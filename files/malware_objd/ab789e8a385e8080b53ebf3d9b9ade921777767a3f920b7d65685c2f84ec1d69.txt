
ab789e8a385e8080b53ebf3d9b9ade921777767a3f920b7d65685c2f84ec1d69.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	mov    DWORD PTR ds:0x446874,0x401a1c
  40100d:	pop    ebp
  40100e:	ret    
  40100f:	int3   
  401010:	push   ebp
  401011:	mov    ebp,esp
  401013:	mov    DWORD PTR ds:0x446874,0x43f5e7
  40101d:	pop    ebp
  40101e:	ret    
  40101f:	int3   
  401020:	push   ebp
  401021:	mov    ebp,esp
  401023:	mov    eax,DWORD PTR [ebp+0x8]
  401026:	mov    eax,DWORD PTR [eax-0x4]
  401029:	pop    ebp
  40102a:	ret    
  40102b:	int3   
  40102c:	int3   
  40102d:	int3   
  40102e:	int3   
  40102f:	int3   
  401030:	push   ebp
  401031:	mov    ebp,esp
  401033:	sub    esp,0xc
  401036:	mov    DWORD PTR [ebp-0x4],0x0
  40103d:	jmp    0x401048
  40103f:	mov    eax,DWORD PTR [ebp-0x4]
  401042:	add    eax,0x1
  401045:	mov    DWORD PTR [ebp-0x4],eax
  401048:	mov    ecx,DWORD PTR [ebp-0x4]
  40104b:	cmp    ecx,DWORD PTR [ebp+0x8]
  40104e:	jae    0x40109f
  401050:	mov    edx,DWORD PTR [ebp-0x4]
  401053:	mov    eax,DWORD PTR [ebp+0xc]
  401056:	movzx  ecx,WORD PTR [eax+edx*2]
  40105a:	sar    ecx,0xc
  40105d:	cmp    ecx,0x3
  401060:	jne    0x40109d
  401062:	mov    DWORD PTR [ebp-0xc],0xfff
  401069:	mov    edx,DWORD PTR [ebp-0x4]
  40106c:	mov    eax,DWORD PTR [ebp+0xc]
  40106f:	movzx  ecx,WORD PTR [eax+edx*2]
  401073:	and    ecx,DWORD PTR [ebp-0xc]
  401076:	add    ecx,0x43
  401079:	mov    DWORD PTR [ebp-0x8],ecx
  40107c:	mov    edx,DWORD PTR [ebp+0x18]
  40107f:	mov    eax,DWORD PTR [ebp+0x10]
  401082:	add    eax,DWORD PTR [edx]
  401084:	mov    ecx,DWORD PTR [ebp-0x8]
  401087:	mov    edx,DWORD PTR [eax+ecx*1-0x43]
  40108b:	add    edx,DWORD PTR [ebp+0x14]
  40108e:	mov    eax,DWORD PTR [ebp+0x18]
  401091:	mov    ecx,DWORD PTR [ebp+0x10]
  401094:	add    ecx,DWORD PTR [eax]
  401096:	mov    eax,DWORD PTR [ebp-0x8]
  401099:	mov    DWORD PTR [ecx+eax*1-0x43],edx
  40109d:	jmp    0x40103f
  40109f:	mov    esp,ebp
  4010a1:	pop    ebp
  4010a2:	ret    
  4010a3:	int3   
  4010a4:	int3   
  4010a5:	int3   
  4010a6:	int3   
  4010a7:	int3   
  4010a8:	int3   
  4010a9:	int3   
  4010aa:	int3   
  4010ab:	int3   
  4010ac:	int3   
  4010ad:	int3   
  4010ae:	int3   
  4010af:	int3   
  4010b0:	push   ebp
  4010b1:	mov    ebp,esp
  4010b3:	sub    esp,0x14
  4010b6:	mov    eax,DWORD PTR [ebp+0x8]
  4010b9:	cmp    DWORD PTR [eax+0x4],0x0
  4010bd:	je     0x401107
  4010bf:	mov    DWORD PTR [ebp-0x14],0x2a1
  4010c6:	mov    ecx,DWORD PTR [ebp+0x8]
  4010c9:	mov    edx,DWORD PTR [ecx+0x4]
  4010cc:	sub    edx,0x8
  4010cf:	shr    edx,1
  4010d1:	mov    DWORD PTR [ebp-0xc],edx
  4010d4:	mov    eax,DWORD PTR [ebp+0x8]
  4010d7:	add    eax,0x8
  4010da:	mov    DWORD PTR [ebp-0x10],eax
  4010dd:	mov    ecx,DWORD PTR [ebp+0x8]
  4010e0:	push   ecx
  4010e1:	mov    edx,DWORD PTR [ebp+0x10]
  4010e4:	push   edx
  4010e5:	mov    eax,DWORD PTR [ebp+0xc]
  4010e8:	push   eax
  4010e9:	mov    ecx,DWORD PTR [ebp-0x10]
  4010ec:	push   ecx
  4010ed:	mov    edx,DWORD PTR [ebp-0xc]
  4010f0:	push   edx
  4010f1:	call   0x401030
  4010f6:	add    esp,0x14
  4010f9:	mov    eax,DWORD PTR [ebp+0x8]
  4010fc:	mov    ecx,DWORD PTR [ebp+0x8]
  4010ff:	add    ecx,DWORD PTR [eax+0x4]
  401102:	mov    DWORD PTR [ebp+0x8],ecx
  401105:	jmp    0x4010b6
  401107:	mov    esp,ebp
  401109:	pop    ebp
  40110a:	ret    
  40110b:	int3   
  40110c:	int3   
  40110d:	int3   
  40110e:	int3   
  40110f:	int3   
  401110:	push   ebp
  401111:	mov    ebp,esp
  401113:	pop    ebp
  401114:	ret    
  401115:	int3   
  401116:	int3   
  401117:	int3   
  401118:	int3   
  401119:	int3   
  40111a:	int3   
  40111b:	int3   
  40111c:	int3   
  40111d:	int3   
  40111e:	int3   
  40111f:	int3   
  401120:	push   ebp
  401121:	mov    ebp,esp
  401123:	push   ecx
  401124:	mov    DWORD PTR [ebp-0x4],0x4
  40112b:	push   0x40
  40112d:	push   0x3000
  401132:	mov    eax,DWORD PTR [ebp+0x8]
  401135:	push   eax
  401136:	push   0x0
  401138:	call   DWORD PTR ds:0x442dc0
  40113e:	mov    esp,ebp
  401140:	pop    ebp
  401141:	ret    
  401142:	int3   
  401143:	int3   
  401144:	int3   
  401145:	int3   
  401146:	int3   
  401147:	int3   
  401148:	int3   
  401149:	int3   
  40114a:	int3   
  40114b:	int3   
  40114c:	int3   
  40114d:	int3   
  40114e:	int3   
  40114f:	int3   
  401150:	push   ebp
  401151:	mov    ebp,esp
  401153:	pop    ebp
  401154:	ret    
  401155:	int3   
  401156:	int3   
  401157:	int3   
  401158:	int3   
  401159:	int3   
  40115a:	int3   
  40115b:	int3   
  40115c:	int3   
  40115d:	int3   
  40115e:	int3   
  40115f:	int3   
  401160:	push   ebp
  401161:	mov    ebp,esp
  401163:	sub    esp,0x8
  401166:	mov    eax,DWORD PTR [ebp+0x8]
  401169:	mov    DWORD PTR [ebp-0x4],eax
  40116c:	mov    ecx,DWORD PTR [ebp+0xc]
  40116f:	mov    DWORD PTR [ebp-0x8],ecx
  401172:	mov    edx,DWORD PTR [ebp-0x4]
  401175:	cmp    edx,DWORD PTR [ebp-0x8]
  401178:	jae    0x401181
  40117a:	mov    eax,DWORD PTR [ebp-0x4]
  40117d:	jmp    0x401184
  40117f:	jmp    0x401184
  401181:	mov    eax,DWORD PTR [ebp-0x8]
  401184:	mov    esp,ebp
  401186:	pop    ebp
  401187:	ret    
  401188:	int3   
  401189:	int3   
  40118a:	int3   
  40118b:	int3   
  40118c:	int3   
  40118d:	int3   
  40118e:	int3   
  40118f:	int3   
  401190:	push   ebp
  401191:	mov    ebp,esp
  401193:	sub    esp,0x20
  401196:	mov    DWORD PTR [ebp-0x8],0x37
  40119d:	mov    DWORD PTR [ebp-0x10],0x0
  4011a4:	jmp    0x4011af
  4011a6:	mov    eax,DWORD PTR [ebp-0x10]
  4011a9:	add    eax,0x4
  4011ac:	mov    DWORD PTR [ebp-0x10],eax
  4011af:	mov    ecx,DWORD PTR [ebp-0x10]
  4011b2:	cmp    ecx,DWORD PTR [ebp+0xc]
  4011b5:	jae    0x40125b
  4011bb:	mov    DWORD PTR [ebp-0x8],0x1425
  4011c2:	mov    DWORD PTR [ebp-0x8],0x37
  4011c9:	mov    edx,DWORD PTR [ebp-0x10]
  4011cc:	add    edx,0x94
  4011d2:	mov    DWORD PTR ds:0x446878,edx
  4011d8:	mov    eax,DWORD PTR [ebp+0x8]
  4011db:	add    eax,DWORD PTR [ebp-0x10]
  4011de:	mov    ecx,DWORD PTR [eax]
  4011e0:	add    ecx,DWORD PTR [ebp-0x10]
  4011e3:	mov    edx,DWORD PTR [ebp+0x8]
  4011e6:	add    edx,DWORD PTR [ebp-0x10]
  4011e9:	mov    DWORD PTR [edx],ecx
  4011eb:	mov    eax,DWORD PTR [ebp-0xc]
  4011ee:	mov    DWORD PTR [ebp-0x14],eax
  4011f1:	mov    DWORD PTR [ebp-0x8],0x1425
  4011f8:	mov    ecx,DWORD PTR ds:0x446878
  4011fe:	mov    DWORD PTR [ebp-0x20],ecx
  401201:	mov    edx,DWORD PTR [ebp-0x20]
  401204:	mov    DWORD PTR [ebp-0x1c],edx
  401207:	mov    eax,DWORD PTR [ebp-0x1c]
  40120a:	mov    DWORD PTR [ebp-0x18],eax
  40120d:	cmp    DWORD PTR [ebp-0x10],0x0
  401211:	jne    0x401243
  401213:	push   0x0
  401215:	push   0x80
  40121a:	push   0x3
  40121c:	push   0x0
  40121e:	push   0x3
  401220:	push   0x1
  401222:	push   0x44687c
  401227:	call   DWORD PTR ds:0x442dc4
  40122d:	mov    DWORD PTR [ebp-0x4],eax
  401230:	cmp    DWORD PTR [ebp-0x4],0xffffffff
  401234:	je     0x40123c
  401236:	cmp    DWORD PTR [ebp-0x4],0x0
  40123a:	jne    0x401243
  40123c:	mov    eax,0x42
  401241:	jmp    0x40125b
  401243:	mov    ecx,DWORD PTR [ebp+0x8]
  401246:	add    ecx,DWORD PTR [ebp-0x10]
  401249:	mov    edx,DWORD PTR [ecx]
  40124b:	xor    edx,DWORD PTR [ebp-0x18]
  40124e:	mov    eax,DWORD PTR [ebp+0x8]
  401251:	add    eax,DWORD PTR [ebp-0x10]
  401254:	mov    DWORD PTR [eax],edx
  401256:	jmp    0x4011a6
  40125b:	mov    esp,ebp
  40125d:	pop    ebp
  40125e:	ret    
  40125f:	int3   
  401260:	push   ebp
  401261:	mov    ebp,esp
  401263:	xor    eax,eax
  401265:	pop    ebp
  401266:	ret    0x10
  401269:	int3   
  40126a:	int3   
  40126b:	int3   
  40126c:	int3   
  40126d:	int3   
  40126e:	int3   
  40126f:	int3   
  401270:	push   ebp
  401271:	mov    ebp,esp
  401273:	sub    esp,0x1bc
  401279:	pusha  
  40127a:	mov    DWORD PTR ds:0x446980,ebp
  401280:	push   0x0
  401282:	push   0x2
  401284:	push   0x0
  401286:	push   0x0
  401288:	push   0x80000000
  40128d:	push   0x80000000
  401292:	push   0x80000000
  401297:	push   0x80000000
  40129c:	push   0xcf0000
  4012a1:	push   0x442074
  4012a6:	push   0x44206c
  4012ab:	push   0x0
  4012ad:	call   DWORD PTR ds:0x443088
  4012b3:	mov    DWORD PTR [ebp-0x18c],eax
  4012b9:	lea    eax,[ebp-0x14c]
  4012bf:	push   eax
  4012c0:	call   DWORD PTR ds:0x44308c
  4012c6:	push   0x104
  4012cb:	lea    ecx,[ebp-0x110]
  4012d1:	push   ecx
  4012d2:	call   DWORD PTR ds:0x442dc8
  4012d8:	mov    DWORD PTR [ebp-0x14c],0x30
  4012e2:	mov    DWORD PTR [ebp-0x148],0x3
  4012ec:	mov    DWORD PTR [ebp-0x144],0x401260
  4012f6:	mov    DWORD PTR [ebp-0x140],0x0
  401300:	mov    DWORD PTR [ebp-0x13c],0x0
  40130a:	mov    DWORD PTR [ebp-0x138],0x2
  401314:	push   0x7f00
  401319:	push   0x0
  40131b:	call   DWORD PTR ds:0x443090
  401321:	mov    DWORD PTR [ebp-0x134],eax
  401327:	push   0x7f00
  40132c:	push   0x0
  40132e:	call   DWORD PTR ds:0x443094
  401334:	mov    DWORD PTR [ebp-0x130],eax
  40133a:	push   0x0
  40133c:	call   DWORD PTR ds:0x443330
  401342:	mov    DWORD PTR [ebp-0x12c],eax
  401348:	mov    DWORD PTR [ebp-0x128],0x0
  401352:	mov    DWORD PTR [ebp-0x124],0x44206c
  40135c:	push   0x7f00
  401361:	push   0x0
  401363:	call   DWORD PTR ds:0x443090
  401369:	mov    DWORD PTR [ebp-0x120],eax
  40136f:	push   0x0
  401371:	push   0x2
  401373:	push   0x0
  401375:	push   0x0
  401377:	push   0x80000000
  40137c:	push   0x80000000
  401381:	push   0x80000000
  401386:	push   0x80000000
  40138b:	push   0xcf0000
  401390:	push   0x44207c
  401395:	push   0x44206c
  40139a:	push   0x0
  40139c:	call   DWORD PTR ds:0x443088
  4013a2:	mov    DWORD PTR [ebp-0x18c],eax
  4013a8:	lea    edx,[ebp-0x14c]
  4013ae:	push   edx
  4013af:	call   DWORD PTR ds:0x44308c
  4013b5:	mov    DWORD PTR [ebp-0x194],0x0
  4013bf:	mov    eax,ds:0x442dc4
  4013c4:	mov    DWORD PTR [ebp-0x1a8],eax
  4013ca:	mov    DWORD PTR [ebp-0x114],0x0
  4013d4:	mov    DWORD PTR [ebp-0x188],0x64
  4013de:	mov    DWORD PTR [ebp-0x11c],0x1
  4013e8:	mov    DWORD PTR [ebp-0x194],0x0
  4013f2:	mov    DWORD PTR [ebp-0x154],0x0
  4013fc:	mov    DWORD PTR [ebp-0x184],0x1
  401406:	mov    DWORD PTR [ebp-0x118],0x3
  401410:	mov    DWORD PTR [ebp-0x114],0x0
  40141a:	mov    DWORD PTR [ebp-0x188],0x64
  401424:	mov    DWORD PTR [ebp-0x11c],0x1
  40142e:	mov    DWORD PTR [ebp-0x194],0x0
  401438:	mov    DWORD PTR [ebp-0x154],0x0
  401442:	mov    DWORD PTR [ebp-0x184],0x1
  40144c:	mov    DWORD PTR [ebp-0x118],0x3
  401456:	mov    DWORD PTR [ebp-0x114],0x0
  401460:	mov    DWORD PTR [ebp-0x188],0x64
  40146a:	mov    DWORD PTR [ebp-0x11c],0x1
  401474:	mov    DWORD PTR [ebp-0x194],0x0
  40147e:	mov    DWORD PTR [ebp-0x154],0x0
  401488:	mov    DWORD PTR [ebp-0x184],0x1
  401492:	mov    DWORD PTR [ebp-0x118],0x3
  40149c:	push   0x104
  4014a1:	lea    ecx,[ebp-0x110]
  4014a7:	push   ecx
  4014a8:	call   DWORD PTR ds:0x442dc8
  4014ae:	call   0x401970
  4014b3:	push   0x442084
  4014b8:	push   0x442094
  4014bd:	call   DWORD PTR ds:0x442dcc
  4014c3:	push   eax
  4014c4:	call   DWORD PTR ds:0x442dd0
  4014ca:	mov    DWORD PTR [ebp-0x17c],eax
  4014d0:	lea    edx,[ebp-0x158]
  4014d6:	push   edx
  4014d7:	push   0x20019
  4014dc:	push   0x0
  4014de:	push   0x446864
  4014e3:	push   0x80000002
  4014e8:	call   DWORD PTR [ebp-0x17c]
  4014ee:	test   eax,eax
  4014f0:	je     0x4014f9
  4014f2:	xor    eax,eax
  4014f4:	jmp    0x401967
  4014f9:	lea    eax,[ebp-0x158]
  4014ff:	push   eax
  401500:	push   0x20019
  401505:	push   0x0
  401507:	push   0x4420a0
  40150c:	mov    ecx,DWORD PTR [ebp-0x158]
  401512:	push   ecx
  401513:	call   DWORD PTR [ebp-0x17c]
  401519:	test   eax,eax
  40151b:	je     0x401524
  40151d:	xor    eax,eax
  40151f:	jmp    0x401967
  401524:	lea    edx,[ebp-0x158]
  40152a:	push   edx
  40152b:	push   0x20019
  401530:	push   0x0
  401532:	push   0x4420b4
  401537:	mov    eax,DWORD PTR [ebp-0x158]
  40153d:	push   eax
  40153e:	call   DWORD PTR [ebp-0x17c]
  401544:	test   eax,eax
  401546:	je     0x40154f
  401548:	xor    eax,eax
  40154a:	jmp    0x401967
  40154f:	lea    ecx,[ebp-0x158]
  401555:	push   ecx
  401556:	push   0x20019
  40155b:	push   0x0
  40155d:	push   0x4420c4
  401562:	mov    edx,DWORD PTR [ebp-0x158]
  401568:	push   edx
  401569:	call   DWORD PTR [ebp-0x17c]
  40156f:	test   eax,eax
  401571:	je     0x40157a
  401573:	xor    eax,eax
  401575:	jmp    0x401967
  40157a:	lea    eax,[ebp-0x158]
  401580:	push   eax
  401581:	push   0x20019
  401586:	push   0x0
  401588:	push   0x446868
  40158d:	mov    ecx,DWORD PTR [ebp-0x158]
  401593:	push   ecx
  401594:	call   DWORD PTR [ebp-0x17c]
  40159a:	test   eax,eax
  40159c:	je     0x4015a5
  40159e:	xor    eax,eax
  4015a0:	jmp    0x401967
  4015a5:	lea    edx,[ebp-0x158]
  4015ab:	push   edx
  4015ac:	push   0x20019
  4015b1:	push   0x0
  4015b3:	push   0x44686c
  4015b8:	mov    eax,DWORD PTR [ebp-0x158]
  4015be:	push   eax
  4015bf:	call   DWORD PTR [ebp-0x17c]
  4015c5:	test   eax,eax
  4015c7:	je     0x4015d0
  4015c9:	xor    eax,eax
  4015cb:	jmp    0x401967
  4015d0:	lea    ecx,[ebp-0x158]
  4015d6:	push   ecx
  4015d7:	push   0x20019
  4015dc:	push   0x0
  4015de:	push   0x4420d0
  4015e3:	mov    edx,DWORD PTR [ebp-0x158]
  4015e9:	push   edx
  4015ea:	call   DWORD PTR [ebp-0x17c]
  4015f0:	test   eax,eax
  4015f2:	je     0x401608
  4015f4:	push   0x104
  4015f9:	push   0x5
  4015fb:	call   DWORD PTR ds:0x442dc8
  401601:	xor    eax,eax
  401603:	jmp    0x401967
  401608:	lea    eax,[ebp-0x158]
  40160e:	push   eax
  40160f:	push   0x20019
  401614:	push   0x0
  401616:	push   0x446870
  40161b:	mov    ecx,DWORD PTR [ebp-0x158]
  401621:	push   ecx
  401622:	call   DWORD PTR [ebp-0x17c]
  401628:	test   eax,eax
  40162a:	je     0x401633
  40162c:	xor    eax,eax
  40162e:	jmp    0x401967
  401633:	lea    edx,[ebp-0x158]
  401639:	push   edx
  40163a:	push   0x20019
  40163f:	push   0x0
  401641:	push   0x442120
  401646:	mov    eax,DWORD PTR [ebp-0x158]
  40164c:	push   eax
  40164d:	call   DWORD PTR [ebp-0x17c]
  401653:	test   eax,eax
  401655:	je     0x40165e
  401657:	xor    eax,eax
  401659:	jmp    0x401967
  40165e:	lea    ecx,[ebp-0x158]
  401664:	push   ecx
  401665:	push   0x20019
  40166a:	push   0x0
  40166c:	push   0x442130
  401671:	mov    edx,DWORD PTR [ebp-0x158]
  401677:	push   edx
  401678:	call   DWORD PTR [ebp-0x17c]
  40167e:	test   eax,eax
  401680:	jne    0x401689
  401682:	xor    eax,eax
  401684:	jmp    0x401967
  401689:	push   0x104
  40168e:	push   0x44687c
  401693:	call   DWORD PTR ds:0x442dc8
  401699:	push   0x442144
  40169e:	push   0x44687c
  4016a3:	call   DWORD PTR ds:0x442dd4
  4016a9:	call   0x401000
  4016ae:	mov    eax,ds:0x446874
  4016b3:	push   eax
  4016b4:	call   0x401020
  4016b9:	add    esp,0x4
  4016bc:	mov    DWORD PTR [ebp-0x198],eax
  4016c2:	mov    ecx,DWORD PTR [ebp-0x198]
  4016c8:	push   ecx
  4016c9:	call   0x401120
  4016ce:	add    esp,0x4
  4016d1:	mov    DWORD PTR [ebp-0x190],eax
  4016d7:	mov    edx,DWORD PTR [ebp-0x198]
  4016dd:	push   edx
  4016de:	push   0x0
  4016e0:	mov    eax,DWORD PTR [ebp-0x190]
  4016e6:	push   eax
  4016e7:	call   0x401150
  4016ec:	add    esp,0xc
  4016ef:	mov    ecx,DWORD PTR [ebp-0x198]
  4016f5:	mov    DWORD PTR [ebp-0x1a0],ecx
  4016fb:	mov    edx,DWORD PTR [ebp-0x194]
  401701:	cmp    edx,DWORD PTR [ebp-0x198]
  401707:	jae    0x401792
  40170d:	mov    eax,DWORD PTR [ebp-0x1a0]
  401713:	push   eax
  401714:	mov    ecx,DWORD PTR [ebp-0x188]
  40171a:	push   ecx
  40171b:	call   0x401160
  401720:	add    esp,0x8
  401723:	mov    DWORD PTR [ebp-0x1a4],eax
  401729:	mov    edx,DWORD PTR [ebp-0x1a4]
  40172f:	push   edx
  401730:	mov    eax,ds:0x446874
  401735:	add    eax,DWORD PTR [ebp-0x154]
  40173b:	push   eax
  40173c:	mov    ecx,DWORD PTR [ebp-0x190]
  401742:	add    ecx,DWORD PTR [ebp-0x194]
  401748:	push   ecx
  401749:	call   0x4416d4
  40174e:	add    esp,0xc
  401751:	mov    edx,DWORD PTR [ebp-0x11c]
  401757:	add    edx,DWORD PTR [ebp-0x188]
  40175d:	add    edx,DWORD PTR [ebp-0x154]
  401763:	mov    DWORD PTR [ebp-0x154],edx
  401769:	mov    eax,DWORD PTR [ebp-0x194]
  40176f:	add    eax,DWORD PTR [ebp-0x188]
  401775:	mov    DWORD PTR [ebp-0x194],eax
  40177b:	mov    ecx,DWORD PTR [ebp-0x1a0]
  401781:	sub    ecx,DWORD PTR [ebp-0x1a4]
  401787:	mov    DWORD PTR [ebp-0x1a0],ecx
  40178d:	jmp    0x4016fb
  401792:	mov    edx,DWORD PTR [ebp-0x198]
  401798:	push   edx
  401799:	mov    eax,DWORD PTR [ebp-0x190]
  40179f:	push   eax
  4017a0:	call   0x401190
  4017a5:	add    esp,0x8
  4017a8:	mov    DWORD PTR [ebp-0x154],0x0
  4017b2:	mov    DWORD PTR [ebp-0x1ac],0x0
  4017bc:	call   0x401010
  4017c1:	mov    ecx,DWORD PTR ds:0x446874
  4017c7:	push   ecx
  4017c8:	call   0x401020
  4017cd:	add    esp,0x4
  4017d0:	mov    DWORD PTR [ebp-0x1b0],eax
  4017d6:	mov    edx,DWORD PTR [ebp-0x1b0]
  4017dc:	push   edx
  4017dd:	call   0x401120
  4017e2:	add    esp,0x4
  4017e5:	mov    DWORD PTR [ebp-0x150],eax
  4017eb:	mov    eax,DWORD PTR [ebp-0x1b0]
  4017f1:	push   eax
  4017f2:	push   0x0
  4017f4:	mov    ecx,DWORD PTR [ebp-0x150]
  4017fa:	push   ecx
  4017fb:	call   0x401150
  401800:	add    esp,0xc
  401803:	mov    edx,DWORD PTR [ebp-0x1b0]
  401809:	mov    DWORD PTR [ebp-0x1b8],edx
  40180f:	mov    eax,DWORD PTR [ebp-0x1ac]
  401815:	cmp    eax,DWORD PTR [ebp-0x1b0]
  40181b:	jae    0x4018a7
  401821:	mov    ecx,DWORD PTR [ebp-0x1b8]
  401827:	push   ecx
  401828:	mov    edx,DWORD PTR [ebp-0x188]
  40182e:	push   edx
  40182f:	call   0x401160
  401834:	add    esp,0x8
  401837:	mov    DWORD PTR [ebp-0x1bc],eax
  40183d:	mov    eax,DWORD PTR [ebp-0x1bc]
  401843:	push   eax
  401844:	mov    ecx,DWORD PTR ds:0x446874
  40184a:	add    ecx,DWORD PTR [ebp-0x154]
  401850:	push   ecx
  401851:	mov    edx,DWORD PTR [ebp-0x150]
  401857:	add    edx,DWORD PTR [ebp-0x1ac]
  40185d:	push   edx
  40185e:	call   0x4416d4
  401863:	add    esp,0xc
  401866:	mov    eax,DWORD PTR [ebp-0x11c]
  40186c:	add    eax,DWORD PTR [ebp-0x188]
  401872:	add    eax,DWORD PTR [ebp-0x154]
  401878:	mov    DWORD PTR [ebp-0x154],eax
  40187e:	mov    ecx,DWORD PTR [ebp-0x1ac]
  401884:	add    ecx,DWORD PTR [ebp-0x188]
  40188a:	mov    DWORD PTR [ebp-0x1ac],ecx
  401890:	mov    edx,DWORD PTR [ebp-0x1b8]
  401896:	sub    edx,DWORD PTR [ebp-0x1bc]
  40189c:	mov    DWORD PTR [ebp-0x1b8],edx
  4018a2:	jmp    0x40180f
  4018a7:	mov    eax,DWORD PTR [ebp-0x1b0]
  4018ad:	push   eax
  4018ae:	mov    ecx,DWORD PTR [ebp-0x150]
  4018b4:	push   ecx
  4018b5:	call   0x401190
  4018ba:	add    esp,0x8
  4018bd:	mov    edx,DWORD PTR [ebp-0x190]
  4018c3:	mov    eax,DWORD PTR [ebp-0x150]
  4018c9:	mov    DWORD PTR [edx],eax
  4018cb:	push   0x40000
  4018d0:	call   0x401120
  4018d5:	add    esp,0x4
  4018d8:	mov    DWORD PTR [ebp-0x4],eax
  4018db:	lea    ecx,[ebp-0x158]
  4018e1:	push   ecx
  4018e2:	push   0x20019
  4018e7:	push   0x0
  4018e9:	push   0x44215c
  4018ee:	push   0x80000002
  4018f3:	call   DWORD PTR ds:0x443398
  4018f9:	test   eax,eax
  4018fb:	je     0x401901
  4018fd:	xor    eax,eax
  4018ff:	jmp    0x401967
  401901:	push   0x3d200
  401906:	mov    edx,DWORD PTR [ebp-0x190]
  40190c:	push   edx
  40190d:	mov    eax,DWORD PTR [ebp-0x4]
  401910:	add    eax,0x300
  401915:	push   eax
  401916:	call   0x4416d4
  40191b:	add    esp,0xc
  40191e:	mov    ecx,DWORD PTR [ebp-0x4]
  401921:	sub    ecx,0x400000
  401927:	push   ecx
  401928:	mov    edx,DWORD PTR [ebp-0x4]
  40192b:	push   edx
  40192c:	mov    eax,DWORD PTR [ebp-0x150]
  401932:	push   eax
  401933:	call   0x4010b0
  401938:	add    esp,0xc
  40193b:	mov    esp,DWORD PTR ds:0x446980
  401941:	pop    ecx
  401942:	mov    ecx,DWORD PTR [ebp-0x4]
  401945:	add    ecx,0x3d190
  40194b:	mov    edx,ecx
  40194d:	call   0x401952
  401952:	pop    eax
  401953:	call   0x401958
  401958:	pop    eax
  401959:	call   0x40195e
  40195e:	pop    eax
  40195f:	call   0x401964
  401964:	pop    eax
  401965:	jmp    edx
  401967:	mov    esp,ebp
  401969:	pop    ebp
  40196a:	ret    
  40196b:	int3   
  40196c:	int3   
  40196d:	int3   
  40196e:	int3   
  40196f:	int3   
  401970:	push   ebp
  401971:	mov    ebp,esp
  401973:	mov    eax,ds:0x442014
  401978:	mov    BYTE PTR [eax+0x3],0x73
  40197c:	mov    ecx,DWORD PTR ds:0x442014
  401982:	mov    BYTE PTR [ecx+0x4],0x74
  401986:	mov    edx,DWORD PTR ds:0x442014
  40198c:	mov    BYTE PTR [edx+0x5],0x65
  401990:	mov    eax,ds:0x442014
  401995:	mov    BYTE PTR [eax+0x6],0x6d
  401999:	mov    ecx,DWORD PTR ds:0x442014
  40199f:	mov    BYTE PTR [ecx+0x7],0x33
  4019a3:	mov    edx,DWORD PTR ds:0x442014
  4019a9:	mov    BYTE PTR [edx+0x8],0x32
  4019ad:	mov    eax,ds:0x442014
  4019b2:	mov    BYTE PTR [eax+0x9],0x5c
  4019b6:	mov    ecx,DWORD PTR ds:0x442014
  4019bc:	mov    BYTE PTR [ecx+0xa],0x61
  4019c0:	mov    edx,DWORD PTR ds:0x442014
  4019c6:	mov    BYTE PTR [edx+0xb],0x74
  4019ca:	mov    eax,ds:0x442014
  4019cf:	mov    BYTE PTR [eax+0xc],0x6c
  4019d3:	mov    ecx,DWORD PTR ds:0x442014
  4019d9:	mov    BYTE PTR [ecx+0xd],0x2e
  4019dd:	mov    edx,DWORD PTR ds:0x442014
  4019e3:	mov    BYTE PTR [edx+0xe],0x64
  4019e7:	mov    eax,ds:0x442014
  4019ec:	mov    BYTE PTR [eax+0xf],0x6c
  4019f0:	mov    ecx,DWORD PTR ds:0x442014
  4019f6:	mov    BYTE PTR [ecx+0x10],0x6c
  4019fa:	mov    edx,DWORD PTR ds:0x442014
  401a00:	mov    BYTE PTR [edx],0x5c
  401a03:	mov    eax,ds:0x442014
  401a08:	mov    BYTE PTR [eax+0x1],0x73
  401a0c:	mov    ecx,DWORD PTR ds:0x442014
  401a12:	mov    BYTE PTR [ecx+0x2],0x79
  401a16:	pop    ebp
  401a17:	ret    
  401a18:	add    dl,dl
  401a1a:	add    eax,DWORD PTR [eax]
  401a1c:	xchg   esp,eax
  401a1d:	aad    0x43
  401a1f:	add    bl,bl
  401a21:	gs je  0x401a74
  401a24:	out    0x6f,al
  401a26:	arpl   WORD PTR [ecx-0x48],ax
  401a29:	fs jb  0x401a91
  401a2c:	(bad)  
  401a2d:	jae    0x401a2f
  401a2f:	add    al,dl
  401a31:	outs   dx,DWORD PTR ds:[esi]
  401a32:	popa   
  401a33:	fs enter 0x6269,0x72
  401a38:	mov    ch,0x72
  401a3a:	jns    0x401a81
  401a3c:	lods   al,BYTE PTR ds:[esi]
  401a3d:	inc    ecx
  401a3e:	add    BYTE PTR [eax],al
  401a40:	shr    BYTE PTR [edi+0x61],1
  401a43:	fs enter 0x6269,0x72
  401a48:	jne    0x401abc
  401a4a:	jns    0x401a91
  401a4c:	mov    WORD PTR [edi+0x0],ss
  401a4f:	add    BYTE PTR [ebx+0x65],bl
  401a52:	je     0x401aa1
  401a54:	imul   esp,DWORD PTR [ebp+esi*2+0x6c],0x79
  401a59:	dec    eax
  401a5a:	popa   
  401a5b:	outs   dx,BYTE PTR ds:[esi]
  401a5c:	jo     0x401aca
  401a5e:	gs inc ecx
  401a60:	xchg   esp,eax
  401a61:	add    BYTE PTR [eax],al
  401a63:	add    BYTE PTR [edi+0x72],dl
  401a66:	gs popa 
  401a68:	dec    eax
  401a69:	gs inc esi
  401a6b:	imul   edi,DWORD PTR [eax],0x30004165
  401a71:	jae    0x401ae7
  401a73:	jb     0x401aac
  401a75:	popa   
  401a76:	je     0x401ab9
  401a78:	xchg   esp,eax
  401a79:	add    BYTE PTR [eax],al
  401a7b:	add    BYTE PTR [ebx+0x65],dl
  401a7e:	je     0x401ad7
  401a80:	add    BYTE PTR ds:0x236f646e,ch
  401a86:	jae    0x401acc
  401a88:	imul   eax,DWORD PTR [esi],0xfb746364
  401a8e:	jb     0x401b09
  401a90:	inc    ecx
  401a91:	xchg   esp,eax
  401a92:	add    BYTE PTR [eax],al
  401a94:	add    bl,dl
  401a96:	arpl   WORD PTR [ebp+ecx*2+0x3],si
  401a9a:	gs jne 0x401b09
  401a9d:	icebp  
  401a9e:	dec    eax
  401a9f:	popa   
  401aa0:	outs   dx,BYTE PTR ds:[esi]
  401aa1:	clc    
  401aa2:	ins    BYTE PTR es:[edi],dx
  401aa3:	gs push edi
  401aa5:	xchg   esp,eax
  401aa6:	add    BYTE PTR [eax],al
  401aa8:	add    BYTE PTR [eax-0x5fffbfff],bl
  401aae:	add    DWORD PTR [eax+0x0],eax
  401ab1:	js     0x401ab4
  401ab3:	inc    eax
  401ab4:	add    BYTE PTR [eax-0x23ffbfff],al
  401aba:	add    DWORD PTR [eax+0x0],eax
  401abd:	rol    BYTE PTR [ecx],0x40
  401ac0:	add    BYTE PTR [ecx+eax*1+0x19c0040],dh
  401ac7:	inc    eax
  401ac8:	add    BYTE PTR [ebx+0x63],bl
  401acb:	je     0x401b1d
  401acd:	xchg   BYTE PTR [ebp+0x63],ch
  401ad0:	inc    ecx
  401ad1:	js     0x401b37
  401ad3:	jb     0x401b3a
  401ad5:	xchg   DWORD PTR [ecx+0x0],esi
  401ad8:	add    BYTE PTR [eax+0x6d],ah
  401adb:	popa   
  401adc:	fs pop eax
  401ade:	bound  esi,QWORD PTR [bp+si+0x75]
  401ae2:	jb     0x401b5d
  401ae4:	inc    ebp
  401ae5:	add    BYTE PTR [edi+edi*1+0x0],bl
  401ae9:	add    BYTE PTR [edi],bh
  401aeb:	arpl   WORD PTR [edx+0x6e],si
  401aee:	xor    DWORD PTR [ebx+esi*1+0x32],ebp
  401af2:	jb     0x401b58
  401af4:	ins    BYTE PTR es:[edi],dx
  401af5:	ins    BYTE PTR es:[edi],dx
  401af6:	xchg   esp,eax
  401af7:	add    BYTE PTR [eax],al
  401af9:	add    BYTE PTR [ecx+0x71],al
  401afc:	jbe    0x401b61
  401afe:	es je  0x401b2f
  401b01:	xor    BYTE PTR fs:[eax+eax*1+0x0],ch
  401b06:	sub    DWORD PTR [ebx+0x6d],esp
  401b09:	jae    0x401b04
  401b0b:	je     0x401b0d
  401b0d:	add    cl,bh
  401b0f:	jno    0x401b87
  401b11:	arpl   WORD PTR [esi],ax
  401b13:	jne    0x401b43
  401b15:	fs call 0x1401b87
  401b1b:	fs ins DWORD PTR es:[edi],dx
  401b1d:	arpl   sp,sp
  401b1f:	ja     0x401b21
  401b21:	add    dl,cl
  401b23:	addr16 jb 0x401b9a
  401b26:	loope  0x401b87
  401b28:	ins    BYTE PTR es:[edi],dx
  401b29:	inc    ecx
  401b2a:	shr    BYTE PTR [edi+ebp*2+0x63],0x94
  401b2f:	add    BYTE PTR [eax],al
  401b31:	add    dl,ch
  401b33:	addr16 jb 0x401baa
  401b36:	rcr    DWORD PTR [edi+0x6c],0x41
  401b3a:	shr    BYTE PTR [edi+ebp*2+0x63],0x94
  401b3f:	add    BYTE PTR [eax],al
  401b41:	add    cl,cl
  401b43:	outs   dx,BYTE PTR ds:[esi]
  401b44:	ins    DWORD PTR es:[edi],dx
  401b45:	popa   
  401b46:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401b47:	push   esi
  401b48:	imul   esp,DWORD PTR [ebp+0x0],0x46664d8b
  401b4f:	jge    0x401bbd
  401b51:	add    BYTE PTR gs:[edx+0x67],ch
  401b55:	jb     0x401bcb
  401b57:	sbb    DWORD PTR [edi+0x6c],0x746d6650
  401b5e:	gs ja  0x401bd5
  401b61:	add    BYTE PTR [eax],al
  401b63:	dec    esp
  401b64:	arpl   WORD PTR [ecx+0x70],sp
  401b67:	push   ebp
  401b68:	ins    BYTE PTR es:[edi],dx
  401b69:	ins    BYTE PTR es:[edi],dx
  401b6a:	outs   dx,DWORD PTR ds:[esi]
  401b6b:	aaa    
  401b6c:	add    BYTE PTR [eax],al
  401b6e:	add    BYTE PTR [edi],bh
  401b70:	arpl   WORD PTR [edx+0x6e],si
  401b73:	cmp    DWORD PTR [ebx+esi*1+0x32],ebp
  401b77:	push   0x64
  401b79:	ins    BYTE PTR es:[edi],dx
  401b7a:	ins    BYTE PTR es:[edi],dx
  401b7b:	xchg   esp,eax
  401b7c:	add    BYTE PTR [eax],al
  401b7e:	add    BYTE PTR [ebx+0x63],dl
  401b81:	je     0x401bd3
  401b83:	es ins DWORD PTR es:[edi],dx
  401b85:	arpl   WORD PTR [ebp+0x27],sp
  401b88:	jno    0x401bd2
  401b8a:	gs cmc 
  401b8c:	jo     0x401b8e
  401b8e:	add    BYTE PTR [eax+eax*1-0x5b6bfc44],dl
  401b95:	pop    ecx
  401b96:	add    BYTE PTR [ecx+ebp*8-0x166bfffd],dl
  401b9d:	add    eax,DWORD PTR [eax]
  401b9f:	xchg   esp,eax
  401ba0:	jmp    0xe9d41ba8
  401ba5:	add    eax,DWORD PTR [eax]
  401ba7:	xchg   esp,eax
  401ba8:	jmp    0xe9d41bb0
  401bad:	add    eax,DWORD PTR [eax]
  401baf:	add    BYTE PTR [ecx+ebp*8-0x166bfffd],dl
  401bb6:	add    eax,DWORD PTR [eax]
  401bb8:	xchg   esp,eax
  401bb9:	jmp    0xe9d41bc1
  401bbe:	add    eax,DWORD PTR [eax]
  401bc0:	xchg   esp,eax
  401bc1:	jmp    0xe9d41bc9
  401bc6:	add    eax,DWORD PTR [eax]
  401bc8:	xchg   esp,eax
  401bc9:	jmp    0xe9d41bd1
  401bce:	add    eax,DWORD PTR [eax]
  401bd0:	xchg   esp,eax
  401bd1:	mov    eax,ds:0xe9940004
  401bd6:	add    eax,DWORD PTR [eax]
  401bd8:	xchg   esp,eax
  401bd9:	jmp    0xe9d41be1
  401bde:	add    eax,DWORD PTR [eax]
  401be0:	xchg   esp,eax
  401be1:	jmp    0xe9d41be9
  401be6:	add    eax,DWORD PTR [eax]
  401be8:	xchg   esp,eax
  401be9:	jmp    0xe9d41bf1
  401bee:	add    eax,DWORD PTR [eax]
  401bf0:	xchg   esp,eax
  401bf1:	jmp    0xe9d41bf9
  401bf6:	add    eax,DWORD PTR [eax]
  401bf8:	xchg   esp,eax
  401bf9:	jmp    0xe9d41c01
  401bfe:	add    eax,DWORD PTR [eax]
  401c00:	xchg   esp,eax
  401c01:	jmp    0xe9d41c09
  401c06:	add    eax,DWORD PTR [eax]
  401c08:	xchg   esp,eax
  401c09:	jmp    0xd41c11
  401c0e:	jmp    0xe940b016
  401c13:	add    eax,DWORD PTR [eax]
  401c15:	xchg   esp,eax
  401c16:	add    cl,ch
  401c18:	add    edx,DWORD PTR [eax+eax*1+0x9403e9]
  401c1f:	jmp    0xe940b027
  401c24:	add    edx,DWORD PTR [eax+eax*1+0x9403e9]
  401c2b:	jmp    0xe940b033
  401c30:	add    edx,DWORD PTR [eax+eax*1+0x9403e9]
  401c37:	jmp    0xe940b03f
  401c3c:	add    edx,DWORD PTR [eax+eax*1+0x9403e9]
  401c43:	jmp    0xe940b04b
  401c48:	add    edx,DWORD PTR [eax+eax*1+0x9403e9]
  401c4f:	jmp    0xe940b057
  401c54:	add    edx,DWORD PTR [eax+eax*1+0x9403e9]
  401c5b:	jmp    0xe940b063
  401c60:	add    edx,DWORD PTR [eax+eax*1+0x9403e9]
  401c67:	jmp    0xe940b06f
  401c6c:	add    edx,DWORD PTR [eax+eax*1+0x9403e9]
  401c73:	jmp    0xe940b07b
  401c78:	add    eax,DWORD PTR [eax]
  401c7a:	xchg   esp,eax
  401c7b:	add    cl,ch
  401c7d:	add    edx,DWORD PTR [eax+eax*1+0x9403e9]
  401c84:	jmp    0x40b08c
  401c89:	jmp    0xe9401d25
  401c8e:	xchg   edi,eax
  401c8f:	add    BYTE PTR [eax],al
  401c91:	mov    ecx,0xad0000d4
  401c96:	cwde   
  401c97:	std    
  401c98:	inc    DWORD PTR [edi]
  401c9a:	xchg   ebp,eax
  401c9b:	je     0x401cec
  401c9d:	jmp    0xe9401d39
  401ca2:	xchg   edi,eax
  401ca3:	add    BYTE PTR [eax],al
  401ca5:	or     DWORD PTR [edi-0x6f1dff02],edx
  401cab:	push   es
  401cac:	add    cl,ch
  401cae:	sar    ebp,cl
  401cb0:	(bad)  
  401cb1:	call   0xe9401d9d
  401cb6:	xchg   edi,eax
  401cb7:	add    BYTE PTR [eax],al
  401cb9:	nop
  401cba:	push   es
  401cbb:	add    DWORD PTR [eax],eax
  401cbd:	jmp    0xe9401d49
  401cc2:	idiv   ebp
  401cc4:	(bad)  
  401cc5:	call   0xe9405d61
  401cca:	xchg   DWORD PTR [eax],eax
  401ccc:	add    cl,ch
  401cce:	cdq    
  401ccf:	add    BYTE PTR [eax],al
  401cd1:	in     al,dx
  401cd2:	xchg   edi,eax
  401cd3:	(bad)  
  401cd4:	jmp    edi
  401cd6:	xchg   edi,eax
  401cd7:	add    BYTE PTR [eax],al
  401cd9:	in     al,dx
  401cda:	xchg   edi,eax
  401cdb:	(bad)  
  401cdc:	(bad)  
  401cdd:	call   0x40b3e2
  401ce2:	jmp    0xe940217e
  401ce7:	jecxz  0x401ce2
  401ce9:	(bad)  
  401cea:	jmp    0xeb401d86
  401cef:	xchg   edi,eax
  401cf0:	add    BYTE PTR [ecx+0x1097e9],al
  401cf6:	jmp    0xe9401da2
  401cfb:	xchg   edi,eax
  401cfc:	adc    BYTE PTR [eax],al
  401cfe:	jmp    0x401d8a
  401d03:	mov    ebp,0xbdfffffd
  401d08:	std    
  401d09:	(bad)  
  401d0a:	jmp    FWORD PTR [ebp+0x7dfffffd]
  401d10:	std    
  401d11:	(bad)  
  401d12:	jmp    FWORD PTR [ecx+0x2d000366]
  401d18:	(bad)  
  401d19:	(bad)  
  401d1a:	jmp    FWORD PTR [ebp-0x3]
  401d1d:	(bad)  
  401d1e:	(bad)  
  401d1f:	jge    0x401d1e
  401d21:	(bad)  
  401d22:	(bad)  
  401d23:	jge    0x401d22
  401d25:	(bad)  
  401d26:	jmp    FWORD PTR [ebp-0x3]
  401d29:	(bad)  
  401d2a:	jmp    FWORD PTR [ebp-0x3]
  401d2d:	(bad)  
  401d2e:	(bad)  
  401d2f:	cmp    eax,0x3dfffffd
  401d34:	int    0x3
  401d36:	add    BYTE PTR [ebp+0x2d000016],cl
  401d3c:	std    
  401d3d:	(bad)  
  401d3e:	(bad)  
  401d3f:	cmp    eax,0xfffffd
  401d44:	cmp    eax,0x2dfffffd
  401d49:	std    
  401d4a:	(bad)  
  401d4b:	jmp    FWORD PTR ds:0xfdfffffd
  401d51:	cld    
  401d52:	(bad)  
  401d53:	(bad)  
  401d54:	std    
  401d55:	cld    
  401d56:	(bad)  
  401d57:	(bad)  
  401d58:	in     eax,dx
  401d59:	cld    
  401d5a:	(bad)  
  401d5b:	(bad)  
  401d5c:	in     eax,dx
  401d5d:	cld    
  401d5e:	(bad)  
  401d5f:	(bad)  
  401d60:	std    
  401d61:	cld    
  401d62:	(bad)  
  401d63:	(bad)  
  401d64:	std    
  401d65:	cld    
  401d66:	(bad)  
  401d67:	(bad)  
  401d68:	in     eax,dx
  401d69:	cld    
  401d6a:	(bad)  
  401d6b:	(bad)  
  401d6c:	in     eax,dx
  401d6d:	or     al,0x0
  401d6f:	add    BYTE PTR [ecx-0x1],ah
  401d72:	(bad)  
  401d73:	(bad)  
  401d74:	mov    ebp,0xadfffffc
  401d79:	cld    
  401d7a:	(bad)  
  401d7b:	call   DWORD PTR [edi+eiz*8-0x186bfffd]
  401d82:	add    eax,DWORD PTR [eax]
  401d84:	xchg   esp,eax
  401d85:	out    0x3,eax
  401d87:	add    BYTE PTR [edi+eiz*8+0x1940003],dl
  401d8e:	jo     0x401df5
  401d90:	or     al,0xae
  401d92:	add    eax,DWORD PTR [eax]
  401d94:	xchg   esp,eax
  401d95:	adc    DWORD PTR [ebp+0x13e99403],eax
  401d9b:	add    BYTE PTR [ecx+ebp*8-0x166bfc81],dl
  401da2:	(bad)  
  401da3:	jmp    FWORD PTR [ebx-0x16]
  401da6:	add    eax,DWORD PTR [eax]
  401da8:	add    BYTE PTR [ecx+ebp*8-0x166bfffd],dl
  401daf:	add    eax,DWORD PTR [eax]
  401db1:	xchg   esp,eax
  401db2:	leave  
  401db3:	add    eax,DWORD PTR [eax]
  401db5:	mov    ah,0xf
  401db7:	pusha  
  401db8:	popa   
  401db9:	enter  0x448,0x0
  401dbd:	xchg   esp,eax
  401dbe:	and    DWORD PTR [esi],ebx
  401dc0:	add    BYTE PTR [ecx+ebp*8-0x166bfc5d],dl
  401dc7:	or     DWORD PTR [eax],eax
  401dc9:	xchg   esp,eax
  401dca:	jmp    0xe9d4215a
  401dcf:	add    eax,DWORD PTR [eax]
  401dd1:	xchg   esp,eax
  401dd2:	jmp    0xe9d41dda
  401dd7:	add    eax,DWORD PTR [eax]
  401dd9:	xchg   esp,eax
  401dda:	sub    DWORD PTR [eax+eax*1],eax
  401ddd:	aam    0xbf
  401ddf:	jno    0x401e46
  401de1:	xor    dh,0x62
  401de4:	add    BYTE PTR [edi+ebp*4-0x166bffe1],dl
  401deb:	rol    DWORD PTR [ebx],cl
  401ded:	xchg   esp,eax
  401dee:	jmp    0xe9d41e1e
  401df3:	xchg   ecx,eax
  401df4:	add    edx,DWORD PTR [eax+eax*1+0x9403e9]
  401dfb:	jmp    0xe940b203
  401e00:	add    edx,DWORD PTR [eax+eax*1+0x429403a9]
  401e07:	jmp    0xe940b20f
  401e0c:	add    eax,DWORD PTR [eax]
  401e0e:	xchg   esp,eax
  401e0f:	add    cl,ch
  401e11:	add    edx,DWORD PTR [eax+eax*1+0x9403e9]
  401e18:	jmp    0xe940b220
  401e1d:	add    edx,DWORD PTR [eax+eax*1+0x9403e9]
  401e24:	jmp    0xe940b22c
  401e29:	add    edx,DWORD PTR [eax+eax*1+0x9403e9]
  401e30:	jmp    0xe940b238
  401e35:	add    edx,DWORD PTR [eax+eax*1+0x9403e9]
  401e3c:	jmp    0xe940b244
  401e41:	add    edx,DWORD PTR [eax+eax*1+0x9403e9]
  401e48:	jmp    0xe940b250
  401e4d:	add    edx,DWORD PTR [eax+eax*1+0x9403e9]
  401e54:	jmp    0xe940b25c
  401e59:	add    edx,DWORD PTR [eax+eax*1+0x9403e9]
  401e60:	jmp    0xe940b268
  401e65:	add    edx,DWORD PTR [eax+eax*1+0x9403e9]
  401e6c:	jmp    0x40b274
  401e71:	jmp    0x40b576
  401e76:	jmp    0xe9401f12
  401e7b:	xchg   edi,eax
  401e7c:	add    BYTE PTR [eax],al
  401e7e:	jmp    0xe9401f1a
  401e83:	xchg   edi,eax
  401e84:	add    BYTE PTR [eax],al
  401e86:	jmp    0xe9401f22
  401e8b:	xchg   edi,eax
  401e8c:	add    BYTE PTR [eax],al
  401e8e:	jmp    0xe9401f2a
  401e93:	xchg   edi,eax
  401e94:	add    BYTE PTR [eax],al
  401e96:	jmp    0xe9401f32
  401e9b:	xchg   edi,eax
  401e9c:	add    BYTE PTR [eax],al
  401e9e:	jmp    0xe9401f3a
  401ea3:	xchg   edi,eax
  401ea4:	add    BYTE PTR [eax],al
  401ea6:	jmp    0xe9401f42
  401eab:	xchg   edi,eax
  401eac:	add    BYTE PTR [eax],al
  401eae:	jmp    0xe9401f4a
  401eb3:	xchg   edi,eax
  401eb4:	add    BYTE PTR [eax],al
  401eb6:	jmp    0xe9401f52
  401ebb:	xchg   edi,eax
  401ebc:	add    BYTE PTR [eax],al
  401ebe:	jmp    0xe9401f5a
  401ec3:	xchg   edi,eax
  401ec4:	add    BYTE PTR [eax],al
  401ec6:	jmp    0xe9401f62
  401ecb:	xchg   edi,eax
  401ecc:	add    BYTE PTR [eax],al
  401ece:	jmp    0xe9401f6a
  401ed3:	xchg   edi,eax
  401ed4:	add    BYTE PTR [eax],al
  401ed6:	jmp    0x40b5db
  401edb:	jmp    0xe9401f77
  401ee0:	xchg   edi,eax
  401ee1:	add    BYTE PTR [eax],al
  401ee3:	jmp    0xe9401f7f
  401ee8:	xchg   edi,eax
  401ee9:	add    BYTE PTR [eax],al
  401eeb:	add    ch,ch
  401eed:	add    DWORD PTR [eax],eax
  401eef:	add    ch,ch
  401ef1:	add    DWORD PTR [eax],eax
  401ef3:	add    BYTE PTR [ebp-0x42ffffff],bh
  401ef9:	add    DWORD PTR [eax],eax
  401efb:	add    BYTE PTR [ebp-0x52ffffff],ch
  401f01:	add    DWORD PTR [eax],eax
  401f03:	add    BYTE PTR [ebp-0x42ffffff],bh
  401f09:	add    DWORD PTR [eax],eax
  401f0b:	add    BYTE PTR [ebp-0x52ffffff],ch
  401f11:	add    DWORD PTR [eax],eax
  401f13:	add    BYTE PTR [ebp+0x1],bh
  401f16:	add    BYTE PTR [eax],al
  401f18:	jge    0x401f1b
  401f1a:	add    BYTE PTR [eax],al
  401f1c:	ins    DWORD PTR es:[edi],dx
  401f1d:	add    DWORD PTR [eax],eax
  401f1f:	add    BYTE PTR [ebp+0x1],ch
  401f22:	add    BYTE PTR [eax],al
  401f24:	jge    0x401f27
  401f26:	add    BYTE PTR [eax],al
  401f28:	jge    0x401f2b
  401f2a:	add    BYTE PTR [eax],al
  401f2c:	ins    DWORD PTR es:[edi],dx
  401f2d:	add    DWORD PTR [eax],eax
  401f2f:	add    BYTE PTR [ebp+0x1],ch
  401f32:	add    BYTE PTR [eax],al
  401f34:	cmp    eax,0x3d000001
  401f39:	add    DWORD PTR [eax],eax
  401f3b:	add    BYTE PTR [eax],al
  401f3d:	sub    eax,0x2d000001
  401f42:	add    DWORD PTR [eax],eax
  401f44:	add    BYTE PTR ds:0x3d000001,bh
  401f4a:	add    DWORD PTR [eax],eax
  401f4c:	add    BYTE PTR ds:0x2d000001,ch
  401f52:	add    DWORD PTR [eax],eax
  401f54:	add    ch,bh
  401f56:	add    BYTE PTR [eax],al
  401f58:	add    ch,bh
  401f5a:	add    BYTE PTR [eax],al
  401f5c:	add    ch,ch
  401f5e:	add    BYTE PTR [eax],al
  401f60:	add    ch,ch
  401f62:	add    BYTE PTR [eax],al
  401f64:	add    BYTE PTR [edi+eiz*8-0x186bfffd],dl
  401f6b:	add    eax,DWORD PTR [eax]
  401f6d:	xchg   esp,eax
  401f6e:	out    0x3,eax
  401f70:	add    BYTE PTR [edi+eiz*8-0x186bfffd],dl
  401f77:	add    eax,DWORD PTR [eax]
  401f79:	xchg   esp,eax
  401f7a:	out    0x3,eax
  401f7c:	add    BYTE PTR [edi+eiz*8-0x186bfffd],dl
  401f83:	add    eax,DWORD PTR [eax]
  401f85:	xchg   esp,eax
  401f86:	out    0x3,eax
  401f88:	add    BYTE PTR [edi+eiz*8-0x186bfffd],dl
  401f8f:	add    eax,DWORD PTR [eax]
  401f91:	xchg   esp,eax
  401f92:	out    0x3,eax
  401f94:	add    BYTE PTR [ecx+ebp*8-0x166bfffd],dl
  401f9b:	add    eax,DWORD PTR [eax]
  401f9d:	xchg   esp,eax
  401f9e:	jmp    0x94401fa6
  401fa3:	jmp    0xa7d41fab
  401fa8:	jl     0x401fad
  401faa:	xchg   esp,eax
  401fab:	jge    0x402029
  401fad:	add    edx,DWORD PTR [ebx+edi*2+0x5794037c]
  401fb4:	jl     0x401fb9
  401fb6:	xchg   esp,eax
  401fb7:	aas    
  401fb8:	jl     0x401fbd
  401fba:	xchg   esp,eax
  401fbb:	sub    DWORD PTR [ebx+eax*1-0x6c],edi
  401fbf:	mov    bh,0x8b
  401fc1:	add    edx,DWORD PTR [ebx+edi*4-0x2c6bfc75]
  401fc8:	mov    eax,DWORD PTR [ebx]
  401fca:	xchg   esp,eax
  401fcb:	fistp  QWORD PTR [ebx+0x3]
  401fce:	xchg   esp,eax
  401fcf:	or     DWORD PTR [ebx+eax*1-0x6c],edi
  401fd3:	idiv   DWORD PTR [ebx+0x3]
  401fd6:	xchg   esp,eax
  401fd7:	sbb    eax,0x4794037c
  401fdc:	jl     0x401fe1
  401fde:	xchg   esp,eax
  401fdf:	add    BYTE PTR [ebx],ah
  401fe1:	jl     0x401f7a
  401fe3:	add    BYTE PTR [ebx+0x7c],bh
  401fe6:	xchg   edi,eax
  401fe7:	add    BYTE PTR [ebx+0x7c],al
  401fea:	xchg   edi,eax
  401feb:	add    BYTE PTR [ebx-0x60ff6884],ch
  401ff1:	jl     0x401f8a
  401ff3:	add    BYTE PTR [ecx+0x7300977c],dl
  401ff9:	jl     0x401f92
  401ffb:	add    bh,dl
  401ffd:	jl     0x401f96
  401fff:	add    BYTE PTR [edi],bl
  402001:	jge    0x401f9a
  402003:	add    BYTE PTR [ebx+0x97007c],bh
  402009:	arpl   WORD PTR [ebp-0x69],di
  40200c:	add    BYTE PTR [edi+0x2b00977d],al
  402012:	jge    0x401fab
  402014:	add    BYTE PTR ds:0x4100977d,dl
  40201a:	jge    0x401fb3
  40201c:	add    BYTE PTR [ecx],dh
  40201e:	jge    0x401fb7
  402020:	add    bh,ch
  402022:	jge    0x401fbb
  402024:	add    BYTE PTR [ecx],al
  402026:	jle    0x401fbf
  402028:	add    BYTE PTR [ebp-0x16ff6876],bh
  40202e:	add    edx,DWORD PTR [eax+eax*1+0x978203]
  402035:	sbb    eax,0x23009782
  40203a:	adc    BYTE PTR [edi-0x687dc500],0x0
  402041:	jns    0x401fc4
  402043:	xchg   edi,eax
  402044:	add    BYTE PTR [ebx-0x7e],ah
  402047:	xchg   edi,eax
  402048:	add    BYTE PTR [ebp-0x7e],cl
  40204b:	xchg   edi,eax
  40204c:	add    ch,ch
  40204e:	adc    BYTE PTR [edi-0x6bfc1700],0x0
  402055:	outs   dx,DWORD PTR ds:[esi]
  402056:	adc    BYTE PTR [edi+0x14db0000],0xff
  40205d:	push   DWORD PTR [eax+0x6cffff83]
  402063:	adc    al,0xff
  402065:	jmp    DWORD PTR [eax]
  402067:	adc    eax,0xcffff
  40206c:	adc    eax,0x1530ffff
  402071:	(bad)  
  402072:	push   DWORD PTR [edx]
  402074:	adc    eax,0x1528ffff
  402079:	(bad)  
  40207a:	(bad)  
  40207b:	mov    esp,0xc0ffff14
  402080:	adc    al,0xff
  402082:	call   DWORD PTR [eax+0x3b]
  402085:	(bad)  
  402086:	inc    DWORD PTR [edx+0x20ffff14]
  40208c:	sub    edi,edi
  40208e:	push   DWORD PTR [eax]
  402090:	and    edi,edi
  402092:	(bad)  
  402093:	call   0x5940212f
  402098:	sub    dh,bh
  40209a:	(bad)  
  40209b:	call   0xaf402137
  4020a0:	repnz std 
  4020a2:	(bad)  
  4020a3:	js     0x40208f
  4020a5:	std    
  4020a6:	inc    DWORD PTR [esi+0x2]
  4020a9:	(bad)  
  4020aa:	call   DWORD PTR [edx-0x6]
  4020ad:	std    
  4020ae:	call   FWORD PTR [esi]
  4020b0:	repnz std 
  4020b2:	dec    DWORD PTR [esi]
  4020b4:	jmp    0xfffd:0xc1fafffd
  4020bb:	idiv   BYTE PTR [ecx-0x4c1d0003]
  4020c1:	std    
  4020c2:	(bad)  
  4020c3:	(bad)  
  4020c4:	stos   DWORD PTR es:[edi],eax
  4020c5:	std    
  4020c6:	inc    DWORD PTR [esi]
  4020c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4020c9:	std    
  4020ca:	call   FWORD PTR [esi]
  4020cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4020cd:	std    
  4020ce:	jmp    DWORD PTR [edx]
  4020d0:	add    BYTE PTR [ebp+edi*8+0x70c9ffff],ah
  4020d7:	add    eax,DWORD PTR [eax]
  4020d9:	retf   
  4020da:	jo     0x4020df
  4020dc:	add    BYTE PTR [ecx+0x70],bh
  4020df:	add    eax,DWORD PTR [eax]
  4020e1:	imul   esi,DWORD PTR [eax+0x3],0x3704900
  4020e8:	add    BYTE PTR ds:0x21000371,bh
  4020ee:	jno    0x4020f3
  4020f0:	add    BYTE PTR [ecx],cl
  4020f2:	jno    0x4020f7
  4020f4:	add    BYTE PTR [ebp-0x18fffc9e],bh
  4020fa:	bound  eax,QWORD PTR [ebx]
  4020fc:	add    BYTE PTR [ebx],al
  4020fe:	arpl   WORD PTR [ebx],ax
  402100:	add    BYTE PTR [edi-0x30fffc9f],bl
  402106:	bound  eax,QWORD PTR [ebx]
  402108:	add    bh,cl
  40210a:	bound  eax,QWORD PTR [ebx]
  40210c:	add    BYTE PTR ds:0x29000361,dh
  402112:	popa   
  402113:	add    eax,DWORD PTR [eax]
  402115:	xor    esp,DWORD PTR [ecx+0x3]
  402118:	add    BYTE PTR [ecx],ah
  40211a:	popa   
  40211b:	add    eax,DWORD PTR [eax]
  40211d:	pop    es
  40211e:	bound  eax,QWORD PTR [ebx]
  402120:	add    BYTE PTR [ebx-0x2efffc9f],ah
  402126:	popa   
  402127:	add    eax,DWORD PTR [eax]
  402129:	mov    DWORD PTR [ecx+0x3],esp
  40212c:	add    BYTE PTR [ebx],dl
  40212e:	add    eax,DWORD PTR fs:[eax]
  402131:	outs   dx,DWORD PTR gs:[esi]
  402133:	add    eax,DWORD PTR [eax]
  402135:	add    BYTE PTR [edi],bl
  402137:	outs   dx,DWORD PTR ds:[esi]
  402138:	add    eax,DWORD PTR [eax]
  40213a:	stc    
  40213b:	outs   dx,BYTE PTR ds:[esi]
  40213c:	add    eax,DWORD PTR [eax]
  40213e:	sub    eax,0xd00036f
  402143:	outs   dx,DWORD PTR ds:[esi]
  402144:	add    eax,DWORD PTR [eax]
  402146:	mov    bh,0x6e
  402148:	add    eax,DWORD PTR [eax]
  40214a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40214b:	outs   dx,DWORD PTR ds:[esi]
  40214c:	add    eax,DWORD PTR [eax]
  40214e:	xchg   esp,eax
  40214f:	imul   esi,DWORD PTR [ecx+0x3],0x3717194
  402156:	xchg   esp,eax
  402157:	stos   DWORD PTR es:[edi],eax
  402158:	jno    0x40215d
  40215a:	xchg   esp,eax
  40215b:	(bad)  
  40215c:	jno    0x402161
  40215e:	xchg   esp,eax
  40215f:	mov    ch,0x71
  402161:	add    edx,DWORD PTR [ecx+eiz*4-0xe6bfc8f]
  402168:	jo     0x40216d
  40216a:	xchg   esp,eax
  40216b:	aad    0x70
  40216d:	add    edx,DWORD PTR [edi+ebx*1+0x7940371]
  402174:	jno    0x402179
  402176:	xchg   esp,eax
  402177:	icebp  
  402178:	jo     0x40217d
  40217a:	xchg   esp,eax
  40217b:	outs   dx,DWORD PTR ds:[esi]
  40217c:	jo     0x402181
  40217e:	xchg   esp,eax
  40217f:	dec    ebp
  402180:	jo     0x402185
  402182:	xchg   esp,eax
  402183:	aas    
  402184:	jo     0x402189
  402186:	xchg   esp,eax
  402187:	lahf   
  402188:	jo     0x40218d
  40218a:	xchg   esp,eax
  40218b:	das    
  40218c:	jo     0x402191
  40218e:	xchg   esp,eax
  40218f:	sub    esi,DWORD PTR [eax+0x3]
  402192:	xchg   esp,eax
  402193:	cmp    eax,0x3d940370
  402198:	jo     0x40219d
  40219a:	add    BYTE PTR [edi+ebx*8-0x2a6bfc7d],dl
  4021a1:	add    DWORD PTR [ebx],0xffffff94
  4021a4:	cdq    
  4021a5:	add    DWORD PTR [ebx],0xffffff94
  4021a8:	test   eax,0x57940383
  4021ad:	xchg   ebp,eax
  4021ae:	add    edx,DWORD PTR [ebx+esi*2+0x67940395]
  4021b5:	xchg   ebp,eax
  4021b6:	add    edx,DWORD PTR [ebx+eax*4-0x7a6bfc6b]
  4021bd:	xchg   ebp,eax
  4021be:	add    edx,DWORD PTR [ecx+eiz*4+0x7f94036c]
  4021c5:	ins    BYTE PTR es:[edi],dx
  4021c6:	add    edx,DWORD PTR [eax+eax*1+0x976b13]
  4021cd:	std    
  4021ce:	push   0xffffff97
  4021d0:	add    bh,ah
  4021d2:	push   0xffffff97
  4021d4:	add    bh,cl
  4021d6:	push   0xffffff97
  4021d8:	add    bh,dl
  4021da:	push   0xffffff97
  4021dc:	add    BYTE PTR [ebx-0x5aff6896],ah
  4021e2:	push   0xffffff97
  4021e4:	add    BYTE PTR [ecx+0x5300976a],ch
  4021ea:	push   0xffffff97
  4021ec:	add    BYTE PTR [edi+0x6a],bh
  4021ef:	xchg   edi,eax
  4021f0:	add    BYTE PTR [ecx+0x6a],bh
  4021f3:	xchg   edi,eax
  4021f4:	add    BYTE PTR ds:0x1500976a,cl
  4021fa:	push   0xffffff97
  4021fc:	add    BYTE PTR [ebx],ah
  4021fe:	push   0x0
  402200:	xchg   edi,eax
  402201:	add    BYTE PTR [ebx],ah
  402203:	push   0xffffff97
  402205:	add    BYTE PTR [ecx+0x11009769],dh
  40220b:	push   0xffffff97
  40220d:	add    BYTE PTR [ebx],al
  40220f:	push   0xffffff97
  402211:	add    cl,ah
  402213:	imul   edx,DWORD PTR [edi-0x6892ab00],0x976d4900
  40221d:	add    BYTE PTR [edi],ch
  40221f:	ins    DWORD PTR es:[edi],dx
  402220:	xchg   edi,eax
  402221:	add    BYTE PTR [ecx+0x6d],dh
  402224:	xchg   edi,eax
  402225:	add    BYTE PTR [ebx+0x7f00976d],cl
  40222b:	ins    DWORD PTR es:[edi],dx
  40222c:	xchg   edi,eax
  40222d:	add    BYTE PTR [ebx+0x6d],dh
  402230:	xchg   edi,eax
  402231:	add    BYTE PTR [edi+0x7f00976c],dl
  402237:	ins    BYTE PTR es:[edi],dx
  402238:	xchg   edi,eax
  402239:	add    BYTE PTR [edi-0x32ff6894],ah
  40223f:	ins    BYTE PTR es:[edi],dx
  402240:	xchg   edi,eax
  402241:	add    BYTE PTR [eax],al
  402243:	lods   eax,DWORD PTR ds:[esi]
  402244:	mov    al,0x3
  402246:	add    bh,dl
  402248:	test   al,0x3
  40224a:	add    bl,dh
  40224c:	rol    BYTE PTR [ebx],0x0
  40224f:	aad    0xbf
  402251:	add    eax,DWORD PTR [eax]
  402253:	iret   
  402254:	scas   eax,DWORD PTR es:[edi]
  402255:	add    eax,DWORD PTR [eax]
  402257:	mov    ch,0xaf
  402259:	add    eax,DWORD PTR [eax]
  40225b:	scas   eax,DWORD PTR es:[edi]
  40225c:	jg     0x402261
  40225e:	add    BYTE PTR [ebx-0x78fffc81],al
  402264:	add    BYTE PTR [edi+0x3],ch
  402267:	add    BYTE PTR [ebp+0x6f],dl
  40226a:	add    eax,DWORD PTR [eax]
  40226c:	ins    DWORD PTR es:[edi],dx
  40226d:	jg     0x402272
  40226f:	add    BYTE PTR [ebx],bl
  402271:	js     0x402276
  402273:	add    BYTE PTR ds:0x1d000370,dh
  402279:	push   0x402d0003
  40227e:	add    eax,DWORD PTR [eax]
  402280:	mov    ch,0x3f
  402282:	add    eax,DWORD PTR [eax]
  402284:	leave  
  402285:	das    
  402286:	add    eax,DWORD PTR [eax]
  402288:	aad    0x2f
  40228a:	add    eax,DWORD PTR [eax]
  40228c:	jmp    0x594025d0
  402291:	and    al,BYTE PTR [ebx]
  402293:	add    BYTE PTR [edi],dh
  402295:	sub    al,BYTE PTR [ebx]
  402297:	add    BYTE PTR [ecx],bh
  402299:	and    al,BYTE PTR [ebx]
  40229b:	add    BYTE PTR [ecx-0x76fffdf6],al
  4022a1:	add    al,BYTE PTR [edx]
  4022a3:	add    BYTE PTR [ecx+0xa],ah
  4022a6:	add    al,BYTE PTR [eax]
  4022a8:	mov    ebp,0xc7000202
  4022ad:	jmp    0x1:0xe2ad0001
  4022b4:	test   eax,0xd50001ea
  4022b9:	loop   0x4022bc
  4022bb:	add    BYTE PTR [eax],al
  4022bd:	arpl   WORD PTR [edi+0x3],si
  4022c0:	add    BYTE PTR [ebx+0x77],ah
  4022c3:	add    eax,DWORD PTR [eax]
  4022c5:	sub    eax,0x377
  4022ca:	xchg   ebp,eax
  4022cb:	jae    0x4022d0
  4022cd:	add    BYTE PTR ds:0xed00035c,ah
  4022d3:	jbe    0x4022d8
  4022d5:	add    BYTE PTR ds:0xc1000002,ch
  4022db:	xchg   ecx,eax
  4022dc:	add    eax,DWORD PTR [eax]
  4022de:	pop    ebp
  4022df:	xchg   ecx,eax
  4022e0:	add    eax,DWORD PTR [eax]
  4022e2:	mov    ebx,0xed000391
  4022e7:	add    DWORD PTR [eax],eax
  4022e9:	add    ch,dh
  4022eb:	add    DWORD PTR [eax],eax
  4022ed:	and    ah,0x1
  4022f0:	add    BYTE PTR [eax-0x7ffffe01],al
  4022f6:	repz add DWORD PTR [eax],eax
  4022f9:	sub    ch,0x1
  4022fc:	add    BYTE PTR [eax],al
  4022fe:	xor    DWORD PTR [eax+0x3],ebp
  402301:	add    BYTE PTR [ebx+0x57000367],cl
  402307:	add    eax,DWORD PTR [bx+si]
  40230a:	lods   eax,DWORD PTR ds:[esi]
  40230b:	add    DWORD PTR [eax],eax
  40230d:	add    BYTE PTR [edi],ch
  40230f:	add    eax,DWORD PTR [bx+si]
  402312:	retf   
  402313:	push   0x68d70003
  402318:	add    eax,DWORD PTR [eax]
  40231a:	loope  0x402384
  40231c:	add    eax,DWORD PTR [eax]
  40231e:	inc    ecx
  40231f:	push   0x688f0003
  402324:	add    eax,DWORD PTR [eax]
  402326:	xchg   ebx,eax
  402327:	add    eax,DWORD PTR [bx+si]
  40232a:	arpl   WORD PTR [eax+0x3],bp
  40232d:	add    BYTE PTR [eax],al
  40232f:	sub    DWORD PTR [eax+0x3],0x36a9900
  402336:	add    BYTE PTR [ebp+ebp*1+0x1994037a],dl
  40233d:	jp     0x402342
  40233f:	xchg   esp,eax
  402340:	push   ebp
  402341:	jp     0x402346
  402343:	xchg   esp,eax
  402344:	cmp    DWORD PTR [edx+0x3],edi
  402347:	xchg   esp,eax
  402348:	arpl   WORD PTR [edx+0x3],di
  40234b:	xchg   esp,eax
  40234c:	outs   dx,DWORD PTR ds:[esi]
  40234d:	jns    0x402352
  40234f:	xchg   esp,eax
  402350:	push   ecx
  402351:	jp     0x402356
  402353:	xchg   esp,eax
  402354:	sub    eax,0x2594037a
  402359:	jp     0x40235e
  40235b:	xchg   esp,eax
  40235c:	int    0x3
  40235e:	add    BYTE PTR [edi+edx*1],dl
  402361:	jp     0x402366
  402363:	xchg   esp,eax
  402364:	jmp    0xd7d426e2
  402369:	add    eax,DWORD PTR [eax]
  40236b:	xchg   esp,eax
  40236c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40236d:	js     0x402372
  40236f:	xchg   esp,eax
  402370:	xlat   BYTE PTR ds:[ebx]
  402371:	add    eax,DWORD PTR [eax]
  402373:	xchg   esp,eax
  402374:	daa    
  402375:	mov    BYTE PTR [ebx],al
  402377:	xchg   esp,eax
  402378:	iret   
  402379:	xchg   DWORD PTR [ebx],eax
  40237b:	xchg   esp,eax
  40237c:	mov    edi,0xdf940387
  402381:	xchg   DWORD PTR [ebx],eax
  402383:	xchg   esp,eax
  402384:	jecxz  0x40230d
  402386:	add    edx,DWORD PTR [ebp+eax*4+0x7b940380]
  40238d:	add    BYTE PTR [ebx],0x94
  402390:	pop    ss
  402391:	add    BYTE PTR [ebx],0x0
  402394:	xchg   esp,eax
  402395:	xchg   DWORD PTR [eax-0x7f826bfd],eax
  40239b:	add    edx,DWORD PTR [ecx+eiz*2-0x3e6bfc80]
  4023a2:	add    BYTE PTR [ebx],0x94
  4023a5:	iret   
  4023a6:	add    BYTE PTR [ebx],0x94
  4023a9:	pop    DWORD PTR [eax-0x7f726bfd]
  4023af:	add    edx,DWORD PTR [eax+eax*1+0x9780e3]
  4023b6:	rol    DWORD PTR [eax-0x7f00ff69],1
  4023bc:	xchg   edi,eax
  4023bd:	add    cl,ch
  4023bf:	adc    BYTE PTR [edi-0x68789700],0x0
  4023c6:	push   ebp
  4023c7:	xchg   DWORD PTR [edi-0x6878b300],edx
  4023cd:	add    BYTE PTR [ebp-0x50ff6879],al
  4023d3:	adc    BYTE PTR [edi-0x687f4900],0x0
  4023da:	ret    
  4023db:	adc    BYTE PTR [edi-0x687f1b00],0x0
  4023e2:	fild   DWORD PTR [eax-0x7ef6ff69]
  4023e8:	xchg   edi,eax
  4023e9:	add    BYTE PTR ds:0xed009781,al
  4023ef:	adc    BYTE PTR [edi-0x687ecf00],0x0
  4023f6:	inc    ecx
  4023f7:	add    DWORD PTR [eax],0x81010097
  4023fd:	xchg   edi,eax
  4023fe:	add    BYTE PTR ds:0xcd009781,dl
  402404:	adc    BYTE PTR [edi-0x687d0f00],0x0
  40240b:	jge    0x40238f
  40240d:	xchg   edi,eax
  40240e:	add    BYTE PTR [ebp+0x41009782],al
  402414:	adc    BYTE PTR [edi-0x687dcf00],0x0
  40241b:	xchg   ebx,eax
  40241c:	adc    BYTE PTR [edi-0x687d7d00],0x0
  402423:	adc    BYTE PTR [bx+0x6d00],0x82
  402429:	xchg   edi,eax
  40242a:	add    BYTE PTR [eax],al
  40242c:	mov    cl,0x15
  40242e:	(bad)  
  40242f:	(bad)  
  402430:	jp     0x402446
  402432:	(bad)  
  402433:	call   FWORD PTR [esi-0x73000015]
  402439:	adc    eax,0x1588ffff
  40243e:	(bad)  
  40243f:	(bad)  
  402440:	mov    edx,0xacffff15
  402445:	adc    eax,0x177effff
  40244a:	(bad)  
  40244b:	jmp    DWORD PTR [esi+0x10]
  40244e:	(bad)  
  40244f:	dec    DWORD PTR [eax+ebx*1-0x1]
  402453:	call   FWORD PTR [eax-0x550000e9]
  402459:	pop    ss
  40245a:	(bad)  
  40245b:	(bad)  
  40245c:	mov    edx,0xffff1700
  402461:	retf   0xff17
  402464:	(bad)  
  402465:	mov    esp,0xe6ffff17
  40246a:	sbb    bh,bh
  40246c:	call   eax
  40246e:	adc    bh,bh
  402470:	push   DWORD PTR [ecx+ebx*1+0x1190ffff]
  402477:	(bad)  
  402478:	inc    edx
  40247a:	sbb    edi,edi
  40247c:	jmp    DWORD PTR [edx+0x4cffff11]
  402482:	sbb    edi,edi
  402484:	call   DWORD PTR [eax+0x11]
  402487:	(bad)  
  402488:	jmp    DWORD PTR [edx+0x19]
  40248b:	(bad)  
  40248c:	jmp    DWORD PTR [ecx+edx*1-0x1]
  402490:	(bad)  
  402491:	out    dx,al
  402492:	sbb    edi,edi
  402494:	call   esi
  402496:	adc    edi,edi
  402498:	inc    edx
  40249a:	sbb    edi,edi
  40249c:	jmp    DWORD PTR [ecx+edx*1+0x1a0cffff]
  4024a3:	(bad)  
  4024a4:	(bad)  
  4024a5:	dec    DWORD PTR [ecx-0x64fffc7c]
  4024ab:	add    BYTE PTR [ebx],0x0
  4024ae:	pop    edi
  4024af:	test   BYTE PTR [ebx],al
  4024b1:	add    bl,al
  4024b3:	test   BYTE PTR [ebx],al
  4024b5:	add    BYTE PTR [ebx-0x28fffc7c],al
  4024bb:	test   BYTE PTR [ebx],al
  4024bd:	add    BYTE PTR [edi+0x384],dh
  4024c3:	ins    DWORD PTR es:[edi],dx
  4024c4:	add    BYTE PTR [ebx],0x0
  4024c7:	pop    edi
  4024c8:	add    BYTE PTR [ebx],0x0
  4024cb:	pop    ebp
  4024cc:	add    BYTE PTR [ebx],0x0
  4024cf:	cmp    ebp,DWORD PTR [edx+0x3]
  4024d2:	add    BYTE PTR [ebp-0x1afffc80],bl
  4024d8:	imul   eax,DWORD PTR [ebx],0x36a1300
  4024de:	add    BYTE PTR [ebx+0x77000369],ah
  4024e4:	imul   eax,DWORD PTR [ebx],0x37d9100
  4024ea:	add    BYTE PTR [ebp-0x5cfffc83],bl
  4024f0:	jge    0x4024f5
  4024f2:	add    BYTE PTR [ebx+0x7f00037d],dh
  4024f8:	jge    0x4024fd
  4024fa:	add    BYTE PTR [edi+0x7d],bl
  4024fd:	add    eax,DWORD PTR [eax]
  4024ff:	dec    ecx
  402500:	jge    0x402505
  402502:	add    BYTE PTR [ebp+0x7d],ch
  402505:	add    eax,DWORD PTR [eax]
  402507:	std    
  402508:	jge    0x40250d
  40250a:	add    bh,ah
  40250c:	jle    0x402511
  40250e:	add    BYTE PTR [ebp-0x38000003],ch
  402514:	mov    es,WORD PTR [ebx]
  402516:	add    BYTE PTR [edi+0x5100038e],bh
  40251c:	xchg   esp,eax
  40251d:	add    eax,DWORD PTR [eax]
  40251f:	xchg   esp,eax
  402520:	das    
  402521:	xchg   esp,eax
  402522:	add    edx,DWORD PTR [edi+edx*1-0x6bfffc6c]
  402529:	addr16 xchg esp,eax
  40252b:	add    edx,DWORD PTR [ecx+edx*2+0x55940394]
  402532:	xchg   esp,eax
  402533:	add    edx,DWORD PTR [ebp+edi*4-0x566bfc6d]
  40253a:	xchg   ebx,eax
  40253b:	add    edx,DWORD PTR [edi+edx*4-0x3c6bfc6d]
  402542:	xchg   ebx,eax
  402543:	add    edx,DWORD PTR [ecx+ecx*8-0x26bfc6d]
  40254a:	js     0x40254f
  40254c:	xchg   esp,eax
  40254d:	add    edi,DWORD PTR [ecx+0x3]
  402550:	xchg   esp,eax
  402551:	pop    es
  402552:	jns    0x402557
  402554:	xchg   esp,eax
  402555:	sub    eax,0x83940379
  40255a:	js     0x40255f
  40255c:	xchg   esp,eax
  40255d:	dec    ecx
  40255e:	jns    0x402563
  402560:	xchg   esp,eax
  402561:	aas    
  402562:	jns    0x402567
  402564:	xchg   esp,eax
  402565:	xor    DWORD PTR [ecx+0x3],edi
  402568:	xchg   esp,eax
  402569:	pop    ss
  40256a:	jns    0x40256f
  40256c:	xchg   esp,eax
  40256d:	xlat   BYTE PTR ds:[ebx]
  40256e:	add    eax,DWORD PTR [eax]
  402570:	xchg   esp,eax
  402571:	lds    eax,FWORD PTR [ebx]
  402573:	add    BYTE PTR [ebx+edi*2],dl
  402576:	jbe    0x40257b
  402578:	xchg   esp,eax
  402579:	call   0xe4542581
  40257e:	add    eax,DWORD PTR [eax]
  402580:	adc    al,0xd8
  402582:	add    eax,DWORD PTR [eax]
  402584:	adc    al,0x7d
  402586:	jbe    0x40258b
  402588:	xchg   esp,eax
  402589:	hlt    
  40258a:	add    eax,DWORD PTR [eax]
  40258c:	add    BYTE PTR [edx+eiz*8],dl
  40258f:	add    eax,DWORD PTR [eax]
  402591:	adc    al,0x1f
  402593:	jp     0x402598
  402595:	xchg   esp,eax
  402596:	fwait
  402597:	jns    0x40259c
  402599:	xchg   esp,eax
  40259a:	add    ch,ch
  40259c:	add    edx,DWORD PTR [eax+eax*4-0x7f6bfc26]
  4025a3:	or     eax,0xfb00977a
  4025a8:	jns    0x402541
  4025aa:	add    bh,bl
  4025ac:	add    edx,DWORD PTR [eax+eax*4-0x7f6bfc2c]
  4025b3:	mov    ebp,0xeb809403
  4025b8:	add    edx,DWORD PTR [eax+eax*4-0x7f6bfc02]
  4025bf:	jmp    0xef40bd3d
  4025c4:	add    edx,DWORD PTR [eax+eax*4-0x7f6bfc0b]
  4025cb:	xor    eax,0x2b009776
  4025d0:	jbe    0x402569
  4025d2:	add    BYTE PTR [ecx],dh
  4025d4:	jbe    0x40256d
  4025d6:	add    BYTE PTR [esi+0x3],bh
  4025d9:	xchg   esp,eax
  4025da:	cmp    cl,0x3
  4025dd:	xchg   esp,eax
  4025de:	sub    dl,0x3
  4025e1:	xchg   esp,eax
  4025e2:	cmp    dl,0x3
  4025e5:	xchg   esp,eax
  4025e6:	sbb    BYTE PTR [ecx+0x4],0x94
  4025ea:	sub    cl,0x3
  4025ed:	xchg   esp,eax
  4025ee:	add    BYTE PTR [edi-0x6b],dh
  4025f1:	add    BYTE PTR [edi-0x686a5700],dl
  4025f7:	add    BYTE PTR [ebx-0x42ff686b],ah
  4025fd:	xchg   ebp,eax
  4025fe:	xchg   edi,eax
  4025ff:	add    BYTE PTR [edi-0x7eff686b],bh
  402605:	xchg   ebp,eax
  402606:	xchg   edi,eax
  402607:	add    BYTE PTR [ecx-0x78ff686b],bl
  40260d:	xchg   ebp,eax
  40260e:	xchg   edi,eax
  40260f:	add    ch,ch
  402611:	xchg   ecx,eax
  402612:	xchg   edi,eax
  402613:	add    BYTE PTR [eax],al
  402615:	fild   WORD PTR ds:0x5c90004
  40261b:	add    al,0x0
  40261d:	adc    eax,DWORD PTR [esi]
  40261f:	add    al,0x0
  402621:	adc    eax,0xa9000406
  402626:	and    eax,0x25bb0003
  40262b:	add    eax,DWORD PTR [eax]
  40262d:	sbb    eax,0xa3000326
  402632:	and    eax,0x97e90003
  402637:	add    BYTE PTR [eax],al
  402639:	arpl   sp,bp
  40263b:	add    eax,DWORD PTR [eax]
  40263d:	sbb    esp,0x3
  402640:	add    BYTE PTR [ebp-0x24],cl
  402643:	add    eax,DWORD PTR [eax]
  402645:	fwait
  402646:	retf   
  402647:	add    eax,DWORD PTR [eax]
  402649:	scas   eax,DWORD PTR es:[edi]
  40264a:	ret    
  40264b:	add    eax,DWORD PTR [eax]
  40264d:	mov    ch,0xcb
  40264f:	add    eax,DWORD PTR [eax]
  402651:	mov    ch,0xc3
  402653:	add    eax,DWORD PTR [eax]
  402655:	retf   
  402656:	add    BYTE PTR [ebx-0x5c20fffd],ch
  40265c:	add    eax,DWORD PTR [eax]
  40265e:	jmp    0xe94026fa
  402663:	xchg   edi,eax
  402664:	add    BYTE PTR [eax],al
  402666:	mov    dl,0x14
  402668:	scas   al,BYTE PTR es:[edi]
  402669:	shl    BYTE PTR ds:[esi+ebp*8+0x4c],1
  40266e:	mov    DWORD PTR [ebp-0x79bb101d],ebp
  402674:	xchg   DWORD PTR ds:0xa520388d,edi
  40267a:	imul   ebx,DWORD PTR [edx-0x709bb012],0xd52a730e
  402684:	xchg   esi,eax
  402685:	push   ss
  402686:	push   ds
  402687:	mov    al,cl
  402689:	sbb    al,BYTE PTR [esi+0x4e4595]
  40268f:	and    BYTE PTR [edi],0x2e
  402692:	mov    cl,0x4b
  402694:	dec    esp
  402695:	cwde   
  402696:	mov    bh,0xc1
  402698:	(bad)  
  402699:	mov    esi,ebx
  40269b:	jle    0x402696
  40269d:	icebp  
  40269e:	inc    edx
  40269f:	push   ds
  4026a0:	add    BYTE PTR [edi-0x22],ah
  4026a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4026a4:	or     bh,ah
  4026a6:	and    edi,edx
  4026a8:	sub    BYTE PTR [esi+ebx*2-0x61],0xee
  4026ad:	pop    edi
  4026ae:	inc    edi
  4026af:	neg    ebx
  4026b1:	jmp    0xfc73:0x71946233
  4026b8:	sahf   
  4026b9:	xor    ebp,DWORD PTR [ecx]
  4026bb:	add    BYTE PTR [ebx+0x5b],ah
  4026be:	rcl    BYTE PTR [ecx],cl
  4026c0:	mov    edi,0x2abfffeb
  4026c5:	jp     0x402705
  4026c7:	pusha  
  4026c8:	rcr    BYTE PTR [esi+0x5b632933],1
  4026ce:	rcl    BYTE PTR [ecx],cl
  4026d0:	jg     0x4026bd
  4026d2:	(bad)  
  4026d3:	mov    edi,0x603e79ea
  4026d8:	out    dx,eax
  4026d9:	outs   dx,BYTE PTR ds:[esi]
  4026da:	pop    es
  4026db:	cmc    
  4026dc:	or     al,0xc1
  4026de:	rcl    DWORD PTR [ecx],cl
  4026e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4026e1:	cdq    
  4026e2:	add    BYTE PTR [eax],al
  4026e4:	xor    eax,0x8521e1fc
  4026e9:	sbb    eax,0xbf2cad55
  4026ee:	dec    edx
  4026ef:	inc    edi
  4026f0:	mov    esi,ebx
  4026f2:	sti    
  4026f3:	or     al,0x8d
  4026f5:	push   ebp
  4026f6:	mov    bh,0x38
  4026f8:	or     BYTE PTR [ebx*8-0x17c78790],al
  4026ff:	inc    esi
  402700:	jnp    0x4026ee
  402702:	and    esi,DWORD PTR [esi-0x70d7d9c2]
  402708:	xchg   esp,eax
  402709:	inc    edx
  40270a:	mov    esp,0x955f4565
  40270f:	mov    ebp,0x53e75556
  402714:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402715:	sub    ebx,DWORD PTR [edx+ebx*2]
  402718:	xchg   esi,eax
  402719:	aaa    
  40271a:	sub    DWORD PTR [eax-0x4c],ecx
  40271d:	push   esi
  40271e:	cmp    eax,0x7551009c
  402723:	into   
  402724:	ja     0x40277b
  402726:	daa    
  402727:	mov    bl,0x95
  402729:	mov    eax,DWORD PTR [edx+edi*2-0x77]
  40272d:	sbb    DWORD PTR [ebx],0xffffffba
  402730:	xor    bl,dl
  402732:	jns    0x40270c
  402734:	ficom  DWORD PTR [edx+0x661a133c]
  40273a:	adc    eax,0x6498a53f
  40273f:	sub    eax,0x925ece6c
  402744:	lahf   
  402745:	loop   0x40272e
  402747:	std    
  402748:	jge    0x402793
  40274a:	cdq    
  40274b:	fimul  DWORD PTR [esp+eax*4-0x30]
  40274f:	push   ebp
  402750:	fcom   st(4)
  402752:	inc    ebx
  402753:	sub    bh,BYTE PTR [ecx-0x6407e459]
  402759:	dec    eax
  40275a:	in     eax,dx
  40275b:	(bad)  
  40275c:	shr    DWORD PTR [edx-0x7a2e8c24],0x8c
  402763:	xchg   ebx,eax
  402764:	add    BYTE PTR [esi+edx*1-0x34],dl
  402768:	std    
  402769:	adc    ebx,DWORD PTR [eax-0x63]
  40276c:	adc    ch,al
  40276e:	xor    eax,0x6fa5cf71
  402773:	add    BYTE PTR ss:[esi],ch
  402776:	xlat   BYTE PTR ds:[ebx]
  402777:	cmp    BYTE PTR [esi],ch
  402779:	mov    eax,0x5d352751
  40277e:	inc    edx
  40277f:	push   ebx
  402780:	rol    DWORD PTR [ebp+0x9d5700],1
  402786:	xchg   esp,eax
  402787:	shr    BYTE PTR [esi],0xae
  40278a:	sbb    al,0x20
  40278c:	imul   ebx,DWORD PTR [ebp+0x710ec4a6],0x36710ed3
  402796:	xchg   esp,eax
  402797:	call   0xc750:0x1c8238e9
  40279e:	inc    edx
  40279f:	mov    ebx,DWORD PTR [ebp-0x7f]
  4027a2:	ror    DWORD PTR [esi],cl
  4027a4:	mov    ah,BYTE PTR [ebp-0x6c]
  4027a7:	call   0x9d6e:0xbbd431e9
  4027ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4027af:	(bad)  
  4027b0:	into   
  4027b1:	jo     0x402806
  4027b3:	adc    dh,BYTE PTR [ecx+0x36]
  4027b6:	xchg   esp,eax
  4027b7:	xchg   esi,eax
  4027b8:	jmp    0xe85ce9f5
  4027bd:	imul   edx,DWORD PTR [ecx],0x65
  4027c0:	push   0x71125370
  4027c5:	ss xchg esp,eax
  4027c7:	xchg   esi,eax
  4027c8:	jmp    0x85caa05
  4027cd:	cmp    al,0xcd
  4027cf:	(bad)  
  4027d0:	xlat   BYTE PTR ds:[ebx]
  4027d1:	int3   
  4027d2:	push   edx
  4027d3:	adc    cl,BYTE PTR [edx+0x4c]
  4027d6:	xchg   esp,eax
  4027d7:	add    cl,ch
  4027d9:	add    edx,DWORD PTR [ecx+eax*1+0x3cf89d7c]
  4027e0:	in     eax,dx
  4027e1:	fiadd  DWORD PTR [edx+edx*1-0x77]
  4027e5:	pusha  
  4027e6:	xchg   esp,eax
  4027e7:	shr    BYTE PTR [esi],0x9a
  4027ea:	add    BYTE PTR [ecx+eiz*1],bl
  4027ed:	pop    ebp
  4027ee:	stos   BYTE PTR es:[edi],al
  4027ef:	cmp    BYTE PTR ds:0x11e4eccd,bh
  4027f5:	mov    DWORD PTR [eax-0x6c],esp
  4027f8:	shr    BYTE PTR [esi],0x9a
  4027fb:	sbb    al,0x21
  4027fd:	add    BYTE PTR [ebp+0xa],ah
  402800:	out    0x1c,eax
  402802:	or     bl,ch
  402804:	rcl    BYTE PTR [ecx],1
  402806:	push   esp
  402807:	cmp    DWORD PTR [eax],eax
  402809:	shr    BYTE PTR [esi],0x10
  40280c:	out    0xff,al
  40280e:	in     eax,dx
  40280f:	adc    al,0x70
  402811:	xor    DWORD PTR [eax],ebx
  402813:	pushf  
  402814:	in     al,dx
  402815:	dec    esp
  402816:	arpl   WORD PTR [ebx+ecx*2],si
  402819:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40281a:	xor    edi,DWORD PTR [edi-0x4ecaa9f7]
  402820:	jnp    0x40280d
  402822:	mov    edx,0x9711ce89
  402827:	leave  
  402828:	add    al,al
  40282a:	scas   al,BYTE PTR es:[edi]
  40282b:	sub    eax,0xa22e2078
  402830:	add    ah,0x62
  402833:	xor    al,0xce
  402835:	adc    DWORD PTR [esp+edi*1+0x0],ebp
  402839:	adc    BYTE PTR [ebx+0x2c047f96],ah
  40283f:	push   esi
  402840:	dec    ecx
  402841:	mov    ds:0x482c6fda,eax
  402846:	jae    0x4027f2
  402848:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402849:	jg     0x402847
  40284b:	out    dx,al
  40284c:	gs jbe 0x4028bf
  40284f:	add    BYTE PTR [ebp+ebp*1+0x49],dh
  402853:	or     BYTE PTR [eax-0x11a8ee2f],0xff
  40285a:	mov    edi,0x20780dae
  40285f:	popa   
  402860:	push   edx
  402861:	std    
  402862:	es aas 
  402864:	ror    esi,0x11
  402867:	call   0x8197:0x431000cf
  40286e:	ja     0x4028eb
  402870:	stos   DWORD PTR es:[edi],eax
  402871:	sub    eax,0xd1c94249
  402876:	adc    DWORD PTR [eax],eax
  402878:	and    ebx,DWORD PTR [ecx-0x793d4000]
  40287e:	mov    BYTE PTR [eax],ah
  402880:	int3   
  402881:	(bad)  
  402882:	nop
  402883:	inc    ebp
  402884:	out    0xff,eax
  402886:	iret   
  402887:	adc    DWORD PTR [esi+edi*8-0x1],esp
  40288b:	test   eax,0x242e31bd
  402890:	inc    ebp
  402891:	pop    ecx
  402892:	dec    ebx
  402893:	addr16 aas 
  402895:	icebp  
  402896:	rcl    BYTE PTR [ecx],1
  402898:	pusha  
  402899:	dec    esp
  40289a:	add    al,al
  40289c:	and    BYTE PTR [ebp+edi*8-0x42e12a01],0x49
  4028a4:	into   
  4028a5:	out    0xd0,eax
  4028a7:	adc    DWORD PTR [eax],eax
  4028a9:	inc    esp
  4028aa:	add    al,al
  4028ac:	inc    edx
  4028ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4028ae:	std    
  4028af:	(bad)  
  4028b0:	sti    
  4028b1:	or     eax,0x22009a65
  4028b6:	out    0xd1,eax
  4028b8:	adc    eax,edi
  4028ba:	les    eax,FWORD PTR [eax]
  4028bc:	adc    BYTE PTR [esi],ah
  4028be:	dec    esi
  4028bf:	ds std 
  4028c1:	or     ah,BYTE PTR [edi-0x51]
  4028c4:	ins    DWORD PTR es:[edi],dx
  4028c5:	push   0x30
  4028c7:	rcl    BYTE PTR [ecx],cl
  4028c9:	ret    
  4028ca:	mov    ah,0x0
  4028cc:	rol    BYTE PTR [edx],0x88
  4028cf:	mov    BYTE PTR [eax],ah
  4028d1:	loopne 0x4028af
  4028d3:	xchg   ebx,ebp
  4028d5:	pop    esi
  4028d6:	or     al,0xd2
  4028d8:	adc    ebx,esp
  4028da:	mov    ah,0x0
  4028dc:	rol    BYTE PTR [edx],0x88
  4028df:	mov    BYTE PTR [eax],ah
  4028e1:	jnp    0x4028ee
  4028e3:	sahf   
  4028e4:	les    esi,FWORD PTR [esi-0x57ee2d7f]
  4028ea:	test   al,0x0
  4028ec:	adc    BYTE PTR [edi-0x1],dl
  4028ef:	add    BYTE PTR [esp+edx*4],0xc5
  4028f3:	push   0x15
  4028f5:	fcmovnbe st,st(1)
  4028f7:	cmp    ecx,edx
  4028f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4028fa:	mov    WORD PTR [ecx-0x43ed2c00],cs
  402900:	std    
  402901:	jmp    0x40294f
  402903:	aaa    
  402904:	sbb    al,0x11
  402906:	test   al,0x88
  402908:	mov    bl,0x4f
  40290a:	xor    dh,BYTE PTR [edi+0x3e16fb56]
  402910:	fwait
  402911:	repnz nop
  402913:	push   DWORD PTR [edx-0x2c4912f5]
  402919:	add    BYTE PTR [ebp-0x7bffffc8],ah
  40291f:	sbb    eax,0xad4e5101
  402924:	mov    edi,DWORD PTR [edi-0x2c31751d]
  40292a:	test   DWORD PTR [eax-0x3],edi
  40292d:	jmp    DWORD PTR [ebx-0x11aeff43]
  402933:	cdq    
  402934:	js     0x4028e5
  402936:	icebp  
  402937:	or     dh,BYTE PTR [edx]
  402939:	shl    BYTE PTR [ebp+0x5400cb89],cl
  40293f:	xchg   edx,eax
  402940:	cdq    
  402941:	mov    BYTE PTR [eax+eiz*4-0x5c0a898f],dh
  402948:	push   0x64
  40294a:	mov    ah,0x87
  40294c:	bound  esi,QWORD PTR [edx-0x4b]
  40294f:	je     0x4029b7
  402951:	je     0x402904
  402953:	test   DWORD PTR [ebx],esp
  402955:	jo     0x40290c
  402957:	xchg   BYTE PTR [ebp+eiz*2-0x50],dl
  40295b:	mov    bh,0x57
  40295d:	outs   dx,DWORD PTR ds:[esi]
  40295e:	je     0x4028f6
  402960:	and    esi,DWORD PTR [edx-0x5f]
  402963:	jns    0x4029bc
  402965:	imul   esi,DWORD PTR [ecx-0x5e99dc84],0x88655700
  40296f:	push   edi
  402970:	dec    esi
  402971:	jb     0x40292d
  402973:	imul   al
  402975:	add    edx,DWORD PTR [eax+eax*1+0x57aba9]
  40297c:	fldcw  WORD PTR [edx-0x16ffa900]
  402982:	add    edx,DWORD PTR [eax+eax*1+0x7a1483ef]
  402989:	imul   eax,DWORD PTR [edx-0xc16ffec],0x89697a96
  402993:	push   ss
  402994:	cmp    ch,0x6
  402997:	cdq    
  402998:	cmp    esp,DWORD PTR [edi+eax*2]
  40299b:	adc    DWORD PTR [ebx+0x6c],edi
  40299e:	push   es
  40299f:	xchg   esp,eax
  4029a0:	add    BYTE PTR [ecx+0x69501413],bh
  4029a6:	adc    DWORD PTR [eax+edi*8+0x28732be8],0xffffffb9
  4029ae:	cmp    BYTE PTR [ecx+eax*1],dl
  4029b1:	out    0x3,al
  4029b3:	ret    
  4029b4:	adc    BYTE PTR [ecx],bl
  4029b6:	xor    al,0xe4
  4029b8:	mov    cl,ch
  4029ba:	add    edx,DWORD PTR [eax+eiz*1-0x7ee37bef]
  4029c1:	imul   eax,DWORD PTR [ebx],0x63c90094
  4029c7:	hlt    
  4029c8:	push   0x88c6bc1
  4029cd:	out    dx,al
  4029ce:	pop    ebx
  4029cf:	les    edx,FWORD PTR [eax-0x6a]
  4029d2:	push   ebx
  4029d3:	les    ecx,FWORD PTR [eax]
  4029d5:	loope  0x4029da
  4029d7:	xchg   esp,eax
  4029d8:	or     cl,ch
  4029da:	or     edx,DWORD PTR [edi+eax*1+0x9403f1]
  4029e1:	jmp    0xd429e9
  4029e6:	add    cl,ch
  4029e8:	xchg   edi,eax
  4029e9:	add    BYTE PTR [eax],al
  4029eb:	jmp    0xd9402a87
  4029f0:	pushf  
  4029f1:	inc    ebx
  4029f2:	add    ch,ah
  4029f4:	xchg   edi,eax
  4029f5:	add    al,0x0
  4029f7:	loope  0x402990
  4029f9:	add    al,0x0
  4029fb:	sbb    DWORD PTR [edx-0x6812ffbd],edx
  402a01:	add    eax,0x897d900
  402a06:	add    cl,bh
  402a08:	cdq    
  402a09:	inc    ebx
  402a0a:	add    ch,ah
  402a0c:	xchg   edi,eax
  402a0d:	push   es
  402a0e:	add    cl,cl
  402a10:	xchg   edi,eax
  402a11:	and    BYTE PTR [eax],al
  402a13:	fst    DWORD PTR [ecx-0x6812ffbd]
  402a19:	add    al,0x0
  402a1b:	stc    
  402a1c:	xchg   edi,eax
  402a1d:	lock (bad) 
  402a1f:	fsub   DWORD PTR [eax-0x680effbd]
  402a25:	lock dec eax
  402a28:	xchg   edi,eax
  402a29:	and    BYTE PTR [eax],al
  402a2b:	(bad)  [eax-0x680effbd]
  402a31:	lock jmp FWORD PTR [eax-0x70]
  402a35:	add    BYTE PTR [eax],0xf9
  402a38:	nop
  402a39:	inc    ebx
  402a3a:	add    cl,ah
  402a3c:	xchg   edi,eax
  402a3d:	and    BYTE PTR [eax],al
  402a3f:	imul   ebx,DWORD PTR [eax-0x6726ff00],0x90043
  402a49:	cwde   
  402a4a:	add    BYTE PTR [eax],0xeb
  402a4d:	nop
  402a4e:	add    BYTE PTR [ecx+edi*8],al
  402a51:	mov    al,ds:0x97c90043
  402a56:	add    al,BYTE PTR [ecx]
  402a58:	jmp    0x4029f2
  402a5a:	add    BYTE PTR [eax],dl
  402a5c:	stc    
  402a5d:	mov    BYTE PTR [ebx+0x0],al
  402a60:	add    ah,ch
  402a62:	sub    al,0x32
  402a64:	cs loopne 0x402a69
  402a67:	add    BYTE PTR [eax],al
  402a69:	or     eax,0x2d000006
  402a6e:	or     edx,DWORD PTR [eax+0x0]
  402a71:	std    
  402a72:	or     dl,BYTE PTR [eax]
  402a74:	add    BYTE PTR [ecx],al
  402a76:	or     esi,DWORD PTR [ebx+0x0]
  402a79:	inc    DWORD PTR ds:0xaed001f
  402a7f:	jo     0x402a81
  402a81:	std    
  402a82:	or     dh,BYTE PTR [eax]
  402a84:	add    ch,bh
  402a86:	or     eax,eax
  402a88:	add    BYTE PTR [ebp-0x12fff5fb],bh
  402a8e:	or     ah,BYTE PTR [eax+0x0]
  402a91:	mov    ebp,0xbd00200a
  402a96:	or     esp,DWORD PTR [eax+0xaad00]
  402a9c:	add    BYTE PTR [ebp-0x42ff7ff6],ch
  402aa2:	or     al,BYTE PTR [eax+0x0]
  402aa5:	mov    ebp,0xbd00e00b
  402aaa:	add    eax,0xad000006
  402aaf:	or     bl,BYTE PTR [eax+0x0]
  402ab2:	jge    0x402abe
  402ab4:	sbb    BYTE PTR [eax],al
  402ab6:	jge    0x402ac5
  402ab8:	nop
  402ab9:	add    BYTE PTR [esi+0x7],bh
  402abc:	cmp    eax,DWORD PTR [eax]
  402abe:	ins    DWORD PTR es:[edi],dx
  402abf:	or     bh,BYTE PTR [eax+0x0]
  402ac2:	jge    0x402ace
  402ac4:	cmp    BYTE PTR [eax],al
  402ac6:	jge    0x402ad5
  402ac8:	rol    BYTE PTR [eax],1
  402aca:	cmp    al,0x7
  402acc:	adc    DWORD PTR [eax],eax
  402ace:	ins    DWORD PTR es:[edi],dx
  402acf:	or     ch,BYTE PTR [eax+0x0]
  402ad2:	cmp    eax,0x3d00280a
  402ad7:	or     eax,0xe79400b0
  402adc:	or     ecx,DWORD PTR [eax]
  402ade:	xchg   esp,eax
  402adf:	out    0xb,eax
  402ae1:	mov    BYTE PTR [edi+eiz*8-0x186bb7f5],dl
  402ae8:	or     al,0xf0
  402aea:	xchg   esp,eax
  402aeb:	mov    bh,0x6
  402aed:	add    al,0x94
  402aef:	out    0xb,eax
  402af1:	push   esp
  402af2:	xchg   esp,eax
  402af3:	out    0xb,eax
  402af5:	adc    al,0x94
  402af7:	aam    0xb
  402af9:	jecxz  0x402a8f
  402afb:	fiadd  DWORD PTR [ebx+ebp*1]
  402afe:	xchg   esp,eax
  402aff:	out    0xb,eax
  402b01:	je     0x402a97
  402b03:	out    0xb,eax
  402b05:	xor    al,0x94
  402b07:	out    0xa,eax
  402b09:	enter  0xb894,0x4
  402b0d:	or     eax,0x640be794
  402b12:	add    BYTE PTR [edi+eiz*8-0x186bdbf5],dl
  402b19:	or     ch,BYTE PTR [eax+0x40be794]
  402b1f:	xchg   esp,eax
  402b20:	out    0xb,eax
  402b22:	test   BYTE PTR [edi+eiz*8-0x186bbbf5],dl
  402b29:	or     ch,al
  402b2b:	xchg   esp,eax
  402b2c:	mov    bh,0x4
  402b2e:	or     BYTE PTR [edi+eiz*8-0x186ba3f5],dl
  402b35:	or     ebx,DWORD PTR [esp+edx*4]
  402b38:	out    0xa,eax
  402b3a:	cwde   
  402b3b:	xchg   esp,eax
  402b3c:	fild   DWORD PTR [ebx+edx*2]
  402b3f:	xchg   esp,eax
  402b40:	out    0xb,eax
  402b42:	jl     0x402ad8
  402b44:	out    0xb,eax
  402b46:	cmp    al,0x94
  402b48:	out    0xa,eax
  402b4a:	fcom   DWORD PTR [ecx+edi*4-0x186be8fc]
  402b51:	or     ebp,DWORD PTR [esp+edx*4+0x0]
  402b55:	jmp    0xe940a365
  402b5a:	or     bh,ah
  402b5c:	(bad)  
  402b5d:	call   0xe940b36d
  402b62:	or     esp,DWORD PTR [eax]
  402b64:	add    cl,ch
  402b66:	or     ebx,eax
  402b68:	add    cl,ch
  402b6a:	or     bl,BYTE PTR [eax+eax*1]
  402b6d:	fld    DWORD PTR [edi+edx*4]
  402b70:	add    cl,ch
  402b72:	or     esp,DWORD PTR [esi+0x0]
  402b75:	jmp    0xe62b85
  402b7a:	hlt    
  402b7b:	or     esi,DWORD PTR [edi]
  402b7d:	add    dl,bh
  402b7f:	add    al,0xb7
  402b81:	add    cl,ch
  402b83:	or     esp,DWORD PTR [esi+0x0]
  402b86:	jmp    0xe940d196
  402b8b:	or     bl,al
  402b8d:	call   edi
  402b8f:	add    al,0x8f
  402b91:	add    cl,ch
  402b93:	or     esi,DWORD PTR [esi]
  402b95:	add    cl,ch
  402b97:	or     esi,DWORD PTR [esi+0x0]
  402b9a:	jmp    0xe94023a9
  402b9f:	or     edx,DWORD PTR [esi+0x160be900]
  402ba5:	add    cl,ch
  402ba7:	or     edx,DWORD PTR [esi+0x0]
  402baa:	jmp    0xd93fe3b9
  402baf:	add    al,0x93
  402bb1:	add    cl,ch
  402bb3:	or     ebp,esi
  402bb5:	add    cl,ch
  402bb7:	or     ebp,DWORD PTR [esi+0x280ae900]
  402bbd:	add    ebp,edi
  402bbf:	add    al,0xd7
  402bc1:	add    cl,ch
  402bc3:	or     ebp,esi
  402bc5:	add    cl,ch
  402bc7:	or     ebp,DWORD PTR [esi+0x480ae900]
  402bcd:	add    DWORD PTR [eax],eax
  402bcf:	fist   DWORD PTR [eax-0x60170011]
  402bd5:	data16 add cl,ch
  402bd8:	lahf   
  402bd9:	es add cl,ch
  402bdc:	add    BYTE PTR [esi-0x7016ff6c],cl
  402be2:	push   es
  402be3:	add    cl,ch
  402be5:	lahf   
  402be6:	xchg   BYTE PTR [eax],al
  402be8:	jmp    0xe940728c
  402bed:	mov    ss,esp
  402bef:	add    cl,bl
  402bf1:	nop
  402bf2:	add    eax,0x329fe900
  402bf7:	add    cl,ch
  402bf9:	lahf   
  402bfa:	repnz jmp FWORD PTR [eax]
  402bfd:	nop
  402bfe:	add    BYTE PTR [eax],al
  402c00:	cli    
  402c01:	xchg   esi,eax
  402c02:	verw   cx
  402c05:	lahf   
  402c06:	push   edx
  402c07:	add    cl,ch
  402c09:	lahf   
  402c0a:	adc    al,BYTE PTR [eax]
  402c0c:	jmp    0xd840f8a1
  402c11:	xchg   esi,eax
  402c12:	or     eax,DWORD PTR [eax]
  402c14:	jmp    0xe9408eb8
  402c19:	lahf   
  402c1a:	and    al,BYTE PTR [eax]
  402c1c:	jmp    0xe940d8b1
  402c21:	pop    DWORD PTR [edx]
  402c23:	add    cl,ch
  402c25:	lahf   
  402c26:	add    BYTE PTR [eax],0xe9
  402c29:	lahf   
  402c2a:	inc    edx
  402c2b:	add    cl,ch
  402c2d:	nop
  402c2e:	in     al,dx
  402c2f:	add    cl,bl
  402c31:	xchg   esi,eax
  402c32:	or     DWORD PTR [eax],eax
  402c34:	jmp    0xe94066d8
  402c39:	lahf   
  402c3a:	cli    
  402c3b:	(bad)  
  402c3c:	call   0xfd40a8d1
  402c41:	add    BYTE PTR [esi-0x6016ffa1],dl
  402c47:	pop    edx
  402c48:	add    BYTE PTR [eax],al
  402c4a:	jge    0x402c53
  402c4c:	add    BYTE PTR ds:[ebp+0xc],ch
  402c50:	fadd   QWORD PTR [eax]
  402c52:	aas    
  402c53:	(bad)  
  402c54:	sbb    al,BYTE PTR [eax]
  402c56:	cmp    eax,0x3d006e07
  402c5b:	pop    es
  402c5c:	add    BYTE PTR cs:0x2d00bc0c,ch
  402c63:	pop    es
  402c64:	push   cs
  402c65:	add    BYTE PTR ds:0x3d008e07,bh
  402c6b:	pop    es
  402c6c:	dec    esi
  402c6d:	add    BYTE PTR ds:0xd00fc0c,ch
  402c73:	(bad)  
  402c74:	(bad)  
  402c75:	(bad)  
  402c76:	std    
  402c77:	push   es
  402c78:	push   ecx
  402c79:	add    ch,bh
  402c7b:	push   es
  402c7c:	adc    DWORD PTR [eax],eax
  402c7e:	or     BYTE PTR [edi],al
  402c80:	add    DWORD PTR [eax],0xffffffff
  402c83:	std    
  402c84:	push   ds
  402c85:	add    ch,bh
  402c87:	push   es
  402c88:	jno    0x402c8a
  402c8a:	std    
  402c8b:	push   es
  402c8c:	xor    DWORD PTR [eax],eax
  402c8e:	in     eax,dx
  402c8f:	or     eax,edx
  402c91:	add    BYTE PTR [ebp-0x42fff603],bh
  402c97:	push   es
  402c98:	popa   
  402c99:	add    BYTE PTR [ebp-0x52ffdefa],bh
  402c9f:	or     esp,DWORD PTR [edx+0x106ad00]
  402ca5:	add    BYTE PTR [eax],al
  402ca7:	mov    ebp,0xbd008106
  402cac:	push   es
  402cad:	inc    ecx
  402cae:	add    BYTE PTR [ebp-0x42ff1df5],ch
  402cb4:	std    
  402cb5:	add    eax,0x59067d00
  402cba:	add    BYTE PTR [ebp+0x6],bh
  402cbd:	sbb    DWORD PTR [eax],eax
  402cbf:	ins    DWORD PTR es:[edi],dx
  402cc0:	or     eax,0xd6940092
  402cc5:	add    bh,BYTE PTR [ebx]
  402cc7:	xchg   esp,eax
  402cc8:	out    0xb,eax
  402cca:	jns    0x402c60
  402ccc:	out    0xb,eax
  402cce:	cmp    DWORD PTR [edi+eiz*8-0x476b2df4],edx
  402cd5:	add    dl,BYTE PTR [ecx]
  402cd7:	xchg   esp,eax
  402cd8:	out    0xb,eax
  402cda:	imul   edx,DWORD PTR [edi+eiz*8-0x186bd6f5],0xe794b20c
  402ce5:	or     ecx,DWORD PTR [ecx]
  402ce7:	xchg   esp,eax
  402ce8:	out    0xb,eax
  402cea:	mov    DWORD PTR [edi+eiz*8-0x186bb6f5],edx
  402cf1:	or     al,0xf2
  402cf3:	xchg   esp,eax
  402cf4:	mov    bh,0x2
  402cf6:	add    al,0x94
  402cf8:	out    0xb,eax
  402cfa:	push   ebp
  402cfb:	xchg   esp,eax
  402cfc:	out    0xb,eax
  402cfe:	adc    eax,0x20bd794
  402d03:	xchg   ebp,eax
  402d04:	(bad)  
  402d05:	add    BYTE PTR [ebx],ch
  402d07:	xchg   esp,eax
  402d08:	out    0xb,eax
  402d0a:	jne    0x402d0c
  402d0c:	xchg   esp,eax
  402d0d:	out    0xb,eax
  402d0f:	xor    eax,0xca0ae794
  402d14:	xchg   esp,eax
  402d15:	mov    eax,0xe7940d00
  402d1a:	or     esp,DWORD PTR [ebp-0x6c]
  402d1d:	out    0xb,eax
  402d1f:	and    eax,0xaa0ae794
  402d24:	xchg   esp,eax
  402d25:	out    0xb,eax
  402d27:	add    eax,0x850be794
  402d2c:	xchg   esp,eax
  402d2d:	out    0xb,eax
  402d2f:	inc    ebp
  402d30:	xchg   esp,eax
  402d31:	out    0xa,eax
  402d33:	jmp    0xe794:0x800b794
  402d3a:	or     ebx,DWORD PTR [ebp-0x6c]
  402d3d:	add    cl,ch
  402d3f:	or     esp,DWORD PTR [ecx+0x1e0ae900]
  402d45:	add    ch,bh
  402d47:	add    bh,al
  402d49:	add    cl,ch
  402d4b:	or     ebp,ecx
  402d4d:	add    cl,ch
  402d4f:	or     esp,DWORD PTR [ecx+0x3e0ae900]
  402d55:	add    bl,bl
  402d57:	add    BYTE PTR [ebx-0x46f41700],ch
  402d5d:	add    cl,ch
  402d5f:	or     esi,DWORD PTR [ecx+0x0]
  402d62:	jmp    0xe9402b71
  402d67:	or     esp,DWORD PTR [ecx+0x190be900]
  402d6d:	add    cl,ch
  402d6f:	or     eax,DWORD PTR [eax]
  402d71:	rol    DWORD PTR [eax],1
  402d73:	jmp    0xd9404b82
  402d78:	add    BYTE PTR [edi+0x670be900],dl
  402d7e:	add    cl,ch
  402d80:	or     esp,DWORD PTR [edi-0x28f40c00]
  402d86:	(bad)  
  402d87:	stc    
  402d88:	add    BYTE PTR [edi+0x670be900],dh
  402d8e:	add    cl,ch
  402d90:	or     esp,DWORD PTR [edi-0x2df51700]
  402d96:	call   edi
  402d98:	add    BYTE PTR [edi+0x370be900],bl
  402d9e:	add    cl,ch
  402da0:	or     esi,DWORD PTR [edi+0x0]
  402da3:	jmp    0xe9401fb2
  402da8:	or     edx,DWORD PTR [edi+0x170be900]
  402dae:	add    cl,ch
  402db0:	or     edx,DWORD PTR [edi+0x0]
  402db3:	jmp    0x3fdfc2
  402db8:	fcom   DWORD PTR [edi+edi*8+0x3b9fe8ff]
  402dbf:	add    cl,ch
  402dc1:	(bad)  
  402dc2:	sti    
  402dc3:	(bad)  
  402dc4:	call   0xfd409c57
  402dc9:	xchg   esp,eax
  402dca:	inc    ebx
  402dcb:	add    cl,ch
  402dcd:	lahf   
  402dce:	pop    ebx
  402dcf:	add    cl,ch
  402dd1:	(bad)  
  402dd2:	sbb    eax,DWORD PTR [eax]
  402dd4:	jmp    0xeebbd9
  402dd9:	fist   DWORD PTR [ebx+esi*8+0x6b9fe8ff]
  402de0:	add    cl,ch
  402de2:	(bad)  
  402de3:	sub    eax,DWORD PTR [eax]
  402de5:	jmp    0xe940bc78
  402dea:	lahf   
  402deb:	or     eax,DWORD PTR [eax]
  402ded:	jmp    0xe940b991
  402df2:	(bad)  
  402df3:	dec    ebx
  402df4:	add    cl,ch
  402df6:	mov    cs,esi
  402df8:	add    cl,bl
  402dfa:	xchg   esp,eax
  402dfb:	std    
  402dfc:	(bad)  
  402dfd:	call   0xe9405da1
  402e02:	(bad)  
  402e03:	out    dx,eax
  402e04:	jmp    FWORD PTR [eax]
  402e06:	mov    BYTE PTR [eax],al
  402e08:	add    dl,bh
  402e0a:	repnz adc al,BYTE PTR [eax]
  402e0d:	jmp    0xe9407db1
  402e12:	(bad)  
  402e13:	verw   cx
  402e16:	mov    dh,al
  402e18:	add    al,bl
  402e1a:	rol    BYTE PTR [esi],cl
  402e1c:	add    cl,ch
  402e1e:	lahf   
  402e1f:	pop    edi
  402e20:	add    cl,ch
  402e22:	(bad)  
  402e23:	pop    ds
  402e24:	add    cl,ch
  402e26:	mov    BYTE PTR [esi-0x601700],ah
  402e2c:	(bad)  
  402e2d:	call   0x40add1
  402e32:	lods   eax,DWORD PTR ds:[esi]
  402e33:	or     eax,DWORD PTR [edi+0x0]
  402e36:	lods   eax,DWORD PTR ds:[esi]
  402e37:	add    al,0xee
  402e39:	add    BYTE PTR [eax],al
  402e3b:	ins    DWORD PTR es:[edi],dx
  402e3c:	(bad)  
  402e3d:	or     BYTE PTR [eax],al
  402e3f:	jge    0x402e4c
  402e41:	pop    edi
  402e42:	add    BYTE PTR [ebp+0xb],ch
  402e45:	pop    ds
  402e46:	add    BYTE PTR [ebp+0x4],ch
  402e49:	sahf   
  402e4a:	add    BYTE PTR [ecx-0x2a],dh
  402e4d:	bound  eax,QWORD PTR [eax]
  402e4f:	jge    0x402e5c
  402e51:	jg     0x402e53
  402e53:	ins    DWORD PTR es:[edi],dx
  402e54:	or     edi,DWORD PTR [edi]
  402e56:	add    BYTE PTR [ebp+0x4],ch
  402e59:	fiadd  WORD PTR [eax]
  402e5b:	outs   dx,DWORD PTR ds:[esi]
  402e5c:	(bad)  
  402e5d:	sbb    al,BYTE PTR [eax]
  402e5f:	cmp    eax,0x2d006f0b
  402e64:	or     ebp,DWORD PTR [edi]
  402e66:	add    BYTE PTR ds:0x3d00be04,ch
  402e6c:	or     ecx,DWORD PTR [edi]
  402e6e:	add    BYTE PTR ds:0x2d008f0b,bh
  402e74:	or     ecx,DWORD PTR [edi+0x0]
  402e77:	sub    eax,0x1d00fe04
  402e7c:	(bad)  
  402e7d:	(bad)  
  402e7e:	(bad)  
  402e7f:	std    
  402e80:	or     dl,BYTE PTR [eax+0x0]
  402e83:	in     eax,dx
  402e84:	or     dl,BYTE PTR [eax]
  402e86:	add    BYTE PTR [ecx],al
  402e88:	or     esi,DWORD PTR [ebx+0x0]
  402e8b:	out    dx,eax
  402e8c:	aad    0x1e
  402e8e:	add    ch,bh
  402e90:	or     dh,BYTE PTR [eax+0x0]
  402e93:	in     eax,dx
  402e94:	or     dh,BYTE PTR [eax]
  402e96:	add    ch,ch
  402e98:	add    eax,ecx
  402e9a:	add    ch,ch
  402e9c:	aad    0x9
  402e9e:	add    BYTE PTR [eax],al
  402ea0:	mov    ebp,0xad00600a
  402ea5:	or     ah,BYTE PTR [eax]
  402ea7:	add    BYTE PTR [ebp-0x6bff5efd],ch
  402ead:	jmp    0xe9d42ebd
  402eb2:	or     eax,DWORD PTR [eax+0x400be994]
  402eb8:	xchg   esp,eax
  402eb9:	jmp    0xb7d50fca
  402ebe:	inc    BYTE PTR ds:0x580be794
  402ec4:	xchg   esp,eax
  402ec5:	out    0xb,eax
  402ec7:	sbb    BYTE PTR [edi+eiz*8-0x256b6ef4],dl
  402ece:	(bad)  
  402ecf:	cmp    dl,BYTE PTR [edi+eiz*8-0x186b87f5]
  402ed6:	or     edi,DWORD PTR [eax]
  402ed8:	xchg   esp,eax
  402ed9:	out    0xc,eax
  402edb:	rcl    DWORD PTR [eax+edi*4-0x186bef02],1
  402ee2:	or     ebp,DWORD PTR [eax-0x6c]
  402ee5:	out    0xb,eax
  402ee7:	sub    BYTE PTR [edi+eiz*8-0x186b4ef4],dl
  402eee:	or     ecx,DWORD PTR [eax]
  402ef0:	xchg   esp,eax
  402ef1:	out    0xb,eax
  402ef3:	mov    BYTE PTR [edi+eiz*8-0x186bb7f5],dl
  402efa:	or     al,0xf1
  402efc:	xchg   esp,eax
  402efd:	mov    bh,0xfe
  402eff:	add    edx,DWORD PTR [edi+eiz*8-0x6bffabf5]
  402f06:	out    0xb,eax
  402f08:	adc    al,0x94
  402f0a:	int3   
  402f0b:	or     esp,ebx
  402f0d:	xchg   esp,eax
  402f0e:	(bad)  
  402f10:	sub    dl,BYTE PTR [edi+eiz*8-0x186b8bf5]
  402f17:	or     esi,DWORD PTR [esp+edx*4]
  402f1a:	out    0xa,eax
  402f1c:	leave  
  402f1d:	xchg   esp,eax
  402f1e:	mov    eax,0xe7940cfc
  402f23:	or     esp,DWORD PTR [esp+edx*4+0x0]
  402f27:	jmp    0xe9409f37
  402f2c:	or     bh,ch
  402f2e:	add    cl,ch
  402f30:	or     edx,DWORD PTR [eax+0x180be900]
  402f36:	add    ecx,ebp
  402f38:	or     edx,DWORD PTR [eax+0x0]
  402f3b:	jmp    0xd940ac4a
  402f40:	cld    
  402f41:	xchg   ebx,eax
  402f42:	add    cl,ch
  402f44:	or     esp,eax
  402f46:	add    cl,ch
  402f48:	or     ebx,DWORD PTR [eax+0xd0ae900]
  402f4e:	add    ch,bh
  402f50:	cld    
  402f51:	mov    BYTE PTR [eax],0xe9
  402f54:	or     esp,eax
  402f56:	add    cl,ch
  402f58:	or     ebx,DWORD PTR [eax+0x6d0ae900]
  402f5e:	add    bl,bl
  402f60:	cld    
  402f61:	mov    ds:0xb00be900,al
  402f66:	add    cl,ch
  402f68:	or     eax,DWORD PTR [eax]
  402f6a:	push   0xed0ae900
  402f6f:	(bad)  
  402f70:	call   0xe940c780
  402f75:	or     edx,DWORD PTR [eax]
  402f77:	add    cl,ch
  402f79:	or     ecx,eax
  402f7b:	add    cl,ch
  402f7d:	or     cl,BYTE PTR ds:0x96fcd900
  402f83:	add    cl,ch
  402f85:	or     esp,DWORD PTR [esi+0x0]
  402f88:	jmp    0xf440d598
  402f8d:	or     esi,DWORD PTR [edi]
  402f8f:	add    dl,bh
  402f91:	cld    
  402f92:	mov    dh,0x0
  402f94:	jmp    0xe94095a4
  402f99:	or     esp,DWORD PTR [esi-0x26f51700]
  402f9f:	(bad)  
  402fa0:	call   edi
  402fa2:	enter  0x9,0xe9
  402fa6:	(bad)  
  402fa7:	bound  eax,QWORD PTR [eax]
  402fa9:	jmp    0xe940523d
  402fae:	sahf   
  402faf:	fwait
  402fb0:	add    cl,ch
  402fb2:	lahf   
  402fb3:	add    al,BYTE PTR [eax]
  402fb5:	jmp    0xe940b249
  402fba:	pop    DWORD PTR [edx+0x0]
  402fbd:	jmp    0xd9410d60
  402fc2:	mov    bl,bh
  402fc4:	(bad)  
  402fc5:	call   0xe9406659
  402fca:	(bad)  
  402fcb:	idiv   bh
  402fcd:	call   0xadcdd2
  402fd2:	std    
  402fd3:	push   0x8fe9003f
  402fd8:	push   esi
  402fd9:	add    cl,ch
  402fdb:	(bad)  
  402fdc:	push   ss
  402fdd:	add    cl,ch
  402fdf:	sahf   
  402fe0:	lods   eax,DWORD PTR ds:[esi]
  402fe1:	add    bl,bl
  402fe3:	dec    eax
  402fe4:	out    dx,eax
  402fe5:	(bad)  
  402fe6:	call   0xe940967a
  402feb:	(bad)  
  402fec:	es add cl,ch
  402fef:	sahf   
  402ff0:	lea    eax,[eax]
  402ff2:	jmp    0xe9403696
  402ff7:	pop    DWORD PTR [esi+0x468fe900]
  402ffd:	add    cl,ch
  402fff:	sahf   
  403000:	int    0x0
  403002:	(bad)  [eax]
  403004:	std    
  403005:	(bad)  
  403006:	call   0xe9405a9a
  40300b:	(bad)  
  40300c:	in     eax,dx
  40300d:	jmp    FWORD PTR [eax]
  40300f:	lock sar edi,cl
  403012:	cli    
  403013:	sahf   
  403014:	verw   cx
  403017:	fisttp WORD PTR [ebp+0x0]
  40301a:	add    ch,ch
  40301c:	xlat   BYTE PTR ds:[ebx]
  40301d:	xor    eax,0xccd4bd00
  403022:	add    ah,ch
  403024:	push   es
  403025:	verw   WORD PTR [ebp-0x52ff9a29]
  40302c:	xlat   BYTE PTR ds:[ebx]
  40302d:	and    eax,0xacd4bd00
  403032:	add    BYTE PTR [eax],al
  403034:	mov    ebp,0xad0005d7
  403039:	xlat   BYTE PTR ds:[ebx]
  40303a:	test   DWORD PTR [eax],eax
  40303c:	lods   eax,DWORD PTR ds:[esi]
  40303d:	xlat   BYTE PTR ds:[ebx]
  40303e:	inc    ebp
  40303f:	add    BYTE PTR [ebp-0x2c],bh
  403042:	in     al,dx
  403043:	add    BYTE PTR [ebp+0x6],ch
  403046:	or     DWORD PTR [eax],eax
  403048:	ins    DWORD PTR es:[edi],dx
  403049:	xlat   BYTE PTR ds:[ebx]
  40304a:	pop    ebp
  40304b:	add    BYTE PTR [ebp-0x29],ch
  40304e:	sbb    eax,0x9cd47d00
  403053:	add    BYTE PTR [ecx+0x6],ch
  403056:	arpl   WORD PTR [eax],ax
  403058:	ins    DWORD PTR es:[edi],dx
  403059:	xlat   BYTE PTR ds:[ebx]
  40305a:	jge    0x40305c
  40305c:	ins    DWORD PTR es:[edi],dx
  40305d:	xlat   BYTE PTR ds:[ebx]
  40305e:	cmp    eax,0xdcd43d00
  403063:	add    BYTE PTR [edi+0x6],ch
  403066:	sbb    eax,DWORD PTR [eax]
  403068:	sub    eax,0x2d006dd7
  40306d:	xlat   BYTE PTR ds:[ebx]
  40306e:	sub    eax,0xbcd43d00
  403073:	add    BYTE PTR ds:0x2d000dd7,bh
  403079:	xlat   BYTE PTR ds:[ebx]
  40307a:	lea    eax,[eax]
  40307c:	sub    eax,0xfd004dd7
  403081:	sar    esp,cl
  403083:	add    BYTE PTR ds:0xed000006,bl
  403089:	(bad)  
  40308a:	push   eax
  40308b:	add    ch,ch
  40308d:	(bad)  
  40308e:	adc    BYTE PTR [eax],al
  403090:	call   0x9440b36b
  403095:	xlat   BYTE PTR ds:[ebx]
  403096:	or     bl,BYTE PTR [edi]
  403098:	add    BYTE PTR [ecx+ebp*8-0x166b8f05],dl
  40309f:	sti    
  4030a0:	xor    BYTE PTR [ecx+ebp*8-0x466b3d04],dl
  4030a7:	or     cl,BYTE PTR [edx]
  4030a9:	xchg   esp,eax
  4030aa:	jmp    0xe9d491aa
  4030af:	sti    
  4030b0:	and    BYTE PTR [ecx+ebp*8-0x166b5d04],dl
  4030b7:	sti    
  4030b8:	add    BYTE PTR [ecx+ebp*8-0x166b7f05],dl
  4030bf:	sti    
  4030c0:	inc    eax
  4030c1:	xchg   esp,eax
  4030c2:	out    0xfc,eax
  4030c4:	loop   0x40305a
  4030c6:	mov    bh,0xa
  4030c8:	push   es
  4030c9:	xchg   esp,eax
  4030ca:	out    0xfb,eax
  4030cc:	pop    eax
  4030cd:	xchg   esp,eax
  4030ce:	out    0xfb,eax
  4030d0:	sbb    BYTE PTR [edi+eiz*8-0x296b6d04],dl
  4030d7:	or     bh,BYTE PTR [ebx]
  4030d9:	xchg   esp,eax
  4030da:	out    0xfb,eax
  4030dc:	js     0x403072
  4030de:	out    0xfb,eax
  4030e0:	cmp    BYTE PTR [edi+eiz*8-0x476b2d04],dl
  4030e7:	or     dl,BYTE PTR [ecx]
  4030e9:	xchg   esp,eax
  4030ea:	out    0xfb,eax
  4030ec:	push   0x28fbe794
  4030f1:	xchg   esp,eax
  4030f2:	out    0xfc,eax
  4030f4:	mov    dl,0x94
  4030f6:	out    0xfb,eax
  4030f8:	or     BYTE PTR [edi+eiz*8-0x6bff7705],dl
  4030ff:	out    0xfb,eax
  403101:	dec    eax
  403102:	xchg   esp,eax
  403103:	out    0xfc,eax
  403105:	repnz xchg esp,eax
  403107:	mov    bh,0xa
  403109:	add    al,0x94
  40310b:	out    0xfb,eax
  40310d:	push   esp
  40310e:	xchg   esp,eax
  40310f:	add    cl,ch
  403111:	sti    
  403112:	mov    BYTE PTR [eax],al
  403114:	stc    
  403115:	sti    
  403116:	xchg   ebp,eax
  403117:	(bad)  
  403118:	stc    
  403119:	or     BYTE PTR [edi+0x60fbe900],ch
  40311f:	add    cl,ch
  403121:	sti    
  403122:	mov    BYTE PTR [eax],al
  403124:	jmp    0xd8411023
  403129:	or     BYTE PTR [ecx+0x30fbe900],dl
  40312f:	add    cl,ch
  403131:	sti    
  403132:	js     0x403134
  403134:	jmp    0xe9413033
  403139:	sti    
  40313a:	cwde   
  40313b:	add    cl,ch
  40313d:	sti    
  40313e:	adc    BYTE PTR [ecx],al
  403140:	jmp    0xe9410a40
  403145:	cli    
  403146:	jle    0x403148
  403148:	(bad)  [eax]
  40314a:	mov    WORD PTR [eax],es
  40314c:	jmp    0xe9410a4c
  403151:	sti    
  403152:	nop
  403153:	add    cl,ch
  403155:	cli    
  403156:	push   cs
  403157:	add    ch,bh
  403159:	or     bh,al
  40315b:	add    cl,ch
  40315d:	sti    
  40315e:	fadd   DWORD PTR [eax]
  403160:	jmp    0xd03260
  403165:	jmp    0xdb40a064
  40316a:	or     BYTE PTR [ebx-0x57041700],ch
  403170:	add    cl,ch
  403172:	sti    
  403173:	add    BYTE PTR [eax],0xe9
  403176:	cli    
  403177:	out    dx,al
  403178:	(bad)  
  403179:	call   0xe940c279
  40317e:	sti    
  40317f:	or     BYTE PTR [eax],al
  403181:	jmp    0xe9409281
  403186:	cli    
  403187:	push   cs
  403188:	add    BYTE PTR [eax],al
  40318a:	(bad)  [ebp+edi*8+0x2dffe8ff]
  403191:	add    cl,ch
  403193:	out    dx,eax
  403194:	in     eax,dx
  403195:	push   ebx
  403197:	out    dx,eax
  403198:	mov    ebp,0x1d8cfa00
  40319d:	add    cl,ch
  40319f:	fisttp WORD PTR [ebp+0x0]
  4031a2:	jmp    0xe9403f76
  4031a7:	into   
  4031a8:	mov    ecx,0x58cd800
  4031ad:	add    cl,ch
  4031af:	mov    edi,0xafe9005d
  4031b4:	sbb    eax,0x99aee900
  4031b9:	add    cl,ch
  4031bb:	lahf   
  4031bc:	std    
  4031bd:	(bad)  
  4031be:	call   0xe940af62
  4031c3:	pop    DWORD PTR [ebx+0x0]
  4031c6:	jmp    0x127bfcb
  4031cb:	(bad)  [edi+eax*1+0x2b7fe900]
  4031d2:	add    cl,ch
  4031d4:	outs   dx,DWORD PTR ds:[esi]
  4031d5:	jmp    0x4031d6
  4031d7:	call   0xfd40a94a
  4031dc:	mov    WORD PTR [ebx+0x0],es
  4031df:	jmp    0xe9407d43
  4031e4:	dec    edi
  4031e5:	or     eax,DWORD PTR [eax]
  4031e7:	jmp    0xdb40e93a
  4031ec:	mov    ebx,?
  4031ee:	(bad)  
  4031ef:	call   0xe9408d33
  4031f4:	das    
  4031f5:	sbb    eax,DWORD PTR [eax]
  4031f7:	jmp    0xe940c92a
  4031fc:	pop    ds
  4031fd:	sti    
  4031fe:	(bad)  
  4031ff:	call   0x40ad23
  403204:	std    
  403205:	retf   
  403206:	dec    edx
  403207:	add    ch,bh
  403209:	retf   0xf6
  40320c:	(bad)  
  40320e:	add    al,0x0
  403210:	in     eax,dx
  403211:	retf   
  403212:	push   esi
  403213:	add    ch,bh
  403215:	retf   
  403216:	push   ss
  403217:	add    BYTE PTR [ebp-0x21000034],bh
  40321d:	push   es
  40321e:	xor    eax,DWORD PTR [eax]
  403220:	in     eax,dx
  403221:	retf   
  403222:	jbe    0x403224
  403224:	mov    ebp,0xbd0036cb
  403229:	int3   
  40322a:	into   
  40322b:	add    BYTE PTR [eax],al
  40322d:	fadd   QWORD PTR [esi]
  40322f:	verw   WORD PTR [ebp-0x42ff9935]
  403236:	retf   
  403237:	add    BYTE PTR es:[ebp-0x52ff5134],bh
  40323e:	retf   
  40323f:	push   es
  403240:	add    BYTE PTR [ebp+0x7d0086cb],ch
  403246:	retf   
  403247:	inc    esi
  403248:	add    BYTE PTR [ebp-0x34],bh
  40324b:	out    dx,al
  40324c:	add    BYTE PTR [ebp+0x6],bl
  40324f:	or     DWORD PTR [eax],eax
  403251:	ins    DWORD PTR es:[edi],dx
  403252:	retf   
  403253:	pop    esi
  403254:	add    BYTE PTR [ebp-0x35],bh
  403257:	push   ds
  403258:	add    BYTE PTR [ebp-0x34],bh
  40325b:	sahf   
  40325c:	add    BYTE PTR [ecx+0x6],ah
  40325f:	arpl   WORD PTR [eax],ax
  403261:	ins    DWORD PTR es:[edi],dx
  403262:	retf   
  403263:	jle    0x403265
  403265:	cmp    eax,0x3d003ecb
  40326a:	int3   
  40326b:	fiadd  WORD PTR [eax]
  40326d:	pop    edi
  40326e:	push   es
  40326f:	sbb    eax,DWORD PTR [eax]
  403271:	sub    eax,0x3d006ecb
  403276:	retf   
  403277:	add    BYTE PTR cs:0x9400becc,bh
  40327e:	fsincos 
  403280:	push   cs
  403281:	xchg   esp,eax
  403282:	fsincos 
  403284:	mov    ss,WORD PTR [ecx+ebx*8-0x266bb105]
  40328b:	cld    
  40328c:	(bad)  
  40328d:	xchg   esp,eax
  40328e:	test   eax,0x94000108
  403293:	mov    dh,0x8
  403295:	add    DWORD PTR [ebp-0x6beef736],edx
  40329b:	add    cl,BYTE PTR [ecx]
  40329d:	add    DWORD PTR [eax+ecx*8-0x2f6bfaf8],eax
  4032a4:	or     BYTE PTR [ecx],al
  4032a6:	cwde   
  4032a7:	lods   al,BYTE PTR ds:[esi]
  4032a8:	or     BYTE PTR [ecx-0x6c],al
  4032ab:	lods   al,BYTE PTR ds:[esi]
  4032ac:	or     BYTE PTR [ecx],al
  4032ae:	push   esp
  4032af:	test   eax,0xb1940308
  4032b4:	or     BYTE PTR [ecx],al
  4032b6:	xchg   esi,eax
  4032b7:	int    0x8
  4032b9:	and    DWORD PTR [ebp+ecx*8-0x348bfef8],edx
  4032c0:	or     BYTE PTR [ecx],cl
  4032c2:	xchg   esp,eax
  4032c3:	ror    DWORD PTR [eax],cl
  4032c5:	add    DWORD PTR [ebp+ebp*4+0x17948108],ebx
  4032cc:	or     DWORD PTR [eax],eax
  4032ce:	xchg   esp,eax
  4032cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4032d0:	or     BYTE PTR [edx],al
  4032d2:	xchg   esp,eax
  4032d3:	mov    dh,0x8
  4032d5:	adc    DWORD PTR [ebp-0x6be6f736],0x7c010902
  4032df:	enter  0x708,0x94
  4032e3:	ror    BYTE PTR [eax],1
  4032e5:	add    DWORD PTR [edx-0x6b9ef754],ebx
  4032eb:	lods   al,BYTE PTR ds:[esi]
  4032ec:	or     BYTE PTR [ecx],al
  4032ee:	mov    ah,0xa7
  4032f0:	or     BYTE PTR [esp+edx*4],al
  4032f3:	scas   eax,DWORD PTR es:[edi]
  4032f4:	or     BYTE PTR [ecx],al
  4032f6:	add    BYTE PTR [edi+0x6508fd00],dl
  4032fc:	add    ch,bh
  4032fe:	or     BYTE PTR [ebp-0x76f704f0],dl
  403304:	add    bl,dh
  403306:	or     BYTE PTR [ebp-0x2af72104],dl
  40330c:	add    BYTE PTR [ecx-0x26ff6bf8],ch
  403312:	add    esp,DWORD PTR [ebp-0x6bfc2500]
  403318:	add    cl,dh
  40331a:	add    edx,DWORD PTR [ebx-0x65fc1000]
  403320:	add    bl,ah
  403322:	add    edx,DWORD PTR [ecx-0x67fc1e00]
  403328:	add    ch,dh
  40332a:	add    edx,DWORD PTR [edi-0x69fc1400]
  403330:	add    bh,ah
  403332:	add    edx,DWORD PTR [ebp-0x6bfc2200]
  403338:	add    cl,ch
  40333a:	add    edx,DWORD PTR [eax+eax*1+0x559b1477]
  403341:	lds    esp,FWORD PTR [edx-0x76]
  403344:	ficom  WORD PTR [ebx+0x33]
  403347:	popf   
  403348:	addr16 loopne 0x403312
  40334b:	stc    
  40334c:	add    eax,0x50eed86e
  403351:	mov    esp,0x4ad7f7a6
  403356:	ja     0x403350
  403358:	outs   dx,BYTE PTR ds:[esi]
  403359:	sbb    edi,DWORD PTR [eax+eax*1+0x4f]
  40335d:	inc    BYTE PTR [esp+ecx*4-0x2508b8c0]
  403364:	inc    ecx
  403365:	loopne 0x4033c8
  403367:	stos   DWORD PTR es:[edi],eax
  403368:	data16 jne 0x40337d
  40336b:	inc    eax
  40336c:	add    dh,bh
  40336e:	jnp    0x4033c0
  403370:	add    eax,0x9aee004e
  403375:	mov    bh,ah
  403377:	pop    eax
  403378:	inc    ebx
  403379:	mov    ss,WORD PTR [eax+0x1d96278d]
  40337f:	sbb    edi,DWORD PTR [eax-0x70]
  403382:	push   0xffffffa1
  403384:	mov    BYTE PTR [edi-0x71a8d00d],0x84
  40338b:	test   BYTE PTR [ebx-0x56],al
  40338e:	sbb    dl,BYTE PTR [edx]
  403390:	in     al,dx
  403391:	stos   BYTE PTR es:[edi],al
  403392:	ins    DWORD PTR es:[edi],dx
  403393:	cwde   
  403394:	and    dh,BYTE PTR [esp+esi*8-0x7c4ee4da]
  40339b:	aas    
  40339c:	js     0x4033fa
  40339e:	adc    ebp,DWORD PTR [ecx+0x536458ff]
  4033a4:	iret   
  4033a5:	popa   
  4033a6:	std    
  4033a7:	mov    ebp,0x368a630e
  4033ac:	test   bh,bh
  4033ae:	adc    esp,DWORD PTR [eax+0x4a630663]
  4033b4:	mov    edi,ebp
  4033b6:	stc    
  4033b7:	mov    ah,0xb2
  4033b9:	add    al,0x8d
  4033bb:	mov    cl,0x77
  4033bd:	pop    esi
  4033be:	cmp    edi,DWORD PTR [edi]
  4033c0:	add    BYTE PTR [eax+0x568d4c57],ch
  4033c6:	pusha  
  4033c7:	aad    0x1b
  4033c9:	out    0x63,eax
  4033cb:	mov    ds:0x3c007398,al
  4033d0:	es cmp al,0x5
  4033d3:	dec    ebx
  4033d4:	je     0x4033e8
  4033d6:	(bad)  
  4033d7:	rol    DWORD PTR [edx],1
  4033d9:	or     esi,edi
  4033db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4033dc:	arpl   WORD PTR [edi],cx
  4033de:	xchg   esi,eax
  4033df:	xor    eax,0x428eefcd
  4033e4:	aas    
  4033e5:	push   ds
  4033e6:	mov    bl,bl
  4033e8:	test   eax,0xac8d5e
  4033ed:	fisubr WORD PTR [ebx]
  4033ef:	fdiv   DWORD PTR [edx]
  4033f1:	or     BYTE PTR [edi+ebx*8],bl
  4033f4:	inc    ebp
  4033f5:	jb     0x4033c1
  4033f7:	aad    0xdc
  4033f9:	add    al,0xfb
  4033fb:	shr    BYTE PTR [ebx+0x26d8efc1],1
  403401:	aaa    
  403402:	add    dh,bl
  403404:	push   ecx
  403405:	lods   eax,DWORD PTR ds:[esi]
  403406:	push   cs
  403407:	xlat   BYTE PTR ds:[ebx]
  403408:	enter  0x5f0b,0xd0
  40340c:	mov    edi,0x21b4b3c8
  403411:	into   
  403412:	ret    
  403413:	mov    bl,0x56
  403415:	fs push edx
  403417:	mov    edx,0xbda2d2cf
  40341c:	mov    eax,0x28027d13
  403421:	in     eax,0x47
  403423:	add    eax,0x9dff005f
  403428:	or     al,0xc6
  40342a:	cdq    
  40342b:	lods   eax,DWORD PTR ds:[esi]
  40342c:	or     esi,DWORD PTR [ecx+0x2f6f383a]
  403432:	fcom   QWORD PTR [ebx]
  403434:	push   0x60da1658
  403439:	rol    eax,0xe8
  40343c:	gs mov dh,0x2d
  40343f:	inc    ebp
  403440:	fdiv   QWORD PTR [esi-0x45]
  403443:	xor    al,0xdb
  403445:	add    DWORD PTR [ecx+0x24],eax
  403448:	rcr    BYTE PTR [eax-0x102b30a9],cl
  40344e:	add    al,0x82
  403450:	mov    cl,0x71
  403452:	bound  esi,QWORD PTR [eax-0x4a]
  403455:	push   es
  403456:	enter  0xbfe0,0x9f
  40345a:	cs fwait
  40345c:	mov    eax,0x78d1fe8
  403461:	js     0x4033ec
  403463:	mov    ebp,0x63940f00
  403468:	pushf  
  403469:	or     DWORD PTR [edx],ebp
  40346b:	shr    DWORD PTR [ebx+0xe],1
  40346e:	xor    eax,0xc369f97e
  403473:	cld    
  403474:	or     BYTE PTR [ebp-0x74],ch
  403477:	sub    bl,BYTE PTR [eax+0x64]
  40347a:	add    eax,0x326327d8
  40347f:	in     eax,dx
  403480:	xor    al,0x6b
  403482:	scas   eax,DWORD PTR es:[edi]
  403483:	ja     0x4034e9
  403485:	ins    BYTE PTR es:[edi],dx
  403486:	js     0x403499
  403488:	adc    al,0x65
  40348a:	add    BYTE PTR [ecx],bl
  40348c:	imul   eax,DWORD PTR [ebx],0x62
  40348f:	push   es
  403490:	hlt    
  403491:	jo     0x403499
  403493:	jo     0x403513
  403495:	mov    al,ds:0xd0189f01
  40349a:	or     BYTE PTR [esi],dl
  40349c:	jb     0x40345d
  40349e:	psraw  mm3,QWORD PTR [edx+0x979b0ac]
  4034a5:	fnsave [edi-0x4174407a]
  4034ab:	pop    ds
  4034ac:	cmp    eax,0xa1c8b97c
  4034b1:	call   0x19506b92
  4034b6:	fisub  DWORD PTR [ecx+0x20d34786]
  4034bc:	inc    esp
  4034bd:	cmp    ah,dl
  4034bf:	scas   eax,DWORD PTR es:[edi]
  4034c0:	inc    eax
  4034c1:	gs mov dl,0x51
  4034c4:	fwait
  4034c5:	xor    al,0xb5
  4034c7:	pop    esi
  4034c8:	in     eax,dx
  4034c9:	add    edi,DWORD PTR [edi+esi*1+0x60bb1376]
  4034d0:	sbb    DWORD PTR [ecx+0x7072cedf],esp
  4034d6:	fdivr  DWORD PTR [ecx+0x38d1c004]
  4034dc:	dec    edi
  4034dd:	iret   
  4034de:	(bad)  
  4034df:	inc    edi
  4034e0:	add    ebx,edx
  4034e2:	fsub   st(5),st
  4034e4:	cmp    eax,0x14eaac5d
  4034e9:	scas   eax,DWORD PTR es:[edi]
  4034ea:	jnp    0x4034a7
  4034ec:	fwait
  4034ed:	cmp    DWORD PTR [ebx-0x45594c00],ecx
  4034f3:	sbb    BYTE PTR [eax-0x6917bbbc],bl
  4034f9:	or     eax,0x969e3796
  4034fe:	and    BYTE PTR [edi-0x67],al
  403501:	stos   DWORD PTR es:[edi],eax
  403502:	in     eax,0x54
  403504:	cdq    
  403505:	xor    BYTE PTR [ebx+0x44],dl
  403508:	xchg   esi,eax
  403509:	and    ecx,edi
  40350b:	repz sahf 
  40350d:	mov    ah,BYTE PTR [edi+0x23]
  403510:	cwde   
  403511:	mov    bh,0xcc
  403513:	nop
  403514:	ins    BYTE PTR es:[edi],dx
  403515:	xor    DWORD PTR [edx],edi
  403517:	sub    BYTE PTR [ebx+0x20],0xe0
  40351b:	scas   eax,DWORD PTR es:[edi]
  40351c:	jp     0x4034a5
  40351e:	dec    esi
  40351f:	fbstp  TBYTE PTR [ebp-0x46]
  403522:	test   edx,0xbb812ac2
  403528:	mov    ebp,0xe46c0b17
  40352d:	nop
  40352e:	xchg   ebp,eax
  40352f:	pushf  
  403530:	jecxz  0x4034f3
  403532:	fiadd  WORD PTR [esi]
  403534:	pop    es
  403535:	sub    BYTE PTR [eax-0x9],ch
  403538:	pop    es
  403539:	sbb    esi,edx
  40353b:	daa    
  40353c:	icebp  
  40353d:	xchg   ecx,eax
  40353e:	jl     0x403598
  403540:	out    dx,al
  403541:	ror    cl,0x84
  403544:	(bad)  
  403546:	push   edi
  403547:	xchg   ebp,eax
  403548:	(bad)  [esi-0x1b]
  40354b:	in     eax,0x4a
  40354d:	std    
  40354e:	jb     0x403506
  403550:	inc    ebp
  403551:	push   esp
  403552:	rol    BYTE PTR [eax+0x0],0x69
  403556:	(bad)  
  403557:	dec    esi
  403558:	push   ecx
  403559:	imul   ax,WORD PTR [eax],0xffdc
  40355d:	mov    ch,0xa5
  40355f:	add    al,0x6a
  403561:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  403563:	jae    0x403560
  403565:	pusha  
  403566:	pop    esi
  403567:	jecxz  0x4035ce
  403569:	mov    DWORD PTR [esp+edx*4+0x17],esp
  40356d:	repnz pop ebx
  40356f:	or     eax,0x7a567a81
  403574:	repnz cld 
  403576:	stc    
  403577:	jecxz  0x4035d5
  403579:	dec    ebp
  40357a:	not    DWORD PTR [edx+0xa000e0e]
  403580:	js     0x403540
  403582:	add    DWORD PTR [ebp-0x53],edi
  403585:	test   al,0xf9
  403587:	out    dx,eax
  403588:	cmp    esi,ecx
  40358a:	test   DWORD PTR [esi+0x1dfee981],0x6901d20f
  403594:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403595:	les    ebx,FWORD PTR [esi-0x9]
  403598:	xor    dh,BYTE PTR [ebp+0x63]
  40359b:	cmp    BYTE PTR [eax-0x7b],0x5c
  40359f:	sbb    DWORD PTR [esi],eax
  4035a1:	xchg   esi,eax
  4035a2:	push   ebp
  4035a3:	outs   dx,BYTE PTR ds:[esi]
  4035a4:	pop    edi
  4035a5:	icebp  
  4035a6:	lods   al,BYTE PTR ds:[esi]
  4035a7:	dec    cl
  4035a9:	js     0x403558
  4035ab:	mov    DWORD PTR [ebx],esi
  4035ad:	bound  esp,QWORD PTR [esi-0x547662f0]
  4035b3:	addr16 push esi
  4035b5:	in     eax,dx
  4035b6:	xchg   cl,bh
  4035b8:	rol    BYTE PTR [eax],0xdc
  4035bb:	mov    DWORD PTR [esi+0x17911e2a],ecx
  4035c1:	xchg   esp,eax
  4035c2:	sub    eax,0xf8916090
  4035c7:	mov    cl,0xd6
  4035c9:	pop    ds
  4035ca:	and    DWORD PTR [edi-0x56a6525f],ebp
  4035d0:	cmp    BYTE PTR [ebx],bh
  4035d2:	bound  ebp,QWORD PTR [eax+0x60fc004f]
  4035d8:	mov    ebx,0xbc1192d1
  4035dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4035de:	or     BYTE PTR [edx],al
  4035e0:	mov    ch,0x3f
  4035e2:	mov    dh,0xf2
  4035e4:	mov    cl,0x48
  4035e6:	xlat   BYTE PTR ds:[ebx]
  4035e7:	in     al,0xc
  4035e9:	fsubr  DWORD PTR [ecx]
  4035eb:	aad    0x9
  4035ed:	scas   eax,DWORD PTR es:[edi]
  4035ee:	repz add eax,0x365d3603
  4035f4:	add    al,0x41
  4035f6:	outs   dx,BYTE PTR ds:[esi]
  4035f7:	test   al,0x60
  4035f9:	fbld   TBYTE PTR [eax]
  4035fb:	cdq    
  4035fc:	addr16 test al,0xda
  4035ff:	dec    ecx
  403600:	outs   dx,BYTE PTR ds:[esi]
  403601:	xor    esp,esp
  403603:	jns    0x40366e
  403605:	inc    esi
  403606:	test   eax,0x97cb616c
  40360b:	jge    0x403673
  40360d:	mov    esp,0x256f8d5d
  403612:	jecxz  0x4035f1
  403614:	push   0xc306052
  403619:	int3   
  40361a:	out    dx,al
  40361b:	inc    eax
  40361c:	or     edi,DWORD PTR [ebx+0x1d1a400]
  403622:	and    ch,BYTE PTR [edx]
  403624:	and    al,BYTE PTR ds:0xb9fc3b55
  40362a:	lds    eax,FWORD PTR [ebp+0x4fb2bccb]
  403630:	sbb    dh,BYTE PTR [ebx+ebp*1+0x5cb329b1]
  403637:	adc    al,al
  403639:	xlat   BYTE PTR ds:[ebx]
  40363a:	ret    0x8ebc
  40363d:	shl    BYTE PTR [ebp+0x2cd95e36],1
  403643:	fsubr  DWORD PTR [ebp-0x22]
  403646:	pop    ebx
  403647:	cmp    eax,0xd39b64c2
  40364c:	mov    cl,0x63
  40364e:	in     al,dx
  40364f:	xchg   esp,eax
  403650:	dec    ebp
  403651:	mov    ds:0x72e4016a,eax
  403656:	ins    DWORD PTR es:[edi],dx
  403657:	xchg   esi,eax
  403658:	xor    dh,bh
  40365a:	or     BYTE PTR [eax],bl
  40365c:	xchg   BYTE PTR ds:0x5f547f0e,cl
  403662:	pop    es
  403663:	out    0xaa,al
  403665:	add    BYTE PTR cs:[ecx+0x1bf3a5b],bl
  40366c:	int    0x49
  40366e:	mov    eax,0xb11b7f36
  403673:	iret   
  403674:	icebp  
  403675:	jmp    0x26d2:0x766290b5
  40367c:	aam    0x85
  40367e:	aad    0x39
  403680:	inc    esi
  403681:	xlat   BYTE PTR ds:[ebx]
  403682:	fadd   QWORD PTR [eax]
  403684:	test   al,0xf8
  403686:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403687:	fisttp DWORD PTR [edi+0x12d3b205]
  40368d:	fwait
  40368e:	loope  0x403664
  403690:	add    eax,0x7cdd92f1
  403695:	inc    edi
  403696:	sbb    dl,0xa3
  403699:	or     al,0xee
  40369b:	mov    ebp,0xb91da215
  4036a0:	jmp    0x3e4e:0x7bb04ef7
  4036a7:	mov    bh,0x7c
  4036a9:	mov    bh,0x29
  4036ab:	or     BYTE PTR [ecx+ebp*1],cl
  4036ae:	pop    edx
  4036af:	psrlq  mm4,QWORD PTR [edx+0x1532060a]
  4036b6:	sti    
  4036b7:	add    BYTE PTR [ebp+0xb6565be],ah
  4036bd:	xor    BYTE PTR [esi-0x3996539e],dl
  4036c3:	imul   esi,DWORD PTR ds:0x8a6cb71c,0x0
  4036ca:	and    edx,esp
  4036cc:	mov    fs,WORD PTR [eax-0x525e4e71]
  4036d2:	cmp    eax,0xab369083
  4036d7:	xchg   edx,eax
  4036d8:	xchg   edi,eax
  4036d9:	pop    es
  4036da:	or     BYTE PTR [esi],bl
  4036dc:	repz popf 
  4036de:	jbe    0x4036cd
  4036e0:	shl    DWORD PTR [eax+0x37fd3f24],cl
  4036e6:	xchg   edx,eax
  4036e7:	dec    esi
  4036e8:	add    dl,dh
  4036ea:	push   es
  4036eb:	mov    bl,0x59
  4036ed:	inc    ebp
  4036ee:	xchg   edi,eax
  4036ef:	cmp    eax,0xcfa86a29
  4036f4:	cli    
  4036f5:	push   0x41
  4036f7:	pop    ecx
  4036f8:	or     bl,BYTE PTR [esi+ecx*1-0x66]
  4036fc:	xchg   ebp,eax
  4036fd:	clc    
  4036fe:	xchg   edi,eax
  4036ff:	and    al,0x65
  403701:	out    dx,eax
  403702:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403703:	mov    dh,0xb6
  403705:	out    0x3d,al
  403707:	inc    eax
  403708:	(bad)  
  403709:	jmp    0xda123c1e
  40370e:	xor    DWORD PTR [ebx-0x3f],0x4e
  403712:	mov    ebx,0x324772d9
  403717:	inc    edi
  403718:	mov    ds:0xdec1d48,al
  40371d:	in     al,0x8a
  40371f:	pop    edx
  403720:	std    
  403721:	retf   0xc0b3
  403724:	cs retf 0x2e2c
  403728:	pop    esi
  403729:	mov    ebp,0x724a1721
  40372e:	xchg   ecx,eax
  40372f:	mov    eax,ds:0xebbc353a
  403734:	call   0x19b55a6c
  403739:	xor    ebx,DWORD PTR [edx]
  40373b:	inc    BYTE PTR [ebp+0x76888c8f]
  403741:	mov    al,ds:0xf0d200c1
  403746:	sti    
  403747:	pop    ecx
  403748:	pop    esp
  403749:	leave  
  40374a:	add    ch,BYTE PTR ds:0x9700e9
  403750:	add    BYTE PTR [eax],ch
  403752:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403753:	jmp    0xf36a270
  403758:	xor    ch,BYTE PTR [edx-0x12d4ec3b]
  40375e:	cmp    dl,BYTE PTR [esp+eiz*2+0x24]
  403762:	inc    esp
  403763:	dec    ebp
  403764:	jge    0x4037d5
  403766:	or     DWORD PTR [edx],ebp
  403768:	push   esi
  403769:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40376a:	repnz aas 
  40376c:	dec    edi
  40376d:	icebp  
  40376e:	frstor [edi-0x3de34f38]
  403774:	shl    DWORD PTR [ebx+0x68],1
  403777:	aad    0xfa
  403779:	and    ch,bh
  40377b:	retf   
  40377c:	jecxz  0x403773
  40377e:	or     BYTE PTR [ebx-0x69265354],0xb5
  403785:	add    DWORD PTR [bx+di+0x1e9e],0x2c
  40378b:	ins    DWORD PTR es:[edi],dx
  40378c:	xchg   DWORD PTR [eax-0x6b540db],edi
  403792:	mov    ah,0xa7
  403794:	push   ebx
  403795:	cmp    ah,BYTE PTR [eax-0x34]
  403798:	js     0x403815
  40379a:	push   edi
  40379b:	aad    0x61
  40379d:	pushf  
  40379e:	sub    BYTE PTR [esi-0x752e2ad2],dl
  4037a4:	aaa    
  4037a5:	push   ds
  4037a6:	sbb    ebp,DWORD PTR [eax+0x1c]
  4037a9:	push   edi
  4037aa:	adc    al,0x81
  4037ac:	add    eax,0x81e96840
  4037b1:	add    DWORD PTR [eax],eax
  4037b3:	das    
  4037b4:	add    BYTE PTR [ebx-0x4fed224e],bl
  4037ba:	jae    0x4037b8
  4037bc:	or     eax,0x1d7000a9
  4037c1:	ja     0x4037a9
  4037c3:	shr    DWORD PTR [esp+ebp*2],1
  4037c6:	inc    DWORD PTR [edx]
  4037c8:	cld    
  4037c9:	inc    eax
  4037ca:	aam    0x53
  4037cc:	retf   
  4037cd:	pop    ecx
  4037ce:	int    0x4f
  4037d0:	in     eax,0x83
  4037d2:	xchg   ebp,eax
  4037d3:	push   ds
  4037d4:	rcr    DWORD PTR [esi-0x4df9a274],cl
  4037da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4037db:	mov    WORD PTR ds:0xdecbbea9,?
  4037e1:	call   0xf3d052d7
  4037e6:	call   0xc41eb944
  4037eb:	cwde   
  4037ec:	outs   dx,BYTE PTR ds:[esi]
  4037ed:	(bad)
  4037f0:	outs   dx,BYTE PTR ds:[esi]
  4037f1:	pop    ebp
  4037f2:	pop    ebp
  4037f3:	out    0x5c,al
  4037f5:	inc    esi
  4037f6:	inc    esp
  4037f7:	xchg   ebp,eax
  4037f8:	mov    BYTE PTR [ebx+0x6f],ch
  4037fb:	push   esp
  4037fc:	mov    ebx,0x29237670
  403801:	xor    DWORD PTR [ecx],edi
  403803:	loop   0x40381e
  403805:	sub    ah,BYTE PTR [eax]
  403807:	xchg   ecx,eax
  403808:	mov    DWORD PTR [esi],0x1bf7e00b
  40380e:	adc    bh,BYTE PTR [esi-0xb]
  403811:	inc    ebp
  403812:	fild   QWORD PTR [edi-0x3c]
  403815:	pop    esp
  403816:	mov    BYTE PTR [eax],0x2c
  403819:	adc    al,0x70
  40381b:	in     eax,dx
  40381c:	frstor [edx]
  40381e:	imul   esi,esp,0xfffffffa
  403821:	mov    bl,0x2a
  403823:	mov    ebx,0xa231c1ab
  403828:	push   0x29891c4e
  40382d:	mov    al,ds:0x80f69007
  403832:	lahf   
  403833:	pop    ss
  403834:	div    DWORD PTR [ecx-0x7c]
  403837:	push   cs
  403838:	xchg   esp,eax
  403839:	xor    dl,ah
  40383b:	test   eax,0xb2b2f179
  403840:	js     0x4037fc
  403842:	cmp    eax,0x4c4327f3
  403847:	call   0xc55f448a
  40384c:	push   ebp
  40384d:	aad    0xed
  40384f:	fnstsw WORD PTR [esp+edx*8]
  403852:	push   edx
  403853:	jns    0x4037d9
  403855:	sbb    eax,0x527d6242
  40385a:	icebp  
  40385b:	dec    esi
  40385c:	push   esi
  40385d:	fwait
  40385e:	and    BYTE PTR [edi+ebx*2-0x28],dl
  403862:	lea    edx,ds:0xe7f1908
  403868:	sbb    DWORD PTR [esi-0x54],edx
  40386b:	and    edi,DWORD PTR [edx]
  40386d:	xchg   edi,eax
  40386e:	fnstsw WORD PTR [eax]
  403870:	sbb    ecx,esp
  403872:	enter  0x8ca0,0x95
  403876:	mov    bh,0xbb
  403878:	jne    0x4038d4
  40387a:	imul   edx,DWORD PTR [esi-0x661c7200],0xffffff8d
  403881:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403882:	rol    BYTE PTR [ebx],1
  403884:	int3   
  403885:	rcl    BYTE PTR [ecx+0x5ed1d6f4],1
  40388b:	es cli 
  40388d:	mov    dl,0x1f
  40388f:	push   edi
  403890:	loope  0x403835
  403892:	test   DWORD PTR [eax-0x45],esp
  403895:	dec    esi
  403896:	int3   
  403897:	das    
  403898:	mov    al,ds:0x8d030337
  40389d:	or     al,0x4a
  40389f:	adc    dl,BYTE PTR [esi-0x286496db]
  4038a5:	shl    BYTE PTR [edi-0x192c3394],cl
  4038ab:	mov    ebp,0xcf25f0e1
  4038b0:	cli    
  4038b1:	loope  0x4038b2
  4038b3:	inc    esp
  4038b4:	(bad)  [esi]
  4038b6:	dec    esi
  4038b7:	cld    
  4038b8:	test   eax,0x78b7574d
  4038bd:	push   0x4b876e40
  4038c2:	sub    DWORD PTR [ecx],esp
  4038c4:	push   ss
  4038c5:	mov    ds:0x80e6dfea,al
  4038ca:	repz xchg edx,eax
  4038cc:	xor    ebx,DWORD PTR [esp+ebx*1+0x52]
  4038d0:	inc    esp
  4038d1:	ja     0x4038d8
  4038d3:	dec    esi
  4038d4:	cs xchg ecx,eax
  4038d6:	pop    esp
  4038d7:	xchg   DWORD PTR [ebp+0x72],ebx
  4038da:	inc    ebp
  4038db:	int3   
  4038dc:	or     al,0x4f
  4038de:	sub    al,BYTE PTR ds:0x334b00fc
  4038e4:	dec    edx
  4038e5:	jno    0x4038ec
  4038e7:	add    BYTE PTR [ebx-0x3816e15e],cl
  4038ed:	iret   
  4038ee:	cmp    ecx,DWORD PTR [esi]
  4038f0:	or     ecx,eax
  4038f2:	sbb    BYTE PTR [edi],dl
  4038f4:	xchg   esi,eax
  4038f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4038f6:	js     0x40388b
  4038f8:	dec    edi
  4038f9:	ror    DWORD PTR [ebx-0x5978fb74],cl
  4038ff:	popa   
  403900:	mov    ebp,0x927a8d75
  403905:	out    0xdb,eax
  403907:	mov    bh,0x53
  403909:	sbb    bh,al
  40390b:	mov    al,0x0
  40390d:	dec    edx
  40390e:	mov    ds:0xb13ac1c5,al
  403913:	ficomp WORD PTR [edi]
  403915:	cmp    al,0xd3
  403917:	adc    DWORD PTR [esi+0x4b],edx
  40391a:	mov    al,0xa
  40391c:	popf   
  40391d:	push   ds
  40391e:	(bad)  
  40391f:	jecxz  0x4038f4
  403921:	in     eax,dx
  403922:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403923:	cld    
  403924:	cli    
  403925:	jle    0x40396e
  403927:	xor    eax,0x2e5c903a
  40392c:	add    BYTE PTR [ecx-0xb],bh
  40392f:	pop    ebx
  403930:	jns    0x4038ea
  403932:	es inc ebx
  403934:	pusha  
  403935:	out    0x9,eax
  403937:	(bad)  
  403939:	sahf   
  40393a:	rol    bl,cl
  40393c:	(bad)  
  40393d:	push   ebp
  40393e:	daa    
  40393f:	mov    cl,0xd5
  403941:	or     al,0x30
  403943:	mov    ch,0xcc
  403945:	ret    
  403946:	add    BYTE PTR [esi-0x627d7c89],ch
  40394c:	outs   dx,DWORD PTR ds:[esi]
  40394d:	call   0x72f0:0xb1843c31
  403954:	cdq    
  403955:	test   al,0x32
  403957:	xor    BYTE PTR [ebp+0x3b],bh
  40395a:	repz (bad) 
  40395c:	push   0x8b42a022
  403961:	or     DWORD PTR [ecx+0x49],esp
  403964:	xchg   edx,eax
  403965:	adc    BYTE PTR [esi],dh
  403967:	rcl    ecx,cl
  403969:	pop    edi
  40396a:	out    dx,eax
  40396b:	mov    ebx,0x95a446cc
  403970:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403971:	ins    DWORD PTR es:[edi],dx
  403972:	pop    ebp
  403973:	xchg   BYTE PTR [esi+0x26a9aa74],bh
  403979:	repz jmp 0x4039ac
  40397c:	inc    eax
  40397d:	jmp    0xd769:0xc1548828
  403984:	dec    ecx
  403985:	fsubr  DWORD PTR [esi-0x1868f5b4]
  40398b:	std    
  40398c:	adc    cl,BYTE PTR [esi-0x5aff54d4]
  403992:	gs or  al,0xe5
  403995:	mov    ebx,0x713f2203
  40399a:	ret    0x2688
  40399d:	push   0x43493071
  4039a2:	xor    bh,bl
  4039a4:	push   ebx
  4039a5:	pop    edx
  4039a6:	add    bl,bh
  4039a8:	das    
  4039a9:	sub    eax,0x3f0a0015
  4039ae:	ss or  al,0x49
  4039b1:	rcr    DWORD PTR [edx],1
  4039b3:	daa    
  4039b4:	mov    BYTE PTR [eax],ah
  4039b6:	add    BYTE PTR [esi],bh
  4039b8:	iret   
  4039b9:	cld    
  4039ba:	xchg   edi,eax
  4039bb:	mov    ecx,0xa082cd8e
  4039c0:	cmp    eax,0xfc8bae1b
  4039c5:	sub    esi,DWORD PTR [ebp-0xb462c6e]
  4039cb:	fld    QWORD PTR [edx+0x41c4ef88]
  4039d1:	pop    eax
  4039d2:	ret    0xef
  4039d5:	addr16 fdecstp 
  4039d8:	and    al,0x40
  4039da:	pop    es
  4039db:	scas   al,BYTE PTR es:[edi]
  4039dc:	in     eax,0x8e
  4039de:	sbb    al,0xb7
  4039e0:	xchg   esi,eax
  4039e1:	mov    ds:0x71579c31,al
  4039e6:	sub    al,BYTE PTR [ebp-0x359504f8]
  4039ec:	(bad)  [ebx+0x70]
  4039ef:	rcr    DWORD PTR [edx+0x1bf85d1d],cl
  4039f5:	scas   al,BYTE PTR es:[edi]
  4039f6:	inc    ebp
  4039f7:	loope  0x4039d5
  4039f9:	mov    ecx,0x91d66dd
  4039fe:	lds    edi,FWORD PTR [edi+0x4e]
  403a01:	pop    eax
  403a02:	call   0xf327c95b
  403a07:	dec    ebp
  403a08:	loopne 0x403a7e
  403a0a:	mov    dl,0x2
  403a0c:	adc    esi,eax
  403a0e:	test   eax,0x9352001b
  403a13:	test   BYTE PTR [eax],dh
  403a15:	xchg   ebx,eax
  403a16:	and    al,0x9f
  403a18:	sub    DWORD PTR [ebp+0x31],esi
  403a1b:	(bad)
  403a1e:	pusha  
  403a1f:	fdivp  st(5),st
  403a21:	xchg   esp,eax
  403a22:	ror    edi,cl
  403a24:	repz loop 0x4039b9
  403a27:	mov    esi,0x2c45e3e8
  403a2c:	test   eax,0xb25cbd14
  403a31:	std    
  403a32:	ja     0x403a3e
  403a34:	lahf   
  403a35:	es das 
  403a37:	sti    
  403a38:	cmp    edi,0xffffff99
  403a3b:	call   0x1a18b25b
  403a40:	pop    es
  403a41:	mov    DWORD PTR [ebx],ebx
  403a43:	inc    esi
  403a44:	sub    bl,BYTE PTR [edx-0x64cec8a6]
  403a4a:	cmp    eax,0x745c70a5
  403a4f:	aam    0x6b
  403a51:	inc    ebp
  403a52:	mov    edi,0xf61e4682
  403a57:	jno    0x403ab6
  403a59:	div    edi
  403a5b:	(bad)  
  403a5c:	cli    
  403a5d:	pop    edi
  403a5e:	scas   al,BYTE PTR es:[edi]
  403a5f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403a60:	loope  0x403ac8
  403a62:	gs jns 0x403a31
  403a65:	jge    0x403ac3
  403a67:	mov    bh,dl
  403a69:	je     0x403a5e
  403a6b:	adc    DWORD PTR [esi-0x731d4dc5],edx
  403a71:	sub    ah,BYTE PTR [ecx+0x34]
  403a74:	mov    al,ds:0x451ff900
  403a79:	mov    ebx,0x23606f18
  403a7e:	xchg   edi,eax
  403a7f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403a80:	das    
  403a81:	cmp    BYTE PTR [esi-0x7aeb0113],bl
  403a87:	and    al,0xe
  403a89:	push   cs
  403a8a:	jl     0x403af7
  403a8c:	fwait
  403a8d:	dec    edi
  403a8e:	mov    bl,0xaa
  403a90:	ins    BYTE PTR es:[edi],dx
  403a91:	push   esp
  403a92:	mov    ds:0xc179b9e9,al
  403a97:	sub    bl,cl
  403a99:	bound  esp,QWORD PTR [eax+0x0]
  403a9c:	push   es
  403a9d:	leave  
  403a9e:	int3   
  403a9f:	cmp    DWORD PTR [edi+0x7498b7b7],0x2d738a67
  403aa9:	xchg   esi,eax
  403aaa:	mov    DWORD PTR [edx-0x1e],ebp
  403aad:	add    eax,DWORD PTR [eax-0x5b]
  403ab0:	mov    ds:0x50bc52f4,eax
  403ab5:	and    dh,BYTE PTR [esi-0x29]
  403ab8:	adc    DWORD PTR [ebx+0x4d],edx
  403abb:	into   
  403abc:	dec    BYTE PTR [esi-0x4b]
  403abf:	dec    eax
  403ac0:	aaa    
  403ac1:	ds mov esi,0xe2f07c4f
  403ac7:	cmp    dh,BYTE PTR [ebp-0x25de1fe1]
  403acd:	mov    DWORD PTR [ecx],ebx
  403acf:	in     eax,dx
  403ad0:	sbb    bh,BYTE PTR [ebx+0xa]
  403ad3:	hlt    
  403ad4:	push   edi
  403ad5:	stos   DWORD PTR es:[edi],eax
  403ad6:	fistp  WORD PTR [esi]
  403ad8:	cdq    
  403ad9:	fadd   QWORD PTR [eax]
  403adb:	xor    al,0x7
  403add:	xchg   ebp,eax
  403ade:	mov    dl,0xa
  403ae0:	pop    edi
  403ae1:	dec    esp
  403ae2:	sar    ecx,0x45
  403ae5:	pop    es
  403ae6:	xchg   ebp,eax
  403ae7:	int3   
  403ae8:	sub    al,0xbe
  403aea:	arpl   di,ax
  403aec:	xor    edx,DWORD PTR [ecx+0x4ffa85f5]
  403af2:	push   es
  403af3:	(bad)  
  403af4:	loope  0x403af8
  403af6:	pop    eax
  403af7:	mov    al,0x8
  403af9:	ret    0x9328
  403afc:	cmovge edi,DWORD PTR [ebx+esi*8]
  403b00:	xchg   esi,eax
  403b01:	test   BYTE PTR [ebx+0x0],cl
  403b04:	mov    cs,edi
  403b06:	sbb    ah,BYTE PTR ds:0x1dea0665
  403b0c:	jl     0x403b57
  403b0e:	jg     0x403b6f
  403b10:	mov    bl,0x88
  403b12:	nop
  403b13:	inc    esp
  403b14:	stos   BYTE PTR es:[edi],al
  403b15:	add    bl,cl
  403b17:	cmp    DWORD PTR [eax+eax*8-0x2658bcf6],edi
  403b1e:	xor    BYTE PTR fs:[ebp+0x14],bh
  403b22:	sbb    eax,0xd60d65e7
  403b27:	push   ss
  403b28:	mov    esp,DWORD PTR [esi]
  403b2a:	(bad)  
  403b2b:	gs (bad) 
  403b2d:	aas    
  403b2e:	inc    eax
  403b2f:	repz int 0x70
  403b32:	add    DWORD PTR [ecx+ecx*8+0x69],edi
  403b36:	mov    dl,0x51
  403b38:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403b39:	inc    edx
  403b3a:	jae    0x403ac6
  403b3c:	mov    ebx,0x7d009c5b
  403b41:	and    ebx,esp
  403b43:	aad    0x5e
  403b45:	lds    ebx,FWORD PTR ds:[esi]
  403b48:	(bad)  
  403b49:	push   ecx
  403b4a:	out    dx,al
  403b4b:	push   edi
  403b4c:	mov    al,0x45
  403b4e:	idiv   DWORD PTR [eax+0x3a]
  403b51:	pop    es
  403b52:	mov    eax,0xa11301b9
  403b57:	cli    
  403b58:	retf   
  403b59:	std    
  403b5a:	mov    DWORD PTR [ebx],edi
  403b5c:	push   ebx
  403b5d:	in     al,0x92
  403b5f:	jmp    0xd6403bfb
  403b64:	lods   eax,DWORD PTR ds:[esi]
  403b65:	ret    0x701
  403b68:	pop    esp
  403b69:	test   BYTE PTR [ebx],al
  403b6b:	xor    dl,dh
  403b6d:	inc    esi
  403b6e:	add    ah,BYTE PTR [ebp-0x6df8f808]
  403b74:	push   esi
  403b75:	leave  
  403b76:	push   es
  403b77:	cmp    edx,esp
  403b79:	mov    eax,DWORD PTR [esp+eiz*2]
  403b7c:	stos   BYTE PTR es:[edi],al
  403b7d:	dec    ebp
  403b7e:	add    eax,0xe11e7a1
  403b83:	outs   dx,BYTE PTR ds:[esi]
  403b84:	cmp    eax,0x133f0fd0
  403b89:	xchg   ebp,eax
  403b8a:	or     eax,0xc530148
  403b8f:	add    BYTE PTR [ecx+0x7a],bl
  403b92:	sbb    cl,BYTE PTR [ecx]
  403b94:	dec    BYTE PTR [edi-0x51c8f728]
  403b9a:	popf   
  403b9b:	or     al,BYTE PTR [eax]
  403b9d:	inc    esp
  403b9e:	pop    esp
  403b9f:	or     ebp,DWORD PTR ds:0x1c2620
  403ba5:	cmp    cl,dl
  403ba7:	in     al,0x1d
  403ba9:	add    esi,esp
  403bab:	mov    eax,ds:0x601dd41f
  403bb0:	push   ds
  403bb1:	inc    ecx
  403bb2:	pop    es
  403bb3:	das    
  403bb4:	sbb    esi,DWORD PTR [esi-0x1f]
  403bb7:	in     al,dx
  403bb8:	sbb    ch,BYTE PTR [edi-0x37e75425]
  403bbe:	xor    eax,0x6f051969
  403bc3:	xor    eax,0xf798e212
  403bc8:	adc    ecx,DWORD PTR [ebx]
  403bca:	mov    ds:0x4d2c11b0,eax
  403bcf:	jae    0x403be1
  403bd1:	leave  
  403bd2:	push   esi
  403bd3:	cmp    al,0x15
  403bd5:	mov    ?,WORD PTR [ebp+edi*8-0x477198ec]
  403bdc:	push   ss
  403bdd:	mov    al,0x68
  403bdf:	jp     0x403bf8
  403be1:	sbb    eax,0x4a384d46
  403be6:	lods   al,BYTE PTR ds:[esi]
  403be7:	mov    ?,WORD PTR [ecx]
  403be9:	repz xchg ecx,eax
  403beb:	leave  
  403bec:	cmp    eax,esp
  403bee:	ja     0x403bfb
  403bf0:	cmp    dl,BYTE PTR [ecx+0x6e]
  403bf3:	inc    esp
  403bf4:	aas    
  403bf5:	data16 test BYTE PTR [esi-0x404980c2],al
  403bfc:	cmp    al,0x98
  403bfe:	push   esp
  403bff:	add    bh,BYTE PTR ds:0x365e1555
  403c05:	push   edx
  403c06:	sti    
  403c07:	fwait
  403c08:	aaa    
  403c09:	add    BYTE PTR [ebx+ebx*1-0x5796253f],dl
  403c10:	push   0x18
  403c12:	pusha  
  403c13:	sub    eax,0x3665577c
  403c18:	(bad)  
  403c19:	xchg   ebp,eax
  403c1a:	fs aas 
  403c1c:	sub    bl,dl
  403c1e:	(bad)  
  403c1f:	or     al,0x2
  403c21:	adc    edi,eax
  403c23:	cmp    DWORD PTR [esi-0x73bd4795],esp
  403c29:	test   eax,0xeef213b1
  403c2e:	mov    ebx,0xb22d57e0
  403c33:	jne    0x403c83
  403c35:	bound  esi,QWORD PTR [edi-0x49601b82]
  403c3b:	(bad)  
  403c3c:	call   0x7524:0xb0d474e6
  403c43:	adc    DWORD PTR [eax+0x78],esi
  403c46:	outs   dx,BYTE PTR ds:[esi]
  403c47:	mov    edx,0xeb6fbad9
  403c4c:	and    edi,esp
  403c4e:	jge    0x403ca8
  403c50:	push   cs
  403c51:	ds jl  0x403cd1
  403c54:	sbb    BYTE PTR [ecx+0x71],dh
  403c57:	data16 xor dh,BYTE PTR [ebx-0xa33b098]
  403c5e:	ret    0x663c
  403c61:	aaa    
  403c62:	mov    ebx,0x49a8969
  403c67:	xchg   ebx,eax
  403c68:	mov    ds:0x5d440558,eax
  403c6d:	push   ds
  403c6e:	add    bh,ah
  403c70:	xor    bh,dh
  403c72:	(bad)  
  403c74:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403c75:	loopne 0x403c09
  403c77:	jmp    0x403c47
  403c79:	dec    edx
  403c7a:	push   ecx
  403c7b:	loop   0x403c34
  403c7d:	mov    ah,0x17
  403c7f:	enter  0x9ee4,0xd5
  403c83:	rol    DWORD PTR [eax],0xe1
  403c86:	xlat   BYTE PTR ds:[ebx]
  403c87:	or     eax,0xcf71ae3a
  403c8c:	cmp    edi,edi
  403c8e:	or     esp,DWORD PTR [ecx+0x5b26083d]
  403c94:	cmp    al,0x8d
  403c96:	xor    BYTE PTR [ecx+edi*1],dl
  403c99:	pop    edx
  403c9a:	sbb    dl,dh
  403c9c:	cmp    BYTE PTR [ebx],ah
  403c9e:	fs cwde 
  403ca0:	ss sub al,0xce
  403ca3:	shl    BYTE PTR [esi],cl
  403ca5:	pop    ecx
  403ca6:	jmp    0x2d7a:0x40662c3f
  403cad:	aaa    
  403cae:	mov    esi,0x94002bac
  403cb3:	out    dx,al
  403cb4:	sub    DWORD PTR [ebp-0x5dd8d67f],edx
  403cba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403cbb:	arpl   WORD PTR [esi],sp
  403cbd:	jmp    0x403d14
  403cbf:	test   DWORD PTR [eax],ebp
  403cc1:	mov    ah,0xfb
  403cc3:	(bad)  
  403cc4:	sub    cl,dh
  403cc6:	cmp    dh,bl
  403cc8:	sbb    eax,0x1f29111e
  403ccd:	dec    edi
  403cce:	outs   dx,DWORD PTR ds:[esi]
  403ccf:	jg     0x403cf2
  403cd1:	cmp    ch,al
  403cd3:	add    BYTE PTR [ebp-0x52d62e1],bh
  403cd9:	and    al,0xca
  403cdb:	js     0x403d0d
  403cdd:	and    al,0x73
  403cdf:	push   es
  403ce0:	mov    dh,0x22
  403ce2:	pop    esp
  403ce3:	sub    al,0x74
  403ce5:	and    cl,cl
  403ce7:	into   
  403ce8:	imul   ecx,DWORD PTR [ecx-0xa],0x64
  403cec:	mov    eax,ds:0xc71b2747
  403cf1:	inc    ebp
  403cf2:	adc    BYTE PTR [ecx],dh
  403cf4:	add    eax,0x42268547
  403cf9:	dec    edx
  403cfa:	mov    dl,0xc
  403cfc:	js     0x403d48
  403cfe:	add    BYTE PTR [ebx-0x3a],bl
  403d01:	push   esi
  403d02:	dec    esp
  403d03:	inc    esp
  403d04:	ins    BYTE PTR es:[edi],dx
  403d05:	cdq    
  403d06:	dec    ebp
  403d07:	and    DWORD PTR [ecx],0x78e46c5
  403d0d:	add    eax,DWORD PTR [edi+0x5f]
  403d10:	fld    QWORD PTR [eax+0x45]
  403d13:	sub    BYTE PTR [ebx-0x80],cl
  403d16:	inc    esp
  403d17:	lods   eax,DWORD PTR ds:[esi]
  403d18:	sub    ebp,ecx
  403d1a:	inc    ecx
  403d1b:	mov    edx,0x34009bf
  403d20:	ss dec eax
  403d22:	inc    edx
  403d23:	int3   
  403d24:	adc    eax,DWORD PTR [esi-0x505046bd]
  403d2a:	push   esp
  403d2b:	xchg   BYTE PTR [ecx+0x6bd754ed],dl
  403d31:	xor    edx,DWORD PTR [edi-0x20]
  403d34:	lds    esi,FWORD PTR [ecx+0x56]
  403d37:	jne    0x403d39
  403d39:	xlat   BYTE PTR ds:[ebx]
  403d3a:	mov    eax,0xf6694253
  403d3f:	push   ecx
  403d40:	or     esp,DWORD PTR [ebx-0x72ebafc4]
  403d46:	jp     0x403d99
  403d48:	sar    DWORD PTR [edi+0x61be5a9f],1
  403d4e:	loopne 0x403daa
  403d50:	outs   dx,DWORD PTR ds:[esi]
  403d51:	sti    
  403d52:	and    bl,BYTE PTR [ecx-0x68]
  403d55:	adc    eax,0x6fd5865
  403d5a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403d5b:	pop    ebp
  403d5c:	jmp    0x29d3:0x135be7d8
  403d63:	pop    esi
  403d64:	cmp    al,0x7d
  403d66:	ins    BYTE PTR es:[edi],dx
  403d67:	pop    edi
  403d68:	imul   esp,DWORD PTR [ecx-0x38a91f0d],0x5d87e0b1
  403d72:	outs   dx,DWORD PTR ds:[esi]
  403d73:	loop   0x403d25
  403d75:	retf   
  403d76:	sub    eax,0x33b900e3
  403d7b:	cmp    al,0xe6
  403d7d:	xchg   ch,dl
  403d7f:	(bad)  
  403d80:	out    0xf,eax
  403d82:	loopne 0x403d3b
  403d84:	in     eax,0x30
  403d86:	add    bh,BYTE PTR [edx-0x1c]
  403d89:	jne    0x403dd5
  403d8b:	es out dx,eax
  403d8d:	sub    bl,BYTE PTR [ebp-0x690c111d]
  403d93:	mov    ds:0x60695cec,al
  403d98:	in     eax,dx
  403d99:	shl    DWORD PTR [edx+0x2f],1
  403d9c:	call   0xedccbba1
  403da1:	jmp    0xebeaec1d
  403da6:	js     0x403e00
  403da8:	imul   ebp,edx,0xfd133c9d
  403dae:	mov    dl,0xd2
  403db0:	sar    esp,1
  403db2:	imul   ebp,eax,0xffffff96
  403db5:	(bad)  
  403db6:	push   esp
  403db7:	(bad)  
  403db8:	push   esp
  403db9:	dec    ecx
  403dbb:	or     al,0x1a
  403dbd:	cli    
  403dbe:	idiv   dl
  403dc0:	xlat   BYTE PTR ds:[ebx]
  403dc1:	sti    
  403dc2:	(bad)  
  403dc3:	js     0x403d63
  403dc5:	stc    
  403dc6:	inc    eax
  403dc7:	daa    
  403dc8:	pop    esp
  403dc9:	clc    
  403dca:	test   DWORD PTR [ebp+0x0],esp
  403dcd:	repz pop edx
  403dcf:	add    edx,0xfffffff2
  403dd2:	mov    ds:0xacf083b1,eax
  403dd7:	dec    edi
  403dd8:	inc    esi
  403dd9:	icebp  
  403dda:	inc    ecx
  403ddb:	ds or  esp,esi
  403dde:	push   cs
  403ddf:	lods   al,BYTE PTR ds:[esi]
  403de0:	retf   0x47f5
  403de3:	xchg   DWORD PTR [ebp+0x4f7928f7],ecx
  403de9:	test   BYTE PTR [ebp-0x3d2687b1],0xb1
  403df0:	mov    ecx,0x8a9f94d8
  403df5:	cld    
  403df6:	dec    esi
  403df7:	shl    DWORD PTR [esi+edi*1+0x71ae3e3f],1
  403dfe:	cmp    dh,BYTE PTR [ebx]
  403e00:	cwde   
  403e01:	mov    bl,0x0
  403e03:	jae    0x403da1
  403e05:	loop   0x403dfb
  403e07:	imul   edi,DWORD PTR [ebp+0x4c],0x7426037
  403e0e:	imul   esp,DWORD PTR [ebx+0x47],0x21
  403e12:	test   eax,0xefdb984a
  403e17:	inc    eax
  403e18:	sub    DWORD PTR [ebp+0x2d],esi
  403e1b:	dec    ecx
  403e1c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403e1d:	pop    edi
  403e1e:	bound  eax,QWORD PTR [ebx+edi*4-0x37]
  403e22:	mov    al,ds:0xe633c3e5
  403e27:	out    0x84,eax
  403e29:	sbb    eax,0xb9b9e624
  403e2e:	pop    esi
  403e2f:	sar    DWORD PTR [esi-0x70276371],1
  403e35:	in     eax,dx
  403e36:	(bad)  
  403e38:	pusha  
  403e39:	inc    ebx
  403e3a:	sbb    bl,bl
  403e3c:	in     eax,dx
  403e3d:	push   eax
  403e3e:	push   edi
  403e3f:	(bad)  
  403e40:	add    dh,bh
  403e42:	xchg   esp,eax
  403e43:	xlat   BYTE PTR ds:[ebx]
  403e44:	dec    ebx
  403e45:	test   ebx,edx
  403e47:	aad    0x4c
  403e49:	stos   DWORD PTR es:[edi],eax
  403e4a:	adc    esp,edx
  403e4c:	xchg   ecx,eax
  403e4d:	addr16 dec ebp
  403e4f:	iret   
  403e50:	ror    DWORD PTR ss:[edi-0x36c49822],0xdc
  403e58:	fcom   DWORD PTR ds:0xfef5cd0b
  403e5e:	inc    ebx
  403e5f:	enter  0x28ea,0x86
  403e63:	popa   
  403e64:	rcl    edx,cl
  403e66:	rol    BYTE PTR [eax],0x5b
  403e69:	mov    ah,0x7c
  403e6b:	add    dl,BYTE PTR [edx+0x0]
  403e6e:	sub    DWORD PTR [esi-0x47e96ed5],ecx
  403e74:	add    DWORD PTR [ecx-0x6d40be39],edx
  403e7a:	lock jmp 0x403ee9
  403e7d:	xchg   ebx,eax
  403e7e:	div    BYTE PTR gs:[ecx]
  403e81:	mov    ss,WORD PTR [edx+0x50]
  403e84:	mov    eax,0x76aa7b8f
  403e89:	lea    esp,[esp+eax*4-0x409e73cc]
  403e90:	clc    
  403e91:	xchg   esi,eax
  403e92:	imul   esi,DWORD PTR cs:[edx+0x6c137f96],0x1e3d8894
  403e9d:	xchg   ebp,eax
  403e9e:	or     eax,0xda97e127
  403ea3:	add    BYTE PTR [ebx-0x3a855c67],cl
  403ea9:	fwait
  403eaa:	lods   al,BYTE PTR ds:[esi]
  403eab:	aam    0x7
  403ead:	call   0x56e6:0x850cf0d9
  403eb4:	pop    edi
  403eb5:	test   BYTE PTR [edi-0x7f79665c],dh
  403ebb:	mov    dl,bl
  403ebd:	xchg   BYTE PTR ds:0x228a1499,dl
  403ec3:	scas   eax,DWORD PTR es:[edi]
  403ec4:	push   esi
  403ec5:	mov    ebp,DWORD PTR [ebx+0x4d]
  403ec8:	nop
  403ec9:	mov    DWORD PTR [ebx+eiz*8],esi
  403ecc:	add    cl,bl
  403ece:	xchg   DWORD PTR [ecx+0x1f],esi
  403ed1:	push   ds
  403ed2:	sbb    DWORD PTR [esi-0x307db3fb],0x73
  403ed9:	mov    al,BYTE PTR [eax-0x7f3f2648]
  403edf:	sbb    eax,0x4a7c07c8
  403ee4:	pop    esi
  403ee5:	in     eax,0x7b
  403ee7:	add    bl,dh
  403ee9:	scas   eax,DWORD PTR es:[edi]
  403eea:	or     eax,0xcbc5dc87
  403eef:	xchg   BYTE PTR [ecx+0x67],cl
  403ef2:	mov    ds:0xe0ed76a9,eax
  403ef7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403ef8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403ef9:	imul   ebx,DWORD PTR [edx+ebp*4],0xffffff90
  403efd:	mov    ecx,0x9805ab5c
  403f02:	test   eax,0xe7a632ae
  403f07:	scas   al,BYTE PTR es:[edi]
  403f08:	(bad)  [ebx+0x1c4ad25]
  403f0e:	lods   al,BYTE PTR fs:[esi]
  403f10:	add    DWORD PTR [ecx],edx
  403f12:	mov    al,0xa7
  403f14:	push   cs
  403f15:	push   ecx
  403f17:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403f18:	ffreep st(4)
  403f1a:	sub    esp,DWORD PTR [eax+ebp*4+0x2da56f2a]
  403f21:	sub    BYTE PTR [esi-0x5a9c560],ch
  403f27:	mov    al,ds:0xa3354c83
  403f2c:	dec    esp
  403f2d:	adc    dh,BYTE PTR [edi-0x5e]
  403f30:	cmp    DWORD PTR [eax],eax
  403f32:	(bad)  
  403f33:	mov    esp,0xfe9006b5
  403f38:	mov    bl,0x57
  403f3a:	dec    edx
  403f3b:	inc    eax
  403f3c:	mov    dh,0x60
  403f3e:	int3   
  403f3f:	xor    BYTE PTR [edi-0x4d3c410b],0xc2
  403f46:	dec    eax
  403f47:	add    eax,0x47928bb3
  403f4c:	mov    cl,0x94
  403f4e:	je     0x403ed9
  403f50:	mov    al,0x51
  403f52:	mov    dh,0xce
  403f54:	mov    ebx,0xba0b603e
  403f59:	out    dx,eax
  403f5a:	stc    
  403f5b:	push   ecx
  403f5c:	mov    eax,0xb98ffc18
  403f61:	add    BYTE PTR [ecx],bl
  403f63:	mov    bl,dh
  403f65:	mov    esp,0xbd1c5cfe
  403f6a:	daa    
  403f6b:	dec    esi
  403f6c:	pop    edx
  403f6d:	mov    edi,0xbe97b040
  403f72:	ins    DWORD PTR es:[edi],dx
  403f73:	add    DWORD PTR [eax],eax
  403f75:	add    BYTE PTR [eax-0x94743ed],bl
  403f7b:	les    ecx,FWORD PTR [ecx]
  403f7d:	stos   BYTE PTR es:[edi],al
  403f7e:	jecxz  0x403f9b
  403f80:	mov    ch,0x12
  403f82:	jp     0x403f07
  403f84:	bound  ecx,QWORD PTR [edi+0x37de710f]
  403f8a:	and    DWORD PTR [ebx+0x6b],ecx
  403f8d:	and    eax,0x9dd6b484
  403f92:	loop   0x403f38
  403f94:	mov    bl,0xc5
  403f96:	add    BYTE PTR [edi+0x597d083b],ah
  403f9c:	popa   
  403f9d:	mov    ebp,0x1342c6f
  403fa2:	xlat   BYTE PTR ds:[ebx]
  403fa3:	adc    eax,0xb04ad62b
  403fa8:	aam    0x6a
  403faa:	repnz push cs
  403fac:	in     al,0xde
  403fae:	loopne 0x403fdb
  403fb0:	adc    DWORD PTR [ebx+0x58],esp
  403fb3:	adc    al,BYTE PTR [ebx+0x19]
  403fb6:	push   eax
  403fb7:	mov    bh,0xac
  403fb9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403fba:	call   0xfa50cba8
  403fbf:	cld    
  403fc0:	js     0x403f6e
  403fc2:	inc    edx
  403fc3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403fc4:	mov    esp,0x5360df7b
  403fc9:	(bad)  
  403fca:	dec    BYTE PTR [bx+si]
  403fcd:	jb     0x404044
  403fcf:	fcmovnu st,st(3)
  403fd1:	int    0xcd
  403fd3:	pop    ebp
  403fd4:	jmp    0x403f82
  403fd6:	xchg   ebp,eax
  403fd7:	test   al,0x18
  403fd9:	adc    DWORD PTR ds:0xa46cd294,ebp
  403fdf:	arpl   WORD PTR ds:0x61318d3,sp
  403fe5:	lods   al,BYTE PTR ds:[esi]
  403fe6:	iret   
  403fe7:	scas   al,BYTE PTR es:[edi]
  403fe8:	out    0x84,eax
  403fea:	jae    0x404022
  403fec:	jle    0x403fd1
  403fee:	lds    eax,FWORD PTR [ecx+eiz*2+0x3c]
  403ff2:	jp     0x403f80
  403ff4:	fwait
  403ff5:	xor    dh,BYTE PTR fs:[edi+edi*1]
  403ff9:	int3   
  403ffa:	mov    es,WORD PTR [eax]
  403ffc:	mov    WORD PTR [esp+ebx*1+0x3b],ss
  404000:	mov    ?,WORD PTR [ecx+0x3]
  404003:	xchg   DWORD PTR [esi],esp
  404005:	adc    esp,edi
  404007:	dec    edi
  404008:	and    DWORD PTR [ebp-0x77dc13ac],0xffffffb3
  40400f:	pop    ecx
  404010:	sbb    DWORD PTR [ebx],ebx
  404012:	mov    ebp,fs
  404014:	jns    0x40400e
  404016:	jnp    0x403f9e
  404018:	mov    ecx,0x493aa38d
  40401d:	jo     0x404063
  40401f:	(bad)  
  404020:	push   ebx
  404021:	add    ebp,esp
  404023:	xor    ah,BYTE PTR [ebx-0x11becdd]
  404029:	inc    esi
  40402a:	sub    al,0x58
  40402c:	pushfw 
  40402e:	fucomi st,st(5)
  404030:	push   esp
  404031:	shl    DWORD PTR [ecx+edx*2-0x4],0x48
  404036:	mov    ebx,0x93dde42b
  40403b:	xchg   edi,eax
  40403c:	pop    esp
  40403d:	mov    edi,0x923e21f3
  404042:	dec    esp
  404043:	sahf   
  404044:	div    BYTE PTR [ebx+0x56534923]
  40404a:	or     esi,ebp
  40404c:	shr    DWORD PTR [esp+ebx*2],cl
  40404f:	inc    eax
  404050:	jmp    0x2a3d0426
  404055:	add    BYTE PTR [edi],dh
  404057:	aam    0x13
  404059:	out    dx,al
  40405a:	adc    DWORD PTR [ebx+0x77],edi
  40405d:	test   DWORD PTR [esp+ecx*1-0x766bf600],ebp
  404064:	xor    ebp,DWORD PTR [esi-0x25]
  404067:	fisttp WORD PTR [edx-0x6f]
  40406a:	jbe    0x4040a9
  40406c:	in     al,0xd4
  40406e:	(bad)  
  40406f:	pop    edx
  404070:	or     DWORD PTR [eax-0x336349f0],0x68
  404077:	in     al,0x4b
  404079:	mov    BYTE PTR [edi-0x20cc0cbf],dl
  40407f:	pop    esi
  404080:	xchg   esp,eax
  404081:	xor    ecx,0x8935bbb9
  404087:	adc    eax,ebx
  404089:	retf   0xee0c
  40408c:	pop    ebx
  40408d:	pop    esi
  40408e:	mov    BYTE PTR fs:[ebx],cl
  404091:	ret    
  404092:	jb     0x4040f9
  404094:	and    al,0x57
  404096:	cli    
  404097:	cmp    dh,BYTE PTR [esp+esi*8]
  40409a:	push   ecx
  40409b:	xchg   esi,eax
  40409c:	sbb    ecx,DWORD PTR [eax-0x12944f66]
  4040a2:	stos   DWORD PTR es:[edi],eax
  4040a3:	or     eax,0x6c4481d3
  4040a8:	stos   DWORD PTR es:[edi],eax
  4040a9:	(bad)  
  4040aa:	ror    BYTE PTR [ecx-0x7c],1
  4040ad:	mov    ch,BYTE PTR [ecx]
  4040af:	out    0xe2,eax
  4040b1:	into   
  4040b2:	ss ret 0x833b
  4040b6:	mov    edi,0xc7a1034b
  4040bb:	es sbb al,0x25
  4040be:	das    
  4040bf:	ror    dl,0x98
  4040c2:	and    DWORD PTR [ebp-0x26e3ff9d],ebx
  4040c8:	cld    
  4040c9:	mov    eax,DWORD PTR [ebx+0x3c]
  4040cc:	pop    ecx
  4040cd:	mov    bl,0xe7
  4040cf:	mov    bl,0x0
  4040d1:	ja     0x40413a
  4040d3:	sbb    ch,dh
  4040d5:	sar    BYTE PTR [esi-0x40cba928],cl
  4040db:	ja     0x4040eb
  4040dd:	adc    DWORD PTR [eax-0x3],edx
  4040e0:	mov    ch,0xaf
  4040e2:	imul   BYTE PTR [edi-0x5c]
  4040e5:	mov    bl,BYTE PTR [edi]
  4040e7:	add    al,0x1c
  4040e9:	jecxz  0x4040f2
  4040eb:	(bad)  
  4040ec:	cmp    DWORD PTR [esi],0x58391a6f
  4040f2:	scas   eax,DWORD PTR es:[edi]
  4040f3:	into   
  4040f4:	sub    esi,DWORD PTR [ebp-0x156cdd5a]
  4040fa:	fstp   TBYTE PTR cs:[edx]
  4040fd:	pop    es
  4040fe:	add    BYTE PTR [edi-0x1c999e7d],dl
  404104:	nop
  404105:	jl     0x4040d6
  404107:	lea    ebp,[ecx]
  404109:	sbb    eax,0xb8b43c78
  40410e:	sahf   
  40410f:	mov    eax,0x43df960c
  404114:	push   ds
  404115:	xor    edx,DWORD PTR [esi-0x50]
  404118:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404119:	push   ebp
  40411a:	inc    esi
  40411b:	(bad)  
  40411c:	(bad)  
  40411d:	jo     0x4040de
  40411f:	loop   0x404166
  404121:	into   
  404122:	jle    0x4040b9
  404124:	push   esp
  404125:	jmp    0x40418e
  404127:	fldpi  
  404129:	add    BYTE PTR [eax],0xcf
  40412c:	mov    al,0x71
  40412e:	pop    ds
  40412f:	test   BYTE PTR [ebp-0x37],0xf9
  404133:	pop    ss
  404134:	mov    eax,0x3c2e94db
  404139:	arpl   WORD PTR [ebp+0x206af177],ax
  40413f:	fidivr WORD PTR [ebp-0x2d]
  404142:	(bad)  
  404143:	jg     0x40412f
  404145:	rcr    BYTE PTR [ebx+0x798696],0x86
  40414c:	mov    dh,0x5c
  40414e:	in     al,0x5b
  404150:	dec    ebp
  404151:	loope  0x4041af
  404153:	in     eax,dx
  404154:	outs   dx,BYTE PTR ds:[esi]
  404155:	push   esp
  404156:	dec    esi
  404157:	rol    BYTE PTR [ebp+0x344ef6e8],1
  40415d:	mov    ebp,DWORD PTR [esi+0x163760a3]
  404163:	lds    edi,FWORD PTR [edx+eax*4]
  404166:	add    al,0x28
  404168:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404169:	cmp    eax,0xe90fa1bc
  40416e:	and    DWORD PTR [esp+eiz*8-0x28e566ac],edi
  404175:	loopne 0x404102
  404177:	aaa    
  404178:	sub    al,0x5c
  40417a:	xor    esi,DWORD PTR [esi+0x37]
  40417d:	pop    ecx
  40417e:	in     eax,dx
  40417f:	stos   DWORD PTR es:[edi],eax
  404180:	int    0xe5
  404182:	push   ebp
  404183:	mov    ebp,0x20474fee
  404188:	add    eax,0x9da9ffec
  40418d:	cmp    ah,BYTE PTR [edx+0x0]
  404190:	inc    esp
  404191:	inc    edi
  404192:	xchg   edx,ebx
  404194:	adc    dl,BYTE PTR [ebp+0x7eafc832]
  40419a:	mov    ?,WORD PTR [eax+0x71]
  40419d:	mov    gs,ebp
  40419f:	sub    BYTE PTR [eiz*2+0x56ea9051],cl
  4041a6:	in     al,0x82
  4041a8:	xchg   DWORD PTR [ebp-0x4a81c5a9],ebp
  4041ae:	mov    fs,WORD PTR [edi+0x1f32de53]
  4041b4:	cmc    
  4041b5:	mov    ebp,0x27380d86
  4041ba:	cmp    dh,BYTE PTR [ebp-0x42bfa29f]
  4041c0:	mov    esp,0x9405fc86
  4041c5:	mov    edx,0x5d8348da
  4041ca:	inc    ecx
  4041cb:	cmc    
  4041cc:	add    esi,DWORD PTR [esi+0x49862239]
  4041d2:	adc    ebx,DWORD PTR [esi+0x2b712f0e]
  4041d8:	sbb    al,0xc4
  4041da:	retf   0x7497
  4041dd:	out    dx,al
  4041de:	mov    edx,0x62012cf4
  4041e3:	dec    eax
  4041e4:	aam    0x66
  4041e6:	add    bh,ch
  4041e8:	(bad)  
  4041e9:	jnp    0x404214
  4041eb:	inc    ecx
  4041ec:	(bad)  
  4041ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4041ee:	push   ecx
  4041ef:	xchg   esi,eax
  4041f0:	add    DWORD PTR [ecx-0x15],0x29
  4041f4:	add    bl,dl
  4041f6:	dec    esi
  4041f7:	cdq    
  4041f8:	lahf   
  4041f9:	fldcw  WORD PTR [ebx-0x4e]
  4041fc:	and    edi,DWORD PTR [ecx-0x63]
  4041ff:	or     ch,BYTE PTR [ebx-0x27]
  404202:	stc    
  404203:	xor    edi,edx
  404205:	imul   ebp,DWORD PTR [eax],0x837362d2
  40420b:	jns    0x4041eb
  40420d:	repz or eax,DWORD PTR [edx-0x6588a9f7]
  404214:	mov    ch,0xbe
  404216:	nop
  404217:	dec    ecx
  404218:	add    BYTE PTR [ebp+ebx*8+0x5444bbe1],ch
  40421f:	repnz ficomp WORD PTR [edi+ebx*1]
  404223:	pop    ecx
  404224:	arpl   WORD PTR [eax+edi*4-0x56],sp
  404228:	(bad)  
  404229:	jbe    0x4041d0
  40422b:	xchg   ecx,eax
  40422c:	push   0x2e
  40422e:	test   DWORD PTR [ecx-0x43],ebp
  404231:	xchg   ebx,eax
  404232:	loope  0x4041f5
  404234:	add    DWORD PTR [ebx-0x50],eax
  404237:	and    DWORD PTR [ecx+ebp*1-0x76f80575],esi
  40423e:	add    BYTE PTR [ebx+0x1e0d6641],al
  404244:	fcmovbe st,st(1)
  404246:	gs clc 
  404248:	mov    DWORD PTR [edi+0x77],ebx
  40424b:	xchg   ebp,eax
  40424c:	mov    ds:0xca33ffdb,al
  404251:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404252:	xchg   edx,eax
  404253:	push   ecx
  404254:	jno    0x404246
  404256:	fisubr DWORD PTR [esi-0x1762ffee]
  40425c:	leave  
  40425d:	cmp    ecx,edi
  40425f:	sbb    BYTE PTR [esi+eiz*1-0x2e],0xc8
  404264:	stc    
  404265:	add    al,0x1e
  404267:	and    bh,dl
  404269:	pop    esi
  40426a:	retf   
  40426b:	xor    dh,BYTE PTR [edx-0x43]
  40426e:	pop    es
  40426f:	mov    ebx,0x5730b50b
  404274:	es xchg esi,eax
  404276:	pushf  
  404277:	lahf   
  404278:	sub    ch,0x28
  40427b:	lods   eax,DWORD PTR ds:[esi]
  40427c:	popf   
  40427d:	dec    esi
  40427e:	test   DWORD PTR [ebp-0x11],eax
  404281:	popf   
  404282:	fnstenv [esi]
  404284:	or     bh,BYTE PTR [ebp+0x65]
  404287:	mov    esi,0xccd7e664
  40428c:	add    DWORD PTR [ebp+0x4c],0x7b2d1824
  404293:	test   eax,0x41270db5
  404298:	xchg   ebx,eax
  404299:	jne    0x40430d
  40429b:	push   ebx
  40429c:	cs (bad) 
  40429e:	push   cs
  40429f:	fwait
  4042a0:	push   eax
  4042a1:	(bad)  
  4042a2:	sub    eax,0xd9656d73
  4042a7:	sti    
  4042a8:	retf   0x2bfd
  4042ab:	or     esi,esp
  4042ad:	sbb    al,0x60
  4042af:	popa   
  4042b0:	xchg   DWORD PTR [ebp+0x2f],edx
  4042b3:	in     al,dx
  4042b4:	and    esi,esi
  4042b6:	mov    edx,0x8fc0084
  4042bb:	xchg   edx,eax
  4042bc:	xchg   esi,eax
  4042bd:	cdq    
  4042be:	add    BYTE PTR [ecx-0x22],al
  4042c1:	sub    eax,0x26547980
  4042c6:	sbb    eax,0xfb9e97d2
  4042cb:	mov    al,ds:0xa9968c4d
  4042d0:	mov    eax,ds:0xf4ea3734
  4042d5:	test   al,0x52
  4042d7:	cmp    DWORD PTR [edx+0x11],0x2eef1ac
  4042de:	leave  
  4042df:	sbb    BYTE PTR [ebx-0x5ffea045],al
  4042e5:	jecxz  0x4042e1
  4042e7:	jmp    0x49149e37
  4042ec:	cdq    
  4042ed:	dec    ecx
  4042ee:	jno    0x404271
  4042f0:	push   ebp
  4042f1:	icebp  
  4042f2:	or     BYTE PTR [edx-0x46da937e],dl
  4042f8:	out    dx,al
  4042f9:	rol    DWORD PTR [ebx-0x613985c7],cl
  4042ff:	shl    ch,1
  404301:	jge    0x4042e4
  404303:	shr    BYTE PTR ds:0xc37a3cd6,1
  404309:	outs   dx,BYTE PTR ds:[esi]
  40430a:	pop    edx
  40430b:	fdiv   DWORD PTR [esi]
  40430d:	jl     0x4042c6
  40430f:	xor    DWORD PTR [ebx+0xc6216c4],edi
  404315:	pop    ecx
  404316:	repz enter 0xe15f,0x8d
  40431b:	mov    DWORD PTR [ebx+esi*8],edx
  40431e:	push   0x3e4b5880
  404323:	add    BYTE PTR [eax+0x219b13b9],cl
  404329:	aaa    
  40432a:	stos   DWORD PTR es:[edi],eax
  40432b:	mov    ch,0xb0
  40432d:	ret    0x10b9
  404330:	fisubr DWORD PTR [esi]
  404332:	add    DWORD PTR [eax],eax
  404334:	jge    0x404391
  404336:	test   eax,0x157c589c
  40433b:	and    al,0xf6
  40433d:	mov    bl,0x9f
  40433f:	xor    edx,DWORD PTR ss:[ebp+0x1c]
  404343:	mov    ds,WORD PTR [edx+0x13]
  404346:	data16 xchg BYTE PTR [edi-0x2ec1260c],ch
  40434d:	mov    ebx,0x1cf42c6f
  404352:	rcl    DWORD PTR [ebp+ecx*8+0x68090481],cl
  404359:	arpl   WORD PTR [eax+0xcec46b1],di
  40435f:	mov    ds:0x1bb0cbe3,eax
  404364:	gs sahf 
  404366:	rol    DWORD PTR [ebx-0x70],1
  404369:	cmp    DWORD PTR [esi-0x5],ebp
  40436c:	out    dx,al
  40436d:	jbe    0x40434a
  40436f:	jmp    0x51a7d48f
  404374:	jb     0x4043c0
  404376:	mov    al,0xcc
  404378:	xlat   BYTE PTR ds:[ebx]
  404379:	outs   dx,BYTE PTR ds:[esi]
  40437a:	or     al,0x74
  40437c:	fabs   
  40437e:	mov    eax,0x5062c66
  404383:	fidivr WORD PTR [ebp+0x1]
  404386:	add    BYTE PTR [eax],al
  404388:	add    BYTE PTR [edx+0x13963003],cl
  40438e:	scas   al,BYTE PTR es:[edi]
  40438f:	pusha  
  404390:	sub    al,0xc4
  404392:	test   eax,0xe3aba50
  404397:	les    ebx,FWORD PTR [ecx]
  404399:	cmp    eax,0x148ff407
  40439e:	fbld   TBYTE PTR [ebp+esi*1-0x5c6b271d]
  4043a5:	and    edi,DWORD PTR [eax-0x42cbcd78]
  4043ab:	mov    eax,0xd73794a4
  4043b0:	jmp    0xda127a67
  4043b5:	sbb    al,0xb0
  4043b7:	jne    0x404405
  4043b9:	scas   eax,DWORD PTR es:[edi]
  4043ba:	ins    DWORD PTR es:[edi],dx
  4043bb:	jb     0x404439
  4043bd:	cmp    DWORD PTR [esi],edi
  4043bf:	ins    BYTE PTR es:[edi],dx
  4043c0:	sub    eax,0x1d6d479b
  4043c5:	add    eax,0x78107504
  4043ca:	xchg   ecx,eax
  4043cb:	jae    0x4043ed
  4043cd:	out    0x9,al
  4043cf:	imul   esi,DWORD PTR [ecx+0x5c],0x23
  4043d3:	outs   dx,BYTE PTR ds:[esi]
  4043d4:	inc    ecx
  4043d5:	jmp    0xce7c:0x41d4c9a0
  4043dc:	in     al,0xaf
  4043de:	stos   BYTE PTR es:[edi],al
  4043df:	xlat   BYTE PTR ds:[ebx]
  4043e0:	mov    ch,0x45
  4043e2:	sbb    dl,cl
  4043e4:	test   ebx,edx
  4043e6:	test   eax,0x434a981f
  4043eb:	sbb    DWORD PTR [eax+0x21d3d400],ebp
  4043f1:	stc    
  4043f2:	push   cs
  4043f3:	and    BYTE PTR [esi],ah
  4043f5:	leave  
  4043f6:	js     0x4043c6
  4043f8:	add    bl,BYTE PTR [ebx+edx*8+0x36]
  4043fc:	push   es
  4043fd:	ins    BYTE PTR es:[edi],dx
  4043fe:	pop    ebp
  4043ff:	jo     0x4043fd
  404401:	cmp    al,0xf7
  404403:	dec    esp
  404404:	sti    
  404405:	or     al,0x61
  404407:	lahf   
  404408:	sbb    eax,0x1ade4c20
  40440d:	adc    BYTE PTR [edx+0x3841236c],bh
  404413:	cmp    BYTE PTR [ecx+esi*2],ah
  404416:	mov    ch,0x0
  404419:	in     al,0x65
  40441b:	out    dx,eax
  40441c:	pop    es
  40441d:	aam    0xd3
  40441f:	xchg   esi,edi
  404421:	test   BYTE PTR [ecx],dh
  404423:	inc    ebp
  404424:	stc    
  404425:	mov    ah,0xbf
  404427:	add    BYTE PTR [edi+esi*2],bl
  40442a:	in     al,dx
  40442b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40442c:	stos   DWORD PTR es:[edi],eax
  40442d:	jno    0x40442b
  40442f:	sbb    al,0x32
  404431:	push   0x6f7dd2dd
  404436:	or     eax,0x70cbfb41
  40443b:	lahf   
  40443c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40443d:	int3   
  40443e:	pop    eax
  40443f:	xor    eax,0xbba1d515
  404444:	adc    dl,0xa9
  404447:	dec    ecx
  404448:	iret   
  404449:	retf   0x5ca4
  40444c:	mov    eax,0x20e694cd
  404451:	aam    0x0
  404453:	or     BYTE PTR gs:[esi-0x2d],0x35
  404458:	adc    cl,al
  40445a:	ja     0x404424
  40445c:	jne    0x4043f5
  40445e:	jo     0x404430
  404460:	fbld   TBYTE PTR ds:0x318a0969
  404466:	outs   dx,BYTE PTR ds:[esi]
  404467:	icebp  
  404468:	sti    
  404469:	adc    BYTE PTR [esi],al
  40446b:	fmul   QWORD PTR [edx-0x6f3fec2]
  404471:	scas   al,BYTE PTR es:[edi]
  404472:	clc    
  404473:	ins    BYTE PTR es:[edi],dx
  404474:	outs   dx,BYTE PTR ds:[esi]
  404475:	cwde   
  404476:	(bad)  
  404477:	jl     0x40445d
  404479:	adc    eax,0x2184001b
  40447e:	sbb    al,0xc8
  404480:	adc    DWORD PTR [eax+0x77579125],ebp
  404486:	and    bh,BYTE PTR [ecx-0x2a37e113]
  40448c:	nop
  40448d:	call   0x71432a60
  404492:	(bad)  
  404493:	je     0x404501
  404495:	jle    0x404468
  404497:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404498:	(bad)  
  404499:	div    DWORD PTR [ecx+ebx*1+0x79]
  40449d:	out    0x71,eax
  40449f:	add    DWORD PTR [ebx],ecx
  4044a1:	add    BYTE PTR [esi-0x41],dl
  4044a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4044a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4044a6:	cmp    DWORD PTR [eax-0x691ecc2c],0x97eea2b9
  4044b0:	test   eax,0x63117f34
  4044b5:	mov    cs,WORD PTR [eax+0x0]
  4044b8:	push   cs
  4044b9:	xchg   ebx,eax
  4044ba:	sbb    dh,al
  4044bc:	mov    eax,ds:0x9cf1bafd
  4044c1:	in     eax,dx
  4044c2:	sub    al,0x58
  4044c4:	mov    ah,0x1c
  4044c6:	xchg   edi,eax
  4044c7:	inc    edi
  4044c8:	mov    bl,0x4c
  4044ca:	add    DWORD PTR [edx-0x20bae7e],edx
  4044d0:	and    DWORD PTR [ecx],0x62
  4044d3:	ins    BYTE PTR es:[edi],dx
  4044d4:	jne    0x4044c6
  4044d6:	xlat   BYTE PTR ds:[ebx]
  4044d7:	sbb    esi,DWORD PTR [edx+0x0]
  4044da:	dec    esi
  4044db:	xchg   ebp,eax
  4044dc:	xchg   ebp,eax
  4044dd:	xchg   ebp,eax
  4044de:	in     eax,dx
  4044df:	loop   0x404471
  4044e1:	gs jnp 0x40454f
  4044e4:	mov    al,0xae
  4044e6:	shl    esp,0xae
  4044e9:	mov    esi,0xc9284c57
  4044ee:	(bad)  
  4044ef:	sti    
  4044f0:	es cdq 
  4044f2:	push   eax
  4044f3:	(bad)  
  4044f4:	std    
  4044f5:	push   0x78f8cdea
  4044fa:	jl     0x404547
  4044fc:	dec    ebp
  4044fd:	or     al,0xdf
  4044ff:	aam    0x49
  404501:	fmul   QWORD PTR [eax+0x65]
  404504:	dec    edx
  404505:	sub    eax,0x3d5bb2f3
  40450a:	gs xor al,0xea
  40450d:	pop    ds
  40450e:	pop    eax
  40450f:	jecxz  0x4044f5
  404511:	dec    edi
  404512:	into   
  404513:	dec    edx
  404514:	mov    ebx,0xbab57400
  404519:	lock loope 0x40451c
  40451c:	add    BYTE PTR [edi-0x7be5a4b],al
  404522:	mov    ch,0x95
  404524:	xlat   BYTE PTR ds:[ebx]
  404525:	loope  0x4044fb
  404527:	les    ebp,FWORD PTR [ebp+0xe]
  40452a:	shl    ah,1
  40452c:	sti    
  40452d:	out    dx,al
  40452e:	or     al,0xe9
  404530:	push   0xffffff81
  404532:	push   es
  404533:	frndint 
  404535:	sbb    bh,bl
  404537:	xchg   DWORD PTR [esi-0x39],eax
  40453a:	fnsave [edi+0x2caa31d0]
  404540:	jae    0x404540
  404542:	add    bl,BYTE PTR ds:0x4bac17e5
  404548:	pop    edi
  404549:	cwde   
  40454a:	test   al,0x7b
  40454c:	leave  
  40454d:	sbb    eax,0xd23c7101
  404552:	add    eax,DWORD PTR [ecx-0x56]
  404555:	imul   ebp,DWORD PTR [edx-0x4e8beff1],0x1f
  40455c:	xchg   BYTE PTR [edx],ah
  40455e:	push   es
  40455f:	mov    ch,0x25
  404561:	int    0x6
  404563:	test   DWORD PTR [ebx+0x9d3df64],esi
  404569:	mov    esp,esp
  40456b:	jecxz  0x40450c
  40456d:	pop    ebx
  40456e:	mov    dh,0xf9
  404570:	push   cs
  404571:	test   BYTE PTR [ebp-0x2bd26737],dh
  404577:	cwde   
  404578:	and    dh,BYTE PTR [edx]
  40457a:	iret   
  40457b:	test   al,0xb4
  40457d:	mov    ah,0x33
  40457f:	cmp    eax,0x308b0017
  404584:	or     eax,0x5c21f281
  404589:	cmp    edi,DWORD PTR ds:0x8ad6c1a
  40458f:	sbb    al,0x83
  404591:	and    BYTE PTR [edi],dl
  404593:	pop    ss
  404594:	mov    bl,0xb6
  404596:	xchg   esp,eax
  404597:	xchg   esi,eax
  404598:	jno    0x40457c
  40459a:	cwde   
  40459b:	adc    esi,DWORD PTR [ebx-0x2e]
  40459e:	push   ds
  40459f:	(bad)  
  4045a0:	iret   
  4045a1:	inc    edi
  4045a2:	jge    0x4045f0
  4045a4:	(bad)  
  4045a5:	ja     0x4045aa
  4045a7:	fwait
  4045a8:	int3   
  4045a9:	and    DWORD PTR es:[esi+0x361716c7],0x33860b25
  4045b4:	and    BYTE PTR [ebx],bh
  4045b6:	sbb    BYTE PTR [esi+edx*1+0x1dcdca6a],ah
  4045bd:	pop    edx
  4045be:	sub    al,0x3b
  4045c0:	cli    
  4045c1:	into   
  4045c2:	pop    DWORD PTR [esi-0x5]
  4045c5:	(bad)  
  4045c6:	adc    DWORD PTR [ebp+0x5cb3ae03],ebx
  4045cc:	add    BYTE PTR [esi-0x6d06f8db],bl
  4045d2:	push   eax
  4045d3:	and    bh,ah
  4045d5:	mov    ds:0xf202b0e6,al
  4045da:	cmp    al,0x80
  4045dc:	add    edx,eax
  4045de:	ret    0x25a9
  4045e1:	push   edi
  4045e2:	pop    ecx
  4045e3:	pop    ss
  4045e4:	pop    ds
  4045e5:	addr16 add bh,bl
  4045e8:	iret   
  4045e9:	pop    ss
  4045ea:	ss and eax,0xbb061c29
  4045f0:	mov    al,ds:0x30221bcf
  4045f5:	aam    0x2b
  4045f7:	je     0x4045a3
  4045f9:	int    0x7a
  4045fb:	out    dx,al
  4045fc:	ds (bad) 
  4045fe:	dec    edx
  4045ff:	push   eax
  404600:	shr    DWORD PTR [edx-0x21],0xeb
  404604:	pop    ss
  404605:	imul   ebp,edi,0xbe70c76d
  40460b:	xlat   BYTE PTR ds:[ebx]
  40460c:	cmp    DWORD PTR [esi+ecx*4+0x49],esi
  404610:	add    DWORD PTR [edi+0x489937d1],edi
  404616:	shl    BYTE PTR [edi],cl
  404618:	daa    
  404619:	ror    ebx,1
  40461b:	push   esi
  40461c:	mov    ebp,0x5346c91e
  404621:	cwde   
  404622:	ins    BYTE PTR es:[edi],dx
  404623:	mov    bl,0xb1
  404625:	inc    edi
  404626:	addr16 retf 
  404628:	pop    ds
  404629:	mov    dh,0x6e
  40462b:	xchg   edx,eax
  40462c:	lds    esp,FWORD PTR [ecx]
  40462e:	jbe    0x40469a
  404630:	cmp    eax,DWORD PTR [ecx-0xa]
  404633:	outs   dx,BYTE PTR ds:[esi]
  404634:	retf   0xfd8e
  404637:	scas   al,BYTE PTR es:[edi]
  404638:	xor    al,0x1f
  40463a:	add    eax,0xffa8ae5e
  40463f:	jge    0x404661
  404641:	es and ebp,ebx
  404644:	ret    
  404645:	xchg   ecx,eax
  404646:	and    bl,dl
  404648:	dec    ebp
  404649:	clc    
  40464a:	sbb    DWORD PTR [eax],eax
  40464c:	sbb    bl,BYTE PTR [eax+0x2a221aa7]
  404652:	xor    ah,BYTE PTR [edx]
  404654:	daa    
  404655:	jne    0x4046b4
  404657:	and    DWORD PTR [edi],edx
  404659:	or     ecx,esp
  40465b:	sbb    dh,ah
  40465d:	pusha  
  40465e:	mov    ebx,0x34eeb61b
  404663:	test   DWORD PTR [edx-0x73],0x35afc42
  40466a:	retf   
  40466b:	add    eax,0xfe946982
  404670:	jns    0x404649
  404672:	stos   DWORD PTR es:[edi],eax
  404673:	push   0x5f
  404675:	data16 fwait
  404677:	imul   ebx,DWORD PTR [edi-0x118ffe28],0xee732d92
  404681:	cld    
  404682:	stos   BYTE PTR es:[edi],al
  404683:	iret   
  404684:	jnp    0x4046e5
  404686:	je     0x40465c
  404688:	arpl   cx,si
  40468a:	inc    DWORD PTR [ecx+ebx*2]
  40468d:	xchg   BYTE PTR [ebx+0x1d565a12],cl
  404693:	xor    BYTE PTR [edx+eax*8-0x4d887250],0x26
  40469b:	sbb    al,0xae
  40469d:	arpl   WORD PTR [ebx+ebp*8+0x650a939c],bx
  4046a4:	cmp    ebp,edi
  4046a6:	test   al,0x92
  4046a8:	sub    ch,ch
  4046aa:	ds sti 
  4046ac:	sub    bl,BYTE PTR [esi]
  4046ae:	test   esp,esp
  4046b0:	add    BYTE PTR [edi-0x4c83ecb1],dl
  4046b6:	cmp    al,BYTE PTR [edx+0x142a804b]
  4046bc:	rol    BYTE PTR [eax+0x71ddaddb],cl
  4046c2:	or     edi,DWORD PTR [eax]
  4046c4:	pop    ebx
  4046c5:	out    0x75,al
  4046c7:	fwait
  4046c8:	inc    esp
  4046c9:	lds    esp,FWORD PTR [ebp+0xd]
  4046cc:	mov    ch,0xd3
  4046ce:	xchg   esi,eax
  4046cf:	mov    bh,0xe2
  4046d1:	into   
  4046d2:	(bad)  
  4046d3:	and    DWORD PTR [edi-0x39],ebp
  4046d6:	rcl    esp,1
  4046d8:	sbb    ah,ah
  4046da:	mov    eax,ds:0x72dc8142
  4046df:	clc    
  4046e0:	out    dx,al
  4046e1:	int    0x82
  4046e3:	outs   dx,BYTE PTR ds:[esi]
  4046e4:	push   0xf7cd0e32
  4046e9:	inc    eax
  4046ea:	ficomp WORD PTR [edx-0x7a]
  4046ed:	daa    
  4046ee:	das    
  4046ef:	loope  0x4046c2
  4046f1:	xor    bh,BYTE PTR [edi]
  4046f3:	ja     0x404766
  4046f5:	lahf   
  4046f6:	dec    eax
  4046f7:	out    0xde,al
  4046f9:	mov    bl,BYTE PTR [eax]
  4046fb:	jo     0x40474c
  4046fd:	mov    ch,bl
  4046ff:	leave  
  404700:	clc    
  404701:	cwde   
  404702:	stc    
  404703:	pop    ebx
  404704:	add    BYTE PTR [edx],al
  404706:	loope  0x4046a5
  404708:	call   DWORD PTR [ebp-0x20]
  40470b:	lods   eax,DWORD PTR ds:[esi]
  40470c:	imul   ebx,esp,0x4bd3ff09
  404712:	push   cs
  404713:	iret   
  404714:	inc    ebp
  404715:	add    ch,cl
  404717:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404718:	loope  0x404792
  40471a:	or     ch,BYTE PTR [ecx+0x73eed1]
  404720:	adc    DWORD PTR [esp+eiz*2+0x3],0xffffffb3
  404725:	ret    0x6ca
  404728:	es popa 
  40472a:	or     eax,0x74f715e2
  40472f:	add    eax,DWORD PTR [edi+0x4d]
  404732:	repz or esi,DWORD PTR [edi-0x25]
  404736:	add    ecx,ebp
  404738:	push   0x4a
  40473a:	push   esp
  40473b:	mov    bl,0x5a
  40473d:	fdivr  QWORD PTR ds:0xaa660bbf
  404743:	mov    ah,0x3b
  404745:	lock and al,0x1e
  404748:	scas   al,BYTE PTR es:[edi]
  404749:	push   ebx
  40474a:	xchg   ebx,eax
  40474b:	sbb    bl,BYTE PTR [esi-0x30cfc53b]
  404751:	jg     0x404730
  404753:	xor    bh,bh
  404755:	jmp    0x1d325fca
  40475a:	xchg   DWORD PTR [edi],edx
  40475c:	ret    0xe8a
  40475f:	xor    edx,DWORD PTR [ebx-0x5cea26d0]
  404765:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404766:	push   edi
  404767:	shl    DWORD PTR [esi],1
  404769:	add    eax,0x9306b680
  40476e:	or     DWORD PTR [edi+edx*2+0x67b4ce29],edi
  404775:	mov    edi,0x2e7a06fe
  40477a:	add    BYTE PTR [ecx],bh
  40477c:	loope  0x4047c7
  40477e:	mov    eax,0x1b1bec94
  404783:	xchg   esi,eax
  404784:	add    DWORD PTR ds:0xf923202b,edx
  40478a:	mov    ebp,0x8df85aab
  40478f:	xor    eax,0x7fdeff11
  404794:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404795:	add    edi,ebp
  404797:	or     DWORD PTR [edi+0x940003],edx
  40479d:	or     DWORD PTR [ecx],esi
  40479f:	aad    0xc9
  4047a1:	in     eax,dx
  4047a2:	popa   
  4047a3:	push   ss
  4047a4:	ret    0x52d6
  4047a7:	push   edi
  4047a8:	repz pop ss
  4047aa:	lds    ebx,FWORD PTR [eax-0x2e0bd35c]
  4047b0:	add    eax,0x61aa74a
  4047b5:	inc    ebx
  4047b6:	xchg   esi,eax
  4047b7:	push   ebx
  4047b8:	out    dx,eax
  4047b9:	retf   0x9c8a
  4047bc:	call   0x519e0382
  4047c1:	xchg   ebp,eax
  4047c2:	call   0xd9f081d5
  4047c7:	iret   
  4047c8:	mov    ch,BYTE PTR [edi+0x4f]
  4047cb:	mov    al,ds:0x597e562c
  4047d0:	dec    ebp
  4047d1:	sub    DWORD PTR ds:0x1c8c1e12,0x12c170cb
  4047db:	gs push 0xffffffca
  4047de:	and    eax,DWORD PTR [eax]
  4047e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4047e1:	(bad)  
  4047e2:	scas   eax,DWORD PTR es:[edi]
  4047e3:	jo     0x4047cc
  4047e5:	ja     0x40477b
  4047e7:	inc    ecx
  4047e8:	es int 0x55
  4047eb:	xlat   BYTE PTR ds:[ebx]
  4047ec:	dec    ecx
  4047ed:	outs   dx,BYTE PTR ds:[esi]
  4047ee:	outs   dx,BYTE PTR ds:[esi]
  4047ef:	out    0x80,al
  4047f1:	retf   
  4047f2:	mov    esi,DWORD PTR [ebp-0x7b7f6435]
  4047f8:	add    al,BYTE PTR [eax]
  4047fa:	imul   ecx,DWORD PTR [eax],0x2c
  4047fd:	dec    edx
  4047fe:	add    BYTE PTR [ebx],0x3d
  404801:	or     DWORD PTR [ecx-0x7f37822a],ebx
  404807:	in     eax,dx
  404808:	dec    esi
  404809:	xchg   edi,ecx
  40480b:	sub    al,0xd1
  40480d:	inc    ebp
  40480e:	mov    esi,0x9d04f817
  404813:	inc    edx
  404814:	mov    ds:0x8a499cc3,eax
  404819:	cmp    BYTE PTR [edi+edi*2+0x78],0x5e
  40481e:	ins    DWORD PTR es:[edi],dx
  40481f:	test   BYTE PTR [ecx-0x258eb161],ah
  404825:	loopne 0x404875
  404827:	pop    edx
  404828:	ret    
  404829:	and    DWORD PTR [eax-0x65],edi
  40482c:	xor    eax,0x44b0915b
  404831:	pushf  
  404832:	stos   BYTE PTR es:[edi],al
  404833:	lds    edx,FWORD PTR [edi]
  404835:	fst    QWORD PTR [edx-0x3be21942]
  40483b:	inc    esi
  40483c:	inc    edx
  40483d:	push   edi
  40483e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40483f:	cmp    eax,0x18c6982b
  404844:	add    al,dl
  404846:	fcom   st(6)
  404848:	xor    edi,ecx
  40484a:	sbb    DWORD PTR [eax],eax
  40484c:	repz jle 0x4048a1
  40484f:	or     edx,ebx
  404851:	dec    ebp
  404852:	xchg   ebx,eax
  404853:	loop   0x404851
  404855:	mov    esp,ss
  404857:	fiadd  DWORD PTR [edi]
  404859:	pushf  
  40485a:	adc    eax,0xaf8a3d46
  40485f:	daa    
  404860:	inc    esi
  404861:	xchg   ebx,eax
  404862:	outs   dx,BYTE PTR ds:[esi]
  404863:	add    al,0x33
  404865:	push   0x31181531
  40486a:	lock inc ecx
  40486c:	fldenv [esi-0x2a0db455]
  404872:	push   0x0
  404874:	pusha  
  404875:	fwait
  404876:	xchg   ecx,eax
  404877:	jne    0x4048d2
  404879:	cwde   
  40487a:	xor    DWORD PTR [esi+edi*8],0x16
  40487e:	fs sti 
  404880:	out    dx,eax
  404881:	adc    esi,DWORD PTR [ebp-0x46]
  404884:	or     al,0xf1
  404886:	ret    0xd79
  404889:	loop   0x40481e
  40488b:	cmp    BYTE PTR [edx],bh
  40488d:	or     ebp,DWORD PTR [ecx]
  40488f:	call   DWORD PTR [ebx+0x38]
  404892:	cmp    BYTE PTR [esi+0x7d074d28],bh
  404898:	adc    DWORD PTR [esi-0x2a],edx
  40489b:	cmp    ebx,DWORD PTR [ecx-0x6ffacc4f]
  4048a1:	jb     0x4048c5
  4048a3:	inc    esp
  4048a4:	stos   DWORD PTR es:[edi],eax
  4048a5:	out    0xd5,eax
  4048a7:	xchg   BYTE PTR [edx-0x39fb8400],dh
  4048ad:	pop    ebp
  4048ae:	sub    eax,0x866c0179
  4048b3:	addr16 inc eax
  4048b5:	dec    edi
  4048b6:	cmp    ebx,DWORD PTR [ebx-0x37c7d17d]
  4048bc:	ret    0x7821
  4048bf:	mov    ebp,0xac6b080d
  4048c4:	dec    esp
  4048c5:	jecxz  0x404944
  4048c7:	pop    ebx
  4048c8:	(bad)  
  4048c9:	cli    
  4048ca:	and    al,0x8a
  4048cc:	into   
  4048cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4048ce:	jecxz  0x4048cf
  4048d0:	or     BYTE PTR [esi+ebp*1+0x1c747f1],ah
  4048d7:	push   ds
  4048d8:	mov    esi,DWORD PTR [esi+0x63ca4f30]
  4048de:	jae    0x404925
  4048e0:	push   esp
  4048e1:	dec    edx
  4048e2:	xor    BYTE PTR [edx*1-0x2a1cda9f],dl
  4048e9:	js     0x404929
  4048eb:	repnz xchg esi,eax
  4048ed:	add    BYTE PTR [ebx+0x67],bh
  4048f0:	cwde   
  4048f1:	push   eax
  4048f2:	jb     0x4048c4
  4048f4:	test   eax,0xfa5d9911
  4048f9:	shl    BYTE PTR [eax-0x106c347c],cl
  4048ff:	fcmovbe st,st(6)
  404901:	pop    esp
  404902:	out    0x3,al
  404904:	out    0x1d,al
  404906:	lods   eax,DWORD PTR ds:[esi]
  404907:	call   0x4e0527c0
  40490c:	test   BYTE PTR [edi+0x12105300],bl
  404912:	pop    eax
  404913:	jp     0x4048be
  404915:	and    bl,BYTE PTR [ecx]
  404917:	xchg   ecx,eax
  404918:	les    ebp,FWORD PTR [edi-0x26]
  40491b:	push   0xa09b409b
  404920:	pop    edi
  404921:	imul   esp,DWORD PTR [edi-0x19a5a957],0xffffff82
  404928:	mov    cl,0x9
  40492a:	and    eax,0x64386c9b
  40492f:	cmp    al,0x2d
  404931:	scas   al,BYTE PTR es:[edi]
  404932:	mov    ds:0xe29f7435,eax
  404937:	ficom  WORD PTR [esi]
  404939:	int3   
  40493a:	and    DWORD PTR [edi+0x42],edx
  40493d:	std    
  40493e:	pusha  
  40493f:	sub    BYTE PTR [edx-0x60de5020],bl
  404945:	iret   
  404946:	out    dx,al
  404947:	mov    ch,BYTE PTR [ebx-0xb8cd27e]
  40494d:	mov    cl,0x6c
  40494f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404950:	xor    eax,0xea8dab24
  404955:	adc    al,0xea
  404957:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404958:	fild   WORD PTR [ebp+0x29]
  40495b:	dec    edi
  40495c:	fdiv   DWORD PTR [esi+0x68]
  40495f:	jmp    0x4799:0xe3f6789e
  404966:	mov    bh,0x94
  404968:	lods   al,BYTE PTR ds:[esi]
  404969:	or     al,0x1b
  40496b:	inc    eax
  40496c:	fwait
  40496d:	cmc    
  40496e:	sub    DWORD PTR [ecx+0x6e],ebp
  404971:	ss mov esp,0x4b85a600
  404977:	(bad)  
  404978:	out    0x30,eax
  40497a:	sub    dh,bl
  40497c:	and    al,0x77
  40497e:	and    edi,ebp
  404980:	lds    esi,FWORD PTR [edx-0x3e750c56]
  404986:	lahf   
  404987:	ret    0x6443
  40498a:	mov    ah,0x91
  40498c:	clc    
  40498d:	or     ebp,0xffffffa0
  404990:	mov    cl,0x16
  404992:	mov    ?,WORD PTR [esi]
  404994:	outs   dx,BYTE PTR ds:[esi]
  404995:	sbb    eax,0x281f0773
  40499a:	pusha  
  40499b:	push   esp
  40499c:	fdivr  QWORD PTR [edi+0x69]
  40499f:	lea    ebx,gs:[esi-0x4a20677c]
  4049a6:	jnp    0x404951
  4049a8:	mov    fs,WORD PTR [eax-0x58b205aa]
  4049ae:	jno    0x40497b
  4049b0:	sbb    al,0xda
  4049b2:	mov    al,0x5d
  4049b4:	fcmovnu st,st(1)
  4049b6:	xchg   edi,eax
  4049b7:	ins    BYTE PTR es:[edi],dx
  4049b8:	xchg   edx,eax
  4049b9:	cld    
  4049ba:	mov    edx,0xc5ab493f
  4049bf:	push   cs
  4049c0:	and    BYTE PTR [esi+0x3e],al
  4049c3:	adc    dl,BYTE PTR [edi+0x4d]
  4049c6:	inc    ebx
  4049c7:	and    edx,DWORD PTR [esi-0x2a8fd028]
  4049cd:	out    dx,al
  4049ce:	sbb    BYTE PTR [ecx+0x14],al
  4049d1:	inc    edx
  4049d2:	fcmovbe st,st(6)
  4049d4:	push   ebx
  4049d5:	adc    edi,ebp
  4049d7:	in     eax,0x0
  4049d9:	call   0xfd12:0xd1b50474
  4049e0:	sbb    DWORD PTR [eax],0x0
  4049e3:	cwde   
  4049e4:	inc    edx
  4049e5:	push   ds
  4049e6:	push   es
  4049e7:	xchg   ecx,eax
  4049e8:	cmp    eax,0x18aa44ff
  4049ed:	lods   al,BYTE PTR ds:[esi]
  4049ee:	xchg   DWORD PTR [ebx-0x233932d1],esi
  4049f4:	out    dx,al
  4049f5:	pop    edx
  4049f6:	add    ch,ch
  4049f8:	fldenv [ecx]
  4049fa:	inc    ecx
  4049fb:	into   
  4049fc:	cld    
  4049fd:	push   0xb003af84
  404a02:	mov    ebp,0xf2947ba0
  404a07:	mov    BYTE PTR [ebp+eax*8-0x98e9dcd],al
  404a0e:	jo     0x404a8b
  404a10:	push   esi
  404a11:	(bad)  
  404a12:	mov    cl,0xa4
  404a14:	xchg   edi,eax
  404a15:	push   ecx
  404a16:	mul    DWORD PTR [eax+esi*4-0x3a39c798]
  404a1d:	xor    esi,DWORD PTR [ebp-0x49]
  404a20:	mov    edx,0x857b62a
  404a25:	or     BYTE PTR [edx+0x6910ff56],ch
  404a2b:	jne    0x4049ff
  404a2d:	pop    ecx
  404a2e:	sub    al,0x64
  404a30:	in     eax,dx
  404a31:	inc    edx
  404a32:	jmp    0x4049e6
  404a34:	sub    al,0xad
  404a36:	lods   eax,DWORD PTR ds:[esi]
  404a37:	call   0x3e:0x716ccc13
  404a3e:	jg     0x404a6f
  404a40:	mov    BYTE PTR [ecx-0x42],cl
  404a43:	out    dx,al
  404a44:	into   
  404a45:	rol    edx,0xa1
  404a48:	faddp  st(6),st
  404a4a:	fwait
  404a4b:	pusha  
  404a4c:	mov    ebp,0x9c2360ab
  404a51:	xchg   esp,eax
  404a52:	jns    0x404a36
  404a54:	jmp    0xd66a:0xe2a5e755
  404a5b:	fs add cl,bh
  404a5e:	adc    esi,DWORD PTR [edx+0x67]
  404a61:	add    BYTE PTR ds:0xd20d2661,dl
  404a67:	outs   dx,BYTE PTR ds:[esi]
  404a68:	mov    eax,0xf97fd51c
  404a6d:	aas    
  404a6e:	and    ch,cl
  404a70:	cmp    bl,BYTE PTR [esi]
  404a72:	call   FWORD PTR [ebp+0x2b3e697b]
  404a78:	mov    esp,0xfd3a4960
  404a7d:	cmp    edx,DWORD PTR [edx+ecx*1]
  404a80:	ds inc edx
  404a82:	sbb    ebx,eax
  404a84:	jle    0x404a9b
  404a86:	xchg   esp,eax
  404a87:	in     al,0xaf
  404a89:	adc    al,0x9b
  404a8b:	cmc    
  404a8c:	lock imul DWORD PTR [ebp+0x45]
  404a90:	xor    ah,dh
  404a92:	dec    eax
  404a93:	push   ss
  404a94:	jae    0x404ac7
  404a96:	and    BYTE PTR [ecx-0x4f50e74c],0xf5
  404a9d:	xor    edx,edx
  404a9f:	xor    DWORD PTR [esi],0x4a
  404aa2:	add    ch,dl
  404aa4:	push   edx
  404aa5:	ja     0x404a59
  404aa7:	cs mov bh,0x4e
  404aaa:	mov    ebx,0x900fa5f9
  404aaf:	fs push ebp
  404ab1:	int3   
  404ab2:	mov    ebx,ebp
  404ab4:	or     DWORD PTR [ebp+0x49f2a256],0x37
  404abb:	add    eax,0xb0540ae3
  404ac0:	adc    al,cl
  404ac2:	outs   dx,DWORD PTR gs:[esi]
  404ac4:	inc    ecx
  404ac5:	mov    edx,ebp
  404ac7:	idiv   BYTE PTR [ebx]
  404ac9:	inc    esi
  404aca:	add    esp,eax
  404acc:	sub    al,BYTE PTR [edi]
  404ace:	sbb    ch,bh
  404ad0:	ffree  st(3)
  404ad2:	add    DWORD PTR [edx-0x25ff7af2],esp
  404ad8:	dec    ebp
  404ad9:	cwde   
  404ada:	inc    edx
  404adb:	and    edx,edi
  404add:	test   al,0x3
  404adf:	clc    
  404ae0:	sti    
  404ae1:	stc    
  404ae2:	shl    BYTE PTR [ecx],0xe1
  404ae5:	retf   0x3c81
  404ae8:	mov    esp,0xa3151fc4
  404aed:	repz pop esi
  404aef:	pop    esi
  404af0:	push   cs
  404af1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404af2:	popf   
  404af3:	push   edi
  404af4:	cdq    
  404af5:	xchg   ebp,eax
  404af6:	fcomp  QWORD PTR [eax-0x5ee50028]
  404afc:	dec    ebp
  404afd:	xor    DWORD PTR [edx+0x7a],ebx
  404b00:	loop   0x404b63
  404b02:	cdq    
  404b03:	mov    bl,0xfb
  404b05:	push   edx
  404b06:	fadd   DWORD PTR [eax]
  404b08:	les    esp,FWORD PTR [ebx+0x4f]
  404b0b:	pop    ss
  404b0c:	mov    ebp,0xe6567e7a
  404b11:	push   ebp
  404b12:	sub    eax,0x1cb0df95
  404b17:	aam    0x80
  404b19:	outs   dx,DWORD PTR ds:[esi]
  404b1a:	mov    dl,BYTE PTR [ebx]
  404b1c:	imul   edx,DWORD PTR [ebx+edi*4],0xe83b4252
  404b23:	xchg   ecx,eax
  404b24:	cmp    esp,DWORD PTR [edx]
  404b26:	fnop   
  404b28:	sar    esi,cl
  404b2a:	repnz in al,dx
  404b2c:	jp     0x404b15
  404b2e:	shr    DWORD PTR [ebp+0x6e914c91],0x88
  404b35:	rcr    DWORD PTR [edi+0x3590572f],1
  404b3b:	call   0xa947588e
  404b40:	xor    eax,0xec6a53a6
  404b45:	mov    esi,0x268b2b64
  404b4a:	jns    0x404b30
  404b4c:	jb     0x404b8b
  404b4e:	dec    eax
  404b4f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404b50:	xchg   esp,eax
  404b51:	mov    esi,DWORD PTR [ebx+ebx*1+0x7a]
  404b55:	mov    WORD PTR [ecx-0x36264cd6],cs
  404b5b:	mov    esp,0x8db332f4
  404b60:	xor    eax,0x36de9fe8
  404b65:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404b67:	out    dx,eax
  404b68:	ja     0x404b05
  404b6a:	pop    edi
  404b6b:	loope  0x404b6d
  404b6d:	add    DWORD PTR [ebp-0x32472f9a],ebp
  404b73:	mov    DWORD PTR [ebx-0x4d8b318d],eax
  404b79:	sub    dl,BYTE PTR [edi]
  404b7b:	mov    bl,0x24
  404b7d:	fnsave [eax-0x36]
  404b80:	adc    eax,0x46a5699c
  404b85:	iret   
  404b86:	jb     0x404b28
  404b88:	ja     0x404b98
  404b8a:	les    esp,FWORD PTR [edi]
  404b8c:	imul   ecx,DWORD PTR [ecx+0x64],0x1e
  404b90:	pop    edx
  404b91:	add    ch,0x31
  404b94:	or     DWORD PTR [ebx-0x1dc7b34a],ebp
  404b9a:	jg     0x404ba7
  404b9c:	scas   al,BYTE PTR es:[edi]
  404b9d:	and    eax,0x649ef288
  404ba2:	and    ebp,ebx
  404ba4:	retf   
  404ba5:	xchg   DWORD PTR [edx],edi
  404ba7:	call   0x3e812a8
  404bac:	add    BYTE PTR [eax+ebp*4-0x557c953f],dl
  404bb3:	xchg   esp,edx
  404bb5:	ret    0x45a9
  404bb8:	mov    esi,0xa80aaecd
  404bbd:	inc    eax
  404bbe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404bbf:	enter  0x2fc2,0xab
  404bc3:	mov    ?,WORD PTR [esi+eax*2-0x5c]
  404bc7:	dec    esp
  404bc8:	push   ss
  404bc9:	adc    DWORD PTR [eax],eax
  404bcb:	div    eax
  404bcd:	fs pop eax
  404bcf:	out    dx,al
  404bd0:	mov    dl,0x0
  404bd2:	mov    edi,0x1974e48d
  404bd7:	mov    dh,0xdd
  404bd9:	ss sti 
  404bdb:	sahf   
  404bdc:	lock stc 
  404bde:	fsub   QWORD PTR [ebx]
  404be0:	icebp  
  404be1:	mov    ebx,0x7de33107
  404be6:	or     DWORD PTR [edx],0xdb533fe2
  404bec:	add    al,0xe6
  404bee:	test   BYTE PTR [edi],0xfc
  404bf1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404bf2:	int    0x44
  404bf4:	mul    BYTE PTR [ecx+0x2b]
  404bf7:	(bad)  
  404bf8:	out    dx,al
  404bf9:	and    ecx,DWORD PTR [ecx-0x71131e19]
  404bff:	ins    BYTE PTR es:[edi],dx
  404c00:	jecxz  0x404bb0
  404c02:	xor    eax,0x7368d179
  404c07:	mov    edi,0x96412ad0
  404c0c:	sti    
  404c0d:	(bad)  
  404c0e:	test   ecx,ecx
  404c10:	cli    
  404c11:	xchg   esp,eax
  404c12:	sbb    al,0x9c
  404c14:	clc    
  404c15:	push   edx
  404c16:	mov    edx,0xd810f962
  404c1b:	jno    0x404bf9
  404c1d:	fistp  QWORD PTR [ebp-0x5b622b0c]
  404c23:	(bad)  
  404c25:	pop    ebx
  404c26:	and    dl,BYTE PTR [edi]
  404c28:	(bad)  
  404c29:	sbb    DWORD PTR [eax],esi
  404c2b:	dec    esi
  404c2c:	loope  0x404c7c
  404c2e:	fisub  DWORD PTR [eax-0x4c977320]
  404c34:	ror    dl,cl
  404c36:	add    BYTE PTR [esi],al
  404c38:	mov    edx,ebx
  404c3a:	or     BYTE PTR [edx+ebx*2],ch
  404c3d:	mov    BYTE PTR [edi+0x32],0xdd
  404c41:	mov    esi,0x81085
  404c46:	mov    ch,0xd7
  404c48:	(bad)  
  404c49:	push   ecx
  404c4a:	lods   al,BYTE PTR ds:[esi]
  404c4b:	xchg   ebp,eax
  404c4c:	xor    BYTE PTR [ebp+0x1f],ah
  404c4f:	ret    0x57f3
  404c52:	push   ss
  404c53:	adc    al,0x1e
  404c55:	outs   dx,DWORD PTR ds:[esi]
  404c56:	sbb    al,0x2e
  404c58:	shl    BYTE PTR [esi],0x15
  404c5b:	call   0xa9384dc8
  404c60:	pop    ebx
  404c61:	test   cl,bh
  404c63:	bound  esi,QWORD PTR [ebp+0x2804fbb3]
  404c69:	jmp    0x6ccd:0xdd00c6fa
  404c70:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404c71:	nop
  404c72:	les    ebp,FWORD PTR [esi]
  404c74:	mov    esp,DWORD PTR [edi-0x22dff32]
  404c7a:	(bad)  
  404c7b:	mov    edx,0x75cac936
  404c80:	dec    ebp
  404c81:	dec    esp
  404c82:	retf   
  404c83:	aaa    
  404c84:	jecxz  0x404d00
  404c86:	leave  
  404c87:	cmp    DWORD PTR [ecx+0x22],edi
  404c8a:	enter  0x8e73,0x15
  404c8e:	adc    esp,DWORD PTR [eax-0x25edd7ac]
  404c94:	mov    edx,0x200c001f
  404c99:	inc    esi
  404c9a:	add    DWORD PTR [eax],eax
  404c9c:	dec    esi
  404c9d:	or     DWORD PTR [ecx+0x14],esi
  404ca0:	mov    esp,edi
  404ca2:	repz or eax,0x7c312c3
  404ca8:	and    eax,0x66fe9ac8
  404cad:	popa   
  404cae:	lods   eax,DWORD PTR ds:[esi]
  404caf:	sbb    edx,eax
  404cb1:	(bad)  
  404cb2:	rcr    BYTE PTR [eax],0x78
  404cb5:	mov    ds:0x382e1af7,eax
  404cba:	scas   al,BYTE PTR es:[edi]
  404cbb:	sbb    ebp,esp
  404cbd:	into   
  404cbe:	cwde   
  404cbf:	add    BYTE PTR [edx],ah
  404cc1:	adc    ah,BYTE PTR ds:0x4ed4231c
  404cc7:	sub    edx,DWORD PTR [ecx]
  404cc9:	mov    ?,eax
  404ccb:	jb     0x404ccd
  404ccd:	push   eax
  404cce:	fwait
  404ccf:	inc    ebp
  404cd0:	sti    
  404cd1:	mov    ebx,esp
  404cd3:	js     0x404caf
  404cd5:	dec    ecx
  404cd6:	mov    dh,0x4f
  404cd8:	enter  0x807,0x16
  404cdc:	fld    st(5)
  404cde:	bound  esp,QWORD PTR [ecx]
  404ce0:	aam    0x7e
  404ce2:	je     0x404c88
  404ce4:	aad    0x44
  404ce6:	push   ds
  404ce7:	xchg   ebx,eax
  404ce8:	pop    es
  404ce9:	fwait
  404cea:	lahf   
  404ceb:	retf   0xc106
  404cee:	retf   0x29fd
  404cf1:	xor    ebp,DWORD PTR [esi]
  404cf3:	mov    al,0x8
  404cf5:	stc    
  404cf6:	inc    ebx
  404cf7:	xchg   DWORD PTR [edx],ebx
  404cf9:	mov    bh,0xf9
  404cfb:	fisubr WORD PTR [ebx]
  404cfd:	jge    0x404c8f
  404cff:	jmp    0x86705304
  404d04:	ins    BYTE PTR es:[edi],dx
  404d05:	pop    es
  404d06:	out    dx,al
  404d07:	jmp    0x404d64
  404d09:	adc    eax,0x140251b5
  404d0e:	jae    0x404d48
  404d10:	xor    eax,0x87f25cf
  404d15:	into   
  404d16:	out    0x14,eax
  404d18:	aas    
  404d19:	fsubr  QWORD PTR [ecx+0x6bdd66aa]
  404d1f:	rcl    DWORD PTR [ecx-0x30],0x1e
  404d23:	xlat   BYTE PTR ds:[ebx]
  404d24:	aam    0xd1
  404d26:	loopne 0x404ce4
  404d28:	jecxz  0x404d0d
  404d2a:	mov    ds:0x64d2ba02,al
  404d2f:	imul   ecx,DWORD PTR [ebp+0x20cb4d85],0x17a08f84
  404d39:	xchg   esp,eax
  404d3a:	fidiv  WORD PTR [esi]
  404d3c:	pop    ds
  404d3d:	fcmovu st,st(5)
  404d3f:	je     0x404db6
  404d41:	popf   
  404d42:	sar    BYTE PTR [ecx-0x815e79d],cl
  404d48:	or     bh,bl
  404d4a:	jecxz  0x404d89
  404d4c:	mov    bh,0x26
  404d4e:	std    
  404d4f:	jnp    0x404d2e
  404d51:	cmp    DWORD PTR [edx-0x41],ebp
  404d54:	call   0x6d43:0xf001631c
  404d5b:	inc    ebx
  404d5c:	dec    esi
  404d5d:	loop   0x404dc2
  404d5f:	test   DWORD PTR [edx*8+0x32c868],esp
  404d66:	push   eax
  404d67:	or     bl,BYTE PTR [bx+si+0x47]
  404d6b:	gs dec esp
  404d6d:	out    0x7e,al
  404d6f:	data16 mov cs,WORD PTR [ecx+eiz*4+0x6468945b]
  404d77:	push   esp
  404d78:	(bad)  
  404d79:	add    DWORD PTR [ebx],edi
  404d7b:	pop    edx
  404d7c:	adc    BYTE PTR [edx+ebp*2-0x7229adaf],bh
  404d83:	jbe    0x404d20
  404d85:	ror    BYTE PTR [eax],0x76
  404d88:	(bad)  [ecx+0x1417774f]
  404d8e:	jbe    0x404e08
  404d90:	pop    ecx
  404d91:	jle    0x404dfc
  404d93:	cmp    eax,0x3e6c39a6
  404d98:	in     al,0x52
  404d9a:	push   ebx
  404d9b:	shl    BYTE PTR [ecx],1
  404d9d:	in     eax,dx
  404d9e:	adc    cl,bh
  404da0:	pop    edi
  404da1:	xchg   DWORD PTR ds:0xa091ace4,esp
  404da7:	sti    
  404da8:	jmp    0xee45:0x28f197fa
  404daf:	or     ah,BYTE PTR [edi+0x2f]
  404db2:	mov    cl,0x0
  404db4:	mov    bh,cl
  404db6:	sahf   
  404db7:	or     BYTE PTR [ecx-0x74ae5a6f],0x53
  404dbe:	pop    ebx
  404dbf:	stos   BYTE PTR es:[edi],al
  404dc0:	mov    dl,BYTE PTR ds:0xd88fb6f9
  404dc6:	out    0x3b,al
  404dc8:	xchg   BYTE PTR [edx-0x73db1300],bl
  404dce:	pop    esp
  404dcf:	jae    0x404d9f
  404dd1:	test   BYTE PTR [esi],bl
  404dd3:	xchg   ecx,eax
  404dd4:	add    edx,DWORD PTR [esi-0x1e]
  404dd7:	dec    ebp
  404dd8:	fmul   DWORD PTR [esi-0x60]
  404ddb:	mov    ah,0x9
  404ddd:	inc    ebp
  404dde:	data16 or dh,BYTE PTR [edx]
  404de1:	cmp    al,0x24
  404de3:	call   0xf6299f06
  404de8:	mov    ds:0xad1ca750,eax
  404ded:	inc    edx
  404dee:	ins    DWORD PTR es:[edi],dx
  404def:	add    BYTE PTR [esi+0x5b602b43],0x24
  404df6:	cmc    
  404df7:	add    edx,DWORD PTR [eax-0x3f394ce3]
  404dfd:	pop    ss
  404dfe:	jno    0x404e38
  404e00:	jp     0x404e10
  404e02:	das    
  404e03:	call   0x1ec:0x8bfe0367
  404e0a:	mov    esp,0x79effc0e
  404e0f:	push   eax
  404e10:	inc    ebx
  404e11:	icebp  
  404e12:	aaa    
  404e13:	xor    cl,BYTE PTR [esi]
  404e15:	fiadd  DWORD PTR [ebx]
  404e17:	ins    DWORD PTR es:[edi],dx
  404e18:	dec    ecx
  404e19:	fcmovnb st,st(5)
  404e1b:	pop    ss
  404e1c:	sbb    cl,bl
  404e1e:	jg     0x404dc9
  404e20:	(bad)  
  404e22:	inc    ecx
  404e23:	retf   
  404e24:	icebp  
  404e25:	mov    esp,0xb46cd50a
  404e2a:	int3   
  404e2b:	jg     0x404e90
  404e2d:	add    BYTE PTR [esi-0x591ee00],bh
  404e33:	mov    bh,0xcc
  404e35:	xchg   edi,eax
  404e36:	int    0xc0
  404e38:	lahf   
  404e39:	xor    eax,0xcfd1c160
  404e3e:	push   esi
  404e3f:	mov    bl,0x3
  404e41:	mov    cl,BYTE PTR [esi]
  404e43:	mov    dl,0x3d
  404e45:	mov    ds:0x8d86a739,eax
  404e4a:	mov    esp,0x8b77689e
  404e4f:	xchg   esp,eax
  404e50:	sbb    ah,dl
  404e52:	ror    DWORD PTR [ebp+0x3ee54ae4],1
  404e58:	test   al,0x4
  404e5a:	fdiv   DWORD PTR [edi]
  404e5c:	jle    0x404e7c
  404e5e:	out    dx,eax
  404e5f:	cmp    eax,0x34b6b93c
  404e64:	cli    
  404e65:	push   ecx
  404e66:	sbb    DWORD PTR [ecx],0x18045cb1
  404e6c:	aaa    
  404e6d:	(bad)  
  404e6e:	xor    ebx,DWORD PTR [edx]
  404e70:	cmc    
  404e71:	adc    BYTE PTR [edx+0x1b],ch
  404e74:	jecxz  0x404e6f
  404e76:	pop    esp
  404e77:	sub    al,0x7d
  404e79:	xchg   esi,eax
  404e7a:	adc    BYTE PTR ds:0x2f276c2b,ah
  404e80:	jmp    0x9f66cc6f
  404e85:	xlat   BYTE PTR ds:[ebx]
  404e86:	dec    eax
  404e87:	sub    esp,DWORD PTR [esi+ebp*1-0x34]
  404e8b:	sub    al,BYTE PTR [edx]
  404e8d:	aad    0xfa
  404e8f:	sub    BYTE PTR [eax-0x7e],al
  404e92:	mov    ds:0x9f860029,al
  404e97:	xchg   ebp,eax
  404e98:	mov    dl,0xcd
  404e9a:	addr16 test al,0xb3
  404e9d:	sbb    edi,DWORD PTR [ebp+0x1b59a19f]
  404ea3:	(bad)  
  404ea4:	mov    al,ds:0xf0f18f
  404ea9:	and    DWORD PTR [eax+0x7],eax
  404eac:	je     0x404eae
  404eae:	push   ss
  404eaf:	ins    DWORD PTR es:[edi],dx
  404eb0:	inc    ebx
  404eb1:	repnz mov ebx,0x2231ad3
  404eb7:	mov    ecx,0x961fbc2d
  404ebc:	inc    eax
  404ebd:	lods   eax,DWORD PTR ds:[esi]
  404ebe:	jmp    0xabefc6be
  404ec3:	inc    ecx
  404ec4:	cs sahf 
  404ec6:	sub    BYTE PTR gs:[ecx],bl
  404ec9:	mov    ebx,0x6a9c3e36
  404ece:	loopne 0x404f23
  404ed0:	stos   DWORD PTR es:[edi],eax
  404ed1:	push   0x69f2e9a2
  404ed6:	pop    esp
  404ed7:	add    ch,0x12
  404eda:	cmp    bh,al
  404edc:	clc    
  404edd:	jae    0x404ecd
  404edf:	lods   al,BYTE PTR ds:[esi]
  404ee0:	iret   
  404ee1:	popa   
  404ee2:	mov    ah,0x12
  404ee4:	xchg   esi,eax
  404ee5:	jo     0x404f61
  404ee7:	jns    0x404e8a
  404ee9:	jne    0x404f1c
  404eeb:	outs   dx,DWORD PTR ds:[esi]
  404eec:	and    al,0x34
  404eee:	pop    es
  404eef:	add    eax,0xbaad6613
  404ef4:	dec    edx
  404ef5:	addr16 jae 0x404ec9
  404ef8:	jge    0x404efa
  404efa:	inc    eax
  404efb:	test   DWORD PTR ds:0x5f4b4130,esi
  404f01:	pop    es
  404f02:	xor    ecx,DWORD PTR [ecx]
  404f04:	loope  0x404f64
  404f06:	inc    edx
  404f07:	mov    edi,0x7c27698b
  404f0c:	popf   
  404f0d:	in     al,dx
  404f0e:	push   es
  404f0f:	inc    ebx
  404f10:	neg    ebx
  404f12:	hlt    
  404f13:	add    BYTE PTR [ecx-0x7e],cl
  404f16:	cmc    
  404f17:	push   esi
  404f18:	and    esi,DWORD PTR [ebp-0x779be812]
  404f1e:	(bad)  
  404f1f:	(bad)  ds:0xf52794bf
  404f25:	scas   eax,DWORD PTR es:[edi]
  404f26:	jp     0x404f51
  404f28:	mov    bh,0xda
  404f2a:	inc    ebp
  404f2b:	and    al,0x72
  404f2d:	int3   
  404f2e:	call   0xb7e6834f
  404f33:	es out dx,al
  404f35:	pop    ss
  404f36:	jle    0x404f55
  404f38:	mov    al,0x72
  404f3a:	mov    DWORD PTR [eax],esi
  404f3c:	mov    eax,ds:0xe32ff4d0
  404f41:	mov    ecx,0x41d4203
  404f46:	push   edx
  404f47:	inc    ebx
  404f48:	pop    edi
  404f49:	outs   dx,BYTE PTR ds:[esi]
  404f4a:	sbb    eax,0x9078aa2e
  404f4f:	inc    esi
  404f50:	in     al,dx
  404f51:	adc    DWORD PTR [edi+0x3c],ebx
  404f54:	lods   al,BYTE PTR es:[esi]
  404f56:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404f57:	shl    DWORD PTR [edi-0x3a],cl
  404f5a:	mov    cl,0x86
  404f5c:	xchg   esp,eax
  404f5d:	add    DWORD PTR [eax],0xead27d8c
  404f63:	mov    ebx,0x6a551083
  404f68:	jl     0x404fb8
  404f6a:	aas    
  404f6b:	push   ebp
  404f6c:	xchg   DWORD PTR [ebx-0x267727d7],ebx
  404f72:	inc    edx
  404f73:	(bad)  
  404f74:	mov    dl,BYTE PTR [edi]
  404f76:	std    
  404f77:	out    dx,al
  404f78:	mov    DWORD PTR [ebp-0x69],edx
  404f7b:	sbb    DWORD PTR ds:0x2bc473bf,esi
  404f81:	std    
  404f82:	sbb    BYTE PTR [ebx-0x1d58bccb],dh
  404f88:	cs or  ebp,0xdbc7da0d
  404f8f:	mov    al,ds:0xcfb105da
  404f94:	fmul   DWORD PTR [ebx+0xf]
  404f97:	not    bh
  404f99:	mov    DWORD PTR [ebp-0x1f],esp
  404f9c:	add    BYTE PTR [edx-0x5cd74953],ah
  404fa2:	out    dx,eax
  404fa3:	shl    DWORD PTR ds:0xfe6a3191,cl
  404fa9:	(bad)  
  404faa:	jae    0x404fa4
  404fac:	into   
  404fad:	test   BYTE PTR [esi-0x783b3e2],dh
  404fb3:	imul   eax,DWORD PTR [ecx-0x451dc58a],0x6f
  404fba:	jl     0x404f3c
  404fbc:	mov    ds:0x9403e9,eax
  404fc1:	popa   
  404fc2:	pop    eax
  404fc3:	add    BYTE PTR [ebx+0x4c0b431b],dh
  404fc9:	mov    ebx,edi
  404fcb:	dec    esi
  404fcc:	jmp    0x404f73
  404fce:	jbe    0x404ff2
  404fd0:	sub    ebp,DWORD PTR ds:0xd204b5b6
  404fd6:	retf   
  404fd7:	sub    BYTE PTR [ebx-0x4c],ah
  404fda:	dec    esp
  404fdb:	lods   eax,DWORD PTR ds:[esi]
  404fdc:	mov    esp,0xbc502c57
  404fe1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404fe2:	fmul   QWORD PTR [ebx]
  404fe4:	pop    ebx
  404fe5:	mov    al,dh
  404fe7:	push   esi
  404fe8:	hlt    
  404fe9:	sbb    esi,DWORD PTR [esi]
  404feb:	add    edx,DWORD PTR [ebx]
  404fed:	push   DWORD PTR [edx+0x3b5813ad]
  404ff3:	sub    ch,ah
  404ff5:	mov    dl,0x49
  404ff7:	mov    ch,0x4b
  404ff9:	rcl    DWORD PTR [eax-0x46d15be0],1
  404fff:	cli    
  405000:	dec    edx
  405001:	jne    0x405014
  405003:	pop    edi
  405004:	fs call 0x67aa:0xec02f413
  40500c:	pushf  
  40500d:	push   cs
  40500e:	sbb    DWORD PTR es:[ecx+ecx*8-0x7a],edx
  405013:	mov    esp,0x7c006633
  405018:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405019:	or     BYTE PTR [ebx+0x1c],al
  40501c:	push   edx
  40501d:	and    al,0x26
  40501f:	jl     0x40501b
  405021:	adc    esi,DWORD PTR [eax+0xc]
  405024:	addr16 in al,dx
  405026:	adc    al,0x16
  405028:	add    ah,dh
  40502a:	dec    ebx
  40502b:	sti    
  40502c:	pop    di
  40502e:	les    ebx,FWORD PTR [esi+0x27a958e3]
  405034:	mov    esp,DWORD PTR [ebx+eax*4-0x1efe86be]
  40503b:	stos   DWORD PTR es:[edi],eax
  40503c:	loope  0x404fdb
  40503e:	cmp    ecx,ecx
  405040:	dec    ecx
  405041:	inc    ebp
  405042:	arpl   WORD PTR [esi],di
  405044:	add    DWORD PTR [edx],edx
  405046:	leave  
  405047:	pop    ebx
  405048:	jecxz  0x405086
  40504a:	sbb    esi,DWORD PTR [ebp-0x2fff67a5]
  405050:	(bad)  
  405051:	(bad)  
  405052:	fsubr  DWORD PTR [eax+0x56]
  405055:	xor    esi,DWORD PTR [esp+ecx*1]
  405058:	ins    BYTE PTR es:[edi],dx
  405059:	mov    esi,0x1aace290
  40505e:	ins    BYTE PTR es:[edi],dx
  40505f:	xchg   esp,ecx
  405061:	jno    0x4050de
  405063:	sar    DWORD PTR [ecx*8+0x1826b4b3],1
  40506a:	inc    esp
  40506b:	pop    edx
  40506c:	(bad)  
  40506d:	(bad)  
  40506e:	fstp   TBYTE PTR [esi]
  405070:	push   ebx
  405071:	xor    esi,ecx
  405073:	test   DWORD PTR [ebx-0x561cf471],ebx
  405079:	cli    
  40507a:	mov    eax,0x5386310d
  40507f:	push   0xa18bbc19
  405084:	mov    cl,0x38
  405086:	jae    0x40504c
  405088:	mov    bl,0xb5
  40508a:	jecxz  0x4050b5
  40508c:	or     eax,DWORD PTR [eax]
  40508e:	and    DWORD PTR [ebx],ebp
  405090:	dec    edi
  405091:	add    BYTE PTR [edx],bl
  405093:	inc    esi
  405094:	outs   dx,DWORD PTR ds:[esi]
  405095:	div    BYTE PTR [edx-0x5f6cf77e]
  40509b:	aas    
  40509c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40509d:	jge    0x405097
  40509f:	imul   eax,eax,0x18
  4050a2:	nop
  4050a3:	(bad)  
  4050a5:	dec    esi
  4050a6:	clc    
  4050a7:	fwait
  4050a8:	mov    dh,0x2b
  4050aa:	jmp    0x7eb2:0x92c51816
  4050b1:	mov    al,ds:0x19477117
  4050b6:	aas    
  4050b7:	cmp    al,0x20
  4050b9:	jl     0x405118
  4050bb:	imul   ecx,DWORD PTR [edi-0x182bea6e],0xfffffff7
  4050c2:	push   ss
  4050c3:	cwde   
  4050c4:	push   edi
  4050c5:	cmp    eax,0x583f375e
  4050ca:	cmp    al,0x90
  4050cc:	(bad)  
  4050cd:	mov    dh,0xb4
  4050cf:	sbb    eax,0xf8f1d3f7
  4050d4:	into   
  4050d5:	push   0x59
  4050d7:	push   edx
  4050d8:	test   al,0xf
  4050da:	retf   
  4050db:	out    dx,eax
  4050dc:	push   es
  4050dd:	loope  0x4050d2
  4050df:	mov    ecx,0x1edb8460
  4050e4:	jo     0x4050b8
  4050e6:	push   ebx
  4050e7:	nop
  4050e8:	push   ss
  4050e9:	mov    bh,0x41
  4050eb:	xor    eax,0x97f959b8
  4050f0:	fidivr WORD PTR [eax+eax*1]
  4050f3:	lods   al,BYTE PTR ds:[esi]
  4050f4:	mov    edx,0xf0e485e7
  4050f9:	jg     0x4050db
  4050fb:	push   es
  4050fc:	push   edx
  4050fd:	das    
  4050fe:	push   cs
  4050ff:	outs   dx,BYTE PTR ds:[esi]
  405100:	test   DWORD PTR [edi+0x6b],0xa20f0166
  405107:	push   cs
  405108:	sub    al,0x68
  40510a:	(bad)  
  40510b:	xchg   esp,eax
  40510c:	mov    BYTE PTR [edi],al
  40510e:	(bad)  
  40510f:	ins    DWORD PTR es:[edi],dx
  405110:	ror    BYTE PTR [ebx-0x60],1
  405113:	loopne 0x405178
  405115:	and    bl,BYTE PTR [eax-0x496b7f]
  40511b:	and    al,0xfa
  40511d:	sub    DWORD PTR [eax-0x6],edx
  405120:	imul   ebp,DWORD PTR [ebp+0x4c898f37],0x869d927
  40512a:	inc    eax
  40512b:	lods   al,BYTE PTR ds:[esi]
  40512c:	adc    DWORD PTR [ebx-0x11],0x52
  405130:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405131:	inc    DWORD PTR [edi-0x4f51d709]
  405137:	scas   al,BYTE PTR es:[edi]
  405138:	add    BYTE PTR [ebx],ch
  40513a:	xlat   BYTE PTR ds:[ebx]
  40513b:	ret    
  40513c:	(bad)  
  40513d:	mov    ch,0x78
  40513f:	and    eax,0x281f2137
  405144:	lahf   
  405145:	jmp    0x6d66e940
  40514a:	nop
  40514b:	mov    edx,0xc3ee218
  405150:	shl    DWORD PTR [esi+0x58],0x1
  405154:	aam    0x46
  405156:	pusha  
  405157:	add    BYTE PTR [eax-0x5d],ah
  40515a:	mov    eax,DWORD PTR [edi]
  40515c:	lds    ebp,FWORD PTR [ecx+0x39dba840]
  405162:	xchg   esp,eax
  405163:	iret   
  405164:	sbb    dh,BYTE PTR cs:[ebp-0x21]
  405168:	clc    
  405169:	pop    ecx
  40516a:	loope  0x405123
  40516c:	or     eax,0x73176e54
  405171:	shr    ecx,cl
  405173:	outs   dx,DWORD PTR ds:[esi]
  405174:	xchg   esi,eax
  405175:	pop    eax
  405176:	xchg   ebx,eax
  405177:	dec    eax
  405178:	psrlw  mm7,QWORD PTR [esi]
  40517b:	das    
  40517c:	loop   0x40516c
  40517e:	mov    eax,DWORD PTR [eax-0x18b7397c]
  405184:	dec    ecx
  405185:	add    BYTE PTR [edx+0x3a750bd2],dl
  40518b:	xchg   bl,bl
  40518d:	xchg   edi,eax
  40518e:	sub    cl,bl
  405190:	xor    ebp,ecx
  405192:	(bad)  
  405193:	jge    0x405138
  405195:	push   cs
  405196:	or     eax,0x9dc5c330
  40519b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40519c:	in     al,0x62
  40519e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40519f:	aaa    
  4051a0:	jnp    0x4051e2
  4051a2:	neg    DWORD PTR [edx+0x7d96db0c]
  4051a8:	sbb    al,0xd
  4051aa:	neg    eax
  4051ac:	jb     0x405198
  4051ae:	in     al,dx
  4051af:	test   esp,edx
  4051b1:	cwde   
  4051b2:	(bad)  
  4051b3:	sar    BYTE PTR [edx+0x73],cl
  4051b6:	or     BYTE PTR [ebx+0x375fdcab],bl
  4051bc:	add    BYTE PTR [edi+edi*1+0x6163a462],bh
  4051c3:	cli    
  4051c4:	das    
  4051c5:	in     al,0xc5
  4051c7:	xchg   esp,eax
  4051c8:	sub    esp,edx
  4051ca:	aam    0x33
  4051cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4051cd:	inc    ebp
  4051ce:	xor    ch,BYTE PTR [esi]
  4051d0:	xor    al,0x9a
  4051d2:	push   eax
  4051d3:	mov    fs,WORD PTR [eax-0x32f45453]
  4051d9:	mov    ah,0x24
  4051db:	mov    ds:0xa1075a89,eax
  4051e0:	(bad)  
  4051e1:	in     al,dx
  4051e2:	cwde   
  4051e3:	stc    
  4051e4:	and    DWORD PTR [edx],0xa9f117e
  4051ea:	lods   al,BYTE PTR ds:[esi]
  4051eb:	jns    0x405220
  4051ed:	fisttp QWORD PTR [esi+0x6b]
  4051f0:	test   al,0x42
  4051f2:	xor    DWORD PTR [ebx],edx
  4051f4:	sub    al,0x85
  4051f6:	(bad)  
  4051f7:	lea    eax,[ecx-0x2b218263]
  4051fd:	xor    DWORD PTR [edx-0x40f21c00],ebx
  405203:	or     BYTE PTR [edx+eiz*8+0x5a],dh
  405207:	ins    DWORD PTR es:[edi],dx
  405208:	fs push eax
  40520a:	lahf   
  40520b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40520c:	in     al,0x13
  40520e:	jp     0x4051d1
  405210:	(bad)  
  405211:	pop    esi
  405212:	out    0x2e,eax
  405214:	sub    edi,DWORD PTR ds:[edi]
  405217:	dec    edx
  405218:	mov    ebx,0x73f31671
  40521d:	push   es
  40521e:	repnz xchg ebp,eax
  405220:	push   ecx
  405221:	add    BYTE PTR [ecx+0x4e],bl
  405224:	js     0x4051ef
  405226:	in     al,dx
  405227:	test   eax,0xba0c611d
  40522c:	dec    ebx
  40522d:	test   eax,0xbb2e5e9f
  405232:	or     al,BYTE PTR [edx]
  405234:	rol    BYTE PTR [ebx-0x29],0x26
  405238:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405239:	mov    esi,0x2e1c2ecd
  40523e:	(bad)  
  40523f:	leave  
  405240:	js     0x405256
  405242:	lds    esi,FWORD PTR [esi-0x69]
  405245:	les    edi,FWORD PTR [eax]
  405247:	xchg   ecx,eax
  405248:	repnz xor al,0x89
  40524b:	jmp    0xf1ce654
  405250:	pusha  
  405251:	mov    ?,WORD PTR [ecx-0x4f]
  405254:	mov    gs,WORD PTR [esi]
  405256:	inc    esi
  405257:	push   edi
  405258:	jmp    0x405205
  40525a:	push   cs
  40525b:	jle    0x4052af
  40525d:	add    ebp,DWORD PTR [ebx-0x67]
  405260:	aaa    
  405261:	add    DWORD PTR [eax+0x6399d946],edx
  405267:	loope  0x405224
  405269:	jno    0x40528f
  40526b:	shr    cl,cl
  40526d:	sbb    DWORD PTR [ecx+0x1e0b8f36],edi
  405273:	mov    ah,BYTE PTR [ecx+0x73]
  405276:	mov    cl,0x6e
  405278:	add    al,0x0
  40527a:	mov    edx,0x42bda63e
  40527f:	add    al,cl
  405281:	fcom   DWORD PTR [eax]
  405283:	cmp    BYTE PTR [esi+0x36],ch
  405286:	add    al,cl
  405288:	mov    ecx,DWORD PTR [eax]
  40528a:	push   ebx
  40528b:	nop
  40528c:	test   BYTE PTR [ebp-0x66],0x58
  405290:	shr    DWORD PTR [ecx],0xff
  405293:	cmp    bh,ah
  405295:	test   DWORD PTR [ecx],edx
  405297:	jb     0x405251
  405299:	loope  0x40530f
  40529b:	out    dx,eax
  40529c:	xchg   ebx,eax
  40529d:	fmul   st,st(5)
  40529f:	addr16 das 
  4052a1:	mov    esi,0x109a45a8
  4052a6:	inc    esi
  4052a7:	std    
  4052a8:	es jbe 0x4052ce
  4052ab:	push   ebp
  4052ac:	(bad)  
  4052ad:	data16 jne 0x40527d
  4052b0:	cli    
  4052b1:	add    BYTE PTR [eax],dl
  4052b3:	mov    edi,0xf7feae4f
  4052b8:	repnz enter 0xaa9b,0x18
  4052bd:	icebp  
  4052be:	and    dl,BYTE PTR [edx-0x64]
  4052c1:	xchg   ebp,eax
  4052c2:	inc    edi
  4052c3:	add    BYTE PTR [ecx],ah
  4052c5:	cmp    DWORD PTR [ecx-0x33a26a88],ebp
  4052cb:	mov    eax,DWORD PTR [ecx-0x12]
  4052ce:	push   es
  4052cf:	repz je 0x40525b
  4052d2:	arpl   cx,sp
  4052d4:	aaa    
  4052d5:	lea    ebx,es:[ecx+0x14e8417c]
  4052dc:	scas   eax,DWORD PTR es:[edi]
  4052dd:	js     0x405330
  4052df:	lods   al,BYTE PTR ds:[esi]
  4052e0:	adc    ebx,DWORD PTR [esi]
  4052e2:	xor    al,0x9e
  4052e4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4052e5:	mov    al,0xda
  4052e7:	push   ss
  4052e8:	sbb    dl,dh
  4052ea:	mov    edi,0xc67d0e00
  4052ef:	jmp    0x8ce18ada
  4052f4:	xchg   esp,eax
  4052f5:	nop
  4052f6:	xchg   ebx,eax
  4052f7:	push   cs
  4052f8:	ss js  0x40533b
  4052fb:	imul   edx,DWORD PTR [ebx+0x2516b05],0xdf35e725
  405305:	cs jb  0x4052a1
  405308:	imul   ecx,DWORD PTR [edi-0x40bb0223],0xefdb937
  405312:	pushf  
  405313:	ficomp WORD PTR [eax-0x598ecedc]
  405319:	mov    bl,0xa4
  40531b:	push   ss
  40531c:	add    esi,DWORD PTR [ecx]
  40531e:	(bad)  
  40531f:	sub    eax,0x4979a952
  405324:	das    
  405325:	fwait
  405326:	into   
  405327:	in     eax,0xd9
  405329:	rol    BYTE PTR [edx-0x5c454b7f],cl
  40532f:	xchg   ecx,eax
  405330:	jmp    0x9ce0:0x87f63042
  405337:	pop    ecx
  405338:	push   ecx
  405339:	test   eax,0x342c3e38
  40533e:	add    BYTE PTR [esi],0x75
  405341:	jae    0x405310
  405343:	pusha  
  405344:	rcr    BYTE PTR [ebp+0x7a],1
  405347:	into   
  405348:	(bad)  
  405349:	fst    st(6)
  40534b:	test   al,0x5b
  40534d:	dec    esi
  40534e:	push   cs
  40534f:	inc    ecx
  405350:	add    BYTE PTR [ebp+edi*8-0x3e],bl
  405354:	es mov ecx,0x478915f3
  40535a:	fs mov ecx,0xf0e0e2ee
  405360:	aad    0x73
  405362:	js     0x4053c8
  405364:	mov    cl,0x8e
  405366:	or     dh,bh
  405368:	sbb    eax,0x795be2f8
  40536d:	adc    eax,0x6dbafa01
  405372:	mov    ch,0x92
  405374:	push   ss
  405375:	mov    dl,BYTE PTR [edx-0x70]
  405378:	shl    ebp,0x2c
  40537b:	call   0x6508258d
  405380:	pop    esp
  405381:	ret    0x580
  405384:	stc    
  405385:	sbb    al,0xa4
  405387:	jmp    DWORD PTR [ebx+0x6a]
  40538a:	stc    
  40538b:	pop    esi
  40538c:	out    dx,eax
  40538d:	inc    esp
  40538e:	push   ds
  40538f:	outs   dx,DWORD PTR ds:[esi]
  405390:	and    eax,0xa9df658a
  405395:	and    eax,0x721ec5c2
  40539a:	fdiv   QWORD PTR [edx+esi*4+0x4d]
  40539e:	aaa    
  40539f:	lock pop es
  4053a1:	adc    eax,0x724b3890
  4053a6:	jae    0x4053f2
  4053a8:	add    ch,bl
  4053aa:	or     edx,edx
  4053ac:	push   esp
  4053ad:	mov    edx,0xa2b229ee
  4053b2:	cmp    dl,ah
  4053b4:	push   ds
  4053b5:	add    BYTE PTR [ebp+0x4aa9bfdb],bh
  4053bb:	sar    DWORD PTR [eax],0x25
  4053be:	and    eax,0xed54b566
  4053c3:	in     al,dx
  4053c4:	xor    al,0x0
  4053c6:	dec    edx
  4053c7:	or     cl,BYTE PTR [edi+0x4b]
  4053ca:	mov    ch,0x74
  4053cc:	pop    DWORD PTR [edi]
  4053ce:	xchg   edx,eax
  4053cf:	vpshlb xmm0,[eax],xmm7
  4053d4:	jmp    0xe940e7dc
  4053d9:	add    edx,DWORD PTR [eax+eax*1+0x9403e9]
  4053e0:	jmp    0xe940e7e8
  4053e5:	add    edx,DWORD PTR [eax+eax*1+0x97e900]
  4053ec:	add    cl,ch
  4053ee:	xchg   edi,eax
  4053ef:	add    BYTE PTR [eax],al
  4053f1:	call   0xe840548d
  4053f6:	xchg   edi,eax
  4053f7:	add    BYTE PTR [eax],al
  4053f9:	call   0xe8405495
  4053fe:	xchg   edi,eax
  4053ff:	add    BYTE PTR [eax],al
  405401:	jmp    0x40539a
  405403:	add    BYTE PTR [eax],al
  405405:	jmp    0x40539e
  405407:	add    BYTE PTR [eax],al
  405409:	jmp    0x4053a2
  40540b:	add    BYTE PTR [eax],al
  40540d:	jmp    0x4053a6
  40540f:	add    BYTE PTR [eax],al
  405411:	jmp    0x97:0xea000097
  405418:	add    dl,ch
  40541a:	add    BYTE PTR [edi-0x68160000],dl
  405420:	add    BYTE PTR [eax],al
  405422:	in     eax,dx
  405423:	xchg   edi,eax
  405424:	add    BYTE PTR [eax],al
  405426:	in     eax,0x97
  405428:	add    BYTE PTR [eax],al
  40542a:	in     eax,dx
  40542b:	xchg   edi,eax
  40542c:	add    BYTE PTR [eax],al
  40542e:	in     eax,0x97
  405430:	add    BYTE PTR [eax],al
  405432:	in     al,dx
  405433:	xchg   edi,eax
  405434:	add    BYTE PTR [eax],al
  405436:	in     al,0x97
  405438:	add    BYTE PTR [eax],al
  40543a:	in     al,dx
  40543b:	xchg   edi,eax
  40543c:	add    BYTE PTR [eax],al
  40543e:	in     al,0x97
  405440:	add    BYTE PTR [eax],al
  405442:	jmp    0xd94054de
  405447:	inc    esi
  405448:	bnd jmp eax
  40544b:	cwde   
  40544c:	stc    
  40544d:	add    eax,0x3f792e3
  405452:	cmc    
  405453:	xchg   esp,eax
  405454:	std    
  405455:	add    edi,ebp
  405457:	xchg   esi,eax
  405458:	sti    
  405459:	(bad)  
  40545a:	call   0xe94054f6
  40545f:	xchg   edi,eax
  405460:	add    BYTE PTR [eax],al
  405462:	add    ch,ch
  405464:	(bad)  
  405465:	(bad)  
  405466:	(bad)  
  405467:	in     eax,dx
  405468:	(bad)  
  405469:	(bad)  
  40546a:	(bad)  
  40546b:	cld    
  40546c:	(bad)  
  40546d:	(bad)  
  40546e:	(bad)  
  40546f:	cld    
  405470:	(bad)  
  405471:	(bad)  
  405472:	(bad)  
  405473:	out    dx,eax
  405474:	(bad)  
  405475:	(bad)  
  405476:	(bad)  
  405477:	out    dx,eax
  405478:	(bad)  
  405479:	(bad)  
  40547a:	(bad)  
  40547b:	mov    esi,0xffffff
  405480:	mov    esi,0xb1ffffff
  405485:	(bad)  
  405486:	(bad)  
  405487:	push   DWORD PTR [ecx-0x3f000001]
  40548d:	(bad)  
  40548e:	(bad)  
  40548f:	push   DWORD PTR [eax-0x4c000001]
  405495:	(bad)  
  405496:	(bad)  
  405497:	push   DWORD PTR [ebx-0x7d000001]
  40549d:	(bad)  
  40549e:	(bad)  
  40549f:	push   DWORD PTR [edx-0x1]
  4054a2:	(bad)  
  4054a3:	inc    DWORD PTR [ebp-0x7a000001]
  4054a9:	(bad)  
  4054aa:	(bad)  
  4054ab:	push   DWORD PTR [edi+edi*8-0x1]
  4054af:	push   DWORD PTR [edi+edi*8-0x1]
  4054b3:	jmp    DWORD PTR [edi-0x1]
  4054b6:	(bad)  
  4054b7:	jmp    DWORD PTR [edi-0x1]
  4054ba:	(bad)  
  4054bb:	push   DWORD PTR [esi]
  4054bd:	(bad)  
  4054be:	(bad)  
  4054bf:	push   DWORD PTR [esi]
  4054c1:	(bad)  
  4054c2:	(bad)  
  4054c3:	dec    DWORD PTR [ecx-0x1]
  4054c6:	(bad)  
  4054c7:	jmp    FWORD PTR [ecx]
  4054c9:	(bad)  
  4054ca:	(bad)  
  4054cb:	(bad)  
  4054cc:	cmp    bh,bh
  4054ce:	(bad)  
  4054cf:	dec    DWORD PTR [eax-0x1]
  4054d2:	(bad)  
  4054d3:	jmp    FWORD PTR ds:0x2dffffff
  4054d9:	(bad)  
  4054da:	(bad)  
  4054db:	call   DWORD PTR [ecx+ebx*4-0x666bfffd]
  4054e2:	add    eax,DWORD PTR [eax]
  4054e4:	add    BYTE PTR [ecx+ebx*4-0x666bfffd],dl
  4054eb:	add    eax,DWORD PTR [eax]
  4054ed:	xchg   esp,eax
  4054ee:	cdq    
  4054ef:	add    eax,DWORD PTR [eax]
  4054f1:	xchg   esp,eax
  4054f2:	cdq    
  4054f3:	add    eax,DWORD PTR [eax]
  4054f5:	xchg   esp,eax
  4054f6:	cdq    
  4054f7:	add    eax,DWORD PTR [eax]
  4054f9:	xchg   esp,eax
  4054fa:	cdq    
  4054fb:	add    eax,DWORD PTR [eax]
  4054fd:	xchg   esp,eax
  4054fe:	cdq    
  4054ff:	add    eax,DWORD PTR [eax]
  405501:	xchg   esp,eax
  405502:	cdq    
  405503:	add    eax,DWORD PTR [eax]
  405505:	xchg   esp,eax
  405506:	cdq    
  405507:	add    eax,DWORD PTR [eax]
  405509:	xchg   esp,eax
  40550a:	cdq    
  40550b:	add    eax,DWORD PTR [eax]
  40550d:	xchg   esp,eax
  40550e:	cdq    
  40550f:	add    eax,DWORD PTR [eax]
  405511:	xchg   esp,eax
  405512:	cdq    
  405513:	add    eax,DWORD PTR [eax]
  405515:	xchg   esp,eax
  405516:	xchg   edi,eax
  405517:	add    eax,DWORD PTR [eax]
  405519:	xchg   esp,eax
  40551a:	xchg   esi,eax
  40551b:	add    eax,DWORD PTR [eax]
  40551d:	xchg   esp,eax
  40551e:	call   0x3:0x97940003
  405525:	xchg   esp,eax
  405526:	xchg   ebx,eax
  405527:	add    ecx,DWORD PTR [eax]
  405529:	xchg   esp,eax
  40552a:	sbb    eax,DWORD PTR [eax+ecx*1]
  40552d:	xchg   esp,eax
  40552e:	arpl   WORD PTR [ebx],ax
  405530:	or     BYTE PTR [ebx+ebp*8-0xc6bf7fd],dl
  405537:	add    ecx,DWORD PTR [eax]
  405539:	xchg   esp,eax
  40553a:	jnp    0x40553f
  40553c:	or     BYTE PTR [ebx+eax*2+0x4b940804],dl
  405543:	add    ecx,DWORD PTR [eax]
  405545:	xchg   esp,eax
  405546:	mov    ds:0x94000803,eax
  40554b:	sub    eax,DWORD PTR [ebx]
  40554d:	or     BYTE PTR [ebx+esi*8+0x7b940803],dl
  405554:	add    ecx,DWORD PTR [eax]
  405556:	xchg   esp,eax
  405557:	add    ch,ah
  405559:	add    ecx,DWORD PTR [eax+eax*1+0x9c035d]
  405560:	adc    eax,0x8d009c04
  405565:	add    ecx,DWORD PTR [eax+eax*1+0x8c03eb]
  40556c:	imul   eax,DWORD PTR [ebx],0xffffff9c
  40556f:	add    BYTE PTR [ebx],ch
  405571:	add    al,0x9c
  405573:	add    BYTE PTR [ebx+0xb008c03],ch
  405579:	add    al,0x8c
  40557b:	add    BYTE PTR [ebx-0x34ff63fd],cl
  405581:	add    ebx,DWORD PTR [eax+eax*1+0x8c034b]
  405588:	fild   DWORD PTR [ebx]
  40558a:	mov    WORD PTR [eax],es
  40558c:	pop    ebx
  40558d:	add    ebx,DWORD PTR [eax+eax*1+0x9c039b]
  405594:	sbb    eax,DWORD PTR [ebx]
  405596:	mov    WORD PTR [eax],es
  405598:	fild   DWORD PTR [ebx]
  40559a:	mov    WORD PTR [eax],es
  40559c:	pop    ebx
  40559d:	add    ebx,DWORD PTR [eax+eax*1+0x9c039b]
  4055a4:	sbb    eax,DWORD PTR [ebx]
  4055a6:	mov    WORD PTR [eax],es
  4055a8:	repz add ecx,DWORD PTR [eax+eax*1-0x63fffc8d]
  4055b0:	add    BYTE PTR [ebx+0x23009c03],ah
  4055b6:	add    ecx,DWORD PTR [eax+eax*1+0x8c0413]
  4055bd:	xchg   ebx,eax
  4055be:	add    al,0x9c
  4055c0:	add    BYTE PTR [ebx+0x4],al
  4055c3:	pushf  
  4055c4:	add    bl,al
  4055c6:	add    al,0x8c
  4055c8:	add    bl,ah
  4055ca:	add    ecx,DWORD PTR [eax+eax*1+0x9c0463]
  4055d1:	add    BYTE PTR [ebx],dl
  4055d3:	nop
  4055d4:	clc    
  4055d5:	call   DWORD PTR [edx-0x1d000768]
  4055db:	xchg   edi,eax
  4055dc:	clc    
  4055dd:	jmp    DWORD PTR [edx-0x68]
  4055e0:	clc    
  4055e1:	call   DWORD PTR [edx]
  4055e3:	nop
  4055e4:	clc    
  4055e5:	call   DWORD PTR [edx-0x11000768]
  4055eb:	xchg   edi,eax
  4055ec:	clc    
  4055ed:	jmp    DWORD PTR [esi-0x68]
  4055f0:	clc    
  4055f1:	jmp    FWORD PTR [esi]
  4055f3:	nop
  4055f4:	clc    
  4055f5:	jmp    DWORD PTR [esi+0xefff898]
  4055fb:	nop
  4055fc:	clc    
  4055fd:	inc    DWORD PTR [esi-0x31000768]
  405603:	xchg   edi,eax
  405604:	clc    
  405605:	inc    DWORD PTR [esi-0x68]
  405608:	clc    
  405609:	(bad)  
  40560a:	ficom  WORD PTR [edi-0x67a90008]
  405610:	clc    
  405611:	call   FWORD PTR [esi-0x76900]
  405617:	push   ss
  405618:	cwde   
  405619:	clc    
  40561a:	(bad)  
  40561b:	ficom  WORD PTR [edi-0x67a90008]
  405621:	clc    
  405622:	call   FWORD PTR [esi+0x16fff897]
  405628:	cwde   
  405629:	clc    
  40562a:	push   esi
  40562c:	xchg   edi,eax
  40562d:	clc    
  40562e:	jmp    FWORD PTR [esi-0x68]
  405631:	clc    
  405632:	jmp    DWORD PTR [esi+0x1efff897]
  405638:	cwde   
  405639:	clc    
  40563a:	call   DWORD PTR [esi]
  40563c:	nop
  40563d:	clc    
  40563e:	dec    DWORD PTR [esi+0x46fff897]
  405644:	nop
  405645:	clc    
  405646:	(bad)  
  405647:	mov    esi,0xfffff897
  40564c:	xor    eax,DWORD PTR [eax+ecx*1]
  40564f:	add    bl,dl
  405651:	add    ecx,DWORD PTR [eax]
  405653:	add    BYTE PTR [ebx+0x130007fc],al
  405659:	add    al,0x8
  40565b:	add    BYTE PTR [ebx],dh
  40565d:	add    al,0x8
  40565f:	add    BYTE PTR [ebx+0x3],dh
  405662:	or     BYTE PTR [eax],al
  405664:	mov    ds:0x130007fc,eax
  405669:	add    al,0x8
  40566b:	add    ah,ch
  40566d:	add    ecx,DWORD PTR [eax]
  40566f:	add    BYTE PTR [ebx+eax*1+0x8],bh
  405673:	add    BYTE PTR [esp+edi*8+0x2c000007],bh
  40567a:	add    al,0x8
  40567c:	add    BYTE PTR [esp+edi*8+0x41c0007],cl
  405683:	or     BYTE PTR [eax],al
  405685:	fadd   QWORD PTR [ebx]
  405687:	or     BYTE PTR [eax],al
  405689:	dec    esp
  40568a:	add    ecx,DWORD PTR [eax]
  40568c:	add    ah,bl
  40568e:	add    ecx,DWORD PTR [eax]
  405690:	add    BYTE PTR [ebx+eax*1+0x8],cl
  405694:	add    BYTE PTR [esp+eax*1],cl
  405697:	or     BYTE PTR [eax],al
  405699:	jl     0x40569e
  40569b:	or     BYTE PTR [eax],al
  40569d:	mov    esp,0xec000803
  4056a2:	add    ecx,DWORD PTR [eax]
  4056a4:	add    BYTE PTR [ebx+eax*1],ch
  4056a7:	or     BYTE PTR [eax],al
  4056a9:	pushf  
  4056aa:	add    ecx,DWORD PTR [eax]
  4056ac:	add    BYTE PTR [ebx+eax*1+0x3e40008],al
  4056b3:	or     BYTE PTR [eax],al
  4056b5:	xor    al,0x3
  4056b7:	or     BYTE PTR [eax],al
  4056b9:	mov    ah,0x3
  4056bb:	or     BYTE PTR [eax],al
  4056bd:	test   ah,bh
  4056bf:	pop    es
  4056c0:	add    BYTE PTR [esp+edi*8],ah
  4056c3:	pop    es
  4056c4:	add    BYTE PTR [eax+eax*2-0x3f6bf7fc],dl
  4056cb:	add    al,0x8
  4056cd:	xchg   esp,eax
  4056ce:	mov    al,ds:0x20940803
  4056d3:	add    al,0x8
  4056d5:	xchg   esp,eax
  4056d6:	lock add ecx,DWORD PTR [eax]
  4056d9:	xchg   esp,eax
  4056da:	jo     0x4056e0
  4056dc:	or     BYTE PTR [eax],al
  4056de:	xchg   esp,eax
  4056df:	mov    al,ds:0x20940803
  4056e4:	add    al,0x8
  4056e6:	xchg   esp,eax
  4056e7:	lock add ecx,DWORD PTR [eax]
  4056ea:	xchg   esp,eax
  4056eb:	jo     0x4056f1
  4056ed:	or     BYTE PTR [esp+edx*4+0x1c940803],dl
  4056f4:	add    al,0x8
  4056f6:	xchg   esp,eax
  4056f7:	aam    0x3
  4056f9:	or     BYTE PTR [esp+ebx*2-0xb6bf7fc],dl
  405700:	add    ecx,DWORD PTR [eax]
  405702:	xchg   esp,eax
  405703:	jl     0x405709
  405705:	or     BYTE PTR [esp+esi*4+0x3c940803],dl
  40570c:	add    al,0x8
  40570e:	xchg   esp,eax
  40570f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405710:	add    ecx,DWORD PTR [eax]
  405712:	xchg   esp,eax
  405713:	sub    al,0x4
  405715:	or     BYTE PTR [esp+eiz*2-0x136bf7fd],dl
  40571c:	add    ecx,DWORD PTR [eax]
  40571e:	xchg   esp,eax
  40571f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405720:	add    ecx,DWORD PTR [eax]
  405722:	xchg   esp,eax
  405723:	sub    al,0x4
  405725:	or     BYTE PTR [esp+eiz*2-0x136bf7fd],dl
  40572c:	add    ecx,DWORD PTR [eax]
  40572e:	xchg   esp,eax
  40572f:	mov    WORD PTR [ebx],es
  405731:	or     BYTE PTR [esp+edx*1+0x5c940804],dl
  405738:	add    ecx,DWORD PTR [eax]
  40573a:	xchg   esp,eax
  40573b:	in     al,0x3
  40573d:	or     BYTE PTR [eax+eax*1-0x63fffbec],dl
  405744:	add    BYTE PTR [ebx+eax*1+0x444009c],cl
  40574b:	mov    WORD PTR [eax],es
  40574d:	mov    esp,0xe4008c03
  405752:	add    ebx,DWORD PTR [eax+eax*1+0x9c035c]
  405759:	adc    al,0x4
  40575b:	mov    WORD PTR [eax],es
  40575d:	mov    WORD PTR [ebx],es
  40575f:	mov    WORD PTR [eax],es
  405761:	in     al,0x3
  405763:	pushf  
  405764:	add    BYTE PTR [ebx+eax*1-0x64],bl
  405768:	add    BYTE PTR [esp+eax*1],dl
  40576b:	mov    WORD PTR [eax],es
  40576d:	mov    WORD PTR [ebx],es
  40576f:	mov    WORD PTR [eax],es
  405771:	fiadd  DWORD PTR [ebx]
  405773:	popf   
  405774:	add    dl,bl
  405776:	add    al,0x9d
  405778:	add    BYTE PTR [edx+0x3],bl
  40577b:	lea    eax,[eax]
  40577d:	pop    edx
  40577e:	add    al,0x8d
  405780:	add    BYTE PTR [edx-0x45ff62fd],bh
  405786:	add    al,0x9d
  405788:	add    BYTE PTR [edx],bh
  40578a:	add    ecx,DWORD PTR [ebp-0x72fbc600]
  405790:	add    dl,bh
  405792:	add    ebx,DWORD PTR [ebp-0x62fb0600]
  405798:	add    BYTE PTR [edx+0x3],bh
  40579b:	lea    eax,[eax]
  40579d:	jp     0x4057a3
  40579f:	lea    eax,[eax]
  4057a1:	call   0x4:0x9a009d03
  4057a8:	popf   
  4057a9:	add    BYTE PTR [edx],bl
  4057ab:	add    ecx,DWORD PTR [ebp-0x72fbe600]
  4057b1:	add    dl,dh
  4057b3:	add    ebx,DWORD PTR [ebp-0x62fb0e00]
  4057b9:	add    BYTE PTR [eax],al
  4057bb:	bound  edx,QWORD PTR [edi-0x6f9e0009]
  4057c1:	idiv   edi
  4057c3:	xor    DWORD PTR [eax-0x68ce0009],ebx
  4057c9:	idiv   edi
  4057cb:	mov    eax,ds:0xa1fff798
  4057d0:	xchg   edi,eax
  4057d1:	idiv   edi
  4057d3:	adc    DWORD PTR [eax-0x68ee0009],ebx
  4057d9:	idiv   edi
  4057db:	sbb    DWORD PTR [eax-0x687e0009],0x9811fff7
  4057e5:	idiv   edi
  4057e7:	adc    DWORD PTR [edi-0x677e0009],edx
  4057ed:	idiv   edi
  4057ef:	adc    DWORD PTR [edi-0x681e0009],0x96e1fff7
  4057f9:	idiv   edi
  4057fb:	push   ecx
  4057fc:	cwde   
  4057fd:	idiv   edi
  4057ff:	push   ecx
  405800:	xchg   edi,eax
  405801:	idiv   edi
  405803:	rcl    DWORD PTR [edi-0x693e0009],0xf7
  40580a:	push   DWORD PTR [ecx]
  40580c:	add    BYTE PTR [eax-0x68ce0009],bl
  405812:	idiv   edi
  405814:	add    DWORD PTR [eax-0x68fe0009],ebx
  40581a:	idiv   edi
  40581c:	jno    0x4057b6
  40581e:	idiv   edi
  405820:	jno    0x4057b9
  405822:	idiv   edi
  405824:	mov    eax,ds:0xa1fff997
  405829:	xchg   esi,eax
  40582a:	stc    
  40582b:	call   DWORD PTR [ecx]
  40582d:	cwde   
  40582e:	stc    
  40582f:	call   DWORD PTR [ecx]
  405831:	xchg   edi,eax
  405832:	stc    
  405833:	(bad)  
  405834:	inc    DWORD PTR [edx+0x72000900]
  40583a:	dec    DWORD PTR [eax]
  40583c:	add    dl,dh
  40583e:	cld    
  40583f:	or     BYTE PTR [eax],al
  405841:	repnz dec DWORD PTR [eax]
  405844:	add    BYTE PTR [edx+0x720008fc],al
  40584a:	dec    DWORD PTR [eax]
  40584c:	add    dl,dh
  40584e:	dec    DWORD PTR [eax]
  405850:	add    dl,dh
  405852:	dec    BYTE PTR [eax]
  405854:	add    BYTE PTR [edx-0x6dfff704],ah
  40585a:	dec    DWORD PTR [eax]
  40585c:	add    BYTE PTR [edx],dl
  40585e:	add    BYTE PTR [ecx],cl
  405860:	add    BYTE PTR [edx],dl
  405862:	dec    DWORD PTR [eax]
  405864:	add    BYTE PTR [edx-0x6dfff704],ah
  40586a:	dec    DWORD PTR [eax]
  40586c:	add    BYTE PTR [edx],dl
  40586e:	add    BYTE PTR [ecx],cl
  405870:	add    BYTE PTR [eax],al
  405872:	adc    bh,bh
  405874:	or     BYTE PTR [eax],al
  405876:	sar    bh,cl
  405878:	or     BYTE PTR [eax],al
  40587a:	ret    0x8fe
  40587d:	add    BYTE PTR [edx-0x1],al
  405880:	or     BYTE PTR [eax],al
  405882:	inc    edx
  405883:	dec    BYTE PTR [eax]
  405885:	add    BYTE PTR [edx],dl
  405887:	add    BYTE PTR [ecx],cl
  405889:	add    BYTE PTR [edx],al
  40588b:	dec    DWORD PTR [eax]
  40588d:	add    BYTE PTR [edx-0x7dfff701],al
  405893:	dec    BYTE PTR [eax]
  405895:	add    BYTE PTR [edx-0x5dfff701],dh
  40589b:	dec    BYTE PTR [eax]
  40589d:	add    BYTE PTR [edx],ah
  40589f:	dec    DWORD PTR [eax]
  4058a1:	add    BYTE PTR [edx],ah
  4058a3:	dec    BYTE PTR [eax]
  4058a5:	add    BYTE PTR [edx],dh
  4058a7:	dec    DWORD PTR [eax]
  4058a9:	add    BYTE PTR [edx],ah
  4058ab:	dec    BYTE PTR [eax]
  4058ad:	add    BYTE PTR [edx+eiz*8-0x156bf6fe],dl
  4058b4:	add    DWORD PTR [ecx],ecx
  4058b6:	xchg   esp,eax
  4058b7:	mov    al,BYTE PTR [ebx]
  4058b9:	or     DWORD PTR [edx+edx*4+0x1a940902],edx
  4058c0:	add    ecx,DWORD PTR [ecx]
  4058c2:	xchg   esp,eax
  4058c3:	and    al,BYTE PTR [edx]
  4058c5:	or     DWORD PTR [edx+ecx*8-0x2d6bf6fd],edx
  4058cc:	add    al,0x9
  4058ce:	xchg   esp,eax
  4058cf:	pop    edx
  4058d0:	add    al,0x9
  4058d2:	xchg   esp,eax
  4058d3:	bound  eax,QWORD PTR ds:0xea940009
  4058d9:	add    ecx,DWORD PTR [ecx]
  4058db:	xchg   esp,eax
  4058dc:	repnz add al,0x9
  4058df:	xchg   esp,eax
  4058e0:	jp     0x4058e6
  4058e2:	or     DWORD PTR [edx+eax*1-0x156bf6fb],edx
  4058e9:	add    ecx,DWORD PTR [ecx]
  4058eb:	xchg   esp,eax
  4058ec:	repnz add al,0x9
  4058ef:	xchg   esp,eax
  4058f0:	jp     0x4058f6
  4058f2:	or     DWORD PTR [edx+eax*1-0x656bf6fb],edx
  4058f9:	add    ecx,DWORD PTR [ecx]
  4058fb:	xchg   esp,eax
  4058fc:	mov    ds:0x2a940904,al
  405901:	add    al,0x9
  405903:	xchg   esp,eax
  405904:	xor    al,BYTE PTR ds:0x3ba9409
  40590a:	or     DWORD PTR [edx+eax*2-0x356bf6fc],edx
  405911:	add    ecx,DWORD PTR [ecx]
  405913:	xchg   esp,eax
  405914:	rol    BYTE PTR [ecx+ecx*1],cl
  405917:	xchg   esp,eax
  405918:	cli    
  405919:	add    ecx,DWORD PTR [ecx]
  40591b:	xchg   esp,eax
  40591c:	add    BYTE PTR [ecx+ecx*1],0x94
  405920:	or     al,BYTE PTR [ecx+ecx*1]
  405923:	xchg   esp,eax
  405924:	adc    al,BYTE PTR ds:0xa6009409
  40592a:	add    ebx,DWORD PTR [ebp-0x72fb6200]
  405930:	add    BYTE PTR [esi],dl
  405932:	add    al,0x8d
  405934:	add    BYTE PTR [esi],cl
  405936:	add    eax,0x3e9009d
  40593b:	add    BYTE PTR [ebx-0x64fc5700],dl
  405941:	add    cl,cl
  405943:	add    edx,DWORD PTR [ebx-0x64fc7700]
  405949:	add    cl,bh
  40594b:	add    edx,DWORD PTR [ebx-0x64fbc700]
  405951:	add    BYTE PTR [ecx],bl
  405953:	add    al,0x93
  405955:	add    BYTE PTR [ecx+0x4],bl
  405958:	fwait
  405959:	add    cl,dh
  40595b:	add    edx,DWORD PTR [ebx-0x64fbcf00]
  405961:	add    BYTE PTR [ecx],al
  405963:	add    al,0x93
  405965:	add    BYTE PTR [ecx+0x4],al
  405968:	fwait
  405969:	add    BYTE PTR [ecx],al
  40596b:	add    al,0x93
  40596d:	add    BYTE PTR [ecx+0x4],al
  405970:	fwait
  405971:	add    cl,dl
  405973:	add    edx,DWORD PTR [ebx-0x64fbef00]
  405979:	add    ch,ch
  40597b:	add    edx,DWORD PTR [ebx-0x64fbdb00]
  405981:	add    ch,cl
  405983:	add    edx,DWORD PTR [ebx-0x64fbfb00]
  405989:	add    ch,bh
  40598b:	add    edx,DWORD PTR [ebx-0x64fc4b00]
  405991:	add    BYTE PTR ds:0xd5009304,bl
  405997:	add    ebx,DWORD PTR [ebx-0x63fc1600]
  40599d:	add    BYTE PTR [edx+0x3],ch
  4059a0:	add    BYTE PTR [eax+eax*1-0x7685600],cl
  4059a7:	jmp    FWORD PTR [ecx]
  4059a9:	xchg   edi,eax
  4059aa:	clc    
  4059ab:	dec    ecx
  4059ad:	xchg   edi,eax
  4059ae:	clc    
  4059af:	dec    DWORD PTR [ecx-0x69]
  4059b2:	clc    
  4059b3:	dec    DWORD PTR [ecx+0x9fff897]
  4059b9:	xchg   edi,eax
  4059ba:	clc    
  4059bb:	(bad)  
  4059bc:	call   0xd9405558
  4059c1:	xchg   edi,eax
  4059c2:	sti    
  4059c3:	jmp    eax
  4059c5:	xchg   edi,eax
  4059c6:	sti    
  4059c7:	call   eax
  4059c9:	xchg   edi,eax
  4059ca:	sti    
  4059cb:	(bad)  
  4059cc:	in     al,dx
  4059cd:	xchg   edi,eax
  4059ce:	sti    
  4059cf:	push   esp
  4059d1:	xchg   edi,eax
  4059d2:	sti    
  4059d3:	jmp    esp
  4059d5:	xchg   edi,eax
  4059d6:	sti    
  4059d7:	(bad)  
  4059d8:	in     al,dx
  4059d9:	xchg   edi,eax
  4059da:	sti    
  4059db:	(bad)  
  4059dc:	jmp    0xfb97:0xdafffb97
  4059e3:	jmp    edx
  4059e5:	xchg   edi,eax
  4059e6:	sti    
  4059e7:	call   edx
  4059e9:	xchg   edi,eax
  4059ea:	sti    
  4059eb:	(bad)  
  4059ec:	out    dx,al
  4059ed:	xchg   edi,eax
  4059ee:	sti    
  4059ef:	push   esi
  4059f1:	xchg   edi,eax
  4059f2:	sti    
  4059f3:	jmp    esi
  4059f5:	xchg   edi,eax
  4059f6:	sti    
  4059f7:	(bad)  
  4059f8:	out    dx,al
  4059f9:	xchg   edi,eax
  4059fa:	sti    
  4059fb:	jmp    edi
  4059fd:	xchg   edi,eax
  4059fe:	sti    
  4059ff:	call   edi
  405a01:	xchg   edi,eax
  405a02:	sti    
  405a03:	(bad)  
  405a04:	fild   WORD PTR [eax]
  405a06:	xchg   edi,eax
  405a07:	sti    
  405a08:	dec    edi
  405a0a:	xchg   edi,eax
  405a0b:	sti    
  405a0c:	(bad)  
  405a0d:	jmp    0x4059a6
  405a0f:	sti    
  405a10:	push   ebx
  405a12:	xchg   edi,eax
  405a13:	sti    
  405a14:	jmp    ebx
  405a16:	xchg   edi,eax
  405a17:	sti    
  405a18:	(bad)  
  405a19:	jmp    0x4059b2
  405a1b:	sti    
  405a1c:	(bad)  
  405a1d:	(bad)  
  405a1e:	mov    esi,0xbe0004fc
  405a23:	cld    
  405a24:	add    al,0x0
  405a26:	mov    dh,0xfc
  405a28:	add    al,0x0
  405a2a:	data16 add al,0x5
  405a2d:	add    BYTE PTR [edx+0x4],bh
  405a30:	add    eax,0x5048a00
  405a35:	add    BYTE PTR [ebp+0x3],ch
  405a38:	add    al,BYTE PTR [ebx]
  405a3a:	jns    0x405a44
  405a3c:	add    eax,0x60a7b05
  405a41:	push   es
  405a42:	jp     0x405a4d
  405a44:	pop    es
  405a45:	pop    es
  405a46:	jne    0x405a54
  405a48:	or     BYTE PTR [eax],cl
  405a4a:	xor    eax,0x4408080c
  405a4f:	or     ecx,DWORD PTR [ecx]
  405a51:	or     DWORD PTR [ebx+ecx*1+0x9],eax
  405a55:	or     DWORD PTR [edi],esi
  405a57:	push   cs
  405a58:	or     cl,BYTE PTR [edx]
  405a5a:	aaa    
  405a5b:	push   cs
  405a5c:	or     cl,BYTE PTR [edx]
  405a5e:	daa    
  405a5f:	push   cs
  405a60:	or     cl,BYTE PTR [edx]
  405a62:	daa    
  405a63:	push   cs
  405a64:	or     cl,BYTE PTR [edx]
  405a66:	ss or  eax,0xf6000b0b
  405a6c:	or     al,0xb
  405a6e:	or     eax,DWORD PTR [esi]
  405a70:	or     eax,0xd060b0b
  405a75:	or     ecx,DWORD PTR [ebx]
  405a77:	icebp  
  405a78:	(bad)  
  405a7a:	or     al,0xd1
  405a7c:	(bad)  
  405a7e:	or     al,0xe1
  405a80:	(bad)  
  405a82:	or     al,0xf1
  405a84:	(bad)  
  405a86:	or     al,0xf1
  405a88:	(bad)  
  405a8a:	or     al,0xf1
  405a8c:	(bad)  
  405a8e:	or     al,0xc1
  405a90:	(bad)  
  405a92:	or     al,0xb1
  405a94:	(bad)  
  405a96:	or     al,0x94
  405a98:	fs push cs
  405a9a:	or     eax,0xd0e5ca1
  405a9f:	cdq    
  405aa0:	je     0x405ab0
  405aa2:	or     eax,0xd0e6c91
  405aa7:	mov    DWORD PTR [esi+ecx*1+0xd],esp
  405aab:	mov    eax,ds:0x990d0e5c
  405ab0:	je     0x405ac0
  405ab2:	or     eax,0xd0e6c91
  405ab7:	mov    DWORD PTR [edi+0x11],esp
  405aba:	push   cs
  405abb:	mov    ds:0x9a0e115f,al
  405ac0:	ja     0x405ad3
  405ac2:	push   cs
  405ac3:	xchg   edx,eax
  405ac4:	outs   dx,DWORD PTR ds:[esi]
  405ac5:	adc    DWORD PTR [esi],ecx
  405ac7:	mov    ah,BYTE PTR [edi+0x11]
  405aca:	push   cs
  405acb:	mov    ds:0xe115f,al
  405ad0:	call   0xd6f:0x920e0d77
  405ad7:	push   cs
  405ad8:	mov    ah,BYTE PTR [edi+0xd]
  405adb:	push   cs
  405adc:	mov    ds:0x9a0e0d5f,al
  405ae1:	ja     0x405af0
  405ae3:	push   cs
  405ae4:	xchg   edx,eax
  405ae5:	outs   dx,DWORD PTR ds:[esi]
  405ae6:	or     eax,0xd678a0e
  405aeb:	push   cs
  405aec:	mov    ds:0x9a0e0d5f,al
  405af1:	ja     0x405b00
  405af3:	push   cs
  405af4:	xchg   edx,eax
  405af5:	outs   dx,DWORD PTR ds:[esi]
  405af6:	or     eax,0xe668a0e
  405afb:	bt     DWORD PTR [esi+0xe],ebx
  405aff:	setnp  BYTE PTR [esi+0xe]
  405b03:	setae  BYTE PTR [esi+0xe]
  405b07:	jnp    0xa34f6973
  405b0d:	pop    esi
  405b0e:	push   cs
  405b0f:	setnp  BYTE PTR [eax]
  405b12:	test   BYTE PTR [esi],0x93
  405b15:	pmaxsw mm1,QWORD PTR [esi]
  405b18:	mov    ecx,DWORD PTR [edi]
  405b1a:	out    0xe,al
  405b1c:	mov    ds:0x9b0ede0f,eax
  405b21:	psadbw mm1,QWORD PTR [esi]
  405b24:	xchg   ebx,eax
  405b25:	pmaxsw mm1,QWORD PTR [esi]
  405b28:	mov    ecx,DWORD PTR [edi]
  405b2a:	out    0xe,al
  405b2c:	mov    ds:0x9b0ede0d,eax
  405b31:	or     eax,0x93000ef6
  405b36:	or     eax,0xd8b0eee
  405b3b:	jmp    0xfb4fdf43
  405b40:	adc    DWORD PTR [edi-0x77e822ef],eax
  405b46:	adc    al,0xd4
  405b48:	sbb    BYTE PTR [ecx-0x55ea20ed],al
  405b4e:	push   ss
  405b4f:	xlat   BYTE PTR ds:[ebx]
  405b50:	adc    eax,0x16fe16a2
  405b55:	stos   DWORD PTR es:[edi],eax
  405b56:	adc    eax,0x15a316f6
  405b5b:	icebp  
  405b5c:	sbb    ecx,DWORD PTR [eax+ebx*1+0x188c1bf1]
  405b63:	loope  0x405b80
  405b65:	jl     0x405b7f
  405b67:	loope  0x405b84
  405b69:	jl     0x405b83
  405b6b:	rcr    BYTE PTR [ebp*4-0x52e32fe9],1
  405b72:	pop    ss
  405b73:	add    BYTE PTR ds:0x1d00179d,bl
  405b79:	popf   
  405b7a:	pop    ss
  405b7b:	repz sbb DWORD PTR [esi-0x71e60ce6],ecx
  405b82:	sbb    ah,bl
  405b84:	sbb    DWORD PTR [esi+0x1a],edi
  405b87:	jecxz  0x405ba2
  405b89:	jle    0x405ba5
  405b8b:	add    bl,dl
  405b8d:	lods   eax,DWORD PTR ds:[esi]
  405b8e:	sbb    bl,BYTE PTR [edx]
  405b90:	shr    DWORD PTR [ebp-0x61fce5e6],cl
  405b96:	sbb    bl,BYTE PTR [edx]
  405b98:	add    eax,DWORD PTR [eax]
  405b9a:	sahf   
  405b9b:	sbb    bl,BYTE PTR [edx]
  405b9d:	repnz mov ds,WORD PTR [ecx]
  405ba0:	sbb    esi,edx
  405ba2:	mov    ds,WORD PTR [ecx]
  405ba4:	sbb    esp,edx
  405ba6:	jle    0x405bc1
  405ba8:	sbb    esp,edx
  405baa:	jle    0x405bc5
  405bac:	sbb    edx,edx
  405bae:	scas   al,BYTE PTR es:[edi]
  405baf:	sbb    DWORD PTR [ebx],ebx
  405bb1:	shr    BYTE PTR [esi-0x60fde4e7],cl
  405bb7:	sbb    DWORD PTR [ebx],ebx
  405bb9:	add    bl,BYTE PTR [edi-0x6c0ae4e7]
  405bbf:	sbb    al,0x1c
  405bc1:	in     eax,dx
  405bc2:	mov    ebx,DWORD PTR [esp+ebx*1]
  405bc5:	in     eax,0x83
  405bc7:	sbb    al,0x1c
  405bc9:	fnstsw WORD PTR [ebx+0x1c]
  405bcc:	sbb    al,0xd5
  405bce:	mov    bl,0x1c
  405bd0:	sbb    al,0xcd
  405bd2:	stos   DWORD PTR es:[edi],eax
  405bd3:	sbb    al,0x1c
  405bd5:	add    eax,0xfd1c1c74
  405bda:	fwait
  405bdb:	sbb    al,0x1c
  405bdd:	cmc    
  405bde:	xchg   ebx,eax
  405bdf:	sbb    al,0x1c
  405be1:	in     eax,dx
  405be2:	mov    ebx,DWORD PTR [esp+ebx*1]
  405be5:	in     eax,0x83
  405be7:	sbb    al,0x1c
  405be9:	fnstsw WORD PTR [ebx+0x1c]
  405bec:	sbb    al,0xd5
  405bee:	mov    bl,0x1c
  405bf0:	sbb    al,0xcd
  405bf2:	stos   DWORD PTR es:[edi],eax
  405bf3:	sbb    al,0x1c
  405bf5:	add    eax,0xfd1c1cb4
  405bfa:	fwait
  405bfb:	sbb    al,0x1c
  405bfd:	hlt    
  405bfe:	add    BYTE PTR [edx-0x7513e2e5],dl
  405c04:	sbb    ebx,DWORD PTR ds:0x1d1df800
  405c0a:	sbb    eax,0x1d1d1db8
  405c0f:	call   0xd85d7931
  405c14:	sbb    eax,0x1d981d1d
  405c19:	sbb    eax,0x1d1db81d
  405c1e:	sbb    eax,0x1d1d1da8
  405c23:	mov    eax,0xb81d1d1d
  405c28:	sbb    eax,0x1db81d1d
  405c2d:	sbb    eax,0x1d1b681d
  405c32:	sbb    eax,0x1d1d1b58
  405c37:	cwde   
  405c38:	sbb    ebx,DWORD PTR ds:0x1d1b781d
  405c3e:	sbb    eax,0x301ff7d
  405c43:	jno    0x405c48
  405c45:	push   es
  405c46:	pop    es
  405c47:	or     BYTE PTR gs:[ecx],cl
  405c4a:	or     DWORD PTR [edi+0xa],esp
  405c4d:	or     ecx,DWORD PTR [ebx]
  405c4f:	cmp    DWORD PTR [esp+ecx*1],ecx
  405c52:	or     al,0x68
  405c54:	or     ecx,DWORD PTR ds:0xe0e4b0d
  405c5a:	push   cs
  405c5b:	sub    cl,BYTE PTR ds:0x102d0f0f
  405c61:	adc    BYTE PTR [eax],dl
  405c63:	add    BYTE PTR ds:0x3c101010,ch
  405c69:	movups XMMWORD PTR [ecx],xmm2
  405c6c:	cmp    al,0xf
  405c6e:	adc    DWORD PTR [ecx],edx
  405c70:	out    dx,eax
  405c71:	adc    DWORD PTR [edx],edx
  405c73:	adc    ch,bh
  405c75:	adc    DWORD PTR [edx],edx
  405c77:	adc    bh,dh
  405c79:	adc    BYTE PTR [ebx],dl
  405c7b:	adc    edi,esi
  405c7d:	adc    BYTE PTR [ebx],dl
  405c7f:	adc    edx,DWORD PTR [ebp+edi*2+0x75801417]
  405c86:	pop    ss
  405c87:	adc    al,0x88
  405c89:	pop    ebp
  405c8a:	pop    ss
  405c8b:	adc    al,0x80
  405c8d:	push   ebp
  405c8e:	pop    ss
  405c8f:	adc    al,0xa8
  405c91:	pop    esp
  405c92:	push   ss
  405c93:	adc    eax,0x151654a1
  405c98:	test   eax,0xa115167c
  405c9d:	je     0x405cb5
  405c9f:	adc    eax,0x16157b89
  405ca4:	xor    BYTE PTR [ebx+0x15],0x16
  405ca8:	mov    bl,BYTE PTR [ebx+0x15]
  405cab:	push   ss
  405cac:	adc    BYTE PTR [ebx+0x15],0x16
  405cb0:	stos   BYTE PTR es:[edi],al
  405cb1:	pop    edx
  405cb2:	adc    al,0x17
  405cb4:	mov    ds:0xab171452,eax
  405cb9:	jp     0x405ccf
  405cbb:	pop    ss
  405cbc:	mov    ds:0x8b171472,eax
  405cc1:	jno    0x405cde
  405cc3:	sbb    BYTE PTR [ecx+esi*2+0x7c00181b],cl
  405cca:	popa   
  405ccb:	sbb    ebx,DWORD PTR [eax]
  405ccd:	jl     0x405d30
  405ccf:	sbb    ebx,DWORD PTR [eax]
  405cd1:	lods   al,BYTE PTR ds:[esi]
  405cd2:	push   ecx
  405cd3:	sbb    ebx,DWORD PTR [eax]
  405cd5:	lods   al,BYTE PTR ds:[esi]
  405cd6:	push   ecx
  405cd7:	sbb    ebx,DWORD PTR [eax]
  405cd9:	pushf  
  405cda:	add    DWORD PTR [eax+ebx*1],ebx
  405cdd:	pushf  
  405cde:	add    DWORD PTR [eax+ebx*1],ebx
  405ce1:	mov    WORD PTR [eax+0x1c],?
  405ce4:	sbb    DWORD PTR [ebp+0x7d191c70],ecx
  405cea:	pusha  
  405ceb:	sbb    al,0x19
  405ced:	jge    0x405d4f
  405cef:	sbb    al,0x19
  405cf1:	lods   eax,DWORD PTR ds:[esi]
  405cf2:	push   eax
  405cf3:	sbb    al,0x19
  405cf5:	lods   eax,DWORD PTR ds:[esi]
  405cf6:	push   eax
  405cf7:	sbb    al,0x19
  405cf9:	popf   
  405cfa:	add    BYTE PTR [eax],al
  405cfc:	sbb    eax,0x1d00199d
  405d01:	lea    ebx,[ecx]
  405d03:	repz sbb eax,0x1df3168e
  405d09:	jle    0x405d21
  405d0b:	jecxz  0x405d2a
  405d0d:	jle    0x405d25
  405d0f:	jecxz  0x405d2e
  405d11:	scas   al,BYTE PTR es:[edi]
  405d12:	push   ss
  405d13:	rcr    DWORD PTR ds:0x1dd316ae,cl
  405d19:	sahf   
  405d1a:	push   ss
  405d1b:	add    ebx,DWORD PTR [esi]
  405d1d:	sahf   
  405d1e:	push   ss
  405d1f:	add    ebx,DWORD PTR [esi]
  405d21:	mov    ss,WORD PTR [esi]
  405d23:	repnz push ds
  405d25:	(bad)  
  405d26:	pop    ss
  405d27:	repnz push ds
  405d29:	jg     0x405d42
  405d2b:	loop   0x405d4b
  405d2d:	add    BYTE PTR [edi+0x17],bh
  405d30:	loop   0x405d50
  405d32:	scas   eax,DWORD PTR es:[edi]
  405d33:	adc    eax,0x15af1ed2
  405d38:	rcr    BYTE PTR [esi],cl
  405d3a:	lahf   
  405d3b:	adc    eax,0x159f1f02
  405d40:	add    bl,BYTE PTR [edi]
  405d42:	(bad)  
  405d43:	sbb    al,0xe9
  405d45:	add    edx,DWORD PTR [eax+eax*1+0x9403e8]
  405d4c:	jmp    0x405d51
  405d4e:	xchg   esp,eax
  405d4f:	add    dl,ch
  405d51:	add    edx,DWORD PTR [eax+eax*1+0x9403ed]
  405d58:	in     al,0x3
  405d5a:	xchg   esp,eax
  405d5b:	add    bh,ch
  405d5d:	add    edx,DWORD PTR [eax+eax*1+0x9403e6]
  405d64:	loope  0x405d69
  405d66:	xchg   esp,eax
  405d67:	add    bl,ah
  405d69:	add    edx,DWORD PTR [eax+eax*1+0x9403f5]
  405d70:	out    dx,eax
  405d71:	add    edx,DWORD PTR [eax+eax*1+0x97d900]
  405d78:	add    ch,dl
  405d7a:	xchg   edi,eax
  405d7b:	add    BYTE PTR [eax],al
  405d7d:	add    DWORD PTR [eax-0x68030000],edx
  405d83:	add    BYTE PTR [eax],al
  405d85:	leave  
  405d86:	xchg   edi,eax
  405d87:	add    BYTE PTR [eax],al
  405d89:	rcl    DWORD PTR [edi-0x68470000],0x0
  405d90:	add    cl,al
  405d92:	add    BYTE PTR [edi-0x6fd70000],dl
  405d98:	add    BYTE PTR [eax],al
  405d9a:	sbb    DWORD PTR [eax-0x68370000],ebx
  405da0:	add    BYTE PTR [eax],al
  405da2:	fst    DWORD PTR [edi-0x68970000]
  405da8:	add    BYTE PTR [eax],al
  405daa:	mov    DWORD PTR [edi-0x68d70000],edx
  405db0:	add    BYTE PTR [eax],al
  405db2:	dec    ecx
  405db3:	xchg   edi,eax
  405db4:	add    BYTE PTR [eax],al
  405db6:	jmp    0xe9405e52
  405dbb:	xchg   edi,eax
  405dbc:	add    BYTE PTR [eax],al
  405dbe:	jmp    0xe8405e5a
  405dc3:	xchg   edi,eax
  405dc4:	add    BYTE PTR [eax],al
  405dc6:	jmp    0x405d5f
  405dc8:	add    BYTE PTR [eax],al
  405dca:	jmp    0x97:0xed000097
  405dd1:	add    bh,ah
  405dd3:	xchg   edi,eax
  405dd4:	add    BYTE PTR [eax],al
  405dd6:	loope  0x405d6f
  405dd8:	add    BYTE PTR [eax],al
  405dda:	fst    QWORD PTR [edi-0x68070000]
  405de0:	add    BYTE PTR [eax],al
  405de2:	add    DWORD PTR [eax-0x6ff70000],ebx
  405de8:	add    BYTE PTR [eax],al
  405dea:	sbb    DWORD PTR [eax+0x6d000000],ebx
  405df0:	add    al,0x0
  405df2:	add    BYTE PTR [ebp+0x4],bl
  405df5:	add    BYTE PTR [eax],al
  405df7:	add    BYTE PTR [ebp+0x4],bh
  405dfa:	add    BYTE PTR [eax],al
  405dfc:	sub    eax,0xed000004
  405e01:	std    
  405e02:	(bad)  
  405e03:	(bad)  
  405e04:	jge    0x405e03
  405e06:	(bad)  
  405e07:	(bad)  
  405e08:	std    
  405e09:	add    al,BYTE PTR [eax]
  405e0b:	add    ch,ch
  405e0d:	add    eax,DWORD PTR [eax]
  405e0f:	add    ch,ch
  405e11:	js     0x405e12
  405e13:	(bad)  
  405e14:	mov    ebp,0xbdfffffe
  405e19:	add    al,0x0
  405e1b:	add    BYTE PTR [ebp-0x53000000],ch
  405e21:	or     al,0x0
  405e23:	add    BYTE PTR [ebp-0x42ffffec],bh
  405e29:	sbb    al,0x0
  405e2b:	add    BYTE PTR [ebp-0x52ffffd4],ch
  405e31:	cmp    al,0xff
  405e33:	(bad)  
  405e34:	jge    0x405e9a
  405e36:	(bad)  
  405e37:	(bad)  
  405e38:	cmp    DWORD PTR [edi+0x3f],esp
  405e3b:	add    BYTE PTR [ecx],bh
  405e3d:	addr16 aas 
  405e3f:	add    BYTE PTR [ecx],ch
  405e41:	addr16 aas 
  405e43:	add    BYTE PTR [ecx],bh
  405e45:	addr16 aas 
  405e47:	add    BYTE PTR [ecx],bh
  405e49:	addr16 aas 
  405e4b:	add    BYTE PTR [ecx],bh
  405e4d:	addr16 aas 
  405e4f:	add    BYTE PTR [ecx],ch
  405e51:	addr16 aas 
  405e53:	add    cl,bh
  405e55:	data16 aas 
  405e57:	add    cl,bh
  405e59:	data16 aas 
  405e5b:	add    BYTE PTR [eax],al
  405e5d:	stc    
  405e5e:	data16 aas 
  405e60:	add    BYTE PTR [esi],ch
  405e62:	add    al,0x4
  405e64:	add    BYTE PTR [eax],bh
  405e66:	add    al,0x6
  405e68:	add    BYTE PTR [esi+eiz*2+0x60940803],dl
  405e6f:	add    ecx,DWORD PTR [edx]
  405e71:	xchg   esp,eax
  405e72:	jb     0x405e77
  405e74:	or     eax,0x11036694
  405e79:	xchg   esp,eax
  405e7a:	pop    edx
  405e7b:	add    edx,DWORD PTR [edi]
  405e7d:	xchg   esp,eax
  405e7e:	push   edx
  405e7f:	add    ebx,DWORD PTR [edi]
  405e81:	xchg   esp,eax
  405e82:	dec    edx
  405e83:	add    ebp,DWORD PTR [ebx]
  405e85:	xchg   esp,eax
  405e86:	pop    edx
  405e87:	add    edi,DWORD PTR [ebx]
  405e89:	xchg   esp,eax
  405e8a:	sub    al,BYTE PTR [ebx+edx*2]
  405e8d:	xchg   esp,eax
  405e8e:	or     al,BYTE PTR [ebx+esi*2]
  405e91:	xchg   esp,eax
  405e92:	jmp    0xe303:0xaa94a302
  405e99:	xchg   esp,eax
  405e9a:	imul   eax,DWORD PTR [edx],0x0
  405e9d:	xchg   esp,eax
  405e9e:	imul   eax,DWORD PTR [ebx],0x3799400
  405ea4:	adc    BYTE PTR [ecx+edi*2+0x79941003],dl
  405eab:	add    edx,DWORD PTR [eax]
  405ead:	xchg   esp,eax
  405eae:	jns    0x405eb3
  405eb0:	adc    BYTE PTR [eax+ebx*2+0x58941103],dl
  405eb7:	add    edx,DWORD PTR [ecx]
  405eb9:	xchg   esp,eax
  405eba:	pop    ebx
  405ebb:	add    edx,DWORD PTR [edx]
  405ebd:	xchg   esp,eax
  405ebe:	pop    ebx
  405ebf:	add    edx,DWORD PTR [edx]
  405ec1:	add    BYTE PTR [edx+edi*2+0x7a941303],dl
  405ec8:	add    edx,DWORD PTR [ebx]
  405eca:	xchg   esp,eax
  405ecb:	jne    0x405ed0
  405ecd:	adc    al,0x94
  405ecf:	ins    DWORD PTR es:[edi],dx
  405ed0:	add    edx,DWORD PTR [esp+edx*4]
  405ed3:	push   esp
  405ed4:	add    edx,DWORD PTR ds:0x15034c94
  405eda:	xchg   esp,eax
  405edb:	pop    ecx
  405edc:	add    ecx,DWORD PTR [ecx-0x6c]
  405edf:	sub    al,BYTE PTR [ebx]
  405ee1:	add    BYTE PTR [eax+eax*1+0x9603e8],dl
  405ee8:	jmp    0x9b03:0xec009003
  405eef:	add    al,ah
  405ef1:	add    ecx,DWORD PTR [ecx-0x52fc2800]
  405ef7:	add    BYTE PTR [eax],cl
  405ef9:	add    al,0xc5
  405efb:	add    BYTE PTR [eax],ch
  405efd:	add    al,0x75
  405eff:	add    BYTE PTR [eax+0x4],ch
  405f02:	aad    0xff
  405f04:	out    0x4,eax
  405f06:	adc    eax,0x9501e801
  405f0b:	add    ebp,eax
  405f0d:	call   DWORD PTR [esi+edi*8+0x4950be7]
  405f14:	call   0xe858f42c
  405f19:	and    edx,DWORD PTR [ebp-0x6b3c17d0]
  405f1f:	loopne 0x405f09
  405f21:	add    edx,DWORD PTR [eax+eax*1-0x7bfffc07]
  405f28:	add    cl,bh
  405f2a:	add    eax,DWORD PTR [eax+eax*1+0x8503f8]
  405f31:	sti    
  405f32:	add    eax,DWORD PTR [esi-0x58fc2600]
  405f38:	add    ch,dl
  405f3a:	add    esp,DWORD PTR [eax-0x56fc2400]
  405f40:	add    bh,dl
  405f42:	add    esp,DWORD PTR [edx-0x74fc0200]
  405f48:	add    BYTE PTR [ecx],al
  405f4a:	add    al,0x8c
  405f4c:	add    al,dh
  405f4e:	add    edi,DWORD PTR [ebp+0x0]
  405f51:	repz add edi,DWORD PTR [esi+0x0]
  405f55:	loop   0x405f5a
  405f57:	scas   eax,DWORD PTR es:[edi]
  405f58:	add    ch,bl
  405f5a:	add    ebp,DWORD PTR [eax-0x682c0000]
  405f60:	adc    eax,DWORD PTR [eax]
  405f62:	test   eax,0x8ffc097
  405f67:	add    eax,0x1b18ffc1
  405f6c:	sar    edi,0x64
  405f6f:	or     ecx,eax
  405f71:	(bad)  
  405f72:	cmp    ecx,DWORD PTR [ebx]
  405f74:	sar    edi,0x19
  405f77:	sub    al,0xc1
  405f79:	(bad)  
  405f7a:	call   0x88406016
  405f7f:	cwde   
  405f80:	cld    
  405f81:	add    BYTE PTR [ebx+0x4a025890],cl
  405f87:	cwde   
  405f88:	mov    edi,0x90004400
  405f8d:	xor    eax,DWORD PTR [ecx]
  405f8f:	dec    edi
  405f90:	cwde   
  405f91:	fiadd  DWORD PTR [eax]
  405f93:	inc    eax
  405f94:	nop
  405f95:	loopne 0x405f97
  405f97:	push   ebx
  405f98:	cwde   
  405f99:	(bad)  
  405f9a:	add    BYTE PTR [edx-0x70],dl
  405f9d:	fadd   QWORD PTR [eax]
  405f9f:	inc    ebp
  405fa0:	cwde   
  405fa1:	test   DWORD PTR [eax],0xf3903f
  405fa7:	xchg   esi,eax
  405fa8:	cwde   
  405fa9:	stc    
  405faa:	add    BYTE PTR [eax-0x64ff0470],bl
  405fb0:	cwde   
  405fb1:	pop    ecx
  405fb2:	add    bl,BYTE PTR [edx+0x7c00c290]
  405fb8:	cwde   
  405fb9:	add    DWORD PTR ss:[edi-0x70],esi
  405fbd:	fld    DWORD PTR [eax]
  405fbf:	jle    0x405f59
  405fc1:	cmp    eax,0xdf907002
  405fc6:	add    BYTE PTR [ebx-0x68],ah
  405fc9:	aad    0x0
  405fcb:	bound  edx,QWORD PTR [eax-0x67aaff25]
  405fd1:	cli    
  405fd2:	add    BYTE PTR [eax+edx*4+0x53],cl
  405fd6:	add    al,BYTE PTR [eax]
  405fd8:	(bad)  
  405fda:	jge    0x405fdd
  405fdc:	mov    bh,ah
  405fde:	jnp    0x405fe1
  405fe0:	ins    DWORD PTR es:[edi],dx
  405fe1:	cld    
  405fe2:	push   ebx
  405fe3:	add    DWORD PTR [esi-0x4],ebp
  405fe6:	add    DWORD PTR [ecx],eax
  405fe8:	add    BYTE PTR [ecx],al
  405fea:	cmp    DWORD PTR [ecx],eax
  405fec:	repz add BYTE PTR [esi],al
  405fef:	add    DWORD PTR [eax],eax
  405ff1:	cmc    
  405ff2:	add    BYTE PTR [ecx+eax*1],cl
  405ff5:	test   DWORD PTR [eax],0x1490118
  405ffb:	sbb    al,BYTE PTR [ecx]
  405ffd:	cmp    al,BYTE PTR [ecx]
  405fff:	push   cs
  406000:	add    DWORD PTR ds:0x1c011001,ebx
  406006:	add    DWORD PTR [ebx+0x1],eax
  406009:	das    
  40600a:	add    DWORD PTR [edi+0x1],eax
  40600d:	and    BYTE PTR [ecx],al
  40600f:	push   eax
  406010:	add    DWORD PTR ds:0x24015801,esp
  406016:	add    DWORD PTR [esi+0x1],ebp
  406019:	test   BYTE PTR [eax],0x70
  40601c:	add    DWORD PTR [ebx],ebp
  40601e:	add    DWORD PTR [edx+0x1],esp
  406021:	or     eax,0xe015501
  406026:	add    DWORD PTR [ebx],eax
  406028:	add    DWORD PTR [eax+0x1],esp
  40602b:	cmp    al,BYTE PTR [ecx]
  40602d:	push   ebx
  40602e:	add    DWORD PTR [edi],eax
  406030:	add    DWORD PTR [ebp+0x1],edx
  406033:	or     eax,0x19015701
  406038:	add    ecx,ebp
  40603a:	call   FWORD PTR [edx]
  40603c:	add    edx,ebx
  40603e:	dec    DWORD PTR [esi]
  406040:	add    DWORD PTR [ebp-0x43feef01],edi
  406046:	inc    DWORD PTR [ebx+0x1]
  406049:	(bad)  
  40604a:	inc    DWORD PTR [edi+0x1]
  40604d:	cmp    bh,0x50
  406050:	add    DWORD PTR [ecx+edx*1-0x6affa6fd],edx
  406057:	adc    BYTE PTR [ebx],al
  406059:	outs   dx,DWORD PTR ds:[esi]
  40605a:	xchg   ebp,eax
  40605b:	inc    BYTE PTR [edx]
  40605d:	jno    0x405ff4
  40605f:	jae    0x406063
  406061:	arpl   WORD PTR [ebp-0x6926fd96],dx
  406067:	enter  0x2601,0x95
  40606b:	add    DWORD PTR [ecx],0x24
  40606e:	xchg   ebp,eax
  40606f:	nop
  406070:	add    DWORD PTR [eax],esi
  406072:	xchg   ebp,eax
  406073:	jle    0x406076
  406075:	push   ds
  406076:	xchg   ebp,eax
  406077:	cmc    
  406078:	add    BYTE PTR [edx*4-0x6ad8ff08],dh
  40607f:	jmp    0x406081
  406081:	and    eax,0x3100f095
  406086:	xchg   ebp,eax
  406087:	out    dx,al
  406088:	add    BYTE PTR [edi],bl
  40608a:	xchg   ebp,eax
  40608b:	fld    QWORD PTR [eax]
  40608d:	xor    eax,0xa019c95
  406092:	xchg   ebp,eax
  406093:	mov    ds:0xac950801,eax
  406098:	add    DWORD PTR [eax],esp
  40609a:	xchg   ebp,eax
  40609b:	mov    eax,ds:0x94951c01
  4060a0:	add    DWORD PTR [ebp+edx*4-0x75],ebp
  4060a4:	add    DWORD PTR [ebp+edx*4+0x7c],ebx
  4060a8:	add    DWORD PTR [ebx],ecx
  4060aa:	xchg   ebp,eax
  4060ab:	ret    
  4060ac:	add    BYTE PTR [ecx],cl
  4060ae:	xchg   ebp,eax
  4060af:	int3   
  4060b0:	add    BYTE PTR [ecx],ah
  4060b2:	xchg   ebp,eax
  4060b3:	rol    DWORD PTR [eax],1
  4060b5:	sbb    eax,0x6d00c495
  4060ba:	add    BYTE PTR [ebp-0x6aa2ff45],dl
  4060c0:	xchg   DWORD PTR [eax],eax
  4060c2:	cmp    BYTE PTR [ebp-0x6aa9ff7a],dl
  4060c8:	jl     0x4060ca
  4060ca:	sub    BYTE PTR [ebp-0x50ffb100],dl
  4060d0:	add    DWORD PTR [ebx+0x0],edx
  4060d3:	xchg   BYTE PTR [ecx],al
  4060d5:	inc    edx
  4060d6:	add    BYTE PTR [esi-0x45ffc2ff],dh
  4060dc:	add    DWORD PTR [edx],edi
  4060de:	add    bl,ah
  4060e0:	add    DWORD PTR [eax+eax*1],esi
  4060e3:	ins    DWORD PTR es:[edi],dx
  4060e4:	add    DWORD PTR [edi],edi
  4060e6:	add    BYTE PTR [eax+0x1],bh
  4060e9:	xor    eax,DWORD PTR [eax]
  4060eb:	xchg   DWORD PTR [ecx],eax
  4060ed:	mov    ds:0x9d017707,al
  4060f2:	pop    es
  4060f3:	mov    ebx,0xce079401
  4060f8:	add    DWORD PTR [esi-0x56fea0f9],ecx
  4060fe:	pop    es
  4060ff:	xchg   esp,eax
  406100:	add    DWORD PTR [esi-0x5afe4df9],esp
  406106:	pop    es
  406107:	mov    ds:0xbe079e01,al
  40610c:	add    DWORD PTR [eax-0x44feaef9],edi
  406112:	pop    es
  406113:	push   eax
  406114:	add    DWORD PTR [edx-0x4ffe5df9],edi
  40611a:	pop    es
  40611b:	inc    esi
  40611c:	add    DWORD PTR [edi+eax*1-0x60fec400],esp
  406123:	pop    es
  406124:	add    DWORD PTR cs:[ecx-0x79fe6af9],ecx
  40612b:	pop    es
  40612c:	add    DWORD PTR [ecx],0x55
  40612f:	pop    es
  406130:	add    DWORD PTR [ecx],0x4e
  406133:	pop    es
  406134:	outs   dx,DWORD PTR ds:[esi]
  406135:	add    DWORD PTR [eax+0x7],ebx
  406138:	push   edx
  406139:	add    DWORD PTR [ebx+0x7],ebx
  40613c:	loope  0x40613d
  40613e:	cmp    DWORD PTR [edi],eax
  406140:	ret    
  406141:	(bad)  
  406142:	aas    
  406143:	pop    es
  406144:	pop    es
  406145:	add    BYTE PTR [eax],al
  406147:	xor    al,0x93
  406149:	out    0x0,eax
  40614b:	das    
  40614c:	fwait
  40614d:	in     eax,0x0
  40614f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406150:	xchg   ebx,eax
  406151:	xor    ah,BYTE PTR [eax]
  406153:	dec    eax
  406154:	mov    esi,?
  406156:	das    
  406157:	dec    ebx
  406158:	mov    WORD PTR [eax+esi*1],es
  40615b:	dec    edx
  40615c:	pushf  
  40615d:	add    esi,DWORD PTR [eax]
  40615f:	dec    ebp
  406160:	pushf  
  406161:	jmp    FWORD PTR [edi]
  406163:	inc    esp
  406164:	mov    WORD PTR [ebp+0x30],?
  406167:	dec    edi
  406168:	mov    WORD PTR [esi+0x30],gs
  40616b:	inc    esi
  40616c:	pushf  
  40616d:	lahf   
  40616e:	xor    BYTE PTR [ecx-0x6fcf626d],dl
  406174:	fwait
  406175:	fwait
  406176:	xor    BYTE PTR [ebx-0x7dcf666d],al
  40617c:	fwait
  40617d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40617e:	xor    BYTE PTR [ebp-0x73cfa26d],dl
  406184:	add    BYTE PTR [ebx-0x6c78cfa5],bl
  40618a:	pop    ecx
  40618b:	xor    BYTE PTR [esi-0x65],bh
  40618e:	cmp    eax,0x74935930
  406193:	xor    BYTE PTR [eax-0x65],bl
  406196:	sahf   
  406197:	xor    BYTE PTR [ebx-0x6d],bl
  40619a:	pushf  
  40619b:	xor    BYTE PTR [edx-0x65],bl
  40619e:	call   0x3430:0xa8933d30
  4061a5:	fwait
  4061a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4061a7:	xor    BYTE PTR [edi],bh
  4061a9:	xchg   ebx,eax
  4061aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4061ab:	xor    BYTE PTR [esi],dh
  4061ad:	fwait
  4061ae:	mov    ds:0xa193a130,eax
  4061b3:	xor    BYTE PTR [eax-0x6ccf5065],ah
  4061b9:	xchg   ebx,eax
  4061ba:	lods   eax,DWORD PTR ds:[esi]
  4061bb:	xor    BYTE PTR [edx+0x30ab9b],dl
  4061c1:	adc    ecx,edi
  4061c3:	mov    dh,0x30
  4061c5:	add    dl,bh
  4061c7:	mov    eax,0xbafa0330
  4061cc:	xor    BYTE PTR [edx],al
  4061ce:	cli    
  4061cf:	mov    esp,0xbef9bd30
  4061d4:	xor    BYTE PTR [ecx+edi*8-0x650cf40],ch
  4061db:	ret    
  4061dc:	xor    BYTE PTR [esi-0x7],bh
  4061df:	lds    esi,FWORD PTR [eax]
  4061e1:	jns    0x4061dc
  4061e3:	(bad)  
  4061e4:	xor    BYTE PTR [eax-0x7],bh
  4061e7:	leave  
  4061e8:	xor    BYTE PTR [eax],al
  4061ea:	imul   edi,ecx,0xffffffca
  4061ed:	xor    BYTE PTR [edx-0x7],bh
  4061f0:	retf   
  4061f1:	xor    ch,ah
  4061f3:	pop    es
  4061f4:	int    0x30
  4061f6:	in     al,0x7
  4061f8:	into   
  4061f9:	xor    bh,dh
  4061fb:	pop    es
  4061fc:	iret   
  4061fd:	xor    BYTE PTR [esi],dh
  4061ff:	or     dl,dl
  406201:	xor    BYTE PTR [ecx+0x8],al
  406204:	aad    0x30
  406206:	xor    BYTE PTR [eax],cl
  406208:	fdiv   DWORD PTR [eax]
  40620a:	xor    ecx,DWORD PTR [eax]
  40620c:	(bad)  [eax]
  40620e:	adc    cl,BYTE PTR [eax]
  406210:	fidiv  WORD PTR [eax]
  406212:	sub    eax,0x1c30df08
  406217:	or     al,ah
  406219:	xor    BYTE PTR [edi],bl
  40621b:	or     cl,ah
  40621d:	xor    BYTE PTR [esi],cl
  40621f:	or     dl,ah
  406221:	xor    BYTE PTR [ecx],ch
  406223:	or     ah,ah
  406225:	xor    BYTE PTR [eax],ch
  406227:	or     dh,ah
  406229:	xor    BYTE PTR [ebx],bl
  40622b:	or     al,ch
  40622d:	xor    BYTE PTR [edx],cl
  40622f:	or     cl,ch
  406231:	xor    BYTE PTR [ebp+0x8],dl
  406234:	jmp    0x9430:0xeb085430
  40623b:	sub    eax,0x32c4ec08
  406240:	or     ch,ch
  406242:	les    esp,FWORD PTR ds:0xcc4ef08
  406248:	or     bl,dh
  40624a:	les    edx,FWORD PTR [edi]
  40624c:	or     BYTE PTR [ebx+0x7fea400],bl
  406252:	pushf  
  406253:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406254:	aad    0x6
  406256:	or     al,0x9a
  406258:	loop   0x406260
  40625a:	sbb    edx,DWORD PTR [edx-0x65e0f92a]
  406260:	sbb    BYTE PTR [edi],al
  406262:	and    DWORD PTR [edx-0x65ddf8e5],edx
  406268:	sbb    al,BYTE PTR [edi]
  40626a:	and    edx,DWORD PTR [edx-0x65dbf8e3]
  406270:	and    al,0x7
  406272:	and    eax,0x26069f92
  406277:	call   0x6a1:0x922706a6
  40627e:	sub    BYTE PTR [edx-0x6dd6f960],bl
  406284:	mov    bl,0x6
  406286:	sub    bl,BYTE PTR [edx-0x6dd4f94e]
  40628c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40628d:	push   es
  40628e:	sub    al,0x9a
  406290:	mov    WORD PTR [esi],es
  406292:	sub    eax,0x2e06b792
  406297:	call   0x6a9:0x922f069e
  40629e:	xor    BYTE PTR [edx-0x6dcef958],bl
  4062a4:	mov    eax,DWORD PTR [esi]
  4062a6:	xor    bl,BYTE PTR [edx-0x6dccf976]
  4062ac:	lea    eax,[esi]
  4062ae:	xor    al,0x9a
  4062b0:	xchg   esp,eax
  4062b1:	push   es
  4062b2:	xor    eax,0x3f009200
  4062b7:	push   es
  4062b8:	push   0x6
  4062ba:	ss push es
  4062bc:	arpl   WORD PTR [esi],ax
  4062be:	xor    DWORD PTR [esi],eax
  4062c0:	int3   
  4062c1:	push   es
  4062c2:	xor    BYTE PTR [esi],al
  4062c4:	int    0x6
  4062c6:	and    eax,DWORD PTR [esi]
  4062c8:	mov    esi,0xd4064906
  4062cd:	push   es
  4062ce:	dec    eax
  4062cf:	push   es
  4062d0:	aad    0x6
  4062d2:	dec    ebx
  4062d3:	push   es
  4062d4:	(bad)  
  4062d5:	push   es
  4062d6:	or     al,BYTE PTR [esi]
  4062d8:	xlat   BYTE PTR ds:[ebx]
  4062d9:	push   es
  4062da:	add    eax,0xc06d006
  4062df:	push   es
  4062e0:	fld    DWORD PTR [esi]
  4062e2:	pop    es
  4062e3:	push   es
  4062e4:	rol    BYTE PTR [esi],cl
  4062e6:	push   cs
  4062e7:	push   es
  4062e8:	fild   DWORD PTR [esi]
  4062ea:	adc    DWORD PTR [esi],eax
  4062ec:	int3   
  4062ed:	push   es
  4062ee:	add    BYTE PTR [esi],al
  4062f0:	fld    QWORD PTR [esi]
  4062f2:	add    eax,DWORD PTR [esi]
  4062f4:	fiadd  WORD PTR [esi]
  4062f6:	ror    BYTE PTR [ecx],cl
  4062f8:	iret   
  4062f9:	push   es
  4062fa:	int    0x9
  4062fc:	enter  0xc406,0x9
  406300:	popa   
  406301:	push   es
  406302:	mov    edi,0xd6065a09
  406307:	or     DWORD PTR [ebx+0x6],edx
  40630a:	mov    ecx,0xb8066409
  40630f:	or     DWORD PTR [ebp+0x6],eax
  406312:	mov    ebx,0x48064609
  406317:	push   es
  406318:	add    BYTE PTR [esi+0x4],al
  40631b:	dec    ebx
  40631c:	push   es
  40631d:	inc    edi
  40631e:	add    al,0x4a
  406320:	push   es
  406321:	gs add al,0x45
  406324:	push   es
  406325:	pusha  
  406326:	add    al,0x4c
  406328:	push   es
  406329:	imul   eax,DWORD PTR [edi+eax*2],0x46206
  406330:	dec    esi
  406331:	call   0x3c8:0x924103d7
  406338:	nop
  406339:	call   0x3ca:0x929303c9
  406340:	sbb    BYTE PTR [edx-0x6d82fc37],0xcc
  406347:	add    edx,DWORD PTR [edx+ebx*4-0x6d70fb71]
  40634e:	into   
  40634f:	add    eax,DWORD PTR [esi+0x7903cd9a]
  406355:	xchg   edx,eax
  406356:	push   ss
  406357:	and    DWORD PTR [eax-0x66],ebx
  40635a:	add    al,BYTE PTR [ebx+ebx*2]
  40635d:	xchg   edx,eax
  40635e:	add    DWORD PTR [edx+ebx*2],eax
  406361:	call   0x404:0x925503ff
  406368:	cmp    al,0x9a
  40636a:	add    eax,DWORD PTR [edi+esi*1]
  40636d:	xchg   edx,eax
  40636e:	push   es
  40636f:	add    al,0x3e
  406371:	call   0x3f8:0x92310405
  406378:	mov    al,ds:0xa303f799
  40637d:	add    BYTE PTR [ecx-0x666dfc06],dl
  406383:	stc    
  406384:	add    ecx,DWORD PTR [ebp-0x7bfc036f]
  40638a:	cdq    
  40638b:	nop
  40638c:	add    al,0x7f
  40638e:	xchg   ecx,eax
  40638f:	inc    BYTE PTR [ebx]
  406391:	jbe    0x40632c
  406393:	std    
  406394:	add    ebp,DWORD PTR [ecx-0x57fc416f]
  40639a:	cdq    
  40639b:	xor    BYTE PTR [ebx+ebp*4],al
  40639e:	xchg   ecx,eax
  40639f:	das    
  4063a0:	add    al,0xaa
  4063a2:	cdq    
  4063a3:	mov    BYTE PTR [ebx],0xa5
  4063a6:	xchg   ecx,eax
  4063a7:	xor    al,0x4
  4063a9:	add    al,dh
  4063ab:	add    esi,DWORD PTR ds:0x4403f304
  4063b1:	add    al,0x2
  4063b3:	add    al,0x33
  4063b5:	add    al,0xf5
  4063b7:	add    eax,DWORD PTR [ebp+0x4]
  4063ba:	add    edi,DWORD PTR fs:[eax]
  4063bd:	add    al,0x67
  4063bf:	add    edi,DWORD PTR [ecx]
  4063c1:	add    al,0xb6
  4063c3:	add    edi,DWORD PTR [edx]
  4063c5:	add    al,0xa9
  4063c7:	add    edi,DWORD PTR [ebx]
  4063c9:	add    al,0xc8
  4063cb:	add    edi,DWORD PTR [esp+eax*1]
  4063ce:	stos   DWORD PTR es:[edi],eax
  4063cf:	add    edi,DWORD PTR ds:0x3e03ba04
  4063d5:	add    al,0x8d
  4063d7:	add    edi,DWORD PTR [edi]
  4063d9:	add    al,0x9c
  4063db:	add    ecx,DWORD PTR [edi+0x4]
  4063de:	lahf   
  4063df:	add    eax,DWORD PTR [eax+0x4]
  4063e2:	add    BYTE PTR [esi-0x7efbbefd],cl
  4063e8:	add    eax,DWORD PTR [edx+0x4]
  4063eb:	mov    al,ds:0xa3044303
  4063f0:	add    esi,DWORD PTR [esi]
  4063f2:	add    al,0x92
  4063f4:	add    esi,DWORD PTR [edx]
  4063f6:	add    al,0x85
  4063f8:	add    ecx,DWORD PTR [esp+eax*1+0x54]
  4063fc:	push   es
  4063fd:	dec    ebx
  4063fe:	add    al,0x57
  406400:	push   es
  406401:	aaa    
  406402:	add    al,0x46
  406404:	push   es
  406405:	dec    eax
  406406:	add    al,0x39
  406408:	push   es
  406409:	dec    ebp
  40640a:	add    al,0x38
  40640c:	push   es
  40640d:	dec    ecx
  40640e:	add    al,0x1b
  406410:	push   es
  406411:	inc    edi
  406412:	add    al,0xa
  406414:	push   es
  406415:	dec    edx
  406416:	add    al,0xdd
  406418:	add    eax,0x60c042e
  40641d:	adc    BYTE PTR [edi+ecx*1],al
  406420:	push   es
  406421:	adc    DWORD PTR [esp+edx*4],eax
  406424:	jp     0x40642c
  406426:	es nop
  406428:	add    DWORD PTR [esi],0x14
  40642b:	cwde   
  40642c:	jl     0x406434
  40642e:	adc    eax,0x24068590
  406433:	cwde   
  406434:	jle    0x40643c
  406436:	adc    edx,DWORD PTR [eax-0x67daf981]
  40643c:	rol    BYTE PTR ds:0x5d19018,1
  406442:	sbb    DWORD PTR [eax+0x1a05be],ebx
  406448:	nop
  406449:	sub    eax,0xd4981b06
  40644e:	add    eax,0x5bb901c
  406453:	sbb    eax,0x1e05c298
  406458:	nop
  406459:	sub    DWORD PTR [esi],eax
  40645b:	pop    ds
  40645c:	cwde   
  40645d:	or     BYTE PTR [esi],al
  40645f:	das    
  406460:	nop
  406461:	pop    es
  406462:	push   es
  406463:	and    BYTE PTR [eax-0x6fdef9fa],bl
  406469:	adc    eax,0x6c982206
  40646e:	add    eax,0x5739023
  406473:	push   ss
  406474:	cwde   
  406475:	push   0x5
  406477:	adc    dl,BYTE PTR [eax-0x67d3fa8f]
  40647d:	pusha  
  40647e:	add    eax,0x55f902b
  406483:	pop    ss
  406484:	cwde   
  406485:	dec    esi
  406486:	add    eax,0x53d9028
  40648b:	sub    eax,0x29054498
  406490:	nop
  406491:	stos   DWORD PTR es:[edi],eax
  406492:	add    eax,0x5b29827
  406497:	sub    dl,BYTE PTR [eax-0x6879fb88]
  40649d:	add    BYTE PTR [ebx+0x4],cl
  4064a0:	or     al,0x0
  4064a2:	dec    edx
  4064a3:	add    al,0x1d
  4064a5:	add    BYTE PTR [ebp+0x4],cl
  4064a8:	push   ds
  4064a9:	add    BYTE PTR [esp+eax*1+0x0],al
  4064ad:	out    dx,al
  4064ae:	dec    DWORD PTR [ebp+0x4]
  4064b1:	or     BYTE PTR [eax],al
  4064b3:	push   ecx
  4064b4:	add    al,0x22
  4064b6:	add    BYTE PTR [eax+0x4],al
  4064b9:	(bad)  
  4064ba:	inc    DWORD PTR [ecx+0x4]
  4064bd:	adc    eax,DWORD PTR [eax]
  4064bf:	xchg   edi,eax
  4064c0:	add    al,0x11
  4064c2:	add    BYTE PTR [esi-0x67df56fc],cl
  4064c8:	add    al,0x38
  4064ca:	call   FWORD PTR [edx+0x79ff3104]
  4064d0:	add    al,0x2a
  4064d2:	push   DWORD PTR [esp+eax*1+0x43]
  4064d6:	(bad)  
  4064d7:	jnp    0x4064dd
  4064d9:	pop    esi
  4064da:	push   DWORD PTR [esi+0x4]
  4064dd:	add    al,0xff
  4064df:	pop    ebp
  4064e0:	add    al,0x48
  4064e2:	jmp    DWORD PTR [eax+0x4]
  4064e5:	popa   
  4064e6:	dec    DWORD PTR [edi+0x4]
  4064e9:	pop    edi
  4064ea:	call   DWORD PTR [edx+0x4]
  4064ed:	add    al,0xff
  4064ef:	inc    ecx
  4064f0:	add    al,0x4a
  4064f2:	jmp    DWORD PTR [edi]
  4064f4:	add    al,0x5
  4064f6:	jmp    FWORD PTR [edx]
  4064f8:	add    al,0x6
  4064fa:	jmp    FWORD PTR [ecx]
  4064fc:	add    al,0x7
  4064fe:	jmp    FWORD PTR [ebx+eax*1+0x3a3ff00]
  406505:	sub    edi,edi
  406507:	scas   al,BYTE PTR es:[edi]
  406508:	add    esp,DWORD PTR [edx]
  40650a:	jmp    DWORD PTR [ebp-0x4f00d4fd]
  406510:	add    eax,DWORD PTR [eax]
  406512:	sbb    al,0xff
  406514:	scas   eax,DWORD PTR es:[edi]
  406515:	add    ecx,DWORD PTR ds:0x97a2ffff
  40651b:	xchg   BYTE PTR [ebx],al
  40651d:	mov    ds:0xb5038797,al
  406522:	xchg   edi,eax
  406523:	mov    WORD PTR [ebx],es
  406525:	lods   al,BYTE PTR ds:[esi]
  406526:	xchg   edi,eax
  406527:	lea    eax,[ebx]
  406529:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40652a:	xchg   edi,eax
  40652b:	mov    al,BYTE PTR [ebx]
  40652d:	sahf   
  40652e:	xchg   edi,eax
  40652f:	mov    eax,DWORD PTR [ebx]
  406531:	cdq    
  406532:	xchg   edi,eax
  406533:	mov    al,ds:0xa1979803
  406538:	add    ebx,DWORD PTR [ebx-0x6afc6069]
  40653e:	xchg   edi,eax
  40653f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406540:	add    edi,DWORD PTR [edi+edx*4]
  406543:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406544:	add    esi,DWORD PTR [edi]
  406546:	xchg   edi,eax
  406547:	mov    ds:0xa1973e03,al
  40654c:	add    esi,DWORD PTR [ecx]
  40654e:	xchg   edi,eax
  40654f:	cwde   
  406550:	add    esp,DWORD PTR [eax]
  406552:	xchg   edi,eax
  406553:	xchg   edi,eax
  406554:	add    ecx,DWORD PTR [eax-0x69]
  406557:	scas   eax,DWORD PTR es:[edi]
  406558:	add    ecx,DWORD PTR [ebx-0x69]
  40655b:	scas   al,BYTE PTR es:[edi]
  40655c:	add    ecx,DWORD PTR [edx-0x69]
  40655f:	lods   eax,DWORD PTR ds:[esi]
  406560:	add    ecx,DWORD PTR ds:0x403b497
  406566:	xchg   edi,eax
  406567:	mov    bl,0x3
  406569:	seta   BYTE PTR [edx-0x4e68f9fd]
  406570:	add    edx,DWORD PTR [ecx]
  406572:	xchg   edi,eax
  406573:	test   al,0x3
  406575:	adc    BYTE PTR [eax],al
  406577:	xchg   edi,eax
  406578:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406579:	add    eax,DWORD PTR [ebx]
  40657b:	xchg   edi,eax
  40657c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40657d:	add    eax,DWORD PTR [edx]
  40657f:	xchg   edi,eax
  406580:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406581:	add    edx,ebp
  406583:	xchg   esi,eax
  406584:	lods   al,BYTE PTR ds:[esi]
  406585:	add    ecx,esp
  406587:	xchg   esi,eax
  406588:	stos   DWORD PTR es:[edi],eax
  406589:	add    eax,edi
  40658b:	xchg   esi,eax
  40658c:	stos   BYTE PTR es:[edi],al
  40658d:	add    edi,DWORD PTR [esi+0x3a996]
  406593:	cmp    eax,0x2c03bfff
  406598:	inc    eax
  40659a:	add    ebp,DWORD PTR [edi]
  40659c:	inc    edx
  40659e:	add    ebx,DWORD PTR [esi]
  4065a0:	inc    ecx
  4065a2:	add    edi,ecx
  4065a4:	inc    bl
  4065a6:	add    ebp,DWORD PTR [eax]
  4065a8:	inc    esp
  4065aa:	add    ebp,DWORD PTR [ebx]
  4065ac:	inc    ebp
  4065ae:	add    ebp,DWORD PTR [edx]
  4065b0:	inc    esi
  4065b2:	add    edx,DWORD PTR ds:0x1403c7ff
  4065b8:	dec    eax
  4065ba:	add    ebx,DWORD PTR [ebp+eiz*2-0x4a]
  4065be:	and    ecx,DWORD PTR [edi+0x65]
  4065c1:	or     esp,DWORD PTR ds:0x24ff660e
  4065c7:	sbb    DWORD PTR [ebp+0x1f],esp
  4065ca:	and    ebx,DWORD PTR [eax]
  4065cc:	and    BYTE PTR gs:[ebx],ah
  4065cf:	sbb    esp,DWORD PTR [ebp+0x1]
  4065d2:	and    eax,0x23a0650a
  4065d7:	add    eax,0x23a265
  4065dc:	adc    al,0x65
  4065de:	mov    ds:0xa5651723,eax
  4065e3:	and    eax,esi
  4065e5:	gs call 0xd023:0x9c65e123
  4065ed:	gs popf 
  4065ef:	and    eax,DWORD PTR [ebx-0x1ddc609b]
  4065f5:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  4065f7:	and    ebp,DWORD PTR [ebp+0x65]
  4065fa:	stos   DWORD PTR es:[edi],eax
  4065fb:	and    esp,DWORD PTR [ecx+0x65]
  4065fe:	arpl   WORD PTR [edx],sp
  406600:	jo     0x406667
  406602:	pop    edi
  406603:	and    dh,bl
  406605:	imul   esp,DWORD PTR [edx+eiz*1+0x32],0x6c
  40660a:	sub    ah,BYTE PTR [edx]
  40660c:	xchg   esp,eax
  40660d:	xchg   edi,eax
  40660e:	cld    
  40660f:	xor    esi,DWORD PTR [esi-0x49e30368]
  406615:	xchg   ebp,eax
  406616:	cld    
  406617:	sbb    eax,0x6fca4b6
  40661c:	mov    dh,0x9f
  40661e:	cld    
  40661f:	cmp    esi,DWORD PTR [esi-0x49bd0360]
  406625:	mov    ah,0xfc
  406627:	shl    DWORD PTR [ebp-0x67],cl
  40662a:	cld    
  40662b:	shl    DWORD PTR [ebp-0x5e],1
  40662e:	cld    
  40662f:	pusha  
  406630:	jbe    0x4065e3
  406632:	cld    
  406633:	sbb    DWORD PTR [esi-0x63],esi
  406636:	cld    
  406637:	xor    DWORD PTR [esi-0x62],0x937682fc
  40663e:	cld    
  40663f:	sub    BYTE PTR [eax],al
  406641:	jbe    0x4066bf
  406643:	cld    
  406644:	sub    DWORD PTR [esi-0x3f],esi
  406647:	sti    
  406648:	es mov dh,0x26
  40664b:	cld    
  40664c:	daa    
  40664d:	mov    dh,0xbe
  40664f:	sti    
  406650:	add    DWORD PTR [esi-0x6a6e0431],esi
  406656:	ret    0x8ffb
  406659:	mov    ch,0x25
  40665b:	cld    
  40665c:	nop
  40665d:	mov    ch,0x2c
  40665f:	cld    
  406660:	xchg   ecx,eax
  406661:	mov    ch,0x17
  406663:	cld    
  406664:	xchg   edx,eax
  406665:	mov    ch,0xbe
  406667:	cli    
  406668:	and    DWORD PTR [eax-0x7],edi
  40666b:	cli    
  40666c:	lds    esi,FWORD PTR [ecx-0x8]
  40666f:	cli    
  406670:	xchg   ecx,eax
  406671:	jns    0x40666e
  406673:	cli    
  406674:	or     BYTE PTR [eax-0x6],dh
  406677:	cli    
  406678:	or     edi,DWORD PTR [eax-0x3]
  40667b:	cli    
  40667c:	or     al,0x70
  40667e:	hlt    
  40667f:	cli    
  406680:	or     DWORD PTR [eax+0x1],edi
  406683:	sti    
  406684:	and    esi,DWORD PTR [eax+0x0]
  406687:	sar    dl,1
  406689:	sahf   
  40668a:	sbb    al,0xd3
  40668c:	cli    
  40668d:	mov    ds:0x93fac21d,eax
  406692:	sbb    eax,0x1d8ffabd
  406697:	aam    0xfa
  406699:	xchg   DWORD PTR ds:0x1daffacf,ebx
  40669f:	(bad)  
  4066a0:	cli    
  4066a1:	sbb    eax,0xfab924
  4066a6:	push   ds
  4066a7:	and    al,0x98
  4066a9:	cli    
  4066aa:	rcr    DWORD PTR [ebx+ebx*4],cl
  4066ad:	cli    
  4066ae:	(bad)  
  4066b0:	call   0x9ffa:0x952400fa
  4066b7:	sbb    eax,0x1d77fa7c
  4066bc:	ja     0x4066b8
  4066be:	addr16 sbb eax,0x1d6ffa7e
  4066c4:	jno    0x4066c0
  4066c6:	xchg   ebp,eax
  4066c7:	sbb    eax,0x2096fd88
  4066cc:	mov    edi,ebp
  4066ce:	xchg   ebp,eax
  4066cf:	and    BYTE PTR [edx-0x7adf6803],cl
  4066d5:	std    
  4066d6:	nop
  4066d7:	and    BYTE PTR [ebp+edi*8-0x278df66],cl
  4066de:	xchg   ebx,eax
  4066df:	and    BYTE PTR [esi-0x7edf7303],cl
  4066e5:	std    
  4066e6:	lea    esp,[eax]
  4066e8:	push   eax
  4066e9:	std    
  4066ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4066eb:	and    BYTE PTR [ebx-0x3],dl
  4066ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4066ef:	and    BYTE PTR [ebp-0x3],al
  4066f2:	jbe    0x406710
  4066f4:	aas    
  4066f5:	std    
  4066f6:	jno    0x406718
  4066f8:	push   esi
  4066f9:	std    
  4066fa:	js     0x40671c
  4066fc:	cmp    ebp,edi
  4066fe:	(bad)  
  4066ff:	and    DWORD PTR [eax],eax
  406701:	cmp    BYTE PTR [ecx],ah
  406703:	shl    DWORD PTR [eax],cl
  406705:	cmp    ebx,DWORD PTR [ecx]
  406707:	int3   
  406708:	and    BYTE PTR [edx+0x20cd0e00],bl
  40670e:	xchg   ebp,eax
  40670f:	push   cs
  406710:	into   
  406711:	and    BYTE PTR [esi+edi*8-0x168df32],bl
  406718:	(bad)  
  406719:	and    BYTE PTR [esi-0x12],bh
  40671c:	enter  0x8120,0xee
  406720:	sti    
  406721:	and    BYTE PTR [edx-0x22],dh
  406724:	adc    BYTE PTR [eax],ah
  406726:	ins    DWORD PTR es:[edi],dx
  406727:	ficom  WORD PTR [edi]
  406729:	and    esp,DWORD PTR [esi+ecx*8+0x14]
  40672d:	add    BYTE PTR [edi-0x32],bl
  406730:	sbb    BYTE PTR [ebx],ah
  406732:	stos   BYTE PTR es:[edi],al
  406733:	mov    esi,0xbea520c9
  406738:	retf   0xac20
  40673b:	scas   al,BYTE PTR es:[edi]
  40673c:	ret    
  40673d:	and    BYTE PTR [edi-0x5fdf3b52],ah
  406743:	sahf   
  406744:	and    BYTE PTR [ecx],ah
  406746:	mov    ds:0x3526119e,eax
  40674b:	mov    es,WORD PTR [ecx+0x25]
  40674e:	sub    al,0x8e
  406750:	scas   eax,DWORD PTR es:[edi]
  406751:	and    eax,0x253b7e27
  406756:	push   ds
  406757:	jle    0x4066f0
  406759:	and    eax,0x200e6e19
  40675e:	sbb    BYTE PTR [esi+0x9],ch
  406761:	and    BYTE PTR [ebx],bl
  406763:	pop    esi
  406764:	or     ah,BYTE PTR [eax]
  406766:	sbb    bl,BYTE PTR [esi+0x5]
  406769:	and    BYTE PTR ds:0x3721044e,bh
  40676f:	add    BYTE PTR [esi+0x30],cl
  406772:	and    BYTE PTR [esi],bh
  406774:	xor    esp,DWORD PTR ds:[eax]
  406777:	xor    BYTE PTR [esi],bh
  406779:	add    eax,0x6a760027
  40677e:	stos   DWORD PTR es:[edi],eax
  40677f:	and    eax,0x25bf6a89
  406784:	mov    BYTE PTR [edx-0x4b],ch
  406787:	and    eax,0x25ce6a8b
  40678c:	fisub  DWORD PTR [edi-0x53]
  40678f:	and    eax,0x25e567dd
  406794:	int3   
  406795:	stos   BYTE PTR es:[di],al
  406797:	and    eax,0x25ac67cf
  40679c:	fisub  WORD PTR [edi-0x4e]
  40679f:	and    eax,0x25bc67d1
  4067a4:	shl    BYTE PTR [edi+0x5],1
  4067a7:	shl    DWORD PTR es:[edi+0x21],cl
  4067ab:	and    BYTE PTR [edx],ah
  4067ad:	push   0x682525a9
  4067b2:	mov    cl,0x25
  4067b4:	adc    al,0x68
  4067b6:	mov    ebx,0x1b681725
  4067bb:	es push es
  4067bd:	push   0x6819261d
  4067c2:	bound  esp,QWORD PTR [esi]
  4067c4:	sbb    BYTE PTR [eax+0x65],ch
  4067c7:	sbb    esp,DWORD PTR es:[edi+0x64]
  4067cb:	es in  eax,dx
  4067cd:	addr16 pop ds
  4067cf:	daa    
  4067d0:	in     al,dx
  4067d1:	addr16 pop ds
  4067d3:	and    BYTE PTR [eax],al
  4067d5:	fbld   TBYTE PTR [edi+0x20]
  4067d8:	and    dh,bl
  4067da:	adc    ah,BYTE PTR [bx]
  4067dd:	mov    cl,0x67
  4067df:	push   ss
  4067e0:	daa    
  4067e1:	mov    al,ds:0xa3266e67
  4067e6:	ins    BYTE PTR es:[di],dx
  4067e8:	mov    es:0x75264167,al
  4067ee:	addr16 aas 
  4067f0:	es je  0x40685a
  4067f3:	or     eax,0xf9119426
  4067f8:	adc    al,0x77
  4067fa:	adc    bh,cl
  4067fc:	push   ss
  4067fd:	jne    0x4067fa
  4067ff:	clc    
  406800:	aaa    
  406801:	je     0x406867
  406803:	clc    
  406804:	sbb    DWORD PTR [ebp+ebp*2-0x8],esi
  406808:	sbb    eax,0x3bf9ba74
  40680d:	xchg   esp,eax
  40680e:	jne    0x406809
  406810:	cmp    eax,0x27f98f94
  406815:	mov    dh,0x80
  406817:	stc    
  406818:	es mov dh,0x97
  40681b:	stc    
  40681c:	scas   al,BYTE PTR es:[edi]
  40681d:	xchg   esp,eax
  40681e:	cdq    
  40681f:	stc    
  406820:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406821:	mov    dh,0x9a
  406823:	stc    
  406824:	sub    BYTE PTR [esi-0x48f6066d],dh
  40682a:	popf   
  40682b:	stc    
  40682c:	pop    esi
  40682d:	xchg   esp,eax
  40682e:	mov    cl,0xf9
  406830:	pop    ss
  406831:	jbe    0x4067c6
  406833:	stc    
  406834:	xchg   esp,eax
  406835:	ja     0x4067d4
  406837:	stc    
  406838:	mov    ds:0xf9867600,eax
  40683d:	retf   0x8a79
  406840:	stc    
  406841:	pop    es
  406842:	ja     0x4067d1
  406844:	stc    
  406845:	sub    DWORD PTR [esi-0x71],esi
  406848:	stc    
  406849:	xor    BYTE PTR [esi-0x6f],0xf9
  40684d:	xor    DWORD PTR [esi-0x495e0743],0xb6a2f8c5
  406857:	sub    bh,al
  406859:	push   ss
  40685a:	mov    ah,0xb9
  40685c:	test   edi,0xd0f7b899
  406862:	xchg   ecx,eax
  406863:	mov    bh,0xf7
  406865:	rcr    DWORD PTR [ecx-0x6e2d084a],1
  40686b:	mov    ebp,0x99d3f7
  406870:	or     al,0xf8
  406872:	pusha  
  406873:	inc    BYTE PTR [esi]
  406875:	clc    
  406876:	imul   edi,esi,0xfe62f80d
  40687c:	add    al,bh
  40687e:	dec    ebx
  40687f:	dec    BYTE PTR [edi]
  406881:	clc    
  406882:	dec    esp
  406883:	(bad)  
  406884:	adc    bh,al
  406886:	cmp    eax,0x3ef801fe
  40688b:	(bad)  
  40688c:	cld    
  40688d:	imul   edi
  40688f:	std    
  406890:	shl    edi,cl
  406892:	call   0xe2383794
  406897:	std    
  406898:	(bad)
  40689b:	std    
  40689c:	fdiv   st,st(7)
  40689e:	add    bl,dl
  4068a0:	std    
  4068a1:	mov    bh,0xf7
  4068a3:	hlt    
  4068a4:	std    
  4068a5:	mov    edx,0xb9fdf5f7
  4068aa:	div    esi
  4068ac:	std    
  4068ad:	mov    ah,0xf7
  4068af:	mov    bh,0xfd
  4068b1:	fwait
  4068b2:	div    DWORD PTR [eax-0x46086903]
  4068b8:	std    
  4068b9:	popf   
  4068ba:	div    DWORD PTR [edx-0x44086f03]
  4068c0:	std    
  4068c1:	jg     0x4068ba
  4068c3:	mov    esp,0xadf782fd
  4068c8:	std    
  4068c9:	inc    edi
  4068ca:	not    BYTE PTR [edx+esi*8-0xd6a09b6]
  4068d1:	mov    esi,esi
  4068d3:	xchg   esi,eax
  4068d4:	repnz test dh,dh
  4068d7:	xchg   edi,eax
  4068d8:	repnz mov esi,esi
  4068db:	nop
  4068dc:	repnz xchg dh,dh
  4068df:	cdq    
  4068e0:	repnz (bad) 
  4068e2:	not    BYTE PTR [edx-0x64096f0e]
  4068e8:	repnz (bad) 
  4068ea:	jg     0x40694e
  4068ec:	clc    
  4068ed:	or     eax,0xdf94a83
  4068f2:	push   edx
  4068f3:	inc    edx
  4068f4:	test   BYTE PTR ds:0xdf74a4d,0x44
  4068fb:	inc    edx
  4068fc:	hlt    
  4068fd:	or     eax,0xdf52a3f
  406902:	push   esi
  406903:	add    BYTE PTR [edx],ah
  406905:	repnz or eax,0xdf32a39
  40690b:	cmp    BYTE PTR [edx],ah
  40690d:	adc    BYTE PTR [esi],cl
  40690f:	cmp    ecx,DWORD PTR [edx]
  406911:	adc    DWORD PTR [esi],ecx
  406913:	call   0xca5:0x950e0fa5
  40691a:	push   cs
  40691b:	pushf  
  40691c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40691d:	or     eax,0xa85970e
  406922:	push   cs
  406923:	jle    0x4068aa
  406925:	or     ecx,DWORD PTR [esi]
  406927:	add    DWORD PTR [ebp-0x7a8ff1f8],0xa5730e09
  406931:	push   es
  406932:	push   cs
  406933:	bound  esp,QWORD PTR [ebp-0x5aa2f1f9]
  406939:	add    al,0xe
  40693b:	push   esp
  40693c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40693d:	add    eax,0x2854f0e
  406942:	push   cs
  406943:	inc    esi
  406944:	test   DWORD PTR [ebx],eax
  406946:	push   cs
  406947:	test   eax,0xa80e2085
  40694c:	test   DWORD PTR [ecx],esp
  40694e:	push   cs
  40694f:	stos   DWORD PTR es:[edi],eax
  406950:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406951:	push   ds
  406952:	push   cs
  406953:	sub    ah,BYTE PTR [ebp-0x5adaf1e3]
  406959:	sbb    al,0xe
  40695b:	sub    al,0xa5
  40695d:	sbb    ecx,DWORD PTR [esi]
  40695f:	daa    
  406960:	test   DWORD PTR [edx],ebx
  406962:	push   cs
  406963:	add    BYTE PTR [edx+0xe270f],bh
  406969:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40696a:	movaps xmm1,XMMWORD PTR [esi]
  40696d:	mov    ah,0xf
  40696f:	sub    DWORD PTR [esi],ecx
  406971:	ja     0x406982
  406973:	sub    cl,BYTE PTR [esi]
  406975:	xchg   BYTE PTR [edi],cl
  406977:	sub    ecx,DWORD PTR [esi]
  406979:	jno    0x40698a
  40697b:	sub    al,0xe
  40697d:	jo     0x40698e
  40697f:	sub    eax,0x2e0f930e
  406984:	push   cs
  406985:	bound  ecx,QWORD PTR [edi]
  406987:	das    
  406988:	push   cs
  406989:	jge    0x40699a
  40698b:	xor    BYTE PTR [esi],cl
  40698d:	jl     0x40699e
  40698f:	xor    DWORD PTR [esi],ecx
  406991:	scas   eax,DWORD PTR es:[edi]
  406992:	rdmsr  
  406994:	push   cs
  406995:	dec    esi
  406996:	adc    DWORD PTR [ebx],esi
  406998:	push   cs
  406999:	dec    ecx
  40699a:	adc    DWORD PTR [esi+ecx*1],esi
  40699d:	cmp    BYTE PTR [ecx],dl
  40699f:	xor    eax,0x36112b0e
  4069a4:	push   cs
  4069a5:	or     dl,BYTE PTR [ecx]
  4069a7:	aaa    
  4069a8:	push   cs
  4069a9:	xor    eax,0x40e3811
  4069ae:	adc    DWORD PTR [ecx],edi
  4069b0:	push   cs
  4069b1:	daa    
  4069b2:	adc    DWORD PTR [edx],edi
  4069b4:	push   cs
  4069b5:	rcl    DWORD PTR [eax],cl
  4069b7:	ds push cs
  4069b9:	add    dl,BYTE PTR [ecx]
  4069bb:	aas    
  4069bc:	push   cs
  4069bd:	or     eax,0x1c0e4011
  4069c2:	adc    DWORD PTR [ecx+0xe],eax
  4069c5:	pop    ds
  4069c6:	adc    DWORD PTR [edx+0xe],eax
  4069c9:	push   cs
  4069ca:	adc    DWORD PTR [ebx+0xe],eax
  4069cd:	add    BYTE PTR [ecx],cl
  4069cf:	adc    DWORD PTR [esi+ecx*1+0x18],eax
  4069d3:	adc    BYTE PTR [ebp+0xe],al
  4069d6:	fist   DWORD PTR [eax]
  4069d8:	inc    esi
  4069d9:	push   cs
  4069da:	ficom  DWORD PTR [eax]
  4069dc:	inc    edi
  4069dd:	push   cs
  4069de:	xchg   esp,eax
  4069df:	mov    edi,0xc0a2480f
  4069e4:	cmovns ebx,DWORD PTR [edx-0x6db5f033]
  4069eb:	into   
  4069ec:	cmovnp ecx,DWORD PTR [edx-0x5db3f045]
  4069f3:	and    al,0x10
  4069f5:	dec    ebp
  4069f6:	call   0x1008:0x92501007
  4069fd:	push   ecx
  4069fe:	mov    al,BYTE PTR ds:0x6a25210
  406a04:	adc    BYTE PTR [ebx-0x66],dl
  406a07:	arpl   WORD PTR [edi],cx
  406a09:	push   esp
  406a0a:	xchg   edx,eax
  406a0b:	ins    BYTE PTR es:[edi],dx
  406a0c:	andnps xmm1,XMMWORD PTR [edx-0x5da9f09f]
  406a13:	push   0xf
  406a15:	push   edi
  406a16:	call   0xf60:0x92580f5f
  406a1d:	pop    ecx
  406a1e:	mov    bh,BYTE PTR [eax+0x12]
  406a21:	xor    DWORD PTR [ebp-0x5acded8b],esp
  406a27:	jbe    0x406a3b
  406a29:	xor    esp,DWORD PTR [ebp-0x5acbed85]
  406a2f:	je     0x406a43
  406a31:	xor    eax,0x12798500
  406a36:	test   DWORD PTR ss:[edx-0x307ac8ef],esi
  406a3d:	adc    DWORD PTR [eax],edi
  406a3f:	test   eax,eax
  406a41:	adc    DWORD PTR [ecx],edi
  406a43:	gs mov ebp,0xce653a11
  406a49:	adc    DWORD PTR [ebx],edi
  406a4b:	gs mov bl,0x11
  406a4e:	cmp    al,0x65
  406a50:	mov    esp,0x1fc53d11
  406a55:	adc    bh,BYTE PTR [esi]
  406a57:	lds    eax,FWORD PTR [eax]
  406a59:	xchg   esi,eax
  406a5a:	adc    al,bl
  406a5c:	adc    DWORD PTR [ecx-0x67ee2bee],ebx
  406a62:	adc    dl,ch
  406a64:	adc    DWORD PTR [ebx+0x7a11d612],ebx
  406a6a:	adc    dl,bh
  406a6c:	adc    DWORD PTR [ebp+0x12],esi
  406a6f:	rcl    BYTE PTR [ecx],1
  406a71:	jl     0x406a85
  406a73:	fst    DWORD PTR [ecx]
  406a75:	ja     0x406a89
  406a77:	rcl    BYTE PTR [ecx],cl
  406a79:	pop    esi
  406a7a:	adc    bl,bl
  406a7c:	adc    DWORD PTR [ecx+0x12],esp
  406a7f:	int3   
  406a80:	adc    DWORD PTR [eax+0x12],edx
  406a83:	fst    QWORD PTR [ecx]
  406a85:	push   ebx
  406a86:	adc    bl,dh
  406a88:	adc    DWORD PTR [edx+0x12],eax
  406a8b:	iret   
  406a8c:	adc    DWORD PTR ds:0x3411c812,edi
  406a92:	adc    ah,BYTE PTR [ecx+0x11]
  406a95:	das    
  406a96:	adc    al,BYTE PTR [eax]
  406a98:	pop    edx
  406a99:	adc    DWORD PTR [esi-0x56eeacef],esp
  406a9f:	adc    DWORD PTR [ecx+edx*1-0x58],esp
  406aa3:	adc    DWORD PTR [ebp+0x11],eax
  406aa6:	stos   DWORD PTR es:[edi],eax
  406aa7:	adc    DWORD PTR [esi+0x11],eax
  406aaa:	stos   BYTE PTR es:[edi],al
  406aab:	adc    DWORD PTR [edi+0x11],eax
  406aae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406aaf:	adc    DWORD PTR [eax+0x11],eax
  406ab2:	lods   al,BYTE PTR ds:[esi]
  406ab3:	adc    DWORD PTR [ecx+0x11],ebp
  406ab6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406ab7:	adc    DWORD PTR [edx+0x11],esp
  406aba:	scas   al,BYTE PTR es:[edi]
  406abb:	adc    DWORD PTR [ebx+0x11],ebp
  406abe:	mov    cl,0x11
  406ac0:	pop    esp
  406ac1:	adc    DWORD PTR [eax-0x5ceeb2ef],esp
  406ac7:	adc    DWORD PTR [esi+0x11],ecx
  406aca:	mov    dl,0x11
  406acc:	aas    
  406acd:	adc    DWORD PTR [ebp+0x113811],ebp
  406ad3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406ad4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406ad5:	mov    ebp,0xbea59f30
  406ada:	xor    BYTE PTR [esi],dh
  406adc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406add:	mov    edi,0xe0a53930
  406ae2:	xor    BYTE PTR [eax],bh
  406ae4:	test   ecx,esp
  406ae6:	xor    BYTE PTR [ebx],bh
  406ae8:	test   edx,esp
  406aea:	xor    BYTE PTR [edx],bl
  406aec:	test   ebx,esp
  406aee:	xor    BYTE PTR ds:0x1c11a885,dl
  406af4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406af5:	test   eax,0xaaa51711
  406afa:	adc    DWORD PTR [esi],edi
  406afc:	add    BYTE PTR [ebp-0x5abeee55],ah
  406b02:	lods   al,BYTE PTR ds:[esi]
  406b03:	adc    DWORD PTR [eax],esi
  406b05:	test   DWORD PTR [ebp-0x517accef],ebp
  406b0b:	adc    DWORD PTR [edx],esp
  406b0d:	test   DWORD PTR [edi-0x6f7ae2ef],ebp
  406b13:	adc    DWORD PTR [eiz*4-0x5af0ee6f],edx
  406b1a:	xchg   edx,eax
  406b1b:	adc    esi,eax
  406b1d:	xchg   edx,eax
  406b1e:	xchg   ebx,eax
  406b1f:	adc    ecx,ecx
  406b21:	mov    dl,BYTE PTR [ecx+edx*1+0x1195a2c8]
  406b28:	retf   
  406b29:	call   0x1197:0x92ca1196
  406b30:	lds    ecx,FWORD PTR [edx-0x5d33ee68]
  406b36:	cdq    
  406b37:	adc    edi,eax
  406b39:	call   0x119b:0x928e119a
  406b40:	xchg   ecx,eax
  406b41:	mov    bl,BYTE PTR [ecx+edx*1+0x119da280]
  406b48:	sbb    DWORD PTR [edx+0x600119e],0xe
  406b4f:	mov    edi,0xc00e0911
  406b54:	adc    DWORD PTR [eax],ebx
  406b56:	xadd   DWORD PTR [ecx],edx
  406b59:	or     ecx,DWORD PTR [edi]
  406b5b:	ret    0xea11
  406b5e:	push   cs
  406b5f:	ins    DWORD PTR es:[edi],dx
  406b60:	xor    DWORD PTR [eax],eax
  406b62:	fisttp QWORD PTR [esi]
  406b64:	jno    0x406b97
  406b66:	int3   
  406b67:	push   cs
  406b68:	js     0x406b9b
  406b6a:	iret   
  406b6b:	push   cs
  406b6c:	jg     0x406b9f
  406b6e:	sahf   
  406b6f:	push   cs
  406b70:	xor    DWORD PTR [ecx],0x31840ea1
  406b76:	nop
  406b77:	push   cs
  406b78:	xchg   BYTE PTR [ecx],dh
  406b7a:	or     DWORD PTR [esi],0xffffff8d
  406b7d:	xor    DWORD PTR [edx+0x75318e0e],esp
  406b83:	push   cs
  406b84:	jmp    0x406b97
  406b86:	test   BYTE PTR [esi],cl
  406b88:	lock adc DWORD PTR [edi-0x65ee06f2],eax
  406b8f:	push   cs
  406b90:	test   eax,0xab51d120
  406b95:	and    cl,cl
  406b97:	push   ecx
  406b98:	push   ecx
  406b99:	add    DWORD PTR [eax+0x3b015251],edi
  406b9f:	push   ebx
  406ba0:	ja     0x406ba3
  406ba2:	or     eax,0x1c20a022
  406ba7:	and    ah,BYTE PTR [ecx-0x5ddde0e0]
  406bad:	and    BYTE PTR [esi],cl
  406baf:	and    ah,BYTE PTR [ebx-0x5bddeee0]
  406bb5:	and    BYTE PTR [eax],ah
  406bb7:	and    ah,BYTE PTR [ebp-0x59ddece0]
  406bbd:	and    BYTE PTR [edx+0x21],dl
  406bc0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406bc1:	and    BYTE PTR [ebp+0x21],ah
  406bc4:	test   al,0x20
  406bc6:	add    BYTE PTR [eax+eax*8-0x3e8b56de],dl
  406bcd:	and    ch,BYTE PTR [edx-0x54dd4d8c]
  406bd3:	je     0x406ba0
  406bd5:	and    ch,BYTE PTR [esp+esi*4-0x6bffa1a1]
  406bdc:	pop    edi
  406bdd:	add    eax,DWORD PTR [eax]
  406bdf:	xchg   esp,eax
  406be0:	push   eax
  406be1:	pop    esi
  406be2:	add    BYTE PTR [eax+edx*2+0x62940003],dl
  406be9:	pop    esi
  406bea:	add    BYTE PTR [ebx+edi*1+0x54940003],dl
  406bf1:	pop    esi
  406bf2:	add    BYTE PTR [esp+ebp*2+0x3a940003],dl
  406bf9:	pop    esi
  406bfa:	add    BYTE PTR [edx+edi*1+0x2940003],dl
  406c01:	pop    edi
  406c02:	add    BYTE PTR [edx+eax*1-0x96bfffc],dl
  406c09:	pop    ebp
  406c0a:	add    BYTE PTR [ebp+ebx*4+0x77940004],dl
  406c11:	pop    esi
  406c12:	add    BYTE PTR [ebx+eax*2+0x78940004],dl
  406c19:	pop    esi
  406c1a:	add    BYTE PTR [esp+eax*2+0x19940004],dl
  406c21:	pop    ebp
  406c22:	add    BYTE PTR [ebp+eax*1+0x1a940003],dl
  406c29:	pop    ebp
  406c2a:	add    BYTE PTR [eax],al
  406c2c:	xchg   esp,eax
  406c2d:	push   es
  406c2e:	add    eax,DWORD PTR [eax]
  406c30:	xchg   esp,eax
  406c31:	sti    
  406c32:	pop    esp
  406c33:	add    BYTE PTR [edi+ebp*8-0x36bfffe],dl
  406c3a:	pop    esp
  406c3b:	add    BYTE PTR [eax+ecx*1+0x940003],dl
  406c42:	aas    
  406c43:	pop    ebp
  406c44:	xchg   esp,eax
  406c45:	add    bl,cl
  406c47:	add    dl,BYTE PTR [eax+eax*1+0x945d3e]
  406c4e:	retf   0x9402
  406c51:	add    BYTE PTR [ecx],cl
  406c53:	pop    ebp
  406c54:	xchg   esp,eax
  406c55:	add    al,dl
  406c57:	add    edx,DWORD PTR [eax+eax*1+0x945d08]
  406c5e:	mov    ebp,0xcb009403
  406c63:	pop    esp
  406c64:	xchg   esp,eax
  406c65:	add    BYTE PTR [edx],dl
  406c67:	add    al,0x94
  406c69:	add    dl,cl
  406c6b:	pop    esp
  406c6c:	xchg   esp,eax
  406c6d:	add    ah,bh
  406c6f:	add    dl,BYTE PTR [eax+eax*1+0x945cd3]
  406c76:	push   cs
  406c77:	add    al,0x94
  406c79:	add    dl,al
  406c7b:	pop    esp
  406c7c:	xchg   esp,eax
  406c7d:	add    dl,ch
  406c7f:	add    dl,BYTE PTR [eax+eax*1+0x945d69]
  406c86:	leave  
  406c87:	add    edx,DWORD PTR [eax+eax*1+0x945d60]
  406c8e:	loopne 0x406c93
  406c90:	add    BYTE PTR [eax+eax*1+0x945d74],dl
  406c97:	in     al,dx
  406c98:	add    dl,BYTE PTR [eax+eax*1+0x945d58]
  406c9f:	jns    0x406ca4
  406ca1:	xchg   esp,eax
  406ca2:	add    BYTE PTR [ebx+0x5c],bh
  406ca5:	xchg   esp,eax
  406ca6:	add    BYTE PTR [eax+0x4],bl
  406ca9:	xchg   esp,eax
  406caa:	add    BYTE PTR [edx+0x5c],bh
  406cad:	xchg   esp,eax
  406cae:	add    BYTE PTR [ebx+0x4],bl
  406cb1:	xchg   esp,eax
  406cb2:	add    BYTE PTR [ebp+0x5c],bl
  406cb5:	xchg   esp,eax
  406cb6:	add    BYTE PTR [edx],bh
  406cb8:	add    al,0x94
  406cba:	add    BYTE PTR [eax],al
  406cbc:	pop    esp
  406cbd:	push   0x98050000
  406cc2:	add    BYTE PTR [eax],al
  406cc4:	jg     0x406d1e
  406cc6:	add    BYTE PTR [eax],al
  406cc8:	les    edx,FWORD PTR [edi+0x487e0000]
  406cce:	add    BYTE PTR [eax],al
  406cd0:	(bad)  
  406cd1:	xchg   edi,eax
  406cd2:	add    BYTE PTR [eax],al
  406cd4:	popa   
  406cd5:	cmp    BYTE PTR [eax],al
  406cd7:	add    dh,al
  406cd9:	xchg   edi,eax
  406cda:	add    BYTE PTR [eax],al
  406cdc:	push   eax
  406cdd:	call   0x98016ce2
  406ce2:	add    BYTE PTR [eax],al
  406ce4:	test   eax,ebx
  406ce6:	add    BYTE PTR [eax],al
  406ce8:	or     bl,BYTE PTR [eax-0x378d0000]
  406cee:	add    BYTE PTR [eax],al
  406cf0:	or     BYTE PTR [eax+0x620000],bl
  406cf6:	mov    eax,0x980b0000
  406cfb:	add    BYTE PTR [eax],al
  406cfd:	push   esp
  406cfe:	call   0x981d6d03
  406d03:	add    BYTE PTR [eax],al
  406d05:	xchg   eax,ebx
  406d07:	add    BYTE PTR [eax],al
  406d09:	int3   
  406d0a:	xchg   edi,eax
  406d0b:	add    BYTE PTR [eax],al
  406d0d:	jbe    0x406cd7
  406d0f:	add    BYTE PTR [eax],al
  406d11:	mov    edi,0x53000097
  406d16:	mov    eax,0x97930000
  406d1b:	add    BYTE PTR [eax],al
  406d1d:	inc    edx
  406d1e:	push   0x97820000
  406d23:	add    BYTE PTR [eax],al
  406d25:	xchg   ebp,eax
  406d26:	pop    edi
  406d27:	add    BYTE PTR [eax],al
  406d29:	dec    ebp
  406d2a:	cwde   
  406d2b:	add    BYTE PTR [eax],al
  406d2d:	test   BYTE PTR [edi+0x0],cl
  406d30:	add    BYTE PTR [eax+ebx*4],bh
  406d33:	add    BYTE PTR [eax],al
  406d35:	add    BYTE PTR [ebx],al
  406d37:	mov    bh,0xff
  406d39:	jmp    DWORD PTR [ebx+0x4]
  406d3c:	add    BYTE PTR [eax],al
  406d3e:	adc    dh,BYTE PTR [edi+0x582ffff]
  406d44:	add    BYTE PTR [eax],al
  406d46:	pop    ebp
  406d47:	mov    bh,0xff
  406d49:	call   FWORD PTR [ebp+0x4c000004]
  406d4f:	mov    bh,0xff
  406d51:	dec    DWORD PTR [esp+eax*1-0x48a10000]
  406d58:	(bad)  
  406d59:	inc    DWORD PTR [eax]
  406d5b:	lahf   
  406d5c:	add    al,0x0
  406d5e:	add    dh,cl
  406d60:	mov    ch,0xff
  406d62:	dec    DWORD PTR [esi+0x19000004]
  406d68:	mov    dh,0xff
  406d6a:	call   FWORD PTR [ecx-0x2]
  406d6d:	(bad)  
  406d6e:	dec    DWORD PTR [eax]
  406d70:	mov    dh,0xff
  406d72:	call   FWORD PTR [eax-0x2]
  406d75:	(bad)  
  406d76:	(bad)  
  406d77:	(bad)  [ebp-0x1a40001]
  406d7d:	(bad)  
  406d7e:	dec    edx
  406d80:	mov    ch,0xff
  406d82:	call   FWORD PTR [edx-0x2]
  406d85:	(bad)  
  406d86:	push   DWORD PTR [ebp+0x5ffffb5]
  406d8c:	(bad)  
  406d8d:	(bad)  
  406d8e:	inc    esp
  406d90:	mov    ch,0xff
  406d92:	call   DWORD PTR [esi+edi*8]
  406d95:	(bad)  
  406d96:	call   ebx
  406d98:	mov    ch,0xff
  406d9a:	dec    DWORD PTR [ebp-0x3d000003]
  406da0:	mov    ch,0xff
  406da2:	(bad)  
  406da3:	jl     0x406da2
  406da5:	(bad)  
  406da6:	jmp    FWORD PTR ds:0x4fffffb7
  406dac:	add    al,0x0
  406dae:	add    BYTE PTR [eax+ebp*4-0x496bffa6],dl
  406db5:	add    eax,DWORD PTR [eax]
  406db7:	xchg   esp,eax
  406db8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406db9:	pop    edx
  406dba:	add    BYTE PTR [ebx+edx*1-0x6bfffffc],dl
  406dc1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406dc2:	pop    edx
  406dc3:	add    BYTE PTR [esp+edx*1-0x546bfffc],dl
  406dca:	pop    edx
  406dcb:	add    BYTE PTR [ecx+esi*8-0x536bfffd],dl
  406dd2:	pop    edx
  406dd3:	add    BYTE PTR [edx+esi*8-0x566bfffd],dl
  406dda:	pop    edx
  406ddb:	add    BYTE PTR [edi+edi*8-0x556bfffd],dl
  406de2:	pop    edx
  406de3:	add    BYTE PTR [eax+edx*2+0xf940003],dl
  406dea:	pop    edx
  406deb:	add    BYTE PTR [ebp+ebx*2+0x20940003],dl
  406df2:	pop    edx
  406df3:	add    BYTE PTR [esi+ebp*1+0xd940003],dl
  406dfa:	pop    edx
  406dfb:	add    BYTE PTR [ebx+ebx*4+0x1e940003],dl
  406e02:	pop    edx
  406e03:	add    BYTE PTR [esp+ebp*4+0x13940003],dl
  406e0a:	pop    edx
  406e0b:	add    BYTE PTR [ecx+edi*2+0x24940003],dl
  406e12:	pop    edx
  406e13:	add    BYTE PTR [edx+ecx*4+0x11940003],dl
  406e1a:	pop    edx
  406e1b:	add    BYTE PTR [edi+eiz*8+0x22940002],dl
  406e22:	pop    edx
  406e23:	add    BYTE PTR [eax],al
  406e25:	xchg   esp,eax
  406e26:	call   0xd46e2d
  406e2b:	mov    ecx,0x6b009459
  406e30:	add    al,0x94
  406e32:	add    BYTE PTR [eax+0x6a009459],bh
  406e38:	add    al,0x94
  406e3a:	add    BYTE PTR [ebx+0x65009459],bl
  406e40:	add    al,0x94
  406e42:	add    BYTE PTR [edx+0x64009459],bl
  406e48:	add    al,0x94
  406e4a:	add    BYTE PTR [ebp+0x67009459],bh
  406e50:	add    al,0x94
  406e52:	add    BYTE PTR [ecx+ebx*2+0x4660094],bh
  406e59:	xchg   esp,eax
  406e5a:	add    BYTE PTR [eax+0x49009459],cl
  406e60:	add    al,0x94
  406e62:	add    BYTE PTR [ebx+0x48009459],cl
  406e68:	add    al,0x94
  406e6a:	add    BYTE PTR [edx+0x59],cl
  406e6d:	xchg   esp,eax
  406e6e:	add    BYTE PTR [ebx+0x4d009404],cl
  406e74:	pop    ecx
  406e75:	xchg   esp,eax
  406e76:	add    BYTE PTR [edx+0x50009403],cl
  406e7c:	pop    ecx
  406e7d:	xchg   esp,eax
  406e7e:	add    BYTE PTR [ebp+0x43009404],al
  406e84:	pop    ecx
  406e85:	xchg   esp,eax
  406e86:	add    BYTE PTR [ebx+eax*1+0x12009400],al
  406e8d:	pop    ecx
  406e8e:	xchg   esp,eax
  406e8f:	add    dl,al
  406e91:	add    edx,DWORD PTR [eax+eax*1+0x945905]
  406e98:	lods   eax,DWORD PTR ds:[esi]
  406e99:	add    edx,DWORD PTR [eax+eax*1+0x94588e]
  406ea0:	pushf  
  406ea1:	add    edx,DWORD PTR [eax+eax*1+0x196e800]
  406ea8:	add    eax,ebp
  406eaa:	xchg   esi,eax
  406eab:	add    DWORD PTR [ecx],eax
  406ead:	call   0xe8417048
  406eb2:	xchg   esi,eax
  406eb3:	add    DWORD PTR [ebx],eax
  406eb5:	jmp    0x196:0xe8010196
  406ebc:	add    eax,ebp
  406ebe:	cdq    
  406ebf:	add    DWORD PTR [ecx],eax
  406ec1:	jmp    0x406e54
  406ec3:	add    al,BYTE PTR [edx]
  406ec5:	jmp    0x406e60
  406ec7:	add    al,BYTE PTR [edx]
  406ec9:	jmp    0x406e86
  406ecb:	add    eax,DWORD PTR [ebx+ebp*8]
  406ece:	cdq    
  406ecf:	add    al,BYTE PTR [ebx+ebp*8]
  406ed2:	xchg   ecx,eax
  406ed3:	add    al,BYTE PTR [edx]
  406ed5:	jmp    0x406e70
  406ed7:	cld    
  406ed8:	add    esp,ebp
  406eda:	xchg   ecx,eax
  406edb:	add    al,BYTE PTR [edx]
  406edd:	in     eax,dx
  406ede:	cdq    
  406edf:	add    al,BYTE PTR [edx]
  406ee1:	jmp    0x406e74
  406ee3:	add    al,BYTE PTR [ebp*8-0x14fdfe7d]
  406eea:	jnp    0x406eec
  406eec:	add    eax,ebp
  406eee:	add    BYTE PTR [esi+0x6ae40101],dl
  406ef4:	and    BYTE PTR [ecx],ah
  406ef6:	jmp    0xea467293
  406efb:	nop
  406efc:	add    eax,DWORD PTR [ebx]
  406efe:	jmp    0x390:0xea030398
  406f05:	add    eax,0x2fd98ea
  406f0a:	jmp    0x196:0xe8030390
  406f11:	add    ebp,eax
  406f13:	nop
  406f14:	add    DWORD PTR [ebx],eax
  406f16:	call   0xe84170b3
  406f1b:	nop
  406f1c:	add    DWORD PTR [eax],eax
  406f1e:	add    ch,bh
  406f20:	add    al,BYTE PTR [eax]
  406f22:	add    ch,bh
  406f24:	add    al,BYTE PTR [eax]
  406f26:	add    ch,ch
  406f28:	add    al,BYTE PTR [eax]
  406f2a:	add    ch,ch
  406f2c:	add    al,BYTE PTR [eax]
  406f2e:	add    ch,bh
  406f30:	add    al,BYTE PTR [eax]
  406f32:	add    ch,bh
  406f34:	add    al,BYTE PTR [eax]
  406f36:	add    ch,ch
  406f38:	add    al,BYTE PTR [eax]
  406f3a:	add    ch,ch
  406f3c:	add    al,BYTE PTR [eax]
  406f3e:	add    BYTE PTR [ebp-0x6edcffe5],bh
  406f44:	and    DWORD PTR [esi],esp
  406f46:	daa    
  406f47:	lods   eax,DWORD PTR ds:[esi]
  406f48:	add    ch,BYTE PTR [edx]
  406f4a:	sub    ebp,DWORD PTR [ebp-0x32ffd1d9]
  406f50:	jmp    0x406f83
  406f52:	xor    eax,DWORD PTR [eax]
  406f54:	shr    edi,0x35
  406f57:	aaa    
  406f58:	(bad)
  406f5b:	jmp    FWORD PTR [ebp+0x7d000002]
  406f61:	pop    ebp
  406f62:	popa   
  406f63:	arpl   WORD PTR [ecx-0x6a989aa1],dx
  406f69:	arpl   WORD PTR [ecx+0x6b],bp
  406f6c:	jns    0x406fd7
  406f6e:	ins    DWORD PTR es:[edi],dx
  406f6f:	outs   dx,DWORD PTR ds:[esi]
  406f70:	dec    ebp
  406f71:	sub    eax,0x31417371
  406f76:	jne    0x406fef
  406f78:	inc    ebp
  406f79:	xor    eax,0x26d0079
  406f7e:	pop    esi
  406f7f:	pop    edi
  406f80:	pop    ebp
  406f81:	pop    ebp
  406f82:	popa   
  406f83:	arpl   WORD PTR [ecx+0x61],dx
  406f86:	gs addr16 push ebp
  406f89:	imul   ebp,DWORD PTR gs:[ebx-0x7],0xd6f6d68
  406f91:	sub    eax,0x31017371
  406f96:	jne    0x40700f
  406f98:	xchg   esp,eax
  406f99:	outs   dx,DWORD PTR ds:[esi]
  406f9a:	fdivr  QWORD PTR [ecx-0x6c]
  406f9d:	add    DWORD PTR [ebx],0x7e
  406fa0:	xchg   esp,eax
  406fa1:	add    eax,DWORD PTR [bx+si]
  406fa4:	xchg   esp,eax
  406fa5:	add    eax,DWORD PTR [bx+si]
  406fa8:	xchg   esp,eax
  406fa9:	add    eax,DWORD PTR [bx+si]
  406fac:	xchg   esp,eax
  406fad:	add    eax,DWORD PTR [bx+si]
  406fb0:	xchg   esp,eax
  406fb1:	add    eax,DWORD PTR [bx+si]
  406fb4:	xchg   esp,eax
  406fb5:	add    eax,DWORD PTR [bx+si]
  406fb8:	add    BYTE PTR [edi+eiz*2+0x67940003],dl
  406fbf:	add    eax,DWORD PTR [eax]
  406fc1:	xchg   esp,eax
  406fc2:	add    eax,DWORD PTR [bx+si]
  406fc5:	xchg   esp,eax
  406fc6:	add    eax,DWORD PTR [bx+si]
  406fc9:	xchg   esp,eax
  406fca:	add    eax,DWORD PTR [bx+si]
  406fcd:	xchg   esp,eax
  406fce:	add    eax,DWORD PTR [bx+si]
  406fd1:	xchg   esp,eax
  406fd2:	add    eax,DWORD PTR [bx+si]
  406fd5:	xchg   esp,eax
  406fd6:	add    eax,DWORD PTR [bx+si]
  406fd9:	xchg   esp,eax
  406fda:	add    eax,DWORD PTR [bx+si]
  406fdd:	xchg   esp,eax
  406fde:	add    eax,DWORD PTR [bx+si]
  406fe1:	xchg   esp,eax
  406fe2:	add    eax,DWORD PTR [bx+si]
  406fe5:	xchg   esp,eax
  406fe6:	add    eax,DWORD PTR [bx+si]
  406fe9:	xchg   esp,eax
  406fea:	add    eax,DWORD PTR [bx+si]
  406fed:	xchg   esp,eax
  406fee:	add    eax,DWORD PTR [bx+si]
  406ff1:	xchg   esp,eax
  406ff2:	add    eax,DWORD PTR [bx+si]
  406ff5:	xchg   esp,eax
  406ff6:	add    eax,DWORD PTR [bx+si]
  406ff9:	xchg   esp,eax
  406ffa:	add    eax,DWORD PTR [bx+si]
  406ffd:	xchg   esp,eax
  406ffe:	add    eax,DWORD PTR [bx+si]
  407001:	xchg   esp,eax
  407002:	add    eax,DWORD PTR [bx+si]
  407005:	xchg   esp,eax
  407006:	add    eax,DWORD PTR [bx+si]
  407009:	xchg   esp,eax
  40700a:	add    eax,DWORD PTR [bx+si]
  40700d:	xchg   esp,eax
  40700e:	add    eax,DWORD PTR [bx+si]
  407011:	xchg   esp,eax
  407012:	add    cl,ch
  407014:	add    edx,DWORD PTR [eax+eax*1+0x9403e9]
  40701b:	jmp    0xd47023
  407020:	jmp    0x6410428
  407025:	push   esi
  407026:	or     edx,DWORD PTR [ebp-0x2]
  407029:	push   ebp
  40702a:	add    edx,DWORD PTR [ebp-0xa]
  40702d:	push   ebp
  40702e:	sti    
  40702f:	push   esp
  407030:	out    dx,al
  407031:	push   ebp
  407032:	repz push esp
  407034:	out    0x55,al
  407036:	jmp    0x40708c
  407038:	ficom  WORD PTR [ebp-0x1d]
  40703b:	push   esp
  40703c:	(bad)  
  40703d:	push   ebp
  40703e:	fist   DWORD PTR [esi+ecx*8+0x55]
  407042:	rcl    DWORD PTR [esi+eax*8+0x55],cl
  407046:	retf   
  407047:	push   esp
  407048:	mov    esi,0xb654c355
  40704d:	push   ebp
  40704e:	mov    ebx,0xb355ae54
  407053:	push   esp
  407054:	jmp    0xe542065b
  407059:	(bad)  
  40705a:	cdq    
  40705b:	std    
  40705c:	loopne 0x407068
  40705e:	fwait
  40705f:	push   esp
  407060:	mov    ss,WORD PTR [ebp-0x6d]
  407063:	push   esp
  407064:	xchg   BYTE PTR [edx],cl
  407066:	lahf   
  407067:	add    al,0xec
  407069:	add    eax,0x55765393
  40706e:	jnp    0x4070c4
  407070:	outs   dx,BYTE PTR ds:[esi]
  407071:	push   ebp
  407072:	jae    0x4070c8
  407074:	push   bp
  407076:	imul   edx,DWORD PTR [esi+ebx*2+0x55],0x63
  40707b:	push   esp
  40707c:	push   esi
  40707d:	push   ebp
  40707e:	pop    ebx
  40707f:	push   esp
  407080:	dec    esi
  407081:	push   ebp
  407082:	add    BYTE PTR [ebx+0x54],dl
  407085:	inc    esi
  407086:	or     bl,BYTE PTR [edi-0x6cfa13fc]
  40708c:	push   ebx
  40708d:	add    BYTE PTR [esi],dh
  40708f:	loope  0x4070e4
  407091:	jmp    FWORD PTR [esi]
  407093:	leave  
  407094:	push   ebx
  407095:	jmp    DWORD PTR [esi]
  407097:	rcl    DWORD PTR [ebx-0x1],0x1e
  40709b:	leave  
  40709c:	push   ebx
  40709d:	call   DWORD PTR [esi]
  40709f:	rcl    DWORD PTR [ebx-0x1],0xe
  4070a3:	imul   edx,DWORD PTR [ebx-0x1],0x97e9
  4070aa:	jmp    0xe9407146
  4070af:	xchg   edi,eax
  4070b0:	add    BYTE PTR [eax],al
  4070b2:	jmp    0xe940714e
  4070b7:	xchg   edi,eax
  4070b8:	add    BYTE PTR [eax],al
  4070ba:	jmp    0xe9407156
  4070bf:	xchg   edi,eax
  4070c0:	add    BYTE PTR [eax],al
  4070c2:	jmp    0xe940715e
  4070c7:	xchg   edi,eax
  4070c8:	add    BYTE PTR [eax],al
  4070ca:	jmp    0xe9407166
  4070cf:	xchg   edi,eax
  4070d0:	add    BYTE PTR [eax],al
  4070d2:	jmp    0xe940716e
  4070d7:	xchg   edi,eax
  4070d8:	add    BYTE PTR [eax],al
  4070da:	jmp    0xe9407176
  4070df:	xchg   edi,eax
  4070e0:	add    BYTE PTR [eax],al
  4070e2:	jmp    0xe940717e
  4070e7:	add    BYTE PTR [edi-0x68170000],dl
  4070ed:	add    BYTE PTR [eax],al
  4070ef:	jmp    0xe940718b
  4070f4:	xchg   edi,eax
  4070f5:	add    BYTE PTR [eax],al
  4070f7:	jmp    0xe9407193
  4070fc:	xchg   edi,eax
  4070fd:	add    BYTE PTR [eax],al
  4070ff:	jmp    0xe940719b
  407104:	xchg   edi,eax
  407105:	add    BYTE PTR [eax],al
  407107:	add    BYTE PTR ds:0x2dffffff,bh
  40710d:	(bad)  
  40710e:	(bad)  
  40710f:	jmp    FWORD PTR ds:0x3dffffff
  407115:	(bad)  
  407116:	(bad)  
  407117:	(bad)  
  407118:	cmp    eax,0x2dffffff
  40711d:	(bad)  
  40711e:	(bad)  
  40711f:	jmp    FWORD PTR ds:0xfdffffff
  407125:	(bad)  
  407126:	(bad)  
  407127:	(bad)  
  407128:	std    
  407129:	(bad)  
  40712a:	(bad)  
  40712b:	(bad)  
  40712c:	in     eax,dx
  40712d:	(bad)  
  40712e:	(bad)  
  40712f:	(bad)  
  407130:	in     eax,dx
  407131:	(bad)  
  407132:	(bad)  
  407133:	(bad)  
  407134:	std    
  407135:	(bad)  
  407136:	(bad)  
  407137:	(bad)  
  407138:	std    
  407139:	(bad)  
  40713a:	(bad)  
  40713b:	(bad)  
  40713c:	in     eax,dx
  40713d:	(bad)  
  40713e:	(bad)  
  40713f:	(bad)  
  407140:	in     eax,dx
  407141:	(bad)  
  407142:	(bad)  
  407143:	(bad)  
  407144:	mov    ebp,0xbdfffffe
  407149:	sti    
  40714a:	add    BYTE PTR [eax],al
  40714c:	add    BYTE PTR [ebx+edi*8-0x453ff00],ch
  407153:	add    BYTE PTR [ecx],al
  407155:	mov    esp,0xbc0100fb
  40715a:	sti    
  40715b:	add    BYTE PTR [ecx],al
  40715d:	lods   al,BYTE PTR ds:[esi]
  40715e:	sti    
  40715f:	add    BYTE PTR [ecx],al
  407161:	lods   al,BYTE PTR ds:[esi]
  407162:	sti    
  407163:	add    BYTE PTR [ecx],al
  407165:	jl     0x407164
  407167:	add    BYTE PTR [eax],al
  407169:	jl     0x407168
  40716b:	add    BYTE PTR [ecx],al
  40716d:	ins    BYTE PTR es:[edi],dx
  40716e:	std    
  40716f:	add    BYTE PTR [ecx],al
  407171:	ins    BYTE PTR es:[edi],dx
  407172:	std    
  407173:	add    BYTE PTR [ecx],al
  407175:	jl     0x407174
  407177:	add    BYTE PTR [ecx],al
  407179:	jl     0x407178
  40717b:	add    BYTE PTR [ecx],al
  40717d:	ins    BYTE PTR es:[edi],dx
  40717e:	std    
  40717f:	add    BYTE PTR [ecx],al
  407181:	xchg   esp,eax
  407182:	push   0x68950104
  407187:	add    al,0x1
  407189:	xchg   ebp,eax
  40718a:	push   0x68950104
  40718f:	add    al,0x1
  407191:	xchg   ebp,eax
  407192:	push   0x68950104
  407197:	add    al,0x1
  407199:	xchg   ebp,eax
  40719a:	push   0x68950104
  40719f:	add    al,0x1
  4071a1:	xchg   ebp,eax
  4071a2:	push   0x68950104
  4071a7:	add    al,0x1
  4071a9:	xchg   esp,eax
  4071aa:	add    eax,DWORD PTR [bx+si]
  4071ad:	xchg   esp,eax
  4071ae:	add    eax,DWORD PTR [bx+si]
  4071b1:	add    BYTE PTR [edi+eiz*2+0x67940003],dl
  4071b8:	add    eax,DWORD PTR [eax]
  4071ba:	xchg   esp,eax
  4071bb:	add    eax,DWORD PTR [bx+si]
  4071be:	xchg   esp,eax
  4071bf:	add    eax,DWORD PTR [bx+si]
  4071c2:	xchg   esp,eax
  4071c3:	add    eax,DWORD PTR [bx+si]
  4071c6:	xchg   esp,eax
  4071c7:	add    eax,DWORD PTR [bx+si]
  4071ca:	xchg   esp,eax
  4071cb:	add    eax,DWORD PTR [bx+si]
  4071ce:	xchg   esp,eax
  4071cf:	add    eax,DWORD PTR [bx+si]
  4071d2:	xchg   esp,eax
  4071d3:	add    eax,DWORD PTR [bx+si]
  4071d6:	xchg   esp,eax
  4071d7:	add    eax,DWORD PTR [bx+si]
  4071da:	xchg   esp,eax
  4071db:	add    eax,DWORD PTR [bx+si]
  4071de:	xchg   esp,eax
  4071df:	add    eax,DWORD PTR [bx+si]
  4071e2:	xchg   esp,eax
  4071e3:	add    eax,DWORD PTR [bx+si]
  4071e6:	xchg   esp,eax
  4071e7:	add    eax,DWORD PTR [bx+si]
  4071ea:	xchg   esp,eax
  4071eb:	add    eax,DWORD PTR [bx+si]
  4071ee:	xchg   esp,eax
  4071ef:	add    eax,DWORD PTR [bx+si]
  4071f2:	xchg   esp,eax
  4071f3:	add    eax,DWORD PTR [bx+si]
  4071f6:	xchg   esp,eax
  4071f7:	add    eax,DWORD PTR [bx+si]
  4071fa:	xchg   esp,eax
  4071fb:	add    cl,ch
  4071fd:	add    edx,DWORD PTR [eax+eax*1+0x9403e9]
  407204:	jmp    0xe941060c
  407209:	add    edx,DWORD PTR [eax+eax*1+0x9403e9]
  407210:	jmp    0xe9410618
  407215:	add    eax,DWORD PTR [eax]
  407217:	xchg   esp,eax
  407218:	add    cl,ch
  40721a:	add    edx,DWORD PTR [eax+eax*1+0x9403e9]
  407221:	jmp    0xe9410629
  407226:	add    edx,DWORD PTR [eax+eax*1+0x9403e9]
  40722d:	pop    ecx
  40722e:	enter  0x7e42,0x64
  407232:	lahf   
  407233:	rcl    DWORD PTR [eax+0x61],0x2d
  407237:	xlat   BYTE PTR ds:[ebx]
  407238:	cmp    eax,0xa7a5f792
  40723d:	test   al,0x13
  40723f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407240:	sti    
  407241:	or     eax,0xcc39f0c2
  407246:	in     eax,0xc1
  407248:	int    0xb0
  40724a:	fldenv ds:0xc3b779c0
  407250:	push   eax
  407251:	bound  ebx,QWORD PTR [edi+0x68]
  407254:	xor    eax,0xb4c25b61
  407259:	dec    eax
  40725a:	mov    edx,0x68694542
  40725f:	loop   0x4072a5
  407261:	or     al,0xa9
  407263:	stc    
  407264:	pop    edx
  407265:	call   0x16e8:0xb288221
  40726c:	test   eax,0x33a3e0e5
  407271:	fdivr  QWORD PTR [ebp+0x7000758a]
  407277:	(bad)  
  407278:	test   al,0xff
  40727a:	cwde   
  40727b:	add    BYTE PTR [edi+0x7e790000],dl
  407281:	ins    BYTE PTR es:[edi],dx
  407282:	mov    DWORD PTR ss:[esi-0x68],edi
  407286:	test   DWORD PTR ss:[esi-0x5172c96c],ebp
  40728d:	ret    
  40728e:	jmp    0x5a833d1e
  407293:	add    eax,0x3c031125
  407298:	stc    
  407299:	loop   0x4072e0
  40729b:	sti    
  40729c:	or     eax,0xcf245474
  4072a1:	add    DWORD PTR cs:[edi+ecx*2-0x6d],0x14acc556
  4072aa:	aaa    
  4072ab:	int    0xac
  4072ad:	les    esi,FWORD PTR [esi]
  4072af:	mov    ch,0x9c
  4072b1:	mov    ah,0x36
  4072b3:	popf   
  4072b4:	pushf  
  4072b5:	in     al,0x36
  4072b7:	test   DWORD PTR [esp+edx*8+0x243dfdf5],ecx
  4072be:	add    eax,0xd448f886
  4072c3:	xchg   ecx,eax
  4072c4:	and    al,0x4
  4072c6:	hlt    
  4072c7:	push   eax
  4072c8:	inc    edi
  4072c9:	dec    ebx
  4072ca:	test   DWORD PTR es:[eax-0x76],eax
  4072ce:	repz retf 0x2f25
  4072d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4072d3:	pop    ebp
  4072d4:	pushf  
  4072d5:	fs aaa 
  4072d7:	lds    ecx,FWORD PTR [esp+edx*2+0x48cad37]
  4072de:	cmp    ch,dh
  4072e0:	add    BYTE PTR [edi-0x7002c80c],cl
  4072e6:	and    al,0x38
  4072e8:	fs pop ebp
  4072ea:	dec    esp
  4072eb:	fwait
  4072ec:	(bad)  
  4072ed:	dec    edx
  4072ee:	(bad)  
  4072ef:	int    0x0
  4072f1:	push   cs
  4072f2:	shl    esp,cl
  4072f4:	push   edi
  4072f5:	daa    
  4072f6:	jmp    0x6504bc72
  4072fb:	out    0xfe,eax
  4072fd:	and    edi,DWORD PTR [eax*2-0x6caded2d]
  407304:	cmp    cl,bl
  407306:	sti    
  407307:	mov    ds:0xb3fb1938,eax
  40730c:	cmp    BYTE PTR [ecx],bl
  40730e:	sti    
  40730f:	ret    
  407310:	cmp    BYTE PTR [ecx-0x66c72c05],cl
  407316:	popf   
  407317:	push   0xffffffaa
  407319:	test   BYTE PTR [ebp+0xe],al
  40731c:	js     0x407316
  40731e:	(bad)  
  40731f:	cmp    BYTE PTR [edx],ch
  407321:	xchg   edi,eax
  407322:	mov    dh,0x42
  407324:	outs   dx,BYTE PTR ds:[esi]
  407325:	not    DWORD PTR [ecx-0x28]
  407328:	pop    ebx
  407329:	cmc    
  40732a:	xchg   DWORD PTR [edi+edi*8+0x39092a02],edi
  407331:	dec    ecx
  407332:	cli    
  407333:	push   ebx
  407334:	cmp    DWORD PTR [ecx],ebx
  407336:	cli    
  407337:	arpl   WORD PTR [ecx],di
  407339:	sbb    edx,edi
  40733b:	jae    0x407376
  40733d:	jns    0x407339
  40733f:	cmp    DWORD PTR [ecx],0x69
  407342:	std    
  407343:	push   edx
  407344:	xor    al,0x0
  407346:	and    cl,BYTE PTR [eax-0x4159e953]
  40734c:	shr    BYTE PTR [edx+0x43b3b269],0xb0
  407353:	mov    edx,0xf1feb17
  407358:	pop    eax
  407359:	and    ebp,esi
  40735b:	xor    BYTE PTR [edx],ch
  40735d:	dec    ebp
  40735e:	stc    
  40735f:	cld    
  407360:	add    edi,DWORD PTR [edx]
  407362:	test   eax,0x993a13f8
  407367:	clc    
  407368:	and    edi,DWORD PTR [edx]
  40736a:	xchg   esp,eax
  40736b:	inc    ebx
  40736c:	or     DWORD PTR [esi+ecx*8],esi
  40736f:	cmp    ecx,DWORD PTR [ecx]
  407371:	inc    esp
  407372:	(bad)  
  407373:	in     al,dx
  407374:	loopne 0x4073f5
  407376:	out    0x43,al
  407378:	idiv   BYTE PTR [eax]
  40737a:	inc    ebp
  40737b:	push   0xffffff8e
  40737d:	leave  
  40737e:	repnz or DWORD PTR [ebx-0xbdee7f0],edi
  407385:	sbb    edx,0xc6d5c3f7
  40738b:	ret    
  40738c:	or     DWORD PTR [esi+ecx*4+0x7ec40a7b],esi
  407393:	adc    ecx,DWORD PTR [edx]
  407395:	aam    0x7e
  407397:	jmp    0x4073a2
  407399:	in     al,0x6e
  40739b:	ret    
  40739c:	or     esp,esi
  40739e:	outs   dx,BYTE PTR ds:[esi]
  40739f:	ficomp WORD PTR [esi-0x70439606]
  4073a5:	add    al,0x1f
  4073a7:	(bad)  [eax+ebx*1+0x0]
  4073ab:	lea    eax,[ecx]
  4073ad:	sub    al,dh
  4073af:	adc    al,0xa9
  4073b1:	addr16 mov ecx,0x860cf876
  4073b7:	xor    BYTE PTR [esp+eax*1+0xa83af64],ch
  4073be:	je     0x40736f
  4073c0:	fisttp DWORD PTR [ecx]
  4073c2:	test   BYTE PTR [edi-0x606bf62d],bl
  4073c8:	retf   
  4073c9:	or     DWORD PTR [edi+ecx*4-0x5249767d],esp
  4073d0:	cmc    
  4073d1:	add    bh,BYTE PTR [eax-0x30614a6c]
  4073d7:	and    ebp,ebp
  4073d9:	fwait
  4073da:	sbb    DWORD PTR [edi-0x5334da8d],esp
  4073e0:	adc    bl,al
  4073e2:	sbb    BYTE PTR [esi],bh
  4073e4:	add    bl,dh
  4073e6:	fistp  QWORD PTR [ebx]
  4073e8:	or     al,0xfd
  4073ea:	(bad)  
  4073ec:	or     al,0xc5
  4073ee:	xadd   BYTE PTR [ecx*8+0x350cd80f],cl
  4073f6:	adc    al,ah
  4073f8:	or     al,0x1d
  4073fa:	adc    BYTE PTR [esi],dh
  4073fc:	ja     0x407402
  4073fe:	mov    ds:0xa4eff96b,al
  407403:	xchg   ebp,ebp
  407405:	fs (bad) 
  407408:	icebp  
  407409:	push   ds
  40740a:	pop    esi
  40740b:	sbb    edi,DWORD PTR [ecx]
  40740d:	pusha  
  40740e:	scas   al,BYTE PTR es:[edi]
  40740f:	add    BYTE PTR [edx+0x25],cl
  407412:	fadd   st,st(0)
  407414:	mov    ds:0x300f2103,al
  407419:	or     al,0x39
  40741b:	wrmsr  
  40741d:	or     al,0x5
  40741f:	adc    DWORD PTR [eax+0xb],esp
  407422:	in     eax,dx
  407423:	adc    al,bl
  407425:	or     esi,DWORD PTR [ebp-0x52b23ff0]
  40742b:	and    al,0xe4
  40742d:	sbb    DWORD PTR [edi],eax
  40742f:	and    al,0x39
  407431:	add    al,0xfd
  407433:	push   ebx
  407434:	adc    BYTE PTR [esi-0x38eebf35],dl
  40743a:	(bad)  
  40743b:	xor    eax,0x430c7aea
  407440:	pushf  
  407441:	or     eax,0xad8100b
  407446:	mov    ch,0xf
  407448:	ror    BYTE PTR [edx],0xbd
  40744b:	(bad)  
  40744d:	or     ch,cl
  40744f:	ror    ebx,cl
  407451:	dec    esp
  407452:	adc    DWORD PTR [esp+edx*4],eax
  407455:	add    BYTE PTR [ebx+0x727a7bbd],ah
  40745b:	adc    DWORD PTR [edi+esi*4-0x1],ebx
  40745f:	paddq  mm6,QWORD PTR ds:0x773488fd
  407466:	in     eax,dx
  407467:	arpl   WORD PTR ds:0x9964f189,cx
  40746d:	aas    
  40746e:	leave  
  40746f:	lea    ebx,[esp+edi*1-0x55ffbacb]
  407476:	cwde   
  407477:	ss push ebp
  407479:	mov    ds:0x8a353690,al
  40747e:	inc    esp
  40747f:	cmp    BYTE PTR [ecx+0x71385498],ah
  407485:	into   
  407486:	fisubr DWORD PTR [ecx]
  407488:	inc    ecx
  407489:	call   0xca6e2476
  40748e:	test   al,0xf9
  407490:	inc    esp
  407491:	mov    edi,0x93f29918
  407496:	xlat   BYTE PTR ds:[ebx]
  407497:	les    esp,FWORD PTR [esi-0x48467c74]
  40749d:	sbb    ch,0x39
  4074a0:	in     eax,0x9d
  4074a2:	xor    al,0x3a
  4074a4:	adc    DWORD PTR [esi-0x71f6c5d4],ecx
  4074aa:	cmp    bl,BYTE PTR fs:[ecx]
  4074ad:	sahf   
  4074ae:	push   esp
  4074af:	cmp    dl,BYTE PTR [ecx]
  4074b1:	sahf   
  4074b2:	adc    edx,DWORD PTR [esi-0x417ef397]
  4074b8:	inc    edx
  4074b9:	fs sbb esp,esp
  4074bc:	add    BYTE PTR [eax-0x2d],al
  4074bf:	mov    al,ds:0xf247d9d7
  4074c4:	out    0x6f,al
  4074c6:	jmp    0x4074ee
  4074c8:	sahf   
  4074c9:	mov    DWORD PTR [ebp+0x3],0x3b7c9c71
  4074d0:	jns    0x40746e
  4074d2:	je     0x40750f
  4074d4:	jno    0x407462
  4074d6:	mov    BYTE PTR [ebx],bh
  4074d8:	add    BYTE PTR [eax],al
  4074da:	adc    ecx,edi
  4074dc:	mov    edi,0xe3f8f53b
  4074e1:	loop   0x407549
  4074e3:	pop    esp
  4074e4:	inc    esi
  4074e5:	sub    eax,0xc91717ff
  4074ea:	jns    0x407473
  4074ec:	cdq    
  4074ed:	mov    dh,0xee
  4074ef:	inc    esp
  4074f0:	adc    dh,ah
  4074f2:	mov    edx,0x3d650470
  4074f7:	cwde   
  4074f8:	fsub   st,st(3)
  4074fa:	jae    0x4074f6
  4074fc:	and    edi,DWORD PTR ds:0xffffcf7d
  407502:	xchg   ecx,eax
  407503:	add    al,0x0
  407505:	add    BYTE PTR [ecx-0xd],dh
  407508:	jg     0x40753e
  40750a:	jmp    0x8674fd02
  40750f:	mov    dh,0x2c
  407511:	mov    ebx,eax
  407513:	pop    es
  407514:	xor    al,0xc4
  407516:	xchg   edx,eax
  407517:	jmp    0xa0e87daf
  40751c:	pushf  
  40751d:	xchg   esp,eax
  40751e:	out    0x8f,al
  407520:	jp     0x407589
  407522:	test   ebp,ebp
  407524:	jle    0x40759a
  407526:	loopne 0x407571
  407528:	push   edx
  407529:	aaa    
  40752a:	ss imul al
  40752d:	cmp    ebp,esi
  40752f:	clc    
  407530:	mov    ah,0x3a
  407532:	mov    ds:0x243c63f8,eax
  407537:	sti    
  407538:	mov    ch,0x3c
  40753a:	lods   eax,DWORD PTR ds:[esi]
  40753b:	pop    esi
  40753c:	xchg   ebx,eax
  40753d:	popf   
  40753e:	add    BYTE PTR [esi-0x51],dh
  407541:	push   cs
  407542:	add    ecx,DWORD PTR [eax-0x234b6744]
  407548:	cmp    BYTE PTR [ecx-0x34],ah
  40754b:	adc    ah,bh
  40754d:	shl    BYTE PTR [edi-0x5df2d1c3],0x94
  407554:	mov    ecx,0x5b835439
  407559:	or     ah,BYTE PTR [ebx+edi*2]
  40755c:	add    cl,BYTE PTR [ebx]
  40755e:	inc    ebp
  40755f:	jae    0x40754d
  407561:	or     ah,BYTE PTR [ebx+0x6b]
  407564:	adc    BYTE PTR [ebx],cl
  407566:	jg     0x4075cb
  407568:	xchg   BYTE PTR [ebx],cl
  40756a:	inc    ecx
  40756b:	or     BYTE PTR [ebx*1-0xe186fd6],bl
  407572:	call   0x97ca:0x68490cdd
  407579:	inc    ecx
  40757a:	inc    ecx
  40757b:	jnp    0x40755e
  40757d:	push   edi
  40757e:	pop    edi
  40757f:	add    ebp,ecx
  407581:	pop    ebx
  407582:	dec    ebp
  407583:	jmp    0xa59d8aa9
  407588:	add    BYTE PTR ds:0x14d6a56f,dl
  40758e:	nop
  40758f:	test   DWORD PTR [edx+0x15],ebp
  407592:	retf   0x985
  407595:	adc    eax,0xd5b3fdd
  40759a:	mov    al,ds:0x5887a97
  40759f:	fstp   DWORD PTR [eax+0x23]
  4075a2:	aaa    
  4075a3:	add    dh,dl
  4075a5:	cmc    
  4075a6:	sub    ah,dl
  4075a8:	jae    0x407590
  4075aa:	fiadd  WORD PTR [eax+0x2d]
  4075ad:	sub    eax,0x630882a5
  4075b2:	setnp  al
  4075b5:	add    al,0x10
  4075b7:	ins    BYTE PTR es:[edi],dx
  4075b8:	leave  
  4075b9:	jae    0x4075cb
  4075bb:	mov    ds:0x221153c1,eax
  4075c0:	stos   BYTE PTR es:[edi],al
  4075c1:	cmp    DWORD PTR [ecx],edx
  4075c3:	aaa    
  4075c4:	mov    ds:0xc99891b9,al
  4075c9:	sub    eax,0x38c4ff
  4075ce:	sub    esp,DWORD PTR [ebx-0x57]
  4075d1:	mov    dl,0xb2
  4075d3:	fwait
  4075d4:	push   ss
  4075d5:	pop    ecx
  4075d6:	adc    eax,0xba621234
  4075db:	sbb    eax,0xca6cfcdc
  4075e0:	fcom   DWORD PTR [edx]
  4075e2:	mov    bl,0x11
  4075e4:	lds    edx,FWORD PTR [edx]
  4075e6:	sahf   
  4075e7:	adc    eax,eax
  4075e9:	adc    cl,dl
  4075eb:	adc    DWORD PTR [ebp-0x76ee68ee],ebp
  4075f1:	adc    ch,BYTE PTR [ebp+0x1b53132b]
  4075f7:	or     DWORD PTR [eax-0x1f96d4cd],0xffffffdb
  4075fe:	ret    
  4075ff:	xor    al,0x1
  407601:	mov    eax,ds:0xaf22d96e
  407606:	inc    eax
  407607:	fadd   QWORD PTR [eax]
  407609:	xor    al,0xb
  40760b:	mov    al,ds:0x7c86caaf
  407610:	xor    BYTE PTR [esi],cl
  407612:	in     al,0x88
  407614:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407615:	call   0x276cb558
  40761a:	aam    0x67
  40761c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40761d:	test   BYTE PTR [ebp-0x17],cl
  407620:	or     edi,DWORD PTR [eax]
  407622:	or     BYTE PTR [eax],bh
  407624:	or     ecx,DWORD PTR [ecx]
  407626:	or     BYTE PTR [edx+0xb],dh
  407629:	inc    esp
  40762a:	mov    fs,WORD PTR [eax-0x6731a21]
  407630:	and    eax,0xb6ee5d6b
  407635:	sub    al,0xa8
  407637:	outs   dx,DWORD PTR ds:[esi]
  407638:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407639:	mov    eax,ds:0x5374933
  40763e:	xchg   DWORD PTR [ebx+0x4b31e851],eax
  407644:	ins    BYTE PTR es:[edi],dx
  407645:	jae    0x4076b7
  407647:	add    ah,dl
  407649:	push   cs
  40764a:	sbb    eax,0xf89860ec
  40764f:	cdq    
  407650:	mov    ch,0x3c
  407652:	xor    edi,ebp
  407654:	hlt    
  407655:	aaa    
  407656:	mov    WORD PTR [ebp-0x2ee3eadc],ss
  40765c:	or     eax,0x6b19a7af
  407661:	(bad)  
  407662:	fisubr DWORD PTR [eax+0x53]
  407665:	lahf   
  407666:	aaa    
  407667:	cld    
  407668:	mov    eax,0xe136532f
  40766d:	add    BYTE PTR [eax+0x35327916],dl
  407673:	sub    eax,DWORD PTR [ecx]
  407675:	fdivr  DWORD PTR [edi-0x50]
  407678:	jge    0x407694
  40767a:	or     DWORD PTR [ecx+0x21],ebp
  40767d:	ret    
  40767e:	mov    ds:0x33308c27,eax
  407683:	jno    0x407666
  407685:	test   DWORD PTR [edi-0xa],0x72773301
  40768c:	xor    WORD PTR [edx-0x1e],cx
  407690:	dec    eax
  407692:	out    0xc2,eax
  407694:	aad    0x31
  407696:	sub    ebx,DWORD PTR [edx]
  407698:	jmp    0x407659
  40769a:	pop    esp
  40769b:	shl    DWORD PTR [ecx],0xe1
  40769e:	bswap  esp
  4076a0:	in     al,0xef
  4076a2:	dec    ecx
  4076a3:	mov    dh,0xd5
  4076a5:	int3   
  4076a6:	in     eax,dx
  4076a7:	and    eax,0x70b0532d
  4076ac:	rcr    DWORD PTR [ebp-0x5e],1
  4076af:	lds    edi,FWORD PTR [ebx]
  4076b1:	dec    ecx
  4076b2:	retf   
  4076b3:	xlat   BYTE PTR ds:[ebx]
  4076b4:	and    edx,edx
  4076b6:	xchg   edi,eax
  4076b7:	xchg   ebx,eax
  4076b8:	push   edx
  4076b9:	lock xor ecx,DWORD PTR [ebx-0x7c670e54]
  4076c0:	imul   eax,DWORD PTR [eax],0x5b
  4076c3:	mov    al,0x41
  4076c5:	pop    edx
  4076c6:	aam    0xdf
  4076c8:	daa    
  4076c9:	xchg   ebp,eax
  4076ca:	xor    ch,BYTE PTR [edi+ebp*2-0x6a]
  4076ce:	mov    al,ds:0xa836b4
  4076d3:	pusha  
  4076d4:	inc    ecx
  4076d5:	rcl    BYTE PTR [edx],1
  4076d7:	outs   dx,BYTE PTR ds:[esi]
  4076d8:	pmulhw mm5,QWORD PTR [ebp-0x4a1f769]
  4076df:	sbb    edi,DWORD PTR [ecx+0x2]
  4076e2:	rcr    cl,1
  4076e4:	retf   
  4076e5:	mov    edi,0x36730776
  4076ea:	dec    ebx
  4076eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4076ec:	pop    eax
  4076ed:	xor    edi,DWORD PTR [edx]
  4076ef:	rol    DWORD PTR [esi+0x69f2e02e],cl
  4076f5:	xor    ch,BYTE PTR ds:0x51efbe0b
  4076fb:	stos   DWORD PTR es:[edi],eax
  4076fc:	xor    eax,ecx
  4076fe:	cwde   
  4076ff:	push   esp
  407700:	push   ebx
  407701:	jmp    0xae92:0xa42078ed
  407708:	shl    DWORD PTR [ecx],1
  40770a:	mov    edx,0x57f013d1
  40770f:	or     ecx,edi
  407711:	xor    ah,dh
  407713:	ja     0x407792
  407715:	inc    edi
  407716:	adc    BYTE PTR [ebp+0x312996e8],0x74
  40771d:	mov    esi,0x153c0358
  407722:	loop   0x4076e5
  407724:	mov    edx,0xb702262a
  407729:	xor    BYTE PTR [ebx-0x1679ba08],dh
  40772f:	scas   al,BYTE PTR es:[edi]
  407730:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407731:	pop    ebx
  407732:	shl    DWORD PTR [ecx+0xe086b3],1
  407738:	stos   DWORD PTR es:[edi],eax
  407739:	cmp    al,0x55
  40773b:	lea    edx,[ebx+edi*2+0x20230c8c]
  407742:	in     eax,0x4c
  407744:	fnsave [edi]
  407746:	xor    dh,dh
  407748:	sub    DWORD PTR [eax-0x72],eax
  40774b:	retf   0xa436
  40774e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40774f:	mov    ecx,0xcd9aa126
  407754:	in     eax,0x4a
  407756:	fst    QWORD PTR [edx+0x51e0e2c8]
  40775c:	lahf   
  40775d:	ins    BYTE PTR es:[edi],dx
  40775e:	jbe    0x4076f1
  407760:	cmp    ch,BYTE PTR [edi-0xd]
  407763:	out    0x65,eax
  407765:	pop    eax
  407766:	jmp    0x407793
  407768:	stos   DWORD PTR es:[edi],eax
  407769:	xlat   BYTE PTR ds:[ebx]
  40776a:	adc    ebp,DWORD PTR ss:[ebp+0x5]
  40776e:	or     al,cl
  407770:	test   eax,0x89e1c7d9
  407775:	and    eax,0x185e175f
  40777a:	jns    0x407792
  40777c:	not    BYTE PTR [edi]
  40777e:	das    
  40777f:	adc    eax,0x882c25ff
  407784:	fisttp QWORD PTR [edi-0x36f0703a]
  40778a:	sbb    ebp,DWORD PTR [eax+0x75cde123]
  407790:	sti    
  407791:	fwait
  407792:	mov    ah,0xc5
  407794:	push   0x7b58944c
  407799:	scas   eax,DWORD PTR es:[edi]
  40779a:	mov    esi,0x68040013
  40779f:	push   ecx
  4077a0:	xlat   BYTE PTR ds:[ebx]
  4077a1:	or     eax,DWORD PTR [ebx+0x43b5bb9d]
  4077a7:	fwait
  4077a8:	ret    0x7f5d
  4077ab:	arpl   WORD PTR [ecx+0xc6ae135],di
  4077b1:	push   esp
  4077b2:	fsubr  DWORD PTR [edx-0x27]
  4077b5:	ja     0x4077b7
  4077b7:	retf   0x598d
  4077ba:	mov    cl,0x2e
  4077bc:	mov    DWORD PTR [ebp+0x58],0x295134d3
  4077c3:	in     al,dx
  4077c4:	ja     0x407769
  4077c6:	mov    ebx,0x8a486b08
  4077cb:	(bad)
  4077ce:	xchg   ecx,eax
  4077cf:	shl    DWORD PTR [esi+0x3e90056],1
  4077d5:	xchg   esp,eax
  4077d6:	add    cl,ch
  4077d8:	add    edx,DWORD PTR [eax+eax*1+0x559096]
  4077df:	mov    ss,WORD PTR ss:[ebp+0x0]
  4077e3:	jmp    0x79410beb
  4077e8:	lea    edx,[ebp+0x0]
  4077eb:	lahf   
  4077ec:	lea    edx,[ebp+0x0]
  4077ef:	xchg   edx,eax
  4077f0:	add    ebx,DWORD PTR [ecx+0x0]
  4077f3:	jge    0x407871
  4077f5:	aam    0x0
  4077f7:	mov    al,ds:0x45009103
  4077fc:	jl     0x4077d2
  4077fe:	add    bl,ah
  407800:	add    eax,DWORD PTR [eax]
  407802:	stos   DWORD PTR es:[edi],eax
  407803:	add    BYTE PTR ds:0x3100d47d,dl
  407809:	add    al,0x91
  40780b:	add    BYTE PTR ds:0xfa00d47d,cl
  407811:	add    edx,DWORD PTR [ecx-0x2b82fb00]
  407817:	add    BYTE PTR [ebp+0x3],ah
  40781a:	call   0x600:0xd47cb500
  407821:	add    al,0xa0
  407823:	add    BYTE PTR ds:0xac00d47d,cl
  407829:	add    ebx,DWORD PTR [ebp-0x2b830700]
  40782f:	add    BYTE PTR [eax],al
  407831:	test   al,0x97
  407833:	(bad)  
  407834:	inc    DWORD PTR [eax]
  407836:	xchg   ecx,eax
  407837:	sar    bh,0x1d
  40783a:	xchg   edi,eax
  40783b:	sti    
  40783c:	dec    eax
  40783e:	add    al,0xff
  407841:	nop
  407842:	xchg   edi,eax
  407843:	add    DWORD PTR [eax],eax
  407845:	in     eax,dx
  407846:	jo     0x407808
  407848:	jmp    FWORD PTR [ebx-0xf000e69]
  40784e:	pusha  
  40784f:	sar    bh,0xde
  407852:	xchg   edi,eax
  407853:	cli    
  407854:	(bad)  
  407855:	in     al,dx
  407856:	dec    esi
  407857:	sar    bh,0x1d
  40785a:	nop
  40785b:	(bad)  
  40785c:	call   esp
  40785e:	inc    eax
  40785f:	sar    bh,0x46
  407862:	nop
  407863:	(bad)  
  407864:	(bad)  
  407865:	mov    esp,0xffc03000
  40786a:	mov    eax,0xc8fff790
  40786f:	and    al,al
  407871:	dec    esi
  407873:	nop
  407874:	cld    
  407875:	call   DWORD PTR [eax-0x35003ef0]
  40787b:	xchg   edi,eax
  40787c:	clc    
  40787d:	jmp    FWORD PTR [eax+eax*1-0x6f61003f]
  407884:	repnz dec DWORD PTR [eax+esi*8-0x40]
  407889:	push   DWORD PTR [eax+edx*4]
  40788c:	(bad)  
  40788d:	inc    DWORD PTR [eax-0x20]
  407890:	sar    bh,0xda
  407893:	xchg   edi,eax
  407894:	cld    
  407895:	(bad)  
  407896:	cmp    al,dl
  407898:	sar    bh,0xaf
  40789b:	xchg   edi,eax
  40789c:	stc    
  40789d:	inc    DWORD PTR [eax+eax*8-0x6fc70040]
  4078a4:	adc    BYTE PTR [eax],al
  4078a6:	fldcw  WORD PTR [edi+0x2effffc0]
  4078ac:	add    BYTE PTR [edi],al
  4078ae:	add    BYTE PTR [ebp-0x38],al
  4078b1:	aas    
  4078b2:	add    BYTE PTR [eax+0x210008fc],al
  4078b8:	enter  0x3f,0x98
  4078bc:	cld    
  4078bd:	or     DWORD PTR [eax],eax
  4078bf:	cmp    eax,0x46003fc8
  4078c4:	add    BYTE PTR [edx],dl
  4078c6:	add    cl,ah
  4078c8:	(bad)  
  4078c9:	aas    
  4078ca:	add    BYTE PTR [eax],al
  4078cc:	push   eax
  4078cd:	cld    
  4078ce:	pop    ds
  4078cf:	add    ch,dh
  4078d1:	(bad)  
  4078d2:	aas    
  4078d3:	add    cl,cl
  4078d5:	inc    DWORD PTR [ebx]
  4078d7:	add    ch,ch
  4078d9:	(bad)  
  4078da:	aas    
  4078db:	add    ah,dh
  4078dd:	jmp    DWORD PTR [eax]
  4078df:	add    cl,dl
  4078e1:	les    edi,FWORD PTR [edi]
  4078e3:	add    BYTE PTR [edx+0x50031fc],cl
  4078e9:	lds    edi,FWORD PTR [edi]
  4078eb:	add    BYTE PTR [edx-0x4],ch
  4078ee:	and    DWORD PTR [eax],eax
  4078f0:	dec    ecx
  4078f1:	les    edi,FWORD PTR [edi]
  4078f3:	add    BYTE PTR [eax],dh
  4078f5:	dec    DWORD PTR [ebx]
  4078f7:	add    cl,bh
  4078f9:	les    edi,FWORD PTR [edi]
  4078fb:	add    BYTE PTR [ecx-0x1],ch
  4078fe:	sbb    al,BYTE PTR [eax]
  407900:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407901:	lds    edi,FWORD PTR [edi]
  407903:	add    BYTE PTR ds:0xa5000eff,dh
  407909:	lds    edi,FWORD PTR [edi]
  40790b:	add    BYTE PTR [edi-0x4efff801],ch
  407911:	lds    edi,FWORD PTR [edi]
  407913:	add    BYTE PTR [edx],ch
  407915:	inc    DWORD PTR [eax+eax*1]
  407918:	jns    0x4078df
  40791a:	aas    
  40791b:	add    BYTE PTR [ebp-0x1],ah
  40791e:	add    DWORD PTR [eax],eax
  407920:	in     eax,dx
  407921:	ret    
  407922:	aas    
  407923:	add    BYTE PTR [ebx+ebx*2+0x1941403],dl
  40792a:	jge    0x40796c
  40792c:	xchg   esp,eax
  40792d:	rol    BYTE PTR [edx],1
  40792f:	adc    DWORD PTR [eax],eax
  407931:	xchg   esp,eax
  407932:	sub    eax,0xac94407c
  407937:	add    dl,BYTE PTR [ecx]
  407939:	xchg   esp,eax
  40793a:	pop    ecx
  40793b:	jl     0x40797d
  40793d:	xchg   esp,eax
  40793e:	mov    dh,0x2
  407940:	pop    es
  407941:	xchg   esp,eax
  407942:	and    DWORD PTR [ebp+0x40],edi
  407945:	xchg   esp,eax
  407946:	add    ecx,DWORD PTR ds:0x194
  40794b:	jge    0x40798d
  40794d:	xchg   esp,eax
  40794e:	cdq    
  40794f:	add    ecx,DWORD PTR [esp+edx*4]
  407952:	and    DWORD PTR [ebp+0x40],edi
  407955:	xchg   esp,eax
  407956:	cmc    
  407957:	add    al,BYTE PTR [esp+edx*4]
  40795a:	jmp    0x9ed4b9db
  40795f:	add    al,0x7
  407961:	xchg   esp,eax
  407962:	xchg   ecx,eax
  407963:	mov    al,BYTE PTR [eax-0x6c]
  407966:	pop    esp
  407967:	add    ecx,DWORD PTR ds:0x408a7194
  40796d:	xchg   esp,eax
  40796e:	xchg   ecx,eax
  40796f:	add    al,0x8
  407971:	xchg   esp,eax
  407972:	jne    0x4078fe
  407974:	inc    eax
  407975:	xchg   esp,eax
  407976:	xchg   ecx,eax
  407977:	add    al,0x8
  407979:	xchg   esp,eax
  40797a:	ja     0x407906
  40797c:	inc    eax
  40797d:	xchg   esp,eax
  40797e:	dec    ebx
  40797f:	add    eax,DWORD PTR [edi]
  407981:	xchg   esp,eax
  407982:	jg     0x40790e
  407984:	inc    eax
  407985:	xchg   esp,eax
  407986:	arpl   WORD PTR [edx*1+0x4089d794],ax
  40798d:	xchg   esp,eax
  40798e:	add    al,BYTE PTR [ebx+ecx*1]
  407991:	xchg   esp,eax
  407992:	dec    ebx
  407993:	mov    DWORD PTR [eax+0x0],eax
  407996:	xchg   esp,eax
  407997:	sti    
  407998:	add    ecx,DWORD PTR [ebx]
  40799a:	xchg   esp,eax
  40799b:	dec    DWORD PTR [ecx+0x50009440]
  4079a1:	add    al,0xa6
  4079a3:	add    BYTE PTR [ebp+0xd489],dh
  4079a9:	add    al,0x9d
  4079ab:	add    BYTE PTR [ecx+0x300d489],ah
  4079b1:	add    al,0x87
  4079b3:	add    ch,dh
  4079b5:	mov    esp,edx
  4079b7:	add    BYTE PTR [esi+0x1009c03],bl
  4079bd:	mov    dl,BYTE PTR [eax+eax*1+0x33]
  4079c1:	add    al,0x93
  4079c3:	add    BYTE PTR [ecx],al
  4079c5:	mov    dl,BYTE PTR [eax+eax*1+0x38]
  4079c9:	add    al,0x9b
  4079cb:	add    cl,bh
  4079cd:	mov    DWORD PTR [eax+eax*1+0x56],edx
  4079d1:	add    al,0x90
  4079d3:	add    cl,ch
  4079d5:	mov    DWORD PTR [eax+eax*1+0x51],edx
  4079d9:	add    al,0x9d
  4079db:	add    ch,dh
  4079dd:	mov    BYTE PTR [eax+eax*1-0x21],dl
  4079e1:	add    ecx,DWORD PTR [esi+0x5488d100]
  4079e7:	add    BYTE PTR [esp+eax*1],al
  4079ea:	cwde   
  4079eb:	add    cl,cl
  4079ed:	mov    BYTE PTR [eax+eax*1-0x7c],dl
  4079f1:	add    ebx,DWORD PTR [edx-0x1]
  4079f4:	pusha  
  4079f5:	xchg   DWORD PTR [eax+eax*1-0x24],edx
  4079f9:	add    eax,DWORD PTR [eax]
  4079fb:	jmp    0xd4c8a300
  407a00:	add    BYTE PTR [eax+0x3],dh
  407a03:	lods   eax,DWORD PTR ds:[esi]
  407a04:	add    ch,dh
  407a06:	xchg   esp,edx
  407a08:	add    BYTE PTR [edi-0x1eff61fd],ah
  407a0e:	xchg   esp,edx
  407a10:	add    BYTE PTR [ecx+0x3],ch
  407a13:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407a14:	add    BYTE PTR [ebp+0xd486],dl
  407a1a:	mov    ds:0x9cfff997,al
  407a1f:	adc    al,al
  407a21:	push   DWORD PTR [eax+0x28fff797]
  407a27:	adc    al,al
  407a29:	jmp    DWORD PTR [ebp-0x69]
  407a2c:	adc    al,0x0
  407a2e:	jns    0x407a42
  407a30:	sar    bh,0xee
  407a33:	xchg   edi,eax
  407a34:	hlt    
  407a35:	jmp    FWORD PTR [eax+0x12]
  407a38:	sar    bh,0x9a
  407a3b:	xchg   edi,eax
  407a3c:	mov    esp,0xc012f0ff
  407a41:	jmp    FWORD PTR [edx-0x27000369]
  407a47:	adc    al,al
  407a49:	call   edx
  407a4b:	xchg   edi,eax
  407a4c:	cld    
  407a4d:	inc    eax
  407a4f:	adc    al,al
  407a51:	jmp    DWORD PTR [edi+edx*4-0xa]
  407a55:	(bad)  
  407a56:	fcom   QWORD PTR [edx]
  407a58:	sar    bh,0xd
  407a5b:	xchg   edi,eax
  407a5c:	cli    
  407a5d:	call   esp
  407a5f:	add    BYTE PTR [edx],dl
  407a61:	sar    bh,0xe7
  407a64:	xchg   edi,eax
  407a65:	sbb    al,BYTE PTR [eax]
  407a67:	int    0x12
  407a69:	sar    bh,0xeb
  407a6c:	xchg   edi,eax
  407a6d:	sti    
  407a6e:	inc    esp
  407a70:	adc    al,al
  407a72:	(bad)  
  407a73:	aas    
  407a74:	cwde   
  407a75:	stc    
  407a76:	call   FWORD PTR [edx+edx*1-0x67d10040]
  407a7d:	add    eax,DWORD PTR [eax]
  407a7f:	xchg   ecx,eax
  407a80:	adc    al,cl
  407a82:	inc    DWORD PTR [ecx-0x56ffe868]
  407a88:	adc    al,cl
  407a8a:	dec    edi
  407a8c:	xchg   edi,eax
  407a8d:	ltr    WORD PTR [ecx+0x12]
  407a91:	sar    edi,0xff
  407a94:	dec    esp
  407a95:	add    al,0x5
  407a97:	add    ch,al
  407a99:	xchg   BYTE PTR [eax+0x0],al
  407a9c:	push   0x4
  407a9e:	adc    al,0x0
  407aa0:	in     eax,dx
  407aa1:	xchg   BYTE PTR [eax+0x0],al
  407aa4:	xchg   ebp,eax
  407aa5:	add    al,0x1e
  407aa7:	add    BYTE PTR [ebp-0x7a],bl
  407aaa:	inc    eax
  407aab:	add    BYTE PTR [edx+0x55000704],al
  407ab1:	xchg   BYTE PTR [eax+0x0],al
  407ab4:	es add al,0x10
  407ab7:	add    BYTE PTR [ecx],al
  407ab9:	xchg   BYTE PTR [eax+0x0],al
  407abc:	rol    BYTE PTR [esi+eax*1],0x0
  407ac0:	sub    DWORD PTR [esi-0x7ffffc0],eax
  407ac6:	add    eax,DWORD PTR [ebx]
  407ac8:	add    BYTE PTR [ebp-0x7a],al
  407acb:	inc    eax
  407acc:	add    BYTE PTR [ecx],ch
  407ace:	add    al,0x2f
  407ad0:	add    ch,ah
  407ad2:	test   DWORD PTR [eax+0x0],eax
  407ad5:	mov    dh,0x4
  407ad7:	pop    ss
  407ad8:	add    ch,ch
  407ada:	test   DWORD PTR [eax+0x0],eax
  407add:	nop
  407ade:	add    al,0x1a
  407ae0:	add    BYTE PTR [ecx+0x66004083],dl
  407ae6:	add    al,0xf
  407ae8:	add    BYTE PTR [ecx],al
  407aea:	add    DWORD PTR [eax+0x0],0xffffffc3
  407aee:	add    edx,DWORD PTR [eax+eax*1]
  407af1:	sbb    DWORD PTR [ebx+0x4160040],eax
  407af7:	pop    ds
  407af8:	add    BYTE PTR [ecx],bh
  407afa:	add    BYTE PTR [eax+0x0],0x91
  407afe:	add    esp,DWORD PTR [eax+eax*1]
  407b01:	rol    DWORD PTR [ebx+0x31e0040],0xa
  407b08:	add    BYTE PTR [ebp-0x6bffbf7d],ah
  407b0e:	jle    0x407b13
  407b10:	add    al,0x94
  407b12:	or     DWORD PTR [ebx+0x35f9440],eax
  407b18:	add    al,0x94
  407b1a:	loope  0x407a9e
  407b1c:	inc    eax
  407b1d:	xchg   esp,eax
  407b1e:	and    eax,DWORD PTR [ebx]
  407b20:	or     al,0x94
  407b22:	loope  0x407aa6
  407b24:	inc    eax
  407b25:	xchg   esp,eax
  407b26:	dec    esp
  407b27:	add    edx,DWORD PTR [ecx]
  407b29:	add    BYTE PTR [ebp+edx*1-0x2c6bbf7d],dl
  407b30:	add    cl,BYTE PTR [esi]
  407b32:	xchg   esp,eax
  407b33:	add    eax,0x4c944083
  407b38:	add    ecx,DWORD PTR [esp+edx*4]
  407b3b:	push   ebp
  407b3c:	add    BYTE PTR [eax-0x6c],0xd
  407b40:	add    al,0x12
  407b42:	xchg   esp,eax
  407b43:	sub    DWORD PTR [edx+0x3969440],eax
  407b49:	push   ds
  407b4a:	xchg   esp,eax
  407b4b:	or     DWORD PTR [ebx+0x2b79440],eax
  407b51:	xor    DWORD PTR [ebp+edi*8+0x19944082],edx
  407b58:	add    ecx,DWORD PTR [ecx]
  407b5a:	xchg   esp,eax
  407b5b:	leave  
  407b5c:	add    BYTE PTR [eax-0x6c],0x82
  407b60:	add    ecx,DWORD PTR [esp+edx*4]
  407b63:	fld    DWORD PTR [edx+0x3bb9440]
  407b69:	or     al,0x94
  407b6b:	test   eax,0xc0944083
  407b70:	add    eax,DWORD PTR [edi]
  407b72:	xchg   esp,eax
  407b73:	rol    DWORD PTR [ebx+0x3c69440],1
  407b79:	adc    al,0x94
  407b7b:	leave  
  407b7c:	add    DWORD PTR [eax-0x6c],0xffffffaf
  407b80:	add    eax,DWORD PTR [esp+edx*4]
  407b83:	je     0xef410fc9
  407b89:	add    edx,DWORD PTR [eax+0x843900]
  407b8f:	aam    0x0
  407b91:	out    dx,eax
  407b92:	add    edx,DWORD PTR [eax-0x2b7bdf00]
  407b98:	add    bh,dl
  407b9a:	add    edx,DWORD PTR [edx-0x2b7bd700]
  407ba0:	add    BYTE PTR [ecx-0x46ff67fc],bl
  407ba6:	adc    esp,0x0
  407ba9:	fiadd  WORD PTR [ebx]
  407bab:	nop
  407bac:	add    BYTE PTR [ecx],dl
  407bae:	test   ah,dl
  407bb0:	add    BYTE PTR [edx+0x4],bl
  407bb3:	mov    al,BYTE PTR [eax]
  407bb5:	loope  0x407b3a
  407bb7:	aam    0x0
  407bb9:	mov    al,BYTE PTR [ebx+edx*4]
  407bbc:	add    cl,ch
  407bbe:	adc    DWORD PTR [eax+eax*1-0x23],0x3
  407bc3:	fwait
  407bc4:	add    BYTE PTR [ecx],bh
  407bc6:	mov    edi,0x3a700c3
  407bcb:	pop    DWORD PTR [eax]
  407bcd:	add    eax,0x2200b3bf
  407bd2:	add    al,0x9d
  407bd4:	add    BYTE PTR [ecx],dh
  407bd6:	mov    edi,0x3aa00a3
  407bdb:	mov    DWORD PTR [eax],eax
  407bdd:	xor    DWORD PTR [edi+0x3ea0093],edi
  407be3:	sahf   
  407be4:	add    BYTE PTR ds:0x9c0083bf,ch
  407bea:	add    ecx,DWORD PTR [ecx+0x73be8d00]
  407bf0:	add    dl,bl
  407bf2:	add    eax,DWORD PTR [eax]
  407bf4:	add    BYTE PTR [eax],0x75
  407bf7:	mov    esi,0x3c70063
  407bfc:	add    DWORD PTR [eax],0xd3bf3d
  407c02:	add    BYTE PTR [ecx-0x69],ah
  407c05:	adc    al,BYTE PTR [eax]
  407c07:	inc    ecx
  407c08:	inc    ebx
  407c09:	std    
  407c0a:	jmp    FWORD PTR [edi+edx*4+0x9]
  407c0e:	add    BYTE PTR ds:0x1dfffd33,bh
  407c14:	nop
  407c15:	or     eax,DWORD PTR [eax]
  407c17:	sbb    eax,0x75fffd23
  407c1c:	xchg   edi,eax
  407c1d:	adc    BYTE PTR [eax],al
  407c1f:	rcl    DWORD PTR [edx],0xfd
  407c22:	call   FWORD PTR [esi]
  407c24:	nop
  407c25:	or     al,0x0
  407c27:	rol    DWORD PTR [edx],0xfd
  407c2a:	push   ebp
  407c2c:	xchg   edi,eax
  407c2d:	or     DWORD PTR [eax],eax
  407c2f:	std    
  407c30:	repnz cld 
  407c32:	call   FWORD PTR [eax]
  407c34:	nop
  407c35:	or     al,0x0
  407c37:	fucom  st(2)
  407c39:	cld    
  407c3a:	call   ecx
  407c3c:	xchg   edi,eax
  407c3d:	adc    BYTE PTR [eax],al
  407c3f:	inc    ecx
  407c40:	push   ecx
  407c41:	std    
  407c42:	(bad)  
  407c43:	in     al,dx
  407c44:	xchg   edi,eax
  407c45:	adc    DWORD PTR [eax],eax
  407c47:	inc    ebp
  407c48:	inc    ecx
  407c49:	std    
  407c4a:	jmp    FWORD PTR [edx+0x35000e97]
  407c50:	xor    ebp,edi
  407c52:	dec    DWORD PTR [edi]
  407c54:	xchg   edi,eax
  407c55:	verw   WORD PTR [ecx]
  407c58:	add    BYTE PTR [ecx],ah
  407c5a:	std    
  407c5b:	dec    DWORD PTR [ebx+0x39000e97]
  407c61:	adc    ebp,edi
  407c63:	call   FWORD PTR [ecx-0x69]
  407c66:	adc    BYTE PTR [eax],al
  407c68:	dec    ebp
  407c69:	add    ebp,edi
  407c6b:	(bad)  
  407c6c:	std    
  407c6d:	xchg   edi,eax
  407c6e:	(bad)  
  407c70:	jno    0x407c64
  407c72:	cld    
  407c73:	call   esi
  407c75:	nop
  407c76:	adc    eax,DWORD PTR [eax]
  407c78:	pop    ecx
  407c79:	loop   0x407c77
  407c7b:	(bad)  
  407c7c:	inc    ebp
  407c7e:	add    edx,DWORD PTR [eax+eax*1]
  407c81:	mov    ch,0x7a
  407c83:	aas    
  407c84:	add    BYTE PTR [ebx-0x52ffe8fc],bl
  407c8a:	jp     0x407ccb
  407c8c:	add    BYTE PTR [edx+0x61001204],cl
  407c92:	jle    0x407cd3
  407c94:	add    dl,ah
  407c96:	add    al,0x18
  407c98:	add    BYTE PTR [ebp+0x7e],bl
  407c9b:	aas    
  407c9c:	add    BYTE PTR [ecx],ah
  407c9e:	add    eax,0x7c210023
  407ca3:	aas    
  407ca4:	add    BYTE PTR [ebx+0x0],ch
  407ca7:	and    eax,0x3f7bf900
  407cac:	add    BYTE PTR [eax+0x5001b04],al
  407cb2:	jl     0x407cf3
  407cb4:	add    BYTE PTR [esi+0x19000304],bh
  407cba:	jl     0x407cfb
  407cbc:	add    BYTE PTR [eax],al
  407cbe:	push   ebx
  407cbf:	add    BYTE PTR [edi],al
  407cc1:	add    BYTE PTR [ecx+0x7b],dh
  407cc4:	aas    
  407cc5:	add    bl,ah
  407cc7:	inc    DWORD PTR [esi]
  407cc9:	add    BYTE PTR [ecx+0x7b],ch
  407ccc:	aas    
  407ccd:	add    BYTE PTR [ebx],al
  407ccf:	add    BYTE PTR [eax+eax*1],bl
  407cd2:	or     DWORD PTR [ebx+0x3f],edi
  407cd5:	add    bh,bh
  407cd7:	inc    DWORD PTR [esi]
  407cd9:	add    BYTE PTR [ecx+0x7a],ah
  407cdc:	aas    
  407cdd:	add    BYTE PTR [edi],al
  407cdf:	add    BYTE PTR [edx],cl
  407ce1:	add    BYTE PTR ds:0xd2003f7b,bl
  407ce7:	dec    DWORD PTR [ebx+0x0]
  407cea:	fnstsw WORD PTR [edx+0x3f]
  407ced:	add    BYTE PTR [esp+eax*1+0x22],cl
  407cf1:	add    ch,al
  407cf3:	jnp    0x407d34
  407cf5:	add    BYTE PTR [eax+esi*1-0x6e6bd1fd],dl
  407cfc:	mov    edi,0x373943f
  407d01:	add    al,0x94
  407d03:	mov    ecx,0xb2943fbe
  407d08:	add    dl,BYTE PTR [ebx]
  407d0a:	xchg   esp,eax
  407d0b:	int    0xbe
  407d0d:	aas    
  407d0e:	xchg   esp,eax
  407d0f:	jmp    0xa5d49117
  407d14:	mov    esi,0x330943f
  407d19:	push   ds
  407d1a:	xchg   esp,eax
  407d1b:	add    eax,0x99943fc0
  407d20:	add    ebx,DWORD PTR ds:0xbfe59400
  407d26:	aas    
  407d27:	xchg   esp,eax
  407d28:	leave  
  407d29:	add    ah,BYTE PTR [eax]
  407d2b:	xchg   esp,eax
  407d2c:	dec    ecx
  407d2d:	mov    edi,0x2d6943f
  407d32:	addr16 xchg esp,eax
  407d34:	popa   
  407d35:	mov    eax,0x37c943f
  407d3a:	add    eax,0x3fb7bd94
  407d3f:	xchg   esp,eax
  407d40:	push   cs
  407d41:	add    al,0xa
  407d43:	xchg   esp,eax
  407d44:	mov    DWORD PTR [eax+0x323943f],edi
  407d4a:	cmp    DWORD PTR [ebp+eax*2+0x3d943fb8],edx
  407d51:	add    ebp,DWORD PTR ds:0x3fb85594
  407d57:	xchg   esp,eax
  407d58:	or     al,BYTE PTR [ebx]
  407d5a:	pop    es
  407d5b:	xchg   esp,eax
  407d5c:	jge    0x407d16
  407d5e:	aas    
  407d5f:	xchg   esp,eax
  407d60:	or     BYTE PTR [ebx],al
  407d62:	or     al,0x94
  407d64:	pop    ebp
  407d65:	mov    eax,0x390943f
  407d6a:	or     edx,DWORD PTR [ecx+ebx*2+0x943fb8]
  407d71:	pop    ecx
  407d72:	add    al,0x9f
  407d74:	add    ch,ah
  407d76:	mov    esi,0x443006b
  407d7b:	mov    es,WORD PTR [eax]
  407d7d:	sar    DWORD PTR [esi+0x4aa005b],1
  407d83:	lahf   
  407d84:	add    ch,cl
  407d86:	mov    esi,0xdf00cb00
  407d8b:	add    edx,DWORD PTR [eax-0x44417300]
  407d91:	add    dh,al
  407d93:	add    al,0xc0
  407d95:	add    BYTE PTR [ebp-0x42],cl
  407d98:	stos   DWORD PTR es:[edi],eax
  407d99:	add    ch,dh
  407d9b:	add    ecx,DWORD PTR [edi-0x6441b700]
  407da1:	add    BYTE PTR [esi+0x4],cl
  407da4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407da5:	add    BYTE PTR [ebp-0x42],ch
  407da8:	mov    eax,DWORD PTR [eax]
  407daa:	loope  0x407daf
  407dac:	pop    DWORD PTR [eax]
  407dae:	imul   edi,DWORD PTR [esi+0x3b9007b],0xbdd5009f
  407db8:	imul   eax,DWORD PTR [eax],0xffffffee
  407dbb:	add    ebx,DWORD PTR [ebx+0x5bbdbd00]
  407dc1:	add    BYTE PTR [ecx],ch
  407dc3:	add    al,0xa6
  407dc5:	add    BYTE PTR [ecx+0x2f00cbbd],ah
  407dcb:	add    al,0xba
  407dcd:	add    cl,bh
  407dcf:	mov    ebp,0x38f00bb
  407dd4:	mov    al,ds:0xabbdc900
  407dd9:	add    BYTE PTR [esi-0x1eff76fd],bh
  407ddf:	mov    ebp,0x3f2009b
  407de4:	mov    eax,ds:0x8bbd0100
  407de9:	add    BYTE PTR [eax],al
  407deb:	fiadd  WORD PTR [eax]
  407ded:	xchg   edi,eax
  407dee:	sldt   WORD PTR ds:0x6fff9f9
  407df5:	cwde   
  407df6:	add    eax,0xf9e8c100
  407dfb:	dec    DWORD PTR [ebx-0x6effe669]
  407e01:	fdivr  st,st(1)
  407e03:	call   DWORD PTR [ebx-0x72fff869]
  407e09:	dec    eax
  407e0a:	stc    
  407e0b:	jmp    DWORD PTR [ebx-0x69]
  407e0e:	std    
  407e0f:	inc    DWORD PTR [eax-0x170006c8]
  407e15:	xchg   edi,eax
  407e16:	add    BYTE PTR [eax],al
  407e18:	jmp    0x65407eb4
  407e1d:	and    cl,bh
  407e1f:	(bad)  
  407e20:	fist   WORD PTR [edi-0x68180000]
  407e26:	add    BYTE PTR [eax],al
  407e28:	std    
  407e29:	or     cl,bh
  407e2b:	(bad)  
  407e2c:	out    dx,al
  407e2d:	xchg   edi,eax
  407e2e:	add    BYTE PTR [eax],al
  407e30:	add    DWORD PTR [eax-0xf430000],edx
  407e36:	clc    
  407e37:	(bad)  
  407e38:	cli    
  407e39:	xchg   edi,eax
  407e3a:	add    BYTE PTR [eax],al
  407e3c:	icebp  
  407e3d:	xchg   edi,eax
  407e3e:	add    BYTE PTR [eax],al
  407e40:	sbb    ecx,ebx
  407e42:	clc    
  407e43:	(bad)  
  407e44:	fcom   DWORD PTR [edi-0x681f0000]
  407e4a:	add    BYTE PTR [eax],al
  407e4c:	aad    0x40
  407e4e:	stc    
  407e4f:	(bad)  
  407e50:	fild   WORD PTR [eax]
  407e52:	xchg   edi,eax
  407e53:	add    BYTE PTR [eax],al
  407e55:	add    DWORD PTR [eax+0x28e90000],ebx
  407e5b:	stc    
  407e5c:	jmp    ebx
  407e5e:	xchg   edi,eax
  407e5f:	add    BYTE PTR [eax],al
  407e61:	in     eax,0x97
  407e63:	add    BYTE PTR [eax],al
  407e65:	add    BYTE PTR [edx+eax*1-0x3430000],bh
  407e6c:	(bad)  
  407e6d:	jmp    FWORD PTR [edi-0x50fffffe]
  407e73:	cld    
  407e74:	(bad)  
  407e75:	(bad)  
  407e76:	mov    esp,0xb1fffffd
  407e7b:	cld    
  407e7c:	(bad)  
  407e7d:	jmp    FWORD PTR [edi-0x4c000003]
  407e83:	cld    
  407e84:	(bad)  
  407e85:	call   esp
  407e87:	cld    
  407e88:	(bad)  
  407e89:	call   DWORD PTR [ecx-0x3c]
  407e8c:	inc    eax
  407e8d:	add    bh,al
  407e8f:	cld    
  407e90:	(bad)  
  407e91:	(bad)  
  407e92:	cmp    eax,esp
  407e94:	inc    eax
  407e95:	add    BYTE PTR [esi+0x35fffffc],dh
  407e9b:	les    eax,FWORD PTR [eax+0x0]
  407e9e:	mov    esp,edi
  407ea0:	(bad)  
  407ea1:	jmp    DWORD PTR ds:0x980040be
  407ea7:	cld    
  407ea8:	(bad)  
  407ea9:	inc    ecx
  407eab:	mov    ebp,0x44b0040
  407eb0:	add    BYTE PTR [eax],al
  407eb2:	pop    ebp
  407eb3:	clc    
  407eb4:	inc    eax
  407eb5:	add    BYTE PTR [eax],al
  407eb7:	cmp    al,BYTE PTR [eax+eax*1]
  407eba:	add    BYTE PTR [ecx],ch
  407ebc:	clc    
  407ebd:	inc    eax
  407ebe:	add    BYTE PTR [ebp-0x6a000004],ch
  407ec4:	rol    BYTE PTR [eax+0x0],0x7c
  407ec8:	cld    
  407ec9:	(bad)  
  407eca:	jmp    DWORD PTR [ecx-0x9]
  407ecd:	inc    eax
  407ece:	add    BYTE PTR [edi-0x4],ch
  407ed1:	(bad)  
  407ed2:	jmp    DWORD PTR [ecx-0x9]
  407ed5:	inc    eax
  407ed6:	add    BYTE PTR [esi-0x4],bh
  407ed9:	(bad)  
  407eda:	jmp    DWORD PTR [ecx-0x9]
  407edd:	inc    eax
  407ede:	add    BYTE PTR [ebp+eiz*4-0x516bfffd],dl
  407ee5:	ds inc ecx
  407ee7:	xchg   esp,eax
  407ee8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407ee9:	add    eax,DWORD PTR [eax]
  407eeb:	xchg   esp,eax
  407eec:	enter  0x413e,0x94
  407ef0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407ef1:	add    eax,DWORD PTR [eax]
  407ef3:	xchg   esp,eax
  407ef4:	ret    0x413e
  407ef7:	xchg   esp,eax
  407ef8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407ef9:	add    al,BYTE PTR [eax]
  407efb:	xchg   esp,eax
  407efc:	sub    eax,DWORD PTR [eax+0x41]
  407eff:	xchg   esp,eax
  407f00:	mov    eax,ds:0x23940002
  407f05:	inc    eax
  407f06:	inc    ecx
  407f07:	xchg   esp,eax
  407f08:	mov    al,0x2
  407f0a:	add    BYTE PTR [edx+eiz*1-0x5c6bbec0],dl
  407f11:	add    al,BYTE PTR [eax]
  407f13:	xchg   esp,eax
  407f14:	or     DWORD PTR [ecx+0x41],eax
  407f17:	xchg   esp,eax
  407f18:	mov    dl,0x2
  407f1a:	add    BYTE PTR [eax],al
  407f1c:	xchg   esp,eax
  407f1d:	sbb    DWORD PTR [ecx+0x41],eax
  407f20:	xchg   esp,eax
  407f21:	popf   
  407f22:	add    al,BYTE PTR [eax]
  407f24:	xchg   esp,eax
  407f25:	add    eax,0xac944141
  407f2a:	add    al,BYTE PTR [eax]
  407f2c:	xchg   esp,eax
  407f2d:	mov    cl,0x3f
  407f2f:	inc    ecx
  407f30:	xchg   esp,eax
  407f31:	lahf   
  407f32:	add    al,BYTE PTR [eax]
  407f34:	xchg   esp,eax
  407f35:	jmp    0xaed4c085
  407f3a:	add    al,BYTE PTR [eax]
  407f3c:	xchg   esp,eax
  407f3d:	and    ecx,DWORD PTR [ebx+0x41]
  407f40:	xchg   esp,eax
  407f41:	mov    ecx,0xab940002
  407f46:	dec    edx
  407f47:	inc    ecx
  407f48:	xchg   esp,eax
  407f49:	sub    DWORD PTR [ebx],eax
  407f4b:	add    DWORD PTR [ebp-0x6bfffcd7],edx
  407f51:	sub    DWORD PTR [ebx],eax
  407f53:	add    BYTE PTR [eax+ebp*1+0x940002],dl
  407f5a:	jmp    0x407f5f
  407f5c:	xchg   esp,eax
  407f5d:	add    cl,cl
  407f5f:	leave  
  407f60:	jecxz  0x407f98
  407f62:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407f63:	add    edx,DWORD PTR [eax+eax*1+0x9403e8]
  407f6a:	out    dx,eax
  407f6b:	add    edx,DWORD PTR [eax+eax*1+0x36c3aeb9]
  407f72:	in     al,dx
  407f73:	add    edx,DWORD PTR [eax+eax*1+0x36b3aeb9]
  407f7a:	jmp    0xe5441583
  407f7f:	add    BYTE PTR [eax],al
  407f81:	call   0xdd0b:0x8e0ce0ff
  407f88:	or     BYTE PTR [edx-0x59eb26fb],ah
  407f8e:	adc    ebp,edx
  407f90:	adc    BYTE PTR [edx-0x61e32ef3],ch
  407f96:	sbb    ebp,ecx
  407f98:	sbb    BYTE PTR [edx-0x4a1b36eb],dl
  407f9e:	loope  0x407f64
  407fa0:	loopne 0x407f5b
  407fa2:	ffree  st(0)
  407fa4:	in     al,dx
  407fa5:	lods   eax,DWORD PTR ds:[esi]
  407fa6:	jmp    0xe5c26867
  407fab:	mov    eax,0xb4f185f4
  407fb0:	lock mov ebp,ebp
  407fb3:	mov    al,0xfc
  407fb5:	jge    0x407fb0
  407fb7:	lods   al,BYTE PTR ds:[esi]
  407fb8:	clc    
  407fb9:	jno    0x407fb0
  407fbb:	test   al,0xa4
  407fbd:	mov    ch,0xa1
  407fbf:	les    esp,FWORD PTR [eax-0x533f6247]
  407fc5:	lods   eax,DWORD PTR ds:[esi]
  407fc6:	test   eax,0xa581a8bc
  407fcb:	mov    eax,0xb4b185b4
  407fd0:	mov    al,0x89
  407fd2:	lods   eax,DWORD PTR ds:[esi]
  407fd3:	push   DWORD PTR [eax-0x72a547c8]
  407fd9:	int3   
  407fda:	rcr    DWORD PTR [esi-0x77],cl
  407fdd:	xor    BYTE PTR [eax-0x63cb7a9e],ah
  407fe3:	add    WORD PTR [eax],0xa828
  407fe8:	push   0x7d
  407fea:	cld    
  407feb:	mov    ds:0xb000796e,eax
  407ff0:	jb     0x408067
  407ff2:	add    al,0xac
  407ff4:	jbe    0x408067
  407ff6:	clc    
  407ff7:	mov    bh,0x7a
  407ff9:	ins    DWORD PTR es:[edi],dx
  407ffa:	in     al,dx
  407ffb:	mov    bl,0x7e
  407ffd:	imul   edx,DWORD PTR [eax],0x14658383
  408003:	jg     0x407f8c
  408005:	popa   
  408006:	or     BYTE PTR [ebx-0x79e3a275],cl
  40800c:	(bad)  
  40800d:	pop    ecx
  40800e:	and    BYTE PTR [edx-0x71dbaa6d],dl
  408014:	xchg   edi,eax
  408015:	push   ecx
  408016:	sbb    BYTE PTR [edx-0x69f3b265],bl
  40801c:	lahf   
  40801d:	dec    ecx
  40801e:	lock bound esp,QWORD PTR [ebx-0x58a10bbb]
  408025:	inc    ecx
  408026:	call   0xbc7e2b95
  40802b:	scas   ax,WORD PTR es:[edi]
  40802d:	cmp    eax,eax
  40802f:	jb     0x407fe4
  408031:	xor    eax,0x31b76ec4
  408036:	mov    eax,0xac2dbb7a
  40803b:	jbe    0x407ffc
  40803d:	sub    eax,edx
  40803f:	inc    edx
  408040:	ret    
  408041:	and    eax,0x21c73ed4
  408046:	enter  0xcb4a,0x1d
  40804a:	add    BYTE PTR [esi+eax*2-0x31],bl
  40804e:	add    BYTE PTR [ebp-0x562c2e34],ch
  408054:	rcl    ch,1
  408056:	xlat   BYTE PTR ds:[ebx]
  408057:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408058:	aam    0xd9
  40805a:	(bad)  [ecx-0x62202228]
  408060:	fsubr  st(1),st
  408062:	jecxz  0x407ffd
  408064:	loopne 0x40804b
  408066:	out    0x95,eax
  408068:	in     al,0xe9
  40806a:	jmp    0x40803d
  40806c:	fsub   st(5),st
  40806e:	out    dx,eax
  40806f:	int    0xf0
  408071:	icebp  
  408072:	repz leave 
  408074:	in     al,0xf5
  408076:	test   ebp,0xc1fbf9f8
  40807c:	in     al,dx
  40807d:	std    
  40807e:	(bad)  
  40807f:	mov    ebp,0xb9030201
  408084:	xor    eax,0x9b50705
  408089:	or     cl,BYTE PTR [ebx]
  40808b:	jno    0x408088
  40808d:	or     eax,0x120f6d0f
  408092:	adc    ebp,DWORD PTR [ecx+0x3]
  408095:	push   ss
  408096:	pop    ss
  408097:	gs pop ss
  408099:	sbb    bl,BYTE PTR [ebx]
  40809b:	popa   
  40809c:	or     ebx,DWORD PTR [esi]
  40809e:	pop    ds
  40809f:	pop    ebp
  4080a0:	pop    ds
  4080a1:	and    DWORD PTR [ebx],esp
  4080a3:	pop    ecx
  4080a4:	push   ebx
  4080a5:	and    eax,0x29275527
  4080aa:	sub    edx,DWORD PTR [ecx]
  4080ac:	sbb    ebp,DWORD PTR ds:0x2f0d002f
  4080b2:	xor    DWORD PTR [ebx],esi
  4080b4:	or     DWORD PTR [ebx],esp
  4080b6:	xor    eax,0x39370537
  4080bb:	cmp    eax,DWORD PTR [ecx]
  4080bd:	sub    edi,DWORD PTR ds:0x615efd3f
  4080c3:	arpl   WORD PTR [ecx-0x6d],bx
  4080c6:	gs addr16 xchg esp,eax
  4080c9:	inc    ecx
  4080ca:	stos   BYTE PTR es:[edi],al
  4080cb:	imul   edi,DWORD PTR [edi+0x75],0x797b6da6
  4080d2:	mov    dl,0x71
  4080d4:	xchg   DWORD PTR [ebp-0x52],ebp
  4080d7:	jne    0x40805c
  4080d9:	jno    0x408095
  4080db:	jns    0x40812c
  4080dd:	test   esi,edx
  4080df:	pop    ebp
  4080e0:	dec    ebx
  4080e1:	mov    edx,eax
  4080e3:	inc    ecx
  4080e4:	push   edi
  4080e5:	pop    ebp
  4080e6:	mov    esi,0xca615345
  4080eb:	dec    ecx
  4080ec:	pop    edi
  4080ed:	xchg   ebp,eax
  4080ee:	(bad)  
  4080ef:	dec    ebp
  4080f0:	pop    ebx
  4080f1:	cdq    
  4080f2:	rcl    BYTE PTR [ecx+0x67],cl
  4080f5:	(bad)  
  4080f6:	into   
  4080f7:	push   ebp
  4080f8:	arpl   WORD PTR [ecx-0x5ad0a626],dx
  4080fe:	mov    ch,0x7d
  408100:	sub    ebp,DWORD PTR [ecx-0x61e87d7f]
  408106:	jge    0x40808e
  408108:	adc    esp,DWORD PTR [edx-0x2ae07577]
  40810e:	test   DWORD PTR [esi-0x6d6e26e5],ecx
  408114:	add    BYTE PTR [edi],ah
  408116:	int    0x8d
  408118:	xchg   esi,eax
  408119:	and    edx,ecx
  40811b:	cdq    
  40811c:	call   0xc90b:0x9e95c50f
  408123:	popa   
  408124:	mov    ds:0xa65dbd37,al
  408129:	xor    eax,ecx
  40812b:	imul   ebp,DWORD PTR [edx-0x519a0b01],0xb271f8fb
  408135:	pop    es
  408136:	in     eax,dx
  408137:	ins    DWORD PTR es:[edi],dx
  408138:	mov    dh,0x3
  40813a:	icebp  
  40813b:	jns    0x4080f7
  40813d:	out    dx,eax
  40813e:	in     al,0x75
  408140:	mov    esi,0x4228ffeb
  408145:	push   esi
  408146:	aas    
  408147:	and    eax,0x213b523e
  40814c:	dec    edx
  40814d:	fiadd  WORD PTR [esi+0x1d]
  408150:	inc    esi
  408151:	fiadd  DWORD PTR [edx+0x19]
  408154:	push   edx
  408155:	out    0x4e,al
  408157:	adc    eax,0x114ae24e
  40815c:	pop    edx
  40815d:	into   
  40815e:	push   esi
  40815f:	or     eax,0x952ca56
  408164:	and    dh,dh
  408166:	push   ds
  408167:	add    eax,0x11af21e
  40816c:	sub    bh,BYTE PTR [esi-0x45da02da]
  408172:	and    bh,cl
  408174:	xor    esi,eax
  408176:	cs cmc 
  408178:	sub    eax,0xf12ac200
  40817d:	cmp    DWORD PTR [esi-0x55ca12ca],ebp
  408183:	xor    ch,cl
  408185:	icebp  
  408186:	mov    ds:0x9403e832,eax
  40818b:	add    cl,ch
  40818d:	add    edx,DWORD PTR [eax+eax*1+0x9403e9]
  408194:	jmp    0xe941159c
  408199:	add    edx,DWORD PTR [eax+eax*1+0x9403e9]
  4081a0:	jmp    0xe94115a8
  4081a5:	add    edx,DWORD PTR [eax+eax*1-0x1a4fc17]
  4081ac:	push   ss
  4081ad:	add    al,0x94
  4081af:	add    BYTE PTR [edi],cl
  4081b1:	add    al,0x94
  4081b3:	add    cl,ch
  4081b5:	add    edx,DWORD PTR [eax+eax*1+0x9403e9]
  4081bc:	add    cl,ch
  4081be:	xchg   edi,eax
  4081bf:	add    BYTE PTR [eax],al
  4081c1:	jmp    0xe940825d
  4081c6:	xchg   edi,eax
  4081c7:	add    BYTE PTR [eax],al
  4081c9:	jmp    0xe943b365
  4081ce:	xchg   edi,eax
  4081cf:	add    BYTE PTR [eax],al
  4081d1:	jmp    0xe940826d
  4081d6:	xchg   edi,eax
  4081d7:	add    BYTE PTR [eax],al
  4081d9:	jmp    0xe9408275
  4081de:	add    BYTE PTR [edi-0x68170000],dl
  4081e4:	add    BYTE PTR [eax],al
  4081e6:	jmp    0xe9408282
  4081eb:	xchg   edi,eax
  4081ec:	add    BYTE PTR [eax],al
  4081ee:	pop    ss
  4081ef:	xchg   DWORD PTR [ecx],esi
  4081f1:	pop    es
  4081f2:	jmp    0xe940828e
  4081f7:	xchg   edi,eax
  4081f8:	add    BYTE PTR [eax],al
  4081fa:	jmp    0xe9408296
  4081ff:	xchg   edi,eax
  408200:	add    BYTE PTR [eax],al
  408202:	jmp    0xe940829e
  408207:	xchg   edi,eax
  408208:	add    BYTE PTR [eax],al
  40820a:	jmp    0xe94082a6
  40820f:	xchg   edi,eax
  408210:	add    BYTE PTR [eax],al
  408212:	iret   
  408213:	(bad)  
  408214:	xor    DWORD PTR [edi],eax
  408216:	jmp    0xe94082b2
  40821b:	xchg   edi,eax
  40821c:	add    BYTE PTR [eax],al
  40821e:	jmp    0xe94082ba
  408223:	xchg   edi,eax
  408224:	add    BYTE PTR [eax],al
  408226:	jmp    0xe94082c2
  40822b:	xchg   edi,eax
  40822c:	xor    DWORD PTR [ebx],eax
  40822e:	xchg   edi,eax
  40822f:	xchg   BYTE PTR [ecx],dh
  408231:	xchg   DWORD PTR [edi+0x73186],ecx
  408237:	sub    eax,0x2dfffffd
  40823c:	std    
  40823d:	(bad)  
  40823e:	(bad)  
  40823f:	cmp    eax,0xfffffd
  408244:	cmp    eax,0x2dfffffd
  408249:	std    
  40824a:	(bad)  
  40824b:	(bad)  
  40824c:	mov    ebx,0x6afffeee
  408251:	out    dx,al
  408252:	(bad)  
  408253:	call   FWORD PTR [edx-0x12]
  408256:	(bad)  
  408257:	jg     0x408246
  408259:	cld    
  40825a:	(bad)  
  40825b:	(bad)  
  40825c:	in     eax,dx
  40825d:	cld    
  40825e:	(bad)  
  40825f:	(bad)  
  408260:	std    
  408261:	cld    
  408262:	(bad)  
  408263:	(bad)  
  408264:	std    
  408265:	cld    
  408266:	(bad)  
  408267:	(bad)  
  408268:	in     eax,dx
  408269:	cld    
  40826a:	(bad)  
  40826b:	(bad)  
  40826c:	jp     0x40825c
  40826e:	(bad)  
  40826f:	jmp    FWORD PTR [edx-0x65000112]
  408275:	out    dx,al
  408276:	(bad)  
  408277:	jg     0x408226
  408279:	cld    
  40827a:	(bad)  
  40827b:	jmp    FWORD PTR [ebp-0x42000004]
  408281:	cld    
  408282:	(bad)  
  408283:	(bad)  
  408284:	mov    ebp,0xadfffffc
  408289:	cld    
  40828a:	(bad)  
  40828b:	(bad)  
  40828c:	mov    ebx,0x7cfbffee
  408291:	add    al,0x0
  408293:	clc    
  408294:	jl     0x40829a
  408296:	add    BYTE PTR [eax+0x6d],bh
  408299:	add    al,0x0
  40829b:	add    BYTE PTR [ebp+0x4],ch
  40829e:	add    BYTE PTR [eax],al
  4082a0:	jge    0x4082a6
  4082a2:	add    BYTE PTR [eax],al
  4082a4:	jge    0x4082aa
  4082a6:	add    BYTE PTR [eax],al
  4082a8:	add    BYTE PTR [edx],bh
  4082aa:	repnz (bad) 
  4082ac:	jmp    FWORD PTR [ebp+0x4]
  4082af:	add    BYTE PTR [eax],al
  4082b1:	xchg   esp,eax
  4082b2:	sbb    DWORD PTR [ebx],eax
  4082b4:	add    BYTE PTR [ecx+ebx*1+0x1a140003],dl
  4082bb:	add    eax,DWORD PTR [eax]
  4082bd:	xchg   esp,eax
  4082be:	sbb    DWORD PTR [ebx],eax
  4082c0:	add    BYTE PTR [ecx+ebx*1+0x19940003],dl
  4082c7:	add    eax,DWORD PTR [eax]
  4082c9:	xchg   esp,eax
  4082ca:	cdq    
  4082cb:	add    eax,DWORD PTR [eax]
  4082cd:	xchg   esp,eax
  4082ce:	sbb    DWORD PTR [ebx],eax
  4082d0:	add    BYTE PTR [ecx+ebx*1+0x18940102],dl
  4082d7:	add    al,BYTE PTR [eax]
  4082d9:	xchg   esp,eax
  4082da:	sbb    DWORD PTR [ebx],eax
  4082dc:	add    BYTE PTR [ecx+ebx*1+0x19940003],dl
  4082e3:	add    eax,DWORD PTR [eax]
  4082e5:	xchg   esp,eax
  4082e6:	sbb    DWORD PTR [ebx],eax
  4082e8:	add    BYTE PTR [eax+ebx*1-0x666bfffd],dl
  4082ef:	add    eax,DWORD PTR [eax]
  4082f1:	xchg   esp,eax
  4082f2:	cdq    
  4082f3:	add    DWORD PTR [eax-0x7ffce5ec],0xffffff94
  4082fa:	and    eax,0x4d981c0f
  4082ff:	nop    DWORD PTR [eax-0x6bfff0ab]
  408306:	sbb    DWORD PTR [ebx],eax
  408308:	add    BYTE PTR [edx+ebx*1],dl
  40830b:	or     eax,0x37e001a
  408310:	push   cs
  408311:	sbb    ah,BYTE PTR [esi-0x59edead5]
  408317:	sub    edx,DWORD PTR ds:0x154ba612
  40831d:	adc    ah,BYTE PTR [esi-0x79edeab5]
  408323:	dec    ebx
  408324:	adc    eax,0x2991412
  408329:	add    BYTE PTR [eax+eax*1+0xa7e0de9],0x3
  408331:	push   cs
  408332:	scas   al,BYTE PTR es:[edi]
  408333:	adc    bh,bl
  408335:	adc    eax,0x15fb12a6
  40833a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40833b:	adc    bl,bl
  40833d:	adc    eax,0x15db12a6
  408342:	xchg   BYTE PTR [edx],dl
  408344:	fist   DWORD PTR ds:0x3698086
  40834a:	xchg   esp,eax
  40834b:	add    cl,ch
  40834d:	add    edx,DWORD PTR [eax+eax*1+0x9403e9]
  408354:	jmp    0xe941175c
  408359:	add    edx,DWORD PTR [eax+eax*1+0x9403e9]
  408360:	jmp    0xe9411768
  408365:	add    edx,DWORD PTR [eax+eax*1+0x9403e9]
  40836c:	jmp    0xe9411774
  408371:	add    eax,DWORD PTR [eax]
  408373:	xchg   esp,eax
  408374:	add    cl,ch
  408376:	add    edx,DWORD PTR [eax+eax*1+0x9403e9]
  40837d:	jmp    0xe9411785
  408382:	add    edx,DWORD PTR [eax+eax*1+0x9403e9]
  408389:	jmp    0xe9411791
  40838e:	add    edx,DWORD PTR [eax+eax*1+0x9403e9]
  408395:	jmp    0xe941179d
  40839a:	add    edx,DWORD PTR [eax+eax*1+0x9403e9]
  4083a1:	jmp    0x4117a9
  4083a6:	jmp    0xe9408442
  4083ab:	xchg   edi,eax
  4083ac:	add    BYTE PTR [eax],al
  4083ae:	jmp    0xe940844a
  4083b3:	xchg   edi,eax
  4083b4:	add    BYTE PTR [eax],al
  4083b6:	jmp    0xe9408452
  4083bb:	xchg   edi,eax
  4083bc:	add    BYTE PTR [eax],al
  4083be:	jmp    0xe940845a
  4083c3:	xchg   edi,eax
  4083c4:	add    BYTE PTR [eax],al
  4083c6:	jmp    0xe9408462
  4083cb:	xchg   edi,eax
  4083cc:	add    BYTE PTR [eax],al
  4083ce:	push   ebp
  4083cf:	mov    dh,0x90
  4083d1:	jo     0x408426
  4083d3:	sbb    al,0x91
  4083d5:	jo     0x408368
  4083d7:	add    bh,al
  4083d9:	dec    edi
  4083da:	inc    ecx
  4083db:	inc    ebx
  4083dc:	pusha  
  4083dd:	nop
  4083de:	jo     0x408432
  4083e0:	jo     0x408371
  4083e2:	jo     0x40840c
  4083e4:	lock mov al,ds:0x2e085e0b
  4083ea:	xor    bh,BYTE PTR [eax+0x3dd927d2]
  4083f0:	out    0x92,eax
  4083f2:	jnp    0x408469
  4083f4:	cmp    esi,DWORD PTR [ebx+0x2e9533c2]
  4083fa:	stc    
  4083fb:	(bad)  
  4083fc:	int    0xf2
  4083fe:	inc    esi
  4083ff:	into   
  408400:	sub    cl,dl
  408402:	shr    BYTE PTR [ecx],0xc8
  408405:	inc    ebp
  408406:	mov    ebx,0x704738ed
  40840b:	mov    cl,BYTE PTR [ecx+0x6a]
  40840e:	jp     0x408397
  408410:	or     ecx,ecx
  408412:	cdq    
  408413:	pop    edx
  408414:	(bad)  
  408415:	jl     0x4083d3
  408417:	mov    edx,0xf47ffc40
  40841c:	push   ds
  40841d:	out    dx,eax
  40841e:	ins    DWORD PTR es:[edi],dx
  40841f:	add    BYTE PTR [ebx],dl
  408421:	es push ebx
  408423:	fcomip st,st(0)
  408425:	(bad)  
  408426:	out    0xf0,eax
  408428:	ins    DWORD PTR es:[edi],dx
  408429:	outs   dx,BYTE PTR ds:[esi]
  40842a:	(bad)  
  40842b:	jae    0x408487
  40842d:	cmp    BYTE PTR [ebx-0x44c11cdf],0xc3
  408434:	out    0x71,eax
  408436:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408437:	sub    DWORD PTR [ebx-0x62],eax
  40843a:	lock mov dh,0x0
  40843d:	and    ebx,ebx
  40843f:	adc    DWORD PTR [edi+0x64a6645f],ebx
  408445:	cmp    al,0x2c
  408447:	push   edx
  408448:	nop
  408449:	fs inc eax
  40844b:	scas   al,BYTE PTR es:[edi]
  40844c:	sub    BYTE PTR [ebp-0x3fe6b41f],0xdd
  408453:	jbe    0x4084b3
  408455:	push   ebp
  408456:	mov    ecx,0x54273789
  40845b:	sbb    al,0x28
  40845d:	xor    BYTE PTR [esi+eax*8-0x65],bl
  408461:	test   eax,0xc122d513
  408466:	lods   al,BYTE PTR cs:[esi]
  408468:	popa   
  408469:	push   esp
  40846a:	call   0x98dc4851
  40846f:	sub    al,0xe4
  408471:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408472:	adc    eax,0x14cf1112
  408477:	mov    bl,0x21
  408479:	mov    al,ds:0x60edbe79
  40847e:	mov    bh,0xb5
  408480:	xchg   edi,eax
  408481:	fistp  DWORD PTR [edi-0x5cb864bc]
  408487:	repz mov dl,0xc8
  40848a:	mov    eax,0xe19ca4cc
  40848f:	daa    
  408490:	xchg   esp,eax
  408491:	hlt    
  408492:	(bad)  
  408493:	mov    eax,0xf80d3155
  408498:	bound  edx,QWORD PTR [edx+ebx*2+0x65b40a4f]
  40849f:	in     al,dx
  4084a0:	fiadd  WORD PTR [eax]
  4084a2:	icebp  
  4084a3:	pop    edx
  4084a4:	push   esp
  4084a5:	jns    0x4084be
  4084a7:	push   ecx
  4084a8:	das    
  4084a9:	and    edi,DWORD PTR [esp+0x2e40b986]
  4084b0:	add    BYTE PTR [edi+0x17],bh
  4084b3:	mov    bl,0xdf
  4084b5:	mov    al,ds:0x32f695e
  4084ba:	popf   
  4084bb:	nop
  4084bc:	out    dx,al
  4084bd:	push   ds
  4084be:	mov    ds:0xa1412f2e,al
  4084c3:	iret   
  4084c4:	push   edx
  4084c5:	je     0x40853a
  4084c7:	sbb    al,0xd1
  4084c9:	ins    DWORD PTR es:[edi],dx
  4084ca:	call   0xe900:0xe87787aa
  4084d1:	fst    QWORD PTR [edi+0x57]
  4084d4:	inc    edi
  4084d5:	push   ds
  4084d6:	add    cl,BYTE PTR [edi+0x37]
  4084d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4084da:	mov    eax,0x1492b1f8
  4084df:	adc    eax,0xc71d6245
  4084e4:	fld    st(0)
  4084e6:	rcr    DWORD PTR [ecx],1
  4084e8:	add    eax,DWORD PTR [eax]
  4084ea:	xchg   esp,eax
  4084eb:	jg     0x4084f1
  4084ed:	add    BYTE PTR [ecx+ebx*4+0x3c940001],dl
  4084f4:	add    eax,DWORD PTR [eax]
  4084f6:	xchg   esp,eax
  4084f7:	into   
  4084f8:	add    eax,DWORD PTR [eax]
  4084fa:	xchg   esp,eax
  4084fb:	stc    
  4084fc:	cld    
  4084fd:	inc    ebx
  4084ff:	inc    esp
  408500:	add    eax,DWORD PTR [eax]
  408502:	xchg   esp,eax
  408503:	aad    0x3
  408505:	add    BYTE PTR [eax],al
  408507:	xchg   esp,eax
  408508:	stc    
  408509:	cld    
  40850a:	jmp    FWORD PTR [ebx-0x6bfffcc4]
  408510:	in     al,dx
  408511:	add    eax,DWORD PTR [eax]
  408513:	xchg   esp,eax
  408514:	add    BYTE PTR [ecx+0x1],ch
  408517:	xchg   esp,eax
  408518:	add    BYTE PTR [esp+eax*1],al
  40851b:	xchg   esp,eax
  40851c:	add    BYTE PTR [edi+0x69009403],al
  408522:	add    DWORD PTR [eax+eax*1+0x94040c],edx
  408529:	mov    es,WORD PTR [ebx]
  40852b:	xchg   esp,eax
  40852c:	add    BYTE PTR [ecx+0x1],ch
  40852f:	xchg   esp,eax
  408530:	add    BYTE PTR [esp+eax*1],al
  408533:	xchg   esp,eax
  408534:	add    BYTE PTR [ecx+0x3],bl
  408537:	xchg   esp,eax
  408538:	add    BYTE PTR [ecx-0x32d4b404],cl
  40853e:	add    edx,DWORD PTR [eax+eax*1-0x2f3858da]
  408545:	cli    
  408546:	pushf  
  408547:	mov    dh,0xc1
  408549:	add    al,0xa8
  40854b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40854c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40854d:	stc    
  40854e:	mov    al,0x23
  408550:	sub    ebx,DWORD PTR ds:0xb4a4b49d
  408556:	call   0xc18c:0xb1c7ae75
  40855d:	call   0x9f411965
  408562:	mov    bh,0x56
  408564:	scas   al,BYTE PTR es:[edi]
  408565:	retf   
  408566:	mov    ds:0x9b94a567,al
  40856b:	add    BYTE PTR [ebp-0x5b],ah
  40856e:	(bad)  
  40856f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408570:	jecxz  0x40859c
  408572:	lahf   
  408573:	mov    bh,0x56
  408575:	scas   al,BYTE PTR es:[edi]
  408576:	mov    esp,DWORD PTR [edx-0x4f4c5ab9]
  40857c:	xor    BYTE PTR [esi-0x60cd4e48],ch
  408582:	xor    DWORD PTR [eax-0x4848ffba],0x44
  408589:	mov    ch,0x83
  40858b:	mov    cl,0x2c
  40858d:	mov    ecx,0x99f986ff
  408592:	jno    0x408610
  408594:	imul   BYTE PTR [esi-0x45d1a998]
  40859a:	jno    0x4085ea
  40859c:	xor    esp,DWORD PTR [ebp+0x985a72]
  4085a2:	add    BYTE PTR [ebx],bh
  4085a4:	inc    esp
  4085a5:	xchg   esi,eax
  4085a6:	push   esp
  4085a7:	cmp    dh,BYTE PTR ds:0x225153b0
  4085ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4085ae:	pusha  
  4085af:	dec    ebp
  4085b0:	dec    ebx
  4085b1:	scas   al,BYTE PTR es:[edi]
  4085b2:	pusha  
  4085b3:	cmp    esp,DWORD PTR [edx+ebp*1]
  4085b6:	push   DWORD PTR ds:0xe4baff4
  4085bc:	icebp  
  4085bd:	popf   
  4085be:	inc    ebx
  4085bf:	add    eax,0x1dff2a1c
  4085c4:	hlt    
  4085c5:	scas   eax,DWORD PTR es:[edi]
  4085c6:	inc    esi
  4085c7:	or     al,0xe4
  4085c9:	mov    ebp,0xa0e80d6b
  4085ce:	ins    DWORD PTR es:[edi],dx
  4085cf:	or     eax,0xffa4fc00
  4085d4:	mov    esi,0xc7ffa497
  4085d9:	xchg   edi,eax
  4085da:	mov    ah,0xff
  4085dc:	call   0xba408678
  4085e1:	xchg   edi,eax
  4085e2:	mov    ecx,0xd497a6ff
  4085e7:	call   FWORD PTR [ebp-0x65004069]
  4085ed:	xchg   edi,eax
  4085ee:	ret    
  4085ef:	call   DWORD PTR [edi+edx*4-0x68400045]
  4085f6:	popf   
  4085f7:	call   FWORD PTR [edx-0x66006669]
  4085fd:	xchg   edi,eax
  4085fe:	cdq    
  4085ff:	dec    DWORD PTR [esi-0x53004b69]
  408605:	xchg   edi,eax
  408606:	sar    edi,1
  408608:	inc    DWORD PTR [esi+edi*8]
  40860b:	ins    DWORD PTR es:[edi],dx
  40860c:	add    BYTE PTR [ecx],dl
  40860e:	(bad)  
  40860f:	outs   dx,BYTE PTR ds:[esi]
  408610:	add    BYTE PTR [edx],ah
  408612:	std    
  408613:	jb     0x408615
  408615:	int    0xfd
  408617:	dec    ebp
  408618:	add    cl,dl
  40861a:	add    al,0x5c
  40861c:	add    BYTE PTR [esi-0x20ff8afc],bh
  408622:	add    al,0x72
  408624:	add    al,dl
  408626:	add    al,0x6e
  408628:	add    BYTE PTR [ecx-0x2fffa9fc],dh
  40862e:	add    al,0x72
  408630:	add    BYTE PTR [esi+0x6904],bl
  408636:	call   0x5004:0xd9006e04
  40863d:	add    BYTE PTR [edi-0x6cff90fc],ch
  408643:	add    al,0x69
  408645:	add    BYTE PTR [ecx],bh
  408647:	std    
  408648:	add    BYTE PTR fs:[ecx+0x4],ch
  40864c:	imul   eax,DWORD PTR [eax],0x73fd2e
  408652:	mov    DWORD PTR [eiz*1-0x2e200],eax
  408659:	dec    DWORD PTR [ebp-0x3]
  40865c:	jno    0x40865e
  40865e:	(bad)  
  408660:	gs add ah,dl
  408663:	cld    
  408664:	imul   eax,DWORD PTR [eax],0xffffffd0
  408667:	cld    
  408668:	dec    eax
  408669:	add    al,cl
  40866b:	cld    
  40866c:	pusha  
  40866d:	add    dl,dl
  40866f:	cld    
  408670:	fs add ch,bh
  408673:	cld    
  408674:	pusha  
  408675:	add    BYTE PTR [ecx],ah
  408677:	std    
  408678:	add    BYTE PTR [di-0x4],bh
  40867d:	(bad)  
  40867e:	mov    ebp,0x94193558
  408683:	sbb    BYTE PTR [edi+0x45269d35],ch
  408689:	shr    BYTE PTR [ebx+ecx*2],1
  40868c:	inc    ebp
  40868d:	shr    BYTE PTR [eax*2+0x23f639e6],1
  408694:	add    eax,DWORD PTR [eax]
  408696:	xchg   esp,eax
  408697:	dec    esp
  408698:	std    
  408699:	inc    DWORD PTR [eax]
  40869b:	xchg   ebx,eax
  40869c:	in     al,0xe3
  40869e:	dec    DWORD PTR [ebx-0x6bbf8e79]
  4086a4:	sbb    eax,0x1194406b
  4086a9:	imul   eax,DWORD PTR [eax-0x6c],0xffffffbd
  4086ad:	rol    DWORD PTR [ecx-0x6c],0xc0
  4086b1:	push   0x40
  4086b3:	xchg   esp,eax
  4086b4:	cmp    DWORD PTR [ebx+0x40],ebp
  4086b7:	xchg   esp,eax
  4086b8:	push   ss
  4086b9:	push   0x40
  4086bb:	xchg   esp,eax
  4086bc:	ffree  st(1)
  4086be:	inc    ecx
  4086bf:	xchg   esp,eax
  4086c0:	loopne 0x408683
  4086c2:	inc    ecx
  4086c3:	xchg   esp,eax
  4086c4:	mov    ds:0x1994406c,al
  4086c9:	add    eax,DWORD PTR [eax]
  4086cb:	xchg   esp,eax
  4086cc:	sbb    DWORD PTR [ebx],eax
  4086ce:	add    BYTE PTR [esp+eax*8+0x78944033],dl
  4086d5:	add    BYTE PTR [ebx+0x9],cl
  4086d8:	imul   edx,DWORD PTR [eax+edx*8],0x6b98a5
  4086df:	aam    0x56
  4086e1:	dec    ebx
  4086e2:	pop    edx
  4086e3:	dec    eax
  4086e4:	cdq    
  4086e5:	iret   
  4086e6:	inc    ebp
  4086e7:	stc    
  4086e8:	popf   
  4086e9:	adc    al,0xd0
  4086eb:	test   DWORD PTR [edx+0x76b40067],edx
  4086f1:	dec    ecx
  4086f2:	ror    DWORD PTR [esi-0x267b17f4],1
  4086f8:	lahf   
  4086f9:	test   al,0xcf
  4086fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4086fc:	add    BYTE PTR [ebx-0x2a],ch
  4086ff:	add    bl,cl
  408701:	scas   al,BYTE PTR es:[di]
  408703:	dec    ebx
  408704:	pop    esi
  408705:	ins    BYTE PTR es:[edi],dx
  408706:	mov    eax,0x673d5c84
  40870b:	test   eax,0xd66b11e3
  408710:	stos   DWORD PTR es:[edi],eax
  408711:	scas   al,BYTE PTR es:[di]
  408713:	dec    ebx
  408714:	ds ins BYTE PTR es:[edi],dx
  408716:	sbb    al,0xe8
  408718:	adc    BYTE PTR [esi],ah
  40871a:	addr16 test eax,0xd56b1163
  408720:	mov    esp,DWORD PTR [edi+0x2e]
  408723:	dec    esp
  408724:	fisubr WORD PTR [eax+eax*4-0x6b]
  408728:	mov    BYTE PTR [edi],bl
  40872a:	int3   
  40872b:	mov    esp,0x8e731144
  408730:	xchg   esp,eax
  408731:	inc    eax
  408732:	cs imul eax,ebp,0x33
  408736:	adc    DWORD PTR [ebp-0x4353e078],0x64
  40873d:	adc    DWORD PTR [ebx-0x72],esi
  408740:	xchg   esp,eax
  408741:	inc    eax
  408742:	cs imul esp,ebp,0x33
  408746:	jecxz  0x40874b
  408748:	xchg   esp,eax
  408749:	add    BYTE PTR [ecx+0x35],dh
  40874c:	aam    0x0
  40874e:	cmp    DWORD PTR [edi],esp
  408750:	aam    0x0
  408752:	mov    dl,0x29
  408754:	aam    0x0
  408756:	add    al,BYTE PTR [ecx+esi*4]
  408759:	add    bl,bh
  40875b:	add    eax,DWORD PTR [edx+0x7803cc00]
  408761:	add    BYTE PTR [edx],bl
  408763:	add    al,0x0
  408765:	mov    BYTE PTR [eax],0x7
  408768:	add    al,0x70
  40876a:	add    BYTE PTR [ebp-0x16ff7ffd],bh
  408770:	add    edx,DWORD PTR [eax+eax*1-0x4198615a]
  408777:	(bad)  
  408778:	mov    edi,0xbf489c03
  40877d:	cmc    
  40877e:	xchg   ebp,eax
  40877f:	jno    0x408715
  408781:	div    BYTE PTR [edx-0x3ee27198]
  408787:	js     0x40872a
  408789:	not    BYTE PTR [ebx+eiz*2+0x77bc127d]
  408790:	jmp    0x9a40882c
  408795:	add    dh,BYTE PTR [ebx-0x63fc7fbb]
  40879b:	dec    eax
  40879c:	jg     0x4087d3
  40879e:	xchg   edi,eax
  40879f:	jno    0x4087f5
  4087a1:	xor    DWORD PTR [edx-0x3fd5b198],esi
  4087a7:	js     0x4087ca
  4087a9:	xor    DWORD PTR [ebx+eiz*2-0xd9cac3],edx
  4087b0:	sbb    ebp,DWORD PTR [edx]
  4087b2:	rcr    BYTE PTR [edi],0xf9
  4087b5:	addr16 repz sub eax,0x9f367f9
  4087bc:	jmp    0x3b408858
  4087c1:	or     al,al
  4087c3:	pop    ds
  4087c4:	jmp    0x7408860
  4087c9:	add    BYTE PTR [eax-0x67e7004f],dl
  4087cf:	mov    dl,0xff
  4087d1:	mov    esp,0x4ffd697
  4087d6:	cwde   
  4087d7:	xchg   esp,eax
  4087d8:	inc    DWORD PTR [eax+edx*4]
  4087db:	add    BYTE PTR [eax],al
  4087dd:	sbb    esi,esp
  4087df:	(bad)  
  4087e0:	dec    esi
  4087e1:	fnstenv [esp+edx*4]
  4087e4:	push   ebx
  4087e5:	stos   BYTE PTR es:[edi],al
  4087e6:	out    0xd2,eax
  4087e8:	outs   dx,BYTE PTR ds:[esi]
  4087e9:	retf   0x9d1e
  4087ec:	jae    0x4087d7
  4087ee:	xchg   edi,eax
  4087ef:	add    BYTE PTR [eax],al
  4087f1:	add    BYTE PTR ds:0xd1435e50,cl
  4087f7:	mov    ?,WORD PTR [edx+0x65]
  4087fa:	in     eax,dx
  4087fb:	add    DWORD PTR [eax],eax
  4087fd:	add    BYTE PTR ds:0x22505e50,ch
  408803:	mov    gs,WORD PTR [ebx+0x0]
  408806:	std    
  408807:	dec    edi
  408808:	pop    esi
  408809:	push   edx
  40880a:	or     BYTE PTR [ebp+0x63],bl
  40880d:	add    ch,ch
  40880f:	dec    edi
  408810:	pop    esi
  408811:	push   edi
  408812:	das    
  408813:	test   BYTE PTR [ebx+0x65],dh
  408816:	lods   eax,DWORD PTR ds:[esi]
  408817:	add    DWORD PTR [eax],eax
  408819:	add    BYTE PTR [ebp+0x7d000001],ch
  40881f:	add    DWORD PTR [eax],eax
  408821:	add    BYTE PTR [ebp+0x1],bh
  408824:	add    BYTE PTR [eax],al
  408826:	ins    DWORD PTR es:[edi],dx
  408827:	add    DWORD PTR [ecx],eax
  408829:	add    BYTE PTR [ebp+0x2f1a],bl
  40882f:	outs   dx,DWORD PTR ds:[esi]
  408830:	push   ss
  408831:	inc    eax
  408832:	add    BYTE PTR [eax+0x1d],ch
  408835:	inc    eax
  408836:	add    bh,bh
  408838:	sbb    al,0x40
  40883a:	add    BYTE PTR [eax+0x18],ch
  40883d:	inc    eax
  40883e:	add    cl,ch
  408840:	sbb    BYTE PTR [eax+0x0],al
  408843:	pusha  
  408844:	add    DWORD PTR [eax],eax
  408846:	add    BYTE PTR [edx+eax*1],ch
  408849:	add    al,0x0
  40884b:	push   edi
  40884c:	dec    esi
  40884d:	sub    DWORD PTR [eax],eax
  40884f:	ins    DWORD PTR es:[edi],dx
  408850:	ins    DWORD PTR es:[edi],dx
  408851:	push   edx
  408852:	push   esp
  408853:	cmp    eax,0x7a000001
  408858:	aas    
  408859:	push   ebx
  40885a:	add    BYTE PTR [ebp+0x50],dh
  40885d:	push   ebx
  40885e:	push   eax
  40885f:	push   edx
  408860:	sub    al,0x2d
  408862:	xor    ebp,edi
  408864:	add    BYTE PTR [eax],al
  408866:	add    BYTE PTR [edx+eiz*2],ch
  408869:	bound  esp,QWORD PTR [ebp-0x6c]
  40886c:	inc    edi
  40886d:	scas   eax,DWORD PTR es:[edi]
  40886e:	sub    al,0x60
  408870:	cmp    BYTE PTR [ebp-0x61c79e9a],dl
  408876:	fs sahf 
  408878:	test   DWORD PTR [ebx],0x965a9400
  40887e:	ins    DWORD PTR es:[edi],dx
  40887f:	inc    edx
  408880:	cmp    al,0xa2
  408882:	jae    0x4088c1
  408884:	mov    ss,WORD PTR [ebp-0x68a58bc7]
  40888a:	outs   dx,BYTE PTR ds:[esi]
  40888b:	inc    edi
  40888c:	je     0x408886
  40888e:	or     DWORD PTR [esp+ecx*4+0x39006bb1],edx
  408895:	mov    ss,WORD PTR [ebp-0x688cc7d3]
  40889b:	call   FWORD PTR [ebx-0xa8c5ea3]
  4088a1:	adc    BYTE PTR [ebp-0x4e4af8ac],0x40
  4088a8:	sti    
  4088a9:	mov    esp,0xc5e77395
  4088ae:	mov    cl,0x68
  4088b0:	add    bh,BYTE PTR [ebx-0x2d6bfffd]
  4088b6:	mov    esi,0x319b453
  4088bb:	add    BYTE PTR [ecx+ecx*1-0x617ad4b],dl
  4088c2:	add    eax,DWORD PTR [eax]
  4088c4:	xchg   esp,eax
  4088c5:	or     eax,0x1243ff9b
  4088ca:	out    dx,al
  4088cb:	(bad)  
  4088cc:	cmp    eax,DWORD PTR [edx]
  4088ce:	out    dx,eax
  4088cf:	push   DWORD PTR [ebx]
  4088d1:	add    dh,al
  4088d3:	jmp    FWORD PTR [ebx]
  4088d5:	adc    dh,cl
  4088d7:	jmp    DWORD PTR [ebx]
  4088d9:	adc    dh,dl
  4088db:	call   FWORD PTR [ebx]
  4088dd:	add    dh,bl
  4088df:	call   DWORD PTR [ebx]
  4088e1:	(bad)  
  4088e2:	call   0x39f:0xdd009475
  4088e9:	and    al,0xd5
  4088eb:	mov    cl,0xfb
  4088ed:	and    eax,ecx
  4088ef:	mov    cl,0xf3
  4088f1:	and    ecx,ebx
  4088f3:	mov    cl,0xeb
  4088f5:	and    ebp,ebx
  4088f7:	add    DWORD PTR [eax],eax
  4088f9:	xchg   esi,eax
  4088fa:	(bad)  
  4088fb:	jmp    0xeb3f1f01
  408900:	add    DWORD PTR [esi-0x62061d02],edx
  408906:	loopne 0x4088fa
  408908:	stc    
  408909:	(bad)  
  40890a:	div    dl
  40890c:	stc    
  40890d:	(bad)  
  40890e:	neg    BYTE PTR [ecx-0x6766da60]
  408914:	scas   eax,DWORD PTR es:[edi]
  408915:	stos   DWORD PTR es:[edi],eax
  408916:	and    edx,DWORD PTR [edi-0x3e4fd95f]
  40891c:	add    edx,DWORD PTR [eax+eax*1-0x65f95d55]
  408923:	mov    ebx,esp
  408925:	mov    esp,DWORD PTR [ebx]
  408927:	xor    BYTE PTR [ecx-0x11aa6c16],dh
  40892d:	(bad)  
  40892e:	rcr    BYTE PTR [edx-0x6b],1
  408931:	neg    BYTE PTR [ebp+0x236bb159]
  408937:	or     eax,DWORD PTR [ecx+edi*4]
  40893a:	add    BYTE PTR [edx],bh
  40893c:	add    al,0xb6
  40893e:	add    cl,ch
  408940:	add    edx,DWORD PTR [eax+eax*1+0x71040b]
  408947:	sbb    al,BYTE PTR [esi+esi*2]
  40894a:	add    cl,cl
  40894c:	add    esi,DWORD PTR [ecx+0x0]
  40894f:	sbb    al,BYTE PTR [esp+edx*4]
  408952:	add    BYTE PTR [ecx+esi*4],dl
  408955:	mov    al,0xae
  408957:	or     edx,DWORD PTR [esi-0x67fb2d57]
  40895d:	add    BYTE PTR [edi+0x462a0000],ch
  408963:	pushf  
  408964:	pusha  
  408965:	cmc    
  408966:	sub    bh,BYTE PTR [ebp+ebp*2+0x6eb11edf]
  40896d:	iret   
  40896e:	and    bl,BYTE PTR [ebp+ebp*2+0x6e96d5dd]
  408975:	retf   0x230c
  408978:	jmp    FWORD PTR [ebp-0x448c51fe]
  40897e:	add    BYTE PTR [eax-0x67fe38bc],ch
  408984:	jno    0x408944
  408986:	and    DWORD PTR [esp+eiz*2+0x6bc0f397],edx
  40898d:	mov    ?,esp
  40898f:	xchg   ebp,eax
  408990:	call   FWORD PTR [ecx-0x7c006769]
  408996:	xchg   edi,eax
  408997:	xchg   esp,eax
  408998:	call   DWORD PTR [edi+edx*4-0x68450011]
  40899f:	sar    bh,cl
  4089a1:	mov    WORD PTR [edi-0x6883006c],ss
  4089a7:	add    BYTE PTR [eax],al
  4089a9:	and    ebp,DWORD PTR [esi*8-0x69d2baf7]
  4089b0:	pop    ds
  4089b1:	or     edi,DWORD PTR [ebp-0x51]
  4089b4:	and    esp,ebx
  4089b6:	cdq    
  4089b7:	xchg   edi,eax
  4089b8:	or     DWORD PTR gs:0xfc3a68aa,ebp
  4089bf:	add    DWORD PTR [edx],esp
  4089c1:	or     al,0x0
  4089c3:	sub    esp,eax
  4089c5:	pop    ds
  4089c6:	inc    esi
  4089c7:	pop    es
  4089c8:	scas   al,BYTE PTR es:[edi]
  4089c9:	outs   dx,BYTE PTR ds:[esi]
  4089ca:	leave  
  4089cb:	sti    
  4089cc:	and    edi,edi
  4089ce:	or     edx,DWORD PTR [eax-0x67e30061]
  4089d4:	add    BYTE PTR [eax],al
  4089d6:	sub    ebp,edi
  4089d8:	sahf   
  4089d9:	add    BYTE PTR [bp+si+0x6e1c],cl
  4089de:	xchg   bx,ax
  4089e0:	(bad)  
  4089e2:	and    eax,0x640a110e
  4089e7:	nop
  4089e8:	jo     0x408a09
  4089ea:	das    
  4089eb:	xor    ebx,DWORD PTR [esi]
  4089ed:	and    DWORD PTR ds:0xa0c1bde,esp
  4089f3:	std    
  4089f4:	std    
  4089f5:	(bad)  
  4089f6:	(bad)  
  4089f7:	jmp    0x21fc:0x8d0062fd
  4089fe:	add    BYTE PTR [eax-0x60ff8d04],dl
  408a04:	cld    
  408a05:	(bad)  
  408a06:	(bad)  
  408a07:	(bad)  
  408a08:	std    
  408a09:	outs   dx,BYTE PTR ds:[esi]
  408a0a:	add    BYTE PTR [eax],ch
  408a0c:	(bad)  
  408a0d:	push   edx
  408a0e:	add    BYTE PTR ds:0x1e0064fe,bl
  408a14:	(bad)  
  408a15:	(bad)  
  408a16:	dec    eax
  408a18:	repz or al,0xa
  408a1b:	lods   eax,DWORD PTR ds:[esi]
  408a1c:	std    
  408a1d:	(bad)  
  408a1e:	(bad)  
  408a1f:	fst    QWORD PTR [eax]
  408a21:	or     cl,BYTE PTR ds:0xfffffd77
  408a27:	add    BYTE PTR [eax-0x7b],dl
  408a2a:	(bad)  
  408a2b:	(bad)  
  408a2c:	mov    esi,0xbe0064fc
  408a31:	cld    
  408a32:	addr16 add al,dl
  408a35:	cld    
  408a36:	jae    0x408a38
  408a38:	sar    esp,1
  408a3a:	outs   dx,BYTE PTR ds:[esi]
  408a3b:	add    BYTE PTR [edx+0x7d006dfc],ah
  408a41:	cld    
  408a42:	jno    0x408a44
  408a44:	aam    0xfc
  408a46:	jne    0x408a48
  408a48:	aam    0xfc
  408a4a:	imul   eax,DWORD PTR [eax],0xffffff90
  408a4d:	cld    
  408a4e:	data16 add BYTE PTR [eax-0x6b000004],dl
  408a55:	sub    al,0x3
  408a57:	add    BYTE PTR [ebp+ebx*4-0x2f6bbeb6],dl
  408a5e:	dec    ebx
  408a5f:	inc    ecx
  408a60:	xchg   esp,eax
  408a61:	push   es
  408a62:	add    al,0x3a
  408a64:	xchg   esp,eax
  408a65:	aas    
  408a66:	add    ecx,DWORD PTR [ebp-0x6c]
  408a69:	add    eax,DWORD PTR [ebx+edi*1]
  408a6c:	xchg   esp,eax
  408a6d:	fiadd  WORD PTR [ebx]
  408a6f:	dec    esi
  408a70:	xchg   esp,eax
  408a71:	add    ecx,DWORD PTR gs:[esi-0x6c]
  408a75:	bound  eax,QWORD PTR [ebx]
  408a77:	dec    esi
  408a78:	xchg   esp,eax
  408a79:	outs   dx,DWORD PTR ds:[esi]
  408a7a:	add    edi,DWORD PTR [ebx]
  408a7c:	xchg   esp,eax
  408a7d:	inc    BYTE PTR [ebx]
  408a7f:	cmp    edx,DWORD PTR [ebx+edx*2+0x945703]
  408a86:	add    al,0x0
  408a88:	xchg   esp,eax
  408a89:	scas   eax,DWORD PTR es:[edi]
  408a8a:	cmp    al,BYTE PTR [ecx+0x0]
  408a8d:	xchg   esp,eax
  408a8e:	mov    bl,0x41
  408a90:	inc    ecx
  408a91:	xchg   esp,eax
  408a92:	int    0x41
  408a94:	inc    ecx
  408a95:	xchg   esp,eax
  408a96:	add    di,WORD PTR [ecx-0x6c]
  408a9a:	xchg   BYTE PTR [ebx],al
  408a9c:	dec    esp
  408a9d:	xchg   esp,eax
  408a9e:	nop
  408a9f:	add    esi,DWORD PTR [ebx-0x6c]
  408aa2:	stos   DWORD PTR es:[edi],eax
  408aa3:	add    dl,BYTE PTR [esi-0x6c]
  408aa6:	add    BYTE PTR [ebx],0x65
  408aa9:	xchg   esp,eax
  408aaa:	xchg   esi,eax
  408aab:	add    dh,BYTE PTR [ebx]
  408aad:	xchg   esp,eax
  408aae:	sti    
  408aaf:	add    eax,DWORD PTR [eax]
  408ab1:	xchg   esp,eax
  408ab2:	in     al,dx
  408ab3:	add    eax,DWORD PTR [esp+edx*4-0x20]
  408ab7:	add    eax,DWORD PTR [ebx-0x6c]
  408aba:	fld    QWORD PTR [ebx]
  408abc:	imul   edx,DWORD PTR [esp+ecx*8-0x2a6b91fd],0xea940003
  408ac7:	add    ebp,DWORD PTR [ecx-0x6c]
  408aca:	retf   0x6503
  408acd:	xchg   esp,eax
  408ace:	add    BYTE PTR [ebx],bl
  408ad0:	add    al,0xab
  408ad2:	add    BYTE PTR [esp+eax*1],dh
  408ad5:	fld    QWORD PTR [eax]
  408ad7:	ds add al,0xba
  408ada:	add    BYTE PTR ds:0xfb00da04,al
  408ae0:	add    esi,DWORD PTR [ebp+0x79040c00]
  408ae6:	add    cl,ch
  408ae8:	add    edx,DWORD PTR [eax+eax*1+0x73042a]
  408aef:	xlat   BYTE PTR ds:[ebx]
  408af0:	add    eax,DWORD PTR [eax]
  408af2:	xchg   DWORD PTR [eax],eax
  408af4:	into   
  408af5:	add    eax,DWORD PTR [eax+0x4303cc00]
  408afb:	add    al,al
  408afd:	add    esi,DWORD PTR [edx+0x0]
  408b00:	int    0x3
  408b02:	imul   eax,DWORD PTR [eax],0xffffffb6
  408b05:	add    edx,DWORD PTR [edi+0x0]
  408b08:	lds    eax,FWORD PTR [ebx]
  408b0a:	xor    eax,0x4703ba00
  408b0f:	add    cl,ch
  408b11:	add    edx,DWORD PTR [eax+eax*1+0x6703ca]
  408b18:	fild   DWORD PTR [ebx]
  408b1a:	arpl   WORD PTR [eax],ax
  408b1c:	xlat   BYTE PTR ds:[ebx]
  408b1d:	add    ebx,DWORD PTR [eax+eax*1-0x17]
  408b21:	add    edx,DWORD PTR [eax+eax*1+0x10d039a]
  408b28:	jp     0x408b2d
  408b2a:	out    0x0,eax
  408b2c:	add    DWORD PTR [ebx],0x44d00f5
  408b32:	jmp    0x408b34
  408b34:	push   esi
  408b35:	add    al,0x94
  408b37:	add    BYTE PTR [edi],ch
  408b39:	retf   
  408b3a:	ret    
  408b3b:	int    0x23
  408b3d:	add    al,0x94
  408b3f:	add    al,al
  408b41:	and    bl,BYTE PTR [ebx+0x0]
  408b44:	stos   BYTE PTR es:[edi],al
  408b45:	cmp    ebx,DWORD PTR [edi+0x42]
  408b48:	add    BYTE PTR [ebp+ebx*1-0x685f39b1],ch
  408b4f:	add    BYTE PTR [eax],al
  408b51:	mov    edx,esi
  408b53:	xor    esp,edx
  408b55:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408b56:	add    ch,bl
  408b58:	inc    edx
  408b59:	xlat   BYTE PTR ds:[ebx]
  408b5a:	test   al,0x6f
  408b5c:	sbb    bl,ch
  408b5e:	popf   
  408b5f:	popa   
  408b60:	sbb    ebx,eax
  408b62:	mov    ds:0x95da3e61,eax
  408b67:	stos   DWORD PTR es:[edi],eax
  408b68:	cmp    al,al
  408b6a:	xchg   ecx,eax
  408b6b:	push   esp
  408b6c:	dec    ebx
  408b6d:	shl    DWORD PTR [edx-0x2dffd3aa],1
  408b73:	sub    ebx,DWORD PTR [eax-0x52f52192]
  408b79:	fisttp DWORD PTR ss:[eax]
  408b7c:	xchg   edi,eax
  408b7d:	jmp    FWORD PTR [eax-0x30bb3b27]
  408b83:	cld    
  408b84:	mov    eax,ds:0x9702b368
  408b89:	ins    DWORD PTR es:[edi],dx
  408b8a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408b8b:	and    dl,BYTE PTR [ecx+0x97c07c]
  408b91:	add    ch,al
  408b93:	aad    0xb8
  408b95:	dec    ebp
  408b96:	pushf  
  408b97:	add    BYTE PTR [edi-0x531b70c0],ah
  408b9d:	jno    0x408b2e
  408b9f:	xchg   edi,eax
  408ba0:	add    BYTE PTR [eax],al
  408ba2:	jmp    0xbc519238
  408ba7:	jl     0x408b83
  408ba9:	xor    al,0xc4
  408bab:	je     0x408b96
  408bad:	cmp    cl,ah
  408baf:	je     0x408b99
  408bb1:	sub    dl,BYTE PTR [edi]
  408bb3:	imul   ebp,ebx,0x97f536
  408bb9:	add    al,bh
  408bbb:	add    BYTE PTR [esi-0x9],ah
  408bbe:	add    edi,ebx
  408bc0:	lea    esi,[ecx+0x9ad0052]
  408bc6:	add    BYTE PTR [ecx],al
  408bc8:	cmp    eax,0xe8000002
  408bcd:	lods   al,BYTE PTR ds:[esi]
  408bce:	mov    eax,ds:0xb1a2c8b1
  408bd3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408bd4:	mov    edi,0xc3bdbc8e
  408bd9:	stos   BYTE PTR es:[edi],al
  408bda:	mov    ebx,0xa2bca7a8
  408bdf:	mov    DWORD PTR [eax+eiz*4-0x413b5a4b],ebp
  408be6:	lods   eax,DWORD PTR ds:[esi]
  408be7:	mov    eax,0xbab0967b
  408bec:	imul   ecx,DWORD PTR [edi+edx*4-0x6a8676],0xa3ae7eff
  408bf7:	mov    bh,0xe
  408bf9:	test   eax,0x8869a2b3
  408bfe:	mov    ds:0xbca313a8,eax
  408c03:	mov    al,ds:0xffffa75b
  408c08:	punpckhdq mm5,QWORD PTR [ebp+0x6a]
  408c0c:	sar    DWORD PTR [eax+0x6e],1
  408c0f:	add    bl,cl
  408c11:	xor    DWORD PTR ds:0x3307b532,esp
  408c17:	and    eax,0x2733c7
  408c1c:	shl    BYTE PTR [edi+0x54],1
  408c1f:	cs add cl,dl
  408c22:	cmp    BYTE PTR [ebp+0x2a],dl
  408c25:	fnstsw WORD PTR [ecx+ebx*2]
  408c28:	add    BYTE PTR [esi-0x55323e33],bl
  408c2e:	ror    esp,0xf0
  408c31:	nop
  408c32:	ret    
  408c33:	enter  0x45d9,0xdb
  408c37:	(bad)  
  408c39:	jge    0x408c3c
  408c3b:	add    BYTE PTR [eax],al
  408c3d:	xchg   esp,eax
  408c3e:	fcom   QWORD PTR [edx-0x674f1094]
  408c44:	jne    0x408c01
  408c46:	fsub   QWORD PTR [edx+esi*2-0x648c546c]
  408c4d:	sbb    al,0xa3
  408c4f:	jns    0x408bdc
  408c51:	and    DWORD PTR [edx-0x37fc4387],esp
  408c57:	pop    edi
  408c58:	mov    ds:0x9158aff3,al
  408c5d:	bswap  ecx
  408c5f:	lods   ax,WORD PTR ds:[esi]
  408c61:	sti    
  408c62:	mov    dh,0x57
  408c64:	in     eax,0xe
  408c66:	mov    esi,0xac49827c
  408c6b:	mov    ds,WORD PTR [eax-0x639159da]
  408c71:	push   cs
  408c72:	mov    ds:0x271e9a7d,eax
  408c77:	add    eax,DWORD PTR [eax]
  408c79:	xchg   esp,eax
  408c7a:	cmp    ch,BYTE PTR [esi-0x5bcb929d]
  408c80:	je     0x408cf9
  408c82:	neg    DWORD PTR [ecx+0x275c0063]
  408c88:	add    eax,DWORD PTR [eax]
  408c8a:	xchg   esp,eax
  408c8b:	cwde   
  408c8c:	fs mov cl,0xf7
  408c8f:	sub    DWORD PTR [esi-0x4b],0xac509cae
  408c96:	xchg   esp,eax
  408c97:	adc    dh,bh
  408c99:	or     eax,0x42042898
  408c9e:	pushf  
  408c9f:	adc    DWORD PTR ds:0x1269400,eax
  408ca5:	adc    DWORD PTR [ecx+0x27],edi
  408ca8:	repnz push cs
  408caa:	in     eax,dx
  408cab:	cmp    al,0x4
  408cad:	pop    ds
  408cae:	xchg   esp,eax
  408caf:	inc    esp
  408cb0:	fsub   QWORD PTR [edi]
  408cb2:	lds    edx,FWORD PTR [ecx-0x2f]
  408cb5:	aaa    
  408cb6:	add    al,0x1
  408cb8:	sbb    eax,0x7400a9ec
  408cbd:	add    DWORD PTR [edx+ecx*4],0x64
  408cc1:	mov    DWORD PTR [eax],ecx
  408cc3:	outs   dx,DWORD PTR ds:[esi]
  408cc4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408cc5:	pop    DWORD PTR [edi]
  408cc7:	mov    ecx,gs
  408cc9:	add    edx,DWORD PTR [eax+eax*1+0x471c736a]
  408cd0:	outs   dx,DWORD PTR ds:[esi]
  408cd1:	jp     0x408ceb
  408cd3:	add    DWORD PTR [esi],esp
  408cd5:	call   0x92d3:0x940d9fab
  408cdc:	sub    BYTE PTR [edx+eiz*4-0x5369fd64],dh
  408ce3:	xchg   esp,eax
  408ce4:	or     dl,BYTE PTR [ebx-0x52f04f43]
  408cea:	add    BYTE PTR [ecx-0x54],bh
  408ced:	add    DWORD PTR [esi-0x670c339b],ebx
  408cf3:	mov    ebp,DWORD PTR [edx-0x51443cee]
  408cf9:	stos   BYTE PTR es:[edi],al
  408cfa:	ror    DWORD PTR [esi-0x44],0xba
  408cfe:	mov    ds:0x3bec67f,al
  408d03:	xchg   esp,eax
  408d04:	add    BYTE PTR ds:0xcf9e73e3,al
  408d0a:	or     BYTE PTR [esi-0x1d],dh
  408d0d:	retf   0x32ab
  408d10:	popf   
  408d11:	jmp    0x9faf:0xba9971ea
  408d18:	rcr    esp,cl
  408d1a:	mov    al,ds:0xf48ea627
  408d1f:	imul   edx,edi,0xf137a08a
  408d25:	in     al,0x2
  408d27:	cmp    BYTE PTR [ebp-0x444f5a],bh
  408d2d:	lock mov al,0xef
  408d30:	mov    cl,0xff
  408d32:	retf   0xa8e
  408d35:	pop    ecx
  408d36:	call   0xb75c:0xfd16d744
  408d3d:	pop    esi
  408d3e:	pop    ss
  408d3f:	nop
  408d40:	add    BYTE PTR [eax],al
  408d42:	sub    DWORD PTR [ecx-0x39],edx
  408d45:	push   edi
  408d46:	jmp    0x408d90
  408d48:	rol    BYTE PTR [esp+ebx*1+0x59],0x1b
  408d4d:	push   edi
  408d4f:	add    BYTE PTR [edi-0x2d],ch
  408d52:	and    al,0xfd
  408d54:	xchg   edi,eax
  408d55:	add    BYTE PTR [eax],al
  408d57:	jmp    0x4a408df3
  408d5c:	rcr    BYTE PTR [esi-0x5c],cl
  408d5f:	mov    dh,0x6e
  408d61:	jle    0x408ce9
  408d63:	jnp    0x408d76
  408d65:	jl     0x408d3f
  408d67:	push   esi
  408d68:	lods   eax,DWORD PTR ds:[esi]
  408d69:	imul   ebp,DWORD PTR [ebp+esi*4-0x6c2eb43c],0x518b6dbb
  408d74:	sub    DWORD PTR [edi],0x870c62c8
  408d7a:	lea    ecx,[edi+0x3cdd6551]
  408d80:	pusha  
  408d81:	push   edx
  408d82:	mov    bh,0x97
  408d84:	ins    DWORD PTR es:[edi],dx
  408d85:	ins    DWORD PTR es:[edi],dx
  408d86:	cmc    
  408d87:	jae    0x408dd0
  408d89:	pop    edx
  408d8a:	mov    bl,0x8e
  408d8c:	cmp    al,0x6b
  408d8e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408d8f:	cmp    al,0x5c
  408d91:	dec    ebx
  408d92:	xchg   DWORD PTR [ebp+0x7dad633b],ecx
  408d98:	pop    ebp
  408d99:	mov    fs:0x95711f44,eax
  408d9f:	and    eax,0x3df75b4c
  408da4:	imul   ecx,DWORD PTR [ebp-0x23],0x38
  408da8:	dec    ebp
  408da9:	jo     0x408d9b
  408dab:	add    bl,al
  408dad:	leave  
  408dae:	(bad)
  408db1:	cdq    
  408db2:	test   BYTE PTR [ecx-0x5d5b5500],al
  408db8:	lock out dx,eax
  408dba:	in     al,0xe8
  408dbc:	xchg   esi,eax
  408dbd:	push   cs
  408dbe:	scas   al,BYTE PTR es:[edi]
  408dbf:	jecxz  0x408d5e
  408dc1:	call   0x3e412c5f
  408dc6:	loope  0x408db5
  408dc8:	out    0x52,al
  408dca:	hlt    
  408dcb:	test   DWORD PTR [ebp-0x1b081a3b],ecx
  408dd1:	pop    esp
  408dd2:	mov    bh,ch
  408dd4:	shl    ecx,0xdc
  408dd7:	loopne 0x408d9c
  408dd9:	sbb    bl,al
  408ddb:	(bad)  
  408ddc:	lds    ebx,FWORD PTR [eax-0x14]
  408ddf:	(bad)  
  408de0:	aam    0x55
  408de2:	int    0xdc
  408de4:	retf   
  408de5:	sub    eax,0xaefffffe
  408dea:	nop
  408deb:	popf   
  408dec:	xchg   esi,eax
  408ded:	jb     0x408d72
  408def:	idiv   ch
  408df1:	adc    eax,0x5c948796
  408df6:	not    DWORD PTR [edi-0x4b5f404a]
  408dfc:	mov    ds:0xb595ac05,al
  408e01:	adc    ch,BYTE PTR [eax+0x505a8be]
  408e07:	add    BYTE PTR [eax],al
  408e09:	aaa    
  408e0a:	pop    ecx
  408e0b:	push   esi
  408e0c:	pop    edi
  408e0d:	sti    
  408e0e:	inc    ebp
  408e0f:	ds xor al,0xcc
  408e12:	dec    edi
  408e13:	inc    eax
  408e14:	pop    ebp
  408e15:	and    eax,0x78554a
  408e1a:	call   0xfaa3ea83
  408e1f:	jl     0x408e9c
  408e21:	pop    esi
  408e22:	push   cs
  408e23:	addr16 data16 ja 0x408dbb
  408e27:	mov    DWORD PTR [ebx-0x16ca6401],edx
  408e2d:	sub    al,0xcb
  408e2f:	pop    ds
  408e30:	icebp  
  408e31:	and    dh,BYTE PTR [eax-0x3cdd21a4]
  408e37:	pop    esp
  408e38:	or     DWORD PTR [ebx],ebp
  408e3a:	mov    ch,0x43
  408e3c:	iret   
  408e3d:	pop    ds
  408e3e:	cmc    
  408e3f:	daa    
  408e40:	add    eax,DWORD PTR [eax]
  408e42:	xchg   esp,eax
  408e43:	ins    BYTE PTR es:[edi],dx
  408e44:	xor    al,0xd2
  408e46:	dec    esp
  408e47:	dec    edx
  408e48:	sub    al,0xdc
  408e4a:	aas    
  408e4b:	gs aas 
  408e4d:	fcom   QWORD PTR [ebp+ecx*2+0x14]
  408e51:	aam    0x6a
  408e53:	pop    esi
  408e54:	dec    esi
  408e55:	fist   WORD PTR [edi+edx*4+0x2703a484]
  408e5c:	add    eax,DWORD PTR [eax]
  408e5e:	xchg   esp,eax
  408e5f:	fdivr  DWORD PTR [eax+ecx*2+0x4cb8cdca]
  408e66:	mov    edi,0xd555afe4
  408e6b:	rol    ecx,1
  408e6d:	pop    ebp
  408e6e:	pop    edx
  408e6f:	in     al,0xc4
  408e71:	inc    ebx
  408e72:	push   eax
  408e73:	clc    
  408e74:	mov    edx,0xa01c8175
  408e79:	ins    DWORD PTR es:[edi],dx
  408e7a:	pop    edx
  408e7b:	loope  0x408e21
  408e7d:	push   0xbc4e6600
  408e82:	push   esi
  408e83:	jle    0x408eef
  408e85:	mov    dh,0x5b
  408e87:	aas    
  408e88:	gs (bad) 
  408e8a:	pop    ebx
  408e8b:	push   esp
  408e8c:	inc    eax
  408e8d:	(bad)  
  408e8e:	call   ebx
  408e90:	icebp  
  408e91:	iret   
  408e92:	and    al,0x85
  408e94:	inc    esp
  408e95:	shl    DWORD PTR [ecx],1
  408e97:	je     0x408ea6
  408e99:	stos   DWORD PTR es:[edi],eax
  408e9a:	sub    al,0x6f
  408e9c:	adc    BYTE PTR [eax-0x21ffbda4],bh
  408ea2:	aam    0x72
  408ea4:	mov    ebp,0xd1648fa9
  408ea9:	ret    
  408eaa:	into   
  408eab:	dec    esp
  408eac:	xchg   esi,eax
  408ead:	rcr    bh,1
  408eaf:	int3   
  408eb0:	xlat   BYTE PTR ds:[ebx]
  408eb1:	fcmovnb st,st(3)
  408eb3:	mov    ebx,DWORD PTR [eax]
  408eb5:	jmp    0xdc4122bd
  408eba:	int    0x9b
  408ebc:	fimul  WORD PTR [edi+0x5cff9cc9]
  408ec2:	add    bl,BYTE PTR [esi-0x67fc1673]
  408ec8:	mov    bl,0xf3
  408eca:	aam    0xa2
  408ecc:	(bad)  
  408ecd:	sub    eax,0xddaba9fe
  408ed2:	cli    
  408ed3:	mov    bh,0xec
  408ed5:	xlat   BYTE PTR ds:[ebx]
  408ed6:	lock aad 0xf2
  408ed9:	jmp    0xa4a9:0x1aab7ff
  408ee0:	mov    eax,ds:0x7000961c
  408ee5:	faddp  st(6),st
  408ee7:	xchg   edx,eax
  408ee8:	jbe    0x408eca
  408eea:	adc    BYTE PTR [ebx-0x662e6c54],dl
  408ef0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408ef1:	repnz push es
  408ef3:	xchg   esp,eax
  408ef4:	rcl    BYTE PTR [ecx-0x638a62ef],0x25
  408efb:	enter  0xf753,0x1f
  408eff:	into   
  408f00:	mov    eax,ds:0x510af9ff
  408f05:	add    cl,ch
  408f07:	add    edx,DWORD PTR [eax+eax*1+0x68d01ea]
  408f0e:	loop   0x408ed3
  408f10:	cdq    
  408f11:	cmc    
  408f12:	in     eax,dx
  408f13:	dec    ebx
  408f15:	pop    ss
  408f16:	mov    dh,0xa6
  408f18:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  408f1a:	(bad)  
  408f1b:	mov    edi,0xabffaa27
  408f20:	sti    
  408f21:	xchg   ebp,eax
  408f22:	addr16 xchg esi,eax
  408f24:	or     bl,BYTE PTR [ebx-0x70f76fa0]
  408f2a:	pop    eax
  408f2b:	into   
  408f2c:	pop    es
  408f2d:	mov    esp,0xa380bf23
  408f32:	inc    ecx
  408f33:	(bad)  
  408f34:	js     0x408f2d
  408f36:	pusha  
  408f37:	shr    DWORD PTR [edx],0xa3
  408f3a:	jno    0x408f25
  408f3c:	xchg   edi,eax
  408f3d:	add    BYTE PTR [eax],al
  408f3f:	jae    0x408f52
  408f41:	cdq    
  408f42:	jnp    0x408f9a
  408f44:	add    eax,0xfffab
  408f49:	data16 icebp 
  408f4b:	or     eax,0xffbf59e7
  408f50:	pushf  
  408f51:	fisub  WORD PTR [edi+0x0]
  408f54:	popa   
  408f55:	mov    cl,0x5c
  408f57:	mov    al,ds:0xea5ddc87
  408f5c:	(bad)
  408f60:	mov    DWORD PTR [ebp-0x409a1da1],edi
  408f66:	pop    ss
  408f67:	mov    dl,0x59
  408f69:	lds    edx,FWORD PTR [esi-0x6]
  408f6c:	cdq    
  408f6d:	mov    dh,0x19
  408f6f:	add    BYTE PTR [ecx],bh
  408f71:	es xchg esp,eax
  408f73:	js     0x408f73
  408f75:	and    al,0xe7
  408f77:	fs clc 
  408f79:	fcom   QWORD PTR [edi-0x5be0099c]
  408f7f:	ins    BYTE PTR es:[edi],dx
  408f80:	or     dh,ch
  408f82:	popf   
  408f83:	imul   edx,esi,0xd36ea03d
  408f89:	in     al,dx
  408f8a:	mov    ds:0xa0350378,eax
  408f8f:	mov    dx,0xefc4
  408f93:	aas    
  408f94:	add    BYTE PTR [ecx+0x47000002],dh
  408f9a:	lahf   
  408f9b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408f9c:	mov    ds:0xbfe99e10,eax
  408fa1:	push   ss
  408fa2:	imul   BYTE PTR [ecx-0x1e49a358]
  408fa8:	scas   eax,DWORD PTR es:[edi]
  408fa9:	ds mov ecx,0x8500b3be
  408faf:	mov    ch,0xb4
  408fb1:	mov    ch,0xef
  408fb3:	lods   eax,DWORD PTR ds:[esi]
  408fb4:	mov    al,0xa2
  408fb6:	fbstp  TBYTE PTR [ecx+0x7ceebaa5]
  408fbc:	rol    BYTE PTR [eax],0xb1
  408fbf:	out    dx,al
  408fc0:	out    dx,al
  408fc1:	cmc    
  408fc2:	xchg   esi,eax
  408fc3:	out    0xb8,eax
  408fc5:	stc    
  408fc6:	jbe    0x408fa9
  408fc8:	out    dx,eax
  408fc9:	cmc    
  408fca:	dec    edx
  408fcb:	jmp    0xf9ed:0xea3af5b0
  408fd2:	(bad)  
  408fd3:	fsubp  st(4),st
  408fd5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408fd6:	cmp    eax,0xa4000002
  408fdb:	add    edx,DWORD PTR [ecx]
  408fdd:	inc    esp
  408fde:	sub    edi,esi
  408fe0:	or     eax,0x4c143515
  408fe5:	add    DWORD PTR [ebx],esp
  408fe7:	pop    ss
  408fe8:	add    eax,0xff5a331a
  408fed:	call   FWORD PTR [esi+0x50]
  408ff0:	inc    eax
  408ff1:	push   edi
  408ff2:	mov    al,ds:0xb0404b3f
  408ff7:	push   ebp
  408ff8:	pop    ebx
  408ff9:	inc    ecx
  408ffa:	(bad)  
  408ffb:	push   edx
  408ffc:	dec    esp
  408ffd:	pop    ebx
  408ffe:	xchg   esp,eax
  408fff:	aas    
  409000:	push   eax
  409001:	pop    eax
  409002:	mov    al,ds:0x1000543f
  409007:	fwait
  409008:	mov    ds,WORD PTR [ecx-0x717d7602]
  40900e:	xchg   esp,eax
  40900f:	call   0x779d:0x2300928c
  409016:	and    DWORD PTR [ecx],0xffffff87
  409019:	jbe    0x408fba
  40901b:	adc    ebp,DWORD PTR [eax]
  40901d:	add    eax,DWORD PTR [eax]
  40901f:	xchg   esp,eax
  409020:	mov    ds:0x7d239987,al
  409025:	jbe    0x408fbc
  409027:	or     al,0x7f
  409029:	jnp    0x408fc2
  40902b:	std    
  40902c:	sub    BYTE PTR [esi-0x62],0x11
  409030:	lea    edx,[ebx-0x75]
  409033:	sbb    al,0xa5
  409035:	add    eax,DWORD PTR [eax]
  409037:	xchg   esp,eax
  409038:	mov    DWORD PTR [eax-0x669c0591],esp
  40903e:	jge    0x409039
  409040:	xchg   ecx,eax
  409041:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409042:	jnp    0x409033
  409044:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409045:	mov    edi,0x3bae969
  40904a:	add    BYTE PTR [ebp+edi*1+0x5f76f424],dl
  409051:	and    ah,bh
  409053:	dec    esp
  409054:	pop    ebx
  409055:	test   DWORD PTR es:[esi+0x5a],0x274bfe14
  40905d:	add    eax,DWORD PTR [eax]
  40905f:	xchg   esp,eax
  409060:	aaa    
  409061:	out    dx,al
  409062:	add    DWORD PTR [eax-0x65ef0fdb],ecx
  409068:	cmp    DWORD PTR ds:0x2119503,eax
  40906e:	add    BYTE PTR [ebx+ebx*4-0x36e36177],dl
  409075:	jne    0x409011
  409077:	add    BYTE PTR [eax],bl
  409079:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40907a:	sub    DWORD PTR [esp+edx*1+0x14987bb7],0x9400029b
  409085:	dec    esi
  409086:	shl    DWORD PTR [edi+eiz*4],cl
  409089:	add    BYTE PTR [eax],al
  40908b:	loopne 0x409041
  40908d:	int    0x1e
  40908f:	fadd   QWORD PTR [edx-0x2c24fe1a]
  409095:	adc    al,0xd8
  409097:	lea    esi,[esi]
  409099:	mov    esp,DWORD PTR [ebp-0x3a5bcf5f]
  40909f:	lahf   
  4090a0:	cs xchg esp,eax
  4090a2:	popf   
  4090a3:	call   0x26:0xa2b19e42
  4090aa:	pop    es
  4090ab:	std    
  4090ac:	(bad)  
  4090ad:	cli    
  4090ae:	fmul   DWORD PTR [eax]
  4090b0:	xchg   esi,eax
  4090b1:	add    ecx,esp
  4090b3:	or     bl,BYTE PTR [eax-0x6bfb2f11]
  4090b9:	lock call 0xa44124c2
  4090bf:	shl    edx,0xc1
  4090c2:	xor    DWORD PTR [ebx-0x386e511f],0x3e8b2d9
  4090cc:	xchg   esp,eax
  4090cd:	add    BYTE PTR [ebx-0x69],ah
  4090d0:	repz xchg edx,eax
  4090d2:	cmp    al,0x9e
  4090d4:	mov    ecx,0xb6a440a3
  4090d9:	add    BYTE PTR [edx],cl
  4090db:	loopne 0x4090dd
  4090dd:	test   bl,bl
  4090df:	jmp    0x4090ad
  4090e1:	sbb    dh,0x2
  4090e4:	out    0x66,eax
  4090e6:	fsub   st(0),st
  4090e8:	add    edx,DWORD PTR [eax+eax*1+0x14461790]
  4090ef:	(bad)
  4090f3:	xchg   BYTE PTR [ebx],bh
  4090f5:	or     esp,DWORD PTR [edx]
  4090f7:	jg     0x409120
  4090f9:	add    ebx,DWORD PTR [esi]
  4090fb:	jmp    0xd8412503
  409100:	(bad)  
  409101:	lods   eax,DWORD PTR ds:[esi]
  409102:	sti    
  409103:	(bad)  
  409104:	fsubrp st(4),st
  409106:	(bad)  
  409107:	adc    dl,dh
  409109:	div    bh
  40910b:	pop    ss
  40910c:	push   es
  40910d:	cwde   
  40910e:	add    BYTE PTR [eax],al
  409110:	dec    ebx
  409111:	mov    bh,BYTE PTR [ecx]
  409113:	test   DWORD PTR [eax-0x5d],0x7842dc26
  40911a:	push   ss
  40911b:	add    BYTE PTR [edi-0x62],dl
  40911e:	sub    eax,0x267544ed
  409123:	ror    BYTE PTR [ebx-0x70],1
  409126:	xor    eax,0x118c48e8
  40912b:	call   0x411c43
  409130:	jge    0x409152
  409132:	mov    BYTE PTR [edx-0x767be685],ah
  409138:	outs   dx,BYTE PTR ds:[esi]
  409139:	(bad)  
  40913b:	nop
  40913c:	pop    eax
  40913d:	add    DWORD PTR [esp+edx*4+0x69],esp
  409141:	add    BYTE PTR [edx],dl
  409143:	add    BYTE PTR [ecx+0x9866],0x58
  40914a:	jecxz  0x4091c9
  40914c:	scas   eax,DWORD PTR es:[edi]
  40914d:	xchg   BYTE PTR ds:0xeb7b8481,dl
  409153:	outs   dx,DWORD PTR ds:[esi]
  409154:	popf   
  409155:	jne    0x409174
  409157:	pop    esi
  409158:	cwde   
  409159:	arpl   si,ax
  40915b:	add    BYTE PTR [edx+0x1472],0x96
  409162:	jl     0x4091a3
  409164:	jmp    0xc064f603
  409169:	xchg   ecx,eax
  40916a:	data16 xor al,cl
  40916d:	lds    edx,FWORD PTR [edi-0xcf80000]
  409173:	mov    ebx,DWORD PTR [esi+0xc]
  409176:	xor    edi,DWORD PTR [ecx+0x1331fe64]
  40917c:	inc    DWORD PTR [eax]
  40917e:	int3   
  40917f:	sbb    DWORD PTR [edi+ebx*1],esi
  409182:	aas    
  409183:	daa    
  409184:	sub    ebp,DWORD PTR [edx]
  409186:	and    eax,0xde24272d
  40918b:	(bad)  
  40918c:	(bad)  
  40918d:	call   DWORD PTR [ecx]
  40918f:	mov    dh,0x95
  409191:	mov    edx,0xa3a19b07
  409196:	xor    bh,bh
  409198:	(bad)  
  409199:	dec    esp
  40919b:	cli    
  40919c:	and    cl,BYTE PTR [esi]
  40919e:	(bad)  
  4091a0:	or     ebx,DWORD PTR ds:0x19feb4
  4091a6:	add    ah,bl
  4091a8:	ja     0x409226
  4091aa:	jns    0x4091a6
  4091ac:	je     0x409229
  4091ae:	dec    edi
  4091af:	add    al,0x70
  4091b1:	je     0x409224
  4091b3:	add    bl,BYTE PTR [ebp+0x73]
  4091b6:	add    cl,al
  4091b8:	int    0xbf
  4091ba:	ret    0xc0b0
  4091bd:	rol    BYTE PTR [eax],0xdd
  4091c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4091c1:	add    BYTE PTR [ecx+esi*8-0x1d783059],0xcc
  4091c9:	mov    DWORD PTR [edi-0x76314479],esp
  4091cf:	cmp    esi,eax
  4091d1:	rcl    dl,1
  4091d3:	ffreep st(3)
  4091d5:	mov    edi,0xc68e0ad4
  4091da:	cwde   
  4091db:	mov    ah,0x96
  4091dd:	(bad)  
  4091de:	push   DWORD PTR [edx]
  4091e0:	pop    ss
  4091e1:	add    eax,0xfffe2d07
  4091e6:	jmp    DWORD PTR [eax]
  4091e8:	fwait
  4091e9:	mov    dh,0xa1
  4091eb:	mov    eax,0x3a3bec1
  4091f0:	mov    cl,0xa1
  4091f2:	mov    esi,0xfffffe2d
  4091f7:	xchg   esp,eax
  4091f8:	sbb    DWORD PTR [edx],ecx
  4091fa:	jg     0x409186
  4091fc:	stc    
  4091fd:	add    eax,0xbdca9400
  409202:	inc    esp
  409203:	popa   
  409204:	daa    
  409205:	add    eax,DWORD PTR [eax]
  409207:	xchg   esp,eax
  409208:	icebp  
  409209:	mov    ebx,0x27a20053
  40920e:	add    eax,DWORD PTR [eax]
  409210:	xchg   esp,eax
  409211:	scas   al,BYTE PTR es:[edi]
  409212:	pop    ss
  409213:	out    dx,al
  409214:	out    dx,eax
  409215:	daa    
  409216:	add    eax,DWORD PTR [eax]
  409218:	xchg   esp,eax
  409219:	dec    ebp
  40921a:	add    BYTE PTR [edx],ah
  40921c:	jnp    0x40923f
  40921e:	in     al,dx
  40921f:	or     ecx,DWORD PTR [esi-0x60ca23cb]
  409225:	xor    al,0xef
  409227:	adc    eax,DWORD PTR [edi-0x69fdf5d2]
  40922d:	daa    
  40922e:	add    eax,DWORD PTR [eax]
  409230:	xchg   esp,eax
  409231:	dec    ebx
  409232:	out    dx,al
  409233:	xor    ebx,DWORD PTR [esi+0x25]
  409236:	icebp  
  409237:	sbb    dl,BYTE PTR [edx+esi*4-0x15aa30dd]
  40923e:	daa    
  40923f:	out    0x76,eax
  409241:	adc    al,0x1c
  409243:	cld    
  409244:	das    
  409245:	daa    
  409246:	add    eax,DWORD PTR [eax]
  409248:	xchg   esp,eax
  409249:	pop    ecx
  40924a:	in     al,dx
  40924b:	xor    eax,0x1efe43a9
  409250:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409251:	in     al,dx
  409252:	push   es
  409253:	or     al,0x91
  409255:	daa    
  409256:	add    eax,DWORD PTR [eax]
  409258:	xchg   esp,eax
  409259:	xor    al,0x65
  40925b:	lea    edx,[eax+edi*2]
  40925e:	push   0xffffffa0
  409260:	push   es
  409261:	ins    DWORD PTR es:[edi],dx
  409262:	add    eax,DWORD PTR [eax]
  409264:	xchg   esp,eax
  409265:	jle    0x409286
  409267:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409268:	or     esi,DWORD PTR [esi+0x473ffd3a]
  40926e:	adc    eax,0xfff300e6
  409273:	pop    edx
  409274:	pop    ecx
  409275:	aaa    
  409276:	gs push edx
  409278:	or     eax,0x8569123d
  40927d:	jmp    0xee591c97
  409282:	sbb    edx,DWORD PTR [esi+0x625f3e29]
  409288:	aas    
  409289:	sub    cl,BYTE PTR [ebx+eax*4+0x2d]
  40928d:	fild   WORD PTR [ebp-0x58]
  409290:	sub    ebx,edx
  409292:	cs jno 0x40930b
  409295:	add    DWORD PTR [esi],edi
  409297:	test   DWORD PTR [ebx],eax
  409299:	xchg   esp,eax
  40929a:	add    BYTE PTR [ebx-0x1efe8010],ah
  4092a0:	or     BYTE PTR [eax-0x71362606],ah
  4092a6:	sti    
  4092a7:	out    dx,al
  4092a8:	or     cl,BYTE PTR [edi-0x40]
  4092ab:	xchg   edx,eax
  4092ac:	add    BYTE PTR [ebx],ah
  4092ae:	xlat   BYTE PTR ds:[ebx]
  4092af:	xchg   esi,eax
  4092b0:	cli    
  4092b1:	mov    ebp,edi
  4092b3:	add    eax,eax
  4092b5:	inc    eax
  4092b6:	scas   eax,DWORD PTR es:[edi]
  4092b7:	call   0x9e512647
  4092bc:	fwait
  4092bd:	add    eax,0xd2a78d98
  4092c2:	ret    0xc4ab
  4092c5:	add    al,0x9f
  4092c7:	lods   al,BYTE PTR ds:[esi]
  4092c8:	ror    bl,0xbe
  4092cb:	lods   eax,DWORD PTR ds:[esi]
  4092cc:	leave  
  4092cd:	imul   edx,DWORD PTR [eax],0xffffffc5
  4092d0:	or     bl,BYTE PTR [eax+0x1fcf9]
  4092d6:	or     ebp,0x9
  4092d9:	call   DWORD PTR [ebp-0x6bfc1705]
  4092df:	add    BYTE PTR [esi+0x667b0f72],dl
  4092e5:	ins    BYTE PTR es:[edi],dx
  4092e6:	sbb    eax,0x1374584d
  4092eb:	test   DWORD PTR [eax],eax
  4092ed:	push   ecx
  4092ee:	adc    DWORD PTR [ecx],eax
  4092f0:	add    bl,bh
  4092f2:	and    bh,cl
  4092f4:	add    edi,esi
  4092f6:	sbb    al,0x0
  4092f8:	inc    edx
  4092f9:	enter  0xe99a,0xa
  4092fd:	and    bl,dh
  4092ff:	stc    
  409300:	add    dh,al
  409302:	xchg   edi,eax
  409303:	add    BYTE PTR [eax],al
  409305:	and    al,0x32
  409307:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409308:	ins    BYTE PTR es:[edi],dx
  409309:	or     BYTE PTR [eax],ah
  40930b:	(bad)  
  40930c:	sub    al,0x26
  40930e:	xor    bl,BYTE PTR [ecx+0x97e96c]
  409314:	add    BYTE PTR [edi],cl
  409316:	xor    eax,0x97e965d1
  40931b:	add    BYTE PTR [eax],al
  40931d:	ins    DWORD PTR es:[edi],dx
  40931e:	ins    DWORD PTR es:[edi],dx
  40931f:	dec    ecx
  409320:	mov    al,ds:0x97e9
  409325:	mov    DWORD PTR [esi],ecx
  409327:	outs   dx,DWORD PTR ds:[esi]
  409328:	sbb    BYTE PTR [ebx+0x6e],0x67
  40932c:	fwait
  40932d:	pop    ebp
  40932e:	push   ss
  40932f:	add    DWORD PTR [eax],eax
  409331:	(bad)  
  409332:	icebp  
  409333:	mov    edi,0xcfe7ae42
  409338:	push   ebp
  409339:	mov    DWORD PTR [eax],eax
  40933b:	daa    
  40933c:	mov    dh,0x5b
  40933e:	mov    ds:0xab53b84d,eax
  409343:	inc    esi
  409344:	mov    DWORD PTR [edi-0x50],ebp
  409347:	push   esp
  409348:	lds    ecx,FWORD PTR [ebx-0x5e]
  40934b:	and    eax,0x24a862fd
  409350:	mov    esi,0x8e0b900a
  409355:	jp     0x409340
  409357:	xchg   edi,eax
  409358:	add    BYTE PTR [eax],al
  40935a:	ror    DWORD PTR [edx-0x7b5e33d1],1
  409360:	aas    
  409361:	fnstcw WORD PTR [esi+0xd328a4]
  409367:	call   0x11c5945
  40936c:	shl    esp,1
  40936e:	(bad)  
  40936f:	sti    
  409370:	ret    0xc3c8
  409373:	or     edx,edx
  409375:	sub    ch,0xeb
  409378:	mov    edi,0x589a00c8
  40937d:	pushw  0xffaa
  409380:	outs   dx,DWORD PTR ds:[esi]
  409381:	jae    0x4093fd
  409383:	fnstenv [ecx+eiz*1+0x62]
  409387:	mov    ds:0x946a6a6e,al
  40938c:	data16 jns 0x4093f0
  40938f:	std    
  409390:	add    al,BYTE PTR [eax]
  409392:	add    cl,bl
  409394:	cldemote BYTE PTR [ebp*8-0x64b3f9ff]
  40939c:	push   ds
  40939d:	adc    BYTE PTR [edx],dl
  40939f:	add    BYTE PTR [edi+0x67001515],bh
  4093a5:	ret    0xdac2
  4093a8:	jae    0x40937a
  4093aa:	xlat   BYTE PTR ds:[ebx]
  4093ab:	xchg   edx,eax
  4093ac:	push   ebp
  4093ad:	(bad)  
  4093ae:	into   
  4093af:	int3   
  4093b0:	or     esp,0xc26a9ac7
  4093b6:	ret    
  4093b7:	iret   
  4093b8:	pop    esp
  4093b9:	retf   0xccc5
  4093bc:	aam    0xd0
  4093be:	(bad)  
  4093bf:	push   ecx
  4093c1:	mov    ah,0xb6
  4093c3:	mov    esp,0xfcadaadd
  4093c8:	repz mov ah,0xb7
  4093cb:	mov    esp,0xb7b0876a
  4093d0:	fistp  QWORD PTR [ebx-0x44335261]
  4093d6:	mov    ebp,0x3e349400
  4093db:	ss test eax,0x943f3d1c
  4093e1:	std    
  4093e2:	shl    DWORD PTR [eax+edi*2],cl
  4093e5:	or     cl,ch
  4093e7:	cmp    eax,0x39ddf07b
  4093ec:	jp     0x4093f4
  4093ee:	out    0x64,eax
  4093f0:	call   0xe818:0x6f2ee800
  4093f7:	and    eax,0xcfe0065
  4093fc:	mov    eax,0x6026ffcc
  409401:	sub    al,0xf4
  409403:	adc    DWORD PTR [eax],eax
  409405:	cdq    
  409406:	adc    al,0x1
  409408:	add    DWORD PTR [ebx+edx*1-0x5c6bf10f],edx
  40940f:	maskmovq mm4,mm2
  409412:	mov    BYTE PTR [eax+eax*1+0x66a2fb94],al
  409419:	push   0x807d8c37
  40941e:	push   edi
  40941f:	mov    al,ds:0xa83d406e
  409424:	jo     0x409471
  409426:	pop    ss
  409427:	add    eax,DWORD PTR [eax]
  409429:	xchg   esp,eax
  40942a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40942b:	xchg   BYTE PTR [edi-0x509974e1],al
  409431:	xchg   esp,eax
  409432:	bound  esi,QWORD PTR [ebp-0x509daca5]
  409438:	dec    ebx
  409439:	ds push ebx
  40943b:	scas   eax,DWORD PTR es:[edi]
  40943c:	jp     0x409442
  40943e:	xchg   BYTE PTR [ecx-0x6f79f39c],cl
  409444:	push   ebp
  409445:	loopne 0x4094b3
  409447:	mov    esi,0xc053cf51
  40944c:	push   ecx
  40944d:	test   BYTE PTR [edi+0x5f6bff9f],0x96
  409454:	jb     0x409432
  409456:	xchg   ebx,eax
  409457:	lahf   
  409458:	imul   ebx,DWORD PTR [eax+eax*1-0x593b6dc1],0xd0b5a556
  409463:	and    esp,DWORD PTR [ebp+0x3e8a5b5]
  409469:	add    BYTE PTR [eax+eax*1-0x441c020e],dl
  409470:	das    
  409471:	add    al,0x94
  409473:	add    BYTE PTR [esi],dl
  409475:	mov    eax,0xc013b7bd
  40947a:	(bad)  
  40947b:	lods   eax,DWORD PTR ds:[esi]
  40947c:	xor    BYTE PTR [ecx-0x46c913ac],bh
  409482:	pusha  
  409483:	add    BYTE PTR [edi-0x66e601f6],bh
  409489:	adc    bh,ah
  40948b:	pop    es
  40948c:	adc    DWORD PTR [edx],0xffffffe1
  40948f:	xor    eax,0xbf21682
  409494:	inc    edx
  409495:	sub    ecx,edi
  409497:	push   ss
  409498:	ja     0x4094b4
  40949a:	(bad)  
  40949c:	repnz fild DWORD PTR [esi+0x64cbba00]
  4094a3:	mov    ah,0xdf
  4094a5:	pop    es
  4094a6:	pop    DWORD PTR [eax]
  4094a8:	test   eax,0xc092429c
  4094ad:	add    edx,DWORD PTR [eax+eax*1-0x66c76369]
  4094b4:	shl    DWORD PTR [esi+eiz*1+0x1aa5a8de],0x9d
  4094bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4094bd:	mov    eax,ds:0xb8d786fd
  4094c2:	(bad)  
  4094c3:	sahf   
  4094c4:	(bad)  
  4094c8:	adc    esp,0x927a89be
  4094ce:	add    bh,ah
  4094d0:	xchg   ebx,eax
  4094d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4094d2:	mov    dl,0x8c
  4094d4:	fdivr  st,st(7)
  4094d6:	call   0x2c3fa0e5
  4094db:	fsubr  QWORD PTR [eax]
  4094dd:	sar    DWORD PTR [ecx-0x50],0x0
  4094e1:	add    BYTE PTR [edi-0x75],dh
  4094e4:	or     ebp,ebx
  4094e6:	fnstenv [ebp-0x563941ba]
  4094ec:	add    BYTE PTR [eax],al
  4094ee:	repnz xor al,BYTE PTR [eax+eax*1]
  4094f2:	jmp    0x3a40958e
  4094f7:	or     DWORD PTR [esi+esi*2+0x97e9],ebx
  4094fe:	call   0xc8656ae6
  409503:	loope  0x4094ea
  409505:	das    
  409506:	out    dx,eax
  409507:	or     ecx,edx
  409509:	cmp    DWORD PTR [ebp-0x32ce2519],edi
  40950f:	enter  0x15e7,0xce
  409513:	into   
  409514:	jmp    0x40953f
  409516:	mov    ah,0xcf
  409518:	out    dx,eax
  409519:	or     DWORD PTR [edx+0x527cdca],esi
  40951f:	cdq    
  409520:	loop   0x409535
  409522:	in     eax,0x93
  409524:	in     eax,dx
  409525:	sbb    ebp,edi
  409527:	mov    eax,0xade316d0
  40952c:	std    
  40952d:	adc    ch,dh
  40952f:	test   al,0xcb
  409531:	xor    edx,ebp
  409533:	add    BYTE PTR [ebx+edi*8-0x195c12f5],ah
  40953a:	xor    al,0xf5
  40953c:	xchg   edi,eax
  40953d:	inc    BYTE PTR [edi]
  40953f:	mov    BYTE PTR [eax-0x2c],dl
  409542:	arpl   cx,bp
  409544:	xchg   edi,eax
  409545:	add    BYTE PTR [eax],al
  409547:	lods   al,BYTE PTR ds:[esi]
  409548:	sbb    al,0xa0
  40954a:	arpl   WORD PTR [ebp+0x57],di
  40954d:	call   0x7e68:0x6520006d
  409554:	jge    0x409555
  409556:	(bad)  
  409557:	dec    DWORD PTR [ecx+0x69f8eadf]
  40955d:	call   0xc897835c
  409562:	jmp    0x40954b
  409564:	ins    BYTE PTR es:[edi],dx
  409565:	jmp    0xd5c0:0xe964eff1
  40956c:	pusha  
  40956d:	in     eax,dx
  40956e:	sti    
  40956f:	jmp    0xe903:0xb4e0f054
  409576:	loopne 0x409574
  409578:	in     eax,dx
  409579:	fcmovb st,st(7)
  40957b:	fsubrp st(2),st
  40957d:	clc    
  40957e:	fcmovb st,st(1)
  409580:	dec    esp
  409581:	(bad)  
  409582:	vpaddw ymm7,ymm4,ymm6
  409586:	(bad)  
  409587:	(bad)  
  409588:	clc    
  409589:	and    ebp,DWORD PTR [edx]
  40958b:	sub    ebp,ecx
  40958d:	sub    DWORD PTR es:[ecx],ebx
  409590:	xchg   ebp,eax
  409591:	add    al,0x0
  409593:	add    BYTE PTR [ebx-0x5d],bh
  409596:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409597:	stos   BYTE PTR es:[edi],al
  409598:	add    BYTE PTR [esi-0x58],cl
  40959b:	test   al,0x0
  40959d:	(bad)  
  40959e:	in     al,dx
  40959f:	jecxz  0x409598
  4095a1:	outs   dx,BYTE PTR ds:[esi]
  4095a2:	jecxz  0x409597
  4095a4:	loop   0x409527
  4095a6:	ret    
  4095a7:	loop   0x409591
  4095a9:	imul   esp,ecx,0xfffffffc
  4095ac:	loopne 0x409611
  4095ae:	loop   0x40957d
  4095b0:	ficom  DWORD PTR [edi-0x22]
  4095b3:	repnz in eax,0x63
  4095b6:	sti    
  4095b7:	in     eax,dx
  4095b8:	mov    ebx,0xf3ede284
  4095bd:	jp     0x40958f
  4095bf:	(bad)  
  4095c0:	shl    DWORD PTR [ebp-0x2931320e],1
  4095c6:	mov    esi,0xde94c5c2
  4095cb:	pop    ss
  4095cc:	(bad)  
  4095cd:	push   edi
  4095ce:	in     al,0x36
  4095d0:	rcl    BYTE PTR [esp+eiz*4-0x35d452b9],0x17
  4095d8:	cwde   
  4095d9:	sub    al,0xb9
  4095db:	pusha  
  4095dc:	add    BYTE PTR [ebp+ebp*8+0x1e52ed23],dl
  4095e3:	sbb    ebp,edi
  4095e5:	aas    
  4095e6:	dec    ebp
  4095e7:	cmp    edx,ebp
  4095e9:	xor    eax,0x2df41f2b
  4095ee:	cmp    ebx,DWORD PTR [eax]
  4095f0:	mov    DWORD PTR [edi+0x47],0x4b38fa1c
  4095f7:	adc    edi,esp
  4095f9:	out    0x67,al
  4095fb:	sbb    bh,ah
  4095fd:	add    BYTE PTR [esi],bl
  4095ff:	bound  ebp,QWORD PTR [esi]
  409601:	into   
  409602:	in     al,dx
  409603:	push   0x5ad3ce25
  409608:	add    al,0x0
  40960a:	xchg   esp,eax
  40960b:	mul    DWORD PTR [edx-0x5c168f8f]
  409611:	pusha  
  409612:	imul   edi,esi,0xffffffcf
  409615:	cmp    al,0x68
  409617:	out    dx,al
  409618:	xchg   edx,eax
  409619:	imul   ebp,DWORD PTR [ebp-0x9],0xffffff91
  40961d:	sub    BYTE PTR [ecx+0x14],ah
  409620:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409621:	jo     0x40966d
  409623:	pop    ds
  409624:	xchg   DWORD PTR [eax],esp
  409626:	xor    al,BYTE PTR [ecx-0x60]
  409629:	ins    DWORD PTR es:[edi],dx
  40962a:	ds dec ebx
  40962c:	mov    dh,0x51
  40962e:	mov    al,ds:0x8b10f31c
  409633:	push   ecx
  409634:	jmp    0xd554274e
  409639:	dec    ebp
  40963a:	dec    ebp
  40963b:	push   edi
  40963c:	mov    cl,0x77
  40963e:	inc    edx
  40963f:	data16 rol BYTE PTR [esi+ebx*4+0x0],0xf6
  409645:	mov    ecx,0xaebebfe8
  40964a:	shr    DWORD PTR [eax-0x2e491d6f],1
  409650:	leave  
  409651:	fistp  QWORD PTR [ecx-0x56288622]
  409657:	(bad)  
  409658:	mov    esp,0x7c86ea8d
  40965d:	cwde   
  40965e:	fbstp  TBYTE PTR [ebp-0x6bfffc5f]
  409664:	add    BYTE PTR [ecx-0x38c391c6],dh
  40966a:	cmp    ecx,DWORD PTR [ebp+0x29]
  40966d:	mov    edx,0xb5282167
  409672:	aas    
  409673:	pop    eax
  409674:	sub    esp,DWORD PTR [esi-0x58c4eabe]
  40967a:	inc    edx
  40967b:	push   esp
  40967c:	cmp    eax,0x37507da9
  409681:	lahf   
  409682:	fiadd  WORD PTR ds:[eax-0x3a]
  409686:	or     al,0x3
  409688:	or     DWORD PTR [esi+0x5e180814],ecx
  40968e:	dec    ebx
  40968f:	inc    ebx
  409690:	bound  edx,QWORD PTR [ecx+0x5e]
  409693:	adc    ch,BYTE PTR [eax-0x7f]
  409696:	or     bh,dh
  409698:	or     edx,DWORD PTR [edi-0x75e722f5]
  40969e:	push   edi
  40969f:	xor    DWORD PTR [edx],edx
  4096a1:	jp     0x4096bf
  4096a3:	leave  
  4096a4:	sbb    al,0x87
  4096a6:	and    ch,0x6a
  4096a9:	je     0x409713
  4096ab:	push   ds
  4096ac:	js     0x409641
  4096ae:	ins    DWORD PTR es:[edi],dx
  4096af:	lock imul esp,DWORD PTR [ebp+0x7f],0x85636b0b
  4096b7:	aad    0x7a
  4096b9:	adc    BYTE PTR [si],0x7d
  4096bd:	add    BYTE PTR [ecx+0x26],ch
  4096c0:	inc    ebx
  4096c1:	retf   0x1528
  4096c4:	or     DWORD PTR [esi+0xed80057],0xffffffe5
  4096cb:	xor    eax,0x59a956c9
  4096d0:	cmc    
  4096d1:	js     0x409679
  4096d3:	dec    edx
  4096d4:	les    ecx,FWORD PTR [ebp-0x6]
  4096d7:	push   ss
  4096d8:	ficomp WORD PTR [edx-0x53]
  4096db:	cmp    eax,0x35be62d1
  4096e0:	jns    0x409732
  4096e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4096e3:	cmp    ch,ch
  4096e5:	fs mov ah,0x3d
  4096e8:	(bad)  
  4096e9:	mov    edi,0xa3ed3656
  4096ee:	push   esi
  4096ef:	xor    eax,0xfa51b1fc
  4096f4:	cmp    esi,ebx
  4096f6:	push   ebx
  4096f7:	xor    eax,0xe94aac50
  4096fc:	sub    dh,bl
  4096fe:	pop    ds
  4096ff:	sbb    ebp,esp
  409701:	rcl    DWORD PTR [ebx+0x2f],0x48
  409705:	mov    cl,0x46
  409707:	and    ah,ah
  409709:	les    ebp,FWORD PTR [ebp+ebx*1+0x11]
  40970d:	xchg   esi,eax
  40970e:	addr16 adc eax,0x7379630
  409714:	pop    es
  409715:	mov    eax,ds:0x9e1a1b7b
  40971a:	push   0xffffffff
  40971c:	ss popf 
  40971e:	ins    BYTE PTR es:[edi],dx
  40971f:	adc    edi,edi
  409721:	xchg   ebp,eax
  409722:	jge    0x409729
  409724:	hlt    
  409725:	aam    0x70
  409727:	cld    
  409728:	sar    bh,0x20
  40972b:	test   DWORD PTR [eax],0xbe1eefc5
  409731:	out    dx,eax
  409732:	scas   al,BYTE PTR es:[edi]
  409733:	psubw  mm7,QWORD PTR [ebx-0x6ffe9f9]
  40973a:	push   eax
  40973b:	popa   
  40973c:	rcl    DWORD PTR fs:[ecx*1+0x1417a718],0x3
  409745:	jp     0x409792
  409747:	inc    eax
  409748:	adc    DWORD PTR [ebp+0x38],esi
  40974b:	sub    DWORD PTR [ebx*2+0x4f74212f],ebp
  409752:	ss and al,0x38
  409755:	push   ebx
  409756:	sbb    al,0x25
  409758:	xor    BYTE PTR [ebp+0x26],bl
  40975b:	cmp    dl,BYTE PTR [ecx]
  40975d:	dec    ebp
  40975e:	and    DWORD PTR [edi],esi
  409760:	das    
  409761:	dec    ebx
  409762:	xor    dh,BYTE PTR [ebx+eiz*1]
  409765:	push   ds
  409766:	outs   dx,DWORD PTR ds:[esi]
  409767:	bound  esp,QWORD PTR [ecx+edx*2]
  40976a:	ror    ebx,cl
  40976c:	fstp   TBYTE PTR [ebp-0x124f4984]
  409772:	mov    edi,0xc2f3c4d1
  409777:	rcl    bh,0xe6
  40977a:	xchg   BYTE PTR [ebp+ebx*8-0x27223c0f],cl
  409781:	icebp  
  409782:	rcr    ch,cl
  409784:	mov    BYTE PTR [ebx],ch
  409786:	ret    0xccd0
  409789:	aas    
  40978a:	call   0xf26a9478
  40978f:	out    dx,al
  409790:	lds    eax,FWORD PTR [eax]
  409792:	and    ebp,esi
  409794:	jecxz  0x409789
  409796:	(bad)  
  409798:	loopne 0x409791
  40979a:	pop    esi
  40979b:	clc    
  40979c:	out    0xe1,al
  40979e:	arpl   ax,dx
  4097a0:	jecxz  0x409786
  4097a2:	or     esp,edx
  4097a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4097a5:	stos   BYTE PTR es:[edi],al
  4097a6:	pop    esp
  4097a7:	loope  0x40978a
  4097a9:	out    dx,al
  4097aa:	inc    ebx
  4097ab:	call   0xffff:0xed69c5d5
  4097b2:	xchg   esp,eax
  4097b3:	sub    al,0xb6
  4097b5:	pop    edx
  4097b6:	pop    edx
  4097b7:	sbb    DWORD PTR [ebx],eax
  4097b9:	add    BYTE PTR [esi+edi*2-0x58fb5981],dl
  4097c0:	je     0x409746
  4097c2:	cld    
  4097c3:	mov    al,ds:0xdf94006c
  4097c8:	sbb    esi,ebp
  4097ca:	mov    ebp,esp
  4097cc:	adc    ebx,edi
  4097ce:	ds std 
  4097d0:	add    al,BYTE PTR [eax]
  4097d2:	xchg   esp,eax
  4097d3:	into   
  4097d4:	es ret 0xda5e
  4097d8:	inc    eax
  4097d9:	int3   
  4097da:	dec    edi
  4097db:	xchg   ecx,eax
  4097dc:	aaa    
  4097dd:	retf   
  4097de:	push   ecx
  4097df:	sbb    BYTE PTR [ebx],al
  4097e1:	add    BYTE PTR [ebx+esi*4+0x12f4b663],dl
  4097e8:	dec    eax
  4097e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4097ea:	xchg   esp,eax
  4097eb:	xchg   esi,eax
  4097ec:	pop    edi
  4097ed:	mov    dl,0xf4
  4097ef:	jns    0x409854
  4097f1:	lods   eax,DWORD PTR ds:[esi]
  4097f2:	and    eax,0xb25994
  4097f7:	clc    
  4097f8:	ja     0x409856
  4097fa:	mov    esp,0x6fa7e194
  4097ff:	jnp    0x4097b1
  409801:	xchg   ecx,eax
  409802:	jae    0x40987b
  409804:	pop    ss
  409805:	add    eax,DWORD PTR [eax]
  409807:	xchg   esp,eax
  409808:	leave  
  409809:	xchg   esi,eax
  40980a:	imul   edi,DWORD PTR [ebp+0x8],0xffffffe9
  40980e:	dec    eax
  40980f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409810:	push   cs
  409811:	mov    ebp,0xfe15970f
  409816:	adc    ebp,DWORD PTR [esi-0x8]
  409819:	frstor [ecx]
  40981b:	xchg   esp,eax
  40981c:	test   BYTE PTR [edx-0x47277189],0x55
  409823:	dec    edi
  409824:	jmp    0xb449:0xd0940003
  40982b:	stc    
  40982c:	add    BYTE PTR [ecx+0x6c],dh
  40982f:	add    BYTE PTR [eax+0x6f127b6b],al
  409835:	xor    DWORD PTR [eax+0x7],0x76
  409839:	ja     0x4098a9
  40983b:	xchg   esp,eax
  40983c:	add    BYTE PTR ds:0xebd864c7,al
  409842:	call   0xfa1f7fb1
  409847:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409848:	add    BYTE PTR [esi+0x20],al
  40984b:	jle    0x40986a
  40984d:	aas    
  40984e:	mov    BYTE PTR ds:[edx+0x2c],al
  409852:	xor    eax,0x5f4d004b
  409857:	cmp    eax,0x817450
  40985c:	sub    BYTE PTR [edx+0x58],dh
  40985f:	ins    BYTE PTR es:[edi],dx
  409860:	sbb    al,0x70
  409862:	jae    0x4098b8
  409864:	cli    
  409865:	arpl   WORD PTR gs:[ebp+0x23],si
  409869:	jno    0x4098bb
  40986b:	add    al,0x94
  40986d:	add    BYTE PTR [ebp-0x73],cl
  409870:	mov    ebp,0x70de1a85
  409875:	add    BYTE PTR [ecx+0x78],bh
  409878:	and    bh,BYTE PTR [ecx+0x5e]
  40987b:	ds inc ebp
  40987d:	xor    cl,ch
  40987f:	add    edx,DWORD PTR [eax+eax*1+0x68fa6869]
  409886:	retf   0xf407
  409889:	add    eax,0x9403e9
  40988e:	xor    eax,0x69e7e8d
  409893:	mov    dh,BYTE PTR [ebp-0x70]
  409896:	or     al,0x94
  409898:	adc    DWORD PTR [edi+0x9403fd],0x22c32690
  4098a2:	lods   al,BYTE PTR ds:[esi]
  4098a3:	sub    cl,bl
  4098a5:	(bad)  
  4098a6:	inc    DWORD PTR [ebp+ecx*2+0x6b]
  4098aa:	xchg   ebx,eax
  4098ab:	jmp    0xea409947
  4098b0:	jmp    0xdf48cf8d
  4098b5:	into   
  4098b6:	imul   esi,ebp,0xe92dc6c7
  4098bc:	xchg   edi,eax
  4098bd:	add    BYTE PTR [eax],al
  4098bf:	clc    
  4098c0:	add    BYTE PTR [ebx-0x5725fb1e],bh
  4098c6:	add    al,0x57
  4098c8:	(bad)  
  4098c9:	jns    0x4098b9
  4098cb:	sbb    eax,0xff047ae3
  4098d0:	sub    DWORD PTR [ebp-0x29d231d4],edi
  4098d6:	inc    ecx
  4098d7:	add    BYTE PTR [eax],ah
  4098d9:	mov    DWORD PTR [edx],eax
  4098db:	lock add edx,DWORD PTR [ecx-0x57be17fe]
  4098e2:	or     ebp,esi
  4098e4:	dec    DWORD PTR [edx-0x68fc03fa]
  4098ea:	add    BYTE PTR [eax],al
  4098ec:	sub    DWORD PTR [ecx-0x5f3438a6],esp
  4098f2:	sbb    ch,al
  4098f4:	rcr    DWORD PTR [ebx-0x744050e5],1
  4098fa:	sbb    ebp,esp
  4098fc:	int    0x90
  4098fe:	add    BYTE PTR [eax],al
  409900:	cs jmp eax
  409903:	aas    
  409904:	inc    esp
  409905:	add    DWORD PTR [ecx-0x5bc9b992],esp
  40990b:	daa    
  40990c:	sbb    BYTE PTR [esi],ch
  40990e:	xchg   esi,eax
  40990f:	popa   
  409910:	and    ah,bl
  409912:	lock push ss
  409914:	jmp    0xd54099b0
  409919:	retf   
  40991a:	add    edi,edi
  40991c:	jp     0x409933
  40991e:	add    al,0xc9
  409920:	add    BYTE PTR [edi*8+0x3600ffff],ah
  409927:	(bad)  
  409928:	aam    0xdf
  40992a:	(bad)  
  40992b:	fidivr DWORD PTR [edi-0x4234]
  409931:	inc    DWORD PTR [esi+eiz*4-0x58]
  409935:	scas   al,BYTE PTR es:[edi]
  409936:	sbb    DWORD PTR [eax-0x60e4751e],edi
  40993c:	lods   al,BYTE PTR ds:[esi]
  40993d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40993e:	sub    BYTE PTR [ecx+0x55e000a0],ch
  409944:	push   esp
  409945:	push   edx
  409946:	in     eax,dx
  409947:	inc    edx
  409948:	push   ds
  409949:	jbe    0x40997a
  40994b:	pop    ebp
  40994c:	push   eax
  40994d:	pop    ebx
  40994e:	sub    al,0x54
  409950:	pop    esp
  409951:	add    DWORD PTR [ecx+0x4b],esi
  409954:	inc    ecx
  409955:	inc    edx
  409956:	sub    edx,DWORD PTR [edx+0x4a]
  409959:	push   edi
  40995a:	xor    BYTE PTR [edi],bl
  40995c:	and    eax,DWORD PTR [eax]
  40995e:	fnstcw WORD PTR [edx-0x5d2b5f49]
  409964:	mov    edx,0xa1baa1a4
  409969:	repz cmp eax,0xfaffffff
  40996f:	and    BYTE PTR [eax],ah
  409971:	and    al,0x7e
  409973:	adc    DWORD PTR [ebx],eax
  409975:	add    al,0x42
  409977:	sbb    BYTE PTR [edx],dl
  409979:	or     BYTE PTR [edi],ch
  40997b:	push   ss
  40997c:	pop    ss
  40997d:	or     al,0x4b
  40997f:	push   es
  409980:	or     al,BYTE PTR [esi+eiz*2+0x5]
  409984:	push   cs
  409985:	add    ebp,DWORD PTR ds:0x80709
  40998b:	mov    edi,0xf14d484c
  409990:	pop    edx
  409991:	(bad)  
  409992:	jmp    FWORD PTR [edx-0x118b8f92]
  409998:	aas    
  409999:	push   ebx
  40999a:	push   esp
  40999b:	xchg   esp,eax
  40999c:	sar    BYTE PTR [eax-0x4528b3be],cl
  4099a2:	inc    edi
  4099a3:	inc    eax
  4099a4:	fld    TBYTE PTR [edx-0x43d975a6]
  4099aa:	inc    ecx
  4099ab:	imul   ebx,esp,0xf3655bb3
  4099b1:	cld    
  4099b2:	sbb    ah,BYTE PTR [ecx+0x7028df25]
  4099b8:	mov    al,es:0xa2312771
  4099be:	jle    0x4099fc
  4099c0:	jmp    0x40999d
  4099c2:	sub    ebx,DWORD PTR [edi]
  4099c4:	add    al,0xe7
  4099c6:	call   FWORD PTR [ebx+0x6acb3ae0]
  4099cc:	in     al,0x23
  4099ce:	ficomp WORD PTR [esi-0x10]
  4099d1:	and    ebx,ebp
  4099d3:	and    ebp,ecx
  4099d5:	imul   eax,eax,0xcd7dc255
  4099db:	pop    ecx
  4099dc:	retf   
  4099dd:	inc    ecx
  4099de:	or     BYTE PTR [edi-0x39],0x36
  4099e2:	(bad)  
  4099e3:	push   eax
  4099e4:	shl    BYTE PTR [edi],cl
  4099e6:	ret    
  4099e7:	push   edi
  4099e8:	add    eax,0x8b940002
  4099ed:	cli    
  4099ee:	arpl   WORD PTR [eax],ax
  4099f0:	mov    al,0x17
  4099f2:	add    eax,DWORD PTR [eax]
  4099f4:	xchg   esp,eax
  4099f5:	sbb    esp,ebx
  4099f7:	fistp  DWORD PTR [edi+0x51]
  4099fa:	rcl    BYTE PTR [ebp-0x2824b0cd],1
  409a00:	inc    esi
  409a01:	push   eax
  409a02:	loop   0x4099d7
  409a04:	or     al,0x8d
  409a06:	into   
  409a07:	aam    0x53
  409a09:	popa   
  409a0a:	mov    BYTE PTR [edx-0x3539a81e],cl
  409a10:	shr    DWORD PTR [ecx+ecx*8-0x53],cl
  409a14:	sub    al,0x1
  409a16:	jmp    0x1412e1e
  409a1b:	cmp    DWORD PTR [ebx-0x42cc2d2c],ebp
  409a21:	(bad)  
  409a22:	in     eax,0x2e
  409a24:	mov    ch,0xcb
  409a26:	adc    edi,DWORD PTR [edx+0x64]
  409a29:	fldenv [esi]
  409a2b:	inc    esp
  409a2c:	xchg   esp,eax
  409a2d:	add    BYTE PTR [edx+edx*8-0x58c0a910],ch
  409a34:	sti    
  409a35:	pop    ecx
  409a36:	nop
  409a37:	retf   0x1bb
  409a3a:	push   esi
  409a3b:	lea    eax,[esp+ebp*2]
  409a3e:	jle    0x4099db
  409a40:	pop    ds
  409a41:	ins    DWORD PTR es:[edi],dx
  409a42:	dec    esi
  409a43:	add    al,0x94
  409a45:	add    al,ah
  409a47:	jp     0x409a61
  409a49:	mov    al,ds:0xb372c9
  409a4e:	cmp    al,0xa6
  409a50:	and    BYTE PTR [eax+0xf],0x8b
  409a54:	add    BYTE PTR [esi+0x4f],al
  409a57:	fs scas eax,DWORD PTR es:[edi]
  409a59:	cmp    dl,BYTE PTR [edi+0x7]
  409a5c:	add    DWORD PTR [edi+0x74],ebp
  409a5f:	and    ebx,DWORD PTR [eax-0x16a8a5dc]
  409a65:	xor    dl,BYTE PTR [edi+0x41]
  409a68:	rcr    BYTE PTR [ecx],0xf
  409a6b:	or     eax,0x1c3b10ec
  409a70:	xchg   ch,dh
  409a72:	inc    ebx
  409a73:	inc    esi
  409a74:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409a75:	imul   ebp,DWORD PTR [ebp-0x80],0xd73f1e90
  409a7c:	cli    
  409a7d:	dec    esi
  409a7e:	push   esp
  409a7f:	jmp    0x1412e87
  409a84:	sub    bh,BYTE PTR [eax-0x24]
  409a87:	cld    
  409a88:	and    al,0x74
  409a8a:	(bad)  
  409a8d:	xchg   esp,eax
  409a8e:	add    BYTE PTR [eax],al
  409a90:	dec    ebx
  409a91:	adc    al,0xa0
  409a93:	and    ecx,ebp
  409a95:	xchg   edi,eax
  409a96:	add    BYTE PTR [eax],al
  409a98:	sar    DWORD PTR [eax+0x1bb9ffc2],cl
  409a9e:	xor    ebx,edx
  409aa0:	mov    ah,0xcd
  409aa2:	jge    0x409a6f
  409aa4:	mov    dl,0x13
  409aa6:	inc    ebp
  409aa7:	fdiv   DWORD PTR [eax-0x3d]
  409aaa:	add    bh,bh
  409aac:	out    0x6d,al
  409aae:	jecxz  0x409ab3
  409ab0:	sbb    al,0xaa
  409ab2:	call   DWORD PTR [ebp-0x17]
  409ab5:	xchg   edi,eax
  409ab6:	add    BYTE PTR [eax],al
  409ab8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409ab9:	add    cl,cl
  409abb:	push   ebx
  409abc:	mov    eax,ds:0x97e9
  409ac1:	or     ebx,0x749660
  409ac7:	es mov esi,0x9791
  409acd:	add    al,bl
  409acf:	cmp    al,0x4d
  409ad1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409ad2:	mov    ch,0x0
  409ad4:	add    dl,cl
  409ad6:	cld    
  409ad7:	gs adc al,0xff
  409ada:	into   
  409adb:	add    BYTE PTR [eax],al
  409add:	lahf   
  409ade:	cli    
  409adf:	pusha  
  409ae0:	shr    DWORD PTR gs:[ebx-0x5883cbc1],0x0
  409ae8:	add    bl,ch
  409aea:	scas   eax,DWORD PTR es:[edi]
  409aeb:	sub    BYTE PTR [ecx+ecx*8],ah
  409aee:	sbb    DWORD PTR [edi],0x67
  409af1:	je     0x409ab6
  409af3:	pop    ss
  409af4:	imul   esi,DWORD PTR [eax-0x39],0x13
  409af8:	outs   dx,DWORD PTR ds:[esi]
  409af9:	dec    esp
  409afa:	les    ecx,FWORD PTR [edi]
  409afc:	add    bh,ch
  409afe:	mov    WORD PTR [ecx],ds
  409b00:	add    BYTE PTR [ebp+0xf],ch
  409b03:	xchg   esi,eax
  409b04:	sahf   
  409b05:	imul   ebx,DWORD PTR [eax-0x3a000000],0xd0726672
  409b0f:	inc    eax
  409b10:	add    BYTE PTR [eax],al
  409b12:	pop    ebp
  409b13:	js     0x409b94
  409b15:	ds ret 0x7367
  409b19:	jp     0x409af3
  409b1b:	add    eax,DWORD PTR [eax]
  409b1d:	add    BYTE PTR [eax],al
  409b1f:	mov    eax,ds:0x9b79696f
  409b24:	jle    0x409b39
  409b26:	or     bh,ch
  409b28:	jbe    0x409b59
  409b2a:	jo     0x409ba8
  409b2c:	inc    ebp
  409b2d:	push   edx
  409b2e:	dec    eax
  409b2f:	mov    eax,0xbd6f1821
  409b34:	add    eax,DWORD PTR [eax]
  409b36:	add    BYTE PTR [ebx+edx*4],ah
  409b39:	rcr    edx,0x46
  409b3c:	(bad)  
  409b3d:	fmul   DWORD PTR [ebx-0x35637cd8]
  409b43:	(bad)  
  409b44:	into   
  409b45:	(bad)  
  409b46:	push   DWORD PTR [eax-0x43eadce0]
  409b4c:	add    eax,DWORD PTR [eax]
  409b4e:	add    BYTE PTR [ebx+0x75021f28],bl
  409b54:	add    eax,DWORD PTR [eax]
  409b56:	add    BYTE PTR [edi-0x80],cl
  409b59:	jnp    0x409bd4
  409b5b:	xor    BYTE PTR [esi],dh
  409b5d:	and    esp,DWORD PTR [edx]
  409b5f:	inc    ebp
  409b60:	das    
  409b61:	arpl   WORD PTR gs:[eax],bx
  409b64:	pop    ebx
  409b65:	popa   
  409b66:	addr16 add al,0x2d
  409b69:	and    DWORD PTR [edi],ebp
  409b6b:	inc    edx
  409b6c:	xor    edi,DWORD PTR [ecx+0x7f]
  409b6f:	int3   
  409b70:	and    eax,0x3a5a2729
  409b75:	jne    0x409bdd
  409b77:	daa    
  409b78:	add    dl,BYTE PTR ds:0x4346867b
  409b7e:	pop    ecx
  409b7f:	jp     0x409bf2
  409b81:	dec    edi
  409b82:	inc    esi
  409b83:	add    BYTE PTR [eax+eiz*1+0x76940e4b],dl
  409b8a:	xchg   esi,eax
  409b8b:	test   al,0xfb
  409b8d:	popa   
  409b8e:	add    eax,DWORD PTR [eax]
  409b90:	xchg   esp,eax
  409b91:	jp     0x409b44
  409b93:	lods   al,BYTE PTR ds:[esi]
  409b94:	cmp    al,0x85
  409b96:	out    0xf1,al
  409b98:	pop    es
  409b99:	mov    DWORD PTR [edi-0x4bb3ce4f],esi
  409b9f:	mov    edx,0xa9b46034
  409ba4:	xor    edx,DWORD PTR [ecx+eax*8-0x1e]
  409ba8:	cli    
  409ba9:	jl     0x409b2f
  409bab:	mov    bl,0x20
  409bad:	push   esi
  409bae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409baf:	stos   BYTE PTR es:[edi],al
  409bb0:	add    al,0x5b
  409bb2:	call   0xe792:0x925f1897
  409bb9:	pop    edi
  409bba:	xchg   ebx,eax
  409bbb:	xchg   esi,eax
  409bbc:	fild   DWORD PTR [esi+0x7a05909a]
  409bc2:	(bad)  
  409bc3:	ret    0x6918
  409bc6:	test   BYTE PTR [ebx-0x7b53a3e7],cl
  409bcc:	mov    ecx,0x94000333
  409bd1:	scas   al,BYTE PTR es:[edi]
  409bd2:	test   DWORD PTR [eax-0x6c],0x944248b0
  409bd9:	stos   DWORD PTR es:[edi],eax
  409bda:	dec    eax
  409bdb:	inc    edx
  409bdc:	xchg   esp,eax
  409bdd:	mov    ds:0x9b944248,eax
  409be2:	dec    eax
  409be3:	inc    edx
  409be4:	xchg   esp,eax
  409be5:	nop
  409be6:	dec    eax
  409be7:	inc    edx
  409be8:	add    BYTE PTR [ebp+edi*8-0x1a6bbf09],dl
  409bef:	test   DWORD PTR [eax-0x6c],0x9440f7d2
  409bf6:	mov    DWORD PTR [edx],eax
  409bf8:	arpl   WORD PTR [edi+eiz*8+0x940002],dx
  409bff:	sub    BYTE PTR [edx-0x29],al
  409c02:	inc    esp
  409c03:	and    al,0x46
  409c05:	ror    DWORD PTR [eax+0x20],cl
  409c08:	dec    edx
  409c09:	iret   
  409c0a:	dec    esp
  409c0b:	sbb    al,0x4e
  409c0d:	retf   
  409c0e:	push   eax
  409c0f:	sbb    BYTE PTR [edx+0x67],dl
  409c12:	push   esp
  409c13:	adc    al,0x56
  409c15:	arpl   WORD PTR [eax+0x10],bx
  409c18:	pop    edx
  409c19:	jne    0x409c7d
  409c1b:	dec    edx
  409c1c:	push   0x6c0e6671
  409c21:	jge    0x409c8d
  409c23:	adc    dh,BYTE PTR [eax+0x79]
  409c26:	outs   dx,BYTE PTR ds:[esi]
  409c27:	push   es
  409c28:	je     0x409c8f
  409c2a:	jb     0x409c46
  409c2c:	js     0x409c8f
  409c2e:	jbe    0x409c2e
  409c30:	jnp    0x409c7f
  409c32:	jp     0x409bed
  409c34:	xor    al,0x86
  409c36:	xor    DWORD PTR [ebp-0x4eca75c8],edi
  409c3c:	cmp    al,0x6f
  409c3e:	sub    eax,0x9403e9
  409c43:	jmp    0xd541304b
  409c48:	daa    
  409c49:	js     0x409c6f
  409c4b:	int3   
  409c4c:	jno    0x409c4e
  409c4e:	daa    
  409c4f:	je     0x409c0d
  409c51:	jne    0x409c5e
  409c53:	jns    0x409c15
  409c55:	jns    0x409c66
  409c57:	and    eax,0x24b8280d
  409c5c:	add    eax,0xa93dba28
  409c61:	inc    esp
  409c62:	(bad)  
  409c63:	inc    ecx
  409c64:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409c65:	dec    eax
  409c66:	rol    BYTE PTR [ebp-0x5f],cl
  409c69:	dec    esp
  409c6a:	into   
  409c6b:	dec    ecx
  409c6c:	popf   
  409c6d:	push   eax
  409c6e:	retf   0x994d
  409c71:	push   esp
  409c72:	out    0x51,al
  409c74:	xchg   ebp,eax
  409c75:	pop    eax
  409c76:	loop   0x409ccd
  409c78:	add    ch,cl
  409c7a:	jnp    0x409ca0
  409c7c:	and    al,0xc5
  409c7e:	jae    0x409cd8
  409c80:	pop    ecx
  409c81:	inc    ebx
  409c82:	iret   
  409c83:	pop    esp
  409c84:	pop    ebp
  409c85:	aas    
  409c86:	retf   
  409c87:	pusha  
  409c88:	popa   
  409c89:	dec    ebx
  409c8a:	mov    bh,0x64
  409c8c:	gs inc edi
  409c8e:	mov    bl,0x68
  409c90:	imul   edx,DWORD PTR [ebx+0x7f],0x7b4f6d6c
  409c97:	jo     0x409d0a
  409c99:	jmp    0x5409d35
  409c9e:	pop    ebx
  409c9f:	push   eax
  409ca0:	push   edx
  409ca1:	ss push eax
  409ca3:	push   edi
  409ca4:	pop    edi
  409ca5:	cmp    bl,BYTE PTR [ebp+0x52]
  409ca8:	push   esi
  409ca9:	sub    al,0x46
  409cab:	pop    ebp
  409cac:	dec    eax
  409cad:	push   ds
  409cae:	inc    edi
  409caf:	push   esp
  409cb0:	pop    edi
  409cb1:	int    0x0
  409cb3:	xchg   edi,eax
  409cb4:	add    BYTE PTR [eax],al
  409cb6:	adc    BYTE PTR [edx],bh
  409cb8:	push   0x65
  409cba:	or     bh,BYTE PTR [eax+eax*1]
  409cbd:	add    BYTE PTR [edx-0x2dffbd90],al
  409cc3:	jne    0x409d07
  409cc5:	add    BYTE PTR [ebp+0x52004275],al
  409ccb:	jne    0x409d0f
  409ccd:	add    BYTE PTR [ebx+0x14004276],bl
  409cd3:	cwde   
  409cd4:	jb     0x409cd6
  409cd6:	jmp    0x65409d72
  409cdb:	and    DWORD PTR [eax+eax*1],edi
  409cde:	pop    ebx
  409cdf:	(bad)  
  409ce0:	add    BYTE PTR ds:[edi+eiz*4+0x3e],dl
  409ce5:	add    BYTE PTR [ebp-0x46],al
  409ce8:	add    BYTE PTR ds:[eax],cl
  409ceb:	mov    dl,0x3e
  409ced:	add    BYTE PTR [edx+0x3ea7],cl
  409cf3:	shr    DWORD PTR [edi],0x42
  409cf6:	add    BYTE PTR [edx],cl
  409cf8:	push   esp
  409cf9:	add    BYTE PTR [eax],al
  409cfb:	or     bl,BYTE PTR [ebx+eax*2+0x0]
  409cff:	jmp    0x6104:0xde00004c
  409d06:	add    bh,bl
  409d08:	add    al,0x69
  409d0a:	add    bl,bl
  409d0c:	add    al,0x65
  409d0e:	add    cl,al
  409d10:	add    al,0x2e
  409d12:	add    BYTE PTR [ecx+0x4],ah
  409d15:	ins    BYTE PTR es:[edi],dx
  409d16:	add    BYTE PTR [eax],al
  409d18:	pop    ecx
  409d19:	add    al,0x0
  409d1b:	add    BYTE PTR [ebx-0x40bcb6bf],dh
  409d21:	arpl   WORD PTR [ecx+0x74],sp
  409d24:	mov    al,ds:0xb3000004
  409d29:	inc    ecx
  409d2a:	dec    ecx
  409d2b:	inc    ecx
  409d2c:	xchg   ecx,eax
  409d2d:	push   0x62d96946
  409d32:	add    BYTE PTR [eax],al
  409d34:	add    DWORD PTR [ecx+0x49],0x46
  409d38:	cdq    
  409d39:	jae    0x409dae
  409d3b:	push   0x69625f6e
  409d40:	mov    ebx,0x3007462
  409d45:	inc    ecx
  409d46:	dec    ecx
  409d47:	inc    esp
  409d48:	shl    BYTE PTR [eax+0x74],1
  409d4b:	jb     0x409d27
  409d4d:	jbe    0x409d4f
  409d4f:	add    BYTE PTR ds:0xed003eee,ah
  409d55:	inc    eax
  409d56:	inc    edx
  409d57:	add    dh,al
  409d59:	cli    
  409d5a:	ds add cl,bh
  409d5d:	call   0x40:0xfd2b003e
  409d64:	cmp    edi,ebp
  409d66:	inc    eax
  409d67:	add    BYTE PTR [eax*2-0x6a6bffbe],dh
  409d6e:	inc    esp
  409d6f:	inc    edx
  409d70:	xchg   esp,eax
  409d71:	lea    eax,[edx+eax*2-0x6c]
  409d75:	test   DWORD PTR [edx+eax*2-0x6c],eax
  409d79:	add    BYTE PTR [edx+eax*2+0x0],0x94
  409d7e:	jne    0x409dc5
  409d80:	inc    edx
  409d81:	xchg   esp,eax
  409d82:	jo     0x409dc9
  409d84:	inc    edx
  409d85:	xchg   esp,eax
  409d86:	inc    esp
  409d87:	inc    esi
  409d88:	inc    edx
  409d89:	xchg   esp,eax
  409d8a:	inc    edi
  409d8b:	popa   
  409d8c:	fs mov edx,0xaf6a6c4a
  409d92:	cmp    eax,0x38846e6f
  409d97:	jb     0x409e0c
  409d99:	xor    BYTE PTR [ebx],0x75
  409d9c:	js     0x409e1c
  409d9e:	dec    eax
  409d9f:	imul   ebp,DWORD PTR [bp+di+0x34],0x8194007b
  409da7:	lock aas 
  409da9:	xchg   esp,eax
  409daa:	xor    eax,0x9e944253
  409daf:	cld    
  409db0:	aas    
  409db1:	xchg   esp,eax
  409db2:	sbb    al,0x4
  409db4:	pop    ecx
  409db5:	xchg   esp,eax
  409db6:	jmp    0xcbd49dbd
  409dbb:	add    dh,BYTE PTR [esp+edx*4-0xf]
  409dbf:	add    dh,BYTE PTR [esp+edx*4-0x17]
  409dc3:	add    al,BYTE PTR [eax]
  409dc5:	xchg   esp,eax
  409dc6:	adc    ah,BYTE PTR [ebp+0x42]
  409dc9:	xchg   esp,eax
  409dca:	mov    dl,0x2
  409dcc:	push   ecx
  409dcd:	xchg   esp,eax
  409dce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409dcf:	add    al,BYTE PTR [eax]
  409dd1:	xchg   esp,eax
  409dd2:	xchg   esp,eax
  409dd3:	arpl   WORD PTR [edx-0x6c],ax
  409dd6:	std    
  409dd7:	add    ebx,DWORD PTR [esp+edx*4-0x19]
  409ddb:	add    al,BYTE PTR [eax]
  409ddd:	xchg   esp,eax
  409dde:	test   DWORD PTR [edx],eax
  409de0:	mov    ds:0x2839400,eax
  409de5:	add    BYTE PTR [eax+eax*1+0xfd038d],dl
  409dec:	call   0xf503:0x8500e403
  409df3:	add    BYTE PTR [eax-0x77ff1dfd],dl
  409df9:	add    edi,DWORD PTR [ecx-0x6bfc7c00]
  409dff:	add    BYTE PTR [esi+0x7b50c066],ch
  409e05:	ins    BYTE PTR es:[edi],dx
  409e06:	mov    eax,0xdd704a73
  409e0b:	push   0x47
  409e0d:	imul   edx,DWORD PTR [eax+eax*1+0xd67db9],0x39
  409e15:	add    al,0x86
  409e17:	add    BYTE PTR [esi+0x4],dl
  409e1a:	jl     0x409e1c
  409e1c:	push   eax
  409e1d:	add    al,0x76
  409e1f:	add    BYTE PTR [eax+0x4],al
  409e22:	add    BYTE PTR [eax],0x25
  409e25:	add    al,0x48
  409e27:	add    BYTE PTR ds:0x6009404,ch
  409e2d:	pusha  
  409e2e:	ins    DWORD PTR es:[edi],dx
  409e2f:	jo     0x409e36
  409e31:	jno    0x409e9a
  409e33:	sub    al,BYTE PTR ds:0x2e004068
  409e39:	pusha  
  409e3a:	cmp    eax,0x47710d70
  409e3f:	dec    ebp
  409e40:	std    
  409e41:	fs inc esi
  409e43:	je     0x409e39
  409e45:	jae    0x409e47
  409e47:	xchg   esp,eax
  409e48:	add    BYTE PTR [esi-0x328fc2a1],ch
  409e4e:	jo     0x409e77
  409e50:	dec    ebp
  409e51:	shl    DWORD PTR [eax+0x20],0x64
  409e55:	mov    esi,0xae010272
  409e5a:	pop    edi
  409e5b:	std    
  409e5c:	jo     0x409e08
  409e5e:	jne    0x409e59
  409e60:	pop    edi
  409e61:	add    BYTE PTR [ebp-0x4a96c10c],bh
  409e67:	cld    
  409e68:	pop    edi
  409e69:	jo     0x409e1a
  409e6b:	loope  0x409ed6
  409e6d:	ins    DWORD PTR es:[edi],dx
  409e6e:	mov    cl,0xd9
  409e70:	inc    edi
  409e71:	push   esp
  409e72:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409e73:	rcl    BYTE PTR [eax+0x0],1
  409e76:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409e77:	repz addr16 jo 0x409e28
  409e7b:	mov    eax,0xca8e706d
  409e80:	arpl   WORD PTR [ecx-0x7c],cx
  409e83:	mov    al,0x61
  409e85:	gs jmp 0x2e409f22
  409e8b:	mov    ah,0x67
  409e8d:	jo     0x409eb5
  409e8f:	mov    ch,0x74
  409e91:	dec    ecx
  409e92:	inc    esp
  409e93:	mov    cl,0x61
  409e95:	gs and al,0x7e
  409e98:	pop    ebp
  409e99:	outs   dx,DWORD PTR ds:[esi]
  409e9a:	dec    ebp
  409e9b:	jne    0x409f0b
  409e9d:	jae    0x409eb9
  409e9f:	jno    0x409f17
  409ea1:	gs jmp 0x26409f3e
  409ea7:	je     0x409f10
  409ea9:	jo     0x409ed9
  409eab:	add    BYTE PTR [ebp+0x74],dh
  409eae:	dec    ecx
  409eaf:	or     al,0x79
  409eb1:	popa   
  409eb2:	gs sub al,0x6e
  409eb5:	pop    ebp
  409eb6:	outs   dx,DWORD PTR ds:[esi]
  409eb7:	add    eax,0xe9736e35
  409ebc:	xchg   edi,eax
  409ebd:	add    BYTE PTR [eax],al
  409ebf:	es xor al,0x67
  409ec2:	jo     0x409ede
  409ec4:	xor    DWORD PTR [edx+0x65],esi
  409ec7:	and    BYTE PTR ds:0x5bcc675f,bh
  409ecd:	imul   edx,DWORD PTR [ebx-0x2b],0xc4616329
  409ed4:	xchg   edi,eax
  409ed5:	add    BYTE PTR [eax],al
  409ed7:	xchg   esp,eax
  409ed8:	jae    0x409f35
  409eda:	sbb    eax,0x2bf64700
  409edf:	inc    ebp
  409ee0:	loope  0x409eba
  409ee2:	pop    ebx
  409ee3:	mov    bl,0x1c
  409ee5:	add    edi,esp
  409ee7:	jmp    0x409e8c
  409ee9:	jle    0x409f2b
  409eeb:	add    BYTE PTR [eax],al
  409eed:	js     0x409f30
  409eef:	add    dh,bh
  409ef1:	ja     0x409f34
  409ef3:	add    BYTE PTR [ecx+eax*4],bh
  409ef6:	inc    eax
  409ef7:	add    BYTE PTR [ebx+0x1b0040bc],bh
  409efd:	add    DWORD PTR [eax+0x0],0x40809f
  409f04:	mov    esp,0xbb0040bc
  409f09:	mov    esp,0x77ae0040
  409f0e:	inc    ecx
  409f0f:	add    BYTE PTR [eax],al
  409f11:	jle    0x409f90
  409f13:	inc    eax
  409f14:	add    BYTE PTR [ebx],al
  409f16:	jle    0x409f58
  409f18:	add    BYTE PTR [esi],dh
  409f1a:	sti    
  409f1b:	add    BYTE PTR ds:[ecx-0x61ffb704],bh
  409f22:	cld    
  409f23:	dec    edi
  409f24:	add    BYTE PTR [ecx-0x7bffbf04],dh
  409f2a:	cld    
  409f2b:	(bad)  
  409f2c:	jmp    FWORD PTR [ebp+0x23]
  409f2f:	add    BYTE PTR [eax],al
  409f31:	int    0x3
  409f33:	add    BYTE PTR [eax],al
  409f35:	rol    BYTE PTR [ebx],1
  409f37:	ins    DWORD PTR es:[edi],dx
  409f38:	add    BYTE PTR [ebp-0x22fffffd],bh
  409f3e:	add    ebp,DWORD PTR ds:0xfffc9b00
  409f44:	call   eax
  409f46:	add    ebp,DWORD PTR [ebp+0x0]
  409f49:	fadd   DWORD PTR [ebx]
  409f4b:	jo     0x409f4d
  409f4d:	cwde   
  409f4e:	cld    
  409f4f:	jb     0x409f51
  409f51:	lods   eax,DWORD PTR ds:[esi]
  409f52:	add    eax,DWORD PTR [eax]
  409f54:	add    BYTE PTR [ebp+edx*8-0x266b92fe],dl
  409f5b:	add    al,BYTE PTR [eax]
  409f5d:	xchg   esp,eax
  409f5e:	call   0x6e4b:0xadf9474a
  409f65:	jmp    0x409f1d
  409f67:	push   0x5eb60346
  409f6c:	gs out 0xb9,al
  409f6f:	popa   
  409f70:	je     0x409f5e
  409f72:	jmp    0x94409f79
  409f77:	ret    
  409f78:	add    al,BYTE PTR [eax]
  409f7a:	xchg   esp,eax
  409f7b:	mov    esp,0xc4947302
  409f80:	add    dh,BYTE PTR [eax]
  409f82:	xchg   esp,eax
  409f83:	rol    DWORD PTR [edx],0x78
  409f86:	xchg   esp,eax
  409f87:	mov    edi,0x7a942502
  409f8c:	add    eax,DWORD PTR [eax]
  409f8e:	xchg   esp,eax
  409f8f:	add    al,0x4
  409f91:	jae    0x409f27
  409f93:	cld    
  409f94:	add    esi,DWORD PTR [eax]
  409f96:	xchg   esp,eax
  409f97:	adc    DWORD PTR [eax+edi*2],eax
  409f9a:	xchg   esp,eax
  409f9b:	jmp    0xf8d49fa2
  409fa0:	sub    BYTE PTR [edx],dh
  409fa2:	mov    dl,0xec
  409fa4:	add    al,BYTE PTR [eax]
  409fa6:	xchg   esp,eax
  409fa7:	dec    eax
  409fa8:	push   0x20
  409faa:	imul   esi,DWORD PTR [edi],0x167b6e6d
  409fb0:	push   0x20
  409fb2:	jns    0x409fcf
  409fb4:	jbe    0x40a025
  409fb6:	leavew 
  409fb8:	arpl   WORD PTR [bx],si
  409fbb:	or     al,0x76
  409fbd:	jb     0x409ff0
  409fbf:	add    eax,0x31940004
  409fc4:	push   esp
  409fc5:	inc    ebp
  409fc6:	pop    ebx
  409fc7:	adc    al,0x4a
  409fc9:	dec    ebx
  409fca:	bound  edx,QWORD PTR [esi]
  409fcc:	push   ecx
  409fcd:	dec    esi
  409fce:	xchg   esp,eax
  409fcf:	add    cl,bl
  409fd1:	bound  esp,QWORD PTR [esi]
  409fd3:	jae    0x409f99
  409fd5:	jne    0x40a04b
  409fd7:	imul   ebx,edx,0x60040023
  409fdd:	aam    0x74
  409fdf:	icebp  
  409fe0:	pop    esp
  409fe1:	jmp    0xb14133e9
  409fe6:	push   ebx
  409fe7:	rcl    DWORD PTR [ebp-0x67],1
  409fea:	inc    edx
  409feb:	leave  
  409fec:	push   ecx
  409fed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409fee:	aas    
  409fef:	xchg   esp,eax
  409ff0:	add    BYTE PTR [edx-0x75981991],bl
  409ff6:	outs   dx,DWORD PTR ds:[esi]
  409ff7:	mov    ah,0x63
  409ff9:	xchg   BYTE PTR [edi-0x47],bl
  409ffc:	and    BYTE PTR [eax+0x7b5bc774],cl
  40a002:	outs   dx,DWORD PTR ds:[esi]
  40a003:	lods   eax,DWORD PTR ds:[esi]
  40a004:	gs (bad) 
  40a006:	and    esi,DWORD PTR [edx-0x46987fa1]
  40a00c:	pop    esp
  40a00d:	jmp    0x31413415
  40a012:	push   esp
  40a013:	fst    DWORD PTR [ebp+0x3a]
  40a016:	push   eax
  40a017:	mov    BYTE PTR [edi+0x2a],0x50
  40a01b:	xchg   esp,eax
  40a01c:	add    BYTE PTR [esi+eiz*2+0x77],al
  40a020:	gs cmp al,0x66
  40a023:	mov    BYTE PTR [ebx+0x3b],bl
  40a026:	popa   
  40a027:	jo     0x40a049
  40a029:	cmp    al,0x66
  40a02b:	jns    0x40a0a5
  40a02d:	cmp    DWORD PTR [ecx+0x77],esp
  40a030:	ins    BYTE PTR es:[edi],dx
  40a031:	or     al,0x60
  40a033:	mov    ah,0x67
  40a035:	pshufw mm6,QWORD PTR [ecx+0x72],0x7
  40a03a:	gs inc eax
  40a03c:	and    BYTE PTR [edx],bl
  40a03e:	jo     0x40a040
  40a040:	xor    eax,0x94040c6c
  40a045:	add    BYTE PTR [ecx],dh
  40a047:	push   esp
  40a048:	push   ecx
  40a049:	push   ebp
  40a04a:	add    BYTE PTR [eax],ah
  40a04c:	pop    edx
  40a04d:	dec    esi
  40a04e:	inc    ecx
  40a04f:	sbb    eax,0xb05f3c59
  40a054:	pop    ecx
  40a055:	dec    esp
  40a056:	inc    ebp
  40a057:	mov    ebx,0xb64c3f51
  40a05c:	out    0x4c,al
  40a05e:	inc    ecx
  40a05f:	mov    ch,0xd4
  40a061:	add    BYTE PTR [eax],al
  40a063:	sar    cl,1
  40a065:	outs   dx,BYTE PTR ds:[esi]
  40a066:	popa   
  40a067:	int    0xe8
  40a069:	pop    esp
  40a06a:	and    dl,cl
  40a06c:	cli    
  40a06d:	data16 jae 0x40a025
  40a070:	lock data16 je 0x40a03d
  40a074:	out    0x6c,al
  40a076:	jb     0x40a008
  40a078:	icebp  
  40a079:	pop    ebp
  40a07a:	add    BYTE PTR [ecx-0x5fa0c419],ah
  40a080:	ror    DWORD PTR [esi+0x41],1
  40a083:	mov    ch,0xd0
  40a085:	cmp    al,0x5f
  40a087:	stos   BYTE PTR es:[edi],al
  40a088:	rol    BYTE PTR [esi+0x53],cl
  40a08b:	popf   
  40a08c:	fadd   DWORD PTR [esi+0x54]
  40a08f:	jmp    0x5040a12b
  40a094:	mov    edx,0xa94d616e
  40a099:	pop    esp
  40a09a:	and    BYTE PTR [edx-0x80],cl
  40a09d:	pop    edi
  40a09e:	jb     0x40a0e8
  40a0a0:	ja     0x40a10e
  40a0a2:	cmp    eax,DWORD PTR gs:[eax]
  40a0a5:	mov    eax,0x77096e67
  40a0aa:	push   0x207f4775
  40a0af:	jae    0x40a0f1
  40a0b1:	outs   dx,BYTE PTR ds:[esi]
  40a0b2:	pop    ebx
  40a0b3:	and    BYTE PTR [ecx],dl
  40a0b5:	jne    0x40a116
  40a0b7:	fs add al,0x66
  40a0ba:	add    BYTE PTR [eax],al
  40a0bc:	and    DWORD PTR [eax+0x3b],ebp
  40a0bf:	pop    edi
  40a0c0:	and    BYTE PTR [edx+0x4e],dl
  40a0c3:	inc    ecx
  40a0c4:	add    BYTE PTR [ecx+0x6e5f4443],cl
  40a0ca:	inc    esp
  40a0cb:	push   ebp
  40a0cc:	dec    esi
  40a0cd:	jbe    0x40a11c
  40a0cf:	push   ebx
  40a0d0:	dec    ecx
  40a0d1:	xchg   DWORD PTR [edi],edi
  40a0d3:	add    BYTE PTR [eax],al
  40a0d5:	les    ebx,FWORD PTR [edx+0x76]
  40a0d8:	popa   
  40a0d9:	leave  
  40a0da:	arpl   WORD PTR [eax+eiz*1+0x5e],sp
  40a0de:	push   0x5f5c7261
  40a0e3:	je     0x40a14a
  40a0e5:	aas    
  40a0e6:	and    BYTE PTR [ecx+0x6e],ch
  40a0e9:	lea    ebx,[edi+0x6f]
  40a0ec:	outs   dx,BYTE PTR ds:[esi]
  40a0ed:	xor    DWORD PTR [ecx+0x6e],esp
  40a0f0:	je     0x40a15a
  40a0f2:	pop    esp
  40a0f3:	outs   dx,BYTE PTR gs:[esi]
  40a0f5:	adc    ah,BYTE PTR [eax+ebp*2+0x20]
  40a0f9:	add    eax,0x20646161
  40a0fe:	jb     0x40a100
  40a100:	add    ch,dh
  40a102:	dec    edi
  40a103:	inc    ebp
  40a104:	pop    edi
  40a105:	add    al,0x3e
  40a107:	push   esi
  40a108:	inc    ecx
  40a109:	add    cl,ch
  40a10b:	inc    esp
  40a10c:	inc    esp
  40a10d:	pop    edi
  40a10e:	(bad)  
  40a10f:	cmp    cl,BYTE PTR [esi+0x54]
  40a112:	lock cmp eax,0x33695f54
  40a118:	dec    esi
  40a119:	inc    edi
  40a11a:	popa   
  40a11b:	inc    esp
  40a11c:	add    BYTE PTR [eax],al
  40a11e:	push   esp
  40a11f:	pop    edx
  40a120:	jbe    0x40a183
  40a122:	leave  
  40a123:	and    BYTE PTR fs:[bp+0x64],cl
  40a128:	popa   
  40a129:	jb     0x40a177
  40a12b:	popa   
  40a12c:	je     0x40a193
  40a12e:	scas   eax,DWORD PTR es:[edi]
  40a12f:	sbb    al,0x69
  40a131:	outs   dx,BYTE PTR ds:[esi]
  40a132:	popf   
  40a133:	fs gs popa 
  40a136:	xchg   ecx,eax
  40a137:	push   ebx
  40a138:	jb     0x40a13a
  40a13a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a13b:	dec    esp
  40a13c:	inc    ebp
  40a13d:	pop    edi
  40a13e:	xchg   esp,eax
  40a13f:	and    BYTE PTR [esi+0x56],al
  40a142:	push   ebp
  40a143:	adc    eax,0x3163444b
  40a148:	aas    
  40a149:	inc    ecx
  40a14a:	push   eax
  40a14b:	sbb    al,0x52
  40a14d:	pop    edi
  40a14e:	dec    eax
  40a14f:	sbb    cl,BYTE PTR [ecx+0x45]
  40a152:	pop    edx
  40a153:	jmp    0xadd4a15a
  40a158:	cmp    al,0x20
  40a15a:	aaa    
  40a15b:	shl    DWORD PTR [ecx+0x72],1
  40a15e:	cmc    
  40a15f:	(bad)  
  40a160:	outs   dx,BYTE PTR ds:[esi]
  40a161:	gs push es
  40a163:	or     bl,BYTE PTR [edi+0x78]
  40a166:	add    al,0xc5
  40a168:	pop    edi
  40a169:	je     0x40a15c
  40a16b:	mov    ebp,0x94000002
  40a170:	mov    eax,ds:0x95cb4552
  40a175:	cmp    al,0x5f
  40a177:	fld    st(1)
  40a179:	push   edx
  40a17a:	inc    ebp
  40a17b:	xlat   BYTE PTR ds:[ebx]
  40a17c:	lods   eax,DWORD PTR ds:[esi]
  40a17d:	cmp    eax,0x64809444
  40a182:	jbe    0x40a139
  40a184:	jne    0x40a1f0
  40a186:	fs je  0x40a10c
  40a189:	jo     0x40a1ec
  40a18b:	mov    bl,0x84
  40a18d:	pop    ebp
  40a18e:	outs   dx,BYTE PTR ds:[esi]
  40a18f:	test   al,0xe9
  40a191:	add    al,BYTE PTR [eax]
  40a193:	xchg   esp,eax
  40a194:	mov    eax,ds:0x30c34552
  40a199:	inc    esi
  40a19a:	push   esi
  40a19b:	aad    0x25
  40a19d:	dec    ebx
  40a19e:	inc    esp
  40a19f:	jae    0x40a1c4
  40a1a1:	push   edx
  40a1a2:	inc    ecx
  40a1a3:	push   ebx
  40a1a4:	adc    al,0x3f
  40a1a6:	dec    esi
  40a1a7:	push   0x940002e9
  40a1ac:	push   eax
  40a1ad:	data16 jbe 0x40a225
  40a1b0:	cmp    eax,0x38b4646b
  40a1b5:	outs   dx,DWORD PTR ds:[esi]
  40a1b6:	data16 add BYTE PTR gs:[eax],ah
  40a1ba:	and    al,0x67
  40a1bc:	ins    BYTE PTR es:[edi],dx
  40a1bd:	sbb    ebp,DWORD PTR [ebx+0x42]
  40a1c0:	pop    ebx
  40a1c1:	jmp    0x214135c9
  40a1c6:	push   esp
  40a1c7:	pop    ecx
  40a1c8:	push   ebx
  40a1c9:	xor    BYTE PTR [esi+0x62],al
  40a1cc:	inc    ecx
  40a1cd:	sub    eax,0x1853584b
  40a1d2:	dec    edi
  40a1d3:	add    BYTE PTR [ecx+0x4e],dl
  40a1d6:	adc    BYTE PTR [ebp+0x47],dl
  40a1d9:	dec    esp
  40a1da:	mov    ebx,0xe93b4a4a
  40a1df:	add    edx,DWORD PTR [eax+eax*1+0x600265c0]
  40a1e6:	mov    ebp,0xb920f86a
  40a1eb:	bound  eax,QWORD PTR [eax]
  40a1ed:	imul   ebp,ecx,0xa1009403
  40a1f3:	push   ebx
  40a1f4:	rcl    DWORD PTR [ecx-0x60],1
  40a1f7:	inc    ebp
  40a1f8:	retf   0xb53f
  40a1fb:	dec    edx
  40a1fc:	rcl    BYTE PTR [ecx-0x47],1
  40a1ff:	inc    edx
  40a200:	call   0x94448b4d
  40a205:	add    BYTE PTR [eax-0x6aa0359b],al
  40a20b:	push   0xffffffb0
  40a20d:	and    BYTE PTR [ecx+0x64],bh
  40a210:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a211:	ins    BYTE PTR es:[edi],dx
  40a212:	jmp    0xa141361a
  40a217:	push   ebx
  40a218:	fst    DWORD PTR [ecx+0x30]
  40a21b:	inc    edx
  40a21c:	ret    0x2d3f
  40a21f:	cmp    eax,0x43395158
  40a224:	dec    sp
  40a226:	jmp    0x5041362e
  40a22b:	bound  eax,QWORD PTR [edx+0x785d4d5f]
  40a231:	and    BYTE PTR [eax],al
  40a233:	inc    ecx
  40a234:	ja     0x40a2a3
  40a236:	je     0x40a221
  40a238:	add    BYTE PTR [edi+0x40310000],dl
  40a23e:	cmp    ebx,DWORD PTR [edi+0x30]
  40a241:	push   esi
  40a242:	dec    edx
  40a243:	inc    ecx
  40a244:	and    eax,0x215f3c89
  40a249:	push   edi
  40a24a:	dec    ebp
  40a24b:	push   esp
  40a24c:	jmp    0x1040a2e8
  40a251:	ss push 0x61
  40a254:	add    eax,0x14205c49
  40a259:	dec    edx
  40a25a:	inc    esp
  40a25b:	add    BYTE PTR [ecx-0x4fa0c4b9],dh
  40a261:	aad    0x4a
  40a263:	inc    ecx
  40a264:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a265:	enter  0x5f3c,0xb4
  40a269:	jmp    0xf610a2b2
  40a26e:	push   0x61
  40a270:	int    0xd0
  40a272:	pop    esp
  40a273:	and    BYTE PTR [ecx+0x9504cc3],ah
  40a279:	cmc    
  40a27a:	pop    ebx
  40a27b:	je     0x40a20e
  40a27d:	neg    BYTE PTR [eax+eax*1-0x4f]
  40a281:	out    0x3b,eax
  40a283:	pop    edi
  40a284:	mov    al,ds:0x9d414ad5
  40a289:	cmp    BYTE PTR [edi+ebx*2],0xb4
  40a28d:	int3   
  40a28e:	dec    esp
  40a28f:	dec    eax
  40a290:	scas   al,BYTE PTR es:[edi]
  40a291:	fild   DWORD PTR [eax]
  40a293:	add    BYTE PTR [eax+0x7d616ab5],al
  40a299:	rcr    BYTE PTR [eax+eiz*1+0x31],0x0
  40a29e:	mov    esp,0x8b09504c
  40a2a3:	ins    BYTE PTR es:[edi],dx
  40a2a4:	popa   
  40a2a5:	pop    ebp
  40a2a6:	lea    ebp,[ebp+0x20]
  40a2a9:	dec    edx
  40a2aa:	ja     0x40a308
  40a2ac:	gs add ch,ch
  40a2af:	cld    
  40a2b0:	(bad)  
  40a2b1:	jmp    DWORD PTR [ebp-0x4ba0bab4]
  40a2b7:	ds push esi
  40a2b9:	inc    ecx
  40a2ba:	xor    DWORD PTR [ebx],0x589e5f44
  40a2c0:	inc    ecx
  40a2c1:	push   esp
  40a2c2:	mov    BYTE PTR [ecx+0x0],cl
  40a2c5:	add    BYTE PTR [esi+ebx*2+0x53c16176],dl
  40a2cc:	and    BYTE PTR fs:[ebp-0x22afaba8],al
  40a2d3:	jbe    0x40a33a
  40a2d5:	jb     0x40a285
  40a2d7:	push   ebx
  40a2d8:	outs   dx,DWORD PTR ds:[esi]
  40a2d9:	outs   dx,BYTE PTR ds:[esi]
  40a2da:	lods   eax,DWORD PTR ds:[esi]
  40a2db:	cld    
  40a2dc:	(bad)  
  40a2dd:	jmp    ebp
  40a2df:	dec    esp
  40a2e0:	inc    ebp
  40a2e1:	pop    edi
  40a2e2:	inc    esp
  40a2e3:	inc    edx
  40a2e4:	push   esi
  40a2e5:	inc    ecx
  40a2e6:	xor    DWORD PTR ds:0x394b5f44,ebp
  40a2ec:	push   edx
  40a2ed:	push   ebx
  40a2ee:	inc    esp
  40a2ef:	inc    ebx
  40a2f0:	dec    esi
  40a2f1:	add    BYTE PTR [ecx+0x65],bl
  40a2f4:	je     0x40a357
  40a2f6:	popf   
  40a2f7:	jbe    0x40a35e
  40a2f9:	arpl   WORD PTR [eax+0x4d],bx
  40a2fc:	jbe    0x40a363
  40a2fe:	or     DWORD PTR [ecx+eiz*2],esp
  40a301:	data16 add BYTE PTR [ecx],ch
  40a304:	pop    ecx
  40a305:	jb     0x40a327
  40a307:	push   ds
  40a308:	arpl   WORD PTR [ebp+0x70],bp
  40a30b:	rcr    DWORD PTR [eax+0x74],0x65
  40a30f:	or     DWORD PTR [ebx+eiz*2],esp
  40a312:	outs   dx,DWORD PTR ds:[esi]
  40a313:	and    esp,DWORD PTR [edx+0x65]
  40a316:	arpl   WORD PTR [ecx-0x189190b4],bp
  40a31c:	and    esp,DWORD PTR [ebx+0x6c]
  40a31f:	ret    0x6575
  40a322:	and    BYTE PTR [eax+0x67],ah
  40a325:	jae    0x40a39a
  40a327:	xchg   esp,eax
  40a328:	cmp    BYTE PTR [ecx+0x65],ch
  40a32b:	xchg   esp,eax
  40a32c:	and    DWORD PTR [ebp+eax*2+0x5b],edx
  40a330:	sbb    al,BYTE PTR [eax+0x4f]
  40a333:	inc    edi
  40a334:	and    al,0x48
  40a336:	pop    edi
  40a337:	push   edi
  40a338:	es inc edx
  40a33a:	dec    esi
  40a33b:	pop    ecx
  40a33c:	sbb    bl,BYTE PTR [eax+0x49]
  40a33f:	dec    ebx
  40a340:	aaa    
  40a341:	add    al,0x0
  40a343:	xchg   esp,eax
  40a344:	adc    eax,0x4746f61
  40a349:	arpl   WORD PTR [esi+0x3d],bp
  40a34c:	mov    ecx,0xfd35655a
  40a351:	data16 jb 0x40a3c8
  40a354:	sti    
  40a355:	push   0x74
  40a357:	xor    edx,ebp
  40a359:	and    dh,BYTE PTR [ebx+0x39]
  40a35c:	add    al,0x62
  40a35e:	cmp    esi,DWORD PTR [esi+edx*8+0x78]
  40a362:	gs push es
  40a364:	enter  0x6f5e,0x0
  40a368:	add    edi,edx
  40a36a:	addr16 gs or ch,al
  40a36e:	arpl   WORD PTR [ecx+esi*8-0x43],si
  40a372:	add    al,BYTE PTR [eax]
  40a374:	xchg   esp,eax
  40a375:	mov    cl,0x52
  40a377:	inc    ebp
  40a378:	retf   
  40a379:	mov    eax,ds:0xa4d84145
  40a37e:	push   esp
  40a37f:	pop    edi
  40a380:	retf   
  40a381:	scas   eax,DWORD PTR es:[edi]
  40a382:	inc    ebp
  40a383:	push   edx
  40a384:	ficomp DWORD PTR [ebp-0x756ba8c1]
  40a38a:	jbe    0x40a3fe
  40a38c:	mov    ecx,0xb1205d78
  40a391:	xchg   edi,eax
  40a392:	gs mov ax,0x61b9
  40a397:	je     0x40a40d
  40a399:	js     0x40a3fb
  40a39b:	and    BYTE PTR [ecx-0x5b879991],ch
  40a3a1:	add    BYTE PTR [ebp+eiz*2-0x78],cl
  40a3a5:	gs inc ebp
  40a3a7:	and    al,0x80
  40a3a9:	pop    ecx
  40a3aa:	inc    esp
  40a3ab:	addr16 xchg esp,eax
  40a3ad:	add    BYTE PTR [ecx],ah
  40a3af:	push   esp
  40a3b0:	push   ecx
  40a3b1:	dec    edi
  40a3b2:	xor    BYTE PTR [edx+0x4a],al
  40a3b5:	inc    ecx
  40a3b6:	sub    eax,0x2c4f503b
  40a3bb:	inc    ecx
  40a3bc:	pop    edx
  40a3bd:	dec    edi
  40a3be:	sbb    bl,BYTE PTR [eax+0x55]
  40a3c1:	push   esp
  40a3c2:	sub    al,0x4
  40a3c4:	xchg   esp,eax
  40a3c5:	add    BYTE PTR ds:0x620315c,dl
  40a3cb:	bound  eax,QWORD PTR [eax]
  40a3cd:	arpl   WORD PTR [ebp+0x4],bx
  40a3d0:	jne    0x40a419
  40a3d2:	popa   
  40a3d3:	push   cs
  40a3d4:	addr16 push ebx
  40a3d6:	arpl   WORD PTR [esi],cx
  40a3d8:	pop    edi
  40a3d9:	and    al,0x5c
  40a3db:	or     al,0x78
  40a3dd:	cmp    DWORD PTR [eax],esp
  40a3df:	or     ah,BYTE PTR [ebx+0x28]
  40a3e2:	pop    esp
  40a3e3:	retf   
  40a3e4:	(bad)  
  40a3e5:	neg    DWORD PTR [ecx+0x9]
  40a3e8:	push   0xfffffff5
  40a3ea:	push   edi
  40a3eb:	lds    esp,FWORD PTR [esi-0x8]
  40a3ee:	add    BYTE PTR [ecx-0x55b22ead],ah
  40a3f4:	inc    ebp
  40a3f5:	rcr    DWORD PTR [ebx-0x3c],cl
  40a3f8:	je     0x40a3e1
  40a3fa:	pop    edi
  40a3fb:	into   
  40a3fc:	retw   
  40a3fe:	popa   
  40a3ff:	mov    esi,0x8c5ce45e
  40a404:	ja     0x40a3bf
  40a406:	add    BYTE PTR [ebp-0x79df4ea5],dl
  40a40c:	popa   
  40a40d:	jecxz  0x40a471
  40a40f:	jle    0x40a478
  40a411:	mov    ebp,0xc0628a20
  40a416:	pop    esp
  40a417:	mov    esp,DWORD PTR [edx-0x49]
  40a41a:	pop    ecx
  40a41b:	add    cl,cl
  40a41d:	lods   eax,DWORD PTR ds:[esi]
  40a41e:	pop    edi
  40a41f:	imul   edi,DWORD PTR [ebp-0x4e],0x68310064
  40a426:	inc    ebx
  40a427:	pop    edi
  40a428:	sub    dl,BYTE PTR [esi+0x4d]
  40a42b:	bound  eax,QWORD PTR [esi+0x6c]
  40a42e:	add    BYTE PTR [di+0x0],dl
  40a432:	pop    eax
  40a433:	arpl   WORD PTR [eax],sp
  40a435:	push   esi
  40a436:	push   edx
  40a437:	dec    ebp
  40a438:	push   0x65647144
  40a43d:	cmp    esp,DWORD PTR [edi+0x4d]
  40a440:	arpl   WORD PTR [esi],di
  40a442:	jne    0x40a4b4
  40a444:	ins    BYTE PTR es:[edi],dx
  40a445:	or     al,0x4c
  40a447:	arpl   WORD PTR [eax],sp
  40a449:	or     dh,BYTE PTR [ecx]
  40a44b:	pop    esp
  40a44c:	ins    BYTE PTR es:[edi],dx
  40a44d:	or     edi,DWORD PTR [ecx]
  40a44f:	popa   
  40a450:	imul   ecx,ecx,0x31
  40a453:	pop    edi
  40a454:	imul   edx,DWORD PTR ds:0x3100643d,0x2a5f4340
  40a45e:	push   esi
  40a45f:	dec    ebp
  40a460:	push   0x65643104
  40a465:	fild   DWORD PTR [esi]
  40a467:	dec    esi
  40a468:	arpl   si,cx
  40a46a:	hlt    
  40a46b:	jo     0x40a4d9
  40a46d:	int3   
  40a46e:	or     esp,DWORD PTR [eax+eax*1-0x2b]
  40a472:	fbld   TBYTE PTR [ebx+0x20]
  40a475:	(bad)  
  40a476:	ror    DWORD PTR [ebp+0x68],1
  40a479:	(bad)  
  40a47a:	lock fs gs mov ebx,0xbd6176d2
  40a482:	fsub   QWORD PTR [ebx+0x20]
  40a485:	mov    bh,BYTE PTR [eax-0x4f7493a4]
  40a48b:	popa   
  40a48c:	imul   ecx,ecx,0xffffffb9
  40a48f:	pop    edi
  40a490:	imul   edi,DWORD PTR [ebp-0x54],0x64
  40a497:	in     eax,0x50
  40a499:	inc    ebp
  40a49a:	pop    edi
  40a49b:	(bad)  
  40a49c:	ds pop edi
  40a49e:	push   0x65646410
  40a4a3:	lahf   
  40a4a4:	ds jbe 0x40a508
  40a4a7:	imul   esp,DWORD PTR [edi+0x65],0x654c6100
  40a4ae:	and    BYTE PTR [edx+0x4e],bl
  40a4b1:	pop    edi
  40a4b2:	push   0x65646350
  40a4b7:	scas   eax,DWORD PTR es:[edi]
  40a4b8:	cmp    eax,0x60506966
  40a4bd:	and    BYTE PTR fs:[esi+0x63],cl
  40a4c1:	ins    BYTE PTR es:[edi],dx
  40a4c2:	ins    BYTE PTR es:[edi],dx
  40a4c3:	dec    edi
  40a4c4:	arpl   WORD PTR [ebx+0x6b],sp
  40a4c7:	frstor [edx+0x61]
  40a4ca:	imul   ebx,DWORD PTR [ecx+0x75006457],0x6e5f4554
  40a4d4:	inc    edx
  40a4d5:	pop    edi
  40a4d6:	push   0x656463a0
  40a4db:	scas   eax,DWORD PTR es:[edi]
  40a4dc:	cmp    eax,0x60906966
  40a4e1:	add    BYTE PTR fs:[ecx+0x6a206548],ah
  40a4e8:	dec    esi
  40a4e9:	pop    edi
  40a4ea:	jne    0x40a55b
  40a4ec:	dec    esp
  40a4ed:	and    BYTE PTR [ebx+0x4c],ah
  40a4f0:	dec    esp
  40a4f1:	ins    BYTE PTR es:[edi],dx
  40a4f2:	bound  ecx,QWORD PTR [edi+ebx*2+0x6b]
  40a4f6:	and    BYTE PTR [ebx+0x65],ah
  40a4f9:	imul   ebp,DWORD PTR [eax+eax*1+0x50],0x35000064
  40a501:	push   eax
  40a502:	inc    ebp
  40a503:	pop    edi
  40a504:	cs inc edx
  40a506:	pop    edi
  40a507:	jne    0x40a538
  40a509:	dec    esp
  40a50a:	add    BYTE PTR [eax],al
  40a50c:	and    DWORD PTR [eax+0x65],ecx
  40a50f:	and    BYTE PTR [edx+eax*4-0x7b56a0a4],dl
  40a516:	jno    0x40a58b
  40a518:	mov    ch,0x7a
  40a51a:	addr16 pop edi
  40a51c:	mov    dh,0x84
  40a51e:	imul   esi,DWORD PTR gs:[edx-0x579e9e47],0x7761616d
  40a529:	dec    esi
  40a52a:	and    al,0x66
  40a52c:	jne    0x40a57e
  40a52e:	pusha  
  40a52f:	gs js  0x40a50b
  40a532:	add    al,BYTE PTR [eax]
  40a534:	xchg   esp,eax
  40a535:	and    DWORD PTR [ebp+eax*2+0x53],edx
  40a539:	push   ss
  40a53a:	inc    edx
  40a53b:	pop    edi
  40a53c:	jns    0x40a582
  40a53e:	jno    0x40a5b3
  40a540:	jne    0x40a57c
  40a542:	addr16 pop edi
  40a544:	jbe    0x40a58a
  40a546:	imul   eax,DWORD PTR gs:[edx-0x27],0x6940002
  40a54e:	ja     0x40a5b3
  40a550:	aaa    
  40a551:	cld    
  40a552:	jo     0x40a5c7
  40a554:	xchg   esp,eax
  40a555:	and    DWORD PTR [ebp+eax*2+0x53],edx
  40a559:	xor    bh,BYTE PTR [ecx]
  40a55b:	add    BYTE PTR [ecx+ecx*1+0x57005443],dl
  40a562:	and    DWORD PTR [eax+eax*1],eax
  40a565:	xchg   esp,eax
  40a566:	adc    al,0x3e
  40a568:	push   ebx
  40a569:	jmp    0xe683f505
  40a56e:	mov    al,0x40
  40a570:	inc    ebp
  40a571:	xchg   esp,eax
  40a572:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a573:	push   ebp
  40a574:	inc    edx
  40a575:	out    0x96,eax
  40a577:	push   eax
  40a578:	dec    ecx
  40a579:	(bad)  
  40a57a:	pushf  
  40a57b:	add    al,BYTE PTR [eax]
  40a57d:	xchg   esp,eax
  40a57e:	fwait
  40a57f:	cmp    edx,DWORD PTR [ebp+ecx*8-0x65]
  40a583:	dec    ecx
  40a584:	add    BYTE PTR [esp+ecx*4+0xd9531d],dl
  40a58b:	test   al,0x51
  40a58d:	xlat   BYTE PTR ds:[ebx]
  40a58e:	cmp    cl,ch
  40a590:	add    edx,DWORD PTR [eax+eax*1+0x43e646a4]
  40a597:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a598:	add    edx,DWORD PTR [eax+eax*1+0x3fd13baa]
  40a59f:	mov    dl,0x3c
  40a5a1:	leave  
  40a5a2:	push   esp
  40a5a3:	jmp    0x9c4139ab
  40a5a8:	cmp    BYTE PTR [ebp+0x3f],dl
  40a5ab:	cmp    eax,0x3539623b
  40a5b0:	dec    ebx
  40a5b1:	xchg   esp,eax
  40a5b2:	add    BYTE PTR [ebx],bh
  40a5b4:	inc    edi
  40a5b5:	cmp    edi,DWORD PTR fs:[ebx]
  40a5b8:	pop    eax
  40a5b9:	xchg   esp,eax
  40a5ba:	add    BYTE PTR [esi+edi*1],bl
  40a5bd:	pop    eax
  40a5be:	cmp    ebp,DWORD PTR [edx]
  40a5c0:	cmp    DWORD PTR [eax+eax*1+0x4b005219],edx
  40a5c7:	push   eax
  40a5c8:	sbb    DWORD PTR [ebx+0x68],eax
  40a5cb:	aas    
  40a5cc:	xor    DWORD PTR [esp+edx*4],eax
  40a5cf:	add    BYTE PTR [ecx],bh
  40a5d1:	push   edx
  40a5d2:	push   ebx
  40a5d3:	push   eax
  40a5d4:	das    
  40a5d5:	cmp    ecx,DWORD PTR [edx+0x44]
  40a5d8:	jmp    0x344139e0
  40a5dd:	cmp    eax,0x3e94542
  40a5e2:	xchg   esp,eax
  40a5e3:	add    BYTE PTR [ecx+edi*1],ah
  40a5e6:	push   edi
  40a5e7:	cmp    ebx,DWORD PTR ds:0xb5009404
  40a5ed:	cmp    al,0xd7
  40a5ef:	xor    eax,0x9403e9
  40a5f4:	stos   BYTE PTR es:[edi],al
  40a5f5:	cmp    al,0xe4
  40a5f7:	inc    edi
  40a5f8:	jmp    0x9d413a00
  40a5fd:	push   ecx
  40a5fe:	aad    0x3d
  40a600:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a601:	add    edx,DWORD PTR [eax+eax*1+0x54c7a600]
  40a608:	dec    ecx
  40a609:	sahf   
  40a60a:	xchg   ecx,eax
  40a60b:	dec    ebp
  40a60c:	add    BYTE PTR [edx-0x5bb1c578],ch
  40a612:	aam    0x54
  40a614:	add    BYTE PTR [ecx-0x5effab1e],bh
  40a61a:	fidivr DWORD PTR [edi]
  40a61c:	inc    esp
  40a61d:	jmp    0xa540a6b9
  40a622:	fidivr DWORD PTR [eax*2+0xd29d]
  40a629:	mov    al,BYTE PTR [eax]
  40a62b:	jo     0x40a687
  40a62d:	outs   dx,BYTE PTR ds:[esi]
  40a62e:	dec    esp
  40a62f:	jae    0x40a6a5
  40a631:	imul   ecx,DWORD PTR [esi+0x5e],0x82590000
  40a638:	pop    ecx
  40a639:	js     0x40a68b
  40a63b:	lea    ebx,[ebp+0x6f]
  40a63e:	push   edi
  40a63f:	dec    esi
  40a640:	arpl   WORD PTR [ebx+0x35],sp
  40a643:	inc    ecx
  40a644:	pop    ecx
  40a645:	outs   dx,BYTE PTR ds:[esi]
  40a646:	jmp    0x4a40a6e2
  40a64b:	outs   dx,DWORD PTR ds:[esi]
  40a64c:	pop    edx
  40a64d:	je     0x40a65b
  40a64f:	outs   dx,BYTE PTR ds:[esi]
  40a650:	je     0x40a67f
  40a652:	or     eax,0x1d675a35
  40a657:	pop    eax
  40a658:	add    BYTE PTR [eax],al
  40a65a:	adc    eax,0xfa6e5f2a
  40a65f:	xor    eax,0x34cc7263
  40a664:	pop    edx
  40a665:	arpl   WORD PTR [esi],ax
  40a667:	xor    al,0x57
  40a669:	outs   dx,BYTE PTR ds:[esi]
  40a66a:	push   es
  40a66b:	cwde   
  40a66c:	add    BYTE PTR [eax],al
  40a66e:	fadd   QWORD PTR [edi]
  40a670:	bound  esi,QWORD PTR [edx-0x38]
  40a673:	jecxz  0x40a6d8
  40a675:	add    dl,cl
  40a677:	fbstp  TBYTE PTR [ebx+0x6e]
  40a67a:	ret    0x64f4
  40a67d:	add    BYTE PTR [eax],al
  40a67f:	inc    esi
  40a680:	pusha  
  40a681:	gs jo  0x40a614
  40a684:	arpl   WORD PTR [ecx+ebp*2+0x1b],bp
  40a688:	pusha  
  40a689:	add    BYTE PTR [eax],al
  40a68b:	pop    esi
  40a68c:	push   ecx
  40a68d:	outs   dx,DWORD PTR ds:[esi]
  40a68e:	jae    0x40a690
  40a690:	sbb    ch,bh
  40a692:	(bad)  
  40a693:	dec    DWORD PTR [ecx]
  40a695:	call   0x40:0x961e0040
  40a69c:	push   edx
  40a69d:	mov    ebp,0xc4ac0040
  40a6a2:	inc    eax
  40a6a3:	add    BYTE PTR [ebx-0x48ffbf3d],bh
  40a6a9:	ret    
  40a6aa:	inc    eax
  40a6ab:	add    BYTE PTR [edx],bh
  40a6ad:	std    
  40a6ae:	imul   eax,DWORD PTR [eax],0x62
  40a6b1:	add    al,0x62
  40a6b3:	add    BYTE PTR [esp+eax*1+0x6c],cl
  40a6b7:	add    cl,al
  40a6b9:	add    al,0x0
  40a6bb:	add    BYTE PTR [ecx+0x5e006f04],dl
  40a6c1:	add    al,0x61
  40a6c3:	add    BYTE PTR [ecx+0x4],dl
  40a6c6:	pop    esp
  40a6c7:	add    ch,ch
  40a6c9:	cld    
  40a6ca:	(bad)  
  40a6cb:	call   DWORD PTR [ebp+0x70]
  40a6ce:	je     0x40a740
  40a6d0:	mov    bh,0x5
  40a6d2:	das    
  40a6d3:	ja     0x40a67f
  40a6d5:	ins    DWORD PTR es:[edi],dx
  40a6d6:	bound  edx,QWORD PTR cs:[esi+eax*2+0x459e2e67]
  40a6de:	ins    DWORD PTR es:[edi],dx
  40a6df:	das    
  40a6e0:	mov    ebp,0x85fffffc
  40a6e5:	jo     0x40a75b
  40a6e7:	jo     0x40a6d0
  40a6e9:	add    eax,0x738a772f
  40a6ee:	bound  ecx,QWORD PTR cs:[bp+di+0x67]
  40a6f3:	ins    BYTE PTR es:[edi],dx
  40a6f4:	add    BYTE PTR [eax+0xa],bl
  40a6f7:	arpl   WORD PTR [edi-0x6c],bp
  40a6fa:	mov    esp,0x5940019
  40a6ff:	(bad)  
  40a700:	aas    
  40a701:	xchg   esp,eax
  40a702:	gs (bad) 
  40a704:	aas    
  40a705:	xchg   esp,eax
  40a706:	mov    al,BYTE PTR [edx]
  40a708:	gs xchg esp,eax
  40a70a:	test   DWORD PTR [edx],eax
  40a70c:	arpl   WORD PTR [ebx+edi*4-0x746baffe],dx
  40a713:	add    ch,BYTE PTR [ecx-0x6c]
  40a716:	pop    DWORD PTR [edx]
  40a718:	imul   edx,DWORD PTR [ebp+edi*2+0x7e946502],0xd9946502
  40a723:	add    al,BYTE PTR [eax]
  40a725:	xchg   esp,eax
  40a726:	mov    bh,0x2
  40a728:	gs xchg esp,eax
  40a72a:	jno    0x40a72f
  40a72c:	gs xchg esp,eax
  40a72e:	fld    DWORD PTR [edx]
  40a730:	add    BYTE PTR [eax+ecx*4-0x266bbe11],dl
  40a737:	add    al,BYTE PTR [eax]
  40a739:	xchg   esp,eax
  40a73a:	daa    
  40a73b:	jge    0x40a72d
  40a73d:	fcmovnu st,st(7)
  40a73f:	mov    cl,BYTE PTR [ebp+0x54]
  40a742:	(bad)  
  40a744:	inc    eax
  40a745:	mov    edx,0x50f602db
  40a74a:	cmc    
  40a74b:	sti    
  40a74c:	add    BYTE PTR [eax-0x21],cl
  40a74f:	push   eax
  40a750:	call   0x439ad0
  40a755:	push   fs
  40a757:	dec    ecx
  40a758:	ret    0x9000
  40a75b:	(bad)  [ebp-0x75]
  40a75e:	rcr    BYTE PTR [eax-0x28],0xb
  40a762:	xchg   ebp,eax
  40a763:	fld    DWORD PTR [edx]
  40a765:	push   ebx
  40a766:	dec    edx
  40a767:	push   cs
  40a768:	jge    0x40a761
  40a76a:	pop    ss
  40a76b:	outs   dx,DWORD PTR ds:[esi]
  40a76c:	sbb    BYTE PTR [edi],cl
  40a76e:	push   ss
  40a76f:	dec    esp
  40a770:	add    al,0x0
  40a772:	xchg   esp,eax
  40a773:	add    BYTE PTR [eax-0x17],ch
  40a776:	adc    edi,ebp
  40a778:	call   0x5fb83280
  40a77d:	add    al,0x94
  40a77f:	add    BYTE PTR [edx+0x47],ah
  40a782:	pushf  
  40a783:	jge    0x40a7a6
  40a785:	jo     0x40a718
  40a787:	div    DWORD PTR [ebp+0x5]
  40a78a:	pop    ss
  40a78b:	call   0x83da177a
  40a790:	xor    BYTE PTR [ecx],dl
  40a792:	shr    DWORD PTR [ebp+0x72],0x6f
  40a796:	nop
  40a797:	mov    edi,0xe739ec63
  40a79c:	adc    eax,0xe9009400
  40a7a1:	jle    0x40a7cd
  40a7a3:	ins    BYTE PTR es:[edi],dx
  40a7a4:	idiv   BYTE PTR [edx+ecx*2+0x7b]
  40a7a8:	cs ja  0x40a7bb
  40a7ab:	call   0xd85390a6
  40a7b0:	lahf   
  40a7b1:	jne    0x40a748
  40a7b3:	add    BYTE PTR [ecx+0x29],ch
  40a7b6:	xchg   esp,eax
  40a7b7:	ins    BYTE PTR es:[edi],dx
  40a7b8:	cmp    ecx,edi
  40a7ba:	inc    ecx
  40a7bb:	ds jmp 0x40a834
  40a7be:	add    BYTE PTR [edx-0x34],ah
  40a7c1:	adc    DWORD PTR [ebp+eiz*2-0x1c43aec3],edi
  40a7c8:	out    0xe8,al
  40a7ca:	fild   DWORD PTR [ebx]
  40a7cc:	stc    
  40a7cd:	call   0x6430c6d5
  40a7d2:	icebp  
  40a7d3:	inc    edi
  40a7d4:	adc    edx,DWORD PTR [ecx-0x16fd869f]
  40a7da:	xor    al,0xd4
  40a7dc:	mov    esi,0x40618bee
  40a7e1:	jmp    0x317ec547
  40a7e6:	fst    QWORD PTR [ebp-0x5e8188cd]
  40a7ec:	imul   eax,DWORD PTR [eax],0xffffffd5
  40a7ef:	in     al,0xe5
  40a7f1:	je     0x40a7d0
  40a7f3:	cmc    
  40a7f4:	ja     0x40a873
  40a7f6:	std    
  40a7f7:	pop    edi
  40a7f8:	call   0x77d89105
  40a7fd:	inc    ebp
  40a7fe:	stc    
  40a7ff:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a801:	je     0x40a7fb
  40a803:	call   0xe1291203
  40a808:	mov    bl,0xfe
  40a80a:	fldenv [eax-0x1f68a140]
  40a810:	mov    bh,0xc1
  40a812:	loope  0x40a7ab
  40a814:	jns    0x40a852
  40a816:	fldenv [ebp+0x48640040]
  40a81c:	jb     0x40a844
  40a81e:	adc    DWORD PTR [edi],0xe9fee6
  40a824:	mov    ds:0x97934843,al
  40a829:	push   ecx
  40a82a:	call   esp
  40a82c:	imul   ecx,DWORD PTR [esi],0x40
  40a82f:	jmp    0x6a48e4c4
  40a834:	dec    ebx
  40a835:	cli    
  40a836:	out    0x5,eax
  40a838:	aaa    
  40a839:	out    0xfe,al
  40a83b:	cmp    ebx,esi
  40a83d:	ins    BYTE PTR es:[edi],dx
  40a83e:	or     BYTE PTR [edx],bh
  40a840:	sti    
  40a841:	into   
  40a842:	and    BYTE PTR [ebp-0x39d3a814],0x65
  40a849:	hlt    
  40a84a:	mov    WORD PTR [edi],fs
  40a84c:	mov    dl,BYTE PTR [eax-0x1]
  40a84f:	sahf   
  40a850:	pop    ss
  40a851:	ret    0x620b
  40a854:	or     bl,bl
  40a856:	mov    dh,0x3a
  40a858:	gs dec esi
  40a85a:	push   edi
  40a85b:	jb     0x40a81d
  40a85d:	out    0x75,al
  40a85f:	stc    
  40a860:	cs call 0xe5e9744d
  40a866:	inc    BYTE PTR [eax]
  40a868:	es and eax,0x31c88b10
  40a86e:	push   ss
  40a86f:	inc    eax
  40a870:	jge    0x40a8d6
  40a872:	inc    ebp
  40a873:	adc    BYTE PTR [ebx+0x53144669],dl
  40a879:	fs inc ebp
  40a87b:	adc    al,0xee
  40a87d:	inc    ebp
  40a87e:	adc    BYTE PTR [eax],al
  40a880:	mov    ?,WORD PTR [esi+eiz*2+0x17d80]
  40a887:	data16 add ah,ah
  40a88a:	and    eax,0x28fa8d14
  40a88f:	lea    eax,[esi-0xb]
  40a892:	push   ecx
  40a893:	push   eax
  40a894:	jmp    DWORD PTR [eax+0x696ac031]
  40a89a:	inc    ebx
  40a89b:	mov    DWORD PTR [ebx],eax
  40a89d:	call   0x55f6:0x83831056
  40a8a4:	jmp    DWORD PTR [eax+0x4a]
  40a8a7:	sub    al,0x6a
  40a8a9:	sub    eax,0x216c582
  40a8ae:	ficom  WORD PTR [ebx]
  40a8b0:	xor    al,0xf3
  40a8b2:	inc    eax
  40a8b3:	add    BYTE PTR [ebx+0x5e5f20b1],al
  40a8b9:	pop    eax
  40a8ba:	cmp    ebx,eax
  40a8bc:	push   ebp
  40a8bd:	xchg   ch,cl
  40a8bf:	mov    DWORD PTR [ebp-0xb],eax
  40a8c2:	sub    edx,0x5736ae0c
  40a8c8:	push   0xffffffe5
  40a8ca:	addr16 je 0x40a8c9
  40a8cd:	mov    dh,0xc4
  40a8cf:	sbb    BYTE PTR [ebx-0x41],0x0
  40a8d3:	xor    edi,edi
  40a8d5:	(bad)  
  40a8d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a8d7:	jae    0x40a93c
  40a8d9:	mov    ah,0x57
  40a8db:	cld    
  40a8dc:	jle    0x40a934
  40a8de:	imul   eax,DWORD PTR [eax+ecx*1-0x6c],0x218cff01
  40a8e6:	(bad)
  40a8ea:	and    al,BYTE PTR [edx]
  40a8ec:	add    BYTE PTR [eax],al
  40a8ee:	pop    edi
  40a8ef:	sahf   
  40a8f0:	outs   dx,DWORD PTR ds:[esi]
  40a8f1:	dec    esp
  40a8f2:	pop    ds
  40a8f3:	adc    eax,0x449d69fc
  40a8f8:	jo     0x40a902
  40a8fa:	fist   WORD PTR [ecx+0x4e]
  40a8fd:	pop    ebx
  40a8fe:	xchg   esi,eax
  40a8ff:	fldcw  WORD PTR [ecx]
  40a901:	(bad)  
  40a902:	jmp    0x68852416
  40a907:	xlat   BYTE PTR ds:[ebx]
  40a908:	mov    ebp,0x7a17af98
  40a90d:	xlat   BYTE PTR ds:[ebx]
  40a90e:	inc    ebp
  40a90f:	aas    
  40a910:	jp     0x40a904
  40a912:	mov    ds:0x97f86f7a,eax
  40a917:	lods   al,BYTE PTR ds:[esi]
  40a918:	cli    
  40a919:	mov    edx,ds
  40a91b:	xlat   BYTE PTR ds:[ebx]
  40a91c:	push   edx
  40a91d:	inc    ecx
  40a91f:	aad    0xe5
  40a921:	adc    al,0x6c
  40a923:	jecxz  0x40a967
  40a925:	add    ch,cl
  40a927:	mov    al,0x7f
  40a929:	mov    edi,0x564e0a8
  40a92e:	or     DWORD PTR [edi+0x3],edi
  40a931:	jmp    0x40a8ca
  40a933:	pusha  
  40a934:	dec    eax
  40a935:	cld    
  40a936:	int    0x54
  40a938:	out    0x7e,eax
  40a93a:	int    0x4f
  40a93c:	jmp    0x40a995
  40a93e:	pop    ebx
  40a93f:	and    ecx,DWORD PTR [ecx-0x37]
  40a942:	(bad)  
  40a943:	loope  0x40a947
  40a945:	mov    cr3,esp
  40a948:	repz mov ch,0x52
  40a94b:	fadd   st,st(1)
  40a94d:	fisttp WORD PTR [esi+edx*8-0x40ff153f]
  40a954:	mov    ds:0xd890243f,eax
  40a959:	dec    esp
  40a95a:	mov    eax,ebp
  40a95c:	add    BYTE PTR [esi+0x29331ffe],ch
  40a962:	add    al,0x28
  40a964:	cli    
  40a965:	fdiv   QWORD PTR ds:[edi-0x8]
  40a969:	call   0x26fbb871
  40a96e:	ret    0x97
  40a971:	push   ss
  40a972:	ja     0x40a94d
  40a974:	cld    
  40a975:	sbb    ch,ah
  40a977:	mov    al,ds:0x9443da0c
  40a97c:	ja     0x40a9de
  40a97e:	jg     0x40a9fa
  40a980:	ins    DWORD PTR es:[edi],dx
  40a981:	in     eax,dx
  40a982:	jle    0x40a9ed
  40a984:	ins    BYTE PTR es:[edi],dx
  40a985:	loope  0x40a9ff
  40a987:	xchg   ecx,eax
  40a988:	push   esi
  40a989:	call   0xd923fb06
  40a98e:	js     0x40a9e2
  40a990:	inc    ebx
  40a991:	sub    dh,BYTE PTR [ecx]
  40a993:	push   esp
  40a994:	mov    edi,0x7f3f789b
  40a999:	inc    esp
  40a99a:	in     al,dx
  40a99b:	push   ss
  40a99c:	aam    0x8c
  40a99e:	push   eax
  40a99f:	shufps xmm3,XMMWORD PTR ds:0x9180a041,0xfb
  40a9a7:	xchg   esp,eax
  40a9a8:	ja     0x40a953
  40a9aa:	test   ecx,0xa0f3724b
  40a9b0:	cmc    
  40a9b1:	imul   ebp,esp,0x59e16a77
  40a9b7:	add    BYTE PTR [esi+0x3e40048],dl
  40a9bd:	jecxz  0x40a9a7
  40a9bf:	pop    ecx
  40a9c0:	mov    BYTE PTR [ebp+0x5c],dh
  40a9c3:	and    BYTE PTR [eax+ecx*2+0x149bac1],dh
  40a9ca:	jmp    0x18fbb91c
  40a9cf:	pop    edx
  40a9d0:	push   esi
  40a9d1:	inc    ebx
  40a9d2:	ins    BYTE PTR es:[edi],dx
  40a9d3:	outs   dx,DWORD PTR ds:[esi]
  40a9d4:	js     0x40aa06
  40a9d6:	add    cl,al
  40a9d8:	shl    BYTE PTR ds:0x494ee900,cl
  40a9de:	test   DWORD PTR [ecx-0x56cd07d0],ebp
  40a9e4:	push   edi
  40a9e5:	fnstenv [ebp+0x330097e9]
  40a9eb:	mov    fs,WORD PTR [eax+0x4b]
  40a9ee:	lea    ebp,ds:0xba501474
  40a9f4:	xor    DWORD PTR [ebp+0x43],0x8950abcd
  40a9fb:	cmc    
  40a9fc:	mov    ds:0x9bdd8918,eax
  40aa01:	adc    al,0x89
  40aa03:	aad    0x93
  40aa05:	xor    al,ch
  40aa07:	cmc    
  40aa08:	xor    ah,dl
  40aa0a:	(bad)  
  40aa0b:	gs push edi
  40aa0d:	jne    0x40aa52
  40aa0f:	or     eax,0x6b83f18c
  40aa14:	xchg   edi,eax
  40aa15:	add    BYTE PTR [eax],al
  40aa17:	test   BYTE PTR ss:[eax-0x73],dl
  40aa1b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aa1c:	add    BYTE PTR [ebx-0x137517fc],ah
  40aa22:	loope  0x40aa22
  40aa24:	gs push edi
  40aa26:	outs   dx,BYTE PTR ds:[esi]
  40aa27:	outs   dx,BYTE PTR ds:[esi]
  40aa28:	push   ss
  40aa29:	mov    ebx,0x6362141c
  40aa2e:	sbb    al,0x1c
  40aa30:	adc    DWORD PTR [eax+0x8],esi
  40aa33:	add    cl,ch
  40aa35:	scas   al,BYTE PTR es:[edi]
  40aa36:	cmp    al,0x24
  40aa38:	sar    DWORD PTR [edx+edi*4+0x3d7c997d],1
  40aa3f:	and    al,0x1
  40aa41:	push   0x13
  40aa43:	xor    edi,DWORD PTR [ebx+0x12f0e9b1]
  40aa49:	cs ins DWORD PTR es:[edi],dx
  40aa4b:	inc    ecx
  40aa4c:	pusha  
  40aa4d:	cmp    al,0x1c
  40aa4f:	adc    BYTE PTR [eax],al
  40aa51:	xchg   esi,eax
  40aa52:	mov    dh,0x74
  40aa54:	sbb    al,0x46
  40aa56:	pusha  
  40aa57:	and    al,0x14
  40aa59:	ss int3 
  40aa5b:	std    
  40aa5c:	jae    0x40aa17
  40aa5e:	aad    0xc6
  40aa60:	lods   eax,DWORD PTR ss:[esi]
  40aa62:	std    
  40aa63:	add    eax,0xffffff89
  40aa66:	clc    
  40aa67:	inc    BYTE PTR [ecx+ebx*8-0x13]
  40aa6b:	add    edi,0xea754fe0
  40aa71:	adc    cl,BYTE PTR [ecx+0x24]
  40aa74:	adc    al,0x25
  40aa76:	jecxz  0x40aa7d
  40aa78:	add    BYTE PTR [ebp-0x70],bh
  40aa7b:	inc    edx
  40aa7c:	and    al,0x51
  40aa7e:	aad    0x65
  40aa80:	mov    ecx,0x32fd6d00
  40aa85:	shl    BYTE PTR [eax+ecx*2+0x69721024],0xbf
  40aa8d:	jmp    0x40aaf8
  40aa8f:	fidiv  WORD PTR [edx+0x24]
  40aa92:	cmp    ebp,edx
  40aa94:	cli    
  40aa95:	push   es
  40aa96:	cmp    eax,0x99448cfd
  40aa9b:	add    al,ch
  40aa9d:	dec    edx
  40aa9e:	(bad)  
  40aa9f:	cld    
  40aaa0:	dec    DWORD PTR [edx+0x5b5e3d6a]
  40aaa6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aaa7:	xlat   BYTE PTR ds:[ebx]
  40aaa8:	pop    ebx
  40aaa9:	ret    
  40aaaa:	call   0x21c29520
  40aaaf:	and    DWORD PTR [esi],eax
  40aab1:	add    BYTE PTR ds:0x2bdb332a,ch
  40aab7:	mov    DWORD PTR es:[ebp-0x63],ebx
  40aabb:	jae    0x40ab18
  40aabd:	in     al,0x74
  40aabf:	aas    
  40aac0:	lock mov DWORD PTR [eax-0x38],edx
  40aac4:	xchg   DWORD PTR [ebp+0x39],ebx
  40aac7:	je     0x40ab24
  40aac9:	enter  0x6094,0x40
  40aacd:	aam    0x9f
  40aacf:	xchg   esi,eax
  40aad0:	push   esi
  40aad1:	dec    esi
  40aad2:	mov    ebp,DWORD PTR [ecx+0x78]
  40aad5:	call   ebx
  40aad7:	(bad)  
  40aad8:	test   edi,esi
  40aada:	xchg   esi,eax
  40aadb:	sub    edx,edi
  40aadd:	cmp    BYTE PTR [ebp+edx*8-0x28ec7aef],0x2
  40aae5:	add    BYTE PTR [eax],al
  40aae7:	mov    bl,0xb
  40aae9:	adc    BYTE PTR [ebp+0x16ea8751],cl
  40aaef:	imul   edx,edi,0x6e1eeb02
  40aaf5:	push   eax
  40aaf6:	or     BYTE PTR [edi],bl
  40aaf8:	adc    DWORD PTR [eax],ecx
  40aafa:	mov    ebx,DWORD PTR ds:0x94000466
  40ab00:	push   0xffffffdb
  40ab02:	add    DWORD PTR [ebx-0x26783ca3],ecx
  40ab08:	jne    0x40aa99
  40ab0a:	inc    esp
  40ab0b:	cmp    BYTE PTR [edx-0x669bab71],bl
  40ab11:	mov    ecx,DWORD PTR [eax+ebp*1+0x51]
  40ab15:	cmp    BYTE PTR [eax-0x186582e3],dh
  40ab1b:	nop
  40ab1c:	xlat   BYTE PTR ds:[ebx]
  40ab1d:	add    al,0x0
  40ab1f:	das    
  40ab20:	jge    0x40aab1
  40ab22:	mov    esp,0xfee220ec
  40ab27:	cmp    al,0x3e
  40ab29:	stc    
  40ab2a:	jmp    FWORD PTR [ebx]
  40ab2c:	mov    al,gs:0xe20f1dd7
  40ab32:	(bad)  
  40ab33:	shl    ecx,1
  40ab35:	idiv   bh
  40ab37:	adc    ebp,edx
  40ab39:	(bad)  
  40ab3a:	mov    ah,0x78
  40ab3c:	(bad)  
  40ab3d:	loopne 0x40ab3d
  40ab3f:	in     al,dx
  40ab40:	cmp    BYTE PTR [eax+eax*1],bl
  40ab43:	xchg   esp,eax
  40ab44:	add    BYTE PTR [ebx+0x3],dl
  40ab47:	pop    ds
  40ab48:	(bad)  
  40ab49:	imul   ecx,DWORD PTR [edi+0x0],0xffffffe4
  40ab4d:	call   0xd4c2b2
  40ab52:	push   0xffffffc9
  40ab54:	test   al,0xdf
  40ab56:	xor    ebp,esp
  40ab58:	dec    eax
  40ab59:	loope  0x40abab
  40ab5b:	mov    WORD PTR [eax+0x188ee900],ss
  40ab61:	test   eax,0x33bae1af
  40ab66:	cmp    ecx,esp
  40ab68:	mov    BYTE PTR [edi+esi*8],dl
  40ab6b:	inc    ebx
  40ab6c:	xchg   esp,eax
  40ab6d:	sub    DWORD PTR [eax+edx*1+0x475c012e],0xffffffa4
  40ab75:	xor    BYTE PTR [edx+0x47],dh
  40ab78:	pushf  
  40ab79:	mov    esp,DWORD PTR [eax]
  40ab7b:	or     BYTE PTR [esi+ecx*2+0x2d],bh
  40ab7f:	add    edx,DWORD PTR [ebx+edx*1-0x2afee489]
  40ab86:	(bad)  
  40ab88:	leave  
  40ab89:	call   0xd4b580
  40ab8e:	push   esi
  40ab8f:	push   edi
  40ab90:	fs call 0xd4b580
  40ab96:	lahf   
  40ab97:	jmp    0x40abe8
  40ab99:	add    eax,0xc08603e9
  40ab9e:	aas    
  40ab9f:	mov    ecx,0x8ae90095
  40aba4:	sar    BYTE PTR [edi+ebp*2+0x30e84057],0x1c
  40abac:	xchg   esp,eax
  40abad:	add    BYTE PTR [eax+0x47],ah
  40abb0:	add    al,ah
  40abb2:	or     BYTE PTR [ebx-0x54396b19],0xe0
  40abb9:	adc    ebx,DWORD PTR [esp+eiz*8-0x74]
  40abbd:	push   eax
  40abbe:	aam    0xff
  40abc0:	add    DWORD PTR [ecx+0xe91066a],ebx
  40abc6:	inc    esp
  40abc7:	shl    BYTE PTR [eax+0x4a],1
  40abca:	call   0xe0d0007
  40abcf:	mov    gs,WORD PTR [eax]
  40abd1:	call   0x6aec:0x9a620000
  40abd8:	mov    ds:0xa15c87cb,al
  40abdd:	push   ds
  40abde:	push   esp
  40abdf:	int3   
  40abe0:	lock push 0xffffffb0
  40abe3:	push   cs
  40abe4:	pop    edi
  40abe5:	imul   eax,DWORD PTR [edx],0x0
  40abe8:	jmp    0x7248f00d
  40abed:	push   edi
  40abee:	add    al,0xe8
  40abf0:	ret    0x15a
  40abf3:	add    BYTE PTR [ebp-0x29],ah
  40abf6:	or     eax,0x99e084
  40abfb:	add    BYTE PTR [edx-0x16],dh
  40abfe:	int3   
  40abff:	add    dh,ah
  40ac01:	mov    DWORD PTR [si+0x71],esi
  40ac05:	push   cs
  40ac06:	pop    ebp
  40ac07:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ac08:	and    bl,cl
  40ac0a:	in     al,dx
  40ac0b:	jne    0x40ac13
  40ac0d:	sbb    DWORD PTR [ebp-0x24],edx
  40ac10:	ret    
  40ac11:	imul   ecx,DWORD PTR [ebp-0x62ff1eba],0x30
  40ac18:	(bad)  
  40ac19:	fdiv   QWORD PTR [ebx+0x10e93ff6]
  40ac1f:	ret    0x6c0b
  40ac22:	push   edi
  40ac23:	push   edx
  40ac24:	push   cs
  40ac25:	cs rcr al,cl
  40ac28:	mov    ch,BYTE PTR [edi+ecx*2-0x770a3a7d]
  40ac2f:	inc    ebx
  40ac30:	in     al,dx
  40ac31:	fwait
  40ac32:	push   ebp
  40ac33:	adc    esi,esi
  40ac35:	(bad)
  40ac3a:	inc    eax
  40ac3b:	mov    edx,0x2bf850d
  40ac40:	add    BYTE PTR [eax],al
  40ac42:	dec    eax
  40ac43:	pop    eax
  40ac44:	(bad)  
  40ac45:	(bad)  
  40ac46:	in     eax,dx
  40ac47:	lock or dl,0xfc
  40ac4b:	add    DWORD PTR [eax],eax
  40ac4d:	lea    esp,[esi+0x29758bd8]
  40ac53:	in     eax,dx
  40ac54:	add    BYTE PTR [ebp*8-0x6e3f7bff],0xde
  40ac5c:	push   0x8453814
  40ac61:	push   eax
  40ac62:	ss inc edi
  40ac64:	fadd   QWORD PTR [ebx]
  40ac66:	out    dx,al
  40ac67:	adc    al,0xff
  40ac69:	adc    eax,0x3ed3cd
  40ac6e:	ds enter 0xff0a,0x70
  40ac73:	rol    BYTE PTR [ecx+0x5b8ca1c3],1
  40ac79:	fadd   DWORD PTR [eax]
  40ac7b:	or     BYTE PTR [esi],bl
  40ac7d:	or     BYTE PTR [ebx-0x8],dl
  40ac80:	aaa    
  40ac81:	loopne 0x40ac0c
  40ac83:	test   al,0xac
  40ac85:	out    0x74,al
  40ac87:	inc    ebx
  40ac88:	add    DWORD PTR [eax],eax
  40ac8a:	test   DWORD PTR [ebp+0x7c6e890d],edi
  40ac90:	add    DWORD PTR [eax],eax
  40ac92:	push   ebx
  40ac93:	aad    0x25
  40ac95:	cmp    BYTE PTR [eax],al
  40ac97:	ins    DWORD PTR es:[edi],dx
  40ac98:	test   DWORD PTR [esi+0x164c00f],edi
  40ac9e:	add    BYTE PTR ds:0x7b8bc58a,bh
  40aca4:	in     al,dx
  40aca5:	loope  0x40acd9
  40aca7:	sub    eax,0x2ac08401
  40acac:	mov    BYTE PTR [ebp+0x1],cl
  40acaf:	cmp    eax,0x944d8301
  40acb4:	daa    
  40acb5:	fild   WORD PTR [edx+0x7c120399]
  40acbb:	test   eax,0x1fbc5906
  40acc0:	sub    ch,ah
  40acc2:	fmulp  st(1),st
  40acc4:	out    0x2,eax
  40acc6:	mov    DWORD PTR [ecx+0x27],edx
  40acc9:	mov    DWORD PTR [edi+0x1134fa3],edi
  40accf:	xchg   esp,eax
  40acd0:	out    0x89,eax
  40acd2:	inc    esp
  40acd3:	mov    WORD PTR [edx+0x43],fs
  40acd6:	add    al,0xf
  40acd8:	ja     0x40ac5c
  40acda:	add    BYTE PTR [edi+eiz*8-0x1bffb323],dl
  40ace1:	xor    al,bh
  40ace3:	mov    WORD PTR [ecx+0x5f],ds
  40ace6:	xor    dl,BYTE PTR [eax-0x45]
  40ace9:	mov    bl,0x12
  40aceb:	push   ss
  40acec:	push   esp
  40aced:	out    0x81,eax
  40acef:	ret    
  40acf0:	cwde   
  40acf1:	icebp  
  40acf2:	add    al,0x6a
  40acf4:	mov    WORD PTR [eax+ecx*2-0x64],fs
  40acf8:	inc    esp
  40acf9:	jg     0x40aca1
  40acfb:	lods   al,BYTE PTR ds:[esi]
  40acfc:	xchg   ebp,eax
  40acfd:	jmp    0xbe3eae6a
  40ad02:	pop    DWORD PTR [esp+ecx*1-0x6]
  40ad06:	imul   eax,DWORD PTR [eax],0x268e9ee
  40ad0c:	pop    ds
  40ad0d:	sub    ebp,ebx
  40ad0f:	add    ecx,esi
  40ad11:	out    0x2,eax
  40ad13:	mov    edi,DWORD PTR [ebp*2+0x45100eba]
  40ad1a:	add    eax,DWORD PTR [eax]
  40ad1c:	xchg   esp,eax
  40ad1d:	mov    cl,0x7a
  40ad1f:	cmp    DWORD PTR [ecx+ebp*8-0x37d3ca23],edx
  40ad26:	inc    edx
  40ad27:	add    DWORD PTR [eax+eiz*2+0x117f848],edx
  40ad2e:	and    DWORD PTR [ecx+ebp*4],eax
  40ad31:	or     al,0x72
  40ad33:	sar    BYTE PTR [ebx],cl
  40ad35:	dec    edx
  40ad36:	adc    eax,0xa3881ade
  40ad3b:	(bad)  
  40ad3d:	pop    edi
  40ad3e:	jb     0x40ad8a
  40ad40:	test   BYTE PTR [edi+0x1800f3a7],al
  40ad46:	sar    DWORD PTR [ebx+0x7],0xc7
  40ad4a:	rol    BYTE PTR [ecx],cl
  40ad4c:	add    ah,BYTE PTR [ecx]
  40ad4e:	push   ecx
  40ad4f:	adc    eax,0xeb2107ec
  40ad54:	add    edx,DWORD PTR [ebx-0x1e78576d]
  40ad5a:	push   esp
  40ad5b:	or     eax,0x9b0f816a
  40ad60:	cmp    eax,ebx
  40ad62:	shl    DWORD PTR [ebx-0x4e],1
  40ad65:	dec    eax
  40ad66:	adc    esi,esp
  40ad68:	xchg   esp,eax
  40ad69:	sti    
  40ad6a:	push   fs
  40ad6c:	outs   dx,WORD PTR ds:[esi]
  40ad6e:	enter  0x2519,0x1f
  40ad72:	fld    TBYTE PTR [edi+0x47]
  40ad75:	pushf  
  40ad76:	lea    ebx,[ebx+0x18]
  40ad79:	fisttp DWORD PTR [ebp-0x16ec0d14]
  40ad80:	add    edi,esi
  40ad82:	add    DWORD PTR [edx-0x3a],esi
  40ad85:	adc    BYTE PTR [ebp-0x53],cl
  40ad88:	in     al,dx
  40ad89:	loope  0x40ad9a
  40ad8b:	jmp    0x1403c493
  40ad90:	fstp   st(0)
  40ad92:	fcom   st(3)
  40ad94:	loop   0x40ada4
  40ad96:	pop    ebp
  40ad97:	lea    ecx,[ecx-0x26bb179a]
  40ad9d:	push   edx
  40ad9e:	(bad)  
  40ada0:	ret    
  40ada1:	mov    ecx,DWORD PTR [edi]
  40ada3:	aaa    
  40ada4:	inc    esi
  40ada5:	jg     0x40ad69
  40ada7:	push   DWORD PTR [eax+eax*1-0x1ebb7884]
  40adae:	sbb    al,0x43
  40adb0:	add    al,0x72
  40adb2:	pop    ds
  40adb3:	pop    ebx
  40adb4:	add    ecx,ebp
  40adb6:	xchg   edi,eax
  40adb7:	xor    dl,BYTE PTR [edi+0x62]
  40adba:	push   edx
  40adbb:	jecxz  0x40ae08
  40adbd:	mov    edx,0xb48b0095
  40adc2:	xlat   BYTE PTR ds:[ebx]
  40adc3:	test   esi,eax
  40adc5:	fs iret 
  40adc7:	push   edi
  40adc8:	or     ebx,DWORD PTR [edi+0x1e04c0a]
  40adce:	in     eax,0xd
  40add0:	add    cl,ch
  40add2:	cld    
  40add3:	add    cl,BYTE PTR [ebp+0x7ee2f83c]
  40add9:	sbb    dl,BYTE PTR [eax+0x6ba98400]
  40addf:	and    cl,BYTE PTR [ebx+0x44c2a43c]
  40ade5:	mov    esi,0x3df58596
  40adea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40adeb:	(bad)  [ecx+eax*4-0x41]
  40adef:	out    dx,eax
  40adf0:	xor    al,0xe9
  40adf2:	xchg   edi,eax
  40adf3:	test   DWORD PTR [edi+0x4c8d9120],edi
  40adf9:	mov    DWORD PTR [edi-0x6816d070],ebp
  40adff:	jge    0x40ae65
  40ae01:	cmc    
  40ae02:	xchg   edi,eax
  40ae03:	fld    DWORD PTR [ebp+edx*4+0xc]
  40ae07:	cmp    eax,0xdb61bad8
  40ae0c:	inc    esp
  40ae0d:	add    DWORD PTR [eax],0x6ae8451c
  40ae13:	ror    ah,cl
  40ae15:	aaa    
  40ae16:	and    bl,bl
  40ae18:	aam    0xe
  40ae1a:	gs dec esp
  40ae1c:	(bad)  
  40ae1e:	dec    esi
  40ae1f:	jo     0x40ae76
  40ae21:	lock add ch,ah
  40ae24:	cmp    al,BYTE PTR [ebx]
  40ae26:	add    BYTE PTR ds:0xb6bc5389,ch
  40ae2c:	inc    edx
  40ae2d:	enter  0x108b,0xc2
  40ae31:	xchg   DWORD PTR [ebp-0x37],edx
  40ae34:	mov    dl,BYTE PTR [ebx-0x4c]
  40ae37:	fbld   TBYTE PTR [ebp-0x48]
  40ae3a:	int    0xed
  40ae3c:	std    
  40ae3d:	imul   edi,DWORD PTR [eax],0x4d890f4d
  40ae43:	or     eax,0x84f44388
  40ae48:	xor    al,ah
  40ae4a:	mov    DWORD PTR [eax-0x3b],edi
  40ae4d:	les    eax,FWORD PTR [ebp-0x5b]
  40ae50:	(bad)  
  40ae51:	out    0xf5,eax
  40ae53:	push   ecx
  40ae54:	add    al,BYTE PTR [eax]
  40ae56:	cmp    DWORD PTR [ecx],0xffffffd1
  40ae59:	jle    0x40aed8
  40ae5b:	ret    0xf03
  40ae5e:	test   BYTE PTR [esi-0x2d000249],al
  40ae64:	das    
  40ae65:	fsub   st(0),st
  40ae67:	xchg   edi,eax
  40ae68:	add    DWORD PTR [eax],eax
  40ae6a:	add    BYTE PTR [ebx-0x42fccd14],bl
  40ae70:	std    
  40ae71:	(bad)  
  40ae72:	jne    0x40ae74
  40ae74:	or     eax,0xad032aed
  40ae79:	std    
  40ae7a:	(bad)  
  40ae7b:	jne    0x40ae8a
  40ae7d:	in     eax,dx
  40ae7e:	and    al,BYTE PTR [ebx]
  40ae80:	jge    0x40ae7f
  40ae82:	cmp    BYTE PTR [ebp+0x29],dh
  40ae85:	add    eax,0x16a2c09f
  40ae8a:	pop    ebx
  40ae8b:	leave  
  40ae8c:	das    
  40ae8d:	or     al,0x0
  40ae8f:	push   ebp
  40ae90:	imul   al
  40ae92:	and    esp,0x18ea81f5
  40ae98:	push   ds
  40ae99:	adc    BYTE PTR [esi+0x57],dl
  40ae9c:	xchg   esp,eax
  40ae9d:	pop    esi
  40ae9e:	(bad)  
  40aea0:	test   eax,0x943ff5bb
  40aea5:	push   eax
  40aea6:	inc    eax
  40aea7:	and    al,0xa0
  40aea9:	dec    esi
  40aeaa:	inc    ebx
  40aeab:	add    al,0xff
  40aead:	ss add eax,0xc5e69400
  40aeb3:	dec    edi
  40aeb4:	sub    ebx,esp
  40aeb6:	out    0x11,al
  40aeb8:	aam    0xe7
  40aeba:	jmp    0x48b:0x2e76b94
  40aec1:	mov    dh,0xe7
  40aec3:	cmp    al,BYTE PTR [ecx]
  40aec5:	pop    esp
  40aec6:	xor    al,0x55
  40aec8:	imul   edx,DWORD PTR [esi-0x3216183e],0xffffffd9
  40aecf:	(bad)  
  40aed0:	sbb    BYTE PTR [edi],ah
  40aed2:	push   ecx
  40aed3:	daa    
  40aed4:	inc    ecx
  40aed5:	test   bl,0x56
  40aed8:	add    BYTE PTR [edi+ebp*4-0x47],dl
  40aedc:	cli    
  40aedd:	(bad)  [ecx-0x2fb64082]
  40aee3:	lea    eax,[esi-0x70]
  40aee6:	dec    esi
  40aee7:	or     DWORD PTR [ebx+0x6802e795],0xffffffd4
  40aeee:	or     DWORD PTR ds:0xefaa4400,ecx
  40aef4:	ja     0xd4c5b321
  40aefa:	xacquire lock inc BYTE PTR [ecx-0x6bc00a1d]
  40af02:	pusha  
  40af03:	aas    
  40af04:	and    al,0xa8
  40af06:	jno    0x40af54
  40af08:	das    
  40af09:	xchg   esp,eax
  40af0a:	jmp    0x55009e9c
  40af0f:	dec    edi
  40af10:	mov    bh,0xaf
  40af12:	dec    esp
  40af13:	or     al,BYTE PTR [ecx+ecx*1-0x6bfc17ff]
  40af1a:	mov    esp,DWORD PTR [esi]
  40af1c:	jmp    0x40af38
  40af1e:	adc    ecx,ebp
  40af20:	add    esp,DWORD PTR [ecx]
  40af22:	cmp    eax,0xbee42005
  40af27:	lods   al,BYTE PTR ds:[esi]
  40af28:	pop    ds
  40af29:	lahf   
  40af2a:	add    BYTE PTR [eax+0x67],dh
  40af2d:	jo     0x40af4b
  40af2f:	inc    ecx
  40af30:	out    0x3,al
  40af32:	add    ecx,ebp
  40af34:	push   ds
  40af35:	push   ecx
  40af36:	dec    ebp
  40af37:	sti    
  40af38:	xor    ebp,DWORD PTR [esp+ebp*2]
  40af3b:	jmp    0x40af40
  40af3d:	add    BYTE PTR [ebx+eax*4-0x347e06c],dl
  40af44:	fnsave [ebp+0x4b]
  40af47:	jge    0x40af71
  40af49:	dec    edi
  40af4a:	mov    WORD PTR [edi+0x1b41fa4],?
  40af50:	jmp    0x7f5a4358
  40af55:	call   FWORD PTR [edx-0x6bfb687a]
  40af5b:	add    BYTE PTR [eax+0x68],dh
  40af5e:	mov    al,0xf8
  40af60:	popa   
  40af61:	inc    ecx
  40af62:	cwde   
  40af63:	call   0xd5f30d
  40af68:	ins    DWORD PTR es:[edi],dx
  40af69:	les    edx,FWORD PTR [edx-0x6bfba484]
  40af6f:	add    BYTE PTR [edx-0x6],ah
  40af72:	xchg   esi,eax
  40af73:	xor    al,0x5
  40af75:	cld    
  40af76:	sbb    BYTE PTR [ecx+esi*8+0x33],al
  40af7a:	lods   al,BYTE PTR ds:[esi]
  40af7b:	inc    ebp
  40af7c:	aam    0x3
  40af7e:	xchg   esp,eax
  40af7f:	jl     0x40af29
  40af81:	dec    edi
  40af82:	sti    
  40af83:	mov    BYTE PTR [eax+eiz*1],ah
  40af86:	mov    ds:0xaa200480,al
  40af8b:	add    bh,dh
  40af8d:	cli    
  40af8e:	push   cs
  40af8f:	aas    
  40af90:	add    ch,ch
  40af92:	and    BYTE PTR [edi-0x74],dl
  40af95:	call   0x71a8b031
  40af9a:	imul   edx,edi,0xec3cb9fe
  40afa0:	psubd  mm0,QWORD PTR [eax]
  40afa3:	xlat   BYTE PTR ds:[ebx]
  40afa4:	add    BYTE PTR [ebp-0x74eb1bd7],al
  40afaa:	scas   al,BYTE PTR es:[edi]
  40afab:	inc    ebx
  40afac:	mov    al,BYTE PTR [edi+0x9769]
  40afb2:	(bad)  
  40afb3:	aam    0x1c
  40afb5:	and    bl,al
  40afb7:	xchg   esi,eax
  40afb8:	xor    ebp,eax
  40afba:	mov    esi,0x64000266
  40afbf:	push   eax
  40afc0:	pop    eax
  40afc1:	push   ss
  40afc2:	add    DWORD PTR [edx-0x7416fde9],ecx
  40afc8:	xchg   edi,eax
  40afc9:	jae    0x40afae
  40afcb:	fld    QWORD PTR [edx+0x24]
  40afce:	xlat   BYTE PTR ds:[ebx]
  40afcf:	pop    ss
  40afd0:	pop    ebx
  40afd1:	and    al,0xdf
  40afd3:	repnz push eax
  40afd5:	mov    bl,0x2
  40afd7:	xchg   ebx,eax
  40afd8:	call   0xd8b4d4
  40afdd:	mov    DWORD PTR [edx],ebp
  40afdf:	xchg   esp,eax
  40afe0:	mov    esi,0xffc50d43
  40afe5:	jg     0x40b034
  40afe7:	je     0x40afd7
  40afe9:	add    al,0x3c
  40afeb:	les    ecx,FWORD PTR [ecx-0x21328d3c]
  40aff1:	test   ebx,edi
  40aff3:	xchg   edi,eax
  40aff4:	add    BYTE PTR [ebp+0x6a],cl
  40aff7:	xor    ebx,DWORD PTR [eax+ebx*1]
  40affa:	loope  0x40afd1
  40affc:	inc    edx
  40affd:	and    al,0xf6
  40afff:	xchg   esi,eax
  40b000:	add    DWORD PTR [ebx-0x33],0xffffff8f
  40b004:	push   cs
  40b005:	inc    ebp
  40b006:	rol    BYTE PTR [eax],cl
  40b008:	std    
  40b009:	cld    
  40b00a:	push   cs
  40b00b:	add    BYTE PTR [ecx],cl
  40b00d:	or     eax,0x84faffff
  40b012:	pop    ebp
  40b013:	add    al,0x97
  40b015:	(bad)  
  40b016:	push   ebp
  40b017:	call   0x41a950
  40b01c:	icebp  
  40b01d:	shl    DWORD PTR [edx+0x5],0xb3
  40b021:	adc    eax,0xed3c1724
  40b026:	fidivr DWORD PTR [eax]
  40b028:	stc    
  40b029:	cmc    
  40b02a:	push   ss
  40b02b:	je     0x40b05f
  40b02d:	test   esp,ecx
  40b02f:	call   0x40d7f9
  40b034:	mov    dh,0x3f
  40b036:	add    al,0x83
  40b038:	gs jmp 0x40b0b7
  40b03b:	cmp    ebp,DWORD PTR [esi-0x1282e847]
  40b041:	mov    eax,0x420e0c13
  40b046:	add    BYTE PTR [ebx],ch
  40b048:	xor    esi,esi
  40b04a:	sbb    edi,DWORD PTR ds:0xa2c46d
  40b050:	sub    DWORD PTR [eax],0x56
  40b053:	push   edi
  40b054:	pop    ss
  40b055:	std    
  40b056:	push   edi
  40b057:	call   0x3e6471
  40b05c:	jno    0x40b01a
  40b05e:	jae    0x40b077
  40b060:	sahf   
  40b061:	and    eax,0x19d5c033
  40b066:	cli    
  40b067:	(bad)  
  40b068:	fiadd  DWORD PTR [eax-0x38ff8a42]
  40b06e:	adc    dl,BYTE PTR [edi+0x6a]
  40b071:	scas   eax,DWORD PTR es:[edi]
  40b072:	sbb    eax,ebp
  40b074:	dec    ebp
  40b075:	out    0xad,eax
  40b077:	std    
  40b078:	inc    eax
  40b07a:	std    
  40b07b:	adc    al,BYTE PTR [eax-0x53]
  40b07e:	test   BYTE PTR [edx+0x24],al
  40b081:	cdq    
  40b082:	scas   al,BYTE PTR es:[edi]
  40b083:	xor    al,0xe8
  40b085:	xchg   esp,eax
  40b086:	lds    eax,FWORD PTR [ebx]
  40b088:	add    BYTE PTR [ebp+ecx*1-0x186ae014],dl
  40b08f:	add    cl,BYTE PTR [ebx-0x7000242d]
  40b095:	xchg   ebp,eax
  40b096:	out    0x2,eax
  40b098:	push   eax
  40b099:	imul   ebp,DWORD PTR [edx+edx*8-0x76182bef],0x46
  40b0a1:	nop
  40b0a2:	push   edx
  40b0a3:	test   BYTE PTR [ebx+0x6802e795],cl
  40b0a9:	aam    0xae
  40b0ab:	stc    
  40b0ac:	call   ebx
  40b0ae:	ds icebp 
  40b0b0:	xcrypt-cfb (bad)
  40b0b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b0b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b0b3:	add    al,BYTE PTR [ebp-0xa8021ac]
  40b0b9:	sub    DWORD PTR [esi],esp
  40b0bb:	xlat   BYTE PTR ds:[ebx]
  40b0bc:	jmp    0x2a97:0x43f5290
  40b0c3:	xor    al,0xff
  40b0c5:	test   eax,0x943ff1f7
  40b0ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b0cb:	xor    al,0x5d
  40b0cd:	pop    edi
  40b0ce:	push   edx
  40b0cf:	loope  0x40b12d
  40b0d1:	add    bh,dl
  40b0d3:	int3   
  40b0d4:	ds and al,0x98
  40b0d7:	call   0x1e263c08
  40b0dc:	(bad)  
  40b0dd:	outs   dx,DWORD PTR ds:[esi]
  40b0de:	(bad)  
  40b0e0:	add    al,0x74
  40b0e2:	xchg   edx,eax
  40b0e3:	or     eax,0xe794c7ec
  40b0e8:	add    cl,BYTE PTR [ebx+0x3c224d2]
  40b0ee:	xchg   esp,eax
  40b0ef:	fs int3 
  40b0f1:	je     0x40b07b
  40b0f3:	xchg   esi,eax
  40b0f4:	or     al,0xe8
  40b0f6:	jmp    0x40b0de
  40b0f8:	add    al,BYTE PTR [eax]
  40b0fa:	pop    ss
  40b0fb:	std    
  40b0fc:	add    ebp,ebx
  40b0fe:	data16 add BYTE PTR [edx-0x3],dh
  40b102:	push   ss
  40b103:	mov    edi,0xc11934e4
  40b108:	sbb    esi,esp
  40b10a:	std    
  40b10b:	or     BYTE PTR [esi+0x29a87410],cl
  40b111:	add    al,0x7b
  40b113:	out    dx,al
  40b114:	in     al,0xf2
  40b116:	mov    bl,0x0
  40b118:	add    BYTE PTR [esi],0xc4
  40b11b:	data16 loope 0x40b0f4
  40b11e:	test   al,0xe0
  40b120:	xchg   ecx,eax
  40b121:	inc    edx
  40b122:	xchg   esp,eax
  40b123:	shl    ebx,cl
  40b125:	or     esp,DWORD PTR [edi+0xb80e940]
  40b12b:	dec    esi
  40b12c:	jmp    0xebfd:0x6fc05411
  40b133:	add    DWORD PTR [edx],ebp
  40b135:	add    BYTE PTR [eax],0xaf
  40b138:	sbb    al,0xed
  40b13a:	add    esp,DWORD PTR [ecx+0x2c0d2e04]
  40b140:	fs jmp 0xc6c04549
  40b146:	add    edi,edi
  40b148:	push   cs
  40b149:	(bad)  
  40b14a:	std    
  40b14b:	or     cl,BYTE PTR [ebp-0x3b]
  40b14e:	call   FWORD PTR [eax]
  40b150:	sar    DWORD PTR [ebx+0x6],0x64
  40b154:	shl    DWORD PTR [ebx-0x16bfc11d],cl
  40b15a:	(bad)  
  40b15b:	cmp    ah,0xd9
  40b15e:	inc    ebx
  40b15f:	xchg   esp,eax
  40b160:	out    0xf5,eax
  40b162:	xor    ebp,DWORD PTR [esi+0x0]
  40b165:	fimul  WORD PTR [edi]
  40b167:	mov    ah,0xa7
  40b169:	sub    DWORD PTR [ebx+ecx*8],eax
  40b16c:	in     eax,dx
  40b16d:	loopne 0x40b15f
  40b16f:	add    DWORD PTR [eax],0x6c
  40b172:	les    eax,FWORD PTR [eax-0x4]
  40b175:	cli    
  40b176:	ret    
  40b177:	mov    esi,0xaa5ffffc
  40b17c:	mov    ds:0x94ab00,eax
  40b181:	sub    DWORD PTR [ecx-0xe95cf6c],0x68
  40b188:	or     al,0xe0
  40b18a:	inc    edx
  40b18b:	aad    0x0
  40b18d:	push   esp
  40b18f:	sub    esi,0x3f
  40b192:	jmp    0xc5bc2feb
  40b197:	jae    0x40b16c
  40b199:	jae    0x40b188
  40b19b:	add    BYTE PTR [eax+eax*8+0x4f48dbea],al
  40b1a2:	and    al,0xed
  40b1a4:	in     eax,dx
  40b1a5:	add    bh,bh
  40b1a7:	adc    al,0x38
  40b1a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b1aa:	inc    edx
  40b1ab:	jmp    0xfa449e10
  40b1b0:	xlat   BYTE PTR ds:[ebx]
  40b1b1:	add    dl,al
  40b1b3:	in     eax,dx
  40b1b4:	xchg   edi,eax
  40b1b5:	jg     0x40b232
  40b1b7:	add    eax,0xdb740094
  40b1bc:	inc    eax
  40b1bd:	dec    edi
  40b1be:	and    al,0xe5
  40b1c0:	lods   eax,DWORD PTR ds:[esi]
  40b1c1:	add    bh,bh
  40b1c3:	fdiv   QWORD PTR [edi]
  40b1c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b1c6:	inc    edx
  40b1c7:	jmp    0xfa409db4
  40b1cc:	push   edi
  40b1cd:	add    dl,al
  40b1cf:	in     eax,0x97
  40b1d1:	sub    cl,BYTE PTR [ebx+0x73d27af9]
  40b1d7:	(bad)  
  40b1d8:	jb     0x40b1a7
  40b1da:	jae    0x40b1b6
  40b1dc:	push   ecx
  40b1dd:	shl    DWORD PTR [ebx],cl
  40b1df:	ss lock ret 0xe6fe
  40b1e4:	sar    BYTE PTR [ebx-0xb],0x54
  40b1e8:	in     eax,0x29
  40b1ea:	call   0xff12929e
  40b1ef:	das    
  40b1f0:	aad    0x2c
  40b1f2:	push   edi
  40b1f3:	add    BYTE PTR [ecx+ecx*4-0x7836db8e],bl
  40b1fa:	jp     0x40b220
  40b1fc:	int    0x87
  40b1fe:	dec    edx
  40b1ff:	and    al,0x0
  40b201:	lds    ebp,FWORD PTR [edi+0xa5259a2]
  40b207:	ret    0x7d0c
  40b20a:	push   ebx
  40b20b:	enter  0x8974,0x24
  40b20f:	mov    esi,DWORD PTR [ecx+ebx*2+0x6]
  40b213:	lea    eax,[edi+eax*4]
  40b216:	sub    edx,esi
  40b218:	dec    eax
  40b219:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b21a:	xchg   BYTE PTR [edx],dl
  40b21c:	push   es
  40b21d:	cmc    
  40b21e:	int    0x73
  40b220:	not    DWORD PTR [ebx+0x1b0002be]
  40b226:	lods   eax,DWORD PTR ds:[esi]
  40b227:	jb     0x40b24d
  40b229:	inc    ecx
  40b22a:	out    0x66,al
  40b22c:	jmp    edx
  40b22e:	lods   al,BYTE PTR ds:[esi]
  40b22f:	mov    eax,esi
  40b231:	mov    eax,0xd21272c3
  40b236:	inc    ecx
  40b237:	and    al,0xc
  40b239:	jb     0x40b27c
  40b23b:	and    al,0xc
  40b23d:	or     ebp,DWORD PTR [ebp+0x3e4b3013]
  40b243:	add    BYTE PTR [ebx-0x39750697],al
  40b249:	push   ebx
  40b24a:	rol    BYTE PTR [esi],0x0
  40b24d:	jbe    0x40b24b
  40b24f:	push   ebp
  40b250:	mov    ebx,DWORD PTR [ebp+0x71e8cb00]
  40b256:	stos   DWORD PTR es:[edi],eax
  40b257:	std    
  40b258:	(bad)  
  40b259:	jns    0x40b218
  40b25b:	jb     0x40b276
  40b25d:	jbe    0x40b262
  40b25f:	add    esi,DWORD PTR [edi]
  40b261:	(bad)  
  40b262:	lods   al,BYTE PTR ds:[esi]
  40b263:	jb     0x40b289
  40b265:	add    cl,ah
  40b267:	pop    ss
  40b268:	call   DWORD PTR ds:0x3ed6ad
  40b26e:	xchg   esp,eax
  40b26f:	enterw 0x950b,0xe2
  40b274:	jge    0x40b23b
  40b276:	scas   eax,DWORD PTR es:[edi]
  40b277:	in     eax,0x15
  40b279:	rcl    BYTE PTR [edx-0x5b],0x7
  40b27d:	add    BYTE PTR [edx-0xe],al
  40b280:	push   ss
  40b281:	call   FWORD PTR [ebp+0x23]
  40b284:	sub    BYTE PTR [edx+eiz*1],cl
  40b287:	aam    0x7d
  40b289:	lock mov edi,0x920b7d77
  40b28f:	pop    ebp
  40b290:	hlt    
  40b291:	cmp    DWORD PTR [esi-0x14],ecx
  40b294:	add    al,BYTE PTR [edi-0x2c]
  40b297:	mov    esi,0xd5a0244e
  40b29c:	loope  0x40b2d0
  40b29e:	push   esp
  40b29f:	jmp    0xb601:0xe798c231
  40b2a6:	inc    esi
  40b2a7:	retf   0xc098
  40b2aa:	jg     0x40b2d1
  40b2ac:	fcomip st,st(0)
  40b2ae:	dec    ebx
  40b2af:	mov    bl,0x26
  40b2b1:	or     BYTE PTR [esi+0x7073d1e7],ch
  40b2b7:	retf   
  40b2b8:	rcl    DWORD PTR [eax+ebp*2],1
  40b2bb:	test   eax,0x23170042
  40b2c0:	add    dl,al
  40b2c2:	mov    edi,fs
  40b2c4:	cmp    BYTE PTR [edi+0x5d],dl
  40b2c7:	mov    ebx,0x86000c26
  40b2cc:	(bad)  
  40b2cd:	sbb    ebx,DWORD PTR [eax+esi*4-0x25]
  40b2d1:	adc    eax,0x36f70fff
  40b2d6:	inc    DWORD PTR [eax-0xcaa093d]
  40b2dc:	stos   DWORD PTR es:[edi],eax
  40b2dd:	push   cs
  40b2de:	push   ss
  40b2df:	push   esp
  40b2e0:	out    0x85,eax
  40b2e2:	ret    
  40b2e3:	nop
  40b2e4:	pop    esp
  40b2e5:	les    esi,FWORD PTR [ebx-0x75]
  40b2e8:	add    BYTE PTR [esi],ch
  40b2ea:	dec    edx
  40b2eb:	(bad)  
  40b2ec:	push   esp
  40b2ed:	add    eax,0x19db4200
  40b2f2:	les    esp,FWORD PTR [edx+0x32]
  40b2f5:	stos   DWORD PTR es:[edi],eax
  40b2f6:	sti    
  40b2f7:	mov    ebx,0xaadeae85
  40b2fc:	push   ss
  40b2fd:	and    eax,0xd24d9028
  40b302:	push   cs
  40b303:	int3   
  40b304:	dec    eax
  40b305:	(bad)  
  40b306:	push   edi
  40b307:	test   DWORD PTR ds:0xcfe533a8,esp
  40b30d:	adc    al,0x28
  40b30f:	cwde   
  40b310:	iret   
  40b311:	sti    
  40b312:	adc    ebp,DWORD PTR [edx+0x5786e940]
  40b318:	std    
  40b319:	cmp    BYTE PTR [edi+edi*2],al
  40b31c:	add    edi,DWORD PTR [ebx-0x16faaa3d]
  40b322:	jle    0x40b2b4
  40b324:	add    al,0x3d
  40b326:	inc    esi
  40b327:	xchg   esp,eax
  40b328:	ss sbb al,ah
  40b32b:	jmp    0x7b74:0x572f85
  40b332:	adc    ebx,esp
  40b334:	out    dx,al
  40b335:	inc    ebx
  40b336:	jmp    0xfabd15b9
  40b33b:	push   cs
  40b33c:	test   al,0x24
  40b33e:	in     eax,dx
  40b33f:	pop    eax
  40b340:	xchg   ecx,eax
  40b341:	xor    DWORD PTR [esi],0xffffffd2
  40b344:	test   al,0xf2
  40b346:	test   al,0x84
  40b348:	push   ebp
  40b349:	stc    
  40b34a:	lock add edx,DWORD PTR [ebx+ecx*1+0x13fc5528]
  40b352:	sub    DWORD PTR [edx],esi
  40b354:	(bad)
  40b359:	shl    al,0xfb
  40b35c:	repz iret 
  40b35e:	jmp    0x12b22d
  40b363:	popa   
  40b364:	xchg   esp,eax
  40b365:	add    al,0xac
  40b367:	stos   BYTE PTR es:[edi],al
  40b368:	xchg   edi,eax
  40b369:	ss push edi
  40b36b:	sbb    ah,ch
  40b36d:	adc    al,al
  40b36f:	andps  xmm4,XMMWORD PTR fs:[esi]
  40b373:	(bad)  
  40b374:	retf   
  40b375:	out    0xaa,eax
  40b377:	sub    dl,BYTE PTR [eax-0x79950e85]
  40b37d:	iret   
  40b37e:	jae    0x40b36c
  40b380:	push   edi
  40b381:	add    ebp,0xfecf9fe1
  40b387:	repnz (bad) 
  40b389:	push   ecx
  40b38a:	lock xchg edx,eax
  40b38c:	xchg   esp,eax
  40b38d:	pop    ecx
  40b38e:	shl    cl,0x8f
  40b391:	iret   
  40b392:	(bad)  
  40b393:	jmp    0xb514:0xf77a5900
  40b39a:	inc    ecx
  40b39b:	imul   esi,DWORD PTR [eax-0x16fff890],0x2aaae705
  40b3a5:	cwde   
  40b3a6:	fcom   DWORD PTR [eax+0x6c]
  40b3a9:	inc    ebp
  40b3aa:	into   
  40b3ab:	sub    DWORD PTR [ecx],0xffffffec
  40b3ae:	and    BYTE PTR [ebx+0x429c9c1c],cl
  40b3b4:	jmp    0xe1488397
  40b3b9:	xchg   edi,eax
  40b3ba:	add    bh,bh
  40b3bc:	in     al,dx
  40b3bd:	fwait
  40b3be:	pushf  
  40b3bf:	inc    edx
  40b3c0:	jmp    0x8328c155
  40b3c5:	fld    DWORD PTR [eax]
  40b3c7:	je     0x40b3b0
  40b3c9:	cwde   
  40b3ca:	inc    ebx
  40b3cb:	and    al,0xf5
  40b3cd:	mov    es,WORD PTR [esi]
  40b3cf:	mov    esp,DWORD PTR [esi]
  40b3d1:	lds    ebp,FWORD PTR [esi]
  40b3d3:	ret    0x97ed
  40b3d6:	mov    eax,ds:0x513d03
  40b3db:	push   edi
  40b3dc:	add    BYTE PTR [esi-0x44],ah
  40b3df:	add    eax,0x61
  40b3e2:	inc    edx
  40b3e3:	mov    edx,DWORD PTR ds:0x416d95
  40b3e9:	jbe    0x40b377
  40b3eb:	addr16 leave 
  40b3ed:	(bad)
  40b3f0:	(bad)  
  40b3f1:	cmp    BYTE PTR [edi+0x10],cl
  40b3f4:	clc    
  40b3f5:	loop   0x40b3a6
  40b3f7:	std    
  40b3f8:	add    DWORD PTR [eax],0xffffffa4
  40b3fb:	mov    cl,0x73
  40b3fd:	or     DWORD PTR [edx+ebp*4],edi
  40b400:	push   es
  40b401:	or     BYTE PTR [ebp-0x208ab0fe],bh
  40b407:	sti    
  40b408:	div    DWORD PTR [edi+eax*8+0x4b]
  40b40c:	into   
  40b40d:	imul   eax,DWORD PTR [edx+ecx*8+0x6],0xbe087d00
  40b415:	call   0xe840f8f0
  40b41a:	or     eax,0xe4fffdbe
  40b41f:	inc    BYTE PTR [ebx]
  40b421:	lods   al,BYTE PTR ds:[esi]
  40b422:	mov    esi,0x2e5f5e04
  40b427:	pop    ss
  40b428:	mov    ebp,esp
  40b42a:	jle    0x40b4a7
  40b42c:	jmp    0x40ff:0x5301feab
  40b433:	scas   al,BYTE PTR es:[edi]
  40b434:	adc    BYTE PTR [eax+0x2d],al
  40b437:	test   DWORD PTR [ebx+0x8],edi
  40b43a:	retf   0x8400
  40b43d:	xlat   BYTE PTR ds:[ebx]
  40b43e:	cmp    eax,0xe8830002
  40b443:	int    0xfe
  40b445:	push   cs
  40b446:	mov    cl,0x8e
  40b448:	(bad)  
  40b449:	jmp    FWORD PTR ds:0xfd107b85
  40b44f:	add    BYTE PTR [ebx+eax*8-0xfffe03],al
  40b456:	xchg   esp,eax
  40b457:	ins    BYTE PTR es:[edi],dx
  40b458:	cli    
  40b459:	out    0xce,eax
  40b45b:	std    
  40b45c:	iret   
  40b45d:	inc    BYTE PTR [eax]
  40b45f:	sbb    DWORD PTR [eax],ebx
  40b461:	push   esi
  40b462:	adc    bl,ch
  40b464:	push   esp
  40b465:	sti    
  40b466:	out    0xe1,eax
  40b468:	aad    0xce
  40b46a:	(bad)  
  40b46b:	adc    DWORD PTR [eax],ebx
  40b46d:	add    BYTE PTR [ebx+edi*8-0x3dfffd29],al
  40b474:	and    al,0xf8
  40b476:	add    BYTE PTR [edx+0xe],ch
  40b479:	pop    eax
  40b47a:	push   cs
  40b47b:	or     DWORD PTR [eax+0x5],esi
  40b47e:	add    al,0x94
  40b480:	xlat   BYTE PTR ds:[ebx]
  40b481:	jg     0x40b432
  40b483:	xchg   edx,eax
  40b484:	iret   
  40b485:	add    al,BYTE PTR [eax]
  40b487:	scas   eax,DWORD PTR es:[edi]
  40b488:	loopne 0x40b509
  40b48a:	ja     0x40b41c
  40b48c:	sub    al,0x94
  40b48e:	add    ebx,DWORD PTR [eax+0x98302d7]
  40b494:	enter  0x8b02,0xd9
  40b498:	jecxz  0x40b515
  40b49a:	inc    esp
  40b49b:	mov    ebp,?
  40b49d:	push   esp
  40b49e:	mov    edx,0x2d994
  40b4a3:	lods   eax,DWORD PTR ds:[esi]
  40b4a4:	hlt    
  40b4a5:	repz jb 0x40b440
  40b4a8:	out    0x95,al
  40b4aa:	push   esp
  40b4ab:	test   BYTE PTR [esi+0x6ea30595],ch
  40b4b1:	test   eax,0x3a05702
  40b4b6:	add    al,0x94
  40b4b8:	xlat   BYTE PTR ds:[ebx]
  40b4b9:	or     ecx,eax
  40b4bb:	ret    0x19c9
  40b4be:	sar    DWORD PTR [edx+0xf05f0],0xe3
  40b4c5:	fdiv   QWORD PTR [ebx]
  40b4c7:	add    ebx,DWORD PTR [ebx+0x67]
  40b4ca:	xor    eax,0xcf1c6be8
  40b4cf:	(bad)  
  40b4d0:	mov    ds:0x67065e00,eax
  40b4d5:	int    0x93
  40b4d7:	sti    
  40b4d8:	xchg   esi,eax
  40b4d9:	lds    edi,FWORD PTR [eax+0xdcb9bdb]
  40b4df:	iret   
  40b4e0:	jns    0x40b4e1
  40b4e2:	(bad)  
  40b4e4:	fwait
  40b4e5:	data16 rol BYTE PTR ds:0x34e69593,1
  40b4ec:	xchg   edi,eax
  40b4ed:	lds    ebx,FWORD PTR [eax-0x1c0743ca]
  40b4f3:	into   
  40b4f4:	retf   0x95fc
  40b4f7:	add    eax,0xdc3e002e
  40b4fc:	push   0x1903e8a2
  40b501:	sar    BYTE PTR [ebx],0xe5
  40b504:	xchg   esp,eax
  40b505:	sub    esi,ecx
  40b507:	sbb    al,0x41
  40b509:	lock cmp edi,DWORD PTR [eax-0x22]
  40b50d:	fild   DWORD PTR [ecx-0x59d06bbe]
  40b513:	clc    
  40b514:	jnp    0x40b505
  40b516:	sub    BYTE PTR [ebx+eiz*8],al
  40b519:	sub    al,BYTE PTR [edx-0xc3418fa]
  40b51f:	rol    DWORD PTR [ebp-0x36d516c0],cl
  40b525:	mov    esi,0xcb0003d8
  40b52a:	jge    0x40b522
  40b52c:	pop    es
  40b52d:	outs   dx,DWORD PTR ds:[esi]
  40b52e:	jmp    0x55ad239
  40b533:	in     eax,dx
  40b534:	add    edx,DWORD PTR [ebx+edi*8+0x4977d95]
  40b53b:	jmp    0x26409a43
  40b540:	xor    ecx,ebx
  40b542:	fadd   DWORD PTR [edx-0x1233d531]
  40b548:	xchg   esi,eax
  40b549:	sbb    DWORD PTR ds:0x97ed00,eax
  40b54f:	push   0xffffffe8
  40b551:	retf   0xd7d8
  40b554:	dec    eax
  40b555:	xchg   edi,eax
  40b556:	add    BYTE PTR [ebp+0x5eb55c29],al
  40b55c:	sub    al,dl
  40b55e:	mov    ebp,ebx
  40b560:	inc    edx
  40b561:	push   esi
  40b562:	add    BYTE PTR [edi+0x6],dl
  40b565:	in     al,dx
  40b566:	xlat   BYTE PTR ds:[ebx]
  40b567:	adc    DWORD PTR [ecx-0x32848069],ebp
  40b56d:	(bad)  
  40b56f:	jae    0x40b548
  40b571:	loop   0x40b5c2
  40b573:	and    al,0xf1
  40b575:	out    dx,eax
  40b576:	mov    ?,esp
  40b578:	(bad)  
  40b57a:	test   BYTE PTR [edi-0x74ca40a3],bh
  40b580:	fnop   
  40b582:	lahf   
  40b583:	inc    dh
  40b585:	fldcw  WORD PTR ds:0xdbabbe57
  40b58b:	adc    DWORD PTR [ecx],ebp
  40b58d:	add    BYTE PTR [eax-0x681a3dd5],dl
  40b593:	fsub   st,st(6)
  40b595:	repz xchg edi,eax
  40b597:	add    BYTE PTR [ecx+ebp*4+0x3e563fdc],al
  40b59e:	or     edi,edx
  40b5a0:	stos   BYTE PTR es:[edi],al
  40b5a1:	sub    bl,BYTE PTR [eax+0x4bdcff33]
  40b5a7:	icebp  
  40b5a8:	aas    
  40b5a9:	jmp    0xe56504fe
  40b5ae:	aas    
  40b5af:	inc    esi
  40b5b0:	std    
  40b5b1:	outs   dx,BYTE PTR ds:[esi]
  40b5b2:	popa   
  40b5b3:	jbe    0x40b5a4
  40b5b5:	ins    BYTE PTR es:[edi],dx
  40b5b6:	bound  ecx,QWORD PTR [edi+0x1d]
  40b5b9:	push   ecx
  40b5ba:	jecxz  0x40b587
  40b5bc:	(bad)  
  40b5bd:	push   esi
  40b5be:	adc    eax,0x581afefd
  40b5c3:	mov    DWORD PTR gs:[eax],eax
  40b5c6:	mov    ebx,0x2d0003f8
  40b5cb:	mov    DWORD PTR gs:[esi-0x138d5],eax
  40b5d2:	push   ebp
  40b5d3:	(bad)  
  40b5d4:	cld    
  40b5d5:	push   DWORD PTR [edx-0x62ea00eb]
  40b5db:	into   
  40b5dc:	add    BYTE PTR ds:[edx+0x1d],al
  40b5e0:	jmp    DWORD PTR ds:0x3ed501
  40b5e6:	or     BYTE PTR [eax-0x15],cl
  40b5e9:	push   esi
  40b5ea:	loop   0x40b61d
  40b5ec:	adc    al,0xff
  40b5ee:	pop    eax
  40b5ef:	iret   
  40b5f0:	std    
  40b5f1:	jne    0x40b5f3
  40b5f3:	icebp  
  40b5f4:	mov    ebx,0xd1b20873
  40b5f9:	push   ds
  40b5fa:	push   ss
  40b5fb:	ins    DWORD PTR es:[edi],dx
  40b5fc:	add    al,0x8b
  40b5fe:	lock sub BYTE PTR [ebp+0x35d5177c],dh
  40b605:	or     al,BYTE PTR [eax]
  40b607:	mov    ebp,0xb374be82
  40b60c:	sub    BYTE PTR [ecx],al
  40b60e:	push   esi
  40b60f:	loop   0x40b642
  40b611:	or     al,0xff
  40b613:	enter  0xe6cc,0x16
  40b617:	xor    edi,DWORD PTR [ebp+0x1c3b8bfd]
  40b61d:	pop    ebp
  40b61e:	ret    0xfe7d
  40b621:	push   esp
  40b622:	mov    esi,ecx
  40b624:	adc    ecx,DWORD PTR [ebx-0xeab68b]
  40b62a:	jne    0x40b679
  40b62c:	dec    ecx
  40b62d:	jl     0x40b63b
  40b62f:	loop   0x40b663
  40b631:	sbb    al,0xff
  40b633:	dec    eax
  40b634:	(bad)  
  40b635:	push   esp
  40b636:	jmp    FWORD PTR [eax-0x32]
  40b639:	push   ebp
  40b63a:	jmp    FWORD PTR [eax-0x3a]
  40b63d:	std    
  40b63e:	adc    eax,0x3ff4c794
  40b643:	xchg   esp,eax
  40b644:	pusha  
  40b645:	inc    esi
  40b646:	sbb    al,0x11
  40b648:	sbb    BYTE PTR [esi+0x40],dl
  40b64b:	sbb    DWORD PTR [edx],edx
  40b64d:	push   edi
  40b64e:	cmp    al,0x2c
  40b650:	add    bh,dl
  40b652:	call   DWORD PTR [ebx]
  40b654:	fs ret 
  40b656:	jae    0x40b658
  40b658:	(bad)  
  40b659:	dec    esi
  40b65a:	adc    eax,0x863ec753
  40b65f:	cmc    
  40b660:	add    al,0x7
  40b663:	pop    ebp
  40b664:	test   BYTE PTR [esi+0x26],ah
  40b667:	mov    edx,DWORD PTR [eax-0x4bbb85de]
  40b66d:	mov    esi,0x609771c4
  40b672:	push   esi
  40b673:	and    BYTE PTR [esi],bh
  40b675:	fmul   st,st(3)
  40b677:	je     0x40b6ed
  40b679:	loop   0x40b6ca
  40b67b:	fistp  WORD PTR [eax-0x53f7af56]
  40b681:	test   al,cl
  40b683:	(bad)  
  40b684:	mov    bl,0x16
  40b686:	pop    ds
  40b687:	jne    0x40b6fd
  40b689:	or     al,0xb3
  40b68b:	pop    edx
  40b68c:	(bad)  
  40b68e:	call   0xc634f0f1
  40b693:	sbb    edx,DWORD PTR [esp+esi*8-0x5d1d1482]
  40b69a:	push   eax
  40b69b:	adc    al,0x83
  40b69d:	hlt    
  40b69e:	repz inc BYTE PTR [ecx]
  40b6a1:	in     al,0xc9
  40b6a3:	je     0x40b641
  40b6a5:	jp     0x40b697
  40b6a7:	pop    ss
  40b6a8:	adc    BYTE PTR [edi],0x4
  40b6ab:	mov    esp,DWORD PTR [esp+eiz*2-0x2e]
  40b6af:	ja     0x40b662
  40b6b1:	jg     0x40b66b
  40b6b3:	or     BYTE PTR [edi+edx*8+0xc0bf7e],dl
  40b6ba:	add    eax,0x53490081
  40b6bf:	repz retf 0xf8c0
  40b6c3:	inc    eax
  40b6c4:	push   0xdf4dc931
  40b6c9:	cdq    
  40b6ca:	push   esi
  40b6cb:	jmp    0xed93da01
  40b6d0:	retf   0xf8a0
  40b6d3:	inc    eax
  40b6d4:	sub    BYTE PTR [ecx],dl
  40b6d6:	leave  
  40b6d7:	sub    eax,0xc429d17f
  40b6dc:	lds    edx,FWORD PTR [ebx-0x10814c00]
  40b6e2:	sub    al,0xbf
  40b6e4:	jle    0x40b74e
  40b6e6:	hlt    
  40b6e7:	mov    ch,0xca
  40b6e9:	pusha  
  40b6ea:	and    BYTE PTR [edx+0x49],dh
  40b6ed:	nop
  40b6ee:	leave  
  40b6ef:	jae    0x40b6d8
  40b6f1:	ficom  DWORD PTR [edx-0x2f]
  40b6f4:	xor    ebx,edx
  40b6f6:	push   edx
  40b6f7:	fnstenv [edx]
  40b6f9:	retf   
  40b6fa:	push   edx
  40b6fb:	icebp  
  40b6fc:	retf   0xfca8
  40b6ff:	test   BYTE PTR [ebx-0x6c],0x77
  40b703:	sub    ebp,eax
  40b705:	sbb    al,al
  40b707:	push   ebx
  40b708:	inc    esp
  40b709:	adc    edx,edx
  40b70b:	cmp    al,0x2b
  40b70d:	lods   al,BYTE PTR ds:[esi]
  40b70e:	dec    esp
  40b70f:	lock add edx,DWORD PTR [esp+eax*4+0x7bea4fa8]
  40b717:	not    BYTE PTR [esi]
  40b719:	outs   dx,DWORD PTR ds:[esi]
  40b71a:	jle    0x40b6ba
  40b71c:	dec    edi
  40b71d:	ror    BYTE PTR [ebx],cl
  40b71f:	cmp    al,0xf4
  40b721:	add    BYTE PTR [esi],al
  40b723:	cmp    ah,BYTE PTR [edx-0x1]
  40b726:	push   edx
  40b727:	jp     0x40b74c
  40b729:	and    al,0xaf
  40b72b:	mov    esi,0x4e0d06fa
  40b730:	leave  
  40b731:	pop    ebp
  40b732:	xchg   esp,eax
  40b733:	(bad)  
  40b734:	(bad)  
  40b735:	sti    
  40b736:	ja     0x40b6ff
  40b738:	jae    0x40b6c8
  40b73a:	dec    ebx
  40b73b:	(bad)  
  40b73c:	je     0x40b72f
  40b73e:	pop    edi
  40b73f:	sar    ebx,cl
  40b741:	pop    esi
  40b742:	dec    esi
  40b743:	inc    ebx
  40b744:	sub    ebx,esp
  40b746:	ja     0x40b795
  40b748:	xlat   BYTE PTR ds:[ebx]
  40b749:	inc    edx
  40b74a:	jb     0x40b6cf
  40b74c:	test   DWORD PTR [esi-0x3c],0x2bd4fee6
  40b753:	out    dx,al
  40b754:	aas    
  40b755:	jmp    0xe96804f6
  40b75a:	xchg   edi,eax
  40b75b:	dec    ebp
  40b75c:	adc    DWORD PTR [ecx],edx
  40b75e:	mov    ah,0xf9
  40b760:	(bad)  
  40b761:	call   0xe1b43ee1
  40b766:	fimul  WORD PTR [eax+ecx*1+0x1]
  40b76a:	ffreep st(4)
  40b76c:	inc    BYTE PTR [esi]
  40b76e:	bound  edi,QWORD PTR [esp+ebx*1]
  40b771:	sahf   
  40b772:	lods   eax,DWORD PTR ds:[esi]
  40b773:	sub    ebx,DWORD PTR [ebp+0x2b]
  40b776:	mov    ebx,0x93a689c7
  40b77b:	xor    edx,DWORD PTR [esi+0x72]
  40b77e:	or     BYTE PTR fs:[eax-0x16],bh
  40b782:	in     al,0x12
  40b784:	fist   DWORD PTR [eax]
  40b786:	add    BYTE PTR [esi-0x18],bh
  40b789:	jne    0x40b790
  40b78b:	and    eax,DWORD PTR [ebx]
  40b78d:	lahf   
  40b78e:	jmp    0xff18:0xd7742055
  40b795:	imul   esi,DWORD PTR [esi-0x26dbaca3],0xb182b790
  40b79f:	dec    ebp
  40b7a0:	fistp  WORD PTR [eax-0x23]
  40b7a3:	xchg   edi,eax
  40b7a4:	add    BYTE PTR [ebp+0x42f5c4a9],al
  40b7aa:	sar    BYTE PTR [ebp+0x390071e8],cl
  40b7b0:	in     eax,dx
  40b7b1:	mov    edi,0x2beb65e
  40b7b6:	add    BYTE PTR [esi-0x5474dbbe],dh
  40b7bc:	fmul   DWORD PTR [ebx-0x4a37aafc]
  40b7c2:	add    al,0x75
  40b7c4:	dec    edi
  40b7c5:	add    eax,DWORD PTR [ecx+0x33800b6]
  40b7cb:	jb     0x40b772
  40b7cd:	loop   0x40b824
  40b7cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b7d0:	test   al,0x29
  40b7d2:	add    eax,0x416f21
  40b7d7:	adc    DWORD PTR cs:[ebx+0x3ece1135],ecx
  40b7de:	add    BYTE PTR [edx+0x25],al
  40b7e1:	add    dh,BYTE PTR [ebx]
  40b7e3:	call   0x444f:0xa58b5711
  40b7ea:	adc    BYTE PTR [eax],al
  40b7ec:	sub    eax,0x9a0873b8
  40b7f1:	aaa    
  40b7f2:	adc    BYTE PTR [edx-0x26],ch
  40b7f5:	mov    bh,0xd4
  40b7f7:	test   DWORD PTR [ebp+0x30],edi
  40b7fa:	sub    al,BYTE PTR [ebx]
  40b7fc:	sbb    bh,cl
  40b7fe:	push   ebp
  40b7ff:	push   0xffffffb1
  40b801:	dec    ebp
  40b802:	inc    esp
  40b803:	adc    BYTE PTR [ebp+0xd],bh
  40b806:	push   DWORD PTR [ebp-0x4b]
  40b809:	mov    bh,0x13
  40b80b:	xchg   esp,eax
  40b80c:	scas   eax,DWORD PTR es:[edi]
  40b80d:	inc    edx
  40b80e:	add    BYTE PTR [ebp-0x4ffbc913],al
  40b814:	lods   al,BYTE PTR ds:[esi]
  40b815:	mov    ds:0x117c6a0e,eax
  40b81a:	push   edi
  40b81b:	push   edi
  40b81c:	mov    ds:0x3a1073b7,al
  40b821:	aaa    
  40b822:	or     bh,bh
  40b824:	inc    ebx
  40b825:	in     al,dx
  40b826:	mov    edi,0x2d0d945f
  40b82b:	pop    ebp
  40b82c:	push   esi
  40b82d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b82e:	add    dl,BYTE PTR [esi-0x35]
  40b831:	jnp    0x40b891
  40b833:	mov    eax,DWORD PTR [ecx-0x6bfffd79]
  40b839:	bound  esi,QWORD PTR ds:0xefea1f0c
  40b83f:	mov    al,dh
  40b841:	out    dx,eax
  40b842:	mov    dl,BYTE PTR [edi]
  40b844:	xchg   esp,eax
  40b845:	xlat   BYTE PTR ds:[ebx]
  40b846:	add    dh,BYTE PTR [ebx]
  40b848:	xor    ebp,ebx
  40b84a:	ret    
  40b84b:	stos   DWORD PTR es:[edi],eax
  40b84c:	push   0x246b8
  40b851:	jo     0x40b84a
  40b853:	ret    0x89ce
  40b856:	fcmove st,st(2)
  40b858:	loope  0x40b85e
  40b85a:	pop    ecx
  40b85b:	enter  0x485a,0xa2
  40b85f:	pop    esp
  40b860:	mov    edx,DWORD PTR [esi-0x39]
  40b863:	jnp    0x40b876
  40b865:	add    DWORD PTR [eax+0x28],0x7b84d75e
  40b86c:	jmp    0x40b885
  40b86e:	(bad)  
  40b86f:	in     eax,dx
  40b870:	out    0x1f,eax
  40b872:	inc    edi
  40b874:	(bad)  
  40b875:	aaa    
  40b876:	rcl    BYTE PTR [esi-0x3cab6bbe],0x74
  40b87d:	xchg   ebx,eax
  40b87e:	mov    edx,eax
  40b880:	call   0x439114
  40b885:	ret    0xfc1c
  40b888:	add    BYTE PTR [edi+0x62],al
  40b88b:	jmp    0x4583f5f
  40b890:	push   edi
  40b891:	sub    esp,ecx
  40b893:	pop    eax
  40b894:	add    BYTE PTR [ebx+0x4033a26a],bl
  40b89a:	sbb    al,BYTE PTR [eax*4+0x681ac254]
  40b8a1:	pop    eax
  40b8a2:	add    BYTE PTR [edx],bl
  40b8a4:	inc    esp
  40b8a5:	xchg   esp,eax
  40b8a6:	jns    0x40b848
  40b8a8:	fadd   QWORD PTR [esi+eax*8-0x6b]
  40b8ac:	(bad)  
  40b8ad:	push   ds
  40b8ae:	add    edx,ecx
  40b8b0:	xchg   edi,eax
  40b8b1:	(bad)  
  40b8b2:	add    BYTE PTR [ecx],bl
  40b8b4:	pop    esp
  40b8b5:	add    BYTE PTR [eax+0x51],al
  40b8b8:	sub    DWORD PTR [esp+edi*1],eax
  40b8bb:	shl    BYTE PTR [esi-0x39],0x4a
  40b8bf:	jns    0x40b89c
  40b8c1:	(bad)  
  40b8c3:	inc    eax
  40b8c4:	jmp    0xf77e4fc
  40b8c9:	add    dl,BYTE PTR [esp+edi*2+0x12935128]
  40b8d0:	sub    ebp,ebx
  40b8d2:	(bad)  
  40b8d4:	call   0xb3b47adc
  40b8d9:	xlat   BYTE PTR ds:[ebx]
  40b8da:	dec    ebx
  40b8db:	test   eax,ebp
  40b8dd:	add    edx,DWORD PTR [eax+ebx*8+0x9533fc]
  40b8e4:	jb     0x40b8a4
  40b8e6:	dec    ebx
  40b8e7:	lds    edi,FWORD PTR [ecx]
  40b8e9:	adc    esi,ebx
  40b8eb:	mov    al,ds:0x5697d4
  40b8f0:	sar    BYTE PTR [esi+0x45b7c92],cl
  40b8f6:	xchg   esp,eax
  40b8f7:	add    BYTE PTR [edx+0x11],dh
  40b8fa:	adc    dl,dh
  40b8fc:	test   al,0x3
  40b8fe:	cmp    al,0xdc
  40b900:	jns    0x40b945
  40b902:	xchg   esp,eax
  40b903:	xor    dh,ah
  40b905:	lods   eax,DWORD PTR ds:[esi]
  40b906:	xor    ecx,esp
  40b908:	pop    ecx
  40b909:	inc    esp
  40b90a:	xchg   esp,eax
  40b90b:	lds    ebx,FWORD PTR [ebx]
  40b90d:	or     al,bh
  40b90f:	inc    eax
  40b910:	jmp    0x29d51cb7
  40b915:	add    al,0x9b
  40b917:	lods   eax,DWORD PTR ds:[esi]
  40b918:	push   eax
  40b919:	cld    
  40b91a:	add    BYTE PTR [edi],al
  40b91c:	inc    ecx
  40b91d:	add    cl,ch
  40b91f:	push   edx
  40b920:	or     eax,0xd67d3c
  40b925:	mov    ds:0x3f1c2d,eax
  40b92a:	sahf   
  40b92b:	inc    ecx
  40b92c:	pop    esp
  40b92d:	and    al,0x1d
  40b92f:	rol    BYTE PTR [eax],1
  40b931:	call   esp
  40b933:	fwait
  40b934:	xchg   esp,eax
  40b935:	inc    edx
  40b936:	jmp    0x2aecf571
  40b93b:	cwde   
  40b93c:	ret    
  40b93d:	aad    0x1
  40b93f:	cwde   
  40b940:	dec    esp
  40b941:	inc    eax
  40b942:	jmp    0x957cc6a1
  40b947:	(bad)  
  40b948:	add    BYTE PTR [ebx+0x3f0bad],ah
  40b94e:	push   esi
  40b94f:	stc    
  40b950:	pop    ebx
  40b951:	inc    esp
  40b952:	aad    0xd7
  40b954:	add    bh,bh
  40b956:	cld    
  40b957:	xchg   ebx,eax
  40b958:	xchg   esp,eax
  40b959:	inc    edx
  40b95a:	jmp    0xaaeced95
  40b95f:	xchg   edi,eax
  40b960:	ret    
  40b961:	aad    0x8a
  40b963:	mov    bl,0x94
  40b965:	inc    edx
  40b966:	jmp    0x4d80bef3
  40b96b:	push   esi
  40b96c:	add    BYTE PTR [ebp-0x1f],dh
  40b96f:	cwde   
  40b970:	add    eax,0x563d44
  40b975:	je     0x40b958
  40b977:	mov    BYTE PTR ds:0x564d48,al
  40b97d:	je     0x40b958
  40b97f:	add    BYTE PTR [eax+0x563d5005],bl
  40b985:	add    BYTE PTR [ecx+esi*8-0x74],dh
  40b989:	mov    ebx,0x107e573
  40b98e:	jmp    0x40b97b
  40b990:	test   eax,eax
  40b992:	pop    ebp
  40b993:	cs ins DWORD PTR es:[edi],dx
  40b995:	mov    ecx,0xffa900c1
  40b99a:	push   edx
  40b99b:	mov    esi,DWORD PTR ds:0xc801e181
  40b9a1:	int3   
  40b9a2:	out    0xa6,al
  40b9a4:	inc    ebp
  40b9a5:	cld    
  40b9a6:	inc    DWORD PTR [ebx-0x7cf8cfd3]
  40b9ac:	sbb    BYTE PTR [edi],0xac
  40b9af:	inc    ebx
  40b9b0:	jge    0x40b9b0
  40b9b2:	push   ebp
  40b9b3:	push   edi
  40b9b4:	shl    BYTE PTR [eax-0x54],cl
  40b9b7:	inc    ebx
  40b9b8:	ins    DWORD PTR es:[edi],dx
  40b9b9:	jge    0x40ba11
  40b9bb:	lods   al,BYTE PTR ds:[esi]
  40b9bc:	jle    0x40b9ba
  40b9be:	out    0xb4,eax
  40b9c0:	push   ebp
  40b9c1:	(bad)  
  40b9c2:	call   FWORD PTR [esi-0x32]
  40b9c5:	xor    al,0xac
  40b9c7:	inc    ebx
  40b9c8:	sub    eax,0x48c0851d
  40b9cd:	ret    
  40b9ce:	xor    al,al
  40b9d0:	out    0xbf,al
  40b9d2:	sbb    ebx,0x48
  40b9d5:	leave  
  40b9d6:	cbw    
  40b9d8:	popf   
  40b9d9:	inc    ecx
  40b9da:	add    al,ch
  40b9dc:	(bad)  
  40b9dd:	out    0x1,eax
  40b9df:	add    BYTE PTR [ebp+0x3c],dl
  40b9e2:	rol    DWORD PTR [ecx],1
  40b9e4:	add    ch,ch
  40b9e6:	cli    
  40b9e7:	add    DWORD PTR [edx-0x78],esi
  40b9ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b9eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b9ec:	idiv   ebp
  40b9ee:	(bad)  
  40b9ef:	mov    eax,ds:0x414d90
  40b9f4:	test   BYTE PTR [ebp-0x3b17efcd],ch
  40b9fa:	(bad)  
  40b9fb:	(bad)  
  40b9fc:	call   DWORD PTR [ecx]
  40b9fe:	ret    
  40b9ff:	jno    0x40b9cf
  40ba01:	(bad)  
  40ba02:	(bad)  
  40ba03:	mov    eax,ds:0x417d90
  40ba08:	test   esi,edx
  40ba0a:	xor    DWORD PTR [esp+edi*1],eax
  40ba0d:	mov    edi,0x94b0bf30
  40ba12:	fsub   DWORD PTR [edi]
  40ba14:	ret    
  40ba15:	sub    al,0xe9
  40ba17:	xchg   edi,eax
  40ba18:	inc    edx
  40ba19:	xchg   esp,eax
  40ba1a:	das    
  40ba1b:	(bad)
  40ba1e:	mov    DWORD PTR [edx],eax
  40ba20:	add    BYTE PTR [edi],dh
  40ba22:	hlt    
  40ba23:	xchg   edi,eax
  40ba24:	inc    edx
  40ba25:	xchg   esp,eax
  40ba26:	pop    esp
  40ba27:	ret    
  40ba28:	jae    0x40b9dd
  40ba2a:	add    al,ch
  40ba2c:	das    
  40ba2d:	jae    0x40b9fc
  40ba2f:	or     BYTE PTR [edi],0xd4
  40ba32:	xlat   BYTE PTR ds:[ebx]
  40ba33:	xor    ah,BYTE PTR [ebx+0x4003ac]
  40ba39:	xor    eax,0x944296b4
  40ba3e:	inc    edx
  40ba3f:	adc    edi,DWORD PTR [edi+0x403b78]
  40ba45:	scas   al,BYTE PTR es:[edi]
  40ba46:	aad    0x2a
  40ba48:	call   0x306214d
  40ba4d:	add    ah,ah
  40ba4f:	fsub   DWORD PTR [ebx]
  40ba51:	ret    
  40ba52:	popw   ss
  40ba54:	rcl    BYTE PTR [edi+ecx*1+0x4],0x82
  40ba59:	jmp    0x40b9e7
  40ba5b:	aad    0x2
  40ba5d:	add    BYTE PTR [edx],cl
  40ba5f:	popf   
  40ba60:	cli    
  40ba61:	add    BYTE PTR [ecx+0x30805bf3],al
  40ba67:	xchg   edi,eax
  40ba68:	add    ch,BYTE PTR [edx-0x6c]
  40ba6b:	out    dx,eax
  40ba6c:	xchg   ebp,ebp
  40ba6e:	xchg   ebp,eax
  40ba6f:	xlat   BYTE PTR ds:[ebx]
  40ba70:	jle    0x40ba31
  40ba72:	popa   
  40ba73:	rcl    DWORD PTR [eax],cl
  40ba75:	shr    bh,0xad
  40ba78:	pop    edx
  40ba79:	mov    BYTE PTR [edx],ch
  40ba7b:	xchg   edi,eax
  40ba7c:	add    ch,BYTE PTR [edx-0x6a]
  40ba7f:	out    dx,eax
  40ba80:	fwait
  40ba81:	in     eax,dx
  40ba82:	xchg   ebp,eax
  40ba83:	xlat   BYTE PTR ds:[ebx]
  40ba84:	jle    0x40ba45
  40ba86:	dec    eax
  40ba87:	ret    
  40ba88:	pop    ecx
  40ba89:	add    al,0x95
  40ba8b:	add    cl,ch
  40ba8d:	add    esp,DWORD PTR [ecx]
  40ba8f:	jl     0x40ba71
  40ba91:	shr    DWORD PTR [edx-0x6bd1c73f],0xc1
  40ba98:	repz ret 
  40ba9a:	test   DWORD PTR [eax-0x17],eax
  40ba9d:	nop
  40ba9e:	and    al,cl
  40baa0:	mov    ebx,0xc12f8ac3
  40baa5:	and    al,0xc7
  40baa7:	add    cl,ch
  40baa9:	mov    BYTE PTR [ebx],bh
  40baab:	popf   
  40baac:	and    al,0x70
  40baae:	add    dh,dl
  40bab0:	add    dh,ch
  40bab2:	cwde   
  40bab3:	sub    esi,DWORD PTR [edi+0x2b9408aa]
  40bab9:	bound  esi,QWORD PTR [eax+0x860d414]
  40babf:	xchg   esp,eax
  40bac0:	add    BYTE PTR [edi+0x49],dh
  40bac3:	pushf  
  40bac4:	call   FWORD PTR [ecx]
  40bac6:	pop    edx
  40bac7:	jmp    0x40baba
  40bac9:	mov    bh,BYTE PTR fs:[ebx]
  40bacc:	shr    eax,0x83
  40bacf:	jo     0x40bb41
  40bad1:	cwde   
  40bad2:	inc    edi
  40bad3:	xchg   esp,eax
  40bad4:	jmp    ebp
  40bad6:	mov    DWORD PTR [edi],ecx
  40bad8:	add    cl,ch
  40bada:	add    esp,DWORD PTR [edi-0x5b]
  40badd:	stc    
  40bade:	ret    0x7579
  40bae1:	gs xor al,0x87
  40bae4:	inc    eax
  40bae5:	jmp    0x3299037a
  40baea:	ret    
  40baeb:	cli    
  40baec:	xlat   BYTE PTR ds:[ebx]
  40baed:	rcl    BYTE PTR [ecx-0x6b],1
  40baf0:	add    BYTE PTR [ecx+ecx*4-0x1d],ch
  40baf4:	ret    0xc315
  40baf7:	push   ebx
  40baf8:	or     eax,0xc1445429
  40bafd:	cmp    eax,0xe940473c
  40bb02:	push   ebx
  40bb03:	retf   
  40bb04:	jmp    0x6400:0x40aa98ff
  40bb0b:	ror    BYTE PTR [ebx+0x2b],1
  40bb0e:	jb     0x40baed
  40bb10:	xor    BYTE PTR [ebp-0x3c10ff9c],cl
  40bb16:	(bad)  
  40bb17:	(bad)  
  40bb18:	inc    edi
  40bb19:	xor    al,ch
  40bb1b:	adc    eax,0x6bffffe7
  40bb20:	push   edi
  40bb21:	xor    al,0x17
  40bb23:	mov    esi,0x2aac3c8c
  40bb28:	cwde   
  40bb29:	lea    eax,[ecx+esi*4+0x39febf54]
  40bb30:	push   edi
  40bb31:	adc    eax,0xd7fbb0
  40bb36:	test   DWORD PTR [ecx-0x597cf455],ebp
  40bb3c:	mov    eax,DWORD PTR [ebx-0x7d]
  40bb3f:	xchg   bl,ch
  40bb41:	xor    bl,BYTE PTR [esi-0x24d4cc6e]
  40bb47:	in     eax,0x12
  40bb49:	xor    DWORD PTR [ebx-0x6],0xffffffd7
  40bb4d:	add    BYTE PTR [ecx],cl
  40bb4f:	in     al,dx
  40bb50:	aaa    
  40bb51:	ins    BYTE PTR es:[edi],dx
  40bb52:	inc    edx
  40bb53:	jmp    0xed36ce52
  40bb58:	aaa    
  40bb59:	ins    BYTE PTR es:[edi],dx
  40bb5a:	inc    edx
  40bb5b:	jmp    0x684aeff0
  40bb60:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bb61:	loopne 0x40bb0e
  40bb63:	stos   BYTE PTR es:[edi],al
  40bb64:	xchg   edi,eax
  40bb65:	mov    al,ds:0x5f97e90e
  40bb6a:	pop    esi
  40bb6b:	jns    0x40bafd
  40bb6d:	pop    ebx
  40bb6e:	leave  
  40bb6f:	sub    ebx,DWORD PTR [ebx+0x3b725500]
  40bb75:	sub    ebx,0x8d00fd
  40bb7b:	add    BYTE PTR [edx+0x8b573d],bh
  40bb81:	fdiv   DWORD PTR [edi+0x10]
  40bb84:	inc    eax
  40bb85:	mov    ebp,0xeec55feb
  40bb8a:	add    edi,edi
  40bb8c:	xlat   BYTE PTR ds:[ebx]
  40bb8d:	(bad)  
  40bb8e:	fisubr WORD PTR [eax+0x20]
  40bb91:	mov    es,esp
  40bb93:	push   ecx
  40bb94:	mov    esi,0x423bd1
  40bb99:	arpl   WORD PTR [ebx+0x45f0541b],cx
  40bb9f:	add    BYTE PTR [esi+0x1e],ah
  40bba2:	and    ch,al
  40bba4:	inc    ebx
  40bba5:	jge    0x40bb90
  40bba7:	mov    ds:0x453058,al
  40bbac:	mov    DWORD PTR [eax-0x51],ecx
  40bbaf:	ret    0x7d43
  40bbb2:	rcl    BYTE PTR [ebx],0x34
  40bbb5:	arpl   WORD PTR [ebx+0x0],ax
  40bbb8:	xor    DWORD PTR [ecx],0x10
  40bbbb:	push   esi
  40bbbc:	jmp    DWORD PTR [edx]
  40bbbe:	(bad)  
  40bbbf:	mov    bl,0xec
  40bbc1:	adc    al,0xc1
  40bbc3:	std    
  40bbc4:	call   0x4078da
  40bbc9:	mov    dh,0x44
  40bbcb:	jl     0x40bb70
  40bbcd:	xor    DWORD PTR ds:0x71f40042,edi
  40bbd3:	(bad)  
  40bbd4:	(bad)  
  40bbd5:	cmp    eax,0x2588c48c
  40bbda:	inc    ebx
  40bbdb:	dec    ecx
  40bbdc:	jne    0x40bbde
  40bbde:	(bad)  
  40bbdf:	(bad)  
  40bbe0:	mov    bl,0xda
  40bbe2:	push   esi
  40bbe3:	sar    ebp,0xe8
  40bbe6:	mov    cl,0xbd
  40bbe8:	(bad)  
  40bbe9:	push   eax
  40bbeb:	xor    al,0x0
  40bbed:	add    ch,ch
  40bbef:	in     al,dx
  40bbf0:	adc    edx,DWORD PTR [eax+0x2e]
  40bbf3:	mov    ?,WORD PTR [ebx-0x30]
  40bbf6:	jle    0x40bbc4
  40bbf8:	std    
  40bbf9:	call   0x338092
  40bbfe:	(bad)  [ebx]
  40bc00:	les    edi,FWORD PTR [ebp-0x4f]
  40bc03:	xor    cl,dl
  40bc05:	dec    edi
  40bc06:	cmp    al,0x31
  40bc08:	jb     0x40bc4c
  40bc0a:	xchg   esp,eax
  40bc0b:	and    al,0x87
  40bc0d:	(bad)  
  40bc0e:	mov    ecx,0xbc4fbfad
  40bc13:	call   0x24d4bcc9
  40bc18:	ret    
  40bc19:	push   cs
  40bc1a:	or     DWORD PTR [ecx-0x4],ebp
  40bc1d:	ret    0xa021
  40bc20:	repz mov edi,0xc78630fa
  40bc26:	mov    DWORD PTR [edi-0x41],edi
  40bc29:	mov    eax,0x2a972
  40bc2e:	or     DWORD PTR ds:0x6773fadd,esp
  40bc34:	mov    dl,BYTE PTR [edi]
  40bc36:	aam    0xf0
  40bc38:	ss cli 
  40bc3a:	in     al,dx
  40bc3b:	sti    
  40bc3c:	aaa    
  40bc3d:	inc    eax
  40bc3e:	xchg   esp,eax
  40bc3f:	pop    esp
  40bc40:	xchg   bh,al
  40bc42:	add    BYTE PTR [ecx-0x79],dl
  40bc45:	mov    edi,0x6ed54b4f
  40bc4a:	adc    esp,edx
  40bc4c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bc4d:	or     DWORD PTR [esp+edi*1+0x2f],0x54
  40bc52:	push   ebx
  40bc53:	mov    esi,0x956a53aa
  40bc58:	iret   
  40bc59:	add    al,BYTE PTR [eax]
  40bc5b:	xchg   esp,eax
  40bc5c:	daa    
  40bc5d:	mov    es,WORD PTR [esp+ecx*2+0x64fec04d]
  40bc64:	out    dx,al
  40bc65:	inc    ebp
  40bc66:	cld    
  40bc67:	or     ch,BYTE PTR [ecx-0x22fcfffe]
  40bc6d:	repnz adc DWORD PTR [edi+eiz*4-0x75],edx
  40bc72:	out    dx,eax
  40bc73:	pop    ss
  40bc74:	add    DWORD PTR [edi],esp
  40bc76:	shl    BYTE PTR [edi-0x1b],0xb9
  40bc7a:	mov    ds,WORD PTR [eax-0x44]
  40bc7d:	mov    eax,0x5bbc60c0
  40bc82:	xchg   bl,bl
  40bc84:	mov    ebx,0x565bc005
  40bc89:	(bad)  
  40bc8a:	adc    eax,0x3a91288
  40bc8f:	adc    ecx,eax
  40bc91:	je     0x40bc9c
  40bc93:	pop    ds
  40bc94:	inc    esp
  40bc95:	in     eax,0x8d
  40bc97:	push   eax
  40bc98:	mov    eax,0x6088bf36
  40bc9d:	cli    
  40bc9e:	inc    ebx
  40bc9f:	xchg   esp,eax
  40bca0:	mov    DWORD PTR [ebx],esp
  40bca2:	mov    esp,0x38c5b816
  40bca7:	add    BYTE PTR [eax-0x69c81898],dl
  40bcad:	icebp  
  40bcae:	test   al,0xd5
  40bcb0:	jae    0x40bca3
  40bcb2:	lahf   
  40bcb3:	es sbb eax,0x68cc2b8c
  40bcb9:	mov    ebp,0xc818919d
  40bcbe:	xchg   ebx,eax
  40bcbf:	mov    edi,0x636da85a
  40bcc4:	xchg   esp,eax
  40bcc5:	add    BYTE PTR [ecx+ecx*4+0x53],dh
  40bcc9:	mov    ebx,0x983bbf7d
  40bcce:	call   0x7d6950d7
  40bcd3:	imul   edx,esi,0x0
  40bcd6:	jo     0x40bcf9
  40bcd8:	cmp    al,0x69
  40bcda:	test   eax,0xed1b0d03
  40bcdf:	outs   dx,DWORD PTR ds:[esi]
  40bce0:	(bad)  
  40bce1:	add    BYTE PTR [esi-0x29],cl
  40bce4:	sti    
  40bce5:	sub    DWORD PTR [edx-0x56d76bfc],ebp
  40bceb:	xor    eax,0x36000054
  40bcf0:	popf   
  40bcf1:	rcl    BYTE PTR [ecx],1
  40bcf3:	test   eax,0x9dc2f997
  40bcf8:	cwde   
  40bcf9:	mov    edi,esi
  40bcfb:	adc    esi,ebx
  40bcfd:	jg     0x40bcfe
  40bcff:	call   0x2972bc32
  40bd04:	into   
  40bd05:	shl    DWORD PTR [ebx-0x12],0x16
  40bd09:	or     al,0x54
  40bd0b:	inc    ecx
  40bd0c:	add    BYTE PTR [edi+0x0],dl
  40bd0f:	add    DWORD PTR [ecx],eax
  40bd11:	into   
  40bd12:	cmp    al,BYTE PTR [eax]
  40bd14:	jmp    0xe8f11b6b
  40bd19:	dec    esi
  40bd1a:	mov    edx,0x82a90f34
  40bd20:	int    0xdf
  40bd22:	jg     0x40bd0f
  40bd24:	in     eax,dx
  40bd25:	call   0x8b53:0xe21a0000
  40bd2c:	cmp    al,0x90
  40bd2e:	out    dx,eax
  40bd2f:	fisubr DWORD PTR [edx+0x32]
  40bd32:	add    DWORD PTR [ecx+0x426f9bcc],ecx
  40bd38:	jmp    0xfcc9bfe9
  40bd3d:	ja     0x40bda7
  40bd3f:	inc    edx
  40bd40:	jmp    0x8148f25f
  40bd45:	dec    edx
  40bd46:	mov    bh,0xfe
  40bd48:	xchg   BYTE PTR [ebx],dl
  40bd4a:	jl     0x40bdc0
  40bd4c:	out    0x45,al
  40bd4e:	jl     0x40bd38
  40bd50:	mov    bh,0x90
  40bd52:	add    BYTE PTR [eax],al
  40bd54:	sbb    al,BYTE PTR [eax-0x680f0000]
  40bd5a:	dec    edi
  40bd5b:	push   esp
  40bd5d:	fist   WORD PTR [ecx]
  40bd5f:	inc    eax
  40bd60:	jmp    0xaaeb991b
  40bd65:	xchg   edi,eax
  40bd66:	test   edx,0xff0f4800
  40bd6c:	adc    eax,0x4011c1
  40bd71:	add    BYTE PTR [esi],cl
  40bd73:	pusha  
  40bd74:	test   eax,0x1b87fd43
  40bd79:	in     al,0x46
  40bd7b:	ds add bl,ch
  40bd7e:	cli    
  40bd7f:	lds    eax,FWORD PTR [ebx]
  40bd81:	in     al,0x56
  40bd83:	add    BYTE PTR ds:[ecx],al
  40bd86:	pop    ss
  40bd87:	pop    es
  40bd88:	mov    eax,0x3e7880
  40bd8d:	pop    ecx
  40bd8e:	inc    ebp
  40bd8f:	pop    ss
  40bd90:	add    eax,0xffffffb5
  40bd93:	dec    esp
  40bd94:	jne    0x40bd8e
  40bd96:	ss mov eax,0x47d12f2
  40bd9c:	push   0x41f8d8
  40bda1:	(bad)  
  40bda2:	fucomi st,st(4)
  40bda4:	cmp    edi,DWORD PTR [eax-0x2900fb42]
  40bdaa:	add    BYTE PTR [ecx+0x24],cl
  40bdad:	adc    BYTE PTR [ebp+0x6d0201ec],bl
  40bdb3:	dec    DWORD PTR [eax+0x423c891d]
  40bdb9:	add    BYTE PTR [edx],dh
  40bdbb:	adc    ebx,esp
  40bdbd:	adc    eax,0x458b04ad
  40bdc2:	jne    0x40be2b
  40bdc4:	loop   0x40bdc1
  40bdc6:	and    bh,BYTE PTR [ebp-0x7e]
  40bdc9:	ror    BYTE PTR [ecx-0x80],0x39
  40bdcd:	sti    
  40bdce:	dec    eax
  40bdcf:	mov    al,ds:0xff975351
  40bdd4:	addr16 pop eax
  40bdd6:	add    BYTE PTR [ecx+0x41],dh
  40bdd9:	add    bh,bh
  40bddb:	sub    BYTE PTR [edi],dh
  40bddd:	adc    DWORD PTR [eax+0x2d],eax
  40bde0:	or     BYTE PTR [ebx],0x0
  40bde3:	xchg   esp,eax
  40bde4:	xchg   esi,eax
  40bde5:	inc    eax
  40bde6:	add    BYTE PTR [ebx],dl
  40bde8:	xchg   BYTE PTR [edi-0x856a84f],bh
  40bdee:	ret    0x2593
  40bdf1:	pusha  
  40bdf2:	(bad)  
  40bdf3:	sti    
  40bdf4:	icebp  
  40bdf5:	stos   DWORD PTR es:[edi],eax
  40bdf6:	sub    al,0xf0
  40bdf8:	jmp    0xb21541b9
  40bdfd:	xchg   BYTE PTR [esi-0x1d],cl
  40be00:	sbb    DWORD PTR [ebp-0x555e9e02],edi
  40be06:	pop    ebx
  40be07:	ror    BYTE PTR [ecx],1
  40be09:	mov    ebp,0x86b1d483
  40be0e:	ds ret 
  40be10:	mov    ecx,0x55a1febb
  40be15:	adc    al,BYTE PTR [eax-0x6c]
  40be18:	inc    esi
  40be19:	cwde   
  40be1a:	scas   eax,DWORD PTR es:[edi]
  40be1b:	push   edi
  40be1c:	test   eax,0xf829faf7
  40be21:	mov    BYTE PTR [eax+eiz*2],dl
  40be24:	test   DWORD PTR [edi],edi
  40be26:	add    BYTE PTR [ebx+esi*4-0x1d],bh
  40be2a:	add    DWORD PTR [esi+edi*8-0x22e7f140],edx
  40be31:	mov    ebx,0x6ff7bfe
  40be36:	xor    al,0x40
  40be38:	out    0x3,eax
  40be3a:	mov    ds:0x40566c00,eax
  40be3f:	add    BYTE PTR [edi+0x92f355e],bl
  40be45:	push   esp
  40be46:	out    0x9f,eax
  40be48:	xchg   ebp,eax
  40be49:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40be4a:	add    ch,al
  40be4c:	inc    ebp
  40be4d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40be4e:	add    al,BYTE PTR [eax]
  40be50:	out    0x2c,eax
  40be52:	xchg   DWORD PTR [ebx],esp
  40be54:	dec    ecx
  40be55:	lods   eax,DWORD PTR ds:[esi]
  40be56:	add    al,BYTE PTR [eax]
  40be58:	les    ebp,FWORD PTR [edx]
  40be5a:	imul   BYTE PTR [ebx]
  40be5c:	clc    
  40be5d:	add    BYTE PTR [edx-0x659722fd],ch
  40be63:	inc    eax
  40be64:	xchg   esp,eax
  40be65:	sub    BYTE PTR [ecx+0x73],dh
  40be68:	push   esi
  40be69:	add    BYTE PTR [ecx+0x6c8e2711],dl
  40be6f:	stos   DWORD PTR es:[edi],eax
  40be70:	mov    ch,0xe2
  40be72:	jmp    0x60ab:0xe133fb03
  40be79:	mov    esp,0xc117bc2d
  40be7e:	cmc    
  40be7f:	xchg   edx,edx
  40be81:	mov    edx,0x43e1bc1d
  40be86:	loope  0x40be89
  40be88:	dec    eax
  40be89:	add    DWORD PTR [ecx],eax
  40be8b:	mov    cl,0xcf
  40be8d:	mov    ecx,0x7095a805
  40be92:	out    0xf9,eax
  40be94:	(bad)  
  40be95:	or     DWORD PTR [ebx+eax*8+0x52],ebx
  40be99:	pop    edx
  40be9a:	xchg   edx,eax
  40be9b:	mov    BYTE PTR [eax+0xab5b],dh
  40bea1:	xchg   esp,eax
  40bea2:	push   ebx
  40bea3:	jb     0x40be4d
  40bea5:	push   ss
  40bea6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bea7:	rol    BYTE PTR [ebp+0x3e5a07f],1
  40bead:	xchg   esp,eax
  40beae:	push   edx
  40beaf:	push   ds
  40beb0:	mov    DWORD PTR [edi],edi
  40beb2:	in     al,0x48
  40beb4:	push   es
  40beb5:	xchg   esp,eax
  40beb6:	add    cl,al
  40beb8:	adc    DWORD PTR [esi-0x18771700],0xffffffe4
  40bebf:	sbb    ch,BYTE PTR [ecx+ebp*2+0xf03e7f8]
  40bec6:	or     BYTE PTR [esi+0x3009405],0x6
  40becd:	sbb    DWORD PTR [esp+ecx*8-0x16ff6678],ecx
  40bed4:	push   esp
  40bed5:	cmp    esi,DWORD PTR [ebx]
  40bed7:	add    cl,ah
  40bed9:	sbb    al,0x45
  40bedb:	and    al,0xd5
  40bedd:	jg     0x40be77
  40bedf:	scas   eax,DWORD PTR es:[edi]
  40bee0:	stos   BYTE PTR es:[edi],al
  40bee1:	xchg   edi,eax
  40bee2:	test   al,0xb0
  40bee4:	add    al,0x92
  40bee6:	add    BYTE PTR [ecx+0x9947],bh
  40beec:	(bad)  
  40beed:	(bad)  
  40beee:	ret    0xe8ff
  40bef1:	push   edi
  40bef2:	inc    edi
  40bef3:	jne    0x40bf35
  40bef5:	or     eax,0x47e1243d
  40befa:	es add ecx,eax
  40befd:	dec    edi
  40befe:	ins    BYTE PTR es:[edi],dx
  40beff:	inc    edx
  40bf00:	jmp    0xf898d323
  40bf05:	add    BYTE PTR [edi+0x0],dl
  40bf08:	mov    ebx,DWORD PTR [ecx]
  40bf0a:	adc    eax,0xef773b3
  40bf0f:	adc    al,0x18
  40bf11:	fcom   DWORD PTR [edi+0x0]
  40bf14:	cmp    eax,0x9036
  40bf19:	jl     0x40bebb
  40bf1b:	push   edx
  40bf1c:	call   esp
  40bf1e:	aaa    
  40bf1f:	cmovo  ebp,ecx
  40bf22:	stos   BYTE PTR es:[edi],al
  40bf23:	mov    dl,0x5e
  40bf25:	jb     0x40befc
  40bf27:	pop    edx
  40bf28:	mov    ecx,esp
  40bf2a:	in     al,dx
  40bf2b:	ret    0xe903
  40bf2e:	in     al,0x8b
  40bf30:	jmp    0x40bf9c
  40bf32:	and    esi,DWORD PTR [eax-0x2ec3280]
  40bf38:	(bad)  
  40bf39:	call   0x5bc4504
  40bf3e:	cwde   
  40bf3f:	test   al,0x0
  40bf41:	jmp    0x8b80:0x14ff0097
  40bf48:	dec    esp
  40bf49:	in     eax,0x1c
  40bf4b:	test   BYTE PTR [ebx],ah
  40bf4d:	aam    0x4b
  40bf4f:	mov    eax,0x7b9d00fe
  40bf54:	xor    ebp,DWORD PTR [ecx+ecx*8]
  40bf57:	add    BYTE PTR ds:[ebx-0x6797fb80],cl
  40bf5e:	ins    DWORD PTR es:[edi],dx
  40bf5f:	ds add al,ch
  40bf62:	and    DWORD PTR [ecx-0x79260000],0xbf005de3
  40bf6c:	(bad)  
  40bf6d:	call   DWORD PTR [esi+esi*2+0x5f]
  40bf71:	sub    esp,0x75ff51e5
  40bf77:	jmp    0xdd90304
  40bf7c:	jnp    0x40bff1
  40bf7e:	or     BYTE PTR [ebp+0x1f],dl
  40bf81:	(bad)  
  40bf82:	(bad)  
  40bf83:	mov    edx,0x1d984388
  40bf88:	out    0xff,al
  40bf8a:	addr16 add eax,0x9a004220
  40bf90:	adc    BYTE PTR [eax+0x11],bl
  40bf93:	in     eax,dx
  40bf94:	add    ecx,DWORD PTR [ebx+0x727130f0]
  40bf9a:	sbb    edx,DWORD PTR [edi]
  40bf9c:	jnp    0x40bff2
  40bf9e:	inc    eax
  40bfa0:	adc    edx,DWORD PTR [ebx]
  40bfa2:	inc    eax
  40bfa3:	lods   eax,DWORD PTR ds:[esi]
  40bfa4:	ss mov edi,0x7eaea074
  40bfaa:	add    BYTE PTR [ebp+0x3],bh
  40bfad:	je     0x40bfbd
  40bfaf:	ret    
  40bfb0:	jns    0x40bfc5
  40bfb2:	mov    al,ds:0x3300435f
  40bfb7:	sub    eax,0x75c2c95a
  40bfbc:	add    ecx,DWORD PTR [ebx+0x537156c6]
  40bfc2:	mov    ecx,DWORD PTR [ecx]
  40bfc4:	push   ebx
  40bfc5:	push   ecx
  40bfc6:	mov    ebp,DWORD PTR [eax-0x59]
  40bfc9:	stos   BYTE PTR es:[edi],al
  40bfca:	inc    ebx
  40bfcb:	xchg   esp,eax
  40bfcc:	test   eax,0x3c005753
  40bfd1:	pop    eax
  40bfd2:	loop   0x40bfd5
  40bfd4:	xchg   esp,eax
  40bfd5:	jp     0x40bfb2
  40bfd7:	mov    cl,dl
  40bfd9:	cmp    esp,0xf3a6a9c2
  40bfdf:	mov    edi,0x35c3d
  40bfe4:	xchg   esp,eax
  40bfe5:	rol    DWORD PTR [ebx+edx*2],cl
  40bfe8:	(bad)  
  40bfe9:	and    al,0x3f
  40bfeb:	or     BYTE PTR [esi+esi*2-0x49],ah
  40bfef:	je     0x40bf8d
  40bff1:	and    DWORD PTR [edi-0x1],edx
  40bff4:	outs   dx,BYTE PTR ds:[esi]
  40bff5:	ds mov ecx,0x42db3014
  40bffb:	add    BYTE PTR [ecx],bl
  40bffd:	jmp    0x5c12c430
  40c002:	mov    bh,0x0
  40c004:	xor    eax,0x944266c9
  40c009:	sub    ah,BYTE PTR [ebx+edx*1+0x5606649d]
  40c010:	pop    ds
  40c011:	int3   
  40c012:	mov    ss,WORD PTR [ecx]
  40c014:	push   esp
  40c015:	test   eax,0x4574b853
  40c01a:	inc    ebp
  40c01b:	add    BYTE PTR [edi-0x5c],bh
  40c01e:	out    dx,al
  40c01f:	stos   DWORD PTR es:[edi],eax
  40c020:	push   edi
  40c021:	test   eax,0xe497042c
  40c026:	mov    ebx,0x51a5498c
  40c02b:	push   eax
  40c02c:	jmp    0x40bffc
  40c02e:	rol    BYTE PTR [esp+edx*2+0xfe054d],1
  40c035:	fnstcw WORD PTR [esi-0x7c3f47ad]
  40c03b:	inc    ebx
  40c03c:	add    BYTE PTR [edi-0x2854115c],bh
  40c042:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c043:	sub    al,0x4
  40c045:	xchg   edi,eax
  40c046:	add    BYTE PTR [esp+edi*4],ch
  40c049:	or     BYTE PTR [ecx+eiz*4+0x52],al
  40c04d:	in     al,0x4d
  40c04f:	xchg   esi,eax
  40c050:	shr    ecx,1
  40c052:	jnp    0x40bffc
  40c054:	cs xchg edi,eax
  40c056:	mov    dh,0x2b
  40c058:	mov    ecx,0x757cec3a
  40c05d:	(bad)  
  40c05e:	add    BYTE PTR [ecx],dh
  40c060:	mov    bh,0xe5
  40c062:	inc    ecx
  40c063:	jmp    0xbdf96920
  40c068:	stos   DWORD PTR es:[edi],eax
  40c069:	or     al,0xae
  40c06b:	pop    ebp
  40c06c:	mov    eax,0x4dbc117
  40c071:	or     bh,BYTE PTR [esi+ecx*2]
  40c074:	mov    eax,0x447a00c8
  40c079:	xchg   esp,eax
  40c07a:	js     0x40c064
  40c07c:	je     0x40c0d4
  40c07e:	add    BYTE PTR [esi],dh
  40c080:	cs in  al,dx
  40c082:	dec    ebp
  40c083:	inc    ecx
  40c084:	sub    ebx,ebp
  40c086:	mov    ch,0x25
  40c088:	jg     0x40c0a5
  40c08a:	sub    al,0xea
  40c08c:	mov    ecx,0x56d0b558
  40c091:	retf   
  40c092:	sub    al,0xf4
  40c094:	sub    edx,DWORD PTR [eax+eax*4+0x670003e8]
  40c09b:	mov    ch,0x73
  40c09d:	mov    ebx,0xc7dbb54a
  40c0a2:	test   DWORD PTR [eax-0x17],eax
  40c0a5:	stos   BYTE PTR es:[edi],al
  40c0a6:	push   0xffffffb5
  40c0a8:	in     eax,0xb7
  40c0aa:	push   cs
  40c0ab:	cmp    al,0xe1
  40c0ad:	pop    ebx
  40c0ae:	pop    ebp
  40c0af:	ret    0x3e0
  40c0b2:	inc    BYTE PTR [eax]
  40c0b4:	into   
  40c0b5:	icebp  
  40c0b6:	jg     0x40c12a
  40c0b8:	sub    DWORD PTR [ebx+edi*2],eax
  40c0bb:	or     ebx,ecx
  40c0bd:	adc    dl,ah
  40c0bf:	add    BYTE PTR [eax],al
  40c0c1:	mov    esi,0xb6c01a48
  40c0c6:	inc    eax
  40c0c7:	ret    0x7454
  40c0ca:	lods   al,BYTE PTR ds:[esi]
  40c0cb:	fmul   QWORD PTR [ebx+0x200fc68]
  40c0d1:	jmp    0x24ce0f6d
  40c0d6:	je     0x40c128
  40c0d8:	lea    ebp,[eax+ebp*8]
  40c0db:	inc    esp
  40c0dc:	(bad)  
  40c0dd:	and    al,0x74
  40c0df:	call   0xb5d8a9e3
  40c0e4:	adc    al,0x91
  40c0e6:	xchg   BYTE PTR [eax+0x0],al
  40c0e9:	ins    BYTE PTR es:[edi],dx
  40c0ea:	push   eax
  40c0eb:	sub    al,0xd
  40c0ed:	ins    BYTE PTR es:[edi],dx
  40c0ee:	lds    ebp,FWORD PTR [eax+0x909fb7]
  40c0f4:	add    BYTE PTR [ecx-0x1],al
  40c0f7:	cmp    al,0x1
  40c0f9:	jmp    0xd774ad0c
  40c0fe:	add    BYTE PTR [edi+0x0],dl
  40c101:	push   ebx
  40c102:	sahf   
  40c103:	outs   dx,BYTE PTR ds:[esi]
  40c104:	sbb    DWORD PTR [ecx],eax
  40c106:	jmp    0x267412a2
  40c10b:	or     eax,0xb1f6f7c
  40c110:	mov    dh,0x56
  40c112:	mov    ecx,0x2582cb02
  40c117:	mov    WORD PTR [ebx-0x49fe867c],es
  40c11d:	(bad)  
  40c11e:	cdq    
  40c11f:	and    BYTE PTR [edi+ebp*2-0x14a1d09],dl
  40c126:	aam    0xe3
  40c128:	push   cs
  40c129:	inc    eax
  40c12a:	jmp    0xf0b53643
  40c12f:	out    0x85,al
  40c131:	test   BYTE PTR [ecx+0x42],bl
  40c134:	mov    bl,0xfe
  40c136:	ret    0x288e
  40c139:	add    BYTE PTR [eax],al
  40c13b:	ins    BYTE PTR es:[edi],dx
  40c13c:	add    BYTE PTR [eax],al
  40c13e:	(bad)  
  40c13f:	clc    
  40c140:	xor    edi,ebp
  40c142:	jmp    DWORD PTR [edx]
  40c144:	inc    ebx
  40c145:	push   eax
  40c146:	dec    DWORD PTR [ebx]
  40c148:	jg     0x40c10c
  40c14a:	or     al,0xe0
  40c14c:	lock mov edi,DWORD PTR [eax-0x14]
  40c153:	adc    eax,0x2d0145cb
  40c158:	mov    DWORD PTR [ebx+0x40],esi
  40c15b:	aad    0x31
  40c15d:	(bad)  
  40c15e:	(bad)  
  40c15f:	cmp    eax,0x47d068
  40c164:	cmp    al,0x0
  40c166:	mov    eax,esi
  40c168:	jge    0x40c0f3
  40c16a:	inc    ebx
  40c16b:	mov    ebp,ds
  40c16d:	sub    al,BYTE PTR [ecx]
  40c16f:	add    ch,bh
  40c171:	jg     0x40c0fc
  40c173:	(bad)  
  40c174:	push   ebp
  40c175:	jae    0x40c14e
  40c177:	add    ebp,ebp
  40c179:	test   BYTE PTR [ebx+0x5c],al
  40c17c:	xor    al,0x37
  40c17f:	mov    eax,0xffffff6e
  40c184:	push   ebp
  40c185:	sbb    al,BYTE PTR [esi+0x1]
  40c188:	in     eax,dx
  40c189:	mov    BYTE PTR [ebx+0x70],al
  40c18c:	sbb    eax,0xab3300ea
  40c191:	inc    ebp
  40c192:	lea    eax,[ebp+0x31]
  40c195:	dec    edi
  40c196:	push   edi
  40c197:	mov    DWORD PTR [eax],ebp
  40c199:	fmul   QWORD PTR [eax+0x73843d7d]
  40c19f:	push   0x107003b2
  40c1a4:	std    
  40c1a5:	inc    DWORD PTR [eax+eax*8+0x458d0e28]
  40c1ac:	inc    ebp
  40c1ad:	dec    esp
  40c1ae:	push   esi
  40c1af:	lea    edi,[eax-0x6b72b14c]
  40c1b5:	dec    esp
  40c1b6:	xor    al,0xe8
  40c1b8:	loopne 0x40c229
  40c1ba:	add    al,BYTE PTR [eax]
  40c1bc:	outs   dx,DWORD PTR ds:[esi]
  40c1bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c1be:	jg     0x40c187
  40c1c0:	jae    0x40c1e8
  40c1c2:	mov    esp,0xf7cee0fe
  40c1c7:	lds    eax,FWORD PTR [eax]
  40c1c9:	jmp    0x8711:0xe1ff52ca
  40c1d0:	jl     0x40c192
  40c1d2:	lar    ebx,WORD PTR [eax+0x3c]
  40c1d6:	inc    DWORD PTR ds:0x2e829400
  40c1dc:	push   0xfeb29b2c
  40c1e1:	xor    ebp,DWORD PTR [esi]
  40c1e3:	aas    
  40c1e4:	ins    BYTE PTR es:[edi],dx
  40c1e5:	sbb    eax,0xa98d23e4
  40c1ea:	jmp    0xa9d5756a
  40c1ef:	add    ch,al
  40c1f1:	pop    ecx
  40c1f2:	pop    edx
  40c1f3:	add    DWORD PTR [eax],eax
  40c1f5:	addr16 sbb al,0x7f
  40c1f8:	outs   dx,DWORD PTR ds:[esi]
  40c1f9:	add    al,BYTE PTR [edx-0x4b]
  40c1fc:	dec    edi
  40c1fd:	outs   dx,BYTE PTR ds:[esi]
  40c1fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c1ff:	test   DWORD PTR [esp+eiz*2+0x61],edi
  40c203:	stos   BYTE PTR es:[edi],al
  40c204:	cmp    ebx,DWORD PTR [edx-0x7395fd57]
  40c20a:	push   esp
  40c20b:	aas    
  40c20c:	pop    esp
  40c20d:	inc    esp
  40c20e:	pop    DWORD PTR [eax]
  40c210:	lea    edx,[ecx-0x7b]
  40c213:	pop    edx
  40c214:	call   0x435d98
  40c219:	ret    
  40c21a:	mov    esp,DWORD PTR [esi]
  40c21c:	lea    edx,[ecx+0x11]
  40c21f:	mov    ch,0x74
  40c221:	and    al,0x99
  40c223:	xchg   ebp,eax
  40c225:	pop    ds
  40c226:	xor    al,0x37
  40c228:	push   eax
  40c229:	cs gs push edi
  40c22c:	mov    eax,DWORD PTR [eax]
  40c22e:	call   0xe900:0xc669d0ff
  40c235:	adc    BYTE PTR [edi+0x11],0x36
  40c239:	mov    ebx,eax
  40c23b:	sbb    al,0x32
  40c23d:	add    DWORD PTR [ebx+0x2c0a4400],0x9403e86c
  40c247:	test   al,0xb8
  40c249:	cmp    eax,0x810f0095
  40c24e:	push   eax
  40c24f:	sub    eax,0x97c1b0
  40c254:	aaa    
  40c255:	jbe    0x40c26a
  40c257:	cld    
  40c258:	call   0xe169ac60
  40c25d:	and    dl,ah
  40c25f:	add    BYTE PTR [esi],bl
  40c261:	mov    ch,0x88
  40c263:	lock (bad) 
  40c265:	inc    ebx
  40c266:	xchg   esp,eax
  40c267:	test   ebx,esp
  40c269:	mov    ebx,0xe93de5
  40c26e:	mov    esp,ebp
  40c270:	xchg   esp,eax
  40c271:	inc    eax
  40c272:	xchg   esp,eax
  40c273:	jge    0x40c299
  40c275:	pop    es
  40c276:	pop    ds
  40c277:	mov    edx,0xd0dc501
  40c27c:	call   0xb7814e74
  40c281:	cs jmp 0x40c2d6
  40c284:	sub    cl,BYTE PTR [esi+0x1f]
  40c287:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c288:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  40c28a:	xchg   ebx,eax
  40c28b:	std    
  40c28c:	call   0x71690994
  40c291:	inc    BYTE PTR [eax]
  40c293:	shl    DWORD PTR [ecx+0x40350b90],cl
  40c299:	jmp    0xeeddb24
  40c29e:	mov    ah,0xba
  40c2a0:	test   al,0xd4
  40c2a2:	dec    ebp
  40c2a3:	xchg   ebp,eax
  40c2a4:	add    BYTE PTR [edx+0x5],dh
  40c2a7:	inc    esp
  40c2a8:	test   edi,edi
  40c2aa:	stos   DWORD PTR es:[edi],eax
  40c2ab:	vpmacsdql ymm2,ymm3,YMMWORD PTR [edi-0x68103900],ymm7
  40c2b5:	(bad)  
  40c2b6:	call   0xdb433d7
  40c2bb:	adc    eax,0x47cff384
  40c2c0:	mov    dl,0x50
  40c2c2:	pop    ds
  40c2c3:	enter  0x9c83,0xb5
  40c2c7:	and    al,0xb2
  40c2c9:	inc    cl
  40c2cb:	add    BYTE PTR [ebp+0x0],cl
  40c2ce:	jmp    0xf5b433e6
  40c2d3:	push   es
  40c2d4:	jmp    0x40c260
  40c2d6:	stos   BYTE PTR es:[edi],al
  40c2d7:	loopne 0x40c281
  40c2d9:	xchg   esp,eax
  40c2da:	xchg   BYTE PTR [edi],al
  40c2dc:	mov    dl,0xea
  40c2de:	jmp    0x40c322
  40c2e0:	jno    0x40c33c
  40c2e2:	mov    al,0x5a
  40c2e4:	std    
  40c2e5:	call   DWORD PTR [ebx]
  40c2e7:	stos   DWORD PTR es:[edi],eax
  40c2e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c2e9:	add    BYTE PTR [ebp-0x16ffffd0],0xc2
  40c2f0:	dec    edx
  40c2f1:	push   edi
  40c2f2:	mov    ds:0xe8ffffac,al
  40c2f7:	add    BYTE PTR [edx-0x7b],ah
  40c2fa:	test   ecx,0xe9402e4f
  40c300:	adc    al,0x7c
  40c302:	retf   
  40c303:	inc    edi
  40c304:	daa    
  40c305:	mov    dl,0x4f
  40c307:	es pop ebp
  40c309:	mov    eax,0x210889e9
  40c30e:	call   0xfef2fa12
  40c313:	fimul  DWORD PTR ds:0x5473bfee
  40c319:	sti    
  40c31a:	neg    ecx
  40c31c:	inc    ebx
  40c31d:	in     al,dx
  40c31e:	retf   
  40c31f:	sysret 
  40c321:	mov    dl,0x3f
  40c323:	add    BYTE PTR [esi],bh
  40c325:	add    dh,BYTE PTR fs:[ebp-0x41]
  40c329:	test   eax,0x69e646be
  40c32e:	jo     0x40c318
  40c330:	fidivr WORD PTR [esi+edi*1-0x19730f73]
  40c337:	xchg   ebx,eax
  40c338:	xchg   BYTE PTR [eax+eax*1],al
  40c33b:	adc    eax,0x68
  40c33e:	dec    BYTE PTR [eax+esi*8+0x5afffc6f]
  40c345:	push   esp
  40c346:	mov    eax,esi
  40c348:	inc    ebp
  40c349:	push   edx
  40c34b:	add    BYTE PTR [ebp-0x78],ch
  40c34e:	mov    esi,0xc52fb174
  40c353:	call   0x3f3b2e
  40c358:	(bad)  
  40c359:	jae    0x40c2e2
  40c35b:	jne    0x40c35d
  40c35d:	and    eax,0x617ef479
  40c362:	lahf   
  40c363:	cld    
  40c364:	jbe    0x40c353
  40c366:	into   
  40c367:	cld    
  40c368:	push   edi
  40c369:	stos   BYTE PTR es:[edi],al
  40c36a:	call   0x8cb15076
  40c36f:	out    0xd8,al
  40c371:	ss add al,0x0
  40c374:	test   BYTE PTR [ebp-0x17fce209],bh
  40c37a:	stos   DWORD PTR es:[edi],eax
  40c37b:	mov    esi,eax
  40c37d:	inc    edx
  40c37e:	cmp    DWORD PTR [ebx-0x18],0xf2f555
  40c385:	std    
  40c386:	xchg   DWORD PTR [esi-0x9d1068c],edi
  40c38c:	call   0x3f393f
  40c391:	jbe    0x40c37b
  40c393:	imul   ebx
  40c395:	mov    DWORD PTR [eax+0x29a5e873],0x999400f1
  40c39f:	cmc    
  40c3a0:	cmc    
  40c3a1:	addr16 dec esp
  40c3a3:	mov    bl,cl
  40c3a5:	mov    dl,0x6
  40c3a7:	mov    dl,0x69
  40c3a9:	xchg   esp,eax
  40c3aa:	mov    DWORD PTR [ecx+0x42cf6814],esi
  40c3b0:	add    BYTE PTR [edi],dl
  40c3b2:	out    0xfe,al
  40c3b4:	pop    esi
  40c3b5:	pop    ds
  40c3b6:	pop    edi
  40c3b7:	push   ecx
  40c3b8:	pop    ebx
  40c3b9:	pop    ebp
  40c3ba:	pop    ebx
  40c3bb:	pop    es
  40c3bc:	add    cl,ch
  40c3be:	and    ah,BYTE PTR [eax+0x29680080]
  40c3c4:	pop    es
  40c3c5:	add    BYTE PTR [edx+ecx*1+0x5fe575a],dl
  40c3cc:	pushf  
  40c3cd:	pop    ss
  40c3ce:	jb     0x40c446
  40c3d0:	mov    al,0x32
  40c3d2:	aas    
  40c3d3:	mov    dl,0xc3
  40c3d5:	jae    0x40c374
  40c3d7:	xor    dh,BYTE PTR [edi+eiz*8+0x28606]
  40c3de:	das    
  40c3df:	fwait
  40c3e0:	repz mov edi,0x425ea0f7
  40c3e6:	xchg   esp,eax
  40c3e7:	ret    0xec3
  40c3ea:	adc    BYTE PTR [ebp+0x38940001],ah
  40c3f0:	in     al,0xab
  40c3f2:	xlat   BYTE PTR ds:[ebx]
  40c3f3:	cdq    
  40c3f4:	pop    ecx
  40c3f5:	fbld   TBYTE PTR [ebx+0x100f0299]
  40c3fb:	push   ebp
  40c3fc:	add    al,0x0
  40c3fe:	xchg   esp,eax
  40c3ff:	add    BYTE PTR [ebx],0x8
  40c402:	xchg   esp,eax
  40c403:	cdq    
  40c404:	sub    edi,DWORD PTR ss:[ebp+ecx*2+0x7]
  40c409:	add    BYTE PTR [ecx+edx*2-0xa1c1335],dl
  40c410:	in     al,dx
  40c411:	ret    0xc860
  40c414:	scas   eax,DWORD PTR es:[edi]
  40c415:	xor    al,0xd0
  40c417:	call   FWORD PTR [edx+0x45]
  40c41a:	xchg   esp,eax
  40c41b:	jnp    0x40c435
  40c41d:	pushf  
  40c41e:	cmp    al,0xe6
  40c420:	out    0x3,eax
  40c422:	cmpxchg BYTE PTR [ecx],al
  40c425:	push   es
  40c426:	add    BYTE PTR [edi-0x4a],ah
  40c429:	inc    edi
  40c42a:	cld    
  40c42b:	inc    DWORD PTR [edx-0x17]
  40c42e:	fwait
  40c42f:	idiv   BYTE PTR [ebx-0x19]
  40c432:	add    esp,DWORD PTR [edx-0x29a036fc]
  40c438:	add    BYTE PTR [ecx],cl
  40c43a:	cmp    BYTE PTR [edi+0x7e379b7b],bl
  40c440:	scas   al,BYTE PTR es:[edi]
  40c441:	aad    0x9b
  40c443:	mov    eax,ds:0x6ab0cdae
  40c448:	add    al,0x9
  40c44a:	pusha  
  40c44b:	(bad)  
  40c44c:	add    cl,ch
  40c44e:	add    dl,BYTE PTR [eax+eax*1-0x13f0eac3]
  40c455:	loopne 0x40c4b6
  40c457:	(bad)  
  40c458:	add    BYTE PTR [edx],bh
  40c45a:	push   ebp
  40c45b:	mov    esp,0x9442da16
  40c460:	push   ecx
  40c461:	and    DWORD PTR [eax-0x4616ffce],0x4454e098
  40c46b:	xchg   esp,eax
  40c46c:	inc    eax
  40c46d:	cmc    
  40c46e:	aas    
  40c46f:	scas   al,BYTE PTR es:[edi]
  40c470:	cld    
  40c471:	xor    BYTE PTR [esi],0x29
  40c474:	scas   al,BYTE PTR es:[edi]
  40c475:	ins    DWORD PTR es:[edi],dx
  40c476:	jo     0x40c47b
  40c478:	jnp    0x40c422
  40c47a:	add    ecx,edi
  40c47c:	rcl    esp,0xff
  40c47f:	or     al,0xe9
  40c481:	pusha  
  40c482:	dec    ebx
  40c483:	nop
  40c484:	ja     0x40c436
  40c486:	sti    
  40c487:	push   ds
  40c488:	mov    cl,0x51
  40c48a:	add    eax,0x87b6a700
  40c48f:	sti    
  40c490:	das    
  40c491:	inc    edx
  40c492:	add    cl,ch
  40c494:	(bad)  
  40c495:	out    dx,al
  40c496:	mov    ebp,eax
  40c498:	xchg   edi,eax
  40c499:	sbb    cl,BYTE PTR [ecx+edx*1]
  40c49c:	mov    bl,BYTE PTR [ebx-0x3d4fe102]
  40c4a2:	jae    0x40c488
  40c4a4:	ds cmc 
  40c4a6:	lds    ebp,FWORD PTR [ecx-0x5e770065]
  40c4ac:	scas   eax,DWORD PTR es:[edi]
  40c4ad:	jp     0x40c49e
  40c4af:	adc    bl,BYTE PTR [ecx-0x60b70a0f]
  40c4b5:	pop    ecx
  40c4b6:	inc    edx
  40c4b7:	jmp    0xe8ccceeb
  40c4bc:	xchg   edi,eax
  40c4bd:	mov    dh,0x4
  40c4bf:	or     esp,esi
  40c4c1:	inc    edx
  40c4c2:	add    BYTE PTR [ecx-0x44],ch
  40c4c5:	stc    
  40c4c6:	mov    bl,ah
  40c4c8:	outs   dx,DWORD PTR ds:[esi]
  40c4c9:	pop    ecx
  40c4ca:	inc    edx
  40c4cb:	jmp    0xeb51fcdf
  40c4d0:	xchg   edi,eax
  40c4d1:	call   0xdfe4a632
  40c4d6:	mov    dh,ah
  40c4d8:	dec    edi
  40c4d9:	pop    ecx
  40c4da:	inc    edx
  40c4db:	jmp    0xe928b60f
  40c4e0:	xchg   edi,eax
  40c4e1:	pop    edi
  40c4e2:	pop    es
  40c4e3:	inc    ebp
  40c4e4:	xlat   BYTE PTR ds:[ebx]
  40c4e5:	add    BYTE PTR [ebx+0x73c23f99],cl
  40c4eb:	repnz (bad)
  40c4ee:	in     eax,0xe8
  40c4f0:	add    BYTE PTR [edi-0xb2017aa],dl
  40c4f6:	lods   eax,DWORD PTR ds:[esi]
  40c4f7:	dec    BYTE PTR [esi]
  40c4f9:	bound  ecx,QWORD PTR [ecx-0x37]
  40c4fc:	sub    ebx,DWORD PTR [eax+eax*1-0x7fcb8dab]
  40c503:	jmp    0x40c4ea
  40c505:	xchg   ebp,eax
  40c506:	add    BYTE PTR [eax],al
  40c508:	pop    esp
  40c509:	pop    ebp
  40c50a:	clc    
  40c50b:	dec    edi
  40c50c:	add    BYTE PTR [edx-0x19],dl
  40c50f:	pop    es
  40c510:	(bad)  
  40c511:	cmp    BYTE PTR [esi-0x2],bl
  40c514:	(bad)  
  40c515:	mov    eax,0xbd401004
  40c51a:	ja     0x40c4da
  40c51c:	je     0x40c542
  40c51e:	push   edx
  40c51f:	push   edi
  40c520:	jmp    FWORD PTR [eax]
  40c522:	test   eax,0xac04b9
  40c527:	add    BYTE PTR [eax+0x1d],ch
  40c52a:	cmc    
  40c52b:	aas    
  40c52c:	add    BYTE PTR [eax],ah
  40c52e:	das    
  40c52f:	repz std 
  40c531:	mov    ds:0xddb4e65d,al
  40c536:	add    BYTE PTR [eax],al
  40c538:	pop    ecx
  40c539:	and    al,0x79
  40c53b:	mov    esi,0xd80cb37e
  40c540:	je     0x40c4ef
  40c542:	add    al,0x8b
  40c544:	(bad)  
  40c545:	mov    ebp,0x7d00011c
  40c54a:	and    dh,0x45
  40c54d:	or     BYTE PTR ds:0xf42d8500,al
  40c553:	daa    
  40c554:	add    DWORD PTR [eax],0x25
  40c557:	pop    ebx
  40c558:	jb     0x40c57d
  40c55a:	mov    dh,0xc2
  40c55c:	dec    esi
  40c55d:	dec    DWORD PTR [eax-0x1c]
  40c560:	adc    al,BYTE PTR [eax+0x2d]
  40c563:	dec    edi
  40c564:	push   DWORD PTR [ebp+0x31]
  40c567:	daa    
  40c568:	(bad)  
  40c569:	push   eax
  40c56a:	and    cl,BYTE PTR [ecx]
  40c56c:	inc    esp
  40c56d:	adc    DWORD PTR [ebp+0x4],edi
  40c570:	dec    eax
  40c571:	lea    esp,[esi+0x5b]
  40c574:	cmp    eax,ecx
  40c576:	inc    edi
  40c577:	sar    ah,0xc0
  40c57a:	jne    0x40c5b4
  40c57c:	(bad)  
  40c57d:	(bad)  
  40c57e:	call   0x1556c32a
  40c583:	adc    al,BYTE PTR [eax+0x0]
  40c586:	xchg   esp,eax
  40c587:	jb     0x40c5d2
  40c589:	mov    bl,BYTE PTR [ecx+0x3a]
  40c58c:	mov    esp,0x57999cc1
  40c591:	mov    esi,eax
  40c593:	push   ss
  40c594:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c595:	imul   DWORD PTR [esi-0x6a]
  40c598:	call   0xd483:0xaddacba5
  40c59f:	lea    edx,[edx]
  40c5a1:	push   0xffffff94
  40c5a3:	adc    DWORD PTR ds:0x9b12bbfe,ecx
  40c5a9:	(bad)  
  40c5aa:	push   esp
  40c5ab:	cdq    
  40c5ac:	add    dh,BYTE PTR [eax+0x32010e95]
  40c5b2:	aam    0x2e
  40c5b4:	test   al,0x5c
  40c5b6:	xlat   BYTE PTR ds:[ebx]
  40c5b7:	add    edi,edx
  40c5b9:	inc    BYTE PTR [eax]
  40c5bb:	xchg   ebx,eax
  40c5bc:	call   0x19:0xfc00bf85
  40c5c3:	xor    DWORD PTR [edx+edx*8+0x6999d411],0x4c
  40c5cb:	into   
  40c5cc:	cdq    
  40c5cd:	add    ah,BYTE PTR [esi-0x53]
  40c5d0:	mov    cl,0x35
  40c5d2:	adc    al,0xf
  40c5d4:	icebp  
  40c5d5:	out    dx,eax
  40c5d6:	sbb    BYTE PTR [eax-0x6bbaad68],0x99
  40c5dd:	xor    eax,0x2f51f08
  40c5e2:	sub    BYTE PTR [edi-0x781f538f],dl
  40c5e8:	pop    ecx
  40c5e9:	shl    bh,0xf6
  40c5ec:	jns    0x40c59a
  40c5ee:	(bad)  
  40c5ef:	addr16 pop ecx
  40c5f1:	rol    DWORD PTR [ebx],0x94
  40c5f4:	adc    al,0x79
  40c5f6:	jmp    0x40c60f
  40c5f8:	test   DWORD PTR [ebx],ebx
  40c5fa:	push   ebx
  40c5fb:	push   0x67
  40c5fd:	(bad)  
  40c5fe:	push   cs
  40c5ff:	inc    edx
  40c600:	add    BYTE PTR [edx+0x1a],bl
  40c603:	xchg   esi,eax
  40c604:	jge    0x40c5a9
  40c606:	mov    ecx,DWORD PTR [ebx+0x7d]
  40c609:	sbb    al,0x77
  40c60b:	out    dx,eax
  40c60c:	xor    ebp,DWORD PTR [ecx+0x50f1eb03]
  40c612:	in     al,dx
  40c613:	fsubr  QWORD PTR [edx-0x77af80c3]
  40c619:	cwde   
  40c61a:	fwait
  40c61b:	(bad)  
  40c61c:	or     eax,0x100003eb
  40c621:	rcr    BYTE PTR [ebx+0x6c012de6],0x47
  40c628:	sbb    al,0x50
  40c62a:	push   ss
  40c62b:	idiv   BYTE PTR [ebx-0x5552eff7]
  40c631:	jl     0x40c5de
  40c633:	mov    edx,DWORD PTR [ebx-0x68]
  40c636:	retf   0x960e
  40c639:	add    BYTE PTR [ebp-0x3c],ch
  40c63c:	or     dh,dh
  40c63e:	out    dx,al
  40c63f:	ror    BYTE PTR [ebx],0xa6
  40c642:	jmp    0x40c675
  40c644:	aas    
  40c645:	dec    ebx
  40c646:	inc    edx
  40c647:	mov    ebx,0x98e77156
  40c64c:	imul   edx,DWORD PTR [edx+eiz*2-0x61],0x16
  40c651:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c652:	rol    BYTE PTR [edx+0x3f1e56f],0x94
  40c659:	dec    ebp
  40c65a:	pop    ds
  40c65b:	push   ebp
  40c65c:	push   ebx
  40c65d:	hlt    
  40c65e:	sub    al,0x60
  40c660:	(bad)  
  40c661:	add    BYTE PTR [edi+esi*1+0x78],dh
  40c665:	or     al,0xa7
  40c667:	inc    edi
  40c668:	jo     0x40c677
  40c66a:	jmp    0xe7d8860a
  40c66f:	add    edx,DWORD PTR [eax]
  40c671:	sar    esp,0xdd
  40c674:	push   cs
  40c675:	inc    ebp
  40c676:	lds    ecx,FWORD PTR [edi]
  40c678:	sbb    esi,DWORD PTR ds:0x7b9fcd00
  40c67e:	jae    0x40c645
  40c680:	mov    ds:0xd4377,eax
  40c685:	pushf  
  40c686:	cwde   
  40c687:	or     eax,0x8aab285d
  40c68c:	push   ecx
  40c68d:	outs   dx,BYTE PTR ds:[esi]
  40c68e:	and    eax,0xab12f524
  40c693:	je     0x40c682
  40c695:	idiv   BYTE PTR ds:0x3d5ad924
  40c69b:	and    al,0xd1
  40c69d:	das    
  40c69e:	shr    al,cl
  40c6a0:	call   0x72445c3c
  40c6a5:	jae    0x40c68b
  40c6a7:	adc    ebp,DWORD PTR [eax+0x6b]
  40c6aa:	in     al,0xf
  40c6ac:	pop    es
  40c6ad:	xchg   esi,eax
  40c6ae:	add    BYTE PTR [eax],al
  40c6b0:	ficom  WORD PTR [edx]
  40c6b2:	jecxz  0x40c6b4
  40c6b4:	jmp    0x92291850
  40c6b9:	mov    ecx,0x576cffff
  40c6be:	cli    
  40c6bf:	sbb    DWORD PTR [edi-0x6b],0x0
  40c6c3:	add    BYTE PTR [ebx-0x67],dl
  40c6c6:	jnp    0x40c70b
  40c6c8:	add    eax,0x196850b4
  40c6cd:	mov    DWORD PTR [eax-0x57433ec9],edx
  40c6d3:	inc    dh
  40c6d5:	fnstsw WORD PTR ds:0x16c04924
  40c6db:	add    DWORD PTR [ecx-0x20],eax
  40c6de:	pop    esp
  40c6df:	inc    edx
  40c6e0:	jmp    0xf898dae3
  40c6e5:	xlat   BYTE PTR ds:[ebx]
  40c6e6:	add    BYTE PTR [ebx-0x4ceaff67],cl
  40c6ec:	push   cs
  40c6ed:	ins    DWORD PTR es:[edi],dx
  40c6ee:	jns    0x40c6ee
  40c6f0:	(bad)  
  40c6f1:	call   0x58daf4
  40c6f6:	cmp    al,0x3d
  40c6f8:	add    BYTE PTR [ebx+0x40111d38],cl
  40c6fe:	std    
  40c6ff:	xchg   edi,eax
  40c700:	mov    ch,0x0
  40c702:	std    
  40c703:	cld    
  40c704:	je     0x40c70b
  40c706:	inc    ebx
  40c707:	push   esi
  40c708:	shl    DWORD PTR [ebx],1
  40c70a:	arpl   WORD PTR [edi-0xc],di
  40c70d:	jno    0xfd40c956
  40c713:	test   BYTE PTR [ebp-0x6b],bh
  40c716:	in     eax,dx
  40c717:	cld    
  40c718:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c719:	and    BYTE PTR [ecx],ah
  40c71b:	inc    BYTE PTR [edx+0x42489d0d]
  40c721:	add    ch,ch
  40c723:	daa    
  40c724:	and    DWORD PTR [ecx+ecx*4],0x4
  40c728:	add    BYTE PTR [eax],al
  40c72a:	std    
  40c72b:	test   BYTE PTR [esi-0x7c03426b],dl
  40c731:	rol    BYTE PTR [eax],0xe5
  40c734:	mov    WORD PTR [ecx+edx*8-0x52fffd04],?
  40c73b:	test   BYTE PTR [eax],ch
  40c73d:	sti    
  40c73e:	mov    bl,BYTE PTR [ebx+0x64]
  40c741:	cmp    DWORD PTR [ecx+0x6d06dea0],0x4
  40c748:	add    BYTE PTR [ebx+edx*4+0x6],dh
  40c74c:	adc    eax,0xc7f1008d
  40c751:	loop   0x40c759
  40c753:	jge    0x40c759
  40c755:	lea    ecx,[ecx+edx*4-0x6c]
  40c759:	out    0x4f,al
  40c75b:	(bad)  
  40c75c:	cld    
  40c75d:	dec    DWORD PTR [ecx+eax*4-0x5afcd60]
  40c764:	adc    BYTE PTR [eax-0x730392ee],al
  40c76a:	dec    esp
  40c76b:	push   ecx
  40c76c:	cwde   
  40c76d:	add    eax,eax
  40c76f:	xchg   esp,eax
  40c770:	call   0x99fecb13
  40c775:	cmc    
  40c776:	mov    edi,0xba9a9bae
  40c77b:	push   es
  40c77c:	call   0x3:0x8937e802
  40c783:	add    bl,BYTE PTR [ebp-0x66a8541e]
  40c789:	adc    dh,BYTE PTR [ecx+ecx*4-0x2f]
  40c78d:	add    al,BYTE PTR [eax]
  40c78f:	xchg   esp,eax
  40c790:	sbb    DWORD PTR ds:0x76aceb14,ebx
  40c796:	adc    edx,DWORD PTR [ecx+ebx*4+0x1c]
  40c79a:	add    DWORD PTR [ecx],ecx
  40c79c:	pop    esi
  40c79d:	fisub  WORD PTR [ebx+0x64]
  40c7a0:	shr    ecx,0x52
  40c7a3:	push   edi
  40c7a4:	add    ebx,DWORD PTR [edx+ebp*4-0x73562135]
  40c7ab:	push   eax
  40c7ac:	mov    ebp,0x993e5022
  40c7b1:	sbb    al,0x2
  40c7b3:	add    BYTE PTR [ebx+0x54115aac],ch
  40c7b9:	cdq    
  40c7ba:	jge    0x40c7b3
  40c7bc:	adc    DWORD PTR [edi-0x5114f5d3],esp
  40c7c2:	push   cs
  40c7c3:	aam    0xa6
  40c7c5:	pop    ecx
  40c7c6:	add    dl,BYTE PTR [edi-0x7d]
  40c7c9:	push   0x1d
  40c7cb:	add    DWORD PTR [esi+eax*8-0x54],ebp
  40c7cf:	(bad)  
  40c7d0:	jae    0x40c7b9
  40c7d2:	rol    DWORD PTR [ebx-0x50],0xaa
  40c7d6:	add    edi,edi
  40c7d8:	inc    edi
  40c7d9:	xor    ch,BYTE PTR [eax]
  40c7db:	and    al,0x80
  40c7dd:	shr    BYTE PTR [esi],1
  40c7df:	add    DWORD PTR [ecx+ebx*4-0x368f847d],edx
  40c7e6:	adc    cl,BYTE PTR [edi]
  40c7e8:	sbb    DWORD PTR [eax],eax
  40c7ea:	adc    eax,DWORD PTR [ebx]
  40c7ec:	xchg   esp,eax
  40c7ed:	add    BYTE PTR [ebx],dl
  40c7ef:	push   es
  40c7f0:	mov    esp,0x127add2b
  40c7f5:	cwde   
  40c7f6:	jno    0x40c7a9
  40c7f8:	and    ah,BYTE PTR [edi+0x1070406f]
  40c7fe:	les    esp,FWORD PTR fs:[edx-0x6bfcd884]
  40c805:	add    BYTE PTR [eax+eax*4-0x49],bl
  40c809:	add    dl,ch
  40c80b:	add    edx,DWORD PTR [eax+edx*2+0x22fbcd1b]
  40c812:	xor    al,BYTE PTR [ebx]
  40c814:	xchg   esp,eax
  40c815:	jl     0x40c83f
  40c817:	xor    BYTE PTR [eax],al
  40c819:	xchg   esi,eax
  40c81a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c81b:	sub    DWORD PTR [ebx-0x49],esp
  40c81e:	push   esp
  40c81f:	test   eax,0x360e3e03
  40c824:	hlt    
  40c825:	retf   0xe90c
  40c828:	adc    edx,DWORD PTR [eax+eax*1+0x6a]
  40c82c:	lods   al,BYTE PTR ds:[esi]
  40c82d:	xchg   esp,eax
  40c82e:	sub    eax,0xd4ee9bef
  40c833:	jmp    0xacf8:0xc53c1c03
  40c83a:	add    al,ch
  40c83c:	add    edx,DWORD PTR [eax+eax*4-0x2bf6fcff]
  40c843:	cmc    
  40c844:	xor    BYTE PTR [ecx+edi*2+0x422fefcb],bl
  40c84b:	jmp    0xf9598af8
  40c850:	xchg   ebp,eax
  40c851:	aad    0x0
  40c853:	shl    eax,0xc4
  40c856:	add    cl,ch
  40c858:	test   al,0xe8
  40c85a:	clc    
  40c85b:	jae    0x40c7ec
  40c85d:	mov    bh,0xa4
  40c85f:	call   0xffb45c67
  40c864:	imul   eax,DWORD PTR fs:[edx],0x3
  40c868:	jmp    0xc5956104
  40c86d:	xchg   esi,eax
  40c86e:	add    bl,ch
  40c870:	into   
  40c871:	vmread esp,edi
  40c874:	xchg   esi,eax
  40c875:	cld    
  40c876:	cmp    DWORD PTR [edi-0x405d22],0xa59700e8
  40c880:	jbe    0x40c873
  40c882:	nop
  40c883:	add    al,0x34
  40c885:	inc    ebp
  40c886:	push   eax
  40c887:	add    bh,bh
  40c889:	test   BYTE PTR [ebx],0x1e
  40c88c:	cmp    ecx,DWORD PTR [eax+0x51]
  40c88f:	add    al,ch
  40c891:	dec    ebp
  40c892:	inc    edi
  40c893:	add    BYTE PTR [eax],al
  40c895:	fs arpl cx,sp
  40c898:	imul   ecx
  40c89a:	xchg   edi,eax
  40c89b:	add    al,ch
  40c89d:	mov    dh,0xb8
  40c89f:	(bad)  
  40c8a0:	push   DWORD PTR [eax-0x6d]
  40c8a3:	fmul   QWORD PTR [esi]
  40c8a5:	cmc    
  40c8a6:	xchg   esi,eax
  40c8a7:	cmc    
  40c8a8:	test   BYTE PTR [ebp-0x69],dl
  40c8ab:	add    BYTE PTR [eax],al
  40c8ad:	je     0x40c92a
  40c8af:	fsub   QWORD PTR [ebx]
  40c8b1:	mov    ecx,0x8152caa8
  40c8b6:	pop    ss
  40c8b7:	pop    edx
  40c8b8:	inc    edx
  40c8b9:	jmp    0xcdc43c06
  40c8be:	lahf   
  40c8bf:	add    BYTE PTR [eax],al
  40c8c1:	jmp    0x3d061ad
  40c8c6:	xchg   edi,eax
  40c8c7:	add    BYTE PTR [ebp+0x438c7c29],al
  40c8cd:	or     eax,0x55bed83
  40c8d2:	imul   esi,DWORD PTR [ecx],0x6c
  40c8d5:	inc    ebx
  40c8d6:	xchg   ecx,eax
  40c8d7:	jae    0x40c91c
  40c8d9:	add    eax,0x6850b4
  40c8de:	xchg   edx,eax
  40c8df:	push   ecx
  40c8e0:	inc    ebx
  40c8e1:	sub    al,BYTE PTR [eax]
  40c8e3:	gs lock cmc 
  40c8e6:	inc    DWORD PTR [edx]
  40c8e8:	daa    
  40c8e9:	inc    ebx
  40c8ea:	and    al,0xcd
  40c8ec:	dec    esp
  40c8ed:	push   ebx
  40c8ee:	push   0x2c
  40c8f0:	or     DWORD PTR [eax-0x54],ebx
  40c8f3:	jle    0x40c8f1
  40c8f5:	(bad)  
  40c8f6:	adc    eax,0x4012c5
  40c8fb:	mov    dh,0xf0
  40c8fd:	and    esp,DWORD PTR [esp+eiz*4]
  40c900:	inc    eax
  40c901:	and    al,0x18
  40c903:	test   al,dh
  40c905:	and    ebx,DWORD PTR [edi+edx*4]
  40c908:	pop    ebp
  40c909:	cmp    ebx,eax
  40c90b:	or     BYTE PTR [esp+edx*2+0x1310f8ff],ah
  40c912:	inc    eax
  40c913:	std    
  40c914:	mov    DWORD PTR [ebx+edx*2],ecx
  40c917:	jo     0x40c959
  40c919:	and    al,0x20
  40c91b:	sbb    eax,0xb8ff0207
  40c920:	adc    al,0x11
  40c922:	inc    eax
  40c923:	mov    ebp,0xefa03c29
  40c928:	inc    eax
  40c929:	add    BYTE PTR [ecx],bh
  40c92b:	adc    ebp,eax
  40c92d:	push   ss
  40c92e:	je     0x40c8db
  40c930:	pop    ebp
  40c931:	jb     0x40c957
  40c933:	xchg   ebp,eax
  40c934:	pop    ebp
  40c935:	aad    0xff
  40c937:	or     ebp,eax
  40c939:	jmp    FWORD PTR es:[edx+0x36]
  40c93d:	call   edi
  40c93f:	fsub   DWORD PTR es:[ebx]
  40c942:	adc    al,0x92
  40c944:	aam    0x23
  40c946:	adc    BYTE PTR [eax],al
  40c948:	xchg   ebp,eax
  40c949:	test   eax,0x806d0218
  40c94e:	jnp    0x40c95c
  40c950:	ins    BYTE PTR es:[edi],dx
  40c951:	icebp  
  40c952:	or     bh,bh
  40c954:	mov    al,bl
  40c956:	stos   DWORD PTR es:[edi],eax
  40c957:	inc    ebx
  40c958:	xchg   esp,eax
  40c959:	cdq    
  40c95a:	call   0x6c57:0x29a6f9a
  40c961:	jl     0x40c8fd
  40c963:	(bad)  
  40c964:	push   ebx
  40c965:	xor    BYTE PTR [edi],bh
  40c967:	and    al,0x9b
  40c969:	or     al,BYTE PTR [esi+0x5b]
  40c96c:	bsr    eax,DWORD PTR [edi-0x3e]
  40c970:	mov    WORD PTR [ecx-0x16bf74b1],ds
  40c976:	push   edx
  40c977:	push   esi
  40c978:	or     DWORD PTR [si+0x32],0x3f
  40c97d:	adc    cl,0xf2
  40c980:	sbb    edi,DWORD PTR [ebx+0x7e]
  40c983:	mov    edi,0xffc61da3
  40c988:	or     ebx,DWORD PTR [edx+0x199b684d]
  40c98e:	add    eax,DWORD PTR [eax]
  40c990:	sti    
  40c991:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c992:	(bad)  
  40c993:	adc    DWORD PTR [ecx+ebx*4+0x77],edx
  40c997:	inc    esp
  40c998:	call   0xe41bbb06
  40c99d:	lods   al,BYTE PTR ds:[esi]
  40c99e:	mov    ds:0x52995411,al
  40c9a3:	jmp    FWORD PTR [ecx-0x6bbfeeab]
  40c9a9:	push   ds
  40c9aa:	stos   DWORD PTR es:[edi],eax
  40c9ab:	cmp    al,BYTE PTR [eax]
  40c9ad:	ret    0x486d
  40c9b0:	cmp    DWORD PTR [ecx-0x23],ebx
  40c9b3:	and    al,0x4e
  40c9b5:	pop    ds
  40c9b6:	sahf   
  40c9b7:	ins    DWORD PTR es:[edi],dx
  40c9b8:	test   ah,dl
  40c9ba:	test   DWORD PTR [ebx+0x66],eax
  40c9bd:	pop    ss
  40c9be:	rcl    bh,cl
  40c9c0:	je     0x40ca21
  40c9c2:	stos   BYTE PTR es:[edi],al
  40c9c3:	ins    DWORD PTR es:[edi],dx
  40c9c4:	inc    edi
  40c9c5:	xchg   esi,eax
  40c9c6:	push   ss
  40c9c7:	pushf  
  40c9c8:	add    BYTE PTR gs:[ebx+0x2d8ce881],bh
  40c9cf:	loopne 0x40c953
  40c9d1:	ins    DWORD PTR es:[edi],dx
  40c9d2:	add    dh,ch
  40c9d4:	das    
  40c9d5:	pushf  
  40c9d6:	cmp    DWORD PTR [edi+ebx*8+0x16],edx
  40c9da:	mov    bh,0xea
  40c9dc:	cwde   
  40c9dd:	cmp    DWORD PTR [edi-0x58],0x0
  40c9e1:	bnd jg 0x40c9e4
  40c9e4:	add    al,0xc8
  40c9e6:	or     ebx,DWORD PTR [ecx]
  40c9e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c9e9:	mov    al,ds:0x9443df40
  40c9ee:	dec    ecx
  40c9ef:	mov    al,BYTE PTR [eax]
  40c9f1:	pop    es
  40c9f2:	aas    
  40c9f3:	jmp    0xb1c06590
  40c9f8:	adc    al,0x3f
  40c9fa:	jmp    FWORD PTR [ecx-0x47]
  40c9fd:	fwait
  40c9fe:	cmp    dl,dl
  40ca00:	sbb    BYTE PTR cs:[ebx+edi*1],ah
  40ca04:	dec    ebp
  40ca05:	adc    ecx,DWORD PTR ds:0x541261
  40ca0b:	push   ss
  40ca0c:	scas   al,BYTE PTR es:[edi]
  40ca0d:	(bad)  
  40ca0e:	std    
  40ca0f:	hlt    
  40ca10:	loopne 0x40ca12
  40ca12:	repz and eax,0x9894031f
  40ca18:	shr    DWORD PTR [esi],1
  40ca1a:	xchg   ebp,eax
  40ca1b:	add    BYTE PTR [edi-0x1],bl
  40ca1e:	adc    DWORD PTR [ecx+ebp*4+0x3],0xffffff90
  40ca23:	jbe    0x40ca45
  40ca25:	xor    BYTE PTR [eax+0x636be916],al
  40ca2b:	push   0xcaac03a9
  40ca30:	hlt    
  40ca31:	add    dl,BYTE PTR [edi+edx*4-0x3f2986fa]
  40ca38:	adc    BYTE PTR [eax],al
  40ca3a:	mov    ds:0x9302cccf,al
  40ca3f:	push   0x28
  40ca41:	ret    
  40ca42:	scas   al,BYTE PTR es:[edi]
  40ca43:	(bad)  
  40ca44:	cwde   
  40ca45:	xor    DWORD PTR [esi+0x0],0xffffffee
  40ca49:	ins    DWORD PTR es:[edi],dx
  40ca4a:	push   esi
  40ca4b:	push   ecx
  40ca4c:	add    BYTE PTR [ecx],al
  40ca4e:	mov    ah,BYTE PTR [esi-0x36021102]
  40ca54:	add    edx,0xffffffc3
  40ca57:	or     esi,esi
  40ca59:	in     al,0x77
  40ca5b:	push   esi
  40ca5c:	inc    edx
  40ca5d:	jmp    0x434cf6f7
  40ca62:	xor    DWORD PTR [ebx+0x40a5b114],esp
  40ca68:	add    BYTE PTR [edi],bl
  40ca6a:	fnsave [edi+0x7e57fac2]
  40ca70:	fcmovu st,st(6)
  40ca72:	or     esp,DWORD PTR [edx+0x4f]
  40ca75:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ca76:	add    BYTE PTR [edx-0x6fd6ee64],ah
  40ca7c:	mov    ah,0xaf
  40ca7e:	call   0x6240bcd8
  40ca83:	leave  
  40ca84:	and    al,0x85
  40ca86:	fwait
  40ca87:	ret    
  40ca88:	or     BYTE PTR [ebx+0x4d75a827],cl
  40ca8e:	or     eax,0x81515066
  40ca93:	xor    eax,0xfce8ffa0
  40ca98:	cmp    ebp,DWORD PTR [eax-0x2b]
  40ca9b:	jmp    0x8b18:0xa160292a
  40caa2:	addr16 pop ss
  40caa4:	mov    ds:0x6152e9fe,al
  40caa9:	jae    0x40ca8b
  40caab:	dec    esp
  40caac:	jae    0x40ca31
  40caae:	jmp    0x9897cb4a
  40cab3:	inc    edx
  40cab4:	and    esp,DWORD PTR [ecx+edi*4-0x8]
  40cab8:	sub    al,BYTE PTR [ecx+edx*1]
  40cabb:	jns    0x40ca58
  40cabd:	(bad)  
  40cabe:	call   0x9600461b
  40cac3:	xchg   esp,eax
  40cac4:	jo     0x40cac6
  40cac6:	add    BYTE PTR [esi+0x20c3beaf],bh
  40cacc:	sub    bl,ch
  40cace:	mov    esi,DWORD PTR [eax]
  40cad0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cad1:	push   ecx
  40cad2:	push   esi
  40cad3:	imul   BYTE PTR [esi+0x55]
  40cad6:	cmp    eax,ebx
  40cad8:	in     al,0xe
  40cada:	test   DWORD PTR [eax],eax
  40cadc:	jp     0x40cada
  40cade:	(bad)  
  40cadf:	(bad)  
  40cae0:	out    dx,al
  40cae1:	fidiv  WORD PTR [ebx+0x0]
  40cae4:	cmp    bh,BYTE PTR [ecx+0x3]
  40cae7:	add    DWORD PTR ds:0x6d7d8afd,edi
  40caed:	jb     0x40cb32
  40caef:	adc    al,0xb6
  40caf1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40caf2:	xchg   DWORD PTR [ebp+0x35],edi
  40caf5:	push   esp
  40caf6:	mov    DWORD PTR [eax],0xff52fd3d
  40cafc:	xor    ah,0x8c
  40caff:	inc    esi
  40cb00:	inc    ebp
  40cb01:	in     eax,dx
  40cb02:	mov    WORD PTR [esi+0x25],es
  40cb05:	push   ebp
  40cb06:	cmp    edi,ebp
  40cb08:	cld    
  40cb09:	cld    
  40cb0a:	add    BYTE PTR [ebp+0x5],al
  40cb0d:	xchg   edx,eax
  40cb0e:	(bad)  
  40cb0f:	mov    dh,BYTE PTR [ebx+0x17f22ad]
  40cb15:	cmc    
  40cb16:	cmp    ebx,DWORD PTR [ebx]
  40cb18:	jmp    0x83fc:0xfd00cb77
  40cb1f:	sar    dl,0x78
  40cb22:	fwait
  40cb23:	add    ch,ch
  40cb25:	cld    
  40cb26:	mov    al,BYTE PTR [esi+0x11]
  40cb29:	xor    eax,0x350c7448
  40cb2e:	dec    eax
  40cb2f:	wrmsr  
  40cb31:	js     0x40cb31
  40cb33:	jmp    FWORD PTR [ebp-0x5597bb3d]
  40cb39:	js     0x40cae6
  40cb3b:	add    BYTE PTR [ebp+0xff52fc],bh
  40cb41:	xchg   esp,eax
  40cb42:	test   BYTE PTR [edx],cl
  40cb44:	push   edi
  40cb45:	fwait
  40cb46:	stos   DWORD PTR es:[edi],eax
  40cb47:	rcl    BYTE PTR ds:0x448da9d4,cl
  40cb4d:	mov    al,ds:0xd0bc82a
  40cb52:	mov    dl,0x8b
  40cb54:	jl     0x40cae2
  40cb56:	add    edi,ebp
  40cb58:	(bad)  
  40cb59:	jae    0x40cb02
  40cb5b:	xchg   BYTE PTR [edi-0x72da65],bh
  40cb61:	arpl   WORD PTR [edx+0x5009012c],bp
  40cb67:	sub    BYTE PTR [eax-0x5c],ch
  40cb6a:	fadd   QWORD PTR [ebx+0x0]
  40cb6d:	dec    ebx
  40cb6e:	xlat   BYTE PTR ds:[ebx]
  40cb6f:	pop    es
  40cb70:	call   0x4399cd
  40cb75:	adc    DWORD PTR [edx+0x16],ebp
  40cb78:	je     0x40cbad
  40cb7a:	add    BYTE PTR [ebx+ecx*4],ah
  40cb7d:	shl    cl,cl
  40cb7f:	mov    ds:0xfa22c075,al
  40cb84:	mov    cl,cl
  40cb86:	mov    ebp,0xaa1850aa
  40cb8b:	add    al,BYTE PTR [esp+edx*8+0x7b833f95]
  40cb92:	lods   eax,DWORD PTR ds:[esi]
  40cb93:	add    cl,BYTE PTR [ebx+0x45c9b979]
  40cb99:	push   0x940002ac
  40cb9e:	xor    bh,dh
  40cba0:	mov    bl,BYTE PTR [edx-0x4f]
  40cba3:	in     eax,dx
  40cba4:	mov    BYTE PTR [eax],0x60
  40cba7:	xchg   ebp,eax
  40cba8:	mov    eax,ds:0x50123475
  40cbad:	or     al,0xcb
  40cbaf:	push   edi
  40cbb0:	ds mov ebp,ebx
  40cbb3:	inc    ecx
  40cbb4:	jmp    0x86ea603c
  40cbb9:	mov    edi,0x2ddb0028
  40cbbe:	xchg   esp,eax
  40cbbf:	lea    ebp,[esi-0x18684405]
  40cbc5:	add    eax,0x12318594
  40cbca:	sbb    edi,ebp
  40cbcc:	add    eax,0xa68b8aa2
  40cbd1:	pop    ss
  40cbd2:	pop    ss
  40cbd3:	cwde   
  40cbd4:	out    0x21,eax
  40cbd6:	mov    es,WORD PTR [ebx+0x5f107f0]
  40cbdc:	jb     0x40cc25
  40cbde:	and    cl,0x0
  40cbe1:	pop    esp
  40cbe2:	add    edi,edi
  40cbe4:	call   0x41876aec
  40cbe9:	(bad)  
  40cbea:	adc    ebx,DWORD PTR [esi-0x2d6e5258]
  40cbf0:	test   al,0xad
  40cbf2:	xchg   ebp,eax
  40cbf3:	push   eax
  40cbf4:	out    0x40,eax
  40cbf6:	fidivr DWORD PTR [ebx]
  40cbf8:	or     al,0xc6
  40cbfa:	mov    ds:0x6bc3da00,eax
  40cbff:	mov    DWORD PTR [edi],esp
  40cc01:	xor    BYTE PTR [edi+0x36],dl
  40cc04:	bound  edx,QWORD PTR [ebx+0x4fd1e16]
  40cc0a:	add    BYTE PTR [ecx-0x69d1e204],cl
  40cc10:	(bad)  
  40cc11:	(bad)  
  40cc12:	aas    
  40cc13:	ins    BYTE PTR es:[edi],dx
  40cc14:	hlt    
  40cc15:	sti    
  40cc16:	inc    ebx
  40cc17:	xchg   esp,eax
  40cc18:	lahf   
  40cc19:	cmc    
  40cc1a:	pop    es
  40cc1b:	cld    
  40cc1c:	sti    
  40cc1d:	dec    esp
  40cc1e:	add    al,0x94
  40cc20:	aas    
  40cc21:	les    ebp,FWORD PTR fs:[eax+0x4]
  40cc25:	sbb    eax,esp
  40cc27:	cmp    ebx,eax
  40cc29:	ret    0x2102
  40cc2c:	dec    esi
  40cc2d:	fxch   st(0)
  40cc2f:	push   ecx
  40cc30:	sub    al,0xe5
  40cc32:	add    edx,DWORD PTR [eax+eax*1+0x134100]
  40cc39:	add    ch,cl
  40cc3b:	inc    edi
  40cc3c:	add    BYTE PTR [esi+0x2a],bl
  40cc3f:	outs   dx,BYTE PTR ds:[esi]
  40cc40:	mov    esi,eax
  40cc42:	jb     0x40cc92
  40cc44:	sub    al,0x48
  40cc46:	mov    esi,0xa147e783
  40cc4b:	stos   BYTE PTR es:[edi],al
  40cc4c:	fldcw  WORD PTR [ecx-0x15]
  40cc4f:	sbb    bl,BYTE PTR [esp+ebx*2]
  40cc52:	xchg   ecx,eax
  40cc53:	mov    edx,DWORD PTR ds:0x1734e940
  40cc59:	add    al,0x1
  40cc5b:	push   esi
  40cc5c:	mov    ds:0x5e12e8ff,eax
  40cc61:	je     0x40cc48
  40cc63:	dec    ecx
  40cc64:	pop    esi
  40cc65:	jmp    0x97eb:0x6c444d13
  40cc6c:	add    BYTE PTR [eax],al
  40cc6e:	rol    BYTE PTR [eax],cl
  40cc70:	dec    edi
  40cc71:	mov    eax,DWORD PTR [ebx+0x5]
  40cc74:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cc75:	sub    al,BYTE PTR [ecx]
  40cc77:	fs in  eax,0xf0
  40cc7a:	mov    BYTE PTR [edi],ah
  40cc7c:	mov    ch,al
  40cc7e:	inc    ebp
  40cc7f:	adc    eax,0xe9000092
  40cc84:	out    dx,eax
  40cc85:	aad    0x0
  40cc87:	jmp    0x40cc20
  40cc89:	popf   
  40cc8a:	jae    0x40cc51
  40cc8c:	pop    es
  40cc8d:	lea    edi,[ebp+0x25]
  40cc90:	xor    eax,0x34d92412
  40cc95:	pop    ss
  40cc96:	add    al,0x81
  40cc98:	jno    0x40cc3c
  40cc9a:	(bad)  
  40cc9b:	call   0x295b82ac
  40cca0:	or     al,0xb6
  40cca2:	pop    esi
  40cca3:	mov    edi,0xbf0005d9
  40cca8:	or     BYTE PTR [ecx+0x4883a78a],dl
  40ccae:	dec    eax
  40ccaf:	add    BYTE PTR [edx],ch
  40ccb1:	mul    DWORD PTR [eax]
  40ccb3:	push   0xffffffaf
  40ccb5:	mov    ?,WORD PTR [esp+ebx*2-0x2b]
  40ccb9:	cdq    
  40ccba:	jae    0x40ccfc
  40ccbc:	mov    ebp,0x85047560
  40ccc1:	sti    
  40ccc2:	loop   0x40ccc4
  40ccc4:	lods   eax,DWORD PTR ds:[esi]
  40ccc5:	xchg   BYTE PTR [esi-0x414c568b],bh
  40cccb:	jmp    0x40cd2a
  40cccd:	enter  0x6c44,0x7e
  40ccd1:	add    DWORD PTR [eax],eax
  40ccd3:	add    BYTE PTR [eax],al
  40ccd5:	xor    dh,0x23
  40ccd8:	adc    al,dh
  40ccda:	fistp  WORD PTR [ebx-0x1]
  40ccdd:	jmp    0xcb3fdb87
  40cce2:	or     al,ch
  40cce4:	pop    eax
  40cce5:	dec    esi
  40cce6:	add    al,0x0
  40cce8:	mul    DWORD PTR ds:0x5f7be99
  40ccee:	fstp   QWORD PTR [ebp-0x3e]
  40ccf1:	inc    ebp
  40ccf2:	add    DWORD PTR [ecx+0x53],edx
  40ccf5:	stos   BYTE PTR es:[edi],al
  40ccf6:	outs   dx,DWORD PTR ds:[esi]
  40ccf7:	jl     0x40cd01
  40ccf9:	ds rol ebp,0x6
  40ccfd:	popa   
  40ccfe:	clc    
  40ccff:	aas    
  40cd00:	add    BYTE PTR ds:0x2d018957,al
  40cd06:	mov    al,BYTE PTR [edx+0x24]
  40cd09:	sbb    DWORD PTR [edx-0x5f043827],esi
  40cd0f:	jae    0x40cd51
  40cd11:	std    
  40cd12:	lds    eax,FWORD PTR ds:0x410824
  40cd18:	mov    DWORD PTR [ebx-0x6aa17718],esp
  40cd1e:	mov    ebx,DWORD PTR [esp+ebp*2-0x46]
  40cd22:	inc    esi
  40cd23:	jo     0x40cd25
  40cd25:	stc    
  40cd26:	add    BYTE PTR [eax],al
  40cd28:	push   0xffffff94
  40cd2a:	lods   al,BYTE PTR ds:[esi]
  40cd2b:	mov    eax,DWORD PTR [ebp+0x6c]
  40cd2e:	dec    edi
  40cd2f:	mov    eax,DWORD PTR [ebp+0x40]
  40cd32:	adc    BYTE PTR [esi],bh
  40cd34:	jl     0x40cd43
  40cd36:	cmp    eax,0xbb00ff84
  40cd3b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cd3c:	mov    ebx,DWORD PTR [ebp+0x2a718]
  40cd42:	ins    DWORD PTR es:[edi],dx
  40cd43:	ret    
  40cd44:	out    0xf,al
  40cd46:	sub    BYTE PTR [eax],al
  40cd48:	xor    al,0xff
  40cd4a:	and    bl,cl
  40cd4c:	test   BYTE PTR [ebx+ebx*8-0x2c72cd47],0xb9
  40cd54:	stos   BYTE PTR es:[edi],al
  40cd55:	div    BYTE PTR [eax-0x57]
  40cd58:	add    al,BYTE PTR [ebx+0x316ad7c]
  40cd5e:	sbb    eax,0x1f5f168c
  40cd63:	ins    BYTE PTR es:[edi],dx
  40cd64:	cmp    DWORD PTR [ecx+0x56],ebx
  40cd67:	xchg   edx,eax
  40cd68:	add    dl,BYTE PTR [esi+0xf]
  40cd6b:	mov    ecx,0xa99412aa
  40cd70:	add    dh,dh
  40cd72:	ror    BYTE PTR ds:0xa3c8010c,1
  40cd78:	xor    al,0xe8
  40cd7a:	add    ecx,esi
  40cd7c:	popf   
  40cd7d:	(bad)  
  40cd7e:	pop    ds
  40cd7f:	fs cmp al,0xc2
  40cd82:	nop
  40cd83:	test   eax,0xaa14b59d
  40cd88:	add    al,BYTE PTR [eax]
  40cd8a:	push   ebx
  40cd8b:	lods   al,BYTE PTR ds:[esi]
  40cd8c:	loop   0x40ce02
  40cd8e:	push   esp
  40cd8f:	test   eax,0xcd9c45c5
  40cd94:	pop    ss
  40cd95:	inc    eax
  40cd96:	xchg   esp,eax
  40cd97:	jno    0x40ce14
  40cd99:	jecxz  0x40cd96
  40cd9b:	adc    bl,BYTE PTR [esi-0x7e87ff8b]
  40cda1:	jae    0x40cd86
  40cda3:	jmp    0x40cda5
  40cda5:	data16 (bad) 
  40cda7:	pop    ecx
  40cda8:	or     ch,bl
  40cdaa:	mov    bl,BYTE PTR [ebx+0x1f382a00]
  40cdb0:	lods   eax,DWORD PTR ds:[esi]
  40cdb1:	mov    bh,0x34
  40cdb3:	pop    ds
  40cdb4:	dec    esi
  40cdb5:	cmc    
  40cdb6:	xor    ch,BYTE PTR [edx+0x33]
  40cdb9:	push   ecx
  40cdba:	lods   al,BYTE PTR ds:[esi]
  40cdbb:	sahf   
  40cdbc:	add    cl,ch
  40cdbe:	mov    ah,BYTE PTR [eax-0x10]
  40cdc1:	popa   
  40cdc2:	xchg   ebx,eax
  40cdc3:	sbb    al,0x16
  40cdc5:	and    eax,0xe8f7bfab
  40cdca:	add    ecx,DWORD PTR [edi]
  40cdcc:	push   ds
  40cdcd:	loope  0x40cd5b
  40cdcf:	fcomp  DWORD PTR [eax+0x38079563]
  40cdd5:	je     0x40ce1e
  40cdd7:	les    eax,FWORD PTR ds:0xfb7e6c
  40cddd:	jmp    0xf9c891e5
  40cde2:	stos   BYTE PTR es:[edi],al
  40cde3:	inc    esi
  40cde4:	lahf   
  40cde5:	in     eax,0x9d
  40cde7:	pop    ss
  40cde8:	rcl    BYTE PTR [edi+eax*2+0x5b],0x15
  40cded:	aad    0x89
  40cdef:	mov    ds,WORD PTR [ebx-0x2ae0efad]
  40cdf5:	clc    
  40cdf6:	cmc    
  40cdf7:	add    DWORD PTR [eax],0x16
  40cdfa:	popf   
  40cdfb:	popa   
  40cdfc:	push   DWORD PTR [ebx]
  40cdfe:	mov    al,ds:0x26b11532
  40ce03:	add    BYTE PTR [ebx+0x3],dl
  40ce06:	jecxz  0x40cdeb
  40ce08:	and    dl,BYTE PTR ds:0xfe5280f9
  40ce0e:	cmp    eax,0xbfee99d
  40ce13:	pushf  
  40ce14:	push   ds
  40ce15:	inc    ebp
  40ce16:	icebp  
  40ce17:	and    eax,0x9ec02db
  40ce1c:	pop    ss
  40ce1d:	(bad)  
  40ce1e:	call   eax
  40ce20:	adc    al,0xc2
  40ce22:	add    DWORD PTR [edi+0x222b0091],esp
  40ce28:	rcpps  xmm0,XMMWORD PTR [ebx-0x4fff6817]
  40ce2f:	call   0x973fae30
  40ce34:	adc    BYTE PTR [ebx-0x69101602],bl
  40ce3a:	loop   0x40ce7a
  40ce3c:	sbb    esi,ecx
  40ce3e:	mov    edi,0x44d7defa
  40ce43:	sub    eax,0xe97f821f
  40ce48:	xchg   edi,eax
  40ce49:	add    BYTE PTR [ecx-0x164f39a],cl
  40ce4f:	jmp    0xaf0042f4
  40ce54:	leave  
  40ce55:	xor    eax,0xa42bc9
  40ce5a:	adc    DWORD PTR [eax],0xffffff88
  40ce5d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ce5e:	or     dh,dh
  40ce60:	adc    BYTE PTR [ebx+0x7f246254],bl
  40ce66:	jmp    0x40ce61
  40ce68:	add    BYTE PTR [edx],dl
  40ce6a:	inc    ebp
  40ce6b:	lock cmp ecx,edi
  40ce6e:	hlt    
  40ce6f:	cmp    ebx,0xffffffd7
  40ce72:	add    BYTE PTR [ebp-0x17b5dfdc],cl
  40ce78:	jmp    0x40ce11
  40ce7a:	add    BYTE PTR [eax],al
  40ce7c:	mov    al,0x54
  40ce7e:	xor    eax,0x2f66c58b
  40ce83:	lea    esp,[eax+ecx*1]
  40ce86:	dec    edx
  40ce87:	call   FWORD PTR [eax+edx*4]
  40ce8a:	cdq    
  40ce8b:	adc    al,0x6d
  40ce8d:	and    eax,0x5a61ffda
  40ce92:	cwde   
  40ce93:	mov    bl,BYTE PTR [esp+esi*1]
  40ce96:	sub    BYTE PTR [eax],al
  40ce98:	add    al,dh
  40ce9a:	std    
  40ce9b:	jg     0x40ce5e
  40ce9d:	out    0xe5,eax
  40ce9f:	jg     0x40ce37
  40cea1:	inc    ebp
  40cea2:	std    
  40cea3:	adc    cl,0xdc
  40cea6:	dec    ebx
  40cea7:	(bad)  
  40cea8:	(bad)  
  40cea9:	sbb    al,0xce
  40ceab:	out    0x91,eax
  40cead:	pop    esi
  40ceae:	(bad)  
  40ceaf:	dec    eax
  40ceb1:	jg     0x40ceb4
  40ceb3:	add    BYTE PTR [ebx],dh
  40ceb5:	je     0x40ce9e
  40ceb7:	pop    es
  40ceb8:	mov    ebp,DWORD PTR [edi+edx*8-0x59]
  40cebc:	add    DWORD PTR [ecx],eax
  40cebe:	pop    es
  40cebf:	shr    eax,1
  40cec1:	mov    al,0x9d
  40cec3:	cmp    DWORD PTR [eax-0x2eff9798],0xee754785
  40cecd:	add    BYTE PTR [ecx+eax*1],ah
  40ced0:	lea    ecx,[eax]
  40ced2:	out    dx,al
  40ced3:	inc    eax
  40ced4:	add    BYTE PTR [ecx-0x4],al
  40ced7:	jbe    0x40ced7
  40ced9:	add    BYTE PTR [ebp-0x3],ch
  40cedc:	jno    0x40ceb7
  40cede:	mov    ebp,0x2b83c2fe
  40cee3:	std    
  40cee4:	je     0x40cf01
  40cee6:	adc    eax,0x3d00003d
  40ceeb:	jmp    0x55ff:0xeb6d6a00
  40cef2:	push   0xffffff8f
  40cef4:	or     dl,BYTE PTR [eax]
  40cef6:	jge    0x40cefc
  40cef8:	test   eax,eax
  40cefa:	cmp    bh,0x20
  40cefd:	push   es
  40cefe:	aas    
  40ceff:	mov    ebp,0xc23cb0c1
  40cf04:	xchg   DWORD PTR [esi+0x35],eax
  40cf07:	inc    ebp
  40cf08:	dec    eax
  40cf09:	je     0x40cf2f
  40cf0b:	and    BYTE PTR [eax+eax*1],0xae
  40cf0f:	fiadd  WORD PTR [ebx]
  40cf11:	add    BYTE PTR [esi+edi*2-0x75657cbc],dl
  40cf18:	cmp    DWORD PTR [esp+ecx*1],0x6c
  40cf1c:	inc    esi
  40cf1d:	add    BYTE PTR [esp+edx*4+0x6f3356cf],dl
  40cf24:	rol    BYTE PTR [edx-0x6c],0xf2
  40cf28:	call   0x1400:0x4294f014
  40cf2f:	cld    
  40cf30:	mov    eax,esp
  40cf32:	add    BYTE PTR [edi-0x59],dl
  40cf35:	add    dh,BYTE PTR [ebp-0x5d]
  40cf38:	aas    
  40cf39:	push   ds
  40cf3a:	inc    ebx
  40cf3c:	inc    ecx
  40cf3d:	cmp    BYTE PTR [edi+0x2485a940],0x20
  40cf44:	in     al,dx
  40cf45:	inc    esi
  40cf46:	add    BYTE PTR [ecx+eiz*8+0x65d98800],dl
  40cf4d:	add    al,BYTE PTR [ecx]
  40cf4f:	inc    ebx
  40cf50:	cli    
  40cf51:	lock out dx,eax
  40cf53:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cf54:	imul   eax,DWORD PTR [edx],0xc6e01f5f
  40cf5a:	push   ebp
  40cf5b:	setp   BYTE PTR [ebp+0x4a518c45]
  40cf62:	je     0x40cef5
  40cf64:	and    al,BYTE PTR [edx+0x4]
  40cf67:	adc    edx,ebp
  40cf69:	sysret 
  40cf6b:	les    ebx,FWORD PTR [esi-0x167be811]
  40cf71:	add    ecx,DWORD PTR [ebx+0x7391248a]
  40cf77:	popf   
  40cf78:	inc    ebx
  40cf79:	add    al,0x56
  40cf7b:	inc    ebx
  40cf7c:	mov    ch,0xf2
  40cf7e:	paddq  mm5,QWORD PTR [ecx+0x22c9c338]
  40cf85:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cf86:	push   eax
  40cf87:	(bad)  
  40cf88:	out    dx,eax
  40cf89:	mov    gs,edi
  40cf8b:	(bad)  
  40cf8d:	das    
  40cf8e:	or     al,0xcc
  40cf90:	dec    eax
  40cf91:	adc    BYTE PTR ss:[ecx-0x58],dh
  40cf95:	and    DWORD PTR [ebx+0x64980a00],ebx
  40cf9b:	ret    
  40cf9c:	mov    ah,bh
  40cf9e:	mov    edx,0x6c16eec3
  40cfa3:	sbb    DWORD PTR [eax-0x75236e2d],ebx
  40cfa9:	or     eax,0x8598eb9
  40cfae:	adc    al,bh
  40cfb0:	addr16 add al,0xb1
  40cfb3:	adc    BYTE PTR [edi+edi*4-0x7f686855],ah
  40cfba:	call   0x2e407ec2
  40cfbf:	inc    eax
  40cfc0:	mov    eax,0x94036903
  40cfc5:	das    
  40cfc6:	call   0x699a:0x2d0dab36
  40cfcd:	xchg   edi,eax
  40cfce:	sti    
  40cfcf:	out    dx,eax
  40cfd0:	mov    eax,DWORD PTR [eax-0x17]
  40cfd3:	adc    BYTE PTR [ebx+0xd],0xed
  40cfd7:	mov    WORD PTR [edx-0x7cc9d655],gs
  40cfdd:	or     eax,0x9009af5
  40cfe2:	(bad)  
  40cfe3:	shl    DWORD PTR [edx-0x13],1
  40cfe6:	aam    0xf3
  40cfe8:	stos   DWORD PTR es:[edi],eax
  40cfe9:	add    BYTE PTR [ecx-0x5704b46e],ah
  40cfef:	inc    esp
  40cff0:	outs   dx,DWORD PTR ds:[esi]
  40cff1:	out    0x71,al
  40cff3:	add    al,BYTE PTR [edi-0x7334e645]
  40cff9:	xor    eax,0xa30011dd
  40cffe:	mov    ebx,DWORD PTR [ebx]
  40d000:	or     al,0x8b
  40d002:	dec    esi
  40d003:	aam    0xf2
  40d005:	data16 mov al,0xff
  40d008:	addr16 repnz xchg ebp,eax
  40d00b:	(bad)  
  40d00c:	call   0xf22891a8
  40d011:	inc    eax
  40d012:	add    edx,DWORD PTR [ebp+0x4268f1]
  40d018:	sub    cl,ch
  40d01a:	inc    ebx
  40d01b:	or     al,0x1b
  40d01d:	aaa    
  40d01e:	mov    BYTE PTR ds:0x5e379739,al
  40d024:	and    bl,bh
  40d026:	rol    BYTE PTR [edi],0xe9
  40d029:	mov    edx,0x1118eb8b
  40d02e:	inc    edi
  40d02f:	or     BYTE PTR [edx+ecx*2-0x69],dh
  40d033:	dec    eax
  40d034:	mov    bh,0xa3
  40d036:	cmp    al,0x83
  40d038:	inc    ebx
  40d039:	nop
  40d03a:	or     al,0xc
  40d03c:	mov    ds:0xacc6f092,eax
  40d041:	and    esi,ebx
  40d043:	(bad)  
  40d044:	call   0x2e477be0
  40d049:	imul   edx,DWORD PTR [edi+ecx*1-0x74ff6817],0xffffffa9
  40d051:	fwait
  40d052:	mov    DWORD PTR [ebp+ebx*1+0x13],esi
  40d056:	push   esi
  40d057:	jae    0x40d050
  40d059:	mov    ecx,0x2b9c8d00
  40d05e:	xor    DWORD PTR [edi-0x6d],edx
  40d061:	add    BYTE PTR [ecx-0x602b00d0],dl
  40d067:	lock aas 
  40d069:	jmp    0x74415e7e
  40d06e:	(bad)  
  40d06f:	fnstenv [ebp+eiz*8-0x75]
  40d073:	lock xor ch,BYTE PTR [ecx-0x56cdf600]
  40d07a:	clc    
  40d07b:	std    
  40d07c:	mov    ch,cl
  40d07e:	and    al,0xc6
  40d080:	mov    BYTE PTR [eax],al
  40d082:	sub    dh,BYTE PTR [edx]
  40d084:	add    BYTE PTR [esi-0x1c],bl
  40d087:	mov    esp,0x7d518b53
  40d08c:	jmp    0xf975:0x8cd27e0c
  40d093:	imul   esi,DWORD PTR [edx-0x2],0x75fd7932
  40d09a:	icebp  
  40d09b:	test   ah,al
  40d09d:	jmp    FWORD PTR [eax+0x13e4e804]
  40d0a3:	jns    0x40d0a2
  40d0a5:	test   BYTE PTR ds:0x3b8b0f06,bh
  40d0ab:	push   0x79
  40d0ad:	push   DWORD PTR [edx+0x78]
  40d0b0:	add    al,0xb9
  40d0b3:	xchg   ebp,eax
  40d0b4:	mov    cl,0x1
  40d0b6:	data16 sti 
  40d0b8:	xor    ebx,ebx
  40d0ba:	xor    dh,dl
  40d0bc:	repz call 0x3e47f5
  40d0c2:	repz add ecx,0x5b
  40d0c6:	add    BYTE PTR [ebx+edi*4+0x6],ah
  40d0ca:	add    BYTE PTR [edx+ebp*2],cl
  40d0cd:	push   edx
  40d0ce:	loope  0x40d142
  40d0d0:	js     0x40d093
  40d0d2:	push   ecx
  40d0d3:	test   esi,ebx
  40d0d5:	loopne 0x40d0d6
  40d0d7:	mov    dl,0xbc
  40d0d9:	push   ebx
  40d0da:	mov    edx,DWORD PTR [ecx-0x7a9ad2e]
  40d0e0:	js     0x40d155
  40d0e2:	and    bh,BYTE PTR [esi]
  40d0e4:	push   esp
  40d0e5:	xor    esi,esi
  40d0e7:	out    0xd6,al
  40d0e9:	pop    es
  40d0ea:	push   esi
  40d0eb:	push   cs
  40d0ec:	js     0x40d161
  40d0ee:	adc    BYTE PTR [edx+0x3],dh
  40d0f1:	or     al,0xe8
  40d0f3:	ret    0xfebd
  40d0f6:	inc    esi
  40d0f8:	ins    BYTE PTR es:[edi],dx
  40d0f9:	xor    esi,0xffffff94
  40d0fc:	xor    bh,cl
  40d0fe:	push   edx
  40d0ff:	sub    al,0xe9
  40d101:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d102:	(bad)  
  40d103:	cmp    esi,DWORD PTR [edx-0x70267530]
  40d109:	sub    BYTE PTR [edx],al
  40d10b:	sbb    esp,edx
  40d10d:	xchg   edi,eax
  40d10e:	pop    edx
  40d10f:	sub    al,0x63
  40d111:	rol    BYTE PTR [ecx],cl
  40d113:	xchg   esp,eax
  40d114:	and    al,0xc4
  40d116:	je     0x40d0d1
  40d118:	adc    dl,BYTE PTR [ecx]
  40d11a:	cld    
  40d11b:	push   edx
  40d11c:	add    cl,BYTE PTR [esi-0x3ba2f0fe]
  40d122:	fist   WORD PTR [esi-0xb045409]
  40d128:	adc    eax,0xcc008a97
  40d12d:	and    edi,DWORD PTR [ebx-0x65fee38c]
  40d133:	push   edi
  40d134:	out    dx,eax
  40d135:	mov    ?,WORD PTR [edi-0x2]
  40d138:	dec    eax
  40d139:	test   eax,0xe51f1e8b
  40d13e:	xor    eax,0x7e8cd5b
  40d143:	add    BYTE PTR [ecx+0x12],ah
  40d146:	test   al,0x80
  40d148:	shr    BYTE PTR [esi+0x3],0x0
  40d14c:	xchg   esp,eax
  40d14d:	sub    bl,BYTE PTR [ecx]
  40d14f:	or     al,0xa3
  40d151:	mov    ch,0x7e
  40d153:	pushf  
  40d154:	xchg   esp,eax
  40d155:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d156:	add    dh,dh
  40d158:	(bad)  [ebp-0x122e7300]
  40d15e:	xor    ecx,DWORD PTR [ebp-0x16aade7]
  40d164:	jnp    0x40d1e0
  40d166:	xchg   ebp,eax
  40d167:	je     0x40d109
  40d169:	fiadd  DWORD PTR [eax-0x4]
  40d16c:	adc    al,0xaa
  40d16e:	add    al,BYTE PTR [eax]
  40d170:	call   0x1855672c
  40d175:	add    esp,edi
  40d177:	inc    ebx
  40d178:	xchg   esp,eax
  40d179:	jge    0x40d123
  40d17b:	shld   DWORD PTR [edi-0x60],edi,0x96
  40d180:	sub    al,0xaf
  40d182:	call   0xdbd4658a
  40d187:	add    ecx,DWORD PTR [edx+0x3faae940]
  40d18d:	sbb    ebp,DWORD PTR [edx+0x58]
  40d190:	add    bl,cl
  40d192:	xchg   ebx,eax
  40d193:	lods   eax,DWORD PTR ds:[esi]
  40d194:	xchg   esi,eax
  40d195:	xchg   ebp,eax
  40d196:	or     eax,0x859829d3
  40d19b:	arpl   WORD PTR [edi],si
  40d19d:	or     edx,DWORD PTR [ebp+edx*4-0x76c1eecd]
  40d1a4:	xor    edx,edx
  40d1a6:	cmp    eax,0xabfc04f6
  40d1ab:	mov    BYTE PTR [esi-0x7714d916],dl
  40d1b1:	sbb    BYTE PTR [edi],dh
  40d1b3:	outs   dx,BYTE PTR ds:[esi]
  40d1b4:	xchg   esi,eax
  40d1b5:	fidiv  DWORD PTR [eax]
  40d1b7:	je     0x40d1f9
  40d1b9:	mov    eax,0xebc05130
  40d1be:	xchg   ebx,eax
  40d1bf:	push   ebp
  40d1c0:	stos   BYTE PTR es:[edi],al
  40d1c1:	imul   ebx,DWORD PTR [edx],0x9363586a
  40d1c7:	inc    ebp
  40d1c8:	xchg   esi,eax
  40d1c9:	mov    cl,BYTE PTR ds:0x8584297b
  40d1cf:	imul   esp,DWORD PTR [ebx],0xffffffa3
  40d1d2:	xchg   ebx,eax
  40d1d3:	sub    eax,0x93e0933
  40d1d8:	xor    ebx,DWORD PTR [edx+0x3d]
  40d1db:	out    dx,al
  40d1dc:	push   DWORD PTR [ebx+0x5f]
  40d1df:	or     BYTE PTR [esi-0x7714d97e],dl
  40d1e5:	adc    BYTE PTR [esi],dh
  40d1e7:	push   es
  40d1e8:	xchg   esi,eax
  40d1e9:	jb     0x40d21b
  40d1eb:	ins    BYTE PTR es:[edi],dx
  40d1ec:	inc    eax
  40d1ed:	xor    BYTE PTR fs:[eax],al
  40d1f0:	add    eax,ebp
  40d1f2:	mov    bl,0xfe
  40d1f4:	out    dx,al
  40d1f5:	add    BYTE PTR ds:0x1b0569ec,ch
  40d1fb:	cmp    al,0xe0
  40d1fd:	cmp    eax,edi
  40d1ff:	shl    eax,cl
  40d201:	(bad)  
  40d202:	sub    DWORD PTR [ebp+0xc96f544],ecx
  40d208:	or     eax,0x40373af
  40d20d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d20e:	imul   edx,DWORD PTR [ecx+edx*1-0x14ff6817],0xffffffe2
  40d216:	fnstcw WORD PTR [ebx]
  40d218:	psubsb mm2,QWORD PTR [eax+0x3c]
  40d21c:	cld    
  40d21d:	out    0x97,eax
  40d21f:	add    BYTE PTR [eax],al
  40d221:	arpl   bx,ax
  40d223:	lock xchg DWORD PTR [ebx+edx*4],esp
  40d227:	es add al,0x74
  40d22a:	mov    bl,0x4
  40d22c:	push   eax
  40d22d:	ins    BYTE PTR es:[edi],dx
  40d22e:	stos   DWORD PTR es:[edi],eax
  40d22f:	mov    ah,0x4f
  40d231:	scas   eax,DWORD PTR es:[edi]
  40d232:	mov    ds:0x9ba70504,eax
  40d237:	add    al,BYTE PTR [eax]
  40d239:	push   ecx
  40d23a:	pop    edi
  40d23b:	mov    al,ds:0x3c1d5efe
  40d240:	cld    
  40d241:	push   0xffffffd8
  40d243:	dec    BYTE PTR [edi+0x5c]
  40d246:	jnp    0x40d1fc
  40d248:	dec    edi
  40d249:	inc    esi
  40d24a:	mov    ds:0x41cee808,eax
  40d24f:	add    BYTE PTR [eax],al
  40d251:	cli    
  40d252:	into   
  40d253:	jle    0x40d214
  40d255:	fisubr WORD PTR [edx]
  40d257:	ror    BYTE PTR [edx-0x3fa0ffd8],0xf
  40d25e:	jmp    0x692c581d
  40d263:	sub    al,0xa2
  40d265:	add    ebp,ecx
  40d267:	xchg   edi,eax
  40d268:	sub    eax,0x1e60056
  40d26d:	or     BYTE PTR [edi+0x3],dl
  40d270:	data16 and al,0x79
  40d273:	ins    DWORD PTR es:[edi],dx
  40d274:	(bad)  
  40d275:	xor    cl,cl
  40d277:	sub    DWORD PTR [eax],eax
  40d279:	sete   ah
  40d27c:	mov    al,0xd9
  40d27e:	push   ebx
  40d27f:	out    0xfd,eax
  40d281:	mov    WORD PTR [ebp+0x66],es
  40d284:	into   
  40d285:	mov    bh,dh
  40d287:	mov    ah,0x3a
  40d289:	loopne 0x40d273
  40d28b:	jo     0x40d2b6
  40d28d:	add    BYTE PTR [eax],al
  40d28f:	mov    cl,0xbd
  40d291:	or     eax,0xfffe6f84
  40d296:	jmp    DWORD PTR ds:0x810ffacb
  40d29c:	mov    dh,0x0
  40d29e:	add    ch,bh
  40d2a0:	cld    
  40d2a1:	mov    ch,0x45
  40d2a3:	ror    DWORD PTR es:[edi-0x73],1
  40d2a7:	jo     0x40d2ca
  40d2a9:	sti    
  40d2aa:	call   FWORD PTR [edx]
  40d2ac:	into   
  40d2ad:	out    0x52,eax
  40d2af:	test   al,0xfe
  40d2b1:	inc    DWORD PTR [ebx+0x1f83fd2d]
  40d2b7:	out    dx,eax
  40d2b8:	std    
  40d2b9:	dec    DWORD PTR [esi]
  40d2bb:	xor    edx,ebx
  40d2bd:	cli    
  40d2be:	jmp    0x40d2c0
  40d2c0:	mov    DWORD PTR [ebp+0x38],0xfb21b09c
  40d2c7:	dec    DWORD PTR [edx+0x1]
  40d2ca:	cmp    eax,0xf2027e3b
  40d2cf:	xor    edi,DWORD PTR [ebp-0x7c]
  40d2d2:	(bad)  
  40d2d3:	sbb    ebp,DWORD PTR [ebp-0x4e]
  40d2d6:	inc    BYTE PTR [eax]
  40d2d8:	push   0x6c
  40d2da:	mov    ebp,0xfffdba05
  40d2df:	add    dh,BYTE PTR [edx-0x6b3f4904]
  40d2e5:	and    BYTE PTR [esi],bh
  40d2e7:	in     al,0xee
  40d2e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d2ea:	test   DWORD PTR [eax+edi*2+0x77],eax
  40d2ee:	sub    al,0xe8
  40d2f0:	inc    esp
  40d2f1:	aam    0x1
  40d2f3:	add    BYTE PTR [eax],bl
  40d2f5:	out    0x3,eax
  40d2f7:	test   BYTE PTR [ebx],bh
  40d2f9:	test   al,0x2
  40d2fb:	add    BYTE PTR [edx-0x3e1bef20],bh
  40d301:	xchg   edi,eax
  40d302:	push   edx
  40d303:	add    BYTE PTR ds:0x94000453,ch
  40d309:	xor    al,0x88
  40d30b:	add    al,0x8
  40d30d:	mov    ebx,0x673ffe92
  40d312:	ss push 0xffffff98
  40d315:	sbb    al,0x49
  40d317:	(bad)  
  40d318:	les    ebx,FWORD PTR [esi]
  40d31a:	xchg   edx,eax
  40d31b:	xchg   DWORD PTR [ecx+0x72],esi
  40d31e:	fwait
  40d31f:	loop   0x40d369
  40d321:	test   al,0x2
  40d323:	test   BYTE PTR [eax],al
  40d325:	aam    0x99
  40d327:	xchg   BYTE PTR [edi-0x7ffd586b],ch
  40d32d:	jno    0x40d392
  40d32f:	or     BYTE PTR [edi],cl
  40d331:	adc    DWORD PTR [ecx],edi
  40d333:	add    eax,0x49119400
  40d338:	loopne 0x40d2cf
  40d33a:	mov    esi,edx
  40d33c:	(bad)  
  40d33d:	pop    ecx
  40d33e:	pop    edi
  40d33f:	cli    
  40d340:	dec    ebx
  40d342:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d343:	leave  
  40d344:	inc    esp
  40d345:	add    BYTE PTR [ebp+0x3e940002],ah
  40d34b:	add    al,bh
  40d34d:	pop    ecx
  40d34e:	jg     0x40d355
  40d350:	add    BYTE PTR [edi+eiz*4-0x4e1fbb37],dl
  40d357:	add    al,BYTE PTR [eax]
  40d359:	xchg   esp,eax
  40d35a:	mov    dl,0x58
  40d35c:	inc    esp
  40d35d:	pop    ebx
  40d35e:	add    DWORD PTR [ecx-0x5fb3f82],esi
  40d364:	inc    ebx
  40d365:	xchg   esp,eax
  40d366:	jns    0x40d31b
  40d368:	stos   DWORD PTR es:[edi],eax
  40d369:	mov    al,BYTE PTR [edx+edi*8-0x4eff6bfc]
  40d370:	cmp    esp,eax
  40d372:	ds mov cl,0x2
  40d375:	sbb    DWORD PTR [eax+ebp*8],esp
  40d378:	add    edx,DWORD PTR [ebx+edi*2+0x1ae6fb6b]
  40d37f:	stc    
  40d380:	adc    BYTE PTR [eax],0xed
  40d383:	fst    QWORD PTR [edx+0xfc13142]
  40d389:	add    al,bh
  40d38b:	add    ecx,ebp
  40d38d:	xchg   ebx,esi
  40d38f:	jmp    FWORD PTR [esp+edi*1-0x6b]
  40d393:	add    cl,ch
  40d395:	sbb    eax,0x92e11a74
  40d39a:	pusha  
  40d39b:	mov    al,ds:0x8f944681
  40d3a0:	mov    esi,0xe1a8507c
  40d3a5:	(bad)  
  40d3a6:	xchg   edx,eax
  40d3a7:	test   BYTE PTR [ebx+eax*1-0x4fcff6c],dl
  40d3ae:	dec    esp
  40d3af:	es jo  0x40d3ad
  40d3b2:	jge    0x40d3a4
  40d3b4:	imul   eax,DWORD PTR [eax-0x6d8a7081],0x16
  40d3bb:	shl    eax,0x9c
  40d3be:	int    0x0
  40d3c0:	jmp    0xf14ef2c8
  40d3c5:	ss add DWORD PTR cs:[eax+ecx*2-0x3e],esp
  40d3cb:	xor    BYTE PTR [ecx-0x35],al
  40d3ce:	out    dx,eax
  40d3cf:	add    ecx,ebp
  40d3d1:	xchg   ebx,ebp
  40d3d3:	jmp    DWORD PTR [eax+ecx*1-0x6b]
  40d3d7:	add    BYTE PTR [eax],al
  40d3d9:	jmp    0xdf3700ad
  40d3de:	sbb    ecx,DWORD PTR [ebx-0x681701]
  40d3e4:	mov    ch,0xa4
  40d3e6:	sbb    eax,0xc645032
  40d3eb:	repz cli 
  40d3ed:	push   cs
  40d3ee:	add    BYTE PTR [esi],al
  40d3f0:	aas    
  40d3f1:	call   0x41afd2
  40d3f6:	gs push edi
  40d3f8:	inc    BYTE PTR [ebx+0x970b]
  40d3fe:	fsubp  st(5),st
  40d400:	inc    esp
  40d401:	div    BYTE PTR [ecx-0x3c]
  40d404:	add    al,0x14
  40d406:	loop   0x40d42d
  40d408:	mov    cs,WORD PTR [esp+ebp*1+0x3a533ef8]
  40d40f:	mov    bl,0x84
  40d411:	adc    eax,edx
  40d413:	add    eax,0x73704f8e
  40d418:	mov    eax,0xf4c3dcfe
  40d41d:	aas    
  40d41e:	jmp    0xf0b4233d
  40d423:	fld    QWORD PTR [ebx-0x9]
  40d426:	in     eax,0x1e
  40d428:	push   0xd297e8ff
  40d42d:	shl    DWORD PTR [edx+0x5b],1
  40d430:	mov    eax,0xf38caa3a
  40d435:	push   cs
  40d436:	aaa    
  40d437:	and    bh,BYTE PTR [edx+0x4b]
  40d43a:	fs dec eax
  40d43c:	enter  0xe547,0xab
  40d440:	in     eax,dx
  40d441:	mov    ch,BYTE PTR [ecx-0x2b3d3645]
  40d447:	sub    ecx,DWORD PTR [ebp+0x10a69c1]
  40d44d:	jb     0x40d47d
  40d44f:	fiadd  WORD PTR [ebx-0x9]
  40d452:	add    BYTE PTR [eax],al
  40d454:	mov    ecx,0x62c8736f
  40d459:	xchg   edi,eax
  40d45a:	push   es
  40d45b:	push   ss
  40d45c:	in     eax,dx
  40d45d:	add    ch,bl
  40d45f:	addr16 ret 0xff4
  40d463:	jmp    FWORD PTR ds:0xc359e69a
  40d469:	outs   dx,DWORD PTR ds:[esi]
  40d46a:	std    
  40d46b:	mov    DWORD PTR [eax],ebp
  40d46d:	pop    edx
  40d46e:	cmp    ebx,eax
  40d470:	or     al,bh
  40d472:	lds    eax,FWORD PTR [ebp+0x6a]
  40d475:	add    ebp,ebx
  40d477:	fstp   QWORD PTR [ebx]
  40d479:	test   DWORD PTR [esi],esi
  40d47b:	pop    ss
  40d47c:	fmul   DWORD PTR [eax-0x79]
  40d47f:	pop    eax
  40d480:	or     edx,DWORD PTR gs:[edi+0x4]
  40d484:	ror    WORD PTR [ecx+0x69d5457d],0x4
  40d48c:	mov    al,0x46
  40d48e:	mov    ah,0x50
  40d490:	push   ebp
  40d491:	cli    
  40d492:	mov    edx,0xbe863d01
  40d497:	je     0x40d4fd
  40d499:	out    dx,al
  40d49a:	adc    ebp,DWORD PTR [edx+0x35]
  40d49d:	jno    0x40d4d2
  40d49f:	loopne 0x40d4b7
  40d4a1:	inc    ebp
  40d4a2:	add    bh,bh
  40d4a4:	dec    ebx
  40d4a5:	or     eax,DWORD PTR [eax+ebx*8-0xa]
  40d4a9:	les    esi,FWORD PTR [ebx+0x6]
  40d4ac:	sub    eax,DWORD PTR [edi-0x9]
  40d4af:	add    DWORD PTR [esi],edx
  40d4b1:	xchg   edi,eax
  40d4b2:	push   0x88dab402
  40d4b7:	or     BYTE PTR [eax],al
  40d4b9:	xchg   eax,edi
  40d4bb:	mov    WORD PTR [ebp-0x67],cs
  40d4be:	test   BYTE PTR [esi-0x182b53fc],bh
  40d4c4:	retf   
  40d4c5:	push   eax
  40d4c6:	jo     0x40d4c5
  40d4c8:	mov    esp,eax
  40d4ca:	mov    DWORD PTR [ecx+0x6a],edx
  40d4cd:	xchg   esp,eax
  40d4ce:	cdq    
  40d4cf:	jge    0x40d515
  40d4d1:	aam    0x47
  40d4d3:	call   0xd484:0x298ef36
  40d4da:	push   esp
  40d4db:	icebp  
  40d4dc:	(bad)  
  40d4dd:	and    edi,ebp
  40d4df:	call   0x5431:0x8fde7173
  40d4e6:	(bad)  
  40d4e7:	xor    BYTE PTR [ebx+0x4d],bl
  40d4ea:	fld    DWORD PTR [esi]
  40d4ec:	add    BYTE PTR [edx+0x5c],dl
  40d4ef:	mov    eax,DWORD PTR [eax]
  40d4f1:	lods   al,BYTE PTR ds:[esi]
  40d4f2:	pop    esp
  40d4f3:	xchg   edi,eax
  40d4f4:	push   cs
  40d4f5:	adc    DWORD PTR [edi-0x7a6bfff8],esi
  40d4fb:	jnp    0x40d541
  40d4fd:	push   esp
  40d4fe:	and    dl,BYTE PTR [esi]
  40d500:	fdivr  DWORD PTR [edx-0x64fdb6e0]
  40d506:	ins    DWORD PTR es:[edi],dx
  40d507:	dec    eax
  40d508:	(bad)
  40d50b:	xchg   BYTE PTR [edi+0x48029791],bh
  40d511:	mov    ds:0x9404f223,eax
  40d516:	xchg   edi,eax
  40d517:	cmp    dh,BYTE PTR [ebp+ecx*4+0x65]
  40d51b:	dec    eax
  40d51c:	test   DWORD PTR [eax],0x496c093
  40d522:	xchg   esp,eax
  40d523:	xchg   edi,eax
  40d524:	dec    edx
  40d525:	jg     0x40d4bb
  40d527:	xchg   edi,eax
  40d528:	add    cl,BYTE PTR [ecx+0x447d2759]
  40d52e:	sub    BYTE PTR [ecx+ecx*2],ah
  40d531:	mov    al,0x44
  40d533:	sub    al,0x89
  40d535:	sub    ebp,ebx
  40d537:	test   DWORD PTR [esi-0x6f1b4b1],ecx
  40d53d:	inc    DWORD PTR [ecx-0x2b7afc29]
  40d543:	lods   eax,DWORD PTR ds:[esi]
  40d544:	xchg   edi,edx
  40d546:	nop
  40d547:	add    cl,ch
  40d549:	add    edx,DWORD PTR [ecx]
  40d54b:	inc    ebx
  40d54c:	lea    esi,[ecx+ecx*1]
  40d54f:	cmp    esp,0xffffff8f
  40d552:	mov    dl,0x8c
  40d554:	mov    eax,0x84f2ab36
  40d559:	stc    
  40d55a:	arpl   WORD PTR [eax],ax
  40d55c:	les    ecx,FWORD PTR fs:[edx-0x6bf7897d]
  40d563:	add    bh,al
  40d565:	or     BYTE PTR [eax-0x23],0x25
  40d569:	pop    DWORD PTR [edx+0x107c86f4]
  40d56f:	fist   DWORD PTR ds:0xdd16728f
  40d575:	jl     0x40d57f
  40d577:	inc    ebp
  40d578:	push   es
  40d579:	(bad)  
  40d57a:	bound  edi,QWORD PTR [edx+0x5b]
  40d57d:	aam    0x5a
  40d57f:	mov    ebp,?
  40d581:	add    BYTE PTR [eax],0x8
  40d584:	fucomp st(5)
  40d586:	mov    cs,WORD PTR [edx-0x67]
  40d589:	pop    edi
  40d58a:	dec    esi
  40d58b:	xchg   esp,eax
  40d58c:	add    BYTE PTR [eax+0x48],dh
  40d58f:	sub    al,0x80
  40d591:	ror    BYTE PTR [esi+0x76284a2],1
  40d597:	xchg   esp,eax
  40d598:	add    BYTE PTR [ecx+0x3],dl
  40d59b:	xchg   esp,eax
  40d59c:	add    ecx,ebp
  40d59e:	sbb    DWORD PTR [ebx+ecx*4+0x403ea3fb],ecx
  40d5a5:	jmp    0xfa457638
  40d5aa:	inc    ebx
  40d5ab:	xchg   esp,eax
  40d5ac:	ja     0x40d54e
  40d5ae:	retf   0x15fe
  40d5b1:	loopne 0x40d578
  40d5b3:	pop    eax
  40d5b4:	xchg   ebx,eax
  40d5b5:	out    0x9c,eax
  40d5b7:	dec    ebx
  40d5b8:	add    al,0xe9
  40d5ba:	add    esp,ebx
  40d5bc:	adc    eax,0xf8607a89
  40d5c1:	call   FWORD PTR [ecx]
  40d5c3:	and    edx,DWORD PTR ds:0x7d2817e8
  40d5c9:	cli    
  40d5ca:	data16 adc bh,BYTE PTR [edi-0x9]
  40d5ce:	call   0xed735a8d
  40d5d3:	xchg   edi,eax
  40d5d4:	add    BYTE PTR [ebx+0x4c7f0fa4],cl
  40d5da:	push   ebp
  40d5db:	adc    bh,BYTE PTR [edi-0x74]
  40d5de:	or     DWORD PTR [edx],ecx
  40d5e0:	mov    edi,esi
  40d5e2:	adc    BYTE PTR ss:0xc40060d0,ch
  40d5e9:	lods   al,BYTE PTR ds:[esi]
  40d5ea:	mov    ah,al
  40d5ec:	cmp    eax,edx
  40d5ee:	test   ch,dh
  40d5f0:	or     DWORD PTR [edx+0x97ebfe],ecx
  40d5f6:	add    BYTE PTR [eax-0x34],ah
  40d5f9:	repz std 
  40d5fb:	push   es
  40d5fc:	adc    bh,BYTE PTR [eax-0x7c]
  40d5ff:	fisttp QWORD PTR [ecx]
  40d601:	mov    bh,dh
  40d603:	add    BYTE PTR [ecx],al
  40d605:	(bad)  
  40d606:	(bad)  
  40d607:	call   0x7448ea26
  40d60c:	sbb    ebp,edi
  40d60e:	std    
  40d60f:	fimul  WORD PTR [ecx]
  40d611:	mov    ds:0x9790d7,eax
  40d616:	test   BYTE PTR [ecx+0x5152e88c],ch
  40d61c:	adc    DWORD PTR [edx-0x749f1701],ecx
  40d622:	je     0x40d605
  40d624:	and    ah,dh
  40d626:	pop    ss
  40d627:	xlat   BYTE PTR ds:[ebx]
  40d628:	push   edi
  40d629:	add    BYTE PTR [ebp-0x3382fe57],al
  40d62f:	jmp    0x7c10:0x1cff0097
  40d636:	test   ch,dh
  40d638:	sbb    DWORD PTR [edx+0x433200fe],ecx
  40d63e:	lock sub ch,0xfe
  40d642:	jmp    edi
  40d644:	bound  esi,QWORD PTR [edi]
  40d646:	add    BYTE PTR [eax],al
  40d648:	xor    esp,eax
  40d64a:	or     eax,0xfe0c0084
  40d64f:	(bad)  
  40d650:	jmp    FWORD PTR [eax]
  40d652:	inc    ebx
  40d653:	lock push eax
  40d655:	cmp    BYTE PTR [ebx+0x7d5aff2a],al
  40d65b:	dec    esi
  40d65c:	push   ebx
  40d65d:	lds    edi,FWORD PTR [ebx-0x3]
  40d660:	add    BYTE PTR [ebp-0x2a8a012d],ch
  40d666:	jnp    0x40d67b
  40d668:	mov    eax,0x8b003e60
  40d66d:	popf   
  40d66e:	add    eax,0x7176d474
  40d673:	or     eax,0xfffff58e
  40d678:	(bad)  
  40d679:	(bad)  
  40d67a:	jp     0x40d680
  40d67c:	pxor   mm6,mm4
  40d67f:	add    DWORD PTR [eax],eax
  40d681:	ins    DWORD PTR es:[edi],dx
  40d682:	in     al,0x8a
  40d684:	test   DWORD PTR [ecx+0x7d],ebx
  40d687:	std    
  40d688:	call   DWORD PTR [ebx]
  40d68a:	mov    bh,0x83
  40d68c:	adc    al,0x39
  40d68e:	jge    0x40d68d
  40d690:	cmpxchg cl,bl
  40d693:	add    DWORD PTR [eax],eax
  40d695:	cmp    eax,0x3ff882e4
  40d69a:	repz or eax,0xfa95b08b
  40d6a0:	(bad)  
  40d6a1:	fidivr DWORD PTR [eax+0x7d4a3083]
  40d6a7:	std    
  40d6a8:	jmp    0x40d690
  40d6aa:	jecxz  0x40d62e
  40d6ac:	clc    
  40d6ad:	add    dh,bl
  40d6af:	sbb    ch,BYTE PTR [edx+0x0]
  40d6b2:	std    
  40d6b3:	or     al,BYTE PTR [esp+esi*1-0x1748d6c]
  40d6ba:	sbb    DWORD PTR ds:0x82e3fbef,ebp
  40d6c0:	call   0xd484:0x8c0ab860
  40d6c7:	mov    ds:0x97962685,al
  40d6cc:	add    al,BYTE PTR [eax+0xf029543]
  40d6d2:	adc    DWORD PTR [ebp-0x466c0000],ecx
  40d6d8:	leave  
  40d6d9:	push   ds
  40d6da:	fwait
  40d6db:	and    al,0xf7
  40d6dd:	add    DWORD PTR [edi+edx*4+0x54b05cc9],edx
  40d6e4:	sar    dh,1
  40d6e6:	or     eax,ecx
  40d6e8:	jge    0x40d66e
  40d6ea:	mov    eax,0xe4fe8bda
  40d6ef:	adc    al,0x86
  40d6f1:	xchg   ebx,eax
  40d6f2:	jns    0x40d6de
  40d6f4:	mov    ecx,DWORD PTR [edi+0x7c]
  40d6f7:	xor    eax,0x816bfea8
  40d6fc:	jg     0x40d6ba
  40d6fe:	or     BYTE PTR [esp+ecx*4],al
  40d701:	inc    BYTE PTR [ebx+0x3188ff14]
  40d707:	inc    ebx
  40d708:	mov    ?,esi
  40d70a:	dec    ebx
  40d70b:	and    BYTE PTR [esi-0x69],ch
  40d70e:	inc    ecx
  40d70f:	mov    ds:0xa7d18a8a,al
  40d714:	jl     0x40d75a
  40d716:	add    BYTE PTR [eax],bh
  40d718:	aas    
  40d719:	test   bh,bh
  40d71b:	sub    edx,DWORD PTR [edi-0x3d8f7b89]
  40d721:	mov    bh,dh
  40d723:	(bad)  
  40d724:	out    0x8a,eax
  40d726:	adc    al,0xc8
  40d728:	test   eax,0x119b0042
  40d72d:	inc    ebx
  40d72e:	add    edx,DWORD PTR [edi]
  40d730:	add    BYTE PTR [ebp+0x64f953f8],ch
  40d736:	nop
  40d737:	repz mov al,ch
  40d73a:	cmp    ebx,DWORD PTR [esp+edx*1-0x2d]
  40d73e:	cmp    edx,DWORD PTR [ebx-0x6bfac87d]
  40d744:	add    BYTE PTR [edx-0x76],ch
  40d747:	test   eax,0x945c66f9
  40d74c:	add    cl,ch
  40d74e:	sbb    eax,0x7ccf28ab
  40d753:	adc    ah,bl
  40d755:	pop    ebp
  40d756:	mov    esi,DWORD PTR [edx+0x5278f915]
  40d75c:	add    al,0xb9
  40d75e:	js     0x40d778
  40d760:	aam    0x45
  40d762:	mov    ebx,DWORD PTR [edx-0x7bbed9d1]
  40d768:	in     eax,0xe8
  40d76a:	add    edx,DWORD PTR [eax+ebx*4-0x777d5102]
  40d771:	xchg   edx,eax
  40d772:	out    dx,eax
  40d773:	ins    BYTE PTR es:[edi],dx
  40d774:	popf   
  40d775:	call   0xadbb6b7d
  40d77a:	inc    DWORD PTR [eax]
  40d77c:	pop    ss
  40d77d:	rcr    ebp,0x7f
  40d780:	out    0x1,al
  40d782:	jmp    0x288f628a
  40d787:	jns    0x40d764
  40d789:	push   DWORD PTR [ecx-0x7c89656c]
  40d78f:	add    al,0x94
  40d791:	add    BYTE PTR [ecx],bh
  40d793:	jns    0x40d75f
  40d795:	std    
  40d796:	aaa    
  40d797:	jns    0x40d7b9
  40d799:	ins    DWORD PTR es:[edi],dx
  40d79a:	aam    0x8a
  40d79c:	sub    dh,BYTE PTR [edx]
  40d79e:	ror    DWORD PTR [eax-0x3e3a77c3],0x17
  40d7a5:	(bad)  
  40d7a6:	push   esp
  40d7a7:	xchg   DWORD PTR [edx],edx
  40d7a9:	mov    bh,bh
  40d7ab:	call   0xfa46073c
  40d7b0:	xlat   BYTE PTR ds:[ebx]
  40d7b1:	je     0x40d7ff
  40d7b3:	mov    ch,0xc0
  40d7b5:	xor    BYTE PTR [eax+0x70],dl
  40d7b8:	push   esp
  40d7b9:	mov    ah,0x8c
  40d7bb:	ins    BYTE PTR es:[edi],dx
  40d7bc:	jnp    0x40d749
  40d7be:	dec    BYTE PTR [esi+0x3d1487a7]
  40d7c4:	in     al,0xc7
  40d7c6:	jmp    DWORD PTR [ebx-0x29]
  40d7c9:	test   BYTE PTR [eax+eax*8-0x44ffff70],0x9
  40d7d1:	shl    ebp,cl
  40d7d3:	jb     0x40d829
  40d7d5:	mov    ah,0x3a
  40d7d7:	daa    
  40d7d8:	mov    ds:0xe99f0ef3,eax
  40d7dd:	jp     0x40d82a
  40d7df:	pop    esp
  40d7e0:	add    BYTE PTR [edi-0x38],cl
  40d7e3:	inc    edi
  40d7e4:	in     eax,dx
  40d7e5:	mov    esi,ebx
  40d7e7:	mov    ch,BYTE PTR [ecx-0x433a3585]
  40d7ed:	sbb    eax,DWORD PTR [ebp+0x11169c1]
  40d7f3:	jb     0x40d83b
  40d7f5:	sbb    BYTE PTR [esi+0x7b97e8ff],al
  40d7fb:	inc    edi
  40d7fc:	stc    
  40d7fd:	mov    al,ds:0xe194c79
  40d802:	pop    ss
  40d803:	sbb    BYTE PTR [esp+edx*1-0x25],dh
  40d807:	(bad)  
  40d808:	(bad)  
  40d809:	sbb    eax,0xf95be837
  40d80e:	test   esi,edi
  40d810:	xchg   DWORD PTR [edx],ebx
  40d812:	inc    esp
  40d813:	sub    esp,esi
  40d815:	or     eax,0x2c541686
  40d81a:	js     0x40d7d0
  40d81c:	sub    eax,0x60fe861d
  40d821:	rcl    edi,cl
  40d823:	inc    BYTE PTR [eax]
  40d825:	push   edx
  40d826:	jns    0x40d825
  40d828:	jne    0x40d86b
  40d82a:	jns    0x40d83f
  40d82c:	or     bl,ch
  40d82e:	inc    edx
  40d82f:	add    bl,ch
  40d831:	add    bh,BYTE PTR [esp+edi*8+0xa]
  40d835:	add    cl,BYTE PTR [ecx]
  40d837:	mov    esi,0x6a02fd00
  40d83c:	add    ah,BYTE PTR [ebp+0x218588e2]
  40d842:	js     0x40d841
  40d844:	inc    DWORD PTR [eax]
  40d846:	xchg   DWORD PTR [eax],eax
  40d848:	lea    eax,[edi-0x47]
  40d84b:	ror    BYTE PTR [ebp+eax*4-0x287f3],cl
  40d852:	popf   
  40d853:	rol    DWORD PTR [ebx-0x10],0xbd
  40d857:	add    al,BYTE PTR [eax]
  40d859:	add    BYTE PTR [ebp-0x39],al
  40d85c:	fcos   
  40d85e:	inc    edx
  40d85f:	out    0x7,al
  40d861:	pop    ebx
  40d862:	fild   DWORD PTR [ebx]
  40d864:	add    ebx,DWORD PTR [edi]
  40d866:	cs mov ebp,0x6e508300
  40d86c:	std    
  40d86d:	data16 hlt 
  40d86f:	add    eax,0x77b2ff2d
  40d874:	jae    0x40d8cb
  40d876:	and    eax,0x7dfffe82
  40d87b:	je     0xfdb85895
  40d881:	push   0x6d
  40d883:	sar    dh,cl
  40d885:	adc    eax,0x3e9019
  40d88a:	sbb    eax,DWORD PTR ds:0x79422c84
  40d890:	std    
  40d891:	data16 mov ah,0x5
  40d894:	adc    edi,ebp
  40d896:	xor    bh,BYTE PTR [ecx+0xd]
  40d899:	mov    bh,0xfd
  40d89b:	jl     0x40d85f
  40d89d:	or     al,0x94
  40d89f:	sbb    al,0x4e
  40d8a1:	adc    esp,DWORD PTR [ecx]
  40d8a3:	mov    bh,0x87
  40d8a5:	mov    cl,dl
  40d8a7:	pop    ebx
  40d8a8:	call   0x8902:0x994f0066
  40d8af:	push   ecx
  40d8b0:	mov    ebx,0xa703f783
  40d8b5:	jle    0x40d908
  40d8b7:	xchg   ebp,eax
  40d8b8:	xchg   edi,eax
  40d8b9:	add    dh,BYTE PTR [ebx]
  40d8bb:	aam    0x1a
  40d8bd:	push   es
  40d8be:	fadd   QWORD PTR [ebx+0x4cbf6d9e]
  40d8c4:	sbb    ah,BYTE PTR [ebx-0x3a7e8f5]
  40d8ca:	mov    BYTE PTR [ecx+0x67],bl
  40d8cd:	leave  
  40d8ce:	pop    esp
  40d8cf:	loopne 0x40d85e
  40d8d1:	fisttp DWORD PTR [esi]
  40d8d3:	or     ebx,DWORD PTR ds:0x1ebbfed7
  40d8d9:	retf   0xd044
  40d8dc:	lods   al,BYTE PTR ds:[esi]
  40d8dd:	out    0xfe,eax
  40d8df:	and    DWORD PTR [edi],esp
  40d8e1:	jbe    0x40d867
  40d8e3:	jo     0x40d91b
  40d8e5:	mov    dh,bh
  40d8e7:	inc    esp
  40d8e8:	adc    bh,BYTE PTR [esi]
  40d8ea:	aam    0xfe
  40d8ec:	xchg   edi,eax
  40d8ed:	fcmovnb st,st(2)
  40d8ef:	in     al,0x1c
  40d8f1:	call   FWORD PTR [esi]
  40d8f3:	in     al,0xd6
  40d8f5:	or     eax,0xfe847bec
  40d8fa:	adc    eax,0x7c8397d4
  40d8ff:	js     0x40d8ef
  40d901:	test   DWORD PTR [ebx+0x29722],0x8c97045b
  40d90b:	sbb    DWORD PTR [ebx+0x4b00fe88],ebp
  40d911:	jmp    DWORD PTR [eax+0x7e9795b5]
  40d917:	mov    edi,0x5c6d008b
  40d91c:	xor    eax,DWORD PTR [ebp-0x4f5f8518]
  40d922:	arpl   WORD PTR [ecx+0x24],ax
  40d925:	xor    BYTE PTR [ecx+eax*4+0x6f],bl
  40d929:	test   ebp,eax
  40d92b:	xchg   DWORD PTR [ebx-0x2f],esp
  40d92e:	mov    eax,ds:0xb5854c33
  40d933:	add    al,0x94
  40d935:	fldenv [esi-0x2203f6cc]
  40d93b:	xor    esi,ebx
  40d93d:	or     cl,BYTE PTR [ebp-0x4b77f79]
  40d943:	inc    ebx
  40d944:	xchg   esp,eax
  40d945:	leave  
  40d946:	test   eax,0x3df58807
  40d94b:	jns    0x40d9cc
  40d94d:	test   DWORD PTR [ebp-0x79],edi
  40d950:	mov    WORD PTR [ebx],?
  40d952:	xchg   ebp,eax
  40d953:	adc    DWORD PTR [eax-0x2f],ecx
  40d956:	lahf   
  40d957:	push   ds
  40d958:	or     eax,0x963770f5
  40d95d:	push   ds
  40d95e:	push   0x49
  40d960:	jg     0x40d8e7
  40d962:	push   ebp
  40d963:	xchg   DWORD PTR [edx-0x663a8c0b],ecx
  40d969:	mov    dh,0x68
  40d96b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d96c:	xchg   esi,eax
  40d96d:	and    BYTE PTR [edi],0x83
  40d970:	or     BYTE PTR [ebp-0x2dff8423],ah
  40d976:	push   DWORD PTR [ebx+0x73f0edf9]
  40d97c:	jns    0x40d925
  40d97e:	sbb    DWORD PTR ds:0x69f37e87,0x9
  40d985:	inc    eax
  40d986:	call   DWORD PTR [ebx+0x73fcee44]
  40d98c:	jns    0x40d911
  40d98e:	cmp    ebp,0xffffff86
  40d991:	in     al,0x75
  40d993:	jmp    DWORD PTR [ebp-0x2017cebd]
  40d999:	call   0x9694d820
  40d99e:	jne    0x40d92c
  40d9a0:	movlps QWORD PTR [ebx+0x379d38fe],xmm0
  40d9a7:	aaa    
  40d9a8:	iret   
  40d9a9:	pusha  
  40d9aa:	cwde   
  40d9ab:	cli    
  40d9ac:	mov    eax,ds:0x34fe831a
  40d9b1:	xor    al,0x75
  40d9b3:	mov    WORD PTR [ebp+0xc],ds
  40d9b6:	cmp    esi,0x18
  40d9b9:	(bad)  
  40d9ba:	inc    ebp
  40d9bc:	cmp    ebx,eax
  40d9be:	xor    DWORD PTR [ecx+edx*4+0x12],0xffffffed
  40d9c3:	add    edi,edi
  40d9c5:	push   edi
  40d9c6:	add    bl,ch
  40d9c8:	jmp    0x40d990
  40d9ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d9cb:	mov    ch,BYTE PTR [esp+ebp*1]
  40d9ce:	iret   
  40d9cf:	enter  0x1f6a,0x83
  40d9d3:	push   cs
  40d9d4:	pop    esp
  40d9d5:	fdivr  DWORD PTR [eax-0x7c]
  40d9d8:	leave  
  40d9d9:	add    BYTE PTR [ecx],dl
  40d9db:	cmp    esi,0x6a
  40d9de:	fadd   DWORD PTR [ecx]
  40d9e0:	mov    DWORD PTR [ebx+edi*4-0x7b],ebp
  40d9e4:	(bad)  
  40d9e5:	push   esi
  40d9e6:	push   ds
  40d9e7:	xor    al,0x8
  40d9e9:	pusha  
  40d9ea:	sbb    al,0xeb
  40d9ec:	std    
  40d9ed:	inc    esi
  40d9ee:	sbb    dh,BYTE PTR [esi+0x4c]
  40d9f1:	push   ecx
  40d9f2:	or     BYTE PTR [ebp+0x1b],dh
  40d9f5:	aaa    
  40d9f6:	sbb    al,BYTE PTR [edx+0x75c69a52]
  40d9fc:	test   ch,bh
  40d9fe:	sbb    DWORD PTR [edx-0x7c594602],eax
  40da04:	adc    al,0x59
  40da06:	fs ret 
  40da08:	jmp    DWORD PTR [ebx+0x57]
  40da0b:	repnz mov es,WORD PTR [eax]
  40da0e:	inc    esp
  40da0f:	jnp    0x40da0e
  40da11:	inc    esi
  40da13:	lock jmp 0x40d9fe
  40da16:	xchg   esi,eax
  40da17:	xor    al,0x0
  40da19:	add    BYTE PTR [esi+0x3af8818d],dl
  40da1f:	repz add eax,0xff7570c6
  40da25:	jmp    0x6462:0xfb5c072e
  40da2c:	ds fcomp st(2)
  40da2f:	jl     0x40d9ba
  40da31:	jne    0x40da18
  40da33:	data16 repz add ch,ch
  40da37:	inc    ch
  40da39:	inc    ebp
  40da3a:	inc    edx
  40da3b:	(bad)  
  40da3c:	call   0xff3ddb32
  40da41:	push   DWORD PTR [edx]
  40da43:	cmp    eax,0xe23e82e2
  40da48:	in     al,0x88
  40da4a:	inc    esi
  40da4b:	out    dx,eax
  40da4c:	icebp  
  40da4d:	or     al,0x6a
  40da4f:	in     eax,dx
  40da50:	or     DWORD PTR [ebp+0x8],eax
  40da53:	lods   eax,DWORD PTR ds:[esi]
  40da54:	fs or  ebx,ecx
  40da57:	dec    edx
  40da58:	jge    0x40da43
  40da5a:	add    esi,DWORD PTR [edx+ebx*8]
  40da5d:	add    ecx,DWORD PTR [ebx-0x48689b7d]
  40da63:	mov    esp,0x34f08afe
  40da68:	repz iret 
  40da6a:	or     DWORD PTR [ebx+0x7d],0xd
  40da6e:	test   BYTE PTR [ecx],al
  40da70:	std    
  40da71:	(bad)  
  40da72:	dec    edx
  40da74:	icebp  
  40da75:	fist   WORD PTR [ebx+0x23]
  40da78:	aad    0xe7
  40da7a:	lock ret 
  40da7c:	jnp    0x40da7b
  40da7e:	mov    esi,DWORD PTR [ebp+0x1fd7f]
  40da84:	leave  
  40da85:	mov    WORD PTR [ebp-0x6c],es
  40da88:	lahf   
  40da89:	xor    cl,BYTE PTR [ebp-0x17cc382f]
  40da8f:	fadd   DWORD PTR [eax+0x3]
  40da92:	add    BYTE PTR [edi],bl
  40da94:	or     eax,0x213c8ab3
  40da99:	pop    es
  40da9a:	aam    0x2c
  40da9c:	jnp    0x40dae7
  40da9e:	add    BYTE PTR [esi+edx*1-0x5fff017c],dl
  40daa5:	or     al,0x2c
  40daa7:	call   0x44fd29
  40daac:	paddusw mm4,QWORD PTR [ebx+0x3295dc82]
  40dab3:	push   ebx
  40dab4:	arpl   WORD PTR [edx+0xd],ax
  40dab7:	or     ah,ch
  40dab9:	push   es
  40daba:	(bad)  
  40dabb:	(bad)  
  40dabc:	sti    
  40dabd:	push   ds
  40dabe:	mov    eax,DWORD PTR [edx+0xb0d98f3]
  40dac4:	jmp    0x40dab2
  40dac6:	scas   eax,DWORD PTR es:[edi]
  40dac7:	mov    al,BYTE PTR [ecx-0x61]
  40daca:	call   0x498b:0x2992391
  40dad1:	arpl   WORD PTR [edx+0x2990d30],bx
  40dad7:	add    ebx,0xa
  40dada:	hlt    
  40dadb:	sbb    DWORD PTR [edi+0x12],0xffffff84
  40dadf:	(bad)  
  40dae0:	pop    ss
  40dae1:	sbb    eax,DWORD PTR [edx]
  40dae3:	je     0x40db29
  40dae5:	fnstcw WORD PTR ds:0x393e94fb
  40daeb:	mov    ebx,DWORD PTR [edx-0x6a4a10c1]
  40daf1:	xchg   edi,eax
  40daf2:	ja     0x40dae3
  40daf4:	pop    ss
  40daf5:	rol    DWORD PTR [ebx+0x3dd19a74],0xf7
  40dafc:	xchg   ecx,eax
  40dafd:	ds int 0x55
  40db00:	jl     0x40db02
  40db02:	sub    DWORD PTR ds:0xe1e0094,ecx
  40db08:	add    BYTE PTR [ebp+ebp*1-0x41],dh
  40db0c:	test   al,ah
  40db0e:	clc    
  40db0f:	add    BYTE PTR ds:0x8005814a,ah
  40db15:	inc    ebx
  40db16:	push   DWORD PTR [ebx-0x8]
  40db19:	push   cs
  40db1a:	and    esp,ecx
  40db1c:	sub    eax,0x2363f2c
  40db21:	xchg   esp,eax
  40db22:	xchg   ebp,eax
  40db23:	test   BYTE PTR [esi+0xa538123],0x5a
  40db2a:	cmp    ebx,esi
  40db2c:	add    eax,0xe160fd2f
  40db31:	push   cs
  40db32:	cwde   
  40db33:	cdq    
  40db34:	mov    esp,0xf9be0094
  40db39:	jmp    0x40dad2
  40db3b:	(bad)  
  40db3c:	pop    edx
  40db3d:	cli    
  40db3e:	and    BYTE PTR [edx-0x37],0xee
  40db42:	ret    
  40db43:	out    0x12,eax
  40db45:	adc    DWORD PTR [edi-0x61],eax
  40db48:	and    edx,0x7f
  40db4b:	adc    edi,DWORD PTR [ebx-0x25]
  40db4e:	icebp  
  40db4f:	fs mov bl,0xcc
  40db52:	add    BYTE PTR [ebp+0x7da04083],0xf9
  40db59:	retf   0x7615
  40db5c:	add    DWORD PTR [eax-0x8],0xffffff80
  40db60:	adc    ch,BYTE PTR [edx-0x14769a80]
  40db66:	lock jae 0x40dbad
  40db69:	lods   al,BYTE PTR ds:[esi]
  40db6a:	push   0x4f
  40db6c:	add    DWORD PTR [eax],0xffffff9a
  40db6f:	sub    ah,BYTE PTR [edx+0x70]
  40db72:	push   ss
  40db73:	ins    DWORD PTR es:[edi],dx
  40db74:	or     BYTE PTR [edi-0x7c1f2f8],al
  40db7a:	mov    esi,0xa3abff76
  40db7f:	add    cl,BYTE PTR [ebp-0x73300c5c]
  40db85:	lods   al,BYTE PTR ds:[esi]
  40db86:	repz iret 
  40db88:	(bad)  
  40db89:	xchg   esp,eax
  40db8a:	xchg   ebx,eax
  40db8b:	inc    edi
  40db8c:	inc    esp
  40db8d:	adc    eax,0xe9000080
  40db92:	dec    ebx
  40db93:	ud0    ebx,esp
  40db96:	or     edx,DWORD PTR ds:0xc00ce940
  40db9c:	jae    0x40db82
  40db9e:	adc    cl,BYTE PTR [eax-0x2]
  40dba1:	add    dl,bh
  40dba3:	jg     0x40dbb9
  40dba5:	jmp    0xd2409c37
  40dbaa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dbab:	mov    al,BYTE PTR [ecx+eax*8+0x8]
  40dbaf:	(bad)
  40dbb2:	and    eax,ebp
  40dbb4:	in     eax,0xd2
  40dbb6:	popf   
  40dbb7:	and    DWORD PTR [ecx+eax*8-0x69],0x33
  40dbbc:	ror    BYTE PTR [edi+0x9],0xc5
  40dbc0:	cmc    
  40dbc1:	arpl   sp,bx
  40dbc3:	js     0x82a48f5
  40dbc9:	ins    BYTE PTR es:[edi],dx
  40dbca:	int3   
  40dbcb:	jae    0x40dc1c
  40dbcd:	xchg   esi,eax
  40dbce:	fadd   QWORD PTR [edi]
  40dbd0:	(bad)  
  40dbd1:	and    al,0x0
  40dbd3:	dec    esp
  40dbd4:	jg     0x40dbbc
  40dbd6:	fimul  DWORD PTR [ecx+eax*1]
  40dbd9:	add    BYTE PTR [edx-0x19407cb0],bh
  40dbdf:	sbb    al,0x41
  40dbe1:	mov    ch,BYTE PTR [eax-0x16f0bea0]
  40dbe7:	int3   
  40dbe8:	mov    ch,bl
  40dbea:	push   0xe9013733
  40dbef:	xchg   edi,eax
  40dbf0:	ror    DWORD PTR [edx+0x56d69fac],cl
  40dbf6:	add    BYTE PTR [esi],ch
  40dbf8:	jmp    0x40dbc2
  40dbfa:	outs   dx,DWORD PTR ds:[esi]
  40dbfb:	ins    DWORD PTR es:[edi],dx
  40dbfc:	add    esi,DWORD PTR [ebx]
  40dbfe:	leave  
  40dbff:	add    DWORD PTR ds:0x36bc940f,0xa0756f6
  40dc09:	lea    eax,[ebp-0x67]
  40dc0c:	push   ebx
  40dc0d:	mov    ebx,edi
  40dc0f:	hlt    
  40dc10:	push   eax
  40dc11:	jmp    0xb9ff:0xffb744e8
  40dc18:	ret    
  40dc19:	jae    0x40dc2a
  40dc1b:	inc    edx
  40dc1d:	out    0xa6,eax
  40dc1f:	sub    al,0x3
  40dc21:	add    BYTE PTR [eax+0x73fefec0],al
  40dc27:	sub    DWORD PTR [ecx+edi*8-0x72fc38aa],ecx
  40dc2e:	inc    ebp
  40dc2f:	inc    esi
  40dc30:	push   esp
  40dc31:	out    0xfa,al
  40dc33:	add    eax,DWORD PTR cs:[eax]
  40dc36:	test   BYTE PTR [eax],al
  40dc38:	cmp    eax,0x22ebe677
  40dc3d:	lea    ecx,[ebx-0x19]
  40dc40:	jbe    0x40dc05
  40dc42:	and    eax,DWORD PTR [eax]
  40dc44:	std    
  40dc45:	jg     0x40dc45
  40dc47:	mov    ch,BYTE PTR [ebx+eax*8]
  40dc4a:	call   0x8a05c25f
  40dc4f:	shr    DWORD PTR [esi+eiz*8-0x2],1
  40dc53:	(bad)  
  40dc54:	mov    ebp,0xede1c102
  40dc59:	or     edx,ecx
  40dc5b:	shl    DWORD PTR ds:0xb5e2c10c,0xb
  40dc62:	ret    0xfb48
  40dc65:	inc    esi
  40dc66:	cmc    
  40dc67:	pop    edx
  40dc68:	jo     0x40dbec
  40dc6a:	(bad)  
  40dc6b:	jmp    FWORD PTR [ebp-0x6b7b78f1]
  40dc71:	imul   eax,DWORD PTR [edx],0xec67fe00
  40dc77:	add    BYTE PTR [ecx],bl
  40dc79:	lods   eax,DWORD PTR ds:[esi]
  40dc7a:	jnp    0x40dccb
  40dc7c:	movnti DWORD PTR [ebx-0x52],ebp
  40dc80:	inc    edi
  40dc81:	imul   eax,DWORD PTR [edx],0x98b45484
  40dc87:	mov    ecx,edx
  40dc89:	and    cl,BYTE PTR [ebx+eax*4-0x17dd457]
  40dc90:	pop    ebx
  40dc91:	in     al,dx
  40dc92:	inc    ebx
  40dc93:	jae    0x40dc37
  40dc95:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dc96:	cmp    ebp,0x2684b
  40dc9c:	add    dl,al
  40dc9e:	adc    eax,0x773b796b
  40dca3:	jg     0x40dc31
  40dca5:	fnstenv [edi-0x2e]
  40dca8:	xor    ch,BYTE PTR [ebx]
  40dcaa:	aas    
  40dcab:	(bad)  [ecx+ebx*1+0x1bfe80ac]
  40dcb2:	cmp    BYTE PTR [ebx+0x154f047c],cl
  40dcb8:	mov    ah,0xa1
  40dcba:	daa    
  40dcbb:	add    al,0x85
  40dcbd:	aam    0x33
  40dcbf:	or     al,dh
  40dcc1:	push   ecx
  40dcc2:	mov    esi,0xe2a7eadb
  40dcc7:	cmc    
  40dcc8:	out    dx,eax
  40dcc9:	push   DWORD PTR [eax-0x7d]
  40dccc:	jge    0x40dc66
  40dcce:	imul   esi,esi,0x201e0f08
  40dcd4:	cmp    ecx,ebx
  40dcd6:	adc    al,0x75
  40dcd8:	jmp    0x632e:0x17c8f2a6
  40dcdf:	cmp    DWORD PTR [edi+0x448f1790],0xffffffbb
  40dce6:	pop    ss
  40dce7:	ins    BYTE PTR es:[edi],dx
  40dce8:	retf   
  40dce9:	rol    DWORD PTR [eax],0x66
  40dcec:	and    BYTE PTR [edx-0x7f7fa70d],0x8
  40dcf3:	inc    ebx
  40dcf5:	xchg   ebx,eax
  40dcf6:	cmp    dl,BYTE PTR [esi-0x9]
  40dcf9:	push   edx
  40dcfa:	add    bl,0x78
  40dcfd:	fld    QWORD PTR [esi-0x5d]
  40dd00:	jl     0x40dd02
  40dd02:	xchg   esp,eax
  40dd03:	or     eax,0x952c6c
  40dd08:	jmp    0xabcc78fa
  40dd0d:	push   ebx
  40dd0e:	in     eax,dx
  40dd0f:	add    BYTE PTR [ecx-0xcb7f80],bh
  40dd15:	ret    
  40dd16:	push   ebx
  40dd17:	and    BYTE PTR [edi+ecx*1],0xbe
  40dd1b:	add    ah,BYTE PTR [ecx+0x18c30ce9]
  40dd21:	adc    BYTE PTR [edx],al
  40dd23:	ret    
  40dd24:	or     al,0xcb
  40dd26:	mov    ds:0x94034084,al
  40dd2b:	add    BYTE PTR [ecx],dh
  40dd2d:	clc    
  40dd2e:	mov    WORD PTR [esi+0x23],es
  40dd31:	ja     0x40dcf1
  40dd33:	addr16 aam 0x4
  40dd36:	xchg   esp,eax
  40dd37:	add    BYTE PTR [ecx+ecx*8-0x25],bl
  40dd3b:	addr16 mov cl,0xb8
  40dd3e:	xchg   esp,eax
  40dd3f:	add    BYTE PTR [edx+0x74],dh
  40dd42:	or     al,0xf3
  40dd44:	mov    eax,0x347cf183
  40dd49:	imul   ebp,edx,0x3dea94f2
  40dd4f:	(bad)  
  40dd50:	cmp    DWORD PTR [esp+esi*4+0x7e],ebp
  40dd54:	xchg   ebp,eax
  40dd55:	jg     0x40dd75
  40dd57:	js     0x40ddc2
  40dd59:	jg     0x40dcef
  40dd5b:	repz push ds
  40dd5d:	xchg   ecx,eax
  40dd5e:	pop    eax
  40dd5f:	or     BYTE PTR [ecx],bl
  40dd61:	xchg   ecx,eax
  40dd62:	push   eax
  40dd63:	jo     0x40dd64
  40dd65:	sbb    BYTE PTR [eax],al
  40dd67:	inc    eax
  40dd68:	clc    
  40dd69:	mov    ch,0xe8
  40dd6b:	xchg   edi,eax
  40dd6c:	mov    DWORD PTR [ecx+ebx*2+0xf],esi
  40dd70:	jne    0x40dcfa
  40dd72:	fdiv   QWORD PTR [edi]
  40dd74:	gs fwait
  40dd76:	lahf   
  40dd77:	cdq    
  40dd78:	add    BYTE PTR [ebx+0xbf50b4e],al
  40dd7e:	jb     0x40ddf5
  40dd80:	add    al,0xc6
  40dd82:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dd83:	add    dl,bh
  40dd85:	call   0x41760f
  40dd8a:	xchg   esi,eax
  40dd8b:	inc    ecx
  40dd8d:	jae    0x40dd78
  40dd8f:	xchg   edi,eax
  40dd90:	xchg   DWORD PTR [ebp+ecx*1+0xf],eax
  40dd94:	fld    QWORD PTR [edi]
  40dd96:	push   0xffffffe0
  40dd98:	add    DWORD PTR [eax-0x7d],edx
  40dd9b:	ins    DWORD PTR es:[edi],dx
  40dd9c:	rcl    DWORD PTR [edx+0x11],cl
  40dd9f:	jmp    0x8274:0xefefe7c
  40dda6:	neg    BYTE PTR [eax+0x2cee07f5]
  40ddac:	pop    esp
  40ddad:	out    0xa5,eax
  40ddaf:	jmp    0x40ddb1
  40ddb1:	add    BYTE PTR [edx+0x1c],dh
  40ddb4:	pop    esp
  40ddb5:	out    0x32,eax
  40ddb7:	dec    edx
  40ddb8:	add    DWORD PTR [eax],eax
  40ddba:	push   0xffffff8a
  40ddbc:	jp     0x40ddcc
  40ddbe:	ins    DWORD PTR es:[edi],dx
  40ddbf:	icebp  
  40ddc0:	jp     0x40ddc0
  40ddc2:	mov    esi,0x3d007b16
  40ddc7:	pushf  
  40ddc8:	inc    edx
  40ddc9:	inc    esp
  40ddca:	mov    dl,0x0
  40ddcc:	xchg   edi,eax
  40ddcd:	xchg   BYTE PTR [edx+eiz*4-0x3e],al
  40ddd1:	fstp   QWORD PTR [edx-0x50]
  40ddd4:	push   ebp
  40ddd5:	(bad)  
  40ddd6:	dec    DWORD PTR [esi]
  40ddd8:	pop    ds
  40ddd9:	(bad)
  40dddc:	sbb    ebp,eax
  40ddde:	rol    DWORD PTR [eax],1
  40dde0:	inc    esi
  40dde1:	dec    eax
  40dde2:	in     eax,0x8d
  40dde4:	mov    eax,0x114587cf
  40dde9:	call   0xfffd9113
  40ddee:	mov    dh,al
  40ddf0:	cs std 
  40ddf2:	std    
  40ddf3:	rdtsc  
  40ddf5:	cmp    edi,edi
  40ddf7:	(bad)  
  40ddf8:	jmp    0xffff:0x6ed5e655
  40ddff:	inc    BYTE PTR [eax-0x15]
  40de02:	push   0xe64e235a
  40de07:	jo     0x40ddb1
  40de09:	cli    
  40de0a:	std    
  40de0b:	and    DWORD PTR [ebp+0x23087504],0xffffffe7
  40de12:	pop    eax
  40de13:	mov    ah,0x6c
  40de15:	(bad)  
  40de16:	jmp    0x3375:0xfdf7be0f
  40de1d:	lds    eax,FWORD PTR [ebx-0x9]
  40de20:	mul    ch
  40de22:	add    al,dh
  40de24:	lock cmc 
  40de26:	(bad)  
  40de27:	out    0x96,eax
  40de29:	mov    eax,0xbdffff
  40de2e:	sti    
  40de2f:	add    DWORD PTR [eax],eax
  40de31:	shl    BYTE PTR [eax+0x56427d7e],0x72
  40de38:	xchg   esi,eax
  40de39:	jmp    0x68f5:0x60ffea72
  40de40:	call   FWORD PTR [esi+0x3afd33ec]
  40de46:	std    
  40de47:	add    eax,0xfffffffa
  40de4a:	xchg   ecx,eax
  40de4b:	mov    esi,0x895371eb
  40de50:	in     al,dx
  40de51:	outs   dx,BYTE PTR ds:[esi]
  40de52:	lock adc al,BYTE PTR [ebx+0x56fef890]
  40de59:	xchg   esp,eax
  40de5a:	fdivp  st(5),st
  40de5c:	add    edx,DWORD PTR [ecx]
  40de5e:	mov    cl,BYTE PTR [esi+ecx*4]
  40de61:	sbb    al,0x69
  40de63:	add    al,BYTE PTR [eax]
  40de65:	pop    ss
  40de66:	add    al,0x7c
  40de68:	inc    DWORD PTR [esi-0x1]
  40de6b:	cmp    ebx,DWORD PTR [ebx-0x2d]
  40de6e:	and    esi,DWORD PTR [eax+eax*1-0x6c]
  40de72:	imul   eax,DWORD PTR [edx],0x88cd3989
  40de78:	add    eax,0xe77aac97
  40de7d:	sub    ah,BYTE PTR [ebp+0x2]
  40de80:	add    BYTE PTR [eax],bl
  40de82:	sub    bh,dh
  40de84:	pop    ss
  40de85:	shld   DWORD PTR [esi-0x76],esi,cl
  40de89:	(bad)  
  40de8a:	rol    BYTE PTR [edi+0x3],0x94
  40de8e:	addr16 jnp 0x40dedd
  40de91:	push   0xefcf23
  40de96:	lods   eax,DWORD PTR ds:[esi]
  40de97:	mov    esp,0xff1286e
  40de9c:	imul   eax,DWORD PTR [esi+0x1f],0xd98872a5
  40dea3:	add    edi,DWORD PTR [ecx]
  40dea5:	(bad)  
  40dea6:	mov    ecx,0x407c87bc
  40deab:	fild   WORD PTR ds:0x8d6fd98b
  40deb1:	dec    ebx
  40deb2:	xchg   ebp,eax
  40deb3:	outs   dx,DWORD PTR ds:[esi]
  40deb4:	call   0xc72da3cc
  40deb9:	push   es
  40deba:	pushf  
  40debb:	aaa    
  40debc:	jge    0x40ded2
  40debe:	enter  0xc271,0xff
  40dec2:	push   ss
  40dec3:	lods   al,BYTE PTR ds:[esi]
  40dec4:	push   cs
  40dec5:	test   esp,edx
  40dec7:	xor    al,0xd
  40dec9:	mov    ebx,DWORD PTR [ecx-0x4d]
  40decc:	xchg   ebp,ecx
  40dece:	cld    
  40decf:	call   0xd4deda
  40ded4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ded5:	into   
  40ded6:	fbld   TBYTE PTR ds:0x7c587ca2
  40dedc:	popa   
  40dedd:	(bad)  
  40dede:	iret   
  40dedf:	std    
  40dee0:	xchg   ecx,eax
  40dee1:	cmp    BYTE PTR [edx+0x4],bl
  40dee4:	add    eax,0x74c3ba46
  40dee9:	mov    BYTE PTR [ecx],dh
  40deeb:	add    al,0x76
  40deed:	(bad)  
  40deee:	mov    ebx,0x94700bff
  40def3:	(bad)  [eax+0x3a]
  40def6:	sbb    DWORD PTR [ebp+ebp*8-0x71],esi
  40defa:	add    BYTE PTR [esi],cl
  40defc:	jp     0x40df53
  40defe:	jl     0x40deee
  40df00:	fstp   DWORD PTR [edi]
  40df02:	inc    eax
  40df03:	jmp    0x52c9178d
  40df08:	push   0x9406d3
  40df0d:	ins    DWORD PTR es:[edi],dx
  40df0e:	inc    ebx
  40df0f:	out    0x19,eax
  40df11:	pop    esp
  40df12:	les    ebx,FWORD PTR [ebx-0x68b2ef30]
  40df18:	add    cl,ch
  40df1a:	xchg   BYTE PTR [ebx],dl
  40df1c:	idiv   edx
  40df1e:	mov    BYTE PTR [edx-0x7b],dl
  40df21:	push   ds
  40df22:	imul   edx,edx,0xffffffff
  40df25:	call   0x7380ef2d
  40df2a:	push   es
  40df2b:	addr16 inc eax
  40df2d:	test   al,0xdd
  40df2f:	push   esi
  40df30:	sub    eax,0xd356dd29
  40df35:	jno    0x40df9f
  40df37:	(bad)  
  40df38:	int    0x36
  40df3a:	shl    DWORD PTR [eax],cl
  40df3c:	ret    
  40df3d:	aam    0xd4
  40df3f:	repz int 0x6a
  40df42:	add    al,0x94
  40df44:	test   eax,eax
  40df46:	aaa    
  40df47:	add    dh,BYTE PTR ds:0x85aff0bf
  40df4d:	call   DWORD PTR [ebx]
  40df4f:	ins    BYTE PTR es:[edi],dx
  40df50:	jle    0x40df4c
  40df52:	call   0xf1ab0c42
  40df57:	outs   dx,DWORD PTR ds:[esi]
  40df58:	add    eax,0x364f9ed3
  40df5d:	(bad)  
  40df5e:	sbb    eax,0x2f879700
  40df63:	pusha  
  40df64:	enter  0x8afc,0x79
  40df68:	adc    eax,0x20df7373
  40df6d:	cmp    ecx,DWORD PTR [ecx-0x22976be9]
  40df73:	outs   dx,DWORD PTR ds:[esi]
  40df74:	pop    ds
  40df75:	jp     0x40def9
  40df77:	out    0x9b,eax
  40df79:	(bad)  
  40df7a:	jl     0x40df6f
  40df7c:	push   cs
  40df7d:	cs call 0xfeb7c272
  40df83:	mov    bh,0xf2
  40df85:	cld    
  40df86:	mov    ch,BYTE PTR [edi]
  40df88:	jmp    0x40df89
  40df8a:	push   esi
  40df8b:	push   ecx
  40df8c:	icebp  
  40df8d:	push   ecx
  40df8e:	(bad)  
  40df8f:	mov    ss:0x428f5e40,eax
  40df95:	dec    ecx
  40df96:	ret    0x5172
  40df99:	add    al,0x8b
  40df9b:	lock push 0xffffffce
  40df9e:	push   esi
  40df9f:	ins    BYTE PTR es:[edi],dx
  40dfa0:	fpatan 
  40dfa2:	xor    ah,BYTE PTR [eax+ebx*8-0xd]
  40dfa6:	cs xchg edx,eax
  40dfa8:	xlat   BYTE PTR ds:[ebx]
  40dfa9:	das    
  40dfaa:	mov    eax,DWORD PTR [ecx]
  40dfac:	inc    edi
  40dfad:	shl    edi,1
  40dfaf:	lods   eax,DWORD PTR ds:[esi]
  40dfb0:	ret    0xfe76
  40dfb3:	bound  ebp,QWORD PTR [eax-0x6ba30a84]
  40dfb9:	xor    al,al
  40dfbb:	shl    BYTE PTR [esi-0x68809832],cl
  40dfc1:	add    BYTE PTR [eax],al
  40dfc3:	bound  eax,QWORD PTR [eax]
  40dfc5:	push   esi
  40dfc6:	pop    edi
  40dfc7:	fld    QWORD PTR [eax]
  40dfc9:	push   edi
  40dfca:	cld    
  40dfcb:	call   DWORD PTR [ebp+0x67]
  40dfce:	(bad)  
  40dfd0:	mov    bh,0xf
  40dfd2:	sti    
  40dfd3:	std    
  40dfd4:	mov    ch,BYTE PTR [esi]
  40dfd6:	out    0xc,eax
  40dfd8:	push   0xffffffed
  40dfda:	imul   edx,DWORD PTR [eax+eax*1-0x3fccfc43],0x15
  40dfe2:	cmp    BYTE PTR [ecx+0x0],bh
  40dfe5:	lods   eax,DWORD PTR ds:[esi]
  40dfe6:	pop    edx
  40dfe7:	pop    esp
  40dfe8:	pop    ebx
  40dfe9:	out    dx,al
  40dfea:	push   eax
  40dfeb:	mov    esp,ebp
  40dfed:	mov    WORD PTR [edi+0x55],cs
  40dff0:	xor    esp,DWORD PTR [edx]
  40dff2:	fisttp DWORD PTR cs:[ecx+0x7e37efb0]
  40dff9:	test   eax,0x7b8b2b79
  40dffe:	inc    dh
  40e000:	data16 (bad) 
  40e002:	jnp    0x40e022
  40e004:	add    BYTE PTR [ebx+0x14],ch
  40e007:	push   0x4
  40e009:	out    dx,al
  40e00a:	ret    
  40e00b:	sbb    dl,BYTE PTR [eax-0x4e]
  40e00e:	jo     0x40e016
  40e010:	dec    DWORD PTR [eax+0x2f]
  40e013:	push   ss
  40e014:	inc    eax
  40e015:	ins    DWORD PTR es:[edi],dx
  40e016:	jle    0x40dfda
  40e018:	or     al,0xe8
  40e01a:	ret    
  40e01b:	jae    0x40e020
  40e01d:	mov    dl,0x40
  40e01f:	cli    
  40e020:	inc    ebx
  40e021:	mov    esi,0xf33b36c2
  40e026:	jbe    0x40e0a2
  40e028:	rol    DWORD PTR [eax],cl
  40e02a:	mov    BYTE PTR [eax-0x6],0x5f
  40e02e:	test   bl,0xc0
  40e031:	add    al,0x3d
  40e033:	push   eax
  40e034:	mov    esp,ebp
  40e036:	cld    
  40e037:	dec    ebp
  40e038:	push   ebp
  40e039:	xor    esi,DWORD PTR [edx]
  40e03b:	sub    eax,0xf87089db
  40e040:	aaa    
  40e041:	jle    0x40dfd7
  40e043:	gs clc 
  40e045:	sub    al,0xf
  40e047:	pop    edi
  40e048:	add    eax,edi
  40e04a:	jb     0x40e036
  40e04c:	sti    
  40e04d:	xor    edx,DWORD PTR [edi+ebp*1-0x157b95e5]
  40e054:	inc    ebx
  40e055:	and    eax,DWORD PTR [esi+eiz*4-0x12]
  40e059:	pop    es
  40e05a:	(bad)  [ebx+0x36]
  40e05d:	push   ss
  40e05e:	push   esp
  40e05f:	imul   eax,DWORD PTR [ebx+0x43e498c3],0xbe869774
  40e069:	sti    
  40e06a:	push   edi
  40e06b:	jmp    0x7c00:0x176f3740
  40e072:	(bad)  
  40e073:	loope  0x40e033
  40e075:	sti    
  40e076:	inc    ebx
  40e077:	adc    cl,BYTE PTR [ebx-0x3f]
  40e07a:	nop
  40e07b:	imul   edx,eax,0x86e01f56
  40e081:	inc    esi
  40e082:	test   al,0xe2
  40e084:	jb     0x40e0d5
  40e086:	ins    BYTE PTR es:[edi],dx
  40e087:	dec    ecx
  40e088:	ja     0x40e088
  40e08a:	jnp    0x40e077
  40e08c:	jnp    0x40e08f
  40e08e:	add    cl,dh
  40e090:	pop    ecx
  40e091:	add    esi,0xffffffb0
  40e094:	xchg   esi,eax
  40e095:	push   0xffffff9a
  40e097:	arpl   WORD PTR [edi],sp
  40e099:	jns    0x40e01d
  40e09b:	pop    esp
  40e09c:	push   0xfffffff5
  40e09e:	add    eax,DWORD PTR [edi-0x78fd92d9]
  40e0a4:	daa    
  40e0a5:	les    ebx,FWORD PTR [esi-0x1e]
  40e0a8:	sub    cl,BYTE PTR [ebp-0x74908fbd]
  40e0ae:	dec    ebx
  40e0af:	js     0x40e114
  40e0b1:	mov    edi,DWORD PTR [edi]
  40e0b3:	nop
  40e0b4:	loop   0x40e080
  40e0b6:	add    ebx,DWORD PTR [edi+0x28]
  40e0b9:	out    dx,eax
  40e0ba:	add    ah,BYTE PTR [edi+0x0]
  40e0bd:	test   eax,0x6940ae44
  40e0c2:	arpl   WORD PTR [ecx],cx
  40e0c4:	shr    DWORD PTR [ecx+0x63de03ed],0x46
  40e0cb:	mov    ebx,0xf33c5300
  40e0d0:	lock in al,0x78
  40e0d3:	mov    ebx,0x962d1468
  40e0d8:	add    BYTE PTR [edx+0x3f],ch
  40e0db:	xchg   DWORD PTR [ecx+0x71],eax
  40e0de:	mov    edi,0xc7720477
  40e0e3:	ja     0x40e0ed
  40e0e5:	aas    
  40e0e6:	lea    eax,[edi+0x1c]
  40e0e9:	loope  0x40e163
  40e0eb:	add    DWORD PTR [ecx-0x7ebbf458],0xbc000ba7
  40e0f5:	repz jmp 0xeec174fe
  40e0fb:	call   FWORD PTR [ebx-0x74fa242d]
  40e101:	pop    eax
  40e102:	sub    esi,ecx
  40e104:	push   ds
  40e105:	imul   esp,DWORD PTR fs:[edi-0x6d],0xe7361ce
  40e10d:	(bad)  
  40e10e:	in     al,dx
  40e10f:	rcr    BYTE PTR [esi],1
  40e111:	repz lock add al,0xdb
  40e115:	cld    
  40e116:	ror    DWORD PTR [edx-0x55],0x68
  40e11a:	js     0x40e16f
  40e11c:	pop    edx
  40e11d:	jne    0x40e18b
  40e11f:	inc    ebx
  40e120:	mov    ds:0x9403737c,al
  40e125:	add    BYTE PTR [edx-0x3f],ah
  40e128:	xchg   edi,eax
  40e129:	rcr    ecx,1
  40e12b:	pop    esp
  40e12c:	or     al,0xbb
  40e12e:	clc    
  40e12f:	mov    eax,edx
  40e131:	ins    BYTE PTR es:[edi],dx
  40e132:	mov    edi,0xfff697d8
  40e137:	jle    0x40e147
  40e139:	aam    0xf7
  40e13b:	add    dl,BYTE PTR [ecx-0x348d24cf]
  40e141:	add    DWORD PTR [ebp-0x1f],edi
  40e144:	sbb    esp,edx
  40e146:	sti    
  40e147:	adc    ch,bl
  40e149:	fs jge 0x40e14d
  40e14c:	psubq  mm1,QWORD PTR [ebp+ebp*1-0x2a95f769]
  40e154:	mov    DWORD PTR [ebx-0x38ff1eba],0x89ed1475
  40e15e:	sar    bh,0x69
  40e161:	push   esp
  40e162:	or     DWORD PTR [ebp-0x1273b57],eax
  40e168:	sub    al,0x3c
  40e16a:	mov    al,BYTE PTR [ebp+ecx*4+0x17]
  40e16e:	inc    edx
  40e16f:	aaa    
  40e170:	ret    0x64d4
  40e173:	jnp    0x40e116
  40e175:	pop    ds
  40e176:	mov    ah,BYTE PTR ds:[edi+0x6eff0230]
  40e17d:	and    eax,DWORD PTR [ecx-0x78512341]
  40e183:	dec    ebp
  40e184:	in     eax,0x1e
  40e186:	inc    ecx
  40e187:	push   0x29
  40e189:	sar    bh,0x5
  40e18c:	ret    
  40e18d:	mov    edi,0x209956c1
  40e192:	mov    BYTE PTR [ebx],0x3e
  40e195:	test   DWORD PTR [eax],esi
  40e197:	push   ss
  40e198:	test   eax,0xddc37f97
  40e19d:	loop   0x40e15b
  40e19f:	repz jb 0x40e1ef
  40e1a2:	cld    
  40e1a3:	mov    ah,BYTE PTR [ebx+edi*4-0x7feebb82]
  40e1aa:	aaa    
  40e1ab:	inc    edi
  40e1ac:	in     eax,0x43
  40e1ae:	or     DWORD PTR [edx+0x6973eb00],0xffffffc9
  40e1b5:	push   ebp
  40e1b6:	call   0xeb6bb1cf
  40e1bb:	scas   al,BYTE PTR es:[edi]
  40e1bc:	add    DWORD PTR [eax],eax
  40e1be:	push   es
  40e1bf:	dec    ebx
  40e1c0:	pop    esp
  40e1c1:	leave  
  40e1c2:	aas    
  40e1c3:	je     0x40e1c3
  40e1c5:	mov    dh,BYTE PTR [eax+0x65c083f8]
  40e1cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e1cc:	push   0xa6e4c300
  40e1d1:	add    ch,bh
  40e1d3:	(bad)  
  40e1d4:	jmp    0xed04:0x226b7dc9
  40e1db:	inc    ebp
  40e1dc:	push   ebp
  40e1dd:	mov    esp,DWORD PTR ds:0xc574ef87
  40e1e3:	out    0xd3,eax
  40e1e5:	in     al,dx
  40e1e6:	sub    ch,bl
  40e1e8:	xchg   DWORD PTR [edi-0x4f],eax
  40e1eb:	xchg   ah,al
  40e1ed:	call   0x3eda9d
  40e1f2:	inc    ecx
  40e1f3:	mov    edi,0xbfef0473
  40e1f8:	jmp    0x27e182a
  40e1fd:	inc    ecx
  40e1fe:	xchg   esi,eax
  40e1ff:	lds    esi,FWORD PTR [esi]
  40e201:	call   0x3e9ccf
  40e206:	icebp  
  40e207:	mov    edi,0x3df6ec72
  40e20c:	add    cl,BYTE PTR [ebx+0x38be66ac]
  40e212:	jle    0x40e289
  40e214:	push   0x4e423c38
  40e219:	mov    DWORD PTR [ebx],edi
  40e21b:	jae    0x40e21a
  40e21d:	adc    eax,0x40055d
  40e222:	add    BYTE PTR [esi+0x3cb00b33],bh
  40e228:	dec    edx
  40e229:	pop    esp
  40e22a:	ret    0x6594
  40e22d:	add    dl,BYTE PTR [ebp+0xf]
  40e230:	jne    0x40e1b2
  40e232:	jmp    0x40e208
  40e234:	xchg   ebx,eax
  40e235:	xchg   DWORD PTR [eax+edx*2+0x11],esi
  40e239:	fwait
  40e23a:	add    dl,BYTE PTR [ecx+ebp*2+0x7f8c4c89]
  40e241:	add    ecx,DWORD PTR [ebx-0x17baf26]
  40e247:	or     edx,DWORD PTR [edx-0x2b]
  40e24a:	enter  0x64d6,0x2
  40e24e:	push   esi
  40e24f:	arpl   si,bx
  40e251:	jnp    0x40e1dd
  40e253:	in     eax,0x50
  40e255:	fucomp st(3)
  40e257:	jmp    0x40e20a
  40e259:	mov    al,BYTE PTR [esi-0x68]
  40e25c:	fiadd  WORD PTR [eax-0x19]
  40e25f:	sub    esp,DWORD PTR [ebp-0x56e7018c]
  40e265:	out    dx,eax
  40e266:	adc    edi,DWORD PTR [edi]
  40e268:	mov    edi,DWORD PTR [ebx]
  40e26a:	add    eax,DWORD PTR [edi+0x62573bff]
  40e270:	or     BYTE PTR [esi],0x30
  40e273:	mov    ch,BYTE PTR [ecx]
  40e275:	add    al,0x83
  40e277:	shl    BYTE PTR [edx+esi*4+0x0],1
  40e27b:	inc    ebx
  40e27c:	or     eax,DWORD PTR [ecx+0x54]
  40e27f:	pmaddwd mm2,mm2
  40e282:	mov    ah,cl
  40e284:	outs   dx,DWORD PTR ds:[esi]
  40e285:	out    0xbf,eax
  40e287:	add    ah,cl
  40e289:	add    WORD PTR [esi+0x17],sp
  40e28d:	dec    ebx
  40e28e:	and    al,BYTE PTR [eax]
  40e290:	out    0xa9,eax
  40e292:	xchg   edi,edx
  40e294:	pop    edx
  40e295:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e296:	jae    0x40e297
  40e298:	out    0x91,eax
  40e29a:	call   0x16f3f3a2
  40e29f:	(bad)  
  40e2a0:	xlat   BYTE PTR ds:[ebx]
  40e2a1:	inc    ebx
  40e2a2:	int3   
  40e2a3:	dec    edi
  40e2a4:	push   ebx
  40e2a5:	add    esp,edi
  40e2a7:	aaa    
  40e2a8:	mov    ds:0x5780e8c0,al
  40e2ad:	add    eax,0x21c7446c
  40e2b2:	mov    bh,0x88
  40e2b4:	test   al,0x8
  40e2b6:	adc    DWORD PTR [eax],edi
  40e2b8:	sub    DWORD PTR [edx-0x3],esi
  40e2bb:	sub    BYTE PTR [ebx],0xff
  40e2be:	in     eax,0x96
  40e2c0:	fstp   TBYTE PTR [eax+ebp*1-0x11]
  40e2c4:	(bad)  
  40e2c5:	cmp    BYTE PTR [eax+ecx*1],ch
  40e2c8:	or     DWORD PTR ds:0xba110053,0xbe08d3f4
  40e2d2:	in     al,dx
  40e2d3:	shl    edx,cl
  40e2d5:	or     edi,ecx
  40e2d7:	or     eax,0x3f6a0054
  40e2dc:	(bad)  
  40e2dd:	cmp    ch,BYTE PTR [ebx]
  40e2df:	jne    0x40e275
  40e2e1:	add    DWORD PTR [esi-0x44],esi
  40e2e4:	mov    bl,0xda
  40e2e6:	ffreep st(0)
  40e2e8:	stos   DWORD PTR es:[edi],eax
  40e2e9:	in     al,dx
  40e2ea:	out    dx,al
  40e2eb:	add    DWORD PTR [eax],0x40
  40e2ee:	add    al,0xe9
  40e2f0:	out    dx,al
  40e2f1:	xchg   edi,eax
  40e2f2:	ficomp DWORD PTR [edi-0x40]
  40e2f5:	xchg   ebx,eax
  40e2f6:	cmp    ch,BYTE PTR [ebx]
  40e2f8:	jne    0x40e28e
  40e2fa:	fisubr DWORD PTR [ecx-0xc]
  40e2fd:	addr16 add ch,bh
  40e300:	aad    0x2d
  40e302:	adc    BYTE PTR [esp+ebp*8-0x49],bl
  40e306:	sub    DWORD PTR [ecx+0x5dd0e21f],0xe
  40e30d:	ror    BYTE PTR [edx],0xa9
  40e310:	add    edx,DWORD PTR [edi]
  40e312:	cmp    al,0xdc
  40e314:	jle    0x40e349
  40e316:	in     al,dx
  40e317:	adc    eax,0xf0eb1ece
  40e31c:	imul   eax,DWORD PTR [edx-0x1fca008d],0x7e
  40e323:	imul   ebx
  40e325:	cwde   
  40e326:	xchg   ebx,eax
  40e327:	mov    edi,0x33ecd76d
  40e32c:	loope  0x40e330
  40e32e:	add    eax,0x12dfa75
  40e333:	lea    esp,[esi-0x55732f6d]
  40e339:	mov    edx,eax
  40e33b:	(bad)  
  40e33c:	aam    0x67
  40e33e:	or     al,BYTE PTR [eax-0x17]
  40e341:	adc    al,0x3d
  40e343:	or     esp,DWORD PTR [edi]
  40e345:	push   edx
  40e346:	jb     0x40e348
  40e348:	test   BYTE PTR [esi-0x46],0x33
  40e34c:	inc    edi
  40e34d:	mov    cl,0xbd
  40e34f:	xor    ebx,DWORD PTR [ebp+0x0]
  40e352:	xchg   esi,eax
  40e353:	cmp    BYTE PTR [ebp+ebx*8-0x69],0xeb
  40e358:	add    ecx,DWORD PTR [edi+0x69]
  40e35b:	mov    esi,0x71cda733
  40e360:	add    BYTE PTR [ebx-0x33],ah
  40e363:	jno    0x40e3c2
  40e365:	adc    dl,BYTE PTR [ecx-0x1516f8c1]
  40e36b:	mov    al,0x37
  40e36d:	aaa    
  40e36e:	inc    ebx
  40e36f:	jo     0x40e2fb
  40e371:	out    0x14,eax
  40e373:	or     eax,0xfcde6201
  40e378:	push   0xffffffa9
  40e37a:	js     0x40e379
  40e37c:	rol    dl,0x48
  40e37f:	out    dx,eax
  40e380:	or     ah,BYTE PTR [edx+ebx*8+0x28]
  40e384:	push   edx
  40e385:	sub    DWORD PTR [edx+0x40],0x1eb66fe
  40e38c:	xor    ch,BYTE PTR [ecx]
  40e38e:	or     al,0xb0
  40e390:	jae    0x40e379
  40e392:	push   es
  40e393:	mov    esi,0x4566203
  40e398:	imul   eax,DWORD PTR [eax],0xffffffa4
  40e39b:	sbb    al,0xe8
  40e39d:	cmp    DWORD PTR [ebx-0x51a1020d],esi
  40e3a3:	dec    ecx
  40e3a4:	mov    esp,ebp
  40e3a6:	mov    dh,0x41
  40e3a8:	push   es
  40e3a9:	and    DWORD PTR [ecx-0x4fa8acf4],0x49
  40e3b0:	(bad)  
  40e3b1:	call   0x40e895
  40e3b6:	add    BYTE PTR [esi-0x41],cl
  40e3b9:	aaa    
  40e3ba:	pop    esi
  40e3bb:	cmp    DWORD PTR [edx+0x31],esi
  40e3be:	xor    esp,DWORD PTR [edx]
  40e3c0:	out    dx,eax
  40e3c1:	add    al,0x8b
  40e3c3:	lock imul ecx,DWORD PTR [ebx-0x749405bc],0x55
  40e3cb:	loope  0x40e398
  40e3cd:	xchg   esi,eax
  40e3ce:	add    ch,ch
  40e3d0:	add    ebp,DWORD PTR [edx+0x14]
  40e3d3:	jo     0x40e40d
  40e3d5:	jmp    0xd250:0xd6385050
  40e3dc:	or     BYTE PTR [esi+edx*1],bh
  40e3df:	lods   eax,DWORD PTR ds:[esi]
  40e3e0:	add    al,0x83
  40e3e2:	(bad)  
  40e3e3:	icebp  
  40e3e4:	js     0x40e3a4
  40e3e6:	js     0x40e3d7
  40e3e8:	inc    esi
  40e3e9:	add    edi,0x45e1eb5
  40e3ef:	mov    eax,ds:0x22c881c3
  40e3f4:	push   ebx
  40e3f5:	pop    ecx
  40e3f6:	leave  
  40e3f7:	inc    DWORD PTR [edi]
  40e3f9:	add    BYTE PTR [ebx+0x53f4cefe],cl
  40e3ff:	fidivr WORD PTR [esi-0x77cc6ab]
  40e405:	jge    0x40e42c
  40e407:	dec    esi
  40e408:	repnz mov DWORD PTR [esi],eax
  40e40b:	addr16 pop ss
  40e40d:	lea    eax,[edx+edi*2+0x6b]
  40e411:	dec    esi
  40e412:	call   DWORD PTR [ebp+ecx*2+0x74731426]
  40e419:	cs push ss
  40e41b:	add    ah,dl
  40e41d:	pop    ecx
  40e41e:	test   ebx,eax
  40e420:	nop
  40e421:	in     al,0x42
  40e423:	jae    0x40e3aa
  40e425:	call   0x3d0:0x728cc685
  40e42c:	enter  0x85c4,0xc7
  40e430:	inc    ebx
  40e431:	scas   al,BYTE PTR es:[edi]
  40e432:	int    0xc1
  40e434:	nop
  40e435:	pop    ecx
  40e436:	jge    0x40e3fa
  40e438:	aas    
  40e439:	push   ss
  40e43a:	shr    BYTE PTR ss:[ebp-0x77],cl
  40e43e:	push   es
  40e43f:	je     0x40e4bc
  40e441:	xchg   DWORD PTR [ebx],ebp
  40e443:	push   eax
  40e444:	je     0x40e432
  40e446:	or     BYTE PTR [esi-0x33],ah
  40e449:	mov    DWORD PTR [esi],esi
  40e44b:	je     0x40e3fc
  40e44d:	or     edi,DWORD PTR [ebx]
  40e44f:	push   ebp
  40e450:	adc    al,0x60
  40e452:	pop    ss
  40e453:	jae    0x40e3df
  40e455:	mov    ax,0xf2f0
  40e459:	xchg   edi,eax
  40e45a:	sub    edx,DWORD PTR [edx+edx*4+0x71]
  40e45e:	imul   bh
  40e460:	adc    al,0x40
  40e462:	pop    ss
  40e463:	lidtd  [ecx-0x66793d2f]
  40e46a:	inc    esp
  40e46b:	push   ebp
  40e46c:	arpl   dx,si
  40e46e:	jne    0x40e4d9
  40e470:	test   al,0x52
  40e472:	cmp    ch,BYTE PTR [edx]
  40e474:	les    esi,FWORD PTR ds:0x4b95137e
  40e47a:	adc    cl,BYTE PTR [eax+0x4ec25f80]
  40e480:	add    BYTE PTR [ecx],ch
  40e482:	cmc    
  40e483:	rcr    BYTE PTR [ebp-0x29],1
  40e486:	or     edi,DWORD PTR [ebp-0x15]
  40e489:	pop    ds
  40e48a:	and    eax,0x1788300
  40e48f:	adc    DWORD PTR [edi-0x18],edi
  40e492:	dec    eax
  40e493:	push   eax
  40e494:	push   edi
  40e495:	jp     0x40e505
  40e497:	push   ebp
  40e498:	jge    0x40e472
  40e49a:	cld    
  40e49b:	popa   
  40e49c:	mov    edi,0x5f9b7b93
  40e4a1:	jnp    0x40e4e9
  40e4a3:	cmp    eax,0xdcdb5a71
  40e4a8:	jle    0x40e482
  40e4aa:	pop    esp
  40e4ab:	cwde   
  40e4ac:	jle    0x40e47e
  40e4ae:	dec    eax
  40e4af:	mov    eax,0xf72ca870
  40e4b4:	ret    
  40e4b5:	cmp    eax,DWORD PTR [ebx+0x435d002c]
  40e4bb:	loopne 0x40e4c0
  40e4bd:	sar    DWORD PTR [ecx+0x14],0x83
  40e4c1:	das    
  40e4c2:	ins    DWORD PTR es:[edi],dx
  40e4c3:	out    0x3,eax
  40e4c5:	xchg   esp,eax
  40e4c6:	(bad)  
  40e4c7:	popf   
  40e4c8:	jle    0x40e512
  40e4ca:	add    eax,0x590a70ef
  40e4cf:	adc    BYTE PTR [edx*4-0x44bbe600],0x7b
  40e4d7:	pop    ebx
  40e4d8:	js     0x40e4d5
  40e4da:	jns    0x40e49e
  40e4dc:	jo     0x40e4c8
  40e4de:	jnp    0x40e54b
  40e4e0:	sti    
  40e4e1:	loope  0x40e550
  40e4e3:	mov    ebp,0x13da00d3
  40e4e8:	imul   edx,DWORD PTR ds:0x43ea0054,0xfb6b7b5b
  40e4f2:	shr    DWORD PTR [ebp-0x63],0xd3
  40e4f6:	push   cs
  40e4f7:	inc    edi
  40e4f8:	sbb    BYTE PTR [ebp-0x43],0x6d
  40e4fc:	lea    esi,[eax+0x4299c9f]
  40e502:	sbb    BYTE PTR [ecx-0xc],al
  40e505:	das    
  40e506:	adc    BYTE PTR cs:[eax],al
  40e509:	sbb    al,BYTE PTR fs:[ecx-0x41fb9103]
  40e510:	mov    ch,BYTE PTR [edi]
  40e512:	fist   WORD PTR [eax-0x17]
  40e515:	pop    esi
  40e516:	add    al,0x82
  40e518:	mov    edi,0xc5798fdd
  40e51d:	inc    ecx
  40e51e:	dec    edi
  40e51f:	pop    edx
  40e520:	inc    BYTE PTR [esi+0x1b]
  40e523:	lods   eax,DWORD PTR ds:[esi]
  40e524:	jae    0x40e502
  40e526:	fadd   DWORD PTR [ebx-0x19]
  40e529:	pop    ebx
  40e52a:	icebp  
  40e52b:	outs   dx,BYTE PTR ds:[esi]
  40e52c:	(bad)  
  40e52d:	jo     0x40e4e4
  40e52f:	add    BYTE PTR [eax],al
  40e531:	jmp    0x1f4469f8
  40e536:	les    ebp,FWORD PTR [esi-0x3b]
  40e539:	jmp    0x9489a5d5
  40e53e:	mov    esi,0x7112009d
  40e543:	ficom  DWORD PTR [ebx]
  40e545:	xchg   ebx,eax
  40e546:	xchg   edi,eax
  40e547:	aad    0xfe
  40e549:	fadd   QWORD PTR [eax]
  40e54b:	retf   
  40e54c:	push   ss
  40e54d:	inc    eax
  40e54e:	jmp    0x6ccde23c
  40e553:	or     al,0x6b
  40e555:	(bad)  
  40e556:	fsubrp st(0),st
  40e558:	aad    0xfe
  40e55a:	cld    
  40e55b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e55c:	push   ss
  40e55d:	inc    eax
  40e55e:	jmp    0x74582679
  40e563:	int    0x70
  40e565:	out    0x17,eax
  40e567:	outs   dx,BYTE PTR ds:[esi]
  40e569:	(bad)  
  40e56a:	jo     0x40e5de
  40e56c:	add    BYTE PTR [eax],al
  40e56e:	jmp    0xa7446987
  40e573:	xor    ebp,DWORD PTR [esi-0x3b]
  40e576:	jmp    0x1c89a612
  40e57b:	inc    ecx
  40e57c:	das    
  40e57d:	shr    BYTE PTR [esi],0xda
  40e580:	aaa    
  40e581:	ret    0x2d00
  40e584:	das    
  40e585:	rol    ch,0x6e
  40e588:	add    al,0x0
  40e58a:	jne    0x40e5dc
  40e58c:	push   esi
  40e58d:	mov    esp,0xfe4030d8
  40e592:	push   ebp
  40e593:	cli    
  40e594:	or     esp,ebp
  40e596:	adc    ch,BYTE PTR ds:0xbd3d8000
  40e59c:	mov    ecx,0x697d0041
  40e5a1:	adc    eax,0xfddb77e8
  40e5a6:	push   ecx
  40e5a8:	les    esi,FWORD PTR [edx+0xe]
  40e5ab:	mov    esi,0xc5c419
  40e5b0:	(bad)  
  40e5b1:	(bad)  
  40e5b2:	inc    ebp
  40e5b4:	xor    al,al
  40e5b6:	ret    
  40e5b7:	inc    ebx
  40e5b8:	sub    eax,0x30ff5605
  40e5bd:	lock adc BYTE PTR [eax+0x3d],al
  40e5c1:	ds mov dh,0xc
  40e5c4:	leave  
  40e5c5:	aas    
  40e5c6:	inc    dl
  40e5c8:	pop    es
  40e5c9:	adc    al,0xe8
  40e5cb:	mov    ch,0xa
  40e5cd:	(bad)  
  40e5cf:	push   eax
  40e5d0:	cli    
  40e5d1:	jae    0x40e5f5
  40e5d3:	or     al,0xfa
  40e5d5:	or     BYTE PTR [esi+edx*1],bh
  40e5d8:	lods   eax,DWORD PTR ds:[esi]
  40e5d9:	add    al,0x83
  40e5db:	(bad)  
  40e5dc:	stc    
  40e5dd:	repnz (bad) 
  40e5df:	sbb    edi,DWORD PTR ds:0xed04c040
  40e5e5:	dec    esi
  40e5e6:	mov    DWORD PTR ds:0x4015dd,ebx
  40e5ec:	into   
  40e5ed:	mov    edi,0x45346653
  40e5f2:	and    BYTE PTR [esi+0x44],ah
  40e5f5:	inc    ebp
  40e5f6:	xor    al,0x6a
  40e5f8:	rol    DWORD PTR [eax+0x29940145],0x81
  40e5ff:	inc    ebp
  40e600:	pushf  
  40e601:	inc    esi
  40e602:	pop    edi
  40e603:	dec    edi
  40e604:	or     eax,0x906d7b54
  40e609:	jmp    0x3d8:0x65588251
  40e610:	repnz mov al,0xdd
  40e613:	sbb    BYTE PTR [eax],al
  40e615:	or     BYTE PTR [esi+0x7f],dh
  40e618:	inc    esi
  40e619:	mov    eax,ds:0x90457fa9
  40e61e:	test   eax,0x5e7fd26d
  40e623:	jg     0x40e66a
  40e625:	or     BYTE PTR [edx+edx*8+0x147581fe],0x40
  40e62d:	xchg   esp,eax
  40e62e:	cmp    edi,DWORD PTR [ecx+0x46]
  40e631:	lods   eax,DWORD PTR ds:[esi]
  40e632:	(bad)  
  40e633:	inc    esi
  40e634:	or     edi,DWORD PTR [edx+0x421fc4f0]
  40e63a:	bound  eax,QWORD PTR [eax]
  40e63c:	je     0x40e5cd
  40e63e:	jnp    0x40e66b
  40e640:	outs   dx,DWORD PTR ds:[esi]
  40e641:	jg     0x40e5d8
  40e643:	pop    ss
  40e644:	push   0xffffff84
  40e646:	hlt    
  40e647:	lds    ebx,FWORD PTR [edx]
  40e649:	(bad)  
  40e64a:	fadd   st(4),st
  40e64c:	and    esp,DWORD PTR [edx+esi*2+0x50]
  40e650:	gs pop ds
  40e652:	mov    ds:0x74d88319,al
  40e657:	push   edi
  40e658:	adc    DWORD PTR [esi+0x69],ebp
  40e65b:	jge    0x40e6a2
  40e65d:	mov    eax,0x81fed42c
  40e662:	adc    eax,0xd6944016
  40e667:	inc    edi
  40e668:	or     esp,DWORD PTR [edi+0x1d65ce99]
  40e66e:	sbb    edi,DWORD PTR [eax]
  40e670:	pop    ebx
  40e671:	xlat   BYTE PTR ds:[ebx]
  40e672:	add    eax,0x718ad7
  40e677:	fst    DWORD PTR ds:0x13005400
  40e67d:	sbb    BYTE PTR [ecx],ah
  40e67f:	ret    
  40e680:	loopne 0x40e655
  40e682:	sbb    dl,al
  40e684:	out    0xd3,eax
  40e686:	fld    DWORD PTR [ecx]
  40e688:	jmp    0xdbb7a6f9
  40e68d:	aaa    
  40e68e:	stos   BYTE PTR es:[edi],al
  40e68f:	shr    al,0x80
  40e692:	push   edi
  40e693:	std    
  40e694:	push   es
  40e695:	add    DWORD PTR [edx],0x97d9e921
  40e69b:	hlt    
  40e69c:	in     al,dx
  40e69d:	jle    0x40e679
  40e69f:	or     al,0xb9
  40e6a1:	jle    0x40e674
  40e6a3:	adc    edi,DWORD PTR [ecx-0xfa9b794]
  40e6a9:	jle    0x40e67c
  40e6ab:	adc    edx,ebx
  40e6ad:	add    esp,esp
  40e6af:	imul   ebx,DWORD PTR [ecx],0x8c21ee6
  40e6b5:	adc    DWORD PTR [edi-0x3],0x7d17a8e
  40e6bc:	xchg   DWORD PTR [eax-0x2616cb4e],eax
  40e6c2:	fwait
  40e6c3:	hlt    
  40e6c4:	idiv   BYTE PTR [esi-0x26]
  40e6c7:	and    al,0x99
  40e6c9:	jle    0x40e69c
  40e6cb:	add    eax,0xe2e86c99
  40e6d0:	popa   
  40e6d1:	vhsubps ymm4,ymm7,YMMWORD PTR [eax+eax*1]
  40e6d6:	adc    al,0xfb
  40e6d8:	jmp    0x9:0x267b8858
  40e6df:	jle    0x40e6e1
  40e6e1:	cmp    DWORD PTR [ebp-0x3a],ebp
  40e6e4:	jge    0x40e68a
  40e6e6:	jmp    DWORD PTR [esi+0xce62340]
  40e6ec:	ret    
  40e6ed:	adc    ecx,ecx
  40e6ef:	(bad)  
  40e6f0:	int    0xff
  40e6f2:	push   ds
  40e6f3:	out    dx,al
  40e6f4:	xor    DWORD PTR [edx-0x17],ebp
  40e6f7:	call   0xa2e7d672
  40e6fc:	xor    al,0x16
  40e6fe:	sub    DWORD PTR [eax+0x2cf94575],ebx
  40e704:	or     al,0x30
  40e706:	not    edi
  40e708:	imul   esi,ebp,0x8c408ca1
  40e70e:	das    
  40e70f:	stos   BYTE PTR es:[edi],al
  40e710:	sbb    eax,0x11d76ac1
  40e715:	push   0xffffffd5
  40e717:	addr16 jl 0x40e760
  40e71a:	icebp  
  40e71b:	addr16 push 0xffffffd2
  40e71e:	ins    BYTE PTR es:[edi],dx
  40e71f:	pop    ecx
  40e720:	ror    DWORD PTR [esi],0x9e
  40e723:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e724:	jge    0x40e6e9
  40e726:	icebp  
  40e727:	call   0xb4800177
  40e72c:	jo     0x40e73c
  40e72e:	jbe    0x40e6c9
  40e730:	mov    eax,0x7daebd47
  40e735:	out    0xd4,eax
  40e737:	dec    edx
  40e738:	ret    
  40e739:	imul   edi,ecx,0xb907c3ba
  40e73f:	mov    dl,0xc2
  40e741:	and    edi,DWORD PTR [ecx+0x654eb800]
  40e747:	bound  ebx,QWORD PTR [ecx-0x1]
  40e74a:	push   cs
  40e74b:	aas    
  40e74c:	fscale 
  40e74e:	sub    BYTE PTR gs:[edi+0x1],dh
  40e752:	sub    DWORD PTR ds:0x280ae30b,0xfffffff9
  40e759:	ja     0x40e7a1
  40e75b:	sbb    eax,0xe56a1f5b
  40e760:	ins    BYTE PTR es:[edi],dx
  40e761:	ret    
  40e762:	add    edi,DWORD PTR [ecx]
  40e764:	ins    DWORD PTR es:[edi],dx
  40e765:	ret    0x391b
  40e768:	outs   dx,DWORD PTR ds:[esi]
  40e769:	dec    esi
  40e76a:	add    BYTE PTR gs:[esi+0x3e],ah
  40e76e:	add    BYTE PTR [edi],cl
  40e770:	dec    ebx
  40e771:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e772:	add    DWORD PTR [esi-0x4],esp
  40e775:	jecxz  0x40e77d
  40e777:	cmp    ecx,0x67
  40e77a:	fs or  ebp,esp
  40e77d:	pop    ebp
  40e77e:	xchg   DWORD PTR [edi-0x23],eax
  40e781:	ss pop ecx
  40e783:	ret    
  40e784:	push   0xffffffe9
  40e786:	not    BYTE PTR [ecx+0x6a]
  40e789:	int3   
  40e78a:	scas   eax,DWORD PTR es:[edi]
  40e78b:	add    DWORD PTR [ebp-0x6a3f7b04],ebp
  40e791:	ins    DWORD PTR es:[edi],dx
  40e792:	adc    edx,0xffffff88
  40e795:	add    DWORD PTR [edx-0x1bb77bc],edi
  40e79b:	xor    ch,BYTE PTR [ebp+0x48c9834f]
  40e7a1:	adc    bh,BYTE PTR [eax]
  40e7a3:	add    cl,BYTE PTR [ecx+0x4e]
  40e7a6:	cmp    edi,0x0
  40e7a9:	dec    eax
  40e7aa:	add    edi,DWORD PTR [eax-0x7ffc92a9]
  40e7b0:	jmp    0x40e7de
  40e7b2:	pushf  
  40e7b3:	js     0x40e7b5
  40e7b5:	cmp    al,BYTE PTR [ecx+ebp*8+0x72db2b40]
  40e7bc:	and    al,0x39
  40e7be:	jmp    0x5230e732
  40e7c3:	push   ebp
  40e7c4:	xor    esp,DWORD PTR [esi-0x25]
  40e7c7:	adc    ecx,DWORD PTR [eax+0x2b]
  40e7ca:	inc    esp
  40e7cb:	inc    BYTE PTR [edx+0x7ab90c69]
  40e7d1:	std    
  40e7d2:	add    al,BYTE PTR [eax+0xd54bd85]
  40e7d8:	cmp    edi,DWORD PTR [ebx-0x178af68d]
  40e7de:	jmp    0x40e7fa
  40e7e0:	ds (bad) 
  40e7e2:	fs mov eax,esi
  40e7e5:	xchg   esp,eax
  40e7e6:	inc    edx
  40e7e7:	inc    DWORD PTR [edi-0x27810880]
  40e7ed:	xchg   edi,eax
  40e7ee:	aas    
  40e7ef:	jge    0x40e7b3
  40e7f1:	jb     0x40e7cf
  40e7f3:	dec    ebp
  40e7f4:	js     0x40e786
  40e7f6:	jb     0x40e843
  40e7f8:	je     0x40e788
  40e7fa:	loop   0x40e7b2
  40e7fc:	and    ecx,DWORD PTR [eax-0x698cc42c]
  40e802:	lock sub ebx,DWORD PTR [ebx+0x4b]
  40e806:	fwait
  40e807:	cli    
  40e808:	inc    DWORD PTR [esi+0x2e]
  40e80b:	jg     0x40e804
  40e80d:	add    BYTE PTR [ebp+0x6],al
  40e810:	pop    esp
  40e811:	sub    al,0x95
  40e813:	pop    ecx
  40e814:	add    dh,BYTE PTR [ebx]
  40e816:	outs   dx,DWORD PTR ds:[esi]
  40e817:	mov    dl,0x45
  40e819:	jnp    0x40e80c
  40e81b:	mov    dl,0x55
  40e81d:	je     0x40e7b0
  40e81f:	mov    ds:0x59d474ba,eax
  40e824:	xor    eax,0xf022afc0
  40e829:	push   ss
  40e82a:	cli    
  40e82b:	adc    BYTE PTR [esi],cl
  40e82d:	je     0x40e7fa
  40e82f:	add    ch,BYTE PTR [edi+0x74]
  40e832:	fwait
  40e833:	adc    ecx,0x5dd992ff
  40e839:	dec    ebp
  40e83a:	cld    
  40e83b:	mov    dl,0x2
  40e83d:	pop    es
  40e83e:	adc    al,0x12
  40e840:	sub    BYTE PTR [esi+0x33],dl
  40e843:	lea    ebx,[esi]
  40e845:	adc    al,0x19
  40e847:	mov    BYTE PTR [ecx+0x51],ch
  40e84a:	retf   0x69ae
  40e84d:	adc    al,0xd0
  40e84f:	inc    edi
  40e850:	ret    0x16ff
  40e853:	sbb    eax,0x598eb913
  40e858:	add    DWORD PTR [eax+0x9eb1919],eax
  40e85e:	mov    edi,0x99f1af00
  40e863:	in     al,dx
  40e864:	out    0x7c,al
  40e866:	sti    
  40e867:	pop    edx
  40e868:	loopne 0x40e8e6
  40e86a:	mov    esp,0xce2a932
  40e86f:	cld    
  40e870:	cmp    eax,0xef8f0077
  40e875:	jno    0x40e8bc
  40e877:	imul   edi,DWORD PTR [ebp-0x6f],0x902b97eb
  40e87e:	out    dx,eax
  40e87f:	lea    edi,[ebx+0x34]
  40e882:	and    BYTE PTR [eax-0x6a0f5083],ah
  40e888:	jns    0x40e859
  40e88a:	enter  0x423e,0xe0
  40e88e:	add    edx,DWORD PTR [ecx]
  40e890:	cmp    esp,edi
  40e892:	xor    eax,0x697d664c
  40e897:	or     cl,dh
  40e899:	popa   
  40e89a:	push   esp
  40e89b:	(bad)  
  40e89c:	gs push 0xecec942b
  40e8a2:	ret    0xebdd
  40e8a5:	push   ebp
  40e8a6:	jg     0x40e8ed
  40e8a8:	in     al,dx
  40e8a9:	jmp    0x40e853
  40e8ab:	retf   0xe600
  40e8ae:	adc    DWORD PTR [eax],0x6f
  40e8b1:	mov    esp,0xc06618f6
  40e8b6:	add    DWORD PTR [edi+0x42],edi
  40e8b9:	pop    edi
  40e8ba:	add    ch,BYTE PTR [edi]
  40e8bc:	add    ch,BYTE PTR [edx+0x22]
  40e8bf:	xchg   esp,eax
  40e8c0:	jns    0x40e8ef
  40e8c2:	leave  
  40e8c3:	ds cld 
  40e8c5:	pusha  
  40e8c6:	shr    DWORD PTR [ebx],1
  40e8c8:	jmp    FWORD PTR [eax+0x7f]
  40e8cb:	jecxz  0x40e8b4
  40e8cd:	in     eax,0x7e
  40e8cf:	and    ebp,ebp
  40e8d1:	jmp    0x2a41a25a
  40e8d6:	jg     0x40e8d8
  40e8d8:	fsub   st(4),st
  40e8da:	(bad)  
  40e8db:	mov    esp,0xeefe672f
  40e8e0:	in     al,dx
  40e8e1:	into   
  40e8e2:	mov    bh,BYTE PTR [ecx+0x206565a8]
  40e8e8:	mov    edi,0x566a05ec
  40e8ed:	dec    DWORD PTR [ecx+0x54]
  40e8f0:	imul   edi,DWORD PTR [ecx+edx*8+0x3c],0xffffffd3
  40e8f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e8f6:	push   esi
  40e8f7:	jmp    0xbfc56990
  40e8fc:	mov    bl,0xf4
  40e8fe:	test   BYTE PTR [esi-0x54d50451],ch
  40e904:	cs sti 
  40e906:	jmp    0x5462:0x1c10ea
  40e90d:	(bad)  
  40e90e:	jmp    0x17ed:0xffceefe4
  40e915:	jl     0x40e8d6
  40e917:	add    BYTE PTR [ebp-0x67020a85],dl
  40e91d:	and    DWORD PTR ds:0xc032d0e9,0xdf1b022
  40e927:	push   0x56fe65be
  40e92c:	ins    BYTE PTR es:[edi],dx
  40e92d:	out    dx,eax
  40e92e:	add    eax,0x5654491
  40e933:	imul   ebx,eax,0x43b40228
  40e939:	add    DWORD PTR ds:[ecx+0x253200],esp
  40e940:	bnd jg 0x40e934
  40e943:	add    DWORD PTR [eax-0x6a],esi
  40e946:	inc    ecx
  40e947:	xor    ch,BYTE PTR [ecx]
  40e949:	jle    0x40e907
  40e94b:	and    ebp,ebp
  40e94d:	xor    bh,bl
  40e94f:	cmp    BYTE PTR [ebp+0x74f87b],ah
  40e955:	pop    es
  40e956:	cmp    BYTE PTR [edx+0x24],0x5
  40e95a:	fdivr  st,st(5)
  40e95c:	dec    DWORD PTR [edx+0x22b8036f]
  40e962:	add    DWORD PTR [edi],eax
  40e964:	cmp    BYTE PTR [edi],0x64
  40e967:	(bad)  
  40e968:	push   edx
  40e969:	mov    ds:0x76326835,eax
  40e96e:	repnz xor eax,eax
  40e971:	jle    0x40e92c
  40e973:	pop    ebp
  40e974:	sub    ecx,DWORD PTR [edi+eiz*8]
  40e977:	xchg   ebp,eax
  40e978:	int3   
  40e979:	or     bl,ch
  40e97b:	jge    0x40e902
  40e97d:	pop    ds
  40e97e:	jo     0x40e98c
  40e980:	mov    ah,cl
  40e982:	push   0xffffff82
  40e984:	rcl    BYTE PTR [ecx+0x7c118665],cl
  40e98a:	inc    ecx
  40e98b:	dec    ebp
  40e98c:	jne    0x40e9a3
  40e98e:	jg     0x40e98d
  40e990:	jne    0x40e944
  40e992:	mov    ds:0xfc97b849,eax
  40e997:	push   es
  40e998:	xor    BYTE PTR [ebx],0xfe
  40e99b:	dec    DWORD PTR [edx-0x7aefdf47]
  40e9a1:	add    BYTE PTR [ecx+esi*2],dh
  40e9a4:	add    BYTE PTR [ecx+0x5b5c3b94],cl
  40e9aa:	mov    edi,0xf6550000
  40e9af:	enter  0x834f,0x50
  40e9b3:	fdiv   st(6),st
  40e9b5:	push   edx
  40e9b6:	xor    esp,edi
  40e9b8:	lock xor esi,DWORD PTR [esi-0x7f]
  40e9bc:	hlt    
  40e9bd:	je     0x40e94d
  40e9bf:	xor    ecx,DWORD PTR [ecx-0x6f8a683]
  40e9c5:	test   DWORD PTR [ebp+0x70],edi
  40e9c8:	adc    cl,BYTE PTR [edi]
  40e9ca:	ret    0xf10
  40e9cd:	xchg   sp,ax
  40e9cf:	aam    0x51
  40e9d1:	jae    0x40e962
  40e9d3:	jnp    0x40ea50
  40e9d5:	adc    BYTE PTR [edi],dl
  40e9d7:	sbb    DWORD PTR [edx],eax
  40e9d9:	dec    eax
  40e9da:	push   edi
  40e9db:	xchg   ebx,eax
  40e9dc:	out    dx,eax
  40e9dd:	out    0x63,eax
  40e9df:	aam    0x6d
  40e9e1:	je     0x40e972
  40e9e3:	(bad)  
  40e9e4:	pop    esp
  40e9e5:	add    DWORD PTR [edi-0x6e],ebx
  40e9e8:	mov    edi,0xfd596efb
  40e9ed:	jg     0x40e996
  40e9ef:	cdq    
  40e9f0:	fmul   QWORD PTR [eax+0x7bfde95]
  40e9f6:	sbb    DWORD PTR [edx+0x621d01ee],ebx
  40e9fc:	jns    0x40ea42
  40e9fe:	ror    BYTE PTR [ebx],0xcb
  40ea01:	enter  0x61d6,0x2
  40ea05:	push   ebp
  40ea06:	add    BYTE PTR [edi],bl
  40ea08:	mov    ss,ebx
  40ea0a:	test   ch,bl
  40ea0c:	or     al,0x0
  40ea0e:	xor    edx,esp
  40ea10:	mov    al,ds:0xd095541
  40ea15:	push   0x657b56e7
  40ea1a:	(bad)  
  40ea1b:	jmp    0x3ad6:0x997342dc
  40ea22:	dec    BYTE PTR [ebp-0x6a]
  40ea25:	jns    0x40ea6b
  40ea27:	jo     0x40ea59
  40ea29:	inc    edx
  40ea2a:	push   esp
  40ea2b:	pop    ds
  40ea2c:	mov    ch,0xd3
  40ea2e:	test   BYTE PTR [ebp+0x44],cl
  40ea31:	(bad)  
  40ea32:	xor    dl,BYTE PTR [eax+eiz*1+0x42]
  40ea36:	push   ebp
  40ea37:	and    DWORD PTR [esi+eiz*2+0x6623e3e7],esp
  40ea3e:	(bad)  
  40ea3f:	loop   0x40ea15
  40ea41:	inc    edx
  40ea42:	jae    0x40e9d5
  40ea44:	(bad)  
  40ea45:	cmp    bh,dh
  40ea47:	pop    ebp
  40ea48:	add    BYTE PTR [edx],ch
  40ea4a:	jp     0x40ea1c
  40ea4c:	fs das 
  40ea4e:	inc    edx
  40ea4f:	enter  0x477,0x66
  40ea53:	mov    al,ds:0x45bb7f8
  40ea58:	bound  eax,QWORD PTR ds:0x80401066
  40ea5e:	sub    eax,0x7b4e19
  40ea63:	ds mov eax,0x2df3c373
  40ea69:	test   eax,0xf851002b
  40ea6e:	push   ebx
  40ea6f:	adc    BYTE PTR [edx+0x29],bh
  40ea72:	jmp    0x40ea63
  40ea74:	mov    ah,0x6b
  40ea76:	scas   eax,DWORD PTR es:[edi]
  40ea77:	or     ebp,ebx
  40ea79:	jle    0x40ea42
  40ea7b:	and    DWORD PTR [ecx],ebx
  40ea7d:	adc    DWORD PTR ds:0xc1809b04,0x13776612
  40ea87:	cld    
  40ea88:	and    BYTE PTR [ebp+0x61e3d3f0],bh
  40ea8e:	popf   
  40ea8f:	and    bl,BYTE PTR gs:[eax-0xf]
  40ea93:	fs call 0x1c00:0x97422b62
  40ea9b:	jns    0x40eb1c
  40ea9d:	rcl    BYTE PTR [esi],1
  40ea9f:	jnp    0x40ea79
  40eaa1:	fs popa 
  40eaa3:	mov    edi,0x7361c993
  40eaa8:	leave  
  40eaa9:	ja     0x40ea56
  40eaab:	sti    
  40eaac:	jae    0x40ea33
  40eaae:	pop    esi
  40eaaf:	bound  edi,QWORD PTR gs:[eax+ebp*1-0x14]
  40eab4:	enter  0x9b73,0x67
  40eab8:	and    ah,cl
  40eaba:	lock pop ebx
  40eabc:	mov    bl,0x62
  40eabe:	cmp    eax,0xff411865
  40eac3:	mov    al,0x6a
  40eac5:	jnp    0x40eac5
  40eac7:	mov    ah,0x9b
  40eac9:	daa    
  40eaca:	jge    0x40eaf1
  40eacc:	and    al,0x2d
  40eace:	mov    ebp,DWORD PTR [eax+eax*1-0x2fc723e1]
  40ead5:	sub    edx,DWORD PTR ds:0x6a9d2ff7
  40eadb:	or     BYTE PTR [edi],0xb5
  40eade:	jae    0x40ea65
  40eae0:	xchg   esi,eax
  40eae1:	xchg   edi,eax
  40eae2:	stc    
  40eae3:	jg     0x40eae7
  40eae5:	xchg   edx,eax
  40eae6:	popa   
  40eae7:	je     0x40eaca
  40eae9:	push   0xffffffbc
  40eaeb:	pop    es
  40eaec:	cmp    DWORD PTR [ebp-0x44],ebp
  40eaef:	sti    
  40eaf0:	jb     0x40eb42
  40eaf2:	jbe    0x40eac1
  40eaf4:	shr    DWORD PTR ds:0x6ccefe64,0xf8
  40eafb:	test   dh,al
  40eafd:	mov    ebx,0xe1b032fc
  40eb02:	js     0x40eb11
  40eb04:	pop    ss
  40eb05:	jg     0x40eb46
  40eb07:	add    ebp,ecx
  40eb09:	sub    al,0xcd
  40eb0b:	and    esi,ebp
  40eb0d:	and    bh,BYTE PTR [ebp+0x62c7f923]
  40eb13:	jae    0x40eae2
  40eb15:	mov    ds:0x8bc54376,eax
  40eb1a:	pop    ecx
  40eb1b:	test   DWORD PTR [ebp+0x72c262f0],0x640c1d53
  40eb25:	cmp    ebx,DWORD PTR ds:0xedf91910
  40eb2b:	and    esi,ebp
  40eb2d:	in     al,dx
  40eb2e:	mov    ebp,0xc3bfed23
  40eb33:	sti    
  40eb34:	push   esi
  40eb35:	add    al,dh
  40eb37:	ds push esp
  40eb39:	(bad)  
  40eb3a:	jmp    0x40eb0c
  40eb3c:	push   eax
  40eb3d:	add    BYTE PTR [esi+0x800065a],bh
  40eb43:	fs mov dh,0x57
  40eb46:	sub    eax,0xe9eb7e64
  40eb4b:	out    0x4b,eax
  40eb4d:	adc    dh,ch
  40eb4f:	les    esi,FWORD PTR [esi-0x76237d02]
  40eb55:	fsubr  DWORD PTR [esi-0x58a0228]
  40eb5b:	xchg   esp,eax
  40eb5c:	push   ebp
  40eb5d:	add    dl,bh
  40eb5f:	jl     0x40eb4a
  40eb61:	pop    esp
  40eb62:	outs   dx,BYTE PTR ds:[esi]
  40eb63:	inc    edx
  40eb64:	test   BYTE PTR [eax],0xab
  40eb67:	mov    ds:0x7e0b00fd,al
  40eb6c:	rol    DWORD PTR [eax],0xfc
  40eb6f:	cld    
  40eb70:	push   DWORD PTR [edi+0x7ffddcc2]
  40eb76:	xchg   BYTE PTR [ecx+esi*2],ah
  40eb79:	push   es
  40eb7a:	ss and al,0xc5
  40eb7d:	inc    ebp
  40eb7e:	sar    dl,cl
  40eb80:	mov    WORD PTR [esi+esi*4],es
  40eb83:	lods   al,BYTE PTR ds:[esi]
  40eb84:	mov    esi,DWORD PTR [ebp+0x5]
  40eb87:	aam    0xb5
  40eb89:	mov    BYTE PTR [edx],0xdd
  40eb8c:	add    al,0x89
  40eb8f:	or     edi,edi
  40eb91:	jne    0x40eb3c
  40eb93:	jno    0x40ebe8
  40eb95:	adc    BYTE PTR [edx],al
  40eb97:	inc    edi
  40eb98:	or     cl,BYTE PTR [ebx-0x76434800]
  40eb9e:	retf   
  40eb9f:	and    eax,0x2fffa3b
  40eba4:	nop
  40eba5:	out    dx,al
  40eba6:	add    DWORD PTR [ebx],0xfd06fe3f
  40ebac:	cmp    DWORD PTR [ebx],ebx
  40ebae:	xor    BYTE PTR [eax-0x1d],0xfe
  40ebb2:	jae    0x40ebe9
  40ebb4:	in     al,0x73
  40ebb6:	clc    
  40ebb7:	xchg   esp,eax
  40ebb8:	ror    DWORD PTR [eax],0xc7
  40ebbb:	push   ebx
  40ebbc:	iret   
  40ebbd:	mov    es,ebp
  40ebbf:	jmp    0xa069:0xa4c14ba2
  40ebc6:	jns    0x40eb5c
  40ebc8:	outs   dx,BYTE PTR ds:[esi]
  40ebc9:	sub    dl,0x3d
  40ebcc:	in     eax,0x59
  40ebce:	je     0x40ec01
  40ebd0:	ror    eax,cl
  40ebd2:	test   DWORD PTR [edi],0x95890aad
  40ebd8:	cmp    al,BYTE PTR [edx-0x16]
  40ebdb:	not    DWORD PTR [ebp+ecx*4-0x7a879a15]
  40ebe2:	jl     0x40eb70
  40ebe4:	imul   edx,edi,0x27f3c06
  40ebea:	pop    es
  40ebeb:	adc    al,0x3
  40ebed:	aad    0x8a
  40ebef:	pop    ecx
  40ebf0:	pop    ecx
  40ebf1:	mov    ch,0xe7
  40ebf3:	lahf   
  40ebf4:	aas    
  40ebf5:	popa   
  40ebf6:	dec    BYTE PTR [edi]
  40ebf8:	xchg   edx,eax
  40ebf9:	test   edx,edi
  40ebfb:	shl    DWORD PTR [edx+ecx*1+0x696300b8],cl
  40ec02:	or     DWORD PTR [eax+0x648720af],eax
  40ec08:	mov    esp,0xb3444869
  40ec0d:	imul   edi,DWORD PTR [eax+0x369d780],0x61e19400
  40ec17:	(bad)  
  40ec18:	fwait
  40ec19:	neg    BYTE PTR [esi]
  40ec1b:	fadd   DWORD PTR [esi]
  40ec1d:	push   0x2c52d78d
  40ec22:	arpl   WORD PTR [eax],ax
  40ec24:	out    0xec,eax
  40ec26:	xlat   BYTE PTR ds:[ebx]
  40ec27:	imul   DWORD PTR [eax+esi*1+0x48]
  40ec2b:	(bad)  
  40ec2c:	jae    0x40ec13
  40ec2e:	inc    edx
  40ec2f:	jae    0x40ebd8
  40ec31:	add    BYTE PTR [esi-0x28],ah
  40ec34:	xchg   DWORD PTR [ebx-0x2aa50c4d],ecx
  40ec3a:	in     al,0x8e
  40ec3c:	fcomp  DWORD PTR [eax+0x61]
  40ec3f:	dec    esi
  40ec40:	xor    esi,DWORD PTR [ebp-0x74bd9dbf]
  40ec46:	cmp    BYTE PTR [ecx+edi*1+0x140ae8da],al
  40ec4d:	aad    0xcb
  40ec4f:	sub    DWORD PTR [eax-0x212817a1],0x5e
  40ec56:	xchg   ebx,eax
  40ec57:	pop    ebx
  40ec58:	xor    esp,edi
  40ec5a:	bound  edx,QWORD PTR cs:[edx]
  40ec5d:	mov    esp,DWORD PTR [esi]
  40ec5f:	shr    DWORD PTR [esi+0x49],0x2a
  40ec63:	repz add BYTE PTR [ebx],al
  40ec66:	popf   
  40ec67:	add    BYTE PTR [ebx],0x93
  40ec6a:	add    BYTE PTR [ecx],0x6c
  40ec6d:	sbb    BYTE PTR [esi+0x73],dl
  40ec70:	push   0x8de0c51e
  40ec75:	push   eax
  40ec76:	or     BYTE PTR [eax+0x3],dh
  40ec79:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ec7a:	inc    eax
  40ec7b:	shl    DWORD PTR [ebp+0x20],0xc4
  40ec7f:	add    al,0xf4
  40ec81:	pop    ebx
  40ec82:	pop    edi
  40ec83:	cmp    al,0x28
  40ec85:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ec86:	pop    edi
  40ec87:	xor    al,0x28
  40ec89:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ec8a:	pop    edi
  40ec8b:	cmp    al,0x28
  40ec8d:	test   BYTE PTR [eax+0x1c],ch
  40ec90:	popa   
  40ec91:	stos   BYTE PTR es:[edi],al
  40ec92:	pop    esi
  40ec93:	test   eax,0x40e88fee
  40ec98:	mov    ah,0x56
  40ec9a:	add    BYTE PTR [ecx-0x16fcf7c7],al
  40eca0:	test   al,dh
  40eca2:	pop    esp
  40eca3:	call   0x7e4df508
  40eca8:	xlat   BYTE PTR ds:[ebx]
  40eca9:	xchg   ebx,eax
  40ecaa:	pop    ebp
  40ecab:	(bad)  
  40ecac:	fild   DWORD PTR [edi]
  40ecae:	lock aas 
  40ecb0:	jmp    0x5324b1d3
  40ecb5:	xchg   BYTE PTR [ecx],dl
  40ecb7:	shr    BYTE PTR [ecx+0x41648ad0],0xdd
  40ecbe:	(bad)
  40ecc2:	pop    esi
  40ecc3:	(bad)  
  40ecc4:	push   0x53
  40ecc6:	pop    edx
  40ecc7:	(bad)  
  40ecc8:	jb     0x40ecca
  40ecca:	push   ebx
  40eccb:	(bad)  
  40eccc:	out    0x4a,eax
  40ecce:	dec    ebx
  40eccf:	add    BYTE PTR [eax],al
  40ecd1:	sub    ebx,DWORD PTR [eax+0x2ff56a00]
  40ecd7:	(bad)  
  40ecd8:	dec    edi
  40ecd9:	stos   BYTE PTR es:[edi],al
  40ecda:	xchg   edi,eax
  40ecdb:	push   0x999c98
  40ece0:	add    DWORD PTR [ebx+ebp*2-0x6c8302a3],0x5d
  40ece8:	je     0x40ecdb
  40ecea:	je     0x40ece0
  40ecec:	jnp    0x40ecc9
  40ecee:	xlat   BYTE PTR ds:[ebx]
  40ecef:	pop    ebp
  40ecf0:	xchg   DWORD PTR [ebx+esi*2+0x74e54c82],esp
  40ecf7:	push   0xc
  40ecf9:	sbb    dl,BYTE PTR [eax+0x1d]
  40ecfc:	ret    
  40ecfd:	bound  edi,QWORD PTR [edx+0x34a18265]
  40ed03:	mov    BYTE PTR [ebp+eax*8+0x2f],al
  40ed07:	test   al,0x74
  40ed09:	jmp    0x40eca2
  40ed0b:	inc    edx
  40ed0c:	pop    es
  40ed0d:	jmp    0x6b2c77fc
  40ed12:	dec    edi
  40ed13:	pop    esi
  40ed14:	je     0x40ed06
  40ed16:	xor    al,0xd4
  40ed18:	or     ebx,DWORD PTR [esi+0x2911d5a2]
  40ed1e:	cwde   
  40ed1f:	pop    ebp
  40ed20:	je     0x40ed1b
  40ed22:	dec    ebp
  40ed23:	int    0xfe
  40ed25:	add    BYTE PTR [eax-0x5ff95f3],al
  40ed2b:	ss push es
  40ed2d:	inc    DWORD PTR [eax]
  40ed2f:	push   eax
  40ed30:	xor    eax,0x847d4010
  40ed35:	jnp    0x40ed47
  40ed37:	ins    DWORD PTR es:[edi],dx
  40ed38:	pop    edi
  40ed39:	or     edi,DWORD PTR [ebx]
  40ed3b:	xor    BYTE PTR [ecx+0x7a],dl
  40ed3e:	add    ch,BYTE PTR [esi+0x53c931c4]
  40ed44:	mov    cl,BYTE PTR [edx]
  40ed46:	inc    esi
  40ed47:	clc    
  40ed48:	ret    0xa
  40ed4b:	and    BYTE PTR [edx+ebp*8+0x5519b653],cl
  40ed52:	push   edi
  40ed53:	mov    esi,0x2675fdbc
  40ed58:	loopne 0x40edcd
  40ed5a:	or     al,0x7a
  40ed5c:	push   esi
  40ed5d:	jbe    0x40ed71
  40ed5f:	cmp    eax,0x17d88b01
  40ed64:	add    edi,edi
  40ed66:	jne    0x40ed71
  40ed68:	hlt    
  40ed69:	cmc    
  40ed6a:	inc    DWORD PTR [eax-0x6a3c74f7]
  40ed70:	(bad)  
  40ed72:	(bad)  
  40ed73:	cli    
  40ed74:	mov    dh,dh
  40ed76:	test   edx,edi
  40ed78:	cmp    eax,0x8684723
  40ed7d:	aas    
  40ed7e:	test   ebp,edi
  40ed80:	aaa    
  40ed81:	sbb    ebp,eax
  40ed83:	jmp    0x83b4:0x46fffdc7
  40ed8a:	test   BYTE PTR [ecx+0x70ff5552],0xf0
  40ed91:	mov    al,bl
  40ed93:	add    dl,bh
  40ed95:	ss push es
  40ed97:	call   0x3eab1c
  40ed9c:	es (bad) 
  40ed9e:	jmp    0x427781a5
  40eda3:	pop    esi
  40eda4:	jmp    0xb769:0x8cc1c10e
  40edab:	mov    ch,BYTE PTR [eax-0x7]
  40edae:	mov    dl,0x55
  40edb0:	retf   
  40edb1:	rcr    al,cl
  40edb3:	pop    es
  40edb4:	pop    ds
  40edb5:	ror    BYTE PTR [edx-0x7da29c10],cl
  40edbb:	adc    esp,edx
  40edbd:	imul   ecx,DWORD PTR [ecx+0x196e21d7],0x69d08d
  40edc7:	mov    ecx,ebx
  40edc9:	lds    eax,FWORD PTR [esp+eax*2+0x66a38]
  40edd0:	xchg   esp,eax
  40edd1:	call   0x69d6ed18
  40edd6:	add    al,BYTE PTR [ecx-0x5ffd95e1]
  40eddc:	xchg   esp,eax
  40eddd:	jb     0x40edf9
  40eddf:	mov    esp,DWORD PTR [ecx-0xb]
  40ede2:	imul   esp,DWORD PTR [ecx],0xffffffd0
  40ede5:	or     bl,BYTE PTR [edi-0x7d]
  40ede8:	aam    0xdd
  40edea:	inc    DWORD PTR cs:[ecx-0xcfa7693]
  40edf1:	fmul   QWORD PTR [edx]
  40edf3:	lea    edx,[eax+0x4fb1d1]
  40edf9:	jecxz  0x40ee57
  40edfb:	scas   al,BYTE PTR es:[edi]
  40edfc:	adc    dl,BYTE PTR [ecx+ebp*2-0x79]
  40ee00:	mov    edi,0x4a8fa14c
  40ee05:	retf   
  40ee06:	out    dx,al
  40ee07:	inc    esp
  40ee08:	jl     0x40eddf
  40ee0a:	pop    dx
  40ee0c:	mov    dl,BYTE PTR [edx+0x1d654b56]
  40ee12:	data16 fimul DWORD PTR [edx-0x7cfec12d]
  40ee19:	int3   
  40ee1a:	add    BYTE PTR [esi-0x5048c642],ah
  40ee20:	inc    ecx
  40ee21:	fwait
  40ee22:	add    BYTE PTR [edi],bh
  40ee24:	mov    bh,0x8a
  40ee26:	aam    0xc4
  40ee28:	(bad)  
  40ee29:	(bad)  
  40ee2b:	test   eax,edi
  40ee2d:	add    ebp,edi
  40ee2f:	sub    BYTE PTR [edi+ebx*1],al
  40ee32:	pop    eax
  40ee33:	addr16 inc esi
  40ee35:	imul   eax,DWORD PTR [ecx],0xffffffe9
  40ee38:	add    edx,DWORD PTR ds:0x3403e85b
  40ee3e:	add    dh,dl
  40ee40:	adc    esp,DWORD PTR [ecx]
  40ee42:	retf   
  40ee43:	out    0x6b,eax
  40ee45:	push   ebp
  40ee46:	aas    
  40ee47:	dec    ebp
  40ee48:	pop    esi
  40ee49:	pop    ss
  40ee4a:	inc    eax
  40ee4b:	mov    esp,0x4d43b27
  40ee50:	hlt    
  40ee51:	xor    dl,ah
  40ee53:	or     al,0xf4
  40ee55:	ret    0xf65b
  40ee58:	pop    esi
  40ee59:	mov    BYTE PTR [eax+0x1b00c3f9],ch
  40ee5f:	test   BYTE PTR [eax],ch
  40ee61:	fnsetpm(287 only) 
  40ee63:	mov    WORD PTR [ebp-0x74be31a2],fs
  40ee69:	dec    ecx
  40ee6a:	push   cs
  40ee6b:	or     ch,BYTE PTR [edi]
  40ee6d:	pop    es
  40ee6e:	mov    WORD PTR [eax],es
  40ee70:	adc    al,BYTE PTR [edx]
  40ee72:	pop    ss
  40ee73:	dec    eax
  40ee74:	cmc    
  40ee75:	mov    ebp,0x3e03e49
  40ee7a:	dec    edx
  40ee7b:	xchg   BYTE PTR [eax-0x11fc12bc],bh
  40ee81:	xchg   ebp,eax
  40ee82:	in     eax,0xe5
  40ee84:	fistp  QWORD PTR [ebp+0x19470b77]
  40ee8a:	(bad)  
  40ee8b:	idiv   BYTE PTR [esi+0x6a02b181]
  40ee91:	inc    esi
  40ee92:	and    edx,0xffffffff
  40ee95:	jmp    0xa9f6f8df
  40ee9a:	scas   al,BYTE PTR es:[edi]
  40ee9b:	pop    es
  40ee9c:	pop    edx
  40ee9d:	(bad)  
  40ee9f:	xor    BYTE PTR [edx],bl
  40eea1:	mov    ebx,0x6a066015
  40eea6:	(bad)  
  40eea7:	sub    DWORD PTR [esi-0x16],esp
  40eeaa:	(bad)  
  40eeab:	jecxz  0x40ee35
  40eead:	mov    eax,0xeb508971
  40eeb2:	xor    DWORD PTR [edi],edi
  40eeb4:	xor    BYTE PTR [ecx-0x37],0xd4
  40eeb8:	or     DWORD PTR [esi+0x3c],ebp
  40eebb:	push   ds
  40eebc:	add    al,0x66
  40eebe:	arpl   dx,bx
  40eec0:	adc    DWORD PTR [ecx-0x40026900],ebp
  40eec6:	mov    ecx,0xe123cde8
  40eecb:	or     DWORD PTR [edx+0x3a],esp
  40eece:	sub    eax,0x30325ad9
  40eed3:	cmp    cl,BYTE PTR [ecx-0x22a06f5]
  40eed9:	jmp    FWORD PTR [ecx-0x40]
  40eedc:	pop    edx
  40eedd:	je     0x40eed2
  40eedf:	mov    eax,0x70e523cd
  40eee4:	hlt    
  40eee5:	ja     0x40eee2
  40eee7:	xlat   BYTE PTR ds:[ebx]
  40eee8:	pop    ecx
  40eee9:	dec    esi
  40eeea:	push   cs
  40eeeb:	fcomp  QWORD PTR ds:0xf16f9f08
  40eef1:	ret    
  40eef2:	(bad)  
  40eef3:	push   eax
  40eef4:	inc    ebx
  40eef5:	add    ebp,edi
  40eef7:	xchg   edi,eax
  40eef8:	ds add ebp,ecx
  40eefb:	adc    al,0xd6
  40eefd:	and    ebp,ebp
  40eeff:	xchg   edi,eax
  40ef00:	rol    DWORD PTR [ebx],cl
  40ef02:	sbb    bl,BYTE PTR [eax+0x66]
  40ef05:	cs push 0x6f
  40ef08:	pop    edx
  40ef09:	je     0x40eeee
  40ef0b:	pusha  
  40ef0c:	int    0x23
  40ef0e:	add    BYTE PTR [ecx-0x307fec44],ch
  40ef14:	cmp    eax,0xf13055fe
  40ef19:	dec    DWORD PTR [ebx+edi*2+0x79c084fe]
  40ef20:	pop    eax
  40ef21:	out    0x78,al
  40ef23:	ds mov esp,0x3d0085fd
  40ef29:	xor    DWORD PTR [ecx],ecx
  40ef2b:	push   esi
  40ef2c:	adc    dh,BYTE PTR [ecx]
  40ef2e:	and    cl,BYTE PTR [ebx*4-0xd3c2914]
  40ef35:	mov    esp,0xfd79c25c
  40ef3a:	cmp    BYTE PTR [ecx+ebx*2+0x1],0x0
  40ef3f:	push   esi
  40ef40:	out    0xad,al
  40ef42:	jae    0x40ef48
  40ef44:	scas   al,BYTE PTR es:[edi]
  40ef45:	(bad)  
  40ef46:	jmp    0xfdfcad77
  40ef4b:	jne    0x40efae
  40ef4d:	mov    esp,0xbc452472
  40ef52:	adc    edi,DWORD PTR [eax+0x4f]
  40ef55:	cmp    eax,0x8a6d8afe
  40ef5a:	inc    esp
  40ef5b:	add    DWORD PTR [eax-0x7a1b8d43],edi
  40ef61:	test   edx,0xbe82b2ff
  40ef67:	je     0x40ef5f
  40ef69:	xchg   edx,eax
  40ef6a:	std    
  40ef6b:	je     0x40ef46
  40ef6d:	or     BYTE PTR [eax-0x18],dl
  40ef70:	ja     0x40ef32
  40ef72:	std    
  40ef73:	call   DWORD PTR [ebx]
  40ef75:	mov    edi,0x930e0002
  40ef7a:	mov    ecx,esi
  40ef7c:	or     cl,BYTE PTR [eax+0x2fbb85f6]
  40ef82:	ds mov edx,eax
  40ef85:	jl     0x40ef97
  40ef87:	inc    eax
  40ef88:	xchg   esp,eax
  40ef89:	addr16 test esi,edi
  40ef8c:	add    bl,al
  40ef8e:	mov    bl,0xb
  40ef90:	inc    DWORD PTR [eax+0xb]
  40ef93:	hlt    
  40ef94:	inc    bh
  40ef96:	int    0x5b
  40ef98:	(bad)  
  40ef99:	bound  edx,QWORD PTR [edx-0x444375ca]
  40ef9f:	pop    es
  40efa0:	cmp    ecx,DWORD PTR [ecx]
  40efa2:	adc    ecx,DWORD PTR ds:0x45f27c02
  40efa8:	dec    BYTE PTR [ebx-0x548cbc1a]
  40efae:	mov    ah,0xff
  40efb0:	ds in  al,0xd2
  40efb3:	add    edi,edi
  40efb5:	call   0x90cdddf7
  40efba:	icebp  
  40efbb:	mov    bl,0xe7
  40efbd:	shr    DWORD PTR [edx+0x6924fe5a],cl
  40efc3:	ins    DWORD PTR es:[edi],dx
  40efc4:	add    DWORD PTR [esi-0x10a244d7],eax
  40efca:	sub    eax,DWORD PTR [eax]
  40efcc:	add    BYTE PTR [edi],dl
  40efce:	inc    esi
  40efcf:	push   ds
  40efd0:	add    al,0x94
  40efd2:	jp     0x40ef84
  40efd4:	push   esi
  40efd5:	pop    ds
  40efd6:	and    cl,BYTE PTR [edi-0x72af5f10]
  40efdc:	cmp    al,0x9c
  40efde:	cmp    eax,edx
  40efe0:	call   DWORD PTR [esi]
  40efe2:	and    ebx,DWORD PTR [ebx+0x74]
  40efe5:	pushf  
  40efe6:	test   bh,0x23
  40efe9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40efea:	out    dx,al
  40efeb:	xor    cl,BYTE PTR [edx-0xedf924]
  40eff1:	add    bl,ah
  40eff3:	rcr    BYTE PTR [ebx-0x74],cl
  40eff6:	pusha  
  40eff7:	ss add ebp,eax
  40effa:	sub    DWORD PTR [ebx],0x2a18fe5b
  40f000:	rcl    BYTE PTR [edx],1
  40f002:	wrpkru 
  40f005:	mov    dh,0xd2
  40f007:	int3   
  40f008:	add    al,0xf0
  40f00a:	xchg   esi,eax
  40f00b:	aas    
  40f00c:	cmp    BYTE PTR [ebx+eax*8+0x42],ch
  40f010:	int    0x5a
  40f012:	jmp    0x40f015
  40f014:	rol    BYTE PTR ds:0xba1d4066,cl
  40f01a:	dec    esi
  40f01b:	inc    edx
  40f01c:	in     al,dx
  40f01d:	add    ecx,DWORD PTR [edx+0x57]
  40f020:	rol    DWORD PTR [ebx-0x7f173f7b],cl
  40f026:	push   ebx
  40f027:	(bad)  
  40f028:	cmp    edx,DWORD PTR [edi]
  40f02a:	pop    ebp
  40f02b:	adc    edi,DWORD PTR [ebx+0xe4018b2]
  40f031:	cld    
  40f032:	mov    cl,BYTE PTR [edi+0x5716b1c4]
  40f038:	enter  0x9ccf,0x83
  40f03c:	lods   eax,DWORD PTR ds:[esi]
  40f03d:	push   edx
  40f03e:	stc    
  40f03f:	sub    DWORD PTR [ebp-0x1],0xffffffe2
  40f043:	(bad)  
  40f044:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f045:	lds    ecx,FWORD PTR [esi+0x7e6bdc30]
  40f04b:	inc    ecx
  40f04c:	arpl   di,bp
  40f04e:	rol    DWORD PTR [ebp+0x49105aa0],1
  40f054:	shl    cl,0x0
  40f057:	mov    ds:0x16cdfc8f,al
  40f05c:	push   edi
  40f05d:	or     al,dl
  40f05f:	mov    WORD PTR [ebx-0x7c4eaddb],es
  40f065:	and    eax,0xb0fc8aff
  40f06a:	int3   
  40f06b:	mov    WORD PTR [edx-0x4b],gs
  40f06e:	push   ds
  40f06f:	jmp    0xf1d6:0x3b80ddcd
  40f076:	mov    BYTE PTR [edi+0x41b59800],bl
  40f07c:	push   0x56595aff
  40f081:	(bad)  
  40f082:	mov    edx,0xf588dd48
  40f087:	aad    0x41
  40f089:	push   edx
  40f08a:	aaa    
  40f08b:	mov    ds:0x8dd98a3b,al
  40f090:	pop    DWORD PTR ds:0x6547005c
  40f096:	push   0x52
  40f098:	or     BYTE PTR [edi-0x1c],dh
  40f09b:	pushf  
  40f09c:	pop    ecx
  40f09e:	ret    0x839e
  40f0a1:	dec    edi
  40f0a2:	outs   dx,BYTE PTR ds:[esi]
  40f0a3:	mov    dh,0x81
  40f0a5:	stc    
  40f0a6:	in     al,dx
  40f0a7:	inc    DWORD PTR fs:[eax+esi*4]
  40f0ab:	in     eax,dx
  40f0ac:	push   ebp
  40f0ad:	inc    BYTE PTR [edx+0x6e4f838e]
  40f0b3:	jbe    0x40f038
  40f0b5:	stc    
  40f0b6:	in     al,dx
  40f0b7:	inc    esp
  40f0b8:	cli    
  40f0b9:	add    al,0x50
  40f0bb:	add    ch,cl
  40f0bd:	push   ebp
  40f0be:	(bad)  
  40f0bf:	ins    DWORD PTR es:[edi],dx
  40f0c0:	mov    eax,ds:0x96e106d1
  40f0c5:	mov    edi,0xfec14231
  40f0ca:	mov    edi,0x889449
  40f0cf:	call   0x97a8:0xebc58197
  40f0d6:	gs ins BYTE PTR es:[edi],dx
  40f0d8:	fmul   st,st(4)
  40f0da:	pop    es
  40f0db:	gs imul ecx,esp,0x69977903
  40f0e2:	add    ebx,edi
  40f0e4:	xlat   BYTE PTR ds:[ebx]
  40f0e5:	mov    bl,0x5a
  40f0e7:	sub    al,BYTE PTR [ebx-0x75]
  40f0ea:	jmp    0x40f156
  40f0ec:	jl     0x40f0f7
  40f0ee:	or     DWORD PTR [ebx+ebp*2+0x8b75155],0xffffffcd
  40f0f6:	pop    es
  40f0f7:	add    BYTE PTR [eax+0x8],ch
  40f0fa:	push   es
  40f0fb:	mov    esi,DWORD PTR [eax]
  40f0fd:	inc    BYTE PTR [edx-0x786f12e0]
  40f103:	dec    ebp
  40f104:	in     eax,0xf4
  40f106:	lock (bad) 
  40f109:	lods   eax,DWORD PTR ds:[esi]
  40f10a:	(bad)  
  40f10b:	(bad)  
  40f10c:	mov    ebp,0x2e104384
  40f111:	loope  0x40f113
  40f113:	mov    DWORD PTR [eax-0x50],esi
  40f116:	jmp    0x6871720
  40f11b:	mov    esp,ebp
  40f11d:	jl     0x40f19a
  40f11f:	hlt    
  40f120:	add    BYTE PTR [ebp-0x368b237c],ch
  40f126:	test   ah,al
  40f128:	cmp    ebp,DWORD PTR [esp+ebp*1]
  40f12b:	or     cl,BYTE PTR [edx+0x1454f38d]
  40f131:	mov    eax,ds:0x2c3b3e55
  40f136:	sub    esi,edx
  40f138:	mov    edx,DWORD PTR ds:0xe440fe24
  40f13e:	xchg   esi,eax
  40f13f:	push   es
  40f140:	jmp    0x40f1ba
  40f142:	(bad)  
  40f143:	mov    edi,DWORD PTR [ebp+0x75]
  40f146:	test   bh,ch
  40f148:	call   0x40f0fb
  40f14d:	(bad)  
  40f14e:	mov    ecx,0x84e94d89
  40f153:	jae    0x40f161
  40f155:	fdivr  st,st(5)
  40f157:	mov    WORD PTR [edi*1+0x15e80001],es
  40f15e:	sar    ebp,0xff
  40f161:	mov    cl,0xc1
  40f163:	or     eax,0x11684
  40f168:	add    BYTE PTR [eax+0x4e1a72b8],al
  40f16e:	test   ch,al
  40f170:	call   0xfe970f09
  40f175:	sti    
  40f176:	loope  0x40f125
  40f178:	sti    
  40f179:	pop    ds
  40f17a:	or     eax,0x5b1d088c
  40f17f:	jno    0x40f105
  40f181:	aam    0x5d
  40f183:	jle    0x40f111
  40f185:	add    BYTE PTR [edi+eiz*2+0x5759f602],dl
  40f18c:	add    esi,DWORD PTR [edx+edi*1-0x2e]
  40f190:	enter  0xffb,0xa5
  40f194:	mov    bh,bh
  40f196:	or     BYTE PTR [ebx-0x76],bl
  40f199:	sub    BYTE PTR [edi+eiz*2-0x32],0x5e
  40f19e:	pop    ds
  40f19f:	push   edi
  40f1a0:	lods   al,BYTE PTR ds:[esi]
  40f1a1:	dec    BYTE PTR [ecx-0x6bc00df1]
  40f1a7:	fadd   QWORD PTR [ebx+0x7d]
  40f1aa:	out    0x36,al
  40f1ac:	xor    BYTE PTR [edx],dh
  40f1ae:	mov    ebx,ebp
  40f1b0:	inc    ebx
  40f1b1:	jge    0x40f15d
  40f1b3:	fild   WORD PTR [edi]
  40f1b5:	aaa    
  40f1b6:	adc    al,0x71
  40f1b8:	and    esi,DWORD PTR [esp+ebx*4-0x17]
  40f1bc:	ins    BYTE PTR es:[edi],dx
  40f1bd:	or     BYTE PTR [ecx+eax*4],dl
  40f1c0:	push   DWORD PTR [esi-0x66]
  40f1c3:	daa    
  40f1c4:	mov    edi,0x68665c3a
  40f1c9:	sub    dl,BYTE PTR [esi-0x33]
  40f1cc:	pop    ss
  40f1cd:	xor    bl,BYTE PTR [ecx]
  40f1cf:	call   0x89ee:0x32668455
  40f1d6:	mov    bh,ch
  40f1d8:	cmp    eax,0x74
  40f1db:	xchg   ebp,eax
  40f1dc:	or     al,BYTE PTR [eax-0x77daec3]
  40f1e2:	cwde   
  40f1e3:	xchg   edx,eax
  40f1e4:	inc    BYTE PTR [edi-0x32]
  40f1e7:	nop
  40f1e8:	data16 cmp al,BYTE PTR [eax]
  40f1eb:	adc    al,BYTE PTR [ecx]
  40f1ed:	lahf   
  40f1ee:	pop    es
  40f1ef:	adc    DWORD PTR [ecx-0x62],eax
  40f1f2:	or     esp,DWORD PTR [ebx+ebp*4-0x42]
  40f1f6:	imul   ebx,DWORD PTR [ebx-0x26a8f2bf],0xfffffffc
  40f1fd:	mov    eax,0xbe1f03
  40f202:	push   edi
  40f203:	pop    eax
  40f204:	push   esp
  40f205:	scas   eax,DWORD PTR es:[edi]
  40f206:	rcl    BYTE PTR [ebx-0x2cf894fd],0x53
  40f20d:	in     eax,0x8a
  40f20f:	push   eax
  40f210:	push   esp
  40f211:	cmp    eax,0xaa495eb6
  40f216:	repz mov ebx,0x1e582386
  40f21c:	push   ebx
  40f21d:	sar    BYTE PTR [ebx+ebp*8],1
  40f220:	push   ebx
  40f221:	mov    ebp,0xc153db82
  40f226:	imul   eax,DWORD PTR [eax-0x79],0x47f82bc
  40f22d:	push   0xffffffe0
  40f22f:	add    DWORD PTR [eax],0x3a
  40f232:	scas   al,BYTE PTR es:[edi]
  40f233:	push   cs
  40f234:	dec    esi
  40f235:	imul   ebx,DWORD PTR ds:0xbf48594,0x582b89cb
  40f23f:	sbb    al,0xad
  40f241:	je     0x40f25d
  40f243:	push   esi
  40f244:	add    ebp,DWORD PTR [edx+0x44]
  40f247:	pop    ebx
  40f248:	push   ebx
  40f249:	call   0x5fc18dd7
  40f24e:	and    eax,DWORD PTR [eax]
  40f250:	rol    BYTE PTR [esi],0x69
  40f253:	pop    esp
  40f254:	mov    esp,ss
  40f256:	jecxz  0x40f1db
  40f258:	cmp    al,0x5
  40f25a:	into   
  40f25b:	or     edx,esp
  40f25d:	mov    DWORD PTR [ebx-0x45c191a9],ebp
  40f263:	pop    esi
  40f264:	pop    esi
  40f265:	notrack jmp ebp
  40f268:	push   ss
  40f269:	jae    0x40f26a
  40f26b:	call   0x74587907
  40f270:	out    dx,eax
  40f271:	(bad)  
  40f272:	jg     0x40f296
  40f274:	mov    ds:0x5e6904cc,al
  40f279:	and    DWORD PTR [ebp-0xa],esi
  40f27c:	and    ah,dl
  40f27e:	sti    
  40f27f:	adc    bl,BYTE PTR [ebx+0x40690e86]
  40f285:	repz jae 0x40f26e
  40f288:	pop    ss
  40f289:	pop    eax
  40f28a:	or     BYTE PTR [ebp-0x6c],ch
  40f28d:	cmp    al,0xf4
  40f290:	loope  0x40f28d
  40f292:	inc    esi
  40f293:	and    bl,BYTE PTR [esi-0x2f]
  40f296:	jmp    0xd86773fd
  40f29b:	ret    0x1880
  40f29e:	pop    ds
  40f29f:	cmp    al,0xa5
  40f2a1:	or     eax,0x51e16cc9
  40f2a6:	jmp    0x4bf1:0x7fbad6eb
  40f2ad:	into   
  40f2ae:	clc    
  40f2af:	lahf   
  40f2b0:	xlat   BYTE PTR ds:[ebx]
  40f2b1:	add    BYTE PTR [esp+eiz*8+0x0],dh
  40f2b5:	inc    eax
  40f2b6:	pop    ss
  40f2b7:	cli    
  40f2b8:	sbb    esi,esp
  40f2ba:	push   ss
  40f2bb:	cli    
  40f2bc:	adc    al,0x95
  40f2be:	push   ecx
  40f2bf:	dec    esp
  40f2c0:	test   DWORD PTR ds:0xbc1c2a33,ebx
  40f2c6:	xchg   BYTE PTR [ecx+esi*2+0x13],cl
  40f2ca:	push   es
  40f2cb:	(bad)  
  40f2cc:	in     eax,0x97
  40f2ce:	add    BYTE PTR [eax],al
  40f2d0:	push   ecx
  40f2d1:	pop    ebp
  40f2d2:	xchg   ebx,eax
  40f2d3:	(bad)  
  40f2d4:	pop    esi
  40f2d5:	adc    al,0x92
  40f2d7:	jae    0x40f2ec
  40f2d9:	mov    ebx,0x84e37436
  40f2de:	inc    eax
  40f2df:	addr16 add cl,bh
  40f2e2:	inc    edx
  40f2e3:	ds add ch,ch
  40f2e6:	call   0xaa19f1ee
  40f2eb:	mov    ebx,eax
  40f2ed:	push   ebp
  40f2ee:	xchg   ebp,eax
  40f2ef:	cli    
  40f2f0:	push   DWORD PTR [edx+0x488b0c87]
  40f2f6:	mov    dh,0x87
  40f2f8:	add    al,0x7c
  40f2fa:	sar    DWORD PTR [esi+0x43aceb74],1
  40f300:	clc    
  40f301:	mov    ax,ds:0x296447f2
  40f307:	cli    
  40f308:	mov    ebp,DWORD PTR [edx-0x3d00ca1b]
  40f30e:	lods   al,BYTE PTR ds:[esi]
  40f30f:	mov    DWORD PTR [ebp-0x4b],eax
  40f312:	call   0xb4b97e22
  40f317:	mov    DWORD PTR [esi],edi
  40f319:	add    ch,dl
  40f31b:	fidivr WORD PTR [ebp-0x397f1d01]
  40f321:	push   DWORD PTR [edx-0x76]
  40f324:	pop    ecx
  40f325:	leave  
  40f326:	out    dx,al
  40f327:	mov    ds:0xd92eec89,al
  40f32c:	or     al,BYTE PTR [ebx+0x52feb4d8]
  40f332:	retf   
  40f333:	xchg   eax,esi
  40f335:	sbb    DWORD PTR [ebx-0x3],0xffffff8c
  40f339:	sbb    al,0xb5
  40f33b:	mov    ds:0x86214587,eax
  40f340:	pop    ebx
  40f341:	hlt    
  40f342:	push   esi
  40f343:	ror    BYTE PTR ds:0xfffd0883,0xff
  40f34a:	jb     0x40f2d0
  40f34c:	push   es
  40f34d:	add    esp,0x1d
  40f350:	je     0x40f35c
  40f352:	mov    esi,0x327207b6
  40f357:	xor    bh,0xd
  40f35a:	xchg   esp,eax
  40f35b:	xor    cl,BYTE PTR [eax]
  40f35d:	adc    DWORD PTR [ebp+eiz*2-0x77],0x44
  40f362:	sub    dh,bh
  40f364:	inc    eax
  40f365:	jno    0x40f39f
  40f367:	inc    BYTE PTR [eax+0xe]
  40f36a:	pop    ss
  40f36b:	fadd   DWORD PTR [edx]
  40f36d:	add    BYTE PTR [edx+esi*1-0x60e6f875],dl
  40f374:	add    BYTE PTR [ebx+0x4ce39fd],al
  40f37a:	pop    ss
  40f37b:	lock and BYTE PTR [ebp+0x0],dh
  40f37f:	nop
  40f380:	fidiv  WORD PTR [ecx]
  40f382:	mov    BYTE PTR [ecx-0x5],ch
  40f385:	addr16 cmp al,0x93
  40f388:	or     al,BYTE PTR [ebx+eax*4]
  40f38b:	fld    QWORD PTR [esi-0x32]
  40f38e:	adc    BYTE PTR [edi],dl
  40f390:	push   eax
  40f391:	or     BYTE PTR [edx-0x6f],dh
  40f394:	out    0x4c,al
  40f396:	or     al,0x4a
  40f398:	pop    edx
  40f399:	test   esi,eax
  40f39b:	xchg   esi,eax
  40f39c:	out    dx,al
  40f39d:	dec    esi
  40f39e:	jno    0x40f35b
  40f3a0:	fnsave [edx]
  40f3a2:	sub    cl,ah
  40f3a4:	sub    eax,0x2a5d6622
  40f3a9:	xlat   BYTE PTR ds:[ebx]
  40f3aa:	adc    eax,0x4680a067
  40f3af:	xchg   edx,eax
  40f3b0:	inc    ebx
  40f3b1:	pop    es
  40f3b2:	inc    ecx
  40f3b3:	pop    ss
  40f3b4:	jb     0x40f3bb
  40f3b6:	popw   ss
  40f3b8:	bound  ebp,QWORD PTR [esi+0x44708273]
  40f3be:	add    al,ch
  40f3c0:	test   si,ax
  40f3c3:	xchg   esi,eax
  40f3c4:	inc    edx
  40f3c5:	dec    ebp
  40f3c6:	jno    0x40f40a
  40f3c8:	inc    ebx
  40f3c9:	dec    ebp
  40f3ca:	je     0x40f35c
  40f3cc:	(bad)  
  40f3ce:	sti    
  40f3cf:	xchg   esi,eax
  40f3d0:	loop   0x40f404
  40f3d2:	sub    ch,cl
  40f3d4:	add    BYTE PTR [ebp+0x7f],ah
  40f3d7:	ror    BYTE PTR [eax+0x6b],1
  40f3da:	add    BYTE PTR [ecx],cl
  40f3dc:	add    eax,0x319403e9
  40f3e1:	push   ecx
  40f3e2:	pop    esp
  40f3e3:	add    BYTE PTR [ecx-0x72],ch
  40f3e6:	inc    ebp
  40f3e7:	push   ebx
  40f3e8:	pop    ss
  40f3e9:	inc    ecx
  40f3ea:	mov    ah,0xf
  40f3ec:	adc    DWORD PTR [ebx+edi*4],ebp
  40f3ef:	std    
  40f3f0:	mov    BYTE PTR [eax-0x40],0xbb
  40f3f4:	add    al,0xe8
  40f3f7:	ret    
  40f3f8:	out    dx,al
  40f3f9:	add    eax,0x7bffd91e
  40f3fe:	sub    DWORD PTR [edx+eiz*4+0x4b],ebx
  40f402:	or     eax,0x71ff1e53
  40f407:	mov    ecx,0x74e479eb
  40f40c:	adc    BYTE PTR [ecx+0x7c],al
  40f40f:	jmp    0x40f3e3
  40f411:	(bad)
  40f414:	push   0x954a6954
  40f419:	jns    0x40f476
  40f41b:	push   eax
  40f41c:	push   cs
  40f41d:	dec    eax
  40f41e:	mov    edi,0xcd4fb326
  40f423:	jle    0x40f475
  40f425:	dec    eax
  40f426:	rol    DWORD PTR [eax],1
  40f428:	shufps xmm0,xmm0,0x7e
  40f42c:	pop    ecx
  40f42d:	pop    eax
  40f42e:	call   0x8a3b:0x694f9291
  40f435:	scas   eax,DWORD PTR es:[edi]
  40f436:	inc    esi
  40f437:	scas   eax,DWORD PTR es:[edi]
  40f438:	dec    esp
  40f439:	inc    ebx
  40f43a:	xor    edi,DWORD PTR [edi+0x6f]
  40f43d:	add    DWORD PTR [edi+esi*8+0x2ed9b6c6],0xffffffc2
  40f445:	adc    eax,DWORD PTR [esi+0x54c0007c]
  40f44b:	outs   dx,DWORD PTR ds:[esi]
  40f44c:	mov    al,0x63
  40f44e:	or     DWORD PTR [eax],eax
  40f450:	adc    al,0x94
  40f452:	inc    DWORD PTR [ebp+0x9742]
  40f458:	jb     0x40f4ae
  40f45a:	push   edi
  40f45b:	mov    ah,BYTE PTR [edi+edi*1-0x4d9efc84]
  40f462:	inc    ebp
  40f464:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f465:	(bad)  
  40f466:	dec    edi
  40f467:	xchg   DWORD PTR [ebx+eax*8+0x1c52c97a],ebp
  40f46e:	in     eax,0x82
  40f470:	xor    DWORD PTR [edi+0x12c718d4],esi
  40f476:	push   edi
  40f477:	or     BYTE PTR [ebx+0x2182e68d],bl
  40f47d:	xchg   esp,eax
  40f47e:	(bad)  
  40f47f:	or     al,0x6a
  40f481:	pop    eax
  40f482:	add    DWORD PTR [edi],ecx
  40f484:	push   esi
  40f485:	nop
  40f486:	out    0x84,al
  40f488:	sub    DWORD PTR [ecx+eiz*2-0x3bb21a16],edi
  40f48f:	(bad)  
  40f490:	call   0x6955429e
  40f495:	ror    DWORD PTR [esi],0x0
  40f498:	je     0x40f42e
  40f49a:	or     BYTE PTR [ebp-0x72f940d3],cl
  40f4a0:	pop    esp
  40f4a1:	dec    esp
  40f4a2:	js     0x40f4e8
  40f4a4:	(bad)  [eax-0x33]
  40f4a7:	mov    esp,0xbf8345c6
  40f4ac:	xor    eax,0x7c81e600
  40f4b1:	mov    cl,0x98
  40f4b3:	jns    0x40f511
  40f4b5:	mov    ch,0x6e
  40f4b7:	push   es
  40f4b8:	push   0xffffffc9
  40f4ba:	das    
  40f4bb:	in     al,0x88
  40f4bd:	in     eax,0x48
  40f4bf:	(bad)  
  40f4c0:	jg     0x40f4d6
  40f4c2:	lds    ecx,FWORD PTR [ebp+0x72]
  40f4c5:	loope  0x40f510
  40f4c7:	and    BYTE PTR [eax+0x0],bl
  40f4ca:	xchg   ebx,eax
  40f4cb:	leave  
  40f4cc:	add    bh,BYTE PTR [ebx-0x4e]
  40f4cf:	retf   
  40f4d0:	inc    ebx
  40f4d1:	in     al,dx
  40f4d2:	retf   0x8af4
  40f4d5:	inc    ebp
  40f4d6:	int    0xcd
  40f4d8:	xor    bh,BYTE PTR [ebx-0x1b]
  40f4db:	mov    dh,0xf7
  40f4dd:	(bad)  
  40f4de:	fiadd  DWORD PTR [ebx]
  40f4e0:	jge    0x40f4d2
  40f4e2:	mov    ebp,0x4100fd3d
  40f4e7:	add    BYTE PTR [edx+0x22],ch
  40f4ea:	cmc    
  40f4eb:	push   edi
  40f4ec:	xchg   DWORD PTR [esi+edx*2],eax
  40f4ef:	cmp    DWORD PTR [ecx],esi
  40f4f1:	shl    bl,0xca
  40f4f4:	add    bh,BYTE PTR [ebx-0x46]
  40f4f7:	inc    ebp
  40f4f8:	test   BYTE PTR [ebx+0x4539ba30],0xe9
  40f4ff:	add    BYTE PTR [edx-0x25075ab],al
  40f505:	mov    edi,DWORD PTR [esi-0x5ba4a371]
  40f50b:	mov    BYTE PTR [esi],0x0
  40f50e:	fidiv  DWORD PTR [esi]
  40f510:	bnd call 0xfdbea816
  40f516:	dec    DWORD PTR [esi]
  40f518:	ret    0xede9
  40f51b:	or     bl,0xea
  40f51e:	push   esi
  40f51f:	or     bl,0xf7
  40f522:	mov    edi,DWORD PTR [eax+0x4c]
  40f525:	mov    eax,esi
  40f527:	xor    BYTE PTR [edx],cl
  40f529:	je     0x40f537
  40f52b:	xor    BYTE PTR [eax+0x92e1472],dh
  40f531:	(bad)  
  40f532:	jmp    0x40f720
  40f537:	lock mov al,0x73
  40f53a:	divps  xmm0,xmm1
  40f53d:	ds jmp 0x40f740
  40f543:	xchg   esp,eax
  40f544:	sub    al,BYTE PTR [edx-0x18]
  40f547:	sbb    eax,0xc7000257
  40f54c:	shr    ch,cl
  40f54e:	ja     0x40f4d6
  40f550:	pop    ss
  40f551:	add    al,0x83
  40f553:	push   edx
  40f554:	(bad)  
  40f555:	aad    0x2f
  40f557:	pop    ss
  40f558:	pop    esp
  40f559:	(bad)  
  40f55a:	dec    cl
  40f55c:	stc    
  40f55d:	jge    0x40f565
  40f55f:	mov    ebp,DWORD PTR [ebp+0x11]
  40f562:	pslld  mm0,QWORD PTR [esi]
  40f565:	sbb    al,0xf2
  40f567:	mov    eax,ds:0x18cf1b96
  40f56c:	pop    ss
  40f56d:	xlat   BYTE PTR ds:[ebx]
  40f56e:	push   eax
  40f56f:	rcl    ecx,cl
  40f571:	pop    es
  40f572:	rsqrtps xmm1,XMMWORD PTR [ebx+0x9]
  40f576:	str    WORD PTR [edx-0x19]
  40f57a:	sbb    esi,edx
  40f57c:	mov    ch,dh
  40f57e:	pop    ebx
  40f57f:	inc    eax
  40f580:	gs out dx,al
  40f582:	xor    ecx,DWORD PTR [edx-0x1084a09f]
  40f588:	pop    ss
  40f589:	jl     0x40f589
  40f58b:	(bad)  
  40f58c:	imul   edx,DWORD PTR [eax-0x49],0xbdd1c7fe
  40f593:	pop    es
  40f594:	sbb    eax,0x618afe9c
  40f599:	sub    ecx,DWORD PTR [ebx]
  40f59b:	repnz dec ecx
  40f59d:	clc    
  40f59e:	mov    ch,dh
  40f5a0:	inc    eax
  40f5a1:	dec    esp
  40f5a2:	xchg   ecx,edx
  40f5a4:	sub    BYTE PTR [eax+0x11],dl
  40f5a7:	rcl    BYTE PTR [ecx],0x89
  40f5aa:	int    0x14
  40f5ac:	xchg   ebx,eax
  40f5ad:	test   DWORD PTR [edi+ecx*1],edx
  40f5b0:	fisubr DWORD PTR ds:0x5f09f319
  40f5b6:	ret    
  40f5b7:	inc    esi
  40f5b8:	aam    0x4e
  40f5ba:	inc    eax
  40f5bb:	jnp    0x40f630
  40f5bd:	add    DWORD PTR [edx-0x26b150fe],edx
  40f5c3:	cmp    al,0x18
  40f5c5:	push   ebx
  40f5c6:	in     eax,0x6e
  40f5c8:	push   esp
  40f5c9:	js     0x40f571
  40f5cb:	push   edi
  40f5cc:	dec    ebx
  40f5cd:	call   0xbd49a17a
  40f5d2:	out    dx,eax
  40f5d3:	dec    esi
  40f5d4:	jbe    0x40f617
  40f5d6:	adc    eax,0xe03ee8ae
  40f5db:	add    eax,DWORD PTR [eax]
  40f5dd:	jmp    0xe2f74a59
  40f5e2:	ja     0x40f643
  40f5e4:	jnp    0x40f5c6
  40f5e6:	clc    
  40f5e7:	popa   
  40f5e8:	push   esp
  40f5e9:	adc    BYTE PTR [edx],bh
  40f5eb:	sar    edi,cl
  40f5ed:	sbb    BYTE PTR [esp+edi*4-0x9],cl
  40f5f1:	push   ss
  40f5f2:	cmp    DWORD PTR ds:0xe901325d,edi
  40f5f8:	add    edx,DWORD PTR [ecx]
  40f5fa:	dec    esp
  40f5fb:	mov    bl,0xfe
  40f5fd:	mov    BYTE PTR [eax-0x58],0x5c
  40f601:	es add ecx,ebp
  40f604:	add    esp,DWORD PTR [edi-0x148000c0]
  40f60a:	dec    ebx
  40f60b:	call   0x692f04c2
  40f610:	repnz fwait
  40f612:	add    BYTE PTR [edx+0x4e],ch
  40f615:	rcl    ch,cl
  40f617:	lds    eax,FWORD PTR [edx-0x271203b8]
  40f61d:	je     0x40f61a
  40f61f:	popf   
  40f620:	push   es
  40f621:	mov    edx,DWORD PTR [ebx-0x2a5be4e9]
  40f627:	xor    al,0x1b
  40f629:	fnclex 
  40f62b:	arpl   WORD PTR [ebx+0x27],ax
  40f62e:	mov    ch,0x69
  40f630:	inc    esi
  40f631:	xchg   ebp,eax
  40f632:	sti    
  40f633:	jne    0x40f63b
  40f635:	mov    ds:0x98fcff93,eax
  40f63a:	pop    ss
  40f63b:	lock xor eax,0x384456f5
  40f641:	add    bl,cl
  40f643:	mov    ch,BYTE PTR cs:[eax+esi*2]
  40f647:	jbe    0x40f638
  40f649:	push   0x44
  40f64b:	idiv   esi
  40f64d:	adc    al,0x61
  40f64f:	mov    dl,0xfe
  40f651:	call   0xf75c:0x7007bcde
  40f658:	mov    bl,BYTE PTR [esp+edx*4]
  40f65b:	pop    es
  40f65c:	repnz hlt 
  40f65e:	ins    BYTE PTR es:[edi],dx
  40f65f:	test   ebp,esi
  40f661:	fnsave [eax-0x7b]
  40f664:	rcl    ebp,1
  40f666:	and    al,0xe
  40f668:	shr    BYTE PTR [ebp+eiz*2-0x33],0x18
  40f66d:	fimul  WORD PTR [edx]
  40f66f:	adc    BYTE PTR [edi],cl
  40f671:	jle    0x40f69d
  40f673:	push   ss
  40f674:	repz mov ah,0x12
  40f677:	jle    0x40f639
  40f679:	jmp    0x40f691
  40f67b:	inc    edx
  40f67c:	add    DWORD PTR [ecx+0x127b3e8e],ebp
  40f682:	pop    esi
  40f683:	add    DWORD PTR [ebx],ebp
  40f685:	sbb    eax,DWORD PTR [esi-0x15e07bc7]
  40f68b:	imul   eax,eax,0xd7525962
  40f691:	loop   0x40f6ea
  40f693:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f694:	mov    WORD PTR [ebp+0x282249d0],gs
  40f69a:	cli    
  40f69b:	lods   al,BYTE PTR ds:[esi]
  40f69c:	pop    esp
  40f69d:	sub    edi,DWORD PTR [edi-0x721316b6]
  40f6a3:	ss jae 0x40f692
  40f6a6:	add    bh,dl
  40f6a8:	js     0x40f6b1
  40f6aa:	ins    DWORD PTR es:[edi],dx
  40f6ab:	outs   dx,DWORD PTR ds:[esi]
  40f6ac:	aam    0xf4
  40f6ae:	adc    ebx,DWORD PTR [esi-0x31]
  40f6b1:	add    DWORD PTR [eax],eax
  40f6b3:	sahf   
  40f6b4:	mov    esi,0x6484ebc1
  40f6b9:	cmp    ecx,0x831128bd
  40f6bf:	sub    eax,0x85b70eff
  40f6c4:	fs or  ecx,0xffffff88
  40f6c8:	stos   DWORD PTR es:[edi],eax
  40f6c9:	add    DWORD PTR fs:[ebp+0x3e],0x72
  40f6ce:	add    bh,BYTE PTR [esi]
  40f6d0:	mov    esi,0xe0e655c1
  40f6d5:	dec    edi
  40f6d6:	mov    edi,DWORD PTR [eax+0x4c]
  40f6d9:	xchg   DWORD PTR [ebp-0x3f],eax
  40f6dc:	sbb    ecx,0xc681387f
  40f6e2:	inc    DWORD PTR [edi+edi*4+0x57898d54]
  40f6e9:	push   esp
  40f6ea:	push   edi
  40f6eb:	aad    0xb6
  40f6ed:	mov    edx,0x43c9d2ff
  40f6f2:	or     al,0xfd
  40f6f4:	mov    esp,0x952efc73
  40f6f9:	std    
  40f6fa:	adc    eax,0x3e5011
  40f6ff:	inc    BYTE PTR [esi]
  40f701:	mov    DWORD PTR gs:[ecx-0x4],eax
  40f705:	std    
  40f706:	pop    esi
  40f707:	jle    0x40f6c5
  40f709:	std    
  40f70a:	jne    0x40f70c
  40f70c:	hlt    
  40f70d:	xchg   esp,eax
  40f70e:	std    
  40f70f:	adc    eax,0x3e4e6d
  40f714:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f715:	mov    edi,0xc71bc931
  40f71a:	or     al,BYTE PTR [edi+0x74]
  40f71d:	mov    edi,0x22118b51
  40f722:	or     BYTE PTR [ebp-0x7cfcc34e],al
  40f728:	in     eax,0xbc
  40f72a:	pop    ecx
  40f72b:	ret    
  40f72c:	xchg   esp,eax
  40f72d:	or     dh,BYTE PTR [esi+0x4b7bdce7]
  40f733:	dec    BYTE PTR [ecx]
  40f735:	sbb    al,0x28
  40f737:	or     al,0xe4
  40f739:	out    0xb4,al
  40f73b:	push   ebp
  40f73c:	mov    ebp,DWORD PTR [edx+ebx*4]
  40f73f:	adc    dl,ah
  40f741:	push   edi
  40f742:	inc    esp
  40f743:	inc    ebx
  40f744:	mov    edx,0x6c8302a2
  40f749:	push   0xffffffd5
  40f74b:	or     dl,al
  40f74d:	jb     0x40f744
  40f74f:	ja     0x40f6d7
  40f751:	pop    ss
  40f752:	add    al,0x5b
  40f754:	push   edi
  40f755:	cdq    
  40f756:	push   es
  40f757:	xor    BYTE PTR [esi+ebx*1-0x7ce0abbf],dl
  40f75e:	mov    cl,0x82
  40f760:	mov    ecx,0x95602db
  40f765:	pushf  
  40f766:	repnz dec edi
  40f768:	xor    esi,DWORD PTR [esi+edi*8]
  40f76b:	xor    dl,BYTE PTR [esp+eiz*8-0x43]
  40f76f:	sti    
  40f770:	add    BYTE PTR [eax+edi*1],ch
  40f773:	push   esp
  40f774:	(bad)  
  40f775:	sbb    ecx,esi
  40f777:	push   edx
  40f778:	test   BYTE PTR [edx],cl
  40f77a:	inc    eax
  40f77b:	clc    
  40f77c:	inc    BYTE PTR [ecx+0x3f735b13]
  40f782:	sbb    cl,BYTE PTR [edx+ebp*8-0x74]
  40f786:	into   
  40f787:	(bad)  
  40f78a:	pushf  
  40f78b:	cli    
  40f78c:	mov    BYTE PTR [ebp-0x32a2bb22],dl
  40f792:	adc    eax,0x67e88ab6
  40f797:	mov    ah,0x8a
  40f799:	les    esi,FWORD PTR [ecx+0x77]
  40f79c:	cmp    eax,0x4ffe9c19
  40f7a1:	ret    
  40f7a2:	sar    edx,cl
  40f7a4:	mov    dl,bh
  40f7a6:	push   DWORD PTR [ecx+0x3a]
  40f7a9:	mov    ebx,0xaa4bd715
  40f7ae:	jbe    0x40f7db
  40f7b0:	dec    eax
  40f7b1:	push   ss
  40f7b2:	dec    eax
  40f7b3:	int    0xd1
  40f7b5:	jge    0x40f73a
  40f7b7:	mov    eax,ds:0xbd7da0d1
  40f7bc:	rcr    DWORD PTR [edi+eax*2-0x7438a402],1
  40f7c3:	lods   eax,DWORD PTR ds:[esi]
  40f7c4:	dec    ebx
  40f7c5:	mov    ah,0x6
  40f7c7:	je     0x40f781
  40f7c9:	mov    es,WORD PTR [edx]
  40f7cb:	xchg   ecx,eax
  40f7cc:	jecxz  0x40f7fb
  40f7ce:	dec    eax
  40f7cf:	xchg   ebp,eax
  40f7d0:	jg     0x40f7aa
  40f7d2:	inc    esp
  40f7d3:	sub    eax,0x444c00aa
  40f7d8:	sbb    edi,DWORD PTR [edi+0x3f]
  40f7db:	mov    dl,0x69
  40f7dd:	loope  0x40f82e
  40f7df:	add    DWORD PTR [edi],ebx
  40f7e1:	jns    0x40f7bb
  40f7e3:	lock sbb BYTE PTR [ebx-0x40],cl
  40f7e7:	hlt    
  40f7e8:	jae    0x40f7ab
  40f7ea:	das    
  40f7eb:	pop    ecx
  40f7ec:	enter  0x2a51,0x48
  40f7f0:	popa   
  40f7f1:	push   esp
  40f7f2:	sbb    BYTE PTR [edi-0x31],cl
  40f7f5:	std    
  40f7f6:	sbb    cl,dh
  40f7f8:	inc    esp
  40f7f9:	pop    esp
  40f7fa:	jnp    0xf93f433d
  40f800:	popa   
  40f801:	sar    edi,0x7b
  40f804:	fwait
  40f805:	sti    
  40f806:	or     al,0x2
  40f808:	jb     0x40f84c
  40f80a:	push   ecx
  40f80b:	cmp    DWORD PTR [ecx],ebp
  40f80d:	dec    ebx
  40f80e:	mov    eax,ds:0xe28e0e58
  40f813:	inc    edi
  40f814:	xor    bh,0x41
  40f817:	pop    eax
  40f818:	sbb    DWORD PTR [edi-0x4cd6b82e],ecx
  40f81e:	push   ds
  40f81f:	dec    ecx
  40f820:	jmp    FWORD PTR [ecx+0x4f]
  40f823:	inc    esi
  40f824:	je     0x40f803
  40f826:	dec    esi
  40f827:	shl    DWORD PTR [ebx],cl
  40f829:	icebp  
  40f82a:	pop    esi
  40f82b:	in     al,dx
  40f82c:	jg     0x40f829
  40f82e:	xlat   BYTE PTR ds:[ebx]
  40f82f:	inc    edi
  40f830:	mov    ecx,edx
  40f832:	adc    al,0x47
  40f834:	jge    0x40f837
  40f836:	mov    edx,0xc65547
  40f83b:	arpl   WORD PTR [ebx],sp
  40f83d:	adc    BYTE PTR [ecx-0x17],dl
  40f840:	inc    esp
  40f841:	(bad)  
  40f842:	call   0xe9422226
  40f847:	xchg   edi,eax
  40f848:	jns    0x40f84f
  40f84a:	ins    BYTE PTR es:[edi],dx
  40f84b:	xlat   BYTE PTR ds:[ebx]
  40f84c:	rcl    DWORD PTR [eax],cl
  40f84e:	cmp    ecx,ebp
  40f850:	lds    eax,FWORD PTR [ebx]
  40f852:	xchg   esi,eax
  40f853:	fs iret 
  40f855:	adc    DWORD PTR [ecx],ebp
  40f857:	nop
  40f858:	jns    0x40f89f
  40f85a:	icebp  
  40f85b:	daa    
  40f85c:	add    bl,ch
  40f85e:	jmp    0x40f801
  40f860:	inc    eax
  40f861:	pop    esi
  40f862:	stos   DWORD PTR es:[edi],eax
  40f863:	inc    ebx
  40f864:	inc    edi
  40f865:	jmp    0xf7c32e27
  40f86a:	or     eax,DWORD PTR [eax+esi*8+0x65]
  40f86e:	push   0xffffffdf
  40f870:	push   ds
  40f871:	je     0x40f855
  40f873:	xor    eax,0x4badf782
  40f878:	cld    
  40f879:	gs ins BYTE PTR es:[edi],dx
  40f87b:	push   edi
  40f87c:	int3   
  40f87d:	or     bl,dl
  40f87f:	xor    ebp,DWORD PTR [edi-0x7c669f9b]
  40f885:	shr    ebx,0xf5
  40f888:	jns    0x40f88a
  40f88a:	(bad)  
  40f88b:	jo     0x40f88e
  40f88d:	sub    DWORD PTR [ebx],0xffffff91
  40f890:	add    eax,0xffffffeb
  40f893:	fimul  WORD PTR [ebp-0x78eb7900]
  40f899:	je     0x40f89b
  40f89b:	mov    esi,ebp
  40f89d:	mov    edi,0xfd440066
  40f8a2:	ret    0xf98b
  40f8a5:	out    0x3,al
  40f8a7:	jmp    0x40f85f
  40f8a9:	(bad)  
  40f8aa:	(bad)  
  40f8ab:	cmp    esp,DWORD PTR [edi-0x47c3f8ca]
  40f8b1:	add    eax,DWORD PTR ss:[ecx-0x7a]
  40f8b5:	or     dh,BYTE PTR [ecx-0xf]
  40f8b8:	ss ret 
  40f8ba:	sub    DWORD PTR [ecx+eiz*4+0x0],eax
  40f8be:	cmp    ecx,esi
  40f8c0:	rcl    DWORD PTR [eax-0x75],0x51
  40f8c4:	ins    BYTE PTR es:[edi],dx
  40f8c5:	cmc    
  40f8c6:	aad    0x73
  40f8c8:	pop    ecx
  40f8c9:	xor    BYTE PTR [edi],0xd
  40f8cc:	nop
  40f8cd:	(bad)  
  40f8ce:	jg     0x40f90a
  40f8d0:	addr16 aaa 
  40f8d2:	add    BYTE PTR [ebx+0xf874237],cl
  40f8d8:	das    
  40f8d9:	add    DWORD PTR [eax],eax
  40f8db:	push   ebp
  40f8dc:	(bad)  
  40f8dd:	test   al,0x81
  40f8df:	in     al,dx
  40f8e0:	add    DWORD PTR [ebp-0x4d4374ac],ecx
  40f8e6:	inc    esp
  40f8e7:	sbb    al,0x5d
  40f8e9:	xchg   ecx,eax
  40f8ea:	jb     0x40f93e
  40f8ec:	inc    edi
  40f8ed:	and    dl,BYTE PTR [esi-0x73]
  40f8f0:	lock adc DWORD PTR [edi-0x18],ecx
  40f8f4:	out    dx,eax
  40f8f5:	jae    0x40f8f4
  40f8f7:	jmp    FWORD PTR [esi+0xeefea25]
  40f8fd:	adc    eax,0x9a94ff32
  40f902:	push   cs
  40f903:	jbe    0x40f905
  40f905:	pop    ebx
  40f907:	inc    esp
  40f908:	or     al,0xee
  40f90a:	rol    BYTE PTR [edi+0x44c35945],0x10
  40f911:	mov    al,0x8b
  40f914:	dec    ebp
  40f915:	xchg   esp,eax
  40f916:	pop    es
  40f917:	jnp    0x40f95d
  40f919:	hlt    
  40f91a:	dec    DWORD PTR [ecx+0x7ffed3fe]
  40f920:	mov    edi,0x3abf5541
  40f925:	inc    edx
  40f926:	daa    
  40f927:	aam    0xdd
  40f929:	or     eax,0x5288ee76
  40f92e:	call   FWORD PTR [eax+eax*2+0x1f]
  40f932:	sbb    eax,0xe0db025c
  40f937:	enter  0xd13,0x1e
  40f93b:	in     al,dx
  40f93c:	scas   eax,DWORD PTR es:[edi]
  40f93d:	xchg   ebp,eax
  40f93e:	xor    cl,BYTE PTR [esi]
  40f940:	xor    edx,DWORD PTR [edx+ecx*2+0x47]
  40f944:	mov    dl,bl
  40f946:	and    edi,DWORD PTR [ecx+0x44]
  40f949:	test   BYTE PTR [eax-0x40],dl
  40f94c:	pop    es
  40f94d:	mov    ds:0x6bff45d3,eax
  40f952:	push   edi
  40f953:	adc    ecx,ecx
  40f955:	aad    0xe0
  40f957:	mov    ch,0xf3
  40f959:	or     eax,0xe28a4be4
  40f95e:	push   ebx
  40f95f:	jl     0x40f97c
  40f961:	pushf  
  40f962:	inc    ecx
  40f963:	call   0xc8d3a0dc
  40f968:	str    WORD PTR [ebx+0x33ff35dc]
  40f96f:	push   edi
  40f970:	jns    0x40f9ef
  40f972:	mov    ecx,gs
  40f974:	inc    ebx
  40f975:	pop    esi
  40f976:	ret    0x3992
  40f979:	ret    0x955e
  40f97c:	add    DWORD PTR [edi],ecx
  40f97e:	sbb    BYTE PTR [ebx+0x2940002],dh
  40f984:	retf   0x880f
  40f987:	mov    edi,0xe1884d7b
  40f98c:	out    dx,al
  40f98d:	push   cs
  40f98e:	pop    ds
  40f98f:	add    BYTE PTR [edi+0x1dab13e7],dh
  40f995:	push   ecx
  40f996:	aam    0xf3
  40f998:	pushf  
  40f999:	(bad)
  40f99c:	loopne 0x40f96d
  40f99e:	mov    al,0x73
  40f9a0:	mov    cl,0x88
  40f9a2:	dec    ebx
  40f9a3:	inc    edi
  40f9a4:	(bad)  
  40f9a6:	xchg   esi,eax
  40f9a7:	sub    BYTE PTR [ecx],0x23
  40f9aa:	or     DWORD PTR [edx-0x19537cd3],edi
  40f9b0:	pop    ebp
  40f9b1:	add    DWORD PTR [edx+eax*2],edx
  40f9b4:	or     BYTE PTR [ebx+0x78],bl
  40f9b7:	js     0x40f9f4
  40f9b9:	inc    edi
  40f9ba:	scas   al,BYTE PTR es:[edi]
  40f9bb:	loop   0x40f99a
  40f9bd:	test   DWORD PTR [esi-0x4f],edx
  40f9c0:	(bad)
  40f9c3:	in     eax,dx
  40f9c4:	sub    BYTE PTR [esi+ecx*1],al
  40f9c7:	sub    ebp,esp
  40f9c9:	test   eax,edx
  40f9cb:	inc    ebx
  40f9cc:	sbb    BYTE PTR [edi+0x0],al
  40f9cf:	mov    BYTE PTR [eax-0x4],dh
  40f9d2:	ret    
  40f9d3:	imul   edi,DWORD PTR [ebx+eiz*1+0x47],0xe
  40f9d8:	mov    esi,0x43c07a98
  40f9dd:	shr    BYTE PTR [ecx],cl
  40f9df:	(bad)  
  40f9e0:	mov    ds:0xfeafbe7e,al
  40f9e5:	hlt    
  40f9e6:	jp     0x40f9ab
  40f9e8:	inc    edi
  40f9e9:	loop   0x40f9bb
  40f9eb:	ja     0x40f96d
  40f9ed:	jb     0x40f9e8
  40f9ef:	test   al,0xe3
  40f9f1:	jno    0x40f9ac
  40f9f3:	and    ecx,DWORD PTR [eax]
  40f9f5:	scas   eax,DWORD PTR es:[edi]
  40f9f6:	repz xchg edx,eax
  40f9f8:	jg     0x40f9d5
  40f9fa:	inc    esi
  40f9fb:	sbb    al,BYTE PTR [ecx+eiz*2-0x4a]
  40f9ff:	lahf   
  40fa00:	or     BYTE PTR [ebp+0x63f3950c],ah
  40fa06:	fadd   QWORD PTR [edx]
  40fa08:	inc    esp
  40fa09:	push   DWORD PTR ds:0x3144433b
  40fa0f:	dec    edi
  40fa10:	adc    al,BYTE PTR [eax-0x7b0d11dd]
  40fa16:	rcr    BYTE PTR [edx+0x42],0xfe
  40fa1a:	imul   ecx,DWORD PTR [edi-0xc],0x4308640e
  40fa21:	inc    BYTE PTR [esi]
  40fa23:	dec    edi
  40fa24:	mov    ah,0xf3
  40fa26:	ret    0xfc09
  40fa29:	push   cs
  40fa2a:	push   0xffffffd4
  40fa2c:	inc    edx
  40fa2d:	(bad)  
  40fa2e:	out    dx,al
  40fa2f:	cs mov ch,0x3
  40fa32:	and    DWORD PTR [eax],eax
  40fa34:	in     al,0x0
  40fa36:	add    esi,ebp
  40fa38:	adc    al,0xb
  40fa3a:	call   esi
  40fa3c:	push   edx
  40fa3d:	add    edi,edi
  40fa3f:	and    al,0xe4
  40fa41:	mov    edx,0x3d82cfe
  40fa46:	jmp    DWORD PTR [esp+eiz*8]
  40fa49:	js     0x40fa8f
  40fa4b:	mov    ecx,0xde07ba8e
  40fa50:	adc    al,0xf7
  40fa52:	(bad)  
  40fa53:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fa54:	ror    BYTE PTR [esi],cl
  40fa56:	rcl    BYTE PTR [edi+0x6000e721],0x51
  40fa5d:	jmp    0x40fad2
  40fa5f:	adc    eax,0xf60fc29f
  40fa64:	mov    ebx,0xdaefe883
  40fa69:	inc    edx
  40fa6a:	(bad)  
  40fa6b:	(bad)  
  40fa6d:	cli    
  40fa6e:	mov    DWORD PTR [edi],ebx
  40fa70:	cdq    
  40fa71:	ja     0x40fac8
  40fa73:	in     eax,dx
  40fa74:	push   edi
  40fa75:	push   es
  40fa76:	ret    
  40fa77:	fisub  DWORD PTR [edx]
  40fa79:	or     ecx,DWORD PTR [ebx+ebp*8]
  40fa7c:	dec    ebx
  40fa7d:	dec    ebp
  40fa7e:	cmp    ch,BYTE PTR [edx]
  40fa80:	in     al,0xfa
  40fa82:	mov    al,BYTE PTR [eax]
  40fa84:	cmp    ecx,DWORD PTR [edi-0x19]
  40fa87:	mov    ah,0xc3
  40fa89:	mov    edx,0x928d6afd
  40fa8e:	mov    ecx,DWORD PTR [ebp-0x73]
  40fa91:	mov    esi,fs
  40fa93:	stos   DWORD PTR es:[edi],eax
  40fa94:	jne    0x40fa50
  40fa96:	std    
  40fa97:	add    DWORD PTR [eax],eax
  40fa99:	cmp    BYTE PTR [ebx],dl
  40fa9b:	sub    BYTE PTR [ebp-0x5b],al
  40fa9e:	les    edi,FWORD PTR [eax+ebx*1-0x6a]
  40faa2:	in     al,0x8a
  40faa4:	inc    esi
  40faa5:	sar    ebp,0xc6
  40faa8:	mov    eax,edi
  40faaa:	sbb    cl,BYTE PTR [edx-0x391a22ba]
  40fab0:	lea    edx,[eax]
  40fab2:	js     0x27e4d7fd
  40fab8:	inc    dl
  40faba:	mov    esp,0xd54d89
  40fabf:	iret   
  40fac0:	mov    DWORD PTR [ebx-0x7d3f7dac],esi
  40fac6:	ret    
  40fac7:	jbe    0x40fac7
  40fac9:	inc    edx
  40faca:	mov    esp,0x4cc33b45
  40facf:	jo     0x40faa3
  40fad1:	push   esp
  40fad2:	mov    al,ds:0x3d32fffc
  40fad7:	out    0x9f,eax
  40fad9:	add    edi,DWORD PTR [ebp+edi*8-0x7e5709ab]
  40fae0:	clc    
  40fae1:	and    dh,BYTE PTR [edx]
  40fae3:	jnp    0x68274369
  40fae9:	adc    bh,BYTE PTR [ebp+edi*8+0x73bbc583]
  40faf0:	add    al,0xee
  40faf2:	mov    ebp,0xf0ee34e9
  40faf7:	ficom  DWORD PTR [ebx-0x22]
  40fafa:	mov    esp,0x94001073
  40faff:	xor    DWORD PTR [edx-0x50dc7602],0x434f81fe
  40fb09:	adc    al,0x84
  40fb0b:	and    eax,0x16beffc2
  40fb10:	(bad)  
  40fb11:	adc    DWORD PTR [ebp-0x78820d8c],ebp
  40fb17:	int3   
  40fb18:	imul   DWORD PTR [edi]
  40fb1a:	pushf  
  40fb1b:	inc    eax
  40fb1c:	inc    ebx
  40fb1d:	jae    0x40faae
  40fb1f:	cs mov ebp,0xf5b500f
  40fb25:	sar    BYTE PTR [edi+0x5f187a55],0x64
  40fb2c:	inc    eax
  40fb2d:	or     edx,DWORD PTR [esp+eiz*2-0x62e01489]
  40fb34:	repnz push ebp
  40fb36:	inc    ebx
  40fb37:	lods   eax,DWORD PTR ds:[esi]
  40fb38:	add    edi,edi
  40fb3a:	sub    DWORD PTR [ebx+0xf],edx
  40fb3d:	neg    BYTE PTR [ebx+0x2ce7fba4]
  40fb43:	xor    al,BYTE PTR [ebx-0x2]
  40fb46:	pop    ds
  40fb47:	aas    
  40fb48:	jge    0x40fb48
  40fb4a:	add    ebx,DWORD PTR [edi+ecx*1-0x40]
  40fb4e:	outs   dx,DWORD PTR ds:[esi]
  40fb4f:	dec    ebp
  40fb50:	mov    ebx,0x8ba57c56
  40fb55:	(bad)  
  40fb56:	imul   ecx,esi,0x52
  40fb59:	test   BYTE PTR [edx-0x15],ch
  40fb5c:	push   esp
  40fb5d:	mov    dl,cl
  40fb5f:	inc    edi
  40fb60:	scas   eax,DWORD PTR es:[edi]
  40fb61:	push   esi
  40fb62:	add    BYTE PTR [ebx-0x14],dl
  40fb65:	test   DWORD PTR [ebx+ebp*8-0x738bbc86],0x3bfed46f
  40fb70:	retf   0xc307
  40fb73:	test   al,0x5d
  40fb75:	lods   al,BYTE PTR ds:[esi]
  40fb76:	out    0x1b,eax
  40fb78:	add    BYTE PTR [esi+0x290d2244],bl
  40fb7e:	pop    eax
  40fb7f:	mov    ?,WORD PTR [ebp-0x55]
  40fb82:	out    dx,eax
  40fb83:	sbb    BYTE PTR [eax-0x2c],al
  40fb86:	add    DWORD PTR ds:0x5e3d71e8,ebx
  40fb8c:	mov    eax,ds:0xefd5a69e
  40fb91:	call   0xdd5d530e
  40fb96:	js     0x40fbf7
  40fb98:	sbb    al,0xf1
  40fb9a:	lods   eax,DWORD PTR ds:[esi]
  40fb9b:	push   cs
  40fb9c:	int3   
  40fb9d:	(bad)  
  40fb9e:	sti    
  40fb9f:	fimul  DWORD PTR [ecx]
  40fba1:	push   0x43
  40fba3:	mov    ds:0x9a4269b0,al
  40fba8:	pop    eax
  40fba9:	lods   al,BYTE PTR ds:[esi]
  40fbaa:	pop    edx
  40fbab:	ret    0x6840
  40fbae:	lds    edx,FWORD PTR [edi-0x6a316900]
  40fbb4:	dec    ecx
  40fbb5:	adc    BYTE PTR [eax+0x40],al
  40fbb8:	jne    0x40fb8e
  40fbba:	aad    0x44
  40fbbc:	ja     0x40fbe1
  40fbbe:	cmp    al,0x8
  40fbc0:	mov    ebx,0x31fbd4d0
  40fbc5:	(bad)
  40fbc8:	mov    ebp,DWORD PTR [eax+0x9405a1]
  40fbce:	mov    esi,0x2b468fb9
  40fbd3:	inc    eax
  40fbd4:	xchg   esp,eax
  40fbd5:	aas    
  40fbd6:	xor    ecx,DWORD PTR [esp+edi*2]
  40fbd9:	push   esi
  40fbda:	clc    
  40fbdb:	add    eax,0x18a48394
  40fbe0:	dec    ebp
  40fbe1:	inc    ebx
  40fbe2:	loopne 0x40fbe7
  40fbe4:	mov    esi,0x190a6014
  40fbe9:	(bad)  
  40fbea:	in     al,dx
  40fbeb:	lods   eax,DWORD PTR ds:[esi]
  40fbec:	inc    ebx
  40fbed:	sar    BYTE PTR [ebp+0x19],1
  40fbf0:	adc    BYTE PTR [esi],0x0
  40fbf3:	sub    DWORD PTR [eax+0x4ddc383],ebx
  40fbf9:	(bad)  
  40fbfa:	pop    ss
  40fbfb:	mov    ecx,0xfbf414d6
  40fc00:	push   edi
  40fc01:	inc    eax
  40fc02:	mov    DWORD PTR [edi],ebp
  40fc04:	pop    ebx
  40fc05:	aam    0x8a
  40fc07:	cmp    eax,0x6a0bc51b
  40fc0c:	les    edx,FWORD PTR [edi]
  40fc0e:	push   ebx
  40fc0f:	push   0x50
  40fc11:	dec    edi
  40fc12:	push   ebp
  40fc13:	sahf   
  40fc14:	xchg   esp,eax
  40fc15:	pusha  
  40fc16:	add    cl,ch
  40fc18:	xchg   edi,eax
  40fc19:	ja     0x41942a
  40fc1f:	jb     0x40fbee
  40fc21:	pop    es
  40fc22:	sub    DWORD PTR [ecx],0xffffff9c
  40fc25:	stos   BYTE PTR es:[edi],al
  40fc26:	adc    edi,DWORD PTR [ecx+0x11f3c518]
  40fc2c:	add    BYTE PTR [ebx+0x28],al
  40fc2f:	(bad)  
  40fc30:	(bad)  
  40fc31:	out    0x3e,eax
  40fc33:	adc    al,0xb5
  40fc35:	(bad)  
  40fc36:	sar    bh,0x69
  40fc39:	pop    esp
  40fc3a:	or     eax,DWORD PTR [ebp-0x417b7957]
  40fc40:	jmp    0xc728fcdc
  40fc45:	jmp    0x5ca1fa88
  40fc4a:	aaa    
  40fc4b:	mov    WORD PTR [esp+eax*8],gs
  40fc4e:	repnz cmc 
  40fc50:	sbb    DWORD PTR [ecx],ecx
  40fc52:	mov    ah,0xef
  40fc54:	sar    DWORD PTR [edx-0x5c],0xff
  40fc58:	call   0xe33cc075
  40fc5d:	int    0xb4
  40fc5f:	add    ebx,edx
  40fc61:	(bad)  
  40fc62:	sub    dh,BYTE PTR [ebx+0x62]
  40fc65:	push   esp
  40fc66:	sub    eax,DWORD PTR [edx+0x2b2998e]
  40fc6c:	add    BYTE PTR [edi-0x44c4a0f2],ah
  40fc72:	jns    0x40fca0
  40fc74:	lea    eax,[ebp-0x45eb95ed]
  40fc7a:	js     0x40fc6e
  40fc7c:	push   ebx
  40fc7d:	mov    edx,0xed163c18
  40fc82:	add    al,BYTE PTR [ebx-0x4178063c]
  40fc88:	je     0x40fc72
  40fc8a:	dec    eax
  40fc8b:	jg     0x40fc50
  40fc8d:	mov    dh,0x4
  40fc8f:	add    BYTE PTR [eax],al
  40fc91:	add    BYTE PTR [esi+0x56e270fb],dl
  40fc97:	push   cs
  40fc98:	imul   esi,esi,0x486
  40fc9e:	out    dx,al
  40fc9f:	ja     0x40fc9b
  40fca1:	jne    0x40fc9f
  40fca3:	xor    eax,0x77aa85d0
  40fca8:	das    
  40fca9:	mov    esi,eax
  40fcab:	inc    BYTE PTR [ecx+0x7682b1c0]
  40fcb1:	add    al,0xae
  40fcb3:	(bad)  
  40fcb4:	outs   dx,BYTE PTR ds:[esi]
  40fcb5:	cld    
  40fcb6:	xor    bl,BYTE PTR [edi-0x77]
  40fcb9:	or     BYTE PTR [eax],dh
  40fcbb:	int3   
  40fcbc:	jb     0x40fcd0
  40fcbe:	je     0x40fd0f
  40fcc0:	div    BYTE PTR [esi-0x58]
  40fcc3:	mov    ebx,DWORD PTR [ebx-0x8]
  40fcc6:	xchg   esi,eax
  40fcc7:	fnstcw WORD PTR [edi-0x5]
  40fcca:	std    
  40fccb:	lea    ebx,[ecx+0x0]
  40fcce:	mov    esi,0x36054048
  40fcd3:	add    al,BYTE PTR [eax]
  40fcd5:	add    BYTE PTR [esi-0x27],ah
  40fcd8:	jo     0x40fcaf
  40fcda:	neg    BYTE PTR [edi+0x256db67]
  40fce0:	add    BYTE PTR [eax],al
  40fce2:	call   0x9442d672
  40fce7:	daa    
  40fce8:	add    cl,BYTE PTR [ebp+0x5d2b8bc1]
  40fcee:	or     DWORD PTR [edi+0x35548340],eax
  40fcf4:	sbb    edi,edi
  40fcf6:	add    BYTE PTR [ecx-0x1decd44d],ch
  40fcfc:	scas   al,BYTE PTR es:[edi]
  40fcfd:	inc    eax
  40fcfe:	mov    WORD PTR [ecx-0x4708d429],gs
  40fd04:	daa    
  40fd05:	add    dh,BYTE PTR [edx]
  40fd07:	aam    0x76
  40fd09:	loopne 0x40fd65
  40fd0b:	fucomp st(1)
  40fd0d:	str    WORD PTR [edi]
  40fd10:	ins    DWORD PTR es:[edi],dx
  40fd11:	ds mov eax,es
  40fd14:	sub    al,bh
  40fd16:	addr16 iret 
  40fd18:	sub    BYTE PTR [edx],al
  40fd1a:	add    BYTE PTR [esi+0x27],bh
  40fd1d:	fdivr  st,st(6)
  40fd1f:	mov    DWORD PTR [ebx+0x18],ebx
  40fd22:	inc    eax
  40fd23:	xchg   esp,eax
  40fd24:	cs js  0x40fd6b
  40fd27:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fd28:	stos   BYTE PTR es:[edi],al
  40fd29:	inc    edi
  40fd2a:	or     eax,ebx
  40fd2c:	out    dx,eax
  40fd2d:	sbb    al,0xc0
  40fd2f:	ja     0x40fd9d
  40fd31:	cmp    al,ch
  40fd33:	push   edx
  40fd34:	das    
  40fd35:	add    cl,BYTE PTR [ecx+0x448b2b5a]
  40fd3b:	cwde   
  40fd3c:	xchg   edi,eax
  40fd3d:	aas    
  40fd3e:	je     0x40fccc
  40fd40:	int    0x8a
  40fd42:	inc    ebp
  40fd43:	lea    ebp,[edx+0x56ea0a48]
  40fd49:	adc    eax,0x3e7a230
  40fd4e:	sbb    DWORD PTR [eax+0x33],0xffffff83
  40fd52:	(bad)  
  40fd53:	xchg   ebp,eax
  40fd54:	cmc    
  40fd55:	(bad)  
  40fd56:	out    0x9,eax
  40fd58:	aas    
  40fd59:	aas    
  40fd5a:	inc    BYTE PTR [eax]
  40fd5c:	pop    ds
  40fd5d:	hlt    
  40fd5e:	aas    
  40fd5f:	push   esi
  40fd60:	retf   0x9100
  40fd63:	ficomp DWORD PTR [ecx+0x3d]
  40fd66:	popf   
  40fd67:	test   BYTE PTR [edx+0xa],dl
  40fd6a:	pop    ds
  40fd6b:	jmp    0x40fd29
  40fd6d:	cmp    eax,0x9402b1
  40fd72:	adc    ebx,DWORD PTR [eax]
  40fd74:	cmp    esi,DWORD PTR [ebx-0xae8718c]
  40fd7a:	mov    esp,0x183d2a41
  40fd7f:	inc    ecx
  40fd80:	mov    ah,bh
  40fd82:	inc    bl
  40fd84:	sbb    eax,DWORD PTR [edx+0x40190f24]
  40fd8a:	in     eax,0x96
  40fd8c:	(bad)  
  40fd8d:	test   eax,0x3983e0e2
  40fd92:	out    0xb6,eax
  40fd94:	(bad)  
  40fd95:	cmp    eax,0x451e3fb3
  40fd9a:	inc    eax
  40fd9b:	in     al,dx
  40fd9c:	ja     0x40fd9e
  40fd9e:	jmp    0x9b7dc930
  40fda3:	aas    
  40fda4:	repz test al,0x53
  40fda7:	inc    eax
  40fda8:	ror    BYTE PTR [edx-0x334ccc65],cl
  40fdae:	lods   al,BYTE PTR ds:[esi]
  40fdaf:	add    edx,DWORD PTR [edx+ecx*4+0x3d652a29]
  40fdb6:	std    
  40fdb7:	aas    
  40fdb8:	dec    eax
  40fdb9:	mov    DWORD PTR [esp+eax*4],eax
  40fdbc:	mov    edi,0xd99a0f
  40fdc1:	dec    edx
  40fdc2:	mov    ebp,DWORD PTR [ebx]
  40fdc4:	inc    eax
  40fdc5:	dec    ebx
  40fdc6:	sub    BYTE PTR [eax+0x613c93a3],ah
  40fdcc:	cmp    al,0x1c
  40fdce:	mov    esi,0xb68289d4
  40fdd3:	in     al,dx
  40fdd4:	icebp  
  40fdd5:	cmp    ebp,DWORD PTR [eax]
  40fdd7:	push   edx
  40fdd8:	mov    ebp,eax
  40fdda:	cmp    al,0xff
  40fddc:	popa   
  40fddd:	pop    ebp
  40fdde:	or     al,0x56
  40fde0:	push   ss
  40fde1:	mov    al,0x57
  40fde3:	cld    
  40fde4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fde5:	fwait
  40fde6:	jle    0x40fde5
  40fde8:	in     eax,0x5
  40fdea:	jmp    FWORD PTR [ecx-0x13]
  40fded:	imul   eax,DWORD PTR [esi+0x44],0xf58597fa
  40fdf4:	std    
  40fdf5:	push   ebx
  40fdf6:	lea    eax,[esi-0xe]
  40fdf9:	and    ch,al
  40fdfb:	mul    DWORD PTR [eax-0x13]
  40fdfe:	aaa    
  40fdff:	push   cs
  40fe00:	ss pop ebx
  40fe02:	or     DWORD PTR [ebx-0x12f744c],ecx
  40fe08:	aam    0xcf
  40fe0a:	test   eax,0x2891c2ff
  40fe0f:	sub    eax,0x8b0095e2
  40fe14:	cmp    DWORD PTR ds:0x1edd7336,ecx
  40fe1a:	lds    eax,FWORD PTR [edi]
  40fe1c:	(bad)  
  40fe1d:	call   0x9c82dba8
  40fe22:	sub    eax,0x1300e8ff
  40fe27:	jl     0x40fe9c
  40fe29:	in     eax,0x59
  40fe2b:	les    edx,FWORD PTR [edx]
  40fe2d:	call   0xeec43b1
  40fe32:	add    DWORD PTR [esi-0x33850284],0xfffffffb
  40fe39:	je     0x40fe97
  40fe3b:	shl    bh,cl
  40fe3d:	pop    ds
  40fe3e:	sub    al,0x3a
  40fe40:	(bad)  
  40fe41:	arpl   bp,cx
  40fe43:	push   cs
  40fe44:	pop    edi
  40fe45:	inc    edi
  40fe46:	mov    edi,0x97edc148
  40fe4b:	aad    0x8a
  40fe4d:	lds    esp,FWORD PTR [eax-0x30]
  40fe50:	push   edx
  40fe51:	aaa    
  40fe52:	imul   eax,DWORD PTR [esi-0x79a2ff87],0xfffffff5
  40fe59:	not    DWORD PTR [ebx]
  40fe5b:	push   ss
  40fe5c:	test   BYTE PTR [ebp-0xfdced41],0xed
  40fe63:	jge    0x40fe66
  40fe65:	xor    ah,dh
  40fe67:	leave  
  40fe68:	or     eax,0xe6c07894
  40fe6d:	out    dx,eax
  40fe6e:	or     eax,0xae660004
  40fe73:	imul   DWORD PTR [esi]
  40fe75:	jae    0x40fea0
  40fe77:	xor    DWORD PTR [esi-0x2767715],edi
  40fe7d:	jne    0x40feb8
  40fe7f:	cs fldpi 
  40fe82:	cs nop
  40fe84:	pop    ebp
  40fe85:	sub    al,0xa6
  40fe87:	leave  
  40fe88:	out    0xd3,al
  40fe8a:	add    ch,cl
  40fe8c:	add    al,0x0
  40fe8e:	cvtpi2ps xmm6,mm7
  40fe91:	push   ecx
  40fe92:	mov    edi,DWORD PTR [edx+0x52c560e7]
  40fe98:	cli    
  40fe99:	add    eax,0x33
  40fe9c:	(bad)  
  40fe9d:	std    
  40fe9e:	jne    0x40fe41
  40fea0:	push   edx
  40fea1:	push   ecx
  40fea2:	call   0x3ebe7e
  40fea7:	ins    DWORD PTR es:[edi],dx
  40fea8:	inc    eax
  40fea9:	cli    
  40feaa:	add    DWORD PTR [eax],ebp
  40feac:	and    DWORD PTR [eax-0x417d43ba],ecx
  40feb2:	je     0x40fe7a
  40feb4:	cld    
  40feb5:	(bad)  
  40feb6:	push   edi
  40feb7:	ret    0xbeb4
  40feba:	push   ebx
  40febb:	or     eax,0xd044490
  40fec0:	or     dh,BYTE PTR [esi-0x76b151ba]
  40fec6:	inc    ebp
  40fec7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fec8:	sti    
  40fec9:	cs call 0x3fead0
  40fecf:	xchg   esp,eax
  40fed0:	xchg   edi,eax
  40fed1:	add    bl,BYTE PTR [edi-0x1e]
  40fed4:	out    dx,al
  40fed5:	dec    edx
  40fed6:	rcl    DWORD PTR [eax-0x7f752ad9],0xa9
  40fedd:	das    
  40fede:	stos   DWORD PTR es:[edi],eax
  40fedf:	xchg   edi,eax
  40fee0:	daa    
  40fee1:	add    dl,BYTE PTR [ebx-0x36]
  40fee4:	adc    cl,BYTE PTR [edi+0x2bf86444]
  40feea:	cdq    
  40feeb:	mov    dh,0x27
  40feed:	add    cl,BYTE PTR [ecx-0x797c2f00]
  40fef3:	mov    edi,0xbff022c9
  40fef8:	sub    eax,0x94000642
  40fefd:	scas   al,BYTE PTR es:[edi]
  40fefe:	mov    dh,0xef
  40ff00:	adc    DWORD PTR [edx+0x620f0db7],edi
  40ff06:	sub    ebx,esp
  40ff08:	out    0xa2,eax
  40ff0a:	cmp    al,0x88
  40ff0c:	pop    ecx
  40ff0d:	ret    
  40ff0e:	xchg   BYTE PTR [edi+0x743b1d81],bh
  40ff14:	lock mov edi,0xc2fbb402
  40ff1a:	sub    cl,bl
  40ff1c:	pop    ss
  40ff1d:	inc    ebp
  40ff1e:	pop    esi
  40ff1f:	jmp    FWORD PTR [ebx+0x74]
  40ff22:	adc    al,BYTE PTR [eax]
  40ff24:	push   0x95fd7f92
  40ff29:	cdq    
  40ff2a:	ror    BYTE PTR [edx+0x5e8d2f51],1
  40ff30:	lods   al,BYTE PTR ds:[esi]
  40ff31:	jbe    0x40ff6e
  40ff33:	adc    al,0xb0
  40ff35:	xor    eax,0x8d16ffc2
  40ff3a:	cmp    bh,bh
  40ff3c:	sbb    BYTE PTR [edx],dh
  40ff3e:	mov    dh,0x32
  40ff40:	pop    ds
  40ff41:	mov    ebp,0x23db822e
  40ff46:	jg     0x40ff0d
  40ff48:	mov    eax,DWORD PTR [eax]
  40ff4a:	push   ebx
  40ff4b:	sbb    dl,ch
  40ff4d:	rcr    ebp,1
  40ff4f:	push   ss
  40ff50:	enter  0x2912,0x4
  40ff54:	add    BYTE PTR [edi],dl
  40ff56:	inc    esp
  40ff57:	fadd   QWORD PTR [esi+0x3cd9b43b]
  40ff5d:	fdivr  DWORD PTR [eax]
  40ff5f:	jno    0x40ff27
  40ff61:	arpl   WORD PTR [edi-0x52],di
  40ff64:	pop    eax
  40ff65:	xchg   esp,eax
  40ff66:	add    cl,ch
  40ff68:	clc    
  40ff69:	shl    BYTE PTR [eax],1
  40ff6b:	sbb    bl,BYTE PTR [esi+0x3e]
  40ff6e:	add    dh,BYTE PTR [edx-0x3a]
  40ff71:	inc    ebx
  40ff72:	xchg   DWORD PTR [ebx],ebp
  40ff74:	pusha  
  40ff75:	out    0x39,al
  40ff77:	repz xor esp,DWORD PTR [ebp-0x57771740]
  40ff7e:	xor    BYTE PTR [ecx-0x5b5739a8],bh
  40ff84:	add    edx,DWORD PTR [eax+eax*1-0x772f70e6]
  40ff8b:	push   eax
  40ff8c:	xchg   ebx,eax
  40ff8d:	jecxz  0x40ff8d
  40ff8f:	call   0x5f3e4b84
  40ff94:	sti    
  40ff95:	pop    eax
  40ff96:	adc    BYTE PTR [edi],ah
  40ff98:	(bad)  
  40ff99:	or     al,0x4
  40ff9b:	not    BYTE PTR [esi+0x3c9b8833]
  40ffa1:	sbb    al,0xb3
  40ffa3:	sbb    BYTE PTR [edx+0xca82040],cl
  40ffa9:	sub    eax,DWORD PTR [edx+0x6f]
  40ffac:	(bad)  
  40ffad:	jmp    0x40ffa3
  40ffaf:	sub    DWORD PTR [edx+edx*1],ecx
  40ffb2:	mov    ah,0xe9
  40ffb4:	add    edx,DWORD PTR [ebp+eax*4-0x69ffa05d]
  40ffbb:	cmp    eax,0xb2aa51b9
  40ffc0:	clc    
  40ffc1:	out    dx,eax
  40ffc2:	jmp    0x40ff69
  40ffc4:	(bad)  
  40ffc5:	out    dx,al
  40ffc6:	stc    
  40ffc7:	xchg   DWORD PTR [ebp+esi*1-0x42],eax
  40ffcb:	mov    edi,DWORD PTR [edi+ebx*4-0x35]
  40ffcf:	push   0x65
  40ffd1:	xchg   edx,eax
  40ffd2:	xor    DWORD PTR [edi],0xffffff8a
  40ffd5:	(bad)  [ecx]
  40ffd7:	cs (bad) 
  40ffda:	xchg   edi,eax
  40ffdb:	add    BYTE PTR [ebx],al
  40ffdd:	cmp    al,0xbc
  40ffdf:	mov    BYTE PTR [ebp+esi*4-0x61],dl
  40ffe3:	outs   dx,DWORD PTR ds:[esi]
  40ffe4:	dec    ebp
  40ffe5:	push   cs
  40ffe6:	adc    DWORD PTR [ebp+0x475b47d3],ebp
  40ffec:	push   cs
  40ffed:	ins    BYTE PTR es:[edi],dx
  40ffee:	mov    dh,0x37
  40fff0:	(bad)  
  40fff1:	jmp    0xd0bef8eb
  40fff6:	mov    ?,WORD PTR [ebp-0x65]
  40fff9:	jmp    0x2ccc0095
  40fffe:	je     0x40ffb7
  410000:	cmp    ebx,ecx
  410002:	xchg   edi,eax
  410003:	pop    es
  410004:	test   DWORD PTR [esi],eax
  410006:	call   0x110:0x94a70000
  41000d:	je     0x40ffe4
  41000f:	pop    es
  410010:	push   eax
  410011:	jo     0x410060
  410013:	xor    al,0xe7
  410015:	fnstsw WORD PTR [eax]
  410017:	cmp    dh,bh
  410019:	bound  ebx,QWORD PTR [eax+0x7c]
  41001c:	fidivr DWORD PTR [ebp+0x7cf93b00]
  410022:	fldenv ds:0x8f2f82a1
  410028:	mov    DWORD PTR [ecx+eax*2+0xd],esi
  41002c:	mov    bl,0xe
  41002e:	xchg   ebx,eax
  41002f:	mov    ds:0xe6117437,eax
  410034:	ss adc al,0xd5
  410037:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410038:	sar    bh,0x69
  41003b:	push   esp
  41003c:	or     eax,DWORD PTR [ebp+0xc707d00]
  410042:	inc    edi
  410043:	cmp    al,0xc2
  410045:	fld    DWORD PTR [ecx]
  410047:	lods   eax,DWORD PTR ds:[esi]
  410048:	add    edi,DWORD PTR [ebx]
  41004a:	jge    0x410009
  41004c:	ins    DWORD PTR es:[edi],dx
  41004d:	fucomip st,st(3)
  41004f:	mov    dl,0x65
  410051:	std    
  410052:	fstp   TBYTE PTR [ebx+eax*1+0x0]
  410056:	add    esp,DWORD PTR [esi+0x36]
  410059:	stc    
  41005a:	jb     0x40ffe0
  41005c:	xchg   BYTE PTR [ebx+0x10],al
  41005f:	les    edi,FWORD PTR [ecx+ebx*8+0x3037d01]
  410066:	ret    
  410067:	clc    
  410068:	mov    bl,cl
  41006a:	add    DWORD PTR [ebp+0x3],ebp
  41006d:	push   edi
  41006e:	call   0x3eae9d
  410073:	es std 
  410075:	xor    eax,eax
  410077:	mov    cl,0xc3
  410079:	jb     0x410087
  41007b:	or     cl,BYTE PTR [eax+0xe]
  41007e:	mov    eax,DWORD PTR [eax+0xe8530c]
  410084:	lea    ebx,[ebp-0x2]
  410087:	(bad)  
  410088:	jle    0x41006e
  41008a:	xchg   edx,eax
  41008b:	mov    dl,0xaa
  41008d:	cli    
  41008e:	mov    esi,DWORD PTR [ebp+0x71]
  410091:	jmp    0x410109
  410093:	pop    ecx
  410094:	std    
  410095:	add    ch,cl
  410097:	loopne 0x410085
  410099:	add    al,BYTE PTR [eax]
  41009b:	xor    edi,DWORD PTR [edi+0x30f7c186]
  4100a1:	sar    DWORD PTR [ecx],cl
  4100a3:	push   ebp
  4100a4:	lods   eax,DWORD PTR ds:[esi]
  4100a5:	outs   dx,BYTE PTR ds:[esi]
  4100a6:	sub    al,0x66
  4100a8:	out    0xc9,al
  4100aa:	or     eax,0xfffcb684
  4100af:	jmp    DWORD PTR [edi]
  4100b1:	std    
  4100b2:	push   edi
  4100b3:	inc    sp
  4100b5:	inc    eax
  4100b6:	mov    dl,0xf
  4100b8:	xchg   esp,eax
  4100b9:	xlat   BYTE PTR ds:[ebx]
  4100ba:	shl    BYTE PTR [edi],0x32
  4100bd:	mov    ds:0xe83a26c8,al
  4100c2:	and    eax,DWORD PTR [edi]
  4100c4:	xor    dh,BYTE PTR [edx]
  4100c6:	inc    ebx
  4100c7:	gs or  eax,0x528c7064
  4100cd:	dec    edx
  4100ce:	lods   al,BYTE PTR ds:[esi]
  4100cf:	add    esp,esp
  4100d1:	lods   al,BYTE PTR ds:[esi]
  4100d2:	mov    esi,0xa2057fb7
  4100d7:	cmp    BYTE PTR [edx],al
  4100d9:	adc    DWORD PTR [ecx],ecx
  4100db:	test   BYTE PTR [eax],bl
  4100dd:	sub    DWORD PTR [edx],eax
  4100df:	add    dh,bh
  4100e1:	push   esi
  4100e2:	fisub  DWORD PTR [ebp+0x1d]
  4100e5:	(bad)  [edi+0xe]
  4100e8:	add    BYTE PTR [edx],ch
  4100ea:	out    0xfd,al
  4100ec:	gs movlhps xmm7,xmm3
  4100f0:	gs push ebp
  4100f2:	mov    DWORD PTR [ebx],ecx
  4100f4:	data16 lahf 
  4100f6:	push   0xd5d988a1
  4100fb:	xchg   BYTE PTR [ebp+0x6d],al
  4100fe:	add    DWORD PTR [eax+edx*2],edx
  410101:	and    ebp,esp
  410103:	ja     0x410154
  410105:	sub    ecx,DWORD PTR [ebp-0xe]
  410108:	adc    eax,0xb70727d4
  41010d:	shr    ebx,1
  41010f:	test   bl,al
  410111:	mov    al,ds:0x46e80151
  410116:	jae    0x41011a
  410118:	add    BYTE PTR [ebx+0x94f4395],dl
  41011e:	popf   
  41011f:	(bad)  
  410121:	repz mov esi,0x28a0492b
  410127:	add    cl,BYTE PTR [ebx+0x2f371f59]
  41012d:	or     DWORD PTR [esi+0x976a07],edx
  410133:	ret    0x886
  410136:	fstp   DWORD PTR [ecx+edi*1]
  410139:	ret    0xa387
  41013c:	sub    esi,DWORD PTR [ebx-0x6bfd2b73]
  410142:	xor    eax,0xbc190f7b
  410147:	xor    al,0xac
  410149:	or     edi,ebx
  41014b:	call   0x46500153
  410150:	add    dh,bh
  410152:	fild   WORD PTR [eax]
  410154:	jmp    0x20ed4cd8
  410159:	cmp    DWORD PTR [eax],ecx
  41015b:	or     eax,0x100f396
  410160:	jmp    0x2125ff35
  410165:	xchg   eax,eax
  410167:	mov    BYTE PTR [ebx-0x7a],ch
  41016a:	retf   
  41016b:	xor    al,0xb5
  41016d:	cmp    BYTE PTR [ebx-0x64],dh
  410170:	sbb    eax,0xa87c9404
  410175:	scas   eax,DWORD PTR es:[edi]
  410176:	lods   eax,DWORD PTR ds:[esi]
  410177:	xor    eax,0xc30f1013
  41017c:	in     al,0x8c
  41017e:	xchg   esp,eax
  41017f:	int    0x5b
  410181:	mov    cs,ebx
  410183:	xor    al,0x85
  410185:	cmp    ch,al
  410187:	xor    eax,0x4e37fd8
  41018c:	ins    BYTE PTR es:[edi],dx
  41018d:	add    al,0x95
  41018f:	add    cl,ch
  410191:	mov    WORD PTR [eax-0x85116d4],cs
  410197:	jg     0x4101b7
  410199:	add    al,0x93
  41019b:	jnp    0x4101d9
  41019d:	add    edx,DWORD PTR [eax+eax*1-0xfc16bf]
  4101a4:	call   0x65462d28
  4101a9:	inc    eax
  4101aa:	jecxz  0x4101e0
  4101ac:	(bad)  
  4101ad:	call   0xfb38bdc4
  4101b2:	add    BYTE PTR [ebp+eax*8-0x7869103b],cl
  4101b9:	jl     0x4101d0
  4101bb:	outs   dx,DWORD PTR ds:[esi]
  4101bc:	dec    ebx
  4101bd:	pop    esi
  4101be:	jmp    0xd3188b5a
  4101c3:	dec    esp
  4101c4:	mov    cl,0x70
  4101c6:	shl    dl,0x2c
  4101c9:	jne    0x410152
  4101cb:	adc    BYTE PTR [edx],dh
  4101cd:	imul   ebx,ebp,0x5ce7ac5c
  4101d3:	push   ebp
  4101d4:	add    edx,DWORD PTR [eax-0x1a]
  4101d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4101d8:	hlt    
  4101d9:	adc    eax,0xc37f9829
  4101de:	in     eax,0x14
  4101e0:	je     0x410255
  4101e2:	fbstp  TBYTE PTR [edx]
  4101e4:	add    ebp,0x91a2
  4101ea:	add    bl,BYTE PTR ds:0xaf97712c
  4101f0:	repz std 
  4101f2:	daa    
  4101f3:	mov    al,ds:0x96f17d80
  4101f8:	stos   BYTE PTR es:[edi],al
  4101f9:	sub    eax,0x568b10
  4101fe:	jmp    0xd33c019a
  410203:	outs   dx,BYTE PTR ds:[esi]
  410204:	mov    cl,0x18
  410206:	jb     0x41025d
  410208:	sub    al,0x68
  41020a:	test   eax,0xe90000bf
  41020f:	xchg   esi,eax
  410210:	aas    
  410211:	mov    WORD PTR [esi+0x6f],ds
  410214:	add    BYTE PTR [eax],al
  410216:	jmp    0x4b5cdc1b
  41021b:	fwait
  41021c:	retf   
  41021d:	xor    ch,dl
  41021f:	jmp    0x410226
  410221:	je     0x4101a6
  410223:	sub    DWORD PTR [edi+edi*8],esp
  410226:	inc    BYTE PTR [eax]
  410228:	and    al,bh
  41022a:	mov    DWORD PTR [ebp+0x55],eax
  41022d:	dec    edi
  41022e:	out    0xad,al
  410230:	add    al,BYTE PTR [eax]
  410232:	add    BYTE PTR [ebx+0x55],dl
  410235:	in     eax,dx
  410236:	scas   al,BYTE PTR es:[edi]
  410237:	push   DWORD PTR [edx-0x77]
  41023a:	jae    0x410230
  41023c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41023d:	rcl    DWORD PTR [ebp+0x0],1
  410240:	lods   eax,DWORD PTR ds:[esi]
  410241:	xchg   BYTE PTR [ebx+0x8],dh
  410244:	push   eax
  410245:	push   0x16
  410247:	push   edi
  410248:	xchg   edx,eax
  410249:	adc    esp,ebp
  41024b:	adc    ch,ch
  41024d:	jmp    FWORD PTR [ecx+0x14]
  410250:	mov    ds:0xbb83e670,al
  410255:	add    BYTE PTR [esi-0x1],dl
  410258:	mov    BYTE PTR [ebx],ch
  41025a:	adc    al,0x40
  41025c:	ins    DWORD PTR es:[edi],dx
  41025d:	jle    0x410221
  41025f:	or     al,0xe8
  410261:	mov    edi,0x10d70d73
  410266:	push   eax
  410267:	push   esi
  410268:	push   edx
  410269:	adc    BYTE PTR [esi+edx*1],dh
  41026c:	lods   eax,DWORD PTR ds:[esi]
  41026d:	cld    
  41026e:	add    ah,0x71
  410271:	inc    edx
  410272:	std    
  410273:	adc    eax,0x40110d
  410278:	shl    BYTE PTR [eax+0x2200fc56],0xea
  41027f:	out    0x43,al
  410281:	pop    esi
  410282:	cld    
  410283:	dec    DWORD PTR [edx-0x76be2380]
  410289:	jo     0x410267
  41028b:	cmp    DWORD PTR [ebp-0xb],ebx
  41028e:	stc    
  41028f:	xor    DWORD PTR [eax],0xe9fdeaa0
  410295:	(bad)  
  410296:	(bad)  
  410297:	(bad)  
  410298:	inc    DWORD PTR [eax+0x56330e40]
  41029e:	dec    edi
  41029f:	xchg   DWORD PTR [ebp-0x6c],ebx
  4102a2:	sbb    eax,0x2952f12a
  4102a7:	add    cl,BYTE PTR [ecx-0x3d06aaaf]
  4102ad:	push   0x845cfb70
  4102b2:	jae    0x4102aa
  4102b4:	mov    WORD PTR [edx+0x52],ss
  4102b7:	mov    edi,ebp
  4102b9:	ds xor eax,0x6a934587
  4102bf:	sar    dh,cl
  4102c1:	mov    eax,ds:0x94400c4d
  4102c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4102c7:	or     edx,DWORD PTR ds:[ecx]
  4102ca:	jmp    0xa898107d
  4102cf:	cmp    al,0xda
  4102d1:	xchg   ebp,eax
  4102d2:	sub    DWORD PTR [edx],eax
  4102d4:	cmp    esi,ecx
  4102d6:	push   edi
  4102d7:	mov    al,0xdf
  4102d9:	jg     0x410310
  4102db:	cmp    BYTE PTR [ebp-0x74],0x27
  4102df:	scas   al,BYTE PTR es:[edi]
  4102e0:	push   cs
  4102e1:	add    BYTE PTR [ebx-0x2b],bh
  4102e4:	jnp    0x457d3ac3
  4102ea:	pushf  
  4102eb:	daa    
  4102ec:	sub    dh,cl
  4102ee:	ret    0x227
  4102f1:	jmp    ecx
  4102f3:	push   ebx
  4102f4:	sub    dh,BYTE PTR [ebx]
  4102f6:	add    al,0x63
  4102f8:	xor    al,0x8c
  4102fa:	shr    DWORD PTR [ebx],0x2a
  4102fd:	pop    ss
  4102fe:	jmp    0x410327
  410300:	add    cl,BYTE PTR [ebx+0x76851fb9]
  410306:	mov    ecx,gs
  410308:	xor    al,0x14
  41030a:	cmp    BYTE PTR [esi-0x3e],dl
  41030d:	dec    DWORD PTR [esi]
  41030f:	fisttp QWORD PTR [edi+0x69]
  410312:	and    BYTE PTR [esi-0x599bf1bd],0x3c
  410319:	add    esp,DWORD PTR [ebx+0x0]
  41031c:	pinsrw xmm1,WORD PTR [edx],0xa9
  410321:	add    edx,DWORD PTR [edi]
  410323:	cmp    eax,0xbf2cde4
  410328:	pop    ecx
  410329:	adc    dl,BYTE PTR [eax+eax*1+0x74]
  41032d:	outs   dx,DWORD PTR ds:[esi]
  41032e:	dec    ebx
  41032f:	xor    al,0x3d
  410331:	xor    eax,0x335bbd1
  410336:	mov    esp,0x9402fa81
  41033b:	xor    DWORD PTR [ebx+0x4d25bb27],ebx
  410341:	xor    eax,0x1f9b31ba
  410346:	add    BYTE PTR [ebx-0x55cac2e3],bh
  41034c:	xchg   BYTE PTR [ebx-0x5e2dbdcc],ch
  410352:	dec    edx
  410353:	aad    0x10
  410355:	jmp    0x67652228
  41035a:	sub    bh,dl
  41035c:	(bad)  
  41035d:	call   0x360bea65
  410362:	xchg   DWORD PTR [eax+0x40],eax
  410365:	shl    DWORD PTR [edx+esi*2],cl
  410368:	sub    BYTE PTR [esi+ebp*1+0x6b],bl
  41036c:	xor    ecx,edi
  41036e:	pop    eax
  41036f:	adc    BYTE PTR [ebx-0x2cf32c88],bh
  410375:	mov    eax,0x5f24f08a
  41037a:	(bad)  
  41037b:	inc    edi
  41037c:	xchg   DWORD PTR [ebx+0x3c],eax
  41037f:	or     al,0xd3
  410381:	pushf  
  410382:	sub    ebx,DWORD PTR [edi]
  410384:	(bad)  
  410385:	call   0x2c38bd8d
  41038a:	je     0x410333
  41038c:	lock jae 0x41034d
  41038f:	repz iret 
  410391:	imul   edi,DWORD PTR [esi-0x7f002fd9],0xfffffffb
  410398:	add    eax,0x718be901
  41039d:	jae    0x4103a5
  41039f:	leave  
  4103a0:	lods   al,BYTE PTR ds:[esi]
  4103a1:	sti    
  4103a2:	pop    esi
  4103a3:	sub    ch,BYTE PTR ds:0x317e61e7
  4103a9:	dec    BYTE PTR [esi+0x0]
  4103ac:	cmp    ch,BYTE PTR ds:0x19a7ac88
  4103b2:	jp     0x410342
  4103b4:	mov    al,ds:0x83948832
  4103b9:	mov    BYTE PTR [ecx+esi*1+0x1e],bl
  4103bd:	aam    0xfb
  4103bf:	je     0x410403
  4103c1:	cmp    eax,0xc1801efc
  4103c6:	mov    WORD PTR [ebx+eax*4-0x62ef183f],gs
  4103cd:	(bad)  
  4103ce:	jmp    FWORD PTR [edi+edx*2-0x53]
  4103d2:	push   ds
  4103d3:	(bad)  
  4103d4:	jmp    0xc3be020d
  4103d9:	daa    
  4103da:	push   esp
  4103db:	inc    eax
  4103dc:	xchg   edi,eax
  4103dd:	add    bh,bh
  4103df:	pop    esp
  4103e0:	mov    esp,0x98cd4478
  4103e5:	(bad)  
  4103e6:	scas   al,BYTE PTR es:[edi]
  4103e7:	(bad)  
  4103e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4103e9:	js     0x410447
  4103eb:	aad    0xe9
  4103ed:	int3   
  4103ee:	div    DWORD PTR [eax+0x45]
  4103f1:	sub    al,0xfe
  4103f3:	xor    al,0x9c
  4103f5:	daa    
  4103f6:	xchg   BYTE PTR ss:[edi+0x14d8692e],al
  4103fd:	lods   eax,DWORD PTR ds:[esi]
  4103fe:	fild   DWORD PTR [ecx-0x60]
  410401:	fild   WORD PTR ds:0x4c7b97e8
  410407:	test   DWORD PTR [ebx+0x3b],eax
  41040a:	mov    bh,0x25
  41040c:	in     eax,dx
  41040d:	out    dx,eax
  41040e:	(bad)  
  41040f:	inc    DWORD PTR [eax]
  410411:	sub    cl,BYTE PTR [eax-0x3a]
  410414:	cmp    DWORD PTR [eax-0xc],edi
  410417:	dec    edi
  410418:	xadd   BYTE PTR [ecx],bh
  41041b:	out    dx,al
  41041c:	push   eax
  41041d:	jp     0x4103c8
  41041f:	cmp    bh,dh
  410421:	jp     0x410416
  410423:	mov    edi,eax
  410425:	cmp    eax,0x2ee84381
  41042a:	push   esp
  41042b:	out    0xbb,al
  41042d:	push   ebp
  41042e:	repz std 
  410430:	xor    DWORD PTR [ecx-0x628a0104],0xffffffaf
  410437:	out    dx,al
  410438:	call   0x3ea6d0
  41043d:	jp     0x4104a8
  41043f:	jmp    0xa2ff:0xfda2abe8
  410446:	rcr    BYTE PTR [ecx],cl
  410448:	not    BYTE PTR [edx-0x6a8ade36]
  41044e:	sahf   
  41044f:	in     al,dx
  410450:	add    DWORD PTR [ebp+0x28c68b03],ebp
  410456:	cmp    DWORD PTR [esi-0x790d7503],0x736d3c19
  410460:	cli    
  410461:	ficom  DWORD PTR [edx+0x59]
  410464:	leave  
  410465:	cs dec eax
  410467:	mov    esp,ebp
  410469:	(bad)  
  41046a:	out    0xf6,eax
  41046c:	sub    DWORD PTR [ecx],0x6dfffe97
  410472:	push   esi
  410473:	mov    ecx,ebx
  410475:	add    dh,ah
  410477:	push   esi
  410478:	add    dl,BYTE PTR [esi-0x4e]
  41047b:	jns    0x41044d
  41047d:	je     0x4104df
  41047f:	bnd jae 0x410492
  410482:	mov    BYTE PTR [eax+0x6],0xff
  410486:	mov    al,ds:0x94056a00
  41048b:	icebp  
  41048c:	sbb    edx,DWORD PTR [eax+ebx*8+0x19]
  410490:	add    al,BYTE PTR [esp+edx*2-0x7b9657d3]
  410497:	pushf  
  410498:	scas   al,BYTE PTR es:[edi]
  410499:	and    ebp,DWORD PTR [eax-0x6e68e3ef]
  41049f:	sbb    BYTE PTR [edx],al
  4104a1:	inc    DWORD PTR [edi-0x4f8c80cf]
  4104a7:	sub    eax,0xc1987231
  4104ac:	(bad)  
  4104ad:	enter  0xbdeb,0x7d
  4104b1:	(bad)  
  4104b2:	or     eax,0x9493e69d
  4104b7:	sbb    DWORD PTR [edx],eax
  4104b9:	call   0xfe72fbf0
  4104be:	pop    ds
  4104bf:	jmp    0x2d89fa4b
  4104c4:	fmul   DWORD PTR [edx+0x437f68d3]
  4104ca:	js     0x410505
  4104cc:	shl    bh,cl
  4104ce:	into   
  4104cf:	fbstp  TBYTE PTR [ecx]
  4104d1:	dec    BYTE PTR [edx+0x11]
  4104d4:	shr    BYTE PTR [ebp+0x437e2d9b],1
  4104da:	add    BYTE PTR [eax+0x1fed24f],bh
  4104e0:	dec    eax
  4104e1:	xor    DWORD PTR [eax+edx*4+0x26],esi
  4104e5:	mov    dh,0x7
  4104e7:	jnp    0x4104b4
  4104e9:	sti    
  4104ea:	out    0x92,eax
  4104ec:	out    0x3,eax
  4104ee:	add    BYTE PTR [ecx],bl
  4104f0:	aam    0xe7
  4104f2:	pop    ss
  4104f3:	push   cs
  4104f4:	pusha  
  4104f5:	sbb    ecx,DWORD PTR [edx-0x76cf90b3]
  4104fb:	push   edi
  4104fc:	pop    ss
  4104fd:	rcr    BYTE PTR [edx+0x1f],cl
  410500:	inc    ebp
  410501:	into   
  410502:	rcl    DWORD PTR [eax+0xed6e900],0x1d
  410509:	imul   esp,DWORD PTR [eax],0x7d3dd68f
  41050f:	cmp    ebx,DWORD PTR [ebx+0x24d87eec]
  410515:	sbb    dl,bl
  410517:	lods   eax,DWORD PTR ds:[esi]
  410518:	sub    eax,0x141230b9
  41051d:	add    eax,0x64005416
  410522:	inc    esp
  410523:	xchg   eax,esp
  410525:	scas   eax,DWORD PTR es:[di]
  410527:	pop    es
  410528:	add    ecx,edi
  41052a:	add    edx,DWORD PTR [ebx+esi*4+0x285038fd]
  410531:	out    0x2,eax
  410533:	xchg   esp,eax
  410534:	add    BYTE PTR [ecx+eax*1+0x7d44b3af],bh
  41053b:	pop    eax
  41053c:	xor    cl,dh
  41053e:	dec    ecx
  41053f:	add    BYTE PTR [ecx+0x4],al
  410542:	add    cl,BYTE PTR [edx+0xe]
  410545:	sub    DWORD PTR [ecx+0x49],esi
  410548:	pop    edx
  410549:	into   
  41054a:	das    
  41054b:	inc    ebp
  41054c:	dec    eax
  41054d:	jns    0x410553
  41054f:	test   DWORD PTR [edi-0x560b4924],edi
  410555:	jns    0x410580
  410557:	jnp    0x410579
  410559:	sub    BYTE PTR [eax],dl
  41055b:	pop    esp
  41055c:	xchg   edx,eax
  41055d:	sub    eax,0xe8384f5
  410562:	fiadd  WORD PTR [ebp+0x3e90089]
  410568:	or     ebx,eax
  41056a:	(bad)  
  41056c:	std    
  41056d:	rol    BYTE PTR [edx+0x12],0xc7
  410571:	call   0xc3da:0xa48830cd
  410578:	pop    ebx
  410579:	test   BYTE PTR [eax-0xb4e800],ch
  41057f:	call   0xaab061b
  410584:	ret    
  410585:	(bad)  
  410586:	rcl    DWORD PTR [ebx],cl
  410588:	and    BYTE PTR [ebp+0x132bf4fe],bh
  41058e:	inc    eax
  41058f:	jmp    0x374c46a4
  410594:	add    cl,BYTE PTR [ebx]
  410596:	lea    ebp,[esp+edi*4]
  410599:	mov    ebp,0x2ec51352
  41059e:	adc    al,0x1
  4105a0:	mov    ds:0x63ffc0,al
  4105a5:	push   edi
  4105a6:	inc    BYTE PTR [ebx+0x978b]
  4105ac:	mov    dh,0x72
  4105ae:	lods   al,BYTE PTR ds:[esi]
  4105af:	sar    DWORD PTR [edi+0x424f4668],cl
  4105b5:	out    0x1,eax
  4105b7:	lock push 0xffffffa5
  4105ba:	or     ecx,DWORD PTR [edi]
  4105bc:	push   bx
  4105be:	sub    eax,0xfe49e9fe
  4105c3:	jg     0x4105f5
  4105c5:	sahf   
  4105c6:	mov    cl,0x4
  4105c8:	imul   ebp,DWORD PTR [esi+0x25],0x3518ec74
  4105cf:	add    al,0x9c
  4105d1:	scas   eax,DWORD PTR es:[edi]
  4105d2:	jns    0x410596
  4105d4:	ret    0xf8da
  4105d7:	add    BYTE PTR [esi+0x69ff9a96],ch
  4105dd:	lds    eax,FWORD PTR [ebx+esi*2]
  4105e0:	fmul   DWORD PTR [edx]
  4105e2:	test   al,0x34
  4105e4:	adc    eax,0x4794245c
  4105e9:	xchg   esi,eax
  4105ea:	add    BYTE PTR [ebx-0x3a4b3c1f],al
  4105f0:	ret    0x775f
  4105f3:	ret    0x4d02
  4105f6:	clc    
  4105f7:	mov    WORD PTR [eax],es
  4105f9:	sar    ecx,cl
  4105fb:	sub    al,0x38
  4105fe:	lods   eax,DWORD PTR ds:[esi]
  4105ff:	inc    edx
  410600:	xor    eax,0x458b5428
  410605:	sub    DWORD PTR [ebp-0x3],edx
  410608:	jne    0x41060a
  41060a:	inc    ecx
  41060b:	mov    BYTE PTR [edx+0x35],0xe9
  41060f:	or     eax,0xea9358a
  410614:	inc    eax
  410615:	add    BYTE PTR [edi-0x57290225],dl
  41061b:	les    esi,FWORD PTR [edx+0x31]
  41061e:	xchg   BYTE PTR [ecx],bh
  410620:	push   es
  410621:	sub    edi,DWORD PTR [esi]
  410623:	and    dh,0x5
  410626:	outs   dx,BYTE PTR ds:[esi]
  410627:	jno    0x410637
  410629:	add    BYTE PTR [ebx+0x64e9d239],ch
  41062f:	cmp    ebx,edx
  410631:	je     0x410628
  410633:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410634:	push   ebx
  410635:	or     al,0x76
  410637:	out    0xfd,eax
  410639:	push   ebp
  41063a:	mov    ebp,0xb869fe89
  41063f:	add    BYTE PTR [ebx-0x2c],0x2d
  410643:	dec    edi
  410644:	push   0x83d272ff
  410649:	rcr    BYTE PTR [ecx],0xff
  41064c:	mov    BYTE PTR [ebp+0x75],bh
  41064f:	cmp    ecx,DWORD PTR [ebx-0x2ab7ebb]
  410655:	jne    0x4105e8
  410657:	xchg   BYTE PTR [ebx+edx*2],bl
  41065a:	pop    es
  41065b:	(bad)  
  41065d:	adc    eax,0x401119
  410662:	idiv   BYTE PTR [ecx]
  410664:	neg    BYTE PTR [esi-0x4c]
  410667:	mov    esi,0xc49e000a
  41066c:	ror    BYTE PTR [eax],0x0
  41066f:	jge    0x4106b9
  410671:	mov    esp,ebp
  410673:	xchg   esp,eax
  410674:	cwde   
  410675:	push   ds
  410676:	mov    ds:0x56021996,eax
  41067b:	adc    DWORD PTR [esi-0x4a],ebx
  41067e:	inc    ebx
  41067f:	mov    edx,0xc7ffe996
  410684:	xor    edi,DWORD PTR [edi-0x4c]
  410687:	mov    ah,0x5c
  410689:	sub    eax,0x1912cfe
  41068e:	add    DWORD PTR [esi+edx*4-0x696b0c59],edx
  410695:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410696:	sti    
  410697:	xchg   esp,eax
  410698:	out    0x80,al
  41069a:	inc    esp
  41069b:	and    BYTE PTR [ecx],cl
  41069d:	sbb    al,0x32
  41069f:	pushf  
  4106a0:	sbb    BYTE PTR [edx],al
  4106a2:	test   ah,dl
  4106a4:	sub    al,0x17
  4106a6:	dec    DWORD PTR [ecx-0x43a8663]
  4106ac:	dec    ebx
  4106ad:	imul   edx,DWORD PTR ss:[ecx+ebp*2+0x1994cb9a],0x4d2ce802
  4106b9:	add    eax,DWORD PTR [eax]
  4106bb:	fld    TBYTE PTR [ebx+0x36]
  4106be:	out    0x4f,eax
  4106c0:	jge    0x4106ef
  4106c2:	(bad)  
  4106c3:	shl    DWORD PTR [bx-0x3c55],0xd9
  4106c9:	int3   
  4106ca:	enter  0x6bd7,0x79
  4106ce:	jmp    0x4106e7
  4106d0:	add    eax,0xb800802b
  4106d5:	mov    ah,0x7
  4106d7:	add    BYTE PTR [esi+eiz*2+0x5d0956d4],dl
  4106de:	out    0x13,al
  4106e0:	(bad)  
  4106e1:	xor    ecx,edx
  4106e3:	mov    BYTE PTR [eax],al
  4106e5:	cmp    al,0xa
  4106e7:	call   0x438dbf
  4106ec:	adc    BYTE PTR [ecx],al
  4106ee:	test   eax,0xe88717fd
  4106f3:	add    edx,DWORD PTR [eax+ebx*1+0x2a63d6ab]
  4106fa:	popa   
  4106fb:	dec    esp
  4106fc:	or     al,0xcd
  4106fe:	or     al,0xc
  410700:	sbb    eax,0x421404cd
  410705:	fdiv   DWORD PTR ds:[esi-0x329ce763]
  41070c:	xchg   esp,eax
  41070d:	add    BYTE PTR [edi],bh
  41070f:	icebp  
  410710:	dec    esi
  410711:	shr    DWORD PTR [ecx],cl
  410713:	sbb    al,0xf1
  410715:	retf   0x3e7
  410718:	pop    ss
  410719:	mov    ebp,0x75840bc4
  41071e:	and    al,0xe8
  410720:	stos   DWORD PTR es:[edi],eax
  410721:	adc    eax,0xffd63619
  410726:	sti    
  410727:	adc    ah,ch
  410729:	sub    bh,al
  41072b:	add    dl,BYTE PTR [ebx+edi*2+0x1893e7e4]
  410732:	mov    esp,0x6929ea6f
  410737:	cmp    DWORD PTR [eax],eax
  410739:	xchg   esp,eax
  41073a:	adc    eax,0xfed63611
  41073f:	mov    esp,0xe81ebbf9
  410744:	add    edx,DWORD PTR [ebp+edi*2-0x2351d0b7]
  41074b:	ss inc ecx
  41074d:	xchg   edi,eax
  41074e:	mov    ah,0xf2
  410750:	sbb    ebx,DWORD PTR [ebp-0x1]
  410753:	call   0x115f1e5b
  410758:	sbb    DWORD PTR [eax+0x20c42932],eax
  41075e:	out    dx,eax
  41075f:	jae    0x410719
  410761:	mov    bh,0x8
  410763:	adc    DWORD PTR [esi+eax*1+0x0],edi
  410767:	add    cl,ch
  410769:	lahf   
  41076a:	aam    0xf
  41076c:	jmp    0x6b0e7d08
  410771:	lods   al,BYTE PTR ds:[esi]
  410772:	jmp    0x659b5e
  410777:	add    BYTE PTR [edx],dl
  410779:	inc    esp
  41077a:	fisttp QWORD PTR [edi]
  41077c:	push   ebp
  41077d:	test   DWORD PTR [ebx+0x43],edi
  410780:	or     eax,0xe869d0a8
  410785:	sub    eax,0x536057fd
  41078a:	fst    QWORD PTR [edi]
  41078c:	shl    edi,0xce
  41078f:	(bad)  
  410790:	call   0xf564b547
  410795:	(bad)  
  410796:	lea    edx,[ecx-0x17]
  410799:	xchg   edi,eax
  41079a:	leave  
  41079b:	pop    ebp
  41079c:	fiadd  DWORD PTR [eax]
  41079e:	xlat   BYTE PTR ds:[ebx]
  41079f:	(bad)  
  4107a0:	mov    cl,BYTE PTR [edx+eiz*8+0x17e9033e]
  4107a7:	in     al,dx
  4107a8:	(bad)  
  4107a9:	cmp    esp,edx
  4107ab:	sub    bh,bh
  4107ad:	imul   ah
  4107af:	rcl    BYTE PTR [esi+0x1a],cl
  4107b2:	rcl    edx,0x56
  4107b5:	mov    dh,0xf
  4107b7:	xor    ecx,esi
  4107b9:	test   eax,0x4e56d197
  4107be:	adc    al,0x11
  4107c1:	test   eax,0x2ef7597
  4107c6:	sub    DWORD PTR [ebp+0xe3fc11e],0x29e1e900
  4107d0:	adc    al,0xf9
  4107d2:	test   al,al
  4107d4:	jmp    DWORD PTR [ebx+0x57]
  4107d7:	lods   eax,DWORD PTR ds:[esi]
  4107d8:	pop    es
  4107d9:	mov    esi,0xb51429c9
  4107de:	test   eax,eax
  4107e0:	(bad)  
  4107e1:	push   DWORD PTR [ebx]
  4107e3:	aad    0x13
  4107e5:	mov    al,ds:0x5efe446f
  4107ea:	sub    eax,ecx
  4107ec:	push   ebx
  4107ed:	mov    edi,DWORD PTR [ecx-0x58]
  4107f0:	jmp    0xc08d:0x4f86b330
  4107f7:	int3   
  4107f8:	push   esi
  4107f9:	call   0x4206eb
  4107fe:	dec    edx
  4107ff:	jb     0x410807
  410801:	push   0x0
  410803:	cmp    eax,0x3ca2890c
  410808:	add    al,0x5e
  41080a:	test   ch,ch
  41080c:	jo     0x410824
  41080e:	lea    esi,[eax-0x34]
  410811:	dec    esi
  410812:	call   DWORD PTR [eax+0x2575fd24]
  410818:	or     al,0x99
  41081a:	mov    ds:0xc085042c,eax
  41081f:	add    DWORD PTR [ecx],0x7bdc033
  410825:	add    DWORD PTR [ebx],esi
  410827:	cmp    eax,0xed04c0e6
  41082c:	push   eax
  41082d:	mov    esp,ebp
  41082f:	outs   dx,BYTE PTR ds:[esi]
  410830:	loopne 0x410828
  410832:	or     DWORD PTR [ecx+0x50],0x51fd0000
  410839:	push   0x22707853
  41083e:	sub    BYTE PTR ds:0xbc02390c,ah
  410844:	add    ecx,DWORD PTR [ebx-0x78b2183a]
  41084a:	inc    esp
  41084b:	xchg   ecx,eax
  41084c:	sub    BYTE PTR [ebx+0x56309174],cl
  410852:	call   0x42061c
  410857:	cmp    BYTE PTR [eax+0x22],al
  41085a:	push   eax
  41085b:	xchg   esp,eax
  41085c:	imul   ebx,DWORD PTR [edx],0x2af69b8b
  410862:	adc    DWORD PTR [ebp+eiz*4-0x15],0xffffff82
  410867:	add    al,dh
  410869:	cmp    eax,0x5510fff6
  41086e:	fimul  WORD PTR [edi+0xd]
  410871:	pop    ebp
  410872:	fimul  WORD PTR [edi]
  410874:	and    ebp,edx
  410876:	fild   WORD PTR [edi]
  410878:	sbb    eax,0xf17dfdd
  41087d:	push   edi
  41087e:	ror    BYTE PTR [eax+edx*8-0x2738ec03],cl
  410885:	cmc    
  410886:	or     eax,DWORD PTR ds:0xc7021994
  41088c:	fdiv   st,st(5)
  41088e:	jecxz  0x410890
  410890:	xchg   esp,eax
  410891:	sbb    DWORD PTR [edx],eax
  410893:	(bad)  
  410894:	fdiv   DWORD PTR ds:0x199401de
  41089a:	add    ch,al
  41089c:	sahf   
  41089d:	sbb    al,0x3
  41089f:	add    BYTE PTR [edx-0x28a3e05e],bh
  4108a5:	add    edi,DWORD PTR [edi-0x15]
  4108a8:	adc    eax,0x9401fa75
  4108ad:	sbb    DWORD PTR [edi-0x7c],esi
  4108b0:	cld    
  4108b1:	xchg   ebx,eax
  4108b2:	sub    esi,edi
  4108b4:	inc    esp
  4108b5:	shr    edi,1
  4108b7:	(bad)  
  4108b8:	jmp    0x41087f
  4108ba:	jle    0x41087b
  4108bc:	push   0xdc8c7722
  4108c1:	mov    bl,0x29
  4108c3:	(bad)  
  4108c4:	mov    esp,0x94005cd4
  4108c9:	lock inc ebp
  4108cb:	push   esp
  4108cc:	add    BYTE PTR [edi],cl
  4108ce:	mov    ebp,0x8a98eb85
  4108d3:	ror    BYTE PTR [edx+0x7ef10029],1
  4108d9:	xchg   ecx,eax
  4108da:	iret   
  4108db:	outs   dx,DWORD PTR ds:[esi]
  4108dc:	mov    eax,0xfba374a7
  4108e1:	inc    esp
  4108e2:	daa    
  4108e3:	xchg   ebx,eax
  4108e4:	neg    DWORD PTR [esi]
  4108e6:	dec    ebx
  4108e7:	xchg   edx,eax
  4108e8:	sub    bh,ch
  4108ea:	add    BYTE PTR [ebx-0x6c8815fc],dl
  4108f0:	xor    edi,DWORD PTR [edx-0x2f]
  4108f3:	cwde   
  4108f4:	xor    BYTE PTR [ebx],0xf6
  4108f7:	imul   eax,DWORD PTR [edi+0x6b],0x26
  4108fb:	call   0x23b4a27c
  410900:	sub    al,0xc4
  410902:	jns    0x41091f
  410904:	clc    
  410905:	mov    ebx,0x4bc43b90
  41090a:	daa    
  41090b:	aaa    
  41090c:	cld    
  41090d:	jmp    0x111d2137
  410912:	inc    ecx
  410913:	fnstsw WORD PTR [esi+0xb]
  410916:	add    ecx,ebp
  410918:	add    ebx,DWORD PTR [edi]
  41091a:	mov    esp,0x739b7da0
  41091f:	cmp    ebx,DWORD PTR [eax*8-0x50623766]
  410926:	rol    BYTE PTR [ebp-0x16ff206d],1
  41092c:	add    ebx,DWORD PTR [ecx]
  41092e:	inc    ecx
  41092f:	sti    
  410930:	mov    al,0x0
  410932:	mov    ah,0xbb
  410934:	ins    BYTE PTR es:[edi],dx
  410935:	jmp    0x41098f
  410937:	sbb    dh,bl
  410939:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41093a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41093b:	dec    ecx
  41093c:	jno    0x4108fd
  41093e:	out    dx,eax
  41093f:	jns    0x410915
  410941:	add    al,0x78
  410943:	jnp    0x410992
  410945:	mov    al,0x57
  410947:	jb     0x4108f1
  410949:	jl     0x41091d
  41094b:	sbb    BYTE PTR [ebp-0xda3de9],al
  410951:	imul   edx,DWORD PTR [eax-0x4f],0x36
  410955:	xchg   esi,eax
  410956:	adc    DWORD PTR [esi],esp
  410958:	xor    DWORD PTR [ecx],0x56c1d7d
  41095e:	ins    DWORD PTR es:[edi],dx
  41095f:	mov    dl,BYTE PTR es:[ecx]
  410962:	sbb    esp,DWORD PTR [esi]
  410964:	jae    0x41092f
  410966:	adc    BYTE PTR [ebp+0x3d109e13],dh
  41096c:	(bad)  
  41096d:	adc    DWORD PTR ds:0xfbf6fe1b,ebp
  410973:	gs jae 0x41094f
  410976:	lock mov ah,0x13
  410979:	sbb    dl,al
  41097b:	popf   
  41097c:	mov    edi,0x3e255854
  410981:	sar    eax,0x1a
  410984:	dec    dh
  410986:	fs sbb eax,0x267c90be
  41098c:	(bad)  
  41098d:	and    al,0x6c
  41098f:	jp     0x4109d5
  410991:	mov    ch,0x10
  410993:	inc    edx
  410994:	aas    
  410995:	repnz add dl,dh
  410998:	sbb    al,0x71
  41099a:	dec    edx
  41099b:	test   al,0xc4
  41099d:	out    dx,eax
  41099e:	jb     0x410982
  4109a0:	xor    BYTE PTR [edx-0x18335d1f],cl
  4109a6:	cmp    ebp,eax
  4109a8:	and    eax,0xbc88d150
  4109ad:	div    DWORD PTR [edx-0x1]
  4109b0:	mov    ah,0xfe
  4109b2:	sbb    al,bh
  4109b4:	and    eax,0xfb70dd74
  4109b9:	push   ebp
  4109ba:	data16 (bad) 
  4109bc:	adc    bh,bh
  4109be:	aam    0xeb
  4109c0:	jns    0x4109c7
  4109c2:	ret    
  4109c3:	xchg   esi,eax
  4109c4:	and    eax,0x25e5e174
  4109c9:	dec    edi
  4109ca:	add    BYTE PTR [ecx],ch
  4109cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4109cd:	mov    esi,0xfd4d390f
  4109d2:	inc    DWORD PTR [edx+0x360873d8]
  4109d8:	call   DWORD PTR [ebp-0x1]
  4109db:	in     eax,dx
  4109dc:	cmp    BYTE PTR [ecx+0x4a39d7d],cl
  4109e2:	push   edi
  4109e3:	pop    ss
  4109e4:	add    DWORD PTR [esi-0x1],edx
  4109e7:	dec    ebp
  4109e8:	sub    al,0x83
  4109ea:	ror    BYTE PTR [eax],0x3a
  4109ed:	aaa    
  4109ee:	inc    edi
  4109ef:	test   DWORD PTR [edx+0x57],ebx
  4109f2:	mov    ebp,DWORD PTR [esi-0x55]
  4109f5:	dec    ebx
  4109f6:	or     BYTE PTR [ecx+edx*2],cl
  4109f9:	std    
  4109fa:	ja     0x4109fc
  4109fc:	jns    0x410a4d
  4109fe:	std    
  4109ff:	push   eax
  410a00:	lods   eax,DWORD PTR ds:[esi]
  410a01:	cmp    DWORD PTR [esi+0x1a7aa75],0x510cb08d
  410a0b:	push   0x3d
  410a0d:	(bad)  [ebp+0x4]
  410a10:	sahf   
  410a11:	fisttp DWORD PTR [esi+0x18]
  410a14:	test   al,0xbc
  410a16:	jae    0x410a35
  410a18:	add    dh,BYTE PTR [edx+0x12]
  410a1b:	mov    esp,DWORD PTR [eax-0x10]
  410a1e:	push   ebp
  410a1f:	dec    DWORD PTR [eax+0x2d38928]
  410a25:	jb     0x410a35
  410a27:	call   0x3ee487
  410a2c:	xchg   BYTE PTR [ecx+0xe],al
  410a2f:	mov    eax,DWORD PTR ds:0xf551fd50
  410a35:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410a36:	add    DWORD PTR [edi-0x7e],edx
  410a39:	jno    0x410a41
  410a3b:	push   ebx
  410a3c:	jb     0x410a8a
  410a3e:	inc    edx
  410a3f:	test   DWORD PTR [ebp-0x6b003f90],ebp
  410a45:	inc    esp
  410a46:	cli    
  410a47:	mov    dl,BYTE PTR [edi+0x5c4f2566]
  410a4d:	pop    edx
  410a4e:	les    ebx,FWORD PTR [edx-0x33]
  410a51:	xlat   BYTE PTR ds:[ebx]
  410a52:	adc    eax,DWORD PTR [eax]
  410a54:	popa   
  410a55:	sahf   
  410a56:	pop    ss
  410a57:	add    al,0x65
  410a5a:	add    eax,DWORD PTR [eax]
  410a5c:	xchg   esp,eax
  410a5d:	data16 int3 
  410a5f:	push   esi
  410a60:	add    BYTE PTR [ecx+ecx*8],ch
  410a63:	mov    al,0x3f
  410a65:	xchg   esp,eax
  410a66:	and    DWORD PTR [edx+0x74],0xfa1a19d4
  410a6d:	add    al,0x19
  410a6f:	add    cl,BYTE PTR [ebx+0x3a496684]
  410a75:	xchg   DWORD PTR [edx],ebx
  410a77:	jle    0x410a07
  410a79:	xchg   esp,eax
  410a7a:	sbb    DWORD PTR [edx],eax
  410a7c:	push   ebx
  410a7d:	(bad)  
  410a7e:	mov    al,0xc7
  410a80:	sti    
  410a81:	nop    esp
  410a84:	inc    ah
  410a86:	sbb    eax,0xb8c9bf7f
  410a8b:	jp     0x410a92
  410a8d:	sbb    esp,ebp
  410a8f:	sub    edx,DWORD PTR [eax-0x19]
  410a92:	iret   
  410a93:	add    DWORD PTR [esi+0x3b],edx
  410a96:	or     DWORD PTR [eax],edx
  410a98:	test   DWORD PTR [esp+ebp*8-0x2d],edx
  410a9c:	addr16 adc al,0x4
  410a9f:	(bad)  
  410aa0:	(bad)  
  410aa1:	mov    ebx,0x943fb109
  410aa6:	add    DWORD PTR [edx+0x6f],0xf7791995
  410aad:	iret   
  410aae:	jle    0x410a5e
  410ab0:	xor    DWORD PTR [ecx],edx
  410ab2:	fsub   QWORD PTR [edi]
  410ab4:	dec    edi
  410ab5:	or     DWORD PTR [edx+ecx*4-0x2d6e0c03],edx
  410abc:	mov    WORD PTR [ecx+0x0],ss
  410abf:	cdq    
  410ac0:	shl    edx,cl
  410ac2:	lods   al,BYTE PTR ds:[esi]
  410ac3:	pusha  
  410ac4:	jp     0x410ac6
  410ac6:	shl    DWORD PTR [esi+0x25],0x3e
  410aca:	pop    eax
  410acb:	jo     0x410a71
  410acd:	add    edx,DWORD PTR [eax+eax*1+0x222b802e]
  410ad4:	cmp    eax,0xe901a326
  410ad9:	add    edi,DWORD PTR [edx+ebp*1+0x76aa262b]
  410ae0:	in     eax,dx
  410ae1:	into   
  410ae2:	mov    ds:0x507af0cf,al
  410ae7:	sub    BYTE PTR [ecx-0x5],ah
  410aea:	jecxz  0x410b0d
  410aec:	mov    bh,0xfb
  410aee:	push   ds
  410aef:	sti    
  410af0:	sahf   
  410af1:	es sar eax,cl
  410af4:	adc    BYTE PTR [edi+0x14],bl
  410af7:	add    cl,ch
  410af9:	jp     0x410acb
  410afb:	and    al,0xac
  410afd:	dec    DWORD PTR [esi+0x164cdd40]
  410b03:	inc    ecx
  410b04:	inc    ecx
  410b05:	cmc    
  410b06:	and    al,BYTE PTR [ecx-0x40]
  410b09:	lods   al,BYTE PTR ds:[esi]
  410b0a:	dec    esi
  410b0b:	and    cl,ch
  410b0d:	(bad)
  410b10:	scas   eax,DWORD PTR es:[edi]
  410b11:	inc    ecx
  410b12:	call   0x2fc4d78c
  410b17:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410b18:	jmp    0x170e9f20
  410b1d:	int    0xee
  410b1f:	add    al,ch
  410b21:	add    edx,DWORD PTR [ebp+ecx*8+0x2417776b]
  410b28:	xchg   ebp,eax
  410b29:	and    eax,0x13216400
  410b2e:	clc    
  410b2f:	push   ds
  410b30:	xor    DWORD PTR [ecx-0x2],esi
  410b33:	imul   esp,DWORD PTR [ecx],0x41111018
  410b39:	(bad)  
  410b3a:	cld    
  410b3b:	icebp  
  410b3c:	jle    0x410ba2
  410b3e:	fst    QWORD PTR [edi+0x63741315]
  410b44:	jge    0x410b42
  410b46:	pop    esi
  410b47:	mov    cl,0xb1
  410b49:	imul   ebp,ecx,0x41fe3a14
  410b4f:	adc    eax,0x3f46fe20
  410b54:	mov    esp,0xceba720b
  410b59:	mov    WORD PTR [esp+edx*1+0x24],fs
  410b5d:	(bad)  
  410b5e:	cs (bad) 
  410b60:	and    dh,BYTE PTR [ecx+eax*1-0x2e]
  410b64:	and    cl,BYTE PTR [edi-0xb]
  410b67:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410b68:	and    al,BYTE PTR [ecx+ebp*1-0x737703bc]
  410b6f:	lahf   
  410b70:	adc    eax,0x7e037412
  410b75:	std    
  410b76:	(bad)  
  410b77:	mov    al,0xb1
  410b79:	push   esi
  410b7a:	push   0xffffffb0
  410b7c:	and    ah,bh
  410b7e:	xchg   ebp,eax
  410b7f:	mov    ch,0x22
  410b81:	(bad)  
  410b82:	jo     0x410ba6
  410b84:	or     DWORD PTR [ebx-0x738bbb19],ecx
  410b8a:	ins    DWORD PTR es:[edi],dx
  410b8b:	jnp    0x410baf
  410b8d:	(bad)  
  410b8e:	cmp    BYTE PTR [eax],al
  410b90:	jno    0x410b3e
  410b92:	sbb    ebx,DWORD PTR [edi]
  410b94:	jns    0x410b47
  410b96:	adc    esp,DWORD PTR [edi+edx*8-0x54]
  410b9a:	adc    DWORD PTR [edx+esi*4+0x7d],esp
  410b9e:	sti    
  410b9f:	scas   al,BYTE PTR es:[edi]
  410ba0:	jo     0x410b53
  410ba2:	push   esi
  410ba3:	push   0x5f
  410ba5:	and    ah,bh
  410ba7:	int    0x75
  410ba9:	and    bh,dh
  410bab:	bound  edi,QWORD PTR [edi+0x425c0576]
  410bb1:	and    eax,0x521a0050
  410bb6:	push   cs
  410bb7:	push   esi
  410bb8:	jp     0x410c07
  410bba:	push   cs
  410bbb:	test   DWORD PTR ds:0x90830251,edi
  410bc1:	fdivr  st,st(6)
  410bc3:	mov    dh,bl
  410bc5:	test   eax,0xdc1cf84b
  410bca:	jae    0x410be0
  410bcc:	adc    ebx,esp
  410bce:	dec    esi
  410bcf:	adc    BYTE PTR [eax],dh
  410bd1:	mov    ebp,0x822e0472
  410bd6:	test   BYTE PTR [eax],0xe7
  410bd9:	xchg   BYTE PTR [ebx-0x19cabe8b],cl
  410bdf:	lods   eax,DWORD PTR ds:[esi]
  410be0:	jnp    0x410bdf
  410be2:	jmp    FWORD PTR [ecx-0x2]
  410be5:	test   eax,0x4d5e873
  410bea:	mov    eax,ds:0x8b047dfe
  410bef:	push   ebp
  410bf0:	test   DWORD PTR [esi+eax*2+0x42d0075],ebp
  410bf7:	test   edi,edi
  410bf9:	push   es
  410bfa:	aam    0xd
  410bfc:	inc    ebp
  410bfd:	jb     0x410b9d
  410bff:	ror    BYTE PTR [edi],1
  410c01:	xor    DWORD PTR [ecx+eax*4-0x74fa8a83],esi
  410c08:	enter  0x7c1,0x8d
  410c0c:	dec    ebp
  410c0d:	push   ebp
  410c0e:	mov    BYTE PTR [ebx+0xc],bh
  410c11:	cmp    eax,0x70450d5a
  410c16:	lock mov dh,BYTE PTR [ebp-0x73]
  410c1a:	push   esi
  410c1b:	dec    edi
  410c1c:	push   DWORD PTR [eax-0x20]
  410c1f:	dec    esi
  410c20:	jmp    DWORD PTR [eax+0xc]
  410c23:	lea    eax,[ebp-0x4f]
  410c26:	push   esp
  410c27:	std    
  410c28:	ss cli 
  410c2a:	sbb    DWORD PTR [esi+0x12],edi
  410c2d:	xchg   esp,eax
  410c2e:	jmp    0xa32d9736
  410c33:	dec    ecx
  410c34:	out    0x3e,eax
  410c36:	jae    0x410c5a
  410c38:	(bad)  
  410c39:	pop    ss
  410c3a:	data16 (bad) 
  410c3c:	(bad)  
  410c3d:	imul   esp,DWORD PTR ds:0xaf33132a,0x169fe22
  410c47:	sub    al,0xb
  410c49:	xor    edi,DWORD PTR [edi+0x2fbc5622]
  410c4f:	imul   edi,esi,0x5ac06ecb
  410c55:	int    0xeb
  410c57:	(bad)  
  410c58:	inc    DWORD PTR [eax]
  410c5a:	popa   
  410c5b:	xchg   edx,eax
  410c5c:	das    
  410c5d:	add    al,0xad
  410c60:	add    eax,0xb87a9400
  410c65:	push   esi
  410c66:	sub    al,0x89
  410c68:	xchg   edi,eax
  410c69:	aas    
  410c6a:	xchg   esp,eax
  410c6b:	jno    0x410c1f
  410c6d:	je     0x410c43
  410c6f:	sub    DWORD PTR [edx],ebp
  410c71:	(bad)  
  410c72:	cli    
  410c73:	sub    BYTE PTR [edx],al
  410c75:	mov    eax,DWORD PTR [edx+ebx*2-0xdfe77c3]
  410c7c:	fdivrp st(2),st
  410c7e:	mov    ds:0x940022ad,eax
  410c83:	sub    DWORD PTR [ebp-0x4ad711fb],ecx
  410c89:	push   ebp
  410c8a:	or     eax,0xe4fe1bdc
  410c8f:	jmp    0xa4dccc1c
  410c94:	cmp    al,0x0
  410c96:	xchg   esp,eax
  410c97:	sub    DWORD PTR [ebp+0x2fec0905],ecx
  410c9d:	push   eax
  410c9e:	mov    esi,0xc4feb827
  410ca3:	xor    eax,0x93bf87
  410ca8:	ins    BYTE PTR es:[edi],dx
  410ca9:	dec    ecx
  410caa:	xchg   esp,eax
  410cab:	add    cl,ch
  410cad:	sub    al,0x36
  410caf:	add    ecx,ebp
  410cb1:	add    ebx,DWORD PTR [edi]
  410cb3:	lds    ecx,FWORD PTR [esi+ecx*4+0x181b8d9b]
  410cba:	gs mov al,0x7d
  410cbd:	mov    ah,0x0
  410cbf:	stos   DWORD PTR es:[edi],eax
  410cc0:	test   DWORD PTR [eax-0x187aeeee],ebp
  410cc6:	add    edx,DWORD PTR [ecx+ebx*8-0x7b75e83d]
  410ccd:	fadd   QWORD PTR [esp+edx*4]
  410cd0:	add    BYTE PTR [edx-0x38],ah
  410cd3:	iret   
  410cd4:	mov    ah,al
  410cd6:	popa   
  410cd7:	ret    
  410cd8:	(bad)  
  410cd9:	call   0x53ce6ee1
  410cde:	xor    DWORD PTR [ecx+0x33b5351e],0x10
  410ce5:	jmp    0x25f192c2
  410cea:	mov    ah,0x87
  410cec:	test   DWORD PTR [eax],ebp
  410cee:	xchg   edi,eax
  410cef:	cwde   
  410cf0:	xchg   DWORD PTR [ebx+0x5bf27e13],esi
  410cf6:	mov    BYTE PTR [ebx],al
  410cf8:	pop    ds
  410cf9:	add    eax,0x69b1cb22
  410cfe:	dec    ebx
  410cff:	jb     0x410d2a
  410d01:	adc    BYTE PTR [ebx],ah
  410d03:	push   0x1e
  410d05:	pop    edi
  410d06:	enter  0x8a73,0x2b
  410d0a:	and    BYTE PTR [esi],cl
  410d0c:	or     DWORD PTR [edi],esi
  410d0e:	(bad)
  410d12:	and    DWORD PTR [edx-0x4d],ecx
  410d15:	inc    eax
  410d16:	adc    al,0x96
  410d18:	rcr    ah,cl
  410d1a:	mov    bl,0x3a
  410d1c:	mov    al,0xd4
  410d1e:	xchg   bl,dh
  410d20:	xchg   esp,eax
  410d21:	(bad)  
  410d22:	in     al,dx
  410d23:	add    BYTE PTR [eax+0x1f],al
  410d26:	jmp    0x75a4:0x7f8512db
  410d2d:	push   ds
  410d2e:	dec    edi
  410d2f:	cmp    bl,BYTE PTR [ecx]
  410d31:	inc    esi
  410d32:	inc    BYTE PTR [ecx-0x7101c283]
  410d38:	adc    DWORD PTR [esi],edx
  410d3a:	imul   edx,DWORD PTR [eax],0x2183950b
  410d40:	shr    BYTE PTR [edi+0x5897e9fc],0x47
  410d47:	hlt    
  410d48:	xlat   BYTE PTR ds:[ebx]
  410d49:	sbb    eax,0x1ab93989
  410d4e:	jae    0x410d3b
  410d50:	and    BYTE PTR [edi],dh
  410d52:	mov    ah,BYTE PTR [edi+eiz*4-0x1eae8b76]
  410d59:	dec    edx
  410d5a:	push   cs
  410d5b:	lods   eax,DWORD PTR ds:[esi]
  410d5c:	dec    edi
  410d5d:	(bad)  
  410d5f:	mov    ch,0xa1
  410d61:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410d62:	cmp    bh,dl
  410d64:	add    eax,DWORD PTR ds:0xde0b29b8
  410d6a:	(bad)  
  410d6b:	mov    edx,0xa48ccde6
  410d70:	sbb    ecx,ebp
  410d72:	push   ebp
  410d73:	push   ss
  410d74:	sbb    DWORD PTR [ebp-0x766856ef],0xffffffd7
  410d7b:	je     0x410dd0
  410d7d:	adc    eax,0x1ec174e7
  410d82:	(bad)  
  410d83:	push   0xffffffdc
  410d85:	or     eax,0x870074ff
  410d8a:	mov    ch,bh
  410d8c:	ror    edx,1
  410d8e:	fs (bad) 
  410d90:	fimul  WORD PTR [eiz*1+0x1e748cc6]
  410d97:	or     bh,0x74
  410d9a:	xchg   esp,eax
  410d9b:	add    eax,DWORD PTR [eax]
  410d9d:	scas   al,BYTE PTR es:[edi]
  410d9e:	data16 repnz add bl,ch
  410da2:	inc    ebp
  410da3:	repnz add ch,BYTE PTR [ecx+0x33]
  410da7:	push   0xc276c072
  410dac:	pop    eax
  410dad:	add    eax,0xfd00fae8
  410db2:	lea    eax,[ebx-0x8]
  410db5:	int    0x6c
  410db7:	hlt    
  410db8:	add    eax,DWORD PTR [edi-0x110f99ed]
  410dbe:	cdq    
  410dbf:	adc    BYTE PTR [eax+0x68],ch
  410dc2:	add    al,0x9e
  410dc4:	adc    dl,BYTE PTR [ebp-0x4062fe17]
  410dca:	push   0x131503ee
  410dcf:	mov    esi,eax
  410dd1:	or     eax,0x55fc438c
  410dd6:	inc    esi
  410dd7:	sti    
  410dd8:	call   DWORD PTR [edx-0x9]
  410ddb:	inc    ebx
  410ddc:	hlt    
  410ddd:	test   eax,0xec6a3174
  410de2:	lea    esi,[ebx-0x30]
  410de5:	add    eax,0xadfcace9
  410dea:	add    BYTE PTR [ebp+0x51750045],cl
  410df0:	data16 idiv BYTE PTR [esi-0x36]
  410df4:	adc    DWORD PTR [eax-0x53],ebp
  410df7:	add    al,0xc5
  410df9:	adc    edx,DWORD PTR ds:0x5eca01f3
  410dff:	push   0x14a403e7
  410e04:	data16 lock jle 0x410dcc
  410e08:	adc    DWORD PTR [ebx+0x45894fbb],ecx
  410e0e:	jno    0x410dfd
  410e10:	or     bh,ch
  410e12:	jb     0x410e10
  410e14:	hlt    
  410e15:	inc    ebp
  410e16:	xchg   esp,eax
  410e17:	cmp    eax,0xbf87740b
  410e1c:	xchg   ebx,eax
  410e1d:	mov    ecx,es
  410e1f:	gs mov ebx,0x35da9e7
  410e25:	add    BYTE PTR [ecx],bl
  410e27:	in     eax,dx
  410e28:	sbb    ecx,DWORD PTR [edi-0x54]
  410e2b:	push   ebx
  410e2c:	add    ch,BYTE PTR [edx]
  410e2e:	xor    cl,0x13
  410e31:	add    bh,BYTE PTR [ebp-0x680b55eb]
  410e37:	inc    ebx
  410e38:	mul    BYTE PTR [edi-0x13]
  410e3b:	es out dx,eax
  410e3d:	adc    ebp,DWORD PTR [ecx+ebx*4+0x2]
  410e41:	sub    BYTE PTR [eax+0x1f4f458e],cl
  410e47:	in     eax,dx
  410e48:	pop    ds
  410e49:	out    0xc7,eax
  410e4b:	lods   eax,DWORD PTR ds:[esi]
  410e4c:	push   ds
  410e4d:	dec    BYTE PTR [edi]
  410e4f:	cmp    eax,0xef00322a
  410e54:	mov    cs,eax
  410e56:	sti    
  410e57:	pop    ds
  410e58:	and    dh,BYTE PTR [edx-0x76de9a02]
  410e5e:	inc    esp
  410e5f:	test   al,0x8e
  410e61:	or     ecx,DWORD PTR [ebp+0x4fb1dd49]
  410e67:	stos   DWORD PTR es:[edi],eax
  410e68:	js     0x410e60
  410e6a:	test   ah,dl
  410e6c:	cmp    al,BYTE PTR [esi+0x1ee29a47]
  410e72:	mov    bl,cl
  410e74:	or     eax,0xf2e4078b
  410e79:	mov    ah,0x7
  410e7b:	mov    db6,esp
  410e7e:	(bad)  
  410e7f:	in     al,0x11
  410e81:	mov    DWORD PTR [esp+ebp*2+0x6f],ebx
  410e85:	mov    edi,0x1a207c57
  410e8a:	(bad)  
  410e8b:	arpl   WORD PTR [edx+0x4d5abc],cx
  410e91:	stos   BYTE PTR es:[edi],al
  410e92:	mov    eax,0x2f672c1e
  410e97:	pop    ds
  410e98:	add    cl,ch
  410e9a:	add    esp,edi
  410e9c:	mov    dl,0x35
  410e9e:	xchg   ecx,eax
  410e9f:	rol    BYTE PTR [eax+edx*8+0x16],0x2e
  410ea4:	add    cl,ch
  410ea6:	push   ds
  410ea7:	mov    al,ds:0xd345620c
  410eac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410ead:	add    BYTE PTR [ebx+0x1f1c5d08],bh
  410eb3:	adc    bl,BYTE PTR [ebx]
  410eb5:	nop
  410eb6:	test   DWORD PTR [eax],eax
  410eb8:	repz sbb dl,BYTE PTR [ebp-0x577aa344]
  410ebf:	popf   
  410ec0:	mov    ah,0x87
  410ec2:	sub    ecx,DWORD PTR [edi+ebx*1]
  410ec5:	or     BYTE PTR [eax+edi*4-0x61],ch
  410ec9:	scas   al,BYTE PTR es:[edi]
  410eca:	popa   
  410ecb:	ss inc ebp
  410ecd:	mov    al,0x6d
  410ecf:	je     0x410ed8
  410ed1:	add    cl,ch
  410ed3:	add    ebx,DWORD PTR [ecx]
  410ed5:	inc    eax
  410ed6:	ror    DWORD PTR [ecx],cl
  410ed8:	pop    ds
  410ed9:	xchg   ebp,eax
  410eda:	in     al,0x2b
  410edc:	mov    DWORD PTR [eax-0x250fc19],0xba5243f9
  410ee6:	mov    eax,ds:0xe907d54c
  410eeb:	mov    eax,0x2f672c0e
  410ef0:	xlat   BYTE PTR ds:[ebx]
  410ef1:	(bad)  
  410ef2:	call   0xb5f3f5fa
  410ef7:	mov    cl,BYTE PTR [eax]
  410ef9:	or     DWORD PTR [esi-0x7d4c8c76],edi
  410eff:	stos   BYTE PTR es:[edi],al
  410f00:	jecxz  0x410f2a
  410f02:	jae    0x410f22
  410f04:	jb     0x410f20
  410f06:	xchg   ebp,eax
  410f07:	mov    ch,0xfd
  410f09:	stos   BYTE PTR es:[edi],al
  410f0a:	call   FWORD PTR [edi+0x4c]
  410f0d:	es push edi
  410f0f:	add    DWORD PTR [edi],edx
  410f11:	sbb    edi,esi
  410f13:	out    0x9,al
  410f15:	mov    ah,0x69
  410f17:	dec    esi
  410f18:	pop    ds
  410f19:	(bad)
  410f1c:	add    BYTE PTR [eax-0x72],dh
  410f1f:	dec    dh
  410f21:	cdq    
  410f22:	mov    dl,0x55
  410f24:	push   ebx
  410f25:	in     al,0x88
  410f27:	inc    esp
  410f28:	shr    eax,1
  410f2a:	and    DWORD PTR [ebp-0x4a],esp
  410f2d:	sbb    DWORD PTR [edx],0xacee1756
  410f33:	mov    BYTE PTR [esp+edx*2],ch
  410f36:	mov    cl,0xe7
  410f38:	inc    eax
  410f39:	test   eax,0xbcdafe1a
  410f3e:	fcomp  DWORD PTR [ebp+edi*2+0xf]
  410f42:	(bad)
  410f45:	push   0xffffffc4
  410f47:	inc    cl
  410f49:	sub    bl,BYTE PTR [ebx]
  410f4b:	push   cs
  410f4c:	ins    DWORD PTR es:[edi],dx
  410f4d:	mov    BYTE PTR [eax],0x0
  410f50:	jmp    0x7120cc63
  410f55:	adc    ebx,DWORD PTR [esi]
  410f57:	cmp    BYTE PTR [edi+edi*2+0xb620a8d],bh
  410f5e:	and    cl,BYTE PTR [esp+eiz*4-0xe50de8d]
  410f65:	xchg   edi,eax
  410f66:	add    BYTE PTR [ecx+0x5cd8839c],cl
  410f6c:	cmp    esp,edi
  410f6e:	out    0x69,eax
  410f70:	retf   0x950a
  410f73:	iret   
  410f74:	sar    DWORD PTR [edi-0x6816051d],0x19
  410f7b:	je     0x410f96
  410f7d:	or     eax,0x834f43
  410f82:	mov    esi,DWORD PTR [ebp-0x62e7ff74]
  410f88:	out    0xb8,al
  410f8a:	xchg   edx,eax
  410f8b:	sti    
  410f8c:	std    
  410f8d:	pop    ecx
  410f8e:	add    al,0x8a
  410f90:	inc    ebx
  410f91:	loopne 0x410f89
  410f93:	shl    esi,cl
  410f95:	add    BYTE PTR [ebp-0x3],0xff
  410f99:	xor    dl,BYTE PTR [esi-0x4]
  410f9c:	jae    0x410f96
  410f9e:	mov    dh,0x3a
  410fa0:	jle    0x410fb4
  410fa2:	ins    DWORD PTR es:[edi],dx
  410fa3:	add    al,0xff
  410fa5:	xlat   BYTE PTR ds:[ebx]
  410fa6:	xchg   esp,eax
  410fa7:	pop    ecx
  410fa8:	div    BYTE PTR [edx+eiz*2+0x7f]
  410fac:	test   BYTE PTR [ecx],0x6b
  410faf:	outs   dx,BYTE PTR ds:[esi]
  410fb0:	mov    eax,ecx
  410fb2:	lods   al,BYTE PTR ds:[esi]
  410fb3:	fdivp  st(7),st
  410fb5:	(bad)  
  410fb6:	std    
  410fb7:	jl     0x411030
  410fb9:	add    eax,0xfec77fc4
  410fbe:	lods   al,BYTE PTR ds:[esi]
  410fbf:	jno    0x411020
  410fc1:	cdq    
  410fc2:	(bad)  
  410fc3:	mov    esi,0x4264f8cf
  410fc8:	into   
  410fc9:	jne    0x410fbc
  410fcb:	das    
  410fcc:	mov    esi,0x5fe4f0eb
  410fd1:	mov    ds:0x4587fc6a,eax
  410fd6:	xchg   ecx,eax
  410fd7:	cmp    cl,al
  410fd9:	je     0x410fcd
  410fdb:	xchg   esi,eax
  410fdd:	mov    esi,eax
  410fdf:	hlt    
  410fe0:	out    0x34,al
  410fe2:	dec    esp
  410fe3:	cld    
  410fe4:	std    
  410fe5:	test   BYTE PTR [eax],al
  410fe7:	jge    0x41105a
  410fe9:	das    
  410fea:	(bad)  
  410feb:	lock les ecx,FWORD PTR [esi+0x53]
  410fef:	dec    BYTE PTR [edi-0x3]
  410ff2:	jne    0x410fad
  410ff4:	mov    DWORD PTR [ebx-0x30],eax
  410ff7:	dec    esi
  410ff8:	push   esp
  410ff9:	std    
  410ffa:	adc    eax,0x3e13dd
  410fff:	xchg   esp,eax
  411000:	stos   BYTE PTR es:[edi],al
  411001:	sbb    al,BYTE PTR [eax]
  411003:	add    DWORD PTR [edi],ecx
  411005:	sbb    esi,DWORD PTR [eax+eiz*2-0x6d]
  411009:	vhaddps ymm3,ymm7,YMMWORD PTR [ebp+0xf63fe3b]
  411011:	xchg   esp,eax
  411012:	retf   
  411013:	or     eax,0xa9fe165d
  411018:	xor    ebp,0x9036943f
  41101e:	shr    DWORD PTR [eax+ebp*8],cl
  411021:	data16 (bad) 
  411023:	cmp    eax,esp
  411025:	lods   eax,DWORD PTR ds:[esi]
  411026:	mov    ecx,gs
  411028:	std    
  411029:	sbb    bh,dh
  41102b:	sub    esp,edx
  41102d:	sub    esi,DWORD PTR [ecx+0x1e]
  411030:	sub    al,BYTE PTR [edx]
  411032:	push   0xffffffa7
  411034:	mov    ah,0x90
  411036:	mov    bh,0x6c
  411038:	jno    0x410fdc
  41103a:	stc    
  41103b:	xchg   esp,eax
  41103c:	sub    DWORD PTR [ebp-0x375cf7ac],ecx
  411042:	fstp   TBYTE PTR [edi+0x69475b5a]
  411048:	jmp    0x50411f50
  41104d:	jns    0x41102d
  41104f:	retf   0xe593
  411052:	dec    ebx
  411053:	cmp    BYTE PTR [ecx],bh
  411055:	jge    0x410fe6
  411057:	add    DWORD PTR [edi],ebx
  411059:	call   0x5be584ec
  41105e:	mov    bl,0x4f
  411060:	ret    
  411061:	xor    al,0x22
  411063:	mov    WORD PTR [ecx],ss
  411065:	push   es
  411066:	sbb    edi,esi
  411068:	mov    bl,0xbe
  41106a:	nop
  41106b:	jmp    0x411018
  41106d:	dec    esp
  41106e:	or     dl,BYTE PTR [eax-0x5d]
  411071:	pop    ss
  411072:	sbb    esi,edx
  411074:	pslld  mm1,QWORD PTR [esi+0x70007cc5]
  41107b:	and    ecx,DWORD PTR [edx-0x60bf96e9]
  411081:	pop    ss
  411082:	fwait
  411083:	(bad)  
  411085:	and    ecx,DWORD PTR [edx+0x1b]
  411088:	jb     0x4110a1
  41108a:	jnp    0x4110b3
  41108c:	push   ds
  41108d:	int    0xa8
  41108f:	mul    BYTE PTR [ebx+0x5a31f600]
  411095:	(bad)  
  411096:	clc    
  411097:	sbb    ch,BYTE PTR [ecx+0x17]
  41109a:	pop    ebx
  41109b:	sub    al,0x4a
  41109d:	fst    QWORD PTR cs:[eax+0x1abe175f]
  4110a4:	rcr    BYTE PTR [eax],0xcd
  4110a7:	xor    DWORD PTR ds:0xc9bac5bd,ebx
  4110ad:	mov    ebx,0x8f0045af
  4110b2:	add    BYTE PTR [edi+ecx*4],bl
  4110b5:	das    
  4110b6:	cmp    DWORD PTR [ebx+ebx*2-0x7116ff6b],0x87370450
  4110c1:	inc    ebx
  4110c2:	in     al,0x38
  4110c4:	sbb    eax,DWORD PTR [eax+0x5b805c08]
  4110ca:	adc    eax,0x895b1a85
  4110cf:	sub    edx,DWORD PTR [eax]
  4110d1:	sti    
  4110d2:	or     BYTE PTR [edx+0x4],dl
  4110d5:	xchg   esp,eax
  4110d6:	jge    0x411080
  4110d8:	or     bl,BYTE PTR [eax]
  4110da:	sub    edi,esp
  4110dc:	add    edx,DWORD PTR [ebp+eax*4+0x16c0cb63]
  4110e3:	push   ebp
  4110e4:	mov    bl,0xb3
  4110e6:	nop
  4110e7:	int    0x4
  4110e9:	xchg   esp,eax
  4110ea:	mov    edi,DWORD PTR [eax]
  4110ec:	mov    WORD PTR [eax],fs
  4110ee:	adc    BYTE PTR [ebx+0x11],ah
  4110f1:	xchg   edx,eax
  4110f2:	jl     0x4110f3
  4110f4:	sbb    BYTE PTR [eax-0x6a9e0000],dl
  4110fa:	or     DWORD PTR [ebp+esi*8+0x40],0xffffffac
  4110ff:	(bad)  
  411100:	jns    0x4110d5
  411102:	adc    eax,0x5614e9fe
  411107:	push   cs
  411108:	les    eax,FWORD PTR fs:[eax]
  41110b:	add    cl,ch
  41110d:	sbb    bh,BYTE PTR [ebp-0x7c708df5]
  411113:	push   esp
  411114:	loope  0x411116
  411116:	and    esi,eax
  411118:	(bad)  
  411119:	cwde   
  41111a:	dec    ebx
  41111b:	jge    0x4110dc
  41111d:	test   dl,0x6e
  411120:	add    cl,ch
  411122:	xchg   edi,eax
  411123:	mov    cl,0x56
  411125:	inc    ebx
  411126:	test   BYTE PTR [esp+esi*2+0x781df091],0xc0
  41112e:	nop
  41112f:	add    BYTE PTR [ebx-0x1556fd4],cl
  411135:	(bad)  
  411136:	(bad)  
  411137:	lds    ebp,FWORD PTR [ecx-0x21]
  41113a:	dec    edi
  41113b:	push   ds
  41113c:	sbb    cl,BYTE PTR [ebp+ebp*4-0x6feb01ea]
  411143:	mov    DWORD PTR [ecx+ebp*1],edi
  411146:	add    esi,edx
  411148:	jmp    DWORD PTR [ecx-0x50]
  41114b:	push   cs
  41114c:	(bad)  
  41114e:	test   al,0x16
  411150:	(bad)  
  411151:	jg     0x4111ac
  411153:	push   es
  411154:	test   BYTE PTR ds:0x6a000097,dl
  41115a:	xor    edi,esi
  41115c:	call   edx
  41115e:	hlt    
  41115f:	test   BYTE PTR [ebp+ebx*4+0x0],dh
  411163:	push   ds
  411164:	inc    eax
  411165:	push   eax
  411166:	nop
  411167:	add    BYTE PTR [ebx+0x7899ba4],cl
  41116d:	add    BYTE PTR [eax],ah
  41116f:	gs (bad) 
  411171:	push   edx
  411172:	rcl    BYTE PTR es:[eax+0x50],cl
  411176:	bound  edx,QWORD PTR [ecx+0x7d000092]
  41117c:	add    DWORD PTR [ebp-0x7501d740],eax
  411182:	jne    0x411159
  411184:	in     al,0x56
  411186:	jg     0x4111f4
  411188:	add    DWORD PTR [ecx+0x2e3a145],ecx
  41118e:	sbb    DWORD PTR [eax],0xffffffed
  411191:	(bad)  
  411192:	imul   eax,DWORD PTR ds:0x590737e,0x3df90ce9
  41119c:	add    DWORD PTR [ebx+0x6844145],ecx
  4111a2:	lea    ecx,[eax-0x474af24]
  4111a8:	dec    edx
  4111a9:	dec    esi
  4111aa:	jmp    FWORD PTR [ebp+eiz*4-0x69c20002]
  4111b1:	mov    esi,0x73843075
  4111b6:	loopne 0x41120d
  4111b8:	ss jge 0x4111bc
  4111bb:	std    
  4111bc:	mov    DWORD PTR [ebx-0x8],eax
  4111bf:	es adc eax,0x1356581
  4111c5:	push   0x69
  4111c7:	jo     0x41118f
  4111c9:	dec    esi
  4111ca:	jmp    DWORD PTR [edx]
  4111cc:	clc    
  4111cd:	push   esi
  4111ce:	call   0x400b08
  4111d3:	data16 xchg dh,dh
  4111d6:	mov    edi,DWORD PTR [eax-0x8]
  4111d9:	mov    DWORD PTR [ebp+0x49],eax
  4111dc:	xchg   esi,eax
  4111dd:	hlt    
  4111de:	mov    ecx,0x3e860500
  4111e3:	add    BYTE PTR [edx-0x6b7a10ac],dh
  4111e9:	fld    DWORD PTR [edi]
  4111eb:	inc    esp
  4111ec:	lds    ebp,FWORD PTR [ecx+0x641d0342]
  4111f2:	mov    dl,BYTE PTR ss:[esp+ebx*4+0x458f7342]
  4111fa:	xor    DWORD PTR [edi],0xffffff94
  4111fd:	dec    ebp
  4111fe:	std    
  4111ff:	mov    eax,0xffc27554
  411204:	jmp    0x11cdc360
  411209:	pop    edx
  41120a:	pop    ss
  41120b:	(bad)  
  41120c:	jae    0x411268
  41120e:	test   DWORD PTR [esp+ebx*4+0x79],eax
  411212:	sub    bh,BYTE PTR [edi-0x7de9ec87]
  411218:	push   eax
  411219:	ss pop ss
  41121b:	je     0x41126d
  41121d:	lahf   
  41121e:	adc    bh,dh
  411220:	arpl   WORD PTR [ebx],bx
  411222:	nop
  411223:	test   DWORD PTR [ebx+0x4b],0x27bbf580
  41122a:	rcr    dl,1
  41122c:	sbb    BYTE PTR [edi+0x6],cl
  41122f:	test   BYTE PTR [ecx],dl
  411231:	sub    al,BYTE PTR [edx]
  411233:	add    BYTE PTR [esi+0x307488d7],ch
  411239:	repnz rcr edx,1
  41123c:	cld    
  41123d:	aad    0x1b
  41123f:	dec    DWORD PTR [ebx]
  411241:	(bad)  
  411242:	cwde   
  411243:	repz add BYTE PTR [ecx],dl
  411246:	fisttp QWORD PTR [ebx]
  411248:	push   eax
  411249:	pop    ss
  41124a:	arpl   WORD PTR [ebx],cx
  41124c:	push   edi
  41124d:	pop    ds
  41124e:	pop    esp
  41124f:	mov    bl,0x8a
  411251:	push   ecx
  411252:	or     eax,0x92e0a22a
  411257:	push   ss
  411258:	adc    esp,0x15
  41125b:	add    dh,bh
  41125d:	xlat   BYTE PTR ds:[ebx]
  41125e:	call   DWORD PTR [esp+ecx*4-0x43b2ffbf]
  411265:	mov    ebx,0x940460bd
  41126a:	test   DWORD PTR [ebx+0x61ab440b],ebp
  411270:	ds pop ebx
  411272:	xchg   DWORD PTR [ebx+0x3c7eac07],ebp
  411278:	pop    ss
  411279:	call   0x2912:0x9590287c
  411280:	stos   BYTE PTR es:[edi],al
  411281:	sti    
  411282:	test   DWORD PTR [ebx-0x3bd714e1],ebx
  411288:	sbb    edi,DWORD PTR [ebx+0x13]
  41128b:	arpl   cx,ax
  41128d:	fwait
  41128e:	mov    al,0xb5
  411290:	mov    dl,BYTE PTR [ecx-0x50]
  411293:	jno    0x411256
  411295:	(bad)
  411299:	pop    edx
  41129a:	adc    ebp,DWORD PTR [esp+eax*2-0x39]
  41129e:	(bad)  
  41129f:	out    dx,al
  4112a0:	inc    edx
  4112a1:	pop    ss
  4112a2:	aaa    
  4112a3:	pop    esp
  4112a4:	push   es
  4112a5:	inc    ebx
  4112a6:	(bad)  
  4112a7:	lock mov al,BYTE PTR [eax]
  4112aa:	enter  0x6934,0x4b
  4112ae:	xor    ch,BYTE PTR [eax]
  4112b0:	inc    eax
  4112b1:	cmp    DWORD PTR [edx],ebp
  4112b3:	adc    eax,ebp
  4112b5:	nop
  4112b6:	fwait
  4112b7:	sub    BYTE PTR [edx+0x61131a63],al
  4112bd:	nop
  4112be:	add    esi,DWORD PTR [ebx+0x4508b11]
  4112c4:	jb     0x4112d1
  4112c6:	adc    esi,DWORD PTR fs:[edi]
  4112c9:	or     al,0xf
  4112cb:	cli    
  4112cc:	ds pop ss
  4112ce:	arpl   WORD PTR [eax],cx
  4112d0:	fiadd  DWORD PTR [ebx+0x49]
  4112d3:	dec    ecx
  4112d4:	stos   BYTE PTR es:[edi],al
  4112d5:	or     edx,DWORD PTR [edi+ecx*8+0x3d5c3a8]
  4112dc:	add    cl,ch
  4112de:	add    al,0x86
  4112e0:	jmp    0x41134a
  4112e2:	jae    0x41134f
  4112e4:	add    ecx,ebp
  4112e6:	xchg   edi,eax
  4112e7:	iret   
  4112e8:	mov    edi,0x52fad521
  4112ed:	out    0x24,al
  4112ef:	push   ebx
  4112f0:	push   ebp
  4112f1:	mov    dh,0x1c
  4112f3:	dec    esp
  4112f4:	jae    0x41133c
  4112f6:	mov    dl,BYTE PTR [edx]
  4112f8:	(bad)  
  4112f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4112fa:	outs   dx,DWORD PTR ds:[esi]
  4112fb:	aas    
  4112fc:	je     0x4112a7
  4112fe:	xchg   edi,eax
  4112ff:	jge    0x4112c0
  411301:	mov    ?,WORD PTR [edi-0x68160999]
  411307:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411308:	pusha  
  411309:	ins    BYTE PTR es:[edi],dx
  41130a:	and    al,0x42
  41130c:	push   edi
  41130d:	add    DWORD PTR [eax],eax
  41130f:	jmp    0x4f3c:0x1ee8ff0a
  411316:	je     0x41132c
  411318:	mov    ?,esi
  41131a:	inc    BYTE PTR [ecx-0x6817453f]
  411320:	add    BYTE PTR [eax-0x35a13a4],al
  411326:	out    0xa9,al
  411328:	xchg   dl,al
  41132a:	rcl    ecx,1
  41132c:	jns    0x41132e
  41132e:	jmp    0xa67b2677
  411333:	xchg   ecx,eax
  411334:	jl     0x4112f6
  411336:	jmp    0xc1c413d2
  41133b:	add    DWORD PTR [edx],0x987184
  411341:	add    BYTE PTR [ebx+0x36],al
  411344:	test   DWORD PTR [ebp+ebp*4+0x40],esi
  411348:	mov    DWORD PTR [ebp+ecx*4-0x58],edi
  41134c:	lahf   
  41134d:	imul   cl
  41134f:	xchg   edi,eax
  411350:	add    DWORD PTR [ecx+edx*4+0x20],0xffffffa8
  411355:	add    BYTE PTR [eax],al
  411357:	cmp    BYTE PTR [ecx-0x7d],0x74
  41135b:	pop    edx
  41135c:	jmp    0x41135b
  41135e:	push   eax
  41135f:	scas   al,BYTE PTR es:[edi]
  411360:	test   DWORD PTR [ebx-0x8],ebx
  411363:	xor    al,0x69
  411365:	repnz inc eax
  411368:	ins    DWORD PTR es:[edi],dx
  411369:	push   cs
  41136a:	inc    eax
  41136b:	lods   eax,DWORD PTR ds:[esi]
  41136c:	xchg   edx,eax
  41136d:	mov    esi,0x437ab175
  411372:	hlt    
  411373:	add    ch,ch
  411375:	fs mov esi,eax
  411378:	std    
  411379:	jp     0x4113f6
  41137b:	clc    
  41137c:	inc    ebp
  41137d:	push   cs
  41137e:	mov    BYTE PTR [ecx],al
  411380:	jge    0x4113b2
  411382:	std    
  411383:	jmp    0x411403
  411385:	add    dh,0xff
  411388:	add    al,0x52
  41138a:	out    dx,al
  41138b:	xor    DWORD PTR [ebp+0x171073eb],0x5
  411392:	lea    eax,[ebp-0x73]
  411395:	arpl   WORD PTR [esi-0x1],cx
  411398:	inc    eax
  411399:	inc    ecx
  41139a:	adc    al,0x40
  41139c:	ins    DWORD PTR es:[edi],dx
  41139d:	add    dl,0xc
  4113a0:	pop    ss
  4113a1:	dec    ebx
  4113a2:	mov    esi,DWORD PTR [ebp-0x1f]
  4113a5:	push   esp
  4113a6:	out    0x9,al
  4113a8:	(bad)  
  4113a9:	std    
  4113aa:	dec    DWORD PTR [edx-0x7bc7a0d]
  4113b0:	mov    eax,0x7089e652
  4113b5:	int3   
  4113b6:	mov    eax,DWORD PTR [ebp-0x21637]
  4113bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4113bd:	push   edx
  4113be:	ror    BYTE PTR [ebp+0x4587f4c0],cl
  4113c4:	sbb    DWORD PTR [edx-0x7d],edi
  4113c7:	ins    BYTE PTR es:[edi],dx
  4113c8:	cmp    ah,ch
  4113ca:	std    
  4113cb:	push   eax
  4113cc:	push   0x94c7ce3a
  4113d1:	in     al,0x3b
  4113d3:	add    al,0x94
  4113d5:	daa    
  4113d6:	add    al,bh
  4113d8:	add    BYTE PTR [ecx-0x79],bl
  4113db:	add    DWORD PTR [eax],eax
  4113dd:	xchg   esp,eax
  4113de:	daa    
  4113df:	cmp    eax,DWORD PTR [eax+edi*4+0x24]
  4113e3:	add    al,BYTE PTR [eax]
  4113e5:	xchg   esp,eax
  4113e6:	jg     0x4113e6
  4113e8:	call   0xf5a8:0x5c872795
  4113ef:	inc    ebx
  4113f0:	aaa    
  4113f1:	pop    ecx
  4113f2:	pop    ds
  4113f3:	add    edx,DWORD PTR [ebp+0x6342a5d4]
  4113f9:	lods   al,BYTE PTR ds:[esi]
  4113fa:	xchg   edi,eax
  4113fb:	adc    dh,bh
  4113fd:	fwait
  4113fe:	jno    0x4113b4
  411400:	pop    edx
  411401:	pop    ebp
  411402:	fdiv   st(6),st
  411404:	jmp    eax
  411406:	mov    ds:0x96708026,al
  41140b:	add    BYTE PTR [eax],al
  41140d:	xchg   esp,eax
  41140e:	dec    edx
  41140f:	lods   al,BYTE PTR ds:[esi]
  411410:	push   esi
  411411:	dec    BYTE PTR [ebp+eax*4+0x74]
  411415:	adc    al,0x52
  411417:	sub    bl,BYTE PTR [ecx+0x33021a6a]
  41141d:	bound  edi,QWORD PTR [eax-0x7b]
  411420:	inc    esp
  411421:	adc    al,0x6a
  411423:	test   DWORD PTR [esp+ecx*8-0x301ede4],edi
  41142a:	sbb    eax,DWORD PTR [edx]
  41142c:	add    BYTE PTR [edx+esi*1],dl
  41142f:	inc    edx
  411430:	xchg   BYTE PTR [ebp+0x2bf78519],dl
  411436:	das    
  411437:	xchg   BYTE PTR [edx],cl
  411439:	xchg   esi,eax
  41143a:	sbb    DWORD PTR [edx],eax
  41143c:	cmp    eax,DWORD PTR [eax]
  41143e:	push   edx
  41143f:	pop    ds
  411440:	xchg   BYTE PTR [edx],al
  411442:	xchg   esi,eax
  411443:	sbb    DWORD PTR [edx],eax
  411445:	mov    edx,ebx
  411447:	jmp    0x9d285e
  41144c:	sti    
  41144d:	ret    
  41144e:	sti    
  41144f:	js     0x411474
  411451:	xor    al,0xae
  411453:	inc    esi
  411454:	in     eax,0x87
  411456:	cli    
  411457:	add    ecx,ebp
  411459:	add    ebp,DWORD PTR [esi-0x4a]
  41145c:	jae    0x4113ef
  41145e:	xlat   BYTE PTR ds:[ebx]
  41145f:	test   al,0x90
  411461:	icebp  
  411462:	leave  
  411463:	add    cl,ch
  411465:	jle    0x411439
  411467:	mov    al,0x6d
  411469:	cdq    
  41146a:	ror    DWORD PTR [edi],cl
  41146c:	sti    
  41146d:	dec    edi
  41146e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41146f:	shr    al,0xce
  411472:	fcos   
  411474:	ins    BYTE PTR es:[edi],dx
  411475:	dec    ebx
  411476:	xchg   esp,eax
  411477:	add    cl,ch
  411479:	mov    ecx,0xfb37d49
  41147e:	inc    esp
  41147f:	jge    0x41142c
  411481:	and    esp,esp
  411483:	prefetcht0 BYTE PTR [ecx+0x5763ff4b]
  41148a:	xchg   esp,eax
  41148b:	add    cl,ch
  41148d:	jle    0x41145f
  41148f:	and    BYTE PTR [ecx-0x4],dh
  411492:	and    BYTE PTR [ebp-0x4ae749d0],dh
  411498:	sbb    al,0xb6
  41149a:	sar    DWORD PTR [ecx+0x7b],cl
  41149d:	or     ebx,DWORD PTR [edx-0x4f]
  4114a0:	test   BYTE PTR [eax+0x6bff1300],cl
  4114a6:	mov    ss,WORD PTR [eax+eax*1+0x20d87ee9]
  4114ad:	jno    0x4114aa
  4114af:	or     BYTE PTR [ebp-0x4adf4a4c],dh
  4114b5:	test   al,0xb5
  4114b7:	mov    ebp,0xa81336f0
  4114bc:	sub    ch,al
  4114be:	cwde   
  4114bf:	dec    edi
  4114c0:	mov    al,0xbd
  4114c2:	mov    ah,0xcb
  4114c4:	test   edi,edi
  4114c6:	test   al,0x96
  4114c8:	test   DWORD PTR [ebx-0x18],ecx
  4114cb:	xchg   edi,eax
  4114cc:	add    BYTE PTR [ebx+0xf035024],al
  4114d2:	fs loopne 0x4114d4
  4114d5:	(bad)  
  4114d6:	call   0x6314d945
  4114db:	fistp  QWORD PTR [ebx+0x54]
  4114de:	xchg   ecx,eax
  4114df:	and    DWORD PTR [edi+0xeb7e8ff],esp
  4114e5:	dec    esi
  4114e6:	jbe    0x4114e8
  4114e8:	xlat   BYTE PTR ds:[ebx]
  4114e9:	test   BYTE PTR [ecx-0x17e17a6a],ch
  4114ef:	xchg   edi,eax
  4114f0:	add    BYTE PTR [ebx+0x77a8fa4],cl
  4114f6:	fs in  al,dx
  4114f8:	inc    esi
  4114f9:	push   ecx
  4114fa:	mov    bh,0xe7
  4114fc:	or     eax,0x4f0d0d50
  411501:	push   cs
  411502:	fs xchg edi,eax
  411504:	(bad)  
  411505:	(bad)  
  411506:	call   0xe8061f0b
  41150b:	bound  edi,QWORD PTR [edi+0x7d]
  41150e:	push   esp
  41150f:	inc    ebp
  411510:	inc    ecx
  411511:	mov    ah,0xfe
  411513:	xchg   esp,eax
  411514:	scas   eax,DWORD PTR es:[edi]
  411515:	mov    ebp,0x852bb8fe
  41151a:	mov    edi,0xff270cde
  41151f:	call   0x1d858ebb
  411524:	rcl    BYTE PTR [edi+ebp*8-0x7a009850],1
  41152b:	push   ds
  41152c:	xchg   edi,eax
  41152d:	add    BYTE PTR [eax],al
  41152f:	jo     0x411554
  411531:	and    cl,BYTE PTR [edx+0x7b7c7c2c]
  411537:	call   0xd5b58ccf
  41153c:	dec    edi
  41153d:	xchg   edi,eax
  41153e:	add    eax,DWORD PTR [eax]
  411540:	and    bh,BYTE PTR [eax-0x6a]
  411543:	add    ch,bh
  411545:	add    DWORD PTR [ecx+0x458bd175],ecx
  41154b:	or     dh,ch
  41154d:	inc    esi
  41154e:	jmp    0x481:0x68bd632
  411555:	adc    edi,esi
  411557:	add    cl,ch
  411559:	jne    0x41157a
  41155b:	dec    ecx
  41155c:	mov    BYTE PTR [ebp-0x77],ch
  41155f:	push   eax
  411560:	in     eax,0x8c
  411562:	shr    al,0xf6
  411565:	loope  0x411564
  411567:	(bad)  
  411568:	cmp    ah,al
  41156a:	jb     0x4115cb
  41156c:	add    BYTE PTR [edi+0x40ffc683],bl
  411572:	dec    ebp
  411573:	imul   al
  411575:	or     eax,0x37fffddf
  41157a:	fsub   st(1),st
  41157c:	aaa    
  41157d:	ss je  0x411586
  411580:	mov    dl,0xed
  411582:	mov    esp,es
  411584:	call   0x3ef6a3
  411589:	clc    
  41158a:	les    esi,FWORD PTR [edx+0x3d]
  41158d:	sub    ebp,DWORD PTR [ebx-0x2]
  411590:	add    ch,0xef
  411593:	out    0x6d,al
  411595:	aad    0xef
  411597:	std    
  411598:	mov    ecx,DWORD PTR [ebp+0x4374f485]
  41159e:	inc    edi
  41159f:	or     eax,0xf84b8d92
  4115a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4115a6:	outs   dx,DWORD PTR ds:[esi]
  4115a7:	fdivr  st,st(7)
  4115a9:	inc    edx
  4115aa:	mov    edx,esi
  4115ac:	push   esi
  4115ad:	xchg   ebp,eax
  4115ae:	rcr    DWORD PTR [ebx-0xbcbcd01],1
  4115b4:	test   BYTE PTR [esi+0x75],dl
  4115b7:	adc    dh,BYTE PTR [ebx]
  4115b9:	xchg   esp,eax
  4115ba:	push   edi
  4115bb:	call   0x940:0x3d7a9bf
  4115c2:	aam    0xb
  4115c4:	out    0x75,eax
  4115c6:	popa   
  4115c7:	paddd  mm7,mm7
  4115ca:	sbb    bl,dl
  4115cc:	cmc    
  4115cd:	add    esp,esp
  4115cf:	pop    ss
  4115d0:	mov    al,BYTE PTR [eax]
  4115d2:	push   ecx
  4115d3:	imul   eax,DWORD PTR [ebx-0x34f8ffbc],0x46
  4115da:	nop
  4115db:	test   BYTE PTR es:[edx-0x1d],ch
  4115df:	jge    0x4115f0
  4115e1:	mov    dl,BYTE PTR [ecx-0x7d]
  4115e4:	pcmpeqd mm3,QWORD PTR [edx+edx*4-0x1834b006]
  4115ec:	jmp    0x4115ec
  4115ee:	pop    ecx
  4115ef:	xchg   DWORD PTR [ebx+0x44],edi
  4115f2:	fcom   DWORD PTR [ecx+0x6417efbd]
  4115f8:	or     ebp,DWORD PTR es:[edi+0x1f]
  4115fc:	inc    DWORD PTR [ecx-0x1f04198]
  411602:	andps  xmm1,XMMWORD PTR [esi]
  411605:	mov    ah,BYTE PTR [ebp-0x19014e97]
  41160b:	xor    DWORD PTR [ebx+0x44],edi
  41160e:	ins    BYTE PTR es:[edi],dx
  41160f:	lahf   
  411610:	cli    
  411611:	dec    edi
  411612:	jnp    0x41165d
  411614:	cli    
  411615:	mov    bl,cl
  411617:	aad    0x7b
  411619:	pop    es
  41161a:	(bad)  
  41161b:	repnz mov cl,0x7
  41161e:	pcmpgtw mm1,QWORD PTR [esi]
  411621:	(bad)  
  411622:	loope  0x411605
  411624:	jnp    0x41162d
  411626:	in     al,0xa
  411628:	mov    al,0x17
  41162a:	pop    ds
  41162b:	pop    ebp
  41162c:	and    cl,BYTE PTR [edx+0x500f698c]
  411632:	mov    WORD PTR [eax],es
  411634:	jb     0x4115ff
  411636:	add    BYTE PTR [edi],ch
  411638:	js     0x41162a
  41163a:	mov    bl,0x2a
  41163c:	mov    dl,0xe0
  41163e:	jp     0x411600
  411640:	or     BYTE PTR [edx-0x48],al
  411643:	ret    
  411644:	sbb    BYTE PTR [edi],dh
  411646:	adc    al,0x12
  411648:	or     al,0xbd
  41164a:	cdq    
  41164b:	fisttp DWORD PTR [ebx]
  41164d:	fld    TBYTE PTR [edi-0x51173f5b]
  411653:	pop    ecx
  411654:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411655:	scas   eax,DWORD PTR es:[edi]
  411656:	inc    ebx
  411657:	dec    eax
  411658:	ja     0x4115e6
  41165a:	test   edi,edi
  41165c:	inc    esp
  41165d:	out    0x3,eax
  41165f:	xchg   esp,eax
  411660:	scas   eax,DWORD PTR es:[edi]
  411661:	ss mov bh,0x73
  411664:	loopne 0x411643
  411666:	ret    
  411667:	shl    DWORD PTR [ebx+0x8bf728],cl
  41166d:	adc    esp,0x7ae90138
  411673:	ret    
  411674:	jns    0x411659
  411676:	and    ebx,DWORD PTR [eax]
  411678:	or     al,0xed
  41167a:	xchg   DWORD PTR [edi],edx
  41167c:	add    ch,cl
  41167e:	add    ebp,DWORD PTR [esi]
  411680:	test   al,0x5b
  411682:	cdq    
  411683:	retf   
  411684:	test   al,0x50
  411686:	xlat   BYTE PTR ds:[ebx]
  411687:	xchg   DWORD PTR [eax],eax
  411689:	jmp    0xbbbf0327
  41168e:	daa    
  41168f:	jmp    0x4116a9
  411691:	cld    
  411692:	pop    ss
  411693:	jnp    0x4116a0
  411695:	jno    0x41169e
  411697:	pop    ss
  411698:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411699:	adc    al,0x4
  41169b:	add    BYTE PTR [edi],bl
  41169d:	cmp    dh,BYTE PTR [edi-0x48cf2f80]
  4116a3:	mov    dh,0x5a
  4116a5:	mov    al,0xf4
  4116a7:	mov    BYTE PTR [ebx],dl
  4116a9:	sti    
  4116aa:	arpl   ax,cx
  4116ac:	xchg   esp,eax
  4116ad:	add    BYTE PTR [eax],al
  4116af:	jmp    0x9cce1972
  4116b4:	(bad)  
  4116b5:	mov    al,0x56
  4116b7:	out    0xe7,al
  4116b9:	jmp    0xe831:0x842aa984
  4116c0:	xchg   edi,eax
  4116c1:	add    BYTE PTR [edx+0x33],ch
  4116c4:	adc    eax,0xa2c7a754
  4116c9:	or     dl,BYTE PTR [edi-0x2f]
  4116cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4116cd:	push   cs
  4116ce:	(bad)  
  4116cf:	call   0x6338db52
  4116d4:	(bad)  
  4116d5:	mov    edx,0x199438fe
  4116da:	sti    
  4116db:	jmp    0x3cce1777
  4116e0:	mov    ah,0xb1
  4116e2:	dec    edi
  4116e3:	mov    fs,WORD PTR [eax]
  4116e5:	out    dx,eax
  4116e6:	test   BYTE PTR [ecx-0x16147c2e],ch
  4116ec:	xchg   edi,eax
  4116ed:	add    BYTE PTR [ebx+0x776742c],cl
  4116f3:	pop    esp
  4116f4:	cld    
  4116f5:	sbb    dl,BYTE PTR [ecx-0x2f]
  4116f8:	(bad)  
  4116f9:	icebp  
  4116fa:	aas    
  4116fb:	jmp    0x6c5120e7
  411700:	add    BYTE PTR [edi-0x6],dl
  411703:	test   BYTE PTR [ebx],ah
  411705:	xchg   edi,eax
  411706:	add    BYTE PTR [eax],al
  411708:	das    
  411709:	pop    esp
  41170a:	or     eax,DWORD PTR [eax]
  41170c:	out    dx,al
  41170d:	loope  0x4116d3
  41170f:	(bad)  
  411710:	cdq    
  411711:	adc    al,0x85
  411713:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411714:	das    
  411715:	mov    cl,BYTE PTR [edx]
  411717:	dec    edi
  411718:	xchg   ebx,eax
  411719:	dec    ebx
  41171a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41171b:	mov    WORD PTR [edi+edx*2+0xc],ds
  41171f:	(bad)  
  411720:	push   ss
  411721:	jg     0x4116e3
  411723:	fisttp WORD PTR [esi]
  411725:	mov    ch,BYTE PTR [eax-0x423fffa8]
  41172b:	or     eax,0xfffde38e
  411730:	push   DWORD PTR [esi+0x116aee38]
  411736:	push   edi
  411737:	mov    edx,DWORD PTR [ebp+0x45]
  41173a:	dec    edi
  41173b:	push   ecx
  41173c:	lea    esp,[eax+0x4afffd0c]
  411742:	dec    edi
  411743:	push   0x50d3b600
  411748:	mov    DWORD PTR [eax-0x52f77614],edi
  41174e:	sti    
  41174f:	dec    edi
  411750:	or     al,0x70
  411752:	les    esi,FWORD PTR [ebx+0x5c]
  411755:	push   ebx
  411756:	jg     0x411713
  411758:	or     BYTE PTR [edx],bh
  41175a:	cld    
  41175b:	std    
  41175c:	add    BYTE PTR [eax-0x7f],bh
  41175f:	push   es
  411760:	dec    DWORD PTR [edx]
  411762:	cld    
  411763:	jb     0x41177d
  411765:	add    BYTE PTR [edx+0x1a088bb4],bh
  41176b:	cld    
  41176c:	std    
  41176d:	data16 ds cmc 
  411770:	ds je  0x411751
  411773:	cmp    BYTE PTR [esi+0x6b4da02],0x66
  41177a:	inc    eax
  41177b:	lds    esi,FWORD PTR [ebx-0x11]
  41177e:	rol    DWORD PTR [eax-0x3ebfca],cl
  411784:	xor    al,al
  411786:	xor    ah,al
  411788:	jb     0x4117bc
  41178a:	or     BYTE PTR [edx-0x43500fa],al
  411790:	dec    esi
  411791:	xor    DWORD PTR [ebp-0x3eb27405],0xffffffec
  411798:	xchg   esp,eax
  411799:	fdivr  DWORD PTR [edx+0x1c082fb]
  41179f:	sbb    DWORD PTR [ecx],esi
  4117a1:	rcl    BYTE PTR [edi+edi*2+0x17d47442],0xc2
  4117a9:	mov    ecx,fs
  4117ab:	or     ebx,DWORD PTR [edx]
  4117ad:	sub    DWORD PTR [edx+ecx*1+0xb],0xb968eea
  4117b5:	jns    0x411777
  4117b7:	and    al,0x7f
  4117b9:	not    DWORD PTR [ebp-0x2e020054]
  4117bf:	sub    cl,dl
  4117c1:	pop    esp
  4117c2:	and    esp,DWORD PTR [edx]
  4117c4:	test   BYTE PTR [ebp+0x1b],al
  4117c7:	cmp    cl,BYTE PTR [ebx]
  4117c9:	mov    al,BYTE PTR [eax]
  4117cb:	pop    ecx
  4117cc:	inc    edi
  4117cd:	ja     0x4117d6
  4117cf:	fs dec edx
  4117d1:	mov    cl,0x7
  4117d3:	paddq  mm4,QWORD PTR [ebx]
  4117d6:	mov    dl,BYTE PTR [ecx+0x4b]
  4117d9:	ja     0x4117e2
  4117db:	inc    esp
  4117dc:	bound  esi,QWORD PTR [ecx+0xbe41f07]
  4117e2:	mov    cl,BYTE PTR [edi+eax*8-0x5b7baff4]
  4117e9:	inc    edx
  4117ea:	mov    bl,BYTE PTR [ecx+0x7f]
  4117ed:	ja     0x4117f6
  4117ef:	fwait
  4117f0:	mov    ds:0x91c3fd1c,eax
  4117f5:	mov    dl,0xfe
  4117f7:	gs pop ds
  4117f9:	ja     0x411801
  4117fb:	dec    ebx
  4117fc:	mov    ds:0x4c1f07b2,al
  411801:	push   ss
  411802:	imul   ecx,DWORD PTR [ebx+0x4f],0xb9aab61a
  411809:	or     ebx,DWORD PTR [esi-0xe]
  41180c:	bound  edi,QWORD PTR [ecx]
  41180e:	ret    0xb1e5
  411811:	inc    esi
  411812:	jae    0x4117a9
  411814:	sbb    esi,ecx
  411816:	add    eax,DWORD PTR [esi]
  411818:	sub    BYTE PTR [eax+0x3c017bff],bl
  41181e:	or     DWORD PTR [edx+0x8],ebp
  411821:	adc    dl,cl
  411823:	popa   
  411824:	or     BYTE PTR ds:0x89188d18,dl
  41182a:	pop    ss
  41182b:	push   edx
  41182c:	or     BYTE PTR [eax],dl
  41182e:	and    eax,0xfd084e00
  411833:	sbb    ah,al
  411835:	adc    dh,ch
  411837:	or     ebp,DWORD PTR [ebp+0x2d4b0101]
  41183d:	or     ch,ah
  41183f:	lods   eax,DWORD PTR ds:[esi]
  411840:	push   esi
  411841:	mov    al,0x71
  411843:	or     al,0x18
  411845:	xor    ebx,DWORD PTR [ebp+ebx*8-0x76]
  411849:	dec    edi
  41184a:	jmp    0x16e5:0x3c4118a1
  411851:	or     eax,edi
  411853:	nop
  411854:	test   al,0xf7
  411856:	jge    0x41181e
  411858:	xchg   ebp,eax
  411859:	xor    DWORD PTR [eax+0x69fd678c],0xc
  411860:	inc    ebx
  411861:	(bad)  
  411862:	in     eax,0x1b
  411864:	test   BYTE PTR [eax],al
  411866:	jmp    0x8084536e
  41186b:	test   bl,dl
  41186d:	pop    es
  41186e:	call   0xc5c4ef1d
  411873:	add    ebp,DWORD PTR [esi]
  411875:	clc    
  411876:	adc    BYTE PTR [ebx-0x30572c2a],ch
  41187c:	jecxz  0x41180a
  41187e:	sar    dl,cl
  411880:	loop   0x41187c
  411882:	(bad)  
  411883:	into   
  411884:	fisttp DWORD PTR [edx+ecx*8+0x690e66b1]
  41188b:	or     eax,0xfad98dc3
  411890:	inc    edx
  411891:	mov    edx,0x7c0086ea
  411896:	mov    bh,bh
  411898:	mov    esp,0x91f88394
  41189d:	add    al,0xfc
  41189f:	imul   ebp,ebp,0xbad0023f
  4118a5:	pop    esi
  4118a6:	dec    esi
  4118a7:	or     DWORD PTR [ecx+ebp*1+0x37],esp
  4118ab:	gs push 0xffffffa3
  4118ae:	clc    
  4118af:	jbe    0x4118a2
  4118b1:	xchg   edx,eax
  4118b2:	push   cs
  4118b3:	mov    WORD PTR [ebp-0x58],?
  4118b6:	aaa    
  4118b7:	jmp    0x1a87:0xbea8bcc9
  4118be:	or     al,BYTE PTR [esi+ebx*2]
  4118c1:	sub    BYTE PTR [edx],al
  4118c3:	imul   BYTE PTR [ebx+edx*1+0x10]
  4118c7:	enter  0x1ec2,0x74
  4118cb:	pop    eax
  4118cc:	outs   dx,BYTE PTR ds:[esi]
  4118cd:	xor    eax,0x26ecfa82
  4118d2:	cli    
  4118d3:	add    dh,BYTE PTR [edi-0x7f0f6c84]
  4118d9:	adc    al,BYTE PTR [ecx+0x1]
  4118dc:	ret    0xaa56
  4118df:	gs ins BYTE PTR es:[edi],dx
  4118e1:	test   al,0x93
  4118e3:	add    ch,BYTE PTR [edx-0x61]
  4118e6:	add    BYTE PTR [ecx+0x69422dde],cl
  4118ec:	loope  0x41193e
  4118ee:	(bad)  
  4118ef:	push   edi
  4118f0:	stos   BYTE PTR es:[edi],al
  4118f1:	add    eax,0x85c2f5d2
  4118f6:	xchg   ebx,eax
  4118f7:	inc    ebp
  4118f8:	out    0x0,al
  4118fa:	data16 stc 
  4118fc:	gs mov dl,0x6d
  4118ff:	xchg   ebx,eax
  411900:	cmp    eax,0xf882501a
  411905:	or     al,0x5
  411907:	cld    
  411908:	imul   ebp,ebx,0x6a1619ef
  41190e:	mov    al,ds:0x680074da
  411913:	out    0xe,eax
  411915:	data16 out dx,al
  411917:	hlt    
  411918:	aaa    
  411919:	ja     0x411973
  41191b:	addr16 hlt 
  41191d:	or     dl,BYTE PTR [edx-0x4d]
  411920:	(bad)  
  411921:	lea    ecx,[ecx]
  411923:	or     dh,cl
  411925:	sub    DWORD PTR [edi+0x77b70efb],0x7f
  41192c:	div    DWORD PTR [eax]
  41192e:	cs loope 0x411995
  411931:	test   DWORD PTR [ebp+esi*2-0x37a7cff],eax
  411938:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411939:	add    bh,BYTE PTR [ecx-0x692108fe]
  41193f:	(bad)  
  411940:	imul   ecx,DWORD PTR [eax],0x5e3589d5
  411946:	out    dx,al
  411947:	push   ebp
  411948:	mov    esp,ebp
  41194a:	mov    dh,0x45
  41194c:	or     al,BYTE PTR [ecx-0xf6af]
  411952:	std    
  411953:	dec    edi
  411954:	mov    esp,0x1ef00
  411959:	push   edi
  41195a:	add    al,0x32
  41195c:	jo     0x4119d7
  41195e:	add    BYTE PTR [ebx-0x51f78c09],cl
  411964:	in     al,0x66
  411966:	call   0x1dd:0x7d81f802
  41196d:	je     0x411993
  41196f:	and    dh,BYTE PTR [esi+0xe]
  411972:	sbb    DWORD PTR [eax-0x10],0xfffffffc
  411976:	inc    DWORD PTR [edx-0x4]
  411979:	mov    WORD PTR [ebp-0x205c7],es
  41197f:	adc    eax,0xbd00ff42
  411984:	test   ah,dl
  411986:	mov    esp,DWORD PTR [esi-0x73]
  411989:	xor    esp,0xffffff94
  41198c:	lods   eax,DWORD PTR ds:[esi]
  41198d:	or     dh,bh
  41198f:	jl     0x4119c1
  411991:	add    al,0x1
  411993:	xchg   esp,eax
  411994:	cwde   
  411995:	int3   
  411996:	inc    ebx
  411997:	aad    0x6d
  411999:	mov    ebp,0xa3fb974
  41199e:	add    BYTE PTR [edi+edx*1+0x459c7275],dl
  4119a5:	pushf  
  4119a6:	add    DWORD PTR [ecx],edx
  4119a8:	fs cli 
  4119aa:	push   edi
  4119ab:	ins    BYTE PTR es:[edi],dx
  4119ac:	inc    ecx
  4119ad:	dec    edx
  4119ae:	(bad)  
  4119af:	push   ebx
  4119b0:	mov    ds:0x5a8f07be,al
  4119b5:	(bad)  
  4119b6:	je     0x411a2d
  4119b8:	mov    edi,0x17940011
  4119bd:	mov    al,ds:0xef8e9a38
  4119c2:	push   cs
  4119c3:	add    bl,ah
  4119c5:	adc    al,0x7b
  4119c7:	dec    esp
  4119c8:	nop
  4119c9:	(bad)  
  4119ca:	jp     0x4119cc
  4119cc:	or     edx,ebx
  4119ce:	std    
  4119cf:	dec    edi
  4119d0:	addr16 aas 
  4119d2:	add    eax,0x523e0b98
  4119d7:	add    bh,ch
  4119d9:	sbb    ah,dl
  4119db:	mov    edi,0xc13aed5b
  4119e0:	mov    al,ds:0xf88aad17
  4119e5:	xchg   edi,eax
  4119e6:	push   ss
  4119e7:	pop    es
  4119e8:	xchg   ebp,eax
  4119e9:	pop    ss
  4119ea:	add    dl,BYTE PTR [esi+0x43]
  4119ed:	scas   al,BYTE PTR es:[edi]
  4119ee:	adc    BYTE PTR [eax],al
  4119f0:	xchg   esp,eax
  4119f1:	pop    ss
  4119f2:	jnp    0x4119e3
  4119f4:	pop    ds
  4119f5:	push   esi
  4119f6:	mov    al,ds:0xfe0cdc3a
  4119fb:	xor    esp,edx
  4119fd:	sbb    DWORD PTR [edi-0x4da614f2],0xf10021fe
  411a07:	jbe    0x411a52
  411a09:	cli    
  411a0a:	mov    edx,0x5566d71b
  411a0f:	or     ch,bh
  411a11:	add    BYTE PTR [edx],al
  411a13:	or     al,0xe2
  411a15:	jmp    FWORD PTR [edx]
  411a17:	mov    bl,0x7b
  411a19:	sub    DWORD PTR [edx+0x30989402],0x2
  411a20:	xchg   esp,eax
  411a21:	add    BYTE PTR [ecx+eax*8-0x6d],bl
  411a25:	mov    al,0x92
  411a27:	add    eax,0x79fa00
  411a2c:	ja     0x411a07
  411a2e:	cld    
  411a2f:	mov    al,0x40
  411a31:	cdq    
  411a32:	mov    esp,0x18d0b1a7
  411a37:	dec    edx
  411a38:	push   eax
  411a39:	inc    edx
  411a3a:	add    al,0x69
  411a3c:	xchg   BYTE PTR [edi+0x32de7d00],cl
  411a42:	mov    ds,esp
  411a44:	test   al,dh
  411a46:	or     dh,ah
  411a48:	pop    es
  411a49:	and    al,BYTE PTR [ecx]
  411a4b:	ins    BYTE PTR es:[edi],dx
  411a4c:	and    DWORD PTR [ebx],0xfb07d503
  411a52:	(bad)
  411a56:	inc    esi
  411a57:	call   0x6c41ae5d
  411a5c:	add    DWORD PTR [ebx],0xfb07b503
  411a62:	push   ecx
  411a63:	call   0xe791ae6c
  411a68:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411a69:	inc    ecx
  411a6a:	cmp    DWORD PTR [edx+0x61acdbfc],ebp
  411a70:	sbb    BYTE PTR [edx*1+0x9402ec],dl
  411a77:	sbb    ch,BYTE PTR [esi+0x1e80a14]
  411a7d:	xchg   esp,eax
  411a7e:	add    BYTE PTR [eax],al
  411a80:	sti    
  411a81:	or     DWORD PTR [ebp-0x75],esi
  411a84:	loope  0x411a1d
  411a86:	add    bh,dh
  411a88:	popw   ds
  411a8a:	adc    ecx,DWORD PTR [eax-0x3974ff54]
  411a90:	rcr    dh,0x39
  411a93:	jle    0x411b11
  411a95:	loope  0x411a2e
  411a97:	ja     0x411a9e
  411a99:	jo     0x411af0
  411a9b:	or     esi,DWORD PTR [ebx+0x7]
  411a9e:	xchg   ebx,eax
  411a9f:	mov    WORD PTR [edi],es
  411aa1:	push   0xfffffff5
  411aa3:	sbb    edi,ebp
  411aa5:	cs xchg ebx,eax
  411aa7:	add    ecx,DWORD PTR [ebx-0x1fa7f94]
  411aad:	push   ds
  411aae:	js     0x411a9b
  411ab0:	jmp    edi
  411ab2:	xchg   edi,eax
  411ab3:	xchg   esi,eax
  411ab4:	add    esi,DWORD PTR [ebx+0x74f7b4cc]
  411aba:	adc    eax,0x92fefd1b
  411abf:	sbb    ecx,DWORD PTR [ebp-0x18]
  411ac2:	cwde   
  411ac3:	add    BYTE PTR [ecx+0x40bf9f6c],al
  411ac9:	aas    
  411aca:	push   ebp
  411acb:	mov    WORD PTR ds:0x8cfb04de,ds
  411ad1:	sub    al,0xa8
  411ad3:	mov    bl,0x55
  411ad5:	pop    esp
  411ad6:	jl     0x411af7
  411ad8:	sti    
  411ad9:	(bad)  
  411ada:	call   0xfffe:0x97b9443a
  411ae1:	call   0xaf3eb575
  411ae6:	xchg   edx,eax
  411ae7:	jg     0x411aa8
  411ae9:	sbb    al,0xea
  411aeb:	mov    esp,0x8d84143a
  411af0:	mov    eax,ds:0xa55700da
  411af5:	pop    edx
  411af6:	mov    al,ds:0xffffff55
  411afb:	inc    esi
  411afc:	vpsadbw xmm4,xmm2,XMMWORD PTR [eax+0x1983ea87]
  411b04:	or     ecx,DWORD PTR [ecx-0x76ab36bb]
  411b0a:	jae    0x411b85
  411b0c:	xchg   DWORD PTR [edx+0x1e],edx
  411b0f:	adc    DWORD PTR [ebx-0x77],0xf927757d
  411b16:	add    esi,DWORD PTR [edx+0x653554d]
  411b1c:	mov    DWORD PTR [edi+0x30e5c145],0x8cfe7ccc
  411b26:	inc    ebp
  411b27:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411b28:	dec    ebp
  411b29:	push   0xa70ba40
  411b2e:	inc    DWORD PTR [eax]
  411b30:	push   es
  411b31:	std    
  411b32:	adc    eax,0x3e0ff9
  411b37:	mov    al,0xbd
  411b39:	jb     0x411b79
  411b3b:	inc    ah
  411b3d:	xchg   BYTE PTR [ebp+0x3a],cl
  411b40:	ss dec ebx
  411b42:	or     al,0xb3
  411b44:	sbb    al,0xd
  411b46:	mov    dh,0x0
  411b48:	sti    
  411b49:	mov    DWORD PTR [ebp+0x25],eax
  411b4c:	mov    BYTE PTR [edx+0x15],dl
  411b4f:	sbb    eax,0xeb08122e
  411b54:	inc    ecx
  411b55:	std    
  411b56:	add    BYTE PTR [eax],0x58
  411b59:	sti    
  411b5a:	add    dh,BYTE PTR [ebp-0xf]
  411b5d:	ret    
  411b5e:	inc    ebx
  411b5f:	(bad)  
  411b60:	in     eax,dx
  411b61:	cmp    DWORD PTR ds:[ebp-0x7],ecx
  411b65:	outs   dx,DWORD PTR ds:[esi]
  411b66:	fisttp QWORD PTR [ebp-0xb10b50]
  411b6c:	xor    ah,0xfd
  411b6f:	jne    0x411b5a
  411b71:	cld    
  411b72:	jae    0x411b7c
  411b74:	xchg   esp,eax
  411b75:	push   0xffffffee
  411b77:	dec    ebx
  411b78:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411b79:	xlat   BYTE PTR ds:[ebx]
  411b7a:	add    edi,edi
  411b7c:	dec    ecx
  411b7d:	cmp    DWORD PTR [eax-0x2e],0x63
  411b81:	or     BYTE PTR [edi+0x389e681d],0xe7
  411b88:	fstp   DWORD PTR [esi+0x2]
  411b8b:	add    BYTE PTR [ebx+0x39],al
  411b8e:	cmp    ecx,eax
  411b90:	mov    BYTE PTR [edi],dl
  411b92:	ja     0x411b93
  411b94:	push   ss
  411b95:	scas   eax,DWORD PTR es:[edi]
  411b96:	add    al,0x73
  411b98:	lahf   
  411b99:	pushf  
  411b9a:	inc    ebx
  411b9b:	jae    0x411b38
  411b9d:	add    edx,DWORD PTR [si]
  411ba0:	xor    al,0x25
  411ba2:	ret    0x56ff
  411ba5:	fs ja  0x411b93
  411ba8:	pop    ss
  411ba9:	mov    ebx,0xb70820b
  411bae:	scas   eax,DWORD PTR es:[edi]
  411baf:	imul   edx,DWORD PTR [esi+ecx*4+0xfd98a2b],0x724bfedd
  411bba:	add    ecx,DWORD PTR [edi+0x0]
  411bbd:	inc    ebx
  411bbe:	test   dh,ch
  411bc0:	imul   edx,DWORD PTR [edx+eax*1-0x7bccf073],0x1fa1fef6
  411bcb:	add    edx,DWORD PTR [esp+eiz*2]
  411bce:	add    eax,0x1f16ffc2
  411bd3:	add    esi,DWORD PTR [eax+ebx*4-0x1b]
  411bd7:	inc    ebx
  411bd8:	jmp    0x1794:0x17bd2ab1
  411bdf:	cmp    bh,0xc
  411be2:	push   ss
  411be3:	mov    ss,WORD PTR [edi]
  411be5:	pop    ss
  411be6:	fcmovnu st,st(7)
  411be8:	pop    es
  411be9:	jmp    0x411b80
  411beb:	mov    dh,0x23
  411bed:	nop
  411bee:	add    BYTE PTR [esi-0xf23a88a],ah
  411bf4:	mov    bl,0x63
  411bf6:	mov    al,0x2
  411bf8:	add    al,0xbc
  411bfa:	adc    eax,0x509403ea
  411bff:	out    0xa8,eax
  411c01:	push   cs
  411c02:	sbb    ebx,DWORD PTR [ebx]
  411c04:	inc    edx
  411c05:	xchg   DWORD PTR [eax],eax
  411c07:	sbb    al,0x79
  411c09:	mov    edi,0x587717ae
  411c0e:	or     BYTE PTR [eax+0x5df85078],bh
  411c14:	rcl    DWORD PTR [edx-0x340e00ea],cl
  411c1a:	add    BYTE PTR [ebx+eax*2+0x8],ah
  411c1e:	add    eax,0x6e0043f9
  411c23:	push   cs
  411c24:	jb     0x411be4
  411c26:	imul   ecx,DWORD PTR [edx-0x32f8713],0x60
  411c2d:	mov    ebp,0x3ae8b097
  411c32:	push   ebp
  411c33:	add    eax,0xed1eaee7
  411c38:	push   0x17
  411c3a:	fwait
  411c3b:	add    DWORD PTR [edi+ecx*1+0x43ba5743],0xffffffad
  411c43:	add    DWORD PTR [esi+eax*4+0x2b],ebp
  411c47:	lods   al,BYTE PTR ds:[esi]
  411c48:	fs mov esi,0x8dee5127
  411c4e:	sub    ecx,DWORD PTR [esp+ebp*1-0x2c89e6f4]
  411c55:	add    eax,ebp
  411c57:	(bad)  
  411c58:	cld    
  411c59:	inc    edi
  411c5a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411c5b:	inc    eax
  411c5c:	out    0x88,eax
  411c5e:	aam    0x75
  411c60:	jmp    0x411c97
  411c62:	aam    0xeb
  411c64:	in     al,dx
  411c65:	mov    ss,WORD PTR [edi-0xc]
  411c68:	add    BYTE PTR [eax-0x62],ah
  411c6b:	mov    DWORD PTR [ebx-0x4f],eax
  411c6e:	adc    DWORD PTR [edi+0x4],eax
  411c71:	pop    ecx
  411c72:	xchg   ecx,eax
  411c73:	pop    ebp
  411c74:	(bad)  
  411c75:	stos   DWORD PTR es:[edi],eax
  411c76:	pushf  
  411c77:	add    ch,bh
  411c79:	sbb    eax,0xe96a0c7c
  411c7e:	xchg   esi,eax
  411c7f:	jne    0x411ca5
  411c81:	fst    DWORD PTR [esi+0xd92475]
  411c87:	xchg   esi,eax
  411c88:	xor    ebp,edi
  411c8a:	fcom   QWORD PTR [ebx+0x12]
  411c8d:	inc    eax
  411c8e:	jmp    0x295af531
  411c93:	lahf   
  411c94:	fadd   st,st(2)
  411c96:	in     eax,dx
  411c97:	xchg   edi,eax
  411c98:	push   ebx
  411c99:	mov    DWORD PTR [ebp-0x6],eax
  411c9c:	add    BYTE PTR [ebx-0x2af585c],cl
  411ca2:	mov    esp,0xf14389a7
  411ca7:	xchg   esi,eax
  411ca8:	je     0x411cb6
  411caa:	mov    al,ss:0x89f513fd
  411cb0:	inc    eax
  411cb1:	add    BYTE PTR [eax+edx*2+0x73],ch
  411cb5:	add    ebp,DWORD PTR [edx+0x60]
  411cb8:	std    
  411cb9:	jmp    0x108437a8
  411cbe:	lods   al,BYTE PTR ds:[esi]
  411cbf:	pop    ecx
  411cc0:	or     al,0x0
  411cc2:	call   0xc30f:0xdc38d982
  411cc9:	inc    ecx
  411cca:	jmp    0x2f97537b
  411ccf:	inc    eax
  411cd0:	ret    
  411cd1:	inc    ecx
  411cd2:	jmp    0xcd551a94
  411cd7:	test   eax,0xb5110040
  411cdc:	cwde   
  411cdd:	ret    
  411cde:	sub    bl,BYTE PTR [eax-0x7bffe88d]
  411ce4:	and    BYTE PTR [edi+esi*4],cl
  411ce7:	mov    esi,0x1d8504
  411cec:	cmc    
  411ced:	mov    ecx,0x2074003f
  411cf2:	pushf  
  411cf3:	lds    ebp,FWORD PTR [esi+0x1505c604]
  411cf9:	enter  0x3f,0xbc
  411cfd:	pop    eax
  411cfe:	sti    
  411cff:	adc    eax,0x40151d
  411d04:	jae    0x411cab
  411d06:	or     BYTE PTR [edi-0x3cc8fb82],dh
  411d0c:	test   al,0x2a
  411d0e:	push   0x42a8d0
  411d13:	call   FWORD PTR [eax+0x7d4012d2]
  411d19:	aas    
  411d1a:	mov    edi,0xec6a8874
  411d1f:	jne    0x411d4e
  411d21:	add    dl,BYTE PTR [eax-0x1]
  411d24:	pop    eax
  411d25:	mov    esi,0xa77d4012
  411d2a:	or     BYTE PTR [edi-0x3cc8fdc2],dh
  411d30:	sub    BYTE PTR [esi],al
  411d32:	xor    al,al
  411d34:	xchg   BYTE PTR [eax],bl
  411d36:	xchg   DWORD PTR [ecx+ebx*2+0xa],ecx
  411d3a:	push   0x28
  411d3c:	mov    ds:0xfe102475,al
  411d41:	add    dh,BYTE PTR [eax]
  411d43:	call   FWORD PTR [ebp+0x7d1bd8fa]
  411d49:	cli    
  411d4a:	fcomp  DWORD PTR [ebx+0x7f]
  411d4d:	or     DWORD PTR [eax],eax
  411d4f:	push   ebx
  411d50:	add    dh,bl
  411d52:	fidivr WORD PTR [eax]
  411d54:	sbb    eax,0x3fc615
  411d59:	push   0x94be563a
  411d5e:	scas   eax,DWORD PTR es:[edi]
  411d5f:	lds    eax,FWORD PTR [ecx-0x6c]
  411d62:	xor    eax,0xd9e813ff
  411d67:	inc    ecx
  411d68:	add    BYTE PTR [esp+ebx*8-0x18a83c67],ch
  411d6f:	jbe    0x411d88
  411d71:	or     eax,0x57b50dcd
  411d76:	out    0x8a,eax
  411d78:	sbb    ebx,DWORD PTR [esi+edx*2-0xae2ffbd]
  411d7f:	popf   
  411d80:	ret    
  411d81:	push   edi
  411d82:	out    0xc7,eax
  411d84:	add    ebx,DWORD PTR [ebp*4+0x15950043]
  411d8b:	call   DWORD PTR [ebx]
  411d8d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411d8e:	fld    DWORD PTR [ecx+0x0]
  411d91:	inc    edx
  411d92:	dec    eax
  411d93:	adc    BYTE PTR [ebp-0x3ec318a9],dh
  411d99:	or     DWORD PTR [eax],edx
  411d9b:	ins    BYTE PTR es:[edi],dx
  411d9c:	rol    BYTE PTR [ecx],1
  411d9e:	test   al,0x1
  411da0:	std    
  411da1:	test   eax,0x94401637
  411da6:	add    al,bl
  411da8:	je     0x411d33
  411daa:	iret   
  411dab:	or     eax,0x51e7d476
  411db0:	std    
  411db1:	mov    DWORD PTR [ebx+0x16],ebp
  411db4:	inc    eax
  411db5:	add    BYTE PTR [edx+ecx*2-0x18284af0],dl
  411dbc:	cmp    al,0xc1
  411dbe:	shr    ebx,0x33
  411dc1:	shr    BYTE PTR [edi],0xf4
  411dc4:	mov    WORD PTR [eax+esi*2-0x11],cs
  411dc8:	imul   ebp,DWORD PTR [eax],0x33
  411dcb:	jae    0x411df2
  411dcd:	adc    bh,al
  411dcf:	div    BYTE PTR [edx]
  411dd1:	std    
  411dd2:	inc    esp
  411dd3:	neg    cl
  411dd5:	sbb    DWORD PTR [eax+eax*1-0x22],edx
  411dd9:	fld    TBYTE PTR [ebp-0x3e]
  411ddc:	out    dx,eax
  411ddd:	add    esp,DWORD PTR [edi-0x77]
  411de0:	ret    
  411de1:	test   al,dh
  411de3:	sub    esi,DWORD PTR ds:0xd77b0d59
  411de9:	mov    esp,fs
  411deb:	cmp    BYTE PTR [esi-0x17178889],0x70
  411df2:	jecxz  0x411df0
  411df4:	jmp    0x411dfd
  411df6:	pop    sp
  411df8:	je     0x411e40
  411dfa:	call   0xd32d534e
  411dff:	std    
  411e00:	xchg   esi,eax
  411e01:	add    BYTE PTR [ecx],bl
  411e03:	rcl    BYTE PTR [eax+ecx*1],0x86
  411e07:	rcl    BYTE PTR [edx-0x1084ea84],0x3
  411e0e:	sbb    eax,0x5419b733
  411e13:	add    BYTE PTR [ecx],al
  411e15:	or     al,0x39
  411e17:	je     0x411e0d
  411e19:	pop    eax
  411e1a:	add    BYTE PTR [edi],bl
  411e1c:	inc    esi
  411e1d:	xor    edx,DWORD PTR [ebx-0x77]
  411e20:	jbe    0x411e01
  411e22:	add    BYTE PTR [ebx-0x80],ch
  411e25:	and    ecx,DWORD PTR [edi]
  411e27:	adc    eax,0xe803f37e
  411e2c:	or     eax,0xdcd78e96
  411e31:	xchg   edi,eax
  411e32:	add    al,ch
  411e34:	or     al,0x2e
  411e36:	fst    DWORD PTR ds:0x6d86f3c5
  411e3c:	jne    0x411e30
  411e3e:	pop    eax
  411e3f:	pop    ds
  411e40:	inc    esi
  411e41:	or     edx,DWORD PTR [ebx-0x1b]
  411e44:	sti    
  411e45:	xor    eax,0x9e0d5084
  411e4a:	mov    ss,edi
  411e4c:	in     al,dx
  411e4d:	xchg   edi,eax
  411e4e:	add    BYTE PTR [eax+0x3cf60010],ah
  411e54:	jmp    0xf6c5:0x8a38642c
  411e5b:	pop    esp
  411e5c:	rcl    DWORD PTR [eax-0x22],0x8d
  411e60:	or     al,0xfd
  411e62:	pop    esp
  411e63:	nop
  411e64:	std    
  411e65:	ss into 
  411e67:	popf   
  411e68:	and    BYTE PTR [edx],dl
  411e6a:	sub    DWORD PTR [eax+0x835c07f],ebx
  411e70:	cmp    ch,0x3d
  411e73:	mov    DWORD PTR [edi-0x27],edi
  411e76:	xor    eax,0x3a086685
  411e7b:	imul   edi,ebp,0x13
  411e7e:	fld    DWORD PTR [eax]
  411e80:	mov    eax,ds:0xcc6a0040
  411e85:	or     al,0xb0
  411e87:	call   0xac0878e6
  411e8c:	test   BYTE PTR [eax],al
  411e8e:	push   ebx
  411e8f:	jb     0x411e35
  411e91:	dec    ebx
  411e92:	push   ecx
  411e93:	jbe    0x411eb2
  411e95:	or     ch,bh
  411e97:	aam    0x5f
  411e99:	push   cs
  411e9a:	inc    eax
  411e9b:	jmp    0xd63f16b6
  411ea0:	fild   DWORD PTR [ecx-0x7e7caab5]
  411ea6:	loopne 0x411ea1
  411ea8:	push   eax
  411ea9:	loopne 0x411ebe
  411eab:	cdq    
  411eac:	std    
  411ead:	add    DWORD PTR [edx-0x1a],ebp
  411eb0:	inc    DWORD PTR [eax]
  411eb2:	add    cl,ch
  411eb4:	pop    ss
  411eb5:	std    
  411eb6:	jae    0x411e99
  411eb8:	add    al,0x3f
  411eba:	cld    
  411ebb:	adc    DWORD PTR [edi-0x4],eax
  411ebe:	std    
  411ebf:	push   ds
  411ec0:	sbb    al,0xc0
  411ec2:	je     0x411e8c
  411ec4:	lods   eax,DWORD PTR ds:[esi]
  411ec5:	add    BYTE PTR [edx-0x17],ch
  411ec8:	cmp    ch,BYTE PTR [edi+0xc]
  411ecb:	add    dh,ch
  411ecd:	aad    0x89
  411ecf:	inc    ebp
  411ed0:	sub    edi,esp
  411ed2:	or     al,0xff
  411ed4:	sub    bh,dl
  411ed6:	test   al,al
  411ed8:	mov    eax,ds:0xf945890b
  411edd:	out    0xbb,al
  411edf:	cld    
  411ee0:	jmp    0x8d6:0x1b0f9
  411ee7:	mov    DWORD PTR [ebp-0x37],eax
  411eea:	out    0xaf,al
  411eec:	cld    
  411eed:	(bad)  
  411eef:	xor    al,al
  411ef1:	mov    dh,0xcd
  411ef3:	ret    0xed08
  411ef6:	push   edi
  411ef7:	xchg   esp,ebp
  411ef9:	outs   dx,BYTE PTR ds:[esi]
  411efa:	jmp    0x411f28
  411efc:	cmp    DWORD PTR [eax+0x18],0x0
  411f00:	push   esi
  411f01:	mov    eax,ds:0x98f2e86f
  411f06:	add    eax,0x70b13c00
  411f0b:	push   0xffffff8d
  411f0d:	sbb    ah,0x50
  411f10:	push   ebx
  411f11:	add    eax,0x2afff9b2
  411f16:	add    eax,0x74
  411f19:	sahf   
  411f1a:	jge    0x411f95
  411f1c:	or     BYTE PTR [ebp-0x79],bh
  411f1f:	xor    DWORD PTR [eax],esi
  411f21:	cmp    DWORD PTR [esi],0x0
  411f24:	je     0x411fa1
  411f26:	push   0x660ff08
  411f2b:	mov    DWORD PTR [ebp-0x4b],eax
  411f2e:	dec    ebp
  411f2f:	sti    
  411f30:	(bad)  
  411f31:	inc    cl
  411f33:	or     al,0x83
  411f35:	sub    BYTE PTR [edx],cl
  411f37:	add    BYTE PTR [ebx+edi*1+0x68],dh
  411f3b:	or     bh,bh
  411f3d:	xor    BYTE PTR [edx],cl
  411f3f:	mov    DWORD PTR [ebp-0x63],eax
  411f42:	dec    ebp
  411f43:	sti    
  411f44:	(bad)  
  411f45:	xchg   esp,eax
  411f46:	lds    cx,DWORD PTR [eax+eax*1]
  411f4a:	pop    ss
  411f4b:	lea    edx,[ecx]
  411f4d:	add    BYTE PTR [eax+0x2b0867f1],ch
  411f53:	jne    0x411f66
  411f55:	mov    ebx,ecx
  411f57:	call   DWORD PTR [eax-0x3]
  411f5a:	inc    edx
  411f5b:	lds    ecx,FWORD PTR [si]
  411f5e:	jle    0x411f4f
  411f60:	cld    
  411f61:	jae    0x411f03
  411f63:	ins    BYTE PTR es:[edi],dx
  411f64:	inc    ebp
  411f65:	lock fs rcl dh,cl
  411f69:	adc    eax,0xcc438edb
  411f6f:	pop    ss
  411f70:	dec    edi
  411f71:	call   0xfe3cdc66
  411f76:	out    dx,eax
  411f77:	(bad)  
  411f79:	jae    0x411eff
  411f7b:	stos   BYTE PTR es:[edi],al
  411f7c:	jne    0x411f8a
  411f7e:	rcr    DWORD PTR [esp+ecx*1],cl
  411f81:	std    
  411f82:	xchg   DWORD PTR [edx+0x27a64015],ebx
  411f88:	add    al,0xf5
  411f8a:	fsub   st(6),st
  411f8c:	shl    ebp,0xcc
  411f8f:	and    ecx,ecx
  411f91:	ret    0xe784
  411f94:	imul   eax,DWORD PTR [eax-0x2fe186c],0xfd09c320
  411f9e:	test   eax,0x94400ff7
  411fa3:	pop    edx
  411fa4:	js     0x411fca
  411fa6:	cwde   
  411fa7:	push   edx
  411fa8:	adc    eax,0x1a7a61c
  411fad:	cmc    
  411fae:	add    BYTE PTR [esi+ebx*8-0x3f],cl
  411fb2:	cmc    
  411fb3:	dec    esp
  411fb4:	and    eax,0x5ec90008
  411fb9:	lock sub DWORD PTR [eax-0x2d],0x504b80
  411fc1:	es push ecx
  411fc3:	loop   0x41202d
  411fc5:	addr16 add al,0x94
  411fc8:	add    BYTE PTR [ecx+0x7efdae00],al
  411fce:	add    edx,DWORD PTR [eax+eax*1+0x8a7fd67]
  411fd5:	ins    BYTE PTR es:[edi],dx
  411fd6:	inc    edi
  411fd7:	and    al,ch
  411fd9:	adc    edi,ecx
  411fdb:	sbb    ecx,edi
  411fdd:	arpl   sp,ax
  411fdf:	mov    BYTE PTR [eax+0x74],ah
  411fe2:	inc    esi
  411fe3:	or     BYTE PTR [eax+0x6c],dl
  411fe6:	jbe    0x411fec
  411fe8:	call   0xf93b1ff0
  411fed:	arpl   bx,ax
  411fef:	push   0xa3d8fa50
  411ff4:	pop    ebx
  411ff5:	mov    bl,0x74
  411ff7:	pop    ebx
  411ff8:	test   DWORD PTR [esp+esi*8],edi
  411ffb:	or     bp,WORD PTR [eax-0x3]
  411fff:	xchg   esp,eax
  412000:	add    BYTE PTR [edi+0x3],al
  412003:	inc    ecx
  412004:	cmp    al,0xe0
  412006:	pop    esi
  412007:	enter  0xeb70,0x38
  41200b:	lds    esi,FWORD PTR [ecx+0x2a]
  41200e:	push   esi
  41200f:	mov    esp,0xfc5a78
  412014:	test   eax,0xd538e686
  412019:	jae    0x411fe9
  41201b:	push   eax
  41201c:	cmovnp ebx,edi
  41201f:	push   edx
  412020:	jmp    0xf4f8:0x88766650
  412027:	aaa    
  412028:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412029:	inc    eax
  41202a:	out    0x86,eax
  41202c:	push   esp
  41202d:	ins    DWORD PTR es:[edi],dx
  41202e:	fisttp DWORD PTR [eax-0x39fdf729]
  412034:	out    0xfd,eax
  412036:	outs   dx,DWORD PTR ds:[esi]
  412037:	inc    esp
  412038:	cwde   
  412039:	jmp    0x41203b
  41203b:	aad    0x58
  41203d:	cs call 0xfe3744fe
  412043:	je     0x412017
  412045:	hlt    
  412046:	call   0xfe375d07
  41204b:	fist   DWORD PTR [edi+0x57]
  41204e:	pop    ecx
  41204f:	and    BYTE PTR [ebp-0x3],dl
  412052:	jmp    FWORD PTR [edi-0x78]
  412055:	jg     0x4120b4
  412057:	in     eax,0x12
  412059:	inc    esp
  41205a:	cld    
  41205b:	add    edi,ecx
  41205d:	stc    
  41205e:	std    
  41205f:	out    dx,al
  412060:	inc    esi
  412061:	clc    
  412062:	jmp    0x169:0x3f491ad0
  412069:	clc    
  41206a:	jno    0x412069
  41206c:	pop    ss
  41206d:	lock add dl,BYTE PTR [edi+edx*4+0x31]
  412072:	(bad)  
  412073:	dec    edi
  412074:	sbb    DWORD PTR [ebx],ecx
  412076:	jmp    0xf058216c
  41207b:	add    al,0x3c
  41207d:	xchg   ebx,eax
  41207e:	and    DWORD PTR [edx],0x304921e9
  412084:	jae    0x4120d6
  412086:	aaa    
  412087:	cmp    dh,BYTE PTR [ecx-0x5775fdb5]
  41208d:	(bad)  
  41208e:	scas   al,BYTE PTR es:[edi]
  41208f:	sar    BYTE PTR [ecx],0xaf
  412092:	ins    BYTE PTR es:[edi],dx
  412093:	and    al,0xf1
  412095:	inc    ecx
  412096:	call   0xf5e07af0
  41209b:	ret    0x97ed
  41209e:	push   ebx
  41209f:	mov    DWORD PTR [ebp-0x17],edi
  4120a2:	inc    edi
  4120a3:	or     eax,0x5108d79e
  4120a8:	jae    0x412089
  4120aa:	xor    BYTE PTR [esi-0x1a],dl
  4120ad:	inc    esi
  4120ae:	jae    0x4120c0
  4120b0:	fisub  WORD PTR [esi]
  4120b2:	mov    edi,0x929008b
  4120b7:	sti    
  4120b8:	movhlps xmm0,xmm4
  4120bb:	or     ebp,DWORD PTR [edi-0x2d4cf463]
  4120c1:	mov    ch,0x59
  4120c3:	sti    
  4120c4:	por    mm0,QWORD PTR [ecx-0x5]
  4120c8:	data16 xor ch,BYTE PTR [edx-0x4ecdf3bf]
  4120cf:	xlat   BYTE PTR ds:[ebx]
  4120d0:	add    ecx,DWORD PTR [edi-0x3df03601]
  4120d6:	out    dx,eax
  4120d7:	or     ebp,DWORD PTR [edi-0x7b67a9a]
  4120dd:	add    BYTE PTR [edx],dh
  4120df:	mov    dl,0xc0
  4120e1:	cmp    esi,DWORD PTR [ebx-0x2677cf5]
  4120e7:	add    al,BYTE PTR [eax]
  4120e9:	cvtpi2ps xmm0,mm3
  4120ec:	test   DWORD PTR [ebp-0x3],eax
  4120ef:	test   DWORD PTR [ebx+0x14],ebx
  4120f2:	jle    0x412154
  4120f4:	or     al,0x0
  4120f6:	(bad)  
  4120f7:	sar    DWORD PTR [edi+0x7d],cl
  4120fa:	mov    ebp,0x76267602
  4120ff:	inc    eax
  412100:	or     al,0x8b
  412102:	test   al,0x4
  412104:	inc    edx
  412106:	lea    eax,[edi-0x4ab173d]
  41210c:	sti    
  41210d:	push   DWORD PTR [edx-0x43bebc50]
  412113:	aas    
  412114:	or     BYTE PTR [edi],cl
  412116:	imul   eax,DWORD PTR [edx+0x30],0x1
  41211a:	js     0x412124
  41211c:	xchg   DWORD PTR [ebp-0x4f],eax
  41211f:	xor    eax,0xd48f1041
  412124:	xchg   DWORD PTR [edi-0x6b],ecx
  412127:	xchg   BYTE PTR [ebx+0x41],al
  41212a:	outs   dx,BYTE PTR ds:[esi]
  41212b:	dec    ecx
  41212c:	clc    
  41212d:	cmp    al,0x94
  41212f:	call   0x9d6032a4
  412134:	adc    DWORD PTR [ecx],eax
  412136:	push   edi
  412137:	push   ebx
  412138:	dec    DWORD PTR [ecx+0x3f146f87]
  41213e:	xlat   BYTE PTR ds:[ebx]
  41213f:	repnz fnstenv [edx+0x0]
  412143:	dec    edx
  412144:	inc    ebx
  412145:	and    eax,0x1694963c
  41214a:	mov    ecx,ebx
  41214c:	test   DWORD PTR [esi],0x8be62fc1
  412152:	adc    DWORD PTR [ecx+edi*8],ebx
  412155:	inc    esp
  412156:	inc    ecx
  412157:	outs   dx,DWORD PTR ds:[esi]
  412158:	pop    ds
  412159:	jae    0x412151
  41215b:	das    
  41215c:	int    0x35
  41215e:	add    al,0xa1
  412160:	fmul   DWORD PTR [esi-0x39155bbd]
  412166:	jmp    0x885492fd
  41216b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41216c:	sub    BYTE PTR [ebx+0x39],al
  41216f:	fcomp  QWORD PTR [ecx-0xe]
  412172:	mov    DWORD PTR [ecx-0x31],esp
  412175:	add    ecx,DWORD PTR [ebp-0x68]
  412178:	jo     0x4121bf
  41217a:	clc    
  41217b:	lahf   
  41217c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41217d:	pop    es
  41217e:	xchg   BYTE PTR [edx-0x52],ch
  412181:	idiv   ebp
  412183:	jb     0x412197
  412185:	leave  
  412186:	ret    0xe798
  412189:	dec    esi
  41218a:	mov    DWORD PTR [eax+0x6730e86a],esi
  412190:	xor    eax,0xdac6314f
  412195:	clc    
  412196:	inc    ebp
  412197:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  412199:	mov    DWORD PTR [ebx-0x54],edx
  41219c:	jo     0x4121eb
  41219e:	lock or eax,0x1187dc15
  4121a4:	jl     0x4121df
  4121a6:	push   ebx
  4121a7:	add    BYTE PTR [eax+0xd89f600],ah
  4121ad:	jmp    esi
  4121af:	add    ecx,DWORD PTR ds:0xc78adf43
  4121b5:	aam    0x60
  4121b7:	inc    edi
  4121b8:	js     0x412143
  4121ba:	mov    ah,0x13
  4121bc:	sbb    ecx,DWORD PTR [ebx+0x3f]
  4121bf:	cmp    eax,0x6065054e
  4121c4:	push   ebx
  4121c5:	cmc    
  4121c6:	out    0x8c,eax
  4121c8:	(bad)  
  4121ca:	jb     0x41221b
  4121cc:	cmp    al,0x8a
  4121ce:	jmp    0x4121e2
  4121d0:	or     al,0x43
  4121d2:	push   ss
  4121d3:	fistp  WORD PTR ds:[eax]
  4121d6:	fidivr WORD PTR [edi+0x6a]
  4121d9:	jmp    esi
  4121db:	add    ecx,DWORD PTR [edi]
  4121dd:	push   eax
  4121de:	inc    al
  4121e0:	xlat   BYTE PTR ds:[ebx]
  4121e1:	loopne 0x4121cb
  4121e3:	add    edx,DWORD PTR [eax+eax*1+0x3bcdf462]
  4121ea:	sti    
  4121eb:	jbe    0x41224b
  4121ed:	mov    DWORD PTR [eax+ebp*8+0x13],ebx
  4121f1:	jae    0x4121ce
  4121f3:	mov    WORD PTR [edi-0x14],cs
  4121f6:	bound  esi,QWORD PTR [esi-0x14]
  4121f9:	aaa    
  4121fa:	repz cmp al,0x67
  4121fd:	ds jb  0x4121d8
  412200:	popf   
  412201:	push   ebx
  412202:	xlat   BYTE PTR ds:[ebx]
  412203:	jbe    0x4121a7
  412205:	mov    DWORD PTR [eax+esi*8],ecx
  412208:	mov    WORD PTR [edx+eiz*8],es
  41220b:	outs   dx,BYTE PTR ds:[esi]
  41220c:	add    BYTE PTR [edx-0x5b891dc3],bl
  412212:	je     0x4121ad
  412214:	dec    eax
  412215:	ins    DWORD PTR es:[edi],dx
  412216:	lock adc al,0x2
  412219:	adc    esi,DWORD PTR [ebx-0x71]
  41221c:	mov    bl,BYTE PTR [edi]
  41221e:	lock ret 0xa476
  412222:	jb     0x412224
  412224:	jmp    0xe102:0x6af0781e
  41222b:	add    bh,ah
  41222d:	(bad)  
  41222e:	cmp    DWORD PTR [ebx+0x51],edi
  412231:	add    eax,DWORD PTR [edx]
  412233:	inc    edx
  412234:	inc    edx
  412235:	jae    0x4121b8
  412237:	arpl   WORD PTR [ecx-0x69],cx
  41223a:	mov    DWORD PTR [ebx-0x27],edi
  41223d:	xchg   esi,eax
  41223e:	ja     0x412234
  412240:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412241:	cwde   
  412242:	outs   dx,DWORD PTR ds:[esi]
  412243:	adc    al,0xb5
  412245:	cld    
  412246:	mov    DWORD PTR [ebx+0x45],edi
  412249:	sbb    BYTE PTR [eax-0x18],cl
  41224c:	rcr    dl,cl
  41224e:	clc    
  41224f:	sub    DWORD PTR [ecx],edi
  412251:	(bad)  
  412252:	xchg   DWORD PTR ds:[ebx+edx*2+0x7819538a],edi
  41225a:	dec    edi
  41225b:	clc    
  41225c:	jb     0x412228
  41225e:	fsubr  QWORD PTR [ecx]
  412260:	stc    
  412261:	xchg   ebx,eax
  412262:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412263:	xlat   BYTE PTR ds:[ebx]
  412264:	stos   DWORD PTR es:[edi],eax
  412265:	push   ds
  412266:	jo     0x41223c
  412268:	fidivr WORD PTR [edi+ebp*8]
  41226b:	cmp    edi,eax
  41226d:	mov    cl,BYTE PTR [eax]
  41226f:	mov    DWORD PTR [eax+eax*1],edi
  412272:	hlt    
  412273:	jnp    0x4122c0
  412275:	leave  
  412276:	(bad)  
  412277:	cli    
  412278:	mov    BYTE PTR [esp+eax*8],ch
  41227b:	jnp    0x4122d0
  41227d:	leave  
  41227e:	sbb    BYTE PTR [eax+0x1c],bh
  412281:	jmp    0x3c436892
  412286:	xchg   edi,eax
  412287:	xchg   DWORD PTR [ebp-0x16],ecx
  41228a:	push   ds
  41228b:	push   eax
  41228c:	adc    dh,dh
  41228e:	cli    
  41228f:	dec    edi
  412290:	adc    al,0xe2
  412292:	int    0x5
  412294:	lea    ebx,[edi-0x68]
  412297:	add    BYTE PTR [eax],al
  412299:	mov    ss,WORD PTR [ebp-0x28]
  41229c:	add    BYTE PTR [eax],0x98
  41229f:	sbb    BYTE PTR [eax],al
  4122a1:	mov    esp,DWORD PTR [eax-0x8f88f05]
  4122a7:	dec    ecx
  4122a8:	sti    
  4122a9:	mov    BYTE PTR [ecx+0x22],ch
  4122ac:	inc    ebx
  4122ad:	mov    cl,BYTE PTR [eax-0x9]
  4122b0:	shl    cl,0x71
  4122b3:	or     eax,ecx
  4122b5:	mov    BYTE PTR [ecx+0x22],bh
  4122b8:	mov    cl,BYTE PTR [ebp-0x23]
  4122bb:	jmp    0x5389:0xccc0c5
  4122c2:	call   0x4c84:0xa503ca06
  4122c9:	aaa    
  4122ca:	cmp    al,0x7e
  4122cc:	ret    
  4122cd:	add    al,ah
  4122cf:	jns    0x4122b5
  4122d1:	mov    eax,esi
  4122d3:	loop   0x41225a
  4122d5:	pop    ebp
  4122d6:	add    BYTE PTR [ebp+0x37],ch
  4122d9:	mov    edi,0x5185fe7d
  4122de:	loopne 0x412286
  4122e0:	dec    ecx
  4122e1:	clc    
  4122e2:	add    edi,DWORD PTR [ebp+eax*4+0x51]
  4122e6:	aam    0x76
  4122e8:	push   ecx
  4122e9:	fmul   QWORD PTR [ecx+0x1ae7df20]
  4122ef:	xchg   BYTE PTR [eax-0x8],cl
  4122f2:	jmp    0x4122f4
  4122f4:	jle    0x41236f
  4122f6:	hlt    
  4122f7:	retf   0x1462
  4122fa:	mov    esp,DWORD PTR [eax-0x1a8a7824]
  412300:	mov    BYTE PTR [ecx+0x18],bl
  412303:	out    dx,al
  412304:	retf   
  412305:	mov    BYTE PTR [edi+ecx*8],bl
  412308:	cmp    esi,DWORD PTR [edi]
  41230a:	dec    ebp
  41230b:	and    DWORD PTR [ebx-0x1a],ebp
  41230e:	mov    ecx,DWORD PTR [eax+0x2145fb0c]
  412314:	cld    
  412315:	dec    eax
  412316:	loopne 0x4122ac
  412318:	pop    esi
  412319:	dec    eax
  41231a:	hlt    
  41231b:	outs   dx,DWORD PTR ds:[esi]
  41231c:	adc    al,0xd4
  41231e:	jl     0x4122e4
  412320:	jns    0x412362
  412322:	clc    
  412323:	(bad)  
  412325:	adc    al,0x37
  412327:	loope  0x412398
  412329:	push   es
  41232a:	mov    WORD PTR [edx],gs
  41232c:	(bad)  
  41232d:	idiv   ch
  41232f:	(bad)  
  412330:	xor    eax,0xe9584b04
  412335:	dec    eax
  412336:	in     al,dx
  412337:	aam    0xe
  412339:	aas    
  41233a:	adc    al,0x0
  41233c:	fwait
  41233d:	push   ebx
  41233e:	jae    0x41233e
  412340:	arpl   WORD PTR [ebx],di
  412342:	mov    al,BYTE PTR [ebx-0x78]
  412345:	ins    DWORD PTR es:[edi],dx
  412346:	dec    eax
  412347:	fcomp  DWORD PTR [eax+eiz*8]
  41234a:	mov    al,ch
  41234c:	jmp    0x4122cf
  41234e:	pop    edx
  41234f:	(bad)  
  412350:	push   esi
  412351:	add    BYTE PTR [ecx+esi*1],al
  412354:	push   esp
  412355:	(bad)  
  412357:	push   ebx
  412358:	pop    ds
  412359:	cld    
  41235a:	sub    esp,0x8485edc
  412360:	cmpxchg DWORD PTR ds:0x4870c356,edx
  412367:	lock pop ds
  412369:	popf   
  41236a:	or     eax,0x505f0e89
  41236f:	adc    BYTE PTR [edi-0x38060051],dl
  412375:	leave  
  412376:	mov    esi,0xbbe7f143
  41237b:	inc    ebx
  41237c:	jmp    0x7571:0x1c4b8ae7
  412383:	ror    BYTE PTR ds:0xd539ec1d,0xda
  41238a:	xchg   BYTE PTR [edx+0x2901e795],bh
  412390:	int3   
  412391:	add    BYTE PTR [edx],bh
  412393:	mov    ecx,DWORD PTR [edi-0x3c]
  412396:	xchg   edx,eax
  412397:	add    DWORD PTR ds:0x5788f74c,ebx
  41239d:	shl    BYTE PTR [eax+0x4f],0x0
  4123a1:	mov    al,0x35
  4123a3:	xchg   edi,eax
  4123a4:	add    eax,0x3e8850f
  4123a9:	xchg   esp,eax
  4123aa:	and    eax,0xd0d78ba9
  4123af:	add    BYTE PTR [ecx],0xd
  4123b2:	cmp    esi,DWORD PTR [edi]
  4123b4:	push   0xffffffa4
  4123b6:	push   edi
  4123b7:	jo     0x412400
  4123b9:	push   0xadd7a487
  4123be:	mov    edi,0x3b1b00cc
  4123c3:	cmp    ecx,DWORD PTR [ecx-0x3cfd3b29]
  4123c9:	iret   
  4123ca:	std    
  4123cb:	pop    edi
  4123cc:	aas    
  4123cd:	push   0x91d78c85
  4123d2:	test   eax,0xa989ebb4
  4123d7:	mov    ah,0xe7
  4123d9:	sbb    eax,0x2950df73
  4123de:	imul   edx,DWORD PTR [ebx],0xfffffff5
  4123e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4123e2:	lock movsx ebx,WORD PTR [eax]
  4123e6:	icebp  
  4123e7:	inc    BYTE PTR [ecx+eax*2]
  4123ea:	push   ebx
  4123eb:	sti    
  4123ec:	mov    BYTE PTR [edi+0x4],bl
  4123ef:	bound  edi,QWORD PTR [edi]
  4123f1:	add    al,0x7d
  4123f3:	dec    esp
  4123f4:	loopne 0x41238a
  4123f6:	jge    0x41243c
  4123f8:	in     al,0x94
  4123fa:	adc    DWORD PTR [ebx],0x6
  4123fd:	push   edx
  4123fe:	mov    edx,0x6b1b03e6
  412403:	or     DWORD PTR [edx+0x70d83f00],0x3e
  41240a:	fdivr  QWORD PTR [ecx-0x3ed400]
  412410:	lds    esp,FWORD PTR [ecx+edx*4]
  412413:	add    dh,al
  412415:	sub    al,0xe4
  412417:	lock ret 
  412419:	and    al,0xac
  41241b:	lock test BYTE PTR [edx+0xc814e21],dh
  412422:	mov    ah,0xff
  412424:	jb     0x412412
  412426:	or     eax,0x89148810
  41242b:	jnp    0x41242d
  41242d:	mov    bl,0xca
  41242f:	in     eax,dx
  412430:	jae    0x412416
  412432:	mov    BYTE PTR [esp+eiz*8+0x52],al
  412436:	mov    al,BYTE PTR [ecx+0x7397497b]
  41243c:	add    eax,0xecaa2f
  412441:	popa   
  412442:	mov    ds:0x88ac3a15,al
  412447:	jae    0x41245c
  412449:	ds xchg edx,eax
  41244b:	loopne 0x4123d6
  41244d:	lods   al,BYTE PTR ds:[esi]
  41244e:	pop    edi
  41244f:	out    dx,al
  412450:	dec    ebx
  412451:	adc    edi,edx
  412453:	cmp    DWORD PTR [ebx+0x41],0x31438797
  41245a:	test   al,0xc4
  41245c:	jmp    0xd4850e4e
  412461:	jmp    0xc3256872
  412466:	pop    edx
  412467:	loopne 0x4124df
  412469:	icebp  
  41246a:	add    BYTE PTR ds:0x5a63fd44,bl
  412470:	adc    eax,0x440de7e9
  412475:	adc    eax,0x80ed5d73
  41247a:	pop    esp
  41247b:	in     eax,0x0
  41247d:	mov    BYTE PTR [edi+ecx*4],bh
  412480:	je     0x412485
  412482:	adc    ecx,DWORD PTR [ebp-0x3c]
  412485:	je     0x412487
  412487:	jecxz  0x41240c
  412489:	or     eax,DWORD PTR [edx]
  41248b:	inc    ebp
  41248c:	clc    
  41248d:	or     eax,0xfdf178c6
  412492:	xchg   DWORD PTR [eax-0x48],edi
  412495:	inc    esi
  412496:	xor    BYTE PTR [eax-0x10],0x0
  41249a:	(bad)  
  41249d:	add    BYTE PTR [eax],al
  41249f:	mov    ebp,0x2d080b83
  4124a4:	jno    0x41247a
  4124a6:	add    BYTE PTR [edi],ah
  4124a8:	sti    
  4124a9:	jae    0x4124ca
  4124ab:	std    
  4124ac:	jno    0x4124ac
  4124ae:	add    bh,dh
  4124b0:	dec    ecx
  4124b1:	adc    esi,DWORD PTR [eax+edi*2+0x1d]
  4124b5:	push   ecx
  4124b6:	sti    
  4124b7:	pop    ecx
  4124b8:	cld    
  4124b9:	or     eax,DWORD PTR [eiz*8+0x731487fb]
  4124c0:	mov    ecx,0x6b6cfe41
  4124c5:	push   ecx
  4124c6:	sti    
  4124c7:	sub    ecx,esi
  4124c9:	or     BYTE PTR [ebp*2+0xfe41b9],cl
  4124d0:	cmp    eax,0x8ff036b
  4124d5:	xlat   BYTE PTR ds:[ebx]
  4124d6:	mov    DWORD PTR [ebx+eax*2],eax
  4124d9:	bnd jno 0x4124a0
  4124dc:	xchg   edx,eax
  4124dd:	imul   ebx,esp,0x50f708ff
  4124e3:	dec    DWORD PTR [eax]
  4124e5:	repz call 0xfc34b699
  4124eb:	add    ecx,DWORD PTR ds:0x4b75c078
  4124f1:	bnd jno 0x4124d0
  4124f4:	loop   0x41249f
  4124f6:	dec    ecx
  4124f7:	call   0x10358cee
  4124fc:	or     cl,BYTE PTR [eax-0x14]
  4124ff:	call   DWORD PTR [esp+ecx*2+0x7d6989f4]
  412506:	mov    DWORD PTR ds:0x8707295,0x88ef241c
  412510:	push   ecx
  412511:	mov    bh,0xd9
  412513:	pushf  
  412514:	mov    edi,0x5189f29d
  412519:	cmc    
  41251a:	push   esi
  41251b:	std    
  41251c:	sub    DWORD PTR [ecx-0x7ebb39fa],ecx
  412522:	in     al,0x8e
  412524:	mov    ds:0x17f1067d,eax
  412529:	sbb    al,0xe0
  41252b:	adc    BYTE PTR [edi],bl
  41252d:	and    eax,0x87f981e0
  412532:	adc    DWORD PTR [ecx],edi
  412534:	add    cl,bl
  412536:	xchg   edi,eax
  412537:	add    cl,BYTE PTR [edi+edi*8+0x17fdf265]
  41253e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41253f:	fst    DWORD PTR [eax]
  412541:	pop    ds
  412542:	popf   
  412543:	fld    DWORD PTR [ecx+0x39110bf1]
  412549:	sar    DWORD PTR [edi+0x2],1
  41254c:	mov    ebx,fs
  41254e:	sub    eax,0x96effdf2
  412553:	jle    0x41251b
  412555:	loop   0x412577
  412557:	ret    
  412558:	adc    BYTE PTR [esp+ebp*4-0x3e81382],dl
  41255f:	sbb    al,0x51
  412561:	ret    0x36ae
  412564:	shl    BYTE PTR [edi-0x2],cl
  412567:	dec    ecx
  412568:	xor    DWORD PTR [ecx+esi*2+0x58],edx
  41256c:	in     al,dx
  41256d:	sbb    eax,0x6187f595
  412572:	adc    edi,DWORD PTR [ebx+edi*2-0x14]
  412576:	mov    al,0x58
  412578:	adc    al,0x8b
  41257a:	add    BYTE PTR [ebp-0x57],dh
  41257d:	repz in eax,dx
  41257f:	out    0x7c,eax
  412581:	pop    edi
  412582:	clc    
  412583:	pop    edi
  412584:	push   edi
  412585:	hlt    
  412586:	ja     0x4125a4
  412588:	hlt    
  412589:	or     eax,0x677ad73c
  41258e:	in     al,dx
  41258f:	add    bh,BYTE PTR [esi+0x3357e99]
  412595:	xchg   esp,eax
  412596:	add    BYTE PTR [edx+0x3f],ah
  412599:	add    BYTE PTR [eax-0x6a0bc387],bh
  41259f:	mov    bh,0x70
  4125a1:	aas    
  4125a2:	int3   
  4125a3:	std    
  4125a4:	pop    ebp
  4125a5:	add    BYTE PTR [esi+0x7c3ed266],cl
  4125ab:	std    
  4125ac:	push   0x58
  4125ae:	xchg   ebx,eax
  4125af:	in     eax,dx
  4125b0:	out    0x7c,eax
  4125b2:	arpl   WORD PTR [edi+0x14],si
  4125b5:	fmul   DWORD PTR [edi]
  4125b7:	push   eax
  4125b8:	outs   dx,BYTE PTR ds:[esi]
  4125b9:	leave  
  4125ba:	xlat   BYTE PTR ds:[ebx]
  4125bb:	in     al,0xe8
  4125bd:	add    edx,DWORD PTR [eax+eax*1+0x43adf472]
  4125c4:	sti    
  4125c5:	outs   dx,BYTE PTR ds:[esi]
  4125c6:	ret    
  4125c7:	jns    0x412565
  4125c9:	repz adc edi,DWORD PTR [ebx]
  4125cc:	aas    
  4125cd:	jge    0x4125ae
  4125cf:	enter  0x6f72,0x4c
  4125d3:	data16 lock setno BYTE PTR [ebx-0x65]
  4125d9:	jl     0x41259a
  4125db:	in     al,dx
  4125dc:	jb     0x41259f
  4125de:	ins    DWORD PTR es:[edi],dx
  4125df:	cmp    esi,edi
  4125e1:	outs   dx,BYTE PTR ds:[esi]
  4125e2:	cdq    
  4125e3:	jns    0x412589
  4125e5:	jmp    0x4125a1
  4125e7:	daa    
  4125e8:	jmp    0x412654
  4125ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4125eb:	push   es
  4125ec:	scas   al,BYTE PTR es:[edi]
  4125ed:	sub    al,0x8f
  4125ef:	adc    BYTE PTR [ebx-0xe],bh
  4125f2:	pop    ecx
  4125f3:	sub    DWORD PTR [eax],eax
  4125f5:	stc    
  4125f6:	mov    al,BYTE PTR [esi]
  4125f8:	xchg   DWORD PTR [ebx+ebx*8-0x7c],ebp
  4125fc:	jnp    0x4125db
  4125fe:	add    al,al
  412600:	imul   esi,esp,0x7b85915c
  412606:	fstp   QWORD PTR [eax]
  412608:	imul   esp,esp,0x38f865e9
  41260e:	inc    esp
  41260f:	mov    ah,0x6b
  412611:	add    DWORD PTR [ebx],ebp
  412613:	jmp    0xac8da71b
  412618:	dec    DWORD PTR [eax-0x39005fe4]
  41261e:	call   0xe2880e95
  412623:	and    dl,BYTE PTR [esp+edi*2]
  412626:	inc    ecx
  412627:	and    BYTE PTR [ecx-0x18],ch
  41262a:	bound  ebx,QWORD PTR [edx-0x24]
  41262d:	sub    DWORD PTR [esp+eax*4],esi
  412630:	sbb    dl,al
  412632:	sub    dl,dl
  412634:	adc    DWORD PTR [ebx-0x7f],0x0
  412638:	push   eax
  412639:	hlt    
  41263a:	ret    0xece2
  41263d:	mov    esp,eax
  41263f:	dec    edi
  412640:	sbb    dh,al
  412642:	out    dx,al
  412643:	xor    al,0xd4
  412645:	inc    edx
  412646:	pusha  
  412647:	jmp    0xde2a:0x617e0dc8
  41264e:	(bad)  
  41264f:	dec    edi
  412650:	jns    0x4126ad
  412652:	push   ecx
  412653:	into   
  412654:	aaa    
  412655:	in     al,0x42
  412657:	lea    edi,[ecx+0x5b]
  41265a:	adc    DWORD PTR [esi-0x3d961bb1],edi
  412660:	or     al,0x0
  412662:	ins    BYTE PTR es:[edi],dx
  412663:	add    ah,dl
  412665:	(bad)  
  412666:	jb     0x412652
  412668:	mov    ds:0xc262043d,al
  41266d:	adc    BYTE PTR ds:0x14526a00,cl
  412673:	add    ebp,DWORD PTR [edi+0x7a0fca1c]
  412679:	mov    edi,0xf0ed0000
  41267e:	inc    ecx
  41267f:	fdivr  QWORD PTR [ebp+0x71]
  412682:	sbb    al,0x0
  412684:	imul   cx,WORD PTR [esi*2-0x2bb69908],0x75
  41268e:	xor    ecx,DWORD PTR [eax-0x7d02cc97]
  412694:	repnz dec BYTE PTR [ecx-0x223af6b3]
  41269b:	add    al,0xb7
  41269d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41269e:	mov    BYTE PTR [edx+edx*8],cl
  4126a1:	imul   ecx,DWORD PTR [ecx-0x1c],0xe1c0ae0b
  4126a8:	mov    cl,0x80
  4126aa:	dec    edi
  4126ab:	push   DWORD PTR [edi+0x5d7ffa9]
  4126b1:	inc    ecx
  4126b2:	xor    eax,DWORD PTR [ecx]
  4126b4:	inc    bl
  4126b6:	add    cl,BYTE PTR [ecx+0x4585c788]
  4126bc:	add    eax,0xb6d4596e
  4126c1:	mov    edi,0x49e64579
  4126c6:	in     al,0x8b
  4126c8:	add    BYTE PTR [eax],bh
  4126ca:	(bad)  
  4126cc:	shl    ah,1
  4126ce:	dec    ecx
  4126cf:	fmul   DWORD PTR [ebx+0x5585df30]
  4126d5:	rol    edi,1
  4126d7:	sbb    al,0x8b
  4126d9:	clc    
  4126da:	(bad)  
  4126dc:	pop    ss
  4126dd:	scas   al,BYTE PTR es:[edi]
  4126de:	jno    0x4126d8
  4126e0:	call   DWORD PTR [ecx]
  4126e2:	adc    eax,0x62915587
  4126e7:	xchg   DWORD PTR [ebp-0x6c],esi
  4126ea:	icebp  
  4126eb:	jp     0x412748
  4126ed:	mov    esi,ss
  4126ef:	aam    0x66
  4126f1:	sbb    eax,0xcf3f52ad
  4126f6:	pushf  
  4126f7:	leave  
  4126f8:	jl     0x4126f2
  4126fa:	pop    ebp
  4126fb:	aas    
  4126fc:	adc    bl,bh
  4126fe:	mov    ds:0xbd60ffe9,eax
  412703:	jp     0x412750
  412705:	in     al,dx
  412706:	sbb    eax,0xa360d43f
  41270b:	out    dx,al
  41270c:	inc    ebx
  41270d:	fcomp  DWORD PTR [ebp+0x40]
  412710:	adc    BYTE PTR [ebp+0x180df034],cl
  412716:	gs jmp 0x412716
  412719:	ret    
  41271a:	in     eax,0xcf
  41271c:	dec    DWORD PTR [eax-0x47]
  41271f:	add    al,bh
  412721:	xchg   ebp,eax
  412722:	xor    al,0xf4
  412724:	inc    eax
  412725:	outs   dx,DWORD PTR ds:[esi]
  412726:	and    al,0x18
  412728:	or     eax,0xfdedf710
  41272d:	add    BYTE PTR [ebx+0x1e0c485d],bl
  412733:	xor    eax,0x6e9c88d0
  412738:	(bad)  
  412739:	pop    ebp
  41273a:	loop   0x41274a
  41273c:	mov    ebx,0x32d79cc2
  412741:	sar    BYTE PTR [edi+0x4d],0x58
  412745:	mov    DWORD PTR [eax+0x57],edi
  412748:	fst    QWORD PTR [eax+0xf]
  41274b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41274c:	stc    
  41274d:	mov    ch,cl
  41274f:	fist   DWORD PTR [ebx+0x55]
  412752:	sbb    eax,0xd989f5b5
  412757:	sar    DWORD PTR [edx-0x6],cl
  41275a:	jge    0xd78d2871
  412760:	out    0x31,eax
  412762:	sub    al,BYTE PTR [ecx]
  412764:	sub    eax,0x25012a48
  412769:	dec    eax
  41276a:	and    DWORD PTR [ecx],eax
  41276c:	pusha  
  41276d:	inc    eax
  41276e:	in     al,0x77
  412770:	mov    WORD PTR [edi+0x2a13441b],gs
  412776:	dec    ebx
  412777:	cli    
  412778:	imul   esp,esi,0x3
  41277b:	jmp    0x4060:0x4dcc1ae7
  412782:	(bad)  
  412784:	jmp    0x2047:0x72104778
  41278b:	js     0x4127c9
  41278d:	hlt    
  41278e:	popf   
  41278f:	rcr    dh,1
  412791:	jle    0x412793
  412793:	or     eax,DWORD PTR [eax]
  412795:	out    0x3,eax
  412797:	jge    0x412757
  412799:	jo     0x4127e2
  41279b:	rcl    ch,1
  41279d:	jmp    0x4b14:0x41bc5778
  4127a4:	ja     0x4127da
  4127a6:	in     al,dx
  4127a7:	adc    edi,DWORD PTR [edi+edi*4]
  4127aa:	sub    ebx,esp
  4127ac:	imul   ebp,edx,0x7a
  4127af:	push   edi
  4127b0:	call   0x259d6f17
  4127b5:	test   al,0x6f
  4127b7:	xchg   ebp,eax
  4127b8:	ja     0x4127de
  4127ba:	int3   
  4127bb:	or     eax,0x40fd8f4b
  4127c0:	cmp    edi,DWORD PTR [ebx-0x3]
  4127c3:	sub    BYTE PTR [ebx+0x57],dl
  4127c6:	jns    0x4127b7
  4127c8:	clc    
  4127c9:	mov    ecx,0x56e8e7ec
  4127ce:	ja     0x412830
  4127d0:	fadd   DWORD PTR [ecx-0x14]
  4127d3:	push   ecx
  4127d4:	jmp    0xe930c4cf
  4127d9:	jb     0x41281a
  4127db:	nop
  4127dc:	jne    0x4127de
  4127de:	lods   al,BYTE PTR ds:[esi]
  4127df:	inc    ebx
  4127e0:	jg     0x412845
  4127e2:	or     eax,0x9637f98
  4127e7:	nop
  4127e8:	jg     0x41284d
  4127ea:	adc    DWORD PTR [eax-0x6ff29c81],ebx
  4127f0:	jne    0x41282e
  4127f2:	fistp  WORD PTR [ecx-0x3e]
  4127f5:	add    eax,0x6d8e00e9
  4127fa:	mov    ah,0x70
  4127fc:	push   ebx
  4127fd:	aam    0x87
  4127ff:	lods   al,BYTE PTR ds:[esi]
  412800:	rol    ecx,cl
  412802:	inc    ebx
  412803:	sbb    DWORD PTR [edi-0x6901bc3e],edx
  412809:	jge    0x4127e4
  41280b:	pop    edi
  41280c:	inc    esp
  41280d:	jg     0x41288a
  41280f:	rcl    DWORD PTR [edi+0x8de066d],0x10
  412816:	xchg   DWORD PTR [esp+eiz*8],ebx
  412819:	cli    
  41281a:	mov    ah,0xe9
  41281c:	cmp    DWORD PTR [edi],esp
  41281e:	inc    ebx
  41281f:	xchg   ebp,eax
  412820:	inc    edx
  412821:	std    
  412822:	cld    
  412823:	and    al,0xd0
  412825:	(bad)  
  412826:	sbb    BYTE PTR [edx+0x3a],ch
  412829:	in     al,0x0
  41282b:	adc    al,0x9f
  41282d:	ja     0x4127ff
  41282f:	scas   eax,DWORD PTR es:[edi]
  412830:	push   edx
  412831:	adc    eax,DWORD PTR [eax]
  412833:	pusha  
  412834:	jmp    0x73e0:0xd2c266e0
  41283b:	(bad)  
  41283c:	jo     0x412882
  41283e:	in     al,0x62
  412840:	sar    BYTE PTR [ebp+edi*8-0x3f7db3e4],cl
  412847:	jmp    0x41285d
  412849:	ins    BYTE PTR es:[edi],dx
  41284a:	aam    0xe9
  41284c:	fiadd  WORD PTR [ebx-0x3c]
  41284f:	(bad)  
  412850:	sub    ebx,edx
  412852:	add    al,0x27
  412854:	fcmovbe st,st(0)
  412856:	add    BYTE PTR [eax],al
  412858:	(bad)  
  412859:	ds call 0xe039289a
  41285f:	jbe    0x41286b
  412861:	xor    ch,BYTE PTR [ebp-0x52ad23bf]
  412867:	push   ecx
  412868:	loopne 0x4127f0
  41286a:	jmp    0x412878
  41286c:	mov    bh,0xf8
  41286e:	jecxz  0x41287b
  412870:	mov    bh,0xd8
  412872:	mov    bh,0x80
  412874:	jge    0x412819
  412876:	add    eax,DWORD PTR [ebp+0x66fb155]
  41287c:	data16 (bad) 
  41287e:	shl    BYTE PTR ds:[edi+eiz*8-0x7d],0xb
  412884:	add    dh,BYTE PTR [ebp-0x1]
  412887:	or     eax,0xbdcd0a0f
  41288c:	call   0xe859476
  412891:	in     al,dx
  412892:	rol    DWORD PTR [ecx-0x2],0xbc
  412896:	fs push ecx
  412898:	sar    BYTE PTR [esi],0xc2
  41289b:	add    al,BYTE PTR [eax+0xf001380]
  4128a1:	sub    BYTE PTR [esi+0x0],dh
  4128a4:	add    BYTE PTR [ebp+0x3d080b83],bh
  4128aa:	pop    ecx
  4128ab:	rol    BYTE PTR [eax],1
  4128ad:	daa    
  4128ae:	add    esi,DWORD PTR [ecx+esi*1+0x2d]
  4128b2:	pop    ecx
  4128b3:	sti    
  4128b4:	add    BYTE PTR [ecx-0x57749c1a],ch
  4128ba:	mov    eax,0x94a83b66
  4128bf:	je     0x4128ea
  4128c1:	add    BYTE PTR [edx-0x4e],dh
  4128c4:	push   ecx
  4128c5:	fcom   QWORD PTR [ecx-0x19]
  4128c8:	test   DWORD PTR [edi],eax
  4128ca:	out    0x41,al
  4128cc:	fmul   QWORD PTR [eax-0x17411687]
  4128d2:	xchg   esp,eax
  4128d3:	loope  0x41294e
  4128d5:	inc    esp
  4128d6:	mov    ds:0x4b43bfd8,al
  4128db:	fdivr  DWORD PTR [ebx+edx*2-0x4]
  4128df:	pop    ecx
  4128e0:	ret    0x2f02
  4128e3:	loope  0x4128da
  4128e5:	cvtps2pd xmm3,QWORD PTR [edx+ebp*8-0x1529e400]
  4128ed:	jae    0x412933
  4128ef:	push   esp
  4128f0:	add    BYTE PTR [esi],cl
  4128f2:	sbb    eax,DWORD PTR [ecx+eax*8-0x16ce7603]
  4128f9:	jae    0x412907
  4128fb:	mov    edx,ebp
  4128fd:	jae    0x412907
  4128ff:	adc    DWORD PTR [ecx-0x4],esp
  412902:	sti    
  412903:	in     eax,dx
  412904:	push   es
  412905:	lock sbb DWORD PTR [ecx],ebx
  412908:	outs   dx,DWORD PTR ds:[esi]
  412909:	cmp    bl,ch
  41290b:	inc    ebx
  41290c:	int3   
  41290d:	or     eax,0xfdd8142b
  412912:	popa   
  412913:	sar    edx,1
  412915:	mov    ah,0x69
  412917:	leave  
  412918:	jmp    0xdab4:0x7071c073
  41291f:	fld    QWORD PTR [ecx+ecx*4]
  412922:	cmp    ecx,esp
  412924:	jns    0x412969
  412926:	add    BYTE PTR [edx-0x4302bfa0],dh
  41292c:	data16 repnz std 
  41292f:	mov    ds:0x970c4071,eax
  412934:	mov    dl,0x56
  412936:	std    
  412937:	or     DWORD PTR [esi+eax*1-0x33701b3a],ecx
  41293e:	mov    al,BYTE PTR [ebx+0x17f10667]
  412944:	adc    eax,0x1d1f10f4
  412949:	hlt    
  41294a:	cmp    ecx,0x9d133300
  412950:	cmp    ebx,DWORD PTR [ebx+0x55370ffa]
  412956:	jmp    0x79a4:0xd7a48251
  41295d:	lods   al,BYTE PTR ds:[esi]
  41295e:	xlat   BYTE PTR ds:[ebx]
  41295f:	adc    eax,0x7d132f54
  412964:	cmp    esi,DWORD PTR [edi-0x6]
  412967:	pop    ds
  412968:	and    ebp,DWORD PTR ds:0xc64a29ea
  41296e:	jle    0x4129ca
  412970:	inc    edi
  412971:	xor    ch,al
  412973:	test   BYTE PTR [eax],al
  412975:	mov    esp,0xfb82007e
  41297a:	push   ss
  41297b:	gs dec esi
  41297d:	sahf   
  41297e:	ss out 0x31,al
  412981:	inc    BYTE PTR [ecx-0x3b]
  412984:	shl    BYTE PTR [eax+0x50],0xe4
  412988:	ja     0x41291e
  41298a:	out    dx,eax
  41298b:	add    BYTE PTR [ebx],dl
  41298d:	dec    esp
  41298e:	ret    
  41298f:	jnp    0x4129f0
  412991:	aam    0x20
  412993:	dec    edi
  412994:	xor    ch,0x64
  412997:	sahf   
  412998:	shl    ebp,cl
  41299a:	out    0x7c,eax
  41299c:	pop    edi
  41299d:	clc    
  41299e:	outs   dx,DWORD PTR ds:[esi]
  41299f:	dec    edi
  4129a0:	mov    eax,0xde42c77
  4129a5:	xor    al,0xd7
  4129a7:	jp     0x4129f0
  4129a9:	in     al,0xf2
  4129ab:	mov    ebp,0x3677699
  4129b0:	xchg   esp,eax
  4129b1:	add    BYTE PTR [edx+0x37],dh
  4129b4:	cwde   
  4129b5:	jns    0x4129eb
  4129b7:	in     al,0x53
  4129b9:	fucomip st,st(1)
  4129bb:	jp     0x41299c
  4129bd:	enter  0xf872,0x8c
  4129c1:	sub    DWORD PTR [esp+ecx*1],ebp
  4129c4:	mov    DWORD PTR [eax+eax*1+0x1e],edi
  4129c8:	xchg   edi,eax
  4129c9:	add    BYTE PTR [eax],al
  4129cb:	pusha  
  4129cc:	mov    ds:0x6cb98be8,eax
  4129d1:	mov    ebx,0x975143
  4129d6:	add    cl,ch
  4129d8:	shl    al,1
  4129da:	cmp    DWORD PTR [ebx+ebx*4-0x748da897],esp
  4129e1:	enter  0xbc89,0x2f
  4129e5:	sub    eax,0x37c2e23c
  4129ea:	mov    DWORD PTR [ebx+esi*1+0xe2cd77],ebp
  4129f1:	push   0x10
  4129f3:	jnp    0x4129e4
  4129f5:	cwde   
  4129f6:	cmp    eax,edi
  4129f8:	ror    BYTE PTR [ebx],1
  4129fa:	test   al,0x73
  4129fc:	out    0x54,eax
  4129fe:	daa    
  4129ff:	jnp    0x4129da
  412a01:	jnp    0x4129f5
  412a03:	dec    ebp
  412a04:	ret    0x7107
  412a07:	push   es
  412a08:	pusha  
  412a09:	jnp    0x4129fb
  412a0b:	xchg   DWORD PTR [ebx+edi*8+0x26],ebp
  412a0f:	jnp    0x4129ee
  412a11:	jp     0x412a12
  412a13:	xchg   BYTE PTR [esp+eiz*8+0x7e],bl
  412a17:	jnp    0x4129da
  412a19:	xchg   edi,eax
  412a1a:	data16 or BYTE PTR [edx],dl
  412a1d:	xor    esi,eax
  412a1f:	jl     0x412a0b
  412a21:	pop    ecx
  412a22:	xlat   BYTE PTR ds:[ebx]
  412a23:	add    al,0x6a
  412a25:	pop    edx
  412a26:	fadd   DWORD PTR [eax]
  412a28:	bound  edi,QWORD PTR [edx]
  412a2a:	adc    BYTE PTR [edi+0x13e91c6],bh
  412a30:	(bad)  
  412a31:	jo     0x412aa4
  412a33:	adc    al,0x1d
  412a35:	cli    
  412a36:	jbe    0x412ab3
  412a38:	test   DWORD PTR [eax],edx
  412a3a:	cmp    al,dh
  412a3c:	ret    0xe4c2
  412a3f:	sub    DWORD PTR [eax],eax
  412a41:	sbb    eax,0xa089423f
  412a46:	enter  0x5587,0xf1
  412a4a:	add    al,0x51
  412a4c:	cld    
  412a4d:	idiv   BYTE PTR [edx]
  412a4f:	in     al,dx
  412a50:	sub    edi,DWORD PTR [ebp+0xd9ace8]
  412a56:	das    
  412a57:	addr16 jno 0x412a32
  412a5a:	cmp    cl,BYTE PTR [ecx+0x597b3bf2]
  412a60:	or     BYTE PTR [ebx+0x4d85cbf8],cl
  412a66:	in     eax,0xc4
  412a68:	push   es
  412a69:	mov    ecx,DWORD PTR [eax]
  412a6b:	mov    eax,0x7fd55585
  412a70:	jns    0x412a8e
  412a72:	sub    eax,0x24b6b
  412a77:	std    
  412a78:	mov    BYTE PTR [edi+0x3],cl
  412a7b:	gs push ecx
  412a7d:	adc    dl,ch
  412a7f:	mov    BYTE PTR [ecx+0x14],dl
  412a82:	lods   al,BYTE PTR ds:[esi]
  412a83:	fld    QWORD PTR [edx]
  412a85:	cmp    eax,edi
  412a87:	call   0x3ef818
  412a8c:	(bad)  
  412a8d:	(bad)  
  412a8e:	xor    BYTE PTR [eax+eax*4-0x79036683],bh
  412a95:	jne    0x412a80
  412a97:	jo     0x412ab0
  412a99:	mov    edi,DWORD PTR [eax-0x2c]
  412a9c:	mov    BYTE PTR [edx+eiz*4],cl
  412a9f:	dec    cx
  412aa1:	cli    
  412aa2:	inc    ebp
  412aa3:	dec    eax
  412aa4:	xor    eax,DWORD PTR [ecx]
  412aa6:	inc    ebp
  412aa7:	sub    BYTE PTR [ebx],dh
  412aa9:	add    dh,BYTE PTR [edi]
  412aab:	sub    edi,esi
  412aad:	mov    BYTE PTR [ecx-0xd7d00ed],cl
  412ab3:	add    BYTE PTR [edx-0x224306b3],cl
  412ab9:	add    al,0x0
  412abb:	xchg   esp,eax
  412abc:	fistp  QWORD PTR [ecx+0x77ca9888]
  412ac2:	dec    ebx
  412ac3:	ins    BYTE PTR es:[edi],dx
  412ac4:	jnp    0x412a81
  412ac6:	shl    BYTE PTR [ebp-0x23],0x78
  412aca:	push   ecx
  412acb:	jae    0x412aac
  412acd:	mov    bh,0x1
  412acf:	dec    esp
  412ad0:	popa   
  412ad1:	cmp    BYTE PTR ds:0x2bd5695,dh
  412ad7:	or     eax,0xd987d5c4
  412adc:	push   ecx
  412add:	jnp    0x412b3a
  412adf:	pusha  
  412ae0:	push   cs
  412ae1:	sar    DWORD PTR [ebx-0x29],0x6e
  412ae5:	dec    edi
  412ae6:	call   0x226befa
  412aeb:	inc    ebp
  412aec:	pusha  
  412aed:	dec    edi
  412aee:	fcomp  DWORD PTR [edi]
  412af0:	mov    ebp,ds
  412af2:	xchg   ecx,ecx
  412af4:	adc    ecx,ebx
  412af6:	sbb    cl,BYTE PTR [edi]
  412af8:	xchg   esp,eax
  412af9:	in     eax,0xe9
  412afb:	test   eax,0xbf86756
  412b00:	lea    ecx,ds:0x79116989
  412b06:	jae    0x412aa4
  412b08:	outs   dx,BYTE PTR ds:[esi]
  412b09:	inc    edi
  412b0a:	or     BYTE PTR [edi+0x7347b08],dl
  412b10:	cwde   
  412b11:	sub    cl,BYTE PTR [ebx-0x44]
  412b14:	pop    esp
  412b15:	fimul  WORD PTR [ecx+0x43e6e949]
  412b1b:	int3   
  412b1c:	xlat   BYTE PTR ds:[ebx]
  412b1d:	cmp    al,ch
  412b1f:	add    BYTE PTR [edi],bl
  412b21:	add    al,0xec
  412b23:	cmp    DWORD PTR [ecx-0x7b],edx
  412b26:	sar    BYTE PTR gs:[ebx+0x6189e81b],1
  412b2d:	leave  
  412b2e:	sub    al,0x4b
  412b30:	test   al,0xc1
  412b32:	jne    0x412ab6
  412b34:	mov    ds:0x65e6a5ff,al
  412b39:	into   
  412b3a:	call   0x8901a377
  412b3f:	add    DWORD PTR [ebx-0x42bc78cb],ecx
  412b45:	cmp    ebx,ebx
  412b47:	test   BYTE PTR [edi],0x42
  412b4a:	jge    0x412b32
  412b4c:	jno    0x412bc4
  412b4e:	sub    al,0xf8
  412b50:	sbb    eax,0x8c7b8b34
  412b55:	jne    0x412b85
  412b57:	inc    esi
  412b58:	mov    edx,0xacc13045
  412b5d:	add    BYTE PTR [edx],bl
  412b5f:	les    edi,FWORD PTR ds:0x307ab4ec
  412b65:	jle    0x412bba
  412b67:	push   ebx
  412b68:	or     eax,0xdb7aef34
  412b6d:	add    al,0x9d
  412b6f:	dec    esi
  412b70:	adc    esi,DWORD PTR [edi+esi*1]
  412b73:	jp     0x412b44
  412b75:	adc    BYTE PTR [edx-0x17],dh
  412b78:	or     eax,0xdc02eb4c
  412b7d:	std    
  412b7e:	adc    BYTE PTR [edx],dh
  412b80:	add    bh,BYTE PTR [ebx-0x6bff1a5c]
  412b86:	mov    edx,0x7794e6ac
  412b8b:	lods   al,BYTE PTR ds:[esi]
  412b8c:	mov    bl,0x1b
  412b8e:	fs daa 
  412b90:	jl     0x412be9
  412b92:	fdiv   DWORD PTR [edx-0x318c6e3c]
  412b98:	add    edx,DWORD PTR [eax+eax*1+0x341bbc12]
  412b9f:	lahf   
  412ba0:	fst    DWORD PTR [ebp+0xcf83475]
  412ba6:	cmp    al,0xa7
  412ba8:	jnp    0x412c11
  412baa:	aam    0x2
  412bac:	aam    0xa1
  412bae:	jae    0x412bb0
  412bb0:	jb     0x412b49
  412bb2:	add    BYTE PTR [eax],al
  412bb4:	add    dl,dh
  412bb6:	jns    0x412bfb
  412bb8:	mov    ch,0xbd
  412bba:	dec    DWORD PTR [eax+0x10564c24]
  412bc0:	xor    BYTE PTR [edi],cl
  412bc2:	ss hlt 
  412bc4:	pusha  
  412bc5:	retf   
  412bc6:	call   0x34d404
  412bcb:	xchg   BYTE PTR [esp+eiz*2],ah
  412bce:	ja     0x412c13
  412bd0:	mov    eax,ds:0xea7ba1bd
  412bd5:	fidivr WORD PTR ds:0xe8eb66f8
  412bdb:	or     eax,0xfdd88b96
  412be0:	fdivr  QWORD PTR [ebx]
  412be2:	repz mov ah,0xb4
  412be5:	imul   esp,ebx,0x73
  412be8:	cmp    DWORD PTR [eax],eax
  412bea:	mov    ebp,0x37510865
  412bef:	in     al,dx
  412bf0:	std    
  412bf1:	lods   eax,DWORD PTR ss:[esi]
  412bf3:	cmp    eax,0x3d08def8
  412bf8:	hlt    
  412bf9:	push   0xffffffbb
  412bfb:	enter  0x6a00,0x73
  412bff:	les    eax,FWORD PTR [eax]
  412c01:	push   0x6b
  412c03:	loopne 0x412c05
  412c05:	push   0x63
  412c07:	fadd   QWORD PTR [eax]
  412c09:	jb     0x412c56
  412c0b:	lock mov edi,DWORD PTR [ebp-0x1139c567]
  412c12:	xchg   edi,eax
  412c13:	jns    0x412c88
  412c15:	xor    DWORD PTR [edi+0x3d],ebx
  412c18:	mov    ah,0x70
  412c1a:	call   0xc3e0:0xe824c6cc
  412c21:	sub    al,0xa5
  412c23:	loope  0x412ba9
  412c25:	test   eax,0x813239
  412c2a:	push   eax
  412c2b:	fadd   QWORD PTR [eax]
  412c2d:	jne    0x412be7
  412c2f:	add    cl,BYTE PTR [bx+di-0x4b88]
  412c34:	xchg   DWORD PTR [edx],eax
  412c36:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412c37:	and    eax,ebx
  412c39:	jne    0x412be3
  412c3b:	fild   DWORD PTR [ecx-0x20]
  412c3e:	movq   QWORD PTR es:[ebp+0x19],mm7
  412c43:	add    al,0x71
  412c45:	pop    es
  412c46:	cmp    ebx,DWORD PTR [edi]
  412c48:	sldt   WORD PTR [edi+ebx*1]
  412c4c:	fdivr  QWORD PTR [ebx]
  412c4e:	add    BYTE PTR [eax-0x1dee8e38],bh
  412c54:	push   ds
  412c55:	in     al,0xff
  412c57:	xor    BYTE PTR [eax-0x7e963d81],0x79
  412c5e:	aam    0x3d
  412c60:	gs enter 0x39eb,0x9e
  412c65:	inc    ecx
  412c66:	shr    BYTE PTR ds:0x94e44159,1
  412c6c:	pop    ds
  412c6d:	loopne 0x412ce5
  412c6f:	and    eax,0xb6d84159
  412c74:	push   ss
  412c75:	fsub   st(3),st
  412c77:	cmp    ebx,DWORD PTR [ecx+0x41]
  412c7a:	fsub   QWORD PTR [esi+0x3080d816]
  412c80:	out    0x0,al
  412c82:	je     0x412c7c
  412c84:	sub    BYTE PTR [ecx-0x3c],al
  412c87:	sub    ebx,edi
  412c89:	jg     0x412c9a
  412c8b:	out    dx,eax
  412c8c:	pop    ebx
  412c8d:	add    al,0x1e
  412c8f:	data16 mov bl,0xbd
  412c92:	jmp    0x58ec:0x1e545bf5
  412c99:	rol    cl,1
  412c9b:	(bad)  
  412c9c:	aam    0x86
  412c9e:	inc    ebp
  412c9f:	stc    
  412ca0:	(bad)
  412ca3:	xchg   esp,eax
  412ca4:	popa   
  412ca5:	cmp    BYTE PTR [esi],bl
  412ca7:	xchg   esi,eax
  412ca8:	popa   
  412ca9:	dec    eax
  412caa:	push   ds
  412cab:	xchg   edi,eax
  412cac:	scas   eax,DWORD PTR es:[edi]
  412cad:	inc    edi
  412cae:	(bad)  
  412caf:	xchg   ebp,eax
  412cb0:	push   0xffffffca
  412cb2:	add    al,0x0
  412cb4:	adc    al,0x15
  412cb6:	cmc    
  412cb7:	call   DWORD PTR [edx-0x6bff599c]
  412cbd:	jmp    0x69dd3a43
  412cc2:	pop    edi
  412cc3:	rcl    BYTE PTR [ebx+eiz*2+0x69cb7409],1
  412cca:	pop    edi
  412ccb:	std    
  412ccc:	xchg   esp,eax
  412ccd:	fisttp QWORD PTR [eax]
  412ccf:	cmp    ecx,esp
  412cd1:	sbb    eax,0xed983458
  412cd6:	mov    DWORD PTR ds:0x88ffbd0c,eax
  412cdc:	push   ebp
  412cdd:	sub    ah,ch
  412cdf:	or     BYTE PTR [eiz*4+0x281efeff],bl
  412ce6:	ret    
  412ce7:	call   0xbc908d90
  412cec:	push   ebp
  412ced:	xor    ah,bh
  412cef:	xchg   eax,ebx
  412cf1:	mov    edi,0xb7d88803
  412cf6:	push   es
  412cf7:	(bad)  
  412cf8:	fldcw  WORD PTR [esi]
  412cfa:	add    eax,DWORD PTR [ecx+0x8eeed52]
  412d00:	mov    al,ds:0xb43c7d9
  412d05:	jmp    0x74443293
  412d0a:	mov    cl,0x8b
  412d0c:	nop
  412d0d:	out    0xe2,eax
  412d0f:	jae    0x412ce9
  412d11:	fstp   QWORD PTR [eax-0x8]
  412d14:	jmp    0x412d71
  412d16:	aad    0x50
  412d18:	add    bl,ah
  412d1a:	push   ebx
  412d1b:	shr    eax,1
  412d1d:	jno    0x412d1f
  412d1f:	jecxz  0x412d03
  412d21:	rol    DWORD PTR [edx],1
  412d23:	xlat   BYTE PTR ds:[ebx]
  412d24:	mov    ah,dl
  412d26:	push   esp
  412d27:	adc    ebx,esp
  412d29:	inc    edi
  412d2a:	fcomp  st(6)
  412d2c:	call   0xea8:0x58c6e84f
  412d33:	jbe    0x412d6d
  412d35:	mov    eax,0xdd43cde
  412d3a:	push   ebp
  412d3b:	outs   dx,DWORD PTR ds:[esi]
  412d3c:	leave  
  412d3d:	xchg   ecx,eax
  412d3e:	add    DWORD PTR [edx+0x60],esi
  412d41:	pushf  
  412d42:	mov    BYTE PTR [edx+eiz*8],ah
  412d45:	sbb    al,0x44
  412d47:	xchg   esi,eax
  412d48:	jmp    0x412d5a
  412d4a:	ror    BYTE PTR [esi+0x3b440de2],cl
  412d50:	les    esi,FWORD PTR [ebx+eax*1+0x17]
  412d54:	jecxz  0x412d3d
  412d56:	shl    BYTE PTR [edi+ecx*1-0x7e],1
  412d5a:	das    
  412d5b:	jg     0x412d2d
  412d5d:	adc    bl,dh
  412d5f:	pushw  es
  412d61:	inc    esp
  412d62:	and    BYTE PTR [edi+ebp*8-0x1053765c],0x15
  412d6a:	ins    BYTE PTR es:[edi],dx
  412d6b:	sbb    esi,ebx
  412d6d:	jl     0x412db2
  412d6f:	daa    
  412d70:	adc    ah,BYTE PTR [eax]
  412d72:	dec    ebp
  412d73:	cmp    eax,0xac8229e2
  412d78:	jmp    0x412cfe
  412d7a:	mov    DWORD PTR [ebx+ebp*8+0x2f6c1500],esp
  412d81:	repz int3 
  412d83:	inc    ebx
  412d84:	push   edi
  412d85:	adc    bl,BYTE PTR [eax]
  412d87:	and    DWORD PTR ds:0x623e01e2,edx
  412d8d:	leave  
  412d8e:	pop    edx
  412d8f:	(bad)  
  412d90:	sub    DWORD PTR [edi],ecx
  412d92:	xchg   esp,eax
  412d93:	xor    esi,DWORD PTR [edx-0x11]
  412d96:	sbb    eax,0x82e50044
  412d9b:	inc    ecx
  412d9c:	adc    dh,bl
  412d9e:	push   cs
  412d9f:	jno    0x412da1
  412da1:	jmp    0x72975d3d
  412da6:	ins    DWORD PTR es:[edi],dx
  412da7:	hlt    
  412da8:	add    BYTE PTR [esp+eiz*4+0xf],bl
  412dac:	fst    DWORD PTR [eax]
  412dae:	jnp    0x412da4
  412db0:	jne    0x412dbb
  412db2:	and    DWORD PTR [edx],esi
  412db4:	or     BYTE PTR [esp+ebx*4+0xf],ch
  412db8:	push   eax
  412db9:	(bad)  
  412dba:	int    0xe8
  412dbc:	loop   0x412d79
  412dbe:	mov    ch,0xdb
  412dc0:	or     eax,0xff1ddd5f
  412dc5:	and    ebx,DWORD PTR [eax-0x57d149f5]
  412dcb:	call   edi
  412dcd:	sar    BYTE PTR [edx+0x218971f4],cl
  412dd3:	inc    ebx
  412dd4:	sbb    BYTE PTR [edx-0x5d],dh
  412dd7:	hlt    
  412dd8:	mov    DWORD PTR [esi],edx
  412dda:	xlat   BYTE PTR ds:[ebx]
  412ddb:	inc    DWORD PTR [edx-0x23]
  412dde:	nop
  412ddf:	mov    dh,0x89
  412de1:	aaa    
  412de2:	add    BYTE PTR [eax],bl
  412de4:	xlat   BYTE PTR ds:[ebx]
  412de5:	call   ebx
  412de7:	inc    edi
  412de8:	sbb    dl,dh
  412dea:	fisubr DWORD PTR [ebx+0x3861178a]
  412df0:	sbb    eax,0x5262023f
  412df5:	not    BYTE PTR [edx+0x78]
  412df8:	cmp    cl,0xeb
  412dfb:	retf   0x38f0
  412dfe:	cmp    eax,ecx
  412e00:	sti    
  412e01:	mov    DWORD PTR [eax],eax
  412e03:	and    al,bh
  412e05:	aas    
  412e06:	test   al,0xa8
  412e08:	retf   0x1f72
  412e0b:	icebp  
  412e0c:	out    dx,al
  412e0d:	jg     0x412e21
  412e0f:	mov    WORD PTR [ecx+0xe],ss
  412e12:	add    dh,dl
  412e14:	mov    dl,0x6f
  412e16:	or     ah,BYTE PTR [edi-0x27]
  412e19:	test   DWORD PTR [eax],ebx
  412e1b:	sub    eax,0x5fca3742
  412e20:	mov    bh,0x87
  412e22:	inc    ebp
  412e23:	leave  
  412e24:	add    eax,DWORD PTR [ebx+0xc]
  412e27:	inc    esp
  412e28:	inc    esi
  412e29:	or     al,0x3b
  412e2b:	jo     0x412e01
  412e2d:	or     al,0x86
  412e2f:	popa   
  412e30:	(bad)  
  412e32:	(bad)  
  412e33:	jnp    0x412e50
  412e35:	popf   
  412e36:	adc    BYTE PTR [edx],ah
  412e38:	inc    esp
  412e39:	add    BYTE PTR [ebp-0x11],bl
  412e3c:	sar    ch,1
  412e3e:	push   esp
  412e3f:	ss in  eax,dx
  412e41:	xchg   DWORD PTR [ebp-0x77],ecx
  412e44:	icebp  
  412e45:	mov    dl,0x51
  412e47:	add    BYTE PTR [eax-0x7b],dh
  412e4a:	in     al,dx
  412e4b:	inc    esp
  412e4c:	mov    esi,0xc2db2f16
  412e51:	(bad)  
  412e52:	clc    
  412e53:	push   si
  412e55:	xchg   ebp,eax
  412e56:	or     eax,DWORD PTR [ebx+edx*2+0x7a000005]
  412e5d:	jns    0x412ecc
  412e5f:	pop    es
  412e60:	xchg   ebx,eax
  412e61:	std    
  412e62:	out    dx,al
  412e63:	xadd   esi,edx
  412e66:	add    BYTE PTR [eax],al
  412e68:	cmp    eax,0x2c41b2f1
  412e6d:	add    eax,0x96220fd0
  412e72:	test   DWORD PTR [ebp+0x65],edx
  412e75:	imul   eax,DWORD PTR [edi-0x95c1af],0xd2793ad5
  412e7f:	mov    DWORD PTR [eax],eax
  412e81:	les    eax,FWORD PTR [ebp+0x5986595d]
  412e87:	in     al,dx
  412e88:	test   BYTE PTR [edx],bl
  412e8a:	int3   
  412e8b:	mov    edx,DWORD PTR [ecx+ebx*1-0x4133bc74]
  412e92:	ret    
  412e93:	or     eax,0x606b2a2b
  412e98:	dec    edx
  412e99:	push   eax
  412e9a:	ss loopne 0x412f17
  412e9d:	mov    ss,ecx
  412e9f:	jno    0x412e32
  412ea1:	pusha  
  412ea2:	push   esi
  412ea3:	lock mov edi,0xd4b50eeb
  412ea9:	push   eax
  412eaa:	inc    edi
  412eab:	lock add BYTE PTR [edx],bh
  412eae:	out    dx,al
  412eaf:	ss enter 0x668b,0x5d
  412eb4:	add    dl,BYTE PTR [ecx+ebp*8-0x66d67e9d]
  412ebb:	add    al,0xd
  412ebd:	sbb    BYTE PTR [esi],bl
  412ebf:	add    al,BYTE PTR [eax]
  412ec1:	xchg   esp,eax
  412ec2:	mov    edx,0xd2845396
  412ec7:	xchg   ebx,eax
  412ec8:	inc    ebp
  412ec9:	(bad)  
  412eca:	jmp    0xdec:0x2c0dc2ae
  412ed1:	inc    ebx
  412ed2:	sub    BYTE PTR [ecx],al
  412ed4:	xchg   ecx,ecx
  412ed6:	jge    0x412e63
  412ed8:	inc    ebx
  412ed9:	jo     0x412f29
  412edb:	inc    edi
  412edc:	les    ecx,FWORD PTR [edi]
  412ede:	fsubr  st(5),st
  412ee0:	sub    DWORD PTR [edx-0x46],edx
  412ee3:	xchg   esi,eax
  412ee4:	sar    BYTE PTR [esi-0x7099c837],0x19
  412eeb:	push   ecx
  412eec:	add    ecx,DWORD PTR ds:0x92e9d59c
  412ef2:	mov    edx,0xac1dc096
  412ef7:	aad    0x66
  412ef9:	outs   dx,DWORD PTR ds:[esi]
  412efa:	xchg   esp,eax
  412efb:	lds    ecx,FWORD PTR ds:0x20017
  412f01:	xchg   esp,eax
  412f02:	ret    
  412f03:	cmp    BYTE PTR [ebx+0x8],0x0
  412f07:	out    0xe,eax
  412f09:	adc    dl,bh
  412f0b:	call   0x5e4cc313
  412f10:	cmp    DWORD PTR [eax],eax
  412f12:	add    BYTE PTR [ebx],cl
  412f14:	push   esi
  412f15:	inc    edi
  412f16:	pushf  
  412f17:	or     edi,DWORD PTR [esi]
  412f19:	into   
  412f1a:	cdq    
  412f1b:	xchg   ebx,eax
  412f1c:	je     0x412f01
  412f1e:	(bad)  
  412f20:	fcomp  st(6)
  412f22:	mov    DWORD PTR [ebx-0x3efef0f1],ebp
  412f28:	jo     0x412f82
  412f2a:	int3   
  412f2b:	or     dl,BYTE PTR [ebp+0x2bff8456]
  412f31:	fcom   QWORD PTR [ebp+0x10ecf3d]
  412f37:	ret    0x5070
  412f3a:	les    ecx,FWORD PTR [edx]
  412f3c:	mov    ?,WORD PTR [ebp-0x7c1cb2f3]
  412f42:	arpl   WORD PTR [eax],ax
  412f44:	pusha  
  412f45:	cmp    BYTE PTR [eax+ecx*4+0x2c],ch
  412f49:	mov    al,ds:0x3b48499
  412f4e:	xchg   esp,eax
  412f4f:	add    BYTE PTR [ecx+0x4e],ah
  412f52:	les    eax,FWORD PTR [eax+0x19e70490]
  412f58:	jb     0x412f2d
  412f5a:	lods   eax,DWORD PTR ds:[esi]
  412f5b:	mov    ebp,0x1e86ee
  412f60:	out    0x3,eax
  412f62:	or     eax,0xdf8acf42
  412f67:	call   0xc8d6f556
  412f6c:	jo     0x412fbe
  412f6e:	push   esp
  412f6f:	push   ss
  412f70:	sub    BYTE PTR [edx-0x64],dl
  412f73:	test   DWORD PTR [esi-0x3783ff09],ebx
  412f79:	jmp    0x8419:0xe7f51ecd
  412f80:	or     DWORD PTR [eax],eax
  412f82:	ins    BYTE PTR es:[edi],dx
  412f83:	test   DWORD PTR [eax],0x1757e900
  412f89:	inc    ebx
  412f8a:	sub    DWORD PTR [ebp-0x15],esp
  412f8d:	add    DWORD PTR [esi-0x600ee86d],edx
  412f93:	inc    edi
  412f94:	loop   0x412f19
  412f96:	call   0xc13032
  412f9b:	xchg   ebp,eax
  412f9c:	dec    ebp
  412f9d:	aas    
  412f9e:	jb     0x412f6f
  412fa0:	pop    ss
  412fa1:	shl    esi,0x12
  412fa4:	push   ebx
  412fa5:	(bad)  
  412fa6:	call   0x186b742
  412fab:	sbb    eax,0xd6eae82e
  412fb0:	dec    edi
  412fb2:	adc    dl,dh
  412fb4:	dec    edi
  412fb5:	sbb    esp,DWORD PTR [edx+0x49]
  412fb8:	hlt    
  412fb9:	sub    BYTE PTR [ecx+0x3487e995],bh
  412fbf:	fadd   DWORD PTR [edi-0x78cd568d]
  412fc5:	xor    al,0xe7
  412fc7:	stc    
  412fc8:	pop    ss
  412fc9:	xor    BYTE PTR [ecx*8-0x63143f81],bl
  412fd0:	mov    esi,0x4b958472
  412fd5:	or     al,0xd2
  412fd7:	pop    esp
  412fd8:	push   edx
  412fd9:	into   
  412fda:	nop
  412fdb:	add    BYTE PTR [ecx+0x17e9fdd9],cl
  412fe1:	rol    DWORD PTR [esi+eiz*8],1
  412fe4:	adc    dl,BYTE PTR [edx]
  412fe6:	(bad)  
  412fe7:	call   0x2309b783
  412fec:	push   ebp
  412fed:	or     eax,DWORD PTR [ebp+0x970d]
  412ff3:	(bad)  
  412ff5:	clc    
  412ff6:	mov    BYTE PTR [edi+edi*1+0x3e00beff],dh
  412ffd:	lea    esi,[edi]
  412fff:	ret    0xd7de
  413002:	mov    BYTE PTR [edi+0x39],dh
  413005:	sub    al,dh
  413007:	add    ecx,esp
  413009:	test   DWORD PTR [ecx-0x40],esi
  41300c:	xchg   BYTE PTR [ecx],dh
  41300e:	ror    BYTE PTR [ebx+0x303702e9],0x18
  413015:	rol    BYTE PTR [eax-0x3e080640],1
  41301b:	jb     0x412f9f
  41301d:	dec    DWORD PTR [edx+0xc]
  413020:	(bad)  
  413021:	(bad)  
  413022:	jbe    0x412ff4
  413024:	xchg   esp,eax
  413025:	mov    bl,0x0
  413027:	add    BYTE PTR [ebp+0x7c47b60b],bh
  41302d:	rol    BYTE PTR gs:[eax],0x99
  413031:	add    al,0x0
  413033:	and    DWORD PTR [edx+0x30],0x1
  413037:	je     0x412ff0
  413039:	std    
  41303a:	inc    eax
  41303b:	cld    
  41303c:	push   ds
  41303d:	int    0xb4
  41303f:	inc    ebx
  413040:	add    BYTE PTR [ebp+0x708b0ae7],ch
  413046:	loopne 0x412fd1
  413048:	inc    esp
  413049:	jl     0x41303e
  41304b:	test   BYTE PTR [ebp+0x31],al
  41304e:	mov    DWORD PTR [ecx-0x14],eax
  413051:	push   es
  413052:	inc    edi
  413053:	cld    
  413054:	lea    esi,[ecx-0x7772f3fd]
  41305a:	shr    al,0xdd
  41305d:	push   DWORD PTR [ebx+edi*8-0x7bfad27c]
  413064:	mov    ecx,0x8b00046d
  413069:	js     0x41303b
  41306b:	inc    DWORD PTR [ecx+edx*8+0x5d]
  41306f:	xchg   DWORD PTR [ebp-0x33],edx
  413072:	pop    ebp
  413073:	mov    ebp,0x63e194c2
  413078:	xchg   DWORD PTR [edi+edi*4-0x37cfac78],eax
  41307f:	ret    0x8cc2
  413082:	mov    edi,0xc796508a
  413087:	mov    BYTE PTR [ebx+0x4],dl
  41308a:	rol    dl,0xc2
  41308d:	pushf  
  41308e:	xchg   DWORD PTR [edx-0x778067b0],ecx
  413094:	push   ebx
  413095:	add    BYTE PTR [eax+0x7f9cc2c2],cl
  41309b:	mov    dl,BYTE PTR [eax-0x6e]
  41309e:	push   edx
  41309f:	xor    al,0x50
  4130a1:	or     eax,0x81097a
  4130a6:	pop    ebx
  4130a7:	popf   
  4130a8:	push   es
  4130a9:	mov    ebx,DWORD PTR [ebp+esi*4+0x55]
  4130ad:	or     eax,0x51ec34cb
  4130b2:	ret    
  4130b3:	sub    al,0x98
  4130b5:	dec    edi
  4130b6:	lods   al,BYTE PTR ds:[esi]
  4130b7:	(bad)  
  4130b8:	fdivr  st,st(5)
  4130ba:	mov    bl,0xc2
  4130bc:	ss or  eax,0x484326e2
  4130c2:	sub    BYTE PTR [ecx],al
  4130c4:	dec    esp
  4130c5:	je     0x41313b
  4130c7:	and    DWORD PTR [esp+esi*2-0x66],ecx
  4130cb:	push   0x5f
  4130cd:	cld    
  4130ce:	xchg   esp,eax
  4130cf:	jb     0x413107
  4130d1:	std    
  4130d2:	or     edx,eax
  4130d4:	lea    edx,[ebx+0x60]
  4130d7:	outs   dx,BYTE PTR ds:[esi]
  4130d8:	dec    edi
  4130d9:	clc    
  4130da:	pop    ds
  4130db:	sbb    al,0xb4
  4130dd:	push   ebp
  4130de:	pop    ds
  4130df:	mov    al,ds:0x565e96ec
  4130e4:	fldl2t 
  4130e6:	lods   al,BYTE PTR ds:[esi]
  4130e7:	dec    esi
  4130e8:	dec    edi
  4130e9:	fcomp  DWORD PTR [edi]
  4130eb:	in     al,dx
  4130ec:	scas   eax,DWORD PTR es:[edi]
  4130ed:	std    
  4130ee:	rol    DWORD PTR [eax],0x5f
  4130f1:	(bad)  
  4130f2:	xlat   BYTE PTR ds:[ebx]
  4130f3:	mov    al,0xb8
  4130f5:	xor    ch,BYTE PTR [esi+ecx*2]
  4130f8:	pop    ebp
  4130f9:	(bad)  [ecx]
  4130fb:	jmp    0x4130f7
  4130fd:	fisub  DWORD PTR [edi+0x483172b8]
  413103:	xlat   BYTE PTR ds:[ebx]
  413104:	mov    ah,0xdb
  413106:	or     eax,0x35173d
  41310b:	imul   ebp,eax,0xd709d665
  413111:	jo     0x413154
  413113:	add    BYTE PTR [ebp+0x27],bh
  413116:	push   eax
  413117:	(bad)  
  413118:	mov    esp,DWORD PTR [edi+eiz*8-0x76e4c30f]
  41311f:	push   eax
  413120:	add    ebx,esi
  413122:	mov    WORD PTR [edi-0x1c],ss
  413125:	jb     0x413168
  413127:	loopne 0x413129
  413129:	lods   al,BYTE PTR ds:[esi]
  41312a:	fistp  WORD PTR ds:0x6f8edb45
  413130:	(bad)  
  413131:	shr    BYTE PTR [edx-0x71212941],1
  413137:	addr16 loopne 0x413124
  41313a:	xor    BYTE PTR [eax+ebp*8-0x295626d0],ah
  413141:	ins    BYTE PTR es:[edi],dx
  413142:	mov    esi,0x650fd27
  413147:	cmp    ch,bl
  413149:	lock push ss
  41314b:	push   esp
  41314c:	pop    edi
  41314d:	pusha  
  41314e:	inc    eax
  41314f:	cwde   
  413150:	push   0xffffffeb
  413152:	mov    bh,dl
  413154:	add    al,0x37
  413156:	fild   DWORD PTR [edi]
  413158:	or     DWORD PTR ds:0x50955c5,ecx
  41315e:	(bad)  
  41315f:	iret   
  413160:	push   es
  413161:	(bad)  
  413162:	cmc    
  413163:	ret    0xe6ff
  413166:	jg     0x4131bc
  413168:	dec    ebp
  413169:	add    dh,bl
  41316b:	outs   dx,BYTE PTR ds:[esi]
  41316c:	push   edx
  41316d:	in     al,dx
  41316e:	outs   dx,BYTE PTR ds:[esi]
  41316f:	add    ah,ah
  413171:	mov    ah,0xfd
  413173:	fmul   QWORD PTR [edi-0x6f37ff18]
  413179:	add    BYTE PTR [ecx+ebp*1+0x573101e3],al
  413180:	aad    0xe7
  413182:	add    bh,dl
  413184:	inc    ebp
  413185:	aam    0x73
  413187:	sbb    eax,0x3682592f
  41318c:	out    dx,al
  41318d:	xchg   esi,eax
  41318f:	inc    edx
  413190:	xchg   ecx,eax
  413191:	xadd   dh,al
  413194:	mov    ebp,0x8f2bc737
  413199:	add    BYTE PTR [edx],dh
  41319b:	and    BYTE PTR [edx],al
  41319d:	std    
  41319e:	into   
  41319f:	add    ebp,ecx
  4131a1:	xchg   ebp,eax
  4131a2:	test   al,0xe8
  4131a4:	push   ebx
  4131a5:	fmul   DWORD PTR [ecx+0x65fc7b95]
  4131ab:	pusha  
  4131ac:	cdq    
  4131ad:	xchg   DWORD PTR [ebp+eax*8-0x61],eax
  4131b1:	mov    BYTE PTR [eax],cl
  4131b3:	stos   DWORD PTR es:[edi],eax
  4131b4:	nop
  4131b5:	add    BYTE PTR [ebx+0x72],dl
  4131b8:	lods   al,BYTE PTR ds:[esi]
  4131b9:	jg     0x4131a7
  4131bb:	in     eax,0x68
  4131bd:	cs push ebp
  4131bf:	inc    ebx
  4131c0:	push   0x93c6086a
  4131c5:	loopne 0x413170
  4131c7:	sub    dl,BYTE PTR [eax+0x4f62f887]
  4131cd:	rcl    DWORD PTR [ebx],cl
  4131cf:	in     eax,0x80
  4131d1:	adc    eax,0x68007200
  4131d6:	xor    esi,0xff64fbee
  4131dc:	call   0xe1bcb178
  4131e1:	xchg   edi,eax
  4131e2:	jge    0x413202
  4131e4:	add    BYTE PTR [ebx-0x1b99fc7d],dl
  4131ea:	inc    edx
  4131eb:	or     BYTE PTR [edi],cl
  4131ed:	xchg   edx,eax
  4131ee:	aas    
  4131ef:	add    al,0xc6
  4131f1:	jo     0x4131aa
  4131f3:	add    BYTE PTR [esi-0x3c],ah
  4131f6:	inc    edx
  4131f7:	or     cl,BYTE PTR [edi]
  4131f9:	mov    cl,0x3b
  4131fb:	std    
  4131fc:	(bad)  
  4131fd:	cmp    eax,0x354eb308
  413202:	adc    DWORD PTR [ebp+0x53],ecx
  413205:	(bad)  
  413207:	mov    cl,0x10
  413209:	in     eax,dx
  41320a:	add    BYTE PTR [ecx+0x4dda51c0],al
  413210:	push   0x195
  413215:	mov    edx,0x338d0845
  41321a:	in     eax,0x4d
  41321c:	lea    eax,[eax+0x9]
  41321f:	push   eax
  413220:	push   ebx
  413221:	xchg   ebp,eax
  413222:	into   
  413223:	mov    bh,0x1
  413225:	in     eax,dx
  413226:	jecxz  0x41322a
  413228:	xor    ebp,DWORD PTR [ebp+0x40104689]
  41322e:	mov    esp,0x1e9840b
  413233:	add    BYTE PTR [eax],al
  413235:	inc    esi
  413236:	or     BYTE PTR cs:[esi+0x0],ah
  41323a:	inc    esi
  41323b:	inc    eax
  41323c:	push   cs
  41323d:	movlps xmm0,QWORD PTR [edi+0x8]
  413241:	data16 cld 
  413243:	call   0xecb4ba47
  413248:	or     dh,BYTE PTR [esi-0x3e54f813]
  41324e:	hlt    
  41324f:	inc    ecx
  413250:	or     al,0xa8
  413252:	jle    0x413298
  413254:	push   es
  413255:	or     DWORD PTR ds:0x71c07fac,0xffffff87
  41325c:	inc    esi
  41325d:	or     al,0x94
  41325f:	pop    edi
  413260:	inc    eax
  413261:	push   cs
  413262:	sbb    DWORD PTR [esp],esp
  413265:	mov    BYTE PTR [edi+0xc0e404f],dl
  41326b:	sbb    al,0x21
  41326d:	(bad)  
  41326e:	fcmovb st,st(7)
  413270:	add    DWORD PTR [esi+0x17],esp
  413273:	jecxz  0x41327c
  413275:	or     BYTE PTR [ebx-0x2d773eac],dl
  41327b:	push   es
  41327c:	sbb    bh,bh
  41327e:	test   al,0xbf
  413280:	or     BYTE PTR [ebp-0x77b4c2d],dh
  413286:	test   BYTE PTR [eax+esi*8+0x1d1d1c4],dl
  41328d:	jl     0x413223
  41328f:	jmp    0x4a4d7654
  413294:	add    al,0x0
  413296:	xchg   esp,eax
  413297:	and    bh,BYTE PTR [esi]
  413299:	hlt    
  41329a:	fwait
  41329b:	jmp    0xff4132a1
  4132a0:	iret   
  4132a1:	test   al,bh
  4132a3:	mov    ah,0x6c
  4132a5:	out    dx,al
  4132a6:	les    ebx,FWORD PTR [ecx-0x2f]
  4132a9:	add    DWORD PTR [eax],eax
  4132ab:	fucomi st,st(1)
  4132ad:	rol    BYTE PTR [ebx-0x34],0xe9
  4132b1:	fadd   DWORD PTR [eax]
  4132b3:	xchg   esp,eax
  4132b4:	sbb    bh,BYTE PTR [esi]
  4132b6:	hlt    
  4132b7:	ret    
  4132b8:	jmp    0x1c4a32be
  4132bd:	sub    dl,BYTE PTR [eax+0x21]
  4132c0:	and    al,0x20
  4132c2:	push   eax
  4132c3:	pop    ds
  4132c4:	sbb    eax,0xbbc8e80c
  4132c9:	aad    0xfd
  4132cb:	or     DWORD PTR [ecx+ebp*1],ebx
  4132ce:	push   eax
  4132cf:	and    DWORD PTR [ebx],esp
  4132d1:	push   ds
  4132d2:	push   eax
  4132d3:	pop    ds
  4132d4:	sbb    al,0xdc
  4132d6:	call   0xd7e63333
  4132db:	jns    0x413262
  4132dd:	and    eax,0x2d85c428
  4132e2:	sub    al,0xc4
  4132e4:	xchg   DWORD PTR [eax+edx*8],esp
  4132e7:	ins    BYTE PTR es:[edi],dx
  4132e8:	mov    WORD PTR [ebp-0x2899a629],es
  4132ee:	xor    bl,BYTE PTR [edi]
  4132f0:	cmp    bh,BYTE PTR [eax+0x68433c33]
  4132f6:	xlat   BYTE PTR ds:[ebx]
  4132f7:	inc    ecx
  4132f8:	xchg   BYTE PTR [ebp-0x57c5f3ed],ch
  4132fe:	push   es
  4132ff:	jmp    0x48143d
  413304:	stc    
  413305:	cmp    ebx,ebx
  413307:	mov    ebp,0x80e80cda
  41330c:	push   esp
  41330d:	dec    esp
  41330e:	in     al,0xeb
  413310:	xlat   BYTE PTR ds:[ebx]
  413311:	jg     0x413349
  413313:	xlat   BYTE PTR ds:[ebx]
  413314:	adc    edi,DWORD PTR [edx]
  413316:	iret   
  413317:	adc    ah,0x4b
  41331a:	std    
  41331b:	(bad)  
  41331c:	xor    al,0x1d
  41331f:	push   cs
  413320:	icebp  
  413321:	in     al,dx
  413322:	push   es
  413323:	hlt    
  413324:	stos   DWORD PTR es:[edi],eax
  413325:	add    BYTE PTR [eax+0x3e],ah
  413328:	cwde   
  413329:	jge    0x413352
  41332b:	push   eax
  41332c:	nop
  41332d:	mov    edx,0x29d3d6a4
  413332:	push   DWORD PTR [eax-0x7c112cec]
  413338:	aas    
  413339:	shl    edi,cl
  41333b:	push   eax
  41333c:	mov    edx,ebx
  41333e:	push   ebp
  41333f:	hlt    
  413340:	mov    al,0xec
  413342:	retf   0x6bf3
  413345:	add    BYTE PTR ds:0xc67fd4ec,dh
  41334b:	(bad)  
  41334c:	gs retf 0xbd72
  413350:	icebp  
  413351:	xor    al,BYTE PTR [eax]
  413353:	adc    bl,BYTE PTR [ecx-0x41]
  413356:	add    al,0xe9
  413358:	push   0x4b
  41335a:	add    al,0xa6
  41335c:	mov    ebx,edx
  41335e:	adc    ecx,DWORD PTR [ecx-0x69ffed99]
  413364:	f2xm1  
  413366:	cld    
  413367:	hlt    
  413368:	add    BYTE PTR [ebx-0xf],al
  41336b:	aas    
  41336c:	jmp    0x915d7eb3
  413371:	rol    BYTE PTR [eax+0x4b6276fd],1
  413377:	sbb    BYTE PTR [ecx+0x66fd80c8],al
  41337d:	bound  ecx,QWORD PTR [ebx+0x44]
  413380:	push   ecx
  413381:	and    BYTE PTR [ecx-0x1786a903],al
  413387:	sub    DWORD PTR [ecx+0x4a],0xe9cc1d4
  41338e:	in     eax,0x4f
  413390:	xchg   edi,eax
  413391:	jmp    0x124a:0x4360c4d
  413398:	test   eax,0xccf08797
  41339d:	xchg   edi,eax
  41339e:	add    ch,bh
  4133a0:	jmp    0x100f6c3
  4133a5:	out    0x8,eax
  4133a7:	mov    edi,0xdf51d962
  4133ac:	jmp    0x72413473
  4133b1:	add    DWORD PTR [edx-0x3961261e],edx
  4133b7:	mov    edi,0xdf918f01
  4133bc:	icebp  
  4133bd:	mov    WORD PTR [ecx+0x66cc2487],ss
  4133c3:	add    al,0x64
  4133c5:	imul   edx,esp,0x50
  4133c8:	into   
  4133c9:	push   ebx
  4133ca:	or     al,ch
  4133cc:	add    BYTE PTR [eax],al
  4133ce:	push   ds
  4133cf:	or     bh,ch
  4133d1:	(bad)  
  4133d2:	stc    
  4133d3:	mov    esp,0xc2f81874
  4133d8:	je     0x4133ea
  4133da:	stos   DWORD PTR es:[edi],eax
  4133db:	stos   DWORD PTR es:[edi],eax
  4133dc:	jno    0x4133ea
  4133de:	xor    al,BYTE PTR [ecx+0x8]
  4133e1:	call   0x3e3ed8
  4133e6:	stc    
  4133e7:	mov    esp,0xfdbd0474
  4133ec:	out    0x2,al
  4133ee:	pop    ds
  4133ef:	mov    ebp,0x3ffc95e
  4133f4:	add    BYTE PTR [ebp-0x4a],dl
  4133f7:	call   0xff732079
  4133fc:	(bad)  
  4133fd:	(bad)  
  4133fe:	inc    BYTE PTR [edi+0x23eb0c59]
  413404:	xchg   DWORD PTR [ebp+0x35],edi
  413407:	addr16 or al,0x68
  41340a:	xchg   ebp,eax
  41340b:	inc    edx
  41340c:	inc    eax
  41340d:	add    dl,bh
  41340f:	in     al,0x6d
  413411:	pop    esi
  413412:	cld    
  413413:	cld    
  413414:	add    eax,0xfffffff2
  413417:	push   eax
  413418:	sti    
  413419:	pop    es
  41341a:	in     eax,dx
  41341b:	cld    
  41341c:	addr16 inc eax
  41341e:	sbb    bl,al
  413420:	std    
  413421:	imul   eax,DWORD PTR [ecx],0x2dc8417a
  413427:	in     eax,0x97
  413429:	pop    ebp
  41342a:	in     al,dx
  41342b:	cld    
  41342c:	add    eax,0xffffffe2
  41342f:	push   eax
  413430:	jecxz  0x413439
  413432:	add    BYTE PTR [ebp+0x250469fc],bh
  413438:	or     eax,0xd754d89
  41343d:	mov    ch,0x38
  41343f:	pop    ebx
  413440:	cmp    al,0x0
  413442:	call   0x3cf1fc
  413447:	xchg   esp,eax
  413448:	ror    DWORD PTR fs:0xfffc7419,0x9b
  413450:	dec    esi
  413451:	ds int 0x1c
  413454:	and    eax,0x97098baf
  413459:	xchg   BYTE PTR [ebx+0x50],al
  41345c:	ret    0x5c0
  41345f:	xchg   esp,eax
  413460:	fld    DWORD PTR [esi+0x3e5d797b]
  413466:	sar    BYTE PTR [edx+esi*1-0x4],1
  41346a:	jmp    DWORD PTR [ebx-0x51]
  41346d:	mov    eax,DWORD PTR [ebx+0x71]
  413470:	xlat   BYTE PTR ds:[ebx]
  413471:	mov    ecx,DWORD PTR [ebx+0x53]
  413474:	or     cl,al
  413476:	loopne 0x413414
  413478:	inc    DWORD PTR [esi]
  41347a:	mov    edi,0x3c11693
  41347f:	cmp    DWORD PTR [esi-0x2c],esp
  413482:	std    
  413483:	in     eax,dx
  413484:	fld    DWORD PTR [eax]
  413486:	add    BYTE PTR [edi+edi*4+0x6693bf18],dl
  41348d:	test   DWORD PTR ds:0x988d994,eax
  413493:	pop    ss
  413494:	(bad)
  413497:	add    bh,al
  413499:	push   ss
  41349a:	xchg   BYTE PTR [ebx-0x14],al
  41349d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41349e:	xor    DWORD PTR [ebx+0x7b89f561],ecx
  4134a4:	add    bh,ch
  4134a6:	das    
  4134a7:	add    al,0x1f
  4134a9:	popf   
  4134aa:	in     eax,0x89
  4134ac:	int3   
  4134ad:	bound  esi,QWORD PTR [ecx-0x7d561141]
  4134b3:	fist   WORD PTR [ecx+ebx*8+0x239f00d4]
  4134ba:	mov    al,dl
  4134bc:	add    bl,dl
  4134be:	aam    0x0
  4134c0:	xchg   esp,eax
  4134c1:	add    BYTE PTR [edx],cl
  4134c3:	mov    edx,0xfef7e0f3
  4134c8:	fistp  DWORD PTR [edx-0x15]
  4134cb:	adc    BYTE PTR [edi-0x20],0xa8
  4134cf:	fisttp QWORD PTR [ecx+eax*8-0x301c0337]
  4134d6:	xor    al,0xfc
  4134d8:	pushf  
  4134d9:	mov    edx,0xd8744160
  4134de:	xchg   BYTE PTR [ecx],dh
  4134e0:	jnp    0x4134b1
  4134e2:	imul   eax,esp,0xffffffe7
  4134e5:	add    al,0x6a
  4134e7:	inc    ecx
  4134e8:	js     0x4134b9
  4134ea:	bound  ecx,QWORD PTR [ecx+0x70]
  4134ed:	cmp    DWORD PTR [edi+0x4],0xffffff89
  4134f1:	test   ch,ah
  4134f3:	or     dl,BYTE PTR [eax+eax*1+0x2217032f]
  4134fa:	out    dx,al
  4134fb:	add    eax,DWORD PTR [eax]
  4134fd:	xchg   esp,eax
  4134fe:	pop    eax
  4134ff:	daa    
  413500:	pop    ebx
  413501:	popf   
  413502:	add    BYTE PTR [esi+0x6bf8af7e],bh
  413508:	dec    ecx
  413509:	sub    DWORD PTR [eax],esi
  41350b:	aas    
  41350c:	nop
  41350d:	rol    BYTE PTR [ecx],0xe7
  413510:	xchg   DWORD PTR [edi+edi*8+0x6a],edx
  413514:	cld    
  413515:	cwde   
  413516:	add    bh,ah
  413518:	or     DWORD PTR [edi-0x72811831],0xffffffff
  41351f:	push   ebx
  413520:	(bad)  
  413521:	stc    
  413522:	xor    ch,bh
  413524:	xchg   esp,edx
  413526:	(bad)  
  413527:	(bad)  
  413528:	fcom   DWORD PTR [edx-0x72811900]
  41352e:	add    DWORD PTR [ebx+eiz*8+0x7bac7d94],0x64
  413536:	jge    0x4134cc
  413538:	jecxz  0x413503
  41353a:	xor    al,BYTE PTR [eax]
  41353c:	in     eax,0x42
  41353e:	mov    eax,0x84972083
  413543:	(bad)  
  413545:	xchg   edi,eax
  413546:	add    ch,bh
  413548:	push   esp
  413549:	mov    al,ds:0xbf614379
  41354e:	push   edx
  41354f:	cld    
  413550:	into   
  413551:	(bad)  
  413552:	js     0x41352c
  413554:	ins    BYTE PTR es:[edi],dx
  413555:	inc    edx
  413556:	cld    
  413557:	and    DWORD PTR [ebp+ebx*4-0x234a0000],0xffffffe0
  41355f:	std    
  413560:	aam    0x0
  413562:	iret   
  413563:	repnz aas 
  413565:	jmp    0xf08acc00
  41356a:	jmp    0x65f8:0xda6266c8
  413571:	test   al,0x77
  413573:	stc    
  413574:	gs repnz pop eax
  413577:	xchg   DWORD PTR [si],esp
  41357a:	les    esp,FWORD PTR [esi-0x77]
  41357d:	sub    al,BYTE PTR [edx-0x3]
  413580:	mov    ch,0x22
  413582:	cmp    esp,DWORD PTR [edi+edi*4+0x49]
  413586:	das    
  413587:	or     DWORD PTR fs:[eax],ebp
  41358a:	mov    ebp,0xa2774385
  41358f:	ret    
  413590:	and    ebp,ecx
  413592:	xchg   edi,eax
  413593:	retf   
  413594:	add    BYTE PTR [edx-0x2a],dh
  413597:	(bad)  
  413598:	out    0xd9,eax
  41359a:	or     cl,BYTE PTR [edi-0x5227d977]
  4135a0:	adc    BYTE PTR [edx+0x3e],ah
  4135a3:	and    dh,dl
  4135a5:	repnz xor DWORD PTR [esi-0x522f0e18],ecx
  4135ac:	or     dl,ah
  4135ae:	fadd   DWORD PTR [ebp-0xfc6a6bd]
  4135b4:	mov    al,BYTE PTR [eax]
  4135b6:	(bad)  
  4135b7:	and    DWORD PTR [eax-0x73],edx
  4135ba:	lock mov eax,ds:0x2f5fe850
  4135c0:	sti    
  4135c1:	call   DWORD PTR [ebx]
  4135c3:	lds    eax,FWORD PTR [ecx-0x5c]
  4135c6:	add    BYTE PTR [ebp+0x1345bd57],ah
  4135cc:	int    0x63
  4135ce:	shl    DWORD PTR [eax+0x6c],0x8
  4135d2:	push   0xffffffa5
  4135d4:	dec    esi
  4135d5:	inc    ecx
  4135d6:	pushf  
  4135d7:	lods   eax,DWORD PTR ds:[esi]
  4135d8:	scas   eax,DWORD PTR es:[edi]
  4135d9:	jno    0x4135e3
  4135db:	mov    gs:0x856d015c,al
  4135e1:	ror    BYTE PTR [edi],0xf1
  4135e4:	in     al,dx
  4135e5:	add    eax,0xfb867d00
  4135ea:	je     0x41364d
  4135ec:	or     bl,bh
  4135ee:	jne    0x4135fd
  4135f0:	scas   eax,DWORD PTR es:[edi]
  4135f1:	jno    0x4135fb
  4135f3:	adc    eax,0x3d015c4a
  4135f8:	test   eax,eax
  4135fa:	cmpxchg esp,edx
  4135fd:	add    eax,DWORD PTR [eax]
  4135ff:	sub    eax,0x6334394c
  413604:	inc    ecx
  413605:	add    BYTE PTR [eax+0xafba],bh
  41360b:	or     ebp,DWORD PTR [edi+0x4c2d0000]
  413611:	enter  0x5356,0x4a
  413615:	inc    ecx
  413616:	fisttp DWORD PTR [eax-0x3501777b]
  41361c:	scas   eax,DWORD PTR es:[edi]
  41361d:	push   0x0
  41361f:	sbb    eax,0xedd841b7
  413624:	push   esi
  413625:	test   DWORD PTR [ebp+0x54],ecx
  413628:	scas   eax,DWORD PTR es:[edi]
  413629:	rcl    DWORD PTR [esi+0x0],cl
  41362c:	into   
  41362d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41362e:	mov    DWORD PTR [ebp-0x232a06c],eax
  413634:	fist   DWORD PTR [ecx+esi*1-0x37a61403]
  41363b:	sbb    BYTE PTR ds:0x4987c954,bl
  413641:	add    eax,DWORD PTR [ebx+0xd6bc7b]
  413647:	xchg   ch,cl
  413649:	(bad)  
  41364a:	add    DWORD PTR [eax],eax
  41364c:	xlat   BYTE PTR ds:[ebx]
  41364e:	pop    ecx
  41364f:	sub    al,0x95
  413651:	xlat   BYTE PTR ds:[ebx]
  413652:	add    DWORD PTR [ebx+0x3131df51],ecx
  413658:	push   esp
  413659:	mov    dl,0x30
  41365b:	pop    esi
  41365c:	xchg   ebp,eax
  41365d:	fld    DWORD PTR [eax+edi*8-0x41791c7d]
  413664:	xchg   esp,eax
  413665:	fld    DWORD PTR [ecx]
  413667:	std    
  413668:	mov    ebp,ecx
  41366a:	idiv   DWORD PTR [edi]
  41366c:	xchg   esp,eax
  41366d:	lods   al,BYTE PTR ds:[esi]
  41366e:	cmp    eax,0xd99425
  413673:	or     DWORD PTR ds:0x170001e5,0x5
  41367a:	clc    
  41367b:	inc    edi
  41367d:	into   
  41367e:	pop    ebx
  41367f:	std    
  413680:	inc    ebx
  413681:	int    0xf5
  413683:	cld    
  413684:	mov    eax,ds:0x943ff4a9
  413689:	dec    esi
  41368a:	inc    esi
  41368b:	or     al,0x1f
  41368d:	rcl    al,cl
  41368f:	push   eax
  413690:	add    BYTE PTR [esi+ebx*2-0x3ae807b2],al
  413697:	icebp  
  413698:	call   FWORD PTR [eax]
  41369a:	inc    ebx
  41369b:	push   ebp
  41369c:	outs   dx,DWORD PTR ds:[esi]
  41369d:	pop    ss
  41369e:	(bad)
  4136a1:	outs   dx,DWORD PTR ds:[esi]
  4136a2:	adc    bh,dl
  4136a4:	mov    BYTE PTR [ecx+0xd],dl
  4136a7:	jl     0x4136f4
  4136a9:	cld    
  4136aa:	add    BYTE PTR [edi+edx*1-0x15],dh
  4136ae:	gs push 0x51
  4136b1:	xchg   edi,eax
  4136b2:	add    BYTE PTR [ebp-0x72808dc4],bl
  4136b8:	or     BYTE PTR [edx+edx*2+0x55c939ab],dl
  4136bf:	out    dx,eax
  4136c0:	jl     0x413697
  4136c2:	fcom   DWORD PTR [esi-0x28]
  4136c5:	mov    ecx,0xb1cb6acb
  4136ca:	sti    
  4136cb:	push   0xffffffeb
  4136cd:	xchg   esi,eax
  4136ce:	add    bh,ah
  4136d0:	mov    ah,dl
  4136d2:	sti    
  4136d3:	push   0xfffffff3
  4136d5:	xchg   esi,eax
  4136d6:	add    bh,ah
  4136d8:	or     BYTE PTR [ecx+eax*1+0x451d233c],0xd7
  4136e0:	inc    ebx
  4136e1:	mov    ebp,0xa659af45
  4136e6:	retf   
  4136e7:	sbb    al,0xcc
  4136e9:	adc    eax,0x597af0db
  4136ee:	jge    0x413704
  4136f0:	loopne 0x41375e
  4136f2:	gs adc ecx,edi
  4136f5:	add    BYTE PTR [ecx-0x29],bl
  4136f8:	fistp  WORD PTR [ecx-0x65]
  4136fb:	xor    cl,BYTE PTR [edi+0x7ecbc9f2]
  413701:	iret   
  413702:	xlat   BYTE PTR ds:[ebx]
  413703:	lock popa 
  413705:	dec    ecx
  413706:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413707:	jg     0x41372d
  413709:	fcomp  QWORD PTR [ebx-0x593453f9]
  41370f:	jb     0x41377b
  413711:	push   ecx
  413712:	mov    BYTE PTR [eax],al
  413714:	out    0x87,al
  413716:	ins    DWORD PTR es:[edi],dx
  413717:	retf   
  413718:	dec    esi
  413719:	iret   
  41371a:	adc    DWORD PTR [ebp-0x25],edx
  41371d:	into   
  41371e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41371f:	hlt    
  413720:	fadd   DWORD PTR [ebx-0x6c]
  413723:	fld    DWORD PTR [eax]
  413725:	aam    0xca
  413727:	int3   
  413728:	std    
  413729:	bound  eax,QWORD PTR [ebp-0x8]
  41372c:	addr16 test eax,0x92ffe942
  413732:	cwde   
  413733:	ja     0x413778
  413735:	push   ss
  413736:	mov    al,ds:0x98b39ad8
  41373b:	add    BYTE PTR [ecx+ebp*1-0x1a408135],al
  413742:	xchg   edi,eax
  413743:	add    BYTE PTR ds:0x81cd4d3f,cl
  413749:	add    DWORD PTR [eax-0x63fa7c03],ebx
  41374f:	add    BYTE PTR [eax],al
  413751:	xor    DWORD PTR [eax-0x3],esp
  413754:	sub    DWORD PTR [ebp+edx*4+0x210000],0xffffff93
  41375c:	jle    0x413789
  41375e:	jmp    0x4136f7
  413760:	add    BYTE PTR [eax-0x12],cl
  413763:	sbb    esi,DWORD PTR [esi+0x3897e8ff]
  413769:	or     eax,0x13665
  41376e:	jmp    0x79c43322
  413773:	fwait
  413774:	add    BYTE PTR [eax],al
  413776:	add    eax,edx
  413778:	push   ebx
  413779:	sbb    ecx,ebp
  41377b:	in     eax,dx
  41377c:	dec    DWORD PTR [edx-0x17cf3fd4]
  413782:	sbb    BYTE PTR [esi-0x37],ch
  413785:	std    
  413786:	ins    DWORD PTR es:[edi],dx
  413787:	push   edi
  413788:	cld    
  413789:	xor    ecx,0xffffff9b
  41378c:	add    BYTE PTR [eax],al
  41378e:	rcl    edi,1
  413790:	push   ebx
  413791:	sbb    ecx,ebp
  413793:	mov    ebp,0x53ac8b04
  413798:	xor    eax,ebp
  41379a:	adc    BYTE PTR [esi+0x7900fdc9],bh
  4137a0:	mov    ebp,0x1cd840b
  4137a5:	add    BYTE PTR [eax],al
  4137a7:	jbe    0x4137e9
  4137a9:	les    ecx,FWORD PTR [ebx+0x18bc]
  4137af:	mov    dl,0xfd
  4137b1:	xchg   cl,dl
  4137b3:	lods   al,BYTE PTR ds:[esi]
  4137b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4137b5:	adc    BYTE PTR [ebx],cl
  4137b7:	scas   eax,DWORD PTR es:[edi]
  4137b8:	inc    esi
  4137b9:	int    0xc1
  4137bb:	lahf   
  4137bc:	int    0x7e
  4137be:	loope  0x4137c0
  4137c0:	mov    ebp,0xc60000ba
  4137c5:	xchg   esp,eax
  4137c6:	mov    ebp,0xe2c4b5e8
  4137cb:	or     BYTE PTR [esi-0x6ba7a41],dh
  4137d1:	inc    esp
  4137d2:	or     eax,DWORD PTR [esp+eax*4-0x2a000008]
  4137d9:	into   
  4137da:	jns    0x4137db
  4137dc:	bound  eax,QWORD PTR [edi-0x10]
  4137df:	test   DWORD PTR [ebx-0x35],ecx
  4137e2:	sbb    DWORD PTR [edx],0x67fffd79
  4137e8:	lods   eax,DWORD PTR ds:[esi]
  4137e9:	xor    edx,DWORD PTR [edi]
  4137eb:	add    BYTE PTR [edx+0x31],al
  4137ee:	les    edx,FWORD PTR [esi+0x5]
  4137f1:	fcom   DWORD PTR [ebp+0x1]
  4137f4:	ins    DWORD PTR es:[edi],dx
  4137f5:	add    eax,0x1c7e90f
  4137fb:	add    BYTE PTR ds:0xc60c4148,bh
  413801:	adc    esp,eax
  413803:	mov    eax,DWORD PTR [ebp+0x13]
  413806:	sti    
  413807:	push   eax
  413808:	popa   
  413809:	adc    ebp,eax
  41380b:	adc    eax,DWORD PTR [ecx-0x44]
  41380e:	sti    
  41380f:	jmp    0x3cf29c
  413814:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413815:	cmp    DWORD PTR [eax],ecx
  413817:	push   0x19549794
  41381c:	xchg   esp,eax
  41381d:	mov    ebp,0x7518b06
  413822:	xor    al,0xe8
  413824:	add    BYTE PTR [esi-0x60],al
  413827:	add    al,BYTE PTR [eax]
  413829:	adc    BYTE PTR [edi],dl
  41382b:	sti    
  41382c:	or     ebp,0xffffffd5
  41382f:	add    DWORD PTR [eax],eax
  413831:	jb     0x41384b
  413833:	inc    ebp
  413834:	out    dx,eax
  413835:	mov    WORD PTR [ecx-0x2118bc3e],es
  41383b:	push   edi
  41383c:	adc    eax,0x8dfa87
  413841:	adc    al,0xd7
  413843:	add    ebp,edi
  413845:	test   eax,0x943ff833
  41384a:	pop    esp
  41384b:	les    esp,FWORD PTR [esi+0x1f]
  41384e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41384f:	stos   BYTE PTR es:[edi],al
  413850:	or     eax,0x65ef1c01
  413855:	pop    ebp
  413856:	and    al,0xd1
  413858:	jae    0x4137e8
  41385a:	cmp    DWORD PTR [edi+0x43],esi
  41385d:	outs   dx,DWORD PTR ds:[esi]
  41385e:	inc    eax
  41385f:	or     DWORD PTR [ebx-0x79],eax
  413862:	push   es
  413863:	add    eax,0x15995be
  413868:	add    BYTE PTR [esi],cl
  41386a:	adc    eax,0x89e18aac
  41386f:	ja     0x413841
  413871:	adc    al,0x79
  413873:	add    al,BYTE PTR [eax-0x35f8268a]
  413879:	loopne 0x413832
  41387b:	test   edi,eax
  41387d:	enter  0x10c8,0xc7
  413881:	mov    WORD PTR [edi+ebp*8],cs
  413884:	or     al,0x28
  413886:	cdq    
  413887:	cmp    al,BYTE PTR [ecx-0x7f27cb00]
  41388d:	mov    edi,0x30fc8296
  413892:	pop    ebp
  413893:	add    DWORD PTR [edi],ebx
  413895:	aas    
  413896:	test   edi,esi
  413898:	jb     0x41385c
  41389a:	rol    DWORD PTR [ebx-0x3deb00b8],cl
  4138a0:	jecxz  0x41389a
  4138a2:	cli    
  4138a3:	jp     0x413859
  4138a5:	ror    DWORD PTR [esi],cl
  4138a7:	mov    cl,0x67
  4138a9:	loop   0x41383b
  4138ab:	or     BYTE PTR [ecx+0x7],0xae
  4138af:	mov    edx,0xba1025b3
  4138b4:	fwait
  4138b5:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4138b7:	mov    ecx,0xf7853edf
  4138bc:	jp     0x413880
  4138be:	pop    ebx
  4138bf:	or     DWORD PTR [eax],0xffffffc9
  4138c2:	adc    eax,0x91d8efc2
  4138c7:	adc    esi,DWORD PTR [eax]
  4138c9:	or     ecx,DWORD PTR [edi-0xd]
  4138cc:	in     eax,0x77
  4138ce:	repz cmp DWORD PTR [edx-0x1e],ebp
  4138d2:	mov    al,ds:0x8cf4a883
  4138d7:	shl    DWORD PTR [ecx+0x39],1
  4138da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4138db:	or     al,0x6
  4138de:	mov    eax,0xbc1102
  4138e3:	icebp  
  4138e4:	stc    
  4138e5:	ret    
  4138e6:	sbb    BYTE PTR [ecx+0x38546fee],bh
  4138ec:	push   0xffffffe4
  4138ee:	add    BYTE PTR [ebx+eax*4-0x59],dh
  4138f2:	inc    esp
  4138f3:	popf   
  4138f4:	rcr    BYTE PTR [ebp+0x12f86441],1
  4138fa:	std    
  4138fb:	in     eax,dx
  4138fc:	dec    eax
  4138fd:	push   0xe6f894ba
  413902:	add    ebp,ecx
  413904:	into   
  413905:	sub    al,0xd4
  413907:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413908:	dec    esp
  413909:	lock pop ebp
  41390b:	or     al,0x81
  41390d:	add    BYTE PTR [edi-0x17000768],ah
  413913:	jle    0x41396f
  413915:	add    esi,DWORD PTR [ebp+edx*8-0x30]
  413919:	push   eax
  41391a:	ins    BYTE PTR es:[edi],dx
  41391b:	aad    0xa8
  41391d:	push   eax
  41391e:	inc    ecx
  41391f:	pop    ecx
  413920:	dec    ecx
  413921:	std    
  413922:	dec    esi
  413923:	jl     0x3108736c
  413929:	or     eax,0x50d75576
  41392e:	bound  edx,QWORD PTR [ebp-0xc]
  413931:	mov    cl,ah
  413933:	push   0xffffffae
  413935:	std    
  413936:	mov    ecx,0x1c12ddef
  41393b:	iret   
  41393c:	les    ecx,FWORD PTR [ecx+0x405ecf94]
  413942:	xchg   esi,eax
  413943:	mov    edx,0x3cee67c6
  413948:	inc    ebx
  413949:	xchg   esp,eax
  41394a:	cdq    
  41394b:	fbstp  TBYTE PTR [eax+ebx*2-0x18]
  41394f:	xchg   edi,eax
  413950:	jl     0x413912
  413952:	fiadd  WORD PTR [eax]
  413954:	sub    ecx,DWORD PTR [esi-0x7f6816fe]
  41395a:	jnp    0x4139d1
  41395c:	xchg   edi,eax
  41395d:	cmc    
  41395e:	xchg   edx,eax
  41395f:	test   eax,0x39c08c8e
  413964:	or     eax,DWORD PTR [edx-0x6b]
  413967:	jb     0x4139b0
  413969:	js     0x413933
  41396b:	test   al,0x58
  41396d:	icebp  
  41396e:	jle    0x41393b
  413970:	xchg   edi,eax
  413971:	add    ch,bh
  413973:	jmp    0xb1caf0e2
  413978:	pop    eax
  413979:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41397a:	adc    ah,al
  41397c:	xchg   edi,eax
  41397d:	ret    
  41397e:	add    cl,ch
  413980:	push   edx
  413981:	mov    esi,0x874c2489
  413986:	fild   WORD PTR [eax]
  413988:	inc    ebp
  413989:	mov    ebp,0x8d4608ea
  41398e:	xchg   DWORD PTR [eax],ecx
  413990:	stos   BYTE PTR es:[edi],al
  413991:	adc    DWORD PTR [ecx+ebp*8],edx
  413994:	fs mov ebp,0x38a6fffb
  41399a:	or     BYTE PTR [eax-0x13],ch
  41399d:	xor    dl,BYTE PTR [edi]
  41399f:	add    bh,dl
  4139a1:	les    ecx,FWORD PTR [edx-0x17ee56bb]
  4139a7:	ss xor eax,0xad83fffd
  4139ad:	retf   0x5d81
  4139b0:	inc    DWORD PTR [ecx]
  4139b2:	add    BYTE PTR [esi-0x44],ah
  4139b5:	inc    eax
  4139b6:	leave  
  4139b7:	or     BYTE PTR [eax],al
  4139b9:	adc    edi,DWORD PTR [ebp+0x5fe5cf41]
  4139bf:	mov    ebp,0x63c98c45
  4139c4:	shl    eax,0x8e
  4139c7:	or     BYTE PTR [eax+0xf008e18],al
  4139cd:	pusha  
  4139ce:	shr    DWORD PTR [edi],0xc9
  4139d1:	out    dx,al
  4139d2:	mov    edx,0xf4894588
  4139d7:	dec    eax
  4139d8:	clc    
  4139d9:	inc    ebx
  4139da:	(bad)  
  4139db:	mov    BYTE PTR [ebp-0x37],al
  4139de:	jnp    0x4139a0
  4139e0:	pop    es
  4139e1:	jecxz  0x4139dc
  4139e3:	inc    edi
  4139e4:	(bad)  
  4139e5:	loopne 0x4139ac
  4139e7:	arpl   WORD PTR [ecx],di
  4139e9:	test   DWORD PTR ds:0xbcee4705,esi
  4139ef:	add    eax,0x72b4a83b
  4139f4:	in     al,dx
  4139f5:	data16 ds clc 
  4139f8:	jne    0x41398e
  4139fa:	mov    bh,0x41
  4139fc:	clc    
  4139fd:	out    0xd,al
  4139ff:	clc    
  413a00:	imul   edx,DWORD PTR [eax+eiz*4+0x43c18af9],0xffffffdc
  413a08:	pop    esi
  413a09:	mov    ebp,0x5484c77e
  413a0e:	(bad)  
  413a0f:	jge    0x413a0f
  413a11:	xchg   ebp,eax
  413a12:	xlat   BYTE PTR ds:[ebx]
  413a13:	add    DWORD PTR [ecx+0x2b],ebp
  413a16:	loopne 0x413a1c
  413a18:	jnp    0x413a4a
  413a1a:	mov    cl,0xfa
  413a1c:	mov    al,BYTE PTR [eax]
  413a1e:	rcl    DWORD PTR [ebx],1
  413a20:	xor    al,0x55
  413a22:	cld    
  413a23:	cwde   
  413a24:	dec    ebx
  413a25:	std    
  413a26:	or     eax,DWORD PTR [eax+0x1c]
  413a29:	cld    
  413a2a:	add    edi,DWORD PTR [esi]
  413a2c:	pop    esp
  413a2d:	inc    eax
  413a2e:	and    edx,0x1
  413a31:	push   0xffffff95
  413a33:	push   cs
  413a34:	dec    ebp
  413a35:	or     ah,bh
  413a37:	int    0x29
  413a39:	jmp    ebx
  413a3b:	push   edx
  413a3c:	les    ecx,FWORD PTR ds:0x10710
  413a42:	xchg   esp,eax
  413a43:	bound  eax,QWORD PTR [ebp+0x8]
  413a46:	cmp    al,0x97
  413a48:	push   eax
  413a49:	sbb    DWORD PTR [ecx+esi*2-0x4ae74fd],edx
  413a50:	xor    ebp,eax
  413a52:	and    ah,BYTE PTR [esi+0x2]
  413a55:	add    BYTE PTR [eax],dl
  413a57:	pop    ss
  413a58:	test   DWORD PTR [ebx+0x1d7e9],0xe4366e8b
  413a62:	pop    ss
  413a63:	aaa    
  413a64:	cmp    BYTE PTR [eax],al
  413a66:	pop    ds
  413a67:	cdq    
  413a68:	push   ds
  413a69:	std    
  413a6a:	xchg   esp,eax
  413a6b:	fld    DWORD PTR [ecx]
  413a6d:	mov    edi,0xe7c2d274
  413a72:	pushf  
  413a73:	faddp  st(2),st
  413a75:	sbb    ax,0x3c17
  413a79:	sbb    WORD PTR [ecx],ax
  413a7c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413a7d:	clc    
  413a7e:	pop    ss
  413a7f:	jae    0x413a68
  413a81:	add    eax,DWORD PTR [eax]
  413a83:	xchg   esp,eax
  413a84:	repz pop ebp
  413a86:	retf   
  413a87:	or     ebx,esp
  413a89:	jmp    0x727e0004
  413a8e:	mov    eax,0xc8ffaa2c
  413a93:	xor    DWORD PTR [ebp-0x59],edi
  413a96:	clc    
  413a97:	pop    ss
  413a98:	dec    edx
  413a99:	call   0xa799cea1
  413a9e:	push   eax
  413a9f:	jge    0x413aa1
  413aa1:	mov    dh,0xc8
  413aa3:	retf   0xd477
  413aa6:	sti    
  413aa7:	repz push es
  413aa9:	mov    dh,0x2
  413aab:	xchg   esp,eax
  413aac:	jl     0x413ad5
  413aae:	clc    
  413aaf:	pop    ss
  413ab0:	(bad)  
  413ab1:	call   0xccc0ceb9
  413ab6:	repz jmp 0x413ac7
  413ab9:	daa    
  413aba:	lea    edx,[ebx+eax*8+0x77203e7]
  413ac1:	stos   BYTE PTR es:[edi],al
  413ac2:	cmp    eax,DWORD PTR [ebp+0x2e]
  413ac5:	bound  eax,QWORD PTR [ecx]
  413ac7:	cdq    
  413ac8:	mov    ebx,DWORD PTR [ebx+esi*8+0x7ae9e202]
  413acf:	dec    edi
  413ad0:	fsubr  st,st(2)
  413ad2:	mov    ebx,0xd362021d
  413ad7:	jmp    0x413ab3
  413ad9:	xlat   BYTE PTR ds:[ebx]
  413ada:	jl     0x413a78
  413adc:	pop    ds
  413add:	loope  0x413ada
  413adf:	mov    al,ds:0x954d94f3
  413ae4:	ror    ebp,0xfc
  413ae7:	add    BYTE PTR [edx-0x28],cl
  413aea:	(bad)  
  413aec:	mov    BYTE PTR [edi],bl
  413aee:	test   eax,0xf8796bfb
  413af3:	jp     0x413aca
  413af5:	cmp    al,0x0
  413af7:	(bad)  
  413af8:	(bad)
  413afb:	in     al,0xb0
  413afd:	or     ecx,DWORD PTR [edi+ebp*8]
  413b00:	les    eax,FWORD PTR [ecx]
  413b02:	xchg   DWORD PTR [edx],esi
  413b04:	mov    ebp,es
  413b06:	inc    ebx
  413b07:	stc    
  413b08:	jmp    0xe23a8686
  413b0d:	or     DWORD PTR [ecx+0x31],ecx
  413b10:	out    0x8d,al
  413b12:	jmp    0xfd4158fb
  413b17:	jmp    0x1d82b4b3
  413b1c:	lahf   
  413b1d:	mov    eax,0x782048bf
  413b22:	lock or ah,dh
  413b25:	clc    
  413b26:	int    0x62
  413b28:	loopne 0x413aac
  413b2a:	out    dx,al
  413b2b:	loope  0x413ae3
  413b2d:	into   
  413b2e:	or     eax,0xbf35c77f
  413b33:	dec    eax
  413b34:	lock test ebp,0x497b2de2
  413b3b:	cdq    
  413b3c:	push   ss
  413b3d:	enter  0x9c03,0x7c
  413b41:	cmp    DWORD PTR [ecx-0x3],0xe482f597
  413b48:	faddp  st(4),st
  413b4a:	std    
  413b4b:	add    DWORD PTR [eax],0xe8fffec3
  413b51:	pop    ebp
  413b52:	clc    
  413b53:	cld    
  413b54:	mov    ah,0xb7
  413b56:	cwde   
  413b57:	inc    ecx
  413b58:	jmp    0xda452a2f
  413b5d:	push   edi
  413b5e:	add    BYTE PTR [edi-0x3f8253d6],al
  413b64:	out    dx,al
  413b65:	adc    al,0xd4
  413b67:	cli    
  413b68:	(bad)  
  413b69:	push   edx
  413b6a:	fisub  DWORD PTR [edi-0x2ff6817]
  413b70:	add    BYTE PTR [esi-0x2a441a28],bh
  413b76:	mov    ecx,0xd8de83fb
  413b7b:	std    
  413b7c:	call   0x3cf385
  413b81:	test   DWORD PTR [ebx+esi*2],edi
  413b84:	sbb    edi,DWORD PTR ds:0xa8feff28
  413b8a:	(bad)  
  413b8b:	in     eax,0xe8
  413b8d:	mov    edi,ebx
  413b8f:	inc    DWORD PTR [ebx-0x7e7e3513]
  413b95:	cmp    eax,0x208afffe
  413b9a:	(bad)  
  413b9b:	gs inc eax
  413b9d:	sub    dl,bh
  413b9f:	std    
  413ba0:	imul   ebx,DWORD PTR ds:0x4db44149,0xfc563ba6
  413baa:	std    
  413bab:	add    eax,0xffffffe9
  413bae:	daa    
  413baf:	cmp    BYTE PTR [ebp+0x0],0x79
  413bb3:	sbb    eax,0x387d0c74
  413bb8:	mov    ah,0x10
  413bba:	sub    esp,eax
  413bbc:	jge    0x413c3b
  413bbe:	imul   eax,ebp,0x386d5872
  413bc4:	mov    bl,0x0
  413bc6:	sub    DWORD PTR [eax],edx
  413bc8:	sar    ax,0x75
  413bcc:	or     BYTE PTR [esi+0x6c],ah
  413bcf:	inc    eax
  413bd0:	mov    edx,0x41bd0b08
  413bd5:	mov    esp,0xb6797da5
  413bda:	mov    ebp,0x480f1027
  413bdf:	mov    ebp,0x49fb4588
  413be4:	inc    ecx
  413be5:	mov    ah,0xcd
  413be7:	dec    ecx
  413be8:	aas    
  413be9:	xor    DWORD PTR [edi+eax*1-0x27b4bc42],edx
  413bf0:	fnstcw WORD PTR [esp+edi*8-0x46]
  413bf4:	ret    
  413bf5:	mov    bl,cl
  413bf7:	dec    ebx
  413bf8:	(bad)  
  413bf9:	call   0x3f809b95
  413bfe:	ins    DWORD PTR es:[edi],dx
  413bff:	lock leave 
  413c01:	std    
  413c02:	pop    ebx
  413c03:	push   esi
  413c04:	inc    ebp
  413c05:	adc    al,0x94
  413c07:	jmp    0x413bfa
  413c09:	cld    
  413c0a:	rol    ebx,0xc4
  413c0d:	adc    ebp,DWORD PTR [eax+0x2f0041c5]
  413c13:	rcl    BYTE PTR [edi+0x0],cl
  413c16:	add    BYTE PTR [ebx*8+0x5e2bfd49],bh
  413c1d:	iret   
  413c1e:	call   0xfe0486e5
  413c23:	sbb    esp,DWORD PTR [ebp+edx*8-0x3b206018]
  413c2a:	std    
  413c2b:	inc    edx
  413c2d:	js     0x413c20
  413c2f:	in     al,dx
  413c30:	arpl   sp,cx
  413c32:	std    
  413c33:	sti    
  413c34:	sub    eax,0x2f69fcf7
  413c39:	ret    
  413c3a:	jae    0x413bd8
  413c3c:	aas    
  413c3d:	dec    edi
  413c3e:	cmc    
  413c3f:	jecxz  0x413c52
  413c41:	and    ebx,DWORD PTR [esi+0x3f]
  413c44:	adc    dl,al
  413c46:	adc    BYTE PTR [ecx+ecx*4-0x1eee0f88],dl
  413c4d:	dec    edi
  413c4e:	dec    edi
  413c4f:	push   cs
  413c50:	fnstcw WORD PTR [ebp-0x40]
  413c53:	inc    eax
  413c54:	mov    ss,WORD PTR [eax]
  413c56:	shl    BYTE PTR [eax-0x4c],cl
  413c59:	dec    esi
  413c5a:	add    edi,DWORD PTR [esi]
  413c5c:	aad    0x27
  413c5e:	jmp    0x7359cffb
  413c63:	xchg   ebp,eax
  413c64:	add    BYTE PTR ds:0xa6f2a27a,ch
  413c6a:	add    DWORD PTR [ebx-0x1b12ad0f],0xffffff80
  413c71:	ror    BYTE PTR [edx],1
  413c73:	stc    
  413c74:	adc    BYTE PTR [edx-0x7],bh
  413c77:	imul   ebp,DWORD PTR [ecx+ebp*8-0xf47ff3e],0x80927a2c
  413c82:	mov    al,0x13
  413c84:	fild   QWORD PTR [ebx+0x355b8042]
  413c8a:	jmp    0x548d:0xe6025e80
  413c91:	mov    bh,0xa9
  413c93:	add    eax,eax
  413c95:	push   es
  413c96:	adc    ah,al
  413c98:	xor    DWORD PTR [ecx],eax
  413c9a:	out    0x3,eax
  413c9c:	sbb    al,0x8
  413c9e:	(bad)  
  413ca0:	ret    0x1c3
  413ca3:	cld    
  413ca4:	ret    
  413ca5:	(bad)  
  413ca6:	out    dx,al
  413ca7:	add    esi,DWORD PTR [edx-0x3d]
  413caa:	rol    DWORD PTR [ebx],1
  413cac:	jle    0x413cae
  413cae:	rol    DWORD PTR [ebx],0x6e
  413cb1:	add    al,cl
  413cb3:	add    edi,ecx
  413cb5:	xor    al,0xb
  413cb7:	call   0xf38052ac
  413cbc:	stos   DWORD PTR es:[edi],eax
  413cbd:	add    BYTE PTR [edx+0x37],ah
  413cc0:	mov    eax,0x90426004
  413cc5:	repz das 
  413cc7:	jle    0x413c9d
  413cc9:	pcmpeqb mm0,mm3
  413ccc:	(bad)  
  413ccd:	or     bh,ah
  413ccf:	cs or  eax,0xa4d76aad
  413cd5:	(bad)  
  413cd6:	lods   al,BYTE PTR ds:[esi]
  413cd7:	lds    esi,FWORD PTR [ebx+0x294f2784]
  413cdd:	push   ebx
  413cde:	add    BYTE PTR [edi+0x778b7000],bl
  413ce4:	loope  0x413d04
  413ce6:	inc    ebx
  413ce7:	hlt    
  413ce8:	jb     0x413c89
  413cea:	xchg   DWORD PTR [ebx-0x27],eax
  413ced:	sbb    eax,0x134b74c0
  413cf2:	xor    eax,0x5dfddef8
  413cf7:	add    al,0x72
  413cf9:	pop    esi
  413cfa:	mov    BYTE PTR [ebx-0x42],0x90
  413cfe:	test   al,0x6
  413d00:	mov    al,ds:0xb181bd57
  413d05:	mov    dh,0x32
  413d07:	inc    ebp
  413d08:	je     0x413ce7
  413d0a:	mov    eax,0x2ad01350
  413d0f:	push   ds
  413d10:	aas    
  413d11:	jb     0x413cd0
  413d13:	std    
  413d14:	hlt    
  413d15:	jae    0x413d29
  413d17:	inc    eax
  413d18:	jmp    0xbbb5fd39
  413d1d:	jns    0x413d1f
  413d1f:	sub    DWORD PTR [edx-0xb02af1d],0x666a55e7
  413d29:	xlat   BYTE PTR ds:[ebx]
  413d2a:	adc    dl,BYTE PTR [ebx+edi*8+0x29830057]
  413d31:	mov    esp,0xd6a4c604
  413d36:	mov    esi,0x502fac8c
  413d3b:	std    
  413d3c:	mov    ah,0x2f
  413d3e:	sub    bl,BYTE PTR [esi]
  413d40:	lahf   
  413d41:	mov    cl,0xbd
  413d43:	std    
  413d44:	aam    0x0
  413d46:	mov    bl,0x12
  413d48:	inc    eax
  413d49:	jmp    0xea3e7865
  413d4e:	mov    WORD PTR [esi+eax*8],es
  413d51:	lods   al,BYTE PTR ds:[esi]
  413d52:	aad    0xff
  413d54:	and    BYTE PTR [esi],0xa0
  413d57:	mov    ebp,0xf7b1004b
  413d5c:	mov    BYTE PTR [edi+0xb],bl
  413d5f:	pop    esi
  413d60:	mov    al,BYTE PTR [ebp-0x55]
  413d63:	retf   
  413d64:	mov    edi,0xfa8e0256
  413d69:	mov    ebp,DWORD PTR [edi+ecx*4+0x9]
  413d6d:	xor    al,0x19
  413d6f:	inc    edi
  413d70:	add    BYTE PTR [edi-0x3d],dl
  413d73:	ins    BYTE PTR es:[edi],dx
  413d74:	mov    al,ds:0x2f026cac
  413d79:	leave  
  413d7a:	xchg   esp,eax
  413d7b:	xor    eax,DWORD PTR [eax-0x54]
  413d7e:	mov    esi,0xf4067104
  413d83:	cmp    al,0x40
  413d85:	lods   al,BYTE PTR ds:[esi]
  413d86:	scas   al,BYTE PTR es:[edi]
  413d87:	add    al,0x7f
  413d89:	rol    DWORD PTR [ecx-0x79],0xf5
  413d8d:	sbb    BYTE PTR [edi-0x11a1a492],ch
  413d93:	pop    eax
  413d94:	xchg   esp,ebp
  413d96:	jl     0x413ded
  413d98:	push   esi
  413d99:	mov    esi,DWORD PTR [eax]
  413d9b:	push   cs
  413d9c:	das    
  413d9d:	fucomi st,st(6)
  413d9f:	int3   
  413da0:	aaa    
  413da1:	repz and ebx,DWORD PTR [edx]
  413da4:	xchg   DWORD PTR [ebp+0x35],eax
  413da7:	xchg   eax,eax
  413da9:	or     al,0x0
  413dab:	mov    ah,0x5c
  413dad:	hlt    
  413dae:	je     0x413d88
  413db0:	mov    WORD PTR [eax-0x4],ds
  413db3:	jne    0x413dce
  413db5:	cmp    eax,0x3711ad83
  413dba:	into   
  413dbb:	das    
  413dbc:	jo     0x413d45
  413dbe:	mov    dh,0xc1
  413dc1:	pop    ds
  413dc2:	push   edi
  413dc3:	xlat   BYTE PTR ds:[ebx]
  413dc4:	inc    ecx
  413dc5:	push   0x1dd00
  413dca:	push   eax
  413dcb:	push   cs
  413dcc:	in     al,dx
  413dcd:	cli    
  413dce:	inc    eax
  413dd0:	loope  0x413de3
  413dd2:	inc    eax
  413dd3:	xchg   esp,eax
  413dd4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413dd5:	mov    ?,eax
  413dd7:	jg     0x413deb
  413dd9:	xor    eax,0xbd651d4d
  413dde:	cmp    DWORD PTR [edi+0x2988f135],esp
  413de4:	lahf   
  413de5:	xchg   dh,al
  413de7:	mov    WORD PTR [edx],fs
  413de9:	pop    edi
  413dea:	clc    
  413deb:	cld    
  413dec:	cmp    ch,ah
  413dee:	ds xchg esp,eax
  413df0:	idiv   BYTE PTR [esi+0x59bf8076]
  413df6:	enter  0xce7b,0x85
  413dfa:	shr    al,0xdc
  413dfd:	mov    bh,BYTE PTR [esi]
  413dff:	xchg   edi,eax
  413e00:	mov    edi,0x1f6043bf
  413e05:	dec    edx
  413e06:	add    al,0xf
  413e08:	in     al,0xbf
  413e0a:	sbb    DWORD PTR [edx-0x49],0x980042fc
  413e11:	sbb    edx,ebx
  413e13:	mov    ecx,ebx
  413e15:	mov    ds:0x143842fa,eax
  413e1a:	or     al,0xb0
  413e1c:	xchg   ebp,eax
  413e1d:	xchg   edx,eax
  413e1e:	adc    dh,BYTE PTR [edx]
  413e20:	push   esp
  413e21:	xchg   edx,eax
  413e22:	or     ecx,DWORD PTR [ecx-0x5656602f]
  413e28:	sbb    ch,BYTE PTR [esi]
  413e2a:	mov    edi,0x5fc5d432
  413e2f:	pop    ecx
  413e30:	fucomp st(0)
  413e32:	or     eax,DWORD PTR [eax]
  413e34:	xor    eax,0x94416d6b
  413e39:	and    al,0xc4
  413e3b:	je     0x413ddd
  413e3d:	out    dx,al
  413e3e:	add    al,0xa4
  413e40:	xor    BYTE PTR [edx+0x1],ch
  413e43:	push   0xfffffff7
  413e45:	addr16 add ecx,ebp
  413e48:	mov    ecx,DWORD PTR [eax+0x57ac44]
  413e4e:	out    0xc8,eax
  413e50:	xchg   edi,eax
  413e51:	fs inc ebx
  413e53:	inc    ebp
  413e54:	xchg   esp,eax
  413e55:	jno    0x413e60
  413e57:	inc    ebx
  413e58:	xchg   esp,eax
  413e59:	popa   
  413e5a:	inc    edi
  413e5b:	push   0x54480055
  413e60:	clc    
  413e61:	inc    eax
  413e62:	out    0x64,eax
  413e64:	in     al,0x63
  413e66:	stos   BYTE PTR es:[edi],al
  413e67:	add    edi,ebx
  413e69:	xchg   esp,edx
  413e6b:	inc    ebx
  413e6c:	xchg   esp,eax
  413e6d:	pop    edi
  413e6e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413e6f:	addr16 aad 0x0
  413e72:	mov    BYTE PTR [ebx-0x18bf5900],al
  413e78:	fs fs sub al,BYTE PTR gs:[ebx+edx*1]
  413e7e:	popa   
  413e7f:	fadd   QWORD PTR [ebx-0x6c]
  413e82:	pop    edi
  413e83:	(bad)  
  413e84:	addr16 aad 0x0
  413e87:	mov    BYTE PTR [ebx-0x79],ch
  413e8a:	inc    eax
  413e8b:	out    0x64,eax
  413e8d:	inc    esp
  413e8e:	sub    al,BYTE PTR gs:[ebx+ebp*1]
  413e92:	cmp    eax,0x5f9443f4
  413e97:	out    0x66,eax
  413e99:	aad    0x0
  413e9b:	dec    eax
  413e9c:	xchg   ebx,eax
  413e9d:	xchg   DWORD PTR [eax-0x19],eax
  413ea0:	test   BYTE PTR fs:[ebp+0x2a],ah
  413ea4:	add    al,0x3
  413ea6:	xchg   ebp,eax
  413ea7:	fadd   QWORD PTR [ebx-0x6c]
  413eaa:	pop    edi
  413eab:	(bad)  
  413eac:	push   bp
  413eae:	add    BYTE PTR [eax-0x18bf5865],cl
  413eb4:	les    esp,FWORD PTR fs:[ebp-0x56]
  413eb8:	add    ebx,DWORD PTR [ebx]
  413eba:	gs hlt 
  413ebc:	inc    ebx
  413ebd:	xchg   esp,eax
  413ebe:	pop    edi
  413ebf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413ec0:	push   bp
  413ec2:	add    BYTE PTR [eax+0x408787],cl
  413ec8:	jmp    0xaae48f3d
  413ecd:	xchg   edi,eax
  413ece:	fwait
  413ecf:	pushf  
  413ed0:	cld    
  413ed1:	push   edi
  413ed2:	add    BYTE PTR [ecx+0x413a89],ah
  413ed8:	dec    eax
  413ed9:	add    BYTE PTR [ebx],cl
  413edb:	adc    BYTE PTR [eax-0x17],al
  413ede:	cmp    BYTE PTR [eax],dh
  413ee0:	mov    ds:0x1c9b97aa,eax
  413ee5:	xlat   BYTE PTR ds:[ebx]
  413ee6:	push   edi
  413ee7:	add    BYTE PTR [ecx+0x413269],ah
  413eed:	dec    eax
  413eee:	ja     0x413f05
  413ef0:	inc    eax
  413ef1:	jmp    0x2ae4cfec
  413ef6:	cwde   
  413ef7:	fwait
  413ef8:	adc    bh,bh
  413efa:	xlat   BYTE PTR ds:[ebx]
  413efb:	add    BYTE PTR [ecx+0x41fd89],ah
  413f01:	mov    BYTE PTR [eax-0x916bfee],cl
  413f07:	jo     0x413eac
  413f09:	sub    dl,BYTE PTR [eax-0x2828f365]
  413f0f:	add    BYTE PTR [ecx+0x41bda9],ah
  413f15:	dec    eax
  413f16:	xor    al,0x14
  413f18:	inc    eax
  413f19:	jmp    0x2ae50fd4
  413f1e:	cwde   
  413f1f:	fwait
  413f20:	xor    ah,bl
  413f22:	xlat   BYTE PTR ds:[ebx]
  413f23:	add    BYTE PTR [ecx+0x41ad89],ah
  413f29:	dec    eax
  413f2a:	lods   al,BYTE PTR ds:[esi]
  413f2b:	adc    al,0x40
  413f2d:	jmp    0xaae4efa8
  413f32:	xchg   edi,eax
  413f33:	fwait
  413f34:	cmp    al,0xf4
  413f36:	push   edi
  413f37:	add    BYTE PTR [ecx+0x4171e9],ah
  413f3d:	mov    BYTE PTR [eax],al
  413f3f:	int3   
  413f40:	adc    eax,DWORD PTR [eax+0x0]
  413f43:	std    
  413f44:	sbb    eax,0xff2ea610
  413f49:	pushf  
  413f4a:	sub    al,0xb8
  413f4c:	add    BYTE PTR ds:[ebx+0x3f229d],ah
  413f53:	pop    esp
  413f54:	pusha  
  413f55:	adc    al,0x40
  413f57:	lods   eax,DWORD PTR ds:[esi]
  413f58:	sbb    eax,0xfeeea630
  413f5d:	pushf  
  413f5e:	fsubr  DWORD PTR [ecx-0x25cffc2]
  413f64:	and    al,0x3f
  413f66:	add    BYTE PTR [eax+edi*4+0x12],cl
  413f6a:	inc    eax
  413f6b:	lods   eax,DWORD PTR ds:[esi]
  413f6c:	sbb    eax,0xfe3ea650
  413f71:	pushf  
  413f72:	sub    BYTE PTR [eax-0x325cffc2],cl
  413f78:	and    bh,BYTE PTR [edi]
  413f7a:	add    BYTE PTR [esi+eiz*1],cl
  413f7d:	adc    al,0x40
  413f7f:	jge    0x413fa0
  413f81:	jo     0x413f29
  413f83:	mov    esi,0x49ac9d04
  413f88:	add    BYTE PTR ds:[ebx+0x3f23ed],ah
  413f8f:	sbb    al,0x2e
  413f91:	adc    al,0x40
  413f93:	cmp    eax,0x6ea6901f
  413f98:	add    al,0x9d
  413f9a:	cwde   
  413f9b:	cmp    DWORD PTR [esi],edi
  413f9d:	add    BYTE PTR [ebx+0x3f23dd],ah
  413fa3:	add    ah,bl
  413fa5:	jno    0x413fbb
  413fa7:	inc    eax
  413fa8:	sub    eax,0x6ea6b01f
  413fad:	add    al,0x9d
  413faf:	enter  0x3de9,0x0
  413fb3:	mov    ds:0x3f23bd,eax
  413fb8:	or     al,0x5e
  413fba:	adc    al,0x40
  413fbc:	xchg   esp,eax
  413fbd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413fbe:	(bad)  
  413fbf:	sar    BYTE PTR [edx],1
  413fc1:	add    DWORD PTR [bx-0x23d4],ebx
  413fc6:	inc    ecx
  413fc7:	add    BYTE PTR [edi],dh
  413fc9:	dec    eax
  413fca:	arpl   WORD PTR [ecx-0x6c],ax
  413fcd:	mov    BYTE PTR [ecx+0x13],cl
  413fd0:	push   esp
  413fd1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413fd2:	(bad)  
  413fd3:	lock xacquire add WORD PTR [edi+0x41b3ac],bx
  413fdc:	mul    DWORD PTR [edi+0x48944166]
  413fe2:	int    0x14
  413fe4:	push   esp
  413fe5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413fe6:	bound  edx,QWORD PTR [eax]
  413fe8:	sti    
  413fe9:	add    WORD PTR [edi+0x41dc54],bx
  413ff0:	aaa    
  413ff1:	(bad)  
  413ff2:	inc    cx
  413ff4:	xchg   esp,eax
  413ff5:	mov    BYTE PTR [eax+0x60a7d414],ch
  413ffb:	xor    BYTE PTR [ebx],dh
  413ffd:	out    0x3,al
  413fff:	lahf   
  414000:	push   esp
  414001:	mov    bl,0x41
  414003:	add    BYTE PTR [edi],dh
  414005:	out    0x62,eax
  414007:	inc    ecx
  414008:	add    BYTE PTR [eax+ecx*4-0x582beb9c],dl
  41400f:	pusha  
  414010:	push   eax
  414011:	sti    
  414012:	in     eax,0x3
  414014:	lahf   
  414015:	mov    WORD PTR [ecx+eax*2+0x6306f700],?
  41401c:	inc    ecx
  41401d:	xchg   esp,eax
  41401e:	dec    eax
  41401f:	mov    esp,0x60a7d414
  414024:	jo     0x414019
  414026:	in     eax,0x3
  414028:	lahf   
  414029:	inc    esp
  41402a:	rol    DWORD PTR [ecx+0x0],cl
  41402d:	mul    DWORD PTR [esi]
  41402f:	arpl   WORD PTR [ecx-0x6c],ax
  414032:	dec    eax
  414033:	push   eax
  414034:	adc    edx,DWORD PTR [eax+eax*1-0x19]
  414038:	pusha  
  414039:	and    al,0x61
  41403b:	stos   BYTE PTR es:[edi],al
  41403c:	add    ebx,DWORD PTR [ebx]
  41403e:	lods   al,BYTE PTR ds:[esi]
  41403f:	sti    
  414040:	inc    ebx
  414041:	xchg   esp,eax
  414042:	pop    ebp
  414043:	xchg   DWORD PTR [ebp+0x55],esp
  414046:	add    BYTE PTR [eax-0x18bf7738],cl
  41404c:	pusha  
  41404d:	and    al,0x61
  41404f:	stos   BYTE PTR es:[edi],al
  414050:	add    esi,DWORD PTR [ebx]
  414052:	jl     0x414027
  414054:	inc    ebx
  414055:	xchg   esp,eax
  414056:	pop    ebp
  414057:	daa    
  414058:	gs push ebp
  41405a:	add    BYTE PTR [eax+0x4],cl
  41405d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41405e:	inc    eax
  41405f:	out    0x60,eax
  414061:	les    esp,FWORD PTR [eax-0x56]
  414064:	add    ecx,DWORD PTR [ebx]
  414066:	inc    esp
  414067:	fadd   QWORD PTR [ebx-0x6c]
  41406a:	pop    ebp
  41406b:	pop    es
  41406c:	add    BYTE PTR gs:[ebp+0x0],dl
  414070:	dec    eax
  414071:	mov    ah,0xa8
  414073:	inc    eax
  414074:	out    0x60,eax
  414076:	test   BYTE PTR [eax+0x2a],ah
  414079:	add    al,0x23
  41407b:	mov    ch,0xf3
  41407d:	inc    ebx
  41407e:	xchg   esp,eax
  41407f:	arpl   di,sp
  414081:	imul   edx,ebp,0x0
  414084:	mov    BYTE PTR [edi+0x29e74084],bl
  41408a:	pushf  
  41408b:	sub    BYTE PTR [edi-0x75ff2a99],al
  414091:	adc    edi,esp
  414093:	inc    ebx
  414094:	out    0xab,eax
  414096:	xchg   ecx,eax
  414097:	mov    ch,0xa6
  414099:	mov    esp,0x89355455
  41409e:	xchg   DWORD PTR [ecx+edi*8+0x43],esi
  4140a2:	xchg   esp,eax
  4140a3:	sub    BYTE PTR [ebx],dh
  4140a5:	ss aam 0x0
  4140a8:	push   ds
  4140a9:	mov    ebp,0x360f294a
  4140ae:	aam    0x0
  4140b0:	add    BYTE PTR [esi],bl
  4140b2:	jne    0x414094
  4140b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4140b5:	sub    dl,BYTE PTR [eax-0x342e294b]
  4140bb:	cs inc eax
  4140bd:	jmp    0x8171a222
  4140c2:	push   esp
  4140c3:	add    ch,bh
  4140c5:	aaa    
  4140c6:	mov    edi,0x97a97634
  4140cb:	dec    ebp
  4140cc:	mov    eax,ds:0x416fa9
  4140d1:	ss add cl,ch
  4140d4:	sub    BYTE PTR [edi+esi*4+0x4a550057],al
  4140db:	addr16 push 0xcef8e941
  4140e1:	push   0xffffffec
  4140e3:	jg     0x4140c5
  4140e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4140e6:	stos   BYTE PTR es:[edi],al
  4140e7:	xchg   edi,eax
  4140e8:	popa   
  4140e9:	pusha  
  4140ea:	push   ecx
  4140eb:	push   esp
  4140ec:	add    al,ch
  4140ee:	cmp    bl,bl
  4140f0:	mov    ch,0xfd
  4140f2:	arpl   WORD PTR [edi+0x7c],bp
  4140f5:	fnstenv [ebp+0x72]
  4140f8:	mov    ah,0x33
  4140fa:	push   ecx
  4140fb:	lock inc ecx
  4140fd:	add    BYTE PTR [edx+0x57],dh
  414100:	mov    ch,0x33
  414102:	xor    DWORD PTR [eax],eax
  414104:	inc    edx
  414105:	add    dh,cl
  414107:	gs aas 
  414109:	test   al,0x2a
  41410b:	cwde   
  41410c:	mov    ch,0x33
  41410e:	add    eax,ebp
  414110:	inc    ecx
  414111:	add    BYTE PTR [esi+0x2aa7df45],dh
  414117:	nop
  414118:	test   al,0x67
  41411a:	es cwde 
  41411c:	add    BYTE PTR [esi+0x73],bl
  41411f:	push   ebx
  414120:	pop    ecx
  414121:	sar    DWORD PTR [ebx+eiz*1],0xa4
  414125:	dec    edi
  414126:	cmp    bh,al
  414128:	sub    al,BYTE PTR [edi]
  41412a:	add    BYTE PTR [eax+0x558f7f9],ch
  414130:	sbb    edx,ecx
  414132:	add    ch,bh
  414134:	test   ebx,eax
  414136:	push   eax
  414137:	add    BYTE PTR [edx-0xf],bh
  41413a:	pop    es
  41413b:	call   0x3c6ad6
  414140:	jo     0x4140fe
  414142:	jno    0x41414b
  414144:	add    eax,0xfd00fb7b
  414149:	gs pop ds
  41414b:	push   0xffffffe7
  41414d:	xchg   DWORD PTR [ecx-0x8],edi
  414150:	xor    eax,0xbdc9fc6b
  414155:	add    al,BYTE PTR [edi+0x717a2dc7]
  41415b:	or     BYTE PTR [ebp-0x6500538a],ah
  414161:	add    eax,0xfe3ac275
  414167:	(bad)  
  414168:	mov    ebp,0xde02e702
  41416d:	ret    0xc95b
  414170:	outs   dx,DWORD PTR ds:[esi]
  414171:	add    BYTE PTR [eax],al
  414173:	push   ebp
  414174:	imul   BYTE PTR [eax+0x6a]
  414177:	cmp    dl,BYTE PTR [edi]
  414179:	add    cl,BYTE PTR [edi-0x1]
  41417c:	and    BYTE PTR [esi-0x7892bfed],0x51
  414183:	or     al,0xf8
  414185:	inc    esi
  414186:	add    al,0x83
  414188:	xor    esi,edi
  41418a:	or     cl,0xa1
  41418d:	push   cs
  41418e:	adc    edx,0x44b9ffa0
  414194:	nop
  414195:	cmp    al,0x0
  414197:	lea    esi,[eax+0x8]
  41419a:	push   eax
  41419b:	call   0xfb651ba0
  4141a0:	push   DWORD PTR [eax-0x6bec8b91]
  4141a6:	daa    
  4141a7:	imul   DWORD PTR [ecx]
  4141a9:	mov    eax,ds:0x957e81d5
  4141ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4141af:	xor    BYTE PTR [eax],cl
  4141b1:	addr16 addr16 pop ds
  4141b4:	xchg   DWORD PTR [edi+0x75],edx
  4141b7:	scas   al,BYTE PTR es:[edi]
  4141b8:	cmp    bl,BYTE PTR [ecx]
  4141ba:	jmp    0x4141ad
  4141bc:	or     BYTE PTR [edx],0xd4
  4141bf:	out    0x89,eax
  4141c1:	mov    bl,BYTE PTR [ebx]
  4141c3:	int3   
  4141c4:	je     0x414182
  4141c6:	daa    
  4141c7:	mov    esp,0x8bad6130
  4141cc:	dec    esi
  4141cd:	xchg   ebp,eax
  4141ce:	daa    
  4141cf:	mov    esp,0x819c6078
  4141d4:	imul   DWORD PTR [esp+esi*2+0xc]
  4141d8:	mov    edx,ebx
  4141da:	aas    
  4141db:	nop
  4141dc:	or     BYTE PTR [edi+eiz*4+0x326312ae],dl
  4141e3:	mov    ecx,0xe0ffca89
  4141e8:	push   es
  4141e9:	xchg   esp,eax
  4141ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4141eb:	pop    edx
  4141ec:	jmp    0x670dbc8a
  4141f1:	or     eax,0x9c438eb0
  4141f6:	and    al,0xc1
  4141f8:	je     0x414195
  4141fa:	daa    
  4141fb:	stc    
  4141fc:	sub    DWORD PTR [ecx],ecx
  4141fe:	mov    dl,0x81
  414200:	js     0x414202
  414202:	xchg   ebp,eax
  414203:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414204:	cs add al,0xa7
  414207:	stos   DWORD PTR es:[di],eax
  414209:	push   es
  41420a:	les    edi,FWORD PTR [edi-0x419c02f1]
  414210:	and    al,BYTE PTR [edi-0x3dab0029]
  414216:	pushf  
  414217:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414218:	dec    esi
  414219:	mov    DWORD PTR [eax],edi
  41421b:	sub    ah,BYTE PTR [eax-0x6cffea08]
  414221:	adc    BYTE PTR [eax+0x1d54e700],0x53
  414228:	fisttp WORD PTR [ebp+edx*4-0x2fb3a9fb]
  41422f:	dec    esi
  414230:	push   0xffffffca
  414232:	sbb    DWORD PTR [edx+0x7e],edi
  414235:	mov    ecx,0x8b1e0094
  41423a:	sbb    ah,0xd2
  41423d:	mov    cl,BYTE PTR [eax-0x42de0924]
  414243:	retf   0x3ed3
  414246:	pop    esi
  414247:	push   ds
  414248:	adc    cl,dh
  41424a:	pusha  
  41424b:	cmc    
  41424c:	rol    BYTE PTR ds:0x48701e4b,0xb0
  414253:	sbb    dh,ch
  414255:	jno    0x4142b3
  414257:	inc    ebx
  414258:	int    0x8c
  41425a:	push   esp
  41425b:	inc    esp
  41425c:	(bad)
  41425f:	pop    es
  414260:	lea    ecx,[esp+ecx*8]
  414263:	sbb    BYTE PTR [ebx+0x1e8b00df],0x60
  41426a:	dec    eax
  41426b:	jo     0x414287
  41426d:	es inc eax
  41426f:	js     0x414285
  414271:	xchg   BYTE PTR [ebx],al
  414273:	xchg   esp,eax
  414274:	dec    DWORD PTR [esi]
  414276:	sub    ah,ah
  414278:	add    edi,esp
  41427a:	mov    dl,al
  41427c:	(bad)  
  41427e:	cld    
  41427f:	pop    ecx
  414280:	add    al,0x6b
  414282:	inc    esp
  414283:	xchg   esi,eax
  414284:	add    bh,ah
  414286:	push   ebx
  414287:	jl     0x4142a3
  414289:	clc    
  41428a:	add    edx,DWORD PTR [edi+eax*4+0x18cc86ea]
  414291:	dec    ebp
  414292:	(bad)  
  414293:	aam    0x46
  414295:	sbb    BYTE PTR [eax+eiz*1-0x6817ffaf],ch
  41429c:	jnp    0x4142e2
  41429e:	add    eax,0xf6c5f9a8
  4142a3:	mov    ebx,0x97e901de
  4142a8:	push   eax
  4142a9:	call   0x41ca3f
  4142ae:	mov    ?,WORD PTR [ebx-0x24]
  4142b1:	setno  BYTE PTR [edx+0x20e90010]
  4142b8:	add    dh,dh
  4142ba:	jmp    0x6a446f55
  4142bf:	xlat   BYTE PTR ds:[ebx]
  4142c0:	cld    
  4142c1:	call   0x8bb543b1
  4142c6:	mov    dl,0xf3
  4142c8:	inc    edx
  4142c9:	push   eax
  4142ca:	push   esi
  4142cb:	add    BYTE PTR [ebx-0x6766e824],bh
  4142d1:	es add al,0xa7
  4142d4:	das    
  4142d5:	dec    esp
  4142d6:	(bad)  
  4142d7:	call   0xe701bf73
  4142dc:	dec    ebx
  4142dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4142de:	(bad)  
  4142df:	call   0xf642cc7b
  4142e4:	inc    esp
  4142e5:	inc    eax
  4142e6:	dec    esp
  4142e7:	int3   
  4142e8:	in     eax,dx
  4142e9:	mov    ch,0x0
  4142eb:	jmp    0x95899b6b
  4142f0:	mov    DWORD PTR [ebp-0x7674328c],esi
  4142f6:	pop    esp
  4142f7:	lds    esp,FWORD PTR [ebx-0x6967bc58]
  4142fd:	add    bh,ah
  4142ff:	and    al,0x96
  414301:	add    BYTE PTR [eax],al
  414303:	jb     0x4142c9
  414305:	fmul   QWORD PTR [edi]
  414307:	push   ebx
  414308:	cwde   
  414309:	jmp    DWORD PTR es:[ebx-0x2c]
  41430d:	fcom   QWORD PTR [ecx+edi*1]
  414310:	(bad)  
  414312:	call   0xfd7b5b17
  414317:	(bad)  
  414318:	mov    ecx,0xbd1c74bc
  41431d:	clc    
  41431e:	and    ecx,DWORD PTR [edi]
  414320:	cmp    al,dh
  414322:	pop    es
  414323:	push   esi
  414324:	and    eax,0x12ff8d3c
  414329:	or     DWORD PTR [bx+si-0x5f7f],eax
  41432e:	or     al,0x4
  414330:	add    BYTE PTR [eax-0x5f17ac4e],cl
  414336:	xchg   esi,eax
  414337:	sti    
  414338:	jmp    DWORD PTR ds:0xfd01521a
  41433e:	jge    0x41438c
  414340:	and    al,0xdd
  414342:	imul   esp,ebp,0xfffeec85
  414348:	imul   edi,esp,0xedfc1169
  41434e:	add    BYTE PTR ds:[eax+0x52],dl
  414352:	adc    DWORD PTR [eax],eax
  414354:	adc    DWORD PTR ds:0x400069ff,ebp
  41435a:	and    BYTE PTR [esp+edx*4],0xbd
  41435e:	(bad)  
  41435f:	dec    DWORD PTR [edi-0x2b]
  414362:	xchg   DWORD PTR [ebp+0x37],eax
  414365:	in     al,0x66
  414367:	and    edi,DWORD PTR [esi-0x6e]
  41436a:	imul   ecx,DWORD PTR [ecx+0x8ed984],0x0
  414371:	lods   eax,DWORD PTR ds:[esi]
  414372:	dec    esi
  414373:	call   0x3ced40
  414378:	cmp    DWORD PTR [ebp+0x7c4d83f9],0xfffffffe
  41437f:	jmp    FWORD PTR [ecx+0x6c]
  414382:	mov    DWORD PTR [esp-0x18f],ebx
  414389:	inc    ebp
  41438a:	mov    cl,0xb8
  41438c:	add    BYTE PTR [edi+eiz*4+0x1b93c07d],dl
  414393:	(bad)  
  414395:	add    BYTE PTR [ebx-0x58],bl
  414398:	mov    dh,0x13
  41439a:	cmp    al,0xd7
  41439c:	inc    ecx
  41439d:	add    BYTE PTR [ecx],dl
  41439f:	push   0xfbd89306
  4143a4:	add    al,0x31
  4143a6:	pop    edi
  4143a7:	mov    al,ds:0xa2a32455
  4143ac:	adc    BYTE PTR [edi+0x6a01a794],0xa8
  4143b3:	push   esp
  4143b4:	sub    eax,0xabdf6824
  4143b9:	(bad)  
  4143ba:	(bad)  [edi-0x3bef74ff]
  4143c0:	mov    DWORD PTR [edx],eax
  4143c2:	xchg   esp,eax
  4143c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4143c4:	push   ecx
  4143c5:	push   0xffffff90
  4143c7:	dec    edi
  4143c8:	fisub  DWORD PTR [ebp-0x6b]
  4143cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4143cc:	jge    0x41438e
  4143ce:	pusha  
  4143cf:	int    0x8a
  4143d1:	mov    BYTE PTR [esp+edx*2+0x7d],0x24
  4143d6:	or     BYTE PTR [esi-0x689bffff],ah
  4143dc:	test   eax,0x1a83cea
  4143e1:	adc    esp,0x6b
  4143e4:	and    BYTE PTR [edx+0x50],ch
  4143e7:	mov    ecx,0xbb588b4b
  4143ec:	inc    ebp
  4143ed:	push   ecx
  4143ee:	inc    esp
  4143ef:	or     dl,BYTE PTR [eax]
  4143f1:	xor    al,0x8a
  4143f3:	add    DWORD PTR [bx+di-0x5430],eax
  4143f8:	mov    BYTE PTR [eax+eax*1+0x157b8],al
  4143ff:	xchg   esp,eax
  414400:	and    BYTE PTR ds:0x3d54e424,bh
  414406:	and    al,0x9c
  414408:	add    BYTE PTR [edi],dh
  41440a:	xchg   eax,ebx
  41440c:	fsubr  QWORD PTR [edx]
  41440e:	push   esp
  41440f:	lds    ecx,FWORD PTR [ebp+0x64]
  414412:	cmp    BYTE PTR [eax-0x6bfc1668],0x50
  414419:	jo     0x41444b
  41441b:	js     0x414471
  41441d:	iret   
  41441e:	xor    bh,BYTE PTR [ebx+0x547ee700]
  414424:	sub    al,0x5
  414426:	sub    al,0xc
  414428:	or     eax,0x2c3103e7
  41442d:	ret    
  41442e:	pop    ss
  41442f:	sub    DWORD PTR [ebx],ecx
  414431:	not    DWORD PTR [eax]
  414433:	aam    0x0
  414435:	mov    ?,WORD PTR [eax]
  414437:	jo     0x41444d
  414439:	jb     0x41442a
  41443b:	xor    ecx,DWORD PTR [esi]
  41443d:	daa    
  41443e:	add    al,0x9
  414440:	retf   0x3076
  414443:	mov    eax,0xd2ce6e18
  414448:	cmp    ecx,DWORD PTR [ebx]
  41444a:	add    eax,0x50ba4df3
  41444f:	jl     0x41444e
  414451:	test   BYTE PTR [ebx],0x94
  414454:	mov    cl,0xf4
  414456:	ret    
  414457:	test   DWORD PTR [eax-0x19],eax
  41445a:	adc    DWORD PTR [eax-0x24],0xffffffed
  41445e:	add    al,BYTE PTR [eax]
  414460:	inc    edi
  414461:	push   ecx
  414462:	ss jo  0x4144dd
  414465:	pop    eax
  414466:	jmp    0x6bc4d86e
  41446b:	loopne 0x41441c
  41446d:	jmp    esi
  41446f:	add    ebp,DWORD PTR [ecx-0x6b483495]
  414475:	add    bh,ah
  414477:	mov    dl,BYTE PTR [eax-0x24]
  41447a:	mov    dh,0x86
  41447c:	fsub   st,st(4)
  41447e:	mov    dh,0x53
  414480:	mov    DWORD PTR ds:0xc5abcd00,esi
  414486:	inc    esp
  414487:	lds    eax,FWORD PTR [ebx-0x67d712ec]
  41448d:	lds    eax,FWORD PTR [ebp+eax*1-0x30]
  414491:	aaa    
  414492:	inc    esi
  414493:	sub    ebx,DWORD PTR [eax-0x2bfabb3b]
  414499:	dec    ebx
  41449a:	out    dx,al
  41449b:	sub    BYTE PTR [eax-0x27fabb3b],bl
  4144a1:	das    
  4144a2:	out    dx,al
  4144a3:	sub    BYTE PTR [eax-0x33fabb3b],bl
  4144a9:	mov    eax,0xc59828ee
  4144ae:	inc    esp
  4144af:	(bad)
  4144b2:	out    dx,al
  4144b3:	sub    BYTE PTR [eax-0x343abb3b],bl
  4144b9:	adc    al,0xed
  4144bb:	sub    BYTE PTR [eax+0x408e8098],bl
  4144c1:	scas   al,BYTE PTR es:[edi]
  4144c2:	push   0xffffffe8
  4144c4:	add    BYTE PTR [edx],bl
  4144c6:	test   DWORD PTR [ebp*2+0x51000097],esp
  4144cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4144ce:	ins    BYTE PTR es:[edi],dx
  4144cf:	add    cl,ch
  4144d1:	sbb    al,0x4c
  4144d3:	or     BYTE PTR [edx-0x4d],ah
  4144d6:	in     al,0xf
  4144d8:	inc    ecx
  4144d9:	mov    DWORD PTR [edi],edi
  4144db:	(bad)  
  4144dc:	call   0xd56579fd
  4144e1:	(bad)  
  4144e2:	sti    
  4144e3:	dec    esi
  4144e4:	call   0xbc299680
  4144e9:	jo     0x414498
  4144eb:	std    
  4144ec:	(bad)  
  4144ed:	dec    ecx
  4144ee:	icebp  
  4144ef:	mov    edi,0x5ba41cc2
  4144f4:	sub    esp,DWORD PTR [ebx-0xc9dab51]
  4144fa:	das    
  4144fb:	in     al,dx
  4144fc:	add    BYTE PTR [ebp+0x1],dl
  4144ff:	add    BYTE PTR [eax],al
  414501:	cs cmp eax,0x5bc57589
  414507:	xlat   BYTE PTR ds:[ebx]
  414508:	push   0x5d87036c
  41450d:	fnstcw WORD PTR gs:[esi+0x7b]
  414511:	mov    ecx,0x4a45c604
  414516:	add    al,0xb
  414518:	test   BYTE PTR [ebx-0x37fffffb],bh
  41451e:	inc    edi
  41451f:	sbb    BYTE PTR [ecx-0xac7390],cl
  414525:	or     BYTE PTR [esi+eiz*2-0x1191ff75],0xe7
  41452d:	add    ebp,DWORD PTR [ebx+0x5]
  414530:	add    BYTE PTR [ebx-0x786d30b],cl
  414536:	scas   al,BYTE PTR es:[edi]
  414537:	jae    0x414534
  414539:	jne    0x41458c
  41453b:	imul   edi,edi,0x63870a00
  414541:	add    ebp,edi
  414543:	add    ch,BYTE PTR [eax-0x78]
  414546:	fiadd  WORD PTR [edx]
  414548:	add    bh,bh
  41454a:	inc    eax
  41454b:	pop    edi
  41454c:	mov    dl,0x43
  41454e:	std    
  41454f:	jno    0x414562
  414551:	adc    dh,ch
  414553:	inc    edx
  414554:	add    BYTE PTR ds:0x3ef,bh
  41455a:	push   esp
  41455b:	inc    ebp
  41455c:	std    
  41455d:	(bad)  
  41455e:	mov    ebp,0xbb4de849
  414563:	add    al,BYTE PTR [eax]
  414565:	push   edi
  414566:	push   ebp
  414567:	stc    
  414568:	or     eax,0xb17fad00
  41456d:	enter  0x7378,0xfb
  414571:	call   0x416db7
  414576:	xchg   esp,eax
  414577:	and    al,0x87
  414579:	int3   
  41457a:	cdq    
  41457b:	std    
  41457c:	mov    al,0x50
  41457e:	and    DWORD PTR ds:0xaf5c81cd,ebp
  414584:	cdq    
  414585:	stc    
  414586:	inc    edi
  414587:	mov    bh,0xb2
  414589:	mov    cl,dl
  41458b:	popf   
  41458c:	test   eax,eax
  41458e:	add    al,ch
  414590:	adc    DWORD PTR [ebp+0x1],edi
  414593:	imul   edx,DWORD PTR [ebp-0x30],0xffffff89
  414597:	jmp    0x8b402b57
  41459c:	xchg   ebp,eax
  41459d:	shl    ebp,0x6c
  4145a0:	mov    ds:0xa3df8bc1,eax
  4145a5:	out    0xbe,al
  4145a7:	in     al,0xe
  4145a9:	je     0x4145aa
  4145ab:	xor    ecx,DWORD PTR [edi+0x7d]
  4145ae:	push   DWORD PTR [ebx]
  4145b0:	xor    eax,0xe51cdc38
  4145b5:	mov    cl,0xe8
  4145b7:	fimul  WORD PTR [edx-0x4e]
  4145ba:	std    
  4145bb:	(bad)  ds:0x34940004
  4145c1:	mov    al,cl
  4145c3:	or     DWORD PTR [edi],ebp
  4145c5:	mov    dl,0xc6
  4145c7:	xchg   esp,eax
  4145c8:	xchg   edi,eax
  4145c9:	inc    ecx
  4145ca:	inc    edi
  4145cb:	xor    DWORD PTR [eax],0xb6f24ae9
  4145d1:	test   eax,eax
  4145d3:	xchg   esp,eax
  4145d4:	xchg   edi,eax
  4145d5:	add    DWORD PTR [edx-0x6c],ebp
  4145d8:	rol    DWORD PTR [ecx],0x8b
  4145db:	push   ecx
  4145dc:	dec    edi
  4145dd:	push   ecx
  4145de:	xor    esp,edx
  4145e0:	dec    edi
  4145e1:	adc    cl,BYTE PTR [ebp-0x6b]
  4145e4:	xchg   edi,eax
  4145e5:	out    dx,al
  4145e6:	inc    edx
  4145e7:	mov    esp,0x94a888a6
  4145ec:	xchg   edi,eax
  4145ed:	add    DWORD PTR [ecx+0x1b1f0031],ecx
  4145f3:	add    BYTE PTR [ebx+esi*1-0x19],ah
  4145f7:	add    ebp,DWORD PTR [esi]
  4145f9:	add    esp,DWORD PTR [eax+ecx*2-0x5c]
  4145fd:	push   eax
  4145fe:	dec    DWORD PTR [edx]
  414600:	loopne 0x414601
  414602:	out    0x87,al
  414604:	push   esp
  414605:	xor    al,0xe0
  414607:	sub    DWORD PTR ds:0x707f72b,edx
  41460d:	adc    ebx,esi
  41460f:	jp     0x4145e8
  414611:	mov    dl,0x3e
  414613:	jg     0x4145e4
  414615:	pushf  
  414616:	iret   
  414617:	outs   dx,DWORD PTR ds:[esi]
  414618:	or     eax,0xbf7ce6ff
  41461d:	clc    
  41461e:	rol    DWORD PTR [esi],0x86
  414621:	shr    BYTE PTR [ebx-0x3c],0xc0
  414625:	xor    ch,dh
  414627:	jns    0x414600
  414629:	mov    ah,0x1f
  41462b:	cmp    al,0xc0
  41462d:	cli    
  41462e:	push   ds
  41462f:	cmp    al,0xa7
  414631:	push   esp
  414632:	lods   eax,DWORD PTR ds:[esi]
  414633:	inc    edi
  414634:	sub    edi,edi
  414636:	xchg   ecx,eax
  414637:	inc    edx
  414638:	mov    edx,0x90b61481
  41463d:	xor    esp,DWORD PTR [esi]
  41463f:	jg     0x414698
  414641:	push   0xff719d8f
  414646:	out    0x1d,al
  414648:	nop
  414649:	sbb    bl,bh
  41464b:	mov    al,0xc7
  41464d:	mov    al,ds:0xad944542
  414652:	cld    
  414653:	pop    es
  414654:	test   DWORD PTR [eax-0x19],eax
  414657:	jl     0x414659
  414659:	in     al,0x82
  41465b:	pop    ebp
  41465c:	cmp    BYTE PTR [ebx+0x3e9fa479],dh
  414662:	add    BYTE PTR [ebp-0x18865586],bl
  414668:	sbb    esi,DWORD PTR [ebx-0x25]
  41466b:	jmp    DWORD PTR [edi-0x16ffe769]
  414671:	cdq    
  414672:	add    BYTE PTR [ebx+0x46853fa4],cl
  414678:	in     eax,0xff
  41467a:	icebp  
  41467b:	addr16 call 0x9501cb18
  414681:	popf   
  414682:	push   edx
  414683:	call   0xfdeef1af
  414688:	dec    dl
  41468a:	pushf  
  41468b:	call   0xfdeee1af
  414690:	imul   eax,ebx,0x13f600ad
  414696:	inc    ecx
  414697:	std    
  414698:	fisub  WORD PTR [edx+edi*2]
  41469b:	jae    0x41466e
  41469d:	call   DWORD PTR [ebx+0x4d]
  4146a0:	call   0xc6bcc73c
  4146a5:	xchg   edi,eax
  4146a6:	das    
  4146a7:	pop    es
  4146a8:	mov    bh,0x98
  4146aa:	stos   DWORD PTR es:[edi],eax
  4146ab:	push   cs
  4146ac:	ins    BYTE PTR es:[edi],dx
  4146ad:	imul   ebp,DWORD PTR [edx+0x77c4aefd],0x750f6173
  4146b7:	push   0x71ad97e8
  4146bc:	cmp    DWORD PTR [eax],eax
  4146be:	clc    
  4146bf:	int3   
  4146c0:	sahf   
  4146c1:	call   0x6829985d
  4146c6:	stos   BYTE PTR es:[edi],al
  4146c7:	lods   eax,DWORD PTR ds:[esi]
  4146c8:	std    
  4146c9:	jb     0x414698
  4146cb:	cwde   
  4146cc:	xor    ecx,DWORD PTR [esi]
  4146ce:	xchg   edi,eax
  4146cf:	add    BYTE PTR [esi-0x46],bl
  4146d2:	xlat   BYTE PTR ds:[ebx]
  4146d3:	dec    ecx
  4146d4:	(bad)  
  4146d5:	sub    edx,DWORD PTR [ebx+0x3725300]
  4146db:	sub    ah,0xdd
  4146de:	inc    eax
  4146df:	push   edx
  4146e0:	push   ebp
  4146e1:	ret    
  4146e2:	shl    BYTE PTR [esi+0x73],1
  4146e5:	add    BYTE PTR [ecx+0x79b5e837],al
  4146eb:	(bad)  
  4146ec:	dec    DWORD PTR [edx+0x6580a7f8]
  4146f2:	cmp    edi,0xdbc06f5
  4146f8:	add    bl,BYTE PTR [ebx+0x9]
  4146fb:	adc    BYTE PTR [edx+0x10],ch
  4146fe:	xor    BYTE PTR [ecx],bh
  414700:	add    al,0x50
  414702:	lock (bad) 
  414705:	mov    edi,DWORD PTR [esi-0x7d745f79]
  41470b:	pop    ebx
  41470c:	mov    DWORD PTR [esi+0x65],edi
  41470f:	dec    eax
  414710:	sti    
  414711:	adc    eax,0x4015e5
  414716:	lods   eax,DWORD PTR ds:[esi]
  414717:	push   ebx
  414718:	mov    DWORD PTR [ebp+0x49],edi
  41471b:	daa    
  41471c:	mov    edi,0xfb27f7e8
  414721:	inc    DWORD PTR [eax]
  414723:	mov    es,WORD PTR [ecx-0x7e52b5ba]
  414729:	jns    0x414723
  41472b:	(bad)  
  41472c:	mov    edi,0x5bb67be8
  414731:	sti    
  414732:	jmp    FWORD PTR [eax+0x5c]
  414735:	mov    DWORD PTR [ebp-0x1f],eax
  414738:	pop    edx
  414739:	jno    0x41472f
  41473b:	mov    al,0xf1
  41473d:	mov    edi,edi
  41473f:	js     0x4147b1
  414741:	push   eax
  414742:	push   0xffffffdd
  414744:	xor    eax,0x5bcdfce8
  414749:	sti    
  41474a:	cmp    DWORD PTR [ecx],0x14
  41474d:	jg     0x414747
  41474f:	loop   0x4146fa
  414751:	xor    BYTE PTR [esi-0x75000103],0xba
  414758:	push   esp
  414759:	push   0x1
  41475b:	lds    esi,FWORD PTR [esi]
  41475d:	lods   al,BYTE PTR ds:[esi]
  41475e:	inc    ebx
  41475f:	xchg   esp,eax
  414760:	cdq    
  414761:	scas   al,BYTE PTR es:[edi]
  414762:	adc    ebp,DWORD PTR [eax+ebp*4+0x41]
  414766:	add    BYTE PTR ds:0xd482f95c,bl
  41476c:	cdq    
  41476d:	test   DWORD PTR [ecx-0x2fe666c],ebx
  414773:	mov    ecx,edx
  414775:	adc    al,0x40
  414777:	xchg   esp,eax
  414778:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414779:	jbe    0x41477b
  41477b:	xchg   esp,eax
  41477c:	cdq    
  41477d:	cmp    BYTE PTR [ebx],cl
  41477f:	fwait
  414780:	mov    edi,ecx
  414782:	cld    
  414783:	test   eax,0x401237
  414788:	xchg   esp,eax
  414789:	push   ss
  41478a:	daa    
  41478b:	or     BYTE PTR [esi+edx*1+0x2b94082f],dl
  414792:	sub    ch,BYTE PTR [edx-0x34]
  414795:	jge    0x414790
  414797:	cld    
  414798:	mov    eax,ds:0x94415ab7
  41479d:	retf   0x418
  4147a0:	xchg   edi,edx
  4147a2:	add    ecx,DWORD PTR [ecx+0x74ae254c]
  4147a8:	jmp    0xaa7157db
  4147ad:	xlat   BYTE PTR ds:[ebx]
  4147ae:	add    ebp,DWORD PTR [edx-0x5c]
  4147b1:	and    al,0x43
  4147b3:	add    al,0xc4
  4147b5:	dec    esp
  4147b6:	inc    esi
  4147b7:	add    al,0xc4
  4147b9:	(bad)  
  4147bb:	mov    DWORD PTR [edx-0x6c7915f3],ebx
  4147c1:	push   ss
  4147c2:	ret    
  4147c3:	adc    al,0x21
  4147c5:	jecxz  0x4147de
  4147c7:	push   esi
  4147c8:	fs adc dl,0x89
  4147cc:	pop    ecx
  4147cd:	scas   eax,DWORD PTR es:[edi]
  4147ce:	add    ah,0x9c
  4147d1:	stc    
  4147d2:	cmp    BYTE PTR [ebp+0x60],0x97
  4147d6:	jl     0x41481d
  4147d8:	inc    esp
  4147d9:	add    bl,bl
  4147db:	call   0x4407143
  4147e0:	pusha  
  4147e1:	or     ebp,ecx
  4147e3:	adc    BYTE PTR [ecx+0x36],0xe7
  4147e7:	aaa    
  4147e8:	lods   al,BYTE PTR ds:[esi]
  4147e9:	push   ecx
  4147ea:	iret   
  4147eb:	add    al,BYTE PTR [eax]
  4147ed:	test   BYTE PTR [edi],bh
  4147ef:	out    0x1b,eax
  4147f1:	xchg   esp,eax
  4147f2:	add    bh,bl
  4147f4:	add    edi,DWORD PTR [esi+eax*1-0x7c6bfc42]
  4147fb:	daa    
  4147fc:	aaa    
  4147fd:	cwde   
  4147fe:	jo     0x4147e8
  414800:	call   0xaa00:0x27ff5184
  414807:	push   cs
  414808:	scas   al,BYTE PTR es:[edi]
  414809:	pop    es
  41480a:	stc    
  41480b:	push   cs
  41480c:	cwde   
  41480d:	pop    ds
  41480e:	jmp    esi
  414810:	icebp  
  414811:	cmp    ecx,DWORD PTR [ecx-0x6b]
  414814:	dec    edx
  414815:	pop    ebx
  414816:	mov    esi,0x75c703e3
  41481b:	rol    DWORD PTR [ecx-0x5f955788],cl
  414821:	call   0xbe968573
  414826:	(bad)  
  414827:	ds jecxz 0x4147d0
  41482a:	in     al,dx
  41482b:	cmp    bl,BYTE PTR [edi+eax*1+0x13adbe27]
  414832:	inc    esp
  414833:	or     edx,DWORD PTR [eax]
  414835:	pop    ss
  414836:	shl    BYTE PTR [esi+eax*1],0xd4
  41483a:	xchg   edi,eax
  41483b:	push   ss
  41483c:	add    edx,DWORD PTR [eax+eax*1+0x1319b311]
  414843:	xchg   ebx,eax
  414844:	adc    al,0x54
  414846:	add    BYTE PTR [edi],dh
  414848:	lods   eax,DWORD PTR ds:[esi]
  414849:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41484a:	add    al,bl
  41484c:	inc    ebx
  41484d:	xchg   esp,eax
  41484e:	cwde   
  41484f:	cdq    
  414850:	sub    al,BYTE PTR [eax]
  414852:	stc    
  414853:	test   al,0x0
  414855:	ins    DWORD PTR es:[edi],dx
  414856:	fdivr  st,st(2)
  414858:	and    DWORD PTR [ecx],0xffffff97
  41485b:	add    BYTE PTR [eax],al
  41485d:	push   eax
  41485e:	stc    
  41485f:	test   eax,0x3c5ce9fd
  414864:	and    al,0xf9
  414866:	push   edx
  414867:	push   esp
  414868:	and    al,0xf5
  41486a:	das    
  41486b:	cmp    BYTE PTR [ecx+0x4480f146],ch
  414871:	add    eax,0x36f87f94
  414876:	mov    cl,0x7c
  414878:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414879:	jmp    0x8dc24915
  41487e:	mov    ebx,0x47930008
  414883:	jne    0x4148c9
  414885:	int    0x6f
  414887:	sbb    al,BYTE PTR [eax]
  414889:	mov    ecx,0xe8ca972f
  41488e:	xchg   edi,eax
  41488f:	jns    0x41490d
  414891:	lds    esi,FWORD PTR [edi-0x7f]
  414894:	(bad)  
  414895:	in     eax,0x14
  414897:	and    eax,0x3393dd24
  41489c:	jp     0x414884
  41489e:	push   0x866113a5
  4148a3:	inc    eax
  4148a4:	add    BYTE PTR [edx-0x1],ch
  4148a7:	loopne 0x41491b
  4148a9:	cmp    al,0xcd
  4148ab:	in     eax,dx
  4148ac:	mov    dh,BYTE PTR ds:0xa231e42c
  4148b2:	mov    ebp,0x198afe
  4148b7:	dec    eax
  4148b8:	cmp    edx,0x89fc60e0
  4148be:	stos   DWORD PTR es:[edi],eax
  4148bf:	cld    
  4148c0:	push   cs
  4148c1:	mov    edi,DWORD PTR [ecx]
  4148c3:	test   eax,0xc8ecfa80
  4148c8:	cld    
  4148c9:	add    esp,DWORD PTR [eax+0x8afb2c]
  4148cf:	popf   
  4148d0:	jne    0x414852
  4148d2:	cli    
  4148d3:	lock in al,dx
  4148d5:	adc    al,BYTE PTR [esp+edx*2]
  4148d8:	jg     0x4148b1
  4148da:	je     0x4148ce
  4148dc:	stos   DWORD PTR es:[edi],eax
  4148dd:	inc    BYTE PTR [eax+0x7f]
  4148e0:	mov    ecx,0x63ad07e7
  4148e5:	add    al,0x88
  4148e7:	mov    esp,0x5645fd30
  4148ec:	mov    esp,0xcc00c084
  4148f1:	sbb    ebx,0x44c4a000
  4148f7:	mov    eax,ds:0xbdfffe9c
  4148fc:	add    edi,ebx
  4148fe:	ja     0x4148a5
  414900:	sub    BYTE PTR [ebx+0xc],dh
  414903:	jp     0x4148f1
  414905:	add    ecx,DWORD PTR [ebp-0x17c660b7]
  41490b:	repnz pop ebx
  41490d:	sti    
  41490e:	dec    DWORD PTR [eax]
  414910:	inc    eax
  414911:	and    al,0x20
  414913:	sbb    eax,0x6afdc58b
  414918:	pop    ebx
  414919:	xchg   DWORD PTR [eax+eax*1+0x51],eax
  41491d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41491e:	in     eax,0x6b
  414920:	(bad)  
  414921:	pop    ebx
  414922:	sti    
  414923:	lea    esi,[ecx+0x55500da0]
  414929:	pop    ebx
  41492a:	pop    es
  41492b:	add    DWORD PTR ds:0xb00fc080,edi
  414931:	lods   al,BYTE PTR ds:[esi]
  414932:	cld    
  414933:	(bad)  
  414934:	cli    
  414935:	sub    BYTE PTR [esp+0x45],al
  414939:	push   ebx
  41493a:	call   0x4490c4
  41493f:	mov    edx,DWORD PTR [ebp-0x7f]
  414942:	xlat   BYTE PTR ds:[ebx]
  414943:	je     0x4149b7
  414945:	daa    
  414946:	jl     0x41496c
  414948:	xchg   esp,eax
  414949:	mov    cl,0x80
  41494b:	std    
  41494c:	adc    al,0x7e
  41494f:	icebp  
  414950:	pop    ss
  414951:	cmc    
  414952:	fistp  WORD PTR [edi]
  414954:	xchg   esp,eax
  414955:	adc    edx,DWORD PTR [ebx+ecx*4+0x58]
  414959:	mov    ch,0xd9
  41495b:	imul   edx,DWORD PTR [ecx+ecx*1-0x6831e164],0x94d08101
  414966:	sbb    edi,DWORD PTR [edx]
  414968:	and    DWORD PTR [ebp-0x23],edx
  41496b:	aaa    
  41496c:	bound  ebp,QWORD PTR [ecx-0x56]
  41496f:	adc    eax,DWORD PTR [edi+eax*8-0x22e8ffbf]
  414976:	test   DWORD PTR [edx+0x4fe3f558],0xfda8b9bc
  414980:	add    BYTE PTR [ebx+0x4b3ac219],ah
  414986:	mov    WORD PTR [ecx+edx*2-0x2e20984],?
  41498d:	mov    eax,DWORD PTR [eax-0x686b8d0f]
  414993:	stos   BYTE PTR es:[edi],al
  414994:	xor    edi,DWORD PTR [eax-0x16]
  414997:	inc    esp
  414998:	add    BYTE PTR [ebx-0x3b],dh
  41499b:	adc    DWORD PTR [ecx],edx
  41499d:	aam    0x97
  41499f:	call   0x1d8dea5
  4149a4:	or     eax,0xfda92310
  4149a9:	push   ebx
  4149aa:	iret   
  4149ab:	sub    eax,0xacbfa824
  4149b0:	cdq    
  4149b1:	xchg   ebp,eax
  4149b2:	xchg   edi,eax
  4149b3:	idiv   BYTE PTR [edi-0x76b2fa25]
  4149b9:	cmp    DWORD PTR ds:0xc9404c6,ecx
  4149bf:	jge    0x4149ad
  4149c1:	pop    ss
  4149c2:	add    DWORD PTR [ebx+0x364ec53f],edx
  4149c8:	stos   DWORD PTR es:[edi],eax
  4149c9:	xchg   esp,esi
  4149cb:	arpl   WORD PTR [eax+0x48],cx
  4149ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4149cf:	adc    al,0xfc
  4149d1:	or     al,0xb1
  4149d3:	pop    ebp
  4149d5:	add    DWORD PTR [esi-0x57887982],esp
  4149db:	out    0x78,eax
  4149dd:	push   edi
  4149de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4149df:	pop    ss
  4149e0:	pushf  
  4149e1:	test   BYTE PTR [edi],0xe7
  4149e4:	add    eax,DWORD PTR [eax]
  4149e6:	or     eax,0x9c4870c9
  4149eb:	jnp    0x414a1f
  4149ed:	xor    BYTE PTR [ecx+0x6467a473],ch
  4149f3:	icebp  
  4149f4:	es inc ebx
  4149f6:	lods   al,BYTE PTR ds:[esi]
  4149f7:	repz loopne 0x4149fd
  4149fa:	xchg   esp,eax
  4149fb:	jp     0x414a0c
  4149fd:	js     0x414a26
  4149ff:	test   al,0x3f
  414a01:	dec    eax
  414a02:	xchg   ebx,eax
  414a03:	add    bh,ah
  414a05:	dec    edx
  414a06:	cmp    bh,BYTE PTR [edx+0x2a]
  414a09:	dec    esi
  414a0a:	pop    ebx
  414a0b:	ret    0x3df
  414a0e:	sbb    eax,0xf7860b2b
  414a13:	hlt    
  414a14:	out    0x80,al
  414a16:	sub    BYTE PTR [ecx+edi*4],0x78
  414a1a:	in     eax,dx
  414a1b:	out    dx,al
  414a1c:	arpl   WORD PTR [eax+0x54],ax
  414a1f:	push   eax
  414a20:	pop    esp
  414a21:	inc    edx
  414a22:	push   edx
  414a23:	push   eax
  414a24:	iret   
  414a25:	dec    esi
  414a26:	xor    BYTE PTR [ebp+0x2b547fde],ah
  414a2c:	cli    
  414a2d:	and    DWORD PTR ds:0xd6ed44fd,ebx
  414a33:	mov    dl,0x3c
  414a35:	(bad)  
  414a36:	mov    cl,0x79
  414a38:	es push es
  414a3a:	mov    edx,0xe42bffe9
  414a3f:	sub    ecx,DWORD PTR [ebx-0x52]
  414a42:	arpl   sp,si
  414a44:	sub    BYTE PTR [esi-0x128d11d6],0x0
  414a4b:	leave  
  414a4c:	mov    ch,0x69
  414a4e:	lahf   
  414a4f:	cli    
  414a50:	jns    0x414a95
  414a52:	dec    ebp
  414a53:	push   0x83223a1a
  414a58:	sub    esp,edi
  414a5a:	ins    BYTE PTR es:[edi],dx
  414a5b:	mov    bl,0xf8
  414a5d:	lds    ebp,FWORD PTR [ebp*8+0x3bf488a4]
  414a64:	cwde   
  414a65:	mov    ds:0x83a32cd3,eax
  414a6a:	sub    DWORD PTR [edx+edx*1-0x110c5377],eax
  414a71:	rcl    DWORD PTR [esi+0x9],1
  414a74:	mov    ds:0x761ff173,eax
  414a79:	pop    ss
  414a7a:	jmp    0xe684c316
  414a7f:	cld    
  414a80:	xor    BYTE PTR [eax],cl
  414a82:	inc    ecx
  414a83:	out    0x1c,eax
  414a85:	std    
  414a86:	sbb    cl,BYTE PTR es:[ecx+0xd]
  414a8a:	adc    al,cl
  414a8c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414a8d:	std    
  414a8e:	push   ss
  414a8f:	loope  0x414a29
  414a91:	loope  0x414a13
  414a93:	sub    al,0xa6
  414a95:	xor    ah,BYTE PTR [edx]
  414a97:	pop    ds
  414a98:	and    bh,ch
  414a9a:	(bad)  
  414a9b:	cmp    al,0x4b
  414a9d:	mov    eax,edi
  414a9f:	jmp    0x1:0x1a650daa
  414aa6:	jmp    0xbbc55584
  414aab:	and    DWORD PTR [edx*2-0xdf0ffe6],0xfffffffc
  414ab3:	imul   esi,ecx,0x5e0072f0
  414ab9:	es push esi
  414abb:	add    DWORD PTR [ebp+0x38747855],edi
  414ac1:	cmp    dl,0x58
  414ac4:	push   0xae0469fe
  414ac9:	rol    DWORD PTR [edx],0x5f
  414acc:	into   
  414acd:	and    dl,BYTE PTR [esi]
  414acf:	(bad)  
  414ad0:	(bad)  
  414ad1:	int3   
  414ad2:	cmp    bl,0xf4
  414ad5:	lock pcmpgtd mm0,QWORD PTR [edx]
  414ad9:	sbb    dl,dl
  414adb:	rcr    DWORD PTR [esp+eiz*4],0x63
  414adf:	add    esi,DWORD PTR [edi]
  414ae1:	loop   0x414b61
  414ae3:	jmp    0x8d6fd005
  414ae8:	xlat   BYTE PTR ds:[ebx]
  414ae9:	sbb    BYTE PTR [eax+0xff0b8fb],al
  414aef:	data16 mov dl,0x19
  414af2:	rol    cl,cl
  414af4:	dec    esp
  414af5:	mov    ds:0xe1870363,eax
  414afa:	jle    0x414ae5
  414afc:	stos   BYTE PTR es:[edi],al
  414afd:	test   BYTE PTR [esi],dl
  414aff:	lea    eax,[edi]
  414b01:	jns    0x414a83
  414b03:	sti    
  414b04:	mov    eax,0xa26613f0
  414b09:	sbb    edx,edx
  414b0b:	rcr    DWORD PTR [ebx+eiz*4-0x1e48fc9d],0x7e
  414b13:	jmp    0xb4e99518
  414b18:	leave  
  414b19:	sub    eax,DWORD PTR [edx+esi*4+0x74cdf95b]
  414b20:	add    edi,esi
  414b22:	push   0xa7f465fd
  414b27:	mov    bh,al
  414b29:	sar    BYTE PTR [edx],cl
  414b2b:	mov    edi,0x8060433
  414b30:	xchg   sp,ax
  414b32:	and    ah,bh
  414b34:	push   edi
  414b35:	loop   0x414b8d
  414b37:	jg     0x414b0b
  414b39:	rol    BYTE PTR ds:0x70180a7a,0x30
  414b40:	dec    esi
  414b41:	addr16 pop ecx
  414b43:	test   bh,dh
  414b45:	jno    0x414b33
  414b47:	(bad)  
  414b48:	imul   edx,DWORD PTR [esi+0x14039941],0x9572d960
  414b52:	xlat   BYTE PTR ds:[ebx]
  414b53:	dec    ebp
  414b54:	xor    DWORD PTR [edx],ecx
  414b56:	jle    0x414b65
  414b58:	cmp    ch,0xbf
  414b5b:	es pop ss
  414b5d:	jg     0x414b8a
  414b5f:	cli    
  414b60:	gs fwait
  414b62:	jmp    0x414b1e
  414b64:	xchg   di,ax
  414b66:	sub    BYTE PTR [esi],bl
  414b68:	sub    edx,0xcab4f508
  414b6e:	push   esi
  414b6f:	ja     0x414b7b
  414b71:	adc    al,0x50
  414b73:	hlt    
  414b74:	jp     0x414b2c
  414b76:	sbb    al,0xbb
  414b78:	je     0x414b7a
  414b7a:	xchg   edi,eax
  414b7b:	push   ss
  414b7c:	mov    esp,0xb62aa2ff
  414b81:	test   al,0x96
  414b83:	gs sti 
  414b85:	data16 int 0xd1
  414b88:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414b89:	add    BYTE PTR [ebx+esi*2-0x290df284],dl
  414b90:	lock mov edi,0x871b9ffe
  414b96:	fwait
  414b97:	outs   dx,DWORD PTR ds:[esi]
  414b98:	ret    0xf53
  414b9b:	or     al,0x81
  414b9d:	in     al,0x6c
  414b9f:	sbb    DWORD PTR [eax+0x1979590],ebx
  414ba5:	mov    ebx,DWORD PTR [eax-0x6997ae45]
  414bab:	add    cl,ch
  414bad:	add    edx,DWORD PTR [ecx+eiz*4+0x40a7c7f4]
  414bb4:	out    0xae,eax
  414bb6:	pop    esp
  414bb7:	push   es
  414bb8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414bb9:	inc    ebx
  414bba:	or     eax,0x31c3249c
  414bbf:	fdiv   QWORD PTR [esi-0x51ff2bf0]
  414bc5:	std    
  414bc6:	imul   DWORD PTR [edx]
  414bc8:	daa    
  414bc9:	add    al,0x14
  414bcb:	in     al,0x4e
  414bcd:	rcl    BYTE PTR [ebp+0x0],0xe7
  414bd1:	xor    ah,cl
  414bd3:	dec    ecx
  414bd4:	push   esi
  414bd5:	retf   
  414bd6:	xlat   BYTE PTR ds:[ebx]
  414bd7:	cmp    eax,0xbf94ee7
  414bdc:	xchg   ebx,eax
  414bdd:	adc    DWORD PTR [eax],eax
  414bdf:	push   esp
  414be0:	add    BYTE PTR [edi-0x18],ah
  414be3:	xor    edi,DWORD PTR [edx+ebp*1-0x2ed46bfc]
  414bea:	fwait
  414beb:	sub    BYTE PTR [edx-0x3ee7599a],ah
  414bf1:	rcl    DWORD PTR [ecx+edx*8],cl
  414bf4:	sti    
  414bf5:	add    al,0x55
  414bf8:	add    BYTE PTR [ecx+0x2d007aed],al
  414bfe:	add    ah,bh
  414c00:	mov    ebx,0x4aab03aa
  414c05:	adc    BYTE PTR ss:[esi+ecx*1+0x763903a7],ah
  414c0d:	stos   DWORD PTR es:[edi],eax
  414c0e:	fist   WORD PTR [edi-0x77005283]
  414c14:	jge    0x414ba3
  414c16:	sti    
  414c17:	cmp    DWORD PTR [ecx-0x5b],0xfffffff7
  414c1b:	or     eax,0x1bfbcb3c
  414c20:	cmp    ch,ah
  414c22:	jp     0x414c76
  414c24:	mov    esi,0x4a97e100
  414c29:	mov    eax,edi
  414c2b:	inc    cl
  414c2d:	add    cl,ch
  414c2f:	xchg   edi,eax
  414c30:	stos   BYTE PTR es:[edi],al
  414c31:	inc    esp
  414c32:	add    eax,0xef71a248
  414c37:	rcr    DWORD PTR [eax-0x5d0ebebf],1
  414c3d:	mov    DWORD PTR [edi-0x16fb4126],ebp
  414c43:	add    dl,bl
  414c45:	ja     0x414c33
  414c47:	push   0xe8ff27fc
  414c4c:	xchg   edi,eax
  414c4d:	mov    ebx,0x40c24d06
  414c52:	add    BYTE PTR [ecx-0xd],ch
  414c55:	pop    eax
  414c56:	ret    
  414c57:	sub    bl,BYTE PTR [eax-0x15ebab00]
  414c5d:	arpl   ax,bx
  414c5f:	lods   al,BYTE PTR ds:[esi]
  414c60:	push   ebp
  414c61:	add    BYTE PTR [ebp+0x7e],dl
  414c64:	fwait
  414c65:	xchg   esp,eax
  414c66:	adc    ch,BYTE PTR [ecx]
  414c68:	cwde   
  414c69:	cmp    BYTE PTR [ebx],0x41
  414c6c:	sbb    edi,DWORD PTR [edi]
  414c6e:	add    cl,ch
  414c70:	add    BYTE PTR [esi],0xe8
  414c73:	pop    es
  414c74:	icebp  
  414c75:	mov    ds:0x2bd86dfd,al
  414c7a:	(bad)  
  414c7c:	mov    ebx,0x97aac354
  414c81:	push   esi
  414c82:	ss test al,0x97
  414c85:	mov    edx,0x3ee38103
  414c8a:	add    al,ch
  414c8c:	dec    eax
  414c8d:	mov    ds:0x40a61913,eax
  414c92:	add    BYTE PTR [ebx+ecx*8-0x64],ch
  414c96:	push   eax
  414c97:	add    ecx,DWORD PTR fs:[ecx+0x31310efe]
  414c9e:	push   0xfda48100
  414ca3:	inc    DWORD PTR ds:0xfb65
  414ca9:	ins    DWORD PTR es:[edi],dx
  414caa:	gs jno 0x414cb5
  414cad:	stos   BYTE PTR es:[edi],al
  414cae:	sar    ah,1
  414cb0:	(bad)  
  414cb1:	cmp    eax,0x6afc791b
  414cb6:	bswap  esp
  414cb8:	adc    eax,0xc081046d
  414cbd:	loope  0x414cb0
  414cbf:	push   edx
  414cc0:	(bad)  
  414cc1:	rcr    BYTE PTR [ebx],0xfe
  414cc4:	(bad)  
  414cc5:	jmp    0x340e:0xea4ffff9
  414ccc:	push   ss
  414ccd:	ins    DWORD PTR es:[edi],dx
  414cce:	add    al,0x7f
  414cd0:	les    ecx,FWORD PTR [ecx]
  414cd2:	cmp    DWORD PTR [ecx-0x49ad41c],0xed0ca06
  414cdc:	or     DWORD PTR [eax+0x7f],0xfffffffe
  414ce0:	call   FWORD PTR [edx]
  414ce2:	repz or dl,BYTE PTR [ebp+0x24c8663d]
  414ce9:	out    dx,eax
  414cea:	sbb    eax,DWORD PTR [esi+0xd]
  414ced:	push   ss
  414cee:	mov    al,ds:0x2c846c3
  414cf3:	xchg   DWORD PTR [ebp-0x49a7f],eax
  414cf9:	push   ebp
  414cfa:	mov    bh,0xfe
  414cfc:	jmp    FWORD PTR [ebp-0x42f79980]
  414d02:	sbb    eax,DWORD PTR [esi+0xc]
  414d05:	fiadd  WORD PTR es:[edi]
  414d08:	mov    ebx,esi
  414d0a:	lahf   
  414d0b:	mov    dh,al
  414d0d:	add    BYTE PTR [ecx+eax*8+0x4],dh
  414d11:	add    BYTE PTR [ebx+0x18],dl
  414d14:	in     eax,dx
  414d15:	(bad)  
  414d16:	jl     0x414d57
  414d18:	jbe    0x414d5a
  414d1a:	xchg   esp,eax
  414d1b:	test   eax,0xa9947f99
  414d20:	add    DWORD PTR [esi+0x57],ebx
  414d23:	sub    ah,BYTE PTR [ebx]
  414d25:	add    al,0x6b
  414d27:	adc    eax,0xea95b000
  414d2c:	repz mov ch,0xd2
  414d2f:	mov    esp,0xd1a17439
  414d34:	pop    ss
  414d35:	add    DWORD PTR [esi-0x69953a97],eax
  414d3b:	shr    BYTE PTR ds:0xd6a42f0f,1
  414d41:	(bad)  
  414d42:	aad    0x33
  414d44:	or     cl,BYTE PTR [edx-0x17c4522e]
  414d4a:	dec    esi
  414d4b:	test   eax,0xf8c60001
  414d50:	xor    edi,ebp
  414d52:	test   eax,0x943ff761
  414d57:	mov    edx,0x75fc81cc
  414d5c:	mov    eax,DWORD PTR [esi-0x70]
  414d5f:	mov    esi,0x29d7c078
  414d64:	and    cl,BYTE PTR [eax]
  414d66:	xchg   esp,eax
  414d67:	xchg   ebp,eax
  414d68:	or     dh,BYTE PTR [edi]
  414d6a:	bound  edi,QWORD PTR [ecx+0x69d49412]
  414d70:	mov    eax,ds:0x9bd00013
  414d75:	inc    ecx
  414d76:	add    BYTE PTR ds:0xd4830967,bl
  414d7c:	mov    esp,0x4e6454e3
  414d81:	sbb    al,BYTE PTR [ebx+esi*4]
  414d84:	mov    ebx,0xa95413a5
  414d89:	mov    al,al
  414d8b:	sub    DWORD PTR [edi+0x19847e8c],ebp
  414d91:	add    eax,ecx
  414d93:	xchg   ebx,eax
  414d94:	add    DWORD PTR [ebp+0x36f4890b],ebx
  414d9a:	stc    
  414d9b:	ret    
  414d9c:	add    BYTE PTR [edx+0x2a],ch
  414d9f:	mov    WORD PTR [eax],es
  414da1:	fld    st(3)
  414da3:	push   ebp
  414da4:	mov    ch,BYTE PTR [ebp-0x166eaf9]
  414daa:	pop    ss
  414dab:	mov    ch,BYTE PTR [edx]
  414dad:	jmp    0xff35a6e5
  414db2:	clc    
  414db3:	xchg   ebx,eax
  414db4:	add    dh,ah
  414db6:	sbb    DWORD PTR [eax-0x56000b63],edx
  414dbc:	inc    eax
  414dbd:	out    0x86,eax
  414dbf:	retf   0xce04
  414dc2:	mov    ds,edx
  414dc4:	or     BYTE PTR [ebx+eax*8-0x60],ch
  414dc8:	or     DWORD PTR [edi],edx
  414dca:	mov    ds:0x43dcb087,eax
  414dcf:	xchg   esp,eax
  414dd0:	add    DWORD PTR [ebp+0xc],0x8f3cc194
  414dd7:	add    al,bh
  414dd9:	jg     0x414d66
  414ddb:	sbb    eax,DWORD PTR [ebx]
  414ddd:	sahf   
  414dde:	out    0x90,eax
  414de0:	push   edi
  414de1:	pushf  
  414de2:	aaa    
  414de3:	xchg   ecx,eax
  414de4:	pop    ss
  414de5:	mov    DWORD PTR [ebp+0xf30e9a2],eax
  414deb:	or     BYTE PTR [eax+eax*1-0x6226d419],dh
  414df2:	out    0x3,eax
  414df4:	rcl    DWORD PTR [ebx],1
  414df6:	out    dx,eax
  414df7:	retf   0x9c57
  414dfa:	rol    DWORD PTR [esp+edx*4],cl
  414dfd:	add    BYTE PTR [esi-0x8],dl
  414e00:	iret   
  414e01:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414e03:	add    edx,DWORD PTR [edi]
  414e05:	sar    DWORD PTR [eax+edx*1-0x5eec7be3],0xa1
  414e0d:	popf   
  414e0e:	add    BYTE PTR [ecx-0x65],al
  414e11:	popf   
  414e12:	std    
  414e13:	jmp    0x2973505a
  414e18:	pop    eax
  414e19:	ret    0xe904
  414e1c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414e1d:	push   esi
  414e1e:	shl    BYTE PTR [ecx-0x6ab7f55d],0x9a
  414e25:	iret   
  414e26:	mov    edi,0x57f3b92a
  414e2b:	sub    dh,BYTE PTR [ecx-0x30d5a7fe]
  414e31:	dec    eax
  414e32:	je     0x414e16
  414e34:	sbb    ch,BYTE PTR [eax-0x2d6ea2ed]
  414e3a:	mov    edi,0x2e800aa
  414e3f:	rcr    DWORD PTR [ecx-0x68f24069],0xd8
  414e46:	or     al,0x48
  414e48:	cmp    eax,0xea74489a
  414e4d:	dec    eax
  414e4e:	pop    ebp
  414e4f:	rol    DWORD PTR [ebx-0x6c],0x38
  414e53:	rol    DWORD PTR [ebx+0x8],0x35
  414e57:	shl    esi,0x6c
  414e5a:	add    BYTE PTR [eax+0x31],cl
  414e5d:	pushf  
  414e5e:	or     al,0x81
  414e60:	add    DWORD PTR [ebx],0xd7da0111
  414e66:	mov    esi,0xbfafe56a
  414e6b:	push   0xffffffd9
  414e6d:	lahf   
  414e6e:	mov    edi,0x4d246253
  414e73:	mov    DWORD PTR [edi+0x66fdc500],esp
  414e79:	cmc    
  414e7a:	das    
  414e7b:	push   0xffffffe9
  414e7d:	hlt    
  414e7e:	adc    BYTE PTR [eax],cl
  414e80:	pusha  
  414e81:	push   ebx
  414e82:	pushf  
  414e83:	std    
  414e84:	hlt    
  414e85:	retf   
  414e86:	repnz aas 
  414e88:	add    BYTE PTR [ebp+0x300cc483],bh
  414e8e:	inc    ebp
  414e8f:	cld    
  414e90:	push   eax
  414e91:	(bad)  
  414e92:	cmc    
  414e93:	pop    es
  414e94:	dec    DWORD PTR [ebx+0x4]
  414e97:	sti    
  414e98:	adc    eax,0x3d9a7d
  414e9d:	stos   BYTE PTR es:[edi],al
  414e9e:	pop    esp
  414e9f:	pop    ss
  414ea0:	rol    BYTE PTR [eax],0x2d
  414ea3:	mov    edx,0x86d37d04
  414ea9:	in     al,dx
  414eaa:	or     al,0x8d
  414eac:	(bad)  
  414ead:	call   0x3cb070
  414eb2:	std    
  414eb3:	in     eax,dx
  414eb4:	(bad)  
  414eb5:	dec    al
  414eb7:	pop    es
  414eb8:	test   DWORD PTR [ebp+0x31],eax
  414ebb:	popa   
  414ebc:	adc    DWORD PTR [ebx+ecx*2],esi
  414ebf:	inc    eax
  414ec0:	add    BYTE PTR [ebx+0x45890be9],al
  414ec6:	popa   
  414ec7:	sar    dl,1
  414ec9:	jne    0x414ef0
  414ecb:	popa   
  414ecc:	jbe    0x414ed2
  414ece:	loop   0x414e62
  414ed0:	mov    ecx,0xf3046d15
  414ed5:	fsub   st,st(6)
  414ed7:	mov    edi,0x43fc940
  414edc:	add    bh,bh
  414ede:	test   eax,0x9dff01a8
  414ee3:	or     al,0xfb
  414ee5:	jo     0x414ee0
  414ee7:	pusha  
  414ee8:	adc    eax,esp
  414eea:	enter  0x3f,0xf7
  414eee:	xor    eax,0x2f40bd9d
  414ef3:	add    al,0x0
  414ef5:	push   ebp
  414ef6:	imul   edi,DWORD PTR ss:[edi-0x14],0xffffffad
  414efb:	aad    0x55
  414efd:	push   edi
  414efe:	inc    esi
  414eff:	outs   dx,BYTE PTR ds:[esi]
  414f00:	xchg   eax,ebx
  414f02:	xchg   esp,eax
  414f03:	inc    ecx
  414f04:	in     al,0xfd
  414f06:	add    BYTE PTR [ebx+0x20c0854a],dh
  414f0c:	fwait
  414f0d:	sub    esi,DWORD PTR [ecx]
  414f0f:	inc    ebx
  414f10:	xor    DWORD PTR [eax],edi
  414f12:	(bad)  
  414f13:	fwait
  414f14:	rol    BYTE PTR [eax+eax*8-0x4af0fff8],cl
  414f1b:	xchg   edi,eax
  414f1c:	es cdq 
  414f1e:	add    cl,BYTE PTR [ecx]
  414f20:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414f21:	sub    edx,DWORD PTR [eax]
  414f23:	fdiv   st(6),st
  414f25:	push   cs
  414f26:	xor    DWORD PTR [ebp+0x26],ebx
  414f29:	cdq    
  414f2a:	adc    eax,0x8bc23c9b
  414f2f:	aad    0x9a
  414f31:	and    eax,0xfd347978
  414f37:	retf   0xa0a5
  414f3a:	adc    ebp,DWORD PTR [esp+ebx*4+0x41]
  414f3e:	add    BYTE PTR [ecx],bl
  414f40:	imul   ebx,DWORD PTR [eax],0xf7f40f2a
  414f46:	adc    eax,0xd59ea9d4
  414f4b:	out    dx,eax
  414f4c:	xchg   ebp,eax
  414f4d:	out    0xff,al
  414f4f:	and    edx,DWORD PTR [eax]
  414f51:	inc    edi
  414f52:	cld    
  414f53:	pop    edi
  414f54:	data16 sbb BYTE PTR [esi],cl
  414f57:	cld    
  414f58:	stc    
  414f59:	popf   
  414f5a:	std    
  414f5b:	or     esp,DWORD PTR [edx+0x17]
  414f5e:	cld    
  414f5f:	add    edx,DWORD PTR [ebp+eiz*8-0x6156abeb]
  414f66:	aad    0xaf
  414f68:	popw   ss
  414f6a:	xor    al,BYTE PTR [eax]
  414f6c:	dec    DWORD PTR [esi-0x351100af]
  414f72:	xchg   ebx,eax
  414f73:	inc    ebx
  414f74:	les    edi,FWORD PTR [eax-0x6c2ceae8]
  414f7a:	or     DWORD PTR [ebx+0x34370051],ecx
  414f80:	or     eax,0xa429eb45
  414f85:	test   al,0xb1
  414f87:	add    dl,BYTE PTR [eax+eax*1-0x5adf3b9c]
  414f8e:	push   edx
  414f8f:	unpckhps xmm3,XMMWORD PTR ds:0xb9200443
  414f96:	sbb    DWORD PTR ss:[eax-0x66],edi
  414f9a:	aam    0xe7
  414f9c:	mov    eax,ds:0x43d1e740
  414fa1:	cmp    bh,BYTE PTR [ebp-0x2040acc6]
  414fa7:	add    ecx,edx
  414fa9:	test   DWORD PTR [edi],edx
  414fab:	shr    DWORD PTR [ebx],cl
  414fad:	add    DWORD PTR [ebp-0x11cc9cf0],0x6f8c5478
  414fb7:	sahf   
  414fb8:	adc    eax,0xc990e4a2
  414fbd:	std    
  414fbe:	into   
  414fbf:	sub    bh,BYTE PTR [edi]
  414fc1:	call   0xac23:0x155487de
  414fc8:	neg    BYTE PTR [ebx-0x3eef6132]
  414fce:	cmp    eax,DWORD PTR [ebx+0x0]
  414fd1:	xchg   ecx,eax
  414fd2:	push   ecx
  414fd3:	jmp    0x7e09:0x3bff1c82
  414fda:	lock push cs
  414fdc:	stos   DWORD PTR es:[edi],eax
  414fdd:	call   0xedf1:0xfc82afcd
  414fe4:	js     0x415021
  414fe6:	mov    WORD PTR [eax],gs
  414fe8:	lahf   
  414fe9:	adc    eax,0x4533eba1
  414fee:	cdq    
  414fef:	std    
  414ff0:	pop    es
  414ff1:	loope  0x414fe6
  414ff3:	jb     0x414fed
  414ff5:	fwait
  414ff6:	add    BYTE PTR [eax],al
  414ff8:	ins    BYTE PTR es:[edi],dx
  414ff9:	xlat   BYTE PTR ds:[ebx]
  414ffa:	or     eax,0x5a96917
  414fff:	(bad)  
  415000:	fist   DWORD PTR [edx-0x5ea1ebda]
  415006:	add    al,0xfd
  415008:	cld    
  415009:	fucomip st,st(5)
  41500b:	aas    
  41500c:	jmp    0xedb5112d
  415011:	inc    edi
  415012:	cdq    
  415013:	jmp    0xd7df:0x13edfad7
  41501a:	add    BYTE PTR [ecx-0x47ac0cf],cl
  415020:	and    dh,BYTE PTR es:[ebx]
  415023:	std    
  415024:	hlt    
  415025:	jae    0x41501a
  415027:	aas    
  415028:	jmp    0xaf9ea972
  41502d:	push   esi
  41502e:	sub    eax,0xac181589
  415033:	nop
  415034:	jmp    0x5141e739
  415039:	xor    DWORD PTR [ecx+0x2a778385],0xffffff9b
  415040:	std    
  415041:	push   ebx
  415042:	cwde   
  415043:	xor    al,ch
  415045:	inc    ecx
  415046:	push   ebp
  415047:	cdq    
  415048:	std    
  415049:	(bad)  
  41504a:	fisttp DWORD PTR [eax]
  41504c:	mov    ch,BYTE PTR [ecx]
  41504e:	test   BYTE PTR [edi-0x3c],bh
  415051:	cmc    
  415052:	out    dx,eax
  415053:	retf   0xbefb
  415056:	stc    
  415057:	and    DWORD PTR [edi-0x2645394],eax
  41505d:	scas   al,BYTE PTR es:[edi]
  41505e:	mov    eax,0x97e924f0
  415063:	pop    eax
  415064:	xor    BYTE PTR [eax+edx*4],dl
  415067:	add    al,ch
  415069:	jmp    0x41500d
  41506b:	cdq    
  41506c:	std    
  41506d:	push   0xffffffb3
  41506f:	xchg   esp,eax
  415070:	add    BYTE PTR [eax],al
  415072:	fs inc ecx
  415074:	clc    
  415075:	data16 inc cx
  415078:	clc    
  415079:	data16 cld 
  41507b:	ret    
  41507c:	or     BYTE PTR [esi+0x34],ah
  41507f:	xor    DWORD PTR [esi-0x1],0x45877b3a
  415086:	lds    ecx,FWORD PTR [ecx+0x7b4a7499]
  41508c:	sti    
  41508d:	call   0x3ccc39
  415092:	xor    esp,eax
  415094:	jno    0x4150cb
  415096:	pop    edx
  415097:	xchg   ecx,eax
  415098:	adc    DWORD PTR [esi],edx
  41509a:	add    BYTE PTR ds:0x92403904,bh
  4150a0:	cld    
  4150a1:	push   DWORD PTR [esp+ecx*2+0x75]
  4150a5:	inc    ecx
  4150a6:	clc    
  4150a7:	in     al,dx
  4150a8:	div    edi
  4150aa:	xor    BYTE PTR [eax],dl
  4150ac:	add    al,0x0
  4150ae:	jbe    0x415122
  4150b0:	mov    ebp,0x9d3df841
  4150b5:	std    
  4150b6:	call   FWORD PTR [edx+0x3f]
  4150b9:	hlt    
  4150ba:	mov    eax,0x465d
  4150bf:	adc    edi,DWORD PTR [ebx+0x33dff442]
  4150c5:	xor    al,al
  4150c7:	(bad)  
  4150c8:	retf   
  4150c9:	ret    0x3d04
  4150cc:	xor    al,0xfd
  4150ce:	jmp    0xc2a6:0x574ed342
  4150d5:	call   0xfbb6294e
  4150da:	xor    esp,DWORD PTR [esi]
  4150dc:	ror    DWORD PTR [esi-0x1],1
  4150df:	int3   
  4150e0:	or     BYTE PTR [ebp-0x3702ebc],al
  4150e6:	adc    eax,0x3d8f2d
  4150eb:	xchg   esp,eax
  4150ec:	and    bl,BYTE PTR [ecx+0x1586eb81]
  4150f2:	pop    ds
  4150f3:	inc    edi
  4150f4:	cli    
  4150f5:	xor    bh,ch
  4150f7:	cmp    DWORD PTR [ebp-0xa],0x29f7943f
  4150fe:	adc    al,0x0
  415100:	mov    esp,0xc3fd209b
  415105:	loop   0x4150c5
  415107:	je     0x4150ad
  415109:	dec    esi
  41510a:	mov    al,dh
  41510c:	mov    esp,0xabfd9860
  415111:	and    dl,BYTE PTR [ecx-0x3e656517]
  415117:	jmp    0x39d4eb6d
  41511c:	xchg   DWORD PTR [ebp-0xf],edx
  41511f:	imul   esi,DWORD PTR [edi-0x7fb1567a],0x54849bde
  415129:	ins    DWORD PTR es:[edi],dx
  41512a:	cli    
  41512b:	mov    BYTE PTR [edx+0x2],bl
  41512e:	jmp    0x415199
  415130:	pushf  
  415131:	push   edx
  415132:	daa    
  415133:	add    cl,bl
  415135:	(bad)  
  415136:	cmc    
  415137:	out    0x81,eax
  415139:	imul   eax,DWORD PTR [ecx],0xfdb45355
  41513f:	adc    eax,0x10a8a9d4
  415144:	inc    ebx
  415145:	xchg   esp,eax
  415146:	in     eax,dx
  415147:	adc    eax,0xd88ea9d4
  41514c:	pop    ds
  41514d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41514e:	sub    edi,edi
  415150:	push   ds
  415151:	ja     0x4150ec
  415153:	adc    bh,al
  415155:	mov    esi,0xe98223ef
  41515a:	add    esi,DWORD PTR [ecx]
  41515c:	aam    0xee
  41515e:	cmp    BYTE PTR [ecx+0x6d],bl
  415161:	push   0x2e
  415163:	add    BYTE PTR [eax],al
  415165:	add    eax,DWORD PTR [eax]
  415167:	sbb    esp,eax
  415169:	(bad)  
  41516a:	xchg   edi,eax
  41516b:	adc    esp,eax
  41516d:	lahf   
  41516e:	xchg   edi,eax
  41516f:	sbb    BYTE PTR [eax],al
  415171:	jmp    0xa4334062
  415176:	add    BYTE PTR [ecx+0x722d940c],ch
  41517c:	test   al,0x15
  41517e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41517f:	ret    
  415180:	bound  ebp,QWORD PTR ss:[edi]
  415183:	bound  ebx,QWORD PTR [ebp+ecx*1-0x52418d6f]
  41518a:	das    
  41518b:	jb     0x41518f
  41518d:	dec    ecx
  41518e:	xor    esp,DWORD PTR [edx-0x36]
  415191:	test   eax,0xd480e32f
  415196:	adc    eax,0xeabc06ed
  41519b:	ds scas eax,DWORD PTR es:[edi]
  41519d:	iret   
  41519e:	or     al,0x9f
  4151a0:	call   0xd394:0x43d4eca7
  4151a7:	(bad)  
  4151a9:	jnp    0x415141
  4151ab:	xchg   esp,eax
  4151ac:	inc    ecx
  4151ad:	cld    
  4151ae:	rcr    BYTE PTR [ebx-0x5b7c6bfd],1
  4151b4:	scas   eax,DWORD PTR es:[edi]
  4151b5:	les    ecx,FWORD PTR [ecx-0x2011f454]
  4151bb:	push   cs
  4151bc:	jmp    0x8128e813
  4151c1:	push   esp
  4151c2:	or     al,0xbe
  4151c4:	xchg   ecx,eax
  4151c5:	xlat   BYTE PTR ds:[ebx]
  4151c6:	lods   al,BYTE PTR ds:[esi]
  4151c7:	pop    es
  4151c8:	adc    BYTE PTR [eax],al
  4151ca:	xchg   edi,eax
  4151cb:	xlat   BYTE PTR ds:[ebx]
  4151cc:	and    ebp,DWORD PTR [eax+0x40dce8a7]
  4151d2:	inc    eax
  4151d3:	add    BYTE PTR [ebx+0x2],dl
  4151d6:	adc    eax,0xa7039f14
  4151db:	fbld   TBYTE PTR [ebx-0x66]
  4151de:	xchg   ecx,eax
  4151df:	add    BYTE PTR fs:[ecx-0x70],bh
  4151e3:	xor    ebx,DWORD PTR [esi+0x12]
  4151e6:	rol    edx,1
  4151e8:	add    al,0xe9
  4151ea:	scas   eax,DWORD PTR es:[edi]
  4151eb:	adc    DWORD PTR ds:0x139397e9,esp
  4151f1:	int    0xe5
  4151f3:	aad    0xff
  4151f5:	fcmovbe st,st(7)
  4151f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4151f8:	jmp    0x2e78:0xe9a48486
  4151ff:	adc    bl,al
  415201:	xor    bl,0x31
  415204:	mov    DWORD PTR [ebp-0x78],edi
  415207:	xchg   DWORD PTR [edi-0x26baaaf],edi
  41520d:	pop    esi
  41520e:	and    BYTE PTR [edx-0x4],al
  415211:	bound  edx,QWORD PTR [eax+ecx*1-0xb]
  415215:	xor    DWORD PTR [edx+0x39c8b55],esp
  41521b:	loopne 0x4151de
  41521d:	cdq    
  41521e:	adc    DWORD PTR cs:[eax],ecx
  415221:	ret    
  415222:	xchg   edi,eax
  415223:	xchg   ebx,eax
  415224:	jae    0x4151ff
  415226:	push   ds
  415227:	adc    DWORD PTR [esi+eiz*1],ecx
  41522a:	mov    al,ds:0xf4fcfc
  41522f:	iret   
  415230:	icebp  
  415231:	aas    
  415232:	jmp    0xe94e148f
  415237:	mov    cl,0x0
  415239:	std    
  41523a:	jge    0x415277
  41523c:	or     ebp,edi
  41523e:	jne    0x4152b3
  415240:	or     ebp,edi
  415242:	js     0x41528f
  415244:	xchg   esp,eax
  415245:	adc    ecx,ecx
  415247:	inc    ebp
  415248:	aad    0xff
  41524a:	stos   BYTE PTR es:[edi],al
  41524b:	mov    BYTE PTR [eax],al
  41524d:	push   ebx
  41524e:	jb     0x41524c
  415250:	jle    0x41523e
  415252:	add    eax,0x62552e61
  415257:	add    BYTE PTR [edi+0x56a600ef],al
  41525d:	out    0x4c,eax
  41525f:	xchg   BYTE PTR [edx+0xf500b5],dl
  415265:	add    BYTE PTR [ebx],bh
  415267:	inc    ebp
  415268:	pop    es
  415269:	dec    esi
  41526a:	(bad)  
  41526b:	mov    ebp,0x12ce86cb
  415270:	into   
  415271:	or     eax,DWORD PTR [ebp+0x305fa3d]
  415277:	and    eax,0xc2ebf5a3
  41527c:	add    al,0x3a
  41527e:	(bad)  
  41527f:	call   0xbd816628
  415284:	lods   eax,DWORD PTR ds:[esi]
  415285:	xor    BYTE PTR [edi],ah
  415287:	lods   eax,DWORD PTR ds:[esi]
  415288:	add    BYTE PTR [ecx+0x2d],dh
  41528b:	xor    al,BYTE PTR ds:0x64f88d08
  415291:	push   eax
  415292:	mov    eax,DWORD PTR [eax]
  415294:	clc    
  415295:	cld    
  415296:	imul   eax,DWORD PTR [edx],0xffffe555
  41529c:	lods   eax,DWORD PTR ds:[esi]
  41529d:	adc    eax,0x727575c0
  4152a2:	inc    ecx
  4152a3:	aam    0x7f
  4152a5:	add    al,0x1
  4152a7:	cmp    DWORD PTR [eax],edi
  4152a9:	dec    esp
  4152aa:	jno    0x4152bd
  4152ac:	call   0xcdf1ce2a
  4152b1:	call   FWORD PTR [edx+0x5e]
  4152b4:	es mov edx,0xbdae6d08
  4152bb:	jmp    0x415315
  4152bd:	jns    0x415330
  4152bf:	fcom   QWORD PTR [edx-0x5d]
  4152c2:	and    DWORD PTR [esi],edx
  4152c4:	std    
  4152c5:	jmp    esi
  4152c7:	icebp  
  4152c8:	mov    dh,0xbf
  4152ca:	call   0xfbba8957
  4152cf:	push   eax
  4152d0:	push   edx
  4152d1:	add    al,0x24
  4152d3:	or     BYTE PTR [edi+edi*1-0x25702fc],dl
  4152da:	sti    
  4152db:	cld    
  4152dc:	mov    al,ds:0x85fcfc05
  4152e1:	popf   
  4152e2:	cwde   
  4152e3:	adc    edx,DWORD PTR [eax-0x38ffbe4d]
  4152e9:	pusha  
  4152ea:	test   al,bh
  4152ec:	sti    
  4152ed:	mov    ch,BYTE PTR [esi-0x40]
  4152f0:	(bad)  
  4152f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4152f2:	add    DWORD PTR [ebx+0x1f],edx
  4152f5:	jle    0x41527b
  4152f7:	in     al,dx
  4152f8:	add    BYTE PTR [eax-0x6b03e1da],dl
  4152fe:	imul   BYTE PTR [esi]
  415300:	std    
  415301:	dec    ecx
  415302:	xchg   ecx,eax
  415303:	mov    WORD PTR [ebx],?
  415305:	mov    al,0xb4
  415307:	inc    ecx
  415308:	add    bl,al
  41530a:	mov    ecx,DWORD PTR [ecx]
  41530c:	mov    esp,ebx
  41530e:	sbb    cl,BYTE PTR [edi]
  415310:	add    al,0xb3
  415312:	retf   0xc07d
  415315:	and    BYTE PTR [ecx+0x40a3c984],ah
  41531b:	mov    al,BYTE PTR [eax]
  41531d:	xchg   esp,eax
  41531e:	test   eax,0x199c4e8c
  415323:	add    al,BYTE PTR [edi-0x26822a27]
  415329:	or     BYTE PTR [ebp-0x2483a476],bl
  41532f:	ror    BYTE PTR ds:0x4389e92a,0x9c
  415336:	jmp    0x6a8d:0x5c11100d
  41533d:	xchg   esp,eax
  41533e:	jns    0x4152d8
  415340:	jae    0x4152de
  415342:	xchg   edx,eax
  415343:	jmp    0x4152f8
  415345:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415346:	imul   eax,DWORD PTR [ecx],0xbc1c5c89
  41534c:	jae    0x4152e6
  41534e:	add    dh,ah
  415350:	adc    DWORD PTR [eax+0x3aca587],esp
  415356:	xchg   edi,eax
  415357:	(bad)  
  415358:	xchg   edi,eax
  415359:	sbb    al,al
  41535b:	push   ebx
  41535c:	or     eax,0xf33d0d00
  415361:	fsubr  QWORD PTR [ebx-0x495465f4]
  415367:	jg     0x41530b
  415369:	xchg   edi,eax
  41536a:	in     eax,dx
  41536b:	hlt    
  41536c:	imul   ebx,DWORD PTR [ebx-0x410ff405],0x38a9457
  415376:	xchg   esp,eax
  415377:	add    BYTE PTR [edx-0x16689cf9],al
  41537d:	add    al,0x94
  41537f:	add    ah,bh
  415381:	(bad)  
  415382:	fdivr  DWORD PTR [ebx+edi*2]
  415385:	dec    eax
  415386:	jno    0x415388
  415388:	out    0x96,eax
  41538a:	dec    edx
  41538b:	lock ins DWORD PTR es:[edi],dx
  41538d:	push   cs
  41538e:	mov    WORD PTR [ebx-0x554f0023],ss
  415394:	les    esp,FWORD PTR fs:[eax]
  415397:	jmp    FWORD PTR [ecx-0x35]
  41539a:	mov    eax,ds:0x9497cc7e
  41539f:	or     al,0xf0
  4153a1:	xchg   esi,eax
  4153a2:	pop    es
  4153a3:	xchg   ebp,eax
  4153a4:	ds icebp 
  4153a6:	mov    bh,0xea
  4153a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4153a9:	add    esp,ecx
  4153ab:	test   DWORD PTR [edx],ebp
  4153ad:	cmp    edx,DWORD PTR [ebx-0x41]
  4153b0:	repz add eax,edi
  4153b3:	test   DWORD PTR [ebx],ecx
  4153b5:	cmp    DWORD PTR [eax+0x5],0xffffffda
  4153b9:	ret    
  4153ba:	les    esi,FWORD PTR [eax]
  4153bc:	pop    esp
  4153bd:	dec    ecx
  4153be:	mov    WORD PTR [edi],gs
  4153c0:	xchg   edi,eax
  4153c1:	xor    eax,DWORD PTR [eax]
  4153c3:	mov    esi,0x40416c04
  4153c8:	xor    DWORD PTR [eax],eax
  4153ca:	add    DWORD PTR [ebx-0x6e],0xe2351fd
  4153d1:	or     BYTE PTR [esi-0x1700732c],ch
  4153d7:	xchg   edi,eax
  4153d8:	add    ch,al
  4153da:	sub    al,0x0
  4153dc:	icebp  
  4153dd:	and    al,0xe9
  4153df:	xchg   edi,eax
  4153e0:	mov    ebx,0xf01fc543
  4153e5:	(bad)  
  4153e6:	call   0xdd15420d
  4153eb:	push   edi
  4153ec:	add    ch,dh
  4153ee:	xchg   ecx,eax
  4153ef:	(bad)  
  4153f0:	push   ecx
  4153f1:	inc    eax
  4153f2:	mov    al,0xd5
  4153f4:	cld    
  4153f5:	push   DWORD PTR [ebx]
  4153f7:	pop    ds
  4153f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4153f9:	dec    edi
  4153fa:	add    edx,DWORD PTR [edi+ecx*8-0x6bb3a341]
  415401:	dec    edi
  415402:	sub    DWORD PTR [eax-0x5b81f9da],ecx
  415408:	or     BYTE PTR [edi+0x13941c2c],al
  41540e:	jge    0x4153d4
  415410:	sar    edi,1
  415412:	pop    ebp
  415413:	out    dx,eax
  415414:	idiv   DWORD PTR [edi+0x4bed8a9]
  41541a:	jmp    0x32728185
  41541f:	imul   edi,DWORD PTR [edi],0xbe000480
  415425:	inc    ecx
  415426:	jmp    0x736ceb2b
  41542b:	cld    
  41542c:	jmp    0x97ec17e9
  415431:	sub    bh,ch
  415433:	cld    
  415434:	cmp    ebp,esi
  415436:	aas    
  415437:	jmp    0x2ce92953
  41543c:	(bad)  
  41543d:	add    BYTE PTR [eax],al
  41543f:	xchg   esp,eax
  415440:	pop    eax
  415441:	cdq    
  415442:	jns    0x415444
  415444:	push   edx
  415445:	imul   edi,ebx,0xffffff84
  415448:	jge    0x41544b
  41544a:	adc    bh,al
  41544c:	xor    BYTE PTR [ecx],bl
  41544e:	rol    DWORD PTR [ebx+0x2d],0x27
  415452:	ss inc ecx
  415454:	cmp    eax,0xf0a81985
  415459:	add    BYTE PTR ds:[esi+0x4a],dl
  41545d:	mov    eax,ds:0xfc6d12ed
  415462:	mov    DWORD PTR [ecx+eiz*4-0x70],eax
  415466:	in     eax,0xce
  415468:	aam    0x6a
  41546a:	sti    
  41546b:	mov    eax,DWORD PTR [eax]
  41546d:	jne    0x415480
  41546f:	inc    eax
  415470:	in     eax,dx
  415471:	out    0x5,al
  415473:	mov    esi,DWORD PTR ds:0x23ff52cf
  415479:	out    0xc,al
  41547b:	push   0xffffffef
  41547d:	jecxz  0x415405
  41547f:	call   0xf8c8b68e
  415484:	ds imul edi,ebx,0xfb7fb074
  41548b:	inc    DWORD PTR [eax]
  41548d:	sar    dh,0x31
  415490:	(bad)  [esi]
  415492:	rcr    DWORD PTR [ecx],0x16
  415495:	std    
  415496:	cld    
  415497:	push   eax
  415498:	jmp    DWORD PTR [ebx-0x1d]
  41549b:	cli    
  41549c:	(bad)  
  41549d:	jmp    0xc1d7:0x6e8a58ca
  4154a4:	add    al,0x7d
  4154a6:	fild   WORD PTR [esi+0x1458feec]
  4154ac:	push   ebx
  4154ad:	jle    0x4154f8
  4154af:	push   esi
  4154b0:	cmp    BYTE PTR [eax+0x1c],cl
  4154b3:	rol    DWORD PTR [ebx+0x7d],0xff
  4154b7:	xor    BYTE PTR [esi+0x3f4fd5],bh
  4154bd:	xchg   esp,eax
  4154be:	dec    edi
  4154bf:	xchg   esp,eax
  4154c0:	adc    ebp,DWORD PTR [eax-0x74]
  4154c3:	inc    ecx
  4154c4:	add    BYTE PTR [esp+eiz*4-0x66283c97],cl
  4154cb:	push   cs
  4154cc:	sbb    ch,BYTE PTR [esp+ecx*4]
  4154cf:	mov    edi,ebp
  4154d1:	cmp    esp,DWORD PTR [esi]
  4154d3:	les    esi,FWORD PTR [ebp+eax*4+0x5e]
  4154d7:	(bad)  
  4154d8:	stos   DWORD PTR es:[edi],eax
  4154d9:	push   ecx
  4154da:	fild   DWORD PTR [ebx]
  4154dc:	stos   BYTE PTR es:[edi],al
  4154dd:	push   0xffffffd8
  4154df:	add    eax,esi
  4154e1:	xchg   ecx,eax
  4154e2:	cmp    DWORD PTR [esi+0x2b989441],0xef49a1fd
  4154ec:	aas    
  4154ed:	xchg   esp,eax
  4154ee:	and    edi,DWORD PTR [esi]
  4154f0:	or     BYTE PTR [eax],al
  4154f2:	addr16 inc ebx
  4154f4:	add    ch,al
  4154f6:	push   esi
  4154f7:	pusha  
  4154f8:	xchg   esp,eax
  4154f9:	std    
  4154fa:	inc    esp
  4154fb:	outs   dx,BYTE PTR ds:[esi]
  4154fc:	out    dx,al
  4154fd:	test   DWORD PTR [ecx+0x518703d9],0xd3f88071
  415507:	mov    ebp,?
  415509:	xor    ah,dl
  41550b:	jb     0x415526
  41550d:	mov    DWORD PTR [ecx-0x6bc01193],ecx
  415513:	imul   BYTE PTR [esi]
  415515:	push   ecx
  415516:	and    DWORD PTR [ebp-0x6b],edx
  415519:	dec    edi
  41551a:	inc    edi
  41551b:	sbb    al,0x46
  41551d:	in     al,dx
  41551e:	inc    ebp
  41551f:	dec    edx
  415520:	xor    BYTE PTR [ebp+0x48019982],bh
  415526:	jmp    0x415591
  415528:	mov    bl,BYTE PTR [ebx-0x64]
  41552b:	adc    BYTE PTR [esi],dh
  41552d:	cld    
  41552e:	sub    edi,0x7f
  415531:	clc    
  415532:	jnp    0x415588
  415534:	inc    eax
  415535:	std    
  415536:	mov    DWORD PTR [eax],eax
  415538:	sti    
  415539:	in     eax,dx
  41553a:	stos   DWORD PTR es:[edi],eax
  41553b:	add    ah,bl
  41553d:	cmc    
  41553e:	mov    eax,0xa20ee700
  415543:	jnp    0x4154e9
  415545:	xchg   edi,eax
  415546:	(bad)  
  415547:	ret    
  415548:	jnp    0x415531
  41554a:	xor    ebx,eax
  41554c:	popf   
  41554d:	xchg   esp,eax
  41554e:	inc    ecx
  41554f:	jns    0x4154fd
  415551:	or     edi,DWORD PTR [ebp-0x3d]
  415554:	jae    0x415536
  415556:	add    ah,al
  415558:	xor    esi,DWORD PTR [ecx+ecx*2+0x28]
  41555c:	xor    dh,bl
  41555e:	sbb    DWORD PTR [eax],esp
  415560:	(bad)  
  415561:	pop    esp
  415562:	cld    
  415563:	les    esi,FWORD PTR [ebx]
  415565:	ss xchg ebx,eax
  415567:	xchg   DWORD PTR [eax-0x3fe8453a],ecx
  41556d:	xor    edi,edi
  41556f:	add    BYTE PTR ds:0x2fc09bdf,dl
  415575:	scas   al,BYTE PTR es:[edi]
  415576:	xchg   ebx,eax
  415577:	sbb    ebp,DWORD PTR ds:0x886792ef
  41557d:	sahf   
  41557e:	stc    
  41557f:	jg     0x415577
  415581:	es add al,0xd
  415584:	inc    ebp
  415585:	fbstp  TBYTE PTR [edx]
  415587:	jb     0x4155b4
  415589:	mov    al,0xc6
  41558b:	nop
  41558c:	add    BYTE PTR [edi+edi*2],dl
  41558f:	mov    al,0x82
  415591:	add    DWORD PTR [eax],0x65
  415594:	ss push ss
  415596:	(bad)  
  415597:	repz xchg edi,eax
  415599:	mov    BYTE PTR [ecx+ebp*4-0x63d69572],cl
  4155a0:	jmp    DWORD PTR [ecx-0x54]
  4155a3:	rol    DWORD PTR [ebx+edx*2+0x4],1
  4155a7:	pushf  
  4155a8:	add    bh,ah
  4155aa:	leave  
  4155ab:	xlat   BYTE PTR ds:[ebx]
  4155ac:	(bad)  
  4155ad:	out    0x92,eax
  4155af:	pop    es
  4155b0:	xchg   ebp,eax
  4155b1:	add    BYTE PTR [ebp+ebx*4-0x78],ah
  4155b5:	call   0xfdccfb6e
  4155ba:	jb     0x4155bc
  4155bc:	test   DWORD PTR [eax-0x1d83d67c],ecx
  4155c2:	mov    ch,BYTE PTR [ebx+eax*1-0x687caacf]
  4155c9:	sbb    ch,BYTE PTR [esi]
  4155cb:	call   0xd7:0xd9ebf226
  4155d2:	mov    ecx,edi
  4155d4:	adc    cl,BYTE PTR [edi-0x716a8b93]
  4155da:	inc    ebx
  4155db:	out    0x17,al
  4155dd:	or     bh,ch
  4155df:	jmp    0xf879:0xeee9be89
  4155e6:	pop    ebp
  4155e7:	fs sub eax,0x281e0815
  4155ed:	dec    ebp
  4155ee:	pop    esi
  4155ef:	mov    esi,0x1ffcd026
  4155f4:	daa    
  4155f5:	repnz and ebx,ebx
  4155f8:	push   edi
  4155f9:	add    BYTE PTR [ecx+0x592ea6ae],cl
  4155ff:	mov    al,0xda
  415601:	xor    DWORD PTR [ecx+0x3b80a085],ecx
  415607:	inc    ecx
  415608:	fdivr  QWORD PTR [edi]
  41560a:	add    cl,ch
  41560c:	lods   al,BYTE PTR ds:[esi]
  41560d:	enter  0x3f55,0xef
  415611:	rol    DWORD PTR [ecx-0x17],0x7d
  415615:	mov    edx,DWORD PTR [ebx]
  415617:	jge    0x4155c2
  415619:	int    0xff
  41561b:	push   0xaac365c4
  415620:	add    BYTE PTR [edi-0xc8d00],dl
  415626:	pusha  
  415627:	repz dec esi
  415629:	es test al,al
  41562c:	add    BYTE PTR [ecx-0x6c],cl
  41562f:	les    eax,FWORD PTR ds:0x3fb811
  415635:	pop    ss
  415636:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415637:	add    BYTE PTR ds:[ebx+0x3ec5a7f8],bh
  41563e:	add    ebp,edi
  415640:	push   ebp
  415641:	or     BYTE PTR [eax+0x12d12ed],0x5e
  415648:	(bad)  
  415649:	clc    
  41564a:	jl     0x41569c
  41564c:	dec    eax
  41564e:	lea    ecx,[eax-0x14babb]
  415654:	(bad)  
  415655:	call   0x3d4186d6
  41565a:	add    eax,ebp
  41565c:	sbb    eax,0x50fb6f35
  415661:	inc    edx
  415662:	cmc    
  415663:	pop    es
  415664:	call   FWORD PTR [eax]
  415666:	lds    edx,FWORD PTR [ecx]
  415668:	inc    eax
  415669:	std    
  41566a:	test   eax,eax
  41566c:	je     0x41565d
  41566e:	call   0x4eecd12
  415673:	sti    
  415674:	jne    0x415667
  415676:	outs   dx,DWORD PTR ds:[esi]
  415677:	adc    DWORD PTR [esp+ecx*8],ecx
  41567a:	inc    eax
  41567b:	add    BYTE PTR [edx],dh
  41567d:	cmp    eax,0xecb0026b
  415682:	dec    ecx
  415683:	ret    0x8
  415686:	in     eax,dx
  415687:	aad    0x86
  415689:	in     al,dx
  41568a:	ds pusha 
  41568c:	push   eax
  41568d:	push   0xfffd88bd
  415692:	and    eax,0x42ff5979
  415697:	or     DWORD PTR [ecx-0x10],eax
  41569a:	cmp    ah,al
  41569c:	jno    0x4156ad
  41569e:	(bad)  
  41569f:	mov    ah,bh
  4156a1:	adc    eax,0x3d8a99
  4156a6:	xchg   esp,eax
  4156a7:	jmp    0x99553e6f
  4156ac:	add    DWORD PTR [eax],eax
  4156ae:	out    0x86,eax
  4156b0:	rcl    DWORD PTR [esi-0x15],0x1c
  4156b4:	or     eax,0x895d52f7
  4156b9:	add    BYTE PTR [esi],bh
  4156bb:	pop    ds
  4156bc:	inc    ebp
  4156bd:	or     BYTE PTR [edi],bl
  4156bf:	pop    edx
  4156c0:	stc    
  4156c1:	xchg   cl,bl
  4156c3:	int    0x7a
  4156c5:	inc    ebx
  4156c6:	mov    BYTE PTR [esi],bl
  4156c8:	inc    esp
  4156c9:	or     BYTE PTR ds:0xd189a165,bl
  4156cf:	lods   eax,DWORD PTR ds:[esi]
  4156d0:	enter  0x2c43,0x98
  4156d4:	add    DWORD PTR [eax],eax
  4156d6:	xchg   esp,eax
  4156d7:	sbb    al,0xc4
  4156d9:	je     0x415679
  4156db:	and    BYTE PTR [ebp-0x1c],al
  4156de:	push   ebx
  4156df:	fstp   QWORD PTR [ebx+0x1999401]
  4156e5:	xor    DWORD PTR [ecx+0xc601ad],0xe701ba59
  4156ef:	jmp    0x1941588d
  4156f4:	pop    edx
  4156f5:	adc    eax,0x2521714
  4156fa:	or     eax,0x15419
  4156ff:	xchg   esp,eax
  415700:	push   cs
  415701:	push   ss
  415702:	or     al,0xf
  415704:	int    0xfb
  415706:	mov    bl,BYTE PTR [ecx+0x70]
  415709:	pushf  
  41570a:	pop    es
  41570b:	pop    ds
  41570c:	cmc    
  41570d:	sti    
  41570e:	mov    BYTE PTR [ecx-0x6b],ch
  415711:	jle    0x41578e
  415713:	mov    esp,0x64b0461c
  415718:	adc    dl,BYTE PTR [edi]
  41571a:	or     BYTE PTR [ebx-0x7e02fa6d],dh
  415720:	add    BYTE PTR [edi-0xa],al
  415723:	arpl   WORD PTR [eax],ax
  415725:	fs ret 
  415727:	mov    DWORD PTR [ebp+0x94034c],eax
  41572d:	push   ebp
  41572e:	inc    esi
  41572f:	inc    esp
  415730:	add    DWORD PTR [ebx+0x73450d20],edi
  415736:	xchg   BYTE PTR [esp+edx*1-0x56],dl
  41573a:	jp     0x415713
  41573c:	xchg   esp,eax
  41573d:	inc    eax
  41573e:	mov    bl,0x94
  415740:	add    bh,ah
  415742:	jl     0x415713
  415744:	call   0xed2211ac
  415749:	popa   
  41574a:	add    bl,BYTE PTR [edi]
  41574c:	xor    eax,0x490034fb
  415751:	adc    eax,0x8bea33f7
  415756:	xlat   BYTE PTR ds:[ebx]
  415757:	xchg   DWORD PTR [ebx+edi*8+0x6a],edx
  41575b:	push   edi
  41575c:	xchg   esp,eax
  41575d:	add    bh,ah
  41575f:	jl     0x415738
  415761:	pushf  
  415762:	ins    BYTE PTR es:[edi],dx
  415763:	les    esp,FWORD PTR [edx-0x7fe62218]
  415769:	ja     0x4157a7
  41576b:	xchg   esp,eax
  41576c:	adc    DWORD PTR ds:0x97dd7af7,edx
  415772:	(bad)  
  415773:	mov    al,BYTE PTR [ecx]
  415775:	mov    esp,DWORD PTR [ebx-0x3c]
  415778:	mov    DWORD PTR [esp+ebx*2+0x62009404],eax
  41577f:	push   es
  415780:	jl     0x415782
  415782:	out    dx,eax
  415783:	add    edx,DWORD PTR [ebx+ecx*4-0x45f26bec]
  41578a:	xchg   esi,eax
  41578b:	xor    al,0x98
  41578d:	jns    0x4157b3
  41578f:	mov    al,ds:0x5f06c017
  415794:	dec    ebx
  415795:	std    
  415796:	jge    0x415791
  415798:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415799:	repnz jmp FWORD PTR [eax]
  41579c:	cwde   
  41579d:	(bad)  
  41579e:	xor    dh,al
  4157a0:	xchg   edi,eax
  4157a1:	add    BYTE PTR [ebx-0x27],dh
  4157a4:	or     DWORD PTR [edi],edi
  4157a6:	mov    al,0x9
  4157a8:	jl     0x415791
  4157aa:	mov    BYTE PTR [edi+ecx*2+0xed4c07e],ch
  4157b1:	leave  
  4157b2:	add    al,0xbc
  4157b4:	add    BYTE PTR [edx-0x58c200e8],al
  4157ba:	add    al,0xfd
  4157bc:	fmul   QWORD PTR [edi]
  4157be:	out    dx,al
  4157bf:	aas    
  4157c0:	jmp    0xb9b518e1
  4157c5:	pop    ecx
  4157c6:	add    al,0xff
  4157c8:	push   0x9bff8885
  4157cd:	cdq    
  4157ce:	cmp    BYTE PTR [ebx+0x10],0x91
  4157d2:	adc    al,0x3b
  4157d4:	push   es
  4157d5:	popf   
  4157d6:	lock mov ah,BYTE PTR [ebx+ebp*8+0x22990016]
  4157de:	push   cs
  4157df:	call   0x128f84d2
  4157e4:	sub    DWORD PTR [eax-0x6817fe3b],ebx
  4157ea:	add    BYTE PTR ds:0xfd8b996c,cl
  4157f0:	into   
  4157f1:	sar    BYTE PTR ds:0x89fb35f4,cl
  4157f7:	std    
  4157f8:	shr    dh,cl
  4157fa:	rol    dh,1
  4157fc:	push   0x1f
  4157fe:	dec    DWORD PTR [esp+edx*2]
  415801:	rol    BYTE PTR [ecx+0x7f],1
  415804:	mov    BYTE PTR [eax+eax*1],ah
  415807:	add    cl,ch
  415809:	push   ss
  41580a:	dec    edx
  41580b:	push   es
  41580c:	pusha  
  41580d:	push   esp
  41580e:	xchg   esp,eax
  41580f:	jmp    0xfd7f29f9
  415814:	add    BYTE PTR [edx+edi*2+0x2500f071],ch
  41581b:	sbb    eax,0x7e2aff5c
  415820:	jns    0x415816
  415822:	mov    ebp,0xc15b5dda
  415827:	mov    esp,?
  415829:	jne    0x41586c
  41582b:	jp     0x41583e
  41582d:	and    al,0x93
  41582f:	cmp    eax,0x7a308a00
  415834:	(bad)
  415837:	std    
  415838:	push   ebp
  415839:	mov    eax,DWORD PTR [eax+0x7d401431]
  41583f:	shr    BYTE PTR [ecx+0x1],cl
  415842:	mov    edx,0x861423f1
  415847:	(bad)
  41584b:	mov    DWORD PTR [eax-0x18b96a31],ecx
  415851:	add    BYTE PTR ds:0x4674c081,bh
  415857:	out    0xfe,eax
  415859:	push   esi
  41585a:	cmp    dl,BYTE PTR [edi+eax*4-0x8]
  41585e:	sar    BYTE PTR [edx+0x71],0xe6
  415862:	sbb    bl,bl
  415864:	ror    DWORD PTR [eax],0x2d
  415867:	rol    BYTE PTR [esi-0x7a75114],cl
  41586d:	sbb    ecx,0xffffff87
  415870:	push   eax
  415871:	push   esi
  415872:	ret    0x717b
  415875:	or     al,0x86
  415877:	outs   dx,BYTE PTR ds:[esi]
  415878:	sti    
  415879:	jne    0x415880
  41587b:	push   es
  41587c:	je     0x4158a2
  41587e:	add    BYTE PTR [ecx-0x3adbb3fb],ah
  415884:	jnp    0x415897
  415886:	clc    
  415887:	fidivr WORD PTR [eax+eax*1]
  41588a:	mov    edx,ebp
  41588c:	adc    bh,0xf
  41588f:	xchg   esp,eax
  415890:	sbb    esi,DWORD PTR [edi+0x0]
  415893:	xchg   esp,eax
  415894:	xchg   edi,eax
  415895:	cld    
  415896:	mov    ah,0x51
  415898:	(bad)  
  415899:	jle    0x4158df
  41589b:	jo     0x41583c
  41589d:	xor    ebp,edi
  41589f:	sub    BYTE PTR [ebx-0x1c1cf30b],bh
  4158a5:	jmp    FWORD PTR [ecx-0x6a]
  4158a8:	fsub   DWORD PTR [ebx+0x33d88f10]
  4158ae:	push   0xffffff94
  4158b0:	rol    DWORD PTR [ebp+0x30999400],0xfd
  4158b7:	test   eax,0x943ff595
  4158bc:	sbb    al,0xc4
  4158be:	jae    0x415858
  4158c0:	mov    ch,BYTE PTR [eax+0x4822c8e9]
  4158c6:	and    al,0x7c
  4158c8:	sbb    cl,BYTE PTR [ebp+edi*8+0x337854e1]
  4158cf:	push   eax
  4158d0:	mov    eax,DWORD PTR [ecx+0x0]
  4158d3:	mov    esi,0xe0872ee9
  4158d8:	mov    ch,0xed
  4158da:	cld    
  4158db:	bound  edx,QWORD PTR [ebx]
  4158dd:	int    0xff
  4158df:	xchg   DWORD PTR [ecx+0x1],ebx
  4158e2:	or     eax,DWORD PTR [eax]
  4158e4:	xchg   esp,eax
  4158e5:	cdq    
  4158e6:	add    DWORD PTR [eax],ecx
  4158e8:	les    esi,FWORD PTR [ebx]
  4158ea:	xchg   esp,eax
  4158eb:	push   ecx
  4158ec:	sbb    ecx,DWORD PTR [edi-0x74]
  4158ef:	jae    0x415891
  4158f1:	and    dh,BYTE PTR ds:0x16b6b424
  4158f7:	or     BYTE PTR [edi],cl
  4158f9:	into   
  4158fa:	out    0x17,eax
  4158fc:	in     al,dx
  4158fd:	xor    BYTE PTR [ebx-0x6bbc0c03],cl
  415903:	std    
  415904:	pusha  
  415905:	std    
  415906:	jmp    0x415890
  415908:	mov    esp,0xb7b5a600
  41590d:	xchg   DWORD PTR [esi+0x130c98c],ebx
  415913:	xchg   esp,eax
  415914:	leave  
  415915:	or     al,0xc3
  415917:	out    dx,eax
  415918:	shr    BYTE PTR [edi-0x70e8fa6e],0xf3
  41591f:	add    DWORD PTR [ebx],ebx
  415921:	call   DWORD PTR ds:0x12c41d2e
  415927:	jns    0x4158e0
  415929:	and    eax,0x329bfb29
  41592e:	ins    BYTE PTR es:[edi],dx
  41592f:	cmp    eax,DWORD PTR [ebp-0x7c7f41d2]
  415935:	(bad)  
  415936:	aad    0x3d
  415938:	lds    ecx,FWORD PTR [esi+0x380fa8f9]
  41593e:	ds cwde 
  415940:	ret    0xab7b
  415943:	out    0x9b,eax
  415945:	jp     0x41592a
  415947:	add    al,BYTE PTR [eax]
  415949:	mov    al,0xd0
  41594b:	loop   0x415947
  41594d:	loopne 0x415917
  41594f:	bound  ebp,QWORD PTR [eax-0x3c171338]
  415955:	mov    cl,bh
  415957:	mov    edi,?
  415959:	nop
  41595a:	inc    esi
  41595b:	daa    
  41595c:	push   0xffffffae
  41595e:	cli    
  41595f:	popf   
  415960:	xchg   esp,eax
  415961:	xor    DWORD PTR [ebp-0x57],esi
  415964:	add    dl,BYTE PTR [eax]
  415966:	stos   DWORD PTR es:[edi],eax
  415967:	fimul  WORD PTR [ebp+0x54]
  41596a:	idiv   DWORD PTR [edx-0x39]
  41596d:	xchg   ebp,eax
  41596e:	nop
  41596f:	xor    BYTE PTR [edi-0x46a978f5],al
  415975:	lds    esi,FWORD PTR [edx-0x41f301bf]
  41597b:	and    BYTE PTR [ebx-0x6c568515],dl
  415981:	int3   
  415982:	jmp    0xfb02:0x9950a8ff
  415989:	xlat   BYTE PTR ds:[ebx]
  41598a:	and    al,0x5e
  41598c:	inc    edx
  41598d:	sar    bl,cl
  41598f:	call   DWORD PTR [edx]
  415991:	enter  0x392d,0xa8
  415995:	mov    ds:0xdba93101,eax
  41599a:	xor    BYTE PTR [ebx+0x57a96e5],cl
  4159a0:	mov    ebp,0xc50a12ca
  4159a5:	fcmovne st,st(2)
  4159a7:	add    edi,esi
  4159a9:	xchg   ebp,eax
  4159aa:	sar    DWORD PTR [edi+0x56d200c2],1
  4159b0:	or     eax,0xff0c0cb7
  4159b5:	inc    ecx
  4159b6:	mov    edi,DWORD PTR [eax+0x6]
  4159b9:	or     eax,0x5071068
  4159be:	dec    ecx
  4159bf:	or     eax,0x9162a703
  4159c4:	jb     0x4159fe
  4159c6:	pop    ebx
  4159c7:	xchg   ecx,eax
  4159c8:	je     0x41595a
  4159ca:	pop    ss
  4159cb:	(bad)  
  4159cc:	pop    ebp
  4159cd:	pushf  
  4159ce:	stos   DWORD PTR es:[edi],eax
  4159cf:	repz mov ch,0x28
  4159d2:	shl    DWORD PTR [esi-0x41a4d9d7],cl
  4159d8:	jae    0x41597a
  4159da:	xchg   BYTE PTR [eax-0x7bf0f9b0],bl
  4159e0:	test   BYTE PTR [ecx],ch
  4159e2:	test   bl,al
  4159e4:	inc    ebp
  4159e5:	bound  edx,QWORD PTR [esi-0x68]
  4159e8:	push   es
  4159e9:	imul   ecx,DWORD PTR [esi+0x24],0xc7d5ec74
  4159f0:	lock pop ebx
  4159f2:	es enter 0x5df0,0xec
  4159f7:	js     0x4159c7
  4159f9:	add    al,BYTE PTR [eax-0x80]
  4159fc:	test   DWORD PTR [eax],0x461eebef
  415a02:	inc    di
  415a04:	out    0xb,eax
  415a06:	ja     0x415a07
  415a08:	cmp    esi,DWORD PTR [eax]
  415a0a:	lahf   
  415a0b:	cmp    DWORD PTR [ecx],0x39
  415a0e:	jp     0x415a0f
  415a10:	inc    ebp
  415a11:	cmp    eax,DWORD PTR [eax]
  415a13:	cs in  al,dx
  415a15:	in     al,dx
  415a16:	mov    edi,ebx
  415a18:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415a19:	mov    esi,0x6f862583
  415a1e:	push   es
  415a1f:	inc    esi
  415a20:	mov    edi,0xfc06c727
  415a25:	rol    BYTE PTR cs:[ebx+0x3655bed5],0x6d
  415a2d:	jg     0x415a1b
  415a2f:	jns    0x4159fe
  415a31:	push   ebp
  415a32:	mov    ebp,ebp
  415a34:	push   es
  415a35:	inc    ecx
  415a36:	or     BYTE PTR [edx+0x4],cl
  415a39:	inc    ecx
  415a3a:	clc    
  415a3b:	(bad)  
  415a3c:	xchg   ebp,eax
  415a3d:	mov    BYTE PTR [ebp-0x2b],bh
  415a40:	push   es
  415a41:	(bad)  
  415a42:	call   0x3cd488
  415a47:	neg    BYTE PTR [ecx-0x7f]
  415a4a:	fld    TBYTE PTR [eax]
  415a4c:	mov    edi,esp
  415a4e:	inc    ebp
  415a4f:	mov    ch,0xc7
  415a51:	jle    0x415a51
  415a53:	dec    ebp
  415a54:	repnz loop 0x415a8a
  415a57:	jge    0x415a33
  415a59:	pop    ebp
  415a5a:	pop    ebx
  415a5b:	je     0x415a18
  415a5d:	or     BYTE PTR [eax],al
  415a5f:	data16 outs dx,BYTE PTR ds:[esi]
  415a61:	cmp    BYTE PTR [ebp+0x41],0x1
  415a65:	test   DWORD PTR [ebp+0x21],esi
  415a68:	cmp    cl,al
  415a6a:	add    BYTE PTR ds:0x76047101,ch
  415a70:	ins    BYTE PTR es:[edi],dx
  415a71:	jb     0x415a56
  415a73:	xchg   ch,cl
  415a75:	test   DWORD PTR [ebx-0x7cb6c00],0xfaeb10ff
  415a7f:	ss push ecx
  415a81:	mov    ebx,0xdc1d0116
  415a86:	xchg   DWORD PTR [ecx+0x76044b69],eax
  415a8c:	and    DWORD PTR [edx],0x35
  415a8f:	or     al,0xf
  415a91:	aam    0x87
  415a93:	sub    ebp,edx
  415a95:	adc    ecx,eax
  415a97:	cs mov esp,0xc3fd8a6e
  415a9d:	sbb    eax,esp
  415a9f:	jae    0x415a30
  415aa1:	jle    0x415ae0
  415aa3:	or     al,0x1f
  415aa5:	fdivr  st(7),st
  415aa7:	cmp    BYTE PTR [ecx+0xb],dl
  415aaa:	push   ss
  415aab:	fbld   TBYTE PTR [ebx-0x53aa0a75]
  415ab1:	xchg   BYTE PTR ds:0xd229400,ch
  415ab7:	clc    
  415ab8:	pop    ds
  415ab9:	xor    bh,BYTE PTR [ebx-0x3f]
  415abc:	ins    BYTE PTR es:[edi],dx
  415abd:	shr    BYTE PTR [edi-0x3],0x7b
  415ac1:	mov    al,0xff
  415ac3:	xchg   cl,bl
  415ac5:	lds    esi,FWORD PTR [ebx+esi*2+0x58]
  415ac9:	jb     0x415a64
  415acb:	cs and eax,0x4631019a
  415ad1:	and    cl,BYTE PTR [esi+esi*2-0x2c]
  415ad5:	cdq    
  415ad6:	jl     0x415aa0
  415ad8:	(bad)  
  415ad9:	out    dx,eax
  415ada:	test   BYTE PTR [edx+0x0],0x53
  415ade:	mov    cl,0x2e
  415ae0:	cld    
  415ae1:	in     eax,0x8a
  415ae3:	ds inc ebx
  415ae5:	xor    BYTE PTR [edx+0x7c],ch
  415ae8:	mov    ah,0x67
  415aeb:	xor    ebp,DWORD PTR [eax+0x4e]
  415aee:	call   0x4ccd:0x12c0001
  415af5:	xchg   esp,eax
  415af6:	add    BYTE PTR [edx-0x41],ch
  415af9:	lods   al,BYTE PTR ds:[esi]
  415afa:	sub    edi,DWORD PTR [edi-0x317c9442]
  415b00:	mov    BYTE PTR [edi+0x4b46cf84],al
  415b06:	cmp    DWORD PTR [esi+0x1f4577c],0x3f
  415b0d:	mov    edi,?
  415b0f:	test   eax,0x90885704
  415b14:	aas    
  415b15:	rol    DWORD PTR [ebx-0x6ae2d162],1
  415b1b:	push   0xe6fe5497
  415b20:	add    esp,DWORD PTR [edx+0x2b]
  415b23:	ldmxcsr DWORD PTR [eax+eax*1+0x43941de7]
  415b2b:	iret   
  415b2c:	push   eax
  415b2d:	push   ebp
  415b2e:	add    BYTE PTR [esi],dl
  415b30:	mov    DWORD PTR [edi-0x6bbc0334],eax
  415b36:	jg     0x415b5b
  415b38:	idiv   ebp
  415b3a:	(bad)  
  415b3b:	mov    esi,0xe73f4979
  415b40:	sbb    eax,DWORD PTR [eax]
  415b42:	ret    
  415b43:	loope  0x415b93
  415b45:	cmc    
  415b46:	jnp    0x415b92
  415b48:	lds    ecx,FWORD PTR [eax-0x3a838a97]
  415b4e:	pop    edi
  415b4f:	sub    DWORD PTR [esi],0xffffff9b
  415b52:	sahf   
  415b53:	arpl   di,sp
  415b55:	add    edx,DWORD PTR [edi-0x6bfc1752]
  415b5b:	push   ss
  415b5c:	sti    
  415b5d:	xor    ebp,DWORD PTR [esi+0x40e5c00]
  415b63:	jg     0x415b94
  415b65:	mov    BYTE PTR [esi+ebx*2],bh
  415b68:	pop    edx
  415b69:	mov    BYTE PTR [ecx],ch
  415b6b:	jge    0x415b6d
  415b6d:	sub    DWORD PTR [ebp-0x108b751f],ecx
  415b73:	inc    edi
  415b74:	mov    ch,0xe9
  415b76:	xchg   edi,eax
  415b77:	add    al,ch
  415b79:	gs pusha 
  415b7b:	add    BYTE PTR [eax],al
  415b7d:	fs push ebp
  415b7f:	push   eax
  415b80:	push   eax
  415b81:	bound  edi,QWORD PTR [edx]
  415b83:	xor    BYTE PTR [ebp-0x2f],dl
  415b86:	dec    ebx
  415b87:	xor    edi,edi
  415b89:	call   0x5c4f1ba2
  415b8e:	fdivr  DWORD PTR [ebx-0x40]
  415b91:	xor    al,0xd8
  415b93:	iret   
  415b94:	mov    edi,0xb4e8370f
  415b99:	sub    dl,BYTE PTR [eax-0x667848db]
  415b9f:	add    BYTE PTR [eax],al
  415ba1:	pop    esp
  415ba2:	adc    eax,0x86fbbe
  415ba7:	sbb    esp,DWORD PTR [edx]
  415ba9:	(bad)  
  415baa:	jmp    0xfc889c46
  415baf:	adc    BYTE PTR [eax-0x1],dl
  415bb2:	lahf   
  415bb3:	xlat   BYTE PTR ds:[ebx]
  415bb4:	js     0x415bbc
  415bb6:	ins    BYTE PTR es:[edi],dx
  415bb7:	pop    eax
  415bb8:	or     eax,0x412fb907
  415bbd:	mov    ch,al
  415bbf:	xchg   edi,eax
  415bc0:	jg     0x415be8
  415bc2:	jmp    0x817cdd1d
  415bc7:	push   ebp
  415bc8:	inc    eax
  415bc9:	add    cl,ch
  415bcb:	mov    ecx,0x3077310d
  415bd0:	mov    esi,0x83a9e941
  415bd5:	adc    edx,DWORD PTR ds:0x68ffc246
  415bdb:	pop    ebp
  415bdc:	dec    edx
  415bdd:	ret    
  415bde:	stos   BYTE PTR es:[edi],al
  415bdf:	xchg   edi,eax
  415be0:	add    BYTE PTR [ebx-0xa],dh
  415be3:	pop    ds
  415be4:	sar    ah,1
  415be6:	add    BYTE PTR [edx-0x5e3f7b87],bl
  415bec:	mov    eax,DWORD PTR [eax+0x3fbf6925]
  415bf2:	add    BYTE PTR ds:0x40b80144,ch
  415bf8:	aas    
  415bf9:	add    BYTE PTR [ecx],al
  415bfb:	ret    
  415bfc:	jns    0x415c0f
  415bfe:	lock (bad) 
  415c00:	cmp    eax,0x325b6800
  415c05:	aas    
  415c06:	add    BYTE PTR [edi-0x4],al
  415c09:	addr16 pop eax
  415c0b:	add    BYTE PTR [ecx],bl
  415c0d:	aas    
  415c0e:	add    bh,bh
  415c10:	rcl    ch,0xc
  415c13:	inc    eax
  415c14:	in     eax,dx
  415c15:	push   es
  415c16:	lock test DWORD PTR [ebx],esi
  415c19:	repnz push ss
  415c1b:	push   0x2a
  415c1d:	aam    0xfa
  415c1f:	adc    eax,0x3d8ebd
  415c24:	xor    BYTE PTR [ebp+0x7dd81f74],bh
  415c2a:	add    BYTE PTR [eax],al
  415c2c:	mov    ebp,0x2a5617f1
  415c31:	nop
  415c32:	popf   
  415c33:	adc    ch,BYTE PTR [ebp-0x4]
  415c36:	rcr    BYTE PTR cs:[ebx-0x80],0xc0
  415c3b:	je     0x415cb8
  415c3d:	push   es
  415c3e:	dec    esp
  415c3f:	and    al,0x71
  415c41:	add    al,0xfd
  415c43:	scas   eax,DWORD PTR es:[edi]
  415c44:	ins    BYTE PTR es:[edi],dx
  415c45:	pushw  es
  415c47:	mov    eax,ebx
  415c49:	jmpw   0x197f
  415c4d:	mov    edi,0x6000004
  415c52:	in     al,dx
  415c53:	sbb    DWORD PTR [ecx-0x4ac28273],0xffffffc0
  415c5a:	aas    
  415c5b:	add    BYTE PTR ds:0x947552d3,bh
  415c61:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415c62:	inc    ebx
  415c63:	fcom   DWORD PTR [ecx+0x56]
  415c66:	add    DWORD PTR [esi+0x33],edx
  415c69:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415c6a:	xchg   ebp,eax
  415c6b:	adc    dl,ah
  415c6d:	xchg   edi,eax
  415c6e:	cmp    DWORD PTR [ebx],0x41d3dc00
  415c74:	add    BYTE PTR [esp+ecx*1-0x66c91812],dl
  415c7b:	cmp    ebp,0x10
  415c7e:	push   edi
  415c7f:	adc    BYTE PTR [esi],cl
  415c81:	pop    ss
  415c82:	hlt    
  415c83:	inc    edi
  415c84:	ret    
  415c85:	push   edi
  415c86:	xchg   edi,eax
  415c87:	add    esi,eax
  415c89:	cdq    
  415c8a:	jg     0x415c49
  415c8c:	inc    ecx
  415c8d:	xchg   esp,eax
  415c8e:	cwde   
  415c8f:	sub    edi,ebp
  415c91:	mov    DWORD PTR [edi-0xe],eax
  415c94:	aas    
  415c95:	xchg   esp,eax
  415c96:	cmp    eax,0xe4215802
  415c9b:	xchg   ebx,eax
  415c9c:	call   0xfdc44768
  415ca1:	paddq  mm7,mm3
  415ca4:	add    ah,BYTE PTR [edi+edx*4]
  415ca7:	add    DWORD PTR [eax],eax
  415ca9:	cmp    al,0x95
  415cab:	add    al,BYTE PTR [eax]
  415cad:	xchg   esp,eax
  415cae:	out    0x76,eax
  415cb0:	(bad)  
  415cb1:	lods   al,BYTE PTR ds:[esi]
  415cb2:	in     eax,dx
  415cb3:	or     al,0xfd
  415cb5:	fwait
  415cb6:	cld    
  415cb7:	dec    DWORD PTR [edx-0x76ce8a27]
  415cbd:	push   edx
  415cbe:	shl    BYTE PTR ds:0x74d78373,cl
  415cc4:	jnp    0x415d3e
  415cc6:	jecxz  0x415c85
  415cc8:	call   0xfdc61a47
  415ccd:	(bad)  
  415cce:	push   ebp
  415ccf:	test   BYTE PTR [ebx-0x7c],dh
  415cd2:	ss or  eax,0x555b00fc
  415cd8:	xor    eax,0xe700d416
  415cdd:	adc    BYTE PTR [eax+0xd],0x72
  415ce1:	mov    esi,0x849c042c
  415ce6:	cmp    eax,esp
  415ce8:	lods   al,BYTE PTR ds:[esi]
  415ce9:	mov    edx,0x2ee70d56
  415cee:	sbb    eax,0xd898686d
  415cf3:	add    al,0xe7
  415cf5:	add    edx,DWORD PTR [esi+edi*1]
  415cf8:	push   edi
  415cf9:	push   esp
  415cfa:	push   ebp
  415cfb:	add    al,ch
  415cfd:	xor    BYTE PTR [edx-0x29],ah
  415d00:	jno    0x415cad
  415d02:	mov    DWORD PTR [edi],eax
  415d04:	sbb    esp,eax
  415d06:	repz adc eax,0x8d9403e8
  415d0c:	jl     0x415cc1
  415d0e:	out    dx,eax
  415d0f:	jg     0x415ccf
  415d11:	fwait
  415d12:	push   ss
  415d13:	sahf   
  415d14:	out    0x3,eax
  415d16:	shufps xmm4,XMMWORD PTR [edx-0x110a2ecd],0x78
  415d1e:	rcl    al,cl
  415d20:	mov    ss,esp
  415d22:	sar    BYTE PTR [edi-0x6a],0x7e
  415d26:	(bad)  
  415d28:	mov    ebx,0x17445776
  415d2d:	sbb    al,0x8c
  415d2f:	mov    bh,0x2a
  415d31:	add    al,0x2c
  415d33:	add    edi,esp
  415d35:	add    edx,DWORD PTR [eax+eax*4]
  415d38:	aam    0xb
  415d3a:	add    BYTE PTR [ebp+0x6c8ce6c0],ah
  415d40:	sbb    ah,BYTE PTR [edi]
  415d42:	test   DWORD PTR [edx+edi*4+0x45],edx
  415d46:	add    dl,BYTE PTR [eax+eax*1+0x15ab562]
  415d4d:	out    0x42,eax
  415d4f:	fdivrp st(5),st
  415d51:	aas    
  415d52:	call   0x8197:0xe900004e
  415d59:	mov    ds:0xfd7d1b21,eax
  415d5e:	jmp    0x1fa1e125
  415d63:	sbb    BYTE PTR [ebp+0x50],bh
  415d66:	fs mov edx,0x180efc48
  415d6c:	push   0x97478d
  415d71:	mov    DWORD PTR [ebx+ebp*1-0x78],esi
  415d75:	shl    DWORD PTR [edx+ebx*4+0x48],1
  415d79:	cld    
  415d7a:	out    dx,al
  415d7b:	pop    ss
  415d7c:	push   0x90a7cb
  415d81:	jg     0x415d65
  415d83:	cwde   
  415d84:	dec    eax
  415d85:	add    cl,ch
  415d87:	std    
  415d88:	add    DWORD PTR [edx-0x16],ebp
  415d8b:	mul    BYTE PTR [edi+0x5b]
  415d8e:	cli    
  415d8f:	pop    eax
  415d90:	cmp    ecx,0xbf9386e5
  415d96:	inc    ebx
  415d97:	xchg   edx,eax
  415d98:	fimul  WORD PTR [eax+0x2a7ec2a7]
  415d9e:	test   al,0x0
  415da0:	cmp    BYTE PTR [eax],cl
  415da2:	add    al,ch
  415da4:	xchg   edi,eax
  415da5:	or     eax,0xf5d451b6
  415daa:	aas    
  415dab:	jmp    0xfc40daca
  415db0:	outs   dx,DWORD PTR ds:[esi]
  415db1:	mov    eax,DWORD PTR [ebx-0xf]
  415db4:	(bad)  
  415db5:	mov    DWORD PTR [ebx-0x282e457],eax
  415dbb:	sbb    DWORD PTR [ebx],esp
  415dbd:	inc    eax
  415dbe:	mov    esp,eax
  415dc0:	fwait
  415dc1:	test   DWORD PTR [ebx-0x283fcd7],esi
  415dc7:	inc    ecx
  415dc8:	fwait
  415dc9:	mov    ebx,0x7122e900
  415dce:	add    DWORD PTR [eax],0xffffffab
  415dd1:	ja     0x415ded
  415dd3:	mov    ecx,0x3d3
  415dd8:	lock xchg eax,edx
  415ddb:	std    
  415ddc:	add    BYTE PTR [ecx+0x423d00c6],0x46
  415de3:	jne    0x415e59
  415de5:	jmp    0x415e04
  415de7:	jmp    DWORD PTR [edx+0x51758781]
  415ded:	lea    ebx,[ecx+0x8]
  415df0:	xchg   edx,eax
  415df1:	ja     0x415df8
  415df3:	(bad)  
  415df4:	clc    
  415df5:	lds    edx,FWORD PTR [ebp+0x57]
  415df8:	std    
  415df9:	imul   edx,DWORD PTR ds:0xe8023eb7,0x3bd94
  415e03:	mov    al,BYTE PTR [eax]
  415e05:	aad    0x3e
  415e07:	jno    0x415e15
  415e09:	pop    ecx
  415e0a:	or     dl,BYTE PTR [esi-0x18]
  415e0d:	aas    
  415e0e:	pop    eax
  415e0f:	cld    
  415e10:	call   DWORD PTR [eax+esi*8]
  415e13:	cld    
  415e14:	(bad)  
  415e15:	in     eax,dx
  415e16:	nop
  415e17:	adc    eax,0xc6fb8320
  415e1d:	mov    ebp,0xa8494001
  415e22:	sti    
  415e23:	mov    ebx,eax
  415e25:	and    BYTE PTR [edx+0x58],0xc9
  415e29:	out    dx,eax
  415e2a:	or     DWORD PTR [eax],eax
  415e2c:	push   ebp
  415e2d:	ss in  eax,dx
  415e2f:	jle    0x415e15
  415e31:	adc    eax,0xb94cec85
  415e36:	add    DWORD PTR [eax],eax
  415e38:	push   ebx
  415e39:	jnp    0x415e94
  415e3b:	mov    dh,BYTE PTR [ecx+ebx*2+0x7dfffe61]
  415e42:	jmp    0x1aefa9c
  415e47:	mov    DWORD PTR [esp+edx*4+0xb],eax
  415e4b:	and    BYTE PTR [eax+0x73],dl
  415e4e:	push   esp
  415e4f:	or     DWORD PTR [ecx+0x2699752],ecx
  415e55:	bound  edi,QWORD PTR [esi]
  415e57:	or     BYTE PTR [ebx+0x4f140bc8],0xbe
  415e5e:	push   0xdfe7d936
  415e63:	add    eax,DWORD PTR [eax]
  415e65:	xchg   esp,eax
  415e66:	out    0xe8,eax
  415e68:	pop    ss
  415e69:	add    BYTE PTR [ebx],al
  415e6b:	stos   BYTE PTR es:[edi],al
  415e6c:	add    DWORD PTR [eax+0x1d],edx
  415e6f:	mov    ds:0xa31d2425,eax
  415e74:	and    eax,0xf1542320
  415e79:	paddq  mm4,QWORD PTR [edi-0x78]
  415e7d:	ror    BYTE PTR [ecx-0x4fbb6faf],0x73
  415e84:	ror    DWORD PTR [edx+0x50200358],1
  415e8a:	or     DWORD PTR [ebx],ebp
  415e8c:	sub    BYTE PTR [esp+eax*2],ah
  415e8f:	fdiv   st(7),st
  415e91:	and    ecx,DWORD PTR [eax-0x6ac025b1]
  415e97:	ins    BYTE PTR es:[di],dx
  415e99:	add    DWORD PTR [edi],edx
  415e9b:	lahf   
  415e9c:	jg     0x415e25
  415e9e:	pop    eax
  415e9f:	add    ebx,DWORD PTR [eax]
  415ea1:	or     esp,0x11840fa5
  415ea7:	add    DWORD PTR [bx+si],eax
  415eaa:	jg     0x415e56
  415eac:	je     0x42c5cb
  415eb2:	pop    ss
  415eb3:	add    ebp,DWORD PTR [eax]
  415eb5:	sbb    BYTE PTR [ebp-0x64afcd8c],dl
  415ebb:	jp     0x415ee2
  415ebd:	adc    BYTE PTR [ecx],ah
  415ebf:	push   cs
  415ec0:	sub    BYTE PTR [ecx+ebx*1],bl
  415ec3:	add    DWORD PTR [ebx-0x190023d8],ebx
  415ec9:	add    edx,DWORD PTR [ecx-0x7b]
  415ecc:	or     ebx,esp
  415ece:	add    BYTE PTR [eax+eax*1+0x9405e7],dl
  415ed5:	out    0x6b,eax
  415ed7:	mov    edi,DWORD PTR [ebx-0xaa6fc19]
  415edd:	or     dl,BYTE PTR [eax]
  415edf:	sbb    eax,0xe7733f71
  415ee4:	jnp    0x415f0c
  415ee6:	mov    ecx,eax
  415ee8:	and    al,0xeb
  415eea:	xor    al,0x5d
  415eec:	mov    gs,WORD PTR [ebx+0x28]
  415eef:	and    al,0x2
  415ef1:	out    0x3,eax
  415ef3:	les    ecx,FWORD PTR [ebp-0x763fd855]
  415ef9:	fwait
  415efa:	daa    
  415efb:	mov    eax,0x94beed68
  415f00:	add    BYTE PTR [edx-0x8],ah
  415f03:	mov    bh,0x14
  415f05:	and    dh,BYTE PTR [ebp-0x78]
  415f08:	or     esi,DWORD PTR [edx-0x31]
  415f0b:	mov    bh,0xc
  415f0d:	bound  ebx,QWORD PTR [ecx+0x1f]
  415f10:	lds    eax,FWORD PTR [edx]
  415f12:	fdivr  st(3),st
  415f14:	xor    al,BYTE PTR [ebp+0x24879403]
  415f1a:	adc    BYTE PTR [ebp+0x1b063b3f],bl
  415f20:	xor    DWORD PTR [eax+0x71],esi
  415f23:	retf   
  415f24:	jnp    0x415f0d
  415f26:	mov    ds,WORD PTR [eax]
  415f28:	and    eax,0x940307
  415f2d:	pop    edi
  415f2e:	sbb    edx,DWORD PTR [ecx+ecx*8+0x13]
  415f32:	jle    0x415f34
  415f34:	sbb    eax,0xad0fcac5
  415f39:	adc    al,0x40
  415f3b:	jno    0x415ed8
  415f3d:	jnp    0x415f3f
  415f3f:	jmp    0x965e366
  415f44:	xchg   edi,eax
  415f45:	add    BYTE PTR [eax],al
  415f47:	jno    0x415ee8
  415f49:	rol    BYTE PTR [esi-0x2c],0xf9
  415f4d:	xor    eax,eax
  415f4f:	mov    dh,0x75
  415f51:	fmul   DWORD PTR [eax+0x8414a44]
  415f57:	jmp    0x992de7a6
  415f5c:	cmp    eax,0x67354386
  415f61:	jmp    0x7b1aa064
  415f66:	std    
  415f67:	sbb    al,BYTE PTR es:[eax+0x74]
  415f6b:	sti    
  415f6c:	adc    bh,dh
  415f6e:	sti    
  415f6f:	in     eax,dx
  415f70:	sub    al,BYTE PTR [edi]
  415f72:	mov    ecx,ebx
  415f74:	inc    edi
  415f75:	arpl   WORD PTR [ebp-0x64],bx
  415f78:	adc    al,0x7d
  415f7a:	mov    DWORD PTR [edi],esp
  415f7c:	test   al,0x8
  415f7e:	push   eax
  415f7f:	add    edx,ebp
  415f81:	int    0xfc
  415f83:	out    dx,al
  415f84:	mov    DWORD PTR [eax+0x5e],0x88cf57b0
  415f8b:	int    0xe1
  415f8d:	aam    0x54
  415f8f:	fnsave fs:[esi+0x50]
  415f93:	inc    ebx
  415f94:	xchg   esi,eax
  415f95:	push   0x6300c798
  415f9a:	jge    0x415f25
  415f9c:	mov    ecx,0xd674720d
  415fa1:	push   ds
  415fa2:	mov    edi,0xef9181fb
  415fa7:	pop    ss
  415fa8:	jb     0x415f8f
  415faa:	add    dl,BYTE PTR [esi+0x13]
  415fad:	popf   
  415fae:	dec    ebx
  415faf:	call   0x8b3f9fea
  415fb4:	mov    gs,WORD PTR [ebx]
  415fb6:	shl    bh,cl
  415fb8:	add    BYTE PTR [ebx+0x5dfffc57],bh
  415fbe:	add    eax,0xecb308e7
  415fc3:	adc    edx,DWORD PTR [ebp-0x6]
  415fc6:	stc    
  415fc7:	xor    eax,eax
  415fc9:	pop    edx
  415fca:	pop    esp
  415fcb:	mov    dl,0x71
  415fce:	(bad)  
  415fcf:	push   eax
  415fd0:	mov    ebx,ecx
  415fd2:	jge    0x415fb8
  415fd4:	clc    
  415fd5:	cld    
  415fd6:	lock mov eax,DWORD PTR ds:0xff52fe6d
  415fdd:	and    BYTE PTR [esi],al
  415fdf:	call   0xfb3aea8b
  415fe4:	test   BYTE PTR [ebp+0x77],bh
  415fe7:	xor    BYTE PTR [ebp-0x17f7de07],cl
  415fed:	pop    ecx
  415fee:	imul   edi,esp,0x54fb6ff
  415ff4:	lea    esi,[ecx+0x2d03e828]
  415ffa:	dec    BYTE PTR [edi+0x6a]
  415ffd:	add    BYTE PTR [eax+0x5b],al
  416000:	mov    bh,al
  416002:	xchg   ebp,eax
  416003:	lods   eax,DWORD PTR ds:[esi]
  416004:	mov    edi,?
  416006:	cli    
  416007:	test   DWORD PTR gs:0x4488fded,eax
  41600e:	xchg   ecx,eax
  41600f:	adc    BYTE PTR [edx+0x0],ch
  416012:	lods   eax,DWORD PTR ds:[esi]
  416013:	stc    
  416014:	adc    BYTE PTR [ebx+eiz*8],dh
  416017:	cmp    eax,0xa3182fd
  41601c:	pop    ebx
  41601d:	mov    edx,eax
  41601f:	pusha  
  416020:	mov    edi,0x8858bd04
  416025:	in     al,dx
  416026:	lods   al,BYTE PTR ds:[esi]
  416027:	push   ebx
  416028:	push   ebx
  416029:	push   0xffffffc9
  41602b:	cli    
  41602c:	jo     0x416036
  41602e:	and    eax,0x94ff519c
  416033:	xchg   edx,eax
  416034:	nop
  416035:	inc    ebx
  416036:	test   al,0x37
  416038:	jmp    0x9bfd:0x7ffaac62
  41603f:	out    dx,al
  416040:	jo     0x415fc5
  416042:	mov    bh,BYTE PTR [ebp+eax*1+0x32]
  416046:	push   esp
  416047:	jle    0x41606d
  416049:	mov    ecx,ebx
  41604b:	jecxz  0x415fce
  41604d:	clc    
  41604e:	mov    BYTE PTR [ecx+0x2],dl
  416051:	push   0xffffffa0
  416053:	scas   eax,DWORD PTR es:[edi]
  416054:	rcl    DWORD PTR [ebp+0x6b],1
  416057:	push   esp
  416058:	or     ebp,edi
  41605a:	mov    DWORD PTR [edi+0x13],esi
  41605d:	inc    eax
  41605e:	xchg   esp,eax
  41605f:	out    0x44,al
  416061:	or     al,0x0
  416063:	jmp    0xb12a:0x4b53f7bf
  41606a:	jmp    ecx
  41606c:	xor    BYTE PTR [edi],bh
  41606e:	add    al,0x94
  416070:	mov    ah,0x8a
  416072:	in     al,dx
  416073:	lds    edi,FWORD PTR [eax-0x5be6ab2d]
  416079:	jge    0x4160cb
  41607b:	lods   al,BYTE PTR ds:[esi]
  41607c:	das    
  41607d:	add    DWORD PTR [eax],eax
  41607f:	xchg   esp,eax
  416080:	imul   edi,ebx
  416083:	adc    esi,DWORD PTR [edx-0x79]
  416086:	lock adc DWORD PTR [ecx-0xa],esi
  41608a:	sbb    ecx,DWORD PTR [edi]
  41608c:	sub    al,0x80
  41608e:	push   0xffffff95
  416090:	int    0x3
  416092:	mov    edx,esp
  416094:	ds add eax,0x88679592
  41609a:	clc    
  41609b:	sbb    DWORD PTR [edx-0xb],eax
  41609e:	add    eax,0x54394f42
  4160a3:	shl    DWORD PTR [ecx+0x96bc587],cl
  4160a9:	dec    ecx
  4160aa:	shr    DWORD PTR [ecx+0x0],0x72
  4160ae:	jo     0x4160c5
  4160b0:	sti    
  4160b1:	out    dx,al
  4160b2:	add    eax,DWORD PTR [ebp-0xd]
  4160b5:	imul   cl
  4160b7:	stos   DWORD PTR es:[edi],eax
  4160b8:	loopne 0x416058
  4160ba:	add    al,0x94
  4160bc:	add    BYTE PTR [edx+0x7b35ac43],bh
  4160c2:	jge    0x416055
  4160c4:	ins    BYTE PTR es:[edi],dx
  4160c5:	mov    eax,0x8d7008e
  4160ca:	pop    ss
  4160cb:	jmp    0x907:0x7ce7ea83
  4160d2:	dec    edi
  4160d3:	xchg   edx,eax
  4160d4:	and    DWORD PTR [edx],eax
  4160d6:	out    0x86,eax
  4160d8:	push   esp
  4160d9:	out    dx,al
  4160da:	loop   0x41610d
  4160dc:	push   esp
  4160dd:	ins    BYTE PTR es:[edi],dx
  4160de:	loopne 0x41615c
  4160e0:	out    0x8,eax
  4160e2:	iret   
  4160e3:	dec    ebx
  4160e4:	xchg   esp,eax
  4160e5:	add    bh,ah
  4160e7:	imul   esp,DWORD PTR [ebp+0x417d2e74],0xffffffee
  4160ee:	out    dx,al
  4160ef:	mov    DWORD PTR [ecx+ebp*2+0x11],ebx
  4160f3:	shl    DWORD PTR [eax],1
  4160f5:	js     0x416158
  4160f7:	inc    ecx
  4160f8:	int    0xd5
  4160fa:	sub    BYTE PTR [eax],cl
  4160fc:	xchg   esp,eax
  4160fd:	or     DWORD PTR [edi],0x4
  416100:	mov    al,ds:0x94f7af0a
  416105:	xor    esp,DWORD PTR [edi]
  416107:	inc    ecx
  416108:	jle    0x41613d
  41610a:	pop    DWORD PTR [eax+0x6e]
  41610d:	xor    bh,BYTE PTR [edi]
  41610f:	inc    ecx
  416110:	addr16 mov ecx,ebx
  416113:	add    BYTE PTR [eax],0x15
  416116:	(bad)  
  416117:	(bad)  
  416118:	lahf   
  416119:	rcr    DWORD PTR [ecx],cl
  41611b:	pop    ecx
  41611c:	dec    edx
  41611d:	iret   
  41611e:	outs   dx,DWORD PTR ds:[esi]
  41611f:	(bad)  
  416121:	cmp    bh,bl
  416123:	or     al,0x18
  416125:	mov    esp,0x97e900
  41612a:	mov    esp,DWORD PTR [eax+eax*1]
  41612d:	adc    al,0xd1
  41612f:	out    0x53,eax
  416131:	cmp    eax,0x5765fd75
  416136:	add    eax,0x974384
  41613b:	add    BYTE PTR [edx-0x26],ah
  41613e:	jmp    edi
  416140:	inc    edx
  416141:	sbb    BYTE PTR [ebp-0x3],dh
  416144:	ins    BYTE PTR es:[edi],dx
  416145:	(bad)  
  416146:	dec    DWORD PTR [esi+0x19]
  416149:	pop    ds
  41614a:	ret    
  41614b:	test   DWORD PTR [ecx+0x66fd74ed],0x7207fb0c
  416155:	out    0xcd,eax
  416157:	mov    BYTE PTR [edi],ah
  416159:	dec    DWORD PTR [eax+0x7c97e901]
  41615f:	sar    BYTE PTR [ebp+ecx*4+0x64c3e7ce],0x74
  416167:	std    
  416168:	cli    
  416169:	shl    DWORD PTR [ecx],0xfd
  41616c:	cli    
  41616d:	xlat   BYTE PTR ds:[ebx]
  41616e:	mov    BYTE PTR [ebx+0x11],bl
  416171:	push   cs
  416172:	sti    
  416173:	jmp    0x4161e5
  416175:	sub    ah,BYTE PTR [edi-0x79]
  416178:	mov    ah,0xa3
  41617a:	cmp    ecx,esi
  41617c:	xchg   ebp,eax
  41617d:	xchg   BYTE PTR [eax],bh
  41617f:	push   ds
  416180:	jl     0x416113
  416182:	shl    BYTE PTR [edi],0x9f
  416185:	xchg   esi,eax
  416186:	in     al,dx
  416187:	add    BYTE PTR [edi+0x2a39717c],ch
  41618d:	add    BYTE PTR [esi],dh
  41618f:	std    
  416190:	pop    esp
  416191:	add    BYTE PTR [ebx+ecx*4+0x1280d17b],cl
  416198:	add    al,0xe9
  41619a:	xchg   edi,eax
  41619b:	jl     0x41615d
  41619d:	push   ebp
  41619e:	fdiv   DWORD PTR [ebx+0x73]
  4161a1:	add    BYTE PTR ds:0x12ec4187,bl
  4161a7:	jno    0x41619e
  4161a9:	call   0x3c5956
  4161ae:	aaa    
  4161af:	aam    0x88
  4161b1:	jne    0x4161d8
  4161b3:	in     al,0x13
  4161b5:	add    edi,DWORD PTR [ebp+0x1758902]
  4161bb:	in     al,0xf
  4161bd:	cli    
  4161be:	adc    bh,bl
  4161c0:	mov    ebx,eax
  4161c2:	push   es
  4161c3:	sub    bh,bl
  4161c5:	jne    0x416148
  4161c7:	push   edx
  4161c8:	cld    
  4161c9:	adc    eax,0x400d6d
  4161ce:	clc    
  4161cf:	mov    esp,0x4000de73
  4161d4:	in     eax,0xe8
  4161d6:	jmp    0x4161d5
  4161d8:	(bad)  
  4161d9:	inc    DWORD PTR [esi-0x29198f43]
  4161df:	stos   DWORD PTR es:[edi],eax
  4161e0:	mov    DWORD PTR [ebp-0x3b],esi
  4161e3:	in     al,0xe3
  4161e5:	add    bh,BYTE PTR ds:0x81758902
  4161eb:	in     al,0xdf
  4161ed:	stc    
  4161ee:	jb     0x4161e9
  4161f0:	xor    eax,eax
  4161f2:	push   edx
  4161f3:	pop    eax
  4161f4:	pop    eax
  4161f5:	leave  
  4161f6:	add    BYTE PTR [edi+0x4],bh
  4161f9:	add    BYTE PTR [ebp-0x4a],dl
  4161fc:	call   0x501fb34d
  416201:	push   esp
  416202:	(bad)  
  416203:	call   0x6aa9b201
  416208:	cld    
  416209:	(bad)  
  41620a:	call   DWORD PTR [ebp-0xd0003d6]
  416210:	xchg   al,dh
  416212:	(bad)  
  416213:	test   al,0xf9
  416215:	inc    DWORD PTR [ebx+ecx*8-0x6b74c69b]
  41621c:	sbb    al,0x7c
  41621e:	push   0x7c
  416220:	sbb    dl,BYTE PTR [esi-0x77]
  416223:	aad    0x1e
  416225:	jno    0x41621c
  416227:	sbb    DWORD PTR [edx+0x4c192bf0],ebx
  41622d:	xor    al,0x89
  41622f:	ret    0x7672
  416232:	jno    0x4162ab
  416234:	adc    DWORD PTR [eax],edx
  416236:	std    
  416237:	sub    DWORD PTR [edi-0x78],ebp
  41623a:	inc    ebp
  41623b:	nop
  41623c:	aaa    
  41623d:	jns    0x416252
  41623f:	pusha  
  416240:	ins    DWORD PTR es:[edi],dx
  416241:	sar    edi,0x16
  416244:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416245:	add    eax,0xc6b5483
  41624a:	adc    DWORD PTR [ebx+0x4f],0x8b06f93e
  416251:	outs   dx,BYTE PTR ds:[esi]
  416252:	add    al,0x52
  416254:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416255:	jp     0x416256
  416257:	leave  
  416258:	iret   
  416259:	mov    edx,DWORD PTR [edx+0x0]
  41625c:	imul   ecx,esi,0xffffff8a
  41625f:	inc    ebx
  416260:	arpl   WORD PTR [esi+0x294d58d7],sp
  416266:	std    
  416267:	(bad)  
  416268:	call   0xc9c2c75f
  41626d:	pop    edi
  41626e:	add    DWORD PTR [ecx-0x16],edx
  416271:	stos   DWORD PTR es:[edi],eax
  416272:	xor    BYTE PTR [ecx+0x76016bb9],al
  416278:	adc    DWORD PTR [esi],0xfffffff0
  41627b:	or     ebp,DWORD PTR [ebx]
  41627d:	xchg   esp,eax
  41627e:	or     eax,ebp
  416280:	inc    ebp
  416281:	mov    ecx,0x770ffd7a
  416286:	jge    0x41627e
  416288:	mov    DWORD PTR [ebx+0x33],ebx
  41628b:	sar    bh,0x3e
  41628e:	mov    es,WORD PTR [ebx-0x70]
  416291:	(bad)  
  416292:	jmp    0xe741f72e
  416297:	add    edi,esp
  416299:	jmp    0xce2adc7e
  41629e:	pusha  
  41629f:	pop    esp
  4162a0:	in     al,dx
  4162a1:	sar    BYTE PTR [eax],0x79
  4162a4:	(bad)  [ecx-0x155d9256]
  4162aa:	out    0xeb,al
  4162ac:	and    eax,DWORD PTR [eax]
  4162ae:	out    0x3,eax
  4162b0:	test   DWORD PTR [eax-0x41],eax
  4162b3:	aam    0xbd
  4162b5:	je     0x41625d
  4162b7:	fimul  DWORD PTR [ebx+edx*8-0x58]
  4162bb:	or     al,0x94
  4162bd:	retf   
  4162be:	popa   
  4162bf:	push   0x34cf5300
  4162c4:	xchg   DWORD PTR [edi+0x74],edx
  4162c7:	pop    ss
  4162c8:	in     al,dx
  4162c9:	sub    al,BYTE PTR [ecx]
  4162cb:	out    0x3,eax
  4162cd:	jl     0x4162c0
  4162cf:	jno    0x41634a
  4162d1:	or     DWORD PTR [eax-0x12ac8061],0x74d78d02
  4162db:	rcl    DWORD PTR [eax],1
  4162dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4162de:	dec    esi
  4162df:	mov    ch,0x70
  4162e1:	push   0x7e
  4162e3:	cmp    edi,ebp
  4162e5:	mov    DWORD PTR [ecx],edi
  4162e7:	mov    esp,0x7209c677
  4162ec:	iret   
  4162ed:	xchg   ebx,eax
  4162ee:	mov    ecx,ebp
  4162f0:	mov    WORD PTR [ebx],es
  4162f2:	push   0x6433d2df
  4162f7:	mov    eax,0x27303178
  4162fc:	ficom  DWORD PTR [edx+0x3f]
  4162ff:	jmp    0x416304
  416301:	sar    DWORD PTR [edi-0x75],cl
  416304:	pop    ds
  416305:	mov    WORD PTR [eax],es
  416307:	call   0xd47e:0xb4ec68d1
  41630e:	in     al,dx
  41630f:	(bad)  
  416310:	mov    edx,0x6215b3f0
  416315:	js     0x4162e4
  416317:	cld    
  416318:	pop    ebp
  416319:	mov    ah,0x18
  41631b:	call   0xfdb62541
  416320:	bound  esp,QWORD PTR [edi+0x7f]
  416323:	not    BYTE PTR [eax+eax*1-0x6c]
  416327:	cs rcl dl,0x74
  41632b:	retf   0x6067
  41632e:	xchg   edi,eax
  41632f:	add    BYTE PTR [eax],al
  416331:	bound  edx,QWORD PTR [eax+ebp*2-0x2e]
  416335:	mov    al,0x3c
  416337:	jne    0x41638f
  416339:	jae    0x41638a
  41633b:	push   0x752d38a9
  416340:	mov    ch,BYTE PTR [edx-0x1695fdd0]
  416346:	scas   eax,DWORD PTR es:[edi]
  416347:	mov    al,BYTE PTR [eax]
  416349:	jmp    0x920194e5
  41634e:	dec    edi
  41634f:	imul   edi,ebp,0x76
  416352:	pop    esp
  416353:	aad    0x58
  416355:	adc    dl,dl
  416357:	cld    
  416358:	(bad)  
  416359:	mov    ebx,0xb74f6420
  41635e:	inc    esp
  41635f:	xchg   BYTE PTR [ebx+0x55],al
  416362:	inc    edi
  416363:	fistp  DWORD PTR [ecx-0x17ff6817]
  416369:	push   ds
  41636a:	shl    DWORD PTR [ebp-0x3],1
  41636d:	jb     0x416336
  41636f:	jg     0x416367
  416371:	mov    ebp,0x2d438977
  416376:	(bad)  
  416377:	pop    eax
  416378:	(bad)  
  416379:	call   0x73139515
  41637e:	scas   al,BYTE PTR es:[edi]
  41637f:	ins    DWORD PTR es:[edi],dx
  416380:	cmc    
  416381:	ins    BYTE PTR es:[edi],dx
  416382:	leave  
  416383:	out    dx,eax
  416384:	or     eax,0x727752d0
  416389:	add    BYTE PTR [eax],al
  41638b:	add    al,0x84
  41638d:	dec    ecx
  41638e:	or     BYTE PTR [esi+edi*8+0x796c686],al
  416395:	push   esi
  416396:	call   0x3db1ba
  41639b:	mov    ?,WORD PTR [edx+ebx*2+0x3be245e]
  4163a2:	add    BYTE PTR [edi+edi*2-0x10adb84],bl
  4163a9:	dec    esi
  4163aa:	push   esi
  4163ab:	mov    dl,0x70
  4163ad:	ss test ebp,edi
  4163b0:	outs   dx,DWORD PTR ds:[esi]
  4163b1:	xor    ch,BYTE PTR [ecx-0x13]
  4163b4:	(bad)  
  4163b5:	cld    
  4163b6:	jmp    FWORD PTR [ebp-0x5a8077b]
  4163bc:	outs   dx,DWORD PTR ds:[esi]
  4163bd:	and    DWORD PTR [eax],ebx
  4163bf:	add    eax,0xaff4d83
  4163c4:	xchg   eax,esi
  4163c6:	test   DWORD PTR [ebx],eax
  4163c8:	jno    0x4163cb
  4163ca:	xor    bh,BYTE PTR ds:0xa55622e6
  4163d0:	xchg   esi,eax
  4163d1:	add    BYTE PTR [eax],al
  4163d3:	ins    DWORD PTR es:[edi],dx
  4163d4:	xchg   ebx,eax
  4163d6:	call   0x3c5917
  4163db:	xor    ecx,DWORD PTR [eax+0x4d67e8d8]
  4163e1:	cld    
  4163e2:	push   edi
  4163e4:	mov    ebp,0xfe570ee6
  4163e9:	addr16 call 0x7d00:0x32fffe3d
  4163f1:	in     al,0x12
  4163f3:	stc    
  4163f4:	mov    ch,cl
  4163f6:	pop    edx
  4163f7:	pop    esi
  4163f8:	es push ebp
  4163fa:	mov    edi,0x88513d04
  4163ff:	in     al,dx
  416400:	in     al,dx
  416401:	dec    esp
  416402:	push   ebx
  416403:	lea    edx,[esp+eiz*4-0x1653af8b]
  41640a:	add    eax,DWORD PTR [eax]
  41640c:	xchg   esp,eax
  41640d:	ucomiss xmm7,xmm2
  416410:	or     esi,DWORD PTR [ebx-0x76]
  416413:	enter  0x2119,0xf0
  416417:	sbb    ecx,DWORD PTR [edi]
  416419:	popf   
  41641a:	jne    0x416486
  41641c:	lods   al,BYTE PTR ds:[esi]
  41641d:	push   ss
  41641e:	push   edx
  41641f:	pop    esi
  416420:	jecxz  0x41646b
  416422:	adc    dl,0x69
  416425:	pop    ecx
  416426:	cmp    al,0x73
  416428:	fcom   st(5)
  41642a:	or     cl,BYTE PTR [ecx+0x28c6f69]
  416430:	pop    ds
  416431:	test   eax,0x3f65086a
  416436:	mov    al,0x50
  416438:	mov    ebx,0x52c032a2
  41643d:	mov    al,0x3f
  41643f:	add    al,0x94
  416441:	sub    al,0x89
  416443:	in     al,dx
  416444:	inc    ebp
  416445:	cmp    dh,cl
  416447:	mov    dl,BYTE PTR [ecx-0x7d]
  41644a:	shr    DWORD PTR [ecx-0x8],1
  41644d:	(bad)  
  41644e:	imul   esi,edi,0xffffff8b
  416451:	repnz mov eax,ecx
  416454:	add    BYTE PTR [ecx],bl
  416456:	mov    al,ds:0x1c0f1bed
  41645b:	js     0x4164c7
  41645d:	scas   al,BYTE PTR es:[edi]
  41645e:	push   ss
  41645f:	push   edx
  416460:	pop    esi
  416461:	arpl   cx,cx
  416463:	jg     0x416437
  416465:	jmp    0x58b4a0c3
  41646a:	push   ebp
  41646b:	or     al,0x89
  41646d:	jmp    0x1f43f0e1
  416472:	sub    BYTE PTR [edx+0x8],ch
  416475:	in     eax,0xbf
  416477:	out    dx,eax
  416478:	dec    edi
  416479:	cmp    esp,DWORD PTR [edx]
  41647b:	xor    al,al
  41647d:	rol    BYTE PTR [eax],cl
  41647f:	xor    BYTE PTR [ecx-0x70],al
  416482:	add    BYTE PTR [edx+ecx*4+0x7b0b7d30],dh
  416489:	retf   
  41648a:	jge    0x416418
  41648c:	or     edx,DWORD PTR [ebp+ecx*8+0x2e87ce9c]
  416493:	fs inc ebx
  416495:	mov    BYTE PTR [edx],ah
  416497:	add    BYTE PTR [ebx-0x42],0x85
  41649b:	out    dx,eax
  41649c:	int    0xf0
  41649e:	jmp    0x75dd:0xd02e6bee
  4164a5:	or     eax,0x676e6c70
  4164aa:	cld    
  4164ab:	sbb    BYTE PTR [ebp+edi*4+0x1e],al
  4164af:	sbb    eax,0xa68537ea
  4164b4:	ins    BYTE PTR es:[edi],dx
  4164b5:	imul   edi,DWORD PTR [eax-0x4a],0x86620075
  4164bc:	(bad)  
  4164bd:	ins    BYTE PTR es:[edi],dx
  4164be:	shl    BYTE PTR fs:[ebp-0x6dc2e18b],1
  4164c5:	or     DWORD PTR [esi],ebp
  4164c7:	add    BYTE PTR [ecx],al
  4164c9:	loopne 0x41652f
  4164cb:	inc    eax
  4164cc:	jg     0x416492
  4164ce:	mov    esi,DWORD PTR [eax-0x7a]
  4164d1:	aad    0xe9
  4164d3:	retf   
  4164d4:	jno    0x416535
  4164d6:	fild   WORD PTR [edx-0x15]
  4164d9:	add    esp,ebp
  4164db:	xor    edx,DWORD PTR [edx-0x110a6dc4]
  4164e1:	je     0x4164c5
  4164e3:	clc    
  4164e4:	dec    esi
  4164e5:	or     eax,esp
  4164e7:	outs   dx,DWORD PTR ds:[esi]
  4164e8:	push   esi
  4164e9:	mov    WORD PTR [edx+0x79],?
  4164ec:	lods   eax,DWORD PTR ds:[esi]
  4164ed:	call   FWORD PTR [edx]
  4164ef:	iret   
  4164f0:	out    dx,al
  4164f1:	mov    ch,dl
  4164f3:	cld    
  4164f4:	mov    eax,ds:0xfffcae40
  4164f9:	sar    BYTE PTR [edi-0x30],0x40
  4164fd:	jmp    0xe93f07c1
  416502:	xchg   edi,eax
  416503:	xor    edx,edx
  416505:	loop   0x4164d4
  416507:	hlt    
  416508:	cmp    BYTE PTR [edx+0x23],ch
  41650b:	or     BYTE PTR [edx],al
  41650d:	pop    edx
  41650f:	xchg   DWORD PTR [ebx+0x5],edx
  416512:	lds    eax,FWORD PTR [eax-0x79]
  416515:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416516:	arpl   WORD PTR [ecx],bp
  416518:	inc    ebx
  416519:	loope  0x41651d
  41651b:	and    al,0x38
  41651d:	aad    0x0
  41651f:	lahf   
  416520:	repz adc ah,BYTE PTR [ecx]
  416523:	les    eax,FWORD PTR [edi]
  416525:	call   DWORD PTR [ebx-0x67]
  416528:	add    eax,0x7c39ceb
  41652e:	fisub  WORD PTR [ebx]
  416530:	inc    ecx
  416531:	xor    DWORD PTR [esp+ecx*2],0xd7d9e96d
  416538:	pop    eax
  416539:	fsqrt  
  41653b:	push   edi
  41653c:	rol    al,0x62
  41653f:	shl    BYTE PTR [edi-0x7f],cl
  416542:	xor    al,0x2c
  416544:	ins    DWORD PTR es:[edi],dx
  416545:	xor    ch,BYTE PTR [ecx-0x17026cd1]
  41654b:	xchg   edi,eax
  41654c:	inc    edx
  41654d:	add    al,0xe9
  41654f:	les    edx,FWORD PTR [edx+0x37]
  416552:	sbb    eax,0xca7404b4
  416557:	or     al,0x2f
  416559:	or     BYTE PTR [edx-0x45e40b2b],dh
  41655f:	fisubr WORD PTR [eax]
  416561:	adc    ah,bl
  416563:	xchg   ebx,eax
  416564:	sub    BYTE PTR [eax-0x18],dl
  416567:	jae    0x416562
  416569:	adc    cl,BYTE PTR ds:[ebx+eiz*1+0x4]
  41656e:	aad    0x50
  416570:	das    
  416571:	jmp    0xc0724576
  416576:	jmp    0x4165b3
  416578:	inc    ebx
  416579:	call   0x5841b81
  41657e:	ret    0x339
  416581:	xchg   DWORD PTR [eax+0x0],ecx
  416584:	and    esi,ebp
  416586:	les    esi,FWORD PTR [ebp+0x25]
  416589:	js     0x4165d3
  41658b:	or     BYTE PTR [ebx+edi*1+0x77d6eb09],dh
  416592:	push   eax
  416593:	or     dh,dl
  416595:	mov    eax,0x782b2071
  41659a:	jo     0x4165a0
  41659c:	out    dx,al
  41659d:	lock ss into 
  4165a0:	and    esi,DWORD PTR [eax+0x12]
  4165a3:	mov    ch,ah
  4165a5:	inc    ebx
  4165a6:	xchg   BYTE PTR [eax-0xf],cl
  4165a9:	xchg   dl,dl
  4165ab:	jne    0x416568
  4165ad:	sbb    ecx,DWORD PTR ds:0x8643b675
  4165b3:	dec    eax
  4165b4:	shl    DWORD PTR ds:0x642ec3c0,0x9
  4165bb:	add    BYTE PTR [esi],dh
  4165bd:	inc    esp
  4165be:	or     ebx,eax
  4165c0:	cmp    eax,0xba740033
  4165c5:	xor    al,0xc0
  4165c7:	jmp    0x4169f2
  4165cc:	pop    esi
  4165cd:	repz jae 0x4165f4
  4165d0:	jne    0x4165c5
  4165d2:	adc    BYTE PTR [eax+0x6f],bh
  4165d5:	inc    edx
  4165d6:	std    
  4165d7:	mov    dh,BYTE PTR ds:0x697fd778
  4165dd:	xor    al,0xc0
  4165df:	jmp    0x416649
  4165e1:	dec    eax
  4165e2:	mov    dh,BYTE PTR [edi+0x65]
  4165e5:	xchg   DWORD PTR [esi],edi
  4165e7:	add    BYTE PTR [eax],al
  4165e9:	dec    eax
  4165ea:	daa    
  4165eb:	mov    DWORD PTR [ebx-0x6c],eax
  4165ee:	pop    ecx
  4165ef:	shl    edi,1
  4165f1:	aaa    
  4165f2:	mov    ?,WORD PTR [edx-0x3]
  4165f5:	sbb    eax,0xc8c0885e
  4165fa:	add    edx,ebp
  4165fc:	cld    
  4165fd:	sar    bl,0x13
  416600:	push   eax
  416601:	xor    edx,DWORD PTR [ebp+0x31]
  416604:	push   ss
  416605:	aam    0x57
  416607:	xchg   ah,al
  416609:	nop
  41660a:	lock rol BYTE PTR [ebx],1
  41660d:	das    
  41660e:	inc    esi
  41660f:	jle    0x416656
  416611:	cwde   
  416612:	int3   
  416613:	mov    edi,0xd0f9517
  416618:	dec    esi
  416619:	add    ebp,DWORD PTR [edi-0x7b]
  41661c:	rol    BYTE PTR [ecx-0x3fcca5],0xb3
  416623:	jle    0x416633
  416625:	jmp    0x41665d
  416627:	or     BYTE PTR [ecx],al
  416629:	push   ebx
  41662a:	arpl   si,dx
  41662c:	cld    
  41662d:	pusha  
  41662e:	sti    
  41662f:	adc    ecx,DWORD PTR [edi-0x2d]
  416632:	je     0x416665
  416634:	push   ss
  416635:	push   esp
  416636:	push   edi
  416637:	xchg   ah,al
  416639:	nop
  41663a:	pop    eax
  41663b:	rol    BYTE PTR [ebx],cl
  41663d:	nop    DWORD PTR [eax]
  416640:	mov    DWORD PTR [edx-0x6bf7fa5b],esp
  416646:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416647:	retf   0xf03
  41664a:	daa    
  41664b:	or     BYTE PTR [ecx+0x59d8a00],cl
  416651:	or     BYTE PTR [esi+edi*2+0x584403ca],dl
  416658:	iret   
  416659:	pop    eax
  41665a:	push   esi
  41665b:	arpl   WORD PTR [ecx],ax
  41665d:	push   ebx
  41665e:	jae    0x73d5a3e5
  416664:	add    eax,0x52005432
  416669:	in     al,0xc9
  41666b:	ins    DWORD PTR es:[edi],dx
  41666c:	aam    0xfb
  41666e:	or     al,0x3d
  416670:	aas    
  416671:	arpl   WORD PTR [edx+0x6d],dx
  416674:	dec    esi
  416675:	jle    0x4166bb
  416677:	ja     0x416635
  416679:	sti    
  41667a:	push   ss
  41667b:	jbe    0x416631
  41667d:	pop    es
  41667e:	xchg   BYTE PTR [eax+0x42],al
  416681:	mov    ebx,0x182dd6c4
  416686:	lods   al,BYTE PTR ds:[esi]
  416687:	adc    ah,BYTE PTR [edi-0x1d42f2fd]
  41668d:	cmp    BYTE PTR [edi+edi*8+0x19c50763],0x1f
  416695:	add    BYTE PTR [ecx+0x5301e9f8],0xd0
  41669c:	std    
  41669d:	not    DWORD PTR [ebx-0x75cc2393]
  4166a3:	shl    dh,0x1c
  4166a6:	dec    ecx
  4166a7:	add    al,0x72
  4166a9:	rcl    DWORD PTR [edi+0x3d00a381],0x81
  4166b0:	rol    BYTE PTR [ebx],1
  4166b2:	add    BYTE PTR [edi-0x3],al
  4166b5:	int    0x3a
  4166b7:	mov    esp,0xc171352c
  4166bc:	add    BYTE PTR ds:0xeabcb904,0x5c
  4166c3:	xchg   edi,eax
  4166c4:	pop    eax
  4166c5:	aaa    
  4166c6:	mov    edi,0x3576ca8
  4166cb:	inc    edx
  4166cc:	retf   
  4166cd:	test   al,0x8
  4166cf:	xchg   esp,eax
  4166d0:	shl    DWORD PTR [ecx+0x60],cl
  4166d3:	in     eax,0xd3
  4166d5:	popa   
  4166d6:	dec    edx
  4166d7:	jl     0x4166cc
  4166d9:	out    0x3,al
  4166db:	xchg   esp,eax
  4166dc:	pop    eax
  4166dd:	loopne 0x4166e6
  4166df:	xchg   esp,eax
  4166e0:	add    BYTE PTR [eax],al
  4166e2:	mov    edx,0x1a50d1e0
  4166e7:	in     eax,0xef
  4166e9:	pslld  mm0,0xd5
  4166ed:	cld    
  4166ee:	hlt    
  4166ef:	aas    
  4166f0:	cmovo  ebp,ecx
  4166f3:	ins    BYTE PTR es:[edi],dx
  4166f4:	add    DWORD PTR [esi],0x41
  4166f7:	xchg   edi,eax
  4166f8:	mov    edx,0xa6f46fc
  4166fd:	jae    0x4166e4
  4166ff:	add    DWORD PTR [eax-0x17],0x6b68e4a3
  416706:	test   eax,0xf9434597
  41670b:	fwait
  41670c:	add    BYTE PTR [eax],al
  41670e:	jmp    0xaecc674c
  416713:	fwait
  416714:	sar    ah,1
  416716:	(bad)  
  416717:	add    BYTE PTR [edx+esi*1+0xf83dcfd],al
  41671e:	inc    eax
  41671f:	jmp    0xf649ad34
  416724:	xor    bh,ah
  416726:	jb     0x416729
  416728:	rcl    eax,0x69
  41672b:	jmp    0x6d94:0x54fcd0c8
  416732:	jae    0x416715
  416734:	inc    esp
  416735:	xor    bh,ch
  416737:	hlt    
  416738:	mov    edi,0x3ee9400e
  41673d:	ret    0x203
  416740:	push   ecx
  416741:	out    dx,eax
  416742:	push   es
  416743:	bound  ebx,QWORD PTR [ebp+0x58]
  416746:	or     ch,cl
  416748:	xchg   edi,eax
  416749:	add    cl,ch
  41674b:	pop    ebp
  41674c:	out    0x6b,eax
  41674e:	pop    esi
  41674f:	inc    edx
  416750:	retf   
  416751:	inc    ecx
  416752:	or     al,0xe9
  416754:	ins    DWORD PTR es:[edi],dx
  416755:	aam    0x88
  416757:	cdq    
  416758:	out    dx,eax
  416759:	and    DWORD PTR [eax],eax
  41675b:	add    BYTE PTR [ebp-0x1],ch
  41675e:	xchg   BYTE PTR [esi+0x71],al
  416761:	in     al,dx
  416762:	cmp    BYTE PTR [eax+edx*2+0x3f],bh
  416766:	std    
  416767:	test   BYTE PTR ds:0xfa500473,bh
  41676d:	enter  0x667e,0x71
  416771:	inc    DWORD PTR [esi+0x73bfc006]
  416777:	push   es
  416778:	or     eax,0x83d2f0
  41677d:	xchg   ebx,eax
  41677e:	add    al,0x5b
  416780:	pop    esi
  416781:	outs   dx,BYTE PTR ds:[esi]
  416782:	in     al,dx
  416783:	inc    ebp
  416784:	or     al,al
  416786:	mov    edi,0xf00d0b73
  41678b:	adc    BYTE PTR [eax+eiz*1+0x3f],bh
  41678f:	std    
  416790:	adc    BYTE PTR [ebx],0x67
  416793:	std    
  416794:	ret    0xec50
  416797:	jmp    0x41671a
  416799:	or     esi,esi
  41679b:	cld    
  41679c:	(bad)  
  41679d:	in     eax,dx
  41679e:	push   ebx
  41679f:	push   ebx
  4167a0:	mov    DWORD PTR [eax],esi
  4167a2:	fstp   TBYTE PTR [esi+0x65]
  4167a5:	jmp    0xecccbaad
  4167aa:	xchg   esi,eax
  4167ab:	add    bh,bh
  4167ad:	jmp    0x3646dc34
  4167b2:	add    al,0xfb
  4167b4:	dec    esp
  4167b5:	inc    ecx
  4167b6:	mov    WORD PTR [esp+esi*2],es
  4167b9:	mov    bl,0x83
  4167bb:	mov    DWORD PTR [eax],0xbf007ead
  4167c1:	icebp  
  4167c2:	jno    0x416801
  4167c4:	add    BYTE PTR ds:0x3a057105,dl
  4167ca:	shl    BYTE PTR [ebp+0x40],0xad
  4167ce:	(bad)  
  4167cf:	stos   BYTE PTR es:[edi],al
  4167d0:	(bad)  
  4167d1:	cli    
  4167d2:	fisubr DWORD PTR [ecx+0x0]
  4167d5:	xchg   esp,eax
  4167d6:	fdiv   QWORD PTR es:[edi+0x3c]
  4167da:	pop    ss
  4167db:	add    al,0x6a
  4167dd:	xchg   esp,eax
  4167de:	andps  xmm6,XMMWORD PTR [esi+0x0]
  4167e2:	aam    0x57
  4167e4:	outs   dx,BYTE PTR ds:[esi]
  4167e5:	jae    0x416783
  4167e7:	or     ch,BYTE PTR [ebp+0x76]
  4167ea:	nop
  4167eb:	ficom  DWORD PTR [esi]
  4167ed:	jo     0x416778
  4167ef:	xchg   edi,eax
  4167f0:	add    DWORD PTR [edi-0x3f77902e],eax
  4167f6:	mov    ds:0x940072db,eax
  4167fb:	push   edi
  4167fc:	xlat   BYTE PTR ds:[ebx]
  4167fd:	add    edx,DWORD PTR [ecx]
  4167ff:	mov    ch,0xf9
  416801:	dec    esi
  416802:	scas   al,BYTE PTR es:[edi]
  416803:	pushf  
  416804:	rol    esp,1
  416806:	fstp   DWORD PTR [edi+0x4]
  416809:	add    BYTE PTR [edi+edx*2+0x6d10136e],dl
  416810:	sar    edi,0x33
  416813:	push   ebp
  416814:	and    edi,edi
  416816:	adc    ebx,edi
  416818:	cs ins BYTE PTR es:[edi],dx
  41681a:	mov    eax,ds:0x94b90197
  41681f:	push   edi
  416820:	add    DWORD PTR [eax+0xaf863b8],esp
  416826:	cld    
  416827:	jl     0x41684c
  416829:	(bad)  
  41682a:	jmp    0x41680f
  41682c:	inc    ebx
  41682d:	or     eax,0xdd18
  416832:	xchg   esp,eax
  416833:	fadd   st(7),st
  416835:	pop    es
  416836:	fs in  al,0x87
  416839:	test   edx,0xdb506e3a
  41683f:	sbb    al,0xfc
  416841:	call   DWORD PTR [edi+edx*2-0x76ff02ff]
  416848:	jnp    0x41685c
  41684a:	inc    eax
  41684b:	xchg   esp,eax
  41684c:	in     al,0x40
  41684e:	jae    0x41687d
  416850:	add    BYTE PTR [edi+0x6e],bl
  416853:	xchg   esp,eax
  416854:	add    bh,ah
  416856:	sub    al,0xd7
  416858:	clc    
  416859:	in     eax,0xc1
  41685b:	(bad)  
  41685c:	clc    
  41685d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41685e:	xchg   DWORD PTR [edi+0x796e8567],edx
  416864:	add    BYTE PTR [eax+ecx*4+0x6b],ch
  416868:	push   0x76
  41686a:	outs   dx,BYTE PTR ds:[esi]
  41686b:	les    ebp,FWORD PTR [ecx-0x2c]
  41686e:	jmp    0x4167f5
  416870:	shl    dh,0x7c
  416873:	xlat   BYTE PTR ds:[ebx]
  416874:	clc    
  416875:	arpl   WORD PTR [ebx-0x38],ax
  416878:	mov    edi,0x831f14c0
  41687d:	aas    
  41687e:	ins    DWORD PTR es:[edi],dx
  41687f:	inc    ecx
  416880:	imul   ecx,edi,0xe6c0c24f
  416886:	shl    DWORD PTR [eax],cl
  416888:	adc    esi,edi
  41688a:	adc    eax,0xc86200d4
  41688f:	fwait
  416890:	jge    0x4168bd
  416892:	push   DWORD PTR [ebx+0x13c39414]
  416898:	jl     0x416905
  41689a:	or     BYTE PTR [ebx],al
  41689c:	push   0xe
  41689e:	outs   dx,BYTE PTR ds:[esi]
  41689f:	fs imul ebx,esp,0xe6c08aff
  4168a6:	jp     0x4168ff
  4168a8:	clc    
  4168a9:	cdq    
  4168aa:	add    BYTE PTR [eax],0xd4
  4168ad:	or     al,0x97
  4168af:	adc    BYTE PTR [edi],0x58
  4168b2:	in     eax,0x6d
  4168b4:	fxch   st(7)
  4168b6:	(bad)  
  4168b8:	fwait
  4168b9:	imul   edi,DWORD PTR [esi-0x1893b07f],0x50cda5f6
  4168c3:	adc    DWORD PTR [eax+esi*2],ebp
  4168c6:	xor    eax,0x69b3c4
  4168cb:	aas    
  4168cc:	test   al,0x6b
  4168ce:	aad    0x6a
  4168d0:	xor    BYTE PTR [ecx+0x74],ch
  4168d3:	add    DWORD PTR [ebp+0x40],esp
  4168d6:	push   eax
  4168d7:	cmp    DWORD PTR [eax-0x48],ebp
  4168da:	cld    
  4168db:	pop    ds
  4168dc:	mov    BYTE PTR [ebp+0x13],ah
  4168df:	imul   ebp,DWORD PTR [ebx-0x17960040],0xede57467
  4168e9:	inc    eax
  4168ea:	jmp    0xfecf38dd
  4168ef:	outs   dx,BYTE PTR ds:[esi]
  4168f0:	icebp  
  4168f1:	xor    al,al
  4168f3:	(bad)  
  4168f4:	dec    ecx
  4168f5:	leave  
  4168f6:	(bad)  
  4168f7:	sub    ebx,DWORD PTR [eax+eax*1-0x484b9dad]
  4168fe:	dec    esi
  4168ff:	mov    edx,0x9ef07969
  416904:	adc    ch,BYTE PTR [edi+0x74]
  416907:	out    dx,eax
  416908:	dec    ebp
  416909:	add    BYTE PTR [edx-0x17],ch
  41690c:	inc    ecx
  41690d:	gs adc esi,ebp
  416910:	add    BYTE PTR [ecx-0x33960040],cl
  416916:	hlt    
  416917:	add    BYTE PTR [edi+edi*2-0x58164300],0x0
  41691f:	add    BYTE PTR [esi+0x649405f],dh
  416925:	imul   edi,DWORD PTR [ecx-0x28],0x83f55d64
  41692c:	gs nop
  41692e:	add    BYTE PTR [eax],al
  416930:	push   0xfffffff3
  416932:	sti    
  416933:	call   FWORD PTR [esi+eax*4-0x26]
  416937:	(bad)  
  416938:	(bad)  
  41693a:	sti    
  41693b:	cld    
  41693c:	cld    
  41693d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41693e:	adc    DWORD PTR [eax-0x17],eax
  416941:	jb     0x416945
  416943:	(bad)  
  416944:	jmp    FWORD PTR [ebp+0x40637103]
  41694a:	ds stc 
  41694c:	push   eax
  41694d:	ss ds add eax,0x6fd57e57
  416954:	or     BYTE PTR [esi+edx*2],ah
  416957:	stc    
  416958:	dec    DWORD PTR [eax+0x7d401193]
  41695e:	jle    0x416920
  416960:	je     0x416919
  416962:	jmp    0xc42a65a7
  416967:	jae    0x4169a2
  416969:	jl     0x4169a9
  41696b:	cmc    
  41696c:	and    DWORD PTR [eax-0x25],0x36d0cc9
  416973:	jae    0x4169ac
  416975:	add    al,ch
  416977:	in     eax,dx
  416978:	jae    0x416932
  41697a:	(bad)  
  41697b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41697c:	add    DWORD PTR [ebx],eax
  41697e:	jne    0x41694b
  416980:	ror    DWORD PTR [edx-0x2e],0xd4
  416984:	add    eax,0xfffffff9
  416987:	sbb    eax,0xe87175fb
  41698c:	add    eax,0x4efefb03
  416991:	push   eax
  416992:	jb     0x4169a2
  416994:	xor    BYTE PTR [esi],dl
  416996:	in     eax,dx
  416997:	add    al,BYTE PTR [edi-0x3b7f4ebb]
  41699d:	or     al,0xfc
  41699f:	cmp    al,0x1
  4169a1:	jmp    0x416a05
  4169a3:	push   eax
  4169a4:	in     eax,0x5f
  4169a6:	inc    esi
  4169a7:	aam    0xfa
  4169a9:	mov    al,0xfc
  4169ab:	(bad)  
  4169ac:	push   cs
  4169ad:	push   ebx
  4169ae:	xchg   ebp,eax
  4169af:	dec    esi
  4169b0:	dec    eax
  4169b1:	push   edx
  4169b3:	jl     0x4169ab
  4169b5:	je     0x4169a1
  4169b7:	fnstenv ds:0xfca787e8
  4169bd:	call   DWORD PTR [ebx+ecx*1+0x32625d44]
  4169c4:	cmp    eax,edx
  4169c6:	mov    WORD PTR [ecx-0x30],ds
  4169c9:	mov    al,al
  4169cb:	fst    DWORD PTR [edi+0x14]
  4169ce:	inc    edi
  4169cf:	push   es
  4169d0:	xor    eax,0x83c147d9
  4169d5:	add    BYTE PTR [ecx+ebx*2-0x18fffe25],dl
  4169dc:	adc    DWORD PTR [ebx],eax
  4169de:	push   0x40015794
  4169e3:	or     DWORD PTR ds:0x7ed987f8,0x69
  4169ea:	adc    esp,DWORD PTR [ecx+ecx*2-0xfe1003f]
  4169f1:	test   ch,bh
  4169f3:	arpl   WORD PTR [edi+0x7d],ax
  4169f6:	fwait
  4169f7:	xchg   esp,eax
  4169f8:	push   edi
  4169f9:	add    DWORD PTR [esi+0x12],edx
  4169fc:	pop    eax
  4169fd:	adc    DWORD PTR [eax],eax
  4169ff:	xchg   esp,eax
  416a00:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416a01:	pop    ecx
  416a02:	in     al,0xce
  416a04:	mov    dh,0x68
  416a06:	xchg   ecx,edx
  416a08:	and    ebp,DWORD PTR ds:0x7caca8c1
  416a0e:	pop    ebx
  416a0f:	sub    al,0x71
  416a11:	enter  0xa80f,0x48
  416a15:	(bad)  
  416a16:	cld    
  416a17:	mov    eax,ds:0xa4136a67
  416a1c:	push   0xffffffc1
  416a1e:	dec    eax
  416a20:	pop    ecx
  416a21:	add    al,0x0
  416a23:	xchg   esp,eax
  416a24:	mov    ebp,cs
  416a26:	mov    dl,BYTE PTR [ecx+0x67]
  416a29:	ror    DWORD PTR [eax-0x33090a7],1
  416a2f:	popa   
  416a30:	arpl   WORD PTR [edx+0x70],bp
  416a33:	mov    WORD PTR [esi+0x10],ss
  416a36:	nop
  416a37:	add    DWORD PTR [eax],0x41170427
  416a3d:	push   ebx
  416a3e:	sub    BYTE PTR [eax],al
  416a40:	sbb    eax,0xd52ed6bc
  416a45:	in     al,dx
  416a46:	add    BYTE PTR ds:0xe8686857,al
  416a4c:	stos   DWORD PTR es:[edi],eax
  416a4d:	add    bh,ah
  416a4f:	mov    ds:0xd6ffed94,eax
  416a54:	push   cs
  416a55:	mov    ah,0xba
  416a57:	aam    0x4b
  416a59:	gs sbb al,0x70
  416a5c:	jmp    0xa6695ec6
  416a61:	shl    dh,0x80
  416a64:	push   esp
  416a65:	in     al,dx
  416a66:	repz jle 0x416a40
  416a69:	jo     0x416a2d
  416a6b:	sar    BYTE PTR [edi-0x14],0x49
  416a6f:	pop    esi
  416a70:	popf   
  416a71:	int    0x75
  416a73:	adc    BYTE PTR [eax+0x52042712],dh
  416a79:	mov    ebx,0xeb510465
  416a7e:	push   edx
  416a7f:	pop    ebx
  416a80:	sbb    al,0xba
  416a82:	push   ebp
  416a83:	push   0xffffffe9
  416a85:	gs hlt 
  416a87:	mov    ds:0xc9e6c0a6,eax
  416a8c:	imul   eax,ebx,0x3d
  416a8f:	lock xchg ebx,eax
  416a91:	gs mov esp,0x74ce3bf7
  416a97:	push   0x19
  416a99:	jp     0x416a47
  416a9b:	push   0x71
  416a9d:	leave  
  416a9e:	das    
  416a9f:	inc    ebp
  416aa0:	cwde   
  416aa1:	add    BYTE PTR [esi+edi*2-0x47f1000],bh
  416aa8:	or     ah,BYTE PTR [ebp-0x32]
  416aab:	popf   
  416aac:	push   0x67
  416aae:	hlt    
  416aaf:	imul   esi,eax,0xffffffff
  416ab2:	push   edi
  416ab3:	add    BYTE PTR [ecx-0x29],dh
  416ab6:	fs std 
  416ab8:	gs push edi
  416aba:	in     al,dx
  416abb:	dec    ecx
  416abc:	imul   edi,DWORD PTR [ebx-0x34abfd9a],0x613603d6
  416ac6:	add    dh,BYTE PTR [ecx]
  416ac8:	into   
  416ac9:	sub    eax,0xc3720ff1
  416ace:	cld    
  416acf:	cld    
  416ad0:	xor    al,0x38
  416ad2:	arpl   WORD PTR [ebx-0x3b],si
  416ad5:	inc    eax
  416ad6:	std    
  416ad7:	sti    
  416ad8:	scas   al,BYTE PTR es:[edi]
  416ad9:	sub    eax,0xa41dc07c
  416ade:	gs jae 0x416a7a
  416ae1:	or     DWORD PTR [esi],edi
  416ae3:	mov    DWORD PTR [edi-0x71035920],esp
  416ae9:	in     eax,dx
  416aea:	jl     0x416aac
  416aec:	std    
  416aed:	jae    0x416aa0
  416aef:	call   DWORD PTR [ecx+0x76d92e92]
  416af5:	jae    0x416b4f
  416af7:	call   0xfda684d7
  416afc:	inc    bx
  416afe:	push   esp
  416aff:	call   0xfda674f7
  416b04:	arpl   cx,bx
  416b06:	lds    ebx,FWORD PTR [ebp-0x4e]
  416b09:	add    BYTE PTR [esi+0x3e],bh
  416b0c:	or     al,0xe9
  416b0e:	bound  edi,QWORD PTR [ecx-0x14]
  416b11:	cwde   
  416b12:	inc    esi
  416b13:	fadd   QWORD PTR [ebx]
  416b15:	mov    esi,0xd4fe6457
  416b1a:	xchg   ebx,eax
  416b1b:	repz aas 
  416b1d:	jmp    0x65392ab0
  416b22:	push   eax
  416b23:	out    dx,eax
  416b24:	add    DWORD PTR [eax],esp
  416b26:	pop    ecx
  416b27:	rcl    DWORD PTR [ecx+eax*4-0x59],1
  416b2b:	in     eax,dx
  416b2c:	aas    
  416b2d:	add    ch,bh
  416b2f:	dec    edi
  416b30:	xor    bh,bh
  416b32:	jmp    0x8700:0x2d12bbf2
  416b39:	fdiv   DWORD PTR [eax-0x4b]
  416b3c:	jae    0x416b82
  416b3e:	add    BYTE PTR gs:[eax],dl
  416b41:	add    BYTE PTR [ebp-0x5f00fabb],bh
  416b47:	fsub   QWORD PTR [esi+0x10d8ad43]
  416b4d:	add    al,0xce
  416b4f:	aas    
  416b50:	std    
  416b51:	mov    dl,ch
  416b53:	loop   0x416b4f
  416b55:	je     0x416aed
  416b57:	dec    esi
  416b58:	mov    al,BYTE PTR [ebp-0x17]
  416b5b:	dec    edi
  416b5c:	push   esp
  416b5d:	mov    esi,0xfffd683a
  416b62:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416b63:	cld    
  416b64:	test   BYTE PTR [ebp+0x29],dh
  416b67:	fmul   st,st(6)
  416b69:	test   DWORD PTR ds:0x8b0b52,ebp
  416b6f:	rcr    al,0x36
  416b72:	(bad)  
  416b73:	jp     0x416bb1
  416b75:	ret    
  416b76:	(bad)  
  416b77:	jno    0x416b79
  416b79:	add    bl,ch
  416b7b:	jae    0x416bcd
  416b7d:	in     eax,0x8f
  416b7f:	add    al,0xd8
  416b81:	cli    
  416b82:	pop    esi
  416b83:	jmp    0xf3b:0x40fff552
  416b8a:	inc    eax
  416b8b:	sub    eax,0xf65fc2e4
  416b90:	and    eax,0xcba655bf
  416b95:	dec    esp
  416b96:	adc    DWORD PTR [eax-0x25],0xffffffff
  416b9a:	push   ebp
  416b9b:	mov    dh,0x12
  416b9d:	fs adc eax,0x8d52ff3d
  416ba3:	xor    bl,bl
  416ba5:	dec    edi
  416ba6:	push   0xffffff94
  416ba8:	pop    ecx
  416ba9:	(bad)  [ecx]
  416bab:	sti    
  416bac:	mov    edi,ecx
  416bae:	cld    
  416baf:	retf   0x40d3
  416bb2:	jae    0x416c10
  416bb4:	inc    eax
  416bb5:	mov    esi,0x689668fb
  416bba:	adc    edi,DWORD PTR [eax+ecx*2-0x3f]
  416bbe:	call   DWORD PTR [esi]
  416bc0:	popa   
  416bc1:	jmp    0x54fb:0xbeee8c72
  416bc8:	lds    esi,FWORD PTR [ecx]
  416bca:	call   0xfda68c73
  416bcf:	pop    ds
  416bd0:	inc    ecx
  416bd1:	jg     0x416bd0
  416bd3:	add    BYTE PTR [eax],ah
  416bd5:	cli    
  416bd6:	jbe    0x416c1b
  416bd8:	mov    al,ds:0x7669cd08
  416bdd:	xchg   edx,eax
  416bde:	out    dx,eax
  416bdf:	pop    es
  416be0:	xchg   ebx,eax
  416be1:	mov    ds:0xc95f881,al
  416be6:	adc    al,0x89
  416be8:	fstp   DWORD PTR [ebx-0x80]
  416beb:	rol    BYTE PTR [eax],0x5d
  416bee:	jp     0x416c3b
  416bf0:	jo     0x416be3
  416bf2:	sti    
  416bf3:	mov    BYTE PTR [ebx-0x71],dl
  416bf6:	cld    
  416bf7:	push   esp
  416bf8:	ins    BYTE PTR es:[edi],dx
  416bf9:	inc    edx
  416bfa:	mov    esp,0x41a75bfc
  416bff:	pop    ebp
  416c00:	repnz xor BYTE PTR [edx+0x8],al
  416c04:	xchg   esp,eax
  416c05:	lods   al,BYTE PTR ds:[esi]
  416c06:	jp     0x416bf4
  416c08:	in     eax,0xd6
  416c0a:	fdivp  st(3),st
  416c0c:	xchg   esp,eax
  416c0d:	test   eax,0x44a8337a
  416c12:	sar    edi,0xc2
  416c15:	aam    0xbe
  416c17:	sti    
  416c18:	les    edi,FWORD PTR ds:0x43a1fd01
  416c1e:	data16 jae 0x416bbd
  416c21:	add    BYTE PTR [esi],ah
  416c23:	dec    esi
  416c24:	pop    ss
  416c25:	inc    ecx
  416c26:	xchg   esp,eax
  416c27:	es retf 
  416c29:	mov    ebx,0x61bdf012
  416c2e:	hlt    
  416c2f:	or     esp,DWORD PTR [ebx-0x137d1940]
  416c35:	out    0x73,al
  416c37:	push   ss
  416c38:	add    BYTE PTR ds:0xd482f2bc,cl
  416c3e:	(bad)  
  416c3f:	jb     0x416c5f
  416c41:	mov    esp,0xc9672f84
  416c46:	jne    0x416c27
  416c48:	add    cl,0xec
  416c4b:	bnd js 0x416ca5
  416c4e:	fs aaa 
  416c50:	iret   
  416c51:	mov    al,0xeb
  416c53:	repnz data16 daa 
  416c56:	clc    
  416c57:	mov    ebp,0xe869154d
  416c5c:	lock xchg edi,eax
  416c5e:	jne    0x416c06
  416c60:	pop    edx
  416c61:	pushf  
  416c62:	leave  
  416c63:	mov    ds,WORD PTR [eax+0x329e61dc]
  416c69:	push   esp
  416c6a:	shl    DWORD PTR [edi*1-0x2f1907aa],0x1c
  416c72:	push   esp
  416c73:	sbb    ch,dl
  416c75:	adc    al,0xdb
  416c77:	jp     0x416c7c
  416c79:	(bad)
  416c7c:	addr16 out 0xf4,eax
  416c7f:	ins    DWORD PTR es:[edi],dx
  416c80:	adc    ah,cl
  416c82:	push   cs
  416c83:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416c84:	add    ecx,DWORD PTR [ecx-0x15]
  416c87:	bnd jp 0x416c11
  416c8a:	pushf  
  416c8b:	cld    
  416c8c:	ret    
  416c8d:	cmp    esi,DWORD PTR [esi+0x2f]
  416c90:	js     0x416c69
  416c92:	fs xchg edi,eax
  416c94:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  416c96:	hlt    
  416c97:	jge    0x416cff
  416c99:	and    DWORD PTR [eax],eax
  416c9b:	add    cl,ch
  416c9d:	add    BYTE PTR [edx+0x64],cl
  416ca0:	jae    0x416c83
  416ca2:	jp     0x416cee
  416ca4:	sub    DWORD PTR [ecx],0x4
  416ca7:	(bad)  
  416caa:	(bad)  
  416cab:	icebp  
  416cac:	aas    
  416cad:	jmp    0x94bbd4c8
  416cb2:	enter  0x4377,0x5
  416cb6:	mov    esi,0x56a60d48
  416cbb:	shl    BYTE PTR [ebx-0x51],0x3f
  416cbf:	add    DWORD PTR [eax-0x12],ecx
  416cc2:	cmp    DWORD PTR [ecx+0x43],edi
  416cc5:	loope  0x416d12
  416cc7:	inc    eax
  416cc8:	je     0x416ced
  416cca:	aad    0xcf
  416ccc:	cld    
  416ccd:	pop    esp
  416cce:	mov    esp,0xa3f4fcb0
  416cd3:	icebp  
  416cd4:	aas    
  416cd5:	jmp    0x6c555a0a
  416cda:	jecxz  0x416d40
  416cdc:	push   eax
  416cdd:	mov    dh,0xab
  416cdf:	push   0x883ae55
  416ce4:	std    
  416ce5:	mov    edi,0x13ff5915
  416cea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416ceb:	mov    DWORD PTR [ebx-0x7],eax
  416cee:	cli    
  416cef:	inc    eax
  416cf0:	je     0x416cd6
  416cf2:	in     al,dx
  416cf3:	retf   
  416cf4:	sti    
  416cf5:	jo     0x416d5f
  416cf7:	mov    DWORD PTR [ebx-0x7f],eax
  416cfa:	mov    ebp,0xeffcfd0a
  416cff:	push   0xb9002111
  416d04:	pop    ebp
  416d05:	xor    DWORD PTR [ecx],ebp
  416d07:	push   ecx
  416d08:	mov    esi,0xf0d63058
  416d0d:	(bad)  
  416d0e:	mov    ebx,0x3d816cbc
  416d13:	sub    al,0xb1
  416d15:	push   ebp
  416d16:	add    BYTE PTR [esi-0x12ea9bd1],ah
  416d1c:	add    edx,DWORD PTR [ebx+0x6a]
  416d1f:	sub    DWORD PTR [ecx-0x76],ecx
  416d22:	inc    ebp
  416d23:	shl    DWORD PTR [edx+ecx*4],0x45
  416d27:	test   eax,0xa2156734
  416d2c:	outs   dx,DWORD PTR ds:[esi]
  416d2d:	add    eax,0xfae84089
  416d32:	(bad)  
  416d33:	jbe    0x416d5c
  416d35:	jl     0x416d4c
  416d37:	cmp    eax,0x661ae704
  416d3c:	lahf   
  416d3d:	icebp  
  416d3e:	test   DWORD PTR [ebp+0x308d1e50],ebp
  416d44:	call   0xd0c1fa95
  416d49:	dec    esp
  416d4a:	push   0xffffffc8
  416d4c:	xor    eax,DWORD PTR [esi+0x58dab545]
  416d52:	cld    
  416d53:	loop   0x416d22
  416d55:	cli    
  416d56:	jne    0x416cfd
  416d58:	fiadd  DWORD PTR [eax-0x8]
  416d5b:	loop   0x416d29
  416d5d:	jle    0x416ddc
  416d5f:	in     eax,0x3
  416d61:	jno    0x416d3b
  416d63:	mov    ds:0xc95846,al
  416d68:	aas    
  416d69:	pop    edi
  416d6a:	std    
  416d6b:	push   esp
  416d6c:	push   es
  416d6d:	mov    eax,0x9e1a514c
  416d72:	or     DWORD PTR [eax],eax
  416d74:	jge    0x416d79
  416d76:	pusha  
  416d77:	je     0x416df2
  416d79:	adc    al,al
  416d7b:	jmp    0x416d0e
  416d7d:	and    DWORD PTR [ecx-0x8],0x8b53306d
  416d84:	or     BYTE PTR [edi+0x11],bh
  416d87:	inc    eax
  416d88:	cmp    eax,0xf88cfd39
  416d8d:	jmp    0x5064:0xac948d4f
  416d94:	xor    esi,DWORD PTR [esi*8+0x6451a1fc]
  416d9b:	(bad)  
  416d9c:	sbb    DWORD PTR [ecx],ebp
  416d9e:	out    dx,al
  416d9f:	inc    ebp
  416da0:	sbb    edi,DWORD PTR [ecx+ecx*1]
  416da3:	andps  xmm5,XMMWORD PTR [ecx-0x80]
  416da7:	clc    
  416da8:	mov    ?,WORD PTR [eax+ebp*1-0x77]
  416dac:	pop    ecx
  416dad:	and    ecx,eax
  416daf:	jae    0x416d72
  416db1:	add    DWORD PTR [edi],ebp
  416db3:	inc    ebp
  416db4:	repz or eax,0x2211d878
  416dba:	in     eax,dx
  416dbb:	sub    DWORD PTR [esi+0x69],ebp
  416dbe:	jbe    0x416e03
  416dc0:	fdivr  QWORD PTR [eax-0x30]
  416dc3:	cld    
  416dc4:	dec    ecx
  416dc5:	cmp    eax,0x669c7364
  416dca:	cmp    al,BYTE PTR [ecx-0x27984400]
  416dd0:	(bad)  
  416dd1:	cvttps2pi mm6,xmm4
  416dd4:	adc    ah,0xb4
  416dd7:	push   es
  416dd8:	mov    DWORD PTR [ecx+0x41],ebx
  416ddb:	mov    ecx,DWORD PTR [eax]
  416ddd:	rsm    
  416ddf:	ins    DWORD PTR es:[edi],dx
  416de0:	or     BYTE PTR [edi+0x41],al
  416de3:	pop    ss
  416de4:	inc    ebp
  416de5:	xchg   ebx,eax
  416de6:	scas   eax,DWORD PTR es:[edi]
  416de7:	adc    eax,0x4ac2eac0
  416dec:	ret    0x6790
  416def:	mov    eax,0x6feb6888
  416df4:	adc    bh,al
  416df6:	adc    eax,0xd36b30b9
  416dfb:	push   ebx
  416dfc:	aaa    
  416dfd:	loope  0x416e4e
  416dff:	aad    0x49
  416e01:	ret    
  416e02:	dec    DWORD PTR [ebx+0x0]
  416e05:	xchg   esp,eax
  416e06:	bound  esi,QWORD PTR [bp+di-0x64]
  416e0a:	add    BYTE PTR [ecx+eax*8+0x3f],dh
  416e0e:	imul   eax,eax,0x605e3b85
  416e14:	leave  
  416e15:	daa    
  416e16:	sbb    ah,BYTE PTR [esi]
  416e18:	adc    edx,DWORD PTR [eax]
  416e1a:	xchg   ecx,eax
  416e1b:	call   0xa4cb0223
  416e20:	pop    edi
  416e21:	adc    eax,0x1612de59
  416e26:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416e27:	call   0xfe2c022f
  416e2c:	push   ss
  416e2d:	out    0xb7,al
  416e2f:	adc    eax,0x35bd0055
  416e34:	out    0x88,al
  416e36:	pop    es
  416e37:	add    bh,ah
  416e39:	add    eax,DWORD PTR [ecx-0x16]
  416e3c:	mov    ah,BYTE PTR [edx+0x67]
  416e3f:	or     BYTE PTR [ecx+eax*8-0x1d],ch
  416e43:	xchg   DWORD PTR [edi+ebx*2+0x56922bc],ebp
  416e4a:	xchg   esp,eax
  416e4b:	imul   ecx,DWORD PTR [ecx],0x375c5791
  416e51:	ins    BYTE PTR es:[edi],dx
  416e52:	pop    ds
  416e53:	push   ebp
  416e54:	(bad)  
  416e55:	bound  ebx,QWORD PTR [ebx]
  416e57:	(bad)  
  416e58:	rcr    BYTE PTR [esi],cl
  416e5a:	ror    DWORD PTR ds:0x5da2f16b,1
  416e60:	out    0x90,eax
  416e62:	push   edi
  416e63:	pop    eax
  416e64:	pop    ss
  416e65:	in     al,dx
  416e66:	sub    eax,DWORD PTR [eax]
  416e68:	out    0x3,eax
  416e6a:	jl     0x416e74
  416e6c:	xchg   edi,eax
  416e6d:	bound  eax,QWORD PTR [ecx+0x79889f89]
  416e73:	or     eax,0x5d72cb6b
  416e78:	out    0x86,eax
  416e7a:	out    dx,eax
  416e7b:	pop    eax
  416e7c:	mov    bh,0x12
  416e7e:	push   ss
  416e7f:	push   ds
  416e80:	call   0xcb0288
  416e85:	sub    al,0xf0
  416e87:	mov    bl,0xe7
  416e89:	cmc    
  416e8a:	push   cs
  416e8b:	pop    esp
  416e8c:	std    
  416e8d:	ins    BYTE PTR es:[edi],dx
  416e8e:	xlat   BYTE PTR ds:[ebx]
  416e8f:	or     ecx,DWORD PTR [esi+0x910c]
  416e95:	push   0x0
  416e97:	xor    al,0x5
  416e99:	add    ch,dl
  416e9b:	mov    WORD PTR [esi+0x8d21e7],?
  416ea1:	add    BYTE PTR [ebp-0x29],ah
  416ea4:	rcl    DWORD PTR [edx+edi*8],1
  416ea7:	ins    DWORD PTR es:[edi],dx
  416ea8:	pop    ebx
  416ea9:	jae    0x416ee0
  416eab:	jg     0x416e7d
  416ead:	inc    ebp
  416eae:	es jbe 0x416e64
  416eb1:	out    0x93,eax
  416eb3:	int    0x5b
  416eb5:	std    
  416eb6:	bound  ebx,QWORD PTR [ebp+0x65]
  416eb9:	adc    eax,0xfd0097e8
  416ebe:	jl     0x416f0b
  416ec0:	xchg   DWORD PTR [ebx-0x3],eax
  416ec3:	outs   dx,BYTE PTR ds:[esi]
  416ec4:	shl    bl,1
  416ec6:	div    BYTE PTR ds:0xdf1735b
  416ecc:	gs rcr dl,1
  416ecf:	xor    eax,0x3424895b
  416ed4:	out    0xbf,eax
  416ed6:	in     eax,0x1a
  416ed8:	inc    eax
  416ed9:	je     0x416eb8
  416edb:	aas    
  416edc:	or     DWORD PTR [esi-0x3a],eax
  416edf:	xor    eax,0x12f14385
  416ee4:	inc    eax
  416ee5:	jae    0x416ed3
  416ee7:	sbb    DWORD PTR [esi+0x5e],0x5e8834c2
  416eee:	icebp  
  416eef:	dec    eax
  416ef0:	pop    ebp
  416ef1:	adc    ecx,DWORD PTR [ebp+0x62001c82]
  416ef7:	fisubr WORD PTR [eax+0x24]
  416efa:	jmp    0xb000:0x89009700
  416f01:	mov    eax,0x8d454684
  416f06:	inc    ecx
  416f07:	cld    
  416f08:	mov    ah,0x46
  416f0a:	sub    DWORD PTR [ebx+0x46850c70],ecx
  416f10:	popf   
  416f11:	in     al,dx
  416f12:	mov    esi,ebp
  416f14:	sub    eax,0xd2d22f00
  416f19:	xor    edi,ecx
  416f1b:	mov    esi,eax
  416f1d:	mov    bh,0x4e
  416f1f:	mov    DWORD PTR [ebx+0x20],ebx
  416f22:	test   DWORD PTR [esi-0x6f],eax
  416f25:	xchg   DWORD PTR [esi+0x34],edx
  416f28:	retf   0xed53
  416f2b:	adc    bh,BYTE PTR ds:0xf4ff2f00
  416f31:	popa   
  416f32:	cmp    DWORD PTR [ebp-0x31],esi
  416f35:	cwde   
  416f36:	push   esp
  416f37:	push   edi
  416f38:	xor    ah,cl
  416f3a:	adc    BYTE PTR [eax-0x7702c011],bh
  416f40:	xor    edi,esp
  416f42:	ss (bad) 
  416f44:	pusha  
  416f45:	dec    esi
  416f46:	push   esp
  416f47:	call   0x3db2ff
  416f4c:	and    ch,al
  416f4e:	iret   
  416f4f:	inc    ebp
  416f50:	mov    edx,0x55fe69e0
  416f55:	in     eax,dx
  416f56:	jp     0x416f57
  416f58:	push   ebx
  416f59:	and    bl,bh
  416f5b:	adc    eax,0x3d55e1
  416f60:	add    BYTE PTR [eax],ch
  416f62:	inc    ecx
  416f63:	xor    eax,0xc2fcae8b
  416f68:	je     0x416f09
  416f6a:	mov    ecx,DWORD PTR [ecx+0x8]
  416f6d:	lods   al,BYTE PTR ds:[esi]
  416f6e:	xchg   esp,eax
  416f6f:	cld    
  416f70:	adc    eax,0x3d4e4d
  416f75:	lock mov edi,0xe8941373
  416f7b:	fld    QWORD PTR [edi]
  416f7d:	xchg   edi,eax
  416f7e:	push   0x4fe80001
  416f83:	pusha  
  416f84:	xor    DWORD PTR [ebx+0x34],ebx
  416f87:	mov    eax,ds:0x8a69d412
  416f8c:	cmp    DWORD PTR [ebp+0xf22d68e],ecx
  416f92:	arpl   WORD PTR ds:0xbc31e251,ax
  416f98:	pop    ebx
  416f99:	aad    0x69
  416f9b:	jmp    0x1a29b9f
  416fa0:	call   0x4271f2
  416fa5:	adc    BYTE PTR [ecx],ch
  416fa7:	(bad)  
  416fa8:	or     BYTE PTR [esi+0x69],bh
  416fab:	imul   esi,DWORD PTR [ecx+edx*2+0x2a],0xee946a60
  416fb3:	jnp    0x416fe6
  416fb5:	sti    
  416fb6:	xchg   ecx,eax
  416fb7:	imul   ebp,DWORD PTR [eax+0x59],0xfc555ff2
  416fbe:	xchg   dh,al
  416fc0:	cld    
  416fc1:	jecxz  0x416f58
  416fc3:	inc    ecx
  416fc4:	inc    eax
  416fc5:	add    bh,ch
  416fc7:	aaa    
  416fc8:	pusha  
  416fc9:	jae    0x416f93
  416fcb:	add    BYTE PTR [esi-0x4a9634be],dh
  416fd1:	out    0x53,eax
  416fd3:	sub    al,0x5d
  416fd5:	std    
  416fd6:	pop    ss
  416fd7:	xchg   ecx,eax
  416fd8:	pop    ebp
  416fd9:	pop    ebp
  416fda:	push   edx
  416fdb:	push   cs
  416fdc:	dec    ebx
  416fdd:	ret    0x6990
  416fe0:	mov    eax,0xb2f7b088
  416fe5:	push   eax
  416fe6:	inc    ebx
  416fe7:	in     al,dx
  416fe8:	fld    QWORD PTR [edi]
  416fea:	jmp    0x416fcc
  416fec:	fdivrp st(7),st
  416fee:	mov    esi,DWORD PTR ds:0xd4126d
  416ff4:	out    0x12,eax
  416ff6:	pop    ebp
  416ff7:	sbb    BYTE PTR ds:0x61d4e82c,bh
  416ffd:	(bad)  
  416ffe:	mov    edi,0xeed8aa15
  417003:	xchg   DWORD PTR [eax+eiz*2],esp
  417006:	loop   0x41701a
  417008:	jle    0x416fd0
  41700a:	xchg   DWORD PTR [ebp+0x2e85182d],eax
  417010:	jbe    0x416fe8
  417012:	outs   dx,DWORD PTR ds:[esi]
  417013:	xchg   DWORD PTR [ebp-0x14d152e9],edi
  417019:	add    cl,dl
  41701b:	adc    BYTE PTR [edx+0x5a],ah
  41701e:	arpl   WORD PTR [ecx+0x597bd7de],di
  417024:	fmul   QWORD PTR [edi]
  417026:	test   eax,eax
  417028:	out    0x2a,al
  41702a:	add    BYTE PTR [ecx+0x8],bl
  41702d:	hlt    
  41702e:	arpl   WORD PTR ds:0x93d2e705,sp
  417034:	pop    ecx
  417035:	lods   al,BYTE PTR ds:[esi]
  417036:	pop    edi
  417037:	or     eax,0x5a1b1ac4
  41703c:	sub    al,0x99
  41703e:	dec    ecx
  41703f:	jmp    0xb2ac7f17
  417044:	xchg   esi,esp
  417046:	mov    WORD PTR [ecx],?
  417048:	add    al,0x70
  41704a:	mov    edi,0x17ad859b
  41704f:	cmp    eax,0x5a02d640
  417054:	sub    BYTE PTR [ecx-0x9],dl
  417057:	dec    ebx
  417058:	pop    ecx
  417059:	push   esp
  41705a:	or     al,0xb1
  41705c:	repz push ss
  41705e:	imul   BYTE PTR [ebx+0x0]
  417061:	push   0x47
  417063:	nop
  417064:	pop    ecx
  417065:	cmp    al,0x5c
  417067:	cdq    
  417068:	repz mov dh,0xf1
  41706b:	rol    DWORD PTR [eax],cl
  41706d:	add    BYTE PTR [ecx-0x70],bh
  417070:	addr16 pop es
  417072:	push   ss
  417073:	jecxz  0x417062
  417075:	out    dx,eax
  417076:	sti    
  417077:	push   edi
  417078:	pop    ecx
  417079:	das    
  41707a:	test   eax,0xabc6b832
  41707f:	xchg   ebx,eax
  417080:	add    BYTE PTR [ebx+0x62],dl
  417083:	repz jg 0x417072
  417086:	fldenv [esi]
  417088:	mov    ah,0xc5
  41708a:	and    al,0xf3
  41708c:	add    ch,bh
  41708e:	fadd   QWORD PTR [eax]
  417090:	fwait
  417091:	out    dx,eax
  417092:	aas    
  417093:	jmp    0xafccc8a6
  417098:	(bad)  
  417099:	mov    al,0x86
  41709b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41709c:	(bad)  
  41709d:	pop    ebx
  41709e:	adc    eax,DWORD PTR [ebp+0x25]
  4170a1:	sbb    DWORD PTR [eax],eax
  4170a3:	sbb    bl,BYTE PTR [edi-0x7f]
  4170a6:	pop    ebx
  4170a7:	inc    ecx
  4170a8:	js     0x417064
  4170aa:	sub    esi,DWORD PTR [edi-0x1ebc780e]
  4170b0:	push   ss
  4170b1:	inc    eax
  4170b2:	add    al,0x60
  4170b4:	int3   
  4170b5:	dec    esp
  4170b6:	xchg   esp,eax
  4170b8:	pop    DWORD PTR [edi-0x10022eba]
  4170be:	mov    ch,BYTE PTR [ebp+0xe4ffcef]
  4170c4:	mov    esp,0x7bdcfd4c
  4170c9:	repnz aas 
  4170cb:	jmp    0x6c4db4e6
  4170d0:	push   edi
  4170d1:	int    0x44
  4170d3:	(bad)  
  4170d4:	fldcw  WORD PTR [eax]
  4170d6:	add    DWORD PTR [eax+ecx*4],ebp
  4170d9:	cmp    BYTE PTR [ebx-0x13],0x97
  4170dd:	int    0xb
  4170df:	sbb    bl,BYTE PTR [edi-0x7f]
  4170e2:	or     BYTE PTR [eax-0x30],ah
  4170e5:	cld    
  4170e6:	xchg   BYTE PTR [eax],al
  4170e8:	gs or  al,0xe7
  4170eb:	sub    eax,DWORD PTR [esi]
  4170ed:	add    eax,0xf0c9c981
  4170f2:	xchg   bh,dl
  4170f4:	add    BYTE PTR [esi+0x5fa7d13],dl
  4170fa:	push   edx
  4170fb:	std    
  4170fc:	dec    DWORD PTR [edi+0x7940fc57]
  417102:	push   0x2
  417104:	pop    ecx
  417105:	hlt    
  417106:	hlt    
  417107:	xor    al,0x48
  417109:	imul   esi,DWORD PTR [edx],0x4958905
  41710f:	test   DWORD PTR [eax+0x39],ecx
  417112:	jmp    0x4cef41a
  417117:	add    dh,al
  417119:	call   0xf9406dd2
  41711e:	mov    ebx,0x81c54586
  417123:	inc    ecx
  417124:	or     BYTE PTR [ecx-0x7f],al
  417127:	mov    edi,0x293e9617
  41712c:	jb     0x4170ae
  41712e:	mov    ch,0x70
  417130:	lock ret 0xed4f
  417134:	adc    ch,BYTE PTR ds:0xb2458a04
  41713a:	xchg   ebp,eax
  41713b:	pop    eax
  41713c:	leave  
  41713d:	mov    edi,0x76550004
  417142:	sar    BYTE PTR [esi-0x1c],1
  417145:	test   DWORD PTR [ecx+0x16610ec],eax
  41714b:	xchg   DWORD PTR [eax+0x341],eax
  417151:	sub    ecx,DWORD PTR [ebx-0x771edbbc]
  417157:	aas    
  417158:	cmp    al,0x0
  41715a:	jp     0x4170e7
  41715c:	inc    esp
  41715d:	and    al,0xa9
  41715f:	or     dh,0xff
  417162:	xchg   esp,eax
  417163:	pop    ss
  417164:	jmp    0x4418:0x281e10ff
  41716b:	mov    bl,0x1
  41716d:	std    
  41716e:	test   eax,0x943feecd
  417173:	dec    esp
  417174:	(bad)  
  417175:	inc    BYTE PTR [ebx+0x1706d569]
  41717b:	mov    eax,ds:0xcc190d02
  417180:	add    BYTE PTR [eax],al
  417182:	xchg   esp,eax
  417183:	jmp    0xc010:0x698c23e4
  41718a:	or     ebp,edi
  41718c:	daa    
  41718d:	or     al,0xff
  41718f:	jecxz  0x417150
  417191:	pop    es
  417192:	in     al,0xce
  417194:	cmc    
  417195:	jmp    0x41713d
  417197:	sub    DWORD PTR [ecx+ecx*4],eax
  41719a:	xlat   BYTE PTR ds:[ebx]
  41719b:	or     DWORD PTR [ebp-0x78f45740],eax
  4171a1:	dec    ecx
  4171a2:	jo     0x417188
  4171a4:	dec    ecx
  4171a5:	je     0x417226
  4171a7:	cwde   
  4171a8:	mov    cl,0xe7
  4171aa:	sub    DWORD PTR [edx-0x3ee002a4],ebp
  4171b0:	xchg   DWORD PTR [ecx-0x50],eax
  4171b3:	loopne 0x417179
  4171b5:	and    edx,DWORD PTR [eax-0x758ca424]
  4171bb:	fild   WORD PTR [eax+0x6986004d]
  4171c1:	push   0x256d1f05
  4171c6:	or     BYTE PTR [edi],dl
  4171c8:	neg    DWORD PTR [ebx-0x75]
  4171cb:	push   edi
  4171cc:	push   ecx
  4171cd:	mov    cl,0xfc
  4171cf:	test   eax,0x943ff059
  4171d4:	in     al,0x5b
  4171d6:	je     0x4171e8
  4171d8:	jp     0x417243
  4171da:	stos   BYTE PTR es:[edi],al
  4171db:	xchg   edi,eax
  4171dc:	add    bh,ah
  4171de:	add    ebx,DWORD PTR [eax]
  4171e0:	inc    eax
  4171e1:	push   esp
  4171e2:	add    ebp,edx
  4171e4:	jg     0x41720c
  4171e6:	mul    BYTE PTR [ebx+0x205b0469]
  4171ec:	sbb    al,0xf3
  4171ee:	mov    dl,0xfd
  4171f0:	cld    
  4171f1:	push   eax
  4171f2:	add    al,0xfe
  4171f4:	adc    dh,BYTE PTR [esi+0x2ccc6c17]
  4171fa:	add    al,0x94
  4171fc:	add    eax,0x3769545d
  417201:	add    dl,BYTE PTR [edx-0x15]
  417204:	pop    esi
  417205:	out    0x7a,eax
  417207:	mov    eax,0x14426800
  41720c:	(bad)  
  41720d:	fadd   DWORD PTR [ebx]
  41720f:	jmp    0x4908537c
  417214:	push   esi
  417215:	or     bh,0x40
  417218:	push   esi
  417219:	outs   dx,BYTE PTR ds:[esi]
  41721a:	mov    ebx,0xb94c89d9
  41721f:	push   esp
  417220:	mov    dl,0x71
  417222:	mov    eax,0x3f087700
  417227:	(bad)  
  417228:	and    BYTE PTR [esi+0x4e],dl
  41722b:	pop    ss
  41722c:	push   esp
  41722d:	mov    edx,0xb1940028
  417232:	xchg   esp,eax
  417233:	mov    es,WORD PTR [esi+ebp*4]
  417236:	arpl   WORD PTR [edx-0xed24e65],di
  41723c:	out    dx,eax
  41723d:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41723f:	add    ebx,DWORD PTR [edi]
  417241:	xlat   BYTE PTR ds:[ebx]
  417242:	into   
  417243:	pop    edx
  417244:	mov    eax,ds:0xe0c60d68
  417249:	push   ebp
  41724a:	push   cs
  41724b:	shr    BYTE PTR [ebx-0x2f39da98],cl
  417251:	push   ebp
  417252:	xchg   ecx,eax
  417253:	repz arpl WORD PTR [esi],di
  417256:	add    dh,ch
  417258:	xchg   edi,eax
  417259:	mov    ebx,0x7f587447
  41725e:	(bad)  
  41725f:	or     DWORD PTR [edi+0xe],ecx
  417262:	call   0xfd96441a
  417267:	inc    ebx
  417268:	nop
  417269:	mov    eax,0xbe97e7c5
  41726e:	inc    edi
  41726f:	cmp    al,0xf1
  417271:	scas   eax,DWORD PTR es:[edi]
  417272:	cld    
  417273:	aam    0xe7
  417275:	repnz aas 
  417277:	jmp    0xaa9a25ba
  41727c:	inc    esp
  41727d:	mov    ah,ch
  41727f:	push   0xe8ff18fb
  417284:	xchg   edi,eax
  417285:	scas   eax,DWORD PTR es:[edi]
  417286:	push   ebp
  417287:	add    BYTE PTR ds:[ebx],dl
  41728a:	fld    DWORD PTR [edi]
  41728c:	bound  edx,QWORD PTR [esi-0x678a7f79]
  417292:	add    BYTE PTR [eax],al
  417294:	jo     0x4172ea
  417296:	push   ecx
  417297:	(bad)  
  417298:	sub    al,0xe3
  41729a:	add    BYTE PTR [ecx-0x2aa9b47],bh
  4172a0:	je     0x4172f6
  4172a2:	cmp    DWORD PTR [eax+0x72],edx
  4172a5:	(bad)  
  4172a6:	push   0x53be5442
  4172ab:	test   BYTE PTR [ecx],ch
  4172ad:	mov    ?,WORD PTR [esi+ecx*8-0x17]
  4172b1:	xchg   edi,eax
  4172b2:	add    BYTE PTR [edx+0xa6877a4],cl
  4172b8:	adc    eax,0x3989535e
  4172bd:	adc    dl,BYTE PTR [esi+0x2]
  4172c0:	pushf  
  4172c1:	repz out 0xf,al
  4172c4:	adc    dl,BYTE PTR [esi-0x3b010181]
  4172ca:	add    DWORD PTR [edx-0x13],ebp
  4172cd:	pop    ds
  4172ce:	push   0xc10e0002
  4172d3:	dec    edi
  4172d4:	(bad)  
  4172d5:	lock mov al,ds:0xba1d006a
  4172db:	adc    BYTE PTR [ebx+eiz*8],dh
  4172de:	inc    eax
  4172df:	std    
  4172e0:	add    BYTE PTR [ecx],0x8
  4172e3:	mov    WORD PTR [eax-0x64],ax
  4172e7:	dec    esi
  4172e8:	dec    esi
  4172e9:	inc    ecx
  4172ea:	pop    edx
  4172eb:	sub    dh,0x0
  4172ee:	mov    al,ds:0x7d978107
  4172f3:	add    BYTE PTR [eax],al
  4172f5:	push   0x6d
  4172f7:	jnp    0x41733a
  4172f9:	loope  0x417298
  4172fb:	jnp    0x41733e
  4172fd:	test   al,0x9d
  4172ff:	mov    ecx,0x40733010
  417304:	std    
  417305:	xor    BYTE PTR [ecx],0x9
  417308:	out    0x6,eax
  41730a:	not    BYTE PTR [ebx-0x5f4f7622]
  417310:	mov    ax,WORD PTR [eax-0x35fe9651]
  417317:	inc    ebx
  417318:	frstor [esi-0x14]
  41731b:	mov    esp,0xc8408d07
  417320:	mov    DWORD PTR gs:[eax],eax
  417323:	sahf   
  417324:	call   0xfafb477a
  417329:	inc    DWORD PTR [eax-0x3c]
  41732c:	mov    BYTE PTR [ebp+0xd],al
  41732f:	gs or  eax,0x86fffd27
  417335:	into   
  417336:	gs pop edx
  417338:	fcos   
  41733a:	retf   0xc080
  41733d:	je     0x417325
  41733f:	jl     0x4173ba
  417341:	or     al,0xfd
  417343:	inc    ebx
  417344:	push   ebx
  417345:	inc    DWORD PTR [eax]
  417347:	les    eax,FWORD PTR [esi-0x4ba26bab]
  41734d:	imul   edx,DWORD PTR [ecx+0xce8c91],0xfd36cabc
  417357:	retf   
  417358:	fld    QWORD PTR [ebx+0x73]
  41735b:	push   ebp
  41735c:	jg     0x417360
  41735e:	mov    edx,DWORD PTR [ecx+0x5]
  417361:	mov    ah,0x88
  417363:	stos   DWORD PTR es:[edi],eax
  417364:	xor    DWORD PTR [edi],ebx
  417366:	sti    
  417367:	stos   DWORD PTR es:[edi],eax
  417368:	xor    al,BYTE PTR [esi-0x415d338d]
  41736e:	(bad)  
  41736f:	lock stos DWORD PTR es:[edi],eax
  417371:	ret    
  417372:	(bad)  
  417373:	jnp    0x417313
  417375:	cmp    edi,ebp
  417377:	mov    edx,DWORD PTR [ebx+0xc14f8be]
  41737d:	pop    ebx
  41737e:	add    ecx,DWORD PTR [ebx+0x73fcf7e7]
  417384:	call   0xc6bb:0x13cbc013
  41738b:	push   esi
  41738c:	pop    ebp
  41738d:	add    DWORD PTR [edx-0x6b],ebp
  417390:	mov    ah,0xbd
  417392:	fnsetpm(287 only) 
  417394:	into   
  417395:	dec    edi
  417396:	call   0xfd9948db
  41739b:	das    
  41739c:	outs   dx,BYTE PTR ds:[esi]
  41739d:	jmp    0x4173ab
  41739f:	or     DWORD PTR [ebp+edx*4+0x58],esp
  4173a3:	cmp    al,0xd7
  4173a5:	js     0x4173a7
  4173a7:	xchg   esp,eax
  4173a8:	mov    dl,0xcd
  4173aa:	movups XMMWORD PTR [ebp+eax*2-0x2],xmm6
  4173af:	sbb    eax,edx
  4173b1:	push   edi
  4173b2:	jae    0x417354
  4173b4:	mov    cl,0x15
  4173b6:	pop    esp
  4173b7:	add    BYTE PTR [ebx],cl
  4173b9:	adc    cl,BYTE PTR [ebx+esi*2-0x78c0215c]
  4173c0:	adc    DWORD PTR [ecx-0xc02a8],esp
  4173c6:	jae    0x417386
  4173c8:	pop    ss
  4173c9:	mov    al,0xe
  4173cb:	jg     0x41738a
  4173cd:	push   edx
  4173ce:	push   ss
  4173cf:	jg     0x4173a5
  4173d1:	retf   
  4173d2:	int3   
  4173d3:	or     BYTE PTR [ecx],cl
  4173d5:	mov    ebp,0xcc53cb6a
  4173da:	jecxz  0x417360
  4173dc:	lods   al,BYTE PTR ds:[esi]
  4173dd:	in     al,dx
  4173de:	jnp    0x4173e1
  4173e0:	test   DWORD PTR [eax-0x7b],eax
  4173e3:	mov    dl,BYTE PTR [edi+0x7a]
  4173e6:	je     0x417369
  4173e8:	inc    eax
  4173e9:	push   ebx
  4173ea:	ficom  WORD PTR [edi+0x44]
  4173ed:	test   DWORD PTR [eax+eax*4],ebp
  4173f0:	inc    esp
  4173f1:	push   0x52916275
  4173f6:	imul   eax,DWORD PTR [eax+eax*1-0x16],0x6b
  4173fb:	sub    eax,0xe457b651
  417401:	and    DWORD PTR [eax+ebx*4],0xffffffc4
  417405:	sub    DWORD PTR [eax+ecx*2+0x6a],0x52
  41740a:	sahf   
  41740b:	mov    ah,0x7b
  41740d:	jae    0x417442
  41740f:	push   edi
  417410:	pop    ecx
  417411:	test   BYTE PTR [eax+ecx*2+0x52],ah
  417415:	push   edx
  417416:	xchg   BYTE PTR [eax+ecx*2+0x8972cc],dh
  41741d:	xlat   BYTE PTR ds:[ebx]
  41741e:	dec    eax
  41741f:	sbb    ch,BYTE PTR [esi+0x628068cb]
  417425:	xor    DWORD PTR [edx+0x74],edx
  417428:	xchg   ecx,eax
  417429:	pop    eax
  41742a:	push   ebx
  41742b:	pop    esi
  41742c:	push   edi
  41742d:	push   cs
  41742e:	cmp    DWORD PTR [edi],edi
  417430:	mov    al,0xbf
  417432:	push   ecx
  417433:	dec    esi
  417434:	mov    eax,DWORD PTR [edi+0x1f03d108]
  41743a:	mov    esp,0xb0fbb41a
  41743f:	push   DWORD PTR [ebx+eiz*2]
  417442:	push   ebx
  417443:	mov    esi,DWORD PTR [edi+ebx*2+0x3431433b]
  41744a:	retf   
  41744b:	aas    
  41744c:	jmp    0x171b71c0
  417451:	inc    ebx
  417452:	xchg   cl,al
  417454:	add    BYTE PTR [esi+0x506fd53],ah
  41745a:	mov    esp,ebp
  41745c:	push   0xe9039c2c
  417461:	xchg   edi,eax
  417462:	scas   eax,DWORD PTR es:[edi]
  417463:	push   esp
  417464:	out    dx,al
  417465:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417466:	add    eax,0x87902911
  41746b:	dec    ebx
  41746c:	icebp  
  41746d:	adc    BYTE PTR [esi+0x549962eb],bh
  417473:	mov    al,0x5d
  417475:	cwde   
  417476:	add    BYTE PTR [eax],al
  417478:	je     0x4174be
  41747a:	gs push 0xfd5164f9
  417480:	inc    ebx
  417481:	add    BYTE PTR [eax+edi*4+0x53aa4ae7],dl
  417488:	std    
  417489:	ins    DWORD PTR es:[edi],dx
  41748a:	xlat   BYTE PTR ds:[ebx]
  41748b:	int    0x4
  41748d:	fcmovnbe st,st(7)
  41748f:	pop    ecx
  417490:	stc    
  417491:	jmp    0xe7ca752d
  417496:	jmp    0xff80:0x177207cd
  41749d:	call   0x718cf439
  4174a2:	loop   0x417429
  4174a4:	pop    ebx
  4174a5:	jns    0x417466
  4174a7:	inc    ebx
  4174a8:	xchg   edx,eax
  4174a9:	call   0xd601f145
  4174ae:	imul   edx,DWORD PTR [ebx+0x73],0xf3bd0e59
  4174b5:	inc    ecx
  4174b6:	test   cl,0xfc
  4174b9:	add    BYTE PTR [edx-0x12],dl
  4174bc:	(bad)  
  4174bd:	mov    DWORD PTR [eax],edi
  4174bf:	in     eax,0x36
  4174c1:	ret    
  4174c2:	bnd jp 0x417469
  4174c5:	add    ch,bh
  4174c7:	cld    
  4174c8:	mov    BYTE PTR [ebp-0x5492f],bh
  4174ce:	test   DWORD PTR [esi+0x50],esi
  4174d1:	inc    DWORD PTR [edx+0x17f04986]
  4174d7:	cld    
  4174d8:	mov    BYTE PTR [ebp-0x554c8],al
  4174de:	sbb    eax,0xd6f44186
  4174e3:	aas    
  4174e4:	in     eax,0xe8
  4174e6:	add    bh,cl
  4174e8:	sub    bh,dh
  4174ea:	jmp    DWORD PTR [esi]
  4174ec:	mov    ah,0x36
  4174ee:	sti    
  4174ef:	dec    ecx
  4174f0:	cmp    BYTE PTR [eax+0x193c3607],cl
  4174f6:	mov    eax,eax
  4174f8:	mov    ah,0x36
  4174fa:	inc    ebp
  4174fb:	popa   
  4174fc:	xor    DWORD PTR [ebx],eax
  4174fe:	xor    DWORD PTR [eax-0x5e140554],0xffffff91
  417505:	gs enter 0x47d,0x0
  41750a:	push   edi
  41750b:	add    eax,0x6d017a71
  417510:	jmp    0xeba9e9d3
  417515:	push   edi
  417516:	or     al,0xa8
  417518:	push   edx
  417519:	push   eax
  41751a:	push   0xffffff99
  41751c:	popf   
  41751d:	in     eax,0xa2
  41751f:	xchg   edi,eax
  417520:	add    eax,DWORD PTR [eax]
  417522:	cmp    ebp,esi
  417524:	xor    BYTE PTR [edi],cl
  417526:	cmp    DWORD PTR [ebp-0x15f28c08],eax
  41752c:	js     0x4174f4
  41752e:	call   0x3c2193
  417533:	xchg   esp,eax
  417534:	loopne 0x4174f2
  417536:	idiv   edi
  417538:	add    DWORD PTR [edi+0x57c6fcc6],eax
  41753e:	std    
  41753f:	add    ebp,DWORD PTR [ebx-0x17]
  417542:	xchg   esi,eax
  417543:	xchg   esp,eax
  417544:	pop    ecx
  417545:	add    DWORD PTR [ecx],esi
  417547:	aam    0xc1
  417549:	repz out 0x0,eax
  41754c:	jmp    0x417574
  41754e:	scas   eax,DWORD PTR es:[edi]
  41754f:	addr16 cld 
  417551:	pop    ecx
  417552:	add    DWORD PTR [eax],eax
  417554:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417555:	sbb    DWORD PTR [ecx+eax*1-0x44],ebp
  417559:	(bad)  
  41755a:	push   edx
  41755b:	lds    edx,FWORD PTR [ecx+0x1]
  41755e:	add    DWORD PTR [eax],eax
  417560:	xchg   esp,eax
  417561:	pop    ecx
  417562:	push   esp
  417563:	xor    eax,0xfd12efac
  417568:	mov    bl,0x76
  41756a:	imul   edx,eax,0xfd54666b
  417570:	sub    DWORD PTR [ecx],ebp
  417572:	imul   ecx,eax,0x8954365b
  417578:	call   0xc14:0x1ff7ce3e
  41757f:	mov    DWORD PTR [ecx+ebx*8],edx
  417582:	add    DWORD PTR [eax],eax
  417584:	xchg   esp,eax
  417585:	inc    ecx
  417586:	mov    bl,0x91
  417588:	xchg   ebp,eax
  417589:	pop    ecx
  41758a:	adc    al,al
  41758c:	pop    ss
  41758d:	and    al,0x5c
  41758f:	call   DWORD PTR [edx-0x40a2bf2b]
  417595:	mov    al,ds:0x394043f
  41759a:	lock out 0xc9,eax
  41759d:	dec    ebx
  41759e:	push   esp
  41759f:	std    
  4175a0:	in     al,0xdc
  4175a2:	mov    ebx,0xedd6e403
  4175a7:	cmp    ecx,DWORD PTR [edx+0x50810419]
  4175ad:	add    bl,dh
  4175af:	jle    0x4175b1
  4175b1:	push   esp
  4175b2:	aam    0xe5
  4175b4:	adc    DWORD PTR [ecx+ebx*2+0x2d],edx
  4175b8:	add    edx,DWORD PTR [eax+eax*1-0x13ae7322]
  4175bf:	cdq    
  4175c0:	scas   al,BYTE PTR es:[edi]
  4175c1:	les    ebx,FWORD PTR [ebp-0x6b]
  4175c4:	fnstsw WORD PTR [ebp+eax*2-0x43e35045]
  4175cb:	add    dh,ah
  4175cd:	sbb    al,0xf9
  4175cf:	mov    WORD PTR [edx],ds
  4175d1:	arpl   sp,bp
  4175d3:	out    0x3,eax
  4175d5:	xchg   esp,eax
  4175d6:	aad    0xab
  4175d8:	jmp    0x34c9dcaf
  4175dd:	leave  
  4175de:	dec    esi
  4175df:	jb     0x417634
  4175e1:	jge    0x417638
  4175e3:	jae    0x417600
  4175e5:	sbb    DWORD PTR [esi],0x75
  4175e8:	and    eax,0x80e2ae1f
  4175ed:	sub    eax,0x7ed8f704
  4175f2:	jnp    0x4175de
  4175f4:	mov    ah,dl
  4175f6:	sar    ebp,cl
  4175f8:	xchg   BYTE PTR [ebp+eax*1+0x41],dl
  4175fc:	or     ah,ah
  4175fe:	jnp    0x41762e
  417600:	in     al,dx
  417601:	ror    DWORD PTR [ebp-0x2c],cl
  417604:	cpuid  
  417606:	shl    dh,0x86
  417609:	pop    eax
  41760a:	std    
  41760b:	arpl   WORD PTR [eax+eiz*8-0x2d],ax
  41760f:	sub    eax,DWORD PTR [edi+0x21e1f955]
  417615:	add    al,bl
  417617:	xor    edi,DWORD PTR ds:0x8e0d785c
  41761d:	push   ebx
  41761e:	cdq    
  41761f:	xchg   ebp,eax
  417620:	and    al,BYTE PTR cs:[ebp+0x570f055b]
  417627:	aad    0xff
  417629:	sbb    al,0xb3
  41762b:	mov    esp,0x5aad923
  417630:	data16 and BYTE PTR [ecx],bl
  417633:	out    dx,eax
  417634:	(bad)  
  417635:	call   0xc38447d1
  41763a:	cdq    
  41763b:	pop    eax
  41763c:	add    ch,BYTE PTR [esi]
  41763e:	addr16 dec ebx
  417640:	mov    DWORD PTR [ecx],edi
  417642:	xchg   ebx,eax
  417643:	push   ecx
  417644:	je     0x417647
  417646:	mov    DWORD PTR [esi],ebx
  417648:	jle    0x417651
  41764a:	adc    eax,0xdb6a03af
  41764f:	add    DWORD PTR [esp+ebx*4],ebx
  417652:	in     al,0x78
  417654:	add    DWORD PTR [eax+edx*2-0x2c],esp
  417658:	adc    al,0x6a
  41765a:	pop    eax
  41765b:	clc    
  41765c:	imul   edi,ecx,0xe7457b07
  417662:	pop    es
  417663:	dec    ebp
  417664:	adc    edi,DWORD PTR [ebp+0x6a000dbd]
  41766a:	pop    esp
  41766b:	cld    
  41766c:	sub    BYTE PTR [ecx],0xcc
  41766f:	repz inc edx
  417671:	push   0x5a
  417673:	clc    
  417674:	cmp    BYTE PTR [edi],cl
  417676:	les    esi,FWORD PTR [edx]
  417678:	push   esi
  417679:	rol    DWORD PTR [eax],0xdc
  41767c:	push   cs
  41767d:	std    
  41767e:	into   
  41767f:	mov    eax,ds:0x33245e40
  417684:	aas    
  417685:	add    al,0xe9
  417687:	cmp    eax,0xc6f7b565
  41768c:	dec    ebx
  41768d:	mov    al,0xe8
  41768f:	retf   0x5650
  417692:	jb     0x4176df
  417694:	and    DWORD PTR [eax],ecx
  417696:	fisttp DWORD PTR ss:[edx-0x77]
  41769a:	cmp    DWORD PTR [edi+esi*2-0x2f35a4ec],edx
  4176a1:	add    BYTE PTR ds:0x86b3,ch
  4176a6:	push   eax
  4176a7:	mov    ebp,ebp
  4176a9:	int3   
  4176aa:	cmp    esp,DWORD PTR [edi-0x2ccfed1]
  4176b0:	lods   eax,DWORD PTR ds:[esi]
  4176b1:	sub    esi,esi
  4176b3:	icebp  
  4176b4:	and    al,0x10
  4176b6:	add    esi,ebx
  4176b8:	xor    al,0x2f
  4176ba:	test   DWORD PTR [edx+0x2f],ebp
  4176bd:	pop    ss
  4176be:	mov    edi,DWORD PTR ds:0xaf126f1
  4176c4:	addr16 adc eax,0xb55830f
  4176ca:	mov    cl,cl
  4176cc:	add    eax,0x5ce5414b
  4176d1:	push   DWORD PTR [ebx+ebx*4+0x77]
  4176d5:	sti    
  4176d6:	jg     0x41765e
  4176d8:	idiv   BYTE PTR [edi+0x5b920640]
  4176de:	ret    0xb500
  4176e1:	add    BYTE PTR [edx+0x4af74711],cl
  4176e7:	inc    ecx
  4176e8:	repz cli 
  4176ea:	shl    DWORD PTR [ebp-0x3d],0x77
  4176ee:	sti    
  4176ef:	jg     0x41769d
  4176f1:	stos   BYTE PTR es:[edi],al
  4176f2:	in     eax,0x33
  4176f4:	in     eax,dx
  4176f5:	stos   BYTE PTR es:[edi],al
  4176f6:	loopne 0x41774d
  4176f8:	es loopne 0x417777
  4176fb:	in     al,dx
  4176fc:	xchg   ecx,eax
  4176fd:	(bad)  
  4176fe:	(bad)  
  4176ff:	dec    esi
  417701:	xchg   BYTE PTR [eax-0x77769e8b],cl
  417707:	cli    
  417708:	push   es
  417709:	sbb    ch,ah
  41770b:	sub    al,0x4a
  41770d:	add    BYTE PTR [eax],al
  41770f:	mov    esi,DWORD PTR [eax+0x65463718]
  417715:	add    DWORD PTR [edi+0x34],edi
  417718:	pop    edx
  417719:	add    BYTE PTR [eax],al
  41771b:	not    BYTE PTR [esp+ebx*1+0x251f0224]
  417722:	in     al,dx
  417723:	xchg   cl,bl
  417725:	jno    0x4176ff
  417727:	or     al,0xf
  417729:	and    eax,0xa1d986f0
  41772e:	jge    0x417773
  417730:	pop    esp
  417731:	loope  0x4176df
  417733:	retf   
  417734:	or     eax,0x8b89ed9d
  417739:	(bad)  
  41773a:	in     al,0xef
  41773c:	xchg   esp,eax
  41773d:	(bad)  
  41773e:	in     al,0xeb
  417740:	xchg   esp,eax
  417741:	sub    dl,BYTE PTR [edi-0x62f2ff41]
  417747:	dec    ebp
  417748:	cmp    esp,0x41850093
  41774e:	add    DWORD PTR [eax+eax*1],eax
  417751:	fwait
  417752:	shl    DWORD PTR [ebx+0x51],cl
  417755:	adc    BYTE PTR [ecx-0x2b4f02ff],bl
  41775b:	sbb    cl,BYTE PTR [ecx-0x49ffa6ab]
  417761:	push   ebx
  417762:	pop    eax
  417763:	add    BYTE PTR [esi-0x1fbda8ad],dh
  417769:	mov    WORD PTR [esi+0x42],cs
  41776c:	xor    BYTE PTR [ebx],0x56
  41776f:	mov    ah,0x86
  417771:	push   ecx
  417772:	xor    eax,0x5a098300
  417777:	add    DWORD PTR [eax],eax
  417779:	pop    ss
  41777a:	in     eax,dx
  41777b:	push   ebx
  41777c:	ret    
  41777d:	xlat   BYTE PTR ds:[ebx]
  41777e:	pop    ecx
  41777f:	add    DWORD PTR ds:0xe410,ecx
  417785:	xchg   esp,eax
  417786:	push   edx
  417787:	xchg   edi,eax
  417788:	inc    ebp
  417789:	nop
  41778a:	into   
  41778b:	mov    esi,0x701c1d6b
  417790:	mov    edx,edx
  417792:	sub    eax,0x34437a
  417797:	jb     0x417762
  417799:	repz pop ss
  41779b:	scas   eax,DWORD PTR es:[edi]
  41779c:	jp     0x41777d
  41779e:	cwde   
  41779f:	bound  edi,QWORD PTR [esi+0x7a9f1793]
  4177a5:	xlat   BYTE PTR ds:[ebx]
  4177a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4177a7:	jo     0x417767
  4177a9:	add    bh,ch
  4177ab:	jbe    0x41775f
  4177ad:	sbb    al,0x5c
  4177af:	sti    
  4177b0:	cmp    al,0xc8
  4177b2:	xchg   esi,eax
  4177b3:	inc    ecx
  4177b4:	xchg   ebx,edi
  4177b6:	sbb    bh,BYTE PTR [ebp-0x451dff6a]
  4177bc:	in     al,0xfc
  4177be:	push   edx
  4177bf:	sti    
  4177c0:	pushf  
  4177c1:	rcl    BYTE PTR [ebx-0x6ebc5b87],0x92
  4177c8:	scas   al,BYTE PTR es:[edi]
  4177c9:	or     BYTE PTR [ebx],bh
  4177cb:	pusha  
  4177cc:	out    dx,eax
  4177cd:	cld    
  4177ce:	xor    bh,BYTE PTR [ecx-0x54]
  4177d1:	inc    edi
  4177d2:	sbb    eax,0xad6ad6c5
  4177d7:	cmp    BYTE PTR ds:[ebx+0x13],cl
  4177db:	lds    edx,FWORD PTR [edx+0x7c]
  4177de:	sbb    al,BYTE PTR [edi+eiz*8-0x5b866bfd]
  4177e5:	mov    ecx,DWORD PTR ds:0x94035f82
  4177eb:	add    BYTE PTR [esi+edi*4+0xb],ch
  4177ef:	inc    ebx
  4177f0:	lods   al,BYTE PTR ds:[esi]
  4177f1:	imul   ebp,DWORD PTR [ebx+0x1b03e74a],0xffffffc5
  4177f8:	mov    ds:0xa450874f,al
  4177fd:	ret    
  4177fe:	xchg   ebx,eax
  4177ff:	test   DWORD PTR [edi-0x1e93e701],esp
  417805:	add    edx,DWORD PTR [ecx+edi*8+0xac566e]
  41780c:	out    0x82,eax
  41780e:	add    BYTE PTR [ecx+0x3],bl
  417811:	add    BYTE PTR [ebx+eiz*1+0x1],ah
  417815:	or     eax,0x4b835e77
  41781a:	cdq    
  41781b:	pop    ss
  41781c:	push   edx
  41781d:	data16 out dx,al
  41781f:	sbb    esp,DWORD PTR [edx-0x1]
  417822:	call   0x738f7be
  417827:	inc    ebx
  417828:	jle    0x41780a
  41782a:	call   0x80c278c6
  41782f:	cmp    al,0xce
  417831:	pop    eax
  417832:	push   0xffffffd9
  417834:	fnsave [ebx+0x17]
  417837:	pop    ss
  417838:	push   edx
  417839:	push   0xb5fd23dc
  41783e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41783f:	cwde   
  417840:	sti    
  417841:	mov    ch,0xa6
  417843:	xchg   ebp,eax
  417844:	mov    eax,esp
  417846:	loope  0x417846
  417848:	mov    al,BYTE PTR [ecx]
  41784a:	inc    ecx
  41784b:	pop    ecx
  41784c:	jle    0x41784d
  41784e:	call   0xd84efea
  417853:	sar    BYTE PTR [ecx+0x49bde869],1
  417859:	(bad)  
  41785a:	pushf  
  41785b:	out    dx,eax
  41785c:	js     0x417827
  41785e:	mov    bh,0x62
  417860:	int    0xf
  417862:	push   ss
  417863:	in     eax,dx
  417864:	cmc    
  417865:	cld    
  417866:	xchg   esp,eax
  417867:	mov    edi,0x4b079061
  41786c:	dec    ebx
  41786d:	add    DWORD PTR [ecx],0x4f83fb99
  417873:	add    BYTE PTR [ecx+ecx*2-0x2ba79b03],ah
  41787a:	or     BYTE PTR [edx+ebp*4],ah
  41787d:	inc    ebp
  41787e:	std    
  41787f:	ficom  WORD PTR [edx-0x6ffe7f82]
  417885:	add    BYTE PTR [ecx],al
  417887:	dec    esp
  417888:	jl     0x4178ec
  41788a:	inc    ebx
  41788b:	add    BYTE PTR [ebp+edi*8-0x1],ch
  41788f:	push   cs
  417890:	jmp    0x4178d4
  417892:	add    DWORD PTR [edi],ecx
  417894:	jmp    0x417828
  417896:	add    al,cl
  417898:	dec    ebp
  417899:	inc    ebp
  41789a:	or     dl,al
  41789c:	outs   dx,BYTE PTR ds:[esi]
  41789d:	mov    ebp,0x304d4536
  4178a2:	or     cl,BYTE PTR [ebx+0x3c7f008b]
  4178a8:	scas   eax,DWORD PTR es:[edi]
  4178a9:	std    
  4178aa:	or     cl,BYTE PTR [ebp-0x4e]
  4178b0:	mov    esi,0xbe00f158
  4178b5:	mov    esp,0xffb80f60
  4178ba:	cld    
  4178bb:	jmp    FWORD PTR ds:0x7e284dc6
  4178c1:	pop    eax
  4178c2:	adc    DWORD PTR [eax],eax
  4178c4:	int3   
  4178c5:	mov    ch,0x7e
  4178c7:	jle    0x417856
  4178c9:	add    al,0x85
  4178cb:	inc    ebp
  4178cc:	mov    ebp,0x33ec48cc
  4178d1:	pop    ds
  4178d2:	or     esi,DWORD PTR [esi+0x51b349fc]
  4178d8:	add    ah,ch
  4178da:	ret    
  4178db:	fisttp WORD PTR [eax]
  4178dd:	out    0xbe,al
  4178df:	ss inc ebp
  4178e1:	lods   eax,DWORD PTR ds:[esi]
  4178e2:	xor    DWORD PTR [esi],ecx
  4178e4:	add    esi,ebx
  4178e6:	and    bl,bh
  4178e8:	inc    ebp
  4178e9:	leave  
  4178ea:	lds    eax,FWORD PTR [eax+0x14]
  4178ed:	inc    esp
  4178ee:	inc    eax
  4178ef:	jmp    0x7c5e742f
  4178f4:	fidiv  WORD PTR [esi]
  4178f6:	cmp    BYTE PTR [ecx],dl
  4178f8:	cmp    edi,ebx
  4178fa:	sbb    al,0xb
  4178fc:	(bad)  
  4178fd:	repnz add eax,DWORD PTR [eax]
  417900:	add    BYTE PTR [esi],al
  417902:	inc    eax
  417903:	jmp    0x54560d91
  417908:	cmp    edx,ebx
  41790a:	add    esi,edx
  41790c:	dec    ebx
  41790d:	unpckhps xmm2,XMMWORD PTR [ecx+ebp*1-0x26]
  417912:	std    
  417913:	js     0x417958
  417915:	fild   DWORD PTR fs:[ebx+0x2]
  417919:	(bad)
  41791d:	pop    ss
  41791e:	call   0x1609:0x4d535002
  417925:	aam    0x59
  417927:	stos   BYTE PTR es:[edi],al
  417928:	push   esi
  417929:	sbb    DWORD PTR [edx+0xd0f2bd5],ebx
  41792f:	push   esp
  417930:	or     eax,0xb5fc58ea
  417935:	lds    ebx,FWORD PTR [eax+0x42]
  417938:	loopne 0x4178c6
  41793a:	bound  edi,QWORD PTR [edi]
  41793c:	add    DWORD PTR [eax],eax
  41793e:	push   esp
  41793f:	and    eax,ebp
  417941:	setno  BYTE PTR [eax+edi*2+0x56]
  417946:	cwde   
  417947:	fimul  DWORD PTR [edi]
  417949:	adc    BYTE PTR [esi+eiz*1+0x5995ff7e],0x1
  417951:	cmp    DWORD PTR [ecx+0xd],0x15a3904
  417958:	shl    DWORD PTR [ebx-0x2a262f1],cl
  41795e:	push   ecx
  41795f:	inc    ebp
  417960:	jp     0x4179a5
  417962:	(bad)  
  417963:	rol    ah,cl
  417965:	adc    ecx,DWORD PTR [edi+0x6b7b2197]
  41796b:	loop   0x417931
  41796d:	jmp    0x417986
  41796f:	sbb    al,BYTE PTR [edx]
  417971:	xchg   DWORD PTR [ecx-0xb],ebx
  417974:	jbe    0x4179b9
  417976:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417977:	pop    edx
  417978:	ret    
  417979:	and    ecx,DWORD PTR ds:0xd481519d
  41797f:	add    cl,ch
  417981:	mov    bl,0x90
  417983:	int    0xca
  417985:	dec    esp
  417986:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417987:	or     ch,bh
  417989:	ret    
  41798a:	sub    DWORD PTR [eax-0x32ab78d1],0xfffffff8
  417991:	js     0x417972
  417993:	push   eax
  417994:	out    dx,al
  417995:	xchg   ebp,eax
  417996:	imul   esi,esi,0x7c
  417999:	mov    edx,0xfbc74062
  41799e:	mov    WORD PTR [ecx-0x16],es
  4179a1:	inc    ebx
  4179a2:	add    BYTE PTR [ebp-0x61310943],cl
  4179a8:	jnp    0x4179cf
  4179aa:	add    BYTE PTR ds:0x89036804,dl
  4179b0:	jne    0x417a18
  4179b2:	add    dl,BYTE PTR [eax+eax*1+0x27e66a]
  4179b9:	jbe    0x417981
  4179bb:	xchg   DWORD PTR [ebx+0x24],edi
  4179be:	clc    
  4179bf:	pop    esp
  4179c0:	mov    esi,0xf745d006
  4179c5:	xchg   esp,eax
  4179c6:	les    ecx,FWORD PTR [edx]
  4179c8:	neg    BYTE PTR [esp+edi*4-0x4b8be6b]
  4179cf:	mov    WORD PTR [ecx-0x16],es
  4179d2:	dec    ebx
  4179d3:	adc    eax,0x670332c5
  4179d8:	stc    
  4179d9:	data16 or al,0x48
  4179dc:	mul    DWORD PTR [ebx-0x57]
  4179df:	xchg   esp,eax
  4179e0:	add    bh,ah
  4179e2:	sbb    cl,0x2
  4179e5:	push   0xffffffce
  4179e7:	iret   
  4179e8:	loop   0x4179cf
  4179ea:	xchg   BYTE PTR [edi-0x1c],ah
  4179ed:	out    0x3,al
  4179ef:	or     eax,0x63c3cabd
  4179f4:	(bad)  
  4179f6:	dec    esp
  4179f7:	daa    
  4179f8:	in     al,0xff
  4179fa:	popa   
  4179fb:	push   0xe1d17345
  417a00:	inc    ebx
  417a01:	jae    0x4179fc
  417a03:	adc    bh,BYTE PTR [eax]
  417a05:	std    
  417a06:	push   esp
  417a07:	add    BYTE PTR [ebp+eax*2+0x51dfe173],cl
  417a0e:	cld    
  417a0f:	into   
  417a10:	iret   
  417a11:	pop    ebp
  417a12:	clc    
  417a13:	sets   BYTE PTR [eax]
  417a16:	mov    DWORD PTR [edi-0x1c],edx
  417a19:	add    BYTE PTR [eax],al
  417a1b:	jmp    0x654ead34
  417a20:	mov    cl,0x46
  417a22:	std    
  417a23:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417a24:	dec    edi
  417a25:	mov    WORD PTR [ebp-0x1b],es
  417a28:	dec    esi
  417a29:	mov    WORD PTR [ebp-0x14],cs
  417a2c:	fsub   DWORD PTR [eax+0x8]
  417a2f:	loop   0x417a01
  417a31:	jge    0x417a76
  417a33:	sbb    DWORD PTR [ebp-0x681602bd],0x98de83f3
  417a3d:	add    BYTE PTR [eax],al
  417a3f:	mov    dl,0x51
  417a41:	add    cl,BYTE PTR ds:0xfd470e6d
  417a47:	jmp    0xea355c5e
  417a4c:	sbb    cl,dl
  417a4e:	out    dx,eax
  417a4f:	(bad)  
  417a50:	inc    BYTE PTR [edx+0x435f4670]
  417a56:	mov    DWORD PTR [edi-0x229c8071],esp
  417a5c:	xchg   edi,eax
  417a5d:	jg     0x417add
  417a5f:	or     DWORD PTR [eax-0x21eabc83],edx
  417a65:	pop    ds
  417a66:	or     eax,0xb5f4c857
  417a6b:	mov    ecx,0xdf859800
  417a70:	loope  0x417a2c
  417a72:	aaa    
  417a73:	cmp    DWORD PTR [eax],eax
  417a75:	call   0xbe52ee33
  417a7a:	aas    
  417a7b:	and    edi,edi
  417a7d:	lock push ebp
  417a7f:	mov    BYTE PTR [ebp-0x3f],cl
  417a82:	les    eax,FWORD PTR [eax-0x14]
  417a85:	mov    dh,0x8a
  417a87:	sbb    eax,0x40c64b7c
  417a8c:	adc    al,0xa6
  417a8e:	inc    edx
  417a8f:	sbb    eax,0xfaebd80f
  417a94:	call   FWORD PTR [edx-0x3a]
  417a97:	inc    eax
  417a98:	in     al,dx
  417a99:	in     al,0x40
  417a9b:	in     eax,dx
  417a9c:	cmp    esi,DWORD PTR [ebx-0x9b88a1c]
  417aa2:	inc    eax
  417aa3:	in     eax,dx
  417aa4:	sub    eax,DWORD PTR [ebx+0x2d458520]
  417aaa:	jle    0x417a6c
  417aac:	add    bh,BYTE PTR [ebp-0x3b]
  417aaf:	inc    eax
  417ab0:	in     al,dx
  417ab1:	scas   al,BYTE PTR es:[edi]
  417ab2:	rol    DWORD PTR [ecx],0x50
  417ab5:	sbb    dl,BYTE PTR [eax+0x35]
  417ab8:	push   ss
  417ab9:	jge    0x417ab7
  417abb:	push   esp
  417abc:	pop    ecx
  417abd:	mov    al,0xc1
  417abf:	jo     0x417ae8
  417ac1:	mov    dh,0x88
  417ac3:	in     eax,dx
  417ac4:	rdpmc  
  417ac6:	dec    esp
  417ac7:	or     al,0xb6
  417ac9:	cmp    al,0xfc
  417acb:	mov    esp,0xbf45f5e2
  417ad0:	mov    eax,DWORD PTR [eax]
  417ad2:	adc    ebp,0xffffffff
  417ad5:	(bad)  
  417ad6:	std    
  417ad7:	in     eax,0x41
  417ad9:	add    al,0xa2
  417adb:	sbb    DWORD PTR [edi],edx
  417add:	shr    BYTE PTR ds:0x20f440c4,0x3d
  417ae4:	cmp    BYTE PTR [esi-0x1b],cl
  417ae7:	xor    DWORD PTR [esi-0x5530f75],esi
  417aed:	inc    ebp
  417aee:	xchg   esp,eax
  417aef:	inc    ebx
  417af0:	jl     0x417b35
  417af2:	(bad)
  417af6:	outs   dx,DWORD PTR ds:[esi]
  417af7:	xchg   ebp,eax
  417af8:	and    DWORD PTR ds:0xfd471219,ecx
  417afe:	mov    ds:0x17ebbfe1,eax
  417b03:	pop    ss
  417b04:	add    eax,DWORD PTR [edi+0x437b2dd9]
  417b0a:	test   BYTE PTR [edi-0x41],dl
  417b0d:	and    ecx,DWORD PTR ds:0x54815415
  417b13:	pop    eax
  417b14:	mov    cl,0xfc
  417b16:	jmp    0xac54c248
  417b1b:	sub    eax,ecx
  417b1d:	(bad)  
  417b1e:	mov    esp,0x8bc07cf0
  417b23:	fsub   QWORD PTR [ebp+0x7b9b53fe]
  417b29:	dec    ebx
  417b2a:	inc    esp
  417b2b:	push   ebx
  417b2c:	(bad)  
  417b2d:	aas    
  417b2e:	xchg   ebp,eax
  417b2f:	pop    edx
  417b30:	pop    DWORD PTR [edi]
  417b32:	push   ebp
  417b33:	jns    0x417b31
  417b35:	or     BYTE PTR [eax],al
  417b37:	push   ebp
  417b38:	iret   
  417b39:	jns    0x417acf
  417b3b:	xchg   esp,eax
  417b3c:	pop    ecx
  417b3d:	add    DWORD PTR [ecx],ebp
  417b3f:	aad    0x55
  417b41:	push   eax
  417b42:	fdivr  DWORD PTR [edi-0x67]
  417b45:	les    eax,FWORD PTR [esi+0x14cca559]
  417b4b:	or     ebx,DWORD PTR [ebp+0x455988ed]
  417b51:	or     al,0x46
  417b53:	mov    ah,0x35
  417b55:	xchg   esp,eax
  417b56:	out    0x64,eax
  417b58:	mov    ebx,0x9cd3fd46
  417b5d:	dec    ebp
  417b5e:	jmp    ebx
  417b60:	pop    ecx
  417b61:	add    DWORD PTR [edx-0x69],ebp
  417b64:	jno    0x417bc0
  417b66:	outs   dx,BYTE PTR ds:[esi]
  417b67:	rol    BYTE PTR [eax],cl
  417b69:	es dec ecx
  417b6b:	cdq    
  417b6c:	mov    ah,BYTE PTR [esi-0x59756efe]
  417b72:	add    eax,0xfcdf60fb
  417b77:	bnd jne 0x417b55
  417b7a:	add    edx,DWORD PTR [ebx]
  417b7c:	scas   al,BYTE PTR es:[edi]
  417b7d:	idiv   BYTE PTR [edx+0x1a]
  417b80:	jge    0x417b69
  417b82:	add    edx,DWORD PTR [edi+eax*1-0xaf0106b]
  417b89:	lods   eax,DWORD PTR ds:[esi]
  417b8a:	rol    ebx,0x1
  417b8d:	out    0x3,eax
  417b8f:	xchg   esp,eax
  417b90:	pop    ecx
  417b91:	xchg   BYTE PTR [edx],al
  417b93:	xchg   esp,eax
  417b94:	add    BYTE PTR [edx-0x47],ah
  417b97:	lahf   
  417b98:	inc    ecx
  417b99:	leave  
  417b9a:	add    eax,0xd2ad1300
  417b9f:	jl     0x417b6b
  417ba1:	lock add DWORD PTR [ecx*1-0x2883a814],esi
  417ba9:	in     al,dx
  417baa:	outs   dx,DWORD PTR ds:[esi]
  417bab:	out    dx,eax
  417bac:	xchg   ebx,eax
  417bad:	ja     0x417be4
  417baf:	clc    
  417bb0:	or     al,0x37
  417bb2:	ret    0xb3b9
  417bb5:	jns    0x417bd2
  417bb7:	hlt    
  417bb8:	xchg   edi,eax
  417bb9:	ja     0x417be7
  417bbb:	push   esp
  417bbc:	arpl   WORD PTR [ebp-0x7fef072a],di
  417bc2:	call   0xa7c10fca
  417bc7:	add    eax,0x5af6bd1b
  417bcc:	xchg   DWORD PTR [ecx],eax
  417bce:	out    0x3,eax
  417bd0:	or     eax,0x94037b82
  417bd5:	add    BYTE PTR [edx],bl
  417bd7:	cmp    ebp,DWORD PTR [ebp-0xe8009b7]
  417bdd:	in     al,0xe6
  417bdf:	add    ebp,DWORD PTR [ebx-0x2313004d]
  417be5:	jge    0x417bc5
  417be7:	int3   
  417be8:	xchg   edi,eax
  417be9:	add    BYTE PTR [ecx-0x6b8db10a],cl
  417bef:	jmp    0xaeca7c8b
  417bf4:	mov    DWORD PTR [ecx+0x43e7ebe0],0xca5cf575
  417bfe:	or     edi,esi
  417c00:	add    BYTE PTR [ecx-0x6856ea4e],dh
  417c06:	jns    0x417c4d
  417c08:	aad    0x10
  417c0a:	les    eax,FWORD PTR [edi]
  417c0c:	jo     0x417c63
  417c0e:	repnz mov BYTE PTR [eax+eiz*8],ah
  417c12:	jg     0x417bd8
  417c14:	in     eax,0xf8
  417c16:	mov    ebp,0x4789c017
  417c1b:	std    
  417c1c:	(bad)  
  417c1d:	arpl   WORD PTR [ebp+eax*2+0x17bde0e8],cx
  417c24:	push   0xffffff9b
  417c26:	(bad)  
  417c27:	out    0xb,al
  417c29:	fild   WORD PTR [ebx-0x3]
  417c2c:	jb     0x417c83
  417c2e:	push   ds
  417c2f:	inc    eax
  417c30:	cmp    DWORD PTR [esi+0x42],ebx
  417c33:	addr16 jmp 0x5c594a0b
  417c39:	add    eax,DWORD PTR [ecx]
  417c3b:	push   esi
  417c3c:	xchg   BYTE PTR [ebp-0xe],al
  417c3f:	mov    BYTE PTR [edx+0x760bcddb],dh
  417c45:	inc    ebp
  417c46:	cli    
  417c47:	out    0xaa,eax
  417c49:	pop    esi
  417c4a:	inc    ebx
  417c4b:	std    
  417c4c:	push   0x58
  417c4e:	inc    ecx
  417c4f:	jno    0x417c5e
  417c51:	(bad)  
  417c52:	jmp    0xcc94d352
  417c57:	and    ah,BYTE PTR [eax+ebx*2-0x34]
  417c5b:	or     BYTE PTR [eax],al
  417c5d:	nop
  417c5e:	pop    edx
  417c5f:	stc    
  417c60:	jmp    DWORD PTR [edx+0xb08249]
  417c66:	mov    esp,edi
  417c68:	dec    DWORD PTR [esi]
  417c6a:	dec    ebx
  417c6b:	cmp    esi,0xff896b0e
  417c71:	ror    BYTE PTR [ebp-0x513ef7bc],0xb5
  417c78:	jg     0x417cb9
  417c7a:	jmp    0xbc2d2ab0
  417c7f:	mov    BYTE PTR [ebp+0x70],0x24
  417c83:	aas    
  417c84:	add    eax,0xc90e280
  417c89:	test   BYTE PTR [eax+0x6bfffd59],cl
  417c8f:	inc    eax
  417c90:	sbb    eax,0x79807201
  417c95:	sbb    eax,0xb60afd6d
  417c9a:	mov    edx,0xa2b60afb
  417c9f:	(bad)  
  417ca0:	mov    esp,0xbe4665e0
  417ca5:	add    esp,DWORD PTR ds:0x89543b7d
  417cab:	test   al,0x86
  417cad:	xchg   BYTE PTR [ebp-0x51000003],bh
  417cb3:	add    bh,bh
  417cb5:	mov    BYTE PTR [eax+0x4c],ch
  417cb8:	out    0x93,al
  417cba:	pop    es
  417cbb:	mov    edx,0x20788bfa
  417cc0:	inc    eax
  417cc1:	push   eax
  417cc2:	xchg   esp,edi
  417cc4:	imul   eax,DWORD PTR [eax],0x8d1530a2
  417cca:	add    BYTE PTR [edx-0x1700aa03],ch
  417cd0:	dec    esp
  417cd1:	mov    bl,cl
  417cd3:	bound  esi,QWORD PTR [eax]
  417cd5:	or     edi,edi
  417cd7:	xchg   esp,eax
  417cd8:	and    al,0xf9
  417cda:	out    0xa8,eax
  417cdc:	lods   eax,DWORD PTR ds:[esi]
  417cdd:	inc    ebp
  417cde:	std    
  417cdf:	pop    ss
  417ce0:	mov    edi,0xa4180d03
  417ce5:	in     al,0xff
  417ce7:	fisttp DWORD PTR [ebx-0x14]
  417cea:	sti    
  417ceb:	rcl    DWORD PTR [ecx],cl
  417ced:	test   BYTE PTR [ebx+0x3fb26],0x81
  417cf4:	inc    ebx
  417cf5:	inc    ebp
  417cf6:	std    
  417cf7:	mov    ebx,0x8f3b1262
  417cfc:	repz inc ebp
  417cfe:	std    
  417cff:	and    BYTE PTR [ebx],ch
  417d01:	or     BYTE PTR [edx],bl
  417d03:	mov    al,ds:0x71744341
  417d08:	aam    0x40
  417d0a:	je     0x417cab
  417d0c:	ins    BYTE PTR es:[edi],dx
  417d0d:	jecxz  0x417d0a
  417d0f:	mov    esp,DWORD PTR [edi]
  417d11:	repz sbb BYTE PTR [eax-0x74fffbfb],0x9f
  417d19:	mov    ebx,0xb397a2fe
  417d1e:	add    DWORD PTR [ebp+0x4a],edx
  417d21:	cld    
  417d22:	or     BYTE PTR [ebp+0x2b],dl
  417d25:	dec    ecx
  417d26:	sbb    BYTE PTR [ebx+0x3f93d01d],0x56
  417d2d:	hlt    
  417d2e:	mov    ch,0x0
  417d30:	shr    DWORD PTR [eax],cl
  417d32:	hlt    
  417d33:	mov    ch,0xd3
  417d35:	sub    eax,DWORD PTR [edx-0x20]
  417d38:	mov    WORD PTR [edx],fs
  417d3a:	inc    edx
  417d3b:	add    DWORD PTR [edx+ebp*4],ebp
  417d3e:	add    dl,BYTE PTR [eax+eiz*4-0x6b]
  417d42:	dec    esi
  417d43:	inc    ebx
  417d44:	je     0x417d6e
  417d46:	hlt    
  417d47:	or     BYTE PTR [eax+0x56],0x1
  417d4b:	add    BYTE PTR [edi],dl
  417d4d:	addr16 jmp esi
  417d50:	or     eax,DWORD PTR [ecx]
  417d52:	pusha  
  417d53:	inc    ebp
  417d54:	add    DWORD PTR [eax],edx
  417d56:	xchg   ebp,eax
  417d57:	mov    ebp,0xb59d0efa
  417d5c:	xchg   ebp,eax
  417d5d:	inc    ecx
  417d5e:	inc    edi
  417d5f:	cld    
  417d60:	pushf  
  417d61:	inc    ecx
  417d62:	adc    ch,BYTE PTR [ebx*4+0x15f4cede]
  417d69:	sbb    edx,ebx
  417d6b:	add    edx,DWORD PTR [ebx+edi*8+0x5b44cb8c]
  417d72:	jo     0x417d1a
  417d74:	dec    ebx
  417d75:	sub    esi,DWORD PTR ds:0x2c307f81
  417d7b:	shl    DWORD PTR [ebx+0xe7fde3f],0x1
  417d82:	out    0x3,eax
  417d84:	xchg   ecx,eax
  417d85:	jbe    0x417d2d
  417d87:	add    cl,BYTE PTR ds:0x177a82cf
  417d8d:	lods   al,BYTE PTR ds:[esi]
  417d8e:	in     eax,dx
  417d8f:	inc    esp
  417d90:	mov    DWORD PTR [ebx+0x1a00f82d],ecx
  417d96:	test   DWORD PTR [edi+0x45],edx
  417d99:	jns    0x417dda
  417d9b:	bound  edi,QWORD PTR [ebp+0x7a9eebfb]
  417da1:	pop    ds
  417da2:	mov    eax,0x8b6144c5
  417da7:	sub    al,0xfc
  417da9:	lods   al,BYTE PTR ds:[esi]
  417daa:	dec    eax
  417dab:	pusha  
  417dac:	jle    0x417d76
  417dae:	aas    
  417daf:	scas   al,BYTE PTR es:[edi]
  417db0:	inc    esp
  417db1:	adc    ecx,DWORD PTR [ebp+0x3f414523]
  417db7:	jb     0x417df1
  417db9:	ins    DWORD PTR es:[edi],dx
  417dba:	dec    eax
  417dbb:	out    0x8d,al
  417dbd:	fld    DWORD PTR [edx]
  417dbf:	test   al,0x63
  417dc1:	pushf  
  417dc2:	mov    DWORD PTR [esp+eax*4],esi
  417dc5:	xchg   ecx,eax
  417dc6:	jbe    0x417df6
  417dc8:	add    DWORD PTR [ebp+0x21e60041],ecx
  417dce:	int    0x2
  417dd0:	pusha  
  417dd1:	dec    edx
  417dd2:	(bad)  
  417dd3:	or     eax,0xbf03409f
  417dd8:	dec    ecx
  417dd9:	inc    DWORD PTR [edi]
  417ddb:	mov    edi,0x89933260
  417de0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417de1:	out    0x95,eax
  417de3:	sub    DWORD PTR [ebx],ebp
  417de5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417de6:	cmp    BYTE PTR [edi-0x7976a45c],al
  417dec:	ins    DWORD PTR es:[edi],dx
  417ded:	xchg   edi,eax
  417dee:	add    BYTE PTR [eax],al
  417df0:	pusha  
  417df1:	or     al,BYTE PTR [edi+0x2f6f89]
  417df7:	add    cl,ch
  417df9:	add    BYTE PTR [edx-0x75],al
  417dfc:	push   0xc53d5816
  417e01:	fs iret 
  417e03:	cmp    edi,ebp
  417e05:	push   es
  417e06:	xchg   esi,eax
  417e07:	add    BYTE PTR [eax],al
  417e09:	jmp    0xf6cd412c
  417e0e:	sub    DWORD PTR [esi],0x8197aac3
  417e14:	shl    dh,0x26
  417e17:	addr16 add al,0xe9
  417e1a:	xchg   edi,eax
  417e1b:	or     ecx,DWORD PTR [eax-0x2c1852a]
  417e21:	push   0xffffffdf
  417e23:	push   es
  417e24:	out    0x17,eax
  417e26:	mov    eax,ds:0x5570fd3b
  417e2b:	adc    al,BYTE PTR [edi+0x43878814]
  417e31:	add    eax,0xe969ce50
  417e36:	(bad)  
  417e37:	mov    cl,0x1b
  417e39:	ins    BYTE PTR es:[edi],dx
  417e3a:	pop    edi
  417e3b:	add    ebp,edi
  417e3d:	sbb    al,0x90
  417e3f:	xchg   ecx,ecx
  417e41:	aaa    
  417e42:	xlat   BYTE PTR ds:[ebx]
  417e43:	mov    cl,0xf
  417e45:	add    BYTE PTR [edx],bl
  417e47:	js     0x417e52
  417e49:	jmp    DWORD PTR [eax]
  417e4b:	or     ch,al
  417e4d:	enter  0xc185,0xfa
  417e51:	add    DWORD PTR [ebp+0x70257403],0xffffffc4
  417e58:	jae    0x417e65
  417e5a:	cwde   
  417e5b:	loop   0x417e58
  417e5d:	inc    DWORD PTR [eax]
  417e5f:	dec    edx
  417e60:	adc    DWORD PTR [ecx+0x49fbc],eax
  417e66:	packsswb mm1,QWORD PTR [ecx-0x2]
  417e6a:	push   cs
  417e6b:	arpl   WORD PTR [ecx-0x1],dx
  417e6e:	rcr    BYTE PTR [ebp+0xc],0x7
  417e72:	sar    DWORD PTR [esi+0x13f7ff9],0x76
  417e79:	mov    ah,0xeb
  417e7b:	mov    bl,0x8e
  417e7d:	inc    esi
  417e7e:	jo     0x417eb4
  417e80:	inc    edi
  417e81:	add    eax,0x5a3db28a
  417e86:	je     0x417e2d
  417e88:	cmp    eax,0x7300f51
  417e8d:	pop    ss
  417e8e:	add    BYTE PTR [ebp+0x12],bh
  417e91:	mov    dh,0x47
  417e93:	jl     0x417ea7
  417e95:	mov    dh,0x4f
  417e97:	outs   dx,DWORD PTR ds:[esi]
  417e98:	(bad)  
  417e99:	fisttp WORD PTR [eax]
  417e9b:	xchg   ah,al
  417e9d:	(bad)  
  417e9e:	idiv   ebp
  417ea0:	add    dl,BYTE PTR [esp+esi*2+0x29]
  417ea4:	cmp    DWORD PTR [ebx],0x8087e655
  417eaa:	add    BYTE PTR [ebp+0x1],ch
  417ead:	xchg   DWORD PTR [esi-0x6f],ebx
  417eb0:	mov    eax,DWORD PTR [ecx+0x10]
  417eb3:	push   0xffffff85
  417eb5:	xchg   ebp,eax
  417eb6:	(bad)  
  417eb7:	cli    
  417eb8:	shl    DWORD PTR [esi],0x5d
  417ebb:	sbb    eax,0x94908412
  417ec0:	xchg   ebp,eax
  417ec1:	inc    edx
  417ec2:	std    
  417ec3:	add    BYTE PTR [ecx],bl
  417ec5:	out    0x4,al
  417ec7:	sbb    BYTE PTR [eax+eiz*1-0x74],0x43
  417ecc:	je     0x417f02
  417ece:	adc    cl,BYTE PTR [ecx-0x49edb09f]
  417ed4:	push   ebx
  417ed5:	and    eax,DWORD PTR [esi+0x4431fcdf]
  417edb:	xchg   DWORD PTR [ecx-0x1],edx
  417ede:	mov    WORD PTR [ebx-0x48],es
  417ee1:	cmp    DWORD PTR [di],0x504da243
  417ee8:	xchg   ebx,eax
  417ee9:	lods   al,BYTE PTR ds:[esi]
  417eea:	sbb    al,0x15
  417eec:	xchg   esp,eax
  417eed:	daa    
  417eee:	mov    ss,WORD PTR [ebx+0x74]
  417ef1:	inc    ecx
  417ef2:	add    ebp,edi
  417ef4:	inc    ecx
  417ef5:	dec    ebx
  417ef6:	inc    edx
  417ef7:	jae    0x417e95
  417ef9:	jge    0x417f3d
  417efb:	jae    0x417ea1
  417efd:	push   ds
  417efe:	mov    eax,0x99bb30b
  417f03:	call   0xfd838e88
  417f08:	sbb    edi,esp
  417f0a:	adc    DWORD PTR [ebx+0x14980],eax
  417f10:	pop    ds
  417f11:	mov    ch,0x14
  417f13:	out    0xd0,eax
  417f15:	push   edx
  417f16:	add    DWORD PTR [eax],eax
  417f18:	xchg   ebx,eax
  417f19:	fwait
  417f1a:	(bad)  
  417f1b:	dec    BYTE PTR [edx+0x5501cf93]
  417f21:	dec    edx
  417f22:	or     al,0x9
  417f24:	push   ebp
  417f25:	daa    
  417f26:	cmp    DWORD PTR [eax-0x47e25d00],eax
  417f2c:	jmp    0x417f9b
  417f2e:	adc    BYTE PTR [edi*8+0x23c49f53],bh
  417f35:	shr    ecx,cl
  417f37:	shr    DWORD PTR [ecx-0x6c],cl
  417f3a:	add    BYTE PTR [esi-0x49786049],ah
  417f40:	inc    ecx
  417f41:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417f42:	sbb    BYTE PTR [edx+0x4d],ah
  417f45:	ret    0x143b
  417f48:	adc    al,0x21
  417f4a:	mov    dh,0xf2
  417f4c:	inc    eax
  417f4d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417f4e:	or     BYTE PTR [edi+0x763c094e],cl
  417f54:	xchg   esp,edx
  417f56:	or     esp,DWORD PTR [esi+ecx*2-0x5d]
  417f5a:	add    bh,ah
  417f5c:	adc    BYTE PTR [edx-0x3c],al
  417f5f:	out    0x10,eax
  417f61:	sub    cl,ah
  417f63:	call   0xe24a73aa
  417f68:	inc    edx
  417f69:	xchg   ebp,eax
  417f6a:	cmp    BYTE PTR [edi+0x1],ah
  417f6d:	inc    eax
  417f6e:	mov    ah,0x4a
  417f70:	sub    esi,ebx
  417f72:	cmp    eax,0x87514136
  417f77:	adc    DWORD PTR es:[edx],ecx
  417f7a:	leave  
  417f7b:	out    0x10,eax
  417f7d:	add    dl,cl
  417f7f:	call   0xe24a52c6
  417f84:	dec    ebp
  417f85:	xchg   ebp,eax
  417f86:	inc    ecx
  417f87:	addr16 cld 
  417f89:	inc    edi
  417f8a:	mov    ah,0x12
  417f8c:	lea    eax,[eax]
  417f8e:	dec    edi
  417f8f:	in     al,0xa7
  417f91:	sar    ch,cl
  417f93:	add    dh,dh
  417f95:	mov    dh,0xaf
  417f97:	lea    edx,[edi-0x14a7efc]
  417f9d:	mov    WORD PTR [ebp-0x2e],cs
  417fa0:	fnsave [esi+0x105c3ba3]
  417fa6:	imul   esi,DWORD PTR [ebp+0x33f32bde],0x401740c6
  417fb0:	out    dx,al
  417fb1:	xchg   bl,al
  417fb3:	loope  0x417fb4
  417fb5:	call   0xb6e2a351
  417fba:	aam    0x3d
  417fbc:	inc    ebp
  417fbd:	idiv   BYTE PTR [ebp-0x5212013b]
  417fc3:	int    0x1
  417fc5:	test   al,0x77
  417fc7:	or     BYTE PTR [ecx],cl
  417fc9:	test   al,0x98
  417fcb:	cmp    BYTE PTR [eax-0x1450bc3a],al
  417fd1:	nop
  417fd2:	sbb    DWORD PTR [edi],esi
  417fd4:	std    
  417fd5:	jbe    0x417f7b
  417fd7:	jb     0x418026
  417fd9:	call   0xeb86f282
  417fde:	push   esi
  417fdf:	pop    ebx
  417fe0:	or     dl,dh
  417fe2:	pop    edi
  417fe3:	mov    ebp,eax
  417fe5:	add    dl,BYTE PTR [edi-0x80]
  417fe8:	cmp    al,cl
  417fea:	push   cs
  417feb:	mov    edi,0x8987bb13
  417ff0:	dec    ebx
  417ff1:	fld    QWORD PTR [eax]
  417ff3:	and    bl,cl
  417ff5:	add    esp,DWORD PTR [edx-0x62]
  417ff8:	adc    DWORD PTR [ebx+0x39],0xe
  417ffc:	(bad)  
  417ffd:	sbb    edx,DWORD PTR [edx]
  417fff:	xchg   ebx,eax
  418000:	and    DWORD PTR [ebx+0x19],0x69088697
  418007:	outs   dx,BYTE PTR ds:[esi]
  418008:	fmul   DWORD PTR [eiz*2-0x16ffe6b1]
  41800f:	pop    ss
  418010:	xor    edx,DWORD PTR [edi-0x12]
  418013:	sbb    edi,DWORD PTR [ecx+ebx*1-0x17]
  418017:	xchg   edi,eax
  418018:	xor    bh,0x93
  41801b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41801c:	test   BYTE PTR [esi-0x7fff6ffe],dh
  418022:	loopne 0x418073
  418024:	or     eax,0x8f8484
  418029:	add    BYTE PTR [ecx-0x5f],ch
  41802c:	aad    0xc
  41802e:	add    cl,ch
  418030:	test   al,0x16
  418032:	add    BYTE PTR ds:0x895ff57e,bh
  418038:	or     eax,DWORD PTR [eax-0x7ef63007]
  41803e:	fwait
  41803f:	sub    eax,0xcb0efffe
  418044:	dec    esp
  418045:	add    BYTE PTR [edi],cl
  418047:	retf   
  418048:	inc    esp
  418049:	add    ecx,eax
  41804b:	or     al,0xd
  41804d:	pop    es
  41804e:	enter  0x18a0,0x5
  418052:	mov    eax,eax
  418054:	clc    
  418055:	test   BYTE PTR [esi+0x47900],cl
  41805b:	add    BYTE PTR [esi+0x54],al
  41805e:	adc    DWORD PTR [esp+eax*1-0x3d],edi
  418062:	inc    ebp
  418063:	cmp    ah,bh
  418065:	std    
  418066:	(bad)  
  418067:	call   DWORD PTR [esi+0x2a]
  41806a:	mov    BYTE PTR [esi-0x3f],al
  41806d:	xchg   dl,cl
  41806f:	mov    edi,ebx
  418071:	or     eax,0x85895527
  418076:	adc    al,0x90
  418078:	xor    al,0x18
  41807a:	mov    BYTE PTR [ebx-0x3c78f5d5],cl
  418080:	out    0x43,al
  418082:	gs mov ecx,edi
  418085:	xchg   DWORD PTR [ebx+ecx*4],eax
  418088:	lock icebp 
  41808a:	mov    BYTE PTR [esp+esi*4],al
  41808d:	cmp    al,0x42
  41808f:	adc    BYTE PTR [edx],dl
  418091:	add    al,0x7f
  418093:	sar    BYTE PTR [edi-0x74],0x41
  418097:	adc    dh,dh
  418099:	xchg   edx,eax
  41809a:	xchg   esp,eax
  41809b:	add    BYTE PTR [ebp-0x3],ch
  41809e:	adc    dl,0xd9
  4180a1:	cmp    esi,DWORD PTR [esi]
  4180a3:	dec    edx
  4180a4:	jns    0x41811e
  4180a6:	xor    DWORD PTR [ebx+0xd8a4d94],ecx
  4180ac:	or     eax,0x940094d9
  4180b1:	daa    
  4180b2:	mov    al,BYTE PTR [ebp-0x5c]
  4180b5:	push   0x72e40221
  4180ba:	mov    dh,0xb
  4180bc:	add    BYTE PTR [ebx-0xf],al
  4180bf:	paddw  mm4,QWORD PTR [ecx-0x6bbfeca9]
  4180c6:	scas   al,BYTE PTR es:[edi]
  4180c7:	lds    edx,FWORD PTR [ebx]
  4180c9:	pop    ds
  4180ca:	adc    cl,BYTE PTR [edi+eax*4]
  4180cd:	fnstenv [edi]
  4180cf:	mov    al,BYTE PTR [ebx+0x2c]
  4180d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4180d3:	inc    esp
  4180d4:	or     al,0x1d
  4180d6:	in     al,0x1b
  4180d8:	out    0x13,eax
  4180da:	mov    ecx,0xe40ffd3d
  4180df:	pop    ss
  4180e0:	cmp    BYTE PTR [ebx-0x3b47584],0xaf
  4180e7:	iret   
  4180e8:	pop    ss
  4180e9:	fwait
  4180ea:	stos   DWORD PTR es:[edi],eax
  4180eb:	stos   BYTE PTR es:[edi],al
  4180ec:	sti    
  4180ed:	jecxz  0x4180b8
  4180ef:	stc    
  4180f0:	pop    edx
  4180f1:	in     al,0x31
  4180f3:	test   DWORD PTR [ebx-0x30],esp
  4180f6:	stc    
  4180f7:	cmp    eax,0x1a488c80
  4180fc:	rcl    BYTE PTR [edi],0xc7
  4180ff:	cmp    al,BYTE PTR [ecx+0x3d8124d4]
  418105:	dec    ebx
  418106:	mov    al,0xc7
  418108:	pop    ds
  418109:	fwait
  41810a:	lods   al,BYTE PTR ds:[esi]
  41810b:	jmp    0x8a691522
  418110:	inc    ebx
  418111:	jo     0x41817a
  418113:	shr    DWORD PTR [ecx-0x6c],1
  418116:	ss mov ch,0x1b
  418119:	sbb    DWORD PTR [edi+0x26ea4f02],edx
  41811f:	mov    ch,0xf
  418121:	add    BYTE PTR [edi],cl
  418123:	add    DWORD PTR [edx-0x21fb18c3],esi
  418129:	mov    bh,0x93
  41812b:	sub    dh,bl
  41812d:	aaa    
  41812e:	popa   
  41812f:	cmp    BYTE PTR [esp+eax*2-0x77],ah
  418133:	jge    0x4180f3
  418135:	sbb    eax,0xc7000094
  41813a:	stos   DWORD PTR es:[edi],eax
  41813b:	pop    es
  41813c:	ins    BYTE PTR es:[edi],dx
  41813d:	xchg   BYTE PTR [esi-0x40771900],bl
  418143:	or     al,0x90
  418145:	loop   0x4180cd
  418147:	add    bh,ah
  418149:	sub    BYTE PTR [edx-0x6548190c],0xfb
  418150:	sub    al,0xac
  418152:	mov    BYTE PTR [eax+ebp*1+0x1c],bh
  418156:	xchg   esp,eax
  418157:	add    BYTE PTR [ebp-0x39],dh
  41815a:	mov    ds:0xca9fb02,eax
  41815f:	(bad)  
  418160:	(bad)  
  418161:	clc    
  418162:	loop   0x418110
  418164:	ret    
  418165:	clc    
  418166:	push   ecx
  418167:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418168:	in     eax,dx
  418169:	xchg   DWORD PTR [ebp+0xd03e718],edi
  41816f:	mov    edi,0xacd486ee
  418174:	push   es
  418175:	stc    
  418176:	jmp    0xe700:0xac206507
  41817d:	test   eax,0x8e96d0c3
  418182:	bound  edx,QWORD PTR [edx+esi*2]
  418185:	inc    ecx
  418186:	add    BYTE PTR [eax+esi*4+0x7d940470],bh
  41818d:	daa    
  41818e:	or     eax,0x3eeff18
  418193:	xchg   esp,eax
  418194:	sub    edx,esp
  418196:	mov    dl,bl
  418198:	adc    al,0xea
  41819a:	dec    ebx
  41819b:	int    0x59
  41819d:	add    dh,ah
  41819f:	adc    eax,0x97e9152d
  4181a4:	mov    ecx,ecx
  4181a6:	adc    ah,al
  4181a8:	mov    cl,BYTE PTR [edi]
  4181aa:	and    eax,DWORD PTR [edx-0x15]
  4181ad:	or     al,0x6c
  4181af:	scas   eax,DWORD PTR es:[edi]
  4181b0:	or     eax,0x3814e900
  4181b5:	(bad)  
  4181b6:	cmp    al,0xa4
  4181b8:	mov    bh,BYTE PTR [edi]
  4181ba:	call   0xe66c3f0c
  4181bf:	sbb    cl,BYTE PTR [ebp+0x15]
  4181c2:	jmp    0x88283f5e
  4181c7:	push   0x35
  4181c9:	std    
  4181ca:	loop   0x418215
  4181cc:	lahf   
  4181cd:	call   0x88bf8e58
  4181d2:	jmp    0x2f42826e
  4181d7:	inc    eax
  4181d8:	clc    
  4181d9:	xlat   BYTE PTR ds:[ebx]
  4181da:	xchg   edx,eax
  4181db:	mov    ch,0x7f
  4181dd:	pop    ebx
  4181de:	loope  0x41818c
  4181e0:	and    esi,esi
  4181e2:	and    al,0x98
  4181e4:	add    dh,BYTE PTR [esp+ebp*4+0x1c]
  4181e8:	(bad)  
  4181e9:	imul   esp,DWORD PTR [edx],0x0
  4181ec:	dec    edi
  4181ed:	mov    cl,0x37
  4181ef:	(bad)  
  4181f0:	(bad)  [esi]
  4181f2:	sub    DWORD PTR [ecx],0x23
  4181f5:	add    al,0x6a
  4181f7:	jmp    0xdd980be3
  4181fc:	sbb    al,0x41
  4181fe:	call   0x41906b
  418203:	inc    edx
  418204:	push   cs
  418205:	mov    DWORD PTR [esi+0x5],eax
  418208:	mov    ebp,0x9840393e
  41820d:	jge    0x418199
  41820f:	(bad)  
  418210:	xchg   edi,eax
  418211:	add    BYTE PTR [edx+0x2bc49de2],cl
  418217:	add    BYTE PTR [edx+0x7d177b7f],cl
  41821d:	add    bh,BYTE PTR [edi-0x8]
  418220:	ins    BYTE PTR es:[edi],dx
  418221:	outs   dx,BYTE PTR ds:[esi]
  418222:	mov    al,ds:0xe7032e8a
  418227:	xchg   ebp,eax
  418228:	(bad)  
  418229:	jp     0x418268
  41822b:	add    BYTE PTR [esi-0x71],al
  41822e:	jg     0x4182ae
  418230:	lods   eax,DWORD PTR ds:[esi]
  418231:	cld    
  418232:	or     al,BYTE PTR [ebp+0x11d0]
  418238:	mov    esi,0x80004d7a
  41823d:	pop    ebx
  41823e:	mov    BYTE PTR [esi-0x27],cl
  418241:	xor    eax,0x85ac74d6
  418246:	inc    esi
  418247:	sbb    al,al
  418249:	mov    esp,0xd5361f73
  41824e:	or     al,BYTE PTR [ebx+0x117400]
  418254:	add    BYTE PTR [edi-0x4c72b004],dl
  41825a:	sbb    BYTE PTR [edi-0x79deda3d],al
  418260:	add    ch,ch
  418262:	add    al,0xf
  418265:	jno    0x418297
  418267:	adc    al,0x0
  418269:	std    
  41826a:	out    0x24,al
  41826c:	mov    esi,DWORD PTR [ebx]
  41826e:	push   cs
  41826f:	daa    
  418270:	enter  0xd386,0xa
  418274:	xchg   DWORD PTR [eax+0x47000011],edx
  41827a:	add    eax,0x9994e3a
  41827f:	sbb    DWORD PTR [edx],0x830001e2
  418285:	test   ebx,edi
  418287:	jae    0x418295
  418289:	daa    
  41828a:	cmp    eax,0x28f339fe
  41828f:	or     al,0x85
  418291:	xchg   esp,eax
  418292:	and    BYTE PTR [edx],dl
  418294:	add    BYTE PTR [edx+eiz*4+0x65bf6bc1],dl
  41829b:	adc    eax,0x3a36cfe7
  4182a0:	std    
  4182a1:	mov    edi,0x160ca58d
  4182a6:	sub    al,0xf
  4182a8:	add    BYTE PTR [eax+edx*2+0x566bfd1c],dl
  4182af:	mov    cs,WORD PTR [esi-0x10]
  4182b2:	adc    bl,BYTE PTR [ebx+0xd]
  4182b5:	add    BYTE PTR [eax],dl
  4182b7:	push   ebp
  4182b8:	cmp    bh,ch
  4182ba:	push   ebx
  4182bb:	mov    dl,0xbe
  4182bd:	pop    ss
  4182be:	adc    DWORD PTR [edi-0x53],esp
  4182c1:	and    bh,BYTE PTR [edi-0x70]
  4182c4:	mov    dh,0xe
  4182c6:	scas   al,BYTE PTR es:[edi]
  4182c7:	daa    
  4182c8:	ror    DWORD PTR [edx-0x3e730436],1
  4182ce:	cmp    al,0xcc
  4182d0:	mov    BYTE PTR [eax],al
  4182d2:	xchg   esp,eax
  4182d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4182d4:	inc    eax
  4182d5:	jae    0x418340
  4182d7:	pop    edx
  4182d8:	inc    ecx
  4182d9:	mov    DWORD PTR [ecx+0x2b],esp
  4182dc:	mov    WORD PTR [esi+0x12728],cs
  4182e2:	in     eax,dx
  4182e3:	fstp   QWORD PTR [ecx]
  4182e5:	add    BYTE PTR [edx+eiz*4-0x1040e442],dl
  4182ec:	std    
  4182ed:	(bad)  
  4182ee:	arpl   WORD PTR [esi+0x5d9e098a],di
  4182f4:	in     eax,0x72
  4182f6:	hlt    
  4182f7:	test   eax,0x2f47ff38
  4182fc:	mov    eax,DWORD PTR [ecx-0x6b]
  4182ff:	add    edx,eax
  418301:	sub    cl,BYTE PTR [ecx+0x1a]
  418304:	mov    es,WORD PTR [esi+0x28]
  418307:	add    al,dl
  418309:	sbb    ebp,DWORD PTR [edi+0x0]
  41830c:	aas    
  41830d:	mov    al,0xd2
  41830f:	es push ebp
  418311:	cmp    DWORD PTR [ecx+0x33d9d234],esp
  418317:	stos   DWORD PTR es:[edi],eax
  418318:	loop   0x418310
  41831a:	add    BYTE PTR [edx+0x28],bl
  41831d:	jecxz  0x41831d
  41831f:	jmp    0xf42f8dc
  418324:	shl    ch,0x8b
  418327:	sar    BYTE PTR [eax+0x33d571dd],cl
  41832d:	jb     0x4182f9
  41832f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418330:	add    edx,DWORD PTR [ebp-0x3fbe73f8]
  418336:	add    BYTE PTR ds:0xf1fce822,dl
  41833c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41833d:	cmp    BYTE PTR [edx],bl
  41833f:	sbb    eax,0x547f3abb
  418344:	lods   eax,DWORD PTR ds:[esi]
  418345:	frndint 
  418347:	fimul  WORD PTR [eax]
  418349:	xor    eax,0x294e650a
  41834e:	mov    eax,edx
  418350:	aam    0xe1
  418352:	inc    ebp
  418353:	xchg   ecx,eax
  418354:	sbb    DWORD PTR [edx+0x4],0xffffff94
  418358:	add    dl,bl
  41835a:	inc    ebx
  41835b:	std    
  41835c:	adc    dh,dh
  41835e:	jno    0x4182f5
  418360:	xchg   DWORD PTR ds:0xeb6a90f0,edx
  418366:	add    eax,0x84e3293b
  41836b:	hlt    
  41836c:	add    DWORD PTR [ecx+0x11],esi
  41836f:	push   ecx
  418370:	and    BYTE PTR [ecx-0x1],0x66
  418374:	or     DWORD PTR [edx],ebx
  418376:	push   esi
  418377:	popf   
  418378:	inc    ecx
  418379:	fimul  WORD PTR [edi-0xb11d82a]
  41837f:	add    ch,ah
  418381:	mul    DWORD PTR [edi]
  418383:	or     DWORD PTR [edi],esp
  418385:	aas    
  418386:	add    BYTE PTR [edx+0x52],ah
  418389:	jg     0x41834b
  41838b:	fidiv  WORD PTR [ebx]
  41838d:	and    cl,dh
  41838f:	es ins DWORD PTR es:[edi],dx
  418391:	sbb    eax,DWORD PTR [ebx+0x1e]
  418394:	pop    ebp
  418395:	xor    eax,0x897faf89
  41839a:	dec    esi
  41839b:	jge    0x4183af
  41839d:	inc    ecx
  41839e:	je     0x418382
  4183a0:	mov    BYTE PTR [edx+0x71],cl
  4183a3:	mov    ebp,0x644d3331
  4183a8:	popw   ss
  4183aa:	mov    DWORD PTR [edx],ebp
  4183ac:	rcr    BYTE PTR [ecx-0x7b],0xe9
  4183b0:	xchg   edi,eax
  4183b1:	jg     0x418373
  4183b3:	out    dx,al
  4183b4:	loop   0x418394
  4183b6:	cld    
  4183b7:	(bad)  
  4183b8:	pushf  
  4183b9:	sub    DWORD PTR [ebx],esp
  4183bb:	bound  edx,QWORD PTR [ebp+0x17]
  4183be:	sub    DWORD PTR [ecx-0x228ab5b8],esi
  4183c4:	adc    DWORD PTR [ecx],ecx
  4183c6:	cmp    ah,BYTE PTR [edi]
  4183c8:	sub    al,0xae
  4183ca:	adc    ch,BYTE PTR [edx+0x6f]
  4183cd:	xor    ecx,DWORD PTR [esi]
  4183cf:	ins    DWORD PTR es:[edi],dx
  4183d0:	xchg   esp,eax
  4183d1:	xor    eax,0xc1119efd
  4183d6:	(bad)  
  4183d7:	rcl    BYTE PTR [ebp-0x1a],cl
  4183da:	or     al,0x65
  4183dc:	shl    BYTE PTR [edx],1
  4183de:	std    
  4183df:	xchg   BYTE PTR [eax],bl
  4183e1:	inc    ecx
  4183e2:	inc    ecx
  4183e3:	ret    0xd500
  4183e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4183e7:	or     al,0x6b
  4183e9:	mov    dh,0x37
  4183eb:	std    
  4183ec:	outs   dx,BYTE PTR ds:[esi]
  4183ed:	and    BYTE PTR [edx+0x5576c7b],bh
  4183f3:	test   BYTE PTR [ebp-0x63],al
  4183f6:	xor    eax,0xfac312fd
  4183fb:	or     al,0x67
  4183fd:	jo     0x418431
  4183ff:	std    
  418400:	add    BYTE PTR [edx+0x2c],dl
  418403:	mov    BYTE PTR [ecx+0x44],0x49
  418407:	pop    ecx
  418408:	cmp    ebp,DWORD PTR [eax+ecx*1-0x72]
  41840c:	int    0x83
  41840e:	clc    
  41840f:	cli    
  418410:	push   0xffffff89
  418412:	push   edi
  418413:	out    0xc7,al
  418415:	cmp    eax,0xfffffffa
  418418:	cmp    esp,ebx
  41841a:	pop    edx
  41841b:	jo     0x4183ee
  41841d:	jb     0x4183cf
  41841f:	dec    BYTE PTR [edx-0x9bfddbd]
  418425:	jns    0x41842d
  418427:	add    al,0xe9
  418429:	mov    bh,dh
  41842b:	cli    
  41842c:	jmp    DWORD PTR [esi]
  41842e:	pop    eax
  41842f:	imul   esi,DWORD PTR [ebx+0x31],0xe603b5fa
  418436:	cmp    dh,BYTE PTR [ecx]
  418438:	inc    ebx
  418439:	cmp    eax,DWORD PTR [ecx]
  41843b:	or     BYTE PTR [edx+esi*2],al
  41843e:	mov    dl,0x99
  418440:	(bad)  
  418441:	push   edx
  418442:	jmp    0x3bfa:0xea0087e4
  418449:	add    BYTE PTR [ebx+0x52a17068],ah
  41844f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418450:	dec    BYTE PTR [edx-0x9bfcf9d]
  418456:	cmp    DWORD PTR [esi],eax
  418458:	std    
  418459:	call   0x3c6f16
  41845e:	out    0x4b,al
  418460:	imul   esi,DWORD PTR [ebx-0x7f],0x8603b5f9
  418467:	cmp    dh,BYTE PTR [ecx]
  418469:	inc    ebx
  41846a:	jnp    0x41846c
  41846c:	or     BYTE PTR [ecx],al
  41846e:	push   ss
  41846f:	mov    ebx,0xfac15e36
  418474:	jle    0x4184ec
  418476:	inc    edx
  418477:	jmp    0x91d59476
  41847c:	add    DWORD PTR [ecx-0xa3ef49e],ecx
  418482:	nop
  418483:	das    
  418484:	adc    edi,esp
  418486:	push   cs
  418487:	repnz xor al,0xfd
  41848a:	jg     0x418415
  41848c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41848d:	or     al,0x17
  41848f:	test   DWORD PTR [esi],esi
  418491:	std    
  418492:	stos   DWORD PTR es:[edi],eax
  418493:	sub    ch,BYTE PTR [ebx+0x1]
  418496:	punpckldq mm5,mm5
  418499:	inc    eax
  41849a:	mov    ds:0x7f100923,al
  41849f:	mov    ds:0x3ef84e88,al
  4184a4:	pop    esp
  4184a5:	or     eax,0xfd365c17
  4184aa:	jnp    0x4184c6
  4184ac:	imul   eax,DWORD PTR [ecx],0x0
  4184af:	xlat   BYTE PTR ds:[ebx]
  4184b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4184b1:	cmp    ecx,DWORD PTR [edx]
  4184b3:	fwait
  4184b4:	mov    ds:0x5263fb1b,eax
  4184b9:	push   es
  4184ba:	xchg   BYTE PTR [ebp+0x17fd3649],dh
  4184c0:	dec    edi
  4184c1:	add    eax,0x38a67676
  4184c6:	or     ecx,eax
  4184c8:	add    al,0xf7
  4184ca:	adc    BYTE PTR [edi+eiz*1+0x248a7401],0xde
  4184d2:	pop    ds
  4184d3:	xchg   esp,eax
  4184d4:	daa    
  4184d5:	push   es
  4184d6:	xchg   BYTE PTR [ecx+0x59fd3691],bl
  4184dc:	inc    eax
  4184dd:	loope  0x4184de
  4184df:	adc    edx,DWORD PTR [edx+0x7e]
  4184e2:	cli    
  4184e3:	or     DWORD PTR [edx+0x36],edi
  4184e6:	xor    esp,edx
  4184e8:	aas    
  4184e9:	mov    ebx,0x33a48b5f
  4184ee:	sti    
  4184ef:	repz mov eax,ds:0xffe8dc2b
  4184f5:	gs ss popf 
  4184f8:	push   edi
  4184f9:	out    dx,al
  4184fa:	add    al,0x33
  4184fd:	push   esi
  4184fe:	ss adc al,0xf5
  418501:	loopne 0x418509
  418503:	pop    ss
  418504:	inc    ebp
  418505:	inc    ebx
  418506:	sar    DWORD PTR ss:[edi+ecx*2+0x3630b840],0xfa
  41850f:	push   ecx
  418510:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418511:	fld    QWORD PTR [edx+0x2631cd00]
  418517:	ss xchg ecx,eax
  418519:	push   0xffffffea
  41851b:	jl     0x4184a7
  41851d:	sbb    bh,ah
  41851f:	add    edx,ebp
  418521:	jmp    0x41854a
  418523:	scas   al,BYTE PTR es:[edi]
  418524:	mov    esi,0x7f6e6aff
  418529:	xor    dh,bh
  41852b:	cmp    DWORD PTR [edx+edi*8-0x1b],0xee2e427f
  418533:	xor    eax,0x5072915
  418538:	sbb    BYTE PTR [esi-0x24],ah
  41853b:	xor    eax,0x486ee59
  418540:	xchg   esp,eax
  418541:	add    dh,bl
  418543:	jg     0x418573
  418545:	cs (bad) 
  418547:	xor    eax,0x3d5807f
  41854c:	xchg   esp,eax
  41854d:	sbb    DWORD PTR [edi-0x13cfceca],esi
  418553:	add    esi,DWORD PTR [eax+eax*1-0x19]
  418557:	add    al,0x16
  418559:	mov    eax,0xee19359a
  41855e:	loopne 0x418543
  418560:	adc    esi,DWORD PTR [eax]
  418562:	fidivr WORD PTR [ebp-0x72]
  418565:	sub    eax,0xdfbf3586
  41856a:	mov    BYTE PTR [ebx],0x94
  41856d:	(bad)  
  41856e:	jmp    FWORD PTR [ecx+edi*1+0x2b]
  418572:	std    
  418573:	outs   dx,BYTE PTR ds:[esi]
  418574:	jecxz  0x418542
  418576:	pop    ds
  418577:	jmp    0x843f1c7c
  41857c:	lds    esp,FWORD PTR [edx-0x67eb02d3]
  418582:	lock (bad) 
  418584:	call   0x473ff007
  418589:	mov    ecx,ebp
  41858b:	pop    ebp
  41858c:	int    0x90
  41858e:	and    DWORD PTR [edx+0x37],0x770d2d69
  418595:	xchg   ebp,eax
  418596:	ja     0x4185a6
  418598:	add    DWORD PTR [eax+0x56e24100],ebx
  41859e:	mov    ch,0x2a
  4185a0:	out    0x13,al
  4185a2:	icebp  
  4185a3:	sti    
  4185a4:	push   cs
  4185a5:	rol    DWORD PTR [ecx-0x7b670f08],0x25
  4185ac:	std    
  4185ad:	shr    BYTE PTR ds:0xfc77f181,0x83
  4185b4:	iret   
  4185b5:	mov    ds:0xf824fd2d,eax
  4185ba:	add    BYTE PTR [eax],al
  4185bc:	jmp    0xd5530a51
  4185c1:	mov    BYTE PTR ds:0x99693b,ch
  4185c7:	add    al,dl
  4185c9:	pop    ebx
  4185ca:	sub    bh,ch
  4185cc:	mov    esi,0xe91d2f42
  4185d1:	xchg   edi,eax
  4185d2:	std    
  4185d3:	sbb    ebp,0xe4fd2d62
  4185d9:	(bad)  
  4185da:	loopne 0x4185db
  4185dc:	call   0xf1c815e1
  4185e1:	xchg   edx,eax
  4185e2:	enter  0x3b2d,0xbe
  4185e6:	imul   DWORD PTR [esi]
  4185e8:	std    
  4185e9:	add    BYTE PTR [edx],cl
  4185eb:	scas   eax,DWORD PTR es:[edi]
  4185ec:	out    0xfb,eax
  4185ee:	jp     0x4185e4
  4185f0:	cmp    BYTE PTR [edi-0x23],bl
  4185f3:	add    al,BYTE PTR [eax]
  4185f5:	psrlw  mm6,0xf6
  4185f9:	(bad)  
  4185fa:	jp     0x418632
  4185fc:	std    
  4185fd:	das    
  4185fe:	in     eax,dx
  4185ff:	add    ah,ch
  418601:	push   ss
  418602:	push   0xfb3bfaf4
  418607:	data16 or al,0x83
  41860a:	fs idiv dl
  41860d:	jmp    FWORD PTR [edx+0x3e42fe9c]
  418613:	jmp    0x41861e
  418615:	(bad)  
  418617:	mov    dh,0xf6
  418619:	(bad)  
  41861a:	jp     0x41859c
  41861c:	clc    
  41861d:	or     eax,0xfcc1acaa
  418622:	stos   BYTE PTR es:[edi],al
  418623:	hlt    
  418624:	cmp    BYTE PTR [ebp+0xf00027d],al
  41862a:	icebp  
  41862b:	pushf  
  41862c:	sti    
  41862d:	(bad)  
  41862e:	jp     0x418664
  418630:	and    al,0x20
  418632:	jge    0x418636
  418634:	or     eax,DWORD PTR [esi-0x51725]
  41863a:	mov    eax,0x6d001d4b
  41863f:	add    eax,DWORD PTR [esi-0xd96ff5f]
  418645:	cli    
  418646:	jmp    0x3c6436
  41864b:	xchg   esi,eax
  41864c:	push   edx
  41864d:	imul   ecx,DWORD PTR [edi],0xfff898ae
  418653:	jmp    0xf885:0x7e03b601
  41865a:	or     ch,BYTE PTR [edx]
  41865c:	test   BYTE PTR [esi+0x7ef1fafc],al
  418662:	clc    
  418663:	xchg   esp,eax
  418664:	and    al,0x2
  418666:	xchg   BYTE PTR [ebx-0x6e],bh
  418669:	xor    ebp,edi
  41866b:	rcr    DWORD PTR [ebx+eax*1-0x7ae16c00],0x64
  418673:	out    dx,eax
  418674:	mov    dh,0x30
  418676:	cmp    esi,DWORD PTR [ebx-0x6cfffec9]
  41867c:	popf   
  41867d:	test   al,0xfb
  41867f:	fcmovne st,st(6)
  418681:	out    dx,al
  418682:	es je  0x41869c
  418685:	add    DWORD PTR ds:0xfd2d5c13,ecx
  41868b:	ret    
  41868c:	sar    BYTE PTR [edx+0xeebbf8],1
  418692:	mov    dh,0x5b
  418694:	sbb    BYTE PTR [edx],al
  418696:	mov    dh,0x5b
  418698:	sbb    DWORD PTR [eax+eiz*8-0x74],eax
  41869c:	xor    al,BYTE PTR [ecx+eax*1-0x2c]
  4186a0:	call   0x3931:0x5c1d0148
  4186a7:	add    cl,dl
  4186a9:	daa    
  4186aa:	mov    al,0x10
  4186ac:	pcmpeqw mm7,mm5
  4186af:	mov    dl,BYTE PTR [eax+0x19087c98]
  4186b5:	loopne 0x418662
  4186b7:	add    al,0x1f
  4186b9:	xchg   DWORD PTR ds:0x524529,eax
  4186bf:	xor    DWORD PTR [esi-0x20],eax
  4186c2:	fld    DWORD PTR [edi-0x37]
  4186c5:	sbb    eax,0x2b8567e
  4186ca:	push   ebp
  4186cb:	inc    edx
  4186cc:	push   cs
  4186cd:	push   ds
  4186ce:	jl     0x418723
  4186d0:	inc    eax
  4186d1:	sub    eax,edi
  4186d3:	or     al,0x16
  4186d5:	xchg   ecx,eax
  4186d6:	add    DWORD PTR [eax],eax
  4186d8:	xchg   esp,eax
  4186d9:	sbb    edi,DWORD PTR [esi-0x1cff278b]
  4186df:	ror    BYTE PTR [eax-0x6bfc527b],0x0
  4186e6:	out    0x79,al
  4186e8:	popa   
  4186e9:	add    al,0xda
  4186eb:	cmp    al,0xc0
  4186ed:	mov    ebx,0x25179f5
  4186f2:	out    dx,al
  4186f3:	xchg   edi,eax
  4186f4:	xor    esi,DWORD PTR [edi+0x24]
  4186f7:	and    BYTE PTR [ecx+0x23051e76],bl
  4186fd:	pop    ds
  4186fe:	out    dx,eax
  4186ff:	(bad)  
  418700:	sar    esp,cl
  418702:	xchg   esp,eax
  418703:	retf   0x3f94
  418706:	inc    edi
  418707:	sti    
  418708:	pushf  
  418709:	inc    edx
  41870a:	pusha  
  41870b:	rol    BYTE PTR [eax],0xbf
  41870e:	jbe    0x4186bc
  418710:	sub    eax,DWORD PTR [edi-0x8]
  418713:	jle    0x418747
  418715:	mov    cl,0x2c
  418717:	mov    dh,0x7c
  418719:	push   edi
  41871a:	sub    BYTE PTR [edx-0x28],ah
  41871d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41871e:	sub    BYTE PTR [esi],0x8
  418721:	lods   eax,DWORD PTR ds:[esi]
  418722:	(bad)  
  418724:	jns    0x41877a
  418726:	jle    0x4186c7
  418728:	ins    DWORD PTR es:[edi],dx
  418729:	adc    eax,0xcf7ce822
  41872e:	sbb    al,0xf6
  418730:	jno    0x41873e
  418732:	pop    edi
  418733:	mov    ebx,es
  418735:	jae    0x418732
  418737:	xor    al,0x83
  418739:	ds sahf 
  41873b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41873c:	add    ebx,ecx
  41873e:	jns    0x418774
  418740:	xor    BYTE PTR [ebx],dl
  418742:	(bad)  
  418743:	fiadd  WORD PTR [edi+0x6bdeb654]
  418749:	dec    ecx
  41874a:	sub    al,0xce
  41874c:	mov    cl,0x1a
  41874e:	(bad)  
  41874f:	mov    esi,0x62fc6687
  418754:	fild   DWORD PTR [ebx+0x2c]
  418757:	add    BYTE PTR [esi+0x60425221],dh
  41875d:	dec    ebx
  41875e:	adc    BYTE PTR [ecx],bh
  418760:	mov    bl,0xe4
  418762:	(bad)  
  418764:	adc    al,0xa0
  418766:	jns    0x4187bb
  418768:	popf   
  418769:	lds    ebp,FWORD PTR [edi+0x794e62ef]
  41876f:	leave  
  418770:	xchg   ecx,eax
  418771:	add    BYTE PTR [edx],bl
  418773:	sbb    eax,0x411b7efd
  418778:	or     eax,0xf236d
  41877d:	jmp    0x67354f1a
  418782:	ror    DWORD PTR [edi],cl
  418784:	mov    DWORD PTR [ebx+ebp*4+0x65542e9],esp
  41878b:	push   esp
  41878c:	mov    DWORD PTR [ebx+esi*2-0x56bebc87],ebx
  418793:	inc    ebx
  418794:	or     eax,0xfd1d8f65
  418799:	adc    DWORD PTR ss:[eax-0x7b6b1615],ebp
  4187a0:	mov    ebx,0x890097fd
  4187a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4187a6:	ret    
  4187a7:	add    DWORD PTR [ebx-0x3],0x8
  4187ab:	shl    BYTE PTR [ebx],0xa9
  4187ae:	(bad)  
  4187af:	mov    edi,0x829e9923
  4187b4:	adc    al,0xe9
  4187b6:	xchg   edi,eax
  4187b7:	sub    eax,0xcfe8d173
  4187bc:	repz out dx,al
  4187be:	sub    bl,BYTE PTR [ebx]
  4187c0:	mov    DWORD PTR [edi-0x917c628],ebp
  4187c6:	je     0x4187f5
  4187c8:	std    
  4187c9:	ins    BYTE PTR es:[edi],dx
  4187ca:	xlat   BYTE PTR ds:[ebx]
  4187cb:	std    
  4187cc:	or     DWORD PTR [ebx],0xffffffab
  4187cf:	add    BYTE PTR [eax],al
  4187d1:	add    BYTE PTR [esi],ch
  4187d3:	cmp    dh,cl
  4187d5:	jmp    0xfb218eda
  4187da:	push   DWORD PTR [eax-0x57d01c8]
  4187e0:	sbb    eax,0xacf94586
  4187e5:	add    bh,BYTE PTR [ebx+edi*4]
  4187e8:	jb     0x418854
  4187ea:	cmp    al,0xb6
  4187ec:	data16 cmp bh,BYTE PTR [eax+eiz*4]
  4187f0:	imul   esp,DWORD PTR [edx+0xf],0x330148bb
  4187f7:	and    al,0x1b
  4187f9:	dec    edx
  4187fa:	bts    DWORD PTR [eax],edi
  4187fd:	dec    DWORD PTR [esi]
  4187ff:	dec    ecx
  418800:	mov    esi,0x414d84
  418805:	mov    dh,0x4f
  418807:	mov    esp,0xb608dcbd
  41880c:	out    0xa,al
  41880e:	mov    dh,0xfa
  418810:	add    edi,DWORD PTR [ebp-0x40d43a20]
  418816:	mov    DWORD PTR [eax],eax
  418818:	fild   DWORD PTR [ebp+eax*2-0x47fa8d9b]
  41881f:	jb     0x418811
  418821:	cli    
  418822:	jg     0x418848
  418824:	inc    edx
  418825:	cmc    
  418826:	cmp    DWORD PTR [edx+0x7237e702],0xffffffa8
  41882d:	mov    edi,0x7e9c358d
  418832:	loope  0x4188a0
  418834:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418835:	dec    eax
  418836:	in     al,dx
  418837:	xor    BYTE PTR [eax+0x1000a287],0x3e
  41883e:	std    
  41883f:	push   cs
  418840:	mov    bl,0x7d
  418842:	stos   BYTE PTR es:[edi],al
  418843:	ins    DWORD PTR es:[edi],dx
  418844:	lods   eax,DWORD PTR ds:[esi]
  418845:	add    al,0x43
  418847:	mov    DWORD PTR [eax-0x6bba7b10],eax
  41884d:	dec    edi
  41884e:	xchg   eax,eax
  418850:	leave  
  418851:	and    eax,0x433bfd69
  418856:	lods   eax,DWORD PTR ds:[esi]
  418857:	call   0x3f7daef8
  41885c:	pop    ds
  41885d:	pop    ecx
  41885e:	jnp    0x4188ab
  418860:	and    BYTE PTR [ecx+0x6567f7c6],ah
  418866:	ret    0x6986
  418869:	xor    ebp,edx
  41886b:	leave  
  41886c:	mov    BYTE PTR [ecx-0x16],cl
  41886f:	pop    ebp
  418870:	jo     0x4188bc
  418872:	or     BYTE PTR [ecx+0xd2d82ff],0x2a
  418879:	pop    ss
  41887a:	jp     0x418844
  41887c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41887d:	test   DWORD PTR [ecx+0x50d59bdf],eax
  418883:	loop   0x418894
  418885:	jne    0x4188bc
  418887:	mov    edi,0x47716bc
  41888c:	pushf  
  41888d:	push   esi
  41888e:	test   eax,edx
  418890:	xchg   ebx,eax
  418891:	mov    ds:0xc2bbf9c8,eax
  418896:	sub    al,0x43
  418898:	mov    BYTE PTR [esi+0x646dfbbe],ch
  41889e:	adc    eax,0x9ed1007e
  4188a3:	(bad)  
  4188a4:	neg    DWORD PTR [edi-0x11]
  4188a7:	cld    
  4188a8:	sub    DWORD PTR [edi-0x7],0x2c
  4188ac:	std    
  4188ad:	pop    ss
  4188ae:	xchg   esp,eax
  4188af:	sbb    eax,0x158c0d00
  4188b4:	or     eax,0x17d910
  4188b9:	xchg   esp,eax
  4188ba:	scas   al,BYTE PTR es:[edi]
  4188bb:	(bad)  
  4188bc:	and    edx,esp
  4188be:	mov    al,ds:0xc423c6
  4188c3:	xchg   edi,eax
  4188c4:	adc    al,0x94
  4188c6:	add    bh,ah
  4188c8:	jp     0x4188a4
  4188ca:	pushf  
  4188cb:	sbb    DWORD PTR ds:0xeb283d7d,edi
  4188d1:	add    bh,cl
  4188d3:	pop    edx
  4188d4:	jmp    0x41887c
  4188d6:	add    bh,ah
  4188d8:	jns    0x41886f
  4188da:	mov    ebp,0xfa2ac6fe
  4188df:	imul   edi,esi,0x1d
  4188e2:	sub    DWORD PTR [esi-0x59d25de4],ebp
  4188e8:	cs sbb eax,0xd2f30ac2
  4188ee:	aam    0xa9
  4188f0:	les    edi,FWORD PTR [edi+edi*1+0x13a17fde]
  4188f7:	out    0x3,eax
  4188f9:	mov    eax,ds:0x527ada72
  4188fe:	lock in eax,0x75
  418901:	push   ecx
  418902:	jmp    DWORD PTR [eax+0x17]
  418905:	add    BYTE PTR [esi-0x2ce7e143],dl
  41890b:	adc    eax,0xc101fe39
  418910:	out    0xfe,eax
  418912:	or     DWORD PTR [ecx-0x84bbb18],edi
  418918:	icebp  
  418919:	inc    esp
  41891a:	sbb    eax,ebx
  41891c:	cmp    al,BYTE PTR [edx-0x4ebe032f]
  418922:	fadd   st,st(2)
  418924:	ss add al,0x94
  418927:	add    bh,ah
  418929:	dec    BYTE PTR [ecx-0x40]
  41892c:	out    0xfe,eax
  41892e:	inc    ecx
  41892f:	shr    al,1
  418931:	xor    bh,0x24
  418934:	out    0x44,eax
  418936:	je     0x418931
  418938:	icebp  
  418939:	inc    ecx
  41893a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41893b:	push   edx
  41893c:	addr16 sub al,0xb2
  41893f:	idiv   edi
  418941:	pop    esp
  418942:	aad    0x7f
  418944:	push   ebx
  418945:	std    
  418946:	jge    0x418996
  418948:	or     DWORD PTR [esp+eax*4+0x0],0x278024c5
  418950:	std    
  418951:	jmp    0x142a46ed
  418956:	inc    ebp
  418957:	push   0x185b7040
  41895c:	xchg   DWORD PTR [esp+eiz*2],esp
  41895f:	sbb    edx,esi
  418961:	push   0xfffffffb
  418963:	sub    eax,DWORD PTR [eax]
  418965:	cli    
  418966:	xlat   BYTE PTR ds:[ebx]
  418967:	rol    BYTE PTR [esi-0x4237ffd4],0xe8
  41896e:	(bad)  
  41896f:	mov    bh,BYTE PTR [eax+0x27b76ade]
  418975:	mov    BYTE PTR [esp+esi*4],bl
  418978:	cmc    
  418979:	mov    ebp,0x3f9baf71
  41897e:	jmp    0x98c1ef6b
  418983:	add    ebp,eax
  418985:	jmp    DWORD PTR ds:0x70fbbb5f
  41898b:	fld    TBYTE PTR [edi]
  41898d:	sub    DWORD PTR [ecx],0x3
  418990:	add    BYTE PTR [eax+0x7d257156],bh
  418996:	pusha  
  418997:	shr    DWORD PTR [edi],cl
  418999:	or     eax,0xf5bd897f
  41899e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41899f:	lahf   
  4189a0:	daa    
  4189a1:	mov    BYTE PTR [ebx+ebp*2-0x6fba7c0b],bl
  4189a8:	add    BYTE PTR [eax],al
  4189aa:	jb     0x4189fe
  4189ac:	xlat   BYTE PTR ds:[ebx]
  4189ad:	or     al,0x57
  4189af:	xchg   esp,eax
  4189b0:	div    DWORD PTR [eax]
  4189b2:	cmp    edi,edi
  4189b4:	mov    ebx,0x2b3b62f3
  4189b9:	inc    edx
  4189ba:	add    ah,ah
  4189bc:	dec    edi
  4189bd:	adc    DWORD PTR [ebx],edi
  4189bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4189c0:	jo     0x4189ec
  4189c2:	jmp    0x418a32
  4189c4:	xor    bh,cl
  4189c6:	inc    edx
  4189c7:	es xor eax,0x36be0f69
  4189cd:	adc    DWORD PTR [eax],eax
  4189cf:	add    BYTE PTR ds:0xb613b324,bh
  4189d5:	gs sub eax,0x727230f
  4189db:	inc    ebx
  4189dc:	xchg   esp,eax
  4189dd:	addr16 icebp 
  4189df:	cmpxchg BYTE PTR [eax],dl
  4189e2:	cmc    
  4189e3:	(bad)  
  4189e4:	jmp    0xf966:0xb61440d3
  4189eb:	cmp    eax,ecx
  4189ed:	or     BYTE PTR [esi-0x2b],bh
  4189f0:	imul   dl
  4189f2:	or     al,BYTE PTR [ebx+eax*4+0x6efffb06]
  4189f9:	push   esi
  4189fa:	jmp    0x4abf73ff
  4189ff:	adc    al,0xfd
  418a01:	add    al,BYTE PTR [ebp-0x3ae796a3]
  418a07:	jge    0x418a32
  418a09:	stos   BYTE PTR es:[edi],al
  418a0a:	dec    eax
  418a0b:	adc    al,0x76
  418a0d:	imul   esi,DWORD PTR ss:[ebx-0x69],0x3613b325
  418a15:	gs sub eax,0x727230f
  418a1b:	cmp    eax,ebp
  418a1d:	out    dx,al
  418a1e:	jo     0x418a45
  418a20:	(bad)  
  418a21:	rol    DWORD PTR [eax+0x14],cl
  418a24:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418a25:	cmp    eax,0x84e7c11
  418a2a:	sbb    cl,BYTE PTR [ebx-0x3f7da9bd]
  418a30:	and    DWORD PTR [ecx],edx
  418a32:	aaa    
  418a33:	pop    ebp
  418a34:	add    BYTE PTR [edi+ebx*1-0x1f38f24d],dl
  418a3b:	rol    DWORD PTR [esi-0x4117a41e],0x9b
  418a42:	xchg   esi,eax
  418a43:	and    dh,bh
  418a45:	arpl   WORD PTR [edi],bp
  418a47:	jge    0x418ac4
  418a49:	fs sbb ah,bh
  418a4c:	adc    BYTE PTR [ebx-0x7002d6b4],0xe4
  418a53:	daa    
  418a54:	or     eax,0xfd2c7816
  418a59:	cmp    esp,DWORD PTR [ebx-0x4f2bdc42]
  418a5f:	mov    esi,0xdfed2b23
  418a64:	mov    BYTE PTR [ebx-0x3e],cl
  418a67:	add    edi,ebp
  418a69:	mov    eax,ds:0x13c97e33
  418a6e:	add    eax,0xd0b560c
  418a73:	adc    al,0xfd
  418a75:	mov    DWORD PTR [ebx],ebx
  418a77:	sub    dh,BYTE PTR [ebx-0x74]
  418a7a:	jg     0x418ad2
  418a7c:	in     al,dx
  418a7d:	repz jle 0x418a3d
  418a80:	adc    ah,0x16
  418a83:	or     bh,0x8a
  418a86:	pop    ss
  418a87:	add    DWORD PTR [ecx],edi
  418a89:	cmp    DWORD PTR [ebx+0x4fbdd3b4],edx
  418a8f:	sub    ebp,edi
  418a91:	retf   
  418a92:	mov    dl,0xb6
  418a94:	sti    
  418a95:	fist   DWORD PTR [ebp+ecx*1-0x1]
  418a99:	add    BYTE PTR [ebx-0x527efee9],bh
  418a9f:	sbb    BYTE PTR [ebp-0x6a7a90e2],ah
  418aa5:	or     al,0x17
  418aa7:	cmp    DWORD PTR [edi*8+0x96f469b],ebp
  418aae:	xlat   BYTE PTR ds:[ebx]
  418aaf:	add    al,ah
  418ab1:	mov    eax,0xc763f587
  418ab6:	mov    esp,DWORD PTR ds:0xcd72b16
  418abc:	bound  edi,QWORD PTR [ecx+0xfb3e76f]
  418ac2:	jmp    0x2d7c:0x913bc245
  418ac9:	sbb    BYTE PTR [ecx+0x25],bl
  418acc:	push   0xffffffa9
  418ace:	aas    
  418acf:	add    BYTE PTR [eax-0x48],dh
  418ad2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418ad3:	cmc    
  418ad4:	arpl   WORD PTR [edx-0x5b],dx
  418ad7:	add    bh,ah
  418ad9:	jl     0x418aba
  418adb:	and    al,0x12
  418add:	cmp    al,0xaf
  418adf:	repnz add edx,ecx
  418ae2:	mov    edi,0xe9fad9b1
  418ae7:	clc    
  418ae8:	out    dx,eax
  418ae9:	mov    eax,0xc703ab27
  418aee:	adc    BYTE PTR [ebx+0xc56ecfa],bh
  418af4:	sbb    ebx,DWORD PTR [esi]
  418af6:	in     eax,dx
  418af7:	or     DWORD PTR [edx-0x3f],esp
  418afa:	jg     0x418b77
  418afc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418afd:	scas   eax,DWORD PTR es:[edi]
  418afe:	add    BYTE PTR [ecx+ebp*8-0x99e03dd],al
  418b05:	mov    ecx,0x2577a33c
  418b0a:	enter  0x3f9c,0xde
  418b0e:	jp     0x418abf
  418b10:	daa    
  418b11:	data16 sub dl,BYTE PTR ds:0x910356a3
  418b18:	jnp    0x418af7
  418b1a:	pop    ss
  418b1b:	mov    ecx,0xafc91224
  418b20:	hlt    
  418b21:	push   0x3e24a152
  418b26:	jle    0x418b7f
  418b28:	fdiv   st(7),st
  418b2a:	test   al,0x18
  418b2c:	shl    DWORD PTR [ebx],0x2e
  418b2f:	inc    esp
  418b30:	loopne 0x418aba
  418b32:	sub    DWORD PTR ds:[esi+edi*8],esp
  418b36:	xchg   esp,eax
  418b37:	fwait
  418b38:	jns    0x418b03
  418b3a:	push   ss
  418b3b:	inc    esp
  418b3c:	or     al,0x56
  418b3e:	push   cs
  418b3f:	and    al,0xf4
  418b41:	cld    
  418b42:	jl     0x418ba7
  418b44:	and    eax,0xfb7ff173
  418b49:	jmp    0x418b41
  418b4b:	lods   eax,DWORD PTR ds:[esi]
  418b4c:	mov    ecx,0x7f4e2982
  418b51:	or     bh,bh
  418b53:	xchg   edi,eax
  418b54:	add    BYTE PTR [ecx],bh
  418b56:	cmp    al,0x6c
  418b58:	mov    cl,0xd3
  418b5a:	ror    BYTE PTR ds:0x41cefd2e,0xc6
  418b61:	imul   esi,esi,0x0
  418b64:	adc    BYTE PTR [esi-0x8],bl
  418b67:	mov    esi,0xe2b5f56d
  418b6c:	push   eax
  418b6d:	cs inc ebx
  418b6f:	rcl    DWORD PTR [esi-0x298de754],1
  418b75:	ror    DWORD PTR [edi+edx*2],cl
  418b78:	in     eax,0x22
  418b7a:	xchg   ebp,esp
  418b7c:	inc    DWORD PTR [eax-0x800143b]
  418b82:	add    esi,esi
  418b84:	push   0xfffffff4
  418b86:	jmp    0x418c06
  418b88:	lods   eax,DWORD PTR ds:[esi]
  418b89:	sbb    ebp,DWORD PTR [edi+0x7e]
  418b8c:	lods   eax,DWORD PTR ds:[esi]
  418b8d:	and    eax,0x22d5370d
  418b92:	sub    BYTE PTR [esi],0x92
  418b95:	jmp    0xf5e3de58
  418b9a:	mov    ch,0xae
  418b9c:	xchg   esi,eax
  418b9d:	cmc    
  418b9e:	mov    ch,0x9e
  418ba0:	cdq    
  418ba1:	arpl   ax,sp
  418ba3:	add    BYTE PTR [ebp-0x77641dc],ah
  418ba9:	fstp   TBYTE PTR [esi-0x39]
  418bac:	scas   al,BYTE PTR es:[edi]
  418bad:	push   es
  418bae:	add    DWORD PTR [eax],0xb60aff7d
  418bb4:	cmp    bh,dh
  418bb6:	or     dh,BYTE PTR [esi+0x657efd4a]
  418bbc:	mov    eax,ds:0x75e0bcfc
  418bc1:	and    al,0xbf
  418bc3:	xor    ecx,DWORD PTR [edi+0x33f57c]
  418bc9:	jb     0x418c3e
  418bcb:	ret    0xf889
  418bce:	or     ah,bh
  418bd0:	fidivr DWORD PTR [esi-0x5ff067d]
  418bd6:	popa   
  418bd7:	in     eax,dx
  418bd8:	add    DWORD PTR ds:0x5646ffff,ebp
  418bde:	xor    esi,DWORD PTR [eax]
  418be0:	sar    BYTE PTR [ebp-0x59],0x40
  418be4:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418be6:	(bad)  
  418be7:	stc    
  418be8:	jmp    0x418bc9
  418bea:	jnp    0x418c4d
  418bec:	cld    
  418bed:	sub    eax,0x7440bd2c
  418bf2:	(bad)  
  418bf3:	in     eax,dx
  418bf4:	inc    edi
  418bf5:	es ds or al,0xb6
  418bf9:	mov    edx,0xb2b60aff
  418bfe:	cli    
  418bff:	jle    0x418c66
  418c01:	and    edi,edi
  418c03:	mov    esp,0x40bfe5e0
  418c08:	lock in al,dx
  418c0a:	(bad)  
  418c0b:	(bad)  
  418c0c:	push   esi
  418c0e:	mov    ebp,0x67709ae6
  418c13:	rol    DWORD PTR [ebx+0x4d84fe5c],1
  418c19:	push   ecx
  418c1a:	sub    BYTE PTR [ebx-0x69726b78],bh
  418c20:	aas    
  418c21:	xchg   esp,eax
  418c22:	inc    edx
  418c23:	addr16 adc al,0x4b
  418c27:	sar    edi,0x5a
  418c2a:	mov    al,0xb5
  418c2c:	sti    
  418c2d:	add    BYTE PTR ds:0x54832954,cl
  418c33:	ins    DWORD PTR es:[edi],dx
  418c34:	stc    
  418c35:	mov    bh,0x8b
  418c37:	(bad)  [edi]
  418c39:	jge    0x418c48
  418c3b:	pop    ebp
  418c3c:	sub    DWORD PTR ds:0xf5c02342,ecx
  418c42:	fldcw  WORD PTR [edi]
  418c44:	add    al,BYTE PTR [edi-0x7c0adc3f]
  418c4a:	js     0x418c64
  418c4c:	add    DWORD PTR [eax],eax
  418c4e:	cvtps2pd xmm6,xmm1
  418c51:	or     al,0xa
  418c53:	inc    esp
  418c54:	adc    dh,BYTE PTR [ecx]
  418c56:	data16 mov cl,0xb6
  418c59:	repz (bad)
  418c5c:	daa    
  418c5d:	inc    edx
  418c5e:	or     eax,0x5e390fe5
  418c63:	mov    ah,0xd6
  418c65:	call   0x4290b301
  418c6a:	pop    edi
  418c6b:	add    DWORD PTR [eax+0x1352170c],ebx
  418c71:	add    BYTE PTR [edx+eax*2-0x15e0ee95],dl
  418c78:	repz or al,0x4a
  418c7b:	adc    al,0xf7
  418c7d:	inc    eax
  418c7e:	mov    ebp,0x180d2fdc
  418c83:	hlt    
  418c84:	sub    eax,0xbf7aebfd
  418c89:	adc    ecx,DWORD PTR [edi]
  418c8b:	aad    0x27
  418c8d:	aaa    
  418c8e:	dec    ecx
  418c8f:	inc    ebx
  418c90:	mov    ds:0x5f8f00d2,eax
  418c95:	cmc    
  418c96:	or     ebx,0x0
  418c99:	push   ecx
  418c9a:	daa    
  418c9b:	sar    DWORD PTR [ebp-0x24],0x17
  418c9f:	xchg   esp,eax
  418ca0:	ja     0x418c46
  418ca2:	pop    fs
  418ca4:	jnp    0x418c6b
  418ca6:	adc    DWORD PTR [eax+eax*1-0x1a603690],edx
  418cad:	cs test eax,0x9794e562
  418cb3:	add    al,0x7
  418cb5:	fisubr WORD PTR [ebp-0x5b]
  418cb8:	jne    0x418c6f
  418cba:	pause  
  418cbc:	push   0xffffffeb
  418cbe:	stc    
  418cbf:	ret    0x1ab3
  418cc2:	mov    al,0xb6
  418cc4:	mov    ebp,0xe787c10d
  418cc9:	stos   DWORD PTR es:[edi],eax
  418cca:	pavgb  mm3,QWORD PTR ds:0xba0d0a12
  418cd1:	jb     0x418c53
  418cd3:	push   esp
  418cd4:	lods   al,BYTE PTR ds:[esi]
  418cd5:	fldl2e 
  418cd7:	out    dx,al
  418cd8:	clc    
  418cd9:	pop    esp
  418cda:	test   BYTE PTR [edi+esi*1-0x3b3582d8],0x11
  418ce2:	inc    ebp
  418ce3:	mov    eax,ds:0x292f1e71
  418ce8:	and    DWORD PTR [edx-0x58],ebp
  418ceb:	xor    eax,DWORD PTR [eax]
  418ced:	out    dx,al
  418cee:	sub    ah,0x15
  418cf1:	mov    dh,0x26
  418cf3:	int    0xc3
  418cf5:	stos   BYTE PTR es:[edi],al
  418cf6:	test   BYTE PTR [eax],0x15
  418cf9:	neg    DWORD PTR [esi+eiz*1-0x1fdb8aff]
  418d00:	mov    ebx,0xf0e02c77
  418d05:	stos   BYTE PTR es:[edi],al
  418d06:	ret    0xc17a
  418d09:	xchg   ebp,eax
  418d0a:	out    0x26,al
  418d0c:	addr16 add al,0x72
  418d0f:	cmp    bl,cl
  418d11:	stos   BYTE PTR es:[edi],al
  418d12:	call   eax
  418d14:	loope  0x418d39
  418d16:	jae    0x418cf1
  418d18:	jb     0x418cc7
  418d1a:	or     esp,DWORD PTR [esi+0x4]
  418d1d:	stc    
  418d1e:	out    0x22,eax
  418d20:	sahf   
  418d21:	and    edi,ebp
  418d23:	ins    BYTE PTR es:[edi],dx
  418d24:	push   edi
  418d25:	repz adc BYTE PTR [edx],0x84
  418d29:	add    BYTE PTR [eax],al
  418d2b:	mov    dl,0xae
  418d2d:	(bad)  
  418d30:	dec    ebx
  418d31:	sbb    edi,ecx
  418d33:	cmp    al,0xba
  418d35:	sbb    eax,0x45b39c89
  418d3a:	inc    ebx
  418d3b:	std    
  418d3c:	cwde   
  418d3d:	add    BYTE PTR [eax],al
  418d3f:	jmp    0x9540a55a
  418d44:	js     0x418d1f
  418d46:	pop    ebp
  418d47:	jge    0x418dab
  418d49:	or     edx,0xd1db9ff
  418d4f:	aaa    
  418d50:	pop    esi
  418d51:	shl    DWORD PTR [esi],0xa4
  418d54:	or     DWORD PTR ds:0x1d843d84,0xfffffffd
  418d5b:	out    0x0,al
  418d5d:	add    esi,esp
  418d5f:	mov    BYTE PTR [esp+ebp*2],ch
  418d62:	xlat   BYTE PTR ds:[ebx]
  418d63:	dec    edx
  418d64:	std    
  418d65:	stc    
  418d66:	cmp    al,0x39
  418d68:	mov    eax,ds:0xd32d8421
  418d6d:	jns    0x418d8c
  418d6f:	cmp    DWORD PTR [esp+edi*2],0xa4248700
  418d76:	or     eax,0xa7ba83
  418d7b:	add    BYTE PTR [eax-0x25],dh
  418d7e:	sbb    edi,DWORD PTR [ecx]
  418d80:	mov    cl,0x33
  418d82:	sar    BYTE PTR [eax],cl
  418d84:	aaa    
  418d85:	or     al,0x91
  418d87:	adc    dh,bl
  418d89:	jns    0x418d94
  418d8b:	aaa    
  418d8c:	add    BYTE PTR [eax-0x51da8c30],ch
  418d92:	in     eax,0x40
  418d94:	adc    al,0x4
  418d96:	pop    edi
  418d97:	adc    DWORD PTR [edi+edx*1-0x6],edi
  418d9b:	sbb    DWORD PTR [ebx-0x3f7d980d],ecx
  418da1:	loope  0x418d93
  418da3:	ss pop ebp
  418da5:	mov    ch,0x6d
  418da7:	or     esi,DWORD PTR [ebx]
  418da9:	je     0x418dee
  418dab:	xchg   BYTE PTR [esi-0x7],cl
  418dae:	sub    BYTE PTR [esi-0xa61d5f1],bh
  418db4:	dec    edx
  418db6:	cmp    DWORD PTR [ecx-0x10],0xdf82147d
  418dbd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418dbe:	in     eax,0xfa
  418dc0:	cmp    eax,DWORD PTR [eax]
  418dc2:	cmp    bh,ah
  418dc4:	or     al,BYTE PTR [edx-0x511c3]
  418dca:	neg    BYTE PTR [edi+0x21]
  418dcd:	inc    eax
  418dce:	in     al,0x5f
  418dd0:	and    edi,edi
  418dd2:	loopne 0x418e13
  418dd4:	mov    bh,dl
  418dd6:	pop    ss
  418dd7:	add    edi,ebx
  418dd9:	jne    0x418e34
  418ddb:	cwde   
  418ddc:	(bad)  
  418ddd:	jmp    eax
  418ddf:	or     al,0x56
  418de1:	jmp    eax
  418de3:	hlt    
  418de4:	cli    
  418de5:	jne    0x418e20
  418de7:	in     al,0x70
  418de9:	or     BYTE PTR [ebp+0x51],dl
  418dec:	out    0xff,al
  418dee:	pop    edx
  418def:	sahf   
  418df0:	mov    edi,0x1051b00f
  418df5:	add    ch,bh
  418df7:	push   edi
  418df8:	cmp    BYTE PTR [ebp+0x39],bl
  418dfb:	push   eax
  418dfc:	shr    ecx,1
  418dfe:	add    eax,0xeafffaee
  418e03:	lods   al,BYTE PTR ds:[esi]
  418e04:	dec    edx
  418e05:	add    DWORD PTR [esi+eiz*1+0x6896456b],edx
  418e0c:	and    cl,BYTE PTR [eax]
  418e0e:	(bad)  
  418e0f:	push   ecx
  418e10:	js     0x418dd1
  418e12:	shl    ebx,cl
  418e14:	pop    ss
  418e15:	call   ebx
  418e17:	sub    BYTE PTR [ecx],al
  418e19:	xchg   DWORD PTR [ecx-0x53],edx
  418e1c:	jg     0x418de3
  418e1e:	xchg   edi,eax
  418e1f:	mov    al,0x72
  418e21:	add    BYTE PTR [ecx+ebp*1+0x6300b5f4],dl
  418e28:	sub    ah,dh
  418e2a:	mov    ch,0x43
  418e2c:	sub    eax,DWORD PTR [edx-0x21]
  418e2f:	mov    WORD PTR [edx],ss
  418e31:	aaa    
  418e32:	xchg   DWORD PTR [ecx-0x3f],ecx
  418e35:	out    dx,eax
  418e36:	mov    bh,0xe7
  418e39:	cmp    BYTE PTR ds:0xfbbda0d4,0x93
  418e40:	fwait
  418e41:	inc    ecx
  418e42:	adc    DWORD PTR [ebx+0x2b],0xa3804b7a
  418e49:	mov    ch,0xf7
  418e4b:	jg     0x418dce
  418e4d:	cmp    al,0x43
  418e4f:	sub    DWORD PTR fs:[ecx],eax
  418e52:	add    BYTE PTR [edx+ebx*2+0x13d98741],dl
  418e59:	mov    ecx,0x415ae6e8
  418e5e:	inc    eax
  418e5f:	or     eax,0x46e913ed
  418e64:	sti    
  418e65:	dec    edx
  418e66:	aas    
  418e67:	addr16 mov ecx,DWORD PTR [bp+di+0x24]
  418e6c:	mov    eax,ds:0x32dbfbc6
  418e71:	ret    
  418e72:	or     al,0xe2
  418e74:	out    dx,al
  418e75:	add    cl,BYTE PTR ds:0xbf05ff4a
  418e7b:	cmc    
  418e7c:	pop    ds
  418e7d:	(bad)  
  418e7e:	mov    edi,0x142c00db
  418e83:	sti    
  418e84:	sbb    eax,0x4a9d03e7
  418e89:	xor    BYTE PTR [eax+eax*1+0x1f],0xc9
  418e8e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418e8f:	(bad)  
  418e90:	and    eax,DWORD PTR [edx-0x3becfa79]
  418e96:	mov    dl,BYTE PTR [ebx]
  418e98:	adc    al,BYTE PTR [eax+0x8bb17f]
  418e9e:	fisub  WORD PTR [ecx+0x1b]
  418ea1:	adc    esp,edx
  418ea3:	ret    
  418ea4:	mov    ebx,0xafc96fc6
  418ea9:	xchg   DWORD PTR [ebx+ebx*1+0xbd44817],esp
  418eb0:	jmp    0x418ecf
  418eb2:	inc    esi
  418eb3:	and    ebx,DWORD PTR [ecx]
  418eb5:	xchg   DWORD PTR [ebx+ebx*1-0x3521a95f],ebp
  418ebc:	adc    dh,BYTE PTR [ebx+0xd548932]
  418ec2:	jne    0x418e6f
  418ec4:	xchg   esp,eax
  418ec5:	add    bh,ah
  418ec7:	xchg   BYTE PTR [esi+0x1a],dl
  418eca:	push   0x1e
  418ecc:	cdq    
  418ecd:	or     eax,0x841c66
  418ed2:	out    0x22,eax
  418ed4:	mov    al,0x73
  418ed6:	xor    dl,BYTE PTR [eax+0x35ba0093]
  418edc:	(bad)  
  418edd:	fldcw  WORD PTR [eax]
  418edf:	adc    edx,DWORD PTR [eax]
  418ee1:	(bad)  
  418ee2:	jmp    0x34c922ea
  418ee7:	clc    
  418ee8:	cmp    al,0x1
  418eea:	sbb    dh,BYTE PTR [esi]
  418eec:	(bad)  
  418eed:	mov    DWORD PTR ds:0x375c00b0,ebx
  418ef3:	test   BYTE PTR [esi+0x3e70dc8],0x15
  418efa:	sahf   
  418efb:	call   eax
  418efd:	xchg   edi,eax
  418efe:	xchg   esp,eax
  418eff:	sbb    eax,DWORD PTR [ebx-0x68]
  418f02:	sbb    esi,DWORD PTR [esi+0x1]
  418f05:	and    eax,0x5a721bb6
  418f0a:	sub    BYTE PTR [edx-0x7cff6feb],dh
  418f10:	test   eax,0x7af78186
  418f15:	mov    dh,0x1b
  418f17:	mov    DWORD PTR [esp+esi*2],esp
  418f1a:	daa    
  418f1b:	and    esp,DWORD PTR [edx+0xd]
  418f1e:	stc    
  418f1f:	sub    BYTE PTR [ebx+0x57535e2],ah
  418f25:	or     al,BYTE PTR [edi]
  418f27:	cmp    ch,BYTE PTR [edi+0x6a1291c3]
  418f2d:	mov    DWORD PTR ds:0xf62650e,ebx
  418f33:	std    
  418f34:	inc    esi
  418f35:	or     edi,eax
  418f37:	inc    BYTE PTR [edx]
  418f39:	out    0xc,ax
  418f3c:	ins    DWORD PTR es:[edi],dx
  418f3d:	out    0x11,al
  418f3f:	std    
  418f40:	cs adc cl,al
  418f43:	imul   DWORD PTR [edx-0x1fec404a]
  418f49:	pop    esp
  418f4a:	lock jge 0x418fc3
  418f4d:	mov    eax,0x97e9023a
  418f52:	mov    DWORD PTR [esi-0x6b],edx
  418f55:	add    BYTE PTR [edx+0x4c],ch
  418f58:	cmp    DWORD PTR [ebx],esp
  418f5a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418f5b:	test   edx,eax
  418f5d:	std    
  418f5e:	jne    0x418f7d
  418f60:	add    DWORD PTR [ecx],edx
  418f62:	jo     0x418faa
  418f64:	add    ch,cl
  418f66:	xchg   edi,eax
  418f67:	inc    ebp
  418f68:	inc    ebx
  418f69:	cmc    
  418f6a:	xchg   esi,eax
  418f6b:	add    BYTE PTR [eax],al
  418f6d:	jmp    0xde40a882
  418f72:	adc    edx,DWORD PTR [edi+0x2]
  418f75:	add    BYTE PTR ds:0x615e3700,ch
  418f7b:	icebp  
  418f7c:	jle    0x418f20
  418f7e:	dec    ecx
  418f7f:	loop   0x418f7b
  418f81:	jnp    0x37c4cf9c
  418f87:	or     esi,DWORD PTR [esi+eiz*1+0x2]
  418f8b:	jb     0x418f0f
  418f8d:	repz add ah,dl
  418f90:	jle    0x418f8c
  418f92:	shl    DWORD PTR [ecx+0xe],0x83
  418f96:	pop    ss
  418f97:	or     al,0x74
  418f99:	and    edi,DWORD PTR [edx+edi*8]
  418f9c:	add    BYTE PTR [eax],0xbd
  418f9f:	dec    DWORD PTR [edx]
  418fa1:	test   ecx,eax
  418fa3:	hlt    
  418fa4:	cli    
  418fa5:	jmp    FWORD PTR [esi]
  418fa7:	pop    esi
  418fa8:	pop    ebp
  418fa9:	add    dl,al
  418fab:	and    BYTE PTR [edx-0xd],0x42
  418faf:	loope  0x418fab
  418fb1:	inc    ebp
  418fb2:	test   eax,0xd3144236
  418fb7:	mov    edi,0x7f0075e4
  418fbc:	(bad)  
  418fbd:	(bad)  
  418fbe:	cmp    ah,BYTE PTR [ebx]
  418fc0:	imul   esi,DWORD PTR [eax-0x12],0xffffffed
  418fc4:	cmp    eax,0x45a47507
  418fc9:	call   0x11854ab4
  418fce:	add    DWORD PTR [ebp-0x1],edi
  418fd1:	inc    DWORD PTR [edx-0x73f5007b]
  418fd7:	xor    eax,0x56000005
  418fdc:	inc    ecx
  418fdd:	imul   ecx,DWORD PTR [edi],0xfff144be
  418fe3:	xor    dh,al
  418fe5:	mov    ch,0x13
  418fe7:	outs   dx,BYTE PTR ds:[esi]
  418fe8:	test   edx,edi
  418fea:	or     DWORD PTR [edx-0x7d],eax
  418fed:	and    dh,bl
  418fef:	xchg   esp,eax
  418ff0:	xor    ah,BYTE PTR [eax]
  418ff2:	sbb    DWORD PTR [esi],0x7d840f09
  418ff8:	push   esi
  418ff9:	and    ch,bh
  418ffb:	adc    eax,0x9400613f
  419000:	sub    DWORD PTR [eax],edx
  419002:	test   BYTE PTR [ecx-0x402dfaa],dl
  419008:	jmp    0x419001
  41900a:	ss pop ecx
  41900c:	adc    eax,0x48fdca9f
  419011:	add    eax,DWORD PTR [eax]
  419013:	xchg   esp,eax
  419014:	(bad)  
  419015:	(bad)  
  419016:	adc    edx,DWORD PTR [ebp+0x17000129]
  41901c:	add    DWORD PTR [edx],0x3918000d
  419022:	add    eax,DWORD PTR [eax]
  419024:	xchg   esp,eax
  419025:	dec    esi
  419026:	mov    edi,0x18a68b6b
  41902b:	icebp  
  41902c:	mov    bl,0xb9
  41902e:	movzx  eax,BYTE PTR [edi-0x72057b9a]
  419035:	xor    eax,0x89e80f2
  41903a:	cwde   
  41903b:	or     edx,DWORD PTR ds:0x940060be
  419041:	daa    
  419042:	adc    BYTE PTR [ebx-0x2e029af],al
  419048:	jnp    0x4190b7
  41904a:	cmc    
  41904b:	fst    DWORD PTR ss:[ebx]
  41904e:	lahf   
  41904f:	sar    BYTE PTR [ebp+0x8],cl
  419052:	add    al,BYTE PTR [eax]
  419054:	xchg   esp,eax
  419055:	loop   0x41901c
  419057:	adc    edx,DWORD PTR [ebp+0x17000127]
  41905d:	add    BYTE PTR [edx],al
  41905f:	or     eax,0x1f818
  419064:	xchg   esp,eax
  419065:	dec    esi
  419066:	mov    edi,0x6a008b6b
  41906b:	pop    esp
  41906c:	and    eax,0xe20fde1a
  419071:	in     eax,dx
  419072:	sub    DWORD PTR [ebx-0x6b4f8e2],eax
  419078:	adc    al,0x17
  41907a:	hlt    
  41907b:	push   cs
  41907c:	and    dh,BYTE PTR [ecx+edi*4+0x1f]
  419080:	or     DWORD PTR [eax-0x6bff764f],eax
  419086:	add    bh,ah
  419088:	push   cs
  419089:	adc    BYTE PTR [eax+0x19f11f99],cl
  41908f:	and    al,0xf8
  419091:	mov    ds:0xd29dfac3,al
  419096:	daa    
  419097:	imul   eax,DWORD PTR ds:0xc9ae0094,0xffffffa7
  41909e:	jmp    esi
  4190a0:	add    edx,DWORD PTR [ebp+edi*2-0x736efa91]
  4190a7:	pop    ebx
  4190a8:	add    eax,0xbe220094
  4190ad:	aas    
  4190ae:	or     DWORD PTR [edx-0x68],ebp
  4190b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4190b2:	sbb    DWORD PTR [esi+0xf],edx
  4190b5:	jmp    0xf606:0x9e82a9ed
  4190bc:	(bad)
  4190c0:	pop    ds
  4190c1:	adc    eax,0x8f9de416
  4190c6:	jg     0x4190f9
  4190c8:	mov    DWORD PTR [eax+eax*1-0x3ce8f119],edx
  4190cf:	sbb    BYTE PTR [edi],bl
  4190d1:	imul   ebx,DWORD PTR [ecx],0xc3aaf7ac
  4190d7:	repnz popf 
  4190d9:	dec    edx
  4190da:	daa    
  4190db:	lahf   
  4190dc:	add    al,0x94
  4190de:	add    BYTE PTR [edx+0x87d631],bh
  4190e4:	pushf  
  4190e5:	dec    ebx
  4190e6:	fadd   st,st(1)
  4190e8:	fiadd  WORD PTR [eax]
  4190ea:	or     eax,esi
  4190ec:	(bad)  
  4190ed:	call   0x1a42b889
  4190f2:	mov    si,0x3738
  4190f6:	in     al,0xb
  4190f8:	cmp    DWORD PTR [ebx],0xf6000085
  4190fe:	imul   eax,DWORD PTR [edi],0x86ec1789
  419104:	or     al,0xd8
  419106:	(bad)  
  419107:	cwde   
  419108:	fsubrp st(5),st
  41910a:	mov    bh,BYTE PTR [ebp+0x7]
  41910d:	fwait
  41910e:	xchg   edx,eax
  41910f:	sbb    edi,ebp
  419111:	and    al,0xec
  419113:	rol    DWORD PTR [edx-0x3],1
  419116:	add    DWORD PTR [edx],esi
  419118:	out    0xf0,eax
  41911a:	nop
  41911b:	add    BYTE PTR [eax],al
  41911d:	mov    edx,0x1486be85
  419122:	int3   
  419123:	xlat   BYTE PTR ds:[ebx]
  419124:	shl    esi,0x13
  419127:	or     bh,bh
  419129:	call   0x1a42b8c5
  41912e:	mov    si,0xbf38
  419132:	sti    
  419133:	or     eax,DWORD PTR [ecx+0x84ff]
  419139:	fiadd  WORD PTR [ecx+0x7]
  41913c:	mov    DWORD PTR [edi-0x27f37595],ebx
  419142:	push   esi
  419143:	cwde   
  419144:	fsubp  st(5),st
  419146:	xchg   edx,eax
  419147:	jl     0x419114
  419149:	cmp    BYTE PTR [edx+0xacfd15],bl
  41914f:	imul   ecx,edi,0x42
  419152:	cmc    
  419153:	or     DWORD PTR [edi],ebp
  419155:	out    0x34,eax
  419157:	xchg   edi,eax
  419158:	add    BYTE PTR [eax],al
  41915a:	fisub  DWORD PTR [ebp+0x300086c2]
  419160:	adc    BYTE PTR [eax],bh
  419162:	ret    0x883a
  419165:	rol    BYTE PTR [eax],cl
  419167:	sub    eax,0xfe03e704
  41916c:	rol    DWORD PTR [ecx+0x3b],1
  41916f:	fist   DWORD PTR [eax+0xc]
  419172:	adc    DWORD PTR [edi-0xf],0xffffffff
  419176:	(bad)  
  419177:	cmp    ch,BYTE PTR [esi+0x38638b06]
  41917d:	xchg   DWORD PTR [esp+ebp*8],ecx
  419180:	inc    eax
  419181:	jge    0x419164
  419183:	cld    
  419184:	add    al,0x81
  419186:	xchg   ecx,eax
  419187:	cmp    al,0xf6
  419189:	cli    
  41918a:	push   DWORD PTR [eax-0xebac9e8]
  419190:	jne    0x419168
  419192:	jmp    0x418df3
  419197:	mov    esi,0xa08941d1
  41919c:	sbb    BYTE PTR [eax],bh
  41919e:	ret    0x87ca
  4191a1:	xchg   esi,eax
  4191a2:	add    BYTE PTR [ebp-0x1fc18fd],bh
  4191a8:	rol    DWORD PTR [ecx+0x3b],1
  4191ab:	mov    edx,DWORD PTR [eax+0xc]
  4191ae:	sbb    DWORD PTR [ebx],0xfffffff1
  4191b1:	(bad)  
  4191b2:	inc    DWORD PTR [eax]
  4191b4:	mov    edx,0xe38b06ad
  4191b9:	das    
  4191ba:	xchg   DWORD PTR [esp+ebx*4],ecx
  4191bd:	inc    eax
  4191be:	jge    0x4191a1
  4191c0:	jl     0x4191c6
  4191c2:	test   BYTE PTR [ebp-0x34],dl
  4191c5:	cmc    
  4191c6:	cli    
  4191c7:	push   DWORD PTR [eax]
  4191c9:	(bad)  
  4191cb:	inc    ebp
  4191cc:	popa   
  4191cd:	jne    0x4191a5
  4191cf:	jmp    0x4191d6
  4191d1:	xor    bh,cl
  4191d3:	inc    edx
  4191d4:	in     al,0x4f
  4191d6:	adc    DWORD PTR [ebx],edi
  4191d8:	xchg   esp,eax
  4191d9:	jmp    0x41917a
  4191db:	pop    esi
  4191dc:	outs   dx,DWORD PTR ds:[esi]
  4191dd:	sub    dl,al
  4191df:	rcl    esi,1
  4191e1:	inc    edx
  4191e2:	mov    ebx,0xa8aa9b6b
  4191e7:	or     edx,DWORD PTR [ecx+ebp*1-0x5d7049f4]
  4191ee:	mov    ch,0x33
  4191f0:	push   ds
  4191f1:	or     eax,0x481440f2
  4191f6:	icebp  
  4191f7:	or     al,0x19
  4191f9:	or     DWORD PTR [ecx],edx
  4191fb:	std    
  4191fc:	sbb    eax,DWORD PTR [esi-0x3a]
  4191ff:	adc    ecx,ebp
  419201:	in     al,0xf7
  419203:	jge    0x4191f2
  419205:	xor    eax,edx
  419207:	xor    dh,ah
  419209:	jmp    0x7c3f:0x12a05388
  419210:	shl    BYTE PTR [edx+0x0],0x31
  419214:	(bad)  
  419215:	jmp    0x801e:0x70005dd6
  41921c:	xor    al,0x88
  41921e:	sub    DWORD PTR [ecx],eax
  419220:	or     eax,0x5688120a
  419225:	adc    BYTE PTR [ebx-0x56a8f0f4],0x21
  41922c:	adc    BYTE PTR [ebx-0x4c0fd863],cl
  419232:	popf   
  419233:	sbb    eax,DWORD PTR [ebx-0x80]
  419236:	loopne 0x4191fc
  419238:	adc    esp,DWORD PTR [edx]
  41923a:	rol    BYTE PTR [edi+0x40f19c4b],1
  419240:	or     eax,0xfd262e18
  419245:	mov    ebp,DWORD PTR [ebx+0x1e94eb9d]
  41924b:	xchg   BYTE PTR [edx-0x76fed877],dl
  419251:	leave  
  419252:	add    BYTE PTR [ebx],bl
  419254:	adc    BYTE PTR [esi+0x1b],0x70
  419258:	mov    esi,0xc11825f
  41925d:	mov    DWORD PTR [ebp-0x70],edi
  419260:	push   cs
  419261:	xchg   esp,eax
  419262:	add    BYTE PTR [esi],al
  419264:	out    0x26,eax
  419266:	or     ch,BYTE PTR [edx+eax*8+0x43]
  41926a:	mov    DWORD PTR [edi+esi*8-0x6493c084],ebp
  419271:	sbb    al,0xbf
  419273:	push   edx
  419274:	fild   WORD PTR [ebx-0x6e]
  419277:	xor    eax,0xe6f8a287
  41927c:	pop    DWORD PTR [eax]
  41927e:	jge    0x41922a
  419280:	out    0x1a,al
  419282:	mov    bh,al
  419284:	jno    0x4192d2
  419286:	pop    ds
  419287:	scas   eax,DWORD PTR es:[edi]
  419288:	fimul  DWORD PTR [esi-0x62d7d72b]
  41928e:	sti    
  41928f:	adc    eax,0xae674464
  419294:	jno    0x41925f
  419296:	jecxz  0x4192c1
  419298:	cld    
  419299:	mov    cs,WORD PTR [edx-0xc]
  41929c:	rol    DWORD PTR [ebp-0x63],0x38
  4192a0:	push   ss
  4192a1:	lock sbb eax,0x7fc1c102
  4192a7:	mov    ebp,ebx
  4192a9:	xchg   BYTE PTR [esi+0xdd7faff],bh
  4192af:	ret    0xdde7
  4192b2:	pop    ecx
  4192b3:	jecxz  0x41928f
  4192b5:	iret   
  4192b6:	push   esp
  4192b7:	adc    eax,0xc36aefa4
  4192bc:	cli    
  4192bd:	xchg   edi,eax
  4192be:	in     al,0x29
  4192c0:	add    bh,ch
  4192c2:	pop    ebx
  4192c3:	mov    DWORD PTR [ebp+0x12301ca7],ebp
  4192c9:	aaa    
  4192ca:	mov    ebp,0x36bf004a
  4192cf:	mov    al,bl
  4192d1:	bound  edx,QWORD PTR [esi-0x67]
  4192d4:	sub    BYTE PTR [ecx],0x4
  4192d7:	lock cmp BYTE PTR [edi+ecx*4-0x3725f272],bh
  4192df:	aad    0x86
  4192e1:	lahf   
  4192e2:	add    BYTE PTR [ebx],cl
  4192e4:	fdivr  DWORD PTR [esi-0x1162e10a]
  4192ea:	(bad)  
  4192eb:	sahf   
  4192ec:	jg     0x419369
  4192ee:	stc    
  4192ef:	xchg   edi,eax
  4192f0:	add    eax,DWORD PTR [ebx-0x2ec8bd5]
  4192f6:	and    ch,ch
  4192f8:	sbb    BYTE PTR ds:0xfd253a6b,cl
  4192fe:	(bad)  
  4192ff:	or     al,cl
  419301:	and    ebp,DWORD PTR [ecx]
  419303:	and    ecx,eax
  419305:	and    eax,esi
  419307:	and    al,0xe1
  419309:	mov    BYTE PTR [esi+0x3cfe1531],dl
  41930f:	cld    
  419310:	xchg   ecx,ecx
  419312:	scas   al,BYTE PTR es:[edi]
  419313:	add    al,0xed
  419315:	push   ebp
  419316:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419317:	add    al,0x5
  419319:	std    
  41931a:	adc    al,0x8c
  41931c:	adc    esi,DWORD PTR [ebx-0x1f]
  41931f:	scas   eax,DWORD PTR es:[edi]
  419320:	mov    cl,0xe3
  419322:	mov    gs,WORD PTR [esi-0x61567d39]
  419328:	adc    DWORD PTR [edi+ebp*8-0x69],0x9c143900
  419330:	(bad)  
  419331:	rol    DWORD PTR [eax+0x66fd2382],cl
  419337:	xchg   edx,eax
  419338:	sub    eax,0xc11098e9
  41933d:	adc    edx,DWORD PTR [edx]
  41933f:	push   ecx
  419340:	cdq    
  419341:	test   eax,0x38a85562
  419346:	add    BYTE PTR [eax],al
  419348:	mov    ch,0x6a
  41934a:	xchg   BYTE PTR [edi],cl
  41934c:	or     ecx,DWORD PTR [ebx]
  41934e:	cmp    dl,0x70
  419351:	jno    0x41935c
  419353:	inc    ebx
  419354:	data16 fsubr DWORD PTR [esi-0x6a]
  419358:	std    
  419359:	xor    al,BYTE PTR [edi]
  41935b:	jne    0x4193b6
  41935d:	jecxz  0x41937b
  41935f:	add    DWORD PTR [edi-0x41e38bfb],0x79
  419366:	pop    ebp
  419367:	add    al,cl
  419369:	xchg   ebx,eax
  41936a:	jle    0x419366
  41936c:	inc    esi
  41936d:	test   BYTE PTR [esi],cl
  41936f:	add    DWORD PTR [edi-0x5],0x73
  419373:	or     al,0xbc
  419375:	cmc    
  419376:	add    BYTE PTR [eax],0x3d
  419379:	add    BYTE PTR [ebx],cl
  41937b:	test   ebx,edx
  41937d:	stc    
  41937e:	cli    
  41937f:	jmp    FWORD PTR [esi-0x7]
  419382:	inc    eax
  419383:	adc    al,0xa4
  419385:	cmp    edx,DWORD PTR [ecx]
  419387:	jl     0x41939c
  419389:	call   0xfa8492ed
  41938e:	ss pop esi
  419390:	push   ecx
  419391:	or     DWORD PTR [edi+0x3d],edi
  419394:	inc    edx
  419395:	cli    
  419396:	cli    
  419397:	cmovnp ecx,DWORD PTR ds:0x8e4fa80
  41939e:	test   BYTE PTR [ebx+0x2],cl
  4193a1:	cli    
  4193a2:	cli    
  4193a3:	and    DWORD PTR [edi],0x1d
  4193a6:	or     al,0x84
  4193a8:	jg     0x4193a3
  4193aa:	cli    
  4193ab:	inc    DWORD PTR [eax]
  4193ad:	sub    al,0xf2
  4193af:	lahf   
  4193b0:	add    BYTE PTR [ebp-0x147bf501],ch
  4193b6:	clc    
  4193b7:	cli    
  4193b8:	(bad)  
  4193b9:	(bad)  
  4193ba:	aas    
  4193bb:	cmp    cl,al
  4193bd:	ror    edi,0xe4
  4193c0:	sub    edx,DWORD PTR [edx+ebp*4+0x63cffd16]
  4193c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4193c8:	or     al,0x17
  4193ca:	adc    DWORD PTR [eax],ebx
  4193cc:	std    
  4193cd:	and    DWORD PTR [edx],0x4f
  4193d0:	adc    DWORD PTR [edi],edx
  4193d2:	iret   
  4193d3:	or     BYTE PTR [ebp+eax*4-0x5a],dh
  4193d7:	sbb    eax,0x820de020
  4193dc:	cli    
  4193dd:	xor    al,0x29
  4193df:	add    DWORD PTR [eax],eax
  4193e1:	mov    esp,DWORD PTR [eax+ecx*1-0x3cfdac03]
  4193e8:	aas    
  4193e9:	(bad)
  4193ed:	sub    eax,0x3bfd1713
  4193f2:	dec    esi
  4193f3:	mov    bh,0x6b
  4193f5:	mov    ds:0x2bfe3aa6,eax
  4193fa:	sbb    cl,BYTE PTR [eax]
  4193fc:	mov    dh,0x87
  4193fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4193ff:	sbb    cl,BYTE PTR [edx]
  419401:	mov    esp,DWORD PTR [ebp+0x4213fe29]
  419407:	test   dl,bh
  419409:	lahf   
  41940a:	or     bh,BYTE PTR [ebp-0x20]
  41940d:	add    dl,BYTE PTR [edx+0x18]
  419410:	add    DWORD PTR [eax],0x84081cfe
  419416:	retf   
  419417:	bound  ebx,QWORD PTR [eax]
  419419:	std    
  41941a:	pop    ss
  41941b:	pop    edi
  41941c:	push   es
  41941d:	or     eax,0xfd176318
  419422:	(bad)  [edi+0x2994831a]
  419428:	add    DWORD PTR ds:0xfd176710,ecx
  41942e:	ret    
  41942f:	in     eax,0xc3
  419431:	cmp    ch,dl
  419433:	or     al,0x57
  419435:	out    0xeb,eax
  419437:	mov    ds:0x6ffd17,al
  41943c:	lds    esp,FWORD PTR [edi+0x19737f90]
  419442:	cdq    
  419443:	adc    ah,dh
  419445:	push   ecx
  419446:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419447:	jge    0x41949a
  419449:	or     eax,0x1d69f600
  41944e:	lea    ecx,[esp+edx*8-0x44fa817c]
  419455:	repnz adc al,0x17
  419458:	fmul   QWORD PTR [edi+0x7e217f9f]
  41945e:	xchg   esp,eax
  41945f:	add    bh,ah
  419461:	or     BYTE PTR [edi],dl
  419463:	xchg   BYTE PTR ds:0xa6be5118,dl
  419469:	fmul   QWORD PTR [edx]
  41946b:	xchg   ebp,eax
  41946c:	xor    al,0x2a
  41946e:	adc    al,0x13
  419470:	(bad)  
  419471:	pop    ss
  419472:	adc    edi,DWORD PTR [edx+ebx*8+0x1f200dc]
  419479:	pop    esp
  41947a:	mov    gs,WORD PTR [ecx]
  41947c:	adc    ah,dh
  41947e:	fcmovnb st,st(1)
  419480:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419481:	in     eax,dx
  419482:	add    dh,0x12
  419485:	(bad)  
  419486:	pop    ss
  419487:	mov    eax,ds:0x628aea4a
  41948c:	int3   
  41948d:	mov    esp,0xedfca400
  419492:	sbb    BYTE PTR [eax+0x12],0xb6
  419496:	pop    ss
  419497:	push   ebp
  419498:	adc    DWORD PTR [eax+esi*8],esp
  41949b:	mov    ds:0xc197fac3,al
  4194a0:	daa    
  4194a1:	sub    eax,0x6011d916
  4194a6:	shl    DWORD PTR [edi+0x1f07a7d5],0xbe
  4194ad:	test   BYTE PTR [edi],dl
  4194af:	rcl    ebp,0x1c
  4194b2:	test   al,0x88
  4194b4:	jge    0x4194b6
  4194b6:	leave  
  4194b7:	mov    DWORD PTR [ebx],edx
  4194b9:	std    
  4194ba:	ficomp WORD PTR [ecx-0x1]
  4194bd:	mov    BYTE PTR [edi-0x6fbf42d],bh
  4194c3:	fwait
  4194c4:	add    al,0x84
  4194c6:	add    ebp,DWORD PTR [edx-0x5d5502ed]
  4194cc:	mov    ebp,0xed4d0013
  4194d1:	jnp    0x4194f2
  4194d3:	test   eax,0x8b36fdf4
  4194d8:	jns    0x41951d
  4194da:	aad    0x0
  4194dc:	dec    esi
  4194dd:	push   edx
  4194de:	or     eax,0xfd136974
  4194e3:	push   ds
  4194e4:	aas    
  4194e5:	mov    bl,0x6b
  4194e7:	out    0x16,al
  4194e9:	and    bh,bl
  4194eb:	push   cs
  4194ec:	mov    ds:0xeeab603,eax
  4194f1:	stos   BYTE PTR es:[edi],al
  4194f2:	xor    esi,edi
  4194f4:	cmp    eax,DWORD PTR [ecx]
  4194f6:	jmp    ebp
  4194f8:	adc    al,0x18
  4194fa:	sti    
  4194fb:	out    dx,al
  4194fc:	cmp    BYTE PTR [edi-0x35dbd304],0x4a
  419503:	cmc    
  419504:	add    esi,DWORD PTR [ebx]
  419506:	out    0xc3,eax
  419508:	lods   al,BYTE PTR ds:[esi]
  419509:	adc    edi,ebp
  41950b:	pusha  
  41950c:	aam    0xec
  41950e:	cmp    BYTE PTR [eax-0x43227a66],ch
  419514:	mov    ds:0x3c173913,al
  419519:	add    al,0x81
  41951b:	ins    DWORD PTR es:[edi],dx
  41951c:	mov    WORD PTR [ebx],ss
  41951e:	std    
  41951f:	not    BYTE PTR [ecx-0x1]
  419522:	mov    BYTE PTR [edi],dh
  419524:	les    ecx,FWORD PTR [edx]
  419526:	add    al,0xf9
  419528:	cwde   
  419529:	add    eax,DWORD PTR [edi+eiz*4+0xfd13ac]
  419530:	outs   dx,BYTE PTR ds:[esi]
  419531:	jmp    0x4815a976
  419536:	adc    DWORD PTR [ebx+ecx*1-0x1c],edi
  41953a:	mov    bh,0xfd
  41953c:	cmp    ch,dl
  41953e:	test   BYTE PTR [ebp+0x0],al
  419541:	mov    eax,ds:0x280fbe35
  419546:	test   al,0xf8
  419548:	(bad)  
  419549:	jmp    0x8a83:0x6a6c5b2a
  419550:	std    
  419551:	(bad)  
  419553:	or     dh,BYTE PTR [esi+0x34567b6e]
  419559:	mov    bl,0xf
  41955b:	or     eax,0x94814a10
  419560:	std    
  419561:	mov    edx,0x30ff3ef6
  419566:	and    BYTE PTR [esi],dh
  419568:	dec    ebp
  419569:	push   ecx
  41956a:	js     0x419547
  41956c:	jmp    0x3c7e24
  419571:	les    eax,FWORD PTR [eax+0x11]
  419574:	cmp    ebp,DWORD PTR [esi+eax*1-0x77]
  419578:	jnp    0x4195a2
  41957a:	idiv   dl
  41957c:	cmp    ebx,DWORD PTR [ebx]
  41957e:	push   0xf7d5830c
  419583:	cli    
  419584:	jmp    FWORD PTR [edx]
  419586:	mov    esi,0x30d38afe
  41958b:	repz add al,0xd
  41958e:	adc    al,0xc
  419590:	test   BYTE PTR [edi-0x9],cl
  419593:	cli    
  419594:	jmp    FWORD PTR [esi-0x1bebbf0b]
  41959a:	inc    esi
  41959b:	adc    DWORD PTR [ebx+ebx*1-0x24],edi
  41959f:	push   ebx
  4195a0:	std    
  4195a1:	cmp    dh,dh
  4195a3:	or     dh,BYTE PTR [esi+0xb00b200]
  4195a9:	mov    dh,0x94
  4195ab:	out    0xfc,al
  4195ad:	mov    esi,0xbf0821b4
  4195b2:	adc    DWORD PTR [esi],eax
  4195b4:	sti    
  4195b5:	add    BYTE PTR [edi+0x5bb6041e],ch
  4195bb:	sbb    BYTE PTR [esi+esi*4],al
  4195be:	pop    ebx
  4195bf:	sbb    eax,DWORD PTR [edx-0x20]
  4195c2:	mov    WORD PTR [edx],ss
  4195c4:	inc    edx
  4195c5:	add    DWORD PTR [ecx+ebx*4-0x39f7ac2e],ebx
  4195cc:	sub    BYTE PTR [ecx+0xd12be70],dl
  4195d2:	dec    edx
  4195d3:	push   esi
  4195d4:	add    BYTE PTR ds:0xbefd7642,cl
  4195da:	jne    0x4195fd
  4195dc:	or     dl,cl
  4195de:	sbb    eax,0x4d010d6c
  4195e3:	and    al,bl
  4195e5:	adc    ecx,DWORD PTR [ebx-0x6bff2b63]
  4195eb:	sbb    DWORD PTR [eax+0xa7db5f8],eax
  4195f1:	(bad)
  4195f4:	(bad)  
  4195f5:	call   DWORD PTR [ecx+ebx*1+0x7c174d28]
  4195fc:	loope  0x4195fd
  4195fe:	ds pusha 
  419600:	mov    BYTE PTR [ebx+0x78],al
  419603:	fnstenv [ebx+0x2f9a1fc]
  419609:	mov    dh,0x0
  41960b:	fwait
  41960c:	mov    ds,WORD PTR ss:[ebx]
  41960f:	fwait
  419610:	ja     0x419683
  419612:	nop
  419613:	popa   
  419614:	fld    DWORD PTR [ebx]
  419616:	std    
  419617:	and    DWORD PTR [ecx],0x564ad500
  41961d:	mov    cs,WORD PTR [edi]
  41961f:	pop    ds
  419620:	bound  edx,QWORD PTR [ebx+esi*2]
  419623:	nop
  419624:	add    BYTE PTR [esi+0x4218938e],ah
  41962a:	and    edx,ecx
  41962c:	push   cs
  41962d:	ins    BYTE PTR es:[edi],dx
  41962e:	inc    ebx
  41962f:	inc    eax
  419630:	sti    
  419631:	retf   
  419632:	cmc    
  419633:	mov    edi,0x1704860e
  419638:	mov    ah,0xf1
  41963a:	add    edx,DWORD PTR [edi+edi*8-0x25543c4]
  419641:	xor    al,0xc4
  419643:	xchg   ebp,eax
  419644:	inc    ecx
  419645:	inc    edi
  419646:	or     ecx,DWORD PTR [ebp-0x5ee415bf]
  41964c:	push   esi
  41964d:	scas   al,BYTE PTR es:[edi]
  41964e:	add    bl,BYTE PTR [ecx+0x43019e56]
  419654:	and    edi,ebp
  419656:	or     BYTE PTR [ebx],bh
  419658:	cmp    ebx,0x8a94c7db
  41965e:	sub    bh,0xe0
  419661:	out    0x4,al
  419663:	pop    ss
  419664:	arpl   dx,bp
  419666:	add    edx,DWORD PTR [ebp+edi*8+0x56a0fc54]
  41966d:	addr16 jae 0x419670
  419670:	out    dx,eax
  419671:	shl    dh,0x0
  419674:	cmp    al,0x1a
  419676:	popf   
  419677:	mov    bh,ah
  419679:	hlt    
  41967a:	nop
  41967b:	add    DWORD PTR [ecx],esi
  41967d:	xchg   esp,eax
  41967e:	rcl    BYTE PTR [edi+eiz*4],cl
  419681:	call   0xf0e8ab1a
  419686:	in     eax,0x99
  419688:	(bad)  
  419689:	or     eax,0x8fbfc54
  41968e:	(bad)  
  41968f:	adc    ecx,DWORD PTR [ecx]
  419691:	test   BYTE PTR [edi-0xef6e8fd],ah
  419697:	add    edx,DWORD PTR [ecx+edi*2-0x26031bc4]
  41969e:	jmp    DWORD PTR [ecx-0x2b]
  4196a1:	loope  0x41962b
  4196a3:	adc    al,0xdc
  4196a5:	into   
  4196a6:	dec    esi
  4196a7:	cmp    DWORD PTR [edi-0x6c8de46f],eax
  4196ad:	or     esi,DWORD PTR [ebx-0x7f]
  4196b0:	push   cs
  4196b1:	or     eax,0x91a6f973
  4196b6:	or     eax,DWORD PTR [esi-0x4d17f9e3]
  4196bc:	js     0x4196c9
  4196be:	std    
  4196bf:	ins    BYTE PTR es:[edi],dx
  4196c0:	push   eax
  4196c1:	sti    
  4196c2:	and    BYTE PTR [edx+0x6afd0da2],0x4f
  4196c9:	inc    DWORD PTR [eax-0x75f2883c]
  4196cf:	out    dx,eax
  4196d0:	pop    edx
  4196d1:	ret    
  4196d2:	add    ecx,DWORD PTR [esi+0x0]
  4196d5:	mov    ?,ebx
  4196d7:	sub    DWORD PTR [esi],0xd3fd0bb0
  4196dd:	lahf   
  4196de:	and    eax,0x97e3ad
  4196e3:	push   0x42
  4196e5:	sbb    DWORD PTR [eax+0xa],0x4b7797e9
  4196ec:	lds    edx,FWORD PTR [esi+0x50e85556]
  4196f2:	mov    esi,0x7a3794fc
  4196f7:	inc    ebp
  4196f8:	jmp    0x4196a0
  4196fa:	xchg   ecx,eax
  4196fb:	sbb    esi,DWORD PTR [eax+0x5d]
  4196fe:	stc    
  4196ff:	cld    
  419700:	jl     0x419741
  419702:	js     0x4196cd
  419704:	xchg   edi,eax
  419705:	xchg   BYTE PTR [ecx+0x5697390f],dl
  41970b:	add    eax,0x90806dee
  419710:	xor    al,0xd0
  419712:	or     al,0xfe
  419714:	push   esp
  419715:	add    BYTE PTR [eax],al
  419717:	lds    eax,FWORD PTR [eax]
  419719:	out    dx,al
  41971a:	shl    bh,1
  41971c:	ins    BYTE PTR es:[edi],dx
  41971d:	(bad)  
  41971f:	cli    
  419720:	mov    esp,DWORD PTR ds:0x311dfb84
  419726:	repnz cli 
  419728:	jne    0x4196ba
  41972a:	icebp  
  41972b:	jne    0x41979d
  41972d:	xor    ch,BYTE PTR [eax+0x9]
  419730:	dec    eax
  419732:	cmp    BYTE PTR [ebx],dl
  419734:	inc    eax
  419735:	lods   eax,DWORD PTR ds:[esi]
  419736:	pop    ebx
  419737:	push   esi
  419738:	test   DWORD PTR [eax],eax
  41973a:	in     eax,dx
  41973b:	or     BYTE PTR [bx+di+0x7493],cl
  419740:	mov    al,BYTE PTR [edi+0x22]
  419743:	in     al,dx
  419744:	dec    eax
  419745:	or     ch,BYTE PTR [ebp+0x11be7f00]
  41974b:	add    DWORD PTR [eax],eax
  41974d:	add    BYTE PTR [ebp+0x69],bh
  419750:	push   es
  419751:	mov    edi,DWORD PTR [eax]
  419753:	or     al,0x86
  419755:	xchg   cl,dh
  419757:	(bad)  
  419758:	(bad)  
  419759:	inc    DWORD PTR [esi]
  41975b:	mov    bh,0xe4
  41975d:	xor    al,0x67
  41975f:	add    BYTE PTR [eax],al
  419761:	mov    edi,DWORD PTR [eax]
  419763:	and    al,0x3d
  419765:	push   eax
  419766:	mov    dl,0x68
  419768:	sbb    eax,0xfaf6bb0f
  41976d:	jne    0x4197c0
  41976f:	push   DWORD PTR [ebp+0x3d50cd90]
  419775:	add    BYTE PTR [edx-0x65fcea98],dl
  41977b:	dec    ecx
  41977c:	cld    
  41977d:	jne    0x4197cc
  41977f:	mov    eax,esi
  419781:	jmp    FWORD PTR [eax+0x3575fc0b]
  419787:	call   0xf2747788
  41978c:	add    al,0x2
  41978f:	cmp    ebp,0x9
  419792:	xchg   esp,eax
  419793:	sbb    DWORD PTR [ecx],eax
  419795:	mov    eax,0xfd0f3d9e
  41979a:	in     eax,dx
  41979b:	lahf   
  41979c:	sbb    bh,ch
  41979e:	add    bl,dh
  4197a0:	mov    es,esp
  4197a2:	and    edx,DWORD PTR [ecx+ebp*8+0xe]
  4197a6:	jae    0x41975c
  4197a8:	sub    dl,BYTE PTR [edi+0x5]
  4197ab:	fucomi st,st(4)
  4197ad:	out    dx,eax
  4197ae:	or     al,0xa
  4197b0:	mov    dh,BYTE PTR [ebx+0x5b]
  4197b3:	push   esp
  4197b4:	sbb    DWORD PTR [eax],edx
  4197b6:	jae    0x419754
  4197b8:	push   ss
  4197b9:	cmp    BYTE PTR [esi-0x45],dl
  4197bc:	or     al,0xf1
  4197be:	mov    bh,bl
  4197c0:	mov    dl,BYTE PTR [ebx+ecx*1-0x1806f355]
  4197c7:	fdivr  DWORD PTR [edx+0xf]
  4197ca:	std    
  4197cb:	adc    edx,ebx
  4197cd:	inc    BYTE PTR [edx+0x11058]
  4197d3:	dec    esp
  4197d4:	push   cs
  4197d5:	or     eax,0xacc083fd
  4197da:	call   0x43bc5a5a
  4197df:	mov    eax,0x9555571a
  4197e4:	pop    ecx
  4197e5:	mov    cl,0xfc
  4197e7:	jmp    0x93f796e5
  4197ec:	loop   0x419782
  4197ee:	sbb    esp,DWORD PTR [ebx-0x166f7c4d]
  4197f4:	pop    ecx
  4197f5:	add    ebp,edi
  4197f7:	leave  
  4197f8:	adc    DWORD PTR [eax*8+0xf9502e2],eax
  4197ff:	xchg   edi,eax
  419800:	jmp    0x98420b13
  419805:	sahf   
  419806:	cmp    bh,ch
  419808:	test   eax,0x3b7f1921
  41980d:	add    dh,ah
  41980f:	adc    BYTE PTR [edi],dl
  419811:	inc    eax
  419812:	out    dx,al
  419813:	xchg   BYTE PTR [ebx+0x3c03e6f9],cl
  419819:	out    0xca,eax
  41981b:	adc    cl,bh
  41981d:	jle    0x4197cd
  41981f:	add    eax,0x35b4a1b
  419824:	xchg   esp,eax
  419825:	add    al,al
  419827:	mov    eax,ds:0x7ce7009a
  41982c:	push   edi
  41982d:	in     al,0x26
  41982f:	mov    ah,0xd0
  419831:	xchg   esp,eax
  419832:	mov    BYTE PTR [eax],0x2
  419835:	add    edx,DWORD PTR [esi+0x54fb9f96]
  41983b:	jae    0x419861
  41983d:	lods   eax,DWORD PTR ds:[esi]
  41983e:	es add al,0xb1
  419841:	xchg   esp,eax
  419842:	fiadd  WORD PTR [ecx+eax*8]
  419845:	mov    cl,0x75
  419847:	xchg   esi,eax
  419848:	xchg   ebx,eax
  419849:	ja     0x4197ed
  41984b:	adc    BYTE PTR [edi],ah
  41984d:	cld    
  41984e:	gs xchg esi,eax
  419850:	fwait
  419851:	sbb    BYTE PTR [edx],ah
  419853:	xor    DWORD PTR [ecx-0x6ebc93f6],ecx
  419859:	adc    DWORD PTR [edx],0xfffffffb
  41985c:	jnp    0x419868
  41985e:	jo     0x419811
  419860:	add    ecx,DWORD PTR [ecx-0x25]
  419863:	punpckhwd mm1,QWORD PTR [edx]
  419866:	inc    eax
  419867:	xor    al,BYTE PTR [eax]
  419869:	outs   dx,BYTE PTR ds:[esi]
  41986a:	or     ch,BYTE PTR [esi]
  41986c:	jl     0x419845
  41986e:	in     al,0xf5
  419870:	pop    ecx
  419871:	jmp    0x48f53f75
  419876:	xchg   esp,eax
  419877:	mov    BYTE PTR [eax],0xa
  41987a:	add    cl,BYTE PTR [esi]
  41987c:	xchg   esi,eax
  41987d:	lahf   
  41987e:	stc    
  41987f:	cmp    al,0x83
  419881:	add    al,0xac
  419883:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419884:	add    ebp,DWORD PTR [ecx]
  419886:	xchg   esp,eax
  419887:	call   eax
  419889:	cwde   
  41988a:	inc    ebx
  41988b:	push   esi
  41988c:	out    dx,al
  41988d:	add    edx,edi
  41988f:	add    BYTE PTR [ecx+0x720b8da3],bh
  419895:	iret   
  419896:	or     esi,DWORD PTR [ebx-0x1f]
  419899:	lahf   
  41989a:	or     eax,0x7d8bcede
  41989f:	shl    dh,0x1c
  4198a2:	push   cs
  4198a3:	or     cl,ch
  4198a5:	xchg   edi,eax
  4198a6:	jg     0x41986d
  4198a8:	jmp    0x41990a
  4198aa:	mov    ch,BYTE PTR [edi+0x71]
  4198ad:	in     eax,0x5
  4198af:	std    
  4198b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4198b1:	mov    cl,0x1d
  4198b3:	or     cl,ch
  4198b5:	xchg   edi,eax
  4198b6:	ja     0x4198fb
  4198b8:	int    0xd7
  4198ba:	mov    ecx,0xfcb014fc
  4198bf:	mov    ch,0xee
  4198c1:	mov    ds:0x41ee1b8d,al
  4198c6:	jo     0x419858
  4198c8:	adc    al,0xd8
  4198ca:	or     esi,edi
  4198cc:	hlt    
  4198cd:	add    BYTE PTR [edi-0x5d402b00],ch
  4198d3:	lea    ecx,[edi]
  4198d5:	jb     0x4198a6
  4198d7:	or     esi,DWORD PTR [ebx-0x1b]
  4198da:	xchg   edx,eax
  4198db:	lea    eax,[edi]
  4198dd:	inc    ecx
  4198de:	out    0x2a,al
  4198e0:	std    
  4198e1:	inc    esi
  4198e2:	sbb    eax,0xc6640d40
  4198e7:	clc    
  4198e8:	(bad)  
  4198e9:	call   0x2f3d83bd
  4198ee:	mov    esp,DWORD PTR [ecx]
  4198f0:	dec    ecx
  4198f1:	adc    esp,DWORD PTR [ebx+0x33a4890b]
  4198f7:	cld    
  4198f8:	mov    ch,0xbe
  4198fa:	cwde   
  4198fb:	ror    BYTE PTR [edi+0xe],0x1d
  4198ff:	jmp    0x1b49910
  419904:	sti    
  419905:	jne    0x419950
  419907:	or     dh,BYTE PTR [ebx+0x3d4fbd80]
  41990d:	add    BYTE PTR [edx],ch
  41990f:	push   0x53420315
  419914:	cld    
  419915:	jne    0x419924
  419917:	dec    bh
  419919:	jmp    DWORD PTR [eax+0x0]
  41991c:	xchg   ebx,ecx
  41991e:	retf   0x567
  419921:	call   0x3c7370
  419926:	jo     0x4198e5
  419928:	or     al,BYTE PTR [ebp-0x2f3a6]
  41992e:	gs sbb edi,ecx
  419931:	inc    DWORD PTR [eax]
  419933:	cli    
  419934:	jmp    0x41991a
  419936:	(bad)  
  419937:	sub    bh,dl
  419939:	xchg   BYTE PTR [esi-0x47],al
  41993c:	ret    
  41993d:	fadd   QWORD PTR [edx]
  41993f:	ss adc esi,edi
  419942:	mov    BYTE PTR [eax+0x8],ch
  419945:	mov    BYTE PTR [esp+edi*4+0x0],cl
  419949:	test   DWORD PTR [ebp+0x19],ecx
  41994c:	xchg   BYTE PTR [ebp+0x10],cl
  41994f:	(bad)  
  419950:	aas    
  419951:	icebp  
  419952:	mov    DWORD PTR [eax-0xc],edx
  419955:	mov    BYTE PTR [eax*1+0x3889078b],al
  41995c:	cld    
  41995d:	xchg   BYTE PTR [esi+0x3f1],cl
  419963:	in     al,0x40
  419965:	in     eax,0x8b
  419967:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419968:	sub    cl,BYTE PTR [ebx+0x68]
  41996b:	out    dx,al
  41996c:	jo     0x419967
  41996e:	(bad)  
  41996f:	hlt    
  419970:	or     esi,DWORD PTR [edx+0x9]
  419973:	cmp    BYTE PTR [eax],0x1d
  419976:	add    bh,BYTE PTR ds:0x94eb0004
  41997c:	adc    eax,0x19746382
  419981:	jp     0x4199c6
  419983:	js     0x4199de
  419985:	jl     0x4199ca
  419987:	jo     0x41998f
  419989:	xchg   ebp,eax
  41998a:	and    edx,DWORD PTR [ebx-0x5e02fa39]
  419990:	cmp    esi,edi
  419992:	mov    ch,0x24
  419994:	mov    ch,BYTE PTR [edi+edi*1-0x6ad96c00]
  41999b:	sbb    edx,DWORD PTR [edi-0x638cf4ba]
  4199a1:	mov    ds:0xc4f35636,al
  4199a6:	repz cld 
  4199a8:	popa   
  4199a9:	adc    eax,0x418c730c
  4199ae:	es fcmovnu st,st(3)
  4199b1:	push   esi
  4199b2:	test   eax,eax
  4199b4:	dec    eax
  4199b5:	adc    cl,dh
  4199b7:	sbb    eax,0xd0b66c8
  4199bc:	sbb    DWORD PTR [edi+0x3],ecx
  4199bf:	add    BYTE PTR [edx+eiz*4-0x6fe21844],dl
  4199c6:	xchg   DWORD PTR [eax],eax
  4199c8:	xchg   esp,eax
  4199c9:	sbb    esp,edi
  4199cb:	mov    ch,0x53
  4199cd:	sbb    ah,bh
  4199cf:	mov    ch,0x43
  4199d1:	sbb    eax,DWORD PTR [edx-0x21]
  4199d4:	pushf  
  4199d5:	adc    dh,BYTE PTR [edi]
  4199d7:	add    DWORD PTR [ebp+0x853ca99],ecx
  4199dd:	xor    DWORD PTR [edi+0x56],0xffffff88
  4199e1:	mov    ds:0x3c1f13bc,al
  4199e6:	adc    DWORD PTR [edi+0x567828a8],eax
  4199ec:	nop
  4199ed:	mov    ds:0x550deb8c,al
  4199f2:	repnz add ebx,DWORD PTR [edi]
  4199f5:	add    BYTE PTR [ebp+0x12b57cf3],dh
  4199fb:	jns    0x4199fd
  4199fd:	jmp    0xcb79:0x438f61f4
  419a04:	jns    0x419a75
  419a06:	out    0x2,al
  419a08:	or     eax,0x78ef8c29
  419a0d:	xlat   BYTE PTR ds:[ebx]
  419a0e:	hlt    
  419a0f:	pop    edi
  419a10:	xchg   al,bh
  419a12:	jmp    esi
  419a14:	add    eax,ebp
  419a16:	inc    eax
  419a17:	rol    BYTE PTR [ebp+0x78e70091],1
  419a1d:	push   edi
  419a1e:	fsub   QWORD PTR [esi]
  419a20:	mov    ah,0xf8
  419a22:	mov    WORD PTR [esi],es
  419a24:	std    
  419a25:	sub    edi,edi
  419a27:	lds    edx,FWORD PTR [esi+0x7374f78f]
  419a2d:	add    al,0xa5
  419a2f:	es add al,0xd9
  419a32:	mov    esi,cs
  419a34:	add    cl,ch
  419a36:	lods   eax,DWORD PTR ds:[esi]
  419a37:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419a38:	xchg   esi,eax
  419a39:	fwait
  419a3a:	jnp    0x4199ee
  419a3c:	or     al,0x47
  419a3e:	hlt    
  419a3f:	xchg   ebp,eax
  419a40:	xchg   esi,eax
  419a41:	xchg   ebx,eax
  419a42:	sbb    BYTE PTR [edx],bh
  419a44:	das    
  419a45:	mov    cl,0x6
  419a47:	ins    BYTE PTR es:[edi],dx
  419a48:	inc    ebx
  419a49:	cdq    
  419a4a:	jge    0x419a66
  419a4c:	add    eax,0x12800094
  419a51:	lods   al,BYTE PTR ds:[esi]
  419a52:	push   es
  419a53:	outs   dx,BYTE PTR ds:[esi]
  419a54:	enter  0xf8ee,0xdb
  419a58:	jmp    0x419a1c
  419a5a:	mov    dh,0xb2
  419a5c:	xchg   esi,eax
  419a5d:	xor    eax,ecx
  419a5f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419a60:	stos   DWORD PTR es:[edi],eax
  419a61:	add    BYTE PTR [edi],al
  419a63:	mul    DWORD PTR [ecx-0x7b]
  419a66:	sbb    al,0x1
  419a68:	out    0x3,eax
  419a6a:	xchg   ebp,eax
  419a6b:	mov    esi,0xf8d6cace
  419a70:	(bad)  
  419a71:	mov    esp,0xd94377ec
  419a76:	into   
  419a77:	jle    0x4199f9
  419a79:	jmp    0xa4ca9b15
  419a7e:	aas    
  419a7f:	jg     0x419ac7
  419a81:	cdq    
  419a82:	mov    esp,0x19600bc1
  419a87:	gs add cl,ch
  419a8a:	xchg   edi,eax
  419a8b:	ja     0x419ad0
  419a8d:	std    
  419a8e:	xchg   DWORD PTR [eax],ebp
  419a90:	sbb    DWORD PTR [ecx],ebp
  419a92:	xor    ch,dh
  419a94:	sti    
  419a95:	out    dx,al
  419a96:	lahf   
  419a97:	jge    0x419af7
  419a99:	pop    ebp
  419a9a:	rcr    BYTE PTR [esi],1
  419a9c:	add    al,0xe6
  419a9e:	xchg   edi,eax
  419a9f:	add    BYTE PTR [ecx],dh
  419aa1:	test   eax,0xe7fc1ed0
  419aa6:	xchg   edi,eax
  419aa7:	add    BYTE PTR ds:0xe06d77f,cl
  419aad:	ja     0x419ad6
  419aaf:	add    BYTE PTR [ecx-0x1fb8cbd9],cl
  419ab5:	loope  0x419a89
  419ab7:	aas    
  419ab8:	add    DWORD PTR [eax-0x1de03eb7],ebp
  419abe:	pop    eax
  419abf:	xchg   ecx,eax
  419ac0:	add    eax,0x31f56a
  419ac5:	add    BYTE PTR [eax],0xa8
  419ac8:	hlt    
  419ac9:	mov    ch,0x31
  419acb:	xchg   ebx,eax
  419acc:	repz mov ch,0x29
  419acf:	xchg   esp,eax
  419ad0:	inc    ebp
  419ad1:	(bad)  
  419ad3:	call   0x8677:0xc41c873d
  419ada:	jge    0x419a6c
  419adc:	add    BYTE PTR [eax],al
  419ade:	jo     0x419b35
  419ae0:	xor    eax,0x7dc7ac8b
  419ae5:	xchg   BYTE PTR [ebp-0x68],dh
  419ae8:	add    BYTE PTR [eax],al
  419aea:	add    dh,ah
  419aec:	inc    edx
  419aed:	or     eax,0x84fdba83
  419af2:	jge    0x419a79
  419af4:	add    DWORD PTR [eax-0x20],0xffffffbe
  419af8:	hlt    
  419af9:	sbb    eax,0x8888467f
  419afe:	lock mov ds:0xf089faf9,eax
  419b04:	fsubr  st(6),st
  419b06:	sbb    al,0xb6
  419b08:	les    edi,FWORD PTR [ecx+eiz*8+0x7010fa3f]
  419b0f:	lds    edi,FWORD PTR ds:0xdce888fd
  419b15:	add    al,0x88
  419b18:	add    ch,BYTE PTR [edx-0x6]
  419b1b:	in     al,0x7f
  419b1d:	push   es
  419b1e:	add    ch,ch
  419b20:	test   DWORD PTR [eax-0x20],eax
  419b23:	sub    al,0xe1
  419b25:	add    DWORD PTR [eax-0x1e],edx
  419b28:	outs   dx,BYTE PTR ds:[esi]
  419b29:	or     edi,edi
  419b2b:	add    BYTE PTR [eax-0x22ea0528],ch
  419b31:	push   cs
  419b32:	cmp    eax,0xd407600
  419b37:	mov    esi,DWORD PTR [eax+0x19458620]
  419b3d:	xchg   BYTE PTR [eax+0x20],al
  419b40:	inc    edi
  419b41:	add    DWORD PTR [edi-0x3c],edi
  419b44:	mov    cl,0x3c
  419b46:	pop    esi
  419b47:	sbb    esp,DWORD PTR [edx]
  419b49:	jle    0x419b2e
  419b4b:	(bad)  
  419b4c:	ds ret 0x4101
  419b50:	and    al,0x48
  419b52:	and    edi,edi
  419b54:	cwde   
  419b55:	and    al,0xc
  419b57:	mov    dh,0x3d
  419b59:	pop    es
  419b5a:	mov    bl,0x90
  419b5c:	or     eax,0x6e003d59
  419b61:	push   ecx
  419b62:	sbb    eax,0x8faa9457
  419b67:	sbb    ebx,DWORD PTR [edi]
  419b69:	fisttp WORD PTR [ecx]
  419b6b:	jae    0x419af9
  419b6d:	arpl   WORD PTR [edx],cx
  419b6f:	jae    0x419af5
  419b71:	ret    0xb8f
  419b74:	pop    ebx
  419b75:	inc    ebp
  419b76:	stc    
  419b77:	out    0x78,eax
  419b79:	cmc    
  419b7a:	or     ebp,edi
  419b7c:	sbb    eax,0x3c80ed55
  419b81:	sbb    edx,edi
  419b83:	and    DWORD PTR [eax],0x1a
  419b86:	add    DWORD PTR [eax],eax
  419b88:	jno    0x419b9a
  419b8a:	add    eax,0x7d0b2bfd
  419b8f:	xchg   DWORD PTR [eax],eax
  419b91:	xchg   esp,eax
  419b92:	sbb    DWORD PTR [ecx],eax
  419b94:	adc    DWORD PTR [esi+eax*4+0x1],0x3b
  419b99:	mov    dl,0x15
  419b9b:	pop    es
  419b9c:	std    
  419b9d:	xor    DWORD PTR [esi-0x6f1bbc8c],0x19949481
  419ba7:	add    DWORD PTR [ecx-0x1fbec6a7],ecx
  419bad:	xchg   esi,eax
  419bae:	jmp    0x43020eb9
  419bb3:	xchg   edx,eax
  419bb4:	or     ebx,ebx
  419bb6:	and    al,0xd1
  419bb8:	adc    eax,0x437c1954
  419bbd:	je     0x419bc9
  419bbf:	dec    edi
  419bc0:	dec    eax
  419bc1:	xchg   ebp,eax
  419bc2:	adc    cl,BYTE PTR [edi+0x50]
  419bc5:	xchg   esi,eax
  419bc6:	pop    eax
  419bc7:	and    DWORD PTR [eax],ecx
  419bc9:	lahf   
  419bca:	pop    edi
  419bcb:	add    edi,DWORD PTR [edi-0x761c2ae3]
  419bd1:	xchg   esp,eax
  419bd2:	xchg   esi,eax
  419bd3:	aas    
  419bd4:	or     al,0x58
  419bd6:	in     eax,0xf6
  419bd8:	or     DWORD PTR [ebx+edx*4],0x6
  419bdc:	std    
  419bdd:	pop    ds
  419bde:	add    BYTE PTR [ebx+esi*1+0x7b3ab50d],ch
  419be5:	adc    ch,BYTE PTR [edi+eiz*8+0x3]
  419be9:	xchg   esp,eax
  419bea:	jne    0x419c50
  419bec:	adc    al,0x6a
  419bee:	add    eax,DWORD PTR [esi-0x33]
  419bf1:	pop    ebx
  419bf2:	repz bound esi,QWORD PTR [ebp+0x36037000]
  419bf9:	or     DWORD PTR [edi+0x4bc57e8c],esp
  419bff:	sbb    BYTE PTR [edi+0x72034120],ch
  419c05:	mov    bh,0x5f
  419c07:	jne    0x419c75
  419c09:	adc    al,0x32
  419c0b:	add    ecx,DWORD PTR [esi]
  419c0d:	int    0x53
  419c0f:	mov    esp,gs
  419c11:	or     BYTE PTR [edi+0x1bc54e8c],al
  419c17:	jbe    0x419bc5
  419c19:	out    dx,eax
  419c1a:	cli    
  419c1b:	jae    0x419c01
  419c1d:	add    edx,DWORD PTR [edi+esi*2-0x4af2cbd4]
  419c24:	mov    edx,0xe76c127a
  419c29:	add    edx,DWORD PTR [ebp+esi*2+0x2ea1364]
  419c30:	(bad)  
  419c31:	int3   
  419c32:	fisttp DWORD PTR [ebx-0x7378f71c]
  419c38:	jle    0x419bfe
  419c3a:	ror    ebp,cl
  419c3c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419c3d:	ret    
  419c3e:	mov    dl,0xf6
  419c40:	lea    ecx,[eax]
  419c42:	shl    DWORD PTR [esi+0x24],0xe0
  419c46:	or     al,0xad
  419c48:	cli    
  419c49:	ret    
  419c4a:	arpl   WORD PTR [ebx],ax
  419c4c:	adc    al,0xe4
  419c4e:	test   al,0x8c
  419c50:	loop   0x419c5a
  419c52:	daa    
  419c53:	sbb    BYTE PTR [eax+0x2b9bf],dl
  419c59:	jbe    0x419c5b
  419c5b:	adc    BYTE PTR [esi-0x7eea9ff1],bh
  419c61:	add    cl,ch
  419c63:	xchg   edi,eax
  419c64:	ja     0x419ca9
  419c66:	icebp  
  419c67:	(bad)  
  419c68:	mov    ds:0x92556073,al
  419c6d:	call   0xf7ff8491
  419c72:	add    BYTE PTR [ebx],ah
  419c74:	out    dx,al
  419c75:	or     al,0x6c
  419c77:	mov    al,ds:0x9c36fd1a
  419c7c:	lea    edx,[edi]
  419c7e:	(bad)  
  419c7f:	cli    
  419c80:	or     eax,0x77a79cfd
  419c85:	(bad)  
  419c86:	jb     0x419d00
  419c88:	sbb    BYTE PTR [ebx+esi*1+0x2983039c],dh
  419c8f:	sub    al,0x7e
  419c91:	mov    ebp,0x10097e9
  419c96:	pushf  
  419c97:	mov    eax,DWORD PTR [ebx]
  419c99:	inc    ebx
  419c9a:	fstp   QWORD PTR [ebp+ecx*4+0x3978323]
  419ca1:	jae    0x419ca8
  419ca3:	jg     0x419cd0
  419ca5:	std    
  419ca6:	push   esp
  419ca7:	call   0x9b816624
  419cac:	lea    ecx,[edi]
  419cae:	into   
  419caf:	add    eax,0xe03cfcf6
  419cb4:	sbb    esp,ebp
  419cb6:	mov    ds:0xa9830393,eax
  419cbb:	and    al,0x50
  419cbd:	out    0xc2,eax
  419cbf:	add    BYTE PTR [eax+eax*1+0x5ed7000],dl
  419cc6:	xchg   DWORD PTR [esp+eax*8],ebp
  419cc9:	enter  0x14c7,0xea
  419ccd:	add    al,0x73
  419ccf:	icebp  
  419cd0:	lods   eax,DWORD PTR cs:[esi]
  419cd2:	repz add BYTE PTR [edx],bl
  419cd5:	jo     0x419cc4
  419cd7:	mov    esi,ebx
  419cd9:	test   esi,eax
  419cdb:	call   0x3c737e
  419ce0:	lock mov esp,0x586e1073
  419ce6:	icebp  
  419ce7:	push   DWORD PTR [eax]
  419ce9:	adc    DWORD PTR [eax+0x42367145],ecx
  419cef:	clc    
  419cf0:	pop    ecx
  419cf1:	(bad)  
  419cf3:	pop    ds
  419cf4:	out    0x4a,al
  419cf6:	jns    0x419c7d
  419cf8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419cf9:	jo     0x419d10
  419cfb:	cmp    ebp,DWORD PTR [ebx]
  419cfd:	imul   ebp,DWORD PTR [edi+0x13],0x76055846
  419d04:	dec    ebx
  419d05:	cs mov ebp,0x5942c440
  419d0b:	cmp    esi,DWORD PTR [ebp+0x9]
  419d0e:	mov    WORD PTR [eax-0x6e],?
  419d11:	stc    
  419d12:	cli    
  419d13:	cmp    edi,eax
  419d15:	clc    
  419d16:	or     al,BYTE PTR [edx-0x51d1f]
  419d1c:	jbe    0x419d5d
  419d1e:	and    DWORD PTR [eax+0x74],eax
  419d21:	aas    
  419d22:	and    edi,edi
  419d24:	add    BYTE PTR [eax+0x20],ah
  419d27:	mov    bh,dl
  419d29:	addr16 cld 
  419d2b:	cli    
  419d2c:	jne    0x419d17
  419d2e:	test   esi,eax
  419d30:	inc    DWORD PTR [eax+0x14]
  419d33:	push   ebx
  419d34:	jmp    DWORD PTR [eax-0x168a03f4]
  419d3a:	stc    
  419d3b:	jo     0x419d45
  419d3d:	aad    0x62
  419d3f:	xlat   BYTE PTR ds:[ebx]
  419d40:	(bad)  
  419d41:	cli    
  419d42:	jg     0x419d04
  419d44:	wrmsr  
  419d46:	arpl   WORD PTR [ecx],ax
  419d48:	add    BYTE PTR [ebp-0x6b0ba5db],ch
  419d4e:	cs test al,0xfb
  419d51:	daa    
  419d52:	inc    ebp
  419d53:	sbb    al,0xfa
  419d55:	mov    ecx,0x4a890679
  419d5a:	add    eax,DWORD PTR [eax+0x166da3c7]
  419d60:	jecxz  0x419ced
  419d62:	outs   dx,DWORD PTR ds:[esi]
  419d63:	retf   0xf05d
  419d66:	idiv   BYTE PTR [esi-0x1a]
  419d69:	jno    0x419dca
  419d6b:	push   es
  419d6c:	cmp    ecx,edx
  419d6e:	loope  0x419d65
  419d70:	test   DWORD PTR [ecx+0x45],ecx
  419d73:	push   es
  419d74:	std    
  419d75:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419d76:	sub    ecx,eax
  419d78:	xchg   dl,dl
  419d7a:	popf   
  419d7b:	leave  
  419d7c:	(bad)  
  419d7d:	cmp    eax,0x4bfd1b35
  419d82:	arpl   ax,ax
  419d84:	idiv   DWORD PTR [ebp-0x54]
  419d87:	in     al,dx
  419d88:	or     al,0x0
  419d8a:	or     DWORD PTR [esi],esp
  419d8c:	and    ch,bh
  419d8e:	xor    edx,ebx
  419d90:	mov    ds:0x356a9b6b,al
  419d95:	out    0x23,al
  419d97:	pop    es
  419d98:	div    BYTE PTR [ebp+0x31397297]
  419d9e:	out    0x6a,al
  419da0:	and    al,0x5
  419da2:	push   esi
  419da3:	sbb    bl,BYTE PTR [edi]
  419da5:	mov    DWORD PTR [ecx-0x23],edx
  419da8:	inc    eax
  419da9:	call   0x8421145
  419dae:	push   edi
  419daf:	ins    DWORD PTR es:[edi],dx
  419db0:	xor    al,0xd
  419db2:	adc    BYTE PTR [esi+0x1d],ch
  419db5:	std    
  419db6:	jecxz  0x419d7e
  419db8:	mov    esp,0xe034db13
  419dbd:	imul   edx,DWORD PTR [esi+esi*4-0x68e0e474],0x9c7302
  419dc8:	jb     0x419e03
  419dca:	(bad)  
  419dcb:	call   DWORD PTR [ebx]
  419dcd:	hlt    
  419dce:	mov    al,0x75
  419dd0:	jecxz  0x419dd6
  419dd2:	daa    
  419dd3:	or     BYTE PTR [edi+0x32],bh
  419dd6:	retf   
  419dd7:	inc    DWORD PTR [ebp+0x4674d47f]
  419ddd:	sbb    esp,DWORD PTR [ebx+0x3]
  419de0:	out    0x3,eax
  419de2:	adc    ebx,DWORD PTR [ebp+0x6b]
  419de5:	leave  
  419de6:	pop    ebx
  419de7:	jge    0x419da0
  419de9:	enter  0x6cd9,0xda
  419ded:	fild   DWORD PTR [eax]
  419def:	mov    al,ds:0x5c78e9b6
  419df4:	xor    edi,DWORD PTR [ecx]
  419df6:	add    DWORD PTR [ebx+0x7],0x8b7630a9
  419dfd:	stos   DWORD PTR es:[edi],eax
  419dfe:	(bad)  
  419e00:	call   0x8d217ee
  419e05:	arpl   WORD PTR [eax+ecx*8],si
  419e08:	sub    BYTE PTR [edx+0x7214d704],ch
  419e0e:	mov    edi,0xbac3b87
  419e13:	test   al,0xd5
  419e15:	add    edx,ebp
  419e17:	or     al,0x46
  419e19:	cmp    DWORD PTR [esi+0x54],0x74
  419e1d:	fcmove st,st(0)
  419e1f:	outs   dx,BYTE PTR ds:[esi]
  419e20:	or     BYTE PTR [ebp-0xb],bh
  419e23:	(bad)  
  419e24:	leave  
  419e25:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419e26:	jp     0x419e7a
  419e28:	pop    esp
  419e29:	and    al,BYTE PTR [ebx-0x77]
  419e2c:	(bad)  
  419e2d:	xor    eax,0x11fef11e
  419e32:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419e33:	out    dx,eax
  419e34:	push   cs
  419e35:	imul   ebp,eax,0x78c5fef6
  419e3b:	push   edi
  419e3c:	and    al,0x27
  419e3e:	jnp    0x419e97
  419e40:	and    al,0x0
  419e42:	mov    dh,0x1a
  419e44:	and    ecx,DWORD PTR [ecx-0x200e26a]
  419e4a:	sbb    al,0xac
  419e4c:	xchg   eax,ecx
  419e4e:	sahf   
  419e4f:	and    dl,BYTE PTR [edi]
  419e51:	push   esi
  419e52:	xchg   esi,eax
  419e53:	add    BYTE PTR [edx],bl
  419e55:	paddw  mm2,QWORD PTR [esp+ebx*4]
  419e59:	sti    
  419e5a:	jb     0x419e4d
  419e5c:	jg     0x419ea9
  419e5e:	xlat   BYTE PTR ds:[ebx]
  419e5f:	jle    0x419df9
  419e61:	cmp    DWORD PTR [edi+0x14a0ae6],0x394797e9
  419e6b:	les    edx,FWORD PTR [ebx-0x4baf2b91]
  419e71:	in     al,0xfc
  419e73:	push   esi
  419e74:	in     al,dx
  419e75:	inc    esi
  419e76:	jl     0x419edc
  419e78:	xlat   BYTE PTR ds:[ebx]
  419e79:	or     eax,DWORD PTR [ecx+eiz*1+0x2fcfb7b]
  419e80:	sti    
  419e81:	add    eax,0xe4806f0d
  419e86:	cld    
  419e87:	cs sahf 
  419e89:	repnz loop 0x419eb2
  419e8c:	nop
  419e8d:	xchg   DWORD PTR [ebp-0x63],eax
  419e90:	mov    dl,0xc0
  419e92:	or     al,0x6d
  419e94:	shl    ah,1
  419e96:	cld    
  419e97:	push   cs
  419e98:	dec    esp
  419e99:	pop    ebx
  419e9a:	or     dh,dh
  419e9c:	cdq    
  419e9d:	mov    dh,0xe3
  419e9f:	(bad)  
  419ea0:	xchg   edi,eax
  419ea1:	test   DWORD PTR [ebp-0x6b],edx
  419ea4:	fdivr  QWORD PTR [edi-0x45def1a]
  419eaa:	cld    
  419eab:	jb     0x419efa
  419ead:	and    al,0x40
  419eaf:	jo     0x419ef6
  419eb1:	adc    al,0x87
  419eb3:	sub    al,0xbc
  419eb5:	push   eax
  419eb6:	jmp    0x43539fb9
  419ebb:	clc    
  419ebc:	add    BYTE PTR [edi+eax*2-0x6abff0ec],dl
  419ec3:	loopne 0x419ec4
  419ec5:	add    bh,BYTE PTR [esi]
  419ec7:	pop    esi
  419ec8:	ins    BYTE PTR es:[edi],dx
  419ec9:	loop   0x419e51
  419ecb:	xchg   edi,eax
  419ecc:	in     eax,0xf2
  419ece:	add    DWORD PTR [ebx],ecx
  419ed0:	mov    dh,0xbe
  419ed2:	mov    cs,WORD PTR [edx+0x30]
  419ed5:	mov    dl,0xb7
  419ed7:	add    BYTE PTR [eax],cl
  419ed9:	outs   dx,BYTE PTR ds:[esi]
  419eda:	cmp    eax,DWORD PTR [ecx-0xc]
  419edd:	mov    ds:0x12e47288,al
  419ee2:	add    bh,bl
  419ee4:	inc    ebp
  419ee5:	imul   eax,DWORD PTR [edx],0x4972471
  419eeb:	sti    
  419eec:	jne    0x419e7f
  419eee:	(bad)  
  419eef:	sar    edi,cl
  419ef1:	dec    eax
  419ef2:	sbb    DWORD PTR [edi+0x71022bcb],eax
  419ef8:	adc    dl,dl
  419efa:	ja     0x419f08
  419efc:	call   FWORD PTR [eax]
  419efe:	or     eax,ebp
  419f00:	lods   al,BYTE PTR ds:[esi]
  419f01:	jne    0x419f04
  419f03:	sti    
  419f04:	test   DWORD PTR [ebp+0x78],edi
  419f07:	mov    dl,0xe9
  419f09:	push   ss
  419f0a:	push   es
  419f0b:	add    BYTE PTR [eax],al
  419f0d:	mov    BYTE PTR [edi+0x24],0x40
  419f11:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419f12:	inc    edi
  419f13:	and    al,0x50
  419f15:	xchg   esi,eax
  419f16:	sub    al,0x87
  419f18:	inc    ebp
  419f19:	test   DWORD PTR [ebx],edi
  419f1b:	inc    ecx
  419f1c:	adc    al,0x0
  419f1e:	and    dl,BYTE PTR [eax+0x212e432]
  419f24:	aaa    
  419f25:	pop    esi
  419f26:	adc    DWORD PTR [edx],edx
  419f28:	jg     0x419f68
  419f2a:	cwde   
  419f2b:	add    ebx,edi
  419f2d:	bndstx [esi],bnd0
  419f30:	aas    
  419f31:	cmp    DWORD PTR [eax-0x6b7af408],edi
  419f37:	pop    es
  419f38:	call   0x480f8339
  419f3d:	adc    al,0xdb
  419f3f:	cmp    ebp,DWORD PTR [eax]
  419f41:	push   0xffffff94
  419f43:	mov    esi,0x9e1f1c77
  419f48:	add    DWORD PTR [ebx-0x64],esi
  419f4b:	(bad)  
  419f4c:	into   
  419f4d:	push   ebp
  419f4e:	mov    ebx,0x29fd141b
  419f53:	jmp    0x419f56
  419f55:	jae    0x419ef3
  419f57:	jg     0x419faf
  419f59:	fsub   DWORD PTR [ebx+0x20bf878d]
  419f5f:	inc    eax
  419f60:	in     al,dx
  419f61:	push   edx
  419f62:	xchg   esi,eax
  419f63:	jmp    0xce132868
  419f68:	inc    eax
  419f69:	xchg   ecx,ebx
  419f6b:	lds    edx,FWORD PTR [eax-0x17]
  419f6e:	stos   DWORD PTR es:[edi],eax
  419f6f:	outs   dx,BYTE PTR ds:[esi]
  419f70:	dec    eax
  419f71:	clc    
  419f72:	lods   eax,DWORD PTR ds:[esi]
  419f73:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419f74:	adc    al,0xd
  419f76:	sbb    DWORD PTR [edx-0x1a],ecx
  419f79:	cld    
  419f7a:	arpl   WORD PTR [edi],cx
  419f7c:	bound  ebp,QWORD PTR [ebx+ecx*4+0x66]
  419f80:	jmp    0x3b94a068
  419f85:	adc    dh,BYTE PTR [esi+0x304f5e97]
  419f8b:	xchg   ebx,eax
  419f8c:	jae    0x419f93
  419f8e:	or     bh,dl
  419f90:	loopne 0x419fd9
  419f92:	hlt    
  419f93:	mov    ds:0x2be0c665,eax
  419f98:	adc    eax,DWORD PTR [edx]
  419f9a:	inc    ebx
  419f9b:	mov    BYTE PTR [edx],cl
  419f9d:	js     0x419fc3
  419f9f:	scas   al,BYTE PTR es:[edi]
  419fa0:	jmp    0x6ef212a6
  419fa5:	(bad)  
  419fa7:	adc    ecx,0xea6ac88d
  419fad:	je     0x419fbf
  419faf:	sti    
  419fb0:	add    BYTE PTR [eax+edx*1-0xf],bl
  419fb4:	jne    0x419fa5
  419fb6:	jmp    0x419f9a
  419fb8:	rcl    ebp,cl
  419fba:	add    DWORD PTR [edi],edx
  419fbc:	rcl    DWORD PTR [edx-0x4a],0xf2
  419fc0:	clc    
  419fc1:	out    0x3,eax
  419fc3:	xchg   esp,eax
  419fc4:	xchg   DWORD PTR [ebx],esp
  419fc6:	sub    BYTE PTR [ecx+ecx*4+0x2b],dl
  419fca:	sub    BYTE PTR [edi+eiz*8-0x2],ah
  419fce:	mov    WORD PTR [esi-0x8],ss
  419fd1:	fild   WORD PTR [esi-0x78]
  419fd4:	or     ebp,DWORD PTR [ebp+eax*4-0x4c]
  419fd8:	sti    
  419fd9:	xchg   ebp,eax
  419fda:	cmp    eax,0x84de6c42
  419fdf:	or     al,0xe5
  419fe1:	test   DWORD PTR [ecx],eax
  419fe3:	mov    eax,ds:0x44e9b2
  419fe8:	ret    
  419fe9:	inc    ebp
  419fea:	jnp    0x419ffd
  419fec:	sbb    BYTE PTR [ebp-0x76],ch
  419fef:	add    DWORD PTR [ecx-0x5],edi
  419ff2:	stos   DWORD PTR es:[edi],eax
  419ff3:	pop    ss
  419ff4:	jno    0x41a06b
  419ff6:	add    ebp,DWORD PTR [esi-0x6c]
  419ff9:	sti    
  419ffa:	fistp  DWORD PTR [edi]
  419ffc:	or     eax,0x7c774dd3
  41a001:	xchg   DWORD PTR [ecx],esi
  41a003:	pop    edx
  41a004:	push   ecx
  41a005:	jne    0x419fde
  41a007:	add    bh,al
  41a009:	or     al,0x36
  41a00b:	ja     0x419f99
  41a00d:	call   0xfb7a799b
  41a012:	imul   eax,esp,0xffffffa7
  41a015:	mov    ecx,0xfb2aa60f
  41a01a:	out    0x6d,al
  41a01c:	es jmp 0xd5a392
  41a022:	jb     0x41a06b
  41a024:	adc    BYTE PTR [ecx+0x451d17a3],cl
  41a02a:	add    ch,cl
  41a02c:	push   edi
  41a02d:	add    DWORD PTR [edx-0x3b],0x67
  41a031:	jecxz  0x41a092
  41a033:	call   0x24caa0cf
  41a038:	call   0x853ee36e
  41a03d:	xchg   DWORD PTR [edx],ebx
  41a03f:	retf   0xfd94
  41a042:	mov    BYTE PTR [edi],dh
  41a044:	inc    esp
  41a045:	cmp    edi,edx
  41a047:	out    dx,al
  41a048:	adc    BYTE PTR [eax],ah
  41a04a:	in     al,0xb6
  41a04c:	add    BYTE PTR [ecx+eax*4+0x6f8bb57a],dl
  41a053:	inc    ecx
  41a054:	jb     0x41a0b3
  41a056:	sbb    BYTE PTR [ebx+0x6a1523a9],al
  41a05c:	jmp    0xed9727a8
  41a061:	or     al,al
  41a063:	out    0x50,eax
  41a065:	add    BYTE PTR [ecx],al
  41a067:	add    BYTE PTR [edi+edx*2+0xd],ah
  41a06b:	cmp    DWORD PTR [ecx+0x79],0xfffffffd
  41a06f:	cld    
  41a070:	xor    BYTE PTR [edx-0x3efaba79],0xc8
  41a077:	cmp    BYTE PTR [eax-0x14],al
  41a07a:	sbb    al,0x8a
  41a07c:	loop   0x41a01f
  41a07e:	dec    edx
  41a07f:	sub    al,0xd4
  41a081:	cmp    BYTE PTR [edi-0x9],0xe8
  41a085:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a086:	test   dl,dl
  41a088:	dec    ebx
  41a089:	xchg   esp,eax
  41a08a:	sti    
  41a08b:	mov    DWORD PTR [edx-0x3b9c96a],ebp
  41a091:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a092:	test   dh,al
  41a094:	or     edx,DWORD PTR [ebx+edi*8+0xd23ac88]
  41a09b:	mov    dh,0xea
  41a09d:	sbb    BYTE PTR [ebx-0xcef5507],bh
  41a0a3:	or     al,0x0
  41a0a5:	or     cl,BYTE PTR [ecx-0x5f50091]
  41a0ab:	sti    
  41a0ac:	and    al,0x78
  41a0ae:	dec    esp
  41a0af:	mov    DWORD PTR [ecx+0x0],eax
  41a0b2:	in     eax,dx
  41a0b3:	test   ah,dh
  41a0b5:	or     ch,dl
  41a0b7:	adc    ebx,0xafdfd00
  41a0bd:	xchg   BYTE PTR ds:0x6efffbdf,cl
  41a0c3:	cld    
  41a0c4:	or     BYTE PTR [esi-0x13],dh
  41a0c7:	jle    0x41a0bd
  41a0c9:	or     eax,0x85391581
  41a0ce:	lods   eax,DWORD PTR ds:[esi]
  41a0cf:	std    
  41a0d0:	dec    DWORD PTR [esi]
  41a0d2:	xor    BYTE PTR [ebp+0x2dfaffde],al
  41a0d8:	sar    BYTE PTR [ecx],0x73
  41a0db:	or     eax,DWORD PTR fs:[ebp-0x421d1]
  41a0e2:	adc    al,0xb1
  41a0e4:	cld    
  41a0e5:	(bad)  
  41a0e6:	jge    0x41a11e
  41a0e8:	pop    esi
  41a0e9:	ins    BYTE PTR es:[edi],dx
  41a0ea:	jp     0x41a16a
  41a0ec:	lahf   
  41a0ed:	add    BYTE PTR [ebp-0x3],ch
  41a0f0:	jg     0x41a12d
  41a0f2:	ja     0x41a0fe
  41a0f4:	sbb    DWORD PTR [edx+0x42fffd7d],0xfffc98c4
  41a0fe:	ins    DWORD PTR es:[edi],dx
  41a0ff:	jle    0x41a0f5
  41a101:	or     DWORD PTR [edx],edi
  41a103:	adc    DWORD PTR [esi-0x1e],0xf87ff9da
  41a10a:	popf   
  41a10b:	or     DWORD PTR [ecx+edx*2+0x3dfbf9cf],eax
  41a112:	or     eax,0x4
  41a117:	xchg   BYTE PTR [edi+0x7f],dh
  41a11a:	clc    
  41a11b:	and    al,0x71
  41a11d:	jbe    0x41a0a2
  41a11f:	xchg   esp,eax
  41a120:	(bad)  
  41a122:	je     0x41a0c9
  41a124:	int3   
  41a125:	mov    al,ds:0xde713ff
  41a12a:	add    ecx,0x5
  41a12d:	std    
  41a12e:	cld    
  41a12f:	out    dx,eax
  41a130:	mov    al,BYTE PTR [ecx+0x5e758ef7]
  41a136:	sub    esp,0xb1860df3
  41a13c:	vpaddb ymm4,ymm0,YMMWORD PTR [ecx-0x6bfffe94]
  41a144:	mov    esi,0xeccc814b
  41a149:	or     eax,0xfdc5a182
  41a14e:	cld    
  41a14f:	pop    ss
  41a150:	scas   eax,DWORD PTR es:[edi]
  41a151:	pcmpeqd mm2,QWORD PTR [ebp-0x14]
  41a155:	xchg   edi,edi
  41a157:	mov    bl,0xe6
  41a159:	jmp    0x386ac12b
  41a15e:	neg    BYTE PTR [eax-0x2e16fb21]
  41a164:	pop    ebp
  41a165:	dec    ebx
  41a166:	xor    al,0x8a
  41a168:	out    0x8,al
  41a16a:	add    al,0x7f
  41a16c:	int3   
  41a16d:	mov    DWORD PTR [ebp-0x38],ecx
  41a170:	ja     0x41a177
  41a172:	or     BYTE PTR [ebp-0x1d774e7e],dl
  41a178:	adc    eax,0x9c0003f6
  41a17d:	call   0xa050b16b
  41a182:	xor    al,0xf6
  41a184:	nop
  41a185:	loope  0x41a197
  41a187:	jmp    0x348d1481
  41a18c:	inc    edx
  41a18d:	fimul  WORD PTR [eax]
  41a18f:	adc    BYTE PTR [ebx+0x3bdece65],dl
  41a195:	daa    
  41a196:	inc    BYTE PTR [edx-0x78]
  41a199:	add    BYTE PTR [esi],ah
  41a19b:	js     0x41a20d
  41a19d:	push   0xffffffe7
  41a19f:	(bad)  
  41a1a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a1a1:	adc    al,0x62
  41a1a3:	(bad)  
  41a1a4:	sbb    BYTE PTR [esi-0x11],ch
  41a1a7:	mov    bl,ah
  41a1a9:	dec    esi
  41a1aa:	push   es
  41a1ab:	js     0x41a151
  41a1ad:	div    DWORD PTR [ebx+0xf]
  41a1b0:	add    DWORD PTR [esi-0x21],ebp
  41a1b3:	jmp    0x41a14b
  41a1b5:	into   
  41a1b6:	in     eax,dx
  41a1b7:	std    
  41a1b8:	push   ss
  41a1b9:	shl    ebp,0x87
  41a1bc:	outs   dx,BYTE PTR ds:[esi]
  41a1bd:	neg    ch
  41a1bf:	std    
  41a1c0:	in     al,dx
  41a1c1:	add    eax,DWORD PTR [ecx-0x7]
  41a1c4:	inc    ebx
  41a1c5:	push   edi
  41a1c6:	sub    eax,0x6c2db59
  41a1cb:	add    al,0x24
  41a1cd:	xlat   BYTE PTR ds:[ebx]
  41a1ce:	inc    ebx
  41a1cf:	inc    ebx
  41a1d0:	xchg   esp,eax
  41a1d1:	mov    ah,0x41
  41a1d3:	inc    ebx
  41a1d4:	xchg   esp,eax
  41a1d5:	rol    DWORD PTR [ecx+0x43],0x94
  41a1d9:	(bad)  
  41a1da:	adc    DWORD PTR [ebx-0x6c],eax
  41a1dd:	add    BYTE PTR [ebx+eax*2],cl
  41a1e0:	add    BYTE PTR [edi+esi*8+0xc944303],dl
  41a1e7:	std    
  41a1e8:	inc    edx
  41a1e9:	xchg   esp,eax
  41a1ea:	daa    
  41a1eb:	adc    eax,0xd3c9443
  41a1f0:	inc    ebx
  41a1f1:	xchg   esp,eax
  41a1f2:	dec    esi
  41a1f3:	add    eax,0xfd679443
  41a1f8:	inc    edx
  41a1f9:	xchg   esp,eax
  41a1fa:	ja     0x41a1d0
  41a1fc:	inc    edx
  41a1fd:	xchg   esp,eax
  41a1fe:	leave  
  41a1ff:	retf   
  41a200:	inc    edx
  41a201:	xchg   esp,eax
  41a202:	jge    0x41a1c8
  41a204:	inc    edx
  41a205:	xchg   esp,eax
  41a206:	icebp  
  41a207:	mov    esp,0xd66a9442
  41a20c:	inc    edx
  41a20d:	xchg   esp,eax
  41a20e:	jecxz  0x41a1dd
  41a210:	inc    edx
  41a211:	xchg   esp,eax
  41a212:	sub    BYTE PTR [eax],al
  41a214:	mov    ecx,0xbd9b00d6
  41a219:	(bad)  
  41a21a:	add    BYTE PTR [ebp+0x2700d695],cl
  41a220:	xchg   esi,edx
  41a222:	add    BYTE PTR [ebx],bh
  41a224:	adc    dh,0x0
  41a227:	rol    DWORD PTR [edx+0x7b970056],1
  41a22d:	push   esi
  41a22e:	add    BYTE PTR [edx+0x2300567b],bh
  41a234:	jl     0x41a28c
  41a236:	add    BYTE PTR [ebx],bh
  41a238:	jp     0x41a290
  41a23a:	add    bh,dh
  41a23c:	pop    ebx
  41a23d:	push   edi
  41a23e:	add    bl,bl
  41a240:	pop    ebx
  41a241:	push   edi
  41a242:	add    BYTE PTR ds:0x57005a,dl
  41a248:	and    ebx,DWORD PTR [edx+0x57]
  41a24b:	add    BYTE PTR [eax],dh
  41a24d:	cmp    dl,BYTE PTR [edi+0x0]
  41a250:	repnz cmp edx,DWORD PTR [edi+0x0]
  41a254:	aam    0x3c
  41a256:	push   edi
  41a257:	add    BYTE PTR [esi+0x34],dh
  41a25a:	push   edi
  41a25b:	add    BYTE PTR [esi+0x1c],bl
  41a25e:	push   edi
  41a25f:	add    BYTE PTR [esp+edx*1+0x1ca20057],dl
  41a266:	push   edi
  41a267:	add    BYTE PTR [ebx-0x45ff28ec],ch
  41a26d:	cld    
  41a26e:	(bad)  
  41a26f:	add    BYTE PTR [edx+0x1],al
  41a272:	xlat   BYTE PTR ds:[ebx]
  41a273:	add    bl,bl
  41a275:	(bad)  
  41a276:	(bad)  
  41a277:	add    BYTE PTR [esi+esi*8-0x1efcff2a],bh
  41a27e:	(bad)  
  41a27f:	add    BYTE PTR [ecx+eiz*8],dl
  41a282:	(bad)  
  41a283:	add    BYTE PTR [ecx+edx*8],bl
  41a286:	(bad)  
  41a287:	add    BYTE PTR [edx],ch
  41a289:	rcl    esi,1
  41a28b:	add    BYTE PTR [eax+0x430c00],dh
  41a291:	ins    DWORD PTR es:[edi],dx
  41a292:	std    
  41a293:	inc    edx
  41a294:	add    BYTE PTR [edi],ah
  41a296:	test   eax,0x5a7d0042
  41a29b:	inc    ebx
  41a29c:	add    BYTE PTR [edi],dl
  41a29e:	add    al,0x43
  41a2a0:	add    cl,dl
  41a2a2:	add    al,0x43
  41a2a4:	add    BYTE PTR [eax],bh
  41a2a6:	or     eax,DWORD PTR [ebx+0x0]
  41a2a9:	mov    DWORD PTR [eax],0x5b00431b
  41a2af:	sbb    al,BYTE PTR [ebx+0x0]
  41a2b2:	sub    al,0x25
  41a2b4:	inc    ebx
  41a2b5:	add    BYTE PTR [ecx+0x66004282],al
  41a2bb:	add    BYTE PTR [edx+0x0],0x81
  41a2bf:	pop    esp
  41a2c0:	cmp    eax,DWORD PTR [eax]
  41a2c2:	xor    BYTE PTR [ebx+edi*1+0x0],al
  41a2c6:	jb     0x41a31c
  41a2c8:	cmp    eax,DWORD PTR [eax]
  41a2ca:	jp     0x41a309
  41a2cc:	cmp    eax,DWORD PTR [eax]
  41a2ce:	sub    al,0x3c
  41a2d0:	cmp    eax,DWORD PTR [eax]
  41a2d2:	imul   ebp,DWORD PTR [ebx+edi*1],0x3b2cb500
  41a2d9:	add    ch,dh
  41a2db:	cmp    al,0x3b
  41a2dd:	add    BYTE PTR [esi],bh
  41a2df:	aas    
  41a2e0:	cmp    eax,DWORD PTR [eax]
  41a2e2:	jnp    0x41a313
  41a2e4:	cmp    eax,DWORD PTR [eax]
  41a2e6:	out    dx,eax
  41a2e7:	sub    eax,0x91c4003b
  41a2ec:	cmp    al,0x0
  41a2ee:	jp     0x41a288
  41a2f0:	cmp    eax,DWORD PTR [eax]
  41a2f2:	mov    bh,0xa4
  41a2f4:	cmp    eax,DWORD PTR [eax]
  41a2f6:	and    dh,dh
  41a2f8:	cmp    eax,DWORD PTR [eax]
  41a2fa:	add    BYTE PTR [ebx+edi*8-0x2],bh
  41a2fe:	add    edi,DWORD PTR [ecx+0x0]
  41a301:	push   es
  41a302:	pop    es
  41a303:	gs add al,0xa
  41a306:	or     edx,DWORD PTR [ebx+ebx*8-0x2b22b8fc]
  41a30d:	push   es
  41a30e:	or     eax,0x4bd8a400
  41a313:	adc    ah,BYTE PTR [edi-0x5ce9f035]
  41a319:	iret   
  41a31a:	sbb    ebx,DWORD PTR [edx]
  41a31c:	mov    ss,ecx
  41a31e:	sbb    bl,BYTE PTR [edx]
  41a320:	mov    es,WORD PTR [edx]
  41a322:	sbb    eax,0x19f5811c
  41a327:	and    BYTE PTR [ebp-0x38],dh
  41a32a:	and    ebx,DWORD PTR [edi]
  41a32c:	mov    ch,0xc8
  41a32e:	and    ah,BYTE PTR [edx]
  41a330:	mov    bh,0xc3
  41a332:	pop    ds
  41a333:	es mov ebx,0xac2828cf
  41a339:	mov    edi,0xc1bd2728
  41a33e:	sub    eax,0x4b0db92c
  41a343:	inc    edi
  41a344:	dec    ebp
  41a345:	xor    BYTE PTR [ebx+0x47],cl
  41a348:	dec    ebp
  41a349:	and    BYTE PTR [ecx],ch
  41a34b:	sub    eax,0x3233175d
  41a350:	xchg   ebx,esi
  41a352:	sub    al,0x34
  41a354:	mov    ebp,ebp
  41a356:	das    
  41a357:	ss sub edi,0x3b
  41a35b:	cmp    ch,BYTE PTR [edi-0x10]
  41a35e:	cmp    bh,BYTE PTR [ecx]
  41a360:	pop    ebp
  41a361:	xor    BYTE PTR [ebx+0x47],cl
  41a364:	dec    ebp
  41a365:	shl    DWORD PTR [edi],cl
  41a367:	ds pop ebx
  41a369:	daa    
  41a36a:	inc    ebx
  41a36b:	inc    edx
  41a36c:	xlat   BYTE PTR ds:[ebx]
  41a36d:	sbb    eax,0x2294463f
  41a372:	dec    esp
  41a373:	nop
  41a374:	add    BYTE PTR [eax],dl
  41a376:	add    BYTE PTR [ebx+0x0],al
  41a379:	dec    esp
  41a37a:	lock inc ebx
  41a37c:	add    BYTE PTR [eax-0x2bffbc12],bl
  41a382:	add    dl,ah
  41a384:	inc    esp
  41a385:	xchg   esp,eax
  41a386:	jns    0x41a36a
  41a388:	inc    esp
  41a389:	xchg   esp,eax
  41a38a:	mov    ds:0x909444d1,al
  41a38f:	into   
  41a390:	inc    esp
  41a391:	xchg   esp,eax
  41a392:	cli    
  41a393:	mov    edi,0xbffa9444
  41a398:	inc    esp
  41a399:	xchg   esp,eax
  41a39a:	sbb    DWORD PTR [edi+0x44],0x445f8194
  41a3a1:	xchg   esp,eax
  41a3a2:	push   ss
  41a3a3:	mov    al,ds:0xa0749444
  41a3a8:	inc    esp
  41a3a9:	xchg   esp,eax
  41a3aa:	mov    esp,0xfc94448f
  41a3af:	nop
  41a3b0:	inc    esp
  41a3b1:	xchg   esp,eax
  41a3b2:	dec    eax
  41a3b3:	add    DWORD PTR [esp+edx*4+0x2],0x4094447d
  41a3bb:	jne    0x41a401
  41a3bd:	xchg   esp,eax
  41a3be:	outs   dx,BYTE PTR ds:[esi]
  41a3bf:	ins    DWORD PTR es:[edi],dx
  41a3c0:	inc    esp
  41a3c1:	xchg   esp,eax
  41a3c2:	pushf  
  41a3c3:	fs inc ebx
  41a3c5:	xchg   esp,eax
  41a3c6:	retf   0x435c
  41a3c9:	xchg   esp,eax
  41a3ca:	or     BYTE PTR [esi+0x43],dl
  41a3cd:	xchg   esp,eax
  41a3ce:	add    ecx,DWORD PTR [ebx+0x43]
  41a3d1:	xchg   esp,eax
  41a3d2:	pop    ebp
  41a3d3:	inc    ebx
  41a3d4:	inc    ebx
  41a3d5:	xchg   esp,eax
  41a3d6:	pop    ebp
  41a3d7:	cmp    eax,DWORD PTR [ebx+0x0]
  41a3da:	xchg   esp,eax
  41a3db:	sbb    DWORD PTR [edi+0x43],0x435f8194
  41a3e2:	xchg   esp,eax
  41a3e3:	aad    0x22
  41a3e5:	inc    ebx
  41a3e6:	xchg   esp,eax
  41a3e7:	push   esi
  41a3e8:	sbb    al,0x43
  41a3ea:	xchg   esp,eax
  41a3eb:	jnp    0x41a400
  41a3ed:	inc    ebx
  41a3ee:	xchg   esp,eax
  41a3ef:	ret    0x430b
  41a3f2:	xchg   esp,eax
  41a3f3:	std    
  41a3f4:	add    al,0x43
  41a3f6:	xchg   esp,eax
  41a3f7:	mov    bh,0x70
  41a3f9:	inc    ebx
  41a3fa:	xchg   esp,eax
  41a3fb:	mov    esp,0xd762ff
  41a400:	retf   
  41a401:	arpl   di,dx
  41a403:	add    dh,dl
  41a405:	jae    0x41a3de
  41a407:	add    ch,bl
  41a409:	jae    0x41a3e2
  41a40b:	add    al,ch
  41a40d:	arpl   di,dx
  41a40f:	add    bl,dh
  41a411:	arpl   di,dx
  41a413:	add    bl,dh
  41a415:	jae    0x41a3ee
  41a417:	add    bl,dh
  41a419:	jae    0x41a3f2
  41a41b:	add    BYTE PTR [edi+0x60],bh
  41a41e:	xlat   BYTE PTR ds:[ebx]
  41a41f:	add    BYTE PTR [edi+0x60],bh
  41a422:	xlat   BYTE PTR ds:[ebx]
  41a423:	add    BYTE PTR [ebx],dl
  41a425:	jae    0x41a3fe
  41a427:	add    BYTE PTR [edi+0x73],bl
  41a42a:	xlat   BYTE PTR ds:[ebx]
  41a42b:	add    BYTE PTR [edx+0x63],bh
  41a42e:	push   edi
  41a42f:	add    BYTE PTR [edi-0x59ffa89d],cl
  41a435:	jae    0x41a48e
  41a437:	add    BYTE PTR [ebx+0x72],dl
  41a43a:	in     al,dx
  41a43b:	jno    0x41a429
  41a43d:	mov    ebp,0x9600
  41a442:	push   0x53
  41a444:	in     al,dx
  41a445:	cld    
  41a446:	push   0x5a
  41a448:	lock cld 
  41a44a:	push   0x52
  41a44c:	(bad)  
  41a44d:	cld    
  41a44e:	cmp    ah,BYTE PTR [ecx]
  41a450:	push   esi
  41a451:	or     BYTE PTR [edi],dh
  41a453:	or     esi,0x85bf7254
  41a459:	inc    eax
  41a45a:	mov    esi,0x60e04e0e
  41a45f:	(bad)  
  41a460:	enter  0x1486,0xcc
  41a464:	jns    0x41a4c0
  41a466:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a467:	push   cs
  41a468:	dec    esi
  41a469:	call   0x8911fede
  41a46e:	sahf   
  41a46f:	shl    dh,1
  41a471:	or     al,0x65
  41a473:	stos   DWORD PTR es:[edi],eax
  41a474:	sti    
  41a475:	(bad)  
  41a476:	jmp    FWORD PTR [ebp+0x35]
  41a479:	fimul  DWORD PTR [edi]
  41a47b:	icebp  
  41a47c:	or     DWORD PTR [ebx],eax
  41a47e:	add    BYTE PTR [ebp+0x37],bh
  41a481:	push   ecx
  41a482:	adc    BYTE PTR [eax+0x7],ah
  41a485:	xor    eax,0x8b096155
  41a48a:	push   cs
  41a48b:	jb     0x41a48b
  41a48d:	(bad)  
  41a48e:	cmp    BYTE PTR [eax],dl
  41a490:	add    bh,BYTE PTR [ecx+0x7]
  41a493:	push   edi
  41a494:	out    dx,eax
  41a495:	in     eax,0x4
  41a497:	xor    bh,dh
  41a499:	dec    DWORD PTR [esi]
  41a49b:	ret    0x1840
  41a49e:	add    eax,DWORD PTR [edx+0x508186]
  41a4a4:	jp     0x41a49e
  41a4a6:	sti    
  41a4a7:	cmpps  xmm0,XMMWORD PTR [eax+0x1c],0x89
  41a4ac:	mov    al,0x45
  41a4ae:	sti    
  41a4af:	jmp    FWORD PTR [edx+0x747b308]
  41a4b5:	xchg   DWORD PTR [ecx-0x40765b4],eax
  41a4bb:	mov    eax,0xb3c2d
  41a4c0:	je     0x41a534
  41a4c2:	sub    edi,edi
  41a4c4:	cli    
  41a4c5:	jmp    0xe9bf2a4f
  41a4ca:	sti    
  41a4cb:	jmp    DWORD PTR [esi+0x31]
  41a4ce:	and    BYTE PTR [ecx+0x4585bc90],cl
  41a4d4:	in     eax,0x35
  41a4d6:	ret    0xb275
  41a4d9:	mov    dl,0x41
  41a4db:	clc    
  41a4dc:	mov    ch,0x5b
  41a4de:	inc    eax
  41a4df:	add    BYTE PTR [ecx+ebp*1],bh
  41a4e2:	inc    ecx
  41a4e3:	push   edx
  41a4e4:	jle    0x41a532
  41a4e6:	je     0x41a50e
  41a4e8:	sub    BYTE PTR [edi-0x38],bh
  41a4eb:	(bad)  
  41a4ec:	cli    
  41a4ed:	jmp    0xe7d60f3e
  41a4f2:	xchg   DWORD PTR [edx-0x30b7e74],eax
  41a4f8:	in     al,0x6e
  41a4fa:	mov    ebp,0x3a99ae7
  41a4ff:	add    BYTE PTR [edi],bl
  41a501:	ja     0x41a582
  41a503:	cmc    
  41a504:	loope  0x41a4e0
  41a506:	data16 cld 
  41a508:	add    BYTE PTR [ebp+0x76],ch
  41a50b:	(bad)  
  41a50c:	call   FWORD PTR [ebx+0x16]
  41a50f:	ror    BYTE PTR [eax-0x38762026],cl
  41a515:	push   ebp
  41a516:	aas    
  41a517:	adc    bh,BYTE PTR [edi-0x207e1cd3]
  41a51d:	xchg   ebp,eax
  41a51e:	data16 jecxz 0x41a51f
  41a521:	sbb    al,0xa4
  41a523:	int3   
  41a524:	or     al,0xe3
  41a526:	cwde   
  41a527:	push   ss
  41a528:	xchg   ecx,edx
  41a52a:	aas    
  41a52b:	add    eax,0xc3e3cab5
  41a530:	out    0x97,al
  41a532:	data16 jecxz 0x41a533
  41a535:	sbb    al,0x54
  41a537:	and    ch,bh
  41a539:	add    edi,edx
  41a53b:	add    al,0xb5
  41a53d:	dec    edx
  41a53e:	rol    DWORD PTR ds:0xadd9dcad,cl
  41a544:	inc    ebp
  41a545:	mov    WORD PTR [eax+0x57],fs
  41a548:	nop
  41a549:	xchg   edi,eax
  41a54a:	cmp    al,0x8
  41a54c:	add    ebx,ecx
  41a54e:	in     eax,0xc3
  41a550:	xchg   BYTE PTR [ecx+0x5b],bl
  41a553:	mov    WORD PTR [edx+0x4],ss
  41a556:	pusha  
  41a557:	pop    eax
  41a558:	xchg   esp,eax
  41a559:	mov    esp,db1
  41a55c:	mov    edi,0xc731dbac
  41a561:	push   ebp
  41a562:	push   es
  41a563:	ret    
  41a564:	xchg   BYTE PTR [ecx],dl
  41a566:	das    
  41a567:	cmc    
  41a568:	cld    
  41a569:	mov    ds:0x3d71ff,eax
  41a56e:	mov    WORD PTR [edi-0x3e4af572],?
  41a574:	pop    edi
  41a575:	inc    eax
  41a576:	jo     0x41a5f2
  41a578:	arpl   WORD PTR [edi-0x7f],sp
  41a57b:	lock test DWORD PTR [edx-0x1458072f],ecx
  41a582:	mov    fs,WORD PTR [ebx]
  41a584:	test   al,0x8c
  41a586:	push   ss
  41a587:	jne    0x41a5f7
  41a589:	mul    BYTE PTR [eax+0x7c]
  41a58c:	lods   al,BYTE PTR ds:[esi]
  41a58d:	or     ebx,DWORD PTR [ebx]
  41a58f:	fcos   
  41a591:	and    dl,BYTE PTR [ebx]
  41a593:	jp     0x41a600
  41a595:	jae    0x41a5e0
  41a597:	lock dec ebp
  41a599:	mov    dl,dh
  41a59b:	call   0xf025260f
  41a5a0:	cmp    eax,0xea4096f6
  41a5a5:	add    edx,DWORD PTR [ecx+edi*2-0xfdea0ad]
  41a5ac:	and    eax,0x1e59068c
  41a5b1:	not    BYTE PTR [eax]
  41a5b3:	jp     0x41a630
  41a5b5:	ja     0x41a5c0
  41a5b7:	lock or eax,0x6f80668c
  41a5bd:	push   eax
  41a5be:	xor    BYTE PTR [edx-0x6d],bh
  41a5c1:	jg     0x41a5dd
  41a5c3:	push   esi
  41a5c4:	sub    ecx,DWORD PTR [esi+eax*2+0x3f805fac]
  41a5cb:	out    dx,eax
  41a5cc:	in     eax,0xf5
  41a5ce:	or     al,0x47
  41a5d0:	out    dx,eax
  41a5d1:	mov    al,BYTE PTR [eax]
  41a5d3:	outs   dx,BYTE PTR ds:[esi]
  41a5d4:	cld    
  41a5d5:	jg     0x41a5db
  41a5d7:	xchg   esp,eax
  41a5d8:	and    bh,0x6f
  41a5db:	mov    es,ecx
  41a5dd:	into   
  41a5de:	or     eax,0x3f6fc175
  41a5e3:	sbb    al,0xdc
  41a5e5:	(bad)  
  41a5e6:	jmp    0x62c9f909
  41a5eb:	(bad)  
  41a5ec:	clc    
  41a5ed:	and    ch,cl
  41a5ef:	xchg   edi,eax
  41a5f0:	jo     0x41a5f2
  41a5f2:	adc    edx,DWORD PTR [esi-0x3cf08bb3]
  41a5f8:	add    BYTE PTR [eax],al
  41a5fa:	stc    
  41a5fb:	xchg   edi,eax
  41a5fc:	je     0x41a64f
  41a5fe:	les    edx,FWORD PTR [edi+0x3e92000]
  41a604:	inc    esi
  41a605:	cmp    ebp,ecx
  41a607:	xchg   edi,eax
  41a608:	xor    BYTE PTR [eax],al
  41a60a:	cmc    
  41a60b:	xchg   edx,eax
  41a60c:	sub    eax,DWORD PTR [eax]
  41a60e:	jmp    0xb3b5a6ea
  41a613:	mov    al,BYTE PTR [eax]
  41a615:	add    BYTE PTR [ecx-0x3cc68b69],bh
  41a61b:	cs out 0x83,al
  41a61e:	in     al,dx
  41a61f:	xchg   edi,eax
  41a620:	add    BYTE PTR [eax+0x9af3],bh
  41a626:	pusha  
  41a627:	sbb    ebp,DWORD PTR [edi]
  41a629:	std    
  41a62a:	sub    DWORD PTR cs:[edx],ebp
  41a62d:	std    
  41a62e:	jmp    0xdbbfa6ca
  41a633:	sbb    al,0xc7
  41a635:	mov    esi,0x87980010
  41a63a:	mov    edx,0xfcec08a5
  41a63f:	jno    0x41a654
  41a641:	push   ebx
  41a642:	std    
  41a643:	(bad)  
  41a644:	call   0xe0de28cf
  41a649:	jmp    0x41a647
  41a64b:	add    al,BYTE PTR [ebx-0x12bef5a6]
  41a651:	shr    DWORD PTR [ecx-0x14],1
  41a654:	mov    esp,0x579486f5
  41a659:	in     eax,dx
  41a65a:	cld    
  41a65b:	into   
  41a65c:	lods   al,BYTE PTR ds:[esi]
  41a65d:	adc    al,BYTE PTR [edi-0x4bcc000]
  41a663:	push   edx
  41a665:	xlat   BYTE PTR ds:[ebx]
  41a666:	or     BYTE PTR [ecx-0x4d0d0],cl
  41a66c:	bnd jp 0x41a5f0
  41a66f:	push   esp
  41a670:	repnz repz sti 
  41a673:	mov    edi,DWORD PTR [ebx-0x76827904]
  41a679:	sbb    esp,0x1d6ef407
  41a67f:	call   DWORD PTR [edx]
  41a681:	cmc    
  41a682:	xchg   edi,eax
  41a684:	hlt    
  41a685:	push   edi
  41a686:	call   FWORD PTR [eax-0x16]
  41a689:	jmp    0xfa27:0x12bbb70b
  41a690:	dec    ebx
  41a691:	outs   dx,DWORD PTR ds:[esi]
  41a692:	mov    ebp,0xc4777674
  41a697:	mov    edi,DWORD PTR [edx+0x57]
  41a69a:	call   FWORD PTR [eax-0x822fa00]
  41a6a0:	cmp    eax,DWORD PTR [ebp+0x548d2975]
  41a6a6:	add    esp,DWORD PTR [edi-0x1]
  41a6a9:	ds jns 0x41a677
  41a6ac:	ror    esp,0xff
  41a6af:	cli    
  41a6b0:	adc    eax,0x3f99fd
  41a6b5:	xchg   cl,cl
  41a6b7:	test   DWORD PTR [ebp-0x40b17],ebx
  41a6bd:	js     0x41a687
  41a6bf:	jno    0x41a6c8
  41a6c1:	daa    
  41a6c2:	call   0x23b87ac
  41a6c7:	add    bh,al
  41a6c9:	cmp    dl,ah
  41a6cb:	std    
  41a6cc:	(bad)  
  41a6cd:	in     eax,dx
  41a6ce:	add    edi,esp
  41a6d0:	or     esp,DWORD PTR [esi+0x37]
  41a6d3:	adc    BYTE PTR [ecx-0x4d7c8],cl
  41a6d9:	xchg   esp,eax
  41a6da:	(bad)  
  41a6db:	jl     0x41a6b4
  41a6dd:	adc    esp,esp
  41a6df:	xor    DWORD PTR [edi-0xab425d2],edx
  41a6e5:	lods   eax,DWORD PTR ds:[esi]
  41a6e6:	pop    edx
  41a6e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a6e8:	pop    edi
  41a6e9:	stos   DWORD PTR es:[edi],eax
  41a6ea:	mov    dh,0xf0
  41a6ec:	call   DWORD PTR [esi]
  41a6ee:	or     eax,0x650dfca0
  41a6f3:	sub    al,0xfd
  41a6f5:	xchg   ebx,eax
  41a6f6:	mov    ?,WORD PTR [edx-0x7e]
  41a6f9:	enter  0xf096,0xfc
  41a6fd:	xchg   ebx,eax
  41a6fe:	push   esi
  41a6ff:	dec    edx
  41a700:	adc    BYTE PTR [eax],al
  41a702:	or     DWORD PTR [ebx],ebx
  41a704:	add    al,0x2
  41a706:	sbb    eax,0xd138e024
  41a70b:	retf   
  41a70c:	outs   dx,BYTE PTR ds:[esi]
  41a70d:	add    DWORD PTR ds:0x3f82dcdc,ecx
  41a713:	retf   
  41a714:	sbb    cl,BYTE PTR [ecx+0x288b3bd9]
  41a71a:	push   esi
  41a71b:	or     dl,dh
  41a71d:	into   
  41a71e:	cmp    al,0x99
  41a720:	jg     0x41a72d
  41a722:	call   DWORD PTR [ecx]
  41a724:	aam    0x8a
  41a726:	cwde   
  41a727:	dec    eax
  41a728:	test   esi,esp
  41a72a:	nop
  41a72b:	repnz mov eax,0xfb5a8471
  41a731:	cld    
  41a732:	pop    ss
  41a733:	adc    BYTE PTR [eax],cl
  41a735:	cmp    esp,ebx
  41a737:	mov    esi,esi
  41a739:	mov    BYTE PTR [ecx],ch
  41a73b:	retf   
  41a73c:	icebp  
  41a73d:	cld    
  41a73e:	add    ebx,DWORD PTR [edx+0x6f]
  41a741:	fcom   DWORD PTR [esp+ebp*2-0x24a509e0]
  41a748:	add    dh,BYTE PTR [ebx+esi*4-0x1a]
  41a74c:	mov    ecx,0xbc628845
  41a751:	jle    0x41a748
  41a753:	jmp    ebp
  41a755:	add    edx,DWORD PTR [eax+eax*1-0x7e6c2458]
  41a75c:	mov    BYTE PTR [ebx+ebx*1],0x3b
  41a760:	sar    DWORD PTR [esi+edx*2-0x48],cl
  41a764:	cmp    al,BYTE PTR [ecx]
  41a766:	add    BYTE PTR ds:0xa8f31e83,bl
  41a76c:	in     al,dx
  41a76d:	in     eax,0xb9
  41a76f:	xchg   edi,eax
  41a770:	clc    
  41a771:	pop    edi
  41a772:	dec    eax
  41a773:	mov    al,ds:0x98002cf5
  41a778:	je     0x41a73f
  41a77a:	add    al,BYTE PTR [ecx+0x43]
  41a77d:	std    
  41a77e:	jle    0x41a7db
  41a780:	ret    0xfb7e
  41a783:	cli    
  41a784:	loope  0x41a70b
  41a786:	add    edx,DWORD PTR [eax+eax*1+0x796ae36a]
  41a78d:	sub    edx,eax
  41a78f:	or     al,0x46
  41a791:	outs   dx,DWORD PTR ds:[esi]
  41a792:	add    ah,BYTE PTR [edx]
  41a794:	test   esi,ebp
  41a796:	add    edx,DWORD PTR [ebx-0x14]
  41a799:	out    0x7c,al
  41a79b:	fdivrp st(0),st
  41a79d:	pop    edi
  41a79e:	dec    eax
  41a79f:	push   eax
  41a7a0:	js     0x41a745
  41a7a2:	dec    DWORD PTR [esi+edx*2]
  41a7a5:	inc    ebx
  41a7a6:	jl     0x41a77e
  41a7a8:	call   0x8e97610
  41a7ad:	bound  ecx,QWORD PTR [eax+0x30]
  41a7b0:	jle    0x41a78c
  41a7b2:	xchg   BYTE PTR [ecx+ecx*8-0x67],bl
  41a7b6:	add    DWORD PTR [ebp-0xd3b5049],edi
  41a7bc:	(bad)  
  41a7bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a7be:	xchg   bl,bl
  41a7c0:	jmp    0x41a823
  41a7c2:	out    dx,al
  41a7c3:	add    al,0x98
  41a7c5:	imul   esi,DWORD PTR [eax-0x38],0x697300
  41a7cc:	sbb    eax,0x3cb1ffe7
  41a7d1:	xchg   esp,eax
  41a7d2:	jo     0x41a761
  41a7d4:	adc    ah,BYTE PTR [edi-0x133a19c1]
  41a7da:	call   DWORD PTR [edx+esi*2-0x13]
  41a7de:	jb     0x41a7ad
  41a7e0:	inc    ecx
  41a7e1:	ss xchg esp,eax
  41a7e3:	into   
  41a7e4:	add    ebp,DWORD PTR [edi*8-0x6d895a3a]
  41a7eb:	and    eax,0x62fceca5
  41a7f0:	int    0xe3
  41a7f2:	cmp    eax,0x89009045
  41a7f7:	cmp    al,0x84
  41a7f9:	jle    0x41a7ba
  41a7fb:	adc    al,0xc1
  41a7fd:	fldcw  WORD PTR [eax]
  41a7ff:	(bad)  
  41a800:	fist   DWORD PTR [eax+ebp*1-0x312339c]
  41a807:	xchg   cl,al
  41a809:	call   0x52b8782
  41a80e:	cmp    ch,BYTE PTR [esp+edi*4-0x13]
  41a812:	cld    
  41a813:	outs   dx,BYTE PTR ds:[esi]
  41a814:	jecxz  0x41a82a
  41a816:	and    DWORD PTR [esp+ebx*8-0x68a10313],0xcd630f74
  41a821:	jmp    0x41a859
  41a823:	fs jecxz 0x41a813
  41a826:	cld    
  41a827:	inc    esi
  41a828:	lods   al,BYTE PTR ds:[esi]
  41a829:	add    al,BYTE PTR [ebp+0x2]
  41a82c:	mov    ebx,0x8d7194
  41a831:	lahf   
  41a832:	data16 or al,0xfa
  41a835:	push   edi
  41a836:	xor    al,BYTE PTR [ebx+0x1d]
  41a839:	test   BYTE PTR [edi],bh
  41a83b:	aaa    
  41a83c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a83d:	dec    edi
  41a83e:	outs   dx,DWORD PTR ds:[esi]
  41a83f:	add    dl,BYTE PTR ss:[edx+0x78ebb5fd]
  41a846:	jbe    0x41a89f
  41a848:	add    BYTE PTR [edx-0x5cf0040f],bl
  41a84e:	clc    
  41a84f:	pop    es
  41a850:	cmp    esi,DWORD PTR [eax]
  41a852:	repz or eax,DWORD PTR [ecx+edi*2+0x7f000004]
  41a85a:	addr16 push edx
  41a85c:	cld    
  41a85d:	jbe    0x41a8b2
  41a85f:	or     al,0x72
  41a861:	int3   
  41a862:	lds    edi,FWORD PTR [edx+0xafead00]
  41a868:	mov    dh,0xbf
  41a86a:	sbb    eax,DWORD PTR [ecx-0xc]
  41a86d:	mov    edx,0xad00ae82
  41a872:	inc    BYTE PTR [ecx-0x77]
  41a875:	xor    al,0x37
  41a878:	push   ebp
  41a879:	mov    DWORD PTR [edi+eiz*8-0x17],esi
  41a87d:	sar    ebp,1
  41a87f:	(bad)  
  41a880:	jmp    DWORD PTR [ebx+eax*4+0x20]
  41a884:	dec    DWORD PTR [edx]
  41a886:	icebp  
  41a887:	or     eax,DWORD PTR [ebp+esi*8+0x56fffffd]
  41a88e:	push   ebx
  41a88f:	nop
  41a890:	psllq  mm0,QWORD PTR [eax+0x6d00fffc]
  41a897:	int    0x5e
  41a899:	cmp    eax,0x3d
  41a89c:	sti    
  41a89d:	(bad)  
  41a89e:	jmp    0x9051:0xa62873fd
  41a8a5:	jbe    0x41a8a4
  41a8a7:	lock jno 0x41a88e
  41a8aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a8ab:	inc    edx
  41a8ac:	cld    
  41a8ad:	jmp    eax
  41a8af:	lea    ecx,[ecx-0x40f0e6b]
  41a8b5:	jmp    FWORD PTR [edx-0x4e]
  41a8b8:	cmp    al,0xff
  41a8ba:	mov    edx,0x1ef0e4f0
  41a8bf:	(bad)  
  41a8c0:	dec    DWORD PTR [edx-0x7d13536c]
  41a8c6:	aam    0x94
  41a8c8:	sub    cl,ch
  41a8ca:	shr    DWORD PTR [esi-0x52],0x43
  41a8ce:	jmp    0x41a8ba
  41a8d0:	in     al,dx
  41a8d1:	mov    BYTE PTR [ecx+0x47],bl
  41a8d4:	add    al,0xc5
  41a8d6:	lahf   
  41a8d7:	pop    es
  41a8d8:	jae    0x41a8f8
  41a8da:	push   ds
  41a8db:	jne    0x41a935
  41a8dd:	std    
  41a8de:	retf   
  41a8df:	retf   0xc178
  41a8e2:	outs   dx,DWORD PTR ds:[esi]
  41a8e3:	call   0xfc81:0xe741082b
  41a8ea:	xchg   ebp,eax
  41a8eb:	sub    ebx,DWORD PTR [eax]
  41a8ed:	mov    bl,BYTE PTR [ecx]
  41a8ef:	adc    eax,0xefa3fced
  41a8f4:	cmp    bh,bh
  41a8f6:	daa    
  41a8f7:	loopne 0x41a937
  41a8f9:	xchg   DWORD PTR [eax],eax
  41a8fb:	jmp    0x9894d1a3
  41a900:	add    eax,0x92fe7f8b
  41a905:	(bad)  
  41a906:	jb     0x41a8bc
  41a908:	push   esi
  41a909:	scas   eax,DWORD PTR es:[edi]
  41a90a:	aas    
  41a90b:	jae    0x41a88f
  41a90d:	in     al,dx
  41a90e:	(bad)  
  41a90f:	out    0xf0,eax
  41a911:	cmp    DWORD PTR [edx-0x3128d2c],0x38faf496
  41a91b:	jmp    0x14491b13
  41a920:	sbb    eax,0x959872fa
  41a925:	jnp    0x41a979
  41a927:	cmp    BYTE PTR [esi+0x6f],bl
  41a92a:	clc    
  41a92b:	xor    BYTE PTR [bp+di+0x7a],bh
  41a92f:	cwde   
  41a930:	add    BYTE PTR [edi],bh
  41a932:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a933:	test   eax,0x244b2bb6
  41a938:	fwait
  41a939:	dec    edx
  41a93a:	mov    ebx,ebx
  41a93c:	call   ecx
  41a93e:	ror    esi,0xd8
  41a941:	jmp    0xbaad3d49
  41a946:	xor    dl,ah
  41a948:	es pushf 
  41a94a:	mul    DWORD PTR [eax-0x29fcd975]
  41a950:	and    al,0xa4
  41a952:	shr    DWORD PTR [ecx+0x44],cl
  41a955:	mov    al,0x40
  41a957:	mov    eax,0xd92acb73
  41a95c:	clc    
  41a95d:	imul   esi,DWORD PTR [eax+eax*1-0x35],0x9fee6e8
  41a965:	clc    
  41a966:	sub    ecx,DWORD PTR es:[edi-0x10]
  41a96a:	push   edx
  41a96b:	and    ch,BYTE PTR [ebp+0x3b]
  41a96e:	mov    bl,0x77
  41a970:	(bad)  
  41a971:	and    eax,0xd4b271a6
  41a976:	into   
  41a977:	sub    dl,cl
  41a979:	clc    
  41a97a:	imul   ebx,DWORD PTR [eax-0x6d],0x41fee6e8
  41a981:	stc    
  41a982:	es sub ecx,edi
  41a985:	lock sbb al,BYTE PTR [esi]
  41a988:	mov    ebp,0x7cf318bf
  41a98d:	add    ch,BYTE PTR [edi]
  41a98f:	sub    edx,DWORD PTR [ecx-0x8]
  41a992:	imul   esi,DWORD PTR [eax],0x7ce6e863
  41a998:	(bad)  
  41a999:	shl    BYTE PTR [ecx+0x70],1
  41a99c:	push   eax
  41a99d:	jl     0x41a95a
  41a99f:	jg     0x41a925
  41a9a1:	shl    BYTE PTR [esi-0x64181bad],0x23
  41a9a8:	cmp    eax,ebp
  41a9aa:	dec    ebp
  41a9ab:	sbb    BYTE PTR [esi],0x19
  41a9ae:	inc    esi
  41a9af:	out    dx,al
  41a9b0:	sub    BYTE PTR [edx-0x2f],dl
  41a9b3:	add    esp,eax
  41a9b5:	dec    edi
  41a9b6:	add    BYTE PTR [edx-0x26],ah
  41a9b9:	jle    0x41aa35
  41a9bb:	push   ecx
  41a9bc:	nop
  41a9bd:	push   0xffffffa0
  41a9bf:	jo     0x41a9dd
  41a9c1:	and    ch,bh
  41a9c3:	push   ds
  41a9c4:	add    dl,dh
  41a9c6:	fist   WORD PTR [edi]
  41a9c8:	daa    
  41a9c9:	jmp    0x36cf:0x6e2030e4
  41a9d0:	mov    ah,0x13
  41a9d2:	je     0x41a9dd
  41a9d4:	rcl    BYTE PTR [eax+ebx*8+0x72],0xef
  41a9d9:	pop    esi
  41a9da:	inc    edx
  41a9db:	mov    al,ds:0x7ed85c60
  41a9e0:	loop   0x41a980
  41a9e2:	in     al,0xfc
  41a9e4:	faddp  st(1),st
  41a9e6:	sub    esp,0xffffffe9
  41a9e9:	xchg   edi,eax
  41a9ea:	add    BYTE PTR [edi-0x2e],bh
  41a9ed:	popf   
  41a9ee:	in     al,0xfc
  41a9f0:	(bad)  
  41a9f1:	sub    al,0x5
  41a9f3:	mov    eax,0xfce4b3dd
  41a9f8:	repnz iret 
  41a9fa:	jae    0x41aa4e
  41a9fc:	ficom  WORD PTR [ecx]
  41a9fe:	retf   0xe8ff
  41aa01:	xchg   edi,eax
  41aa02:	addr16 stc 
  41aa04:	push   DWORD PTR [ebx-0x1c]
  41aa07:	cld    
  41aa08:	pop    ss
  41aa09:	js     0x41aa33
  41aa0b:	xlat   BYTE PTR ds:[ebx]
  41aa0c:	ficomp WORD PTR [edx]
  41aa0e:	mov    ecx,0x7997e8ff
  41aa13:	jp     0x41aa92
  41aa15:	fnstenv [ecx]
  41aa17:	fnstenv [eax+0x73ccca]
  41aa1d:	int    0x42
  41aa1f:	cld    
  41aa20:	and    BYTE PTR [ebx],bl
  41aa22:	daa    
  41aa23:	std    
  41aa24:	pop    esi
  41aa25:	xor    DWORD PTR [ebx+0x30],esi
  41aa28:	adc    al,BYTE PTR [eax]
  41aa2a:	ror    DWORD PTR [eax+esi*2-0x1b8dbf50],cl
  41aa31:	add    BYTE PTR [esi-0x57006bd9],ah
  41aa37:	cmp    al,0xfb
  41aa39:	jmp    DWORD PTR [edx+0x67]
  41aa3c:	xchg   edx,eax
  41aa3d:	inc    esp
  41aa3e:	ret    0xfbd5
  41aa41:	call   0x420dfa
  41aa46:	js     0x41aa04
  41aa48:	or     eax,DWORD PTR [ebp-0x37e]
  41aa4e:	xchg   esi,eax
  41aa4f:	adc    al,0x35
  41aa51:	jge    0x41aac8
  41aa53:	push   0x7b608bbb
  41aa58:	out    0xbe,eax
  41aa5a:	jbe    0x41aa83
  41aa5c:	xchg   esp,eax
  41aa5d:	sub    esi,DWORD PTR [eax+0x38]
  41aa60:	sti    
  41aa61:	push   DWORD PTR [edx-0x738842e9]
  41aa67:	push   0xffffff8a
  41aa69:	push   esp
  41aa6a:	loop   0x41aa3f
  41aa6c:	sti    
  41aa6d:	cmp    BYTE PTR [ebp+0x1083136d],dh
  41aa73:	aas    
  41aa74:	sti    
  41aa75:	jmp    edx
  41aa77:	add    DWORD PTR [ebx+esi*2+0x37],esi
  41aa7b:	jle    0x41aace
  41aa7d:	inc    DWORD PTR [edx-0x2b]
  41aa80:	xchg   DWORD PTR [ebp+0x31],ecx
  41aa83:	sbb    bh,BYTE PTR ds:0x855da901
  41aa89:	jge    0x41aaac
  41aa8b:	sbb    ebx,DWORD PTR [ecx-0x28]
  41aa8e:	add    BYTE PTR [eax+0x157d3735],cl
  41aa94:	ins    DWORD PTR es:[edi],dx
  41aa95:	pop    eax
  41aa96:	and    BYTE PTR [edx-0x2b],0x9
  41aa9a:	jne    0x41aaee
  41aa9c:	sbb    DWORD PTR [ecx-0x8],edi
  41aa9f:	dec    esi
  41aaa0:	or     BYTE PTR [eax+0x216f473f],al
  41aaa6:	idiv   bl
  41aaa8:	in     eax,0x1c
  41aaaa:	jne    0x41aa40
  41aaac:	out    dx,al
  41aaad:	jg     0x41aa69
  41aaaf:	aam    0x36
  41aab1:	in     al,dx
  41aab2:	cld    
  41aab3:	xchg   ebp,eax
  41aab4:	mov    ds:0x97e1810e,eax
  41aab9:	jmp    0x41aab7
  41aabb:	sbb    ebx,edx
  41aabd:	je     0x41aac6
  41aabf:	pop    ss
  41aac0:	push   ebp
  41aac1:	inc    ebp
  41aac2:	std    
  41aac3:	or     ebx,DWORD PTR [edi]
  41aac5:	push   DWORD PTR [edx-0x68]
  41aac8:	sahf   
  41aac9:	jns    0x41ab45
  41aacb:	clc    
  41aacc:	mov    eax,0x551fc44d
  41aad1:	xor    eax,0xd9feebfd
  41aad6:	shl    al,cl
  41aad8:	out    0xe8,al
  41aada:	xor    BYTE PTR [edi-0x10ceedfe],bh
  41aae0:	stos   BYTE PTR es:[edi],al
  41aae1:	jmp    0x41ab27
  41aae3:	(bad)  
  41aae4:	mov    esi,0xe315586f
  41aae9:	or     bh,ah
  41aaeb:	mov    ebx,0x17506fce
  41aaf0:	xor    eax,0x2700ffe4
  41aaf5:	jmp    0x41ab74
  41aaf7:	mov    ch,BYTE PTR [eax-0x5a]
  41aafa:	call   0x6d0646fb
  41aaff:	test   al,0xd7
  41ab01:	xlat   BYTE PTR ds:[ebx]
  41ab02:	pop    edx
  41ab03:	hlt    
  41ab04:	in     al,dx
  41ab05:	push   esp
  41ab06:	int    0x73
  41ab08:	(bad)  
  41ab09:	loop   0x41aad3
  41ab0b:	jae    0x41aaa0
  41ab0d:	(bad)  
  41ab0e:	(bad)
  41ab11:	xlat   BYTE PTR ds:[ebx]
  41ab12:	add    BYTE PTR [eax],al
  41ab14:	pop    ds
  41ab15:	sub    al,0xdc
  41ab17:	or     BYTE PTR [ebp-0x15],0x20
  41ab1b:	sbb    ecx,0x220d03c3
  41ab21:	dec    edi
  41ab22:	add    al,0x0
  41ab24:	xchg   esp,eax
  41ab25:	add    BYTE PTR [edx],dl
  41ab27:	cmp    DWORD PTR [ecx+edi*2-0x5ecec4d],ecx
  41ab2e:	popa   
  41ab2f:	cmp    DWORD PTR [ecx+ebx*1],ebp
  41ab32:	pushf  
  41ab33:	sti    
  41ab34:	adc    bh,BYTE PTR [edx]
  41ab36:	jmp    0x41ab14
  41ab38:	adc    eax,0x1503e700
  41ab3d:	mov    eax,0x798edf35
  41ab42:	mov    bl,0xf
  41ab44:	ret    
  41ab45:	xor    eax,DWORD PTR [edi]
  41ab47:	jo     0x41ab0b
  41ab49:	sbb    DWORD PTR [eax+eax*1],0x642278
  41ab50:	daa    
  41ab51:	call   0x502a9663
  41ab56:	jb     0x41aad9
  41ab58:	add    BYTE PTR [edi+0x14eafde5],ah
  41ab5e:	rcr    dh,0x53
  41ab61:	sbb    eax,0xb86d73b
  41ab66:	clc    
  41ab67:	ss jmp 0x41ab10
  41ab6a:	xor    ch,dh
  41ab6c:	inc    ebx
  41ab6d:	xchg   esp,eax
  41ab6e:	sub    DWORD PTR [edx+0x7f6b6af7],0x83779269
  41ab78:	arpl   WORD PTR [ecx+0xe7ebde4],sp
  41ab7e:	sub    al,0xb6
  41ab80:	jmp    0x403c:0x6fd3e490
  41ab87:	out    0x86,eax
  41ab89:	ds popa 
  41ab8b:	sahf   
  41ab8c:	jmp    0xc0a5:0x1b0178
  41ab93:	cmp    ebx,0x8c4f3e1c
  41ab99:	lods   al,BYTE PTR ds:[esi]
  41ab9a:	mov    esi,0xe314eb97
  41ab9f:	(bad)  
  41aba0:	jmp    0xb6a:0xa930fcbc
  41aba7:	mov    DWORD PTR [edi+ecx*1-0x4586ace7],edi
  41abae:	adc    BYTE PTR ss:[eax-0x78],ah
  41abb2:	jns    0x41ac06
  41abb4:	ins    DWORD PTR es:[edi],dx
  41abb5:	mov    cl,BYTE PTR [edi-0x70]
  41abb8:	jo     0x41ab82
  41abba:	cld    
  41abbb:	call   0xe2faacaa
  41abc0:	push   edi
  41abc1:	xchg   esi,eax
  41abc2:	pop    ebp
  41abc3:	dec    ecx
  41abc4:	(bad)  
  41abc5:	sub    esp,DWORD PTR [edi-0x148dad00]
  41abcb:	xor    dl,BYTE PTR [ecx-0x49]
  41abce:	jp     0x41ac3e
  41abd0:	or     BYTE PTR [esi-0x487f102],bh
  41abd6:	push   edi
  41abd7:	add    BYTE PTR [edi+0x3d63fbac],al
  41abdd:	jmp    0xbdb5613c
  41abe2:	push   ecx
  41abe3:	add    eax,0x143b1284
  41abe8:	sub    esi,ebx
  41abea:	inc    ecx
  41abeb:	int3   
  41abec:	add    edx,0x44
  41abef:	or     eax,0xc833f38a
  41abf4:	jae    0x41abff
  41abf6:	lods   eax,DWORD PTR ds:[esi]
  41abf7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41abf8:	add    ebx,edi
  41abfa:	pushf  
  41abfb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41abfc:	fcom   DWORD PTR [edx]
  41abfe:	shr    DWORD PTR [esi+0x6],1
  41ac01:	sub    eax,eax
  41ac03:	cld    
  41ac04:	adc    eax,0x3a636f34
  41ac09:	jmp    0x7380a301
  41ac0e:	(bad)  
  41ac0f:	cmp    al,BYTE PTR [edx+esi*4-0x5fcf34fd]
  41ac16:	jmp    0x41abd2
  41ac18:	jae    0x41ac1a
  41ac1a:	push   esi
  41ac1b:	fs inc edx
  41ac1d:	cld    
  41ac1e:	call   0xc1a953
  41ac23:	or     ebx,DWORD PTR [edx]
  41ac25:	jno    0x41abdd
  41ac27:	push   es
  41ac28:	sub    cl,BYTE PTR [eax]
  41ac2a:	je     0x41ac5f
  41ac2c:	jg     0x41aca3
  41ac2e:	call   DWORD PTR [ebx+0x518da753]
  41ac34:	(bad)  
  41ac35:	cld    
  41ac36:	mov    cl,0x93
  41ac38:	gs ret 
  41ac3a:	call   0x3cd745
  41ac3f:	mov    al,0xbc
  41ac41:	jno    0x41ac4c
  41ac43:	xor    ebx,eax
  41ac45:	adc    DWORD PTR [eax-0x11],edi
  41ac48:	ds add bl,ch
  41ac4b:	out    dx,eax
  41ac4c:	add    eax,esi
  41ac4e:	mov    ebp,DWORD PTR [eax]
  41ac50:	jmp    0x41abd7
  41ac52:	add    DWORD PTR [esi-0x42],esi
  41ac55:	out    0x2,eax
  41ac57:	into   
  41ac58:	mov    esi,0xbaa45b5a
  41ac5d:	add    al,0x0
  41ac5f:	add    BYTE PTR [ecx+ebp*8-0x7d],ah
  41ac63:	cdq    
  41ac64:	sbb    BYTE PTR [edi+0x57],cl
  41ac67:	pop    ss
  41ac68:	sbb    ebx,DWORD PTR [ebx+0x57]
  41ac6b:	sahf   
  41ac6c:	mov    ch,0x89
  41ac6e:	inc    ebp
  41ac6f:	icebp  
  41ac70:	dec    ebx
  41ac71:	push   eax
  41ac72:	push   DWORD PTR [eax-0x42bfe9ee]
  41ac78:	sub    eax,eax
  41ac7a:	inc    eax
  41ac7b:	mov    cs:0xb4708908,eax
  41ac81:	test   DWORD PTR [ebp+0x51],eax
  41ac84:	addr16 inc edx
  41ac86:	cld    
  41ac87:	add    al,ch
  41ac89:	and    al,ah
  41ac8b:	push   eax
  41ac8c:	mov    esi,0x8575fb4b
  41ac91:	addr16 jp 0x41ac58
  41ac94:	xchg   esp,eax
  41ac95:	mov    cl,BYTE PTR ds:0x4178160
  41ac9b:	adc    DWORD PTR [ebp+eiz*8-0x1],0x31
  41aca0:	push   esp
  41aca1:	xchg   ecx,eax
  41aca2:	mov    dl,0xff
  41aca4:	push   ebx
  41aca5:	fcomp  DWORD PTR [edx+0x10]
  41aca8:	loop   0x41ad29
  41acaa:	jle    0x41acb5
  41acac:	inc    ebx
  41acad:	pop    ebx
  41acae:	call   0x3eb10d25
  41acb3:	fdivr  DWORD PTR [edx+edi*1]
  41acb6:	ds std 
  41acb8:	sub    esp,DWORD PTR [ecx-0x1]
  41acbb:	cmp    BYTE PTR [edi-0x5c],dl
  41acbe:	loopne 0x41aca8
  41acc0:	mov    ch,BYTE PTR [esi+0x3e]
  41acc3:	lock adc al,0xf0
  41acc6:	pop    ss
  41acc7:	jae    0x41ac68
  41acc9:	adc    dh,BYTE PTR [esi]
  41accb:	hlt    
  41accc:	add    edx,DWORD PTR [ebp+0xb5936f0]
  41acd2:	jo     0x41acbf
  41acd4:	pop    ds
  41acd5:	xchg   ebp,eax
  41acd6:	in     al,0x88
  41acd8:	pop    ecx
  41acd9:	or     esi,DWORD PTR [esi+0x7b]
  41acdc:	mov    eax,ds
  41acde:	jne    0x41ad24
  41ace0:	xchg   ebp,eax
  41ace1:	mov    esi,0xa69872c3
  41ace6:	shr    al,0x91
  41ace9:	inc    DWORD PTR [esi]
  41aceb:	pop    es
  41acec:	add    bl,al
  41acee:	fidivr DWORD PTR [edx+0x45]
  41acf1:	nop
  41acf2:	push   ds
  41acf3:	shl    DWORD PTR [edx-0x63],0xca
  41acf7:	sub    eax,0xe5e057e8
  41acfc:	cld    
  41acfd:	scas   eax,DWORD PTR es:[edi]
  41acfe:	js     0x41ace4
  41ad00:	jb     0x41aca2
  41ad02:	pop    ss
  41ad03:	in     eax,0x72
  41ad05:	test   BYTE PTR [edi],al
  41ad07:	fsubr  QWORD PTR [edi-0x63]
  41ad0a:	xchg   edx,eax
  41ad0b:	in     al,0xfc
  41ad0d:	or     DWORD PTR [ecx],eax
  41ad0f:	mov    ds:0x71fcd17b,eax
  41ad14:	cmp    DWORD PTR [eax-0x1f],ebp
  41ad17:	sbb    ebp,esp
  41ad19:	push   ds
  41ad1a:	cmp    al,0xdf
  41ad1c:	add    al,0xc4
  41ad1e:	fsub   DWORD PTR [eax]
  41ad20:	std    
  41ad21:	pop    eax
  41ad22:	loope  0x41ad95
  41ad24:	ds cwde 
  41ad26:	mov    edx,0x3a1d16e6
  41ad2b:	jecxz  0x41ada8
  41ad2d:	lahf   
  41ad2e:	stc    
  41ad2f:	jno    0x41ad72
  41ad31:	inc    eax
  41ad32:	inc    eax
  41ad33:	jo     0x41ad73
  41ad35:	pushf  
  41ad36:	pop    edx
  41ad37:	bound  eax,QWORD PTR [ecx+0x48]
  41ad3a:	pop    edx
  41ad3b:	pusha  
  41ad3c:	ds nop
  41ad3e:	jne    0x41aceb
  41ad40:	rcl    DWORD PTR [eax+ebx*8],cl
  41ad43:	jmp    0xbb7a4fb7
  41ad48:	add    BYTE PTR [edx+eax*2],bl
  41ad4b:	fstp   st(2)
  41ad4d:	lea    edi,[edx-0x6aff0a54]
  41ad53:	aad    0xe2
  41ad55:	mov    ebp,0xb3e7f259
  41ad5a:	jmp    0xe6fb:0xd5bcb241
  41ad61:	push   eax
  41ad62:	or     eax,0xa3d869d4
  41ad67:	dec    edx
  41ad68:	sahf   
  41ad69:	out    0x46,al
  41ad6b:	clc    
  41ad6c:	pop    ebx
  41ad6d:	jno    0x41ad33
  41ad6f:	sub    al,0xe6
  41ad71:	fld    TBYTE PTR [ecx+0x17e6dde1]
  41ad77:	rcr    BYTE PTR [edx+0x6d],0x1d
  41ad7b:	cmp    edx,ebx
  41ad7d:	jp     0x41adcd
  41ad7f:	call   0xe0dcad30
  41ad84:	jno    0x41adc6
  41ad86:	mov    BYTE PTR [ebx-0x7b281f01],cl
  41ad8c:	(bad)  
  41ad8d:	xor    al,0x71
  41ad8f:	dec    eax
  41ad90:	cmp    DWORD PTR [esp+eax*4],ebp
  41ad93:	push   esp
  41ad94:	add    ebp,DWORD PTR [ecx-0x41]
  41ad97:	sub    eax,0x18179c73
  41ad9c:	sub    eax,0xc0119615
  41ada1:	ins    BYTE PTR es:[edi],dx
  41ada2:	push   edi
  41ada3:	push   esp
  41ada4:	cmp    eax,0xfcdfbf69
  41ada9:	std    
  41adaa:	js     0x41addc
  41adac:	and    DWORD PTR [ecx-0x520b17c6],0x5988dd32
  41adb6:	add    BYTE PTR [esi+edx*8],dl
  41adb9:	jae    0x41adbe
  41adbb:	enter  0x0,0xf9
  41adbf:	xchg   edi,eax
  41adc0:	push   0x0
  41adc2:	rcl    DWORD PTR [edi+0x37d4fd36],cl
  41adc8:	icebp  
  41adc9:	aas    
  41adca:	jmp    0xd9b44de3
  41adcf:	push   ecx
  41add0:	push   0x9724e7
  41add5:	xor    DWORD PTR [ecx],0xabe6e7fa
  41addb:	repnz fmul QWORD PTR [eax+0x5ce85111]
  41ade2:	icebp  
  41ade3:	repnz fdiv st(4),st
  41ade6:	je     0x41adaf
  41ade8:	out    0x54,eax
  41adea:	loope  0x41ad9e
  41adec:	fdiv   st(4),st
  41adee:	je     0x41ada3
  41adf0:	out    0x4c,eax
  41adf2:	icebp  
  41adf3:	mov    al,0xdc
  41adf5:	mov    BYTE PTR [esi-0x5438c1a7],ah
  41adfb:	xchg   esp,eax
  41adfc:	add    BYTE PTR [esi+0x62],dl
  41adff:	test   al,0x5f
  41ae01:	add    BYTE PTR ds:[ecx-0x2ba0291],dl
  41ae08:	sub    esi,DWORD PTR es:[ebp+0x7c]
  41ae0c:	sbb    eax,0x20c9ff53
  41ae11:	or     al,0x56
  41ae13:	xor    cl,BYTE PTR [edi]
  41ae15:	pushf  
  41ae16:	adc    edi,DWORD PTR [ebp+0xc08104]
  41ae1c:	mov    BYTE PTR ds:0x5f53048a,al
  41ae22:	mov    ebp,0x20273974
  41ae27:	je     0x41ae96
  41ae29:	daa    
  41ae2a:	add    eax,0x9273972
  41ae2f:	jbe    0x41ae66
  41ae31:	daa    
  41ae32:	ds je  0x41ae5e
  41ae35:	daa    
  41ae36:	sub    esi,DWORD PTR [ebp+0x39]
  41ae39:	xchg   ebx,eax
  41ae3a:	std    
  41ae3b:	jmp    0x6f:0x5ec0113f
  41ae42:	add    BYTE PTR [ebp-0x5a],dl
  41ae45:	mov    eax,0xfedec7f
  41ae4a:	lds    edx,FWORD PTR [edi+0xe]
  41ae4d:	in     al,0x85
  41ae4f:	dec    ebp
  41ae50:	leave  
  41ae51:	pop    esp
  41ae52:	dec    edx
  41ae53:	inc    BYTE PTR [edi+eiz*2-0x14bf7610]
  41ae5a:	xor    eax,0x82d3f54d
  41ae5f:	ss in  al,dx
  41ae61:	add    al,BYTE PTR [eax]
  41ae63:	push   esi
  41ae64:	xchg   BYTE PTR [edx],al
  41ae66:	das    
  41ae67:	leave  
  41ae68:	aam    0x15
  41ae6a:	hlt    
  41ae6b:	je     0x41ae20
  41ae6d:	cmp    BYTE PTR [eax],0x1f
  41ae70:	rep ins DWORD PTR es:[edi],dx
  41ae72:	or     bh,bh
  41ae74:	adc    al,0xe5
  41ae77:	or     eax,0x8d0002bc
  41ae7c:	xchg   esp,eax
  41ae7d:	std    
  41ae7e:	add    cl,BYTE PTR [edx+0x280d9a00]
  41ae84:	or     eax,0x7411
  41ae89:	xchg   esp,eax
  41ae8a:	push   edx
  41ae8b:	ds hlt 
  41ae8d:	mov    ebp,DWORD PTR ds:0xbf5482f0
  41ae93:	jge    0x41ae86
  41ae95:	xchg   esp,eax
  41ae96:	out    0x0,eax
  41ae98:	mov    ecx,ebp
  41ae9a:	iret   
  41ae9b:	pop    ss
  41ae9c:	cmc    
  41ae9d:	adc    al,0xf5
  41ae9f:	in     eax,0xff
  41aea1:	adc    BYTE PTR [ebx+eax*1],ah
  41aea4:	jmp    edi
  41aea6:	cwde   
  41aea7:	jg     0x41aea6
  41aea9:	fwait
  41aeaa:	out    dx,al
  41aeab:	jp     0x41ae86
  41aead:	xchg   esp,eax
  41aeae:	out    0x0,eax
  41aeb0:	cmp    BYTE PTR [esi+ebx*4-0xd],0x82
  41aeb5:	gs call 0x67fdaebb
  41aebb:	ins    BYTE PTR es:[edi],dx
  41aebc:	inc    eax
  41aebd:	xchg   esp,eax
  41aebe:	sar    edx,0x3f
  41aec1:	ret    
  41aec2:	aas    
  41aec3:	daa    
  41aec4:	std    
  41aec5:	sbb    eax,DWORD PTR [edi+0x7d]
  41aec8:	mov    edi,0xffa863a3
  41aecd:	or     ebp,eax
  41aecf:	mov    edx,0xd9e80242
  41aed4:	mov    cl,0x94
  41aed6:	out    0x0,eax
  41aed8:	push   0xffffff9a
  41aeda:	sahf   
  41aedb:	daa    
  41aedc:	cmc    
  41aedd:	(bad)  
  41aede:	ficomp WORD PTR [eax-0x80]
  41aee1:	imul   esp,DWORD PTR [edi+0x7c00e800],0x6
  41aee8:	in     al,0xfc
  41aeea:	sbb    BYTE PTR [eax],ch
  41aeec:	ins    DWORD PTR es:[edi],dx
  41aeed:	pop    es
  41aeee:	shr    BYTE PTR [edx+eiz*8+0x133acfe],cl
  41aef5:	add    BYTE PTR [eax+eax*1+0xb149ad],dl
  41aefc:	out    dx,al
  41aefd:	cdq    
  41aefe:	push   esi
  41aeff:	fucom  st(5)
  41af01:	cdq    
  41af02:	jmp    0x41af6c
  41af04:	push   esi
  41af05:	inc    esp
  41af06:	xchg   esp,eax
  41af07:	sbb    DWORD PTR [esi-0xd2256a6],edi
  41af0d:	mov    BYTE PTR [ebx],cl
  41af0f:	test   eax,0x430d0429
  41af14:	mov    bh,0x91
  41af16:	xlat   BYTE PTR ds:[ebx]
  41af17:	clc    
  41af18:	out    0xeb,eax
  41af1a:	jbe    0x41aefa
  41af1c:	popf   
  41af1d:	jecxz  0x41af36
  41af1f:	rcr    BYTE PTR [ebx],0xf
  41af22:	bound  eax,QWORD PTR [ebx-0x72]
  41af25:	test   dh,bl
  41af27:	(bad)  
  41af29:	push   ebp
  41af2a:	arpl   cx,bp
  41af2c:	sbb    eax,0x76430213
  41af31:	mov    es,ebx
  41af33:	push   esp
  41af34:	test   BYTE PTR [ebx-0x6c],0xe9
  41af38:	mov    al,0x1c
  41af3a:	(bad)  
  41af3c:	rcl    DWORD PTR [ecx+0x14],cl
  41af3f:	pop    ebx
  41af40:	push   ebp
  41af41:	add    al,0xa7
  41af43:	dec    eax
  41af44:	or     edx,DWORD PTR [ecx]
  41af46:	mov    al,ds:0xe0344
  41af4b:	mov    BYTE PTR [eax-0x5],al
  41af4e:	or     al,0x80
  41af50:	sbb    al,0xf3
  41af52:	sub    DWORD PTR [edi-0x73b69dd5],eax
  41af58:	sub    DWORD PTR [esi],ebp
  41af5a:	xchg   ebx,ebp
  41af5c:	add    dl,BYTE PTR [ebp+0x7f037e26]
  41af62:	mov    ebp,DWORD PTR [eax+0x40]
  41af65:	out    0x90,eax
  41af67:	push   edi
  41af68:	std    
  41af69:	out    0x33,eax
  41af6b:	shl    edx,1
  41af6d:	pop    edx
  41af6e:	test   DWORD PTR [ebx-0x27940000],0x4d620b51
  41af78:	fadd   DWORD PTR [eax-0x39fe37d4]
  41af7e:	in     eax,0xaf
  41af80:	cld    
  41af81:	call   0x8944c167
  41af86:	sbb    al,0xb8
  41af88:	test   BYTE PTR [ebx],al
  41af8a:	loopne 0x41b002
  41af8c:	aas    
  41af8d:	clc    
  41af8e:	jb     0x41af84
  41af90:	rol    BYTE PTR [eax+eiz*2-0xc],1
  41af94:	sar    BYTE PTR [eax],1
  41af96:	sub    al,0x88
  41af98:	or     eax,0xdd75b782
  41af9d:	cld    
  41af9e:	aas    
  41af9f:	sbb    edi,DWORD PTR [edi]
  41afa1:	clc    
  41afa2:	ret    0x14e
  41afa5:	inc    ebx
  41afa6:	loope  0x41af7e
  41afa8:	ret    
  41afa9:	shr    ebp,0x97
  41afac:	xor    cl,BYTE PTR [ecx+0x118e0079]
  41afb2:	sar    BYTE PTR [edx-0x3abbecca],0x47
  41afb9:	or     eax,0x976e86
  41afbe:	add    BYTE PTR [edx-0x6dbb7e6],bh
  41afc4:	adc    DWORD PTR [eax],ecx
  41afc6:	or     eax,0x72fc3869
  41afcb:	out    dx,eax
  41afcc:	(bad)  
  41afce:	das    
  41afcf:	adc    bh,bl
  41afd1:	xor    BYTE PTR fs:[eax],0xa7
  41afd5:	push   ecx
  41afd6:	or     ch,BYTE PTR [ecx-0x28]
  41afd9:	es je  0x41afc8
  41afdc:	pop    ss
  41afdd:	shr    DWORD PTR ds:0xf75beb94,cl
  41afe3:	test   al,0x4a
  41afe5:	(bad)  
  41afe6:	jg     0x41aff8
  41afe8:	js     0x41b03f
  41afea:	adc    al,BYTE PTR [eax]
  41afec:	dec    eax
  41afed:	adc    al,0xa1
  41afef:	adc    BYTE PTR [edi+0x2d057308],0xbc
  41aff6:	pop    ebx
  41aff7:	jne    0x41afa9
  41aff9:	jg     0x41aff0
  41affb:	jp     0x41b050
  41affd:	test   DWORD PTR [ecx+0xeafdd1],0x7ff1cc80
  41b007:	cli    
  41b008:	mov    ah,0xf0
  41b00a:	popf   
  41b00b:	ret    
  41b00c:	pop    ebx
  41b00d:	int    0x7c
  41b00f:	jecxz  0x41b083
  41b011:	jg     0x41afd2
  41b013:	xor    BYTE PTR [eax],al
  41b015:	outs   dx,DWORD PTR ds:[esi]
  41b016:	popf   
  41b017:	jl     0x41b012
  41b019:	je     0x41b00b
  41b01b:	popf   
  41b01c:	ret    0xca3b
  41b01f:	jl     0x41b003
  41b021:	jb     0x41b0a2
  41b023:	mov    esi,0x30083330
  41b028:	and    eax,0x5c848e6f
  41b02d:	or     eax,0xd5487fe
  41b032:	add    eax,0xec2fc07f
  41b037:	inc    DWORD PTR [edi+0x4042ef59]
  41b03d:	jbe    0x41b09f
  41b03f:	and    al,0x14
  41b041:	cmp    al,BYTE PTR [ebp-0x1e350089]
  41b047:	push   edi
  41b048:	pop    edi
  41b049:	jae    0x41b053
  41b04b:	push   es
  41b04c:	add    BYTE PTR [ebx],bh
  41b04e:	lds    eax,FWORD PTR [eax+eax*1]
  41b051:	xchg   BYTE PTR [eax+0x24],cl
  41b054:	or     dh,dl
  41b056:	mov    esi,0x33233fff
  41b05b:	sbb    al,0xe8
  41b05d:	jbe    0x41b062
  41b05f:	sti    
  41b060:	jmp    DWORD PTR [esi-0x4c]
  41b063:	xor    esi,0xfcf17d94
  41b069:	pusha  
  41b06a:	lds    ecx,FWORD PTR [edi*8-0x17f332b8]
  41b071:	(bad)  
  41b072:	fcmovu st,st(7)
  41b074:	cld    
  41b075:	(bad)  
  41b077:	jmp    0x41b07a
  41b079:	add    BYTE PTR [edi-0x633dbdd7],al
  41b07f:	jmp    0x65fa39b9
  41b084:	in     eax,dx
  41b085:	or     edx,DWORD PTR [edi]
  41b087:	xor    al,0xf4
  41b089:	add    esp,DWORD PTR [edx]
  41b08b:	mov    ebx,0xc2a472df
  41b090:	cmc    
  41b091:	ja     0x41b039
  41b093:	daa    
  41b094:	add    al,0x87
  41b096:	fst    DWORD PTR [ebx+0x451703eb]
  41b09c:	loopne 0x41b09d
  41b09e:	push   ds
  41b09f:	sub    eax,0xebd9890c
  41b0a4:	xor    edx,DWORD PTR [esi+0x11]
  41b0a7:	mov    esp,0xd3c98908
  41b0ac:	sbb    DWORD PTR [esi],0xffffff94
  41b0af:	dec    esi
  41b0b0:	mov    ecx,0xdbfd1d54
  41b0b5:	cmp    BYTE PTR [edx-0x29],bl
  41b0b8:	dec    ebp
  41b0b9:	push   ecx
  41b0ba:	or     ebp,ebp
  41b0bc:	fsub   st,st(7)
  41b0be:	push   0x1ffcdf8e
  41b0c3:	pusha  
  41b0c4:	adc    al,0xd2
  41b0c6:	pop    edi
  41b0c7:	sub    eax,0xac5f4355
  41b0cc:	or     BYTE PTR [ebx-0x5b],dh
  41b0cf:	add    BYTE PTR ds:0x83ac8010,dh
  41b0d5:	jp     0x41b07b
  41b0d7:	call   0xad58f630
  41b0dc:	lock add DWORD PTR [eax],eax
  41b0df:	push   0x6f1ca800
  41b0e4:	fcom   QWORD PTR [ebp+edi*8+0x341353e0]
  41b0eb:	fst    DWORD PTR [ebx-0x9]
  41b0ee:	loopne 0x41b096
  41b0f0:	jl     0x41b0cb
  41b0f2:	inc    ebx
  41b0f3:	xchg   esp,eax
  41b0f4:	and    DWORD PTR [esi],0x56
  41b0f7:	fwait
  41b0f8:	test   DWORD PTR [ebx-0x15e3c421],ebp
  41b0fe:	sbb    eax,0x41725b28
  41b103:	lods   al,BYTE PTR ds:[esi]
  41b104:	adc    eax,0xde552bd
  41b109:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b10a:	aas    
  41b10b:	cmp    dh,BYTE PTR ds:0xa3c2a0
  41b111:	push   0x61
  41b113:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b114:	std    
  41b115:	xor    edx,ebp
  41b117:	or     al,0x43
  41b119:	scas   eax,DWORD PTR es:[edi]
  41b11a:	mov    ecx,esi
  41b11c:	hlt    
  41b11d:	add    esp,edx
  41b11f:	sbb    cl,BYTE PTR [edi]
  41b121:	xchg   edx,eax
  41b122:	out    0x1e,eax
  41b124:	add    al,0xfe
  41b126:	mov    ah,BYTE PTR [ebp+edx*1-0x51]
  41b12a:	push   ebx
  41b12b:	cmp    BYTE PTR [esi+0x204a83dc],al
  41b131:	sti    
  41b132:	or     DWORD PTR [edi+edx*8],edx
  41b135:	out    dx,eax
  41b136:	pop    edi
  41b137:	xchg   ecx,eax
  41b138:	sub    BYTE PTR [edi+0x11],0xb9
  41b13c:	push   es
  41b13d:	push   0xffffffda
  41b13f:	xchg   ebp,eax
  41b140:	dec    ebp
  41b141:	jmp    0x41b0cf
  41b143:	add    BYTE PTR [edi-0x25bdad8d],ah
  41b149:	adc    eax,0x7d345257
  41b14e:	push   eax
  41b14f:	add    al,BYTE PTR [esi-0x5b9e966f]
  41b155:	add    BYTE PTR [ebx+0x5b14fa],dh
  41b15b:	fst    DWORD PTR [eax+0x756a0c54]
  41b161:	lock add DWORD PTR [ebp+eiz*8+0x57215a87],ebx
  41b169:	out    0xb,eax
  41b16b:	bound  edx,QWORD PTR [ebp-0x2c]
  41b16e:	mov    BYTE PTR [edi+ebp*8+0x1eeae93f],ah
  41b175:	ds hlt 
  41b177:	jb     0x41b1de
  41b179:	hlt    
  41b17a:	sub    BYTE PTR [edx],ch
  41b17c:	or     edx,ebx
  41b17e:	jmp    0x1d46b651
  41b183:	je     0x41b1f0
  41b185:	(bad)  
  41b186:	(bad)  
  41b187:	jb     0x41b11f
  41b189:	sbb    al,0x20
  41b18b:	pop    ebp
  41b18c:	mov    BYTE PTR [edi+eax*1],bl
  41b18f:	dec    ebp
  41b190:	fwait
  41b191:	adc    al,0xb
  41b193:	inc    esi
  41b194:	xchg   edi,eax
  41b195:	inc    ecx
  41b196:	jmp    0x1484c069
  41b19b:	add    cl,BYTE PTR [edi+0x7f]
  41b19e:	pop    es
  41b19f:	bound  edx,QWORD PTR [esi-0x21]
  41b1a2:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  41b1a4:	dec    edx
  41b1a5:	aad    0x52
  41b1a7:	jb     0x41b1a9
  41b1a9:	jae    0x41b1f2
  41b1ab:	dec    edi
  41b1ac:	aas    
  41b1ad:	mov    ds:0x72f972d5,eax
  41b1b2:	repz ja 0x41b190
  41b1b5:	xlat   BYTE PTR ds:[ebx]
  41b1b6:	add    BYTE PTR [ecx+0x427f8ff4],cl
  41b1bc:	jno    0x41b1cc
  41b1be:	inc    ebx
  41b1bf:	or     al,0x5c
  41b1c1:	xchg   ebx,eax
  41b1c2:	(bad)  
  41b1c3:	cmp    BYTE PTR [esi-0x3a],bl
  41b1c6:	pop    eax
  41b1c7:	push   ecx
  41b1c8:	jb     0x41b224
  41b1ca:	sub    esi,eax
  41b1cc:	mov    ecx,0x4e560aad
  41b1d1:	or     al,0x34
  41b1d3:	push   ss
  41b1d4:	add    BYTE PTR ds:0xf1c47f04,bh
  41b1da:	test   BYTE PTR [ecx-0x4],al
  41b1dd:	push   0x740571c3
  41b1e2:	pusha  
  41b1e3:	cld    
  41b1e4:	jmp    0x41b1e4
  41b1e6:	mov    dh,0x41
  41b1e8:	cld    
  41b1e9:	inc    ax
  41b1eb:	cld    
  41b1ec:	sub    esp,DWORD PTR [ebx+0x2901f782]
  41b1f2:	dec    eax
  41b1f3:	jg     0x41b1f0
  41b1f5:	mov    edi,0x3800138
  41b1fa:	icebp  
  41b1fb:	jae    0x41b23f
  41b1fd:	ss dec eax
  41b1ff:	clc    
  41b200:	(bad)  
  41b201:	cmc    
  41b202:	cld    
  41b203:	(bad)  ss:[ebx-0xd]
  41b207:	jg     0x41b245
  41b209:	mov    ebx,0x2b70f9
  41b20e:	pop    ebp
  41b20f:	push   cs
  41b210:	sti    
  41b211:	jne    0x41b1a0
  41b213:	mov    ah,0x11
  41b215:	pushf  
  41b216:	outs   dx,BYTE PTR ds:[esi]
  41b217:	inc    ebx
  41b218:	add    BYTE PTR [ebp+0x2b1c2f2d],al
  41b21e:	shl    al,0x53
  41b221:	jmp    FWORD PTR [eax+0x68ff52e0]
  41b227:	repz adc eax,0x592a6d40
  41b22d:	or     al,0xf6
  41b22f:	aaa    
  41b230:	or     BYTE PTR [ebx+0x7cfeeff9],al
  41b236:	inc    ecx
  41b237:	call   0xb78a3d3b
  41b23c:	aaa    
  41b23d:	idiv   DWORD PTR [edi]
  41b23f:	mov    DWORD PTR [edi-0x75],edx
  41b242:	js     0x41b234
  41b244:	pop    edx
  41b245:	pop    esi
  41b246:	fs ret 0x8
  41b24a:	call   0x94c59ad6
  41b24f:	cmp    eax,0x466a50f4
  41b254:	push   ebp
  41b255:	adc    al,0x1f
  41b257:	aam    0x58
  41b259:	adc    dl,BYTE PTR [ecx+ebp*8-0x25]
  41b25d:	aad    0xfb
  41b25f:	xchg   ebx,eax
  41b260:	lock xchg BYTE PTR [ecx+0x25],bl
  41b264:	fcmovnbe st,st(5)
  41b266:	pop    ds
  41b267:	mov    WORD PTR [edi+eax*4],cs
  41b26a:	pop    ecx
  41b26b:	stc    
  41b26c:	xchg   BYTE PTR [edx-0x74],al
  41b26f:	pop    esp
  41b270:	sbb    BYTE PTR [eax],cl
  41b272:	add    BYTE PTR [edi],bl
  41b274:	adc    DWORD PTR [ecx-0x3d3e3fa6],ecx
  41b27a:	or     al,0x17
  41b27c:	dec    edx
  41b27d:	add    al,0x0
  41b27f:	xchg   esp,eax
  41b280:	jbe    0x41b2b1
  41b282:	mov    esi,DWORD PTR [ecx]
  41b284:	int    0xe8
  41b286:	jb     0x41b2e5
  41b288:	(bad)  
  41b28a:	xchg   BYTE PTR [ecx-0x1f],bl
  41b28d:	test   DWORD PTR [edi-0x719a75],edi
  41b293:	xchg   ebx,eax
  41b294:	call   0x3c62d20
  41b299:	ret    
  41b29a:	jne    0x41b29b
  41b29c:	out    dx,al
  41b29d:	cs std 
  41b29f:	add    DWORD PTR [eax-0x44efed25],edi
  41b2a5:	inc    eax
  41b2a6:	add    BYTE PTR [ecx],dl
  41b2a8:	test   al,0x55
  41b2aa:	ins    BYTE PTR es:[edi],dx
  41b2ab:	adc    al,0xb4
  41b2ad:	pop    ss
  41b2ae:	cmp    ah,cl
  41b2b0:	add    eax,0xeb4c4a87
  41b2b5:	mov    DWORD PTR [edi+edi*2+0x58],0xed0f2955
  41b2bd:	fisttp WORD PTR [eax+0x73af6553]
  41b2c3:	cwde   
  41b2c4:	xor    al,0x45
  41b2c6:	adc    eax,0x47220095
  41b2cb:	sbb    al,0x4f
  41b2cd:	in     al,dx
  41b2ce:	xor    cl,BYTE PTR [edi]
  41b2d0:	in     eax,dx
  41b2d1:	out    dx,al
  41b2d2:	mov    cl,ah
  41b2d4:	call   0x941b30c
  41b2d9:	(bad)  
  41b2da:	push   ecx
  41b2db:	jne    0x957447eb
  41b2e1:	rcl    DWORD PTR [esi+0x2e0243eb],0xdc
  41b2e8:	adc    al,0x54
  41b2ea:	and    eax,DWORD PTR [ebx]
  41b2ec:	push   0xffffffed
  41b2ee:	sbb    eax,0xeabed856
  41b2f3:	cld    
  41b2f4:	mov    bl,0xd5
  41b2f6:	xchg   ebx,eax
  41b2f7:	not    DWORD PTR [eax-0x7d]
  41b2fa:	jmp    0xb900:0x54e853fc
  41b301:	aad    0xe9
  41b303:	pop    esi
  41b304:	mov    al,0x89
  41b306:	mov    ds:0xe9d07d0b,eax
  41b30b:	shr    BYTE PTR [ebx+edx*2-0x21],cl
  41b30f:	pop    es
  41b310:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b311:	xchg   DWORD PTR [ebx+0x8],ebx
  41b314:	xchg   ebp,eax
  41b315:	shl    bh,1
  41b317:	pop    eax
  41b318:	or     BYTE PTR [ecx-0x49432fdd],0xed
  41b31f:	test   eax,ebx
  41b321:	aad    0xb5
  41b323:	fcmovnbe st,st(0)
  41b325:	mov    DWORD PTR [ebx],esp
  41b327:	or     dl,cl
  41b329:	cmp    DWORD PTR [eax+0x340093c6],esi
  41b32f:	(bad)  
  41b330:	outs   dx,DWORD PTR ds:[esi]
  41b331:	das    
  41b332:	cmp    dh,BYTE PTR [edx]
  41b334:	sbb    eax,0x8bf60f0b
  41b339:	add    BYTE PTR [esi],bl
  41b33b:	fild   DWORD PTR [eax]
  41b33d:	mov    BYTE PTR [esi+edi*2],0xb2
  41b341:	cmp    BYTE PTR [ebx+0x0],cl
  41b344:	loope  0x41b368
  41b346:	int    0xfc
  41b348:	xchg   edi,eax
  41b349:	adc    eax,0x14c77dd4
  41b34e:	xchg   ebp,eax
  41b34f:	jge    0x41b314
  41b351:	or     al,BYTE PTR [edx+0x8]
  41b354:	fwait
  41b355:	scas   eax,DWORD PTR es:[edi]
  41b356:	call   0xd4305b0a
  41b35b:	sub    BYTE PTR [ecx],0x64
  41b35e:	inc    esp
  41b35f:	inc    eax
  41b360:	cdq    
  41b361:	or     BYTE PTR [edx+0x8],al
  41b364:	ss es jle 0x41b3aa
  41b368:	sub    eax,0xeb38411d
  41b36d:	adc    al,0x95
  41b36f:	jae    0x41b354
  41b371:	out    dx,eax
  41b372:	xchg   ecx,eax
  41b373:	add    DWORD PTR [esi],edx
  41b375:	out    dx,eax
  41b376:	xchg   edi,edx
  41b378:	or     edx,DWORD PTR fs:[ecx+0x2d]
  41b37c:	jb     0x41b3d3
  41b37e:	add    al,0x55
  41b380:	cdq    
  41b381:	sub    al,0x10
  41b384:	jmp    0x111c:0xaeb1d3ce
  41b38b:	cmp    ecx,edx
  41b38d:	inc    ecx
  41b38e:	ds std 
  41b390:	fidivr WORD PTR [esi+0x4fde0851]
  41b396:	cli    
  41b397:	mov    edi,0xc2027705
  41b39c:	jno    0x41b333
  41b39e:	mov    DWORD PTR [edx-0x43],eax
  41b3a1:	add    ch,dl
  41b3a3:	call   0xd590ab66
  41b3a8:	mov    BYTE PTR [edx+0x1cfd0a7a],ch
  41b3ae:	mov    WORD PTR [ecx+0x156091c4],cs
  41b3b4:	std    
  41b3b5:	xchg   esi,eax
  41b3b6:	mov    ?,WORD PTR [edx]
  41b3b8:	pop    ecx
  41b3b9:	mov    al,ds:0xfffffc51
  41b3be:	mov    al,ds:0x981e883
  41b3c3:	sar    ch,1
  41b3c5:	(bad)  
  41b3c6:	cmp    eax,0x9757560b
  41b3cb:	inc    BYTE PTR [esi+0x41c255f0]
  41b3d1:	sti    
  41b3d2:	sub    eax,0xfa0840f5
  41b3d7:	add    DWORD PTR [ebx+0x4ffffd00],0x402e5d68
  41b3e1:	add    BYTE PTR [esi+0x41a5e4c9],al
  41b3e7:	mov    bh,0xfb
  41b3e9:	test   DWORD PTR [ebp+0x338d7630],edi
  41b3ef:	add    cl,BYTE PTR [edx+0x1cb46d08]
  41b3f5:	je     0x41b3ae
  41b3f7:	jg     0x41b3ee
  41b3f9:	or     DWORD PTR [ecx],ebx
  41b3fb:	or     BYTE PTR [eax-0xc93707],al
  41b401:	aas    
  41b402:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b403:	(bad)  [edi]
  41b405:	lock add BYTE PTR [esi+0x188d0830],bh
  41b40c:	or     BYTE PTR [esi+0x50],dl
  41b40f:	sub    BYTE PTR [ebx-0x46450114],al
  41b415:	ret    
  41b416:	test   DWORD PTR [ebp-0x4a],ebp
  41b419:	sti    
  41b41a:	(bad)  
  41b41b:	jle    0x41b41c
  41b41d:	(bad)  
  41b41e:	jmp    DWORD PTR [ebp+0x12]
  41b421:	add    BYTE PTR [di-0x7c],ch
  41b425:	aam    0x85
  41b427:	push   es
  41b428:	xor    BYTE PTR [edx],bh
  41b42a:	mov    dl,0x67
  41b42c:	out    0xd9,eax
  41b42e:	inc    ebp
  41b42f:	cmp    bh,BYTE PTR [ecx-0x460f0779]
  41b435:	jo     0x41b45e
  41b437:	xchg   esp,eax
  41b438:	push   ss
  41b439:	call   0x5729:0xe949e6
  41b440:	repz jmp 0x41b3e0
  41b443:	js     0x41b497
  41b445:	xlat   BYTE PTR ds:[ebx]
  41b446:	mov    cl,ah
  41b448:	fnstsw WORD PTR [edi]
  41b44a:	push   ebp
  41b44b:	sbb    eax,0x4c812ee8
  41b450:	pop    edx
  41b451:	in     al,dx
  41b452:	lea    ebx,[eax+0x32]
  41b455:	xlat   BYTE PTR ds:[ebx]
  41b456:	mov    BYTE PTR [ecx-0x27],ah
  41b459:	mov    esi,edi
  41b45b:	rcr    DWORD PTR [ebx+0x3166fedb],1
  41b461:	aad    0xfe
  41b463:	cli    
  41b464:	adc    DWORD PTR [esi+0x3669ef42],ecx
  41b46a:	pop    ecx
  41b46b:	add    ch,bl
  41b46d:	or     BYTE PTR es:[eax],al
  41b470:	dec    ecx
  41b471:	dec    esi
  41b472:	call   0x8d5c3c7
  41b477:	add    DWORD PTR [ecx-0x27],esi
  41b47a:	mov    eax,esp
  41b47c:	pop    ds
  41b47d:	push   ss
  41b47e:	in     al,dx
  41b47f:	sub    eax,0x8400e994
  41b484:	aam    0x4b
  41b486:	std    
  41b487:	xor    ah,dl
  41b489:	std    
  41b48a:	and    BYTE PTR [esi-0x55],dl
  41b48d:	dec    ebx
  41b48e:	icebp  
  41b48f:	mov    BYTE PTR [ebx-0x1a],ch
  41b492:	dec    ebp
  41b493:	or     BYTE PTR [ebx-0x6ca9f7d5],bl
  41b499:	aad    0x10
  41b49b:	push   ss
  41b49c:	aam    0xe7
  41b49e:	add    ebx,0xffffff90
  41b4a1:	(bad)  
  41b4a2:	ss add al,0x2
  41b4a5:	out    0x89,eax
  41b4a7:	pop    esp
  41b4a8:	cwde   
  41b4a9:	pop    esi
  41b4aa:	mov    edi,0xc604cf5d
  41b4af:	or     edx,DWORD PTR [eax+eax*1+0x2a6b8d3d]
  41b4b6:	loop   0x41b4e9
  41b4b8:	pushf  
  41b4b9:	dec    edx
  41b4ba:	retf   0xd98c
  41b4bd:	add    al,0x5c
  41b4bf:	inc    edx
  41b4c0:	inc    ecx
  41b4c1:	jl     0x41b46b
  41b4c3:	dec    edi
  41b4c4:	mov    cs,ecx
  41b4c6:	xchg   esi,eax
  41b4c7:	and    al,0x56
  41b4c9:	(bad)  
  41b4ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b4cb:	mov    WORD PTR [ebx],fs
  41b4cd:	out    0xe8,al
  41b4cf:	mov    WORD PTR [eax],es
  41b4d1:	sbb    eax,0x1af34f2a
  41b4d6:	rcr    DWORD PTR [ebp+0x7f],cl
  41b4d9:	push   ebx
  41b4da:	dec    ebp
  41b4db:	in     al,dx
  41b4dc:	mov    cl,BYTE PTR [ecx+0x61029708]
  41b4e2:	xor    ch,BYTE PTR [edx]
  41b4e4:	cs or  eax,0x1f3197e5
  41b4ea:	cmp    al,0xdf
  41b4ec:	xor    edi,DWORD PTR [esi+0x8]
  41b4ef:	cs dec esi
  41b4f1:	mov    WORD PTR ds:0x2086d81d,cs
  41b4f7:	test   DWORD PTR [ebx-0x6c],0x8f4f267b
  41b4fe:	rcl    DWORD PTR [ebx-0x477d53f5],1
  41b504:	add    edx,DWORD PTR [ebp+eax*4+0x4ca97df6]
  41b50b:	int    0x84
  41b50d:	cs add al,0xe7
  41b510:	dec    edi
  41b511:	je     0x41b496
  41b513:	sub    ebx,eax
  41b515:	dec    ebx
  41b516:	data16 jecxz 0x41b4ef
  41b519:	push   es
  41b51a:	add    eax,0x4b890841
  41b51f:	(bad)  
  41b521:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b522:	adc    bh,dl
  41b524:	inc    ebx
  41b525:	xchg   esp,eax
  41b526:	jnp    0x41b4ce
  41b528:	push   ecx
  41b529:	pushf  
  41b52a:	sub    al,BYTE PTR [eax]
  41b52c:	rol    DWORD PTR [ebp-0x7851022f],0xca
  41b533:	cld    
  41b534:	sbb    al,0x0
  41b536:	mov    bl,dl
  41b538:	adc    cl,BYTE PTR [ecx+0x46]
  41b53b:	adc    DWORD PTR [eax],eax
  41b53d:	bound  ecx,QWORD PTR [edx]
  41b53f:	xor    eax,edi
  41b541:	stos   DWORD PTR es:[edi],eax
  41b542:	nop
  41b543:	add    BYTE PTR [ebx+0x72],dl
  41b546:	sub    al,0x80
  41b548:	jmp    0x41b527
  41b54a:	sub    DWORD PTR [ebx],0x667b7631
  41b550:	add    al,0x6e
  41b552:	and    eax,0x97a90f09
  41b557:	xchg   edi,ebp
  41b559:	push   0xffffffe0
  41b55b:	sar    DWORD PTR [eax],cl
  41b55d:	pop    ecx
  41b55e:	fs or  eax,0x40e3a48b
  41b564:	push   esi
  41b565:	cs push ebp
  41b567:	fcomp  QWORD PTR [ebx]
  41b569:	jmp    0xdd3eb605
  41b56e:	xchg   DWORD PTR [ecx],eax
  41b570:	inc    eax
  41b571:	jmp    0xaccaa264
  41b576:	(bad)  
  41b577:	pop    ss
  41b578:	inc    ebx
  41b579:	icebp  
  41b57a:	rol    DWORD PTR fs:[ebp+0x64],1
  41b57e:	push   ebp
  41b57f:	fmul   QWORD PTR [edi-0x49]
  41b582:	jmp    0x8300:0x57d833ed
  41b589:	sub    DWORD PTR [ebp-0x18],eax
  41b58c:	push   ebp
  41b58d:	mul    BYTE PTR [eax+esi*2-0x786856ef]
  41b594:	les    eax,FWORD PTR [esi+0x62]
  41b597:	mov    ecx,0x9700e5c1
  41b59c:	xor    ecx,DWORD PTR [ecx+0x17dc16c5]
  41b5a2:	cmp    cl,BYTE PTR ds:0x9d00f843
  41b5a8:	repz (bad) 
  41b5aa:	push   ebx
  41b5ab:	(bad)  
  41b5ac:	and    al,0xfb
  41b5ae:	adc    eax,0x3cd421
  41b5b3:	jge    0x41b56c
  41b5b5:	adc    DWORD PTR [eax],ebp
  41b5b7:	pop    ebp
  41b5b8:	inc    esp
  41b5b9:	add    BYTE PTR [ebp-0x72e9cf03],al
  41b5bf:	js     0x41b56d
  41b5c1:	dec    esp
  41b5c2:	push   0x4d
  41b5c4:	pop    edx
  41b5c5:	sti    
  41b5c6:	call   FWORD PTR [eax+0x24]
  41b5c9:	adc    BYTE PTR [eax+0x3d],al
  41b5cc:	cmp    DWORD PTR [ebp+esi*2-0x14400dc7],0xec417981
  41b5d7:	fnsave [esi+0x40ba0871]
  41b5dd:	call   0x45b2e3
  41b5e2:	push   ebx
  41b5e3:	mov    edx,0xed02f440
  41b5e8:	add    eax,DWORD PTR [eax]
  41b5ea:	dec    eax
  41b5ec:	jmp    0x41b5fd
  41b5ee:	inc    eax
  41b5ef:	std    
  41b5f0:	cmp    BYTE PTR [esp+esi*2+0x534f138c],0x60
  41b5f8:	inc    eax
  41b5f9:	call   0x71f8c44e
  41b5fe:	clc    
  41b5ff:	add    BYTE PTR [edx-0x12efc730],ah
  41b605:	add    eax,DWORD PTR [ecx-0x4f8c640]
  41b60b:	adc    eax,0x3cd4b5
  41b610:	cmp    bl,al
  41b612:	jno    0x41b616
  41b614:	pop    esi
  41b615:	add    al,0xfb
  41b617:	jne    0x41b5ce
  41b619:	mov    ch,0x11
  41b61b:	mov    al,ds:0x8a00438f
  41b620:	xchg   esp,eax
  41b621:	call   0x5300:0xe556c736
  41b628:	lgs    esi,FWORD PTR [eax]
  41b62b:	dec    edi
  41b62c:	(bad)  
  41b62d:	pop    esp
  41b62e:	cmp    eax,0xc43c4f8
  41b633:	push   0x63
  41b635:	retf   0xfcb7
  41b638:	cmp    DWORD PTR [ecx+0x64943ff0],0x4d100cc4
  41b642:	add    al,0x0
  41b644:	xchg   esp,eax
  41b645:	push   ss
  41b646:	xchg   DWORD PTR [edx],edi
  41b648:	test   BYTE PTR [ecx+0x24210040],ch
  41b64e:	fmul   DWORD PTR [edi-0x39]
  41b651:	jmp    0xfcd8:0xd4231769
  41b658:	inc    ebx
  41b659:	pop    esp
  41b65a:	les    esi,FWORD PTR [edx-0x7a]
  41b65d:	cs in  eax,dx
  41b65f:	pop    ss
  41b660:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b661:	cdq    
  41b662:	add    BYTE PTR [ecx+0x4db2fc00],al
  41b668:	gs setl ah
  41b66c:	cmp    bh,dl
  41b66e:	xchg   esp,eax
  41b66f:	pusha  
  41b670:	push   esi
  41b671:	cld    
  41b672:	sbb    ebx,edx
  41b674:	std    
  41b675:	jecxz  0x41b6d8
  41b677:	aam    0x38
  41b679:	out    0x6c,eax
  41b67b:	das    
  41b67c:	mov    ebx,DWORD PTR [ecx-0x13]
  41b67f:	xor    edi,ebp
  41b681:	inc    ecx
  41b682:	cmc    
  41b683:	sub    eax,0x4cfe9d6a
  41b688:	clc    
  41b689:	mov    ebx,0x28bf7ced
  41b68e:	ret    
  41b68f:	shl    DWORD PTR ds:0x1024abab,cl
  41b695:	push   esp
  41b696:	fst    DWORD PTR [edi]
  41b698:	shl    DWORD PTR [eax],0x0
  41b69b:	adc    eax,0xaa08938a
  41b6a0:	dec    ebp
  41b6a1:	mov    esp,0xdbc39cfd
  41b6a6:	xor    dh,cl
  41b6a8:	or     eax,0xf40af479
  41b6ad:	mov    bl,0x0
  41b6af:	add    al,cl
  41b6b1:	out    0xf5,eax
  41b6b3:	popa   
  41b6b4:	add    ebx,DWORD PTR [edi-0x6bfbf900]
  41b6ba:	push   ecx
  41b6bb:	jmp    0x41b64d
  41b6bd:	push   edx
  41b6be:	fcomi  st,st(0)
  41b6c0:	push   ss
  41b6c1:	xchg   esp,eax
  41b6c2:	adc    bh,ah
  41b6c4:	add    ebx,DWORD PTR [esi+0xc066a9]
  41b6ca:	xchg   esp,eax
  41b6cb:	ss (bad) 
  41b6cd:	jbe    0x41b6ff
  41b6cf:	iret   
  41b6d0:	jge    0x41b707
  41b6d2:	sub    DWORD PTR [edi+ebp*2-0x2c],edx
  41b6d6:	xchg   BYTE PTR [eax+0x2d9443d8],ah
  41b6dc:	jno    0x41b69e
  41b6de:	ins    BYTE PTR es:[edi],dx
  41b6df:	mov    bh,0x29
  41b6e1:	cs sbb eax,0x7680b7dd
  41b6e7:	int3   
  41b6e8:	out    0x6b,al
  41b6ea:	in     al,0x53
  41b6ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b6ed:	add    esi,ecx
  41b6ef:	repz push ss
  41b6f1:	icebp  
  41b6f2:	stos   DWORD PTR es:[edi],eax
  41b6f3:	add    BYTE PTR [ebx+eax*8+0x67],ch
  41b6f7:	and    BYTE PTR [edi-0x18bf9f85],bh
  41b6fd:	xor    edx,ecx
  41b6ff:	repz pop edx
  41b701:	icebp  
  41b702:	mov    eax,DWORD PTR [eax]
  41b704:	ins    BYTE PTR es:[edi],dx
  41b705:	ret    
  41b706:	inc    edi
  41b707:	lock pop ebx
  41b709:	inc    esi
  41b70a:	mov    eax,0xb0d4912f
  41b70f:	mov    al,0x63
  41b711:	ret    
  41b712:	es add al,0x0
  41b715:	mov    ebx,0x6ac0c6d7
  41b71a:	inc    edx
  41b71b:	int3   
  41b71c:	push   ebp
  41b71e:	or     al,0x8e
  41b720:	(bad)  
  41b721:	stos   BYTE PTR es:[edi],al
  41b722:	int    0x77
  41b724:	jmp    0x41b790
  41b726:	je     0x41b75d
  41b728:	push   esi
  41b729:	sbb    bh,BYTE PTR [ecx]
  41b72b:	adc    dh,dh
  41b72d:	dec    edi
  41b72e:	add    cl,dh
  41b730:	cmp    bh,ah
  41b732:	add    bl,BYTE PTR [esi+0x52]
  41b735:	sbb    al,BYTE PTR [ebx-0x34]
  41b738:	jns    0x41b77c
  41b73a:	sbb    DWORD PTR [esi-0x540302d0],0x12e93ff6
  41b744:	ror    DWORD PTR [ebx],0xae
  41b747:	int    0x98
  41b749:	inc    ebx
  41b74a:	jmp    0x2cccb7e6
  41b74f:	adc    BYTE PTR [edx+0x4a],bh
  41b752:	jge    0x41b6ed
  41b754:	push   ecx
  41b755:	or     ch,bh
  41b757:	call   0xec32:0x14e14a77
  41b75e:	mov    ebx,0xed72cbc7
  41b763:	int    0x58
  41b765:	add    cl,ch
  41b767:	xchg   edi,eax
  41b768:	add    al,0x56
  41b76a:	mov    bh,0xbd
  41b76c:	cmp    eax,0x24ed4656
  41b771:	pop    gs
  41b773:	xchg   edi,eax
  41b774:	cmp    DWORD PTR [edi+0x731581bd],0x69f043d9
  41b77e:	stc    
  41b77f:	adc    al,0x42
  41b781:	in     al,dx
  41b782:	mov    ecx,0x11051e6
  41b787:	jns    0x41b754
  41b789:	std    
  41b78a:	push   cs
  41b78b:	(bad)  
  41b78d:	cld    
  41b78e:	add    BYTE PTR [eax],dh
  41b790:	mov    cl,0x87
  41b792:	xor    eax,0x3cd65d00
  41b797:	add    BYTE PTR [edx-0x668a047a],ch
  41b79d:	mov    cl,0xd2
  41b79f:	mov    eax,eax
  41b7a1:	test   al,0xe7
  41b7a3:	add    ch,BYTE PTR [esi+0x2fc95ac4]
  41b7a9:	int3   
  41b7aa:	cld    
  41b7ab:	push   esp
  41b7ac:	imul   BYTE PTR [ebx-0x7eccccae]
  41b7b2:	inc    ecx
  41b7b3:	or     al,0x94
  41b7b5:	sub    DWORD PTR [esi*2+0x871af3e],ecx
  41b7bc:	aad    0x6c
  41b7be:	jae    0x41b800
  41b7c0:	cmp    eax,0x7e0fe810
  41b7c5:	scas   eax,DWORD PTR es:[edi]
  41b7c6:	sti    
  41b7c7:	xor    ecx,0xffffffcb
  41b7ca:	out    0x14,eax
  41b7cc:	or     ch,BYTE PTR [ecx]
  41b7ce:	or     al,0xff
  41b7d0:	xor    al,cl
  41b7d2:	fs mov ah,0x22
  41b7d5:	inc    eax
  41b7d6:	add    BYTE PTR [eax+0x15],dl
  41b7d9:	mov    ebp,0x82aaff3e
  41b7de:	rcl    BYTE PTR [eax],0xb6
  41b7e1:	mov    dh,0x7a
  41b7e3:	sbb    ebp,DWORD PTR [edx+0x28]
  41b7e6:	sbb    BYTE PTR [ebx+0x75fbd430],cl
  41b7ec:	std    
  41b7ed:	scas   al,BYTE PTR es:[edi]
  41b7ee:	jno    0x41b7fc
  41b7f0:	inc    ebp
  41b7f1:	out    dx,eax
  41b7f2:	cli    
  41b7f3:	jmp    FWORD PTR [edx+0xc71ae]
  41b7f9:	jbe    0x41b7aa
  41b7fb:	in     al,0x73
  41b7fd:	stos   DWORD PTR es:[edi],eax
  41b7fe:	mov    cl,0xfb
  41b800:	mov    eax,DWORD PTR [ebx-0x3e3da6ef]
  41b806:	call   DWORD PTR [eax-0x75]
  41b809:	xchg   esp,eax
  41b80a:	add    eax,0x922ceb86
  41b80f:	adc    eax,0x5a1d3cfd
  41b814:	inc    eax
  41b815:	xchg   esp,eax
  41b816:	push   eax
  41b817:	push   eax
  41b818:	lock mov ds:0x540eecac,eax
  41b81e:	fnstcw WORD PTR [ebx+0x42]
  41b821:	mov    BYTE PTR [esi],bl
  41b823:	(bad)  
  41b824:	or     al,0x10
  41b826:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b827:	add    eax,DWORD PTR [eax]
  41b829:	xchg   esp,eax
  41b82a:	push   es
  41b82b:	cmp    cl,BYTE PTR [ecx+0x3ff57dc1]
  41b831:	xchg   esp,eax
  41b832:	xor    DWORD PTR [esp+esi*2-0x2cf262c],esi
  41b839:	dec    edx
  41b83a:	inc    ecx
  41b83b:	fdiv   QWORD PTR [esp+edx*8-0x27]
  41b83f:	iret   
  41b840:	jb     0x41b88a
  41b842:	dec    esi
  41b843:	lods   al,BYTE PTR ds:[esi]
  41b844:	cld    
  41b845:	bound  edx,QWORD PTR [eax+0x45]
  41b848:	in     al,dx
  41b849:	jg     0x41b7dd
  41b84b:	inc    BYTE PTR [ebx+0xd927]
  41b851:	outs   dx,DWORD PTR ds:[esi]
  41b852:	call   0x0:0xd91f83fe
  41b859:	retf   
  41b85a:	push   edx
  41b85b:	push   ebp
  41b85c:	or     BYTE PTR [eax],al
  41b85e:	or     DWORD PTR [esp+ecx*8],esp
  41b861:	dec    edi
  41b862:	sbb    eax,0xe7fcc8e4
  41b867:	arpl   sp,ax
  41b869:	jb     0x41b802
  41b86b:	pusha  
  41b86c:	dec    ebp
  41b86d:	clc    
  41b86e:	outs   dx,BYTE PTR ds:[esi]
  41b86f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b870:	cs xor esp,edx
  41b873:	push   0x66
  41b875:	xchg   DWORD PTR [ecx+0xd],edx
  41b878:	jge    0x41b8bc
  41b87a:	cld    
  41b87b:	imul   esi,DWORD PTR [eax],0xf6d581fd
  41b881:	aas    
  41b882:	xchg   esp,eax
  41b883:	add    BYTE PTR [edx+0x3f],dh
  41b886:	cwde   
  41b887:	jg     0x41b8ab
  41b889:	add    BYTE PTR [ebx],bl
  41b88b:	push   ebp
  41b88c:	outs   dx,DWORD PTR ds:[esi]
  41b88d:	jnp    0x41b8cd
  41b88f:	mov    al,ds:0xff26c0d1
  41b894:	jae    0x41b8d5
  41b896:	test   al,0x7c
  41b898:	mov    ds:0xab7d53af,eax
  41b89d:	imul   ecx,DWORD PTR [ebx+0x77],0xffffffa3
  41b8a1:	retf   
  41b8a2:	call   0xaced96d7
  41b8a7:	rol    BYTE PTR [ebx],0x4
  41b8aa:	cwde   
  41b8ab:	add    bh,ah
  41b8ad:	(bad)  
  41b8ae:	jnp    0x41b87a
  41b8b0:	out    0x7,al
  41b8b2:	les    esi,FWORD PTR [ecx]
  41b8b4:	push   ds
  41b8b5:	cmp    ebx,ebx
  41b8b7:	xor    DWORD PTR [esi-0x243673aa],edi
  41b8bd:	pop    ss
  41b8be:	test   BYTE PTR [eax-0x19],al
  41b8c1:	xchg   BYTE PTR [eax],al
  41b8c3:	adc    edx,DWORD PTR [ebp-0x3]
  41b8c6:	rol    dh,1
  41b8c8:	loopne 0x41b93b
  41b8ca:	push   ss
  41b8cb:	hlt    
  41b8cc:	out    dx,al
  41b8cd:	es add al,0x39
  41b8d0:	mov    bl,0x8d
  41b8d2:	push   esi
  41b8d3:	push   eax
  41b8d4:	retf   0x7c9c
  41b8d7:	(bad)  
  41b8d8:	in     al,0x6f
  41b8da:	inc    esi
  41b8db:	and    al,0x8
  41b8dd:	hlt    
  41b8de:	retf   
  41b8df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b8e0:	add    ch,BYTE PTR [esi+0x56]
  41b8e3:	or     al,0xca
  41b8e5:	mov    ebx,0x535408df
  41b8ea:	shl    BYTE PTR [esi-0x6bbc06d4],1
  41b8f0:	sub    dh,BYTE PTR [edx-0x5a2fa984]
  41b8f6:	mov    edx,0x7ce6f8d5
  41b8fb:	pop    ecx
  41b8fc:	add    al,0x0
  41b8fe:	sahf   
  41b8ff:	pop    eax
  41b900:	push   es
  41b901:	mov    al,ds:0x830057db
  41b906:	sub    DWORD PTR [ebx-0x1],esp
  41b909:	dec    edi
  41b90a:	push   ds
  41b90b:	cld    
  41b90c:	js     0x41b913
  41b90e:	ins    BYTE PTR es:[edi],dx
  41b90f:	xlat   BYTE PTR ds:[ebx]
  41b910:	dec    ebp
  41b911:	add    DWORD PTR [ecx-0x26964b3c],edi
  41b917:	ins    DWORD PTR es:[edi],dx
  41b918:	fmul   DWORD PTR [edi-0x1]
  41b91b:	(bad)  
  41b91c:	int3   
  41b91d:	pop    esp
  41b91e:	sub    ah,BYTE PTR [edx+0x77]
  41b921:	jmp    0x41b97f
  41b923:	(bad)  
  41b925:	dec    edi
  41b926:	push   ebx
  41b927:	add    BYTE PTR [eax+0x52f972cb],dl
  41b92d:	dec    esi
  41b92e:	or     al,0xd6
  41b930:	(bad)  
  41b932:	imul   ebp,ecx,0xdb4fee62
  41b938:	xlat   BYTE PTR ds:[ebx]
  41b939:	add    BYTE PTR [ebx+0x4ffcbca9],al
  41b93f:	mov    dh,0x5d
  41b941:	imul   edx,DWORD PTR [ecx],0x42779829
  41b947:	stc    
  41b948:	outs   dx,BYTE PTR ds:[esi]
  41b949:	push   DWORD PTR [eax]
  41b94b:	test   eax,0xe90bbe85
  41b950:	jl     0x41b9c9
  41b952:	jmp    0x41b9bc
  41b954:	xor    al,0x59
  41b956:	add    ecx,ebp
  41b958:	xchg   edi,eax
  41b959:	xor    dl,BYTE PTR [ebp+0x6c]
  41b95c:	or     eax,0x4b76fdc5
  41b961:	cmp    ebp,edi
  41b963:	hlt    
  41b964:	bswap  esp
  41b966:	adc    dl,BYTE PTR [ebp+0x7]
  41b969:	or     DWORD PTR [eax],eax
  41b96b:	ins    BYTE PTR es:[edi],dx
  41b96c:	or     eax,0xcb56fdc5
  41b971:	cmp    BYTE PTR [eax-0x3f],dl
  41b974:	call   DWORD PTR [eax+0x40]
  41b977:	add    ch,bh
  41b979:	jns    0x41b9e3
  41b97b:	add    ch,ch
  41b97d:	cld    
  41b97e:	mov    BYTE PTR [ebp-0x44fc3],dh
  41b984:	push   ebp
  41b985:	fstp   TBYTE PTR ds:0xc07d72ff
  41b98b:	or     al,0x0
  41b98d:	add    bl,BYTE PTR [ebx]
  41b98f:	add    eax,0x8589d123
  41b995:	sub    eax,0xdfffbb0
  41b99a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b99b:	or     al,BYTE PTR [eax]
  41b99d:	lods   eax,DWORD PTR ds:[esi]
  41b99e:	cld    
  41b99f:	add    eax,0x19
  41b9a2:	add    DWORD PTR [eax+0x32029601],esi
  41b9a8:	rol    BYTE PTR [edx+eax*8+0x0],0x0
  41b9ad:	enter  0xe94b,0x81
  41b9b1:	push   ecx
  41b9b2:	sub    BYTE PTR [ecx],al
  41b9b4:	add    BYTE PTR [ebp+0x13],bh
  41b9b7:	push   ebx
  41b9b8:	(bad)  
  41b9b9:	clc    
  41b9ba:	outs   dx,DWORD PTR ds:[esi]
  41b9bb:	stc    
  41b9bc:	jmp    DWORD PTR [edx]
  41b9be:	adc    al,0x68
  41b9c0:	cmp    al,0xa5
  41b9c2:	cmp    al,0x0
  41b9c4:	call   0x3e7509
  41b9c9:	mov    ecx,0x12840bc3
  41b9ce:	add    al,0x0
  41b9d0:	add    BYTE PTR [eax+0x22fcac78],dh
  41b9d6:	mov    bh,0x4c
  41b9d8:	lea    edi,[eax-0x5d000691]
  41b9de:	adc    edi,ebx
  41b9e0:	adc    eax,0x3cd311
  41b9e5:	jo     0x41ba5f
  41b9e7:	lods   al,BYTE PTR ds:[esi]
  41b9e8:	cld    
  41b9e9:	jb     0x41b9a1
  41b9eb:	dec    esp
  41b9ec:	(bad)  
  41b9ed:	call   0x8743bd
  41b9f2:	xchg   esp,eax
  41b9f3:	loope  0x41ba4d
  41b9f5:	inc    esp
  41b9f6:	ins    BYTE PTR es:[edi],dx
  41b9f7:	cdq    
  41b9f8:	add    BYTE PTR [eax-0x4],dl
  41b9fb:	popf   
  41b9fc:	inc    ebx
  41b9fd:	std    
  41b9fe:	jecxz  0x41ba5a
  41ba00:	lds    ecx,FWORD PTR [edi]
  41ba02:	pop    ss
  41ba03:	adc    cl,dh
  41ba05:	or     al,0x18
  41ba07:	add    DWORD PTR [eax],0x0
  41ba0a:	xchg   esp,eax
  41ba0b:	mov    ebp,ecx
  41ba0d:	jb     0x41b99b
  41ba0f:	push   esp
  41ba10:	mov    BYTE PTR [ebx+0x4fcdeeb9],dh
  41ba16:	mov    esp,0xabffcc1c
  41ba1b:	(bad)  
  41ba1c:	push   edi
  41ba1d:	or     BYTE PTR [esi],cl
  41ba1f:	and    bl,cl
  41ba21:	push   edi
  41ba22:	cwde   
  41ba23:	iret   
  41ba24:	retf   0x6f83
  41ba27:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ba28:	test   BYTE PTR [esi-0x74ff266c],al
  41ba2e:	sbb    DWORD PTR [ebp-0x34],ebp
  41ba31:	cld    
  41ba32:	jnp    0x41ba3d
  41ba34:	pop    esp
  41ba35:	fs in  al,dx
  41ba37:	sbb    DWORD PTR [ecx+edi*4],eax
  41ba3a:	call   0x7844:0x110000d8
  41ba41:	stc    
  41ba42:	pop    ebx
  41ba43:	mov    ds,ebx
  41ba45:	push   cs
  41ba46:	aam    0x96
  41ba48:	retf   0xed56
  41ba4b:	pop    edx
  41ba4c:	int3   
  41ba4d:	cld    
  41ba4e:	ret    0x5bff
  41ba51:	add    al,0x95
  41ba53:	fld    DWORD PTR [eax]
  41ba55:	mov    eax,DWORD PTR [eax]
  41ba57:	sbb    DWORD PTR ds:0xe92bfccd,ebp
  41ba5d:	pop    ebx
  41ba5e:	je     0x41b9fc
  41ba60:	sbb    DWORD PTR [edi*8+0x3ff1b581],eax
  41ba67:	xchg   esp,eax
  41ba68:	and    DWORD PTR ds:0xe7009502,ecx
  41ba6e:	add    ecx,DWORD PTR [ecx-0x3ab82ec1]
  41ba74:	(bad)  
  41ba75:	arpl   WORD PTR [edi+0x30],ax
  41ba78:	das    
  41ba79:	mov    bh,0xcc
  41ba7b:	xchg   BYTE PTR [ebx*8+0x22839443],cl
  41ba82:	add    BYTE PTR [ebp+0x567accc0],ah
  41ba88:	aam    0x95
  41ba8a:	jle    0x41bae2
  41ba8c:	test   BYTE PTR [esi+0x727d0f34],dh
  41ba92:	retf   0xc6b8
  41ba95:	mov    dh,0x7e
  41ba97:	push   ss
  41ba98:	mov    WORD PTR [ebx],cs
  41ba9a:	int    0xa8
  41ba9c:	das    
  41ba9d:	cs inc edi
  41ba9f:	loopne 0x41badc
  41baa1:	out    0x3,eax
  41baa3:	xchg   esp,eax
  41baa4:	mov    edi,0xc692dbab
  41baa9:	out    0x3,al
  41baab:	jl     0x41baa6
  41baad:	jecxz  0x41ba7b
  41baaf:	or     dh,0xbe
  41bab2:	call   0xd8f088f2
  41bab7:	mov    eax,ds:0x976373
  41babc:	outs   dx,BYTE PTR ds:[esi]
  41babd:	mov    ch,0x33
  41bac0:	ins    BYTE PTR es:[edi],dx
  41bac1:	addr16 inc ebp
  41bac3:	int    0x58
  41bac5:	adc    esp,DWORD PTR [edi-0x574812d4]
  41bacb:	pop    es
  41bacc:	xchg   esp,eax
  41bacd:	jns    0x41bafb
  41bacf:	add    BYTE PTR [edi],dl
  41bad1:	rcl    DWORD PTR [edx],0x5
  41bad4:	in     al,0xc5
  41bad6:	sti    
  41bad7:	aas    
  41bad8:	test   BYTE PTR [eax-0x19],al
  41badb:	js     0x41bb2e
  41badd:	fadd   DWORD PTR [eax-0x15]
  41bae0:	and    dh,al
  41bae2:	adc    al,0x79
  41bae4:	sub    ebx,ecx
  41bae6:	push   DWORD PTR [ecx+0x65fcc4ff]
  41baec:	xlat   BYTE PTR ds:[ebx]
  41baed:	push   ecx
  41baee:	cmp    DWORD PTR [esi+0x720c4382],edi
  41baf4:	nop
  41baf5:	cmp    DWORD PTR [edi-0x2cf6723],0x3ff0abf4
  41baff:	jmp    0xed660518
  41bb04:	xchg   edi,eax
  41bb05:	dec    esp
  41bb06:	and    BYTE PTR [esi-0x1695ff93],bl
  41bb0c:	outs   dx,DWORD PTR ds:[esi]
  41bb0d:	in     al,dx
  41bb0e:	(bad)  
  41bb0f:	call   0xc5b57eab
  41bb14:	stos   DWORD PTR es:[edi],eax
  41bb15:	les    esi,FWORD PTR ds:0x103daa16
  41bb1b:	test   eax,0x7cbf8197
  41bb20:	add    BYTE PTR [ecx-0x2844fb1b],bl
  41bb26:	fadd   DWORD PTR [ecx]
  41bb28:	cmp    DWORD PTR [esi-0x6cd4a1dd],edx
  41bb2e:	add    BYTE PTR [ebx+0x72],dl
  41bb31:	pop    esp
  41bb32:	ss dec edi
  41bb34:	jb     0x41bb06
  41bb36:	hlt    
  41bb37:	les    ebp,FWORD PTR [esp+ebx*2]
  41bb3a:	add    DWORD PTR [eax],eax
  41bb3c:	jmp    0x3e013cd8
  41bb41:	mov    ah,0x5a
  41bb43:	add    BYTE PTR [ebp+ebx*4-0x3c],ch
  41bb47:	dec    esi
  41bb48:	fs (bad) 
  41bb4a:	enter  0x434e,0x49
  41bb4e:	xor    eax,0xf083fcfd
  41bb53:	aas    
  41bb54:	jmp    0xe4b5406d
  41bb59:	sbb    cl,BYTE PTR [edx-0x4]
  41bb5c:	in     eax,0xc4
  41bb5e:	sti    
  41bb5f:	mov    BYTE PTR [eax],al
  41bb61:	jo     0x41bb17
  41bb63:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bb64:	pop    es
  41bb65:	and    ebx,edi
  41bb67:	shl    BYTE PTR cs:[ebp+edi*2-0x22],0x7
  41bb6d:	(bad)  
  41bb6e:	mov    edx,0x83eef8bd
  41bb73:	mov    edi,0x4fa88655
  41bb78:	mov    esp,DWORD PTR [ebp+0x6ae8c445]
  41bb7e:	mov    ecx,0x9496fffb
  41bb83:	jo     0x41bb89
  41bb85:	add    bh,bl
  41bb87:	shl    bh,0x56
  41bb8a:	xor    ecx,DWORD PTR [esi]
  41bb8c:	sti    
  41bb8d:	jne    0x41bb44
  41bb8f:	test   al,0x5a
  41bb91:	sti    
  41bb92:	jnp    0x41bb4d
  41bb94:	xchg   eax,esi
  41bb96:	xor    BYTE PTR [edx-0x3f30fb8f],dh
  41bb9c:	out    0x41,eax
  41bb9e:	dec    eax
  41bb9f:	inc    eax
  41bba0:	push   ds
  41bba1:	jmp    DWORD PTR [esi]
  41bba3:	mov    dh,BYTE PTR [edi]
  41bba5:	lock push ds
  41bba7:	aad    0x86
  41bba9:	adc    ebp,esi
  41bbab:	adc    DWORD PTR [edi],eax
  41bbad:	mov    ch,BYTE PTR [ebp+0x48]
  41bbb0:	push   cs
  41bbb1:	mov    al,al
  41bbb3:	ret    
  41bbb4:	cmp    eax,0x37087d88
  41bbb9:	enter  0xa8cf,0x66
  41bbbd:	add    bh,dl
  41bbbf:	cld    
  41bbc0:	cli    
  41bbc1:	ja     0x41bc2c
  41bbc3:	or     edx,DWORD PTR [esi-0x1]
  41bbc6:	mov    ds:0x7d15fb00,al
  41bbcb:	int3   
  41bbcc:	cmp    al,0x0
  41bbce:	call   0x5739b6ea
  41bbd3:	(bad)  
  41bbd4:	xlat   BYTE PTR ds:[ebx]
  41bbd5:	push   esi
  41bbd6:	sbb    edi,DWORD PTR [ebx+0x6f94a7e4]
  41bbdc:	(bad)  
  41bbdd:	cld    
  41bbde:	push   ds
  41bbdf:	xchg   edi,eax
  41bbe0:	es pop ecx
  41bbe2:	rcl    DWORD PTR [edi+0x4ec0fffc],0xd5
  41bbe9:	jle    0x41bbeb
  41bbeb:	add    dl,dh
  41bbed:	add    al,BYTE PTR [eax]
  41bbef:	xchg   esp,eax
  41bbf0:	out    0x14,al
  41bbf2:	fldcw  WORD PTR [edx+0x21]
  41bbf5:	daa    
  41bbf6:	adc    al,0x80
  41bbf8:	iret   
  41bbf9:	leave  
  41bbfa:	jb     0x41bb80
  41bbfc:	inc    ecx
  41bbfd:	fdiv   DWORD PTR ds:0x6de32eb
  41bc03:	inc    esp
  41bc04:	cmp    dl,BYTE PTR [eax+0x10]
  41bc07:	in     al,dx
  41bc08:	test   esp,ecx
  41bc0a:	cld    
  41bc0b:	rcr    DWORD PTR [esi-0x2f],cl
  41bc0e:	cmp    bh,al
  41bc10:	lea    esp,[ecx+ecx*4]
  41bc13:	pop    ecx
  41bc14:	int    0x31
  41bc16:	mov    edi,ecx
  41bc18:	xor    edi,eax
  41bc1a:	cld    
  41bc1b:	mov    bl,0x1
  41bc1d:	pop    esp
  41bc1e:	dec    edi
  41bc1f:	xchg   esp,eax
  41bc20:	fstp   DWORD PTR [edx+0x3]
  41bc23:	adc    DWORD PTR [ebp-0x30],edi
  41bc26:	push   edi
  41bc27:	lods   al,BYTE PTR ds:[esi]
  41bc28:	arpl   WORD PTR [ebx],si
  41bc2a:	add    BYTE PTR [ebx+eiz*2-0x2cc37d89],dl
  41bc31:	(bad)  
  41bc32:	cld    
  41bc33:	in     al,0x4e
  41bc35:	mov    edi,0xf01c094f
  41bc3a:	dec    edi
  41bc3b:	jl     0x41bc32
  41bc3d:	push   es
  41bc3e:	std    
  41bc3f:	imul   edx,DWORD PTR [esi-0x40],0xf
  41bc43:	ret    
  41bc44:	push   esi
  41bc45:	int3   
  41bc46:	cld    
  41bc47:	loopne 0x41bbeb
  41bc49:	(bad)  
  41bc4a:	jb     0x41bbf4
  41bc4c:	pop    esi
  41bc4d:	cmp    eax,0x92e70008
  41bc52:	push   ebx
  41bc53:	or     BYTE PTR [ebx+0x0],al
  41bc56:	cld    
  41bc57:	daa    
  41bc58:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bc59:	inc    eax
  41bc5a:	out    0x84,eax
  41bc5c:	sub    eax,DWORD PTR [ecx]
  41bc5e:	sbb    al,0x6
  41bc60:	push   ds
  41bc61:	test   al,0x8d
  41bc63:	dec    edi
  41bc64:	mov    al,bl
  41bc66:	in     al,0xcd
  41bc68:	sbb    ebx,eax
  41bc6a:	adc    al,0xdc
  41bc6c:	stos   DWORD PTR es:[edi],eax
  41bc6d:	(bad)  
  41bc6e:	je     0x41bc39
  41bc70:	imul   esi,DWORD PTR [esi-0x57],0xf6bddb2d
  41bc77:	add    esp,DWORD PTR [edi+0x77]
  41bc7a:	dec    edx
  41bc7b:	test   edi,edi
  41bc7d:	xor    ebx,DWORD PTR [ebp+0x3f]
  41bc80:	pushf  
  41bc81:	lock mov ecx,0xd9487e7c
  41bc87:	inc    ebx
  41bc88:	xchg   esp,eax
  41bc89:	sub    esi,DWORD PTR [ebx-0x1cbdeaa8]
  41bc8f:	adc    eax,0x2355942
  41bc94:	ret    
  41bc95:	dec    esi
  41bc96:	mov    ebx,DWORD PTR [ebp-0x6a]
  41bc99:	jne    0x41bc36
  41bc9b:	ret    
  41bc9c:	dec    ebx
  41bc9d:	fadd   DWORD PTR [eax]
  41bc9f:	xor    al,0x94
  41bca1:	add    BYTE PTR [esi],cl
  41bca3:	push   edx
  41bca4:	nop
  41bca5:	ja     0x41bcd4
  41bca7:	leave  
  41bca8:	and    eax,edi
  41bcaa:	xchg   esi,eax
  41bcab:	enter  0x3164,0x81
  41bcaf:	sti    
  41bcb0:	jecxz  0x41bd27
  41bcb2:	sbb    eax,0x5dd100dc
  41bcb7:	out    0x3,eax
  41bcb9:	adc    cl,al
  41bcbb:	push   edx
  41bcbc:	or     esi,edi
  41bcbe:	std    
  41bcbf:	arpl   WORD PTR [esi+0x60],ax
  41bcc2:	sub    DWORD PTR [edi-0x18ff2c42],edi
  41bcc8:	jbe    0x41bca0
  41bcca:	clc    
  41bccb:	push   ss
  41bccc:	leave  
  41bccd:	leave  
  41bcce:	sbb    al,0x0
  41bcd0:	rcl    ecx,0xd3
  41bcd3:	cld    
  41bcd4:	scas   al,BYTE PTR es:[edi]
  41bcd5:	ret    0x7381
  41bcd8:	or     dl,BYTE PTR [ecx]
  41bcda:	inc    edi
  41bcdb:	or     cl,ch
  41bcdd:	lds    esp,FWORD PTR ds:0x7767e86a
  41bce3:	inc    edx
  41bce4:	loope  0x41bca7
  41bce6:	call   DWORD PTR [ebp-0x6f]
  41bce9:	dec    ebp
  41bcea:	(bad)  
  41bceb:	cld    
  41bcec:	jle    0x41bc7e
  41bcee:	cmp    edx,DWORD PTR [esp+ebp*2]
  41bcf1:	xlat   BYTE PTR ds:[ebx]
  41bcf2:	dec    ebp
  41bcf3:	dec    eax
  41bcf4:	add    ebx,DWORD PTR [eax+0x59f975c3]
  41bcfa:	cld    
  41bcfb:	call   0x1885d520
  41bd00:	jmp    0xe837c65f
  41bd05:	xchg   esi,eax
  41bd06:	dec    esp
  41bd07:	xor    al,0x74
  41bd09:	push   edx
  41bd0a:	mov    WORD PTR [eax],?
  41bd0c:	sub    edi,ebp
  41bd0e:	inc    ebp
  41bd0f:	push   eax
  41bd10:	jmp    0xddb780ac
  41bd15:	inc    eax
  41bd16:	mov    esp,0xbf009ffc
  41bd1b:	xor    ebp,edi
  41bd1d:	cmp    ah,BYTE PTR [edi+0x56]
  41bd20:	or     BYTE PTR [ecx+0x9e7b428],dh
  41bd26:	cmp    DWORD PTR [eax],eax
  41bd28:	add    BYTE PTR [ebp-0x29],ch
  41bd2b:	dec    ebp
  41bd2c:	adc    BYTE PTR [edx-0x2b],dh
  41bd2f:	hlt    
  41bd30:	imul   ebp,ecx,0x83084b5c
  41bd36:	xchg   esi,eax
  41bd37:	sub    ch,al
  41bd39:	xchg   esi,eax
  41bd3a:	push   edx
  41bd3b:	(bad)  
  41bd3c:	cld    
  41bd3d:	ds mov edi,0x97edc1b9
  41bd43:	jge    0x41bd3a
  41bd45:	push   ebp
  41bd46:	mov    ecx,0x81000a77
  41bd4b:	je     0x41bd8c
  41bd4d:	add    BYTE PTR [esi-0x43],cl
  41bd50:	or     ecx,0x1587cf89
  41bd56:	xchg   ebp,eax
  41bd57:	je     0x41bd98
  41bd59:	add    BYTE PTR [edi+ebp*8],dh
  41bd5c:	jae    0x41bd6c
  41bd5e:	jge    0x41bddb
  41bd60:	mov    esi,0xfffd3d88
  41bd65:	cmp    ch,ah
  41bd67:	sub    eax,0xb8e583ed
  41bd6c:	mov    edi,0xb7e9008b
  41bd71:	inc    ebx
  41bd72:	std    
  41bd73:	or     eax,0x876e5651
  41bd78:	sti    
  41bd79:	xor    ebp,DWORD PTR [ebp+0x88b711]
  41bd7f:	std    
  41bd80:	cld    
  41bd81:	inc    DWORD PTR [esp+esi*4-0x7774dbd0]
  41bd88:	in     al,0xb7
  41bd8a:	inc    ebx
  41bd8b:	in     eax,dx
  41bd8c:	inc    ebp
  41bd8d:	rol    DWORD PTR [ebx+0x973fc97],cl
  41bd93:	std    
  41bd94:	std    
  41bd95:	into   
  41bd96:	cmp    ebp,DWORD PTR [esi+ebp*1-0xc]
  41bd9a:	jmp    0x41bd5f
  41bd9c:	inc    ebp
  41bd9d:	cmc    
  41bd9e:	imul   edx,DWORD PTR [edx-0x420002bc],0x958bfdfd
  41bda8:	das    
  41bda9:	sub    eax,0x84840441
  41bdae:	add    BYTE PTR [ebp+0x4],bh
  41bdb1:	mov    esi,0x43c528
  41bdb6:	call   0x3c8a18
  41bdbb:	jmp    0xe6842e83
  41bdc0:	sbb    BYTE PTR [eax+edi*4],ch
  41bdc3:	xchg   esp,eax
  41bdc4:	jmp    0x4088:0xbd99fd03
  41bdcb:	xchg   esp,eax
  41bdcc:	xor    cl,al
  41bdce:	push   bx
  41bdd0:	xor    al,BYTE PTR [ecx]
  41bdd2:	add    BYTE PTR [edx+ebp*4-0x1503d7f9],dl
  41bdd9:	add    esi,DWORD PTR [edx+esi*2-0x6]
  41bddd:	sub    al,0xe8
  41bddf:	hlt    
  41bde0:	pusha  
  41bde1:	ret    0xfc
  41bde4:	pop    ds
  41bde5:	out    dx,al
  41bde6:	pop    ds
  41bde7:	adc    al,0x67
  41bde9:	jb     0x41be2c
  41bdeb:	push   0xffffff94
  41bded:	xor    al,0x4e
  41bdef:	sbb    BYTE PTR ds:0x905c7ba7,bl
  41bdf5:	and    ebx,0x31a99510
  41bdfb:	mov    eax,DWORD PTR [ebx-0x7828241f]
  41be01:	test   al,0x0
  41be03:	pop    ebp
  41be04:	dec    edx
  41be05:	and    al,al
  41be07:	pop    edx
  41be08:	aas    
  41be09:	jmp    0x41be07
  41be0b:	dec    DWORD PTR [esi]
  41be0d:	jae    0x41bdff
  41be0f:	push   ebp
  41be10:	imul   edi,DWORD PTR [edx+0x2cd430c5],0xffffffbc
  41be17:	jae    0x41bdba
  41be19:	and    dl,BYTE PTR [edx+0xc]
  41be1c:	str    ebx
  41be1f:	add    DWORD PTR [esi+0x173ff694],edx
  41be25:	in     al,dx
  41be26:	adc    BYTE PTR [ecx],bh
  41be28:	aad    0x9b
  41be2a:	shr    eax,1
  41be2c:	lea    edx,[edx-0x1868d040]
  41be32:	jns    0x41be2b
  41be34:	add    esp,ecx
  41be36:	inc    ebx
  41be37:	imul   ecx,DWORD PTR [ebp+0x79],0x887077
  41be3e:	iret   
  41be3f:	jns    0x41bea9
  41be41:	mov    esi,0x342b80dd
  41be46:	bnd js 0x41be49
  41be49:	aam    0x10
  41be4b:	(bad)  
  41be4c:	int3   
  41be4d:	in     al,dx
  41be4e:	mov    edi,0x8d9200f6
  41be53:	add    edx,DWORD PTR es:[ebx]
  41be56:	inc    ebx
  41be57:	xlat   BYTE PTR ds:[ebx]
  41be58:	dec    edi
  41be59:	fwait
  41be5a:	mov    ebp,DWORD PTR [ecx]
  41be5c:	cld    
  41be5d:	adc    al,BYTE PTR [edi-0x15]
  41be60:	mov    ebp,0xbd720298
  41be65:	enter  0xaa5e,0x2e
  41be69:	or     eax,0x5410f731
  41be6e:	push   edi
  41be6f:	ins    BYTE PTR es:[edi],dx
  41be70:	into   
  41be71:	xchg   DWORD PTR [edx],ebx
  41be73:	jb     0x41bec0
  41be75:	nop
  41be76:	mov    ebx,DWORD PTR [edi]
  41be78:	clc    
  41be79:	or     al,0xd1
  41be7b:	scas   eax,DWORD PTR es:[edi]
  41be7c:	dec    ecx
  41be7d:	nop
  41be7e:	xor    eax,0x295cdec
  41be83:	shl    esi,cl
  41be85:	stos   DWORD PTR es:[edi],eax
  41be86:	sub    DWORD PTR [eax],0x14
  41be89:	popf   
  41be8a:	(bad)  
  41be8b:	fcom   st(5)
  41be8d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41be8e:	shl    BYTE PTR [ebp+0x272ad525],0x14
  41be95:	xchg   ebp,eax
  41be96:	rol    DWORD PTR [ecx-0x32],0xd
  41be9a:	push   es
  41be9b:	jg     0x41be9f
  41be9d:	inc    edi
  41be9e:	dec    ecx
  41be9f:	dec    edi
  41bea0:	add    ebp,DWORD PTR [eax]
  41bea2:	(bad)  
  41bea4:	ds pushf 
  41bea6:	test   DWORD PTR [esi],esp
  41bea8:	push   eax
  41bea9:	gs push eax
  41beab:	jmp    FWORD PTR [eax+eax*1-0x26fa4118]
  41beb2:	mov    esp,0x1cf774bd
  41beb7:	inc    edi
  41beb8:	add    cl,bl
  41beba:	pop    edi
  41bebb:	mov    eax,0xbb97e975
  41bec0:	jne    0x41beb3
  41bec2:	dec    edi
  41bec3:	retf   0xdff4
  41bec6:	push   eax
  41bec7:	mov    ebp,0xc23ffd75
  41becc:	hlt    
  41becd:	iret   
  41bece:	push   eax
  41becf:	mov    ebp,0x7a700975
  41bed4:	hlt    
  41bed5:	mov    edi,0x175bd50
  41beda:	pusha  
  41bedb:	jb     0x41bed1
  41bedd:	scas   eax,DWORD PTR es:[edi]
  41bede:	push   eax
  41bedf:	sub    BYTE PTR [eax],dh
  41bee1:	aas    
  41bee2:	push   eax
  41bee3:	lahf   
  41bee4:	neg    DWORD PTR [edi-0x14fa3bb0]
  41beea:	push   esp
  41beeb:	push   ecx
  41beec:	push   ebx
  41beed:	aaa    
  41beee:	imul   eax,DWORD PTR [edi-0x7a26ef09],0xff97e8ff
  41bef8:	cmp    al,cl
  41befa:	cmovno eax,DWORD PTR [eax]
  41befd:	mov    edx,0xc174bce2
  41bf02:	outs   dx,BYTE PTR ds:[esi]
  41bf03:	in     al,dx
  41bf04:	out    0x73,eax
  41bf06:	fdivr  DWORD PTR [ebx+0x305056fc]
  41bf0c:	call   0xfcfd877c
  41bf11:	inc    esi
  41bf12:	add    BYTE PTR [eax],ah
  41bf14:	ds add cl,ch
  41bf17:	xchg   edi,eax
  41bf18:	test   al,0x74
  41bf1a:	fnstcw WORD PTR ds:[eax+esi*1+0x102b8e12]
  41bf22:	lahf   
  41bf23:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bf24:	mov    BYTE PTR [ebp+ebp*8-0x6c],dh
  41bf28:	mov    cl,0xe7
  41bf2a:	xchg   eax,ebx
  41bf2c:	mov    esp,0xc314aafc
  41bf31:	das    
  41bf32:	add    BYTE PTR [esi-0x1c],dl
  41bf35:	(bad)  
  41bf37:	cwde   
  41bf38:	les    esi,FWORD PTR [ebx+0xc]
  41bf3b:	xchg   ebp,eax
  41bf3c:	out    dx,al
  41bf3d:	repnz (bad) 
  41bf3f:	push   0x5f
  41bf41:	sub    BYTE PTR [eax-0x778fb42],bh
  41bf47:	lock les esi,FWORD PTR [eax+0x51]
  41bf4b:	not    BYTE PTR [edi]
  41bf4d:	sub    BYTE PTR [eax-0x3778fb52],bh
  41bf53:	in     al,0xcb
  41bf55:	test   BYTE PTR [eax],al
  41bf57:	cmp    eax,0x5c8c8901
  41bf5c:	stc    
  41bf5d:	cli    
  41bf5e:	(bad)  
  41bf5f:	jmp    0x7d0b:0x90003584
  41bf66:	jmp    0x41c410
  41bf6b:	jp     0x41bf64
  41bf6d:	icebp  
  41bf6e:	cmp    eax,DWORD PTR ds:0x1a8529f8
  41bf74:	test   DWORD PTR ds:0x1b250052,0xa38afef3
  41bf7e:	cmp    DWORD PTR [eax],ebp
  41bf80:	lds    eax,FWORD PTR [ebp+0x0]
  41bf83:	jmp    0x41bf74
  41bf85:	(bad)  
  41bf86:	retf   
  41bf87:	imul   esp,DWORD PTR [esp+ecx*4+0x7eedfffc],0x12eb824
  41bf92:	call   0xfc0452d4
  41bf97:	mov    eax,ecx
  41bf99:	lods   al,BYTE PTR ds:[esi]
  41bf9a:	mov    ah,0x43
  41bf9c:	lods   eax,DWORD PTR ds:[esi]
  41bf9d:	and    DWORD PTR [esi+0x5d],ebx
  41bfa0:	es (bad) 
  41bfa2:	push   ecx
  41bfa3:	mov    ecx,DWORD PTR [ecx-0x5a53177d]
  41bfa9:	add    BYTE PTR [eax],al
  41bfab:	push   esi
  41bfac:	xchg   esp,eax
  41bfad:	cmp    ebx,0xc192e18a
  41bfb3:	cld    
  41bfb4:	xchg   ebx,eax
  41bfb5:	bound  ebp,QWORD PTR [eax+0xa9da15]
  41bfbb:	mov    ebx,DWORD PTR [ecx]
  41bfbd:	mov    ?,WORD PTR [ebp+0x2a9a7bfc]
  41bfc3:	add    BYTE PTR [esi+eax*1-0x4e],bh
  41bfc7:	jmp    FWORD PTR [ebx+0x26]
  41bfca:	ror    DWORD PTR [eax+ebx*1],0xfd
  41bfce:	add    al,BYTE PTR [eax]
  41bfd0:	xchg   esp,eax
  41bfd1:	push   ds
  41bfd2:	(bad)  
  41bfd3:	dec    edi
  41bfd4:	and    DWORD PTR ds:0x7b4bf925,ebp
  41bfda:	push   eax
  41bfdb:	push   eax
  41bfdc:	add    BYTE PTR [edx+eax*1],ch
  41bfdf:	mov    cl,0xff
  41bfe1:	cmp    esp,DWORD PTR ds:0xa5180cc1
  41bfe7:	add    eax,DWORD PTR [eax]
  41bfe9:	xchg   esp,eax
  41bfea:	paddw  mm1,QWORD PTR [edx-0x17a6c257]
  41bff1:	cmp    DWORD PTR ds:0x6c1f0004,ebx
  41bff7:	push   eax
  41bff8:	mov    edx,DWORD PTR [ecx]
  41bffa:	push   es
  41bffb:	mov    ebp,0x8f1a03fc
  41c000:	sbb    BYTE PTR [eax+0x30],0xc2
  41c004:	cld    
  41c005:	inc    esp
  41c006:	push   ecx
  41c007:	ret    0x94ed
  41c00a:	test   eax,0x2d93bf87
  41c00f:	adc    eax,0x8fa9dbff
  41c014:	xor    BYTE PTR [eax+0x40],0xc2
  41c018:	cld    
  41c019:	fs cli 
  41c01b:	pop    ss
  41c01c:	cmp    BYTE PTR [esi-0x437eff97],ah
  41c022:	jmp    0x3e7:0xb28411
  41c029:	xchg   esp,eax
  41c02a:	fist   DWORD PTR es:[eax-0x545137da]
  41c031:	stc    
  41c032:	dec    ebp
  41c033:	out    0x3,eax
  41c035:	(bad)  
  41c036:	std    
  41c037:	jae    0x41c071
  41c039:	inc    esp
  41c03a:	pop    eax
  41c03b:	setbe  dh
  41c03e:	add    bh,ah
  41c040:	sub    eax,0x738dba00
  41c045:	mov    bl,0xcb
  41c047:	test   al,0x6e
  41c049:	dec    edi
  41c04a:	xchg   esp,eax
  41c04b:	add    BYTE PTR [edx],bh
  41c04d:	retf   0xbbd6
  41c050:	out    0x58,al
  41c052:	mov    DWORD PTR [edx+0x23],esi
  41c055:	shl    ebx,0x8d
  41c058:	sub    ecx,esp
  41c05a:	(bad)  [esi]
  41c05c:	icebp  
  41c05d:	pop    esp
  41c05e:	(bad)  
  41c060:	xchg   ebx,eax
  41c061:	lods   al,BYTE PTR ds:[esi]
  41c062:	mov    dh,dh
  41c064:	lods   eax,DWORD PTR ds:[esi]
  41c065:	ror    edx,0x59
  41c068:	push   0xffffffbc
  41c06a:	sub    cl,BYTE PTR [edx]
  41c06c:	imul   edi,DWORD PTR [edx+0x23],0xffffffbb
  41c070:	out    0x8e,al
  41c072:	push   ss
  41c073:	pop    esp
  41c074:	nop
  41c075:	rcl    DWORD PTR [eax],0x50
  41c078:	adc    ecx,eax
  41c07a:	push   ds
  41c07b:	inc    ebp
  41c07c:	aaa    
  41c07d:	push   esp
  41c07e:	or     eax,0xa6c116c3
  41c083:	inc    eax
  41c084:	fadd   DWORD PTR [ebx-0x6c]
  41c087:	xchg   DWORD PTR [esi-0x7b],ebx
  41c08a:	call   0x6c9ae49
  41c08f:	add    bh,ah
  41c091:	add    ecx,DWORD PTR [edi]
  41c093:	test   DWORD PTR [edx-0x69452f46],ebp
  41c099:	sub    edx,DWORD PTR [eax+0xf03e701]
  41c09f:	test   edi,edi
  41c0a1:	(bad)  
  41c0a2:	cli    
  41c0a3:	mov    ebx,0xa80099fc
  41c0a8:	mov    ah,0x55
  41c0aa:	je     0x41c0ff
  41c0ac:	mov    al,0x4f
  41c0ae:	ins    BYTE PTR es:[edi],dx
  41c0af:	pop    ebx
  41c0b0:	fmul   QWORD PTR [edi+0x16]
  41c0b3:	cmp    esp,0xe
  41c0b6:	test   eax,0x7dbf7d97
  41c0bb:	mov    bh,0x85
  41c0bd:	or     BYTE PTR [ebp-0x700342be],0x7e
  41c0c4:	outs   dx,DWORD PTR ds:[esi]
  41c0c5:	imul   ebp,esp,0x54
  41c0c8:	mov    ebp,0x7fbdfd73
  41c0cd:	aaa    
  41c0ce:	push   cs
  41c0cf:	stos   DWORD PTR es:[edi],eax
  41c0d0:	add    ch,BYTE PTR [edx+0x35]
  41c0d3:	mov    edi,0x18e18722
  41c0d8:	jp     0x41c0db
  41c0da:	dec    edi
  41c0db:	dec    edi
  41c0dc:	jmp    0x3bfe:0xbd18cd72
  41c0e3:	xchg   DWORD PTR cs:[edx-0x3430cc3],eax
  41c0ea:	cmp    DWORD PTR [ebx],ebx
  41c0ec:	jg     0x41c151
  41c0ee:	mov    ds:0x644fbd54,al
  41c0f3:	adc    cl,BYTE PTR [esi-0xb]
  41c0f6:	mov    ss,esp
  41c0f8:	dec    ecx
  41c0f9:	call   0xfcfc06d7
  41c0fe:	xlat   BYTE PTR fs:[ebx]
  41c100:	sub    eax,0x4e0a641a
  41c105:	cmc    
  41c106:	outs   dx,BYTE PTR ds:[esi]
  41c107:	aam    0xa8
  41c109:	add    eax,0x261a0074
  41c10e:	sti    
  41c10f:	pop    esi
  41c110:	aam    0x88
  41c112:	push   edx
  41c113:	loope  0x41c144
  41c115:	adc    al,BYTE PTR [eax]
  41c117:	jmp    0x10145b3
  41c11c:	or     DWORD PTR [ebx],ecx
  41c11e:	inc    BYTE PTR [ebp-0x7e]
  41c121:	jge    0x41c19c
  41c123:	inc    DWORD PTR [edi-0x7dd47df0]
  41c129:	sar    bl,0x5f
  41c12c:	(bad)  
  41c12d:	pop    ds
  41c12e:	(bad)
  41c131:	std    
  41c132:	push   eax
  41c133:	mov    edx,DWORD PTR [ecx+0x7e6ce87e]
  41c139:	std    
  41c13a:	call   DWORD PTR [ebp+0x2a]
  41c13d:	jmp    0x41c178
  41c13f:	lea    ecx,[eax]
  41c141:	bound  edx,QWORD PTR [ecx+ecx*4+0x18]
  41c145:	jno    0x41c0ce
  41c147:	stc    
  41c148:	xchg   ebp,eax
  41c149:	mov    WORD PTR [eax+0x0],cs
  41c14c:	jge    0x41c0d4
  41c14e:	ret    0xaa50
  41c151:	pop    DWORD PTR [ecx-0x486be6c]
  41c157:	push   eax
  41c158:	push   ebp
  41c159:	sub    eax,0x883d00ea
  41c15e:	mov    esp,0xfd38b90f
  41c163:	jmp    FWORD PTR ds:0xd556f2ae
  41c169:	test   ah,bh
  41c16b:	(bad)  
  41c16c:	cmp    eax,0x5601e7
  41c171:	xchg   DWORD PTR [ebx],eax
  41c173:	push   0x3ffd2d00
  41c178:	lea    edi,[eax-0x68]
  41c17b:	clc    
  41c17c:	call   DWORD PTR [edx]
  41c17e:	push   esp
  41c17f:	sti    
  41c180:	adc    eax,0x400f3d
  41c185:	je     0x41c1ce
  41c187:	cld    
  41c188:	and    DWORD PTR [ebp+0x79],0xb
  41c18c:	test   BYTE PTR [esp+eax*1+0x0],ah
  41c190:	add    BYTE PTR [esi],bl
  41c192:	out    0x3a,eax
  41c194:	lea    edx,[esp+edx*4+0x49d3fd9f]
  41c19b:	pop    esp
  41c19c:	xor    ch,bh
  41c19e:	dec    esi
  41c19f:	add    ecx,DWORD PTR [esp+edx*4-0x59]
  41c1a3:	push   edx
  41c1a4:	mov    DWORD PTR [ecx-0x6bbff14d],eax
  41c1aa:	pop    esp
  41c1ab:	inc    edi
  41c1ac:	clc    
  41c1ad:	inc    esp
  41c1ae:	and    al,BYTE PTR [esi-0x1]
  41c1b1:	mov    ds:0x118b55a6,eax
  41c1b6:	xor    edi,DWORD PTR [esi-0x42856c04]
  41c1bc:	jb     0x41c146
  41c1be:	call   ebp
  41c1c0:	adc    BYTE PTR [esi+ebp*1-0xb],0x36
  41c1c5:	stc    
  41c1c6:	mov    cl,0x37
  41c1c8:	sub    eax,0xffb52517
  41c1cd:	out    0xa,eax
  41c1cf:	mov    ebp,0x17d76872
  41c1d4:	js     0x41c1d6
  41c1d6:	xchg   cl,ch
  41c1d8:	add    ebp,DWORD PTR [edx-0x6c]
  41c1db:	and    bh,BYTE PTR [ecx+0x50c1d18a]
  41c1e1:	push   ebp
  41c1e2:	inc    ebx
  41c1e3:	in     eax,dx
  41c1e4:	mov    bh,0xfc
  41c1e6:	shr    DWORD PTR [ebp-0x43],0xd5
  41c1ea:	sbb    DWORD PTR [edx+0x34],ebp
  41c1ed:	pop    es
  41c1ee:	ins    DWORD PTR es:[edi],dx
  41c1ef:	fdivr  QWORD PTR [ebx+0x45a9872]
  41c1f5:	jmp    0xfd1b9d90
  41c1fa:	mov    DWORD PTR [ebp-0x2447ed43],eax
  41c200:	inc    eax
  41c201:	add    BYTE PTR [ebx],al
  41c203:	lods   eax,DWORD PTR ds:[esi]
  41c204:	mov    esp,0xf49a1fc
  41c209:	inc    eax
  41c20a:	xchg   esp,eax
  41c20b:	sbb    eax,0x6158da
  41c210:	pause  
  41c212:	push   ss
  41c213:	lea    ebx,[edx-0x42]
  41c216:	fcom   DWORD PTR [eax+0x3f]
  41c219:	sub    esi,DWORD PTR [edi+esi*4]
  41c21c:	dec    ebp
  41c21d:	pop    esi
  41c21e:	add    al,0x2
  41c220:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c221:	int3   
  41c222:	aam    0x4d
  41c224:	jb     0x41c1d5
  41c226:	adc    al,0xa5
  41c228:	mov    esi,0x76906e83
  41c22d:	inc    edx
  41c22e:	xchg   esp,eax
  41c22f:	add    DWORD PTR [edx+0x168b4955],edi
  41c235:	push   cs
  41c236:	adc    dl,BYTE PTR [ebp-0x6bfffc1a]
  41c23c:	sub    BYTE PTR [edi+0x600d435],ah
  41c242:	sbb    BYTE PTR [edx+edx*1-0x59],ah
  41c246:	add    edx,DWORD PTR [edi]
  41c248:	shl    ch,0x87
  41c24b:	sbb    al,BYTE PTR [eax]
  41c24d:	out    0x3,eax
  41c24f:	pop    ss
  41c250:	scas   al,BYTE PTR es:[edi]
  41c251:	pop    edx
  41c252:	ds cli 
  41c254:	sbb    DWORD PTR [esp+eax*1],0xffffffe0
  41c258:	cmp    BYTE PTR ds:0xf880a6bd,bh
  41c25e:	inc    ebx
  41c25f:	xchg   esp,eax
  41c260:	test   edx,ebp
  41c262:	xchg   BYTE PTR [ebp-0x1bfc1900],dl
  41c268:	test   al,0xdc
  41c26a:	mov    bh,0x31
  41c26c:	mov    bh,0x61
  41c26e:	mov    esp,0x271ab716
  41c273:	or     eax,0x33ce71cf
  41c278:	nop
  41c279:	iret   
  41c27a:	mov    esp,0x375c4f10
  41c27f:	add    al,0x83
  41c281:	scas   al,BYTE PTR es:[edi]
  41c282:	mov    ebp,0xbcbff5fb
  41c287:	clc    
  41c288:	dec    esi
  41c289:	add    BYTE PTR [ebx-0x30],ah
  41c28c:	sahf   
  41c28d:	adc    BYTE PTR [ebp+0x2a],dh
  41c290:	mov    ah,0x83
  41c292:	inc    edx
  41c293:	pushf  
  41c294:	cmp    al,0x6a
  41c296:	test   eax,0xb1983a0a
  41c29b:	(bad)  
  41c29c:	dec    BYTE PTR [eax-0x17]
  41c29f:	add    BYTE PTR [edi+0xd3972b5],dl
  41c2a5:	mov    esp,0xb4536c4f
  41c2aa:	dec    edi
  41c2ab:	inc    ecx
  41c2ac:	(bad)
  41c2af:	cs adc eax,0xd86c0bc3
  41c2b5:	add    ebx,DWORD PTR [ebp+0x37b7e82a]
  41c2bb:	push   ss
  41c2bc:	push   ecx
  41c2bd:	sbb    al,0x95
  41c2c0:	scas   al,BYTE PTR es:[edi]
  41c2c1:	mov    bl,0x72
  41c2c3:	add    eax,0xfefb9e30
  41c2c8:	cmp    BYTE PTR [ebp-0x2dc00a8e],dh
  41c2ce:	lock out dx,eax
  41c2d0:	sub    BYTE PTR [ecx-0x5767acfc],ch
  41c2d6:	aam    0xdd
  41c2d8:	sbb    BYTE PTR [ebp-0x4212c8a4],dh
  41c2de:	shl    BYTE PTR [ebx*1-0x602a7f56],0x4f
  41c2e6:	push   esi
  41c2e7:	push   ss
  41c2e8:	inc    ebp
  41c2e9:	fldenv [edi-0x1b]
  41c2ec:	scas   eax,DWORD PTR es:[edi]
  41c2ed:	inc    eax
  41c2ee:	add    BYTE PTR [edx-0x19],ah
  41c2f1:	jle    0x41c30d
  41c2f3:	rcr    DWORD PTR [edi+0x7a700040],1
  41c2f9:	in     al,0xb7
  41c2fb:	sub    bl,BYTE PTR [eax-0x5a6aed4d]
  41c301:	inc    eax
  41c302:	add    BYTE PTR [eax],al
  41c304:	add    BYTE PTR [esi-0x2e5cf7c2],al
  41c30a:	cmp    DWORD PTR [eax+0x0],eax
  41c30d:	jbe    0x41c34d
  41c30f:	or     al,0xa3
  41c311:	jns    0x41c33f
  41c313:	inc    eax
  41c314:	add    BYTE PTR [esi+0x3e],ah
  41c317:	adc    BYTE PTR [ebx+0x4039ed],ah
  41c31d:	ss ds adc al,0xa3
  41c321:	mov    eax,ds:0x46004034
  41c326:	sbb    BYTE PTR ds:[edx-0x41],ch
  41c32a:	and    ch,dh
  41c32c:	mov    bh,0xfe
  41c32e:	add    DWORD PTR [ecx-0x7aa6aa83],ecx
  41c334:	xor    eax,0x4039b1
  41c339:	test   esi,esp
  41c33b:	dec    ecx
  41c33c:	add    BYTE PTR [ebp-0x78],bh
  41c33f:	ret    
  41c340:	push   eax
  41c341:	inc    ebx
  41c342:	mov    BYTE PTR [ecx],dh
  41c344:	mov    esp,0xff00415f
  41c349:	mov    ds:0x71a32ee7,eax
  41c34e:	xor    DWORD PTR [eax+0x0],eax
  41c351:	enter  0xeff6,0x58
  41c355:	inc    ebp
  41c356:	dec    ebx
  41c357:	dec    edx
  41c358:	add    BYTE PTR [ebp-0x7a],ch
  41c35b:	ret    
  41c35c:	push   eax
  41c35d:	push   0xffffffaf
  41c35f:	add    BYTE PTR [eax-0x29050382],bh
  41c365:	out    0xb0,eax
  41c367:	lahf   
  41c368:	or     BYTE PTR [eax],al
  41c36a:	adc    eax,0x688d003d
  41c36f:	ins    BYTE PTR es:[edi],dx
  41c370:	push   esp
  41c371:	call   0x420699
  41c376:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c377:	ror    DWORD PTR [edi+edi*8+0x40],0xb5
  41c37c:	mov    ah,0x43
  41c37e:	xchg   esp,eax
  41c37f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c380:	mov    ecx,0x65cc7ed5
  41c385:	adc    ecx,DWORD PTR [ebx-0x16]
  41c388:	add    ecx,DWORD PTR [ebx-0x17a47087]
  41c38e:	(bad)  
  41c38f:	loope  0x41c394
  41c391:	add    BYTE PTR [edi],bl
  41c393:	pop    esi
  41c394:	push   ebx
  41c395:	std    
  41c396:	test   eax,0x944078a3
  41c39b:	push   esi
  41c39c:	shl    BYTE PTR [eax+0x448f84],cl
  41c3a2:	lea    esp,[esp+ebp*4+0x2ca757b4]
  41c3a9:	sbb    DWORD PTR [ebp-0x2c],edi
  41c3ac:	or     BYTE PTR [eax+0x112ca757],bh
  41c3b2:	ins    DWORD PTR es:[edi],dx
  41c3b3:	les    ecx,FWORD PTR [esi*4+0x92ca757]
  41c3ba:	rcr    BYTE PTR [ebx-0x56285761],cl
  41c3c0:	add    edi,DWORD PTR [ecx]
  41c3c2:	push   edi
  41c3c3:	(bad)  
  41c3c4:	inc    BYTE PTR [edi+0x406d04a1]
  41c3ca:	xchg   esp,eax
  41c3cb:	xchg   edx,eax
  41c3cc:	push   esi
  41c3cd:	pop    ecx
  41c3ce:	add    BYTE PTR [ebp-0x18],bl
  41c3d1:	sldt   ecx
  41c3d4:	push   ds
  41c3d5:	test   al,0x80
  41c3d7:	jo     0x41c427
  41c3d9:	push   edx
  41c3da:	push   ebp
  41c3db:	out    dx,al
  41c3dc:	fst    QWORD PTR [eax+ebp*8+0x10]
  41c3e0:	xlat   BYTE PTR ds:[ebx]
  41c3e1:	mov    dh,0xfc
  41c3e3:	mov    esi,0x87a87b2
  41c3e8:	loop   0x41c395
  41c3ea:	mov    edi,0x6a00a9cd
  41c3ef:	sbb    BYTE PTR [eax+edi*1],0xc0
  41c3f3:	int3   
  41c3f4:	shr    DWORD PTR [edi+0x46],0x94
  41c3f8:	add    bh,ah
  41c3fa:	mov    fs,WORD PTR [esi-0x5fc78df0]
  41c400:	test   DWORD PTR [ebx],ebp
  41c402:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c403:	pop    ebx
  41c404:	es jmp 0xb3ea2d5b
  41c40a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c40b:	clc    
  41c40c:	mov    bl,0x63
  41c40e:	ret    
  41c40f:	mov    al,ds:0x9405927c
  41c414:	add    BYTE PTR [ecx],al
  41c416:	or     al,0x44
  41c418:	xchg   DWORD PTR [ebx-0x6cb9f15d],ebp
  41c41e:	stos   DWORD PTR es:[edi],eax
  41c41f:	or     ebp,ebp
  41c421:	push   ebp
  41c422:	mov    edx,0x80ddc116
  41c427:	fsin   
  41c429:	out    0x3,al
  41c42b:	(bad)  
  41c42d:	dec    ebx
  41c42e:	push   ebx
  41c42f:	add    DWORD PTR ds:[ebp+0x5ebc0052],ebx
  41c436:	cmp    bh,BYTE PTR [edx-0x30547660]
  41c43c:	push   ss
  41c43d:	shr    ebp,0x7f
  41c440:	inc    ecx
  41c441:	(bad)  
  41c442:	out    0x3,al
  41c444:	adc    eax,0x9102fb35
  41c449:	jl     0x41c495
  41c44b:	add    eax,0x406c0094
  41c450:	jl     0x41c4a2
  41c452:	add    DWORD PTR [ebx],0x82ff4bc2
  41c458:	outs   dx,DWORD PTR ds:[esi]
  41c459:	mov    bl,0xe5
  41c45b:	mov    edx,esi
  41c45d:	les    esp,FWORD PTR [ebx-0x3c]
  41c460:	mov    al,ds:0x9406627c
  41c465:	add    BYTE PTR [edx+0x37],ch
  41c468:	sub    al,0x0
  41c46a:	idiv   BYTE PTR [edi+0x15]
  41c46d:	(bad)  
  41c46e:	out    0x3,al
  41c470:	pop    ds
  41c471:	cmp    eax,0x87c0b900
  41c476:	inc    edx
  41c477:	test   eax,0x91554ac8
  41c47c:	mov    esp,0x1f9efca4
  41c481:	fsubr  DWORD PTR ds:[eax+edx*8+0x3]
  41c486:	test   BYTE PTR [ecx],al
  41c488:	call   0xffb0:0xc36a0000
  41c48f:	in     eax,dx
  41c490:	jae    0x41c4e7
  41c492:	add    ch,cl
  41c494:	xchg   edi,eax
  41c495:	xchg   DWORD PTR [edx-0x7b],eax
  41c498:	add    BYTE PTR [eax+0x26],cl
  41c49b:	add    DWORD PTR [edi+0x4d39a844],edi
  41c4a1:	or     eax,0xdfac86b4
  41c4a6:	jge    0x41c467
  41c4a8:	fiadd  WORD PTR [ebx+0x3d]
  41c4ab:	add    ch,cl
  41c4ad:	xchg   edi,eax
  41c4ae:	and    DWORD PTR [edx+0x35],0x642a2698
  41c4b5:	arpl   WORD PTR [edi+edx*2+0x3af341],cx
  41c4bc:	jmp    0xba3a02d3
  41c4c1:	and    BYTE PTR [ebp+0x2f4cbf4f],bh
  41c4c7:	or     al,0x1
  41c4c9:	test   al,0xa4
  41c4cb:	cld    
  41c4cc:	push   es
  41c4cd:	sti    
  41c4ce:	jno    0x41c543
  41c4d0:	stos   BYTE PTR es:[edi],al
  41c4d1:	sbb    BYTE PTR [edi],dh
  41c4d3:	clc    
  41c4d4:	jmp    0xeb584175
  41c4d9:	xchg   edi,eax
  41c4da:	add    BYTE PTR [ecx+0xd081864],al
  41c4e0:	pushfw 
  41c4e2:	(bad)  
  41c4e3:	(bad)  
  41c4e4:	call   0xd1844cd0
  41c4e9:	sbb    ch,BYTE PTR [edi]
  41c4eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c4ec:	add    BYTE PTR [ebp-0x3f],ah
  41c4ef:	sub    edi,edi
  41c4f1:	bnd jp 0x41c56d
  41c4f4:	hlt    
  41c4f5:	mov    dh,0xcf
  41c4f7:	in     al,0x42
  41c4f9:	aas    
  41c4fa:	(bad)  
  41c4fb:	jmp    DWORD PTR [edi-0x7ef6d100]
  41c501:	icebp  
  41c502:	cld    
  41c503:	std    
  41c504:	dec    DWORD PTR [edx+0x453560b8]
  41c50a:	sub    DWORD PTR [ecx],ecx
  41c50c:	and    ch,0xec
  41c50f:	std    
  41c510:	jmp    FWORD PTR [eax]
  41c512:	mov    eax,0x7e0ae770
  41c517:	jmp    0x1d3:0x32c200e3
  41c51e:	in     eax,dx
  41c51f:	std    
  41c520:	xchg   BYTE PTR [ebp-0x3b],al
  41c523:	sar    bh,0x1
  41c526:	mov    ebp,0xed8afffd
  41c52b:	add    DWORD PTR [edx+0x7],ebp
  41c52e:	push   0xfffffff2
  41c530:	fbstp  TBYTE PTR [ecx]
  41c532:	mov    ebp,0x385dfffd
  41c537:	mov    ebp,0x78fd347a
  41c53c:	adc    esp,esi
  41c53e:	cmp    bh,BYTE PTR [eax+eax*1]
  41c541:	pop    ecx
  41c542:	add    al,0xf3
  41c544:	fild   DWORD PTR [ebp+0x6a20e1bd]
  41c54a:	imul   edi,DWORD PTR [edx+0x79],0xffffffa8
  41c54e:	xor    eax,0x7d485c65
  41c553:	std    
  41c554:	xchg   BYTE PTR [ebp-0x7f],cl
  41c557:	jecxz  0x41c55d
  41c559:	mov    edi,DWORD PTR [edx+0x73f21165]
  41c55f:	imul   eax,DWORD PTR [ecx+0x6e800c0],0x6294086a
  41c569:	ds loopne 0x41c4f0
  41c56c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c56d:	add    BYTE PTR [eax],al
  41c56f:	fisubr DWORD PTR [esi]
  41c571:	aas    
  41c572:	lock pop ds
  41c574:	in     al,0xa7
  41c576:	or     al,0xe3
  41c578:	jo     0x41c57a
  41c57a:	(bad)  
  41c57b:	adc    ebx,ebx
  41c57d:	or     edi,edi
  41c57f:	adc    BYTE PTR [edi+0x2f],ah
  41c582:	add    edi,esp
  41c584:	mov    DWORD PTR [ebx+0x41200bfd],esi
  41c58a:	or     BYTE PTR [ecx],bl
  41c58c:	or     BYTE PTR cs:[bx],cl
  41c590:	in     al,0xaf
  41c592:	out    0x78,al
  41c594:	test   al,0x0
  41c596:	add    BYTE PTR [edi],bl
  41c598:	das    
  41c599:	mov    DWORD PTR [edx-0xc],eax
  41c59c:	jle    0x41c5ac
  41c59e:	dec    eax
  41c59f:	xchg   esp,eax
  41c5a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c5a1:	mov    DWORD PTR [edx-0x3c],eax
  41c5a4:	sub    eax,0x4a640849
  41c5a9:	das    
  41c5aa:	fcom   DWORD PTR [edi+0x47875311]
  41c5b0:	stos   DWORD PTR es:[edi],eax
  41c5b1:	test   al,0x37
  41c5b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c5b4:	lock mov ah,0xfe
  41c5b7:	push   esi
  41c5b8:	fwait
  41c5b9:	mov    DWORD PTR [edx-0x38],ecx
  41c5bc:	es sti 
  41c5be:	sub    al,0xf
  41c5c0:	data16 add al,0x74
  41c5c3:	sahf   
  41c5c4:	xor    dl,BYTE PTR [ecx+0x8]
  41c5c7:	add    BYTE PTR [edx-0x62],dl
  41c5ca:	adc    BYTE PTR ds:0x89045b83,ch
  41c5d0:	rcl    DWORD PTR ds:0x731f4f54,1
  41c5d6:	add    al,0x1
  41c5d8:	fbld   TBYTE PTR [ecx-0x576c17ad]
  41c5de:	mov    dl,0xfc
  41c5e0:	xchg   ebp,eax
  41c5e1:	add    BYTE PTR [edx],ch
  41c5e3:	or     BYTE PTR ds:0xdc8aeb44,bl
  41c5e9:	clc    
  41c5ea:	inc    eax
  41c5eb:	jmp    0x420cb49
  41c5f0:	ucomiss xmm2,DWORD PTR [edi+0x25703c5b]
  41c5f7:	add    al,0x94
  41c5f9:	jge    0x41c626
  41c5fb:	mov    esp,0x53a57bd3
  41c600:	sbb    DWORD PTR [esi],esi
  41c602:	div    DWORD PTR [esi-0x2471037a]
  41c608:	std    
  41c609:	scas   eax,DWORD PTR es:[edi]
  41c60a:	xchg   ebp,eax
  41c60b:	add    BYTE PTR [ebx+0x35],0xf4
  41c60f:	mov    al,BYTE PTR [esi+0x67ad6ba8]
  41c615:	(bad)  
  41c616:	push   ss
  41c617:	mov    edx,ecx
  41c619:	cwde   
  41c61a:	je     0x41c603
  41c61c:	loopne 0x41c5cd
  41c61e:	pop    edi
  41c61f:	inc    edx
  41c620:	test   BYTE PTR [ecx-0x27],bh
  41c623:	nop    DWORD PTR [esi+0x2b]
  41c627:	mov    ebx,ecx
  41c629:	jmp    0x41c5e1
  41c62b:	xor    BYTE PTR [eax],al
  41c62d:	nop
  41c62e:	or     ebx,0xffffffab
  41c631:	xchg   edi,eax
  41c632:	xor    eax,0x854bded
  41c637:	call   0xae2e47e6
  41c63c:	push   es
  41c63d:	pop    ss
  41c63e:	push   ecx
  41c63f:	cs mov dh,0x98
  41c642:	and    DWORD PTR [ebx+0x63ff94ab],0x3d
  41c649:	mov    DWORD PTR [edi+0x8d4bd15],ebp
  41c64f:	out    0x29,eax
  41c651:	lods   eax,DWORD PTR ds:[esi]
  41c652:	jge    0x41c5d7
  41c654:	pop    edi
  41c655:	retf   
  41c656:	cwde   
  41c657:	pushf  
  41c658:	ds xchg esp,eax
  41c65a:	add    BYTE PTR [eax],al
  41c65c:	fs aam 0xa8
  41c65f:	dec    edi
  41c660:	bound  ebx,QWORD PTR [edx]
  41c662:	aas    
  41c663:	std    
  41c664:	pop    esp
  41c665:	test   al,0xad
  41c667:	jb     0x41c656
  41c669:	push   DWORD PTR [ebx]
  41c66b:	jmp    0x8b55:0xbf8209d6
  41c672:	jns    0x41c6e6
  41c674:	shl    DWORD PTR [ebx-0x38108c4b],0x79
  41c67b:	(bad)
  41c67e:	(bad)  
  41c680:	scas   al,BYTE PTR es:[edi]
  41c681:	cmovo  ebx,DWORD PTR [eax+esi*2]
  41c685:	(bad)
  41c688:	and    al,0x34
  41c68a:	jp     0x41c6d3
  41c68c:	xchg   esi,eax
  41c68d:	pop    ss
  41c68e:	mov    dh,0xfc
  41c690:	mov    es,WORD PTR [eax]
  41c692:	xchg   ecx,eax
  41c693:	add    BYTE PTR [ebp-0x10],dh
  41c696:	sbb    al,0x3a
  41c698:	enter  0x5d70,0xe4
  41c69c:	xchg   BYTE PTR [edx],ch
  41c69e:	lock sbb BYTE PTR [esi],ch
  41c6a1:	pop    esp
  41c6a2:	mov    ds:0xa7515764,eax
  41c6a7:	inc    ebp
  41c6a8:	add    cl,ch
  41c6aa:	adc    al,BYTE PTR [edx-0x8]
  41c6ad:	mov    ecx,0x4e4fc40c
  41c6b2:	imul   edx,DWORD PTR [eax],0xfffffffd
  41c6b5:	mov    esp,0x5329989b
  41c6ba:	loope  0x41c667
  41c6bc:	mov    BYTE PTR [ecx],bh
  41c6be:	and    esi,DWORD PTR [ebp+0x2a150173]
  41c6c4:	clc    
  41c6c5:	jmp    0xaacca98b
  41c6ca:	xchg   DWORD PTR [esi],edi
  41c6cc:	mov    ebp,DWORD PTR [edx-0x6b02c185]
  41c6d2:	aas    
  41c6d3:	jns    0x41c69a
  41c6d5:	add    BYTE PTR [ebp+0x6affe9a7],al
  41c6db:	cs mov ebp,0x41797975
  41c6e1:	clc    
  41c6e2:	add    ebx,DWORD PTR [edx+0x34]
  41c6e5:	sub    al,0x3a
  41c6e7:	jne    0x41c66e
  41c6e9:	inc    ebx
  41c6ea:	mov    eax,ds:0x6a9b565c
  41c6ef:	jne    0x41c676
  41c6f1:	inc    ebx
  41c6f2:	ins    DWORD PTR es:[edi],dx
  41c6f3:	ja     0x41c736
  41c6f5:	or     BYTE PTR [eax],al
  41c6f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c6f8:	inc    eax
  41c6f9:	add    al,0xe9
  41c6fb:	ret    0xfb73
  41c6fe:	jmp    FWORD PTR [esi-0x74a00447]
  41c704:	mov    ecx,0x3efd0cbe
  41c709:	xchg   esp,ebp
  41c70b:	jle    0x41c772
  41c70d:	and    BYTE PTR [ebx+0x76],dl
  41c710:	leave  
  41c711:	xchg   DWORD PTR [ebp-0x3],eax
  41c714:	add    BYTE PTR [edi-0x18070eaa],bh
  41c71a:	push   0x8bfb741a
  41c71f:	pop    ebp
  41c720:	cs repz jne 0x41c716
  41c724:	mov    al,0xbc
  41c726:	jmp    0x41c954
  41c72b:	add    bl,al
  41c72d:	sub    DWORD PTR [ebp-0x17ab2a18],ecx
  41c733:	xor    ebp,ebx
  41c735:	(bad)  
  41c736:	jmp    FWORD PTR [eax]
  41c738:	out    dx,al
  41c739:	sti    
  41c73a:	push   eax
  41c73b:	es ins BYTE PTR es:[edi],dx
  41c73d:	dec    esp
  41c73e:	push   ebx
  41c73f:	push   0xffffffde
  41c741:	pop    es
  41c742:	call   0x3d2253
  41c747:	add    al,0xef
  41c749:	test   DWORD PTR [ebp+0x6a60ddbd],0x4285a194
  41c753:	push   0x8472b367
  41c758:	push   es
  41c759:	push   cs
  41c75a:	pop    eax
  41c75b:	add    BYTE PTR [edx+0x58810057],al
  41c761:	mov    ds:0x87684285,eax
  41c766:	mov    bl,0x12
  41c768:	int3   
  41c769:	test   eax,0xf41f0040
  41c76e:	stos   DWORD PTR es:[edi],eax
  41c76f:	sub    cl,ch
  41c771:	lahf   
  41c772:	push   edx
  41c773:	std    
  41c774:	rcr    DWORD PTR [edi-0x295017aa],0xb1
  41c77b:	cld    
  41c77c:	les    ebx,FWORD PTR [edi+edi*1]
  41c77f:	in     al,dx
  41c780:	lds    esp,FWORD PTR [eax+eax*1]
  41c783:	xor    al,ch
  41c785:	mov    edi,0x6612ed1e
  41c78a:	jle    0x41c7c7
  41c78c:	xchg   esi,eax
  41c78d:	xor    al,BYTE PTR [edi-0x4]
  41c790:	scas   eax,DWORD PTR es:[edi]
  41c791:	jno    0x41c76f
  41c793:	xlat   BYTE PTR ds:[ebx]
  41c794:	xchg   edi,eax
  41c795:	in     al,0xab
  41c797:	push   eax
  41c798:	inc    esp
  41c799:	xor    al,0x8
  41c79b:	ds inc esp
  41c79d:	(bad)  
  41c79e:	push   esi
  41c79f:	in     eax,dx
  41c7a0:	loop   0x41c7d7
  41c7a2:	jg     0x41c7e6
  41c7a4:	fadd   DWORD PTR [esi]
  41c7a6:	push   ds
  41c7a7:	add    DWORD PTR [edi-0x43a9a6de],edx
  41c7ad:	fistp  WORD PTR [edx-0x3be43c04]
  41c7b3:	jb     0x41c743
  41c7b5:	jne    0x41c74f
  41c7b7:	inc    edx
  41c7b9:	inc    esp
  41c7ba:	mov    cl,0x30
  41c7bc:	aam    0x51
  41c7be:	or     edi,ebp
  41c7c0:	add    BYTE PTR [ecx],ch
  41c7c2:	(bad)  
  41c7c3:	mov    cl,0x72
  41c7c5:	mov    BYTE PTR [edi+0x1832b98],al
  41c7cb:	and    eax,0xf3461cb3
  41c7d0:	jl     0x41c785
  41c7d2:	ja     0x41c801
  41c7d4:	(bad)  
  41c7d6:	lods   al,BYTE PTR ds:[esi]
  41c7d7:	jmp    0xa58d4c24
  41c7dc:	dec    esi
  41c7dd:	push   ebx
  41c7de:	mov    edi,0x77c703d6
  41c7e3:	add    al,BYTE PTR [edi+0x296a2d6f]
  41c7e9:	sbb    BYTE PTR [ecx],al
  41c7eb:	je     0x41c835
  41c7ed:	adc    BYTE PTR [ecx-0x22],dl
  41c7f0:	cmp    BYTE PTR [ebx+ebp*4+0x4003f3fb],cl
  41c7f7:	out    0x4c,eax
  41c7f9:	retf   
  41c7fa:	test   DWORD PTR [esi+0x409238],esp
  41c800:	dec    ecx
  41c801:	adc    BYTE PTR ds:0xb9dbf6e9,dh
  41c807:	test   al,0x7
  41c809:	xchg   esp,eax
  41c80a:	push   ebx
  41c80b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c80c:	aaa    
  41c80d:	mov    al,0xf8
  41c80f:	popf   
  41c810:	sbb    BYTE PTR [eax+0xd042968],bh
  41c816:	test   eax,0x34f0892f
  41c81b:	aam    0x83
  41c81d:	scas   al,BYTE PTR es:[edi]
  41c81e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c81f:	push   ecx
  41c820:	inc    esi
  41c821:	xchg   esp,eax
  41c822:	add    bl,bh
  41c824:	out    0x0,eax
  41c826:	repz aaa 
  41c828:	ins    BYTE PTR es:[edi],dx
  41c829:	mov    cl,0xd0
  41c82b:	test   BYTE PTR [esi],ah
  41c82d:	aaa    
  41c82e:	lods   eax,DWORD PTR ds:[esi]
  41c82f:	push   edx
  41c830:	popf   
  41c831:	dec    DWORD PTR [ebx]
  41c833:	inc    eax
  41c834:	out    0x59,eax
  41c836:	mov    ecx,0x54153b15
  41c83b:	add    BYTE PTR [esi+0x3db54e9b],bl
  41c841:	mov    dl,0x49
  41c843:	stos   DWORD PTR es:[edi],eax
  41c844:	(bad)  
  41c845:	(bad)  
  41c847:	adc    DWORD PTR [eax-0x17],eax
  41c84a:	in     eax,0x79
  41c84c:	(bad)  
  41c84d:	(bad)  
  41c84e:	push   edx
  41c84f:	push   eax
  41c850:	push   esi
  41c851:	jb     0x41c81e
  41c853:	in     al,0xb
  41c855:	mov    edi,0x56fc0e46
  41c85a:	fiadd  DWORD PTR [eax]
  41c85c:	mov    DWORD PTR [ecx],esp
  41c85e:	fdivr  DWORD PTR [edi-0x28]
  41c861:	je     0x41c8d3
  41c863:	jle    0x41c85a
  41c865:	jge    0x41c8c3
  41c867:	repz add al,BYTE PTR [edx+esi*8]
  41c86b:	inc    eax
  41c86c:	add    BYTE PTR [ebp+0x6b],bl
  41c86f:	mov    ds:0xac06dc00,eax
  41c874:	sub    DWORD PTR [ecx-0x71ab1b84],0xffffff94
  41c87b:	push   0xadcce940
  41c880:	adc    cl,ch
  41c882:	mov    al,BYTE PTR [eax+0x0]
  41c885:	sar    ebx,0xae
  41c888:	cld    
  41c889:	scas   al,BYTE PTR es:[edi]
  41c88a:	add    BYTE PTR [ecx],bl
  41c88c:	mov    bl,0xfc
  41c88e:	sbb    eax,0x97809893
  41c893:	inc    ebp
  41c894:	lods   al,BYTE PTR ds:[esi]
  41c895:	push   esp
  41c896:	xchg   esi,eax
  41c897:	mov    ds:0x982911b0,eax
  41c89c:	dec    ebp
  41c89d:	pop    esi
  41c89e:	jb     0x41c871
  41c8a0:	inc    edi
  41c8a1:	rcl    DWORD PTR [esi],0x61
  41c8a4:	xor    esi,DWORD PTR [edx+eax*8-0x51]
  41c8a8:	sub    BYTE PTR [ecx+esi*4-0x40],dh
  41c8ac:	es and al,0xf5
  41c8af:	dec    eax
  41c8b0:	inc    ebx
  41c8b1:	jo     0x41c8a1
  41c8b3:	sub    BYTE PTR [esp],0xe5
  41c8b7:	nop
  41c8b8:	cmp    BYTE PTR [eax-0x4a],bh
  41c8bb:	inc    esi
  41c8bc:	lods   eax,DWORD PTR ds:[esi]
  41c8bd:	jae    0x41c8bf
  41c8bf:	cdq    
  41c8c0:	adc    al,0xe8
  41c8c2:	aaa    
  41c8c3:	push   ebx
  41c8c4:	outs   dx,BYTE PTR ds:[esi]
  41c8c5:	sti    
  41c8c6:	add    ebp,esp
  41c8c8:	(bad)  
  41c8c9:	xchg   BYTE PTR [eax+0x45],cl
  41c8cc:	popf   
  41c8cd:	inc    esp
  41c8ce:	je     0x41c8f8
  41c8d0:	clc    
  41c8d1:	jg     0x41c94b
  41c8d3:	and    dh,bh
  41c8d5:	jae    0x41c8e4
  41c8d7:	adc    eax,0x7d43b4aa
  41c8dc:	jno    0x41c8ef
  41c8de:	lock dec edi
  41c8e0:	ds add bl,ch
  41c8e3:	push   ebp
  41c8e4:	jle    0x41c95a
  41c8e6:	jl     0x41c955
  41c8e8:	dec    eax
  41c8e9:	je     0x41c8fe
  41c8eb:	mov    dh,0xb4
  41c8ed:	in     al,0x87
  41c8ef:	add    BYTE PTR [ecx+0x71],ch
  41c8f2:	sti    
  41c8f3:	xor    DWORD PTR ds:0x55197071,0xfffffffb
  41c8fa:	cmc    
  41c8fb:	jmp    DWORD PTR [edx-0x73]
  41c8fe:	push   cs
  41c8ff:	lea    ebp,[ebp-0xc]
  41c902:	cli    
  41c903:	ss inc ebp
  41c905:	pop    ss
  41c906:	jmp    0xd556:0x100be2fe
  41c90d:	pop    ss
  41c90e:	jmp    0x41c90e
  41c910:	xor    al,BYTE PTR [esi]
  41c912:	or     al,0xb8
  41c914:	scas   al,BYTE PTR es:[edi]
  41c915:	add    al,0xfb
  41c917:	adc    eax,0x40141d
  41c91c:	ret    
  41c91d:	sub    eax,esp
  41c91f:	pop    edi
  41c920:	aas    
  41c921:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c922:	cld    
  41c923:	mov    ch,ah
  41c925:	cmp    BYTE PTR [esp+esi*2+0x5486e5c6],0xd9
  41c92d:	add    DWORD PTR [edx-0x98232ec],ecx
  41c933:	or     eax,0xfa8002e9
  41c938:	xchg   esp,eax
  41c939:	popf   
  41c93a:	xor    eax,0x7ba0b307
  41c93f:	iret   
  41c940:	pop    esp
  41c941:	sbb    al,0xd3
  41c943:	jb     0x41c8ff
  41c945:	aad    0x4
  41c947:	add    BYTE PTR [ecx+0x1e],al
  41c94a:	popf   
  41c94b:	cmp    BYTE PTR [eax-0x11],0x81
  41c94f:	jmp    0x41c971
  41c951:	xchg   edi,eax
  41c952:	add    BYTE PTR [eax],al
  41c954:	add    bh,ah
  41c956:	jno    0x41c9d3
  41c958:	jb     0x41c8e6
  41c95a:	push   ds
  41c95b:	inc    edi
  41c95c:	or     bl,cl
  41c95e:	addr16 jns 0x41c9a4
  41c961:	mov    al,0xa3
  41c963:	scas   eax,DWORD PTR es:[edi]
  41c964:	adc    bl,ah
  41c966:	lds    eax,FWORD PTR [eax+0x0]
  41c969:	or     eax,0x1f1be45b
  41c96e:	popa   
  41c96f:	loopne 0x41c8f7
  41c971:	sar    bl,1
  41c973:	fisttp DWORD PTR [eax+0x291a03da]
  41c979:	or     eax,0x212fe7db
  41c97e:	cmp    ebp,eax
  41c980:	dec    edi
  41c981:	int3   
  41c982:	iret   
  41c983:	inc    edx
  41c984:	inc    esp
  41c985:	xchg   esp,eax
  41c986:	xchg   edi,eax
  41c987:	jg     0x41c9cc
  41c989:	jo     0x41c986
  41c98b:	push   ebx
  41c98c:	mov    ebx,ebx
  41c98e:	dec    ebx
  41c98f:	dec    esi
  41c990:	sbb    BYTE PTR [edx+eiz*2-0x10],ah
  41c994:	sbb    dl,0xb2
  41c997:	lods   eax,DWORD PTR ds:[esi]
  41c998:	xor    eax,0x1fe7f30d
  41c99d:	sbb    eax,0xfc23e813
  41c9a2:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c9a4:	cld    
  41c9a5:	jecxz  0x41c9bc
  41c9a7:	xor    BYTE PTR [esp+ebp*4],ah
  41c9aa:	xchg   edi,eax
  41c9ab:	jnp    0x41c9f0
  41c9ad:	js     0x41c966
  41c9af:	jns    0x41c9f3
  41c9b1:	pushf  
  41c9b2:	add    BYTE PTR [edx+0x3c],dh
  41c9b5:	nop
  41c9b6:	jne    0x41c95e
  41c9b8:	adc    eax,DWORD PTR [eax]
  41c9ba:	adc    edi,DWORD PTR [ebx+ecx*1]
  41c9bd:	hlt    
  41c9be:	sbb    al,BYTE PTR [ebx+eax*1-0x8]
  41c9c2:	cwde   
  41c9c3:	test   BYTE PTR [edi+0x6c009404],dl
  41c9c9:	dec    eax
  41c9ca:	jo     0x41c9d4
  41c9cc:	xchg   edi,eax
  41c9cd:	fwait
  41c9ce:	dec    ebx
  41c9cf:	sbb    ah,bh
  41c9d1:	add    edx,DWORD PTR [eax]
  41c9d3:	shl    ebp,0x87
  41c9d6:	rol    BYTE PTR [ecx],0xe7
  41c9d9:	add    ebp,esi
  41c9db:	fsub   DWORD PTR [ebx+0x30]
  41c9de:	mov    eax,0x779baee4
  41c9e3:	inc    esp
  41c9e4:	out    0x3,eax
  41c9e6:	or     eax,0xa4ae96c0
  41c9eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c9ec:	mov    esp,0xed98769b
  41c9f1:	scas   al,BYTE PTR es:[edi]
  41c9f2:	dec    eax
  41c9f3:	out    dx,eax
  41c9f4:	jno    0x41c9b0
  41c9f6:	sbb    al,BYTE PTR [edi+ecx*8]
  41c9f9:	fnstcw WORD PTR [eax]
  41c9fb:	test   al,0xd5
  41c9fd:	sbb    DWORD PTR [esi-0x4817dd8b],ebx
  41ca03:	push   eax
  41ca04:	(bad)  
  41ca05:	aaa    
  41ca06:	js     0x41c9f4
  41ca08:	mov    ebp,0x270ebc18
  41ca0d:	add    al,0x15
  41ca0f:	mov    ebp,0x75be19da
  41ca14:	and    ch,al
  41ca16:	mov    edi,0x54608f48
  41ca1b:	add    bh,ah
  41ca1d:	add    BYTE PTR [eax],0x57
  41ca20:	fsubr  QWORD PTR [edx]
  41ca22:	push   esp
  41ca23:	sbb    eax,0xa4af16c0
  41ca28:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ca29:	mov    ah,0x9b
  41ca2b:	rcr    BYTE PTR [esi-0x7cfd8a01],1
  41ca31:	mov    edi,0x437abdf5
  41ca36:	or     eax,0xf4fd5078
  41ca3b:	outs   dx,DWORD PTR ds:[esi]
  41ca3c:	adc    al,BYTE PTR [eax-0x17]
  41ca3f:	cs mov edi,0x660fe200
  41ca45:	call   0xbfc5bc91
  41ca4a:	out    dx,al
  41ca4b:	adc    edi,DWORD PTR [ecx+0x7b97e8ff]
  41ca51:	inc    ebx
  41ca52:	add    eax,0x2e8950b0
  41ca57:	out    0xa5,eax
  41ca59:	xor    BYTE PTR [esi],bl
  41ca5b:	sbb    DWORD PTR [edi-0x5bbdfeaa],0xb8eed7fc
  41ca65:	xchg   dl,ch
  41ca67:	jmp    FWORD PTR [ecx-0x3]
  41ca6a:	(bad)  
  41ca6b:	sub    DWORD PTR [eax+0x7a3f8348],ebx
  41ca71:	jnp    0x41ca38
  41ca73:	out    0x48,eax
  41ca75:	call   0x429fb5
  41ca7a:	ins    BYTE PTR es:[edi],dx
  41ca7b:	int3   
  41ca7c:	fcomp  QWORD PTR [edi+0x39]
  41ca7f:	mov    bl,0x43
  41ca81:	and    al,0xd
  41ca83:	add    al,al
  41ca85:	jns    0x41ca4b
  41ca87:	sbb    DWORD PTR [esi-0x2c],edi
  41ca8a:	pop    esp
  41ca8b:	ins    BYTE PTR es:[edi],dx
  41ca8c:	pushf  
  41ca8d:	jecxz  0x41cb0e
  41ca8f:	jmp    0x1429cb2b
  41ca94:	add    BYTE PTR [esp+edi*8-0x7d053396],ah
  41ca9b:	test   eax,0x158926bc
  41caa0:	cld    
  41caa1:	test   BYTE PTR [eax-0x77309261],0x0
  41caa8:	mov    cl,0x98
  41caaa:	adc    BYTE PTR [ecx+0x5],dl
  41caad:	inc    ebp
  41caae:	jmp    0xbcc115b1
  41cab3:	je     0x41ca4a
  41cab5:	sub    DWORD PTR [ecx+0x24],esi
  41cab8:	shl    DWORD PTR [edi],0xdc
  41cabb:	mov    ebp,DWORD PTR [esi-0x66db86d9]
  41cac1:	daa    
  41cac2:	dec    ecx
  41cac3:	cmp    BYTE PTR [ecx+0x5beb3a8a],dh
  41cac9:	push   ebp
  41caca:	add    al,0xe1
  41cacd:	jecxz  0x41ca55
  41cacf:	add    edi,DWORD PTR [esi-0x4]
  41cad2:	imul   eax,DWORD PTR [edx*2+0x6d40747e],0x8927e852
  41cadd:	push   esi
  41cade:	sti    
  41cadf:	mov    edi,DWORD PTR [ebx-0x7f]
  41cae2:	inc    DWORD PTR [ebx]
  41cae4:	jle    0x41ca8f
  41cae6:	push   ebx
  41cae7:	inc    DWORD PTR [eax]
  41cae9:	loope  0x41ca88
  41caeb:	sub    BYTE PTR [ecx-0x7b],dl
  41caee:	or     eax,0x34afeec
  41caf3:	aaa    
  41caf4:	mov    edi,DWORD PTR [eax-0x5a880457]
  41cafa:	test   al,cl
  41cafc:	jmp    0x41cb59
  41cafe:	push   ebp
  41caff:	xchg   DWORD PTR [esi],eax
  41cb01:	dec    edx
  41cb02:	out    dx,al
  41cb03:	and    ebp,DWORD PTR [eax]
  41cb05:	mov    ah,0x3c
  41cb07:	sub    BYTE PTR [ebx+0x2c442b2e],cl
  41cb0d:	inc    ebp
  41cb0e:	sbb    ebp,eax
  41cb10:	dec    BYTE PTR [edx+0x8]
  41cb13:	adc    al,0x56
  41cb15:	aad    0x1b
  41cb17:	jmp    0xfe74061a
  41cb1c:	jmp    0xed94:0x5fbcafef
  41cb23:	inc    esi
  41cb24:	mov    ecx,esi
  41cb26:	aam    0xc1
  41cb28:	add    edx,DWORD PTR [esp+eax*1+0x7417eb77]
  41cb2f:	and    al,0x51
  41cb31:	push   0x22
  41cb33:	ss or  al,0x14
  41cb36:	xchg   esi,eax
  41cb37:	cld    
  41cb38:	jmp    FWORD PTR [edx-0x52]
  41cb3b:	test   eax,esi
  41cb3d:	xchg   esp,eax
  41cb3e:	xchg   edi,eax
  41cb3f:	add    BYTE PTR [ecx+0x627f9f2a],cl
  41cb45:	test   al,0x97
  41cb47:	jge    0x41cb8b
  41cb49:	mov    al,ds:0x161687
  41cb4e:	inc    edx
  41cb4f:	dec    edi
  41cb50:	mov    bh,0xa0
  41cb52:	xchg   ebx,eax
  41cb53:	out    dx,al
  41cb54:	ja     0x41cb2d
  41cb56:	sbb    eax,0x5f82a874
  41cb5b:	test   BYTE PTR [ebx],al
  41cb5d:	xor    dl,BYTE PTR [eax+edx*1-0x71]
  41cb61:	(bad)  
  41cb62:	jae    0x41cafb
  41cb64:	push   ss
  41cb65:	sub    bl,BYTE PTR [ecx]
  41cb67:	je     0x41cb3d
  41cb69:	push   edi
  41cb6a:	ins    BYTE PTR es:[edi],dx
  41cb6b:	jns    0x41cbab
  41cb6d:	add    BYTE PTR [ecx+edx*4-0x282e7528],dl
  41cb74:	dec    eax
  41cb75:	call   0x42255d
  41cb7a:	adc    esp,edx
  41cb7c:	iret   
  41cb7d:	dec    edi
  41cb7e:	cmp    ecx,DWORD PTR [eax+ebp*4+0x50]
  41cb82:	cmp    al,0x26
  41cb84:	mov    ds:0xb9222bfc,al
  41cb89:	dec    esi
  41cb8a:	les    ecx,FWORD PTR [edx]
  41cb8c:	pushf  
  41cb8d:	mov    dh,BYTE PTR [edx]
  41cb8f:	data16 test al,0x50
  41cb92:	and    esp,ebx
  41cb94:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cb95:	xchg   BYTE PTR [ecx+0x53],dl
  41cb98:	fwait
  41cb99:	mov    es,WORD PTR [ecx]
  41cb9b:	add    BYTE PTR [esi-0x19168455],ah
  41cba1:	xor    BYTE PTR [ecx+edx*2-0x5a031e81],bl
  41cba8:	lea    ebx,[edi+0x78bf1a24]
  41cbae:	pop    esi
  41cbaf:	pushf  
  41cbb0:	push   ds
  41cbb1:	pushf  
  41cbb2:	add    BYTE PTR [edi+0x3e03e742],ch
  41cbb8:	xlat   BYTE PTR ds:[ebx]
  41cbb9:	pop    ebx
  41cbba:	sub    esp,eax
  41cbbc:	inc    edi
  41cbbd:	dec    edi
  41cbbe:	adc    eax,0x7ee70056
  41cbc3:	fmul   DWORD PTR [edi+0x64]
  41cbc6:	inc    ecx
  41cbc7:	aam    0x4f
  41cbc9:	pop    esp
  41cbca:	inc    ecx
  41cbcb:	mov    eax,0x38e6d14f
  41cbd0:	jae    0x41cb85
  41cbd2:	xchg   DWORD PTR [ebx+0x4],edi
  41cbd5:	push   es
  41cbd6:	stos   DWORD PTR es:[edi],eax
  41cbd7:	mov    BYTE PTR [eax-0x3ee907de],al
  41cbdd:	call   0xe2cc:0x71b30cc0
  41cbe4:	jne    0x41cb79
  41cbe6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cbe7:	push   ds
  41cbe8:	ds setl cl
  41cbec:	xchg   edi,eax
  41cbed:	add    al,0xab
  41cbef:	push   ss
  41cbf0:	shl    DWORD PTR [edx-0x12],0xbb
  41cbf4:	jl     0x41cc64
  41cbf6:	inc    ebx
  41cbf7:	xchg   esp,eax
  41cbf8:	push   ss
  41cbf9:	jecxz  0x41cc49
  41cbfb:	(bad)  
  41cbfd:	fistp  WORD PTR [ebx-0x5523684b]
  41cc03:	push   ss
  41cc04:	rcr    DWORD PTR [edx-0x1d],0x1c
  41cc08:	fistp  QWORD PTR ds:[esi-0x32]
  41cc0c:	test   al,0x71
  41cc0e:	push   eax
  41cc0f:	sbb    al,dh
  41cc11:	mov    eax,ds:0x11af7b
  41cc16:	pusha  
  41cc17:	add    bh,cl
  41cc19:	xor    BYTE PTR [edi+0x577bc419],al
  41cc1f:	and    DWORD PTR [esi+0x731d577b],esi
  41cc25:	ds or  al,0xaf
  41cc28:	push   edi
  41cc29:	hlt    
  41cc2a:	(bad)  
  41cc2b:	jg     0x41cc4c
  41cc2d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cc2e:	cld    
  41cc2f:	jmp    0x913a128e
  41cc34:	lods   eax,DWORD PTR ds:[esi]
  41cc35:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cc36:	cld    
  41cc37:	jbe    0x41cbe8
  41cc39:	clc    
  41cc3a:	psubsw mm2,QWORD PTR [edi-0x12ac9368]
  41cc41:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cc42:	mov    BYTE PTR [ecx+0x14],al
  41cc45:	leave  
  41cc46:	or     al,0x6d
  41cc48:	test   BYTE PTR [ebp+0x361c4efc],ah
  41cc4e:	or     al,0x98
  41cc50:	jg     0x41cc52
  41cc52:	adc    cl,ch
  41cc54:	xchg   edi,eax
  41cc55:	ja     0x41cc97
  41cc57:	out    dx,eax
  41cc58:	out    0xa5,eax
  41cc5a:	jne    0x41cc3d
  41cc5c:	cs push cs
  41cc5e:	nop
  41cc5f:	cld    
  41cc60:	xlat   BYTE PTR ds:[ebx]
  41cc61:	add    BYTE PTR [ecx-0x7d0a67df],al
  41cc67:	sar    BYTE PTR [esi],cl
  41cc69:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cc6a:	cld    
  41cc6b:	push   0xffffffac
  41cc6d:	hlt    
  41cc6e:	(bad)  
  41cc6f:	jnp    0x41cbff
  41cc71:	push   ss
  41cc72:	add    esp,DWORD PTR [ecx+0x718c18e7]
  41cc78:	xlat   BYTE PTR ds:[ebx]
  41cc79:	add    BYTE PTR [ecx+0x1],dl
  41cc7c:	add    BYTE PTR [ecx+ebx*4+0x3ebfe6fd],bh
  41cc83:	or     al,0xd1
  41cc85:	(bad)  
  41cc86:	scas   al,BYTE PTR es:[edi]
  41cc87:	cld    
  41cc88:	(bad)  
  41cc89:	test   eax,0xd8ce083e
  41cc8e:	cld    
  41cc8f:	call   0x719b4494
  41cc94:	or     al,0x86
  41cc96:	ins    DWORD PTR es:[edi],dx
  41cc97:	fs xchg esp,eax
  41cc99:	lds    edi,FWORD PTR [eax+eax*1]
  41cc9c:	push   0xfffffff8
  41cc9e:	aaa    
  41cc9f:	call   0xfb99affb
  41cca4:	pop    ecx
  41cca5:	push   esp
  41cca6:	jge    0x41cc9c
  41cca8:	push   edx
  41ccaa:	and    dh,dh
  41ccac:	(bad)  
  41ccad:	adc    bl,BYTE PTR [ecx+0x62]
  41ccb0:	(bad)  
  41ccb1:	jmp    0x3e4bd5ac
  41ccb6:	mov    esp,0xfe4582fe
  41ccbb:	jae    0x41cccd
  41ccbd:	xor    dl,bl
  41ccbf:	or     ecx,DWORD PTR [ebp-0x72b2fefa]
  41ccc5:	shl    esi,0x4c
  41ccc8:	call   0x3c51cc
  41cccd:	lods   al,BYTE PTR ds:[esi]
  41ccce:	loope  0x41ccdb
  41ccd0:	mov    ebp,eax
  41ccd2:	stos   BYTE PTR es:[edi],al
  41ccd3:	ret    0x7504
  41ccd6:	stos   DWORD PTR es:[edi],eax
  41ccd7:	sti    
  41ccd8:	inc    ebp
  41ccd9:	jno    0x41cd00
  41ccdb:	inc    edx
  41ccdc:	or     al,0xbb
  41ccde:	add    BYTE PTR [eax],bl
  41cce0:	or     al,BYTE PTR [eax]
  41cce2:	mov    dl,0xe1
  41cce4:	or     ecx,DWORD PTR [ebx+0x4d87a638]
  41ccea:	jno    0x41cd69
  41ccec:	pop    esp
  41cced:	js     0x41cd5c
  41ccef:	daa    
  41ccf0:	push   ebp
  41ccf1:	jo     0x41ccd7
  41ccf3:	in     al,0x73
  41ccf5:	data16 jp 0x41cd34
  41ccf8:	jl     0x41ccfa
  41ccfa:	cmp    eax,0x135efe2e
  41ccff:	xor    eax,0xfe45c2c5
  41cd04:	xchg   BYTE PTR [eax+0x39],al
  41cd07:	push   ecx
  41cd08:	sti    
  41cd09:	je     0x41cc9f
  41cd0b:	repz sti 
  41cd0d:	mov    bl,BYTE PTR [edi+ebp*4-0x307f407d]
  41cd14:	push   ebx
  41cd15:	jmp    0x57af:0xd7af6312
  41cd1c:	scas   eax,DWORD PTR es:[edi]
  41cd1d:	xlat   BYTE PTR ds:[ebx]
  41cd1e:	arpl   WORD PTR [ebp-0x4],dx
  41cd21:	jmp    DWORD PTR [eax+0x2e]
  41cd24:	xchg   ebp,eax
  41cd25:	add    BYTE PTR [eax],0xcc
  41cd28:	push   ebx
  41cd29:	push   esi
  41cd2a:	pop    ds
  41cd2b:	mov    DWORD PTR [ebx+0x45],edi
  41cd2e:	jl     0x41cd4e
  41cd30:	cmp    DWORD PTR [ebx+eax*2],eax
  41cd33:	xor    BYTE PTR [esi-0x8],cl
  41cd36:	sbb    eax,0xdd82a7dd
  41cd3b:	call   0x8100:0x97947f7c
  41cd42:	cmp    eax,0x7300a3
  41cd47:	push   esp
  41cd48:	int    0xef
  41cd4a:	mov    ch,BYTE PTR [ecx]
  41cd4c:	xor    ecx,DWORD PTR [ecx-0x18]
  41cd4f:	sbb    ebx,DWORD PTR [eax+0x0]
  41cd52:	add    BYTE PTR [ebx-0x1bedc0de],cl
  41cd58:	xchg   edx,eax
  41cd59:	outs   dx,DWORD PTR ds:[esi]
  41cd5a:	inc    ebp
  41cd5b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cd5c:	xchg   DWORD PTR [ebx-0x3c],edi
  41cd5f:	in     al,0xbd
  41cd61:	or     BYTE PTR [ebp+0x9],bl
  41cd64:	test   BYTE PTR [edi+eiz*8-0x3584bf9],dh
  41cd6b:	pop    ss
  41cd6c:	shl    esp,cl
  41cd6e:	adc    BYTE PTR [ebx+ecx*4+0x11],0x89
  41cd73:	dec    edx
  41cd74:	cs leave 
  41cd76:	mov    cl,bl
  41cd78:	mov    ds:0xaa13e84e,eax
  41cd7d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cd7e:	cld    
  41cd7f:	sbb    bh,dl
  41cd81:	sub    eax,0xaf001721
  41cd86:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cd87:	cmp    al,0xe4
  41cd89:	push   eax
  41cd8a:	add    cl,ch
  41cd8c:	call   0x7e8d5c0
  41cd91:	(bad)  
  41cd92:	lds    ecx,FWORD PTR [esi]
  41cd94:	sub    bh,bl
  41cd96:	sbb    ebp,DWORD PTR [eax+0x1504272b]
  41cd9c:	rcr    dl,0x9b
  41cd9f:	int    0x96
  41cda1:	lods   al,BYTE PTR ds:[esi]
  41cda2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cda3:	push   ss
  41cda4:	rcl    BYTE PTR [ecx-0x64c4e335],0x7b
  41cdab:	add    BYTE PTR [ebx-0x23ce6a04],ch
  41cdb1:	je     0x41cdde
  41cdb3:	cld    
  41cdb4:	sar    DWORD PTR [edi],1
  41cdb6:	jecxz  0x41cdbc
  41cdb8:	sbb    eax,0x539c7b3b
  41cdbd:	mov    eax,ds:0xc017a775
  41cdc2:	repnz les eax,FWORD PTR [eax+eax*8-0x48b2ba3b]
  41cdca:	sub    BYTE PTR [eax],al
  41cdcc:	xchg   esp,eax
  41cdcd:	dec    ebp
  41cdce:	mov    esp,0xef2f0d4d
  41cdd3:	jp     0x41ce26
  41cdd5:	cld    
  41cdd6:	jno    0x41cd72
  41cdd8:	push   ss
  41cdd9:	shl    DWORD PTR [edx-0x2ce6f417],0x4
  41cde0:	out    dx,al
  41cde1:	add    dl,BYTE PTR [edx+0x74379d30]
  41cde7:	sub    al,0x8c
  41cde9:	sub    bh,bh
  41cdeb:	xor    ah,dl
  41cded:	add    BYTE PTR [edx-0x3c],ch
  41cdf0:	xchg   DWORD PTR [eax-0x5fa66372],ebp
  41cdf6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cdf7:	adc    BYTE PTR [ebx],0x16
  41cdfa:	in     al,0x82
  41cdfc:	push   ebx
  41cdfd:	mov    al,ds:0x899001ff
  41ce02:	inc    ebp
  41ce03:	in     eax,0xbf
  41ce05:	aaa    
  41ce06:	sbb    al,0x72
  41ce08:	fnsetpm(287 only) 
  41ce0a:	sysenter 
  41ce0c:	scas   eax,DWORD PTR es:[edi]
  41ce0d:	(bad)
  41ce10:	add    cl,bh
  41ce12:	pushf  
  41ce13:	cld    
  41ce14:	gs push edi
  41ce16:	adc    al,0xe3
  41ce18:	cli    
  41ce19:	xlat   BYTE PTR ds:[ebx]
  41ce1a:	cmp    eax,0x3d6225b
  41ce1f:	add    BYTE PTR [edx+0x58],ah
  41ce22:	clc    
  41ce23:	xor    BYTE PTR [ecx],0x94
  41ce26:	add    BYTE PTR [ecx+ecx*8+0x6e],dh
  41ce2a:	fild   WORD PTR [ebx]
  41ce2c:	cmp    ch,BYTE PTR [edi+0x3b]
  41ce2f:	and    al,0xe1
  41ce31:	push   edx
  41ce32:	mov    esi,DWORD PTR [edi-0x3b]
  41ce35:	inc    ebp
  41ce36:	cmp    DWORD PTR [edi-0x192dd037],0x593cf27f
  41ce40:	ins    BYTE PTR es:[edi],dx
  41ce41:	xlat   BYTE PTR ds:[ebx]
  41ce42:	adc    al,BYTE PTR [ebx]
  41ce44:	push   0xffffffff
  41ce46:	pushf  
  41ce47:	call   0xc1a17537
  41ce4c:	in     eax,0x97
  41ce4e:	or     eax,0x8993b8b5
  41ce53:	ds icebp 
  41ce55:	dec    ecx
  41ce56:	pop    esi
  41ce57:	(bad)  
  41ce58:	jmp    0x2a7cef4
  41ce5d:	pop    edx
  41ce5e:	cmp    eax,0x9916ec71
  41ce63:	arpl   WORD PTR [edx+0x260f8994],di
  41ce69:	aad    0x4
  41ce6b:	data16 jb 0x41ce2e
  41ce6e:	hlt    
  41ce6f:	imul   ebp,eax,0xe14f8781
  41ce75:	add    bh,bh
  41ce77:	scas   al,BYTE PTR es:[edi]
  41ce78:	add    BYTE PTR [eax],al
  41ce7a:	cmp    al,0x3
  41ce7c:	das    
  41ce7d:	sar    BYTE PTR [esi+0x30],0x87
  41ce81:	in     al,dx
  41ce82:	scas   al,BYTE PTR es:[edi]
  41ce83:	ja     0x41ce95
  41ce85:	sub    al,0x5f
  41ce88:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ce89:	inc    ebx
  41ce8a:	cmp    eax,0x62564f03
  41ce8f:	xchg   ebp,eax
  41ce90:	add    BYTE PTR [ebx-0x17fffcd2],0x47
  41ce97:	outs   dx,BYTE PTR ds:[esi]
  41ce98:	cli    
  41ce99:	inc    DWORD PTR [ecx-0x3c7bf43c]
  41ce9f:	add    DWORD PTR [eax],eax
  41cea1:	add    BYTE PTR [esi-0x19],ch
  41cea4:	or     eax,DWORD PTR [eax]
  41cea6:	ficomp DWORD PTR [esi]
  41cea8:	imul   eax,DWORD PTR [ebx],0x7d7f02fd
  41ceae:	in     eax,dx
  41ceaf:	add    cl,BYTE PTR [ebx]
  41ceb1:	mov    cs,WORD PTR [edi+0x76000001]
  41ceb7:	out    dx,eax
  41ceb8:	pop    es
  41ceb9:	push   esi
  41ceba:	and    eax,0x4afff543
  41cebf:	cmp    BYTE PTR [edi+ecx*1-0xcccf],0xad
  41cec7:	pop    ss
  41cec8:	cmp    ch,ah
  41ceca:	scas   eax,DWORD PTR es:[edi]
  41cecb:	inc    edx
  41cecc:	add    BYTE PTR [ebx+0x402ab9],bh
  41ced2:	fisub  WORD PTR [ebx-0x2d]
  41ced5:	call   0x3d44e1
  41ceda:	add    BYTE PTR [esi+ebx*8],al
  41cedd:	sti    
  41cede:	adc    ebp,0x63
  41cee1:	or     eax,DWORD PTR [esi+edx*4+0x54ffffff]
  41cee8:	ret    0x84
  41ceeb:	jge    0x41ceef
  41ceed:	inc    DWORD PTR [eax*2-0x6bffbfd6]
  41cef4:	sub    ch,BYTE PTR [esp+esi*2]
  41cef7:	xchg   esp,eax
  41cef8:	je     0x41cef4
  41cefa:	jg     0x41cec8
  41cefc:	test   BYTE PTR [eax],al
  41cefe:	je     0x41cea4
  41cf00:	sahf   
  41cf01:	sub    eax,0xf51d4310
  41cf06:	out    0x1,eax
  41cf08:	xchg   ecx,eax
  41cf09:	mov    ds:0xff043dfc,eax
  41cf0e:	call   DWORD PTR [edx+edx*1+0x214f88c9]
  41cf15:	inc    esi
  41cf16:	in     al,dx
  41cf17:	sub    al,0x11
  41cf19:	xchg   esp,eax
  41cf1a:	cld    
  41cf1b:	adc    edx,DWORD PTR [ecx]
  41cf1d:	ds lock (bad) 
  41cf20:	sbb    al,BYTE PTR [bx+0x5b59]
  41cf25:	jne    0x41cf69
  41cf27:	call   0x1f920f4c
  41cf2c:	in     eax,dx
  41cf2d:	mov    bl,0x30
  41cf2f:	loop   0x41ced3
  41cf31:	mov    edx,0x7d7f73
  41cf36:	jmp    DWORD PTR [edi-0x6b]
  41cf39:	push   eax
  41cf3a:	std    
  41cf3b:	dec    ecx
  41cf3c:	jae    0x41ced6
  41cf3e:	stc    
  41cf3f:	add    bh,cl
  41cf41:	push   ds
  41cf42:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cf43:	adc    esp,0xffffffa6
  41cf46:	jl     0x41cef1
  41cf48:	xchg   esi,eax
  41cf49:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cf4a:	add    BYTE PTR [ecx-0x5167cca7],cl
  41cf50:	pop    ds
  41cf51:	gs xchg esp,eax
  41cf53:	mov    ah,bh
  41cf55:	sub    eax,DWORD PTR [ecx]
  41cf57:	add    BYTE PTR [edx+esi*8+0xec75c5],dl
  41cf5e:	inc    ebp
  41cf5f:	adc    BYTE PTR [ebx-0x18efba97],bl
  41cf65:	(bad)  
  41cf66:	jo     0x41cfe7
  41cf68:	xchg   esp,eax
  41cf69:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cf6a:	add    ch,bh
  41cf6c:	jmp    0x33ddc271
  41cf71:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cf72:	sbb    al,0xa4
  41cf74:	or     al,0x43
  41cf76:	add    ebx,edx
  41cf78:	add    eax,DWORD PTR [esi+eiz*8-0x54766bfd]
  41cf7f:	xchg   edi,eax
  41cf80:	sbb    al,0x88
  41cf82:	bound  eax,QWORD PTR [ebx]
  41cf84:	xchg   esp,eax
  41cf85:	add    BYTE PTR [edx-0x1209394b],dh
  41cf8b:	jb     0x41cf40
  41cf8d:	add    bh,ah
  41cf8f:	add    edi,DWORD PTR [ecx+ecx*2]
  41cf92:	(bad)  
  41cf93:	mov    ds:0xb02b8920,al
  41cf98:	adc    dl,BYTE PTR [eax+0x66]
  41cf9b:	add    al,0x94
  41cf9d:	add    dl,dl
  41cf9f:	cmc    
  41cfa0:	sbb    al,0x80
  41cfa2:	data16 add al,0x0
  41cfa5:	xchg   esp,eax
  41cfa6:	add    BYTE PTR [eax],bl
  41cfa8:	xchg   ecx,eax
  41cfa9:	(bad)  
  41cfaa:	clc    
  41cfab:	pop    ss
  41cfac:	xor    al,0xfc
  41cfae:	sub    BYTE PTR [esi+0x2388e8a2],cl
  41cfb4:	mov    al,0xec
  41cfb6:	adc    eax,0x411c1055
  41cfbb:	out    0x39,eax
  41cfbd:	shl    edx,1
  41cfbf:	jbe    0x41cfb7
  41cfc1:	mov    eax,DWORD PTR [eax]
  41cfc3:	jle    0x41cfde
  41cfc5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cfc6:	popf   
  41cfc7:	sti    
  41cfc8:	ud1    edx,DWORD PTR [edx]
  41cfcb:	fbld   TBYTE PTR [edx+0x479ed486]
  41cfd1:	xchg   esp,eax
  41cfd2:	mov    DWORD PTR [esi],edi
  41cfd4:	xchg   edi,edx
  41cfd6:	or     ebp,DWORD PTR [edi+edi*4-0x78]
  41cfda:	mov    BYTE PTR [esi-0x62ff6bfb],dh
  41cfe0:	mov    ds:0xbb38860,al
  41cfe5:	ins    BYTE PTR es:[edi],dx
  41cfe6:	ins    BYTE PTR es:[edi],dx
  41cfe7:	inc    DWORD PTR [ebx+0x37]
  41cfea:	popf   
  41cfeb:	mov    BYTE PTR [ecx],dh
  41cfed:	and    DWORD PTR [edi],edx
  41cfef:	cld    
  41cff0:	push   0x37
  41cff2:	popf   
  41cff3:	or     al,0x65
  41cff5:	aaa    
  41cff6:	fwait
  41cff7:	cld    
  41cff8:	jmp    0xea31e70f
  41cffd:	and    cl,bh
  41cfff:	daa    
  41d000:	inc    ecx
  41d001:	rol    DWORD PTR [eax],cl
  41d003:	je     0x41cfe8
  41d005:	adc    cl,ch
  41d007:	data16 and BYTE PTR [eax],al
  41d00a:	or     BYTE PTR [esp+edi*8-0x18356517],bl
  41d011:	mov    ebp,fs
  41d013:	pushf  
  41d014:	cld    
  41d015:	jo     0x41cfe3
  41d017:	nop
  41d018:	sub    BYTE PTR [ecx-0x17297b7a],0x97
  41d01f:	add    BYTE PTR [ecx-0x783f4752],cl
  41d025:	jmp    0xaf42d0c1
  41d02a:	or     BYTE PTR [edi],bh
  41d02c:	in     al,dx
  41d02d:	cli    
  41d02e:	or     eax,0x841cfd31
  41d033:	cmp    DWORD PTR [edi+0x6574afe1],0xbda89029
  41d03d:	jg     0x41cfd6
  41d03f:	add    BYTE PTR [ecx-0x7e8e77f],cl
  41d045:	pop    es
  41d046:	loope  0x41d056
  41d048:	hlt    
  41d049:	inc    DWORD PTR [ebp+0x6d7d4a89]
  41d04f:	cmp    DWORD PTR [esi+0x1f7f821],0xdce997e8
  41d059:	fstp   QWORD PTR [ebx-0x77]
  41d05c:	inc    edx
  41d05d:	cmp    eax,0x838322
  41d062:	jge    0x41d063
  41d064:	inc    DWORD PTR [edx]
  41d066:	(bad)  
  41d067:	jo     0x41d015
  41d069:	sub    BYTE PTR [ebp-0x1],0xff
  41d06d:	out    0x0,eax
  41d06f:	in     eax,dx
  41d070:	push   0xbff9fffa
  41d075:	or     eax,DWORD PTR [ebp+ebp*8-0x9fffffc]
  41d07c:	dec    eax
  41d07d:	in     al,dx
  41d07e:	mov    esi,DWORD PTR [ebp+0x3dfffc83]
  41d084:	mov    ch,al
  41d086:	je     0x41d0f1
  41d088:	mov    bh,BYTE PTR [eax+eax*4+0x2d]
  41d08c:	(bad)  
  41d08d:	dec    DWORD PTR [ecx+ecx*2-0x1274b169]
  41d094:	imul   ebx,DWORD PTR [ebx-0x789ebc1a],0x45
  41d09b:	push   ecx
  41d09c:	lea    ecx,[ecx+0xc]
  41d09f:	into   
  41d0a0:	add    eax,0x33d251cb
  41d0a5:	jge    0x41d0a7
  41d0a7:	in     eax,dx
  41d0a8:	(bad)  
  41d0a9:	out    0x73,eax
  41d0ab:	retf   
  41d0ac:	pop    ebp
  41d0ad:	sti    
  41d0ae:	mov    edi,DWORD PTR [eax+0x7997fd50]
  41d0b4:	add    al,0x0
  41d0b6:	add    BYTE PTR [esi+0x76df8778],bh
  41d0bc:	inc    ebx
  41d0bd:	lock cmp edi,ebx
  41d0c0:	mul    DWORD PTR [ecx]
  41d0c2:	cmp    esi,ebx
  41d0c4:	fstp   QWORD PTR ds:0x890ac8ff
  41d0ca:	js     0x41d09d
  41d0cc:	cmp    DWORD PTR [eax+ebp*1-0x11cd6eb],0x0
  41d0d4:	xor    al,BYTE PTR [ebx+0x1390fbc]
  41d0da:	std    
  41d0db:	call   DWORD PTR [ecx+ebp*4+0x1f84428b]
  41d0e2:	sbb    eax,0x29d9c7f8
  41d0e7:	aaa    
  41d0e8:	or     esp,edx
  41d0ea:	push   cs
  41d0eb:	xchg   BYTE PTR [eax+ebp*4],cl
  41d0ee:	add    BYTE PTR [eax],al
  41d0f0:	scas   eax,DWORD PTR es:[edi]
  41d0f1:	loope  0x41d101
  41d0f3:	test   BYTE PTR [eax+ebp*4],dl
  41d0f6:	add    BYTE PTR [eax],al
  41d0f8:	sbb    eax,0x940003d0
  41d0fd:	mov    ecx,ebx
  41d0ff:	dec    edx
  41d100:	dec    eax
  41d101:	jne    0x41d10c
  41d103:	push   eax
  41d104:	cmp    al,0x87
  41d106:	cwde   
  41d107:	cld    
  41d108:	inc    ebx
  41d109:	cmovne esi,eax
  41d10c:	punpckhbw mm5,mm0
  41d10f:	mov    cl,ah
  41d111:	fwait
  41d112:	mov    DWORD PTR [esi],edi
  41d114:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d115:	push   cs
  41d116:	inc    esi
  41d117:	lock psubsb mm5,mm7
  41d11b:	mov    cl,cl
  41d11d:	ret    
  41d11e:	mov    DWORD PTR [esi],edi
  41d120:	mov    BYTE PTR [esi],bl
  41d122:	inc    esi
  41d123:	in     al,dx
  41d124:	sbb    eax,0x59891bd8
  41d129:	retf   
  41d12a:	(bad)  
  41d12b:	aas    
  41d12c:	js     0x41d0d5
  41d12e:	mov    ecx,DWORD PTR [edx+0x0]
  41d131:	(bad)  
  41d132:	mov    esi,0x8868000c
  41d137:	add    BYTE PTR ds:[ecx+0xe],ah
  41d13b:	inc    esi
  41d13c:	lock or eax,0x5988ebf8
  41d142:	jae    0x41d0c7
  41d144:	mov    edi,0xf7830a28
  41d149:	aaa    
  41d14a:	stos   BYTE PTR es:[edi],al
  41d14b:	xchg   DWORD PTR [ecx-0x76ff586c],ecx
  41d151:	pop    ecx
  41d152:	pop    ss
  41d153:	mov    al,ds:0x4f00746f
  41d158:	mov    ?,WORD PTR [esi+0x568c5d9a]
  41d15e:	nop
  41d15f:	push   ebp
  41d160:	adc    ebp,DWORD PTR [eax-0x76599758]
  41d166:	cdq    
  41d167:	jno    0x41d1af
  41d169:	test   BYTE PTR [esi],ah
  41d16b:	rol    DWORD PTR [ebx+edi*1-0x554690c],cl
  41d172:	mov    ds:0xb572a02c,al
  41d177:	and    esp,DWORD PTR [eax-0x50547aa0]
  41d17d:	popa   
  41d17e:	aas    
  41d17f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d180:	add    esi,0xfffffff9
  41d183:	rcr    DWORD PTR [esi+eax*8-0x38363e0b],1
  41d18a:	and    eax,edx
  41d18c:	sar    DWORD PTR [ecx+0x62b9d1f],0xa8
  41d193:	in     eax,dx
  41d194:	lahf   
  41d195:	sub    bl,dh
  41d197:	out    dx,al
  41d198:	pop    ebx
  41d199:	aam    0x0
  41d19b:	inc    eax
  41d19c:	cmp    eax,0xd5c51500
  41d1a1:	stos   DWORD PTR es:[edi],eax
  41d1a2:	popa   
  41d1a3:	aad    0xa4
  41d1a5:	sbb    BYTE PTR [esi-0x29],dl
  41d1a8:	ss lock mov ebx,ebx
  41d1ac:	jno    0x41d1f2
  41d1ae:	lods   al,BYTE PTR ds:[esi]
  41d1af:	xchg   DWORD PTR [edi],esp
  41d1b1:	adc    al,0x1d
  41d1b3:	inc    ebx
  41d1b4:	mov    bh,0x8b
  41d1b6:	stos   DWORD PTR es:[edi],eax
  41d1b7:	in     al,dx
  41d1b8:	jno    0x41d20b
  41d1ba:	lock xchg BYTE PTR [edi],ah
  41d1bd:	sbb    BYTE PTR ds:0x438d8343,cl
  41d1c3:	sbb    BYTE PTR [edx+0x49],ah
  41d1c6:	mov    eax,0xc32026c1
  41d1cb:	test   DWORD PTR [ebx],ebp
  41d1cd:	mov    al,0x7c
  41d1cf:	mov    edx,0x592be5ff
  41d1d4:	xchg   DWORD PTR [eax],ebp
  41d1d6:	jne    0x41d15f
  41d1d8:	inc    edx
  41d1d9:	pop    ecx
  41d1da:	adc    DWORD PTR [ecx],ebp
  41d1dc:	sub    BYTE PTR [edx+0x7d],dh
  41d1df:	nop
  41d1e0:	out    0xe7,eax
  41d1e2:	inc    esp
  41d1e3:	xchg   ebp,eax
  41d1e4:	cld    
  41d1e5:	inc    eax
  41d1e6:	lds    ebx,FWORD PTR [ebx+0x430f46fc]
  41d1ec:	cld    
  41d1ed:	push   ecx
  41d1ee:	shr    DWORD PTR [ebx+0x4c036fc],0xb8
  41d1f5:	stos   BYTE PTR es:[edi],al
  41d1f6:	xchg   edi,eax
  41d1f7:	xchg   ebp,eax
  41d1f8:	adc    bl,BYTE PTR [ecx]
  41d1fa:	data16 fdivr st,st(7)
  41d1fd:	jno    0x41d256
  41d1ff:	test   eax,0xa3008137
  41d204:	pop    eax
  41d205:	inc    eax
  41d206:	jmp    0xdc31c535
  41d20b:	xlat   BYTE PTR ds:[ebx]
  41d20c:	add    BYTE PTR [edx-0xf],ch
  41d20f:	outs   dx,DWORD PTR ds:[esi]
  41d210:	jo     0x41d1f9
  41d212:	not    BYTE PTR [edx]
  41d214:	xchg   ebp,eax
  41d215:	adc    ah,cl
  41d217:	iret   
  41d218:	inc    eax
  41d219:	add    BYTE PTR [eax+0x61],al
  41d21c:	add    edi,0x50eeeede
  41d222:	(bad)  
  41d223:	or     al,0xa8
  41d225:	adc    DWORD PTR [ecx],ebp
  41d227:	nop
  41d228:	xchg   ebp,eax
  41d229:	jb     0x41d204
  41d22b:	and    dl,BYTE PTR [ebx]
  41d22d:	or     al,0xbe
  41d22f:	pushf  
  41d230:	or     ch,bh
  41d232:	fmul   st(3),st
  41d234:	dec    edi
  41d235:	inc    eax
  41d236:	jmp    0x464d9651
  41d23b:	mov    ds:0xeaac739,al
  41d240:	inc    eax
  41d241:	pusha  
  41d242:	cmp    cl,BYTE PTR [ebp-0x77e676d2]
  41d248:	sub    eax,0x40950089
  41d24d:	mov    ecx,0x42550c
  41d252:	push   ebp
  41d253:	mov    esi,0x3af9276c
  41d258:	cwde   
  41d259:	in     al,dx
  41d25a:	adc    ch,ch
  41d25c:	add    edx,DWORD PTR [ebx+0x56]
  41d25f:	es out dx,eax
  41d261:	and    ebx,DWORD PTR [ebx+edx*2]
  41d264:	jbe    0x41d277
  41d266:	clc    
  41d267:	add    BYTE PTR [edx],ah
  41d269:	inc    edx
  41d26a:	add    BYTE PTR [ebx+0xcc082b5],cl
  41d270:	out    dx,al
  41d271:	jp     0x41d26e
  41d273:	je     0x41d27b
  41d275:	fdivr  st,st(2)
  41d277:	adc    eax,0x3c91a9
  41d27c:	test   DWORD PTR [eax-0x7d850019],ebp
  41d282:	hlt    
  41d283:	push   DWORD PTR [eax]
  41d285:	xchg   edx,eax
  41d286:	data16 or BYTE PTR ds:0x9affe513,dl
  41d28d:	or     bl,al
  41d28f:	jmp    DWORD PTR [eax+0xb]
  41d292:	mov    eax,0x54d43d43
  41d297:	jmp    0x41d286
  41d299:	jecxz  0x41d25a
  41d29b:	mov    BYTE PTR ds:0x30030003,ch
  41d2a1:	stos   DWORD PTR es:[edi],eax
  41d2a2:	mov    ah,0x43
  41d2a4:	std    
  41d2a5:	mov    bh,0xdb
  41d2a7:	jne    0x41d2ab
  41d2a9:	mov    BYTE PTR [esp+eiz*2-0x78],dl
  41d2ad:	in     al,dx
  41d2ae:	push   edi
  41d2af:	inc    DWORD PTR [ebx]
  41d2b1:	imul   esi,DWORD PTR [esp+eiz*8],0x2b
  41d2b5:	jne    0x41d31d
  41d2b7:	adc    BYTE PTR [ebx+0x3be52164],al
  41d2bd:	jne    0x41d2a6
  41d2bf:	or     esp,ebp
  41d2c1:	ficomp DWORD PTR [edi-0x1]
  41d2c4:	xchg   esp,eax
  41d2c5:	loope  0x41d2ee
  41d2c7:	xor    edi,ebp
  41d2c9:	jmp    0xa942d002
  41d2ce:	sbb    edx,esi
  41d2d0:	aas    
  41d2d1:	xchg   esp,eax
  41d2d2:	idiv   BYTE PTR ds:0x366a1f5b
  41d2d8:	ret    0xa990
  41d2db:	das    
  41d2dc:	push   esi
  41d2dd:	(bad)  
  41d2df:	test   BYTE PTR [ebp+0x28],bh
  41d2e2:	test   eax,0x908d687
  41d2e7:	xchg   DWORD PTR [ebp-0x4],eax
  41d2ea:	repnz mov ebx,0xbef29b74
  41d2f0:	xchg   dl,dl
  41d2f2:	scas   eax,DWORD PTR es:[edi]
  41d2f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d2f4:	add    eax,0x657eefbf
  41d2f9:	cld    
  41d2fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d2fb:	sub    BYTE PTR [esp+ebx*1],cl
  41d2fe:	imul   eax,DWORD PTR [eax],0xfffffffd
  41d301:	xor    edi,0x2943ff1
  41d307:	sub    dl,BYTE PTR [ebp+0xb]
  41d30a:	mov    ah,0x58
  41d30c:	inc    eax
  41d30d:	xchg   esp,eax
  41d30e:	jbe    0x41d2ab
  41d310:	adc    al,BYTE PTR [edx+edi*4+0x40]
  41d314:	add    BYTE PTR [edi],bl
  41d316:	push   ss
  41d317:	sub    DWORD PTR [ecx],edi
  41d319:	dec    edx
  41d31a:	mov    bh,0x3e
  41d31c:	icebp  
  41d31d:	retf   0x149e
  41d320:	and    al,0x7c
  41d322:	adc    dl,BYTE PTR ds:0x9ad5ac24
  41d328:	adc    cl,BYTE PTR [edi+ebp*2]
  41d32b:	aas    
  41d32c:	add    BYTE PTR [edi],cl
  41d32e:	pusha  
  41d32f:	jg     0x41d2f4
  41d331:	add    BYTE PTR [eax+0x68fc982a],cl
  41d337:	xchg   ecx,eax
  41d338:	xor    edi,ebp
  41d33a:	adc    DWORD PTR [ebx-0x12],0x8f00943f
  41d341:	es out dx,al
  41d343:	xchg   ebp,eax
  41d344:	popf   
  41d345:	or     bl,0x95
  41d348:	sbb    esi,ecx
  41d34a:	cmp    eax,0xbb73ff08
  41d34f:	xchg   ebp,eax
  41d350:	test   DWORD PTR [eax],ecx
  41d352:	fcom   QWORD PTR [ebp+0x41ec0bd3]
  41d358:	out    0x3a,eax
  41d35a:	inc    ebx
  41d35b:	test   eax,0x88d42add
  41d360:	out    0x3,al
  41d362:	xchg   esp,eax
  41d363:	add    esp,esp
  41d365:	jmp    0x41d3b2
  41d367:	inc    ecx
  41d368:	out    0xea,eax
  41d36a:	jecxz  0x41d394
  41d36c:	mov    dh,0x9c
  41d36e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d36f:	nop
  41d370:	fadd   DWORD PTR [ebx-0x6c]
  41d373:	xor    eax,0x3954889d
  41d378:	sub    DWORD PTR [ebx],ecx
  41d37a:	xchg   esp,eax
  41d37b:	sub    esp,DWORD PTR [edx-0x51]
  41d37e:	adc    al,0x9c
  41d380:	push   ds
  41d381:	sub    BYTE PTR [edi+0x7c],0xe6
  41d385:	add    edx,DWORD PTR [ecx+esi*1+0x2de1b8da]
  41d38c:	iret   
  41d38d:	(bad)  
  41d38e:	imul   ebp,DWORD PTR ss:[ecx+0x387c8903],0x940003
  41d399:	dec    DWORD PTR ds:0x86ed9626
  41d39f:	jecxz  0x41d3a5
  41d3a1:	imul   esp,DWORD PTR [ecx+0x1b],0xffffff95
  41d3a5:	out    0xdc,al
  41d3a7:	outs   dx,BYTE PTR ds:[esi]
  41d3a8:	add    al,0xe6
  41d3aa:	jg     0x41d3db
  41d3ac:	add    bh,ah
  41d3ae:	add    ecx,ebx
  41d3b0:	xor    edx,edi
  41d3b2:	or     cl,BYTE PTR [edx]
  41d3b4:	jno    0x41d39c
  41d3b6:	add    edx,DWORD PTR [ecx+ecx*4+0x2e983bff]
  41d3bd:	call   0xfcd5d7d9
  41d3c2:	ins    DWORD PTR es:[edi],dx
  41d3c3:	rol    BYTE PTR [ebx],1
  41d3c5:	test   BYTE PTR [ebx-0x68],ch
  41d3c8:	add    BYTE PTR [eax],al
  41d3ca:	push   esi
  41d3cb:	pushf  
  41d3cc:	pop    eax
  41d3cd:	inc    eax
  41d3ce:	jmp    0x95546759
  41d3d3:	ret    0xffd4
  41d3d6:	nop
  41d3d7:	jmp    0x1bb8d079
  41d3dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d3dd:	xchg   ch,dh
  41d3df:	ret    
  41d3e0:	in     al,dx
  41d3e1:	and    BYTE PTR [edi-0x1],0x10
  41d3e5:	pop    ebp
  41d3e6:	shl    BYTE PTR ds:0x97e8ff7c,1
  41d3ec:	add    DWORD PTR [ebx],esi
  41d3ee:	add    eax,esp
  41d3f0:	inc    eax
  41d3f1:	add    BYTE PTR [eax],al
  41d3f3:	mov    esi,0xeed7634
  41d3f8:	invd   
  41d3fa:	bound  eax,QWORD PTR [eax]
  41d3fc:	push   esi
  41d3fd:	pushf  
  41d3fe:	inc    ebp
  41d3ff:	das    
  41d400:	call   DWORD PTR [eax+ebp*8+0x683638c2]
  41d407:	xchg   edi,eax
  41d408:	dec    ecx
  41d409:	mov    DWORD PTR [edx-0x7],ecx
  41d40c:	cs (bad) 
  41d40f:	bound  edx,QWORD PTR [esi-0x6b]
  41d412:	jb     0x41d405
  41d414:	out    dx,eax
  41d415:	mov    esp,0xa90efefd
  41d41a:	inc    ebx
  41d41b:	test   BYTE PTR [eax+esi*8+0x48438d8a],0xfd
  41d423:	pop    esp
  41d424:	mov    WORD PTR [ebp-0x5cc00e8e],ss
  41d42a:	in     al,dx
  41d42b:	(bad)  
  41d42c:	cs jnp 0x41d472
  41d42f:	add    eax,0xf780fc
  41d434:	shl    al,cl
  41d436:	das    
  41d437:	mov    edi,DWORD PTR [ecx-0xc17eb60]
  41d43d:	(bad)  
  41d43e:	sti    
  41d43f:	push   DWORD PTR [esi-0x46]
  41d442:	in     al,0x73
  41d444:	mov    esp,?
  41d446:	call   DWORD PTR [esi+0x32]
  41d449:	xchg   ecx,eax
  41d44a:	in     al,dx
  41d44b:	adc    bh,BYTE PTR [ebp-0x4]
  41d44e:	cli    
  41d44f:	jne    0x41d40e
  41d451:	jbe    0x41d4c4
  41d453:	or     al,0x12
  41d455:	icebp  
  41d456:	pop    es
  41d457:	dec    eax
  41d459:	ja     0x41d40e
  41d45b:	inc    ebx
  41d45c:	mov    ebp,0xcc07a
  41d461:	xchg   edx,eax
  41d462:	(bad)  
  41d463:	push   esi
  41d464:	mov    ecx,DWORD PTR [eax-0x28]
  41d467:	mov    esi,0x2f073bff
  41d46c:	(bad)  [eax+ebx*8+0x13624c23]
  41d473:	aas    
  41d474:	add    ch,BYTE PTR [ebp-0x1]
  41d477:	mov    BYTE PTR [ecx+ebx*4+0x44],al
  41d47b:	push   eax
  41d47c:	call   0x41b87b
  41d481:	hlt    
  41d482:	shl    DWORD PTR [ebx],cl
  41d484:	and    ch,al
  41d486:	cld    
  41d487:	jae    0x41d4ac
  41d489:	rcl    bl,0x23
  41d48c:	dec    eax
  41d48d:	xchg   ebp,eax
  41d48e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d48f:	pop    ebp
  41d490:	add    BYTE PTR ds:0x3d15face,ch
  41d496:	mov    WORD PTR [eax+eax*1],?
  41d499:	push   cs
  41d49a:	out    0x9e,eax
  41d49c:	call   0x163d4dc3
  41d4a1:	xor    eax,0xd4004037
  41d4a6:	xlat   BYTE PTR ds:[ebx]
  41d4a7:	jle    0x41d471
  41d4a9:	repnz fs mov cl,0x89
  41d4ad:	xchg   esp,eax
  41d4ae:	int    0xdf
  41d4b0:	pop    ss
  41d4b1:	or     eax,0x2c13dfe5
  41d4b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d4b7:	pop    es
  41d4b8:	test   BYTE PTR [esi-0x58],bh
  41d4bb:	add    BYTE PTR [eax],al
  41d4bd:	pop    ds
  41d4be:	imul   ebp,DWORD PTR [ebx-0x699e1252],0xffffff88
  41d4c5:	add    BYTE PTR [ebx+eiz*1+0x2d180cbb],bh
  41d4cc:	add    al,0x0
  41d4ce:	xchg   esp,eax
  41d4cf:	es pop eax
  41d4d1:	and    ebx,DWORD PTR [eax]
  41d4d3:	test   eax,0x8a950000
  41d4d8:	jge    0x41d46a
  41d4da:	xchg   esp,eax
  41d4db:	test   eax,0xc5188900
  41d4e0:	cmp    bh,0xa3
  41d4e3:	test   al,0x83
  41d4e5:	jbe    0x41d477
  41d4e7:	test   eax,0xa8168407
  41d4ec:	add    BYTE PTR [eax],al
  41d4ee:	sbb    DWORD PTR [esp+ebx*8+0x47],esp
  41d4f2:	adc    esp,eax
  41d4f4:	fsub   QWORD PTR [ebx]
  41d4f6:	ins    BYTE PTR es:[edi],dx
  41d4f7:	adc    ah,BYTE PTR [ebx]
  41d4f9:	add    BYTE PTR [edx+edx*8-0x57ebdcb1],dl
  41d500:	add    BYTE PTR [eax],al
  41d502:	or     al,0x5c
  41d504:	fcom   QWORD PTR [edi+ecx*1]
  41d507:	and    al,0xe0
  41d509:	xchg   DWORD PTR [edi+eiz*4-0x77661800],edx
  41d510:	add    BYTE PTR [eax],al
  41d512:	adc    al,0x84
  41d514:	fcom   QWORD PTR [eax]
  41d516:	xchg   esp,eax
  41d517:	mov    bh,BYTE PTR [eax+ecx*1-0x6b]
  41d51b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d51c:	add    BYTE PTR [edx+0x2b],ch
  41d51f:	mov    ecx,DWORD PTR [esp]
  41d522:	push   0x870feda2
  41d527:	add    BYTE PTR [edi],ah
  41d529:	add    al,0x0
  41d52b:	adc    DWORD PTR ds:0xb9f3ec03,ecx
  41d531:	(bad)  
  41d532:	cdq    
  41d533:	add    BYTE PTR [edx-0x6e541fae],dl
  41d539:	(bad)  [ebx-0x7b]
  41d53c:	inc    eax
  41d53d:	out    0x8c,eax
  41d53f:	outs   dx,DWORD PTR ds:[esi]
  41d540:	fadd   QWORD PTR [edx]
  41d542:	jg     0x41d524
  41d544:	add    DWORD PTR [ebx-0x5d],esp
  41d547:	fist   DWORD PTR [ecx-0x23a8791a]
  41d54d:	lods   al,BYTE PTR cs:[esi]
  41d54f:	aas    
  41d550:	and    bh,ah
  41d552:	add    ecx,DWORD PTR ds:0x578cf744
  41d558:	fsubr  st(2),st
  41d55a:	rcl    DWORD PTR [esp+eax*1-0x19],0x8a
  41d55f:	sub    al,0x8
  41d561:	lods   eax,DWORD PTR ds:[esi]
  41d562:	add    al,0xa3
  41d564:	(bad)  
  41d565:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d566:	mov    dl,BYTE PTR [ecx+0x28]
  41d569:	sub    eax,0x50000041
  41d56e:	arpl   WORD PTR [ecx+0x6985591],cx
  41d574:	icebp  
  41d575:	dec    ebp
  41d576:	push   cs
  41d577:	mov    BYTE PTR [eax-0x6e8e5dae],ch
  41d57d:	outs   dx,DWORD PTR ds:[esi]
  41d57e:	aas    
  41d57f:	mov    al,0xf8
  41d581:	imul   eax,ebx,0xffffffe6
  41d584:	clc    
  41d585:	sub    eax,0xe680b74f
  41d58a:	add    edx,DWORD PTR [ebp+eax*4+0x1300df62]
  41d591:	add    bh,ah
  41d593:	add    ebp,DWORD PTR [edi+eax*4]
  41d596:	xchg   BYTE PTR [ebx],al
  41d598:	xchg   esp,eax
  41d599:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d59a:	jae    0x41d59f
  41d59c:	xchg   esp,eax
  41d59d:	add    BYTE PTR ds:0xff919404,ah
  41d5a3:	jl     0x41d5e8
  41d5a5:	inc    ecx
  41d5a6:	mov    DWORD PTR [ebp-0x6017d6c5],esp
  41d5ac:	or     eax,0x5770fc94
  41d5b1:	or     BYTE PTR [ecx+0x10f46d],cl
  41d5b7:	jmp    0xf5824f53
  41d5bc:	push   ds
  41d5bd:	jge    0x41d5e2
  41d5bf:	gs nop
  41d5c1:	add    BYTE PTR [eax],al
  41d5c3:	inc    ebx
  41d5c4:	idiv   BYTE PTR [ecx+0x40]
  41d5c7:	(bad)  [edx*1-0x57701edc]
  41d5ce:	sub    al,0xe1
  41d5d0:	xchg   edi,eax
  41d5d1:	add    BYTE PTR [edx-0x36],ch
  41d5d4:	or     al,0x15
  41d5d6:	and    al,0xc1
  41d5d8:	jg     0x41d582
  41d5da:	and    cl,al
  41d5dc:	xchg   edi,eax
  41d5dd:	add    BYTE PTR [ecx+0x438560a6],cl
  41d5e3:	int    0xbf
  41d5e5:	inc    eax
  41d5e6:	std    
  41d5e7:	hlt    
  41d5e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d5e9:	xchg   ebx,eax
  41d5ea:	jae    0x41d5f9
  41d5ec:	je     0x41d596
  41d5ee:	cli    
  41d5ef:	cmp    eax,0xc698d23
  41d5f4:	add    BYTE PTR [edi],cl
  41d5f6:	mov    eax,0xf85bcd8a
  41d5fb:	push   edi
  41d5fc:	push   ecx
  41d5fd:	cdq    
  41d5fe:	enter  0xe8ff,0x1e
  41d602:	lds    ecx,FWORD PTR [edi-0x66]
  41d605:	or     dl,BYTE PTR [esp]
  41d608:	or     DWORD PTR [eax],ebp
  41d60a:	iret   
  41d60b:	(bad)  [esi]
  41d60d:	sub    ebx,DWORD PTR [edx]
  41d60f:	and    eax,0x7b7b0872
  41d614:	int    0x5f
  41d616:	cmp    al,ch
  41d618:	pop    es
  41d619:	dec    ebx
  41d61a:	nop
  41d61b:	cld    
  41d61c:	add    BYTE PTR [esi+0x2a534c4f],ah
  41d622:	add    BYTE PTR [eax+eiz*1],ah
  41d625:	xchg   ebp,eax
  41d626:	scas   al,BYTE PTR es:[edi]
  41d627:	fdivr  st,st(7)
  41d629:	sub    bh,BYTE PTR [ebp+0x40]
  41d62c:	and    al,0x11
  41d62e:	jle    0x41d670
  41d630:	and    al,0x9d
  41d632:	add    BYTE PTR [edi+edx*2+0x76],dh
  41d636:	mul    DWORD PTR [ebx]
  41d638:	sbb    BYTE PTR [eax+0x76],dh
  41d63b:	jno    0x41d645
  41d63d:	callw  0x614c
  41d641:	mov    BYTE PTR [edi+eiz*8+0x23d77604],dl
  41d648:	adc    al,0x38
  41d64a:	iret   
  41d64b:	and    ebx,DWORD PTR [eax]
  41d64d:	lea    esi,[edi+0x70]
  41d650:	and    al,0xa1
  41d652:	jnp    0x41d613
  41d654:	jmp    DWORD PTR [ecx+0x5770a0]
  41d65a:	adc    eax,0x1affec74
  41d65f:	ja     0x41d6d1
  41d661:	and    al,0x99
  41d663:	jge    0x41d6a5
  41d665:	and    al,0xc5
  41d667:	pop    ebx
  41d668:	nop
  41d669:	loopne 0x41d696
  41d66b:	jbe    0x41d6ec
  41d66d:	jl     0x41d610
  41d66f:	nop
  41d670:	cld    
  41d671:	je     0x41d6ed
  41d673:	stos   BYTE PTR es:[edi],al
  41d674:	jns    0x41d682
  41d676:	popa   
  41d677:	cmp    DWORD PTR [ebp-0x7a736e84],eax
  41d67d:	pop    esp
  41d67e:	mov    eax,ds:0x960be790
  41d683:	jmp    0xdeb54a93
  41d688:	out    0x73,eax
  41d68a:	int    0x75
  41d68c:	sti    
  41d68d:	mov    edi,ecx
  41d68f:	scas   al,BYTE PTR es:[edi]
  41d690:	adc    al,0x85
  41d692:	stos   BYTE PTR es:[edi],al
  41d693:	jmp    FWORD PTR [eax]
  41d695:	lea    edx,[ebp+ebx*2-0x38d3b824]
  41d69c:	xor    eax,0x3d129400
  41d6a1:	and    al,0x88
  41d6a3:	sbb    bl,BYTE PTR [ebx]
  41d6a5:	pusha  
  41d6a6:	xchg   esp,eax
  41d6a7:	and    BYTE PTR [ebx],bh
  41d6a9:	push   0x13dc650f
  41d6ae:	sbb    eax,0x518937df
  41d6b3:	mov    DWORD PTR [edx-0x76668fbb],edi
  41d6b9:	jge    0x41d717
  41d6bb:	and    BYTE PTR [esi],bh
  41d6bd:	fs add ch,bh
  41d6c0:	xlat   BYTE PTR ds:[ebx]
  41d6c1:	xchg   esp,eax
  41d6c2:	cld    
  41d6c3:	jmp    0x41d6e0
  41d6c5:	inc    eax
  41d6c6:	and    al,0x4c
  41d6c8:	rcr    DWORD PTR [eax-0x78666ba3],0x43
  41d6cf:	js     0x41d6d6
  41d6d1:	xchg   DWORD PTR [edx-0x5c],ecx
  41d6d4:	call   0x45be:0x15a86c1
  41d6db:	sub    BYTE PTR [ecx-0x7a4ecb57],bl
  41d6e1:	xchg   edx,eax
  41d6e2:	push   edx
  41d6e3:	pop    ds
  41d6e4:	jge    0x41d669
  41d6e6:	cmp    bh,BYTE PTR [ecx-0x6bffc0bf]
  41d6ec:	jmp    0x742b:0x4d9c5a86
  41d6f3:	add    eax,0x633892eb
  41d6f8:	lods   al,BYTE PTR ds:[esi]
  41d6f9:	daa    
  41d6fa:	aaa    
  41d6fb:	stc    
  41d6fc:	stos   DWORD PTR es:[edi],eax
  41d6fd:	adc    ah,BYTE PTR [esi+0x7c]
  41d700:	push   cs
  41d701:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d702:	std    
  41d703:	imul   esp,DWORD PTR [esp+eax*8],0x73
  41d707:	sar    DWORD PTR [edi-0x682847fc],0x93
  41d70e:	adc    al,BYTE PTR [eax+0x1]
  41d711:	stc    
  41d712:	inc    ebx
  41d713:	xchg   esp,eax
  41d714:	(bad)  
  41d715:	fwait
  41d716:	pop    es
  41d717:	ret    0x1d42
  41d71a:	inc    eax
  41d71b:	cmp    eax,0x670fe805
  41d720:	jns    0x41d6dc
  41d722:	cwde   
  41d723:	add    BYTE PTR [ebx],dh
  41d725:	jb     0x41d72b
  41d727:	xchg   ebp,eax
  41d728:	and    BYTE PTR [edx-0x27586b12],al
  41d72e:	jg     0x41d6f3
  41d730:	sbb    eax,DWORD PTR [ecx]
  41d732:	out    0x3,eax
  41d734:	xchg   ebp,eax
  41d735:	add    ecx,DWORD PTR [edi]
  41d737:	pop    esp
  41d738:	push   esp
  41d739:	add    BYTE PTR [edx+0x1b],ch
  41d73c:	add    BYTE PTR [eax],0x54
  41d73f:	fdiv   DWORD PTR [ebx+0x8]
  41d742:	inc    esp
  41d743:	add    al,0x67
  41d745:	(bad)  
  41d746:	jno    0x41d713
  41d748:	sti    
  41d749:	jle    0x41d718
  41d74b:	xchg   esp,eax
  41d74c:	fadd   DWORD PTR [ebx-0x6968f05a]
  41d752:	out    0x2,al
  41d754:	inc    edi
  41d755:	out    0x25,al
  41d757:	fnstcw WORD PTR [esi]
  41d759:	cld    
  41d75a:	adc    dl,BYTE PTR [esi+0x33]
  41d75d:	cld    
  41d75e:	dec    esi
  41d75f:	inc    eax
  41d760:	xchg   esp,eax
  41d761:	(bad)  
  41d762:	fist   DWORD PTR [ebx-0x6b18bf7b]
  41d768:	es lock jne 0x41d77a
  41d76c:	mov    BYTE PTR [ecx],dh
  41d76e:	outs   dx,BYTE PTR ds:[esi]
  41d76f:	out    dx,al
  41d770:	xchg   ebx,eax
  41d771:	push   ebp
  41d772:	test   eax,0xeac41503
  41d777:	xor    al,0xe2
  41d779:	sub    DWORD PTR [eax+eax*8+0x408efcf3],esi
  41d780:	xchg   esp,eax
  41d781:	(bad)  
  41d782:	fist   DWORD PTR [ebx-0x2f18bf7b]
  41d788:	add    BYTE PTR [ebx],ah
  41d78a:	inc    eax
  41d78b:	add    bh,cl
  41d78d:	push   cs
  41d78e:	inc    ecx
  41d78f:	stc    
  41d790:	out    0x1c,eax
  41d792:	(bad)  
  41d793:	call   0x73f1a1a5
  41d798:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d799:	or     eax,0x8b2083f7
  41d79e:	retf   
  41d79f:	xor    BYTE PTR [ecx],ch
  41d7a1:	pop    ss
  41d7a2:	xchg   esi,eax
  41d7a3:	sub    bh,BYTE PTR [edx+ebp*1+0x17]
  41d7a7:	add    ah,BYTE PTR [ecx-0xf7ffe14]
  41d7ad:	xor    edx,DWORD PTR [edx]
  41d7af:	jmp    FWORD PTR [edx-0x2d0a303f]
  41d7b5:	add    BYTE PTR ds:0xf2a720f7,cl
  41d7bb:	push   0xbdfbfadf
  41d7c0:	mov    al,ds:0x990e1115
  41d7c5:	push   edx
  41d7c6:	jp     0x41d7d1
  41d7c8:	imul   edx,DWORD PTR [ecx],0xcc07add
  41d7ce:	(bad)  
  41d7cf:	jae    0x41d7bb
  41d7d1:	sbb    al,ch
  41d7d3:	(bad)  
  41d7d4:	push   eax
  41d7d5:	xchg   edx,eax
  41d7d6:	adc    al,0x2
  41d7d8:	xchg   esi,eax
  41d7d9:	push   es
  41d7da:	xchg   BYTE PTR [edi+esi*1],dh
  41d7dd:	sar    DWORD PTR [edi+0x24],cl
  41d7e0:	jmp    0xaa99d076
  41d7e5:	ins    DWORD PTR es:[edi],dx
  41d7e6:	ja     0x41d7d3
  41d7e8:	push   0xffffffec
  41d7ea:	xchg   esp,eax
  41d7eb:	add    BYTE PTR [ebp+0x562fbc00],0x16
  41d7f2:	imul   ecx,DWORD PTR [ebp-0x747c1b80],0xffffff87
  41d7f9:	fnstsw WORD PTR [ebx-0xc]
  41d7fc:	or     al,0x6b
  41d7fe:	fwait
  41d7ff:	mov    edi,esp
  41d801:	jmp    0x66181a
  41d806:	jne    0x41d7d8
  41d808:	out    0xf7,eax
  41d80a:	clc    
  41d80b:	outs   dx,DWORD PTR ds:[esi]
  41d80c:	sti    
  41d80d:	test   BYTE PTR [ebp+0x3c5983ff],ch
  41d813:	add    BYTE PTR [eax],al
  41d815:	xor    edi,DWORD PTR [ebp+0x44]
  41d818:	test   DWORD PTR [ecx+ebx*2-0x5c],eax
  41d81c:	xor    eax,0x85ff3945
  41d821:	cmp    al,0x3c
  41d823:	add    BYTE PTR [eax],al
  41d825:	mov    esi,DWORD PTR [eax]
  41d827:	clc    
  41d828:	adc    DWORD PTR [eax+0x2d],eax
  41d82b:	or     ecx,DWORD PTR [edx+0x10]
  41d82e:	cli    
  41d82f:	in     eax,dx
  41d830:	cli    
  41d831:	dec    DWORD PTR [ecx-0x7b]
  41d834:	push   ebx
  41d835:	call   0x3d7223
  41d83a:	xchg   BYTE PTR [edi-0x7b],ch
  41d83d:	je     0x41d7c8
  41d83f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d840:	aaa    
  41d841:	not    edx
  41d843:	and    DWORD PTR [edx],0x1
  41d846:	std    
  41d847:	(bad)  
  41d848:	jg     0x41d8c7
  41d84a:	icebp  
  41d84b:	push   DWORD PTR [ebx+0xe]
  41d84e:	jnp    0x41d8bf
  41d850:	jno    0x41d85a
  41d852:	add    ch,dl
  41d854:	fs xchg bh,bh
  41d857:	repnz ins BYTE PTR es:[edi],dx
  41d859:	out    0x0,al
  41d85b:	lods   eax,DWORD PTR ds:[esi]
  41d85c:	inc    DWORD PTR [esi-0x42984abb]
  41d862:	mov    ah,BYTE PTR [edx]
  41d864:	outs   dx,DWORD PTR ds:[esi]
  41d865:	test   DWORD PTR [ecx+ebx*8-0x65],eax
  41d869:	mov    DWORD PTR [ecx+ebx*8-0x6d],eax
  41d86d:	dec    esp
  41d86e:	mov    DWORD PTR [ecx-0xc17eb5d],esp
  41d874:	js     0x41d871
  41d876:	(bad)  
  41d877:	stc    
  41d878:	mov    edi,0xff22840b
  41d87d:	(bad)  
  41d87e:	call   DWORD PTR [esp+0x49bc2445]
  41d885:	xchg   ecx,eax
  41d886:	jae    0x41d838
  41d888:	stc    
  41d889:	fwait
  41d88a:	rcr    BYTE PTR [ebx],cl
  41d88c:	retf   0x8891
  41d88f:	enter  0xdbfd,0x86
  41d893:	loopne 0x41d89a
  41d895:	fmul   DWORD PTR [esi+0x1f]
  41d898:	rol    esi,1
  41d89a:	inc    ebx
  41d89b:	js     0x41d852
  41d89d:	add    BYTE PTR [edi-0x79334230],al
  41d8a3:	mov    al,0xc5
  41d8a5:	inc    eax
  41d8a6:	call   0xfcd3ec62
  41d8ab:	sbb    cl,bl
  41d8ad:	add    DWORD PTR [edi+edx*1+0x6a000099],eax
  41d8b4:	jecxz  0x41d8fa
  41d8b6:	and    al,0x0
  41d8b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d8b9:	cdq    
  41d8ba:	(bad)  
  41d8bb:	shr    BYTE PTR [ebx+0x1c],1
  41d8be:	inc    eax
  41d8bf:	and    al,0xc0
  41d8c1:	and    BYTE PTR [eax+0x24],cl
  41d8c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d8c5:	and    BYTE PTR [eax],dl
  41d8c7:	and    al,0x80
  41d8c9:	mov    cl,0x6b
  41d8cb:	(bad)  
  41d8cc:	jecxz  0x41d917
  41d8ce:	jp     0x41d8bf
  41d8d0:	lahf   
  41d8d1:	dec    edx
  41d8d2:	pop    ss
  41d8d3:	popa   
  41d8d4:	push   0x5a
  41d8d6:	mov    dl,0x88
  41d8d8:	pop    eax
  41d8d9:	mov    ebp,0x6a6a4fe0
  41d8de:	pop    ss
  41d8df:	and    al,0x80
  41d8e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d8e2:	shl    bh,0xf5
  41d8e5:	loope  0x41d8ea
  41d8e7:	add    BYTE PTR [eax],dl
  41d8e9:	pop    ecx
  41d8ea:	pop    ss
  41d8eb:	sbb    al,0xa3
  41d8ed:	xchg   esp,eax
  41d8ee:	in     al,0xf
  41d8f0:	or     DWORD PTR [ebp-0x6d83cc1c],edx
  41d8f6:	jg     0x41d8f4
  41d8f8:	mov    eax,DWORD PTR [ecx]
  41d8fa:	imul   eax,esp,0x7
  41d8fd:	clc    
  41d8fe:	pop    ebp
  41d8ff:	inc    eax
  41d900:	mov    al,0xf0
  41d902:	sub    al,0x48
  41d904:	mov    eax,0x68d4e7f9
  41d909:	mov    ch,BYTE PTR [edx-0x4d766c19]
  41d90f:	out    0x8b,eax
  41d911:	jnp    0x41d8b5
  41d913:	out    0x87,eax
  41d915:	cwde   
  41d916:	fwait
  41d917:	or     DWORD PTR [eax-0x76],0x7c009471
  41d91e:	xchg   ecx,eax
  41d91f:	xchg   ebx,eax
  41d920:	push   esi
  41d921:	mov    ebx,0x9400cb0c
  41d926:	adc    al,0xf8
  41d928:	nop
  41d929:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d92a:	in     al,0xbe
  41d92c:	jl     0x41d905
  41d92e:	in     al,0xbe
  41d930:	nop
  41d931:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d932:	in     al,0xc6
  41d934:	fwait
  41d935:	add    al,0x84
  41d937:	in     eax,dx
  41d938:	nop
  41d939:	push   ds
  41d93a:	adc    eax,0x4dfbd40b
  41d93f:	imul   edx,DWORD PTR [eax-0x17a58408],0xffffff87
  41d946:	cwde   
  41d947:	jl     0x41d8d0
  41d949:	call   0xb8599ed7
  41d94e:	loopne 0x41d91e
  41d950:	dec    edx
  41d951:	mov    esi,0x577cb58a
  41d956:	in     al,0x2
  41d958:	inc    esp
  41d959:	adc    eax,DWORD PTR [ebp-0x35]
  41d95c:	out    0x7c,eax
  41d95e:	inc    ebx
  41d95f:	repz add BYTE PTR [esi],dl
  41d962:	mov    bh,0x94
  41d964:	nop
  41d965:	mov    al,0x7b
  41d967:	adc    ch,al
  41d969:	sbb    DWORD PTR [eax-0x765f7890],0x36
  41d970:	add    ch,BYTE PTR [ebp-0x549c000b]
  41d976:	in     al,0x17
  41d978:	sbb    DWORD PTR [edx+0x6966fc84],0xbf5c49
  41d982:	test   al,0x77
  41d984:	loop   0x41d93a
  41d986:	pop    ecx
  41d987:	stc    
  41d988:	call   FWORD PTR [ecx]
  41d98a:	push   eax
  41d98b:	leave  
  41d98c:	push   es
  41d98d:	in     al,dx
  41d98e:	dec    edi
  41d98f:	push   ecx
  41d990:	inc    eax
  41d991:	jmp    0xf14c59e6
  41d996:	fild   WORD PTR [eax+0x0]
  41d999:	jmp    0x41d982
  41d99b:	mov    al,cl
  41d99d:	push   0x42
  41d99f:	shl    DWORD PTR [edi-0x50076856],1
  41d9a5:	call   0xfdcb0802
  41d9aa:	pop    ss
  41d9ab:	popf   
  41d9ac:	imul   DWORD PTR [eax+0x3]
  41d9af:	jge    0x41d9b0
  41d9b1:	call   0x9e98094d
  41d9b6:	call   0x24c52a62
  41d9bb:	js     0x41d9ac
  41d9bd:	out    0xaa,al
  41d9bf:	add    al,0x51
  41d9c1:	rcr    DWORD PTR [ebx-0x58290323],1
  41d9c7:	push   ss
  41d9c8:	std    
  41d9c9:	into   
  41d9ca:	cmp    al,0x86
  41d9cd:	sub    eax,0xd150d4ec
  41d9d2:	stos   DWORD PTR es:[edi],eax
  41d9d3:	(bad)  
  41d9d5:	mov    dh,0x87
  41d9d7:	push   ss
  41d9d8:	std    
  41d9d9:	scas   al,BYTE PTR es:[edi]
  41d9da:	mov    ds:0xac2d86fc,al
  41d9df:	int3   
  41d9e0:	push   eax
  41d9e1:	xchg   ecx,eax
  41d9e2:	jnp    0x41d9c1
  41d9e4:	cld    
  41d9e5:	xchg   esi,eax
  41d9e6:	add    BYTE PTR [edi],ch
  41d9e8:	cdq    
  41d9e9:	xchg   BYTE PTR ds:0x36d8bc,dl
  41d9ef:	jns    0x41d989
  41d9f1:	sbb    al,0xf
  41d9f3:	xor    ebx,esp
  41d9f5:	cld    
  41d9f6:	(bad)  
  41d9f7:	jge    0x41d9ae
  41d9f9:	pop    eax
  41d9fa:	and    al,0x55
  41d9fc:	xchg   DWORD PTR [eax+0x46c57],eax
  41da02:	cmp    ebx,esi
  41da04:	xchg   DWORD PTR [eax+0x47c4f],eax
  41da0a:	cmp    BYTE PTR [eax],bh
  41da0c:	mov    WORD PTR [eax+0x14],?
  41da0f:	(bad)  
  41da11:	and    ebp,DWORD PTR [eax]
  41da13:	call   0x6eb7:0xd52423e8
  41da1a:	(bad)  
  41da1b:	jp     0x41da27
  41da1d:	aad    0xe9
  41da1f:	arpl   bp,di
  41da21:	(bad)  
  41da22:	jmp    FWORD PTR [eax-0x12dbdbc8]
  41da28:	add    al,0x59
  41da2a:	and    al,0x4d
  41da2c:	ins    BYTE PTR es:[edi],dx
  41da2d:	mov    WORD PTR cs:[edx-0x5b077889],ds
  41da34:	lock and ebx,DWORD PTR [esi+eax*2]
  41da38:	jnp    0x41da45
  41da3a:	test   ah,ch
  41da3c:	cld    
  41da3d:	(bad)  
  41da3e:	(bad)  
  41da3f:	cli    
  41da40:	out    dx,eax
  41da41:	and    ebp,DWORD PTR [eax]
  41da43:	push   0xca5823d7
  41da48:	out    dx,eax
  41da49:	and    esp,DWORD PTR [eax+eax*1]
  41da4c:	aad    0x5d
  41da4e:	gs (bad) 
  41da50:	fimul  DWORD PTR [edx]
  41da52:	jno    0x41da78
  41da54:	xchg   ecx,eax
  41da55:	and    DWORD PTR [eax+0x24],0xffffffe5
  41da59:	add    eax,esi
  41da5b:	inc    esp
  41da5c:	xchg   ecx,eax
  41da5d:	xchg   esp,edi
  41da5f:	test   BYTE PTR [ebx],ah
  41da61:	xchg   DWORD PTR [eax+0x3addf],eax
  41da67:	imul   edx,DWORD PTR [edi+eiz*2+0x24d388c6],0x39
  41da6f:	cmp    dl,BYTE PTR [edi-0x6f407dfa]
  41da75:	repz leave 
  41da77:	xchg   al,ah
  41da79:	mov    ch,0xe8
  41da7b:	xchg   al,dl
  41da7d:	mov    ebp,0x12fa58f4
  41da82:	test   DWORD PTR [ebx],esp
  41da84:	push   cs
  41da85:	cdq    
  41da86:	add    BYTE PTR [eax],al
  41da88:	cli    
  41da89:	adc    al,0xc1
  41da8b:	jae    0x41da2b
  41da8d:	mov    edi,0x8eaa44cb
  41da92:	xchg   DWORD PTR [edi-0x6c],edi
  41da95:	cdq    
  41da96:	add    BYTE PTR [esi+0x1f],ah
  41da99:	adc    eax,0x99948be5
  41da9e:	add    BYTE PTR [esi+0x19],ah
  41daa1:	fst    DWORD PTR [esi+eax*1]
  41daa4:	mov    dl,0xa0
  41daa6:	inc    ebp
  41daa7:	cmp    BYTE PTR [ecx+0x70437f7c],ch
  41daad:	push   ecx
  41daae:	xor    BYTE PTR [esi+0x0],ah
  41dab1:	pop    ebx
  41dab2:	push   ebp
  41dab3:	in     al,0x37
  41dab5:	pop    ebx
  41dab6:	mov    bl,0x7b
  41dab8:	inc    ebx
  41dab9:	mov    eax,0x8c128d4d
  41dabe:	stos   DWORD PTR es:[edi],eax
  41dabf:	inc    eax
  41dac0:	add    BYTE PTR ds:0xf3be7d5,cl
  41dac6:	fucom  st(7)
  41dac8:	cmove  esp,DWORD PTR [eax]
  41dacb:	dec    eax
  41dacc:	and    al,0x50
  41dace:	mov    dh,0xf4
  41dad0:	ja     0x41da58
  41dad2:	fld    DWORD PTR [ebx]
  41dad4:	mov    ecx,DWORD PTR [eax-0x3]
  41dad7:	xlat   BYTE PTR ds:[ebx]
  41dad8:	xchg   BYTE PTR [eax-0xb],bl
  41dadb:	inc    edi
  41dadc:	lds    edx,FWORD PTR [eax-0x3]
  41dadf:	xor    eax,DWORD PTR ds:0x3e70094
  41dae5:	lods   al,BYTE PTR ds:[esi]
  41dae6:	test   eax,0xa67bb08c
  41daec:	sbb    BYTE PTR [ebp-0x35],bh
  41daef:	or     ch,al
  41daf1:	jg     0x41db05
  41daf3:	repz js 0x41db45
  41daf6:	(bad)  
  41daf8:	xor    al,0x1d
  41dafa:	mov    edi,0x876f367e
  41daff:	ins    DWORD PTR es:[edi],dx
  41db00:	(bad)  
  41db01:	iret   
  41db02:	fmul   QWORD PTR [edx]
  41db04:	fcmovnu st,st(7)
  41db06:	fdivr  st(6),st
  41db08:	fsub   DWORD PTR [esi+eax*4-0x5e]
  41db0c:	out    0x83,eax
  41db0e:	fst    DWORD PTR [ecx-0x25]
  41db11:	mov    edi,0xc5dadc
  41db16:	xlat   BYTE PTR ds:[ebx]
  41db17:	fsub   st(5),st
  41db19:	add    dl,BYTE PTR [ecx+0x3d]
  41db1c:	or     ebp,esp
  41db1e:	sbb    al,0x3d
  41db20:	add    ebp,eax
  41db22:	inc    edx
  41db23:	sub    cl,bl
  41db25:	repz cmp ch,BYTE PTR [edx]
  41db28:	ret    
  41db29:	not    DWORD PTR [ecx+ecx*4-0x178fb831]
  41db30:	fld    QWORD PTR [ecx-0x72fa7a32]
  41db36:	fwait
  41db37:	add    al,0xc3
  41db39:	cld    
  41db3a:	adc    edx,DWORD PTR [edx]
  41db3c:	in     al,0x8c
  41db3e:	xchg   esp,ebx
  41db40:	retf   0x759b
  41db43:	jns    0x41db2a
  41db45:	mov    WORD PTR ds:0xa601d1a9,cs
  41db4b:	test   eax,0xe4b017d5
  41db50:	mov    esi,0xc586bcc2
  41db55:	jle    0x41dbbe
  41db57:	fmul   QWORD PTR [edx]
  41db59:	pushf  
  41db5a:	test   DWORD PTR [edx-0x7ae74a01],0x9db80573
  41db64:	lods   al,BYTE PTR ds:[esi]
  41db65:	ret    0x8509
  41db68:	cld    
  41db69:	adc    eax,0x4fe7ddbc
  41db6e:	cld    
  41db6f:	cmp    esp,0xffffff8e
  41db72:	mov    ebx,esp
  41db74:	das    
  41db75:	xchg   ecx,eax
  41db76:	sub    ch,BYTE PTR [eax-0x3fff8103]
  41db7c:	mov    ch,BYTE PTR es:[edx+0xce277bc]
  41db83:	push   esi
  41db84:	add    DWORD PTR [eax],eax
  41db86:	mov    esp,0x458099fc
  41db8b:	pop    ds
  41db8c:	js     0x41db4c
  41db8e:	push   0x1d
  41db90:	add    DWORD PTR [edx-0x20],esi
  41db93:	jge    0x41db1a
  41db95:	in     al,0xdf
  41db97:	or     DWORD PTR [esp+edi*8-0x402d6aae],eax
  41db9e:	(bad)  
  41dba0:	sub    ecx,eax
  41dba2:	xchg   esp,eax
  41dba3:	mov    esp,0xf0d8099
  41dba8:	js     0x41db68
  41dbaa:	push   0x1d
  41dbac:	add    DWORD PTR [edx-0x20],esi
  41dbaf:	lea    eax,[eax]
  41dbb1:	call   0xfcc5edc9
  41dbb6:	adc    dl,BYTE PTR [ebp+0x3a72bfd2]
  41dbbc:	sub    al,cl
  41dbbe:	fwait
  41dbbf:	(bad)  
  41dbc0:	sbb    bh,bh
  41dbc2:	adc    BYTE PTR [esi+0xfe52d98],0x84
  41dbc9:	sar    BYTE PTR [ebx],0xa9
  41dbcc:	sbb    al,BYTE PTR [eax]
  41dbce:	inc    ebx
  41dbcf:	xchg   ecx,eax
  41dbd0:	cwde   
  41dbd1:	and    ebp,ecx
  41dbd3:	je     0x5b9dc99
  41dbd9:	jmp    0x7db5b561
  41dbde:	in     al,dx
  41dbdf:	add    cl,ch
  41dbe1:	cli    
  41dbe2:	(bad)  
  41dbe3:	call   FWORD PTR [esi+0x798952d2]
  41dbe9:	mov    al,ds:0xa081890c
  41dbee:	adc    BYTE PTR [ebx-0x79f504f9],al
  41dbf4:	add    esp,edi
  41dbf6:	(bad)  
  41dbf7:	inc    DWORD PTR [ebp+0x7dfffd1c]
  41dbfd:	push   0x7803daf4
  41dc02:	das    
  41dc03:	test   BYTE PTR [esi-0x3e],0x70
  41dc07:	or     eax,DWORD PTR [esi]
  41dc09:	jne    0x41dbef
  41dc0b:	dec    edi
  41dc0c:	hlt    
  41dc0d:	cld    
  41dc0e:	dec    DWORD PTR [edx+0x32fe63a5]
  41dc14:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dc15:	mov    bl,0xda
  41dc17:	psubsw mm3,QWORD PTR [edi]
  41dc1a:	std    
  41dc1b:	(bad)  
  41dc1c:	cmp    eax,0x4447fbab
  41dc21:	cld    
  41dc22:	and    edx,DWORD PTR [eax]
  41dc24:	or     ecx,DWORD PTR [ebx-0x6bb6bb79]
  41dc2a:	sti    
  41dc2b:	xor    al,0xb5
  41dc2d:	fs cmp ecx,0x3b43003d
  41dc34:	adc    DWORD PTR [esp+ecx*1+0x48098072],esp
  41dc3b:	add    al,0x86
  41dc3d:	std    
  41dc3e:	cli    
  41dc3f:	push   eax
  41dc40:	stc    
  41dc41:	cmp    BYTE PTR [esp+esi*2+0x17e58700],0xe8
  41dc49:	and    edx,DWORD PTR [esi-0x6]
  41dc4c:	push   DWORD PTR [esi-0x6be18f42]
  41dc52:	push   edx
  41dc53:	add    ah,dh
  41dc55:	adc    dl,bl
  41dc57:	add    eax,DWORD PTR [edi+0x6f7b8d64]
  41dc5d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dc5e:	pop    edx
  41dc5f:	inc    eax
  41dc60:	or     BYTE PTR [esp+ebx*1-0x2625ffbf],dl
  41dc67:	out    dx,eax
  41dc68:	dec    BYTE PTR [edx+eax*2]
  41dc6b:	add    BYTE PTR [ecx+0x31026eac],cl
  41dc71:	stos   DWORD PTR es:[edi],eax
  41dc72:	scas   al,BYTE PTR es:[edi]
  41dc73:	xchg   BYTE PTR [ebx+0x4f],dh
  41dc76:	and    al,0x3d
  41dc78:	and    al,0x7c
  41dc7a:	jmp    0x71bddf9c
  41dc7f:	mov    bl,0xff
  41dc81:	mov    edx,DWORD PTR ds:0x248e73c1
  41dc87:	cmp    eax,0x98499c24
  41dc8c:	xor    DWORD PTR [ebx],esi
  41dc8e:	cdq    
  41dc8f:	add    BYTE PTR [esi-0x3e],dl
  41dc92:	inc    edx
  41dc93:	sbb    cl,ah
  41dc95:	mov    eax,ds:0xc2560057
  41dc9a:	cmp    dh,al
  41dc9c:	dec    edi
  41dc9d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dc9e:	pop    ecx
  41dc9f:	add    BYTE PTR [ecx],bh
  41dca1:	push   edx
  41dca2:	inc    esp
  41dca3:	repnz mov BYTE PTR [ebx+0x8903bf],bl
  41dcaa:	dec    ebx
  41dcab:	(bad)  
  41dcad:	mov    BYTE PTR [ebx+0x5b89036f],bl
  41dcb3:	jmp    0x1289:0x4984e8f0
  41dcba:	hlt    
  41dcbb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dcbc:	inc    eax
  41dcbd:	add    BYTE PTR [eax+ebx*4-0x63],al
  41dcc1:	add    al,0xfc
  41dcc3:	lahf   
  41dcc4:	add    BYTE PTR [eax],al
  41dcc6:	xchg   esp,eax
  41dcc7:	inc    edi
  41dcc8:	rcr    BYTE PTR [edx+ebx*2+0x0],0x42
  41dccd:	jge    0x41dcc5
  41dccf:	and    al,0xaa
  41dcd1:	das    
  41dcd2:	sbb    eax,0xd333794
  41dcd7:	aas    
  41dcd8:	jecxz  0x41dc5e
  41dcda:	jbe    0x41dc64
  41dcdc:	out    0x31,al
  41dcde:	imul   esi,DWORD PTR [ebp+0x31],0x66fed100
  41dce5:	jo     0x41dc6a
  41dce7:	add    BYTE PTR [esi-0x59826fcc],ch
  41dced:	adc    BYTE PTR [edx+0x7f],ch
  41dcf0:	add    ecx,DWORD PTR [eax-0x3e68a55]
  41dcf6:	xchg   esp,eax
  41dcf7:	or     eax,0x9861898b
  41dcfc:	in     al,0xad
  41dcfe:	xchg   ecx,eax
  41dcff:	cmp    BYTE PTR [ebp+0x12],0x9c
  41dd03:	cwde   
  41dd04:	fsubr  QWORD PTR [ebp+0x126d8281]
  41dd0a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dd0b:	cwde   
  41dd0c:	hlt    
  41dd0d:	lods   eax,DWORD PTR ds:[esi]
  41dd0e:	add    BYTE PTR [ecx-0x7e],dh
  41dd11:	jno    0x41dd58
  41dd13:	nop
  41dd14:	sub    DWORD PTR [ebx+0x4b3c148b],0xeb360eec
  41dd1e:	mov    bl,ah
  41dd20:	cld    
  41dd21:	(bad)  
  41dd22:	ds dec esp
  41dd24:	(bad)  
  41dd26:	ja     0x41dcec
  41dd28:	in     al,0x3e
  41dd2a:	stos   DWORD PTR es:[edi],eax
  41dd2b:	adc    al,BYTE PTR [edx-0x75b76db]
  41dd31:	and    eax,0x7a789045
  41dd36:	inc    esp
  41dd37:	xchg   esp,eax
  41dd38:	cwde   
  41dd39:	or     BYTE PTR [ebx-0x64667de7],ch
  41dd3f:	out    dx,eax
  41dd40:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dd41:	cld    
  41dd42:	mov    BYTE PTR [eax+0x75],ch
  41dd45:	jmp    FWORD PTR [ecx]
  41dd47:	scas   al,BYTE PTR es:[edi]
  41dd48:	mov    ecx,0xc0d7bbc0
  41dd4d:	xor    ah,0xdf
  41dd50:	dec    ecx
  41dd51:	inc    eax
  41dd52:	jmp    0xaa402f3e
  41dd57:	sbb    bh,dh
  41dd59:	aaa    
  41dd5a:	xchg   ecx,eax
  41dd5b:	push   eax
  41dd5c:	add    BYTE PTR [ecx+edi*2],al
  41dd5f:	xchg   esi,eax
  41dd60:	mov    edi,0x3237252
  41dd65:	in     al,dx
  41dd66:	add    DWORD PTR [edx-0x1ee60000],ebx
  41dd6c:	test   al,0x54
  41dd6e:	jo     0x41dcf2
  41dd70:	xchg   esp,eax
  41dd71:	mov    BYTE PTR [eax-0x2d9d100],ah
  41dd77:	push   0x11
  41dd79:	or     DWORD PTR ds:0xfc82c167,0xffffffe9
  41dd80:	adc    BYTE PTR ds:0xe95f0704,bh
  41dd86:	or     al,0x6d
  41dd88:	jne    0x41dd0c
  41dd8a:	cld    
  41dd8b:	jmp    0xfd3f0e55
  41dd90:	push   eax
  41dd92:	aas    
  41dd93:	jmp    0xe64066a8
  41dd98:	loop   0x41de0c
  41dd9a:	(bad)  
  41dd9b:	call   0xedb66137
  41dda0:	retf   0xe00e
  41dda3:	push   0xf
  41dda5:	test   bh,ah
  41dda7:	push   eax
  41dda8:	sub    eax,0x5765fc84
  41ddad:	hlt    
  41ddae:	and    DWORD PTR [edi],0xffffff97
  41ddb1:	add    BYTE PTR [eax],al
  41ddb3:	ins    BYTE PTR es:[edi],dx
  41ddb4:	stos   BYTE PTR es:[edi],al
  41ddb5:	test   eax,0x310c16fa
  41ddba:	call   0xfcc2cd39
  41ddbf:	add    BYTE PTR [ecx+0xa6170bd],al
  41ddc5:	repz fucomip st,st(0)
  41ddc8:	or     BYTE PTR [ebp-0x5],0xff
  41ddcc:	jbe    0x41de3b
  41ddce:	aaa    
  41ddcf:	repz push ecx
  41ddd1:	(bad)  
  41ddd2:	push   ebp
  41ddd3:	lea    esi,[eax+0x54]
  41ddd6:	stc    
  41ddd7:	inc    DWORD PTR [eax]
  41ddd9:	retf   0x4fcb
  41dddc:	call   0x3e28e2
  41dde1:	inc    eax
  41dde2:	mov    esp,0x79ae3b70
  41dde7:	jno    0x41ddc9
  41dde9:	cmp    BYTE PTR [edi],bh
  41ddeb:	lock push eax
  41dded:	xor    al,0xd7
  41ddef:	out    dx,eax
  41ddf0:	mov    DWORD PTR [eax+0x70],ebx
  41ddf3:	test   DWORD PTR [ebp-0xb],ebx
  41ddf6:	arpl   WORD PTR [edx-0x7f86f572],di
  41ddfc:	rol    BYTE PTR [ecx+0x1935fb93],0xd3
  41de03:	aas    
  41de04:	add    al,bh
  41de06:	adc    esp,0x4c880afd
  41de0c:	lea    esi,[eax-0x5717b36c]
  41de12:	stc    
  41de13:	sti    
  41de14:	jmp    ebp
  41de16:	sar    edx,0x8d
  41de19:	xor    BYTE PTR [esp+eiz*8-0x47809a6],dl
  41de20:	push   esi
  41de21:	in     eax,0x89
  41de23:	aam    0xfe
  41de25:	mov    bh,cl
  41de27:	jno    0x41de09
  41de29:	aad    0x7c
  41de2b:	sbb    bh,bh
  41de2d:	push   0xffffff9b
  41de2f:	sbb    eax,0x54168
  41de34:	add    BYTE PTR [eax-0x6b022b7f],bh
  41de3a:	push   ss
  41de3b:	test   DWORD PTR [edi+0x0],ecx
  41de3e:	sbb    edx,DWORD PTR [edi-0x52560304]
  41de44:	repz aas 
  41de46:	xchg   esp,eax
  41de47:	mov    cl,0xc7
  41de49:	add    DWORD PTR [ebp+0x72750069],edx
  41de4f:	daa    
  41de50:	aas    
  41de51:	std    
  41de52:	xchg   ebp,eax
  41de53:	and    DWORD PTR [edi],esp
  41de55:	std    
  41de56:	pusha  
  41de57:	cmp    al,0x79
  41de59:	inc    edx
  41de5a:	lock sbb cl,BYTE PTR [esi+0xa6bdc80]
  41de61:	sbb    BYTE PTR [edi],dl
  41de63:	stos   BYTE PTR es:[edi],al
  41de64:	or     BYTE PTR [edi+0x17],0xa7
  41de68:	clc    
  41de69:	push   esp
  41de6a:	lods   al,BYTE PTR ds:[esi]
  41de6b:	popa   
  41de6c:	out    0xfc,al
  41de6e:	mov    ebx,0xa73890e2
  41de73:	sbb    al,0xff
  41de75:	xchg   DWORD PTR [ecx-0x62],ecx
  41de78:	cdq    
  41de79:	cmp    BYTE PTR [esi],ch
  41de7b:	push   0xe5095631
  41de80:	test   al,0xfa
  41de82:	xchg   ebx,eax
  41de83:	xchg   BYTE PTR [eax],dh
  41de85:	push   ecx
  41de86:	out    0xfe,eax
  41de88:	out    dx,eax
  41de89:	inc    edi
  41de8a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41de8b:	sub    DWORD PTR [ecx+eax*4],eax
  41de8e:	jl     0x41ded9
  41de90:	cmc    
  41de91:	pushf  
  41de92:	(bad)  
  41de94:	enter  0x6b5a,0x54
  41de98:	jmp    0x118b:0x2abac750
  41de9f:	xor    DWORD PTR [eax-0x66acff04],ecx
  41dea5:	cwde   
  41dea6:	mov    dl,0x6d
  41dea8:	xchg   BYTE PTR ds:[edx+0x426f6654],al
  41deaf:	cmp    edx,DWORD PTR [edi+0x4c6f98]
  41deb5:	and    eax,0xa38ac986
  41deba:	xchg   al,al
  41debc:	fistp  DWORD PTR [edi]
  41debe:	ret    0xb633
  41dec1:	popa   
  41dec2:	add    edx,DWORD PTR [eax+esi*4-0x159b3d19]
  41dec9:	out    0xd2,al
  41decb:	fsub   st(1),st
  41decd:	out    0x42,al
  41decf:	in     al,dx
  41ded0:	push   eax
  41ded1:	pusha  
  41ded2:	add    edx,DWORD PTR [edx+ecx*4+0x68d529a9]
  41ded9:	adc    esp,DWORD PTR [edi-0x1d]
  41dedc:	jle    0x41df17
  41dede:	sub    eax,0x4461446c
  41dee3:	xchg   esp,eax
  41dee4:	jmp    0x6fd3:0x7eecd1e6
  41deeb:	xchg   ebx,eax
  41deec:	shl    dh,0x78
  41deef:	ret    
  41def0:	test   BYTE PTR [ebp+0x71d56810],ch
  41def6:	xlat   BYTE PTR ds:[ebx]
  41def7:	pop    ds
  41def8:	adc    BYTE PTR [edi],ah
  41defa:	add    al,0x4a
  41defc:	jmp    0xef8d:0xd68498e6
  41df03:	sbb    edx,DWORD PTR [ecx]
  41df05:	daa    
  41df06:	add    al,0x0
  41df08:	pop    ss
  41df09:	inc    ecx
  41df0a:	repnz cld 
  41df0c:	sar    DWORD PTR [ebp-0x25],cl
  41df0f:	imul   ecx,DWORD PTR [ebx-0x36d21940],0x7d
  41df16:	cmp    edi,DWORD PTR [ecx+0x7b]
  41df19:	test   BYTE PTR [edi+ecx*1+0x78],dl
  41df1d:	sar    DWORD PTR [ebp-0xc80a5b0],1
  41df23:	jae    0x41dec8
  41df25:	shl    dh,0x25
  41df28:	out    dx,eax
  41df29:	fnsave [eax-0x3f]
  41df2c:	fadd   QWORD PTR [ecx-0x1]
  41df2f:	call   0x6897:0xc2feea86
  41df36:	int    0x21
  41df38:	adc    DWORD PTR [ebp-0x40],edi
  41df3b:	mov    ebx,0x82ffea66
  41df40:	xchg   edi,eax
  41df41:	push   0x7d1911c1
  41df46:	rcr    BYTE PTR [esp+ecx*4-0xbf28197],0x1
  41df4e:	add    cl,ch
  41df50:	test   eax,0x3a348ad3
  41df55:	jns    0x41df53
  41df57:	out    0x6e,al
  41df59:	sar    bl,cl
  41df5b:	jb     0x41df6b
  41df5d:	mov    ?,sp
  41df60:	xchg   edi,eax
  41df61:	add    BYTE PTR [ebx],al
  41df63:	fwait
  41df64:	xchg   esi,eax
  41df65:	add    BYTE PTR [eax],al
  41df67:	push   ebx
  41df68:	(bad)  
  41df69:	int    0x69
  41df6b:	jmp    0xd4342970
  41df70:	push   0xffffffff
  41df72:	jl     0x41df5b
  41df74:	mov    al,0xa6
  41df76:	jl     0x41df74
  41df78:	ins    BYTE PTR es:[edi],dx
  41df79:	xlat   BYTE PTR ds:[ebx]
  41df7a:	sti    
  41df7b:	sbb    dh,BYTE PTR [edx-0x1f]
  41df7e:	int    0x67
  41df80:	popa   
  41df81:	inc    ecx
  41df82:	sar    bh,0x5b
  41df85:	adc    cl,BYTE PTR [edx-0x6]
  41df88:	xchg   BYTE PTR [eax],dl
  41df8a:	int    0xe7
  41df8c:	in     eax,dx
  41df8d:	inc    edi
  41df8e:	jge    0x41df8c
  41df90:	ins    BYTE PTR es:[edi],dx
  41df91:	push   edi
  41df92:	or     al,0x93
  41df94:	test   eax,0xf072bdf3
  41df99:	inc    esp
  41df9a:	mov    ebp,0x49e27065
  41df9f:	cli    
  41dfa0:	push   esi
  41dfa1:	adc    BYTE PTR [esi+0x97e8ed],dh
  41dfa7:	mov    eax,DWORD PTR [eax]
  41dfa9:	mov    eax,0x82fff7a3
  41dfae:	mov    ebx,0x39edfffc
  41dfb3:	jno    0x41dfae
  41dfb5:	push   ebp
  41dfb6:	sub    eax,0xf63d4074
  41dfbb:	or     esp,0x50fb8480
  41dfc1:	sub    BYTE PTR [esi-0x58],0x12
  41dfc5:	cmp    eax,0x917d7f01
  41dfca:	add    dh,BYTE PTR [esi+0x24]
  41dfcd:	xchg   BYTE PTR [esp+eax*1],bh
  41dfd0:	data16 add BYTE PTR [esi+0x49],ch
  41dfd4:	cld    
  41dfd5:	jae    0x41df9d
  41dfd7:	xor    bl,bh
  41dfd9:	adc    eax,0x40167d
  41dfde:	out    dx,al
  41dfdf:	ror    BYTE PTR [edi+edi*8+0x3a],0x8
  41dfe4:	mov    DWORD PTR [ebp-0x480cf],eax
  41dfea:	lods   eax,DWORD PTR ds:[esi]
  41dfeb:	in     al,dx
  41dfec:	fwait
  41dfed:	aam    0xad
  41dfef:	add    bh,ah
  41dff1:	or     al,0x30
  41dff3:	xchg   eax,ecx
  41dff5:	std    
  41dff6:	add    al,BYTE PTR [ecx+0x45ace84c]
  41dffc:	sti    
  41dffd:	jmp    DWORD PTR [edx+0x62]
  41e000:	vaddsd xmm1,xmm7,QWORD PTR [ebp-0x2e67c18]
  41e008:	dec    ebp
  41e009:	push   ecx
  41e00a:	scas   al,BYTE PTR es:[edi]
  41e00b:	push   esi
  41e00c:	mov    DWORD PTR [ecx+ebx*2+0x8],esi
  41e010:	call   0x46c3db
  41e015:	mov    edi,DWORD PTR [ebx]
  41e017:	in     eax,dx
  41e018:	or     eax,0x84007d9f
  41e01d:	ror    BYTE PTR [ecx+0x18],0xe8
  41e021:	mov    BYTE PTR [esi+ecx*1+0x6907fc81],dl
  41e028:	(bad)  
  41e029:	dec    ebx
  41e02a:	jo     0x41e09d
  41e02c:	push   0x6a22db
  41e031:	pop    esi
  41e032:	push   cs
  41e033:	daa    
  41e034:	fisttp QWORD PTR [eax+0x458d3900]
  41e03a:	xor    DWORD PTR [edi+0xf],ecx
  41e03d:	ins    DWORD PTR es:[edi],dx
  41e03e:	out    0x46,eax
  41e040:	dec    edi
  41e041:	cmp    esp,0xe74568e4
  41e047:	push   ebp
  41e048:	mov    ebp,0x6944fc81
  41e04d:	inc    ebp
  41e04e:	push   edx
  41e04f:	femms  
  41e051:	sub    ebx,0x34
  41e054:	push   0xde470000
  41e059:	pop    edx
  41e05a:	or     al,0x23
  41e05c:	daa    
  41e05d:	or     BYTE PTR [esi+0x4b],dl
  41e060:	ret    
  41e061:	xchg   BYTE PTR [edi-0x6a47959f],bh
  41e067:	xchg   esp,eax
  41e068:	imul   eax,DWORD PTR [eax],0xfde682e9
  41e06e:	pop    es
  41e06f:	ret    
  41e070:	xor    eax,0xc9f98b34
  41e075:	jle    0x41e073
  41e077:	mov    bl,0x41
  41e079:	mov    bh,0x2a
  41e07b:	xchg   esp,eax
  41e07c:	imul   eax,DWORD PTR [ecx+0x49ee8c70],0xa8ed094f
  41e086:	std    
  41e087:	xchg   ebx,eax
  41e088:	mov    ch,dl
  41e08a:	(bad)  
  41e08b:	fcmovnb st,st(0)
  41e08d:	sar    esi,cl
  41e08f:	sub    DWORD PTR [ecx+0x68],0xfffffff9
  41e093:	mov    dh,dl
  41e095:	add    DWORD PTR [eax-0x4078a6a8],0xf700e000
  41e09f:	mov    ebx,0x3e70012
  41e0a4:	bsr    edi,DWORD PTR [esi-0x7f]
  41e0a8:	push   eax
  41e0a9:	jnp    0x41e0e9
  41e0ab:	mov    BYTE PTR [esi+0x0],bh
  41e0ae:	out    0x6b,eax
  41e0b0:	cmp    eax,0xe403e6fa
  41e0b5:	push   0x7b331647
  41e0ba:	popa   
  41e0bb:	clc    
  41e0bc:	lahf   
  41e0bd:	mov    esp,ebp
  41e0bf:	mov    bl,ah
  41e0c1:	or     ah,BYTE PTR [ebx-0x5e]
  41e0c4:	sbb    edi,DWORD PTR [ebx-0x1a]
  41e0c7:	mov    WORD PTR [esi+0xc],ss
  41e0ca:	fiadd  DWORD PTR [ebx+0x71]
  41e0cd:	cmp    DWORD PTR [edx-0x1502f0f9],ebp
  41e0d3:	adc    ah,BYTE PTR [edi]
  41e0d5:	inc    eax
  41e0d6:	pop    edi
  41e0d7:	enter  0x67ef,0xc6
  41e0db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e0dc:	jmp    0x41e158
  41e0de:	push   0x44
  41e0e0:	addr16 icebp 
  41e0e2:	push   eax
  41e0e3:	or     BYTE PTR [eax+eax*2+0x4e],ch
  41e0e7:	(bad)  
  41e0e8:	shl    edx,cl
  41e0ea:	lahf   
  41e0eb:	add    al,0x94
  41e0ed:	add    dh,al
  41e0ef:	cmp    ch,BYTE PTR [eax+ecx*2-0x7b6bfd13]
  41e0f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e0f7:	clc    
  41e0f8:	dec    ebp
  41e0f9:	out    0xd6,al
  41e0fb:	and    BYTE PTR [esp+ecx*1],0xf
  41e0ff:	dec    esp
  41e100:	add    BYTE PTR [ebx+0x6180e67a],ah
  41e106:	push   0x7a93115a
  41e10b:	bound  eax,QWORD PTR [edi+eax*1-0x3c]
  41e10f:	adc    BYTE PTR [eax],cl
  41e111:	pinsrw mm7,WORD PTR [edx-0x2c],0xf3
  41e116:	inc    esi
  41e117:	(bad)  
  41e118:	call   0xb83ee1b4
  41e11d:	call   FWORD PTR [ebx-0x7b6817f4]
  41e123:	mov    edi,0x8285a4d5
  41e128:	adc    DWORD PTR [esi],0x14b9fc7d
  41e12e:	vmread ebx,ebx
  41e131:	push   edi
  41e132:	jp     0x41e180
  41e134:	ins    BYTE PTR es:[edi],dx
  41e135:	adc    esp,DWORD PTR [edx-0x35eac903]
  41e13b:	and    dl,BYTE PTR [bx+si+0x0]
  41e140:	es pop esi
  41e142:	push   0x96ee76
  41e147:	test   BYTE PTR [ecx],ch
  41e149:	or     al,0x8
  41e14b:	mov    DWORD PTR [edi+eiz*4+0x47e7ff42],esp
  41e152:	jnp    0x41e13d
  41e154:	aam    0x8
  41e156:	xor    al,0x83
  41e158:	(bad)  
  41e159:	jmp    0x41e161
  41e15b:	std    
  41e15c:	mov    bh,0x7f
  41e15e:	dec    ecx
  41e15f:	shl    bh,cl
  41e161:	adc    al,0xd4
  41e163:	out    0xb3,eax
  41e165:	add    BYTE PTR [edx+0x7b],al
  41e168:	cld    
  41e169:	sbb    ebx,DWORD PTR [eax-0x24]
  41e16c:	pop    ebp
  41e16d:	xor    bl,BYTE PTR [edi+0x3f]
  41e170:	or     ebp,ecx
  41e172:	pop    es
  41e173:	jnp    0x41e133
  41e175:	in     eax,0x97
  41e177:	int    0x88
  41e179:	lds    ebx,FWORD PTR [eax]
  41e17b:	inc    di
  41e17d:	sbb    cl,dh
  41e17f:	mov    BYTE PTR [edx],dh
  41e181:	fnstcw WORD PTR [ebp-0x40]
  41e184:	push   DWORD PTR ds:0x1cfd09aa
  41e18a:	mov    al,ds:0x67b54285
  41e18f:	jl     0x41e166
  41e191:	add    dh,ch
  41e193:	ror    DWORD PTR [eax],0x6a
  41e196:	jno    0x41e122
  41e198:	inc    ecx
  41e199:	in     al,0x8d
  41e19b:	in     al,dx
  41e19c:	test   esi,edx
  41e19e:	sti    
  41e19f:	cmp    BYTE PTR [edi+0x65],0xc9
  41e1a3:	std    
  41e1a4:	mov    BYTE PTR [ebp-0x37],al
  41e1a7:	dec    ebp
  41e1a8:	in     al,0x83
  41e1aa:	imul   eax,DWORD PTR [eax+0x727d84fb],0xe9008d0e
  41e1b4:	in     al,0x67
  41e1b6:	stc    
  41e1b7:	jg     0x41e1b4
  41e1b9:	mov    eax,0xfffffdce
  41e1be:	aam    0x92
  41e1c0:	std    
  41e1c1:	jmp    FWORD PTR ds:0xddd4418a
  41e1c7:	in     al,0x79
  41e1c9:	add    BYTE PTR [eax],0xaa
  41e1cc:	add    BYTE PTR [eax-0x76ecde40],0x75
  41e1d3:	test   eax,0xfa7c44e5
  41e1d8:	clc    
  41e1d9:	mov    ah,0x92
  41e1db:	std    
  41e1dc:	cld    
  41e1dd:	(bad)  
  41e1de:	call   0x41e046
  41e1e3:	outs   dx,BYTE PTR ds:[esi]
  41e1e4:	addr16 in al,dx
  41e1e6:	add    BYTE PTR [eax+0x47],ch
  41e1e9:	in     al,dx
  41e1ea:	push   eax
  41e1eb:	aad    0x42
  41e1ed:	js     0x41e1ee
  41e1ef:	fiadd  DWORD PTR [edi-0x70378a44]
  41e1f5:	jno    0x41e1e7
  41e1f7:	in     eax,0x26
  41e1f9:	jl     0x41e1fa
  41e1fb:	jmp    0x69fc:0xbd013bea
  41e202:	adc    al,0x28
  41e204:	inc    edi
  41e205:	rcl    BYTE PTR [eax+0x28],1
  41e208:	inc    edi
  41e209:	mov    esp,0x558e9450
  41e20e:	adc    BYTE PTR [eax+0x56],0x68
  41e212:	inc    esi
  41e213:	test   DWORD PTR [eax+0x35d1867c],eax
  41e219:	pop    DWORD PTR [edx+0x68]
  41e21c:	sbb    ch,ah
  41e21e:	xchg   esp,eax
  41e21f:	xchg   esp,eax
  41e220:	imul   eax,DWORD PTR [eax],0x7d5fece8
  41e226:	cld    
  41e227:	pminub mm1,QWORD PTR [edx+0x75e53c72]
  41e22e:	or     al,0x0
  41e230:	adc    BYTE PTR [edi],bl
  41e232:	add    al,0x0
  41e234:	xchg   esp,eax
  41e235:	repnz fdivrp st(3),st
  41e238:	scas   al,BYTE PTR es:[edi]
  41e239:	popa   
  41e23a:	xor    edx,edx
  41e23c:	pop    ds
  41e23d:	sub    ebx,ebx
  41e23f:	hlt    
  41e240:	and    eax,0x190c51dd
  41e245:	fild   DWORD PTR [ebx]
  41e247:	add    BYTE PTR [edx+ebp*2+0x6269875a],dl
  41e24e:	mov    ebp,edi
  41e250:	iret   
  41e251:	sbb    cl,BYTE PTR ds:0x6a1581
  41e257:	add    BYTE PTR [ecx],cl
  41e259:	mov    al,ds:0x71598718
  41e25e:	cmp    BYTE PTR [edx-0x61],0x69
  41e262:	mul    DWORD PTR [ecx]
  41e264:	outs   dx,BYTE PTR ds:[esi]
  41e265:	jne    0x41e1f6
  41e267:	inc    edx
  41e268:	sar    BYTE PTR [ecx],0x8f
  41e26b:	inc    esp
  41e26c:	cwde   
  41e26d:	cmp    DWORD PTR [ebp+0x12],edi
  41e270:	mov    BYTE PTR [edi-0x40],ch
  41e273:	call   DWORD PTR [esi]
  41e275:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e276:	or     al,0x83
  41e278:	aam    0x2c
  41e27a:	or     DWORD PTR [ecx+0x48bed59],ecx
  41e280:	rcr    BYTE PTR [ecx+ecx*1],cl
  41e283:	jmp    FWORD PTR [esi-0x6f74d700]
  41e289:	cmp    esp,DWORD PTR [eax+eax*8]
  41e28c:	or     BYTE PTR [esi],al
  41e28e:	(bad)  
  41e28f:	ror    BYTE PTR [edi+0x2b],1
  41e292:	lahf   
  41e293:	test   BYTE PTR [eax],al
  41e295:	mov    al,BYTE PTR [eax-0x116bf340]
  41e29b:	int3   
  41e29c:	cmp    al,0xcf
  41e29e:	js     0x41e299
  41e2a0:	pop    ds
  41e2a1:	sbb    eax,0x6bc8c143
  41e2a6:	jmp    0xea5f:0x6f02dcfe
  41e2ad:	adc    ebx,DWORD PTR [eax]
  41e2af:	mov    bh,0x7e
  41e2b1:	(bad)  
  41e2b2:	js     0x41e269
  41e2b4:	jle    0x41e25c
  41e2b6:	xor    ch,bl
  41e2b8:	ret    
  41e2b9:	cmp    eax,DWORD PTR [edx+0x18be0f22]
  41e2bf:	(bad)  
  41e2c0:	sub    al,0xd7
  41e2c2:	ins    BYTE PTR es:[edi],dx
  41e2c3:	add    DWORD PTR [esp+ebp*2+0x78],ebx
  41e2c7:	iret   
  41e2c8:	enter  0x8323,0xa3
  41e2cc:	jnp    0x41e279
  41e2ce:	sub    DWORD PTR ds:0x987bcd1b,0xffffff8a
  41e2d5:	xor    ebp,0xfffffff1
  41e2d8:	add    eax,DWORD PTR [edi+0x2fc86bbf]
  41e2de:	rol    BYTE PTR [eax+0x6b854d1b],1
  41e2e4:	ja     0x41e2f4
  41e2e6:	mov    ebp,0x4bf56cce
  41e2eb:	fdivr  QWORD PTR [ebp+0x16]
  41e2ee:	inc    eax
  41e2ef:	pop    ebx
  41e2f0:	cs leave 
  41e2f2:	in     al,dx
  41e2f3:	mov    esi,0xc44c836c
  41e2f8:	jge    0x41e2fa
  41e2fa:	mov    dl,0x79
  41e2fc:	mov    esp,0xffcdb07d
  41e301:	shl    BYTE PTR [ebx+0x4c],0xfd
  41e305:	scas   al,BYTE PTR es:[edi]
  41e306:	scas   al,BYTE PTR es:[edi]
  41e307:	push   cs
  41e308:	pop    eax
  41e309:	cmp    DWORD PTR [edi],ecx
  41e30b:	ret    0x6cf3
  41e30e:	pop    ebx
  41e30f:	mov    edx,0x5225814f
  41e314:	std    
  41e315:	mov    cs,WORD PTR ds:0x837f8266
  41e31b:	(bad)  
  41e31c:	out    0xa0,al
  41e31e:	bnd je 0x41e31d
  41e321:	bound  esp,QWORD PTR [ebx+0x5e]
  41e324:	mov    BYTE PTR [esp+ebx*8],ah
  41e327:	retf   
  41e328:	addr16 jle 0x41e2bb
  41e32b:	add    BYTE PTR [eax],al
  41e32d:	push   ecx
  41e32e:	xor    ah,0xfc
  41e331:	push   esi
  41e332:	bound  ecx,QWORD PTR [eax+0x4c9741d7]
  41e338:	std    
  41e339:	inc    esi
  41e33a:	or     esi,ebx
  41e33c:	out    dx,eax
  41e33d:	push   ecx
  41e33e:	mov    ebx,0x1c36fcf7
  41e343:	pop    ecx
  41e344:	jb     0x41e324
  41e346:	adc    dh,bl
  41e348:	jmp    0x41e35b
  41e34a:	mov    edi,0x501efcf7
  41e34f:	xchg   edi,edi
  41e351:	call   0x5c4b4aed
  41e356:	or     ebp,DWORD PTR [edx-0x19]
  41e359:	xor    edi,esi
  41e35b:	je     0x41e359
  41e35d:	mov    edx,0x5dd45700
  41e362:	xchg   edx,eax
  41e363:	pop    esi
  41e364:	aas    
  41e365:	add    ebp,ecx
  41e367:	retf   0xeb88
  41e36a:	push   0xe9019d6b
  41e36f:	xchg   edi,eax
  41e370:	iret   
  41e371:	push   ebp
  41e372:	ds sbb eax,0xe9ce3066
  41e378:	jle    0x41e3f4
  41e37a:	add    ch,bh
  41e37c:	mov    dh,BYTE PTR [ecx-0x4]
  41e37f:	repnz push cs
  41e381:	adc    BYTE PTR [edx],0x7d
  41e384:	cld    
  41e385:	mov    BYTE PTR [ebx+edi*2],bl
  41e388:	mov    DWORD PTR [ecx-0x8],edi
  41e38b:	and    al,0x76
  41e38d:	lock cmp ebp,DWORD PTR [esi]
  41e390:	add    al,0x7f
  41e392:	mov    ch,0x7d
  41e394:	add    DWORD PTR [eax],eax
  41e396:	mov    edi,DWORD PTR [eax+0x25458580]
  41e39c:	call   0x9ebf2ad
  41e3a1:	jg     0x41e39c
  41e3a3:	ja     0x41e412
  41e3a5:	or     BYTE PTR [ebx+0x77406e4],al
  41e3ab:	out    dx,al
  41e3ac:	sar    esi,0x3a
  41e3af:	jle    0x41e420
  41e3b1:	call   0x796ac941
  41e3b6:	cld    
  41e3b7:	jl     0x41e3ad
  41e3b9:	aaa    
  41e3ba:	ret    
  41e3bb:	stc    
  41e3bc:	sbb    BYTE PTR [ecx-0x38c7c0b8],cl
  41e3c2:	jae    0x41e3c4
  41e3c4:	xor    ebx,DWORD PTR [ebx+0x7f]
  41e3c7:	cmp    BYTE PTR [eax+0x6e],al
  41e3ca:	add    al,0x66
  41e3cc:	scas   al,BYTE PTR es:[edi]
  41e3cd:	cmp    cl,BYTE PTR [edx]
  41e3cf:	jne    0x41e3d0
  41e3d1:	xchg   DWORD PTR [ebp-0x7900427d],edi
  41e3d7:	dec    ebp
  41e3d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e3d9:	xchg   BYTE PTR [eax],cl
  41e3db:	(bad)  
  41e3dc:	jmp    0x8041e3e1
  41e3e1:	outs   dx,BYTE PTR ds:[esi]
  41e3e2:	lock mov DWORD PTR [eax],edi
  41e3e5:	cmc    
  41e3e6:	in     al,0x91
  41e3e8:	jg     0x41e3dd
  41e3ea:	sti    
  41e3eb:	test   BYTE PTR ds:0xf2854a70,ch
  41e3f1:	outs   dx,DWORD PTR ds:[esi]
  41e3f2:	adc    edi,edi
  41e3f4:	xchg   esp,eax
  41e3f5:	aam    0x6b
  41e3f7:	mov    bl,bl
  41e3f9:	ds out 0xc,eax
  41e3fc:	mov    ebx,0xa84a8c3d
  41e401:	icebp  
  41e402:	into   
  41e403:	neg    DWORD PTR ds:0xd4829363
  41e409:	sub    dh,BYTE PTR ds:0x8c9f5189
  41e40f:	dec    edx
  41e410:	mov    ch,ah
  41e412:	(bad)  
  41e413:	jle    0x41e42c
  41e415:	push   edx
  41e416:	add    BYTE PTR [ebx+ebx*4-0x22],dh
  41e41a:	xor    ebp,eax
  41e41c:	repz pop ecx
  41e41e:	jns    0x41e41c
  41e420:	jae    0x41e43f
  41e422:	jl     0x41e45a
  41e424:	leave  
  41e425:	in     eax,dx
  41e426:	or     BYTE PTR [edx+0x78e2f000],al
  41e42c:	cld    
  41e42d:	pop    ss
  41e42e:	pop    ebp
  41e42f:	js     0x41e42d
  41e431:	leave  
  41e432:	add    BYTE PTR [ecx+0x42],al
  41e435:	inc    esp
  41e436:	stc    
  41e437:	add    eax,DWORD PTR [eax]
  41e439:	xchg   esp,eax
  41e43a:	rol    BYTE PTR [ebx],0xff
  41e43d:	cmp    ebp,DWORD PTR [edx-0x73]
  41e440:	inc    edx
  41e441:	sub    al,0xe5
  41e443:	div    bl
  41e445:	cmp    al,0x58
  41e447:	push   ebp
  41e448:	std    
  41e449:	and    edi,DWORD PTR [edi+0x611b3060]
  41e44f:	div    edi
  41e451:	mov    ds:0xbff56db,eax
  41e456:	push   0x41
  41e458:	inc    edx
  41e459:	add    BYTE PTR [ecx+0x0],ch
  41e45c:	add    BYTE PTR [eax+esi*8-0x62e0140a],dl
  41e463:	ins    BYTE PTR es:[edi],dx
  41e464:	mov    BYTE PTR [ecx-0x3],bl
  41e467:	cmp    bh,BYTE PTR [esp+ecx*4]
  41e46a:	push   edx
  41e46b:	jl     0x41e411
  41e46d:	xchg   esp,eax
  41e46e:	add    bh,ah
  41e470:	add    ebx,DWORD PTR ds:0x82e1eefd
  41e476:	cmp    dh,ah
  41e478:	jg     0x41e496
  41e47a:	add    edi,esp
  41e47c:	add    esp,DWORD PTR [ebx+esi*2-0x25]
  41e480:	add    DWORD PTR [ebp+0x268ee6c0],0x64
  41e487:	popa   
  41e488:	dec    ebx
  41e489:	or     al,0xbe
  41e48b:	mov    dl,0x8e
  41e48d:	add    BYTE PTR [edi+0x7bd073fa],dl
  41e493:	push   0x7389158b
  41e498:	popa   
  41e499:	pop    ebx
  41e49a:	adc    al,0x77
  41e49c:	lea    ecx,[edx]
  41e49e:	adc    BYTE PTR [esi+eiz*8-0x61c86bfd],al
  41e4a5:	icebp  
  41e4a6:	enter  0x61da,0xff
  41e4aa:	pop    esi
  41e4ab:	sub    ah,bh
  41e4ad:	ret    
  41e4ae:	pop    ebx
  41e4af:	test   BYTE PTR [ebx+0x5d734edb],bl
  41e4b5:	imul   edx,DWORD PTR [ebp+0x29],0xffffffe7
  41e4b9:	add    ecx,DWORD PTR ds:0x33f0613a
  41e4bf:	rol    BYTE PTR [ebp+0x31],1
  41e4c2:	xor    DWORD PTR ds:0xd41577,ecx
  41e4c8:	ins    BYTE PTR es:[edi],dx
  41e4c9:	inc    ebx
  41e4ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e4cb:	or     BYTE PTR [esi-0x66e7e77a],ah
  41e4d1:	push   eax
  41e4d2:	cld    
  41e4d3:	adc    DWORD PTR [edx+0x56],esi
  41e4d6:	sbb    al,0x42
  41e4d8:	adc    eax,0x7c23ff0f
  41e4dd:	ret    
  41e4de:	sti    
  41e4df:	jle    0x41e507
  41e4e1:	lock mov al,ds:0x1c77a387
  41e4e7:	(bad)  
  41e4ea:	push   esi
  41e4eb:	mov    esi,0x9755ef
  41e4f0:	add    BYTE PTR [eax+0x0],dh
  41e4f3:	xchg   edi,eax
  41e4f4:	cmp    esp,0x8903bb01
  41e4fa:	sub    al,0x3c
  41e4fc:	mov    BYTE PTR [edx-0x1f],cl
  41e4ff:	push   esp
  41e500:	mov    esi,0x985cef
  41e505:	add    BYTE PTR [eax-0x69],dh
  41e508:	mov    DWORD PTR [edx-0x3f],edi
  41e50b:	adc    DWORD PTR [eax-0x19],eax
  41e50e:	pop    ds
  41e50f:	inc    edx
  41e510:	jne    0x41e50e
  41e512:	nop    edi
  41e515:	out    dx,eax
  41e516:	jmp    0x9672fa95
  41e51b:	sbb    DWORD PTR [edi-0x41031a15],edi
  41e521:	sti    
  41e522:	jb     0x41e557
  41e524:	jbe    0x41e56d
  41e526:	ret    0x6a2a
  41e529:	or     al,0x6b
  41e52b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e52c:	jae    0x41e52a
  41e52e:	outs   dx,BYTE PTR ds:[esi]
  41e52f:	jmp    0xc7eeaa30
  41e534:	cmp    bh,0xe8
  41e537:	xchg   edi,eax
  41e538:	xchg   DWORD PTR [edx+0x51],eax
  41e53b:	adc    edi,esi
  41e53d:	repz inc ecx
  41e53f:	mov    ds:0x3646fd4e,eax
  41e544:	mov    DWORD PTR [edx+0x39],eax
  41e547:	dec    ebp
  41e548:	aam    0x58
  41e54a:	and    dl,bl
  41e54c:	std    
  41e54d:	call   DWORD PTR [ebx+0xd806608]
  41e553:	nop
  41e554:	sub    bl,0x85
  41e557:	add    al,ah
  41e559:	retf   
  41e55a:	push   esp
  41e55b:	sbb    DWORD PTR [ecx+0x154a96e8],0xffffff81
  41e562:	out    0x0,eax
  41e564:	adc    bl,cl
  41e566:	cli    
  41e567:	jmp    FWORD PTR [esi]
  41e569:	stc    
  41e56a:	test   DWORD PTR [ecx+edx*8+0x15],eax
  41e56e:	aaa    
  41e56f:	(bad)  
  41e570:	pusha  
  41e571:	add    eax,0xe57dc02f
  41e576:	fld    DWORD PTR [ecx]
  41e578:	mov    ebp,0x38c02efd
  41e57d:	popa   
  41e57e:	and    BYTE PTR [eax+0x34],al
  41e581:	sub    bh,BYTE PTR [eax]
  41e583:	mov    eax,0x93e7fc7e
  41e588:	mov    bh,0xf8
  41e58a:	sti    
  41e58b:	mov    esp,DWORD PTR [eax+0x4]
  41e58e:	mov    DWORD PTR [ecx+edx*4+0x18],eax
  41e592:	test   DWORD PTR [ecx+eiz*2+0x29],eax
  41e596:	das    
  41e597:	rol    BYTE PTR [esi],0xc8
  41e59a:	ret    
  41e59b:	inc    esp
  41e59c:	push   ecx
  41e59d:	or     esp,eax
  41e59f:	js     0x41e54e
  41e5a1:	cld    
  41e5a2:	ret    0x6144
  41e5a5:	sbb    esp,ebp
  41e5a7:	mov    DWORD PTR [ebp+0x76e8e7fc],edi
  41e5ad:	(bad)  
  41e5ae:	(bad)  
  41e5af:	call   0x41e35f
  41e5b4:	mov    esi,0x3a100874
  41e5b9:	jg     0x41e55d
  41e5bb:	add    BYTE PTR [eax],al
  41e5bd:	sub    eax,0xde8b55fd
  41e5c2:	in     eax,0x2e
  41e5c4:	or     al,0x3c
  41e5c6:	std    
  41e5c7:	xchg   al,bh
  41e5c9:	mov    al,0xf8
  41e5cb:	or     eax,DWORD PTR [ecx+eax*8+0x2fffffd]
  41e5d2:	in     eax,0xb0
  41e5d4:	sti    
  41e5d5:	mov    edx,0xd14c7ff8
  41e5da:	or     al,0xfb
  41e5dc:	sete   dl
  41e5df:	jo     0x41e646
  41e5e1:	adc    DWORD PTR [ecx],ecx
  41e5e3:	out    dx,al
  41e5e4:	ss pop ds
  41e5e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e5e7:	add    al,0x8b
  41e5e9:	pop    ebx
  41e5ea:	push   edi
  41e5eb:	rol    DWORD PTR [eax-0x1917a914],1
  41e5f1:	fldenv [esi+0x0]
  41e5f4:	call   0xfcb753de
  41e5f9:	sbb    eax,0x1914201b
  41e5fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e5ff:	out    dx,al
  41e600:	add    al,0xfa
  41e602:	test   DWORD PTR [ebx],0x64e9400
  41e608:	mov    ebx,DWORD PTR [eax-0x5]
  41e60b:	adc    ecx,DWORD PTR [edi-0x54]
  41e60e:	(bad)  
  41e60f:	jbe    0x41e60d
  41e611:	fwait
  41e612:	push   ecx
  41e613:	lods   eax,DWORD PTR ds:[esi]
  41e614:	out    dx,eax
  41e615:	xchg   ebx,eax
  41e616:	push   cs
  41e617:	and    BYTE PTR [esp+edi*2],dl
  41e61a:	push   esp
  41e61b:	push   ebx
  41e61c:	std    
  41e61d:	and    ebx,0xffffffbf
  41e620:	and    eax,DWORD PTR [eax]
  41e622:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e623:	pop    es
  41e624:	mov    esi,DWORD PTR [ebx-0x48]
  41e627:	cmp    DWORD PTR [ebx-0x74ba4fbd],ecx
  41e62d:	jnp    0x41e5e7
  41e62f:	inc    ecx
  41e630:	cmp    al,BYTE PTR [ebx-0x50]
  41e633:	dec    esi
  41e634:	add    BYTE PTR [edx-0x6c],ch
  41e637:	push   ebx
  41e638:	add    ecx,DWORD PTR [ebx+0x4fcc05d0]
  41e63e:	adc    DWORD PTR [esi+0x1c],ecx
  41e641:	cmp    BYTE PTR [eax*8-0x226bffd8],ch
  41e648:	inc    ebx
  41e649:	jb     0x41e5cd
  41e64b:	push   ecx
  41e64c:	mov    BYTE PTR [eax],dl
  41e64e:	xchg   esp,eax
  41e64f:	pop    ecx
  41e650:	jne    0x41e664
  41e652:	dec    esp
  41e653:	dec    esp
  41e654:	sar    bh,0x11
  41e657:	add    DWORD PTR [ebx-0x657f66e1],ebp
  41e65d:	pop    ds
  41e65e:	xchg   ecx,eax
  41e65f:	add    bl,BYTE PTR [ecx+0x858604f]
  41e665:	push   esp
  41e666:	icebp  
  41e667:	outs   dx,DWORD PTR ds:[esi]
  41e668:	jno    0x41e65b
  41e66a:	xchg   ebx,eax
  41e66b:	jnp    0x41e696
  41e66d:	mov    edx,ecx
  41e66f:	pop    eax
  41e670:	int    0xa
  41e672:	fld    TBYTE PTR [edi-0x47]
  41e675:	jbe    0x41e693
  41e677:	dec    ecx
  41e678:	and    DWORD PTR [edi-0x68],edx
  41e67b:	test   DWORD PTR [esi],ebx
  41e67d:	ja     0x41e63f
  41e67f:	outs   dx,DWORD PTR ds:[esi]
  41e680:	adc    DWORD PTR [edi+0x47],ebp
  41e683:	std    
  41e684:	int    0x2d
  41e686:	add    BYTE PTR [edi+ebp*4-0x29578a6a],bh
  41e68d:	into   
  41e68e:	mov    esp,0xa3b56ed3
  41e693:	arpl   WORD PTR [eax+0x103c0429],bp
  41e699:	sbb    ebx,ebp
  41e69b:	push   ds
  41e69c:	(bad)
  41e6a0:	jns    0x41e6b4
  41e6a2:	and    BYTE PTR [eax+0x70ee6c58],ah
  41e6a8:	outs   dx,DWORD PTR ds:[esi]
  41e6a9:	push   0x43
  41e6ab:	out    0x2c,eax
  41e6ad:	(bad)  
  41e6ae:	sbb    ebx,ebp
  41e6b0:	outs   dx,DWORD PTR ds:[esi]
  41e6b1:	jne    0x41e635
  41e6b3:	push   ebx
  41e6b4:	and    BYTE PTR [eax-0x41],ah
  41e6b7:	ja     0x41e6cd
  41e6b9:	je     0x41e67a
  41e6bb:	ja     0x41e6d1
  41e6bd:	mov    bh,0xe9
  41e6bf:	inc    edx
  41e6c0:	fldl2e 
  41e6c2:	(bad)  [ebx]
  41e6c4:	mov    ds:0x6f3076ce,al
  41e6c9:	mov    edx,0x7858841f
  41e6ce:	add    al,0x23
  41e6d0:	outs   dx,DWORD PTR ds:[esi]
  41e6d1:	jmp    FWORD PTR [ecx-0x74]
  41e6d4:	and    BYTE PTR [edx+ebp*4-0x1697ef69],ch
  41e6db:	xchg   edi,eax
  41e6dc:	add    BYTE PTR [eax+0x7b879393],al
  41e6e2:	int    0x9f
  41e6e4:	ins    DWORD PTR es:[edi],dx
  41e6e5:	adc    bl,BYTE PTR [ebp-0x5d]
  41e6e8:	sar    bh,0x73
  41e6eb:	add    bl,bh
  41e6ed:	and    dl,BYTE PTR [eax]
  41e6ef:	adc    esp,edx
  41e6f1:	repz cld 
  41e6f3:	imul   BYTE PTR [ebp-0x47]
  41e6f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e6f7:	loope  0x41e6bc
  41e6f9:	clc    
  41e6fa:	out    0x5a,eax
  41e6fc:	call   0x40a8:0x8089fc6f
  41e703:	jmp    0x6b5e6f7
  41e708:	rcl    BYTE PTR [esi+0x58902977],0x6c
  41e70f:	scas   al,BYTE PTR es:[edi]
  41e710:	sub    DWORD PTR [esi+ebx*4-0xf],ebp
  41e714:	fistp  QWORD PTR [edi+0x9840ff]
  41e71a:	add    BYTE PTR [ecx-0x19],ch
  41e71d:	or     BYTE PTR gs:[ecx-0x17962f69],0x48
  41e725:	aad    0x54
  41e727:	mov    fs,WORD PTR [ebx-0x6fd6f030]
  41e72d:	push   edi
  41e72e:	push   cs
  41e72f:	push   ecx
  41e730:	xchg   esp,eax
  41e731:	hlt    
  41e732:	or     al,BYTE PTR [ecx]
  41e734:	nop
  41e735:	add    BYTE PTR [eax],al
  41e737:	imul   edi,DWORD PTR [esi],0x13fcfd12
  41e73d:	adc    al,BYTE PTR [eax-0x17]
  41e740:	enter  0x23f1,0xf1
  41e744:	scas   eax,DWORD PTR es:[edi]
  41e745:	sub    edi,edi
  41e747:	out    0x97,eax
  41e749:	jns    0x41e78e
  41e74b:	add    BYTE PTR [ecx+0xc74c4c],bl
  41e751:	stc    
  41e752:	or     eax,0x44b4ec30
  41e757:	cld    
  41e758:	(bad)  
  41e759:	call   0xfd81f637
  41e75e:	xor    al,al
  41e760:	pop    edi
  41e761:	inc    ebx
  41e762:	dec    ecx
  41e763:	xchg   ebp,esp
  41e765:	inc    eax
  41e766:	rol    BYTE PTR [eax],0x0
  41e769:	sub    edi,DWORD PTR [ecx-0x14]
  41e76c:	push   edi
  41e76d:	cs ret 0xce87
  41e771:	push   ds
  41e772:	cmc    
  41e773:	in     al,0x28
  41e775:	test   DWORD PTR [edx],0x707d8500
  41e77b:	mov    eax,DWORD PTR [bp+di]
  41e77e:	lods   eax,DWORD PTR ds:[esi]
  41e77f:	in     al,0x1c
  41e781:	mov    DWORD PTR [edx],0x5eed8500
  41e787:	lock test edx,esp
  41e78a:	pop    ebp
  41e78b:	push   edi
  41e78c:	mov    edi,DWORD PTR [ebx+0x7d146cf4]
  41e792:	fsub   QWORD PTR [edx]
  41e794:	shl    bl,1
  41e796:	hlt    
  41e797:	xchg   eax,esi
  41e799:	clc    
  41e79a:	(bad)  [eax+0x22]
  41e79d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e79e:	add    al,ch
  41e7a0:	mov    esi,DWORD PTR [edx]
  41e7a2:	repz sti 
  41e7a4:	test   DWORD PTR ds:0x5d83015d,ebp
  41e7aa:	add    edi,esp
  41e7ac:	add    ch,BYTE PTR [esi]
  41e7ae:	rol    DWORD PTR [ecx-0x7a949640],0x30
  41e7b5:	add    dh,dh
  41e7b7:	icebp  
  41e7b8:	out    0x8,eax
  41e7ba:	stos   DWORD PTR es:[edi],eax
  41e7bb:	fmul   QWORD PTR [edi+ecx*8-0x9d00b4d]
  41e7c2:	or     ebx,DWORD PTR [ecx+0x70]
  41e7c5:	int    0x94
  41e7c7:	cwde   
  41e7c8:	add    BYTE PTR [edx-0x6c],ch
  41e7cb:	mov    edi,0xc62bd228
  41e7d0:	jge    0x41e791
  41e7d2:	test   eax,0xa0f57d54
  41e7d7:	fs jae 0x41e80f
  41e7da:	cld    
  41e7db:	test   al,0x43
  41e7dd:	std    
  41e7de:	or     ebp,DWORD PTR [ebp+0xcd36b68]
  41e7e4:	je     0x41e817
  41e7e6:	aam    0x1
  41e7e8:	jmp    FWORD PTR [edi-0x3f2d616b]
  41e7ee:	inc    ecx
  41e7ef:	repnz fs xor al,0x46
  41e7f4:	iret   
  41e7f5:	imul   edx,DWORD PTR [ebp+0x6812738e],0x10ffc047
  41e7ff:	xchg   edi,eax
  41e800:	div    DWORD PTR [esi-0x79]
  41e803:	inc    edx
  41e804:	aam    0x50
  41e806:	cs pop eax
  41e808:	frndint 
  41e80a:	mov    DWORD PTR [edi],ebp
  41e80c:	adc    al,0x40
  41e80e:	xchg   esp,eax
  41e80f:	fadd   QWORD PTR [ebx+0x73]
  41e812:	sub    al,0xa
  41e814:	jg     0x41e858
  41e816:	cwde   
  41e817:	push   es
  41e818:	fdivp  st(6),st
  41e81a:	add    bl,bh
  41e81c:	(bad)  
  41e81d:	jmp    0x41e85e
  41e81f:	xchg   esp,eax
  41e820:	mov    ds:0x19a45c16,al
  41e825:	add    al,0x83
  41e827:	push   esp
  41e828:	push   cs
  41e829:	sub    ecx,DWORD PTR [ebx-0x752c6a27]
  41e82f:	rol    DWORD PTR [ecx-0x1626752d],1
  41e835:	sar    esp,cl
  41e837:	loope  0x41e82e
  41e839:	jp     0x41e895
  41e83b:	dec    esp
  41e83c:	fist   DWORD PTR [esi]
  41e83e:	pusha  
  41e83f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e840:	add    BYTE PTR [edi-0x2dbee8fd],ah
  41e846:	pop    ss
  41e847:	cmp    esi,esi
  41e849:	pop    edx
  41e84a:	jae    0x41e7f2
  41e84c:	push   0xd43bf94d
  41e851:	inc    ebp
  41e852:	sbb    DWORD PTR [eax+0x1703a710],edi
  41e858:	inc    ecx
  41e859:	mov    ebx,0x2af61100
  41e85e:	jae    0x41e806
  41e860:	mov    al,bh
  41e862:	ret    
  41e863:	add    edi,DWORD PTR [edi-0x55]
  41e866:	outs   dx,DWORD PTR ds:[esi]
  41e867:	clc    
  41e868:	daa    
  41e869:	sbb    bh,al
  41e86b:	lahf   
  41e86c:	inc    ebx
  41e86d:	in     al,0xff
  41e86f:	jmp    0x41e8dc
  41e871:	out    0x7c,al
  41e873:	popa   
  41e874:	add    al,0x70
  41e876:	rcl    BYTE PTR [ebx-0x43905489],cl
  41e87c:	(bad)  
  41e87d:	mov    ecx,0x396c0043
  41e882:	test   eax,0x375d0cd8
  41e887:	fimul  DWORD PTR [esi+esi*1]
  41e88a:	pop    ss
  41e88b:	adc    al,0x54
  41e88d:	add    BYTE PTR [esi],dh
  41e88f:	adc    DWORD PTR [esi+0x6c],0xd9a3de16
  41e896:	out    0xdd,al
  41e898:	call   0x6352:0x90fc3b6a
  41e89f:	inc    ebx
  41e8a0:	push   es
  41e8a1:	daa    
  41e8a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e8a3:	sbb    BYTE PTR [ecx+edx*1+0x68150427],bl
  41e8aa:	adc    cl,bh
  41e8ac:	shl    BYTE PTR [edi+0x23],0x70
  41e8b0:	push   ss
  41e8b1:	inc    eax
  41e8b2:	cli    
  41e8b3:	sbb    ebp,DWORD PTR [eax+ebx*8-0x54]
  41e8b7:	jno    0x41e911
  41e8b9:	ja     0x41e8ba
  41e8bb:	jo     0x41e8d9
  41e8bd:	ins    BYTE PTR es:[edi],dx
  41e8be:	jae    0x41e88c
  41e8c0:	adc    al,0xbe
  41e8c2:	sti    
  41e8c3:	mov    ecx,0xb6fbeec6
  41e8c8:	pop    ecx
  41e8c9:	push   0xfffffffd
  41e8cb:	fsubr  QWORD PTR [edi]
  41e8cd:	ins    BYTE PTR es:[edi],dx
  41e8ce:	aad    0x64
  41e8d0:	xlat   BYTE PTR ds:[ebx]
  41e8d1:	out    dx,eax
  41e8d2:	add    esi,DWORD PTR [edx-0x32]
  41e8d5:	pop    eax
  41e8d6:	pop    es
  41e8d7:	xchg   esi,eax
  41e8d8:	mov    edi,0x8637cdf3
  41e8dd:	xor    al,al
  41e8df:	mov    fs,ebp
  41e8e1:	inc    ecx
  41e8e2:	shr    ebp,0x0
  41e8e5:	xchg   edi,eax
  41e8e6:	ror    BYTE PTR [edi+edx*2],cl
  41e8e9:	add    ebx,DWORD PTR [edi]
  41e8eb:	or     BYTE PTR [esi-0x1e4f58ec],bh
  41e8f1:	nop
  41e8f2:	add    BYTE PTR [eax],al
  41e8f4:	jb     0x41e88c
  41e8f6:	jg     0x41e8be
  41e8f8:	jne    0x41e887
  41e8fa:	jns    0x41e8fa
  41e8fc:	sbb    BYTE PTR [eax+0x7e6a0f6d],0x0
  41e903:	xor    DWORD PTR [ecx+0x6586e4e5],ebp
  41e909:	rcl    DWORD PTR [edx],0xff
  41e90c:	call   0xe603b3a8
  41e911:	xchg   edi,eax
  41e912:	iret   
  41e913:	mov    ch,dl
  41e915:	pop    ss
  41e916:	push   edi
  41e917:	imul   ecx
  41e919:	xchg   edi,eax
  41e91a:	add    BYTE PTR [ecx+0x1f],dl
  41e91d:	ins    DWORD PTR es:[edi],dx
  41e91e:	ja     0x41e962
  41e920:	and    DWORD PTR [eax+0x44],0x5898a242
  41e927:	jno    0x41e949
  41e929:	add    eax,0xd41c8a6d
  41e92e:	popa   
  41e92f:	shl    DWORD PTR [eax+edx*4+0x0],1
  41e933:	add    DWORD PTR [eax],0x8afcc890
  41e939:	sti    
  41e93a:	mov    bh,0x41
  41e93c:	int3   
  41e93d:	pop    ebp
  41e93e:	jmp    0xa4:0xb515003c
  41e945:	sub    eax,0x859ed
  41e94a:	test   al,0x83
  41e94c:	adc    al,0x1
  41e94e:	cmp    eax,0xdd4584fe
  41e953:	jmp    0xfe6df1d7
  41e958:	inc    ebp
  41e95a:	lock leave 
  41e95c:	cld    
  41e95d:	mov    BYTE PTR [eax-0xe],0x5
  41e961:	ins    DWORD PTR es:[edi],dx
  41e962:	cmp    eax,0xb14584fe
  41e967:	in     eax,0x41
  41e969:	call   0x8c262af4
  41e96e:	int    0xec
  41e970:	inc    ecx
  41e971:	hlt    
  41e972:	jbe    0x41e9d0
  41e974:	dec    DWORD PTR [ecx+ebx*1+0x5889a81b]
  41e97b:	in     eax,dx
  41e97c:	xor    esi,0x45894451
  41e982:	xchg   ecx,eax
  41e983:	push   esp
  41e984:	mov    DWORD PTR [ebp+0x5],eax
  41e987:	dec    esi
  41e988:	or     BYTE PTR fs:[ebp-0x35980003],bh
  41e98f:	lock cld 
  41e991:	(bad)  
  41e992:	fisub  DWORD PTR [edi+0x0]
  41e995:	(bad)  
  41e996:	jo     0x41e970
  41e998:	add    BYTE PTR [eax],al
  41e99a:	lods   eax,DWORD PTR ds:[esi]
  41e99b:	std    
  41e99c:	cli    
  41e99d:	adc    eax,0x401239
  41e9a2:	lock mov ebp,0x43081571
  41e9a8:	les    edx,FWORD PTR [eax+0x1a]
  41e9ab:	addr16 add al,0xff
  41e9ae:	add    BYTE PTR [esp+ebp*2+0x57d40f04],dl
  41e9b5:	test   DWORD PTR [edi-0x19a236d],edi
  41e9bb:	pop    ebx
  41e9bc:	push   edi
  41e9bd:	outs   dx,DWORD PTR ds:[esi]
  41e9be:	jb     0x41ea00
  41e9c0:	jg     0x41e9e7
  41e9c2:	std    
  41e9c3:	dec    ebx
  41e9c4:	fidivr DWORD PTR [ebx+0x42]
  41e9c7:	dec    eax
  41e9c8:	jb     0x41e980
  41e9ca:	aas    
  41e9cb:	cmp    esp,DWORD PTR [edi-0x2d3f03a8]
  41e9d1:	outs   dx,DWORD PTR ds:[esi]
  41e9d2:	adc    DWORD PTR [esp+edx*2+0x8],0x66
  41e9d7:	pop    ss
  41e9d8:	add    al,BYTE PTR [ecx*1+0x21510]
  41e9df:	xchg   esp,eax
  41e9e0:	inc    ax
  41e9e2:	gs sbb eax,0xff424662
  41e9e8:	push   edi
  41e9e9:	pop    ecx
  41e9ea:	mov    bl,0x95
  41e9ec:	push   edi
  41e9ed:	add    BYTE PTR [edx-0x78],ch
  41e9f0:	inc    ebp
  41e9f2:	retf   0xf9ea
  41e9f5:	test   DWORD PTR [edi+0x4a7b4a68],edi
  41e9fb:	loopne 0x41ea56
  41e9fd:	mov    dh,0xe
  41e9ff:	mov    ds:0x66fcba29,eax
  41ea04:	mov    BYTE PTR [ebx-0x11],bh
  41ea07:	lods   al,BYTE PTR ds:[esi]
  41ea08:	jmp    0xe873:0xedbbfce7
  41ea0f:	xchg   esi,eax
  41ea10:	push   es
  41ea11:	jbe    0x41e995
  41ea13:	add    BYTE PTR [edx-0x6a787bb7],ah
  41ea19:	push   edi
  41ea1a:	add    BYTE PTR [ecx+0x42459319],cl
  41ea20:	mov    ds,WORD PTR [edx-0x79]
  41ea23:	cld    
  41ea24:	add    BYTE PTR [ebx],al
  41ea26:	jns    0x41ea2c
  41ea28:	adc    DWORD PTR [ecx],eax
  41ea2a:	xor    al,0x50
  41ea2c:	retf   0x9dcf
  41ea2f:	aam    0xc3
  41ea31:	jge    0x41e9d9
  41ea33:	stc    
  41ea34:	mov    ds,esi
  41ea36:	imul   esi,ecx,0x97f5683f
  41ea3c:	sbb    edi,DWORD PTR [ebp-0x5a]
  41ea3f:	stc    
  41ea40:	mov    ds:0x48d9ed7b,al
  41ea45:	shr    BYTE PTR [ebp-0x2c],1
  41ea48:	xchg   DWORD PTR [edi+0x3e],ebp
  41ea4b:	or     dl,BYTE PTR [edi+eiz*2+0x26]
  41ea4f:	jl     0x41ea27
  41ea51:	push   0x61
  41ea53:	leave  
  41ea54:	cmp    edi,eax
  41ea56:	xchg   ebp,eax
  41ea57:	or     al,0xdc
  41ea59:	adc    BYTE PTR [esi],cl
  41ea5b:	add    al,0x94
  41ea5d:	fiadd  WORD PTR [ecx]
  41ea5f:	dec    esp
  41ea60:	test   DWORD PTR [eax+0x87346e],edi
  41ea66:	out    0xe5,eax
  41ea68:	mov    esp,0x6e2d9d48
  41ea6d:	out    0x6b,al
  41ea6f:	mov    DWORD PTR [ecx+0x7d6f1567],esp
  41ea75:	add    BYTE PTR [edi+0x1bf1005b],dh
  41ea7b:	call   0xeb00f883
  41ea80:	adc    bh,0xf4
  41ea83:	(bad)  
  41ea84:	(bad)  [ecx]
  41ea86:	addr16 in eax,dx
  41ea88:	in     eax,0x2
  41ea8a:	inc    esp
  41ea8b:	out    dx,al
  41ea8c:	in     eax,0x12
  41ea8e:	jle    0x41ea7a
  41ea90:	outs   dx,BYTE PTR ds:[esi]
  41ea91:	mov    al,0x67
  41ea93:	dec    esp
  41ea94:	jge    0x41eaa4
  41ea96:	test   ebp,0x6375a06e
  41ea9c:	call   FWORD PTR [eax+0x597abd67]
  41eaa2:	pop    eax
  41eaa3:	jmp    DWORD PTR [esi+0x65fc6472]
  41eaa9:	xlat   BYTE PTR ds:[ebx]
  41eaaa:	repnz dec esi
  41eaac:	aas    
  41eaad:	fdivr  DWORD PTR [edi-0x7bfd6199]
  41eab3:	mov    edi,0x579951c
  41eab8:	add    ebx,DWORD PTR [ecx-0x78793287]
  41eabe:	pop    edi
  41eabf:	fucomip st,st(1)
  41eac1:	xchg   edi,eax
  41eac2:	add    BYTE PTR [ebx-0x39bb494],cl
  41eac8:	outs   dx,BYTE PTR ds:[esi]
  41eac9:	addr16 xor cl,bl
  41eacc:	push   ecx
  41eacd:	inc    ebp
  41eace:	(bad)  
  41ead0:	pop    esi
  41ead1:	sbb    esp,DWORD PTR [edi-0x53d5088d]
  41ead7:	sbb    ch,0xb2
  41eada:	fs cld 
  41eadc:	mov    cl,0x0
  41eade:	fcomip st,st(2)
  41eae0:	add    ch,BYTE PTR [edx+0x6f]
  41eae3:	adc    dh,BYTE PTR [ebx-0x12]
  41eae6:	or     ch,BYTE PTR [edx+ebx*4-0x39b8d21]
  41eaed:	(bad)  
  41eaee:	push   eax
  41eaef:	inc    eax
  41eaf0:	pop    es
  41eaf1:	out    dx,al
  41eaf2:	sub    cl,BYTE PTR [eax-0x78]
  41eaf5:	lods   al,BYTE PTR ds:[esi]
  41eaf6:	fld    QWORD PTR [bp+0x59f1]
  41eafb:	ret    0xe8f8
  41eafe:	pop    esi
  41eaff:	ret    0x72e7
  41eb02:	aam    0x46
  41eb04:	xchg   BYTE PTR [ecx-0x78103db2],bh
  41eb0a:	bound  esi,QWORD PTR ds:[bx+si-0x69]
  41eb0f:	cmp    esp,0xffffffee
  41eb12:	sbb    edi,DWORD PTR [edx-0x1]
  41eb15:	call   0x5c4664b1
  41eb1a:	jecxz  0x41eb6a
  41eb1c:	dec    esi
  41eb1d:	add    BYTE PTR [edx-0x2b],bh
  41eb20:	dec    esp
  41eb21:	sub    al,bh
  41eb23:	mov    esp,0x7fdb1471
  41eb28:	jns    0x41eb02
  41eb2a:	xor    ah,BYTE PTR [eax+edx*4-0x40]
  41eb2e:	jno    0x41eb33
  41eb30:	jno    0x41eb3a
  41eb32:	out    0xfb,al
  41eb34:	imul   eax,DWORD PTR [eax],0x2c4cd3aa
  41eb3a:	idiv   BYTE PTR ds:0xfc9b0ff0
  41eb40:	inc    edi
  41eb41:	je     0x41eb43
  41eb43:	inc    ebx
  41eb44:	stos   BYTE PTR es:[edi],al
  41eb45:	jno    0x41eb98
  41eb47:	xchg   edi,eax
  41eb48:	retw   
  41eb4a:	inc    ebp
  41eb4b:	sbb    DWORD PTR [edx],edx
  41eb4d:	add    BYTE PTR [eax],al
  41eb4f:	sub    eax,0x406a05c9
  41eb54:	mov    ebp,0x23be441
  41eb59:	add    BYTE PTR [eax],al
  41eb5b:	in     eax,0xe6
  41eb5d:	jno    0x41eb13
  41eb5f:	lds    ebp,FWORD PTR [ebx]
  41eb61:	pop    ds
  41eb62:	add    ch,bh
  41eb64:	call   0xad34dbaa
  41eb69:	cld    
  41eb6a:	dec    edi
  41eb6b:	jbe    0x41eb2b
  41eb6d:	dec    esp
  41eb6e:	push   0x1
  41eb70:	cmp    DWORD PTR [ecx-0x3e3b9283],ecx
  41eb76:	jb     0x789b414f
  41eb7c:	mov    esp,0x6d92167a
  41eb81:	loopne 0x41eb0e
  41eb83:	clc    
  41eb84:	icebp  
  41eb85:	or     esi,DWORD PTR [edi-0x3878ae43]
  41eb8b:	sbb    eax,0x7dcc41e7
  41eb90:	les    ebp,FWORD PTR [edi-0x59]
  41eb93:	mov    ebp,0x947d8701
  41eb98:	mov    ds:0x579e7a80,eax
  41eb9d:	hlt    
  41eb9e:	pop    es
  41eb9f:	xorps  xmm2,xmm6
  41eba2:	(bad)  
  41eba3:	jmp    0xc1f:0x33d0a6
  41ebaa:	cld    
  41ebab:	std    
  41ebac:	fldenv [ebx+0x536c427f]
  41ebb2:	jg     0x41ebf6
  41ebb4:	je     0x41ec0f
  41ebb6:	jg     0x41ebfa
  41ebb8:	pusha  
  41ebb9:	pop    edi
  41ebba:	cmp    BYTE PTR [edx+0x70],0x5b
  41ebbe:	sti    
  41ebbf:	and    DWORD PTR ds:0x1ffc6b7c,0x5482581c
  41ebc9:	arpl   si,si
  41ebcb:	mov    BYTE PTR [edi+eax*1-0x2573b195],cl
  41ebd2:	in     eax,0xd3
  41ebd4:	xchg   esp,eax
  41ebd5:	bnd jg 0x41eb63
  41ebd8:	xchg   ebp,eax
  41ebd9:	push   edi
  41ebda:	add    BYTE PTR [edi+0xf717],al
  41ebe0:	xchg   esp,eax
  41ebe1:	repnz aas 
  41ebe3:	lds    edx,FWORD PTR [edi]
  41ebe5:	inc    DWORD PTR [eax]
  41ebe7:	add    BYTE PTR [eax+ebx*2+0x57947a58],dl
  41ebee:	add    BYTE PTR [esp+edx*8+0x2a0d0682],al
  41ebf5:	fisubr DWORD PTR [eax]
  41ebf7:	(bad)  
  41ebf8:	jmp    0x41ec50
  41ebfa:	ja     0x41eb84
  41ebfc:	inc    eax
  41ebfd:	pop    eax
  41ebfe:	add    BYTE PTR [eax],al
  41ec00:	or     eax,0x951f7feb
  41ec05:	push   edi
  41ec06:	add    dh,bh
  41ec08:	pop    ss
  41ec09:	scas   eax,DWORD PTR es:[edi]
  41ec0a:	add    DWORD PTR [eax],eax
  41ec0c:	add    BYTE PTR [edx+eiz*8+0x2ec3bd],dl
  41ec13:	jmp    0x41ebe2
  41ec15:	sbb    al,0xff
  41ec17:	arpl   WORD PTR [edi+eiz*1+0xd],ax
  41ec1b:	out    0xb1,al
  41ec1d:	in     al,0x27
  41ec1f:	call   0x26bb8027
  41ec24:	cld    
  41ec25:	sbb    bh,BYTE PTR [ebp+0x79]
  41ec28:	and    al,0x8b
  41ec2a:	fs out 0x69,al
  41ec2d:	adc    al,0x29
  41ec2f:	call   0xa7c18037
  41ec34:	add    dh,bl
  41ec36:	in     eax,dx
  41ec37:	mov    ebx,0xe767ee84
  41ec3c:	lock adc dh,0xda
  41ec40:	js     0x41ec18
  41ec42:	cwde   
  41ec43:	push   ss
  41ec44:	jns    0x41ec1c
  41ec46:	lods   al,BYTE PTR ds:[esi]
  41ec47:	push   ss
  41ec48:	imul   esp,DWORD PTR [esi+0x43c3dd30],0x7f
  41ec4f:	mov    ds:0x9abe0ef8,al
  41ec54:	aam    0xbd
  41ec56:	fst    st(0)
  41ec58:	test   ebx,0x20f70b58
  41ec5e:	fs pop ebx
  41ec60:	icebp  
  41ec61:	dec    edi
  41ec62:	pop    ecx
  41ec63:	lds    esp,FWORD PTR [eax-0x36629bed]
  41ec69:	ins    BYTE PTR es:[edi],dx
  41ec6a:	cmp    DWORD PTR [eax],ebp
  41ec6c:	add    BYTE PTR [edx+ecx*8-0x14ff816b],dl
  41ec73:	das    
  41ec74:	es sub eax,0x3e7c532
  41ec7a:	xchg   esp,eax
  41ec7b:	in     eax,dx
  41ec7c:	out    dx,al
  41ec7d:	ror    BYTE PTR [eax-0x35],cl
  41ec80:	mov    ch,0x6a
  41ec82:	xchg   BYTE PTR [eax+0x78d3c3d8],ch
  41ec88:	fs enter 0x63ca,0xff
  41ec8d:	call   0xe5b42a04
  41ec92:	add    DWORD PTR [eax-0x18],0x5d62e7eb
  41ec99:	aas    
  41ec9a:	push   ebx
  41ec9b:	into   
  41ec9c:	mov    ch,al
  41ec9e:	sbb    bl,BYTE PTR [eax+0x2b]
  41eca1:	cmp    bl,BYTE PTR [ebx]
  41eca3:	dec    ebx
  41eca4:	mov    BYTE PTR [edx-0x71],ch
  41eca7:	(bad)  
  41eca8:	cld    
  41eca9:	jmp    0x631dabb6
  41ecae:	sbb    dh,bh
  41ecb0:	(bad)  
  41ecb1:	call   0x2cc8b74d
  41ecb6:	hlt    
  41ecb7:	jbe    0x41ec39
  41ecb9:	fst    QWORD PTR [eax-0x54c20000]
  41ecbf:	push   0x4f
  41ecc1:	pusha  
  41ecc2:	fs dec ebx
  41ecc4:	les    ebp,FWORD PTR [eax+edi*4]
  41ecc7:	(bad)  
  41ecc8:	cld    
  41ecc9:	jmp    0x81846865
  41ecce:	scas   al,BYTE PTR es:[edi]
  41eccf:	push   cs
  41ecd0:	in     al,dx
  41ecd1:	fist   DWORD PTR [edi+0x63]
  41ecd4:	xchg   esp,ebx
  41ecd6:	add    BYTE PTR [edi-0x6f3e4ed6],bh
  41ecdc:	add    BYTE PTR [eax],al
  41ecde:	out    0x15,al
  41ece0:	in     eax,0xfe
  41ece2:	call   0x9dc2667e
  41ece7:	cwde   
  41ece8:	add    BYTE PTR [eax],al
  41ecea:	jb     0x41ed38
  41ecec:	imul   ecx,DWORD PTR [eax+0x423d7ffd],0x2f
  41ecf3:	xchg   edi,eax
  41ecf4:	jg     0x41eceb
  41ecf6:	div    BYTE PTR [ebx-0x31]
  41ecf9:	(bad)  
  41ecfa:	call   0xe1876696
  41ecff:	adc    al,0xa3
  41ed01:	jae    0x41ecfb
  41ed03:	mov    ecx,0x9a004c62
  41ed08:	adc    BYTE PTR [eax],dl
  41ed0a:	adc    edi,ebp
  41ed0c:	inc    BYTE PTR [eax+0x38e2bac0]
  41ed12:	add    DWORD PTR [ebp-0x47ba3a02],ebp
  41ed18:	sti    
  41ed19:	lds    eax,FWORD PTR [ebp-0x36]
  41ed1c:	sti    
  41ed1d:	or     dh,BYTE PTR [esi-0x1f422690]
  41ed23:	scas   al,BYTE PTR es:[edi]
  41ed24:	jecxz  0x41ed6e
  41ed26:	add    eax,0xec41e639
  41ed2b:	lock and eax,0xfd31840c
  41ed31:	(bad)  
  41ed32:	call   FWORD PTR [edx-0x50]
  41ed35:	cmp    eax,0x870a50c
  41ed3a:	dec    eax
  41ed3b:	add    BYTE PTR [eax-0x5eb976f1],al
  41ed41:	pop    esi
  41ed42:	jg     0x41ed7c
  41ed44:	(bad)  
  41ed45:	lds    eax,FWORD PTR [ebx]
  41ed47:	lea    eax,[ebx+0x55836240]
  41ed4d:	cld    
  41ed4e:	jo     0x41ed55
  41ed50:	mov    ah,0xa1
  41ed52:	lock jmp 0x41ed86
  41ed55:	jge    0x41edb8
  41ed57:	hlt    
  41ed58:	cmp    eax,0x3df4797d
  41ed5d:	imul   eax,DWORD PTR [eax-0x1d26b],0x103f020e
  41ed67:	mov    esi,DWORD PTR [ebx]
  41ed69:	push   cs
  41ed6a:	xchg   DWORD PTR [ecx],edi
  41ed6c:	sub    eax,0xc175fb4c
  41ed71:	xlat   BYTE PTR ds:[ebx]
  41ed72:	push   ebx
  41ed73:	adc    BYTE PTR [ecx-0x44],dh
  41ed76:	jo     0x41ed82
  41ed78:	jle    0x41edbb
  41ed7a:	in     al,dx
  41ed7b:	add    BYTE PTR [ebx-0x6bfe055f],dh
  41ed81:	(bad)  
  41ed82:	call   0xead6f83
  41ed87:	inc    eax
  41ed88:	xchg   esp,eax
  41ed89:	rol    al,0x24
  41ed8c:	xchg   esp,eax
  41ed8d:	push   edi
  41ed8e:	sub    edi,DWORD PTR [edi+0x55ecab43]
  41ed94:	mov    ecx,cr0
  41ed97:	out    0x91,al
  41ed99:	repnz add eax,DWORD PTR [eax]
  41ed9c:	and    BYTE PTR [ebx],dl
  41ed9e:	and    esi,0x0
  41eda1:	mov    bl,BYTE PTR [edx+0x7c]
  41eda4:	mov    ebp,0x81005794
  41eda9:	jge    0x41ee16
  41edab:	in     al,dx
  41edac:	cmp    eax,0xc581c1f
  41edb1:	dec    edx
  41edb2:	adc    edi,ebp
  41edb4:	xlat   BYTE PTR ds:[ebx]
  41edb5:	in     al,0x3f
  41edb7:	sar    eax,0x73
  41edba:	call   0xfc67:0x9ef3e7d3
  41edc1:	arpl   si,ax
  41edc3:	(bad)  
  41edc4:	(bad)  
  41edc5:	pop    ebx
  41edc6:	push   edi
  41edc7:	adc    ch,BYTE PTR [bx+si+0x45]
  41edcb:	sar    bh,0x3e
  41edce:	xor    DWORD PTR ds:0x577b41,esp
  41edd4:	jl     0x41ee39
  41edd6:	xchg   esp,eax
  41edd7:	mov    esp,0xe6579424
  41eddc:	or     eax,0x1f9969
  41ede1:	xchg   esp,eax
  41ede2:	inc    ebx
  41ede3:	(bad)  
  41ede4:	cmp    al,ch
  41ede6:	cli    
  41ede7:	add    eax,DWORD PTR [eax]
  41ede9:	mov    DWORD PTR ds:0x570a7a81,edx
  41edef:	in     eax,dx
  41edf0:	or     ebx,edx
  41edf2:	xchg   ebx,eax
  41edf3:	data16 dec BYTE PTR [esp+ebx*4]
  41edf7:	jo     0x41ede1
  41edf9:	xchg   edi,eax
  41edfa:	add    BYTE PTR ds:0xa361eebe,ah
  41ee00:	push   0x515e363
  41ee05:	add    BYTE PTR [ecx-0x2f970b82],cl
  41ee0b:	pusha  
  41ee0c:	data16 out 0xce,al
  41ee0f:	std    
  41ee10:	jae    0x41ee25
  41ee12:	or     eax,0xfb7edeba
  41ee17:	jmp    0x41edc4
  41ee19:	inc    eax
  41ee1a:	pop    ecx
  41ee1b:	hlt    
  41ee1c:	and    eax,0xd200941f
  41ee21:	sbb    DWORD PTR [ebx+eiz*8],edx
  41ee24:	aam    0x4
  41ee26:	and    BYTE PTR [edx],dl
  41ee28:	push   0xffffffe6
  41ee2a:	add    eax,DWORD PTR [ecx]
  41ee2c:	cmp    al,0x10
  41ee2e:	jl     0x41ee2e
  41ee30:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ee31:	data16 or BYTE PTR [ecx+ebp*2-0x199f8530],0x7a
  41ee3a:	ficomp WORD PTR [eax+0x69]
  41ee3d:	and    BYTE PTR [ecx+eax*1],bl
  41ee40:	xchg   edx,eax
  41ee41:	adc    BYTE PTR ds:0x1b80dec7,cl
  41ee47:	aad    0xdb
  41ee49:	jp     0x41ee29
  41ee4b:	push   eax
  41ee4c:	outs   dx,DWORD PTR ds:[esi]
  41ee4d:	mov    dh,0x9f
  41ee4f:	mov    al,0x7d
  41ee51:	adc    DWORD PTR [eax-0xd],ebp
  41ee54:	es add al,0x39
  41ee57:	(bad)  
  41ee58:	outs   dx,BYTE PTR ds:[esi]
  41ee59:	jnp    0x41ee31
  41ee5b:	pop    eax
  41ee5c:	and    DWORD PTR [ebx+0x3e701c3],eax
  41ee62:	xchg   ecx,eax
  41ee63:	sub    BYTE PTR [eax+0x66],0x18
  41ee67:	pusha  
  41ee68:	popa   
  41ee69:	imul   eax,DWORD PTR [eax],0xfffffffb
  41ee6c:	iret   
  41ee6d:	out    0x3,eax
  41ee6f:	xchg   esp,eax
  41ee70:	pop    edi
  41ee71:	mov    bl,0x5b
  41ee73:	add    dh,dh
  41ee75:	(bad)  
  41ee76:	cmp    BYTE PTR [esi-0x26720040],ah
  41ee7c:	mov    eax,0x88c52ac6
  41ee81:	jmp    0x41eeed
  41ee83:	cmp    al,0xf7
  41ee85:	push   ebp
  41ee86:	mov    esi,0xaa88575e
  41ee8b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ee8c:	cmp    DWORD PTR [edi-0x90b40a],0xffffffe8
  41ee93:	xchg   edi,eax
  41ee94:	push   esi
  41ee95:	inc    eax
  41ee96:	rcl    BYTE PTR [eax-0x67f87bf3],1
  41ee9c:	add    BYTE PTR [eax],al
  41ee9e:	jae    0x41ee76
  41eea0:	test   BYTE PTR [eax-0x5a0cfbc],0xa1
  41eea7:	pop    ds
  41eea8:	ret    0x5cfc
  41eeab:	adc    bl,BYTE PTR [edi+edi*8]
  41eeae:	call   0x24c89f4a
  41eeb3:	fcomp  QWORD PTR [edx+edx*1-0x3b]
  41eeb7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eeb8:	sar    bh,0x69
  41eebb:	cmp    dh,BYTE PTR [edi+0x97e8fe]
  41eec1:	or     eax,0xfc5f3567
  41eec6:	jmp    0xe89573a9
  41eecb:	xchg   edi,eax
  41eecc:	add    BYTE PTR [ecx-0x7747ffcc],cl
  41eed2:	xor    esi,DWORD PTR [ecx-0x40]
  41eed5:	shl    bl,cl
  41eed7:	ins    BYTE PTR es:[edi],dx
  41eed8:	test   eax,0xf1624bd3
  41eedd:	push   es
  41eede:	sub    DWORD PTR [ecx],0x3b
  41eee1:	ret    0xe969
  41eee4:	inc    edi
  41eee5:	pop    esp
  41eee6:	adc    bh,cl
  41eee8:	xchg   al,al
  41eeea:	jmp    DWORD PTR [ebx+0x57]
  41eeed:	shl    BYTE PTR [edi],cl
  41eeef:	add    BYTE PTR [esi+0x38896c9d],al
  41eef5:	rol    DWORD PTR [ecx-0x790ac640],cl
  41eefb:	jbe    0x41eeca
  41eefd:	fld    DWORD PTR [ecx-0xc]
  41ef00:	jle    0x41eec5
  41ef02:	adc    dh,bh
  41ef04:	mov    ds:0x7d23f60a,eax
  41ef09:	cmp    DWORD PTR [eax],edx
  41ef0b:	(bad)  
  41ef0c:	sti    
  41ef0d:	pop    esi
  41ef0e:	dec    esp
  41ef0f:	(bad)  
  41ef10:	dec    BYTE PTR [eax]
  41ef12:	push   eax
  41ef13:	(bad)  
  41ef14:	call   0xad82053f
  41ef19:	add    eax,0x71c3380c
  41ef1f:	or     BYTE PTR [edi],ah
  41ef21:	lahf   
  41ef22:	sti    
  41ef23:	cmp    BYTE PTR [ebx+0x1],bh
  41ef26:	je     0x41ef38
  41ef28:	ret    0xf49e
  41ef2b:	mov    edi,DWORD PTR [eax-0x4a78c814]
  41ef31:	add    DWORD PTR [eax],eax
  41ef33:	add    BYTE PTR [eax],al
  41ef35:	mov    edi,0xf633e76f
  41ef3a:	ins    DWORD PTR es:[edi],dx
  41ef3b:	in     al,dx
  41ef3c:	mov    edi,DWORD PTR [ebx]
  41ef3e:	fadd   st,st(7)
  41ef40:	call   0x3c9676
  41ef45:	out    0x9e,al
  41ef47:	add    al,0x85
  41ef49:	sub    eax,0x9b830751
  41ef4e:	pop    eax
  41ef4f:	cld    
  41ef50:	dec    edi
  41ef51:	adc    cl,BYTE PTR [esi]
  41ef53:	aam    0x12
  41ef55:	ins    DWORD PTR es:[edi],dx
  41ef56:	add    al,0x87
  41ef58:	jne    0x41ef13
  41ef5a:	mov    esp,0xe3c3bff2
  41ef5f:	xchg   DWORD PTR [edi+0x2e9],eax
  41ef65:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ef66:	xchg   ebp,eax
  41ef67:	hlt    
  41ef68:	adc    DWORD PTR [ebx+ecx*1-0x5ae10084],0x68
  41ef70:	cmp    BYTE PTR [ebx],dl
  41ef72:	mov    al,ds:0x93940001
  41ef77:	std    
  41ef78:	out    0x53,eax
  41ef7a:	add    BYTE PTR [bx+si],al
  41ef7d:	repz xchg esp,eax
  41ef7f:	push   esp
  41ef80:	cld    
  41ef81:	xor    edi,0xf2944011
  41ef87:	sub    esi,ebp
  41ef89:	mov    esp,0xaf15b6e4
  41ef8e:	daa    
  41ef8f:	pop    ds
  41ef90:	mov    edi,0x7fff901e
  41ef95:	lods   eax,DWORD PTR ds:[esi]
  41ef96:	cdq    
  41ef97:	in     eax,dx
  41ef98:	or     al,0x0
  41ef9a:	pop    ss
  41ef9b:	sub    BYTE PTR [eax],al
  41ef9d:	push   eax
  41ef9e:	pop    ds
  41ef9f:	push   edi
  41efa0:	pop    eax
  41efa1:	imul   edx,DWORD PTR [ebx-0x2b7bff99],0x9b510bb3
  41efab:	jle    0x41ef2d
  41efad:	(bad)  
  41efae:	xchg   ebx,eax
  41efaf:	addr16 pop eax
  41efb1:	shl    DWORD PTR [ebp+0x54840068],0x13
  41efb8:	cld    
  41efb9:	push   esp
  41efba:	rsm    
  41efbc:	pop    eax
  41efbd:	and    eax,0x5d006798
  41efc2:	retf   0x3f90
  41efc5:	xor    BYTE PTR [ebp+0x3a],cl
  41efc8:	dec    esi
  41efc9:	or     ecx,DWORD PTR ss:[edi]
  41efcc:	add    DWORD PTR [eax],eax
  41efce:	xchg   esp,eax
  41efcf:	cmc    
  41efd0:	das    
  41efd1:	push   esi
  41efd2:	sbb    DWORD PTR [esi],ebx
  41efd4:	int    0xfe
  41efd6:	inc    ebx
  41efd7:	addr16 iret 
  41efd9:	mov    BYTE PTR [edx-0x6b6fdb16],dl
  41efdf:	push   ebx
  41efe0:	sti    
  41efe1:	mov    BYTE PTR [eax+0x7f7a7700],cl
  41efe7:	mov    BYTE PTR [edi-0x518aa33f],ah
  41efed:	add    dl,BYTE PTR [eax+eax*1+0x196c5bd9]
  41eff4:	sbb    bh,ch
  41eff6:	xchg   ecx,eax
  41eff7:	xchg   DWORD PTR [ebp-0x35],ebp
  41effa:	cli    
  41effb:	pop    esp
  41effc:	out    0xd8,al
  41effe:	add    dl,bl
  41f000:	sar    DWORD PTR [esi],cl
  41f002:	xchg   esp,eax
  41f003:	rcr    DWORD PTR [ebp+0x25],1
  41f006:	(bad)
  41f009:	mov    bl,0xcc
  41f00b:	or     al,0x1b
  41f00d:	fisttp DWORD PTR ds:0x48da0054
  41f013:	cmp    eax,0x9b7d73f0
  41f018:	jmp    esi
  41f01a:	add    edx,ecx
  41f01c:	add    eax,0x73eafb
  41f021:	call   0x9405:0x467e12d3
  41f028:	add    BYTE PTR [eax-0x7e],dh
  41f02b:	aaa    
  41f02c:	jmp    esi
  41f02e:	add    edx,DWORD PTR [ecx+0x1f0c4034]
  41f034:	sbb    esi,0x4
  41f037:	xchg   esp,eax
  41f038:	add    BYTE PTR [edx],bl
  41f03a:	mov    ah,0x78
  41f03c:	xor    al,0x40
  41f03e:	cld    
  41f03f:	push   ds
  41f040:	add    DWORD PTR [esi],0x5
  41f043:	xchg   esp,eax
  41f044:	add    BYTE PTR [edx],bh
  41f046:	mov    ah,0x60
  41f048:	xor    al,0x69
  41f04a:	dec    eax
  41f04b:	mov    bh,0xe6
  41f04d:	cli    
  41f04e:	mov    esi,DWORD PTR [ecx]
  41f050:	sbb    eax,ebp
  41f052:	add    edx,DWORD PTR [eax+ebp*2+0x5c415d82]
  41f059:	push   ss
  41f05a:	xchg   ecx,eax
  41f05b:	rol    DWORD PTR [eax+eax*1],1
  41f05e:	cmp    DWORD PTR [ebx+0xe90026],0xfbf4271a
  41f068:	push   edi
  41f069:	pop    esp
  41f06a:	mov    esp,DWORD PTR [edi+0x74]
  41f06d:	pop    ebx
  41f06e:	cld    
  41f06f:	jmp    0x5d144dbb
  41f074:	push   ds
  41f075:	in     al,0xfe
  41f077:	call   0x5fc8a113
  41f07c:	cmp    al,0x5b
  41f07e:	cld    
  41f07f:	jmp    0xe8996ea4
  41f084:	xchg   edi,eax
  41f085:	add    BYTE PTR [edi-0x3a52b79],al
  41f08b:	jmp    0xadca1f06
  41f090:	jnp    0x41f082
  41f092:	xchg   BYTE PTR [edi+0x24],ah
  41f095:	pop    ebx
  41f096:	cld    
  41f097:	jmp    0xe8d176c0
  41f09c:	xchg   edi,eax
  41f09d:	add    BYTE PTR [eax+0x60],dl
  41f0a0:	push   ss
  41f0a1:	fdiv   st(6),st
  41f0a3:	call   0x6ddf743f
  41f0a8:	cwde   
  41f0a9:	add    BYTE PTR [eax],al
  41f0ab:	ficomp WORD PTR [ebx+eiz*8-0x17]
  41f0af:	jmp    0x5a3f:0x678b0097
  41f0b6:	cld    
  41f0b7:	jmp    0x973ebc06
  41f0bc:	adc    bh,BYTE PTR [edi]
  41f0be:	or     edx,DWORD PTR [esi]
  41f0c0:	push   ebp
  41f0c1:	mov    ch,al
  41f0c3:	adc    dl,dl
  41f0c5:	(bad)  
  41f0c6:	(bad)  
  41f0c7:	cmp    eax,0xe7521300
  41f0cc:	cli    
  41f0cd:	xchg   edi,eax
  41f0ce:	add    BYTE PTR [eax],al
  41f0d0:	lahf   
  41f0d1:	pop    ebx
  41f0d2:	pop    ds
  41f0d3:	or     al,ch
  41f0d5:	arpl   WORD PTR ds:0x80250055,ax
  41f0db:	ret    0xbafe
  41f0de:	mov    al,bl
  41f0e0:	pop    edi
  41f0e1:	inc    DWORD PTR [edx]
  41f0e3:	add    BYTE PTR [ebx-0x7d],dl
  41f0e6:	push   0x0
  41f0e8:	(bad)  
  41f0e9:	xor    dh,BYTE PTR [ebx+0x702d4074]
  41f0ef:	mov    bl,0x8
  41f0f1:	cld    
  41f0f2:	(bad)  
  41f0f3:	call   FWORD PTR [edx+0x76]
  41f0f6:	icebp  
  41f0f7:	or     cl,0x41
  41f0fa:	or     DWORD PTR [edi-0x4fc18ff],eax
  41f100:	adc    BYTE PTR [esi-0x37],bh
  41f103:	add    BYTE PTR [ebx+0x20],cl
  41f106:	shl    DWORD PTR ds:0x3d59f,1
  41f10c:	add    BYTE PTR [ebx],al
  41f10e:	add    DWORD PTR [edi+0x41187],eax
  41f114:	add    BYTE PTR [eax+0x3],ch
  41f117:	cwde   
  41f118:	adc    ebp,0xfffffffe
  41f11b:	jae    0x41f124
  41f11d:	inc    esi
  41f11e:	out    dx,eax
  41f11f:	out    0x39,eax
  41f121:	imul   esp,ecx,0xfffffffb
  41f124:	inc    ebx
  41f125:	out    0x7d,al
  41f127:	push   esp
  41f128:	add    DWORD PTR [ebp+0xe271fe],ebp
  41f12e:	es repz out 0x12,eax
  41f132:	mov    ebp,0x99878904
  41f137:	std    
  41f138:	(bad)  
  41f139:	call   FWORD PTR [ebp+0x2ffd2df]
  41f13f:	cdq    
  41f140:	std    
  41f141:	(bad)  
  41f142:	jge    0x41f12a
  41f144:	xor    dh,al
  41f146:	cmp    esp,eax
  41f148:	xchg   DWORD PTR [edi-0x227],eax
  41f14e:	lock les esi,FWORD PTR [eax+0x7]
  41f152:	xchg   esp,eax
  41f153:	pop    ss
  41f154:	pop    edi
  41f155:	adc    dh,ah
  41f157:	push   ebp
  41f158:	sar    bh,0x10
  41f15b:	jmp    0x41f148
  41f15d:	(bad)  
  41f15e:	cmp    ebp,DWORD PTR [eax-0x50]
  41f161:	cld    
  41f162:	dec    edx
  41f163:	in     eax,0x86
  41f165:	(bad)  
  41f166:	xchg   ebp,eax
  41f167:	add    BYTE PTR [bx+si+0x23],dl
  41f16b:	sbb    bl,BYTE PTR [edi-0x4c]
  41f16e:	mov    ah,0x68
  41f170:	add    BYTE PTR [eax],al
  41f172:	cld    
  41f173:	imul   eax,DWORD PTR [esi-0x3],0x447aa0b
  41f17a:	test   dh,cl
  41f17c:	ret    
  41f17d:	call   FWORD PTR [esi+0x26]
  41f180:	mov    ch,0x88
  41f182:	add    BYTE PTR [ecx-0x4f],bh
  41f185:	mov    dl,BYTE PTR [ebx]
  41f187:	ins    BYTE PTR es:[edi],dx
  41f188:	add    DWORD PTR [eax],eax
  41f18a:	xchg   esp,eax
  41f18b:	xchg   edi,eax
  41f18c:	inc    esi
  41f18d:	inc    edx
  41f18e:	(bad)  [edi-0x77]
  41f191:	inc    edx
  41f192:	add    ah,cl
  41f194:	repnz hlt 
  41f196:	jmp    0x41f13e
  41f198:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f199:	add    BYTE PTR [edi+0x3],bh
  41f19c:	mov    al,ds:0x5a940001
  41f1a1:	pop    edi
  41f1a2:	push   DWORD PTR [ebx-0x2c774e26]
  41f1a8:	(bad)  
  41f1a9:	cmp    eax,0x8462a3f9
  41f1ae:	mov    edi,0x8c8b2120
  41f1b3:	in     al,dx
  41f1b4:	push   0xbed50000
  41f1b9:	dec    eax
  41f1ba:	jae    0x41f1a6
  41f1bc:	aam    0x97
  41f1be:	push   ebx
  41f1bf:	xchg   ebp,eax
  41f1c0:	addr16 add al,ch
  41f1c3:	imul   ebp,DWORD PTR [ebx-0x58ef03a2],0x1128d4
  41f1cd:	sub    cl,BYTE PTR [eax]
  41f1cf:	les    ebx,FWORD PTR [ecx-0xd]
  41f1d2:	jmp    DWORD PTR [eax+eax*8-0x47ef731a]
  41f1d9:	out    0x3,eax
  41f1db:	xchg   esp,eax
  41f1dc:	test   esp,esi
  41f1de:	mov    bl,BYTE PTR [edi-0x30678281]
  41f1e4:	jmp    esi
  41f1e6:	add    ebp,DWORD PTR [ecx]
  41f1e8:	or     DWORD PTR [esi],0x66009403
  41f1ee:	test   BYTE PTR [edi-0x12],0xa6
  41f1f2:	add    ebx,edx
  41f1f4:	ret    0x255
  41f1f7:	add    BYTE PTR [edx+0x59],ch
  41f1fa:	rcr    DWORD PTR [ebx+0x0],cl
  41f1fd:	repz ss cmc 
  41f200:	mov    ebx,0xf0c67100
  41f205:	inc    esi
  41f206:	sub    DWORD PTR [esi+0x6f696c1c],esi
  41f20c:	pop    DWORD PTR [ebp-0x4ebdf455]
  41f212:	jno    0x41f1ef
  41f214:	mov    ds:0xc0f9267d,eax
  41f219:	cmp    cl,dh
  41f21b:	pusha  
  41f21c:	je     0x41f276
  41f21e:	jae    0x41f1a4
  41f220:	jg     0x41f221
  41f222:	out    0x3,al
  41f224:	inc    esp
  41f225:	inc    edx
  41f226:	stos   DWORD PTR es:[edi],eax
  41f227:	pusha  
  41f228:	stos   DWORD PTR es:[edi],eax
  41f229:	jge    0x41f250
  41f22b:	pop    es
  41f22c:	sbb    eax,ebx
  41f22e:	ficomp DWORD PTR [edi-0x7a]
  41f231:	ins    BYTE PTR es:[edi],dx
  41f232:	clc    
  41f233:	ret    
  41f234:	xchg   ebx,eax
  41f235:	adc    ebx,ebp
  41f237:	lea    eax,[esi]
  41f239:	pop    ecx
  41f23a:	setae  bl
  41f23d:	add    edi,esp
  41f23f:	add    eax,DWORD PTR [edx]
  41f241:	out    0x71,eax
  41f243:	add    edi,0x1
  41f246:	add    cl,ch
  41f248:	xchg   edi,eax
  41f249:	mov    eax,DWORD PTR [ebx]
  41f24b:	jns    0x41f25c
  41f24d:	add    BYTE PTR [ebx+0x36be3cb0],al
  41f253:	sub    al,0xa0
  41f255:	int3   
  41f256:	pop    ds
  41f257:	bound  edx,QWORD PTR [ecx+0x8]
  41f25a:	sub    DWORD PTR [eax-0x28b2b600],0xbf20d7e2
  41f264:	adc    ebp,DWORD PTR [ecx+eax*4]
  41f267:	mov    edi,0xfcace7ed
  41f26c:	aam    0x83
  41f26e:	out    dx,al
  41f26f:	aas    
  41f270:	jmp    0x644d368b
  41f275:	pop    eax
  41f276:	rcr    BYTE PTR [esi],cl
  41f278:	bound  edx,QWORD PTR [edi]
  41f27a:	mov    ah,0xfe
  41f27c:	call   0x79757c18
  41f281:	push   0x533fbb35
  41f286:	mov    BYTE PTR [edx+0x31],cl
  41f289:	pop    ds
  41f28a:	adc    DWORD PTR [ebx-0x18],0xcd810097
  41f291:	addps  xmm0,xmm2
  41f294:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f295:	jb     0x41f2ed
  41f297:	mov    DWORD PTR [eax],ebx
  41f299:	sar    BYTE PTR [esi+0x72],cl
  41f29c:	adc    DWORD PTR [edi-0x6817a86f],ebx
  41f2a2:	add    BYTE PTR [edx+0x5e],dh
  41f2a5:	sbb    bl,bl
  41f2a7:	cld    
  41f2a8:	jmp    0xf2caef70
  41f2ad:	das    
  41f2ae:	idiv   edx
  41f2b0:	out    0x3a,al
  41f2b2:	push   esp
  41f2b3:	jb     0x41f28a
  41f2b5:	repnz repnz out dx,eax
  41f2b8:	sti    
  41f2b9:	push   edi
  41f2ba:	push   edi
  41f2bb:	xchg   BYTE PTR [ebx+eiz*8],ah
  41f2be:	mov    ah,0x5d
  41f2c0:	add    BYTE PTR [eax],al
  41f2c2:	inc    esp
  41f2c3:	rol    DWORD PTR [eax],0x0
  41f2c6:	mov    BYTE PTR [ebx+0x1f5183e8],cl
  41f2cc:	dec    edi
  41f2cd:	push   esi
  41f2ce:	mov    ah,ah
  41f2d0:	pop    ecx
  41f2d1:	icebp  
  41f2d2:	xor    esi,DWORD PTR [esi+0x60c4f887]
  41f2d8:	in     al,dx
  41f2d9:	test   DWORD PTR [edx],esp
  41f2db:	cmp    BYTE PTR [ebx],al
  41f2dd:	xor    ch,ch
  41f2df:	jecxz  0x41f262
  41f2e1:	add    BYTE PTR ds:0x4d7d7f03,ch
  41f2e7:	add    eax,DWORD PTR [edi+0x41bd395f]
  41f2ed:	jmp    FWORD PTR ds:0xe88d0a38
  41f2f3:	push   ss
  41f2f4:	in     eax,0xe9
  41f2f6:	pop    ebp
  41f2f7:	add    eax,DWORD PTR [eax]
  41f2f9:	lea    edi,[eax]
  41f2fb:	pop    ss
  41f2fc:	xchg   BYTE PTR [ebp-0x3],al
  41f2ff:	mov    ch,0x71
  41f301:	adc    BYTE PTR [esi-0x3617fbc8],al
  41f307:	(bad)  
  41f308:	(bad)  
  41f309:	(bad)  
  41f30a:	js     0x41f326
  41f30c:	jnp    0x41f359
  41f30e:	outs   dx,BYTE PTR ds:[esi]
  41f30f:	push   0x406400f4
  41f314:	lock mov edi,DWORD PTR [edx+0x17f84101]
  41f31b:	add    edi,ebx
  41f31d:	jne    0x41f2d0
  41f31f:	mov    ch,0x71
  41f321:	sbb    BYTE PTR [edx+0xff1038],dl
  41f327:	sub    BYTE PTR [ebx-0x5],dl
  41f32a:	jne    0x41f2dd
  41f32c:	jmp    0xf087:0x2ac19c8
  41f333:	sub    BYTE PTR [esi+0x36061a70],ch
  41f339:	add    al,0x8b
  41f33b:	xchg   esp,eax
  41f33c:	lea    ebp,[ebx+0x44]
  41f33f:	add    BYTE PTR [edi+0x5a],0x83
  41f343:	push   esp
  41f344:	adc    al,0x8
  41f346:	(bad)  
  41f347:	fst    DWORD PTR [esi-0x34721800]
  41f34d:	pop    ebp
  41f34e:	cld    
  41f34f:	(bad)  
  41f351:	push   esp
  41f352:	adc    cl,0x9f
  41f355:	sbb    edi,ebp
  41f357:	loope  0x41f3c4
  41f359:	aam    0xbb
  41f35b:	dec    ebx
  41f35c:	aaa    
  41f35d:	push   0x5a865823
  41f362:	push   esp
  41f363:	sub    al,0x5e
  41f365:	inc    esp
  41f366:	std    
  41f367:	xor    edx,edx
  41f369:	(bad)  
  41f36a:	cld    
  41f36b:	retf   
  41f36c:	in     eax,dx
  41f36d:	mov    dh,0xc6
  41f36f:	push   esi
  41f370:	xor    BYTE PTR [eax],al
  41f372:	push   ebx
  41f373:	shrd   DWORD PTR [esi-0x15],edi,0xa0
  41f378:	jmp    0x88b3:0x9a94fbe4
  41f37f:	sbb    DWORD PTR [edi-0x79],0x8fe70fd7
  41f386:	(bad)  
  41f387:	xrelease mov DWORD PTR [bp+si+0x0],eax
  41f38c:	loopne 0x41f370
  41f38e:	mov    esi,0x589d0d07
  41f393:	out    0xe6,eax
  41f395:	sbb    al,0x5b
  41f397:	cld    
  41f398:	sbb    BYTE PTR [eax],ch
  41f39a:	fcom   DWORD PTR [ebx-0x35]
  41f39d:	je     0x41f3ab
  41f39f:	mov    DWORD PTR [ecx-0x6bc00e55],eax
  41f3a5:	jno    0x41f3a7
  41f3a7:	mov    ebx,DWORD PTR [ecx+0x4b]
  41f3aa:	mov    al,0x69
  41f3ac:	xchg   esi,eax
  41f3ad:	dec    esi
  41f3ae:	xor    eax,DWORD PTR [eax+0x30d5689c]
  41f3b4:	pop    ss
  41f3b5:	add    DWORD PTR [edx+0x10],esp
  41f3b8:	xchg   esp,eax
  41f3b9:	retf   
  41f3ba:	sti    
  41f3bb:	mov    ah,dl
  41f3bd:	rcl    ch,1
  41f3bf:	(bad)  
  41f3c0:	(bad)
  41f3c4:	adc    edi,DWORD PTR [ebx-0x7b8c1642]
  41f3ca:	and    ebx,DWORD PTR [eax-0x25]
  41f3cd:	jmp    0x2e9:0x13485ce8
  41f3d4:	xchg   esp,eax
  41f3d5:	add    BYTE PTR [esi+eax*1],bl
  41f3d8:	adc    eax,0x3c5c9ac3
  41f3dd:	or     bl,dl
  41f3df:	dec    edx
  41f3e0:	sbb    BYTE PTR [ecx],0xa8
  41f3e3:	(bad)  
  41f3e4:	xchg   esp,eax
  41f3e5:	xchg   DWORD PTR [ebx],esi
  41f3e7:	pusha  
  41f3e8:	les    ecx,FWORD PTR [ecx-0x9c3f3e5]
  41f3ee:	je     0x41f44c
  41f3f0:	add    BYTE PTR [eax],ah
  41f3f2:	mov    DWORD PTR [ebx],esp
  41f3f4:	pusha  
  41f3f5:	mov    eax,0x9b412fb9
  41f3fa:	add    BYTE PTR [eax+ecx*4-0x3cbd7f01],dh
  41f401:	fs scas al,BYTE PTR es:[edi]
  41f403:	popa   
  41f404:	push   ebx
  41f405:	or     al,0xbe
  41f407:	(bad)  
  41f408:	push   esp
  41f409:	retf   
  41f40a:	clc    
  41f40b:	mov    ds,WORD PTR es:[ecx-0x12]
  41f40f:	or     DWORD PTR [ebx+0x48],eax
  41f412:	and    DWORD PTR [esi],0x76684bfb
  41f418:	push   ebp
  41f419:	rcl    DWORD PTR [edx+eiz*2+0x43],1
  41f41d:	inc    edi
  41f41e:	std    
  41f41f:	fadd   DWORD PTR [ebx-0x46]
  41f422:	jo     0x41f40b
  41f424:	add    edx,DWORD PTR [ebx+eax*4+0x3e1c4383]
  41f42b:	push   cs
  41f42c:	jge    0x41f3ce
  41f42e:	push   ebp
  41f42f:	push   ebp
  41f431:	mov    eax,0x97097a7f
  41f436:	cwde   
  41f437:	femms  
  41f439:	cwde   
  41f43a:	add    BYTE PTR [edi-0x3ab9ae7],dh
  41f440:	pop    ebp
  41f441:	mov    edx,ds
  41f443:	ss and al,0xf0
  41f446:	rcl    edi,1
  41f448:	dec    edi
  41f449:	xchg   ecx,eax
  41f44a:	(bad)  
  41f44b:	fbstp  TBYTE PTR [esi]
  41f44d:	mov    ds:0xc43480dd,al
  41f452:	push   ebx
  41f453:	jo     0x41f432
  41f455:	add    BYTE PTR [ebp+0xb],dh
  41f458:	inc    ebx
  41f459:	popf   
  41f45a:	push   0x3f
  41f45c:	gs loopne 0x41f4bb
  41f45f:	push   eax
  41f460:	je     0x41f4b8
  41f462:	adc    edx,edi
  41f464:	pop    es
  41f465:	pop    esp
  41f466:	pop    ss
  41f467:	test   dh,bh
  41f469:	call   0x2507a505
  41f46e:	retf   
  41f46f:	push   ebx
  41f470:	ret    0xc12c
  41f473:	push   edx
  41f474:	std    
  41f475:	aam    0x4f
  41f477:	add    eax,DWORD PTR [eax-0x17]
  41f47a:	adc    al,0x94
  41f47c:	or     al,0x74
  41f47e:	aad    0x59
  41f480:	out    0x9a,eax
  41f482:	outs   dx,DWORD PTR ds:[esi]
  41f483:	push   ebp
  41f484:	cld    
  41f485:	bound  edi,QWORD PTR [eax+0x73f6d87e]
  41f48b:	cmp    bh,0xe8
  41f48e:	xchg   edi,eax
  41f48f:	xchg   DWORD PTR [edx+0x21],eax
  41f492:	sub    BYTE PTR [ecx+0x502241f0],cl
  41f498:	std    
  41f499:	es adc eax,0x1add7794
  41f49f:	fs push 0x3101a01f
  41f4a5:	imul   ebx,ebp,0x28ffff59
  41f4ab:	cmp    DWORD PTR [esp+esi*2+0x52fc65c9],edi
  41f4b2:	xchg   ebp,eax
  41f4b3:	jns    0x41f4a3
  41f4b5:	(bad)  
  41f4b6:	stos   BYTE PTR es:[edi],al
  41f4b7:	out    0xf5,eax
  41f4b9:	fiadd  WORD PTR [eax]
  41f4bb:	jnp    0x41f473
  41f4bd:	xchg   ebx,ecx
  41f4bf:	add    al,0x42
  41f4c1:	add    al,ch
  41f4c3:	inc    ecx
  41f4c4:	out    0xfa,al
  41f4c6:	push   ebp
  41f4c8:	inc    eax
  41f4c9:	imul   ebx
  41f4cb:	data16 gs std 
  41f4ce:	push   edx
  41f4cf:	inc    ebp
  41f4d0:	pushf  
  41f4d1:	out    dx,al
  41f4d2:	(bad)  
  41f4d3:	sub    al,BYTE PTR [edi+0x38f6f941]
  41f4d9:	add    al,0xeb
  41f4db:	data16 jg 0x41f557
  41f4de:	cli    
  41f4df:	cmp    eax,0xa6832143
  41f4e4:	add    BYTE PTR [edx],dh
  41f4e6:	jge    0x41f512
  41f4e8:	gs std 
  41f4ea:	mov    WORD PTR [eax+0x5cb87bc],es
  41f4f0:	adc    ch,dh
  41f4f2:	(bad)  
  41f4f3:	stos   BYTE PTR es:[edi],al
  41f4f4:	sar    DWORD PTR [esp+esi*2-0x17387dc6],cl
  41f4fb:	sbb    esi,esp
  41f4fd:	cli    
  41f4fe:	push   DWORD PTR [ecx-0x41]
  41f501:	jo     0x41f507
  41f503:	mov    bl,0x40
  41f505:	test   DWORD PTR [ecx],0x7fe7ea4a
  41f50b:	mov    edi,0x4553fbb9
  41f510:	xor    al,0xbe
  41f512:	(bad)  
  41f513:	stos   BYTE PTR es:[edi],al
  41f514:	jg     0x41f58f
  41f516:	cli    
  41f517:	in     eax,dx
  41f518:	inc    edx
  41f519:	or     DWORD PTR [ebp-0x230be],ecx
  41f51f:	add    BYTE PTR [ebp-0x6bea0472],bh
  41f525:	stc    
  41f526:	repnz aas 
  41f528:	xchg   esp,eax
  41f529:	jmp    0xd5d6ee05
  41f52e:	add    DWORD PTR [eax-0x740f6b],esi
  41f534:	mov    ds:0x9d7a8068,eax
  41f539:	push   0x5a798409
  41f53e:	push   esi
  41f53f:	cld    
  41f540:	sbb    ebx,ebx
  41f542:	jmp    0x41f542
  41f544:	sub    DWORD PTR [eax-0x50],0xffffff86
  41f548:	rcr    DWORD PTR [edi+0x57],1
  41f54b:	adc    al,BYTE PTR [eax+0x18ffc036]
  41f551:	sbb    eax,0xc8038a4c
  41f556:	add    BYTE PTR [eax],al
  41f558:	xchg   esp,eax
  41f559:	test   DWORD PTR [edx+0x52cb3cf0],0x43dd4bfd
  41f563:	ja     0x41f5df
  41f565:	ficom  WORD PTR [ebx+0x68]
  41f568:	inc    edx
  41f569:	xor    BYTE PTR [ebx],al
  41f56b:	xor    DWORD PTR [esi-0x56754c99],edi
  41f571:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f572:	imul   edi,edi,0x25
  41f575:	retf   0x8756
  41f578:	ror    esi,1
  41f57a:	imul   esi,DWORD PTR [esi],0xfffffff2
  41f57d:	fst    DWORD PTR [esi-0x7a]
  41f580:	push   edx
  41f581:	pop    ebx
  41f582:	mov    eax,eax
  41f584:	add    ah,ch
  41f586:	in     al,dx
  41f587:	push   ebx
  41f588:	std    
  41f589:	sti    
  41f58a:	mov    esi,0xcc956a2b
  41f58f:	mov    esp,0x6c0f1fbf
  41f594:	cmp    ebp,esp
  41f596:	or     DWORD PTR [edi-0x79],edx
  41f599:	push   ecx
  41f59a:	push   cs
  41f59b:	cmp    BYTE PTR [edi-0x7d03ffb8],0x8
  41f5a2:	fucom  st(7)
  41f5a4:	add    edx,DWORD PTR [eax+esi*2-0x2d6bfc19]
  41f5ab:	fist   WORD PTR [esp+edx*8]
  41f5ae:	test   DWORD PTR [ecx],esi
  41f5b0:	ins    BYTE PTR es:[edi],dx
  41f5b1:	cld    
  41f5b2:	dec    esi
  41f5b3:	cld    
  41f5b4:	pop    eax
  41f5b5:	mov    al,ds:0x8658decb
  41f5ba:	push   eax
  41f5bb:	fadd   st,st(3)
  41f5bd:	xchg   ebx,eax
  41f5be:	xchg   DWORD PTR [ebx],ebp
  41f5c0:	pop    ebp
  41f5c1:	call   0x558d3778
  41f5c6:	cld    
  41f5c7:	out    0xae,al
  41f5c9:	or     al,0x64
  41f5cb:	imul   esp,DWORD PTR [edi-0x25],0xf38473aa
  41f5d2:	jmp    esi
  41f5d4:	add    ecx,ecx
  41f5d6:	mov    al,0xac
  41f5d8:	mov    esi,0xbe600058
  41f5dd:	inc    ebx
  41f5de:	push   ecx
  41f5df:	sti    
  41f5e0:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  41f5e2:	shl    dh,0x14
  41f5e5:	push   esp
  41f5e6:	xchg   DWORD PTR [ebx],ebp
  41f5e8:	pop    esp
  41f5e9:	add    BYTE PTR [edx-0x6bfcfd83],al
  41f5ef:	add    dh,dh
  41f5f1:	mov    DWORD PTR [edx],ebp
  41f5f3:	add    bh,ah
  41f5f5:	add    ebx,DWORD PTR [ebx]
  41f5f7:	mov    ebx,0xdfdc8c7a
  41f5fc:	out    0x3,eax
  41f5fe:	xchg   esp,eax
  41f5ff:	std    
  41f600:	jecxz  0x41f651
  41f602:	sbb    al,0xcb
  41f604:	out    dx,al
  41f605:	xchg   BYTE PTR [eax+0x8],bl
  41f608:	mov    bh,0x6b
  41f60a:	test   BYTE PTR [ebp+0x4c],0x58
  41f60e:	push   ss
  41f60f:	inc    eax
  41f610:	cmc    
  41f611:	mov    bl,BYTE PTR [esi]
  41f613:	add    bh,ah
  41f615:	add    ebp,edx
  41f617:	mov    edx,0xcd96e4ff
  41f61c:	or     esp,DWORD PTR [edx+0x55]
  41f61f:	xor    BYTE PTR [edi-0x13],0xa1
  41f623:	add    ecx,DWORD PTR [ebx+0x9760]
  41f629:	pop    ds
  41f62a:	cli    
  41f62b:	add    al,0x2
  41f62d:	xchg   ebp,eax
  41f62e:	shl    esi,cl
  41f630:	aaa    
  41f631:	je     0x41f61d
  41f633:	mov    BYTE PTR [ecx+ebx*4+0x3c],dl
  41f637:	out    dx,al
  41f638:	das    
  41f639:	(bad)  
  41f63b:	push   eax
  41f63c:	mov    DWORD PTR [edi+ebp*8+0x1cf5c380],esp
  41f643:	jns    0x41f6a4
  41f645:	call   0xfd29f6e1
  41f64a:	in     eax,0x4d
  41f64c:	cld    
  41f64d:	into   
  41f64e:	add    BYTE PTR [ebp+0x60],al
  41f651:	cld    
  41f652:	xor    al,0xc8
  41f654:	sub    BYTE PTR [edx-0x4b],0x80
  41f658:	dec    ebp
  41f659:	adc    bh,BYTE PTR [ecx+0x62001066]
  41f65f:	pop    ds
  41f660:	sar    dh,1
  41f662:	call   0x6c41d0fe
  41f667:	push   ebp
  41f668:	cwde   
  41f669:	dec    edi
  41f66a:	fcmovbe st,st(7)
  41f66c:	addr16 mov edi,ecx
  41f66f:	cwde   
  41f670:	add    BYTE PTR [ebx+0x69f442a9],al
  41f676:	call   0x62f9b987
  41f67b:	shl    BYTE PTR [edi+0x52],cl
  41f67e:	jns    0x41f6ea
  41f680:	dec    esp
  41f681:	sub    DWORD PTR [ecx],0xffffffe4
  41f684:	add    eax,esi
  41f686:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f687:	push   0x4e
  41f689:	std    
  41f68a:	fsub   QWORD PTR [edi+0x4c]
  41f68d:	adc    bh,BYTE PTR ds:0xfe6
  41f693:	inc    esi
  41f694:	inc    edi
  41f695:	data16 add BYTE PTR [esi+0xf],ah
  41f699:	mov    dh,cl
  41f69b:	push   ebp
  41f69c:	(bad)  
  41f69d:	out    dx,eax
  41f69e:	inc    BYTE PTR [edx-0x198b4380]
  41f6a4:	fisub  DWORD PTR [ecx]
  41f6a6:	mov    esi,eax
  41f6a8:	sti    
  41f6a9:	xchg   al,dh
  41f6ab:	push   ss
  41f6ac:	mov    esi,0x59cc0334
  41f6b1:	cld    
  41f6b2:	push   eax
  41f6b3:	add    BYTE PTR [ebp-0x5d01133f],al
  41f6b9:	iret   
  41f6ba:	mov    esp,0x420da974
  41f6bf:	(bad)  
  41f6c0:	jl     0x41f73c
  41f6c2:	jnp    0x41f6c8
  41f6c4:	mov    ah,0x36
  41f6c6:	add    BYTE PTR [ebx+0x7a],dh
  41f6c9:	jl     0x41f745
  41f6cb:	add    al,0x2b
  41f6cd:	inc    eax
  41f6ce:	sti    
  41f6cf:	add    esi,esi
  41f6d1:	inc    eax
  41f6d2:	hlt    
  41f6d3:	(bad)  
  41f6d4:	out    0x63,al
  41f6d6:	std    
  41f6d7:	jmp    FWORD PTR [ebp-0x25]
  41f6da:	xor    ecx,0x23
  41f6dd:	mov    dh,0xfb
  41f6df:	dec    ebp
  41f6e0:	add    eax,0x35f46982
  41f6e5:	mov    dh,0x41
  41f6e7:	clc    
  41f6e8:	mov    BYTE PTR [eax-0xc],0x83
  41f6ec:	push   0xbe3b34b0
  41f6f1:	das    
  41f6f2:	std    
  41f6f3:	(bad)  
  41f6f4:	cmp    eax,0xa2028c06
  41f6f9:	mov    dh,0xfb
  41f6fb:	call   FWORD PTR [eax]
  41f6fd:	mov    bl,0xfb
  41f6ff:	adc    eax,0x3c518d
  41f704:	jge    0x41f72e
  41f706:	sti    
  41f707:	add    cl,ch
  41f709:	cli    
  41f70a:	xchg   BYTE PTR [ebp-0x6c],al
  41f70d:	popa   
  41f70e:	push   0x55bf02b8
  41f713:	mov    DWORD PTR [ecx-0x3a],edx
  41f716:	mov    ch,0x5d
  41f718:	add    ch,cl
  41f71a:	sbb    cl,BYTE PTR [ecx]
  41f71c:	add    BYTE PTR [esi+0x59],ch
  41f71f:	push   ebp
  41f720:	scas   eax,DWORD PTR es:[edi]
  41f721:	and    BYTE PTR [eax+0x0],bl
  41f724:	add    bl,cl
  41f726:	dec    ebx
  41f727:	lock adc BYTE PTR [ecx+ebx*2+0x4d],dl
  41f72c:	xlat   BYTE PTR ds:[ebx]
  41f72d:	lahf   
  41f72e:	sbb    DWORD PTR [esi-0x29],ecx
  41f731:	xlat   BYTE PTR ds:[ebx]
  41f732:	xchg   ebp,eax
  41f733:	adc    ebp,edi
  41f735:	adc    al,0xc7
  41f737:	test   al,0xfe
  41f739:	mov    ds:0x5a760058,eax
  41f73e:	data16 mov al,BYTE PTR [ebp+0x593d]
  41f745:	fwait
  41f746:	ins    DWORD PTR es:[edi],dx
  41f747:	test   DWORD PTR [edi+0x1005795],esp
  41f74d:	push   ebx
  41f74e:	jmp    0x41f781
  41f750:	hlt    
  41f751:	gs ret 0xfcef
  41f755:	loopne 0x41f752
  41f757:	pop    es
  41f758:	imul   eax,DWORD PTR [esi+0x34],0x81a68385
  41f75f:	add    BYTE PTR [eax],al
  41f761:	xchg   esp,eax
  41f762:	out    0x52,eax
  41f764:	adc    cl,BYTE PTR [eax+0x16ffc04d]
  41f76a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f76b:	pop    es
  41f76c:	adc    DWORD PTR [esp+ebp*8+0x1f],0xd
  41f771:	jmp    0xbb58:0x2bfeabe5
  41f778:	cmp    BYTE PTR [edx+ecx*2],bl
  41f77b:	mov    DWORD PTR ds:[eax],eax
  41f77e:	add    al,al
  41f780:	add    BYTE PTR [eax],al
  41f782:	xchg   esp,eax
  41f783:	xlat   BYTE PTR ds:[ebx]
  41f784:	pop    ecx
  41f785:	xor    DWORD PTR [edi+0x4a04f800],eax
  41f78b:	cmp    ebx,DWORD PTR [edx+eax*2+0x13]
  41f78f:	ja     0x41f80f
  41f791:	add    edx,DWORD PTR [eax+eax*1+0x40a5f642]
  41f798:	push   ecx
  41f799:	push   cs
  41f79a:	push   cs
  41f79b:	xchg   DWORD PTR [edi-0x19ff6bfd],ecx
  41f7a1:	(bad)  
  41f7a2:	fisttp DWORD PTR [esi+0x26]
  41f7a5:	add    eax,0x8df54102
  41f7aa:	mov    ebp,0x13551567
  41f7af:	ja     0x41f7f0
  41f7b1:	add    edx,DWORD PTR [eax+eax*1-0x2578b57e]
  41f7b8:	ficom  DWORD PTR [edi+eiz*1+0x24]
  41f7bc:	jmp    0x41f744
  41f7be:	pop    ss
  41f7bf:	adc    BYTE PTR [ecx+0x3],al
  41f7c2:	xchg   esp,eax
  41f7c3:	add    BYTE PTR [edi-0x2ef59ac],dl
  41f7c9:	ret    
  41f7ca:	add    DWORD PTR [edx-0xbbf85e],0x35
  41f7d1:	inc    edx
  41f7d2:	xchg   edi,eax
  41f7d3:	add    BYTE PTR [edi-0x76f54b0f],cl
  41f7d9:	inc    eax
  41f7da:	(bad)  
  41f7db:	jns    0x41f7a7
  41f7dd:	xor    BYTE PTR [edi+0x48],0x67
  41f7e1:	add    BYTE PTR [bx-0x18fb],ch
  41f7e6:	add    esp,ebp
  41f7e8:	mov    dh,0x3d
  41f7ea:	in     al,dx
  41f7eb:	sub    ecx,DWORD PTR [edx]
  41f7ed:	out    0x3,eax
  41f7ef:	or     eax,0x5bee9547
  41f7f4:	repnz es add al,0x1f
  41f7f8:	aam    0xca
  41f7fa:	mov    bl,0x3b
  41f7fc:	and    al,BYTE PTR [eax+0x3]
  41f7ff:	xchg   esp,eax
  41f800:	jns    0x41f801
  41f802:	mov    ebx,0xe93fef63
  41f807:	adc    al,BYTE PTR [ecx+0x973923]
  41f80d:	add    BYTE PTR [ecx-0x727fcca0],bh
  41f813:	xchg   ebx,eax
  41f814:	pushf  
  41f815:	(bad)  
  41f816:	call   0xe9abf8b2
  41f81b:	in     eax,dx
  41f81c:	dec    ebp
  41f81d:	xor    DWORD PTR [ecx],ebp
  41f81f:	adc    ch,BYTE PTR [ecx+0x23]
  41f822:	jno    0x41f7bb
  41f824:	add    BYTE PTR [eax],al
  41f826:	pusha  
  41f827:	and    esp,DWORD PTR [ecx]
  41f829:	mov    al,0xe9
  41f82b:	xchg   edi,eax
  41f82c:	add    al,ch
  41f82e:	adc    eax,0x83fc4ce2
  41f833:	xchg   edi,eax
  41f834:	fiadd  DWORD PTR [ecx]
  41f836:	ficom  DWORD PTR [edi+0x7a]
  41f839:	fwait
  41f83a:	int    0x4f
  41f83c:	dec    ebp
  41f83d:	cld    
  41f83e:	jmp    0xe9bc5772
  41f843:	xchg   edi,eax
  41f844:	ja     0x41f889
  41f846:	lds    eax,FWORD PTR [eax]
  41f848:	inc    edi
  41f849:	add    DWORD PTR [ebx-0x3b3d3f3],0xffffffe9
  41f850:	clc    
  41f851:	mov    edi,0xc014fd23
  41f856:	and    esi,ecx
  41f858:	daa    
  41f859:	cmp    DWORD PTR [ebx-0x3b3d3f3],0xffffffe9
  41f860:	fadd   st,st(7)
  41f862:	and    ebx,ebp
  41f864:	out    0x35,al
  41f866:	mov    ah,dh
  41f868:	mov    ds:0x61e93ff2,eax
  41f86d:	add    al,0x31
  41f86f:	ret    0xc015
  41f872:	and    ebx,ebp
  41f874:	jmp    0xb40:0x13b7fcbb
  41f87b:	add    BYTE PTR [edi+0x51448954],al
  41f881:	cld    
  41f882:	dec    esi
  41f883:	push   eax
  41f884:	mov    al,BYTE PTR [esi]
  41f886:	add    ah,0xe9
  41f889:	xchg   edx,eax
  41f88a:	mov    DWORD PTR [ecx+edx*4+0x48],eax
  41f88e:	test   DWORD PTR [ecx+edx*4+0x40],ebx
  41f892:	test   DWORD PTR [ecx+eiz*4-0x6c],ebx
  41f896:	in     al,0xd6
  41f898:	ret    0xfbae
  41f89b:	mov    esi,DWORD PTR [edx+0x4524b081]
  41f8a1:	add    al,0x0
  41f8a3:	add    BYTE PTR [ebp-0x3f],dl
  41f8a6:	add    edi,edi
  41f8a8:	jp     0x41f82b
  41f8aa:	and    BYTE PTR [eax+eax*1],0x4d
  41f8ae:	add    al,0x0
  41f8b0:	add    BYTE PTR [edi+esi*2+0x7c],al
  41f8b4:	add    DWORD PTR [ebp-0x2ebb7701],edi
  41f8ba:	dec    edi
  41f8bb:	test   DWORD PTR [edi+0x531],eax
  41f8c1:	es mov dh,0x53
  41f8c4:	mov    DWORD PTR [edx],eax
  41f8c6:	int    0xfd
  41f8c8:	(bad)  
  41f8c9:	jge    0x41f872
  41f8cb:	mov    al,dh
  41f8cd:	jp     0x41f87d
  41f8cf:	data16 or BYTE PTR [ebp+0x6c],ah
  41f8d3:	mov    edx,0xbefa4afe
  41f8d8:	je     0x41f922
  41f8da:	mov    dh,0xfc
  41f8dc:	lahf   
  41f8dd:	stos   DWORD PTR es:[edi],eax
  41f8de:	inc    esp
  41f8df:	cld    
  41f8e0:	mov    ch,dl
  41f8e2:	clc    
  41f8e3:	xchg   al,dh
  41f8e5:	push   esi
  41f8e6:	add    eax,0x43e8f62f
  41f8eb:	and    BYTE PTR [eax+0x25],dl
  41f8ee:	aaa    
  41f8ef:	pop    ecx
  41f8f0:	add    BYTE PTR ds:0x9475bc83,ch
  41f8f6:	pop    esi
  41f8f7:	jge    0x41f8bd
  41f8f9:	cmp    al,0x42
  41f8fb:	dec    esi
  41f8fc:	cld    
  41f8fd:	and    ebx,ebp
  41f8ff:	inc    eax
  41f900:	jb     0x41f94c
  41f902:	icebp  
  41f903:	jecxz  0x41f8ee
  41f905:	xchg   esp,eax
  41f906:	pop    ecx
  41f907:	mov    ch,0x8a
  41f909:	adc    edi,DWORD PTR [ecx]
  41f90b:	add    eax,DWORD PTR [eax]
  41f90d:	xchg   esp,eax
  41f90e:	mov    DWORD PTR [ecx],eax
  41f910:	mov    dh,0x0
  41f912:	adc    esp,DWORD PTR [ecx]
  41f914:	add    eax,DWORD PTR [eax]
  41f916:	xchg   esp,eax
  41f917:	mov    DWORD PTR [ecx+0x12],edx
  41f91a:	and    BYTE PTR [edi-0x40],al
  41f91d:	call   DWORD PTR [esi]
  41f91f:	rcl    DWORD PTR [ecx+0x73],0x86
  41f923:	dec    esp
  41f924:	add    bh,bh
  41f926:	rcr    DWORD PTR [eax-0x2c],cl
  41f929:	or     BYTE PTR [ebx-0x6ac87e2d],bl
  41f92f:	pop    ecx
  41f930:	add    BYTE PTR [ecx],bh
  41f932:	aad    0x66
  41f934:	repz push esp
  41f936:	mov    esp,0xabfc5036
  41f93b:	stos   DWORD PTR es:[edi],eax
  41f93c:	les    esp,FWORD PTR [ebx]
  41f93e:	inc    esp
  41f93f:	icebp  
  41f940:	sbb    eax,0x5d5994b8
  41f945:	mov    edx,0x1f89e41f
  41f94a:	xchg   ebp,eax
  41f94b:	push   edi
  41f94c:	add    BYTE PTR [ecx],bh
  41f94e:	adc    edx,esp
  41f950:	add    BYTE PTR [eax],al
  41f952:	xchg   esp,eax
  41f953:	pop    edx
  41f954:	test   BYTE PTR ds:0x89005795,ch
  41f95a:	adc    ebx,DWORD PTR [ecx+eax*1]
  41f95d:	add    BYTE PTR [esi+edi*8-0x1768dc5],dl
  41f964:	inc    edx
  41f965:	jae    0x41f904
  41f967:	fiadd  WORD PTR [esi-0x19]
  41f96a:	mov    bl,0x86
  41f96c:	dec    esi
  41f96d:	cld    
  41f96e:	das    
  41f96f:	add    DWORD PTR [edx+0x7c],edi
  41f972:	fbld   TBYTE PTR [ebx+ebp*8]
  41f975:	add    BYTE PTR [eax],al
  41f977:	jmp    0x6585:0x1cffcac4
  41f97e:	cld    
  41f97f:	and    cl,BYTE PTR [edx-0x1a]
  41f982:	or     al,0x55
  41f984:	aad    0xe3
  41f986:	or     bl,BYTE PTR [eax+edi*8-0x6]
  41f98a:	repz or ebp,eax
  41f98d:	ret    0x83ff
  41f990:	int3   
  41f991:	or     al,BYTE PTR [eax]
  41f993:	nop
  41f994:	into   
  41f995:	inc    esi
  41f996:	pop    ebx
  41f997:	hlt    
  41f998:	add    bh,ah
  41f99a:	add    ebx,DWORD PTR [ecx-0x6fd85d6e]
  41f9a0:	jne    0x41fa1c
  41f9a2:	mov    DWORD PTR [ebx-0x72fc1901],edx
  41f9a8:	dec    ebp
  41f9a9:	in     eax,0x87
  41f9ab:	fadd   DWORD PTR [eax]
  41f9ad:	out    0x3,eax
  41f9af:	pextrw ecx,mm2,0xd7
  41f9b3:	dec    ebx
  41f9b4:	dec    ecx
  41f9b5:	xchg   esp,eax
  41f9b6:	sti    
  41f9b7:	mov    al,0xd2
  41f9b9:	jmp    0xa3c3:0xf3608650
  41f9c0:	test   BYTE PTR [esi],ah
  41f9c2:	add    DWORD PTR [edi],edx
  41f9c4:	cwde   
  41f9c5:	out    0x3,al
  41f9c7:	xchg   esp,eax
  41f9c8:	push   edx
  41f9c9:	stos   BYTE PTR es:[edi],al
  41f9ca:	daa    
  41f9cb:	add    cl,bh
  41f9cd:	jb     0x41f9eb
  41f9cf:	retf   
  41f9d0:	ins    BYTE PTR es:[edi],dx
  41f9d1:	or     cl,BYTE PTR [eax+0xe6497b]
  41f9d7:	pop    es
  41f9d8:	inc    eax
  41f9d9:	adc    BYTE PTR [ebp+0x0],al
  41f9dc:	cwde   
  41f9dd:	xor    DWORD PTR [esi+0x3],0xffffff94
  41f9e1:	add    dl,dl
  41f9e3:	dec    ebx
  41f9e5:	jne    0x41fa4c
  41f9e7:	adc    DWORD PTR [edx+0x49],0xffffffff
  41f9eb:	call   0xe84d79df
  41f9f0:	xchg   edi,eax
  41f9f1:	ja     0x41f9c0
  41f9f3:	xchg   ecx,eax
  41f9f4:	fbstp  TBYTE PTR [edx+0x3fa09efc]
  41f9fa:	jb     0x41f97c
  41f9fc:	int    0xbd
  41f9fe:	and    edx,DWORD PTR ds:0xc055d497
  41fa04:	jmp    0x41fa22
  41fa06:	js     0x41f9f6
  41fa08:	mov    cl,BYTE PTR [ecx-0x221d55c7]
  41fa0e:	mov    bh,ah
  41fa10:	fistp  QWORD PTR [eax+0x2]
  41fa13:	jmp    0x5cd6faf
  41fa18:	fs dec edx
  41fa1a:	cld    
  41fa1b:	jmp    0x5cd7046
  41fa20:	mov    eax,0x26e9fc49
  41fa25:	js     0x41f9f4
  41fa27:	ds pop es
  41fa29:	add    DWORD PTR [ecx],edi
  41fa2b:	sub    ah,ch
  41fa2d:	pop    ss
  41fa2e:	mov    ebx,DWORD PTR [ebp+0x7b]
  41fa31:	push   0xb997e8fe
  41fa36:	mov    ch,BYTE PTR [ebp+0x7b]
  41fa39:	in     al,dx
  41fa3a:	(bad)  
  41fa3b:	call   0xd129b3d7
  41fa40:	add    BYTE PTR [eax],cl
  41fa42:	dec    ebx
  41fa43:	cld    
  41fa44:	jb     0x41fa8d
  41fa46:	or     cl,dh
  41fa48:	jne    0x41f9d1
  41fa4a:	jns    0x41fa29
  41fa4c:	(bad)  
  41fa4d:	fcomp  QWORD PTR [edi+0x61]
  41fa50:	cmc    
  41fa51:	rol    DWORD PTR [edi+eiz*8+0x19],cl
  41fa55:	sbb    eax,0xbf1afc46
  41fa5a:	dec    ebp
  41fa5b:	inc    ebx
  41fa5c:	or     eax,0x650d024c
  41fa61:	aaa    
  41fa62:	inc    esi
  41fa63:	cld    
  41fa64:	add    BYTE PTR [edx-0xa],dl
  41fa67:	pop    ebx
  41fa68:	and    al,0x91
  41fa6a:	inc    edi
  41fa6b:	xchg   ecx,eax
  41fa6c:	rol    BYTE PTR [edi-0x3d],0xb
  41fa70:	test   BYTE PTR ds:0xf2fffbb7,al
  41fa76:	sub    BYTE PTR [eax],ah
  41fa78:	or     al,0xa6
  41fa7a:	pop    ss
  41fa7b:	in     eax,0xb7
  41fa7d:	adc    edi,DWORD PTR [eax-0x7019cc05]
  41fa83:	in     al,0xdb
  41fa85:	add    edi,DWORD PTR [eax-0x49ee1605]
  41fa8b:	sti    
  41fa8c:	push   DWORD PTR [eax+0x28]
  41fa8f:	and    BYTE PTR [eax+0x15],dl
  41fa92:	push   esi
  41fa93:	mov    ah,0x0
  41fa95:	in     eax,dx
  41fa96:	retf   0xe831
  41fa99:	out    dx,eax
  41fa9a:	inc    ebx
  41fa9b:	cld    
  41fa9c:	mov    WORD PTR [ecx+0x18],?
  41fa9f:	add    BYTE PTR [ecx],al
  41faa1:	in     eax,dx
  41faa2:	add    edx,DWORD PTR [eax-0x1]
  41faa5:	add    BYTE PTR [ebx-0x35],bh
  41faa8:	cmp    DWORD PTR [eax+0x38fc43ef],esp
  41faae:	and    DWORD PTR [eax],esp
  41fab0:	dec    esp
  41fab1:	je     0x41fa6e
  41fab3:	mov    dh,0x70
  41fab5:	and    al,0x1
  41fab7:	mov    bh,0xd3
  41fab9:	cmp    ecx,esi
  41fabb:	pop    ds
  41fabc:	dec    eax
  41fabd:	je     0x41fa7a
  41fabf:	mov    dh,0x70
  41fac1:	and    al,0xf5
  41fac3:	mov    dh,0xd3
  41fac5:	(bad)  
  41fac6:	jmp    0xb72a0aea
  41facb:	xor    eax,0x38f0fffb
  41fad0:	and    BYTE PTR [eax],bl
  41fad2:	sbb    eax,0xe98dd2b6
  41fad7:	pop    ds
  41fad8:	test   al,0x0
  41fada:	jge    0x41fadf
  41fadc:	call   0x3f18f8d
  41fae1:	add    BYTE PTR [ecx],dl
  41fae3:	sbb    eax,0x1d6c5028
  41fae8:	xchg   esi,eax
  41fae9:	call   DWORD PTR [ebx-0x1a]
  41faec:	lods   eax,DWORD PTR ds:[esi]
  41faed:	pop    eax
  41faee:	pop    ds
  41faef:	xor    al,0xaf
  41faf1:	shr    cl,0xe2
  41faf4:	pop    esp
  41faf5:	xor    BYTE PTR [eax],0xa1
  41faf8:	sub    ebx,0xe7b50a74
  41fafe:	retf   
  41faff:	mov    ds:0xf40ffc4a,al
  41fb04:	test   DWORD PTR [ebx-0x7533baac],0xfc3d5800
  41fb0e:	dec    edi
  41fb0f:	jle    0x41fb42
  41fb11:	jg     0x41fb56
  41fb13:	mov    eax,0x9469b031
  41fb18:	xchg   BYTE PTR [ebp+0x12],cl
  41fb1b:	pop    esp
  41fb1c:	jne    0x41fadf
  41fb1e:	call   DWORD PTR [eax]
  41fb20:	sbb    ecx,ecx
  41fb22:	pusha  
  41fb23:	pop    ss
  41fb24:	xor    eax,0x85941424
  41fb29:	lods   al,BYTE PTR ds:[esi]
  41fb2a:	adc    BYTE PTR [eax-0x3],0x23
  41fb2e:	add    BYTE PTR [eax+0x5c],al
  41fb31:	dec    ebp
  41fb32:	jae    0x41fbac
  41fb34:	stc    
  41fb35:	pop    ebx
  41fb36:	dec    edx
  41fb37:	call   FWORD PTR ds:0x6bd4824e
  41fb3d:	mov    eax,0x203520fc
  41fb42:	call   0xfc8d1bcf
  41fb47:	mov    eax,db1
  41fb4a:	fmul   DWORD PTR [eax]
  41fb4c:	inc    ecx
  41fb4d:	(bad)  
  41fb4e:	jmp    esi
  41fb50:	jmp    DWORD PTR [ebx]
  41fb52:	retf   0x5782
  41fb55:	test   BYTE PTR [edi+0x190d0100],bh
  41fb5b:	xchg   edi,eax
  41fb5c:	or     al,0x8b
  41fb5e:	shr    DWORD PTR [ebx-0x3],0xf6
  41fb62:	nop
  41fb63:	mov    ds:0xb407d500,eax
  41fb68:	xchg   esp,eax
  41fb69:	sub    DWORD PTR [esp+eiz*4],eax
  41fb6c:	int3   
  41fb6d:	out    dx,eax
  41fb6e:	js     0x41fb70
  41fb70:	fsubrp st(4),st
  41fb72:	stc    
  41fb73:	xor    bl,0x0
  41fb76:	out    0x3,eax
  41fb78:	or     eax,0xb27b02b4
  41fb7d:	nop
  41fb7e:	out    0x3,al
  41fb80:	xchg   esp,eax
  41fb81:	mov    cl,0x95
  41fb83:	test   DWORD PTR [ebx],0x190426f3
  41fb89:	int3   
  41fb8a:	retf   0x864c
  41fb8d:	and    BYTE PTR [esi-0x29],bh
  41fb90:	scas   eax,DWORD PTR es:[edi]
  41fb91:	inc    ebp
  41fb92:	sti    
  41fb93:	jmp    0x41fbfd
  41fb95:	inc    ebp
  41fb96:	repz repz clc 
  41fb99:	retf   
  41fb9a:	repnz dec esp
  41fb9c:	data16 clc 
  41fb9e:	pop    ebp
  41fb9f:	imul   DWORD PTR [ebx+0x4103a994]
  41fba5:	test   eax,0x423e6761
  41fbaa:	push   es
  41fbab:	add    al,0x67
  41fbad:	jns    0x41fbf9
  41fbaf:	cmp    DWORD PTR [edi-0x6bfc17cc],0xffffffb1
  41fbb6:	sub    eax,0xc3796bd7
  41fbbb:	sti    
  41fbbc:	mov    al,0xcb
  41fbbe:	retf   0x264c
  41fbc1:	sbb    BYTE PTR [esi],dl
  41fbc3:	xlat   BYTE PTR ds:[ebx]
  41fbc4:	ja     0x41fc0b
  41fbc6:	xchg   ebx,eax
  41fbc7:	and    ebx,DWORD PTR [ecx+0x64ce2cb]
  41fbcd:	jmp    0x45e9d2cf
  41fbd2:	(bad)  
  41fbd3:	jnp    0x41fbd5
  41fbd5:	xchg   DWORD PTR [edx+esi*2-0x23],eax
  41fbd9:	inc    esp
  41fbda:	inc    esp
  41fbdb:	adc    ch,BYTE PTR ds:0x6fffc034
  41fbe1:	push   edx
  41fbe2:	sbb    DWORD PTR [ebx-0x18829f57],eax
  41fbe8:	jmp    0x2d37fc84
  41fbed:	jl     0x41fc34
  41fbef:	or     eax,0xfc457965
  41fbf4:	jmp    0x654e2413
  41fbf9:	add    DWORD PTR [ebp-0x4],0xbca14e9
  41fc00:	jmp    0xea0d7d2d
  41fc05:	xchg   edi,eax
  41fc06:	add    al,ch
  41fc08:	xor    ebx,DWORD PTR [esi+0x43]
  41fc0b:	cld    
  41fc0c:	ins    DWORD PTR es:[edi],dx
  41fc0d:	push   edi
  41fc0e:	hlt    
  41fc0f:	cmp    DWORD PTR [esi],0xffffff97
  41fc12:	add    BYTE PTR [eax],al
  41fc14:	jbe    0x41fbba
  41fc16:	inc    ebx
  41fc17:	adc    dl,BYTE PTR ds:0x6c000507
  41fc1d:	push   edi
  41fc1e:	hlt    
  41fc1f:	or     DWORD PTR [esi-0x46ffff69],0x3f
  41fc26:	adc    cl,al
  41fc28:	dec    edi
  41fc29:	dec    eax
  41fc2a:	jle    0x41fc6e
  41fc2c:	stc    
  41fc2d:	sbb    al,BYTE PTR [ebp+0x4539650c]
  41fc33:	cld    
  41fc34:	jmp    0xf2caa842
  41fc39:	add    ch,bl
  41fc3b:	inc    esp
  41fc3c:	dec    esp
  41fc3d:	adc    DWORD PTR [esi+0x2c1efd3d],ebx
  41fc43:	push   ebp
  41fc44:	xchg   BYTE PTR [ebx+edi*2-0x366a0a7f],bl
  41fc4b:	pop    ss
  41fc4c:	xor    eax,DWORD PTR [eax]
  41fc4e:	push   ecx
  41fc4f:	fs aas 
  41fc51:	add    BYTE PTR [esi],al
  41fc53:	xor    ecx,DWORD PTR [eax]
  41fc55:	(bad)  
  41fc56:	lock jmp 0x41fc51
  41fc59:	jmp    FWORD PTR [edx-0x71]
  41fc5c:	sti    
  41fc5d:	aaa    
  41fc5e:	cld    
  41fc5f:	mov    esi,0xfcbdb30c
  41fc64:	ret    0x8185
  41fc67:	mov    ecx,0x6efffb
  41fc6c:	std    
  41fc6d:	call   FWORD PTR [edx+0x52]
  41fc70:	dec    eax
  41fc71:	adc    DWORD PTR [ebp-0x4],edi
  41fc74:	add    al,0x81
  41fc77:	cmp    al,0x87
  41fc79:	test   ecx,edi
  41fc7b:	mov    ecx,0x136fffb
  41fc80:	dec    esp
  41fc81:	lods   al,BYTE PTR ds:[esi]
  41fc82:	jle    0x41fc80
  41fc84:	jo     0x41fcb8
  41fc86:	add    eax,DWORD PTR [edx]
  41fc88:	and    BYTE PTR [esi+ebp*2+0x3740ffc],ch
  41fc8f:	jmp    0x41fc41
  41fc91:	in     al,0x88
  41fc93:	mov    bh,0xfb
  41fc95:	lea    esi,[eax-0x10]
  41fc98:	clc    
  41fc99:	jmp    FWORD PTR [edx-0x74]
  41fc9c:	sti    
  41fc9d:	aaa    
  41fc9e:	add    BYTE PTR [ecx+esi*2-0x20],ah
  41fca2:	std    
  41fca3:	dec    edx
  41fca4:	mov    bh,0xc3
  41fca6:	test   DWORD PTR [ecx-0x10000447],eax
  41fcac:	(bad)  
  41fcad:	cld    
  41fcae:	call   FWORD PTR [edx+0x51]
  41fcb1:	dec    esp
  41fcb2:	adc    ebp,edi
  41fcb4:	inc    DWORD PTR [eax+0x644e00c0]
  41fcba:	add    BYTE PTR ds:0xbd69fffc,ch
  41fcc0:	mov    dh,0x71
  41fcc2:	and    al,0x8a
  41fcc4:	jmp    0x41fcc0
  41fcc6:	adc    eax,0x3ff61d94
  41fccb:	xchg   esp,eax
  41fccc:	repnz into 
  41fcce:	das    
  41fccf:	xchg   ebx,eax
  41fcd0:	and    al,0xa0
  41fcd2:	adc    esp,edx
  41fcd4:	pop    ecx
  41fcd5:	test   eax,0x14940f5d
  41fcda:	pop    ecx
  41fcdb:	dec    ebp
  41fcdc:	pop    ss
  41fcdd:	sbb    BYTE PTR [eax],al
  41fcdf:	leave  
  41fce0:	into   
  41fce1:	push   esp
  41fce2:	out    0x17,eax
  41fce4:	nop
  41fce5:	inc    esi
  41fce6:	cld    
  41fce7:	sbb    BYTE PTR [ecx+0x32b904cf],bl
  41fced:	pop    ds
  41fcee:	push   eax
  41fcef:	add    BYTE PTR [esi],dl
  41fcf1:	add    al,0x51
  41fcf3:	loop   0x41fcc3
  41fcf5:	iret   
  41fcf6:	adc    ebp,ebx
  41fcf8:	jecxz  0x41fd42
  41fcfa:	jb     0x41fca0
  41fcfc:	mov    edi,0x51a9fd03
  41fd01:	dec    ecx
  41fd02:	adc    al,BYTE PTR [eax]
  41fd04:	shl    BYTE PTR [ebp+0x6ac9ffc5],0xcf
  41fd0b:	(bad)  
  41fd0c:	(bad)  
  41fd0e:	dec    ecx
  41fd0f:	jb     0x41fcb1
  41fd11:	jp     0x41fce2
  41fd13:	pop    es
  41fd14:	or     ebp,DWORD PTR [eax+esi*4]
  41fd17:	stos   DWORD PTR es:[edi],eax
  41fd18:	push   edi
  41fd19:	pop    ecx
  41fd1a:	jge    0x41fcf3
  41fd1c:	adc    edx,edx
  41fd1e:	retf   
  41fd1f:	push   ebx
  41fd20:	sbb    DWORD PTR [esi-0x54eeb038],edi
  41fd26:	int3   
  41fd27:	dec    ebx
  41fd28:	pop    ss
  41fd29:	jmp    0x41fd2e
  41fd2b:	je     0x41fd80
  41fd2d:	(bad)  
  41fd2e:	(bad)  
  41fd2f:	sete   BYTE PTR [ebp-0x7e77423d]
  41fd36:	(bad)  
  41fd39:	or     dh,al
  41fd3b:	jmp    0x41fce3
  41fd3d:	cdq    
  41fd3e:	add    dh,dh
  41fd40:	cdq    
  41fd41:	add    BYTE PTR [ebx-0x17ffab75],bh
  41fd47:	shl    BYTE PTR [esi-0x28],1
  41fd4a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fd4b:	rcr    DWORD PTR [ebx+0x0],1
  41fd4e:	push   cs
  41fd4f:	lock arpl di,bp
  41fd52:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fd53:	add    edx,DWORD PTR [edi]
  41fd55:	inc    ecx
  41fd56:	jb     0x41fd54
  41fd58:	or     al,0x49
  41fd5a:	(bad)  
  41fd5b:	mov    al,ds:0x5ded41d1
  41fd60:	xchg   ebp,eax
  41fd61:	push   cs
  41fd62:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fd63:	sub    BYTE PTR [ebx],0xcd
  41fd66:	in     eax,0x84
  41fd68:	add    BYTE PTR [esi+0x5bc58eac],cl
  41fd6e:	add    DWORD PTR ds:0xd850a649,esi
  41fd74:	ret    
  41fd75:	dec    ebx
  41fd76:	mov    ds:0xa6547d1c,eax
  41fd7b:	adc    eax,DWORD PTR [esi-0x75]
  41fd7e:	add    BYTE PTR [edi],bh
  41fd80:	pop    edx
  41fd81:	xor    al,BYTE PTR [edx-0x1a]
  41fd84:	fcomi  st,st(3)
  41fd86:	nop
  41fd87:	sub    DWORD PTR [edx+ecx*8],eax
  41fd8a:	inc    ecx
  41fd8b:	sti    
  41fd8c:	adc    eax,DWORD PTR [edx-0x287b1940]
  41fd92:	hlt    
  41fd93:	sbb    al,0x5c
  41fd95:	aad    0xfe
  41fd97:	out    0x3,al
  41fd99:	or     eax,0xcafa93b
  41fd9e:	push   ebp
  41fd9f:	imul   ebx,DWORD PTR [eax-0x45],0xf988bdad
  41fda6:	jmp    esi
  41fda8:	add    ecx,DWORD PTR [ecx-0x2a]
  41fdab:	out    0xb1,al
  41fdad:	fsubr  st,st(3)
  41fdaf:	adc    dh,dl
  41fdb1:	xchg   ebx,eax
  41fdb2:	add    BYTE PTR [edx+0x40],ch
  41fdb5:	lahf   
  41fdb6:	jae    0x41fd5c
  41fdb8:	call   DWORD PTR [ebx+0x77]
  41fdbb:	push   esi
  41fdbd:	pop    edi
  41fdbe:	add    bh,0x2f
  41fdc1:	pop    ebp
  41fdc2:	js     0x41fe06
  41fdc4:	icebp  
  41fdc5:	cs mov ebx,0xc2166c7b
  41fdcb:	(bad)  
  41fdcc:	call   0xe7f294d1
  41fdd1:	ss icebp 
  41fdd3:	inc    ecx
  41fdd4:	cld    
  41fdd5:	xchg   ebx,eax
  41fdd6:	xchg   edi,eax
  41fdd7:	(bad)  
  41fdd8:	daa    
  41fdd9:	ins    BYTE PTR es:[edi],dx
  41fdda:	inc    ebx
  41fddb:	sub    DWORD PTR [edi+0x1],ecx
  41fdde:	test   al,0xdf
  41fde0:	(bad)  
  41fde1:	call   0x34cd1737
  41fde6:	mov    eax,0x97798576
  41fdeb:	add    BYTE PTR [eax],al
  41fded:	cmp    BYTE PTR [eax-0x6816e091],bh
  41fdf3:	cmp    esp,0xffffffc6
  41fdf6:	xchg   edi,eax
  41fdf7:	add    BYTE PTR [edx-0x18],ch
  41fdfa:	sar    BYTE PTR [edi+eiz*8],0x5b
  41fdfe:	xor    DWORD PTR [ecx-0x4],eax
  41fe01:	fiadd  WORD PTR [ecx+ebp*1]
  41fe04:	imul   ebp,eax,0x8abe3ca8
  41fe0a:	daa    
  41fe0b:	pop    ecx
  41fe0c:	or     BYTE PTR [ebx],0x90
  41fe0f:	add    BYTE PTR ds:0xc0f85756,cl
  41fe15:	jo     0x41fe2c
  41fe17:	pop    ebx
  41fe18:	(bad)  
  41fe19:	call   0x6240d4b5
  41fe1e:	push   esp
  41fe1f:	pop    ecx
  41fe20:	ins    BYTE PTR es:[edi],dx
  41fe21:	or     ebx,DWORD PTR [eax-0x4061f300]
  41fe27:	xlat   BYTE PTR ds:[ebx]
  41fe28:	(bad)  
  41fe29:	jno    0x41fe7f
  41fe2b:	and    al,0xf9
  41fe2e:	aas    
  41fe2f:	mov    eax,ds:0x9700e961
  41fe34:	repz mov ah,0x0
  41fe37:	jge    0x41fe7d
  41fe39:	mov    edi,0xe67f445f
  41fe3e:	add    DWORD PTR [ebp+0x6c686fc],ebp
  41fe44:	push   es
  41fe45:	mov    edi,0x8791bd04
  41fe4a:	in     al,dx
  41fe4b:	fmul   QWORD PTR [edi-0x3531145]
  41fe51:	call   DWORD PTR [esi+0x17]
  41fe54:	add    al,0x4f
  41fe56:	jmp    FWORD PTR [eax+0x10]
  41fe59:	push   ss
  41fe5a:	inc    eax
  41fe5b:	ins    DWORD PTR es:[edi],dx
  41fe5c:	test   eax,eax
  41fe5e:	or     al,0xf0
  41fe60:	inc    ecx
  41fe61:	dec    eax
  41fe62:	push   eax
  41fe63:	pop    ss
  41fe64:	or     BYTE PTR [ebp+0x47b9d23b],al
  41fe6a:	add    al,0xe6
  41fe6c:	jmp    esp
  41fe6e:	and    eax,0x8bfbc73c
  41fe73:	mov    ebx,0x3dfffcc0
  41fe78:	mov    ebx,0x446b3039
  41fe7d:	cld    
  41fe7e:	mov    BYTE PTR [esi+0x48],ch
  41fe81:	data16 adc al,dl
  41fe84:	mov    esi,0x43d00c4
  41fe89:	push   eax
  41fe8a:	lea    ebp,[esi+0x2dfffc84]
  41fe90:	je     0x41fe8d
  41fe92:	xlat   BYTE PTR ds:[ebx]
  41fe93:	xchg   ebp,eax
  41fe94:	add    bh,ch
  41fe96:	inc    DWORD PTR [eax]
  41fe98:	std    
  41fe99:	mov    eax,0x3edd882
  41fe9e:	add    BYTE PTR [eax+0x70],dl
  41fea1:	or     DWORD PTR [eax+eax*1-0xaffc03],0xffffffaa
  41fea9:	add    eax,0x18
  41feac:	inc    edx
  41fead:	mov    gs,eax
  41feaf:	add    edx,DWORD PTR [ecx+ebp*1-0x39e57500]
  41feb6:	add    BYTE PTR [eax],al
  41feb8:	xchg   esp,eax
  41feb9:	cdq    
  41feba:	ja     0x41fe41
  41febc:	loopne 0x41fee6
  41febe:	add    BYTE PTR [eax],al
  41fec0:	mov    fs:0x28b4e748,al
  41fec6:	add    BYTE PTR [eax],al
  41fec8:	stos   DWORD PTR es:[edi],eax
  41fec9:	(bad)  
  41fecb:	add    eax,0x85772994
  41fed0:	xchg   esp,eax
  41fed1:	das    
  41fed2:	add    BYTE PTR [eax],al
  41fed4:	in     al,0xdc
  41fed6:	jge    0x41fecf
  41fed8:	xchg   edi,eax
  41fed9:	sub    DWORD PTR [eax],eax
  41fedb:	push   eax
  41fedc:	ins    BYTE PTR es:[edi],dx
  41fedd:	dec    esi
  41fede:	(bad)  
  41fedf:	call   DWORD PTR [esp+eiz*4+0x299a137d]
  41fee6:	add    BYTE PTR [eax+0x1f],dl
  41fee9:	push   0x58
  41feeb:	xchg   BYTE PTR [esi+0x5bbd0029],dl
  41fef1:	push   esi
  41fef2:	add    BYTE PTR [eax],al
  41fef4:	mov    esi,0x3cc47928
  41fef9:	mov    ds:0x4300ffe3,eax
  41fefe:	lea    edi,cs:[edi-0x790fb6ab]
  41ff05:	fldcw  WORD PTR [ebp-0x2a]
  41ff08:	(bad)  
  41ff09:	push   ds
  41ff0a:	outs   dx,BYTE PTR ds:[esi]
  41ff0b:	pop    eax
  41ff0c:	xchg   DWORD PTR [ebp-0x1cf2ffd7],esi
  41ff12:	push   0xee1042f9
  41ff17:	jp     0x41fe99
  41ff19:	repnz daa 
  41ff1b:	add    BYTE PTR [eax],al
  41ff1d:	xcrypt-cfb (bad)
  41ff1e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ff1f:	in     al,0x7
  41ff21:	xchg   esp,eax
  41ff22:	sub    DWORD PTR [ebx-0x80],edi
  41ff25:	(bad)  
  41ff26:	daa    
  41ff27:	add    BYTE PTR [eax],al
  41ff29:	pop    ds
  41ff2a:	add    BYTE PTR [edx],ch
  41ff2c:	cmp    al,0xd4
  41ff2e:	aam    0x71
  41ff30:	xlat   BYTE PTR ds:[ebx]
  41ff31:	mov    bh,0x8
  41ff33:	mov    ebp,0xe2c51eae
  41ff38:	mov    bl,0x3d
  41ff3a:	cld    
  41ff3b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ff3c:	js     0x41ff8a
  41ff3e:	int3   
  41ff3f:	jno    0x41ff7f
  41ff41:	mov    bl,0xd4
  41ff43:	ss inc ebp
  41ff45:	mov    al,0x8a
  41ff47:	mov    ds:0xd6fd1cc7,eax
  41ff4c:	in     eax,dx
  41ff4d:	arpl   WORD PTR [eax],ax
  41ff4f:	jo     0x41fed3
  41ff51:	xlat   BYTE PTR ds:[ebx]
  41ff52:	jmp    esi
  41ff54:	add    edi,esi
  41ff56:	adc    BYTE PTR [eax+eax*4+0xb],bl
  41ff5a:	add    edi,esp
  41ff5c:	add    esp,esp
  41ff5e:	mov    ebp,DWORD PTR [ecx+0x3b]
  41ff61:	add    BYTE PTR [ebx+0x3e],bh
  41ff64:	out    0xb3,al
  41ff66:	jo     0x41ffbe
  41ff68:	jle    0x41ff6b
  41ff6a:	imul   edi,DWORD PTR [esi],0xffffffe6
  41ff6d:	jbe    0x41ff85
  41ff6f:	xchg   ecx,eax
  41ff70:	out    0x3,al
  41ff72:	xchg   esp,eax
  41ff73:	shl    BYTE PTR [ebx-0x7f],1
  41ff76:	imul   eax,DWORD PTR [ecx],0xffffffe7
  41ff79:	add    esp,esp
  41ff7b:	cmp    eax,0x1957819d
  41ff80:	dec    edi
  41ff81:	add    BYTE PTR [ebx],bh
  41ff83:	ds out 0x76,al
  41ff86:	push   ss
  41ff87:	xchg   ebx,eax
  41ff88:	out    0x3,eax
  41ff8a:	xchg   esp,eax
  41ff8b:	shl    BYTE PTR [ebx-0x6f],1
  41ff8e:	aas    
  41ff8f:	add    bh,ah
  41ff91:	add    ebp,DWORD PTR [esi+0x103c6a00]
  41ff97:	sub    edi,edi
  41ff99:	push   ecx
  41ff9a:	or     DWORD PTR [esi],edi
  41ff9c:	jno    0x42001d
  41ff9e:	xor    DWORD PTR [eax],eax
  41ffa0:	out    0x3,eax
  41ffa2:	adc    eax,DWORD PTR [edx+0x9584ff]
  41ffa8:	add    BYTE PTR [ebx],al
  41ffaa:	call   0x97d18239
  41ffaf:	add    BYTE PTR [eax],al
  41ffb1:	mov    ecx,0xeae38062
  41ffb6:	xchg   edi,eax
  41ffb7:	add    BYTE PTR [eax+0x4e],dl
  41ffba:	jns    0x41ff3c
  41ffbc:	ret    
  41ffbd:	cmc    
  41ffbe:	fild   WORD PTR [ecx]
  41ffc0:	(bad)  
  41ffc1:	call   0x7bc4895d
  41ffc6:	add    BYTE PTR [edi+0x22990000],dl
  41ffcc:	jo     0x41ffc5
  41ffce:	jmp    0x4614:0xe96a0097
  41ffd5:	cld    
  41ffd6:	add    DWORD PTR [edx+esi*1-0x7cf2f103],ebp
  41ffdd:	int    0xe8
  41ffdf:	xchg   edi,eax
  41ffe0:	add    BYTE PTR [edi+0x3786a],al
  41ffe6:	jmp    0x64cd0538
  41ffeb:	stos   BYTE PTR es:[edi],al
  41ffec:	ds cld 
  41ffee:	jmp    0xe9c28a1a
  41fff3:	pop    ecx
  41fff4:	cmp    eax,0x54d939fc
  41fff9:	and    BYTE PTR [ebp-0x17fc5abd],0x97
  420000:	add    BYTE PTR [ebx-0x3c17a9c],cl
  420006:	jmp    0xd5f289f2
  42000b:	sub    DWORD PTR ds:0x7f9813fc,edi
  420011:	(bad)  
  420012:	sahf   
  420013:	mov    edi,0x5897ee2c
  420018:	mov    BYTE PTR [edx+0x9683],al
  42001e:	add    BYTE PTR [edx-0x267c7a9a],bh
  420024:	cmp    ah,bh
  420026:	dec    DWORD PTR [eax+0xc2]
  42002c:	xor    BYTE PTR [edi+0x394981e8],0xfd
  420033:	(bad)  
  420034:	in     eax,dx
  420035:	jg     0x41ffd8
  420037:	clc    
  420038:	imul   eax,esp,0xfffffffb
  42003b:	add    BYTE PTR [eax-0x52000350],dh
  420041:	jo     0x41ffcc
  420043:	test   DWORD PTR [ebp-0x3d],edx
  420046:	sti    
  420047:	call   DWORD PTR [ebp-0x62]
  42004a:	sbb    al,BYTE PTR [eax]
  42004c:	mov    ebp,0xad0c797f
  420051:	dec    esp
  420052:	or     eax,0x8734e08b
  420057:	dec    ebp
  420058:	jne    0x42000d
  42005a:	cmp    eax,0xe8fbc49b
  420060:	mov    al,ds:0xc4fffc24
  420065:	rol    DWORD PTR [eax+eax*1],0x10
  420069:	mov    ecx,0xc79183e8
  42006e:	jge    0x42005c
  420070:	loope  0x420078
  420072:	add    BYTE PTR [eax],al
  420074:	mov    ds:0x4d24b891,al
  420079:	add    eax,0x94550000
  42007e:	ret    
  42007f:	(bad)  
  420080:	pop    edx
  420081:	test   BYTE PTR [eax+0x24],ah
  420084:	inc    ebp
  420085:	add    BYTE PTR [ecx+0x13da184],cl
  42008b:	add    BYTE PTR ds:0x448950,bh
  420091:	push   ecx
  420092:	or     al,0xe8
  420094:	pop    ebx
  420095:	sbb    eax,DWORD PTR [eax]
  420097:	add    BYTE PTR [ebx-0x45f41b6c],cl
  42009d:	cli    
  42009e:	sub    BYTE PTR [eax],al
  4200a0:	add    BYTE PTR [ecx],dl
  4200a2:	out    dx,al
  4200a3:	out    0x7,eax
  4200a5:	in     al,dx
  4200a6:	fsub   DWORD PTR [eax]
  4200a8:	add    BYTE PTR [edx+edx*1+0x6749e28d],dl
  4200af:	pop    es
  4200b0:	add    BYTE PTR [edi],cl
  4200b2:	jbe    0x420098
  4200b4:	add    eax,DWORD PTR [edi+0x73]
  4200b7:	(bad)  
  4200b8:	mov    ah,0x26
  4200ba:	sub    DWORD PTR [eax],eax
  4200bc:	add    BYTE PTR [ebx+ebx*4-0x593c02d2],bh
  4200c3:	cmp    edi,esp
  4200c5:	inc    eax
  4200c6:	imul   esi,ebp,0xffffffd8
  4200c9:	inc    edi
  4200ca:	xchg   esi,eax
  4200cb:	stos   BYTE PTR es:[edi],al
  4200cc:	adc    eax,DWORD PTR [edx-0x67]
  4200cf:	inc    ecx
  4200d0:	jae    0x42014a
  4200d2:	dec    ecx
  4200d3:	aad    0x50
  4200d5:	fwait
  4200d6:	xor    al,0xb0
  4200d8:	adc    esp,edx
  4200da:	sub    ebp,edi
  4200dc:	ror    BYTE PTR [edx],0x54
  4200df:	(bad)  
  4200e0:	or     eax,esp
  4200e2:	inc    ecx
  4200e3:	(bad)  
  4200e5:	add    BYTE PTR [ebx],ah
  4200e7:	test   edi,esi
  4200e9:	mov    BYTE PTR [ebx+ebp*8+0x87f8d87],dh
  4200f0:	std    
  4200f1:	call   0xcd1903
  4200f6:	adc    eax,DWORD PTR [ebx-0x66bfffd]
  4200fc:	inc    eax
  4200fd:	adc    al,BYTE PTR [ebx+esi*1-0x12f10040]
  420104:	out    0x1f,eax
  420106:	or     eax,0x33fe6ea2
  42010b:	sub    DWORD PTR [ebp+0x3b998c3],eax
  420111:	pop    esi
  420112:	mov    edi,0x940fa900
  420117:	out    dx,al
  420118:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420119:	or     BYTE PTR cs:[edi-0x306817de],al
  420120:	xor    al,0x91
  420122:	dec    eax
  420123:	outs   dx,BYTE PTR ds:[esi]
  420124:	out    0x3,eax
  420126:	xchg   esp,eax
  420127:	sub    BYTE PTR [eax+esi*1+0x3b693af1],al
  42012e:	call   0xbd391de6
  420133:	into   
  420134:	mov    ecx,0xb6d287ad
  420139:	inc    edx
  42013a:	inc    edi
  42013b:	in     al,0x6
  42013d:	xlat   BYTE PTR ds:[ebx]
  42013e:	fs cmp esi,ebx
  420141:	mov    bl,0xa5
  420143:	shl    dh,0xfe
  420146:	aam    0xb9
  420148:	hlt    
  420149:	nop
  42014a:	lahf   
  42014b:	lock out dx,al
  42014d:	fsubr  QWORD PTR [eax-0x54791a4d]
  420153:	adc    esp,DWORD PTR [esp+ebp*8+0xb911913]
  42015a:	add    BYTE PTR [ecx+0x1f17cab5],dl
  420160:	and    BYTE PTR [esp+eax*1],0x94
  420164:	add    BYTE PTR [edi-0x2b0f59be],dl
  42016a:	ret    
  42016b:	jae    0x4200f4
  42016d:	stos   BYTE PTR es:[edi],al
  42016e:	out    0x8b,eax
  420170:	xchg   DWORD PTR [ebp+0x51],esp
  420173:	bound  edi,QWORD PTR [edx]
  420175:	out    0x84,al
  420177:	push   edi
  420178:	or     eax,0xd5f20397
  42017d:	test   al,0x10
  42017f:	xchg   esp,eax
  420180:	out    dx,al
  420181:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420182:	sub    eax,0xe8328648
  420187:	xchg   edi,eax
  420188:	int    0x14
  42018a:	pop    DWORD PTR [ebx]
  42018c:	dec    edi
  42018d:	jmp    edi
  42018f:	xchg   edi,eax
  420190:	add    al,ch
  420192:	das    
  420193:	jae    0x4201d0
  420195:	cld    
  420196:	push   0x58
  420198:	cmp    al,0x73
  42019a:	iret   
  42019b:	or     BYTE PTR [ecx+0x50],bl
  42019e:	cmp    bh,BYTE PTR [edx]
  4201a0:	push   cs
  4201a1:	push   esi
  4201a2:	cmp    DWORD PTR [ebp-0x53],edx
  4201a5:	and    ecx,ecx
  4201a7:	loopne 0x420179
  4201a9:	cld    
  4201aa:	aam    0x27
  4201ac:	adc    BYTE PTR [eax-0x17],al
  4201af:	call   0x13197ef4
  4201b4:	push   es
  4201b5:	xor    BYTE PTR [ecx],ah
  4201b7:	mov    edi,0x18e6733c
  4201bc:	xor    dl,BYTE PTR [ebx]
  4201be:	aam    0x0
  4201c0:	sahf   
  4201c1:	mov    BYTE PTR [esi],dl
  4201c3:	cdq    
  4201c4:	xchg   edi,eax
  4201c5:	ficomp DWORD PTR [eax+0x2b]
  4201c8:	mov    WORD PTR [eax],es
  4201ca:	xor    ch,BYTE PTR [ecx]
  4201cc:	xor    DWORD PTR [edx+edx*2],0xebba6462
  4201d3:	in     eax,0x99
  4201d5:	add    BYTE PTR [eax],al
  4201d7:	mov    edx,0xe867d4bd
  4201dc:	xchg   esi,eax
  4201dd:	add    BYTE PTR [eax],al
  4201df:	adc    esi,DWORD PTR fs:0xc9d50efa
  4201e6:	cld    
  4201e7:	jl     0x420178
  4201e9:	cmp    edx,DWORD PTR [edx]
  4201eb:	and    eax,0x61ffc089
  4201f0:	enter  0xd87e,0x6f
  4201f4:	jo     0x4201e6
  4201f6:	cld    
  4201f7:	sbb    bl,BYTE PTR [esi+0x3a5b53c]
  4201fd:	stc    
  4201fe:	jmp    DWORD PTR [ecx+0x25]
  420201:	jns    0x42026e
  420203:	sub    DWORD PTR [eax+0x51008285],ebx
  420209:	cli    
  42020a:	sti    
  42020b:	dec    DWORD PTR [ebp+0x1fe8bf8b]
  420211:	cmc    
  420212:	cli    
  420213:	(bad)  
  420214:	mov    eax,0xae1270bd
  420219:	(bad)  
  42021a:	or     BYTE PTR [edi+0x7e],al
  42021d:	mov    edi,0x34447244
  420222:	mov    esp,0x5bb3005f
  420227:	(bad)
  42022a:	cld    
  42022b:	inc    WORD PTR [ecx]
  42022e:	xchg   DWORD PTR [bx+0x6935],eax
  420233:	cmp    al,0x0
  420235:	push   ss
  420236:	jmp    0xf4e8:0x7e418b51
  42023d:	mov    edx,0xa55fffc
  420242:	mov    BYTE PTR gs:[ecx],al
  420245:	lods   eax,DWORD PTR ds:[esi]
  420246:	cld    
  420247:	dec    esi
  420248:	call   0x3cb94b
  42024d:	jb     0x420261
  42024f:	pusha  
  420250:	adc    ebp,edi
  420252:	cld    
  420253:	test   BYTE PTR [ebx-0x47],al
  420256:	xor    esp,0xffffffff
  420259:	clc    
  42025a:	pop    es
  42025b:	xor    al,al
  42025d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42025e:	dec    eax
  42025f:	(bad)  
  420260:	(bad)  
  420261:	jge    0x420290
  420263:	repnz push esi
  420265:	loopne 0x4202a5
  420267:	adc    BYTE PTR [eax+0x25],0x13
  42026b:	xchg   ebp,eax
  42026c:	mov    cl,bh
  42026e:	jmp    0x4201ff
  420270:	ret    0xf863
  420273:	mov    DWORD PTR [ebp-0x7],eax
  420276:	push   ebx
  420277:	sti    
  420278:	adc    eax,0x40188d
  42027d:	les    eax,FWORD PTR [ebx+0x4]
  420280:	cmp    edx,DWORD PTR [edi+eiz*2+0x28aed4b7]
  420287:	pop    DWORD PTR [edx+0x0]
  42028a:	adc    BYTE PTR [edx],bl
  42028c:	lods   al,BYTE PTR ds:[esi]
  42028d:	adc    DWORD PTR ds:0xa6e787b2,ecx
  420293:	imul   edi,DWORD PTR ds:0x87dd11fc,0x4f
  42029a:	ret    0x313
  42029d:	mov    ebp,0xffc0c56c
  4202a2:	bound  ecx,QWORD PTR [esi-0x165947ea]
  4202a8:	add    eax,DWORD PTR [edi-0x3a06d2a9]
  4202ae:	push   0x18fea9c4
  4202b3:	in     eax,0x87
  4202b5:	dec    edi
  4202b6:	ins    BYTE PTR es:[edi],dx
  4202b7:	dec    ebx
  4202b8:	call   0xcc137f34
  4202bd:	rcl    edx,0xd6
  4202c0:	mov    es,WORD PTR [edx+0x10]
  4202c3:	jp     0x420297
  4202c5:	push   esp
  4202c6:	ret    
  4202c7:	sub    al,0xd8
  4202c9:	push   cs
  4202ca:	push   esp
  4202cb:	sub    DWORD PTR [ebx+0x46028840],ecx
  4202d1:	jae    0x4202f1
  4202d3:	inc    esp
  4202d4:	add    ecx,DWORD PTR [ebx+0x67d39d59]
  4202da:	jbe    0x4202a7
  4202dc:	mov    ebx,0x3e3c7c97
  4202e1:	std    
  4202e2:	mov    ebx,DWORD PTR [esi+eax*8-0x177e1b7d]
  4202e9:	mov    fs,WORD PTR [edx+ebp*1-0x2e]
  4202ed:	imul   eax,DWORD PTR [eax],0xfcd28e98
  4202f3:	xor    DWORD PTR [ecx],0xa0944010
  4202f9:	add    BYTE PTR [ecx],bh
  4202fb:	push   edx
  4202fc:	add    dh,dh
  4202fe:	xchg   edi,ebp
  420300:	aaa    
  420301:	fnstsw WORD PTR [esi]
  420303:	loope  0x4202d3
  420305:	cmp    al,0xaa
  420307:	xchg   ebp,eax
  420308:	ror    ch,1
  42030a:	sbb    BYTE PTR [ecx+edx*1],dl
  42030d:	daa    
  42030e:	add    al,0x6d
  420310:	ds in  eax,dx
  420312:	xchg   ebx,edx
  420314:	aaa    
  420315:	mov    ch,0x3e
  420317:	sbb    al,bl
  420319:	(bad)  
  42031a:	or     BYTE PTR [ecx+eax*1-0x19],ch
  42031e:	add    ebp,DWORD PTR [edx-0x77]
  420321:	sub    DWORD PTR [edx+edx*8],ebx
  420324:	mov    esp,0xd010391
  420329:	jg     0x420342
  42032b:	push   esp
  42032c:	add    BYTE PTR [eax-0x38],dh
  42032f:	out    0xfa,eax
  420331:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420332:	push   cs
  420333:	adc    BYTE PTR [edx-0x746bfc19],dh
  420339:	stos   DWORD PTR es:[edi],eax
  42033a:	pop    ebx
  42033b:	mov    eax,eax
  42033d:	out    0xa9,al
  42033f:	fwait
  420340:	shr    BYTE PTR [edi-0x4e],1
  420343:	ja     0x4202ce
  420345:	fldpi  
  420347:	ror    BYTE PTR [esi-0x40],0x9
  42034b:	mov    ecx,0x548c3aac
  420350:	in     al,0x3d
  420352:	push   esi
  420353:	add    BYTE PTR [ebx+ecx*8],bl
  420356:	add    dl,ah
  420358:	push   edx
  420359:	aaa    
  42035a:	mov    bl,0x37
  42035c:	adc    al,bl
  42035e:	(bad)  
  42035f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420361:	ins    BYTE PTR es:[edi],dx
  420362:	test   bl,0x8b
  420365:	sti    
  420366:	sub    al,0xb7
  420368:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420369:	shl    BYTE PTR [ebp+edx*8-0x2c393df2],1
  420370:	push   ds
  420371:	mov    esp,0xac68d2f6
  420376:	(bad)  
  420377:	cld    
  420378:	scas   al,BYTE PTR es:[edi]
  420379:	sub    bl,0xe9
  42037c:	xchg   edi,eax
  42037d:	daa    
  42037e:	add    DWORD PTR [edx],ebx
  420380:	fdiv   DWORD PTR [edx+esi*2]
  420383:	aad    0x1f
  420385:	rcr    DWORD PTR [ebx],0x3f
  420388:	adc    DWORD PTR [edx],0x3657f440
  42038e:	aaa    
  42038f:	cmp    dh,BYTE PTR [ebx+eax*1-0x7c]
  420393:	aam    0x96
  420395:	add    BYTE PTR [eax],al
  420397:	bound  edx,QWORD PTR [ebx+0x26]
  42039a:	bound  edx,QWORD PTR gs:[edi+0x4]
  42039e:	data16 test al,0xc0
  4203a1:	add    BYTE PTR [eax-0x49faf7d6],cl
  4203a7:	test   eax,0xbd406391
  4203ac:	push   cs
  4203ad:	shl    DWORD PTR [ebx],0x51
  4203b0:	xchg   ebp,eax
  4203b1:	lods   al,BYTE PTR ds:[esi]
  4203b2:	add    eax,0x8039b06a
  4203b7:	test   eax,0x86c58c00
  4203bc:	sub    bl,ah
  4203be:	sbb    eax,0x34929d0c
  4203c3:	jg     0x4203a1
  4203c5:	lahf   
  4203c6:	xor    eax,0x367cacc2
  4203cb:	or     eax,0xfc353464
  4203d0:	jmp    0x414d7ef7
  4203d5:	imul   esi,DWORD PTR [eax*8-0x1bcaa354],0xfc3353a5
  4203e0:	xchg   ebx,eax
  4203e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4203e2:	test   al,0x97
  4203e4:	pop    ecx
  4203e5:	push   ebp
  4203e6:	xor    eax,0xc583aa8b
  4203eb:	out    0xef,eax
  4203ed:	add    esi,DWORD PTR [esp+edi*8]
  4203f0:	add    al,ch
  4203f2:	lods   eax,DWORD PTR ds:[esi]
  4203f3:	xchg   edx,eax
  4203f4:	std    
  4203f5:	push   0xfffffff4
  4203f7:	in     al,0xa1
  4203f9:	fs hlt 
  4203fb:	sti    
  4203fc:	mov    ebp,ebp
  4203fe:	fdivp  st(5),st
  420400:	(bad)  
  420401:	cmp    eax,0xf44c3f8a
  420406:	loop   0x420405
  420408:	jmp    FWORD PTR ds:0x2dc6c288
  42040e:	add    DWORD PTR [eax+0x49],eax
  420411:	jo     0x42040c
  420413:	add    bh,BYTE PTR fs:[ecx+eax*1]
  420417:	add    BYTE PTR [ebp-0x7d150],cl
  42041d:	add    dl,ch
  42041f:	push   eax
  420420:	mov    DWORD PTR [ebx-0x33],eax
  420423:	dec    esp
  420424:	in     al,0xe7
  420426:	outs   dx,BYTE PTR ds:[esi]
  420427:	repz sti 
  420429:	push   0xffffffec
  42042b:	test   DWORD PTR [ecx-0x7c],eax
  42042e:	mov    ebp,0x75b11e64
  420433:	sbb    eax,ebp
  420435:	(bad)  
  420436:	cmp    eax,0xb08dfbf3
  42043b:	mov    BYTE PTR [ebx+esi*1+0x6a],cl
  42043f:	dec    esp
  420440:	fs pop eax
  420442:	sub    DWORD PTR [eax-0x4],eax
  420445:	inc    al
  420447:	pop    eax
  420448:	or     eax,0x7f89ad40
  42044d:	pusha  
  42044e:	lods   al,BYTE PTR ds:[esi]
  42044f:	add    BYTE PTR [eax],al
  420451:	cmp    eax,DWORD PTR [edx+0x6b0b8404]
  420457:	hlt    
  420458:	sti    
  420459:	push   edi
  42045a:	push   0xe
  42045c:	call   0x8742f175
  420461:	lock jbe 0x420451
  420464:	jo     0x4204af
  420466:	inc    ebx
  420467:	cmc    
  420468:	adc    DWORD PTR [eax-0x3fc66c],esi
  42046e:	or     al,0xa7
  420470:	aam    0xfe
  420472:	jae    0x42049e
  420474:	test   esp,0xfea679e0
  42047a:	in     eax,dx
  42047b:	sub    dl,dl
  42047d:	cld    
  42047e:	sub    ebp,0x94004010
  420484:	mov    al,0x84
  420486:	pop    ebx
  420487:	xchg   ebp,eax
  420488:	sub    DWORD PTR [eax],eax
  42048a:	cmp    DWORD PTR [ebx-0x2a],ebx
  42048d:	sbb    al,0x50
  42048f:	cmp    edx,DWORD PTR [edi+0x2a33fecf]
  420495:	cmp    DWORD PTR [edx],edx
  420497:	xor    al,0x5a
  420499:	sar    bh,0xc
  42049c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42049d:	(bad)  
  42049f:	sbb    ebp,DWORD PTR [edx]
  4204a1:	std    
  4204a2:	les    ecx,FWORD PTR [eax+0xf423e25]
  4204a8:	sub    esi,ecx
  4204aa:	push   esp
  4204ab:	add    esi,DWORD PTR ds:0x295412c0
  4204b1:	mov    al,BYTE PTR [edx-0x11]
  4204b4:	fcmovu st,st(1)
  4204b6:	(bad)  
  4204b7:	(bad)  
  4204b8:	sbb    eax,0x4d0f5100
  4204bd:	sbb    al,0xf
  4204bf:	push   esp
  4204c0:	sub    esi,ecx
  4204c2:	mov    ah,al
  4204c4:	scas   al,BYTE PTR es:[edi]
  4204c5:	rcr    DWORD PTR [ebx],0x63
  4204c8:	pushf  
  4204c9:	inc    ebx
  4204ca:	jae    0x420463
  4204cc:	jns    0x420507
  4204ce:	ror    BYTE PTR [edi],1
  4204d0:	pop    esp
  4204d1:	add    al,0x89
  4204d3:	jno    0x42045e
  4204d5:	adc    eax,0x439c9440
  4204da:	jae    0x420473
  4204dc:	cdq    
  4204dd:	cmp    esp,edx
  4204df:	subps  xmm7,xmm4
  4204e2:	or     BYTE PTR [eax+eax*1-0x6fff4fda],0xd0
  4204ea:	sbb    eax,0xa711f811
  4204ef:	add    ecx,DWORD PTR ds:0x3380f2ba
  4204f5:	lods   al,BYTE PTR ds:[esi]
  4204f6:	jmp    0x718d6dce
  4204fb:	ret    0x7d93
  4204fe:	es mov al,0x90
  420501:	shr    ch,1
  420503:	adc    BYTE PTR [eax+0x10],cl
  420506:	daa    
  420507:	add    al,0x1d
  420509:	cli    
  42050a:	arpl   WORD PTR [ebx-0x39],ax
  42050d:	push   DWORD PTR [esi]
  42050f:	cmp    esp,DWORD PTR [eax-0x80]
  420512:	dec    edx
  420513:	loopne 0x4204b8
  420515:	add    BYTE PTR [ebx],bh
  420517:	mov    ebp,0x51e7a1c
  42051c:	xchg   esp,eax
  42051d:	add    BYTE PTR [ebx+eax*2-0x59],ch
  420521:	add    eax,0xcc493b17
  420526:	out    0x3,eax
  420528:	xchg   esp,eax
  420529:	xor    esi,ebx
  42052b:	and    edx,DWORD PTR [ebx+0x118ee6c0]
  420531:	aam    0xe7
  420533:	add    edx,DWORD PTR [ebp+edi*2-0x2f6b505a]
  42053a:	jge    0x420592
  42053c:	or     al,0x7a
  42053e:	sbb    al,BYTE PTR ds:0x43640094
  420544:	inc    edi
  420545:	sti    
  420546:	mov    dh,0x3a
  420548:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420549:	dec    esp
  42054a:	test   bl,0x0
  42054d:	ret    
  42054e:	test   DWORD PTR [ebx+eiz*4-0x46],ebp
  420552:	xor    ah,dh
  420554:	xor    bl,0xab
  420557:	jmp    0x718cae2f
  42055c:	and    DWORD PTR [ebx],0x97e90001
  420562:	jg     0x420523
  420564:	mov    ch,0x79
  420566:	test   al,0xff
  420568:	mov    eax,0xfa100ece
  42056d:	push   edi
  42056e:	xor    bh,BYTE PTR [ebx]
  420570:	jmp    0x420502
  420572:	add    BYTE PTR [eax],al
  420574:	xchg   ebp,eax
  420575:	mov    DWORD PTR [esi-0x59686d01],esp
  42057b:	adc    esi,edi
  42057d:	in     al,0x79
  42057f:	(bad)  
  420580:	call   0x1954391c
  420585:	stos   BYTE PTR es:[edi],al
  420586:	sar    bh,0x67
  420589:	(bad)  
  42058a:	mov    ch,0xfe
  42058c:	call   0x9e0b2e28
  420591:	jge    0x4205c7
  420593:	pop    esp
  420594:	das    
  420595:	push   ecx
  420596:	inc    eax
  420597:	add    ebp,ecx
  420599:	sbb    BYTE PTR [ebx+0x3218830f],bh
  42059f:	cld    
  4205a0:	jmp    0x34b57740
  4205a5:	sbb    BYTE PTR [esi-0x306812dd],dh
  4205ab:	or     al,0x75
  4205ad:	pop    ecx
  4205ae:	retf   
  4205af:	std    
  4205b0:	mov    ds:0xef6a8d00,al
  4205b5:	retf   
  4205b6:	push   ecx
  4205b7:	jns    0x4205d4
  4205b9:	test   ebp,0x2a493bd8
  4205bf:	fnstcw WORD PTR [ebx]
  4205c1:	dec    eax
  4205c2:	es hlt 
  4205c4:	cmp    ecx,DWORD PTR [edx+0x6]
  4205c7:	adc    eax,0xc5058c3c
  4205cc:	cmp    DWORD PTR [eax+0x34],0x31
  4205d0:	cld    
  4205d1:	jmp    0x78c60bc0
  4205d6:	push   ebx
  4205d7:	xor    esp,edi
  4205d9:	add    BYTE PTR [ebp+0x6d330062],bh
  4205df:	jecxz  0x4205df
  4205e1:	mov    ch,BYTE PTR [edi-0x7c]
  4205e4:	cmp    eax,0x8030d612
  4205e9:	xchg   ecx,eax
  4205ea:	(bad)  
  4205ec:	(bad)  
  4205ed:	jmp    FWORD PTR [eax]
  4205ef:	stc    
  4205f0:	adc    DWORD PTR [ecx-0x332],0x8
  4205f7:	xor    DWORD PTR [edi],ebp
  4205f9:	rol    BYTE PTR [esi-0x1a3d7906],0x3d
  420600:	or     eax,0x8db144eb
  420605:	mov    al,ds:0x74fffd3d
  42060a:	inc    ecx
  42060b:	mov    cl,0x8d
  42060d:	mov    eax,ds:0x74fffd2d
  420612:	sub    DWORD PTR [esp+edi*4],ebp
  420615:	jmp    0x420617
  420617:	aas    
  420618:	test   BYTE PTR [esi+0x2f0c7c88],bh
  42061e:	sar    BYTE PTR [ecx+0x2c73fd4e],0x3d
  420625:	adc    BYTE PTR [ecx-0x1],0x60
  420629:	inc    DWORD PTR [edx+0x5183fb45]
  42062f:	stc    
  420630:	pusha  
  420631:	inc    DWORD PTR [edx+0x51840d35]
  420637:	in     eax,dx
  420638:	pusha  
  420639:	inc    DWORD PTR [edx+0x51803125]
  42063f:	mov    esp,0x3582ff60
  420644:	add    eax,0x41bd04c2
  420649:	xchg   esp,ebp
  42064b:	ds adc ebp,esi
  42064e:	adc    DWORD PTR [ecx-0x3f],0x2794fffc
  420655:	sar    esp,cl
  420657:	mov    DWORD PTR [ebx+0x11],esp
  42065a:	inc    eax
  42065b:	xchg   esp,eax
  42065c:	xchg   edi,eax
  42065d:	aaa    
  42065e:	adc    al,BYTE PTR [eax+0x10ffc04b]
  420664:	out    0xac,eax
  420666:	bound  esp,QWORD PTR [ecx]
  420668:	mov    ds,esp
  42066a:	add    esp,ebp
  42066c:	xchg   ebx,eax
  42066d:	pushf  
  42066e:	mov    dl,al
  420670:	inc    ebp
  420671:	mov    eax,0xd01bee4e
  420676:	cld    
  420677:	mov    ecx,esi
  420679:	adc    eax,DWORD PTR [eax+0x0]
  42067c:	xchg   esp,eax
  42067d:	pushf  
  42067e:	inc    eax
  42067f:	jae    0x420651
  420681:	call   0x42ad:0x679023b4
  420688:	mov    esi,0x70438519
  42068d:	xor    eax,0xf11167d0
  420692:	in     al,dx
  420693:	es sub al,0x99
  420696:	jne    0x420695
  420698:	xor    eax,esp
  42069a:	(bad)  
  42069b:	mov    dl,al
  42069d:	std    
  42069e:	pop    es
  42069f:	mov    edx,eax
  4206a1:	add    eax,0xa918e7b0
  4206a6:	xor    eax,0xae5a19fc
  4206ab:	push   ds
  4206ac:	mov    fs:0x1957b7db,al
  4206b2:	sub    BYTE PTR [ebx-0x7ccb6901],dl
  4206b8:	aam    0x15
  4206ba:	or     eax,DWORD PTR [ecx+0x40643999]
  4206c0:	xchg   esp,eax
  4206c1:	and    eax,0x196e0629
  4206c6:	mov    eax,eax
  4206c8:	mov    esp,0xcbfc36b7
  4206cd:	add    dl,al
  4206cf:	mov    dh,BYTE PTR [esi+0x578b29cd]
  4206d5:	in     al,0xea
  4206d7:	ds xchg ebp,eax
  4206d9:	pusha  
  4206da:	iret   
  4206db:	ret    
  4206dc:	stos   DWORD PTR es:[edi],eax
  4206dd:	jp     0x420676
  4206df:	out    0x0,eax
  4206e1:	ins    BYTE PTR es:[edi],dx
  4206e2:	rol    DWORD PTR [edx],1
  4206e4:	lea    ecx,[ebx-0x430c6885]
  4206ea:	sar    esi,1
  4206ec:	mov    ebx,ds
  4206ee:	add    al,0x72
  4206f0:	test   edi,esp
  4206f2:	add    edi,esp
  4206f4:	add    edx,DWORD PTR [esi+0x4]
  4206f7:	out    0xd0,eax
  4206f9:	sbb    al,0x1c
  4206fb:	imul   ebp,DWORD PTR [eax],0x89277bc3
  420701:	into   
  420702:	pop    esp
  420703:	nop
  420704:	adc    edx,DWORD PTR [ebx]
  420706:	mov    ebp,0xe4e388f2
  42070b:	cwde   
  42070c:	mov    dh,bl
  42070e:	sbb    al,0x37
  420710:	(bad)  
  420711:	(bad)  
  420712:	sbb    dh,cl
  420714:	add    bl,ch
  420716:	sub    eax,0xd295a9d5
  42071b:	int    0x73
  42071d:	mov    DWORD PTR [ecx],0x152103e7
  420723:	daa    
  420724:	adc    ah,dl
  420726:	add    BYTE PTR [ecx+0x4],al
  420729:	adc    DWORD PTR ds:0x5412b7,edx
  42072f:	ins    BYTE PTR es:[edi],dx
  420730:	inc    ebx
  420731:	xchg   edx,edi
  420733:	mov    DWORD PTR ss:[esi+0x18],edx
  420737:	ss sub al,0xb7
  42073a:	aam    0x8d
  42073c:	rol    BYTE PTR ss:[edx+0x1c],cl
  420740:	iret   
  420741:	or     al,0x31
  420743:	jno    0x420702
  420745:	add    BYTE PTR [ebx-0x2cc700d1],cl
  42074b:	sub    eax,0x871ee9fc
  420750:	jmp    edi
  420752:	xchg   edi,eax
  420753:	add    BYTE PTR [edi-0x2d],cl
  420756:	sbb    edi,DWORD PTR [eax-0x7]
  420759:	sbb    al,BYTE PTR [esi-0x2a]
  42075c:	out    0x18,eax
  42075e:	les    ebp,FWORD PTR [ebx]
  420760:	cld    
  420761:	ins    BYTE PTR es:[edi],dx
  420762:	push   edi
  420763:	mov    bl,0xb
  420765:	ds jmp 0x42074a
  420768:	or     ebx,DWORD PTR [ecx+0x72e7451e]
  42076e:	mov    ebp,DWORD PTR [edi]
  420770:	cld    
  420771:	(bad)  
  420772:	imul   eax,DWORD PTR [eax+0x3],0x23b1c2e9
  420779:	in     eax,0x1e
  42077b:	outs   dx,DWORD PTR ds:[esi]
  42077c:	cld    
  42077d:	xchg   ebp,eax
  42077e:	dec    ebx
  42077f:	cli    
  420780:	cld    
  420781:	jge    0x4207c6
  420783:	cli    
  420784:	push   ecx
  420785:	adc    DWORD PTR [ecx+ecx*2],ebx
  420788:	(bad)  
  420789:	call   0x2b420163
  42078e:	dec    ebx
  42078f:	cs push ebx
  420791:	jb     0x4207ff
  420793:	and    bl,0xe1
  420796:	or     eax,0x7c6a0bc3
  42079b:	or     DWORD PTR [ecx+0x37],edx
  42079e:	pop    ecx
  42079f:	xor    edi,0x708499c4
  4207a5:	call   0x6f4f0841
  4207aa:	add    BYTE PTR [edi+ebp*1],cl
  4207ad:	cld    
  4207ae:	jmp    0xf73e3dc7
  4207b3:	xor    al,0xfe
  4207b6:	call   0xe1b43352
  4207bb:	test   al,0x12
  4207bd:	js     0x4207b4
  4207bf:	xlat   BYTE PTR ds:[ebx]
  4207c0:	sub    eax,0xae150089
  4207c5:	sti    
  4207c6:	(bad)  
  4207c8:	push   ebp
  4207c9:	std    
  4207ca:	(bad)  
  4207cb:	mov    ebp,0xe1244880
  4207d0:	hlt    
  4207d1:	push   ebx
  4207d2:	inc    eax
  4207d4:	lds    ecx,FWORD PTR [edi]
  4207d6:	inc    eax
  4207d7:	lods   eax,DWORD PTR ds:[esi]
  4207d8:	xor    bh,dl
  4207da:	mov    DWORD PTR [ecx],eax
  4207dc:	dec    esi
  4207dd:	or     al,0xbe
  4207df:	mov    ebp,0x30fffc2d
  4207e4:	les    edi,FWORD PTR [edx+0x24]
  4207e7:	add    edx,DWORD PTR [ecx+0x53]
  4207ea:	push   DWORD PTR [eax-0x47]
  4207ed:	cmovo  edi,DWORD PTR [ebp-0x53]
  4207f1:	mov    esp,0x4f3b7d79
  4207f6:	push   edi
  4207f7:	call   0xfbd:0x70ff045d
  4207fe:	inc    eax
  4207ff:	jge    0x42087b
  420801:	pop    eax
  420802:	and    al,0x41
  420804:	inc    eax
  420805:	aaa    
  420806:	pop    esp
  420807:	push   ecx
  420808:	adc    DWORD PTR [esp+ebx*8-0x24],edi
  42080c:	pop    esp
  42080d:	mov    ah,0x43
  42080f:	add    BYTE PTR ds:0x2c04acf4,bh
  420815:	add    DWORD PTR [eax],eax
  420817:	call   FWORD PTR ds:0x3dfffd01
  42081d:	cmp    al,0xfb
  42081f:	jne    0x420856
  420821:	hlt    
  420822:	adc    DWORD PTR [eax],ecx
  420824:	inc    ecx
  420825:	inc    ecx
  420826:	cld    
  420827:	mov    dh,ch
  420829:	jg     0x420822
  42082b:	(bad)  
  42082c:	cli    
  42082d:	lods   al,BYTE PTR ds:[esi]
  42082e:	hlt    
  42082f:	add    ch,bh
  420831:	add    BYTE PTR [esi+0x53],dl
  420834:	ret    0x11f3
  420837:	enter  0x40fe,0xfc
  42083b:	mov    BYTE PTR [ebx+ebx*8-0x2452f021],dl
  420842:	fist   WORD PTR [ebx]
  420844:	push   0xf412331d
  420849:	dec    ecx
  42084a:	sar    bh,0x3b
  42084d:	xchg   edi,eax
  42084e:	cld    
  42084f:	dec    ebx
  420851:	or     ebx,ecx
  420853:	cld    
  420854:	dec    ecx
  420855:	das    
  420856:	xor    edx,DWORD PTR [edx]
  420858:	loopne 0x420883
  42085a:	sar    bh,0x16
  42085d:	push   esp
  42085e:	add    al,0xfe
  420860:	fwait
  420861:	mov    ds:0x16a3ff3d,eax
  420866:	sub    al,BYTE PTR [ebx+0x70]
  420869:	inc    edi
  42086a:	dec    DWORD PTR [ecx+ebx*1]
  42086d:	mov    al,0x0
  42086f:	add    BYTE PTR [ebx+esi*8-0x5bffdc44],dl
  420876:	sub    DWORD PTR [edx+eax*2+0x123372e7],ebp
  42087d:	test   BYTE PTR ds:0xa1effc0,ch
  420883:	jle    0x42087a
  420885:	xchg   ebx,eax
  420886:	popf   
  420887:	popa   
  420888:	call   FWORD PTR [ebx+0x1a]
  42088b:	test   DWORD PTR [ebx+0x78],eax
  42088e:	push   ecx
  42088f:	rcl    BYTE PTR [eax-0x1d],1
  420892:	sbb    ch,BYTE PTR [edx+0x142d4307]
  420898:	adc    al,0xd4
  42089a:	sbb    DWORD PTR [edi+0x7a9da3bf],eax
  4208a0:	jmp    FWORD PTR [ebx]
  4208a2:	sbb    bl,BYTE PTR [edx-0x412dd01]
  4208a8:	cld    
  4208a9:	mov    al,ds:0x88fce005
  4208ae:	std    
  4208af:	out    0x67,eax
  4208b1:	xchg   esp,eax
  4208b2:	fld    DWORD PTR [ebx]
  4208b4:	add    BYTE PTR [edx+0x0],ch
  4208b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4208b8:	sbb    DWORD PTR [eax],edi
  4208ba:	adc    BYTE PTR [edi],ah
  4208bc:	add    al,0xfd
  4208be:	call   0xfbe7:0x10b7c89d
  4208c5:	jecxz  0x4208f2
  4208c7:	cli    
  4208c8:	pop    es
  4208c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4208ca:	inc    eax
  4208cb:	xchg   ecx,eax
  4208cc:	add    DWORD PTR [ebp-0x2d],esp
  4208cf:	jne    0x4208ea
  4208d1:	lods   al,BYTE PTR ds:[esi]
  4208d2:	adc    al,0x27
  4208d4:	add    al,0x15
  4208d6:	sub    DWORD PTR [ebp-0x48],esp
  4208d9:	add    BYTE PTR [esi+edx*4-0x1a],ah
  4208dd:	add    ch,cl
  4208df:	inc    eax
  4208e0:	mov    dh,0x9b
  4208e2:	call   0xeeb5:0xa103e701
  4208e9:	xor    al,BYTE PTR [esi-0x6c3c26b4]
  4208ef:	push   ss
  4208f0:	repz add al,BYTE PTR [ecx+0x50]
  4208f4:	daa    
  4208f5:	sbb    al,0x93
  4208f7:	jns    0x4208a3
  4208f9:	out    0x9f,eax
  4208fb:	sti    
  4208fc:	push   ebp
  4208fd:	inc    ebp
  4208fe:	std    
  4208ff:	add    BYTE PTR [esi],dl
  420901:	mov    ecx,0xe7a27993
  420906:	mov    ebx,0xec140f41
  42090b:	enter  0xc73e,0x53
  42090f:	jl     0x4208bb
  420911:	out    0x77,eax
  420913:	jns    0x4208a7
  420915:	out    0x77,eax
  420917:	jns    0x42094b
  420919:	call   0xf7a62189
  42091e:	xor    ebp,DWORD PTR [ebx]
  420920:	sar    edi,0x28
  420923:	cmc    
  420924:	ds ins BYTE PTR es:[edi],dx
  420926:	aam    0x0
  420928:	(bad)  
  420929:	sbb    BYTE PTR [eax+0x11042714],ah
  42092f:	cmc    
  420930:	dec    DWORD PTR [eax+edi*2-0x40]
  420934:	jmp    FWORD PTR [ebp+0x2911549c]
  42093a:	nop
  42093b:	int    0x5d
  42093d:	fiadd  DWORD PTR [eax]
  42093f:	push   edi
  420940:	enter  0x8c88,0xc4
  420944:	inc    eax
  420945:	pop    es
  420946:	jmp    0x6b2d8107
  42094b:	jnp    0x4208ec
  42094d:	cmc    
  42094e:	in     al,0xb7
  420950:	push   esi
  420951:	inc    eax
  420952:	jmp    0x816fbdea
  420957:	add    BYTE PTR [esi-0x3],ah
  42095a:	adc    bp,WORD PTR [ebx+0x73]
  42095e:	add    al,0x12
  420960:	sub    ecx,DWORD PTR [ebx+0x67bb1bac]
  420966:	pop    esp
  420967:	loopne 0x42095c
  420969:	es push ecx
  42096b:	das    
  42096c:	push   0xaec63efd
  420971:	pcmpgtb mm3,QWORD PTR [esi+eax*4-0x4]
  420976:	mov    ah,0x83
  420978:	sub    eax,0x2d67f172
  42097d:	adc    ch,ch
  42097f:	mov    eax,eax
  420981:	inc    DWORD PTR [ecx]
  420983:	xchg   esi,eax
  420984:	sub    esi,DWORD PTR [edx-0x7]
  420987:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420988:	scas   al,BYTE PTR es:[edi]
  420989:	or     eax,DWORD PTR [esi]
  42098b:	sbb    al,0x2
  42098d:	std    
  42098e:	aam    0xe3
  420990:	or     eax,0x3f88e940
  420995:	or     ebp,ecx
  420997:	jge    0x420997
  420999:	pop    ds
  42099a:	xchg   ebp,eax
  42099b:	push   ecx
  42099c:	sub    al,BYTE PTR [eax]
  42099e:	push   ebp
  42099f:	xchg   ebp,eax
  4209a0:	sbb    ah,bh
  4209a2:	xchg   ebp,eax
  4209a3:	add    BYTE PTR [esi+0x2c],ah
  4209a6:	sub    DWORD PTR [ecx+0x3103dc],0xffffffed
  4209ad:	inc    esp
  4209ae:	mov    esi,0x21f0fd04
  4209b3:	xor    al,ch
  4209b5:	cmp    eax,0xe07654fc
  4209ba:	repnz add eax,0x3fc9cd
  4209c0:	stc    
  4209c1:	inc    edi
  4209c2:	xchg   DWORD PTR [ebp-0xf],esi
  4209c5:	jno    0x4209e4
  4209c7:	call   0x3cbaf3
  4209cc:	imul   eax,esp,0x32d61870
  4209d2:	pop    esp
  4209d3:	mov    eax,0x1071047e
  4209d8:	xor    dh,BYTE PTR [ecx+0xc]
  4209db:	mov    eax,DWORD PTR [eax]
  4209dd:	adc    bh,bl
  4209df:	jne    0x420986
  4209e1:	add    eax,0xef42fdb2
  4209e6:	out    0x10,eax
  4209e8:	push   edx
  4209e9:	jno    0x4209fb
  4209eb:	(bad)  
  4209ec:	fmul   DWORD PTR ds:0x2548ff56
  4209f2:	sti    
  4209f3:	adc    eax,0x400819
  4209f8:	adc    edi,DWORD PTR [edx]
  4209fa:	mov    esi,0x87526d10
  4209ff:	in     al,dx
  420a00:	mov    eax,DWORD PTR [ecx]
  420a02:	and    BYTE PTR [esi+edi*1+0x5603fd],ch
  420a09:	div    BYTE PTR [ecx+0x8]
  420a0c:	je     0x420a5a
  420a0e:	add    eax,0xf053bc91
  420a13:	add    al,0xc9
  420a16:	cmc    
  420a17:	ss xor eax,0x3f950d
  420a1d:	fcom   DWORD PTR [ebx+edi*8]
  420a20:	jne    0x420a4f
  420a22:	lods   al,BYTE PTR ds:[esi]
  420a23:	dec    ecx
  420a24:	adc    al,0x94
  420a26:	push   edx
  420a27:	mov    ch,0x7
  420a29:	sub    al,0xea
  420a2b:	sub    al,0xfc
  420a2d:	sbb    ecx,DWORD PTR [esi+0x10]
  420a30:	std    
  420a31:	mov    DWORD PTR [ebx+0x2f],edx
  420a34:	jb     0x4209da
  420a36:	or     DWORD PTR [edi],ebp
  420a38:	jb     0x4209c6
  420a3a:	pop    edx
  420a3b:	adc    eax,0x3d7a13c
  420a40:	pop    esi
  420a41:	push   ecx
  420a42:	push   ebp
  420a43:	adc    BYTE PTR [eax],al
  420a45:	inc    ecx
  420a46:	sahf   
  420a47:	sbb    al,0xf5
  420a49:	cdq    
  420a4a:	aaa    
  420a4b:	pop    esp
  420a4c:	inc    eax
  420a4d:	xchg   esp,eax
  420a4e:	sbb    edx,esi
  420a50:	mov    BYTE PTR [ecx+0x1b],cl
  420a53:	mov    ah,0x1e
  420a55:	mov    esp,0xc3fd6fe0
  420a5a:	mov    ds:0xde9c7340,al
  420a5f:	hlt    
  420a60:	pop    edi
  420a61:	in     al,dx
  420a62:	push   ebp
  420a63:	add    BYTE PTR [ebx-0x7c],dh
  420a66:	shl    BYTE PTR [ebp+0x148c0f0f],cl
  420a6c:	std    
  420a6d:	add    BYTE PTR [ecx],ah
  420a6f:	das    
  420a70:	sbb    BYTE PTR [esi],ah
  420a72:	xchg   ecx,eax
  420a73:	out    0x2f,eax
  420a75:	call   0x13f7f91e
  420a7a:	sub    DWORD PTR [ebp+0x10],0x56
  420a7e:	jnp    0x420a05
  420a80:	clc    
  420a81:	cld    
  420a82:	mov    ebp,ebp
  420a84:	adc    al,0x40
  420a86:	xchg   esp,eax
  420a87:	outs   dx,DWORD PTR ds:[esi]
  420a88:	int    0xc1
  420a8a:	test   BYTE PTR [ecx],bl
  420a8c:	aad    0x88
  420a8e:	push   0x200228
  420a93:	pop    ebx
  420a94:	add    BYTE PTR [edx+eiz*8],al
  420a97:	mov    ds:0x38c80bb5,al
  420a9c:	sbb    BYTE PTR [edi],al
  420a9e:	clc    
  420a9f:	add    ch,ah
  420aa1:	das    
  420aa2:	pop    ss
  420aa3:	inc    ecx
  420aa4:	push   edx
  420aa5:	or     al,0x6d
  420aa7:	in     eax,dx
  420aa8:	inc    esi
  420aa9:	ins    BYTE PTR es:[edi],dx
  420aaa:	aam    0x0
  420aac:	push   esp
  420aad:	adc    al,0x19
  420aaf:	scas   al,BYTE PTR es:[edi]
  420ab0:	(bad)  
  420ab1:	jp     0x420b11
  420ab3:	or     al,0xbe
  420ab5:	mov    ecx,0x30c91893
  420aba:	add    BYTE PTR [eax],ch
  420abc:	rcl    DWORD PTR [ecx+edi*8],0xad
  420ac0:	cli    
  420ac1:	data16 adc BYTE PTR cs:0x95f8662f,dh
  420ac9:	sbb    DWORD PTR [eax+0x3a04270d],esi
  420acf:	lds    ebp,FWORD PTR [eax-0x326bffec]
  420ad5:	jno    0x420af7
  420ad7:	sar    ebp,0xc6
  420ada:	pop    edi
  420adb:	push   esp
  420adc:	add    bl,ah
  420ade:	aad    0xc
  420ae0:	scas   al,BYTE PTR es:[edi]
  420ae1:	div    BYTE PTR [edi+0x6b281892]
  420ae7:	test   eax,0x27446a27
  420aec:	or     BYTE PTR [edx],dl
  420aee:	stc    
  420aef:	cmp    ebp,DWORD PTR [eax-0x57]
  420af2:	add    eax,DWORD PTR [edi]
  420af4:	adc    DWORD PTR [esi],edi
  420af6:	mov    ecx,0xba37ba7
  420afb:	sub    DWORD PTR [ebp+0x241e1bde],0x137c2f25
  420b05:	push   ds
  420b06:	mov    ecx,0x179b2783
  420b0b:	retf   0x9327
  420b0e:	call   FWORD PTR [eax-0x53]
  420b11:	out    dx,al
  420b12:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  420b14:	test   dl,dl
  420b16:	ret    
  420b17:	dec    ebx
  420b18:	(bad)  
  420b1b:	aad    0x13
  420b1d:	add    BYTE PTR [esi+edi*4+0x37ecf51b],dl
  420b24:	pop    ebx
  420b25:	inc    eax
  420b26:	jmp    0x5ccad9be
  420b2b:	mov    BYTE PTR [esi+ebx*1-0x298173f],ch
  420b32:	(bad)  
  420b33:	sbb    esp,DWORD PTR [edi+0x73]
  420b36:	loope  0x420b38
  420b38:	(bad)  
  420b39:	icebp  
  420b3a:	pop    edi
  420b3b:	jno    0x420b13
  420b3d:	es jae 0x420b19
  420b40:	stos   BYTE PTR es:[edi],al
  420b41:	mov    dl,0x13
  420b43:	jb     0x420b19
  420b45:	push   cs
  420b46:	std    
  420b47:	adc    al,0xe8
  420b49:	push   ds
  420b4a:	push   ebx
  420b4b:	xchg   ebp,eax
  420b4c:	mov    dl,0x24
  420b4e:	call   0x17f4b64d
  420b53:	xchg   BYTE PTR [ebx+edx*1],cl
  420b56:	push   esi
  420b57:	jle    0x420b65
  420b59:	sti    
  420b5a:	cld    
  420b5b:	cld    
  420b5c:	mov    edi,0xa3911223
  420b61:	sar    bh,0xc6
  420b64:	les    eax,FWORD PTR [eax+0x13]
  420b67:	jmp    0x602d8338
  420b6c:	mov    eax,fs
  420b6e:	stos   DWORD PTR es:[edi],eax
  420b6f:	stos   BYTE PTR es:[edi],al
  420b70:	xchg   edi,eax
  420b71:	cld    
  420b72:	push   ebp
  420b73:	jb     0x420bc1
  420b75:	cli    
  420b76:	jae    0x420b80
  420b78:	test   al,0xd5
  420b7a:	mov    eax,0xbf81b237
  420b7f:	mov    ch,0x8f
  420b81:	out    0x32,eax
  420b83:	mov    edi,edi
  420b85:	sar    bh,0x93
  420b88:	xchg   DWORD PTR [ebx],esp
  420b8a:	jb     0x420b85
  420b8c:	fidivr WORD PTR [edx-0x1e3f1ed]
  420b92:	out    0x0,eax
  420b94:	inc    esi
  420b95:	(bad)  
  420b96:	sti    
  420b97:	jmp    DWORD PTR [esi+0x75fb11]
  420b9d:	popa   
  420b9e:	xlat   BYTE PTR ds:[ebx]
  420b9f:	jno    0x420bb1
  420ba1:	and    edx,edi
  420ba3:	jno    0x420bad
  420ba5:	cmp    cl,BYTE PTR [esi]
  420ba7:	xor    al,0x15
  420ba9:	jge    0x420ba7
  420bab:	pop    ebp
  420bac:	pop    ebp
  420bad:	out    dx,eax
  420bae:	or     al,0x0
  420bb0:	push   ebp
  420bb1:	mov    dh,0xe0
  420bb3:	repnz add eax,0x3fa09d
  420bb9:	icebp  
  420bba:	dec    ebx
  420bbb:	xchg   DWORD PTR [ebp-0x7],esi
  420bbe:	ins    DWORD PTR es:[edi],dx
  420bbf:	sbb    eax,0xfa9ad7e8
  420bc4:	inc    DWORD PTR [ecx-0x9e78f44]
  420bca:	cs pop esp
  420bcc:	mov    eax,0x1070fcae
  420bd1:	or     ch,BYTE PTR [esi+0xc]
  420bd4:	mov    ecx,DWORD PTR [eax-0x3a8a04f8]
  420bda:	or     edx,eax
  420bdc:	sti    
  420bdd:	dec    edx
  420bde:	shl    edi,cl
  420be0:	adc    BYTE PTR [edx],ch
  420be2:	ins    DWORD PTR es:[edi],dx
  420be3:	adc    bh,bh
  420be5:	rcl    BYTE PTR [ecx],1
  420be7:	push   esi
  420be8:	inc    eax
  420bea:	sub    ebx,edi
  420bec:	adc    eax,0x400d95
  420bf1:	jmp    0x420c29
  420bf3:	mov    esi,0x874e7d10
  420bf8:	in     al,dx
  420bf9:	ret    
  420bfa:	std    
  420bfb:	pop    ds
  420bfc:	lods   al,BYTE PTR ds:[esi]
  420bfd:	add    DWORD PTR cs:[esi+edx*2],eax
  420c01:	add    dh,dh
  420c03:	ins    DWORD PTR es:[edi],dx
  420c04:	or     al,0x74
  420c06:	pop    esp
  420c07:	or     DWORD PTR [ecx-0x7f2c7446],esp
  420c0d:	rcl    BYTE PTR [ebx+eax*4+0x77a13908],0x68
  420c15:	inc    eax
  420c16:	xchg   esp,eax
  420c17:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420c18:	adc    ch,bh
  420c1a:	ror    DWORD PTR [ebx+0x77],0x4a
  420c1e:	pushf  
  420c1f:	cs mov ch,0xb
  420c22:	sub    al,0x96
  420c24:	daa    
  420c25:	cld    
  420c26:	xor    edx,DWORD PTR [edx+0xf]
  420c29:	std    
  420c2a:	mov    eax,ds:0x88722aff
  420c2f:	in     eax,0x2a
  420c31:	jb     0x420bbb
  420c33:	ss mov ch,0x7
  420c36:	adc    eax,DWORD PTR [eax+ebx*2+0x13]
  420c3a:	push   esp
  420c3b:	pop    ss
  420c3c:	retf   0xd65a
  420c3f:	inc    edx
  420c40:	add    BYTE PTR [ebx+0xf],dl
  420c43:	arpl   WORD PTR [edx],si
  420c45:	add    dh,BYTE PTR [ebx+ecx*8-0x12680041]
  420c4c:	jbe    0x420cc0
  420c4e:	test   BYTE PTR [ebx],al
  420c50:	loope  0x420c39
  420c52:	aas    
  420c53:	shr    DWORD PTR [edx],1
  420c55:	cld    
  420c56:	sbb    BYTE PTR [edi-0x4c],dl
  420c59:	pop    ss
  420c5a:	(bad)  
  420c5b:	ins    BYTE PTR es:[edi],dx
  420c5c:	mov    al,ds:0xb51757b7
  420c61:	btc    DWORD PTR [ebx],ebp
  420c64:	adc    al,0x89
  420c66:	add    BYTE PTR [ecx-0x1],ah
  420c69:	sub    dh,BYTE PTR [edx-0x68]
  420c6c:	iret   
  420c6d:	repnz clc 
  420c6f:	mov    ds:0x9b1017cd,eax
  420c74:	dec    ebx
  420c75:	or     ch,bh
  420c77:	or     DWORD PTR [esi-0x2e],eax
  420c7a:	cld    
  420c7b:	add    DWORD PTR [esi],edx
  420c7d:	sub    esi,DWORD PTR [edx-0x74]
  420c80:	jmp    0x5e00:0x59a0ac15
  420c87:	rol    DWORD PTR [eax],1
  420c89:	sub    DWORD PTR [edi],edx
  420c8b:	xchg   esp,eax
  420c8c:	out    0xe3,eax
  420c8e:	addr16 xchg eax,eax
  420c91:	out    0xb6,al
  420c93:	xchg   ecx,eax
  420c94:	push   0x9232d9
  420c99:	sub    ch,al
  420c9b:	xchg   esi,eax
  420c9c:	in     al,0xd3
  420c9e:	ret    
  420c9f:	inc    ebx
  420ca0:	lods   eax,DWORD PTR ds:[esi]
  420ca1:	in     al,dx
  420ca2:	imul   eax,edx,0x31
  420ca5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420ca6:	add    edx,DWORD PTR [ebp-0x18]
  420ca9:	jmp    0x420c9a
  420cab:	xchg   al,al
  420cad:	out    0xb0,al
  420caf:	cdq    
  420cb0:	push   0x5a36b3
  420cb5:	stos   BYTE PTR es:[edi],al
  420cb6:	fist   WORD PTR [esi+0xbc3dbd8]
  420cbc:	sub    ebx,DWORD PTR [esi-0x69d42bf1]
  420cc2:	loope  0x420c78
  420cc4:	das    
  420cc5:	daa    
  420cc6:	add    al,0xd5
  420cc8:	int    0x71
  420cca:	sbb    BYTE PTR [eax],al
  420ccc:	adc    al,0x15
  420cce:	into   
  420ccf:	xor    DWORD PTR [esi-0x2438bd20],edx
  420cd5:	push   DWORD PTR [edi+edi*2]
  420cd8:	inc    esi
  420cd9:	clc    
  420cda:	cli    
  420cdb:	fnstenv [ebx-0x3fd5c0b1]
  420ce1:	jl     0x420c89
  420ce3:	mov    al,0x76
  420ce5:	jge    0x420d5b
  420ce7:	mov    al,0x92
  420ce9:	ja     0x420c97
  420ceb:	push   DWORD PTR [ebx-0x5fd4a27c]
  420cf1:	jge    0x420d19
  420cf3:	mov    al,0x86
  420cf5:	xchg   esi,eax
  420cf6:	(bad)  
  420cf7:	rcr    DWORD PTR [esi],1
  420cf9:	mov    ch,0x1e
  420cfb:	aad    0x73
  420cfd:	jmp    0x420c90
  420cff:	sub    al,BYTE PTR [eax-0x2c540087]
  420d05:	jbe    0x420d49
  420d07:	adc    DWORD PTR [eax+0x18],ecx
  420d0a:	(bad)  
  420d0b:	mov    esi,0xf5b00ebe
  420d10:	push   edi
  420d11:	and    ebx,DWORD PTR [edx+0x20]
  420d14:	sar    bh,cl
  420d16:	push   DWORD PTR [ebx+0x158017d2]
  420d1c:	push   0xebc9022d
  420d21:	sar    bh,0xec
  420d24:	gs js  0x420d99
  420d27:	loope  0x420d2c
  420d29:	aad    0xe7
  420d2b:	outs   dx,DWORD PTR ds:[esi]
  420d2c:	mov    eax,0x65fc25
  420d31:	xlat   BYTE PTR ds:[ebx]
  420d32:	scas   eax,DWORD PTR es:[edi]
  420d33:	and    ch,BYTE PTR [ebp+eiz*2-0x51]
  420d37:	push   ds
  420d38:	(bad)  
  420d39:	aad    0xfe
  420d3b:	out    0x36,eax
  420d3d:	mov    edi,0x5764fc24
  420d42:	scas   eax,DWORD PTR es:[edi]
  420d43:	adc    al,BYTE PTR [ebx-0x28]
  420d46:	int3   
  420d47:	mov    bl,BYTE PTR [eax+eiz*2]
  420d4a:	mov    dl,0xe7
  420d4c:	xchg   ebx,eax
  420d4d:	dec    ecx
  420d4e:	and    eax,0x46d470fc
  420d53:	mov    ch,BYTE PTR [eax+ecx*2]
  420d56:	mov    bl,0xe8
  420d58:	call   0x61543142
  420d5d:	fwait
  420d5e:	sar    bh,0x1e
  420d61:	add    DWORD PTR [ecx+0x3],0xeb77e4e9
  420d68:	push   0xffffff8b
  420d6a:	shl    ebp,cl
  420d6c:	in     al,dx
  420d6d:	mov    bh,0x56
  420d6f:	inc    eax
  420d70:	jmp    0xdccada18
  420d75:	lahf   
  420d76:	scas   al,BYTE PTR es:[edi]
  420d77:	xor    BYTE PTR [ecx-0x80],al
  420d7a:	imul   edi,ebp,0x0
  420d7d:	shl    BYTE PTR [ecx+0x7fa774bc],cl
  420d83:	bnd je 0x420d11
  420d86:	jns    0x420dc2
  420d88:	xor    BYTE PTR [eax],ch
  420d8a:	sbb    eax,0x6654687
  420d8f:	cli    
  420d90:	inc    BYTE PTR [edx+0xc081d6]
  420d96:	stc    
  420d97:	adc    BYTE PTR [edx+0x30],ch
  420d9a:	or     ebp,DWORD PTR [ecx+0x62cd049]
  420da0:	xchg   ebp,eax
  420da1:	stos   BYTE PTR es:[edi],al
  420da2:	inc    ebx
  420da3:	fadd   DWORD PTR [ebp+0x41a8a545]
  420da9:	ror    BYTE PTR ds:0x3255fe03,1
  420daf:	repnz repz adc al,0x6d
  420db3:	cld    
  420db4:	pop    ebp
  420db5:	leave  
  420db6:	out    dx,eax
  420db7:	add    BYTE PTR [eax],al
  420db9:	push   ebp
  420dba:	jbe    0x420dc4
  420dbc:	sub    ah,0xd
  420dbf:	lock add DWORD PTR [eax],esp
  420dc2:	adc    DWORD PTR [esp+edi*8],edi
  420dc5:	add    ebx,DWORD PTR [ebx-0x56f78e5d]
  420dcb:	sub    esp,esp
  420dcd:	out    0x75,eax
  420dcf:	(bad)  
  420dd0:	sti    
  420dd1:	test   BYTE PTR ds:0xfb852671,ch
  420dd7:	jo     0x420dfb
  420dd9:	and    ebx,0x2d
  420ddc:	jno    0x420dff
  420dde:	inc    esi
  420ddf:	ds add al,0xe8
  420de2:	data16 (bad) 
  420de4:	sti    
  420de5:	jmp    FWORD PTR [eax]
  420de7:	mov    esp,0x2c971570
  420dec:	push   edx
  420ded:	(bad)  
  420dee:	loopne 0x420dbd
  420df0:	dec    ebp
  420df1:	call   0x3cd1f1
  420df6:	xchg   esp,eax
  420df7:	mov    al,ds:0x2100d7bc
  420dfc:	pop    esp
  420dfd:	push   eax
  420dfe:	dec    edi
  420dff:	jg     0x420e19
  420e01:	into   
  420e02:	cld    
  420e03:	test   eax,0x94400fef
  420e08:	mov    DWORD PTR [ecx],edi
  420e0a:	rcr    DWORD PTR [eax-0x4f847ce9],0x13
  420e11:	add    dl,BYTE PTR [esi+0xf]
  420e14:	or     bh,dh
  420e16:	mov    ch,0x8c
  420e18:	test   ah,dl
  420e1a:	or     BYTE PTR [ebp+0x1d],0xac
  420e1e:	sbb    edx,DWORD PTR [edi]
  420e20:	add    ch,dh
  420e22:	jb     0x420e05
  420e24:	push   ecx
  420e25:	jmp    0x420dec
  420e27:	(bad)  
  420e28:	push   ds
  420e29:	xor    BYTE PTR [edi-0x6b],0x1d
  420e2d:	lods   eax,DWORD PTR ds:[esi]
  420e2e:	add    bh,BYTE PTR [esi-0x681737eb]
  420e34:	push   es
  420e35:	inc    esp
  420e36:	aas    
  420e37:	or     eax,0xdb051b15
  420e3c:	adc    al,0x1
  420e3e:	add    BYTE PTR [edi+edx*1+0x4e54bff3],dl
  420e45:	in     eax,0x80
  420e47:	std    
  420e48:	sbb    al,0xa4
  420e4a:	xor    eax,0x7df47017
  420e4f:	call   DWORD PTR [ebp+0x52680a29]
  420e55:	xor    esi,0x1711
  420e5b:	dec    eax
  420e5c:	das    
  420e5d:	xor    esi,0x377300
  420e63:	add    BYTE PTR [edx+0x43],al
  420e66:	xor    esi,0x376d
  420e6c:	xor    ecx,DWORD PTR [ebx+0x3f]
  420e6f:	add    DWORD PTR [edi-0x6bfc1900],edx
  420e75:	adc    eax,0xe6dbf42a
  420e7a:	stos   BYTE PTR es:[edi],al
  420e7b:	fistp  WORD PTR [edi-0x34bc8bf1]
  420e81:	sub    edi,DWORD PTR [esp+esi*8+0x43]
  420e85:	mov    edi,0xc87bfb28
  420e8a:	imul   esp,DWORD PTR [edi-0x716fb49],0xf9c0921
  420e94:	adc    eax,0xc4aff01a
  420e99:	shl    DWORD PTR [esi],cl
  420e9b:	test   BYTE PTR [edx+0xe],cl
  420e9e:	xchg   esp,eax
  420e9f:	sahf   
  420ea0:	push   eax
  420ea1:	add    ebp,eax
  420ea3:	add    edx,DWORD PTR [eax+eax*1+0x1a14c712]
  420eaa:	loopne 0x420e5b
  420eac:	jo     0x420e4c
  420eae:	scas   eax,DWORD PTR es:[edi]
  420eaf:	test   BYTE PTR [edx],ah
  420eb1:	push   cs
  420eb2:	fsub   DWORD PTR gs:[edx-0x6bfb9ce7]
  420eb9:	add    BYTE PTR [ebx+0xc],bl
  420ebc:	xchg   ebx,eax
  420ebd:	sbb    DWORD PTR ds:0x44200be4,eax
  420ec3:	loopne 0x420ec5
  420ec5:	sbb    BYTE PTR [ecx],0xf
  420ec8:	in     al,0xfb
  420eca:	pop    ds
  420ecb:	xor    eax,0xea02d908
  420ed0:	add    edx,DWORD PTR [eax+eax*1+0x40a4d692]
  420ed7:	fistp  QWORD PTR [edi-0x6f19f349]
  420edd:	adc    eax,ecx
  420edf:	and    esp,0x3e802d0
  420ee5:	xchg   esp,eax
  420ee6:	add    BYTE PTR [edx-0xbf7af6],dl
  420eec:	and    DWORD PTR [ecx-0x503abc27],0xf0690895
  420ef6:	sbb    al,0xa
  420ef8:	aam    0x94
  420efa:	stos   BYTE PTR es:[edi],al
  420efb:	add    DWORD PTR [ecx+0x293100ae],esi
  420f01:	push   eax
  420f02:	xchg   BYTE PTR [ecx],al
  420f04:	cli    
  420f05:	xlat   BYTE PTR ds:[ebx]
  420f06:	ffreep st(1)
  420f08:	in     eax,dx
  420f09:	xchg   edi,eax
  420f0a:	or     eax,0x3ed29b5
  420f0f:	ret    
  420f10:	jns    0x420f1c
  420f12:	(bad)  
  420f14:	fld    st(5)
  420f16:	rol    dh,1
  420f18:	xchg   DWORD PTR [esi-0x31],ebp
  420f1b:	add    DWORD PTR [edx-0x46774960],ebx
  420f21:	dec    ebx
  420f22:	or     al,0xb5
  420f24:	clc    
  420f25:	mov    ebp,0xbb31f3
  420f2a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420f2b:	ror    dh,cl
  420f2d:	test   al,0xaf
  420f2f:	repz cmp eax,0x1c73e87
  420f35:	pop    ebx
  420f36:	cmp    DWORD PTR [ebp+0x157960c],0x1effedc6
  420f40:	rcr    esi,0x7a
  420f43:	pop    edi
  420f44:	mov    ch,ch
  420f46:	push   esp
  420f47:	outs   dx,DWORD PTR ds:[esi]
  420f48:	sub    DWORD PTR gs:[eax+0x45fac6d1],edx
  420f4f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420f50:	cmp    BYTE PTR [ecx],ah
  420f52:	xchg   esi,eax
  420f53:	xchg   ecx,eax
  420f54:	sub    BYTE PTR [edx],bh
  420f56:	rol    DWORD PTR [edi+0x54e2e577],cl
  420f5c:	pop    ss
  420f5d:	out    0x42,al
  420f5f:	dec    ecx
  420f60:	fidiv  WORD PTR gs:[ecx]
  420f63:	fisttp DWORD PTR [eax+eax*1]
  420f66:	xchg   ebx,eax
  420f67:	adc    esi,edi
  420f69:	data16 (bad) 
  420f6b:	call   0x3000f27
  420f70:	add    BYTE PTR [esi-0x22],ah
  420f73:	jmp    0x276675b6
  420f78:	dec    edx
  420f79:	data16 jbe 0x420fb0
  420f7c:	(bad)  
  420f7d:	jno    0x420f43
  420f7f:	inc    esi
  420f80:	push   edi
  420f81:	mov    cr0,edx
  420f84:	(bad)  
  420f85:	xor    al,ah
  420f87:	jnp    0x420f0e
  420f89:	or     al,0x33
  420f8b:	ret    
  420f8c:	xchg   DWORD PTR [ecx+0x0],eax
  420f8f:	adc    DWORD PTR [ebx],eax
  420f91:	inc    esp
  420f92:	and    al,0x75
  420f94:	sub    esp,edi
  420f96:	dec    ebp
  420f98:	add    DWORD PTR [ebx+0x1d],esi
  420f9b:	and    ah,bh
  420f9d:	jo     0x420fc3
  420f9f:	cmp    DWORD PTR [ecx+0x6d9a5075],ebx
  420fa5:	and    BYTE PTR [edx+ebx*4],cl
  420fa8:	outs   dx,BYTE PTR ds:[esi]
  420fa9:	add    al,ch
  420fab:	adc    bh,BYTE PTR [ebx+edi*8-0x437ef501]
  420fb2:	je     0x420fe5
  420fb4:	xchg   edx,eax
  420fb5:	std    
  420fb6:	jmp    0x225:0xc2bc102f
  420fbd:	push   0x1
  420fbf:	jle    0x420f82
  420fc1:	or     al,0xe8
  420fc3:	dec    edi
  420fc4:	sar    ah,0xff
  420fc7:	jge    0x420fca
  420fc9:	mov    edi,0xfbd18656
  420fce:	jbe    0x420f5d
  420fd0:	cld    
  420fd1:	xor    BYTE PTR [eax+0x44f2e43b],ch
  420fd7:	rcr    DWORD PTR [ecx],1
  420fd9:	std    
  420fda:	(bad)  
  420fdb:	xrelease xchg DWORD PTR gs:[eax-0x6c],eax
  420fe0:	daa    
  420fe1:	lods   al,BYTE PTR ds:[esi]
  420fe2:	add    eax,0xa7e07f62
  420fe7:	ret    0x7686
  420fea:	lds    ebx,FWORD PTR [edx+0x69]
  420fed:	(bad)  
  420fee:	dec    DWORD PTR [ecx-0x5e]
  420ff1:	pop    ss
  420ff2:	add    BYTE PTR [eax],0xb0
  420ff5:	pop    DWORD PTR [eax+0x1290eb]
  420ffb:	add    BYTE PTR [edi+0x55],al
  420ffe:	out    dx,eax
  420fff:	mov    edi,0x7b7567eb
  421004:	mov    al,0xf7
  421006:	jbe    0x420fde
  421008:	ins    BYTE PTR es:[edi],dx
  421009:	lea    esi,[ebp+0x401a7bff]
  42100f:	(bad)  
  421010:	fmul   DWORD PTR [ebx]
  421012:	hlt    
  421013:	out    dx,eax
  421014:	sbb    eax,0x18870067
  421019:	dec    ebx
  42101a:	cmp    bh,0x5b
  42101d:	daa    
  42101e:	jns    0x420fa3
  421020:	js     0x420fcd
  421022:	add    eax,DWORD PTR [eax]
  421024:	xchg   esp,eax
  421025:	mov    al,ds:0x270c237f
  42102a:	add    BYTE PTR [eax],al
  42102c:	push   ebx
  42102d:	mov    ds:0x27948bdf,eax
  421032:	add    BYTE PTR [eax],al
  421034:	xchg   ebp,eax
  421035:	daa    
  421036:	add    BYTE PTR [ecx-0x188e831],cl
  42103c:	or     BYTE PTR [edx-0x24deab05],ah
  421042:	fistp  WORD PTR [ebx]
  421044:	data16 mov ds:0xf95603cf,al
  42104a:	cmp    eax,0x22b043
  42104f:	std    
  421050:	test   BYTE PTR [ebx-0x12eff3c0],ch
  421056:	add    DWORD PTR [eax],eax
  421058:	add    BYTE PTR [eax+eax*1-0x348408c],dl
  42105f:	ss call 0xe447:0x24e7a6d3
  421067:	ret    0x7a1b
  42106a:	and    esi,esp
  42106c:	add    edx,DWORD PTR [ebx]
  42106e:	(bad)
  421072:	(bad)  
  421073:	retf   0x1d0b
  421076:	or     BYTE PTR [edx-0x46],ah
  421079:	jg     0x421002
  42107b:	mov    cl,0xf7
  42107d:	cwde   
  42107e:	iret   
  42107f:	jno    0x4210b4
  421081:	jnp    0x421007
  421083:	lea    esp,ds:0x823eb388
  421089:	cmp    BYTE PTR [ebx],bl
  42108b:	inc    ebp
  42108c:	cmp    bh,0xe4
  42108f:	(bad)  
  421090:	add    esp,DWORD PTR [ecx-0x6bfe577c]
  421096:	add    BYTE PTR [edi-0x1c],ah
  421099:	arpl   WORD PTR [ebp+0x58b7dfa2],cx
  42109f:	inc    esp
  4210a0:	add    edx,DWORD PTR [eax+eax*1+0x28d4029c]
  4210a7:	test   BYTE PTR ds:0x67731c40,ah
  4210ad:	ja     0x4210ef
  4210af:	out    0x3,al
  4210b1:	xchg   esp,eax
  4210b2:	pop    eax
  4210b3:	dec    ebx
  4210b4:	add    edx,DWORD PTR [eax+eax*1+0x1c21cdff]
  4210bb:	in     eax,0x91
  4210bd:	add    bh,ah
  4210bf:	in     al,0x10
  4210c1:	add    eax,0x13bf0094
  4210c6:	call   FWORD PTR [ebx]
  4210c8:	int    0x23
  4210ca:	jae    0x421068
  4210cc:	jae    0x421096
  4210ce:	mov    bh,0xe8
  4210d0:	mov    ebp,0xfff4b798
  4210d5:	sbb    BYTE PTR [ebx],bl
  4210d7:	inc    ebp
  4210d8:	dec    edi
  4210d9:	pop    esp
  4210da:	int3   
  4210db:	fild   QWORD PTR [edi]
  4210dd:	cmp    DWORD PTR ds:0x7d123c0,eax
  4210e3:	and    al,0xdc
  4210e5:	mov    DWORD PTR [esi+0x1c],esi
  4210e8:	and    BYTE PTR [ebp-0x9408140],0x3c
  4210ef:	inc    ecx
  4210f0:	mov    dh,0x8f
  4210f2:	cdq    
  4210f3:	add    BYTE PTR [eax],al
  4210f5:	bound  ebx,QWORD PTR [esi+0x45]
  4210f8:	(bad)  
  4210f9:	call   0x60b4d3d5
  4210fe:	or     ecx,DWORD PTR [edi-0x71359af9]
  421104:	inc    ebx
  421105:	push   esi
  421106:	sub    eax,0x7ba5890b
  42110b:	fild   QWORD PTR [eax]
  42110d:	lods   eax,DWORD PTR ds:[esi]
  42110e:	jae    0x421103
  421110:	cld    
  421111:	mov    ah,0xa3
  421113:	mov    DWORD PTR [ebx+0xd],edx
  421116:	xchg   esp,eax
  421117:	mov    ebp,ecx
  421119:	inc    ecx
  42111a:	cli    
  42111b:	mov    edi,0x5b0c26fc
  421120:	jae    0x421121
  421122:	add    BYTE PTR [esi-0x72],dh
  421125:	punpckldq mm3,DWORD PTR [edi+ebx*8+0x13]
  42112a:	push   cs
  42112b:	sbb    eax,0x339d8907
  421130:	fisttp WORD PTR [eax+0x4382802f]
  421136:	div    BYTE PTR [esi+0x7f]
  421139:	mov    edi,0x43428c75
  42113e:	or     eax,0x55fd1b87
  421143:	cld    
  421144:	out    dx,al
  421145:	out    0xaf,eax
  421147:	jge    0x421166
  421149:	cld    
  42114a:	into   
  42114b:	sub    ebx,edi
  42114d:	sbb    eax,DWORD PTR [eax]
  42114f:	in     eax,0x9f
  421151:	mov    ds:0x787f32fe,al
  421156:	and    al,0xf2
  421158:	dec    BYTE PTR [edx]
  42115a:	test   BYTE PTR [ebx+0x4000005],dh
  421160:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421161:	cld    
  421162:	(bad)  
  421163:	mov    ebp,0x492480f8
  421168:	(bad)  
  421169:	(bad)  
  42116a:	jmp    FWORD PTR [edx+esi*2+0x2351830a]
  421171:	xchg   esp,eax
  421172:	add    BYTE PTR [ebp+0x380efffe],bh
  421178:	fs std 
  42117a:	jmp    FWORD PTR [ebp+0x192480f8]
  421180:	(bad)  
  421181:	(bad)  
  421182:	call   FWORD PTR [ebp+0x830a78]
  421188:	and    DWORD PTR [edx],esp
  42118a:	test   al,0x0
  42118c:	ins    DWORD PTR es:[edi],dx
  42118d:	(bad)  
  42118e:	dec    DWORD PTR [esi]
  421190:	call   0x7e420ee1
  421195:	lahf   
  421196:	cld    
  421197:	pop    es
  421198:	jge    0x421198
  42119a:	out    0x47,al
  42119c:	mov    dl,0x71
  42119e:	and    BYTE PTR [eax],dl
  4211a0:	loopne 0x421123
  4211a2:	and    BYTE PTR [esi+edi*1],bl
  4211a5:	(bad)  
  4211a6:	dec    DWORD PTR [edi-0x50]
  4211a9:	inc    ecx
  4211aa:	and    BYTE PTR [eax-0x3],ch
  4211ad:	jo     0x4211ef
  4211af:	and    al,0x1
  4211b1:	out    0x73,al
  4211b3:	scas   al,BYTE PTR es:[edi]
  4211b4:	cmp    eax,0x594436fe
  4211b9:	push   cs
  4211ba:	or     eax,DWORD PTR [ebp+0x553]
  4211c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4211c1:	dec    eax
  4211c2:	and    BYTE PTR [edi-0x67],dl
  4211c5:	pop    edi
  4211c6:	jo     0x4211d0
  4211c8:	xchg   esp,eax
  4211c9:	repz cli 
  4211cb:	or     al,0x19
  4211cd:	cmp    al,BYTE PTR [ecx]
  4211cf:	add    BYTE PTR [ebx+eax*1+0x60180cfb],dl
  4211d6:	add    eax,DWORD PTR [eax]
  4211d8:	xchg   esp,eax
  4211d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4211da:	lahf   
  4211db:	and    eax,DWORD PTR [edi+eiz*1+0x27df840f]
  4211e2:	add    BYTE PTR [eax],al
  4211e4:	pop    ds
  4211e5:	and    dh,BYTE PTR [edi-0x3b3e776]
  4211eb:	add    BYTE PTR [eax],al
  4211ed:	xchg   esp,eax
  4211ee:	daa    
  4211ef:	mov    cl,0x88
  4211f1:	retf   0xb382
  4211f4:	add    ebx,DWORD PTR ds:0x110fe7e4
  4211fa:	push   0x34a39e98
  4211ff:	hlt    
  421200:	adc    eax,0x30dd2754
  421205:	mov    ebx,0x110d0027
  42120a:	aad    0x3
  42120c:	add    BYTE PTR [edx+ecx*8-0x54f6f46c],dl
  421213:	out    0x97,eax
  421215:	xchg   esp,eax
  421216:	daa    
  421217:	add    BYTE PTR [eax+0x1f],dl
  42121a:	ins    BYTE PTR es:[edi],dx
  42121b:	lock imul esi,DWORD PTR [ebp+0x5b43c4bf],0xa3bf84e2
  421226:	mov    ds:0xf24bfcdf,eax
  42122b:	sar    BYTE PTR [edi+0x381636d4],cl
  421231:	push   edx
  421232:	adc    al,BYTE PTR [ebp+0x2794a7]
  421238:	mov    eax,ebp
  42123a:	dec    edx
  42123b:	cmp    bh,0x23
  42123e:	daa    
  42123f:	mov    eax,DWORD PTR [ebx+0x36b0070]
  421245:	xchg   esp,eax
  421246:	add    BYTE PTR [ecx+0x3],dl
  421249:	bound  eax,QWORD PTR [ebp-0x1bb8755b]
  42124f:	pop    esi
  421250:	add    eax,DWORD PTR [eax]
  421252:	xchg   esp,eax
  421253:	add    BYTE PTR [eax+0x57],dh
  421256:	mov    bh,0x8c
  421258:	out    0x3,al
  42125a:	xchg   esp,eax
  42125b:	xchg   DWORD PTR [edx-0x19],edi
  42125e:	adc    eax,DWORD PTR [eax]
  421260:	out    0x3,eax
  421262:	in     al,dx
  421263:	test   al,0x89
  421265:	add    edx,DWORD PTR [ebp+eax*4-0x6c3e796a]
  42126c:	add    eax,0x2185998d
  421271:	adc    BYTE PTR [ebp-0x38],bh
  421274:	loop   0x42120c
  421276:	cmp    al,0x85
  421278:	xor    esp,esi
  42127a:	sbb    al,0xff
  42127c:	sbb    al,0x21
  42127e:	push   ebx
  42127f:	add    al,0x6e
  421281:	fst    DWORD PTR [ebx]
  421283:	les    ecx,FWORD PTR [edx]
  421285:	cmc    
  421286:	jnp    0x421214
  421288:	and    DWORD PTR [ecx],0xffffff88
  42128b:	scas   eax,DWORD PTR es:[edi]
  42128c:	xchg   BYTE PTR ds:[esi],dh
  42128f:	pop    ss
  421290:	dec    ebp
  421291:	cmp    edi,0xffffffdc
  421294:	cmc    
  421295:	add    ebp,eax
  421297:	retf   0xc43d
  42129a:	xchg   edi,eax
  42129b:	xor    BYTE PTR [ecx-0x58726bf5],0x8e
  4212a2:	xlat   BYTE PTR ds:[ebx]
  4212a3:	fsub   QWORD PTR [esi-0x19bee1d5]
  4212a9:	add    edx,DWORD PTR [edi]
  4212ab:	inc    ecx
  4212ac:	in     eax,0x90
  4212ae:	adc    edx,DWORD PTR [esi]
  4212b0:	or     eax,0xb9e72c20
  4212b5:	sbb    DWORD PTR [eax],eax
  4212b7:	leave  
  4212b8:	test   DWORD PTR [edx-0xd72819],ebp
  4212be:	push   cs
  4212bf:	xlat   BYTE PTR ds:[ebx]
  4212c0:	pop    ss
  4212c1:	cld    
  4212c2:	xchg   DWORD PTR [eax],ecx
  4212c4:	int3   
  4212c5:	and    edi,DWORD PTR ds:0xe8ff3f70
  4212cb:	xchg   edi,eax
  4212cc:	sahf   
  4212cd:	sub    BYTE PTR [ecx-0x2941b26d],ah
  4212d3:	mov    eax,0xb86abff8
  4212d8:	add    edi,esp
  4212da:	pop    ss
  4212db:	mov    edx,DWORD PTR [esp+edi*8]
  4212de:	push   ds
  4212df:	mov    al,0xd3
  4212e1:	mov    ds:0xb3147baf,al
  4212e6:	int    0x17
  4212e8:	sbb    ah,bh
  4212ea:	jmp    0x97e4f26e
  4212ef:	mov    ds:0x91595db4,eax
  4212f4:	mov    ecx,0x41d58c88
  4212f9:	or     ebp,ecx
  4212fb:	mov    dl,BYTE PTR [ebx-0x61e91add]
  421301:	add    ebp,ecx
  421303:	jp     0x421298
  421305:	and    esi,ebp
  421307:	fnstcw WORD PTR [ebp+0x1441e807]
  42130d:	jae    0x42131c
  42130f:	mov    BYTE PTR [edi],bl
  421311:	rcr    DWORD PTR [ecx-0x66],0x14
  421315:	sub    DWORD PTR [ecx],0xc
  421318:	(bad)  
  421319:	xor    BYTE PTR [ecx],ch
  42131b:	add    BYTE PTR [edi-0x43],cl
  42131e:	add    edx,edx
  421320:	xlat   BYTE PTR ds:[ebx]
  421321:	or     al,0xd7
  421323:	sub    eax,DWORD PTR [eax+eax*1-0x397b8dad]
  42132a:	push   eax
  42132b:	fimul  DWORD PTR [esi+0x1cf95ace]
  421331:	add    al,0x89
  421333:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421334:	(bad)  
  421335:	jg     0x42134e
  421337:	add    BYTE PTR [esp+edx*2+0xaf58900],ah
  42133e:	mov    al,0x1
  421340:	xchg   esi,eax
  421341:	push   0x52
  421343:	push   edi
  421344:	mov    dh,0x21
  421346:	ins    BYTE PTR es:[edi],dx
  421347:	adc    bh,BYTE PTR [ebp-0x31acb104]
  42134d:	push   ebx
  42134e:	sti    
  42134f:	jne    0x42134e
  421351:	cmc    
  421352:	jno    0x421360
  421354:	mov    esi,0xfdfde564
  421359:	add    bh,bl
  42135b:	xlat   BYTE PTR ds:[ebx]
  42135c:	data16 repz aaa 
  42135f:	rep stos DWORD PTR es:[edi],eax
  421361:	mov    DWORD PTR es:[esi-0x14],eax
  421365:	push   edx
  421366:	in     al,0x8f
  421368:	popa   
  421369:	cmc    
  42136a:	sti    
  42136b:	mov    DWORD PTR [eax-0x20],esi
  42136e:	aaa    
  42136f:	ret    
  421370:	mov    eax,ds:0x83534f16
  421375:	dec    esp
  421376:	sti    
  421377:	jne    0x421346
  421379:	cmc    
  42137a:	jno    0x421388
  42137c:	mov    fs,WORD PTR [ebp+eiz*8-0x3]
  421380:	add    BYTE PTR [ebp-0x192804fe],ch
  421386:	mov    esp,0x78fa0c70
  42138b:	clc    
  42138c:	call   0x3cb198
  421391:	lahf   
  421392:	mov    esp,0x30f616e7
  421397:	clc    
  421398:	mov    eax,DWORD PTR [eax+0xa]
  42139b:	mov    BYTE PTR [esp+ebp*2],bl
  42139e:	test   DWORD PTR [ebx+ecx*4],eax
  4213a1:	cmp    BYTE PTR [edx],dl
  4213a3:	test   DWORD PTR [eax+0x71],ecx
  4213a6:	test   DWORD PTR [eax+ecx*1-0x13],ebp
  4213aa:	cld    
  4213ab:	pop    edx
  4213ac:	pop    esi
  4213ad:	push   esi
  4213ae:	lds    edi,FWORD PTR [esi-0x76d86bf4]
  4213b4:	dec    ebx
  4213b5:	jo     0x4213d6
  4213b7:	sub    BYTE PTR [ebx-0x7fe201b1],ch
  4213bd:	sub    al,0x17
  4213bf:	xchg   esp,eax
  4213c0:	add    esp,DWORD PTR [esi-0x19]
  4213c3:	sub    DWORD PTR ds:0x239526c4,ecx
  4213c9:	mov    al,ds:0x9823971e
  4213ce:	das    
  4213cf:	mov    ch,0xfc
  4213d1:	add    ebp,DWORD PTR [edi]
  4213d3:	inc    ecx
  4213d4:	pop    es
  4213d5:	xchg   esp,eax
  4213d6:	int3   
  4213d7:	xchg   bl,ch
  4213d9:	adc    eax,0x9402032c
  4213de:	daa    
  4213df:	scas   eax,DWORD PTR es:[edi]
  4213e0:	push   ebp
  4213e1:	dec    ebx
  4213e2:	rol    DWORD PTR [ecx],0x68
  4213e5:	add    ah,ah
  4213e7:	xchg   ebp,eax
  4213e8:	outs   dx,BYTE PTR ds:[esi]
  4213e9:	test   BYTE PTR [edi],bl
  4213eb:	pusha  
  4213ec:	sub    esp,DWORD PTR [edx+0x301a7605]
  4213f2:	fbld   TBYTE PTR [eax+0x6a7f07c2]
  4213f8:	or     al,BYTE PTR [edx+ebx*4+0x19000028]
  4213ff:	int    0x3
  421401:	(bad)  
  421402:	mov    ds:0xaddd2b8e,eax
  421407:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421408:	sbb    cl,BYTE PTR [eax+0x4a7ecdd9]
  42140e:	mov    BYTE PTR [esi-0x586bfff4],dh
  421414:	add    edx,DWORD PTR [eax-0x39]
  421417:	out    0xdb,eax
  421419:	pop    edx
  42141a:	pushf  
  42141b:	push   cs
  42141c:	jne    0x4213dd
  42141e:	pop    ss
  42141f:	out    0xfe,eax
  421421:	dec    edi
  421422:	out    dx,al
  421423:	sub    BYTE PTR [eax+0x40275bff],ch
  421429:	mov    bl,bl
  42142b:	add    bh,dh
  42142d:	mov    bl,0x1e
  42142f:	mov    ebx,0x9312c1a
  421434:	push   ss
  421435:	sbb    eax,0x87dd4017
  42143a:	add    DWORD PTR [eax],eax
  42143c:	out    0x3,eax
  42143e:	pop    ds
  42143f:	mov    ebx,0x8b0eb3fa
  421444:	imul   BYTE PTR [ebx]
  421446:	pop    ebp
  421447:	add    al,0xee
  421449:	sbb    al,0x0
  42144b:	pop    ss
  42144c:	inc    eax
  42144d:	cmc    
  42144e:	xchg   DWORD PTR ds:0xcb03e700,ebp
  421454:	mov    bl,0xda
  421456:	xchg   esp,eax
  421457:	xchg   edx,eax
  421458:	jg     0x4214a5
  42145a:	adc    al,0xf3
  42145c:	adc    al,0xe6
  42145e:	repz gs int 0x19
  421462:	mov    cl,0x44
  421464:	sub    DWORD PTR [ebx],0x20
  421467:	repz xchg edx,ebx
  42146a:	sbb    al,0xd0
  42146c:	jnp    0x421414
  42146e:	xchg   edi,eax
  42146f:	sahf   
  421470:	adc    eax,0xeac02013
  421475:	push   ds
  421476:	bnd jnp 0x421479
  421479:	fs inc ebx
  42147b:	es stc 
  42147d:	jae    0x421445
  42147f:	scas   eax,DWORD PTR es:[edi]
  421480:	daa    
  421481:	imul   ecx,DWORD PTR [eax],0xffffffa1
  421484:	adc    al,0x2f
  421486:	sub    eax,0x8ee6149a
  42148b:	push   ss
  42148c:	add    DWORD PTR [ebp+0x1c],esp
  42148f:	mov    BYTE PTR [ecx-0x72253c02],cl
  421495:	push   eax
  421496:	sub    cl,ch
  421498:	xchg   DWORD PTR [ebx+0x508e701f],esp
  42149e:	sbb    dh,0x14
  4214a1:	cmp    eax,0xffbb7bb3
  4214a6:	mov    ss,WORD PTR [edi+0x2a2a3900]
  4214ac:	repz push eax
  4214ae:	adc    DWORD PTR [eax],eax
  4214b0:	or     dl,BYTE PTR [esp+edi*8]
  4214b3:	jmp    0x23dd3ca
  4214b8:	dec    DWORD PTR [eax]
  4214ba:	std    
  4214bb:	push   cs
  4214bc:	into   
  4214bd:	and    eax,0x8797e8fe
  4214c2:	sub    cl,0x81
  4214c5:	adc    al,0xfc
  4214c7:	popa   
  4214c8:	pop    ds
  4214c9:	aam    0x46
  4214cb:	je     0x42147a
  4214cd:	sub    BYTE PTR [esi],dh
  4214cf:	jo     0x4214a8
  4214d1:	pop    es
  4214d2:	mov    esp,DWORD PTR [esp+ebx*4]
  4214d5:	sbb    edi,DWORD PTR [ecx]
  4214d7:	loop   0x421477
  4214d9:	adc    al,0xb6
  4214db:	mov    edi,0x74000099
  4214e0:	adc    eax,0x7fbefa14
  4214e5:	jnp    0x4214fe
  4214e7:	sub    ecx,ecx
  4214e9:	mov    ?,ecx
  4214eb:	jns    0x421486
  4214ed:	sub    DWORD PTR [eax],ebx
  4214ef:	je     0x4214c6
  4214f1:	pop    ss
  4214f2:	out    0xfc,eax
  4214f4:	xchg   edx,eax
  4214f5:	adc    eax,0x126e50fc
  4214fa:	cld    
  4214fb:	jmp    0x8741941c
  421500:	(bad)  
  421501:	adc    al,0x87
  421503:	loope  0x4214dc
  421505:	mov    edx,0x53c27372
  42150a:	pop    esp
  42150b:	rcpps  xmm7,XMMWORD PTR [edx]
  42150e:	shr    ebp,0x97
  421511:	scas   eax,DWORD PTR es:[edi]
  421512:	mov    BYTE PTR [ebp+0x0],cl
  421515:	sbb    DWORD PTR [edi],esp
  421517:	repz call 0x1a9315b4
  42151d:	mov    bl,0xad
  42151f:	add    BYTE PTR ss:[edx],dh
  421522:	sti    
  421523:	jae    0x42157e
  421525:	xchg   ebp,eax
  421526:	pop    ecx
  421527:	add    al,0x75
  421529:	pop    edx
  42152a:	mov    BYTE PTR [ecx-0x4087cf0],dh
  421530:	call   0x3df9ea
  421535:	xor    al,0x58
  421537:	(bad)  
  421538:	ja     0x421562
  42153a:	xor    al,0x59
  42153c:	(bad)  
  42153d:	or     ecx,DWORD PTR [edi+eax*4]
  421540:	pop    edi
  421541:	and    DWORD PTR [eax+0x4efdd641],ecx
  421547:	dec    esp
  421548:	push   eax
  421549:	xchg   ebp,eax
  42154a:	sbb    BYTE PTR [edx],cl
  42154c:	inc    DWORD PTR [edx]
  42154e:	sub    dl,bh
  421550:	mov    ecx,0xfffffbe3
  421555:	jo     0x4214d7
  421557:	or     al,0xfe
  421559:	loop   0x421550
  42155b:	test   BYTE PTR [eax],bl
  42155d:	mov    ebp,0x66fa7145
  421562:	outs   dx,BYTE PTR ds:[esi]
  421563:	or     BYTE PTR [ebx],bh
  421565:	push   ds
  421566:	add    DWORD PTR [ecx],0xffffffe8
  421569:	mov    bh,ah
  42156b:	(bad)  
  42156c:	push   DWORD PTR [esi+edx*2]
  42156f:	or     BYTE PTR [eax],bh
  421571:	push   eax
  421572:	add    al,0x74
  421574:	or     DWORD PTR [eax],esi
  421576:	ds or  al,0x50
  421579:	add    BYTE PTR ds:0x22ff0a87,dl
  42157f:	add    BYTE PTR [ebx+0x8],0xd6
  421583:	mov    ecx,0xe47d0970
  421588:	int3   
  421589:	shr    DWORD PTR [ebp+0x755f84fe],cl
  42158f:	pop    eax
  421590:	push   edi
  421591:	leave  
  421592:	mov    edi,0x7b8afc11
  421597:	jnp    0x42158d
  421599:	call   DWORD PTR [ebx+esi*1+0x2c54830d]
  4215a0:	add    DWORD PTR [eax+0x6b],edx
  4215a3:	xor    eax,0x27d411e4
  4215a8:	(bad)  
  4215a9:	lds    ebp,FWORD PTR [ecx+eax*2+0xa]
  4215ad:	std    
  4215ae:	push   ebx
  4215af:	push   0x28
  4215b1:	outs   dx,DWORD PTR ds:[esi]
  4215b2:	neg    cl
  4215b4:	sbb    DWORD PTR [eax-0x775018a6],ecx
  4215ba:	sub    BYTE PTR [edi-0x596bf85f],ah
  4215c0:	mov    eax,ds:0x24a8940b
  4215c5:	pop    ss
  4215c6:	xchg   esi,eax
  4215c7:	daa    
  4215c8:	add    BYTE PTR [ecx-0x3e],dl
  4215cb:	pushf  
  4215cc:	dec    edi
  4215cd:	jmp    0x8a5838e3
  4215d2:	imul   edx,DWORD PTR [edi],0x28
  4215d5:	adc    eax,0x21632ec
  4215da:	inc    esi
  4215db:	sub    DWORD PTR [eax],eax
  4215dd:	add    BYTE PTR [eax],al
  4215df:	jle    0x4215ec
  4215e1:	mov    al,0x69
  4215e3:	xchg   esp,eax
  4215e4:	mov    WORD PTR [edi+edx*8-0x18e9afe9],cs
  4215eb:	pop    edx
  4215ec:	imul   ebx,DWORD PTR [ecx],0xfffffffc
  4215ef:	sbb    DWORD PTR [eax-0x67],ebp
  4215f2:	adc    al,0x1f
  4215f4:	bound  esi,QWORD PTR [ebx-0x3d3df399]
  4215fa:	jmp    DWORD PTR [esi+0x7f]
  4215fd:	outs   dx,BYTE PTR ds:[esi]
  4215fe:	cdq    
  4215ff:	xchg   esp,eax
  421600:	daa    
  421601:	jge    0x4215c2
  421603:	fwait
  421604:	mov    ah,0x43
  421606:	adc    esp,0xc
  421609:	std    
  42160a:	xor    ah,dl
  42160c:	add    DWORD PTR [ecx+0x914d00],ecx
  421612:	add    BYTE PTR [eax+eax*1+0x136d7f74],dl
  421619:	pop    ebp
  42161a:	sbb    DWORD PTR [ecx+0x0],edx
  42161d:	out    0xc3,eax
  42161f:	fimul  DWORD PTR [ebx+0x391cba4f]
  421625:	mov    eax,ds:0x71ab544a
  42162a:	sub    BYTE PTR [esp+ebx*1],dl
  42162d:	cmp    DWORD PTR cs:[edi],0x0
  421631:	jmp    0xabc7aa39
  421636:	or     eax,DWORD PTR [ebp+0x12b0b447]
  42163c:	(bad)  
  42163d:	retf   0x6d07
  421640:	aas    
  421641:	xchg   edx,eax
  421642:	add    eax,0x98081300
  421647:	mov    WORD PTR [eax+ebp*1+0x52],ss
  42164b:	pop    ss
  42164c:	sbb    BYTE PTR [ecx],dl
  42164e:	push   0x44
  421650:	mov    al,ds:0x94044d7c
  421655:	add    BYTE PTR [edi+ecx*4-0x49],dh
  421659:	clc    
  42165a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42165b:	mov    edi,0x2be6f0b7
  421660:	and    DWORD PTR [ecx],ebx
  421662:	int    0x18
  421664:	sbb    al,0x8d
  421666:	repnz sub esp,DWORD PTR [ebx+ebx*2]
  42166a:	out    0x3,al
  42166c:	adc    BYTE PTR [eax+0x3a],al
  42166f:	lahf   
  421670:	sbb    al,0x95
  421672:	fiadd  DWORD PTR [esi+0x34edc17]
  421678:	xchg   esp,eax
  421679:	add    BYTE PTR [edi],dh
  42167b:	xchg   DWORD PTR [edi-0x24],edx
  42167e:	div    BYTE PTR [ebx+0x34500bb]
  421684:	xchg   esp,eax
  421685:	jl     0x42162d
  421687:	(bad)  
  421688:	dec    edi
  421689:	test   edx,esi
  42168b:	fisttp WORD PTR [edi+0x73f4ff83]
  421691:	hlt    
  421692:	xchg   ch,dh
  421694:	imul   esi,esp,0xffffffe7
  421697:	lds    edi,FWORD PTR [ebx]
  421699:	adc    ah,bh
  42169b:	xlat   BYTE PTR gs:[ebx]
  42169d:	xchg   edx,eax
  42169e:	pop    ss
  42169f:	ins    BYTE PTR es:[edi],dx
  4216a0:	test   DWORD PTR [ebx+0x28454e0a],edx
  4216a6:	jl     0x421630
  4216a8:	add    BYTE PTR [ebp+0xc],bh
  4216ab:	push   ebp
  4216ac:	push   ecx
  4216ad:	(bad)  
  4216ae:	outs   dx,BYTE PTR ds:[esi]
  4216af:	std    
  4216b0:	sbb    BYTE PTR ss:[ebx+eiz*1+0x231997dd],ah
  4216b8:	jb     0x4216bc
  4216ba:	or     BYTE PTR [ebx-0x76f7f4d7],al
  4216c0:	mov    ds:0xc146799b,al
  4216c5:	push   ds
  4216c6:	or     BYTE PTR [ecx+0x47799baa],cl
  4216cc:	icebp  
  4216cd:	push   cs
  4216ce:	stc    
  4216cf:	mov    BYTE PTR [ecx-0x1abf7865],ch
  4216d5:	mov    eax,0xf42dc602
  4216da:	(bad)  
  4216db:	(bad)  
  4216dc:	frstor [esp+eiz*8]
  4216df:	punpckldq mm1,DWORD PTR [edi-0x7c30cfd9]
  4216e6:	or     al,0xb6
  4216e8:	xlat   BYTE PTR ds:[ebx]
  4216e9:	cdq    
  4216ea:	add    BYTE PTR [eax],al
  4216ec:	ins    BYTE PTR es:[edi],dx
  4216ed:	aam    0xe3
  4216ef:	pop    ss
  4216f0:	scas   eax,DWORD PTR es:[edi]
  4216f1:	cwde   
  4216f2:	add    BYTE PTR [eax+0x20],al
  4216f5:	and    eax,0xb42d8817
  4216fa:	sti    
  4216fb:	pop    esp
  4216fc:	aas    
  4216fd:	mov    db3,edx
  421700:	stos   DWORD PTR es:[edi],eax
  421701:	xchg   esp,eax
  421702:	add    BYTE PTR [ebx+0x62],dl
  421705:	jl     0x421687
  421707:	jecxz  0x421709
  421709:	adc    eax,0x3ce884
  42170e:	jle    0x42176e
  421710:	push   ebx
  421711:	call   0x3e5507
  421716:	lods   eax,DWORD PTR ds:[esi]
  421717:	fdiv   QWORD PTR [edi-0x22]
  42171a:	ins    DWORD PTR es:[edi],dx
  42171b:	add    eax,DWORD PTR [edi+0xbcbf0d8]
  421721:	test   BYTE PTR [ebp-0x37fffffb],bl
  421727:	push   0x48e41020
  42172c:	and    BYTE PTR [eax],dl
  42172e:	(bad)
  421731:	add    BYTE PTR ds:0xb10fbc8f,bh
  421737:	idiv   ah
  421739:	jmp    FWORD PTR ds:0x51247078
  42173f:	(bad)  [ebx+0x6a033d6c]
  421745:	and    DWORD PTR [esi+0x56a4cce],esi
  42174b:	push   edx
  42174c:	in     al,0x69
  42174e:	ja     0x421754
  421750:	add    BYTE PTR [ebp+edi*4-0x21f7bf9],al
  421757:	add    al,BYTE PTR [eax]
  421759:	mov    esi,DWORD PTR [edx]
  42175b:	push   ebx
  42175c:	in     al,0x1b
  42175e:	dec    ecx
  42175f:	add    al,0x0
  421761:	test   BYTE PTR ds:0xfdd08406,bh
  421767:	add    al,BYTE PTR [eax]
  421769:	lea    esp,[ecx-0x1417efe0]
  42176f:	gs cld 
  421771:	inc    DWORD PTR [eax]
  421773:	push   edi
  421774:	stc    
  421775:	xchg   dh,al
  421777:	lods   eax,DWORD PTR ds:[esi]
  421778:	pop    edx
  421779:	imul   edx,DWORD PTR [ebx+0x25],0xad00d62a
  421780:	mov    ?,WORD PTR [edi+ecx*1-0xb1626c]
  421787:	stos   DWORD PTR es:[edi],eax
  421788:	sbb    BYTE PTR [edi-0x4fd687bd],al
  42178e:	out    0x92,eax
  421790:	or     eax,DWORD PTR [eax]
  421792:	add    BYTE PTR [edi],bl
  421794:	mov    BYTE PTR [edi-0xb],bh
  421797:	add    BYTE PTR [edx],bh
  421799:	adc    eax,0xaa07b873
  42179e:	imul   ebp,ebx,0x4e15284a
  4217a4:	sbb    BYTE PTR [eax],al
  4217a6:	push   esi
  4217a7:	sbb    al,0x64
  4217a9:	fcom   QWORD PTR [eax]
  4217ab:	ins    BYTE PTR es:[edi],dx
  4217ac:	inc    esi
  4217ad:	pusha  
  4217ae:	std    
  4217af:	pop    ebx
  4217b0:	cwde   
  4217b1:	xchg   esp,eax
  4217b2:	and    esp,DWORD PTR [ebx+0x14840517]
  4217b8:	sbb    BYTE PTR [eax],al
  4217ba:	add    BYTE PTR [eiz*2+0x75c00008],dl
  4217c1:	xchg   DWORD PTR [ebx+0x78],eax
  4217c4:	pop    es
  4217c5:	mov    al,0xe7
  4217c7:	mov    al,0x8e
  4217c9:	add    BYTE PTR [eax],al
  4217cb:	invd   
  4217cd:	jl     0x4217c4
  4217cf:	mov    al,ds:0xb873152d
  4217d4:	daa    
  4217d5:	stos   BYTE PTR es:[edi],al
  4217d6:	imul   eax,DWORD PTR [eax],0xdd286a7a
  4217dc:	fst    QWORD PTR [edi]
  4217de:	add    BYTE PTR [esi+0xc],dl
  4217e1:	in     al,0xdf
  4217e3:	adc    ah,bh
  4217e5:	frstor [ebx-0x3]
  4217e8:	jmp    0x421781
  4217ea:	xchg   edi,eax
  4217eb:	and    edx,DWORD PTR [ebx+0x94b8c17]
  4217f1:	int3   
  4217f2:	fist   WORD PTR [ebx]
  4217f4:	mov    esp,0xcbff8c29
  4217f9:	shl    ebx,0x88
  4217fc:	fild   DWORD PTR [eax]
  4217fe:	aaa    
  4217ff:	stos   BYTE PTR es:[edi],al
  421800:	sub    esi,DWORD PTR [ecx+0xca4d8e]
  421806:	out    0x7f,eax
  421808:	jmp    0x42179e
  42180a:	fadd   DWORD PTR [esi-0x4c291ba9]
  421810:	mov    bl,0x37
  421812:	repnz add edx,DWORD PTR [ecx+edi*2-0x6b7e808a]
  42181a:	int3   
  42181b:	adc    al,0x7
  42181d:	in     eax,0xf6
  42181f:	lods   eax,DWORD PTR ds:[esi]
  421820:	in     eax,dx
  421821:	(bad)  
  421822:	mov    ecx,0xe627092b
  421827:	add    eax,edx
  421829:	js     0x4217cd
  42182b:	fild   WORD PTR [eax+ebx*1+0xd597544]
  421832:	cbw    
  421834:	ja     0x421833
  421836:	out    0x8f,al
  421838:	xchg   edi,eax
  421839:	jns    0x421864
  42183b:	sub    DWORD PTR [eax],eax
  42183d:	nop
  42183e:	or     eax,0x6d2f2bd9
  421843:	sbb    al,0x15
  421845:	les    ebx,FWORD PTR [eax]
  421847:	or     al,0x75
  421849:	sub    DWORD PTR ds:0xaec043d9,ecx
  42184f:	mov    eax,ds:0x28ab3688
  421854:	add    BYTE PTR [ebx+esi*4+0x24142861],dl
  42185b:	out    dx,al
  42185c:	sub    bh,0xe3
  42185f:	jmp    0xf3fc:0x5b7f9403
  421866:	or     al,0x86
  421868:	add    eax,DWORD PTR [ebp-0x4a]
  42186b:	xor    eax,0xe7a11505
  421870:	add    edx,DWORD PTR [eax+ebx*1+0xcd3cbfe]
  421877:	call   FWORD PTR [eax]
  421879:	js     0x421867
  42187b:	fucompp 
  42187d:	xchg   edi,eax
  42187e:	ja     0x421857
  421880:	fisub  DWORD PTR [eax+0x33eedcc8]
  421886:	mov    ecx,0x7997e8fe
  42188b:	inc    ebx
  42188c:	lds    esi,FWORD PTR [ebx-0x4bda7944]
  421892:	hlt    
  421893:	out    0x93,eax
  421895:	cmp    eax,0xd76dfc0c
  42189a:	cld    
  42189b:	add    eax,0xffffff96
  42189e:	add    BYTE PTR [eax],al
  4218a0:	je     0x4218a2
  4218a2:	cmp    esp,eax
  4218a4:	ud1    edi,DWORD PTR [edi-0x6816940b]
  4218ab:	jns    0x42189c
  4218ad:	adc    dl,BYTE PTR [ecx+0xb46218f]
  4218b3:	loopne 0x4218c4
  4218b5:	xchg   edi,eax
  4218b6:	std    
  4218b7:	xchg   edi,eax
  4218b8:	push   eax
  4218b9:	inc    ecx
  4218ba:	xchg   esp,eax
  4218bb:	xor    edi,edi
  4218bd:	call   0xcd859cb3
  4218c2:	inc    esp
  4218c3:	and    al,0x68
  4218c5:	jle    0x421850
  4218c7:	or     al,0x7f
  4218c9:	xchg   ebp,eax
  4218ca:	dec    ebx
  4218cb:	std    
  4218cc:	(bad)  
  4218cd:	frstor [ebx-0x681700ec]
  4218d3:	ja     0x421948
  4218d5:	lds    ecx,FWORD PTR [edi]
  4218d7:	and    al,0xa8
  4218d9:	test   BYTE PTR [edi+0xcdc6a00],dl
  4218df:	inc    esi
  4218e0:	dec    edi
  4218e1:	push   ebx
  4218e2:	xor    eax,0xc0c1e7b1
  4218e7:	or     edi,esp
  4218e9:	ins    DWORD PTR es:[edi],dx
  4218ea:	push   eax
  4218eb:	cld    
  4218ec:	xor    DWORD PTR [eax+0x98],0x47
  4218f3:	clc    
  4218f4:	rcl    BYTE PTR [di+0x44],0xfc
  4218f9:	imul   ecx,DWORD PTR [eax+0x25c1e453],0xed840005
  421903:	inc    DWORD PTR [ebx-0x42ff3e]
  421909:	jmp    FWORD PTR [ecx-0x47]
  42190c:	add    BYTE PTR [ecx+0x8],0x5d
  421910:	push   0x72
  421912:	push   ebx
  421913:	add    eax,0x7d00d4ac
  421918:	cmp    DWORD PTR [edi+ecx*1-0x35f07],0x6d
  421920:	cmp    al,0x79
  421922:	sbb    BYTE PTR [ebx+0x9],bl
  421925:	sti    
  421926:	jne    0x4218bd
  421928:	out    dx,eax
  421929:	jno    0x42193f
  42192b:	push   edi
  42192c:	dec    di
  42192e:	call   0x3ef610
  421933:	jmp    0xecc624fc
  421938:	add    al,0x0
  42193a:	add    BYTE PTR [eax+esi*2+0x8],al
  42193e:	je     0x4219a2
  421940:	out    dx,al
  421941:	jno    0x42194f
  421943:	daa    
  421944:	ins    BYTE PTR es:[edi],dx
  421945:	dec    edi
  421946:	call   0x3ef5c0
  42194b:	mov    ecx,0x447d70c4
  421950:	jo     0x42195e
  421952:	je     0x421976
  421954:	out    dx,al
  421955:	jno    0x421967
  421957:	daa    
  421958:	ins    DWORD PTR es:[edi],dx
  421959:	dec    edi
  42195a:	call   0x3ef5f8
  42195f:	jns    0x421925
  421961:	jo     0x4219cc
  421963:	cmp    BYTE PTR [ebx+0x20],0x28
  421967:	cmp    eax,DWORD PTR [ebx+0x20]
  42196a:	lldt   WORD PTR [ecx+ebx*1+0x39e05418]
  421972:	adc    DWORD PTR [ecx-0x6b],ebp
  421975:	mov    cs,WORD PTR [ecx-0x19]
  421978:	dec    ecx
  421979:	aas    
  42197a:	adc    esp,edi
  42197c:	adc    BYTE PTR [ecx-0x6c],bl
  42197f:	das    
  421980:	adc    DWORD PTR [ebp+0x19963fe4],edx
  421986:	add    al,ch
  421988:	sub    DWORD PTR [ebp-0xae003ef],eax
  42198e:	out    0x33,eax
  421990:	adc    DWORD PTR [ebp+0x1996cfe4],esp
  421996:	add    BYTE PTR [eax-0x19],dl
  421999:	outs   dx,DWORD PTR ds:[esi]
  42199a:	dec    esi
  42199b:	sahf   
  42199c:	xchg   esp,eax
  42199d:	pop    ss
  42199e:	js     0x4219e3
  4219a0:	mov    eax,0x95ed4b2a
  4219a5:	pop    ss
  4219a6:	add    BYTE PTR [ecx+0xe25a],cl
  4219ac:	aam    0x60
  4219ae:	xchg   edi,eax
  4219af:	imul   dh
  4219b1:	pop    ss
  4219b2:	jg     0x421a2f
  4219b4:	mov    al,0xf3
  4219b6:	sbb    ebp,DWORD PTR [ebx+0x4f]
  4219b9:	retf   
  4219ba:	adc    esp,edi
  4219bc:	xchg   DWORD PTR [edi-0x24bd6269],edi
  4219c2:	mov    ch,0xe7
  4219c4:	stos   DWORD PTR es:[edi],eax
  4219c5:	or     DWORD PTR [esi],0xe4641efc
  4219cb:	or     al,0x3f
  4219cd:	and    edx,DWORD PTR [ecx]
  4219cf:	xor    BYTE PTR [eax],al
  4219d1:	sub    al,0x76
  4219d3:	outs   dx,BYTE PTR ds:[esi]
  4219d4:	std    
  4219d5:	sbb    esp,DWORD PTR [edi+0x18]
  4219d8:	pop    ebx
  4219d9:	xor    cl,BYTE PTR [edx]
  4219db:	push   cs
  4219dc:	xor    esp,edx
  4219de:	jb     0x42198e
  4219e0:	pop    eax
  4219e1:	syscall 
  4219e3:	mov    al,0xc1
  4219e5:	mov    al,ds:0x1cb6e700
  4219ea:	sbb    eax,0x1d150a71
  4219ef:	cmp    dh,BYTE PTR [ebp+0x7ee79648]
  4219f5:	dec    esi
  4219f6:	pop    esp
  4219f7:	pop    ss
  4219f8:	mov    edx,0xb4bd2584
  4219fd:	jnp    0x421982
  4219ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421a00:	xchg   edi,eax
  421a01:	pop    eax
  421a02:	jne    0x421a27
  421a04:	pop    eax
  421a05:	jle    0x421a07
  421a07:	out    0x63,eax
  421a09:	mov    bl,0x8e
  421a0b:	fcmovne st,st(2)
  421a0d:	dec    esi
  421a0e:	dec    eax
  421a0f:	sbb    ecx,esp
  421a11:	push   ebx
  421a12:	ja     0x421a37
  421a14:	or     al,0xb3
  421a16:	or     DWORD PTR [ebx+0x12],esp
  421a19:	nop
  421a1a:	jne    0x421a9a
  421a1c:	int    0x8c
  421a1e:	xchg   esp,eax
  421a1f:	mov    edi,0x1b7b997c
  421a24:	or     al,0xca
  421a26:	or     ebx,ebx
  421a28:	or     ecx,eax
  421a2a:	mov    dl,0x5d
  421a2c:	mov    ah,0x9f
  421a2e:	and    DWORD PTR [esi],0xffffff97
  421a31:	xchg   edx,eax
  421a32:	or     ebx,edx
  421a34:	or     eax,DWORD PTR [eax]
  421a36:	ror    BYTE PTR [ecx],0xbb
  421a39:	sti    
  421a3a:	in     al,0x96
  421a3c:	call   0x354cc85c
  421a41:	adc    DWORD PTR ds:0x2b1b9528,ecx
  421a47:	imul   esp,DWORD PTR [ecx+edx*1],0xffffffd0
  421a4b:	jbe    0x421a76
  421a4d:	lods   eax,DWORD PTR ds:[esi]
  421a4e:	push   edx
  421a4f:	ds jmp 0x2f84:0xfa75c703
  421a57:	hlt    
  421a58:	imul   esp,DWORD PTR [edi+0x7e9a000f],0x98ffe856
  421a62:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421a63:	mov    ss,WORD PTR [ebx]
  421a65:	pop    esp
  421a66:	rcl    DWORD PTR [eax],cl
  421a68:	dec    edi
  421a69:	je     0x421a45
  421a6b:	add    al,0x4f
  421a6d:	rcl    ecx,1
  421a6f:	xor    bh,ch
  421a71:	(bad)  
  421a72:	sbb    cl,BYTE PTR [ecx+0x73]
  421a75:	in     eax,0xc1
  421a77:	dec    eax
  421a78:	call   0xf8006baf
  421a7d:	adc    dl,bl
  421a7f:	add    al,0x80
  421a81:	dec    esp
  421a82:	je     0x421a8d
  421a84:	add    DWORD PTR [esp+ebx*4+0x9],0xbe7a1cf
  421a8c:	jb     0x421a2b
  421a8e:	sub    bh,BYTE PTR [esi+0x5a8039eb]
  421a94:	test   DWORD PTR [esi-0x7a8df37c],0xe7301100
  421a9e:	arpl   dx,di
  421aa0:	add    eax,0x93b06dfc
  421aa5:	adc    eax,0xfc14226e
  421aaa:	fcom   QWORD PTR [ebx-0x7b068dfc]
  421ab0:	xchg   edx,eax
  421ab1:	or     edx,DWORD PTR [esi+0xa]
  421ab4:	add    al,ch
  421ab6:	xchg   BYTE PTR [edx+0x7f73fc04],cl
  421abc:	add    al,0x72
  421abe:	dec    ebp
  421abf:	scas   eax,DWORD PTR es:[edi]
  421ac0:	(bad)  
  421ac1:	call   0x7e92:0xc079a437
  421ac8:	inc    eax
  421ac9:	push   edx
  421aca:	jb     0x421a5f
  421acc:	sub    bl,0xed
  421acf:	loopne 0x421a7d
  421ad1:	cld    
  421ad2:	pushf  
  421ad3:	pop    ds
  421ad4:	jnp    0x421b50
  421ad6:	adc    eax,0xe72940
  421adb:	push   ds
  421adc:	or     edi,ebx
  421ade:	push   DWORD PTR [ecx-0x3d]
  421ae1:	jo     0x421b08
  421ae3:	or     ch,BYTE PTR [esi-0xc]
  421ae6:	cmp    DWORD PTR [eax],ecx
  421ae8:	or     bl,bh
  421aea:	jne    0x421abd
  421aec:	mov    eax,DWORD PTR [ecx+0x8]
  421aef:	retf   0xc69
  421af2:	cmpxchg BYTE PTR [ecx],bh
  421af5:	or     BYTE PTR [eax+0x57],dl
  421af8:	add    ch,al
  421afa:	fs fdiv st,st(7)
  421afd:	sti    
  421afe:	inc    DWORD PTR [eax]
  421b00:	sub    al,0x86
  421b03:	fcom   st(5)
  421b05:	sub    DWORD PTR [ecx-0x79a81502],ebx
  421b0b:	ret    
  421b0c:	push   esi
  421b0d:	lds    edi,FWORD PTR [esi-0x78b742f4]
  421b13:	in     al,dx
  421b14:	sub    al,0xe0
  421b16:	adc    BYTE PTR [ebp*4+0x6574f03],al
  421b1d:	cmc    
  421b1e:	mov    DWORD PTR [ebp-0x404e7],eax
  421b24:	popf   
  421b25:	repnz add BYTE PTR fs:[ebp+0x3],ch
  421b2a:	das    
  421b2b:	(bad)  
  421b2d:	or     DWORD PTR [ebx+edx*1],edx
  421b30:	cmp    eax,0xc03d4803
  421b35:	cld    
  421b36:	(bad)  
  421b37:	inc    DWORD PTR [edx+0x56]
  421b3a:	mov    DWORD PTR [ebp-0x40e6f],eax
  421b40:	sub    eax,0xb7106452
  421b45:	cmp    al,0xfc
  421b47:	mov    WORD PTR [eax+0x7afff7e0],?
  421b4d:	dec    esp
  421b4e:	sti    
  421b4f:	adc    eax,0x3c0c09
  421b54:	xchg   esp,eax
  421b55:	xchg   esp,eax
  421b56:	inc    ebx
  421b57:	jae    0x421b2e
  421b59:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421b5a:	xchg   bl,dh
  421b5c:	adc    esi,edi
  421b5e:	or     al,0x4f
  421b60:	cld    
  421b61:	ret    
  421b62:	sti    
  421b63:	cld    
  421b64:	add    BYTE PTR [ebx],al
  421b66:	xchg   ebp,eax
  421b67:	inc    ebx
  421b68:	jae    0x421b2f
  421b6a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421b6b:	xchg   bl,dh
  421b6d:	icebp  
  421b6e:	sbb    eax,0xd8fc4f0d
  421b73:	leave  
  421b74:	jmp    ebx
  421b76:	xchg   esp,eax
  421b77:	inc    eax
  421b78:	jae    0x421b2f
  421b7a:	ss xchg edi,eax
  421b7c:	pop    es
  421b7d:	pop    ds
  421b7e:	(bad)  
  421b7f:	pop    es
  421b80:	push   eax
  421b81:	sbb    DWORD PTR [esp+edx*1-0x4fb23c06],ebx
  421b88:	out    0x54,eax
  421b8a:	push   esi
  421b8b:	or     eax,0x7f411efc
  421b90:	and    BYTE PTR [eax+0x44fc0d63],0x81
  421b97:	js     0x421ba0
  421b99:	fwait
  421b9a:	jne    0x421b49
  421b9c:	mov    DWORD PTR [edi-0x1d],edx
  421b9f:	cmp    al,cl
  421ba1:	nop
  421ba2:	pop    ss
  421ba3:	mov    bh,0x88
  421ba5:	jo     0x421b40
  421ba7:	sbb    al,0x23
  421ba9:	xchg   esi,eax
  421baa:	pop    ss
  421bab:	add    BYTE PTR [esi-0x35],dl
  421bae:	scas   eax,DWORD PTR es:[edi]
  421baf:	stc    
  421bb0:	inc    edx
  421bb1:	xchg   esp,eax
  421bb2:	pop    ss
  421bb3:	xchg   esi,eax
  421bb4:	add    BYTE PTR [edi+0x65f4abc9],ah
  421bba:	fwait
  421bbb:	push   ss
  421bbc:	inc    edi
  421bbe:	and    al,0xb6
  421bc0:	jae    0x421b5f
  421bc2:	faddp  st(7),st
  421bc4:	neg    DWORD PTR [edx+0x17]
  421bca:	das    
  421bcb:	sub    BYTE PTR [ebp+0x42],al
  421bce:	sub    al,0x1
  421bd0:	jmp    0x421bd5
  421bd2:	xchg   esp,eax
  421bd3:	add    BYTE PTR [edx],dl
  421bd5:	push   es
  421bd6:	pop    ecx
  421bd7:	mov    esp,0x94010e
  421bdc:	out    0x99,eax
  421bde:	xchg   esp,eax
  421bdf:	jae    0x421b8c
  421be1:	and    eax,0x99e69a5b
  421be6:	xchg   esp,eax
  421be7:	test   al,0xfe
  421be9:	xchg   DWORD PTR [esi+0x0],edx
  421bec:	out    0x99,eax
  421bee:	shr    DWORD PTR [eax+0x1c567b4c],0x6b
  421bf5:	xchg   DWORD PTR [edi+0x4b0dd503],edi
  421bfb:	jns    0x421c20
  421bfd:	or     al,0x9e
  421bff:	add    bh,ah
  421c01:	add    edx,DWORD PTR [eax-0x48389450]
  421c07:	mov    al,0x74
  421c09:	jl     0x421bf4
  421c0b:	shl    esi,0xb5
  421c0e:	cmp    eax,0x68ff8f00
  421c13:	add    bh,ah
  421c15:	js     0x421bc2
  421c17:	jnp    0x421bae
  421c19:	xchg   edi,eax
  421c1a:	xchg   edi,eax
  421c1b:	shl    BYTE PTR [esi+0x2b73c019],cl
  421c21:	adc    al,0xdb
  421c23:	scas   al,BYTE PTR es:[edi]
  421c24:	mov    cs,WORD PTR [edx]
  421c26:	cdq    
  421c27:	add    eax,0x8b3b8875
  421c2c:	xlat   BYTE PTR ds:[ebx]
  421c2d:	cdq    
  421c2e:	add    BYTE PTR [ebx-0x2ec548d],bl
  421c34:	add    BYTE PTR [edi-0x33379f4],dh
  421c3a:	ret    
  421c3b:	pop    ebx
  421c3c:	and    BYTE PTR [edx],0x0
  421c3f:	push   ecx
  421c40:	mov    edi,DWORD PTR [esi]
  421c42:	jg     0x421c1a
  421c44:	adc    BYTE PTR [esi-0x7cf34c],dl
  421c4a:	loopne 0x421beb
  421c4c:	mov    esi,0xa4a12ee2
  421c51:	pop    ebp
  421c52:	xor    dh,dl
  421c54:	add    DWORD PTR [eax],eax
  421c56:	mov    ah,0x9c
  421c58:	sbb    DWORD PTR [esi-0x48],ecx
  421c5b:	loopne 0x421cd4
  421c5d:	mul    BYTE PTR [ebx-0x70]
  421c60:	add    eax,0x7897e8ff
  421c65:	dec    edx
  421c66:	(bad)  
  421c67:	jge    0x421ce6
  421c69:	(bad)  
  421c6a:	out    0x97,eax
  421c6c:	add    BYTE PTR [eax-0x2e7d5e64],cl
  421c72:	pop    ebp
  421c73:	das    
  421c74:	js     0x421cc0
  421c76:	icebp  
  421c77:	mov    esp,0x1a605033
  421c7c:	or     eax,0xaad03486
  421c81:	std    
  421c82:	sub    al,0x99
  421c84:	hlt    
  421c85:	mov    ch,0x34
  421c87:	xchg   ecx,eax
  421c88:	ja     0x421c9d
  421c8a:	out    dx,eax
  421c8b:	xchg   edi,eax
  421c8c:	mov    cl,0xfd
  421c8e:	fimul  WORD PTR [ecx-0x46]
  421c91:	std    
  421c92:	jae    0x421c94
  421c94:	mov    ebx,0x99fd8405
  421c99:	js     0x421cae
  421c9b:	call   0xe74d6738
  421ca0:	nop
  421ca1:	dec    esi
  421ca2:	shr    edx,1
  421ca4:	int    0x78
  421ca6:	push   edx
  421ca7:	adc    DWORD PTR [esi],0x97e9fc23
  421cad:	add    BYTE PTR [edx+0xbce96dd],cl
  421cb3:	and    ebp,eax
  421cb5:	hlt    
  421cb6:	inc    esp
  421cb7:	pop    esi
  421cb8:	and    bh,ah
  421cba:	jb     0x421ceb
  421cbc:	sub    DWORD PTR [ecx+0x7ba09c89],ebp
  421cc2:	xchg   DWORD PTR [eax],eax
  421cc4:	cmp    eax,0xc7ffffff
  421cc9:	inc    edx
  421cca:	cli    
  421ccb:	mov    BYTE PTR [ebp+0x3dfffcfe],dh
  421cd1:	push   ebp
  421cd2:	(bad)
  421cd5:	add    BYTE PTR [ebx-0x75],dl
  421cd8:	je     0x421d0a
  421cda:	lds    eax,FWORD PTR [ebp+0x531d6b82]
  421ce0:	dec    ebx
  421ce1:	mov    esi,ebp
  421ce3:	sub    ecx,DWORD PTR ds:0x86061089
  421ce9:	push   ebx
  421cea:	and    BYTE PTR [eax],dl
  421cec:	aas    
  421ced:	or     al,0x15
  421cef:	inc    ecx
  421cf0:	jne    0x421d01
  421cf2:	aaa    
  421cf3:	dec    esp
  421cf4:	cdq    
  421cf5:	adc    BYTE PTR [ecx+0x2],dh
  421cf8:	add    BYTE PTR [esi-0x3b],bh
  421cfb:	cmp    al,0x4f
  421cfd:	cmp    bh,bl
  421cff:	pop    edx
  421d00:	pop    ebx
  421d01:	cmp    BYTE PTR [edx-0x7c57fffc],0xe8
  421d08:	mov    edi,DWORD PTR [eax+0x4]
  421d0b:	jg     0x421cf9
  421d0d:	mov    cl,0x7a
  421d0f:	jns    0x421d1d
  421d11:	mov    ebp,0xbdd58206
  421d16:	(bad)  
  421d17:	call   DWORD PTR [edx+0x30]
  421d1a:	push   ecx
  421d1b:	hlt    
  421d1c:	push   esi
  421d1d:	(bad)  
  421d1e:	lds    edx,FWORD PTR [ebx-0x75]
  421d21:	and    al,0x62
  421d23:	inc    ebp
  421d25:	mov    eax,0xb08cfcf7
  421d2a:	hlt    
  421d2b:	pop    edx
  421d2c:	add    DWORD PTR [eax+0x5075fc0b],0xffffff85
  421d33:	adc    BYTE PTR [edi],cl
  421d35:	repnz dec ecx
  421d37:	or     dh,bh
  421d39:	cmp    dh,dh
  421d3b:	test   BYTE PTR [ecx],dl
  421d3d:	xchg   esp,eax
  421d3e:	mov    esi,0x1995c604
  421d43:	ret    
  421d44:	dec    ebp
  421d45:	shl    DWORD PTR [ebx-0x3e2e4a08],0x7c
  421d4c:	into   
  421d4d:	push   ebp
  421d4e:	mov    edi,0x310e8a05
  421d53:	jp     0x421d94
  421d55:	xchg   esp,eax
  421d56:	or     cl,BYTE PTR [esi+0x52]
  421d59:	sbb    eax,0x2296
  421d5e:	movntq QWORD PTR [edx-0x22],mm0
  421d62:	cwde   
  421d63:	fcomp  DWORD PTR [ecx]
  421d65:	add    ebx,DWORD PTR [edi-0x637285f8]
  421d6b:	pop    ebx
  421d6d:	call   DWORD PTR [esi]
  421d6f:	rol    BYTE PTR [eax+eax*4],cl
  421d72:	jno    0x421d86
  421d74:	add    ecx,DWORD PTR [eax+0x148e2459]
  421d7a:	xchg   ebx,eax
  421d7b:	imul   esi,DWORD PTR [edi-0x6c8e807],0xffffffbe
  421d82:	mov    dh,0x16
  421d84:	inc    ebx
  421d85:	out    0x92,al
  421d87:	push   cs
  421d88:	cmp    cl,BYTE PTR [ecx+0x3f7a2125]
  421d8e:	xchg   esp,eax
  421d8f:	add    dh,BYTE PTR ds:[edx-0x378668f]
  421d96:	xchg   esi,eax
  421d97:	jecxz  0x421d91
  421d99:	or     al,0xea
  421d9b:	ror    DWORD PTR ds:0x7a29b580,cl
  421da1:	xchg   BYTE PTR [ebp+ebx*4+0x167effc0],ch
  421da8:	push   ebx
  421da9:	cmp    dl,BYTE PTR [eax*1+0x3907fff0]
  421db0:	stc    
  421db1:	mov    ch,0x67
  421db3:	cli    
  421db4:	jp     0x421de5
  421db6:	fwait
  421db7:	add    BYTE PTR [ebp-0x6b0d9970],bl
  421dbd:	xor    eax,0xa11f4a88
  421dc2:	add    BYTE PTR [edx],bl
  421dc4:	xchg   ecx,eax
  421dc5:	call   0xeaf3306b
  421dca:	mov    eax,ds:0x86e4b91a
  421dcf:	sti    
  421dd0:	clc    
  421dd1:	inc    ecx
  421dd2:	hlt    
  421dd3:	sbb    ebp,ecx
  421dd5:	pusha  
  421dd6:	test   al,0x26
  421dd8:	jns    0x421d98
  421dda:	add    al,0xc
  421ddc:	mov    cl,0xe8
  421dde:	jnp    0x421db3
  421de0:	std    
  421de1:	imul   eax,DWORD PTR [ebx-0x69],0xbf78b7d
  421de8:	rep ins DWORD PTR es:[edi],dx
  421dea:	retf   
  421deb:	add    BYTE PTR [edx],al
  421ded:	std    
  421dee:	test   eax,0xc0c1a559
  421df3:	fwait
  421df4:	aaa    
  421df5:	sub    bh,dh
  421df7:	jmp    0x421da5
  421df9:	jno    0x421e13
  421dfb:	adc    al,0x15
  421dfd:	jmp    0x1d03:0x127340b4
  421e04:	mov    esp,0x77e27cde
  421e09:	sub    edx,DWORD PTR [eax]
  421e0b:	jl     0x421e3e
  421e0d:	in     eax,dx
  421e0e:	test   al,ch
  421e10:	add    bh,ah
  421e12:	add    ecx,DWORD PTR [edx-0x33]
  421e15:	mov    ah,0xd5
  421e17:	(bad)
  421e1a:	xchg   ebp,eax
  421e1b:	push   ecx
  421e1c:	into   
  421e1d:	scas   eax,DWORD PTR es:[edi]
  421e1e:	adc    dl,0x8b
  421e21:	rol    DWORD PTR [ebx+0x7de6f50e],1
  421e27:	add    BYTE PTR [esp+ecx*4-0x1ab7b15],bl
  421e2e:	xchg   ecx,eax
  421e2f:	add    edx,ebp
  421e31:	jae    0x421e32
  421e33:	daa    
  421e34:	ret    
  421e35:	lds    ecx,FWORD PTR [esi+esi*8+0x68]
  421e39:	hlt    
  421e3a:	mov    ch,0x28
  421e3c:	loop   0x421eb7
  421e3e:	xor    dh,BYTE PTR [ebx+0x50]
  421e41:	add    ecx,ebp
  421e43:	jmp    0x421eae
  421e45:	cmp    al,BYTE PTR [ebx+0x7ff62420]
  421e4b:	inc    eax
  421e4c:	xor    al,0x76
  421e4e:	sub    bh,BYTE PTR ds:0x6f37be6d
  421e55:	ffreep st(7)
  421e57:	bnd jl 0x421de9
  421e5a:	ret    0x5f6d
  421e5d:	lea    eax,[edi+eiz*4]
  421e60:	lea    edi,[edx]
  421e62:	xchg   DWORD PTR [ebp+0x6a410902],esp
  421e68:	call   0x730b:0x83577bfd
  421e6f:	mov    dl,0x79
  421e71:	mov    dh,0xf7
  421e73:	arpl   WORD PTR [ebx],si
  421e75:	or     cl,BYTE PTR [ecx-0x21be616c]
  421e7b:	jmp    0x421ed4
  421e7d:	sbb    DWORD PTR [ebx],eax
  421e7f:	repz push esi
  421e81:	ja     0x421ecd
  421e83:	ror    DWORD PTR [edi-0x42],cl
  421e86:	sti    
  421e87:	arpl   WORD PTR [esi+0x41],dx
  421e8a:	fsubp  st(7),st
  421e8c:	add    cl,al
  421e8e:	mov    ch,0xf8
  421e90:	test   eax,0xc1bffd71
  421e95:	cdq    
  421e96:	test   cl,0x61
  421e99:	loop   0x421e9d
  421e9b:	mov    bh,BYTE PTR [edi]
  421e9d:	(bad)  
  421e9e:	rol    dh,1
  421ea0:	jno    0x421e7c
  421ea2:	add    eax,0x131dbb82
  421ea7:	xchg   DWORD PTR [esp+eiz*4],edx
  421eaa:	mov    DWORD PTR [eax+eax*1-0x78],eax
  421eae:	or     ah,bh
  421eb0:	inc    ebp
  421eb1:	add    DWORD PTR [ebp+eax*1-0x7b],edi
  421eb5:	xor    al,0x8f
  421eb7:	sti    
  421eb8:	inc    eax
  421eb9:	es ds ja 0x421ea8
  421ebd:	mov    dh,0x29
  421ebf:	or     al,0x82
  421ec1:	push   ds
  421ec2:	or     esp,edi
  421ec4:	dec    DWORD PTR [ebx]
  421ec6:	jge    0x421f06
  421ec8:	hlt    
  421ec9:	xchg   esi,eax
  421eca:	mov    edi,0x3af65f03
  421ecf:	ror    DWORD PTR [eax],0x2d
  421ed2:	mov    dl,0x88
  421ed4:	lock mov bh,0x1
  421ed7:	mov    BYTE PTR [ecx],al
  421ed9:	mov    esi,0x2175fa0d
  421ede:	ja     0x421f1a
  421ee0:	add    DWORD PTR [esi+0x13],eax
  421ee3:	xchg   BYTE PTR [edx-0x56],cl
  421ee6:	jge    0x421ef7
  421ee8:	push   es
  421ee9:	out    dx,eax
  421eea:	mov    bl,0xfc
  421eec:	mov    ch,bl
  421eee:	ret    
  421eef:	inc    edx
  421ef0:	jne    0x421ef2
  421ef2:	add    DWORD PTR [ecx-0x208ec640],ebp
  421ef8:	push   DWORD PTR [ebx-0x36]
  421efb:	mov    al,0xfc
  421efd:	je     0x421e90
  421eff:	cld    
  421f00:	push   ebp
  421f01:	jmp    eax
  421f03:	rcl    DWORD PTR ds:0xbf82bd40,cl
  421f09:	or     al,0x68
  421f0b:	mov    edi,0x90ed85fc
  421f10:	or     DWORD PTR [edx+0x30fcd469],ecx
  421f16:	mov    ecx,0xe37543d3
  421f1b:	inc    edx
  421f1c:	(bad)  
  421f1d:	jmp    DWORD PTR [eax+0x7b]
  421f20:	out    0x51,eax
  421f22:	pop    esi
  421f23:	rol    edx,cl
  421f25:	push   esi
  421f26:	xchg   esp,eax
  421f27:	ds jl  0x421f74
  421f2a:	mov    esp,DWORD PTR [ecx-0x47]
  421f2d:	std    
  421f2e:	cli    
  421f2f:	jo     0x421fad
  421f31:	call   DWORD PTR [ecx+ebp*8+0x336488ff]
  421f38:	add    al,0xff
  421f3a:	imul   ebp,ecx,0x77
  421f3d:	or     eax,0x389dafd5
  421f42:	dec    esi
  421f43:	fisttp DWORD PTR [edx]
  421f45:	mov    BYTE PTR [edx+eiz*2+0x6],al
  421f49:	or     al,0x2
  421f4b:	pushf  
  421f4c:	add    cl,BYTE PTR [eax+0xb79f1e1]
  421f52:	popf   
  421f53:	jae    0x421f3f
  421f55:	add    DWORD PTR [eax],eax
  421f57:	pop    esi
  421f58:	jmp    0x77de1d15
  421f5d:	mov    ecx,0x5050efd
  421f62:	(bad)  
  421f63:	rcr    DWORD PTR [esi],1
  421f65:	jl     0x421f84
  421f67:	sbb    al,0xfd
  421f69:	add    al,0xd
  421f6b:	inc    edx
  421f6c:	pushf  
  421f6d:	add    bh,BYTE PTR [eax]
  421f6f:	push   ecx
  421f70:	cmc    
  421f71:	nop
  421f72:	add    edx,edx
  421f74:	mov    ds:0xa659ff02,eax
  421f79:	nop
  421f7a:	int3   
  421f7b:	dec    ebx
  421f7c:	(bad)  
  421f7d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421f7e:	(bad)  
  421f7f:	(bad)  
  421f80:	lock jmp DWORD PTR [edi-0x6a]
  421f84:	call   0x5d161f88
  421f89:	loopne 0x421f92
  421f8b:	pop    ss
  421f8c:	test   eax,0xdbc34ffb
  421f91:	iret   
  421f92:	adc    eax,0xc37ee954
  421f97:	mov    al,ds:0x33fffbab
  421f9c:	jmp    0x421fa2
  421f9e:	add    BYTE PTR [eax+eax*1+0x50974366],dl
  421fa5:	call   0xbbf0:0x920cb78f
  421fac:	push   ss
  421fad:	sub    DWORD PTR [edx*1-0x68be0a3b],eax
  421fb4:	add    BYTE PTR [esi-0x5],ch
  421fb7:	adc    al,0xe8
  421fb9:	jmp    0x47df204d
  421fbe:	hlt    
  421fbf:	hlt    
  421fc0:	sbb    dh,BYTE PTR [ecx-0x13]
  421fc3:	jl     0x421f90
  421fc5:	or     BYTE PTR [esi],ah
  421fc7:	mov    cl,0x14
  421fc9:	shr    ebp,0xad
  421fcc:	xor    edx,DWORD PTR [eax+0x4a]
  421fcf:	push   es
  421fd0:	inc    eax
  421fd1:	ret    0xfb6e
  421fd4:	adc    al,0xe8
  421fd6:	jmp    0xbd899a6a
  421fdb:	repnz adc al,0xe8
  421fde:	out    0x8f,al
  421fe0:	xchg   esp,eax
  421fe1:	xor    ch,BYTE PTR [ecx]
  421fe3:	inc    edx
  421fe4:	or     al,0xcf
  421fe6:	outs   dx,BYTE PTR ds:[esi]
  421fe7:	cmp    eax,0x613eafb
  421fec:	or     dl,ch
  421fee:	jmp    0x421ff6
  421ff0:	jae    0x421ffa
  421ff2:	outs   dx,BYTE PTR ds:[esi]
  421ff3:	cmp    eax,edi
  421ff5:	jo     0x421fdc
  421ff7:	jp     0x421fd2
  421ff9:	mov    DWORD PTR [ebx],ebx
  421ffb:	sbb    esi,edi
  421ffd:	cld    
  421ffe:	jmp    0x9744:0x6609ec05
  422005:	push   esi
  422006:	outs   dx,BYTE PTR ds:[esi]
  422007:	ss mov ebx,0xc805d557
  42200d:	mov    al,0xe8
  42200f:	inc    eax
  422010:	push   ss
  422011:	idiv   DWORD PTR [ecx+eax*1]
  422014:	test   eax,eax
  422016:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422017:	jns    0x421fb4
  422019:	add    DWORD PTR [eax],0x3c7490c0
  42201f:	and    BYTE PTR [eax],al
  422021:	add    al,0x24
  422023:	dec    ecx
  422024:	sbb    eax,0xf97446a9
  422029:	dec    esi
  42202a:	jb     0x422012
  42202c:	bound  edi,QWORD PTR [edx-0x2a9d3478]
  422032:	in     eax,0x9e
  422034:	xchg   DWORD PTR [ecx+0xdb9e7fc],edx
  42203a:	std    
  42203b:	out    0xeb,al
  42203d:	or     eax,0xdd1655fe
  422042:	enter  0x35e8,0x8c
  422046:	cld    
  422047:	sti    
  422048:	sub    bl,BYTE PTR [ecx-0x7d9df793]
  42204e:	cld    
  42204f:	jo     0x422036
  422051:	mov    esp,0x981a87c4
  422056:	mov    esp,edi
  422058:	ds cdq 
  42205a:	call   0x2128a6c
  42205f:	dec    edi
  422060:	bound  esi,QWORD PTR [edx-0x78]
  422063:	retf   
  422064:	adc    DWORD PTR [ecx-0x72e10408],edx
  42206a:	ret    
  42206b:	mov    edi,0x4214c62
  422070:	(bad)  
  422071:	call   DWORD PTR [edx+0x49]
  422074:	mov    al,0x28
  422076:	mov    al,dh
  422078:	jne    0x42205f
  42207a:	inc    ebp
  42207b:	jne    0x422052
  42207d:	or     eax,0x6b1b2f00
  422082:	inc    ebx
  422083:	(bad)  
  422084:	aas    
  422085:	add    BYTE PTR [ecx-0x6a363e12],cl
  42208b:	out    0xd,eax
  42208d:	inc    ebx
  42208e:	xchg   ebp,eax
  42208f:	das    
  422090:	into   
  422091:	pop    esp
  422092:	add    edi,edi
  422094:	pop    eax
  422095:	add    dl,bh
  422097:	adc    DWORD PTR [edx-0x1c4f4120],edi
  42209d:	xchg   edi,eax
  42209e:	dec    edx
  42209f:	add    edi,esp
  4220a1:	mov    esp,ebp
  4220a3:	jge    0x4220a1
  4220a5:	je     0x42203d
  4220a7:	ja     0x4220e8
  4220a9:	and    al,0x81
  4220ab:	sbb    BYTE PTR [edi-0x1],bl
  4220ae:	and    al,BYTE PTR ds:0xf2a9c07e
  4220b4:	mov    BYTE PTR [ecx+ecx*2-0x10],cl
  4220b8:	jle    0x422083
  4220ba:	imul   eax,DWORD PTR [edx],0x3cf60183
  4220c0:	call   0x8b5eaacd
  4220c5:	xchg   edi,eax
  4220c6:	repz add al,0x30
  4220c9:	rcl    BYTE PTR [edx],0xa6
  4220cc:	ror    DWORD PTR [eax],0x3d
  4220cf:	scas   al,BYTE PTR es:[edi]
  4220d0:	mov    cl,dh
  4220d2:	mov    dh,0xf7
  4220d4:	sub    cl,0x2d
  4220d7:	mov    WORD PTR [eax],gs
  4220d9:	dec    ecx
  4220da:	jmp    0x3f2ba1c9
  4220df:	mov    edi,?
  4220e1:	xor    DWORD PTR [ebp-0x5b],ebp
  4220e4:	rcl    BYTE PTR [edi-0x25],0x78
  4220e8:	stc    
  4220e9:	call   0xfc4822ee
  4220ee:	inc    DWORD PTR [edx+0x19]
  4220f1:	sbb    eax,0x88f81dff
  4220f6:	retf   0x8f92
  4220f9:	dec    DWORD PTR [edx-0x172a8745]
  4220ff:	fwait
  422100:	or     ah,bh
  422102:	call   DWORD PTR [esi-0x163f7f08]
  422108:	pop    ecx
  422109:	or     esi,0xffffffe5
  42210c:	pop    ebx
  42210d:	repz call DWORD PTR [edx+edx*8-0x599dfe4c]
  422115:	push   esi
  422116:	push   ebx
  422117:	cmovbe ebp,DWORD PTR [eax]
  42211a:	or     al,0x1f
  42211c:	mov    ecx,0xed21fb89
  422121:	xor    al,al
  422123:	scas   eax,DWORD PTR es:[edi]
  422124:	sbb    al,0x8b
  422126:	or     BYTE PTR [edi],dl
  422128:	xchg   ecx,eax
  422129:	add    al,0x74
  42212b:	retf   
  42212c:	xor    BYTE PTR [eax+0x1f],bh
  42212f:	fstp   QWORD PTR ds:0xdf084912
  422135:	dec    esp
  422136:	jne    0x4221a5
  422138:	pop    ss
  422139:	in     al,dx
  42213a:	shl    DWORD PTR [ecx+0x7a],0xff
  42213e:	out    0xa4,eax
  422140:	inc    DWORD PTR [ebx]
  422142:	out    0x96,eax
  422144:	inc    DWORD PTR [edx+edx*2]
  422147:	cvtpi2ps xmm1,QWORD PTR [ebx+0x923cc6]
  42214e:	cld    
  42214f:	add    BYTE PTR [ebx+0x3e],cl
  422152:	and    al,0xfb
  422154:	(bad)
  422158:	cmp    edi,DWORD PTR [ecx+0x515a8703]
  42215e:	(bad)  
  42215f:	imul   DWORD PTR [ebx]
  422161:	xor    ch,bl
  422163:	or     eax,0x4c466c6
  422168:	(bad)  
  42216b:	retf   0x1cfc
  42216e:	cli    
  42216f:	sti    
  422170:	or     ebx,DWORD PTR [esi-0x39]
  422173:	pop    ebx
  422174:	bound  esp,QWORD PTR [edi]
  422176:	or     BYTE PTR [eax],al
  422178:	por    mm1,QWORD PTR [edx+0x47f1b84c]
  42217f:	dec    eax
  422180:	popa   
  422181:	out    0xd4,eax
  422183:	jmp    0xb129b9d3
  422188:	add    al,BYTE PTR [eax]
  42218a:	jecxz  0x42218e
  42218c:	sbb    al,0xf8
  42218e:	add    al,BYTE PTR fs:[ecx+0x1b]
  422192:	shl    BYTE PTR [edi+0x78],cl
  422195:	or     al,0x5e
  422197:	push   edi
  422198:	jo     0x4221a6
  42219a:	outs   dx,BYTE PTR ds:[esi]
  42219b:	rcr    BYTE PTR [ebx],cl
  42219d:	ret    0x77d1
  4221a0:	scas   eax,DWORD PTR es:[edi]
  4221a1:	cli    
  4221a2:	mov    dl,0x88
  4221a4:	aam    0x73
  4221a6:	fisttp WORD PTR [eax-0x73188c3d]
  4221ac:	xchg   ebx,eax
  4221ad:	xchg   DWORD PTR [edx-0x7eae6312],esp
  4221b3:	test   al,0x0
  4221b5:	es sti 
  4221b7:	mov    dh,BYTE PTR [esi]
  4221b9:	push   esp
  4221ba:	pop    edx
  4221bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4221bc:	or     edx,DWORD PTR [ecx+edi*8+0x3e2dffb4]
  4221c3:	jmp    0x6bd52ab3
  4221c8:	add    ah,BYTE PTR [eax+eax*8+0x3e0dff86]
  4221cf:	jmp    0xa6f8b67a
  4221d4:	add    esp,DWORD PTR [ebx]
  4221d6:	or     DWORD PTR [edi-0x63426bba],ecx
  4221dc:	mov    es,WORD PTR [eax+0x7e]
  4221df:	dec    ebp
  4221e0:	daa    
  4221e1:	sbb    eax,0xd18e494c
  4221e6:	or     BYTE PTR [eax+0x50],ah
  4221e9:	xor    BYTE PTR [esi+0x4c1d0fb4],al
  4221ef:	adc    DWORD PTR [esi+0x50601059],ecx
  4221f5:	lock jge 0x422219
  4221f8:	add    al,0x9
  4221fa:	dec    esp
  4221fb:	and    eax,0x1d43d769
  422200:	es mov dl,0x87
  422203:	add    BYTE PTR [edi+ebx*8-0x6af2cf18],ch
  42220a:	cld    
  42220b:	leave  
  42220c:	stos   DWORD PTR es:[edi],eax
  42220d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42220e:	add    BYTE PTR [ebp+0x72],dl
  422211:	les    edi,FWORD PTR [ecx-0x14]
  422214:	std    
  422215:	sbb    BYTE PTR [eax+esi*8-0x17],ah
  422219:	add    BYTE PTR [eax],dl
  42221b:	jl     0x422229
  42221d:	icebp  
  42221e:	dec    ebp
  42221f:	dec    ebp
  422220:	xchg   DWORD PTR [eax+ebx*4],edi
  422223:	mov    esi,0x7398b645
  422228:	sbb    esp,DWORD PTR [edx+0x4d]
  42222b:	or     al,0x7f
  42222d:	or     al,0x90
  42222f:	add    BYTE PTR [ebp-0x78eaf357],al
  422235:	es nop
  422237:	xor    DWORD PTR [ebp-0x6f],0xc2313c10
  42223e:	jmp    0x422248
  422240:	sti    
  422241:	and    al,0x68
  422243:	aaa    
  422244:	inc    ebp
  422245:	jno    0x422231
  422247:	in     eax,0x87
  422249:	hlt    
  42224a:	xchg   DWORD PTR [edi-0xde6a2ab],eax
  422250:	or     al,0xee
  422252:	adc    DWORD PTR [ebx],ecx
  422254:	add    ecx,ebp
  422256:	xchg   edi,eax
  422257:	add    DWORD PTR [edx],0xb0c386a
  42225d:	imul   ebp,DWORD PTR [ebx],0x0
  422260:	add    cl,ch
  422262:	push   0xce6f443
  422267:	in     al,dx
  422268:	add    cl,ch
  42226a:	xchg   edi,eax
  42226b:	or     DWORD PTR [edx-0x13],0xee0c4b1a
  422272:	adc    eax,ebp
  422274:	add    cl,ch
  422276:	xchg   edi,eax
  422277:	in     eax,dx
  422278:	shr    ecx,0x97
  42227b:	add    al,al
  42227d:	add    BYTE PTR [eax],al
  42227f:	jmp    0x7ffc:0xfd00bb80
  422286:	jge    0x422272
  422288:	cld    
  422289:	jae    0x422297
  42228b:	loop   0x42224a
  42228d:	add    BYTE PTR [eax],al
  42228f:	mov    ebp,0x2c84073c
  422294:	std    
  422295:	(bad)  
  422296:	push   DWORD PTR [esi]
  422298:	into   
  422299:	and    edx,0x7ffffcad
  42229f:	jno    0x4222a4
  4222a1:	test   DWORD PTR [ebp-0x13],0x750c458b
  4222a8:	js     0x4222f2
  4222aa:	dec    eax
  4222ab:	popa   
  4222ac:	cmp    DWORD PTR [eax+0x48],ecx
  4222af:	mov    cl,0x33
  4222b1:	jnp    0x42229b
  4222b3:	jno    0x422325
  4222b5:	and    al,0x83
  4222b7:	adc    eax,0xee17740c
  4222bc:	jmp    0x4222ce
  4222be:	sldt   WORD PTR [eax-0x5c830000]
  4222c5:	add    al,0xba
  4222c7:	scas   al,BYTE PTR es:[edi]
  4222c8:	cld    
  4222c9:	xor    al,BYTE PTR [esi+0x75]
  4222cc:	outs   dx,DWORD PTR ds:[esi]
  4222cd:	jb     0x422254
  4222cf:	(bad)  
  4222d0:	in     al,0x70
  4222d2:	mov    esi,edx
  4222d4:	adc    eax,DWORD PTR [ebx+0x39e5414f]
  4222da:	mov    esi,edx
  4222dc:	or     eax,DWORD PTR [ebx+0x31e4d54d]
  4222e2:	mov    eax,DWORD PTR [eax]
  4222e4:	(bad)  
  4222e5:	pop    ds
  4222e6:	or     DWORD PTR [ebx-0x6b],0xffffffe5
  4222ea:	sub    DWORD PTR [ebx+0x4b8313ee],ecx
  4222f0:	adc    ebp,esp
  4222f2:	and    DWORD PTR [edx-0x3f7be3c2],ecx
  4222f8:	xchg   esp,eax
  4222f9:	xchg   esp,eax
  4222fa:	pop    es
  4222fb:	repz aad 0xe9
  4222fe:	lldt   WORD PTR [esp+esi*2+0x6c953c0b]
  422306:	inc    esp
  422307:	repz aad 0xe9
  42230a:	pop    ds
  42230b:	add    BYTE PTR [ebp+ebp*2-0xea878c4],dl
  422312:	xchg   BYTE PTR [edi-0x68],al
  422315:	jb     0x422329
  422317:	jg     0x4222d7
  422319:	fnsave [ebx+0x21]
  42231c:	pop    ss
  42231d:	aam    0x18
  42231f:	jb     0x42239e
  422321:	push   0xffffffbe
  422323:	hlt    
  422324:	ins    DWORD PTR es:[edi],dx
  422325:	unpcklps xmm6,XMMWORD PTR [ebp+0x75]
  422329:	sbb    BYTE PTR [ebp+ecx*4+0x52],dl
  42232d:	aad    0x4f
  42232f:	das    
  422330:	xchg   ebx,eax
  422331:	xchg   ecx,eax
  422332:	lds    ebp,FWORD PTR [edi+0x7d87968a]
  422338:	mov    WORD PTR [esp+eax*8+0x78],fs
  42233c:	mov    DWORD PTR [esi-0x166bfbbe],ecx
  422342:	(bad)  
  422343:	jg     0x422325
  422345:	rol    ch,cl
  422347:	inc    ebp
  422348:	add    BYTE PTR [ebx-0x18],ah
  42234b:	xchg   BYTE PTR [edx],al
  42234d:	lods   eax,DWORD PTR ds:[esi]
  42234e:	sbb    al,0xf8
  422350:	inc    DWORD PTR [ebx+0x6a]
  422353:	xor    esp,0x7ee698
  422359:	inc    ebx
  42235a:	dec    esi
  42235b:	sti    
  42235c:	cmp    BYTE PTR [ecx-0x648afbba],0xfa
  422363:	mov    edi,0x7939d139
  422368:	jmp    DWORD PTR [esi+0x29]
  42236b:	inc    esp
  42236c:	pop    ebx
  42236d:	mov    edx,0x940cbe20
  422372:	add    bh,dl
  422374:	ret    
  422375:	repz in eax,dx
  422377:	mov    ah,0x8a
  422379:	lock add BYTE PTR ds:0xe900915c,0x52
  422381:	inc    esi
  422382:	dec    edi
  422383:	outs   dx,BYTE PTR ds:[esi]
  422384:	sbb    DWORD PTR [ebx+ecx*4-0x3fe6bc5e],0xc0aa067c
  42238f:	add    BYTE PTR [ebp-0x68],bh
  422392:	add    cl,ch
  422394:	imul   edx,DWORD PTR [eax+eax*1-0xdd3ec17],0x3c
  42239c:	add    al,0x94
  42239e:	push   eax
  42239f:	pop    esp
  4223a0:	pusha  
  4223a1:	shl    bh,0xf4
  4223a4:	rcl    DWORD PTR [eax+eax*1+0x7ce04870],cl
  4223ab:	test   eax,0x82bf0077
  4223b0:	sub    al,0xf0
  4223b2:	pushf  
  4223b3:	xchg   DWORD PTR [esp+ebp*8],ebp
  4223b6:	lahf   
  4223b7:	sub    BYTE PTR [eax],0x8
  4223ba:	xchg   esp,eax
  4223bb:	add    BYTE PTR [esi+0x2],bh
  4223be:	adc    edi,DWORD PTR [ecx+eax*4]
  4223c1:	mov    bl,BYTE PTR [ecx+eax*4-0x7d60f480]
  4223c8:	mov    eax,0xae009407
  4223cd:	push   eax
  4223ce:	push   0x982b6206
  4223d3:	add    cl,ch
  4223d5:	adc    BYTE PTR [ecx+ecx*1-0x47],0x8a
  4223da:	inc    ebp
  4223db:	add    BYTE PTR [ebx+0xb],0xb2
  4223df:	and    BYTE PTR [edi+0x6ecf1b03],bh
  4223e5:	ficomp WORD PTR ds:0xd98c496c
  4223eb:	fadd   QWORD PTR [eax]
  4223ed:	inc    ecx
  4223ee:	jno    0x4223ea
  4223f0:	sti    
  4223f1:	cs sbb eax,ecx
  4223f4:	or     ebp,DWORD PTR [ebp+0x3c]
  4223f7:	idiv   bl
  4223f9:	jmp    0x63269000
  4223fe:	loope  0x42245e
  422400:	add    DWORD PTR [ebx+0x710e897],eax
  422406:	jmp    0x8b7c:0x922984f9
  42240d:	jmp    0xbb00:0x74fb0097
  422414:	jge    0x4223e8
  422416:	push   ebx
  422417:	xchg   esi,eax
  422418:	pop    esi
  422419:	add    cl,dl
  42241b:	mov    esi,0xcd6fbf3
  422420:	ror    DWORD PTR [ebx],0x65
  422423:	das    
  422424:	cmc    
  422425:	sti    
  422426:	jmp    0x73268fd3
  42242b:	retf   0x45e
  42242e:	inc    ebx
  42242f:	nop
  422430:	call   0xf9d3d119
  422435:	test   BYTE PTR [ecx-0x15a08367],ch
  42243b:	xchg   edi,eax
  42243c:	add    BYTE PTR [edi+0x437da436],al
  422442:	loope  0x422462
  422444:	cmp    esi,esp
  422446:	ins    BYTE PTR es:[edi],dx
  422447:	dec    ebp
  422448:	ja     0x422451
  42244a:	sbb    DWORD PTR [ecx+0xb],esp
  42244d:	js     0x42242a
  42244f:	xlat   BYTE PTR ds:[ebx]
  422450:	add    BYTE PTR [edi+0x7acd1b91],al
  422456:	push   ds
  422457:	sbb    edi,DWORD PTR [ebx]
  422459:	sar    BYTE PTR [ecx-0x4917da53],1
  42245f:	jp     0x42245a
  422461:	sti    
  422462:	(bad)  
  422464:	sar    BYTE PTR [edi+0x0],1
  422467:	pop    eax
  422468:	lds    eax,FWORD PTR [eax]
  42246a:	mov    eax,esi
  42246c:	mov    esp,0xbe758b51
  422471:	inc    ebp
  422472:	sar    ch,0x89
  422475:	inc    ebp
  422476:	enter  0xa500,0xf1
  42247a:	cmp    edi,edi
  42247c:	mov    ds:0x680fc088,al
  422481:	add    BYTE PTR [ecx],al
  422483:	add    ch,bh
  422485:	test   DWORD PTR [ebp-0x40],esi
  422488:	test   DWORD PTR [ebp-0x781d00c5],edi
  42248e:	jne    0x422470
  422490:	jbe    0x4224e7
  422492:	in     al,0xc6
  422494:	clc    
  422495:	test   DWORD PTR [eax],0xef78c6
  42249b:	mov    DWORD PTR [eax-0x8],ebp
  42249e:	jnp    0x42249e
  4224a0:	mov    cl,0x3
  4224a2:	jp     0x4224c9
  4224a4:	mov    edi,0xbe8b0000
  4224a9:	jg     0x4224a3
  4224ab:	or     al,0xb2
  4224ad:	jle    0x4224c1
  4224af:	add    ch,BYTE PTR [ebp+0x49453300]
  4224b5:	add    eax,0x7f117f
  4224ba:	add    BYTE PTR [ebx-0x3e10f73a],cl
  4224c0:	ins    DWORD PTR es:[edi],dx
  4224c1:	add    BYTE PTR [eax],al
  4224c3:	and    BYTE PTR [edx+0x7c],dl
  4224c6:	icebp  
  4224c7:	add    DWORD PTR [ebp+0x0],edi
  4224ca:	jnp    0x4224c4
  4224cc:	jno    0x4224d3
  4224ce:	jle    0x4224b8
  4224d0:	ins    BYTE PTR es:[edi],dx
  4224d1:	add    BYTE PTR [eax],al
  4224d3:	idiv   ah
  4224d5:	inc    BYTE PTR [esi]
  4224d7:	test   dl,dl
  4224d9:	(bad)  
  4224da:	(bad)  
  4224db:	inc    DWORD PTR [eax]
  4224dd:	(bad)  
  4224de:	cmp    al,0x18
  4224e0:	test   BYTE PTR [ecx+ebp*1+0x292b0872],dl
  4224e7:	dec    DWORD PTR [edi]
  4224e9:	xchg   esp,eax
  4224ea:	jmp    0xe8a23961
  4224ef:	or     al,0x85
  4224f1:	dec    esp
  4224f2:	jmp    0x294e24f6
  4224f7:	call   FWORD PTR [edi]
  4224f9:	xchg   esp,eax
  4224fa:	jmp    0xe982a90b
  4224ff:	(bad)  
  422500:	call   DWORD PTR [ecx*4+0x5ca300f0]
  422507:	cmc    
  422508:	add    BYTE PTR [ecx+ebp*8+0x6442ff69],dl
  42250f:	mov    dl,0xaa
  422511:	fsubp  st(2),st
  422513:	imul   eax
  422515:	mov    cl,0x10
  422517:	cld    
  422518:	sti    
  422519:	pop    ds
  42251a:	(bad)  
  42251c:	xchg   ebx,eax
  42251d:	xor    cl,ch
  42251f:	(bad)  
  422520:	cmp    edx,DWORD PTR [eax-0x6999fcaa]
  422526:	and    cl,BYTE PTR [ecx-0x17397e]
  42252c:	jmp    FWORD PTR [esi]
  42252e:	int    0x4f
  422530:	xchg   sp,ax
  422532:	pop    esp
  422533:	mov    cl,0x68
  422535:	xchg   ebx,eax
  422536:	mov    ds:0x9a5c7ff7,al
  42253b:	in     al,dx
  42253c:	outs   dx,DWORD PTR ds:[esi]
  42253d:	push   ecx
  42253e:	xchg   ebx,eax
  42253f:	test   DWORD PTR [ebp-0x7625ac00],0xffe99496
  422549:	jle    0x4225b6
  42254b:	out    0x70,eax
  42254d:	push   edx
  42254e:	adc    DWORD PTR [esp+eax*2],ebp
  422551:	sti    
  422552:	pop    ebx
  422553:	push   0xffffffbc
  422555:	mov    bl,0x94
  422557:	jmp    0x1200d5b
  42255c:	dec    edi
  42255d:	sti    
  42255e:	aas    
  42255f:	test   DWORD PTR [esp+ebp*2+0x3f],esp
  422563:	repz push edx
  422565:	push   esp
  422566:	sbb    edi,DWORD PTR [edx+0x4fb0eeb9]
  42256c:	inc    edx
  42256d:	jno    0x422597
  42256f:	dec    edx
  422570:	cmp    dl,BYTE PTR [ecx]
  422572:	pushf  
  422573:	push   cs
  422574:	test   eax,0xe1666403
  422579:	pop    ebx
  42257a:	adc    eax,edx
  42257c:	adc    DWORD PTR [edi+0x0],ebp
  42257f:	repz sbb al,BYTE PTR [eax-0x7709932c]
  422586:	pop    ecx
  422587:	rol    BYTE PTR [ecx],0x69
  42258a:	stos   DWORD PTR es:[edi],eax
  42258b:	repz add cl,BYTE PTR [edi+0x70f37ce4]
  422592:	mov    esp,0xcff9f8e8
  422597:	repnz pop esp
  422599:	jno    0x42256f
  42259b:	out    0x9b,eax
  42259d:	inc    ebp
  42259e:	mov    edi,0xba04d0f2
  4225a3:	bnd jmp 0xfef1262f
  4225a9:	push   ebx
  4225aa:	pop    ds
  4225ab:	sbb    DWORD PTR [ebp-0xd600673],ebp
  4225b1:	cmp    DWORD PTR [ebx-0x1416ff6c],0xfaaae87e
  4225bb:	sbb    DWORD PTR [ecx+edx*1-0x5],edi
  4225bf:	jg     0x4225b3
  4225c1:	cmp    DWORD PTR [edi-0x77b919aa],ecx
  4225c7:	sbb    DWORD PTR [ecx-0x76],ebp
  4225ca:	cli    
  4225cb:	outs   dx,DWORD PTR ds:[esi]
  4225cc:	push   ecx
  4225cd:	xor    BYTE PTR [eax-0x74],0x83
  4225d1:	fs xchg edi,eax
  4225d3:	pop    eax
  4225d4:	repnz add BYTE PTR [esi-0x19],dh
  4225d8:	call   0xd987e2
  4225dd:	test   DWORD PTR [ecx],ebp
  4225df:	mov    cs,WORD PTR [ebx+0x6c5765c0]
  4225e5:	or     DWORD PTR [edx],ebx
  4225e7:	pop    eax
  4225e8:	pop    edi
  4225e9:	mov    DWORD PTR [ebx+eax*1-0xb],esp
  4225ed:	sti    
  4225ee:	inc    esi
  4225ef:	loopne 0x4225d7
  4225f1:	add    ecx,ebp
  4225f3:	xchg   edi,eax
  4225f4:	add    DWORD PTR [ebp-0x409ee79],0x27
  4225fb:	xchg   edi,eax
  4225fc:	add    BYTE PTR [eax-0x50],al
  4225ff:	test   bh,dh
  422601:	ret    0x2a4
  422604:	add    BYTE PTR [edi+0xce91aea],al
  42260a:	mov    ecx,0xc321c00
  42260f:	cdq    
  422610:	or     al,0x74
  422612:	nop
  422613:	mov    edx,0x3997e8d7
  422618:	int    0xf5
  42261a:	test   BYTE PTR [ecx],ch
  42261c:	sahf   
  42261d:	jl     0x4225a3
  42261f:	call   0xde7126bb
  422624:	adc    eax,DWORD PTR [esp+esi*8+0x2ff5add7]
  42262b:	xlat   BYTE PTR ds:[ebx]
  42262c:	sbb    bh,BYTE PTR ds:0xe8b05935
  422632:	int    0xbf
  422634:	popf   
  422635:	ds jg  0x4225e0
  422638:	xchg   esp,eax
  422639:	jno    0x422635
  42263b:	fld    DWORD PTR [ecx]
  42263d:	out    0x2f,eax
  42263f:	test   eax,0x6c0187f6
  422644:	rcl    esp,cl
  422646:	push   ecx
  422647:	add    edx,DWORD PTR [edi+0xc5c8d4d]
  42264d:	hlt    
  42264e:	sti    
  42264f:	add    BYTE PTR [edx],bl
  422651:	mov    ah,0x1
  422653:	add    BYTE PTR [ebp+0x7d],ch
  422656:	push   ecx
  422657:	push   eax
  422658:	add    dh,BYTE PTR [ecx]
  42265a:	fadd   DWORD PTR [edi*1-0xf770003]
  422661:	enter  0xce7b,0xda
  422665:	not    DWORD PTR ds:0x3d2d70
  42266b:	test   DWORD PTR [ebp+0x61],edi
  42266e:	inc    edx
  42266f:	lea    eax,[eax]
  422671:	lock aam 0x50
  422674:	(bad)  
  422675:	lock mov ah,0x50
  422678:	push   edi
  422679:	xor    bh,BYTE PTR [edx-0x7b]
  42267c:	hlt    
  42267d:	mov    ebx,0xba50f7f7
  422682:	popa   
  422683:	fdiv   st(7),st
  422685:	add    BYTE PTR [ecx+0x10],bl
  422688:	inc    eax
  422689:	std    
  42268a:	div    DWORD PTR [ebp-0x24]
  42268d:	jo     0x42264b
  42268f:	pop    es
  422690:	inc    esp
  422691:	pusha  
  422692:	aad    0xf7
  422694:	adc    eax,0x400d61
  422699:	test   BYTE PTR ds:[esi*2+0x87335d9],0xca
  4226a2:	jo     0x4226a5
  4226a4:	add    DWORD PTR [ebp+0x18f0e7fc],ebp
  4226aa:	div    edi
  4226ac:	mov    esi,DWORD PTR [esi+0x4]
  4226af:	sti    
  4226b0:	dec    esp
  4226b1:	adc    eax,0x320fc834
  4226b6:	out    0x0,eax
  4226b8:	add    BYTE PTR [ebp+0x7d],bh
  4226bb:	jge    0x4226c5
  4226bd:	neg    BYTE PTR [esi-0x20]
  4226c0:	(bad)  
  4226c1:	mov    al,0xed
  4226c3:	add    DWORD PTR [ebx-0xbbae492],ecx
  4226c9:	xchg   esp,eax
  4226ca:	fcmovbe st,st(7)
  4226cc:	jg     0x4226b7
  4226ce:	xchg   ebp,eax
  4226cf:	add    ecx,DWORD PTR [ebx]
  4226d1:	pop    ss
  4226d2:	mov    ds:0x5b00fbf2,eax
  4226d7:	jae    0x422713
  4226d9:	call   0x2815581
  4226de:	mov    esp,0xd4ffffd9
  4226e3:	test   eax,0x5cd473f8
  4226e8:	push   edx
  4226e9:	aam    0x3c
  4226eb:	sub    eax,0x629400c3
  4226f0:	(bad)  
  4226f1:	mov    ecx,edx
  4226f3:	cmp    DWORD PTR [edx-0x37],edi
  4226f6:	mov    esp,DWORD PTR [ebp-0x52]
  4226f9:	add    BYTE PTR [ecx+ebx*8-0x151fa274],dl
  422700:	mov    edi,0xec0d5989
  422705:	adc    eax,0xf684e90f
  42270a:	call   0x1d96:0xc737198b
  422711:	repnz push ebp
  422713:	(bad)  
  422715:	je     0x4226a6
  422717:	rcr    ch,cl
  422719:	(bad)  
  42271a:	fstp   QWORD PTR [edx-0x4]
  42271d:	add    al,BYTE PTR [edi+0x7]
  422720:	in     al,dx
  422721:	or     DWORD PTR [ecx],edx
  422723:	sbb    edx,edi
  422725:	mov    BYTE PTR [ecx-0x2b],dl
  422728:	mov    DWORD PTR [esi],edi
  42272a:	scas   al,BYTE PTR es:[edi]
  42272b:	(bad)  
  42272c:	jno    0x422722
  42272e:	addr16 mov al,ds:0x4d3c
  422732:	lahf   
  422733:	not    BYTE PTR [eax-0x5be2f23f]
  422739:	call   0xf2e65a3e
  42273e:	sti    
  42273f:	loop   0x4226df
  422741:	jno    0x422727
  422743:	or     eax,0x6ca02c00
  422748:	mov    DWORD PTR [eax-0xa],edi
  42274b:	outs   dx,DWORD PTR ds:[esi]
  42274c:	jnp    0x422772
  42274e:	in     al,0x1d
  422750:	cmp    eax,0xd4d18b59
  422755:	mov    dh,0xda
  422757:	or     eax,0xc98d5145
  42275c:	pushf  
  42275d:	pusha  
  42275e:	dec    ecx
  42275f:	add    BYTE PTR [ecx],ch
  422761:	or     al,0xa0
  422763:	leave  
  422764:	add    eax,0x75405920
  422769:	in     eax,0x3a
  42276b:	repz je 0x42274d
  42276e:	mov    BYTE PTR [ecx-0x7bf9be60],ah
  422774:	add    cl,ch
  422776:	jmp    0x3989:0xef9c2967
  42277d:	pop    esi
  42277e:	inc    edi
  42277f:	enter  0xbe41,0xcc
  422783:	pushf  
  422784:	jge    0x422720
  422786:	cmp    ebp,esp
  422788:	sbb    BYTE PTR [ecx-0xa],bh
  42278b:	out    dx,eax
  42278c:	sub    DWORD PTR [ecx],0x70
  42278f:	jno    0x42280c
  422791:	call   0x7cc3:0x8ec11b37
  422798:	add    esp,ebx
  42279a:	inc    esp
  42279b:	sbb    eax,0x69b53f
  4227a0:	lods   al,BYTE PTR ds:[esi]
  4227a1:	jge    0x42273f
  4227a3:	mov    ds:0xcd15065,eax
  4227a8:	and    eax,0xb3eadaee
  4227ad:	jns    0x422803
  4227af:	or     al,0x13
  4227b1:	inc    ebp
  4227b2:	ror    DWORD PTR [edx-0x17d3e66c],0x95
  4227b9:	inc    ebp
  4227ba:	rol    DWORD PTR [edx-0x1eff22ef],1
  4227c0:	xchg   edx,eax
  4227c1:	ins    DWORD PTR es:[edi],dx
  4227c2:	pop    es
  4227c3:	lods   eax,DWORD PTR ds:[esi]
  4227c4:	mov    ch,dl
  4227c6:	out    0x31,eax
  4227c8:	xor    DWORD PTR [edx+0x38],0x72
  4227cc:	mov    dl,0x2c
  4227ce:	call   0x42ba78
  4227d3:	add    eax,DWORD PTR [eax-0x38b6ba85]
  4227d9:	ja     0x422836
  4227db:	mov    ebp,0x7791033f
  4227e0:	inc    edx
  4227e1:	js     0x422826
  4227e3:	mov    cl,0x7e
  4227e5:	lods   eax,DWORD PTR ds:[esi]
  4227e6:	je     0x4227d4
  4227e8:	inc    edx
  4227e9:	inc    edx
  4227ea:	cmp    al,0x52
  4227ec:	jbe    0x422869
  4227ee:	jne    0x422779
  4227f0:	aas    
  4227f1:	nop
  4227f2:	or     ebp,ecx
  4227f4:	xchg   edi,eax
  4227f5:	in     eax,0x19
  4227f7:	je     0x42279d
  4227f9:	mov    al,ds:0x9a66e8
  4227fe:	add    BYTE PTR [esi],dh
  422800:	jp     0x42282a
  422802:	xchg   DWORD PTR [esi-0x6a273500],esp
  422808:	not    BYTE PTR [edi-0x50417700]
  42280e:	ja     0x42286b
  422810:	aad    0xe2
  422812:	jae    0x4227d0
  422814:	add    DWORD PTR [eax-0x70],edi
  422817:	cli    
  422818:	push   es
  422819:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42281a:	shl    BYTE PTR [edi],0xa6
  42281d:	mov    edx,DWORD PTR ds:0x49eefec0
  422823:	pop    edx
  422824:	xchg   edx,eax
  422825:	shr    BYTE PTR [esi-0x7ab516fc],1
  42282b:	in     al,dx
  42282c:	push   0xffffffbc
  42282e:	dec    eax
  42282f:	dec    edi
  422830:	aas    
  422831:	pop    ecx
  422832:	test   DWORD PTR [ebp-0x1f],edi
  422835:	or     al,0x42
  422837:	inc    eax
  422838:	add    BYTE PTR [eax],ch
  42283a:	les    eax,FWORD PTR [edi]
  42283c:	test   BYTE PTR [edi-0x1fffffe],bh
  422842:	jae    0x42286c
  422844:	add    BYTE PTR [edx+0x6d],ah
  422847:	cmp    BYTE PTR [edx],al
  422849:	ins    DWORD PTR es:[edi],dx
  42284a:	add    DWORD PTR [eax+0x0],ebp
  42284d:	jge    0x422850
  42284f:	adc    BYTE PTR [eax+0x9],ch
  422852:	cmp    eax,0x859d0000
  422857:	pop    ebp
  422858:	fadd   DWORD PTR ds:0x3d00c358
  42285e:	and    BYTE PTR [ebp-0x2c],0x3d
  422862:	js     0x422854
  422864:	mov    edi,DWORD PTR [eax-0x34]
  422867:	push   eax
  422868:	mov    eax,DWORD PTR [eax]
  42286a:	sub    DWORD PTR [esi+0x7a3dc845],0x45
  422871:	int3   
  422872:	mov    ah,0x5d
  422874:	shr    al,1
  422876:	cmp    eax,DWORD PTR [ecx-0x9]
  422879:	jmp    FWORD PTR [ecx+0x578407c4]
  42287f:	add    DWORD PTR [eax],eax
  422881:	add    BYTE PTR [esi],cl
  422883:	rol    DWORD PTR [ebp-0x7ffbb60a],0x3e
  42288a:	in     eax,dx
  42288b:	pop    ebp
  42288c:	(bad)  
  42288d:	aas    
  42288e:	jge    0x422906
  422890:	add    DWORD PTR [eax],eax
  422892:	or     DWORD PTR [eax],eax
  422894:	ds jmp 0x422913
  422897:	or     eax,0x80ed0001
  42289c:	jns    0x4228a3
  42289e:	add    eax,0xfdfec880
  4228a3:	add    eax,DWORD PTR [ebp+0xacd3]
  4228a9:	(bad)  
  4228aa:	push   0x8deb00e7
  4228af:	test   DWORD PTR [ebp-0x38],eax
  4228b2:	xchg   esp,eax
  4228b3:	mov    edi,0xbda3404e
  4228b8:	xchg   BYTE PTR [ebp-0x50],al
  4228bb:	pop    ebx
  4228bc:	mov    edi,0xfe7d180b
  4228c1:	call   DWORD PTR [edx+esi*4-0xaf0f394]
  4228c8:	ja     0x4228d8
  4228ca:	aam    0xd9
  4228cc:	hlt    
  4228cd:	jae    0x4228cf
  4228cf:	pushf  
  4228d0:	es cmc 
  4228d2:	rol    ah,cl
  4228d4:	(bad)  
  4228d5:	mov    edi,0x14824f87
  4228da:	stc    
  4228db:	pop    ebx
  4228dc:	cmp    DWORD PTR [ebx-0x40],0xffffffc9
  4228e0:	mov    BYTE PTR [edx+0x1e825c45],0x40
  4228e7:	inc    ebx
  4228e8:	pop    ebx
  4228e9:	mov    al,bl
  4228eb:	adc    DWORD PTR [edi],edi
  4228ed:	push   0xffffffbe
  4228ef:	cmp    eax,0x94fffecd
  4228f4:	mov    edi,0x4c96661d
  4228f9:	cmp    dh,al
  4228fb:	les    eax,FWORD PTR [edx+0x6c]
  4228fe:	and    al,0x1f
  422900:	mov    ds:0x2512e827,eax
  422905:	cmc    
  422906:	sti    
  422907:	or     eax,0xfc7fdfa5
  42290c:	and    al,BYTE PTR [esp+eax*4]
  42290f:	push   edx
  422910:	fdivr  st,st(7)
  422912:	(bad)  
  422913:	jle    0x4228e3
  422915:	imul   edi,esi,0x50d7a510
  42291b:	fld    TBYTE PTR [ebx+ebx*8-0x5]
  42291f:	jmp    0xc27c:0xbce46dea
  422926:	cli    
  422927:	ret    
  422928:	pusha  
  422929:	cmp    ah,ah
  42292b:	pop    ss
  42292c:	add    ecx,esp
  42292e:	repz lahf 
  422930:	test   BYTE PTR [edi],dl
  422932:	add    eax,0x5e009400
  422937:	dec    ebx
  422938:	ins    BYTE PTR es:[edi],dx
  422939:	das    
  42293a:	scas   al,BYTE PTR es:[edi]
  42293b:	das    
  42293c:	(bad)  [ebp-0x14]
  42293f:	jl     0x422932
  422941:	hlt    
  422942:	into   
  422943:	cld    
  422944:	jae    0x42294a
  422946:	(bad)  {k1}
  42294b:	clc    
  42294c:	stos   DWORD PTR es:[edi],eax
  42294d:	shl    BYTE PTR [eax+0x51],0x7c
  422951:	sub    DWORD PTR [eax+edi*8],esp
  422954:	lahf   
  422955:	test   dh,ah
  422957:	add    al,0x94
  422959:	add    BYTE PTR [eax+0x49],ah
  42295c:	push   0x9fe42c29
  422961:	sub    BYTE PTR [ebp+0x5e009404],0x79
  422968:	xor    BYTE PTR [edi+0x24],dh
  42296b:	hlt    
  42296c:	mov    ebx,0x9f04992c
  422971:	test   BYTE PTR [esp+eax*1+0x85e0094],cl
  422978:	in     al,0x75
  42297a:	loope  0x422903
  42297c:	dec    ebp
  42297d:	sti    
  42297e:	ins    BYTE PTR es:[edi],dx
  42297f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422980:	xchg   esp,eax
  422981:	add    cl,ch
  422983:	ss pmovmskb esp,mm1
  422987:	xchg   ebp,ecx
  422989:	jae    0x42296b
  42298b:	dec    edx
  42298c:	adc    bh,ah
  42298e:	loopne 0x422913
  422990:	in     eax,dx
  422991:	sub    al,0x94
  422993:	idiv   BYTE PTR [ebx+0x4960c0]
  422999:	shr    BYTE PTR [eax],0xa4
  42299c:	out    0x66,eax
  42299e:	dec    edi
  42299f:	outs   dx,BYTE PTR ds:[esi]
  4229a0:	inc    ecx
  4229a1:	in     al,dx
  4229a2:	jl     0x422989
  4229a4:	test   BYTE PTR [ebx+0x28],cl
  4229a7:	add    cl,ch
  4229a9:	dec    ebx
  4229aa:	sub    al,0x87
  4229ac:	jmp    0x5d4251c8
  4229b1:	ins    DWORD PTR es:[edi],dx
  4229b2:	or     DWORD PTR [ebp-0x27],0x2a
  4229b6:	or     al,0xb1
  4229b8:	cmp    DWORD PTR [esi],ebp
  4229ba:	mov    edi,0x22668145
  4229bf:	mov    DWORD PTR [esp+esi*1],ebp
  4229c2:	out    0x15,al
  4229c4:	inc    ecx
  4229c5:	mov    ds:0xd4640040,al
  4229ca:	cwde   
  4229cb:	mov    DWORD PTR [eax+eax*2],esp
  4229ce:	js     0x422a2d
  4229d0:	pop    ebp
  4229d1:	lock imul edi,DWORD PTR [eax-0x3b235a],0xffffffe8
  4229d9:	xchg   edi,eax
  4229da:	add    al,ch
  4229dc:	push   cs
  4229dd:	cmp    al,0xe7
  4229df:	sti    
  4229e0:	jb     0x4229c6
  4229e2:	fadd   DWORD PTR [ecx+ebp*4+0x2c8731cc]
  4229e9:	fs inc ecx
  4229eb:	mov    DWORD PTR [esp+eiz*2],esp
  4229ee:	xor    al,BYTE PTR [ebp+0x4d]
  4229f1:	test   eax,0xa342859b
  4229f6:	clc    
  4229f7:	xchg   BYTE PTR [ebx+ebp*1+0xea04bf],ch
  4229fe:	ins    DWORD PTR es:[edi],dx
  4229ff:	sub    DWORD PTR [edi+0x34e607ac],eax
  422a05:	jns    0x422a0d
  422a07:	adc    al,0x78
  422a09:	fist   DWORD PTR [edi+0x0]
  422a0c:	xchg   DWORD PTR [edi+eax*1+0x28ddfb51],ebx
  422a13:	or     BYTE PTR [ebp+0x15],0x92
  422a17:	rcl    DWORD PTR [ecx+0x1],0x38
  422a1b:	ja     0x422a17
  422a1d:	push   cs
  422a1e:	xchg   edx,eax
  422a1f:	enter  0x89,0xf8
  422a23:	lds    eax,FWORD PTR [ebx+0x45eec57d]
  422a29:	in     al,dx
  422a2a:	ss cmp ah,ch
  422a2d:	cmp    esi,eax
  422a2f:	fld    QWORD PTR [edi]
  422a31:	adc    BYTE PTR [ecx+0x76fff7ef],0x4f
  422a38:	sub    BYTE PTR [ebp-0x49],dh
  422a3b:	lock jne 0x422a32
  422a3e:	aad    0x3d
  422a40:	xchg   dh,bh
  422a42:	pop    edx
  422a43:	retf   
  422a44:	sbb    al,0x85
  422a46:	ss jno 0x422a4c
  422a49:	inc    eax
  422a4b:	call   0xef1d5e38
  422a50:	mul    DWORD PTR [ecx]
  422a52:	fsubr  st,st(0)
  422a54:	add    DWORD PTR [ebp+0x1],0x65
  422a58:	aas    
  422a59:	and    al,0xf4
  422a5b:	dec    edi
  422a5c:	sub    dh,al
  422a5e:	mov    al,0xdb
  422a60:	add    DWORD PTR [ebx-0x7c278000],ecx
  422a66:	jge    0x422a5d
  422a68:	retf   
  422a69:	xor    al,0x8e
  422a6b:	retf   
  422a6c:	out    dx,eax
  422a6d:	add    DWORD PTR [ebp+0xd],0x6b
  422a71:	jge    0x422a63
  422a73:	lds    eax,FWORD PTR ds:0x69cafe86
  422a79:	jne    0x422a43
  422a7b:	aad    0xc9
  422a7d:	cmp    eax,0x456acaff
  422a82:	sti    
  422a83:	jmp    0xccc5:0x758c
  422a89:	loopne 0x422ac8
  422a8b:	retf   0x2aef
  422a8e:	ror    BYTE PTR [edx],0x4f
  422a91:	push   ebx
  422a92:	leave  
  422a93:	mov    edi,0x6654fff8
  422a98:	loopne 0x422a1b
  422a9a:	in     al,dx
  422a9b:	xchg   esp,eax
  422a9c:	mov    bh,0xf7
  422a9e:	(bad)  
  422a9f:	fist   DWORD PTR [ebp+0x63]
  422aa2:	clc    
  422aa3:	xchg   esp,eax
  422aa4:	xchg   BYTE PTR [ecx+0x53],bl
  422aa7:	cmp    al,0x3
  422aa9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422aaa:	aas    
  422aab:	xchg   esp,eax
  422aac:	sbb    DWORD PTR [ebx-0xd],eax
  422aaf:	mov    ebx,0x86ec12d9
  422ab4:	pop    ss
  422ab5:	add    al,0xa1
  422ab7:	xchg   esp,eax
  422ab8:	popf   
  422ab9:	inc    esp
  422aba:	add    BYTE PTR [edi],cl
  422abc:	or     al,0xf0
  422abe:	mov    ecx,0x4576d757
  422ac3:	test   BYTE PTR [ebx-0x19],bl
  422ac6:	or     al,0x0
  422ac8:	jg     0x422ab7
  422aca:	jl     0x422ace
  422acc:	pop    ss
  422acd:	mov    dl,0xfb
  422acf:	ins    DWORD PTR es:[edi],dx
  422ad0:	(bad)  
  422ad1:	repnz inc edx
  422ad3:	lock jmp 0x422aa5
  422ad6:	stc    
  422ad7:	inc    edx
  422ad8:	nop
  422ad9:	fdiv   DWORD PTR [ebx+0x18]
  422adc:	cvtps2pi mm7,xmm4
  422adf:	cli    
  422ae0:	out    0xc5,eax
  422ae2:	jp     0x422b26
  422ae4:	mov    al,ds:0x8708747e
  422ae9:	dec    di
  422aeb:	call   0xfc33685f
  422af0:	adc    DWORD PTR [edx-0x27e0a19a],ebx
  422af6:	push   ss
  422af7:	inc    ebp
  422af8:	and    al,0xdb
  422afa:	out    dx,eax
  422afb:	jg     0x422a9e
  422afd:	dec    ecx
  422afe:	sti    
  422aff:	mov    BYTE PTR [ecx+0x1fc27441],ah
  422b05:	popf   
  422b06:	mul    DWORD PTR [edi-0x10]
  422b09:	add    BYTE PTR [eax+eax*1+0x3],0xc5
  422b0e:	out    dx,eax
  422b0f:	push   cs
  422b10:	push   esp
  422b11:	fnstcw WORD PTR [edi+edi*1+0x54]
  422b15:	add    BYTE PTR [ebx+eax*8-0x61],ch
  422b19:	jl     0x422b5b
  422b1b:	add    dl,BYTE PTR [eax+eax*1+0x940381]
  422b22:	stc    
  422b23:	pop    ebx
  422b24:	ret    
  422b25:	dec    ebp
  422b26:	jmp    0x9cb78f2e
  422b2b:	mov    edi,0x219eac00
  422b30:	add    edx,DWORD PTR [ebx+edi*2+0x5d33bf9c]
  422b37:	mov    cl,0x4
  422b39:	sbb    eax,0x1b55a936
  422b3e:	mov    ecx,0xd849ab
  422b43:	pusha  
  422b44:	dec    ecx
  422b45:	pop    eax
  422b46:	fsub   DWORD PTR [edi]
  422b48:	xor    DWORD PTR [edi-0x703b9a19],ecx
  422b4e:	jl     0x422b9f
  422b50:	add    eax,0x87c00094
  422b55:	xchg   ebp,eax
  422b56:	add    cl,ch
  422b58:	pop    ecx
  422b59:	imul   eax,DWORD PTR [esi+0x6c],0xffffffb9
  422b5d:	jbe    0x422b4e
  422b5f:	xchg   edx,eax
  422b60:	out    dx,eax
  422b61:	ins    BYTE PTR es:[edi],dx
  422b62:	aad    0xb7
  422b64:	out    dx,eax
  422b65:	dec    edi
  422b66:	jnp    0x422be1
  422b68:	fdiv   QWORD PTR [edi-0x7ffc16a2]
  422b6e:	cld    
  422b6f:	cmc    
  422b70:	add    dh,BYTE PTR [edx+0x16810a02]
  422b76:	shr    al,cl
  422b78:	add    edx,DWORD PTR [edx+ebx*2+0xba53f5]
  422b7f:	fs mov ecx,0xef4ae760
  422b85:	xchg   ebx,eax
  422b86:	mov    eax,0xbfcbdc42
  422b8b:	cmp    ebp,edi
  422b8d:	sbb    eax,eax
  422b8f:	add    BYTE PTR [edi-0x4988900],dh
  422b95:	jmp    0x422c03
  422b97:	add    al,0x8d
  422b99:	pop    esp
  422b9a:	or     al,0xea
  422b9c:	sti    
  422b9d:	push   ds
  422b9e:	xor    BYTE PTR [ebx-0x27681700],dh
  422ba4:	sbb    eax,0x8deac305
  422ba9:	ins    BYTE PTR es:[edi],dx
  422baa:	mov    ebx,gs
  422bac:	sti    
  422bad:	(bad)  
  422bae:	addr16 jg 0x422b73
  422bb1:	cdq    
  422bb2:	ficomp WORD PTR ds:0x6d96ee7f
  422bb8:	pop    ss
  422bb9:	je     0x422ba7
  422bbb:	stos   DWORD PTR es:[edi],eax
  422bbc:	std    
  422bbd:	fidiv  WORD PTR [edx-0x68164759]
  422bc3:	add    al,ch
  422bc5:	int    0x76
  422bc7:	jmp    0xbefb:0x2d1c74fb
  422bce:	jb     0x422c21
  422bd0:	xchg   DWORD PTR [edi+0x648dc45e],ebp
  422bd6:	stos   DWORD PTR es:[edi],eax
  422bd7:	jmp    0xea09d2d7
  422bdc:	jne    0x422bcf
  422bde:	adc    al,0x7c
  422be0:	fcom   QWORD PTR [ebx-0x7eaf1596]
  422be6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422be7:	jnp    0x422be9
  422be9:	jmp    0x544ded0a
  422bee:	push   edi
  422bef:	jge    0x422bb1
  422bf1:	cld    
  422bf2:	cmp    BYTE PTR [edi],dl
  422bf4:	rol    BYTE PTR [edi],0x0
  422bf7:	mov    cl,0x7b
  422bf9:	fsub   QWORD PTR [ebx+0x3a]
  422bfc:	jmp    0x6400:0x984fb9
  422c03:	or     al,0xe3
  422c05:	repz dec esi
  422c07:	add    al,bl
  422c09:	add    BYTE PTR [eax],al
  422c0b:	std    
  422c0c:	inc    ecx
  422c0d:	dec    ecx
  422c0e:	jne    0x422c64
  422c10:	push   0x45
  422c12:	call   0xe9bd158d
  422c17:	rol    DWORD PTR [edx+0x522c0cc0],1
  422c1d:	lea    edi,[ebp+0x15]
  422c20:	xor    eax,eax
  422c22:	call   0x38b37e
  422c27:	cmp    ecx,eax
  422c29:	je     0x422c6d
  422c2b:	inc    eax
  422c2c:	or     BYTE PTR [esi+edi*8-0x3e],0xd3
  422c31:	sub    esi,esi
  422c33:	aaa    
  422c34:	cmp    eax,0xf0959835
  422c39:	mov    edi,0x7b3eb2fe
  422c3e:	sar    DWORD PTR [ecx+0x3f10f680],0xc6
  422c45:	sub    eax,eax
  422c47:	fld    TBYTE PTR [ecx+0x1]
  422c4a:	call   0x38b129
  422c4f:	add    al,0x3e
  422c51:	lock push 0x69
  422c54:	inc    bp
  422c56:	lock lea ecx,[edx+0x4]
  422c5a:	lea    eax,[eax]
  422c5c:	clc    
  422c5d:	inc    eax
  422c5e:	idiv   bh
  422c60:	add    cl,BYTE PTR [ebp+ecx*4-0x7b]
  422c64:	and    edx,ebx
  422c66:	idiv   edi
  422c68:	(bad)  
  422c69:	(bad)  
  422c6a:	in     eax,0x75
  422c6c:	cmp    eax,0xc87ce801
  422c71:	shl    edi,cl
  422c73:	jmp    0x3a0353
  422c78:	mov    bh,0xfb
  422c7a:	cmp    esp,DWORD PTR [ecx]
  422c7c:	dec    ecx
  422c7d:	cmc    
  422c7e:	cmp    ebp,DWORD PTR ds:0x403c0d49
  422c84:	xchg   esp,eax
  422c85:	ret    
  422c86:	sti    
  422c87:	cmp    esi,DWORD PTR [edx-0x35]
  422c8a:	add    ebp,DWORD PTR [esi]
  422c8c:	out    dx,eax
  422c8d:	push   ecx
  422c8e:	std    
  422c8f:	scas   al,BYTE PTR es:[edi]
  422c90:	cwde   
  422c91:	push   edx
  422c92:	imul   BYTE PTR [esi-0x50fdbd6a]
  422c98:	xchg   edi,eax
  422c99:	inc    edx
  422c9a:	(bad)  
  422c9b:	scas   al,BYTE PTR es:[edi]
  422c9c:	xchg   ebp,eax
  422c9d:	xchg   esi,eax
  422c9e:	js     0x422d15
  422ca0:	mov    WORD PTR [esi],es
  422ca2:	jb     0x422cb0
  422ca4:	fild   DWORD PTR [edi+esi*8+0x67ebd352]
  422cab:	push   cs
  422cac:	push   esp
  422cad:	xlat   BYTE PTR ds:[ebx]
  422cae:	dec    edi
  422caf:	das    
  422cb0:	aam    0x71
  422cb2:	mov    ebp,0xece461e8
  422cb7:	sti    
  422cb8:	sbb    BYTE PTR [edi],dl
  422cba:	js     0x422ce5
  422cbc:	fwait
  422cbd:	popf   
  422cbe:	sar    BYTE PTR [edi+0x0],0xac
  422cc2:	(bad)  
  422cc3:	jae    0x422cdd
  422cc5:	dec    esp
  422cc6:	fiadd  WORD PTR [ebx-0x266b02]
  422ccc:	inc    edi
  422ccd:	fwait
  422cce:	push   ebp
  422ccf:	jp     0x422cd1
  422cd1:	xchg   esp,eax
  422cd2:	fnstenv [edi]
  422cd4:	je     0x422c6d
  422cd6:	and    DWORD PTR [ebx+0x8],esi
  422cd9:	pop    ss
  422cda:	add    eax,0x155201ec
  422cdf:	cmc    
  422ce0:	add    DWORD PTR [edi+ebx*4],edx
  422ce3:	add    DWORD PTR [ebp-0x76],esi
  422ce6:	pop    esp
  422ce7:	inc    edx
  422ce8:	mov    esp,0xfb2ba43c
  422ced:	dec    ebx
  422cee:	outs   dx,DWORD PTR ds:[esi]
  422cef:	out    0x85,eax
  422cf1:	inc    ebx
  422cf2:	in     eax,dx
  422cf3:	test   DWORD PTR [ebp+0x7cd72dc1],ecx
  422cf9:	outs   dx,DWORD PTR ds:[esi]
  422cfa:	push   edx
  422cfb:	in     al,dx
  422cfc:	xchg   ecx,ecx
  422cfe:	add    cl,dh
  422d00:	cmc    
  422d01:	fld1   
  422d03:	call   0xe83d3e04
  422d08:	add    edx,DWORD PTR [edi+esi*2+0x4012ffd6]
  422d0f:	icebp  
  422d10:	jp     0x422d6b
  422d12:	clc    
  422d13:	arpl   bp,si
  422d15:	jge    0x422d0e
  422d17:	cwde   
  422d18:	in     al,dx
  422d19:	mov    DWORD PTR [eax-0x29],ebp
  422d1c:	inc    ebx
  422d1d:	xchg   esp,eax
  422d1e:	ja     0x422d39
  422d20:	xchg   dh,ah
  422d22:	repz push 0xffffffdb
  422d25:	add    BYTE PTR [eax+eax*1-0x2fa68117],dl
  422d2c:	mov    ecx,0x3ad87a59
  422d31:	aaa    
  422d32:	mov    edi,0xe43e6ee3
  422d37:	jg     0x422cc5
  422d39:	jecxz  0x422ccf
  422d3b:	jns    0x422cd9
  422d3d:	retf   
  422d3e:	inc    ebp
  422d3f:	ja     0x422cf2
  422d41:	ret    0xcc59
  422d44:	jmp    0xc2067ec5
  422d49:	cmp    eax,0x80cae3cb
  422d4e:	push   esp
  422d4f:	repz imul ecx,DWORD PTR [ecx+0x78e90094],0x1
  422d57:	int    0xc1
  422d59:	or     DWORD PTR [ebx+0x3fddaae3],ebp
  422d5f:	add    cl,ch
  422d61:	add    edi,edx
  422d63:	and    al,0x3a
  422d65:	push   ebx
  422d66:	or     DWORD PTR [ebp+0x35],edi
  422d69:	jmp    0x422dba
  422d6b:	jecxz  0x422d6c
  422d6d:	add    esp,esp
  422d6f:	jecxz  0x422d4d
  422d71:	das    
  422d72:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422d73:	inc    eax
  422d74:	jmp    0x367dff
  422d79:	arpl   WORD PTR ds:0x3f6ef9cc,dx
  422d7f:	jns    0x422d06
  422d81:	aad    0x2e
  422d83:	out    0xfb,eax
  422d85:	ins    BYTE PTR es:[edi],dx
  422d86:	adc    eax,0x56fb44
  422d8b:	dec    DWORD PTR [edi+0x66]
  422d8e:	jmp    0x704e9b91
  422d93:	sub    eax,0xef3efb44
  422d98:	out    0x72,al
  422d9a:	loope  0x422d72
  422d9c:	jl     0x422e0e
  422d9e:	cs jmp esi
  422da1:	jmp    edi
  422da3:	xchg   edi,eax
  422da4:	add    bl,bh
  422da6:	hlt    
  422da7:	ja     0x422db6
  422da9:	inc    eax
  422daa:	jmp    0xde4415c9
  422daf:	adc    al,0x31
  422db1:	sti    
  422db2:	push   es
  422db3:	scas   eax,DWORD PTR es:[edi]
  422db4:	bound  edi,QWORD PTR [ebp-0x4195187]
  422dba:	jmp    0xee66ae6d
  422dbf:	mov    esi,0xd36c8de6
  422dc4:	call   0xd88a0cc4
  422dc9:	daa    
  422dca:	push   ecx
  422dcb:	cwde   
  422dcc:	add    cl,ch
  422dce:	cli    
  422dcf:	jle    0x422db7
  422dd1:	sti    
  422dd2:	scas   eax,DWORD PTR es:[edi]
  422dd3:	aam    0xed
  422dd5:	add    al,dl
  422dd7:	jns    0x422dc0
  422dd9:	sti    
  422dda:	mov    dh,0xc5
  422ddc:	in     eax,0x75
  422dde:	loope  0x422da6
  422de0:	in     eax,0x15
  422de2:	and    DWORD PTR [edx-0x5cc6ffc0],ecx
  422de8:	rol    BYTE PTR [edi-0xbfc905a],0x8e
  422def:	add    BYTE PTR [esi],bh
  422df1:	jge    0x422db3
  422df3:	add    BYTE PTR [eax+0xb],al
  422df6:	lea    eax,[ebp+0x21]
  422df9:	(bad)  
  422dfa:	and    al,0x3b
  422dfc:	stos   BYTE PTR es:[edi],al
  422dfd:	(bad)  
  422dfe:	cmp    eax,0xffffffb0
  422e01:	(bad)  
  422e02:	jne    0x422ddd
  422e04:	les    ecx,FWORD PTR [ebp-0x9]
  422e07:	(bad)  
  422e08:	mov    edx,0x55d47568
  422e0d:	dec    eax
  422e0e:	xor    bh,bh
  422e10:	pop    edx
  422e11:	jp     0x422e60
  422e13:	clc    
  422e14:	in     al,dx
  422e15:	jp     0x422e8a
  422e17:	and    BYTE PTR [edx+ebp*2+0x68c86a27],cl
  422e1e:	mov    ebp,0xf7d6bbbc
  422e23:	pop    eax
  422e24:	test   DWORD PTR [ecx+eiz*8-0x1],ebp
  422e28:	jp     0x422e8c
  422e2a:	imul   ebx,DWORD PTR [edi+edx*1],0x1d
  422e2e:	add    edi,0x36
  422e31:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422e32:	call   0xf819745b
  422e37:	test   DWORD PTR [ebp+0x70],ebp
  422e3a:	pop    es
  422e3b:	mov    al,BYTE PTR [ebx]
  422e3d:	sbb    eax,0xe1213b3c
  422e42:	jg     0x422e04
  422e44:	inc    eax
  422e45:	add    BYTE PTR [ebx+0x4d],bh
  422e48:	mov    ch,0xc
  422e4a:	add    DWORD PTR [ebx-0x67],0x2b
  422e4e:	test   DWORD PTR [ecx-0x38cc3728],0x5e2ec100
  422e58:	cmp    DWORD PTR [ebp-0x4174ce90],edx
  422e5e:	sub    al,0x33
  422e60:	(bad)  
  422e61:	mov    eax,ds:0x75395e02
  422e66:	push   ecx
  422e67:	and    eax,0xb56a5b6a
  422e6c:	in     al,0x94
  422e6e:	mov    ebp,ecx
  422e70:	sti    
  422e71:	in     al,dx
  422e72:	jg     0x422ec1
  422e74:	loope  0x422eb9
  422e76:	jp     0x422e61
  422e78:	outs   dx,DWORD PTR ds:[esi]
  422e79:	test   BYTE PTR [esi-0x42],ch
  422e7c:	sti    
  422e7d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422e7e:	mov    ebx,0x63d18d4f
  422e83:	push   esp
  422e84:	call   0xfc285830
  422e89:	pop    ss
  422e8a:	sbb    edx,DWORD PTR [edi+eiz*8]
  422e8d:	rcr    BYTE PTR [esi+0x45],0x34
  422e91:	iret   
  422e92:	sbb    dh,BYTE PTR [eax+0x5c]
  422e95:	adc    al,0xff
  422e97:	add    esi,DWORD PTR [ebx+eiz*2-0x33]
  422e9b:	or     BYTE PTR [ebp-0x4162cd7],cl
  422ea1:	jmp    0x422e31
  422ea3:	xlat   BYTE PTR ds:[ebx]
  422ea4:	es cmc 
  422ea6:	sbb    ecx,ebp
  422ea8:	sti    
  422ea9:	addr16 retf 
  422eab:	jl     0x422e6f
  422ead:	fs pop esp
  422eaf:	cmp    ebp,esp
  422eb1:	fs (bad) 
  422eb3:	cmp    cl,dl
  422eb5:	ret    0x84f9
  422eb8:	les    eax,FWORD PTR [eax]
  422eba:	mov    BYTE PTR [esi-0x29988540],bh
  422ec0:	mov    edi,0xd36bab50
  422ec5:	lea    esp,[ecx]
  422ec7:	mov    bl,0x5d
  422ec9:	inc    BYTE PTR [ebx-0x31]
  422ecc:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422ece:	xchg   edx,eax
  422ecf:	mov    bh,0x7c
  422ed1:	inc    ebp
  422ed2:	jo     0x422ec5
  422ed4:	cli    
  422ed5:	pop    es
  422ed6:	sub    eax,DWORD PTR ds:[esi*2-0x13956176]
  422ede:	jl     0x422f40
  422ee0:	jbe    0x422edc
  422ee2:	imul   ebp,DWORD PTR [ebx+0x5a],0xffffffec
  422ee6:	xchg   esp,eax
  422ee7:	add    BYTE PTR [esi-0x5eb22506],cl
  422eed:	and    esi,DWORD PTR [ebx]
  422eef:	or     DWORD PTR [edi+0x44],ecx
  422ef2:	xchg   esp,eax
  422ef3:	or     BYTE PTR [ecx+esi*8],0x3f
  422ef7:	push   esi
  422ef8:	fld    QWORD PTR [ebx+0x6ee7f8c3]
  422efe:	xchg   esi,eax
  422eff:	sub    esi,0x1b
  422f02:	xchg   esp,eax
  422f03:	push   edi
  422f04:	fcomi  st,st(1)
  422f06:	(bad)  
  422f08:	or     DWORD PTR [eax-0x78],esi
  422f0b:	jmp    0x422ef0
  422f0d:	adc    DWORD PTR [ecx-0x6f911729],0xffffff83
  422f14:	pushf  
  422f15:	jmp    0x422ea3
  422f17:	(bad)  
  422f18:	lods   al,BYTE PTR ds:[esi]
  422f19:	jmp    0x422ea7
  422f1b:	pcmpgtw mm2,mm4
  422f1e:	add    BYTE PTR [ebp-0x54831700],dl
  422f24:	sub    BYTE PTR [ebx],ah
  422f26:	ds fwait
  422f28:	add    BYTE PTR [ebx+eax*8+0x61],ch
  422f2c:	repnz mov ss,WORD PTR [eax]
  422f2f:	and    DWORD PTR [esi+0x5d],ebx
  422f32:	dec    ebx
  422f33:	mov    esp,0xbfe80967
  422f38:	mov    ebp,DWORD PTR [edx]
  422f3a:	push   ebx
  422f3b:	xor    al,BYTE PTR [edi]
  422f3d:	push   cs
  422f3e:	dec    esp
  422f3f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422f40:	inc    ebp
  422f41:	icebp  
  422f42:	adc    ah,BYTE PTR [eax]
  422f44:	sbb    ebp,edx
  422f46:	jae    0x422fc0
  422f48:	call   0xdfe0f0e8
  422f4d:	outs   dx,BYTE PTR ds:[esi]
  422f4e:	aam    0x1d
  422f50:	xor    eax,0xf5a81d9
  422f55:	gs (bad) 
  422f57:	xchg   ebp,eax
  422f58:	add    cl,ch
  422f5a:	xor    dl,BYTE PTR [ecx+ebx*1+0x26]
  422f5e:	sbb    al,0xe6
  422f60:	inc    edx
  422f61:	add    BYTE PTR [ebx+0x6c],ah
  422f64:	jo     0x297b21a
  422f6a:	scas   eax,DWORD PTR es:[edi]
  422f6b:	xchg   esp,eax
  422f6c:	lock add eax,0xf95f5192
  422f72:	ret    0x4c4
  422f75:	ret    0xa7e5
  422f78:	and    BYTE PTR [eax-0x3e],al
  422f7b:	(bad)  
  422f7c:	sub    BYTE PTR [esi-0x76],ch
  422f7f:	dec    edi
  422f80:	(bad)  
  422f81:	jle    0x422f75
  422f83:	add    BYTE PTR [edi+0x0],dh
  422f86:	or     esp,DWORD PTR [ebx+eax*8+0x1]
  422f8a:	add    cl,ch
  422f8c:	mov    ebp,0x2fdc8cf8
  422f91:	cmp    al,ch
  422f93:	jecxz  0x422f8c
  422f95:	(bad)  
  422f97:	bound  eax,QWORD PTR [ebx+0x30]
  422f9a:	lock dec di
  422f9d:	call   0xdb3c5401
  422fa2:	mov    DWORD PTR [edi+eiz*8-0x67c682a2],ebp
  422fa9:	or     eax,DWORD PTR [ebp+ebp*4+0x6a000090]
  422fb0:	xor    eax,0x305700e8
  422fb5:	lds    edi,FWORD PTR [edi]
  422fb7:	jmp    0x15580b0d
  422fbc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422fbd:	inc    eax
  422fbe:	add    BYTE PTR [edi-0x553ac408],al
  422fc4:	xchg   edi,eax
  422fc5:	bound  eax,QWORD PTR [ebp-0x78bedbd7]
  422fcb:	hlt    
  422fcc:	dec    ebx
  422fcd:	lds    edi,FWORD PTR [edi]
  422fcf:	jmp    0x1eb6f7e8
  422fd4:	adc    DWORD PTR [ebx-0x199fc740],0xffffffc4
  422fdb:	add    BYTE PTR [ebx-0x19],dl
  422fde:	test   eax,eax
  422fe0:	test   eax,0x48b706fa
  422fe5:	inc    esi
  422fe6:	lds    eax,FWORD PTR [ebx+0x0]
  422fe9:	ins    DWORD PTR es:[edi],dx
  422fea:	adc    ecx,ecx
  422fec:	mov    DWORD PTR [eax-0x562d7a44],ebp
  422ff2:	or     bl,BYTE PTR [esi-0x7d]
  422ff5:	popa   
  422ff6:	sbb    ah,BYTE PTR [eax]
  422ff8:	jae    0x423034
  422ffa:	cmp    BYTE PTR [eax],ah
  422ffc:	pop    edx
  422ffd:	mov    ebx,DWORD PTR [ebx+0x14]
  423000:	dec    eax
  423001:	inc    edx
  423002:	scas   eax,DWORD PTR es:[edi]
  423003:	adc    eax,0x42f85c
  423008:	inc    ecx
  423009:	out    0x97,al
  42300b:	push   0xffffffe6
  42300d:	(bad)  
  42300f:	adc    eax,0x420ff0
  423014:	(bad)  
  423015:	out    dx,al
  423016:	fld    DWORD PTR [edx+0x37e143]
  42301c:	call   0x38f30e
  423021:	jmpw   0x2faa
  423025:	repnz pop ebp
  423027:	mov    ah,0x0
  423029:	in     eax,dx
  42302a:	add    DWORD PTR [edx+0x3c],esp
  42302d:	ror    DWORD PTR [ebx-0x73],cl
  423030:	test   DWORD PTR [ebp+0x17fff7e3],ebx
  423036:	add    dl,BYTE PTR [eax-0x1]
  423039:	enter  0xe2d,0x40
  42303d:	lods   eax,DWORD PTR ds:[esi]
  42303e:	add    ah,0xc
  423041:	inc    eax
  423042:	and    al,0xfe
  423045:	mov    ds:0xad6a50e3,al
  42304a:	out    0x6b,al
  42304c:	or     al,0x0
  42304e:	and    al,0xad
  423050:	loopne 0x423050
  423052:	jb     0x423037
  423054:	div    DWORD PTR [ebx-0x6c]
  423057:	(bad)  
  423059:	adc    eax,0x3fd4f4
  42305e:	pop    ss
  42305f:	mov    edi,0x31ec74ff
  423064:	or     cl,BYTE PTR [ebp-0x41cdcdf]
  42306a:	arpl   di,bp
  42306c:	(bad)  [esi+0x3b]
  42306f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423070:	in     eax,0x66
  423072:	lods   eax,DWORD PTR ds:[esi]
  423073:	ins    BYTE PTR es:[edi],dx
  423074:	stos   DWORD PTR es:[edi],eax
  423075:	sbb    al,0x4b
  423077:	jbe    0x42305e
  423079:	pop    eax
  42307a:	sub    al,0x2b
  42307c:	(bad)  
  42307f:	push   0x63
  423081:	in     al,dx
  423082:	xchg   esp,eax
  423083:	push   edx
  423084:	dec    ebx
  423085:	call   0xb85652a9
  42308a:	int3   
  42308b:	aam    0x3f
  42308d:	add    BYTE PTR [edi],cl
  42308f:	aaa    
  423090:	cmc    
  423091:	inc    esp
  423092:	mov    DWORD PTR [ebx+0x7b],ecx
  423095:	into   
  423096:	fwait
  423097:	stos   DWORD PTR es:[edi],eax
  423098:	iret   
  423099:	test   ebp,ecx
  42309b:	mov    bl,0xfa
  42309d:	mov    eax,0x3f9d3c
  4230a2:	jmp    0x72ed:0x6001e7a3
  4230a9:	test   DWORD PTR [eax-0x24041ad2],eax
  4230af:	jnp    0x4230a0
  4230b1:	push   edx
  4230b2:	add    BYTE PTR [esi-0x68],ah
  4230b5:	dec    edi
  4230b6:	push   ebx
  4230b7:	sbb    DWORD PTR [eax+edi*1-0x3],ebp
  4230bb:	ret    
  4230bc:	or     eax,0x69d42f54
  4230c1:	mov    ds:0xe4ddb2ec,eax
  4230c6:	add    al,0x3e
  4230c8:	out    0xf4,eax
  4230ca:	xchg   ebx,eax
  4230cb:	aam    0x75
  4230cd:	add    al,0x8f
  4230d0:	add    BYTE PTR [ecx],bh
  4230d2:	fdivr  QWORD PTR [eax-0x16]
  4230d5:	(bad)  
  4230d7:	or     eax,ebp
  4230d9:	add    DWORD PTR [ecx+ebx*8+0x7],edi
  4230dd:	xor    bl,ah
  4230df:	push   esp
  4230e0:	test   bl,al
  4230e2:	in     al,0x6f
  4230e4:	push   esi
  4230e5:	rcr    ebx,1
  4230e7:	sub    al,0x84
  4230e9:	mov    bl,0xe4
  4230eb:	pop    edi
  4230ec:	push   esi
  4230ed:	mov    ecx,0xa38424db
  4230f2:	in     al,0x14
  4230f4:	pop    esi
  4230f5:	out    dx,al
  4230f6:	add    eax,ecx
  4230f8:	add    al,0x66
  4230fa:	pop    esi
  4230fb:	cmp    al,0xd4
  4230fd:	mov    ch,BYTE PTR [esi+0x28]
  423100:	jmp    0xdc70ad68
  423105:	jae    0x423145
  423107:	sub    al,0x2
  423109:	cld    
  42310a:	xor    dl,bl
  42310c:	call   0xdc622256
  423111:	ins    DWORD PTR es:[edi],dx
  423112:	ret    
  423113:	mov    BYTE PTR [esi+eiz*2],al
  423116:	add    BYTE PTR ss:[edi+edi*8],cl
  42311a:	pop    edx
  42311b:	ds cld 
  42311d:	lock aam 0x6
  423120:	jnp    0x423179
  423122:	add    eax,0x6e096903
  423127:	inc    eax
  423128:	lods   al,BYTE PTR ds:[esi]
  423129:	jg     0x4230dc
  42312b:	jmp    ebx
  42312d:	push   esp
  42312e:	fist   DWORD PTR [eax-0x14]
  423131:	cli    
  423132:	sbb    esp,esp
  423134:	iret   
  423135:	test   BYTE PTR [ecx],ch
  423137:	outs   dx,DWORD PTR ds:[esi]
  423138:	nop
  423139:	jg     0x4230df
  42313b:	jmp    0x4230d5
  42313d:	fist   DWORD PTR [ebx+ebp*8+0x3611d013]
  423144:	and    esp,ebx
  423146:	cli    
  423147:	ja     0x42319a
  423149:	fadd   DWORD PTR [eax]
  42314b:	xchg   esi,eax
  42314c:	pop    ecx
  42314d:	xor    ecx,ecx
  42314f:	sub    ebx,DWORD PTR [ebx-0x7b8dab25]
  423155:	add    DWORD PTR [ebp+0x1],0x13
  423159:	in     al,dx
  42315a:	adc    al,0x3a
  42315c:	mov    esi,0xcd623083
  423161:	cld    
  423162:	xchg   cl,ch
  423164:	scas   al,BYTE PTR es:[edi]
  423165:	lea    edi,[edi+eiz*8+0x76]
  423169:	jmp    0xda1990
  42316e:	sub    bh,0xac
  423171:	pop    es
  423172:	test   DWORD PTR ds:0x73000099,eax
  423178:	mov    es,WORD PTR [ecx]
  42317a:	adc    BYTE PTR [ebx+0x7e07a800],0xf9
  423181:	nop
  423182:	add    BYTE PTR [eax],al
  423184:	imul   edx,DWORD PTR [edx+0x19],0x19f660b
  42318b:	add    cl,ch
  42318d:	adc    cl,BYTE PTR [ebp+0x18]
  423190:	bound  ecx,QWORD PTR [ecx+0x5e74d72b]
  423196:	xlat   BYTE PTR ds:[ebx]
  423197:	out    0xe6,eax
  423199:	pop    ss
  42319a:	sbb    BYTE PTR ds:0x481b8ddc,ah
  4231a0:	adc    cl,al
  4231a2:	dec    ebp
  4231a3:	cmc    
  4231a4:	aas    
  4231a5:	fild   DWORD PTR [eax]
  4231a7:	or     esp,DWORD PTR [edi+edi*8-0x1]
  4231ab:	(bad)  
  4231ac:	call   0xb47303c8
  4231b1:	xchg   ebx,eax
  4231b2:	sub    eax,eax
  4231b4:	adc    bh,BYTE PTR [ebp-0x73]
  4231b7:	inc    ebp
  4231b8:	sbb    eax,0xe175d780
  4231bd:	sysexit 
  4231bf:	cld    
  4231c0:	daa    
  4231c1:	dec    ebp
  4231c2:	fld    QWORD PTR [eax]
  4231c4:	add    BYTE PTR [ebp-0x55018a12],al
  4231ca:	cmp    eax,0xba8aba01
  4231d0:	add    BYTE PTR [ebp-0x72bacd02],ch
  4231d6:	out    dx,eax
  4231d7:	jp     0x423192
  4231d9:	jge    0x4231d9
  4231db:	dec    DWORD PTR [edx+0x48cf0b8]
  4231e1:	add    BYTE PTR [ebx+ecx*4],ch
  4231e4:	or     BYTE PTR [ebx-0x6dcf72b],cl
  4231ea:	jle    0x42321d
  4231ec:	adc    al,0x57
  4231ee:	jl     0x4231dc
  4231f0:	sbb    al,BYTE PTR [edi+0x4589df2b]
  4231f6:	cmc    
  4231f7:	mov    bh,dh
  4231f9:	je     0x423240
  4231fb:	mov    eax,eax
  4231fd:	cmpxchg DWORD PTR [eax+0x172d0000],ebp
  423204:	sbb    eax,0x5
  423207:	pop    esp
  423208:	jbe    0x423209
  42320a:	stos   BYTE PTR es:[edi],al
  42320b:	mov    dl,BYTE PTR [ebp+0x1c]
  42320e:	mov    dh,0xd3
  423210:	sbb    al,0xb6
  423213:	dec    eax
  423214:	sbb    al,0x8b
  423216:	std    
  423217:	jo     0x423295
  423219:	sbb    BYTE PTR [ebx-0x76],ch
  42321c:	inc    ebp
  42321d:	sbb    BYTE PTR [esi-0x3],dh
  423220:	or     al,0x96
  423223:	scas   al,BYTE PTR es:[edi]
  423224:	lea    ecx,[esp+ecx*8-0x21]
  423228:	and    esi,eax
  42322a:	fs xor ah,dh
  42322d:	mov    DWORD PTR [eax],esp
  42322f:	scas   al,BYTE PTR es:[edi]
  423230:	xor    DWORD PTR [ebp-0x3b],0x70
  423234:	inc    edi
  423235:	add    DWORD PTR [ebp-0x55017a56],esp
  42323b:	add    eax,0x8a849474
  423241:	ret    0xb80f
  423244:	add    dh,BYTE PTR [ebp+0x0]
  423247:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423248:	data16 (bad) 
  42324b:	es mov ch,0xde
  42324e:	jne    0x4231f8
  423250:	fs dec ecx
  423252:	dec    BYTE PTR [ebx+0x3c]
  423255:	add    ebp,DWORD PTR [edi]
  423257:	in     al,0xaf
  423259:	xchg   DWORD PTR [edx+0x11edba8a],eax
  42325f:	or     ah,bl
  423261:	mov    WORD PTR [ebp-0x80],cs
  423264:	cmp    al,0x46
  423266:	(bad)  
  423267:	jecxz  0x4232bd
  423269:	clc    
  42326a:	cs jl  0x4232d9
  42326d:	xchg   dl,bh
  42326f:	arpl   si,si
  423271:	loopne 0x4232e8
  423273:	pop    esp
  423274:	icebp  
  423275:	loopne 0x42328c
  423277:	test   cl,bl
  423279:	aas    
  42327a:	add    BYTE PTR [edi],dl
  42327c:	mov    ds:0x6fc9fb10,eax
  423281:	in     al,dx
  423282:	and    al,0x12
  423284:	mov    ecx,esp
  423286:	xchg   ecx,ebx
  423288:	jecxz  0x423210
  42328a:	cmp    BYTE PTR [edi],bl
  42328c:	and    al,0xfc
  42328e:	xchg   BYTE PTR [esp+eiz*2+0x3c1b1a58],dl
  423295:	pusha  
  423296:	cmp    BYTE PTR [ebx],dl
  423298:	test   eax,0x659bf31c
  42329d:	mov    dl,0xfa
  42329f:	add    esi,DWORD PTR [edx]
  4232a1:	xchg   esp,eax
  4232a2:	add    DWORD PTR [ebx-0x57],ebx
  4232a5:	cmp    al,0xc9
  4232a7:	(bad)  
  4232a8:	fdivp  st(7),st
  4232aa:	sub    eax,0xd32dd400
  4232af:	sti    
  4232b0:	imul   ecx,DWORD PTR [edi],0x2911f4ec
  4232b6:	loope  0x42329f
  4232b8:	(bad)  
  4232b9:	(bad)  
  4232ba:	mov    ebx,0xd7cb88c
  4232bf:	inc    eax
  4232c0:	sbb    eax,DWORD PTR [ebx-0x1f]
  4232c3:	mov    WORD PTR [ebp+ebp*1+0xc298cb3],ss
  4232ca:	outs   dx,BYTE PTR ds:[esi]
  4232cb:	adc    al,BYTE PTR [edi-0x3]
  4232ce:	xor    BYTE PTR [eax+ebp*8-0x7b],ch
  4232d2:	test   eax,0xf14b0d03
  4232d7:	sub    al,0x5c
  4232d9:	xor    cl,BYTE PTR [edi-0x9]
  4232dc:	loop   0x42329c
  4232de:	and    al,0xe1
  4232e0:	xchg   esp,eax
  4232e1:	call   0xd8c0bc9e
  4232e6:	pop    esi
  4232e7:	mov    ebx,0x87f2bc19
  4232ec:	or     DWORD PTR [ecx],eax
  4232ee:	jmp    0xe5984df6
  4232f3:	sbb    ecx,0xffffffd7
  4232f6:	jmp    0xc9acbf51
  4232fb:	mov    cs,ecx
  4232fd:	mov    eax,0xb4f0ec41
  423302:	xchg   edx,eax
  423303:	loopne 0x42330e
  423305:	xor    DWORD PTR ds:[ebx],0xe0b9df3c
  42330c:	das    
  42330d:	jge    0x4232b8
  42330f:	push   edi
  423310:	add    BYTE PTR [esi+0x7],bh
  423313:	cmp    al,BYTE PTR [esi+0x28]
  423316:	xor    DWORD PTR [esi-0x38],ebx
  423319:	fs push 0x19
  42331c:	inc    ecx
  42331d:	sbb    DWORD PTR [esi-0x6f],ecx
  423320:	jmp    0x423366
  423322:	retf   0xe053
  423325:	adc    ecx,DWORD PTR [esi-0x23]
  423328:	mov    esp,gs
  42332a:	cmp    DWORD PTR [eax-0x18a8107a],esp
  423330:	adc    al,0xdf
  423332:	mov    eax,DWORD PTR [eax]
  423334:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423335:	mov    edi,0xbe6ac71f
  42333a:	in     eax,dx
  42333b:	push   eax
  42333c:	je     0x423396
  42333e:	in     eax,dx
  42333f:	mov    ebp,fs
  423341:	xchg   esp,eax
  423342:	xor    DWORD PTR [eax+0x60],edx
  423345:	push   edx
  423346:	int3   
  423347:	sti    
  423348:	hlt    
  423349:	addr16 repnz aas 
  42334c:	jmp    0x964ef061
  423351:	adc    bh,BYTE PTR [esi]
  423353:	test   al,0x99
  423355:	pusha  
  423356:	fist   DWORD PTR ds:0x178db9
  42335c:	jb     0x423343
  42335e:	or     BYTE PTR [edi-0x18bcdb10],al
  423364:	call   0x62500afa
  423369:	(bad)  
  42336b:	jg     0x42331a
  42336d:	test   BYTE PTR [eax-0x4c],ch
  423370:	jae    0x42334a
  423372:	add    BYTE PTR [ecx+0x1f380024],cl
  423378:	enter  0xbe18,0xed
  42337c:	push   esi
  42337d:	scas   eax,DWORD PTR es:[edi]
  42337e:	fstp   st(3)
  423380:	add    DWORD PTR [ecx-0x69057d64],edx
  423386:	(bad)  
  423388:	test   DWORD PTR [edx-0x799d825d],esi
  42338e:	dec    ebx
  42338f:	fild   DWORD PTR [esi+0x5a3b4324]
  423395:	adc    cl,BYTE PTR [ecx-0x6a]
  423398:	or     cl,ch
  42339a:	int3   
  42339b:	jg     0x423389
  42339d:	push   0x4
  42339f:	lock dec esi
  4233a1:	mov    bh,0xca
  4233a3:	jg     0x423395
  4233a5:	ret    
  4233a6:	xchg   ecx,eax
  4233a7:	jg     0x42337f
  4233a9:	mov    bl,0x20
  4233ab:	dec    ebp
  4233ac:	hlt    
  4233ad:	add    BYTE PTR [esi-0x43],ah
  4233b0:	xor    esi,edx
  4233b2:	pop    ds
  4233b3:	(bad)  
  4233b4:	xor    BYTE PTR [eax],0xe6
  4233b7:	mov    al,0x6a
  4233b9:	sbb    esi,eax
  4233bb:	aaa    
  4233bc:	hlt    
  4233bd:	ja     0x423388
  4233bf:	pop    esp
  4233c0:	cmp    DWORD PTR [ebp-0x43],0x5c
  4233c4:	test   DWORD PTR [eax-0x57],edi
  4233c7:	aaa    
  4233c8:	adc    DWORD PTR [ecx],ebp
  4233ca:	or     BYTE PTR [edi+0x17d4c5fb],ch
  4233d0:	hlt    
  4233d1:	jae    0x42335f
  4233d3:	repnz mov edi,0xfffd3ee9
  4233d9:	inc    DWORD PTR [eax]
  4233db:	(bad)  
  4233dc:	mov    ebx,0x2b738afe
  4233e1:	repnz (bad) 
  4233e3:	mov    eax,0xb08900b5
  4233e8:	lods   al,BYTE PTR ds:[esi]
  4233e9:	mov    DWORD PTR [ebp+0x49],edi
  4233ec:	cs pop es
  4233ee:	push   edi
  4233ef:	inc    cl
  4233f1:	dec    BYTE PTR [edi+0x45]
  4233f4:	pop    ds
  4233f5:	test   esi,edi
  4233f7:	and    al,BYTE PTR [ebp-0x1a907bb]
  4233fd:	jp     0x423464
  4233ff:	cmc    
  423400:	add    DWORD PTR [ebp+0x7b49a9ff],eax
  423406:	jge    0x42342d
  423408:	add    dh,BYTE PTR [eax+edx*1-0x30]
  42340c:	dec    eax
  42340d:	hlt    
  42340e:	push   eax
  42340f:	mov    al,ds:0x550f848
  423414:	lahf   
  423415:	idiv   bh
  423417:	mov    ds:0x78f47d8a,al
  42341c:	mov    dh,0x74
  42341e:	xor    DWORD PTR [esi+0x60],edi
  423421:	clc    
  423422:	add    dl,dh
  423424:	jge    0x423458
  423426:	add    DWORD PTR [edi+eiz*8-0x20967901],edx
  42342d:	nop
  42342e:	inc    ebp
  42342f:	loopne 0x4234a8
  423431:	nop
  423432:	inc    ebp
  423433:	fdiv   QWORD PTR [edi-0x26]
  423436:	outs   dx,DWORD PTR ds:[esi]
  423437:	test   BYTE PTR [esi],cl
  423439:	pop    eax
  42343a:	or     al,0x6a
  42343c:	es pop eax
  42343e:	lock add BYTE PTR [edx+eax*1+0x5bc3fbe1],bh
  423446:	mov    edi,0x4d0100b
  42344b:	add    BYTE PTR [edx+eiz*2-0x15400ba0],dl
  423452:	xchg   BYTE PTR [ebp-0x74],dh
  423455:	jge    0x4234d5
  423457:	jge    0x4233dd
  423459:	fisttp WORD PTR [edx]
  42345b:	test   DWORD PTR [edx],edi
  42345d:	out    0xff,eax
  42345f:	(bad)  
  423460:	cld    
  423461:	mov    eax,DWORD PTR [esi+0x53b69440]
  423467:	lock ins BYTE PTR es:[edi],dx
  423469:	ss pop ecx
  42346b:	cli    
  42346c:	jae    0x4234d8
  42346e:	fdiv   st(1),st
  423470:	loope  0x42345b
  423472:	adc    al,al
  423474:	sbb    DWORD PTR [edi-0x189277f3],esp
  42347a:	(bad)  
  42347b:	dec    DWORD PTR [edi+0x170b101c]
  423481:	xchg   DWORD PTR [eax+eax*1],eax
  423484:	xchg   esp,eax
  423485:	push   edx
  423486:	pop    ecx
  423487:	adc    al,0x9
  423489:	mov    bl,0xc5
  42348b:	daa    
  42348c:	mov    dl,0xdb
  42348e:	add    BYTE PTR [edx],bh
  423490:	xchg   edi,eax
  423491:	cld    
  423492:	xlat   BYTE PTR ds:[ebx]
  423493:	or     ebx,DWORD PTR [eax]
  423495:	mov    ds:0x62940004,eax
  42349a:	(bad)
  42349d:	imul   ebx,edx,0xac001dfb
  4234a3:	repz add BYTE PTR [eax],bl
  4234a6:	shr    dl,0x87
  4234a9:	inc    edx
  4234aa:	add    cl,ch
  4234ac:	add    ebp,edi
  4234ae:	or     eax,0x3084514a
  4234b3:	inc    edx
  4234b4:	div    DWORD PTR [ebx+0x1303a8ee]
  4234ba:	(bad)  
  4234bb:	in     eax,0x46
  4234bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4234be:	and    DWORD PTR ds:0x1d4acf10,0xb9d849dd
  4234c8:	fsub   QWORD PTR [ecx-0x6bbc04f0]
  4234ce:	mov    DWORD PTR [ebx-0x22b6ecf9],esp
  4234d4:	sub    ah,cl
  4234d6:	and    BYTE PTR ds:0x9e894510,0xf3
  4234dd:	xchg   edx,eax
  4234de:	mov    esp,0x4e13065e
  4234e3:	stc    
  4234e4:	add    BYTE PTR [esi+0x0],dl
  4234e7:	and    al,0xd8
  4234e9:	in     eax,0x30
  4234eb:	shl    dh,cl
  4234ed:	ret    
  4234ee:	jmp    0xdcf5:0xbceb0428
  4234f5:	repz lock rcr BYTE PTR [edx-0x754d2d25],1
  4234fd:	ret    
  4234fe:	lock pop edi
  423500:	pop    eax
  423501:	mov    al,ds:0x95dd2cba
  423506:	out    0x3a,eax
  423508:	add    DWORD PTR [eax],0x56e9d8b9
  42350e:	ja     0x423497
  423510:	jecxz  0x42349a
  423512:	scas   al,BYTE PTR es:[edi]
  423513:	cld    
  423514:	ins    DWORD PTR es:[edi],dx
  423515:	dec    eax
  423516:	test   BYTE PTR [edi],ah
  423518:	xor    DWORD PTR [ebx+ebx*1],0x1800bc
  42351f:	sar    DWORD PTR [edi+0x6f],cl
  423522:	call   0x1aa37ab0
  423527:	shl    DWORD PTR [esi+ebx*1-0x3f],0x7b
  42352c:	fadd   DWORD PTR [ecx+0x15]
  42352f:	dec    esp
  423530:	sti    
  423531:	dec    esi
  423532:	push   ds
  423533:	ds hlt 
  423535:	jb     0x4234f6
  423537:	jnp    0x423596
  423539:	loope  0x423547
  42353b:	aam    0x86
  42353d:	mov    esp,0xf14c84cb
  423542:	xchg   esi,eax
  423543:	call   0xd823a0f5
  423548:	test   BYTE PTR [ecx],ch
  42354a:	arpl   bp,si
  42354c:	xchg   bh,ch
  42354e:	xchg   esp,eax
  42354f:	rcl    DWORD PTR [edx+0xe],cl
  423552:	inc    edx
  423553:	fcom   DWORD PTR [eax+0x6]
  423556:	stos   BYTE PTR es:[edi],al
  423557:	and    edx,DWORD PTR [edx]
  423559:	test   eax,0x6236d397
  42355e:	cdq    
  42355f:	push   ebx
  423560:	(bad)  
  423561:	fst    QWORD PTR [ecx-0x4]
  423564:	add    dh,bl
  423566:	(bad)  
  423567:	mov    DWORD PTR [edi],esi
  423569:	fsubrp st(5),st
  42356b:	fsubr  st,st(0)
  42356d:	das    
  42356e:	add    BYTE PTR [ebx],bl
  423570:	(bad)  
  423571:	sti    
  423572:	arpl   bp,dx
  423574:	xlat   BYTE PTR ds:[ebx]
  423575:	pop    ebx
  423576:	daa    
  423577:	mov    ds:0x97d5bec9,eax
  42357c:	sub    eax,0xe41bc587
  423581:	and    BYTE PTR [edx],bl
  423583:	xchg   BYTE PTR [ebx],ah
  423585:	sar    BYTE PTR [esi],0x13
  423588:	push   ebp
  423589:	or     BYTE PTR [eax-0x2b],dh
  42358c:	fmul   QWORD PTR [ecx+0x4319402c]
  423592:	in     eax,dx
  423593:	sahf   
  423594:	jle    0x423565
  423596:	add    BYTE PTR [edi+edi*8],ch
  423599:	dec    DWORD PTR [eax+0x7783e870]
  42359f:	in     eax,0xf9
  4235a1:	je     0x42358f
  4235a3:	dec    esi
  4235a4:	xchg   edx,eax
  4235a5:	div    DWORD PTR [esi+0x5]
  4235a8:	or     BYTE PTR [esi+0xc],0xe7
  4235ac:	push   es
  4235ad:	dec    edi
  4235ae:	call   0x3a1dc5
  4235b3:	jno    0x423571
  4235b5:	pop    es
  4235b6:	test   BYTE PTR [edx-0x3],bh
  4235b9:	(bad)  
  4235ba:	call   FWORD PTR [edx+0x338b082e]
  4235c0:	sti    
  4235c1:	popa   
  4235c2:	adc    BYTE PTR [edx],ah
  4235c4:	out    0xa1,eax
  4235c6:	in     al,dx
  4235c7:	jp     0x423580
  4235c9:	test   al,al
  4235cb:	stos   BYTE PTR es:[edi],al
  4235cc:	push   edx
  4235cd:	mov    DWORD PTR [ecx],eax
  4235cf:	mov    ebp,0x4682fe
  4235d4:	mov    eax,ds:0xccf05d1b
  4235d9:	pop    ss
  4235da:	hlt    
  4235db:	mov    edi,ebx
  4235dd:	into   
  4235de:	mov    BYTE PTR [ebp-0x77],al
  4235e1:	jnp    0x4235db
  4235e3:	push   es
  4235e4:	push   0x7c
  4235e6:	iret   
  4235e7:	add    BYTE PTR [ebp-0x2],ch
  4235ea:	add    BYTE PTR [ebx],0xee
  4235ed:	mov    ch,0xfe
  4235ef:	push   cs
  4235f0:	dec    DWORD PTR [ebp+0x0]
  4235f3:	add    BYTE PTR [ebp-0xd],bh
  4235f6:	inc    esp
  4235f7:	cld    
  4235f8:	push   0x7f
  4235fa:	jg     0x4235fc
  4235fc:	ins    DWORD PTR es:[edi],dx
  4235fd:	inc    BYTE PTR [esi]
  4235ff:	mov    bh,0x76
  423601:	add    dh,ch
  423603:	shl    DWORD PTR [ecx+0x42],0x6d
  423607:	or     BYTE PTR [edx+edx*8],0x6
  42360b:	mov    dh,0x4
  42360d:	scas   eax,DWORD PTR es:[edi]
  42360e:	fstp   DWORD PTR [ebx]
  423610:	xchg   esp,eax
  423611:	mov    al,ds:0x673ce182
  423616:	les    esp,FWORD PTR [eax]
  423618:	xchg   ebx,eax
  423619:	adc    cl,ah
  42361b:	mov    ecx,ecx
  42361d:	xchg   DWORD PTR [edx+0x35d1a2f8],eax
  423623:	jg     0x4235f9
  423625:	dec    ebp
  423626:	sbb    al,0x3f
  423628:	mov    ?,WORD PTR [ebp+ecx*2-0x77347c05]
  42362f:	aas    
  423630:	call   0xd7c5:0x19104e2a
  423637:	push   eax
  423638:	add    ah,ch
  42363a:	mov    ch,0xa4
  42363c:	cli    
  42363d:	(bad)  [esi-0x29]
  423640:	add    DWORD PTR [eax-0x29],edx
  423643:	mov    dl,BYTE PTR [ebp-0x64]
  423646:	xor    al,0x48
  423648:	hlt    
  423649:	gs dec esp
  42364b:	dec    eax
  42364c:	lock gs repnz dec edi
  423650:	loopne 0x423671
  423652:	pop    ds
  423653:	das    
  423654:	sti    
  423655:	and    edi,ebp
  423657:	mov    DWORD PTR [ebp-0x60],eax
  42365a:	out    dx,eax
  42365b:	inc    esi
  42365c:	std    
  42365d:	fwait
  42365e:	sar    BYTE PTR [edx-0x40],cl
  423661:	or     bh,ah
  423663:	(bad)  
  423664:	inc    ebp
  423665:	jo     0x423649
  423667:	dec    ebx
  423668:	clc    
  423669:	cmp    al,0xe7
  42366b:	jg     0x42366d
  42366d:	xchg   esp,eax
  42366e:	scas   eax,DWORD PTR es:[edi]
  42366f:	inc    edi
  423670:	jle    0x4236e4
  423672:	stos   BYTE PTR es:[edi],al
  423673:	lea    edi,[ebp-0x64]
  423676:	pop    esi
  423677:	add    eax,0x5bbd929
  42367c:	fcom   DWORD PTR [edi]
  42367e:	adc    al,0xd8
  423680:	add    ah,BYTE PTR [ebx+0x4bfb5b66]
  423686:	mov    ds:0x487d85,al
  42368b:	jmp    0xd313bce1
  423690:	mov    edi,ss
  423692:	cld    
  423693:	add    bl,ch
  423695:	sub    DWORD PTR [eax],eax
  423697:	jmp    0x83d63987
  42369c:	fld    DWORD PTR [eax]
  42369e:	adc    edi,DWORD PTR [eax-0x877429c]
  4236a4:	jno    0x4236f5
  4236a6:	add    cl,dl
  4236a8:	hlt    
  4236a9:	sar    DWORD PTR [edx+0x0],cl
  4236ac:	mov    dh,0x6b
  4236ae:	int    0xff
  4236b0:	call   0x476632b8
  4236b5:	(bad)  
  4236b7:	sub    al,0x41
  4236b9:	add    esp,DWORD PTR [edx-0x2e]
  4236bc:	inc    edx
  4236bd:	fldenv [ecx-0x30]
  4236c0:	push   ecx
  4236c1:	fist   DWORD PTR ds:0x96d232d2
  4236c7:	(bad)  
  4236c8:	fnstcw WORD PTR [edi+0x25]
  4236cb:	add    cl,ch
  4236cd:	add    ebp,DWORD PTR [esp+ebx*8]
  4236d0:	pusha  
  4236d1:	inc    ebp
  4236d2:	xchg   esp,eax
  4236d3:	sar    esp,1
  4236d5:	out    0x9a,eax
  4236d7:	inc    eax
  4236d8:	jmp    0x3278cc8
  4236dd:	fst    DWORD PTR [ebx]
  4236df:	cmp    ch,ch
  4236e1:	mov    esi,gs
  4236e3:	clc    
  4236e4:	pop    edi
  4236e5:	aas    
  4236e6:	mov    BYTE PTR [ecx+esi*8+0x6e58f207],al
  4236ed:	add    al,0xfb
  4236ef:	enter  0x55ed,0xf5
  4236f3:	or     ebp,DWORD PTR [eax+ebx*8]
  4236f6:	out    0x2c,eax
  4236f8:	pop    esi
  4236f9:	dec    esp
  4236fa:	cwde   
  4236fb:	xlat   BYTE PTR ds:[ebx]
  4236fc:	test   al,0x3
  4236fe:	xchg   esp,eax
  4236ff:	add    BYTE PTR [ecx],cl
  423701:	push   eax
  423702:	add    al,bl
  423704:	add    DWORD PTR [eax],0xffffffb1
  423707:	xchg   ebx,eax
  423708:	push   edx
  423709:	cmp    esi,DWORD PTR [edi-0x1c8bfdaa]
  42370f:	or     dh,bh
  423711:	jmp    DWORD PTR [edx-0x28]
  423714:	add    bh,bh
  423716:	mov    al,ds:0x2ab9cd0d
  42371b:	cwde   
  42371c:	fcomp  st(5)
  42371e:	imul   edi,DWORD PTR ds:0x63a984cc,0x18bafb21
  423728:	(bad)  
  423729:	sti    
  42372a:	xor    BYTE PTR [eax+0x0],bl
  42372d:	push   ebx
  42372f:	xchg   edi,eax
  423730:	xchg   esi,eax
  423731:	aas    
  423732:	jmp    0xfd3d68df
  423737:	xchg   edx,esi
  423739:	aas    
  42373a:	jmp    0x2dc1074f
  42373f:	xchg   ebx,eax
  423740:	add    DWORD PTR ds:0x1031e9,eax
  423746:	bound  esp,QWORD PTR [edx-0x8]
  423749:	xchg   dl,ch
  42374b:	outs   dx,BYTE PTR ds:[esi]
  42374c:	inc    ebp
  42374d:	cld    
  42374e:	jmp    0x5f9b:0x1d7d4fff
  423755:	cwde   
  423756:	or     ebx,0xbce93f89
  42375c:	cmc    
  42375d:	out    dx,eax
  42375e:	fist   DWORD PTR [edi+0x0]
  423761:	sti    
  423762:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423763:	jg     0x4236ec
  423765:	inc    ebp
  423766:	add    DWORD PTR [eax],eax
  423768:	adc    BYTE PTR [ebp-0x14],al
  42376b:	shl    DWORD PTR [eax+0x15f61c43],1
  423771:	adc    dl,bh
  423773:	fimul  WORD PTR [ebx+0x1f]
  423776:	rcl    BYTE PTR [edx],0xd5
  423779:	in     al,0x5b
  42377b:	repnz push edi
  42377d:	sub    dh,bl
  42377f:	add    BYTE PTR ds:0x39c2c90b,dh
  423785:	add    ecx,DWORD PTR [esi-0x75]
  423788:	or     eax,0x55086eb7
  42378d:	cmc    
  42378e:	cmp    dh,0xf2
  423791:	mov    dh,0x6e
  423793:	adc    BYTE PTR ds:0x2fe811d,al
  423799:	mov    bh,0x6e
  42379b:	sbb    al,0x15
  42379d:	and    eax,0xb712fe81
  4237a2:	outs   dx,BYTE PTR ds:[esi]
  4237a3:	sub    al,0x25
  4237a5:	int    0x80
  4237a7:	inc    BYTE PTR [edx+0x15306eb7]
  4237ad:	aad    0x80
  4237af:	(bad)  
  4237b0:	jb     0x423769
  4237b2:	outs   dx,BYTE PTR ds:[esi]
  4237b3:	xor    al,0x45
  4237b5:	std    
  4237b6:	cmp    dh,0x42
  4237b9:	jnp    0x423829
  4237bb:	inc    eax
  4237bc:	js     0x42377c
  4237be:	je     0x4237cd
  4237c0:	push   edx
  4237c1:	(bad)  
  4237c2:	out    0xfb,eax
  4237c4:	cmp    eax,0x5556f7b6
  4237c9:	mov    cl,0x80
  4237cb:	inc    BYTE PTR [eax]
  4237cd:	jb     0x4237e5
  4237cf:	mov    ebx,0xe3cf1bff
  4237d4:	jmp    0x423813
  4237d6:	mov    dh,0xf7
  4237d8:	dec    DWORD PTR [ebx]
  4237da:	sti    
  4237db:	out    0xe3,eax
  4237dd:	sub    eax,0x1bfff7b6
  4237e2:	shl    ebx,cl
  4237e4:	(bad)  
  4237e6:	mov    dh,0xf7
  4237e8:	ret    
  4237e9:	sub    bh,BYTE PTR [ebx-0x8]
  4237ec:	test   DWORD PTR [edx+0x3e],esi
  4237ef:	push   cs
  4237f0:	push   esi
  4237f1:	push   es
  4237f2:	mov    edi,0x195f663
  4237f7:	je     0x42381d
  4237f9:	xchg   esp,eax
  4237fa:	jecxz  0x42387a
  4237fc:	jmp    0xc75b:0xfbc5bf7c
  423803:	inc    edx
  423804:	jne    0x42384f
  423806:	out    dx,al
  423807:	xor    ch,cl
  423809:	add    ebx,DWORD PTR [eax-0x2b]
  42380c:	sti    
  42380d:	jmp    0x30c21b74
  423812:	mov    al,ds:0x5a9c4586
  423817:	jecxz  0x423875
  423819:	(bad)  
  42381a:	or     eax,0xe3a4fb2b
  42381f:	mov    BYTE PTR [eax+esi*2-0x41],dh
  423823:	out    0xba,eax
  423825:	mov    cl,BYTE PTR [esi-0x2e]
  423828:	test   ah,dl
  42382a:	out    0x7b,al
  42382c:	pushf  
  42382d:	xchg   ebp,eax
  42382e:	xlat   BYTE PTR ds:[ebx]
  42382f:	jmp    FWORD PTR [esi]
  423831:	add    bh,bl
  423833:	mov    ebp,0xd3b844ba
  423838:	inc    DWORD PTR [eax]
  42383a:	sbb    al,0x94
  42383c:	sbb    ecx,DWORD PTR [edi]
  42383e:	in     al,dx
  42383f:	pop    eax
  423840:	or     eax,0xcf52dbfb
  423845:	or     edx,DWORD PTR [edx]
  423847:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423848:	sbb    ecx,DWORD PTR [edi]
  42384a:	fwait
  42384b:	push   ebp
  42384c:	cmp    eax,DWORD PTR [eax+ebp*4]
  42384f:	push   0x2e
  423851:	dec    edi
  423852:	fs (bad) 
  423854:	rcl    BYTE PTR ds:0x3fd43c,cl
  42385a:	inc    edx
  42385b:	pusha  
  42385c:	cmp    esp,DWORD PTR [eax+eax*4]
  42385f:	jmp    DWORD PTR [ebx-0x80]
  423862:	call   0x2df:0xb85c1c06
  423869:	test   dl,cl
  42386b:	fdivr  st,st(7)
  42386d:	jmp    edi
  42386f:	push   0x69
  423871:	jmp    esi
  423873:	add    BYTE PTR [esi],dh
  423875:	aad    0xe8
  423877:	and    al,0x35
  423879:	aad    0xe0
  42387b:	and    al,0x25
  42387d:	aad    0xe8
  42387f:	and    al,0x15
  423881:	aad    0x81
  423883:	dec    eax
  423884:	fadd   QWORD PTR [ebx-0x6c]
  423887:	ja     0x4238ae
  423889:	and    BYTE PTR [eax+0x9],dh
  42388c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42388d:	add    eax,0x3e7f018
  423892:	xchg   esp,eax
  423893:	jns    0x4238c1
  423895:	or     al,0x0
  423897:	sbb    eax,DWORD PTR [eax]
  423899:	imul   ebx,DWORD PTR [esp+ecx*4-0x1],0x40a6c052
  4238a1:	jmp    0xb5d0c9f5
  4238a6:	dec    esi
  4238a7:	push   esp
  4238a8:	add    BYTE PTR [esi-0x32b3eb36],dh
  4238ae:	inc    ecx
  4238af:	add    dh,BYTE PTR [edx]
  4238b1:	fisubr DWORD PTR [esi-0x2b]
  4238b4:	ss push 0x690094e3
  4238ba:	add    al,0x15
  4238bc:	mov    bh,0xe9
  4238be:	int3   
  4238bf:	nop
  4238c0:	test   BYTE PTR [eax-0xeb020d0],bh
  4238c6:	imul   esp,esp,0x55
  4238c9:	test   eax,0xd53cf03
  4238ce:	dec    eax
  4238cf:	data16 int 0xb5
  4238d2:	pop    ds
  4238d3:	push   esp
  4238d4:	int    0xfc
  4238d6:	push   ebx
  4238d7:	mov    DWORD PTR [eax-0x17],eax
  4238da:	mov    BYTE PTR [eax+ecx*1-0x69e7faea],ah
  4238e1:	jmp    0xde9ccce9
  4238e6:	xchg   BYTE PTR [eax],dl
  4238e8:	and    eax,0xa87c3bb1
  4238ed:	add    BYTE PTR [edi],bl
  4238ef:	imul   ecx,eax,0x97e968
  4238f5:	mov    al,ds:0xc3844953
  4238fa:	cmp    DWORD PTR [eax],eax
  4238fc:	mov    edx,0x734515c7
  423901:	or     al,0x0
  423903:	inc    ebx
  423904:	pop    esi
  423905:	jge    0x423983
  423907:	or     eax,0x7fe828e0
  42390c:	stc    
  42390d:	(bad)  
  42390e:	sti    
  42390f:	(bad)  
  423910:	jmp    0x2028:0x9ee686f8
  423917:	pop    ds
  423918:	test   bh,al
  42391a:	jo     0x423919
  42391c:	adc    al,BYTE PTR [ebp+0x24]
  42391f:	and    DWORD PTR [eax+0x7d],ebp
  423922:	inc    esp
  423923:	lds    edi,FWORD PTR [ebx+0x30]
  423926:	call   0xfc090d30
  42392b:	push   0x4b
  42392d:	std    
  42392e:	test   BYTE PTR [ecx-0x16980c97],ch
  423934:	xchg   edi,eax
  423935:	add    BYTE PTR [eax+0x74c7c8d3],ah
  42393b:	add    eax,0xfcfb2eb4
  423940:	jnp    0x423937
  423942:	aas    
  423943:	jmp    0xe5668e08
  423948:	mov    edi,0xe03f7b4c
  42394d:	add    DWORD PTR [ebx],0x36
  423950:	addr16 sbb bl,bh
  423953:	mov    ecx,0xbf4f3b9b
  423958:	enter  0x7ff5,0xf4
  42395c:	push   edi
  42395d:	add    BYTE PTR [edi+0x11],bh
  423960:	add    BYTE PTR [esi+0x12ba2e55],dl
  423966:	inc    ebp
  423967:	and    al,0x0
  423969:	imul   ecx,DWORD PTR [edi],0x1751448d
  42396f:	push   eax
  423970:	push   0x1fffff5e
  423975:	and    ecx,DWORD PTR [esp+eax*2-0x746dc]
  42397c:	(bad)  
  42397d:	jge    0x4239cb
  42397f:	pop    esp
  423980:	and    al,0x81
  423982:	scas   eax,DWORD PTR es:[edi]
  423983:	adc    eax,0x3f60a4
  423988:	adc    DWORD PTR [ebp+0x5],0x75
  42398c:	or     bh,BYTE PTR [eax+esi*1+0x3f52024]
  423993:	add    BYTE PTR [eax],al
  423995:	xor    DWORD PTR [edi],0x3b30ff4e
  42399b:	adc    eax,0x74ae3d40
  4239a0:	and    al,0x51
  4239a2:	scas   al,BYTE PTR es:[edi]
  4239a3:	adc    eax,0x3f207c
  4239a8:	call   DWORD PTR [ecx]
  4239aa:	and    ebx,DWORD PTR [eax]
  4239ac:	jmp    eax
  4239ae:	cmp    dl,BYTE PTR ds:0x44b0ed40
  4239b4:	and    al,0xde
  4239b6:	jle    0x423a34
  4239b8:	and    al,0xee
  4239ba:	add    al,0x7
  4239bc:	cmp    BYTE PTR [esi-0x52],0xf7
  4239c0:	dec    DWORD PTR [edx+0x28]
  4239c3:	and    al,0x34
  4239c5:	add    BYTE PTR [ebp+0x5],dl
  4239c8:	ja     0x4239c8
  4239ca:	pop    edx
  4239cb:	scas   eax,DWORD PTR es:[edi]
  4239cc:	je     0x4239f2
  4239ce:	xchg   ebp,eax
  4239cf:	lods   al,BYTE PTR ds:[esi]
  4239d0:	clc    
  4239d1:	jle    0x42395e
  4239d3:	scas   eax,DWORD PTR es:[edi]
  4239d4:	push   edi
  4239d5:	pop    esi
  4239d6:	mov    esi,0xa08b53be
  4239db:	adc    DWORD PTR [edx+0x74adbd04],edi
  4239e1:	and    al,0x94
  4239e3:	lods   eax,DWORD PTR ds:[esi]
  4239e4:	xlat   BYTE PTR ds:[ebx]
  4239e5:	in     al,0x1a
  4239e7:	sti    
  4239e8:	into   
  4239e9:	sti    
  4239ea:	or     BYTE PTR [edi+eax*1-0x2eb59018],bh
  4239f1:	sti    
  4239f2:	out    dx,al
  4239f3:	mov    bl,0x7c
  4239f5:	jae    0x423983
  4239f7:	sub    al,0x50
  4239f9:	and    al,0xa4
  4239fb:	aas    
  4239fc:	(bad)  
  4239fe:	inc    ecx
  4239ff:	stos   DWORD PTR es:[edi],eax
  423a00:	into   
  423a01:	mov    eax,eax
  423a03:	sti    
  423a04:	out    dx,eax
  423a05:	out    0xba,al
  423a07:	cmp    eax,0x54976620
  423a0c:	inc    ebx
  423a0d:	and    al,0x74
  423a0f:	out    0x7a,eax
  423a11:	inc    esp
  423a12:	js     0x423a0b
  423a14:	ss call 0xfc139670
  423a1a:	retf   
  423a1b:	push   eax
  423a1c:	inc    ebx
  423a1d:	and    al,0x7c
  423a1f:	outs   dx,DWORD PTR ds:[esi]
  423a20:	pushf  
  423a21:	jp     0x423a45
  423a23:	jae    0x423a9f
  423a25:	inc    esp
  423a26:	jo     0x4239eb
  423a28:	cmp    al,0x0
  423a2b:	adc    ecx,esp
  423a2d:	pop    es
  423a2e:	das    
  423a2f:	or     edi,DWORD PTR [edi+0x5ead72c2]
  423a35:	inc    ebx
  423a36:	and    al,0x9c
  423a38:	sub    al,0x3
  423a3a:	mov    eax,0x1557ffad
  423a3f:	jmp    0x423a28
  423a41:	into   
  423a42:	adc    eax,0x3fc55c
  423a47:	inc    esp
  423a48:	pop    esi
  423a49:	inc    ebx
  423a4a:	and    al,0xb0
  423a4c:	inc    edx
  423a4d:	adc    edi,DWORD PTR [eax-0xfd944]
  423a53:	ret    
  423a54:	pop    esi
  423a55:	inc    ebx
  423a56:	and    al,0x70
  423a58:	mov    ds:0x26f80a,al
  423a5d:	cmp    bh,BYTE PTR [esi+0x28]
  423a60:	and    al,0x1
  423a62:	fcomp  QWORD PTR [eax]
  423a64:	dec    ebx
  423a65:	adc    edx,edx
  423a67:	or     DWORD PTR [ebp-0x3b],eax
  423a6a:	out    dx,eax
  423a6b:	jecxz  0x423ae8
  423a6d:	lods   eax,DWORD PTR ds:[esi]
  423a6e:	daa    
  423a6f:	lods   al,BYTE PTR ds:[esi]
  423a70:	xor    BYTE PTR [edi+eax*2-0x48],ch
  423a74:	adc    al,0x99
  423a76:	cmp    DWORD PTR [edx+ebx*4-0x4c],ebp
  423a7a:	shr    BYTE PTR [edi+0x75],cl
  423a7d:	loope  0x423a8c
  423a7f:	arpl   WORD PTR [ebx+0x62],dx
  423a82:	fcmovnb st,st(4)
  423a84:	leave  
  423a85:	rcl    cl,cl
  423a87:	shl    DWORD PTR [ebp-0x43],0x33
  423a8b:	in     eax,0x2d
  423a8d:	sbb    edi,DWORD PTR [ebx+0x0]
  423a90:	xchg   edi,eax
  423a91:	or     eax,0xf8df7b9e
  423a96:	mov    cl,0x53
  423a98:	nop
  423a99:	leave  
  423a9a:	cmp    esp,edi
  423a9c:	cmp    edi,edi
  423a9e:	sbb    eax,0x127b2fd1
  423aa3:	or     ah,al
  423aa5:	ja     0x423a92
  423aa7:	rol    BYTE PTR [ecx-0x6bbc08b8],1
  423aad:	ja     0x423adb
  423aaf:	rcr    BYTE PTR [ecx],1
  423ab1:	inc    ebx
  423ab2:	jge    0x423ae8
  423ab4:	data16 fmul st,st(5)
  423ab7:	retf   
  423ab8:	dec    eax
  423aba:	pop    esi
  423abb:	or     bl,BYTE PTR [ebx]
  423abd:	cmp    esp,DWORD PTR [ebp+0x7c]
  423ac0:	mov    bh,bh
  423ac2:	pop    ds
  423ac3:	repnz addr16 push ds
  423ac6:	mov    dh,0x34
  423ac8:	inc    edi
  423ac9:	pop    eax
  423aca:	xchg   esi,eax
  423acb:	repnz xchg ecx,eax
  423acd:	add    BYTE PTR [esi-0x670d30cc],dl
  423ad3:	cmc    
  423ad4:	add    DWORD PTR [eax],0x0
  423ad7:	pusha  
  423ad8:	dec    ebp
  423ad9:	cld    
  423ada:	sub    cl,BYTE PTR ss:[esp+eax*1-0x50]
  423adf:	call   0xd83d31ac
  423ae4:	mov    edi,0xc5177dd7
  423ae9:	sbb    eax,eax
  423aeb:	scas   eax,DWORD PTR es:[edi]
  423aec:	sar    BYTE PTR [ecx-0x2ef76041],0x7f
  423af3:	aas    
  423af4:	add    BYTE PTR [esi+eax*8+0x4d97e9fb],ch
  423afb:	and    BYTE PTR [ecx-0x17000769],al
  423b01:	dec    edi
  423b02:	xchg   ebp,eax
  423b03:	jge    0x423ae4
  423b05:	inc    esp
  423b06:	jp     0x423a8a
  423b08:	or     eax,0x64000092
  423b0d:	push   edi
  423b0e:	dec    esi
  423b0f:	or     al,0x53
  423b11:	dec    eax
  423b12:	retf   
  423b13:	adc    eax,0x83e05
  423b18:	sti    
  423b19:	push   edi
  423b1a:	sub    edi,DWORD PTR [edi-0x40d56987]
  423b20:	aas    
  423b21:	inc    ebp
  423b22:	dec    ebp
  423b23:	and    al,0xed
  423b25:	mov    al,ds:0x6c1dfbd0
  423b2a:	hlt    
  423b2b:	out    0x81,eax
  423b2d:	or     ecx,ebx
  423b2f:	sti    
  423b30:	mov    edx,0x9502c3d7
  423b35:	add    DWORD PTR [eax+0x0],0x88ec4d60
  423b3c:	add    eax,DWORD PTR [bx+di]
  423b3f:	add    cl,ch
  423b41:	outs   dx,BYTE PTR ds:[esi]
  423b42:	and    BYTE PTR [ebx+ebp*8],0x97
  423b46:	add    BYTE PTR [ecx-0x4398091],cl
  423b4c:	jmp    0x9cfda1
  423b51:	jg     0x423b1e
  423b53:	sti    
  423b54:	push   ebp
  423b55:	inc    esi
  423b56:	mov    dl,0xe8
  423b58:	adc    eax,DWORD PTR [eax]
  423b5a:	lods   eax,DWORD PTR ds:[esi]
  423b5b:	add    eax,DWORD PTR [eax]
  423b5d:	idiv   cl
  423b5f:	pop    ds
  423b60:	or     BYTE PTR [ecx],al
  423b62:	or     edx,edi
  423b64:	dec    ebp
  423b65:	call   0x387271
  423b6a:	ss mov ecx,0x379c256
  423b70:	div    DWORD PTR [esi-0x2a7]
  423b76:	mov    edx,0x2d8ad3f9
  423b7b:	add    ebp,eax
  423b7d:	push   ebx
  423b7e:	add    BYTE PTR [edx-0x5adc7409],dh
  423b84:	rcl    BYTE PTR ds:0xf64eb742,cl
  423b8a:	cs std 
  423b8c:	jae    0x423b9e
  423b8e:	xlat   BYTE PTR ds:[ebx]
  423b8f:	enter  0x878c,0x31
  423b93:	cld    
  423b94:	(bad)  
  423b95:	push   DWORD PTR [edi+0x4b]
  423b98:	icebp  
  423b99:	call   0x3a1483
  423b9e:	jmp    0x423b62
  423ba0:	cli    
  423ba1:	jae    0x423be8
  423ba3:	dec    edx
  423ba4:	inc    esp
  423ba5:	and    al,0x25
  423ba7:	js     0x423b69
  423ba9:	je     0x423bde
  423bab:	add    al,0x4
  423bae:	int    0x81
  423bb0:	aas    
  423bb1:	adc    al,0x25
  423bb3:	inc    ecx
  423bb4:	in     al,0xff
  423bb6:	sub    BYTE PTR [ebx+0x6779e80a],0xf6
  423bbd:	inc    DWORD PTR [eax]
  423bbf:	xchg   edi,eax
  423bc0:	enter  0xf082,0xd7
  423bc4:	jg     0x423c05
  423bc6:	adc    al,0x45
  423bc8:	sub    esp,esp
  423bca:	call   DWORD PTR [esi+ebp*1-0x24836483]
  423bd1:	(bad)  
  423bd2:	jmp    FWORD PTR [edx+0x1b]
  423bd5:	or     BYTE PTR [eax],al
  423bd7:	push   0x6e
  423bd9:	retf   0x7074
  423bdc:	test   eax,0x8cb3f176
  423be1:	and    edx,DWORD PTR [eax]
  423be3:	mov    esp,0xa3faed5f
  423be8:	push   ecx
  423be9:	int3   
  423bea:	test   DWORD PTR [ebx+0x1af1e66e],ebx
  423bf0:	rol    BYTE PTR [ecx],0x0
  423bf3:	xchg   esp,eax
  423bf4:	fst    DWORD PTR [ebx+0xe]
  423bf7:	sbb    edi,eax
  423bf9:	push   ebx
  423bfa:	or     cl,BYTE PTR [edi]
  423bfc:	pushf  
  423bfd:	and    ecx,DWORD PTR [ecx+eiz*1]
  423c00:	sahf   
  423c01:	xrelease xchg BYTE PTR [ebx-0x50],al
  423c05:	inc    ebx
  423c06:	in     eax,0x63
  423c08:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423c09:	jbe    0x423bce
  423c0b:	mov    ebx,0x9408be0d
  423c10:	or     dh,BYTE PTR [edx]
  423c12:	sti    
  423c13:	shl    bl,0xf7
  423c16:	xchg   BYTE PTR [ebp-0x79],al
  423c19:	push   ebx
  423c1a:	and    al,0xa0
  423c1c:	mov    ss,WORD PTR [ebx+0x24]
  423c1f:	mov    BYTE PTR [edi+0x2b0015ec],bh
  423c25:	lahf   
  423c26:	jbe    0x423c00
  423c28:	sbb    ebx,eax
  423c2a:	dec    ebp
  423c2b:	xor    eax,0xfe175622
  423c30:	adc    ebx,eax
  423c32:	add    DWORD PTR [eax+edi*4-0x1a],esi
  423c36:	cmp    BYTE PTR [edx-0x2650],0x17
  423c3d:	xchg   esi,eax
  423c3e:	repz push edx
  423c40:	pop    ds
  423c41:	sahf   
  423c42:	xlat   BYTE PTR ds:[ebx]
  423c43:	fincstp 
  423c45:	add    BYTE PTR [edx-0x32],ah
  423c48:	sbb    DWORD PTR [edx+0x351300d5],ebp
  423c4e:	or     eax,0x5eb21af8
  423c53:	lds    edi,FWORD PTR [esi+ecx*8+0x2dbfce4d]
  423c5a:	outs   dx,BYTE PTR ds:[esi]
  423c5b:	lds    ebp,FWORD PTR [ebp+ebx*4+0x25afce46]
  423c62:	mov    edi,DWORD PTR [edx-0x15]
  423c65:	sub    DWORD PTR [edi],esp
  423c67:	jmp    DWORD PTR [ebx+0x45df6e2c]
  423c6d:	das    
  423c6e:	mov    ebx,0xb1f5097a
  423c73:	jp     0x423c02
  423c75:	into   
  423c76:	push   0x1b
  423c78:	add    ch,0xe9
  423c7b:	add    al,0xd
  423c7d:	inc    ebx
  423c7e:	cmc    
  423c7f:	std    
  423c80:	pop    ss
  423c81:	je     0x423c6c
  423c83:	add    edx,DWORD PTR [ebx+edi*2+0xd00fddb]
  423c8a:	jl     0x423c75
  423c8c:	add    edx,DWORD PTR [ecx+edi*2-0x390d2356]
  423c93:	retf   0x10cd
  423c96:	sar    BYTE PTR [edi+eax*1],0xc3
  423c9a:	mov    eax,0x73b9d9ba
  423c9f:	bound  esp,QWORD PTR [eax]
  423ca1:	xor    al,ch
  423ca3:	jmp    0xe8265426
  423ca8:	add    edx,DWORD PTR [edi+ebp*1+0x771c3f70]
  423caf:	sub    al,0x0
  423cb1:	cld    
  423cb2:	push   ebx
  423cb3:	xchg   ch,cl
  423cb5:	vmwrite eax,DWORD PTR [edx+0x28]
  423cb9:	add    al,ch
  423cbb:	jmp    0x3ad14b
  423cc0:	call   0xdf324a5c
  423cc5:	stos   BYTE PTR es:[edi],al
  423cc6:	rol    BYTE PTR [edi-0x78ca1c54],1
  423ccc:	mov    esp,0x4abfdcdf
  423cd1:	loope  0x423c9b
  423cd3:	xchg   esp,ecx
  423cd5:	(bad)  [ecx]
  423cd7:	sti    
  423cd8:	jle    0x423d46
  423cda:	(bad)  
  423cdb:	sti    
  423cdc:	jmp    0x592af61d
  423ce1:	mov    edi,0x5360fbc9
  423ce6:	clc    
  423ce7:	ss das 
  423ce9:	cmp    al,0xe6
  423ceb:	cli    
  423cec:	xchg   esp,eax
  423ced:	add    bh,cl
  423cef:	jl     0x423d36
  423cf1:	in     eax,0x6f
  423cf3:	in     eax,dx
  423cf4:	fimul  WORD PTR [esi]
  423cf6:	pop    ecx
  423cf7:	inc    esp
  423cf8:	jge    0x423ceb
  423cfa:	xchg   edi,eax
  423cfb:	inc    esi
  423cfc:	adc    DWORD PTR [edx+0x9],esi
  423cff:	sbb    eax,0x7b97e8fe
  423d04:	jne    0x423ce7
  423d06:	in     al,dx
  423d07:	cmp    eax,0xa3ded10c
  423d0c:	sti    
  423d0d:	(bad)  
  423d0f:	cmp    eax,0xfa6d3208
  423d14:	push   ecx
  423d15:	into   
  423d16:	loop   0x423d10
  423d18:	out    0x20,eax
  423d1a:	das    
  423d1b:	(bad)  
  423d1c:	sti    
  423d1d:	push   ds
  423d1e:	push   0xffffffb9
  423d20:	mov    esi,0x872d97e1
  423d25:	mov    ebp,0x3f0cd514
  423d2a:	popf   
  423d2b:	dec    ebp
  423d2c:	adc    BYTE PTR [esi],dh
  423d2e:	popf   
  423d2f:	leave  
  423d30:	repnz outs dx,BYTE PTR ds:[esi]
  423d32:	scas   eax,DWORD PTR es:[edi]
  423d33:	ret    0xe9fb
  423d36:	xchg   esi,eax
  423d37:	jns    0x423db6
  423d39:	add    BYTE PTR [ecx-0x7c7aa0d5],al
  423d3f:	xor    eax,0xa8428b5b
  423d44:	stos   BYTE PTR es:[edi],al
  423d45:	std    
  423d46:	jp     0x423cfc
  423d48:	test   al,al
  423d4a:	rcr    DWORD PTR [ebx-0x48],0x0
  423d4e:	in     eax,0xff
  423d50:	(bad)  
  423d51:	cmp    al,BYTE PTR [eax]
  423d53:	ins    DWORD PTR es:[edi],dx
  423d54:	inc    edx
  423d55:	xchg   DWORD PTR [edi+edi*4],ebp
  423d58:	(bad)  
  423d59:	dec    DWORD PTR [esi]
  423d5b:	or     BYTE PTR [eax-0x2ccd72b5],dh
  423d61:	add    BYTE PTR [eax],al
  423d63:	mov    ebp,0x794d890e
  423d68:	inc    esi
  423d69:	inc    ebp
  423d6a:	adc    BYTE PTR [ebp+0x7affda6d],al
  423d70:	dec    eax
  423d71:	pop    ebp
  423d72:	or     al,0xf8
  423d74:	jl     0x423d9a
  423d76:	add    bh,BYTE PTR [ebp-0x1]
  423d79:	cmp    BYTE PTR [eax],0x4
  423d7c:	cmp    edi,eax
  423d7e:	mov    esi,DWORD PTR [eax]
  423d80:	iret   
  423d81:	jecxz  0x423d96
  423d83:	sahf   
  423d84:	mov    ah,0xf7
  423d86:	jmp    eax
  423d88:	mov    bl,0x83
  423d8a:	inc    ebp
  423d8b:	pop    ebp
  423d8c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423d8d:	jl     0x423d71
  423d8f:	cmp    dh,BYTE PTR [edi+0x43654583]
  423d95:	dec    ebp
  423d96:	hlt    
  423d97:	xor    DWORD PTR [edi-0x3b7f00d0],0xffffffe3
  423d9e:	gs xor al,0xb6
  423da1:	neg    DWORD PTR [ebx+0x56]
  423da4:	enter  0xff51,0x60
  423da8:	enter  0x75f6,0x25
  423dac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423dad:	dec    esi
  423dae:	sbb    edx,edi
  423db0:	mov    dh,0x57
  423db2:	pop    esi
  423db3:	xchg   esp,eax
  423db4:	mov    al,ds:0x94000cc2
  423db9:	or     al,0x7b
  423dbb:	in     al,dx
  423dbc:	pop    ss
  423dbd:	ins    DWORD PTR es:[edi],dx
  423dbe:	clc    
  423dbf:	xchg   BYTE PTR [ebp-0x2f],ah
  423dc2:	xor    al,BYTE PTR [edi-0x78d11c73]
  423dc8:	in     al,dx
  423dc9:	mov    eax,ds:0x4e9c4391
  423dce:	dec    edi
  423dcf:	xor    al,0xaf
  423dd1:	push   es
  423dd2:	imul   DWORD PTR [edx-0x4069261c]
  423dd8:	jg     0x423e01
  423dda:	jge    0x423e51
  423ddc:	ror    BYTE PTR [ebp+0x55],0x4
  423de0:	or     eax,0x30bcb8c
  423de5:	or     BYTE PTR [ebx],0xff
  423de8:	mov    ebx,0x14184ed5
  423ded:	pushf  
  423dee:	idiv   edi
  423df0:	or     al,0x8c
  423df2:	(bad)  
  423df3:	je     0x423d91
  423df5:	pop    esi
  423df6:	aas    
  423df7:	and    BYTE PTR ds:0x9ae6f79d,bl
  423dfd:	push   eax
  423dfe:	push   ecx
  423dff:	or     BYTE PTR [edi],cl
  423e01:	dec    ebx
  423e02:	pop    ds
  423e03:	xchg   ebp,ecx
  423e05:	fistp  DWORD PTR [edx]
  423e07:	pop    ebp
  423e08:	pusha  
  423e09:	mov    ds:0xd6a85b96,eax
  423e0e:	sub    BYTE PTR [eax],cl
  423e10:	pop    ebx
  423e11:	int    0xbb
  423e13:	adc    ah,dl
  423e15:	xlat   BYTE PTR ds:[ebx]
  423e16:	jge    0x423e5b
  423e18:	mov    ebx,?
  423e1a:	add    al,0x75
  423e1c:	add    BYTE PTR [edi+0x4e],dh
  423e1f:	inc    eax
  423e20:	or     BYTE PTR [edi],ch
  423e22:	loopne 0x423e9e
  423e24:	dec    ebp
  423e25:	sub    al,0x5d
  423e27:	add    ecx,DWORD PTR [eax]
  423e29:	aas    
  423e2a:	fidivr DWORD PTR [ebp+0x8]
  423e2d:	or     al,0x1
  423e2f:	repz inc ecx
  423e31:	aam    0x5
  423e33:	mov    ds:0x1bfe0655,al
  423e38:	enter  0x3d0b,0x8d
  423e3c:	push   cs
  423e3d:	inc    ebx
  423e3e:	dec    edi
  423e3f:	(bad)  
  423e40:	fisub  WORD PTR [eax+0x4]
  423e43:	out    0x50,eax
  423e45:	mov    esp,0xf2fc2c75
  423e4a:	jecxz  0x423ea9
  423e4c:	cmp    ah,bl
  423e4e:	std    
  423e4f:	xor    dh,bl
  423e51:	mov    BYTE PTR [edx+0x6e],bl
  423e54:	repz xor eax,0xd686fb77
  423e5a:	(bad)  
  423e5b:	gs ret 
  423e5d:	ret    0x2806
  423e60:	push   ebp
  423e61:	(bad)  
  423e62:	std    
  423e63:	mov    bl,0xc7
  423e65:	mov    bl,0x3c
  423e67:	xor    eax,0xa4eeb0e
  423e6c:	fisubr WORD PTR [esp+eax*1-0x13]
  423e70:	push   eax
  423e71:	jo     0x423ee8
  423e73:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423e74:	sti    
  423e75:	jp     0x423e5c
  423e77:	pop    ebp
  423e78:	cmp    BYTE PTR [ebp+edi*8+0x759ade20],cl
  423e7f:	fnstcw WORD PTR [eax+eax*1-0x5a]
  423e83:	jge    0x423ea8
  423e85:	push   edx
  423e87:	shr    ch,0xe
  423e8a:	push   ebp
  423e8b:	dec    esi
  423e8c:	test   DWORD PTR ds:0x3ee6c4e9,0x56a60558
  423e96:	xor    eax,0x5d2d3321
  423e9b:	mov    esi,0x75e903e5
  423ea0:	aad    0x83
  423ea2:	sub    BYTE PTR [eax+0x2d9403e9],ah
  423ea8:	add    BYTE PTR [edi],bl
  423eaa:	lds    esi,FWORD PTR gs:[ebp-0x23]
  423eae:	mov    al,ds:0xdbdae8c8
  423eb3:	(bad)  
  423eb4:	sti    
  423eb5:	out    dx,al
  423eb6:	and    al,0xc0
  423eb8:	mov    DWORD PTR [esp+eiz*8],ebp
  423ebb:	xchg   edi,eax
  423ebc:	add    DWORD PTR ds:0x90019095,edx
  423ec2:	mov    ah,0xc1
  423ec4:	sti    
  423ec5:	jmp    0xb2a4e852
  423eca:	ror    BYTE PTR [edx+0x6],1
  423ecd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423ece:	mov    ds:0x97e8fecc,eax
  423ed3:	add    BYTE PTR [edi+0x5d07e3a4],al
  423ed9:	stc    
  423eda:	pop    ebx
  423edb:	cmc    
  423edc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423edd:	jmp    0x423f32
  423edf:	stc    
  423ee0:	and    al,0x44
  423ee2:	int    0xff
  423ee4:	jmp    FWORD PTR [ecx+0x0]
  423ee7:	lock test DWORD PTR [eax-0x7a8d2454],0xfbc4ccc9
  423ef2:	mov    ecx,0x700c4acc
  423ef7:	mov    ebx,0x67b489ac
  423efc:	mov    bl,BYTE PTR [ebp+0x1]
  423eff:	call   FWORD PTR [ebp-0x1c]
  423f02:	cs sti 
  423f04:	and    bl,bh
  423f06:	(bad)  
  423f07:	pop    esp
  423f08:	std    
  423f09:	(bad)  
  423f0a:	call   0xb157faa6
  423f0f:	jae    0x423f11
  423f11:	add    BYTE PTR [edi+edx*2+0x36],ch
  423f15:	add    ebx,DWORD PTR [ebx]
  423f17:	pop    eax
  423f18:	stos   BYTE PTR es:[edi],al
  423f19:	retf   0x97eb
  423f1c:	add    BYTE PTR [edi+0x4014a814],al
  423f22:	add    BYTE PTR ds:0xd9858cf1,ch
  423f28:	leave  
  423f29:	idiv   edi
  423f2b:	lea    esi,[edi]
  423f2d:	inc    ebp
  423f2e:	les    edi,FWORD PTR [ebp-0x37]
  423f31:	into   
  423f32:	test   ebp,ebp
  423f34:	mov    eax,0xee85c294
  423f39:	icebp  
  423f3a:	cmp    cl,BYTE PTR [esi+0x50]
  423f3d:	sbb    ecx,DWORD PTR [ebx-0x7a7cff5e]
  423f43:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423f44:	leave  
  423f45:	idiv   edi
  423f47:	(bad)  
  423f48:	ret    0x57d
  423f4b:	add    dh,dl
  423f4d:	ret    0x4589
  423f50:	pop    ebp
  423f51:	cmp    al,0x7
  423f53:	mov    ebp,DWORD PTR [eax+0x5f]
  423f56:	idiv   edi
  423f58:	jb     0x423f66
  423f5a:	sar    DWORD PTR [ebp-0x48],0x1c
  423f5e:	ror    DWORD PTR [ecx+0x4583d7f8],0x79
  423f65:	test   al,ah
  423f67:	add    ah,BYTE PTR [esi+edi*8]
  423f6a:	mov    ebx,0x45d0f174
  423f6f:	test   BYTE PTR [ebp-0x6dffffd],ch
  423f75:	mov    esi,0xdc8e5d83
  423f7a:	inc    ecx
  423f7b:	push   edi
  423f7c:	lock ds je 0x423f7f
  423f80:	xchg   edx,eax
  423f81:	enter  0x8d50,0x28
  423f85:	outs   dx,DWORD PTR ds:[esi]
  423f86:	push   eax
  423f87:	dec    DWORD PTR [ebx-0x37f03fc2]
  423f8d:	dec    BYTE PTR [edx]
  423f8f:	cmp    BYTE PTR [eax],dl
  423f91:	mov    ah,0x6f
  423f93:	sub    dh,ah
  423f95:	test   DWORD PTR [ebx],0xf74cb88b
  423f9b:	call   DWORD PTR [esi+edx*8-0x5b3e3ef9]
  423fa2:	push   ss
  423fa3:	ror    DWORD PTR ds:0xa387dfec,0x32
  423faa:	xor    DWORD PTR [ebx+ebp*1+0x76],0x550037c3
  423fb2:	in     al,dx
  423fb3:	cmc    
  423fb4:	es push ebp
  423fb6:	xor    BYTE PTR [ecx-0x18],al
  423fb9:	jmp    FWORD PTR [ecx-0x2e58aa89]
  423fbf:	sub    dh,dh
  423fc1:	mov    DWORD PTR [eax-0x4958a2f9],esp
  423fc7:	jnp    0x423fc1
  423fc9:	repnz cmp eax,0xdbeb4fc3
  423fcf:	xlat   BYTE PTR ds:[ebx]
  423fd0:	adc    al,0x54
  423fd2:	test   eax,0x229ff876
  423fd7:	repz adc DWORD PTR [ecx+0x63fbc35e],0x56
  423fdf:	icebp  
  423fe0:	scas   eax,DWORD PTR es:[edi]
  423fe1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423fe2:	imul   edi,edi,0xd4326752
  423fe8:	sti    
  423fe9:	mov    DWORD PTR [ecx-0x10],ebp
  423fec:	aas    
  423fed:	xchg   esp,eax
  423fee:	mov    dl,0xce
  423ff0:	or     ebx,DWORD PTR [eax]
  423ff2:	add    eax,0x319bfbc3
  423ff7:	dec    ecx
  423ff8:	or     BYTE PTR [ebx-0x74ae1c69],dl
  423ffe:	mov    ebp,0xa7d410df
  424003:	jl     0x42404a
  424005:	push   esp
  424006:	ret    
  424007:	mov    esi,0xc295a075
  42400c:	adc    eax,0x3fd840
  424011:	ins    DWORD PTR es:[edi],dx
  424012:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424013:	ret    0xfb
  424016:	pop    ebx
  424017:	add    DWORD PTR [ebx+0x43004b40],ebp
  42401d:	or     eax,0x7fe27ce9
  424022:	(bad)  
  424025:	add    edx,DWORD PTR [ebx]
  424027:	inc    esp
  424028:	cmc    
  424029:	jl     0x424004
  42402b:	pusha  
  42402c:	outs   dx,BYTE PTR ds:[esi]
  42402d:	inc    eax
  42402e:	dec    eax
  42402f:	jmp    0x7c85:0x340db02b
  424036:	shl    DWORD PTR [eax+0x6e],1
  424039:	inc    eax
  42403a:	hlt    
  42403b:	jmp    0x4419ec63
  424040:	push   ecx
  424041:	add    al,0x94
  424043:	add    cl,ch
  424045:	jl     0x424098
  424047:	je     0x4240bd
  424049:	inc    eax
  42404a:	adc    BYTE PTR [ecx+0x7a],dl
  42404d:	adc    BYTE PTR [eax+0x78],cl
  424050:	es add al,0xd
  424053:	pop    esp
  424054:	inc    ecx
  424055:	jl     0x424090
  424057:	ins    BYTE PTR es:[edi],dx
  424058:	(bad)  
  424059:	lock aas 
  42405b:	pop    gs
  42405d:	add    edx,DWORD PTR [esp+edi*1]
  424060:	dec    edi
  424061:	add    al,0x1b
  424063:	cld    
  424064:	sub    al,0xf2
  424066:	jnp    0x424068
  424068:	mov    esp,0x25442148
  42406d:	xor    ebx,DWORD PTR [ecx]
  42406f:	inc    esp
  424070:	sbb    eax,0xfd139f33
  424075:	out    dx,eax
  424076:	pop    ebx
  424077:	add    BYTE PTR [ebx+eax*8+0x0],ch
  42407b:	or     DWORD PTR [edx],ebp
  42407d:	mov    bl,0xc6
  42407f:	mov    eax,ds:0x9443f9cc
  424084:	xchg   DWORD PTR [edi+ecx*8+0x50155bbd],esp
  42408b:	cdq    
  42408c:	neg    DWORD PTR [ebx+0xee0d3]
  424092:	call   0xaccb:0xeef0335a
  424099:	push   edx
  42409a:	out    0x43,al
  42409c:	jge    0x4240ae
  42409e:	sub    DWORD PTR [eax-0x7b1eba7b],edx
  4240a4:	mov    ecx,DWORD PTR [ebp-0x5b]
  4240a7:	pop    eax
  4240a8:	push   ss
  4240a9:	std    
  4240aa:	(bad)  
  4240ab:	pop    ecx
  4240ac:	dec    ebp
  4240ad:	callw  0xc480
  4240b1:	add    cl,ch
  4240b3:	xchg   edi,eax
  4240b4:	mov    ecx,0x5b9fdd75
  4240b9:	pushf  
  4240ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4240bb:	inc    ecx
  4240bc:	clc    
  4240bd:	pop    esp
  4240be:	jge    0x42411b
  4240c0:	pcmpgtd mm5,mm3
  4240c3:	mov    cl,0x28
  4240c5:	adc    ebp,edx
  4240c7:	xchg   edi,eax
  4240c8:	add    bl,bh
  4240ca:	cld    
  4240cb:	jmp    0x424086
  4240cd:	adc    eax,0xfffce445
  4240d2:	popa   
  4240d3:	mov    ds:0x62e86608,eax
  4240d8:	dec    ebx
  4240d9:	les    edx,FWORD PTR [ecx-0xf]
  4240dc:	mov    ebx,0xd1005efb
  4240e1:	xor    dh,ah
  4240e3:	mov    edi,0xf9d012d8
  4240e8:	push   edi
  4240e9:	add    BYTE PTR [eax+0xaffa4c4],al
  4240ef:	cmp    DWORD PTR fs:[eax],eax
  4240f2:	add    cl,ch
  4240f4:	mov    ds,WORD PTR [ebx-0x18]
  4240f7:	mov    ah,0x9f
  4240f9:	test   BYTE PTR [ebp-0x6],bl
  4240fc:	sahf   
  4240fd:	pop    ebp
  4240fe:	in     al,0x95
  424100:	mov    eax,edx
  424102:	inc    ebp
  424103:	cli    
  424104:	xchg   esi,eax
  424105:	dec    esi
  424106:	sti    
  424107:	hlt    
  424108:	inc    ebx
  424109:	adc    DWORD PTR [eax+0x0],eax
  42410c:	jge    0x424145
  42410e:	inc    ebp
  42410f:	hlt    
  424110:	push   ebp
  424111:	jecxz  0x42411d
  424113:	je     0x424190
  424115:	icebp  
  424116:	div    BYTE PTR [ebp-0x6f]
  424119:	lds    esi,FWORD PTR [ebp-0x18]
  42411c:	xchg   ebx,eax
  42411d:	lds    edx,FWORD PTR ds:0x404dc0
  424123:	mov    esi,DWORD PTR [eax-0x44]
  424126:	dec    edx
  424127:	lea    ebx,[eax+0x5999e870]
  42412d:	(bad)
  424130:	adc    DWORD PTR [esi+0x14],0xffffffff
  424134:	pusha  
  424135:	mov    eax,0x4aead7f6
  42413a:	hlt    
  42413b:	not    ebp
  42413d:	test   al,0xbb
  42413f:	inc    eax
  424140:	ret    
  424141:	aaa    
  424142:	inc    ebp
  424143:	mov    eax,0xcbab2a00
  424148:	adc    BYTE PTR [ebp-0x31a2c7fc],ch
  42414e:	dec    ebx
  42414f:	push   es
  424150:	push   ebx
  424151:	push   0x4a
  424153:	in     al,0xff
  424155:	loopne 0x42412e
  424157:	dec    esi
  424158:	inc    eax
  42415a:	mov    edi,0xf0bd4010
  42415f:	dec    edx
  424160:	push   0xffffffba
  424162:	les    esi,FWORD PTR [ebp+0xc]
  424165:	xor    eax,0x82ff9be2
  42416a:	pop    es
  42416b:	pop    ebp
  42416c:	pushf  
  42416d:	lock scas al,BYTE PTR es:[edi]
  42416f:	gs add al,0x3
  424172:	pop    eax
  424173:	lsl    ebp,WORD PTR [ebp-0x468a0901]
  42417a:	les    edx,FWORD PTR ds:0x3f91a4
  424180:	mov    esi,DWORD PTR [eax]
  424182:	mov    bh,0x65
  424184:	add    DWORD PTR [esp-0x32932bce],edx
  42418b:	ret    
  42418c:	sti    
  42418d:	jae    0x424125
  42418f:	les    esi,FWORD PTR ds:0x4041c8
  424195:	arpl   sp,bx
  424197:	push   ebx
  424198:	adc    esp,edx
  42419a:	test   eax,0xec4a42d8
  42419f:	mov    bh,0x4
  4241a1:	sar    BYTE PTR [esi],0xfd
  4241a4:	pop    esp
  4241a5:	xor    BYTE PTR [ecx+ecx*1+0x39],bl
  4241a9:	add    cl,bl
  4241ab:	fnstcw WORD PTR [eax]
  4241ad:	or     al,bh
  4241af:	ret    0xf039
  4241b2:	sub    esi,esp
  4241b4:	scas   eax,DWORD PTR es:[edi]
  4241b5:	push   edx
  4241b6:	and    ebx,esp
  4241b8:	mov    edi,0x52a9d410
  4241bd:	lea    esp,[ecx+0x6d]
  4241c0:	mov    eax,ebx
  4241c2:	cld    
  4241c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4241c4:	mov    ebx,0xdff03fb
  4241c9:	push   edx
  4241ca:	ins    BYTE PTR es:[edi],dx
  4241cb:	mov    dl,0x2
  4241cd:	add    BYTE PTR [edx+eax*4-0x2c14f3c7],dl
  4241d4:	arpl   WORD PTR [esp+edx*2],dx
  4241d7:	test   eax,0x1c09012d
  4241dc:	enter  0xdb87,0x50
  4241e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4241e1:	test   ebx,0xd475bf59
  4241e7:	jp     0x4241a7
  4241e9:	adc    eax,0x3fb8b4
  4241ee:	dec    edx
  4241ef:	inc    edx
  4241f0:	sbb    esp,edx
  4241f2:	test   BYTE PTR [ecx-0x1],ch
  4241f5:	test   DWORD PTR [ecx-0x12],ebx
  4241f8:	pop    esi
  4241f9:	pop    edx
  4241fa:	aas    
  4241fb:	loopne 0x4241be
  4241fd:	or     al,0x94
  4241ff:	add    BYTE PTR [ebx],bl
  424201:	dec    ecx
  424202:	or     BYTE PTR [ecx],0x95
  424205:	loop   0x4241c4
  424207:	pop    ebx
  424208:	add    eax,0xabf79139
  42420d:	mov    bl,0x0
  42420f:	call   0xe204d81e
  424214:	mov    al,0xfa
  424216:	cmp    BYTE PTR [eax+0x53],dh
  424219:	repnz sbb BYTE PTR [ecx+edx*1-0x57],dl
  42421e:	add    esp,ebx
  424220:	mov    esi,DWORD PTR [eax+ecx*8]
  424223:	adc    eax,edx
  424225:	shl    DWORD PTR [esi+0x4b],1
  424228:	mov    edx,0xb9e656d2
  42422d:	push   esp
  42422e:	adc    BYTE PTR [edi],ch
  424230:	adc    al,0x11
  424232:	sbb    ah,dl
  424234:	add    BYTE PTR [ebx+eax*8-0x57],ah
  424238:	pop    edi
  424239:	popa   
  42423a:	pusha  
  42423b:	and    esp,DWORD PTR [esi-0x1f66467f]
  424241:	push   esp
  424242:	inc    esi
  424243:	xchg   esp,eax
  424244:	add    al,0x36
  424246:	(bad)  
  424247:	pusha  
  424248:	in     al,0xe0
  42424a:	pop    ecx
  42424b:	test   DWORD PTR [di],ecx
  42424e:	call   0xac7576da
  424253:	inc    eax
  424254:	cmp    DWORD PTR [ebx-0x3e],0x18
  424258:	sar    ebp,0x48
  42425b:	adc    DWORD PTR [edx-0xc30bb0b],edi
  424261:	les    edi,FWORD PTR [ebx-0x75]
  424264:	add    BYTE PTR [edx+0x18],bl
  424267:	sub    al,0xf
  424269:	test   eax,0x64b11303
  42426e:	mov    ecx,0x61fde928
  424273:	add    BYTE PTR [eax+0x542e0f33],dl
  424279:	push   ecx
  42427a:	add    BYTE PTR [ecx+0x69],al
  42427d:	sub    eax,0x3e222efa
  424282:	or     BYTE PTR [eax-0x62],dh
  424285:	add    DWORD PTR [edx-0x3],0x83043d10
  42428c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42428d:	mov    eax,DWORD PTR [edx-0x23]
  424290:	(bad)  
  424291:	cmp    ebx,eax
  424293:	icebp  
  424294:	into   
  424295:	test   al,0x93
  424297:	ja     0x4242ee
  424299:	mov    ch,0x87
  42429b:	scas   eax,DWORD PTR es:[edi]
  42429c:	(bad)  
  42429d:	mov    esi,0x802e802
  4242a2:	push   ebx
  4242a3:	cmp    dl,BYTE PTR [ebp+0x13]
  4242a6:	loopne 0x42429d
  4242a8:	xlat   BYTE PTR ds:[ebx]
  4242a9:	add    BYTE PTR [ebx+0x37],bl
  4242ac:	fnstcw WORD PTR [edx+0x8]
  4242af:	jmp    0x956245a1
  4242b4:	rol    DWORD PTR [eax],1
  4242b6:	add    al,0x17
  4242b8:	adc    DWORD PTR [esp],esi
  4242bb:	loope  0x424320
  4242bd:	sbb    eax,ebp
  4242bf:	ret    
  4242c0:	sbb    al,0xb6
  4242c2:	sti    
  4242c3:	ins    DWORD PTR es:[edi],dx
  4242c4:	shl    BYTE PTR [ebx],1
  4242c6:	push   ss
  4242c7:	sahf   
  4242c8:	or     edx,DWORD PTR [ebp-0x48]
  4242cb:	sub    dl,BYTE PTR [eax-0x78feea4b]
  4242d1:	inc    eax
  4242d2:	add    BYTE PTR [eax+edx*8+0x33],ch
  4242d6:	push   es
  4242d7:	ret    0xa700
  4242da:	add    al,0x75
  4242dc:	in     al,dx
  4242dd:	loopne 0x424357
  4242df:	inc    eax
  4242e0:	and    BYTE PTR [ecx-0x5bf28b4b],0x4e
  4242e7:	sti    
  4242e8:	hlt    
  4242e9:	aas    
  4242ea:	adc    al,0x40
  4242ec:	jmp    0xe94abd26
  4242f1:	dec    edx
  4242f2:	sub    esp,0x20016b00
  4242f8:	lods   al,BYTE PTR ds:[esi]
  4242f9:	out    dx,al
  4242fa:	cld    
  4242fb:	add    edx,DWORD PTR [esi-0x6]
  4242fe:	mov    edi,DWORD PTR [ebp+0x8]
  424301:	dec    ecx
  424302:	mov    ecx,0xc2f9a7e3
  424307:	test   DWORD PTR [ebp+ebp*4+0x58ff25f8],0x7d43b858
  424312:	rcl    DWORD PTR ds:0x444c68,0x8b
  424319:	pop    ebp
  42431a:	jg     0x42430a
  42431c:	je     0x42435f
  42431e:	mov    ch,0x79
  424320:	add    al,0xc8
  424322:	sbb    dh,ch
  424324:	inc    ebp
  424325:	dec    ebp
  424326:	les    esi,FWORD PTR [ecx+ecx*1+0x62]
  42432a:	out    dx,eax
  42432b:	or     edi,edi
  42432d:	cmp    BYTE PTR [eax+0x10],ah
  424330:	inc    eax
  424331:	cmp    eax,0xfb083e85
  424336:	or     DWORD PTR [ecx],eax
  424338:	jmp    0x42436a
  42433a:	shl    DWORD PTR [ebp+0x10],0x0
  42433e:	loop   0x42432e
  424340:	or     edx,DWORD PTR [edi+0x42]
  424343:	cmovs  edx,DWORD PTR ds:0x5e56fcbd
  42434a:	sar    BYTE PTR [esi-0xe4fff4],0x1f
  424351:	lods   al,BYTE PTR ds:[esi]
  424352:	mov    esi,0x665603fc
  424357:	out    dx,eax
  424358:	and    ecx,DWORD PTR [eax]
  42435a:	jmp    0x69922708
  42435f:	shl    edi,0x84
  424362:	std    
  424363:	out    dx,eax
  424364:	sbb    al,0xff
  424366:	test   al,0x20
  424368:	mov    eax,0x15c0ad43
  42436d:	push   0x3fb894
  424372:	sbb    edx,ebp
  424374:	xor    cl,BYTE PTR ds:0x7503796f
  42437a:	mov    edi,ds
  42437c:	inc    BYTE PTR [eax]
  42437e:	punpckhdq mm0,QWORD PTR [edi]
  424381:	out    0x9b,eax
  424383:	pop    eax
  424385:	adc    eax,0x3fb57c
  42438a:	loop   0x424377
  42438c:	add    al,BYTE PTR [eax]
  42438e:	and    BYTE PTR [edi+ebx*8+0x3a9d7ab],0x52
  424396:	pop    ds
  424397:	xor    eax,0xbfe807e3
  42439c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42439d:	adc    BYTE PTR [eax],dl
  42439f:	scas   eax,DWORD PTR es:[edi]
  4243a0:	mov    ebx,0x2d540084
  4243a5:	sbb    bh,bl
  4243a7:	cmp    DWORD PTR ds:0xd6943f7c,0xe9a56819
  4243b1:	add    eax,DWORD PTR [ebp+0x37114d54]
  4243b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4243b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4243b9:	cmp    BYTE PTR [eax],cl
  4243bb:	pop    edx
  4243bc:	test   eax,0xa1d48704
  4243c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4243c2:	add    ebp,DWORD PTR [edx+0x66]
  4243c5:	sbb    esp,ecx
  4243c7:	mov    al,ds:0xd65a03e9
  4243cc:	pushf  
  4243cd:	push   ecx
  4243cf:	xchg   ecx,eax
  4243d0:	leave  
  4243d1:	imul   edi,DWORD PTR [edi],0xffffff94
  4243d4:	popf   
  4243d5:	push   ebp
  4243d6:	xchg   DWORD PTR [eax-0x3b],esp
  4243d9:	or     esi,DWORD PTR [edi+esi*4-0x6f]
  4243dd:	aad    0x7f
  4243df:	fisubr DWORD PTR ds:0xd348c088
  4243e5:	mov    edx,0xa1006835
  4243ea:	inc    ebx
  4243eb:	xchg   esp,eax
  4243ec:	mov    bh,0xf4
  4243ee:	sub    esp,DWORD PTR [ebp-0x2b7716c0]
  4243f4:	sub    ebx,edi
  4243f6:	cli    
  4243f7:	cmp    ecx,DWORD PTR [eax]
  4243f9:	mov    esp,0xa9c07308
  4243fe:	stos   BYTE PTR es:[edi],al
  4243ff:	xchg   ebx,eax
  424400:	dec    esi
  424401:	xor    bh,BYTE PTR [eax]
  424403:	mov    eax,0x192a04
  424408:	aam    0xb
  42440a:	test   eax,0xf1c2de03
  42440f:	add    esp,ecx
  424411:	mov    DWORD PTR ds:0x3ce099b6,eax
  424417:	inc    ebx
  424418:	xchg   esp,eax
  424419:	cld    
  42441a:	xchg   ebp,eax
  42441b:	mov    al,cl
  42441d:	or     BYTE PTR [ebx+0x63a8ef37],dl
  424423:	or     DWORD PTR [esi-0x4a],0x65
  424427:	(bad)  
  424428:	rcr    BYTE PTR [esi],0xe2
  42442b:	clc    
  42442c:	fistp  QWORD PTR [eax+0x26]
  42442f:	add    al,0x3f
  424431:	or     al,0x41
  424433:	adc    eax,0xb35e00d4
  424438:	adc    DWORD PTR [edi+0x566b583d],ebp
  42443e:	in     eax,0x38
  424440:	iret   
  424441:	xor    DWORD PTR [eax+edx*1],0x29da2c94
  424448:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424449:	sub    DWORD PTR [ebx],0x10
  42444c:	and    DWORD PTR fs:[eax+edx*1],0x64
  424451:	test   al,0x87
  424453:	aaa    
  424454:	out    dx,al
  424455:	mov    ch,0x66
  424457:	inc    eax
  424458:	test   BYTE PTR [eax],al
  42445a:	std    
  42445b:	lock inc esi
  42445d:	mov    ch,0xf3
  42445f:	or     ebx,edi
  424461:	or     eax,DWORD PTR [eax]
  424463:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424464:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424465:	inc    eax
  424466:	add    BYTE PTR [ebx],al
  424468:	nop
  424469:	mov    ecx,0xe00f172
  42446e:	mov    ecx,0xb966f566
  424473:	adc    eax,0x408635
  424478:	push   esi
  424479:	iret   
  42447a:	or     eax,0x32e29ec0
  42447f:	or     BYTE PTR [ecx+0x361c4308],ch
  424485:	lods   al,BYTE PTR ds:[esi]
  424486:	rcl    BYTE PTR [eax],1
  424488:	test   eax,0x292f5997
  42448d:	xlat   BYTE PTR ds:[ebx]
  42448e:	mov    BYTE PTR [edx],al
  424490:	adc    ah,BYTE PTR [ecx+edi*4+0x2b32f975]
  424497:	or     al,0xba
  424499:	sub    cl,BYTE PTR [ebx]
  42449b:	in     al,0xdd
  42449d:	xlat   BYTE PTR ds:[ebx]
  42449e:	add    BYTE PTR [edx-0x5e],bl
  4244a1:	hlt    
  4244a2:	jbe    0x4244b0
  4244a4:	jmp    0xf82ec295
  4244a9:	xchg   ebx,eax
  4244aa:	loopne 0x424457
  4244ac:	sub    bl,BYTE PTR [eax-0x248db104]
  4244b2:	or     BYTE PTR [edx+0x5d],dl
  4244b5:	push   0xea6bf7a8
  4244ba:	mov    eax,0x215ca984
  4244bf:	sti    
  4244c0:	hlt    
  4244c1:	mov    ebx,0x50e93f78
  4244c6:	or     ebp,DWORD PTR [eax-0x28]
  4244c9:	push   edi
  4244ca:	add    BYTE PTR [edi+0x74b21b99],al
  4244d0:	xor    al,0x0
  4244d2:	std    
  4244d3:	push   esi
  4244d4:	add    al,0x1c
  4244d6:	dec    eax
  4244d7:	mov    ecx,0x3228f172
  4244dc:	adc    al,0x0
  4244de:	sbb    ch,dh
  4244e0:	ud0    esp,ebx
  4244e3:	add    al,0xf7
  4244e5:	jne    0x4244a0
  4244e7:	jae    0x4244fe
  4244e9:	enter  0x40ed,0x0
  4244ed:	cmp    DWORD PTR [eax-0x778bfff0],0x4b
  4244f4:	div    DWORD PTR [esi-0x4b]
  4244f7:	jae    0x42450e
  4244f9:	int3   
  4244fa:	lods   eax,DWORD PTR ds:[esi]
  4244fb:	inc    eax
  4244fc:	add    BYTE PTR [edx-0x53],ch
  4244ff:	jae    0x42456f
  424501:	or     BYTE PTR [esi],ah
  424503:	je     0x424567
  424505:	adc    al,0x2e
  424507:	jne    0x42451e
  424509:	fsubr  QWORD PTR [esi+0x40]
  42450c:	add    bh,dh
  42450e:	aad    0x19
  424510:	rcl    BYTE PTR [edi-0x66],0xea
  424514:	pop    es
  424515:	inc    eax
  424516:	hlt    
  424517:	cmp    bl,BYTE PTR [edi+edi*8]
  42451a:	pusha  
  42451b:	rcl    BYTE PTR [eax],1
  42451d:	inc    eax
  42451e:	ins    DWORD PTR es:[edi],dx
  42451f:	push   ebp
  424520:	bound  eax,QWORD PTR [edx]
  424522:	mov    bl,0xfa
  424524:	add    BYTE PTR [eax-0x6a],bl
  424527:	add    esi,edi
  424529:	jne    0x424598
  42452b:	jne    0x4245a2
  42452d:	or     al,0x7e
  42452f:	jne    0x424546
  424531:	rol    BYTE PTR [ecx+0x40],0x0
  424535:	pop    esi
  424536:	add    BYTE PTR [esi+0x53],ah
  424539:	mov    edx,0x834b3d0c
  42453e:	in     al,dx
  42453f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424540:	jl     0x4244c2
  424542:	add    DWORD PTR ds:0xddec8100,ebp
  424548:	sti    
  424549:	(bad)  
  42454a:	jmp    FWORD PTR [esi-0x5e3f7ab6]
  424550:	sbb    BYTE PTR [edx+0x0],ah
  424553:	mov    ebp,0x94101575
  424558:	mov    dh,0x3f
  42455a:	add    BYTE PTR [ecx-0x6b000159],ch
  424560:	stos   BYTE PTR es:[edi],al
  424561:	xor    ebx,0xffffff94
  424564:	test   eax,0xae338cff
  424569:	(bad)  
  42456a:	call   DWORD PTR [esi+ebx*1-0x2c591750]
  424571:	mov    esp,0xe18d09fb
  424576:	div    BYTE PTR [ebx-0x12b558b6]
  42457c:	inc    edx
  42457d:	mov    esp,0xffa90605
  424582:	jmp    FWORD PTR [esi]
  424584:	int    0x4f
  424586:	xchg   sp,ax
  424588:	sbb    al,0x32
  42458a:	adc    BYTE PTR [edi],0xe1
  42458d:	mov    ebx,0xbd4c4ae8
  424592:	sti    
  424593:	adc    ecx,ebp
  424595:	cmp    al,0x1d
  424597:	pop    ds
  424598:	jecxz  0x4245e8
  42459a:	push   0x3ff51400
  42459f:	add    BYTE PTR [ecx],dl
  4245a1:	and    al,0xf
  4245a3:	std    
  4245a4:	pop    ebx
  4245a5:	mov    dl,0x4e
  4245a7:	call   0x41c409
  4245ac:	adc    ecx,ebp
  4245ae:	or     edx,DWORD PTR [ebp+0x75c42554]
  4245b4:	lea    edx,[esi]
  4245b6:	les    esp,FWORD PTR [edx+0x1d]
  4245b9:	and    al,0x14
  4245bb:	std    
  4245bc:	sub    eax,edx
  4245be:	jge    0x4245aa
  4245c0:	xchg   ebp,eax
  4245c1:	test   eax,0x7118cff
  4245c6:	mov    ebx,0x46313fb
  4245cb:	add    BYTE PTR [eax+eiz*8+0x30],dl
  4245cf:	stc    
  4245d0:	add    BYTE PTR gs:[ecx+eax*4-0x64],dh
  4245d5:	mov    bl,0x9a
  4245d7:	mov    ebx,0x4d642844
  4245dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4245dd:	jmp    0xb2569e62
  4245e2:	sub    BYTE PTR [esi],0x50
  4245e5:	push   edx
  4245e6:	adc    ecx,DWORD PTR [ecx+0x3ff6859]
  4245ec:	fs mov bl,0xd4
  4245ef:	out    dx,eax
  4245f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4245f1:	inc    eax
  4245f2:	jmp    0x5a46167d
  4245f7:	xor    esp,DWORD PTR [eax-0x50e3937b]
  4245fd:	mov    dl,0x4a
  4245ff:	lea    eax,[eax]
  424601:	sub    DWORD PTR [eax+0x70],ebp
  424604:	inc    ecx
  424605:	in     al,0xb2
  424607:	aam    0x2f
  424609:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42460a:	inc    eax
  42460b:	jmp    0x99f31798
  424610:	mov    cl,bl
  424612:	push   0x28942db9
  424617:	adc    DWORD PTR [esi-0x7e9bff2c],ecx
  42461d:	test   BYTE PTR [ebx-0x573b44f6],dh
  424623:	fisubr DWORD PTR [edi]
  424625:	pop    edi
  424626:	mov    dl,0x64
  424628:	(bad)  
  424629:	leave  
  42462a:	cld    
  42462b:	mov    dh,0xc3
  42462d:	xor    ebp,esi
  42462f:	jle    0x424644
  424631:	adc    DWORD PTR [ecx+ebx*8],edi
  424634:	push   ebx
  424635:	retf   
  424636:	test   al,0xe3
  424638:	ss cs mov dl,0x41
  42463c:	lods   al,BYTE PTR ds:[esi]
  42463d:	sub    esi,DWORD PTR [edx+0x4a7bae9]
  424643:	ret    0x8410
  424646:	or     eax,0xc1190429
  42464b:	add    BYTE PTR ds:0xae001aa3,bh
  424651:	or     dh,BYTE PTR [edi+0x40a11915]
  424657:	add    BYTE PTR [edx+0x2a],dh
  42465a:	test   eax,0xb62f1c26
  42465f:	out    0xa2,eax
  424661:	call   FWORD PTR [bx+di+0x22]
  424665:	add    cl,cl
  424667:	jno    0x4246be
  424669:	jb     0x424666
  42466b:	xor    esp,esp
  42466d:	jno    0x424681
  42466f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424670:	and    BYTE PTR [edi],dl
  424672:	sbb    al,BYTE PTR [bx+di]
  424675:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424677:	mov    ah,0x10
  424679:	test   eax,0xfcfb5097
  42467e:	xchg   edi,eax
  42467f:	cmovo  ebp,ecx
  424682:	fsubp  st(3),st
  424684:	arpl   WORD PTR [ecx-0x378ffae],ax
  42468a:	arpl   WORD PTR [edx],ax
  42468c:	inc    eax
  42468d:	jmp    0xf4ca13e0
  424692:	inc    ebx
  424693:	or     al,0x40
  424695:	jmp    0x29c781c4
  42469a:	ret    
  42469b:	inc    ecx
  42469c:	xchg   DWORD PTR [ebp-0x1bc8feb5],ebp
  4246a2:	mov    bh,0x78
  4246a4:	aas    
  4246a5:	jmp    0x7dc1324e
  4246aa:	jae    0x4246b9
  4246ac:	cld    
  4246ad:	jl     0x4246ec
  4246af:	pusha  
  4246b0:	push   0x6600da31
  4246b5:	call   0xfd6672b6
  4246ba:	xor    cl,BYTE PTR ds:0x2897e901
  4246c0:	pop    eax
  4246c1:	xchg   ecx,eax
  4246c2:	fld    DWORD PTR [eax]
  4246c4:	call   0xf7b19dc9
  4246c9:	inc    DWORD PTR [eax]
  4246cb:	xchg   cl,bh
  4246cd:	addr16 mov eax,0x8187fcbe
  4246d3:	cdq    
  4246d4:	std    
  4246d5:	(bad)  
  4246d6:	push   DWORD PTR [edx]
  4246d8:	mov    eax,ds:0xfcbeb85f
  4246dd:	not    bh
  4246df:	xchg   edi,eax
  4246e0:	cld    
  4246e1:	popa   
  4246e2:	add    BYTE PTR [edi-0x36bb7289],dl
  4246e8:	adc    al,0x50
  4246ea:	jmp    FWORD PTR [ebx]
  4246ec:	jnp    0x4246e6
  4246ee:	dec    eax
  4246f0:	and    eax,0xbc38c92b
  4246f5:	push   edi
  4246f6:	(bad)  
  4246f8:	mov    esp,0x49588b56
  4246fd:	mov    ebx,0x81683655
  424702:	in     al,dx
  424703:	xor    eax,0xfbfffffc
  424708:	dec    edi
  424709:	div    DWORD PTR [ebp-0x7b]
  42470c:	jge    0x424706
  42470e:	call   0x3974d9
  424713:	bound  esi,QWORD PTR [ecx]
  424715:	ror    BYTE PTR [ecx+0x1a86028],0x82
  42471c:	das    
  42471d:	add    DWORD PTR ds:[ebp+0x4],edi
  424721:	lea    eax,[ebp-0x7b]
  424724:	push   esp
  424725:	div    DWORD PTR [ebp+0x65]
  424728:	imul   edx,DWORD PTR ds:0x446ee4,0xf07d0085
  424732:	sub    ebp,DWORD PTR [edx+0x2f]
  424735:	xchg   DWORD PTR [edi],edi
  424737:	push   eax
  424738:	jge    0x4247a3
  42473a:	jne    0x424734
  42473c:	rol    BYTE PTR [eax+0x3c],0x50
  424740:	xchg   esp,eax
  424741:	and    al,BYTE PTR [eax+0x4c]
  424744:	adc    DWORD PTR [ebp+0x37],ecx
  424747:	sti    
  424748:	sbb    eax,edi
  42474a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42474b:	pop    esi
  42474c:	cmp    BYTE PTR [edx-0xdee7301],bl
  424752:	mov    eax,0xac0a03fb
  424757:	clc    
  424758:	ss call 0x4ac:0x8e5987ff
  424760:	rcr    ah,cl
  424762:	mov    eax,0xb8fd1400
  424767:	add    BYTE PTR [edi],cl
  424769:	ins    DWORD PTR es:[edi],dx
  42476a:	sub    edx,DWORD PTR [ecx]
  42476c:	push   esp
  42476d:	cdq    
  42476e:	sub    ecx,DWORD PTR [ecx-0x3e]
  424771:	fsubr  QWORD PTR [edi-0x4725b6f0]
  424777:	jae    0x424701
  424779:	ror    DWORD PTR es:[ebx],1
  42477c:	jmp    0x4247d8
  42477e:	add    ecx,DWORD PTR [ebx]
  424780:	jecxz  0x4247e4
  424782:	pop    es
  424783:	shl    DWORD PTR [ecx+ebp*4+0x2e8bc10c],0xc
  42478b:	push   eax
  42478c:	mov    ds:0x55044436,eax
  424791:	cmp    DWORD PTR [edi],ecx
  424793:	pop    es
  424794:	add    BYTE PTR [ebp-0x77],dl
  424797:	mov    eax,0x29e68c73
  42479c:	or     BYTE PTR [ebx-0x4c],dh
  42479f:	repz adc edx,esp
  4247a2:	cdq    
  4247a3:	jp     0x424765
  4247a5:	call   0x5ba67554
  4247aa:	cs add edi,ebx
  4247ad:	test   eax,0x944014c9
  4247b2:	sbb    al,0xbf
  4247b4:	or     ebx,DWORD PTR [eax]
  4247b6:	jmp    0xd747b9
  4247bb:	ror    DWORD PTR [ecx+esi*1+0x5480daaf],1
  4247c2:	xor    al,0x4b
  4247c4:	mov    edx,edi
  4247c6:	adc    BYTE PTR [edi],bh
  4247c8:	adc    al,0xcb
  4247ca:	add    eax,0x9404dd
  4247cf:	sbb    DWORD PTR [eax+eax*4-0x484ccf],ebp
  4247d6:	fnsave ss:[esi+0xc1caee6]
  4247dd:	jp     0x42478b
  4247df:	call   0x958c:0x5aaf9c2f
  4247e6:	add    cl,ch
  4247e8:	mov    dh,0x81
  4247ea:	rcl    dh,1
  4247ec:	inc    ebx
  4247ed:	xchg   esp,eax
  4247ee:	test   DWORD PTR [ecx-0x7ee773d0],ebp
  4247f4:	add    edx,DWORD PTR [eax+eax*1-0x77ffd096]
  4247fb:	scas   eax,DWORD PTR es:[edi]
  4247fc:	cld    
  4247fd:	adc    esp,DWORD PTR [ebx-0x2b7f16c0]
  424803:	xor    al,0xf8
  424805:	mov    dl,BYTE PTR [edi+0x10]
  424808:	imul   edi,DWORD PTR [eax+esi*2+0x1],0x339503e9
  424810:	fisttp WORD PTR [ecx+0x5c3eadd1]
  424816:	cli    
  424817:	add    BYTE PTR [edi+ebp*2-0x8],bl
  42481b:	(bad)  
  42481c:	call   0x1a39b724
  424821:	adc    esp,esp
  424823:	pop    gs
  424825:	add    ebp,DWORD PTR [edi+eiz*1-0x6a]
  424829:	mov    dh,0x5f
  42482b:	jp     0x4247d9
  42482d:	pop    es
  42482e:	inc    edi
  42482f:	inc    ecx
  424830:	lds    eax,FWORD PTR [ebx]
  424832:	xchg   esp,eax
  424833:	add    BYTE PTR [eax],al
  424835:	test   eax,0x6a4ef384
  42483a:	push   eax
  42483b:	add    eax,0xa4d47450
  424840:	push   eax
  424841:	fiadd  WORD PTR [eax+esi*8+0x26982913]
  424848:	add    bl,BYTE PTR [esp+edx*8-0x5c]
  42484c:	push   eax
  42484d:	mov    BYTE PTR [edx-0x6816feac],0xa9
  424854:	adc    eax,0x40a429
  424859:	inc    ebx
  42485a:	xchg   ebx,eax
  42485b:	es push es
  42485d:	je     0x42485f
  42485f:	push   esp
  424860:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424861:	push   eax
  424862:	sahf   
  424863:	jp     0x4248b9
  424865:	add    ecx,ebp
  424867:	xchg   edi,eax
  424868:	test   eax,0x408bd515
  42486d:	add    BYTE PTR [ecx],bh
  42486f:	cwde   
  424870:	dec    ecx
  424871:	pop    edx
  424872:	mov    al,0xd5
  424874:	clc    
  424875:	call   FWORD PTR [ebx]
  424877:	setge  BYTE PTR [edi-0x7b]
  42487b:	jmp    FWORD PTR ds:0x524705ec
  424881:	xchg   DWORD PTR [ebx+0x1e],ebx
  424884:	inc    ebx
  424885:	adc    al,0xbe
  424887:	loop   0x424889
  424889:	cmp    al,0xe9
  42488b:	xchg   edi,eax
  42488c:	add    bl,bh
  42488e:	mov    edi,0x54c77a3
  424893:	mov    al,ds:0x7fdcfb4f
  424898:	adc    DWORD PTR [eax-0x17],eax
  42489b:	adc    al,0xc0
  42489d:	or     ebp,DWORD PTR [ebp+0x9]
  4248a0:	add    BYTE PTR [eax],al
  4248a2:	jmp    0x62568ac5
  4248a7:	iret   
  4248a8:	in     al,0xf2
  4248aa:	sub    BYTE PTR [edi-0x3000000],dl
  4248b0:	fadd   QWORD PTR [ecx*4+0x5e2adcb]
  4248b7:	mov    dh,0xb3
  4248b9:	jp     0x424882
  4248bb:	push   ecx
  4248bc:	pop    esi
  4248bd:	rol    DWORD PTR [eax],0x3d
  4248c0:	add    DWORD PTR [eax],edx
  4248c2:	je     0x4248c4
  4248c4:	jg     0x42493d
  4248c6:	sbb    eax,0x412130
  4248cb:	push   edi
  4248cc:	scas   al,BYTE PTR es:[edi]
  4248cd:	les    edx,FWORD PTR [eax+edx*2]
  4248d0:	mov    BYTE PTR [eax+0x24],al
  4248d3:	sbb    al,0xad
  4248d5:	jae    0x4248a2
  4248d7:	test   DWORD PTR ds:0x71c09503,ebp
  4248dd:	les    esi,FWORD PTR [ebp+0x2d]
  4248e0:	data16 out dx,al
  4248e2:	adc    eax,DWORD PTR [ebx-0xafefc3]
  4248e8:	loopne 0x4248b6
  4248ea:	cmovo  ebp,ebp
  4248ed:	sub    eax,0x77af74c0
  4248f2:	ds adc al,0xa2
  4248f5:	jg     0x4248b7
  4248f7:	add    al,0x9d
  4248f9:	test   DWORD PTR [esp-0x37],eax
  4248fd:	push   eax
  4248fe:	not    ebx
  424900:	inc    eax
  424901:	les    eax,FWORD PTR [edi]
  424903:	xchg   ebp,eax
  424904:	jge    0x42495d
  424906:	cli    
  424907:	xor    DWORD PTR [ebp-0x80],ebp
  42490a:	shl    BYTE PTR [ebx+eax*4+0x73],0x6e
  42490f:	adc    al,0x6
  424911:	stos   DWORD PTR es:[edi],eax
  424912:	div    BYTE PTR [ecx+edx*4+0x14]
  424916:	sbb    edi,0xffffffd5
  424919:	push   esi
  42491a:	std    
  42491b:	jmp    FWORD PTR [edx+0x11fefe79]
  424921:	int3   
  424922:	pop    es
  424923:	mov    DWORD PTR [ecx],esi
  424925:	int3   
  424926:	jnp    0xb9ddd2c
  42492c:	mov    eax,edx
  42492e:	(bad)
  424931:	test   eax,0x944010a9
  424936:	and    al,0xc4
  424938:	je     0x4248c9
  42493a:	mov    DWORD PTR [edx+0x4fd57044],eax
  424940:	call   0xfbf6f028
  424945:	retf   
  424946:	jmp    0x4249bb
  424948:	add    DWORD PTR [edi+0x575d9a1e],edi
  42494e:	cmc    
  42494f:	mov    ah,ch
  424951:	gs push es
  424953:	add    DWORD PTR [ebp+0x8],0xa
  424957:	sbb    DWORD PTR [ecx-0x74],0xffffffc1
  42495b:	ins    DWORD PTR es:[edi],dx
  42495c:	int    0xfb
  42495e:	pop    edx
  42495f:	mov    BYTE PTR [ebp-0x60],cl
  424962:	xor    dh,bh
  424964:	push   esi
  424965:	adc    DWORD PTR [edx+0x2a],ebx
  424968:	add    al,0xa6
  42496a:	pop    ecx
  42496b:	test   al,0x16
  42496d:	pop    ss
  42496e:	std    
  42496f:	mov    bh,0x1
  424971:	dec    edx
  424972:	scas   eax,DWORD PTR es:[edi]
  424973:	cmp    BYTE PTR [ebp-0x64],0x67
  424977:	xor    BYTE PTR [edi+eax*4],al
  42497a:	pop    ecx
  42497b:	test   al,0xff
  42497d:	xchg   BYTE PTR [ecx+0x3f],bl
  424980:	xchg   DWORD PTR [ecx-0x57],esp
  424983:	xchg   DWORD PTR [ecx],eax
  424985:	in     al,0x98
  424987:	(bad)  
  424988:	mov    esi,0x874a9990
  42498d:	add    BYTE PTR [eax+0x17f89b16],ch
  424993:	push   ebp
  424994:	add    ecx,DWORD PTR [edi-0x1e]
  424997:	cs scas al,BYTE PTR es:[edi]
  424999:	push   ebx
  42499a:	adc    DWORD PTR [ebx+0x1e946607],edx
  4249a0:	ror    BYTE PTR [ecx+0x1bcd00e8],0x7c
  4249a7:	in     eax,0x2d
  4249a9:	mov    ah,0x5f
  4249ab:	test   BYTE PTR [ecx],ch
  4249ad:	das    
  4249ae:	shr    BYTE PTR [ebx+0x271aff96],1
  4249b4:	cmc    
  4249b5:	mov    ah,0x7b
  4249b7:	cwde   
  4249b8:	scas   eax,DWORD PTR es:[edi]
  4249b9:	das    
  4249ba:	xchg   esp,eax
  4249bb:	add    BYTE PTR [ebp-0x3d],ch
  4249be:	rcl    BYTE PTR [ecx],0x5e
  4249c1:	xor    BYTE PTR [eax-0x6bc71368],ah
  4249c7:	add    BYTE PTR [ebx-0x17f087b8],ah
  4249cd:	xchg   DWORD PTR [ebp+esi*1-0x1c],edx
  4249d1:	leave  
  4249d2:	pop    eax
  4249d3:	in     al,0xd5
  4249d5:	add    edx,DWORD PTR [ebx]
  4249d7:	aas    
  4249d8:	in     eax,dx
  4249d9:	xchg   BYTE PTR [eax+ebx*8-0x18],bh
  4249dd:	jle    0x4249e2
  4249df:	sti    
  4249e0:	push   esp
  4249e1:	les    eax,FWORD PTR [eax+ebx*4+0x3]
  4249e5:	shr    bh,0xaa
  4249e8:	imul   esi,DWORD PTR [eax],0x38e90fb8
  4249ee:	mov    DWORD PTR [edi+0x15],esi
  4249f1:	call   0xabc1f0f6
  4249f6:	or     al,0x66
  4249f8:	cwde   
  4249f9:	jl     0x4249c9
  4249fb:	mov    esi,0x8c495eaa
  424a00:	cwde   
  424a01:	mov    ebp,0xc2aaaf92
  424a06:	push   ecx
  424a07:	in     al,0x0
  424a09:	mov    esi,0x274cb97e
  424a0e:	or     BYTE PTR [ebx+edi*8+0x50984592],dl
  424a15:	push   ecx
  424a16:	ficomp DWORD PTR [ecx-0x56]
  424a19:	cmp    bh,BYTE PTR [edi-0x30]
  424a1c:	in     al,0xff
  424a1e:	loopne 0x424a18
  424a20:	inc    DWORD PTR [esi-0x3e09845b]
  424a26:	jmp    0xe10223bb
  424a2b:	cwde   
  424a2c:	cmc    
  424a2d:	xchg   esp,eax
  424a2e:	sub    DWORD PTR [edx-0x3],edx
  424a31:	jmp    DWORD PTR [ecx-0x24]
  424a34:	in     al,0x3
  424a36:	adc    DWORD PTR [edi],ecx
  424a38:	xchg   ebx,edi
  424a3a:	inc    bh
  424a3c:	(bad)  
  424a3d:	mov    ebp,0xb1f597ed
  424a42:	test   al,0x9b
  424a44:	sub    eax,ebp
  424a46:	jmp    0x558a46ae
  424a4b:	fstcw  WORD PTR [edi-0x41eb5056]
  424a52:	mov    ecx,0xdab869bf
  424a57:	add    cl,dl
  424a59:	sar    BYTE PTR [eax-0x56],1
  424a5c:	pop    esp
  424a5d:	sub    esp,0x81a9336a
  424a63:	mov    ebp,0xe900050b
  424a68:	inc    edx
  424a69:	dec    esi
  424a6a:	push   ebx
  424a6b:	jb     0x424a9d
  424a6d:	div    BYTE PTR [ecx-0x17d673d2]
  424a73:	jmp    0xe16676c8
  424a78:	adc    DWORD PTR [ebx],0x48
  424a7b:	hlt    
  424a7c:	loope  0x424a3c
  424a7e:	inc    esp
  424a7f:	int    0xbb
  424a81:	pop    es
  424a82:	add    cl,ch
  424a84:	xchg   edi,eax
  424a85:	mov    ebp,0xf08c0d44
  424a8a:	je     0x424a75
  424a8c:	xchg   edi,eax
  424a8d:	mov    eax,ds:0xe4532e10
  424a92:	or     esi,ebp
  424a94:	xchg   edi,eax
  424a95:	add    BYTE PTR [eax],al
  424a97:	add    BYTE PTR [edx+0x4d142441],bh
  424a9d:	mov    eax,DWORD PTR [eax]
  424a9f:	add    BYTE PTR [edx+0x77102441],ch
  424aa5:	std    
  424aa6:	(bad)  
  424aa7:	jmp    esi
  424aa9:	inc    ecx
  424aaa:	and    al,0xc
  424aac:	add    al,0xbd
  424aae:	pusha  
  424aaf:	jmp    0xa959:0x4488fd6d
  424ab6:	add    BYTE PTR [ecx+ebx*2+0xd],0x69
  424abb:	rol    BYTE PTR [eax],0xd
  424abe:	mov    eax,DWORD PTR [eax]
  424ac0:	add    BYTE PTR [ecx+eax*2-0x4311efdc],dh
  424ac7:	lea    esi,[ecx+ebx*4-0x64]
  424acb:	jecxz  0x424af0
  424acd:	or     ch,BYTE PTR [esi-0x9]
  424ad0:	(bad)  
  424ad1:	mov    ecx,0x12e90f98
  424ad6:	(bad)  
  424ad7:	(bad)  
  424ad8:	inc    DWORD PTR [eax-0x62ebdbc8]
  424ade:	mov    WORD PTR [esi-0x7a90bde4],ds
  424ae4:	shr    BYTE PTR [ecx-0x3c17b457],0xde
  424aeb:	cmc    
  424aec:	jmp    FWORD PTR [esi-0x10]
  424aef:	and    edx,DWORD PTR [ebp*8+0x45b801f1]
  424af6:	call   0x0:0xa524fffb
  424afd:	lods   eax,DWORD PTR ds:[esi]
  424afe:	jl     0x424b77
  424b00:	add    al,0xad
  424b02:	inc    DWORD PTR [esi+ebx*4-0x73000343]
  424b09:	mov    cl,0xa0
  424b0b:	arpl   WORD PTR [edx],si
  424b0d:	push   esi
  424b0e:	mov    WORD PTR [ebx-0x4ead6b35],ss
  424b14:	das    
  424b15:	mov    dh,BYTE PTR [eax+0x7c]
  424b18:	ret    
  424b19:	jl     0x424a9d
  424b1b:	mov    bh,0xfb
  424b1d:	sbb    DWORD PTR [esi],0xffffffc4
  424b20:	je     0x424b22
  424b22:	pushf  
  424b23:	and    cl,BYTE PTR [eax+0x24]
  424b26:	call   0x9b6a7adb
  424b2b:	lds    eax,FWORD PTR es:[edi+edi*1-0x743f6c69]
  424b33:	inc    edi
  424b34:	les    edx,FWORD PTR [eax+0x3c]
  424b37:	in     al,dx
  424b38:	mov    ecx,0x7a884bfb
  424b3d:	jl     0x424bb7
  424b3f:	jne    0x424ad8
  424b41:	enter  0xaf4e,0xb0
  424b45:	test   BYTE PTR [edi+0x2d],cl
  424b48:	test   BYTE PTR [esi-0x17000a30],0xe7
  424b4f:	cdq    
  424b50:	(bad)  
  424b51:	dec    DWORD PTR [ecx]
  424b53:	mov    fs,ebx
  424b55:	xchg   DWORD PTR [esi+0x10c2ff99],edx
  424b5b:	test   BYTE PTR [ebx-0x5465fc02],0x86
  424b62:	push   esp
  424b63:	cdq    
  424b64:	xchg   edi,eax
  424b65:	inc    ebx
  424b66:	fist   WORD PTR [esi-0x50]
  424b69:	sti    
  424b6a:	mov    eax,ds:0x943f755d
  424b6f:	adc    al,0x83
  424b71:	and    al,0x10
  424b73:	pushf  
  424b74:	(bad)  
  424b75:	call   FWORD PTR ds:0x6237e7de
  424b7b:	sub    al,0x43
  424b7d:	and    al,0x54
  424b7f:	out    0x9a,al
  424b81:	mov    DWORD PTR [ecx+ebx*4+0x4f],edx
  424b85:	lea    eax,[eax]
  424b87:	sub    BYTE PTR [ebp+0x2888ef],bh
  424b8d:	or     eax,0x3116bbf4
  424b92:	mov    al,0x9f
  424b94:	jns    0x424b6b
  424b96:	out    0xb7,eax
  424b98:	sbb    ch,cl
  424b9a:	jle    0x424be4
  424b9c:	fdiv   QWORD PTR [ebp+eax*1-0x6c]
  424ba0:	add    BYTE PTR [edi-0x35],ch
  424ba3:	ins    BYTE PTR es:[edi],dx
  424ba4:	pop    ds
  424ba5:	pop    ds
  424ba6:	mov    al,0x6f
  424ba8:	fwait
  424ba9:	cwde   
  424baa:	mov    al,0x81
  424bac:	hlt    
  424bad:	cmc    
  424bae:	inc    ebx
  424baf:	xchg   esp,eax
  424bb0:	jnp    0x424b5c
  424bb2:	sti    
  424bb3:	adc    BYTE PTR [ecx-0x2fe50063],bh
  424bb9:	mov    esi,0xe9aa15d2
  424bbe:	dec    edi
  424bbf:	jbe    0x424bbe
  424bc1:	jb     0x424bc7
  424bc3:	or     eax,0x69b0e13f
  424bc8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424bc9:	aaa    
  424bca:	inc    esp
  424bcb:	xchg   esp,eax
  424bcc:	jne    0x424bfb
  424bce:	call   0xe867c556
  424bd3:	arpl   WORD PTR [edx],bx
  424bd5:	call   0x291ea45a
  424bda:	push   esp
  424bdb:	sbb    DWORD PTR [ecx*1+0x53bd6f4],ebp
  424be2:	fcom   QWORD PTR [edi-0x29fbd685]
  424be8:	cmp    eax,DWORD PTR ds:0xbdeb00e0
  424bee:	sub    eax,0x7094b3e8
  424bf3:	inc    esp
  424bf4:	xchg   esp,eax
  424bf5:	cwde   
  424bf6:	loopne 0x424bb3
  424bf8:	iret   
  424bf9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424bfa:	pop    edi
  424bfb:	int3   
  424bfc:	adc    edi,DWORD PTR [ecx*8-0xb34e801]
  424c03:	pop    es
  424c04:	adc    edi,DWORD PTR [eax+eax*1]
  424c07:	int    0x87
  424c09:	jg     0x424c87
  424c0b:	lds    ebx,FWORD PTR [edi-0x1be304b0]
  424c11:	push   ebp
  424c12:	aas    
  424c13:	jmp    0xfa525902
  424c18:	xlat   BYTE PTR ds:[ebx]
  424c19:	add    BYTE PTR ds:0x90eb,bh
  424c1f:	neg    BYTE PTR [ebx]
  424c21:	outs   dx,DWORD PTR ds:[esi]
  424c22:	cli    
  424c23:	sub    esi,DWORD PTR ds:[esp+eax*2+0xd]
  424c28:	enter  0xfb50,0xd4
  424c2c:	maskmovq mm7,(bad)
  424c2d:	idiv   DWORD PTR [edi]
  424c2f:	jmp    0x72999706
  424c34:	sub    eax,0xcebcbf44
  424c39:	xchg   esp,eax
  424c3a:	push   ecx
  424c3b:	mov    eax,0xe9f81c16
  424c40:	jmp    0x73f8:0x84c0fad5
  424c47:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424c48:	leave  
  424c49:	jge    0x424c80
  424c4b:	adc    DWORD PTR [edi+0x740040],eax
  424c51:	int3   
  424c52:	test   al,0x50
  424c54:	ss adc eax,0xae39fc3c
  424c5a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424c5b:	cli    
  424c5c:	push   esp
  424c5d:	or     BYTE PTR [ebx+0x2bd76cd2],ch
  424c63:	cs jb  0x424cb2
  424c66:	test   al,0x85
  424c68:	test   eax,0xa97eddab
  424c6d:	xchg   ebp,eax
  424c6e:	sub    al,0x24
  424c70:	xchg   ecx,eax
  424c71:	lods   eax,DWORD PTR ds:[esi]
  424c72:	adc    al,0xfa
  424c74:	sahf   
  424c75:	pop    esi
  424c76:	test   al,0x85
  424c78:	xchg   esi,eax
  424c79:	mov    ecx,DWORD PTR ds:0x35c8248d
  424c7f:	sti    
  424c80:	add    al,al
  424c82:	pop    ecx
  424c83:	dec    edi
  424c84:	push   0xffffffaf
  424c86:	push   esi
  424c87:	jne    0x424c91
  424c89:	sub    cl,bl
  424c8b:	test   eax,eax
  424c8d:	mov    al,ds:0x2be84ea9
  424c92:	add    eax,0x557efff6
  424c97:	push   esi
  424c98:	mov    eax,edx
  424c9a:	ss leave 
  424c9c:	ret    0x171
  424c9f:	dec    ebx
  424ca0:	push   edi
  424ca1:	(bad)  
  424ca3:	and    ecx,DWORD PTR [edi+edi*2]
  424ca6:	mov    edx,0x56aa8de8
  424cab:	test   DWORD PTR [ebx+0x74f778a5],0x74f74b46
  424cb5:	add    BYTE PTR [ecx+0xd],dl
  424cb8:	call   0xf798f73a
  424cbd:	mov    ebp,DWORD PTR [ebp+0x6174ee78]
  424cc3:	dec    ebx
  424cc4:	dec    edi
  424cc5:	jmp    DWORD PTR [eax+0x31]
  424cc8:	or     al,BYTE PTR [eax+0x3d]
  424ccb:	js     0x424c8d
  424ccd:	jne    0x424d0e
  424ccf:	push   ebx
  424cd0:	mov    ebx,0x6be54556
  424cd5:	(bad)  
  424cd6:	cmp    cl,BYTE PTR [ebx-0x18]
  424cd9:	inc    edi
  424cda:	pop    ecx
  424cdb:	push   esi
  424cdc:	neg    DWORD PTR [esi-0x46]
  424cdf:	sub    bh,BYTE PTR [ebx-0x45bd0a5]
  424ce5:	inc    cl
  424ce7:	cwde   
  424ce8:	(bad)  
  424ce9:	(bad)  
  424cea:	shl    ah,1
  424cec:	adc    al,0x40
  424cee:	std    
  424cef:	push   eax
  424cf0:	call   0xf79587a0
  424cf5:	test   BYTE PTR ds:0x94ff05ed,ch
  424cfb:	add    ebp,eax
  424cfd:	add    ecx,ebx
  424cff:	stos   DWORD PTR es:[edi],eax
  424d00:	unpckhps xmm2,XMMWORD PTR [edi+edx*4-0x7e]
  424d05:	rol    BYTE PTR [eax-0x66],0xf0
  424d09:	mov    edi,0x85954
  424d0e:	inc    ecx
  424d0f:	and    ah,BYTE PTR [eax+0x510ab07f]
  424d15:	push   edx
  424d16:	addr16 inc edx
  424d18:	push   ebp
  424d19:	lea    eax,[eax]
  424d1b:	or     DWORD PTR [esi],esi
  424d1d:	ins    BYTE PTR es:[edi],dx
  424d1e:	xchg   ebx,eax
  424d1f:	xchg   esp,eax
  424d20:	cdq    
  424d21:	inc    DWORD PTR [edi+0x329c3ae1]
  424d27:	push   edi
  424d28:	jecxz  0x424cd6
  424d2a:	mov    ebx,0xfff9994
  424d2f:	ret    
  424d30:	xchg   BYTE PTR [eax-0x3e],bh
  424d33:	(bad)  
  424d34:	ficom  DWORD PTR [edx]
  424d36:	inc    esp
  424d37:	sbb    BYTE PTR [ecx-0x1],0x88
  424d3b:	fst    DWORD PTR [ecx]
  424d3d:	jmp    0x50ed0f00
  424d42:	push   ebx
  424d43:	out    0x2e,eax
  424d45:	ret    0x3b50
  424d48:	int    0x7
  424d4a:	adc    eax,0x457699d4
  424d4f:	sub    al,0x6f
  424d51:	ror    BYTE PTR [ebx],0x18
  424d54:	jae    0x424d55
  424d56:	call   DWORD PTR [edx+eax*8-0x2656e3ee]
  424d5d:	add    edi,ebx
  424d5f:	adc    ecx,0xd2084576
  424d65:	sub    eax,0x8362fbfb
  424d6a:	shl    BYTE PTR [ebx-0x6bff7deb],0x99
  424d71:	js     0x424db8
  424d73:	mov    WORD PTR [eax],es
  424d75:	jo     0x424dbd
  424d77:	mov    edi,fs
  424d79:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424d7a:	mov    ss:0xd82c75,al
  424d80:	sbb    eax,0xc478e13e
  424d85:	push   0x940361
  424d8a:	xchg   ecx,eax
  424d8b:	shl    dl,1
  424d8d:	mov    ds:0x4f5b5472,eax
  424d92:	push   0x36
  424d94:	mov    WORD PTR [ebx+0x4087fffc],fs
  424d9a:	jmp    0x5629d217
  424d9f:	mov    al,ss:0xd350b24f
  424da5:	dec    edi
  424da6:	inc    edx
  424da7:	mov    WORD PTR ss:[ebx+0x4088ffd4],fs
  424dae:	jmp    0x3629b22b
  424db3:	aaa    
  424db4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424db5:	mov    ds:0x40854ffc,eax
  424dba:	jmp    0xf54f9d12
  424dbf:	pop    ss
  424dc0:	aam    0x0
  424dc2:	mov    bl,0x53
  424dc4:	sub    al,0xc7
  424dc6:	add    ebp,DWORD PTR [edi+edi*1-0x61c9d684]
  424dcd:	dec    edx
  424dce:	repnz adc eax,0x3a90d70
  424dd4:	or     al,0x45
  424dd6:	loop   0x424d59
  424dd8:	push   esp
  424dd9:	sub    al,0xe5
  424ddb:	rcr    DWORD PTR [ecx-0x5d],0xe8
  424ddf:	push   ecx
  424de0:	prefetchw BYTE PTR [ecx]
  424de3:	adc    DWORD PTR [eax],eax
  424de5:	push   esp
  424de6:	add    BYTE PTR [ecx],al
  424de8:	dec    ecx
  424de9:	jmp    FWORD PTR [esp+ebp*8]
  424dec:	in     al,dx
  424ded:	push   eax
  424dee:	lods   al,BYTE PTR ds:[esi]
  424def:	add    BYTE PTR ds:0xb575a5e8,bh
  424df5:	add    BYTE PTR [ecx-0x58d05906],dh
  424dfb:	jne    0x424d9e
  424dfd:	dec    DWORD PTR [esp+edx*1]
  424e00:	cld    
  424e01:	push   edi
  424e02:	add    BYTE PTR [esi+0x5a46ef24],al
  424e08:	and    bh,cl
  424e0a:	popa   
  424e0b:	add    al,0xe9
  424e0d:	(bad)  
  424e0e:	sub    esp,DWORD PTR [ebp*8+0x6f66ac0f]
  424e15:	out    dx,eax
  424e16:	(bad)  
  424e17:	sti    
  424e18:	fnstsw WORD PTR [ebx-0x4d0c1802]
  424e1e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424e1f:	sti    
  424e20:	sub    ah,ch
  424e22:	jns    0x424e10
  424e24:	mov    eax,0x9a0c3c02
  424e29:	in     eax,0x4d
  424e2b:	jmp    0x6abf:0x1e2
  424e31:	or     BYTE PTR [ecx],al
  424e33:	je     0x424e34
  424e35:	lahf   
  424e36:	sub    al,0x1e
  424e38:	mov    cl,0xab
  424e3a:	push   cs
  424e3b:	xchg   DWORD PTR [edi+eiz*4-0x34193f85],esp
  424e42:	add    BYTE PTR [ecx],al
  424e44:	jmp    0x9e430be0
  424e49:	add    BYTE PTR [edi-0x1af00000],dl
  424e4f:	add    BYTE PTR [eax],al
  424e51:	jmp    0xea3e8aac
  424e56:	xchg   edi,eax
  424e57:	add    al,al
  424e59:	rol    BYTE PTR [edi-0x6822ba43],cl
  424e5f:	add    BYTE PTR [eax],al
  424e61:	sub    DWORD PTR [ebx],ebp
  424e63:	inc    dl
  424e65:	and    al,0x2c
  424e67:	add    DWORD PTR [eax],eax
  424e69:	add    ch,ch
  424e6b:	jge    0x424df0
  424e6d:	inc    ebp
  424e6e:	add    DWORD PTR [eax+eax*1],edx
  424e71:	pop    es
  424e72:	std    
  424e73:	std    
  424e74:	sbb    al,dl
  424e76:	fs std 
  424e78:	add    eax,DWORD PTR [eax]
  424e7a:	in     eax,dx
  424e7b:	xchg   edx,eax
  424e7c:	sar    BYTE PTR [edi-0x27],0xd1
  424e80:	cs test ebp,edi
  424e83:	shr    DWORD PTR [edx],1
  424e85:	cmp    eax,0xfffffcad
  424e8a:	mov    ecx,0xbf003d0b
  424e8f:	std    
  424e90:	push   DWORD PTR [ebx-0x1e]
  424e93:	cwde   
  424e94:	sti    
  424e95:	add    ch,BYTE PTR [ebp-0x385c8b03]
  424e9b:	sti    
  424e9c:	loop   0x424ea0
  424e9e:	addr16 mov eax,ds:0xeb52
  424ea2:	mov    BYTE PTR [eax-0x292fb05],bl
  424ea8:	jae    0x424eb5
  424eaa:	nop
  424eab:	cld    
  424eac:	std    
  424ead:	inc    DWORD PTR [eax]
  424eaf:	jge    0x424e82
  424eb1:	and    BYTE PTR [ebx],bh
  424eb3:	mov    edi,0x863387f0
  424eb8:	cmp    ah,BYTE PTR [edx+0x8]
  424ebb:	push   edx
  424ebc:	dec    esi
  424ebd:	call   0xf799760d
  424ec2:	mov    ebp,DWORD PTR [ebp+0x6275ee80]
  424ec8:	and    al,BYTE PTR [ebp+0x10]
  424ecb:	test   al,0xbd
  424ecd:	je     0x424f49
  424ecf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424ed0:	xchg   ebp,eax
  424ed1:	loop   0x424f49
  424ed3:	pop    ss
  424ed4:	add    bl,ah
  424ed6:	retf   0xa117
  424ed9:	jecxz  0x424f0a
  424edb:	(bad)  
  424edc:	push   esi
  424edd:	test   DWORD PTR [ebp-0x7cfb0fc3],0xe7a89f94
  424ee7:	xchg   esi,eax
  424ee8:	push   es
  424ee9:	les    eax,FWORD PTR [edi-0x164154b7]
  424eef:	xchg   edi,eax
  424ef0:	pop    ss
  424ef1:	lahf   
  424ef2:	add    DWORD PTR ds:0x984a7791,ebx
  424ef8:	sbb    al,0xc4
  424efa:	jne    0x424e8b
  424efc:	cmp    edx,DWORD PTR cs:[eax]
  424eff:	sbb    DWORD PTR [edi+0x30],edx
  424f02:	inc    ecx
  424f03:	sbb    eax,0x2c3d9ccf
  424f08:	pop    ss
  424f09:	add    al,0x0
  424f0b:	xchg   esp,eax
  424f0c:	push   es
  424f0d:	sbb    bh,bh
  424f0f:	mov    dl,0xab
  424f11:	mov    ds:0x9f2100fb,eax
  424f16:	xchg   edi,eax
  424f17:	push   ss
  424f18:	(bad)  
  424f19:	adc    BYTE PTR [ecx-0x43d2b7c],ch
  424f1f:	xchg   BYTE PTR [edx+0x33],bl
  424f22:	fld    QWORD PTR [esi-0x48565f7]
  424f28:	or     BYTE PTR [edx-0x4763ea58],ah
  424f2e:	aas    
  424f2f:	add    BYTE PTR ds:0x113a7ca7,bl
  424f35:	xlat   BYTE PTR ds:[ebx]
  424f36:	das    
  424f37:	or     eax,0xdf9be70f
  424f3c:	inc    ebp
  424f3d:	call   0xf47ea2ea
  424f42:	push   ss
  424f43:	cli    
  424f44:	dec    ebx
  424f45:	pusha  
  424f46:	xchg   edi,eax
  424f47:	in     al,0xad
  424f49:	pop    gs
  424f4b:	jg     0x424f99
  424f4d:	pop    es
  424f4e:	dec    ecx
  424f4f:	pop    edx
  424f50:	iret   
  424f51:	rol    cl,1
  424f53:	or     al,0x94
  424f55:	sub    al,0xc4
  424f57:	je     0x424fbc
  424f59:	sub    ch,BYTE PTR [ebx+edi*8-0x7ae0ff60]
  424f60:	nop
  424f61:	in     al,0xe4
  424f63:	add    eax,DWORD PTR [eax-0x47d89a2d]
  424f69:	or     cl,ch
  424f6b:	jl     0x424f01
  424f6d:	sbb    eax,0x9f471def
  424f72:	aam    0xdf
  424f74:	cdq    
  424f75:	inc    eax
  424f76:	jmp    0x9fd45017
  424f7b:	xor    eax,0x1d9f93e0
  424f80:	loopne 0x424f1d
  424f82:	xor    BYTE PTR [ecx-0x6d61257a],dl
  424f88:	jle    0x424f5e
  424f8a:	sbb    esi,ebp
  424f8c:	jle    0x424f54
  424f8e:	adc    al,0xdd
  424f90:	test   al,0x89
  424f92:	clc    
  424f93:	xlat   BYTE PTR ds:[ebx]
  424f94:	inc    ebx
  424f95:	xchg   esp,eax
  424f96:	mov    ebx,ebp
  424f98:	pushf  
  424f99:	call   0xebc7:0x962f7385
  424fa0:	push   eax
  424fa1:	xchg   esp,eax
  424fa2:	add    cl,ch
  424fa4:	test   BYTE PTR [edi+ebx*4+0x27],bl
  424fa8:	sti    
  424fa9:	xor    DWORD PTR [esi+ebx*2],0xffffff97
  424fad:	retf   
  424fae:	outs   dx,BYTE PTR ss:[esi]
  424fb0:	mov    bl,0xc3
  424fb2:	mov    ebx,0x4be0b4fe
  424fb7:	test   ax,0x145f
  424fbb:	mov    ds:0x9d08b8ea,eax
  424fc0:	inc    edx
  424fc1:	mov    WORD PTR [esi],?
  424fc3:	in     eax,0x2f
  424fc5:	xchg   ebx,eax
  424fc6:	mov    ebp,ebx
  424fc8:	sbb    eax,0x9bb63242
  424fcd:	xor    DWORD PTR [edx-0x29e457fd],0x8d17695
  424fd7:	add    BYTE PTR [ecx-0x1e8a643c],bl
  424fdd:	add    ah,ch
  424fdf:	sar    edx,1
  424fe1:	cld    
  424fe2:	sti    
  424fe3:	or     al,0x40
  424fe5:	jmp    0xecb70ffe
  424fea:	lock sbb ecx,DWORD PTR [eax]
  424fed:	push   ebp
  424fee:	mov    eax,ds:0xfef57587
  424ff3:	lods   eax,DWORD PTR ds:[esi]
  424ff4:	je     0x424fd8
  424ff6:	xor    dh,ch
  424ff8:	pop    ss
  424ff9:	fcom   DWORD PTR [edi+0x0]
  424ffc:	mov    edi,esp
  424ffe:	(bad)  
  424fff:	lock xchg BYTE PTR [esi+0x2486f02f],ch
  425006:	int3   
  425007:	aad    0xbe
  425009:	sbb    eax,0x3600c1c2
  42500e:	nop
  42500f:	add    BYTE PTR [eax],al
  425011:	push   0xfffffff0
  425013:	call   0xe908:0x5e5d225a
  42501a:	inc    esp
  42501b:	xchg   esp,ebp
  42501d:	sbb    BYTE PTR [ecx+0x32],al
  425020:	xchg   DWORD PTR [eax+0x15],ebx
  425023:	xchg   ebx,eax
  425024:	je     0x424fd4
  425026:	push   ss
  425027:	fwait
  425028:	sti    
  425029:	fnstsw WORD PTR [ebp-0x541617e3]
  42502f:	lock inc edi
  425031:	mov    ebp,0xfe75466f
  425036:	lea    ebx,[esi-0x109cbdad]
  42503c:	mov    edi,0x2e9efea9
  425041:	sub    DWORD PTR [eax],eax
  425043:	call   0x193395cd
  425048:	dec    edi
  425049:	push   eax
  42504a:	bound  eax,QWORD PTR [edx-0x5a]
  42504d:	mov    eax,0x8499f238
  425052:	add    BYTE PTR [ebp-0x30],bh
  425055:	or     bh,bh
  425057:	jecxz  0x425071
  425059:	jne    0x425053
  42505b:	xchg   ebp,eax
  42505c:	cld    
  42505d:	sar    dh,1
  42505f:	sub    bl,BYTE PTR [esi]
  425061:	shl    BYTE PTR [eax+eax*1+0x1b],0x45
  425066:	clc    
  425067:	out    0xa,al
  425069:	test   edi,edi
  42506b:	popa   
  42506c:	lock not BYTE PTR ds:0x3ff505
  425073:	fs sahf 
  425075:	loop   0x425081
  425077:	jo     0x4250df
  425079:	je     0x425081
  42507b:	xor    bl,BYTE PTR [edi+0x1ed004e]
  425081:	jnp    0x42504b
  425083:	cli    
  425084:	inc    ebx
  425085:	leave  
  425086:	ret    0x1b1
  425089:	test   esi,esi
  42508b:	mov    eax,ds:0xafe7aa1
  425090:	out    dx,al
  425091:	adc    eax,0x84a32657
  425096:	jmp    DWORD PTR [ecx+0x15c78298]
  42509c:	sbb    dl,al
  42509e:	(bad)  
  42509f:	sub    cl,BYTE PTR [esi-0x18]
  4250a2:	(bad)  
  4250a3:	gs arpl di,si
  4250a6:	push   esi
  4250a7:	add    ch,ah
  4250a9:	sbb    al,0x68
  4250ab:	(bad)  
  4250ac:	jmp    0xc080:0xae5fbb92
  4250b3:	je     0x425038
  4250b5:	pop    esi
  4250b6:	add    BYTE PTR [edi+0x7d],dl
  4250b9:	add    DWORD PTR [eax],eax
  4250bb:	xor    DWORD PTR [ebp-0x9aa449a],0x75
  4250c2:	sub    esp,0xffffff45
  4250c8:	add    bl,BYTE PTR [edx]
  4250ca:	jge    0x4250e4
  4250cc:	xchg   esp,eax
  4250cd:	and    al,0x80
  4250cf:	clc    
  4250d0:	cmp    DWORD PTR [esi],ecx
  4250d2:	mov    ds:0xf76c1f50,al
  4250d7:	out    0x7a,eax
  4250d9:	test   eax,0x2bc3ffff
  4250de:	mov    edi,0x2bae8074
  4250e3:	adc    al,0x21
  4250e5:	sub    al,0xac
  4250e7:	std    
  4250e8:	or     edi,DWORD PTR [esi-0x286f8a5b]
  4250ee:	fwait
  4250ef:	aaa    
  4250f0:	stc    
  4250f1:	int    0xa5
  4250f3:	leave  
  4250f4:	xlat   BYTE PTR ds:[ebx]
  4250f5:	adc    DWORD PTR [ebx],edi
  4250f7:	adc    al,0x11
  4250f9:	xor    BYTE PTR [bp+si],al
  4250fc:	(bad)  [esi-0x586bffb4]
  425102:	or     al,0xd3
  425105:	dec    edi
  425106:	rol    DWORD PTR [edi+0x51fbc350],0x0
  42510d:	ret    
  42510e:	cli    
  42510f:	fisttp WORD PTR [edi]
  425111:	psllq  mm3,mm7
  425114:	pop    ss
  425115:	mov    bl,0x9a
  425117:	fisttp DWORD PTR [edi]
  425119:	mov    esp,0xa3fba1e6
  42511e:	hlt    
  42511f:	rol    BYTE PTR [edi+0x52fbc350],0x93
  425126:	mov    esi,0xbe1f13db
  42512b:	fist   DWORD PTR [ebx]
  42512d:	cmp    DWORD PTR [esi-0x5093f025],0xffffffa5
  425134:	sti    
  425135:	jae    0x42519a
  425137:	rol    BYTE PTR [edi+0x51fc05d0],0xf
  42513e:	pop    esi
  42513f:	fild   DWORD PTR [edi]
  425141:	ins    BYTE PTR es:[edi],dx
  425142:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  425144:	sti    
  425145:	push   ebx
  425146:	add    ebx,eax
  425148:	rcl    BYTE PTR [ebx],0x45
  42514b:	(bad)
  42514e:	dec    ebp
  42514f:	int    0xff
  425151:	out    0x9b,al
  425153:	xchg   ebp,eax
  425154:	fistp  WORD PTR [edi-0x7c207a79]
  42515a:	test   al,0x28
  42515c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42515d:	pop    ds
  42515e:	pushf  
  42515f:	xchg   edx,eax
  425160:	rol    cl,0x87
  425163:	std    
  425164:	add    BYTE PTR [eax],0x9
  425167:	out    0x3,eax
  425169:	xchg   esp,eax
  42516a:	xor    ebp,DWORD PTR [esi+0x26]
  42516d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42516e:	lea    ebp,[ebx+ebp*4+0x0]
  425172:	stc    
  425173:	fwait
  425174:	retf   0x1b53
  425177:	inc    esi
  425178:	icebp  
  425179:	fwait
  42517a:	pop    ds
  42517b:	add    ch,cl
  42517d:	add    edi,DWORD PTR [edi]
  42517f:	test   BYTE PTR [ecx+0x648d802f],ch
  425185:	stos   DWORD PTR es:[edi],eax
  425186:	rcr    DWORD PTR [ebx-0x7543ac5e],1
  42518c:	mov    dh,0xa5
  42518e:	mov    edi,0x902fa984
  425193:	iret   
  425194:	test   al,0xba
  425196:	repz jg 0x42514a
  425199:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42519a:	fnstsw WORD PTR [edi-0x7e4f86ec]
  4251a0:	test   DWORD PTR [ebx],edx
  4251a2:	call   0xcf33:0xe650e99b
  4251a9:	add    BYTE PTR [ecx],bl
  4251ab:	adc    eax,0x21fa4461
  4251b0:	mov    edi,0xaba8dc29
  4251b5:	adc    edx,DWORD PTR [eax+eax*1+0x7f967acb]
  4251bc:	and    eax,DWORD PTR [ecx]
  4251be:	iret   
  4251bf:	adc    eax,0x5b644400
  4251c4:	bound  esp,QWORD PTR [eax-0x6e]
  4251c7:	xchg   esi,eax
  4251c8:	xchg   DWORD PTR [edi+eiz*4+0x6f6ad6eb],ebp
  4251cf:	add    al,0x1
  4251d1:	pushf  
  4251d2:	cmp    al,BYTE PTR [edx+0xc00e170]
  4251d8:	call   0xfcf0:0x85a1ff2e
  4251df:	not    DWORD PTR [esi+0x7440150]
  4251e5:	add    cl,ch
  4251e7:	lea    eax,[di-0x1f]
  4251eb:	rol    BYTE PTR [ecx+0x8c07c2],0x0
  4251f2:	aas    
  4251f3:	aaa    
  4251f4:	cmc    
  4251f5:	jnp    0x4251ef
  4251f7:	push   edi
  4251f8:	add    BYTE PTR [ebp-0x72ef7357],al
  4251fe:	or     BYTE PTR fs:[ebp-0x685f4905],bl
  425205:	adc    eax,0xffdacb55
  42520a:	jno    0x4251e4
  42520c:	mov    WORD PTR [ebp-0x4690a67],es
  425212:	pusha  
  425213:	gs lock mov eax,ss:0x487348c
  42521b:	test   BYTE PTR [ebx-0x40e50e8b],al
  425221:	cli    
  425222:	push   0xffffffce
  425224:	cdq    
  425225:	jecxz  0x425236
  425227:	push   ss
  425228:	xchg   edi,eax
  425229:	sti    
  42522a:	push   0x28
  42522c:	xchg   esi,eax
  42522d:	je     0x42524e
  42522f:	retf   
  425230:	dec    ecx
  425231:	push   ebx
  425232:	mov    edi,0xf97595c7
  425237:	stos   BYTE PTR es:[edi],al
  425238:	dec    ecx
  425239:	sti    
  42523a:	add    BYTE PTR [eax],al
  42523c:	dec    eax
  42523d:	out    dx,al
  42523e:	or     DWORD PTR [eax+0x6d],eax
  425241:	mov    ebx,0xb9977eba
  425246:	bnd jle 0x4252bc
  425249:	jno    0x425257
  42524b:	xor    BYTE PTR ds:0x3b74f6dd,dh
  425251:	mov    ebx,0x86477dbe
  425256:	sbb    DWORD PTR [edx+0x3f],ebp
  425259:	out    0xb,al
  42525b:	mov    edi,ebp
  42525d:	std    
  42525e:	div    BYTE PTR [ebp+0x25]
  425261:	pop    edi
  425262:	adc    eax,0x3e3b30
  425267:	xor    edi,DWORD PTR [ebp-0x42f33b7f]
  42526d:	imul   edi,edx,0x563f2d32
  425273:	pop    ebx
  425274:	xor    al,0xc3
  425276:	sub    eax,eax
  425278:	mov    ebp,0xc18b55c1
  42527d:	sub    ah,0x3c
  425280:	mov    edx,ebp
  425282:	cmp    BYTE PTR [ebp-0x3f],0xd6
  425286:	div    BYTE PTR [ebp-0x1b]
  425289:	jmp    0x42528a
  42528b:	imul   edi,DWORD PTR [ebp+0x2508755e],0x22fff9b4
  425295:	mov    esi,eax
  425297:	cmp    ecx,0xffffff91
  42529a:	test   dh,dh
  42529c:	test   eax,0xfe7ace
  4252a1:	and    dh,cl
  4252a3:	popa   
  4252a4:	mov    ebp,DWORD PTR [ebx-0x533bb290]
  4252aa:	pop    ebp
  4252ab:	xor    bh,bh
  4252ad:	mov    BYTE PTR [ebp-0x7792bff3],dl
  4252b3:	shl    BYTE PTR [ebp-0x6c],0xa4
  4252b7:	mov    al,BYTE PTR [ebp-0x74]
  4252ba:	aas    
  4252bb:	mov    eax,0x82426bfd
  4252c0:	enter  0x2e63,0x4a
  4252c4:	(bad)  
  4252c5:	ror    edi,1
  4252c7:	cs (bad) 
  4252c9:	(bad)  
  4252cb:	cs sti 
  4252cd:	mov    eax,ds:0x943ff42b
  4252d2:	and    al,0xbf
  4252d4:	je     0x42527a
  4252d6:	repnz pop ss
  4252d8:	adc    BYTE PTR [ecx],ah
  4252da:	fs xchg edi,eax
  4252dc:	sti    
  4252dd:	mov    eax,ds:0x89fb2f93
  4252e2:	jg     0x4252d8
  4252e4:	aas    
  4252e5:	xchg   esp,eax
  4252e6:	push   ds
  4252e7:	dec    eax
  4252e8:	les    ebx,FWORD PTR [edi]
  4252ea:	jl     0x4252df
  4252ec:	jle    0x4252e2
  4252ee:	or     DWORD PTR [esi],esp
  4252f0:	mov    DWORD PTR [ebp-0x6afbdeda],edx
  4252f6:	cmp    al,0x3
  4252f8:	xchg   DWORD PTR [ebx-0x61],esi
  4252fb:	lods   al,BYTE PTR ds:[esi]
  4252fc:	(bad)  
  4252fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4252fe:	ret    0x7b84
  425301:	mov    BYTE PTR [eax-0x76fff7ee],ch
  425307:	daa    
  425308:	add    al,0x0
  42530a:	xchg   esp,eax
  42530b:	inc    ecx
  42530c:	xchg   DWORD PTR [ecx],eax
  42530e:	pop    ds
  42530f:	imul   eax,DWORD PTR [ecx+0x5a],0x873365cd
  425316:	test   al,0x27
  425318:	mov    al,0x8
  42531a:	xchg   esi,eax
  42531b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42531c:	dec    DWORD PTR [esi+0x42]
  42531f:	push   cs
  425320:	ror    DWORD PTR [edi],cl
  425322:	test   edi,esp
  425324:	add    eax,DWORD PTR [edi-0x790c0144]
  42532a:	aam    0xa9
  42532c:	xor    al,0xfb
  42532e:	bound  eax,QWORD PTR [ecx]
  425330:	ins    BYTE PTR es:[edi],dx
  425331:	les    ecx,FWORD PTR [ecx]
  425333:	out    dx,eax
  425334:	ins    DWORD PTR es:[edi],dx
  425335:	dec    ecx
  425336:	mov    ebp,?
  425338:	repnz add eax,0xa0b90094
  42533e:	loope  0x425348
  425340:	inc    edx
  425341:	neg    DWORD PTR [ebx+0x2403a8f1]
  425347:	add    bh,BYTE PTR [esi]
  425349:	inc    eax
  42534a:	mov    esp,0x94445dec
  42534f:	xor    esp,DWORD PTR [edx]
  425351:	mov    edx,0xb94c119
  425356:	adc    eax,DWORD PTR [eax-0x1f]
  425359:	test   BYTE PTR [edi+ebp*8-0x3],dl
  42535d:	shl    DWORD PTR [edx+0x1b0f9102],0x41
  425364:	jmp    0x6530729d
  425369:	cmc    
  42536a:	add    bl,dl
  42536c:	add    BYTE PTR [esp+eax*8-0x7f],ah
  425370:	int3   
  425371:	push   eax
  425372:	or     BYTE PTR [ebp+0x3b84e900],dl
  425378:	add    esi,DWORD PTR [esi]
  42537a:	xor    al,0x21
  42537c:	dec    esi
  42537d:	rcr    DWORD PTR [esi-0x34996811],1
  425383:	fild   QWORD PTR [eax-0x68219c18]
  425389:	ins    BYTE PTR es:[edi],dx
  42538a:	ret    
  42538b:	dec    esi
  42538c:	clc    
  42538d:	pop    ebp
  42538e:	leave  
  42538f:	mov    ebp,DWORD PTR fs:[edx]
  425392:	or     al,0x99
  425394:	fsubrp st(4),st
  425396:	add    edx,DWORD PTR [eax+esi*1-0x5763e96e]
  42539d:	cmc    
  42539e:	inc    ecx
  42539f:	xchg   esp,eax
  4253a0:	add    BYTE PTR [ebx+eax*8+0x29],ch
  4253a4:	bound  esi,QWORD PTR [edi+0x3b3ec3]
  4253aa:	mov    al,ds:0x19fffc59
  4253af:	popa   
  4253b0:	scas   al,BYTE PTR es:[edi]
  4253b1:	cmp    edi,eax
  4253b3:	fwait
  4253b4:	or     eax,DWORD PTR [ebp+0x9784]
  4253ba:	shr    DWORD PTR [edi+0x7e],0x40
  4253be:	jmp    0xdb9a40f7
  4253c3:	xlat   BYTE PTR ds:[ebx]
  4253c4:	add    BYTE PTR [ecx+0xb5638e7],cl
  4253ca:	ins    DWORD PTR es:[edi],dx
  4253cb:	mov    DWORD PTR [eax],0x7f00e900
  4253d1:	cmp    BYTE PTR [ecx],cl
  4253d3:	jmp    0x1e4a726f
  4253d8:	bound  esi,QWORD PTR [edi-0x64685559]
  4253de:	adc    eax,0xffd720e5
  4253e3:	outs   dx,DWORD PTR ds:[esi]
  4253e4:	int    0x8
  4253e6:	aaa    
  4253e7:	sub    al,BYTE PTR [ebx-0xd9dacdc]
  4253ed:	pop    edx
  4253ee:	push   cs
  4253ef:	test   eax,0x72302897
  4253f4:	pop    eax
  4253f5:	add    bl,bh
  4253f7:	pop    ss
  4253f8:	sbb    esi,DWORD PTR [ebx+0x28a02787]
  4253fe:	cmp    al,0x62
  425400:	push   eax
  425401:	add    BYTE PTR [ecx+0x329b8c28],cl
  425407:	mov    esi,0xe14a7f23
  42540c:	jg     0x425456
  42540e:	xchg   DWORD PTR [ecx],ebp
  425410:	nop
  425411:	mov    DWORD PTR [ecx-0xf],eax
  425414:	and    dl,dl
  425416:	cli    
  425417:	mov    dh,0xf
  425419:	dec    edx
  42541a:	or     BYTE PTR [ecx],al
  42541c:	jo     0x42549d
  42541e:	inc    eax
  42541f:	jmp    0x4e953c
  425424:	sbb    ch,BYTE PTR [esi+0x4626d7f6]
  42542a:	or     BYTE PTR [ecx+0x46828cbc],cl
  425430:	jne    0x425409
  425432:	cmp    BYTE PTR [eax+0x0],bl
  425435:	jno    0x425425
  425437:	push   cs
  425438:	cmp    DWORD PTR [ebp+0xa],edx
  42543b:	je     0x42544f
  42543d:	test   ah,dl
  42543f:	or     esi,DWORD PTR [eax+ecx*2-0x4b]
  425443:	push   ebx
  425444:	adc    BYTE PTR [ecx],ah
  425446:	or     ch,BYTE PTR [ebx]
  425448:	shr    BYTE PTR ds:0x26043e85,0xc3
  42544f:	push   eax
  425450:	call   0x383ce4
  425455:	(bad)  
  425456:	(bad)  
  425457:	pop    es
  425458:	jmp    DWORD PTR [ebx+0x77]
  42545b:	adc    eax,0x422f5c
  425460:	mov    DWORD PTR [ebx],edi
  425462:	mov    al,0xbb
  425464:	pop    ebx
  425465:	outs   dx,BYTE PTR ds:[esi]
  425466:	mov    DWORD PTR [esi],edi
  425468:	or     BYTE PTR [edx],al
  42546a:	or     DWORD PTR [esi],ebx
  42546c:	add    al,0xfd
  42546e:	add    DWORD PTR [eax-0x41],edx
  425471:	icebp  
  425472:	cld    
  425473:	(bad)  
  425474:	inc    edx
  425476:	jne    0x42548d
  425478:	sbb    dh,bh
  42547a:	inc    ecx
  42547b:	add    BYTE PTR [ebp+0x31fef93d],al
  425481:	cmp    eax,0xed00f865
  425486:	add    DWORD PTR [ebx+0x548ae54e],eax
  42548c:	and    al,0xb5
  42548e:	into   
  42548f:	add    cl,0xdb
  425492:	(bad)  
  425493:	(bad)  
  425494:	jmp    DWORD PTR ds:0xfe9c3d
  42549a:	sbb    cl,BYTE PTR [ecx-0x766b8a40]
  4254a0:	xchg   BYTE PTR [edx-0x64],cl
  4254a3:	das    
  4254a4:	call   0x6481:0x8cfea3fb
  4254ab:	popf   
  4254ac:	(bad)  
  4254ad:	call   FWORD PTR [edi]
  4254af:	fisttp QWORD PTR [ebx]
  4254b1:	mov    DWORD PTR ds:0x9400054b,edx
  4254b7:	adc    al,BYTE PTR [ebp+0x8]
  4254ba:	out    0xfa,eax
  4254bc:	mov    dh,0x89
  4254be:	or     al,0xef
  4254c0:	add    DWORD PTR [eax],eax
  4254c2:	xchg   esp,eax
  4254c3:	and    al,BYTE PTR [ebp+0x8]
  4254c6:	or     eax,0x9401db1f
  4254cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4254cc:	xchg   BYTE PTR [edx-0x64],al
  4254cf:	and    BYTE PTR [edi+0x40],dh
  4254d2:	xchg   edx,eax
  4254d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4254d4:	inc    DWORD PTR [esi-0x7f3d7026]
  4254da:	rcr    BYTE PTR [ebp-0x586a0001],1
  4254e0:	(bad)  
  4254e1:	call   FWORD PTR [edi]
  4254e3:	pop    ebp
  4254e4:	pop    es
  4254e5:	mov    esp,edi
  4254e7:	dec    esi
  4254e8:	add    eax,0x45129400
  4254ed:	or     bh,al
  4254ef:	loopne 0x425515
  4254f1:	mov    DWORD PTR [edi+esi*2],ebx
  4254f4:	add    eax,0x42129400
  4254f9:	or     BYTE PTR [edi+edi*2],cl
  4254fc:	add    al,BYTE PTR cs:[eax]
  4254ff:	xchg   esp,eax
  425500:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425501:	mov    BYTE PTR [edx-0x64],al
  425504:	aas    
  425505:	out    dx,al
  425506:	xchg   BYTE PTR [edi+eiz*4+0x2],dl
  42550a:	dec    esi
  42550b:	xchg   ebx,eax
  42550c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42550d:	dec    DWORD PTR [edi-0x2d]
  425510:	mov    bl,0xb
  425512:	adc    DWORD PTR [edi+eiz*4-0x78],edx
  425516:	inc    edx
  425517:	mov    WORD PTR [eax],es
  425519:	(bad)  
  42551b:	sub    al,0xf0
  42551d:	ins    DWORD PTR es:[edi],dx
  42551e:	inc    esp
  42551f:	xchg   esp,eax
  425520:	sti    
  425521:	ss or  al,0x94
  425524:	add    BYTE PTR [ecx],bh
  425526:	popf   
  425527:	mov    esp,ebp
  425529:	xlat   BYTE PTR ds:[ebx]
  42552a:	inc    ebx
  42552b:	xchg   esp,eax
  42552c:	mov    DWORD PTR [ebx],esp
  42552e:	or     al,0xe6
  425530:	test   DWORD PTR [ecx-0x2c],esp
  425533:	xchg   ebp,eax
  425534:	add    cl,ch
  425536:	xor    ch,ah
  425538:	les    ebx,FWORD PTR [edx]
  42553a:	inc    edx
  42553b:	xchg   esp,eax
  42553c:	sub    BYTE PTR [edi-0x2b],dh
  42553f:	mov    cl,0x0
  425541:	rcr    DWORD PTR [ecx],0xa7
  425544:	ds jmp 0xa70e4f75
  42554a:	add    ebp,esp
  42554c:	cs repnz inc ecx
  42554f:	xchg   esp,eax
  425550:	sub    bh,ch
  425552:	aam    0x89
  425554:	add    cl,al
  425556:	nop
  425557:	xchg   BYTE PTR [esi],bh
  425559:	jmp    0xa70f3c89
  42555e:	add    edi,DWORD PTR [ebp+eax*2-0x6bffbe23]
  425565:	test   DWORD PTR [ebx+0x5a25ac0f],ebx
  42556b:	inc    esp
  42556c:	xchg   esp,eax
  42556d:	xor    edx,edi
  42556f:	xor    ebx,DWORD PTR [eax+0x1d0ba387]
  425575:	add    bl,BYTE PTR [esi+0x46]
  425578:	mov    WORD PTR [edi-0x53],?
  42557b:	xlat   BYTE PTR ds:[ebx]
  42557c:	stos   BYTE PTR es:[edi],al
  42557d:	leave  
  42557e:	and    ah,bh
  425580:	dec    edx
  425581:	add    edi,DWORD PTR [ebx+eax*8+0x4f]
  425585:	mov    esi,0x3b1b03e5
  42558a:	in     eax,dx
  42558b:	dec    ebx
  42558c:	pusha  
  42558d:	push   DWORD PTR [eax]
  42558f:	pop    ss
  425590:	test   al,0x87
  425592:	add    BYTE PTR [edi],ch
  425594:	cwde   
  425595:	adc    edi,DWORD PTR [eax]
  425597:	jmp    0xda3d5a47
  42559c:	sbb    BYTE PTR [ecx],dh
  42559e:	adc    BYTE PTR [edx+0x59],dh
  4255a1:	or     BYTE PTR [edi-0x37],bh
  4255a4:	xchg   edi,eax
  4255a5:	cmp    DWORD PTR [edi+0x7fa50d34],edi
  4255ab:	xchg   ebp,eax
  4255ac:	mov    eax,DWORD PTR [ebx+0x53]
  4255af:	jle    0x42555b
  4255b1:	add    al,0xfb
  4255b3:	fcom   QWORD PTR [edi]
  4255b5:	add    al,BYTE PTR [eax-0x17]
  4255b8:	or     al,0x98
  4255ba:	das    
  4255bb:	inc    edx
  4255bc:	or     bh,BYTE PTR [edi]
  4255be:	sti    
  4255bf:	jo     0x425573
  4255c1:	mov    WORD PTR [ecx-0x62af44c],cs
  4255c7:	jmp    0xb42eccc
  4255cc:	outs   dx,BYTE PTR ds:[esi]
  4255cd:	in     al,0x0
  4255cf:	add    cl,ch
  4255d1:	sbb    al,0x46
  4255d3:	or     BYTE PTR [edx-0x7e],ah
  4255d6:	or     BYTE PTR [eax-0x1b],ch
  4255d9:	xchg   esi,eax
  4255da:	add    BYTE PTR [eax],al
  4255dc:	push   0x56
  4255de:	out    dx,al
  4255df:	out    0x1f,eax
  4255e1:	lods   eax,DWORD PTR ds:[esi]
  4255e2:	xchg   esi,eax
  4255e3:	sti    
  4255e4:	ins    BYTE PTR es:[edi],dx
  4255e5:	push   edi
  4255e6:	or     eax,0xd00b67c
  4255eb:	or     al,0x74
  4255ed:	ror    BYTE PTR [eax+edx*2-0x4a946ef],cl
  4255f4:	not    BYTE PTR [edx]
  4255f6:	shl    BYTE PTR [edx+eax*4+0x16],0x15
  4255fb:	cld    
  4255fc:	jmp    0x5b425691
  425601:	in     eax,0x41
  425603:	push   ebx
  425604:	(bad)  
  425605:	test   DWORD PTR [edi+ecx*2],eax
  425608:	shl    DWORD PTR [edi-0x2dff05a5],0x82
  42560f:	clc    
  425610:	mov    edi,DWORD PTR [ebx+0x4]
  425613:	mov    BYTE PTR [eax-0x17],bl
  425616:	popa   
  425617:	add    cl,BYTE PTR [ebx+0x7d83047b]
  42561d:	sbb    DWORD PTR [esi-0x4e43ebc0],edi
  425623:	bnd je 0x4255fb
  425626:	cmp    DWORD PTR [esi],0x67fd9708
  42562c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42562d:	add    ch,dl
  42562f:	cmp    al,0x0
  425631:	push   0x400da0
  425636:	xchg   ebp,eax
  425637:	sbb    bh,BYTE PTR [eax]
  425639:	inc    edx
  42563a:	ins    DWORD PTR es:[edi],dx
  42563b:	retf   
  42563c:	dec    esi
  42563d:	push   0x408379
  425642:	shr    BYTE PTR [esi+esi*8-0x3b848ab0],cl
  425649:	and    al,bh
  42564b:	mov    esp,0xb1ae9507
  425650:	jl     0x425646
  425652:	or     DWORD PTR [eax],eax
  425654:	dec    edi
  425655:	call   0x3830e5
  42565a:	jb     0x42564b
  42565c:	repz call 0x383105
  425662:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425663:	mov    ecx,0xef820ae3
  425668:	repz call 0x3830fd
  42566e:	fistp  QWORD PTR [ebp-0x453ba4a9]
  425674:	or     BYTE PTR [eax],al
  425676:	sub    BYTE PTR [ebx-0x5c77414],al
  42567c:	sub    ah,0x5
  42567f:	cld    
  425680:	(bad)  
  425681:	jmp    FWORD PTR [edx-0x6bd33f87]
  425687:	xlat   BYTE PTR ds:[ebx]
  425688:	xchg   esi,eax
  425689:	jne    0x425617
  42568b:	xor    al,0x80
  42568d:	clc    
  42568e:	fnstcw WORD PTR [edx+0x1f005096]
  425694:	shl    DWORD PTR [edi-0x5890da],0x84
  42569b:	aam    0xcb
  42569d:	loop   0x425625
  42569f:	push   ebx
  4256a0:	mov    esi,DWORD PTR [ecx]
  4256a2:	xchg   DWORD PTR [ebx],ebp
  4256a4:	fwait
  4256a5:	mov    BYTE PTR [ecx+edx*2-0x5c046791],al
  4256ac:	xlat   BYTE PTR ds:[ebx]
  4256ad:	mov    BYTE PTR [ebp-0x4698364],al
  4256b3:	in     al,0x6f
  4256b5:	xchg   edx,eax
  4256b6:	cli    
  4256b7:	mov    ecx,DWORD PTR [edx]
  4256b9:	cmp    DWORD PTR [esp+edx*2-0x2c04fd75],eax
  4256c0:	(bad)  
  4256c1:	sar    BYTE PTR [edi+0x8c4d0d3],cl
  4256c7:	xchg   esp,eax
  4256c8:	push   esp
  4256c9:	mov    ch,ah
  4256cb:	pop    ss
  4256cc:	ror    edx,cl
  4256ce:	dec    esi
  4256cf:	ret    0xba96
  4256d2:	data16 mov al,ds:0xe7dc4024
  4256d8:	ja     0x425666
  4256da:	pop    ebp
  4256db:	and    BYTE PTR fs:[eax],bh
  4256de:	aam    0xd
  4256e0:	mov    esp,0xab89fbb7
  4256e5:	icebp  
  4256e6:	aas    
  4256e7:	xchg   esp,eax
  4256e8:	es mov ebx,0xaf6c110c
  4256ee:	mov    DWORD PTR [ecx+0x10c2a6ef],edi
  4256f4:	xchg   edx,eax
  4256f5:	cdq    
  4256f6:	test   BYTE PTR [eax],al
  4256f8:	aam    0x99
  4256fa:	jnp    0x425696
  4256fc:	xchg   esp,eax
  4256fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4256fe:	(bad)  
  4256ff:	cli    
  425700:	add    DWORD PTR [eax],0x937babf1
  425706:	ficomp DWORD PTR [ecx+0x7fe2c010]
  42570c:	push   cs
  42570d:	add    cl,ch
  42570f:	add    edx,DWORD PTR [ebx]
  425711:	or     ebp,ebp
  425713:	xchg   BYTE PTR [ecx-0x50],bl
  425716:	adc    eax,ecx
  425718:	push   ecx
  425719:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42571a:	dec    ebp
  42571b:	lea    edx,[eax+eax*1+0x60]
  42571f:	aas    
  425720:	les    eax,FWORD PTR [esi-0x15506fbc]
  425726:	push   0x60006bf6
  42572b:	aas    
  42572c:	pushf  
  42572d:	aam    0xa5
  42572f:	adc    cl,BYTE PTR [eax-0x29e799e6]
  425735:	mov    ds,WORD PTR ds:0x60409010
  42573b:	aas    
  42573c:	jl     0x4256ce
  42573e:	repnz dec DWORD PTR [eax]
  425741:	inc    esi
  425742:	push   ebp
  425743:	lea    ebx,[edi+0x7a]
  425746:	loop   0x4256f3
  425748:	jecxz  0x425777
  42574a:	jmp    0x556ff452
  42574f:	adc    bh,BYTE PTR [esi+0x7b]
  425752:	lods   al,BYTE PTR ds:[esi]
  425753:	mov    ebx,0x44521dbc
  425758:	xchg   esp,eax
  425759:	sbb    BYTE PTR [edi+0x8100dc],al
  42575f:	xchg   esi,eax
  425760:	cwde   
  425761:	test   BYTE PTR [edi-0x3b4cf847],cl
  425767:	stc    
  425768:	rcl    ecx,0xfb
  42576b:	out    0x7e,eax
  42576d:	push   esp
  42576e:	push   ss
  42576f:	out    0x8b,al
  425771:	mov    ecx,0xe40f73fb
  425776:	cwde   
  425777:	rcr    DWORD PTR [ecx+0x6200900f],cl
  42577d:	ret    
  42577e:	mov    ah,0x48
  425780:	jne    0x425712
  425782:	cmp    BYTE PTR [ebp-0xf],dh
  425785:	or     al,0x16
  425787:	fcom   st(1)
  425789:	fisub  WORD PTR [ecx]
  42578b:	cli    
  42578c:	(bad)  
  42578d:	mov    esi,0x8f55d02c
  425792:	mov    esi,DWORD PTR [ebp-0x67]
  425795:	sub    al,0xf6
  425797:	pop    ebx
  425798:	fist   DWORD PTR [edi+0x0]
  42579b:	xchg   BYTE PTR [ecx+edx*4],ch
  42579e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42579f:	sub    DWORD PTR [edx+ecx*4-0x50],ebx
  4257a3:	call   0xfbce623b
  4257a8:	jb     0x425814
  4257aa:	mov    ah,0x48
  4257ac:	sbb    eax,0xe1753899
  4257b1:	cld    
  4257b2:	adc    eax,0x220a91d8
  4257b7:	cli    
  4257b8:	jle    0x425828
  4257ba:	sub    al,0xd0
  4257bc:	std    
  4257bd:	mov    cs,WORD PTR [ebx+0x1c009975]
  4257c3:	cmc    
  4257c4:	pop    ebx
  4257c5:	sti    
  4257c6:	xlat   BYTE PTR ds:[ebx]
  4257c7:	add    BYTE PTR [esi],ch
  4257c9:	sub    DWORD PTR [ebp+0x632bc937],ebp
  4257cf:	(bad)  
  4257d0:	push   ebp
  4257d1:	bound  ecx,QWORD PTR [ebx-0x6a8df81c]
  4257d7:	xor    eax,DWORD PTR [edi+0x4302c2f]
  4257dd:	ins    BYTE PTR es:[edi],dx
  4257de:	push   edi
  4257df:	adc    eax,0x8b4c6a05
  4257e4:	out    0xf7,eax
  4257e6:	or     DWORD PTR [esi+0x19f1114b],0x881016fa
  4257f0:	test   DWORD PTR [esi],ecx
  4257f2:	mov    esi,eax
  4257f4:	out    0x0,eax
  4257f6:	repz repnz cmc 
  4257f9:	push   DWORD PTR [ecx-0x3d]
  4257fc:	je     0x425805
  4257fe:	jbe    0x425801
  425800:	or     esi,0xffffffea
  425803:	rol    DWORD PTR [edi],1
  425805:	cmp    edx,0x76
  425808:	je     0x425814
  42580a:	jo     0x425883
  42580c:	je     0x425814
  42580e:	mov    ds:0xed927c5c,al
  425813:	add    al,BYTE PTR [ebx-0x7cfa98fa]
  425819:	into   
  42581a:	or     dl,BYTE PTR [esi+edx*2-0x462a12cd]
  425821:	add    al,0xad
  425823:	iret   
  425824:	sub    ah,0x0
  425827:	ins    BYTE PTR es:[edi],dx
  425828:	fild   WORD PTR [edx+0x757e30f8]
  42582e:	add    al,0xbf
  425830:	ret    0x3ce3
  425833:	xor    BYTE PTR [edi+0x74],dh
  425836:	adc    al,0xa7
  425838:	add    al,0x4e
  42583a:	push   0x3da81e
  42583f:	xchg   edi,eax
  425840:	add    al,0xe8
  425842:	pop    ebp
  425843:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425844:	add    al,0x0
  425846:	mov    BYTE PTR [eax+0x77],al
  425849:	jecxz  0x42585e
  42584b:	and    ebx,edx
  42584d:	fidivr DWORD PTR ds:0x62022f
  425853:	aad    0x1c
  425855:	pop    ebx
  425856:	(bad)  
  425857:	fidivr DWORD PTR [edi-0x40]
  42585a:	pavgb  mm7,QWORD PTR [edi]
  42585d:	test   DWORD PTR [eax+0x75007708],0x69fe7b35
  425867:	cmp    al,0x7b
  425869:	(bad)  
  42586a:	jmp    FWORD PTR ds:0x94ff4578
  425870:	push   esi
  425871:	int3   
  425872:	mov    edi,0x81a822c1
  425877:	add    BYTE PTR [edi*8+0x2d6b0bff],cl
  42587e:	push   ebx
  42587f:	adc    ebp,ecx
  425881:	arpl   bp,di
  425883:	sti    
  425884:	sahf   
  425885:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425886:	xchg   esi,eax
  425887:	cmp    ah,BYTE PTR [edi+0x6100fb92]
  42588d:	fwait
  42588e:	xchg   BYTE PTR [ebp+0xe],bh
  425891:	mov    bh,0x10
  425893:	or     BYTE PTR ds:0xa598ceb7,dl
  425899:	(bad)  
  42589a:	mov    WORD PTR [ebp-0x40],?
  42589d:	scas   eax,DWORD PTR es:[edi]
  42589e:	fisub  DWORD PTR [eax-0x3e]
  4258a1:	push   esi
  4258a2:	into   
  4258a3:	(bad)  
  4258a4:	or     eax,0xd7379be5
  4258a9:	jmp    0x4258cc
  4258ab:	sti    
  4258ac:	and    DWORD PTR [ebx+0x7fda872f],ebx
  4258b2:	add    ch,BYTE PTR [ecx+0x14297e9b]
  4258b8:	and    DWORD PTR [ecx+esi*1],ebx
  4258bb:	sti    
  4258bc:	mov    ecx,DWORD PTR [esi]
  4258be:	das    
  4258bf:	dec    edi
  4258c0:	adc    DWORD PTR [edi+edx*2-0x58e1b381],ecx
  4258c7:	ror    DWORD PTR [esi],cl
  4258c9:	and    eax,0xad548592
  4258ce:	clc    
  4258cf:	xchg   BYTE PTR [edx+0x47],bl
  4258d2:	daa    
  4258d3:	mov    BYTE PTR [edx],ch
  4258d5:	pop    edx
  4258d6:	dec    DWORD PTR [ecx+ebx*1+0x4bfb961f]
  4258dd:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  4258df:	out    0xdc,al
  4258e1:	xchg   edi,eax
  4258e2:	inc    DWORD PTR [esp+edx*2+0x6ec070ae]
  4258e9:	add    BYTE PTR [esi],ah
  4258eb:	adc    BYTE PTR [ebp+0x1d28d1],bl
  4258f1:	or     eax,0x1f9a7183
  4258f6:	lea    ebx,[eax+eax*4+0x2c]
  4258fa:	mov    DWORD PTR [edx],eax
  4258fc:	xchg   esi,eax
  4258fd:	fs (bad) 
  4258ff:	aam    0x73
  425901:	xchg   ebx,eax
  425902:	inc    eax
  425903:	jmp    0x74bdf031
  425908:	mov    ds:0x4d71984c,eax
  42590d:	out    dx,eax
  42590e:	mov    WORD PTR [ecx+0x37],?
  425911:	fwait
  425912:	lds    ebp,FWORD PTR [eax+ebx*4]
  425915:	xchg   ebp,eax
  425916:	add    cl,ch
  425918:	add    edi,DWORD PTR [ebx-0x6a598018]
  42591e:	add    cl,ch
  425920:	xchg   BYTE PTR [ecx],bl
  425922:	pusha  
  425923:	mov    ah,0x95
  425925:	mov    edi,0x5d43d177
  42592a:	adc    ebx,DWORD PTR [edi-0x4369142e]
  425930:	add    al,0x94
  425932:	add    BYTE PTR [esi+0x17],bl
  425935:	mov    al,ds:0x900f8a34
  42593a:	jle    0x425968
  42593c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42593d:	in     al,0x16
  42593f:	aad    0x38
  425941:	adc    DWORD PTR [esi],ecx
  425943:	pop    ecx
  425944:	lods   al,BYTE PTR ds:[esi]
  425945:	test   DWORD PTR [eax+0x6b],esp
  425948:	xchg   ebp,eax
  425949:	repz (bad) 
  42594b:	cmc    
  42594c:	sub    BYTE PTR [esp+ecx*4-0x16],0x7f
  425951:	inc    BYTE PTR [eax]
  425953:	jmp    0xc455595b
  425958:	mov    ecx,0x3e691986
  42595d:	xchg   ebp,eax
  42595e:	dec    edi
  42595f:	xor    DWORD PTR [edi+edi*2+0x24],ebp
  425963:	mov    al,BYTE PTR [eax]
  425965:	and    DWORD PTR ss:[ecx],esi
  425968:	call   0x42c932
  42596d:	ins    BYTE PTR es:[edi],dx
  42596e:	push   eax
  42596f:	clc    
  425970:	sub    DWORD PTR [ecx-0x68],0x0
  425974:	add    dl,bl
  425976:	fdivr  QWORD PTR [ebx]
  425978:	push   0x9869
  42597d:	xchg   ebx,eax
  42597e:	xchg   esi,eax
  42597f:	cmp    ecx,DWORD PTR [edi-0x6f]
  425982:	xchg   edi,eax
  425983:	add    BYTE PTR [eax],al
  425985:	sub    DWORD PTR [ebx],edx
  425987:	xchg   BYTE PTR [eax+0x508808f0],dl
  42598d:	out    0xfa,al
  42598f:	fisttp DWORD PTR ds:0xf0839829
  425995:	push   0x1
  425997:	mov    BYTE PTR [ebp-0x10],dh
  42599a:	sub    dh,dh
  42599c:	pop    ss
  42599d:	fcom   DWORD PTR [edi+0x0]
  4259a0:	jg     0x425963
  4259a2:	xchg   DWORD PTR ds:0x8c7ab650,edx
  4259a8:	sub    DWORD PTR [esp+ecx*1],0x97e8ff99
  4259af:	sbb    al,BYTE PTR [edx+edx*4-0x1a827cab]
  4259b6:	fs jge 0x4259fe
  4259b9:	lea    eax,[eax]
  4259bb:	(bad)  
  4259bc:	das    
  4259bd:	sti    
  4259be:	cld    
  4259bf:	das    
  4259c0:	cs sti 
  4259c2:	aam    0x6b
  4259c4:	std    
  4259c5:	aas    
  4259c6:	jmp    0xe0b71ac5
  4259cb:	xor    DWORD PTR [ebp+0x7],eax
  4259ce:	call   0xd63e6621
  4259d3:	xchg   esp,eax
  4259d4:	js     0x425a33
  4259d6:	loop   0x425981
  4259d8:	xchg   DWORD PTR ds:0xffcb45fd,edx
  4259de:	jmp    FWORD PTR [ebx]
  4259e0:	je     0x4259f7
  4259e2:	mov    al,ds:0x38003f5f
  4259e7:	and    al,bh
  4259e9:	je     0x4259f7
  4259eb:	ror    BYTE PTR [edx],1
  4259ed:	nop
  4259ee:	stc    
  4259ef:	jb     0x425a65
  4259f1:	push   eax
  4259f2:	call   0x3911e7
  4259f7:	cmp    dl,0xf7
  4259fa:	call   0x382e1e
  4259ff:	push   esp
  425a00:	add    DWORD PTR gs:[eax],eax
  425a03:	in     eax,dx
  425a04:	add    DWORD PTR [ebp-0x890ff60],0x3ffefdc6
  425a0e:	dec    ecx
  425a0f:	dec    eax
  425a10:	jge    0x425994
  425a12:	inc    ebp
  425a13:	out    0xcd,al
  425a15:	push   ebp
  425a16:	pop    ebx
  425a17:	xor    al,0xc2
  425a19:	or     BYTE PTR [eax],al
  425a1b:	mov    BYTE PTR [ebx],cl
  425a1d:	in     al,dx
  425a1e:	add    DWORD PTR [eax],0x853e1
  425a24:	lods   eax,DWORD PTR ds:[esi]
  425a25:	ror    DWORD PTR [ebp+0x57],1
  425a28:	xor    BYTE PTR [ecx],ch
  425a2a:	xchg   esp,eax
  425a2b:	std    
  425a2c:	add    ch,BYTE PTR [edi-0x18]
  425a2f:	stc    
  425a30:	pop    ecx
  425a31:	outs   dx,DWORD PTR ds:[esi]
  425a32:	imul   DWORD PTR [edx-0x57]
  425a35:	(bad)  [edx-0x73]
  425a38:	sub    BYTE PTR [esi],dh
  425a3a:	idiv   edi
  425a3c:	and    dl,ch
  425a3e:	popa   
  425a3f:	add    BYTE PTR [eax],al
  425a41:	call   0x6e87ddf1
  425a46:	call   0xf7b13ea9
  425a4b:	test   DWORD PTR ds:0xbb8b1cef,edi
  425a51:	aam    0x67
  425a53:	mov    BYTE PTR [ebx],dl
  425a55:	inc    edx
  425a56:	add    BYTE PTR [ebp-0x87fe36c],cl
  425a5c:	push   ebx
  425a5d:	cmp    esi,DWORD PTR [eax+ebp*8]
  425a60:	lds    ebp,FWORD PTR [edx-0x1]
  425a63:	call   FWORD PTR [ecx]
  425a65:	fdivr  st,st(6)
  425a67:	xchg   esp,eax
  425a68:	push   esp
  425a69:	sbb    al,0xc4
  425a6b:	jne    0x425a0a
  425a6d:	xchg   BYTE PTR [edi-0x7fe2e29e],bh
  425a73:	mul    DWORD PTR [ebx]
  425a75:	jmp    0x4259f7
  425a77:	test   DWORD PTR [eax],ecx
  425a79:	out    dx,eax
  425a7a:	mov    ?,ebx
  425a7c:	fs cli 
  425a7e:	clc    
  425a7f:	(bad)  
  425a80:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425a81:	push   edi
  425a82:	inc    DWORD PTR [esi-0x71f5bf00]
  425a88:	sti    
  425a89:	sti    
  425a8a:	jge    0x425a83
  425a8c:	mov    WORD PTR [ecx-0xd],gs
  425a8f:	sub    ebp,eax
  425a91:	popf   
  425a92:	imul   ecx,DWORD PTR [esi-0x2d4cea05],0x36b28598
  425a9c:	xchg   edx,ebx
  425a9e:	mov    DWORD PTR [eax+0x6db0107d],0x2c4ac29e
  425aa8:	pop    ecx
  425aa9:	pop    ss
  425aaa:	push   eax
  425aab:	mov    cs,WORD PTR [ebx]
  425aad:	sbb    bl,dl
  425aaf:	add    al,0x0
  425ab1:	xchg   esp,eax
  425ab2:	push   cs
  425ab3:	(bad)  
  425ab4:	push   eax
  425ab5:	adc    DWORD PTR ds:0x729bf77b,esp
  425abb:	das    
  425abc:	lea    ebx,[ecx]
  425abe:	and    ecx,DWORD PTR [ebx+edi*8+0xa9be78b]
  425ac5:	jmp    0x425a5e
  425ac7:	inc    DWORD PTR [esp+edx*2-0x6aa67c5e]
  425ace:	xchg   edi,eax
  425acf:	dec    DWORD PTR [ecx+edx*1+0x5f9b1d00]
  425ad6:	mov    DWORD PTR [ecx+0x50841180],edi
  425adc:	xchg   edx,eax
  425add:	dec    edi
  425ade:	xor    BYTE PTR [edx-0x8],cl
  425ae1:	adc    ebp,edi
  425ae3:	test   al,0x3
  425ae5:	ret    
  425ae6:	and    esi,DWORD PTR ds:0x430d0003
  425aec:	cmp    DWORD PTR [esi-0x782576d4],eax
  425af2:	mov    ?,edi
  425af4:	call   0x217dfdfc
  425af9:	xchg   edx,eax
  425afa:	or     DWORD PTR [ebx-0x76f06577],eax
  425b00:	mov    ecx,0xfe7c1180
  425b05:	xchg   ecx,eax
  425b06:	jmp    FWORD PTR [edi]
  425b08:	ins    BYTE PTR es:[edi],dx
  425b09:	mov    BYTE PTR [eax],dl
  425b0b:	xchg   edx,esi
  425b0d:	xchg   ecx,eax
  425b0e:	inc    esp
  425b0f:	cwde   
  425b10:	and    eax,0x6c009439
  425b15:	les    ecx,FWORD PTR [edi-0x6bfb637c]
  425b1b:	add    BYTE PTR [ecx-0x7c],al
  425b1e:	xchg   esp,eax
  425b1f:	add    cl,ch
  425b21:	sbb    eax,0x1be616cb
  425b26:	xchg   esp,eax
  425b27:	add    cl,ch
  425b29:	or     DWORD PTR [ecx],0xffffff83
  425b2c:	ins    DWORD PTR es:[edi],dx
  425b2d:	mov    ebp,DWORD PTR [edi+0x517f1988]
  425b33:	mov    BYTE PTR [ecx-0x65762a2b],dl
  425b39:	mov    ah,dl
  425b3b:	clc    
  425b3c:	ins    BYTE PTR es:[edi],dx
  425b3d:	ins    BYTE PTR es:[edi],dx
  425b3e:	xchg   esp,eax
  425b3f:	add    cl,ch
  425b41:	jle    0x425b14
  425b43:	mov    BYTE PTR [ecx],bl
  425b45:	jg     0x425b50
  425b47:	popf   
  425b48:	mov    bh,0xac
  425b4a:	ins    BYTE PTR es:[edi],dx
  425b4b:	push   es
  425b4c:	add    BYTE PTR [edi-0x7b73fa00],ch
  425b52:	test   eax,0xdc87218c
  425b57:	cmp    eax,DWORD PTR [eax-0x672d0d3e]
  425b5d:	je     0x425b1d
  425b5f:	sbb    BYTE PTR [esi],al
  425b61:	call   0x6e74084f
  425b66:	icebp  
  425b67:	push   ss
  425b68:	mov    eax,DWORD PTR [eax]
  425b6a:	jmp    0xaeb55c26
  425b6f:	mov    dl,0x42
  425b71:	(bad)  
  425b72:	arpl   WORD PTR [eax+0xd],dx
  425b75:	ds adc edx,edx
  425b78:	and    eax,0x88991efa
  425b7d:	test   DWORD PTR [esi],edx
  425b7f:	lods   al,BYTE PTR ds:[esi]
  425b80:	rol    DWORD PTR [edi+edx*1-0x619a0a61],cl
  425b87:	and    al,0xee
  425b89:	and    ebx,ebx
  425b8b:	push   edi
  425b8c:	add    BYTE PTR [edi+0x21],bh
  425b8f:	add    eax,0xac9707a0
  425b94:	jne    0x425bdb
  425b96:	loope  0x425b3f
  425b98:	cwde   
  425b99:	mov    ebx,0x378c05a7
  425b9e:	scas   eax,DWORD PTR es:[edi]
  425b9f:	stos   BYTE PTR es:[edi],al
  425ba0:	and    al,0x52
  425ba2:	ss dec ebx
  425ba4:	jge    0x425b3a
  425ba6:	les    esp,FWORD PTR [esp+ecx*4]
  425ba9:	call   0xfbcd89b3
  425bae:	bound  ebx,QWORD PTR [edx-0x8]
  425bb1:	mov    cl,bh
  425bb3:	add    BYTE PTR [esi],ch
  425bb5:	add    eax,0x8b965af4
  425bba:	jne    0x425b5d
  425bbc:	add    al,0xee
  425bbe:	lahf   
  425bbf:	sti    
  425bc0:	xlat   BYTE PTR ds:[ebx]
  425bc1:	add    BYTE PTR [edi+0x1c],bh
  425bc4:	sbb    BYTE PTR [ebx-0x10c9ff7c],cl
  425bca:	or     ecx,DWORD PTR [ebp-0x68010]
  425bd0:	jmp    0xf771:0x3476e7d3
  425bd7:	cmp    DWORD PTR [eax+0x6f],0x0
  425bdb:	jne    0x425b64
  425bdd:	pop    es
  425bde:	inc    ebp
  425bdf:	clc    
  425be0:	aad    0xfb
  425be2:	(bad)  
  425be3:	(bad)  
  425be4:	fiadd  DWORD PTR [esi]
  425be6:	test   DWORD PTR [edx+eax*4],esi
  425be9:	jo     0x425be2
  425beb:	push   eax
  425bec:	jp     0x425bdc
  425bee:	out    dx,eax
  425bef:	call   DWORD PTR [eax+0x13]
  425bf2:	adc    DWORD PTR [eax+0x3d],eax
  425bf5:	jle    0x425bb7
  425bf7:	cmpxchg BYTE PTR [esi-0xa],dh
  425bfb:	(bad)  
  425bfc:	jp     0x425c62
  425bfe:	adc    BYTE PTR [edi-0x6b],dl
  425c01:	ficomp WORD PTR [esi+edi*8-0x66]
  425c05:	fs stos DWORD PTR es:[edi],eax
  425c07:	lea    esi,[eax]
  425c09:	jnp    0x425bf3
  425c0b:	dec    esi
  425c0c:	mov    al,0x71
  425c0e:	idiv   edi
  425c10:	jo     0x425c85
  425c12:	not    DWORD PTR ds:0x3b9249
  425c18:	add    BYTE PTR [esi+eiz*2],dh
  425c1b:	add    DWORD PTR [eax],eax
  425c1d:	in     eax,dx
  425c1e:	jg     0x425ba5
  425c20:	xchg   esp,eax
  425c21:	call   0xbe09539c
  425c26:	add    al,BYTE PTR [eax+0x49]
  425c29:	xor    BYTE PTR [ebp-0x7d],0x45
  425c2d:	add    DWORD PTR [ebx+0x14],ebp
  425c30:	mov    ecx,0xfffffcdb
  425c35:	dec    eax
  425c36:	jns    0x425bcc
  425c38:	std    
  425c39:	cli    
  425c3a:	jbe    0x425bfa
  425c3c:	add    BYTE PTR [ebp-0x6b8ab6be],ch
  425c42:	jo     0x425c13
  425c44:	mov    edi,0xc926d5eb
  425c49:	push   esi
  425c4a:	xchg   esp,eax
  425c4b:	call   DWORD PTR [edi+ecx*1+0x74]
  425c4f:	test   esp,ebp
  425c51:	mov    BYTE PTR [ecx-0x1ae80001],bl
  425c57:	mov    edi,ebx
  425c59:	mov    DWORD PTR [ebp-0x2f],0x809beed6
  425c60:	test   DWORD PTR [eax+0x2d],eax
  425c63:	mov    edi,ebx
  425c65:	in     al,0x36
  425c67:	sbb    DWORD PTR [eax],ecx
  425c69:	scas   al,BYTE PTR es:[edi]
  425c6a:	xchg   ebp,eax
  425c6b:	daa    
  425c6c:	call   0x41f9e0
  425c71:	and    DWORD PTR ds:0xd72bfda0,edx
  425c77:	xor    edi,ebx
  425c79:	test   eax,0x758a8b
  425c7e:	jl     0x425c6f
  425c80:	es push ebp
  425c82:	xchg   esp,eax
  425c83:	xchg   edi,eax
  425c84:	jbe    0x425c76
  425c86:	adc    esi,ebp
  425c88:	pop    ss
  425c89:	aas    
  425c8a:	pop    ss
  425c8b:	jge    0x425c7c
  425c8d:	inc    DWORD PTR [edi-0x7b8a7559]
  425c93:	mov    ds,WORD PTR [eax]
  425c95:	sbb    bl,ch
  425c97:	lods   al,BYTE PTR ds:[esi]
  425c98:	or     DWORD PTR [edi],0x54
  425c9b:	xchg   edi,eax
  425c9c:	mov    al,al
  425c9e:	pusha  
  425c9f:	jmp    0x425c2b
  425ca1:	jne    0x425c4b
  425ca3:	sbb    al,0x48
  425ca5:	clc    
  425ca6:	ds cwde 
  425ca8:	sbb    DWORD PTR [eax],eax
  425caa:	sub    al,0x97
  425cac:	(bad)  
  425cad:	call   esp
  425caf:	inc    esi
  425cb0:	sbb    BYTE PTR [eax],bl
  425cb2:	mov    esp,0xabfac30b
  425cb7:	sbb    edi,DWORD PTR [edi-0x5dff808b]
  425cbd:	clc    
  425cbe:	sub    edi,0x28
  425cc1:	add    al,0x13
  425cc3:	mov    DWORD PTR [ecx],edi
  425cc5:	sbb    BYTE PTR [edi-0x6bfcae3d],dl
  425ccb:	add    ah,bh
  425ccd:	push   es
  425cce:	jle    0x425c91
  425cd0:	imul   ecx,DWORD PTR [edx-0x2da0ed08],0x8c247365
  425cda:	ins    BYTE PTR es:[edi],dx
  425cdb:	sub    BYTE PTR ds:0x23795f8d,0x2d
  425ce2:	add    bl,ch
  425ce4:	mov    bh,0x27
  425ce6:	test   DWORD PTR [ebx+0x2c],0x2fe59f5e
  425ced:	iret   
  425cee:	add    edi,esp
  425cf0:	add    al,0xff
  425cf2:	cld    
  425cf3:	xor    ebx,DWORD PTR [ebp+0x940897]
  425cf9:	jo     0x425c96
  425cfb:	and    eax,DWORD PTR [ebp-0x72ba8517]
  425d01:	pop    es
  425d02:	jl     0x425d5d
  425d04:	mov    BYTE PTR [edi+0x3],bh
  425d07:	adc    edi,DWORD PTR [edi-0x67ffc7a0]
  425d0d:	mov    edi,0xb6009408
  425d12:	mov    esp,0x18f13bf3
  425d17:	xchg   esp,eax
  425d18:	icebp  
  425d19:	fwait
  425d1a:	(bad)  
  425d1b:	ins    BYTE PTR es:[edi],dx
  425d1c:	lock or DWORD PTR [esp+edx*4],eax
  425d20:	das    
  425d21:	cmp    DWORD PTR [esi+ebp*4-0x34fc16ba],ebx
  425d28:	std    
  425d29:	cmc    
  425d2a:	xor    al,0x98
  425d2c:	ja     0x425d19
  425d2e:	jp     0x425d96
  425d30:	cld    
  425d31:	scas   eax,DWORD PTR es:[edi]
  425d32:	rcr    DWORD PTR [ebx],0x3c
  425d35:	add    BYTE PTR ds:0x543cda0,cl
  425d3b:	mov    al,ds:0x9e1b1111
  425d40:	jge    0x425d86
  425d42:	lds    edx,FWORD PTR [ebx+0xcd43cb]
  425d48:	xchg   ebx,eax
  425d49:	syscall 
  425d4b:	ficom  DWORD PTR [edi+0x41]
  425d4e:	out    0xeb,eax
  425d50:	fs inc esp
  425d52:	mov    esi,0x872d97d9
  425d57:	test   DWORD PTR ds:0xaa1a3095,edx
  425d5d:	das    
  425d5e:	lea    ebp,[ebx+eiz*1-0x45b72cf]
  425d65:	xor    BYTE PTR [ebp-0x78ced454],cl
  425d6b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425d6c:	aas    
  425d6d:	jne    0x425dcc
  425d6f:	and    eax,0x3fc1d118
  425d74:	and    DWORD PTR [ebp-0x40],edi
  425d77:	out    0x13,al
  425d79:	xchg   BYTE PTR [eax],al
  425d7b:	jmp    0xf587d917
  425d80:	pushf  
  425d81:	call   0x7bddff0c
  425d86:	ret    
  425d87:	bound  esp,QWORD PTR ds:0x3ba9004b
  425d8d:	fnstcw WORD PTR [eax+0x9369]
  425d93:	rcr    BYTE PTR [edx-0x70],0x6e
  425d97:	rol    DWORD PTR [eax+0x37438fd],cl
  425d9d:	adc    ecx,DWORD PTR [edi]
  425d9f:	out    0x82,al
  425da1:	nop
  425da2:	(bad)  
  425da3:	fisub  DWORD PTR [eax]
  425da5:	push   cs
  425da6:	in     al,dx
  425da7:	cli    
  425da8:	(bad)  
  425da9:	xor    BYTE PTR [edx-0x3f],dl
  425dac:	add    BYTE PTR [edx],bl
  425dae:	mov    bl,bh
  425db0:	add    dl,dl
  425db2:	push   0x7bfd31fa
  425db7:	ror    BYTE PTR [edi],0x39
  425dba:	add    al,BYTE PTR [eax]
  425dbc:	add    BYTE PTR [ebp-0x17440f8],ch
  425dc2:	mov    dh,0x44
  425dc4:	call   0x5b0f478
  425dc9:	fs jmp 0xe875:0x747e72e3
  425dd1:	outs   dx,BYTE PTR ds:[esi]
  425dd2:	jno    0x425dcb
  425dd4:	jne    0x425def
  425dd6:	nop
  425dd7:	rcl    BYTE PTR [eax-0x75],0x64
  425ddb:	pop    eax
  425ddc:	push   edx
  425dde:	je     0x425dc3
  425de0:	add    bh,BYTE PTR [edi-0x44]
  425de3:	test   al,al
  425de5:	imul   ebx,ebx,0x70b6c782
  425deb:	cmp    DWORD PTR [ebp-0x33],eax
  425dee:	icebp  
  425def:	adc    DWORD PTR [edi+0x28],esi
  425df2:	mov    dh,0x74
  425df4:	fsub   st(7),st
  425df6:	(bad)  
  425df7:	div    BYTE PTR [ebp-0x23]
  425dfa:	add    dl,ch
  425dfc:	(bad)  
  425dfd:	call   0xde036954
  425e02:	int3   
  425e03:	out    0x2f,eax
  425e05:	mov    dl,0x74
  425e07:	imul   ebx
  425e09:	push   DWORD PTR [eax-0x14527b45]
  425e0f:	xor    cl,BYTE PTR [ebx-0x14f75600]
  425e15:	cmp    DWORD PTR [eax],edi
  425e17:	push   edi
  425e18:	push   0x1a
  425e1a:	push   0xfffffffa
  425e1c:	cmp    BYTE PTR [ebp-0x77],dh
  425e1f:	icebp  
  425e20:	or     bh,bh
  425e22:	cmp    BYTE PTR [ebx+edi*8-0xf],dl
  425e26:	repnz lock rcl DWORD PTR [ebx],cl
  425e2a:	xchg   esp,eax
  425e2b:	pop    eax
  425e2c:	xor    al,0x52
  425e2e:	lods   al,BYTE PTR ds:[esi]
  425e2f:	call   0x2e02:0xadbbfb86
  425e36:	aam    0x1c
  425e38:	les    esi,FWORD PTR [esi+eax*4+0x1e]
  425e3c:	inc    ecx
  425e3d:	adc    BYTE PTR [ecx],bl
  425e3f:	pop    ecx
  425e40:	adc    BYTE PTR [ebx],al
  425e42:	pop    ss
  425e43:	xchg   ecx,eax
  425e44:	xchg   BYTE PTR [edi-0x24],bh
  425e47:	fwait
  425e48:	xchg   BYTE PTR [eax-0x792a816b],dh
  425e4e:	add    DWORD PTR [eax+edi*2+0x6e708075],esp
  425e55:	cli    
  425e56:	jae    0x425e5b
  425e58:	cmp    DWORD PTR [ebp-0x7c],0xffffff97
  425e5c:	or     edx,DWORD PTR [ecx]
  425e5e:	out    dx,al
  425e5f:	lahf   
  425e60:	jp     0x425e24
  425e62:	les    ebx,FWORD PTR [edx]
  425e64:	adc    DWORD PTR [eax],edx
  425e66:	push   ebx
  425e67:	(bad)  
  425e68:	iret   
  425e69:	adc    esp,edx
  425e6b:	xchg   edi,eax
  425e6c:	add    ah,0x90
  425e6f:	push   ds
  425e70:	sub    DWORD PTR [eax],ecx
  425e72:	or     DWORD PTR [ebp-0x75],edx
  425e75:	push   eax
  425e76:	add    ah,al
  425e78:	addr16 das 
  425e7a:	call   0xfbc82fe9
  425e7f:	ret    
  425e80:	jno    0x425eac
  425e82:	leave  
  425e83:	push   esi
  425e84:	mov    edi,?
  425e86:	push   esp
  425e87:	pop    ds
  425e88:	hlt    
  425e89:	test   ah,ch
  425e8b:	lods   al,BYTE PTR ds:[esi]
  425e8c:	xchg   ebp,eax
  425e8d:	(bad)  
  425e8e:	jmp    DWORD PTR [edi+0x49]
  425e91:	cs sti 
  425e93:	or     DWORD PTR [ebx-0x7aff7a88],0x4ebfb86
  425e9d:	test   DWORD PTR [edi-0x14],0x9400325b
  425ea4:	add    BYTE PTR [esi-0x6d],ch
  425ea7:	sbb    DWORD PTR [ebx+0xd77fea],ecx
  425ead:	jmp    0xbbf94b5
  425eb2:	add    al,0x8f
  425eb4:	jl     0x425e3a
  425eb6:	add    edx,DWORD PTR [eax+eax*1-0x7e67c79a]
  425ebd:	test   BYTE PTR [edx-0xacb7de7],0x8
  425ec4:	jl     0x425e5b
  425ec6:	mov    BYTE PTR [edi-0x5e74c67f],cl
  425ecc:	js     0x425ec4
  425ece:	inc    ebx
  425ecf:	xchg   esp,eax
  425ed0:	jnp    0x425e7b
  425ed2:	setno  BYTE PTR [eax-0x17]
  425ed6:	add    edx,DWORD PTR [esi+edi*8+0x6b001e18]
  425edd:	pop    ss
  425ede:	jmp    0x943:0xe900941b
  425ee5:	jnp    0x425f3c
  425ee7:	mov    BYTE PTR [edi-0x7f],cl
  425eea:	mov    ecx,0x40f4d178
  425eef:	jle    0x425ef3
  425ef1:	or     BYTE PTR [edx+0x7f],0x54
  425ef5:	or     al,0xc1
  425ef7:	js     0x425ed2
  425ef9:	mov    WORD PTR [ecx+0x20b2f80],ds
  425eff:	mov    ebp,DWORD PTR [ecx-0x77bfa410]
  425f05:	xor    BYTE PTR [ecx],dl
  425f07:	xor    al,0xe
  425f09:	sbb    DWORD PTR [edx],0x890bd47f
  425f0f:	xchg   BYTE PTR [ecx-0x4ceff574],al
  425f15:	jge    0x425e9b
  425f17:	mov    ebp,edi
  425f19:	or     al,ah
  425f1b:	xor    al,BYTE PTR [edi+0x73]
  425f1e:	add    BYTE PTR [ebx+edx*1-0x1c8b04d0],ch
  425f25:	test   DWORD PTR ds:0xffc0ca09,edx
  425f2b:	arpl   ax,dx
  425f2d:	cwde   
  425f2e:	adc    BYTE PTR [ebx+eax*4-0x74],ah
  425f32:	push   eax
  425f33:	cmp    DWORD PTR [eax+0xff55d73],eax
  425f39:	add    ebp,eax
  425f3b:	mov    edi,0x3dc07c1d
  425f40:	add    BYTE PTR [ebp+0xcdd7585],bh
  425f46:	jmp    0x425ee7
  425f48:	sti    
  425f49:	xlat   BYTE PTR ds:[ebx]
  425f4a:	add    BYTE PTR [edi+0x2c],bh
  425f4d:	mov    WORD PTR [ebx+0x52],?
  425f50:	cs or  eax,0xd7fa9016
  425f56:	add    BYTE PTR [ebp+0x620684a9],al
  425f5c:	push   0x5e
  425f5e:	or     BYTE PTR [edx],0x6c
  425f61:	mov    ebx,0xe36efb7b
  425f66:	lds    ecx,FWORD PTR [ebx]
  425f68:	push   ecx
  425f69:	cwde   
  425f6a:	mov    esi,0x1e05efa
  425f6f:	out    0xe3,eax
  425f71:	retf   0xbc5
  425f74:	inc    ecx
  425f75:	and    al,0x42
  425f77:	cli    
  425f78:	inc    esi
  425f79:	dec    edx
  425f7a:	rcr    BYTE PTR [ebx-0x61],0x78
  425f7e:	dec    ecx
  425f7f:	mov    esi,0x498797e5
  425f84:	rcr    DWORD PTR [eax-0x170604ff],1
  425f8a:	dec    eax
  425f8b:	test   BYTE PTR [ecx],ch
  425f8d:	or     eax,0x5764c195
  425f92:	jnp    0x425f53
  425f94:	push   cs
  425f95:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425f96:	and    al,0x4
  425f98:	add    BYTE PTR [esi+0x3b],ah
  425f9b:	sbb    BYTE PTR [ebx+0x50f735fc],cl
  425fa1:	icebp  
  425fa2:	push   esp
  425fa3:	enter  0x84,0xad
  425fa7:	jns    0x425f3d
  425fa9:	ror    DWORD PTR [eax-0x3e],0xf6
  425fad:	ret    0x3b1
  425fb0:	div    DWORD PTR [ecx+edx*4+0x0]
  425fb4:	or     DWORD PTR [ecx-0x3b],0xfffffffc
  425fb8:	add    BYTE PTR [edx-0x26],dl
  425fbb:	xor    ecx,DWORD PTR [eax]
  425fbd:	xor    esp,esp
  425fbf:	(bad)  
  425fc0:	mov    edi,0x8d42400f
  425fc5:	inc    ecx
  425fc6:	jmp    0x240f:0x3a000445
  425fcd:	add    al,0x6
  425fcf:	cmp    ebx,DWORD PTR [eax]
  425fd1:	mov    ebp,DWORD PTR [ebp+esi*1-0x9]
  425fd5:	push   eax
  425fd6:	pop    ecx
  425fd7:	push   esp
  425fd8:	enter  0x3d84,0x78
  425fdc:	xchg   esp,eax
  425fdd:	sar    eax,0xc2
  425fe0:	test   dl,0x71
  425fe3:	add    eax,DWORD PTR [ebx+0xfc4549]
  425fe9:	dec    DWORD PTR ds:0xb1c92a73
  425fef:	inc    ebx
  425ff0:	pop    es
  425ff1:	xchg   ebp,eax
  425ff2:	ins    BYTE PTR es:[edi],dx
  425ff3:	test   BYTE PTR [eax-0x1],0x6e
  425ff7:	mov    BYTE PTR [esp+0x41],dh
  425ffb:	cld    
  425ffc:	dec    eax
  425ffd:	sbb    BYTE PTR [esi-0x200b5fe],ah
  426003:	outs   dx,BYTE PTR ds:[esi]
  426004:	sub    cl,cl
  426006:	mov    cl,0x43
  426008:	pop    es
  426009:	xchg   ebp,eax
  42600a:	add    BYTE PTR [esi+esi*8+0x7fbfff40],bh
  426011:	sti    
  426012:	mov    dl,BYTE PTR [eax+eiz*4+0xe9586e7]
  426019:	das    
  42601a:	sbb    BYTE PTR [edi-0x643f84d0],ah
  426020:	aam    0xbd
  426022:	lea    edx,[ebp+0x76]
  426025:	mov    edi,0xfdc4452
  42602a:	adc    bl,bl
  42602c:	ins    DWORD PTR es:[edi],dx
  42602d:	add    eax,DWORD PTR [edi+0x437c6954]
  426033:	mov    WORD PTR [ecx+0x75],es
  426036:	je     0x425fcc
  426038:	imul   edi,DWORD PTR [ebx+edi*2+0x7c],0x26303bae
  426040:	and    al,0x3e
  426042:	add    bl,bl
  426044:	sub    eax,0x2b5183d0
  426049:	add    al,0xc3
  42604b:	fistp  DWORD PTR [edi+0x65]
  42604e:	inc    ebp
  42604f:	(bad)  
  426050:	addr16 mov edx,0x40cfc043
  426056:	ds xchg esp,eax
  426058:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426059:	cmp    eax,DWORD PTR [eax+0x46]
  42605c:	sub    eax,0x2753003e
  426061:	inc    eax
  426062:	in     eax,0xd9
  426064:	sub    DWORD PTR [ebx+eax*8],eax
  426067:	rcr    DWORD PTR [edi],cl
  426069:	add    DWORD PTR [ebp-0x2a],0x67
  42606d:	jbe    0x426032
  42606f:	add    dl,ch
  426071:	sub    cl,BYTE PTR [edx+0x46b7844]
  426077:	push   edx
  426078:	psubusw mm7,QWORD PTR [edx+0x43f2b002]
  42607f:	add    BYTE PTR [eax+0x2be82d65],ah
  426085:	nop
  426086:	test   ebx,edi
  426088:	(bad)  
  42608a:	and    bh,BYTE PTR [esi+0x53e90098]
  426090:	xchg   ebp,eax
  426091:	inc    ecx
  426092:	pop    ecx
  426093:	add    eax,0xd2e90942
  426098:	int3   
  426099:	mov    eax,ds:0xb349f9
  42609e:	test   al,0x4b
  4260a0:	test   BYTE PTR [edx-0x76b9fc5a],bh
  4260a6:	fnstcw WORD PTR [edx-0x16]
  4260a9:	aas    
  4260aa:	sti    
  4260ab:	in     eax,0x82
  4260ad:	jb     0x4260ff
  4260af:	mov    ?,WORD PTR [ecx]
  4260b1:	xchg   edx,esp
  4260b3:	pop    ss
  4260b4:	ret    
  4260b5:	jo     0x426117
  4260b7:	adc    edx,DWORD PTR [eax+0x54ffa981]
  4260bd:	cmp    esi,DWORD PTR [ebp+0x3d006bc2]
  4260c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4260c4:	or     eax,0x5b49e50c
  4260c9:	add    BYTE PTR [ebx],cl
  4260cb:	ret    
  4260cc:	xor    eax,0x94425f0c
  4260d1:	cmp    ebx,DWORD PTR [ecx]
  4260d3:	add    al,BYTE PTR [eax]
  4260d5:	xchg   esp,eax
  4260d6:	add    dl,ah
  4260d8:	ja     0x42611e
  4260da:	add    cl,ch
  4260dc:	add    eax,esi
  4260de:	aad    0xb5
  4260e0:	mov    cl,0x2e
  4260e2:	jge    0x42615e
  4260e4:	xchg   bh,bl
  4260e6:	mov    DWORD PTR [edi-0x2a746f86],ebx
  4260ec:	dec    ecx
  4260ed:	xchg   ebx,eax
  4260ee:	add    BYTE PTR [esi],dl
  4260f0:	add    BYTE PTR [ecx],bl
  4260f2:	adc    BYTE PTR [edi+0x2b219442],bl
  4260f8:	rcl    BYTE PTR [edi+0x7349f98b],cl
  4260fe:	add    BYTE PTR [esi-0x75],ch
  426101:	inc    ebp
  426102:	push   0x31959e66
  426107:	add    ch,ch
  426109:	int3   
  42610a:	mov    al,0xa8
  42610c:	stos   BYTE PTR es:[edi],al
  42610d:	xchg   edi,eax
  42610e:	sub    eax,0x40cb7404
  426113:	aas    
  426114:	jmp    0x6446e86e
  426119:	pop    es
  42611a:	mov    bl,0x3f
  42611c:	jmp    0xea21d739
  426121:	xchg   edi,eax
  426122:	add    BYTE PTR [ebx+ebp*1+0x18],bh
  426126:	jbe    0x426193
  426128:	jmp    0x4260c1
  42612a:	add    BYTE PTR [ebp-0x46],bh
  42612d:	dec    esp
  42612e:	or     al,0x95
  426130:	stc    
  426131:	pop    ebp
  426132:	cmp    eax,0x2d977200
  426137:	inc    ecx
  426138:	in     eax,dx
  426139:	add    BYTE PTR [esi+edi*1+0x782ce82f],dh
  426140:	jg     0x426110
  426142:	xchg   edi,eax
  426143:	test   DWORD PTR [esp+edi*2],edi
  426146:	dec    eax
  426147:	test   al,0x3f
  426149:	jmp    0xadb71912
  42614e:	sbb    DWORD PTR [eax-0x2f],edi
  426151:	xchg   ecx,eax
  426152:	gs je  0x4260de
  426155:	loopne 0x42616b
  426157:	inc    edx
  426158:	add    al,0x68
  42615a:	cmovge edi,DWORD PTR [edi-0x2c0367d6]
  426161:	jb     0x4261c6
  426163:	dec    eax
  426164:	mov    edi,0x10a1982a
  426169:	xor    edx,ebp
  42616b:	add    BYTE PTR [edi],ch
  42616d:	test   al,0x35
  42616f:	inc    edx
  426170:	das    
  426171:	sub    ch,cl
  426173:	dec    eax
  426174:	rcl    DWORD PTR [ecx+0x15],1
  426177:	bound  eax,QWORD PTR [ecx]
  426179:	sbb    dl,BYTE PTR [ebp+ecx*4+0xd581b0]
  426180:	pop    ebx
  426181:	add    BYTE PTR [esi],ch
  426183:	jnp    0x4261c0
  426185:	shr    dh,0xff
  426188:	push   ebp
  426189:	mov    ds:0x3b4171,eax
  42618e:	push   cs
  42618f:	inc    eax
  426190:	or     DWORD PTR [eax+edi*2],0x74
  426194:	mov    ch,0x43
  426196:	in     eax,dx
  426197:	mov    edi,0xc1670c9a
  42619c:	dec    DWORD PTR [edx-0x17c04400]
  4261a2:	or     ebp,DWORD PTR [esi]
  4261a4:	mov    eax,0xd2d8c183
  4261a9:	push   edi
  4261aa:	cmp    ah,dl
  4261ac:	ds loopne 0x4261b6
  4261af:	push   cs
  4261b0:	mov    eax,0xf898c183
  4261b5:	(bad)  
  4261b6:	jmp    edx
  4261b8:	ds loopne 0x4261ca
  4261bb:	sahf   
  4261bc:	mov    esp,0x97fcc183
  4261c1:	or     dh,BYTE PTR [ebx]
  4261c3:	cld    
  4261c4:	inc    eax
  4261c5:	push   ebp
  4261c6:	mov    edx,ecx
  4261c8:	cs push ecx
  4261ca:	push   0x3b40fd
  4261cf:	inc    edx
  4261d0:	push   0xffffffef
  4261d2:	adc    bh,BYTE PTR [ebp+0x35458d04]
  4261d8:	das    
  4261d9:	not    DWORD PTR ds:0x3b6ef9
  4261df:	clc    
  4261e0:	aas    
  4261e1:	jne    0x4261eb
  4261e3:	adc    ch,BYTE PTR [edx+0x7]
  4261e6:	adc    ebp,DWORD PTR [ebp-0x9fc1cfc]
  4261ec:	cmp    bh,al
  4261ee:	call   0x39e7c7
  4261f3:	sub    eax,0x65c3c8fe
  4261f8:	scas   eax,DWORD PTR es:[edi]
  4261f9:	mov    ebx,0x84699443
  4261fe:	adc    eax,0x3f773c
  426203:	add    BYTE PTR [edi-0x17],dl
  426206:	ror    DWORD PTR [edi-0x59a7],0xc7
  42620d:	fsubrp st(1),st
  42620f:	out    dx,eax
  426210:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426211:	test   eax,0xee6351ff
  426216:	shr    ebx,0xa6
  426219:	test   eax,0xd3aa74ff
  42621e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42621f:	lds    edx,FWORD PTR [edi+0x69]
  426222:	sub    eax,0xc1e8c3fb
  426227:	(bad)  
  426228:	fldenv [ebp+0x4f61ffff]
  42622e:	xchg   edi,eax
  42622f:	xchg   esp,eax
  426230:	shr    DWORD PTR [ecx+0x7f],cl
  426233:	test   ah,dl
  426235:	fcom   QWORD PTR [ebx+eax*8]
  426238:	cdq    
  426239:	cmc    
  42623a:	dec    eax
  42623b:	aas    
  42623c:	xchg   esp,eax
  42623d:	mov    ch,0xc7
  42623f:	cmp    eax,0x9009a394
  426244:	shl    DWORD PTR ds:0xba4a0104,1
  42624a:	push   ebx
  42624b:	mov    edx,0xffc3a5c4
  426250:	jmp    0x102ab9ff
  426255:	mov    ds:0xeeeafb7f,al
  42625a:	jnp    0x426257
  42625c:	fild   WORD PTR [bp+0x5b]
  426260:	shr    BYTE PTR [esi],cl
  426262:	inc    ebx
  426263:	aaa    
  426264:	ror    BYTE PTR [ebx+0x3],1
  426267:	jb     0x426269
  426269:	or     BYTE PTR [esi-0x3d],0x23
  42626d:	nop
  42626e:	sbb    esp,eax
  426270:	xchg   BYTE PTR [ebp+esi*2+0x3],al
  426274:	das    
  426275:	push   esp
  426276:	add    DWORD PTR [esi+0x13],ecx
  426279:	sub    al,0x88
  42627b:	pop    edx
  42627c:	cmp    DWORD PTR [edi],0x2e
  42627f:	aaa    
  426280:	jnp    0x4262a8
  426282:	xchg   BYTE PTR [edi],ah
  426284:	pop    es
  426285:	shl    BYTE PTR [ecx+esi*8],1
  426288:	loope  0x42626b
  42628a:	add    al,0xe9
  42628c:	fldcw  WORD PTR [edx+0x72]
  42628f:	lock div DWORD PTR [edi+0x6723b30c]
  426296:	or     DWORD PTR [ebx+0x0],ebx
  426299:	mov    eax,0xffbbb214
  42629e:	add    cl,ch
  4262a0:	add    edi,esp
  4262a2:	mov    ecx,0x85ef830a
  4262a7:	mov    ch,0x27
  4262a9:	nop
  4262aa:	mov    ch,ah
  4262ac:	adc    DWORD PTR [esi+0x35],edx
  4262af:	jge    0x4262d8
  4262b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4262b2:	out    dx,al
  4262b3:	add    ebx,esp
  4262b5:	ins    DWORD PTR es:[edi],dx
  4262b6:	ds cmc 
  4262b8:	add    ebp,DWORD PTR [ecx-0x7b]
  4262bb:	int    0x86
  4262bd:	test   al,0x14
  4262bf:	cmp    eax,DWORD PTR [ebx-0x5f3eefd7]
  4262c5:	scas   eax,DWORD PTR es:[edi]
  4262c6:	jns    0x42628a
  4262c8:	mov    fs,WORD PTR [edi+eax*4-0x53ff83cc]
  4262cf:	xor    esi,DWORD PTR [edx-0x1658707e]
  4262d5:	add    al,0x94
  4262d7:	add    BYTE PTR ds:0x8cc35714,bl
  4262dd:	lahf   
  4262de:	adc    eax,eax
  4262e0:	call   0x59b33c2f
  4262e5:	mov    ss,esp
  4262e7:	add    BYTE PTR [esi-0x733ca8ef],cl
  4262ed:	mov    bl,0x13
  4262ef:	sar    bh,0xe8
  4262f2:	faddp  st(3),st
  4262f4:	out    dx,eax
  4262f5:	dec    ebp
  4262f6:	sbb    al,al
  4262f8:	(bad)  
  4262f9:	mov    ecx,0xbc89518a
  4262fe:	mov    ebx,0x72f95d87
  426303:	imul   ecx,DWORD PTR [ebx],0xffff8a67
  426309:	call   0x6a4a2620
  42630e:	mov    bh,0x10
  426310:	mov    DWORD PTR [ebx+ecx*4-0x58538133],ebp
  426317:	jp     0x42638d
  426319:	xlat   BYTE PTR ds:[ebx]
  42631a:	outs   dx,DWORD PTR ds:[esi]
  42631b:	(bad)  
  42631c:	cli    
  42631d:	push   ds
  42631e:	push   ss
  42631f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426320:	add    al,ch
  426322:	xchg   edi,eax
  426323:	add    BYTE PTR [ecx+edi*8+0x5e],dh
  426327:	ret    
  426328:	jmp    0x42638f
  42632a:	adc    al,al
  42632c:	jmp    DWORD PTR ds:0x62b068cc
  426332:	add    bh,dl
  426334:	js     0x42631c
  426336:	fistp  WORD PTR [esi-0x3d]
  426339:	jmp    0x4262d4
  42633b:	adc    eax,eax
  42633d:	jmp    DWORD PTR [ebp+0x629c68d3]
  426343:	fdivr  DWORD PTR [eax+0x7e]
  426346:	inc    esp
  426347:	add    BYTE PTR [eax],0x7f
  42634a:	inc    esp
  42634b:	sbb    al,0x0
  42634d:	je     0x42635e
  42634f:	or     DWORD PTR [ecx-0x7ebd3d9],edi
  426355:	imul   eax
  426357:	lea    esp,[eax+ebp*8]
  42635a:	push   ebp
  42635b:	push   ss
  42635c:	jl     0x426359
  42635e:	jb     0x426328
  426360:	mov    eax,0x97e801
  426365:	pop    ds
  426366:	mov    eax,ds:0x7548a9
  42636b:	aas    
  42636c:	test   DWORD PTR [ebp+0xc],ecx
  42636f:	xchg   DWORD PTR [eax+ebx*2],ebx
  426372:	data16 mov ah,0x8
  426375:	pop    ecx
  426376:	mov    DWORD PTR [eax+0x2d9ce980],ebx
  42637c:	add    al,0x0
  42637e:	div    al
  426380:	or     esp,DWORD PTR [eax]
  426382:	je     0x426312
  426384:	jg     0x426359
  426386:	jne    0x4263bb
  426388:	cli    
  426389:	inc    esp
  42638a:	or     BYTE PTR [ebp+0x55e82878],ch
  426390:	xor    bh,0xff
  426393:	xlat   BYTE PTR ds:[ebx]
  426394:	(bad)  
  426395:	sub    dl,dl
  426397:	add    BYTE PTR [ecx+edi*8],ah
  42639a:	lock test DWORD PTR [edi+0x2752186f],edi
  4263a1:	or     ebx,DWORD PTR [eax-0x18]
  4263a4:	mov    edi,0x76fff782
  4263a9:	inc    edi
  4263aa:	pop    es
  4263ab:	bt     DWORD PTR [ebp+ebx*2+0x5e2cad83],edi
  4263b3:	mov    ecx,eax
  4263b5:	pop    edx
  4263b6:	loop   0x42641b
  4263b8:	ss aas 
  4263ba:	or     ecx,DWORD PTR [ebx-0x7413809f]
  4263c0:	jo     0x4263d2
  4263c2:	lea    edi,[eiz*2-0x247e3fd3]
  4263c9:	xchg   edi,eax
  4263ca:	add    DWORD PTR [eax-0x53],0x10
  4263ce:	xchg   ebp,eax
  4263cf:	rol    BYTE PTR [edi-0x4],0x47
  4263d3:	sbb    DWORD PTR [ebp+0x11],0x7b
  4263d7:	shl    BYTE PTR [eax-0x15],0x8b
  4263db:	(bad)  
  4263dc:	cmp    al,BYTE PTR [eax+0x28545ee]
  4263e2:	pop    esi
  4263e3:	sete   bh
  4263e6:	add    dh,BYTE PTR [eax]
  4263e8:	repnz loopne 0x4263f2
  4263eb:	jne    0x4263a5
  4263ed:	test   ecx,0x106d9607
  4263f3:	test   DWORD PTR [edi+0x75],ebp
  4263f6:	or     al,0x87
  4263f8:	rcl    DWORD PTR [ebp-0x17],1
  4263fb:	jle    0x4263fd
  4263fd:	rol    BYTE PTR [ecx-0x7f],0x20
  426401:	shl    BYTE PTR [esi+0x79],0x45
  426405:	pushf  
  426406:	popa   
  426407:	repz adc BYTE PTR [ecx+ebp*2],bh
  42640b:	cmp    ebx,0x73fe9123
  426411:	mov    WORD PTR [ecx+0x6994fb5f],es
  426417:	jmp    0xf224f71c
  42641c:	not    DWORD PTR [edi+0x1e]
  42641f:	ret    0xbf0f
  426422:	aaa    
  426423:	adc    BYTE PTR [esi-0x1c],bh
  426426:	push   cs
  426427:	cmp    bl,0x4b
  42642a:	cmpps  xmm0,XMMWORD PTR [edi],0x84
  42642e:	mov    ds:0x6f1118f3,al
  426433:	repnz adc al,0x1f
  426436:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426437:	or     ecx,DWORD PTR [ebp+0x6280f958]
  42643d:	pop    ss
  42643e:	and    BYTE PTR [esi*2-0x1931571],ah
  426445:	popa   
  426446:	aam    0x77
  426448:	out    0x97,eax
  42644a:	loop   0x426414
  42644c:	or     esp,DWORD PTR [edi-0x50]
  42644f:	jb     0x426496
  426451:	mov    WORD PTR [edi-0x1b],ds
  426454:	mov    BYTE PTR [eax-0x64f107c9],ah
  42645a:	out    dx,al
  42645b:	or     edi,DWORD PTR [edi+0x7d]
  42645e:	add    DWORD PTR [eax],ecx
  426460:	repnz add BYTE PTR [edx-0x19055f7f],dl
  426467:	(bad)  
  426468:	gs inc ebp
  42646a:	je     0x42644b
  42646c:	pop    edi
  42646d:	or     al,0x1b
  42646f:	aas    
  426470:	and    ecx,DWORD PTR [ebp+0x1a]
  426473:	add    eax,0xed4688e9
  426478:	ror    BYTE PTR [edx-0x3c5ad767],cl
  42647e:	inc    ebx
  42647f:	xor    ebp,DWORD PTR [ecx]
  426481:	mov    DWORD PTR [ebp-0x13],ecx
  426484:	test   BYTE PTR [edx-0x3cd2e377],0x2b
  42648b:	cmp    DWORD PTR [edi],edx
  42648d:	clc    
  42648e:	call   0x2839:0x6c4265c0
  426495:	repnz pop es
  426497:	and    BYTE PTR [ecx],0x7f
  42649a:	dec    ebx
  42649b:	rcl    BYTE PTR [ebx-0xae38f76],cl
  4264a1:	or     ah,0x75
  4264a4:	(bad)  
  4264a5:	pop    edx
  4264a6:	inc    edi
  4264a7:	mov    DWORD PTR [ecx],edx
  4264a9:	cmp    esi,ebx
  4264ab:	add    eax,0x948865
  4264b0:	jmp    0x256aee3f
  4264b5:	ret    
  4264b6:	shl    DWORD PTR [edx],cl
  4264b8:	sub    esi,edx
  4264ba:	or     BYTE PTR [ecx+0x73],0x24
  4264be:	sbb    ecx,DWORD PTR [ecx*1+0x6e007b48]
  4264c5:	jno    0x4264c7
  4264c7:	ins    DWORD PTR es:[edi],dx
  4264c8:	push   ss
  4264c9:	pop    ebp
  4264ca:	or     dl,BYTE PTR [ecx+eax*4-0x5d]
  4264ce:	sub    ebp,DWORD PTR [ebx+0x3f]
  4264d1:	aaa    
  4264d2:	js     0x426487
  4264d4:	or     DWORD PTR [esi+0x73],ebp
  4264d7:	sti    
  4264d8:	outs   dx,BYTE PTR ds:[esi]
  4264d9:	add    BYTE PTR [ecx],al
  4264db:	xchg   edi,eax
  4264dc:	xchg   WORD PTR [ecx+0x12411e7c],si
  4264e3:	leave  
  4264e4:	sub    BYTE PTR [edx+0x35dbc5],bh
  4264ea:	xor    esi,0x1b8ef9c5
  4264f0:	inc    eax
  4264f1:	je     0x42651b
  4264f3:	rdpmc  
  4264f5:	sub    BYTE PTR [ebp-0x13058aaa],ah
  4264fb:	jg     0x426539
  4264fd:	aas    
  4264fe:	jmp    0x5fa9d611
  426503:	outs   dx,DWORD PTR ds:[esi]
  426504:	jne    0x42653a
  426506:	add    eax,0xdd0035dc
  42650b:	jg     0x4264d2
  42650d:	dec    esi
  42650e:	mov    edx,0x712a8846
  426513:	cmp    DWORD PTR [ecx],eax
  426515:	sti    
  426516:	aam    0x4f
  426518:	push   es
  426519:	inc    eax
  42651a:	jmp    0x2e5e2f35
  42651f:	adc    dl,al
  426521:	pop    es
  426522:	jo     0x4264fd
  426524:	or     BYTE PTR [ecx+0x5a8787bf],cl
  42652a:	std    
  42652b:	add    BYTE PTR [eax],bl
  42652d:	ficom  DWORD PTR [edi]
  42652f:	pusha  
  426530:	rcl    DWORD PTR [ecx+ecx*4],0xa7
  426534:	mov    bl,0x7d
  426536:	ret    
  426537:	lahf   
  426538:	repnz rcl DWORD PTR [esi+0x2b],cl
  42653c:	xchg   ebx,eax
  42653d:	add    BYTE PTR [edx+0x62],dl
  426540:	inc    edi
  426541:	(bad)  
  426543:	adc    DWORD PTR [ebp-0x2a5adbd5],edx
  426549:	je     0x42659d
  42654b:	(bad)  
  42654c:	mov    ds:0x98077efc,al
  426551:	jns    0x426568
  426553:	add    BYTE PTR ds:0x52004012,cl
  426559:	imul   eax,DWORD PTR [edi],0xffffffe8
  42655c:	mov    ecx,DWORD PTR [ecx+edi*8-0x1]
  426560:	xor    ch,BYTE PTR [ebx+0xb]
  426563:	mov    ebp,DWORD PTR [ebx+0x2e51e818]
  426569:	div    dh
  42656b:	dec    DWORD PTR [ebx-0x56dc17ec]
  426571:	repnz test BYTE PTR [ebx-0x97ae3a5],0x49
  426579:	dec    BYTE PTR [ebp-0x18]
  42657c:	xor    DWORD PTR [edi+esi*8],eax
  42657f:	dec    esp
  426581:	and    al,0xc4
  426583:	inc    ebx
  426584:	sub    eax,0x7d85f889
  426589:	js     0x4265cf
  42658b:	mov    ebp,DWORD PTR [eax]
  42658d:	sbb    al,0xc4
  42658f:	inc    ebx
  426590:	add    BYTE PTR ds:0x646bc889,ch
  426596:	and    al,0x8d
  426598:	dec    esp
  426599:	in     al,dx
  42659a:	xlat   BYTE PTR ds:[ebx]
  42659b:	jp     0x4265d6
  42659d:	std    
  42659e:	push   0x1
  4265a0:	adc    DWORD PTR [esp+0x47],0x75
  4265a5:	cwde   
  4265a6:	cmp    eax,edi
  4265a8:	je     0x426584
  4265aa:	jp     0x4265a3
  4265ac:	jne    0x4265a1
  4265ae:	push   ecx
  4265af:	jecxz  0x426594
  4265b1:	push   ds
  4265b2:	div    dh
  4265b4:	and    eax,edx
  4265b6:	sbb    eax,esp
  4265b8:	inc    ebx
  4265b9:	mov    ebp,0x728b06e8
  4265be:	imul   ecx,eax,0xc4287328
  4265c4:	inc    ebx
  4265c5:	lods   eax,DWORD PTR ds:[esi]
  4265c6:	out    0x1,eax
  4265c8:	push   ebx
  4265c9:	shl    esp,cl
  4265cb:	mov    BYTE PTR ds:0x3f480194,bh
  4265d1:	xchg   esp,eax
  4265d2:	and    bl,dl
  4265d4:	mov    esi,0x516aee41
  4265d9:	in     eax,0xb
  4265db:	mov    esp,0x426db18
  4265e0:	sti    
  4265e1:	fs loopne 0x4265a5
  4265e4:	imul   DWORD PTR [ebx+eax*1-0x22]
  4265e8:	stc    
  4265e9:	jae    0x4265d9
  4265eb:	icebp  
  4265ec:	pop    es
  4265ed:	adc    BYTE PTR [ecx+0x691b840c],ch
  4265f3:	(bad)  
  4265f4:	inc    DWORD PTR [eax]
  4265f6:	(bad)  
  4265f8:	adc    al,0x7f
  4265fa:	dec    esp
  4265fb:	mov    dh,0xf3
  4265fd:	xor    dl,BYTE PTR [edi]
  4265ff:	icebp  
  426600:	les    esi,FWORD PTR [ebx-0x7a]
  426603:	out    0x76,al
  426605:	ror    BYTE PTR fs:[ecx+eax*4],0xf8
  42660a:	ret    0xef4c
  42660d:	xchg   cl,bl
  42660f:	jne    0x426591
  426611:	and    BYTE PTR gs:[ecx-0x80],ch
  426615:	mov    WORD PTR gs:[ecx-0x76],gs
  426619:	inc    ebp
  42661a:	pushf  
  42661b:	cdq    
  42661c:	mov    al,BYTE PTR [ebp+0x8]
  42661f:	cdq    
  426620:	jl     0x426697
  426622:	pushf  
  426623:	mov    esp,DWORD PTR [edi-0x19]
  426626:	(bad)  
  42662a:	aam    0x8b
  42662c:	iret   
  42662d:	push   ecx
  42662e:	cld    
  42662f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426630:	lldt   WORD PTR [esi+edi*8-0x45bcb13a]
  426638:	or     al,ah
  42663a:	push   edi
  42663b:	imul   edx,esp,0x10fda1fa
  426641:	inc    eax
  426642:	xchg   esp,eax
  426643:	add    DWORD PTR [ebx],esi
  426645:	cli    
  426646:	mov    ebx,0xcb36e1ff
  42664b:	jle    0x42662e
  42664d:	jnp    0x42666f
  42664f:	pop    ss
  426650:	pop    esi
  426651:	or     DWORD PTR [eax+0x3c],edi
  426654:	es add al,0x33
  426657:	inc    eax
  426658:	adc    DWORD PTR [eax+eax*1],edi
  42665b:	lock or ch,ah
  42665e:	out    dx,eax
  42665f:	lahf   
  426660:	jno    0x42669f
  426662:	or     al,0x8c
  426664:	jno    0x42663a
  426666:	dec    edi
  426667:	mov    al,al
  426669:	call   0x9a0c99e7
  42666e:	adc    DWORD PTR [edi+ecx*1+0x29],esp
  426672:	add    al,0xbf
  426674:	jl     0x426624
  426676:	(bad)  
  426678:	cli    
  426679:	gs stc 
  42667b:	mov    ds:0x4f13f4dc,eax
  426680:	in     al,dx
  426681:	sar    BYTE PTR [edx-0x37],1
  426684:	or     al,0x6a
  426686:	icebp  
  426687:	mov    esi,DWORD PTR [ecx-0x24]
  42668a:	pop    es
  42668b:	(bad)  
  42668c:	jno    0x426642
  42668e:	jnp    0x42665e
  426690:	inc    edi
  426691:	daa    
  426692:	adc    BYTE PTR [edi+ecx*8+0x5812d0b5],dl
  426699:	imul   BYTE PTR [eax-0x35]
  42669c:	push   ebx
  42669d:	mov    ah,0x2
  42669f:	mov    edx,0x95084040
  4266a4:	add    cl,ch
  4266a6:	jmp    0x42669b
  4266a8:	cmp    eax,0xbef03a6
  4266ad:	or     eax,0x2b005416
  4266b2:	shl    BYTE PTR [edi-0x56c316fb],0x0
  4266b9:	sub    eax,0xdeecd3c7
  4266be:	rol    BYTE PTR [eax],1
  4266c0:	pusha  
  4266c1:	call   0xfcda4ec5
  4266c6:	(bad)  
  4266c7:	in     eax,dx
  4266c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4266c9:	js     0x4266d9
  4266cb:	sub    DWORD PTR [eax-0x2d5aff6f],ebx
  4266d1:	jno    0x426709
  4266d3:	lods   al,BYTE PTR ds:[esi]
  4266d4:	mov    ?,WORD PTR [edi+eax*8-0x17]
  4266d8:	xchg   edi,eax
  4266d9:	add    BYTE PTR [edi+0x3f3c9ff4],al
  4266df:	jmp    0xa479a7a6
  4266e4:	test   DWORD PTR ds:0x3d7bd487,ecx
  4266ea:	aas    
  4266eb:	jmp    0xeec07ba0
  4266f0:	jmp    0x42676b
  4266f2:	add    cl,ch
  4266f4:	xchg   edi,eax
  4266f5:	shl    BYTE PTR [esi],0xa8
  4266f8:	popa   
  4266f9:	gs push edx
  4266fb:	je     0x426698
  4266fd:	add    DWORD PTR [ecx+ebp*8],0xffffff97
  426701:	add    BYTE PTR [edx+0x3183ed],bh
  426707:	or     esi,0xb366f9cf
  42670d:	inc    eax
  42670e:	or     esp,DWORD PTR [ebp+0x7]
  426711:	add    BYTE PTR [eax],al
  426713:	jmp    0xab066f10
  426718:	xchg   edi,eax
  426719:	jns    0x426728
  42671b:	in     eax,dx
  42671c:	shl    DWORD PTR [ecx],cl
  42671e:	add    BYTE PTR [edx-0x3c],dh
  426721:	cld    
  426722:	push   cs
  426723:	test   eax,0x65cd9700
  426728:	or     cl,BYTE PTR [ecx]
  42672a:	adc    al,0x81
  42672c:	es xchg esp,eax
  42672e:	or     ah,al
  426730:	stos   BYTE PTR es:[edi],al
  426731:	xchg   edi,eax
  426732:	retf   
  426733:	cli    
  426734:	fcom   QWORD PTR [edi+0x5ee93f3c]
  42673a:	dec    esi
  42673b:	xchg   DWORD PTR [eax],eax
  42673d:	xchg   ebp,eax
  42673e:	xor    bh,ch
  426740:	je     0x42676a
  426742:	arpl   WORD PTR [edx],ax
  426744:	push   ebp
  426745:	retf   0x20
  426748:	(bad)  
  426749:	out    dx,al
  42674a:	cld    
  42674b:	not    dh
  42674d:	es in  al,dx
  42674f:	xor    dh,ch
  426751:	sbb    DWORD PTR es:[eax],eax
  426754:	adc    ebp,DWORD PTR [ebp-0x4]
  426757:	jae    0x426794
  426759:	push   edi
  42675a:	cld    
  42675b:	dec    esi
  42675c:	push   esi
  42675d:	inc    ebx
  42675e:	add    esi,DWORD PTR [edx-0x41fc3477]
  426764:	inc    esi
  426765:	jo     0x4267c3
  426767:	mov    esi,0x43a17346
  42676c:	inc    edx
  42676d:	jge    0x426731
  42676f:	cmp    eax,0x3bdd3e0a
  426774:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426775:	or     ebp,edx
  426777:	test   al,al
  426779:	cmp    edx,0x156144bd
  42677f:	add    ebx,ebp
  426781:	pop    esi
  426782:	ret    0x2443
  426785:	ss add esp,ebx
  426788:	push   ds
  426789:	add    BYTE PTR [ebx-0x6f0104a2],ah
  42678f:	add    al,0xc4
  426791:	inc    ebx
  426792:	cmp    eax,0x5757d4e9
  426797:	add    al,0xf7
  426799:	xor    eax,0x3b302d
  42679e:	pop    edx
  42679f:	mov    edi,0x30050df6
  4267a4:	cmp    eax,DWORD PTR [eax]
  4267a6:	sub    cl,BYTE PTR [edx+0x63]
  4267a9:	call   0xff3dad5c
  4267ae:	lock xrelease or DWORD PTR [eax-0x3],eax
  4267b3:	jge    0x4267f9
  4267b5:	and    al,0x94
  4267b7:	(bad)
  4267bc:	retf   
  4267bd:	xchg   al,al
  4267bf:	fisub  DWORD PTR [edi+0xc]
  4267c2:	addr16 xchg edi,eax
  4267c4:	mov    WORD PTR ds:0xffbf4c38,?
  4267ca:	bound  eax,QWORD PTR [ebx-0x39337905]
  4267d0:	add    BYTE PTR [ebp-0x58],0x29
  4267d4:	add    DWORD PTR [ebp-0x58],0x29
  4267d8:	jmp    0x93fb:0xf1e04700
  4267df:	(bad)  
  4267e0:	jp     0x4267a2
  4267e2:	add    BYTE PTR [edx-0x74],cl
  4267e5:	dec    ebp
  4267e6:	mov    ah,bl
  4267e8:	inc    ebp
  4267e9:	je     0x426778
  4267eb:	inc    ecx
  4267ec:	lods   eax,DWORD PTR ds:[esi]
  4267ed:	cli    
  4267ee:	add    BYTE PTR [ebx-0x5a],dh
  4267f1:	jnp    0x4267b3
  4267f3:	loopne 0x426863
  4267f5:	add    BYTE PTR [ebp+0x60],0x29
  4267f9:	add    DWORD PTR [ebp+0x5c],0x29
  4267fd:	jmp    0x4bfb:0xf1f0e714
  426804:	xchg   edi,eax
  426805:	jp     0x4267c7
  426807:	enter  0x8466,0x7d
  42680b:	cmp    al,0x59
  42680d:	jmp    0x426817
  42680f:	pop    ds
  426810:	inc    esp
  426811:	ja     0x4267fa
  426813:	jmp    0x9729ac22
  426818:	mov    esi,edi
  42681a:	pop    edx
  42681b:	mov    edx,0x69bf46b2
  426820:	hlt    
  426821:	loop   0x426846
  426823:	sbb    al,0xd8
  426825:	bound  esi,QWORD PTR [ebp+edx*4+0x59]
  426829:	dec    DWORD PTR [esi+0x62]
  42682c:	loop   0x426857
  42682e:	hlt    
  42682f:	xchg   BYTE PTR [eax],al
  426831:	test   eax,0x1a334703
  426836:	jmp    0x4267c7
  426838:	inc    esp
  426839:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42683a:	add    edx,DWORD PTR [ebx]
  42683c:	dec    eax
  42683d:	pusha  
  42683e:	ss js  0x426885
  426841:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426842:	add    ebx,DWORD PTR ds:0x833fd12d
  426848:	add    dl,dh
  42684a:	push   eax
  42684b:	xor    ah,BYTE PTR [edx+edx*4]
  42684e:	mov    eax,0x42642bc
  426853:	add    BYTE PTR [edi+0x6f],al
  426856:	hlt    
  426857:	das    
  426858:	xchg   al,al
  42685a:	call   0x323e38e1
  42685f:	ja     0x4268c7
  426861:	add    DWORD PTR [esp+edx*4],0x4e8c244
  426868:	pop    DWORD PTR [esi+0x94057e]
  42686e:	fs pop ebx
  426870:	call   0xa3c573aa
  426875:	add    BYTE PTR ds:0x63c2fa35,dl
  42687b:	icebp  
  42687c:	retf   
  42687d:	enter  0xdb80,0xfb
  426881:	ins    DWORD PTR es:[edi],dx
  426882:	sub    dl,0xd4
  426885:	jnp    0x42687b
  426887:	pop    ebx
  426888:	fcomp  QWORD PTR [eax+0x19]
  42688b:	lods   al,BYTE PTR ds:[esi]
  42688c:	aas    
  42688d:	outs   dx,BYTE PTR ds:[esi]
  42688e:	push   ss
  42688f:	ja     0x42681a
  426891:	xor    bh,0xc3
  426894:	sub    edi,DWORD PTR [ebp-0x5b]
  426897:	add    esp,DWORD PTR [edx]
  426899:	mov    esi,0x7b94e9b5
  42689e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42689f:	shl    DWORD PTR [ebx+0x79],cl
  4268a2:	sub    edx,esp
  4268a4:	repz inc eax
  4268a6:	inc    DWORD PTR [ebx]
  4268a8:	xchg   esp,eax
  4268a9:	(bad)  
  4268ab:	test   eax,0x91c3f40c
  4268b0:	jg     0x4268d8
  4268b2:	test   al,0x26
  4268b4:	arpl   si,sp
  4268b6:	inc    ebx
  4268b7:	ins    BYTE PTR es:[edi],dx
  4268b8:	add    ch,ah
  4268ba:	rcl    DWORD PTR [edi+0x1],1
  4268bd:	sbb    DWORD PTR [eax-0x3b41f105],0xffffff8c
  4268c4:	jl     0x42684d
  4268c6:	enter  0xd5e7,0xef
  4268ca:	imul   edi,ebx,0x88d1d564
  4268d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4268d1:	mov    edi,0xd470c286
  4268d6:	(bad)  [esp+edx*2+0x5d4542b0]
  4268dd:	xchg   esi,eax
  4268de:	add    BYTE PTR [eax],al
  4268e0:	jmp    0x74917303
  4268e5:	push   esp
  4268e6:	inc    ecx
  4268e7:	push   eax
  4268e8:	jle    0x426882
  4268ea:	add    BYTE PTR [eax],al
  4268ec:	imul   ecx,DWORD PTR [esi],0xb0b8e841
  4268f2:	add    BYTE PTR [eax],al
  4268f4:	ins    BYTE PTR es:[edi],dx
  4268f5:	xlat   BYTE PTR ds:[ebx]
  4268f6:	hlt    
  4268f7:	adc    DWORD PTR [edx+0x74],ebp
  4268fa:	(bad)  
  4268fc:	add    dl,BYTE PTR [ebx+edi*2-0x1c97e6bb]
  426903:	add    ebx,DWORD PTR [edx]
  426905:	sbb    eax,0xb019c3c3
  42690a:	retf   
  42690b:	xor    eax,0xc1ed97e9
  426910:	in     eax,0xaa
  426912:	mov    ebx,0xe6dedc73
  426917:	inc    ecx
  426918:	ins    BYTE PTR es:[edi],dx
  426919:	and    al,0x51
  42691b:	pop    eax
  42691c:	inc    ecx
  42691d:	add    dl,ah
  42691f:	mov    al,ds:0xc1fd4efb
  426924:	mov    WORD PTR [eax],es
  426926:	dec    eax
  426927:	inc    ebp
  426928:	push   ebx
  426929:	call   0x39f7b7
  42692e:	jo     0x426970
  426930:	outs   dx,DWORD PTR ds:[esi]
  426931:	push   eax
  426932:	xlat   BYTE PTR ds:[ebx]
  426933:	add    ebp,DWORD PTR [ebx]
  426935:	fld    TBYTE PTR [esi]
  426937:	js     0x42697e
  426939:	aam    0x1d
  42693b:	mov    BYTE PTR ds:[ebp-0x7],bh
  42693f:	cmc    
  426940:	adc    al,0x70
  426942:	int    0x40
  426944:	sti    
  426945:	test   BYTE PTR [ebp+0x70],bh
  426948:	or     al,0x8b
  42694a:	jnp    0x42699d
  42694c:	mov    WORD PTR [ebp+0x39],?
  42694f:	fpatan 
  426951:	cmp    bh,BYTE PTR [ebp-0x70fd1d00]
  426957:	les    eax,FWORD PTR [ebx-0x72f0b640]
  42695d:	inc    ebp
  42695e:	jno    0x4269b4
  426960:	mov    WORD PTR [ebp+0x49],es
  426963:	push   ebp
  426964:	add    bh,0x65
  426967:	imul   edi,DWORD PTR [eax],0xbfeb6d00
  42696d:	je     0x4269d4
  42696f:	pop    edx
  426970:	dec    DWORD PTR [eax+edi*4+0x796a4b74]
  426977:	add    DWORD PTR [ebp+0x4c],0xffffff9d
  42697b:	add    DWORD PTR [ebp-0x2c],0xffffff9d
  42697f:	ja     0x4269de
  426981:	jo     0x426983
  426983:	adc    eax,0x3d0038cb
  426988:	pop    edx
  426989:	inc    ebx
  42698a:	lea    ecx,[eax-0x74]
  42698d:	pop    eax
  42698e:	call   0x39f730
  426993:	xchg   edi,eax
  426994:	aaa    
  426995:	mov    WORD PTR [ebp+0x75],?
  426998:	dec    esp
  426999:	jecxz  0x4269e0
  42699b:	sbb    dh,dh
  42699d:	imul   BYTE PTR [edx-0x6c]
  4269a0:	lahf   
  4269a1:	xor    BYTE PTR [ebp+0x70],0xb1
  4269a5:	addr16 ss xor eax,ebx
  4269a9:	je     0x426938
  4269ab:	pop    ecx
  4269ac:	add    DWORD PTR [edi+0x39de5045],eax
  4269b2:	mov    DWORD PTR [ecx-0x5f],ebx
  4269b5:	xchg   BYTE PTR [ebp+0x60],bl
  4269b8:	sbb    bh,BYTE PTR [ebx-0xa66691]
  4269be:	(bad)  
  4269bf:	fisttp DWORD PTR [ebx+ebp*8-0x2c3aa674]
  4269c6:	gs pop ebx
  4269c8:	sahf   
  4269c9:	cmp    BYTE PTR [ebp-0x48b9568],0xac
  4269d0:	es xchg ecx,eax
  4269d2:	cli    
  4269d3:	mov    bl,0x90
  4269d5:	(bad)  
  4269d6:	test   ah,dl
  4269d8:	jecxz  0x426a0c
  4269da:	xchg   si,ax
  4269dc:	fdivr  st(1),st
  4269de:	inc    ebx
  4269df:	cmp    bl,dh
  4269e1:	adc    ecx,DWORD PTR [edi+0x21]
  4269e4:	in     al,0xfa
  4269e6:	cli    
  4269e7:	add    BYTE PTR [ebx-0x6a4830be],cl
  4269ed:	pop    ecx
  4269ee:	(bad)  
  4269ef:	jg     0x426a5d
  4269f1:	lods   al,BYTE PTR ds:[esi]
  4269f2:	aaa    
  4269f3:	add    BYTE PTR [esp+eiz*8-0x29728bc2],dl
  4269fa:	fldcw  WORD PTR [ebx-0x6c]
  4269fd:	str    WORD PTR [ebp+0x65d405d1]
  426a04:	cwde   
  426a05:	add    DWORD PTR es:[ebp-0x48b7d70],0xffffffe4
  426a0d:	xchg   ecx,eax
  426a0e:	aad    0x38
  426a10:	xchg   esp,eax
  426a11:	pop    ecx
  426a12:	add    bl,0x98
  426a15:	or     ebp,ebx
  426a17:	enter  0x2b,0xac
  426a1b:	out    dx,eax
  426a1c:	push   ds
  426a1d:	mov    ebp,0xcafbeed8
  426a22:	mov    dl,0xd8
  426a24:	xchg   edx,eax
  426a25:	inc    ebp
  426a26:	ror    DWORD PTR [edx+0x4b],1
  426a29:	aad    0x6d
  426a2b:	addr16 adc eax,0x940bc95c
  426a31:	add    BYTE PTR [esi-0x1f0b1133],dl
  426a37:	xor    bl,al
  426a39:	jl     0x4269d7
  426a3b:	pop    edi
  426a3c:	or     eax,0xa46b1ccd
  426a41:	mov    ebp,0x401803e8
  426a46:	fidivr DWORD PTR [edi+0x55]
  426a49:	add    ecx,ebp
  426a4b:	add    eax,DWORD PTR [eax]
  426a4d:	push   ebx
  426a4e:	(bad)  
  426a4f:	out    0x86,eax
  426a51:	push   ecx
  426a52:	je     0x4269ed
  426a54:	je     0x426a7f
  426a56:	fs pop esi
  426a58:	mov    esi,0x814457b3
  426a5d:	sahf   
  426a5e:	push   0x6e
  426a60:	je     0x426a6b
  426a62:	(bad)
  426a65:	or     DWORD PTR [ecx-0x3f],ebp
  426a68:	test   eax,0x86e900d9
  426a6d:	jle    0x426ad9
  426a6f:	jmp    0xc703:0xe8ff9d87
  426a76:	(bad)  
  426a77:	fbstp  TBYTE PTR [esi]
  426a79:	pop    edx
  426a7a:	jbe    0x426a27
  426a7c:	int    0x66
  426a7e:	jo     0x426ae4
  426a80:	push   esi
  426a81:	pop    DWORD PTR [ebx+0x94048e]
  426a87:	(bad)  
  426a88:	mov    esi,0xcc8cec18
  426a8d:	cmp    ecx,DWORD PTR [edx]
  426a8f:	inc    ebx
  426a90:	jae    0x426ad1
  426a92:	xlat   BYTE PTR ds:[ebx]
  426a93:	jmp    DWORD PTR [edx*1-0x37ee2814]
  426a9a:	adc    al,0xa2
  426a9c:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  426a9e:	sbb    esi,ecx
  426aa0:	jo     0x426ae7
  426aa2:	add    dh,BYTE PTR [edi]
  426aa4:	pop    edx
  426aa5:	xchg   edi,eax
  426aa6:	jle    0x426a80
  426aa8:	jmp    0xb4c96b44
  426aad:	inc    DWORD PTR [edx+0x7b003545]
  426ab3:	xor    al,0x88
  426ab5:	pusha  
  426ab6:	in     eax,dx
  426ab7:	pop    ecx
  426ab8:	test   DWORD PTR [edi],esi
  426aba:	xchg   edi,eax
  426abb:	test   BYTE PTR [eax-0x7fff6817],bh
  426ac1:	fist   WORD PTR [edi-0x67b97c0b]
  426ac7:	add    BYTE PTR [eax],al
  426ac9:	(bad)  
  426aca:	les    eax,FWORD PTR [ecx+0x49c57004]
  426ad0:	test   esi,edi
  426ad2:	xchg   esi,eax
  426ad3:	test   BYTE PTR [eax-0x7fff6817],ah
  426ad9:	scas   al,BYTE PTR es:[edi]
  426ada:	xchg   edi,eax
  426adb:	cmc    
  426adc:	cmp    DWORD PTR [esi-0x69],0x0
  426ae0:	add    BYTE PTR [edx-0x35],dh
  426ae3:	or     DWORD PTR [eax],0x83f5e26c
  426ae9:	bound  edx,QWORD PTR [edi-0x4d970000]
  426aef:	add    BYTE PTR [ebx],cl
  426af1:	adc    DWORD PTR gs:[eax],eax
  426af4:	add    cl,ch
  426af6:	sbb    bh,BYTE PTR [eax]
  426af8:	sti    
  426af9:	sbb    DWORD PTR [edx-0x7e],eax
  426afc:	(bad)  
  426afd:	xchg   ecx,eax
  426afe:	rcl    BYTE PTR [eax+0x400c9efa],cl
  426b04:	je     0x426ade
  426b06:	adc    al,0xc3
  426b08:	jecxz  0x426b44
  426b0a:	pusha  
  426b0b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426b0c:	cmp    BYTE PTR [eax],al
  426b0e:	inc    ebp
  426b0f:	std    
  426b10:	dec    DWORD PTR [eax+eax*4+0xffef9d]
  426b17:	stos   BYTE PTR es:[edi],al
  426b18:	lds    edi,FWORD PTR [ebx+0x58eebb92]
  426b1e:	pop    ecx
  426b1f:	scas   al,BYTE PTR es:[edi]
  426b20:	aad    0xf6
  426b22:	je     0x426aff
  426b24:	jmp    0x40babcee
  426b29:	imul   eax
  426b2b:	out    0xe9,al
  426b2d:	cmc    
  426b2e:	push   DWORD PTR [ecx-0x43]
  426b31:	jae    0x426b82
  426b33:	xchg   BYTE PTR [eax-0x15],ch
  426b36:	mov    ebp,DWORD PTR [eax]
  426b38:	fisttp QWORD PTR [esi+0x56]
  426b3b:	dec    eax
  426b3c:	cmp    bl,dl
  426b3e:	push   eax
  426b3f:	jp     0x426b56
  426b41:	or     BYTE PTR [eax],al
  426b43:	in     eax,dx
  426b44:	jg     0x426afb
  426b46:	mov    al,ds:0xe8f6eeb2
  426b4b:	aaa    
  426b4c:	xchg   ebx,eax
  426b4d:	idiv   bh
  426b4f:	ror    DWORD PTR cs:[ebx],0x83
  426b53:	xchg   ebp,eax
  426b54:	out    dx,al
  426b55:	jae    0x426b82
  426b57:	ss mov edi,0xd9088d50
  426b5d:	out    0x48,eax
  426b5f:	es out dx,al
  426b61:	test   BYTE PTR [ebp+ebp*8-0x3f7ce899],0x64
  426b69:	or     BYTE PTR [ebx-0x2c7d9b50],cl
  426b6f:	xchg   esi,eax
  426b70:	aas    
  426b71:	repz (bad)
  426b74:	sub    dh,bh
  426b76:	jmp    FWORD PTR [edx]
  426b78:	(bad)  
  426b79:	or     edi,edi
  426b7b:	add    BYTE PTR [eax-0x54d01810],ah
  426b81:	repnz test BYTE PTR [ebx-0x75000f70],0x94
  426b89:	adc    al,0x6c
  426b8b:	xchg   ecx,ecx
  426b8d:	lea    ebx,[esp+edi*1-0x2e]
  426b91:	jg     0x426c04
  426b93:	pop    ebx
  426b94:	nop    DWORD PTR [eax+0x5a]
  426b98:	iret   
  426b99:	mov    al,ds:0xc940442
  426b9e:	jge    0x426b8c
  426ba0:	setne  bl
  426ba3:	sub    BYTE PTR [eax],0x72
  426ba6:	add    eax,0x84a69400
  426bab:	sar    BYTE PTR [eax-0x738a8f57],0xec
  426bb2:	cmp    al,0xf9
  426bb5:	es jno 0x426c08
  426bb8:	pop    ds
  426bb9:	xor    DWORD PTR [edx+eiz*2+0x52],ebx
  426bbd:	pop    ecx
  426bbe:	inc    DWORD PTR [esp+edx*8+0x53f1e885]
  426bc5:	pop    ebp
  426bc6:	add    eax,0x82dc6374
  426bcb:	clc    
  426bcc:	leave  
  426bcd:	div    BYTE PTR [eax+0x50]
  426bd0:	lods   al,BYTE PTR ds:[esi]
  426bd1:	mov    ds:0xf0bbfb71,al
  426bd6:	ret    0x190b
  426bd9:	sbb    bh,al
  426bdb:	cmp    eax,DWORD PTR [edi-0x71]
  426bde:	iret   
  426bdf:	cli    
  426be0:	add    BYTE PTR [ecx-0x6bbfee1f],cl
  426be6:	repnz mov edi,0x7ab11f0b
  426bec:	jae    0x426b8a
  426bee:	pop    edx
  426bef:	cmp    al,0xe8
  426bf1:	sub    DWORD PTR ds:0x9910fb6e,0x161f11f3
  426bfb:	add    bh,bh
  426bfd:	xchg   ecx,eax
  426bfe:	or     dh,BYTE PTR [ecx+0x75]
  426c01:	nop
  426c02:	add    BYTE PTR [ecx],bh
  426c04:	jno    0x426b87
  426c06:	xor    bl,dh
  426c08:	ret    
  426c09:	push   ebx
  426c0a:	sub    BYTE PTR [ebp-0x23386b01],0x70
  426c11:	leave  
  426c12:	hlt    
  426c13:	nop
  426c14:	mov    cs,ecx
  426c16:	data16 jp 0x426bea
  426c19:	retf   0x2a6e
  426c1c:	or     BYTE PTR [ebp+0x197edcec],dl
  426c22:	push   0xd01f7064
  426c27:	push   eax
  426c28:	fisttp WORD PTR [esi+eiz*2+0x52]
  426c2c:	xor    al,0xd4
  426c2e:	(bad)  
  426c2f:	pop    ds
  426c30:	inc    ebp
  426c31:	mov    WORD PTR [eax],es
  426c33:	pushf  
  426c34:	jl     0x426c1e
  426c36:	add    BYTE PTR [ebp+0x6b],0x15
  426c3a:	push   esp
  426c3b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426c3c:	add    eax,0xdd930094
  426c41:	dec    esi
  426c42:	jne    0x426be1
  426c44:	daa    
  426c45:	add    BYTE PTR [eax-0x75bef38],bl
  426c4b:	data16 adc bh,BYTE PTR [esi+edx*8+0x74]
  426c50:	popf   
  426c51:	daa    
  426c52:	dec    esp
  426c53:	shr    DWORD PTR [edi-0x39],1
  426c56:	ja     0x426c50
  426c58:	mov    ch,0x43
  426c5a:	inc    esp
  426c5b:	sar    BYTE PTR [esi+0x22],1
  426c5e:	inc    esp
  426c5f:	aas    
  426c60:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426c61:	daa    
  426c62:	sub    BYTE PTR [eax+0x779bc46e],0x3d
  426c69:	sub    BYTE PTR [edi+esi*2+0x77b0282d],dh
  426c70:	and    eax,0xdc65ac28
  426c75:	ror    DWORD PTR [edx+0x5488e8c0],cl
  426c7b:	in     al,dx
  426c7c:	inc    DWORD PTR [esi+0x4e]
  426c7f:	mov    dh,0x8c
  426c81:	xor    eax,0x91582cac
  426c86:	jae    0x426c2a
  426c88:	sti    
  426c89:	sahf   
  426c8a:	adc    eax,0xc8e123bd
  426c8f:	mov    esp,0xbd14f123
  426c94:	and    esi,DWORD PTR [ecx]
  426c96:	mov    ecx,0x14dd23bc
  426c9b:	mov    ebp,0xbca8ed23
  426ca0:	and    eax,ebp
  426ca2:	adc    al,0xbd
  426ca4:	and    esi,DWORD PTR [ecx+0x54c7547]
  426caa:	add    BYTE PTR [ecx+eax*2-0x343f2bc],ah
  426cb1:	(bad)  
  426cb2:	call   0xd86ae4e
  426cb7:	mov    ah,0xff
  426cb9:	(bad)  
  426cba:	call   0xd86ae56
  426cbf:	mov    al,ds:0x97e9fb66
  426cc4:	pop    eax
  426cc5:	pop    esi
  426cc6:	mov    cl,0x97
  426cc8:	add    BYTE PTR [edi+0x4474e827],al
  426cce:	int    0xb
  426cd0:	mov    dh,0x4f
  426cd2:	add    edi,esp
  426cd4:	mov    esp,0x410ce8ff
  426cd9:	je     0x426cb6
  426cdb:	adc    al,0xbd
  426cdd:	and    esp,DWORD PTR [ecx-0x3ab38b39]
  426ce3:	xchg   ebx,eax
  426ce4:	ja     0x426d2a
  426ce6:	or     eax,0x313a5870
  426ceb:	cwde   
  426cec:	add    dl,dh
  426cee:	stos   BYTE PTR es:[edi],al
  426cef:	xchg   ebp,eax
  426cf0:	in     al,dx
  426cf1:	or     eax,0x10215b62
  426cf6:	add    BYTE PTR [esi],al
  426cf8:	inc    ecx
  426cf9:	add    ecx,DWORD PTR [ecx+0x2443ea7c]
  426cff:	dec    ecx
  426d00:	jmp    0x8b55:0xfcf40c4c
  426d07:	or     BYTE PTR [eax-0x43],dl
  426d0a:	or     BYTE PTR ds:0xec8248,bh
  426d10:	mov    esi,0x8b5363c5
  426d15:	dec    ebp
  426d16:	mov    WORD PTR [ebp+0x11],es
  426d19:	push   ecx
  426d1a:	mov    WORD PTR [ebp-0x57],es
  426d1d:	push   ecx
  426d1e:	add    al,BYTE PTR gs:[esi-0x4d00f63c]
  426d25:	(bad)  
  426d26:	sub    bl,bl
  426d28:	je     0x426d79
  426d2a:	imul   DWORD PTR [edx+0x40]
  426d2d:	inc    sp
  426d2f:	pop    ebp
  426d30:	imul   eax,DWORD PTR [eax-0x36ba5f8b],0xd652a3b1
  426d3a:	popa   
  426d3b:	dec    esi
  426d3c:	xor    BYTE PTR [eax-0x11],0x58
  426d40:	push   ebp
  426d41:	push   esp
  426d42:	call   0x5685:0xbeeab2ff
  426d49:	ins    DWORD PTR es:[edi],dx
  426d4a:	std    
  426d4b:	mov    bh,BYTE PTR [esi+0x51]
  426d4e:	mov    WORD PTR [ebp+0x5d],es
  426d51:	push   ecx
  426d52:	add    BYTE PTR gs:[edi],dl
  426d55:	add    DWORD PTR [edx+0x1],esp
  426d58:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426d59:	push   0x7eb2ffa9
  426d5e:	les    edx,FWORD PTR [esi+ecx*1]
  426d61:	leave  
  426d62:	push   ebx
  426d63:	dec    esp
  426d64:	mov    bl,0xd2
  426d66:	push   esi
  426d67:	pop    esi
  426d68:	push   esi
  426d69:	sub    DWORD PTR [ebx+0x7ae10655],edi
  426d6f:	in     al,dx
  426d70:	xchg   esp,eax
  426d71:	adc    ecx,edx
  426d73:	push   ecx
  426d74:	add    bl,ch
  426d76:	rol    DWORD PTR [edi],0x10
  426d79:	xchg   esp,eax
  426d7a:	pop    ecx
  426d7b:	js     0x426d75
  426d7d:	pop    ds
  426d7e:	sbb    eax,0x59b47f14
  426d83:	and    BYTE PTR [ebx],0x94
  426d86:	mov    edi,0x79a1fafb
  426d8b:	cdq    
  426d8c:	aas    
  426d8d:	xchg   esp,eax
  426d8e:	adc    BYTE PTR [ebx],0x4
  426d91:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426d92:	sbb    DWORD PTR [edi+eax*4],eax
  426d95:	pop    esp
  426d96:	loope  0x426d62
  426d98:	repz adc DWORD PTR [edi-0x6699fd0d],ebx
  426d9f:	push   edi
  426da0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426da1:	xchg   esp,eax
  426da2:	pop    ecx
  426da3:	(bad)  
  426da4:	cli    
  426da5:	test   eax,0xa0156c45
  426daa:	push   0x117dffbf
  426daf:	retf   0x1951
  426db2:	xchg   ebp,eax
  426db3:	cmp    esp,DWORD PTR [esi-0x6c]
  426db6:	test   eax,0x58ff4545
  426dbb:	ins    BYTE PTR es:[edi],dx
  426dbc:	adc    eax,0xffbf4ba8
  426dc1:	sbb    al,0xa5
  426dc3:	cmp    edi,DWORD PTR [edi-0x28]
  426dc6:	inc    ebp
  426dc7:	jbe    0x426e26
  426dc9:	hlt    
  426dca:	fild   DWORD PTR [ebx]
  426dcc:	adc    BYTE PTR [ecx+ebx*2+0x59a07d7f],dl
  426dd3:	repnz push cs
  426dd5:	adc    DWORD PTR [ebp+0x62005063],ebx
  426ddb:	cli    
  426ddc:	repnz repz mov bl,0xec
  426de0:	idiv   dl
  426de2:	or     ecx,0xfe944012
  426de8:	adc    bh,bl
  426dea:	and    DWORD PTR [eax],eax
  426dec:	add    DWORD PTR [edi-0x27],edi
  426def:	xor    al,0x4f
  426df1:	cld    
  426df2:	(bad)  [ebx+0x5c]
  426df5:	cld    
  426df6:	or     al,0xed
  426df8:	les    ebp,FWORD PTR [ecx+eiz*4-0x74]
  426dfc:	fadd   st(3),st
  426dfe:	jae    0x426e7c
  426e00:	test   eax,0xdc6383f6
  426e05:	or     eax,DWORD PTR [ebp+0x712ee8c0]
  426e0b:	(bad)  
  426e0c:	call   0x6c643714
  426e11:	(bad)  
  426e12:	lahf   
  426e13:	rol    BYTE PTR [eax-0x16ff4013],1
  426e19:	pop    eax
  426e1a:	push   es
  426e1b:	ja     0x426e41
  426e1d:	push   0x10f54719
  426e22:	das    
  426e23:	in     eax,dx
  426e24:	jl     0x426e9e
  426e26:	fst    DWORD PTR [eax]
  426e28:	and    DWORD PTR [eax+ecx*8],0xd4866262
  426e2f:	in     al,dx
  426e30:	mov    BYTE PTR [ebp+0x51],al
  426e33:	addr16 jmp 0x41aef7a5
  426e39:	adc    BYTE PTR [ebx+0x62],0x42
  426e3d:	add    DWORD PTR [eax],0x71
  426e40:	addr16 jmp 0xacba003c
  426e46:	adc    ebx,edi
  426e48:	das    
  426e49:	inc    ecx
  426e4a:	repnz push edx
  426e4c:	bound  esp,QWORD PTR [edx]
  426e4e:	jns    0x426ea9
  426e50:	addr16 mov edx,0x273962cd
  426e56:	pop    ss
  426e57:	xchg   esp,eax
  426e58:	int    0x5d
  426e5a:	pop    edi
  426e5b:	cmp    ebx,DWORD PTR [ecx+eax*1-0x80]
  426e5f:	shr    BYTE PTR [ebx],0x66
  426e62:	mov    edi,0xf5fff877
  426e67:	sar    DWORD PTR [ecx+0x1d],cl
  426e6a:	std    
  426e6b:	test   al,al
  426e6d:	(bad)  
  426e6e:	fimul  DWORD PTR ds:[bp+di]
  426e72:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426e73:	push   ebx
  426e74:	bound  eax,QWORD PTR [esi-0x78ce102f]
  426e7a:	push   ss
  426e7b:	fadd   DWORD PTR [ecx]
  426e7d:	repnz (bad) 
  426e7f:	jmp    ecx
  426e81:	idiv   DWORD PTR [esi-0x14ff8191]
  426e87:	xchg   edi,eax
  426e88:	add    BYTE PTR [edi+0x3f3c7bdc],al
  426e8e:	jmp    0x6c6b1105
  426e93:	test   al,bh
  426e95:	mov    al,cs:0xde13b671
  426e9b:	adc    eax,0x97e90158
  426ea0:	loope  0x426f1b
  426ea2:	aad    0x0
  426ea4:	nop
  426ea5:	jmp    0x426eb4
  426ea7:	bound  edx,QWORD PTR [esi-0xe]
  426eaa:	cmp    BYTE PTR [ecx],ah
  426eac:	xchg   esp,eax
  426ead:	in     al,dx
  426eae:	add    eax,0x891dd672
  426eb3:	out    0x68,al
  426eb5:	dec    edi
  426eb6:	add    ecx,ebp
  426eb8:	xchg   edi,eax
  426eb9:	jns    0x426f00
  426ebb:	stc    
  426ebc:	stos   BYTE PTR es:[edi],al
  426ebd:	aas    
  426ebe:	je     0x426eab
  426ec0:	jo     0x426eba
  426ec2:	jle    0x426e83
  426ec4:	xchg   ebx,eax
  426ec5:	or     ebp,DWORD PTR gs:[esi+esi*8+0x0]
  426eca:	add    cl,ch
  426ecc:	pop    edx
  426ecd:	mov    esi,0xfdd62f07
  426ed2:	add    BYTE PTR [edi-0x34],bl
  426ed5:	cmp    eax,0x78e5e93f
  426eda:	inc    esp
  426edb:	lds    edx,FWORD PTR [ebx-0x52ffea9b]
  426ee1:	or     eax,DWORD PTR [eax+0x0]
  426ee4:	stos   BYTE PTR es:[edi],al
  426ee5:	jo     0x426efa
  426ee7:	(bad)  
  426ee8:	icebp  
  426ee9:	add    DWORD PTR [edi+edi*8],esi
  426eec:	and    cl,dh
  426eee:	dec    edi
  426eef:	push   ecx
  426ef1:	and    BYTE PTR [ecx*4-0xbbdf4f],ah
  426ef8:	mov    ds:0x4afe74c4,al
  426efd:	(bad)  
  426efe:	dec    ebp
  426eff:	mov    cl,al
  426f01:	and    BYTE PTR [edi],cl
  426f03:	dec    DWORD PTR [esi]
  426f05:	loop   0x426f35
  426f07:	call   0xf733330c
  426f0c:	push   esi
  426f0e:	in     eax,dx
  426f0f:	jp     0x426f0f
  426f11:	cli    
  426f12:	gs jg  0x426ea1
  426f15:	cmp    al,0xfd
  426f17:	(bad)  
  426f18:	jg     0x426ec3
  426f1a:	and    BYTE PTR [ebx],cl
  426f1c:	add    BYTE PTR [edx-0x1f],bl
  426f1f:	nop
  426f20:	add    DWORD PTR ds:0x45f662fd,edi
  426f26:	cli    
  426f27:	xor    al,0x24
  426f29:	icebp  
  426f2a:	cmp    ebx,edi
  426f2c:	mov    WORD PTR [ecx+0x20],?
  426f2f:	and    al,0x50
  426f31:	ret    
  426f32:	aas    
  426f33:	(bad)  
  426f34:	jmp    FWORD PTR [edx+0x2e]
  426f37:	call   0xf7185b44
  426f3c:	lea    ebx,[ecx]
  426f3e:	add    DWORD PTR [ecx+edx*2],ebp
  426f41:	mov    eax,fs:0xfe66241f
  426f47:	popa   
  426f48:	add    ebp,edi
  426f4a:	(bad)  
  426f4b:	les    eax,FWORD PTR [edx]
  426f4d:	stos   BYTE PTR es:[edi],al
  426f4e:	(bad)  
  426f4f:	mov    BYTE PTR [ecx+eiz*8+0x4],al
  426f53:	add    DWORD PTR [esi-0x33],0xffffffe3
  426f57:	inc    ebx
  426f58:	and    al,0x94
  426f5a:	dec    edi
  426f5b:	jp     0x426f9f
  426f5d:	mov    al,ds:0x58894a46
  426f62:	xor    esp,DWORD PTR [ebx]
  426f64:	cmp    DWORD PTR [eax+0x3b],ecx
  426f67:	pop    ds
  426f68:	or     ebx,DWORD PTR [eax]
  426f6a:	mov    dl,0xfe
  426f6c:	inc    DWORD PTR [eax]
  426f6e:	xchg   esp,eax
  426f6f:	les    edi,FWORD PTR [edx+0x5c19b423]
  426f75:	adc    BYTE PTR [ebx+0x3f],dl
  426f78:	imul   eax,DWORD PTR [esp+edx*2-0x6b6a8499],0xb565ff69
  426f83:	inc    esi
  426f84:	xor    eax,ebp
  426f86:	mov    ecx,0xffb6868
  426f8b:	xchg   edx,eax
  426f8c:	sub    eax,0xe130e0f7
  426f91:	cmp    BYTE PTR [ebx-0x3f050a03],dh
  426f97:	inc    ebp
  426f98:	sub    edi,ebx
  426f9a:	enter  0x2b4d,0x53
  426f9e:	sub    al,0xe5
  426fa0:	sar    bh,0x33
  426fa3:	call   FWORD PTR [ebx+0x1c]
  426fa6:	(bad)  
  426fa8:	push   0x1f4da8fb
  426fad:	xchg   eax,edx
  426faf:	inc    ebp
  426fb0:	pop    ss
  426fb1:	dec    edi
  426fb2:	cld    
  426fb3:	fnstcw WORD PTR [edi-0x6]
  426fb6:	or     edx,ecx
  426fb8:	mov    edi,0x44f29c23
  426fbd:	je     0x427022
  426fbf:	jno    0x426fc5
  426fc1:	adc    BYTE PTR [ecx+ebp*2+0x3db04476],dl
  426fc8:	push   edi
  426fc9:	lds    ecx,FWORD PTR [ebp+0x17]
  426fcc:	imul   eax,DWORD PTR [edi+0x746c52dc],0x74008e00
  426fd6:	shl    BYTE PTR [edi-0x4],0xb8
  426fda:	sar    BYTE PTR [esi-0x28dc332c],1
  426fe0:	pop    es
  426fe1:	mov    ecx,0x2009403
  426fe6:	cmovl  esi,ebp
  426fe9:	test   al,0x3
  426feb:	sbb    DWORD PTR [ecx+0x7d],eax
  426fee:	or     eax,0x2ce0c813
  426ff3:	push   ebx
  426ff4:	aam    0xf5
  426ff6:	loope  0x426fc4
  426ff8:	clc    
  426ff9:	push   esp
  426ffa:	cli    
  426ffb:	jle    0x426fd1
  426ffd:	or     al,0x30
  426fff:	jg     0x426fd5
  427001:	add    al,0x30
  427003:	les    ebp,FWORD PTR [eax+0x8]
  427006:	shr    DWORD PTR [ebx+0x5f],0x12
  42700a:	pop    esp
  42700b:	sbb    al,0xc9
  42700d:	mov    dl,0x68
  42700f:	pop    edi
  427010:	aam    0x4
  427012:	or     al,0x3c
  427014:	scas   eax,DWORD PTR es:[edi]
  427015:	xor    BYTE PTR [edx+0x4f],ch
  427018:	pop    edi
  427019:	adc    eax,0x4b687420
  42701e:	mov    edx,0xef8a5f3d
  427023:	ja     0x42704d
  427025:	xchg   ecx,eax
  427026:	xchg   ch,bl
  427028:	pop    esi
  427029:	jp     0x4270a7
  42702b:	fsub   DWORD PTR [ecx+edi*4]
  42702e:	jp     0x427006
  427030:	clc    
  427031:	pop    ebp
  427032:	mov    edi,0xc17014b7
  427037:	add    BYTE PTR [edi-0x7cf85c75],ch
  42703d:	pop    eax
  42703e:	push   edx
  42703f:	out    dx,eax
  427040:	dec    ebx
  427041:	sub    esp,DWORD PTR [ebx-0x42a7e4dd]
  427047:	sub    ebp,DWORD PTR [ebx-0x23]
  42704a:	lock add ebp,DWORD PTR [ecx-0xe]
  42704e:	inc    eax
  427050:	xchg   edi,eax
  427051:	lock (bad) 
  427053:	call   0xe9627057
  427058:	xchg   edi,eax
  427059:	push   0x5b2c1b43
  42705e:	mov    DWORD PTR [ebx+eax*8-0x532282e9],ebp
  427065:	sbb    al,0x7d
  427067:	cmc    
  427068:	adc    ch,bl
  42706a:	pop    es
  42706b:	jmp    0xafc97e23
  427070:	(bad)  
  427071:	pop    edi
  427072:	inc    ebp
  427073:	leave  
  427074:	fs into 
  427076:	cli    
  427077:	pop    esp
  427078:	mov    BYTE PTR [esi-0x7d],ah
  42707b:	xor    dl,bh
  42707d:	pop    ecx
  42707e:	add    DWORD PTR [edi-0x50],edx
  427081:	test   DWORD PTR [ebp-0x7],eax
  427084:	adc    al,0x41
  427086:	je     0x427073
  427088:	call   0xb46833a5
  42708d:	hlt    
  42708e:	add    cl,ch
  427090:	xchg   edi,eax
  427091:	add    BYTE PTR [eax-0x23],ch
  427094:	xchg   ebx,eax
  427095:	sbb    eax,0x50a5a600
  42709a:	push   cs
  42709b:	sub    DWORD PTR [eax],eax
  42709d:	cwde   
  42709e:	test   DWORD PTR [ebp+ecx*8-0x75],eax
  4270a2:	mov    ecx,0x63af3259
  4270a7:	pop    ebp
  4270a8:	stos   DWORD PTR es:[edi],eax
  4270a9:	test   BYTE PTR [eax],al
  4270ab:	cmp    ch,0x83
  4270ae:	or     eax,0x598efd00
  4270b3:	je     0x42707a
  4270b5:	(bad)  
  4270b6:	push   0x5971b00b
  4270bb:	jg     0x42711c
  4270bd:	jnp    0x427093
  4270bf:	or     al,0x88
  4270c1:	mov    ah,0x44
  4270c3:	aas    
  4270c4:	jmp    0x6ac097
  4270c9:	mov    ebx,0xed040140
  4270ce:	and    BYTE PTR [esp-0x47],0x1
  4270d3:	push   0x1d3e4
  4270d8:	dec    eax
  4270da:	std    
  4270db:	or     DWORD PTR [eax-0x53],eax
  4270de:	mov    edx,0xb83655b3
  4270e3:	jp     0x4270d1
  4270e5:	lods   eax,DWORD PTR ds:[esi]
  4270e6:	xor    ah,BYTE PTR [ebp+0x44]
  4270e9:	or     ebx,ebx
  4270eb:	xlat   BYTE PTR ds:[ebx]
  4270ec:	call   0x3c0c63
  4270f1:	ss aas 
  4270f3:	add    eax,edi
  4270f5:	jnp    0x4270fb
  4270f7:	add    BYTE PTR [eax],al
  4270f9:	jge    0x4270d7
  4270fb:	cmp    eax,0x73e6f804
  427100:	xor    eax,DWORD PTR [eax]
  427102:	pop    ebx
  427103:	ret    0x7500
  427106:	popf   
  427107:	xor    ebx,0x8109ab04
  42710d:	aas    
  42710e:	lds    eax,FWORD PTR [esp+esi*2]
  427111:	add    BYTE PTR [eax-0x28142f0f],bl
  427117:	add    al,0x43
  427119:	push   ebx
  42711a:	mov    bh,BYTE PTR [edx]
  42711c:	sti    
  42711d:	mov    BYTE PTR [ebx-0x42321ca8],al
  427123:	jecxz  0x42711b
  427125:	jmp    0x42714c
  427127:	fdivr  DWORD PTR [edx]
  427129:	dec    DWORD PTR [edx+0x50c3ddb]
  42712f:	add    al,0x85
  427131:	(bad)  
  427132:	mov    ds:0xb38d01ba,al
  427137:	pop    eax
  427138:	push   eax
  427139:	push   eax
  42713a:	gs push ebx
  42713c:	idiv   dh
  42713e:	(bad)  
  42713f:	fdivr  QWORD PTR ds:0x3eec9408
  427145:	jne    0x4270e2
  427147:	stc    
  427148:	inc    ebx
  427149:	jmp    0x41d82f
  42714e:	adc    DWORD PTR [ebp+0x1611500b],esp
  427154:	repnz test cl,bh
  427157:	data16 (bad) 
  427159:	(bad)  
  42715a:	cmp    al,0x4a
  42715c:	(bad)  
  42715d:	call   DWORD PTR [esi+edi*8]
  427160:	out    dx,eax
  427161:	pop    es
  427162:	lods   al,BYTE PTR ds:[esi]
  427163:	mov    ebp,0xb300fafe
  427168:	xchg   ebp,eax
  427169:	jl     0x4271ad
  42716b:	test   ah,dl
  42716d:	mov    edi,0xbfec44fb
  427172:	out    dx,eax
  427173:	inc    esp
  427174:	sbb    DWORD PTR [eax],0x3a6209fb
  42717a:	inc    ebp
  42717b:	mov    BYTE PTR [ecx-0x1],dl
  42717e:	call   DWORD PTR [edx+edi*1+0x29a1a40b]
  427185:	add    al,0x7f
  427187:	ins    BYTE PTR es:[edi],dx
  427188:	imul   ebp,edx,0x682cad13
  42718e:	jb     0x427123
  427190:	jmp    0x1d076177
  427195:	jmp    0xf04318
  42719a:	jne    0x427194
  42719c:	sar    DWORD PTR [ecx+0x24241117],1
  4271a2:	push   eax
  4271a3:	lods   al,BYTE PTR ds:[esi]
  4271a4:	push   0x8b14ffff
  4271a9:	jmp    0x4271b2
  4271ab:	cmp    al,0xf3
  4271ad:	add    edi,ebx
  4271af:	and    edx,ecx
  4271b1:	mov    ecx,0x142d0f1b
  4271b6:	lea    ebx,[edx+ebp*8+0x7e]
  4271ba:	stc    
  4271bb:	or     eax,DWORD PTR [ecx]
  4271bd:	(bad)  
  4271be:	cmc    
  4271bf:	add    edx,ebx
  4271c1:	jmp    0x42723b
  4271c3:	dec    ecx
  4271c4:	or     al,0x6c
  4271c6:	cmp    ebp,DWORD PTR [eax+0x2]
  4271c9:	pusha  
  4271ca:	mov    dh,0x0
  4271cc:	mov    bh,0x89
  4271ce:	stos   DWORD PTR es:[edi],eax
  4271cf:	sbb    edi,DWORD PTR [edx-0x4]
  4271d2:	cmp    edi,ebp
  4271d4:	xchg   ebx,eax
  4271d5:	push   0x5bce6641
  4271da:	pop    esi
  4271db:	dec    esp
  4271dc:	adc    DWORD PTR [eax],edi
  4271de:	popf   
  4271df:	int    0x35
  4271e1:	jg     0x4271c1
  4271e3:	add    eax,DWORD PTR [eax-0x50]
  4271e6:	jle    0x4271ee
  4271e8:	scas   eax,DWORD PTR es:[edi]
  4271e9:	aad    0xe0
  4271eb:	pop    ebx
  4271ec:	ficomp DWORD PTR [edx+0x3]
  4271ef:	sbb    DWORD PTR gs:[ecx+0x75],eax
  4271f3:	daa    
  4271f4:	ss jg  0x4271a8
  4271f7:	add    ecx,DWORD PTR [eax]
  4271f9:	adc    esp,DWORD PTR [eax-0x3a]
  4271fc:	mov    edi,0x7b342b89
  427201:	push   ss
  427202:	(bad)  
  427204:	xchg   ebx,eax
  427205:	push   0x5b6e662a
  42720a:	pusha  
  42720b:	mov    ebp,0xc2b429b
  427210:	xchg   esp,eax
  427211:	addr16 jl 0x427197
  427214:	fst    DWORD PTR [eax+0x2a]
  427217:	cmc    
  427218:	sbb    BYTE PTR ds:0x7f4f64aa,ch
  42721e:	and    al,0x68
  427220:	inc    ebx
  427221:	or     ah,BYTE PTR [eax+eiz*1+0x3f]
  427225:	pop    ebx
  427226:	xchg   edx,eax
  427227:	cmp    eax,0x5ae8f8d6
  42722c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42722d:	pop    ebx
  42722e:	and    BYTE PTR [eax+eax*1-0x3c],0x68
  427233:	pop    edi
  427234:	mov    esp,0x1a005b1d
  427239:	jo     0x4272af
  42723b:	inc    ebx
  42723c:	outs   dx,DWORD PTR ds:[esi]
  42723d:	jo     0x4272a7
  42723f:	and    DWORD PTR [edx+0x79],ebx
  427242:	push   edi
  427243:	mov    DWORD PTR [edi-0x4dfe5529],esp
  427249:	scas   al,BYTE PTR es:[edi]
  42724a:	call   0x6aec:0x81dae90c
  427251:	inc    ebx
  427252:	pop    eax
  427253:	jg     0x4272a2
  427255:	repz add DWORD PTR [ebp-0x23],0x2e52b0e4
  42725d:	xchg   DWORD PTR [ebx+0x1038f945],eax
  427263:	xchg   DWORD PTR [ebx+eax*8+0x14e17555],esp
  42726a:	inc    ebx
  42726b:	sti    
  42726c:	bound  edi,QWORD PTR [esi]
  42726e:	lea    esi,[ebp+ecx*8-0x15]
  427272:	xchg   DWORD PTR [ebp+eax*8+0x77],ebx
  427276:	push   0x55f7f76c
  42727b:	test   BYTE PTR [ecx],ch
  42727d:	cmp    BYTE PTR [esi+0x1a],0xeb
  427281:	xchg   edi,eax
  427282:	add    BYTE PTR [edi+0x5e688824],al
  427288:	fdivr  st(7),st
  42728a:	push   ebp
  42728b:	mov    BYTE PTR ds:0xaf8705bc,ah
  427291:	sub    BYTE PTR [edx+0x4c],ah
  427294:	add    BYTE PTR [eax],0xf7
  427297:	push   ebp
  427298:	mov    DWORD PTR ds:0xe8a7f87c,ebp
  42729e:	arpl   bp,si
  4272a0:	and    DWORD PTR [bx+0x0],eax
  4272a5:	sahf   
  4272a6:	cmp    eax,0x98290e1e
  4272ab:	fldenv [ebx-0x3b]
  4272ae:	and    ebx,DWORD PTR [edx-0x18]
  4272b1:	add    BYTE PTR [eax],cl
  4272b3:	add    al,0x0
  4272b5:	add    ch,al
  4272b7:	add    al,BYTE PTR [edi]
  4272b9:	test   BYTE PTR [edi+0x3],bh
  4272bc:	add    BYTE PTR [eax],al
  4272be:	jle    0x427328
  4272c0:	pop    ds
  4272c1:	adc    ch,ch
  4272c3:	repnz in eax,dx
  4272c5:	inc    esi
  4272c6:	mov    bl,0x48
  4272c8:	pop    ds
  4272c9:	push   cs
  4272ca:	cld    
  4272cb:	cld    
  4272cc:	jae    0x4272f2
  4272ce:	fnstcw WORD PTR [eax]
  4272d0:	inc    ebp
  4272d1:	mov    ebp,DWORD PTR [ecx]
  4272d3:	and    bh,BYTE PTR [eax-0x7d]
  4272d6:	aam    0x1
  4272d8:	add    BYTE PTR [ebp+edi*8+0x70],dh
  4272dc:	inc    esp
  4272dd:	and    al,0xfd
  4272df:	jo     0x42735d
  4272e1:	and    al,0xd1
  4272e3:	in     eax,0xa3
  4272e5:	enter  0xdd9a,0x83
  4272e9:	rcl    BYTE PTR [ecx],0xf8
  4272ec:	mov    WORD PTR [ecx+edx*8-0x13],es
  4272f0:	dec    edi
  4272f1:	call   0x3da858
  4272f6:	call   0x1795:0x281f31
  4272fd:	ds (bad) 
  4272ff:	jp     0x4272df
  427301:	jae    0x427327
  427303:	popf   
  427304:	fst    QWORD PTR [eax+eiz*4]
  427307:	jg     0x427346
  427309:	sti    
  42730a:	mov    al,cl
  42730c:	sub    BYTE PTR [ecx+ecx*4],ch
  42730f:	mov    cl,0x28
  427311:	adc    BYTE PTR [ebp-0x76f3ced3],al
  427317:	mov    eax,ds:0xe1eb1428
  42731c:	test   BYTE PTR [esp+0x6a],bh
  427320:	std    
  427321:	je     0x42732a
  427323:	repz inc eax
  427325:	pop    ds
  427326:	push   cs
  427327:	sub    eax,0x946a4dea
  42732c:	dec    eax
  42732d:	nop
  42732e:	jl     0x4273a0
  427330:	aas    
  427331:	mov    bh,0xe7
  427333:	mul    ebx
  427335:	pop    ebp
  427336:	sti    
  427337:	sete   bl
  42733a:	adc    al,0x54
  42733c:	addr16 out 0xff,eax
  42733f:	or     esp,DWORD PTR [edi-0x61]
  427342:	dec    edi
  427343:	cvtpi2ps xmm5,QWORD PTR [edi+0x5e4f81fa]
  42734a:	sar    BYTE PTR [esi+0xb],cl
  42734d:	xchg   ecx,eax
  42734e:	jl     0x427300
  427350:	pop    es
  427351:	mov    esp,0x5de417e7
  427356:	sti    
  427357:	pop    ds
  427358:	addr16 (bad) 
  42735a:	call   DWORD PTR [esi+esi*2]
  42735d:	in     eax,dx
  42735e:	cli    
  42735f:	add    BYTE PTR [edi],bl
  427361:	and    ch,BYTE PTR [edi+0x5e4f49fa]
  427367:	shr    BYTE PTR [esi],cl
  427369:	inc    ecx
  42736a:	nop
  42736b:	jl     0x4273e5
  42736d:	aas    
  42736e:	mov    bh,0xe7
  427370:	xor    ebp,esp
  427372:	pop    ebp
  427373:	sti    
  427374:	inc    edi
  427375:	ins    DWORD PTR es:[edi],dx
  427376:	pop    esi
  427377:	xchg   ebx,edx
  427379:	jbe    0x4273d9
  42737b:	jne    0x427319
  42737d:	dec    esi
  42737e:	cmp    BYTE PTR [edi+0x5f],bh
  427381:	addr16 mov eax,ds:0x580c
  427385:	sub    eax,DWORD PTR [ebx+edx*2]
  427388:	jnp    0x4273d7
  42738a:	imul   ecx,DWORD PTR [esi],0xffffffd4
  42738d:	imul   edi,DWORD PTR [edi+0x7c],0xaff37b0
  427394:	sbb    cl,ch
  427396:	add    eax,DWORD PTR [eax]
  427398:	xchg   esp,eax
  427399:	rcl    dl,cl
  42739b:	pop    es
  42739c:	cmp    al,0x31
  42739e:	dec    esi
  42739f:	sti    
  4273a0:	dec    ebx
  4273a1:	push   ebx
  4273a2:	inc    esp
  4273a3:	jne    0x427333
  4273a5:	add    BYTE PTR [ebx],bh
  4273a7:	ins    BYTE PTR es:[edi],dx
  4273a8:	adc    DWORD PTR [ecx-0x66],0x1d436b61
  4273af:	in     eax,dx
  4273b0:	adc    dl,BYTE PTR [ecx+0x48]
  4273b3:	sub    BYTE PTR [eax-0x3c],bl
  4273b6:	call   0x7a6b99a7
  4273bb:	fadd   st,st(3)
  4273bd:	lock pop ebp
  4273bf:	enter  0xecbb,0x80
  4273c3:	sbb    DWORD PTR [eax],eax
  4273c5:	fst    DWORD PTR [edi+0x62]
  4273c8:	mov    ds:0x3a63cb0,eax
  4273cd:	out    dx,eax
  4273ce:	int3   
  4273cf:	jmp    0xdf61:0xa303f3fb
  4273d6:	mov    eax,ds:0x9b480d
  4273db:	callw  0x6c74
  4273df:	call   0xa67ee486
  4273e4:	add    eax,DWORD PTR [ebx-0x24]
  4273e7:	jmp    0x7347:0xc5a19423
  4273ee:	add    BYTE PTR [eax-0x40],ah
  4273f1:	xchg   ebp,eax
  4273f2:	hlt    
  4273f3:	inc    edi
  4273f4:	sub    al,bl
  4273f6:	ret    
  4273f7:	call   0x815ebc88
  4273fc:	mov    ah,al
  4273fe:	(bad)  
  4273ff:	fsub   DWORD PTR [edx+0x3a63cb0]
  427405:	sbb    eax,esp
  427407:	or     al,0xe0
  427409:	or     al,0xc4
  42740b:	loop   0x427404
  42740d:	xor    al,0x1c
  42740f:	lods   eax,DWORD PTR ds:[esi]
  427410:	les    ebp,FWORD PTR [ebx-0x76]
  427413:	sbb    eax,0x35898428
  427418:	or     dh,BYTE PTR [eax-0x379ef695]
  42741e:	sbb    al,0x0
  427420:	xor    DWORD PTR [ecx],ebx
  427422:	jl     0x427448
  427424:	imul   edx,DWORD PTR [edi+0x910000],0x9efb3c80
  42742e:	sbb    ah,dl
  427430:	and    edi,ecx
  427432:	xchg   edi,eax
  427433:	int3   
  427434:	or     BYTE PTR [esi-0x6eefdcb5],cl
  42743a:	mov    al,ds:0x4c7efa55
  42743f:	pop    edx
  427440:	adc    eax,0x170179
  427445:	sbb    BYTE PTR [edx-0x2fd2f365],0x56
  42744c:	cmc    
  42744d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42744e:	mov    ebx,0x2cdd03f8
  427453:	jle    0x427499
  427455:	add    eax,0xd94d7dec
  42745a:	push   cs
  42745b:	add    DWORD PTR [edi-0x7917845b],eax
  427461:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427462:	ret    
  427463:	mov    cl,0x88
  427465:	call   0xfc2e619e
  42746a:	xlat   BYTE PTR ds:[ebx]
  42746b:	push   esi
  42746c:	xchg   BYTE PTR [edi+ebx*4+0x34194668],dl
  427473:	pop    ebx
  427474:	aaa    
  427475:	sub    cl,dl
  427477:	cld    
  427478:	push   ecx
  427479:	adc    DWORD PTR [ebp-0x5001049a],ebp
  42747f:	xchg   ebp,eax
  427480:	je     0x42744a
  427482:	sbb    BYTE PTR [ecx-0x5f],dl
  427485:	vunpckhps xmm0,xmm4,XMMWORD PTR [eax]
  427489:	push   edx
  42748a:	loop   0x4274b4
  42748c:	sti    
  42748d:	push   ebp
  42748e:	add    BYTE PTR [edx+0x5d2fe804],bl
  427494:	pop    eax
  427495:	sti    
  427496:	bound  ecx,QWORD PTR [edx+eiz*1+0x64]
  42749a:	add    dh,ah
  42749c:	out    dx,eax
  42749d:	and    eax,esp
  42749f:	jle    0x42749d
  4274a1:	mov    BYTE PTR [ebx+esi*1+0x6],al
  4274a5:	dec    edi
  4274a6:	jmp    FWORD PTR [eax-0x4e]
  4274a9:	or     DWORD PTR [eax+0x2d],eax
  4274ac:	jno    0x4274f2
  4274ae:	and    al,0x7d
  4274b0:	in     al,0xeb
  4274b2:	ret    
  4274b3:	add    dh,BYTE PTR [esi+0x4e594482]
  4274b9:	push   esi
  4274ba:	pop    esi
  4274bb:	jbe    0x427446
  4274bd:	in     eax,0x5d
  4274bf:	aas    
  4274c0:	dec    ebp
  4274c1:	sti    
  4274c2:	push   esp
  4274c3:	jbe    0x427495
  4274c5:	out    0xcb,eax
  4274c7:	sahf   
  4274c8:	mov    dh,0xf6
  4274ca:	test   BYTE PTR [ebp-0x71a9c4c8],ch
  4274d0:	scas   al,BYTE PTR es:[edi]
  4274d1:	cmp    BYTE PTR [ebp-0x13],dh
  4274d4:	sub    eax,0x5c83916
  4274d9:	je     0x4274f5
  4274db:	lds    eax,FWORD PTR [ecx]
  4274dd:	add    BYTE PTR [eax],al
  4274df:	sbb    eax,0x821074b6
  4274e4:	aaa    
  4274e5:	pop    es
  4274e6:	dec    DWORD PTR [eax]
  4274e8:	or     dh,bh
  4274ea:	adc    eax,0x3b58f9
  4274ef:	and    al,0x37
  4274f1:	or     ecx,DWORD PTR [ecx-0x72f9f800]
  4274f7:	inc    ebp
  4274f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4274f9:	xchg   ecx,eax
  4274fa:	mov    WORD PTR [ebp-0x47],es
  4274fd:	xchg   ecx,eax
  4274fe:	push   ecx
  4274ff:	dec    DWORD PTR [eax]
  427501:	or     ch,BYTE PTR [ebx]
  427503:	leave  
  427504:	xchg   ebp,eax
  427505:	mov    esp,?
  427507:	push   DWORD PTR [edx-0x6d]
  42750a:	jp     0x427504
  42750c:	jb     0x427546
  42750e:	(bad)  
  42750f:	pop    esp
  427510:	push   edx
  427511:	sub    BYTE PTR [eax+0x4279415],cl
  427517:	pop    ebp
  427518:	push   esi
  427519:	dec    ebx
  42751a:	call   DWORD PTR [edi+ecx*1+0x2b]
  42751e:	addr16 je 0x427508
  427521:	xchg   ebp,eax
  427522:	pop    edx
  427523:	test   BYTE PTR [ebx+edx*1-0x3c],dl
  427527:	push   ecx
  427528:	xchg   DWORD PTR [ebp-0xc5b8ae4],ecx
  42752e:	cli    
  42752f:	cmp    BYTE PTR [ecx-0x43ea2c9d],ch
  427535:	addr16 (bad) 
  427537:	push   esp
  427539:	test   eax,ebx
  42753b:	bndstx [ebx+ecx*1-0x5],bnd2
  427540:	mov    DWORD PTR [edi+0x5a],ecx
  427543:	adc    eax,0xffbf3478
  427548:	or     al,0x4c
  42754a:	out    dx,eax
  42754b:	mov    BYTE PTR [ecx-0x73ba6fb5],al
  427551:	xchg   edi,eax
  427552:	nop
  427553:	inc    ebp
  427554:	adc    BYTE PTR [edi+0x6900fab5],0x5f
  42755b:	push   cs
  42755c:	leave  
  42755d:	in     al,dx
  42755e:	mov    edi,0x74d3fb5a
  427563:	jle    0x42755d
  427565:	retf   
  427566:	xchg   ebx,eax
  427567:	add    bl,BYTE PTR [ebp-0x3d]
  42756a:	sti    
  42756b:	adc    DWORD PTR ds:0xbdc06754,0xffffff88
  427572:	addr16 mov eax,0x62e9b886
  427578:	clc    
  427579:	pop    ss
  42757a:	push   ebx
  42757b:	sub    dl,BYTE PTR [edx-0x54]
  42757e:	xor    al,0xae
  427580:	stc    
  427581:	xchg   ebx,eax
  427582:	fidivr WORD PTR [esi]
  427584:	je     0x427587
  427586:	xchg   edi,eax
  427587:	push   ebp
  427588:	data16 lods al,BYTE PTR ds:[esi]
  42758a:	mov    ah,0xc2
  42758c:	and    ecx,DWORD PTR [eax-0x6028e000]
  427592:	int    0xf3
  427594:	mov    ch,0xdb
  427596:	push   ebx
  427597:	cld    
  427598:	pop    ss
  427599:	xchg   al,al
  42759b:	call   0xaa47c620
  4275a0:	enter  0x877,0x11
  4275a4:	add    al,0x94
  4275a6:	add    BYTE PTR [esi-0x2331c0ef],bh
  4275ac:	mov    bl,0x33
  4275ae:	call   0x1a71d3df
  4275b3:	adc    eax,0xcccc8028
  4275b8:	sbb    ch,BYTE PTR [eax+0xd7f91c]
  4275be:	jge    0x4275a8
  4275c0:	call   0x7ae309c8
  4275c5:	fdiv   DWORD PTR [edi-0x48278e08]
  4275cb:	clc    
  4275cc:	imul   edx,edi,0xb7fc5393
  4275d2:	mov    al,al
  4275d4:	call   0xf95ed663
  4275d9:	mov    ch,BYTE PTR [eax+0x1c]
  4275dc:	cmc    
  4275dd:	mov    ss,WORD PTR [eax+0x1c]
  4275e0:	or     DWORD PTR [eax+eiz*1+0x642404bd],esi
  4275e7:	stos   BYTE PTR es:[edi],al
  4275e8:	xor    edi,edx
  4275ea:	fwait
  4275eb:	mov    esp,cr5
  4275ee:	xor    edx,DWORD PTR [edx+eiz*1+0x5d]
  4275f2:	xor    ebx,DWORD PTR [eax+0x1a]
  4275f5:	xlat   BYTE PTR ds:[ebx]
  4275f6:	pop    DWORD PTR [ebp+0x678c27ad]
  4275fc:	out    0x88,al
  4275fe:	push   ecx
  4275ff:	add    al,0x2
  427601:	xlat   BYTE PTR ds:[ebx]
  427602:	stos   DWORD PTR es:[edi],eax
  427603:	push   ebx
  427604:	je     0x4275fd
  427606:	mov    cs,ebp
  427608:	(bad)  
  427609:	fadd   DWORD PTR [edi+0x56]
  42760c:	jne    0x4275ef
  42760e:	fsubr  st,st(5)
  427610:	lahf   
  427611:	cld    
  427612:	push   edi
  427613:	push   ebx
  427614:	pop    ebp
  427615:	jb     0x427609
  427617:	mov    ch,0xbd
  427619:	std    
  42761a:	xchg   edi,eax
  42761b:	lods   eax,DWORD PTR ds:[esi]
  42761c:	xchg   BYTE PTR [ebp+0x6af85c14],bh
  427622:	add    bl,al
  427624:	and    al,0x52
  427626:	shl    DWORD PTR [esi-0x3b],1
  427629:	stc    
  42762a:	mov    dh,0x1b
  42762c:	inc    eax
  42762d:	je     0x427663
  42762f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427630:	dec    esi
  427631:	shl    WORD PTR [edx],1
  427634:	mov    esp,0xcd8eed23
  427639:	or     ebx,DWORD PTR [ebx+ebp*1]
  42763c:	mov    cl,0x4f
  42763e:	mov    fs,WORD PTR [edx]
  427640:	movlps xmm5,QWORD PTR [ecx]
  427643:	cwde   
  427644:	rol    ebx,cl
  427646:	in     eax,dx
  427647:	push   eax
  427648:	mov    esp,0xafe123
  42764d:	add    cl,ch
  42764f:	ins    BYTE PTR es:[edi],dx
  427650:	and    edi,ebx
  427652:	fsub   QWORD PTR [ebx-0x2bd81850]
  427658:	pop    eax
  427659:	sti    
  42765a:	adc    BYTE PTR [esi+ebx*1+0x19b3d514],bh
  427661:	je     0x427670
  427663:	enter  0x19ce,0xd1
  427667:	xchg   edi,eax
  427668:	add    BYTE PTR [eax],al
  42766a:	mov    DWORD PTR [eax-0x34],esp
  42766d:	and    edx,ecx
  42766f:	pop    eax
  427670:	int3   
  427671:	and    eax,DWORD PTR [ecx]
  427673:	push   ecx
  427674:	int    0x7
  427676:	push   ds
  427677:	mov    ds:0x97a914e6,al
  42767c:	mov    DWORD PTR [ebp+eax*8-0x59],esi
  427680:	xchg   DWORD PTR [eax+eax*1+0x61],esi
  427684:	dec    edx
  427685:	mov    WORD PTR [eax+eax*1+0x51],es
  427689:	push   ds
  42768a:	push   eax
  42768b:	lea    esi,[ecx]
  42768d:	sbb    ah,BYTE PTR [eax]
  42768f:	push   eax
  427690:	and    esi,DWORD PTR [ebp-0x3c71f78c]
  427696:	out    0xc6,eax
  427698:	jbe    0x427650
  42769a:	test   BYTE PTR [ebx+0x1c74b645],0xb8
  4276a1:	inc    eax
  4276a2:	pop    ds
  4276a3:	or     BYTE PTR [esi-0x6],ah
  4276a6:	add    BYTE PTR [ebp+0x39],0xb7
  4276aa:	je     0x4276c4
  4276ac:	or     dh,BYTE PTR [eax]
  4276ae:	ud0    eax,DWORD PTR [eax-0x6f00b4b4]
  4276b5:	add    al,0xf7
  4276b7:	adc    eax,0x3b4fc5
  4276bc:	imul   eax,DWORD PTR [ecx+0x50ef5de5],0xfffffffb
  4276c3:	push   edx
  4276c4:	mov    bl,0x81
  4276c6:	je     0x4276ec
  4276c8:	stc    
  4276c9:	(bad)  
  4276ca:	not    BYTE PTR ds:0x3b5109
  4276d0:	jbe    0x4276e6
  4276d2:	call   0xf6faa39e
  4276d7:	test   BYTE PTR [ebp+0xa571f30],bh
  4276dd:	or     esp,eax
  4276df:	inc    ebx
  4276e0:	in     eax,dx
  4276e1:	mov    ?,esi
  4276e3:	adc    eax,0x3b4a69
  4276e8:	gs sbb ch,ch
  4276eb:	inc    DWORD PTR [eax]
  4276ed:	mov    bh,BYTE PTR [ecx-0x8]
  4276f0:	inc    DWORD PTR [ecx]
  4276f2:	add    eax,ebp
  4276f4:	cwde   
  4276f5:	mov    esi,DWORD PTR [ebp+0x4f8a57f6]
  4276fb:	jmp    0x42770f
  4276fd:	xchg   esp,eax
  4276fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4276ff:	call   FWORD PTR [edx+0x3a]
  427702:	fiadd  WORD PTR [edx+0x57]
  427705:	push   esi
  427706:	arpl   di,di
  427708:	push   esp
  427709:	pop    ds
  42770a:	add    ebp,DWORD PTR [eax+edx*4-0x1b]
  42770e:	dec    ecx
  42770f:	push   esi
  427710:	test   BYTE PTR [ebx+ecx*8+0x2b],dl
  427714:	das    
  427715:	push   esp
  427716:	and    cl,al
  427718:	or     esp,eax
  42771a:	add    eax,0xb184451d
  42771f:	clc    
  427720:	cmp    cl,dl
  427722:	dec    ebx
  427723:	retf   
  427724:	pop    ss
  427725:	in     al,0xf7
  427727:	push   esi
  427728:	jne    0x4276ca
  42772a:	in     al,0xbf
  42772c:	pop    es
  42772d:	inc    ebx
  42772e:	adc    al,0xf4
  427730:	cli    
  427731:	shl    DWORD PTR [ebx],0x67
  427734:	dec    ecx
  427735:	sub    ebx,DWORD PTR [edx+0x722c7f56]
  42773b:	rol    BYTE PTR [edx],1
  42773d:	shr    DWORD PTR [edx+0x20],0x90
  427741:	and    DWORD PTR [edi],0x36d65d04
  427747:	call   DWORD PTR [edi+ebx*1-0x7d]
  42774b:	mov    cl,0xe7
  42774d:	push   ebx
  42774e:	clc    
  42774f:	push   ebp
  427750:	sti    
  427751:	add    BYTE PTR [edi],cl
  427753:	dec    esp
  427754:	add    eax,DWORD PTR [esp+edx*8-0x1d7ad3ce]
  42775b:	sub    ah,BYTE PTR [eax]
  42775d:	xchg   DWORD PTR [edx+0x53],ecx
  427760:	or     dh,0x60
  427763:	popa   
  427764:	mov    BYTE PTR [edx-0x54],al
  427767:	into   
  427768:	push   es
  427769:	test   ebp,ebx
  42776b:	mov    dh,al
  42776d:	cli    
  42776e:	dec    ecx
  42776f:	xor    ebp,ebp
  427771:	add    BYTE PTR [eax+edi*2-0x4b],ah
  427775:	mov    WORD PTR [ecx+0x0],ds
  427778:	icebp  
  427779:	imul   edx,DWORD PTR [ecx+0x235a1a49],0x58
  427780:	adc    dl,al
  427782:	mov    edx,DWORD PTR [ecx-0x6c]
  427785:	out    dx,eax
  427786:	mov    ss,esi
  427788:	fdiv   DWORD PTR [ecx+0x5af0d68e]
  42778e:	test   eax,0x7bc3dc74
  427793:	scas   al,BYTE PTR es:[edi]
  427794:	mov    eax,DWORD PTR [ebp-0x7c]
  427797:	add    BYTE PTR [ecx*4-0x4d18a688],bh
  42779e:	pop    ebp
  42779f:	push   eax
  4277a0:	ins    DWORD PTR es:[edi],dx
  4277a1:	inc    esp
  4277a2:	loopne 0x42778d
  4277a4:	leave  
  4277a5:	iret   
  4277a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4277a7:	jge    0x4277d5
  4277a9:	or     al,0xb2
  4277ab:	add    bh,BYTE PTR [edx-0x17257031]
  4277b1:	in     eax,dx
  4277b2:	cmp    ebp,DWORD PTR [eax-0x62]
  4277b5:	push   edx
  4277b6:	add    BYTE PTR [edi],ch
  4277b8:	push   eax
  4277b9:	pop    sp
  4277bb:	das    
  4277bc:	(bad)  
  4277bd:	loope  0x427775
  4277bf:	push   ds
  4277c0:	es jno 0x4277b2
  4277c3:	pop    ebx
  4277c4:	add    BYTE PTR [esi+eax*2],ch
  4277c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4277c8:	add    BYTE PTR [ecx*4-0x4b68a708],bl
  4277cf:	std    
  4277d0:	dec    edi
  4277d1:	ins    DWORD PTR es:[edi],dx
  4277d2:	inc    esp
  4277d3:	add    dl,0x12
  4277d6:	mov    cl,0x2e
  4277d8:	std    
  4277d9:	sub    al,0xc5
  4277db:	jmp    0x427793
  4277dd:	pop    ecx
  4277de:	out    dx,eax
  4277df:	out    dx,eax
  4277e0:	repnz test al,0x3
  4277e3:	adc    edx,esi
  4277e5:	loopne 0x427852
  4277e7:	repz pop esp
  4277e9:	inc    edx
  4277ea:	pop    ecx
  4277eb:	dec    ebx
  4277ec:	dec    eax
  4277ed:	cmp    dl,al
  4277ef:	popf   
  4277f0:	(bad)  
  4277f2:	sub    BYTE PTR [eax+0x4f],ch
  4277f5:	add    al,0x5
  4277f7:	push   esp
  4277f8:	verw   WORD PTR [edx-0x38]
  4277fc:	repz add BYTE PTR [esp+ecx*4+0x10f94887],dl
  427804:	retf   0xe903
  427807:	arpl   WORD PTR [ecx],ax
  427809:	xchg   DWORD PTR [ecx-0xeba8655],ebp
  42780f:	inc    esp
  427810:	dec    edx
  427811:	adc    eax,0xf81f9
  427816:	mov    gs,WORD PTR ds:0xcfaac
  42781c:	xor    al,0xf5
  42781e:	aas    
  42781f:	jmp    0xd792f913
  427824:	mov    esp,0x9f55c084
  427829:	xchg   DWORD PTR [ebp+ecx*1-0x68],ecx
  42782d:	pop    eax
  42782e:	mov    ah,0xcf
  427830:	fmul   QWORD PTR [ebx-0x5]
  427833:	or     al,0x14
  427835:	cmc    
  427836:	aas    
  427837:	jmp    0xa79250fb
  42783c:	int3   
  42783d:	test   al,al
  42783f:	adc    eax,0xcd4c878f
  427844:	(bad)  
  427845:	pop    eax
  427846:	pushf  
  427847:	jg     0x4278b5
  427849:	dec    ebx
  42784a:	sti    
  42784b:	int3   
  42784c:	xor    ebp,0x3f
  42784f:	jmp    0x6b2efe86
  427854:	loop   0x427850
  427856:	add    ah,dh
  427858:	in     al,0xcd
  42785a:	jl     0x427859
  42785c:	jmp    0x427831
  42785e:	adc    BYTE PTR [ecx-0x2a],dl
  427861:	mov    esi,0x405b56f9
  427866:	je     0x427849
  427868:	and    BYTE PTR [ebp+0x3165000f],bh
  42786e:	jmp    0xf6d8fb72
  427873:	and    eax,0x3b5e31
  427878:	or     BYTE PTR [esp+ebp*8-0x7f],bh
  42787c:	adc    ebx,0xad000004
  427882:	nop
  427883:	dec    esi
  427884:	push   0xffffff9d
  427886:	pop    esp
  427887:	sti    
  427888:	push   edx
  427889:	imul   BYTE PTR [ecx+0x504915f6]
  42788f:	cmp    eax,DWORD PTR [eax]
  427891:	out    dx,al
  427892:	or     eax,0xfa00800c
  427897:	push   DWORD PTR [ecx+ebp*1-0x7b]
  42789b:	jge    0x4278a9
  42789d:	jge    0x4278dd
  42789f:	push   ds
  4278a0:	test   DWORD PTR [edx+0x31],eax
  4278a3:	sbb    bh,bh
  4278a5:	mov    eax,0x55c782f8
  4278aa:	and    cl,BYTE PTR [edx-0x2]
  4278ad:	push   edx
  4278ae:	jl     0x4278f5
  4278b0:	cld    
  4278b1:	mov    eax,0x9a1275c4
  4278b6:	mov    ch,0x74
  4278b8:	or     al,0x55
  4278ba:	(bad)  
  4278bb:	inc    eax
  4278bc:	(bad)  
  4278bd:	bnd jns 0x4278b0
  4278c0:	mov    DWORD PTR [eax+0x78f684f8],eax
  4278c6:	cmp    al,0x2a
  4278c8:	rcl    BYTE PTR [esp+ebp*2],0x0
  4278cc:	add    ch,bh
  4278ce:	push   es
  4278cf:	scas   al,BYTE PTR es:[edi]
  4278d0:	inc    ebp
  4278d1:	add    eax,0xb50e6f3a
  4278d6:	das    
  4278d7:	out    0x8d,al
  4278d9:	mov    eax,0xa4684ff8
  4278de:	add    al,0x0
  4278e0:	add    BYTE PTR [esi-0x5],al
  4278e3:	mov    WORD PTR [ebp+0x0],es
  4278e6:	xchg   esp,eax
  4278e7:	arpl   WORD PTR [edi-0xa82199],bp
  4278ed:	(bad)  
  4278ee:	mov    esp,0xc3fa696e
  4278f3:	rcl    BYTE PTR [ebx-0x7b],cl
  4278f6:	ret    0x2f8b
  4278f9:	xchg   DWORD PTR [ecx+0x2b],ebx
  4278fc:	lods   eax,DWORD PTR ds:[esi]
  4278fd:	out    0xc5,eax
  4278ff:	mov    BYTE PTR [ebp-0x5],dl
  427902:	or     eax,0xd48553a5
  427907:	jbe    0x427910
  427909:	push   edx
  42790a:	jl     0x427905
  42790c:	ret    
  42790d:	stc    
  42790e:	mov    esi,edx
  427910:	fwait
  427911:	lea    eax,[ecx-0x39]
  427914:	pop    eax
  427915:	sti    
  427916:	jnp    0x427917
  427918:	sbb    dl,BYTE PTR [ecx+0x72]
  42791b:	pop    esi
  42791c:	jmp    0x7c1e9220
  427921:	cli    
  427922:	arpl   WORD PTR [esi],bp
  427924:	scas   eax,DWORD PTR es:[edi]
  427925:	xchg   cl,dl
  427927:	arpl   WORD PTR [esi],sp
  427929:	inc    ebp
  42792a:	push   eax
  42792b:	loop   0x427971
  42792d:	call   0x463efd
  427932:	(bad)  
  427934:	mov    WORD PTR [ebp+0x38],?
  427937:	fcom   QWORD PTR [ecx+0x74]
  42793a:	(bad)  
  42793b:	xlat   BYTE PTR ds:[ebx]
  42793c:	xlat   BYTE PTR ds:[ebx]
  42793d:	pop    es
  42793e:	xchg   esp,eax
  42793f:	sar    cl,cl
  427941:	xchg   ah,dl
  427943:	dec    ebx
  427944:	mov    edi,?
  427946:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427947:	dec    eax
  427948:	push   edx
  427949:	xor    eax,DWORD PTR [eax]
  42794b:	cld    
  42794c:	mov    eax,0xee0bf9be
  427951:	imul   ebx,DWORD PTR [esp+edx*2+0x717f51cd],0xffffffd3
  427959:	(bad)  
  42795a:	addr16 sbb al,0x64
  42795d:	(bad)  
  42795e:	call   FWORD PTR [ecx]
  427960:	add    BYTE PTR [ebx+edx*8-0x17],ch
  427964:	dec    esp
  427965:	pop    edx
  427966:	jmp    0xf0943646
  42796b:	xchg   esi,esi
  42796d:	test   al,0x3
  42796f:	adc    eax,ebx
  427971:	hlt    
  427972:	sbb    al,0xfb
  427975:	cwde   
  427976:	lods   eax,DWORD PTR ds:[esi]
  427977:	xor    DWORD PTR [edx],eax
  427979:	pusha  
  42797a:	ret    0x7b9b
  42797d:	scas   al,BYTE PTR es:[edi]
  42797e:	inc    DWORD PTR [ebx+0x77]
  427981:	xchg   esi,eax
  427982:	pop    es
  427983:	lods   al,BYTE PTR ds:[esi]
  427984:	pushf  
  427985:	mov    ebx,0xac789f55
  42798a:	push   edi
  42798b:	out    dx,eax
  42798c:	stos   BYTE PTR es:[edi],al
  42798d:	pop    ds
  42798e:	inc    ecx
  42798f:	pushf  
  427990:	add    BYTE PTR [edx],al
  427992:	int    0x8f
  427994:	pop    eax
  427995:	lahf   
  427996:	ret    
  427997:	jge    0x4279e5
  427999:	jg     0x42798e
  42799b:	stc    
  42799c:	add    BYTE PTR [ebx-0x4eb7eaa],dl
  4279a2:	ret    
  4279a3:	arpl   WORD PTR [edi-0x5b],di
  4279a6:	or     BYTE PTR [ebx],bl
  4279a8:	mov    bl,0x5d
  4279aa:	shl    BYTE PTR [edi-0x8],1
  4279ad:	pop    ebp
  4279ae:	mov    BYTE PTR [eax],0x8f
  4279b1:	jge    0x4279de
  4279b3:	(bad)  
  4279b4:	shl    DWORD PTR [esi+0x23],cl
  4279b7:	sbb    al,0xe6
  4279b9:	pop    eax
  4279ba:	inc    edi
  4279bb:	add    al,0x94
  4279bd:	add    BYTE PTR [ebx],dl
  4279bf:	ins    BYTE PTR es:[edi],dx
  4279c0:	shl    BYTE PTR fs:[edx+0x3b407355],0x42
  4279c8:	nop
  4279c9:	add    BYTE PTR [ecx+ecx*4],bh
  4279cc:	add    BYTE PTR [edx+0x77968937],dh
  4279d2:	imul   eax,DWORD PTR [ebp+edx*4+0x66b0e900],0x9ffc004b
  4279dd:	jge    0x427a3c
  4279df:	jno    0x427a59
  4279e1:	mov    bh,0x8d
  4279e3:	jmp    0xd602fe7f
  4279e8:	test   DWORD PTR [edi+0x75],eax
  4279eb:	push   ebp
  4279ec:	sbb    eax,0x6fd4fb3f
  4279f1:	inc    edi
  4279f2:	jne    0x4279e9
  4279f4:	das    
  4279f5:	ss add cl,ch
  4279f8:	xchg   edi,eax
  4279f9:	inc    edi
  4279fa:	jne    0x427a2d
  4279fc:	sbb    eax,0x813be849
  427a01:	inc    esi
  427a02:	sti    
  427a03:	jb     0x4279a7
  427a05:	or     BYTE PTR [ebp-0xf],0xc
  427a09:	add    DWORD PTR [eax+0x530097e8],0x7a1e01
  427a13:	jmp    0x85831e18
  427a18:	(bad)  
  427a19:	nop
  427a1a:	rcl    BYTE PTR [bp+0x382c],0xbe
  427a20:	loope  0x4279b9
  427a22:	mov    ch,0x86
  427a24:	aad    0x14
  427a26:	pop    esp
  427a27:	xor    BYTE PTR [edx],bh
  427a29:	or     eax,0xd49f0b28
  427a2e:	mov    eax,0x511d3651
  427a33:	je     0x427a25
  427a35:	dec    edi
  427a36:	aam    0x5
  427a38:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427a39:	cli    
  427a3a:	inc    esi
  427a3b:	retw   0x4133
  427a3f:	inc    ebp
  427a40:	lods   eax,DWORD PTR ds:[esi]
  427a41:	aas    
  427a42:	in     eax,0xff
  427a44:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427a45:	push   edx
  427a46:	inc    edi
  427a47:	lea    esp,[eax+eiz*2]
  427a4a:	loop   0x427a4b
  427a4c:	cmp    BYTE PTR [edi],0xac
  427a4f:	(bad)  
  427a50:	call   0xc97871
  427a55:	ins    DWORD PTR es:[edi],dx
  427a56:	jg     0x427a59
  427a58:	add    ch,ch
  427a5a:	or     DWORD PTR [ebp-0x30],0xc74b58c
  427a61:	jp     0x427a9d
  427a63:	add    ebp,eax
  427a65:	mov    ecx,edi
  427a67:	(bad)  
  427a68:	jmp    DWORD PTR [esi-0x59]
  427a6b:	test   bh,bh
  427a6d:	icebp  
  427a6e:	pop    ecx
  427a6f:	dec    edx
  427a70:	push   edi
  427a71:	push   ebp
  427a72:	pushf  
  427a73:	idiv   bh
  427a75:	pop    edx
  427a76:	jns    0x427a50
  427a78:	mov    eax,DWORD PTR [eax]
  427a7a:	mov    dl,0x58
  427a7c:	add    BYTE PTR [ebx-0x75f04b86],cl
  427a82:	jle    0x427a5c
  427a84:	xor    eax,0x8077b38b
  427a89:	sub    BYTE PTR [esi+edi*8+0x2388cff],0x51
  427a91:	lea    ebp,[eax]
  427a93:	not    BYTE PTR [eax-0x1]
  427a96:	add    dh,dh
  427a98:	dec    edi
  427a99:	mov    ch,BYTE PTR [esi+0x7d8f6fd5]
  427a9f:	inc    BYTE PTR [ebx-0x9ad1e40]
  427aa5:	jne    0x427b10
  427aa7:	retf   
  427aa8:	mov    ebp,0x4a4cc0ff
  427aad:	call   0x4278f7
  427ab2:	pop    edx
  427ab3:	sub    BYTE PTR [ebx],al
  427ab5:	test   ebp,ebp
  427ab7:	std    
  427ab8:	xchg   esi,eax
  427ab9:	ret    
  427aba:	gs cld 
  427abc:	ss (bad) 
  427abe:	jmp    0x598d:0xfd32bfa9
  427ac5:	pop    ebx
  427ac6:	in     al,0xc2
  427ac8:	pop    es
  427ac9:	add    BYTE PTR [eax-0x37],ah
  427acc:	jmp    0x427a51
  427ace:	xchg   esp,eax
  427acf:	jnp    0x427b1d
  427ad1:	jg     0x427acb
  427ad3:	pop    ebx
  427ad4:	mov    dl,0x51
  427ad6:	imul   eax,DWORD PTR [edx-0x37f0f427],0x7a
  427add:	inc    ebp
  427ade:	add    BYTE PTR [ebp+edi*8+0x43488d03],al
  427ae5:	pop    ds
  427ae6:	call   0xfb915fe8
  427aeb:	or     eax,0x190c23a4
  427af0:	sbb    cl,bl
  427af2:	pop    es
  427af3:	pop    ss
  427af4:	and    BYTE PTR [edi-0x17],cl
  427af7:	fist   WORD PTR [edi-0x1]
  427afa:	dec    DWORD PTR [ecx]
  427afc:	mov    dl,BYTE PTR [edi]
  427afe:	das    
  427aff:	iret   
  427b00:	push   0x77
  427b02:	pop    esp
  427b03:	jo     0x427b38
  427b05:	dec    esi
  427b06:	adc    eax,0xffbf45b0
  427b0b:	mov    dh,BYTE PTR [ecx+0x6bdc07c8]
  427b11:	and    BYTE PTR [eax+0x1],cl
  427b14:	retf   
  427b15:	add    edx,0x3705ce9c
  427b1b:	rol    BYTE PTR [ebx-0x19],1
  427b1e:	outs   dx,BYTE PTR ds:[esi]
  427b1f:	clc    
  427b20:	push   edx
  427b21:	fmul   DWORD PTR [ebx]
  427b23:	pop    ds
  427b24:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427b25:	out    dx,eax
  427b26:	addr16 dec ebp
  427b28:	push   edi
  427b29:	(bad)  
  427b2a:	jmp    FWORD PTR [eax+esi*1+0x69]
  427b2e:	cli    
  427b2f:	push   ebx
  427b30:	fstp   TBYTE PTR [esi]
  427b32:	je     0x427b18
  427b34:	lock in eax,dx
  427b36:	or     ch,BYTE PTR [ecx]
  427b38:	xchg   edi,eax
  427b39:	ja     0x427b7f
  427b3b:	jo     0x427b64
  427b3d:	pop    edx
  427b3e:	sub    al,0x17
  427b40:	cdq    
  427b41:	test   DWORD PTR [esi-0x3cb16e00],0x16007c23
  427b4b:	push   cs
  427b4c:	pop    ds
  427b4d:	aam    0xc4
  427b4f:	(bad)  
  427b50:	sti    
  427b51:	sar    DWORD PTR [esi+0x51],cl
  427b54:	je     0x49f35303
  427b5a:	cld    
  427b5b:	call   DWORD PTR [edx]
  427b5d:	ret    
  427b5e:	fcomp  st(3)
  427b60:	fcos   
  427b62:	call   0x83d0776a
  427b67:	push   ecx
  427b68:	fild   WORD PTR [ebx+0x587cd729]
  427b6e:	adc    DWORD PTR [edx-0x31],edx
  427b71:	dec    eax
  427b72:	mov    edi,0x4c418f3
  427b77:	lock push ebx
  427b79:	mov    dl,0x41
  427b7b:	clc    
  427b7c:	imul   esi,edx,0xffffffa8
  427b7f:	add    eax,DWORD PTR [ebx-0x67b899db]
  427b85:	mov    ebp,0x50895291
  427b8a:	test   ebx,0x5be8d69b
  427b90:	xor    al,0xd8
  427b92:	call   0xc51f869a
  427b97:	test   DWORD PTR [ebx+0x103fe83],0x9bd068ee
  427ba1:	add    bh,BYTE PTR [ebx+ebp*8+0x6e]
  427ba5:	int    0xc4
  427ba7:	repz add BYTE PTR [esi-0x33],bl
  427bab:	or     al,0xf4
  427bad:	jae    0x427b64
  427baf:	adc    eax,0xe05b9404
  427bb4:	jle    0x427b76
  427bb6:	sbb    al,0xf1
  427bb8:	pop    ebx
  427bb9:	pop    esi
  427bba:	inc    esi
  427bbb:	ret    0x1351
  427bbe:	int    0x4
  427bc0:	add    BYTE PTR [edi],ch
  427bc2:	sldt   ecx
  427bc5:	or     DWORD PTR [edx],0xfffffffa
  427bc8:	scas   al,BYTE PTR es:[edi]
  427bc9:	ficomp WORD PTR [edi+0x2b]
  427bcc:	out    0xc5,eax
  427bce:	dec    ebx
  427bcf:	lea    edx,ds:0xfbe7ecbc
  427bd5:	jb     0x427c21
  427bd7:	sti    
  427bd8:	bound  ebx,QWORD PTR [ecx-0x55]
  427bdb:	pop    ecx
  427bdc:	and    bh,BYTE PTR [ecx+0x5d]
  427bdf:	pop    ebp
  427be0:	stos   DWORD PTR es:[edi],eax
  427be1:	xchg   esp,eax
  427be2:	add    BYTE PTR [edx+0x1e],dl
  427be5:	imul   ecx,DWORD PTR [eax-0x73],0xad5fdff6
  427bec:	fs inc ebp
  427bee:	dec    ebx
  427bef:	(bad)  
  427bf0:	(bad)  
  427bf1:	mov    edi,0x6554a55f
  427bf6:	dec    ebx
  427bf7:	lea    esp,[esi-0x23054f61]
  427bfd:	pop    edi
  427bfe:	idiv   BYTE PTR [edi]
  427c00:	jmp    0x6c464735
  427c05:	inc    ebp
  427c06:	int3   
  427c07:	add    dl,BYTE PTR [esi-0x46012bc]
  427c0d:	add    bh,dl
  427c0f:	inc    edi
  427c10:	pop    edx
  427c11:	mov    edi,0xe1b1fbd8
  427c16:	dec    esi
  427c17:	rol    DWORD PTR [edi],cl
  427c19:	mov    al,ds:0xb38cfb6a
  427c1e:	outs   dx,DWORD PTR ds:[esi]
  427c1f:	pop    esi
  427c20:	jmp    FWORD PTR [ebx+0x32]
  427c23:	inc    DWORD PTR [eax+eiz*1+0x292e0343]
  427c2a:	sar    DWORD PTR [ebp-0x4d73c77a],0x86
  427c31:	push   ebp
  427c32:	jl     0x427c2c
  427c34:	mov    bh,bh
  427c36:	xchg   esp,eax
  427c37:	xchg   ebx,eax
  427c38:	jo     0x427c24
  427c3a:	xchg   esp,eax
  427c3b:	xchg   ebx,eax
  427c3c:	inc    eax
  427c3d:	add    BYTE PTR [esp+eax*8],ch
  427c40:	push   eax
  427c41:	or     al,0x42
  427c43:	mov    al,ds:0x2f0f85be
  427c48:	sbb    cl,BYTE PTR [ebx-0x3ecdbb8c]
  427c4e:	jp     0x427ca0
  427c50:	and    cl,al
  427c52:	test   al,0x6
  427c55:	inc    edx
  427c56:	sub    al,0x89
  427c58:	cli    
  427c59:	iret   
  427c5a:	mov    edi,0xd92473b1
  427c5f:	leave  
  427c60:	cs dec eax
  427c63:	repnz or eax,0xc47bfd40
  427c69:	or     al,0x16
  427c6b:	cld    
  427c6c:	jp     0x427c95
  427c6e:	in     eax,dx
  427c6f:	jb     0x427c72
  427c71:	pop    esi
  427c72:	add    BYTE PTR [edi+0x4b],bh
  427c75:	sti    
  427c76:	push   esp
  427c77:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  427c79:	push   eax
  427c7a:	push   ecx
  427c7b:	loop   0x427ce5
  427c7d:	dec    ecx
  427c7e:	add    ebp,DWORD PTR [esi]
  427c80:	stos   BYTE PTR es:[edi],al
  427c81:	addr16 push esi
  427c83:	jmp    0xe98bc4da
  427c88:	imul   DWORD PTR [ecx]
  427c8a:	rcl    BYTE PTR [eax+ebx*4+0x0],0x0
  427c8f:	lods   eax,DWORD PTR ds:[esi]
  427c90:	lds    ebp,FWORD PTR [edi+0x18]
  427c93:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427c94:	cld    
  427c95:	mov    WORD PTR [eax+0x75],?
  427c98:	lds    eax,FWORD PTR [edi]
  427c9a:	sbb    DWORD PTR [eax],0xffffffba
  427c9d:	call   DWORD PTR [edx+0x1a]
  427ca0:	lds    edi,FWORD PTR [eax+0x27c8c]
  427ca6:	lea    eax,ds:0x48ff4aea
  427cac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427cad:	or     DWORD PTR [eax+0x6d],eax
  427cb0:	retf   
  427cb1:	cmp    eax,0x73bcb80c
  427cb6:	adc    dl,BYTE PTR [esi+ebp*1+0x3fe407d2]
  427cbd:	fwait
  427cbe:	cmp    eax,0x457d3f3a
  427cc3:	sub    al,0xd3
  427cc5:	rol    DWORD PTR [edi],0x1d
  427cc8:	adc    eax,0x2d234f50
  427ccd:	dec    edi
  427cce:	push   cs
  427ccf:	aam    0x57
  427cd1:	jle    0x427d50
  427cd3:	or     al,0x58
  427cd5:	jbe    0x427d24
  427cd7:	add    BYTE PTR [esi+eax*1-0x12ffaa7f],bl
  427cde:	clc    
  427cdf:	jle    0x427d52
  427ce1:	jnp    0x427ce7
  427ce3:	push   0xffff4ca4
  427ce8:	jle    0x427d3d
  427cea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427ceb:	out    0xd8,eax
  427ced:	jno    0x427d39
  427cef:	sti    
  427cf0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427cf1:	pop    ss
  427cf2:	push   edi
  427cf3:	aas    
  427cf4:	adc    ch,al
  427cf6:	fdivr  st,st(7)
  427cf8:	retf   
  427cf9:	test   ecx,ebx
  427cfb:	add    ebx,DWORD PTR [ecx+ebp*8+0x26]
  427cff:	call   0xfb8c9f08
  427d04:	sbb    BYTE PTR [eax],bl
  427d06:	fsub   DWORD PTR [edi+ebx*1]
  427d09:	xchg   ebp,eax
  427d0a:	dec    ebx
  427d0b:	xchg   DWORD PTR [ecx+0xf],ecx
  427d0e:	ja     0x427d5d
  427d10:	mov    WORD PTR [esi-0x3ecf184b],es
  427d16:	dec    ecx
  427d17:	sti    
  427d18:	adc    BYTE PTR [edi],dl
  427d1a:	fcom   DWORD PTR [eax]
  427d1c:	pcmpgtb mm6,mm7
  427d1f:	push   edx
  427d20:	out    dx,al
  427d21:	push   ebx
  427d22:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427d23:	mov    ecx,cs
  427d25:	dec    edi
  427d26:	push   edi
  427d27:	mov    ecx,0x864a4d4d
  427d2c:	cmp    al,0x56
  427d2e:	fdiv   st,st(7)
  427d30:	ins    BYTE PTR es:[edi],dx
  427d31:	add    BYTE PTR [ebx+0x6f454e0f],dh
  427d37:	inc    edx
  427d38:	out    dx,eax
  427d39:	test   eax,0x2003d32
  427d3e:	cld    
  427d3f:	call   0x6dee61f8
  427d44:	fbstp  TBYTE PTR [edi-0x18]
  427d47:	adc    dh,BYTE PTR [edi-0x299bb7ee]
  427d4d:	jnp    0x427cfd
  427d4f:	pop    edi
  427d50:	xlat   BYTE PTR ds:[ebx]
  427d51:	ja     0x427d43
  427d53:	mov    eax,ds:0x28f1fff8
  427d58:	add    al,0x13
  427d5a:	mov    ebx,0xf8570aec
  427d5f:	adc    cl,BYTE PTR [edx]
  427d61:	(bad)  
  427d62:	mov    ebx,0x739523cc
  427d67:	repnz pop es
  427d69:	adc    edi,esi
  427d6b:	adc    eax,0xd51c687d
  427d70:	mov    ah,dl
  427d72:	retf   
  427d73:	mov    ah,0xd9
  427d75:	shl    DWORD PTR [ecx+ebx*2-0x570e6408],cl
  427d7c:	add    eax,DWORD PTR [ecx-0x6bfc17fe]
  427d82:	retf   
  427d83:	not    DWORD PTR [ecx]
  427d85:	retf   
  427d86:	inc    esp
  427d87:	mov    ch,0x27
  427d89:	test   BYTE PTR [ebp-0x24],al
  427d8c:	push   ebx
  427d8d:	xchg   edx,eax
  427d8e:	shr    al,0x79
  427d91:	fld    TBYTE PTR [eax-0x560f523f]
  427d97:	mov    edi,0x5e00a441
  427d9c:	enter  0x783,0xa2
  427da0:	jmp    0x427da2
  427da2:	add    eax,0xb7c72afc
  427da7:	and    bh,ah
  427da9:	pop    edx
  427daa:	sub    BYTE PTR [ebx+0x546bf5ff],ch
  427db0:	push   cs
  427db1:	test   eax,0xd2c01297
  427db6:	add    BYTE PTR [edi+0x32],0xde
  427dba:	inc    ebx
  427dbb:	fs push cs
  427dbd:	sub    DWORD PTR [eax+0x5fe921c3],ebx
  427dc3:	test   BYTE PTR [eax],al
  427dc5:	jmp    0xfd59d661
  427dca:	fld    DWORD PTR [edi-0x79]
  427dcd:	mov    ecx,0x75744f1b
  427dd2:	popf   
  427dd3:	in     eax,0x2f
  427dd5:	call   edi
  427dd7:	inc    ebx
  427dd8:	imul   esp,ecx,0xc923cc58
  427dde:	dec    ecx
  427ddf:	inc    edi
  427de0:	iret   
  427de1:	arpl   sp,cx
  427de3:	pop    ds
  427de4:	xor    BYTE PTR [ecx],dl
  427de6:	sbb    BYTE PTR [ecx],al
  427de8:	add    cl,ch
  427dea:	outs   dx,BYTE PTR ds:[esi]
  427deb:	(bad)  
  427dec:	cmp    esp,DWORD PTR [edx+edx*8+0x3]
  427df0:	jmpw   0xfa14
  427df4:	inc    edx
  427df5:	and    DWORD PTR [ecx-0x13],esp
  427df8:	xor    esi,edi
  427dfa:	xlat   BYTE PTR ds:[ebx]
  427dfb:	inc    ebx
  427dfc:	xchg   BYTE PTR [ebp+0x257f087b],ah
  427e02:	test   al,0x7c
  427e04:	leave  
  427e05:	mov    ebp,0x7ee1e900
  427e0a:	mov    esp,0xa67543af
  427e0f:	mov    al,ds:0xb1e04591
  427e14:	jp     0x427e6b
  427e16:	icebp  
  427e17:	jns    0x427e59
  427e19:	fdivrp st(1),st
  427e1b:	jno    0x427e17
  427e1d:	mov    ebp,0xb5828e6
  427e22:	push   esi
  427e23:	xchg   edi,eax
  427e24:	pop    eax
  427e25:	add    BYTE PTR [eax],0x90
  427e28:	mov    dl,0xf6
  427e2a:	mov    BYTE PTR [ecx],dh
  427e2c:	sbb    esp,DWORD PTR [ebx+ecx*4]
  427e2f:	lods   al,BYTE PTR ds:[esi]
  427e30:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427e31:	cdq    
  427e32:	aad    0x6b
  427e34:	mov    ah,0x4f
  427e36:	push   ecx
  427e37:	xchg   edx,eax
  427e38:	mov    ch,0xca
  427e3a:	mov    db7,ebx
  427e3d:	pop    ds
  427e3e:	xor    BYTE PTR [esi-0x1eb7f445],ch
  427e44:	dec    edx
  427e45:	inc    ebx
  427e46:	je     0x427e96
  427e48:	daa    
  427e49:	jnp    0x427e4b
  427e4b:	cmp    eax,0x820061ff
  427e50:	mov    ch,0x14
  427e52:	xor    al,0x43
  427e54:	aas    
  427e55:	sti    
  427e56:	add    BYTE PTR [ecx+0x43],0xe2
  427e5a:	add    al,0x93
  427e5c:	(bad)  
  427e5d:	gs inc edx
  427e5f:	jbe    0x427e94
  427e61:	pop    ds
  427e62:	sub    BYTE PTR [esi-0x44],dh
  427e65:	out    0x6d,eax
  427e67:	xor    bh,bh
  427e69:	dec    DWORD PTR [edx+0x14188900]
  427e6f:	push   ebx
  427e70:	and    DWORD PTR [esi+edx*1],0x5f
  427e74:	scas   eax,DWORD PTR es:[edi]
  427e75:	cld    
  427e76:	add    BYTE PTR [di-0x4ba],bh
  427e7b:	out    0x81,eax
  427e7d:	jmp    0x773:0xbf31ffff
  427e84:	push   ds
  427e85:	(bad)  
  427e86:	call   0xf6f6d88b
  427e8b:	push   esi
  427e8c:	inc    ebp
  427e8d:	ss xor bh,dh
  427e90:	push   0xffffff80
  427e92:	sbb    eax,DWORD PTR [eax]
  427e94:	push   esp
  427e95:	scas   eax,DWORD PTR es:[edi]
  427e96:	cmc    
  427e97:	(bad)  
  427e98:	mov    edx,0x4cec828a
  427e9d:	mov    WORD PTR [edx-0x3e236b10],es
  427ea3:	sti    
  427ea4:	in     al,0x89
  427ea6:	fscale 
  427ea8:	pop    edx
  427ea9:	xchg   ebp,eax
  427eaa:	dec    ebx
  427eab:	add    al,0x95
  427ead:	push   edi
  427eae:	(bad)  
  427eaf:	cli    
  427eb0:	mov    DWORD PTR [ebx],eax
  427eb2:	lock aas 
  427eb4:	xchg   esp,eax
  427eb5:	fstp   TBYTE PTR [esi]
  427eb7:	je     0x427e3f
  427eb9:	into   
  427eba:	sar    bl,0x11
  427ebd:	cwde   
  427ebe:	shl    BYTE PTR [esi],1
  427ec0:	xchg   DWORD PTR [eax+0x198888de],esp
  427ec6:	jnp    0x427e8a
  427ec8:	mov    edx,0x7273f600
  427ecd:	push   edx
  427ece:	mov    cs,WORD PTR [eax]
  427ed0:	add    BYTE PTR [edi],dl
  427ed2:	xchg   ecx,eax
  427ed3:	pop    ss
  427ed4:	je     0x427e67
  427ed6:	(bad)  
  427ed7:	dec    esp
  427ed8:	pop    esp
  427ed9:	mov    DWORD PTR [ecx-0x23],edx
  427edc:	jnp    0x427f4b
  427ede:	stc    
  427edf:	jl     0x427ee9
  427ee1:	pop    ss
  427ee2:	cwde   
  427ee3:	add    ah,BYTE PTR [edx+0x17]
  427ee6:	xor    bh,bh
  427ee8:	je     0x427ee2
  427eea:	outs   dx,BYTE PTR ds:[esi]
  427eeb:	cld    
  427eec:	gs ins BYTE PTR es:[edi],dx
  427eee:	pop    ds
  427eef:	pop    esp
  427ef0:	dec    esi
  427ef1:	push   es
  427ef2:	retf   
  427ef3:	inc    esi
  427ef4:	pop    edx
  427ef5:	int    0x96
  427ef7:	mov    cl,0x86
  427ef9:	rcl    dh,0x5f
  427efc:	clc    
  427efd:	adc    eax,0xc3fecfb4
  427f02:	push   edi
  427f03:	mov    dl,0x51
  427f05:	arpl   si,sp
  427f07:	sub    ch,BYTE PTR [eax-0x28]
  427f0a:	into   
  427f0b:	ret    
  427f0c:	inc    DWORD PTR [esi-0x31]
  427f0f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427f10:	and    ecx,DWORD PTR [ebx-0x7b6c0ef6]
  427f16:	xchg   edi,eax
  427f17:	dec    DWORD PTR [eax-0xc32ff28]
  427f1d:	ret    0xea3d
  427f20:	jg     0x427ee5
  427f22:	(bad)  
  427f23:	call   0x5d4d922b
  427f28:	hlt    
  427f29:	mov    bl,0x0
  427f2b:	xchg   esi,eax
  427f2c:	mov    bl,0xba
  427f2e:	inc    ecx
  427f2f:	cli    
  427f30:	xor    DWORD PTR [ebx+0xf37d3d],ebp
  427f36:	retf   
  427f37:	inc    ecx
  427f38:	jne    0x427f59
  427f3a:	test   al,0xb9
  427f3c:	loope  0x427f6f
  427f3e:	cmp    DWORD PTR ds:0x458b5054,0x5c
  427f45:	(bad)  
  427f46:	push   ebp
  427f47:	mov    esp,0x5794fb04
  427f4c:	repz add al,0x94
  427f4f:	add    BYTE PTR [edi-0x2f],cl
  427f52:	adc    ah,cl
  427f54:	or     al,0x24
  427f56:	mov    esp,0xac200d77
  427f5b:	ja     0x427fa2
  427f5d:	and    BYTE PTR [eax-0x8b7aa8],ah
  427f63:	inc    eax
  427f64:	(bad)  
  427f65:	dec    DWORD PTR [ebx+0x75]
  427f68:	mov    ds:0xd99ca97e,eax
  427f6d:	ret    
  427f6e:	jmp    0x427f20
  427f70:	imul   edi,DWORD PTR [edi+0x4b1920b7],0x60
  427f77:	sbb    al,0xc9
  427f79:	dec    edx
  427f7a:	out    0x7a,al
  427f7c:	sub    edx,edi
  427f7e:	pop    ss
  427f7f:	and    eax,0x759403e9
  427f84:	lods   eax,DWORD PTR ds:[esi]
  427f85:	pop    ds
  427f86:	mov    al,ds:0x97d02605
  427f8b:	or     eax,0x58915e29
  427f90:	mov    ds:0x409e0d,al
  427f95:	pusha  
  427f96:	fistp  DWORD PTR [eax+ebx*1]
  427f99:	repnz add dl,bl
  427f9c:	or     eax,DWORD PTR [edi+eiz*2-0x6cffff69]
  427fa3:	or     edi,0xffffff8c
  427fa6:	lods   eax,DWORD PTR ds:[esi]
  427fa7:	fwait
  427fa8:	in     al,0x4f
  427faa:	pop    esp
  427fab:	xor    esp,esp
  427fad:	pop    ds
  427fae:	cdq    
  427faf:	fidiv  WORD PTR [ebx+eiz*1-0x7aad3137]
  427fb6:	sub    DWORD PTR [esi-0x7c],ebx
  427fb9:	xchg   esi,eax
  427fba:	jmp    0xadaa8056
  427fbf:	leave  
  427fc0:	sar    bh,0x69
  427fc3:	cmp    BYTE PTR [ebx],0x8d
  427fc6:	pop    ebp
  427fc7:	je     0x427f85
  427fc9:	out    0x6,eax
  427fcb:	inc    esi
  427fcc:	cmp    bh,bl
  427fce:	jb     0x427fa6
  427fd0:	sar    dl,1
  427fd2:	aam    0x1f
  427fd4:	adc    eax,0xc4a2e940
  427fd9:	and    eax,DWORD PTR [ecx]
  427fdb:	dec    eax
  427fdc:	cmp    edx,DWORD PTR ds:0x26d
  427fe2:	adc    esp,esi
  427fe4:	mov    WORD PTR [ebp+ecx*8-0x6d],?
  427fe8:	fsub   st,st(7)
  427fea:	sub    eax,0x74fb3b67
  427fef:	adc    al,0xe5
  427ff1:	ja     0x427fdb
  427ff3:	xchg   edi,eax
  427ff4:	add    al,ch
  427ff6:	dec    esp
  427ff7:	dec    esi
  427ff8:	cmp    edi,ebx
  427ffa:	fisub  WORD PTR [eax*8+0x1123]
  428001:	or     esi,DWORD PTR [ebx+0x4feaa3a5]
  428007:	out    0x24,al
  428009:	lds    esp,FWORD PTR [ebx]
  42800b:	pop    ss
  42800c:	call   0x9943049d
  428011:	add    BYTE PTR [eax],0x0
  428014:	lods   eax,DWORD PTR ds:[esi]
  428015:	jae    0x427fa3
  428017:	test   BYTE PTR [ecx+0x7d0000bc],cl
  42801d:	jae    0x427fa1
  42801f:	(bad)  
  428020:	dec    ebp
  428021:	pop    ebp
  428022:	cmp    DWORD PTR [ebx-0x10],ebx
  428025:	mov    BYTE PTR [eax+edx*1],ah
  428028:	ins    BYTE PTR es:[edi],dx
  428029:	add    eax,DWORD PTR [eax]
  42802b:	call   0x3bc812
  428030:	inc    al
  428032:	pop    ss
  428033:	test   DWORD PTR [ebp-0x2600e4b6],ebp
  428039:	pop    ds
  42803a:	adc    al,0x8b
  42803c:	jp     0x428007
  42803e:	jae    0x428064
  428040:	xchg   ecx,eax
  428041:	je     0x4280a6
  428043:	(bad)  
  428044:	mov    BYTE PTR [ebx-0x5],0x69
  428048:	das    
  428049:	fucomi st,st(0)
  42804b:	cdq    
  42804c:	(bad)  
  42804d:	enter  0xc083,0x69
  428051:	aas    
  428052:	rol    DWORD PTR [ecx+ebx*4+0x39],0x0
  428057:	xor    eax,DWORD PTR [esi]
  428059:	enter  0x2473,0xe5
  42805d:	fisubr DWORD PTR [edi+0x4ac83339]
  428063:	inc    DWORD PTR [eax]
  428065:	test   eax,0xf8ff13e0
  42806a:	mov    dl,0xf
  42806c:	inc    eax
  42806d:	std    
  42806e:	mov    esp,0x67e22443
  428073:	pop    ecx
  428074:	pop    ebx
  428075:	data16 ficomp WORD PTR [ebx+eax*8+0x78]
  42807a:	mov    ebp,0xcb1983eb
  42807f:	sub    ah,0x31
  428082:	add    eax,0x70fe0000
  428087:	xor    BYTE PTR [ebp-0x6c],0x21
  42808b:	mov    al,0xfa
  42808d:	sub    DWORD PTR [ecx],edi
  42808f:	dec    eax
  428090:	jne    0x42802a
  428092:	lahf   
  428093:	dec    eax
  428094:	adc    eax,0xffbf5900
  428099:	or     al,0x6d
  42809b:	sbb    edx,DWORD PTR [eax]
  42809d:	sbb    eax,ebp
  42809f:	test   DWORD PTR [ebx-0xd75b],0xffef658b
  4280a9:	jnp    0x4280d3
  4280ab:	out    dx,eax
  4280ac:	or     bl,BYTE PTR [ecx]
  4280ae:	and    al,0xfe
  4280b0:	call   DWORD PTR [esp+ebp*4+0x3c180b50]
  4280b7:	(bad)  
  4280b8:	call   DWORD PTR [edx+ebp*4-0x5a5cfff8]
  4280bf:	push   ebx
  4280c0:	add    BYTE PTR [edi+eiz*1+0x27987a7e],dl
  4280c7:	repnz add DWORD PTR [eax],0x2d
  4280cb:	sub    bh,bh
  4280cd:	(bad)  
  4280ce:	cmp    al,0x52
  4280d0:	mov    ebx,0x43ac2bf9
  4280d5:	or     ebx,DWORD PTR [eax]
  4280d7:	pushf  
  4280d8:	add    al,0x0
  4280da:	xchg   esp,eax
  4280db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4280dc:	mov    edi,0x4317b423
  4280e1:	adc    eax,0xffbf3a10
  4280e6:	ins    DWORD PTR es:[edi],dx
  4280e7:	adc    eax,0x6bb0b479
  4280ec:	add    al,0x0
  4280ee:	xchg   esp,eax
  4280ef:	out    dx,eax
  4280f0:	pop    ebx
  4280f1:	push   esi
  4280f2:	add    al,0x87
  4280f4:	inc    ebx
  4280f5:	imul   bp,WORD PTR [edi+ecx*8+0x5c0fa023],0x4a
  4280fe:	and    al,0xaf
  428100:	inc    edx
  428101:	lea    edx,[eax]
  428103:	add    DWORD PTR ds:0xe9009504,ecx
  428109:	pop    ebx
  42810a:	daa    
  42810b:	cmp    al,0x52
  42810d:	inc    edi
  42810e:	lahf   
  42810f:	jne    0x4280b6
  428111:	pop    ds
  428112:	je     0x4280e4
  428114:	icebp  
  428115:	mov    ds,WORD PTR [eax-0x1c]
  428118:	add    dh,BYTE PTR [esi+ecx*4-0x41e0528b]
  42811f:	rcr    BYTE PTR [ebp+0x3e],1
  428122:	in     al,0x8b
  428124:	ins    DWORD PTR es:[edi],dx
  428125:	and    BYTE PTR [edi+edi*8-0x741bfc18],ah
  42812c:	ins    DWORD PTR es:[edi],dx
  42812d:	and    BYTE PTR [eax],al
  42812f:	dec    eax
  428130:	add    cl,ch
  428132:	add    eax,esp
  428134:	stos   BYTE PTR es:[edi],al
  428135:	ret    0x10aa
  428138:	mov    esp,0x7473abc4
  42813d:	jne    0x428184
  42813f:	dec    edi
  428140:	and    DWORD PTR ds:0x634010ec,0xf0c31ad2
  42814a:	inc    esi
  42814b:	test   BYTE PTR ds:0x451b0059,bh
  428151:	cmp    DWORD PTR [ebx],edx
  428153:	das    
  428154:	aad    0x4e
  428156:	add    ch,BYTE PTR [eax+eiz*1]
  428159:	popa   
  42815a:	inc    esi
  42815b:	pop    ds
  42815c:	test   BYTE PTR [ecx+0x34896ccf],ch
  428162:	clc    
  428163:	ret    0x1d35
  428166:	mov    dl,0x75
  428168:	neg    edx
  42816a:	iret   
  42816b:	dec    eax
  42816c:	mov    ebp,DWORD PTR ds:0x89d05420
  428172:	lock imul edx,DWORD PTR [edx],0x29
  428176:	add    al,0x7a
  428178:	or     BYTE PTR [ecx],dl
  42817a:	cmp    BYTE PTR [ebx],dl
  42817c:	sar    bh,0xe8
  42817f:	dec    esp
  428180:	les    eax,FWORD PTR [ebx+0x21]
  428183:	add    BYTE PTR ds:0x395a21c7,ah
  428189:	das    
  42818a:	xor    cl,bl
  42818c:	xchg   DWORD PTR [eax-0x1f],ecx
  42818f:	add    DWORD PTR [esp+esi*2-0x4247fffb],ecx
  428196:	mov    DWORD PTR [esi+0x3f],0x523f7d99
  42819d:	test   al,al
  42819f:	mov    ebp,0x574377d
  4281a4:	jl     0x428133
  4281a6:	inc    esp
  4281a7:	int    0x43
  4281a9:	aaa    
  4281aa:	je     0x428171
  4281ac:	outs   dx,DWORD PTR ds:[esi]
  4281ad:	int3   
  4281ae:	push   edx
  4281af:	adc    DWORD PTR [ebp-0x2d8e77d8],0x37
  4281b6:	call   0xfb7cce33
  4281bb:	jb     0x4281d8
  4281bd:	loopne 0x4281ce
  4281bf:	xchg   esi,eax
  4281c0:	stc    
  4281c1:	rol    BYTE PTR [esi+0xc7dfc04],cl
  4281c7:	jmp    0xe9abbe29
  4281cc:	js     0x4281cc
  4281ce:	xlat   BYTE PTR ds:[ebx]
  4281cf:	bound  ebx,QWORD PTR [eax+0x3c]
  4281d2:	cli    
  4281d3:	hlt    
  4281d4:	scas   eax,DWORD PTR es:[edi]
  4281d5:	push   cs
  4281d6:	inc    eax
  4281d7:	jmp    0x7246407a
  4281dc:	pop    edx
  4281dd:	jnp    0x428231
  4281df:	bound  esp,QWORD PTR [edi+0x28]
  4281e2:	psubsw mm2,QWORD PTR [edi-0x4bd20e00]
  4281e9:	or     BYTE PTR [ecx],al
  4281eb:	adc    eax,0xcfe7d1fa
  4281f0:	lahf   
  4281f1:	ss sti 
  4281f3:	bound  ebp,QWORD PTR [edx+0xbdd6]
  4281f9:	icebp  
  4281fa:	dec    DWORD PTR [ebp-0x75]
  4281fd:	pop    esp
  4281fe:	mov    ecx,0x3b02043d
  428203:	ror    DWORD PTR [ebx-0x3f7afb83],cl
  428209:	loope  0x428245
  42820b:	jp     0x428205
  42820d:	lods   al,BYTE PTR ds:[esi]
  42820e:	dec    edx
  42820f:	add    eax,0xdafb0ff
  428214:	inc    eax
  428215:	mov    ebp,0x5a044680
  42821a:	bound  edi,QWORD PTR [edx-0x7bc41275]
  428220:	rcl    BYTE PTR [ecx+0x34],0x7a
  428224:	clc    
  428225:	jl     0x428272
  428227:	add    eax,0xfe733d
  42822c:	and    BYTE PTR [ecx],0x0
  42822f:	sub    eax,eax
  428231:	mov    esi,0xbe40c011
  428236:	imul   eax,DWORD PTR [edx+0x657ffcec],0xfffffffc
  42823d:	ins    DWORD PTR es:[edi],dx
  42823e:	mov    dl,0x44
  428240:	cld    
  428241:	sub    eax,0x150c74c4
  428246:	inc    BYTE PTR [ebx+0x0]
  428249:	sub    eax,0xe0fefb59
  42824e:	cmp    al,0xf6
  428250:	adc    eax,0x3b2db1
  428255:	mov    al,0xbf
  428257:	ja     0x428260
  428259:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42825a:	jp     0x428253
  42825c:	test   DWORD PTR [eax],eax
  42825e:	in     eax,dx
  42825f:	dec    ecx
  428260:	std    
  428261:	xor    bh,BYTE PTR ds:0xfd08b9f6
  428267:	ins    BYTE PTR es:[edi],dx
  428268:	xor    cl,0x25
  42826b:	xor    bl,bh
  42826d:	(bad)  
  42826e:	in     eax,dx
  42826f:	int3   
  428270:	inc    ebx
  428271:	and    al,0x94
  428273:	and    esi,edi
  428275:	jae    0x428209
  428277:	repz pop ebx
  428279:	mov    al,ds:0x874483ab
  42827e:	rcr    BYTE PTR [edx],cl
  428280:	ds add al,0x94
  428283:	sahf   
  428284:	mov    esp,0x5b22d307
  428289:	xchg   DWORD PTR [ecx+ebp*1+0x7a],edx
  42828d:	rol    BYTE PTR [eax+0x2f],0x78
  428291:	or     BYTE PTR [edx+edx*8-0x53],al
  428295:	pop    es
  428296:	pop    ss
  428297:	inc    ebx
  428298:	idiv   edi
  42829a:	mov    ds:0x81faf37a,al
  42829f:	imul   esi,eax,0x349e943f
  4282a5:	jmp    0xfb866d91
  4282aa:	jmp    0xe293d55d
  4282af:	push   esi
  4282b0:	dec    ebp
  4282b1:	push   edx
  4282b2:	retf   0xd979
  4282b5:	inc    cl
  4282b7:	jno    0x428266
  4282b9:	arpl   WORD PTR gs:[edx+0x52081544],bx
  4282c0:	mov    edi,0xe98e00ff
  4282c5:	retf   0x8906
  4282c8:	push   eax
  4282c9:	inc    BYTE PTR [eax]
  4282cb:	adc    al,0xdc
  4282cd:	pop    es
  4282ce:	cs push esp
  4282d0:	dec    edi
  4282d1:	clc    
  4282d2:	push   edx
  4282d3:	mov    esp,0x94401747
  4282d8:	mov    edi,0x27d41873
  4282dd:	daa    
  4282de:	push   ebx
  4282df:	sbb    edi,DWORD PTR [ebx+0x3f]
  4282e2:	xchg   DWORD PTR [edi+ebp*1],ecx
  4282e5:	inc    ecx
  4282e6:	jne    0x428278
  4282e8:	xor    eax,0x9de73f
  4282ed:	ss inc ebx
  4282ef:	or     DWORD PTR [edx+ebx*4],0x290db019
  4282f6:	add    al,0x13
  4282f8:	pop    ecx
  4282f9:	pop    esi
  4282fa:	or     ebp,DWORD PTR [ebx+0x4710fc5a]
  428300:	cmp    DWORD PTR [ecx],ebx
  428302:	or     al,0x82
  428304:	inc    eax
  428305:	push   cs
  428306:	jecxz  0x428375
  428308:	inc    edi
  428309:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42830a:	or     al,0x94
  42830c:	mov    esi,DWORD PTR [edi+edi*1-0x264d2d9b]
  428313:	inc    ebp
  428314:	sar    BYTE PTR [edx-0x46c6b92a],cl
  42831a:	prefetch (bad)
  42831b:	or     eax,0x978ef4c4
  428320:	sar    DWORD PTR [ecx],1
  428322:	aam    0x9b
  428324:	int    0x31
  428326:	sbb    DWORD PTR [eax],eax
  428328:	aam    0xd
  42832a:	test   eax,0xf4b3bd03
  42832f:	mov    eax,0x3f93f74a
  428334:	call   0xf21c3e83
  428339:	std    
  42833a:	jle    0x428342
  42833c:	(bad)  
  42833d:	ror    BYTE PTR [esi-0x34ca0f3],cl
  428343:	inc    edx
  428344:	test   eax,0x4bc3db84
  428349:	test   BYTE PTR [ecx],ch
  42834b:	(bad)  
  42834c:	fnstcw WORD PTR [ebx*2+0x3908130c]
  428353:	inc    ebx
  428354:	lds    ecx,FWORD PTR [eax]
  428356:	mov    esi,0xe0cb136f
  42835b:	mov    ebp,ss
  42835d:	or     BYTE PTR [ecx+0x4],bh
  428360:	xor    esp,DWORD PTR [esp+edx*1-0x71]
  428364:	add    BYTE PTR [edi+0x0],bh
  428367:	lds    ebp,FWORD PTR [ebx-0x1516fffc]
  42836d:	into   
  42836e:	sub    eax,0x1535dec2
  428373:	loope  0x4282fe
  428375:	sar    bh,0x69
  428378:	scas   eax,DWORD PTR es:[edi]
  428379:	xor    eax,0x10700d74
  42837e:	je     0x428370
  428380:	or     al,BYTE PTR [ebp-0x18]
  428383:	mov    ebp,ecx
  428385:	cmp    bl,bh
  428387:	sbb    BYTE PTR [ebp+0xf4e7cd],0x39
  42838e:	ss sti 
  428390:	ins    DWORD PTR es:[edi],dx
  428391:	push   edi
  428392:	mov    bl,0x64
  428394:	rcr    DWORD PTR [ebx+0x1ae8ffff],1
  42839a:	dec    ebp
  42839b:	lea    ebx,[ebx+esi*2+0x3b]
  42839f:	sti    
  4283a0:	inc    esi
  4283a1:	outs   dx,DWORD PTR ds:[esi]
  4283a2:	adc    BYTE PTR [edx+0x3f],ch
  4283a5:	(bad)  
  4283a6:	test   DWORD PTR [ebp-0x4c42bbb],eax
  4283ac:	cdq    
  4283ad:	(bad)  
  4283ae:	or     eax,0x3857fa90
  4283b3:	mov    WORD PTR [ebx+ebp*4-0x68163f88],ss
  4283ba:	add    al,ch
  4283bc:	ins    DWORD PTR es:[edi],dx
  4283bd:	add    al,0x3c
  4283bf:	sti    
  4283c0:	je     0x4283ce
  4283c2:	sbb    eax,0xd0d5fef7
  4283c7:	gs jmp 0x5c92c6e7
  4283cd:	or     al,0x25
  4283cf:	std    
  4283d0:	out    0xd5,al
  4283d2:	sar    dl,1
  4283d4:	hlt    
  4283d5:	repz adc BYTE PTR [eax-0x17],al
  4283d9:	adc    al,BYTE PTR [ecx+0x74]
  4283dc:	in     eax,dx
  4283dd:	icebp  
  4283de:	add    BYTE PTR [ebp-0xd175800],cl
  4283e4:	call   DWORD PTR [edx+0x4d]
  4283e7:	dec    esi
  4283e8:	(bad)  
  4283e9:	call   0xed829589
  4283ee:	xchg   BYTE PTR [ebp-0x3dc9ff1c],al
  4283f4:	not    BYTE PTR [eax+0x5]
  4283f7:	adc    DWORD PTR [edx+0x74c202fe],ebx
  4283fd:	or     al,0x12
  4283ff:	jo     0x428404
  428401:	push   edi
  428402:	add    eax,0xbd002b7d
  428407:	jg     0x4283c9
  428409:	jne    0x4283ec
  42840b:	cmp    eax,DWORD PTR [eax+edx*1-0x38]
  42840f:	(bad)  
  428410:	jg     0x42840d
  428412:	(bad)  
  428413:	outs   dx,DWORD PTR ds:[esi]
  428414:	adc    DWORD PTR [eax-0x53],ebp
  428417:	sub    bl,bh
  428419:	inc    DWORD PTR [edx+0xf]
  42841c:	enter  0xed12,0x3
  428420:	test   bl,0x44
  428423:	push   eax
  428424:	idiv   bh
  428426:	shr    BYTE PTR [eax+eax*1-0x44d28015],cl
  42842d:	pop    esi
  42842e:	es retf 0xcb9
  428432:	ins    DWORD PTR es:[edi],dx
  428433:	dec    esi
  428434:	sub    ah,0xfc
  428437:	lock pop ss
  428439:	add    DWORD PTR [ebp+0x3],edi
  42843c:	dec    ebx
  42843d:	push   esi
  42843e:	sub    al,al
  428440:	xor    al,0x7c
  428442:	sar    DWORD PTR ds:0xf3c88cfb,0xe7
  428449:	lahf   
  42844a:	push   cs
  42844b:	add    eax,DWORD PTR [eax]
  42844d:	test   BYTE PTR [ebp+0x11],ch
  428450:	test   BYTE PTR [esi-0x7cfffcd3],dl
  428456:	add    al,dl
  428458:	add    al,0x0
  42845a:	(bad)  
  42845b:	xchg   esp,eax
  42845c:	in     al,0x40
  42845e:	add    BYTE PTR [ecx-0x7b8abfd9],ch
  428464:	mov    dl,0xb9
  428466:	or     edx,DWORD PTR [ebx]
  428468:	in     al,dx
  428469:	aaa    
  42846a:	sti    
  42846b:	cmp    DWORD PTR [ecx+0x27],0x406602f2
  428472:	mov    BYTE PTR [ecx+0x5e],dl
  428475:	mov    al,BYTE PTR [ebp-0x1c]
  428478:	nop
  428479:	or     dh,BYTE PTR [esp+edx*4]
  42847c:	sub    DWORD PTR [edi+eiz*2],ebp
  42847f:	(bad)  
  428481:	cmp    BYTE PTR [ebx-0x25],dl
  428484:	xor    ebp,DWORD PTR [edi]
  428486:	call   0xfb83f428
  42848b:	pop    ds
  42848c:	mov    ecx,0x80c44589
  428491:	xor    ch,BYTE PTR [edi]
  428493:	xchg   esp,eax
  428494:	sub    DWORD PTR [edx-0x5887d70e],eax
  42849a:	xchg   DWORD PTR [ecx-0x739800d7],edx
  4284a0:	dec    eax
  4284a1:	mov    edi,0x26a408ff
  4284a6:	cli    
  4284a7:	xchg   ebx,eax
  4284a8:	mul    DWORD PTR [esi]
  4284aa:	inc    edx
  4284ab:	sub    bh,ch
  4284ad:	aas    
  4284ae:	push   eax
  4284af:	movhps QWORD PTR [edx+eax*8-0x5649494],xmm1
  4284b7:	jae    0x428456
  4284b9:	ds je  0x4284bc
  4284bc:	mov    esp,0x62e8899c
  4284c1:	pop    es
  4284c2:	inc    eax
  4284c3:	push   ecx
  4284c4:	pop    ebx
  4284c5:	mov    ch,0x6
  4284c7:	mov    bh,0x42
  4284c9:	sub    edi,edi
  4284cb:	(bad)  
  4284cc:	cmp    al,0xc9
  4284ce:	fwait
  4284cf:	cli    
  4284d0:	inc    ebx
  4284d1:	pushf  
  4284d2:	ds je  0x428479
  4284d5:	add    dl,ah
  4284d7:	mov    ecx,0xc16dcda3
  4284dc:	lahf   
  4284dd:	into   
  4284de:	rol    BYTE PTR [edi-0x7335c9e2],0xd1
  4284e5:	xor    eax,0xebd02c1b
  4284ea:	mov    edx,0xb1bc123f
  4284ef:	fistp  WORD PTR [ebp-0x27]
  4284f2:	lahf   
  4284f3:	inc    edx
  4284f4:	mov    BYTE PTR [eax],al
  4284f6:	cmp    al,0x8b
  4284f8:	add    BYTE PTR [eax+0x35e9e88d],al
  4284fe:	jmp    0x89ae95d8
  428503:	inc    ecx
  428504:	fbstp  TBYTE PTR ds:0x354a2791
  42850a:	jp     0x42849d
  42850c:	adc    DWORD PTR ds:0xd0bf3f74,ebx
  428512:	(bad)  
  428513:	test   al,0xbe
  428515:	in     eax,dx
  428516:	push   eax
  428517:	sbb    edi,DWORD PTR [edi]
  428519:	add    cl,ch
  42851b:	xchg   esp,edx
  42851d:	ja     0x428562
  42851f:	add    eax,0x5e009400
  428524:	inc    esi
  428525:	and    DWORD PTR [ecx],ecx
  428527:	sub    eax,DWORD PTR [esp+edx*4]
  42852a:	shr    BYTE PTR [edi+0x28f28cb8],0x2b
  428531:	fdivr  DWORD PTR [esi]
  428533:	jmp    0x9c0a593b
  428538:	cmp    al,0x7c
  42853a:	inc    edi
  42853b:	cmp    BYTE PTR ds:0x2bfcaa6f,0x22
  428542:	popf   
  428543:	or     bh,BYTE PTR [edi]
  428545:	les    ebp,FWORD PTR [edx+0x28873e8a]
  42854b:	xchg   ecx,eax
  42854c:	lods   eax,DWORD PTR ds:[esi]
  42854d:	dec    ebx
  42854e:	xor    eax,0xacd86d00
  428553:	(bad)  
  428554:	pop    esp
  428555:	dec    ebp
  428556:	push   ecx
  428557:	push   eax
  428558:	rcr    eax,1
  42855a:	pop    ecx
  42855b:	cli    
  42855c:	fdivrp st(1),st
  42855e:	mov    ch,0x7c
  428560:	mov    ebp,0x5c10ac97
  428565:	dec    esp
  428566:	push   ecx
  428567:	push   eax
  428568:	push   ebx
  428569:	cmp    edi,DWORD PTR [edx]
  42856b:	xor    edx,ecx
  42856d:	push   edx
  42856e:	stos   BYTE PTR es:[edi],al
  42856f:	(bad)  
  428570:	call   0x73b6c590
  428575:	xchg   edi,edi
  428577:	pop    ecx
  428578:	mov    al,0x56
  42857a:	retf   
  42857b:	xchg   BYTE PTR [ebp-0x1617dbf0],cl
  428581:	xchg   edi,eax
  428582:	add    BYTE PTR [edx-0x72],dl
  428585:	add    BYTE PTR [esp+eax*1+0xf],bh
  428589:	sub    DWORD PTR [eax-0x23930f83],ebx
  42858f:	xor    BYTE PTR [eax-0x52],dl
  428592:	int3   
  428593:	xor    BYTE PTR [eax],cl
  428595:	jmp    0xfd3d8631
  42859a:	fwait
  42859b:	or     eax,DWORD PTR [eax-0x17]
  42859e:	sbb    al,0x40
  4285a0:	je     0x42858e
  4285a2:	push   cs
  4285a3:	inc    edx
  4285a4:	daa    
  4285a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4285a6:	pop    edi
  4285a7:	xchg   DWORD PTR [ebp+0x41],eax
  4285aa:	and    BYTE PTR [esi+0x445c6ce4],bh
  4285b0:	push   eax
  4285b1:	das    
  4285b2:	dec    esp
  4285b3:	push   esp
  4285b4:	add    DWORD PTR [eax+0x3c],esp
  4285b7:	and    ebx,edi
  4285b9:	cld    
  4285ba:	pop    ds
  4285bb:	add    eax,DWORD PTR [eax-0x17]
  4285be:	add    al,0xbe
  4285c0:	iret   
  4285c1:	mov    ecx,0xf5068af
  4285c6:	call   0x8590:0xa4004589
  4285cd:	sbb    al,0x4a
  4285cf:	div    dh
  4285d1:	push   eax
  4285d2:	dec    edx
  4285d3:	or     al,0x90
  4285d5:	adc    ch,ch
  4285d7:	inc    DWORD PTR [edx-0x90a667b]
  4285dd:	inc    esi
  4285df:	mov    esp,0xe37089c3
  4285e4:	popa   
  4285e5:	adc    DWORD PTR [eax+0x50db3b],edi
  4285eb:	xchg   BYTE PTR [ebx],bh
  4285ed:	add    ebp,DWORD PTR [edx+0x66]
  4285f0:	cmc    
  4285f1:	das    
  4285f2:	call   0x3dea28
  4285f7:	mov    eax,edi
  4285f9:	mov    ecx,0x824afd04
  4285fe:	in     al,dx
  4285ff:	jle    0x4285f1
  428601:	xorps  xmm2,XMMWORD PTR [edi-0x5cff9ae1]
  428608:	cmc    
  428609:	adc    al,0x34
  42860b:	repz aas 
  42860d:	sti    
  42860e:	xor    cl,0x10
  428611:	bound  ebx,QWORD PTR ds:0x46885aa5
  428617:	lods   al,BYTE PTR ds:[esi]
  428618:	add    BYTE PTR [ebp-0x10],0xed
  42861c:	mov    ebp,0x4c4500fd
  428621:	(bad)  
  428622:	dec    BYTE PTR [edx+0x5a]
  428625:	add    BYTE PTR [ebp+0x3d],0x5a
  428629:	mov    BYTE PTR [esi-0x80],al
  42862c:	pop    ebp
  42862d:	add    BYTE PTR [ebp-0x31],0x5a
  428631:	mov    BYTE PTR [esi+0x72],al
  428634:	add    BYTE PTR [ebp-0x4],0x1d
  428638:	out    0xf6,eax
  42863a:	loop   0x4285f7
  42863c:	cmc    
  42863d:	mov    dh,0xff
  42863f:	mov    bh,ah
  428641:	inc    DWORD PTR [esp+edx*4+0xf0db7e9]
  428648:	xchg   esp,eax
  428649:	cmp    esi,DWORD PTR [edi]
  42864b:	arpl   WORD PTR [edx],bp
  42864d:	(bad)  
  42864e:	retf   0xe400
  428651:	jnp    0x4285d9
  428653:	dec    edx
  428654:	lea    eax,[ecx]
  428656:	push   ebx
  428657:	das    
  428658:	cmp    ah,BYTE PTR [edx]
  42865a:	mov    al,BYTE PTR [ebp+0x30]
  42865d:	stc    
  42865e:	sub    esi,DWORD PTR [esi]
  428660:	ss push ebx
  428662:	cmp    al,0x85
  428664:	push   esp
  428665:	aad    0xd
  428667:	xchg   ecx,ecx
  428669:	inc    ebp
  42866a:	clc    
  42866b:	retf   0xe2a3
  42866e:	dec    esp
  42866f:	push   eax
  428670:	jb     0x428622
  428672:	int3   
  428673:	push   es
  428674:	in     al,dx
  428675:	mov    dl,0xef
  428677:	stc    
  428678:	sti    
  428679:	rol    ecx,cl
  42867b:	sti    
  42867c:	inc    esp
  42867d:	xchg   ecx,eax
  42867e:	and    ecx,0xc08291ea
  428684:	push   0xd87cf638
  428689:	clc    
  42868a:	or     al,0x42
  42868c:	push   ecx
  42868d:	jge    0x428634
  42868f:	mov    BYTE PTR [edx+0x24],cl
  428692:	daa    
  428693:	cwde   
  428694:	xchg   DWORD PTR [ebx-0x5aae72c5],ebp
  42869a:	into   
  42869b:	addr16 or al,0x29
  42869e:	(bad)  
  42869f:	(bad)  
  4286a0:	mov    esp,0xa3fa5ac5
  4286a5:	imul   eax,DWORD PTR [edx-0x7fc7df40],0xb138907d
  4286af:	add    al,0xf2
  4286b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4286b2:	int3   
  4286b3:	inc    BYTE PTR [eax]
  4286b5:	xchg   esp,eax
  4286b6:	xchg   edi,eax
  4286b7:	daa    
  4286b8:	je     0x428681
  4286ba:	loope  0x4286f7
  4286bc:	leave  
  4286bd:	push   edi
  4286be:	add    DWORD PTR [eax+ecx*4-0x24f27f88],edi
  4286c5:	popa   
  4286c6:	xor    ch,cl
  4286c8:	rol    ch,1
  4286ca:	leave  
  4286cb:	dec    ebp
  4286cc:	pop    es
  4286cd:	xchg   ebp,eax
  4286ce:	add    cl,ch
  4286d0:	rcr    BYTE PTR [eax],1
  4286d2:	jl     0x428721
  4286d4:	ds aas 
  4286d6:	xor    bl,BYTE PTR [ecx-0x2bccc457]
  4286dc:	inc    ebx
  4286dd:	mov    ds:0x698ee8c0,al
  4286e2:	in     al,dx
  4286e3:	bnd ret 
  4286e5:	and    ecx,DWORD PTR [ecx+0x41113c2c]
  4286eb:	push   ebp
  4286ec:	pop    ss
  4286ed:	and    DWORD PTR [ebp+edx*4+0x18320f39],eax
  4286f4:	mov    DWORD PTR [ecx-0x7c233eb4],ecx
  4286fa:	xor    ch,BYTE PTR [edx-0xc542b80]
  428700:	lods   eax,DWORD PTR ds:[esi]
  428701:	lahf   
  428702:	and    DWORD PTR [eax+edx*2],0x7a
  428706:	add    BYTE PTR [ecx],bh
  428708:	cmp    eax,edi
  42870a:	jge    0x4286b1
  42870c:	or     bh,cl
  42870e:	or     ecx,DWORD PTR [ecx+0x6e005416]
  428714:	xor    al,0x66
  428716:	xor    esp,ebx
  428718:	add    DWORD PTR [eax],0xffffff8a
  42871b:	shr    al,0x7c
  42871e:	mov    bl,0x0
  428720:	jmp    0xb381ea28
  428725:	mov    BYTE PTR [ecx],ch
  428727:	and    al,0xe2
  428729:	enter  0x28d4,0x4
  42872d:	mov    esp,0x446d318d
  428732:	add    DWORD PTR ds:0x3a1b07cf,eax
  428738:	add    bl,al
  42873a:	xchg   edi,eax
  42873b:	sar    dl,1
  42873d:	push   ss
  42873e:	sbb    edi,DWORD PTR [esp+ecx*1]
  428741:	je     0x428798
  428743:	sub    DWORD PTR [eax+0x6c],edx
  428746:	adc    eax,0x9f16fd64
  42874b:	shl    BYTE PTR [ebp-0x15],1
  42874e:	and    bl,dl
  428750:	test   DWORD PTR [esi],0xa90f6ca5
  428756:	xchg   edi,eax
  428757:	jl     0x428719
  428759:	jge    0x428700
  42875b:	add    DWORD PTR [ebp-0x4ca92c3],0x39
  428762:	sbb    edi,DWORD PTR [ebx+0x50e46cf7]
  428768:	call   0xfb796e2d
  42876d:	gs push edi
  42876f:	stos   DWORD PTR es:[edi],eax
  428770:	or     al,0x53
  428772:	pushf  
  428773:	add    DWORD PTR [ebp-0x37],0x31
  428777:	xor    DWORD PTR [ebx-0x4a],ecx
  42877a:	data16 mov cl,0xc3
  42877d:	fld    QWORD PTR [eax]
  42877f:	sbb    al,0xbb
  428781:	retf   
  428782:	cmp    DWORD PTR ds:0xd39c3bb,ebx
  428788:	mov    ebx,0xbb0d39bb
  42878d:	mov    bl,0x39
  42878f:	add    dh,BYTE PTR [esi]
  428791:	sti    
  428792:	fdiv   QWORD PTR [ebx]
  428794:	cmovo  ebp,ecx
  428797:	adc    al,0x40
  428799:	jne    0x428788
  42879b:	ret    0xe72e
  42879e:	enter  0xbb22,0xb3
  4287a2:	jb     0x428780
  4287a4:	push   0x94e966
  4287a9:	sub    BYTE PTR [eax],0xa9
  4287ac:	cwde   
  4287ad:	jg     0x428826
  4287af:	das    
  4287b0:	add    DWORD PTR [ecx+0x4924ac00],eax
  4287b6:	(bad)
  4287bb:	inc    ecx
  4287bc:	out    0xff,al
  4287be:	push   esi
  4287c0:	repz or BYTE PTR [ebp-0x7b],0x6
  4287c5:	dec    ebp
  4287c6:	hlt    
  4287c7:	out    0x40,al
  4287c9:	xlat   BYTE PTR ds:[ebx]
  4287ca:	lea    esp,[ecx]
  4287cc:	add    eax,0xec00890a
  4287d1:	test   bl,bl
  4287d3:	enter  0x2b02,0xff
  4287d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4287d8:	add    BYTE PTR [eax],0x0
  4287db:	sub    eax,0x62e8bb7f
  4287e0:	ss stc 
  4287e2:	inc    DWORD PTR [eax]
  4287e4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4287e5:	in     al,dx
  4287e6:	test   bh,bh
  4287e8:	leave  
  4287e9:	outs   dx,BYTE PTR ds:[esi]
  4287ea:	rol    DWORD PTR [edi],0x2c
  4287ed:	mov    ds:0x4beb093,eax
  4287f2:	mov    DWORD PTR [edi-0x4],eax
  4287f5:	mov    ds:0x4aeb08f,eax
  4287fa:	lea    ebx,[edi-0x21]
  4287fd:	jnp    0x42883e
  4287ff:	add    eax,0x11b80042
  428804:	mov    ebp,0xba895e04
  428809:	add    cl,BYTE PTR [ecx-0x7d9e0a89]
  42880f:	inc    ebp
  428810:	add    DWORD PTR [esi+0x35],edi
  428813:	xor    bl,ch
  428815:	inc    ebx
  428816:	sti    
  428817:	gs inc esp
  428819:	inc    ecx
  42881a:	pop    es
  42881b:	outs   dx,WORD PTR ss:[esi]
  42881e:	out    dx,eax
  42881f:	data16 xor al,0x41
  428822:	or     DWORD PTR [esi+0x26],esp
  428825:	outs   dx,DWORD PTR ds:[esi]
  428826:	jecxz  0x42888e
  428828:	and    al,0x41
  42882a:	or     ecx,DWORD PTR [edi]
  42882c:	xchg   esp,eax
  42882d:	mov    es,ecx
  42882f:	or     esp,esp
  428831:	mov    esi,0xc6e7d3aa
  428836:	dec    ebp
  428837:	or     ecx,DWORD PTR [ebx+0x66]
  42883a:	add    edi,edi
  42883c:	arpl   WORD PTR [esi],sp
  42883e:	jo     0x428883
  428840:	mov    ds:0xc40c3f9a,al
  428845:	out    0xaa,al
  428847:	jmp    0x428849
  428849:	(bad)  
  42884a:	push   cs
  42884b:	dec    esi
  42884c:	or     esp,DWORD PTR [ebx]
  42884e:	pop    esi
  42884f:	movq   QWORD PTR [eax+0x4d],mm3
  428853:	iret   
  428854:	or     al,BYTE PTR [ebx]
  428856:	pop    esi
  428857:	or     ebx,edi
  428859:	leave  
  42885a:	stc    
  42885b:	add    al,0xbf
  42885d:	in     al,0x36
  42885f:	push   ecx
  428860:	xchg   ecx,edx
  428862:	xor    DWORD PTR [esp+eax*8-0x2c564b68],eax
  428869:	sub    al,0x6c
  42886b:	mov    cl,0xf9
  42886d:	sbb    esp,DWORD PTR [ecx+ebp*4-0x4e8c0315]
  428874:	stc    
  428875:	or     esi,DWORD PTR [ecx+ebp*4-0x4ea41321]
  42887c:	stc    
  42887d:	sti    
  42887e:	mov    eax,ds:0x511d07b9
  428883:	mov    ebx,es
  428885:	dec    ebx
  428886:	(bad)  
  428887:	fmul   st(0),st
  428889:	(bad)  
  42888a:	and    al,0xff
  42888c:	dec    esi
  42888d:	inc    ecx
  42888e:	out    dx,al
  42888f:	cmp    eax,0x23819502
  428894:	push   es
  428895:	xchg   esp,eax
  428896:	sbb    DWORD PTR [ebp+ebp*1-0x40b550],ecx
  42889d:	xchg   BYTE PTR [edx-0x216abd79],dl
  4288a3:	push   esi
  4288a4:	lds    edx,FWORD PTR [edi+0x0]
  4288a7:	jmp    0x247b09a7
  4288ac:	les    eax,FWORD PTR [eax]
  4288ae:	fwait
  4288af:	mov    bl,0x0
  4288b1:	ror    DWORD PTR [esi+0x5c171154],1
  4288b7:	inc    esp
  4288b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4288b9:	add    ecx,DWORD PTR [ecx]
  4288bb:	pop    ss
  4288bc:	push   ecx
  4288bd:	(bad)  
  4288be:	mov    WORD PTR [eax],es
  4288c0:	jmp    0xdbf7dd44
  4288c5:	mov    cl,BYTE PTR [ecx+0x63c42c3c]
  4288cb:	inc    esp
  4288cc:	in     al,0x4b
  4288ce:	push   ecx
  4288cf:	ret    0x2e8
  4288d2:	out    0x2d,eax
  4288d4:	hlt    
  4288d5:	xor    ebx,DWORD PTR [edx-0xb5e1740]
  4288db:	repnz and al,0xc4
  4288de:	cmp    esp,DWORD PTR [edi+ebx*2+0x82631c1]
  4288e5:	or     eax,0xbe710094
  4288ea:	xchg   edi,eax
  4288eb:	call   0xc293d4eb
  4288f0:	call   0xca1844a5
  4288f5:	push   ecx
  4288f6:	int3   
  4288f7:	or     esi,DWORD PTR [ecx+0x3400c341]
  4288fd:	push   cs
  4288fe:	in     al,dx
  4288ff:	or     eax,esp
  428901:	add    edx,DWORD PTR [esp+eax*4+0x7798b0a9]
  428908:	add    al,0x48
  42890a:	fld    st(1)
  42890c:	call   0xac7b1a4e
  428911:	ret    
  428912:	add    bl,dl
  428914:	add    BYTE PTR [edx],dh
  428916:	aaa    
  428917:	mov    eax,ds:0xc3c3d730
  42891c:	mov    ds:0xc1d7ee47,eax
  428921:	(bad)  
  428922:	call   0xe4850238
  428927:	jg     0x428976
  428929:	push   es
  42892a:	jmp    0xe68500c6
  42892f:	bound  edx,QWORD PTR [ebx]
  428931:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428932:	clc    
  428933:	push   edi
  428934:	sub    eax,0x7829ac5a
  428939:	inc    edx
  42893a:	repnz pop esi
  42893c:	outs   dx,BYTE PTR ds:[esi]
  42893d:	push   ebp
  42893e:	jb     0x4288ec
  428940:	lods   eax,DWORD PTR ds:[esi]
  428941:	jecxz  0x428974
  428943:	sbb    DWORD PTR [esp+edx*4],ebx
  428946:	jmp    0x4288df
  428948:	add    BYTE PTR [edi-0x41],cl
  42894b:	push   edx
  42894c:	sub    dl,BYTE PTR ds:0xffc08151
  428952:	fldz   
  428954:	ja     0x42899a
  428956:	lds    edi,FWORD PTR [ebx]
  428958:	idiv   BYTE PTR [esi-0x4021bd84]
  42895e:	adc    BYTE PTR [edi],bh
  428960:	sub    edi,ebx
  428962:	jmp    0xe943dc66
  428967:	xchg   edi,eax
  428968:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428969:	pop    es
  42896a:	out    0x24,al
  42896c:	dec    ebp
  42896d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42896e:	sub    dl,BYTE PTR [eax-0x7f2bbbf]
  428974:	sub    bh,bl
  428976:	jmp    0x156c207b
  42897b:	in     eax,dx
  42897c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42897d:	sar    bh,0x71
  428980:	mov    edi,0x503df6f5
  428985:	jnp    0x42890b
  428987:	add    eax,0xe9000000
  42898c:	(bad)  
  42898d:	mov    ebp,0xccf4114e
  428992:	(bad)  
  428993:	call   0xe845c87e
  428998:	sbb    ah,cl
  42899a:	and    eax,DWORD PTR [eax]
  42899c:	jmp    0xde929e96
  4289a1:	inc    eax
  4289a2:	sti    
  4289a3:	test   ch,bh
  4289a5:	outs   dx,DWORD PTR ds:[esi]
  4289a6:	or     eax,0x8b4d318d
  4289ab:	add    BYTE PTR [ebp-0x5f00b000],ch
  4289b1:	or     BYTE PTR [ebx],0x40
  4289b4:	jge    0x428a33
  4289b6:	inc    esp
  4289b7:	and    al,0x85
  4289b9:	pop    eax
  4289ba:	jecxz  0x428947
  4289bc:	sub    eax,0x91448d00
  4289c1:	push   ds
  4289c2:	dec    ebx
  4289c3:	call   DWORD PTR [eax-0x8]
  4289c6:	adc    BYTE PTR [eax+0x7d],al
  4289c9:	jns    0x428a3f
  4289cb:	and    al,0x25
  4289cd:	test   al,0x9c
  4289cf:	add    BYTE PTR [ebp+0x0],ch
  4289d2:	call   0xf7354c78
  4289d7:	mov    esi,DWORD PTR [ebx-0x13]
  4289da:	inc    ebx
  4289db:	and    al,0x0
  4289dd:	push   ecx
  4289de:	add    eax,0x185144bf
  4289e3:	sbb    al,BYTE PTR [eax]
  4289e5:	cmp    eax,0x51448900
  4289ea:	and    al,0x88
  4289ec:	pop    esp
  4289ed:	xchg   ecx,eax
  4289ee:	xor    al,0x83
  4289f0:	pop    esp
  4289f1:	xchg   ecx,eax
  4289f2:	add    eax,0x14a15c89
  4289f7:	or     DWORD PTR [ecx+edx*4+0x14],0x2b
  4289fc:	shr    BYTE PTR [ebp-0x4e7a202f],0x20
  428a03:	das    
  428a04:	jno    0xfd428a61
  428a0a:	js     0x428a50
  428a0c:	and    al,0xe1
  428a0e:	cmc    
  428a0f:	add    DWORD PTR ds:[esi+0x40],ebp
  428a13:	pop    ds
  428a14:	adc    al,0x94
  428a16:	daa    
  428a17:	xor    BYTE PTR [ebx+edx*4],0x9f
  428a1b:	mov    edi,0xf9b19323
  428a20:	or     al,BYTE PTR [edx]
  428a22:	pop    edx
  428a23:	call   0x5088:0x99d8d47e
  428a2a:	inc    ebp
  428a2b:	adc    ecx,DWORD PTR [ebp+0x5017fd58]
  428a31:	shl    BYTE PTR [ebp-0x25],cl
  428a34:	adc    BYTE PTR [edx+edx*8+0x59a5a00a],dl
  428a3b:	inc    DWORD PTR [edi-0x34]
  428a3e:	xor    bh,BYTE PTR [ebx-0x42]
  428a41:	add    BYTE PTR [ecx+ebx*1-0x625cb801],dl
  428a48:	outs   dx,BYTE PTR ds:[esi]
  428a49:	add    BYTE PTR [ecx+ebx*1-0x49e7f539],dl
  428a50:	add    eax,DWORD PTR [eax]
  428a52:	xchg   esp,eax
  428a53:	jno    0x428a59
  428a55:	test   BYTE PTR [ecx],ch
  428a57:	sbb    edi,edi
  428a59:	(bad)  
  428a5a:	fmul   QWORD PTR [edx+0x7a]
  428a5d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428a5e:	xchg   esp,eax
  428a5f:	sbb    edi,edi
  428a61:	rcl    eax,0x45
  428a64:	add    al,BYTE PTR ds:0x443d17e4
  428a6a:	jo     0x428ab7
  428a6c:	inc    DWORD PTR [ebx-0x1d84cdac]
  428a72:	xchg   esp,eax
  428a73:	sbb    edi,edi
  428a75:	addr16 cdq 
  428a77:	sbb    bh,bh
  428a79:	call   FWORD PTR [ecx]
  428a7b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428a7c:	ficom  DWORD PTR [ebx+0x4fff1994]
  428a82:	addr16 push es
  428a84:	ror    DWORD PTR [esi+0x47],1
  428a87:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428a88:	mov    edx,0x3509ac23
  428a8d:	adc    eax,0xc3f7ffd4
  428a92:	fild   DWORD PTR [ebx+0x771804a9]
  428a98:	jmp    0xa9321ea0
  428a9d:	popf   
  428a9e:	or     al,0x84
  428aa0:	int    0x9b
  428aa2:	mov    edx,0x86e92a
  428aa7:	sbb    ah,ah
  428aa9:	pop    eax
  428aaa:	add    edx,DWORD PTR [eax+eax*1+0x78893519]
  428ab1:	std    
  428ab2:	ret    
  428ab3:	fwait
  428ab4:	ja     0x428a73
  428ab6:	ffreep st(3)
  428ab8:	out    dx,al
  428ab9:	sub    eax,0x4e4d086
  428abe:	sub    al,0x9e
  428ac0:	add    ecx,ebp
  428ac2:	add    edx,DWORD PTR [ecx]
  428ac4:	inc    ecx
  428ac5:	mov    ch,0xd5
  428ac7:	jecxz  0x428b44
  428ac9:	ins    DWORD PTR es:[edi],dx
  428aca:	fild   WORD PTR [edi]
  428acc:	add    ecx,ebp
  428ace:	add    eax,esp
  428ad0:	sub    esp,edi
  428ad2:	jae    0x428a59
  428ad4:	shr    al,0x7e
  428ad7:	push   esp
  428ad8:	mov    ah,0xa9
  428ada:	jg     0x428b3f
  428adc:	mov    ch,0xca
  428ade:	or     DWORD PTR [ebx+0x0],0x7d
  428ae2:	icebp  
  428ae3:	or     BYTE PTR [esi-0x4ccd0906],bh
  428ae9:	mov    ecx,0xdae4d03d
  428aee:	adc    edi,DWORD PTR [ebx]
  428af0:	icebp  
  428af1:	stos   BYTE PTR es:[edi],al
  428af2:	enter  0xfb77,0xe4
  428af6:	push   ds
  428af7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428af8:	inc    edx
  428af9:	sub    eax,0xbdfd98e8
  428afe:	add    edx,esi
  428b00:	les    ecx,FWORD PTR [ecx+eax*1]
  428b03:	cli    
  428b04:	sbb    BYTE PTR [edx],bl
  428b06:	xor    ebp,edi
  428b08:	sub    DWORD PTR [eax],eax
  428b0a:	scas   eax,DWORD PTR es:[edi]
  428b0b:	add    ah,bl
  428b0d:	fisttp QWORD PTR [eax+ebp*8]
  428b10:	jmp    0xa77f747e
  428b15:	and    eax,0xdddca7fb
  428b1a:	or     ecx,ebx
  428b1c:	stos   BYTE PTR es:[edi],al
  428b1d:	add    eax,edx
  428b1f:	and    eax,0x871ff7ac
  428b24:	push   ebx
  428b25:	and    DWORD PTR [ebp+0x447b62ba],edx
  428b2b:	int    0xd7
  428b2d:	mov    ecx,0xe5ac258c
  428b32:	dec    edi
  428b33:	mov    edx,0x1123c514
  428b38:	push   0xa1951526
  428b3d:	sar    bh,0x63
  428b40:	fdiv   DWORD PTR [ebx+ebx*1+0x37dd4c72]
  428b47:	jo     0x428ba7
  428b49:	sub    eax,DWORD PTR [esi-0x771a8c53]
  428b4f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428b50:	lea    eax,[ecx+0x7857cd44]
  428b56:	inc    edx
  428b57:	repz rol ah,cl
  428b5a:	and    ebp,DWORD PTR [ebp+0x6309bec8]
  428b60:	dec    esp
  428b61:	fisttp QWORD PTR [ecx]
  428b63:	repz push ebx
  428b65:	fisttp QWORD PTR [edx+esi*2]
  428b68:	push   esp
  428b69:	fisttp QWORD PTR [edi]
  428b6b:	popa   
  428b6c:	pop    esi
  428b6d:	add    BYTE PTR [ecx],bh
  428b6f:	popf   
  428b70:	add    BYTE PTR [ebx],bh
  428b72:	adc    DWORD PTR [ebp-0x14],esi
  428b75:	sbb    ebp,DWORD PTR [ecx+0x26992787]
  428b7b:	inc    esp
  428b7c:	or     eax,0x5442597
  428b81:	test   al,0x80
  428b83:	jl     0x428b85
  428b85:	mov    ebp,edi
  428b87:	adc    DWORD PTR [edi],ecx
  428b89:	jg     0x428bff
  428b8b:	stc    
  428b8c:	jmp    DWORD PTR [edx]
  428b8e:	jge    0x428c0c
  428b90:	and    al,0x99
  428b92:	add    al,0x83
  428b94:	inc    ebp
  428b95:	in     eax,0xa9
  428b97:	dec    ebx
  428b98:	and    al,0xc9
  428b9a:	stos   DWORD PTR es:[edi],eax
  428b9b:	pop    es
  428b9c:	jne    0x428b52
  428b9e:	in     eax,dx
  428b9f:	jae    0x428bc5
  428ba1:	add    DWORD PTR ds:0xee132ea0,eax
  428ba7:	add    bh,0x92
  428baa:	dec    esi
  428bab:	push   edx
  428bac:	mov    ebx,DWORD PTR [eax]
  428bae:	push   eax
  428baf:	mov    ebp,0x8247ad04
  428bb4:	in     al,dx
  428bb5:	cs loope 0x428baf
  428bb8:	and    ecx,0x17
  428bbb:	dec    edx
  428bbc:	push   esi
  428bbd:	dec    edx
  428bbe:	xchg   BYTE PTR [ebx],al
  428bc0:	xor    eax,esi
  428bc2:	push   ecx
  428bc3:	adc    dh,0x0
  428bc6:	inc    eax
  428bc7:	pop    ds
  428bc8:	sbb    al,0xe4
  428bca:	aaa    
  428bcb:	pop    ds
  428bcc:	sbb    al,0xf4
  428bce:	aaa    
  428bcf:	pop    ds
  428bd0:	and    ah,dh
  428bd2:	aaa    
  428bd3:	pop    ds
  428bd4:	and    al,0x0
  428bd6:	stos   BYTE PTR es:[edi],al
  428bd7:	aas    
  428bd8:	pop    ds
  428bd9:	sub    ch,bh
  428bdb:	add    eax,DWORD PTR [eax]
  428bdd:	add    BYTE PTR [ebp-0x6d00d452],dl
  428be3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428be4:	dec    ebx
  428be5:	and    al,0x31
  428be7:	add    al,0x74
  428bea:	inc    ebx
  428beb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428bec:	inc    ebx
  428bed:	and    al,0x5d
  428bef:	inc    eax
  428bf1:	mov    DWORD PTR [ecx-0x11c4e4e1],ebp
  428bf7:	outs   dx,DWORD PTR ds:[esi]
  428bf8:	or     al,0x51
  428bfa:	in     eax,0x6b
  428bfc:	sub    esi,edi
  428bfe:	xchg   esp,eax
  428bff:	dec    esi
  428c00:	cmc    
  428c01:	mov    edi,0x52ced
  428c06:	xchg   esp,eax
  428c07:	sub    bh,BYTE PTR [edi]
  428c09:	lea    esi,[eax-0x3]
  428c0c:	adc    ah,BYTE PTR [edi-0x3da57d8e]
  428c12:	pop    eax
  428c13:	std    
  428c14:	pop    ss
  428c15:	add    esp,ebp
  428c17:	sub    DWORD PTR [eax-0x6],eax
  428c1a:	shl    DWORD PTR [edx+0x35408933],cl
  428c20:	getsec 
  428c22:	mov    DWORD PTR [esi-0x7d],0xff19951b
  428c29:	xchg   BYTE PTR [ecx-0x6bbfe697],dl
  428c2f:	mov    ds:0xb2173fc5,al
  428c34:	or     ecx,DWORD PTR [ebx]
  428c36:	adc    bh,al
  428c38:	add    eax,DWORD PTR [eax]
  428c3a:	add    BYTE PTR [esp+eax*1+0x19940085],dl
  428c41:	add    BYTE PTR [eax+esi*2+0x17ffff19],al
  428c48:	aas    
  428c49:	ret    
  428c4a:	add    BYTE PTR [ebx-0x6bffde64],ah
  428c50:	sbb    DWORD PTR [edi],edx
  428c52:	cmp    ebx,DWORD PTR [ebx-0x6fc400e7]
  428c58:	mov    esi,esi
  428c5a:	repnz fisub DWORD PTR [ecx]
  428c5d:	jg     0x428c60
  428c5f:	xchg   esp,eax
  428c60:	sbb    DWORD PTR [esi+eax*1],ebx
  428c63:	pop    ss
  428c64:	ja     0x428c69
  428c66:	add    cl,al
  428c68:	xor    eax,DWORD PTR [edx+edi*2-0x7bffe624]
  428c6f:	push   esp
  428c70:	sbb    edi,edi
  428c72:	jmp    DWORD PTR [edi-0x27]
  428c75:	cdq    
  428c76:	add    DWORD PTR [edx-0x48389000],esi
  428c7c:	lock aas 
  428c7e:	jg     0x428c08
  428c80:	fadd   QWORD PTR [edx]
  428c82:	xor    eax,0xb15e5a3b
  428c87:	mov    ebx,DWORD PTR [ebx]
  428c89:	sbb    bh,BYTE PTR [ebp+0x57]
  428c8c:	hlt    
  428c8d:	arpl   WORD PTR [ebx+0x60],ax
  428c90:	mov    ch,0x5d
  428c92:	rcl    BYTE PTR [ebx+0x6113b083],0x6
  428c99:	or     eax,DWORD PTR [ebp+0xc14028c]
  428c9f:	add    BYTE PTR [edx],dl
  428ca1:	mov    ah,0xcc
  428ca3:	repnz mov ebp,0x17f2c4bb
  428ca9:	cmp    esp,edi
  428cab:	hlt    
  428cac:	xor    al,BYTE PTR [eax-0x1b]
  428caf:	popf   
  428cb0:	xchg   edi,eax
  428cb1:	shl    BYTE PTR [ebx-0x39],1
  428cb4:	ja     0x428ca1
  428cb6:	jge    0x428c9a
  428cb8:	sbb    ch,BYTE PTR [ecx]
  428cba:	add    eax,0x659eb1b7
  428cbf:	jmp    0x428c67
  428cc1:	stos   DWORD PTR es:[edi],eax
  428cc2:	hlt    
  428cc3:	jge    0x428c95
  428cc5:	fcom   QWORD PTR [esi]
  428cc7:	xor    dl,al
  428cc9:	fdivr  st(6),st
  428ccb:	xchg   DWORD PTR [ebp-0x54],ebx
  428cce:	fadd   DWORD PTR [esp+edx*2-0x3bec4107]
  428cd5:	jae    0x428c7c
  428cd7:	out    0x9e,eax
  428cd9:	shl    BYTE PTR [ecx],1
  428cdb:	push   esp
  428cdc:	sar    DWORD PTR [ebp*8+0x6bf8cf7c],cl
  428ce3:	xor    cl,cl
  428ce5:	pop    ebx
  428ce6:	cmp    DWORD PTR [esi+edx*8-0x18],0xffffff8a
  428ceb:	jp     0x428cc5
  428ced:	fmul   st(4),st
  428cef:	jl     0x428cc7
  428cf1:	sar    bh,0x2f
  428cf4:	add    BYTE PTR fs:[eax],al
  428cf7:	jmp    0xb058cb24
  428cfc:	retf   0x1e4f
  428cff:	mov    cl,0x8f
  428d01:	ret    0x613b
  428d04:	add    ah,dl
  428d06:	loope  0x428d31
  428d08:	nop
  428d09:	stos   DWORD PTR es:[edi],eax
  428d0a:	sub    DWORD PTR [eax],eax
  428d0c:	jmp    0x58f064a
  428d11:	retf   
  428d12:	out    dx,al
  428d13:	sar    BYTE PTR [esi],0x8d
  428d16:	mov    ds:0xdaec2588,al
  428d1b:	add    dl,BYTE PTR gs:0xe7d923bd
  428d22:	sub    dh,BYTE PTR [ebp+ecx*8-0x21]
  428d26:	je     0x428da4
  428d28:	(bad)
  428d2b:	sub    al,0xd2
  428d2d:	sub    BYTE PTR [ecx],0x85
  428d30:	test   eax,0x2dfa01ec
  428d35:	lods   al,BYTE PTR ds:[esi]
  428d36:	or     BYTE PTR [edi-0xd836009],al
  428d3c:	neg    BYTE PTR [esi+edx*1]
  428d3f:	cli    
  428d40:	pop    esi
  428d41:	mov    ebx,0xa80d7429
  428d46:	sbb    bh,bh
  428d48:	sti    
  428d49:	test   eax,0xe222f29
  428d4e:	add    al,ch
  428d50:	inc    eax
  428d51:	aam    0x2a
  428d53:	sti    
  428d54:	bound  ebp,QWORD PTR [eax+0x18b5eeed]
  428d5a:	js     0x428db8
  428d5c:	int    0xa7
  428d5e:	out    0x19,eax
  428d60:	lahf   
  428d61:	ds je  0x428dbe
  428d64:	in     eax,dx
  428d65:	push   ss
  428d66:	lods   eax,DWORD PTR ds:[esi]
  428d67:	add    edi,ecx
  428d69:	add    ah,bh
  428d6b:	fild   WORD PTR [esi-0x3f87c200]
  428d71:	je     0x428da9
  428d73:	xchg   edi,edi
  428d75:	sub    BYTE PTR [ebp-0x8],0x4f
  428d79:	jmp    DWORD PTR [ecx+0x798d231d]
  428d7f:	sbb    BYTE PTR [ebx],ah
  428d81:	call   0x38d4c8
  428d86:	jo     0x428d49
  428d88:	jae    0x428d8e
  428d8a:	retf   
  428d8b:	cmp    al,0x1f
  428d8d:	sbb    bl,dl
  428d8f:	cmp    al,0x1f
  428d91:	adc    BYTE PTR [esi+0x3d],ah
  428d94:	pop    ds
  428d95:	adc    BYTE PTR [esi-0x3e],ch
  428d98:	pop    es
  428d99:	cmp    esi,ebx
  428d9b:	push   esp
  428d9c:	lds    esi,FWORD PTR [ebx]
  428d9e:	(bad)  
  428d9f:	dec    edx
  428da0:	jecxz  0x428d4d
  428da2:	(bad)  
  428da4:	imul   BYTE PTR [edx-0x51]
  428da7:	or     BYTE PTR [ebx-0x7d29f434],bl
  428dad:	lock (bad) 
  428daf:	icebp  
  428db0:	jae    0x428dfb
  428db2:	and    al,0x35
  428db4:	pop    ds
  428db5:	adc    ah,ah
  428db7:	bnd jne 0x428df5
  428dba:	cmp    BYTE PTR [ebx],dh
  428dbc:	inc    DWORD PTR [edx+0x751bfc76]
  428dc2:	pushf  
  428dc3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428dc4:	cli    
  428dc5:	test   BYTE PTR [ebp+0x7d6a126b],ch
  428dcb:	jg     0x428d8d
  428dcd:	or     BYTE PTR [eax],al
  428dcf:	or     eax,0x852473d3
  428dd4:	cmp    DWORD PTR [esp-0x6b],0xaa2a8104
  428ddc:	rol    BYTE PTR [eax+eax*8+0x44f5fc31],cl
  428de3:	push   ecx
  428de4:	div    esi
  428de6:	inc    esp
  428de7:	xchg   esp,eax
  428de8:	xor    eax,0x3dd0870f
  428ded:	movq   QWORD PTR [edi+0x32],mm2
  428df1:	out    0x1,al
  428df3:	test   al,0xef
  428df5:	in     eax,dx
  428df6:	(bad)  
  428df7:	retf   0xd801
  428dfa:	sub    ebx,DWORD PTR [edx]
  428dfc:	adc    ebx,DWORD PTR [eax-0x1829def9]
  428e02:	pop    ss
  428e03:	fs out 0x7a,al
  428e06:	jl     0x428dc0
  428e08:	add    DWORD PTR [edi+0x5c],esi
  428e0b:	mov    al,0xf8
  428e0d:	sbb    ecx,DWORD PTR [ebp-0x42]
  428e10:	cmp    ch,BYTE PTR ds:0xe3fd5087
  428e16:	xchg   BYTE PTR [ecx+0x21],dl
  428e19:	ror    BYTE PTR [eax+0x2bef4195],1
  428e1f:	rcr    BYTE PTR [edx+0x79],cl
  428e22:	inc    esp
  428e23:	jo     0x428e4a
  428e25:	int3   
  428e26:	pop    ecx
  428e27:	pop    edi
  428e28:	sahf   
  428e29:	and    bl,BYTE PTR [ebp-0x2a]
  428e2c:	sbb    eax,0x8e1f54ff
  428e31:	sub    esp,0xd2062400
  428e37:	gs test bh,bh
  428e3a:	add    edx,DWORD PTR [ebx-0x65]
  428e3d:	dec    esp
  428e3e:	repz adc esp,edx
  428e41:	sbb    DWORD PTR [eax-0x3d6b673c],eax
  428e47:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428e48:	in     al,0xd3
  428e4a:	add    al,0x1
  428e4c:	push   ebx
  428e4d:	pop    esp
  428e4e:	push   edi
  428e4f:	inc    eax
  428e50:	xchg   esp,eax
  428e51:	sbb    edi,edi
  428e53:	cli    
  428e54:	sub    DWORD PTR [ebp-0x6b6bbff2],0x9eb77443
  428e5e:	ret    0x1fb3
  428e61:	add    BYTE PTR [ebx+esi*2+0x1828549f],dh
  428e68:	push   ebp
  428e69:	sbb    ch,bh
  428e6b:	xchg   BYTE PTR [ebp+ebp*4-0x1d],dl
  428e6f:	sub    BYTE PTR ds:0x7b047b23,0x39
  428e76:	enter  0x27be,0x17
  428e7a:	out    0x7a,al
  428e7c:	shr    DWORD PTR [eax+eiz*2],1
  428e7f:	mov    ebp,0x3c2c7594
  428e84:	fs and esi,esp
  428e87:	(bad)  
  428e88:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428e89:	shr    al,0x6b
  428e8c:	jmp    DWORD PTR [edx]
  428e8e:	jmp    0xa5003996
  428e93:	jle    0x428ef6
  428e95:	nop
  428e96:	fiadd  WORD PTR [ebx+0x0]
  428e99:	out    0x4f,eax
  428e9b:	push   es
  428e9c:	(bad)  
  428e9d:	mov    edi,0x98c45f99
  428ea2:	push   0x940383
  428ea7:	xchg   ecx,eax
  428ea8:	and    BYTE PTR [edx+0x23],al
  428eab:	xchg   edx,eax
  428eac:	jle    0x428eef
  428eae:	xor    BYTE PTR [ecx-0x74],dl
  428eb1:	xchg   esp,eax
  428eb2:	add    cl,ch
  428eb4:	sbb    eax,esi
  428eb6:	jge    0x428f32
  428eb8:	sub    al,0x1b
  428eba:	cmp    bl,BYTE PTR [ecx]
  428ebc:	jg     0x428f0f
  428ebe:	nop
  428ebf:	sbb    DWORD PTR [edx+edx*4+0x22],ebp
  428ec3:	jmp    0xf57a0b4b
  428ec8:	add    edx,DWORD PTR [ebp+esi*2-0x3f5f67e4]
  428ecf:	call   0xaaba726d
  428ed4:	add    al,0x6f
  428ed6:	dec    ebx
  428ed7:	iret   
  428ed8:	mov    ebp,0xe1ffba1b
  428edd:	test   al,0x4e
  428edf:	data16 sahf 
  428ee1:	int3   
  428ee2:	dec    eax
  428ee3:	sti    
  428ee4:	aas    
  428ee5:	retf   0xfab1
  428ee8:	pusha  
  428ee9:	jb     0x428f10
  428eeb:	add    cl,ch
  428eed:	sub    al,0x51
  428eef:	jae    0x428ecf
  428ef1:	mov    dl,0xd0
  428ef3:	cli    
  428ef4:	ret    0xadc6
  428ef7:	pop    es
  428ef8:	xchg   DWORD PTR [esi+0x8f0bc5],ebx
  428efe:	sahf   
  428eff:	mov    ebp,0x38dc8f09
  428f04:	mov    edi,0x7f148b3c
  428f09:	lds    esi,FWORD PTR [eax-0x6ee21381]
  428f0f:	add    BYTE PTR [eax],al
  428f11:	cmp    al,dh
  428f13:	into   
  428f14:	cs test eax,0x1d894ae3
  428f1a:	hlt    
  428f1b:	mov    ecx,0xb5f4358c
  428f20:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428f21:	or     bl,0x61
  428f24:	mov    DWORD PTR [ebp-0x4c],eax
  428f27:	int    0x8c
  428f29:	sbb    eax,0x42a6c9b4
  428f2e:	cmp    esp,eax
  428f30:	and    ecx,DWORD PTR [ecx]
  428f32:	stos   DWORD PTR es:[edi],eax
  428f33:	popa   
  428f34:	lea    eax,ds:0x6ca69db4
  428f3a:	in     al,0xdd
  428f3c:	aaa    
  428f3d:	pusha  
  428f3e:	int3   
  428f3f:	(bad)  [edi]
  428f41:	inc    edx
  428f42:	mov    al,0x65
  428f44:	out    dx,al
  428f45:	mov    di,0xb473
  428f49:	add    eax,0xe9000014
  428f4e:	out    dx,eax
  428f4f:	pusha  
  428f50:	add    cl,ch
  428f52:	xchg   edi,eax
  428f53:	cmp    eax,0x14990044
  428f58:	fisttp WORD PTR [ebx+0x5c88fd2d]
  428f5e:	mov    DWORD PTR [eax+ecx*4],edi
  428f61:	pop    esp
  428f62:	add    BYTE PTR [ecx-0x40d61cc0],bl
  428f68:	aad    0xf6
  428f6a:	(bad)  
  428f6b:	jmp    0x2d433690
  428f70:	std    
  428f71:	mov    bh,0xa1
  428f73:	cmp    eax,0x35e7fffd
  428f78:	jnp    0x428f71
  428f7a:	jmp    DWORD PTR [esi-0x1672b042]
  428f80:	inc    eax
  428f81:	aaa    
  428f82:	push   eax
  428f83:	xchg   ebp,eax
  428f84:	ss jmp 0x9775:0xbfa0f2ff
  428f8c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428f8d:	and    DWORD PTR [ecx+ebp*2],0xfffffffd
  428f91:	(bad)  
  428f92:	jmp    FWORD PTR [ebp-0x6edbbc59]
  428f98:	dec    esp
  428f99:	jecxz  0x428fe3
  428f9b:	push   ds
  428f9c:	(bad)  
  428f9d:	test   BYTE PTR [ebp+ebp*1-0x43bf80da],0xfc
  428fa5:	dec    DWORD PTR [edx+0x400a18b0]
  428fab:	lods   eax,DWORD PTR ds:[esi]
  428fac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428fad:	inc    ebx
  428fae:	and    al,0x75
  428fb0:	mov    ds:0xa7dd2443,eax
  428fb5:	inc    ebx
  428fb6:	and    al,0x89
  428fb8:	mov    ds:0xa7d92443,eax
  428fbd:	inc    ebx
  428fbe:	and    al,0x8d
  428fc0:	mov    ds:0x99552443,eax
  428fc5:	inc    ebx
  428fc6:	and    al,0x0
  428fc8:	popf   
  428fc9:	popf   
  428fca:	inc    ebx
  428fcb:	and    al,0x89
  428fcd:	ret    
  428fce:	inc    ebx
  428fcf:	and    al,0x94
  428fd1:	adc    eax,0x29d4872f
  428fd6:	ds inc esp
  428fd8:	mov    al,0xf5
  428fda:	add    al,BYTE PTR [eax]
  428fdc:	xchg   esp,eax
  428fdd:	sub    DWORD PTR [edx+0x44],edi
  428fe0:	mov    al,0x35
  428fe2:	mov    eax,ds:0x6abc9486
  428fe7:	and    al,0x6c
  428fe9:	sub    bh,bh
  428feb:	jmp    FWORD PTR [esi+eax*8]
  428fee:	cmp    ebx,0x3b
  428ff1:	xor    ebx,eax
  428ff3:	and    ebx,eax
  428ff5:	je     0x429009
  428ff7:	push   0xffbe9348
  428ffc:	and    dh,bh
  428ffe:	jnp    0x429044
  429000:	jo     0x42906f
  429002:	jmp    0x9400:0x3ca5a3be
  429009:	sub    DWORD PTR [edx-0x7c],esi
  42900c:	mov    eax,0x94000441
  429011:	fnstenv [esi+0x5c]
  429014:	mov    eax,0x1fd32815
  429019:	pop    edx
  42901a:	in     eax,dx
  42901b:	out    dx,al
  42901c:	push   0xb0447c3e
  429021:	jmp    0xf66398a2
  429026:	fisttp WORD PTR [edi]
  429028:	data16 ficomp DWORD PTR [ecx+0x7e6a002f]
  42902f:	mov    al,0x23
  429031:	pusha  
  429032:	fldcw  WORD PTR [eax]
  429034:	push   ecx
  429035:	inc    esp
  429036:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429037:	inc    ebx
  429038:	je     0x428fca
  42903a:	nop
  42903b:	(bad)  
  42903c:	and    eax,DWORD PTR [edi+esi*8+0x3a541528]
  429043:	mov    edi,0xdfe51eff
  429048:	nop    DWORD PTR [eax]
  42904b:	lods   eax,DWORD PTR ds:[esi]
  42904c:	fild   QWORD PTR [ebx+0x17f925db]
  429052:	sub    cl,0x3
  429055:	xchg   esp,eax
  429056:	mov    esp,ecx
  429058:	jbe    0x42901a
  42905a:	in     al,0xd4
  42905c:	aad    0x10
  42905e:	mov    ah,0x4
  429060:	in     al,dx
  429061:	leave  
  429062:	stos   BYTE PTR es:[edi],al
  429063:	out    0x9b,eax
  429065:	mov    ds:0xe403e8e7,eax
  42906a:	pop    ds
  42906b:	mov    eax,0x94401913
  429070:	int3   
  429071:	mov    edx,0x9497cc9c
  429076:	xchg   ebp,eax
  429077:	mov    ah,0x7c
  429079:	shl    ah,1
  42907b:	mov    esp,0x95b38c7c
  429080:	jbe    0x429042
  429082:	in     al,0x70
  429084:	aad    0x62
  429086:	test   al,0xf0
  429088:	jl     0x4290de
  42908a:	add    BYTE PTR [ecx],bh
  42908c:	sub    DWORD PTR [ebp-0x10],esp
  42908f:	arpl   WORD PTR [ebx+0x0],ax
  429092:	sub    edi,0xe470854a
  429098:	pop    eax
  429099:	cld    
  42909a:	pusha  
  42909b:	cld    
  42909c:	ins    DWORD PTR es:[edi],dx
  42909d:	mov    edi,0x44fd98b7
  4290a2:	pusha  
  4290a3:	hlt    
  4290a4:	dec    edx
  4290a5:	jmp    0x429052
  4290a7:	xchg   esp,eax
  4290a8:	(bad)  
  4290aa:	adc    al,ah
  4290ac:	int3   
  4290ad:	or     ebx,DWORD PTR [ebx]
  4290af:	shl    BYTE PTR [ebp+0x3b],1
  4290b2:	mov    edi,0xad99a027
  4290b7:	push   ds
  4290b8:	pop    esp
  4290b9:	mov    edi,0x29189077
  4290be:	mov    eax,ebx
  4290c0:	aad    0xc3
  4290c2:	fwait
  4290c3:	mov    DWORD PTR [eax],eax
  4290c5:	sub    eax,0xe186d274
  4290ca:	sbb    edx,DWORD PTR [bx+di-0xf]
  4290ce:	add    ch,al
  4290d0:	and    eax,DWORD PTR [ecx]
  4290d2:	stc    
  4290d3:	or     BYTE PTR [eax+0x56],dl
  4290d6:	inc    esi
  4290d7:	push   es
  4290d8:	jg     0x42907f
  4290da:	dec    ebx
  4290db:	cli    
  4290dc:	std    
  4290dd:	imul   esp,DWORD PTR [ebx],0xace513e2
  4290e3:	int3   
  4290e4:	and    eax,DWORD PTR ds:0x2ff2854d
  4290ea:	jl     0x429105
  4290ec:	lea    ebx,[ebp+0x39e7d663]
  4290f2:	xchg   BYTE PTR [ecx],bl
  4290f4:	sti    
  4290f5:	add    BYTE PTR fs:[ebx],al
  4290f8:	loop   0x429119
  4290fa:	add    DWORD PTR [edi-0x61f904f1],eax
  429100:	mov    esp,0x3a98d123
  429105:	ret    
  429106:	lods   eax,DWORD PTR ds:[esi]
  429107:	repz std 
  429109:	pop    ds
  42910a:	pop    ebp
  42910b:	xlat   BYTE PTR ds:[ebx]
  42910c:	sbb    eax,0x97d4e3
  429111:	add    BYTE PTR [ebp+0x50],ah
  429114:	xchg   esp,eax
  429115:	sub    esp,DWORD PTR [edx-0x2c]
  429118:	loope  0x429141
  42911a:	(bad)  
  42911b:	call   0x884fe5ac
  429120:	into   
  429121:	dec    edi
  429122:	mov    esi,0xa984fdc1
  429127:	add    eax,0xfc6a6207
  42912c:	loope  0x42913d
  42912e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42912f:	retf   
  429130:	jno    0x4290f2
  429132:	xchg   edx,eax
  429133:	xchg   esi,eax
  429134:	out    dx,al
  429135:	mov    edi,0x794586d
  42913a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42913b:	aam    0xe1
  42913d:	das    
  42913e:	add    BYTE PTR [ecx+eax*1+0x50280000],ch
  429145:	pop    ds
  429146:	and    BYTE PTR ds:0x7dfffb8e,dl
  42914c:	call   0x244c:0x265244b
  429153:	cmp    DWORD PTR [edx-0x67d2dbbd],ebx
  429159:	pop    ebx
  42915a:	add    DWORD PTR [eax],eax
  42915c:	jne    0x4290fa
  42915e:	pop    ebx
  42915f:	and    al,0x75
  429161:	adc    bl,0x75
  429164:	jno    0x429178
  429166:	imul   bl
  429168:	pop    ecx
  429169:	call   0xfff9:0x3cbae8ba
  429170:	(bad)  
  429171:	in     al,dx
  429172:	test   bh,bh
  429174:	and    DWORD PTR [esi-0x7e],eax
  429177:	inc    esp
  429178:	popa   
  429179:	adc    DWORD PTR [edx+0x400b4d35],eax
  42917f:	add    BYTE PTR [ebp+ebx*2+0x432c600],ah
  429186:	add    BYTE PTR [ecx+eiz*8+0x30],0x83
  42918b:	inc    edi
  42918c:	lock xchg esi,eax
  42918e:	inc    ebx
  42918f:	and    al,0x59
  429191:	pushf  
  429192:	ds push es
  429194:	xchg   DWORD PTR [ebp+0x1f],ebx
  429197:	push   0xefe5e75
  42919c:	add    ebx,DWORD PTR [esi+0x4]
  42919f:	push   eax
  4291a0:	fisubr DWORD PTR [edi+ebx*1+0x4c]
  4291a4:	push   0xa530346
  4291a9:	retf   
  4291aa:	push   es
  4291ab:	mov    dh,0x72
  4291ad:	(bad)  
  4291ae:	cli    
  4291af:	xlat   BYTE PTR ds:[ebx]
  4291b0:	retf   0x3eaa
  4291b3:	push   es
  4291b4:	jge    0x42919b
  4291b6:	jae    0x4291dc
  4291b8:	xchg   esp,eax
  4291b9:	or     ecx,edi
  4291bb:	cli    
  4291bc:	ret    0x6d3d
  4291bf:	inc    ebx
  4291c0:	add    BYTE PTR [ebx+0x53b1f2f7],bl
  4291c6:	and    eax,0x15b87422
  4291cb:	(bad)  
  4291cc:	mov    esi,0x874caae4
  4291d1:	loopne 0x4291e0
  4291d3:	call   0x7948e256
  4291d8:	je     0x429192
  4291da:	popa   
  4291db:	pop    ss
  4291dc:	xchg   ebx,eax
  4291dd:	stc    
  4291de:	retf   
  4291df:	and    DWORD PTR [ebp-0x182ff218],ecx
  4291e5:	or     cl,BYTE PTR [ebp+0x25]
  4291e8:	sti    
  4291e9:	and    DWORD PTR [esi-0x25],ebx
  4291ec:	pop    edi
  4291ed:	cmp    al,0xa5
  4291ef:	xchg   edi,eax
  4291f0:	stc    
  4291f1:	inc    ebx
  4291f2:	(bad)  
  4291f3:	mov    edi,0x77020d07
  4291f8:	ret    
  4291f9:	rcl    DWORD PTR [ebx-0x3a],cl
  4291fc:	xchg   BYTE PTR [ecx],dh
  4291fe:	ins    DWORD PTR es:[edi],dx
  4291ff:	inc    ecx
  429200:	add    al,0x94
  429202:	mov    ?,WORD PTR [esi-0x502eeef5]
  429208:	pop    es
  429209:	pop    ds
  42920a:	(bad)  
  42920b:	test   DWORD PTR [eax+0x2f163d5c],0x36fbda0f
  429215:	into   
  429216:	mov    bh,0xdb
  429218:	push   ecx
  429219:	pop    ds
  42921a:	mov    edx,0xb7808cff
  42921f:	shl    DWORD PTR [esi],0xce
  429222:	(bad)  
  429223:	pop    es
  429224:	bound  eax,QWORD PTR [eax]
  429226:	(bad)  
  429228:	add    cl,0x96
  42922b:	mov    al,ds:0xa4320bbb
  429230:	dec    ebp
  429231:	jne    0x4291f9
  429233:	add    BYTE PTR [ebx],cl
  429235:	jmp    0x4291db
  429237:	xchg   ebp,eax
  429238:	jmp    0x4291ba
  42923a:	aad    0xfe
  42923c:	pop    edi
  42923d:	mov    esp,0x41a8cf9f
  429242:	and    esp,DWORD PTR [eax-0x3eecfc0c]
  429248:	in     al,dx
  429249:	inc    eax
  42924a:	jmp    0x78c417d6
  42924f:	in     al,0x12
  429251:	mov    sp,0xa644
  429255:	add    esp,esi
  429257:	inc    ebx
  429258:	in     al,0xeb
  42925a:	push   edi
  42925b:	mov    edi,0x9507e8
  429260:	jmp    0xd7871b89
  429265:	ret    
  429266:	pop    ebx
  429267:	test   BYTE PTR [ecx],ch
  429269:	cmc    
  42926a:	pop    ss
  42926b:	or     al,0xe8
  42926d:	add    edx,DWORD PTR [esi+eiz*4+0xd7ccae6]
  429274:	mov    cl,0x3f
  429276:	jnp    0x429278
  429278:	jmp    0xf403:0xe900317e
  42927f:	lods   eax,DWORD PTR ds:[esi]
  429280:	and    eax,ecx
  429282:	and    ecx,esi
  429284:	push   ss
  429285:	call   0x62d9281e
  42928a:	add    al,dl
  42928c:	inc    esp
  42928d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42928e:	add    ecx,DWORD PTR [ebx-0x5d511be8]
  429294:	popa   
  429295:	sub    DWORD PTR [eax-0x45],eax
  429298:	add    BYTE PTR [esi],bl
  42929a:	inc    edx
  42929b:	imul   ecx,DWORD PTR [ecx],0x44bbfeab
  4292a1:	es add al,0x95
  4292a4:	daa    
  4292a5:	inc    ebp
  4292a6:	sbb    esp,0x8b003500
  4292ac:	inc    ecx
  4292ad:	add    BYTE PTR [eax*1-0x7c06f27d],bh
  4292b4:	(bad)  
  4292b6:	xchg   ecx,eax
  4292b7:	sbb    al,0x9a
  4292b9:	mul    edi
  4292bb:	add    ah,BYTE PTR [ecx-0x24abd660]
  4292c1:	call   ecx
  4292c3:	push   ebp
  4292c4:	xchg   ebp,eax
  4292c5:	or     BYTE PTR [edi+0x2ac3ea9a],ch
  4292cb:	cwde   
  4292cc:	add    al,0xe7
  4292ce:	sbb    eax,0xf4011915
  4292d3:	dec    eax
  4292d4:	inc    eax
  4292d5:	add    eax,0xffd9d419
  4292da:	out    0x8c,al
  4292dc:	mov    esi,0xfe3b2835
  4292e1:	cmp    ebp,edx
  4292e3:	xor    bl,al
  4292e5:	mov    al,ds:0xffd9d405
  4292ea:	imul   edi,DWORD PTR [edi+0x3],0x3e00d875
  4292f1:	or     eax,0x1a542540
  4292f6:	je     0x4292cd
  4292f8:	jns    0x4292fd
  4292fa:	xor    BYTE PTR ds:0x1fe1a54,ah
  429300:	xor    al,0x9b
  429302:	mul    edi
  429304:	repnz mul DWORD PTR [eax-0x26a457]
  42930b:	rcl    DWORD PTR [ebp-0x6d],0x8
  42930f:	das    
  429310:	or     ch,dl
  429312:	ret    
  429313:	stos   BYTE PTR es:[edi],al
  429314:	xchg   edi,eax
  429315:	add    esp,edi
  429317:	cmc    
  429318:	adc    bl,BYTE PTR [ecx]
  42931a:	add    DWORD PTR [edi+ebx*4+0x3e],edx
  42931e:	add    eax,0xffd95c19
  429323:	in     eax,0x78
  429325:	(bad)
  429329:	add    al,0xb9
  42932b:	call   DWORD PTR [edx]
  42932d:	add    eax,0x19f53b00
  429332:	enter  0x1cf7,0x22
  429336:	ret    
  429337:	mov    eax,0x4f2
  42933c:	fwait
  42933d:	mov    ecx,DWORD PTR ds:0xfb41f932
  429343:	les    ecx,FWORD PTR gs:[eax]
  429346:	dec    esp
  429347:	lds    ebp,FWORD PTR [esi+0x4]
  42934a:	outs   dx,DWORD PTR ds:[esi]
  42934b:	adc    eax,0x4e143b9b
  429350:	cmp    BYTE PTR [ecx-0x5],al
  429353:	je     0x429355
  429355:	popa   
  429356:	popf   
  429357:	dec    ebx
  429358:	lds    ebp,FWORD PTR [esi]
  42935a:	std    
  42935b:	cdq    
  42935c:	xor    al,0xb9
  42935e:	inc    ecx
  42935f:	sti    
  429360:	jmp    0x41b9:0x3415857b
  429367:	sti    
  429368:	mov    WORD PTR [eax],gs
  42936a:	(bad)  [edi-0x1]
  42936d:	push   0x3d401099
  429372:	add    BYTE PTR [di-0x6f],0x66
  429377:	call   0x3caf:0xfb416936
  42937e:	jmp    0x68bb:0x316f332a
  429385:	xor    DWORD PTR [eax+eax*1],eax
  429388:	add    BYTE PTR [ebx],cl
  42938a:	mov    ds:0xfd3ec429,al
  42938f:	dec    ecx
  429390:	mov    eax,0xffffde02
  429395:	sub    eax,DWORD PTR [ebp+0x42293015]
  42939b:	sti    
  42939c:	xchg   eax,ebp
  42939e:	xor    BYTE PTR [edi-0x56d86bbd],bh
  4293a4:	sahf   
  4293a5:	stos   BYTE PTR es:[edi],al
  4293a6:	arpl   dx,ax
  4293a8:	(bad)  
  4293a9:	fidivr DWORD PTR [ebx]
  4293ab:	rcl    DWORD PTR [ecx],cl
  4293ad:	push   esp
  4293ae:	daa    
  4293af:	add    ah,0x98
  4293b2:	adc    eax,0x65cd5a3f
  4293b7:	jg     0x4293f6
  4293b9:	add    ah,cl
  4293bb:	imul   eax,edx,0xffffffff
  4293be:	mov    bl,0xf3
  4293c0:	fcom   DWORD PTR [ecx-0x16]
  4293c3:	dec    esi
  4293c4:	dec    eax
  4293c5:	aas    
  4293c6:	xchg   esp,eax
  4293c7:	rcr    DWORD PTR [esi],1
  4293c9:	adc    eax,0xffbf34a8
  4293ce:	adc    edx,DWORD PTR [ebp+0x47]
  4293d1:	(bad)
  4293d4:	push   DWORD PTR [ebx+ebp*4-0x7f]
  4293d8:	cwde   
  4293d9:	stc    
  4293da:	jnp    0x42937b
  4293dc:	add    al,0xe8
  4293df:	daa    
  4293e0:	and    BYTE PTR ds:0xffc1e558,0x63
  4293e7:	loopne 0x4293f0
  4293e9:	enter  0x6b51,0xff
  4293ed:	add    dl,ch
  4293ef:	(bad)  
  4293f0:	imul   edi
  4293f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4293f3:	imul   edi,edi,0x4319f459
  4293f9:	aas    
  4293fa:	xchg   esp,eax
  4293fb:	jmp    0xffc1:0xdd5c3d7e
  429402:	sub    esi,DWORD PTR [ebp-0x28]
  429405:	push   ecx
  429406:	loop   0x4293d9
  429408:	inc    edi
  429409:	aas    
  42940a:	xchg   esp,eax
  42940b:	ja     0x42942b
  42940d:	adc    eax,0xffbf3c00
  429412:	mov    ecx,DWORD PTR [edi+eax*2-0x3b]
  429416:	push   edi
  429417:	sub    edi,edi
  429419:	je     0x4293be
  42941b:	add    cl,dl
  42941d:	rol    DWORD PTR [eax],cl
  42941f:	in     eax,dx
  429420:	pop    ss
  429421:	fimul  DWORD PTR [eax-0x7b1d732c]
  429427:	mov    ecx,0xdbc5a444
  42942c:	pop    ss
  42942d:	stos   DWORD PTR es:[edi],eax
  42942e:	pop    es
  42942f:	fdivr  QWORD PTR ds:0xae950426
  429435:	mov    cl,0xf7
  429437:	mov    bl,0xf2
  429439:	sub    BYTE PTR [esi+ebx*2],al
  42943c:	pusha  
  42943d:	fld    QWORD PTR [edi+0x73]
  429440:	add    BYTE PTR [esi+0x382512b7],ah
  429446:	mov    ch,0x72
  429448:	cmp    edx,ecx
  42944a:	(bad)  
  42944b:	sar    DWORD PTR ds:0xd4090426,cl
  429451:	adc    ah,BYTE PTR [edx+0x6c]
  429454:	cmp    eax,0x17e60426
  429459:	aam    0x2f
  42945b:	mov    al,al
  42945d:	call   0x248b253d
  429462:	lds    ebp,FWORD PTR [ebx-0x74]
  429465:	cli    
  429466:	sub    ebp,DWORD PTR [ebp+edx*1+0x4a]
  42946a:	and    DWORD PTR [eax],edx
  42946c:	inc    eax
  42946d:	mov    ebp,0x2cf51d0e
  429472:	inc    edi
  429473:	mov    eax,DWORD PTR [eax]
  429475:	sub    eax,DWORD PTR [edi]
  429477:	dec    esp
  429478:	cmp    eax,0xae9503a6
  42947d:	and    edi,esi
  42947f:	inc    ebx
  429480:	repnz test al,0x3
  429483:	add    dh,cl
  429485:	test   al,0x38
  429487:	xchg   edi,eax
  429488:	arpl   WORD PTR [eax],ax
  42948a:	pusha  
  42948b:	mov    edi,0x33dc171f
  429490:	mov    ds:0x4adce8c0,al
  429495:	mov    edi,?
  429497:	scas   eax,DWORD PTR es:[edi]
  429498:	das    
  429499:	pop    es
  42949a:	mov    WORD PTR [ecx-0x3054f69],gs
  4294a0:	push   ebx
  4294a1:	push   es
  4294a2:	inc    eax
  4294a3:	jmp    0xb6ea70
  4294a8:	adc    eax,ebp
  4294aa:	sti    
  4294ab:	cmp    BYTE PTR [ebp+0x5b370d53],al
  4294b1:	xlat   BYTE PTR ds:[ebx]
  4294b2:	call   DWORD PTR [edi]
  4294b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4294b5:	push   ebx
  4294b6:	or     eax,0xffd75b25
  4294bb:	pop    ss
  4294bc:	jne    0x42948b
  4294be:	aas    
  4294bf:	lods   eax,DWORD PTR ds:[esi]
  4294c0:	fcom   DWORD PTR [esi]
  4294c2:	cli    
  4294c3:	aam    0xcb
  4294c5:	inc    edx
  4294c6:	aas    
  4294c7:	jmp    0xa9c7c540
  4294cc:	add    dl,BYTE PTR [esi]
  4294ce:	mov    BYTE PTR [esp+esi*4],ah
  4294d1:	jge    0x429518
  4294d3:	jge    0x42951d
  4294d5:	dec    ecx
  4294d6:	mov    edi,0xe810111f
  4294db:	ficom  DWORD PTR [edi+0x5b5f0000]
  4294e1:	loop   0x4294ea
  4294e3:	call   0x419494eb
  4294e8:	add    BYTE PTR [edx],bl
  4294ea:	fdiv   st(1),st
  4294ec:	dec    esi
  4294ed:	or     BYTE PTR [ebx+0x5a],al
  4294f0:	sub    ebx,DWORD PTR [ebx-0x60587900]
  4294f6:	inc    ecx
  4294f7:	add    cl,BYTE PTR [ecx]
  4294f9:	and    al,0xc1
  4294fb:	jmp    DWORD PTR [ebx-0x29]
  4294fe:	mov    WORD PTR ds:0xfab09f72,es
  429504:	mov    eax,0xe161959f
  429509:	xchg   edi,eax
  42950a:	jge    0x4294d6
  42950c:	add    BYTE PTR [esi+0x25],dl
  42950f:	sti    
  429510:	add    BYTE PTR [edx+0x2cec824e],bl
  429516:	push   ebx
  429517:	jp     0x429594
  429519:	cmc    
  42951a:	add    DWORD PTR [esp+eax*1-0x43],esi
  42951e:	add    cl,cl
  429520:	ret    
  429521:	jle    0x42958a
  429523:	repz add BYTE PTR [ebx-0x52e8a49c],ah
  42952a:	cld    
  42952b:	addr16 and dl,0x41
  42952f:	sti    
  429530:	out    0x74,eax
  429532:	iret   
  429533:	idiv   bh
  429535:	inc    esi
  429536:	in     al,dx
  429537:	test   dh,dh
  429539:	cmp    DWORD PTR [edx],0x672e0682
  42953f:	test   DWORD PTR [eax],0x51f72f28
  429545:	arpl   bp,si
  429547:	dec    edi
  429548:	sbb    al,0x30
  42954a:	mov    esp,0x36002274
  42954f:	inc    edi
  429550:	test   DWORD PTR [ebp-0x74ed87c3],0xf8557085
  42955a:	lahf   
  42955b:	dec    esp
  42955c:	not    BYTE PTR [ecx+0x49]
  42955f:	mov    al,al
  429561:	je     0x4294e4
  429563:	and    BYTE PTR [ebp-0x8],0x7d
  429567:	mov    al,BYTE PTR [ebp-0x4]
  42956a:	test   BYTE PTR [eax+edx*2],0xff
  42956e:	sbb    al,0x9
  429570:	add    DWORD PTR [esi],0x33
  429573:	test   BYTE PTR [edi+0x8],0xc6
  429577:	inc    edi
  429578:	repz pop esi
  42957a:	mov    al,0xbc
  42957c:	jae    0x429583
  42957e:	mov    ah,0x41
  429580:	add    ebp,ebx
  429582:	push   ss
  429583:	xor    bh,BYTE PTR [ebx-0x7da88137]
  429589:	in     al,dx
  42958a:	xchg   esp,eax
  42958b:	pop    eax
  42958c:	xchg   BYTE PTR [eax-0x74],al
  42958f:	stos   BYTE PTR es:[edi],al
  429590:	test   al,0xfb
  429592:	xchg   esp,eax
  429593:	xchg   edx,eax
  429594:	or     ecx,DWORD PTR [ebp+0x4fb11361]
  42959a:	add    edi,DWORD PTR [eax-0x39]
  42959d:	test   ah,dl
  42959f:	mov    al,BYTE PTR [edx]
  4295a1:	jg     0x42961c
  4295a3:	sbb    edi,edi
  4295a5:	xchg   BYTE PTR [ecx+0x33],dl
  4295a8:	dec    esp
  4295a9:	mov    edi,0x12b3bf4a
  4295ae:	push   esp
  4295af:	daa    
  4295b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4295b1:	outs   dx,DWORD PTR ds:[esi]
  4295b2:	add    BYTE PTR [ebx-0x1d17fc19],ch
  4295b8:	inc    edx
  4295b9:	sbb    bh,bl
  4295bb:	xorps  xmm1,XMMWORD PTR [eax-0x4d10bf0e]
  4295c2:	cli    
  4295c3:	sub    BYTE PTR [ebx+0xb],al
  4295c6:	sti    
  4295c7:	xor    DWORD PTR [ebx],0xa2943fee
  4295cd:	push   ss
  4295ce:	test   DWORD PTR [ebx-0x65792716],ebx
  4295d4:	repnz mov cl,0xfa
  4295d7:	in     al,0x49
  4295d9:	mov    al,al
  4295db:	or     DWORD PTR [eax+0xa],eax
  4295de:	mov    bl,0xc8
  4295e0:	cmp    eax,0x589a86ef
  4295e5:	mov    ch,0xfa
  4295e7:	(bad)
  4295eb:	jmp    0xb0b6afff
  4295f0:	or     eax,0xbaea0286
  4295f5:	scas   al,BYTE PTR es:[edi]
  4295f6:	das    
  4295f7:	adc    edx,ebp
  4295f9:	xchg   edi,eax
  4295fa:	or     ecx,DWORD PTR [edi]
  4295fc:	and    al,0xa9
  4295fe:	jmp    ecx
  429600:	loop   0x4295b0
  429602:	aas    
  429603:	sbb    DWORD PTR [ecx],eax
  429605:	sub    DWORD PTR [edi-0x4a1c786d],edx
  42960b:	push   ds
  42960c:	mov    cl,0xe0
  42960e:	shl    BYTE PTR ds:0xd3f809ac,cl
  429614:	out    dx,eax
  429615:	test   al,0x3
  429617:	add    BYTE PTR [ebx],dl
  429619:	cmp    ebx,DWORD PTR [edx-0x16fabe43]
  42961f:	mov    eax,0x8a982512
  429624:	pop    ecx
  429625:	or     BYTE PTR [ebx],bh
  429627:	mov    ch,0xf3
  429629:	mov    dl,0xd9
  42962b:	sbb    eax,0x87d987df
  429630:	out    0x8c,al
  429632:	and    al,BYTE PTR [ecx-0x7716ebc7]
  429638:	xchg   esi,eax
  429639:	test   DWORD PTR [eax+eiz*1],ebp
  42963c:	adc    edi,DWORD PTR gs:[eax+edi*8]
  429640:	mov    cs,WORD PTR [ebx+0x1c]
  429643:	hlt    
  429644:	inc    esp
  429645:	stos   BYTE PTR es:[edi],al
  429646:	mov    eax,ds:0xa97d73b4
  42964b:	cwde   
  42964c:	xchg   edi,eax
  42964d:	jg     0x42965b
  42964f:	and    BYTE PTR [edi+eax*4-0x4f714a1d],dl
  429656:	lock mov cl,dl
  429659:	adc    al,0x6e
  42965b:	adc    al,0x19
  42965d:	inc    eax
  42965e:	std    
  42965f:	cli    
  429660:	adc    cl,BYTE PTR [eax]
  429662:	call   FWORD PTR [esp+eax*8]
  429665:	adc    edi,DWORD PTR [eax+0x6e1812b3]
  42966b:	push   es
  42966c:	(bad)  
  42966d:	adc    edi,DWORD PTR [ecx+0x6440ab0b]
  429673:	sbb    eax,0x29296c9f
  429678:	fcom   QWORD PTR [ebx]
  42967a:	mov    ah,0xf7
  42967c:	add    BYTE PTR [esi],bh
  42967e:	(bad)  
  42967f:	(bad)  
  429680:	fcomp  DWORD PTR [eax+0x3a410b8d]
  429686:	push   ss
  429687:	sti    
  429688:	es sbb eax,0xb1e8518
  42968e:	jmp    FWORD PTR ds:0x86d06d29
  429694:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429695:	lahf   
  429696:	ret    
  429697:	out    0xf8,eax
  429699:	test   eax,0xa872fb17
  42969e:	jge    0x429692
  4296a0:	jl     0x429635
  4296a2:	loop   0x42967a
  4296a4:	add    ch,ah
  4296a6:	jns    0x4296aa
  4296a8:	and    dl,BYTE PTR ds:[esi]
  4296ab:	push   eax
  4296ac:	or     DWORD PTR ds:0x21ef8738,ecx
  4296b2:	push   ss
  4296b3:	push   eax
  4296b4:	loope  0x4296d0
  4296b6:	sub    ecx,DWORD PTR [ebx]
  4296b8:	pop    ebp
  4296b9:	push   esp
  4296ba:	jnp    0x4296bf
  4296bc:	push   ss
  4296bd:	mov    eax,ds:0x546307b0
  4296c2:	stos   DWORD PTR es:[edi],eax
  4296c3:	pop    edx
  4296c4:	maxps  xmm2,XMMWORD PTR [edx+0x10]
  4296c8:	jmp    0x6b2f10af
  4296cd:	jae    0x4296bb
  4296cf:	dec    esi
  4296d0:	aas    
  4296d1:	loope  0x42966d
  4296d3:	out    dx,eax
  4296d4:	not    DWORD PTR [edi+0x12]
  4296d7:	arpl   cx,bx
  4296d9:	adc    dl,0xff
  4296dc:	nop
  4296dd:	jmp    0x4296f8
  4296df:	sti    
  4296e0:	jbe    0x4296e2
  4296e2:	or     al,0x39
  4296e4:	das    
  4296e5:	ja     0x429733
  4296e7:	cmp    BYTE PTR [ecx+eiz*8+0x1c],dh
  4296eb:	adc    dl,BYTE PTR [ebp-0x46]
  4296ee:	xor    BYTE PTR [eax-0x4],0xe9
  4296f2:	xchg   edi,eax
  4296f3:	add    BYTE PTR [edi-0x53cf616],al
  4296f9:	add    ch,ch
  4296fb:	sbb    eax,0x892d0000
  429700:	sti    
  429701:	imul   eax,DWORD PTR [edx+0x4590f650],0xa6ffffff
  42970b:	add    BYTE PTR [esi+0x53],cl
  42970e:	or     BYTE PTR [ebp-0x1d2fef1],0x82
  429715:	add    esi,DWORD PTR [eax+0x42]
  429718:	not    DWORD PTR [ecx+0x25]
  42971b:	dec    BYTE PTR [esi]
  42971d:	inc    eax
  42971e:	in     eax,dx
  42971f:	push   eax
  429720:	not    BYTE PTR [eax]
  429722:	push   0x503d74bd
  429727:	cmp    ah,bh
  429729:	push   eax
  42972a:	(bad)  
  42972d:	adc    ebp,DWORD PTR [ebp-0x5af49e04]
  429733:	pop    esi
  429734:	mov    BYTE PTR [ebp+0x11],al
  429737:	jp     0x429725
  429739:	adc    dh,cl
  42973b:	mov    ebp,0xf078895d
  429740:	add    BYTE PTR [ebp+0x1],0x82
  429744:	or     BYTE PTR [ebx+0x75880100],cl
  42974a:	in     al,dx
  42974b:	pop    eax
  42974c:	lahf   
  42974d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42974e:	push   0x4079d9
  429753:	pop    ebp
  429754:	lahf   
  429755:	not    BYTE PTR [ecx-0x443]
  42975b:	push   es
  42975c:	inc    eax
  42975d:	test   DWORD PTR [ebx+0x51f64d85],0x8b595675
  429767:	ds push ecx
  429769:	enter  0x28c3,0x82
  42976d:	in     al,dx
  42976e:	adc    ecx,0x14
  429771:	dec    edx
  429772:	push   esi
  429773:	xchg   esp,eax
  429774:	push   edx
  429775:	inc    ecx
  429776:	inc    ebp
  429777:	push   ebx
  429778:	daa    
  429779:	daa    
  42977a:	dec    ebx
  42977b:	dec    ebx
  42977c:	mov    edx,0x9c5c8716
  429781:	cmp    dh,BYTE PTR [ebp+esi*4-0x64]
  429785:	shl    bh,0xc4
  429788:	loop   0x42977a
  42978a:	xor    eax,DWORD PTR [edi-0x739a0099]
  429790:	aas    
  429791:	push   ss
  429792:	jne    0x429720
  429794:	or     DWORD PTR [ebp+eax*2+0x3bf101fc],0x88ff67a7
  42979f:	pop    ecx
  4297a0:	pop    ss
  4297a1:	add    al,0x80
  4297a4:	dec    edi
  4297a5:	mov    bh,bh
  4297a7:	and    BYTE PTR [edi+edx*1+0x51],dh
  4297ab:	add    BYTE PTR [edi],dl
  4297ad:	sub    ebp,edi
  4297af:	xchg   al,ah
  4297b1:	mov    ds:0x8431e78f,eax
  4297b6:	pusha  
  4297b7:	dec    edi
  4297b8:	stc    
  4297b9:	inc    ecx
  4297ba:	outs   dx,DWORD PTR ds:[esi]
  4297bb:	call   0x8541bf54
  4297c0:	aam    0xcb
  4297c2:	or     ah,BYTE PTR [edx+0x17]
  4297c5:	int3   
  4297c6:	sbb    edi,ebx
  4297c8:	sub    DWORD PTR [ebx],ebx
  4297ca:	inc    ecx
  4297cb:	inc    ebp
  4297cc:	stos   DWORD PTR es:[edi],eax
  4297cd:	daa    
  4297ce:	mov    BYTE PTR [ebp-0x54],al
  4297d1:	(bad)  
  4297d2:	push   ss
  4297d3:	adc    eax,0xffbf165c
  4297d8:	adc    edi,ebp
  4297da:	push   ss
  4297db:	add    BYTE PTR [ecx],al
  4297dd:	adc    cl,BYTE PTR [edx-0x51711901]
  4297e3:	pop    es
  4297e4:	(bad)  
  4297e5:	jb     0x42979d
  4297e7:	pop    ecx
  4297e8:	pop    ds
  4297e9:	pop    ebx
  4297ea:	mov    edx,0xed0156c8
  4297ef:	add    ecx,ecx
  4297f1:	jnp    0x429840
  4297f3:	mov    ah,0x12
  4297f5:	pop    es
  4297f6:	fs enter 0xb24f,0xb2
  4297fb:	sbb    ah,ah
  4297fd:	cwde   
  4297fe:	imul   eax,DWORD PTR [ebx-0x38],0x4
  429802:	data16 mov al,ds:0x15e013f
  429808:	(bad)  
  429809:	setns  BYTE PTR [ebx]
  42980c:	adc    eax,esi
  42980e:	and    al,0x4c
  429810:	add    bl,ah
  429812:	jnp    0x429805
  429814:	(bad)  
  429815:	dec    ecx
  429816:	mov    bh,0x6b
  429818:	dec    esp
  429819:	mov    bl,dh
  42981b:	gs inc ebx
  42981d:	nop
  42981e:	jnp    0x4297d9
  429820:	fiadd  WORD PTR [edi-0x72700f1c]
  429826:	ret    0x4365
  429829:	cwde   
  42982a:	retf   
  42982b:	pop    ss
  42982c:	xchg   ebp,eax
  42982d:	sti    
  42982e:	shr    BYTE PTR [eax-0x16fade46],cl
  429834:	push   ebx
  429835:	xchg   ebp,eax
  429836:	sbb    edx,ecx
  429838:	scas   eax,DWORD PTR es:[edi]
  429839:	sbb    bl,BYTE PTR ds:0x1982868
  42983f:	jmp    0xb315fe47
  429844:	lea    edx,[ecx-0x10]
  429847:	in     eax,dx
  429848:	inc    ecx
  429849:	es mov ebp,0x94af1c65
  42984f:	sti    
  429850:	aam    0xd1
  429852:	dec    ecx
  429853:	xchg   ecx,eax
  429854:	add    eax,0x139a0094
  429859:	std    
  42985a:	xor    al,BYTE PTR [ecx+0x70009405]
  429860:	mov    edi,0x1814798b
  429865:	adc    eax,ebp
  429867:	(bad)  
  429868:	fcom   DWORD PTR [edi+0x12]
  42986b:	fcom   st(2)
  42986d:	xlat   BYTE PTR ds:[ebx]
  42986e:	jge    0x4298bd
  429870:	popa   
  429871:	jns    0x4298b3
  429873:	push   eax
  429874:	mov    bh,0x0
  429876:	and    eax,0xae5d857c
  42987b:	or     edi,ebx
  42987d:	mov    ecx,0x3d854205
  429882:	sahf   
  429883:	or     edi,ebx
  429885:	call   0x60429921
  42988a:	retf   
  42988b:	or     dl,bh
  42988d:	lea    ecx,cs:[ebx]
  429890:	adc    eax,0xffcf3359
  429895:	imul   edi,DWORD PTR [eax+0x1],0xa45c375
  42989c:	jne    0x42987b
  42989e:	lods   al,BYTE PTR ds:[esi]
  42989f:	xchg   ebp,eax
  4298a0:	pop    es
  4298a1:	sahf   
  4298a2:	pushf  
  4298a3:	cmc    
  4298a4:	pop    ss
  4298a5:	xlat   BYTE PTR ds:[ebx]
  4298a6:	xlat   BYTE PTR ds:[ebx]
  4298a7:	push   cs
  4298a8:	ss das 
  4298aa:	push   cs
  4298ab:	imul   DWORD PTR [eax]
  4298ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4298ae:	xchg   ebx,eax
  4298af:	add    DWORD PTR [ebp-0xf],eax
  4298b2:	mov    esi,0xd5e0b93
  4298b7:	fistp  QWORD PTR [edi+0xafb2310]
  4298bd:	jne    0x429916
  4298bf:	stos   BYTE PTR es:[edi],al
  4298c0:	enter  0x9bab,0x0
  4298c4:	cs test eax,0x62551368
  4298ca:	jnp    0x42987d
  4298cc:	push   edx
  4298cd:	ret    0x9af
  4298d0:	jne    0x4298cb
  4298d2:	adc    BYTE PTR [ebp-0x52d61f9],cl
  4298d8:	gs call 0xfb06b2de
  4298de:	cmp    DWORD PTR [eax+0x1a00fab1],edi
  4298e4:	jmp    0x7c4596c
  4298e9:	jnp    0x429968
  4298eb:	jns    0x4298ef
  4298ed:	jne    0x4298d1
  4298ef:	lods   eax,DWORD PTR ds:[esi]
  4298f0:	add    dl,BYTE PTR [edi-0x37]
  4298f3:	scas   eax,DWORD PTR es:[edi]
  4298f4:	add    eax,0xdcad3200
  4298f9:	out    dx,al
  4298fa:	push   0x3d
  4298fc:	jmp    0xe98fbd74
  429901:	jae    0x429927
  429903:	pop    ebp
  429904:	jmp    0xe99fbd7c
  429909:	adc    al,0x20
  42990b:	push   ebx
  42990c:	inc    edx
  42990d:	sti    
  42990e:	cmp    dh,cl
  429910:	sub    eax,0xc1a10f07
  429915:	mov    ecx,0xaef92d0c
  42991a:	pop    es
  42991b:	push   ebx
  42991c:	pop    esp
  42991d:	add    DWORD PTR [edx-0x4],ebp
  429920:	push   ecx
  429921:	not    BYTE PTR ds:0x3b1e95
  429927:	xchg   cl,dh
  429929:	jp     0x429929
  42992b:	jmp    0x7a5f:0xbd331e7e
  429932:	aas    
  429933:	out    dx,eax
  429934:	push   es
  429935:	xchg   ebp,eax
  429936:	shl    BYTE PTR [ebp+0x3ef4e081],0xc4
  42993d:	sbb    edx,DWORD PTR [eax+0x0]
  429940:	sbb    BYTE PTR [esi-0xa],0x15
  429944:	cmc    
  429945:	(bad)  
  429947:	add    BYTE PTR [eax],dh
  429949:	les    esi,FWORD PTR [ebx+0xa]
  42994c:	xchg   ebx,eax
  42994d:	cmc    
  42994e:	adc    al,0x1c
  429950:	ret    
  429951:	inc    ecx
  429952:	sti    
  429953:	sub    bl,0xf5
  429956:	add    dh,0x5b
  429959:	rcl    DWORD PTR [ebx+ecx*4-0x6c],0x83
  42995e:	mov    ch,0x50
  429960:	out    0xd6,eax
  429962:	cdq    
  429963:	rcl    BYTE PTR [edi+ecx*1+0x2],0xb3
  429968:	pop    esp
  429969:	dec    edx
  42996a:	adc    cl,BYTE PTR [ebp+0x52af1fd9]
  429970:	ret    
  429971:	sahf   
  429972:	nop
  429973:	pop    es
  429974:	or     eax,0xd9891324
  429979:	lahf   
  42997a:	adc    dl,BYTE PTR ds:0xffbf0c08
  429980:	adc    bh,dl
  429982:	pop    DWORD PTR [edi]
  429984:	pop    ss
  429985:	iret   
  429986:	adc    ch,cl
  429988:	push   ss
  429989:	pop    ss
  42998a:	(bad)  
  42998b:	dec    edx
  42998d:	mov    ds:0xd3f0790,al
  429992:	xchg   BYTE PTR [edx-0x68],al
  429995:	call   0x7212:0x7a0fe1b
  42999c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42999d:	test   BYTE PTR [ecx-0x1bb903e9],0xf9
  4299a4:	add    BYTE PTR [ebx],al
  4299a6:	nop
  4299a7:	sar    bl,0xef
  4299aa:	sub    DWORD PTR [esi-0x8],edi
  4299ad:	mov    ecx,DWORD PTR [esp+eax*1+0x122762fb]
  4299b4:	jb     0x429a32
  4299b6:	das    
  4299b7:	(bad)  
  4299b8:	and    dl,bl
  4299ba:	sub    eax,0xa1cc458c
  4299bf:	mov    WORD PTR [ebx],ds
  4299c1:	(bad)  
  4299c2:	ss nop
  4299c4:	leave  
  4299c5:	ret    
  4299c6:	retf   
  4299c7:	or     edi,ebx
  4299c9:	mov    eax,ds:0x943fed0f
  4299ce:	mov    ds:0x6d17fbbf,al
  4299d3:	adc    dh,BYTE PTR [edi]
  4299d5:	(bad)  
  4299d7:	sbb    al,0x9
  4299d9:	adc    ecx,DWORD PTR [eax]
  4299db:	add    ecx,DWORD PTR [ebp-0x247f0114]
  4299e1:	mov    cs,WORD PTR [edx+ecx*4]
  4299e4:	mov    al,BYTE PTR [eax+edi*2+0xc111c04]
  4299eb:	cmc    
  4299ec:	repz repnz or dh,BYTE PTR [edx-0x70]
  4299f1:	xchg   edx,eax
  4299f2:	mov    ds:0x2461b65f,al
  4299f7:	or     BYTE PTR [edi],dl
  4299f9:	pop    edi
  4299fa:	or     al,0x6e
  4299fc:	adc    ecx,DWORD PTR [edi-0x6a]
  4299ff:	push   esp
  429a00:	sub    edx,DWORD PTR [eax]
  429a02:	loope  0x429a4e
  429a04:	push   ss
  429a05:	aas    
  429a06:	xchg   esi,eax
  429a07:	inc    eax
  429a08:	sub    eax,DWORD PTR [eax]
  429a0a:	mov    eax,0x1b163ae0
  429a0f:	inc    ebx
  429a10:	xchg   ebx,eax
  429a11:	mov    dh,0xc2
  429a13:	cmp    DWORD PTR [edi],esp
  429a15:	jmp    DWORD PTR [ebx]
  429a17:	mov    dh,0xb9
  429a19:	mov    bl,BYTE PTR [esp+edi*8]
  429a1c:	push   ecx
  429a1d:	(bad)  
  429a1e:	jns    0x429a22
  429a20:	jg     0x429a26
  429a22:	fs or  esi,esp
  429a25:	sbb    ebp,DWORD PTR [ecx+0x48ae8c0]
  429a2b:	cmp    bl,0x15
  429a2e:	push   0x7643b5bf
  429a33:	jg     0x4299df
  429a35:	add    DWORD PTR [edi+0x5acca975],ecx
  429a3b:	and    ch,dl
  429a3d:	adc    esp,0x65ad38ec
  429a43:	or     esi,esp
  429a45:	pop    gs
  429a47:	shr    al,0x7e
  429a4a:	aam    0x95
  429a4c:	jmp    0x4299f7
  429a4e:	xchg   esp,eax
  429a4f:	mov    dl,0xff
  429a51:	mov    ch,0xbb
  429a53:	inc    ebx
  429a54:	adc    eax,0xc0859829
  429a59:	sbb    eax,0xf515069f
  429a5e:	or     ebx,0x81d3eff
  429a64:	sti    
  429a65:	hlt    
  429a66:	mov    esi,ecx
  429a68:	aas    
  429a69:	jmp    0xc557a096
  429a6e:	add    BYTE PTR [ecx-0x2d960035],al
  429a74:	pop    es
  429a75:	pop    ebx
  429a76:	bound  esp,QWORD PTR [edx+0x12bcbea6]
  429a7c:	pushf  
  429a7d:	and    ebp,DWORD PTR [ebp+0x17]
  429a80:	sbb    al,0x10
  429a82:	in     al,dx
  429a83:	xchg   edi,eax
  429a84:	add    BYTE PTR [edx-0x4a],dl
  429a87:	or     al,0xcd
  429a89:	scas   eax,DWORD PTR es:[edi]
  429a8a:	fcom   QWORD PTR [edi+0xb]
  429a8d:	cs aaa 
  429a8f:	jge    0x429a36
  429a91:	mov    BYTE PTR [edi+eax*1-0x773a4b38],bh
  429a98:	pop    es
  429a99:	sti    
  429a9a:	lahf   
  429a9b:	fld    QWORD PTR [ecx-0x7be366bb]
  429aa1:	test   DWORD PTR [ecx-0x2d04f860],eax
  429aa7:	push   esp
  429aa8:	xchg   ebp,eax
  429aa9:	pop    es
  429aaa:	jb     0x429a7f
  429aac:	xchg   BYTE PTR [eax-0xddc454],cl
  429ab2:	pop    edi
  429ab3:	and    edx,DWORD PTR [edi+0x4978151]
  429ab9:	add    cl,ch
  429abb:	adc    bh,BYTE PTR [ebp+0x64]
  429abe:	loop   0x429a68
  429ac0:	pop    es
  429ac1:	push   ecx
  429ac2:	cmp    DWORD PTR [ecx-0x2808e80b],esp
  429ac8:	or     cl,BYTE PTR [eax+0x7a5c6800]
  429ace:	clc    
  429acf:	mov    esp,0x564f72
  429ad4:	lea    eax,[ebx-0xc199b7b]
  429ada:	not    BYTE PTR [eax-0xe]
  429add:	jns    0x429b46
  429adf:	dec    DWORD PTR [eax+0x7d40111e]
  429ae5:	sub    DWORD PTR [eax+ebp*2-0x58],eax
  429ae9:	xor    esi,esi
  429aeb:	inc    ebp
  429aec:	jge    0x429b67
  429aee:	inc    ebp
  429aef:	jo     0x429b47
  429af1:	mov    esp,DWORD PTR [ebx-0x1]
  429af4:	loop   0x429aea
  429af6:	imul   esp,DWORD PTR [esi+0x56774af6],0x6c85771b
  429b00:	repnz hlt 
  429b02:	not    BYTE PTR [esi-0x50]
  429b05:	mov    ah,BYTE PTR [ebx-0x1]
  429b08:	shl    ah,cl
  429b0a:	dec    edi
  429b0b:	push   esi
  429b0c:	push   0xffffff8a
  429b0e:	arpl   di,di
  429b10:	jb     0x429b06
  429b12:	stc    
  429b13:	(bad)  
  429b14:	cmp    eax,0x559d88fe
  429b19:	cmc    
  429b1a:	idiv   bh
  429b1c:	jb     0x429afa
  429b1e:	jp     0x429b18
  429b20:	cld    
  429b21:	add    al,0x8d
  429b23:	ins    BYTE PTR es:[edi],dx
  429b24:	mov    ds:0x335ff6f4,al
  429b29:	add    ebp,0x3bfc474
  429b2f:	add    BYTE PTR [eax],cl
  429b31:	jns    0x429b1f
  429b33:	adc    DWORD PTR [ecx+0x101],0x5d8250ed
  429b3d:	in     eax,0x47
  429b3f:	xor    al,0x46
  429b42:	aaa    
  429b43:	pop    es
  429b44:	lea    edx,[ecx+eiz*8-0x284280fc]
  429b4b:	xchg   edx,eax
  429b4c:	js     0x429b5f
  429b4e:	pop    eax
  429b4f:	cwde   
  429b50:	pop    ss
  429b51:	addr16 gs dec ebx
  429b54:	call   0xf341b2f0
  429b59:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429b5a:	sahf   
  429b5b:	mov    al,0x7
  429b5d:	sub    eax,0x93ff1c45
  429b62:	pop    ss
  429b63:	jl     0x429baa
  429b65:	mov    WORD PTR [eax+0x23eefbb8],fs
  429b6b:	mov    dl,0x8c
  429b6d:	adc    DWORD PTR [edi+0xe],edi
  429b70:	sti    
  429b71:	jae    0x429b5a
  429b73:	jl     0x429b02
  429b75:	pusha  
  429b76:	xchg   ecx,eax
  429b77:	push   cs
  429b78:	sti    
  429b79:	ins    BYTE PTR es:[edi],dx
  429b7a:	jmp    0x9c9e956d
  429b7f:	adc    eax,0x458ea974
  429b84:	shl    DWORD PTR [edx*1+0x7c9faaf],0x80
  429b8c:	test   DWORD PTR [eax],edi
  429b8e:	ror    DWORD PTR [esi],0xfb
  429b91:	les    ebp,FWORD PTR [edi-0x2dd5e528]
  429b97:	sar    BYTE PTR [edi-0x73049ba1],cl
  429b9d:	add    cl,cl
  429b9f:	fucomip st,st(2)
  429ba1:	mov    edi,0x65b3d8b7
  429ba6:	xchg   esp,eax
  429ba7:	jge    0x429ba8
  429ba9:	mov    WORD PTR [ecx],ds
  429bab:	repz or eax,0x9d66fbfb
  429bb1:	push   edx
  429bb3:	xor    ecx,DWORD PTR [edi+0x15]
  429bb6:	push   esp
  429bb7:	pop    ss
  429bb8:	mov    al,al
  429bba:	imul   esi,DWORD PTR [ebx],0xb34b97
  429bc0:	jmp    0x5356ac8
  429bc5:	cli    
  429bc6:	mov    eax,DWORD PTR [eax]
  429bc8:	cmp    di,WORD PTR [edi-0x5c2d257]
  429bcf:	sti    
  429bd0:	call   0x354b485b
  429bd5:	push   ss
  429bd6:	jnp    0x429bea
  429bd8:	mov    dl,0xd7
  429bda:	bnd jp 0x429c41
  429bdd:	pop    ss
  429bde:	sahf   
  429bdf:	or     BYTE PTR [edx-0x65fb2ee5],ah
  429be5:	adc    dl,BYTE PTR [eax]
  429be7:	inc    ecx
  429be8:	sbb    al,0xfc
  429bea:	aad    0x83
  429bec:	mov    eax,DWORD PTR [edx+ebp*8]
  429bef:	sbb    BYTE PTR [esi+0x35fd1b39],cl
  429bf5:	push   ds
  429bf6:	inc    eax
  429bf7:	scas   al,BYTE PTR es:[edi]
  429bf8:	pop    ebp
  429bf9:	pop    ds
  429bfa:	pop    edi
  429bfb:	mov    ds,esp
  429bfd:	(bad)  
  429bfe:	sbb    ebx,DWORD PTR [ebx-0x36ffed18]
  429c04:	clc    
  429c05:	test   al,0x1b
  429c07:	jb     0x429c10
  429c09:	push   edx
  429c0a:	adc    al,bl
  429c0c:	or     BYTE PTR [edx-0x69],cl
  429c0f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429c10:	jne    0x429bc6
  429c12:	inc    esp
  429c14:	call   0x83e4:0xbe56b3e8
  429c1b:	xchg   esp,eax
  429c1c:	add    cl,ch
  429c1e:	adc    al,BYTE PTR [ecx+0x13c3fc40]
  429c24:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429c25:	es sti 
  429c27:	or     eax,DWORD PTR [ebx-0xf77eded]
  429c2d:	jle    0x429c34
  429c2f:	popw   es
  429c31:	fcomp  QWORD PTR [ebx]
  429c33:	mov    eax,eax
  429c35:	call   0x308af3
  429c3a:	aam    0xdd
  429c3c:	(bad)  
  429c3d:	jmp    FWORD PTR [ecx]
  429c3f:	xchg   esi,eax
  429c40:	push   ebx
  429c41:	add    bh,BYTE PTR [esi]
  429c43:	xor    dh,cl
  429c45:	gs jmp 0x429c4f
  429c48:	or     edx,DWORD PTR ds:0xffc7cbd1
  429c4e:	popa   
  429c4f:	mov    BYTE PTR [edi-0x1cf33906],al
  429c55:	cs test eax,0xeb3986fe
  429c5b:	xchg   esp,eax
  429c5c:	ins    DWORD PTR es:[edi],dx
  429c5d:	shl    BYTE PTR [ecx],0x11
  429c60:	and    esp,esi
  429c62:	push   0xffffffd8
  429c64:	in     al,0x4f
  429c66:	aaa    
  429c67:	add    BYTE PTR [ebp+0xa],cl
  429c6a:	adc    eax,0xffc78b9d
  429c6f:	arpl   ax,dx
  429c71:	mov    WORD PTR ds:0x1bed851e,es
  429c77:	xlat   BYTE PTR ds:[ebx]
  429c78:	push   edi
  429c79:	pop    es
  429c7a:	jle    0x429c22
  429c7c:	test   DWORD PTR [edi-0x3d],edi
  429c7f:	push   cs
  429c80:	shr    DWORD PTR [ebp-0x4ff8aa7a],1
  429c86:	dec    esi
  429c87:	mov    bh,0xc8
  429c89:	int    0xbb
  429c8b:	sti    
  429c8c:	push   edi
  429c8d:	pop    es
  429c8e:	arpl   cx,ax
  429c90:	mov    ebx,0x4d45ffc0
  429c95:	or     dl,dl
  429c97:	rcl    DWORD PTR [ebx],1
  429c99:	je     0x429cdb
  429c9b:	jmp    0x11c97024
  429ca0:	test   DWORD PTR [edx],esi
  429ca2:	jg     0x429c30
  429ca4:	lahf   
  429ca5:	add    BYTE PTR [edi+0x742f1319],al
  429cab:	rcr    DWORD PTR [edx],0x12
  429cae:	je     0x429c75
  429cb0:	jp     0x429c6f
  429cb2:	sti    
  429cb3:	add    BYTE PTR ds:0x60fefb65,cl
  429cb9:	or     esi,esi
  429cbb:	shl    DWORD PTR [eax-0x44],cl
  429cbe:	je     0x429cd5
  429cc0:	jmp    0x74f0:0x28b076d
  429cc7:	cld    
  429cc8:	in     eax,0x11
  429cca:	sti    
  429ccb:	inc    DWORD PTR [eax]
  429ccd:	lods   eax,DWORD PTR ds:[esi]
  429cce:	out    dx,eax
  429ccf:	je     0x429ccd
  429cd1:	xor    al,0x3e
  429cd3:	repz call DWORD PTR [ebx]
  429cd6:	test   BYTE PTR [eax+edi*8-0x75],al
  429cda:	push   ebp
  429cdb:	enter  0xb5c2,0x2
  429cdf:	push   ebp
  429ce0:	mov    ebx,ecx
  429ce2:	jnp    0x429cd0
  429ce4:	dec    esp
  429ce5:	into   
  429ce6:	dec    edx
  429ce7:	xor    BYTE PTR ds:0x3b0be9,0xc2
  429cee:	xor    edi,0x68
  429cf1:	add    eax,0x1a003f86
  429cf6:	sub    DWORD PTR [esi-0x4efe6bb],edi
  429cfc:	jmp    FWORD PTR [ebp-0xf]
  429cff:	int    0x68
  429d01:	mov    eax,ds:0xba003f85
  429d06:	sub    BYTE PTR [edx+0x67c7ead8],al
  429d0c:	int3   
  429d0d:	mov    ecx,0xa2fefb41
  429d12:	mov    DWORD PTR [eax+esi*8-0x26],eax
  429d16:	(bad)  
  429d17:	sub    dh,dh
  429d19:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429d1a:	ds jecxz 0x429d58
  429d1d:	mov    eax,DWORD PTR [eax]
  429d1f:	test   BYTE PTR [ebx],dh
  429d21:	sub    al,0x2
  429d23:	add    BYTE PTR [ecx],bh
  429d25:	xor    dl,dh
  429d27:	push   es
  429d28:	test   bh,ah
  429d2a:	add    al,BYTE PTR [eax]
  429d2c:	add    BYTE PTR [edx+esi*1+0x10000b49],dl
  429d33:	cmp    bh,dh
  429d35:	call   DWORD PTR [esp+ecx*4-0x6bbb0c3f]
  429d3c:	sar    ebx,0x44
  429d3f:	mov    al,ds:0x8d0df791
  429d44:	or     cl,BYTE PTR [ecx-0x30f4dcb7]
  429d4a:	adc    DWORD PTR [eax-0x5],ebx
  429d4d:	test   BYTE PTR [esi+0xfffff18],dl
  429d53:	fst    QWORD PTR [edi]
  429d55:	aaa    
  429d56:	fimul  DWORD PTR [esi]
  429d58:	xor    ebx,0xffffff94
  429d5b:	pop    ss
  429d5c:	(bad)  
  429d5d:	cmp    BYTE PTR [ecx],ch
  429d5f:	dec    ebx
  429d60:	sti    
  429d61:	sub    DWORD PTR [edx+0x7cffff17],0x62
  429d68:	lock stc 
  429d6a:	mov    edx,DWORD PTR [edx+0x1e62372b]
  429d70:	sbb    ebx,0xffffff94
  429d73:	pop    ss
  429d74:	dec    DWORD PTR [esi+0x73]
  429d77:	add    al,0x13
  429d79:	sti    
  429d7a:	loope  0x429cff
  429d7c:	or     dl,BYTE PTR [ebp+0x64]
  429d7f:	xchg   esp,eax
  429d80:	inc    ebx
  429d81:	jne    0x429d20
  429d83:	push   eax
  429d84:	cwde   
  429d85:	sti    
  429d86:	retf   0x80e3
  429d89:	ja     0x429d0f
  429d8b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429d8c:	sar    dl,cl
  429d8e:	leave  
  429d8f:	sbb    ecx,DWORD PTR [edx]
  429d91:	adc    eax,0xffbf0904
  429d96:	add    BYTE PTR [eax],bl
  429d98:	xlat   BYTE PTR ds:[ebx]
  429d99:	xchg   edi,eax
  429d9a:	push   es
  429d9b:	rcr    BYTE PTR [edx+0x445f4c42],cl
  429da1:	or     ebp,DWORD PTR [esi+0x2c]
  429da4:	ret    0x66f8
  429da7:	or     al,BYTE PTR [eax]
  429da9:	mov    ch,0x99
  429dab:	fwait
  429dac:	add    DWORD PTR [esi],edx
  429dae:	mov    dh,0x10
  429db0:	mov    ebx,0xe4f3b430
  429db5:	jmp    0x429dc4
  429db7:	out    dx,eax
  429db8:	or     BYTE PTR [edi+ecx*1-0x4d0d2e6c],0xfb
  429dc0:	sub    al,0xd5
  429dc2:	or     eax,0xf73c6df
  429dc7:	lahf   
  429dc8:	jnp    0x429e3a
  429dca:	add    edx,DWORD PTR [eax+eax*1-0x50343794]
  429dd1:	adc    eax,0x32ad570f
  429dd6:	jns    0xac06795c
  429ddc:	jnp    0x429d87
  429dde:	cwde   
  429ddf:	and    eax,0x200c3bc7
  429de4:	(bad)  
  429de5:	pop    edi
  429de6:	cwde   
  429de7:	dec    ebx
  429de8:	retf   0x201b
  429deb:	push   es
  429dec:	leave  
  429ded:	push   cs
  429dee:	hlt    
  429def:	sti    
  429df0:	sbb    al,0x65
  429df2:	ret    
  429df3:	jnp    0x429e6a
  429df5:	and    al,0x50
  429df7:	les    ebx,FWORD PTR [eax]
  429df9:	lahf   
  429dfa:	out    dx,eax
  429dfb:	add    BYTE PTR [ebp+0x4],ch
  429dfe:	outs   dx,BYTE PTR ds:[esi]
  429dff:	enter  0x982b,0xa8
  429e03:	out    dx,eax
  429e04:	push   esi
  429e05:	mov    ebp,0x9833e3
  429e0a:	jmp    0xa100b112
  429e0f:	call   0x3490:0x8f5fe503
  429e16:	pop    esi
  429e17:	enter  0x97eb,0x28
  429e1b:	out    dx,eax
  429e1c:	sbb    BYTE PTR [esi-0x22f83b4],dh
  429e22:	call   FWORD PTR [edx+ecx*4]
  429e25:	mov    ebp,0x4bdc5cb7
  429e2a:	push   eax
  429e2b:	je     0x429e09
  429e2d:	sub    edx,DWORD PTR [eax+0x1e]
  429e30:	sbb    al,0xc
  429e32:	sti    
  429e33:	pushf  
  429e34:	inc    DWORD PTR [esi]
  429e36:	push   ebp
  429e37:	add    DWORD PTR [ecx+eax*2],ebx
  429e3a:	xchg   DWORD PTR [edi+ebx*4-0x208df974],ebp
  429e41:	mov    bl,0xfa
  429e43:	cwde   
  429e44:	fistp  QWORD PTR [eax+0x75]
  429e47:	icebp  
  429e48:	lods   eax,DWORD PTR ds:[esi]
  429e49:	test   BYTE PTR [esi+0x2eb20221],0xb0
  429e50:	pop    es
  429e51:	ror    ebp,cl
  429e53:	cmp    eax,DWORD PTR [eax]
  429e55:	pop    es
  429e56:	push   ebx
  429e57:	cmc    
  429e58:	sub    al,0xbd
  429e5a:	not    edx
  429e5c:	xchg   esi,eax
  429e5d:	sar    DWORD PTR [edi-0x550dffe2],cl
  429e63:	enter  0x98ab,0x3
  429e67:	push   esp
  429e68:	bound  esi,QWORD PTR [ebx+edi*2+0x1416f545]
  429e6f:	or     bl,ch
  429e71:	xchg   edi,eax
  429e72:	add    BYTE PTR [edi+0x3f],cl
  429e75:	std    
  429e76:	adc    DWORD PTR [edi],ebp
  429e78:	mov    al,ds:0x1e10008a
  429e7d:	or     al,0xb3
  429e7f:	jle    0x429e2a
  429e81:	je     0x429e36
  429e83:	cli    
  429e84:	cld    
  429e85:	pop    edi
  429e86:	je     0x429e0d
  429e88:	jno    0x429e2d
  429e8a:	pop    es
  429e8b:	sti    
  429e8c:	mov    ecx,0xe91386af
  429e91:	xchg   edi,eax
  429e92:	jge    0x429e54
  429e94:	fld    QWORD PTR [eax]
  429e96:	jp     0x429f12
  429e98:	in     eax,0xac
  429e9a:	mov    edi,0x45a00007
  429e9f:	add    esi,DWORD PTR [ebx]
  429ea1:	jbe    0x429e98
  429ea3:	dec    edi
  429ea4:	add    al,0xa8
  429ea6:	mov    esp,0x3d762473
  429eab:	pop    es
  429eac:	(bad)  
  429ead:	jmp    0xb5c82b48
  429eb2:	repz idiv bh
  429eb5:	cmp    eax,0xa355aae7
  429eba:	cmc    
  429ebb:	test   al,al
  429ebd:	imul   esp,DWORD PTR [edx+eax*4],0x4681e547
  429ec4:	or     BYTE PTR [eax],al
  429ec6:	cs hlt 
  429ec8:	dec    edi
  429ec9:	add    al,0x6
  429ecb:	xlat   BYTE PTR ds:[ebx]
  429ecc:	imul   ebx,esp,0x51582467
  429ed2:	loop   0x429efd
  429ed4:	div    DWORD PTR [edx+0x15f6fc6e]
  429eda:	lods   eax,DWORD PTR ds:[esi]
  429edb:	(bad)  
  429edd:	add    dl,ch
  429edf:	(bad)  
  429ee0:	adc    al,al
  429ee2:	cs fcomip st,st(5)
  429ee5:	sub    ebp,0x0
  429ee8:	push   edi
  429ee9:	pop    esi
  429eea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429eeb:	lds    edi,FWORD PTR [ecx-0x44ce82f8]
  429ef1:	inc    eax
  429ef2:	es jmp 0x4982:0x64974f6
  429efa:	jne    0x429ef1
  429efc:	jae    0x429f22
  429efe:	mov    DWORD PTR gs:[eax],eax
  429f01:	(bad)  
  429f02:	jge    0x429efc
  429f04:	push   es
  429f05:	mov    dh,0x2d
  429f07:	in     eax,dx
  429f08:	xlat   BYTE PTR ds:[ebx]
  429f09:	sbb    edi,ebp
  429f0b:	and    al,0xfe
  429f0e:	mov    esi,0x45c1f9bd
  429f13:	dec    BYTE PTR [ebp-0x75]
  429f16:	xchg   esp,eax
  429f17:	test   al,0xb
  429f19:	jb     0x429eb3
  429f1b:	fiadd  DWORD PTR [esp+esi*8]
  429f1e:	sbb    BYTE PTR [eax-0x1],bl
  429f21:	out    0x9f,eax
  429f23:	push   ds
  429f24:	or     eax,0xf75a09fb
  429f29:	out    0x0,eax
  429f2b:	mov    al,0x18
  429f2d:	(bad)  
  429f2e:	inc    DWORD PTR [edx]
  429f30:	push   esp
  429f31:	jecxz  0x429f3a
  429f33:	xchg   ebp,eax
  429f34:	fiadd  DWORD PTR [eax+esi*2]
  429f37:	addps  xmm7,xmm7
  429f3a:	jae    0x429ed6
  429f3c:	dec    ecx
  429f3d:	pop    ss
  429f3e:	pusha  
  429f3f:	(bad)  
  429f40:	stc    
  429f41:	or     eax,DWORD PTR [edi+0x44161da]
  429f47:	xchg   esp,eax
  429f48:	sahf   
  429f49:	mov    edx,0xb5669823
  429f4e:	out    0x2f,eax
  429f50:	mov    BYTE PTR ds:0x72017fb,0x74
  429f57:	push   edx
  429f58:	xchg   esp,eax
  429f59:	inc    ebx
  429f5a:	je     0x429fb2
  429f5c:	xor    dl,BYTE PTR [eax-0x63d067dd]
  429f62:	push   edx
  429f63:	mov    ds:0x11d87b42,al
  429f68:	outs   dx,DWORD PTR ds:[esi]
  429f69:	nop
  429f6a:	cs out 0x52,eax
  429f6d:	icebp  
  429f6e:	jnp    0x429f17
  429f70:	xlat   BYTE PTR ds:[ebx]
  429f71:	add    eax,DWORD PTR [edi+0x47807db]
  429f77:	adc    DWORD PTR [ebx],edx
  429f79:	(bad)  
  429f7a:	call   DWORD PTR [esp+eiz*4+0x6fc40b8e]
  429f81:	fs push ss
  429f83:	bound  eax,QWORD PTR [edx+0x1ae0c07f]
  429f89:	jp     0x429fce
  429f8b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429f8c:	sahf   
  429f8d:	cmc    
  429f8e:	mov    BYTE PTR [eax],al
  429f90:	test   al,0x0
  429f92:	push   0x98f0d70b
  429f97:	add    eax,0x1bb5f833
  429f9c:	cwde   
  429f9d:	in     eax,0x4a
  429f9f:	or     edi,DWORD PTR [edx+0x40]
  429fa2:	mov    ds:0xe8fbe1ae,eax
  429fa7:	dec    ebx
  429fa8:	lock sub bl,BYTE PTR ss:[eax+0x53]
  429fad:	stos   DWORD PTR es:[edi],eax
  429fae:	pop    ebp
  429faf:	sbb    BYTE PTR [ebx-0xf78dee4],cl
  429fb5:	fcmovnbe st,st(5)
  429fb7:	inc    ebx
  429fb8:	dec    ebx
  429fb9:	stos   BYTE PTR es:[edi],al
  429fba:	pop    ebp
  429fbb:	adc    eax,0xefc4bc1d
  429fc0:	sbb    al,0xbc
  429fc2:	int3   
  429fc3:	jmp    0x429fd1
  429fc5:	mov    esp,0xbc0ce7c4
  429fca:	int3   
  429fcb:	fistp  DWORD PTR [edx]
  429fcd:	mov    edx,0xbc1cb2e4
  429fd2:	or     al,0xf0
  429fd4:	cmp    ecx,DWORD PTR [eax-0x12]
  429fd7:	add    edx,DWORD PTR [eax+ecx*2+0xb3f359]
  429fde:	mov    ds:0xe4f077bf,al
  429fe3:	js     0x42a039
  429fe5:	add    BYTE PTR [eax-0x71],dh
  429fe8:	ja     0x429fd6
  429fea:	shl    BYTE PTR [ebx+edx*2+0x0],0xaa
  429fef:	jle    0x429fba
  429ff1:	adc    dh,dh
  429ff3:	ret    
  429ff4:	add    BYTE PTR [ebx+0x7fd09a50],al
  429ffa:	mov    bl,0x25
  429ffc:	add    al,0x6f
  429ffe:	fmul   DWORD PTR [ebp+0x5]
  42a001:	xchg   ebp,eax
  42a002:	add    cl,ch
  42a004:	push   ds
  42a005:	mov    eax,ds:0x13002a8b
  42a00a:	add    al,BYTE PTR [eax]
  42a00c:	add    esp,DWORD PTR fs:[eax+ebx*1]
  42a010:	sbb    ebx,DWORD PTR [edi+0x13298410]
  42a016:	xor    ebx,edi
  42a018:	aad    0x5b
  42a01a:	sbb    al,0x8d
  42a01c:	lods   eax,DWORD PTR ds:[esi]
  42a01d:	push   ebx
  42a01e:	adc    BYTE PTR [ebp-0x76e3b463],cl
  42a024:	lods   eax,DWORD PTR ds:[esi]
  42a025:	inc    ebx
  42a026:	sbb    al,0xe8
  42a028:	dec    esp
  42a029:	and    al,0x0
  42a02b:	sti    
  42a02c:	rcr    DWORD PTR [edi+0x7],0x0
  42a030:	jmp    0xe9561094
  42a035:	xchg   edi,eax
  42a036:	call   0xfbd0ca7d
  42a03b:	dec    edi
  42a03c:	push   ss
  42a03d:	(bad)  
  42a03e:	sti    
  42a03f:	lods   eax,DWORD PTR ds:[esi]
  42a040:	stos   BYTE PTR es:[edi],al
  42a041:	xchg   edi,eax
  42a042:	sti    
  42a043:	rol    dl,cl
  42a045:	pop    edx
  42a046:	je     0x42a003
  42a048:	sahf   
  42a049:	sub    eax,0xfc0c8757
  42a04e:	mov    esi,0xc3a06251
  42a053:	add    ecx,ebp
  42a055:	dec    edx
  42a056:	inc    eax
  42a057:	add    cl,dl
  42a059:	add    al,al
  42a05b:	(bad)  
  42a05c:	cli    
  42a05d:	jmp    0xa64712fe
  42a062:	xchg   esi,eax
  42a063:	adc    BYTE PTR [ebp+0x36e89829],cl
  42a069:	jecxz  0x429ff8
  42a06b:	sti    
  42a06c:	pop    ecx
  42a06d:	stos   BYTE PTR es:[edi],al
  42a06e:	inc    esi
  42a06f:	xchg   al,dh
  42a071:	imul   ebx,DWORD PTR [esi],0x721d000b
  42a077:	push   edx
  42a078:	das    
  42a079:	sahf   
  42a07a:	dec    edi
  42a07b:	jns    0x42a085
  42a07d:	pop    ds
  42a07e:	xchg   BYTE PTR [bx+di-0x1b],al
  42a082:	pushf  
  42a083:	xor    al,0xb8
  42a085:	add    BYTE PTR ds:0xdafe14e7,al
  42a08b:	shl    DWORD PTR [ecx],0x7e
  42a08e:	xor    eax,0xba5fe595
  42a093:	xchg   edx,eax
  42a094:	(bad)  
  42a095:	out    0x4b,eax
  42a097:	in     eax,dx
  42a098:	clc    
  42a099:	jmp    FWORD PTR [esi-0x4100015e]
  42a09f:	mov    ds:0x43fb0002,al
  42a0a4:	dec    esi
  42a0a5:	mov    ebx,DWORD PTR [esp+eax*4+0x75]
  42a0a9:	or     al,0x2d
  42a0ab:	mov    al,0x81
  42a0ad:	jl     0x42a050
  42a0af:	clc    
  42a0b0:	outs   dx,BYTE PTR ds:[esi]
  42a0b1:	adc    dh,BYTE PTR [esi-0x3e]
  42a0b4:	(bad)  
  42a0b5:	(bad)  
  42a0b6:	loope  0x42a102
  42a0b8:	call   0xf74d35a8
  42a0bd:	mov    eax,DWORD PTR [eax]
  42a0bf:	inc    ebx
  42a0c0:	(bad)  
  42a0c1:	jns    0x42a0e7
  42a0c3:	inc    ebp
  42a0c4:	add    al,0x4f
  42a0c6:	mov    ebp,DWORD PTR [ebx-0x12fffae4]
  42a0cc:	add    dl,BYTE PTR [edi+0x5e]
  42a0cf:	jg     0x42a0d1
  42a0d1:	add    BYTE PTR [ebx+0x55fedef1],cl
  42a0d7:	cmp    BYTE PTR [ebp-0x7],0x8d
  42a0db:	bound  eax,QWORD PTR [eax]
  42a0dd:	or     DWORD PTR [esi],0x38
  42a0e0:	out    dx,eax
  42a0e1:	jg     0x42a06e
  42a0e3:	jb     0x42a0e1
  42a0e5:	mov    eax,DWORD PTR [esp+ebp*1]
  42a0e8:	int3   
  42a0e9:	iret   
  42a0ea:	jb     0x42a092
  42a0ec:	jne    0x42a130
  42a0ee:	add    al,0xaf
  42a0f0:	sbb    al,0xf5
  42a0f2:	sbb    bh,BYTE PTR [ebx]
  42a0f4:	or     ebx,esp
  42a0f6:	add    bl,BYTE PTR [edi+0x42]
  42a0f9:	test   al,al
  42a0fb:	mov    eax,ds:0x944ff5f7
  42a100:	fistp  QWORD PTR [ebx+0x43]
  42a103:	pushf  
  42a104:	test   al,0x1e
  42a106:	(bad)  
  42a107:	ror    DWORD PTR [edi+0x7f5a18de],cl
  42a10d:	test   al,0x59
  42a10f:	push   esi
  42a110:	in     al,dx
  42a111:	(bad)  
  42a112:	push   ecx
  42a113:	pop    ds
  42a114:	jns    0x42a12d
  42a116:	cmp    DWORD PTR [ebx+0x67],eax
  42a119:	or     dl,dh
  42a11b:	rol    BYTE PTR [ebx],1
  42a11d:	cld    
  42a11e:	add    BYTE PTR [eax+0xe7b0ed],ch
  42a124:	pop    ss
  42a125:	icebp  
  42a126:	or     bl,bh
  42a128:	ucomiss xmm5,DWORD PTR [ecx-0x56186f43]
  42a12f:	xchg   BYTE PTR [eax],al
  42a131:	cdq    
  42a132:	mov    bl,0x52
  42a134:	or     esi,DWORD PTR [ebp-0x4520d10a]
  42a13a:	xchg   esi,eax
  42a13b:	jne    0x42a0cd
  42a13d:	out    0xfe,eax
  42a13f:	xchg   DWORD PTR [ecx+0x16],edx
  42a142:	or     BYTE PTR ds:0xffbef8b8,dl
  42a148:	push   cs
  42a149:	add    ah,cl
  42a14b:	mul    BYTE PTR [eax-0x79]
  42a14e:	mov    al,0x4e
  42a150:	sar    DWORD PTR [ebx+esi*8-0x19],cl
  42a154:	stos   DWORD PTR es:[edi],eax
  42a155:	(bad)  
  42a156:	or     bl,bh
  42a158:	psubusb mm0,mm6
  42a15b:	out    dx,al
  42a15c:	inc    eax
  42a15d:	das    
  42a15e:	xlat   BYTE PTR ds:[ebx]
  42a15f:	add    al,0x68
  42a161:	cmp    DWORD PTR [esi-0x50c5b901],0x4
  42a168:	push   esi
  42a169:	jp     0x42a12f
  42a16b:	dec    DWORD PTR [ebx+0x1a]
  42a16e:	scas   eax,DWORD PTR es:[edi]
  42a16f:	push   edx
  42a170:	xchg   ebx,eax
  42a171:	fdivr  QWORD PTR [edx]
  42a173:	adc    esp,edx
  42a175:	out    0x7b,eax
  42a177:	inc    ebp
  42a178:	mov    WORD PTR [eax],es
  42a17a:	fiadd  WORD PTR [edx+0x0]
  42a17d:	sbb    dl,BYTE PTR [ecx]
  42a17f:	hlt    
  42a180:	mov    dh,0x0
  42a182:	jmp    0xf956103a
  42a187:	repnz add BYTE PTR [ebx-0x6c6e7e00],ah
  42a18e:	std    
  42a18f:	shl    DWORD PTR [ebx-0x5e],cl
  42a192:	inc    eax
  42a193:	jmp    0xe84072d5
  42a198:	sbb    cl,BYTE PTR [esi-0x6b7c1698]
  42a19e:	add    BYTE PTR [esi-0x4023953],dh
  42a1a4:	aaa    
  42a1a5:	call   0x8913:0x1eaee940
  42a1ac:	repnz pop ebx
  42a1ae:	add    BYTE PTR [ebx-0x6e02a687],bl
  42a1b4:	stos   BYTE PTR es:[edi],al
  42a1b5:	fadd   st(1),st
  42a1b7:	loopne 0x42a1bc
  42a1b9:	imul   ecx,DWORD PTR [ecx+0x4fe88514],0x519403e7
  42a1c3:	pop    esi
  42a1c4:	jmp    0x3ebb3d4
  42a1c9:	inc    esi
  42a1ca:	push   ebp
  42a1cb:	mov    dh,0x6
  42a1cd:	(bad)  
  42a1ce:	inc    edx
  42a1cf:	cli    
  42a1d0:	add    ebx,DWORD PTR ds:0x497cfd7b
  42a1d6:	clc    
  42a1d7:	xchg   ecx,eax
  42a1d8:	cdq    
  42a1d9:	sar    ebp,0xfb
  42a1dc:	retf   
  42a1dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a1de:	inc    eax
  42a1df:	jmp    0x6032fb60
  42a1e4:	mov    BYTE PTR [edi-0x70f92f80],bh
  42a1ea:	test   ah,bh
  42a1ec:	add    al,0x0
  42a1ee:	xchg   esp,eax
  42a1ef:	add    BYTE PTR [eax+eax*4+0x44],ch
  42a1f3:	(bad)  
  42a1f4:	push   DWORD PTR [ebp+0x34fb5092]
  42a1fa:	test   al,0xbf
  42a1fc:	test   BYTE PTR [ecx-0x74],bl
  42a1ff:	idiv   edx
  42a201:	int    0x95
  42a203:	add    BYTE PTR [eax],al
  42a205:	xchg   esi,eax
  42a206:	les    edx,FWORD PTR fs:[eax]
  42a209:	sub    DWORD PTR [eax-0x68160517],ebx
  42a20f:	add    BYTE PTR [edi-0x5022094],al
  42a215:	jbe    0x42a275
  42a217:	(bad)  
  42a218:	or     ah,BYTE PTR [edi+0x78]
  42a21b:	add    BYTE PTR [eax],al
  42a21d:	jmp    0x99d6af70
  42a222:	push   esi
  42a223:	cld    
  42a224:	or     DWORD PTR [ebp+0x64],ebp
  42a227:	add    BYTE PTR [eax],al
  42a229:	jmp    0xc47b5e74
  42a22e:	(bad)  
  42a22f:	outs   dx,BYTE PTR ds:[esi]
  42a230:	push   cs
  42a231:	jb     0x42a277
  42a233:	lock cmp ch,ah
  42a236:	adc    eax,0x972b8408
  42a23b:	add    BYTE PTR [eax],al
  42a23d:	test   eax,0x9bf844ce
  42a242:	mov    DWORD PTR [ecx-0x18],edx
  42a245:	(bad)  
  42a246:	hlt    
  42a247:	stc    
  42a248:	cli    
  42a249:	pusha  
  42a24a:	aam    0xe3
  42a24c:	ss cs loop 0x42a2cf
  42a250:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a251:	jmp    0xfb433956
  42a256:	cmp    al,0x5f
  42a258:	std    
  42a259:	cli    
  42a25a:	out    dx,al
  42a25b:	icebp  
  42a25c:	arpl   WORD PTR [eax],ax
  42a25e:	in     eax,dx
  42a25f:	xchg   edi,eax
  42a260:	add    bl,bh
  42a262:	hlt    
  42a263:	retf   
  42a264:	adc    BYTE PTR [eax-0x17],al
  42a267:	sub    al,0xf0
  42a269:	ss (bad) 
  42a26b:	test   eax,0xad00857f
  42a270:	(bad)  
  42a271:	dec    DWORD PTR [eax+edi*4+0x55565020]
  42a278:	push   eax
  42a279:	push   cs
  42a27a:	push   DWORD PTR [edx]
  42a27c:	stos   BYTE PTR es:[edi],al
  42a27d:	cmp    eax,0xff853132
  42a283:	mov    DWORD PTR [ebx-0x36e6ba7f],ecx
  42a289:	add    esi,DWORD PTR [eax]
  42a28b:	mov    eax,ds:0x8974fac1
  42a290:	add    eax,0x7f68ff2f
  42a295:	cmovo  edi,DWORD PTR ds:0x812803c8
  42a29c:	sar    edx,0x74
  42a29f:	stc    
  42a2a0:	ja     0x42a2a9
  42a2a2:	push   eax
  42a2a3:	sbb    al,0xe0
  42a2a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a2a6:	inc    ebx
  42a2a7:	cmp    eax,0x7ae80078
  42a2ac:	in     al,dx
  42a2ad:	clc    
  42a2ae:	jmp    FWORD PTR [eax-0x79be8abc]
  42a2b4:	mov    bl,0xf2
  42a2b6:	lea    eax,[eax]
  42a2b8:	icebp  
  42a2b9:	jno    0x42a2bf
  42a2bb:	add    ch,ch
  42a2bd:	dec    BYTE PTR [ebp+esi*2+0x17221c99]
  42a2c4:	xchg   ebx,eax
  42a2c5:	add    eax,0xd809c084
  42a2ca:	adc    DWORD PTR [ebp-0x7b],0x90b88579
  42a2d1:	add    eax,0xb008bf7
  42a2d6:	div    DWORD PTR [ebp-0x6b]
  42a2d9:	add    eax,0xb9b2f845
  42a2de:	out    0x89,al
  42a2e0:	test   eax,0xf5b5f76d
  42a2e5:	add    edi,esi
  42a2e7:	call   DWORD PTR [ecx+eax*8-0x365c064a]
  42a2ee:	jp     0x42a2b0
  42a2f0:	and    ch,ch
  42a2f2:	cmp    al,0x45
  42a2f4:	xchg   ebx,eax
  42a2f5:	jmp    0xdb868aa5
  42a2fa:	add    al,0xfb
  42a2fc:	(bad)  
  42a2fd:	stos   BYTE PTR es:[edi],al
  42a2fe:	add    esi,DWORD PTR [ebp+0x6c]
  42a301:	mov    ds:0x58198d2f,eax
  42a306:	add    bh,bl
  42a308:	imul   edi,DWORD PTR [eax],0x5
  42a30b:	jne    0x42a371
  42a30d:	mov    ebp,ecx
  42a30f:	retf   
  42a310:	test   DWORD PTR [edi],esp
  42a312:	add    al,0x85
  42a314:	push   esp
  42a315:	jmp    0x42a390
  42a317:	stc    
  42a318:	dec    edx
  42a319:	jae    0x42a31f
  42a31b:	sti    
  42a31c:	add    cl,cl
  42a31e:	ja     0x42a324
  42a320:	iret   
  42a321:	jge    0x42a307
  42a323:	adc    cl,BYTE PTR [ebx]
  42a325:	sbb    DWORD PTR [esp+eax*1-0x75acd405],edx
  42a32c:	repz sub al,0x66
  42a32f:	in     al,dx
  42a330:	stc    
  42a331:	sbb    ebp,DWORD PTR [esi-0x46]
  42a334:	cli    
  42a335:	jae    0x42a2d0
  42a337:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a338:	enter  0x9cd7,0x77
  42a33c:	in     al,dx
  42a33d:	gs xchg esi,eax
  42a33f:	lods   al,BYTE PTR ds:[esi]
  42a340:	mov    WORD PTR [ecx+0x23],cs
  42a343:	scas   al,BYTE PTR es:[edi]
  42a344:	gs xchg ebp,eax
  42a346:	(bad)  
  42a347:	(bad)  
  42a348:	cli    
  42a349:	popa   
  42a34a:	fbstp  TBYTE PTR [ebp+0x45]
  42a34d:	loopne 0x42a306
  42a34f:	add    edx,DWORD PTR ds:0xffbed764
  42a355:	sbb    BYTE PTR [eax],ch
  42a357:	mov    bl,BYTE PTR [eax]
  42a359:	cmp    al,0xdf
  42a35b:	add    BYTE PTR [eax],al
  42a35d:	xchg   esp,eax
  42a35e:	xchg   edx,eax
  42a35f:	jno    0x42a3a6
  42a361:	mov    WORD PTR [eax],es
  42a363:	cmp    DWORD PTR [ebx],eax
  42a365:	sub    DWORD PTR [esp+ebp*2],ecx
  42a368:	jns    0x42a312
  42a36a:	call   0xd6a81f
  42a36f:	pop    esi
  42a370:	fdiv   QWORD PTR [edx-0x71309a03]
  42a376:	jge    0x42a335
  42a378:	add    eax,DWORD PTR [eax]
  42a37a:	jno    0x42a337
  42a37c:	(bad)  
  42a37d:	xchg   esp,eax
  42a37e:	jae    0x42a3be
  42a380:	xchg   DWORD PTR [eax],eax
  42a382:	clc    
  42a383:	or     al,ch
  42a385:	ja     0x42a31d
  42a387:	jge    0x42a3a4
  42a389:	or     al,0x6a
  42a38b:	je     0x42a3bf
  42a38d:	mov    DWORD PTR [edx+0x73],ecx
  42a390:	loop   0x42a3c8
  42a392:	push   esp
  42a393:	bound  esi,QWORD PTR [eax+0xb]
  42a396:	cmp    edx,DWORD PTR [eax-0x68]
  42a399:	out    dx,eax
  42a39a:	sbb    BYTE PTR ds:0x3cc36a72,bh
  42a3a0:	and    al,BYTE PTR [ecx+eax*8]
  42a3a3:	std    
  42a3a4:	lods   eax,DWORD PTR ds:[esi]
  42a3a5:	out    dx,al
  42a3a6:	mov    ds:0x95081c40,eax
  42a3ab:	add    cl,ch
  42a3ad:	jbe    0x42a410
  42a3af:	sub    eax,0xc0d6a20
  42a3b4:	stos   BYTE PTR es:[edi],al
  42a3b5:	mov    gs,ebx
  42a3b7:	jl     0x42a3f9
  42a3b9:	push   es
  42a3ba:	xchg   BYTE PTR [esi+eiz*2],ch
  42a3bd:	or     DWORD PTR [esi+edi*8-0x1798d64d],0xf8ee56ff
  42a3c8:	ins    DWORD PTR es:[edi],dx
  42a3c9:	hlt    
  42a3ca:	adc    dl,dh
  42a3cc:	pushf  
  42a3cd:	adc    al,0x6c
  42a3cf:	add    al,0xe8
  42a3d1:	add    edx,DWORD PTR [ecx+edx*2+0x44a9029b]
  42a3d8:	fadd   DWORD PTR [ebx-0x6c]
  42a3db:	cmp    edi,0x28
  42a3de:	cmp    eax,0x97227df9
  42a3e3:	dec    esi
  42a3e4:	call   0xf6cfa4a0
  42a3e9:	cli    
  42a3ea:	jb     0x42a3be
  42a3ec:	loope  0x42a3ec
  42a3ee:	imul   ecx,edi,0xc93259f5
  42a3f4:	mov    edx,0x7fece907
  42a3f9:	jmp    0x42a413
  42a3fb:	loope  0x42a474
  42a3fd:	gs mov ch,0x97
  42a400:	test   DWORD PTR [ecx+esi*4-0x20],ecx
  42a404:	pop    esi
  42a405:	add    DWORD PTR [ebx],edx
  42a407:	cwde   
  42a408:	sti    
  42a409:	je     0x42a3fc
  42a40b:	sbb    BYTE PTR ds:0xd9739f8,bh
  42a411:	jo     0x42a40c
  42a413:	xlat   BYTE PTR ds:[ebx]
  42a414:	add    BYTE PTR [ebp+0x5219cca9],al
  42a41a:	adc    ebx,DWORD PTR [ebp+eax*4-0x7a188abc]
  42a421:	inc    esp
  42a422:	loope  0x42a40b
  42a424:	sti    
  42a425:	je     0x42a41c
  42a427:	add    al,0x6d
  42a429:	clc    
  42a42a:	push   ecx
  42a42b:	mov    al,BYTE PTR [eax]
  42a42d:	add    cl,ch
  42a42f:	mov    ch,0xdf
  42a431:	(bad)  
  42a432:	imul   ecx,DWORD PTR [edi-0x5],0x6d9b417e
  42a439:	add    eax,0x74085d00
  42a43e:	in     eax,dx
  42a43f:	sbb    bl,BYTE PTR [ebp-0x4]
  42a442:	jmp    0x313ee151
  42a447:	fcos   
  42a449:	push   DWORD PTR [ebx+0x52ec1a00]
  42a44f:	fs dec esp
  42a451:	or     al,0x50
  42a453:	push   cs
  42a454:	pop    esp
  42a455:	adc    BYTE PTR [edi+0x0],bh
  42a458:	mov    al,BYTE PTR [edx]
  42a45a:	div    DWORD PTR [ebp-0x47]
  42a45d:	gs add bh,bh
  42a460:	inc    eax
  42a461:	or     esi,edi
  42a463:	ss stos BYTE PTR es:[edi],al
  42a465:	(bad)  
  42a467:	adc    BYTE PTR [ebp-0x4],bh
  42a46a:	div    BYTE PTR [esi]
  42a46c:	xor    BYTE PTR [ebp+eax*1-0x8e7b7bc],bh
  42a473:	adc    eax,0x400c41
  42a478:	push   es
  42a479:	retf   0x5d55
  42a47c:	aas    
  42a47d:	or     al,0x0
  42a47f:	push   ebp
  42a480:	div    al
  42a482:	dec    edi
  42a483:	push   ebx
  42a484:	jle    0x42a45a
  42a486:	dec    ecx
  42a487:	lea    ebp,[eax-0x78acaf00]
  42a48d:	dec    BYTE PTR [edx+0x53]
  42a490:	sahf   
  42a491:	add    DWORD PTR [ebp+0x8],esi
  42a494:	lds    eax,FWORD PTR [ebx]
  42a496:	add    BYTE PTR [eax],al
  42a498:	mov    ebp,0xc945894c
  42a49d:	add    DWORD PTR ds:0x435d68,edx
  42a4a3:	test   ebp,ebp
  42a4a5:	outs   dx,BYTE PTR ds:[esi]
  42a4a6:	and    eax,0xf71b50ff
  42a4ab:	jne    0x42a4ce
  42a4ad:	add    BYTE PTR [ebp+0x10],dh
  42a4b0:	add    dh,bl
  42a4b2:	push   DWORD PTR [esp+ecx*1-0x36]
  42a4b6:	outs   dx,DWORD PTR ds:[esi]
  42a4b7:	cld    
  42a4b8:	push   eax
  42a4ba:	jp     0x42a4cc
  42a4bc:	inc    eax
  42a4bd:	std    
  42a4be:	jge    0x42a47a
  42a4c0:	jne    0x42a4b1
  42a4c2:	stos   DWORD PTR es:[edi],eax
  42a4c3:	(bad)  
  42a4c4:	inc    BYTE PTR [eax-0x9]
  42a4c7:	cmc    
  42a4c8:	adc    eax,0x401311
  42a4cd:	addr16 mov ebp,0x2b94c951
  42a4d3:	sbb    BYTE PTR [eax],al
  42a4d5:	inc    ecx
  42a4d6:	(bad)  
  42a4d7:	lock jle 0x42a49a
  42a4da:	in     al,dx
  42a4db:	or     DWORD PTR [esp+ecx*8-0xb],0x53
  42a4e0:	push   edx
  42a4e1:	lfs    ebp,FWORD PTR [edx+0x10]
  42a4e5:	push   esp
  42a4e6:	jmp    0x38f2e974
  42a4eb:	xor    eax,0x71d647d7
  42a4f0:	or     al,0xd
  42a4f2:	sub    al,0x0
  42a4f4:	dec    edi
  42a4f5:	fwait
  42a4f6:	dec    ebx
  42a4f7:	or     al,0xfb
  42a4f9:	retf   
  42a4fa:	mov    esi,0x2d5484d8
  42a4ff:	dec    ebp
  42a500:	xchg   ecx,ebx
  42a502:	stos   DWORD PTR es:[edi],eax
  42a503:	cmp    edi,DWORD PTR [edi+0x5c85dd01]
  42a509:	ins    BYTE PTR es:[edi],dx
  42a50a:	xchg   ebx,eax
  42a50b:	aas    
  42a50c:	jg     0x42a562
  42a50e:	fdivr  QWORD PTR [ebx]
  42a510:	mov    edi,0x70e6cfe8
  42a515:	add    BYTE PTR [ecx-0x2677007b],al
  42a51b:	jae    0x42a559
  42a51d:	mov    edi,0x4c89c3c0
  42a522:	inc    eax
  42a523:	sbb    DWORD PTR [ebx+edi*8-0x3f],edx
  42a527:	rcl    DWORD PTR [ebx-0x5],cl
  42a52a:	test   eax,0x2b32ffef
  42a52f:	cmp    BYTE PTR cs:[edi+0x448bf7a9],0x84
  42a537:	bound  ecx,QWORD PTR [edx-0xc]
  42a53a:	sbb    eax,0x8448bf0
  42a53f:	jno    0x42a583
  42a541:	clc    
  42a542:	out    dx,eax
  42a543:	(bad)  
  42a545:	je     0x42a547
  42a547:	inc    eax
  42a548:	outs   dx,BYTE PTR ds:[esi]
  42a549:	adc    eax,0x2200f2
  42a54e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a54f:	cmc    
  42a550:	repz ja 0x42a4d7
  42a553:	inc    eax
  42a554:	jmp    0xab3af5e5
  42a559:	pop    esp
  42a55a:	ffree  st(2)
  42a55c:	hlt    
  42a55d:	add    ebx,DWORD PTR [ebx+0x31]
  42a560:	sub    DWORD PTR [ebx+0x64],edx
  42a563:	push   eax
  42a564:	cdq    
  42a565:	add    BYTE PTR [eax+0x1c],al
  42a568:	rol    DWORD PTR [eax],1
  42a56a:	data16 cmc 
  42a56c:	sti    
  42a56d:	outs   dx,DWORD PTR ds:[esi]
  42a56e:	test   BYTE PTR [eax-0x17],al
  42a571:	(bad)  
  42a572:	mov    DWORD PTR gs:[eax-0x51e53d09],esi
  42a579:	inc    BYTE PTR [eax]
  42a57b:	push   edx
  42a57c:	cmc    
  42a57d:	(bad)  [edi-0x5c]
  42a580:	inc    eax
  42a581:	jmp    0xa79be80f
  42a586:	or     BYTE PTR [ebx+ecx*2-0x1b0d0fa2],dl
  42a58d:	cmp    BYTE PTR [ebx-0x3a],dl
  42a590:	dec    ebp
  42a591:	(bad)  
  42a592:	(bad)  
  42a594:	xor    al,0x65
  42a596:	inc    esp
  42a597:	xchg   esp,eax
  42a598:	xchg   DWORD PTR [ebx],ebp
  42a59a:	in     al,dx
  42a59b:	dec    esi
  42a59c:	or     esp,ebp
  42a59e:	adc    al,0xd4
  42a5a0:	add    BYTE PTR [eax+0x49],dh
  42a5a3:	push   0x100fa639
  42a5a8:	ins    DWORD PTR es:[edi],dx
  42a5a9:	call   0xb1ab39b1
  42a5ae:	(bad)  
  42a5af:	imul   eax,DWORD PTR [eax],0xffffffb9
  42a5b2:	dec    BYTE PTR [eax-0x6bbc094c]
  42a5b8:	mov    ebp,0x94c7a3
  42a5bd:	jmp    0x3195c2c5
  42a5c2:	lea    esp,[eax-0x3c]
  42a5c5:	call   FWORD PTR [edi+0x75]
  42a5c8:	shl    BYTE PTR [esi],1
  42a5ca:	sub    ah,BYTE PTR [ebx-0x6817ba84]
  42a5d0:	add    BYTE PTR [edi+0x6c],cl
  42a5d3:	inc    ebp
  42a5d4:	mov    esp,0xd8456450
  42a5d9:	push   eax
  42a5da:	push   cs
  42a5db:	call   0x139655b
  42a5e0:	sbb    al,0x32
  42a5e2:	add    ecx,ebp
  42a5e4:	xchg   edi,eax
  42a5e5:	inc    ebp
  42a5e6:	dec    edi
  42a5e7:	call   0xf997:0xa98d282f
  42a5ee:	adc    al,0xa5
  42a5f0:	xchg   DWORD PTR [eax+0x0],eax
  42a5f3:	jb     0x42a594
  42a5f5:	xchg   DWORD PTR [ecx+ecx*8+0x5e],edi
  42a5f9:	in     eax,dx
  42a5fa:	or     ah,BYTE PTR [ebp-0x69]
  42a5fd:	add    DWORD PTR [eax],eax
  42a5ff:	jmp    0x79579de6
  42a604:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a605:	inc    eax
  42a606:	add    BYTE PTR [eax-0x34],ah
  42a609:	clc    
  42a60a:	ss stos BYTE PTR es:[edi],al
  42a60c:	mov    ds:0x97e9e27c,al
  42a611:	add    BYTE PTR [eax+0x29],ch
  42a614:	sbb    ah,dh
  42a616:	cli    
  42a617:	cmp    al,bh
  42a619:	pop    edx
  42a61a:	inc    BYTE PTR [eax]
  42a61c:	cwde   
  42a61d:	ja     0x42a61f
  42a61f:	jmp    0x75579e0a
  42a624:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a625:	inc    eax
  42a626:	add    BYTE PTR [eax-0x34],ah
  42a629:	in     al,dx
  42a62a:	ss stos BYTE PTR es:[edi],al
  42a62c:	stos   DWORD PTR es:[edi],eax
  42a62d:	and    BYTE PTR [ebp+0x5050e7b4],cl
  42a633:	pop    esi
  42a634:	jl     0x42a6b2
  42a636:	adc    ebp,DWORD PTR [ecx-0x2a408269]
  42a63c:	mov    eax,ds:0xc1004485
  42a641:	dec    edi
  42a642:	not    DWORD PTR ds:0x40199500
  42a648:	add    BYTE PTR [eax-0x41],ch
  42a64b:	jae    0x42a650
  42a64d:	je     0x42a6af
  42a64f:	hlt    
  42a650:	mov    ecx,eax
  42a652:	xlat   BYTE PTR ds:[ebx]
  42a653:	or     al,BYTE PTR [eax-0x13]
  42a656:	imul   ecx,DWORD PTR [eax],0x64cd8257
  42a65c:	or     cl,BYTE PTR [edx]
  42a65e:	test   DWORD PTR [ebx-0x10],eax
  42a661:	xchg   edx,eax
  42a662:	int    0x4a
  42a664:	dec    DWORD PTR [eax-0x11]
  42a667:	xchg   DWORD PTR [ebp-0x77],eax
  42a66a:	dec    edx
  42a66b:	not    DWORD PTR ds:0x400f69
  42a671:	and    al,0x3b
  42a673:	in     al,dx
  42a674:	cmp    ebp,esi
  42a676:	js     0x42a6ea
  42a678:	mov    edi,DWORD PTR [eax-0x24]
  42a67b:	or     al,BYTE PTR [eax+0x7d]
  42a67e:	dec    edi
  42a67f:	div    DWORD PTR [ebp+0x55]
  42a682:	cmc    
  42a683:	ror    BYTE PTR [ecx-0x3cce1f48],1
  42a689:	mov    ecx,0x7d206852
  42a68e:	ret    
  42a68f:	cmp    dl,BYTE PTR [ebx-0x52]
  42a692:	dec    ebp
  42a693:	div    DWORD PTR [ebp+0x19]
  42a696:	cmc    
  42a697:	jae    0x42a689
  42a699:	sahf   
  42a69a:	push   ecx
  42a69b:	div    DWORD PTR [ebp+0x25]
  42a69e:	cmc    
  42a69f:	adc    edi,DWORD PTR [eax-0x7affc093]
  42a6a5:	in     eax,dx
  42a6a6:	ja     0x42a6e1
  42a6a8:	cmp    DWORD PTR [eax],eax
  42a6aa:	mov    al,ds:0xb6206ef8
  42a6af:	inc    ebx
  42a6b0:	int3   
  42a6b1:	sub    esp,eax
  42a6b3:	stos   BYTE PTR es:[edi],al
  42a6b4:	add    DWORD PTR [ebp+0x5d],0x94f473f5
  42a6bb:	fiadd  DWORD PTR [esi-0x39]
  42a6be:	mov    edi,0x5c0ab69c
  42a6c3:	es push esp
  42a6c5:	push   ecx
  42a6c6:	add    ebp,DWORD PTR [esi+esi*8+0x1869a1fa]
  42a6cd:	inc    eax
  42a6ce:	xchg   esp,eax
  42a6cf:	and    dh,BYTE PTR [ebx+0x8]
  42a6d2:	sbb    DWORD PTR [edx+edx*8-0x13fa9606],ebx
  42a6d9:	shl    ecx,cl
  42a6db:	or     ebp,edi
  42a6dd:	xchg   BYTE PTR [ecx+0x9],dl
  42a6e0:	xchg   DWORD PTR [esp+edi*4-0x7],eax
  42a6e4:	jb     0x42a6c2
  42a6e6:	ret    
  42a6e7:	imul   esi,edi,0xfffffffa
  42a6ea:	loop   0x42a6d5
  42a6ec:	jno    0x42a6da
  42a6ee:	mov    bl,0xcb
  42a6f0:	loop   0x42a701
  42a6f2:	push   esp
  42a6f3:	jmp    0xd1df1bf3
  42a6f8:	adc    esp,edx
  42a6fa:	test   BYTE PTR [ecx],ch
  42a6fc:	add    al,0x53
  42a6fe:	xchg   ebx,eax
  42a6ff:	in     eax,dx
  42a700:	ror    BYTE PTR [edi],cl
  42a702:	aam    0xe7
  42a704:	xor    eax,0x242c685d
  42a709:	push   0x3f5bdc
  42a70e:	add    BYTE PTR [ebx+0x2d],dh
  42a711:	fdivr  st,st(2)
  42a713:	sbb    DWORD PTR [ebx+0x11],0xbfde9440
  42a71a:	jae    0x42a6ad
  42a71c:	mov    dh,BYTE PTR [ecx-0x28]
  42a71f:	push   ebx
  42a720:	mov    eax,0x7b6074fb
  42a725:	adc    DWORD PTR [esi+eiz*4+0x27],ebx
  42a729:	add    al,0x87
  42a72b:	sar    DWORD PTR [edi+0x5b],1
  42a72e:	pop    edx
  42a72f:	iret   
  42a730:	mov    al,ds:0x9403c0
  42a735:	mov    esp,0xd4f1c755
  42a73a:	daa    
  42a73b:	test   cl,dh
  42a73d:	sti    
  42a73e:	and    DWORD PTR [ecx+0x388e940],0xffffffb4
  42a745:	push   eax
  42a746:	add    BYTE PTR [eax+eax*1+0x2e7dfefe],dl
  42a74d:	jae    0x42a7b2
  42a74f:	fnstcw WORD PTR ds:0xbef55e9
  42a755:	adc    eax,0x1a005411
  42a75a:	ss inc eax
  42a75c:	mov    ebx,0x5dbc03a5
  42a761:	idiv   ch
  42a763:	into   
  42a764:	jge    0x42a731
  42a766:	push   edi
  42a767:	fnstcw WORD PTR ds:0xc06b03e9
  42a76d:	call   0x40:0x24551365
  42a774:	xchg   esp,eax
  42a775:	icebp  
  42a776:	sti    
  42a777:	repz xchg ecx,eax
  42a779:	inc    eax
  42a77a:	jmp    0xe9439d6b
  42a77f:	add    esp,ebx
  42a781:	push   0xcac149
  42a786:	ret    0x7011
  42a789:	push   cs
  42a78a:	sub    DWORD PTR [edi+ecx*4],eax
  42a78d:	test   eax,0x3d5957d3
  42a792:	jmp    0x3cf4f69d
  42a797:	shl    DWORD PTR [edx-0x1a272200],0x45
  42a79e:	push   eax
  42a79f:	aam    0x96
  42a7a1:	add    cl,ch
  42a7a3:	jmp    0x42a792
  42a7a5:	push   cs
  42a7a6:	cmp    ebx,0x17
  42a7a9:	shl    ah,0x69
  42a7ac:	vphsubdq ymm1,xmm3
  42a7b1:	mov    ebx,0xbc1ae93e
  42a7b6:	es cs jae 0x42a782
  42a7ba:	mov    ebp,?
  42a7bc:	xchg   edi,eax
  42a7bd:	lahf   
  42a7be:	push   ebx
  42a7bf:	sub    al,0x5b
  42a7c1:	add    BYTE PTR [esi+0x5c],cl
  42a7c4:	pushf  
  42a7c5:	dec    eax
  42a7c6:	push   ecx
  42a7c7:	cdq    
  42a7c8:	out    dx,eax
  42a7c9:	sub    BYTE PTR [edi],cl
  42a7cb:	aas    
  42a7cc:	push   ecx
  42a7ce:	adc    ebx,DWORD PTR [ebp+0x5c0031d4]
  42a7d4:	xchg   esp,eax
  42a7d5:	xor    eax,0x64002650
  42a7da:	sbb    al,0x18
  42a7dc:	mov    ebx,0x170f1cef
  42a7e1:	iret   
  42a7e2:	pop    esi
  42a7e3:	mov    DWORD PTR [ebx+eiz*2-0x4d16c145],edi
  42a7ea:	das    
  42a7eb:	(bad)  
  42a7ec:	in     eax,dx
  42a7ed:	call   0x83f5:0xaddb14e8
  42a7f4:	sub    DWORD PTR [ebx+ebx*1],esp
  42a7f7:	xchg   esp,esi
  42a7f9:	push   ebx
  42a7fa:	mov    ebx,0xfd0ce93e
  42a7ff:	cmp    bh,BYTE PTR [ecx]
  42a801:	lahf   
  42a802:	mov    bl,0x4
  42a804:	sub    eax,0xc6002f55
  42a809:	repz and al,0x18
  42a80c:	ins    BYTE PTR es:[edi],dx
  42a80d:	jnp    0x42a850
  42a80f:	push   eax
  42a810:	shr    DWORD PTR [eax-0x2],0xf9
  42a814:	scas   al,BYTE PTR es:[edi]
  42a815:	cmc    
  42a816:	jns    0x42a834
  42a818:	inc    ebp
  42a819:	push   ebp
  42a81a:	das    
  42a81b:	add    BYTE PTR [ecx],dl
  42a81d:	lock lds edi,FWORD PTR [esi]
  42a820:	jmp    0xfc32bd73
  42a825:	xlat   BYTE PTR ds:[ebx]
  42a826:	add    BYTE PTR [edi+0x0],dl
  42a829:	jp     0x42a875
  42a82b:	pop    ebp
  42a82c:	ret    0x431
  42a82f:	dec    esi
  42a830:	mov    esi,0x39c19d
  42a835:	sub    ebx,0x13
  42a838:	in     al,dx
  42a839:	pop    ds
  42a83a:	inc    esp
  42a83b:	add    BYTE PTR [edx+0x0],ch
  42a83e:	and    DWORD PTR [edi+esi*8+0x35],ecx
  42a842:	cdq    
  42a843:	sar    BYTE PTR [ecx],0x0
  42a846:	shl    DWORD PTR [esi+0x42ec552],cl
  42a84c:	call   0xf62c87cc
  42a851:	xor    edi,DWORD PTR [ebp-0xadbbbd4]
  42a857:	pop    edi
  42a858:	or     eax,0x81001ff
  42a85d:	push   eax
  42a85e:	outs   dx,BYTE PTR ds:[esi]
  42a85f:	mov    ebx,0x4795e8f5
  42a864:	idiv   bh
  42a866:	add    esp,DWORD PTR [edi+0x3eec426]
  42a86c:	not    DWORD PTR ds:0x4014bd
  42a872:	or     eax,esi
  42a874:	(bad)  
  42a875:	inc    DWORD PTR [eax]
  42a877:	jg     0x42a85f
  42a879:	adc    ecx,0xffffffec
  42a87c:	jg     0x42a86a
  42a87e:	inc    ecx
  42a87f:	add    eax,0x52ce0000
  42a884:	dec    edi
  42a885:	mov    ebx,eax
  42a887:	cld    
  42a888:	test   bh,bh
  42a88a:	mov    ch,BYTE PTR [edi+0x36]
  42a88d:	add    DWORD PTR [ebp+0x3],ebp
  42a890:	call   0xf62d4684
  42a895:	test   BYTE PTR ds:0x6c3283f9,bh
  42a89b:	add    eax,DWORD PTR [eax]
  42a89d:	mov    esi,DWORD PTR [edx+0x13d00]
  42a8a3:	xchg   esp,eax
  42a8a4:	(bad)  
  42a8a6:	call   FWORD PTR [ebx+0x43ffb564]
  42a8ac:	fldenv [esi+0x60]
  42a8af:	push   ecx
  42a8b0:	sbb    al,BYTE PTR [ebx+edi*8]
  42a8b3:	mov    DWORD PTR [ebp+0x7944011],eax
  42a8b9:	test   DWORD PTR [esp+edi*4],edi
  42a8bc:	sbb    al,0x45
  42a8be:	add    BYTE PTR [esi+ebx*8-0x266b7380],dl
  42a8c5:	(bad)  
  42a8c6:	mov    bh,0xb
  42a8c8:	ds add al,0x0
  42a8cb:	jp     0x42a8a5
  42a8cd:	stc    
  42a8ce:	push   edi
  42a8cf:	rcr    DWORD PTR [ecx-0x2977302],1
  42a8d5:	pop    ds
  42a8d6:	mov    eax,0xfffed90f
  42a8db:	in     al,dx
  42a8dc:	shl    BYTE PTR [ebp-0x5],1
  42a8df:	(bad)  [ecx-0x42]
  42a8e2:	dec    edi
  42a8e3:	mov    esp,0xcbfaf845
  42a8e8:	pop    edi
  42a8e9:	inc    eax
  42a8ea:	and    al,0x90
  42a8ec:	pop    esp
  42a8ed:	les    esi,FWORD PTR [ebx+0x37]
  42a8f0:	pop    esp
  42a8f1:	jo     0x42a917
  42a8f3:	jo     0x42a926
  42a8f5:	xchg   edi,eax
  42a8f6:	jmp    FWORD PTR [ebx+0x2d05e6d8]
  42a8fc:	out    0xf7,al
  42a8fe:	mov    WORD PTR [eax],fs
  42a900:	add    eax,0xd82eb814
  42a905:	(bad)  
  42a906:	inc    DWORD PTR [eax]
  42a908:	jl     0x42a8c6
  42a90a:	data16 sti 
  42a90c:	cmp    DWORD PTR [ecx+0x22],0xffffffc4
  42a910:	xlat   BYTE PTR ds:[ebx]
  42a911:	xlat   BYTE PTR ds:[ebx]
  42a912:	jns    0x42a8d3
  42a914:	call   0x6c3234f2
  42a919:	aad    0x2
  42a91b:	paddq  mm0,QWORD PTR [eax]
  42a91e:	jmp    0x75770876
  42a923:	mov    bl,0x92
  42a925:	add    BYTE PTR [edi+edi*1+0x70],ah
  42a929:	inc    esp
  42a92a:	xor    edx,DWORD PTR [ebx+ecx*1+0x5]
  42a92e:	call   0x3cbe3d36
  42a933:	pop    ds
  42a934:	sbb    al,0x0
  42a936:	jmp    0x14b3e53e
  42a93b:	cli    
  42a93c:	push   ds
  42a93d:	jp     0x42a91b
  42a93f:	pop    ds
  42a940:	js     0x42a8c3
  42a942:	and    al,0x13
  42a944:	sbb    eax,esi
  42a946:	mov    eax,0x4a71baeb
  42a94b:	clc    
  42a94c:	sbb    al,BYTE PTR [edi]
  42a94e:	fwait
  42a94f:	clc    
  42a950:	dec    ebx
  42a951:	clc    
  42a952:	ins    DWORD PTR es:[edi],dx
  42a953:	jbe    0x42a8f1
  42a955:	pop    eax
  42a956:	leave  
  42a957:	mov    esi,0xe2a00aa
  42a95c:	in     al,0x12
  42a95e:	test   eax,0xdc6ff303
  42a963:	add    edx,DWORD PTR [ebp+0x326ee900]
  42a969:	or     DWORD PTR [ecx+0x74ab000b],0x2457868d
  42a973:	adc    DWORD PTR [ebx-0x51],0x540f7913
  42a97a:	add    BYTE PTR [ebx+eax*8+0x27],ah
  42a97e:	push   ebx
  42a97f:	dec    edi
  42a980:	add    al,0x32
  42a982:	imul   DWORD PTR [ebx+0x40]
  42a985:	mov    eax,0x17893908
  42a98a:	and    al,0x65
  42a98c:	add    al,0x94
  42a98e:	add    BYTE PTR [ecx],bl
  42a990:	pop    es
  42a991:	aas    
  42a992:	inc    ebp
  42a993:	jmp    0x42a9b5
  42a995:	outs   dx,DWORD PTR ds:[esi]
  42a996:	add    BYTE PTR [eax],al
  42a998:	jmp    0x373dfa34
  42a99d:	nop
  42a99e:	jmp    0x40c6ceb7
  42a9a3:	add    BYTE PTR [eax+ebx*2+0x67],ah
  42a9a7:	sub    eax,0x7500486a
  42a9ac:	fcom   QWORD PTR [esi]
  42a9ae:	push   0x8
  42a9b0:	icebp  
  42a9b1:	(bad)  
  42a9b2:	mul    DWORD PTR [edi-0x3f]
  42a9b5:	sbb    al,0x2d
  42a9b7:	add    BYTE PTR [edx+0x708699a],al
  42a9bd:	pop    ss
  42a9be:	imul   esp,DWORD PTR [ecx+edi*8],0x1a115e77
  42a9c5:	loope  0x42aa25
  42a9c7:	mov    DWORD PTR [ebp-0x5a72ef35],esp
  42a9cd:	mov    ds:0x515010,eax
  42a9d2:	outs   dx,DWORD PTR ds:[esi]
  42a9d3:	jmp    0x42a9cf
  42a9d5:	ds arpl cx,bp
  42a9d8:	adc    al,0x39
  42a9da:	test   BYTE PTR [eax+0x0],al
  42a9dd:	mov    cs,WORD PTR [ecx+0x55]
  42a9e0:	xchg   DWORD PTR [edi*1+0x64e903ae],ecx
  42a9e7:	test   ebx,ebp
  42a9e9:	mov    edi,0xb608741e
  42a9ee:	push   ecx
  42a9ef:	jmp    0x40e6af08
  42a9f4:	add    BYTE PTR [edx-0x50],dh
  42a9f7:	ja     0x42aa75
  42a9f9:	loope  0x42a9ba
  42a9fb:	js     0x42aa17
  42a9fd:	out    dx,eax
  42a9fe:	stos   BYTE PTR es:[edi],al
  42a9ff:	cmp    BYTE PTR [edi-0x3d7a64a4],0xd0
  42aa06:	sbb    al,0xec
  42aa08:	cli    
  42aa09:	jmp    0x654d9122
  42aa0e:	adc    eax,0x6d00faec
  42aa13:	jg     0x42aa0d
  42aa15:	add    DWORD PTR [ecx+0x70fe7af6],ebp
  42aa1b:	pop    esp
  42aa1c:	add    eax,0x73eb3383
  42aa21:	jae    0x42a9c1
  42aa23:	cmp    esi,edi
  42aa25:	adc    eax,0x40150d
  42aa2a:	mov    dh,0xc7
  42aa2c:	sbb    ebx,0xffffffa9
  42aa2f:	pusha  
  42aa30:	add    esi,0xffffff85
  42aa33:	jo     0x42aa52
  42aa35:	add    DWORD PTR [eax],0x5
  42aa38:	out    dx,al
  42aa39:	outs   dx,BYTE PTR ds:[esi]
  42aa3a:	or     DWORD PTR [esi+0x457500d7],edi
  42aa40:	ja     0x42aa33
  42aa42:	jmp    0x42aa5e
  42aa44:	dec    edi
  42aa45:	bound  eax,QWORD PTR [ecx]
  42aa47:	jle    0x42aa00
  42aa49:	cmc    
  42aa4a:	call   0x38e144
  42aa4f:	jbe    0x42aa38
  42aa51:	loope  0x42aa5b
  42aa53:	push   ds
  42aa54:	pop    edx
  42aa55:	add    bl,ch
  42aa57:	bound  esi,QWORD PTR [esi+0x7b]
  42aa5a:	or     BYTE PTR [eax-0xe],bh
  42aa5d:	outs   dx,BYTE PTR ds:[esi]
  42aa5e:	sub    eax,0x43c55f73
  42aa63:	in     eax,dx
  42aa64:	cmp    eax,0x11a115f7
  42aa69:	inc    eax
  42aa6a:	add    BYTE PTR ds:0xad408d34,dl
  42aa70:	xlat   BYTE PTR ds:[ebx]
  42aa71:	enter  0x92fc,0xf2
  42aa75:	dec    ebp
  42aa76:	call   0x389de0
  42aa7b:	or     esi,ebx
  42aa7d:	adc    esi,eax
  42aa7f:	mov    edi,0xb63b003f
  42aa84:	jo     0x42aa84
  42aa86:	push   esi
  42aa87:	gs aaa 
  42aa89:	adc    dh,bh
  42aa8b:	xchg   esp,eax
  42aa8c:	shl    ah,cl
  42aa8e:	je     0x42aa1c
  42aa90:	mov    edx,0x19a5d40a
  42aa95:	add    al,0x57
  42aa97:	pop    ds
  42aa98:	and    al,0xc
  42aa9a:	pop    ebx
  42aa9b:	add    dl,cl
  42aa9d:	adc    al,0xbe
  42aa9f:	add    edx,DWORD PTR [esi+ebx*2-0x66eefbc6]
  42aaa6:	outs   dx,DWORD PTR ds:[esi]
  42aaa7:	pop    es
  42aaa8:	in     al,0x8a
  42aaaa:	or     dh,ah
  42aaac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42aaad:	sbb    DWORD PTR [edi+edi*2],eax
  42aab0:	mov    edx,0x9286fee5
  42aab5:	pop    esp
  42aab6:	les    esi,FWORD PTR [ebx-0x62]
  42aab9:	or     ebp,esi
  42aabb:	adc    al,0xf4
  42aabd:	(bad)  
  42aabe:	add    BYTE PTR ds:[edi],dl
  42aac1:	ret    
  42aac2:	(bad)  
  42aac3:	mov    esi,0xffffe9ac
  42aac8:	xchg   esp,eax
  42aac9:	rcl    DWORD PTR [esi-0x1926a8b1],1
  42aacf:	mov    cl,0x43
  42aad1:	fsin   
  42aad3:	cs sti 
  42aad5:	outs   dx,DWORD PTR ds:[esi]
  42aad6:	jae    0x42aab8
  42aad8:	sbb    eax,0x9665d2ac
  42aadd:	mov    cl,BYTE PTR [ebx-0x73]
  42aae0:	pop    ecx
  42aae1:	cmp    DWORD PTR [ebx+edi*8+0x61],edx
  42aae5:	cmc    
  42aae6:	repz xor al,0xd0
  42aae9:	inc    esi
  42aaea:	inc    ecx
  42aaeb:	add    BYTE PTR [esi],bh
  42aaed:	adc    cl,BYTE PTR [ecx+0x3ee6f834]
  42aaf3:	add    BYTE PTR [ebx+0x29bf7b0a],bh
  42aaf9:	loop   0x42ab2b
  42aafb:	sar    BYTE PTR [ebp+0x3fe],0x94
  42ab02:	jg     0x42ab04
  42ab04:	push   ebx
  42ab05:	inc    ebx
  42ab06:	add    BYTE PTR [esi+edi*1+0x70],dh
  42ab0a:	push   ecx
  42ab0b:	fisubr DWORD PTR [esi-0x68]
  42ab0e:	jmp    0x3e75af2e
  42ab13:	jmp    0x9b2d2a81
  42ab18:	jle    0x42ab4d
  42ab1a:	jne    0x42aae5
  42ab1c:	imul   esp,DWORD PTR [eax-0x5fc1708],0xfffffff8
  42ab23:	test   eax,0x2596742e
  42ab28:	add    al,0x4f
  42ab2a:	adc    al,0xe5
  42ab2c:	adc    ah,dl
  42ab2e:	add    BYTE PTR [esi-0x25],bl
  42ab31:	or     al,0x4c
  42ab33:	mov    cl,0x38
  42ab35:	pop    edi
  42ab36:	jne    0x42aae5
  42ab38:	imul   edx,DWORD PTR [ebp-0x6bfc8658],0xdc728100
  42ab42:	jmp    0xab5d36b0
  42ab47:	sbb    BYTE PTR [esp+edx*4],cl
  42ab4a:	add    BYTE PTR [eax+0x78],dh
  42ab4d:	nop
  42ab4e:	shl    DWORD PTR [ebp-0x16ff5ef9],0x3
  42ab55:	or     DWORD PTR [esi],edi
  42ab57:	fst    DWORD PTR [ebx-0x4]
  42ab5a:	pop    ecx
  42ab5b:	jg     0x42ab52
  42ab5d:	out    dx,al
  42ab5e:	jne    0x42ab0b
  42ab60:	jecxz  0x42ab6e
  42ab62:	ds in  eax,dx
  42ab64:	mov    BYTE PTR [eax],al
  42ab66:	push   eax
  42ab67:	int3   
  42ab68:	outs   dx,DWORD PTR ds:[esi]
  42ab69:	inc    eax
  42ab6a:	push   esp
  42ab6b:	jnp    0x42abc0
  42ab6d:	loope  0x42ab3e
  42ab6f:	jmp    0x53b09685
  42ab74:	or     dh,ah
  42ab76:	dec    ebx
  42ab77:	fdiv   DWORD PTR [ecx]
  42ab79:	dec    ebp
  42ab7a:	scas   eax,DWORD PTR es:[edi]
  42ab7b:	jmp    0xd790bf
  42ab80:	add    cl,ch
  42ab82:	or     al,0xc0
  42ab84:	shr    ecx,0x97
  42ab87:	inc    eax
  42ab88:	dec    ecx
  42ab89:	pop    esp
  42ab8a:	cmp    DWORD PTR [esi-0x1979467c],0x97edfa
  42ab94:	add    BYTE PTR [edx+0x5f],ah
  42ab97:	sub    dh,0x74
  42ab9a:	sbb    eax,0x67bef9b9
  42ab9f:	loope  0x42ab55
  42aba1:	aas    
  42aba2:	addr16 out 0xc1,al
  42aba5:	and    al,0x97
  42aba7:	(bad)  
  42aba8:	jle    0x42abb6
  42abaa:	inc    esp
  42abab:	jmp    0xe68ac035
  42abb0:	jno    0x42ab93
  42abb2:	loope  0x42abb4
  42abb4:	sti    
  42abb5:	pop    ss
  42abb6:	mov    ebp,fs
  42abb8:	adc    al,0xbd
  42abba:	lea    eax,[eax+0x0]
  42abbd:	push   0x5c
  42abbf:	cmc    
  42abc0:	push   edx
  42abc1:	sbb    ah,BYTE PTR [edi]
  42abc3:	outs   dx,DWORD PTR ds:[esi]
  42abc4:	add    al,0x6e
  42abc6:	jge    0x42abf8
  42abc8:	adc    ch,BYTE PTR [ecx-0x3b966900]
  42abce:	in     eax,dx
  42abcf:	adc    bh,BYTE PTR [esp+edi*8]
  42abd2:	push   esi
  42abd3:	jecxz  0x42abcf
  42abd5:	sub    DWORD PTR cs:[eax-0x57],edx
  42abd9:	xchg   ah,cl
  42abdb:	iret   
  42abdc:	mov    esi,0x6997ee44
  42abe1:	dec    ebp
  42abe2:	xor    eax,0x115c81e7
  42abe7:	inc    ebx
  42abe8:	fsubr  st,st(2)
  42abea:	test   ebp,0x96a485e5
  42abf0:	fcom   st(3)
  42abf2:	push   edi
  42abf3:	cwde   
  42abf4:	add    BYTE PTR [esi-0x78ac681f],bh
  42abfa:	add    BYTE PTR [ecx-0x4f77197d],cl
  42ac00:	cld    
  42ac01:	call   DWORD PTR [ebp+0x2]
  42ac04:	cmp    BYTE PTR [ebx-0xa125888],0xe8
  42ac0b:	popf   
  42ac0c:	adc    esi,esi
  42ac0e:	inc    DWORD PTR [esi]
  42ac10:	test   eax,0xf36afa92
  42ac15:	bound  ecx,QWORD PTR [eax-0x74fffb90]
  42ac1b:	inc    edx
  42ac1c:	inc    esi
  42ac1d:	add    BYTE PTR [eax+0x2a],dl
  42ac20:	or     DWORD PTR [esi+edx*1],esi
  42ac23:	lods   eax,DWORD PTR ds:[esi]
  42ac24:	cld    
  42ac25:	jp     0x42abeb
  42ac27:	cmp    DWORD PTR [ecx-0x2f],edi
  42ac2a:	je     0x42ac6b
  42ac2c:	sub    dh,BYTE PTR gs:[ebx]
  42ac2f:	add    ch,bh
  42ac31:	js     0x42ac23
  42ac33:	pop    edi
  42ac34:	cmp    dl,BYTE PTR [eax-0x410ba146]
  42ac3a:	bound  esp,QWORD PTR [esp+edi*1]
  42ac3d:	add    al,0x0
  42ac3f:	push   0x3b53a5
  42ac44:	adc    eax,0x2d00b63b
  42ac49:	das    
  42ac4a:	ror    DWORD PTR [ecx+0x458be3d8],cl
  42ac50:	rcl    DWORD PTR [ebx-0x9],0x15
  42ac54:	dec    ebp
  42ac55:	or     eax,0xf33d0040
  42ac5a:	adc    ecx,DWORD PTR [esi+ecx*8+0x43]
  42ac5e:	add    BYTE PTR [ecx-0x3cce47d0],cl
  42ac64:	cli    
  42ac65:	jg     0x42ac71
  42ac67:	add    ebp,ebp
  42ac69:	add    edi,DWORD PTR [ecx]
  42ac6b:	pop    ebp
  42ac6c:	xchg   ecx,eax
  42ac6d:	jno    0x42acac
  42ac6f:	mov    esi,eax
  42ac71:	mov    bh,0x81
  42ac73:	xor    al,0x94
  42ac75:	jno    0x42abff
  42ac77:	icebp  
  42ac78:	inc    eax
  42ac79:	rcr    DWORD PTR [esi+edi*8+0x3b],0x99
  42ac7e:	jg     0x42acbf
  42ac80:	xchg   esp,eax
  42ac81:	(bad)  
  42ac82:	in     eax,dx
  42ac83:	adc    al,0x24
  42ac85:	retf   0x3e
  42ac88:	adc    DWORD PTR [edx],ebx
  42ac8a:	js     0x42ac9e
  42ac8c:	and    DWORD PTR [edi],esp
  42ac8e:	or     BYTE PTR [ebp+0x30dbc209],cl
  42ac94:	add    BYTE PTR [edi],al
  42ac96:	shl    al,1
  42ac98:	test   BYTE PTR [esp+ecx*2+0x9],dl
  42ac9c:	xchg   ecx,ebx
  42ac9e:	mov    eax,ds:0xf1e1bf82
  42aca3:	inc    ebx
  42aca4:	aaa    
  42aca5:	rol    DWORD PTR [ebp-0x25903791],0x75
  42acac:	inc    esp
  42acad:	xor    al,0x9e
  42acaf:	jb     0x42ac8d
  42acb1:	dec    ebx
  42acb2:	in     al,dx
  42acb3:	xchg   BYTE PTR ds:0x7c83d9d4,cl
  42acb9:	xor    al,0xd9
  42acbb:	inc    DWORD PTR [ebx-0x12711]
  42acc1:	pop    ss
  42acc2:	in     al,0xde
  42acc4:	cli    
  42acc5:	xchg   ebx,eax
  42acc6:	push   ebp
  42acc7:	scas   eax,DWORD PTR es:[edi]
  42acc8:	call   FWORD PTR [ebx]
  42acca:	fnstenv [eax-0x1265c01]
  42acd0:	push   ecx
  42acd1:	cld    
  42acd2:	push   edx
  42acd3:	sti    
  42acd4:	stc    
  42acd5:	add    esp,DWORD PTR [edx-0x14]
  42acd8:	mov    BYTE PTR [ecx+0x31],bh
  42acdb:	cmp    edx,0xffffffa3
  42acde:	push   ebp
  42acdf:	xchg   edi,edi
  42ace1:	jmp    0x42acbb
  42ace3:	pop    eax
  42ace4:	xchg   sp,ax
  42ace6:	ret    
  42ace7:	(bad)  
  42ace8:	gs nop
  42acea:	xchg   edx,eax
  42aceb:	push   ebx
  42acec:	sti    
  42aced:	dec    ecx
  42acee:	add    BYTE PTR [ecx],cl
  42acf0:	icebp  
  42acf1:	mov    al,ds:0x9443f780
  42acf6:	jns    0x42aca3
  42acf8:	iret   
  42acf9:	add    BYTE PTR [eax],dl
  42acfb:	rcl    BYTE PTR [ebp+eax*2+0x4055d33],0x46
  42ad03:	push   eax
  42ad04:	xchg   edx,eax
  42ad05:	lock mov BYTE PTR [eax],dh
  42ad08:	fild   DWORD PTR [ebx-0x6c]
  42ad0b:	and    DWORD PTR [eax+eax*1],0x1d
  42ad0f:	test   BYTE PTR [ecx+esi*8-0x26921972],dh
  42ad16:	sbb    dh,BYTE PTR [esi-0x18b0799d]
  42ad1c:	leave  
  42ad1d:	lock jnp 0x42ad4f
  42ad20:	cmp    esi,ecx
  42ad22:	outs   dx,BYTE PTR ds:[esi]
  42ad23:	sub    BYTE PTR [ebx],0xf0
  42ad26:	pop    esi
  42ad27:	(bad)  
  42ad29:	xor    al,0x54
  42ad2b:	inc    ecx
  42ad2c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ad2d:	jl     0x42ace7
  42ad2f:	fsub   DWORD PTR [ebp+0x3e]
  42ad32:	dec    eax
  42ad33:	out    0x6d,al
  42ad35:	outs   dx,BYTE PTR ds:[esi]
  42ad36:	pop    esp
  42ad37:	out    0x1b,al
  42ad39:	sar    BYTE PTR [esi],1
  42ad3b:	or     al,0x95
  42ad3d:	adc    edx,esp
  42ad3f:	add    BYTE PTR [ecx+0x33],al
  42ad42:	pushf  
  42ad43:	add    cl,ch
  42ad45:	sub    dl,bh
  42ad47:	cld    
  42ad48:	cld    
  42ad49:	inc    dh
  42ad4b:	jns    0x42ad58
  42ad4d:	cld    
  42ad4e:	sti    
  42ad4f:	dec    esi
  42ad50:	out    0x3,al
  42ad52:	xchg   esp,eax
  42ad53:	jp     0x42ad95
  42ad55:	fcom   QWORD PTR [ebx-0x7f0f45b0]
  42ad5b:	clc    
  42ad5c:	dec    ecx
  42ad5d:	push   ss
  42ad5e:	add    BYTE PTR [esi+ecx*1-0x4394fc57],ah
  42ad65:	in     al,dx
  42ad66:	mov    ah,0x94
  42ad68:	dec    ebp
  42ad69:	add    BYTE PTR [ecx+0x62],al
  42ad6c:	repz stc 
  42ad6e:	cs sbb ecx,edi
  42ad71:	jae    0x42ad67
  42ad73:	les    ebp,FWORD PTR [eax+eiz*8+0x1e]
  42ad77:	stos   BYTE PTR es:[edi],al
  42ad78:	mov    al,ds:0xb097a90d
  42ad7d:	add    BYTE PTR [edx],al
  42ad7f:	cdq    
  42ad80:	push   ss
  42ad81:	rcl    BYTE PTR [ecx],0x69
  42ad84:	mov    ds:0x1d9e8ff,eax
  42ad89:	add    ah,ch
  42ad8b:	scas   al,BYTE PTR es:[edi]
  42ad8c:	xchg   BYTE PTR ds:0x44b81135,ah
  42ad92:	pop    ebp
  42ad93:	add    BYTE PTR [edx],bh
  42ad95:	test   eax,0x9608bbea
  42ad9a:	bound  ebp,QWORD PTR [edi+0xe]
  42ad9d:	lea    ebp,[ecx]
  42ad9f:	sub    DWORD PTR [edi-0x6a140cc0],0x2b269551
  42ada9:	stos   BYTE PTR es:[edi],al
  42adaa:	dec    ebx
  42adab:	es lahf 
  42adad:	dec    ebp
  42adae:	sbb    esi,eax
  42adb0:	cmp    DWORD PTR [ecx],ebp
  42adb2:	aam    0xbd
  42adb4:	cmp    bl,ah
  42adb6:	aaa    
  42adb7:	dec    ecx
  42adb8:	adc    eax,0x378c24a5
  42adbd:	es mov esi,0x3ed636c1
  42adc3:	add    BYTE PTR [ecx],bh
  42adc5:	std    
  42adc6:	xchg   esp,eax
  42adc7:	xchg   esp,eax
  42adc8:	out    0x2d,al
  42adca:	stos   BYTE PTR es:[edi],al
  42adcb:	jmp    0x2bbff8e4
  42add0:	(bad)  
  42add1:	cmp    DWORD PTR [esi],ebx
  42add3:	inc    ch
  42add5:	mov    esi,0xb4840568
  42adda:	push   eax
  42addb:	xchg   BYTE PTR [edx-0x498140be],dl
  42ade1:	mov    al,0xbb
  42ade3:	add    BYTE PTR ds:0xb6a9075c,bh
  42ade9:	ja     0x42ada7
  42adeb:	cmc    
  42adec:	sbb    DWORD PTR [edi],ebp
  42adee:	lahf   
  42adef:	sub    edi,DWORD PTR [esi-0x63c5581]
  42adf5:	aad    0xc1
  42adf7:	lea    edi,[ebx]
  42adf9:	jno    0x42ae42
  42adfb:	test   eax,0xfa943bad
  42ae00:	cmp    dh,0x62
  42ae03:	lea    ecx,[esi+0x1c41aa9a]
  42ae09:	sub    BYTE PTR [ecx-0x260d6caa],dh
  42ae0f:	jmp    0xd3c5:0xd785eb2d
  42ae16:	add    DWORD PTR [ebp+0x56191ec5],ecx
  42ae1c:	mov    DWORD PTR [edx+0x4f],ecx
  42ae1f:	inc    ecx
  42ae20:	fldcw  WORD PTR [ebx+0x47]
  42ae23:	test   eax,0x3c3ab208
  42ae28:	add    BYTE PTR [ebp-0x7b2373d9],bh
  42ae2e:	aad    0xf9
  42ae30:	mov    WORD PTR [ebp+0x3d],?
  42ae33:	xchg   edi,ecx
  42ae35:	push   esp
  42ae36:	outs   dx,DWORD PTR ds:[esi]
  42ae37:	mov    edx,0x172ea9ed
  42ae3c:	inc    ecx
  42ae3d:	inc    ecx
  42ae3e:	sbb    esi,DWORD PTR [eax-0x4f90b8aa]
  42ae44:	(bad)  [ecx]
  42ae46:	pop    esi
  42ae47:	mov    edx,0x171a29ed
  42ae4c:	inc    ecx
  42ae4d:	cwde   
  42ae4e:	fwait
  42ae4f:	stos   BYTE PTR es:[edi],al
  42ae50:	push   esi
  42ae51:	sub    DWORD PTR [edx+0x7364bd34],esi
  42ae57:	dec    eax
  42ae58:	test   eax,0x8d01d33d
  42ae5d:	xchg   esp,eax
  42ae5e:	jmp    0xf140014b
  42ae63:	add    DWORD PTR [ebp-0x50803aac],esi
  42ae69:	dec    edx
  42ae6a:	add    al,0x35
  42ae6c:	addr16 sbb eax,0xd1a322da
  42ae72:	cli    
  42ae73:	jg     0x42ae24
  42ae75:	jns    0x42aee0
  42ae77:	add    eax,0x54ed785d
  42ae7c:	pop    ebx
  42ae7d:	mov    ebp,0xfc8eb828
  42ae82:	test   eax,0x41ab1870
  42ae87:	or     bh,dl
  42ae89:	dec    edx
  42ae8a:	xor    bh,BYTE PTR [ebx-0x7613ff60]
  42ae90:	jo     0x42aeab
  42ae92:	mov    eax,0x8d0754cd
  42ae97:	and    esi,eax
  42ae99:	cli    
  42ae9a:	outs   dx,BYTE PTR ds:[esi]
  42ae9b:	sub    DWORD PTR [ebx+0x55],edi
  42ae9e:	sbb    eax,0xbe4b2e13
  42aea3:	ins    DWORD PTR es:[edi],dx
  42aea4:	push   0xffffffbe
  42aea6:	jns    0x42aecd
  42aea8:	cs ret 
  42aeaa:	and    eax,0xc7362ac9
  42aeaf:	mov    ecx,0xde4b1070
  42aeb4:	in     eax,0xa5
  42aeb6:	inc    eax
  42aeb7:	xchg   edi,eax
  42aeb8:	pop    es
  42aeb9:	add    cl,ch
  42aebb:	outs   dx,BYTE PTR ds:[esi]
  42aebc:	loopne 0x42ae3e
  42aebe:	sub    BYTE PTR ds:0x26940004,bh
  42aec4:	push   edx
  42aec5:	push   ebx
  42aec6:	mov    esi,0x3c4479ed
  42aecb:	adc    DWORD PTR [esp+ebp*4-0x29],ecx
  42aecf:	fldcw  WORD PTR [edi]
  42aed1:	xlat   BYTE PTR ds:[ebx]
  42aed2:	push   edx
  42aed3:	(bad)  [esi]
  42aed5:	add    BYTE PTR [eax+eax*1-0x179f8547],dl
  42aedc:	outs   dx,DWORD PTR ds:[esi]
  42aedd:	ja     0x42aed7
  42aedf:	loop   0x42aedc
  42aee1:	xor    eax,DWORD PTR [esi-0x287f16c0]
  42aee7:	repz xchg ebp,eax
  42aee9:	push   ebp
  42aeea:	push   ebx
  42aeeb:	pop    eax
  42aeec:	in     eax,0x3
  42aeee:	xchg   esp,eax
  42aeef:	clc    
  42aef0:	arpl   WORD PTR [edi+0x0],ax
  42aef3:	in     al,dx
  42aef4:	dec    edi
  42aef5:	mov    edi,0x93cd6ec
  42aefa:	add    edx,DWORD PTR [eax+eax*1-0x175f1317]
  42af01:	clc    
  42af02:	inc    ebx
  42af03:	xchg   esp,eax
  42af04:	ja     0x42af16
  42af06:	jnp    0x42af30
  42af08:	in     al,dx
  42af09:	mov    ebp,0x930727e8
  42af0e:	push   eax
  42af0f:	dec    ebx
  42af10:	push   esi
  42af11:	jmp    0x42af67
  42af13:	(bad)  
  42af14:	or     al,0x69
  42af16:	adc    edx,esp
  42af18:	add    BYTE PTR [eax+0x46],dh
  42af1b:	jl     0x42af43
  42af1d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42af1e:	jbe    0x42aebd
  42af20:	jae    0x42af7d
  42af22:	clc    
  42af23:	jnp    0x42af99
  42af25:	int    0xec
  42af27:	outs   dx,BYTE PTR ds:[esi]
  42af28:	je     0x42af65
  42af2a:	clc    
  42af2b:	jnp    0x42afa9
  42af2d:	mov    ebp,0xa92f5eec
  42af32:	dec    esp
  42af33:	out    dx,al
  42af34:	inc    ebp
  42af35:	mov    al,ds:0x610093c1
  42af3a:	cmp    edx,DWORD PTR [ecx]
  42af3c:	inc    ecx
  42af3d:	jmp    0x1c37886d
  42af42:	pop    es
  42af43:	in     al,dx
  42af44:	cmp    BYTE PTR [esp+eax*2],dl
  42af47:	xchg   esp,eax
  42af48:	push   eax
  42af49:	sbb    bl,BYTE PTR [esp+eax*8+0x73]
  42af4d:	sub    BYTE PTR [ebx+ecx*8],al
  42af50:	jae    0x42af51
  42af52:	imul   ebp,DWORD PTR [ebx-0x1b],0xfffffffa
  42af56:	outs   dx,BYTE PTR ds:[esi]
  42af57:	add    BYTE PTR [edi+0x5a],ah
  42af5a:	sbb    al,al
  42af5c:	(bad)  
  42af5e:	ds pop edi
  42af60:	call   0x1b4073c7
  42af65:	mov    ds:0x404d2b74,al
  42af6a:	lea    ebp,[ebx+ecx*1+0x10515033]
  42af71:	pop    esp
  42af72:	add    cl,ch
  42af74:	test   al,al
  42af76:	mov    BYTE PTR [ebx+esi*4+0x1c117c74],cl
  42af7d:	arpl   sp,ax
  42af7f:	in     eax,dx
  42af80:	sbb    al,0x9b
  42af82:	mov    WORD PTR [ebx+edi*4+0x7a48d31],gs
  42af89:	xor    cl,BYTE PTR [edi-0x66]
  42af8c:	cmp    eax,0x44e865fc
  42af91:	xor    DWORD PTR [ebp-0x51a1494],ecx
  42af97:	out    dx,al
  42af98:	out    0xe5,al
  42af9a:	je     0x42af8d
  42af9c:	push   esi
  42af9d:	cmp    al,0x90
  42af9f:	and    eax,0xd6000090
  42afa4:	test   DWORD PTR [eax],ebx
  42afa6:	adc    DWORD PTR [ecx],ebp
  42afa8:	nop
  42afa9:	jnp    0x42af6a
  42afab:	cmp    al,0x5f
  42afad:	je     0x42b023
  42afaf:	mov    ch,0x38
  42afb1:	jecxz  0x42afa8
  42afb3:	mov    dh,0x3f
  42afb5:	jnp    0x42af75
  42afb7:	sar    BYTE PTR [eax+0xa6fae5],0x2f
  42afbe:	ins    BYTE PTR es:[edi],dx
  42afbf:	in     al,0x6c
  42afc1:	aad    0xec
  42afc3:	dec    edi
  42afc4:	or     DWORD PTR [edx+0x148efae9],0x3d0073a1
  42afce:	(bad)  
  42afcf:	jae    0x42afb9
  42afd1:	call   0x7afc:0xbd11d80f
  42afd8:	clc    
  42afd9:	jp     0x42b04b
  42afdb:	cli    
  42afdc:	mov    dl,0xec
  42afde:	aad    0x73
  42afe0:	in     al,0x86
  42afe2:	das    
  42afe3:	mov    al,ds:0xf6fd3d12
  42afe8:	(bad)  
  42afe9:	pop    edx
  42afea:	outs   dx,DWORD PTR ds:[esi]
  42afeb:	call   0xb60433ef
  42aff0:	push   ebp
  42aff1:	enterw 0x4d81,0xb5
  42aff6:	jnp    0x42afde
  42aff8:	or     al,0xbf
  42affa:	cld    
  42affb:	call   DWORD PTR [edx+0x3]
  42affe:	dec    esi
  42afff:	sub    eax,eax
  42b001:	fsubp  st(6),st
  42b003:	loop   0x42b03d
  42b005:	add    ch,bh
  42b007:	inc    DWORD PTR [ebp+edi*2-0x1208dd90]
  42b00e:	loopne 0x42b00a
  42b010:	jmp    FWORD PTR [ebp-0x9ee8bf4]
  42b016:	fdivr  QWORD PTR [ecx-0x7]
  42b019:	pop    eax
  42b01a:	push   esi
  42b01b:	add    al,BYTE PTR [ebp+0x3b047063]
  42b021:	add    BYTE PTR [ebx+0x52],ch
  42b024:	cli    
  42b025:	mov    cl,BYTE PTR [ebp+0x5f]
  42b028:	dec    esp
  42b029:	or     BYTE PTR [ebp-0xa],dl
  42b02c:	inc    esp
  42b02d:	add    BYTE PTR [ebp-0x7f],ch
  42b030:	mov    edx,0xf0813775
  42b035:	jne    0x42b078
  42b037:	push   ss
  42b038:	shr    bl,0x80
  42b03b:	test   BYTE PTR [ebx+0xc],bh
  42b03e:	sub    eax,0x5b830551
  42b043:	or     DWORD PTR [ecx+esi*8-0x6c],esi
  42b047:	jbe    0x42b0b8
  42b049:	or     BYTE PTR [edi],bl
  42b04b:	adc    al,bh
  42b04d:	out    0xc5,eax
  42b04f:	sub    al,0x4
  42b051:	add    BYTE PTR [edi],cl
  42b053:	mov    ds:0x8988d67f,al
  42b058:	ja     0x42afde
  42b05a:	or     al,0x6d
  42b05c:	out    0xfa,al
  42b05e:	fs mov cl,0x5e
  42b061:	lea    edx,[ecx+ebp*8-0x40]
  42b065:	inc    esp
  42b066:	mov    ds:0x9d0ad6e9,eax
  42b06b:	jmp    0x9e17346e
  42b070:	sub    eax,0x806c4753
  42b075:	not    ecx
  42b077:	push   ss
  42b078:	out    0x4f,al
  42b07a:	mov    esp,0x94fffdf4
  42b07f:	ins    DWORD PTR es:[edi],dx
  42b080:	mov    edi,0x296a7173
  42b085:	sbb    eax,0xbf5da300
  42b08a:	or     ah,dl
  42b08c:	sub    DWORD PTR [edi-0x73],ecx
  42b08f:	sbb    DWORD PTR [edx],eax
  42b091:	call   0xd6bc4c90
  42b096:	sub    BYTE PTR [edx-0x2e78172a],dl
  42b09c:	mov    esi,0xe47c8477
  42b0a1:	call   0x17f495a0
  42b0a6:	jb     0x42b11a
  42b0a8:	mov    dh,0x54
  42b0aa:	call   0xfb2b9486
  42b0af:	push   cs
  42b0b0:	sub    al,0xf9
  42b0b2:	pop    edx
  42b0b3:	mov    edx,0x9cbdb722
  42b0b8:	jmp    0x687b3806
  42b0bd:	fdiv   st,st(3)
  42b0bf:	xchg   ebp,eax
  42b0c0:	add    cl,ch
  42b0c2:	add    esp,esi
  42b0c4:	mov    edx,DWORD PTR [ebx]
  42b0c6:	cld    
  42b0c7:	adc    al,0x5e
  42b0c9:	call   0xe9434ce0
  42b0ce:	push   eax
  42b0cf:	test   al,0x7
  42b0d1:	mov    bh,0xc3
  42b0d3:	sub    al,0x63
  42b0d5:	call   0xb8e244dd
  42b0da:	sti    
  42b0db:	or     ebx,edi
  42b0dd:	adc    DWORD PTR [esi-0x6c],ebx
  42b0e0:	xor    esp,DWORD PTR [edx+0xf]
  42b0e3:	shl    dh,0xa8
  42b0e6:	add    ebx,DWORD PTR ds:0x7ced5b
  42b0ec:	push   ebp
  42b0ed:	or     DWORD PTR [esi-0x40],esp
  42b0f0:	(bad)
  42b0f4:	or     BYTE PTR [esi-0x14],al
  42b0f7:	push   ebx
  42b0f8:	cmp    dh,ch
  42b0fa:	xchg   ecx,eax
  42b0fb:	jbe    0x42b14f
  42b0fd:	lock pop ebp
  42b0ff:	sar    DWORD PTR [ebx-0x41165834],0x8a
  42b106:	mov    ds:0xd5431d30,al
  42b10b:	jl     0x42b162
  42b10d:	sbb    esp,DWORD PTR [eax+0x45]
  42b110:	push   esp
  42b111:	lea    ebp,[edx-0x4295bbc0]
  42b117:	dec    eax
  42b118:	and    DWORD PTR [edx-0x5b],ecx
  42b11b:	jl     0x42b173
  42b11d:	jmp    0xdec0f45a
  42b122:	ins    DWORD PTR es:[edi],dx
  42b123:	cmp    DWORD PTR [esi],0x1b03e901
  42b129:	sbb    al,0x19
  42b12b:	adc    dl,ah
  42b12d:	add    BYTE PTR [eax-0x7c],ah
  42b130:	push   edi
  42b131:	add    ecx,ebp
  42b133:	add    esi,edx
  42b135:	lock imul eax,DWORD PTR [ecx-0x16fffeee],0xffffff97
  42b13d:	xor    BYTE PTR [ebp-0x5220096],cl
  42b143:	jmp    0x6b158b2f
  42b148:	repz or DWORD PTR [eax-0x15],ebp
  42b14c:	xchg   esi,eax
  42b14d:	add    BYTE PTR [eax],al
  42b14f:	pop    esp
  42b150:	add    BYTE PTR ds:0x97e8ffcf,dl
  42b156:	xor    BYTE PTR [ebp-0x5222096],cl
  42b15c:	jmp    0x6b158ac8
  42b161:	inc    ebx
  42b162:	or     bh,BYTE PTR [ebx+0x96ed]
  42b168:	push   0xe900b4d5
  42b16d:	xchg   edi,eax
  42b16e:	xor    cl,BYTE PTR [ebp+0xdb62]
  42b174:	jmp    0xa22a73d1
  42b179:	push   esi
  42b17a:	(bad)  
  42b17c:	ins    BYTE PTR es:[edi],dx
  42b17d:	xlat   BYTE PTR ds:[ebx]
  42b17e:	or     al,BYTE PTR [ebp-0x5255367]
  42b184:	xchg   ebx,eax
  42b185:	xchg   esi,eax
  42b186:	mov    esi,DWORD PTR [ecx+edi*8+0x1fadabd]
  42b18d:	arpl   WORD PTR [ecx-0x5],cx
  42b190:	push   cs
  42b191:	and    BYTE PTR [edi+0x69d7114f],bh
  42b197:	sti    
  42b198:	(bad)  
  42b199:	adc    bl,BYTE PTR [esi-0x18c1258c]
  42b19f:	add    cl,ch
  42b1a1:	xchg   edi,eax
  42b1a2:	test   ecx,eax
  42b1a4:	scas   eax,DWORD PTR es:[edi]
  42b1a5:	nop
  42b1a6:	add    BYTE PTR [eax+0x30],al
  42b1a9:	in     eax,0xd7
  42b1ab:	call   0xfb1d24bd
  42b1b0:	fld    QWORD PTR ss:[esi+edi*4+0x0]
  42b1b5:	add    BYTE PTR [ebp+0x57],bh
  42b1b8:	stos   BYTE PTR es:[edi],al
  42b1b9:	clc    
  42b1ba:	add    DWORD PTR ds:[eax],eax
  42b1bd:	push   0x3d
  42b1bf:	add    dl,0xff
  42b1c2:	push   ebp
  42b1c3:	ins    BYTE PTR es:[edi],dx
  42b1c4:	cmp    edi,esi
  42b1c6:	bnd jle 0x42b183
  42b1c9:	jg     0x42b1f5
  42b1cb:	lods   al,BYTE PTR ds:[esi]
  42b1cc:	call   0x8d43eed2
  42b1d1:	test   DWORD PTR ds:0xebfff5e3,ebx
  42b1d7:	add    eax,DWORD PTR [eax]
  42b1d9:	inc    eax
  42b1da:	les    ecx,FWORD PTR [edi-0x7]
  42b1dd:	jmp    0x38986b
  42b1e2:	jbe    0x42b223
  42b1e4:	(bad)  
  42b1e5:	mov    DWORD PTR [esi-0x24],ebp
  42b1e8:	add    BYTE PTR [eax],al
  42b1ea:	std    
  42b1eb:	or     BYTE PTR ss:[ebp-0x72b534c8],cl
  42b1f2:	outs   dx,BYTE PTR ds:[esi]
  42b1f3:	add    al,0xfe
  42b1f5:	(bad)  
  42b1f6:	in     eax,dx
  42b1f7:	xor    bh,dh
  42b1f9:	adc    eax,0x400acd
  42b1fe:	rol    BYTE PTR ds:[esi],0xb9
  42b202:	add    DWORD PTR [ebx],0x0
  42b205:	add    BYTE PTR [eax+0x7f],al
  42b208:	or     bh,dh
  42b20a:	xchg   edx,eax
  42b20b:	in     eax,0xc0
  42b20d:	add    BYTE PTR [ebp-0x7b8ab6c0],bh
  42b213:	pop    ecx
  42b214:	je     0x42b21e
  42b216:	and    BYTE PTR [esi-0x1c],bl
  42b219:	add    eax,0x50007d00
  42b21e:	(bad)  
  42b21f:	div    al
  42b221:	std    
  42b222:	jmp    FWORD PTR [ebp+0x57]
  42b225:	mov    esi,0xf64021e8
  42b22a:	(bad)  
  42b22b:	clc    
  42b22c:	mov    edi,0x8d948505
  42b231:	in     al,0xfa
  42b233:	arpl   WORD PTR [edi+0x7d],bx
  42b236:	cld    
  42b237:	xchg   ebx,eax
  42b238:	jmp    0xbe5a3b3b
  42b23d:	idiv   bh
  42b23f:	dec    ebx
  42b240:	pop    edx
  42b241:	add    al,0x5b
  42b243:	loop   0x42b1e5
  42b245:	rol    BYTE PTR [ebx],0x94
  42b248:	sbb    al,0x77
  42b24a:	jmp    0x42b213
  42b24c:	mov    dh,0xc5
  42b24e:	push   ecx
  42b24f:	ret    
  42b250:	mov    cl,0x7
  42b252:	mov    al,ds:0x75042759
  42b257:	push   0x43
  42b259:	mov    esp,0xfb4ce957
  42b25f:	mov    eax,ds:0x94401085
  42b264:	xchg   ecx,eax
  42b265:	pop    es
  42b266:	mov    al,ds:0x74fea6d1
  42b26b:	xchg   DWORD PTR [eax+0x8],edx
  42b26e:	js     0x42b241
  42b270:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b271:	dec    BYTE PTR [eax+0x3ebf8581]
  42b277:	xchg   esp,eax
  42b278:	sub    eax,DWORD PTR [eax]
  42b27a:	mov    al,ds:0xfea6d9
  42b27f:	add    BYTE PTR [edx+0x12],ah
  42b282:	adc    al,dh
  42b284:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b285:	test   eax,0xd15186fe
  42b28a:	adc    eax,0x36b428bf
  42b28f:	dec    eax
  42b290:	and    cl,al
  42b292:	ss je  0x42b215
  42b295:	mov    eax,ds:0xd24c106a
  42b29a:	jg     0x42b260
  42b29c:	xchg   esp,eax
  42b29d:	jmp    0xbba76da0
  42b2a2:	ds add dh,ch
  42b2a5:	(bad)
  42b2a8:	cmp    eax,DWORD PTR [eax]
  42b2aa:	test   eax,0x4f00d40e
  42b2af:	pop    ds
  42b2b0:	jae    0x42b2ab
  42b2b2:	xchg   ecx,eax
  42b2b3:	in     al,0x85
  42b2b5:	inc    eax
  42b2b6:	jmp    0xd92a5f14
  42b2bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b2bc:	add    esi,edx
  42b2be:	sub    BYTE PTR [edx+esi*4],al
  42b2c1:	cld    
  42b2c2:	mov    ebp,0xd29ffefd
  42b2c7:	inc    ebx
  42b2c8:	xchg   esp,eax
  42b2c9:	jmp    WORD PTR [edx+0x425c5ab]
  42b2d0:	into   
  42b2d1:	pop    ss
  42b2d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b2d3:	outs   dx,DWORD PTR ds:[esi]
  42b2d4:	jae    0x42b33e
  42b2d6:	jmp    0x82438746
  42b2db:	pmulhuw mm5,mm5
  42b2de:	sub    BYTE PTR [ebx+eax*8],al
  42b2e1:	mov    edi,0x6c0004fc
  42b2e6:	push   0x3094445c
  42b2eb:	bound  ecx,QWORD PTR [edi]
  42b2ed:	xor    dh,ch
  42b2ef:	test   al,0x3
  42b2f1:	or     ebx,DWORD PTR [eax+0x2c]
  42b2f4:	inc    ecx
  42b2f5:	xchg   esp,eax
  42b2f6:	pop    ss
  42b2f7:	outs   dx,DWORD PTR es:[esi]
  42b2f9:	(bad)  
  42b2fa:	jg     0x42b32c
  42b2fc:	in     eax,0x32
  42b2fe:	pop    eax
  42b2ff:	and    al,0x41
  42b301:	xchg   esp,eax
  42b302:	out    0xeb,eax
  42b304:	mov    ds:0x3a5c54b,al
  42b309:	cmp    ebx,eax
  42b30b:	and    DWORD PTR [eax+0x55],esi
  42b30e:	pop    ss
  42b30f:	es jo  0x42b37b
  42b312:	lea    esp,[ebx-0x7ed0bb05]
  42b318:	add    eax,DWORD PTR [eax+eax*1-0x4e70b317]
  42b31f:	arpl   sp,ax
  42b321:	add    BYTE PTR [esi],bh
  42b323:	add    BYTE PTR [edx-0x2d],ah
  42b326:	or     BYTE PTR [edi+0x462839c],al
  42b32c:	call   0x402ab3c8
  42b331:	mov    cl,0xd6
  42b333:	cli    
  42b334:	(bad)  
  42b335:	repnz or BYTE PTR [edi+0x73f570d9],al
  42b33c:	(bad)  
  42b33e:	add    BYTE PTR [edi],dh
  42b340:	mov    edx,0x3cfb24ba
  42b345:	cmp    al,0xd7
  42b347:	adc    al,0x2d
  42b349:	add    BYTE PTR [ebp-0x69a6ffc0],ah
  42b34f:	loope  0x42b369
  42b351:	sahf   
  42b352:	mov    edx,0x97a7810c
  42b357:	adc    BYTE PTR [eax],al
  42b359:	jmp    0x1a94fd22
  42b35e:	stc    
  42b35f:	hlt    
  42b360:	dec    edi
  42b361:	ficom  DWORD PTR [edi+0x0]
  42b364:	test   DWORD PTR [ecx-0x56d24c24],ebp
  42b36a:	push   eax
  42b36b:	ss push edi
  42b36d:	(bad)  
  42b36e:	aad    0x1
  42b370:	add    BYTE PTR [esp+ebp*2+0x7a6a50e5],dh
  42b377:	lock call esp
  42b37a:	loop   0x42b2fe
  42b37c:	inc    esp
  42b37d:	fnstenv [ecx+0x59]
  42b380:	cmp    BYTE PTR [ebp-0x5380fbc6],bl
  42b386:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b387:	fimul  DWORD PTR [ebp-0x69]
  42b38a:	cmp    al,0x54
  42b38c:	or     BYTE PTR [esi+0x650acf32],bh
  42b392:	enter  0xfad9,0xe9
  42b396:	sbb    al,0x4c
  42b398:	or     al,0x1
  42b39a:	add    bl,BYTE PTR [eax]
  42b39c:	cli    
  42b39d:	add    BYTE PTR [edx-0x757c0ca8],bl
  42b3a3:	fld    QWORD PTR ds:0xfffda184
  42b3a9:	inc    esi
  42b3ab:	fcos   
  42b3ad:	inc    DWORD PTR [eax]
  42b3af:	jge    0x42b3ab
  42b3b1:	repnz (bad)
  42b3b4:	(bad)  
  42b3b7:	ins    DWORD PTR es:[edi],dx
  42b3b8:	mov    cl,BYTE PTR [ebx+0x10]
  42b3bb:	push   ebp
  42b3bc:	outs   dx,DWORD PTR ds:[esi]
  42b3bd:	cmp    dh,bh
  42b3bf:	pop    edx
  42b3c0:	mov    eax,DWORD PTR [ebx-0x4]
  42b3c3:	mov    esi,0xb10ff5bc
  42b3c8:	jno    0x42b3c4
  42b3ca:	jmp    FWORD PTR ds:0xbe0fbafa
  42b3d0:	test   eax,0x883dfffa
  42b3d5:	cmc    
  42b3d6:	jne    0x42b40d
  42b3d8:	mov    BYTE PTR [edx-0x5824ef1],bh
  42b3de:	(bad)  
  42b3df:	std    
  42b3e0:	xchg   DWORD PTR [edx+0x74f9e775],edi
  42b3e6:	or     al,0x1
  42b3e8:	ror    DWORD PTR [ebx+0x50032a44],cl
  42b3ee:	call   eax
  42b3f0:	or     BYTE PTR [esi-0x1],cl
  42b3f3:	loopne 0x42b3e1
  42b3f5:	or     eax,0xbe81ed40
  42b3fa:	or     al,0x23
  42b3fc:	ficom  WORD PTR [ebx]
  42b3fe:	jl     0x42b3ee
  42b400:	cmp    al,0x0
  42b402:	mov    edi,DWORD PTR [ebx-0x14]
  42b405:	ds ds mov ebx,ebp
  42b409:	mov    eax,DWORD PTR [ebx+esi*8]
  42b40c:	jmp    0x38bd397a
  42b411:	dec    ebp
  42b412:	mov    eax,DWORD PTR [eax]
  42b414:	clc    
  42b415:	or     BYTE PTR [ebp+0x68b29434],cl
  42b41b:	jg     0x42b435
  42b41d:	mov    ecx,0x34a35be0
  42b422:	dec    ecx
  42b423:	or     eax,edi
  42b425:	sub    DWORD PTR [eax*2-0x4088216d],ebx
  42b42c:	xchg   edi,eax
  42b42d:	pushf  
  42b42e:	(bad)  
  42b430:	pop    edx
  42b431:	and    eax,ebx
  42b433:	outs   dx,BYTE PTR ds:[esi]
  42b434:	fsub   DWORD PTR [eax]
  42b436:	push   ecx
  42b437:	or     al,ch
  42b439:	fistp  QWORD PTR [eax]
  42b43b:	push   ecx
  42b43c:	pop    ebx
  42b43d:	sub    eax,0xd9a9fb0c
  42b442:	clc    
  42b443:	aas    
  42b444:	xchg   esp,eax
  42b445:	push   0xffffffc3
  42b447:	or     edx,DWORD PTR [ebp-0x467ff3ec]
  42b44d:	mov    dh,0xfe
  42b44f:	jae    0x42b3f2
  42b451:	push   edx
  42b452:	push   eax
  42b453:	or     BYTE PTR [edi],dl
  42b455:	sbb    eax,0xdadfe0c
  42b45a:	cmp    al,0x62
  42b45c:	or     eax,0x9c7489e9
  42b461:	push   edx
  42b462:	dec    eax
  42b463:	cld    
  42b464:	sbb    DWORD PTR [esi],ebx
  42b466:	add    al,0xfe
  42b468:	push   ebx
  42b469:	dec    esi
  42b46a:	pop    eax
  42b46b:	adc    BYTE PTR [edx+0x66],ah
  42b46e:	clc    
  42b46f:	das    
  42b470:	mov    ch,BYTE PTR [ecx-0x1a2f8102]
  42b476:	cmp    bl,bh
  42b478:	add    BYTE PTR [ecx-0x6bc00e53],cl
  42b47e:	(bad)  
  42b47f:	leave  
  42b480:	out    0x96,al
  42b482:	fidivr DWORD PTR [esi-0x345d95a6]
  42b488:	mov    ebp,0x418fe990
  42b48d:	mov    BYTE PTR [ecx-0x23],bh
  42b490:	adc    al,0xa8
  42b492:	add    bh,dh
  42b494:	inc    ebx
  42b495:	xchg   esp,eax
  42b496:	adc    ebp,DWORD PTR [ecx]
  42b498:	mov    WORD PTR [ebp+0xd07aa89],ss
  42b49e:	aas    
  42b49f:	loope  0x42b42f
  42b4a1:	push   ebp
  42b4a2:	ret    
  42b4a3:	call   0xbce2:0xb5d0133a
  42b4aa:	push   ss
  42b4ab:	jnp    0x42b4a1
  42b4ad:	adc    bh,BYTE PTR [esi]
  42b4af:	in     eax,0xe2
  42b4b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b4b2:	cwde   
  42b4b3:	loope  0x42b4ac
  42b4b5:	or     esi,edx
  42b4b7:	sub    BYTE PTR [edi+edx*8],al
  42b4ba:	sbb    edx,DWORD PTR [ebx]
  42b4bc:	push   esi
  42b4bd:	outs   dx,DWORD PTR ds:[esi]
  42b4be:	xlat   BYTE PTR ds:[ebx]
  42b4bf:	push   edx
  42b4c0:	or     BYTE PTR [edi+edx*1],bh
  42b4c3:	jmp    0x42b4a6
  42b4c5:	dec    esi
  42b4c6:	and    DWORD PTR [edx-0x242819f0],0xffffffeb
  42b4cd:	mov    DWORD PTR [eax-0x17],eax
  42b4d0:	inc    eax
  42b4d1:	into   
  42b4d2:	ret    
  42b4d3:	aaa    
  42b4d4:	xor    eax,0x8f988bc6
  42b4d9:	aad    0x4
  42b4db:	cmp    DWORD PTR [ebx-0x22e32900],ecx
  42b4e1:	loopne 0x42b48b
  42b4e3:	in     al,0xd6
  42b4e5:	inc    ebx
  42b4e6:	xchg   esp,eax
  42b4e7:	adc    ebx,DWORD PTR [esi-0x3f7a1e5]
  42b4ed:	aaa    
  42b4ee:	popa   
  42b4ef:	adc    edi,DWORD PTR [ebx+ebx*1-0x72]
  42b4f3:	dec    esi
  42b4f4:	and    al,0x39
  42b4f6:	adc    edi,DWORD PTR [esi]
  42b4f8:	in     eax,0x8c
  42b4fa:	loopne 0x42b47e
  42b4fc:	adc    al,0x9c
  42b4fe:	fist   DWORD PTR [edx-0x2]
  42b501:	ins    DWORD PTR es:[edi],dx
  42b502:	xchg   esp,eax
  42b503:	xlat   BYTE PTR ds:[ebx]
  42b504:	cld    
  42b505:	fwait
  42b506:	into   
  42b507:	in     al,dx
  42b508:	fdiv   st,st(4)
  42b50a:	add    DWORD PTR [eax],0x0
  42b50d:	ins    BYTE PTR es:[edi],dx
  42b50e:	sar    BYTE PTR [ebp+0x41],1
  42b511:	in     eax,0x4a
  42b513:	push   es
  42b514:	sti    
  42b515:	fisttp QWORD PTR [edi]
  42b517:	ficom  DWORD PTR [ecx+ecx*2]
  42b51a:	stos   BYTE PTR es:[edi],al
  42b51b:	push   ss
  42b51c:	add    BYTE PTR [edx+0x4e],ah
  42b51f:	cld    
  42b520:	jle    0x42b4e7
  42b522:	das    
  42b523:	(bad)  
  42b524:	in     eax,0xee
  42b526:	sbb    BYTE PTR [edx],cl
  42b528:	mov    eax,0x3e78a470
  42b52d:	lods   al,BYTE PTR ds:[esi]
  42b52e:	cwde   
  42b52f:	sub    ch,BYTE PTR [esi+0x24]
  42b532:	aad    0x87
  42b534:	sbb    DWORD PTR [edx+0x58],esi
  42b537:	shl    eax,0xeb
  42b53a:	sbb    al,al
  42b53c:	add    eax,ecx
  42b53e:	nop
  42b53f:	sti    
  42b540:	stc    
  42b541:	into   
  42b542:	add    BYTE PTR [edx-0x67f28c27],dl
  42b548:	fst    DWORD PTR [ecx+edi*4]
  42b54b:	dec    ecx
  42b54c:	push   ss
  42b54d:	add    BYTE PTR [edi],dl
  42b54f:	jns    0x42b588
  42b551:	mov    edi,0x50ea2114
  42b556:	cmp    BYTE PTR [ecx-0x7d],ah
  42b559:	inc    edx
  42b55a:	in     eax,dx
  42b55b:	pop    ebp
  42b55c:	xor    BYTE PTR [ecx+0x14db382c],cl
  42b562:	jge    0x42b56d
  42b564:	push   ss
  42b565:	add    BYTE PTR [edx-0xea4e6b8],bh
  42b56b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b56c:	jnp    0x42b4f7
  42b56e:	jmp    0xc7bb60a
  42b573:	test   BYTE PTR [ecx],cl
  42b575:	test   BYTE PTR [edi+edx*4+0x0],ch
  42b579:	add    BYTE PTR [edx-0x7c],dh
  42b57c:	xor    DWORD PTR [edx-0x13],0xa
  42b580:	or     cl,BYTE PTR [ebp+0x97e5]
  42b586:	add    BYTE PTR [esi+ebp*1-0x4],al
  42b58a:	call   0x38b3a4
  42b58f:	sub    ecx,eax
  42b591:	outs   dx,BYTE PTR ds:[esi]
  42b592:	ins    DWORD PTR es:[edi],dx
  42b593:	push   cs
  42b594:	fs add al,0xff
  42b597:	or     dl,dl
  42b599:	cmc    
  42b59a:	jne    0x42b54d
  42b59c:	loopne 0x42b611
  42b59e:	or     dh,bl
  42b5a0:	loopne 0x42b5b5
  42b5a2:	push   eax
  42b5a3:	pop    DWORD PTR [ecx+0x0]
  42b5a6:	mov    eax,DWORD PTR [eax]
  42b5a8:	(bad)  
  42b5a9:	stc    
  42b5aa:	jmp    0xf914:0x5cfa3d74
  42b5b1:	repz popa 
  42b5b3:	add    cl,BYTE PTR [esi]
  42b5b5:	or     al,0xf7
  42b5b7:	jne    0x42b622
  42b5b9:	not    DWORD PTR [bp-0x39]
  42b5bd:	mov    ch,0xf5
  42b5bf:	adc    eax,0x3ad209
  42b5c4:	mov    eax,0x522473bc
  42b5c9:	xlat   BYTE PTR ds:[ebx]
  42b5ca:	adc    dl,BYTE PTR [ecx]
  42b5cc:	ins    DWORD PTR es:[edi],dx
  42b5cd:	cld    
  42b5ce:	dec    edi
  42b5cf:	push   esi
  42b5d0:	add    dl,bh
  42b5d2:	dec    esi
  42b5d3:	adc    bh,BYTE PTR [ebp-0x4]
  42b5d6:	dec    ebp
  42b5d7:	jmp    FWORD PTR [eax]
  42b5d9:	mov    eax,ds:0x8a2d400c
  42b5de:	add    eax,0xbfe0788b
  42b5e3:	loope  0x42b5e4
  42b5e5:	call   0xb555ba42
  42b5ea:	loope  0x42b601
  42b5ec:	xchg   ch,bh
  42b5ee:	or     BYTE PTR [ebp-0x7f],0x89
  42b5f2:	pop    es
  42b5f3:	mov    DWORD PTR [ecx],ebp
  42b5f5:	jl     0x42b5ec
  42b5f7:	pop    es
  42b5f8:	sub    esi,DWORD PTR [esi+0x40dcd813]
  42b5fe:	add    BYTE PTR [ebx+0x74d9e894],dh
  42b604:	int3   
  42b605:	inc    ebp
  42b606:	stc    
  42b607:	out    dx,eax
  42b608:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b609:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b60a:	(bad)  
  42b60b:	pop    ecx
  42b60c:	add    BYTE PTR [esi],cl
  42b60e:	sub    dh,BYTE PTR [edi]
  42b610:	leave  
  42b611:	(bad)  
  42b612:	mov    dh,0xfe
  42b614:	push   eax
  42b615:	inc    edi
  42b616:	bound  eax,QWORD PTR [ecx]
  42b618:	in     al,dx
  42b619:	xchg   BYTE PTR [edi+0x644b54fe],ah
  42b61f:	pop    edx
  42b620:	or     al,0x43
  42b622:	out    dx,al
  42b623:	scas   al,BYTE PTR es:[edi]
  42b624:	cli    
  42b625:	(bad)  
  42b627:	xor    ebx,edi
  42b629:	mov    eax,ds:0x943ff0d9
  42b62e:	xchg   esi,eax
  42b62f:	out    dx,eax
  42b630:	rcl    eax,0xc5
  42b633:	or     DWORD PTR [ecx],eax
  42b635:	lods   eax,DWORD PTR ds:[esi]
  42b636:	xchg   ebx,eax
  42b637:	push   esp
  42b638:	xor    BYTE PTR [edi],bl
  42b63a:	in     al,0x25
  42b63c:	lds    edx,FWORD PTR [edi]
  42b63e:	loop   0x42b67e
  42b640:	outs   dx,BYTE PTR ds:[esi]
  42b641:	xchg   edi,eax
  42b642:	aas    
  42b643:	inc    esp
  42b644:	pop    eax
  42b645:	pop    ds
  42b646:	hlt    
  42b647:	pop    es
  42b648:	dec    bx
  42b64a:	xor    BYTE PTR ds:0x3370908d,al
  42b650:	push   eax
  42b651:	cmp    esi,DWORD PTR [ebp-0x162bf26e]
  42b657:	xchg   DWORD PTR [edi-0x3b822f5f],edi
  42b65d:	aam    0xde
  42b65f:	sub    al,0x6e
  42b661:	inc    ebx
  42b662:	jg     0x42b66b
  42b664:	ret    0xbd58
  42b667:	or     DWORD PTR [eax],eax
  42b669:	arpl   WORD PTR [edx-0x53],di
  42b66c:	cli    
  42b66d:	push   edx
  42b66e:	shl    DWORD PTR [ecx],1
  42b670:	sti    
  42b671:	add    BYTE PTR [ecx-0x6bc00ea7],ah
  42b677:	pop    edi
  42b678:	inc    ebx
  42b679:	and    al,0x9b
  42b67b:	add    dl,al
  42b67d:	inc    eax
  42b67e:	dec    ebx
  42b67f:	cmp    DWORD PTR [esi],esp
  42b681:	cmp    BYTE PTR [ebx],dl
  42b683:	in     eax,0x67
  42b685:	out    dx,eax
  42b686:	jae    0x42b684
  42b688:	call   0xa3ca1190
  42b68d:	or     esp,DWORD PTR [esi+0x2b]
  42b690:	rol    DWORD PTR [ebx+0x32e94108],1
  42b696:	and    DWORD PTR [esi-0x7c],edi
  42b699:	fisubr DWORD PTR [esi-0x5b75472d]
  42b69f:	call   0xd3e195e0
  42b6a4:	imul   eax,ebx,0x8
  42b6a7:	or     DWORD PTR [edi+0x2],edi
  42b6aa:	in     al,dx
  42b6ab:	jmp    0xd6bb4c
  42b6b0:	ins    BYTE PTR es:[edi],dx
  42b6b1:	mov    BYTE PTR [edi],ch
  42b6b3:	aad    0xf1
  42b6b5:	fucom  st(3)
  42b6b7:	test   DWORD PTR [ebx-0x59],esp
  42b6ba:	(bad)  
  42b6bc:	loope  0x42b6f2
  42b6be:	pop    edi
  42b6bf:	in     eax,dx
  42b6c0:	jo     0x42b6b5
  42b6c2:	fwait
  42b6c3:	add    BYTE PTR [eax+0x47],ah
  42b6c6:	pushf  
  42b6c7:	jg     0x42b699
  42b6c9:	ffree  st(0)
  42b6cb:	cld    
  42b6cc:	dec    esi
  42b6cd:	or     BYTE PTR [ebx],bh
  42b6cf:	mov    dh,0xf5
  42b6d1:	fmul   QWORD PTR [eax]
  42b6d3:	jge    0x42b665
  42b6d5:	fild   WORD PTR [eax]
  42b6d7:	cs rol eax,cl
  42b6da:	jmp    0x2e3:0x87e8d32a
  42b6e1:	fs mov eax,0x88e8d31b
  42b6e7:	popf   
  42b6e8:	xchg   edi,esp
  42b6ea:	mov    fs,WORD PTR [eax]
  42b6ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b6ed:	sbb    ebp,0xfffffffe
  42b6f0:	sub    eax,0x7d8bdd16
  42b6f5:	jmp    FWORD PTR [eax+0x717f084c]
  42b6fb:	xchg   edi,eax
  42b6fc:	jmp    0xdaa0b8
  42b701:	repnz fs and al,0xd4
  42b705:	cli    
  42b706:	push   esi
  42b707:	enter  0x8405,0x65
  42b70b:	nop
  42b70c:	add    BYTE PTR [eax],al
  42b70e:	aas    
  42b70f:	pop    edx
  42b710:	or     dh,bh
  42b712:	mov    ah,0x74
  42b714:	test   DWORD PTR [ecx+edx*1-0x66052a2d],eax
  42b71b:	mov    edi,0x97e8ffe3
  42b720:	jl     0x42b6e1
  42b722:	xchg   ebp,eax
  42b723:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b724:	jns    0x42b72f
  42b726:	bound  edx,QWORD PTR [edi+0x6b3d9483]
  42b72c:	xlat   BYTE PTR ds:[ebx]
  42b72d:	cli    
  42b72e:	fwait
  42b72f:	(bad)  
  42b730:	aad    0x4f
  42b732:	in     eax,0x12
  42b734:	xchg   edx,eax
  42b735:	je     0x42b762
  42b737:	dec    edx
  42b738:	inc    eax
  42b739:	or     al,ch
  42b73b:	add    bl,al
  42b73d:	push   esi
  42b73e:	lea    ebp,[edi+ebx*1-0x2b]
  42b742:	cli    
  42b743:	fisub  WORD PTR [edi-0x49372bf]
  42b749:	retf   0xcefa
  42b74c:	xchg   eax,ebp
  42b74e:	xor    ch,al
  42b750:	pusha  
  42b751:	xlat   BYTE PTR ds:[ebx]
  42b752:	test   BYTE PTR [ecx-0x159a041e],ch
  42b758:	jo     0x42b733
  42b75a:	sbb    DWORD PTR [edx+edx*1-0x62],ebx
  42b75e:	mul    BYTE PTR [esi-0x5078bdc0]
  42b764:	das    
  42b765:	jmp    0x42b761
  42b767:	xchg   esi,eax
  42b768:	lock jp 0x42b762
  42b76b:	fs call 0x6e4304be
  42b771:	mov    ah,0xff
  42b773:	jae    0x42b6fd
  42b775:	jg     0x42b76c
  42b777:	add    dh,cl
  42b779:	or     DWORD PTR gs:[esi],0x76
  42b77d:	dec    BYTE PTR [esi-0x73]
  42b780:	pusha  
  42b781:	mov    eax,ds:0xf3afffb
  42b786:	dec    ebx
  42b787:	dec    DWORD PTR ds:0xbef87b06
  42b78d:	sub    DWORD PTR [eax-0xa4b2d17],esi
  42b793:	inc    DWORD PTR [ebx-0xefbf7c5]
  42b799:	and    BYTE PTR [ebp-0xa4d7a7b],cl
  42b79f:	inc    DWORD PTR [eax]
  42b7a1:	fucom  st(5)
  42b7a3:	add    BYTE PTR [di-0x7c03],ch
  42b7a8:	shl    BYTE PTR [ecx],0xd0
  42b7ab:	or     DWORD PTR [esi],0x958cfef6
  42b7b1:	jmp    0x2042ad68
  42b7b6:	adc    bh,dh
  42b7b8:	push   eax
  42b7b9:	cmp    DWORD PTR [edx-0x46],0x83824775
  42b7c0:	lods   al,BYTE PTR ds:[esi]
  42b7c1:	js     0x42b778
  42b7c3:	cmc    
  42b7c4:	push   eax
  42b7c5:	cmp    ch,BYTE PTR [edi]
  42b7c7:	or     bh,bh
  42b7c9:	push   eax
  42b7ca:	dec    ebp
  42b7cb:	adc    BYTE PTR [eax+0x3d],al
  42b7ce:	cmp    BYTE PTR [edx-0x9044ff1],0xff
  42b7d5:	cli    
  42b7d6:	loopne 0x42b7d9
  42b7d8:	xor    esi,esp
  42b7da:	js     0x42b7ce
  42b7dc:	add    cl,BYTE PTR [edx+0x50]
  42b7df:	ror    BYTE PTR [ebp+0x15f6fb74],0x95
  42b7e6:	retf   
  42b7e7:	cmp    al,BYTE PTR [eax]
  42b7e9:	xchg   esp,eax
  42b7ea:	pop    esi
  42b7eb:	aam    0x84
  42b7ed:	or     ebp,esp
  42b7ef:	or     edi,DWORD PTR [edi+0x2]
  42b7f2:	mov    ch,0x4a
  42b7f4:	jmp    FWORD PTR [ebp-0x25]
  42b7f7:	xor    eax,0xd5df69fb
  42b7fc:	adc    al,0x18
  42b7fe:	mov    eax,0x5a4a003e
  42b803:	icebp  
  42b804:	and    eax,DWORD PTR [eax]
  42b806:	xchg   BYTE PTR [edi-0x76247902],ah
  42b80c:	cmp    BYTE PTR [edi-0x23],dl
  42b80f:	and    al,0x0
  42b811:	add    BYTE PTR [ebx-0x2a],ch
  42b814:	aad    0x38
  42b816:	cmp    bl,bh
  42b818:	or     esi,DWORD PTR [ebp-0x68]
  42b81b:	aad    0xbe
  42b81d:	out    0x41,al
  42b81f:	pop    esi
  42b820:	ds adc al,0x6f
  42b823:	and    dl,BYTE PTR [eax+0x4c]
  42b826:	dec    esp
  42b827:	imul   ebx,DWORD PTR [edx],0x48
  42b82a:	or     DWORD PTR [edi],eax
  42b82c:	sbb    eax,0xec77a47a
  42b831:	xchg   dl,bl
  42b833:	aad    0xd5
  42b835:	xor    edi,DWORD PTR [edi+ecx*8]
  42b838:	dec    edx
  42b839:	and    al,0xa0
  42b83b:	(bad)  
  42b83c:	out    dx,eax
  42b83d:	imul   eax,DWORD PTR [edi+0x5484fe99],0x2d
  42b844:	sub    DWORD PTR [ebx-0x61],eax
  42b847:	das    
  42b848:	hlt    
  42b849:	ins    DWORD PTR es:[edi],dx
  42b84a:	cmp    al,bl
  42b84c:	enter  0xd286,0xad
  42b850:	mov    esi,DWORD PTR [edi-0x70]
  42b853:	mov    dl,0x5
  42b855:	push   eax
  42b856:	cmp    edx,DWORD PTR [esi]
  42b858:	and    BYTE PTR [ebx+esi*1],cl
  42b85b:	lods   eax,DWORD PTR ds:[esi]
  42b85c:	bound  ecx,QWORD PTR [edi]
  42b85e:	aam    0xd9
  42b860:	jg     0x42b821
  42b862:	test   eax,0xd58ef300
  42b867:	cld    
  42b868:	nop
  42b869:	inc    edx
  42b86a:	add    dl,ch
  42b86c:	iret   
  42b86d:	xchg   ecx,eax
  42b86e:	push   ds
  42b86f:	xlat   BYTE PTR ds:[ebx]
  42b870:	push   ebp
  42b871:	test   dh,ch
  42b873:	sub    al,0x91
  42b875:	out    0x3a,eax
  42b877:	cmp    al,BYTE PTR ds:0xdd1b30e9
  42b87d:	adc    eax,0x15abbb32
  42b882:	ins    BYTE PTR es:[edi],dx
  42b883:	adc    al,0x1
  42b885:	jmp    0xb6452a8d
  42b88a:	ins    DWORD PTR es:[edi],dx
  42b88b:	xchg   ebp,eax
  42b88c:	pop    eax
  42b88d:	jmp    0x4a834c95
  42b892:	push   eax
  42b893:	mov    edi,cs
  42b895:	fist   DWORD PTR [ebx]
  42b897:	mov    al,BYTE PTR [eax-0x17]
  42b89a:	mov    es,ebx
  42b89c:	xor    DWORD PTR [edx],0xffffffda
  42b89f:	daa    
  42b8a0:	push   ss
  42b8a1:	lock cmp BYTE PTR [eax+0x391cfe54],dl
  42b8a8:	lock xchg esp,eax
  42b8aa:	icebp  
  42b8ab:	loop   0x42b92a
  42b8ad:	stos   DWORD PTR es:[edi],eax
  42b8ae:	repz fcmovne st,st(7)
  42b8b1:	xchg   ebx,eax
  42b8b2:	repz jle 0x42b90a
  42b8b5:	cmc    
  42b8b6:	xor    DWORD PTR [edi-0xb],edi
  42b8b9:	mov    esp,0x6c00b3f5
  42b8be:	ret    
  42b8bf:	out    0x2,eax
  42b8c1:	ss add al,0xc6
  42b8c4:	iret   
  42b8c5:	sti    
  42b8c6:	mov    ds:0x83e94089,eax
  42b8cb:	dec    edx
  42b8cc:	add    DWORD PTR [ebp+0xc],ebx
  42b8cf:	add    BYTE PTR [edi+0x55],cl
  42b8d2:	loope  0x42b8bf
  42b8d4:	mov    ds:0xddd9c35e,al
  42b8d9:	jp     0x42b880
  42b8db:	cmp    eax,0xe4ffc2d1
  42b8e0:	xchg   edi,eax
  42b8e1:	xor    eax,0x3167bd87
  42b8e6:	push   ebx
  42b8e7:	fidivr DWORD PTR [edx+esi*1]
  42b8ea:	push   ebx
  42b8eb:	adc    ebx,DWORD PTR [ecx+0x7fe86633]
  42b8f1:	add    BYTE PTR [eax],al
  42b8f3:	jmp    0xf1b7830f
  42b8f8:	fdivr  st(3),st
  42b8fa:	das    
  42b8fb:	fist   DWORD PTR [edi+0x0]
  42b8fe:	mov    DWORD PTR [edi],ebp
  42b900:	cwde   
  42b901:	dec    edi
  42b902:	clc    
  42b903:	outs   dx,BYTE PTR ds:[esi]
  42b904:	inc    esp
  42b905:	push   eax
  42b906:	lea    esi,[edi+edi*4-0x3ca1afd1]
  42b90d:	es push cs
  42b90f:	test   eax,0xd5bf8597
  42b914:	jg     0x42b91f
  42b916:	jge    0x42b95d
  42b918:	dec    ebx
  42b919:	aas    
  42b91a:	xchg   DWORD PTR [edi+ecx*8-0x7712be89],esp
  42b921:	ret    
  42b922:	je     0x42b909
  42b924:	push   cs
  42b925:	or     edi,esp
  42b927:	fisubr DWORD PTR [ecx]
  42b929:	add    al,0x68
  42b92b:	jmp    0xb942b9d7
  42b930:	(bad)  
  42b931:	leave  
  42b932:	adc    al,0x5
  42b934:	add    BYTE PTR [edi-0x698ffff2],al
  42b93a:	adc    eax,0x318775c3
  42b93f:	lea    esp,[edi+ebx*4+0x6377fb2f]
  42b946:	ds sti 
  42b948:	pop    edi
  42b949:	mov    cl,cl
  42b94b:	adc    al,0x15
  42b94d:	dec    edx
  42b94e:	push   cs
  42b94f:	add    BYTE PTR [edi+edx*2+0x52],ch
  42b953:	or     al,0x62
  42b955:	cmp    al,0x36
  42b958:	add    BYTE PTR [ebx+0x0],ch
  42b95b:	jne    0x42b961
  42b95d:	lods   eax,DWORD PTR ds:[esi]
  42b95e:	add    ah,bl
  42b960:	sbb    ebp,edx
  42b962:	add    al,0x80
  42b964:	add    BYTE PTR ds:0xf236f711,ch
  42b96a:	(bad)  
  42b96c:	adc    DWORD PTR [ebp-0xa8908fc],edi
  42b972:	test   al,0x13
  42b974:	mov    al,ds:0x320041ff
  42b979:	sub    eax,0xf9c2c909
  42b97e:	add    DWORD PTR [esi-0x75],ecx
  42b981:	ins    DWORD PTR es:[edi],dx
  42b982:	jl     0x42b984
  42b984:	test   DWORD PTR ds:0xed68063e,ebp
  42b98a:	cmp    edx,0x5001e7ff
  42b990:	dec    eax
  42b992:	loope  0x42b9a3
  42b994:	inc    eax
  42b995:	lods   eax,DWORD PTR ds:[esi]
  42b996:	jl     0x42ba08
  42b998:	or     BYTE PTR [eax],al
  42b99a:	sub    BYTE PTR [edi-0x56f4f892],ch
  42b9a0:	adc    esp,DWORD PTR [eax+0x5e0041cf]
  42b9a6:	outs   dx,BYTE PTR ds:[esi]
  42b9a7:	push   ds
  42b9a8:	sub    esp,0x2c
  42b9ab:	in     eax,0xa
  42b9ad:	add    al,0x7d
  42b9af:	add    DWORD PTR [ebx+0x56],ecx
  42b9b2:	dec    edx
  42b9b3:	xchg   BYTE PTR [ebx-0xa575910],al
  42b9b9:	push   eax
  42b9ba:	and    eax,0x7dfffaaf
  42b9bf:	test   al,0x13
  42b9c1:	sbb    BYTE PTR [esi+0x41],cl
  42b9c4:	add    BYTE PTR [eax+0x30],cl
  42b9c7:	mov    esi,0x3e6dfffa
  42b9cc:	ins    BYTE PTR es:[edi],dx
  42b9cd:	xor    ebp,DWORD PTR [ebx-0x4b]
  42b9d0:	jae    0x42b9da
  42b9d2:	xchg   esp,eax
  42b9d3:	mov    edi,0xbe43a8be
  42b9d8:	xor    ebp,DWORD PTR [eax-0x4c]
  42b9db:	push   esp
  42b9dc:	inc    esp
  42b9dd:	add    BYTE PTR [ebx+eiz*2+0x52943f89],bh
  42b9e4:	add    BYTE PTR [ecx],al
  42b9e6:	xchg   esp,eax
  42b9e7:	xlat   BYTE PTR ds:[ebx]
  42b9e8:	xchg   DWORD PTR [esp+ebx*1-0x3052d5c],edi
  42b9ef:	in     eax,0x3f
  42b9f1:	cli    
  42b9f2:	or     ebx,DWORD PTR [edx-0x40]
  42b9f5:	movhps QWORD PTR [edi-0x2e],xmm5
  42b9f9:	jae    0x42b9b6
  42b9fb:	push   edx
  42b9fc:	mov    ebx,0x6421004f
  42ba01:	aam    0xf6
  42ba03:	jmp    0x42ba5a
  42ba05:	xor    al,0xfb
  42ba07:	imul   ebp,DWORD PTR [ebx+0x65dd7de6],0xb2d484d3
  42ba11:	push   ds
  42ba12:	xchg   sp,ax
  42ba14:	mov    edi,0xd6c3ff7e
  42ba19:	push   0x68d72e01
  42ba1e:	add    DWORD PTR [edi+edx*8],edi
  42ba21:	(bad)  
  42ba22:	call   esp
  42ba24:	adc    eax,0xb3a30c51
  42ba29:	push   cs
  42ba2a:	push   cs
  42ba2b:	push   esp
  42ba2c:	xlat   BYTE PTR ds:[ebx]
  42ba2d:	jge    0x42ba26
  42ba2f:	xchg   ebx,eax
  42ba30:	jne    0x42ba22
  42ba32:	inc    ecx
  42ba33:	adc    eax,0x83ffcbf4
  42ba38:	ficom  DWORD PTR [eax-0x6e]
  42ba3b:	(bad)  
  42ba3c:	sbb    DWORD PTR [ebx],esi
  42ba3e:	pop    edx
  42ba3f:	iret   
  42ba40:	adc    BYTE PTR [esi-0x2e966bf9],bh
  42ba46:	adc    al,0x34
  42ba48:	test   al,0x3e
  42ba4a:	add    BYTE PTR [ecx+eax*1],ah
  42ba4d:	call   0x6e78f83c
  42ba52:	out    0x14,eax
  42ba54:	(bad)  
  42ba56:	inc    DWORD PTR [ebx-0x34]
  42ba59:	xor    eax,0x6b7de72e
  42ba5e:	shr    DWORD PTR [edx],cl
  42ba60:	int3   
  42ba61:	mov    ecx,0xd2bc0033
  42ba66:	call   0xd40e4e6e
  42ba6b:	sti    
  42ba6c:	mov    al,BYTE PTR [eax-0x17]
  42ba6f:	dec    ebx
  42ba70:	rcl    ebp,1
  42ba72:	call   0x3c964e7a
  42ba77:	adc    eax,DWORD PTR [esi]
  42ba79:	fxch   st(0)
  42ba7b:	lods   al,BYTE PTR ds:[esi]
  42ba7c:	dec    bl
  42ba7e:	sbb    BYTE PTR [esp+esi*2+0x7d],ch
  42ba82:	sub    BYTE PTR [esp+edi*2],al
  42ba85:	push   0x87944363
  42ba8a:	in     al,0x4
  42ba8c:	xchg   esp,eax
  42ba8d:	add    BYTE PTR [eax+ebx*4-0x35],dh
  42ba91:	int    0x59
  42ba93:	(bad)  
  42ba94:	mov    bl,0x64
  42ba96:	lods   eax,DWORD PTR ds:[esi]
  42ba97:	aad    0xbe
  42ba99:	jg     0x42babf
  42ba9b:	pop    es
  42ba9c:	cmp    ecx,eax
  42ba9e:	inc    ecx
  42ba9f:	dec    edi
  42baa0:	jnp    0x42bb19
  42baa2:	and    DWORD PTR [ebx],esi
  42baa4:	sbb    DWORD PTR [esi-0x346125c8],eax
  42baaa:	cwde   
  42baab:	(bad)  
  42baac:	and    al,bh
  42baae:	adc    BYTE PTR [esi-0x7fe63475],dh
  42bab4:	dec    ebx
  42bab5:	push   esp
  42bab6:	loop   0x42bb21
  42bab8:	xchg   esp,eax
  42bab9:	retf   
  42baba:	xchg   ebx,eax
  42babb:	or     edi,DWORD PTR [edi-0xb]
  42babe:	and    al,0xf4
  42bac0:	mov    bl,0x0
  42bac2:	fs ret 
  42bac4:	loopne 0x42bac1
  42bac6:	jmp    FWORD PTR [esi+0x63c91600]
  42bacc:	jnp    0x42bafa
  42bace:	sbb    eax,0x338a46c0
  42bad3:	leave  
  42bad4:	stos   DWORD PTR es:[edi],eax
  42bad5:	xchg   esp,eax
  42bad6:	add    BYTE PTR [eax-0x7b2bd318],dh
  42badc:	test   eax,0x6a61e7e4
  42bae1:	nop
  42bae2:	push   ss
  42bae3:	jne    0x42bac5
  42bae5:	nop
  42bae6:	pop    DWORD PTR [edi-0x15]
  42bae9:	rol    DWORD PTR [ebp+0x4b8c35c8],0xf9
  42baf0:	xlat   BYTE PTR ds:[ebx]
  42baf1:	bound  eax,QWORD PTR [ebx]
  42baf3:	bound  ebp,QWORD PTR [edx+0x68]
  42baf6:	add    al,0x0
  42baf8:	sbb    al,0x94
  42bafa:	sbb    eax,eax
  42bafc:	sub    ebp,edx
  42bafe:	sbb    eax,eax
  42bb00:	stos   BYTE PTR es:[edi],al
  42bb01:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42bb02:	xor    eax,0xfcb40d87
  42bb07:	push   ecx
  42bb08:	push   ds
  42bb09:	mov    bl,0x1a
  42bb0b:	xlat   BYTE PTR ds:[ebx]
  42bb0c:	outs   dx,BYTE PTR ds:[esi]
  42bb0d:	jmp    0x42bb71
  42bb0f:	pop    gs
  42bb11:	xchg   edi,eax
  42bb12:	sub    edi,0x64
  42bb15:	ficom  DWORD PTR [ebx-0x2]
  42bb18:	popa   
  42bb19:	shl    ebp,cl
  42bb1b:	mov    dl,0xe7
  42bb1d:	adc    al,0xd3
  42bb1f:	pop    ebx
  42bb20:	mov    ebp,0xef84b9d
  42bb25:	inc    esp
  42bb26:	add    eax,0x53d86c62
  42bb2b:	sub    al,0x62
  42bb2d:	add    BYTE PTR [eax-0xe433fe7],bh
  42bb33:	ja     0x42bb36
  42bb35:	push   ds
  42bb36:	jnp    0x42bb4a
  42bb38:	push   cs
  42bb39:	test   eax,0xef84997
  42bb3e:	retf   
  42bb3f:	sti    
  42bb40:	add    BYTE PTR gs:[ebp+0x1b],bh
  42bb44:	not    DWORD PTR ds:0x3acd89
  42bb4a:	(bad)
  42bb4f:	aam    0x6e
  42bb51:	pavgw  mm1,QWORD PTR [ecx-0xa]
  42bb55:	je     0x42bb9c
  42bb57:	sub    al,0x89
  42bb59:	ds scas al,BYTE PTR es:[edi]
  42bb5b:	mov    edi,esp
  42bb5d:	jmp    0x117b:0x5eff7108
  42bb64:	add    bl,0x76
  42bb67:	mov    esi,0x7780fffe
  42bb6c:	out    0x83,al
  42bb6e:	push   ecx
  42bb6f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42bb70:	jg     0x42bb5e
  42bb72:	push   ebp
  42bb73:	add    BYTE PTR [eax],al
  42bb75:	add    bl,al
  42bb77:	sbb    ebp,DWORD PTR [eax-0x80]
  42bb7a:	js     0x42bbb9
  42bb7c:	add    BYTE PTR [ebx+0x448d1d24],cl
  42bb82:	loope  0x42bb51
  42bb84:	dec    edx
  42bb85:	call   0x386183
  42bb8a:	jo     0x42bb49
  42bb8c:	outs   dx,BYTE PTR ds:[esi]
  42bb8d:	jp     0x42bbc7
  42bb8f:	dec    ecx
  42bb90:	pop    ds
  42bb91:	adc    BYTE PTR [eax],al
  42bb93:	mov    edi,0x384ffffd
  42bb98:	or     DWORD PTR [esp+ecx*1],esp
  42bb9b:	std    
  42bb9c:	mov    ah,0x13
  42bb9e:	mov    BYTE PTR [ebp+edi*1-0x7f927500],bh
  42bba5:	clc    
  42bba6:	jmp    ecx
  42bba8:	pop    ebp
  42bba9:	lea    eax,[ecx+edx*4-0x52000618]
  42bbb0:	aad    0x27
  42bbb2:	(bad)  
  42bbb3:	mov    edx,0x20c07eb4
  42bbb8:	sti    
  42bbb9:	mov    WORD PTR [esp+edx*4+0x7bfe12bb],es
  42bbc0:	xlat   BYTE PTR ds:[ebx]
  42bbc1:	cs push ebx
  42bbc3:	and    DWORD PTR [ebx-0x103befe6],ebx
  42bbc9:	(bad)  
  42bbca:	repnz arpl dx,dx
  42bbcd:	jl     0x42bb8e
  42bbcf:	loopne 0x42bb8b
  42bbd1:	int3   
  42bbd2:	cmp    DWORD PTR [eax-0x39],0x4
  42bbd6:	add    BYTE PTR [edi+eax*8+0x23110752],dl
  42bbdd:	sub    BYTE PTR [eax],cl
  42bbdf:	sub    al,0x5f
  42bbe1:	iret   
  42bbe2:	cli    
  42bbe3:	xor    ebp,DWORD PTR [esi+0x3d08cf9]
  42bbe9:	cld    
  42bbea:	dec    edi
  42bbeb:	sub    al,0xb0
  42bbed:	pop    ecx
  42bbee:	cli    
  42bbef:	sbb    ebp,DWORD PTR [eax+ecx*4]
  42bbf2:	and    esp,DWORD PTR [ebp+edx*8+0x6400fffe]
  42bbf9:	adc    edi,ecx
  42bbfb:	adc    al,0x24
  42bbfd:	enter  0x3e,0x11
  42bc01:	xchg   edi,eax
  42bc02:	pop    eax
  42bc03:	mov    ds:0x8bf8824a,eax
  42bc08:	test   DWORD PTR [edi],edx
  42bc0a:	add    al,0x68
  42bc0c:	adc    al,0xd7
  42bc0e:	(bad)  
  42bc0f:	inc    DWORD PTR [ebx+0x5a]
  42bc12:	stc    
  42bc13:	xsha256 (bad)
  42bc14:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42bc15:	xchg   edi,eax
  42bc16:	(bad)  
  42bc17:	push   edx
  42bc18:	retf   
  42bc19:	rcl    esi,cl
  42bc1b:	adc    BYTE PTR [edi+edx*8-0x79],dl
  42bc1f:	mov    edi,0xbf77aa5b
  42bc24:	push   edx
  42bc25:	dec    esi
  42bc26:	jmp    0x48909387
  42bc2b:	and    al,0x8c
  42bc2d:	loop   0x42bbcc
  42bc2f:	inc    ebx
  42bc30:	jo     0x42bbdd
  42bc32:	cs call 0xd165bd9b
  42bc38:	mov    es,esp
  42bc3a:	sbb    DWORD PTR [eax-0x48],ebx
  42bc3d:	clc    
  42bc3e:	add    cl,ch
  42bc40:	jge    0x42bc08
  42bc42:	or     edi,eax
  42bc44:	stc    
  42bc45:	add    al,0x8f
  42bc47:	sti    
  42bc48:	outs   dx,BYTE PTR ds:[esi]
  42bc49:	push   cs
  42bc4a:	or     DWORD PTR [edi-0x70dff5e],ebx
  42bc50:	xchg   edi,eax
  42bc51:	repz test al,0x3
  42bc54:	sbb    ecx,eax
  42bc56:	pop    esp
  42bc57:	stc    
  42bc58:	push   esi
  42bc59:	inc    ecx
  42bc5a:	or     DWORD PTR [eax+0x0],esp
  42bc5d:	hlt    
  42bc5e:	inc    edx
  42bc5f:	jmp    0x4d5f382e
  42bc64:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42bc65:	jno    0x42bc67
  42bc67:	stos   BYTE PTR es:[edi],al
  42bc68:	inc    ebx
  42bc69:	jl     0x42bc66
  42bc6b:	call   0x5e065073
  42bc70:	or     DWORD PTR [ecx],edx
  42bc72:	shl    DWORD PTR [ecx+ebp*1],0x1b
  42bc76:	aaa    
  42bc77:	in     eax,dx
  42bc78:	cmp    al,0x80
  42bc7a:	sti    
  42bc7b:	das    
  42bc7c:	pop    ecx
  42bc7d:	mov    ?,WORD PTR [eax]
  42bc7f:	sub    DWORD PTR [esi+0x7a],0x95dee900
  42bc86:	xor    BYTE PTR [ecx-0x16ff8b7a],dl
  42bc8c:	shl    BYTE PTR [ebp-0x272ea528],cl
  42bc92:	(bad)  
  42bc93:	sub    DWORD PTR gs:[ebx+eax*4-0x3c6bf836],edx
  42bc9b:	mov    bl,0x7e
  42bc9d:	scas   eax,DWORD PTR es:[edi]
  42bc9e:	add    DWORD PTR [edi+edi*8+0x3a],0x5d
  42bca3:	push   ebp
  42bca4:	add    esi,DWORD PTR [ebx]
  42bca6:	pop    ebp
  42bca7:	inc    ecx
  42bca8:	add    eax,DWORD PTR [esi+0x2f]
  42bcab:	outs   dx,BYTE PTR ds:[esi]
  42bcac:	retf   
  42bcad:	mov    ebx,0xc635ff73
  42bcb2:	retf   0x3986
  42bcb5:	sbb    al,0xd1
  42bcb7:	jae    0x42bc6c
  42bcb9:	jmp    0x149424c6
  42bcbe:	pop    es
  42bcbf:	add    BYTE PTR [ebx-0x17cea000],al
  42bcc5:	xor    ebx,edx
  42bcc7:	add    BYTE PTR [eax],al
  42bcc9:	ins    BYTE PTR es:[edi],dx
  42bcca:	push   edi
  42bccb:	dec    esp
  42bccc:	xor    DWORD PTR [edx-0x34],esi
  42bccf:	clc    
  42bcd0:	mov    bh,ch
  42bcd2:	fidivr DWORD PTR [esp+ecx*1]
  42bcd5:	pusha  
  42bcd6:	(bad)  
  42bcd8:	xchg   BYTE PTR [eax+eax*2],ch
  42bcdb:	js     0x42bd1e
  42bcdd:	in     eax,dx
  42bcde:	rol    BYTE PTR [edx],0x66
  42bce1:	in     eax,dx
  42bce2:	jge    0x42bd5d
  42bce4:	je     0x42bcbb
  42bce6:	pop    ebp
  42bce7:	cmp    al,0xf8
  42bce9:	jmp    0x42bc82
  42bceb:	add    BYTE PTR [eax],al
  42bced:	jo     0x42bcbd
  42bcef:	lock out 0x65,eax
  42bcf2:	mov    dh,0x0
  42bcf4:	add    BYTE PTR [edx+0x56],ah
  42bcf7:	in     al,dx
  42bcf8:	mov    dh,dh
  42bcfa:	mov    bh,cl
  42bcfc:	out    0xf0,al
  42bcfe:	mov    ebp,0xcb9722d8
  42bd03:	leave  
  42bd04:	lea    esp,gs:[ebp-0x37828b8b]
  42bd0b:	and    al,0xfb
  42bd0d:	jle    0x42bcd4
  42bd0f:	jge    0x42bcd3
  42bd11:	push   ss
  42bd12:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42bd13:	mov    ecx,0x2d97ddbd
  42bd18:	xchg   DWORD PTR [ebp+0x11],edx
  42bd1b:	fist   DWORD PTR [edi]
  42bd1d:	mov    edx,0xba51afa8
  42bd22:	xor    BYTE PTR [edi],0x87
  42bd25:	add    BYTE PTR es:[edi],ch
  42bd28:	sub    ah,BYTE PTR [eax]
  42bd2a:	add    BYTE PTR [ecx+edx*1],ah
  42bd2d:	and    al,0x89
  42bd2f:	add    ch,bl
  42bd31:	out    0xcc,eax
  42bd33:	retf   
  42bd34:	mov    al,0xf5
  42bd36:	test   BYTE PTR [ebp+0x7db883ff],bh
  42bd3c:	add    al,BYTE PTR [eax]
  42bd3e:	push   edi
  42bd3f:	lock sub eax,0x5831e8e8
  42bd45:	idiv   bh
  42bd47:	stc    
  42bd48:	mov    esp,0xfcda8405
  42bd4d:	(bad)  
  42bd4e:	jmp    esp
  42bd50:	adc    eax,0xae0089f0
  42bd55:	loope  0x42bd59
  42bd57:	push   cs
  42bd58:	xchg   ebp,eax
  42bd59:	fs add eax,0x50f83ec0
  42bd5f:	mov    ah,BYTE PTR [esi+esi*4+0x31b16366]
  42bd66:	ret    
  42bd67:	push   edx
  42bd68:	jle    0x42bced
  42bd6a:	add    BYTE PTR ds:0x38f87b02,bh
  42bd70:	das    
  42bd71:	pop    edx
  42bd72:	mov    ebp,DWORD PTR [eax-0x4c]
  42bd75:	sub    DWORD PTR [edi-0x1b],eax
  42bd78:	inc    ebx
  42bd79:	inc    esi
  42bd7a:	sbb    ch,ch
  42bd7c:	push   es
  42bd7d:	cld    
  42bd7e:	xor    ebp,DWORD PTR [ebx]
  42bd80:	inc    ebp
  42bd81:	rol    DWORD PTR [ebx],cl
  42bd83:	shr    BYTE PTR [edi+eax*4+0x73cd0545],0xf4
  42bd8b:	add    BYTE PTR [esi-0x44],bh
  42bd8e:	add    eax,DWORD PTR [ebx+0x7533020b]
  42bd94:	adc    DWORD PTR [ecx],ebp
  42bd96:	cmp    al,0x72
  42bd98:	mov    eax,0xeae85cf4
  42bd9d:	out    dx,al
  42bd9e:	cmp    al,0x0
  42bda0:	lods   eax,DWORD PTR ds:[esi]
  42bda1:	mov    eax,ds:0xfd9476fa
  42bda6:	pop    ecx
  42bda7:	add    BYTE PTR [edx-0x76],cl
  42bdaa:	jnp    0x42bd6e
  42bdac:	mov    esp,0xa3fa686a
  42bdb1:	pop    ebx
  42bdb2:	mov    edi,0x485a5773
  42bdb7:	and    BYTE PTR [ebp+0x1df02a60],dl
  42bdbd:	sar    BYTE PTR fs:[esi-0x15],cl
  42bdc1:	mov    ebx,0xebd1f1fe
  42bdc6:	std    
  42bdc7:	je     0x42bdcd
  42bdc9:	pop    edx
  42bdca:	dec    edx
  42bdcb:	clc    
  42bdcc:	xchg   esp,eax
  42bdcd:	inc    ebp
  42bdce:	jge    0x42bdca
  42bdd0:	fld    TBYTE PTR [edi-0xd587b25]
  42bdd6:	xor    edi,ebx
  42bdd8:	leave  
  42bdd9:	retf   
  42bdda:	jbe    0x42bd9e
  42bddc:	dec    ebx
  42bddd:	and    al,0xd4
  42bddf:	out    0x74,eax
  42bde1:	cmp    eax,0x9710faca
  42bde6:	push   edi
  42bde7:	adc    BYTE PTR [ebx],dh
  42bde9:	out    dx,al
  42bdea:	retf   0xdc14
  42bded:	test   eax,0x1900003e
  42bdf2:	xchg   edi,eax
  42bdf3:	push   edi
  42bdf4:	add    al,0xe4
  42bdf6:	xlat   BYTE PTR ds:[ebx]
  42bdf7:	aad    0xfd
  42bdf9:	lds    edx,FWORD PTR [edi-0x6622a8d7]
  42bdff:	xor    al,0x52
  42be01:	imul   esi,ecx,0x13
  42be04:	call   0xfb132a9c
  42be09:	sbb    DWORD PTR [edi+0xb1f1a57],edx
  42be0f:	sub    BYTE PTR [edi+edx*1],dl
  42be12:	iret   
  42be13:	leave  
  42be14:	jle    0x42be62
  42be16:	(bad)  
  42be18:	jle    0x42be76
  42be1a:	mov    ds:0x347ec9,eax
  42be1f:	stc    
  42be20:	add    eax,DWORD PTR [ebx+0x60]
  42be23:	cmc    
  42be24:	add    ecx,DWORD PTR ds:0xc37af138
  42be2a:	fsub   st,st(6)
  42be2c:	adc    ah,BYTE PTR [esi-0x67a6c586]
  42be32:	adc    DWORD PTR [ecx],ebp
  42be34:	fild   DWORD PTR [ecx-0x5bd85387]
  42be3a:	ja     0x42be66
  42be3c:	jge    0x42bdd3
  42be3e:	fdivr  DWORD PTR [esi]
  42be40:	into   
  42be41:	jle    0x42be07
  42be43:	les    eax,FWORD PTR fs:[eax]
  42be46:	cld    
  42be47:	add    BYTE PTR [esi],dh
  42be49:	retf   0x9c3
  42be4c:	(bad)  [edi+0x78]
  42be4f:	sub    ch,BYTE PTR [edi]
  42be51:	mov    esi,0xfc2729
  42be56:	pop    ebx
  42be57:	sub    eax,0xd4d2e05e
  42be5c:	shl    BYTE PTR [edx],1
  42be5e:	out    0x75,al
  42be60:	sub    eax,DWORD PTR [eax]
  42be62:	in     al,0xc3
  42be64:	push   ebx
  42be65:	add    BYTE PTR [ebx-0x59],ch
  42be68:	xor    eax,0xc0f8a8cf
  42be6d:	cmp    DWORD PTR [eax+eax*1-0x17],ebp
  42be71:	jl     0x42be4b
  42be73:	clc    
  42be74:	std    
  42be75:	ret    0x7c8e
  42be78:	mov    eax,DWORD PTR [ebx]
  42be7a:	xchg   esp,eax
  42be7b:	add    BYTE PTR [edi],bh
  42be7d:	add    bl,BYTE PTR [ebx+0x2f]
  42be80:	outs   dx,BYTE PTR ds:[esi]
  42be81:	(bad)  
  42be82:	sti    
  42be83:	add    BYTE PTR [ebx],0xce
  42be86:	(bad)  
  42be87:	jl     0x42be31
  42be89:	(bad)  
  42be8a:	pop    ss
  42be8b:	ja     0x42be75
  42be8d:	add    edx,DWORD PTR [ebx+ebp*1-0x2713a78c]
  42be94:	retf   
  42be95:	push   0x6cffc3de
  42be9a:	xlat   BYTE PTR ds:[ebx]
  42be9b:	dec    edi
  42be9c:	jge    0x42bf00
  42be9e:	push   edx
  42be9f:	call   0x7b026ad2
  42bea4:	xor    al,0x1d
  42bea6:	mov    BYTE PTR [ebx],0x0
  42bea9:	pusha  
  42beaa:	pop    esp
  42beab:	int3   
  42beac:	test   DWORD PTR [esi-0x5377cd41],esp
  42beb2:	iret   
  42beb3:	je     0x42bef9
  42beb5:	cmp    eax,0x64055a67
  42beba:	add    ah,bl
  42bebc:	int3   
  42bebd:	dec    edi
  42bebe:	mov    cs:0x576cd1c7,al
  42bec4:	dec    edi
  42bec5:	cmp    ebp,DWORD PTR [edx-0x1c]
  42bec8:	les    eax,FWORD PTR [esp+ebx*4]
  42becb:	mov    al,ds:0x5ba48d33
  42bed0:	xor    edi,ebx
  42bed2:	jl     0x42bf33
  42bed4:	(bad)  
  42bed5:	je     0x42bec4
  42bed7:	dec    edx
  42bed8:	push   cs
  42bed9:	sti    
  42beda:	pop    ds
  42bedb:	sbb    al,0x83
  42bedd:	jae    0x42bea6
  42bedf:	into   
  42bee0:	cmp    al,0x8
  42bee2:	and    bl,bl
  42bee4:	les    esi,FWORD PTR [edi+edi*8+0x14]
  42bee8:	ds and al,ch
  42beeb:	pusha  
  42beec:	push   cs
  42beed:	adc    DWORD PTR [esi],ebp
  42beef:	jl     0x42beb8
  42bef1:	inc    edx
  42bef2:	adc    DWORD PTR [ecx-0x14],edx
  42bef5:	sub    ebx,ebx
  42bef7:	xlat   BYTE PTR ds:[ebx]
  42bef8:	add    bl,bh
  42befa:	cmp    al,0x94
  42befc:	fsubr  DWORD PTR [esi]
  42befe:	lods   eax,DWORD PTR ds:[esi]
  42beff:	fcmovnb st,st(5)
  42bf01:	scas   eax,DWORD PTR es:[edi]
  42bf02:	call   0x9e91a1e3
  42bf07:	arpl   sp,dx
  42bf09:	xchg   BYTE PTR [esi-0x7e17b41f],ch
  42bf0f:	ret    0xfa5e
  42bf12:	add    BYTE PTR [edx],bl
  42bf14:	mov    ch,0x2d
  42bf16:	inc    eax
  42bf18:	push   es
  42bf19:	or     al,BYTE PTR [eax-0x43]
  42bf1c:	mov    bl,0x73
  42bf1e:	or     al,0x0
  42bf20:	adc    eax,0x3afdf6cf
  42bf25:	out    dx,al
  42bf26:	mov    edi,0xbc85d65e
  42bf2b:	or     BYTE PTR [ebp+0x3eec8309],bh
  42bf31:	loopne 0x42bf3d
  42bf33:	push   ebx
  42bf34:	adc    dl,BYTE PTR es:[edi+edx*2]
  42bf38:	xor    dl,BYTE PTR es:[eax]
  42bf3b:	jmp    0x42bec4
  42bf3d:	sub    BYTE PTR ds:0x4ab6308d,al
  42bf43:	push   esi
  42bf44:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42bf45:	fstp   QWORD PTR [esi-0x2]
  42bf48:	call   0x82f6:0x1005f27f
  42bf4f:	inc    ebp
  42bf50:	test   edi,ebp
  42bf52:	cmp    eax,0xfc01e718
  42bf57:	xor    ch,BYTE PTR [ebx]
  42bf59:	(bad)  
  42bf5a:	mov    edx,DWORD PTR [eax+0x40]
  42bf5d:	inc    edi
  42bf5e:	jl     0x42bf50
  42bf60:	ds mov eax,0x81615d87
  42bf66:	leave  
  42bf67:	add    ah,al
  42bf69:	cmp    bh,al
  42bf6b:	mov    BYTE PTR [eax-0x50],bh
  42bf6e:	lock sar DWORD PTR [ebx+ebp*1],0x4
  42bf73:	test   ebp,ebp
  42bf75:	sub    dl,BYTE PTR ds:0x4f112d6a
  42bf7b:	mov    eax,DWORD PTR [ebx-0x5a]
  42bf7e:	xchg   DWORD PTR [ebx+edi*1-0x4b],esp
  42bf82:	jle    0x42bf44
  42bf84:	add    BYTE PTR [eax-0x453fd395],ah
  42bf8a:	pop    ss
  42bf8b:	leave  
  42bf8c:	ret    
  42bf8d:	xchg   esp,eax
  42bf8e:	pop    esi
  42bf8f:	inc    edx
  42bf90:	lock sbb eax,0x5986fc1a
  42bf96:	inc    ebx
  42bf97:	jbe    0x42bfda
  42bf99:	mov    BYTE PTR [eax+0x4d],dl
  42bf9c:	adc    BYTE PTR ds:0x95aff7ea,bl
  42bfa2:	jle    0x42bf88
  42bfa4:	push   eax
  42bfa5:	setae  dh
  42bfa8:	xchg   BYTE PTR [ebx-0x2d],cl
  42bfab:	ja     0x42bf7c
  42bfad:	ja     0x42bfb7
  42bfaf:	xor    BYTE PTR [edx+0x17],dl
  42bfb2:	cs int3 
  42bfb4:	jae    0x42bfe4
  42bfb6:	push   esi
  42bfb7:	mov    edi,0x7fd72e04
  42bfbc:	rcl    BYTE PTR [eax+ebp*2+0x3f53872e],1
  42bfc3:	inc    ebp
  42bfc4:	sbb    BYTE PTR fs:[edx],0x83
  42bfc8:	mov    edi,0x72778d00
  42bfcd:	test   BYTE PTR [esi-0x3ee8f7ad],bh
  42bfd3:	add    al,0x52
  42bfd5:	ins    BYTE PTR es:[edi],dx
  42bfd6:	mov    ecx,0x4e5bfcc7
  42bfdb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42bfdc:	test   BYTE PTR [edi+0x43],ch
  42bfdf:	aas    
  42bfe0:	test   DWORD PTR [edx+0x50],eax
  42bfe3:	cli    
  42bfe4:	gs jmp 0x42bfc1
  42bfe7:	lock and eax,DWORD PTR [eax]
  42bfea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42bfeb:	pop    ss
  42bfec:	add    al,0x7f
  42bfee:	pop    esp
  42bfef:	stos   BYTE PTR es:[edi],al
  42bff0:	fiadd  DWORD PTR [edi]
  42bff2:	ret    0x2f06
  42bff5:	call   0xfb08f361
  42bffa:	pop    edi
  42bffb:	cdq    
  42bffc:	push   eax
  42bffd:	sbb    eax,0x73c5d87e
  42c002:	mov    al,0xaf
  42c004:	jns    0x42bfc7
  42c006:	verw   WORD PTR [esi-0x16f81024]
  42c00d:	add    ebx,DWORD PTR [ebx]
  42c00f:	xor    al,0xcd
  42c011:	repz sbb al,0xff
  42c014:	arpl   sp,ax
  42c016:	addr16 cld 
  42c018:	cmp    BYTE PTR ds:0xdc15f7f3,al
  42c01e:	stos   DWORD PTR es:[edi],eax
  42c01f:	lds    esi,FWORD PTR [ebx-0x35]
  42c022:	jns    0x42bfe4
  42c024:	or     ch,BYTE PTR [edi]
  42c026:	pop    ebp
  42c027:	mov    esi,0x756103f0
  42c02c:	dec    esp
  42c02d:	jg     0x42c087
  42c02f:	clc    
  42c030:	fcomp  DWORD PTR gs:[ebx-0x6fd6a1d3]
  42c037:	sbb    eax,0xc81b3226
  42c03c:	cmp    ebx,edi
  42c03e:	pop    ss
  42c03f:	mov    ch,al
  42c041:	add    edx,DWORD PTR [edi+edx*2-0x567baea4]
  42c048:	mov    esp,0x64c07e66
  42c04d:	les    eax,FWORD PTR [eax]
  42c04f:	out    0x3c,eax
  42c051:	into   
  42c052:	sub    BYTE PTR [eax+0x38],ah
  42c055:	xchg   edx,eax
  42c056:	push   ebp
  42c057:	mov    WORD PTR [ebx+0x45a2fbab],cs
  42c05d:	stc    
  42c05e:	push   esi
  42c05f:	rol    DWORD PTR [ebx-0x7cb42c75],0x83
  42c066:	iret   
  42c067:	inc    ebx
  42c068:	sub    ch,cl
  42c06a:	retf   0xb4c0
  42c06d:	ins    DWORD PTR es:[edi],dx
  42c06e:	ret    0x362e
  42c071:	(bad)  
  42c073:	or     al,0x24
  42c075:	retf   
  42c076:	retf   0xc117
  42c079:	cmp    al,0x36
  42c07b:	mov    dl,0x5
  42c07d:	ins    BYTE PTR es:[edi],dx
  42c07e:	inc    eax
  42c07f:	or     al,0x51
  42c081:	add    BYTE PTR [esi],bl
  42c083:	call   0xcef21eef
  42c088:	ds clc 
  42c08a:	in     al,dx
  42c08b:	fs inc ecx
  42c08d:	xchg   DWORD PTR [eax+eiz*8],edx
  42c090:	out    dx,al
  42c091:	jb     0x42c084
  42c093:	imul   eax,DWORD PTR [edx+0x18],0x86bc54d9
  42c09a:	sbb    al,0xd8
  42c09c:	out    dx,al
  42c09d:	mov    edi,0x4bbf0d72
  42c0a2:	jns    0x42c0ec
  42c0a4:	xor    al,0xf8
  42c0a6:	ficom  DWORD PTR [esp+esi*4+0x7e]
  42c0aa:	sub    BYTE PTR [edi+edi*1+0x55a0e9d0],dl
  42c0b1:	lock fadd QWORD PTR [eax]
  42c0b4:	scas   eax,DWORD PTR es:[edi]
  42c0b5:	xchg   BYTE PTR [ebp+edx*2-0x6e],dl
  42c0b9:	push   ebp
  42c0ba:	or     al,0xbd
  42c0bc:	test   eax,0x10394c88
  42c0c1:	inc    ebp
  42c0c2:	hlt    
  42c0c3:	repnz aam 0xc
  42c0c6:	jae    0x42c0ae
  42c0c8:	jmp    0x7ff6f72d
  42c0cd:	xor    DWORD PTR [edi+0x575957db],edx
  42c0d3:	and    BYTE PTR [ecx+0x7],dl
  42c0d6:	add    BYTE PTR [edi],dl
  42c0d8:	aam    0xbc
  42c0da:	add    BYTE PTR [ecx+eax*2-0x7c],bh
  42c0de:	icebp  
  42c0df:	jne    0x42c14e
  42c0e1:	xchg   BYTE PTR [ecx+edi*8-0x31],dh
  42c0e5:	inc    edx
  42c0e6:	adc    al,0x60
  42c0e8:	out    0x8,al
  42c0ea:	mov    DWORD PTR [esi],edi
  42c0ec:	cmp    al,0x88
  42c0ee:	dec    edx
  42c0ef:	stc    
  42c0f0:	pop    es
  42c0f1:	add    bh,ah
  42c0f3:	mov    ah,0x7b
  42c0f5:	xchg   ebx,ebp
  42c0f7:	(bad)  
  42c0f8:	(bad)  
  42c0f9:	or     BYTE PTR [edi-0x7e479d00],al
  42c0ff:	rcr    BYTE PTR [esi-0x1213868d],1
  42c105:	xor    esp,0xffffffff
  42c108:	leave  
  42c109:	push   ecx
  42c10a:	bound  eax,QWORD PTR [eax]
  42c10c:	mov    esp,0x5c682f4
  42c111:	retf   0xfe5c
  42c114:	add    al,BYTE PTR [eax-0x6aff8b46]
  42c11a:	pop    esi
  42c11b:	add    eax,0x4ad0a88d
  42c120:	push   esi
  42c121:	and    eax,0x42fe59b7
  42c126:	test   edx,esi
  42c128:	add    eax,0x4e82efc8
  42c12d:	xchg   ebp,eax
  42c12e:	adc    ecx,DWORD PTR [ebp-0xc]
  42c131:	mov    edi,?
  42c133:	repz mov ch,BYTE PTR [esi+edi*1-0x40]
  42c138:	xor    bh,al
  42c13a:	retf   0x64
  42c13d:	push   edx
  42c13e:	push   edx
  42c13f:	or     al,0xc
  42c141:	jl     0x42c10c
  42c143:	jo     0x42c14d
  42c145:	pop    esp
  42c147:	add    BYTE PTR [ebp-0x3b],0x3b
  42c14b:	shr    eax,0xae
  42c14e:	es idiv bh
  42c151:	stc    
  42c152:	les    ebp,FWORD PTR [esi+0x2d]
  42c155:	pop    ss
  42c156:	add    cl,BYTE PTR [ebp+0x61f49145]
  42c15c:	add    eax,0x50f3fde0
  42c161:	push   edx
  42c162:	adc    bh,dh
  42c164:	adc    eax,0x3ab401
  42c169:	mov    eax,0xae156ec4
  42c16e:	inc    esi
  42c16f:	cld    
  42c170:	add    eax,0x36f5b7c8
  42c175:	xchg   esp,eax
  42c176:	(bad)  
  42c177:	cmp    BYTE PTR [eax],ch
  42c179:	and    esi,DWORD PTR [ebp-0x2bfff1ee]
  42c17f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c180:	mov    es,WORD PTR [eax]
  42c182:	(bad)  [edx+0x14]
  42c185:	rcr    ch,0x6a
  42c188:	jno    0x42c1d9
  42c18a:	icebp  
  42c18b:	sub    cl,ch
  42c18d:	or     cl,BYTE PTR [ebx-0x6bfec5d2]
  42c193:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c194:	(bad)  
  42c195:	and    eax,DWORD PTR [ecx]
  42c197:	in     eax,dx
  42c198:	mov    al,ds:0xc627943d
  42c19d:	sub    ah,BYTE PTR [eax-0x5b]
  42c1a0:	jle    0x42c19a
  42c1a2:	jle    0x42c157
  42c1a4:	in     eax,0x7f
  42c1a6:	ffree  st(7)
  42c1a8:	jle    0x42c1a2
  42c1aa:	xor    eax,0x952784de
  42c1af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c1b0:	(bad)  
  42c1b1:	jg     0x42c160
  42c1b3:	mov    eax,ds:0xa88b82f7
  42c1b8:	(bad)  
  42c1b9:	jmp    FWORD PTR [esi]
  42c1bb:	mov    bl,0xdb
  42c1bd:	std    
  42c1be:	sub    eax,0x1ebf26a5
  42c1c3:	sbb    BYTE PTR [edi-0x3b],bh
  42c1c6:	mov    ah,0x27
  42c1c8:	int    0x60
  42c1ca:	push   es
  42c1cb:	mov    eax,ds:0xb6fef57e
  42c1d0:	add    BYTE PTR [edx],0x95
  42c1d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c1d4:	(bad)  
  42c1d5:	jg     0x42c244
  42c1d7:	shl    edi,1
  42c1d9:	test   BYTE PTR [edi-0x59],bl
  42c1dc:	(bad)  
  42c1dd:	(bad)  
  42c1de:	out    dx,al
  42c1df:	fsub   QWORD PTR [esi]
  42c1e1:	mov    edi,0x18001400
  42c1e6:	or     edx,DWORD PTR [ecx]
  42c1e8:	add    eax,0x8194ffff
  42c1ed:	lock push edi
  42c1ef:	push   edi
  42c1f0:	add    BYTE PTR [ecx-0x33],ch
  42c1f3:	jle    0x42c202
  42c1f5:	fs in  eax,0x2b
  42c1f8:	mov    ebp,0x588759e8
  42c1fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c1fe:	test   BYTE PTR [ecx+ebx*2],bl
  42c201:	cmp    al,0x0
  42c203:	jp     0x42c21d
  42c205:	and    ebx,eax
  42c207:	adc    DWORD PTR [edi+0x1fc023e4],edi
  42c20d:	aaa    
  42c20e:	add    BYTE PTR [eax+0x73ec1b3a],bh
  42c214:	mov    bh,0xd8
  42c216:	inc    edi
  42c217:	xchg   ecx,eax
  42c218:	or     BYTE PTR [edi+0x690e5e0d],0xcd
  42c21f:	lods   eax,DWORD PTR ds:[esi]
  42c220:	xor    al,0xf0
  42c222:	or     esp,0xffffffea
  42c225:	jmp    0xe942bdaa
  42c22a:	add    edi,DWORD PTR [edx]
  42c22c:	sbb    DWORD PTR [ecx],edx
  42c22e:	ret    
  42c22f:	adc    DWORD PTR [edi+0x1f7023f4],edi
  42c235:	xlat   BYTE PTR ds:[ebx]
  42c236:	jmp    FWORD PTR [edi+0x3a]
  42c239:	fcmovnbe st,st(3)
  42c23b:	and    esi,DWORD PTR [edi-0x7f6eb7e8]
  42c241:	aas    
  42c242:	or     eax,0xcd68a30e
  42c247:	add    BYTE PTR [ebp+0x7c844834],bh
  42c24d:	out    dx,al
  42c24e:	mov    ah,0xa7
  42c250:	sti    
  42c251:	mov    ecx,0x2917f6d1
  42c256:	sbb    al,bh
  42c258:	outs   dx,BYTE PTR ds:[esi]
  42c259:	or     DWORD PTR [edi],0x6909e80a
  42c25f:	int    0x9e
  42c261:	xor    eax,0x58af5980
  42c266:	es pop edx
  42c268:	test   al,0x58
  42c26a:	add    BYTE PTR [edx],ch
  42c26c:	sbb    BYTE PTR [ecx+0x263b745c],bh
  42c272:	push   ss
  42c273:	inc    ecx
  42c274:	push   edi
  42c275:	cmp    al,0xf9
  42c277:	sbb    esp,ebx
  42c279:	add    eax,0x3690d080
  42c27e:	adc    DWORD PTR [ebx+0x50],esp
  42c281:	or     BYTE PTR [eax],ah
  42c283:	add    eax,0xfd042a79
  42c288:	imul   ebp,DWORD PTR [esi],0xf5d06905
  42c28e:	je     0x42c2ac
  42c290:	pop    esi
  42c291:	sbb    DWORD PTR [eax-0x56],ebx
  42c294:	pop    ss
  42c295:	mov    ecx,0xe46bee2a
  42c29a:	cli    
  42c29b:	xchg   esi,eax
  42c29c:	fidivr DWORD PTR [ebx]
  42c29e:	stc    
  42c29f:	into   
  42c2a0:	dec    ebx
  42c2a1:	jp     0x42c322
  42c2a3:	nop
  42c2a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c2a5:	cmp    al,0xf0
  42c2a8:	pop    edx
  42c2a9:	jmp    0x42c310
  42c2ab:	aam    0x0
  42c2ad:	outs   dx,DWORD PTR ds:[esi]
  42c2ae:	jnp    0x42c2ba
  42c2b0:	aaa    
  42c2b1:	add    BYTE PTR [esi+esi*4],bh
  42c2b4:	icebp  
  42c2b5:	aaa    
  42c2b6:	inc    eax
  42c2b7:	add    cl,ch
  42c2b9:	inc    esp
  42c2ba:	fidivr WORD PTR [edi+0x50]
  42c2bd:	jbe    0x42c2f4
  42c2bf:	mov    al,ds:0xbf5870c3
  42c2c4:	mul    BYTE PTR [ecx]
  42c2c6:	sar    BYTE PTR [edi-0x7d],1
  42c2c9:	(bad)  
  42c2ca:	pop    ebx
  42c2cb:	inc    eax
  42c2cc:	jmp    0xc346f768
  42c2d1:	mov    bh,0x58
  42c2d3:	mov    edi,0x741a6069
  42c2d8:	push   es
  42c2d9:	pop    ss
  42c2da:	mov    eax,0xeb969d3a
  42c2df:	mov    edi,0xb20656a9
  42c2e4:	add    BYTE PTR [edi+edi*2+0x3f1d08b4],ch
  42c2eb:	add    BYTE PTR [eax],al
  42c2ed:	ror    dh,0xe1
  42c2f0:	in     al,0x5a
  42c2f2:	(bad)  
  42c2f3:	iret   
  42c2f4:	xor    bh,0xbb
  42c2f7:	pop    edx
  42c2f8:	inc    eax
  42c2f9:	cmp    eax,0xd70473ff
  42c2fe:	ficom  WORD PTR [edi-0x3d]
  42c301:	lods   eax,DWORD PTR ds:[esi]
  42c302:	(bad)  
  42c303:	sbb    DWORD PTR [ecx+edi*1-0x7c],esi
  42c307:	idiv   DWORD PTR [edi]
  42c309:	shl    BYTE PTR [eax-0x1f],0xf0
  42c30d:	cli    
  42c30e:	mov    edi,cs
  42c310:	add    BYTE PTR [eax],0x87
  42c313:	mov    esp,0xfefd405a
  42c318:	je     0x42c2e3
  42c31a:	jge    0x42c2e3
  42c31c:	sbb    DWORD PTR [ecx+esi*1-0x27],esi
  42c320:	mov    ah,0x8b
  42c322:	or     al,al
  42c324:	mov    ds:0xa3d7bd42,eax
  42c329:	inc    edx
  42c32a:	mov    ebp,0xad42a0b7
  42c32f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c330:	mov    al,ds:0x9e19ad42
  42c335:	inc    edx
  42c336:	mov    ebp,0xbd42a128
  42c33b:	sub    eax,0x4cad42a1
  42c340:	sahf   
  42c341:	inc    edx
  42c342:	lods   eax,DWORD PTR ds:[esi]
  42c343:	in     al,dx
  42c344:	popf   
  42c345:	inc    edx
  42c346:	jge    0x42c3c5
  42c348:	mov    al,ds:0xa0877d42
  42c34d:	inc    edx
  42c34e:	ins    DWORD PTR es:[edi],dx
  42c34f:	jno    0x42c2f1
  42c351:	inc    edx
  42c352:	ins    DWORD PTR es:[edi],dx
  42c353:	(bad)  
  42c354:	mov    al,ds:0x9dbc7d42
  42c359:	inc    edx
  42c35a:	jge    0x42c306
  42c35c:	popf   
  42c35d:	inc    edx
  42c35e:	xchg   esp,eax
  42c35f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c360:	push   cs
  42c361:	mov    ds:0x8729a7d6,eax
  42c366:	inc    eax
  42c367:	daa    
  42c368:	loopne 0x42c361
  42c36a:	pop    ss
  42c36b:	or     al,0x18
  42c36d:	xchg   ecx,edx
  42c36f:	xlat   BYTE PTR ds:[ebx]
  42c370:	das    
  42c371:	xchg   ecx,ebx
  42c373:	lahf   
  42c374:	sub    al,0x87
  42c376:	add    BYTE PTR [edi+edx*1],ah
  42c379:	les    ecx,FWORD PTR [eax-0x7713fc30]
  42c37f:	fmul   DWORD PTR [ebx]
  42c381:	hlt    
  42c382:	mov    al,dl
  42c384:	add    ebp,eax
  42c386:	mov    BYTE PTR [eax+0xb],bl
  42c389:	lock test DWORD PTR [edx-0x2e],edx
  42c38d:	jbe    0x42c3d2
  42c38f:	mov    eax,0xb0637e9e
  42c394:	sahf   
  42c395:	inc    ebx
  42c396:	push   ebx
  42c397:	pop    ds
  42c398:	in     eax,0xf7
  42c39a:	jae    0x42c32f
  42c39c:	(bad)  
  42c39d:	mov    esi,0xfeb84de8
  42c3a2:	call   DWORD PTR [ecx]
  42c3a4:	popa   
  42c3a5:	dec    ecx
  42c3a6:	inc    ebp
  42c3a7:	push   ds
  42c3a8:	repnz inc BYTE PTR [ebx-0x7fec4c23]
  42c3af:	mov    ebp,0x14e94ca5
  42c3b4:	xor    ebx,edi
  42c3b6:	jae    0x42c370
  42c3b8:	daa    
  42c3b9:	(bad)  
  42c3ba:	adc    BYTE PTR [eax],ah
  42c3bc:	cli    
  42c3bd:	jle    0x42c3b7
  42c3bf:	popa   
  42c3c0:	fsubr  st(7),st
  42c3c2:	xchg   BYTE PTR [edi-0x51],dl
  42c3c5:	jns    0x42c386
  42c3c7:	or     BYTE PTR [edi],dl
  42c3c9:	js     0x42c394
  42c3cb:	mov    edx,DWORD PTR [edi]
  42c3cd:	jp     0x42c38e
  42c3cf:	or     bh,bl
  42c3d1:	js     0x42c414
  42c3d3:	mov    ds:0x9b0b7d03,eax
  42c3d8:	add    BYTE PTR [ecx+0x3d],dh
  42c3db:	add    BYTE PTR [edi+0xc1f59a5],al
  42c3e1:	or     al,0xe1
  42c3e3:	jnp    0x42c3ba
  42c3e5:	adc    esi,edx
  42c3e7:	ret    
  42c3e8:	xchg   ebx,eax
  42c3e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c3ea:	call   0x6efc0fe1
  42c3ef:	cmp    eax,0x4ec2fc95
  42c3f4:	nop
  42c3f5:	xchg   DWORD PTR [edi+ebx*1-0x70],ebp
  42c3f9:	cld    
  42c3fa:	sbb    BYTE PTR [ecx],bh
  42c3fc:	nop
  42c3fd:	xchg   DWORD PTR [eax+ebp*8-0x79],ebx
  42c401:	in     al,dx
  42c402:	cld    
  42c403:	dec    DWORD PTR [ebp-0x70731acf]
  42c409:	in     al,0x8
  42c40b:	xchg   ecx,eax
  42c40c:	xchg   edi,eax
  42c40d:	or     DWORD PTR [eax+0x40],esi
  42c410:	mov    eax,0xb0486010
  42c415:	in     al,0xed
  42c417:	mov    ebx,0x12e4849e
  42c41c:	xchg   esp,eax
  42c41d:	add    BYTE PTR [ecx+0x42],ch
  42c420:	xchg   ebp,eax
  42c421:	clc    
  42c422:	pop    esi
  42c423:	and    esp,DWORD PTR [edi+0x10]
  42c426:	mov    cl,BYTE PTR [edx-0x68]
  42c429:	jg     0x42c42d
  42c42b:	or     BYTE PTR [eax+eax*2-0x7e70fc18],dl
  42c432:	add    BYTE PTR [ebx],dl
  42c434:	xchg   esp,eax
  42c435:	add    BYTE PTR [esi+0x41],bl
  42c438:	pushf  
  42c439:	or     DWORD PTR [ebx+0x6648954a],ebx
  42c43f:	mov    esp,0x6a096000
  42c444:	mov    al,0x8e
  42c446:	add    cl,ch
  42c448:	ret    0x7db7
  42c44b:	fstp   TBYTE PTR [ecx+ecx*8+0x0]
  42c44f:	imul   edi,DWORD PTR [edi+0x6d000790],0xe9000a44
  42c459:	pop    ss
  42c45a:	scas   eax,DWORD PTR es:[edi]
  42c45b:	add    eax,0x9d713f6
  42c460:	jmp    0xea6444fc
  42c465:	adc    cl,BYTE PTR [edx+0x8]
  42c468:	push   cs
  42c469:	sbb    ecx,DWORD PTR [edx+0xc]
  42c46c:	push   es
  42c46d:	sbb    al,BYTE PTR [edx]
  42c46f:	add    BYTE PTR [edx],0xd0
  42c472:	or     eax,DWORD PTR [edx+ebx*1-0x3affff6f]
  42c479:	repz jg 0x42c47d
  42c47c:	scas   eax,DWORD PTR es:[edi]
  42c47d:	fld    QWORD PTR [ecx]
  42c47f:	adc    edx,edx
  42c481:	mov    al,ds:0x86e4f737
  42c486:	jl     0x42c41e
  42c488:	out    0x97,al
  42c48a:	add    BYTE PTR [eax-0x7af4663e],al
  42c490:	bound  ecx,QWORD PTR [esi+0x4daf0000]
  42c496:	add    DWORD PTR [ebx],esi
  42c498:	ret    0x3778
  42c49b:	div    esp
  42c49d:	xchg   BYTE PTR [ecx+ecx*4-0xd],bh
  42c4a1:	xchg   edi,eax
  42c4a2:	add    BYTE PTR [eax+0xb890092],al
  42c4a8:	test   DWORD PTR [edi-0x5f],ebp
  42c4ab:	add    BYTE PTR [eax],al
  42c4ad:	push   0xffffff8b
  42c4af:	fcom   QWORD PTR [ebx]
  42c4b1:	jmp    0xbb440683
  42c4b6:	cmp    DWORD PTR [esi+eax*4+0x26],0xffffff84
  42c4bb:	jge    0x42c47c
  42c4bd:	fnstsw WORD PTR [ebx+0x7c05537e]
  42c4c3:	jg     0x42c510
  42c4c5:	or     eax,0xb8c5df80
  42c4ca:	and    cl,cl
  42c4cc:	cli    
  42c4cd:	add    BYTE PTR [ebp-0x788b4578],ch
  42c4d3:	test   DWORD PTR [eax+0x17],eax
  42c4d6:	mov    DWORD PTR [eax+0x49f50406],ecx
  42c4dc:	jp     0x7f66df1d
  42c4e2:	in     eax,0x3f
  42c4e4:	and    al,0xf
  42c4e6:	jb     0x42c470
  42c4e8:	jns    0x42c4ea
  42c4ea:	cmp    eax,0x59647b03
  42c4ef:	verw   cx
  42c4f2:	cli    
  42c4f3:	shl    ebp,0xff
  42c4f6:	lods   eax,DWORD PTR ds:[esi]
  42c4f7:	jbe    0x42c513
  42c4f9:	ud1    ecx,edi
  42c4fc:	add    DWORD PTR [eax],eax
  42c4fe:	cmp    eax,0x3209f183
  42c503:	jg     0x42c4c6
  42c505:	or     ebp,DWORD PTR ds:0x46be03
  42c50b:	cld    
  42c50c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c50d:	out    0x2c,eax
  42c50f:	rol    al,cl
  42c511:	cmc    
  42c512:	adc    dh,0x5
  42c515:	pop    es
  42c516:	test   DWORD PTR [edx+0x77fffffd],ebx
  42c51c:	or     al,al
  42c51e:	call   0xf45f022
  42c523:	js     0x42c554
  42c525:	add    al,BYTE PTR [eax]
  42c527:	in     eax,dx
  42c528:	enter  0x140,0xe5
  42c52c:	sub    cl,BYTE PTR [ebx]
  42c52e:	jne    0x42c4f7
  42c530:	cmp    BYTE PTR [eax+0x16],0xb8
  42c534:	out    dx,al
  42c535:	add    esi,DWORD PTR [ebx]
  42c537:	in     eax,dx
  42c538:	fs stc 
  42c53a:	xor    bh,ch
  42c53c:	cmp    eax,eax
  42c53e:	loopne 0x42c4fa
  42c540:	add    al,0x44
  42c542:	and    al,0xb2
  42c544:	mov    al,BYTE PTR [eax+0x17]
  42c547:	xchg   esp,eax
  42c548:	and    cl,BYTE PTR [ecx+0x10]
  42c54b:	sbb    eax,ebp
  42c54d:	aaa    
  42c54e:	nop    esi
  42c551:	ror    bh,0x17
  42c554:	push   eax
  42c555:	add    al,0x74
  42c557:	mov    ds,WORD PTR [edi+0xf]
  42c55a:	test   esp,ebp
  42c55c:	aad    0xfe
  42c55e:	call   DWORD PTR [esi+ebp*4]
  42c561:	jle    0x42c4e8
  42c563:	fisubr DWORD PTR [esi+0x640c7ae2]
  42c569:	loop   0x42c575
  42c56b:	mov    ds:0xf9ce1b,eax
  42c570:	dec    ebx
  42c571:	dec    DWORD PTR [ebx+eax*2+0x44ebd778]
  42c578:	mov    BYTE PTR [eax],al
  42c57a:	cmp    DWORD PTR [ebx],ecx
  42c57c:	xchg   esp,eax
  42c57d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c57e:	mov    eax,DWORD PTR [eax+ebx*4+0x12]
  42c582:	dec    eax
  42c583:	and    al,0x84
  42c585:	xor    dl,BYTE PTR [ecx+0xc]
  42c588:	xchg   edi,eax
  42c589:	in     al,0x13
  42c58b:	cdq    
  42c58c:	pop    ds
  42c58d:	rol    BYTE PTR [ebp-0x72f04fbd],cl
  42c593:	inc    ecx
  42c594:	mov    WORD PTR [edx],es
  42c596:	shl    DWORD PTR [edx-0x5c],1
  42c599:	stc    
  42c59a:	add    eax,0xebfb5837
  42c59f:	outs   dx,BYTE PTR ds:[esi]
  42c5a0:	pushf  
  42c5a1:	xor    cl,bh
  42c5a3:	mov    BYTE PTR [eax-0x45],dl
  42c5a6:	repnz out 0x8c,al
  42c5a9:	and    dl,BYTE PTR [ebx+0x24]
  42c5ac:	jl     0x42c5ce
  42c5ae:	cmp    esp,DWORD PTR [eax+eax*4]
  42c5b1:	sub    bh,BYTE PTR [ebx]
  42c5b3:	and    al,0x9c
  42c5b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c5b6:	xor    DWORD PTR [eax],ecx
  42c5b8:	shrd   edx,esp,0xf
  42c5bc:	sbb    eax,0x7f17e2a4
  42c5c1:	add    BYTE PTR [edi],ah
  42c5c3:	sbb    al,0x50
  42c5c5:	fcom   QWORD PTR [ebx+ecx*4]
  42c5c8:	push   ebp
  42c5c9:	or     BYTE PTR [esi+0x47],bl
  42c5cc:	mov    eax,0xa4475c10
  42c5d1:	mov    ch,0x6f
  42c5d3:	inc    edi
  42c5d4:	add    BYTE PTR [eax-0x73b691f0],bh
  42c5da:	or     DWORD PTR [eax],ebp
  42c5dc:	mov    bl,ch
  42c5de:	add    al,0xda
  42c5e0:	xchg   dh,dh
  42c5e2:	add    ebp,ecx
  42c5e4:	add    edx,DWORD PTR [esi+0x3e]
  42c5e7:	call   0xcd7f62ed
  42c5ec:	sbb    ebx,DWORD PTR [edi+0x4ec19c7c]
  42c5f2:	mov    ch,0x6d
  42c5f4:	mov    WORD PTR ds:[ecx-0x3feee85f],cs
  42c5fb:	jl     0x42c5eb
  42c5fd:	sbb    cl,BYTE PTR [ebp+eax*8+0x1b]
  42c601:	adc    eax,DWORD PTR [ebp+ecx*1+0x14]
  42c605:	jnp    0x42c5d1
  42c607:	daa    
  42c608:	push   ebp
  42c609:	adc    eax,esi
  42c60b:	rcl    esp,1
  42c60d:	sbb    al,al
  42c60f:	push   esp
  42c610:	or     dl,BYTE PTR [edx]
  42c612:	ds (bad) 
  42c615:	adc    eax,0x558be304
  42c61a:	or     eax,0xdc87465f
  42c61f:	sub    DWORD PTR [edi+edx*2+0x190ef1dc],ecx
  42c626:	dec    edx
  42c627:	call   0xabe8:0xc80debf
  42c62e:	add    BYTE PTR [eax-0x7e4b31f2],al
  42c634:	test   dl,cl
  42c636:	add    ch,dl
  42c638:	xchg   DWORD PTR [eax],eax
  42c63a:	mov    es,WORD PTR [ebx]
  42c63c:	add    cl,ch
  42c63e:	xchg   edi,eax
  42c63f:	xor    dh,0xe3
  42c642:	call   0x8600:0x97f4017c
  42c649:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c64a:	sbb    ah,0x85
  42c64d:	in     eax,0x9d
  42c64f:	test   eax,0x97dcf0
  42c654:	ret    0x98af
  42c657:	mov    bl,0x85
  42c659:	dec    BYTE PTR [edi+esi*4]
  42c65c:	or     ch,BYTE PTR [ebp+0x24]
  42c65f:	or     BYTE PTR [eax],al
  42c661:	jmp    0x3f3d9084
  42c666:	or     eax,0xdf37374
  42c66b:	inc    edx
  42c66c:	adc    ecx,ebp
  42c66e:	sbb    BYTE PTR [eax],cl
  42c670:	add    DWORD PTR [ecx-0x2e],esp
  42c673:	jbe    0x7b1f7128
  42c679:	jno    0x42c647
  42c67b:	fmul   QWORD PTR [edx]
  42c67d:	out    0x1b,al
  42c67f:	mov    ebx,0x7b97e90b
  42c684:	inc    ebx
  42c685:	or     eax,0xed44db88
  42c68a:	xlat   BYTE PTR ds:[ebx]
  42c68b:	test   eax,0x97e768
  42c690:	adc    dl,0x63
  42c693:	sub    eax,0xdc997306
  42c698:	cld    
  42c699:	in     eax,dx
  42c69a:	nop
  42c69b:	mov    BYTE PTR [ecx],al
  42c69d:	ret    0x4400
  42c6a0:	xor    dh,0x24
  42c6a3:	fwait
  42c6a4:	jge    0x42c6b2
  42c6a6:	hlt    
  42c6a7:	xchg   edi,eax
  42c6a8:	add    BYTE PTR [eax+0x41c21bc7],al
  42c6ae:	call   DWORD PTR [ebp-0x6a15be42]
  42c6b4:	mov    esi,0x11ac0041
  42c6b9:	jmp    0x427050
  42c6be:	jg     0x42c6a3
  42c6c0:	(bad)  
  42c6c1:	jp     0x42c711
  42c6c3:	mov    ch,0x72
  42c6c5:	jns    0x42c715
  42c6c7:	test   eax,0xa7fb7a72
  42c6cc:	jmp    0x42c659
  42c6ce:	and    dh,0x10
  42c6d1:	je     0x42c65a
  42c6d3:	std    
  42c6d4:	jbe    0x42c718
  42c6d6:	(bad)  
  42c6d8:	(bad)  
  42c6d9:	push   es
  42c6da:	add    BYTE PTR [ebp-0x43],ch
  42c6dd:	inc    eax
  42c6de:	add    DWORD PTR [eax-0x45008c9c],eax
  42c6e4:	jb     0x42c760
  42c6e6:	sti    
  42c6e7:	and    DWORD PTR [edx],eax
  42c6e9:	test   DWORD PTR [esp+ebp*2+0x3c5ffff],ecx
  42c6f0:	cld    
  42c6f1:	std    
  42c6f2:	call   0x42c9fb
  42c6f7:	lods   eax,DWORD PTR ds:[esi]
  42c6f8:	jbe    0x42c748
  42c6fa:	cmpxchg cl,bh
  42c6fd:	add    BYTE PTR [eax],al
  42c6ff:	cmp    eax,0x140bd
  42c704:	xor    ah,BYTE PTR [ebp+edi*1+0xc]
  42c708:	sub    eax,0x5dfb7fff
  42c70d:	add    eax,0xfefc6885
  42c712:	inc    ebp
  42c714:	mov    bl,0xff
  42c716:	pop    es
  42c717:	jmp    0x42ca1c
  42c71c:	ins    DWORD PTR es:[edi],dx
  42c71d:	jns    0x42c744
  42c71f:	jo     0xfd42c86f
  42c725:	mov    esp,0x65e40140
  42c72a:	sbb    DWORD PTR [ebp*8-0x6bbc7302],ecx
  42c731:	jns    0x42c732
  42c733:	or     BYTE PTR [ebx-0x9],al
  42c736:	and    DWORD PTR [ebx],ecx
  42c738:	add    ah,BYTE PTR [esi+0x21]
  42c73b:	jg     0x42c6e9
  42c73d:	js     0x42c763
  42c73f:	mov    DWORD PTR [edx-0x27],ebx
  42c742:	les    eax,FWORD PTR [ecx-0x6b]
  42c745:	lahf   
  42c746:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c747:	add    dl,BYTE PTR [eax-0x60800157]
  42c74d:	add    dh,BYTE PTR [ebx]
  42c74f:	or     DWORD PTR [edx+0x62],ebx
  42c752:	std    
  42c753:	push   es
  42c754:	jge    0x42c7a7
  42c756:	or     DWORD PTR [eax],eax
  42c758:	xchg   esp,eax
  42c759:	daa    
  42c75a:	mov    ecx,0x840df82f
  42c75f:	imul   BYTE PTR [ebp+0x1f61e16a]
  42c765:	pop    edx
  42c766:	push   cs
  42c767:	bound  eax,QWORD PTR [eax]
  42c769:	out    dx,eax
  42c76a:	out    0x5,eax
  42c76c:	bound  ecx,QWORD PTR [ebx-0x689e36af]
  42c772:	call   0xd87f4698
  42c777:	and    al,0x89
  42c779:	fcmovbe st,st(7)
  42c77b:	jne    0x42c75f
  42c77d:	xchg   edi,eax
  42c77e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c77f:	(bad)  
  42c780:	popa   
  42c781:	outs   dx,DWORD PTR ds:[esi]
  42c782:	call   0x9fa14993
  42c787:	(bad)  
  42c788:	dec    DWORD PTR [esi]
  42c78a:	loop   0x42c7a0
  42c78c:	and    al,0xf
  42c78e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c78f:	pop    es
  42c790:	jmp    0x4163de
  42c795:	sbb    edi,esp
  42c797:	sar    DWORD PTR [ebx],cl
  42c799:	(bad)  
  42c79a:	repnz stos BYTE PTR es:[edi],al
  42c79c:	popa   
  42c79d:	mov    esi,DWORD PTR [ecx]
  42c79f:	shl    BYTE PTR [ecx+0x17],0xc0
  42c7a3:	out    dx,al
  42c7a4:	popa   
  42c7a5:	sbb    eax,0x5ac20dda
  42c7aa:	add    al,ch
  42c7ac:	paddsw mm3,QWORD PTR [esi-0x13]
  42c7b0:	add    edx,DWORD PTR [eax+eax*4+0x740e38d]
  42c7b7:	mov    ds:0x90039545,eax
  42c7bc:	xchg   edi,eax
  42c7bd:	xchg   edx,eax
  42c7be:	add    cl,ch
  42c7c0:	sub    DWORD PTR [edx+0x2bc6f4f0],0xffffffb5
  42c7c7:	scas   eax,DWORD PTR es:[edi]
  42c7c8:	cmp    al,0xd4
  42c7ca:	sbb    ch,BYTE PTR [esi+0x45]
  42c7cd:	add    BYTE PTR [edx-0x663c31e6],cl
  42c7d3:	sbb    ah,dl
  42c7d5:	jge    0x42c829
  42c7d7:	sbb    ah,dh
  42c7d9:	ret    0x7df5
  42c7dc:	push   eax
  42c7dd:	repz cmc 
  42c7df:	xchg   DWORD PTR [edx+0x63977b11],esp
  42c7e5:	inc    eax
  42c7e6:	inc    esp
  42c7e7:	hlt    
  42c7e8:	fbstp  TBYTE PTR [ecx+ecx*4]
  42c7eb:	sbb    dh,dl
  42c7ed:	jge    0x42c809
  42c7ef:	sbb    ah,BYTE PTR [esi-0x55]
  42c7f2:	sbb    DWORD PTR [edx],0x60
  42c7f5:	inc    ebp
  42c7f6:	mov    al,ds:0x8e02a2ba
  42c7fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c7fc:	fwait
  42c7fd:	or     BYTE PTR [eax+eax*1+0x193b869],dl
  42c804:	ins    DWORD PTR es:[edi],dx
  42c805:	dec    edi
  42c806:	xchg   ebx,eax
  42c807:	add    cl,ch
  42c809:	mov    ebp,edx
  42c80b:	or     DWORD PTR ds:0xd0048f88,ecx
  42c811:	repz lahf 
  42c813:	add    cl,ch
  42c815:	mov    dl,cl
  42c817:	ror    BYTE PTR [ecx*1-0x70b52579],1
  42c81e:	push   ebp
  42c81f:	or     al,0x43
  42c821:	das    
  42c822:	aam    0x5
  42c824:	add    BYTE PTR [edi-0x61],cl
  42c827:	jbe    0x42c7ef
  42c829:	inc    edi
  42c82a:	fwait
  42c82b:	mov    edi,0xe1286a61
  42c830:	mov    eax,0x9b0086
  42c835:	add    BYTE PTR [edi],cl
  42c837:	sbb    DWORD PTR [edi],edi
  42c839:	adc    al,0x7
  42c83b:	ret    
  42c83c:	mov    edi,0x1e9b572
  42c841:	pop    es
  42c842:	jmp    0xe43948de
  42c847:	jnp    0x42c823
  42c849:	jg     0x42c8bd
  42c84b:	lea    ebp,[edi+ecx*1]
  42c84e:	imul   ebx,ebx,0x56a17510
  42c854:	inc    edx
  42c855:	add    esi,esp
  42c857:	cmp    BYTE PTR [edi-0x7f6816fb],dh
  42c85d:	div    ah
  42c85f:	(bad)  
  42c860:	stc    
  42c861:	shl    DWORD PTR [edi+0x44e91098],0x9a
  42c868:	add    BYTE PTR [eax],al
  42c86a:	imul   esp,DWORD PTR [ebx],0x346c0b06
  42c870:	push   es
  42c871:	add    cl,ch
  42c873:	push   ebp
  42c874:	inc    edx
  42c875:	add    esp,eax
  42c877:	clc    
  42c878:	(bad)  
  42c879:	add    eax,0xf68097e9
  42c87e:	repz imul ebx,DWORD PTR [esi-0x1b79587b],0xffffff95
  42c886:	in     eax,0x89
  42c888:	cdq    
  42c889:	shl    dl,0x97
  42c88c:	add    BYTE PTR [eax-0x7c04731e],al
  42c892:	test   al,0xa1
  42c894:	add    BYTE PTR [eax],al
  42c896:	imul   eax,DWORD PTR [eax],0x650b064a
  42c89c:	jg     0x42c8a3
  42c89e:	add    BYTE PTR [eax],al
  42c8a0:	in     eax,dx
  42c8a1:	and    DWORD PTR [eax],0x3
  42c8a4:	jle    0x42c8df
  42c8a6:	or     bh,bh
  42c8a8:	jle    0x42c8e3
  42c8aa:	or     al,0xff
  42c8ac:	ja     0x42c874
  42c8ae:	push   es
  42c8af:	and    cl,dh
  42c8b1:	in     al,0x6
  42c8b3:	or     cl,0xfe
  42c8b6:	(bad)  
  42c8b7:	jmp    ecx
  42c8b9:	in     eax,dx
  42c8ba:	push   es
  42c8bb:	xchg   ecx,esp
  42c8bd:	(bad)  
  42c8be:	(bad)  
  42c8bf:	inc    edx
  42c8c1:	sub    DWORD PTR [edx+0x127bc6],edi
  42c8c7:	(bad)  
  42c8c8:	jnp    0x42c8d1
  42c8ca:	add    DWORD PTR [ebx+0x48773925],eax
  42c8d0:	mov    ecx,0x3ee87b43
  42c8d5:	fbstp  TBYTE PTR [eax+ecx*2]
  42c8d8:	imul   esp,DWORD PTR [edi-0x20911787],0xb394820
  42c8e2:	jnp    0x42c8cc
  42c8e4:	jns    0x42c8c5
  42c8e6:	or     al,0x48
  42c8e8:	jb     0x42c86a
  42c8ea:	fmul   DWORD PTR [edx]
  42c8ec:	ins    DWORD PTR es:[edi],dx
  42c8ed:	add    edi,DWORD PTR [esi-0x1d02a4ba]
  42c8f3:	pop    edi
  42c8f4:	jnp    0x42c937
  42c8f6:	push   cs
  42c8f7:	or     DWORD PTR [esi+0x46be4c],edx
  42c8fd:	dec    ebx
  42c8fe:	add    eax,0x416b53e3
  42c903:	push   cs
  42c904:	add    DWORD PTR [esi+0x4b46be38],eax
  42c90a:	add    esp,ebx
  42c90c:	inc    edi
  42c90d:	jnp    0x42c950
  42c90f:	push   cs
  42c910:	add    eax,0x46be4346
  42c915:	or     edi,edi
  42c917:	loop   0x42c954
  42c919:	xchg   esp,eax
  42c91a:	sbb    ch,BYTE PTR [edx+ecx*2+0x744c0b88]
  42c921:	lods   eax,DWORD PTR ds:[esi]
  42c922:	icebp  
  42c923:	dec    ebx
  42c924:	je     0x42c8b9
  42c926:	icebp  
  42c927:	das    
  42c928:	adc    bl,BYTE PTR [ebp+ebp*8+0x2]
  42c92c:	dec    eax
  42c92d:	xchg   ebx,eax
  42c92e:	and    al,0x9d
  42c930:	add    eax,0x41c09994
  42c935:	stos   BYTE PTR es:[edi],al
  42c936:	lahf   
  42c937:	stos   DWORD PTR es:[edi],eax
  42c938:	sbb    edx,edx
  42c93a:	fimul  WORD PTR ds:0xc0b6af03
  42c940:	inc    ecx
  42c941:	mov    ds:0xda0fabcc,al
  42c946:	out    0xd,al
  42c948:	or     edi,DWORD PTR [edi-0x75be3f5e]
  42c94e:	call   0x210:0x5ed203ab
  42c955:	pop    edx
  42c956:	data16 std 
  42c958:	or     eax,0xfab19f7d
  42c95d:	and    DWORD PTR [ebx*8-0x2feffff6],0xc
  42c965:	add    BYTE PTR [ecx+esi*1+0x2d9b124e],dl
  42c96c:	ret    0x9886
  42c96f:	and    al,0x5c
  42c971:	lahf   
  42c972:	xlat   BYTE PTR ds:[ebx]
  42c973:	xchg   edi,eax
  42c974:	jle    0x42c96c
  42c976:	je     0x42c90c
  42c978:	or     DWORD PTR [esi-0x4df86526],eax
  42c97e:	cmp    eax,0x9402f818
  42c983:	sub    al,0x6
  42c985:	ret    0x98da
  42c988:	adc    ebp,ecx
  42c98a:	sub    al,0x98
  42c98c:	(bad)  
  42c98d:	dec    DWORD PTR [esi]
  42c98f:	mov    es,WORD PTR [ebx]
  42c991:	or     esp,edx
  42c993:	add    al,ah
  42c995:	std    
  42c996:	scas   eax,DWORD PTR es:[edi]
  42c997:	add    eax,0xfc7fea
  42c99c:	jmp    0xe3eddda4
  42c9a1:	cs scas al,BYTE PTR es:[edi]
  42c9a3:	cmp    BYTE PTR [edi+0x68fe6902],0xbc
  42c9aa:	push   ebx
  42c9ab:	xor    esp,eax
  42c9ad:	rcl    DWORD PTR [ebp+0x16],0xd8
  42c9b1:	stos   BYTE PTR es:[edi],al
  42c9b2:	les    eax,FWORD PTR [eax]
  42c9b4:	jmp    0xe6eaddbc
  42c9b9:	or     BYTE PTR [ecx],dl
  42c9bb:	mov    esi,ebx
  42c9bd:	add    edx,DWORD PTR [eax+eax*4-0x7c70ac73]
  42c9c4:	jno    0x42c9d3
  42c9c6:	add    BYTE PTR [eax+eax*1-0x779be5d],dl
  42c9cd:	jg     0x42ca40
  42c9cf:	mov    ds:0xa183e8ad,eax
  42c9d4:	cli    
  42c9d5:	fisttp DWORD PTR [ecx+0x14]
  42c9d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c9d9:	out    0x2e,eax
  42c9db:	lds    eax,FWORD PTR [eax-0x7f6b7b3]
  42c9e1:	and    al,BYTE PTR [ecx-0x5a]
  42c9e4:	stc    
  42c9e5:	dec    edi
  42c9e6:	cdq    
  42c9e7:	jae    0x42c996
  42c9e9:	call   0xbc423671
  42c9ee:	sbb    DWORD PTR [ecx+ebp*4],edx
  42c9f1:	mov    ds:0xaac68d2e,eax
  42c9f6:	adc    DWORD PTR [edx-0x6bfc9269],esp
  42c9fc:	add    BYTE PTR [ecx-0x46],ch
  42c9ff:	xchg   esp,eax
  42ca00:	xor    ebx,esi
  42ca02:	add    DWORD PTR [edx-0x25],0x7b
  42ca06:	add    DWORD PTR [esi+0x46],edx
  42ca09:	rcl    DWORD PTR [ebx+esi*1],cl
  42ca0c:	sub    DWORD PTR [eax],eax
  42ca0e:	imul   ebx,esi,0xd16409aa
  42ca14:	push   es
  42ca15:	add    cl,ch
  42ca17:	pop    ss
  42ca18:	mov    dh,0x40
  42ca1a:	out    dx,al
  42ca1b:	adc    al,0xe8
  42ca1d:	add    eax,0x41c297e9
  42ca22:	mul    DWORD PTR [edi+0x31695ea5]
  42ca28:	add    BYTE PTR [ebp+0x13],dh
  42ca2b:	add    BYTE PTR [eax],dl
  42ca2d:	mov    bl,0xfe
  42ca2f:	cmp    esi,ebp
  42ca31:	sub    al,0xf7
  42ca33:	sbb    esp,DWORD PTR [ebp-0x5dd03dfe]
  42ca39:	cld    
  42ca3a:	out    0x2f,al
  42ca3c:	adc    BYTE PTR [esi-0x413de3ac],dh
  42ca42:	inc    ecx
  42ca43:	idiv   DWORD PTR [ebx-0x1096c15b]
  42ca49:	aas    
  42ca4a:	or     esp,DWORD PTR [esi+ebx*4+0x6]
  42ca4e:	add    cl,ch
  42ca50:	loope  0x42ca90
  42ca52:	adc    dl,dh
  42ca54:	out    dx,al
  42ca55:	lock jg 0x42cab8
  42ca58:	xchg   esi,eax
  42ca59:	xor    eax,0xfa4e6910
  42ca5e:	je     0x42ca42
  42ca60:	pop    ss
  42ca61:	mov    bl,0x4e
  42ca63:	aam    0x79
  42ca65:	ret    0xdf41
  42ca68:	mov    eax,ds:0x29691aa3
  42ca6d:	add    BYTE PTR [ebx],cl
  42ca6f:	ins    BYTE PTR es:[edi],dx
  42ca70:	retf   
  42ca71:	stc    
  42ca72:	(bad)  
  42ca73:	call   0xf64e808f
  42ca78:	adc    al,0x52
  42ca7a:	or     ecx,ebp
  42ca7c:	xchg   edi,eax
  42ca7d:	xor    dh,0xb9
  42ca80:	call   0xc200:0x97e04c85
  42ca87:	add    BYTE PTR [ebx],al
  42ca89:	dec    BYTE PTR [esi+edi*8]
  42ca8c:	jl     0x42cb0a
  42ca8e:	dec    eax
  42ca8f:	add    eax,DWORD PTR [eax]
  42ca91:	xchg   esp,eax
  42ca92:	mov    eax,0x802d0002
  42ca97:	icebp  
  42ca98:	and    BYTE PTR [edx],cl
  42ca9a:	sub    al,0xba
  42ca9c:	or     ch,bh
  42ca9e:	(bad)  
  42ca9f:	jp     0x42cb1d
  42caa1:	xchg   ecx,eax
  42caa2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42caa3:	cli    
  42caa4:	je     0x42ca9b
  42caa6:	jbe    0x42cae6
  42caa8:	and    al,0xcd
  42caaa:	jl     0x42caea
  42caac:	and    al,0x9d
  42caae:	test   BYTE PTR [eax+0x16],bh
  42cab1:	lock lock add eax,esi
  42cab5:	mov    bl,0x5
  42cab7:	(bad)  
  42cab8:	(bad)  
  42caba:	in     eax,dx
  42cabb:	add    BYTE PTR [edx-0x91aa7fa],cl
  42cac1:	sub    dh,BYTE PTR [ebx-0x7e]
  42cac4:	inc    esi
  42cac5:	lods   al,BYTE PTR ds:[esi]
  42cac6:	mov    bl,0xff
  42cac8:	push   cs
  42cac9:	inc    eax
  42caca:	jnp    0x42cace
  42cacc:	add    BYTE PTR [ebp-0x2ee8bf87],bh
  42cad2:	test   DWORD PTR [esi],eax
  42cad4:	push   cs
  42cad5:	adc    al,0xf3
  42cad7:	or     BYTE PTR [eax],al
  42cad9:	jge    0x42cb5a
  42cadb:	icebp  
  42cadc:	or     ah,BYTE PTR [ecx+0x62]
  42cadf:	jp     0x42cadc
  42cae1:	js     0x42cabe
  42cae3:	loope  0x42ca65
  42cae5:	out    0x9f,al
  42cae7:	outs   dx,BYTE PTR ds:[esi]
  42cae8:	in     eax,0xc6
  42caea:	mov    eax,0xdb67fb7a
  42caef:	jo     0xbb6c39b
  42caf5:	add    ch,ch
  42caf7:	data16 sbb dh,BYTE PTR [ebp-0x45]
  42cafb:	ins    DWORD PTR es:[edi],dx
  42cafc:	inc    eax
  42cafd:	add    DWORD PTR [esi+0x56],ebx
  42cb00:	adc    dh,BYTE PTR [ebx]
  42cb02:	xchg   esp,eax
  42cb03:	fstp   DWORD PTR [ecx+ecx*4]
  42cb06:	shr    BYTE PTR [ecx+0x19cc0928],cl
  42cb0c:	mov    dh,0xc
  42cb0e:	mov    dl,0x30
  42cb10:	cmp    eax,0xbf4c930e
  42cb15:	add    ebp,DWORD PTR [eax+0x21]
  42cb18:	cmp    eax,0xdfed1f01
  42cb1d:	pop    ds
  42cb1e:	adc    DWORD PTR [edi+0x4],esp
  42cb21:	test   dl,al
  42cb23:	mov    eax,ds:0x3a0ffffe
  42cb28:	add    BYTE PTR [ebp-0x7914130d],al
  42cb2e:	push   eax
  42cb2f:	add    eax,0x8d62714
  42cb34:	mov    ecx,ecx
  42cb36:	fist   DWORD PTR [ecx-0x50b74086]
  42cb3c:	mov    BYTE PTR [ecx-0x5d],al
  42cb3f:	lds    eax,FWORD PTR [eax+0x3a21960b]
  42cb45:	adc    ecx,DWORD PTR [esi]
  42cb47:	jecxz  0x42cb55
  42cb49:	and    al,0x33
  42cb4b:	xor    DWORD PTR [eax+0x24],eax
  42cb4e:	fwait
  42cb4f:	call   0x7eb5:0x319f4379
  42cb56:	xor    ch,al
  42cb58:	fdivp  st(7),st
  42cb5a:	add    BYTE PTR [ebp+ebx*4+0x6],bh
  42cb5e:	add    BYTE PTR [edi+edx*1+0x1b931fb9],dl
  42cb65:	mov    eax,0x7e979402
  42cb6a:	neg    ah
  42cb6c:	mov    dl,0x79
  42cb6e:	push   ebp
  42cb6f:	pushf  
  42cb70:	xchg   edi,eax
  42cb71:	inc    cl
  42cb73:	ficomp DWORD PTR [eax-0x5c911726]
  42cb79:	(bad)  
  42cb7a:	call   DWORD PTR [ecx+eax*1]
  42cb7d:	push   ds
  42cb7e:	push   eax
  42cb7f:	lahf   
  42cb80:	sub    ebp,0xffffffb6
  42cb83:	ds stos BYTE PTR es:[edi],al
  42cb85:	sub    bh,BYTE PTR [esi]
  42cb87:	xchg   ebp,eax
  42cb88:	jecxz  0x42cb89
  42cb8a:	fist   DWORD PTR [esi+0x2283e900]
  42cb90:	push   ebp
  42cb91:	jmp    0x55b4:0xf1ad1c7e
  42cb98:	inc    ebx
  42cb99:	call   0xea05c87b
  42cb9e:	add    edx,DWORD PTR [eax+eax*4-0x7c70ac23]
  42cba5:	leave  
  42cba6:	mov    bh,0xfe
  42cba8:	test   eax,0xe1953da2
  42cbad:	iret   
  42cbae:	outs   dx,DWORD PTR ds:[esi]
  42cbaf:	xchg   esi,eax
  42cbb0:	add    cl,ch
  42cbb2:	sub    edx,0xffffffd9
  42cbb5:	loope  0x42cc35
  42cbb7:	shr    BYTE PTR [ecx+ebp*4-0x17bd2a4c],0xeb
  42cbbf:	add    BYTE PTR [esi+ebx*2+0x7b9403e1],bh
  42cbc6:	and    eax,0xd9f87fc5
  42cbcb:	jl     0x42cbad
  42cbcd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42cbce:	xor    DWORD PTR [ebp+esi*1+0x35c03af9],0x35f3807d
  42cbd9:	ja     0x42cbfd
  42cbdb:	adc    al,0x56
  42cbdd:	inc    edx
  42cbde:	call   0xe1c148cd
  42cbe3:	add    edx,DWORD PTR [eax+eax*4-0x7c711ab3]
  42cbea:	push   0x2aa96eb8
  42cbef:	cmp    eax,0x334fd695
  42cbf4:	xchg   edi,eax
  42cbf5:	add    BYTE PTR [eax],al
  42cbf7:	jmp    0xee12b60e
  42cbfc:	sahf   
  42cbfd:	cmc    
  42cbfe:	add    BYTE PTR [edx-0x780559f4],0x98
  42cc05:	mov    si,0x148f
  42cc09:	mov    eax,ds:0x3f1e872f
  42cc0e:	push   cs
  42cc0f:	das    
  42cc10:	imul   edi,edi,0xfdc71026
  42cc16:	(bad)  
  42cc17:	call   0x744f7e33
  42cc1c:	sahf   
  42cc1d:	mov    esi,0x97ebe841
  42cc22:	cmp    eax,0x9700e6
  42cc27:	adc    dl,0xfa
  42cc2a:	cmc    
  42cc2b:	xor    DWORD PTR [esp],0xffffffa6
  42cc2f:	cli    
  42cc30:	shl    BYTE PTR [eax-0x4e],1
  42cc33:	cli    
  42cc34:	mov    esi,0xe605b218
  42cc39:	adc    edi,DWORD PTR [esi]
  42cc3b:	cld    
  42cc3c:	scas   al,BYTE PTR es:[edi]
  42cc3d:	pop    es
  42cc3e:	add    DWORD PTR [ecx-0x2],0xffffffb3
  42cc42:	mov    WORD PTR [ebx],cs
  42cc44:	cmc    
  42cc45:	and    BYTE PTR [edi],cl
  42cc47:	or     cl,ch
  42cc49:	xchg   edi,eax
  42cc4a:	mov    esi,0x97aee841
  42cc4f:	adc    esi,ebp
  42cc51:	xchg   edi,eax
  42cc52:	add    BYTE PTR [ebx],cl
  42cc54:	aaa    
  42cc55:	fild   DWORD PTR [edx+0x4045e17f]
  42cc5b:	add    BYTE PTR [ebp+0x58],ah
  42cc5e:	sti    
  42cc5f:	sub    DWORD PTR [eax-0x61],0x0
  42cc63:	add    BYTE PTR [edx-0x3c],ch
  42cc66:	fcomp  QWORD PTR [ebx]
  42cc68:	jmp    0x9dc9c529
  42cc6d:	jnp    0x42cc67
  42cc6f:	mov    BYTE PTR [eax],al
  42cc71:	and    DWORD PTR [eax-0x431cf0ea],esp
  42cc77:	jns    0x42cc61
  42cc79:	dec    esi
  42cc7a:	mov    edx,0xba3d0340
  42cc7f:	inc    eax
  42cc80:	add    DWORD PTR [ebx-0x10],esp
  42cc83:	sub    eax,DWORD PTR [ebx+0x1e7401a5]
  42cc89:	add    BYTE PTR [esi+0x2d73fe84],ch
  42cc8f:	in     al,dx
  42cc90:	push   es
  42cc91:	test   ebx,esi
  42cc93:	cld    
  42cc94:	(bad)  
  42cc95:	(bad)  
  42cc96:	jnp    0x42ccd2
  42cc98:	cli    
  42cc99:	pop    es
  42cc9a:	xchg   esp,eax
  42cc9b:	rol    BYTE PTR [eax],0x0
  42cc9e:	std    
  42cc9f:	mov    ecx,0x84fa0240
  42cca4:	mov    ecx,0xbe03ed06
  42cca9:	inc    esi
  42ccaa:	out    dx,eax
  42ccab:	clc    
  42ccac:	call   0x46c86b
  42ccb1:	(bad)  
  42ccb2:	mov    ebx,0x5ce900fe
  42ccb7:	stc    
  42ccb8:	(bad)  
  42ccb9:	push   edx
  42ccbb:	sub    DWORD PTR [edx+0x58ab3d8a],edi
  42ccc1:	inc    eax
  42ccc2:	mov    ebp,0x390fba7f
  42ccc7:	lods   eax,DWORD PTR ds:[esi]
  42ccc8:	(bad)  
  42ccc9:	jmp    FWORD PTR [ebp-0x40b151fe]
  42cccf:	in     al,0x7a
  42ccd1:	stc    
  42ccd2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ccd3:	add    bh,BYTE PTR [edi-0x6e]
  42ccd6:	mov    ebx,0xc9ff0003
  42ccdb:	or     BYTE PTR [ebx],0xba
  42ccde:	mov    edi,0x7e46f5fc
  42cce3:	xchg   edi,eax
  42cce4:	gs invd 
  42cce7:	(bad)  
  42cce8:	clc    
  42cce9:	enter  0xf594,0x1
  42cced:	jmp    0xfede9ef2
  42ccf2:	jmp    FWORD PTR [edx+0x57]
  42ccf5:	add    DWORD PTR [edx+esi*8],edi
  42ccf8:	xchg   esi,eax
  42ccf9:	xchg   edi,eax
  42ccfa:	mov    edi,0xfee2e15a
  42ccff:	cmp    al,0x84
  42cd01:	add    al,0x0
  42cd03:	xchg   esp,eax
  42cd04:	fisttp WORD PTR [eax-0x1]
  42cd07:	jg     0x42cd80
  42cd09:	xor    cl,BYTE PTR [edx]
  42cd0b:	js     0x42cc92
  42cd0d:	std    
  42cd0e:	xchg   esp,eax
  42cd0f:	push   esp
  42cd10:	div    DWORD PTR [esi-0x18ef6ddd]
  42cd16:	std    
  42cd17:	and    ebx,DWORD PTR [ecx-0x6a69be38]
  42cd1d:	fwait
  42cd1e:	inc    esi
  42cd1f:	call   0x7c9a:0x52f9fe99
  42cd26:	dec    ecx
  42cd27:	xchg   edi,eax
  42cd28:	sbb    DWORD PTR [edi-0x3ce974fb],esp
  42cd2e:	push   ebx
  42cd30:	cwde   
  42cd31:	push   DWORD PTR [ecx+0x138202c5]
  42cd37:	or     cl,bl
  42cd39:	add    ecx,DWORD PTR [ebx]
  42cd3b:	adc    DWORD PTR [edi],esp
  42cd3d:	add    al,0x0
  42cd3f:	xchg   esp,eax
  42cd40:	sbb    DWORD PTR [edi-0x17eb64f8],esp
  42cd46:	add    DWORD PTR [ecx+ebx*4-0x5f69be38],edx
  42cd4d:	xchg   ebp,eax
  42cd4e:	push   ss
  42cd4f:	call   0x9a52:0xf9fe99
  42cd56:	jl     0x42cda1
  42cd58:	xchg   edi,eax
  42cd59:	sbb    DWORD PTR [edi-0x6ce974f1],esp
  42cd5f:	call   DWORD PTR [ebx+0x65b1ff98]
  42cd65:	add    DWORD PTR [edi],ebx
  42cd67:	xchg   BYTE PTR [ebx-0x70fc5774],ah
  42cd6d:	jnp    0x42cdd9
  42cd6f:	add    al,0x94
  42cd71:	add    BYTE PTR [ecx-0x55],ch
  42cd74:	sahf   
  42cd75:	cdq    
  42cd76:	xor    dh,BYTE PTR [edx+0x426f01d5]
  42cd7c:	pop    ebx
  42cd7d:	xor    BYTE PTR es:[edx],al
  42cd80:	(bad)  
  42cd81:	fidivr DWORD PTR cs:[ecx+0x64]
  42cd85:	jmp    0x42cded
  42cd87:	clc    
  42cd88:	daa    
  42cd89:	inc    ecx
  42cd8a:	jmp    0xfc380c5
  42cd8f:	call   FWORD PTR [esi-0x6bf8d085]
  42cd95:	add    BYTE PTR [ebx],ch
  42cd97:	dec    edx
  42cd98:	and    bh,al
  42cd9a:	paddq  mm2,QWORD PTR [eax+0x55b1e900]
  42cda1:	add    DWORD PTR [edi+0x42],ebx
  42cda4:	or     esp,DWORD PTR [esi]
  42cda6:	loopne 0x42cdba
  42cda8:	xchg   DWORD PTR [esi],esi
  42cdaa:	jmp    0x847:0x66eae479
  42cdb1:	inc    ecx
  42cdb2:	jmp    0xbfc378ed
  42cdb7:	adc    eax,DWORD PTR [eax]
  42cdb9:	(bad)  
  42cdba:	jnp    0x42ce33
  42cdbc:	push   es
  42cdbd:	xchg   esp,eax
  42cdbe:	add    BYTE PTR [ebx-0x40052db7],ch
  42cdc4:	pop    ebx
  42cdc5:	nop
  42cdc6:	add    cl,ch
  42cdc8:	mov    cl,0x55
  42cdca:	add    DWORD PTR [edi+0x41],ebp
  42cdcd:	mov    ebx,0x27089025
  42cdd2:	fcompp 
  42cdd4:	jns    0x42cd9a
  42cdd6:	jmp    0x36e9:0x41084b66
  42cddd:	add    DWORD PTR [eax-0x6629001],0xffffff84
  42cde4:	pusha  
  42cde5:	xchg   edx,eax
  42cde6:	add    BYTE PTR [eax],al
  42cde8:	das    
  42cde9:	int    0xa6
  42cdeb:	push   es
  42cdec:	push   eax
  42cded:	pop    ss
  42cdee:	cld    
  42cdef:	(bad)  
  42cdf0:	call   0xde627c0c
  42cdf5:	adc    esi,DWORD PTR [edx]
  42cdf7:	add    eax,0x41c297e9
  42cdfc:	jmp    0x42cd95
  42cdfe:	xchg   edi,eax
  42cdff:	imul   ebp,esp,0x32800097
  42ce05:	cmp    DWORD PTR [ecx+ecx*2],ebp
  42ce08:	das    
  42ce09:	int    0xff
  42ce0b:	sub    dh,BYTE PTR [edx-0x1d]
  42ce0e:	fcomp  QWORD PTR [ebx]
  42ce10:	ins    BYTE PTR es:[edi],dx
  42ce11:	dec    ecx
  42ce12:	cli    
  42ce13:	xor    DWORD PTR [eax+0x72000092],0x64
  42ce1a:	clc    
  42ce1b:	test   dh,bh
  42ce1d:	add    BYTE PTR [edx-0x28],ah
  42ce20:	xchg   BYTE PTR [ebp+0x2b26f4fb],ch
  42ce26:	addr16 jge 0x42cdf2
  42ce29:	out    0xeb,al
  42ce2b:	jnp    0x42cdec
  42ce2d:	push   ebp
  42ce2e:	(bad)  
  42ce2f:	jp     0x42ce72
  42ce31:	(bad)  
  42ce32:	sti    
  42ce33:	and    eax,0x3f6fea0c
  42ce38:	adc    esi,DWORD PTR [ebx+0x5a]
  42ce3b:	adc    DWORD PTR [esi+edi*1],esp
  42ce3e:	pop    eax
  42ce3f:	inc    ecx
  42ce40:	and    al,0xe6
  42ce42:	sar    BYTE PTR [ebx+0x5a],cl
  42ce45:	mov    cl,0xfb
  42ce47:	test   eax,0x8ac0d7e
  42ce4c:	add    BYTE PTR [eax-0x17000450],dl
  42ce52:	pop    ss
  42ce53:	scas   al,BYTE PTR es:[edi]
  42ce54:	or     al,0x14
  42ce56:	xchg   edx,eax
  42ce57:	ret    0x41
  42ce5a:	lods   al,BYTE PTR ds:[esi]
  42ce5b:	scas   al,BYTE PTR es:[edi]
  42ce5c:	loope  0x42ce0e
  42ce5e:	sub    eax,0xf0459
  42ce63:	and    eax,0xbe7d0004
  42ce68:	inc    eax
  42ce69:	add    DWORD PTR [eax-0x97f6079],ebp
  42ce6f:	pushf  
  42ce70:	add    eax,0xfff8c884
  42ce75:	(bad)  
  42ce76:	std    
  42ce77:	push   edi
  42ce78:	pop    es
  42ce79:	psllw  mm5,QWORD PTR [eax-0x2]
  42ce7d:	jmp    FWORD PTR [ebp-0x51]
  42ce80:	mov    edx,0x9c010039
  42ce85:	push   cs
  42ce86:	jne    0x42cebd
  42ce88:	daa    
  42ce89:	inc    edi
  42ce8a:	and    al,0x3d
  42ce8c:	and    eax,0xbe412447
  42ce91:	inc    eax
  42ce92:	add    DWORD PTR [ebp+0x28],ecx
  42ce95:	inc    ecx
  42ce96:	add    edi,DWORD PTR [ebp-0x178af4a9]
  42ce9c:	fnstsw WORD PTR [esi-0x54dd3ba]
  42cea2:	cmp    BYTE PTR [ecx-0x64],al
  42cea5:	push   cs
  42cea6:	(bad)  
  42cea8:	fs (bad) 
  42ceaa:	(bad)  
  42ceab:	in     eax,dx
  42ceac:	es jbe 0x42cebb
  42ceaf:	mov    dh,0x54
  42ceb1:	outs   dx,BYTE PTR ds:[esi]
  42ceb2:	sub    al,0x76
  42ceb4:	dec    ebx
  42ceb5:	and    al,0x14
  42ceb7:	jbe    0x42cef4
  42ceb9:	and    al,0x10
  42cebb:	xchg   BYTE PTR [esi+0x532b8b4a],bh
  42cec1:	int    0x85
  42cec3:	std    
  42cec4:	jmp    0x42cec7
  42cec6:	mov    dh,BYTE PTR [ebx+0xb]
  42cec9:	and    al,0x84
  42cecb:	leave  
  42cecc:	sti    
  42cecd:	xchg   DWORD PTR [esi-0x3e],eax
  42ced0:	sub    DWORD PTR [ecx+0x17],eax
  42ced3:	xchg   esp,eax
  42ced4:	mov    ch,0x29
  42ced6:	mov    BYTE PTR [eax-0x43],dl
  42ced9:	stc    
  42ceda:	or     bl,BYTE PTR [ecx]
  42cedc:	jo     0x42ce8f
  42cede:	cli    
  42cedf:	fwait
  42cee0:	push   ss
  42cee1:	and    esp,DWORD PTR [eax+ebp*4]
  42cee4:	cdq    
  42cee5:	fwait
  42cee6:	xchg   BYTE PTR [eax],al
  42cee8:	nop
  42cee9:	cdq    
  42ceea:	(bad)  
  42ceeb:	jg     0x42cf6c
  42ceed:	scas   eax,DWORD PTR es:[edi]
  42ceee:	aaa    
  42ceef:	add    dl,BYTE PTR [edx+0x5b]
  42cef2:	add    ebp,DWORD PTR ds:0xb1f97b7f
  42cef8:	ficom  DWORD PTR [edi-0x66f4188]
  42cefe:	jle    0x42cee8
  42cf00:	lea    ebp,[ebp+0x43]
  42cf03:	dec    ecx
  42cf04:	enter  0x3cf8,0x74
  42cf08:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42cf09:	pusha  
  42cf0a:	les    eax,FWORD PTR [ecx-0x6a]
  42cf0d:	cdq    
  42cf0e:	stc    
  42cf0f:	test   BYTE PTR [esi+0x14fffe9d],dh
  42cf15:	fwait
  42cf16:	ds jmp 0x416cea
  42cf1c:	pusha  
  42cf1d:	jbe    0x42cf18
  42cf1f:	xchg   esp,eax
  42cf20:	push   esp
  42cf21:	mov    ds:0xfea123b5,eax
  42cf26:	in     eax,dx
  42cf27:	mov    WORD PTR [edi+0x9],ss
  42cf2a:	jmp    0x42cf34
  42cf2c:	xchg   ebx,eax
  42cf2d:	adc    dh,BYTE PTR [edi-0x4666bfd]
  42cf33:	mov    ecx,0x2f9c15d7
  42cf38:	or     eax,0xd084220
  42cf3d:	add    eax,DWORD PTR [eax]
  42cf3f:	jmp    0x416cea
  42cf44:	nop
  42cf45:	xor    ecx,DWORD PTR ds:[ecx]
  42cf48:	rcr    dl,cl
  42cf4a:	std    
  42cf4b:	or     DWORD PTR [eax],eax
  42cf4d:	lods   eax,DWORD PTR ds:[esi]
  42cf4e:	dec    ebx
  42cf50:	pop    es
  42cf51:	xchg   esp,eax
  42cf52:	add    ch,bl
  42cf54:	and    BYTE PTR [edi-0x2c515773],bl
  42cf5a:	fcmovnu st,st(1)
  42cf5c:	jnp    0x42cfb3
  42cf5e:	dec    BYTE PTR [edi-0x16ff6fe8]
  42cf64:	or     BYTE PTR [edi],0xdd
  42cf67:	fadd   QWORD PTR [ebx]
  42cf69:	push   esi
  42cf6a:	cmp    ebp,eax
  42cf6c:	icebp  
  42cf6d:	mov    ?,WORD PTR [ebx+ebp*8+0x7]
  42cf71:	xchg   esp,eax
  42cf72:	add    BYTE PTR [esi+0x2d],ch
  42cf75:	mov    al,ds:0xa39b517b
  42cf7a:	mov    eax,ds:0x6a8ead49
  42cf7f:	mov    dl,0x1
  42cf81:	adc    bh,BYTE PTR [esi-0x582d1c14]
  42cf87:	jecxz  0x42cf85
  42cf89:	push   ds
  42cf8a:	fs call 0x6d346393
  42cf90:	test   DWORD PTR [ebx],edi
  42cf92:	mov    ds:0x13c80e8,al
  42cf97:	loop   0x42cf20
  42cf99:	inc    edx
  42cf9a:	(bad)  
  42cf9b:	call   0xefda72a3
  42cfa0:	cld    
  42cfa1:	pop    ss
  42cfa2:	iret   
  42cfa3:	in     eax,0x3
  42cfa5:	xchg   esp,eax
  42cfa6:	aaa    
  42cfa7:	jge    0x42cfa8
  42cfa9:	pop    esp
  42cfaa:	icebp  
  42cfab:	fs mov esp,0x9ae8a202
  42cfb1:	add    BYTE PTR [edi],ch
  42cfb3:	add    ecx,ebp
  42cfb5:	add    edx,DWORD PTR [esi+eiz*4]
  42cfb8:	or     ch,bh
  42cfba:	pop    ss
  42cfbb:	addr16 in eax,0x3
  42cfbe:	xchg   esp,eax
  42cfbf:	cmp    BYTE PTR [ebp-0xd8b710d],0x7
  42cfc6:	xchg   esp,eax
  42cfc7:	add    BYTE PTR [eax],al
  42cfc9:	imul   edi,esp,0xe25e0ae8
  42cfcf:	std    
  42cfd0:	(bad)  
  42cfd1:	call   0x134b0712
  42cfd6:	cwde   
  42cfd7:	cmc    
  42cfd8:	mov    ecx,0xfafa8daa
  42cfdd:	pop    ss
  42cfde:	xchg   esp,eax
  42cfdf:	and    eax,ebp
  42cfe1:	mov    ecx,0x8187510e
  42cfe6:	or     al,0xcc
  42cfe8:	out    0x5,eax
  42cfea:	retf   
  42cfeb:	add    BYTE PTR [eax],al
  42cfed:	jmp    0xf4ca:0x22d5f22f
  42cff4:	or     ch,BYTE PTR [ebx-0x66]
  42cff7:	cld    
  42cff8:	(bad)  
  42cff9:	call   0xcf79c79e
  42cffe:	pop    edi
  42cfff:	idiv   BYTE PTR [ebp+0x43]
  42d002:	xchg   esp,eax
  42d003:	add    BYTE PTR [eax],al
  42d005:	jb     0x42d05f
  42d007:	add    bh,BYTE PTR [edi+0xaa5ff6a]
  42d00d:	and    ah,BYTE PTR gs:[edx+0x27bee9fa]
  42d014:	or     BYTE PTR [eax+0x0],dh
  42d017:	loope  0x42d00d
  42d019:	call   0x4364d2
  42d01e:	psubusw mm4,QWORD PTR [ecx-0x7f6b4878]
  42d025:	clc    
  42d026:	out    0x10,al
  42d028:	jle    0x42cffc
  42d02a:	hlt    
  42d02b:	aas    
  42d02c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d02d:	or     dh,BYTE PTR [edi]
  42d02f:	out    0xea,al
  42d031:	jge    0x42d07c
  42d033:	and    al,0xe1
  42d035:	(bad)  
  42d036:	in     eax,dx
  42d037:	adc    al,0xb9
  42d039:	cld    
  42d03a:	(bad)  
  42d03b:	aas    
  42d03c:	and    ecx,edi
  42d03e:	out    0xde,eax
  42d040:	jnp    0x42d073
  42d042:	add    dh,ch
  42d044:	cld    
  42d045:	inc    ebp
  42d047:	jnp    0x42d043
  42d049:	psubsw mm2,QWORD PTR [eax+0x2efffff9]
  42d050:	push   ebx
  42d051:	or     BYTE PTR [ecx+eax*4+0x79],dh
  42d055:	test   DWORD PTR [edi],0xc17b0d89
  42d05b:	or     eax,0xc202f779
  42d060:	jle    0x42cfef
  42d062:	std    
  42d063:	adc    dl,BYTE PTR [ebp+0x60]
  42d066:	(bad)  
  42d067:	mov    ebx,0x14003005
  42d06c:	cdq    
  42d06d:	stc    
  42d06e:	jmp    FWORD PTR [ebp+0x6a]
  42d071:	inc    eax
  42d072:	add    eax,DWORD PTR [edi]
  42d074:	(bad)  
  42d076:	jg     0x42d06c
  42d078:	add    DWORD PTR [edi],eax
  42d07a:	xchg   DWORD PTR [eax],eax
  42d07c:	sti    
  42d07d:	imul   esi,ebp,0xd01242ff
  42d083:	cmp    ch,bh
  42d085:	rcl    BYTE PTR [ebx-0x7c64c2c0],1
  42d08b:	ja     0x42d00d
  42d08d:	imul   esi,ebp,0xffffff80
  42d090:	test   BYTE PTR [eax],al
  42d092:	pop    es
  42d093:	test   DWORD PTR [eax+0x7b000006],ecx
  42d099:	inc    edx
  42d09a:	cli    
  42d09b:	adc    DWORD PTR [eax+ecx*8+0x6a2dfffc],edx
  42d0a2:	inc    eax
  42d0a3:	add    esp,DWORD PTR [edi-0x6b800526]
  42d0a9:	sahf   
  42d0aa:	add    eax,0xf5692b87
  42d0af:	jmp    edx
  42d0b1:	adc    eax,edx
  42d0b3:	cmp    ch,BYTE PTR [edi-0x5]
  42d0b6:	xchg   ebx,eax
  42d0b7:	inc    eax
  42d0b8:	std    
  42d0b9:	call   0xfaa5:0xb4944783
  42d0c0:	adc    al,0xb1
  42d0c2:	sti    
  42d0c3:	or     dl,BYTE PTR [ecx]
  42d0c5:	sbb    eax,0x67940005
  42d0ca:	inc    eax
  42d0cb:	(bad)  
  42d0cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d0cd:	rcl    BYTE PTR [edx-0x3],0xc3
  42d0d1:	test   eax,0x968ef67e
  42d0d6:	jg     0x42d0a4
  42d0d8:	stos   DWORD PTR es:[edi],eax
  42d0d9:	jle    0x42d080
  42d0db:	or     ah,dl
  42d0dd:	out    dx,eax
  42d0de:	add    DWORD PTR [edi+0x0],edi
  42d0e1:	lods   al,BYTE PTR ds:[esi]
  42d0e2:	cdq    
  42d0e3:	rol    BYTE PTR [ecx-0x6b],0x58
  42d0e7:	sub    dl,BYTE PTR [esi]
  42d0e9:	fcom   QWORD PTR [ebp+0x2c9b47f5]
  42d0ef:	jae    0x42d0ee
  42d0f1:	sub    DWORD PTR [ecx+0x30a4097e],0x7b
  42d0f8:	std    
  42d0f9:	jae    0x42d0a4
  42d0fb:	jle    0x42d106
  42d0fd:	pushf  
  42d0fe:	inc    eax
  42d0ff:	and    edi,esi
  42d101:	arpl   WORD PTR [ecx+0x3090097e],bp
  42d107:	sub    edi,esi
  42d109:	push   ebx
  42d10a:	test   eax,0x69541c0
  42d10f:	popf   
  42d110:	xchg   si,ax
  42d112:	test   eax,0xf15286fe
  42d117:	js     0x42d11d
  42d119:	xchg   esp,eax
  42d11a:	test   eax,0x9aa0bf7f
  42d11f:	jl     0x42d122
  42d121:	js     0x42d0cd
  42d123:	cmc    
  42d124:	mov    cl,0x54
  42d126:	sahf   
  42d127:	lds    edx,FWORD PTR [esi]
  42d129:	aam    0x29
  42d12b:	lahf   
  42d12c:	out    dx,al
  42d12d:	pop    ss
  42d12e:	jmp    0x5adab846
  42d133:	mov    esi,0x2b000c3f
  42d138:	add    ebx,DWORD PTR [ebx]
  42d13a:	pop    ds
  42d13b:	add    DWORD PTR [edi-0x12],edi
  42d13e:	push   cs
  42d13f:	ins    DWORD PTR es:[edi],dx
  42d140:	call   0x7d2b7026
  42d145:	add    ch,cl
  42d147:	sahf   
  42d148:	cdq    
  42d149:	jg     0x42d15e
  42d14b:	pcmpgtw mm2,QWORD PTR [edx-0x3f]
  42d14f:	sahf   
  42d150:	mov    cl,0x7e
  42d152:	push   ebp
  42d153:	test   DWORD PTR [ecx+eax*4],0x4190078f
  42d15a:	test   eax,0xa284999e
  42d15f:	or     edx,esp
  42d161:	jle    0x42d1bb
  42d163:	xchg   edi,eax
  42d164:	mov    DWORD PTR [ecx+0x3ed261a],ebp
  42d16a:	xchg   BYTE PTR [edi-0x2e],al
  42d16d:	sbb    DWORD PTR [esi-0x6bf9c17d],0x0
  42d174:	pop    edi
  42d175:	or     dl,BYTE PTR [edx]
  42d177:	ret    0x9c28
  42d17a:	jno    0x42d1e2
  42d17c:	or     BYTE PTR [edi],ch
  42d17e:	sub    BYTE PTR [eax-0x19],0xf8
  42d182:	sbb    BYTE PTR [edi-0x766bfc19],dl
  42d188:	stos   BYTE PTR es:[edi],al
  42d189:	sti    
  42d18a:	sbb    cl,BYTE PTR [edi-0x13]
  42d18d:	jl     0x42d1ea
  42d18f:	or     bl,BYTE PTR [eax]
  42d191:	das    
  42d192:	xchg   ebx,eax
  42d193:	mov    DWORD PTR [edx],esp
  42d195:	pushf  
  42d196:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d197:	add    ebp,ecx
  42d199:	add    ebx,DWORD PTR [ecx]
  42d19b:	rcl    DWORD PTR [ecx+edx*4-0x71a5e55],0xe5
  42d1a3:	sar    ebp,0x85
  42d1a6:	jp     0x42d167
  42d1a8:	lods   al,BYTE PTR gs:[esi]
  42d1aa:	add    BYTE PTR [esi],cl
  42d1ac:	adc    eax,0xff55c1f0
  42d1b1:	push   DWORD PTR [esi+ebx*1-0x6816ff39]
  42d1b8:	sbb    dh,0xea
  42d1bb:	ret    
  42d1bc:	push   cs
  42d1bd:	call   0xfae0bd3e
  42d1c2:	ins    BYTE PTR es:[edi],dx
  42d1c3:	xlat   BYTE PTR ds:[ebx]
  42d1c4:	adc    DWORD PTR [ecx],ecx
  42d1c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d1c7:	push   ebp
  42d1c8:	(bad)  
  42d1c9:	cmp    al,0xd0
  42d1cb:	inc    ebx
  42d1cc:	add    BYTE PTR [eax],al
  42d1ce:	jmp    0x9f2a911b
  42d1d3:	ret    
  42d1d4:	popf   
  42d1d5:	cli    
  42d1d6:	xlat   BYTE PTR fs:[ebx]
  42d1d8:	or     al,BYTE PTR [ecx+eax*2-0x25056503]
  42d1df:	xlat   BYTE PTR ds:[ebx]
  42d1e0:	adc    esi,0x475e12e6
  42d1e6:	push   0xfffffff7
  42d1e8:	or     al,0x7f
  42d1ea:	test   eax,0x7e47a893
  42d1ef:	cmp    al,0x9a
  42d1f1:	jle    0x42d1e8
  42d1f3:	arpl   bp,si
  42d1f5:	push   ebx
  42d1f7:	jg     0x42d17f
  42d1f9:	inc    ebx
  42d1fa:	or     eax,0x5438788
  42d1ff:	cwde   
  42d200:	test   DWORD PTR [ebx+0xd],eax
  42d203:	je     0x42d24a
  42d205:	mov    DWORD PTR [ebp-0x4316f2c5],esp
  42d20b:	xchg   esi,eax
  42d20c:	add    BYTE PTR [eax],al
  42d20e:	out    dx,al
  42d20f:	add    ch,al
  42d211:	pop    esi
  42d212:	test   DWORD PTR [ecx+0x3f],ebp
  42d215:	cmp    al,BYTE PTR [eax-0x17]
  42d218:	xor    ebx,DWORD PTR [edx-0x618f92f6]
  42d21e:	cli    
  42d21f:	jmp    0x71022950
  42d224:	sahf   
  42d225:	aas    
  42d226:	or     BYTE PTR [eax-0x3b],ah
  42d229:	or     al,0xc2
  42d22b:	add    BYTE PTR [ebx+0x2],al
  42d22e:	xor    al,0xe9
  42d230:	sub    al,0x2
  42d232:	add    BYTE PTR [eax],al
  42d234:	ins    DWORD PTR es:[edi],dx
  42d235:	ins    BYTE PTR es:[edi],dx
  42d236:	or     esi,DWORD PTR [ebp-0xc]
  42d239:	mov    esi,0x7b930140
  42d23e:	cmp    DWORD PTR [ecx],eax
  42d240:	std    
  42d241:	add    BYTE PTR [edi],al
  42d243:	mov    dh,0x2e
  42d245:	sbb    cl,BYTE PTR [ebx+0x44aa08]
  42d24b:	adc    bh,0x64
  42d24e:	jae    0x42d267
  42d250:	cmp    eax,0xb4743169
  42d255:	xor    cl,0x20
  42d258:	fidivr DWORD PTR [edi+0x8]
  42d25b:	add    bh,BYTE PTR [ebp-0x43b94200]
  42d261:	(bad)  
  42d262:	out    0x1e,eax
  42d264:	lods   al,BYTE PTR ds:[esi]
  42d265:	add    BYTE PTR [eax],al
  42d267:	mov    ecx,DWORD PTR [ebx-0x7ab97e68]
  42d26d:	pop    ss
  42d26e:	(bad)  
  42d26f:	psrlw  mm0,mm5
  42d272:	inc    al
  42d274:	add    BYTE PTR ds:0x5ad88301,cl
  42d27a:	es mov ebp,0x9c87e99
  42d280:	retf   0x53b6
  42d283:	add    eax,0x5ef82
  42d288:	add    BYTE PTR [edx-0x63],al
  42d28b:	xor    DWORD PTR [esi+0x45],ebx
  42d28e:	xchg   ebx,eax
  42d28f:	jl     0x42d308
  42d291:	cmp    al,0x0
  42d293:	add    BYTE PTR [ebx-0x7c406092],cl
  42d299:	test   DWORD PTR [ebx+0x5],esp
  42d29c:	test   BYTE PTR [edi],al
  42d29e:	add    eax,0x42a40000
  42d2a3:	or     BYTE PTR [ecx-0x170d9c6c],cl
  42d2a9:	ds stos BYTE PTR es:[edi],al
  42d2ab:	(bad)  
  42d2ac:	call   DWORD PTR [edi+edi*8]
  42d2af:	clc    
  42d2b0:	or     dl,BYTE PTR [ecx]
  42d2b2:	stc    
  42d2b3:	add    eax,DWORD PTR [eax]
  42d2b5:	xchg   esp,eax
  42d2b6:	(bad)  
  42d2b7:	jle    0x42d338
  42d2b9:	call   FWORD PTR [edi-0x431b7b0f]
  42d2bf:	mov    eax,ds:0xfbe41ffa
  42d2c4:	jle    0x42d340
  42d2c6:	lods   eax,DWORD PTR ds:[esi]
  42d2c7:	inc    BYTE PTR [esi]
  42d2c9:	push   edx
  42d2ca:	mov    ebp,0x9414082f
  42d2cf:	fsubp  st(0),st
  42d2d1:	ficom  DWORD PTR [ecx+eiz*4-0x6]
  42d2d5:	(bad)  
  42d2d7:	add    al,0x39
  42d2d9:	add    BYTE PTR [ebp-0x6b000180],ch
  42d2df:	push   cs
  42d2e0:	inc    eax
  42d2e1:	or     al,0x1f
  42d2e3:	(bad)  
  42d2e4:	fisttp WORD PTR [edi]
  42d2e6:	pmulhuw mm6,mm7
  42d2e9:	xchg   BYTE PTR [edx],bh
  42d2eb:	mov    eax,ds:0xec97c2d5
  42d2f0:	adc    ebx,DWORD PTR [ecx+0x6294fcf]
  42d2f6:	push   es
  42d2f7:	scas   al,BYTE PTR es:[edi]
  42d2f8:	in     eax,0xd7
  42d2fa:	pop    es
  42d2fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d2fc:	jne    0x42d2bc
  42d2fe:	pop    ds
  42d2ff:	fdivr  DWORD PTR [ebp+0x7b]
  42d302:	mov    al,0x1
  42d304:	add    al,0x75
  42d306:	cwde   
  42d307:	and    BYTE PTR [ebx],ah
  42d309:	and    al,0x7c
  42d30b:	dec    bl
  42d30d:	mov    eax,ds
  42d30f:	stos   BYTE PTR es:[edi],al
  42d310:	mov    eax,ds:0x1405d088
  42d315:	pop    ss
  42d316:	dec    esi
  42d317:	push   ds
  42d318:	mov    esi,0x45205506
  42d31d:	or     BYTE PTR ds:0xa0f7b300,bl
  42d323:	and    eax,0xd6953d23
  42d328:	std    
  42d329:	inc    ebp
  42d32a:	adc    al,0x97
  42d32c:	fcomi  st,st(6)
  42d32e:	sbb    BYTE PTR [eax+0x7f0ea5fb],al
  42d334:	jl     0x42d315
  42d336:	stos   DWORD PTR es:[edi],eax
  42d337:	add    BYTE PTR [ebx],ch
  42d339:	cmp    eax,0x3a74d795
  42d33e:	add    BYTE PTR [ebx],bl
  42d340:	sbb    edi,ebp
  42d342:	jle    0x42d332
  42d344:	adc    ecx,DWORD PTR ds:0xf0e44779
  42d34a:	js     0x42d3a3
  42d34c:	in     al,0xf8
  42d34e:	fcom   DWORD PTR [ecx]
  42d350:	xor    BYTE PTR [esi-0x4a],ch
  42d353:	into   
  42d354:	mov    dl,0x63
  42d356:	les    eax,FWORD PTR [edi+0x6]
  42d359:	pop    edi
  42d35a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d35c:	in     al,0x62
  42d35e:	clc    
  42d35f:	xchg   ebp,eax
  42d360:	mov    BYTE PTR [edx],ch
  42d362:	or     eax,0xdff24212
  42d367:	push   ds
  42d368:	mov    BYTE PTR [eax+eiz*8],ch
  42d36b:	mov    cs,WORD PTR [ebx]
  42d36d:	fs aaa 
  42d36f:	sbb    DWORD PTR [edx-0x1b087e7f],0xffffffe0
  42d376:	add    edi,DWORD PTR [ebx-0x10]
  42d379:	push   0x640991a9
  42d37e:	repnz push 0xf581619a
  42d384:	add    al,0xe9
  42d386:	mov    ebp,0xa515ffd5
  42d38b:	xlat   BYTE PTR ds:[ebx]
  42d38c:	in     al,0xf8
  42d38e:	js     0x42d367
  42d390:	in     al,0xd8
  42d392:	js     0x42d3d7
  42d394:	(bad)  
  42d395:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d396:	fbstp  TBYTE PTR [edi+0x9]
  42d399:	add    BYTE PTR [ecx+edi*8-0x57],ch
  42d39d:	cli    
  42d39e:	lods   eax,DWORD PTR cs:[esi]
  42d3a0:	cmp    al,0x8
  42d3a2:	push   0x0
  42d3a4:	jl     0x42d38a
  42d3a6:	sbb    ebp,ecx
  42d3a8:	sub    BYTE PTR [esi-0x18],bh
  42d3ab:	jmp    0xaac9d447
  42d3b0:	jne    0xb7ceca75
  42d3b6:	(bad)  
  42d3b7:	call   0xcd965553
  42d3bc:	xchg   ebx,eax
  42d3bd:	or     edx,0x1be4abc2
  42d3c3:	cmp    BYTE PTR [ebp-0x39],ch
  42d3c6:	cli    
  42d3c7:	mov    ecx,0xe3735962
  42d3cc:	pop    ebp
  42d3cd:	aas    
  42d3ce:	adc    eax,DWORD PTR ds:0x70ff0615
  42d3d4:	mov    ebp,ebp
  42d3d6:	icebp  
  42d3d7:	daa    
  42d3d8:	xchg   ecx,eax
  42d3d9:	adc    eax,0x99286d0b
  42d3de:	cli    
  42d3df:	jmp    0xb92b9210
  42d3e4:	out    0x96,al
  42d3e6:	cli    
  42d3e7:	jae    0x42d44a
  42d3e9:	in     eax,dx
  42d3ea:	and    esp,DWORD PTR [eax-0x5d]
  42d3ed:	or     cl,ch
  42d3ef:	jns    0x42d388
  42d3f1:	add    BYTE PTR [eax],al
  42d3f3:	jae    0x42d3be
  42d3f5:	in     eax,dx
  42d3f6:	and    esp,DWORD PTR [ecx-0x75]
  42d3f9:	icebp  
  42d3fa:	call   0x436b6c
  42d3ff:	arpl   WORD PTR [ecx+0x637423ed],si
  42d405:	or     al,0xe7
  42d407:	loop   0x42d409
  42d409:	fnstsw WORD PTR [edi]
  42d40b:	adc    ecx,DWORD PTR ds:0x4215050b
  42d411:	test   DWORD PTR [edx-0x4695ffbf],eax
  42d417:	nop
  42d418:	or     al,0x6b
  42d41a:	js     0x42d483
  42d41c:	mov    ch,bl
  42d41e:	or     esp,DWORD PTR [eax*4+0x46829a51]
  42d425:	sub    dh,BYTE PTR [esi-0x7f]
  42d428:	icebp  
  42d429:	and    BYTE PTR [ecx+eax*4-0x3a],0x95
  42d42e:	sbb    edi,ebp
  42d430:	(bad)  
  42d431:	std    
  42d432:	sbb    DWORD PTR [ebx+0x116ee74],edi
  42d438:	and    al,0xee
  42d43a:	xchg   ebx,eax
  42d43b:	mov    al,0xc0
  42d43d:	cli    
  42d43e:	lds    edx,FWORD PTR [ecx]
  42d440:	sar    BYTE PTR [esi+0x5d],0xe9
  42d444:	cmp    DWORD PTR ds:0x7e03e193,0xffffffc4
  42d44b:	cmp    cl,BYTE PTR [eax+0x7f8303ab]
  42d451:	lds    eax,FWORD PTR [edi-0x14c6f00b]
  42d457:	jmp    0xc8cbd75b
  42d45c:	call   FWORD PTR [edx]
  42d45e:	xchg   DWORD PTR [edx-0x15c0c6f1],edi
  42d464:	push   edx
  42d466:	mov    DWORD PTR [eax+0x17],eax
  42d469:	fld    DWORD PTR [ebp+0x35000706]
  42d46f:	inc    esi
  42d470:	psubsw mm6,QWORD PTR [ebx+0x7fff56e]
  42d477:	dec    ebx
  42d478:	mov    edx,tr5
  42d47b:	lock push cs
  42d47d:	jmp    0x42d4e9
  42d47f:	xchg   BYTE PTR [eax+0x17],al
  42d482:	pop    ecx
  42d483:	adc    eax,0x4ae51907
  42d488:	jp     0x7fe56fc9
  42d48e:	xchg   esp,eax
  42d48f:	sahf   
  42d490:	xchg   DWORD PTR [esi],ebx
  42d492:	inc    ebp
  42d493:	inc    edi
  42d494:	lahf   
  42d495:	and    ebp,DWORD PTR [eax]
  42d497:	mov    ?,edx
  42d499:	out    0xe,al
  42d49b:	sub    esp,DWORD PTR [eax]
  42d49d:	and    al,0xa0
  42d49f:	test   eax,0x6b1f2a12
  42d4a4:	or     al,BYTE PTR [ebp-0x791a89ac]
  42d4aa:	enter  0xf2bd,0x86
  42d4ae:	dec    ebx
  42d4af:	ret    
  42d4b0:	dec    edx
  42d4b1:	and    al,0xa8
  42d4b3:	pop    eax
  42d4b4:	mov    ecx,ecx
  42d4b6:	or     edi,edx
  42d4b8:	mov    BYTE PTR [edi+0x418c9388],bh
  42d4be:	mov    ds:0x980b82c5,eax
  42d4c3:	and    DWORD PTR [esi+0x13],eax
  42d4c6:	loop   0x42d4af
  42d4c8:	idiv   BYTE PTR [edx-0x6d]
  42d4cb:	sbb    al,0xf3
  42d4cd:	cli    
  42d4ce:	fld    TBYTE PTR [esi+0x78007b81]
  42d4d4:	or     DWORD PTR [esp+esi*2],eax
  42d4d7:	jp     0x42d4eb
  42d4d9:	inc    edx
  42d4da:	add    al,0x19
  42d4dc:	push   0x12
  42d4de:	and    ecx,DWORD PTR [edi]
  42d4e0:	mul    bh
  42d4e2:	pop    ds
  42d4e3:	pop    ds
  42d4e4:	ja     0x42d4cf
  42d4e6:	dec    ebx
  42d4e7:	jo     0x42d4b2
  42d4e9:	xor    eax,DWORD PTR [edi-0x7b51892e]
  42d4ef:	aam    0xf5
  42d4f1:	or     DWORD PTR [esi+0x7de28eda],eax
  42d4f7:	cwde   
  42d4f8:	stos   DWORD PTR es:[edi],eax
  42d4f9:	xchg   BYTE PTR [ecx-0x55],al
  42d4fc:	cmovns edx,DWORD PTR [ebx]
  42d4ff:	sti    
  42d500:	sahf   
  42d501:	xchg   edx,ebx
  42d503:	jb     0x42d52b
  42d505:	sahf   
  42d506:	jle    0x42d4f0
  42d508:	add    BYTE PTR ds:0xd1363fc,cl
  42d50e:	(bad)  
  42d50f:	call   0x5ddd:0xc7c36bec
  42d516:	aaa    
  42d517:	jo     0x42d511
  42d519:	ins    DWORD PTR es:[edi],dx
  42d51a:	sar    BYTE PTR [edx-0x36],cl
  42d51d:	xchg   edi,eax
  42d51e:	mov    cs,WORD PTR [ebp-0x69]
  42d521:	sbb    BYTE PTR [eax-0x7220f40d],cl
  42d527:	aad    0xef
  42d529:	int3   
  42d52a:	mov    DWORD PTR [edi-0x78b68f02],ecx
  42d530:	mov    gs,WORD PTR [edx+0x64078efa]
  42d536:	outs   dx,DWORD PTR ds:[esi]
  42d537:	add    BYTE PTR ds:0x588e0197,cl
  42d53d:	lock cdq 
  42d53f:	inc    ecx
  42d540:	arpl   WORD PTR [ebx+0x432400b],cx
  42d546:	jmp    0xe9850797
  42d54b:	das    
  42d54c:	sub    al,0x42
  42d54e:	jmp    0xe98506b7
  42d553:	sar    cl,1
  42d555:	inc    ecx
  42d556:	jmp    0xe984c6f4
  42d55b:	or     edi,ebx
  42d55d:	inc    ecx
  42d55e:	jmp    0xe984c860
  42d563:	out    dx,eax
  42d564:	cli    
  42d565:	inc    ecx
  42d566:	jmp    0xe984c84c
  42d56b:	cmp    eax,0x64e941fb
  42d570:	repnz inc ecx
  42d572:	jmp    0xe9860fd7
  42d577:	xchg   ebx,eax
  42d578:	xor    al,BYTE PTR [ebx-0x17]
  42d57b:	loop   0x42d5ac
  42d57d:	inc    ebx
  42d57e:	jmp    0x85fdac
  42d583:	jmp    0xe9803fa5
  42d588:	in     al,dx
  42d589:	imul   edi,DWORD PTR ds:0x3d63bbe9,0x3d67e2e9
  42d593:	jmp    0xe9803da6
  42d598:	push   cs
  42d599:	push   0xfe00e93d
  42d59e:	addr16 cmp eax,0x3d67fee9
  42d5a4:	jmp    0xe9803d97
  42d5a9:	out    dx,al
  42d5aa:	addr16 cmp eax,0x3d67f1e9
  42d5b0:	jmp    0xe9803d9e
  42d5b5:	dec    esi
  42d5b6:	push   0x6839e93d
  42d5bb:	cmp    eax,0x3d6831e9
  42d5c0:	jmp    0xe9803dee
  42d5c5:	inc    ecx
  42d5c6:	push   0x6839e93d
  42d5cb:	cmp    eax,0x3d6831e9
  42d5d0:	jmp    0xe9803f70
  42d5d5:	lods   al,BYTE PTR ds:[esi]
  42d5d6:	imul   edi,DWORD PTR ds:0x3d6b1ee9,0x3d6a40e9
  42d5e0:	jmp    0xe980400f
  42d5e5:	xor    al,0x6a
  42d5e7:	cmp    eax,0x3d6ad4e9
  42d5ec:	jmp    0xe98040f7
  42d5f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d5f2:	gs cmp eax,0x3d6582e9
  42d5f8:	jmp    0x803312
  42d5fd:	ins    DWORD PTR es:[edi],dx
  42d5fe:	xor    DWORD PTR [ebx-0x2b92ffbe],ebp
  42d604:	test   eax,0xa3377d42
  42d609:	inc    edx
  42d60a:	jge    0x42d59d
  42d60c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d60d:	inc    edx
  42d60e:	ins    DWORD PTR es:[edi],dx
  42d60f:	cs scas eax,DWORD PTR es:[edi]
  42d611:	inc    edx
  42d612:	ins    DWORD PTR es:[edi],dx
  42d613:	gs mov bl,0x42
  42d616:	cmp    eax,0x3d42b091
  42d61b:	mov    BYTE PTR [eax-0x4ef4d2be],dh
  42d621:	inc    edx
  42d622:	sub    eax,0x3d42a7a4
  42d627:	mov    dh,0xb3
  42d629:	inc    edx
  42d62a:	cmp    eax,0x2d42b139
  42d62f:	sti    
  42d630:	scas   al,BYTE PTR es:[edi]
  42d631:	inc    edx
  42d632:	sub    eax,0xfd42aed1
  42d637:	or     eax,0xaffd42a8
  42d63c:	mov    bl,0x42
  42d63e:	in     eax,dx
  42d63f:	jbe    0x42d5ef
  42d641:	inc    edx
  42d642:	in     eax,dx
  42d643:	push   esi
  42d644:	stos   BYTE PTR es:[edi],al
  42d645:	inc    edx
  42d646:	std    
  42d647:	stos   BYTE PTR es:[di],al
  42d649:	inc    edx
  42d64a:	std    
  42d64b:	js     0x42d5f7
  42d64d:	inc    edx
  42d64e:	in     eax,dx
  42d64f:	mov    ch,BYTE PTR [edi-0x4ec512be]
  42d655:	inc    edx
  42d656:	mov    ebp,0xbd42b0e3
  42d65b:	or     esi,DWORD PTR [eax-0x4fcc52be]
  42d661:	inc    edx
  42d662:	lods   eax,DWORD PTR ds:[esi]
  42d663:	pop    ebx
  42d664:	scas   eax,DWORD PTR es:[edi]
  42d665:	inc    edx
  42d666:	add    BYTE PTR [ebp-0x42bd50a5],bh
  42d66c:	pop    ebx
  42d66d:	scas   eax,DWORD PTR es:[edi]
  42d66e:	inc    edx
  42d66f:	lods   eax,DWORD PTR ds:[esi]
  42d670:	pop    ebx
  42d671:	scas   eax,DWORD PTR es:[edi]
  42d672:	inc    edx
  42d673:	lods   eax,DWORD PTR ds:[esi]
  42d674:	rol    DWORD PTR [ecx-0x418c6be2],1
  42d67a:	inc    BYTE PTR [edi]
  42d67c:	call   0xb615898b
  42d681:	xor    DWORD PTR [edi-0x66d80fab],eax
  42d687:	rcl    DWORD PTR [edx],cl
  42d689:	fwait
  42d68a:	pop    edx
  42d68b:	pop    ss
  42d68c:	adc    al,BYTE PTR ds:0xcf61b374
  42d692:	call   FWORD PTR [ebx-0x56]
  42d695:	and    al,0x37
  42d697:	pop    esp
  42d698:	mov    dh,0xe7
  42d69a:	jle    0x42d6f0
  42d69c:	mov    esi,0x564c3724
  42d6a1:	inc    DWORD PTR [ebp-0x25415a9]
  42d6a7:	sti    
  42d6a8:	or     DWORD PTR [ecx],ebx
  42d6aa:	adc    al,0xfc
  42d6ac:	test   al,0x17
  42d6ae:	adc    BYTE PTR [edi],cl
  42d6b0:	fs push es
  42d6b2:	pop    ds
  42d6b3:	shl    BYTE PTR [ebp+0x7513f77d],cl
  42d6b9:	pop    es
  42d6ba:	das    
  42d6bb:	aam    0x69
  42d6bd:	xor    eax,0x36e9c7bf
  42d6c2:	mov    edi,0x61940e62
  42d6c7:	pop    ss
  42d6c8:	or     al,0xef
  42d6ca:	inc    DWORD PTR [eax]
  42d6cc:	popa   
  42d6cd:	mov    ecx,0x97627f24
  42d6d2:	(bad)  
  42d6d3:	jno    0x42d662
  42d6d5:	stos   DWORD PTR es:[edi],eax
  42d6d6:	add    al,0x10
  42d6d8:	dec    eax
  42d6d9:	mov    al,ds:0x666abfcd
  42d6de:	xchg   esp,eax
  42d6df:	add    DWORD PTR [ebp+edx*8+0x530ae792],ecx
  42d6e6:	cdq    
  42d6e7:	cli    
  42d6e8:	stos   DWORD PTR es:[edi],eax
  42d6e9:	jno    0x42d6e0
  42d6eb:	mov    edi,0x52bf0354
  42d6f0:	smsw   WORD PTR [ebx]
  42d6f3:	cld    
  42d6f4:	xor    eax,esp
  42d6f6:	push   cs
  42d6f7:	add    al,0xe6
  42d6f9:	xchg   ebx,eax
  42d6fa:	sti    
  42d6fb:	xlat   BYTE PTR ds:[ebx]
  42d6fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d6fd:	inc    eax
  42d6fe:	jmp    0x2d116c8c
  42d703:	call   0xfe756af
  42d708:	mov    eax,0xeb05b8ff
  42d70d:	adc    al,0xc5
  42d70f:	or     edx,DWORD PTR [ecx+ecx*4+0xdbefbe2]
  42d716:	in     al,0x29
  42d718:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d719:	cmp    BYTE PTR [esi],bh
  42d71b:	or     eax,0x1f65c07b
  42d720:	js     0x42d71e
  42d722:	out    0xe,eax
  42d724:	and    al,al
  42d726:	imul   eax,DWORD PTR [edi-0x6c],0xfffffffe
  42d72a:	push   0x60808725
  42d72f:	inc    ebp
  42d730:	add    BYTE PTR [ebp+0x1203ecbe],dl
  42d736:	inc    ecx
  42d737:	repnz mov ebx,esp
  42d73a:	jg     0x42d742
  42d73c:	push   ds
  42d73d:	cmp    ch,0x68
  42d740:	cdq    
  42d741:	stos   BYTE PTR es:[edi],al
  42d742:	or     eax,0xdc7f82da
  42d747:	in     al,0x3
  42d749:	lahf   
  42d74a:	ins    BYTE PTR es:[edi],dx
  42d74b:	es popf 
  42d74d:	sar    DWORD PTR [edi+0x6],1
  42d750:	cli    
  42d751:	mov    cl,0xb0
  42d753:	push   0xb8ce5ea2
  42d758:	mov    WORD PTR [ebx+ebp*8-0x5a],fs
  42d75c:	or     BYTE PTR [edi+ecx*8+0x30702aa8],dl
  42d763:	jo     0x42d7ab
  42d765:	mov    WORD PTR [ecx+0x3a1d1022],cs
  42d76b:	add    cl,bl
  42d76d:	sbb    al,BYTE PTR [ecx+0x12]
  42d770:	cli    
  42d771:	into   
  42d772:	inc    edx
  42d773:	ret    
  42d774:	das    
  42d775:	mov    WORD PTR [ecx],es
  42d777:	add    cl,ch
  42d779:	xchg   edi,eax
  42d77a:	mov    ebp,0xd20c1501
  42d77f:	inc    DWORD PTR [esi]
  42d781:	cmovs  edx,DWORD PTR [esi+eax*4]
  42d785:	or     esi,0x11
  42d788:	sub    DWORD PTR [eax+0x1ce5c411],ebx
  42d78e:	sar    BYTE PTR [esi-0x186ef2e9],0xfa
  42d795:	add    BYTE PTR [edi-0x23a90000],dl
  42d79b:	fadd   QWORD PTR [edi]
  42d79d:	call   0x4194d645
  42d7a2:	xchg   edi,eax
  42d7a3:	pushf  
  42d7a4:	cld    
  42d7a5:	inc    esi
  42d7a6:	or     eax,0x9c2b59c0
  42d7ab:	add    BYTE PTR [edi+0x1bd9faf],al
  42d7b1:	lods   eax,DWORD PTR ds:[esi]
  42d7b2:	stos   DWORD PTR es:[edi],eax
  42d7b3:	sar    edi,1
  42d7b5:	imul   edx,DWORD PTR [eax+0xe],0x3
  42d7b9:	mov    ecx,0xfb9fed30
  42d7be:	push   edi
  42d7bf:	add    bl,bh
  42d7c1:	xchg   edi,eax
  42d7c2:	pop    es
  42d7c3:	call   0xe7c2:0x971b0ada
  42d7ca:	jae    0x42d813
  42d7cc:	inc    eax
  42d7cd:	jmp    0xe1bceaa6
  42d7d2:	xchg   edi,eax
  42d7d3:	or     edx,DWORD PTR [edx]
  42d7d5:	push   ebx
  42d7d6:	nop
  42d7d7:	sbb    al,BYTE PTR [eax]
  42d7d9:	push   ebx
  42d7da:	xchg   edi,eax
  42d7db:	sbb    al,BYTE PTR [eax]
  42d7dd:	(bad)  
  42d7de:	ret    0xd49
  42d7e1:	sub    DWORD PTR [eax-0x3affbe79],ebx
  42d7e7:	jp     0x42d7a3
  42d7e9:	jne    0x42d7a7
  42d7eb:	shr    BYTE PTR [ecx],0xc0
  42d7ee:	jge    0x42d7af
  42d7f0:	add    eax,0x79986cb7
  42d7f5:	clc    
  42d7f6:	shr    esp,0xfa
  42d7f9:	xor    al,BYTE PTR [eax]
  42d7fb:	cmp    eax,0xb4b605c0
  42d800:	xchg   esp,eax
  42d801:	jns    0x42d7c3
  42d803:	dec    ecx
  42d804:	test   al,0xbf
  42d806:	ret    
  42d807:	cwde   
  42d808:	xchg   esi,esp
  42d80a:	and    DWORD PTR [ecx],0xffffff9d
  42d80d:	push   eax
  42d80e:	push   edi
  42d80f:	div    BYTE PTR [ebp+0x29]
  42d812:	shr    BYTE PTR [ebp-0x3a1b8c7f],0xca
  42d819:	(bad)  
  42d81a:	std    
  42d81b:	repnz add BYTE PTR gs:[edx+eiz*8-0x2eba788c],cl
  42d824:	add    BYTE PTR [ebx-0x10],0x1d
  42d828:	je     0x42d83d
  42d82a:	xchg   esp,eax
  42d82b:	dec    esp
  42d82c:	cmp    eax,0xea7d8500
  42d831:	or     esp,DWORD PTR [ecx]
  42d833:	clc    
  42d834:	push   0x902115f5
  42d839:	cmp    al,BYTE PTR [eax]
  42d83b:	test   BYTE PTR [edx],bh
  42d83d:	lock push 0x9
  42d840:	gs cmp al,0x16
  42d843:	xchg   ebx,eax
  42d844:	je     0x42d890
  42d846:	lea    ebp,[eax]
  42d848:	pop    ecx
  42d849:	loop   0x42d7eb
  42d84b:	std    
  42d84c:	jb     0x42d843
  42d84e:	test   BYTE PTR [ebp-0xa95d017],bh
  42d854:	add    DWORD PTR [ebx-0x10],0xe443879d
  42d85b:	in     eax,0x85
  42d85d:	cli    
  42d85e:	std    
  42d85f:	add    BYTE PTR [edx+ebp*4-0x5eb74081],dl
  42d866:	sub    al,0x4
  42d868:	or     esp,esp
  42d86a:	xchg   edi,eax
  42d86b:	dec    edi
  42d86c:	and    esp,ebx
  42d86e:	lahf   
  42d86f:	out    0x28,eax
  42d871:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d872:	cwde   
  42d873:	cli    
  42d874:	sbb    BYTE PTR [edi+0xf],ah
  42d877:	or     al,0x9
  42d879:	in     al,0x9f
  42d87b:	out    0xa6,eax
  42d87d:	cwde   
  42d87e:	cwde   
  42d87f:	cli    
  42d880:	adc    BYTE PTR [edx+0x10],bl
  42d883:	sbb    ch,dh
  42d885:	xchg   ebp,eax
  42d886:	sub    al,0x0
  42d888:	jecxz  0x42d810
  42d88a:	lock xor ecx,DWORD PTR [edx-0x6399fc27]
  42d891:	and    al,0x41
  42d893:	lock les ebx,FWORD PTR [edx]
  42d896:	mov    edi,0xf126c30b
  42d89b:	das    
  42d89c:	stos   BYTE PTR es:[edi],al
  42d89d:	pop    ecx
  42d89e:	(bad)  
  42d89f:	jle    0x42d8f1
  42d8a1:	xchg   edx,eax
  42d8a2:	xchg   DWORD PTR [eax+edi*1+0x42],eax
  42d8a6:	stc    
  42d8a7:	(bad)  
  42d8a8:	cmp    DWORD PTR [edi+0x37],eax
  42d8ab:	pop    edx
  42d8ac:	pop    ebp
  42d8ad:	fld    TBYTE PTR ds:0xabca1f53
  42d8b3:	ins    DWORD PTR es:[edi],dx
  42d8b4:	pandn  mm2,QWORD PTR [esi+0x7cd9e20a]
  42d8bb:	mov    edx,0xfffe9a13
  42d8c0:	pop    ds
  42d8c1:	out    0x8e,eax
  42d8c3:	clc    
  42d8c4:	add    BYTE PTR [edx],al
  42d8c6:	fmul   QWORD PTR [ebx-0x769a13ef]
  42d8cc:	cli    
  42d8cd:	repz sahf 
  42d8cf:	push   eax
  42d8d0:	mov    edi,0x85958f0d
  42d8d5:	pop    eax
  42d8d6:	lds    eax,FWORD PTR [edx]
  42d8d8:	xchg   DWORD PTR [ecx-0x6c0de700],ebx
  42d8de:	add    BYTE PTR [ecx+0x41],dh
  42d8e1:	retf   0x2c79
  42d8e4:	loopne 0x42d879
  42d8e6:	js     0x42d90a
  42d8e8:	pop    es
  42d8e9:	or     DWORD PTR [edi-0x13],eax
  42d8ec:	cdq    
  42d8ed:	icebp  
  42d8ee:	cmp    DWORD PTR [eax+eiz*8],0xffffff87
  42d8f2:	add    BYTE PTR [ecx+0x31],ah
  42d8f5:	xchg   ebp,eax
  42d8f6:	adc    al,0xdb
  42d8f8:	sub    eax,0xe01c8f80
  42d8fd:	stos   DWORD PTR es:[edi],eax
  42d8fe:	xor    BYTE PTR [edx-0x1b3af54e],bl
  42d904:	scas   al,BYTE PTR es:[edi]
  42d905:	cwde   
  42d906:	cwde   
  42d907:	call   0xed257a6
  42d90c:	lock jnp 0x42d918
  42d90f:	aam    0x99
  42d911:	outs   dx,BYTE PTR ds:[esi]
  42d912:	xor    BYTE PTR [esi-0x3f],ah
  42d915:	mov    esi,DWORD PTR [esi]
  42d917:	push   0xffffffb2
  42d919:	fcmovb st,st(4)
  42d91b:	hlt    
  42d91c:	cmp    ch,dh
  42d91e:	ret    0x3ec
  42d921:	out    0x37,al
  42d923:	pop    esi
  42d924:	fwait
  42d925:	sbb    BYTE PTR [edi+0x11000bd3],cl
  42d92b:	stos   DWORD PTR es:[edi],eax
  42d92c:	mov    esp,0x4e0374dd
  42d931:	rcl    DWORD PTR [eax],1
  42d933:	stos   DWORD PTR es:[edi],eax
  42d934:	mov    esp,0xe74710d1
  42d939:	sbb    bl,0x13
  42d93c:	shr    BYTE PTR [ebx-0x65e45d34],cl
  42d942:	adc    dl,BYTE PTR [eax-0x1b786e95]
  42d948:	adc    bl,0x80
  42d94b:	add    cl,ch
  42d94d:	xor    bl,BYTE PTR [ebx]
  42d94f:	or     al,0xc5
  42d951:	out    dx,eax
  42d952:	inc    ebp
  42d953:	cwde   
  42d954:	jmp    ebx
  42d956:	xlat   BYTE PTR ds:[ebx]
  42d957:	mov    edx,edi
  42d959:	xlat   BYTE PTR gs:[ebx]
  42d95b:	adc    eax,DWORD PTR [esi]
  42d95d:	aas    
  42d95e:	add    BYTE PTR [ebx],bh
  42d960:	(bad)  
  42d962:	sub    eax,0xb8c2bfdd
  42d967:	ja     0x42d997
  42d969:	cdq    
  42d96a:	xchg   edi,eax
  42d96b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d96c:	adc    eax,0x13c851
  42d971:	jmp    0xdb664da
  42d976:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d977:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d978:	ja     0x42d923
  42d97a:	std    
  42d97b:	mov    DWORD PTR [edx+eax*8+0x740ac622],eax
  42d982:	push   eax
  42d983:	mov    bh,al
  42d985:	retf   
  42d986:	push   esi
  42d987:	sub    ebx,DWORD PTR [edx-0x55]
  42d98a:	xchg   esp,eax
  42d98b:	add    BYTE PTR [ebp+0x72],dl
  42d98e:	add    BYTE PTR [edi+ecx*1],bh
  42d991:	in     al,dx
  42d992:	loope  0x42d9a4
  42d994:	or     eax,0x77b5e90c
  42d999:	je     0x42d91e
  42d99b:	or     BYTE PTR [ebp-0x14],al
  42d99e:	fsub   QWORD PTR [ecx+0x75c10526]
  42d9a4:	ja     0x42d9ea
  42d9a6:	inc    ecx
  42d9a7:	mov    BYTE PTR [ebp+0x362ac312],ah
  42d9ad:	data16 (bad) [edx*1+0x451ec70c]
  42d9b5:	call   0x4fde3d1e
  42d9ba:	inc    ecx
  42d9bb:	xor    ebp,DWORD PTR [esp+edi*8-0x730c3dda]
  42d9c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d9c3:	aas    
  42d9c4:	ds sti 
  42d9c6:	pushf  
  42d9c7:	(bad)  
  42d9c8:	cwde   
  42d9c9:	push   edi
  42d9ca:	sub    DWORD PTR ds:0xbd00838b,ebx
  42d9d0:	lock sbb al,0x66
  42d9d3:	jo     0x42da47
  42d9d5:	outs   dx,BYTE PTR ds:[esi]
  42d9d6:	adc    edi,edx
  42d9d8:	xor    cl,al
  42d9da:	push   eax
  42d9db:	jmp    0xe7fc:0x70ff0ffe
  42d9e2:	inc    eax
  42d9e3:	std    
  42d9e4:	push   0xfded84f5
  42d9e9:	add    al,0x33
  42d9eb:	in     eax,dx
  42d9ec:	inc    ecx
  42d9ed:	jecxz  0x42d9f1
  42d9ef:	scas   al,BYTE PTR es:[edi]
  42d9f0:	rol    edi,0xc2
  42d9f3:	add    BYTE PTR [ecx-0x4d38b4ff],bh
  42d9f9:	or     DWORD PTR [esi-0x2e4b52c0],0x7c90456
  42da03:	mov    edx,ecx
  42da05:	clc    
  42da06:	mov    esi,0x8e797147
  42da0b:	inc    eax
  42da0c:	ins    DWORD PTR es:[edi],dx
  42da0d:	(bad)  
  42da0f:	mov    edi,DWORD PTR [ebp+0x41478d04]
  42da15:	jns    0x42da6c
  42da17:	sbb    al,0xf4
  42da19:	enter  0x891f,0x8a
  42da1d:	mov    al,ds:0xd4a55f87
  42da22:	mov    ebp,0xf5684d47
  42da27:	adc    eax,0x3a9235
  42da2c:	fdiv   st,st(0)
  42da2e:	sub    edi,DWORD PTR [eax+0x105]
  42da34:	lds    esi,FWORD PTR [ebx+esi*1]
  42da37:	jmp    FWORD PTR [edx+0x7a]
  42da3a:	ins    DWORD PTR es:[edi],dx
  42da3b:	and    al,0xb
  42da3d:	jp     0x42da94
  42da3f:	sub    bl,al
  42da41:	inc    eax
  42da42:	sbb    al,0x1
  42da44:	mov    dl,0x40
  42da46:	and    BYTE PTR [edx],bh
  42da48:	xchg   esp,eax
  42da49:	xchg   edi,eax
  42da4a:	(bad)  
  42da4b:	dec    DWORD PTR [edi]
  42da4d:	out    0x3b,al
  42da4f:	mov    edi,0x86a31249
  42da54:	pop    ecx
  42da55:	pop    DWORD PTR [ebx+0x6d8000eb]
  42da5b:	das    
  42da5c:	call   0xfadb895c
  42da61:	pop    ds
  42da62:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42da63:	xor    cl,0x9b
  42da66:	sbb    eax,0x96c3ff4f
  42da6b:	jge    0x42da66
  42da6d:	mov    ebx,0x94a57aad
  42da72:	xchg   edi,eax
  42da73:	(bad)  
  42da74:	jle    0x42daa7
  42da76:	ret    
  42da77:	add    edi,ebx
  42da79:	sub    DWORD PTR [edi-0x23f64033],ebx
  42da7f:	stos   DWORD PTR es:[edi],eax
  42da80:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42da81:	aas    
  42da82:	das    
  42da83:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  42da85:	pop    ds
  42da86:	fs stos DWORD PTR es:[edi],eax
  42da88:	dec    esi
  42da89:	mov    eax,ds:0x7b2e9273
  42da8e:	and    DWORD PTR [ecx-0x1c],eax
  42da91:	scas   eax,DWORD PTR es:[edi]
  42da92:	pop    edx
  42da93:	add    al,BYTE PTR [ecx+edx*1+0x11fffe9a]
  42da9a:	sahf   
  42da9b:	int3   
  42da9c:	mov    cl,dl
  42da9e:	or     DWORD PTR [eax+0x2c4a4444],0x2991c1fb
  42daa8:	call   0xfad4db1e
  42daad:	or     eax,0x5b36a265
  42dab2:	dec    ebp
  42dab3:	std    
  42dab4:	mov    BYTE PTR [ecx+0x1c4488c9],ch
  42daba:	push   0x2c
  42dabc:	sti    
  42dabd:	add    BYTE PTR [ecx+0x11e926a1],ah
  42dac3:	add    ecx,ebp
  42dac5:	add    edi,esp
  42dac7:	icebp  
  42dac8:	iret   
  42dac9:	xchg   ebp,eax
  42daca:	(bad)  
  42dacb:	jns    0x42da78
  42dacd:	pop    edx
  42dacf:	ret    
  42dad0:	xchg   ebx,eax
  42dad1:	add    bl,BYTE PTR ds:0xaa8b010e
  42dad7:	cld    
  42dad8:	test   al,0x2a
  42dada:	aam    0xe8
  42dadc:	arpl   WORD PTR [ebx],dx
  42dade:	mov    WORD PTR [eax],?
  42dae0:	add    DWORD PTR [eax],esi
  42dae2:	mov    ah,0x8d
  42dae4:	loope  0x42db65
  42dae6:	or     edx,DWORD PTR ds:0x7d9c29fa
  42daec:	sub    esp,DWORD PTR [eax+0x825774b]
  42daf2:	cmp    eax,eax
  42daf4:	loopne 0x42daf8
  42daf6:	xchg   esi,eax
  42daf7:	xor    BYTE PTR [edx+0x28f273f0],bh
  42dafd:	add    al,0x1b
  42daff:	(bad)  
  42db00:	fcom   QWORD PTR [esi+0x458fcd2]
  42db06:	jae    0x42daee
  42db08:	cdq    
  42db09:	adc    BYTE PTR [eax-0x68],bh
  42db0c:	dec    edx
  42db0d:	mov    ds:0x10898b78,eax
  42db12:	sbb    BYTE PTR [eax-0x74975c9e],0x79
  42db19:	adc    BYTE PTR [eax-0x68],ch
  42db1c:	pop    edx
  42db1d:	mov    ds:0xc3b68b58,eax
  42db22:	add    dh,ch
  42db24:	sub    dh,BYTE PTR [eax]
  42db26:	rcl    DWORD PTR [edi-0x53f83100],0x18
  42db2d:	mov    ecx,0x14989442
  42db32:	je     0x42db67
  42db34:	mov    ebp,DWORD PTR [ebp-0x64]
  42db37:	stos   BYTE PTR es:[edi],al
  42db38:	and    eax,0x25a3033d
  42db3d:	add    BYTE PTR [ebp-0x69],cl
  42db40:	jge    0x42db8c
  42db42:	in     eax,0x1e
  42db44:	add    bl,bh
  42db46:	mov    ecx,0x574820b
  42db4b:	ficomp WORD PTR [edx-0x71517292]
  42db51:	pop    ss
  42db52:	jmp    0x83eb:0xa786f8a2
  42db59:	(bad)  
  42db5a:	jg     0x42db44
  42db5c:	test   DWORD PTR [ecx],esi
  42db5e:	test   BYTE PTR [ebx-0x605b7904],0x98
  42db65:	push   ebp
  42db66:	enter  0x8623,0x84
  42db6a:	test   eax,0x3786da93
  42db6f:	mov    WORD PTR [ebp-0x7a59b02a],es
  42db75:	jno    0x42db68
  42db77:	add    BYTE PTR [esp+ecx*1],dl
  42db7a:	jb     0x42dbdf
  42db7c:	clc    
  42db7d:	out    0x28,eax
  42db7f:	test   DWORD PTR [ebx+0x155864fa],0xc2007219
  42db89:	hlt    
  42db8a:	test   dl,al
  42db8c:	stos   BYTE PTR es:[edi],al
  42db8d:	repnz cli 
  42db8f:	pop    ds
  42db90:	add    BYTE PTR [edi+0x451cdd74],0x8
  42db97:	xchg   ecx,eax
  42db98:	js     0x42db3b
  42db9a:	cld    
  42db9b:	jle    0x42db80
  42db9d:	dec    ecx
  42db9e:	jae    0x42db81
  42dba0:	adc    al,0x3d
  42dba2:	cld    
  42dba3:	outs   dx,BYTE PTR ds:[esi]
  42dba4:	call   0x213ec2a9
  42dba9:	inc    ebp
  42dbaa:	in     al,0x52
  42dbac:	(bad)  
  42dbad:	fidivr DWORD PTR [edi+0x648354a9]
  42dbb3:	inc    ecx
  42dbb4:	adc    eax,0xd200fc3d
  42dbb9:	scas   al,BYTE PTR es:[edi]
  42dbba:	mov    edx,0xfa83dae8
  42dbbf:	jmp    FWORD PTR [edi-0x4]
  42dbc2:	call   DWORD PTR [ebp+0x2a]
  42dbc5:	jns    0x42dbb6
  42dbc7:	dec    DWORD PTR [eax]
  42dbc9:	push   ss
  42dbca:	adc    BYTE PTR [eax-0x13],al
  42dbcd:	js     0x42dbc1
  42dbcf:	jmp    0x42dbb0
  42dbd1:	mov    al,0xba
  42dbd3:	inc    eax
  42dbd4:	scas   al,BYTE PTR es:[edi]
  42dbd5:	fs add edi,0x69
  42dbd9:	xchg   esi,eax
  42dbda:	pusha  
  42dbdb:	bt     DWORD PTR [ebp-0x1440b975],esi
  42dbe2:	jp     0x42dba5
  42dbe4:	cld    
  42dbe5:	int    0x5d
  42dbe7:	mov    ebp,eax
  42dbe9:	je     0x42dbfe
  42dbeb:	mov    al,ds:0x3dbc00
  42dbf0:	and    ebp,0x0
  42dbf3:	je     0x42dc16
  42dbf5:	ds gs (bad) 
  42dbf8:	jae    0x42dbab
  42dbfa:	xor    dl,0x2
  42dbfd:	push   0xbd463289
  42dc02:	repnz or esi,edi
  42dc05:	mov    ebx,0x8d4e8494
  42dc0a:	jge    0x42dc03
  42dc0c:	sbb    ah,BYTE PTR [ecx-0x3d3fd341]
  42dc12:	sar    BYTE PTR [ecx+0x3e787d04],cl
  42dc18:	and    al,0x61
  42dc1a:	or     BYTE PTR [eax+0x12],0xe4
  42dc1e:	xor    eax,0x88b38d04
  42dc23:	sub    esi,esi
  42dc25:	cli    
  42dc26:	cmp    al,0x8
  42dc28:	add    eax,0x3afffd3d
  42dc2d:	jae    0x42dc29
  42dc2f:	add    al,0x89
  42dc31:	xchg   esp,eax
  42dc32:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42dc33:	jmp    0x1f0c:0x47207be6
  42dc3a:	push   eax
  42dc3b:	push   es
  42dc3c:	das    
  42dc3d:	inc    esi
  42dc3e:	inc    cl
  42dc40:	jae    0x42dbc7
  42dc42:	mov    ecx,0xa28930d5
  42dc47:	inc    eax
  42dc48:	(bad)  
  42dc49:	int    0x68
  42dc4b:	add    BYTE PTR [ecx+ebx*4+0x16],dh
  42dc4f:	mov    esi,0x1ee00fd
  42dc54:	xchg   BYTE PTR [edi-0x7c],cl
  42dc57:	loop   0x42dc97
  42dc59:	adc    al,0x95
  42dc5b:	xchg   edi,eax
  42dc5c:	(bad)  
  42dc5d:	jmp    DWORD PTR [eax+ebx*4]
  42dc60:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42dc61:	mov    al,0x41
  42dc63:	push   ds
  42dc64:	mov    ds:0x808eb87e,eax
  42dc69:	jmp    0x42dc13
  42dc6b:	xchg   ebp,eax
  42dc6c:	(bad)  
  42dc6d:	jmp    DWORD PTR [edi-0x2f]
  42dc70:	jp     0x42dce6
  42dc72:	mov    dl,cl
  42dc74:	sar    dl,cl
  42dc76:	sbb    eax,0x6d1be7eb
  42dc7b:	inc    ecx
  42dc7c:	lock or bl,BYTE PTR [ecx]
  42dc7f:	xchg   ecx,eax
  42dc80:	add    eax,DWORD PTR [eax]
  42dc82:	xchg   esp,eax
  42dc83:	push   ds
  42dc84:	inc    esi
  42dc85:	and    cl,dl
  42dc87:	cdq    
  42dc88:	(bad)  
  42dc89:	lahf   
  42dc8a:	xchg   esp,eax
  42dc8b:	mov    es,WORD PTR [ebp-0x1666ad9]
  42dc91:	cmp    al,0x94
  42dc93:	cwde   
  42dc94:	(bad)  
  42dc95:	jmp    DWORD PTR [ebx-0x6bff0ee5]
  42dc9b:	cdq    
  42dc9c:	jg     0x42dcdf
  42dc9e:	mov    al,0xe9
  42dca0:	mov    ?,WORD PTR [esp+ecx*4+0x20]
  42dca4:	dec    eax
  42dca5:	and    al,0x74
  42dca7:	and    al,0x48
  42dca9:	and    al,0x7c
  42dcab:	add    BYTE PTR [ecx+0xdcbf7c],bh
  42dcb1:	jge    0x42dc72
  42dcb3:	fdivr  st(4),st
  42dcb5:	jl     0x42dcb7
  42dcb7:	scas   eax,DWORD PTR es:[edi]
  42dcb8:	fmul   QWORD PTR [eax]
  42dcba:	pushf  
  42dcbb:	mov    ecx,0x189341af
  42dcc0:	shr    ecx,0x87
  42dcc3:	daa    
  42dcc4:	add    ecx,ebp
  42dcc6:	add    esp,DWORD PTR [edi+0x2f]
  42dcc9:	mov    edi,0xea1a6706
  42dcce:	sbb    edx,DWORD PTR [eax+eax*1+0x3d0883e9]
  42dcd5:	int    0xcb
  42dcd7:	arpl   WORD PTR [edi+0x4099d3f3],ax
  42dcdd:	jmp    0xed1f345e
  42dce2:	xchg   bl,ah
  42dce4:	xchg   ecx,esp
  42dce6:	xchg   DWORD PTR [ecx+eax*1],ecx
  42dce9:	jmp    0x2cb840f1
  42dcee:	call   0xcf140d86
  42dcf3:	ss xchg cl,dl
  42dcf6:	xchg   ebx,esi
  42dcf8:	or     eax,0xdc279309
  42dcfd:	hlt    
  42dcfe:	xchg   edx,eax
  42dcff:	mov    BYTE PTR [eax-0x2a],ah
  42dd02:	inc    ebx
  42dd03:	xchg   esp,eax
  42dd04:	leave  
  42dd05:	xor    al,0xe8
  42dd07:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42dd08:	mul    DWORD PTR [ecx+ecx*4-0x75]
  42dd0c:	xchg   eax,ebp
  42dd0e:	xchg   edx,eax
  42dd0f:	pop    es
  42dd10:	(bad)  
  42dd12:	xchg   edx,eax
  42dd13:	mov    al,ds:0x9443f88c
  42dd18:	fwait
  42dd19:	push   cs
  42dd1a:	int    0x0
  42dd1c:	out    dx,eax
  42dd1d:	(bad)  
  42dd1f:	jle    0x42dcde
  42dd21:	loopne 0x42dd90
  42dd23:	shl    BYTE PTR [edi-0x10],1
  42dd26:	jmp    FWORD PTR [eax]
  42dd28:	cwde   
  42dd29:	or     al,0x2
  42dd2b:	outs   dx,BYTE PTR ds:[esi]
  42dd2c:	mov    ds:0xfe6613dc,eax
  42dd31:	xor    eax,0x99e966
  42dd36:	in     ax,dx
  42dd38:	push   es
  42dd39:	adc    esp,DWORD PTR [ecx+ecx*1]
  42dd3c:	pop    es
  42dd3d:	in     al,dx
  42dd3e:	jg     0x42dd18
  42dd40:	xlat   BYTE PTR ds:[ebx]
  42dd41:	add    BYTE PTR [edi+0x73ae0c21],al
  42dd47:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42dd48:	adc    DWORD PTR es:[eax],esp
  42dd4b:	(bad)  
  42dd4c:	retf   
  42dd4d:	fcomp  QWORD PTR [edi]
  42dd4f:	mov    edx,0x1efca91f
  42dd54:	cmp    DWORD PTR es:[edi+0x738b969d],0xffffffc5
  42dd5c:	push   DWORD PTR [ebx+0x43]
  42dd5f:	int    0xfb
  42dd61:	ss push eax
  42dd63:	adc    DWORD PTR ds:0x89f6fac7,ebp
  42dd69:	mov    edx,edx
  42dd6b:	push   0xffffff9b
  42dd6d:	fmul   QWORD PTR [edi]
  42dd6f:	jmp    0xfbe2a9b4
  42dd74:	push   edi
  42dd75:	add    BYTE PTR [edi+ebp*8+0x4],dh
  42dd79:	adc    esp,DWORD PTR [ecx+edi*8]
  42dd7c:	add    al,0xb1
  42dd7e:	jle    0x42ddc5
  42dd80:	add    BYTE PTR [edx+edi*8+0x5c834ff],ch
  42dd87:	jl     0x42dd96
  42dd89:	xchg   esp,eax
  42dd8a:	mov    DWORD PTR [ebx-0x8],esi
  42dd8d:	and    al,0x12
  42dd8f:	and    al,0xf5
  42dd91:	and    al,0xb0
  42dd93:	out    0xd0,al
  42dd95:	pusha  
  42dd96:	mov    edi,DWORD PTR [eax]
  42dd98:	adc    eax,0xe373f67c
  42dd9d:	add    al,0x12
  42dd9f:	and    al,0x0
  42dda1:	cmp    eax,0x3fa01371
  42dda6:	inc    edx
  42dda7:	add    BYTE PTR [ecx],bh
  42dda9:	dec    ecx
  42ddaa:	sahf   
  42ddab:	push   es
  42ddac:	je     0x42de1a
  42ddae:	jge    0x42de26
  42ddb0:	and    al,0x49
  42ddb2:	jno    0x42de22
  42ddb4:	or     bl,dl
  42ddb6:	call   0x8e0ce9de
  42ddbb:	call   0x9d5e:0x5701fd12
  42ddc2:	add    DWORD PTR [ebx-0x75],edx
  42ddc5:	rcl    ch,1
  42ddc7:	mov    ecx,0x82c7fd08
  42ddcc:	icebp  
  42ddcd:	mov    edx,0xabe803ea
  42ddd2:	push   ebp
  42ddd3:	sti    
  42ddd4:	jmp    FWORD PTR [esi-0x26]
  42ddd7:	add    eax,DWORD PTR [eax]
  42ddd9:	jle    0x42ddb5
  42dddb:	pop    es
  42dddc:	add    BYTE PTR [ebx],bh
  42ddde:	mov    ebp,0xbce54181
  42dde3:	adc    DWORD PTR [eax+eax*1-0x2f],0xaf6b4dfd
  42ddeb:	xchg   esp,eax
  42ddec:	dec    ebp
  42dded:	mov    eax,esp
  42ddef:	add    al,0x3e
  42ddf1:	or     BYTE PTR [esi-0x44],ah
  42ddf4:	adc    cl,BYTE PTR [ebp+0xe82f862]
  42ddfa:	mov    esi,0x86c0f952
  42ddff:	push   ecx
  42de00:	ins    BYTE PTR es:[edi],dx
  42de01:	or     ebp,DWORD PTR [eax]
  42de03:	ret    
  42de04:	pop    ss
  42de05:	push   edx
  42de06:	lds    esi,FWORD PTR [ebx-0x28]
  42de09:	std    
  42de0a:	dec    edx
  42de0b:	fs cld 
  42de0d:	xor    DWORD PTR ds:0x8a74ba7d,edi
  42de13:	jo     0x42de5a
  42de15:	or     BYTE PTR [esi],al
  42de17:	icebp  
  42de18:	pop    es
  42de19:	imul   edx,DWORD PTR [esi+ebp*2-0x4383ad1a],0xffffffa9
  42de21:	cld    
  42de22:	arpl   si,bx
  42de24:	sub    eax,0x319790be
  42de29:	xchg   DWORD PTR [eax+0x1a],eax
  42de2c:	mov    ds:0x35ece7f7,eax
  42de31:	push   ebx
  42de32:	scas   al,BYTE PTR es:[edi]
  42de33:	cwde   
  42de34:	push   ss
  42de35:	add    al,al
  42de37:	in     eax,dx
  42de38:	out    0xe7,al
  42de3a:	xchg   esp,eax
  42de3b:	inc    edx
  42de3c:	mov    bh,dl
  42de3e:	pop    ds
  42de3f:	aas    
  42de40:	sub    ah,0xa9
  42de43:	call   0xebce:0x2fc9e73e
  42de4a:	add    BYTE PTR [ecx],dl
  42de4c:	into   
  42de4d:	cmp    BYTE PTR [edi-0xee36c80],0x3
  42de54:	test   BYTE PTR [edx+0x2e97540f],cl
  42de5a:	sti    
  42de5b:	mov    DWORD PTR [edi+0x22943fed],edx
  42de61:	ror    BYTE PTR [edi],cl
  42de63:	xchg   DWORD PTR [edi-0x2],edx
  42de66:	mov    dh,0xc
  42de68:	stos   BYTE PTR es:[edi],al
  42de69:	(bad)  
  42de6a:	jmp    DWORD PTR [edi-0x72]
  42de6d:	aam    0xfb
  42de6f:	push   es
  42de70:	pop    edx
  42de71:	(bad)  
  42de72:	cli    
  42de73:	jmp    0x9597:0x9400fd5d
  42de7a:	or     DWORD PTR [eax+ecx*8-0x36540539],edi
  42de81:	mov    dh,BYTE PTR [eax+eiz*4]
  42de84:	or     BYTE PTR [edi],bh
  42de86:	add    BYTE PTR [ebx+0x8c2c66c],bl
  42de8c:	mov    esp,0xa3ffe838
  42de91:	(bad)  
  42de92:	inc    edi
  42de94:	add    BYTE PTR [ecx+0x3e25de2f],ch
  42de9a:	jnp    0x42df14
  42de9c:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  42de9e:	or     BYTE PTR [ebp+ebp*1+0x74b8205c],dl
  42dea5:	addr16 mov al,ds:0xfd73
  42dea9:	call   0x8e12c1b1
  42deae:	xor    eax,DWORD PTR [eax]
  42deb0:	dec    edi
  42deb1:	out    dx,al
  42deb2:	ins    BYTE PTR es:[edi],dx
  42deb3:	hlt    
  42deb4:	add    DWORD PTR [eax],0xffffffb9
  42deb7:	mov    fs,WORD PTR [eax-0x6bbc0800]
  42debd:	push   ss
  42debe:	call   0x134f73de
  42dec3:	in     eax,dx
  42dec4:	cmp    ecx,DWORD PTR [ecx]
  42dec6:	dec    edi
  42dec7:	xchg   ecx,eax
  42dec8:	push   ds
  42dec9:	jp     0x42de6e
  42decb:	pop    ds
  42decc:	retf   
  42decd:	mov    edi,0xc0bafbbb
  42ded2:	test   al,0x9c
  42ded4:	or     BYTE PTR [ecx],al
  42ded6:	jmp    0x6c7244de
  42dedb:	dec    ecx
  42dedc:	sbb    BYTE PTR [ecx],dh
  42dede:	and    edx,0x9c09de93
  42dee4:	mov    dl,BYTE PTR [esi+0x4e088f03]
  42deea:	push   0xffffff8b
  42deec:	into   
  42deed:	add    DWORD PTR [eax],0x6f
  42def0:	test   eax,0x1208e983
  42def5:	add    ch,cl
  42def7:	add    esi,DWORD PTR [edx]
  42def9:	in     al,dx
  42defa:	cmp    BYTE PTR [ebx],dh
  42defc:	and    DWORD PTR [esi],ecx
  42defe:	sub    eax,0xc083d383
  42df03:	sti    
  42df04:	xchg   BYTE PTR [edx+0x2db88c1],al
  42df0a:	fdivr  QWORD PTR [edx+0x55]
  42df0d:	xor    BYTE PTR [eax],al
  42df0f:	inc    ecx
  42df10:	adc    BYTE PTR [edi+0x3e],dl
  42df13:	jmp    0x7bbef318
  42df18:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42df19:	or     al,BYTE PTR [esi-0x53816eb1]
  42df1f:	cli    
  42df20:	xchg   esi,eax
  42df21:	sbb    al,0x43
  42df23:	or     dh,BYTE PTR [edi+edx*2-0x33]
  42df27:	mov    esi,0xbfd258fc
  42df2c:	pop    es
  42df2d:	sar    DWORD PTR [ebx+edi*2+0x74],1
  42df31:	sbb    al,BYTE PTR [esi+0x987fb8]
  42df37:	add    BYTE PTR [esp+ecx*1+0x79],dh
  42df3b:	neg    BYTE PTR [esi+0x22]
  42df3e:	jnp    0x42df57
  42df40:	test   eax,0x5cf60d68
  42df45:	or     al,0x7
  42df47:	std    
  42df48:	inc    esi
  42df49:	or     dh,BYTE PTR [ebx]
  42df4b:	sti    
  42df4c:	aam    0xb7
  42df4e:	repz aas 
  42df50:	jmp    0x2cbe5b69
  42df55:	adc    al,BYTE PTR [esi+0x2fc264f]
  42df5b:	push   cs
  42df5c:	test   eax,0x99447997
  42df61:	movntq (bad),mm4
  42df62:	out    0xe6,eax
  42df64:	or     al,0x12
  42df66:	jg     0x42df27
  42df68:	jge    0x42df17
  42df6a:	das    
  42df6b:	lea    esi,[edi+ebp*1+0x4b]
  42df6f:	test   al,0xe9
  42df71:	xchg   edi,eax
  42df72:	add    al,ch
  42df74:	pop    ebp
  42df75:	out    0x85,al
  42df77:	cli    
  42df78:	jb     0x42df7a
  42df7a:	jecxz  0x42df6e
  42df7c:	push   cs
  42df7d:	sub    DWORD PTR [eax-0x681638b5],ebx
  42df83:	add    BYTE PTR [edi-0x32],cl
  42df86:	retf   
  42df87:	xchg   BYTE PTR [ebp-0x9039200],ch
  42df8d:	(bad)  
  42df8e:	add    al,bh
  42df90:	xor    DWORD PTR [ebx],edi
  42df92:	cmp    ch,dl
  42df94:	das    
  42df95:	mov    edi,DWORD PTR [eax+0x6d448cec]
  42df9b:	add    BYTE PTR [ecx+0x73738d45],cl
  42dfa1:	jo     0x42df93
  42dfa3:	jns    0x42e01b
  42dfa5:	std    
  42dfa6:	adc    dh,BYTE PTR [edx+ecx*2+0x6a]
  42dfaa:	ins    BYTE PTR es:[edi],dx
  42dfab:	add    eax,DWORD PTR [esp+eax*4-0x53]
  42dfaf:	add    DWORD PTR [eax+ebp*8-0x53],eax
  42dfb3:	xlat   BYTE PTR fs:[ebx]
  42dfb5:	lds    esi,FWORD PTR [edx-0x6700b68d]
  42dfbb:	jo     0x42df69
  42dfbd:	inc    ebx
  42dfbe:	cmp    eax,0x7a3bd075
  42dfc3:	call   0xea153f99
  42dfc8:	imul   ebp,eax,0x1b
  42dfcb:	cmp    edx,0xffffffff
  42dfce:	push   cs
  42dfcf:	mov    esi,0xb97e5b58
  42dfd4:	outs   dx,BYTE PTR ds:[esi]
  42dfd5:	leave  
  42dfd6:	scas   eax,DWORD PTR es:[edi]
  42dfd7:	clc    
  42dfd8:	call   DWORD PTR [esi+eax*4+0x60]
  42dfdc:	dec    edi
  42dfdd:	push   ebx
  42dfde:	add    BYTE PTR [edx],ch
  42dfe0:	mov    cl,0xd1
  42dfe2:	push   ebx
  42dfe3:	cs out 0xcc,al
  42dfe6:	shr    DWORD PTR [edi],0xfe
  42dfe9:	cmp    cl,0xfe
  42dfec:	gs and dh,dl
  42dfef:	shl    BYTE PTR [ecx+ecx*2+0x53],cl
  42dff3:	adc    eax,0xad42ba41
  42dff8:	rol    BYTE PTR [edi+0x1065b245],1
  42dffe:	(bad)  
  42dfff:	shl    BYTE PTR [edx+esi*1+0x5d],cl
  42e003:	xchg   esp,eax
  42e004:	stos   BYTE PTR es:[edi],al
  42e005:	adc    DWORD PTR [eax],ecx
  42e007:	pop    esi
  42e008:	push   esi
  42e009:	adc    DWORD PTR [edi+eiz*2],eax
  42e00c:	push   edi
  42e00d:	xchg   edi,eax
  42e00e:	inc    dh
  42e010:	push   edi
  42e011:	ds pop ebx
  42e013:	out    dx,eax
  42e014:	pusha  
  42e015:	mov    edi,0x7d430f54
  42e01a:	jmp    0x42e080
  42e01c:	xchg   edi,eax
  42e01d:	(bad)  
  42e01e:	inc    edi
  42e020:	leave  
  42e021:	xor    al,0x66
  42e023:	xchg   esp,eax
  42e024:	sbb    al,0x82
  42e026:	das    
  42e027:	arpl   WORD PTR [edx-0x75],si
  42e02a:	dec    edi
  42e02b:	in     al,dx
  42e02c:	mov    dh,0xf6
  42e02e:	sbb    eax,0xe7b26f53
  42e033:	dec    ecx
  42e034:	or     bh,BYTE PTR [edx+0x74]
  42e037:	sbb    al,0xcf
  42e039:	push   ebp
  42e03a:	(bad)  
  42e03b:	cmp    edx,DWORD PTR [edi+0x2266c196]
  42e041:	mov    WORD PTR ds:0xfd6a4f00,gs
  42e047:	call   DWORD PTR [edi+edx*1+0x3a64847a]
  42e04e:	mov    edx,?
  42e050:	fs adc al,0x42
  42e053:	cwde   
  42e054:	bound  ecx,QWORD PTR fs:[ebx+0x3ea67c14]
  42e05b:	add    BYTE PTR [ecx],dl
  42e05d:	xlat   BYTE PTR ds:[ebx]
  42e05e:	adc    DWORD PTR [edi],edi
  42e060:	jl     0x42e04d
  42e062:	std    
  42e063:	call   DWORD PTR [edx+ebp*8+0x5786c7f1]
  42e06a:	dec    BYTE PTR [ecx+edx*2-0x6a99d105]
  42e071:	ins    DWORD PTR es:[edi],dx
  42e072:	dec    BYTE PTR [ecx+edx*2+0xd532f2f]
  42e079:	adc    al,0x8b
  42e07b:	cli    
  42e07c:	mov    eax,ds:0x73f45900
  42e081:	add    BYTE PTR [esp+eax*8+0x20],ah
  42e085:	out    dx,eax
  42e086:	arpl   WORD PTR [ecx-0x74367e8d],ax
  42e08c:	dec    ebx
  42e08d:	jae    0x42e0ca
  42e08f:	mov    BYTE PTR [ebx+0x5c],bh
  42e092:	mov    ds:0xe66c8e8b,eax
  42e097:	aad    0x43
  42e099:	test   DWORD PTR [eax-0x5a8171f0],ebp
  42e09f:	test   BYTE PTR [edx+0x6],ch
  42e0a2:	pop    ss
  42e0a3:	arpl   WORD PTR [ecx+0x2a3140],di
  42e0a9:	retf   
  42e0aa:	dec    ecx
  42e0ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e0ac:	push   esp
  42e0ad:	xchg   esp,eax
  42e0ae:	imul   edi,DWORD PTR [ecx+0x7f],0x54
  42e0b2:	mov    WORD PTR [edi-0x33eece3b],ss
  42e0b8:	add    edx,DWORD PTR [edi+edi*2-0x74060118]
  42e0bf:	aaa    
  42e0c0:	test   DWORD PTR [ecx+0x1],edx
  42e0c3:	pop    edx
  42e0c4:	add    al,0x94
  42e0c6:	inc    ecx
  42e0c7:	inc    edi
  42e0c8:	hlt    
  42e0c9:	call   0x4641:0x939c2751
  42e0d0:	cld    
  42e0d1:	call   0x956d:0x13312542
  42e0d8:	jle    0x42e0c5
  42e0da:	mov    ebx,ebp
  42e0dc:	fwait
  42e0dd:	into   
  42e0de:	jg     0x42e101
  42e0e0:	mov    esi,DWORD PTR [eax+0x4446b6c5]
  42e0e6:	hlt    
  42e0e7:	jmp    0xe4ad04c2
  42e0ec:	add    al,0x94
  42e0ee:	add    BYTE PTR [ebx-0xf01e4ce],bl
  42e0f4:	sbb    eax,0x61ffd992
  42e0f9:	sub    ebp,DWORD PTR [edi-0x5c]
  42e0fc:	bound  edi,QWORD PTR [ebx+0x4]
  42e0ff:	call   0xfabdff98
  42e104:	jb     0x42e08a
  42e106:	or     BYTE PTR [ecx+0x4687942f],cl
  42e10c:	loope  0x42e10e
  42e10e:	call   FWORD PTR [edx-0x77e13906]
  42e114:	inc    ecx
  42e115:	icebp  
  42e116:	mov    ?,WORD PTR [edx+0x5102e546]
  42e11c:	rol    bl,0x7f
  42e11f:	inc    eax
  42e120:	loopne 0x42e113
  42e122:	fistp  QWORD PTR [edx-0x1]
  42e125:	call   0xe31300c1
  42e12a:	sub    cl,ah
  42e12c:	mov    BYTE PTR [edi],dh
  42e12e:	pop    esp
  42e12f:	or     dh,BYTE PTR [ebx-0x2f79b7ce]
  42e135:	test   al,0x29
  42e137:	pop    es
  42e138:	pop    ds
  42e139:	cdq    
  42e13a:	pop    eax
  42e13b:	pusha  
  42e13c:	pop    es
  42e13d:	loop   0x42e13f
  42e13f:	loope  0x42e0c9
  42e141:	mov    edi,0xb2b30a27
  42e146:	and    DWORD PTR [esi+0x70128d0],eax
  42e14c:	pop    ds
  42e14d:	cmp    DWORD PTR [eax+0x60],edx
  42e150:	pop    es
  42e151:	repnz dec eax
  42e153:	loope  0x42e0dd
  42e155:	xchg   edi,eax
  42e156:	add    DWORD PTR [edx],ecx
  42e158:	mov    bl,0xa2
  42e15a:	repz test eax,edx
  42e15d:	sub    BYTE PTR [ecx],bl
  42e15f:	pop    es
  42e160:	pop    ds
  42e161:	cmp    eax,ebx
  42e163:	pop    edi
  42e164:	pop    es
  42e165:	repnz and cl,ah
  42e168:	mov    BYTE PTR [edi-0x5d4cf60d],bh
  42e16e:	in     eax,0x85
  42e170:	rol    BYTE PTR [eax],1
  42e172:	add    BYTE PTR [ebp+ebx*4+0x2],bh
  42e176:	and    ebp,DWORD PTR [ebp-0x49f720bc]
  42e17c:	mov    bl,0x60
  42e17e:	mov    DWORD PTR [ebx],esp
  42e180:	jno    0x42e187
  42e182:	mov    bh,0x66
  42e184:	ins    BYTE PTR es:[edi],dx
  42e185:	adc    ecx,0x23029dfc
  42e18b:	fld    QWORD PTR [edx-0x21]
  42e18e:	or     BYTE PTR [esi-0x4c769f4f],dh
  42e194:	ins    BYTE PTR es:[edi],dx
  42e195:	add    eax,0x816ec6b7
  42e19a:	shr    DWORD PTR [edi+ebx*4],1
  42e19d:	add    ah,BYTE PTR [ebx]
  42e19f:	sbb    eax,0x6608df42
  42e1a4:	mov    bl,0x60
  42e1a6:	mov    DWORD PTR [ebx-0x4948fa92],esp
  42e1ac:	push   0xfd395d81
  42e1b1:	iret   
  42e1b2:	shl    DWORD PTR [edi],0x7d
  42e1b5:	sbb    eax,edx
  42e1b7:	cld    
  42e1b8:	mov    eax,ds:0x231c0b02
  42e1bd:	mov    DWORD PTR [esi+0x49],edx
  42e1c0:	call   ecx
  42e1c2:	je     0x42e14e
  42e1c4:	sti    
  42e1c5:	jnp    0x42e1d7
  42e1c7:	inc    edi
  42e1c8:	jge    0x42e221
  42e1ca:	mov    edi,DWORD PTR [esi+0x368ba393]
  42e1d0:	call   0x7581:0x875afed5
  42e1d7:	add    ch,ch
  42e1d9:	cli    
  42e1da:	add    BYTE PTR [ebx-0x2d1d81ca],cl
  42e1e0:	stos   DWORD PTR es:[edi],eax
  42e1e1:	xchg   ebp,esi
  42e1e3:	mov    DWORD PTR [ebx+0x7e],eax
  42e1e6:	or     DWORD PTR [ebx-0x3b],0x94febd99
  42e1ed:	push   ss
  42e1ee:	mov    DWORD PTR [eax+0x747b3f52],ecx
  42e1f4:	pushf  
  42e1f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e1f6:	jnp    0x42e1b9
  42e1f8:	push   0xffffffa2
  42e1fa:	and    DWORD PTR [esi+0x662f6790],edi
  42e200:	mov    ebx,0xb314106e
  42e205:	jl     0x42e1f5
  42e207:	push   cs
  42e208:	push   esp
  42e209:	addr16 jnp 0x42e24d
  42e20c:	test   dl,ah
  42e20e:	inc    esi
  42e20f:	pop    es
  42e210:	xchg   ebp,eax
  42e211:	inc    BYTE PTR [bp+0xbe0]
  42e216:	cld    
  42e217:	mov    BYTE PTR [ebx+ebp*2],bl
  42e21a:	std    
  42e21b:	call   DWORD PTR [edx+eiz*8-0x1d0defc0]
  42e222:	xor    ah,BYTE PTR [eax+eiz*4]
  42e225:	lock popw es
  42e228:	xchg   ebp,eax
  42e229:	inc    BYTE PTR [bp+0x77da]
  42e22e:	and    BYTE PTR [ecx-0x288f4],cl
  42e234:	xchg   esp,eax
  42e235:	xchg   BYTE PTR [eax],dl
  42e237:	adc    al,0x4b
  42e239:	push   esp
  42e23a:	jmp    0xfb2f:0x67d4000d
  42e241:	mov    eax,ds:0x943fefff
  42e246:	in     al,dx
  42e247:	mov    esi,0xd3ba8a73
  42e24c:	mov    edi,0xfde93fc4
  42e251:	sbb    esp,DWORD PTR [edi+0x2f]
  42e254:	cmp    BYTE PTR [eax+0xb],bl
  42e257:	in     al,0x73
  42e259:	pushf  
  42e25a:	ds jmp 0x92e6:0xfea7a83b
  42e262:	cs jmp 0x1303:0xa90087db
  42e26a:	inc    ebp
  42e26b:	mov    ecx,0xbc008fc5
  42e270:	jl     0x42e261
  42e272:	cmp    ah,0xe6
  42e275:	(bad)  
  42e276:	(bad)  
  42e277:	cdq    
  42e278:	jl     0x42e233
  42e27a:	jmp    0x14886a78
  42e27f:	pop    esi
  42e280:	stos   DWORD PTR es:[edi],eax
  42e281:	adc    dh,BYTE PTR [edi-0x17]
  42e284:	in     eax,dx
  42e285:	mov    ds:0x13042911,eax
  42e28a:	xabort 0x7a
  42e28d:	sbb    ecx,DWORD PTR [eax]
  42e28f:	call   0x92507697
  42e294:	test   BYTE PTR [ebx-0x70fc16ff],ah
  42e29a:	repz aam 0x7c
  42e29d:	sar    BYTE PTR [edi+ebx*2+0x41],1
  42e2a1:	add    BYTE PTR [esp+edi*2-0x2d],bh
  42e2a5:	out    dx,eax
  42e2a6:	mov    eax,ds:0xd078e8c0
  42e2ab:	push   0x7ce88738
  42e2b0:	xchg   ecx,eax
  42e2b1:	icebp  
  42e2b2:	(bad)  
  42e2b3:	adc    al,0x29
  42e2b5:	add    al,0x19
  42e2b7:	inc    ecx
  42e2b8:	icebp  
  42e2b9:	jg     0x42e318
  42e2bb:	add    ecx,ebp
  42e2bd:	add    esi,DWORD PTR [esi+0x398bf37f]
  42e2c3:	cmc    
  42e2c4:	retf   
  42e2c5:	jp     0x42e26c
  42e2c7:	adc    BYTE PTR [esi],cl
  42e2c9:	inc    esi
  42e2ca:	sub    eax,DWORD PTR [ecx]
  42e2cc:	jmp    0xecdd5dd4
  42e2d1:	add    al,0x94
  42e2d3:	add    al,ch
  42e2d5:	or     ah,bh
  42e2d7:	add    DWORD PTR [edi+edx*4+0x538fd94],esp
  42e2de:	popa   
  42e2df:	je     0x42e2e0
  42e2e1:	inc    ecx
  42e2e2:	ret    0xb307
  42e2e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e2e6:	pop    ds
  42e2e7:	sti    
  42e2e8:	div    esp
  42e2ea:	xchg   edx,eax
  42e2eb:	sbb    al,0x74
  42e2ed:	hlt    
  42e2ee:	lahf   
  42e2ef:	enter  0xf873,0x9f
  42e2f3:	enter  0xc973,0x16
  42e2f7:	add    DWORD PTR fs:[ebp-0x17],edi
  42e2fb:	ret    
  42e2fc:	jae    0x42e2e0
  42e2fe:	jg     0x42e2f5
  42e300:	das    
  42e301:	add    bl,bh
  42e303:	mov    BYTE PTR [ecx+eax*1+0x0],bh
  42e307:	mov    cr7,edi
  42e30a:	shl    DWORD PTR [ecx-0x7bcee611],1
  42e310:	push   cs
  42e311:	dec    eax
  42e312:	pop    ebp
  42e313:	lahf   
  42e314:	ret    
  42e315:	je     0x42e309
  42e317:	adc    ch,bl
  42e319:	repz jo 0x42e2b8
  42e31c:	jo     0x42e304
  42e31e:	fiadd  DWORD PTR [eax]
  42e320:	(bad)  
  42e322:	pusha  
  42e323:	mov    WORD PTR [eax-0x1a],gs
  42e326:	loop   0x42e318
  42e328:	fdivr  st(3),st
  42e32a:	xchg   edx,eax
  42e32b:	imul   ecx,DWORD PTR [eax-0x231f6684],0x68d464eb
  42e335:	dec    edi
  42e336:	mov    es,WORD PTR [edi+ebx*1+0x14]
  42e33a:	sub    DWORD PTR [eax-0x760b407b],edx
  42e340:	loop   0x42e331
  42e342:	jbe    0x42e2e8
  42e344:	jl     0x42e340
  42e346:	aam    0x1b
  42e348:	or     al,BYTE PTR [eax-0x17]
  42e34b:	enter  0xfa7b,0xe9
  42e34f:	xlat   BYTE PTR ds:[ebx]
  42e350:	hlt    
  42e351:	pop    ss
  42e352:	ret    
  42e353:	xchg   ebp,eax
  42e354:	lea    eax,[ecx+eax*2-0x39]
  42e358:	ja     0x42e3ce
  42e35a:	add    BYTE PTR [ecx-0x7e],dl
  42e35d:	adc    ebx,DWORD PTR [eax-0x17]
  42e360:	mov    esi,0xfed74fff
  42e365:	not    BYTE PTR ds:0x3a6b31
  42e36b:	add    BYTE PTR [esi-0x40],ah
  42e36e:	repz sub edi,DWORD PTR [eax]
  42e371:	xchg   ebx,eax
  42e372:	bound  ecx,QWORD PTR [esi+ecx*1]
  42e375:	(bad)  
  42e376:	dec    DWORD PTR [edi+0x36]
  42e379:	shr    bh,0x2b
  42e37c:	clc    
  42e37d:	xchg   esi,eax
  42e37e:	dec    edx
  42e37f:	dec    DWORD PTR [eax-0x6d]
  42e382:	cmc    
  42e383:	jne    0x42e31a
  42e385:	sbb    DWORD PTR [eax],eax
  42e387:	jmp    FWORD PTR [eax]
  42e389:	xor    ebp,0x15
  42e38c:	pop    ecx
  42e38d:	jo     0x42e3c9
  42e38f:	add    BYTE PTR [edx+0x22],ah
  42e392:	push   ebx
  42e393:	leave  
  42e394:	out    dx,al
  42e395:	sub    al,BYTE PTR [ebx+0x43f7ccec]
  42e39b:	or     al,0xa0
  42e39d:	(bad)  
  42e39f:	jmp    FWORD PTR [ebp+0x31]
  42e3a2:	dec    edi
  42e3a3:	je     0x42e355
  42e3a5:	push   ss
  42e3a6:	sti    
  42e3a7:	pop    eax
  42e3a8:	xchg   esi,eax
  42e3a9:	cmp    eax,0x3f463d6e
  42e3ae:	outs   dx,BYTE PTR ds:[esi]
  42e3af:	xor    BYTE PTR [eax+0x28],dl
  42e3b2:	add    DWORD PTR [eax],eax
  42e3b4:	ins    DWORD PTR es:[edi],dx
  42e3b5:	or     ah,BYTE PTR [eax]
  42e3b7:	sub    edi,esp
  42e3b9:	adc    BYTE PTR [ebx],cl
  42e3bb:	sub    edi,esp
  42e3bd:	jae    0x42e342
  42e3bf:	test   al,0x2d
  42e3c1:	(bad)  
  42e3c2:	inc    esi
  42e3c4:	push   0x3d020788
  42e3c9:	(bad)  
  42e3ca:	sub    ebx,ebx
  42e3cc:	(bad)  
  42e3cd:	push   ecx
  42e3ce:	mov    ebp,0x7ac10045
  42e3d3:	cld    
  42e3d4:	call   DWORD PTR [edi+eiz*2-0x5b241169]
  42e3db:	cmp    dh,0x95
  42e3de:	addr16 (bad) 
  42e3e0:	out    0xee,al
  42e3e2:	and    bh,BYTE PTR [ebx]
  42e3e4:	cld    
  42e3e5:	sub    eax,0xfffffe68
  42e3ea:	push   edi
  42e3eb:	mov    ebx,0x3c9e844
  42e3f0:	add    BYTE PTR [esi+ecx*1+0x1351c2fd],dl
  42e3f7:	popa   
  42e3f8:	call   ebx
  42e3fa:	addr16 dec edi
  42e3fc:	add    bl,cl
  42e3fe:	pop    esp
  42e3ff:	repnz push cs
  42e401:	push   esp
  42e402:	addr16 ja 0x42e3fc
  42e405:	shrd   esi,esi,cl
  42e408:	cmp    BYTE PTR [edx],bl
  42e40a:	cld    
  42e40b:	std    
  42e40c:	call   DWORD PTR [esp+ebx*8-0x2fed78c5]
  42e413:	(bad)  
  42e414:	call   DWORD PTR [esi+ecx*1+0xd090c33]
  42e41b:	jns    0x42e3e7
  42e41d:	mov    edi,0x94011af1
  42e422:	addr16 jge 0x42e41d
  42e425:	ins    BYTE PTR es:[edi],dx
  42e426:	data16 (bad) 
  42e428:	(bad)  
  42e429:	jmp    0x42e4a7
  42e42b:	jp     0x42e403
  42e42d:	loope  0x42e4a3
  42e42f:	sbb    dl,ah
  42e431:	les    ebx,FWORD PTR [edx-0x7fffa417]
  42e437:	daa    
  42e438:	add    al,0xa8
  42e43a:	pushf  
  42e43b:	adc    esp,edi
  42e43d:	cs push esp
  42e43f:	lock jl 0x42e4a9
  42e442:	xchg   ebp,eax
  42e443:	dec    BYTE PTR [bx+si+0xb12]
  42e448:	(bad)  
  42e449:	call   DWORD PTR [eax+eiz*8+0x956b7c]
  42e450:	jmp    0x5d05ff58
  42e455:	cwde   
  42e456:	add    BYTE PTR [ebp-0x34e50455],0xdc
  42e45d:	jp     0x42e47c
  42e45f:	call   0x87d6e84b
  42e464:	jp     0x42e485
  42e466:	xchg   ebp,eax
  42e467:	add    cl,ch
  42e469:	jp     0x42e480
  42e46b:	in     al,dx
  42e46c:	out    0x3,eax
  42e46e:	xchg   esp,eax
  42e46f:	test   DWORD PTR [ebx+0x2fd53ef7],ebp
  42e475:	rcl    DWORD PTR [ebx-0x40874400],0xce
  42e47c:	mov    ch,0x2d
  42e47e:	test   DWORD PTR [bp+di+0x1aef],eax
  42e483:	jo     0x42e4ec
  42e485:	test   BYTE PTR [esi+edi*8+0x102803e8],dl
  42e48c:	push   0xe8fe9684
  42e491:	add    ebp,DWORD PTR [eax]
  42e493:	or     BYTE PTR [eax-0x7d],ch
  42e496:	xchg   edi,eax
  42e497:	(bad)  
  42e498:	call   0xcd4be4a0
  42e49d:	ds push es
  42e49f:	(bad)  
  42e4a0:	out    dx,al
  42e4a1:	lock sub BYTE PTR [eax+0x7bc3d4e0],0x8b
  42e4a9:	nop
  42e4aa:	aas    
  42e4ab:	push   cs
  42e4ac:	icebp  
  42e4ad:	out    0x3,eax
  42e4af:	xchg   esp,eax
  42e4b0:	in     al,dx
  42e4b1:	loope  0x42e4c5
  42e4b3:	daa    
  42e4b4:	xabort 0x90
  42e4b7:	shl    BYTE PTR [eax+edi*1-0x12],1
  42e4bb:	mov    bh,0x7
  42e4bd:	push   edx
  42e4be:	dec    ebx
  42e4bf:	mov    cl,0x2
  42e4c1:	test   al,0x64
  42e4c3:	xchg   ebx,eax
  42e4c4:	or     ebp,DWORD PTR [eax-0x15352c]
  42e4ca:	(bad)  
  42e4cb:	push   ss
  42e4cc:	in     eax,dx
  42e4cd:	pop    es
  42e4ce:	outs   dx,BYTE PTR ds:[esi]
  42e4cf:	(bad)  
  42e4d0:	cld    
  42e4d1:	adc    ebp,DWORD PTR [ecx-0x2a408269]
  42e4d7:	xor    edi,0x7c
  42e4da:	push   ebp
  42e4db:	call   0x0:0x90f0840b
  42e4e2:	push   0xffffff95
  42e4e4:	je     0x42e4e9
  42e4e6:	out    dx,al
  42e4e7:	adc    ecx,DWORD PTR [ebx]
  42e4e9:	add    ecx,ebp
  42e4eb:	xchg   edi,eax
  42e4ec:	mov    DWORD PTR [ecx+0x90b9],ebx
  42e4f2:	neg    BYTE PTR [esi]
  42e4f4:	aad    0xf
  42e4f6:	out    dx,al
  42e4f7:	push   ds
  42e4f8:	inc    ebx
  42e4f9:	xchg   ah,dl
  42e4fb:	xchg   ebx,eax
  42e4fc:	or     al,0x40
  42e4fe:	jmp    0xf9a3503
  42e503:	repnz pop edx
  42e505:	(bad)  
  42e506:	cli    
  42e507:	je     0x42e498
  42e509:	mov    DWORD PTR [ebp+esi*8-0x3f],ebx
  42e50d:	pop    ss
  42e50e:	sti    
  42e50f:	je     0x42e4b0
  42e511:	jnp    0x42e4e5
  42e513:	dec    edi
  42e514:	sbb    esi,ebp
  42e516:	psubsb mm3,QWORD PTR [esi+edx*1+0x40c9e966]
  42e51e:	xchg   BYTE PTR [edi-0x39dc0501],bl
  42e524:	push   ss
  42e525:	jp     0x42e59b
  42e527:	frstor [esi+0x1719bfb3]
  42e52d:	in     al,dx
  42e52e:	adc    ebp,DWORD PTR [esi+0xce7ff6c]
  42e534:	push   ss
  42e535:	jp     0x42e531
  42e537:	cmp    ecx,ebp
  42e539:	lods   eax,DWORD PTR ds:[esi]
  42e53a:	(bad)  
  42e53b:	call   0xf1b760d7
  42e540:	push   ss
  42e541:	in     al,dx
  42e542:	pop    es
  42e543:	add    BYTE PTR ds:0xbafff84f,ah
  42e549:	test   BYTE PTR [ebx+0x18],al
  42e54c:	mov    esi,0xca0f02f6
  42e551:	or     al,0x1
  42e553:	add    BYTE PTR ds:0x2ded8412,ch
  42e559:	add    eax,DWORD PTR [eax]
  42e55b:	and    DWORD PTR [esi-0x3],0x6
  42e55f:	test   BYTE PTR [edi],ch
  42e561:	add    eax,DWORD PTR [eax]
  42e563:	add    BYTE PTR [eax],al
  42e565:	outs   dx,BYTE PTR ds:[esi]
  42e566:	idiv   cl
  42e568:	jae    0x42e5ac
  42e56a:	jle    0x42e55d
  42e56c:	add    eax,0x4b8b5831
  42e571:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e572:	jle    0x42e56b
  42e574:	add    DWORD PTR [edx],eax
  42e576:	aas    
  42e577:	cmp    esp,DWORD PTR [ecx+0x740002ed]
  42e57d:	fdivr  QWORD PTR [edi+0x2bd0099]
  42e583:	je     0x42e5bb
  42e585:	fcomp  DWORD PTR [ebp+0x6eadfffa]
  42e58b:	and    eax,0x35d3d
  42e590:	add    BYTE PTR [ecx],ah
  42e592:	sub    edi,DWORD PTR ds:0x2ada5
  42e598:	jne    0x42e5eb
  42e59a:	jmp    0x42e5f1
  42e59c:	add    DWORD PTR [ebp+0x2],edi
  42e59f:	sbb    DWORD PTR [ebp+0x75],0x64
  42e5a3:	jmp    FWORD PTR [ecx+0x6d]
  42e5a6:	fs cli 
  42e5a8:	push   edx
  42e5a9:	cmp    cl,BYTE PTR [esi]
  42e5ab:	in     al,0x13
  42e5ad:	mov    ebp,0x84e84ffc
  42e5b2:	xor    ch,0xff
  42e5b5:	out    0x3d,al
  42e5b7:	adc    cl,BYTE PTR [ebx+0x75f58098]
  42e5bd:	xchg   esp,eax
  42e5be:	inc    edi
  42e5bf:	shr    eax,cl
  42e5c1:	rol    DWORD PTR [esi-0x377e0580],0x3
  42e5c8:	add    BYTE PTR [eax],al
  42e5ca:	xchg   esp,eax
  42e5cb:	ins    BYTE PTR es:[edi],dx
  42e5cc:	add    eax,0x81019466
  42e5d1:	cli    
  42e5d2:	mov    ds:0x61246b5f,al
  42e5d7:	xchg   DWORD PTR [ebx],eax
  42e5d9:	add    BYTE PTR [esp+ecx*2+0x41946623],dl
  42e5e0:	and    dh,0xfa
  42e5e3:	add    al,0xa5
  42e5e5:	inc    DWORD PTR [ebx]
  42e5e7:	push   0x483c1cf1
  42e5ec:	outs   dx,BYTE PTR ds:[esi]
  42e5ed:	push   ebx
  42e5ef:	cs repz pop ds
  42e5f2:	fwait
  42e5f3:	out    dx,al
  42e5f4:	inc    ebx
  42e5f5:	dec    edi
  42e5f6:	ins    BYTE PTR es:[edi],dx
  42e5f7:	jns    0x42e5f6
  42e5f9:	call   DWORD PTR [esi+edx*1+0x36d307f3]
  42e600:	loope  0x42e65b
  42e602:	outs   dx,DWORD PTR ds:[esi]
  42e603:	and    BYTE PTR [edx+0x1b],al
  42e606:	xchg   esp,eax
  42e607:	cmp    al,0xa1
  42e609:	(bad)  
  42e60a:	mov    ebx,0xc2840f67
  42e60f:	addr16 (bad) 
  42e611:	jmp    FWORD PTR [ecx-0x38]
  42e614:	add    eax,DWORD PTR [eax]
  42e616:	xchg   esp,eax
  42e617:	push   edx
  42e618:	jge    0x42e656
  42e61a:	mul    DWORD PTR [edi-0x2]
  42e61d:	dec    DWORD PTR [eax]
  42e61f:	in     eax,dx
  42e620:	cmp    DWORD PTR [ebp+0xafe6794],esp
  42e626:	sbb    BYTE PTR [esi+edi*8-0x628b6b01],dl
  42e62d:	inc    DWORD PTR [eax]
  42e62f:	jae    0x42e698
  42e631:	icebp  
  42e632:	leave  
  42e633:	pop    ds
  42e634:	add    al,0xc
  42e636:	xchg   bp,ax
  42e638:	add    BYTE PTR [edx-0x1715740a],ah
  42e63e:	aam    0x4e
  42e640:	or     ecx,DWORD PTR [ebp+0x3900d414]
  42e646:	ins    BYTE PTR es:[edi],dx
  42e647:	push   esi
  42e648:	jns    0x42e5cb
  42e64a:	xor    BYTE PTR [edx],0xab
  42e64d:	mov    ebx,0xe87533a5
  42e652:	adc    BYTE PTR [ecx],dl
  42e654:	xor    eax,0x891e806a
  42e659:	stos   DWORD PTR es:[edi],eax
  42e65a:	(bad)  
  42e65c:	rol    BYTE PTR [esp+eax*1],0x94
  42e660:	add    ch,cl
  42e662:	imul   DWORD PTR ds:0x37408b8
  42e668:	jne    0x42e6b7
  42e66a:	mov    DWORD PTR [edx+0x79],edi
  42e66d:	out    dx,eax
  42e66e:	imul   DWORD PTR [ebp-0x11359cfb]
  42e674:	je     0x42e69f
  42e676:	test   dl,ch
  42e678:	push   cs
  42e679:	mov    ds:0xf4795ab5,eax
  42e67e:	imul   DWORD PTR [ebp-0x60e9f27f]
  42e684:	jnp    0x42e658
  42e686:	cmp    BYTE PTR [esi-0x445a3c8c],0x74
  42e68d:	call   0xf243ffa2
  42e692:	jg     0x42e694
  42e694:	scas   al,BYTE PTR es:[edi]
  42e695:	mov    bh,0x68
  42e697:	jb     0x42e63c
  42e699:	je     0x42e66a
  42e69b:	rcr    DWORD PTR [esi+0x3241d974],cl
  42e6a1:	add    ecx,ebp
  42e6a3:	add    ebx,DWORD PTR [edi+0x7e7eba7d]
  42e6a9:	je     0x42e67a
  42e6ab:	ds jg  0x42e722
  42e6ae:	mov    ecx,0xff746ebd
  42e6b3:	call   0xe9e11c4f
  42e6b8:	xchg   edi,eax
  42e6b9:	add    BYTE PTR [ebp-0x30],dh
  42e6bc:	push   cs
  42e6bd:	mov    ebp,0x2058720b
  42e6c2:	test   eax,0x197e9
  42e6c7:	ficomp WORD PTR [ebx]
  42e6c9:	das    
  42e6ca:	sti    
  42e6cb:	xchg   BYTE PTR [ebx-0x6816ffe4],bh
  42e6d1:	add    ebx,esi
  42e6d3:	xchg   ecx,eax
  42e6d4:	pop    DWORD PTR [eax+0x24]
  42e6d7:	jns    0x42e671
  42e6d9:	add    BYTE PTR [eax],al
  42e6db:	in     al,dx
  42e6dc:	addr16 jo 0x42e6de
  42e6df:	call   0x43029686
  42e6e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e6e5:	xor    eax,0x97e9a5
  42e6ea:	or     ebp,DWORD PTR [esp+ebx*4+0x77]
  42e6ee:	cli    
  42e6ef:	ds pop ds
  42e6f1:	inc    ecx
  42e6f2:	popa   
  42e6f3:	ins    BYTE PTR es:[edi],dx
  42e6f4:	push   eax
  42e6f5:	push   es
  42e6f6:	test   al,ah
  42e6f8:	add    BYTE PTR [edx+0x76],ah
  42e6fb:	cli    
  42e6fc:	(bad)  
  42e6fd:	sahf   
  42e6fe:	inc    ecx
  42e6ff:	or     ah,BYTE PTR [ebx+eax*2+0x79]
  42e703:	cli    
  42e704:	push   ss
  42e705:	dec    ebx
  42e706:	in     al,dx
  42e707:	pop    ds
  42e708:	push   cs
  42e709:	mov    ebp,0x288265fb
  42e70e:	imul   edi,ecx,0x86cc32fe
  42e714:	add    eax,0x9a5b6817
  42e719:	leave  
  42e71a:	jp     0x42e70b
  42e71c:	jb     0x42e6ef
  42e71e:	add    edx,DWORD PTR [ebx+0x1a]
  42e721:	adc    ecx,DWORD PTR [ecx+0x3871dd7c]
  42e727:	mov    eax,0x98f9
  42e72c:	add    BYTE PTR [ecx+0x6545ee26],bh
  42e732:	cld    
  42e733:	jae    0x42e746
  42e735:	test   BYTE PTR [eax+0xa],0x8b
  42e739:	adc    BYTE PTR [eax],0x83
  42e73c:	(bad)  
  42e73d:	add    eax,0x32fff13e
  42e742:	jle    0x42e7a7
  42e744:	or     BYTE PTR [ebx],ah
  42e746:	in     eax,dx
  42e747:	inc    ebx
  42e748:	or     BYTE PTR [ecx],bh
  42e74a:	imul   esp,DWORD PTR ds:0x4d4a2c6a,0x33
  42e751:	mul    dh
  42e753:	mov    ch,0xfa
  42e755:	mov    ds:0xb622e1f2,al
  42e75a:	jg     0x42e75e
  42e75c:	add    DWORD PTR [eax],eax
  42e75e:	sub    eax,0x694588ff
  42e763:	ss mov edi,0x7b83f875
  42e769:	in     al,0x56
  42e76b:	cmovg  esi,DWORD PTR [edx]
  42e76e:	lods   eax,DWORD PTR ds:[esi]
  42e76f:	xchg   al,cl
  42e771:	call   0x3a060a
  42e776:	repnz test eax,0xdb3889ba
  42e77c:	add    DWORD PTR [esi-0x23],0x460c4b85
  42e783:	pusha  
  42e784:	add    cl,BYTE PTR [ecx+0xff35]
  42e78a:	lods   eax,DWORD PTR ds:[esi]
  42e78b:	test   DWORD PTR [eax+0x10],eax
  42e78e:	inc    esi
  42e78f:	push   eax
  42e790:	or     cl,BYTE PTR [ecx+0xfb25]
  42e796:	mov    ebp,0x390fd735
  42e79b:	jne    0x42e799
  42e79d:	jmp    FWORD PTR [ebp-0x10fa47b]
  42e7a3:	pop    ecx
  42e7a4:	jmp    0x9566:0x7d39402
  42e7ab:	ds add edx,esi
  42e7ae:	push   edi
  42e7af:	fs repnz add eax,0x86fef7cb
  42e7b6:	pop    edx
  42e7b7:	inc    eax
  42e7b8:	ja     0x42e7da
  42e7ba:	arpl   WORD PTR [ebx-0x1897a37a],sp
  42e7c0:	loop   0x42e7ad
  42e7c2:	add    BYTE PTR [ebx+ecx*1+0x8],dh
  42e7c6:	xchg   bp,ax
  42e7c8:	jle    0x42e7cb
  42e7ca:	repnz push edi
  42e7cc:	sub    al,bh
  42e7ce:	add    eax,0x870837e3
  42e7d3:	bound  edx,QWORD PTR [eax-0x14d4dfa5]
  42e7d9:	xchg   BYTE PTR [esp+ebp*1-0x19],bl
  42e7dd:	loop   0x42e7c6
  42e7df:	mov    WORD PTR [ebx+0x2],ss
  42e7e2:	xchg   bp,ax
  42e7e4:	into   
  42e7e5:	add    edx,esi
  42e7e7:	xlat   BYTE PTR ds:[ebx]
  42e7e8:	ja     0x42e7dc
  42e7ea:	add    eax,0x86fd976b
  42e7ef:	retf   0xbfcf
  42e7f2:	and    bl,dh
  42e7f4:	xor    cl,BYTE PTR [ecx-0x4bd57bbf]
  42e7fa:	add    edx,DWORD PTR [ebp+0x418cfe67]
  42e800:	pop    ds
  42e801:	jge    0x42e7b2
  42e803:	xchg   esp,eax
  42e804:	push   0x833efffe
  42e809:	aad    0xe7
  42e80b:	mov    edi,DWORD PTR es:[edx+edi*8+0xf]
  42e810:	add    BYTE PTR [ecx+0x43e6ac44],cl
  42e816:	icebp  
  42e817:	sbb    eax,0x9c7e7aed
  42e81c:	pop    edx
  42e81d:	repz xor ebp,DWORD PTR [esi]
  42e820:	add    cl,bl
  42e822:	aam    0x8e
  42e824:	or     ebx,ebp
  42e826:	adc    BYTE PTR [eax],al
  42e828:	aam    0x0
  42e82a:	add    BYTE PTR [ebx],0x94
  42e82d:	add    BYTE PTR [ecx],ch
  42e82f:	clc    
  42e830:	mov    bh,0xb7
  42e832:	call   0x6e433c3a
  42e837:	push   ebx
  42e838:	mov    cl,BYTE PTR [edi-0x13]
  42e83b:	push   edx
  42e83c:	out    0x9,eax
  42e83e:	add    BYTE PTR [ebx],0x94
  42e841:	cld    
  42e842:	push   0x99c9a3f6
  42e847:	push   ss
  42e848:	in     al,dx
  42e849:	or     al,0x29
  42e84b:	add    al,0x19
  42e84d:	inc    eax
  42e84e:	adc    al,0x7
  42e850:	or     eax,0x2b8884bb
  42e855:	jnp    0x42e8d0
  42e857:	idiv   DWORD PTR [eax-0x37]
  42e85a:	sbb    BYTE PTR [ecx-0x54968e80],0x5b
  42e861:	in     al,dx
  42e862:	add    eax,0xd46c9139
  42e867:	push   ss
  42e868:	jb     0x42e86a
  42e86a:	mov    edx,0xf55ca87c
  42e86f:	ret    
  42e870:	sti    
  42e871:	out    0xe7,al
  42e873:	jmp    0x5cb0a96b
  42e878:	repz xchg ecx,eax
  42e87a:	das    
  42e87b:	jl     0x42e85b
  42e87d:	cmp    BYTE PTR [ebx-0x16ff6b85],ah
  42e883:	add    edi,DWORD PTR [ebx-0x38219245]
  42e889:	jp     0x42e8b8
  42e88b:	test   DWORD PTR [eax],0x1609cd80
  42e891:	sub    al,0xc
  42e893:	test   eax,0x74401903
  42e898:	pop    ds
  42e899:	adc    DWORD PTR [ecx-0x1],esi
  42e89c:	jl     0x42e82b
  42e89e:	sub    ebx,ebx
  42e8a0:	jne    0x42e833
  42e8a2:	outs   dx,BYTE PTR ds:[esi]
  42e8a3:	inc    esp
  42e8a4:	int    0x97
  42e8a6:	hlt    
  42e8a7:	or     DWORD PTR [eax+0x6d],esi
  42e8aa:	ins    BYTE PTR es:[edi],dx
  42e8ab:	ret    0x2c
  42e8ae:	add    DWORD PTR [eax],eax
  42e8b0:	jmp    0xd339704c
  42e8b5:	xchg   BYTE PTR [ecx-0x7f6f0e84],al
  42e8bb:	(bad)  
  42e8bc:	call   0xe8a8e634
  42e8c1:	imul   esi,DWORD PTR [eax+0x68],0xe7578ae9
  42e8c8:	cmp    cl,cl
  42e8ca:	push   0xfffffffa
  42e8cc:	ins    BYTE PTR es:[edi],dx
  42e8cd:	mov    edi,0x911e83fa
  42e8d2:	add    BYTE PTR [eax],al
  42e8d4:	je     0x42e92b
  42e8d6:	test   al,0x4f
  42e8d8:	push   ss
  42e8d9:	xlat   BYTE PTR ds:[ebx]
  42e8da:	les    esp,FWORD PTR [edi+0x97b5]
  42e8e0:	outs   dx,BYTE PTR ds:[esi]
  42e8e1:	test   DWORD PTR [eax],ebp
  42e8e3:	adc    al,0xa9
  42e8e5:	xchg   edi,eax
  42e8e6:	test   DWORD PTR [edi+0x1348bee],edi
  42e8ec:	jmp    0xacf5e488
  42e8f1:	add    BYTE PTR [edi-0x64534d05],ah
  42e8f7:	inc    ecx
  42e8f8:	fcompp 
  42e8fa:	call   0x7500:0x5fb47e48
  42e901:	push   es
  42e902:	(bad)  
  42e903:	addr16 repz add eax,0xc9a76a4f
  42e90a:	mov    ebx,0x33128703
  42e90f:	or     eax,DWORD PTR [edi+0x4527a7a4]
  42e915:	add    BYTE PTR [ebp-0x5],bh
  42e918:	scas   al,BYTE PTR es:[edi]
  42e919:	clc    
  42e91a:	es inc ecx
  42e91c:	push   es
  42e91d:	sub    esi,eax
  42e91f:	mov    bh,0xbf
  42e921:	out    0xbd,eax
  42e923:	cli    
  42e924:	scas   al,BYTE PTR es:[edi]
  42e925:	rol    BYTE PTR [esi+0x603e1eb],0x69
  42e92c:	add    al,BYTE PTR [ebx+0x73faf4e8]
  42e932:	pop    ebx
  42e933:	push   esi
  42e934:	dec    ebp
  42e935:	push   0x31c
  42e93a:	lds    eax,FWORD PTR ds:0xde6dfffa
  42e940:	or     al,0xf6
  42e942:	mov    al,0xfc
  42e944:	add    esi,DWORD PTR [eax+ebx*4+0x57]
  42e948:	dec    ebp
  42e949:	push   0x3df
  42e94e:	xchg   ebp,eax
  42e94f:	push   es
  42e950:	cli    
  42e951:	jmp    FWORD PTR ds:0xf873ea
  42e957:	test   al,0x40
  42e959:	mov    ds:0xf670aa50,al
  42e95e:	mov    esi,ebx
  42e960:	fisub  DWORD PTR [ebx+edi*8]
  42e963:	stos   BYTE PTR es:[edi],al
  42e964:	jmp    0xe74:0x3697d79
  42e96b:	dec    esi
  42e96c:	push   edx
  42e96d:	bound  esp,QWORD PTR [edi+0x680002ed]
  42e973:	repnz add al,0x0
  42e976:	add    BYTE PTR [esi+0x15],al
  42e979:	out    dx,al
  42e97a:	inc    ebp
  42e97b:	in     eax,0x42
  42e97d:	outs   dx,BYTE PTR ds:[esi]
  42e97e:	sbb    eax,0xa86251fe
  42e983:	in     eax,dx
  42e984:	add    al,BYTE PTR [eax]
  42e986:	push   0x4c5
  42e98b:	stos   BYTE PTR es:[edi],al
  42e98c:	jo     0x42e980
  42e98e:	lea    edx,[esp+ebx*4-0x6c44b05a]
  42e995:	jb     0x42e91d
  42e997:	ficom  DWORD PTR [eax]
  42e999:	jb     0x42e990
  42e99b:	stos   DWORD PTR es:[edi],eax
  42e99c:	ins    DWORD PTR es:[edi],dx
  42e99d:	test   BYTE PTR [esp+ebp*4+0x58],bh
  42e9a1:	jmp    0x94a3:0xe6964709
  42e9a8:	push   edi
  42e9a9:	(bad)  
  42e9aa:	addr16 nop
  42e9ac:	pop    ecx
  42e9ad:	(bad)  
  42e9ae:	jmp    FWORD PTR [edi+0x6a]
  42e9b1:	jo     0x42e9f7
  42e9b3:	mov    WORD PTR [edi-0x16],fs
  42e9b6:	sbb    al,0xc7
  42e9b8:	push   cs
  42e9b9:	in     al,dx
  42e9ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e9bb:	add    BYTE PTR [edi+edx*2+0x599967fe],dl
  42e9c2:	(bad)  
  42e9c3:	call   FWORD PTR [ebx+0x35]
  42e9c6:	jl     0x42e954
  42e9c8:	fxch   st(7)
  42e9ca:	sar    edx,cl
  42e9cc:	ror    DWORD PTR [ebx-0x2bd33e74],0x79
  42e9d3:	cli    
  42e9d4:	cmp    edx,DWORD PTR [esi+0x6b9507ba]
  42e9da:	adc    DWORD PTR [edi-0x3d],ecx
  42e9dd:	shld   edi,edi,0x23
  42e9e1:	pop    eax
  42e9e2:	out    0xff,al
  42e9e4:	xchg   ebp,eax
  42e9e5:	push   edi
  42e9e6:	(bad)  
  42e9e7:	cli    
  42e9e8:	mov    edi,ebx
  42e9ea:	add    BYTE PTR [esp+edi*1-0x58],0x77
  42e9ef:	je     0x42e9f1
  42e9f1:	jecxz  0x42ea30
  42e9f3:	out    0x1d,eax
  42e9f5:	sar    BYTE PTR [eax-0x6],cl
  42e9f8:	jmp    0x42e996
  42e9fa:	push   es
  42e9fb:	add    BYTE PTR [edi+edx*2+0x41bb73fe],bl
  42ea02:	(bad)  
  42ea03:	sub    eax,0xe745e2d4
  42ea08:	add    al,BYTE PTR [ecx]
  42ea0a:	add    bh,BYTE PTR [ecx-0x32]
  42ea0d:	std    
  42ea0e:	push   ecx
  42ea0f:	(bad)  
  42ea10:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ea11:	std    
  42ea12:	pop    ecx
  42ea13:	inc    esp
  42ea14:	dec    edx
  42ea15:	aas    
  42ea16:	pop    es
  42ea17:	adc    al,0x9b
  42ea19:	cmp    BYTE PTR [edi-0x16fd6e15],dl
  42ea1f:	add    eax,DWORD PTR [eax]
  42ea21:	lahf   
  42ea22:	repz hlt 
  42ea24:	js     0x42e9a6
  42ea26:	sub    al,0xd5
  42ea28:	ret    
  42ea29:	xchg   ebx,eax
  42ea2a:	into   
  42ea2b:	inc    edx
  42ea2c:	fstp   QWORD PTR [edx+eax*2-0x8]
  42ea30:	add    eax,DWORD PTR [esi-0x4557f6fd]
  42ea36:	add    ch,ah
  42ea38:	out    dx,eax
  42ea39:	xchg   edx,eax
  42ea3a:	pop    eax
  42ea3b:	cmp    ah,BYTE PTR [eax+ebp*2+0x6d]
  42ea3f:	fs inc ebx
  42ea41:	out    0xa,eax
  42ea43:	pop    esi
  42ea44:	push   es
  42ea45:	in     al,dx
  42ea46:	test   al,0x25
  42ea48:	add    al,0x9f
  42ea4a:	mov    ch,0x67
  42ea4c:	call   DWORD PTR [eax+eax*1+0x770708e9]
  42ea53:	call   0xa8437e5a
  42ea58:	arpl   WORD PTR [ebx+0x2e44a7f9],sp
  42ea5e:	and    ecx,DWORD PTR [ecx+0xf]
  42ea61:	aam    0x0
  42ea63:	jnp    0x42ea63
  42ea65:	jnp    0x42ea03
  42ea67:	and    eax,0x20f49804
  42ea6c:	ins    BYTE PTR es:[edi],dx
  42ea6d:	push   edi
  42ea6e:	pusha  
  42ea6f:	pop    ebx
  42ea70:	js     0x42ea89
  42ea72:	inc    eax
  42ea73:	fsubr  QWORD PTR [eax]
  42ea75:	adc    eax,esp
  42ea77:	add    al,0x0
  42ea79:	sbb    DWORD PTR [eax-0x44],eax
  42ea7c:	and    al,0x13
  42ea7e:	sti    
  42ea7f:	sar    BYTE PTR [ebx+0x620000a2],1
  42ea85:	add    BYTE PTR [esi],cl
  42ea87:	ins    DWORD PTR es:[edi],dx
  42ea88:	(bad)  
  42ea89:	call   0x724a6225
  42ea8e:	xchg   edx,eax
  42ea8f:	fdiv   DWORD PTR [edi-0x777a6856]
  42ea95:	in     eax,dx
  42ea96:	xchg   esi,eax
  42ea97:	add    BYTE PTR [eax],al
  42ea99:	pusha  
  42ea9a:	fild   WORD PTR [eax]
  42ea9c:	das    
  42ea9d:	sub    edi,edx
  42ea9f:	stos   BYTE PTR es:[edi],al
  42eaa0:	add    ebp,ecx
  42eaa2:	push   0x23f0e640
  42eaa7:	and    al,0x38
  42eaa9:	aam    0x57
  42eaab:	ins    BYTE PTR es:[edi],dx
  42eaac:	hlt    
  42eaad:	in     al,dx
  42eaae:	mov    bh,0x9c
  42eab0:	ds jmp 0xc16cdb39
  42eab6:	std    
  42eab7:	inc    esi
  42eab8:	cld    
  42eab9:	into   
  42eaba:	adc    al,0xac
  42eabc:	jae    0x42eaca
  42eabe:	xor    esp,esp
  42eac0:	mov    bh,0x2a
  42eac2:	cwde   
  42eac3:	or     DWORD PTR [ebx+0xd],0xffffff94
  42eac7:	jns    0x42ea50
  42eac9:	jmp    0x7242eb66
  42eace:	push   esp
  42eacf:	and    BYTE PTR [eax],cl
  42ead1:	jb     0x42ea60
  42ead3:	fdiv   DWORD PTR [edi-0x7f866fd6]
  42ead9:	in     eax,0x98
  42eadb:	add    BYTE PTR [eax],al
  42eadd:	mov    edx,0xf1be2bd7
  42eae2:	xchg   edi,eax
  42eae3:	addr16 and al,0x71
  42eae6:	test   al,al
  42eae8:	push   DWORD PTR [esi+0x0]
  42eaeb:	xchg   ebp,eax
  42eaec:	and    BYTE PTR [edx+ebp*4-0x48b0fb69],ch
  42eaf3:	shr    bh,cl
  42eaf5:	inc    esp
  42eaf6:	inc    ecx
  42eaf7:	cmp    eax,0x144efc47
  42eafc:	lods   al,BYTE PTR ds:[esi]
  42eafd:	jae    0x42eaff
  42eaff:	xchg   ecx,eax
  42eb00:	ja     0x42eb58
  42eb02:	and    al,0xbd
  42eb04:	cs out dx,al
  42eb06:	cmp    eax,DWORD PTR [ebx+0x2b561371]
  42eb0c:	ds sub ebx,ebx
  42eb0f:	xor    ecx,DWORD PTR [edx+esi*4+0x43]
  42eb13:	lods   eax,DWORD PTR ds:[esi]
  42eb14:	xlat   BYTE PTR ds:[ebx]
  42eb15:	add    eax,0x55f3a2f7
  42eb1a:	pop    esi
  42eb1b:	out    0xc1,al
  42eb1d:	(bad)  
  42eb1e:	call   DWORD PTR [edx-0x12eea3ef]
  42eb24:	dec    DWORD PTR [ebp+0x53]
  42eb27:	ss in  al,dx
  42eb29:	cmc    
  42eb2a:	adc    eax,0x400f99
  42eb2f:	mov    dh,0xec
  42eb31:	jae    0x42eb38
  42eb33:	retf   
  42eb34:	cmp    cl,BYTE PTR [ebp-0x15]
  42eb37:	cmp    ch,BYTE PTR [esi]
  42eb39:	shr    bl,0x40
  42eb3c:	push   edx
  42eb3d:	pop    eax
  42eb3e:	pop    ebx
  42eb3f:	push   edx
  42eb40:	and    al,dl
  42eb42:	adc    al,0xad
  42eb44:	add    al,0xee
  42eb46:	add    eax,0x39988d
  42eb4b:	cmp    DWORD PTR [ebx+0x3f],ebx
  42eb4e:	call   0xfc168653
  42eb53:	(bad)  
  42eb54:	mov    ecx,0x22386ebf
  42eb59:	adc    BYTE PTR [ecx+edx*1+0x7d],bl
  42eb5d:	add    al,0x83
  42eb5f:	or     eax,0x39ac85
  42eb64:	push   esp
  42eb65:	test   BYTE PTR [esi],al
  42eb67:	add    DWORD PTR ds:0xae1974ff,ebp
  42eb6d:	cmp    ch,BYTE PTR [ecx]
  42eb6f:	ror    BYTE PTR [ebp+0x4f],0x4a
  42eb73:	xor    edx,DWORD PTR [esi-0x4b]
  42eb76:	push   edx
  42eb77:	mov    eax,0xe7fe9694
  42eb7c:	shl    DWORD PTR ds:[ecx-0x6],cl
  42eb80:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42eb81:	sbb    ebp,edx
  42eb83:	aas    
  42eb84:	aas    
  42eb85:	push   ss
  42eb86:	jmp    0x1a8ec68f
  42eb8b:	push   cs
  42eb8c:	push   esp
  42eb8d:	pop    ecx
  42eb8e:	sub    eax,0x2021d7c0
  42eb93:	dec    esp
  42eb94:	test   eax,0x91f1fe99
  42eb99:	cmp    DWORD PTR [edx-0x339a6bc2],esp
  42eb9f:	jae    0x42ec00
  42eba1:	adc    DWORD PTR [eax],edx
  42eba3:	(bad)  [ecx+0x20bf7969]
  42eba9:	xchg   edi,eax
  42ebaa:	jno    0x42ebc0
  42ebac:	lock dec eax
  42ebae:	mov    esi,0xe6751eff
  42ebb3:	mov    bh,0x0
  42ebb5:	xlat   BYTE PTR ds:[ebx]
  42ebb6:	push   edi
  42ebb7:	xor    eax,0xfe588881
  42ebbc:	(bad)  
  42ebbd:	jmp    0x9cf374c3
  42ebc2:	pop    eax
  42ebc3:	(bad)  
  42ebc4:	call   FWORD PTR [ecx]
  42ebc6:	mov    dl,0xef
  42ebc8:	pop    ds
  42ebc9:	ret    0xab2
  42ebcc:	push   0x850417a8
  42ebd1:	push   esp
  42ebd2:	or     eax,0x27e44f0b
  42ebd7:	aam    0x2e
  42ebd9:	pop    edi
  42ebda:	rcr    bl,cl
  42ebdc:	mov    bh,0xd7
  42ebde:	push   edi
  42ebdf:	inc    dx
  42ebe1:	and    al,BYTE PTR [ebx-0x6898a98c]
  42ebe7:	sar    DWORD PTR [esi-0x412e65f1],1
  42ebed:	jb     0x42ebc9
  42ebef:	sbb    ch,ah
  42ebf1:	mov    al,ds:0x8303a900
  42ebf6:	in     al,dx
  42ebf7:	add    al,0x0
  42ebf9:	xchg   esp,eax
  42ebfa:	hlt    
  42ebfb:	jno    0x75281070
  42ec01:	cs ins BYTE PTR es:[di],dx
  42ec04:	outs   dx,BYTE PTR ds:[esi]
  42ec05:	sbb    dh,BYTE PTR [bp+di]
  42ec08:	(bad)  
  42ec09:	jnp    0x42eba7
  42ec0b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ec0c:	add    ebx,DWORD PTR [eax-0xc93fc0c]
  42ec12:	dec    edx
  42ec13:	and    esi,DWORD PTR [ebp+0x17]
  42ec16:	inc    ecx
  42ec17:	xchg   esp,eax
  42ec18:	pop    ss
  42ec19:	add    ch,dh
  42ec1b:	fcom   DWORD PTR [eax-0x3f]
  42ec1e:	mov    bl,0x76
  42ec20:	push   0xe9009504
  42ec25:	mov    dl,BYTE PTR [ebp+0x14]
  42ec28:	dec    eax
  42ec29:	in     al,dx
  42ec2a:	jecxz  0x42ebe9
  42ec2c:	call   0xe847ffb9
  42ec31:	add    edx,DWORD PTR [edi+esi*2+0x4421c2a]
  42ec38:	jmp    0xd36ff0a
  42ec3d:	or     al,0xc7
  42ec3f:	imul   edx,DWORD PTR [eax+eiz*1-0x74],0x7c203c69
  42ec47:	imul   esi,DWORD PTR [eax+eiz*1],0xeb1d27c
  42ec4e:	pop    eax
  42ec4f:	adc    al,0x29
  42ec51:	add    al,0x13
  42ec53:	push   0x691f6c39
  42ec58:	cdq    
  42ec59:	je     0x42ec6d
  42ec5b:	inc    ecx
  42ec5c:	xor    esi,edx
  42ec5e:	icebp  
  42ec5f:	psubsw mm1,mm5
  42ec62:	adc    dh,ah
  42ec64:	int3   
  42ec65:	or     eax,edi
  42ec67:	imul   esi,esp,0xff697c1f
  42ec6d:	cld    
  42ec6e:	mov    bl,0x8
  42ec70:	sti    
  42ec71:	cmc    
  42ec72:	stos   DWORD PTR es:[edi],eax
  42ec73:	or     BYTE PTR [edx+0x66],dl
  42ec76:	xchg   edx,eax
  42ec77:	lods   al,BYTE PTR ds:[esi]
  42ec78:	adc    ebp,DWORD PTR [ecx-0x41087e69]
  42ec7e:	add    BYTE PTR [edi-0x13],bh
  42ec81:	cli    
  42ec82:	dec    esi
  42ec83:	pusha  
  42ec84:	add    dl,0xa6
  42ec87:	leave  
  42ec88:	stos   BYTE PTR es:[edi],al
  42ec89:	psubsw mm1,mm2
  42ec8c:	sub    ebx,0x7f41c9f
  42ec92:	xchg   esi,eax
  42ec93:	inc    eax
  42ec94:	hlt    
  42ec95:	pop    ss
  42ec96:	es mov dl,0xc
  42ec99:	sti    
  42ec9a:	xchg   esp,eax
  42ec9b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ec9c:	gs je  0x42ec84
  42ec9f:	loope  0x42ed06
  42eca1:	adc    al,0xe9
  42eca3:	call   0xe7ce:0x1f71ffc0
  42ecaa:	mov    bl,0x20
  42ecac:	data16 cli 
  42ecae:	(bad)  
  42ecaf:	ror    dl,1
  42ecb1:	pop    ecx
  42ecb2:	mov    ebp,ss
  42ecb4:	adc    eax,DWORD PTR [eax]
  42ecb6:	cmp    al,0x3
  42ecb8:	pop    esp
  42ecb9:	push   ecx
  42ecba:	jb     0x42ed39
  42ecbc:	add    BYTE PTR [ebx-0x2a],dl
  42ecbf:	ins    DWORD PTR es:[edi],dx
  42ecc0:	adc    bl,bh
  42ecc2:	push   esp
  42ecc3:	mov    WORD PTR [ebx+0x74],gs
  42ecc6:	(bad)  
  42ecc8:	in     al,dx
  42ecc9:	or     edx,DWORD PTR [edi]
  42eccb:	out    0xc,eax
  42eccd:	inc    esp
  42ecce:	fcom   QWORD PTR [edi+0x68]
  42ecd1:	test   DWORD PTR [ecx-0x59e59f91],esi
  42ecd7:	(bad)  
  42ecd8:	push   0xffffff86
  42ecda:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ecdb:	addr16 retf 0xab5c
  42ecdf:	mov    WORD PTR [eax],es
  42ece1:	push   ebp
  42ece2:	bound  eax,QWORD PTR [eax]
  42ece4:	mov    ah,0xe6
  42ece6:	jmp    0x42ece8
  42ece8:	dec    ebp
  42ece9:	dec    edx
  42ecea:	dec    ebp
  42eceb:	mov    ebx,eax
  42eced:	add    edx,DWORD PTR ds:0xee2efd40
  42ecf3:	push   0xfffff87a
  42ecf8:	out    0xf2,eax
  42ecfa:	push   eax
  42ecfb:	jmp    eax
  42ecfd:	imul   esp,DWORD PTR [ecx+eax*1+0x4a],0x9
  42ed02:	dec    esp
  42ed03:	adc    al,0x3d
  42ed05:	add    al,0x89
  42ed07:	inc    ebp
  42ed08:	pop    ecx
  42ed09:	jg     0x42ecfd
  42ed0b:	add    DWORD PTR [ecx],esp
  42ed0d:	pop    ds
  42ed0e:	add    DWORD PTR [ebp-0x77],0x53
  42ed12:	pop    eax
  42ed13:	leave  
  42ed14:	jg     0x42ed0e
  42ed16:	inc    DWORD PTR [edx+0x740cdff8]
  42ed1c:	pushf  
  42ed1d:	add    DWORD PTR [ebx-0x20],0xf013f2ed
  42ed24:	mov    eax,ds:0xf08cfa43
  42ed29:	jecxz  0x42ed75
  42ed2b:	inc    eax
  42ed2d:	push   ebx
  42ed2e:	push   cs
  42ed2f:	inc    eax
  42ed30:	jge    0x42ed77
  42ed32:	call   DWORD PTR [ebp+0x23]
  42ed35:	dec    ecx
  42ed36:	mov    eax,DWORD PTR [ebp+0x4d]
  42ed39:	push   ebx
  42ed3a:	cmc    
  42ed3b:	xlat   BYTE PTR ds:[ebx]
  42ed3c:	lock ret 
  42ed3e:	jae    0x42ed17
  42ed40:	push   esi
  42ed41:	lods   al,BYTE PTR ds:[esi]
  42ed42:	cmc    
  42ed43:	je     0x42ecd6
  42ed45:	clc    
  42ed46:	not    BYTE PTR ds:0x400d4100
  42ed4c:	add    BYTE PTR [edx],bl
  42ed4e:	sbb    BYTE PTR [eax-0x90382ee],ah
  42ed54:	je     0x42ece7
  42ed56:	clc    
  42ed57:	popa   
  42ed58:	add    BYTE PTR [ebp+0x2d0ffffc],ah
  42ed5e:	repnz adc ebp,esp
  42ed61:	xchg   esp,eax
  42ed62:	push   0x9910ffbe
  42ed67:	repnz push es
  42ed69:	les    edi,FWORD PTR [esi+0x17]
  42ed6c:	mov    al,ds:0xb0041986
  42ed71:	xchg   ebp,eax
  42ed72:	add    BYTE PTR [esi+ebp*1],0xd4
  42ed76:	call   0x7e5a:0xf2690002
  42ed7d:	call   0x1f94beea
  42ed82:	add    al,0xdc
  42ed84:	andps  xmm3,XMMWORD PTR [ecx+0x31]
  42ed88:	xlat   BYTE PTR ds:[ebx]
  42ed89:	inc    edi
  42ed8a:	in     al,dx
  42ed8b:	(bad)  
  42ed8c:	test   DWORD PTR [edx+ecx*4-0x24],0xd18a6703
  42ed94:	cli    
  42ed95:	inc    ecx
  42ed96:	popa   
  42ed97:	jbe    0x42edf5
  42ed99:	ret    
  42ed9a:	nop
  42ed9b:	add    eax,DWORD PTR [eax]
  42ed9d:	xchg   esp,eax
  42ed9e:	fldcw  WORD PTR [ebp-0x2f]
  42eda1:	sbb    DWORD PTR [ecx],ebx
  42eda3:	clc    
  42eda4:	dec    esi
  42eda5:	inc    ebx
  42eda6:	loop   0x42edd7
  42eda8:	je     0x42ed2e
  42edaa:	cdq    
  42edab:	dec    BYTE PTR [eax-0x238ec700]
  42edb1:	add    edx,DWORD PTR [ebx-0x6f9a051b]
  42edb7:	or     DWORD PTR [eax],0xf8de6c58
  42edbd:	cli    
  42edbe:	jnp    0x42ed95
  42edc0:	ret    0xc4ef
  42edc3:	fadd   st(2),st
  42edc5:	repz les ebp,FWORD PTR [edx]
  42edc8:	(bad)  
  42edca:	(bad)  
  42edcb:	or     dl,ch
  42edcd:	cli    
  42edce:	loope  0x42ee23
  42edd0:	outs   dx,DWORD PTR ds:[esi]
  42edd1:	je     0x42ee1f
  42edd3:	scas   eax,DWORD PTR es:[edi]
  42edd4:	push   ebp
  42edd5:	test   BYTE PTR [ebp+ebp*1-0x3],dl
  42edd9:	cli    
  42edda:	leave  
  42eddb:	add    BYTE PTR [ebp+0x1b826671],bl
  42ede1:	je     0x42ed77
  42ede3:	in     al,dx
  42ede4:	fnsave [eax-0x30]
  42ede7:	clc    
  42ede8:	gs out dx,eax
  42edea:	fdivr  st(6),st
  42eded:	inc    esp
  42edee:	xor    bh,ch
  42edf0:	mov    ds:0x72000ec7,al
  42edf5:	test   DWORD PTR [ebx],0x19d19166
  42edfb:	mov    esp,0x3762d261
  42ee00:	es cld 
  42ee02:	repz int3 
  42ee04:	arpl   ax,sp
  42ee06:	mov    bh,0x74
  42ee08:	addr16 pusha 
  42ee0a:	rol    DWORD PTR [edx],cl
  42ee0c:	jmp    0x92113914
  42ee11:	xor    al,0x0
  42ee13:	aam    0x73
  42ee15:	arpl   WORD PTR [eax-0x2cd69a38],bp
  42ee1b:	push   ebx
  42ee1c:	ror    BYTE PTR [esi+0x3e326427],1
  42ee22:	jno    0x42edac
  42ee24:	shl    ch,1
  42ee26:	ret    
  42ee27:	stos   DWORD PTR es:[edi],eax
  42ee28:	jl     0x42ee52
  42ee2a:	div    DWORD PTR [edx]
  42ee2c:	jns    0x42ede9
  42ee2e:	iret   
  42ee2f:	mov    al,al
  42ee31:	call   0xf3df06b4
  42ee36:	jo     0x42edc6
  42ee38:	shr    cl,1
  42ee3a:	pop    ecx
  42ee3b:	sbb    ah,BYTE PTR [ebx]
  42ee3d:	fst    DWORD PTR [edx]
  42ee3f:	aam    0x0
  42ee41:	into   
  42ee42:	sub    BYTE PTR [ecx],ah
  42ee44:	jnp    0x42edd2
  42ee46:	outs   dx,BYTE PTR ds:[esi]
  42ee47:	outs   dx,BYTE PTR ds:[esi]
  42ee48:	cmp    BYTE PTR gs:[ecx-0x78],dh
  42ee4c:	in     al,0xd5
  42ee4e:	ret    
  42ee4f:	pop    ebx
  42ee50:	je     0x42eeb5
  42ee52:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ee53:	push   eax
  42ee54:	push   DWORD PTR gs:[ebp+0x59146a67]
  42ee5b:	test   al,0xc0
  42ee5d:	jmp    FWORD PTR [ebx-0x29]
  42ee60:	icebp  
  42ee61:	cmp    DWORD PTR [edx+ebx*1-0x5f],ebp
  42ee65:	cld    
  42ee66:	xchg   esi,eax
  42ee67:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ee68:	mov    ch,0xfa
  42ee6a:	mov    bh,0x41
  42ee6c:	loope  0x42edfa
  42ee6e:	sub    al,0xf4
  42ee70:	mov    ah,0x8c
  42ee72:	cmp    esp,DWORD PTR fs:[edx+edi*8+0x76]
  42ee77:	add    bh,ah
  42ee79:	imul   edx,edx,0xc1f15764
  42ee7f:	iret   
  42ee80:	adc    ah,ah
  42ee82:	mov    edi,0xfb0deae2
  42ee87:	fdiv   st(3),st
  42ee89:	adc    eax,0xbc5ec7c0
  42ee8e:	or     esi,DWORD PTR [edx+edx*8-0x5c]
  42ee92:	dec    edi
  42ee93:	ds stos BYTE PTR es:[edi],al
  42ee95:	call   0x7bda97ab
  42ee9a:	mov    edi,0x959bb4
  42ee9f:	adc    bh,BYTE PTR [ecx-0x55e1f026]
  42eea5:	call   0x6498a191
  42eeaa:	cli    
  42eeab:	scas   al,BYTE PTR es:[edi]
  42eeac:	lds    edi,FWORD PTR [edx-0x42]
  42eeaf:	mov    ds:0x30733c10,al
  42eeb4:	fcos   
  42eeb6:	call   FWORD PTR [ebx-0x27fa7f8]
  42eebc:	xchg   edx,eax
  42eebd:	add    DWORD PTR [eax],eax
  42eebf:	jmp    0x5395c12a
  42eec4:	mov    BYTE PTR [edi+0x74],ah
  42eec7:	loope  0x42eeb7
  42eec9:	dec    eax
  42eeca:	mov    WORD PTR [eax+ebp*8],ds
  42eecd:	shl    bh,1
  42eecf:	add    bh,dl
  42eed1:	sar    ebx,0xff
  42eed4:	dec    esp
  42eed5:	cmp    edx,ebp
  42eed7:	dec    sp
  42eed9:	cmp    esi,ebp
  42eedb:	rol    DWORD PTR [eax],0x55
  42eede:	or     eax,0xea68315e
  42eee3:	sub    edi,edi
  42eee5:	dec    esi
  42eee6:	and    eax,0x48b7c02a
  42eeeb:	add    ecx,DWORD PTR [edi*1+0x6df80b4c]
  42eef2:	jg     0x42eee6
  42eef4:	add    al,0x2
  42eef6:	cmp    al,0xbd
  42eef8:	inc    ecx
  42eef9:	jle    0x42eed0
  42eefb:	add    dh,BYTE PTR [edx+0x16]
  42eefe:	push   ss
  42eeff:	jge    0x42ef11
  42ef01:	fstp   DWORD PTR [eax]
  42ef03:	div    DWORD PTR [ebp-0x13]
  42ef06:	add    BYTE PTR [ebx-0xa2cbc18],0x89
  42ef0d:	adc    ch,al
  42ef0f:	clc    
  42ef10:	call   DWORD PTR [edx-0x3c]
  42ef13:	es xor al,0x92
  42ef16:	shl    DWORD PTR [eax+edx*1+0x27],cl
  42ef1a:	xor    DWORD PTR [ebx-0x10],0xfee27960
  42ef21:	jb     0x42eef6
  42ef23:	loop   0x42ef8e
  42ef25:	leave  
  42ef26:	shl    ch,cl
  42ef28:	cmovnp edi,DWORD PTR [ecx]
  42ef2b:	push   cs
  42ef2c:	sub    edi,DWORD PTR [edx+0x68]
  42ef2f:	push   ds
  42ef30:	dec    eax
  42ef31:	sbb    DWORD PTR [ebx+0x42],esp
  42ef34:	jne    0x42efa9
  42ef36:	xchg   edi,eax
  42ef37:	mov    ss,WORD PTR [ebp+edi*1-0x69f89e01]
  42ef3e:	sti    
  42ef3f:	mov    bh,0xa4
  42ef41:	add    cl,bh
  42ef43:	aas    
  42ef44:	cli    
  42ef45:	imul   edi,DWORD PTR [ebx+0x32],0x92948b4a
  42ef4c:	jne    0x42ef3c
  42ef4e:	ins    BYTE PTR es:[edi],dx
  42ef4f:	jp     0x42ef47
  42ef51:	stc    
  42ef52:	pop    ebx
  42ef53:	in     al,dx
  42ef54:	or     dh,BYTE PTR [edi-0x42]
  42ef57:	adc    edi,ecx
  42ef59:	mov    ecx,ss
  42ef5b:	test   eax,0x15a9face
  42ef60:	adc    al,BYTE PTR [eax-0x6c]
  42ef63:	mov    edx,0x975d56c9
  42ef68:	push   cs
  42ef69:	add    BYTE PTR [esi-0x3bd829a3],bh
  42ef6f:	push   ss
  42ef70:	add    al,0xe8
  42ef72:	(bad)  
  42ef75:	add    bh,al
  42ef77:	jmp    0x42ef9c
  42ef79:	jne    0x42ef83
  42ef7b:	faddp  st(0),st
  42ef7d:	cmp    edx,DWORD PTR [edi+0x4cb2f997]
  42ef83:	gs jg  0x42efd1
  42ef86:	xchg   ebp,eax
  42ef87:	add    ebx,edi
  42ef89:	mov    dl,0x54
  42ef8b:	push   ebx
  42ef8c:	in     al,0x84
  42ef8e:	aam    0x4c
  42ef90:	sbb    eax,0xe49a9666
  42ef95:	ss int3 
  42ef97:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ef98:	add    eax,0xfd8d4587
  42ef9d:	in     eax,dx
  42ef9e:	or     eax,0x45fa62ac
  42efa3:	inc    ecx
  42efa4:	aam    0xfa
  42efa6:	add    BYTE PTR [ecx-0x6bbfebf3],cl
  42efac:	aam    0x3e
  42efae:	jae    0x42ef49
  42efb0:	inc    esi
  42efb1:	je     0x42ef3b
  42efb3:	and    ebp,esi
  42efb5:	jge    0x42f003
  42efb7:	nop
  42efb8:	arpl   WORD PTR [eax-0x3f],di
  42efbb:	jg     0x42f01a
  42efbd:	sub    eax,0x7616d4c0
  42efc2:	fs ins BYTE PTR es:[edi],dx
  42efc4:	add    DWORD PTR [esi-0x41],esp
  42efc7:	outs   dx,DWORD PTR ds:[esi]
  42efc8:	bound  edx,QWORD PTR ds:0x552d7344
  42efce:	add    al,0x94
  42efd0:	cmp    eax,0x8ec143e
  42efd5:	sbb    ecx,eax
  42efd7:	push   ebx
  42efd8:	pop    edx
  42efd9:	int3   
  42efda:	jmp    0xc7a0522a
  42efdf:	xchg   ebx,eax
  42efe0:	jne    0x42ef98
  42efe2:	jns    0x42ef9c
  42efe4:	clc    
  42efe5:	gs out 0x2f,eax
  42efe8:	add    DWORD PTR [esi-0x2d],ebp
  42efeb:	outs   dx,DWORD PTR ds:[esi]
  42efec:	jge    0x42f042
  42efee:	cli    
  42efef:	test   DWORD PTR [eax],0xf19403e9
  42eff5:	ins    BYTE PTR es:[edi],dx
  42eff6:	mov    ss,WORD PTR [ebx]
  42eff8:	(bad)  
  42eff9:	call   0x493a1f76
  42effe:	add    al,0x94
  42f000:	add    BYTE PTR [eax-0x31],ah
  42f003:	mov    edi,DWORD PTR [ebx+0x3d]
  42f006:	std    
  42f007:	pop    ss
  42f008:	jne    0x42eff2
  42f00a:	add    eax,DWORD PTR [eax]
  42f00c:	xchg   esp,eax
  42f00d:	jne    0x42efc2
  42f00f:	jmp    edx
  42f011:	dec    eax
  42f012:	pop    edi
  42f013:	iret   
  42f014:	xchg   ebx,eax
  42f015:	jae    0x42effb
  42f017:	add    al,bh
  42f019:	dec    eax
  42f01a:	fld    QWORD PTR [ebx-0x56]
  42f01d:	cmp    eax,0x2c99d85d
  42f022:	(bad)  
  42f023:	jno    0x42f097
  42f025:	outs   dx,WORD PTR ds:[esi]
  42f027:	out    dx,eax
  42f028:	lahf   
  42f029:	jne    0x42efe6
  42f02b:	adc    ebp,DWORD PTR [ebx-0x3c30a0b8]
  42f031:	jge    0x42f000
  42f033:	add    esp,DWORD PTR [eax]
  42f035:	int3   
  42f036:	ins    DWORD PTR es:[edi],dx
  42f037:	rcl    DWORD PTR [edi-0x6040183],1
  42f03d:	mov    ecx,0x696e63ff
  42f042:	sar    dh,1
  42f044:	(bad)  
  42f045:	in     al,0xf
  42f047:	push   0x7a
  42f049:	pop    ebp
  42f04a:	push   DWORD PTR [ecx+0x42]
  42f04d:	pop    ebp
  42f04e:	ss mov esi,0x960b2d64
  42f054:	inc    ebx
  42f055:	mov    dl,0x7
  42f057:	dec    edi
  42f058:	sbb    esi,DWORD PTR [ebx]
  42f05a:	jae    0x42f060
  42f05c:	pop    ss
  42f05d:	inc    ebx
  42f05e:	cli    
  42f05f:	out    0x97,al
  42f061:	add    bh,bh
  42f063:	fst    DWORD PTR [edi+ecx*2-0x2ccfc3ca]
  42f06a:	adc    DWORD PTR [edi+edx*8-0x13],esp
  42f06e:	add    edx,edx
  42f070:	add    bh,al
  42f072:	out    dx,al
  42f073:	or     DWORD PTR [edx+0x2a],esp
  42f076:	cmc    
  42f077:	sub    bl,al
  42f079:	mov    WORD PTR [ebx],gs
  42f07b:	(bad)  
  42f07c:	jle    0x42f00c
  42f07e:	sub    eax,DWORD PTR [edi+0x4465a7f4]
  42f084:	test   DWORD PTR [esp+edi*1-0x2],ebx
  42f088:	rcr    DWORD PTR [ebx+0x2a6aa359],0x65
  42f08f:	cli    
  42f090:	cdq    
  42f091:	xchg   esi,eax
  42f092:	pop    ecx
  42f093:	or     al,0x1a
  42f095:	push   eax
  42f096:	and    DWORD PTR [edi+0x7e58ba72],edi
  42f09c:	lods   al,BYTE PTR ds:[esi]
  42f09d:	cmp    esp,DWORD PTR [esi+0x2d]
  42f0a0:	sub    DWORD PTR [edi-0x20],ebx
  42f0a3:	jbe    0x42f08e
  42f0a5:	xchg   edi,eax
  42f0a6:	mov    ds:0xccde90b,al
  42f0ab:	push   0x21c7a1
  42f0b0:	add    DWORD PTR [eax+0x1ce8ffe9],ecx
  42f0b6:	jo     0x42f0e6
  42f0b8:	add    BYTE PTR [esi+0x6fc5bda],dh
  42f0be:	inc    esi
  42f0bf:	mov    ecx,DWORD PTR ss:[ecx]
  42f0c2:	adc    al,0x50
  42f0c4:	mov    BYTE PTR [eax],cl
  42f0c6:	in     eax,0x64
  42f0c8:	inc    eax
  42f0c9:	lds    eax,FWORD PTR [eax+esi*1]
  42f0cc:	add    BYTE PTR [ebp+0x33],bh
  42f0cf:	dec    ecx
  42f0d0:	inc    eax
  42f0d2:	pop    esp
  42f0d3:	cmc    
  42f0d4:	adc    eax,0x3ff6cd00
  42f0d9:	add    ah,al
  42f0db:	inc    ecx
  42f0dc:	fidivr DWORD PTR [ebx]
  42f0de:	(bad)  
  42f0df:	push   eax
  42f0e0:	push   ecx
  42f0e1:	push   edi
  42f0e2:	mov    ds:0xe8cb9cbc,eax
  42f0e7:	jmp    0x42f06a
  42f0e9:	enter  0x99a4,0xd6
  42f0ed:	cmp    esp,esi
  42f0ef:	push   eax
  42f0f0:	das    
  42f0f1:	push   ebx
  42f0f2:	pop    esi
  42f0f3:	xor    al,BYTE PTR [ecx-0x2b42f2ab]
  42f0f9:	(bad)  
  42f0fa:	sbb    ch,ah
  42f0fc:	jle    0x42f0be
  42f0fe:	add    DWORD PTR [esi],ecx
  42f100:	dec    ebx
  42f101:	push   edi
  42f102:	mov    dl,BYTE PTR [ecx-0x2a]
  42f105:	inc    DWORD PTR [eax]
  42f107:	in     al,0xf5
  42f109:	jne    0x42f0f0
  42f10b:	jmp    0xf6fa:0x43ef9413
  42f112:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f113:	xadd   bh,dh
  42f116:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f117:	fadd   QWORD PTR [ebx-0x19]
  42f11a:	pop    edx
  42f11b:	push   ecx
  42f11c:	(bad)  
  42f11d:	call   0x3f0f79
  42f122:	lds    ecx,FWORD PTR [eax-0x23]
  42f125:	jne    0x42f107
  42f127:	cmp    edi,edx
  42f129:	jg     0x42f0e8
  42f12b:	add    ecx,DWORD PTR [ebx-0x1]
  42f12e:	add    ah,ah
  42f130:	cmc    
  42f131:	jne    0x42f0c7
  42f133:	popa   
  42f134:	gs adc al,0xc8
  42f137:	pop    ebx
  42f138:	mov    esi,0xa41c00ff
  42f13d:	pop    esi
  42f13e:	jle    0x42f119
  42f140:	pop    ebp
  42f141:	gs xchg cl,bl
  42f144:	or     DWORD PTR [ebx+0xc],ebx
  42f147:	(bad)  
  42f148:	sub    esp,eax
  42f14a:	mov    esi,0x7e5bcc1f
  42f14f:	fnstcw WORD PTR ds:0x41542e65
  42f155:	mov    ah,0x75
  42f157:	xchg   esp,eax
  42f158:	imul   eax,DWORD PTR [ebx+eax*1-0x6c],0x9c680bb3
  42f160:	stc    
  42f161:	ret    0x3bff
  42f164:	shr    ecx,0xff
  42f167:	cmp    esp,edx
  42f169:	imul   edi,DWORD PTR [esi-0x47],0xffffffa5
  42f16d:	inc    BYTE PTR [esi-0x3cfec22d]
  42f173:	pop    ss
  42f174:	cmp    DWORD PTR [esi-0x7a],0x7370e464
  42f17b:	jne    0x42f167
  42f17d:	out    0x3,al
  42f17f:	mov    al,ds:0xafec957
  42f184:	loopne 0x42f175
  42f186:	xlat   BYTE PTR ds:[ebx]
  42f187:	pop    ss
  42f188:	scas   eax,DWORD PTR es:[edi]
  42f189:	(bad)  
  42f18a:	jae    0x42f1d1
  42f18c:	rol    al,cl
  42f18e:	or     edx,DWORD PTR [edi+0x49facf26]
  42f194:	popa   
  42f195:	jnp    0x42f1db
  42f197:	hlt    
  42f198:	jecxz  0x42f1d8
  42f19a:	jae    0x42f200
  42f19c:	ror    BYTE PTR [eax],cl
  42f19e:	inc    DWORD PTR [eax]
  42f1a0:	jmp    0x7c2e:0x970fc0d1
  42f1a7:	inc    esp
  42f1a8:	mov    al,0xdf
  42f1aa:	(bad)  
  42f1ab:	fistp  DWORD PTR [edi]
  42f1ad:	add    dh,ah
  42f1af:	sub    bl,0xd3
  42f1b2:	shr    esp,0x96
  42f1b5:	and    eax,0x5e9b6a12
  42f1ba:	std    
  42f1bb:	call   DWORD PTR [ebx-0x76bc9ab9]
  42f1c1:	into   
  42f1c2:	stc    
  42f1c3:	out    dx,eax
  42f1c4:	arpl   WORD PTR [esi-0x65],bx
  42f1c7:	not    DWORD PTR [eax]
  42f1c9:	inc    ecx
  42f1ca:	je     0x42f1f1
  42f1cc:	sbb    ecx,esp
  42f1ce:	int3   
  42f1cf:	jnp    0x42f165
  42f1d1:	and    DWORD PTR [ebp-0x333c1d00],0x65317300
  42f1db:	inc    edx
  42f1dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f1dd:	imul   ecx,DWORD PTR [ecx-0x46a3277b],0xe36994b4
  42f1e7:	xor    al,0x54
  42f1e9:	shl    DWORD PTR [ebp+0x6568b87d],0xb7
  42f1f0:	das    
  42f1f1:	pop    esi
  42f1f2:	(bad)  
  42f1f3:	inc    ebx
  42f1f4:	cmp    esi,ebp
  42f1f6:	push   cs
  42f1f7:	add    al,0x94
  42f1f9:	inc    edx
  42f1fa:	loopne 0x42f1ff
  42f1fc:	jp     0x42f1f6
  42f1fe:	adc    BYTE PTR [esi+ebx*2-0x3f],ch
  42f202:	call   0xd81bf262
  42f207:	call   0x607c9d0f
  42f20c:	(bad)  
  42f20d:	test   BYTE PTR [edi-0x3fed983d],0x1c
  42f214:	jge    0x42f21d
  42f216:	or     DWORD PTR [ecx+0x4],ebp
  42f219:	xchg   esp,eax
  42f21a:	add    BYTE PTR [esi],cl
  42f21c:	push   ebp
  42f21d:	inc    ebp
  42f21e:	mov    al,0x65
  42f220:	test   al,0x93
  42f222:	test   al,ch
  42f224:	add    edx,DWORD PTR [esp+esi*8-0x732a4101]
  42f22b:	xor    esp,ebx
  42f22d:	cs aam 0xd7
  42f230:	jb     0x42f1c8
  42f232:	adc    eax,0x8b7195bf
  42f237:	cmp    esp,ecx
  42f239:	sbb    BYTE PTR [edi-0x772915f1],bh
  42f23f:	inc    esp
  42f240:	and    eax,0xc0dfdd0f
  42f245:	mov    esp,ss
  42f247:	pop    ss
  42f248:	bound  ecx,QWORD PTR [ebx+0x5]
  42f24b:	aaa    
  42f24c:	fld    DWORD PTR [edx+0x6c3c8708]
  42f252:	mov    BYTE PTR [edi],cl
  42f254:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f255:	and    ah,BYTE PTR [edx+0x0]
  42f258:	push   0xffffffd4
  42f25a:	add    DWORD PTR [edi-0x57],edi
  42f25d:	push   ebx
  42f25e:	data16 fldcw WORD PTR [edx-0x2b]
  42f262:	icebp  
  42f263:	out    0xb1,al
  42f265:	mov    BYTE PTR [eax+0x3f],al
  42f268:	stos   BYTE PTR es:[edi],al
  42f269:	add    BYTE PTR [eax-0xd58181c],bh
  42f26f:	popa   
  42f270:	jmp    FWORD PTR [ecx-0x1e]
  42f273:	pop    eax
  42f274:	cli    
  42f275:	jae    0x42f259
  42f277:	popa   
  42f278:	out    0x7a,eax
  42f27a:	cs pop ebp
  42f27c:	cli    
  42f27d:	stos   DWORD PTR es:[edi],eax
  42f27e:	minps  xmm2,XMMWORD PTR [ebx+0x72]
  42f282:	arpl   si,bx
  42f284:	jmp    0x42f23f
  42f286:	add    DWORD PTR ds:0x88c7a880,0xc571794c
  42f290:	std    
  42f291:	cmc    
  42f292:	and    al,0x1d
  42f294:	add    dh,BYTE PTR [esi+0x6102e30e]
  42f29a:	and    dl,BYTE PTR [eax+0x58]
  42f29d:	push   esi
  42f29e:	ds or  eax,0x0
  42f2a2:	out    0xff,eax
  42f2a4:	mov    WORD PTR [ebp-0x63],?
  42f2a7:	iret   
  42f2a8:	out    0x88,eax
  42f2aa:	call   0xb5887481
  42f2af:	fld    DWORD PTR [ebx-0xd]
  42f2b2:	and    BYTE PTR [esi-0x3f41af16],bl
  42f2b8:	loop   0x42f265
  42f2ba:	mov    ah,dh
  42f2bc:	cmc    
  42f2bd:	test   BYTE PTR [ebp+0x7de77e58],bh
  42f2c3:	add    BYTE PTR [eax],al
  42f2c5:	lea    edi,[eax]
  42f2c7:	mov    al,0x49
  42f2c9:	xor    ah,BYTE PTR [esi+0xf843d6]
  42f2cf:	mov    edx,0x7d10ea9a
  42f2d4:	add    BYTE PTR [eax],al
  42f2d6:	mov    edi,DWORD PTR [eax-0x8ff7b14]
  42f2dc:	sbb    al,0xbb
  42f2de:	call   0x80b24f1c
  42f2e3:	pop    esp
  42f2e4:	push   esp
  42f2e5:	add    BYTE PTR [ebp+0x2],0x85
  42f2e9:	mov    edi,0x7ac03f61
  42f2ee:	jge    0x42f2f2
  42f2f0:	addr16 jo 0x42f303
  42f2f3:	mov    ebp,0x32b6f541
  42f2f8:	scas   al,BYTE PTR es:[edi]
  42f2f9:	mov    edi,0x55569799
  42f2fe:	mul    DWORD PTR [edx]
  42f300:	fidivr DWORD PTR [eax+esi*1]
  42f303:	add    ch,BYTE PTR [esi-0x22d10137]
  42f309:	push   es
  42f30a:	xor    dh,BYTE PTR [edi+0x31]
  42f30d:	cmc    
  42f30e:	bts    DWORD PTR [edi],edx
  42f311:	stc    
  42f312:	ret    
  42f313:	lock xor BYTE PTR gs:[ebp+ebp*4-0x6bf0fdb0],al
  42f31c:	jnp    0x42f354
  42f31e:	xchg   DWORD PTR [eax-0x34419e08],ebx
  42f324:	lods   al,BYTE PTR ds:[esi]
  42f325:	data16 cli 
  42f327:	push   ecx
  42f328:	sbb    ecx,esi
  42f32a:	stos   DWORD PTR es:[edi],eax
  42f32b:	mov    ebx,ebx
  42f32d:	rcr    DWORD PTR ds:[eax+0x871459],0x51
  42f335:	push   ecx
  42f336:	fadd   DWORD PTR [ecx]
  42f338:	addr16 pop ss
  42f33a:	ret    
  42f33b:	repnz mov ds:0x4a0a3ef3,eax
  42f341:	push   ds
  42f342:	dec    ecx
  42f344:	adc    edi,esi
  42f346:	lock push es
  42f348:	pop    ebx
  42f349:	push   0x699474f0
  42f34e:	jle    0x42f30e
  42f350:	xchg   esi,eax
  42f351:	dec    ch
  42f353:	xchg   cl,dl
  42f355:	push   ecx
  42f356:	fadd   DWORD PTR [edi+eiz*4]
  42f359:	xchg   edi,eax
  42f35a:	shl    edx,0x63
  42f35d:	in     al,dx
  42f35e:	push   eax
  42f35f:	je     0x42f2fd
  42f361:	mov    ds:0xbfbd5e03,al
  42f366:	add    esp,edi
  42f368:	jge    0x42f338
  42f36a:	mov    edi,0xef65ec07
  42f36f:	push   es
  42f370:	pop    ebx
  42f371:	push   0xf2b269db
  42f376:	cmp    DWORD PTR [esi+0x66186e98],0xffffff97
  42f37d:	ss push eax
  42f37f:	pop    edx
  42f380:	or     esi,DWORD PTR [edx+0x7f]
  42f383:	int    0x81
  42f385:	push   ecx
  42f386:	cmp    DWORD PTR [eax],eax
  42f388:	jae    0x42f3e1
  42f38a:	fcos   
  42f38c:	out    dx,al
  42f38d:	cmp    al,0x6c
  42f38f:	inc    esp
  42f390:	pushf  
  42f391:	push   0xffd307ef
  42f396:	out    0xd5,eax
  42f398:	add    BYTE PTR [eax-0x2c],bh
  42f39b:	call   0xe78688fa
  42f3a0:	loop   0x42f3e0
  42f3a2:	in     eax,dx
  42f3a3:	call   0xf241fe2b
  42f3a8:	lods   eax,DWORD PTR ds:[esi]
  42f3a9:	add    al,BYTE PTR [edx-0x1c]
  42f3ac:	xor    edx,DWORD PTR [esi+eax*4+0x494eca25]
  42f3b3:	jmp    FWORD PTR es:[ebx+0x22576db3]
  42f3ba:	ins    BYTE PTR es:[edi],dx
  42f3bb:	mov    eax,0xab8d46cd
  42f3c0:	pop    ebx
  42f3c1:	jecxz  0x42f42b
  42f3c3:	ins    BYTE PTR es:[edi],dx
  42f3c4:	dec    BYTE PTR [ebx+0x7436c5a]
  42f3ca:	push   es
  42f3cb:	inc    ecx
  42f3cc:	dec    edx
  42f3cd:	xchg   esi,eax
  42f3ce:	add    cl,ch
  42f3d0:	(bad)  [ebx+eax*8-0x746e0e00]
  42f3d7:	sub    ebx,DWORD PTR [ebx+edx*8+0x59]
  42f3db:	repz jg 0x42f367
  42f3de:	shr    al,0x5b
  42f3e1:	adc    ecx,edx
  42f3e3:	leave  
  42f3e4:	gs retf 0xc0e3
  42f3e8:	add    al,0xd
  42f3ea:	les    edi,FWORD PTR [ebp+eiz*4+0x3e9045f]
  42f3f1:	mov    bl,0xdb
  42f3f3:	loopne 0x42f3f8
  42f3f5:	(bad)  
  42f3f6:	shl    eax,cl
  42f3f8:	mov    BYTE PTR fs:[eax-0xa],cl
  42f3fc:	ret    
  42f3fd:	add    BYTE PTR [ebx],bl
  42f3ff:	addr16 clc 
  42f401:	mov    BYTE PTR fs:[eax],cl
  42f404:	mov    cl,BYTE PTR [edi]
  42f406:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f407:	in     eax,dx
  42f408:	sub    BYTE PTR [ecx+eax*8],al
  42f40b:	(bad)  
  42f40c:	out    0x3,eax
  42f40e:	xchg   esp,eax
  42f40f:	sar    edi,cl
  42f411:	mov    dh,0x6c
  42f413:	(bad)  
  42f414:	sti    
  42f415:	mov    edx,0xeae79845
  42f41a:	xchg   edi,eax
  42f41b:	add    bl,dh
  42f41d:	pop    eax
  42f41e:	arpl   sp,ax
  42f420:	out    0x64,eax
  42f422:	ret    
  42f423:	test   eax,0x57d2414d
  42f428:	cli    
  42f429:	inc    esi
  42f42a:	cmp    esp,eax
  42f42c:	sti    
  42f42d:	gs push eax
  42f42f:	int    0x1a
  42f431:	vpcmpd k1{k7}{z},xmm7,XMMWORD PTR [eax+0x4f0],0xba
  42f439:	and    al,0x39
  42f43b:	(bad)  
  42f43d:	jmp    0xa18ae5ed
  42f442:	add    DWORD PTR ds:0x80ffa4fb,0x7c
  42f449:	add    eax,esp
  42f44b:	pop    edx
  42f44c:	cli    
  42f44d:	jmp    0x29706ed7
  42f452:	pop    ecx
  42f453:	mov    bh,0xc8
  42f455:	sub    ebp,DWORD PTR [eax+0x59]
  42f458:	stos   BYTE PTR es:[edi],al
  42f459:	call   0x7297441a
  42f45e:	ret    
  42f45f:	mov    al,0x4e
  42f461:	aas    
  42f462:	add    BYTE PTR [ecx-0x1f],ah
  42f465:	sub    esp,ebp
  42f467:	xchg   edi,eax
  42f468:	add    BYTE PTR [esi-0xf],ah
  42f46b:	mov    eax,0x5492e014
  42f470:	pop    ecx
  42f471:	sub    eax,0xfbbcae92
  42f476:	scas   al,BYTE PTR es:[edi]
  42f477:	call   0xef81:0x98290f04
  42f47e:	loop   0x42f424
  42f480:	push   es
  42f481:	test   BYTE PTR [edi+edx*4-0x4d9e0000],ch
  42f488:	lods   al,BYTE PTR ds:[esi]
  42f489:	verw   WORD PTR [ebp-0x61a9b4fc]
  42f490:	call   DWORD PTR ss:[edx+0x6a]
  42f494:	push   0x16
  42f496:	(bad)  
  42f497:	repz hlt 
  42f499:	(bad)  
  42f49a:	(bad)  
  42f49b:	in     eax,dx
  42f49c:	jecxz  0x42f511
  42f49e:	or     BYTE PTR [edx],bh
  42f4a0:	int3   
  42f4a1:	add    eax,0xffffffba
  42f4a4:	fcomp  DWORD PTR [ebx+0x4afcbd00]
  42f4aa:	push   esi
  42f4ab:	push   ds
  42f4ac:	aaa    
  42f4ad:	call   DWORD PTR [edx+0x7a]
  42f4b0:	push   0x16
  42f4b2:	push   eax
  42f4b4:	push   esp
  42f4b5:	cmc    
  42f4b6:	xlat   BYTE PTR ds:[ebx]
  42f4b7:	xor    BYTE PTR [ebp-0x2cd7bfb],bh
  42f4bd:	(bad)  
  42f4be:	(bad)  
  42f4bf:	jp     0x42f52b
  42f4c1:	push   ss
  42f4c2:	call   DWORD PTR [eax+0x400ab8]
  42f4c8:	jge    0x42f4a7
  42f4ca:	jo     0x42f4d4
  42f4cc:	push   es
  42f4cd:	pop    ds
  42f4ce:	pusha  
  42f4cf:	push   ss
  42f4d0:	sub    eax,0x495d8904
  42f4d5:	(bad)  
  42f4d7:	pop    ecx
  42f4d8:	neg    BYTE PTR [ebx]
  42f4da:	push   es
  42f4db:	mov    bh,0xb3
  42f4dd:	repnz out dx,al
  42f4df:	fldenv [ebp-0xef7b77b]
  42f4e5:	bnd jp 0x42f4d0
  42f4e8:	xor    BYTE PTR ds:[edi],al
  42f4eb:	and    DWORD PTR [ebp+0x59],0x73
  42f4ef:	adc    edi,esp
  42f4f1:	sbb    al,0xe3
  42f4f3:	or     BYTE PTR [edx+eax*2-0x7aca95e6],dh
  42f4fa:	pop    eax
  42f4fb:	and    al,0xd5
  42f4fd:	push   0xffffff87
  42f4ff:	inc    esi
  42f500:	sub    esi,ebx
  42f502:	scas   al,BYTE PTR es:[edi]
  42f503:	inc    esi
  42f504:	xchg   esp,eax
  42f505:	pop    edi
  42f506:	or     eax,0xd5d52ab
  42f50b:	stos   DWORD PTR es:[edi],eax
  42f50c:	aad    0xe0
  42f50e:	sbb    ch,0x93
  42f511:	push   0x44
  42f513:	shr    ah,0x6a
  42f516:	scas   al,BYTE PTR es:[edi]
  42f517:	cli    
  42f518:	ret    
  42f519:	loop   0x42f4fb
  42f51b:	or     edi,DWORD PTR ds:0xd13c5d0
  42f521:	cwde   
  42f522:	out    dx,al
  42f523:	ss iret 
  42f525:	xor    eax,0xc6838904
  42f52a:	fcom   DWORD PTR [edi]
  42f52c:	add    bl,al
  42f52e:	xchg   esp,eax
  42f52f:	repnz cli 
  42f531:	inc    ecx
  42f532:	cmp    DWORD PTR [ecx+0x694b351],esi
  42f538:	sti    
  42f539:	add    DWORD PTR ds:0xd0943ff4,0x2a5ffbc8
  42f543:	fadd   DWORD PTR [ebx]
  42f545:	iret   
  42f546:	repnz fcom DWORD PTR [ebx]
  42f549:	loop   0x42f54c
  42f54b:	rol    DWORD PTR gs:[ecx-0x67a2e302],0xcd
  42f553:	or     edi,ebx
  42f555:	jmp    0x70575287
  42f55a:	cmp    DWORD PTR [esi+0x60240eff],edi
  42f560:	pop    edx
  42f561:	mov    edx,0xacbd4cc2
  42f566:	imul   esi,DWORD PTR [edi+0x6ae83886],0xfe69950b
  42f570:	push   ecx
  42f571:	setns  BYTE PTR ds:0x895dd9b3
  42f578:	leave  
  42f579:	push   ebp
  42f57a:	dec    eax
  42f57b:	out    dx,al
  42f57c:	push   es
  42f57d:	push   ebp
  42f57e:	add    BYTE PTR [esi-0x30],ch
  42f581:	xchg   ebx,eax
  42f582:	mov    ebp,edi
  42f584:	mov    WORD PTR [eax+0x4],ds
  42f587:	pop    esi
  42f588:	int3   
  42f589:	scas   eax,DWORD PTR es:[edi]
  42f58a:	inc    ecx
  42f58b:	xchg   DWORD PTR [ebx],ecx
  42f58d:	fwait
  42f58e:	inc    ecx
  42f58f:	outs   dx,DWORD PTR ds:[esi]
  42f590:	enter  0x8f00,0x85
  42f594:	and    edx,DWORD PTR [eax]
  42f596:	sbb    eax,0xee61747d
  42f59b:	push   esi
  42f59c:	pop    ebx
  42f59d:	mov    bl,ch
  42f59f:	push   ebp
  42f5a0:	popa   
  42f5a1:	(bad)  
  42f5a2:	(bad)  
  42f5a3:	jl     0x42f605
  42f5a5:	popa   
  42f5a6:	into   
  42f5a7:	push   esi
  42f5a8:	out    0x3,eax
  42f5aa:	xchg   esp,eax
  42f5ab:	add    BYTE PTR [edx],ah
  42f5ad:	mov    bl,al
  42f5af:	push   ebp
  42f5b0:	inc    ecx
  42f5b1:	bound  edx,QWORD PTR [edi-0x43fc1700]
  42f5b7:	adc    al,BYTE PTR [ebx]
  42f5b9:	arpl   WORD PTR [esi-0x64bae04b],bp
  42f5bf:	add    BYTE PTR [esi+ecx*4+0x5b0482af],bh
  42f5c6:	in     al,0x81
  42f5c8:	xchg   ebx,eax
  42f5c9:	sete   BYTE PTR [ecx-0x23f8454e]
  42f5d0:	ins    DWORD PTR es:[edi],dx
  42f5d1:	shl    BYTE PTR [edi+0x6e42fd7f],0x76
  42f5d8:	call   0x6bccb7b7
  42f5dd:	or     ebx,DWORD PTR [ebx]
  42f5df:	(bad)  
  42f5e0:	ins    DWORD PTR es:[edi],dx
  42f5e1:	les    eax,FWORD PTR [edi-0x5c03d37d]
  42f5e7:	mov    ecx,ebx
  42f5e9:	ins    BYTE PTR es:[edi],dx
  42f5ea:	leave  
  42f5eb:	cmp    ecx,ebx
  42f5ed:	popa   
  42f5ee:	pop    ss
  42f5ef:	inc    ecx
  42f5f0:	cmp    al,0xc5
  42f5f2:	adc    bh,dh
  42f5f4:	ins    DWORD PTR es:[edi],dx
  42f5f5:	aam    0x0
  42f5f7:	xchg   DWORD PTR [ecx],eax
  42f5f9:	add    BYTE PTR [ecx+0x6407b81f],bh
  42f5ff:	popa   
  42f600:	rcl    DWORD PTR [edx],1
  42f602:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f603:	inc    ebx
  42f604:	or     al,BYTE PTR [edi+0xfb521aa]
  42f60a:	ds sbb ebx,eax
  42f60d:	jno    0x873d5153
  42f613:	or     DWORD PTR [ebp-0x22c8ded],esi
  42f619:	xchg   BYTE PTR [esp+eax*4],ch
  42f61c:	jge    0x42f667
  42f61e:	loope  0x42f62e
  42f620:	add    bl,al
  42f622:	scas   eax,DWORD PTR es:[edi]
  42f623:	xchg   ebx,eax
  42f624:	add    BYTE PTR [eax],al
  42f626:	jmp    0x42f5bf
  42f628:	xchg   DWORD PTR [ecx-0x1b],ebx
  42f62b:	sbb    BYTE PTR [ebx],al
  42f62d:	jg     0x42f657
  42f62f:	enter  0x4800,0xdd
  42f633:	daa    
  42f634:	add    edi,esp
  42f636:	jmp    0x42f5c1
  42f638:	inc    eax
  42f639:	pop    edx
  42f63a:	xchg   edi,eax
  42f63b:	call   0x59cfdabe
  42f640:	add    eax,0x6a08bc00
  42f645:	jle    0x42f654
  42f647:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f648:	(bad)  
  42f64b:	xchg   DWORD PTR [esp+eax*2+0x4f2da915],eax
  42f652:	jo     0x42f68f
  42f654:	push   ecx
  42f655:	mov    BYTE PTR [ebx+edx*8+0xc8695d],bl
  42f65c:	hlt    
  42f65d:	pop    edx
  42f65e:	sub    DWORD PTR [ecx],0x4b
  42f661:	or     bh,bl
  42f663:	pop    esp
  42f664:	mov    esp,0xf2a4c65d
  42f669:	pop    edx
  42f66a:	test   DWORD PTR [edx-0x2242b7f8],ebp
  42f670:	xchg   edi,eax
  42f671:	pop    ecx
  42f672:	je     0x42f674
  42f674:	push   ecx
  42f675:	loopne 0x42f6ea
  42f677:	hlt    
  42f678:	repnz sub eax,0x468ff06
  42f67e:	call   0xf622e8c4
  42f683:	mov    dl,BYTE PTR [ebp-0x1c]
  42f686:	(bad)  
  42f687:	test   DWORD PTR ds:0xfc8b0b2e,edi
  42f68d:	jnp    0x42f701
  42f68f:	adc    al,0xad
  42f691:	cs sbb eax,0xe2f12d83
  42f697:	pop    es
  42f698:	xchg   cx,ax
  42f69a:	add    cl,BYTE PTR [ebp-0x74f00147]
  42f6a0:	mov    esp,0xa72bc283
  42f6a5:	test   BYTE PTR [esp+edx*1+0x3e],cl
  42f6a9:	ret    0x3b0a
  42f6ac:	ja     0x42f6e6
  42f6ae:	add    DWORD PTR [esi+0x36],edx
  42f6b1:	xor    DWORD PTR [edx],eax
  42f6b3:	add    edi,DWORD PTR [esp+esi*8-0x17]
  42f6b7:	pop    esi
  42f6b8:	jmp    0x42f6b4
  42f6ba:	sub    al,al
  42f6bc:	jle    0x42f6aa
  42f6be:	mov    edi,0x83ca00eb
  42f6c3:	add    bh,BYTE PTR [ebx]
  42f6c5:	loope  0x42f6e3
  42f6c7:	or     BYTE PTR [ebp-0x7e],dh
  42f6ca:	test   DWORD PTR [edx+0x4],eax
  42f6cd:	cld    
  42f6ce:	fdivp  st(2),st
  42f6d0:	jmp    FWORD PTR [ebp+0x30]
  42f6d3:	aaa    
  42f6d4:	dec    esp
  42f6d5:	dec    ecx
  42f6d6:	add    al,0x74
  42f6d8:	or     eax,0x41e43e6
  42f6dd:	xchg   ebp,eax
  42f6de:	test   eax,0x7e72fff5
  42f6e3:	mov    edx,0x6bf5175
  42f6e8:	add    BYTE PTR [eax-0x6bae1979],cl
  42f6ee:	faddp  st(1),st
  42f6f0:	or     esp,edi
  42f6f2:	or     cl,BYTE PTR [ecx+0x7eafc0bf]
  42f6f8:	mov    edi,0x176bf996
  42f6fd:	push   ecx
  42f6fe:	lea    ebx,[edx-0x7a]
  42f701:	sbb    al,0xe1
  42f703:	loopne 0x42f700
  42f705:	adc    DWORD PTR [ebx+0x1c0a57d7],ebx
  42f70b:	or     BYTE PTR [ecx],al
  42f70d:	sbb    DWORD PTR [esp+esi*8],ecx
  42f710:	jae    0x42f6d5
  42f712:	adc    cl,0x7
  42f715:	in     al,dx
  42f716:	jnp    0x42f75f
  42f718:	cld    
  42f719:	repz into 
  42f71b:	pop    ebx
  42f71c:	test   bl,ch
  42f71e:	push   ebp
  42f71f:	sbb    edi,ebx
  42f721:	stos   BYTE PTR es:[edi],al
  42f722:	faddp  st(1),st
  42f724:	pop    es
  42f725:	add    bl,bl
  42f727:	xor    al,0x6
  42f729:	call   0xfa9daa84
  42f72e:	retf   
  42f72f:	xor    al,0x5a
  42f731:	xchg   BYTE PTR [edx+0x35],bl
  42f734:	pop    ecx
  42f735:	jno    0x42f6c3
  42f737:	ror    al,1
  42f739:	pop    es
  42f73a:	dec    ebx
  42f73b:	in     al,0xc8
  42f73d:	pop    es
  42f73e:	mov    esp,0xa3fa4441
  42f743:	push   0xffffff85
  42f745:	xlat   BYTE PTR ds:[ebx]
  42f746:	lods   al,BYTE PTR ds:[esi]
  42f747:	jmp    0x42f790
  42f749:	cld    
  42f74a:	xchg   ebx,eax
  42f74b:	out    0x56,al
  42f74d:	add    BYTE PTR [ecx],al
  42f74f:	pusha  
  42f750:	gs sbb eax,0x39069b0f
  42f756:	ror    BYTE PTR [ebp-0x2e],cl
  42f759:	(bad)  
  42f75b:	int3   
  42f75c:	pop    edx
  42f75d:	out    0x43,eax
  42f75f:	and    eax,0x29a7fa61
  42f764:	mov    ebx,0xa7004d56
  42f769:	pop    es
  42f76a:	xchg   esp,eax
  42f76b:	push   ebx
  42f76c:	adc    bl,BYTE PTR [edi-0x40]
  42f76f:	or     cl,al
  42f771:	pop    edi
  42f772:	inc    eax
  42f773:	push   ebx
  42f774:	leave  
  42f775:	mov    cl,ch
  42f777:	add    al,0x6e
  42f779:	enter  0x3a2f,0xe4
  42f77d:	or     edx,DWORD PTR [edi+eax*4-0x43a9efde]
  42f784:	loopne 0x42f78a
  42f786:	xchg   esp,eax
  42f787:	les    esi,FWORD PTR [di+0x6600]
  42f78c:	push   ebx
  42f78d:	adc    al,0x28
  42f78f:	mov    al,ds:0x875e920f
  42f794:	sbb    al,0xf5
  42f796:	pop    esi
  42f797:	xchg   DWORD PTR [ebx*8+0x7953926b],ebx
  42f79e:	pop    esi
  42f79f:	adc    dl,BYTE PTR [eax+0x6b]
  42f7a2:	push   ebp
  42f7a3:	addr16 clc 
  42f7a5:	imul   edx,edi,0x1e5104b7
  42f7ab:	iret   
  42f7ac:	push   edx
  42f7ad:	pop    ecx
  42f7ae:	mov    al,bl
  42f7b0:	jl     0x42f803
  42f7b2:	xlat   BYTE PTR ds:[ebx]
  42f7b3:	mov    WORD PTR [ebp+0x2d],?
  42f7b6:	xlat   BYTE PTR ds:[ebx]
  42f7b7:	nop
  42f7b8:	xchg   DWORD PTR [edx+0x6dff1d0f],ebp
  42f7be:	inc    esi
  42f7bf:	dec    esi
  42f7c0:	mov    dl,0x26
  42f7c2:	sete   BYTE PTR [ebp+0x64146f5d]
  42f7c9:	hlt    
  42f7ca:	add    al,0x94
  42f7cc:	add    BYTE PTR [ebx],dl
  42f7ce:	enter  0xff9f,0xb5
  42f7d2:	mov    ch,0xe6
  42f7d4:	test   DWORD PTR [ebx+0x737c8f0b],ecx
  42f7da:	add    edx,DWORD PTR [eax+eax*1+0x421243b6]
  42f7e1:	inc    DWORD PTR [eax]
  42f7e3:	cmp    DWORD PTR [eax-0x6],ebx
  42f7e6:	out    dx,al
  42f7e7:	or     eax,0x6cdf8462
  42f7ec:	fdiv   DWORD PTR [esi+0x9700e9]
  42f7f2:	jo     0x42f85e
  42f7f4:	mov    ds:0xd4b7400,al
  42f7f9:	rol    BYTE PTR [ebx],0x90
  42f7fc:	cwde   
  42f7fd:	add    BYTE PTR [ecx+ebp*8],cl
  42f800:	inc    edx
  42f801:	stos   BYTE PTR es:[edi],al
  42f802:	and    al,0xb6
  42f804:	shl    DWORD PTR [ecx-0x6],0x60
  42f808:	push   edx
  42f809:	(bad)  
  42f80a:	push   ds
  42f80b:	stos   BYTE PTR es:[edi],al
  42f80c:	pop    ds
  42f80d:	mov    ebp,0x5a52720b
  42f812:	sbb    esp,DWORD PTR [edx-0x70]
  42f815:	or     DWORD PTR [edx],ecx
  42f817:	adc    al,0x2
  42f819:	jnp    0x42f862
  42f81b:	in     eax,dx
  42f81c:	mov    ah,0x39
  42f81e:	ss sub al,0x84
  42f821:	retf   
  42f822:	or     edi,DWORD PTR [esi-0x28]
  42f825:	std    
  42f826:	(bad)  
  42f827:	call   0xf9b7f8b5
  42f82c:	adc    al,0xf2
  42f82e:	push   DWORD PTR [ecx+0x59]
  42f831:	pop    ecx
  42f832:	push   edi
  42f833:	push   edi
  42f834:	popa   
  42f835:	push   esi
  42f836:	test   BYTE PTR [ecx],ch
  42f838:	jecxz  0x42f872
  42f83a:	out    0x8,al
  42f83c:	adc    eax,0xd8720020
  42f841:	std    
  42f842:	repnz sub BYTE PTR [eax-0x3c16f800],bl
  42f849:	cld    
  42f84a:	jle    0x42f815
  42f84c:	xchg   edi,eax
  42f84d:	pop    ecx
  42f84e:	or     DWORD PTR [eax-0x9],ebp
  42f851:	push   esi
  42f852:	cli    
  42f853:	sbb    DWORD PTR [eax],eax
  42f855:	loope  0x42f7df
  42f857:	inc    edi
  42f858:	in     eax,0xec
  42f85a:	push   edx
  42f85b:	jge    0x42f85d
  42f85d:	arpl   bp,di
  42f85f:	add    dh,0xe6
  42f862:	ret    
  42f863:	loop   0x42f88d
  42f865:	imul   esi,DWORD PTR [ebp+esi*8-0xf85a275],0x75
  42f86d:	ret    0x2e67
  42f870:	push   0x45
  42f872:	mov    ah,0x33
  42f874:	loopne 0x42f88c
  42f876:	inc    eax
  42f877:	cli    
  42f878:	inc    BYTE PTR [eax-0x7]
  42f87b:	or     al,BYTE PTR [eax+0x3d]
  42f87e:	mov    dl,dl
  42f880:	mov    DWORD PTR [eax+0x3ac084f0],ecx
  42f886:	jns    0x42f898
  42f888:	add    DWORD PTR ds:0x11708cfd,ebp
  42f88e:	mov    esp,0xfcfd3000
  42f893:	dec    DWORD PTR [edx+0x184787fa]
  42f899:	je     0x42f8e0
  42f89b:	adc    cl,BYTE PTR [ebx+0x1c4787ea]
  42f8a1:	fs inc ebp
  42f8a3:	push   ss
  42f8a4:	xor    ebp,DWORD PTR ds:0x90ebc588
  42f8aa:	jg     0x42f8e1
  42f8ac:	add    cl,dh
  42f8ae:	xchg   edi,eax
  42f8af:	add    DWORD PTR [edi-0x3b],0x6d830887
  42f8b6:	dec    ebp
  42f8b7:	stc    
  42f8b8:	mov    DWORD PTR [eax],0x89062a58
  42f8be:	add    BYTE PTR [ecx-0x4d80461e],dh
  42f8c4:	cmc    
  42f8c5:	mov    ecx,DWORD PTR [eax]
  42f8c7:	add    DWORD PTR [eax+eax*8+0xc678ba],eax
  42f8ce:	jge    0x42f8d4
  42f8d0:	or     DWORD PTR [edi],0xfffffff8
  42f8d3:	xor    BYTE PTR [esi],cl
  42f8d5:	mov    edx,DWORD PTR [edi+ebx*2+0x620dbeff]
  42f8dc:	xchg   DWORD PTR [edx-0x68],ecx
  42f8df:	rol    dh,1
  42f8e1:	add    ebx,DWORD PTR [edi]
  42f8e3:	lahf   
  42f8e4:	push   es
  42f8e5:	mov    esp,ecx
  42f8e7:	popa   
  42f8e8:	xchg   DWORD PTR [edx-0x78],ecx
  42f8eb:	loopne 0x42f8b3
  42f8ed:	or     ebx,DWORD PTR [edi]
  42f8ef:	adc    cl,BYTE PTR [eax*4+0x50f1b65d]
  42f8f6:	adc    DWORD PTR [edi],esp
  42f8f8:	hlt    
  42f8f9:	push   eax
  42f8fa:	pop    ss
  42f8fb:	call   0x120e:0x2d334ff3
  42f902:	aam    0x59
  42f904:	add    ebx,0xfbc0e290
  42f90a:	xchg   ebp,eax
  42f90b:	mov    DWORD PTR [si-0x64],ecx
  42f90f:	sar    BYTE PTR [esi],cl
  42f911:	out    0x88,eax
  42f913:	ins    BYTE PTR es:[edi],dx
  42f914:	push   esi
  42f915:	cli    
  42f916:	(bad)  
  42f918:	cmp    dl,0x81
  42f91b:	leave  
  42f91c:	mov    bh,BYTE PTR [esi]
  42f91e:	add    BYTE PTR [eax+0x34fffe44],cl
  42f924:	pop    edx
  42f925:	int    0x72
  42f927:	pop    ss
  42f928:	call   0x5014:0x1b094f33
  42f92f:	and    DWORD PTR [ebx+0x1e],esp
  42f932:	das    
  42f933:	aam    0xb1
  42f935:	enter  0xc1e0,0xb6
  42f939:	jg     0x42f8fa
  42f93b:	inc    eax
  42f93c:	cmp    ah,ch
  42f93e:	(bad)  
  42f93f:	cmp    eax,0xaae7b12d
  42f944:	xor    dl,BYTE PTR [ebp-0x6]
  42f947:	pop    ss
  42f948:	xchg   ebp,eax
  42f949:	out    dx,al
  42f94a:	dec    DWORD PTR [esi]
  42f94c:	xchg   ebx,eax
  42f94d:	jmp    0x8781:0x2a00d973
  42f954:	dec    esi
  42f955:	sbb    DWORD PTR [ebx-0x69],ebx
  42f958:	add    cl,ch
  42f95a:	add    edx,DWORD PTR [ecx]
  42f95c:	dec    edi
  42f95d:	xchg   esp,eax
  42f95e:	or     bl,BYTE PTR [ebx]
  42f960:	aaa    
  42f961:	ins    DWORD PTR es:[edi],dx
  42f962:	push   edi
  42f963:	sbb    BYTE PTR [ebp+0x4f5e59f4],al
  42f969:	add    BYTE PTR [edi+0x5ae94fb1],dh
  42f96f:	enter  0x65f0,0xa0
  42f973:	inc    edi
  42f974:	dec    esi
  42f975:	fstp   DWORD PTR [edx+0x43]
  42f978:	jl     0x42f9e5
  42f97a:	dec    edi
  42f97b:	cmp    eax,0x436bc94f
  42f980:	sbb    edx,eax
  42f982:	pop    edx
  42f983:	add    BYTE PTR [eax],dl
  42f985:	dec    edi
  42f986:	xor    al,0xb
  42f988:	sbb    esi,DWORD PTR [edi]
  42f98a:	pop    ebp
  42f98b:	push   esi
  42f98c:	or     BYTE PTR [ebp+0x4f0e59b4],al
  42f992:	nop
  42f993:	cs mov dl,0x4f
  42f996:	cdq    
  42f997:	mov    ds,WORD PTR [eax-0xc]
  42f99a:	pop    edi
  42f99b:	sti    
  42f99c:	adc    al,BYTE PTR [edi+0x7d]
  42f99f:	or     esp,DWORD PTR [ebx+0x58]
  42f9a2:	bound  eax,QWORD PTR [ebp-0x18]
  42f9a5:	dec    esi
  42f9a6:	mov    ch,0x43
  42f9a8:	ds scas al,BYTE PTR es:[edi]
  42f9aa:	or     eax,0xe8f0194d
  42f9af:	mov    cl,0x39
  42f9b1:	add    al,0x51
  42f9b3:	call   0x809c46c1
  42f9b8:	add    edx,esp
  42f9ba:	jmp    0x5e439545
  42f9bf:	push   ebx
  42f9c0:	mov    edx,0x1051f601
  42f9c5:	push   esi
  42f9c6:	mov    ah,0x11
  42f9c8:	cmp    dl,BYTE PTR [eax+eax*1]
  42f9cb:	ret    
  42f9cc:	(bad)  
  42f9cd:	dec    ebx
  42f9ce:	xor    al,0x49
  42f9d0:	inc    edx
  42f9d1:	verr   WORD PTR [esi]
  42f9d4:	test   BYTE PTR [edx],al
  42f9d6:	pop    gs
  42f9d8:	xchg   edi,eax
  42f9d9:	ja     0x42f9dc
  42f9db:	ins    BYTE PTR es:[edi],dx
  42f9dc:	xlat   BYTE PTR ds:[ebx]
  42f9dd:	rcl    DWORD PTR [ebx],1
  42f9df:	bound  ebx,QWORD PTR [ebx+0x22]
  42f9e2:	or     BYTE PTR [esi],ch
  42f9e4:	push   edi
  42f9e5:	repnz das 
  42f9e7:	jmp    0x874390ec
  42f9ec:	out    dx,eax
  42f9ed:	or     dh,al
  42f9ef:	sbb    esp,DWORD PTR [edx-0x2b]
  42f9f2:	or     WORD PTR [ecx],di
  42f9f5:	mov    eax,0xdddcbdb9
  42f9fa:	scas   eax,DWORD PTR es:[edi]
  42f9fb:	out    0x2f,eax
  42f9fd:	ror    BYTE PTR [edx+edi*8+0x1a],cl
  42fa01:	fsub   DWORD PTR [edi-0x4c681243]
  42fa07:	xchg   ch,cl
  42fa09:	pop    ss
  42fa0a:	pop    edx
  42fa0b:	pop    ss
  42fa0c:	call   0x6294faa8
  42fa11:	addr16 mov dl,0x86
  42fa14:	mov    eax,ds:0x650a4f8b
  42fa19:	dec    esi
  42fa1a:	dec    ebp
  42fa1b:	cli    
  42fa1c:	jmp    0xcd12bd33
  42fa21:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42fa22:	dec    edx
  42fa23:	call   0x97e9:0xbf819ce9
  42fa2a:	add    BYTE PTR [edi-0x203273d4],al
  42fa30:	call   0xdc4ebf53
  42fa35:	(bad)  
  42fa36:	mov    dl,0x51
  42fa38:	push   ecx
  42fa39:	in     eax,0x8b
  42fa3b:	cld    
  42fa3c:	push   esi
  42fa3d:	or     DWORD PTR [esi-0x7c],ebx
  42fa40:	push   edi
  42fa41:	popf   
  42fa42:	test   BYTE PTR [ebx+0x1bd00],ah
  42fa48:	and    eax,0xfffffff9
  42fa4b:	push   DWORD PTR [ebx+0x0]
  42fa4e:	call   0xfe4b6dfb
  42fa53:	ins    DWORD PTR es:[edi],dx
  42fa54:	loop   0x42fa54
  42fa56:	mov    dl,0xa7
  42fa58:	cli    
  42fa59:	mov    eax,?
  42fa5b:	fdiv   st(0),st
  42fa5d:	jmp    DWORD PTR [edx-0x5dd6f124]
  42fa63:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42fa64:	cmp    edi,0xffffffe9
  42fa67:	clc    
  42fa68:	adc    bh,0xe6
  42fa6b:	mov    edx,0xaa95858b
  42fa70:	cmc    
  42fa71:	call   DWORD PTR [ebp+0x32ff243c]
  42fa77:	rol    BYTE PTR [ebx-0xa579c18],0x4
  42fa7e:	sub    eax,0x62850001
  42fa83:	cmp    eax,0x7c0a8b05
  42fa88:	enter  0xb88d,0xd9
  42fa8c:	clc    
  42fa8d:	jmp    edx
  42fa8f:	fsub   DWORD PTR [ecx]
  42fa91:	sub    al,BYTE PTR [edx-0x58]
  42fa94:	add    DWORD PTR [esi+0x9],0xbb75beec
  42fa9b:	cmp    DWORD PTR [edx+0x4085bdd0],0x30
  42faa2:	lods   eax,DWORD PTR ds:[esi]
  42faa3:	test   DWORD PTR [ebx-0x10],edi
  42faa6:	cs shl edx,0xdf
  42faaa:	add    dh,BYTE PTR [esi+0x3d2d84f5]
  42fab0:	sub    ch,BYTE PTR [edx+0x0]
  42fab3:	in     eax,dx
  42fab4:	test   DWORD PTR [eax+0x20],eax
  42fab7:	or     eax,0x6250bd7c
  42fabc:	pop    esi
  42fabd:	ss push ss
  42fabf:	xchg   esp,eax
  42fac0:	xchg   edi,eax
  42fac1:	(bad)  
  42fac2:	jle    0x42fa9c
  42fac4:	sub    bh,BYTE PTR [ecx-0x41]
  42fac7:	and    DWORD PTR [ecx-0x14],esp
  42faca:	add    ebp,DWORD PTR [eax+eiz*4-0x246403c3]
  42fad1:	ds jae 0x42fa6d
  42fad4:	(bad)  
  42fad5:	push   ds
  42fad6:	add    BYTE PTR [edi+0x58],bh
  42fad9:	adc    eax,eax
  42fadb:	sbb    DWORD PTR [edx],ebx
  42fadd:	retf   
  42fade:	add    ecx,DWORD PTR ds:0x17096b2a
  42fae4:	jge    0x42fae8
  42fae6:	add    cl,ah
  42fae8:	pop    ebx
  42fae9:	mov    al,0xe7
  42faeb:	mov    edi,0xa7fa5218
  42faf0:	sbb    DWORD PTR [eax+0x7185d59],edi
  42faf6:	add    cl,ah
  42faf8:	into   
  42faf9:	addr16 jle 0x42fb2c
  42fafc:	dec    edx
  42fafd:	lods   eax,DWORD PTR ds:[esi]
  42fafe:	cs pop edi
  42fb00:	or     al,0x1c
  42fb02:	sbb    eax,0xffbea4e4
  42fb07:	mov    al,ds:0x59d79200
  42fb0c:	pop    ss
  42fb0d:	add    al,0x52
  42fb0f:	sbb    ebp,DWORD PTR ds:0x59540d62
  42fb15:	push   ss
  42fb16:	sbb    eax,0xbe9d4400
  42fb1b:	dec    DWORD PTR [eax-0xdfbc3b5]
  42fb21:	mov    esi,0xa2f2ffbe
  42fb26:	add    BYTE PTR [ecx+edx*8+0x16],bh
  42fb2a:	add    al,0xe4
  42fb2c:	or     BYTE PTR [edx],bl
  42fb2e:	add    al,0x89
  42fb30:	jns    0x42fb3f
  42fb32:	inc    ecx
  42fb33:	ds xchg esp,eax
  42fb35:	mov    ds:0xd1b000,eax
  42fb3a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42fb3b:	add    edx,DWORD PTR [ebp-0x540ea64e]
  42fb41:	out    dx,al
  42fb42:	test   al,0x3
  42fb44:	sbb    eax,0x488d58ae
  42fb49:	push   esp
  42fb4a:	outs   dx,DWORD PTR ds:[esi]
  42fb4b:	mov    ecx,0x569b78ab
  42fb50:	mov    ss,WORD PTR [edx-0x2e5a955]
  42fb56:	lods   al,BYTE PTR ds:[esi]
  42fb57:	inc    eax
  42fb58:	retf   0xb600
  42fb5b:	push   esi
  42fb5c:	mov    DWORD PTR [ecx-0x4f943e95],0x4ae5db00
  42fb66:	or     DWORD PTR [eax+0x55edd52b],eax
  42fb6c:	fmul   DWORD PTR [ebx+0x68]
  42fb6f:	fstp   DWORD PTR [esi-0x2]
  42fb72:	jbe    0x42fbab
  42fb74:	cmp    bh,dh
  42fb76:	xor    eax,0xd8c51905
  42fb7b:	imul   eax,DWORD PTR [eax],0xffffffa2
  42fb7e:	iret   
  42fb7f:	ficom  DWORD PTR [esi-0x23]
  42fb82:	jbe    0x42fb29
  42fb84:	mov    edx,0x8b333f5c
  42fb89:	aas    
  42fb8a:	jg     0x42fb60
  42fb8c:	out    dx,eax
  42fb8d:	ror    BYTE PTR [edi],cl
  42fb8f:	sahf   
  42fb90:	lods   eax,DWORD PTR ds:[esi]
  42fb91:	arpl   bp,bp
  42fb93:	js     0x42fbd5
  42fb95:	rol    BYTE PTR [eax],cl
  42fb97:	xor    al,0x1d
  42fb99:	dec    esi
  42fb9a:	sub    BYTE PTR [ebx-0x664afc3e],ch
  42fba0:	lock out dx,eax
  42fba2:	in     eax,dx
  42fba3:	sub    BYTE PTR [esp+ebp*4],al
  42fba6:	in     eax,dx
  42fba7:	pop    eax
  42fba8:	inc    eax
  42fba9:	stos   BYTE PTR es:[edi],al
  42fbaa:	add    ah,bh
  42fbac:	cmc    
  42fbad:	aad    0x4
  42fbaf:	sub    DWORD PTR [edx+0x7600009a],0xffffff92
  42fbb6:	add    al,0x7c
  42fbb8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42fbb9:	(bad)  
  42fbba:	dec    edx
  42fbbb:	fidivr WORD PTR [ebp-0x29]
  42fbbe:	dec    edx
  42fbbf:	xchg   esp,edi
  42fbc1:	or     eax,DWORD PTR [esi+edi*1-0x17]
  42fbc5:	jno    0x42fbcb
  42fbc7:	mov    al,0x24
  42fbc9:	(bad)  
  42fbca:	dec    edx
  42fbcb:	call   FWORD PTR [esi-0x24100bb6]
  42fbd1:	xlat   BYTE PTR ds:[ebx]
  42fbd2:	dec    edx
  42fbd3:	push   0xebad20d9
  42fbd8:	pusha  
  42fbd9:	dec    esp
  42fbda:	pop    edx
  42fbdb:	mov    ah,al
  42fbdd:	rol    DWORD PTR [ecx+0x41001e5c],cl
  42fbe3:	div    DWORD PTR [ecx+0xc82caac]
  42fbe9:	(bad)  
  42fbea:	aam    0xa
  42fbec:	add    BYTE PTR [edx+0x6c810dca],bl
  42fbf2:	push   esp
  42fbf3:	push   esi
  42fbf4:	dec    edi
  42fbf5:	add    DWORD PTR [esi-0x3511062c],edi
  42fbfb:	mov    DWORD PTR [ebx+0x7],esi
  42fbfe:	add    eax,0xe1447d
  42fc03:	inc    edi
  42fc04:	je     0x42fbe7
  42fc06:	push   ds
  42fc07:	aad    0xf7
  42fc09:	inc    ecx
  42fc0a:	lahf   
  42fc0b:	add    BYTE PTR [eax],al
  42fc0d:	sub    ecx,ecx
  42fc0f:	aam    0xf3
  42fc11:	mov    esi,0x29149e2b
  42fc16:	cwde   
  42fc17:	leave  
  42fc18:	imul   eax
  42fc1a:	fucomi st,st(0)
  42fc1c:	stc    
  42fc1d:	sub    al,0x69
  42fc1f:	leave  
  42fc20:	jl     0x42fbc0
  42fc22:	xchg   esi,eax
  42fc23:	fidivr DWORD PTR [ecx+0x7447253f]
  42fc29:	loope  0x42fc6b
  42fc2b:	hlt    
  42fc2c:	xor    eax,DWORD PTR [eax]
  42fc2e:	ret    
  42fc2f:	cmp    eax,0xf93182fa
  42fc34:	loop   0x42fc38
  42fc36:	mov    ?,ebp
  42fc38:	mov    WORD PTR [ebp+0x49],es
  42fc3b:	fcomp  QWORD PTR [ebp+0x72]
  42fc3e:	cmp    esi,DWORD PTR [ebx-0x789175a8]
  42fc44:	mov    edx,0x54fdc100
  42fc4a:	mov    ebp,DWORD PTR [ecx+0x7d]
  42fc4d:	out    0x8,al
  42fc4f:	scas   eax,DWORD PTR es:[edi]
  42fc50:	std    
  42fc51:	dec    DWORD PTR [eax+esi*1-0x35000454]
  42fc58:	xchg   esp,eax
  42fc59:	bound  eax,QWORD PTR [eax+0x6a03fd7d]
  42fc5f:	ins    DWORD PTR es:[edi],dx
  42fc60:	mov    ah,0x73
  42fc62:	or     BYTE PTR [edi],ah
  42fc64:	dec    ecx
  42fc65:	loop   0x42fc2e
  42fc67:	pop    ds
  42fc68:	mov    ah,0xf5
  42fc6a:	test   DWORD PTR [ebp+0x6d6a0930],edi
  42fc70:	add    BYTE PTR [ebx-0xa4ba708],0x50
  42fc77:	dec    edx
  42fc78:	pop    edx
  42fc79:	(bad)  
  42fc7a:	adc    ebp,edi
  42fc7c:	cld    
  42fc7d:	test   al,al
  42fc7f:	loopne 0x42fc81
  42fc81:	sub    al,al
  42fc83:	sbb    ax,0x75f7
  42fc87:	cmp    DWORD PTR [edx-0x4ba7077d],eax
  42fc8d:	cmc    
  42fc8e:	push   0xfffffdad
  42fc93:	(bad)  
  42fc96:	inc    eax
  42fc97:	std    
  42fc98:	mov    WORD PTR [eax+eax*1-0x2b],fs
  42fc9c:	int    0x5c
  42fc9e:	(bad)  
  42fc9f:	cmp    cl,dl
  42fca1:	mov    edx,0xc7bd800f
  42fca6:	ret    0x5f94
  42fca9:	(bad)  
  42fcaa:	push   esp
  42fcab:	add    BYTE PTR [edi],bl
  42fcad:	retf   
  42fcae:	add    DWORD PTR [eax+edx*4-0x19],0xca887454
  42fcb6:	test   eax,0xca971907
  42fcbb:	pop    ebx
  42fcbc:	arpl   dx,bx
  42fcbe:	leave  
  42fcbf:	or     ebp,DWORD PTR [ebx+eiz*4-0x324406b2]
  42fcc6:	push   esi
  42fcc7:	test   BYTE PTR [ebx+0x21fabf2a],dh
  42fccd:	inc    edi
  42fcce:	push   ebx
  42fccf:	xor    ah,BYTE PTR [ebx+0x540fd22b]
  42fcd5:	push   edi
  42fcd6:	jns    0x42fc97
  42fcd8:	or     BYTE PTR [eax],al
  42fcda:	stos   BYTE PTR es:[edi],al
  42fcdb:	cli    
  42fcdc:	add    DWORD PTR [esi],ebp
  42fcde:	xchg   DWORD PTR [eax+edx*4-0x34],esi
  42fce2:	mov    ecx,0xcbb1ec07
  42fce7:	aas    
  42fce8:	xchg   esp,eax
  42fce9:	mov    DWORD PTR [esi-0x39],esp
  42fcec:	xchg   edi,eax
  42fced:	not    DWORD PTR [ebx+0x7e]
  42fcf0:	pop    eax
  42fcf1:	dec    esi
  42fcf2:	jns    0x42fcb3
  42fcf4:	fisubr DWORD PTR [eax]
  42fcf6:	push   ebx
  42fcf7:	je     0x42fc95
  42fcf9:	addr16 out 0x54,ax
  42fcfd:	pop    eax
  42fcfe:	dec    esi
  42fcff:	cli    
  42fd00:	leave  
  42fd01:	push   ecx
  42fd02:	push   esi
  42fd03:	dec    ebx
  42fd04:	sti    
  42fd05:	and    al,0x4e
  42fd07:	pop    ecx
  42fd08:	retf   
  42fd09:	inc    ecx
  42fd0a:	enter  0x29ba,0x37
  42fd0e:	dec    esi
  42fd0f:	je     0x42fd11
  42fd11:	nop
  42fd12:	ds clc 
  42fd14:	lahf   
  42fd15:	xchg   BYTE PTR [ecx],bl
  42fd17:	add    al,0x5b
  42fd19:	jno    0x42fcb6
  42fd1b:	repz jmp DWORD PTR [eax-0x1e]
  42fd1f:	pop    edi
  42fd20:	jle    0x42fd12
  42fd22:	add    BYTE PTR ds:0x74ce08ba,dl
  42fd28:	mov    WORD PTR [ecx+eax*1],gs
  42fd2b:	jmp    0xf2e8f933
  42fd30:	push   edx
  42fd31:	fidivr WORD PTR [ebx-0x56]
  42fd34:	mov    ah,0xde
  42fd36:	in     eax,dx
  42fd37:	and    dh,dh
  42fd39:	xchg   ebx,eax
  42fd3a:	add    BYTE PTR [eax-0x37],ah
  42fd3d:	iret   
  42fd3e:	jge    0x42fce8
  42fd40:	add    ebx,DWORD PTR [eax]
  42fd42:	sub    al,0xe8
  42fd44:	add    edx,DWORD PTR [ebx+esi*4-0x6fcf7f4f]
  42fd4b:	nop
  42fd4c:	mov    gs,WORD PTR [ebx-0x68a417b9]
  42fd52:	out    dx,al
  42fd53:	inc    ecx
  42fd54:	push   ebx
  42fd55:	adc    cl,BYTE PTR [esi]
  42fd57:	jge    0x42fd4f
  42fd59:	rol    DWORD PTR [eax],cl
  42fd5b:	pop    esi
  42fd5c:	dec    ebx
  42fd5d:	fild   DWORD PTR [edi-0x4d]
  42fd60:	dec    edi
  42fd61:	jle    0x42fd91
  42fd63:	ins    DWORD PTR es:[edi],dx
  42fd64:	sub    al,0x8
  42fd66:	lds    edi,FWORD PTR [esp+ecx*4]
  42fd69:	sub    al,BYTE PTR [eax]
  42fd6b:	jmp    0xf3a27973
  42fd70:	push   edx
  42fd71:	pop    esi
  42fd72:	jnp    0x42fd9d
  42fd74:	mov    ah,0x0
  42fd76:	pop    esi
  42fd77:	int    0xfc
  42fd79:	push   edx
  42fd7a:	gs jns 0x42fd28
  42fd7d:	push   ebx
  42fd7e:	sbb    ch,al
  42fd80:	and    BYTE PTR [edi+edi*8+0x2c03e8ff],cl
  42fd87:	aaa    
  42fd88:	repz push edx
  42fd8a:	cs jnp 0x42fd36
  42fd8d:	mov    bl,0x2e
  42fd8f:	int    0xcc
  42fd91:	push   edx
  42fd92:	inc    ebp
  42fd93:	adc    edi,DWORD PTR [ebx-0x64f4dc82]
  42fd99:	xlat   BYTE PTR ds:[ebx]
  42fd9a:	(bad)
  42fd9e:	pusha  
  42fd9f:	shl    DWORD PTR [edx-0xe],cl
  42fda2:	shr    DWORD PTR gs:[esi+0x11],cl
  42fda6:	je     0x42fe1b
  42fda8:	aas    
  42fda9:	jmp    0x97ff28fd
  42fdae:	inc    esi
  42fdaf:	dec    edx
  42fdb0:	adc    al,0x91
  42fdb2:	call   0xccb2fdbd
  42fdb7:	pop    edx
  42fdb8:	jle    0x42fd3b
  42fdba:	ror    WORD PTR [esi+esi*2],cl
  42fdbe:	in     al,dx
  42fdbf:	cli    
  42fdc0:	cli    
  42fdc1:	hlt    
  42fdc2:	mov    edi,0x2c5152b6
  42fdc7:	dec    ecx
  42fdc8:	cli    
  42fdc9:	pop    esi
  42fdca:	adc    al,0xbc
  42fdcc:	idiv   DWORD PTR [ecx-0x460c43ec]
  42fdd2:	sar    edi,0x51
  42fdd5:	lahf   
  42fdd6:	inc    esi
  42fdd7:	test   BYTE PTR ss:[ecx],ch
  42fdda:	add    BYTE PTR [ebx+0xa],ch
  42fddd:	das    
  42fdde:	adc    bl,BYTE PTR [eax-0x49480835]
  42fde4:	jge    0x42fe2a
  42fde6:	sbb    eax,0x7201fa14
  42fdeb:	pop    eax
  42fdec:	inc    BYTE PTR [ecx+ebp*1+0x117efd43]
  42fdf3:	fwait
  42fdf4:	retf   
  42fdf5:	adc    esi,DWORD PTR [edx-0x70]
  42fdf8:	or     eax,0xf56b0d45
  42fdfd:	cli    
  42fdfe:	jl     0x42fe4b
  42fe00:	dec    ebx
  42fe01:	je     0x42fde4
  42fe03:	pop    es
  42fe04:	mov    bl,0xe7
  42fe06:	(bad)  
  42fe07:	out    0x4a,al
  42fe09:	cli    
  42fe0a:	sub    bl,BYTE PTR [ecx]
  42fe0c:	inc    eax
  42fe0d:	or     edx,DWORD PTR [edx]
  42fe0f:	sti    
  42fe10:	dec    ebp
  42fe11:	ins    DWORD PTR es:[edi],dx
  42fe12:	mov    eax,0xf3ccc5
  42fe17:	push   edx
  42fe18:	mov    gs,edx
  42fe1a:	dec    eax
  42fe1c:	mov    al,0xf5
  42fe1e:	adc    eax,0x3a4ea1
  42fe23:	xchg   edx,eax
  42fe24:	xchg   ebx,eax
  42fe25:	pop    eax
  42fe26:	leave  
  42fe27:	das    
  42fe28:	inc    ebp
  42fe29:	cli    
  42fe2a:	add    al,0x34
  42fe2c:	pushf  
  42fe2d:	and    al,0xb4
  42fe2f:	ja     0x42fdf3
  42fe31:	inc    ebx
  42fe32:	add    al,0x8b
  42fe34:	aas    
  42fe35:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42fe36:	add    ecx,ecx
  42fe38:	pop    ecx
  42fe39:	push   ds
  42fe3a:	or     al,0xab
  42fe3c:	(bad)  
  42fe3d:	sbb    bl,BYTE PTR [eax+eax*1]
  42fe40:	stos   DWORD PTR es:[edi],eax
  42fe41:	xchg   DWORD PTR [edi],edi
  42fe43:	jg     0x42fe55
  42fe45:	ins    DWORD PTR es:[edi],dx
  42fe46:	push   eax
  42fe47:	aam    0x1f
  42fe49:	hlt    
  42fe4a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42fe4b:	bound  ecx,QWORD PTR [edi]
  42fe4d:	fwait
  42fe4e:	mov    al,ds:0x1e40cf51
  42fe53:	and    al,0xeb
  42fe55:	add    BYTE PTR [ecx],dl
  42fe57:	out    0xdf,eax
  42fe59:	inc    eax
  42fe5a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42fe5b:	xchg   esi,eax
  42fe5c:	mov    esp,DWORD PTR [eax+eiz*4]
  42fe5f:	push   eax
  42fe60:	out    0x5c,eax
  42fe62:	mov    dh,0xaf
  42fe64:	loopne 0x42fe24
  42fe66:	sub    esi,DWORD PTR [edi+eiz*2-0x7a]
  42fe6a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42fe6b:	push   eax
  42fe6c:	pop    edi
  42fe6d:	lods   eax,DWORD PTR ds:[esi]
  42fe6e:	daa    
  42fe6f:	cld    
  42fe70:	dec    esp
  42fe71:	inc    eax
  42fe72:	hlt    
  42fe73:	mov    eax,0xaf506ed5
  42fe78:	pop    ebx
  42fe79:	and    BYTE PTR [eax-0x58c01d2c],0x50
  42fe80:	inc    edx
  42fe81:	inc    esp
  42fe82:	mov    edi,DWORD PTR [edi+ecx*2-0x43]
  42fe86:	add    BYTE PTR gs:[edi],dl
  42fe89:	cs inc eax
  42fe8b:	scas   eax,DWORD PTR es:[edi]
  42fe8c:	rol    BYTE PTR [eax+ebp*2],0x5f
  42fe90:	xchg   esp,eax
  42fe91:	and    eax,0xa9c4a887
  42fe96:	aas    
  42fe97:	int3   
  42fe98:	mov    al,ds:0x2495c0ad
  42fe9d:	xchg   BYTE PTR [ebx],dl
  42fe9f:	lea    eax,[eax+edi*8+0x59005167]
  42fea6:	mov    DWORD PTR [ecx+0xbcc64e8],ebp
  42feac:	lea    edx,[esi+eiz*2+0x53]
  42feb0:	in     al,dx
  42feb1:	call   0xdb5c:0xc1a8c0e7
  42feb8:	les    edi,FWORD PTR [ebp+0xcb0db4c]
  42febe:	retf   0x51ba
  42fec1:	sti    
  42fec2:	xor    BYTE PTR [edi],bh
  42fec4:	test   al,0x64
  42fec6:	dec    ecx
  42fec7:	inc    esp
  42fec8:	in     al,dx
  42fec9:	inc    eax
  42feca:	mov    edi,ebp
  42fecc:	stc    
  42fecd:	iret   
  42fece:	shl    BYTE PTR [edi-0x7123bd25],cl
  42fed4:	and    ecx,DWORD PTR [eax-0x40071c73]
  42feda:	ret    0x8fa7
  42fedd:	jmp    0x42feb3
  42fedf:	mov    ds,WORD PTR ds:0x79a8f822
  42fee5:	add    al,0xa5
  42fee7:	mov    ds,WORD PTR ds:0xb6a73822
  42feed:	retf   0x8ed4
  42fef0:	mov    esi,0x8c3beac4
  42fef5:	nop
  42fef6:	imul   edi,DWORD PTR [edi+0x760094a8],0x365f0cf8
  42ff00:	push   ecx
  42ff01:	sti    
  42ff02:	sbb    eax,0xc7e4a79e
  42ff07:	cmp    ebp,DWORD PTR [eax+0x0]
  42ff0a:	jo     0x42ff0c
  42ff0c:	push   ds
  42ff0d:	inc    edx
  42ff0e:	inc    eax
  42ff0f:	int    0x32
  42ff11:	out    dx,eax
  42ff12:	and    DWORD PTR [ecx-0x6c3918c5],ecx
  42ff18:	sar    BYTE PTR [edi+0x38],cl
  42ff1b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ff1c:	sar    ebx,0x20
  42ff1f:	int    0x6
  42ff21:	xchg   esp,eax
  42ff22:	call   0x55333df3
  42ff27:	out    dx,eax
  42ff28:	fcom   DWORD PTR [ebx-0x45e059b]
  42ff2e:	and    BYTE PTR ds:0x609526c7,al
  42ff34:	xlat   BYTE PTR ds:[ebx]
  42ff35:	mov    esi,0xad26bd45
  42ff3a:	in     al,dx
  42ff3b:	mov    al,0x77
  42ff3d:	jnp    0x42ff37
  42ff3f:	and    eax,0xaec4db72
  42ff44:	idiv   BYTE PTR [esi-0x251d6c44]
  42ff4a:	add    BYTE PTR [ecx+ecx*8-0x290f143a],dl
  42ff51:	jl     0x42ff0b
  42ff53:	int3   
  42ff54:	sar    DWORD PTR [ebp+0x26b2ec77],cl
  42ff5a:	das    
  42ff5b:	mov    al,0xb6
  42ff5d:	(bad)  
  42ff5e:	jbe    0x42ff7d
  42ff60:	outs   dx,BYTE PTR ds:[esi]
  42ff61:	dec    ecx
  42ff62:	js     0x42ff30
  42ff64:	mov    bl,0xf3
  42ff66:	xchg   bh,dh
  42ff68:	das    
  42ff69:	call   0x7f00:0x7abb3f87
  42ff70:	or     DWORD PTR [eax+ebp*1],0xb5e90090
  42ff77:	mov    BYTE PTR [ebx+0x9404fa],0x9a
  42ff7e:	dec    esi
  42ff7f:	enter  0x90f8,0x9b
  42ff83:	sti    
  42ff84:	mov    esi,0xecd2e8ff
  42ff89:	das    
  42ff8a:	xlat   BYTE PTR ds:[ebx]
  42ff8b:	push   edi
  42ff8c:	inc    ebx
  42ff8d:	jge    0x42ff3c
  42ff8f:	xor    esi,DWORD PTR [esp+esi*4-0x3b]
  42ff93:	les    eax,FWORD PTR [esi-0x6]
  42ff96:	shl    DWORD PTR [edx+0x3dcef945],0xf3
  42ff9d:	mov    WORD PTR [ebx+edi*8+0x48],gs
  42ffa1:	cli    
  42ffa2:	mov    esi,0x2aaf6b18
  42ffa7:	cwde   
  42ffa8:	pop    eax
  42ffa9:	ja     0x430017
  42ffab:	fs inc esi
  42ffad:	test   BYTE PTR [ecx-0x58790c35],ch
  42ffb3:	push   ecx
  42ffb4:	inc    ebx
  42ffb5:	cli    
  42ffb6:	sub    DWORD PTR [ebx],esp
  42ffb8:	int3   
  42ffb9:	clc    
  42ffba:	fist   DWORD PTR [edi+0x5a]
  42ffbd:	push   0x13
  42ffbf:	int3   
  42ffc0:	jae    0x42ff46
  42ffc2:	neg    DWORD PTR [edx+0x46]
  42ffc5:	cli    
  42ffc6:	sbb    esi,ebx
  42ffc8:	inc    edx
  42ffc9:	mov    esi,esp
  42ffcb:	add    edx,0xffffffc7
  42ffce:	dec    di
  42ffd0:	xor    dh,cl
  42ffd2:	pop    esp
  42ffd3:	add    BYTE PTR [edx+0x7c],bl
  42ffd6:	mov    edi,0xc179a4d7
  42ffdb:	mov    ecx,0xaaabc2bf
  42ffe0:	xchg   edi,eax
  42ffe1:	jae    0x42ff67
  42ffe3:	sbb    eax,0x99fa46de
  42ffe8:	fistp  WORD PTR [edi-0x4d]
  42ffeb:	cs retf 0xbf7c
  42ffef:	imul   ah
  42fff1:	add    DWORD PTR [ebx+0x2ef94c29],0x84797929
  42fffb:	sub    eax,0xfa46ce
  430000:	call   0x8cfd:0xfeac7be8
  430007:	test   DWORD PTR [ecx+0x1dfff5b6],ebp
  43000d:	mov    bl,0x13
  43000f:	mov    al,0x2f
  430011:	ds cli 
  430013:	test   ch,bh
  430015:	rol    DWORD PTR [ebx-0xa4bb71c],0x74
  43001c:	xor    al,0xbc
  43001e:	cli    
  43001f:	(bad)  
  430020:	mov    ebp,0xe6f97383
  430025:	retf   0xc0
  430028:	in     eax,dx
  430029:	cmp    eax,0x6d447545
  43002e:	call   FWORD PTR [esi+0x5b]
  430031:	add    eax,0x8afd04bd
  430036:	sub    esp,0x6ee06c00
  43003c:	push   es
  43003d:	in     eax,dx
  43003e:	std    
  43003f:	dec    edx
  430040:	push   esi
  430041:	push   cs
  430042:	sbb    DWORD PTR [esi-0x73],ecx
  430045:	rol    BYTE PTR [ecx],0xb3
  430048:	mov    ebp,0x87fffdad
  43004d:	mov    BYTE PTR [ebx-0x4b51b61e],dh
  430053:	cmc    
  430054:	mov    esi,DWORD PTR [ebx-0x74]
  430057:	cmc    
  430058:	adc    eax,0x3a4fe5
  43005d:	xor    al,0x39
  43005f:	out    dx,al
  430060:	cmp    edi,DWORD PTR [esi+0x7da27e43]
  430066:	std    
  430067:	dec    DWORD PTR [eax+ecx*2+0x6dbeb261]
  43006e:	std    
  43006f:	jmp    edi
  430071:	(bad)  
  430072:	dec    esi
  430073:	cmc    
  430074:	jmp    esi
  430076:	mov    ebx,0x6494ff4a
  43007b:	push   edx
  43007c:	cli    
  43007d:	xor    DWORD PTR [ebx+0x3e943fed],0xd4c3733f
  430087:	mov    edx,0x7adce5f7
  43008c:	lahf   
  43008d:	cmp    DWORD PTR [edx+0x4b],edx
  430090:	push   eax
  430091:	pop    ebx
  430092:	adc    al,0x4c
  430094:	add    edx,DWORD PTR [ebp+0x44fafe57]
  43009a:	(bad)  
  43009b:	inc    esi
  43009c:	add    BYTE PTR [eax],al
  43009e:	mov    eax,ds:0x2c847b11
  4300a3:	ds dec ebx
  4300a5:	cli    
  4300a6:	lods   eax,DWORD PTR fs:[esi]
  4300a8:	(bad)  
  4300a9:	add    edi,DWORD PTR gs:[ebp+0x2bfb4f04]
  4300b0:	scas   al,BYTE PTR es:[edi]
  4300b1:	push   cs
  4300b2:	push   esp
  4300b3:	push   edi
  4300b4:	cmp    DWORD PTR [edi-0x7b84e69f],0xfa4b6c34
  4300be:	inc    esp
  4300bf:	jb     0x4300b2
  4300c1:	jg     0x430069
  4300c3:	pop    ss
  4300c4:	add    al,0x50
  4300c6:	sbb    eax,0x198c4c1c
  4300cb:	scas   eax,DWORD PTR es:[edi]
  4300cc:	inc    edi
  4300cd:	cli    
  4300ce:	mov    ebx,0xf4847ae6
  4300d3:	fisttp DWORD PTR [ebx-0x6]
  4300d6:	inc    esp
  4300d7:	mov    ds:0x978757f1,al
  4300dc:	inc    BYTE PTR [esp+edx*8-0x267916d5]
  4300e3:	sar    DWORD PTR [ecx-0x7d],0xd1
  4300e7:	mov    eax,ds:0x9a83fa47
  4300ec:	jg     0x4300b5
  4300ee:	jnp    0x4300cd
  4300f0:	xchg   ecx,eax
  4300f1:	xchg   edi,eax
  4300f2:	outs   dx,DWORD PTR ds:[esi]
  4300f3:	add    DWORD PTR [edx],esp
  4300f5:	dec    esp
  4300f6:	jae    0x4300c9
  4300f8:	adc    DWORD PTR [esi+0x5e],ecx
  4300fb:	inc    edi
  4300fc:	stos   DWORD PTR es:[edi],eax
  4300fd:	dec    esp
  4300fe:	xchg   esp,eax
  4300ff:	aas    
  430100:	xchg   ebx,eax
  430101:	push   edi
  430102:	add    BYTE PTR [esi+0x16],cl
  430105:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  430106:	icebp  
  430107:	mov    eax,DWORD PTR [eax]
  430109:	shr    DWORD PTR [esi+0x11e9b63e],0x54
  430110:	sub    dh,BYTE PTR [esi+0x2]
  430113:	xchg   esp,eax
  430114:	add    BYTE PTR [ecx-0x57],dh
  430117:	mov    bh,BYTE PTR cs:[ebx]
  43011a:	pop    esp
  43011b:	fimul  WORD PTR [esp+edi*2]
  43011e:	les    ebx,FWORD PTR [ebx]
  430120:	lea    esp,[ebx]
  430122:	pop    esp
  430123:	arpl   WORD PTR [ebp-0x72a49fd5],cx
  430129:	and    edx,DWORD PTR [ebx+edx*2-0x56]
  43012d:	mov    cl,0x79
  43012f:	push   eax
  430130:	cmp    BYTE PTR [eax],bl
  430132:	fdivrp st(1),st
  430134:	shl    BYTE PTR ds:0x9938487d,cl
  43013a:	icebp  
  43013b:	mov    bh,0x13
  43013d:	sub    DWORD PTR [ecx*1+0x130f7cc6],eax
  430144:	mov    ch,0xed
  430146:	or     BYTE PTR [edx-0x70fc1700],dh
  43014c:	test   DWORD PTR [esp+eax*1-0x574fff6c],ecx
  430153:	stos   DWORD PTR es:[edi],eax
  430154:	(bad)  
  430156:	cmp    ch,BYTE PTR [ebx-0x59e917c1]
  43015c:	stc    
  43015d:	mov    bl,0x53
  43015f:	mov    es,WORD PTR [esi+0x94048e]
  430165:	je     0x430128
  430167:	add    BYTE PTR [edi-0x743e9230],al
  43016d:	stos   BYTE PTR es:[edi],al
  43016e:	(bad)  
  43016f:	(bad)  
  430171:	repz scas eax,DWORD PTR es:[edi]
  430173:	call   0x3f57:0xfa2c14de
  43017a:	sub    DWORD PTR [ecx],0x5f
  43017d:	test   BYTE PTR [ecx+ebp*8-0x5b78ff69],dl
  430184:	jecxz  0x43017c
  430186:	mov    esi,0xff85cbf6
  43018b:	call   0x49cf8f27
  430190:	int    0x3a
  430192:	cli    
  430193:	cwde   
  430194:	fisubr WORD PTR [edi+0x4c1dd10f]
  43019a:	cld    
  43019b:	fisub  WORD PTR [ebx-0x62b88c81]
  4301a1:	test   BYTE PTR [edi+0x4f3a5ed2],dl
  4301a7:	je     0x4301bd
  4301a9:	lahf   
  4301aa:	cld    
  4301ab:	mov    esi,0xc14fcf4e
  4301b0:	mov    dh,0x6f
  4301b2:	cli    
  4301b3:	scas   al,BYTE PTR es:[edi]
  4301b4:	adc    al,0x7f
  4301b6:	jae    0x4301f7
  4301b8:	ins    DWORD PTR es:[edi],dx
  4301b9:	test   BYTE PTR [edi+0x4f3a4e9c],bl
  4301bf:	sbb    DWORD PTR [ebx+0x75],0x7f538efa
  4301c6:	jae    0x4301f7
  4301c8:	dec    ebp
  4301c9:	test   BYTE PTR [edi+0x3a4e0080],cl
  4301cf:	dec    edi
  4301d0:	add    DWORD PTR [eax],edx
  4301d2:	aas    
  4301d3:	cli    
  4301d4:	in     eax,0xe6
  4301d6:	mov    eax,DWORD PTR [ecx+ecx*4-0x4605c5a4]
  4301dd:	jmp    0x843a:0x4eb46226
  4301e4:	sub    DWORD PTR [ebx-0x1a],esp
  4301e7:	dec    esi
  4301e8:	add    BYTE PTR [eax],al
  4301ea:	or     DWORD PTR [edx+0x4acac2f9],0x7ebdd553
  4301f4:	inc    edx
  4301f6:	mov    ebp,0xb96b74ba
  4301fb:	adc    DWORD PTR [eax+0x50f5cab4],0xfffffff6
  430202:	inc    eax
  430203:	out    dx,al
  430204:	jmp    FWORD PTR ds:0x9245c032
  43020a:	add    al,0xe8
  43020c:	and    al,0x96
  43020e:	retf   0xfff5
  430211:	mov    eax,0x5515f5cd
  430216:	aaa    
  430217:	cmp    al,BYTE PTR [eax]
  430219:	jnp    0x430226
  43021b:	jne    0x43020d
  43021d:	xor    al,BYTE PTR [eax+eax*2-0xa37bd01]
  430224:	jne    0x43020b
  430226:	(bad)  
  430227:	adc    ebp,DWORD PTR [eax]
  430229:	out    dx,al
  43022a:	inc    ecx
  43022b:	cli    
  43022c:	add    al,0xd8
  43022f:	in     al,0x0
  430231:	add    ch,ch
  430233:	add    DWORD PTR [edi],eax
  430235:	test   dh,dl
  430237:	retf   0xfff5
  43023a:	pusha  
  43023b:	mov    ebp,0xc802fb92
  430240:	dec    edx
  430241:	push   0xffffffec
  430243:	pop    ebx
  430244:	cmc    
  430245:	push   0xfffa81ba
  43024a:	scas   al,BYTE PTR es:[edi]
  43024b:	(bad)  
  43024c:	adc    edx,DWORD PTR [eax-0x22]
  43024f:	inc    ecx
  430250:	cli    
  430251:	test   ch,ch
  430253:	dec    ebp
  430254:	lea    edi,cs:[eax]
  430257:	mov    ah,0xf7
  430259:	push   DWORD PTR [edx]
  43025b:	je     0x4302bf
  43025d:	sub    BYTE PTR [ebp-0x6ba8fbff],0xa4
  430264:	jp     0x4301fd
  430266:	(bad)  
  430267:	into   
  430268:	dec    eax
  430269:	dec    edi
  43026a:	out    0xcf,eax
  43026c:	and    bl,BYTE PTR [ebx-0x7d]
  43026f:	(bad)  
  430270:	jp     0x430231
  430272:	add    BYTE PTR [esi-0x4d],bl
  430275:	mov    WORD PTR [ecx],ds
  430277:	xlat   BYTE PTR ds:[ebx]
  430278:	inc    esi
  430279:	cli    
  43027a:	imul   esi,DWORD PTR [edi-0x4d],0xffffffe7
  43027e:	pop    esi
  43027f:	stos   BYTE PTR es:[edi],al
  430280:	dec    eax
  430281:	cli    
  430282:	adc    bh,ah
  430284:	iret   
  430285:	add    ebx,DWORD PTR [edx+0x64]
  430288:	inc    edi
  430289:	add    BYTE PTR [esi],bl
  43028b:	ins    BYTE PTR es:[edi],dx
  43028c:	inc    edi
  43028d:	pop    edx
  43028e:	loop   0x4302f2
  430290:	xor    eax,0x57a2e1be
  430295:	add    BYTE PTR [eax],0x40
  430298:	mov    ds:0xfa2bfff8,eax
  43029d:	lods   eax,DWORD PTR ds:[esi]
  43029e:	push   edx
  43029f:	adc    DWORD PTR [esi+edi*8+0x56561bf2],edx
  4302a6:	mov    DWORD PTR [ebx],edx
  4302a8:	dec    ebp
  4302a9:	inc    edi
  4302aa:	mov    al,gs:0xfc8d79b4
  4302b0:	jge    0x4302f9
  4302b2:	dec    edi
  4302b3:	pop    ss
  4302b4:	bound  eax,QWORD PTR [edi+0x65]
  4302b7:	xchg   esp,eax
  4302b8:	fmul   QWORD PTR [ecx+0x4765eb5f]
  4302be:	xchg   bh,dl
  4302c0:	mov    cs,WORD PTR [esi-0x12]
  4302c3:	fst    DWORD PTR [ebp+0x2c52bf79]
  4302c9:	jnp    0x43028c
  4302cb:	fs je  0x716a5a7d
  4302d2:	test   BYTE PTR [ebx+esi*4+0x7f44fa47],dl
  4302d9:	add    ebp,DWORD PTR [esi+0x7e61ffab]
  4302df:	jecxz  0x4302ed
  4302e1:	je     0x430326
  4302e3:	pop    ss
  4302e4:	inc    eax
  4302e5:	(bad)  
  4302e7:	ret    0xc240
  4302ea:	jp     0x4302fc
  4302ec:	add    DWORD PTR [ebp+0x48],eax
  4302ef:	jle    0x430279
  4302f1:	sti    
  4302f2:	jae    0x43027e
  4302f4:	shr    al,0x76
  4302f7:	sbb    BYTE PTR [ecx],al
  4302f9:	sub    eax,0xd16e0048
  4302fe:	and    DWORD PTR [eax],esi
  430300:	stc    
  430301:	adc    al,0x6c
  430303:	jle    0x43032e
  430305:	cmp    DWORD PTR [ecx],edx
  430307:	dec    eax
  430308:	jecxz  0x4302b0
  43030a:	call   0x6db3c385
  43030f:	inc    esp
  430310:	cmp    ebx,DWORD PTR [edi-0xb]
  430313:	inc    ebp
  430314:	xchg   BYTE PTR ds:[eax],ch
  430317:	leave  
  430318:	nop
  430319:	xchg   DWORD PTR [edx],esp
  43031b:	mov    bl,0xb3
  43031d:	mov    BYTE PTR [edx+0x638d23c3],dl
  430323:	dec    esp
  430324:	sbb    al,0x3c
  430326:	shl    DWORD PTR [ebx+edi*8+0xe479775],1
  43032d:	xchg   BYTE PTR [eax+0x644128f7],ch
  430333:	inc    esp
  430334:	or     BYTE PTR [ecx],0xf6
  430337:	inc    ebx
  430338:	jne    0x4302c3
  43033a:	arpl   WORD PTR [esp+ebp*8+0x3b],cx
  43033e:	mov    eax,ds:0x9f391879
  430343:	inc    edi
  430344:	(bad)  
  430346:	xchg   ecx,eax
  430347:	das    
  430348:	into   
  430349:	cmc    
  43034a:	mov    WORD PTR [edx-0x699ff76],ss
  430350:	mov    ds:0xba04256c,eax
  430355:	cmp    bh,bh
  430357:	fild   DWORD PTR [ebx-0xf16bff3]
  43035d:	cmp    ebp,DWORD PTR [ebp-0xc68ff56]
  430363:	mov    esi,0x4fca9fd5
  430368:	push   esi
  430369:	test   DWORD PTR [ebx],ecx
  43036b:	pop    gs
  43036d:	xchg   edi,eax
  43036e:	sub    BYTE PTR [edx+0x24],al
  430371:	(bad)  [esi]
  430373:	mov    WORD PTR [eax+edx*4+0x3c],gs
  430377:	cli    
  430378:	ss shl ch,1
  43037b:	mov    eax,0x8c8cd32e
  430380:	and    ecx,edx
  430382:	ss cli 
  430384:	adc    DWORD PTR [ebx+0x6e16fa79],eax
  43038a:	jge    0xfa7689f4
  430390:	push   es
  430391:	or     BYTE PTR [ebp-0x7c9a9401],ah
  430397:	xchg   BYTE PTR [edx],ch
  430399:	rcl    BYTE PTR [edx],1
  43039b:	out    dx,eax
  43039c:	in     al,dx
  43039d:	rol    BYTE PTR [edi+edi*4+0x748d8167],cl
  4303a4:	ror    DWORD PTR [edi],0x6e
  4303a7:	(bad)  
  4303a8:	call   0xdf3f2c44
  4303ad:	push   edx
  4303ae:	mov    WORD PTR ss:[eax+eax*4],gs
  4303b2:	retf   
  4303b3:	xchg   BYTE PTR [edi-0x4e7b73b9],ah
  4303b9:	arpl   WORD PTR [esi],si
  4303bb:	cli    
  4303bc:	sbb    DWORD PTR [eax+0x1d],ecx
  4303bf:	mov    cl,0xa6
  4303c1:	pop    edx
  4303c2:	test   BYTE PTR [edi+0x7b6400ee],bh
  4303c8:	sub    DWORD PTR [ecx-0x56d0f81c],0xffffffe9
  4303cf:	xchg   DWORD PTR [eax+eax*1-0xa34eb],eax
  4303d6:	sub    BYTE PTR [eax-0x3dd50b0e],al
  4303dc:	dec    edx
  4303dd:	push   0x7ffffebc
  4303e2:	cmp    dh,BYTE PTR [eax]
  4303e4:	outs   dx,BYTE PTR ds:[esi]
  4303e5:	adc    ebp,ebp
  4303e7:	inc    BYTE PTR [edx+0x3a2ed935]
  4303ed:	add    al,ch
  4303ef:	sub    dl,0xf8
  4303f2:	fcmovb st,st(2)
  4303f4:	dec    edx
  4303f5:	(bad)  
  4303f6:	lock std 
  4303f8:	sti    
  4303f9:	jmp    FWORD PTR [edx-0x37290a93]
  4303ff:	add    BYTE PTR [edx],0xfe
  430402:	mov    edx,0xf08d4ac2
  430407:	(bad)
  43040a:	stos   BYTE PTR es:[edi],al
  43040b:	ins    DWORD PTR es:[edi],dx
  43040c:	cmc    
  43040d:	(bad)  
  43040e:	call   0x9b420e9b
  430413:	ret    0x9cb2
  430416:	sub    eax,0x7e7fffe
  43041b:	xor    esi,ebp
  43041d:	dec    eax
  43041f:	add    BYTE PTR [edx],0xfe
  430422:	cmp    al,ah
  430424:	dec    edx
  430425:	lea    esi,[eax+0xfff2d4]
  43042b:	jmp    0xf5c3:0xf5858b74
  430432:	call   FWORD PTR [ebp-0x2a0f7c4f]
  430438:	ret    
  430439:	cmc    
  43043a:	push   eax
  43043b:	jbe    0x430438
  43043d:	dec    edx
  43043e:	mov    edi,0xa1
  430443:	push   0xfaf07a89
  430448:	ret    
  430449:	loop   0x43049a
  43044b:	xchg   esp,eax
  43044c:	xchg   ebx,eax
  43044d:	inc    edx
  43044e:	cli    
  43044f:	pop    ss
  430450:	fs out dx,eax
  430452:	test   ah,dl
  430454:	add    esp,edi
  430456:	xchg   dl,dl
  430458:	pop    ss
  430459:	pop    esp
  43045a:	inc    ebp
  43045b:	out    dx,eax
  43045c:	mov    cl,0x44
  43045e:	cmp    BYTE PTR [ecx-0x6bc170d9],cl
  430464:	pop    esp
  430465:	mul    BYTE PTR [ebp-0x6c]
  430468:	(bad)  
  43046a:	jecxz  0x430412
  43046c:	addr16 (bad) 
  43046e:	mov    eax,0xfffe287a
  430473:	adc    DWORD PTR [ebx+eax*1+0x39fa7bf3],ebp
  43047a:	push   DWORD PTR [ebx+0x67]
  43047d:	mov    ch,0x74
  43047f:	ins    DWORD PTR es:[edi],dx
  430480:	mov    ah,BYTE PTR [edi+ebp*4-0x41cac16b]
  430487:	shr    DWORD PTR [esi+0x4b407e57],0x7f
  43048e:	add    BYTE PTR fs:[eax+0x27],cl
  430492:	scas   eax,DWORD PTR es:[edi]
  430493:	xchg   cl,ah
  430495:	xor    ebp,DWORD PTR [esp+ecx*4-0x4d0c9029]
  43049c:	fs call 0xd8:0x318fd94b
  4304a4:	ja     0x4304fd
  4304a6:	fcom   DWORD PTR [ecx]
  4304a8:	or     esp,esp
  4304aa:	daa    
  4304ab:	dec    edi
  4304ac:	sbb    eax,0xd2e74fdc
  4304b1:	mov    BYTE PTR [edx+edi*8+0xf],0x6e
  4304b6:	push   esi
  4304b7:	add    esp,eax
  4304b9:	jns    0x4304fe
  4304bb:	popa   
  4304bc:	pop    ss
  4304bd:	outs   dx,DWORD PTR ds:[esi]
  4304be:	imul   BYTE PTR [ebp-0x7a]
  4304c1:	sahf   
  4304c2:	mov    edi,0xa900190f
  4304c7:	into   
  4304c8:	nop
  4304c9:	fbld   TBYTE PTR [ebx]
  4304cb:	dec    eax
  4304cc:	mov    edx,0x7f436601
  4304d1:	xchg   DWORD PTR [ebx],esp
  4304d3:	dec    eax
  4304d4:	sbb    bh,BYTE PTR [ebx-0xfa98910]
  4304da:	sbb    BYTE PTR [ebp-0x78],al
  4304dd:	sub    al,0xd6
  4304df:	ret    
  4304e0:	stos   DWORD PTR es:[edi],eax
  4304e1:	test   DWORD PTR [ecx],esp
  4304e3:	hlt    
  4304e4:	or     al,0xc3
  4304e6:	dec    eax
  4304e7:	js     0x43053f
  4304e9:	loopne 0x43055a
  4304eb:	mov    esi,0x13a9866f
  4304f0:	in     al,0x37
  4304f2:	repz push ebx
  4304f4:	add    BYTE PTR [ecx+0x46f4e8c0],dl
  4304fa:	push   DWORD PTR [eax+0x660ce7bb]
  430500:	pop    ebx
  430501:	sub    BYTE PTR [esp+eiz*8-0x3d3abf0],0x78
  430509:	xchg   esi,eax
  43050a:	sahf   
  43050b:	ins    DWORD PTR es:[edi],dx
  43050c:	sub    DWORD PTR [ebp+0x3303e901],0xa
  430513:	pop    esi
  430514:	cld    
  430515:	mov    ch,0x8b
  430517:	push   0xe90094e7
  43051c:	fstp   QWORD PTR [esi+edi*4]
  43051f:	or     al,0x78
  430521:	push   0x10
  430523:	repnz sub dl,BYTE PTR [eax]
  430526:	int3   
  430527:	cli    
  430528:	push   ds
  430529:	push   esp
  43052a:	in     al,0xa7
  43052c:	lea    esp,[eax+0x38]
  43052f:	sbb    bl,BYTE PTR ds:[ecx]
  430532:	(bad)  
  430533:	lods   al,BYTE PTR ds:[esi]
  430534:	aad    0x82
  430536:	inc    eax
  430537:	in     al,dx
  430538:	shl    DWORD PTR [ecx+0x1],cl
  43053b:	outs   dx,BYTE PTR ds:[esi]
  43053c:	push   edx
  43053d:	sti    
  43053e:	mov    ds:0x97e3ff,al
  430543:	xchg   DWORD PTR [ecx-0x128bcdf3],edi
  430549:	loope  0x4305c2
  43054b:	out    0x2b,al
  43054d:	and    edi,ebx
  43054f:	xchg   BYTE PTR [edi-0x700f1d88],dh
  430555:	push   edi
  430556:	jge    0x43052f
  430558:	xchg   ecx,eax
  430559:	add    BYTE PTR [edi+0x69],dl
  43055c:	cld    
  43055d:	jle    0x430582
  43055f:	mov    ebp,0xb3506cfb
  430564:	sub    BYTE PTR [edi-0x68],dh
  430567:	add    DWORD PTR [ebp+ecx*1+0xb],esi
  43056b:	mov    ebp,0x758720b
  430570:	repz xor DWORD PTR [ebx-0x405be1c0],ebp
  430577:	mov    dh,0xbf
  430579:	loope  0x4305e2
  43057b:	cmp    dh,BYTE PTR [ebp+esi*1+0x23]
  43057f:	mov    esp,0x3b906207
  430584:	scas   eax,DWORD PTR es:[edi]
  430585:	popa   
  430586:	cdq    
  430587:	add    BYTE PTR [eax],al
  430589:	adc    DWORD PTR [ecx],eax
  43058b:	add    dl,bh
  43058d:	push   ds
  43058e:	and    dh,BYTE PTR [esi+0x5a]
  430591:	mov    bh,0x6a
  430593:	dec    eax
  430594:	mov    ebp,0x86cd97e1
  430599:	adc    eax,0xe46f2b11
  43059e:	xchg   edi,eax
  43059f:	add    BYTE PTR [edi-0x61],cl
  4305a2:	sbb    cl,BYTE PTR [edi+0x52]
  4305a5:	(bad)
  4305aa:	(bad)  
  4305ab:	cmp    ah,BYTE PTR [ecx+0x6a]
  4305ae:	iret   
  4305af:	cld    
  4305b0:	or     ch,BYTE PTR [ebx+0x15]
  4305b3:	aaa    
  4305b4:	cli    
  4305b5:	jmp    0x47dbe9
  4305ba:	in     eax,dx
  4305bb:	add    cl,BYTE PTR [ebp-0xab3ff7b]
  4305c1:	cmc    
  4305c2:	call   DWORD PTR [edi-0x4]
  4305c5:	dec    edi
  4305c6:	(bad)  
  4305c7:	js     0x43055c
  4305c9:	hlt    
  4305ca:	push   DWORD PTR [edx]
  4305cc:	add    ebp,eax
  4305ce:	mov    ecx,0x8b0002c8
  4305d3:	jle    0x4305e1
  4305d5:	jnp    0x43059b
  4305d7:	loope  0x430560
  4305d9:	mov    edx,0xba7dae74
  4305de:	sub    al,0xc2
  4305e0:	mov    ecx,0x63630342
  4305e5:	add    eax,DWORD PTR [eax]
  4305e7:	lods   eax,DWORD PTR ds:[esi]
  4305e8:	xor    DWORD PTR [ebx-0x4],0xffffffcb
  4305ec:	xor    eax,0x7bfa0fc8
  4305f1:	cli    
  4305f2:	(bad)  
  4305f3:	jge    0x43065d
  4305f5:	or     ecx,0x69
  4305f8:	inc    ecx
  4305f9:	test   BYTE PTR [eax],cl
  4305fb:	rol    esp,cl
  4305fd:	jp     0x4305f8
  4305ff:	jl     0x43067c
  430601:	outs   dx,BYTE PTR ds:[esi]
  430602:	mov    ecx,DWORD PTR [eax]
  430604:	or     cl,BYTE PTR [ebp-0xa0c3673]
  43060a:	call   FWORD PTR [ecx+edx*4]
  43060d:	mov    edx,DWORD PTR [eax+0x51f5c277]
  430613:	mov    esi,0x108d02bb
  430618:	mul    dl
  43061a:	jae    0x430631
  43061c:	ret    
  43061d:	cmc    
  43061e:	test   BYTE PTR [ebp+0x6d],bh
  430621:	dec    esi
  430622:	mov    eax,DWORD PTR [eax]
  430624:	or     dh,dh
  430626:	xor    esi,edx
  430628:	stos   BYTE PTR es:[edi],al
  430629:	push   eax
  43062a:	add    DWORD PTR [ebx+0x1d],0x3d1bd2f9
  430631:	xchg   BYTE PTR [ecx+0x16],al
  430634:	xchg   esp,eax
  430635:	or     bh,BYTE PTR [edi]
  430637:	jle    0x430610
  430639:	fist   WORD PTR [eax]
  43063b:	mov    bl,0x8f
  43063d:	jbe    0x430695
  43063f:	push   ss
  430640:	(bad)  [edx-0x63b9fcbf]
  430646:	xchg   edx,eax
  430647:	(bad)  
  430648:	fisub  WORD PTR [esi+0x40]
  43064b:	dec    ebp
  43064c:	pop    ss
  43064d:	push   0x72775007
  430652:	test   eax,0xff8bc04
  430657:	add    BYTE PTR [edx+eiz*4+0x33df845b],dl
  43065e:	adc    eax,0x8b2f5987
  430663:	aaa    
  430664:	mov    esp,0xa3f92e50
  430669:	mov    ds:0x32518734,al
  43066e:	es jmp 0x8583dab5
  430674:	shl    DWORD PTR [edx],1
  430676:	sub    edi,ebp
  430678:	(bad)
  43067b:	pop    ecx
  43067c:	fcomip st,st(0)
  43067e:	inc    ecx
  43067f:	add    edx,DWORD PTR [esp+ecx*4-0x44ea1475]
  430686:	aaa    
  430687:	add    BYTE PTR [eax],al
  430689:	xchg   esp,eax
  43068a:	daa    
  43068b:	rol    DWORD PTR [esi+0x3e8b2bb9],cl
  430691:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430692:	push   cs
  430693:	pop    esp
  430694:	push   ecx
  430695:	scas   eax,DWORD PTR es:[edi]
  430696:	out    0xd8,eax
  430698:	mov    WORD PTR [edi-0x743d1cd3],?
  43069e:	cmc    
  43069f:	ret    
  4306a0:	(bad)  
  4306a1:	push   ss
  4306a2:	(bad)  
  4306a4:	mov    DWORD PTR [ecx-0x737beef5],ebp
  4306aa:	sub    esi,edi
  4306ac:	dec    esp
  4306ae:	add    BYTE PTR [ecx],dh
  4306b0:	mov    eax,0xb830c8c9
  4306b5:	mov    dh,0xc8
  4306b7:	and    BYTE PTR [eax-0x103f7e71],bh
  4306bd:	xchg   ebp,edi
  4306bf:	test   BYTE PTR [ebx-0x4],0x36
  4306c3:	out    0x3,eax
  4306c5:	xchg   esp,eax
  4306c6:	mov    DWORD PTR [ebx],ebp
  4306c8:	or     al,0x1b
  4306ca:	add    BYTE PTR [edx-0x1700ec8d],ch
  4306d0:	add    ebx,DWORD PTR [ebx]
  4306d2:	push   ecx
  4306d3:	nop
  4306d4:	pop    esi
  4306d5:	retf   
  4306d6:	xor    dl,BYTE PTR [ecx-0x17011ed6]
  4306dc:	add    edi,DWORD PTR [edi-0xd730f56]
  4306e2:	daa    
  4306e3:	xor    al,BYTE PTR [ecx-0x52]
  4306e6:	xor    al,0x7f
  4306e8:	push   esp
  4306e9:	xchg   esp,eax
  4306ea:	add    cl,ch
  4306ec:	mov    WORD PTR [eax],es
  4306ee:	shl    BYTE PTR [edi],cl
  4306f0:	cmp    dl,BYTE PTR [edx-0x72]
  4306f3:	xor    al,0xc2
  4306f5:	test   BYTE PTR [ebx+0x7b49d715],al
  4306fb:	icebp  
  4306fc:	inc    esi
  4306fd:	ds jle 0x430688
  430700:	cmp    BYTE PTR [edx+esi*4+0x1c55f610],cl
  430707:	scas   al,BYTE PTR es:[edi]
  430708:	xor    al,0xfc
  43070a:	jno    0x4306ba
  43070c:	jmp    0x430746
  43070e:	inc    ebx
  43070f:	sbb    BYTE PTR [ecx],ch
  430711:	test   BYTE PTR [edx],dl
  430713:	leave  
  430714:	jmp    0x2a229991
  430719:	cmp    BYTE PTR [edi+ecx*8-0x13],bl
  43071d:	dec    edx
  43071e:	leave  
  43071f:	jg     0x430749
  430721:	pop    es
  430722:	(bad)  
  430723:	fild   QWORD PTR ds:0xff1c2aad
  430729:	addr16 nop
  43072b:	add    BYTE PTR [eax],al
  43072d:	bound  esp,QWORD PTR [edi+0x7c]
  430730:	icebp  
  430731:	pop    ebp
  430732:	and    bh,BYTE PTR [ebx+0x44]
  430735:	icebp  
  430736:	push   ds
  430737:	in     al,dx
  430738:	xchg   BYTE PTR [edi-0x30154150],dh
  43073e:	mov    ebx,0x93d1d77d
  430743:	gs cld 
  430745:	mov    esi,0xe900a8b9
  43074a:	xchg   edi,eax
  43074b:	jmp    0x43070a
  43074d:	xor    al,0x8d
  43074f:	mov    DWORD PTR [ecx+eiz*4+0x0],edx
  430753:	jg     0x430756
  430755:	jg     0x430700
  430757:	les    ecx,FWORD PTR [eax+0x36c79144]
  43075d:	stos   DWORD PTR es:[di],eax
  43075f:	xchg   ecx,eax
  430760:	add    BYTE PTR [eax],al
  430762:	je     0x430781
  430764:	add    al,0xfa
  430766:	jle    0x4307d3
  430768:	into   
  430769:	dec    edi
  43076a:	pusha  
  43076b:	mov    ebp,0x63ec8823
  430770:	ss adc al,0x1d
  430773:	stos   BYTE PTR es:[edi],al
  430774:	sar    bh,0x19
  430777:	shl    BYTE PTR [edx-0x43ef1a3d],1
  43077d:	jmp    0x43078f
  43077f:	push   edx
  430780:	(bad)  
  430781:	jns    0x430752
  430783:	and    BYTE PTR [edi+eiz*8+0x73326272],bh
  43078a:	inc    ecx
  43078b:	add    eax,0x89907c1
  430790:	lods   al,BYTE PTR ds:[esi]
  430791:	fbstp  TBYTE PTR [eax+0x5d]
  430794:	pop    ds
  430795:	out    0xed,eax
  430797:	jg     0x4307cd
  430799:	cli    
  43079a:	ins    DWORD PTR es:[edi],dx
  43079b:	fsubr  DWORD PTR [edx+esi*1+0x6efd7b6a]
  4307a2:	add    BYTE PTR [ebx],ch
  4307a4:	imul   edi,edi,0x4b91738a
  4307aa:	lock xchg ebp,eax
  4307ac:	or     esp,esp
  4307ae:	std    
  4307af:	sub    ah,dh
  4307b1:	pop    ds
  4307b2:	push   DWORD PTR [eax-0xc]
  4307b5:	add    DWORD PTR [ebp+0x0],0xf0738fd1
  4307bc:	aad    0xc2
  4307be:	jecxz  0x4307bd
  4307c0:	retf   0xc285
  4307c3:	test   DWORD PTR [edi+esi*2],esp
  4307c6:	or     cl,BYTE PTR [ebx-0x217e2350]
  4307cc:	aad    0x6f
  4307ce:	fdivp  st(5),st
  4307d0:	sub    al,BYTE PTR [esi+0x40460c5b]
  4307d6:	out    dx,al
  4307d7:	push   DWORD PTR [eax-0x10]
  4307da:	add    DWORD PTR [ebp+0x29],0x2eec4b86
  4307e1:	dec    eax
  4307e2:	loop   0x43081c
  4307e4:	es out dx,eax
  4307e6:	xor    DWORD PTR [eax-0x4f],ecx
  4307e9:	jb     0x430786
  4307eb:	jmp    ebx
  4307ed:	out    0x8e,al
  4307ef:	mov    ah,0x28
  4307f1:	repnz push eax
  4307f3:	call   0x3eb203
  4307f8:	lock bnd js 0x43085d
  4307fc:	test   BYTE PTR [eax-0x16],0x89
  430800:	xor    dl,dh
  430802:	mov    eax,DWORD PTR [ebp-0xa0d60]
  430808:	in     al,0x48
  43080a:	push   es
  43080b:	mov    DWORD PTR [eax],ebp
  43080d:	test   BYTE PTR [ecx+0x7b873975],0xfc
  430814:	mov    esi,0x61e8e1bb
  430819:	out    0xfb,al
  43081b:	inc    DWORD PTR [eax]
  43081d:	xchg   esp,eax
  43081e:	sahf   
  43081f:	mov    edi,0xb9a6b20b
  430824:	add    edx,DWORD PTR [esp+esi*4-0x726a99f8]
  43082b:	add    dl,BYTE PTR [ebx+0x2c]
  43082e:	xchg   ecx,eax
  43082f:	(bad)  
  430831:	sbb    ebp,DWORD PTR [edx]
  430833:	add    edi,esi
  430835:	mov    BYTE PTR [ecx],dh
  430837:	test   al,0x0
  430839:	jle    0x430872
  43083b:	mov    DWORD PTR [edx-0x66],eax
  43083e:	imul   DWORD PTR [ebx]
  430840:	inc    edx
  430841:	pop    ecx
  430842:	inc    edx
  430843:	cmp    al,0xe7
  430845:	xor    esp,ebx
  430847:	cmp    al,0xfa
  430849:	jb     0x4307fb
  43084b:	les    edx,FWORD PTR [ecx]
  43084d:	pop    ss
  43084e:	in     eax,0x3f
  430850:	aaa    
  430851:	pop    ss
  430852:	pop    ebx
  430853:	jmp    0x987c:0x865f61fa
  43085a:	or     al,0x78
  43085c:	xchg   BYTE PTR [ecx-0x6d],al
  43085f:	mov    BYTE PTR [esi],bh
  430861:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430862:	mov    bl,BYTE PTR [ebx+0x16]
  430865:	aam    0x46
  430867:	rcr    ebx,0x17
  43086a:	addr16 retf 
  43086c:	or     ch,bl
  43086e:	push   ds
  43086f:	xor    ebx,eax
  430871:	jg     0x4308d3
  430873:	test   al,0xfa
  430875:	shl    DWORD PTR [edx-0x77],0x94
  430879:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43087a:	sar    DWORD PTR [edx+edi*8],1
  43087d:	out    0xa6,al
  43087f:	inc    ebx
  430880:	add    eax,DWORD PTR [eax]
  430882:	in     al,0x6
  430884:	dec    ecx
  430885:	gs xchg edi,eax
  430887:	iret   
  430888:	jmp    0x43088f
  43088a:	xchg   esp,eax
  43088b:	daa    
  43088c:	xchg   edi,ebp
  43088e:	sbb    ecx,esi
  430890:	mov    dl,0xc
  430892:	pop    ebx
  430893:	ins    BYTE PTR es:[edi],dx
  430894:	cs out 0x43,eax
  430897:	add    BYTE PTR [esi+0x3f],dl
  43089a:	dec    esi
  43089b:	daa    
  43089c:	sar    BYTE PTR ds:0xc75d313e,1
  4308a2:	xchg   ebx,eax
  4308a3:	test   eax,edx
  4308a5:	mov    BYTE PTR [ebp+0x28],cl
  4308a8:	pop    es
  4308a9:	das    
  4308aa:	sub    eax,0x3b5c6e31
  4308af:	ja     0x4308ee
  4308b1:	aas    
  4308b2:	push   ds
  4308b3:	xor    DWORD PTR [ebx+0x33],esi
  4308b6:	sti    
  4308b7:	inc    eax
  4308b8:	xchg   ebp,eax
  4308b9:	ds push cs
  4308bb:	xchg   BYTE PTR [ebp-0x2e3273d8],ah
  4308c1:	mov    dh,0x93
  4308c3:	sub    BYTE PTR [ebp+0x2130ee38],dh
  4308c9:	fiadd  WORD PTR [edx+0x47]
  4308cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4308cd:	or     edx,DWORD PTR [ebx+ecx*8+0x24142f5d]
  4308d4:	nop
  4308d5:	add    dl,BYTE PTR [eax+eax*1-0x7a9929ca]
  4308dc:	sbb    ecx,DWORD PTR [ebx+ebx*1]
  4308df:	xor    BYTE PTR [ebp+0x4],bl
  4308e2:	mov    edi,0x25c6f
  4308e7:	xchg   esp,eax
  4308e8:	add    BYTE PTR [esi+edx*8-0x59],dh
  4308ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4308ed:	jecxz  0x4308ca
  4308ef:	sbb    al,BYTE PTR [edx-0x80]
  4308f2:	mov    ch,0x4b
  4308f4:	xor    ch,BYTE PTR [ecx-0x79]
  4308f7:	push   ebx
  4308f8:	add    BYTE PTR [ebp+0x59],ch
  4308fb:	xchg   esp,eax
  4308fc:	add    cl,ch
  4308fe:	mov    BYTE PTR [eax+0x7bc3faec],ah
  430904:	call   0xebd0:0x34d88ee4
  43090b:	out    0xc0,al
  43090d:	call   0xff9767e5
  430912:	imul   edx,ebx,0xb2984fb
  430918:	sbb    BYTE PTR [esi-0x14],ah
  43091b:	sbb    al,ch
  43091d:	repz xchg ecx,eax
  43091f:	inc    edi
  430920:	mov    bl,0x3f
  430922:	jmp    0x6b11348e
  430927:	(bad)  
  430929:	test   BYTE PTR [ecx],ch
  43092b:	cwde   
  43092c:	test   DWORD PTR [ecx-0x72ff6817],edx
  430932:	ins    BYTE PTR es:[edi],dx
  430933:	and    ebp,DWORD PTR [ebx]
  430935:	cli    
  430936:	out    dx,al
  430937:	out    0x27,al
  430939:	xor    esi,DWORD PTR [esi+ecx*8]
  43093c:	sub    al,BYTE PTR [ebx+0x61b644a9]
  430942:	push   0x7d
  430944:	repz cli 
  430946:	into   
  430947:	scas   eax,DWORD PTR es:[edi]
  430948:	sub    eax,0x1700f573
  43094d:	ins    DWORD PTR es:[edi],dx
  43094e:	aaa    
  43094f:	mov    esi,0xe67a2a9f
  430954:	or     esi,DWORD PTR [eax-0x1a]
  430957:	push   es
  430958:	imul   BYTE PTR [esi+0x2a8eddbc]
  43095e:	cli    
  43095f:	test   BYTE PTR [edi+edx*1],0x66
  430963:	stc    
  430964:	or     al,0x85
  430966:	cmp    ecx,DWORD PTR [esi+0x114f2a6f]
  43096c:	add    BYTE PTR [edx+0x3e5ee93f],dh
  430972:	jle    0x430921
  430974:	mov    WORD PTR [ebx],?
  430976:	xlat   BYTE PTR ds:[ebx]
  430977:	rcl    edi,cl
  430979:	sub    DWORD PTR [edi-0x40216dae],edi
  43097f:	fdiv   DWORD PTR gs:[ebx-0x78689dc8]
  430986:	jg     0x4309e9
  430988:	cdq    
  430989:	add    BYTE PTR [eax],al
  43098b:	add    al,ah
  43098d:	cmp    esi,ebp
  43098f:	mov    DWORD PTR [eax],esi
  430991:	fild   DWORD PTR [ecx-0x21be55f8]
  430997:	dec    esp
  430998:	or     BYTE PTR [ebx-0x6],al
  43099b:	mov    BYTE PTR [eax],ch
  43099d:	out    0x83,eax
  43099f:	leave  
  4309a0:	xor    ch,BYTE PTR [edi+0x32d0133]
  4309a6:	div    DWORD PTR [ecx+0x5d1]
  4309ac:	mov    al,ds:0x6ade39
  4309b1:	sub    al,0x54
  4309b3:	dec    edx
  4309b4:	call   0x3ef471
  4309b9:	xchg   esp,eax
  4309ba:	or     al,BYTE PTR [ecx]
  4309bc:	add    ch,bh
  4309be:	ja     0x430a03
  4309c0:	hlt    
  4309c1:	retf   
  4309c2:	push   esp
  4309c3:	add    DWORD PTR [edi],0xfffaadd4
  4309c9:	std    
  4309ca:	jge    0x4309c9
  4309cc:	(bad)  
  4309cd:	ins    DWORD PTR es:[edi],dx
  4309ce:	xchg   edi,edi
  4309d0:	(bad)  
  4309d1:	in     eax,dx
  4309d2:	ja     0x430a27
  4309d4:	mov    ebp,0x8b522357
  4309d9:	xor    ebx,ebx
  4309db:	(bad)  
  4309dc:	dec    edi
  4309dd:	repz jmp 0xaef5ca61
  4309e3:	repz add BYTE PTR [ebp+0x50056202],ch
  4309ea:	inc    eax
  4309eb:	out    dx,al
  4309ec:	push   eax
  4309ed:	and    BYTE PTR [eax-0x4e],al
  4309f0:	push   eax
  4309f1:	and    dl,BYTE PTR [eax]
  4309f3:	xor    BYTE PTR [esi],dl
  4309f5:	ins    DWORD PTR es:[edi],dx
  4309f6:	add    al,0x83
  4309f8:	pop    es
  4309f9:	inc    cl
  4309fb:	inc    BYTE PTR [edx+0x335005b9]
  430a01:	(bad)  
  430a02:	js     0x430987
  430a04:	sub    al,0x94
  430a06:	aad    0x35
  430a08:	cli    
  430a09:	sbb    eax,0x6bf9e29d
  430a0e:	(bad)  
  430a0f:	es stos DWORD PTR es:[edi],eax
  430a11:	jge    0x430a01
  430a13:	xor    eax,0x91a80065
  430a18:	xchg   DWORD PTR [esp+ecx*1-0x33],ecx
  430a1c:	jg     0x430a49
  430a1e:	dec    edx
  430a1f:	out    0x35,eax
  430a21:	out    0x36,eax
  430a23:	add    dh,BYTE PTR [edi]
  430a25:	cli    
  430a26:	jl     0x430a9c
  430a28:	jbe    0x430a34
  430a2a:	sbb    bh,ch
  430a2c:	(bad)  
  430a2d:	call   DWORD PTR [edi+edi*1-0x596c4a29]
  430a34:	pusha  
  430a35:	call   FWORD PTR [ebx]
  430a37:	sbb    cl,dl
  430a39:	and    DWORD PTR ds:[ebp+0x500a864e],ecx
  430a40:	(bad)  
  430a41:	xor    al,0x3
  430a43:	dec    edi
  430a44:	add    BYTE PTR [esp+eax*8+0x44fa3855],0xcc
  430a4c:	mov    ebp,0x16d5fc13
  430a51:	sti    
  430a52:	jecxz  0x430a72
  430a54:	jo     0x430aa2
  430a56:	pop    ds
  430a57:	ret    0x5601
  430a5a:	popf   
  430a5b:	aad    0xeb
  430a5d:	std    
  430a5e:	retf   
  430a5f:	pop    ss
  430a60:	mov    eax,eax
  430a62:	pop    ss
  430a63:	nop
  430a64:	lahf   
  430a65:	jae    0x430aca
  430a67:	inc    edx
  430a68:	inc    esp
  430a69:	jae    0x430ab2
  430a6b:	inc    edx
  430a6c:	inc    esp
  430a6d:	jae    0x430ad9
  430a6f:	push   edx
  430a70:	inc    esp
  430a71:	jae    0x430ad1
  430a73:	call   0xbdeb:0x5320592b
  430a7a:	add    BYTE PTR [eax],cl
  430a7c:	cli    
  430a7d:	in     al,dx
  430a7e:	mov    ebp,0xd1c30101
  430a83:	sar    DWORD PTR [ecx-0x5d],cl
  430a86:	or     edx,DWORD PTR [ebx]
  430a88:	add    BYTE PTR [edx+0x74],dl
  430a8b:	pop    ss
  430a8c:	(bad)  
  430a8d:	call   0xd1fd8695
  430a92:	cmp    DWORD PTR [esi+0x19],ebx
  430a95:	scas   al,BYTE PTR es:[edi]
  430a96:	sbb    eax,0x67
  430a99:	in     eax,0xae
  430a9b:	xlat   BYTE PTR ds:[ebx]
  430a9c:	jns    0x430a41
  430a9e:	or     edx,DWORD PTR [ebx]
  430aa0:	add    BYTE PTR [ebx-0x187c0c74],bh
  430aa6:	add    edx,DWORD PTR [eax+ebx*1+0x2d2db2eb]
  430aad:	std    
  430aae:	repnz adc al,bl
  430ab1:	lock shl DWORD PTR [edx-0x37790fc0],1
  430ab8:	push   0x2d87ce00
  430abd:	jmp    0xcfc4b5ee
  430ac2:	lahf   
  430ac3:	xchg   edi,esi
  430ac5:	or     eax,0x6115804e
  430aca:	into   
  430acb:	add    ebx,DWORD PTR [ecx]
  430acd:	in     eax,0x8b
  430acf:	dec    eax
  430ad0:	xor    cl,al
  430ad2:	scas   al,BYTE PTR es:[edi]
  430ad3:	repz aad 0x6d
  430ad6:	scas   al,BYTE PTR es:[edi]
  430ad7:	xchg   ebx,eax
  430ad8:	sub    DWORD PTR [edx+0x3776bc0b],0xccce0039
  430ae2:	inc    edx
  430ae3:	(bad)  
  430ae5:	inc    ecx
  430ae6:	in     al,0x3
  430ae8:	popa   
  430ae9:	jns    0x430a6f
  430aeb:	test   BYTE PTR [edi+0x67276727],dh
  430af1:	add    ecx,ebp
  430af3:	add    eax,DWORD PTR [esi-0x66]
  430af6:	call   0xffbea6a8
  430afb:	sub    al,0x74
  430afd:	cld    
  430afe:	out    0x89,eax
  430b00:	and    BYTE PTR [edi],0xfa
  430b03:	jb     0x430b37
  430b05:	add    al,0x87
  430b07:	out    0x8,eax
  430b09:	les    eax,FWORD PTR [ebx]
  430b0b:	pusha  
  430b0c:	pop    ebx
  430b0d:	loopne 0x430b1a
  430b0f:	bound  ebx,QWORD PTR [edi+0x4]
  430b12:	jg     0x430ac5
  430b14:	arpl   WORD PTR [edi],sp
  430b16:	mov    BYTE PTR [ebp-0x5e7a03c5],ch
  430b1c:	fwait
  430b1d:	stos   DWORD PTR es:[edi],eax
  430b1e:	pop    edi
  430b1f:	loope  0x430ab8
  430b21:	js     0x430b6e
  430b23:	int    0x93
  430b25:	add    BYTE PTR [edi-0x14],0xf
  430b29:	mov    eax,0xfa20fc23
  430b2e:	xchg   BYTE PTR [ecx-0x32bc8679],ch
  430b34:	jg     0x430abb
  430b36:	enter  0x9575,0x83
  430b3a:	add    BYTE PTR [ebx-0x11f0d86a],al
  430b40:	inc    esp
  430b41:	add    BYTE PTR [ebp-0x80bffd3],cl
  430b47:	out    0x6e,eax
  430b49:	mov    ebp,0xc03ffa26
  430b4e:	mov    edi,0x7ca3ccb0
  430b53:	jae    0x430b62
  430b55:	nop
  430b56:	sbb    dl,dl
  430b58:	cli    
  430b59:	mov    ds:0xeaa92e26,al
  430b5e:	and    ah,0xc
  430b61:	push   esi
  430b62:	(bad)  
  430b63:	(bad)  
  430b64:	cmp    ecx,DWORD PTR [edi]
  430b66:	sbb    BYTE PTR [eax+0x3a],dl
  430b69:	retf   0x86ce
  430b6c:	xchg   ecx,eax
  430b6d:	pop    ds
  430b6e:	mov    edi,0x65738103
  430b73:	cli    
  430b74:	add    BYTE PTR [edx],bl
  430b76:	js     0x430be5
  430b78:	add    al,0x2e
  430b7a:	popa   
  430b7b:	test   BYTE PTR [eax],0xf8
  430b7e:	push   edx
  430b7f:	push   es
  430b80:	push   ebx
  430b81:	cli    
  430b82:	adc    esp,ebp
  430b84:	adc    ch,BYTE PTR ds:0xf00682ff
  430b8a:	les    ebp,FWORD PTR [esi+0x11]
  430b8d:	neg    BYTE PTR [edx-0x2]
  430b90:	sbb    BYTE PTR [ebx-0x25fc8bfc],0x41
  430b97:	test   BYTE PTR [ebx+0x754800b3],0x8f
  430b9e:	dec    edi
  430b9f:	cmc    
  430ba0:	adc    eax,0x400e8d
  430ba5:	lods   al,BYTE PTR ds:[esi]
  430ba6:	imul   esi,esi,0xff2c00c2
  430bac:	push   DWORD PTR [ebp+0x36]
  430baf:	jbe    0x430bfc
  430bb1:	or     BYTE PTR [eax-0x59bb9143],dh
  430bb7:	add    eax,0xf7073ce3
  430bbc:	out    0xb7,eax
  430bbe:	int    0xe9
  430bc0:	cmc    
  430bc1:	mov    ebx,DWORD PTR [eax]
  430bc3:	test   DWORD PTR [edx+0x6edd70f0],0x4e046724
  430bcd:	push   0x3cd80b
  430bd2:	je     0x430be9
  430bd4:	mov    DWORD PTR [esi-0xf],edi
  430bd7:	jne    0x430c4e
  430bd9:	add    al,0x45
  430bdb:	add    al,0x0
  430bdd:	or     BYTE PTR [ebp-0x555072a],bh
  430be3:	icebp  
  430be4:	jle    0x430ba6
  430be6:	mov    al,ds:0x67e84e0e
  430beb:	scas   eax,DWORD PTR es:[edi]
  430bec:	sti    
  430bed:	call   DWORD PTR [esp+ebx*4-0x61638cab]
  430bf4:	std    
  430bf5:	xchg   bh,cl
  430bf7:	push   cs
  430bf8:	add    eax,0xd20a84fb
  430bfd:	push   esi
  430bfe:	pop    ebp
  430bff:	push   esi
  430c00:	cli    
  430c01:	jmp    eax
  430c03:	sahf   
  430c04:	and    bh,BYTE PTR [esi+0x70]
  430c07:	xor    al,0xcd
  430c09:	cs pop edi
  430c0b:	jb     0x430bd6
  430c0d:	xchg   BYTE PTR [eax],al
  430c0f:	mov    eax,gs:0xd6affbd7
  430c15:	stos   BYTE PTR es:[edi],al
  430c16:	adc    al,0xd
  430c18:	pop    ebp
  430c19:	sub    ah,bh
  430c1b:	pop    ebp
  430c1c:	pusha  
  430c1d:	xor    edx,edi
  430c1f:	mov    esi,0x4c448b18
  430c24:	ds push es
  430c26:	(bad)  
  430c27:	(bad)  [ebx]
  430c29:	iret   
  430c2a:	out    0x90,al
  430c2c:	lea    eax,[ebx]
  430c2e:	dec    edi
  430c2f:	(bad)  
  430c30:	sahf   
  430c31:	mov    edi,0xcd66c707
  430c36:	out    0x4b,eax
  430c38:	sbb    eax,0xffffe
  430c3d:	div    dh
  430c3f:	mov    BYTE PTR [edx+0x26],bh
  430c42:	int    0x6c
  430c44:	sbb    dh,BYTE PTR [esi+ebp*1]
  430c47:	out    0x60,al
  430c49:	mov    ecx,DWORD PTR [esi]
  430c4b:	xchg   esp,eax
  430c4c:	pop    ss
  430c4d:	sub    esi,eax
  430c4f:	pop    ds
  430c50:	pop    ebx
  430c51:	jle    0x430c10
  430c53:	or     al,0xe
  430c55:	add    al,0x0
  430c57:	inc    esi
  430c58:	inc    edx
  430c59:	jmp    0x317ec045
  430c5e:	cli    
  430c5f:	sbb    eax,0xd73637dd
  430c64:	fprem  
  430c66:	aaa    
  430c67:	popa   
  430c68:	add    ch,dh
  430c6a:	scas   eax,DWORD PTR es:[edi]
  430c6b:	test   DWORD PTR [ebp+0x31],esi
  430c6e:	mov    ah,0x1a
  430c70:	aaa    
  430c71:	and    BYTE PTR [edi-0x76d62100],0x9e
  430c78:	and    ch,BYTE PTR [eax]
  430c7a:	fidiv  DWORD PTR [ecx+0x14267575]
  430c80:	retf   
  430c81:	cmp    eax,0xc81900fc
  430c86:	mov    esp,0x74050534
  430c8b:	ret    0xf9d3
  430c8e:	xchg   ecx,eax
  430c8f:	or     al,0x67
  430c91:	inc    edi
  430c92:	in     eax,dx
  430c93:	dec    edx
  430c94:	fcmovu st,st(5)
  430c96:	and    bl,dl
  430c98:	pop    esi
  430c99:	mov    bl,0xf0
  430c9b:	xchg   ch,dl
  430c9d:	clc    
  430c9e:	push   eax
  430c9f:	lock ret 0x3129
  430ca3:	mov    DWORD PTR [esi+0x18],eax
  430ca6:	adc    al,0x5d
  430ca8:	inc    eax
  430ca9:	sub    DWORD PTR [ebp-0x41],ebp
  430cac:	aas    
  430cad:	leave  
  430cae:	mov    edx,0xe03e5cd8
  430cb3:	add    eax,ecx
  430cb5:	jne    0x430cb3
  430cb7:	xor    BYTE PTR [edi],0x28
  430cba:	sub    BYTE PTR gs:[edi+0x78],bh
  430cbe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430cbf:	fbld   TBYTE PTR [edi+0x75d128ed]
  430cc5:	ja     0x430c6b
  430cc7:	fistp  WORD PTR [ebp+ebp*8-0x2fbc3243]
  430cce:	jecxz  0x430cd3
  430cd0:	xchg   esp,eax
  430cd1:	ror    DWORD PTR [edx-0x75],1
  430cd4:	push   edi
  430cd5:	in     al,0x5
  430cd7:	add    BYTE PTR ds:[edi-0x1c],dl
  430cdb:	repnz add ecx,DWORD PTR ds:0x1d1404cc
  430ce2:	int3   
  430ce3:	dec    DWORD PTR [esp+eiz*4]
  430ce6:	ds inc ebx
  430ce8:	add    eax,0x24870099
  430ced:	mov    BYTE PTR [ecx+0x15b99102],al
  430cf3:	stc    
  430cf4:	xchg   esi,eax
  430cf5:	sub    ebp,DWORD PTR [ecx+0xa]
  430cf8:	gs pop ss
  430cfa:	sub    edx,edi
  430cfc:	jmp    0xe4a90cee
  430d01:	sbb    al,ah
  430d03:	and    eax,ecx
  430d05:	addr16 jg 0x430d4c
  430d08:	(bad)  ds:0x2de96828
  430d0e:	add    al,0xe8
  430d10:	jmp    0x430d84
  430d12:	sub    dl,bh
  430d14:	bound  esp,QWORD PTR [edi-0x1c210e84]
  430d1a:	test   BYTE PTR [eax],0xe9
  430d1d:	xchg   edi,eax
  430d1e:	cwde   
  430d1f:	xchg   edx,ebx
  430d21:	xchg   edi,eax
  430d22:	add    bl,bh
  430d24:	(bad)  
  430d25:	jg     0x430cee
  430d27:	out    0x2f,al
  430d29:	mov    BYTE PTR [esi-0x9],bh
  430d2c:	push   0xffffff80
  430d2e:	add    BYTE PTR [ebp-0x10],bh
  430d31:	jg     0x430cf0
  430d33:	mov    ds:0xc27e6014,al
  430d38:	add    ch,BYTE PTR ds:0x79797f
  430d3e:	or     al,0x3b
  430d40:	out    0x4b,eax
  430d42:	pop    esp
  430d43:	sub    bh,dl
  430d45:	(bad)  
  430d46:	adc    al,0x30
  430d48:	add    ebx,esi
  430d4a:	adc    eax,0x97e8ff4a
  430d4f:	jne    0x430d93
  430d51:	in     eax,0xc7
  430d53:	sub    dl,BYTE PTR [esi*8-0x3f003f7e]
  430d5a:	sti    
  430d5b:	(bad)  
  430d5c:	cld    
  430d5d:	add    dl,dl
  430d5f:	das    
  430d60:	mov    edx,0x16189189
  430d65:	inc    eax
  430d66:	ds aam 0xf5
  430d69:	jne    0x430d56
  430d6b:	icebp  
  430d6c:	ds and al,0xc2
  430d6f:	xor    DWORD PTR [esi+0x24],0xffffffc2
  430d73:	inc    BYTE PTR [esi]
  430d75:	or     BYTE PTR [esi+0x14fff5f3],0xa9
  430d7c:	cli    
  430d7d:	jmp    FWORD PTR [ebp+0x1583ba2e]
  430d83:	std    
  430d84:	push   es
  430d85:	mov    esp,ss
  430d87:	cld    
  430d88:	(bad)  
  430d89:	push   esi
  430d8b:	inc    eax
  430d8c:	push   ds
  430d8d:	sbb    al,0x6
  430d8f:	outs   dx,BYTE PTR ds:[esi]
  430d90:	or     al,BYTE PTR [ebp-0x7d069735]
  430d96:	mov    ebx,0x79568b20
  430d9b:	or     eax,DWORD PTR [ebx-0x35]
  430d9e:	shl    bl,cl
  430da0:	pusha  
  430da1:	add    DWORD PTR [eax],0xffffffe5
  430da4:	clc    
  430da5:	push   es
  430da6:	mov    bh,0x85
  430da8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  430da9:	jbe    0x430dcf
  430dab:	gs js  0x430d7f
  430dae:	je     0x430dd9
  430db0:	adc    al,0x18
  430db2:	jne    0x430dfe
  430db4:	jle    0x430dee
  430db6:	add    BYTE PTR [ecx],cl
  430db8:	sub    eax,0x1f113b60
  430dbd:	sbb    DWORD PTR [edi+0x46],esi
  430dc0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  430dc1:	ds and al,0xe9
  430dc4:	add    DWORD PTR [edi+0x3bbdfedf],ebp
  430dca:	add    cl,bh
  430dcc:	mov    ds:0x5a9676fa,al
  430dd1:	cmp    edi,0x49
  430dd4:	test   DWORD PTR [ecx-0x73],0x17e7cd94
  430ddb:	adc    ebp,ebx
  430ddd:	out    0x13,eax
  430ddf:	in     al,dx
  430de0:	add    al,0x5f
  430de2:	cld    
  430de3:	shl    DWORD PTR [ecx-0x6b53dc56],cl
  430de9:	ds je  0x430d85
  430dec:	pop    edi
  430ded:	ret    0x8a23
  430df0:	sbb    BYTE PTR [ecx+0x19],bh
  430df3:	pop    ds
  430df4:	or     eax,0xa0bc1be8
  430df9:	push   0x2efea3fc
  430dfe:	inc    ebx
  430dff:	jo     0x430e39
  430e01:	jle    0x430e7e
  430e03:	mov    eax,0x74fe15
  430e08:	mov    ecx,0xb87beaf5
  430e0d:	cmp    bh,ch
  430e0f:	and    DWORD PTR [ebx-0x62],0x2d
  430e13:	cli    
  430e14:	pop    ds
  430e15:	pop    esp
  430e16:	loop   0x430e27
  430e18:	pop    ds
  430e19:	pop    ebp
  430e1a:	push   cs
  430e1b:	mov    DWORD PTR [ebp+0xf13c7a2],edx
  430e21:	ins    BYTE PTR es:[edi],dx
  430e22:	loop   0x430e37
  430e24:	sbb    eax,0xeb006e30
  430e29:	(bad)  
  430e2a:	leave  
  430e2b:	xchg   BYTE PTR [ecx],bh
  430e2d:	jne    0x430e73
  430e2f:	sete   BYTE PTR [edi]
  430e32:	mov    esi,0x2e0731a1
  430e37:	jae    0x430ea9
  430e39:	daa    
  430e3a:	push   ss
  430e3b:	arpl   dx,si
  430e3d:	hlt    
  430e3e:	sub    eax,0x2813542d
  430e43:	push   esp
  430e44:	pop    ds
  430e45:	hlt    
  430e46:	ror    DWORD PTR [esi+0x1f],cl
  430e49:	adc    BYTE PTR [edx+0x44],bh
  430e4c:	nop
  430e4d:	inc    esi
  430e4e:	jne    0x430e4f
  430e50:	repz add ah,bl
  430e53:	leave  
  430e54:	in     eax,dx
  430e55:	and    eax,0x7cefc770
  430e5a:	test   al,0xb7
  430e5c:	xchg   edi,eax
  430e5d:	icebp  
  430e5e:	test   al,0x1d
  430e60:	pop    eax
  430e61:	int    0x50
  430e63:	hlt    
  430e64:	shl    BYTE PTR ds:0x56a31be8,cl
  430e6a:	mov    bl,0x31
  430e6c:	add    BYTE PTR [eax],bl
  430e6e:	inc    ecx
  430e6f:	xor    al,0x2
  430e71:	xor    bh,bh
  430e73:	mov    eax,ds:0x2018afb7
  430e78:	hlt    
  430e79:	scas   al,BYTE PTR es:[edi]
  430e7a:	and    eax,0x2ba2c5d
  430e7f:	(bad)  
  430e80:	xor    BYTE PTR [eax],dl
  430e82:	es sti 
  430e84:	pop    es
  430e85:	ret    
  430e86:	inc    eax
  430e87:	(bad)  
  430e88:	xlat   BYTE PTR ds:[ebx]
  430e89:	adc    al,BYTE PTR [ecx]
  430e8b:	pop    esi
  430e8c:	test   BYTE PTR [edi],cl
  430e8e:	(bad)  
  430e8f:	call   0x7013f497
  430e94:	(bad)  
  430e95:	outs   dx,DWORD PTR ds:[esi]
  430e96:	jns    0x430e3b
  430e98:	jmp    FWORD PTR ds:0x9403dbf0
  430e9e:	into   
  430e9f:	pop    ebp
  430ea0:	inc    ecx
  430ea1:	jae    0x430e3b
  430ea3:	mov    al,0x31
  430ea5:	dec    esi
  430ea6:	jl     0x430ed0
  430ea8:	mov    eax,0x7cf52570
  430ead:	sar    al,1
  430eaf:	mov    esi,0xf03fbb04
  430eb4:	int3   
  430eb5:	cmp    eax,DWORD PTR [ebp+0x252e30d8]
  430ebb:	fwait
  430ebc:	das    
  430ebd:	sbb    cl,bl
  430ebf:	clc    
  430ec0:	fnstenv [ecx-0x21835f2c]
  430ec6:	pop    ss
  430ec7:	ins    DWORD PTR es:[edi],dx
  430ec8:	mov    ebp,0x6cff250d
  430ecd:	pop    eax
  430ece:	lods   al,BYTE PTR ds:[esi]
  430ecf:	or     esp,DWORD PTR [edx+0x0]
  430ed2:	lea    ebx,[esi+0x2a547200]
  430ed8:	bndldx bnd2,[eax+0x1e]
  430edc:	std    
  430edd:	popa   
  430ede:	dec    esp
  430edf:	(bad)  
  430ee0:	pop    edx
  430ee1:	xor    bl,BYTE PTR [edi-0x1516f49d]
  430ee7:	jge    0x430ed4
  430ee9:	sbb    BYTE PTR [ecx+0x25],cl
  430eec:	test   DWORD PTR [eax+eax*8],esp
  430eef:	into   
  430ef0:	push   edx
  430ef1:	bound  ebp,QWORD PTR [edi]
  430ef3:	jns    0x430ef5
  430ef5:	jmp    0xe5a8e091
  430efa:	fbstp  TBYTE PTR [ebx+0x54]
  430efd:	xchg   ebp,eax
  430efe:	jg     0x430f7c
  430f00:	inc    ebp
  430f01:	(bad)  
  430f02:	cmp    DWORD PTR fs:[edi+0x7ca38afd],0x2aac977d
  430f0d:	push   0xe4ff2832
  430f12:	mul    DWORD PTR [ebx]
  430f14:	jno    0x430f25
  430f16:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  430f17:	lods   al,BYTE PTR ds:[esi]
  430f18:	sti    
  430f19:	push   ecx
  430f1a:	push   cs
  430f1b:	push   ebp
  430f1c:	cld    
  430f1d:	push   esi
  430f1e:	loopne 0x430f33
  430f20:	test   BYTE PTR [edi+0x23],dl
  430f23:	or     al,0x87
  430f25:	lods   al,BYTE PTR ds:[esi]
  430f26:	cmp    DWORD PTR [edx+0x4c],0xfffffff1
  430f2a:	ins    BYTE PTR es:[edi],dx
  430f2b:	jnp    0x430efe
  430f2d:	inc    ecx
  430f2e:	pop    ebp
  430f2f:	mov    esi,0x64132ef9
  430f34:	je     0x430f2d
  430f36:	add    BYTE PTR [ebp+0x1c],cl
  430f39:	dec    sp
  430f3b:	jp     0x430f63
  430f3d:	sub    eax,0xc8ca4429
  430f42:	sub    edx,DWORD PTR [ebx+0x40008700]
  430f48:	aam    0x87
  430f4a:	inc    ebx
  430f4b:	icebp  
  430f4c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  430f4d:	sub    DWORD PTR [eax-0x7416fb14],esi
  430f53:	in     eax,dx
  430f54:	lock stos BYTE PTR es:[edi],al
  430f56:	mov    esp,?
  430f58:	(bad)  
  430f59:	dec    DWORD PTR [ecx+eiz*4+0x7d680218]
  430f60:	imul   edi,edx,0x57f857ff
  430f66:	call   0x3b7655
  430f6b:	xor    DWORD PTR [ebp+eax*1-0x141126b],edi
  430f72:	jmp    DWORD PTR [eax+0x983e6a7]
  430f78:	xor    eax,0x7bbac083
  430f7d:	mov    BYTE PTR [eax],0xad
  430f80:	inc    DWORD PTR [esi+esi*8+0xbe7bba]
  430f87:	jge    0x430f88
  430f89:	cmp    BYTE PTR [eax],0xb0
  430f8c:	dec    esi
  430f8d:	cmp    DWORD PTR [eax-0x7f],edx
  430f90:	stc    
  430f91:	mov    WORD PTR [ebp-0x47],cs
  430f94:	dec    ebp
  430f95:	fs add al,ch
  430f98:	inc    ecx
  430f99:	rcl    BYTE PTR [ecx+0x0],cl
  430f9c:	lds    eax,FWORD PTR [eax]
  430f9e:	retf   0xcaff
  430fa1:	jns    0x430f5d
  430fa3:	jne    0x431017
  430fa5:	mov    esi,esi
  430fa7:	jmp    0x430bcd
  430fac:	mov    esi,0xb20f05d7
  430fb1:	mov    edx,edi
  430fb3:	jmp    FWORD PTR ds:0x319d1ed2
  430fb9:	out    dx,al
  430fba:	cmp    al,0x0
  430fbc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  430fbd:	cmp    al,0x2
  430fbf:	and    eax,0xfba88a94
  430fc4:	ja     0x430fc4
  430fc6:	test   eax,0x15155486
  430fcb:	js     0x430fe4
  430fcd:	cmp    edi,esi
  430fcf:	out    0x8a,al
  430fd1:	sbb    dh,BYTE PTR [ecx+0x3f]
  430fd4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430fd5:	(bad)  
  430fd6:	cdq    
  430fd7:	or     ch,BYTE PTR [ebx]
  430fd9:	(bad)  ds:0x71127ce7
  430fdf:	inc    edi
  430fe0:	nop
  430fe1:	inc    ebx
  430fe2:	inc    ebx
  430fe3:	std    
  430fe4:	addr16 sbb edi,ecx
  430fe7:	mov    dl,0x54
  430fe9:	inc    ebp
  430fea:	adc    eax,0x43581f58
  430fef:	out    0x97,eax
  430ff1:	xchg   esi,eax
  430ff2:	ss stc 
  430ff4:	scas   eax,DWORD PTR es:[edi]
  430ff5:	add    DWORD PTR [edi+0x9],edi
  430ff8:	mov    bl,0x8d
  430ffa:	mov    edx,0x21554f1
  430fff:	je     0x431001
  431001:	call   0xec7e:0x823f711a
  431008:	jle    0x431066
  43100a:	jnp    0x431021
  43100c:	cmp    BYTE PTR [ebx+0x6f15beea],bl
  431012:	addr16 stc 
  431014:	mov    dl,0xd4
  431016:	xor    edx,DWORD PTR ds:0xb682a32c
  43101c:	pop    ss
  43101d:	xchg   edi,eax
  43101e:	out    dx,eax
  43101f:	jnp    0x43102a
  431021:	outs   dx,DWORD PTR ds:[esi]
  431022:	cmc    
  431023:	inc    edx
  431024:	add    DWORD PTR [ecx+eiz*2-0x42],edi
  431028:	(bad)  
  431029:	ds sbb eax,0x13d4b2f9
  43102f:	xor    edi,ecx
  431031:	das    
  431032:	dec    eax
  431033:	stc    
  431034:	mov    dl,0xd4
  431036:	inc    ebx
  431037:	inc    ebx
  431038:	out    0x98,eax
  43103a:	add    BYTE PTR [esi],cl
  43103c:	push   es
  43103d:	lahf   
  43103e:	imul   ebp,DWORD PTR [eax-0x14e6ab01],0x60003b82
  431048:	add    eax,0x422f40c3
  43104d:	jno    0x431072
  43104f:	or     eax,0x90227a01
  431054:	cmp    al,0x3a
  431056:	xchg   ecx,eax
  431057:	ins    BYTE PTR es:[edi],dx
  431058:	xor    DWORD PTR [ecx-0x56cd9500],esi
  43105e:	add    BYTE PTR [ecx+0x32],bh
  431061:	mov    eax,ds:0x327b00
  431066:	cdq    
  431067:	add    BYTE PTR [ebp+0x32],ch
  43106a:	xchg   ecx,eax
  43106b:	add    BYTE PTR [esi+0x32],ch
  43106e:	mov    DWORD PTR [eax],eax
  431070:	jg     0x4310a4
  431072:	add    DWORD PTR [eax],0x79329e
  431078:	cwde   
  431079:	xor    dh,BYTE PTR [ecx+0x0]
  43107c:	mov    edx,0x6e006932
  431081:	xor    ah,BYTE PTR [ecx+0x0]
  431084:	mov    BYTE PTR [edx],dh
  431086:	pop    ecx
  431087:	add    BYTE PTR [eax+0x7800d132],al
  43108d:	xor    cl,cl
  43108f:	add    BYTE PTR [edi+0x32],bh
  431092:	rol    DWORD PTR [eax],0x3c
  431095:	xor    bh,BYTE PTR [ecx-0x6cd29a00]
  43109b:	scas   al,BYTE PTR es:[edi]
  43109c:	jmp    0x43101e
  43109e:	outs   dx,BYTE PTR ds:[esi]
  43109f:	mov    ds:0x7910f8d2,al
  4310a4:	enter  0x5e2c,0x21
  4310a8:	gs sub al,0xee
  4310ab:	test   eax,0x3912a5ec
  4310b0:	and    eax,0xffdb5679
  4310b5:	call   0xed3e1151
  4310ba:	xchg   edi,eax
  4310bb:	add    BYTE PTR [eax],al
  4310bd:	call   0xda9427a5
  4310c2:	imul   ebp,DWORD PTR [eax+0x2],0x8d0097ea
  4310c9:	in     eax,0x0
  4310cb:	push   es
  4310cc:	mov    BYTE PTR [esi],ah
  4310ce:	sub    esp,DWORD PTR [edi+0x29]
  4310d1:	or     dh,BYTE PTR [esi]
  4310d3:	pushf  
  4310d4:	jnp    0x431085
  4310d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4310d7:	xlat   BYTE PTR ds:[ebx]
  4310d8:	and    BYTE PTR ds:0x8cfc2516,dh
  4310de:	pop    ecx
  4310df:	xchg   edi,eax
  4310e0:	sbb    DWORD PTR [edi+edx*2],eax
  4310e3:	fnsave [ebx+0x47]
  4310e6:	(bad)  
  4310e7:	in     al,dx
  4310e8:	ss jl  0x43109a
  4310eb:	les    esp,FWORD PTR [eax+0x59]
  4310ee:	stos   BYTE PTR es:[edi],al
  4310ef:	icebp  
  4310f0:	jns    0x4310f5
  4310f2:	fs inc ebp
  4310f4:	mov    bh,0x3f
  4310f6:	jmp    0x629772c4
  4310fb:	xchg   ebx,eax
  4310fc:	ror    BYTE PTR [esi+0x3e],1
  4310ff:	sub    eax,0xafa92e29
  431104:	mov    ebx,0x6102e60b
  431109:	inc    edi
  43110a:	les    edx,FWORD PTR [edi+0xea90000]
  431110:	(bad)  
  431113:	xlat   BYTE PTR ds:[ebx]
  431114:	or     dh,BYTE PTR [edx-0x3323915f]
  43111a:	cdq    
  43111b:	pop    ebp
  43111c:	loopne 0x43111d
  43111e:	fsubr  QWORD PTR [esi]
  431120:	sbb    bh,BYTE PTR [edi-0x1651afe3]
  431126:	sbb    cl,ch
  431128:	mov    eax,ds:0x84503284
  43112d:	pop    DWORD PTR [eax]
  43112f:	add    BYTE PTR ds:0x8ff0004,bh
  431135:	and    BYTE PTR [ebx+eax*8+0x32e2ddb6],al
  43113c:	fs in  eax,dx
  43113e:	cmc    
  43113f:	bswap  ebx
  431141:	call   0xed2d11aa
  431146:	adc    ecx,DWORD PTR [eax+0x19]
  431149:	inc    esp
  43114a:	cli    
  43114b:	test   BYTE PTR [ebp-0x34f0f8a9],bh
  431151:	ret    
  431152:	mov    edi,0x431adde0
  431157:	cld    
  431158:	jbe    0x43119f
  43115a:	or     dh,dh
  43115c:	cmp    eax,0x84747ff2
  431161:	sar    BYTE PTR [edx],cl
  431163:	adc    DWORD PTR [ebp+0x51],ebp
  431166:	sbb    DWORD PTR [eax+0xf1ffeec],esi
  43116c:	sub    eax,ebp
  43116e:	add    eax,0xd3c0c1b6
  431173:	pop    edx
  431174:	ins    DWORD PTR es:[edi],dx
  431175:	add    al,0x7
  431177:	mov    dh,0xa9
  431179:	ror    dh,0x5a
  43117c:	jge    0x431182
  43117e:	pop    esi
  43117f:	rcr    DWORD PTR [ebx*1+0x1be50b60],0xad
  431187:	fst    DWORD PTR [esi]
  431189:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43118a:	sub    al,0xc0
  43118c:	outs   dx,BYTE PTR ds:[esi]
  43118d:	fdiv   QWORD PTR [edx]
  43118f:	dec    ebp
  431190:	sub    DWORD PTR [edi+0x8],0x1b2d0084
  431197:	xchg   ebx,eax
  431198:	shl    eax,0x0
  43119b:	lea    eax,[eax]
  43119d:	jl     0x4311a2
  43119f:	add    bl,ch
  4311a1:	popa   
  4311a2:	lahf   
  4311a3:	mov    edx,0x8bc5e80f
  4311a8:	add    al,0x94
  4311aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4311ab:	add    al,0x1
  4311ad:	xchg   esp,eax
  4311ae:	sub    DWORD PTR ds:0xce7e4874,esp
  4311b4:	cli    
  4311b5:	leave  
  4311b6:	adc    DWORD PTR ds:0xbe3d7814,esp
  4311bc:	jmp    FWORD PTR [edx]
  4311be:	icebp  
  4311bf:	or     al,al
  4311c1:	and    eax,ecx
  4311c3:	sbb    ch,BYTE PTR [edi]
  4311c5:	adc    al,0x7c
  4311c7:	bnd jmp DWORD PTR [edi+0x12c91641]
  4311ce:	push   cs
  4311cf:	daa    
  4311d0:	or     al,BYTE PTR [ebx-0x17]
  4311d3:	popf   
  4311d4:	test   ah,dl
  4311d6:	xchg   esp,eax
  4311d7:	or     DWORD PTR [edi+0x4030394a],eax
  4311dd:	xchg   BYTE PTR [ecx-0x2beafd51],ch
  4311e3:	daa    
  4311e4:	jmp    ebx
  4311e6:	sub    dh,bl
  4311e8:	cli    
  4311e9:	popa   
  4311ea:	xor    eax,0x289667ce
  4311ef:	(bad)  
  4311f0:	(bad)  
  4311f1:	mov    edi,0x63bff467
  4311f6:	loop   0x431234
  4311f8:	mov    ebp,0xd0298c00
  4311fd:	push   edx
  4311fe:	pop    ds
  4311ff:	push   eax
  431200:	jns    0x431274
  431202:	and    al,0x6e
  431204:	std    
  431205:	pop    ss
  431206:	or     ecx,ebp
  431208:	add    eax,DWORD PTR [ebp-0x17ff035e]
  43120e:	sbb    edx,ecx
  431210:	daa    
  431211:	cli    
  431212:	pop    ds
  431213:	lahf   
  431214:	push   ss
  431215:	mov    al,ds:0xf1259f5a
  43121a:	ror    BYTE PTR [ebx-0xe],1
  43121d:	add    al,ch
  43121f:	and    eax,0x11be7cd
  431224:	(bad)
  431228:	and    edx,ecx
  43122a:	mov    ebp,0xe903ec42
  43122f:	mov    DWORD PTR [esp+edx*8],edi
  431232:	fidiv  DWORD PTR [esi-0x337d567]
  431238:	cmc    
  431239:	dec    esi
  43123a:	ds xchg esp,eax
  43123c:	sar    BYTE PTR [esi+0x2b],1
  43123f:	push   ds
  431240:	mov    bl,0xf
  431242:	das    
  431243:	xchg   esp,eax
  431244:	clc    
  431245:	sub    ch,BYTE PTR [eax-0x6c4fe5f4]
  43124b:	mov    cl,0xb5
  43124d:	sbb    ebx,ebp
  43124f:	add    cl,ch
  431251:	add    edx,DWORD PTR [ebx]
  431253:	adc    DWORD PTR [ebp-0x7d6278ca],edi
  431259:	in     al,dx
  43125a:	pop    esi
  43125b:	loopne 0x4312d9
  43125d:	repz add BYTE PTR [ecx-0x10],bh
  431261:	pop    ebx
  431262:	rcl    DWORD PTR [edi-0x4f],0x38
  431266:	sub    DWORD PTR [eax-0x243c0d2c],ecx
  43126c:	sub    BYTE PTR [eax+edi*8-0x5dcefdc7],0x1c
  431274:	(bad)  
  431275:	sub    al,0xf9
  431277:	add    eax,0x12a207c6
  43127c:	into   
  43127d:	or     BYTE PTR [edx-0x5e1fe02c],ah
  431283:	xchg   edx,eax
  431284:	aas    
  431285:	or     bh,BYTE PTR [ebx+0x55]
  431288:	(bad)  
  431289:	ins    DWORD PTR es:[edi],dx
  43128a:	sar    DWORD PTR [edi-0x79],0x2a
  43128e:	mov    esp,0xf029d7f5
  431293:	pop    es
  431294:	ret    0x80e
  431297:	adc    esi,eax
  431299:	adc    al,0xd5
  43129b:	retf   
  43129c:	sbb    eax,0xef83dbff
  4312a1:	aas    
  4312a2:	jmp    0xd34e53b7
  4312a7:	test   BYTE PTR [eax-0x4ea98f9f],bh
  4312ad:	or     bl,BYTE PTR [edi+0x6261d455]
  4312b3:	or     eax,0x772861d1
  4312b8:	add    eax,0xa3d6f262
  4312bd:	bswap  edi
  4312bf:	scas   al,BYTE PTR es:[edi]
  4312c0:	mov    edi,0xd5006a51
  4312c5:	loope  0x431253
  4312c7:	scas   eax,DWORD PTR es:[edi]
  4312c8:	pop    ebx
  4312c9:	mov    dl,0x4f
  4312cb:	jo     0x43131b
  4312cd:	mov    ch,0xfa
  4312cf:	cld    
  4312d0:	pop    es
  4312d1:	out    dx,eax
  4312d2:	aas    
  4312d3:	jmp    0x704e53e8
  4312d8:	into   
  4312d9:	test   al,0x5a
  4312db:	jb     0x431333
  4312dd:	mov    bh,0x56
  4312df:	nop
  4312e0:	ficomp DWORD PTR [edx+0x17]
  4312e3:	jmp    0x392e98c2
  4312e8:	(bad)  
  4312e9:	or     DWORD PTR [ebx+0x7e4ae0e8],esi
  4312ef:	rcr    DWORD PTR [ecx+0x2600793],1
  4312f5:	adc    eax,0x266c1c88
  4312fa:	push   es
  4312fb:	push   0x6f
  4312fd:	bnd je 0x4312ef
  431300:	cs mov ah,0xf7
  431303:	pusha  
  431304:	loop   0x43131e
  431306:	dec    ebp
  431307:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  431308:	repnz lock cli 
  43130b:	adc    al,0x80
  43130d:	into   
  43130e:	cli    
  43130f:	sbb    al,0x8c
  431311:	pop    ss
  431312:	je     0x4312f5
  431314:	mov    esp,0x1a00fb94
  431319:	imul   esi,edx,0xffffffe8
  43131c:	jno    0x43131e
  43131e:	add    BYTE PTR [eax],al
  431320:	xor    al,0xc6
  431322:	or     al,BYTE PTR [eax]
  431324:	sbb    BYTE PTR [ebp-0x36ff7e1a],0x13
  43132b:	(bad)  
  43132c:	jmp    FWORD PTR [ebp+0x35]
  43132f:	mov    cl,0x64
  431331:	inc    eax
  431332:	add    BYTE PTR [eax],al
  431334:	push   esi
  431335:	add    ah,BYTE PTR [edi]
  431337:	pop    ebx
  431338:	and    BYTE PTR [edx],al
  43133a:	push   0x64
  43133c:	je     0x431323
  43133e:	inc    esi
  43133f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  431340:	std    
  431341:	push   0xffffff9c
  431343:	jmp    0x9774:0xed2c7a33
  43134a:	cld    
  43134b:	and    eax,ebp
  43134d:	jp     0x431337
  43134f:	sub    eax,eax
  431351:	je     0x4313bc
  431353:	push   0xffffffc7
  431355:	repz pop es
  431357:	xchg   ebp,eax
  431358:	inc    eax
  431359:	in     eax,dx
  43135a:	popa   
  43135b:	xchg   DWORD PTR [esi+0x31],eax
  43135e:	bound  eax,QWORD PTR [edi-0x762eeba]
  431364:	test   edx,edi
  431366:	push   0x4f
  431368:	cmp    BYTE PTR [eax+0x20],0xfa
  43136c:	jae    0x43130f
  43136e:	jl     0x431332
  431370:	add    BYTE PTR [ebp+0x1423e7ff],bh
  431376:	jmp    0x74f0:0x81fd8bf5
  43137d:	fdivrp st(7),st
  43137f:	out    dx,eax
  431380:	(bad)  
  431381:	jmp    0x921a:0xf2c029e3
  431388:	dec    esi
  431389:	ins    DWORD PTR es:[edi],dx
  43138a:	add    al,0x5e
  43138c:	mov    DWORD PTR [eax],eax
  43138e:	jae    0x4313ec
  431390:	loope  0x431394
  431392:	xchg   esp,eax
  431393:	ss sub al,0x88
  431396:	add    edi,edx
  431398:	xor    cl,0x8
  43139b:	cmp    esi,DWORD PTR [ebp-0xe]
  43139e:	ins    BYTE PTR es:[edi],dx
  43139f:	out    0x40,eax
  4313a1:	cli    
  4313a2:	jae    0x431351
  4313a4:	inc    ebx
  4313a5:	jae    0x43133f
  4313a7:	sahf   
  4313a8:	stos   BYTE PTR es:[edi],al
  4313a9:	outs   dx,DWORD PTR ds:[esi]
  4313aa:	ins    BYTE PTR es:[edi],dx
  4313ab:	sti    
  4313ac:	inc    eax
  4313ad:	cli    
  4313ae:	pop    ebx
  4313af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4313b0:	inc    ebx
  4313b1:	je     0x431358
  4313b3:	sahf   
  4313b4:	cli    
  4313b5:	gs xchg ebp,eax
  4313b7:	sahf   
  4313b8:	xor    bh,dl
  4313ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4313bb:	push   ss
  4313bc:	ds pop edx
  4313be:	ficomp DWORD PTR [esi+0x3b]
  4313c1:	mov    ebp,0x4c752974
  4313c6:	je     0x431359
  4313c8:	push   ebx
  4313c9:	add    BYTE PTR [ecx+ebp*1+0x32a0c7e5],dl
  4313d0:	in     eax,0xc6
  4313d2:	mov    BYTE PTR [esi],dh
  4313d4:	ja     0x431366
  4313d6:	fsubr  QWORD PTR [eax]
  4313d8:	(bad)  
  4313d9:	call   DWORD PTR [ebx-0x33c9d226]
  4313df:	fwait
  4313e0:	sti    
  4313e1:	popa   
  4313e2:	scas   eax,DWORD PTR es:[edi]
  4313e3:	sbb    DWORD PTR [ebp+0x16e31f0c],ebp
  4313e9:	or     BYTE PTR [edi],cl
  4313eb:	imul   ebx,DWORD PTR [esi+esi*1-0x79024919],0x0
  4313f3:	xlat   BYTE PTR ds:[ebx]
  4313f4:	inc    BYTE PTR [edx+ecx*1+0x2]
  4313f8:	imul   ebx,DWORD PTR [eax-0x2c615400],0xb78dbbfa
  431402:	pop    ds
  431403:	sbb    al,0xec
  431405:	(bad)  
  431407:	nop
  431408:	arpl   WORD PTR [edi-0xdff6bdd],di
  43140e:	ins    DWORD PTR es:[edi],dx
  43140f:	push   eax
  431410:	in     al,0x2
  431412:	add    edx,DWORD PTR [ebp-0x5d]
  431415:	gs inc ebx
  431417:	mov    edi,0xa7be5fa2
  43141c:	or     DWORD PTR [edx],edi
  43141e:	inc    ebx
  43141f:	retf   
  431420:	sub    dh,bh
  431422:	pop    ebx
  431423:	jo     0x43143f
  431425:	pop    edi
  431426:	mov    esi,0xafa8839b
  43142b:	or     al,0x7e
  43142d:	jecxz  0x43142a
  43142f:	pop    ebx
  431430:	xchg   ebx,edi
  431432:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  431434:	shr    al,0xaf
  431437:	popf   
  431438:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  431439:	clc    
  43143a:	es enter 0x7408,0xbe
  43143f:	xlat   BYTE PTR ds:[ebx]
  431440:	mov    al,0x39
  431442:	push   edx
  431443:	mov    dl,0x44
  431445:	in     al,0x82
  431447:	test   al,0xc
  431449:	jmp    0x4e9a1fd
  43144e:	daa    
  43144f:	mov    al,ds:0x67be6c0c
  431454:	mov    al,0x11
  431456:	push   edx
  431457:	add    BYTE PTR [edx-0x77d923bc],cl
  43145d:	hlt    
  43145e:	outs   dx,BYTE PTR ds:[esi]
  43145f:	ror    BYTE PTR [ebx-0x3fec8ce7],0xce
  431466:	icebp  
  431467:	scas   eax,DWORD PTR es:[edi]
  431468:	mov    bh,0x8b
  43146a:	mov    eax,ds:0xd0f8690d
  43146f:	aam    0xd0
  431471:	sbb    ecx,ebx
  431473:	test   BYTE PTR [eax-0x8],dl
  431476:	in     al,dx
  431477:	lods   eax,DWORD PTR ds:[esi]
  431478:	xchg   edi,eax
  431479:	int    0xa8
  43147b:	sbb    DWORD PTR [edi-0x5c4084f7],edx
  431481:	mov    BYTE PTR [ecx],ah
  431483:	or     eax,0xc10003bb
  431488:	mov    eax,0x1daefa44
  43148d:	mov    cs,WORD PTR [edi]
  43148f:	adc    edi,DWORD PTR [esp+ecx*4-0x509808be]
  431496:	cli    
  431497:	mov    edx,0x6a1f94b1
  43149c:	ret    0xfae5
  43149f:	cld    
  4314a0:	xchg   ebx,eax
  4314a1:	scas   al,BYTE PTR es:[edi]
  4314a2:	cli    
  4314a3:	call   0x9394:0xcd444f69
  4314aa:	pop    ds
  4314ab:	push   0xffffffd4
  4314ad:	icebp  
  4314ae:	gs call 0xed2ac3fb
  4314b4:	pushw  ss
  4314b6:	cli    
  4314b7:	out    0xb8,al
  4314b9:	scas   al,BYTE PTR es:[edi]
  4314ba:	adc    esp,DWORD PTR [esi]
  4314bc:	add    bl,al
  4314be:	adc    ecx,edi
  4314c0:	inc    esi
  4314c1:	jno    0x4314c0
  4314c3:	(bad)  
  4314c4:	call   0xbe109860
  4314c9:	and    DWORD PTR [edx-0x7b55268e],eax
  4314cf:	mul    DWORD PTR [edi]
  4314d1:	jno    0x4314e9
  4314d3:	out    0x91,eax
  4314d5:	or     BYTE PTR [esi],dl
  4314d7:	cli    
  4314d8:	(bad)  
  4314d9:	leave  
  4314da:	sub    dh,bl
  4314dc:	ud1    edx,DWORD PTR [esi]
  4314df:	xchg   BYTE PTR [esi],al
  4314e1:	retf   
  4314e2:	sub    ebx,0xfd498c68
  4314e8:	call   0x49427484
  4314ed:	aad    0x18
  4314ef:	sub    eax,0xfbc45eac
  4314f4:	jo     0x431548
  4314f6:	cmp    esp,edi
  4314f8:	(bad)  
  4314f9:	jo     0x431483
  4314fb:	mov    WORD PTR [ebp+0xfa167a],gs
  431501:	inc    esp
  431502:	mov    dl,dl
  431504:	std    
  431505:	repnz jecxz 0x43148f
  431508:	popf   
  431509:	or     edx,esp
  43150b:	cmc    
  43150c:	push   DWORD PTR [edx+ebp*4]
  43150f:	retf   0xf2fd
  431512:	jecxz  0x43149b
  431514:	mov    ebp,0xfff5df41
  431519:	fwait
  43151a:	cwde   
  43151b:	xchg   ebx,eax
  43151c:	clc    
  43151d:	adc    ch,bl
  43151f:	cmc    
  431520:	data16 add BYTE PTR [ecx],al
  431523:	(bad)  
  431524:	out    0xfd,al
  431526:	repnz fsub QWORD PTR [eax-0x74]
  43152a:	rcr    bl,0xfb
  43152d:	push   edx
  43152f:	jne    0x4314b7
  431531:	test   DWORD PTR [ecx+0x5bfff5de],ebp
  431537:	nop
  431538:	mov    ds:0xf5dce0c0,eax
  43153d:	data16 loope 0x4314ee
  431540:	mov    dh,0xfd
  431542:	rcr    ah,cl
  431544:	xchg   esi,eax
  431545:	(bad)  
  431546:	mov    eax,0x62fffbd3
  43154b:	cwde   
  43154c:	inc    ebx
  43154d:	add    al,0xb4
  43154f:	xchg   esi,eax
  431550:	loop   0x43154f
  431552:	jb     0x431530
  431554:	mov    eax,DWORD PTR [ebp-0x7]
  431557:	aam    0x83
  431559:	xor    BYTE PTR [eax-0x12fe0a24],ah
  43155f:	add    al,BYTE PTR [eax]
  431561:	mov    DWORD PTR [eax-0x19],ebp
  431564:	sti    
  431565:	push   edx
  431567:	(bad)  
  431568:	cmp    bh,ah
  43156a:	adc    eax,0xed401754
  43156f:	call   0xfff5:0xe3f0e483
  431576:	enter  0xa07,0x40
  43157a:	xchg   esp,eax
  43157b:	sub    DWORD PTR [ecx+0x50fac04c],ecx
  431581:	out    0xa1,eax
  431583:	sub    esi,edi
  431585:	inc    DWORD PTR [eax]
  431587:	(bad)  [edx-0x76]
  43158a:	cli    
  43158b:	inc    ecx
  43158c:	mov    ds:0xf6ad5c2f,al
  431591:	push   ds
  431592:	cli    
  431593:	fwait
  431594:	dec    ebp
  431595:	dec    edi
  431596:	retf   
  431597:	pusha  
  431598:	gs dec edi
  43159a:	retf   
  43159b:	pop    eax
  43159c:	xor    cl,BYTE PTR [edi]
  43159e:	add    BYTE PTR [edx+ebp*8],dh
  4315a1:	add    esi,DWORD PTR [ebp-0x69]
  4315a4:	imul   eax,DWORD PTR [ebx],0x0
  4315a7:	jge    0x4315f6
  4315a9:	or     BYTE PTR [eax],al
  4315ab:	xchg   esp,eax
  4315ac:	mov    ds:0x9b0f511e,al
  4315b1:	fcmovb st,st(0)
  4315b3:	loopne 0x4315cb
  4315b5:	xchg   ecx,esi
  4315b7:	enter  0xb11a,0x86
  4315bb:	dec    ebx
  4315bc:	mov    ds:0xa1a485fc,eax
  4315c1:	sti    
  4315c2:	dec    ecx
  4315c3:	or     al,0x38
  4315c5:	mov    esi,0x98cf1940
  4315ca:	lock iret 
  4315cc:	outs   dx,DWORD PTR ds:[esi]
  4315cd:	inc    ecx
  4315ce:	retf   
  4315cf:	push   eax
  4315d0:	cmc    
  4315d1:	dec    edi
  4315d2:	retf   
  4315d3:	dec    eax
  4315d4:	int    0x4f
  4315d6:	retf   
  4315d7:	loopne 0x4315bd
  4315d9:	dec    edi
  4315da:	retf   
  4315db:	fsub   DWORD PTR [ecx+0x150f541e]
  4315e1:	mov    bl,0x86
  4315e3:	popa   
  4315e4:	adc    DWORD PTR [ebp+0x1c41ec86],esi
  4315ea:	jno    0x4315ec
  4315ec:	jp     0x431590
  4315ee:	ror    BYTE PTR [ebx],1
  4315f0:	adc    DWORD PTR ds:0xd4f0c,ebx
  4315f6:	sub    al,0x20
  4315f8:	gs sub esp,ebp
  4315fb:	nop
  4315fc:	pop    esp
  4315fd:	add    BYTE PTR [esi-0x68],bl
  431600:	mov    edi,0xc6deae8a
  431605:	mov    cs,WORD PTR [edx]
  431607:	xchg   ecx,eax
  431608:	neg    ebx
  43160a:	call   0x5e43aa12
  43160f:	rol    BYTE PTR [edi-0x614aed4d],1
  431615:	lods   al,BYTE PTR ds:[esi]
  431616:	clc    
  431617:	xchg   BYTE PTR [edi+0x5],dl
  43161a:	fs inc ebx
  43161c:	or     eax,0x82415e03
  431621:	(bad)  
  431622:	(bad)  
  431624:	xchg   BYTE PTR [edi+0x4e08e89],cl
  43162a:	outs   dx,BYTE PTR ds:[esi]
  43162b:	mov    eax,0x8e778993
  431630:	push   esi
  431631:	fimul  DWORD PTR [ecx+0x2f7b7e97]
  431637:	xchg   edi,eax
  431638:	stos   BYTE PTR es:[edi],al
  431639:	mov    DWORD PTR ds:0x5e715eee,ebp
  43163f:	sti    
  431640:	sbb    ebp,ebp
  431642:	out    0x8b,eax
  431644:	lahf   
  431645:	push   DWORD PTR [edx+0x63c0a38b]
  43164b:	sbb    DWORD PTR [eax+0xd05d10],esp
  431651:	(bad)
  431655:	jae    0x43166e
  431657:	fstp   QWORD PTR ds:0xbeba5c86
  43165d:	outs   dx,BYTE PTR ds:[esi]
  43165e:	mov    DWORD PTR [ebx],ecx
  431660:	rol    BYTE PTR [edx+0x45],0x1c
  431664:	dec    edi
  431665:	iret   
  431666:	inc    esp
  431667:	xor    al,0x4f
  431669:	fild   WORD PTR [esp+ebp*1+0x4f]
  43166d:	fild   WORD PTR [edi+edi*8+0x61]
  431671:	mov    dh,0xac
  431673:	xchg   ch,bh
  431675:	pop    ss
  431676:	sub    bh,bh
  431678:	out    0x97,eax
  43167a:	add    BYTE PTR [edi+0x72],cl
  43167d:	or     edi,esi
  43167f:	push   edx
  431680:	bound  esp,QWORD PTR [ebx]
  431682:	or     al,BYTE PTR [ebp-0x7b21dc4e]
  431688:	(bad)  
  431689:	or     al,0xe2
  43168b:	cli    
  43168c:	aam    0xbb
  43168e:	out    dx,eax
  43168f:	aas    
  431690:	jmp    0xe9ab2c86
  431695:	jmp    0x422c7eaf
  43169a:	adc    eax,0x158de9c1
  43169f:	cli    
  4316a0:	jmp    0x8f3c3954
  4316a5:	mov    ch,0x96
  4316a7:	ret    
  4316a8:	fst    QWORD PTR [esi+ebp*4-0x7a]
  4316ac:	test   BYTE PTR [ebx],ch
  4316ae:	push   esi
  4316af:	push   ecx
  4316b0:	bound  ecx,QWORD PTR [ebx]
  4316b2:	add    eax,0xfe007785
  4316b7:	(bad)  
  4316b8:	jle    0x43169e
  4316ba:	dec    ebx
  4316bb:	adc    eax,0xec750473
  4316c0:	sub    edi,edi
  4316c2:	push   edi
  4316c3:	adc    eax,0x14e9e968
  4316c8:	push   0x681501e9
  4316cd:	jmp    0xe9572cae
  4316d2:	xchg   edi,eax
  4316d3:	add    al,ch
  4316d5:	je     0x43174d
  4316d7:	sbb    bh,dl
  4316d9:	push   0x5c
  4316db:	icebp  
  4316dc:	pop    ecx
  4316dd:	mov    esi,0xb4e47e48
  4316e2:	pop    eax
  4316e3:	xchg   esi,eax
  4316e4:	cli    
  4316e5:	jmp    0x431708
  4316e7:	adc    DWORD PTR [edx+0x0],ecx
  4316ea:	jmp    0x43c7:0x9603f88f
  4316f1:	hlt    
  4316f2:	in     eax,dx
  4316f3:	add    BYTE PTR [eax],al
  4316f5:	add    BYTE PTR [ebp+edx*2-0xa],dh
  4316f9:	mov    DWORD PTR [eax],edi
  4316fb:	hlt    
  4316fc:	mov    ebx,DWORD PTR [ebx+0xbd]
  431702:	ss enter 0xc321,0x9e
  431707:	into   
  431708:	in     eax,dx
  431709:	idiv   BYTE PTR [ebp+0x7b]
  43170c:	repnz or BYTE PTR [edx+0x19],ah
  431710:	add    DWORD PTR [ebp-0x3b],0x7d144b83
  431717:	push   ecx
  431718:	push   eax
  431719:	push   ebx
  43171a:	add    BYTE PTR [esi],al
  43171c:	leave  
  43171d:	loop   0x4316e0
  43171f:	sub    esp,ecx
  431721:	cmc    
  431722:	xor    DWORD PTR [ecx],0x10
  431725:	out    0x9e,eax
  431727:	ins    BYTE PTR es:[edi],dx
  431728:	add    BYTE PTR [eax],al
  43172a:	mov    edx,DWORD PTR [eax+0x7ae8cf14]
  431730:	xchg   ecx,eax
  431731:	rol    BYTE PTR [ebx],0x2e
  431734:	test   edx,ebp
  431736:	push   esi
  431737:	jle    0x431783
  431739:	cmc    
  43173a:	push   ebp
  43173b:	push   ecx
  43173c:	jge    0x4316fc
  43173e:	or     al,0xb0
  431740:	mov    edi,0x4ab60c78
  431745:	or     cl,BYTE PTR [ebx-0x17467b65]
  43174b:	popa   
  43174c:	loop   0x431743
  43174e:	jmp    DWORD PTR [esi-0x1a8edc6]
  431754:	dec    edi
  431755:	cmc    
  431756:	push   ebp
  431757:	inc    ecx
  431758:	jge    0x431718
  43175a:	or     al,0x80
  43175c:	mov    edi,0x4a860c78
  431761:	or     cl,BYTE PTR [ebx-0x4174256c]
  431767:	in     al,dx
  431768:	popa   
  431769:	and    dl,bh
  43176b:	repz mov cs,ecx
  43176e:	pop    ss
  43176f:	inc    ebx
  431770:	imul   ebp,DWORD PTR [ebp-0x7ccab606],0xffffffc3
  431777:	mov    BYTE PTR [esi+edi*1-0x47715f87],bl
  43177e:	ltr    WORD PTR [edi]
  431781:	arpl   WORD PTR [esi+0x19fdacc1],ax
  431787:	cli    
  431788:	mov    ebx,0x8f710eee
  43178d:	es mov edi,0x8e736f0f
  431793:	adc    ecx,DWORD PTR [edi]
  431795:	cmc    
  431796:	sti    
  431797:	push   ecx
  431798:	inc    edi
  431799:	neg    DWORD PTR [edx]
  43179b:	push   esp
  43179c:	test   al,0xa6
  43179e:	inc    edi
  43179f:	or     edx,DWORD PTR [ecx]
  4317a1:	imul   ebx,DWORD PTR [ecx-0x6d894018],0xf3e4971c
  4317ab:	rol    DWORD PTR ss:[ecx-0x23e0eb6e],1
  4317b2:	sti    
  4317b3:	push   ecx
  4317b4:	(bad)  
  4317b5:	stc    
  4317b6:	sbb    dl,BYTE PTR [eax+eax*4-0x5a]
  4317ba:	inc    edi
  4317bb:	or     ebx,DWORD PTR [ecx]
  4317bd:	jmp    0x2682ff5b
  4317c2:	(bad)
  4317c6:	mov    al,ds:0x91c37f0f
  4317cb:	nop    DWORD PTR [esi+esi*8+0x51]
  4317d0:	ret    
  4317d1:	js     0x4317ec
  4317d3:	push   esp
  4317d4:	mov    BYTE PTR [esi-0x16eef4b9],ah
  4317da:	call   0xcc97:0x4200cfe8
  4317e1:	xchg   DWORD PTR [ebx+0x3b1a00f3],esi
  4317e7:	pushf  
  4317e8:	loop   0x4317fc
  4317ea:	inc    edi
  4317eb:	mov    ebp,0x9b89594e
  4317f0:	adc    ebx,DWORD PTR [esi+0xc04d44a]
  4317f6:	lods   eax,DWORD PTR ds:[esi]
  4317f7:	fisttp QWORD PTR [esi]
  4317f9:	es lock pusha 
  4317fc:	clc    
  4317fd:	xchg   esp,eax
  4317fe:	add    ebx,DWORD PTR [ebx-0x7776d48]
  431804:	mov    ch,BYTE PTR [eax+0x10]
  431807:	sub    BYTE PTR [ecx-0x25387337],cl
  43180d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43180e:	add    ch,BYTE PTR [esi+edx*4-0x52]
  431812:	adc    bh,BYTE PTR [ecx+0x3828b28a]
  431818:	pop    ds
  431819:	sahf   
  43181a:	adc    ah,ch
  43181c:	mov    al,ds:0x9299d5a3
  431821:	mov    al,0x25
  431823:	in     eax,0x90
  431825:	int3   
  431826:	add    BYTE PTR [esi-0x752a7460],bh
  43182c:	xchg   ebp,eax
  43182d:	mov    WORD PTR [ebp-0x563a03d5],es
  431833:	sbb    BYTE PTR [edi],bl
  431835:	enter  0x65ec,0x47
  431839:	(bad)  
  43183a:	jnp    0x4317e4
  43183c:	xchg   edi,eax
  43183d:	cmp    al,0xd6
  43183f:	pop    ecx
  431840:	xchg   ecx,eax
  431841:	scas   al,BYTE PTR es:[edi]
  431842:	and    eax,0xcc90e5
  431847:	(bad)  
  431848:	mov    al,ds:0xa3858b00
  43184d:	pop    ds
  43184e:	push   0x18
  431850:	mov    edx,0xe0c412f2
  431855:	mov    ch,0xc6
  431857:	scas   eax,DWORD PTR es:[edi]
  431858:	push   DWORD PTR ds:0x257eeddc
  43185e:	mov    ds:0xb19dbf7b,eax
  431863:	jp     0x4318a9
  431865:	sbb    eax,0x62f7ad0e
  43186a:	dec    ebp
  43186b:	jp     0x43185f
  43186d:	ret    0xda5e
  431870:	out    dx,eax
  431871:	ret    0x9580
  431874:	es ret 0xa25a
  431878:	adc    al,0x62
  43187a:	les    ecx,FWORD PTR ds:0x8a246588
  431880:	cli    
  431881:	out    0xa9,al
  431883:	mov    BYTE PTR [ebx-0x5ea6794],bh
  431889:	(bad)  
  43188a:	xlat   BYTE PTR ds:[ebx]
  43188b:	mov    BYTE PTR [ebp+edx*8-0x33],cl
  43188f:	sub    ebp,DWORD PTR [esi+0x0]
  431892:	sbb    eax,0xb72f795
  431897:	add    cl,BYTE PTR [ecx+0x68287414]
  43189d:	scas   eax,DWORD PTR es:[edi]
  43189e:	mov    cl,0x16
  4318a0:	ss ret 
  4318a2:	and    eax,0x9c2c86ec
  4318a7:	mov    BYTE PTR [ebx-0x5e9e79c],bl
  4318ad:	mov    es,WORD PTR [eax]
  4318af:	pop    ds
  4318b0:	ins    DWORD PTR es:[edi],dx
  4318b1:	mov    ecx,gs
  4318b3:	mov    BYTE PTR [esi],dl
  4318b5:	cli    
  4318b6:	sub    BYTE PTR [edi],cl
  4318b8:	(bad)  
  4318b9:	repz mov dl,0xd0
  4318bc:	mov    ds:0x15136209,al
  4318c1:	xchg   ah,bl
  4318c3:	inc    edi
  4318c4:	mov    BYTE PTR [ecx+eiz*2+0x6f],bh
  4318c8:	xlat   BYTE PTR ds:[ebx]
  4318c9:	stc    
  4318ca:	push   esi
  4318cb:	cdq    
  4318cc:	jp     0x431942
  4318ce:	stc    
  4318cf:	sbb    al,0xbc
  4318d1:	repz add BYTE PTR [esi-0x777001c],bh
  4318d8:	call   0xf36da0e2
  4318dd:	cmc    
  4318de:	push   DWORD PTR [esi-0x68]
  4318e1:	cmp    DWORD PTR [eax-0x4e],0xfffffff3
  4318e5:	cmc    
  4318e6:	mov    edi,DWORD PTR [ecx+0x79]
  4318e9:	cli    
  4318ea:	(bad)  
  4318eb:	mov    ds:0xa15587f3,al
  4318f0:	test   DWORD PTR [ebx-0x8],eax
  4318f3:	data16 (bad) 
  4318f5:	cmp    eax,0xfff60384
  4318fb:	loop   0x4318bd
  4318fd:	(bad)  
  4318fe:	int3   
  4318ff:	cs dec ebx
  431901:	dec    ebp
  431902:	mov    ecx,DWORD PTR [ecx+0x798b0a28]
  431908:	sub    BYTE PTR [esi],cl
  43190a:	mov    esi,DWORD PTR [ecx+0x28]
  43190d:	adc    dl,BYTE PTR [ebp+0x6f]
  431910:	dec    esp
  431911:	dec    edi
  431912:	push   ecx
  431913:	add    BYTE PTR [ebp+0x28],al
  431916:	test   BYTE PTR [edx-0x53],0x58
  43191a:	cmc    
  43191b:	xor    eax,0xfffffcad
  431920:	sbb    al,0x4
  431922:	mov    al,ds:0xbe317d43
  431927:	mov    DWORD PTR [ecx-0xb9bfde8],edi
  43192d:	es cli 
  43192f:	(bad)  
  431930:	jge    0x431936
  431932:	add    DWORD PTR [ecx+ebx*2+0x34],0xffffff81
  431937:	pop    eax
  431938:	gs jns 0x431981
  43193b:	and    al,0x51
  43193d:	xor    DWORD PTR [edi],edx
  43193f:	mov    ecx,DWORD PTR [ebp+0x0]
  431942:	jnp    0x431942
  431944:	mov    bl,0x77
  431946:	xor    DWORD PTR [ebx-0x7cd1d7f7],ecx
  43194c:	xchg   esp,eax
  43194d:	mov    bl,0x1c
  43194f:	jae    0x4318e9
  431951:	repnz or eax,0xd2947a71
  431957:	jno    0x43196a
  431959:	outs   dx,BYTE PTR ds:[esi]
  43195a:	dec    edi
  43195b:	(bad)  
  43195c:	mov    db0,ebp
  43195f:	inc    edi
  431960:	mov    al,ds:0x9403979a
  431965:	ins    BYTE PTR es:[edi],dx
  431966:	dec    edx
  431967:	addr16 xchg ebp,eax
  431969:	sbb    dh,bh
  43196b:	dec    DWORD PTR [edi]
  43196d:	pop    ebx
  43196e:	push   es
  43196f:	call   0x413f12
  431974:	sub    eax,0xfffe19
  431979:	xchg   esp,eax
  43197a:	xchg   edx,eax
  43197b:	mov    edi,0x235ec07
  431980:	add    BYTE PTR [edx+eax*1+0x1d1b634f],dl
  431987:	(bad)  
  431988:	call   DWORD PTR [ecx+ebx*1-0x29633c7f]
  43198f:	mov    ch,0x56
  431991:	xlat   BYTE PTR ds:[ebx]
  431992:	mov    ds:0x4e9023c7,al
  431997:	les    eax,FWORD PTR [ebx]
  431999:	call   0xfe18:0xdcfffe19
  4319a0:	call   DWORD PTR [ebp+edx*8+0x3dd086d2]
  4319a7:	push   es
  4319a8:	xchg   esp,ecx
  4319aa:	adc    ecx,edx
  4319ac:	(bad)  
  4319ad:	ins    BYTE PTR es:[edi],dx
  4319ae:	jne    0x4319ca
  4319b0:	cli    
  4319b1:	jae    0x431987
  4319b3:	mov    ah,BYTE PTR [edi-0x74]
  4319b6:	xchg   BYTE PTR [ebx-0x11f69cf5],dl
  4319bc:	cli    
  4319bd:	in     al,0x2d
  4319bf:	cmp    DWORD PTR es:[ebx-0x62],edx
  4319c3:	push   ss
  4319c4:	jle    0x431a16
  4319c6:	add    ch,dh
  4319c8:	mov    eax,0xc04c41a
  4319cd:	adc    esi,DWORD PTR [esp+ecx*1-0x6efde30c]
  4319d4:	pop    es
  4319d5:	xchg   esp,eax
  4319d6:	add    cl,ch
  4319d8:	inc    esi
  4319d9:	enter  0xac7b,0xdf
  4319dd:	add    BYTE PTR [ebx-0x7be50085],dl
  4319e3:	in     al,dx
  4319e4:	sub    DWORD PTR [ebp-0x1468f05d],edx
  4319ea:	sti    
  4319eb:	hlt    
  4319ec:	sbb    DWORD PTR [ebx],ebx
  4319ee:	inc    BYTE PTR [edx+0x4251082c]
  4319f4:	in     al,0x3
  4319f6:	inc    ecx
  4319f7:	mov    dh,0x99
  4319f9:	mov    dh,0x1a
  4319fb:	sbb    dh,BYTE PTR [ebp-0x4ad455bd]
  431a01:	xor    eax,0x1ab51682
  431a06:	into   
  431a07:	xor    BYTE PTR ds:0xa5ad5dbb,bh
  431a0d:	mov    ?,WORD PTR [ecx-0x2b712886]
  431a13:	cdq    
  431a14:	out    0x2b,eax
  431a16:	ss add ebp,ecx
  431a19:	add    esi,DWORD PTR [ebx+0x40]
  431a1c:	cmc    
  431a1d:	ds push 0x39
  431a20:	cmc    
  431a21:	xor    eax,0x21a90dc2
  431a26:	loopne 0x431aa1
  431a28:	xchg   esp,eax
  431a29:	mov    dh,0xe5
  431a2b:	mov    ch,0xe
  431a2d:	add    al,0xf2
  431a2f:	add    BYTE PTR [ecx],al
  431a31:	dec    edi
  431a32:	outs   dx,DWORD PTR ds:[esi]
  431a33:	ret    
  431a34:	call   0x17078ded
  431a39:	add    al,0x94
  431a3b:	lods   eax,DWORD PTR ds:[esi]
  431a3c:	sbb    bh,BYTE PTR [edi+0x1bff41b8]
  431a42:	add    BYTE PTR [ebx],ah
  431a44:	call   0xddfa:0xb101e123
  431a4b:	arpl   dx,si
  431a4d:	out    0x95,eax
  431a4f:	popf   
  431a50:	or     bh,dl
  431a52:	push   0x73
  431a54:	stc    
  431a55:	pop    esp
  431a56:	sub    ebx,DWORD PTR [edi-0x24ca3400]
  431a5c:	cmp    ebx,ecx
  431a5e:	sub    eax,0x62cb39d3
  431a63:	scas   al,BYTE PTR es:[edi]
  431a64:	mov    ah,0x86
  431a66:	cmp    eax,0x72171a12
  431a6b:	aam    0x5
  431a6d:	dec    edi
  431a6e:	jb     0x431aac
  431a70:	repnz push ecx
  431a72:	bound  ecx,QWORD PTR [edx]
  431a74:	push   es
  431a75:	das    
  431a76:	fldenv [esi]
  431a78:	xchg   DWORD PTR [ecx],eax
  431a7a:	das    
  431a7b:	aam    0xa
  431a7d:	jmp    DWORD PTR ds:0xe90011d4
  431a83:	xchg   edi,eax
  431a84:	add    BYTE PTR [ebp-0x871388e],cl
  431a8a:	out    0x24,eax
  431a8c:	pop    es
  431a8d:	xchg   DWORD PTR [edi],ebp
  431a8f:	xchg   esp,eax
  431a90:	or     eax,0xc89c1ac9
  431a95:	cli    
  431a96:	xor    al,0x9c
  431a98:	test   DWORD PTR [ecx-0xb],ecx
  431a9b:	adc    BYTE PTR [eax-0x21b315f9],dh
  431aa1:	or     esi,ebx
  431aa3:	lods   al,BYTE PTR ds:[esi]
  431aa4:	mov    ah,0xb
  431aa6:	bound  eax,QWORD PTR [eax]
  431aa8:	dec    ebx
  431aa9:	std    
  431aaa:	icebp  
  431aab:	sub    DWORD PTR [edx+eiz*4+0x82640a],edx
  431ab2:	add    cl,ch
  431ab4:	sbb    bh,BYTE PTR [edi+eiz*8-0x79f6a6a0]
  431abb:	add    BYTE PTR [esi+0x54588f8],dh
  431ac1:	jnp    0x431b06
  431ac3:	sbb    BYTE PTR [ebp+ecx*2-0x15397c1a],dh
  431aca:	outs   dx,BYTE PTR ds:[esi]
  431acb:	pusha  
  431acc:	out    0x2,al
  431ace:	lea    ebx,[ebx+0x12d]
  431ad4:	mov    eax,0x98b5110
  431ad9:	(bad)  
  431ada:	push   cs
  431adb:	(bad)  
  431adc:	icebp  
  431add:	mov    cs,WORD PTR [edx]
  431adf:	mov    eax,esi
  431ae1:	lock add DWORD PTR [eax],0x85f24d74
  431ae8:	mov    ah,0x70
  431aea:	push   cs
  431aeb:	mov    eax,edx
  431aed:	fadd   QWORD PTR [edx]
  431aef:	call   FWORD PTR [edx-0x75ba3f19]
  431af5:	add    DWORD PTR [ebp+0x753519c0],eax
  431afb:	inc    ebx
  431afc:	dec    bp
  431afe:	repnz mov esi,DWORD PTR [ebp+0x50fef283]
  431b05:	mov    bh,0x7a
  431b07:	jge    0x431ac3
  431b09:	add    BYTE PTR [eax+eiz*1+0x0],dh
  431b0d:	inc    esi
  431b0e:	(bad)  
  431b0f:	jp     0x431b09
  431b11:	fstp   TBYTE PTR [ecx+eax*1-0x75]
  431b15:	jnp    0x431b17
  431b17:	sti    
  431b18:	into   
  431b19:	mov    ?,eax
  431b1b:	aaa    
  431b1c:	inc    DWORD PTR [eax-0x56b17d08]
  431b22:	jnp    0x431b74
  431b24:	or     BYTE PTR [esi-0x47],bh
  431b27:	sub    DWORD PTR [edi+eax*4],ecx
  431b2a:	jmp    0x4b492782
  431b2f:	out    dx,al
  431b30:	pop    edi
  431b31:	mov    ebx,0x94e5814d
  431b36:	aam    0x44
  431b38:	ret    0x75d1
  431b3b:	(bad)  
  431b3c:	call   DWORD PTR [ecx+ebx*1-0x1af033d5]
  431b43:	repz or BYTE PTR [esi+esi*8+0x15346c94],0xe5
  431b4c:	jle    0x431acf
  431b4e:	pop    ebp
  431b4f:	inc    eax
  431b50:	ds xchg esp,eax
  431b52:	sbb    DWORD PTR [edx+0x405dbc1f],ecx
  431b58:	ds xchg esp,eax
  431b5a:	sar    DWORD PTR [ebx],0xfd
  431b5d:	and    ebx,DWORD PTR [edx]
  431b5f:	add    ebx,0xffffff90
  431b62:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  431b63:	ds jae 0x431b09
  431b66:	sahf   
  431b67:	ror    DWORD PTR [edi],0x7e
  431b6a:	sbb    BYTE PTR [ebp+0x405da9fa],ch
  431b70:	add    BYTE PTR ds:[esi+edx*4+0x651f073a],dl
  431b78:	jmp    0xffa:0x17fc3be7
  431b7f:	pop    ebp
  431b80:	jmp    0x1f10:0x8a1d3c38
  431b87:	ins    DWORD PTR es:[edi],dx
  431b88:	push   es
  431b89:	dec    esi
  431b8a:	arpl   WORD PTR [esi+0x31cc8633],bx
  431b90:	dec    esi
  431b91:	stc    
  431b92:	mov    ebx,0x8844862a
  431b97:	sahf   
  431b98:	enter  0x1df7,0xe2
  431b9c:	pop    es
  431b9d:	xchg   DWORD PTR [edx+0x20f91b96],ebx
  431ba3:	push   cs
  431ba4:	test   DWORD PTR [ecx-0x68],ecx
  431ba7:	push   ss
  431ba8:	inc    ecx
  431ba9:	cs cwde 
  431bab:	adc    DWORD PTR [ecx],edx
  431bad:	push   esp
  431bae:	nop
  431baf:	add    BYTE PTR [esi-0x3a],ch
  431bb2:	(bad)  
  431bb3:	ja     0x431be7
  431bb5:	or     al,0x73
  431bb7:	cmp    dl,ch
  431bb9:	pop    es
  431bba:	mov    ds:0x1b08330b,al
  431bbf:	lds    edi,FWORD PTR [eax-0x75]
  431bc2:	sar    eax,cl
  431bc4:	ins    DWORD PTR es:[edi],dx
  431bc5:	das    
  431bc6:	cmp    esi,DWORD PTR [esi+0x464e1772]
  431bcc:	push   0x17
  431bce:	or     ebx,DWORD PTR ds:[edi]
  431bd1:	mov    bl,0x8f
  431bd3:	sti    
  431bd4:	fs scas eax,DWORD PTR es:[edi]
  431bd6:	add    BYTE PTR [esi],ch
  431bd8:	or     edx,DWORD PTR [ecx-0x75]
  431bdb:	fdivr  st,st(0)
  431bdd:	mov    bh,0xae
  431bdf:	sbb    dh,BYTE PTR [edi]
  431be1:	push   eax
  431be2:	mov    ds:0x2d390b1d,eax
  431be7:	mov    ch,0xb
  431be9:	xor    DWORD PTR [edi],edx
  431beb:	push   cs
  431bec:	in     eax,0xf8
  431bee:	in     eax,dx
  431bef:	ret    
  431bf0:	add    BYTE PTR [edx],ah
  431bf2:	loope  0x431bbb
  431bf4:	repnz test al,0x3
  431bf7:	out    dx,eax
  431bf8:	in     al,0xb4
  431bfa:	in     eax,dx
  431bfb:	stos   DWORD PTR es:[edi],eax
  431bfc:	add    BYTE PTR [esi+0x17],bl
  431bff:	dec    eax
  431c00:	ja     0x431c16
  431c02:	test   edi,ebp
  431c04:	xlat   BYTE PTR ds:[ebx]
  431c05:	in     eax,0x3
  431c07:	xchg   esp,eax
  431c08:	pop    edi
  431c09:	sub    BYTE PTR [ebp-0x76],ch
  431c0c:	add    BYTE PTR [eax+0x9],ah
  431c0f:	add    BYTE PTR [ecx+0x25],bl
  431c12:	add    al,0xd
  431c14:	cmc    
  431c15:	mov    al,ds:0x6000726c
  431c1a:	clc    
  431c1b:	out    0x58,eax
  431c1d:	and    eax,0x78d50d04
  431c22:	ins    BYTE PTR es:[edi],dx
  431c23:	pop    edx
  431c24:	add    BYTE PTR [eax-0x28],dh
  431c27:	aas    
  431c28:	pop    eax
  431c29:	jmp    FWORD PTR [ecx]
  431c2b:	nop
  431c2c:	sahf   
  431c2d:	mov    edx,esp
  431c2f:	mov    edi,0x19e93e58
  431c34:	jbe    0x431c42
  431c36:	lods   eax,DWORD PTR ds:[esi]
  431c37:	add    bl,cl
  431c39:	dec    DWORD PTR [esi]
  431c3b:	add    BYTE PTR [ebp*8+0xa5640a7],bl
  431c42:	fs jne 0x431bd9
  431c45:	fs test al,0x2a
  431c48:	cwde   
  431c49:	sahf   
  431c4a:	mov    ecx,esp
  431c4c:	mov    bh,0x58
  431c4e:	ds jmp 0x856f9275
  431c54:	test   al,0xca
  431c56:	(bad)  
  431c57:	jl     0x431c73
  431c59:	add    eax,0xa5680d0
  431c5e:	test   DWORD PTR [edi+edx*4+0x5690c369],esp
  431c65:	or     al,BYTE PTR [ebp-0x3894ec5c]
  431c6b:	adc    dh,0x9
  431c6e:	mov    esp,DWORD PTR [edi+ecx*4-0x29af2c97]
  431c75:	or     DWORD PTR [ebp-0x5fa489c],eax
  431c7b:	push   ss
  431c7c:	stos   BYTE PTR es:[edi],al
  431c7d:	add    al,0x10
  431c7f:	inc    eax
  431c80:	(bad)  
  431c81:	or     edi,edi
  431c83:	call   0x31e41d18
  431c88:	inc    eax
  431c89:	retf   0x49ff
  431c8c:	push   ebx
  431c8d:	popa   
  431c8e:	ds jmp 0x92032116
  431c94:	aad    0x9
  431c96:	pop    es
  431c97:	in     eax,0x97
  431c99:	inc    eax
  431c9a:	ret    0x6bec
  431c9d:	popa   
  431c9e:	ds jmp 0x43b2a4
  431ca4:	add    BYTE PTR [ebp-0x41600562],ch
  431caa:	add    al,0x89
  431cac:	test   DWORD PTR ds:0xcfff5e8,esp
  431cb2:	add    BYTE PTR [eax-0x7c8992bd],ah
  431cb8:	fcom   QWORD PTR [ecx]
  431cba:	repz cmc 
  431cbc:	push   0x7d
  431cbe:	hlt    
  431cbf:	adc    edi,esp
  431cc1:	pop    esp
  431cc2:	cmp    eax,0x5c967fa
  431cc7:	cmp    al,BYTE PTR [eax]
  431cc9:	rcr    BYTE PTR [ecx],cl
  431ccb:	cli    
  431ccc:	adc    DWORD PTR [ebp+0x4],edi
  431ccf:	push   0xbffd3909
  431cd4:	(bad)  
  431cd5:	cmp    BYTE PTR [ecx],cl
  431cd7:	or     al,0x40
  431cd9:	cmp    eax,0x4d15f54d
  431cde:	push   cs
  431cdf:	cmp    al,BYTE PTR [eax]
  431ce1:	je     0x431ca2
  431ce3:	(bad)  
  431ce4:	int3   
  431ce5:	popa   
  431ce6:	mov    eax,0xb8c1ccc6
  431ceb:	(bad)  
  431cec:	int3   
  431ced:	sub    edi,DWORD PTR [eax+0x3e]
  431cf0:	and    al,0xe9
  431cf2:	idiv   DWORD PTR [edi+0x4677e575]
  431cf8:	and    al,0xed
  431cfa:	ja     0x431d3a
  431cfc:	and    al,0xf1
  431cfe:	das    
  431cff:	int3   
  431d00:	idiv   DWORD PTR [edi+esi*2-0x2e]
  431d04:	mov    eax,DWORD PTR [eax]
  431d06:	sub    DWORD PTR [ecx],ebp
  431d08:	add    dh,bh
  431d0a:	int3   
  431d0b:	ja     0x431cf7
  431d0d:	mov    edi,DWORD PTR [esi-0x5]
  431d10:	pop    esi
  431d11:	and    al,0xdd
  431d13:	ja     0x431cd7
  431d15:	mov    ebp,ebx
  431d17:	sti    
  431d18:	pop    esi
  431d19:	and    al,0xad
  431d1b:	call   eax
  431d1d:	jmp    0x431cb3
  431d1f:	fimul  DWORD PTR [eax-0x2024f039]
  431d25:	(bad)  
  431d26:	por    mm3,mm7
  431d29:	or     ebx,DWORD PTR [edi]
  431d2b:	(bad)  
  431d2d:	pop    es
  431d2e:	gs inc ecx
  431d30:	sub    eax,0x2d4465d6
  431d35:	xlat   BYTE PTR ds:[ebx]
  431d36:	(bad)  
  431d37:	push   eax
  431d38:	mov    ebx,esi
  431d3a:	imul   ebp,DWORD PTR [ebx-0x79],0xffffffef
  431d3e:	arpl   si,si
  431d40:	fist   WORD PTR [ebx]
  431d42:	punpckldq mm0,DWORD PTR [edi+0xb29b043]
  431d49:	loope  0x431ce2
  431d4b:	push   0xe58f0990
  431d50:	fisttp WORD PTR [ebx]
  431d52:	retf   
  431d53:	and    DWORD PTR [eax-0x25aa80f6],edx
  431d59:	pop    es
  431d5a:	stos   BYTE PTR es:[edi],al
  431d5b:	adc    ah,al
  431d5d:	es shl ch,1
  431d60:	repz push ss
  431d62:	enter  0xeffd,0x2e
  431d66:	aas    
  431d67:	repz mov edi,0x229c0023
  431d6d:	stos   BYTE PTR es:[edi],al
  431d6e:	and    ebx,DWORD PTR [eax-0x230dc73a]
  431d74:	call   0xce87:0xd40eff38
  431d7b:	pop    ds
  431d7c:	rol    DWORD PTR [edi-0x4b27e039],0xbd
  431d83:	test   BYTE PTR [ecx],bl
  431d85:	inc    edx
  431d86:	retf   
  431d87:	enter  0xad6a,0xb6
  431d8b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  431d8c:	mov    ecx,0x22beffbf
  431d91:	scas   eax,DWORD PTR es:[edi]
  431d92:	push   eax
  431d93:	jmp    FWORD PTR [ecx]
  431d95:	pop    esi
  431d96:	ds xchg esp,eax
  431d98:	add    BYTE PTR [esi-0x40],ch
  431d9b:	ja     0x431d91
  431d9d:	outs   dx,DWORD PTR ds:[esi]
  431d9e:	mov    edi,0x8257993
  431da3:	or     eax,0x44b8dc9c
  431da8:	mov    al,0x20
  431daa:	lods   eax,DWORD PTR ds:[esi]
  431dab:	lock test eax,0x97461d
  431db1:	mov    dl,0x34
  431db3:	inc    edx
  431db4:	xor    al,0x9c
  431db6:	inc    eax
  431db7:	dec    edi
  431db8:	xor    al,0xb4
  431dba:	inc    eax
  431dbb:	pop    edi
  431dbc:	xor    al,0xac
  431dbe:	inc    eax
  431dbf:	pop    edi
  431dc0:	xor    al,0x5d
  431dc2:	adc    ecx,eax
  431dc4:	jnp    0x431e42
  431dc6:	jg     0x431d90
  431dc8:	clc    
  431dc9:	inc    eax
  431dca:	shr    ecx,0x0
  431dcd:	jmp    0x1cf1e7b
  431dd2:	std    
  431dd3:	pop    es
  431dd4:	jae    0x431e16
  431dd6:	or     eax,DWORD PTR [edi+0x12]
  431dd9:	shl    DWORD PTR [edi+eax*1],0x55
  431ddd:	and    DWORD PTR [eax],0xe900d0b4
  431de3:	cwde   
  431de4:	shl    DWORD PTR cs:[esi],cl
  431de7:	dec    ebp
  431de8:	xchg   edx,eax
  431de9:	add    ecx,ebp
  431deb:	add    esi,DWORD PTR [esi-0x37]
  431dee:	mov    al,0xeb
  431df0:	sahf   
  431df1:	ins    BYTE PTR es:[edi],dx
  431df2:	es jg  0x431e36
  431df5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  431df6:	and    eax,0x3433cf40
  431dfb:	inc    eax
  431dfc:	fbstp  TBYTE PTR [ebx]
  431dfe:	sub    al,0x40
  431e00:	fbstp  TBYTE PTR [ebx]
  431e02:	pop    ebp
  431e03:	adc    ecx,DWORD PTR [eax+0x7b]
  431e06:	cld    
  431e07:	jle    0x431e59
  431e09:	clc    
  431e0a:	ins    DWORD PTR es:[edi],dx
  431e0b:	mov    esp,0x331038f
  431e10:	pop    es
  431e11:	sar    edi,0xdc
  431e14:	or     dh,BYTE PTR [ecx+0x121360a]
  431e1a:	das    
  431e1b:	mov    ebx,0xf14373ee
  431e20:	mov    edi,0xb35ff17b
  431e25:	jge    0x431ea3
  431e27:	fstp   QWORD PTR [edx]
  431e29:	mov    edi,0x93a1020b
  431e2e:	or     BYTE PTR [edx+0x3f],dh
  431e31:	(bad)  
  431e32:	dec    BYTE PTR [edi+0x6d0f5200]
  431e38:	jecxz  0x431e8b
  431e3a:	xchg   DWORD PTR [edi+0x6d3062d1],edi
  431e40:	xchg   ecx,eax
  431e41:	inc    edx
  431e42:	inc    esi
  431e43:	pop    edx
  431e44:	aaa    
  431e45:	xor    esp,DWORD PTR [ebp-0x61a7fc42]
  431e4b:	xlat   BYTE PTR ds:[ebx]
  431e4c:	ss pop ebx
  431e4e:	push   es
  431e4f:	loop   0x431e96
  431e51:	xchg   edi,eax
  431e52:	add    BYTE PTR [eax],al
  431e54:	push   0xffffffec
  431e56:	or     edi,edi
  431e58:	cs xchg edi,eax
  431e5a:	add    BYTE PTR [eax-0x17],al
  431e5d:	in     eax,dx
  431e5e:	sbb    eax,0xa865e60
  431e63:	pop    eax
  431e64:	ins    BYTE PTR es:[edi],dx
  431e65:	xlat   BYTE PTR ds:[ebx]
  431e66:	xchg   ecx,eax
  431e67:	cmp    al,0x62
  431e69:	dec    esp
  431e6a:	(bad)  
  431e6b:	es das 
  431e6d:	inc    edi
  431e6e:	mov    al,0xe7
  431e70:	pop    ecx
  431e71:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  431e72:	or     bh,dl
  431e74:	nop
  431e75:	xor    BYTE PTR [ebp-0x41],bh
  431e78:	mov    ch,0xda
  431e7a:	jle    0x431ebb
  431e7c:	int    0x58
  431e7e:	sbb    eax,0x86a7161a
  431e83:	fucomip st,st(0)
  431e85:	dec    esi
  431e86:	mov    esp,0xa860ffb
  431e8b:	cli    
  431e8c:	add    BYTE PTR [esi-0x66ba7edf],ah
  431e92:	xchg   dl,bh
  431e94:	mov    ch,BYTE PTR [ebp+0x3dc72e]
  431e9a:	mov    al,0x1
  431e9c:	add    al,al
  431e9e:	stos   BYTE PTR es:[edi],al
  431e9f:	lea    edi,[edi-0x7e440375]
  431ea5:	gs aad 0xb7
  431ea8:	inc    ebx
  431ea9:	cld    
  431eaa:	retf   
  431eab:	out    dx,eax
  431eac:	cmc    
  431ead:	dec    DWORD PTR [esi+0x7d8ae2c1]
  431eb3:	add    DWORD PTR [eax],eax
  431eb5:	ret    
  431eb6:	dec    edx
  431eb7:	sbb    eax,0xfcad165e
  431ebc:	retf   
  431ebd:	int3   
  431ebe:	sub    eax,eax
  431ec0:	(bad)  
  431ec1:	int3   
  431ec2:	cmp    eax,eax
  431ec4:	(bad)  
  431ec5:	int3   
  431ec6:	idiv   BYTE PTR [eax]
  431ec8:	push   ds
  431ec9:	or     dh,dh
  431ecb:	inc    eax
  431ecc:	push   ds
  431ecd:	adc    BYTE PTR [esi-0x37],al
  431ed0:	or     DWORD PTR [ecx+edx*2+0x5],0x38b60973
  431ed8:	push   ds
  431ed9:	add    al,0xc2
  431edb:	loope  0x431e99
  431edd:	adc    BYTE PTR ds:0xa6e1ed4c,bh
  431ee3:	aam    0x81
  431ee5:	inc    esp
  431ee6:	xchg   ecx,eax
  431ee7:	add    al,0xed
  431ee9:	fs xchg ecx,eax
  431eeb:	or     cl,bh
  431eed:	xlat   BYTE PTR ds:[ebx]
  431eee:	xchg   BYTE PTR [eax],bh
  431ef0:	push   ds
  431ef1:	or     dl,al
  431ef3:	loope  0x431eee
  431ef5:	shl    BYTE PTR [esi],cl
  431ef7:	mov    ebx,0xc5d5000a
  431efc:	inc    DWORD PTR [edx+0x0]
  431eff:	std    
  431f00:	pop    esp
  431f01:	cmc    
  431f02:	xor    eax,0xfd
  431f07:	xchg   esp,eax
  431f08:	mov    ds:0xa08423c7,al
  431f0d:	lahf   
  431f0e:	and    esp,DWORD PTR [esp+ecx*4+0x32a4239f]
  431f15:	push   ds
  431f16:	dec    esi
  431f17:	push   0x66
  431f19:	pop    ebp
  431f1a:	call   FWORD PTR [ebx]
  431f1c:	pop    edx
  431f1d:	(bad)  
  431f1e:	xor    BYTE PTR [ecx+0x1b],bl
  431f21:	rol    esp,cl
  431f23:	inc    esp
  431f24:	nop
  431f25:	mov    eax,ds:0xba3a3e7
  431f2a:	xchg   BYTE PTR [ecx+0x33],dl
  431f2d:	inc    edi
  431f2e:	inc    esp
  431f2f:	nop
  431f30:	cmp    al,0xf
  431f32:	cli    
  431f33:	mov    edx,DWORD PTR [ecx-0x2aee083f]
  431f39:	adc    esp,DWORD PTR [ebx+0x37]
  431f3c:	sbb    bh,dh
  431f3e:	call   DWORD PTR [esi+edx*2-0x19bb385]
  431f45:	jbe    0x431f53
  431f47:	xchg   esp,eax
  431f48:	sbb    esi,edi
  431f4a:	(bad)  
  431f4b:	mov    ebp,0xef59b0d2
  431f50:	mov    fs,WORD PTR [ecx]
  431f52:	pop    esp
  431f53:	in     eax,0x56
  431f55:	jnp    0x431f51
  431f57:	jmp    0xc23d39fa
  431f5c:	sub    eax,0x9a84740f
  431f61:	xchg   ecx,eax
  431f62:	or     eax,DWORD PTR [eax]
  431f64:	sub    ebp,DWORD PTR ds:0xb1d467f6
  431f6a:	(bad)  
  431f6b:	push   DWORD PTR [ebx-0x6bc1a1e7]
  431f71:	mov    cl,0x3
  431f73:	test   DWORD PTR [ebx],0x9cc383c3
  431f79:	ins    BYTE PTR es:[edi],dx
  431f7a:	inc    ebx
  431f7b:	cli    
  431f7c:	mov    cl,0x45
  431f7e:	clc    
  431f7f:	aas    
  431f80:	xchg   esp,eax
  431f81:	add    BYTE PTR ds:0x2c34df3f,dh
  431f87:	aas    
  431f88:	iret   
  431f89:	xor    al,0xba
  431f8b:	jl     0x431f78
  431f8d:	ja     0x431f31
  431f8f:	out    dx,eax
  431f90:	sbb    dh,BYTE PTR [ebx-0x76ed4728]
  431f96:	aam    0xcc
  431f98:	mov    esp,0xbc7ce68a
  431f9d:	jge    0x431f88
  431f9f:	xchg   esi,eax
  431fa0:	push   0x12f42877
  431fa5:	mov    bl,0xec
  431fa7:	mov    dh,0x53
  431fa9:	mov    cl,0xc0
  431fab:	rcr    DWORD PTR [edi-0x2a8436fd],0xe4
  431fb2:	out    0x8d,eax
  431fb4:	lahf   
  431fb5:	add    DWORD PTR [ecx-0xc],eax
  431fb8:	xchg   esp,eax
  431fb9:	sbb    ah,0xdc
  431fbc:	std    
  431fbd:	lock pop ebp
  431fbf:	(bad)  
  431fc0:	(bad)  
  431fc1:	fldenv [eax]
  431fc3:	clc    
  431fc4:	adc    cl,BYTE PTR [edx+0x570082fc]
  431fca:	hlt    
  431fcb:	mov    es,WORD PTR gs:[edi+0x1b061400]
  431fd2:	stos   BYTE PTR es:[edi],al
  431fd3:	lock jl 0x431fbb
  431fd6:	lock sbb DWORD PTR [esi+0x7b1b3402],ebp
  431fdd:	das    
  431fde:	stos   BYTE PTR es:[edi],al
  431fdf:	pop    ebp
  431fe0:	cdq    
  431fe1:	fwait
  431fe2:	jge    0x43203e
  431fe4:	call   DWORD PTR [edi]
  431fe6:	ds call 0xaabab3ef
  431fec:	out    dx,eax
  431fed:	adc    BYTE PTR [eax-0x27],al
  431ff0:	xchg   DWORD PTR [esi+0x0],eax
  431ff3:	jmp    0xc0ba86fb
  431ff8:	pop    es
  431ff9:	add    DWORD PTR [ebx],0xffffffff
  431ffc:	add    bl,BYTE PTR [edi+edx*8]
  431fff:	jle    0x43202f
  432001:	fisttp QWORD PTR [esi-0x476495de]
  432007:	jae    0x431fd4
  432009:	push   ss
  43200a:	push   es
  43200b:	push   esi
  43200c:	popf   
  43200d:	in     al,0x81
  43200f:	cli    
  432010:	xchg   BYTE PTR [ebx],ch
  432012:	jmp    0x432092
  432014:	push   es
  432015:	and    DWORD PTR [edi+0x6d93680e],ecx
  43201b:	std    
  43201c:	call   0x8e49acb8
  432021:	pop    edi
  432022:	or     edx,edi
  432024:	out    0x9a,al
  432026:	test   eax,0x9bab5c
  43202b:	xchg   DWORD PTR [ecx],ebp
  43202d:	add    BYTE PTR [eax-0x6aaa4085],bl
  432033:	jns    0x43207e
  432035:	or     eax,0x11417b40
  43203a:	dec    eax
  43203b:	pop    es
  43203c:	shr    BYTE PTR [edx-0x2d],1
  43203f:	stc    
  432040:	xchg   BYTE PTR [edi],dl
  432042:	fs jnp 0x432082
  432045:	sub    eax,0xec73421d
  43204a:	fidiv  WORD PTR [edi-0x4020c6dd]
  432050:	daa    
  432051:	cmp    DWORD PTR [ebx+0x4fad7e30],esp
  432057:	jnp    0x4320aa
  432059:	fnstsw WORD PTR [esi-0x2893c03d]
  43205f:	lea    ecx,[edx+eiz*2]
  432062:	icebp  
  432063:	fisttp QWORD PTR [edi+0x72]
  432066:	push   ecx
  432067:	fimul  DWORD PTR [edi+0x5e]
  43206a:	push   0x9ee1c382
  43206f:	scas   eax,DWORD PTR es:[edi]
  432070:	sbb    esp,DWORD PTR [edx-0x2b]
  432073:	leave  
  432074:	test   BYTE PTR [eax],al
  432076:	mov    ebp,0x338b0b69
  43207b:	sbb    cl,BYTE PTR [edx-0x75]
  43207e:	sub    esp,DWORD PTR [esi]
  432080:	dec    edx
  432081:	dec    DWORD PTR [esi+edi*2+0x4b6608be]
  432088:	push   ss
  432089:	mov    edi,DWORD PTR [ebx]
  43208b:	or     DWORD PTR es:[esi-0x37],0xff4a4f
  432093:	mov    WORD PTR [esi-0x42],?
  432096:	or     BYTE PTR [esi],cl
  432098:	mov    esi,0x23cff79
  43209d:	xchg   ebx,eax
  43209e:	shl    BYTE PTR [edx],0xbb
  4320a1:	inc    eax
  4320a2:	sbb    al,0xbd
  4320a4:	std    
  4320a5:	(bad)  
  4320a6:	call   DWORD PTR [ebx+0x44]
  4320a9:	jns    0x43208b
  4320ab:	rcl    BYTE PTR [ecx-0x44],0x4
  4320af:	lods   eax,DWORD PTR ds:[esi]
  4320b0:	mov    ch,0xf8
  4320b2:	jmp    DWORD PTR [edx-0xd]
  4320b5:	pop    eax
  4320b6:	pop    ebp
  4320b7:	aas    
  4320b8:	clc    
  4320b9:	dec    ebx
  4320bb:	xor    eax,eax
  4320bd:	(bad)  
  4320be:	int3   
  4320bf:	cwde   
  4320c0:	xchg   esi,esp
  4320c2:	mov    edi,DWORD PTR [ebx+0x358b4ef8]
  4320c8:	aaa    
  4320c9:	div    DWORD PTR [esi+0x6f]
  4320cc:	mov    bh,dh
  4320ce:	test   DWORD PTR [edx],eax
  4320d0:	imul   eax,DWORD PTR [ebx],0x5b52fd33
  4320d6:	ret    
  4320d7:	mov    sp,0x4687
  4320db:	cmp    DWORD PTR [eax+0x3cb61c40],ecx
  4320e1:	adc    al,BYTE PTR [ebx+0xf74fda5]
  4320e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4320e8:	add    al,BYTE PTR [ecx+0x4f4b7d56]
  4320ee:	push   edx
  4320ef:	xchg   esp,eax
  4320f0:	mov    edi,0x179420a8
  4320f5:	pop    ss
  4320f6:	or     eax,0xfdbf1700
  4320fb:	je     0x4320a1
  4320fd:	mov    es,WORD PTR [ecx]
  4320ff:	xchg   DWORD PTR [edx+0x7],ecx
  432102:	mov    bl,0x4f
  432104:	inc    ebp
  432105:	mov    edi,0x17942194
  43210a:	jne    0x43214d
  43210c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43210d:	mov    ?,ecx
  43210f:	xchg   BYTE PTR [ecx+0x1f],dl
  432112:	mov    bl,0x4d
  432114:	call   DWORD PTR fs:[esi]
  432117:	cmc    
  432118:	retf   
  432119:	stc    
  43211a:	(bad)  
  43211b:	cmp    DWORD PTR [edi],edx
  43211d:	(bad)  
  43211f:	add    BYTE PTR [edx],bh
  432121:	pop    ds
  432122:	ja     0x4320e6
  432124:	push   ebx
  432125:	je     0x432166
  432127:	retf   
  432128:	fmul   DWORD PTR [edx+0x3a]
  43212b:	retf   
  43212c:	rcl    BYTE PTR [edx+0x3a],1
  43212f:	retf   
  432130:	enter  0x78c5,0x5a
  432134:	shl    BYTE PTR [edi],0x77
  432137:	jb     0x432101
  432139:	adc    dl,BYTE PTR [ebx-0x5fd8f08d]
  43213f:	xchg   bl,cl
  432141:	add    eax,0xb39f9379
  432146:	or     edi,edx
  432148:	imul   edx,ebx,0xd
  43214b:	ss push esi
  43214d:	sbb    al,0xa7
  43214f:	xchg   bl,dl
  432151:	shl    DWORD PTR [eax-0x510e5f74],1
  432157:	dec    edi
  432158:	cmp    al,0x50
  43215a:	pop    es
  43215b:	cli    
  43215c:	add    BYTE PTR [ebx+0x73],al
  43215f:	mov    ah,0x4b
  432161:	comiss xmm1,xmm0
  432164:	sub    bl,dl
  432166:	stc    
  432167:	(bad)  
  432168:	pop    edx
  432169:	mov    eax,0x8f476600
  43216e:	sub    DWORD PTR [edx-0x48f2f751],edi
  432174:	cld    
  432175:	inc    esi
  432176:	inc    edx
  432177:	dec    ecx
  432178:	cmp    ah,0x2
  43217b:	inc    BYTE PTR [eax+0x71]
  43217e:	add    al,0xe
  432180:	inc    ecx
  432181:	repnz add dh,dh
  432184:	inc    ebx
  432185:	pop    ecx
  432186:	pushaw 
  432188:	add    ah,BYTE PTR [ecx-0x17]
  43218b:	outs   dx,BYTE PTR ds:[esi]
  43218c:	mov    esp,0x7e368ba3
  432191:	(bad)  
  432192:	pop    ecx
  432193:	loop   0x4321e9
  432195:	push   esp
  432196:	(bad)  
  432197:	data16 sbb cl,cl
  43219a:	cmp    ah,BYTE PTR [esi]
  43219c:	xchg   ecx,eax
  43219d:	xchg   edi,eax
  43219e:	sub    esp,DWORD PTR [esi]
  4321a0:	sbb    BYTE PTR [ecx+0x35b92732],bh
  4321a6:	mov    eax,ebp
  4321a8:	xchg   esi,eax
  4321a9:	mov    esp,0x967fd603
  4321ae:	sbb    DWORD PTR [edi+0x0],0xffffff94
  4321b2:	packssdw mm0,QWORD PTR [edx-0x6d]
  4321b6:	jmp    edi
  4321b8:	jle    0x4321a0
  4321ba:	je     0x4321a2
  4321bc:	mov    dl,0xef
  4321be:	mov    ebp,DWORD PTR [ecx+0x38e70007]
  4321c4:	pop    esi
  4321c5:	adc    al,0xe1
  4321c7:	call   0xffb12c7b
  4321cc:	call   0x32cf0993
  4321d1:	nop
  4321d2:	fcmovb st,st(4)
  4321d4:	jmp    0x43215c
  4321d6:	dec    ecx
  4321d7:	add    edx,DWORD PTR ds:0x137712e9
  4321dd:	pop    es
  4321de:	(bad)  
  4321df:	cmp    BYTE PTR [esi-0x45],ch
  4321e2:	jecxz  0x4321f3
  4321e4:	add    BYTE PTR [edi],bh
  4321e6:	xchg   esi,eax
  4321e7:	mov    DWORD PTR [ecx+0x21],eax
  4321ea:	arpl   di,bx
  4321ec:	or     DWORD PTR [edi+0x282cffde],ebx
  4321f2:	xor    eax,DWORD PTR [edx+0x54]
  4321f5:	pusha  
  4321f6:	xlat   BYTE PTR ds:[ebx]
  4321f7:	inc    esi
  4321f8:	jg     0x43224d
  4321fa:	xchg   esi,eax
  4321fb:	add    DWORD PTR [eax],eax
  4321fd:	jmp    0xe6c82d2c
  432202:	adc    dh,BYTE PTR [edi+0x4]
  432205:	jmp    0x2e6da5f8
  43220a:	lahf   
  43220b:	cli    
  43220c:	test   DWORD PTR [esi+0x58],ebp
  43220f:	adc    DWORD PTR [eax],eax
  432211:	jmp    0xd27f6c70
  432216:	pop    eax
  432217:	outs   dx,BYTE PTR ds:[esi]
  432218:	popa   
  432219:	bound  esp,QWORD PTR [edi]
  43221b:	imul   edi,ebp,0xfffffffa
  43221e:	rol    al,cl
  432220:	ins    DWORD PTR es:[edi],dx
  432221:	int3   
  432222:	fcmove st,st(0)
  432224:	test   DWORD PTR [eax],edx
  432226:	add    BYTE PTR [ecx],bl
  432228:	idiv   dh
  43222a:	out    0x97,eax
  43222c:	add    BYTE PTR [edx-0x14],dh
  43222f:	push   edx
  432230:	std    
  432231:	add    cl,ch
  432233:	xchg   edi,eax
  432234:	xchg   DWORD PTR [ecx+0x11],ecx
  432237:	dec    ebx
  432238:	dec    ebx
  43223a:	inc    ebx
  43223b:	nop
  43223c:	dec    edi
  43223d:	call   0xfa3db2f7
  432242:	push   0xffffffbb
  432244:	or     ebp,edi
  432246:	xchg   esi,eax
  432247:	cmp    eax,0x65a99989
  43224c:	(bad)  
  43224d:	stc    
  43224e:	inc    edx
  43224f:	fisttp DWORD PTR [edx+edx*4+0x90eb]
  432256:	rcr    cl,cl
  432258:	outs   dx,BYTE PTR ds:[esi]
  432259:	and    edx,eax
  43225b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43225c:	add    dl,0x0
  43225f:	das    
  432260:	add    eax,0x3a660000
  432265:	xor    dh,cl
  432267:	xor    eax,DWORD PTR [ecx+eax*4]
  43226a:	icebp  
  43226b:	mov    dh,0xba
  43226d:	xor    DWORD PTR [esi+0x2e],edx
  432270:	cmp    ah,BYTE PTR [ebx+0x0]
  432273:	fcomp  QWORD PTR [ecx]
  432275:	(bad)  
  432276:	stc    
  432277:	push   0xa
  432279:	jp     0x43223f
  43227b:	jmp    0xe403cf84
  432280:	add    DWORD PTR [eax],eax
  432282:	pop    esi
  432283:	ss inc edi
  432285:	(bad)
  432288:	jg     0x43226f
  43228a:	push   esi
  43228b:	add    BYTE PTR [edx],al
  43228d:	jg     0x43230b
  43228f:	or     BYTE PTR [esi-0x3e],ah
  432292:	add    eax,0xf90a7abe
  432297:	(bad)  
  432298:	ds inc ecx
  43229a:	repnz cmp esi,DWORD PTR [ebx-0x6a]
  43229e:	or     BYTE PTR [ebx+0x249d75bd],cl
  4322a4:	lods   eax,DWORD PTR ds:[esi]
  4322a5:	add    DWORD PTR [eax],eax
  4322a7:	add    BYTE PTR [esi],dh
  4322a9:	ret    0x836d
  4322ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4322ad:	add    DWORD PTR [ebp+0x10],ebp
  4322b0:	lds    eax,FWORD PTR [ebx+0x7bbafff7]
  4322b6:	ds je  0x4322b9
  4322b9:	inc    ebp
  4322ba:	push   es
  4322bb:	test   dl,bh
  4322bd:	add    al,0x0
  4322bf:	add    BYTE PTR [eax+eax*8+0x65],ch
  4322c3:	mov    ebp,DWORD PTR [edx-0x26a87d58]
  4322c9:	aas    
  4322ca:	ds je  0x43234a
  4322cd:	add    DWORD PTR [eax],eax
  4322cf:	add    al,ch
  4322d1:	add    BYTE PTR [edi],ch
  4322d3:	je     0x432346
  4322d5:	int3   
  4322d6:	leave  
  4322d7:	jb     0x43226d
  4322d9:	rcr    ah,1
  4322db:	iret   
  4322dc:	sbb    eax,0xdb889036
  4322e1:	adc    edi,DWORD PTR [ecx-0x38]
  4322e4:	mov    esp,0x6c527ce6
  4322e9:	jmp    0x6533:0xba96e62e
  4322f0:	add    BYTE PTR [edx+edx*1-0x4939b0c3],dl
  4322f7:	adc    eax,0xfde7d019
  4322fc:	xchg   BYTE PTR [ebx-0x45],dl
  4322ff:	jbe    0x432343
  432301:	pusha  
  432302:	jb     0x432303
  432304:	jle    0x4322d6
  432306:	(bad)  
  432307:	adc    eax,0x735f089
  43230c:	xchg   BYTE PTR [ebx-0x6bf07a96],bl
  432312:	fwait
  432313:	rol    BYTE PTR [esi+0x527cbb4b],0x40
  43231a:	bound  edi,QWORD PTR [edi-0x2ec780d5]
  432320:	add    DWORD PTR [ebp-0x1bc90219],edx
  432326:	js     0x4322ab
  432328:	test   ch,bl
  43232a:	outs   dx,BYTE PTR ds:[esi]
  43232b:	add    BYTE PTR [edi-0x3efb50ad],al
  432331:	scas   eax,DWORD PTR es:[edi]
  432332:	call   0xe771e30b
  432337:	mov    bl,0x4f
  432339:	jmp    0x4322fc
  43233b:	sub    al,0x36
  43233d:	xchg   esp,eax
  43233e:	jmp    0x6f336dbf
  432343:	add    BYTE PTR [edi+0x50],bh
  432346:	fidiv  DWORD PTR [esi+0x4a]
  432349:	rol    cl,1
  43234b:	mov    esp,0x7cab6bfb
  432350:	adc    dl,BYTE PTR [edi]
  432352:	add    DWORD PTR ds:0xb5b00f4,ebx
  432358:	fs mov eax,0xa892fc4e
  43235e:	jp     0x432320
  432360:	sub    DWORD PTR [edi-0x80377fe],esp
  432366:	adc    bl,dh
  432368:	repz adc al,0x1a
  43236b:	dec    esp
  43236c:	adc    edi,DWORD PTR [edi+0x5c]
  43236f:	jns    0x432353
  432371:	jl     0x432349
  432373:	cmp    dh,ah
  432375:	inc    edx
  432376:	xor    bh,bh
  432378:	adc    eax,0x66cec244
  43237d:	or     DWORD PTR [edi+0x5145730b],edx
  432383:	xchg   DWORD PTR [edx-0x6a2e4d69],ebx
  432389:	mov    bl,0x46
  43238b:	call   0xfc2eeff3
  432390:	pop    esi
  432391:	shr    BYTE PTR [edi-0x77],0xaa
  432395:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  432396:	adc    al,BYTE PTR [esi+eiz*2]
  432399:	aas    
  43239a:	mov    ds:0xce0c13e8,eax
  43239f:	sti    
  4323a0:	pop    esi
  4323a1:	clc    
  4323a2:	jb     0x432364
  4323a4:	rol    dl,0x8b
  4323a7:	jne    0x432392
  4323a9:	test   BYTE PTR [ebp-0x14911dfc],ch
  4323af:	pop    ebx
  4323b0:	mov    DWORD PTR [ebx-0x571a1fde],edi
  4323b6:	fidivr DWORD PTR [edi-0x27]
  4323b9:	add    BYTE PTR [eax],al
  4323bb:	lahf   
  4323bc:	xchg   esp,eax
  4323bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4323be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4323bf:	in     eax,dx
  4323c0:	lea    esp,[ebx]
  4323c2:	add    al,0x95
  4323c4:	pop    ebp
  4323c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4323c6:	cmp    BYTE PTR [edi-0x34],cl
  4323c9:	stos   DWORD PTR es:[edi],eax
  4323ca:	cmp    BYTE PTR [edi-0x34],bl
  4323cd:	add    BYTE PTR [edi+ebp*8],bl
  4323d0:	out    0x4d,eax
  4323d2:	pop    ss
  4323d3:	xor    eax,DWORD PTR [edx+0xcef17b]
  4323d9:	add    cl,ch
  4323db:	xchg   edi,eax
  4323dc:	cmp    ecx,0x62
  4323df:	or     ebp,DWORD PTR [edi+0x3b]
  4323e2:	out    0x98,eax
  4323e4:	add    BYTE PTR [eax],al
  4323e6:	cli    
  4323e7:	xor    eax,0x9b7c4fe3
  4323ec:	test   BYTE PTR [ebp+0x7382042e],0xdd
  4323f3:	dec    esp
  4323f4:	add    edi,edi
  4323f6:	call   0x644b8f92
  4323fb:	mov    ds:0x95a18406,al
  432400:	add    BYTE PTR [eax],al
  432402:	fs pop eax
  432404:	push   es
  432405:	test   BYTE PTR [esi+0x6a000095],ch
  43240b:	mov    al,ds:0x6ec56ffa
  432410:	ds dec eax
  432412:	bound  ebp,QWORD PTR [ebx]
  432414:	push   ebx
  432415:	test   DWORD PTR [esi-0x2a8e7dfd],edi
  43241b:	xchg   bl,bl
  43241d:	test   DWORD PTR [esi-0x4dfa2100],esp
  432423:	popf   
  432424:	enter  0x2efc,0x28
  432428:	mov    bh,0x3d
  43242a:	push   esp
  43242b:	jb     0x432418
  43242d:	ds sbb eax,0x404e2efb
  432433:	pusha  
  432434:	jecxz  0x432478
  432436:	bound  esi,QWORD PTR [edx-0x65]
  432439:	aas    
  43243a:	bound  esi,QWORD PTR [eax-0x6d]
  43243d:	ins    BYTE PTR es:[edi],dx
  43243e:	test   DWORD PTR [esi],esp
  432440:	sub    al,0x1b
  432442:	dec    ecx
  432443:	adc    eax,0x404eff
  432448:	or     BYTE PTR [ebx-0x3],0x49
  43244c:	out    0xb2,al
  43244e:	inc    ecx
  43244f:	mov    ecx,DWORD PTR [edx-0x5574a040]
  432455:	cwde   
  432456:	pop    edi
  432457:	mov    DWORD PTR [ecx],edi
  432459:	mov    eax,0xe1a9c084
  43245e:	or     BYTE PTR [edi-0x6f],0x75
  432462:	dec    esi
  432463:	sub    al,0x56
  432465:	ss sub dl,0x2b
  432469:	add    eax,0x38560000
  43246e:	outs   dx,BYTE PTR ds:[esi]
  43246f:	or     eax,0x39e1a98d
  432474:	dec    esi
  432475:	(bad)  
  432476:	inc    DWORD PTR [edx+0x4788f569]
  43247c:	fnstsw WORD PTR [esi+0x76]
  43247f:	pusha  
  432480:	(bad)  
  432481:	bnd jnp 0x4324a9
  432484:	add    ah,ch
  432486:	std    
  432487:	jmp    DWORD PTR [ebp-0x7a]
  43248a:	mov    dl,0x65
  43248c:	data16 xchg BYTE PTR [ecx+0x5d4a8b69],dh
  432493:	verw   bp
  432496:	ja     0x4324d6
  432498:	pusha  
  432499:	dec    dx
  43249b:	popf   
  43249c:	push   ss
  43249d:	mov    ebp,0x74b704fd
  4324a2:	fwait
  4324a3:	mov    BYTE PTR [ebx+ecx*1],cl
  4324a6:	ja     0x432436
  4324a8:	cwde   
  4324a9:	(bad)  
  4324ab:	dec    DWORD PTR [edx+0xf5d6a]
  4324b1:	mov    ebp,0xb987fad1
  4324b6:	iret   
  4324b7:	add    BYTE PTR [edi-0x614f3],bl
  4324bd:	or     BYTE PTR [ebx-0x47],0xf
  4324c1:	xchg   esp,eax
  4324c2:	cdq    
  4324c3:	je     0x432544
  4324c5:	iret   
  4324c6:	daa    
  4324c7:	add    al,0x62
  4324c9:	xchg   ebp,eax
  4324ca:	arpl   WORD PTR [ebx-0x69],bp
  4324cd:	cwde   
  4324ce:	out    0xfd,eax
  4324d0:	mov    WORD PTR [eax],ss
  4324d2:	pop    edx
  4324d3:	ins    BYTE PTR es:[edi],dx
  4324d4:	add    edx,DWORD PTR [edi+eiz*8-0x5da43f82]
  4324db:	add    al,0x0
  4324dd:	or     al,0xe7
  4324df:	(bad)  
  4324e0:	call   DWORD PTR [ecx+ecx*1-0x24383839]
  4324e7:	hlt    
  4324e8:	mov    dl,0x0
  4324ea:	dec    ebp
  4324eb:	repnz dec ebx
  4324ed:	adc    BYTE PTR [eax+esi*1],0xc4
  4324f1:	(bad)  
  4324f2:	ds in  al,0xf4
  4324f5:	mov    dl,0x45
  4324f7:	test   al,0x16
  4324f9:	add    cl,BYTE PTR [ebx+0x5e7f7e99]
  4324ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  432500:	std    
  432501:	popa   
  432502:	xchg   ebp,eax
  432503:	jae    0x432580
  432505:	xchg   DWORD PTR [ebp+0x1386fde7],ecx
  43250b:	arpl   dx,bp
  43250d:	push   ebx
  43250f:	cmc    
  432510:	ss xlat BYTE PTR es:[ebx]
  432513:	out    dx,eax
  432514:	jl     0x4324b5
  432516:	mov    ah,bh
  432518:	std    
  432519:	xchg   BYTE PTR [ebx-0x79],dl
  43251c:	hlt    
  43251d:	xchg   ebx,eax
  43251e:	aad    0xcf
  432520:	mov    esp,0x77181f73
  432525:	dec    edx
  432526:	dec    eax
  432527:	into   
  432528:	jl     0x4325a9
  43252a:	xchg   esp,eax
  43252b:	out    0xfd,eax
  43252d:	jb     0x43257a
  43252f:	add    ax,0x25fe
  432533:	xchg   ebp,eax
  432534:	mov    ch,0x88
  432536:	pop    ebx
  432537:	xchg   esi,edi
  432539:	pop    edx
  43253a:	sub    BYTE PTR [eax],al
  43253c:	outs   dx,BYTE PTR ds:[esi]
  43253d:	lods   al,BYTE PTR ds:[esi]
  43253e:	dec    DWORD PTR [ebx+0x4812bc3a]
  432544:	das    
  432545:	jns    0x43251d
  432547:	cmp    dl,bl
  432549:	dec    ebp
  43254a:	xlat   BYTE PTR ds:[ebx]
  43254b:	add    ah,ch
  43254d:	xor    BYTE PTR [eax],al
  43254f:	push   edx
  432550:	mov    WORD PTR [edx],gs
  432552:	sar    BYTE PTR [edx-0x3842f93d],0x8b
  432559:	or     dl,al
  43255b:	or     al,0x40
  43255d:	das    
  43255e:	cmc    
  43255f:	push   es
  432560:	std    
  432561:	daa    
  432562:	loope  0x4325c5
  432564:	mov    WORD PTR [edx],?
  432566:	les    esi,FWORD PTR [ebp-0x71561c77]
  43256c:	scas   eax,DWORD PTR es:[edi]
  43256d:	sub    bl,BYTE PTR [eax+0x792f481a]
  432573:	(bad)  
  432574:	cmp    al,0x9
  432576:	jnp    0x43250f
  432578:	dec    edx
  432579:	push   0xffffffb4
  43257b:	mov    ebx,0x9403e8bb
  432580:	add    ah,dl
  432582:	dec    esp
  432583:	cld    
  432584:	and    edi,0x3
  432587:	xchg   esp,eax
  432588:	add    DWORD PTR [edx-0xafed69],esp
  43258e:	add    BYTE PTR [edi+0x64],al
  432591:	outs   dx,BYTE PTR ds:[esi]
  432592:	mov    ah,0x43
  432594:	mov    edi,0xf7e3a3aa
  432599:	out    0x3,eax
  43259b:	(bad)  
  43259c:	scas   al,BYTE PTR es:[edi]
  43259d:	in     eax,0x7a
  43259f:	push   esi
  4325a0:	dec    eax
  4325a1:	and    ebx,DWORD PTR ss:[esi+0x73029dae]
  4325a8:	rol    esi,0xbc
  4325ab:	mov    DWORD PTR [bp+si-0x4545],ebp
  4325b0:	push   ebp
  4325b1:	outs   dx,BYTE PTR ds:[esi]
  4325b2:	lods   al,BYTE PTR ds:[esi]
  4325b3:	add    BYTE PTR [edi],bh
  4325b5:	mov    eax,DWORD PTR [eax]
  4325b7:	scas   al,BYTE PTR es:[edi]
  4325b8:	iret   
  4325b9:	jge    0x4325bf
  4325bb:	jmp    0x4325d9
  4325bd:	mov    ah,BYTE PTR [eax-0x7aff6801]
  4325c3:	jbe    0x432601
  4325c5:	adc    al,BYTE PTR [eax]
  4325c7:	jmp    0x60a61896
  4325cc:	mov    esp,0x385e853e
  4325d1:	adc    al,BYTE PTR [eax]
  4325d3:	jmp    0xdfdbaef2
  4325d8:	xchg   edi,eax
  4325d9:	add    BYTE PTR [eax-0x65087f1b],cl
  4325df:	dec    ecx
  4325e0:	scas   al,BYTE PTR es:[edi]
  4325e1:	add    BYTE PTR [eax],al
  4325e3:	out    dx,al
  4325e4:	or     eax,0x23e862c0
  4325e9:	adc    DWORD PTR [ecx+ebp*8+0x76850097],0xe90011f4
  4325f4:	add    al,0x7c
  4325f6:	sbb    DWORD PTR [ebp-0x68],0x41ba0000
  4325fd:	sbb    eax,0xa02720c5
  432602:	adc    ch,cl
  432604:	xchg   edi,eax
  432605:	or     DWORD PTR [ebx+ebp*1+0x62744a97],edx
  43260c:	add    dh,bh
  43260e:	pop    edx
  43260f:	aad    0x1c
  432611:	repnz or DWORD PTR [ebp-0x39],esp
  432615:	cli    
  432616:	stc    
  432617:	add    BYTE PTR ss:[ebx],dl
  43261a:	dec    ecx
  43261b:	pop    esp
  43261c:	fs leave 
  43261e:	ja     0x432621
  432620:	jb     0x432681
  432622:	cmp    ch,bh
  432624:	daa    
  432625:	mov    ebx,0x13292ef5
  43262a:	push   ecx
  43262b:	ins    BYTE PTR es:[edi],dx
  43262c:	adc    DWORD PTR [edi+0xf00cf1d],0x53
  432633:	dec    edi
  432634:	call   0x4360e6
  432639:	ss dec ebx
  43263b:	ins    BYTE PTR es:[edi],dx
  43263c:	mov    edx,esi
  43263e:	push   esi
  43263f:	add    DWORD PTR [edi],0xfffffffe
  432642:	mov    ebp,0xf3dde810
  432647:	idiv   edi
  432649:	not    BYTE PTR [edx]
  43264b:	jnp    0x4326c6
  43264d:	jge    0x432651
  43264f:	pop    es
  432650:	test   ecx,edx
  432652:	add    dh,dh
  432654:	dec    DWORD PTR [edx-0x793fd49e]
  43265a:	pop    edi
  43265b:	mov    ebx,0x7d607a8b
  432660:	leave  
  432661:	jne    0x43266c
  432663:	add    DWORD PTR [edi+0x35],0xffffffff
  432667:	mov    eax,0xc02f2feb
  43266c:	xor    edi,edi
  43266e:	jle    0x432666
  432670:	add    al,0x2a
  432672:	mov    ?,WORD PTR [edx+0x6c5aa652]
  432678:	sub    edi,esp
  43267a:	dec    ebx
  43267b:	push   eax
  43267c:	push   edi
  43267d:	add    BYTE PTR ds:0xfd0038ab,dl
  432683:	xchg   BYTE PTR [edi],bh
  432685:	ins    BYTE PTR es:[edi],dx
  432686:	test   BYTE PTR [edx+0x5c],cl
  432689:	mov    esi,edx
  43268b:	jle    0x432651
  43268d:	adc    BYTE PTR [ebp+0x1a],dl
  432690:	icebp  
  432691:	call   FWORD PTR [edx-0x7a]
  432694:	pop    es
  432695:	xor    edi,DWORD PTR [ebp+0x20103934]
  43269b:	adc    edi,DWORD PTR [ebx-0x2]
  43269e:	icebp  
  43269f:	adc    cl,BYTE PTR [ebp+0x535fdac0]
  4326a5:	dec    eax
  4326a6:	ds loope 0x4326a3
  4326a9:	pop    esp
  4326aa:	xchg   esp,eax
  4326ab:	sub    al,BYTE PTR [edx-0x6e296f06]
  4326b1:	rcl    BYTE PTR [ebx-0x63],0x5a
  4326b5:	mov    edx,DWORD PTR [eax-0x19]
  4326b8:	add    al,0x5b
  4326ba:	xlat   BYTE PTR ds:[ebx]
  4326bb:	xchg   esp,eax
  4326bc:	mov    ch,ah
  4326be:	inc    edi
  4326bf:	lea    edx,[esi-0x7b]
  4326c2:	adc    eax,esi
  4326c4:	mov    esp,0xfde78bff
  4326c9:	test   BYTE PTR [ebx+0x15744f62],al
  4326cf:	rol    BYTE PTR [esi],1
  4326d1:	push   DWORD PTR [ebx-0x19]
  4326d4:	je     0x4326f4
  4326d6:	jl     0x43270f
  4326d8:	cli    
  4326d9:	stc    
  4326da:	arpl   WORD PTR [edx+0x4f],sp
  4326dd:	je     0x4326f4
  4326df:	mov    al,0x6
  4326e1:	inc    DWORD PTR [eax]
  4326e3:	push   ebx
  4326e4:	out    0x74,eax
  4326e6:	push   es
  4326e7:	pop    ss
  4326e8:	adc    al,0x10
  4326ea:	add    BYTE PTR [ebx+0x3bfe2e63],dl
  4326f0:	out    0x82,eax
  4326f2:	(bad)  
  4326f3:	mov    ds:0x2bfed763,eax
  4326f8:	out    0x34,eax
  4326fa:	rcl    BYTE PTR [edi],0x70
  4326fd:	add    ebp,DWORD PTR [esi-0x33]
  432700:	bound  eax,QWORD PTR [edi+0x48]
  432703:	pop    ds
  432704:	scas   al,BYTE PTR es:[edi]
  432705:	push   ebp
  432706:	test   DWORD PTR [ebx-0x3d],esp
  432709:	mov    WORD PTR [ecx-0x38],?
  43270c:	cmp    ah,ah
  43270e:	test   DWORD PTR [ebx+0xf],ecx
  432711:	lss    esp,FWORD PTR [eax-0x28]
  432715:	add    ebp,DWORD PTR ds:0x544709d5
  43271b:	setle  BYTE PTR [ecx+0x1d]
  43271f:	out    0x61,al
  432721:	push   edi
  432722:	inc    eax
  432723:	sbb    eax,0x364baa00
  432728:	mov    ebx,esp
  43272a:	inc    edx
  43272b:	ss xchg ebx,ebp
  43272e:	jne    0x432741
  432730:	inc    ebp
  432731:	jnp    0x432757
  432733:	pop    ebp
  432734:	sub    al,0x6e
  432736:	pop    ecx
  432737:	push   esp
  432738:	add    eax,0x895a0832
  43273d:	mov    ds:0xa34d114b,al
  432742:	imul   ebx,DWORD PTR [ecx],0x6a536c
  432748:	adc    ebp,DWORD PTR ds:0x60cd8d2d
  43274e:	pop    esi
  43274f:	pop    eax
  432750:	add    al,0xb3
  432752:	in     eax,0x3
  432754:	xchg   esp,eax
  432755:	add    BYTE PTR [eax+0x50],dh
  432758:	in     al,dx
  432759:	mov    DWORD PTR [edx],edx
  43275b:	push   0x87476c1b
  432760:	push   esp
  432761:	ins    DWORD PTR es:[edi],dx
  432762:	sbb    eax,0xe7811d3d
  432767:	add    edx,DWORD PTR [edi+ebp*2+0x64e58d25]
  43276e:	pop    esi
  43276f:	push   eax
  432770:	push   0x3b82b727
  432775:	sti    
  432776:	out    0x3,eax
  432778:	xchg   esp,eax
  432779:	aaa    
  43277a:	cwde   
  43277b:	js     0x4327e1
  43277d:	push   eax
  43277e:	sbb    ch,ah
  432780:	bound  esp,QWORD PTR [eax]
  432782:	out    0x3,eax
  432784:	xchg   ecx,eax
  432785:	mov    esp,0x60558aef
  43278a:	data16 sti 
  43278c:	xchg   edi,eax
  43278d:	imul   esi,ecx,0x3a
  432790:	sbb    eax,0x9403e789
  432795:	ins    BYTE PTR es:[edi],dx
  432796:	(bad)  
  432797:	test   ah,ch
  432799:	push   DWORD PTR [ebx+0x4c1912]
  43279f:	lds    ebp,FWORD PTR [eax-0x2e978faf]
  4327a5:	add    BYTE PTR [eax],dl
  4327a7:	jmp    0x70409643
  4327ac:	add    BYTE PTR [eax+eiz*2],bh
  4327af:	test   DWORD PTR [esi-0x15078ac1],ebp
  4327b5:	test   BYTE PTR [edx+0x69],dh
  4327b8:	call   0xa67a2854
  4327bd:	aaa    
  4327be:	or     DWORD PTR [ecx+0x968f],eax
  4327c4:	xchg   DWORD PTR [eax],esp
  4327c6:	push   ecx
  4327c7:	ins    BYTE PTR es:[edi],dx
  4327c8:	dec    edi
  4327c9:	mov    edi,0xdb726451
  4327ce:	test   DWORD PTR fs:[esi],esp
  4327d1:	cld    
  4327d2:	pop    esi
  4327d3:	and    eax,0xa4991fba
  4327d8:	fist   WORD PTR [edi-0x6fca7500]
  4327de:	test   DWORD PTR [esi-0x4ef627d2],0xa0911fa3
  4327e8:	call   DWORD PTR [edi-0x5b8f9e00]
  4327ee:	inc    ebp
  4327ef:	test   DWORD PTR [esi-0x10],esi
  4327f2:	or     eax,0x911ee900
  4327f7:	cwde   
  4327f8:	fist   WORD PTR [edi+0xfea2c00]
  4327fe:	cld    
  4327ff:	adc    eax,0xb5bfe1e6
  432804:	call   0xe84328a0
  432809:	sub    ah,BYTE PTR [eax+0x997e912]
  43280f:	mov    dl,0x79
  432811:	add    BYTE PTR [eax],dl
  432813:	cmp    eax,0xf379e940
  432818:	xchg   ebp,eax
  432819:	add    BYTE PTR [edx-0x6c],cl
  43281c:	add    al,0x0
  43281e:	in     eax,dx
  43281f:	pop    DWORD PTR [edi+edx*4+0x845]
  432826:	cmp    al,0xbd
  432828:	idiv   edi
  43282a:	mov    ebp,0xac00b7fe
  43282f:	(bad)  
  432830:	jmp    DWORD PTR [ebp-0x1a]
  432833:	(bad)  
  432834:	imul   ecx,DWORD PTR [edx+edx*8],0xffffffa9
  432838:	ror    DWORD PTR [edi],0x6b
  43283b:	jge    0x4327bd
  43283d:	dec    ecx
  43283e:	in     eax,dx
  43283f:	(bad)  
  432840:	loop   0x43284f
  432842:	mov    dl,0xa9
  432844:	leave  
  432845:	rcl    DWORD PTR [edi-0x49f907],0x7d
  43284c:	inc    edx
  43284d:	inc    eax
  43284e:	ins    DWORD PTR es:[edi],dx
  43284f:	pop    esp
  432850:	stc    
  432851:	fwait
  432852:	jmp    0x7f87:0x7d000185
  432859:	pushf  
  43285a:	dec    ebx
  43285b:	(bad)  
  43285c:	jmp    FWORD PTR [edx]
  43285e:	cs das 
  432860:	sar    DWORD PTR [ecx],0xea
  432863:	popf   
  432864:	push   cs
  432865:	add    BYTE PTR ds:0x42783f87,bh
  43286b:	mov    bh,BYTE PTR [ecx-0x2fd90175]
  432871:	add    DWORD PTR [edx+0x78],edi
  432874:	jnp    0x432836
  432876:	add    BYTE PTR [ebx],ah
  432878:	test   DWORD PTR [edi],edi
  43287a:	js     0x432820
  43287c:	push   eax
  43287d:	or     bl,ch
  43287f:	cs xchg ecx,eax
  432881:	inc    ecx
  432882:	add    BYTE PTR [ebx+edx*2],ch
  432885:	ins    BYTE PTR es:[edi],dx
  432886:	mov    ebp,DWORD PTR [edx-0x1529cc90]
  43288c:	xor    eax,DWORD PTR [ebx+0x47874547]
  432892:	pop    eax
  432893:	xchg   esp,eax
  432894:	pop    esi
  432895:	pop    edx
  432896:	xor    al,0xc7
  432898:	inc    edi
  432899:	xchg   BYTE PTR [ecx-0x54],cl
  43289c:	jmp    0xbf2e:0xe5854cb3
  4328a3:	mov    bh,0xa2
  4328a5:	push   ecx
  4328a6:	test   DWORD PTR [ebx-0x65],esp
  4328a9:	mov    WORD PTR [ecx+0x5c],es
  4328ac:	jmp    0x85d7:0xc65504b2
  4328b3:	arpl   WORD PTR [edi-0x5267789d],sp
  4328b9:	or     dh,BYTE PTR [ecx+0x49868b53]
  4328bf:	dec    esp
  4328c0:	outs   dx,BYTE PTR ds:[esi]
  4328c1:	push   edx
  4328c2:	inc    esp
  4328c3:	xor    ah,BYTE PTR [eax+0x1]
  4328c6:	inc    esi
  4328c7:	dec    edi
  4328c8:	call   0xdad828ca
  4328cd:	dec    ebx
  4328ce:	js     0x4328d9
  4328d0:	xchg   edi,eax
  4328d1:	std    
  4328d2:	pop    eax
  4328d3:	call   0x944ba23e
  4328d8:	pop    esi
  4328d9:	inc    ebx
  4328da:	ins    BYTE PTR es:[edi],dx
  4328db:	add    BYTE PTR [ebx+0x22],dl
  4328de:	ins    BYTE PTR es:[edi],dx
  4328df:	add    BYTE PTR [edi+eiz*8+0x47d3c0fd],dl
  4328e6:	(bad)  
  4328e7:	call   DWORD PTR [edi+eiz*8-0x63ce7bf4]
  4328ee:	sti    
  4328ef:	stc    
  4328f0:	cvtpi2ps xmm4,QWORD PTR [eax-0x7d]
  4328f4:	lsl    ax,WORD PTR [ebp-0x39ff301d]
  4328fc:	aas    
  4328fd:	in     eax,0x30
  4328ff:	(bad)  
  432900:	scas   al,BYTE PTR es:[edi]
  432901:	out    0x28,eax
  432903:	mov    esi,0xe85318c4
  432908:	mov    ebp,0x1ffffda9
  43290d:	add    BYTE PTR [edx+0x65f9196f],dh
  432913:	enter  0x87a4,0xa2
  432917:	pop    edi
  432918:	cld    
  432919:	xchg   esi,eax
  43291a:	push   ecx
  43291b:	std    
  43291c:	in     eax,dx
  43291d:	test   dl,bl
  43291f:	sub    BYTE PTR [edx+0x10],0xe7
  432923:	or     al,0x17
  432925:	mov    ds:0x50cdfd34,eax
  43292a:	mov    DWORD PTR [eax],esi
  43292c:	aam    0x54
  43292e:	(bad)  
  43292f:	rol    BYTE PTR [ecx+0x71],0x8f
  432933:	add    ecx,DWORD PTR [ebp-0x6bfb8a84]
  432939:	add    BYTE PTR [esi+0x45],bl
  43293c:	cmp    BYTE PTR [ebp+0x1a003bb2],al
  432942:	cmp    al,0xef
  432944:	cld    
  432945:	adc    DWORD PTR [ecx+0x941647],ecx
  43294b:	pop    esi
  43294c:	lea    esi,[eax]
  43294e:	pop    ss
  43294f:	out    0x3,eax
  432951:	mov    cl,0xf6
  432953:	inc    ecx
  432954:	mov    eax,eax
  432956:	push   ecx
  432957:	pop    esi
  432958:	xchg   esp,eax
  432959:	or     al,0x17
  43295b:	out    0x3,eax
  43295d:	adc    DWORD PTR [eax+0x941587],eax
  432963:	outs   dx,DWORD PTR ds:[esi]
  432964:	pop    es
  432965:	xchg   edx,eax
  432966:	add    DWORD PTR [edx-0x5d],edx
  432969:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43296a:	add    bh,ah
  43296c:	or     al,0x6
  43296e:	ror    DWORD PTR [ecx],1
  432970:	add    esp,DWORD PTR [eax]
  432972:	cwde   
  432973:	jae    0x432978
  432975:	xchg   esp,eax
  432976:	add    BYTE PTR [edi+eax*4+0x5],ah
  43297a:	xchg   ebp,eax
  43297b:	out    0x3,eax
  43297d:	xchg   esp,eax
  43297e:	jnp    0x4329ea
  432980:	lahf   
  432981:	xchg   BYTE PTR [eax],al
  432983:	out    0x28,eax
  432985:	fldcw  WORD PTR [ecx]
  432987:	add    BYTE PTR [esi+0x37],ch
  43298a:	adc    eax,DWORD PTR [eax]
  43298c:	jmp    0xb6c84313
  432991:	arpl   WORD PTR [ebx-0x7a6f1e39],ax
  432997:	inc    ecx
  432998:	adc    DWORD PTR [ebp-0x5b141a51],edx
  43299e:	rol    BYTE PTR [ebp+0x66739e],0x12
  4329a5:	add    bh,al
  4329a7:	ds push eax
  4329a9:	sahf   
  4329aa:	mov    edi,0x97e93386
  4329af:	test   DWORD PTR [ecx-0x6b],eax
  4329b2:	push   cs
  4329b3:	inc    edx
  4329b4:	pop    esp
  4329b5:	jb     0x432947
  4329b7:	ins    DWORD PTR es:[edi],dx
  4329b8:	(bad)  
  4329b9:	stc    
  4329ba:	mov    edi,0xa80ef3f6
  4329bf:	test   DWORD PTR [ecx],ecx
  4329c1:	call   0xaf3c8606
  4329c6:	and    esi,DWORD PTR [edi]
  4329c8:	outs   dx,DWORD PTR ds:[esi]
  4329c9:	fnstcw WORD PTR [esi+0x51]
  4329cc:	stc    
  4329cd:	out    dx,al
  4329ce:	(bad)  
  4329cf:	out    dx,eax
  4329d0:	pop    edx
  4329d1:	push   ebp
  4329d2:	jg     0x432a0d
  4329d4:	je     0x432a46
  4329d6:	fistp  WORD PTR [eax-0x19]
  4329d9:	aad    0x6c
  4329db:	jmp    0x593294d9
  4329e0:	add    BYTE PTR ds:0x4d5185d6,bh
  4329e6:	or     eax,DWORD PTR [ecx+0x38]
  4329e9:	arpl   sp,dx
  4329eb:	out    dx,al
  4329ec:	cli    
  4329ed:	bound  ebx,QWORD PTR [edi]
  4329ef:	mov    al,ds:0x8597e912
  4329f4:	xchg   ecx,eax
  4329f5:	inc    ebp
  4329f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4329f7:	add    BYTE PTR [eax],al
  4329f9:	fisub  DWORD PTR ds:0xd9d58762
  4329ff:	test   DWORD PTR [ecx+0x12cd00],edx
  432a05:	add    BYTE PTR [esi+0x16987b],ah
  432a0b:	std    
  432a0c:	add    cl,BYTE PTR [eax-0x68fc13fc]
  432a12:	mov    al,ds:0xf000303
  432a17:	and    eax,esp
  432a19:	pop    esi
  432a1a:	add    DWORD PTR [ecx-0x7d],ebp
  432a1d:	xchg   esp,eax
  432a1e:	add    ch,bh
  432a20:	add    al,BYTE PTR [ebp+0x907284]
  432a26:	add    ch,ch
  432a28:	jnp    0x432a99
  432a2a:	push   0x855c3b36
  432a2f:	je     0x432a9d
  432a31:	dec    DWORD PTR [edx-0x3f04d50e]
  432a37:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  432a38:	push   es
  432a39:	sub    eax,eax
  432a3b:	ss jno 0x432a4a
  432a3e:	xor    ebp,DWORD PTR [edi-0x79]
  432a41:	test   BYTE PTR [edx+ebp*4],0x7e
  432a45:	mov    edx,0x6c532652
  432a4a:	sub    ebp,DWORD PTR [esi+edx*2-0x1e6aa8b0]
  432a51:	xor    al,0x0
  432a53:	ins    DWORD PTR es:[edi],dx
  432a54:	jg     0x432a95
  432a56:	ins    BYTE PTR es:[edi],dx
  432a57:	add    al,0x43
  432a59:	pop    esp
  432a5a:	mov    eax,DWORD PTR [edx+0x5510c487]
  432a60:	push   ebx
  432a61:	in     eax,dx
  432a62:	call   FWORD PTR [edx+0x7f]
  432a65:	pop    es
  432a66:	xor    ebp,DWORD PTR ds:0x9010392d
  432a6c:	stc    
  432a6d:	jp     0x432a6d
  432a6f:	add    BYTE PTR [ecx],dh
  432a71:	sti    
  432a72:	mov    eax,es
  432a74:	fimul  DWORD PTR [edx+0x53]
  432a77:	dec    eax
  432a78:	scas   al,BYTE PTR es:[edi]
  432a79:	loope  0x432a75
  432a7b:	pop    esp
  432a7c:	xchg   esp,eax
  432a7d:	call   0xc089:0xce90fa82
  432a84:	ret    
  432a85:	and    eax,0xd7d08b59
  432a8a:	add    al,0x5b
  432a8c:	xlat   BYTE PTR ds:[ebx]
  432a8d:	or     al,0x89
  432a8f:	in     al,dx
  432a90:	pop    ds
  432a91:	adc    eax,0x22cd2d0c
  432a96:	shl    DWORD PTR [eax+esi*2+0x72],cl
  432a9a:	inc    ebx
  432a9b:	sbb    al,0xaf
  432a9d:	sbb    BYTE PTR [ecx+0x5b],ch
  432aa0:	sbb    eax,0x4e8711a0
  432aa5:	retf   
  432aa6:	mov    WORD PTR [esi-0x74],es
  432aa9:	jo     0x432af6
  432aab:	sbb    bl,bl
  432aad:	cdq    
  432aae:	sub    eax,0xfdd7cbff
  432ab3:	xchg   BYTE PTR [eax+esi*2-0x4ff2fbbb],cl
  432aba:	add    DWORD PTR [edi+0x488cb75c],eax
  432ac0:	jl     0x432b22
  432ac2:	inc    ebp
  432ac3:	sub    al,0xd
  432ac5:	mov    al,0x2d
  432ac7:	xchg   DWORD PTR [edi+edi*4-0x74],ecx
  432acb:	dec    eax
  432acc:	shl    BYTE PTR [ebp+eax*4+0x30],1
  432ad0:	xchg   ecx,eax
  432ad1:	xlat   BYTE PTR ds:[ebx]
  432ad2:	std    
  432ad3:	rol    BYTE PTR [eax],0xd4
  432ad6:	jmp    0x432ad5
  432ad8:	jg     0x432a6e
  432ada:	xlat   BYTE PTR ds:[ebx]
  432adb:	xchg   BYTE PTR [eax+0x0],cl
  432ade:	popa   
  432adf:	dec    esp
  432ae0:	push   eax
  432ae1:	sbb    eax,0x14c1481f
  432ae6:	xchg   edi,eax
  432ae7:	sbb    eax,DWORD PTR [eax]
  432ae9:	xchg   esp,eax
  432aea:	fdivr  st,st(5)
  432aec:	call   DWORD PTR [esi+ebx*4-0x28503b7c]
  432af3:	std    
  432af4:	clc    
  432af5:	inc    ebx
  432af6:	add    BYTE PTR [edx+0x3cc069f9],ah
  432afc:	(bad)  
  432afd:	cwde   
  432afe:	add    BYTE PTR [edi-0x6],cl
  432b01:	sub    eax,0xe2578aed
  432b06:	add    esp,edi
  432b08:	(bad)  
  432b09:	dec    eax
  432b0a:	mov    esp,0xbbe0c8ab
  432b0f:	sbb    al,0x8d
  432b11:	clc    
  432b12:	js     0x432b30
  432b14:	or     al,0x65
  432b16:	xor    DWORD PTR [eax],0x70
  432b19:	cmp    BYTE PTR [ecx-0x20],0x17
  432b1d:	pop    ss
  432b1e:	in     eax,dx
  432b1f:	(bad)  [esi+0x59]
  432b22:	push   esi
  432b23:	pop    esi
  432b24:	outs   dx,DWORD PTR ds:[esi]
  432b25:	nop
  432b26:	cmp    DWORD PTR [ecx],0x7b
  432b29:	xchg   esi,eax
  432b2a:	xor    DWORD PTR [esi],ebx
  432b2c:	icebp  
  432b2d:	out    dx,al
  432b2e:	fsub   st,st(1)
  432b30:	mov    esi,gs
  432b32:	mov    esi,0x8181002e
  432b37:	and    DWORD PTR [eax+eax*1],esi
  432b3a:	aas    
  432b3b:	add    DWORD PTR [esi-0x1e],esp
  432b3e:	popf   
  432b3f:	sbb    DWORD PTR [ecx],0x70
  432b42:	xchg   BYTE PTR [ecx+0x3200c09],al
  432b48:	data16 cli 
  432b4a:	lea    ebp,[esi-0x15]
  432b4d:	pop    ecx
  432b4e:	jmp    0x8e3c1cfb
  432b53:	in     al,dx
  432b54:	mov    dl,BYTE PTR [esi+0x42]
  432b57:	stc    
  432b58:	out    0x8c,al
  432b5a:	aad    0x34
  432b5c:	fs ret 
  432b5e:	call   0xb0b43b6f
  432b63:	je     0x432b57
  432b65:	push   ebx
  432b66:	sbb    DWORD PTR [edx+0xf],eax
  432b69:	(bad)  
  432b6a:	shl    DWORD PTR [edi+edx*1],cl
  432b6d:	stc    
  432b6e:	arpl   WORD PTR [eax+0x0],di
  432b71:	and    al,0x98
  432b73:	ins    DWORD PTR es:[edi],dx
  432b74:	(bad)
  432b78:	xor    al,0xe9
  432b7a:	xchg   edi,eax
  432b7b:	add    BYTE PTR [eax],al
  432b7d:	cmp    BYTE PTR [edi],bl
  432b7f:	dec    edx
  432b80:	or     BYTE PTR [eax-0x5c],ah
  432b83:	and    al,0xe8
  432b85:	loope  0x432ba3
  432b87:	jmp    0xab5b:0x49b927f9
  432b8e:	lahf   
  432b8f:	add    BYTE PTR [eax-0x615f389],bh
  432b95:	push   cs
  432b96:	imul   ebp,DWORD PTR [edx-0x432c16f8],0xffffffcc
  432b9d:	sub    eax,0xccbcdb00
  432ba2:	mov    esp,0xa485dd18
  432ba7:	xchg   DWORD PTR ds:0xad98222d,edi
  432bad:	or     DWORD PTR [ebp+0x30],esp
  432bb0:	add    DWORD PTR [eax],eax
  432bb2:	jmp    0xde7254ce
  432bb7:	inc    edx
  432bb8:	jp     0x432bba
  432bba:	jmp    0xf5be9956
  432bbf:	outs   dx,DWORD PTR ds:[esi]
  432bc0:	stc    
  432bc1:	and    BYTE PTR [ecx-0x69],0x0
  432bc5:	add    BYTE PTR [edi-0x3df78ff0],dh
  432bcb:	mov    al,ds:0x1a9f076f
  432bd0:	sub    eax,0xaae292fa
  432bd5:	adc    cl,ch
  432bd7:	push   cs
  432bd8:	inc    esi
  432bd9:	sbb    BYTE PTR [eax],ah
  432bdb:	loop   0x432bfd
  432bdd:	jae    0x432bd2
  432bdf:	xor    bh,BYTE PTR [esi]
  432be1:	and    BYTE PTR [ecx-0x29],ch
  432be4:	sub    eax,0x18ca6000
  432be9:	aaa    
  432bea:	add    BYTE PTR [ebx-0x5f892e0],dh
  432bf0:	sub    DWORD PTR [eax+eiz*4],esp
  432bf3:	jle    0x432c34
  432bf5:	add    BYTE PTR [ebx+0x4e831c7b],cl
  432bfb:	dec    ebp
  432bfc:	cmp    ch,BYTE PTR [eax-0x34]
  432bff:	xchg   esi,eax
  432c00:	add    al,0x0
  432c02:	push   0x0
  432c04:	cmp    al,0x4f
  432c06:	not    ecx
  432c08:	mov    dh,0xec
  432c0a:	jnp    0x432bd0
  432c0c:	and    DWORD PTR [esi],esp
  432c0e:	repz jne 0x432c12
  432c11:	push   edx
  432c12:	push   esi
  432c13:	mov    eax,0xfff7f381
  432c18:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  432c19:	dec    ecx
  432c1a:	mov    edx,0x4d75ed10
  432c1f:	or     al,0x2f
  432c21:	jl     0x432c99
  432c23:	sbb    al,0x2b
  432c25:	jl     0x432c7e
  432c27:	xor    al,0x55
  432c29:	retf   
  432c2a:	idiv   bh
  432c2c:	push   edx
  432c2d:	ja     0x432c07
  432c2f:	test   DWORD PTR [esi+0x70],esi
  432c32:	adc    al,0x8b
  432c34:	sti    
  432c35:	push   ss
  432c36:	or     DWORD PTR [esi-0x67],0x3b
  432c3a:	push   eax
  432c3b:	(bad)  
  432c3c:	jl     0x432cbd
  432c3e:	les    ecx,FWORD PTR [eax]
  432c40:	jp     0x432c6c
  432c42:	sbb    al,0x0
  432c44:	mov    ebp,0xf35efffe
  432c49:	jne    0x432c06
  432c4b:	pop    ebx
  432c4c:	lock rcl BYTE PTR [eax],0x0
  432c50:	aad    0xe6
  432c52:	idiv   edi
  432c54:	add    BYTE PTR [edi+0x55],0xc2
  432c58:	pop    ebp
  432c59:	dec    bl
  432c5b:	int3   
  432c5c:	inc    ecx
  432c5d:	ret    0xcccc
  432c60:	inc    ecx
  432c61:	ret    0xcccc
  432c64:	xchg   esp,eax
  432c65:	call   0x3dee:0x4004c3d
  432c6c:	add    BYTE PTR [ebx+0x18],dl
  432c6f:	push   eax
  432c70:	pop    es
  432c71:	xchg   esp,eax
  432c72:	xlat   BYTE PTR ds:[ebx]
  432c73:	std    
  432c74:	rcl    ah,0x7
  432c77:	xchg   esp,eax
  432c78:	push   ds
  432c79:	aam    0xd7
  432c7b:	mov    edx,0xfddcdc40
  432c80:	call   DWORD PTR [esi+edx*4+0x2d58ccc1]
  432c87:	test   esp,ebp
  432c89:	lds    esi,FWORD PTR [ecx]
  432c8b:	test   DWORD PTR [ebp+0x78],ebp
  432c8e:	push   esi
  432c8f:	jae    0x432cc5
  432c91:	xchg   esp,eax
  432c92:	adc    al,BYTE PTR [ebp-0x79417e08]
  432c98:	dec    edx
  432c99:	mov    eax,0x3c204e5e
  432c9e:	fscale 
  432ca0:	call   DWORD PTR [esi+eiz*1-0xa07a23]
  432ca7:	call   DWORD PTR gs:[ebx-0x58]
  432cab:	repnz into 
  432cad:	pop    ss
  432cae:	sbb    al,0x1
  432cb0:	xchg   DWORD PTR [edx-0xd],ebx
  432cb3:	add    al,0x41
  432cb6:	ficom  WORD PTR [edx-0x48]
  432cb9:	xchg   ebp,eax
  432cba:	xlat   BYTE PTR ds:[ebx]
  432cbb:	std    
  432cbc:	call   FWORD PTR [edx+0x6e]
  432cbf:	loopne 0x432d1c
  432cc1:	xlat   BYTE PTR ds:[ebx]
  432cc2:	(bad)  
  432cc3:	mov    ebp,0x70bf5237
  432cc8:	or     eax,0xb6198a0f
  432ccd:	add    BYTE PTR [ebp+0x67fffdd7],dl
  432cd3:	cmc    
  432cd4:	mov    eax,DWORD PTR [edx-0x3c]
  432cd7:	pusha  
  432cd8:	cmp    ebp,DWORD PTR [ecx*1-0xdada6f]
  432cdf:	add    bh,dh
  432ce1:	mov    dh,dl
  432ce3:	sbb    BYTE PTR [esi],bl
  432ce5:	cld    
  432ce6:	cli    
  432ce7:	sbb    BYTE PTR [esi+0x49],bl
  432cea:	nop
  432ceb:	jne    0x432d1e
  432ced:	xor    ah,al
  432cef:	adc    eax,0xd8e253af
  432cf4:	and    eax,0x5ee94de5
  432cf9:	ds ins BYTE PTR es:[edi],dx
  432cfb:	jge    0x432ca0
  432cfd:	or     BYTE PTR [ebx],dl
  432cff:	inc    edx
  432d00:	rcl    DWORD PTR [ebp+edx*2+0x42],cl
  432d04:	xlat   BYTE PTR ds:[ebx]
  432d05:	add    edx,DWORD PTR [eax+eax*1+0x4a5430e7]
  432d0c:	pop    esi
  432d0d:	fistp  QWORD PTR [edi-0x3bc23143]
  432d13:	ja     0x432d39
  432d15:	clc    
  432d16:	rol    ecx,0xf9
  432d19:	(bad)  
  432d1a:	sbb    ch,BYTE PTR [ebx+0x6b]
  432d1d:	mov    ebp,edx
  432d1f:	je     0x432ccf
  432d21:	pop    es
  432d22:	sbb    DWORD PTR [edx+0x13],edx
  432d25:	add    DWORD PTR [esi+0x30],eax
  432d28:	mov    bh,0x28
  432d2a:	int    0x4e
  432d2c:	mov    ch,0xeb
  432d2e:	mov    ecx,ds
  432d30:	inc    edx
  432d31:	cmc    
  432d32:	add    BYTE PTR [ecx],bl
  432d34:	cmp    edi,DWORD PTR [ebx]
  432d36:	adc    eax,0x48fafdfb
  432d3c:	and    al,0x5e
  432d3e:	inc    ecx
  432d3f:	mov    BYTE PTR [ebp-0x4f],dh
  432d42:	das    
  432d43:	inc    ebp
  432d44:	adc    eax,0xd85b5422
  432d49:	add    esi,esp
  432d4b:	popf   
  432d4c:	call   0x7daf7baf
  432d51:	sub    ecx,DWORD PTR [eax]
  432d53:	sbb    esp,DWORD PTR [edi-0x49]
  432d56:	push   esp
  432d57:	adc    ecx,DWORD PTR [edi+0x0]
  432d5a:	(bad)
  432d5d:	pop    edx
  432d5e:	bound  ebx,QWORD PTR [ebx+0x4c]
  432d61:	mov    ebp,0xff18b172
  432d66:	mov    al,cs:0xf319422f
  432d6c:	add    ecx,eax
  432d6e:	daa    
  432d6f:	mov    al,ds:0x97e90000
  432d74:	jge    0x432dc8
  432d76:	or     eax,0xec6dd08d
  432d7b:	xchg   esp,eax
  432d7c:	mov    bh,0x87
  432d7e:	pop    ss
  432d7f:	ins    BYTE PTR es:[edi],dx
  432d80:	dec    ecx
  432d81:	sub    eax,0xe37dc9a9
  432d86:	cmp    al,0x55
  432d88:	mov    ch,0xcc
  432d8a:	cmp    al,0xd
  432d8c:	aad    0x85
  432d8e:	and    al,0x88
  432d90:	gs in  al,dx
  432d92:	mov    ecx,0xeec08360
  432d97:	add    BYTE PTR [ebx-0x6816f214],cl
  432d9d:	jge    0x432e17
  432d9f:	int    0x7a
  432da1:	jmp    0xf6419aaf
  432da6:	(bad)  
  432da7:	call   0xe94f96c0
  432dac:	cwde   
  432dad:	jl     0x432d88
  432daf:	cli    
  432db0:	xchg   edi,eax
  432db1:	add    BYTE PTR [ebp+0x1],bh
  432db4:	cwde   
  432db5:	jae    0x432dbd
  432db7:	push   0x4f
  432db9:	cld    
  432dba:	jmp    ebp
  432dbc:	inc    edx
  432dbd:	ror    BYTE PTR ds:0x396597e9,1
  432dc3:	repnz inc edx
  432dc5:	add    al,cl
  432dc7:	out    0x93,al
  432dc9:	add    BYTE PTR [eax],al
  432dcb:	jmp    0x624f66dc
  432dd0:	xchg   DWORD PTR [edi+0x4b],edi
  432dd3:	add    BYTE PTR [ebp+0x6104878],ah
  432dd9:	inc    esp
  432dda:	add    al,0x53
  432ddc:	test   BYTE PTR [eax+edi*1-0x77],0x30
  432de1:	out    dx,eax
  432de2:	add    DWORD PTR [ebp+0x2d],0xe655ff67
  432de9:	imul   edi,DWORD PTR [ecx+ecx*4],0xffffffb8
  432ded:	in     al,dx
  432dee:	adc    DWORD PTR [ebp+0x45],0x2e04565
  432df5:	cmp    eax,ebx
  432df7:	add    BYTE PTR ds:0x830003,bh
  432dfd:	add    eax,0x8d870712
  432e02:	push   cs
  432e03:	add    BYTE PTR [eax],al
  432e05:	cli    
  432e06:	pop    ss
  432e07:	jge    0x432ddd
  432e09:	pop    esi
  432e0a:	add    BYTE PTR ds:[ebx-0x3f811b8e],cl
  432e11:	and    bh,0xc0
  432e14:	pop    es
  432e15:	or     DWORD PTR [ebx],eax
  432e17:	add    BYTE PTR [eax],al
  432e19:	and    al,0xf0
  432e1b:	or     DWORD PTR [eax],eax
  432e1d:	in     eax,dx
  432e1e:	jge    0x432e16
  432e20:	adc    dh,bh
  432e22:	sbb    al,0x7b
  432e24:	jge    0x432e9f
  432e26:	cld    
  432e27:	push   es
  432e28:	test   BYTE PTR [esi],ah
  432e2a:	or     eax,0xa8fa0000
  432e2f:	cli    
  432e30:	(bad)  
  432e31:	clc    
  432e32:	(bad)  
  432e33:	or     esi,0xffffffae
  432e36:	fdivr  QWORD PTR [edx]
  432e38:	xor    DWORD PTR [ebx-0x1c],0xffffff82
  432e3c:	push   ebp
  432e3d:	test   edi,edi
  432e3f:	xlat   BYTE PTR ds:[ebx]
  432e40:	sub    DWORD PTR [ebx+0xc],0x6a
  432e44:	ficom  WORD PTR [ebx+0x102083b]
  432e4a:	xor    DWORD PTR [ecx-0x5],edi
  432e4d:	xchg   esp,eax
  432e4e:	out    dx,al
  432e4f:	jp     0x432e51
  432e51:	xchg   esp,eax
  432e52:	mov    WORD PTR [edi],?
  432e54:	xchg   sp,ax
  432e56:	xchg   ecx,eax
  432e57:	std    
  432e58:	gs xchg esp,eax
  432e5a:	cmovge edx,DWORD PTR [edi]
  432e5d:	xchg   esp,eax
  432e5e:	xlat   BYTE PTR ds:[ebx]
  432e5f:	jl     0x432ea2
  432e61:	add    BYTE PTR [ecx+eax*4-0x341e74fd],bl
  432e68:	addr16 xchg ecx,ecx
  432e6b:	mov    bl,0x7a
  432e6d:	push   ecx
  432e6e:	jl     0x432e98
  432e70:	push   edx
  432e71:	call   0x411f43
  432e76:	pop    ds
  432e77:	add    eax,0x716f2dec
  432e7c:	inc    esi
  432e7d:	sbb    BYTE PTR [edi-0x6afe395b],al
  432e83:	xlat   BYTE PTR ds:[ebx]
  432e84:	std    
  432e85:	(bad)  
  432e86:	cmp    eax,0x94001469
  432e8b:	jb     0x432ed3
  432e8d:	and    BYTE PTR [ebx+0x17],bl
  432e90:	adc    al,0x0
  432e92:	xchg   esp,eax
  432e93:	xlat   BYTE PTR ds:[ebx]
  432e94:	std    
  432e95:	adc    ah,0xe3
  432e98:	push   es
  432e99:	rcl    DWORD PTR [edi+eiz*4-0x12],0xf9
  432e9e:	add    ebp,DWORD PTR [edi-0x9]
  432ea1:	inc    ecx
  432ea2:	mov    eax,ds
  432ea4:	inc    BYTE PTR [ebx-0x227fb]
  432eaa:	fwait
  432eab:	(bad)  
  432eac:	ret    0xf4bf
  432eaf:	fistp  QWORD PTR [edx-0x3b]
  432eb2:	aad    0x40
  432eb4:	cmc    
  432eb5:	cld    
  432eb6:	aam    0xea
  432eb8:	shl    DWORD PTR [edi-0x22855],cl
  432ebe:	retf   
  432ebf:	sub    BYTE PTR [eax+0x7aae41ce],cl
  432ec5:	int    0x0
  432ec7:	adc    al,0x1
  432ec9:	add    eax,0xefeb1402
  432ece:	ja     0x432e62
  432ed0:	jns    0x432e7e
  432ed2:	sti    
  432ed3:	adc    BYTE PTR [edi+ecx*1-0x36],cl
  432ed7:	aam    0x8
  432ed9:	stos   DWORD PTR es:[edi],eax
  432eda:	js     0x432eb0
  432edc:	add    BYTE PTR [eax],dl
  432ede:	cmp    DWORD PTR [ebx-0x2a811900],edx
  432ee4:	sbb    al,0x28
  432ee6:	ficomp WORD PTR [eax+0x4b85ae79]
  432eec:	cmc    
  432eed:	gs loop 0x432e88
  432ef0:	sub    DWORD PTR [eax+0x54c016fc],0xb351b2e
  432efa:	scas   al,BYTE PTR es:[edi]
  432efb:	dec    ebx
  432efc:	in     eax,0xe7
  432efe:	add    edi,DWORD PTR [edx-0x4d196a00]
  432f04:	add    BYTE PTR ds:0xfb4d1b04,bh
  432f0a:	fld    TBYTE PTR [edx+0x1903e711]
  432f10:	xor    ebx,edi
  432f12:	jl     0x432edb
  432f14:	call   0xede00cc1
  432f19:	xchg   esi,eax
  432f1a:	test   ecx,ebp
  432f1c:	add    DWORD PTR [esi-0x43],esp
  432f1f:	fwait
  432f20:	ja     0x432f4c
  432f22:	or     al,0x13
  432f24:	aas    
  432f25:	mov    bh,0x7a
  432f27:	lea    esi,[ecx]
  432f29:	ds xor eax,0x4cd6e600
  432f2f:	adc    al,0x94
  432f31:	add    BYTE PTR [esi],cl
  432f33:	mov    esp,0x575ebb66
  432f38:	int3   
  432f39:	(bad)  
  432f3a:	sbb    BYTE PTR [esp+edx*4],dl
  432f3d:	add    BYTE PTR [esi+0x57],ch
  432f40:	mov    WORD PTR [ebp+0x3c8fab00],?
  432f46:	jae    0x432ef1
  432f48:	xchg   edi,eax
  432f49:	jnp    0x432f9e
  432f4b:	and    edi,ecx
  432f4d:	mov    esp,0x6397e910
  432f52:	cli    
  432f53:	stc    
  432f54:	and    BYTE PTR [esi],al
  432f56:	jge    0x432ee4
  432f58:	add    DWORD PTR [ecx],0x9
  432f5b:	ins    DWORD PTR es:[edi],dx
  432f5c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  432f5d:	repz (bad) 
  432f5f:	call   0xf641ddf8
  432f64:	mov    edx,0x491f85e4
  432f69:	loope  0x432fa9
  432f6b:	push   0x5d
  432f6d:	stc    
  432f6e:	xchg   BYTE PTR [eax+esi*2],dh
  432f71:	out    0xd1,al
  432f73:	push   0x65
  432f75:	adc    DWORD PTR [esi-0x51],ebp
  432f78:	into   
  432f79:	dec    ecx
  432f7a:	adc    BYTE PTR [ecx+0x38],ch
  432f7d:	stc    
  432f7e:	or     BYTE PTR [ebx+eax*8+0x10],ah
  432f82:	add    cl,ch
  432f84:	cmp    al,0xa6
  432f86:	add    cl,cl
  432f88:	xchg   edi,eax
  432f89:	add    BYTE PTR [esi+esi*8-0x58],dh
  432f8d:	aas    
  432f8e:	or     BYTE PTR [esi+0x4408d700],ah
  432f94:	sbb    al,0xd0
  432f96:	add    bh,ah
  432f98:	push   cs
  432f99:	test   al,0x0
  432f9b:	add    BYTE PTR [edx+0x5c],dh
  432f9e:	and    BYTE PTR [ebx-0x7b057457],al
  432fa4:	mov    ds:0x6a08dbd6,al
  432fa9:	mul    bl
  432fab:	mov    cl,dh
  432fad:	in     al,dx
  432fae:	inc    ecx
  432faf:	adc    cl,ch
  432fb1:	cdq    
  432fb2:	add    BYTE PTR [eax],al
  432fb4:	fld    QWORD PTR [ebp-0x29c2a488]
  432fba:	fisttp QWORD PTR [eax]
  432fbc:	add    bh,ah
  432fbe:	std    
  432fbf:	test   BYTE PTR [ebp+0x51],dl
  432fc2:	addr16 push ebp
  432fc4:	in     eax,dx
  432fc5:	cmp    BYTE PTR ss:[eax],bl
  432fc8:	push   edx
  432fc9:	or     eax,0xbd17eec8
  432fce:	inc    DWORD PTR [edx+0x3f667555]
  432fd4:	sbb    BYTE PTR [esi-0x4509d44c],bh
  432fda:	clc    
  432fdb:	stc    
  432fdc:	(bad)  
  432fdd:	jge    0x432fde
  432fdf:	loop   0x432fe6
  432fe1:	out    dx,al
  432fe2:	icebp  
  432fe3:	and    BYTE PTR [ebx+0x4f],dh
  432fe6:	jl     0x43305d
  432fe8:	cld    
  432fe9:	jge    0x432feb
  432feb:	test   BYTE PTR [eax+0xeffff6d],dl
  432ff1:	or     edi,esi
  432ff3:	test   BYTE PTR [ebp+0x0],0x41
  432ff7:	addr16 (bad) 
  432ff9:	rcr    DWORD PTR [ebp+0x3e],cl
  432ffc:	jnp    0x432fc4
  432ffe:	inc    ebp
  432fff:	fs dec ebp
  433001:	clc    
  433002:	cs mov bh,0x7b
  433005:	dec    BYTE PTR [ebp+0x7a8bd66e]
  43300b:	sbb    al,0x7d
  43300d:	ror    BYTE PTR [ecx+0x395880ff],0xea
  433014:	aas    
  433015:	adc    BYTE PTR ds:0xa9000001,ch
  43301b:	add    cl,BYTE PTR [eax-0x3c98dea3]
  433021:	mov    ebx,DWORD PTR [esi]
  433023:	mov    ebp,0xc62c08e1
  433028:	adc    cl,al
  43302a:	push   ss
  43302b:	hlt    
  43302c:	popa   
  43302d:	add    al,0x60
  43302f:	cmp    esp,ebp
  433031:	mov    BYTE PTR [eax],dh
  433033:	loopne 0x432fbd
  433035:	push   ebp
  433036:	xchg   esp,eax
  433037:	cmp    edi,DWORD PTR [ebx+ebx*2-0x3d]
  43303b:	pop    ebp
  43303c:	cmp    DWORD PTR [eax],ebx
  43303e:	fs mov ch,dl
  433041:	jle    0x432fee
  433043:	fscale 
  433045:	test   BYTE PTR [ecx+0x31],ah
  433048:	jnp    0x43308b
  43304a:	mov    esi,fs
  43304c:	(bad)  
  43304d:	sub    eax,0xfd0111a2
  433052:	mov    ds:0x91e4fdd8,eax
  433057:	push   esi
  433058:	jmp    0x7b7e:0xb6070010
  43305f:	mov    al,bl
  433061:	cli    
  433062:	and    DWORD PTR [eax-0x74000239],0x21
  433069:	(bad)  
  43306a:	clc    
  43306b:	loope  0x433040
  43306d:	jbe    0x433039
  43306f:	inc    edi
  433070:	mov    eax,0xf05a7d3f
  433075:	jl     0x4330ca
  433077:	pop    esp
  433078:	xlat   BYTE PTR ds:[ebx]
  433079:	lds    edi,FWORD PTR [ebp+0x52]
  43307c:	call   0x13630af0
  433081:	and    al,0x83
  433083:	push   esp
  433084:	sub    al,0x12
  433086:	test   DWORD PTR [edi+0x59],ecx
  433089:	in     al,0xf9
  43308b:	xchg   esp,eax
  43308c:	xlat   BYTE PTR ds:[ebx]
  43308d:	std    
  43308e:	xchg   ah,bl
  433090:	out    dx,eax
  433091:	jbe    0x4330dc
  433093:	je     0x433103
  433095:	mov    esi,0x7ce02cbf
  43309a:	aas    
  43309b:	mov    al,ds:0x9410428a
  4330a0:	aad    0xfd
  4330a2:	dec    DWORD PTR [eax-0x17a48a3f]
  4330a8:	cwde   
  4330a9:	(bad)  
  4330aa:	or     BYTE PTR [esi-0x2b],bh
  4330ad:	adc    BYTE PTR [ebx-0x8],0x0
  4330b1:	outs   dx,DWORD PTR ds:[esi]
  4330b2:	push   eax
  4330b3:	out    dx,eax
  4330b4:	jne    0x433058
  4330b6:	or     ecx,DWORD PTR [edx+0x50]
  4330b9:	aas    
  4330ba:	cli    
  4330bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4330bc:	add    bh,ah
  4330be:	jp     0x4330c0
  4330c0:	addr16 call 0x2ddf7736
  4330c6:	push   ds
  4330c7:	xor    al,dh
  4330c9:	mov    ecx,0x9407ea
  4330ce:	out    0xf6,eax
  4330d0:	push   ebp
  4330d1:	adc    bh,ah
  4330d3:	pop    es
  4330d4:	xchg   esp,eax
  4330d5:	add    BYTE PTR [ebx-0x81de69c],dl
  4330db:	jb     0x43308f
  4330dd:	jge    0x43306b
  4330df:	out    dx,eax
  4330e0:	xchg   esp,eax
  4330e1:	icebp  
  4330e2:	push   0xffffff8d
  4330e4:	lea    eax,[eax]
  4330e6:	out    0xfe,eax
  4330e8:	inc    ebp
  4330e9:	(bad)  
  4330ea:	icebp  
  4330eb:	aas    
  4330ec:	jo     0x433163
  4330ee:	sbb    edx,edx
  4330f0:	je     0x433130
  4330f2:	data16 (bad) 
  4330f4:	mov    WORD PTR [edi+0x34],?
  4330f7:	in     al,dx
  4330f8:	pop    ecx
  4330f9:	leave  
  4330fa:	data16 out dx,al
  4330fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4330fd:	outs   dx,BYTE PTR ds:[esi]
  4330fe:	test   eax,0x7020d579
  433103:	dec    ebp
  433104:	aam    0x7b
  433106:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  433107:	js     0x433142
  433109:	js     0x43311a
  43310b:	sbb    BYTE PTR ds:0x2a03d739,ah
  433111:	loope  0x4330fa
  433113:	ja     0x433193
  433115:	js     0x433153
  433117:	loopne 0x4330f4
  433119:	aam    0xdf
  43311b:	pop    ecx
  43311c:	adc    dh,BYTE PTR [esp+ebx*1-0x20]
  433120:	sbb    al,0x43
  433122:	xchg   esp,eax
  433123:	jns    0x433125
  433125:	or     BYTE PTR gs:[eax],bl
  433128:	push   edx
  433129:	in     al,dx
  43312a:	add    BYTE PTR [eax],0xdf
  43312d:	xchg   edi,eax
  43312e:	add    BYTE PTR [ebp+0x4178f814],al
  433134:	add    DWORD PTR [ebp-0x42a8d235],esp
  43313a:	cmc    
  43313b:	test   BYTE PTR [esi-0x2a3f8289],ch
  433141:	nop
  433142:	mov    edi,0x97d940
  433147:	add    cl,ch
  433149:	sar    dh,1
  43314b:	add    ch,cl
  43314d:	xchg   edi,eax
  43314e:	add    cl,dh
  433150:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  433151:	xchg   DWORD PTR [eax],eax
  433153:	add    al,0xe9
  433155:	xchg   edi,eax
  433156:	test   DWORD PTR [ebx+0x9076],0x8540d962
  433160:	pushf  
  433161:	jnp    0x4330eb
  433163:	inc    ebx
  433164:	std    
  433165:	lods   al,BYTE PTR ds:[esi]
  433166:	lahf   
  433167:	jb     0x43314d
  433169:	cld    
  43316a:	lahf   
  43316b:	xchg   DWORD PTR [ebx+ebp*2+0x13dec084],esp
  433172:	outs   dx,BYTE PTR ds:[esi]
  433173:	add    cl,ch
  433175:	xchg   edi,eax
  433176:	test   DWORD PTR [ecx+0x9],ecx
  433179:	adc    ecx,eax
  43317b:	je     0x433194
  43317d:	int    0x47
  43317f:	adc    BYTE PTR [eax-0x76],ah
  433182:	mov    ah,0x83
  433184:	mov    al,0xcb
  433186:	adc    al,0x85
  433188:	push   ss
  433189:	add    BYTE PTR [eax-0x7b],dh
  43318c:	inc    esi
  43318d:	fisttp QWORD PTR [ecx+ecx*2-0x73a9dc0]
  433194:	xchg   BYTE PTR [esp+ebp*1],dh
  433197:	faddp  st(1),st
  433199:	loop   0x433178
  43319b:	push   edx
  43319c:	add    eax,edx
  43319e:	push   0xffffffe4
  4331a0:	test   DWORD PTR [ebx+0xf8338c],ebp
  4331a6:	popf   
  4331a7:	pop    ecx
  4331a8:	cmp    eax,0xe446eed4
  4331ad:	push   edx
  4331ae:	lea    edi,[esp+ebx*4-0x7c138516]
  4331b5:	inc    ebp
  4331b6:	inc    ecx
  4331b7:	pop    eax
  4331b8:	dec    ebp
  4331b9:	clc    
  4331ba:	outs   dx,BYTE PTR ds:[esi]
  4331bb:	(bad)  
  4331bc:	or     al,0xf7
  4331be:	add    dh,ah
  4331c0:	inc    DWORD PTR [ecx]
  4331c2:	mov    ebp,0x461a7403
  4331c7:	ss hlt 
  4331c9:	mov    esi,eax
  4331cb:	jmp    0x433150
  4331cd:	dec    edi
  4331ce:	lds    esi,FWORD PTR [ecx]
  4331d0:	push   eax
  4331d1:	push   ecx
  4331d2:	push   ebp
  4331d3:	aam    0xd
  4331d5:	add    BYTE PTR [ebp+0x24f84d58],ch
  4331db:	inc    esp
  4331dc:	sbb    BYTE PTR [ebx+0x4521d740],cl
  4331e2:	cdq    
  4331e3:	add    al,dl
  4331e5:	sub    DWORD PTR [edx],esi
  4331e7:	inc    ebx
  4331e8:	adc    DWORD PTR [ebp-0x6b],0x407780
  4331ef:	jge    0x4331cd
  4331f1:	jle    0x433187
  4331f3:	dec    ebx
  4331f4:	add    eax,DWORD PTR [eax]
  4331f6:	(bad)  
  4331f7:	mov    dl,0x44
  4331f9:	add    BYTE PTR [eax],al
  4331fb:	ins    DWORD PTR es:[edi],dx
  4331fc:	add    edi,DWORD PTR [edi+0x34307]
  433202:	add    BYTE PTR [edx+0x43],ah
  433205:	adc    BYTE PTR [eax],al
  433207:	inc    ebp
  433208:	add    eax,DWORD PTR [eax]
  43320a:	cmpxchg DWORD PTR [ebx-0x79c30000],eax
  433211:	jne    0x43320f
  433213:	cmp    eax,0x2b707dda
  433218:	add    eax,DWORD PTR [eax]
  43321a:	xor    ebp,ebp
  43321c:	pop    eax
  43321d:	inc    ecx
  43321e:	add    BYTE PTR [esi+eiz*8+0x29a40caf],dl
  433225:	jnp    0x43326a
  433227:	or     BYTE PTR [edx+0x3d],dl
  43322a:	and    BYTE PTR ds:0xd483e02c,cl
  433230:	fsub   QWORD PTR [eax*4+0x4b7ccd5c]
  433237:	enter  0xbb6b,0x74
  43323b:	adc    DWORD PTR [edx+0x35],0x40
  43323f:	(bad)  
  433240:	mov    eax,ds:0x629b6d1d
  433245:	dec    edi
  433246:	aam    0xe
  433248:	lods   al,BYTE PTR ds:[esi]
  433249:	(bad)  [eax+0x41e6d390]
  43324f:	push   esp
  433250:	bound  ecx,QWORD PTR [edi-0x8]
  433253:	add    BYTE PTR [edi],dl
  433255:	lods   al,BYTE PTR ds:[esi]
  433256:	fld    DWORD PTR [eax]
  433258:	sub    cl,dl
  43325a:	jp     0x43329f
  43325c:	mov    al,ds:0x6fc40e1
  433261:	aaa    
  433262:	in     eax,dx
  433263:	inc    ecx
  433264:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  433265:	out    0x3,eax
  433267:	add    BYTE PTR [ebx+ebx*2-0x2c367af2],dl
  43326e:	jp     0x4332c3
  433270:	ins    BYTE PTR es:[edi],dx
  433271:	arpl   WORD PTR ds:0x4d79c518,di
  433277:	call   0x410f45
  43327c:	unpckhps xmm5,xmm4
  43327f:	xchg   ebx,ebx
  433281:	iret   
  433282:	jp     0x4332c7
  433284:	inc    eax
  433285:	add    DWORD PTR [edi],edi
  433287:	cld    
  433288:	xchg   edi,eax
  433289:	ja     0x43320d
  43328b:	jnp    0x4332bd
  43328d:	call   0xe76f860e
  433292:	xor    bl,0x99
  433295:	out    0xfd,eax
  433297:	in     al,0x92
  433299:	add    BYTE PTR [esi+0x42],ch
  43329c:	je     0x433221
  43329e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43329f:	outs   dx,DWORD PTR ds:[esi]
  4332a0:	xchg   ebp,eax
  4332a1:	lds    esp,FWORD PTR [edi]
  4332a3:	or     BYTE PTR [eax+eax*1+0x45d503e7],dl
  4332aa:	daa    
  4332ab:	add    al,0x94
  4332ad:	add    bh,ah
  4332af:	ret    0x595
  4332b2:	out    0x3,eax
  4332b4:	xchg   esp,eax
  4332b5:	aad    0x22
  4332b7:	adc    al,0x0
  4332b9:	xchg   esp,eax
  4332ba:	lock out 0x3,al
  4332bd:	lea    eax,[edi+ebp*2+0x66009403]
  4332c4:	push   0x7fda00c8
  4332c9:	add    ecx,DWORD PTR [edi+eiz*8]
  4332cc:	add    ebp,DWORD PTR [ecx-0x40]
  4332cf:	ins    BYTE PTR es:[edi],dx
  4332d0:	pop    edi
  4332d1:	js     0x4332d3
  4332d3:	loop   0x433286
  4332d5:	cwde   
  4332d6:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4332d8:	jl     0x433331
  4332da:	aam    0x6e
  4332dc:	inc    edx
  4332dd:	je     0x433266
  4332df:	lods   al,BYTE PTR ds:[esi]
  4332e0:	fist   WORD PTR [edi]
  4332e2:	rcr    BYTE PTR [ebx-0x3cb7eedc],0x7c
  4332e9:	iret   
  4332ea:	mov    ah,0x6c
  4332ec:	mov    esp,0x3a6df600
  4332f1:	aam    0x19
  4332f3:	lahf   
  4332f4:	sbb    edi,ecx
  4332f6:	or     eax,0x8a48505e
  4332fb:	sub    al,0xe0
  4332fd:	or     al,0x4
  4332ff:	in     eax,dx
  433300:	call   0x4fa173da
  433305:	dec    esp
  433306:	or     DWORD PTR [eax+eiz*8-0x6c],0xd77cef54
  43330e:	aam    0xfe
  433310:	xor    BYTE PTR ds:[edx+0x0],dl
  433314:	jbe    0x43333b
  433316:	aas    
  433317:	adc    cl,ch
  433319:	cdq    
  43331a:	add    BYTE PTR [eax],al
  43331c:	sbb    eax,0x4b838500
  433321:	xchg   ebp,eax
  433322:	xchg   ecx,eax
  433323:	xor    eax,edi
  433325:	bound  edx,QWORD PTR [ebp-0x8]
  433328:	dec    esi
  433329:	cmp    ebp,DWORD PTR [eax-0x18]
  43332c:	mov    ds:0x850097dd,eax
  433331:	adc    al,0x0
  433333:	test   DWORD PTR [ecx-0x2f],eax
  433336:	push   0xa2c0f441
  43333b:	fdiv   st(5),st
  43333d:	cmp    BYTE PTR [ecx],dl
  43333f:	pop    ecx
  433340:	in     al,0xe9
  433342:	dec    esi
  433343:	xor    eax,edi
  433345:	out    0x4a,al
  433347:	inc    ecx
  433348:	or     ebp,ecx
  43334a:	xchg   edi,eax
  43334b:	jecxz  0x433357
  43334d:	jb     0x4333a4
  43334f:	and    BYTE PTR [ebx-0x3f00dbd7],al
  433355:	test   eax,0xe900008b
  43335a:	xchg   edi,eax
  43335b:	mov    edi,0x97f101
  433360:	add    BYTE PTR [esi],dl
  433362:	aad    0xf0
  433364:	(bad)  
  433365:	jmp    0xd718:0xcc740097
  43336c:	adc    BYTE PTR [edx-0x61],bh
  43336f:	xchg   DWORD PTR [ebp+0x97e9],edx
  433375:	push   0xfffffff3
  433377:	fadd   QWORD PTR [eax]
  433379:	fsubrp st(3),st
  43337b:	or     ecx,DWORD PTR [ebx]
  43337d:	jmp    0xebf53d19
  433382:	add    BYTE PTR [eax+ecx*2],bh
  433385:	cld    
  433386:	bound  ecx,QWORD PTR ds:0x192be0ce
  43338c:	mov    edi,0x4ac40008
  433391:	clc    
  433392:	add    esi,ebp
  433394:	test   dh,dh
  433396:	adc    BYTE PTR [edi-0x3a],ch
  433399:	pop    es
  43339a:	mov    bh,0x82
  43339c:	or     al,0x33
  43339e:	fldenv [edx]
  4333a0:	pop    ebx
  4333a1:	repz sti 
  4333a3:	xor    ch,cl
  4333a5:	sub    ebx,ebx
  4333a7:	out    dx,al
  4333a8:	rol    DWORD PTR [ebx-0x3fa532b9],1
  4333ae:	je     0x43338b
  4333b0:	pop    esp
  4333b1:	inc    edi
  4333b2:	adc    BYTE PTR [edi+eiz*8],bh
  4333b5:	add    DWORD PTR [ebx+0x4880ff1c],eax
  4333bb:	and    DWORD PTR [ebp+0x4f],ebx
  4333be:	and    BYTE PTR [edx-0x42fecfbb],ch
  4333c4:	(bad)  
  4333c5:	jmp    FWORD PTR [ecx-0x43]
  4333c8:	cmp    eax,0xb7ad6a00
  4333cd:	(bad)  
  4333ce:	adc    ebp,DWORD PTR [ebp-0x5ab27d01]
  4333d4:	pop    esp
  4333d5:	dec    ebp
  4333d6:	clc    
  4333d7:	xor    al,0x40
  4333d9:	sbb    BYTE PTR [ecx+0x7bf0fec],cl
  4333df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4333e0:	(bad)  
  4333e1:	(bad)  
  4333e2:	jmp    DWORD PTR [ebx+edx*1+0x7d00000c]
  4333e9:	test   dh,dh
  4333eb:	and    BYTE PTR [esi],bl
  4333ed:	and    eax,0xff917d7b
  4333f2:	push   es
  4333f3:	test   dh,dh
  4333f5:	sar    ecx,cl
  4333f7:	push   DWORD PTR [edx-0x6f]
  4333fa:	cli    
  4333fb:	inc    BYTE PTR [eax]
  4333fd:	jecxz  0x433382
  4333ff:	into   
  433400:	push   ds
  433401:	in     al,0x3a
  433403:	cmp    ebx,0xffffffdb
  433406:	adc    BYTE PTR [ebp-0x6c],0xb1
  43340a:	std    
  43340b:	xlat   BYTE PTR ds:[ebx]
  43340c:	pop    ss
  43340d:	retf   
  43340e:	and    al,0x6e
  433410:	pop    edx
  433411:	dec    esi
  433412:	mov    ch,0x85
  433414:	push   edi
  433415:	test   al,0xe4
  433417:	adc    BYTE PTR ds:0x94f904c8,dl
  43341d:	jmp    0xa652fc20
  433422:	ret    
  433423:	call   0x926dcc4
  433428:	mov    cl,0xe9
  43342a:	loop   0x43342c
  43342c:	xchg   esp,eax
  43342d:	out    0xc4,al
  43342f:	test   DWORD PTR [ecx-0x2f],ecx
  433432:	(bad)  
  433433:	in     eax,0x8c
  433435:	out    0xbe,al
  433437:	xchg   DWORD PTR [ebx-0x4f],edx
  43343a:	jl     0x43347b
  43343c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43343d:	xchg   esi,eax
  43343e:	(bad)  
  43343f:	sub    eax,0x5f929e2
  433444:	xchg   esp,eax
  433445:	jmp    0xe58eb147
  43344a:	std    
  43344b:	or     BYTE PTR [eax],al
  43344d:	sbb    BYTE PTR [ebx-0xb],cl
  433450:	(bad)  
  433451:	mov    ebx,0x9465fdae
  433456:	scas   eax,DWORD PTR es:[edi]
  433457:	std    
  433458:	out    0x59,eax
  43345a:	jecxz  0x433459
  43345c:	dec    DWORD PTR [edi]
  43345e:	je     0x433455
  433460:	xchg   BYTE PTR [ebx+0x1],dl
  433463:	jnp    0x4334a3
  433465:	les    ecx,FWORD PTR [esi+0x4f]
  433468:	clc    
  433469:	push   ebx
  43346a:	jmp    0x433462
  43346c:	inc    DWORD PTR [ebx-0x77848118]
  433472:	in     al,dx
  433473:	repnz adc DWORD PTR [eax+0x17fffdeb],0x55
  43347b:	icebp  
  43347c:	add    DWORD PTR [ebx-0x6bf3f19d],edx
  433482:	add    bh,ah
  433484:	or     ch,0x4
  433487:	out    0x6f,eax
  433489:	mov    al,ds:0x6382a185
  43348e:	add    dh,BYTE PTR [esi-0x55308e26]
  433494:	dec    BYTE PTR [ecx+0x3303e700]
  43349a:	ja     0x43347a
  43349c:	add    edx,DWORD PTR [ebp+edi*2+0x26a902a9]
  4334a3:	mov    ?,ebp
  4334a5:	push   ds
  4334a6:	jbe    0x43348f
  4334a8:	add    edx,DWORD PTR [eax+eax*1+0x1006866]
  4334af:	fidivr DWORD PTR [edi+0x0]
  4334b2:	fild   DWORD PTR ds:0x929d03e7
  4334b8:	in     eax,0xe6
  4334ba:	pop    edi
  4334bb:	fcomp  QWORD PTR [esi-0x4b]
  4334be:	shl    eax,1
  4334c0:	and    eax,0x7008d683
  4334c5:	push   eax
  4334c6:	int3   
  4334c7:	std    
  4334c8:	ds or  dh,0xfd
  4334cc:	aam    0xc5
  4334ce:	sbb    esi,eax
  4334d0:	cmp    dl,bl
  4334d2:	adc    DWORD PTR [esi+0x7eb3e466],edi
  4334d8:	inc    edi
  4334d9:	add    dl,BYTE PTR [ebx]
  4334db:	dec    edx
  4334dc:	jmp    0x433460
  4334de:	pushf  
  4334df:	std    
  4334e0:	mov    cl,0x4e
  4334e2:	popf   
  4334e3:	and    al,0x6c
  4334e5:	push   ebx
  4334e6:	mov    eax,0x71c4e73d
  4334eb:	(bad)  
  4334ec:	sub    esi,edi
  4334ee:	mov    es,WORD PTR [eax]
  4334f0:	out    0x3,eax
  4334f2:	stc    
  4334f3:	jmp    0x3e7:0x5addce6
  4334fa:	adc    ecx,eax
  4334fc:	add    BYTE PTR [ecx],al
  4334fe:	fmulp  st(7),st
  433500:	stc    
  433501:	out    dx,al
  433502:	adc    eax,0x10ef0c55
  433507:	dec    DWORD PTR [ecx+ebp*8]
  43350a:	xchg   edi,eax
  43350b:	add    BYTE PTR [ebx+0x5],dh
  43350e:	push   edi
  43350f:	jecxz  0x43350f
  433511:	imul   esp,DWORD PTR [edx-0x25],0x2d0046e8
  433518:	fyl2xp1 
  43351a:	test   al,0x4d
  43351c:	fcmovb st,st(2)
  43351e:	out    dx,al
  43351f:	xchg   DWORD PTR [eax],eax
  433521:	add    cl,ch
  433523:	adc    al,0xe6
  433525:	std    
  433526:	(bad)
  43352a:	jmp    0xae4b72bb
  43352f:	pop    eax
  433530:	clc    
  433531:	inc    ebx
  433532:	adc    al,0x50
  433534:	add    cl,al
  433536:	out    dx,al
  433537:	call   0xfee2:0xd6e90000
  43353e:	imul   ecx,edx,0xde74e8da
  433544:	fdivr  st,st(1)
  433546:	jb     0x433552
  433548:	pop    ebx
  433549:	(bad)  
  43354b:	lods   al,BYTE PTR ds:[esi]
  43354c:	jmp    0xd658781e
  433551:	and    dl,bl
  433553:	jne    0x4335b0
  433555:	jnp    0x43359c
  433557:	cwde   
  433558:	pop    es
  433559:	test   BYTE PTR [edx],al
  43355b:	lods   eax,DWORD PTR ds:[esi]
  43355c:	fdivr  st,st(1)
  43355e:	out    0xf1,al
  433560:	fsqrt  
  433562:	pushf  
  433563:	mov    bl,0x82
  433565:	retf   0x783a
  433568:	pop    ss
  433569:	jge    0x433592
  43356b:	mov    BYTE PTR [edi+0x53],bh
  43356e:	adc    DWORD PTR [ebp-0x4ff08248],edx
  433574:	data16 fiadd DWORD PTR [eax]
  433577:	out    0x99,al
  433579:	add    ebx,0x0
  43357c:	bound  esi,QWORD PTR [ebx+0x46aff1d]
  433582:	add    cl,al
  433584:	xchg   esp,eax
  433585:	in     al,dx
  433586:	xor    al,cl
  433588:	dec    edx
  433589:	push   edi
  43358a:	adc    edi,edx
  43358c:	push   0xffffffdd
  43358e:	sub    ebx,ebx
  433590:	sahf   
  433591:	out    0x7b,al
  433593:	jge    0x4335ee
  433595:	(bad)  
  433596:	add    BYTE PTR [edi+0x7d],0x95
  43359a:	dec    DWORD PTR ds:0xf00043d
  4335a0:	mov    cl,0xe5
  4335a2:	add    al,BYTE PTR [eax]
  4335a4:	sub    eax,0xfd0eff95
  4335a9:	add    eax,DWORD PTR [eax]
  4335ab:	mov    esi,DWORD PTR [edx+0x2145813c]
  4335b1:	push   edi
  4335b2:	ror    BYTE PTR [edi],0x71
  4335b5:	dec    ebx
  4335b6:	(bad)  
  4335b7:	(bad)  
  4335b8:	std    
  4335b9:	pop    eax
  4335ba:	inc    ebp
  4335bb:	cld    
  4335bc:	(bad)  
  4335bd:	ret    0x56e
  4335c0:	jbe    0x433584
  4335c2:	or     DWORD PTR [ebp+0x61],0x76f04558
  4335c9:	ret    
  4335ca:	outs   dx,BYTE PTR ds:[esi]
  4335cb:	add    eax,0x4581c246
  4335d0:	popa   
  4335d1:	push   esi
  4335d2:	ror    BYTE PTR [edi],0x31
  4335d5:	rol    DWORD PTR [edx],0x0
  4335d8:	mov    ebp,0x26f44558
  4335dd:	inc    esi
  4335de:	clc    
  4335df:	mov    eax,DWORD PTR [eax]
  4335e1:	lock mov ebx,0xbbfd5249
  4335e7:	js     0x4335cf
  4335e9:	mov    edx,0xa14583dc
  4335ee:	add    bh,BYTE PTR ds:0x3ac094f8
  4335f4:	cld    
  4335f5:	lods   eax,DWORD PTR ds:[esi]
  4335f6:	pushf  
  4335f7:	in     eax,dx
  4335f8:	(bad)  
  4335f9:	fdiv   st,st(1)
  4335fb:	ja     0x433650
  4335fd:	ins    BYTE PTR es:[edi],dx
  4335fe:	push   0xffffffb9
  433600:	or     al,0xad
  433602:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  433603:	cmp    eax,0xfde3a2e7
  433608:	call   DWORD PTR [edi]
  43360a:	fisttp WORD PTR [esi]
  43360c:	ins    DWORD PTR es:[edi],dx
  43360d:	jb     0x433673
  43360f:	push   0x5f6a9424
  433614:	cld    
  433615:	xchg   esp,eax
  433616:	mov    dh,0x81
  433618:	jg     0x4335b8
  43361a:	jmp    0xeb253f1c
  43361f:	fimul  WORD PTR [ebx+0x20]
  433622:	(bad)  
  433623:	into   
  433624:	int    0x34
  433626:	sub    eax,DWORD PTR [ecx+0x37509cc2]
  43362c:	clc    
  43362d:	xchg   edi,eax
  43362e:	rol    DWORD PTR [ecx-0x42046d06],0x85
  433635:	iret   
  433636:	imul   esp,ebx,0x771d519
  43363c:	jg     0x433613
  43363e:	out    0x4,eax
  433640:	add    BYTE PTR [edx+eiz*2+0x4b0087c1],dl
  433647:	or     ebx,eax
  433649:	in     eax,0x99
  43364b:	push   edx
  43364c:	leave  
  43364d:	jge    0x433603
  43364f:	aad    0x82
  433651:	fist   WORD PTR [ebx-0x6f407d57]
  433657:	sub    cl,ch
  433659:	add    al,0x17
  43365b:	das    
  43365c:	push   cs
  43365d:	jg     0x43368a
  43365f:	leave  
  433660:	(bad)  
  433661:	(bad)  
  433662:	mov    ds:0x30418ce8,eax
  433667:	pusha  
  433668:	dec    ebp
  433669:	pop    esp
  43366a:	mov    ds:0x83206a00,eax
  43366f:	(bad)  
  433670:	sbb    al,BYTE PTR [edi-0x751e0884]
  433676:	test   eax,0x55e30ad7
  43367b:	pop    DWORD PTR ds:[ebx]
  43367e:	xchg   esp,eax
  43367f:	add    bh,ah
  433681:	retf   0xef95
  433684:	out    0x3,al
  433686:	xchg   esp,eax
  433687:	mov    DWORD PTR [edx+0x4345896b],ebx
  43368d:	push   edi
  43368e:	fucompp 
  433690:	out    0x90,al
  433692:	fild   DWORD PTR [eax]
  433694:	data16 loope 0x4336d0
  433697:	push   ebx
  433698:	add    eax,0xe7d4af87
  43369d:	adc    dl,BYTE PTR [eax]
  43369f:	aad    0xf0
  4336a1:	add    edx,DWORD PTR [ebp+eax*1+0x441d0579]
  4336a8:	stos   DWORD PTR es:[edi],eax
  4336a9:	mov    es,WORD PTR [eax]
  4336ab:	fidiv  WORD PTR [ecx-0x4176ba79]
  4336b1:	out    dx,eax
  4336b2:	mov    WORD PTR [edi-0x28],fs
  4336b5:	out    0xbb,al
  4336b7:	jns    0x43368f
  4336b9:	out    0x55,al
  4336bb:	into   
  4336bc:	mov    DWORD PTR [edx],ebp
  4336be:	ins    BYTE PTR es:[edi],dx
  4336bf:	popf   
  4336c0:	(bad)  
  4336c1:	jecxz  0x43370b
  4336c3:	test   BYTE PTR [ecx],ah
  4336c5:	daa    
  4336c6:	add    al,0x11
  4336c8:	retf   0xe466
  4336cb:	xchg   ebp,eax
  4336cc:	pop    esi
  4336cd:	jo     0x43371e
  4336cf:	push   ebp
  4336d0:	push   eax
  4336d1:	pop    edx
  4336d2:	dec    edx
  4336d3:	sub    al,0x89
  4336d5:	mov    ds:0xe6e9fb6b,al
  4336da:	xchg   BYTE PTR [esi+0x4852fe01],bh
  4336e0:	push   edx
  4336e1:	jbe    0x43367e
  4336e3:	xchg   ecx,eax
  4336e4:	add    BYTE PTR [eax],al
  4336e6:	jmp    0xc1844482
  4336eb:	jmp    0x249c:0x24eee4f3
  4336f2:	jmp    0x6243378e
  4336f7:	mov    esi,0xa3560968
  4336fc:	xor    DWORD PTR [eax],edx
  4336fe:	retf   0xd7
  433701:	sub    eax,0x547ded1b
  433706:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  433707:	(bad)  
  433708:	xlat   BYTE PTR ds:[ebx]
  433709:	inc    ecx
  43370a:	xor    DWORD PTR [eax+0x5b683f],0x1981893e
  433714:	fwait
  433715:	add    BYTE PTR [eax],al
  433717:	fs in  eax,0x64
  43371a:	xchg   eax,ebp
  43371c:	push   ds
  43371d:	aas    
  43371e:	dec    esp
  43371f:	je     0x4336ce
  433721:	sar    dh,1
  433723:	call   0x2ece7dbf
  433728:	pop    esp
  433729:	xor    BYTE PTR [edi-0x5a],cl
  43372c:	cwde   
  43372d:	(bad)  
  43372e:	(bad)  
  43372f:	call   0x6c5095cb
  433734:	dec    ebp
  433735:	push   eax
  433736:	push   eax
  433737:	add    edx,DWORD PTR [eax-0x68275818]
  43373d:	add    BYTE PTR [ebp-0x3bad37e4],al
  433743:	loope  0x433753
  433745:	inc    ecx
  433746:	fsubr  DWORD PTR [eax+edx*8+0x6]
  43374a:	add    DWORD PTR [eax+eiz*4+0x5d700000],0x68
  433752:	shl    esi,0xc9
  433755:	aam    0xf9
  433757:	jmp    0xeaa77664
  43375c:	pop    esp
  43375d:	pusha  
  43375e:	aaa    
  43375f:	add    dl,bh
  433761:	push   0xfe8e8307
  433766:	(bad)  
  433767:	push   DWORD PTR [esi]
  433769:	das    
  43376a:	push   esp
  43376b:	mov    eax,0x7c
  433770:	into   
  433771:	fadd   QWORD PTR [ebx+0x4831004f]
  433777:	sbb    eax,ebx
  433779:	test   BYTE PTR [eax],0x79
  43377c:	mov    esi,DWORD PTR [ebp+0x6208e1bf]
  433782:	jp     0x433745
  433784:	mov    DWORD PTR [eax],edi
  433786:	lods   al,BYTE PTR ds:[esi]
  433787:	xor    ecx,esi
  433789:	(bad)  [eax]
  43378b:	jnp    0x43380a
  43378d:	inc    ecx
  43378e:	add    BYTE PTR [edi],al
  433790:	test   BYTE PTR [edx+0x7],al
  433793:	add    BYTE PTR [eax],al
  433795:	xor    bh,BYTE PTR [edx-0x6]
  433798:	(bad)  
  433799:	jo     0x43377b
  43379b:	or     esi,0xffffffee
  43379e:	fild   WORD PTR [ebx+0x7b3a894f]
  4337a4:	(bad)  
  4337a5:	and    eax,0x2cb8d7fd
  4337aa:	add    BYTE PTR [eax],al
  4337ac:	add    BYTE PTR [esi],ch
  4337ae:	loopne 0x433733
  4337b0:	dec    edi
  4337b1:	rol    DWORD PTR [edi+0x1dc5f84d],0xbb
  4337b8:	mov    ebp,ecx
  4337ba:	jle    0x43373f
  4337bc:	enter  0xe73c,0x8
  4337c0:	bts    esi,eax
  4337c3:	add    DWORD PTR [ebp+0x69],0x2c77c5f4
  4337ca:	test   eax,ecx
  4337cc:	rcl    DWORD PTR [eax+edx*8],0x7c
  4337d0:	stc    
  4337d1:	int    0x2c
  4337d3:	dec    edi
  4337d4:	mov    eax,DWORD PTR [ebp+0x8e1be]
  4337da:	xchg   esp,eax
  4337db:	ficom  DWORD PTR [edi+0x54386fc7]
  4337e1:	xor    BYTE PTR [edi+0x78a48ae2],bh
  4337e7:	jmp    0x66d837e9
  4337ec:	pop    edx
  4337ed:	cld    
  4337ee:	xchg   esp,eax
  4337ef:	mov    dl,0x81
  4337f1:	scas   eax,DWORD PTR es:[edi]
  4337f2:	pushf  
  4337f3:	jmp    0xe78d40f5
  4337f8:	loopne 0x433845
  4337fa:	js     0x43385a
  4337fc:	iret   
  4337fd:	int    0x74
  4337ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  433800:	test   dl,al
  433802:	pushf  
  433803:	push   eax
  433804:	xor    bh,al
  433806:	xchg   edi,eax
  433807:	and    DWORD PTR [ebx+eax*2-0x336825a0],ecx
  43380e:	(bad)  
  43380f:	fcom   DWORD PTR [edi+edx*8-0x65]
  433813:	jae    0x4337e5
  433815:	test   ebx,ebx
  433817:	xor    DWORD PTR [ebp+0x62b86fe5],ebp
  43381d:	test   ecx,esp
  43381f:	stos   DWORD PTR es:[edi],eax
  433820:	bound  eax,QWORD PTR [edi-0x6abdd28]
  433826:	(bad)  [ecx]
  433828:	jmp    0x433878
  43382a:	xchg   ebp,eax
  43382b:	jmp    0xf4629a2d
  433830:	shl    DWORD PTR [edx+0x17],1
  433833:	mov    al,ds:0xe26c72f4
  433838:	xchg   ebx,eax
  433839:	int3   
  43383a:	or     DWORD PTR [eax],ebp
  43383c:	inc    BYTE PTR [esi+0x15a56100]
  433842:	lock stos DWORD PTR es:[di],eax
  433845:	nop
  433846:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  433847:	mov    eax,0x94fffde9
  43384c:	pop    di
  43384e:	cld    
  43384f:	xchg   esp,eax
  433850:	mov    dl,0x81
  433852:	dec    edi
  433853:	pushf  
  433854:	add    bh,ah
  433856:	add    ecx,DWORD PTR [ebp+0x4fdee58a]
  43385c:	aam    0x5e
  43385e:	into   
  43385f:	loope  0x433840
  433861:	pop    esi
  433862:	push   ecx
  433863:	enter  0x663d,0xc6
  433867:	mov    edi,?
  433869:	push   ds
  43386a:	xchg   ecx,eax
  43386b:	pop    ebx
  43386c:	(bad)  
  43386d:	pop    edi
  43386e:	cmp    DWORD PTR [esi+edx*1-0x799cadc9],ecx
  433875:	stos   BYTE PTR es:[edi],al
  433876:	imul   edx,DWORD PTR [ecx-0x1a],0xffffffce
  43387a:	aam    0x17
  43387c:	shl    edx,0x87
  43387f:	and    eax,0x9d03e6fa
  433884:	mov    DWORD PTR [ebx+0x2685ee46],esi
  43388a:	xor    DWORD PTR [esi+edi*8+0x65],0xffffffc4
  43388f:	push   ecx
  433890:	sar    esi,0x1
  433893:	adc    eax,DWORD PTR [ebx+ecx*8-0x74]
  433897:	xlat   BYTE PTR ds:[ebx]
  433898:	int3   
  433899:	in     ax,dx
  43389b:	cmp    ch,cl
  43389d:	jle    0x4338a2
  43389f:	xchg   esp,eax
  4338a0:	add    BYTE PTR [ecx-0x7d],al
  4338a3:	add    BYTE PTR [ebx],ah
  4338a5:	lock icebp 
  4338a7:	xchg   ebp,eax
  4338a8:	push   eax
  4338a9:	mov    BYTE PTR [eax+eax*8],ch
  4338ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4338ad:	inc    edx
  4338ae:	fs inc esp
  4338b0:	adc    DWORD PTR [edi],edx
  4338b2:	mov    bh,0x52
  4338b4:	(bad)  
  4338b5:	in     eax,0xea
  4338b7:	nop
  4338b8:	cmp    BYTE PTR ds:0x9403e7,bl
  4338be:	pushaw 
  4338c0:	lock add dl,bl
  4338c3:	xchg   ebx,ecx
  4338c5:	stc    
  4338c6:	out    0x3,al
  4338c8:	lea    ecx,[edx-0x2bb0211b]
  4338ce:	add    BYTE PTR [edx-0x1f],ah
  4338d1:	ret    
  4338d2:	loopne 0x433936
  4338d4:	fs mov ah,0x3e
  4338d7:	push   0xffffffd9
  4338d9:	or     ch,bh
  4338db:	inc    eax
  4338dc:	and    al,0x12
  4338de:	std    
  4338df:	pop    edi
  4338e0:	ins    BYTE PTR es:[edi],dx
  4338e1:	fdiv   DWORD PTR ds:0xcda94559
  4338e7:	push   edx
  4338e8:	push   cs
  4338e9:	xchg   esp,eax
  4338ea:	jge    0x433935
  4338ec:	xchg   edx,eax
  4338ed:	push   ebx
  4338ee:	shr    dl,0x20
  4338f1:	cmp    eax,0xd37e28f4
  4338f6:	mov    cl,0x24
  4338f8:	(bad)  
  4338f9:	xlat   BYTE PTR ds:[ebx]
  4338fa:	stc    
  4338fb:	adc    dl,dh
  4338fd:	test   DWORD PTR [edi],edi
  4338ff:	out    dx,al
  433900:	mov    ss,eax
  433902:	ins    DWORD PTR es:[edi],dx
  433903:	(bad)  
  433904:	push   ss
  433905:	push   ebp
  433906:	cld    
  433907:	jmp    0x9cbfcb0c
  43390c:	out    0x97,al
  43390e:	add    BYTE PTR [ecx],cl
  433910:	aas    
  433911:	xchg   ebp,eax
  433912:	xlat   BYTE PTR ds:[ebx]
  433913:	dec    ebx
  433914:	in     eax,dx
  433915:	sbb    eax,0xdc9cdc6
  43391a:	inc    ebp
  43391b:	fsubr  QWORD PTR [ebx]
  43391d:	adc    eax,0xefea08be
  433922:	test   BYTE PTR [edi],bh
  433924:	out    0x1e,al
  433926:	sub    eax,0x624802f8
  43392b:	xlat   BYTE PTR ds:[ebx]
  43392c:	call   0x56f8:0x6abd7b2d
  433933:	jge    0x4338de
  433935:	popf   
  433936:	jns    0x43397b
  433938:	popf   
  433939:	xlat   BYTE PTR ds:[ebx]
  43393a:	fiadd  DWORD PTR [ecx]
  43393c:	popa   
  43393d:	(bad)  
  43393f:	stc    
  433940:	xchg   esi,eax
  433941:	mov    ebp,0x1d98fd91
  433946:	cmp    eax,0x393200f4
  43394b:	in     al,0x0
  43394d:	in     eax,dx
  43394e:	cld    
  43394f:	dec    DWORD PTR [edx-0x38049b86]
  433955:	cmp    esp,DWORD PTR ss:[ebx+eax*1-0xe]
  43395a:	pop    esp
  43395b:	xor    ecx,eax
  43395d:	stos   BYTE PTR es:[edi],al
  43395e:	jnp    0x433926
  433960:	add    bh,BYTE PTR [ebp+0x417d7afc]
  433966:	cld    
  433967:	jae    0x433985
  433969:	es cmp esp,esp
  43396c:	jmp    0x43396e
  43396e:	scas   al,BYTE PTR es:[edi]
  43396f:	add    DWORD PTR [ecx+0x0],0xff683df6
  433976:	sub    BYTE PTR [eax+0x3d31895e],bh
  43397c:	jo     0x43397d
  43397e:	xor    bl,BYTE PTR [ebx+edi*2+0x7d]
  433982:	xchg   ecx,eax
  433983:	add    al,0x6d
  433985:	in     al,dx
  433986:	test   BYTE PTR [ebp+0x64],0x3
  43398a:	xor    ah,BYTE PTR [ecx+esi*1+0x47]
  43398e:	add    eax,0x48dd79fd
  433993:	lods   eax,DWORD PTR ds:[esi]
  433994:	test   DWORD PTR [ebx-0x7bf73106],0x61c
  43399e:	rol    DWORD PTR [ecx+0x43f70b7],cl
  4339a4:	add    BYTE PTR [eax],al
  4339a6:	dec    edx
  4339a7:	mov    BYTE PTR [ebx-0x7afbd2fa],cl
  4339ad:	xchg   DWORD PTR ds:0x78000007,ebx
  4339b3:	cmp    al,0x6c
  4339b5:	mov    esp,edi
  4339b7:	jp     0x4339f8
  4339b9:	dec    esp
  4339ba:	mov    BYTE PTR [eax+esi*8+0x2],dl
  4339be:	in     eax,dx
  4339bf:	add    ecx,DWORD PTR [edx-0x75]
  4339c2:	xchg   esp,eax
  4339c3:	push   cs
  4339c4:	mov    edx,DWORD PTR fs:[ebx+0x15]
  4339c8:	xor    al,0x4f
  4339ca:	fcmovnu st,st(1)
  4339cc:	push   es
  4339cd:	add    BYTE PTR [ecx+ebx*8+0x5b008b2f],dl
  4339d4:	leave  
  4339d5:	sub    eax,0xf4819566
  4339da:	sub    BYTE PTR [ecx+ebx*8+0x509cc480],dl
  4339e1:	inc    edx
  4339e2:	fcomp  DWORD PTR [ecx]
  4339e4:	sbb    cl,BYTE PTR [ebx+eax*4]
  4339e7:	sub    DWORD PTR [esp+ebx*8],esi
  4339ea:	stc    
  4339eb:	movq   mm5,QWORD PTR [ecx-0x75]
  4339ef:	dec    ebx
  4339f0:	mov    ebp,0x64e45186
  4339f5:	je     0x4339e7
  4339f7:	xchg   esi,eax
  4339f8:	fscale 
  4339fa:	dec    ebp
  4339fb:	adc    DWORD PTR [esi+0x52e55035],ebx
  433a01:	dec    esp
  433a02:	pusha  
  433a03:	pop    ebx
  433a04:	fld    DWORD PTR [ebx]
  433a06:	add    BYTE PTR [ecx+ebx*8+0x69f84188],dl
  433a0d:	mov    dl,BYTE PTR [ebx+ecx*8+0x49]
  433a11:	das    
  433a12:	xchg   si,ax
  433a14:	add    DWORD PTR [eax-0x7f266bd6],edi
  433a1a:	les    ebx,FWORD PTR [eax+edx*2-0x66ee27c1]
  433a21:	add    eax,0xd5ad5083
  433a26:	stc    
  433a27:	pop    ss
  433a28:	cmp    al,0x8
  433a2a:	add    cl,BYTE PTR [edi]
  433a2c:	in     al,dx
  433a2d:	fcmovnb st,st(1)
  433a2f:	xchg   ebx,eax
  433a30:	stos   BYTE PTR es:[edi],al
  433a31:	std    
  433a32:	call   DWORD PTR [esi+eiz*8-0x6dff8c87]
  433a39:	fscale 
  433a3b:	rcr    BYTE PTR [ebx-0x6bfc0500],0x0
  433a42:	pop    cx
  433a44:	lock add eax,0x4d6b6a15
  433a4a:	xchg   edi,eax
  433a4b:	push   es
  433a4c:	jecxz  0x433a1c
  433a4e:	out    0x55,eax
  433a50:	ja     0x433acd
  433a52:	and    al,0xc
  433a54:	sbb    DWORD PTR ds:0xd0678f7f,edi
  433a5a:	pusha  
  433a5b:	dec    esp
  433a5c:	nop
  433a5d:	jnp    0x433a13
  433a5f:	fist   DWORD PTR [ebx]
  433a61:	clc    
  433a62:	ins    DWORD PTR es:[edi],dx
  433a63:	dec    ecx
  433a64:	mov    ah,0x78
  433a66:	mov    bh,0xf3
  433a68:	adc    BYTE PTR ds:0x301b354b,dh
  433a6e:	jmp    0x433aa3
  433a70:	adc    ebp,DWORD PTR [edi]
  433a72:	dec    DWORD PTR [ebp+eax*1-0x4ab0c0f3]
  433a79:	add    bh,ah
  433a7b:	mov    ss,edi
  433a7d:	clc    
  433a7e:	ins    DWORD PTR es:[edi],dx
  433a7f:	xor    al,0x88
  433a81:	jns    0x433a32
  433a83:	repz sbb BYTE PTR [esi],ch
  433a86:	iret   
  433a87:	mov    fs,ebp
  433a89:	or     al,0x60
  433a8b:	xor    DWORD PTR [edx+edi*2-0x29],ebp
  433a8f:	mov    ss,esp
  433a91:	add    al,0x66
  433a93:	rcr    BYTE PTR [ecx+eax*4+0x3c130eb2],0xf7
  433a9b:	mov    WORD PTR [eax],es
  433a9d:	out    0xc8,eax
  433a9f:	jo     0x433ae1
  433aa1:	cmp    dh,bh
  433aa3:	arpl   WORD PTR [edi-0x3d18ff69],sp
  433aa9:	adc    eax,0x9403eec5
  433aae:	int    0xc2
  433ab0:	ficomp DWORD PTR ds:0x94005cd8
  433ab6:	add    BYTE PTR [eax],al
  433ab8:	bound  ebx,QWORD PTR [esi+0x34]
  433abb:	mov    eax,0x97e8
  433ac0:	mov    edx,0xa581bff7
  433ac5:	repnz int 0xf9
  433ac8:	jmp    0x21433b64
  433acd:	mov    ebx,0xab1858b
  433ad2:	inc    eax
  433ad3:	dec    esp
  433ad4:	jb     0x433aa9
  433ad6:	test   DWORD PTR [ebp+0x8e5d0a1],eax
  433adc:	fisub  WORD PTR ds:0xcbac87c6
  433ae2:	adc    ecx,edx
  433ae4:	xlat   BYTE PTR ds:[ebx]
  433ae5:	pop    eax
  433ae6:	cmp    ecx,0x6a
  433ae9:	dec    esp
  433aea:	int3   
  433aeb:	add    dh,bl
  433aed:	and    ecx,DWORD PTR [ebp-0x86816fd]
  433af3:	mov    cl,0xeb
  433af5:	outs   dx,BYTE PTR ds:[esi]
  433af6:	cmp    esp,edi
  433af8:	bound  ebx,QWORD PTR [ebp-0x45]
  433afb:	loopne 0x433b5f
  433afd:	into   
  433afe:	xor    al,0x3e
  433b00:	push   0x0
  433b02:	push   ebp
  433b03:	clc    
  433b04:	cld    
  433b05:	inc    eax
  433b06:	bswap  ebp
  433b08:	stc    
  433b09:	jmp    0x6323f6a5
  433b0e:	into   
  433b0f:	cmp    al,0x87
  433b11:	pushf  
  433b12:	aas    
  433b13:	cmp    BYTE PTR ds:0x7f04222a,bl
  433b19:	bound  ebx,QWORD PTR [edi-0x73]
  433b1c:	out    0xe1,eax
  433b1e:	mov    ss,WORD PTR [edx-0x2b848f39]
  433b24:	xor    eax,0x848dc5af
  433b29:	test   eax,0xe9c0849d
  433b2e:	xchg   edi,eax
  433b2f:	add    BYTE PTR [eax+0x7cf6dd00],ch
  433b35:	mov    eax,0x8b0000fd
  433b3a:	xor    eax,0x7408e1c1
  433b3f:	inc    ebp
  433b40:	aam    0xf
  433b42:	pop    ebx
  433b43:	mov    ecx,0xf7194d81
  433b48:	lods   eax,DWORD PTR ds:[esi]
  433b49:	enter  0x45fe,0xe4
  433b4d:	mov    DWORD PTR [eax-0x12fe4778],edi
  433b53:	add    BYTE PTR [eax],al
  433b55:	rcr    DWORD PTR ds:0x75e4457b,cl
  433b5b:	and    edi,DWORD PTR [ebx+0x457b15d3]
  433b61:	hlt    
  433b62:	ins    BYTE PTR es:[edi],dx
  433b63:	fst    DWORD PTR [eax]
  433b65:	add    eax,DWORD PTR [eax]
  433b67:	jl     0x433be4
  433b69:	enter  0xfa8b,0x44
  433b6d:	add    DWORD PTR [esi*1+0x794dadf7],0x79
  433b75:	cmp    eax,0x8dcbcf4
  433b7a:	ud2    
  433b7c:	(bad)  
  433b7f:	xchg   dl,al
  433b81:	outs   dx,BYTE PTR ds:[esi]
  433b82:	pop    esi
  433b83:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  433b84:	inc    BYTE PTR [ebx+ebx*4+0x7d]
  433b8b:	(bad)  
  433b8c:	xor    edi,esp
  433b8e:	add    BYTE PTR [edx+0x4c],al
  433b91:	sbb    DWORD PTR ds:0xb607006d,eax
  433b97:	aas    
  433b98:	jge    0x433b60
  433b9a:	rcr    DWORD PTR [ebp+0x32dc457d],cl
  433ba0:	inc    ebx
  433ba1:	cld    
  433ba2:	inc    edx
  433ba3:	mov    BYTE PTR cs:[edi],al
  433ba6:	mov    dh,0xf8
  433ba8:	jbe    0x433be7
  433baa:	in     al,0x94
  433bac:	loop   0x433b3d
  433bae:	(bad)  
  433baf:	xchg   edi,eax
  433bb0:	mov    eax,ds:0xda1bff95
  433bb5:	std    
  433bb6:	int3   
  433bb7:	hlt    
  433bb8:	dec    esi
  433bb9:	inc    edx
  433bba:	in     al,0x17
  433bbc:	pushf  
  433bbd:	add    eax,0x45916987
  433bc2:	sbb    eax,0x9e586d7
  433bc7:	sub    ebx,DWORD PTR ds:0xd400fdb6
  433bcd:	pop    esi
  433bce:	dec    eax
  433bcf:	dec    esp
  433bd0:	(bad)  
  433bd2:	jle    0x433b5b
  433bd4:	push   ecx
  433bd5:	dec    ebp
  433bd6:	mov    esi,0x8fda9ce8
  433bdb:	rcl    BYTE PTR [edi-0x25ca1fe4],0xd2
  433be2:	stos   DWORD PTR es:[edi],eax
  433be3:	or     DWORD PTR [edx],eax
  433be5:	xchg   ebp,eax
  433be6:	mov    dl,0x85
  433be8:	pop    ecx
  433be9:	xor    eax,0x287fe5b4
  433bee:	xchg   BYTE PTR [ecx-0x23128],cl
  433bf4:	movlps xmm7,QWORD PTR [esi-0x70256319]
  433bfb:	(bad)  
  433bfc:	xchg   ebp,eax
  433bfd:	bound  edi,QWORD PTR [ecx-0x4b266beb]
  433c03:	in     eax,0xaf
  433c05:	call   0x4ebb878f
  433c0a:	lds    edi,FWORD PTR [edi+0x4986c97d]
  433c10:	aam    0x65
  433c12:	mov    ebp,0x1a8f73
  433c17:	pop    ss
  433c18:	xchg   esp,eax
  433c19:	fscale 
  433c1b:	out    0x8e,al
  433c1d:	(bad)  
  433c1f:	(bad)  
  433c20:	in     al,dx
  433c21:	mov    eax,0x531349
  433c26:	push   0xffffffc0
  433c28:	mov    DWORD PTR [eax],eax
  433c2a:	out    0xd6,eax
  433c2c:	sub    eax,0xbfd2cb
  433c31:	xchg   ebp,eax
  433c32:	mul    esi
  433c34:	add    edx,DWORD PTR [ecx+ebx*8+0x940008]
  433c3b:	pop    DWORD PTR [eax+eax*4-0x5]
  433c3f:	pop    ebp
  433c40:	inc    ecx
  433c41:	mov    ebx,es
  433c43:	daa    
  433c44:	cld    
  433c45:	push   edi
  433c46:	push   ebp
  433c47:	daa    
  433c48:	add    al,0xfb
  433c4a:	mul    edx
  433c4c:	add    edx,DWORD PTR [ebx+edi*8-0x1e9e33a8]
  433c53:	fimul  DWORD PTR [ebp+ecx*2-0x590055c8]
  433c5a:	add    bh,ah
  433c5c:	add    edx,DWORD PTR [ecx]
  433c5e:	inc    ebx
  433c5f:	pop    ds
  433c60:	adc    esp,0xc41b2253
  433c66:	dec    esi
  433c67:	adc    BYTE PTR [ecx+0x3e723f8],cl
  433c6d:	xchg   esp,eax
  433c6e:	add    BYTE PTR [esi+0x59],ah
  433c71:	mov    al,ds:0x5b7fd9ff
  433c76:	add    al,0xe7
  433c78:	add    ebx,DWORD PTR [ebp-0x20291a6e]
  433c7e:	int3   
  433c7f:	pop    esi
  433c80:	(bad)  
  433c81:	push   ecx
  433c82:	loope  0x433c29
  433c84:	adc    BYTE PTR [esi-0x7],0x6f
  433c88:	xor    DWORD PTR [esi+edi*8+0x3e],ebp
  433c8c:	sbb    esp,ebp
  433c8e:	cmp    BYTE PTR [ebp-0x60c5e64b],dl
  433c94:	fwait
  433c95:	add    BYTE PTR [ebx-0x36],bl
  433c98:	out    0x3,eax
  433c9a:	popa   
  433c9b:	loope  0x433c6b
  433c9d:	aam    0xdc
  433c9f:	sbb    eax,0x3f992a00
  433ca4:	inc    eax
  433ca5:	sbb    ch,BYTE PTR [edi]
  433ca7:	retf   0xad8a
  433caa:	cs retf 0x72f9
  433cae:	rol    BYTE PTR [eax-0x79],cl
  433cb1:	dec    di
  433cb3:	hlt    
  433cb4:	(bad)  
  433cb5:	call   0xe9553c94
  433cba:	xchg   edi,eax
  433cbb:	add    BYTE PTR [ebp-0x7737d2],al
  433cc1:	call   0xca103d5d
  433cc6:	dec    edi
  433cc7:	jmp    0x433c85
  433cc9:	jb     0x433caa
  433ccb:	add    DWORD PTR [ecx+0x39],0x1f
  433ccf:	add    eax,0x89cf6288
  433cd4:	out    0xe1,eax
  433cd6:	xchg   edx,eax
  433cd7:	mov    es,edi
  433cd9:	jo     0x433d2f
  433cdb:	aam    0x35
  433cdd:	scas   eax,DWORD PTR es:[edi]
  433cde:	pop    ecx
  433cdf:	inc    eax
  433ce0:	nop
  433ce1:	push   0x5c
  433ce3:	int3   
  433ce4:	add    dh,bl
  433ce6:	cmp    edi,DWORD PTR [ecx-0x8681703]
  433cec:	mov    cl,0xeb
  433cee:	ret    0xfc35
  433cf1:	(bad)  
  433cf2:	fnstcw WORD PTR [ebx+0x285262e0]
  433cf8:	ds push 0x0
  433cfb:	push   ecx
  433cfc:	clc    
  433cfd:	cld    
  433cfe:	and    BYTE PTR [edi],ch
  433d00:	leave  
  433d01:	stc    
  433d02:	jmp    0x6323f89e
  433d07:	shl    BYTE PTR [eax],cl
  433d09:	xchg   DWORD PTR [edi+ecx*2+0x1e2a1d38],edi
  433d10:	add    al,0x7f
  433d12:	bound  ecx,QWORD PTR [edi-0x77]
  433d15:	out    0xe1,eax
  433d17:	xchg   edx,eax
  433d18:	mov    es,edi
  433d1a:	add    ah,al
  433d1c:	inc    eax
  433d1d:	hlt    
  433d1e:	cmp    edi,DWORD PTR [ebx+0x3a]
  433d21:	mov    ecx,0x7d033da8
  433d26:	mov    al,0x2d
  433d28:	std    
  433d29:	dec    DWORD PTR [edx+0x8e1bce5]
  433d2f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  433d30:	inc    ecx
  433d31:	aam    0xf
  433d33:	add    esi,DWORD PTR [ebp+0x3514d81]
  433d39:	scas   al,BYTE PTR es:[edi]
  433d3a:	enter  0x41fe,0xe4
  433d3e:	mov    DWORD PTR [eax-0x12fe4778],esi
  433d44:	cld    
  433d45:	call   edx
  433d47:	int    0x76
  433d49:	inc    ebp
  433d4a:	in     al,0xa5
  433d4c:	pop    ds
  433d4d:	mov    ebx,0x457705d3
  433d52:	hlt    
  433d53:	sub    al,0xd5
  433d55:	adc    BYTE PTR [ebx],al
  433d57:	sub    al,0x77
  433d59:	enter  0x828b,0x14
  433d5d:	add    DWORD PTR [eax+eax*1],0x45
  433d61:	add    ebp,DWORD PTR [esi+0x3d75214d]
  433d67:	hlt    
  433d68:	in     al,dx
  433d69:	fisttp DWORD PTR [eax]
  433d6b:	(bad)  
  433d6d:	(bad)  
  433d6e:	sti    
  433d6f:	shl    BYTE PTR [esi-0x76],0x6e
  433d73:	push   esi
  433d74:	cs xor esp,edi
  433d77:	add    BYTE PTR [edx+0x7d033948],bh
  433d7d:	add    al,0x7
  433d7f:	mov    dh,0x7f
  433d81:	jns    0x433d49
  433d83:	ror    ebp,cl
  433d85:	jns    0x433dcc
  433d87:	fsubr  QWORD PTR [edx+0x7e42fc3f]
  433d8d:	mov    WORD PTR [edi],es
  433d8f:	mov    dh,0xb0
  433d91:	jnp    0x433dd0
  433d93:	in     al,0x94
  433d95:	fimul  WORD PTR [ebx-0x63de6839]
  433d9b:	call   DWORD PTR [ebx-0x26]
  433d9e:	std    
  433d9f:	int3   
  433da0:	xor    al,0x53
  433da2:	inc    ecx
  433da3:	in     al,0x17
  433da5:	sbb    BYTE PTR [edi+eax*4],cl
  433da8:	loope  0x433d7b
  433daa:	inc    ebp
  433dab:	sbb    eax,0x9e58b57
  433db0:	jecxz  0x433dc6
  433db2:	mov    dl,0xfd
  433db4:	push   esp
  433db5:	arpl   WORD PTR [eax+edx*2+0xf],ax
  433db9:	fidivr WORD PTR [esi-0x79]
  433dbc:	pop    ecx
  433dbd:	test   DWORD PTR [esi-0x74296318],edi
  433dc3:	rol    BYTE PTR [eax],0x97
  433dc6:	adc    al,0xe0
  433dc8:	xor    eax,0x9a60ed2
  433dcd:	sub    cl,BYTE PTR ds:0x6d5185b1
  433dd3:	mov    al,0xe5
  433dd5:	scas   eax,DWORD PTR es:[edi]
  433dd6:	push   0xd2d088fe
  433ddb:	std    
  433ddc:	call   FWORD PTR [edi]
  433dde:	xchg   edx,eax
  433ddf:	mov    esi,0x8bd69ce7
  433de4:	(bad)  
  433de5:	xchg   ebp,eax
  433de6:	pop    esi
  433de7:	mov    ecx,0xb0d99415
  433dec:	in     eax,0x7f
  433dee:	sub    BYTE PTR [esi+0x3d71b04b],al
  433df4:	je     0x433d89
  433df6:	bound  edi,QWORD PTR [edx]
  433df8:	or     bl,dl
  433dfa:	cdq    
  433dfb:	cmc    
  433dfc:	inc    ebx
  433dfd:	or     DWORD PTR [edx-0x24131903],ebx
  433e03:	std    
  433e04:	dec    DWORD PTR [edi]
  433e06:	and    DWORD PTR [edx+esi*4],eax
  433e09:	push   esp
  433e0a:	sbb    dh,ah
  433e0c:	adc    BYTE PTR [edi],dl
  433e0e:	add    BYTE PTR [edi],al
  433e10:	add    al,0x13
  433e12:	aaa    
  433e13:	mov    ds:0x2a38d58a,eax
  433e18:	cld    
  433e19:	test   BYTE PTR [eax],al
  433e1b:	out    0x3,eax
  433e1d:	sbb    DWORD PTR [edi],edi
  433e1f:	scas   eax,DWORD PTR es:[edi]
  433e20:	jle    0x433e76
  433e22:	dec    esp
  433e23:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  433e24:	sbb    BYTE PTR [ebx+edx*2-0x3b],al
  433e28:	add    BYTE PTR [eax],0xbf
  433e2b:	(bad)  
  433e2c:	out    0x4,eax
  433e2e:	sbb    BYTE PTR [eax-0x1b],dh
  433e31:	add    edx,DWORD PTR [edi+esi*8+0x351d0690]
  433e38:	sar    DWORD PTR [edi+0x4e],cl
  433e3b:	mov    bl,0xc7
  433e3d:	inc    esi
  433e3e:	xchg   ecx,eax
  433e3f:	mov    esi,0xc8677cef
  433e44:	out    0xab,al
  433e46:	leave  
  433e47:	dec    edi
  433e48:	pop    ds
  433e49:	push   esi
  433e4a:	fidivr WORD PTR [edx+0x1a]
  433e4d:	cmp    al,0x2c
  433e4f:	add    edi,esp
  433e51:	add    edx,DWORD PTR [ebx+esi*4+0x37f31f87]
  433e58:	mov    dh,0xdb
  433e5b:	cmp    eax,0xb9b723
  433e60:	jb     0x433e2a
  433e62:	mov    eax,ds:0x95cae700
  433e67:	call   0x83d74252
  433e6c:	in     al,dx
  433e6d:	rcl    DWORD PTR [edi+esi*8-0x3955bd96],cl
  433e74:	out    0x7e,eax
  433e76:	dec    edi
  433e77:	loopne 0x433e77
  433e79:	inc    eax
  433e7a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  433e7b:	jp     0x433e1f
  433e7d:	inc    edi
  433e7e:	leave  
  433e7f:	mov    edi,0xbfb13cb9
  433e84:	jo     0x433ecf
  433e86:	mov    BYTE PTR [edx],cl
  433e88:	add    BYTE PTR [esi+0x6a0b529b],ch
  433e8e:	add    BYTE PTR [edi],al
  433e90:	rcl    DWORD PTR ds:0x90097e9,0x64
  433e97:	add    al,0xc6
  433e99:	stc    
  433e9a:	jmp    0xd2737679
  433e9f:	pop    eax
  433ea0:	push   ebx
  433ea1:	or     edx,edx
  433ea3:	push   eax
  433ea4:	jl     0x433eef
  433ea6:	mov    ch,0x9a
  433ea8:	aaa    
  433ea9:	sub    BYTE PTR [eax-0x33],ah
  433eac:	int3   
  433ead:	and    eax,0x84fc5321
  433eb2:	mov    WORD PTR ss:[ebx],ds
  433eb5:	enter  0xd6ea,0x10
  433eb9:	test   DWORD PTR [esp+edi*1],ebp
  433ebc:	jle    0x433f09
  433ebe:	mov    ch,0x92
  433ec0:	aaa    
  433ec1:	inc    eax
  433ec2:	jo     0x433f18
  433ec4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  433ec5:	xor    eax,0x84f15da8
  433eca:	test   al,0xda
  433ecc:	cli    
  433ecd:	test   BYTE PTR [eax+edx*8],bl
  433ed0:	sbb    ecx,eax
  433ed2:	jb     0x433f32
  433ed4:	inc    eax
  433ed5:	xchg   DWORD PTR [esp+ebx*1],ebp
  433ed8:	jle    0x433f1d
  433eda:	mov    ch,0x58
  433edc:	inc    ecx
  433edd:	hlt    
  433ede:	bound  edx,QWORD PTR [eax+edx*8+0x35]
  433ee2:	test   al,0x6d
  433ee4:	add    DWORD PTR [ebp-0xbbebf58],eax
  433eea:	ret    0x7dff
  433eed:	dec    ebx
  433eee:	jns    0x433f22
  433ef0:	cmp    esp,ebx
  433ef2:	adc    al,BYTE PTR [eax]
  433ef4:	call   0x20948274
  433ef9:	aaa    
  433efa:	inc    eax
  433efb:	bound  edx,QWORD PTR [esp+ebp*4+0x25]
  433eff:	pushf  
  433f00:	outs   dx,DWORD PTR ds:[esi]
  433f01:	jge    0x433f4e
  433f03:	add    BYTE PTR [ecx+0x6eeb08a6],ch
  433f09:	add    BYTE PTR [ecx+0x0],0xf6
  433f0d:	inc    eax
  433f0e:	aam    0x8a
  433f10:	push   ecx
  433f11:	cld    
  433f12:	add    BYTE PTR [ebp-0x7b],0x49
  433f16:	or     BYTE PTR [eax-0x7e],al
  433f19:	inc    eax
  433f1a:	hlt    
  433f1b:	mov    DWORD PTR [eax],ebp
  433f1d:	test   eax,0x32beec6d
  433f22:	inc    eax
  433f23:	add    BYTE PTR [edx+0x78],al
  433f26:	aaa    
  433f27:	add    DWORD PTR ds:0x5907bf01,ebp
  433f2d:	add    DWORD PTR [eax],eax
  433f2f:	add    BYTE PTR [ebp+ebp*8+0x7c3dfff8],dl
  433f36:	jne    0x433f28
  433f38:	sub    eax,0x2c888400
  433f3d:	add    DWORD PTR [eax],eax
  433f3f:	mov    edi,DWORD PTR [eax-0x42b07d5c]
  433f45:	inc    esp
  433f46:	or     BYTE PTR [eax+0x42],al
  433f49:	add    eax,0xa4a889f0
  433f4e:	mov    edi,0xc907
  433f53:	add    BYTE PTR [esp+ecx*8],al
  433f56:	cli    
  433f57:	inc    DWORD PTR [eax]
  433f59:	in     eax,dx
  433f5a:	jnp    0x433fd3
  433f5c:	or     ch,ch
  433f5e:	inc    DWORD PTR [ebx+0xbdb0]
  433f64:	adc    DWORD PTR [ebx],0x1c
  433f67:	imul   esp,DWORD PTR [esi],0x30
  433f6a:	pop    eax
  433f6b:	and    al,0x0
  433f6d:	cs xor eax,0x7cd200fc
  433f73:	dec    ecx
  433f74:	add    DWORD PTR [ebp-0x5049f900],edi
  433f7a:	scas   eax,DWORD PTR es:[edi]
  433f7b:	inc    ebp
  433f7c:	cld    
  433f7d:	xchg   esp,eax
  433f7e:	bound  edi,QWORD PTR [esi-0x7b678b33]
  433f84:	ret    0x509c
  433f87:	xor    eax,edi
  433f89:	xchg   edi,eax
  433f8a:	and    DWORD PTR [ebx-0x50784b06],eax
  433f90:	test   ecx,ebx
  433f92:	cmp    DWORD PTR [ebx],ebx
  433f94:	inc    ebx
  433f95:	fs dec edi
  433f97:	cmp    DWORD PTR [eax],ecx
  433f99:	xchg   ebp,eax
  433f9a:	cwde   
  433f9b:	icebp  
  433f9c:	(bad)  
  433f9d:	ror    ch,cl
  433f9f:	jbe    0x433fe4
  433fa1:	xor    al,0x5d
  433fa3:	les    esi,FWORD PTR [ebp+edi*2+0x4e]
  433fa7:	cmp    eax,ebp
  433fa9:	packssdw mm4,mm5
  433fac:	dec    edi
  433fad:	outs   dx,DWORD PTR ds:[esi]
  433fae:	and    DWORD PTR [ebx+0x2ed98479],eax
  433fb4:	dec    esi
  433fb5:	mov    al,ds:0x8c4ed5d2
  433fba:	fscale 
  433fbc:	in     al,0x0
  433fbe:	xchg   ecx,eax
  433fbf:	shr    esp,0xfc
  433fc2:	adc    ebx,edx
  433fc4:	jl     0x434011
  433fc6:	pushf  
  433fc7:	dec    esi
  433fc8:	xor    bh,al
  433fca:	or     eax,0x5586ec1b
  433fcf:	leave  
  433fd0:	test   BYTE PTR [ecx-0x7c],bh
  433fd3:	fnstcw WORD PTR [ebx+eax*2-0x1c]
  433fd7:	push   eax
  433fd8:	inc    edx
  433fd9:	loopne 0x433fea
  433fdb:	xchg   edi,eax
  433fdc:	push   edx
  433fdd:	sbb    eax,0xd0d9b1
  433fe2:	xchg   esp,eax
  433fe3:	pop    esi
  433fe4:	mov    esp,0x4a9b5bf
  433fe9:	mov    edi,0xe7be8f0f
  433fee:	mov    WORD PTR [eax-0x22],ds
  433ff1:	add    BYTE PTR [ebx-0x4b410227],dh
  433ff7:	add    bh,ch
  433ff9:	add    al,0xe3
  433ffb:	ja     0x43402b
  433ffd:	ret    0xe8b3
  434000:	in     eax,0xc2
  434002:	leave  
  434003:	cmp    ebp,edi
  434005:	push   edi
  434006:	cwde   
  434007:	ja     0x433fb5
  434009:	sti    
  43400a:	push   esp
  43400b:	inc    eax
  43400c:	fild   WORD PTR [edi+0x7]
  43400f:	inc    ecx
  434010:	out    0xdc,eax
  434012:	enter  0xe0f,0x14
  434016:	mov    bx,0xecea
  43401a:	arpl   bx,ax
  43401c:	out    0x84,eax
  43401e:	(bad)  
  434020:	out    0x0,al
  434022:	add    BYTE PTR [eax],bl
  434024:	jb     0x43400d
  434026:	add    edx,DWORD PTR [edi+edi*2-0xdbc0c7e]
  43402d:	bound  eax,QWORD PTR [edi-0x7b18ff6c]
  434033:	and    BYTE PTR cs:[esi+0x25],dh
  434037:	test   eax,0x8d04e345
  43403c:	jl     0x4340ac
  43403e:	add    al,0x94
  434040:	add    dl,ah
  434042:	xchg   ebp,eax
  434043:	adc    al,dl
  434045:	sbb    al,0xd0
  434047:	adc    DWORD PTR [edx+0x7fc2e496],esi
  43404d:	mov    eax,ds:0xaf2d12fc
  434052:	add    ecx,esp
  434054:	jle    0x433fff
  434056:	and    al,0x7a
  434058:	mov    ds:0x4c802ede,al
  43405d:	xor    edi,DWORD PTR [ebx+0x4f]
  434060:	clc    
  434061:	test   eax,0x143cac45
  434066:	inc    esp
  434067:	xchg   esp,eax
  434068:	mov    ebx,0xc2c3f0ea
  43406d:	out    0x7a,eax
  43406f:	xchg   ebp,eax
  434070:	jg     0x434072
  434072:	jno    0x434036
  434074:	test   DWORD PTR [ecx-0x6374a77],0xf9c8d2a1
  43407e:	pop    esi
  43407f:	push   0x2d
  434081:	pop    ecx
  434082:	bound  edi,QWORD PTR [ebp+0x26]
  434085:	mov    esi,0x7b9700e1
  43408a:	inc    ebx
  43408b:	icebp  
  43408c:	(bad)  
  43408d:	xor    eax,0xf4b870e8
  434092:	test   BYTE PTR [edi+eax*2-0x529def86],ah
  434099:	les    eax,FWORD PTR [edi+0x507b67b1]
  43409f:	in     eax,0xd8
  4340a1:	dec    edi
  4340a2:	cmp    al,0xb7
  4340a4:	shl    BYTE PTR [edi],1
  4340a6:	cmp    BYTE PTR [edx-0x16063ce1],dh
  4340ac:	xchg   edi,eax
  4340ad:	daa    
  4340ae:	test   DWORD PTR [eax*4-0x7916f77e],eax
  4340b5:	stos   DWORD PTR es:[edi],eax
  4340b6:	sub    eax,0x1c0052f7
  4340bb:	jmp    0x25044157
  4340c0:	call   0x982d3a86
  4340c5:	fild   DWORD PTR [ecx]
  4340c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4340c8:	pop    esp
  4340c9:	test   al,0xfb
  4340cb:	(bad)  
  4340cc:	rol    bh,cl
  4340ce:	test   DWORD PTR [eax+edi*8],esp
  4340d1:	jl     0x43411e
  4340d3:	shl    DWORD PTR [eax+0x38],0xc
  4340d7:	bound  edx,QWORD PTR [eax+edx*8-0x79]
  4340db:	stc    
  4340dc:	pop    esi
  4340dd:	sub    eax,0xf09f70fc
  4340e2:	xchg   BYTE PTR [ecx],bh
  4340e4:	pushf  
  4340e5:	inc    ebx
  4340e6:	jns    0x4340a9
  4340e8:	xchg   edi,eax
  4340e9:	jns    0x434144
  4340eb:	add    BYTE PTR [eax],al
  4340ed:	aad    0x44
  4340ef:	outs   dx,DWORD PTR ds:[esi]
  4340f0:	cmp    al,0xc0
  4340f2:	int    0x7c
  4340f4:	aas    
  4340f5:	(bad)  
  4340f6:	xor    BYTE PTR [esi],ah
  4340f8:	mov    esi,DWORD PTR [eax-0x24]
  4340fb:	or     DWORD PTR [ebp-0x5b],0xfffffff6
  4340ff:	cmp    BYTE PTR [eax],dl
  434101:	rcr    DWORD PTR [esi],0x83
  434104:	inc    ebp
  434105:	fld    QWORD PTR [esi+0x55]
  434108:	or     ch,dl
  43410a:	mov    ah,bl
  43410c:	(bad)  
  43410d:	fidivr DWORD PTR [eax-0x40]
  434110:	je     0x434173
  434112:	mov    edx,0xfd7d1dff
  434117:	call   FWORD PTR [ebp+0x6]
  43411a:	jne    0x434118
  43411c:	(bad)  
  43411d:	mov    edx,0x908b57b2
  434122:	adc    BYTE PTR [edx+0x6d463d08],bh
  434128:	or     BYTE PTR [esi-0xcd42fc8],dh
  43412e:	clc    
  43412f:	sbb    BYTE PTR [ebp-0x73],0xe6
  434133:	push   ebp
  434134:	adc    BYTE PTR [ebx+edi*1],bh
  434137:	or     BYTE PTR [ecx],al
  434139:	sbb    ecx,ecx
  43413b:	cli    
  43413c:	pop    esi
  43413d:	cdq    
  43413e:	jg     0x4341b7
  434140:	or     BYTE PTR ds:0x71d03d46,ch
  434146:	in     eax,dx
  434147:	jl     0x434124
  434149:	popa   
  43414a:	loope  0x4341c6
  43414c:	jg     0x43412b
  43414e:	cld    
  43414f:	dec    edx
  434150:	je     0x434152
  434152:	fadd   QWORD PTR [edi+0x4e]
  434155:	or     al,0x76
  434157:	cmp    ebx,DWORD PTR [eax]
  434159:	sub    ecx,DWORD PTR [esi]
  43415b:	push   cs
  43415c:	push   eax
  43415d:	call   0x433ba3
  434162:	push   es
  434163:	ret    
  434164:	test   BYTE PTR [esi-0x6c],cl
  434167:	fstp   TBYTE PTR [eax+0x51]
  43416a:	lods   al,BYTE PTR ds:[esi]
  43416b:	mov    esi,0x6f664fb8
  434170:	dec    edi
  434171:	(bad)  
  434172:	mov    ebx,0x8c4176d6
  434177:	pusha  
  434178:	inc    edx
  434179:	xor    BYTE PTR [edi],bl
  43417b:	fiadd  DWORD PTR [eax-0x65c7808]
  434181:	rcl    BYTE PTR [ecx-0x31],0xfd
  434185:	call   DWORD PTR [ecx+ebp*4-0x2b650780]
  43418c:	add    al,0xc1
  43418e:	fnstenv [ecx-0x55840103]
  434194:	js     0x4341df
  434196:	cwde   
  434197:	(bad)  
  434198:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  434199:	adc    eax,0x7dafbb5d
  43419e:	jne    0x43420a
  4341a0:	cmp    al,0x8f
  4341a3:	scas   al,BYTE PTR es:[edi]
  4341a4:	jb     0x434164
  4341a6:	xchg   edi,eax
  4341a7:	fs cmc 
  4341a9:	inc    ebp
  4341aa:	adc    eax,0x9400840c
  4341af:	test   eax,0x9697cf00
  4341b4:	or     DWORD PTR [ebp+0x0],edi
  4341b7:	mov    cl,0x19
  4341b9:	add    al,0x87
  4341bb:	ret    0x527d
  4341be:	add    al,0x19
  4341c0:	ret    
  4341c1:	push   ecx
  4341c2:	add    dl,BYTE PTR [edi]
  4341c4:	pop    ebp
  4341c5:	add    BYTE PTR [ecx+ecx*4],al
  4341c8:	mov    al,0x78
  4341ca:	inc    ebx
  4341cb:	in     al,dx
  4341cc:	and    al,0xbd
  4341ce:	or     DWORD PTR [ecx],ebx
  4341d0:	cmp    ebx,ecx
  4341d2:	stc    
  4341d3:	sti    
  4341d4:	pop    ds
  4341d5:	daa    
  4341d6:	mov    eax,0xf9cc76ef
  4341db:	dec    ebx
  4341dc:	and    ah,dl
  4341de:	pop    ebx
  4341df:	(bad)  
  4341e0:	add    bh,ch
  4341e2:	add    edx,DWORD PTR [ecx]
  4341e4:	inc    esi
  4341e5:	mov    edi,0x5e5f692d
  4341ea:	out    0x6f,al
  4341ec:	ret    0x3df
  4341ef:	cld    
  4341f0:	mov    esi,0x5fbdcc82
  4341f5:	outs   dx,BYTE PTR ds:[esi]
  4341f6:	out    0x4f,al
  4341f8:	ret    0x3df
  4341fb:	adc    eax,eax
  4341fd:	stos   BYTE PTR es:[edi],al
  4341fe:	repz pusha 
  434200:	add    cl,ah
  434202:	repnz pop eax
  434204:	add    bl,ch
  434206:	icebp  
  434207:	rol    BYTE PTR [eax],1
  434209:	addr16 icebp 
  43420b:	enter  0x5400,0xf1
  43420f:	rol    BYTE PTR [eax],0xb6
  434212:	lock mov eax,0xb0f80300
  434218:	add    BYTE PTR [esi],dl
  43421a:	test   DWORD PTR [eax],0xf6ab00a8
  434220:	mov    al,ds:0x98f5e800
  434225:	add    BYTE PTR [ecx+0x6c0090f5],bh
  43422b:	cmc    
  43422c:	mov    BYTE PTR [eax],al
  43422e:	jo     0x434225
  434230:	add    BYTE PTR [eax],0x9f
  434233:	hlt    
  434234:	js     0x434236
  434236:	xor    al,0xf4
  434238:	jo     0x43423a
  43423a:	cs hlt 
  43423c:	push   0x60ebd200
  434241:	add    BYTE PTR [esi-0x14],dh
  434244:	pop    eax
  434245:	add    BYTE PTR [eax-0x13],cl
  434248:	rol    BYTE PTR [eax],1
  43424a:	sbb    eax,ebp
  43424c:	enter  0xb00,0xe8
  434250:	rol    BYTE PTR [eax],0x31
  434253:	jmp    0xb0:0xea8e00b8
  43425a:	add    bh,ch
  43425c:	mov    bh,0xfd
  43425e:	call   FWORD PTR [ecx]
  434260:	mov    eax,0xb1fffffd
  434265:	std    
  434266:	(bad)  
  434267:	fstp   TBYTE PTR [eax-0x3]
  43426a:	call   DWORD PTR [ebx+0x71fffd71]
  434270:	jp     0x43426f
  434272:	dec    DWORD PTR [edx+esi*2-0x3]
  434276:	(bad)  
  434277:	jns    0x4342f3
  434279:	std    
  43427a:	push   DWORD PTR [ebx-0x5a]
  43427d:	sti    
  43427e:	(bad)  
  43427f:	fiadd  WORD PTR [eax]
  434281:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  434282:	sti    
  434283:	call   DWORD PTR [edi+eiz*4]
  434286:	sti    
  434287:	call   FWORD PTR [ebx]
  434289:	xchg   ebp,edi
  43428b:	(bad)  
  43428c:	mov    ebx,0x6252ad0a
  434291:	in     eax,0x8
  434293:	cmp    DWORD PTR [edi],0xffffffe4
  434296:	stc    
  434297:	test   BYTE PTR [edi-0x423f7c85],ah
  43429d:	test   DWORD PTR [ebx-0x39eafab6],eax
  4342a3:	je     0x43427b
  4342a5:	fiadd  DWORD PTR [eax+0x34]
  4342a8:	fs pop eax
  4342aa:	xor    eax,0x42cab906
  4342af:	sub    BYTE PTR [ecx+0x2d7dce4e],bh
  4342b5:	cmp    BYTE PTR [ebp+0x52b2dd4a],al
  4342bb:	sub    BYTE PTR [edx-0x2a],ah
  4342be:	in     al,0x4e
  4342c0:	fwait
  4342c1:	dec    esi
  4342c2:	sar    DWORD PTR [ebp-0x53],1
  4342c5:	pop    ds
  4342c6:	rol    DWORD PTR [edx-0x3],0x97
  4342ca:	add    BYTE PTR [eax],al
  4342cc:	jmp    0x2c9e0373
  4342d1:	fiadd  DWORD PTR [eax+eax*1]
  4342d4:	add    BYTE PTR ds:0x32fff7c8,dl
  4342da:	call   0x23d0533
  4342df:	int3   
  4342e0:	int3   
  4342e1:	add    DWORD PTR [esi-0x34],esi
  4342e4:	int3   
  4342e5:	add    BYTE PTR [ecx],ah
  4342e7:	jbe    0x4342b5
  4342e9:	int3   
  4342ea:	add    DWORD PTR [esi-0x34],esi
  4342ed:	int3   
  4342ee:	mov    BYTE PTR ds:0xbca08bec,bh
  4342f4:	dec    esp
  4342f5:	mov    esi,DWORD PTR [eax-0x4c]
  4342f8:	push   eax
  4342f9:	mov    edx,DWORD PTR [eax*8-0x5bc3ef19]
  434300:	idiv   edi
  434302:	lods   eax,DWORD PTR ds:[esi]
  434303:	add    DWORD PTR [ebx-0x5],edi
  434306:	lods   al,BYTE PTR ds:[esi]
  434307:	push   eax
  434308:	sub    ecx,DWORD PTR [ebx-0x49f74ac8]
  43430e:	lea    eax,[esi]
  434310:	ret    0xe481
  434313:	aam    0xf7
  434315:	add    BYTE PTR [ebp+0x53],ch
  434318:	inc    BYTE PTR [eax+0xf7d4c4]
  43431e:	jge    0x434326
  434320:	icebp  
  434321:	xor    DWORD PTR [edx+0x6d00f7d4],0xa280fe53
  43432b:	aam    0xf7
  43432d:	add    BYTE PTR ds:0x8dc1bf3e,bh
  434333:	mov    cl,0x58
  434335:	or     ebp,DWORD PTR [esi+ebp*8+0x54]
  434339:	ret    0x141
  43433c:	dec    esi
  43433d:	mov    ebp,DWORD PTR [eax-0x5709814b]
  434343:	mov    ebx,0xe72c4686
  434348:	push   esi
  434349:	pop    ebx
  43434a:	add    al,dl
  43434c:	(bad)  
  43434d:	or     al,0x0
  43434f:	xchg   esp,eax
  434350:	sub    cl,bl
  434352:	adc    BYTE PTR [edi-0x7f2a8716],al
  434358:	fnstenv [edx-0x5c]
  43435b:	mov    eax,0x94fffda7
  434360:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  434361:	pop    DWORD PTR [edx]
  434363:	xchg   edi,eax
  434364:	pop    edi
  434365:	ds std 
  434367:	fdivr  st(1),st
  434369:	dec    eax
  43436a:	repz adc eax,0x94f9cd60
  434370:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  434371:	push   ebx
  434372:	add    dl,BYTE PTR ds:0x94f9cd80
  434378:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  434379:	test   DWORD PTR [edi+0x14],ebp
  43437c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43437d:	jge    0x434370
  43437f:	mov    bl,0x67
  434381:	fimul  DWORD PTR [ecx]
  434383:	punpckhwd mm7,QWORD PTR [ebp-0x3ded6f20]
  43438a:	std    
  43438b:	pop    edx
  43438c:	jl     0x43434c
  43438e:	loopne 0x434334
  434390:	jb     0x43438e
  434392:	mov    esi,0xcc36cdf
  434397:	xchg   esp,eax
  434398:	sub    bl,cl
  43439a:	mov    al,0x89
  43439c:	test   eax,0x181608fd
  4343a1:	add    al,0x0
  4343a3:	xchg   esp,eax
  4343a4:	xor    DWORD PTR [edi-0x2f3c1559],edx
  4343aa:	fst    QWORD PTR [ebp+0x10]
  4343ad:	sti    
  4343ae:	xchg   BYTE PTR [eax],al
  4343b0:	loope  0x434357
  4343b2:	jle    0x434399
  4343b4:	add    al,0xb5
  4343b6:	std    
  4343b7:	(bad)  
  4343b8:	cld    
  4343b9:	pop    esi
  4343ba:	(bad)  
  4343bb:	call   DWORD PTR [esp+ebp*1-0x5d6bdba0]
  4343c2:	(bad)  
  4343c3:	adc    dl,BYTE PTR [edi-0x3d4e0921]
  4343c9:	add    al,ch
  4343cb:	add    al,0xb
  4343cd:	add    BYTE PTR [ebp-0x1aacba08],ch
  4343d3:	add    al,0xb
  4343d5:	add    BYTE PTR [ebp-0x19acba08],bl
  4343db:	add    al,0xeb
  4343dd:	jmp    FWORD PTR [eax+edi*8+0x4eb5325]
  4343e4:	jmp    0x4343e5
  4343e6:	pushf  
  4343e7:	clc    
  4343e8:	and    eax,0xcb04ec53
  4343ed:	jmp    FWORD PTR [eax+edi*8+0x4e95305]
  4343f4:	retf   
  4343f5:	call   FWORD PTR [eax+edi*8+0x4ea5305]
  4343fc:	stos   DWORD PTR es:[edi],eax
  4343fd:	jmp    FWORD PTR [eax+edi*8+0x4df52e5]
  434404:	stos   DWORD PTR es:[edi],eax
  434405:	call   FWORD PTR [eax+edi*8+0x4f052e5]
  43440c:	mov    edi,edi
  43440e:	sub    al,0xf8
  434410:	inc    ebp
  434411:	push   edx
  434412:	fld    QWORD PTR [eax+eax*1]
  434415:	mov    edi,edi
  434417:	sbb    al,0xf8
  434419:	inc    ebp
  43441a:	push   edx
  43441b:	out    dx,al
  43441c:	add    al,0x6b
  43441e:	jmp    FWORD PTR [eax+edi*8]
  434421:	and    eax,0x6b04e352
  434426:	call   FWORD PTR [eax+edi*8]
  434429:	and    eax,0x4b04f452
  43442e:	jmp    FWORD PTR [eax+edi*8]
  434431:	add    eax,0x4b04e152
  434436:	call   FWORD PTR [eax+edi*8]
  434439:	add    eax,0x2b04f252
  43443e:	jmp    FWORD PTR [esp+eax*1]
  434441:	and    edi,DWORD PTR [edi+0x0]
  434444:	das    
  434445:	daa    
  434446:	inc    ebx
  434447:	or     DWORD PTR [esp+eax*8-0x47],esp
  43444b:	stc    
  43444c:	out    0x20,al
  43444e:	sub    eax,DWORD PTR [eax-0x204ee81a]
  434454:	test   al,0xde
  434456:	or     BYTE PTR [edi-0x45],ah
  434459:	add    edi,DWORD PTR [ebx-0x3d683906]
  43445f:	mov    eax,0x80011038
  434464:	mov    esi,0xdee67ac3
  434469:	cmp    dl,cl
  43446b:	or     ecx,ebp
  43446d:	fidivr DWORD PTR [eax+0x46d3a2fd]
  434473:	or     al,0xe6
  434475:	adc    al,0xf5
  434477:	clc    
  434478:	mov    es,WORD PTR [eax]
  43447a:	sar    DWORD PTR [esi-0x2b],cl
  43447d:	div    BYTE PTR [ebx]
  43447f:	retf   
  434480:	add    cl,ch
  434482:	xchg   edi,eax
  434483:	cmp    eax,0x3caad9f5
  434488:	xchg   ebx,eax
  434489:	jmp    0x2ac84525
  43448e:	pop    ecx
  43448f:	test   eax,0xe4f46c04
  434494:	jmp    ebp
  434496:	adc    DWORD PTR [edi],ecx
  434498:	std    
  434499:	and    al,BYTE PTR [ebx-0x6917ad90]
  43449f:	mov    cl,0xfd
  4344a1:	xor    ah,BYTE PTR [ebx+0x70]
  4344a4:	push   edx
  4344a5:	jmp    0x43443d
  4344a7:	mov    cl,0xfd
  4344a9:	and    ah,BYTE PTR [ebx+0x70]
  4344ac:	push   edx
  4344ad:	jmp    0x7043:0x32fdb196
  4344b4:	push   edx
  4344b5:	in     eax,dx
  4344b6:	xchg   esi,eax
  4344b7:	mov    cl,0xfd
  4344b9:	and    al,BYTE PTR [ebx+0x70]
  4344bc:	push   edx
  4344bd:	add    BYTE PTR [eax-0x1],al
  4344c0:	lock add esp,DWORD PTR [edi-0x4f]
  4344c4:	scas   eax,DWORD PTR es:[edi]
  4344c5:	push   esi
  4344c6:	xor    edi,edi
  4344c8:	lock add esi,DWORD PTR [edi-0x4f]
  4344cc:	scas   eax,DWORD PTR es:[edi]
  4344cd:	push   esi
  4344ce:	add    bh,bh
  4344d0:	lock add eax,DWORD PTR [edi-0x4d]
  4344d4:	scas   eax,DWORD PTR es:[edi]
  4344d5:	push   esi
  4344d6:	cmc    
  4344d7:	(bad)  
  4344d8:	lock add esi,DWORD PTR [edi]
  4344db:	mov    bl,0xaf
  4344dd:	push   esi
  4344de:	add    ah,ah
  4344e0:	(bad)  
  4344e1:	lock add esp,DWORD PTR [edi]
  4344e4:	mov    bl,0xaf
  4344e6:	push   esi
  4344e7:	idiv   esi
  4344e9:	lock add esi,DWORD PTR [edi]
  4344ec:	mov    bl,0xaf
  4344ee:	push   esi
  4344ef:	(bad)  
  4344f0:	(bad)  
  4344f1:	lock add eax,DWORD PTR [edi]
  4344f4:	mov    bl,0xaf
  4344f6:	push   esi
  4344f7:	mov    ecx,0xf703f0fe
  4344fc:	mov    dl,0xaf
  4344fe:	push   esi
  4344ff:	test   al,0xfe
  434501:	lock add esp,edi
  434504:	mov    dl,0xaf
  434506:	push   esi
  434507:	mov    ebx,0xf703f0fe
  43450c:	mov    dl,0xaf
  43450e:	push   esi
  43450f:	mov    bh,dh
  434511:	lock add eax,edi
  434514:	jle    0x4344f9
  434516:	adc    BYTE PTR [esi-0x34],ch
  434519:	jnp    0x4344e1
  43451b:	jge    0x434512
  43451d:	push   es
  43451e:	test   DWORD PTR [ecx],esi
  434520:	ret    0xfff7
  434523:	lock data16 je 0x434532
  434527:	jp     0x4344b4
  434529:	inc    BYTE PTR [edx]
  43452b:	mov    ch,0xfb
  43452d:	cli    
  43452e:	clc    
  43452f:	push   es
  434530:	push   eax
  434531:	in     eax,dx
  434532:	mov    eax,0x7fff7d2c
  434537:	xchg   esp,eax
  434538:	sbb    ah,ah
  43453a:	mov    edi,0xce5cda2e
  43453f:	mov    ds:0xf9c2a7,eax
  434544:	xchg   edi,eax
  434545:	in     eax,dx
  434546:	test   BYTE PTR [edi+0x14],ch
  434549:	stos   BYTE PTR es:[edi],al
  43454a:	jge    0x43453d
  43454c:	xor    ebp,eax
  43454e:	(bad)  
  43454f:	or     DWORD PTR [ebp+0x75],edi
  434552:	repz dec DWORD PTR [edx]
  434555:	(bad)  
  434557:	cmc    
  434558:	punpckhdq mm4,QWORD PTR [edx]
  43455b:	mov    edi,0x524b6f4
  434560:	aad    0xdd
  434562:	and    BYTE PTR [esi-0x334e5868],bh
  434568:	rcr    BYTE PTR [eax],1
  43456a:	ja     0x43455a
  43456c:	jecxz  0x434504
  43456e:	jns    0x434562
  434570:	dec    eax
  434571:	int3   
  434572:	jb     0x434518
  434574:	jo     0x43451d
  434576:	std    
  434577:	call   DWORD PTR [ecx+ebx*4-0x4fb80243]
  43457e:	hlt    
  43457f:	mov    cl,0x85
  434581:	jbe    0x434530
  434583:	jg     0x43453b
  434585:	cmp    DWORD PTR [eax+eax*1],eax
  434588:	xchg   esp,eax
  434589:	push   0xa36708dc
  43458e:	push   0x38
  434590:	mov    bh,0x69
  434592:	std    
  434593:	ds fcmove st,st(4)
  434596:	fisttp WORD PTR [ebp-0x15]
  434599:	sub    al,dl
  43459b:	and    BYTE PTR [ebx+0x73fdf72b],cl
  4345a1:	stos   BYTE PTR es:[edi],al
  4345a2:	js     0x43459e
  4345a4:	push   ebp
  4345a5:	inc    edi
  4345a6:	stc    
  4345a7:	test   BYTE PTR [eax],al
  4345a9:	arpl   WORD PTR [ebx-0x16bb7b02],di
  4345af:	aad    0x10
  4345b1:	pop    ds
  4345b2:	add    DWORD PTR [edi],edi
  4345b4:	ret    
  4345b5:	xor    DWORD PTR [ecx],ecx
  4345b7:	push   0xe7013de1
  4345bc:	add    edi,DWORD PTR [ebx-0x6bfbf55e]
  4345c2:	add    BYTE PTR [esi-0x10],ch
  4345c5:	push   es
  4345c6:	stc    
  4345c7:	rol    DWORD PTR [ebx-0x6c],0xf3
  4345cb:	fisub  DWORD PTR [esi+0x5c]
  4345ce:	jmp    0x434576
  4345d0:	add    ebx,DWORD PTR [ecx]
  4345d2:	fldcw  WORD PTR [eax-0xd0c5328]
  4345d8:	mov    sp,0x26e3
  4345dc:	add    al,0xb7
  4345de:	mov    bh,0xe7
  4345e0:	add    edx,DWORD PTR [ebx+esi*8-0x18538126]
  4345e7:	es add al,0xb1
  4345ea:	push   ecx
  4345eb:	jmp    0x434665
  4345ed:	sbb    al,dl
  4345ef:	mov    edi,0xe7b776f3
  4345f4:	add    edx,DWORD PTR [ebx+ecx*4-0x2083811d]
  4345fb:	es add al,0x11
  4345fe:	fld    TBYTE PTR [eax-0x797e6328]
  434604:	les    edx,FWORD PTR [eax+eax*1-0x6a67ef19]
  43460b:	scas   eax,DWORD PTR es:[edi]
  43460c:	sbb    BYTE PTR [eax],al
  43460e:	push   esp
  43460f:	add    BYTE PTR [esi-0x57],bl
  434612:	push   ebx
  434613:	stos   DWORD PTR es:[edi],eax
  434614:	call   DWORD PTR [eax]
  434616:	nop
  434617:	xchg   ebp,eax
  434618:	pop    ds
  434619:	and    esp,edx
  43461b:	add    BYTE PTR [eax-0x1f],ch
  43461e:	jge    0x434620
  434620:	out    0x3,eax
  434622:	sar    esp,0x5b
  434625:	or     edi,DWORD PTR [ebp-0x5cef18c0]
  43462b:	or     BYTE PTR [eax],al
  43462d:	bound  esp,QWORD PTR [edi]
  43462f:	ja     0x434617
  434631:	fxch   st(4)
  434633:	fdivr  DWORD PTR [edi-0x22c9b0ee]
  434639:	push   ds
  43463a:	xchg   edi,eax
  43463b:	add    BYTE PTR [eax],al
  43463d:	push   0xe900b935
  434642:	xchg   edi,eax
  434643:	jge    0x434659
  434645:	pop    esp
  434646:	lahf   
  434647:	loope  0x434688
  434649:	jmp    0xb1de52d2
  43464e:	jl     0x434690
  434650:	add    BYTE PTR [edx+0x3f],ah
  434653:	ja     0x43463a
  434655:	add    DWORD PTR [ebx],eax
  434657:	adc    ebx,DWORD PTR [ebx-0x904df]
  43465d:	or     edx,edi
  43465f:	(bad)  
  434660:	(bad)  
  434661:	call   0x1c65950
  434666:	out    0xf6,eax
  434668:	(bad)  
  434669:	stc    
  43466a:	dec    eax
  43466b:	add    al,0x85
  43466d:	stos   DWORD PTR es:[edi],eax
  43466e:	shl    DWORD PTR [edi-0x28fffbf0],1
  434674:	(bad)  
  434675:	(bad)  
  434676:	call   0xe1c64295
  43467b:	scas   al,BYTE PTR es:[edi]
  43467c:	idiv   bh
  43467e:	popa   
  43467f:	fidiv  DWORD PTR [esi-0x1b]
  434682:	loope  0x43469c
  434684:	aad    0xf9
  434686:	jmp    0xe5704722
  43468b:	hlt    
  43468c:	mul    DWORD PTR [ecx+ebp*1]
  43468f:	nop
  434690:	jge    0x434668
  434692:	test   al,0x43
  434694:	sbb    DWORD PTR ds:0x1cf934ed,ebp
  43469a:	test   eax,0x56de3597
  43469f:	nop
  4346a0:	add    BYTE PTR [eax],al
  4346a2:	sbb    bl,BYTE PTR [ecx+edx*4+0x3c820038]
  4346a9:	add    BYTE PTR [ebx],dh
  4346ab:	sub    al,0x12
  4346ad:	adc    eax,0xffffffac
  4346b0:	data16 adc BYTE PTR [ebx+0x8e3bba5],cl
  4346b7:	mov    esp,0x2d00f75e
  4346bc:	add    al,BYTE PTR [ebx+0x20b4b814]
  4346c2:	inc    eax
  4346c3:	cmp    eax,0x3dffdb7d
  4346c8:	add    al,BYTE PTR [eax]
  4346ca:	xor    ecx,DWORD PTR [ecx+0x61]
  4346cd:	cmp    BYTE PTR [ebx],ch
  4346cf:	in     eax,dx
  4346d0:	add    DWORD PTR [ebx+0x1865bcd8],eax
  4346d6:	xor    eax,DWORD PTR [eax]
  4346d8:	or     DWORD PTR [ecx+0x38],esp
  4346db:	and    ebp,DWORD PTR [ebp-0x1200e304]
  4346e1:	add    DWORD PTR [eax],eax
  4346e3:	xor    ebp,ecx
  4346e5:	mov    BYTE PTR [eax],bh
  4346e7:	das    
  4346e8:	mov    ebp,0xc9512afc
  4346ed:	xchg   BYTE PTR [edx+0x1d11d5c1],bh
  4346f3:	(bad)  
  4346f4:	mov    ebp,0xb98b0001
  4346f9:	mov    BYTE PTR [eax],bh
  4346fb:	daa    
  4346fc:	ins    DWORD PTR es:[edi],dx
  4346fd:	cld    
  4346fe:	sbb    dl,0xec
  434701:	data16 or BYTE PTR [ecx+0xc31e],al
  434708:	mov    ebp,0xd59cfdae
  43470d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43470e:	cmp    DWORD PTR [eax],eax
  434710:	sar    DWORD PTR ss:[ecx-0x2519a15],cl
  434717:	pushf  
  434718:	mov    ch,0x9d
  43471a:	cmp    DWORD PTR [eax],eax
  43471c:	in     al,dx
  43471d:	pop    ebx
  43471e:	test   DWORD PTR [eax],0x2cfda794
  434724:	cwde   
  434725:	sub    al,0xf5
  434727:	sub    ah,dl
  434729:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43472a:	cmp    BYTE PTR [edi-0x7bb454c],0x17
  434731:	cmp    eax,0x226484dd
  434736:	aad    0xbf
  434738:	ds mov bh,0xc4
  43473b:	in     eax,0x0
  43473d:	mov    WORD PTR [eax],gs
  43473f:	mov    ds:0xfda794f9,eax
  434744:	test   BYTE PTR [eax-0x2bdf0ad4],cl
  43474a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43474b:	test   ch,bl
  43474d:	and    esp,DWORD PTR [edi-0x2c980003]
  434753:	mov    al,ds:0xfd67bf38
  434758:	test   ah,ch
  43475a:	stos   DWORD PTR es:[di],eax
  43475c:	sbb    bh,al
  43475e:	stos   DWORD PTR es:[edi],eax
  43475f:	call   0xf323:0x3e7b738
  434766:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  434767:	std    
  434768:	jmp    DWORD PTR [edi-0x4cc77d2d]
  43476e:	out    0x3,eax
  434770:	sub    eax,0xbe8b6b45
  434775:	aad    0xbe
  434777:	adc    al,0x23
  434779:	retf   
  43477a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43477b:	std    
  43477c:	dec    DWORD PTR [edi]
  43477e:	fwait
  43477f:	cmp    BYTE PTR [eax],0x73
  434782:	out    0x3,eax
  434784:	test   esi,ecx
  434786:	stos   DWORD PTR es:[di],eax
  434788:	or     BYTE PTR ds:0x9400bf8a,dl
  43478e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43478f:	hlt    
  434790:	add    edi,ecx
  434792:	outs   dx,BYTE PTR ds:[esi]
  434793:	in     al,dx
  434794:	aas    
  434795:	xchg   esp,eax
  434796:	push   ds
  434797:	fidivr DWORD PTR [edi-0xb00fe81]
  43479d:	xchg   edi,eax
  43479e:	xchg   ebp,eax
  43479f:	pop    ds
  4347a0:	in     eax,0x0
  4347a2:	mov    ebx,0x6da66800
  4347a7:	add    edi,esp
  4347a9:	add    edi,DWORD PTR [ecx-0x5303a404]
  4347af:	inc    eax
  4347b0:	out    0x50,eax
  4347b2:	lea    edi,[ebp+0x33]
  4347b5:	mov    edi,0xc266b44d
  4347ba:	nop
  4347bb:	cs mov bh,0x8c
  4347be:	retw   0x60d
  4347c2:	adc    DWORD PTR [esi+edx*8-0x1c3e4efe],esi
  4347c9:	mov    WORD PTR [edx+eax*8],gs
  4347cc:	adc    dl,BYTE PTR [ebx+eiz*4]
  4347cf:	fwait
  4347d0:	cli    
  4347d1:	add    edx,DWORD PTR [eax+eax*1-0x6b0ffa2]
  4347d8:	rol    DWORD PTR [ebx-0x6c],0x87
  4347dc:	mov    edi,0x6808f9c2
  4347e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4347e2:	std    
  4347e3:	add    bh,ah
  4347e5:	add    eax,ecx
  4347e7:	hlt    
  4347e8:	imul   edi,ebx,0xffffffb0
  4347eb:	inc    eax
  4347ec:	out    0x8c,eax
  4347ee:	mov    esp,0xa91bcec1
  4347f3:	hlt    
  4347f4:	push   ebx
  4347f5:	sti    
  4347f6:	mov    al,0x40
  4347f8:	out    0xe6,eax
  4347fa:	int3   
  4347fb:	add    bh,ah
  4347fd:	add    esi,DWORD PTR [ecx-0xc]
  434800:	arpl   bx,di
  434802:	ins    BYTE PTR es:[edi],dx
  434803:	inc    eax
  434804:	out    0x84,eax
  434806:	add    BYTE PTR [esi-0x2a72e304],bh
  43480c:	sub    eax,0x7d49603a
  434811:	jno    0x43484a
  434813:	adc    BYTE PTR [eax+0x40de600],0x2d
  43481a:	cdq    
  43481b:	push   ss
  43481c:	sar    cl,cl
  43481e:	jmp    0x520248ba
  434823:	(bad)  
  434824:	in     eax,0x3
  434826:	jl     0x434897
  434828:	adc    al,0x40
  43482a:	jmp    0x4eb68f05
  43482f:	sbb    al,0xd0
  434831:	pop    edx
  434832:	sub    cl,BYTE PTR [ebx-0x3c]
  434835:	int3   
  434836:	pushf  
  434837:	and    BYTE PTR [ebp+eax*4-0x38806464],ah
  43483e:	pushf  
  43483f:	(bad)  
  434840:	in     eax,0xbf
  434842:	mov    esp,0x62000451
  434847:	retf   0x8510
  43484a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43484b:	lahf   
  43484c:	test   al,0x23
  43484e:	add    al,0x54
  434850:	mov    ecx,0x8b2b5b
  434855:	int3   
  434856:	pushf  
  434857:	ins    BYTE PTR es:[edi],dx
  434858:	dec    esi
  434859:	dec    ebp
  43485a:	push   0x3b
  43485c:	fadd   QWORD PTR [ebp+edi*1+0x2d84eaec]
  434863:	in     al,dx
  434864:	test   BYTE PTR [ebx+ebp*1+0x5d967db0],0x0
  43486c:	nop
  43486d:	add    BYTE PTR [eax],al
  43486f:	add    dl,bh
  434871:	jl     0x4348b1
  434873:	cmc    
  434874:	push   cs
  434875:	dec    edx
  434876:	jl     0x4348ad
  434878:	xchg   edi,eax
  434879:	jae    0x434860
  43487b:	jmp    0x4348db
  43487d:	jae    0x43485c
  43487f:	stc    
  434880:	mov    ds,eax
  434882:	xchg   ebp,edi
  434884:	mov    bl,0x7b
  434886:	jle    0x434901
  434888:	cwde   
  434889:	add    BYTE PTR [eax],al
  43488b:	bound  ecx,QWORD PTR [esi+0x2c]
  43488e:	xor    eax,0xfa3ff500
  434893:	mov    dh,ch
  434895:	test   BYTE PTR [esp+0x65],bl
  434899:	xchg   DWORD PTR [edx+0x38],ebp
  43489c:	hlt    
  43489d:	clc    
  43489e:	and    eax,DWORD PTR [esi+eax*1]
  4348a1:	out    0x6b,eax
  4348a3:	lea    ebx,[ecx-0x47]
  4348a6:	stc    
  4348a7:	mov    BYTE PTR [ecx-0x66],cl
  4348aa:	sbb    DWORD PTR [ebx-0x7c27964e],ecx
  4348b0:	int    0xfd
  4348b2:	add    BYTE PTR [ecx+edx*4+0x18],0x83
  4348b7:	inc    edx
  4348b8:	cdq    
  4348b9:	scas   eax,DWORD PTR es:[edi]
  4348ba:	inc    DWORD PTR [eax]
  4348bc:	cmp    eax,0xfae822fe
  4348c1:	jmp    FWORD PTR [edx]
  4348c3:	in     eax,dx
  4348c4:	(bad)  
  4348c5:	ds js  0x434851
  4348c8:	add    DWORD PTR [edx-0x7c72fceb],ebx
  4348ce:	je     0x4348f4
  4348d0:	add    BYTE PTR ds:0xa41faf03,ah
  4348d6:	and    BYTE PTR [eax+edx*1],ah
  4348d9:	cli    
  4348da:	sub    bl,BYTE PTR [eax+edi*1-0x6]
  4348de:	test   BYTE PTR [esp+0x9],bl
  4348e2:	xchg   DWORD PTR [edx+0x40],esi
  4348e5:	xchg   BYTE PTR [ecx],cl
  4348e7:	and    al,0xeb
  4348e9:	call   0x9e438a7e
  4348ee:	mov    BYTE PTR [edi],0xb7
  4348f1:	jmp    0xeb107c38
  4348f6:	jnp    0x4348d8
  4348f8:	add    BYTE PTR [ebp-0x42158703],bh
  4348fe:	std    
  4348ff:	clc    
  434900:	dec    edx
  434902:	test   esp,edx
  434904:	add    BYTE PTR [ebp-0x6b48f903],ch
  43490a:	jecxz  0x4348fe
  43490c:	clc    
  43490d:	outs   dx,DWORD PTR ds:[esi]
  43490e:	data16 cmp bl,bl
  434911:	pmulhuw mm4,mm7
  434914:	add    ecx,DWORD PTR [ebx-0x3100ff16]
  43491a:	jecxz  0x434903
  43491c:	lgdtd  [ebx+0x2eb8148c]
  434923:	xor    DWORD PTR [eax+edx*4],esp
  434926:	cmp    DWORD PTR cs:[esp+esi*4],esp
  43492a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43492b:	mov    ah,0x85
  43492d:	sar    bl,1
  43492f:	pop    ss
  434930:	mov    dh,0x5c
  434932:	cmp    DWORD PTR [edx+0x330900f9],edi
  434938:	cmc    
  434939:	pop    es
  43493a:	xchg   ebp,eax
  43493b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43493c:	std    
  43493d:	mov    al,BYTE PTR [eax]
  43493f:	mov    bh,0x5
  434941:	inc    DWORD PTR [ebx-0x59]
  434944:	xchg   BYTE PTR [esi+eax*4],al
  434947:	(bad)  
  434948:	add    DWORD PTR [esi],esi
  43494a:	test   eax,0x664486b3
  43494f:	fwait
  434950:	out    dx,al
  434951:	inc    ebx
  434952:	pop    esi
  434953:	mov    ds:0xe5170138,eax
  434958:	add    al,0x73
  43495a:	std    
  43495b:	std    
  43495c:	xor    edi,DWORD PTR [ebp-0x2a]
  43495f:	call   0x72fd:0xa703f96c
  434966:	xchg   edx,eax
  434967:	es mov esi,0x14bed4fe
  43496d:	sub    al,0x95
  43496f:	es into 
  434971:	add    BYTE PTR [ecx],dl
  434973:	mov    ds:0xfb5884f7,eax
  434978:	jecxz  0x43499e
  43497a:	fld    TBYTE PTR [ebx-0x59340101]
  434980:	cmp    cl,BYTE PTR [edi+ecx*1+0x0]
  434984:	cmp    ebp,eax
  434986:	add    DWORD PTR [ebp-0xa7017c5],0xffffffa5
  43498d:	cmp    eax,0xe8138599
  434992:	fwait
  434993:	test   ebp,edi
  434995:	inc    ebx
  434996:	adc    DWORD PTR [ebx+eax*8+0xf],edx
  43499a:	add    BYTE PTR [ecx],bl
  43499c:	adc    eax,0xafdeaacb
  4349a1:	push   0xffffffbd
  4349a3:	sbb    DWORD PTR [ebp+0xb],ecx
  4349a6:	sbb    al,0x13
  4349a8:	inc    ebp
  4349a9:	add    esp,DWORD PTR [eax]
  4349ab:	sbb    edi,DWORD PTR [ebx]
  4349ad:	xlat   BYTE PTR ds:[ebx]
  4349ae:	clc    
  4349af:	sub    BYTE PTR [esi],ch
  4349b1:	cld    
  4349b2:	mov    al,ch
  4349b4:	in     al,0xea
  4349b6:	add    BYTE PTR [edx+edi*2-0x4d],ah
  4349ba:	out    0x9b,eax
  4349bc:	(bad)  
  4349bd:	jns    0x434a1f
  4349bf:	mov    WORD PTR [edi+0x79d43a5e],gs
  4349c5:	ret    
  4349c6:	out    0x8f,eax
  4349c8:	jnp    0x4349bd
  4349ca:	out    0x3a,eax
  4349cc:	loop   0x4349df
  4349ce:	mov    ebp,0xe7b37c2d
  4349d3:	imul   eax,edi,0xffffffab
  4349d6:	out    0x7f,eax
  4349d8:	add    ch,al
  4349da:	add    edx,DWORD PTR [ecx+edi*2+0x5511339d]
  4349e1:	ret    
  4349e2:	sti    
  4349e3:	sbb    BYTE PTR [ebp+0xb],cl
  4349e6:	and    BYTE PTR [ecx],dl
  4349e8:	inc    ebx
  4349e9:	push   ebx
  4349ea:	stc    
  4349eb:	retf   
  4349ec:	das    
  4349ed:	in     eax,0x88
  4349ef:	sub    DWORD PTR [ebx+eiz*4+0x224e48e7],eax
  4349f6:	pop    edi
  4349f7:	sbb    esi,edi
  4349f9:	in     al,dx
  4349fa:	and    al,BYTE PTR [ecx+0x1d]
  4349fd:	add    bh,bh
  4349ff:	add    bh,cl
  434a01:	icebp  
  434a02:	pop    ds
  434a03:	outs   dx,DWORD PTR ss:[esi]
  434a05:	xor    al,0x68
  434a07:	leave  
  434a08:	push   0x4f
  434a0a:	ins    DWORD PTR es:[edi],dx
  434a0b:	or     al,0xa4
  434a0d:	punpckhwd mm3,QWORD PTR [ecx]
  434a10:	ins    BYTE PTR es:[edi],dx
  434a11:	daa    
  434a12:	imul   eax,DWORD PTR [eax],0x65
  434a15:	and    esp,DWORD PTR [ecx+ecx*8+0x76]
  434a19:	sbb    eax,0x4ec3046d
  434a1e:	ins    BYTE PTR es:[edi],dx
  434a1f:	lock ja 0x434a6e
  434a22:	imul   eax,DWORD PTR ds:0xdb61e0bb,0xab201ba8
  434a2c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  434a2d:	daa    
  434a2e:	pop    edi
  434a2f:	(bad)  
  434a30:	ja     0x434a6f
  434a32:	pop    edi
  434a33:	shr    BYTE PTR [ebx+0x70156e23],0x30
  434a3a:	outs   dx,BYTE PTR ds:[esi]
  434a3b:	ror    BYTE PTR [ebx+0x37c76334],1
  434a41:	fidiv  WORD PTR [esi]
  434a43:	lock aas 
  434a45:	cli    
  434a46:	add    eax,0xccbc4b2a
  434a4b:	sub    eax,0x64ccbc63
  434a50:	adc    eax,0x97e90094
  434a55:	ja     0x434a71
  434a57:	call   0x6c954af3
  434a5c:	mov    ebx,0x41b9ffe4
  434a61:	and    al,BYTE PTR [edi-0x3febff47]
  434a67:	add    al,0x30
  434a69:	lds    esi,FWORD PTR [ebx+0x7206b8b]
  434a6f:	add    cl,ch
  434a71:	push   0x97e9000a
  434a76:	(bad)  
  434a78:	add    BYTE PTR [ebx+0x7d],cl
  434a7b:	xor    BYTE PTR [ebx+0x7540fffd],al
  434a81:	or     BYTE PTR [ecx+0x7a],bh
  434a84:	jl     0x434a3d
  434a86:	add    al,BYTE PTR [eax]
  434a88:	mov    ecx,0x2be
  434a8d:	inc    eax
  434a8e:	loopne 0x434ab3
  434a90:	add    dh,cl
  434a92:	jo     0x434af2
  434a94:	mov    DWORD PTR [ebp+0x6404c085],edi
  434a9a:	icebp  
  434a9b:	in     al,dx
  434a9c:	mov    eax,0x27c
  434aa1:	fwait
  434aa2:	jnp    0x434b1e
  434aa4:	xchg   esp,eax
  434aa5:	jns    0x434aa9
  434aa7:	add    BYTE PTR [ebx],dh
  434aa9:	lods   eax,DWORD PTR ds:[esi]
  434aaa:	jnp    0x434b26
  434aac:	lods   al,BYTE PTR ds:[esi]
  434aad:	imul   eax,DWORD PTR [edx],0x0
  434ab0:	mov    edi,edi
  434ab2:	sbb    al,0xe
  434ab4:	add    BYTE PTR [ebp+0x7d],ch
  434ab7:	jp     0x434a69
  434ab9:	cmp    eax,DWORD PTR [edx]
  434abb:	add    BYTE PTR [ecx+0xe24bf],cl
  434ac1:	cmp    eax,0xa1ccbb48
  434ac6:	mov    eax,0x8100cccc
  434acb:	mov    eax,0xb881cccc
  434ad0:	int3   
  434ad1:	int3   
  434ad2:	call   0xb6953755
  434ad7:	xchg   esp,eax
  434ad8:	push   eax
  434ad9:	adc    al,0x2d
  434adb:	add    cl,BYTE PTR [ebx+0x56]
  434ade:	xchg   bh,ch
  434ae0:	pop    es
  434ae1:	mov    esp,DWORD PTR [ecx+0x34]
  434ae4:	pop    esp
  434ae5:	or     ebp,ebp
  434ae7:	add    DWORD PTR [ebp+0x557b9b0c],eax
  434aed:	cld    
  434aee:	mov    dh,0xbe
  434af0:	pop    es
  434af1:	(bad)  
  434af2:	xchg   esp,eax
  434af3:	js     0x434af2
  434af5:	call   DWORD PTR [esp+edi*1+0x302084ef]
  434afc:	sbb    eax,0x8a979405
  434b01:	pushf  
  434b02:	sbb    al,0x14
  434b04:	or     DWORD PTR [eax],eax
  434b06:	xchg   esp,eax
  434b07:	into   
  434b08:	outs   dx,BYTE PTR ds:[esi]
  434b09:	adc    al,0x3
  434b0b:	mov    bh,0x6e
  434b0d:	sbb    al,0x13
  434b0f:	push   es
  434b10:	stc    
  434b11:	int3   
  434b12:	es mov al,0x30
  434b15:	sbb    BYTE PTR [esi],cl
  434b17:	xor    al,0xff
  434b19:	push   edi
  434b1a:	adc    BYTE PTR [edi+0x2f4884fd],0x51
  434b21:	add    eax,0x93fb9794
  434b26:	call   0x4ce:0x9400100f
  434b2d:	aas    
  434b2e:	add    BYTE PTR [edi],bl
  434b30:	xchg   ebx,eax
  434b31:	test   DWORD PTR [edi+ebx*4-0x69],ebx
  434b35:	std    
  434b36:	test   cl,cl
  434b38:	cmp    eax,DWORD PTR [esi]
  434b3a:	mov    cl,0x80
  434b3c:	dec    esi
  434b3d:	push   es
  434b3e:	mov    cl,0xb0
  434b40:	ss pop ds
  434b42:	xor    eax,0x733d6967
  434b47:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  434b48:	and    dl,BYTE PTR [eax-0x4]
  434b4b:	push   cs
  434b4c:	add    DWORD PTR [ebx],0x58
  434b4f:	mov    BYTE PTR [edi-0x62f7ca03],dl
  434b55:	push   ebp
  434b56:	adc    al,0x94
  434b58:	xchg   edi,eax
  434b59:	das    
  434b5a:	sub    cl,BYTE PTR [edi]
  434b5c:	mov    WORD PTR ds:0x51474887,es
  434b62:	add    eax,0x908a9794
  434b67:	fs sar ebp,cl
  434b6a:	dec    DWORD PTR [edi]
  434b6c:	add    al,bl
  434b6e:	add    eax,0xc5476db
  434b73:	mov    eax,ds:0x198651ba
  434b78:	cmp    ecx,ebx
  434b7a:	mov    ecx,DWORD PTR [eax]
  434b7c:	jo     0x434ba1
  434b7e:	or     eax,0x5d190094
  434b83:	adc    DWORD PTR [ebx+0x5319c514],esp
  434b89:	stos   DWORD PTR es:[edi],eax
  434b8a:	lea    ecx,[edi-0x8]
  434b8d:	inc    eax
  434b8e:	mov    ecx,DWORD PTR [eax]
  434b90:	js     0x434bcd
  434b92:	or     eax,0x2e009400
  434b97:	lea    esi,[edi-0x77459b6]
  434b9d:	outs   dx,DWORD PTR ds:[esi]
  434b9e:	and    ecx,DWORD PTR ds:0x5d190094
  434ba4:	adc    DWORD PTR [esi-0x42af3aec],esp
  434baa:	fwait
  434bab:	enter  0xbd48,0x33
  434baf:	enter  0xbd60,0x2b
  434bb3:	enter  0xbd58,0xbc
  434bb7:	mov    WORD PTR [eax-0x80],?
  434bba:	cmp    ebp,esp
  434bbc:	adc    BYTE PTR [edx-0x15],dl
  434bbf:	push   esp
  434bc0:	sbb    DWORD PTR [edx],ecx
  434bc2:	outs   dx,BYTE PTR ds:[esi]
  434bc3:	dec    ebx
  434bc4:	pushf  
  434bc5:	jns    0x434b63
  434bc7:	stos   DWORD PTR es:[edi],eax
  434bc8:	sbb    DWORD PTR [edx],edx
  434bca:	pusha  
  434bcb:	dec    edi
  434bcc:	pop    eax
  434bcd:	js     0x434b87
  434bcf:	inc    ebp
  434bd1:	jns    0x434b87
  434bd3:	mov    ds:0x50df5211,eax
  434bd8:	sbb    DWORD PTR [edx],ebp
  434bda:	div    esp
  434bdc:	push   edx
  434bdd:	jp     0x434b7b
  434bdf:	lahf   
  434be0:	popf   
  434be1:	jae    0x434bfb
  434be3:	(bad)  
  434be4:	rol    cl,cl
  434be6:	add    BYTE PTR [ebx],cl
  434be8:	test   al,0x5
  434bea:	(bad)  
  434beb:	pusha  
  434bec:	or     ch,ch
  434bee:	add    al,0xe9
  434bf0:	xchg   edi,eax
  434bf1:	or     DWORD PTR [eax+0x9929],0x60
  434bf8:	add    BYTE PTR [edi],cl
  434bfa:	inc    ebp
  434bfb:	add    eax,0x888397e9
  434c00:	xor    DWORD PTR [ecx+0x1f700000],esp
  434c06:	cmp    eax,0x8397e905
  434c0b:	mov    BYTE PTR [ecx],bl
  434c0d:	mov    DWORD PTR [eax],eax
  434c0f:	add    BYTE PTR [eax+0x1f],dh
  434c12:	push   ebp
  434c13:	add    eax,0x888397e9
  434c18:	xor    DWORD PTR [ecx+0xf620000],edx
  434c1e:	push   ebp
  434c1f:	adc    al,0xe9
  434c21:	xchg   edi,eax
  434c22:	test   DWORD PTR [ecx+esi*2-0x16fffa1d],edx
  434c29:	mov    dl,al
  434c2b:	bound  esp,QWORD PTR [eax-0x2d]
  434c2e:	jge    0x434c2e
  434c30:	jno    0x434c51
  434c32:	push   esp
  434c33:	adc    al,0xe9
  434c35:	xchg   edi,eax
  434c36:	(bad)  
  434c38:	test   al,0xe
  434c3a:	inc    edi
  434c3b:	fsub   DWORD PTR [eax-0x5e]
  434c3e:	lods   al,BYTE PTR ds:[esi]
  434c3f:	xchg   DWORD PTR [edi+ecx*1-0x6e0308d5],edi
  434c46:	add    BYTE PTR [eax],al
  434c48:	out    0x1a,al
  434c4a:	push   edx
  434c4b:	(bad)  
  434c4c:	call   0x71d7c3e8
  434c51:	retf   
  434c52:	add    eax,0x4f1ee900
  434c57:	hlt    
  434c58:	push   ebx
  434c59:	sub    ch,BYTE PTR [ebp+0x2800e9f9]
  434c5f:	mov    edx,0x76c7fffd
  434c64:	dec    ebp
  434c65:	in     al,dx
  434c66:	test   BYTE PTR [edx-0x10],al
  434c69:	nop
  434c6a:	jbe    0x434cae
  434c6c:	hlt    
  434c6d:	mov    ebx,esp
  434c6f:	imul   DWORD PTR [esi+0x6fe6e4c]
  434c75:	mov    bh,0xb9
  434c77:	ja     0x434c73
  434c79:	inc    eax
  434c7a:	xchg   bl,al
  434c7c:	jbe    0x434c84
  434c7e:	mov    bl,0x77
  434c80:	(bad)  
  434c81:	mov    DWORD PTR [eax+0x79895e6c],edx
  434c87:	(bad)  
  434c88:	cli    
  434c89:	cmp    ah,BYTE PTR [eax+0x3647775c]
  434c8f:	jmp    0x803db377
  434c94:	dec    eax
  434c95:	cmp    al,0xa6
  434c97:	(bad)  
  434c98:	push   DWORD PTR [edx]
  434c9a:	add    esp,DWORD PTR [edi+0x75b77cd0]
  434ca0:	jmp    0x6e0:0x7576122b
  434ca7:	mov    cl,0xb0
  434ca9:	cmpps  xmm5,XMMWORD PTR [eax+0x21b038c],0xa7
  434cb1:	iret   
  434cb2:	jl     0x434d2a
  434cb4:	test   al,0x16
  434cb6:	jge    0x434cb6
  434cb8:	or     BYTE PTR [ebp-0x57],0x7f
  434cbc:	shl    DWORD PTR [ebp+ebx*2+0x3],0xaf
  434cc1:	push   esp
  434cc2:	add    ah,ch
  434cc4:	(bad)  
  434cc5:	cli    
  434cc6:	aad    0x3a
  434cc8:	and    ecx,edi
  434cca:	add    ebp,ebx
  434ccc:	sbb    BYTE PTR [esi],cl
  434cce:	add    BYTE PTR ds:0xa6fc7577,ch
  434cd4:	out    dx,eax
  434cd5:	test   DWORD PTR [ebx-0xfba610],0x73a16494
  434cdf:	or     BYTE PTR ds:0xdc1809aa,ah
  434ce5:	add    eax,DWORD PTR [eax]
  434ce7:	xchg   esp,eax
  434ce8:	sbb    al,0x78
  434cea:	js     0x434cac
  434cec:	sahf   
  434ced:	std    
  434cee:	dec    DWORD PTR [edi]
  434cf0:	lea    esi,[ecx+0x71167a47]
  434cf6:	dec    eax
  434cf7:	test   al,0xae
  434cf9:	std    
  434cfa:	call   DWORD PTR [esp-0x6167b777]
  434d01:	std    
  434d02:	dec    DWORD PTR [ecx-0x38]
  434d05:	mov    BYTE PTR [eax+esi*2-0x6b000269],ah
  434d0c:	push   ss
  434d0d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  434d0e:	dec    BYTE PTR [ecx+eax*2+0x7d]
  434d12:	ss xchg esp,eax
  434d14:	or     ebp,DWORD PTR [edx+0x45241762]
  434d1a:	cmp    cl,BYTE PTR [edi-0x22020269]
  434d20:	jp     0x434cd4
  434d22:	add    BYTE PTR [ecx+edi*8-0x23ff6bfe],dl
  434d29:	imul   eax,DWORD PTR [esi],0x0
  434d2c:	xchg   esp,eax
  434d2d:	push   ds
  434d2e:	(bad)  
  434d2f:	bound  edx,QWORD PTR [ebp-0x69158136]
  434d35:	sbb    al,0xab
  434d37:	jns    0x434d5c
  434d39:	cs push eax
  434d3b:	cld    
  434d3c:	sbb    ebp,esp
  434d3e:	sub    BYTE PTR [ebx+0xd],ch
  434d41:	mov    esp,0x20b09a1
  434d46:	mov    edi,DWORD PTR [ebx+0x40]
  434d49:	and    al,0xb2
  434d4b:	je     0x434d35
  434d4d:	push   ds
  434d4e:	dec    eax
  434d4f:	lock or DWORD PTR [ebx],esi
  434d52:	test   DWORD PTR [edi+ebx*4+0x0],ebx
  434d56:	out    0x3,eax
  434d58:	pop    ds
  434d59:	test   edi,esp
  434d5b:	add    edx,DWORD PTR [eax+eax*1-0x56e7baa2]
  434d62:	pushf  
  434d63:	mov    bl,0x91
  434d65:	call   0x48be:0xa0878ceb
  434d6c:	in     al,dx
  434d6d:	sub    dl,al
  434d6f:	push   es
  434d70:	inc    ebp
  434d71:	sub    al,0x5e
  434d73:	add    DWORD PTR [edi],ebx
  434d75:	xor    al,0x6e
  434d77:	add    ah,BYTE PTR [ecx+0x191b53a6]
  434d7d:	(bad)  
  434d7e:	(bad)  
  434d7f:	aam    0x11
  434d81:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  434d82:	pop    esi
  434d83:	push   edi
  434d84:	in     al,dx
  434d85:	clc    
  434d86:	jns    0x434d90
  434d88:	adc    ecx,edi
  434d8a:	mov    DWORD PTR [ebx+0x7f70c300],edi
  434d90:	push   cs
  434d91:	xchg   esp,eax
  434d92:	add    BYTE PTR [ecx-0x75],al
  434d95:	xchg   BYTE PTR [ecx+0x2b11b034],ch
  434d9b:	xchg   ebx,eax
  434d9c:	mov    DWORD PTR [edi],esp
  434d9e:	mov    al,ds:0x6c27b56c
  434da3:	pop    esi
  434da4:	aaa    
  434da5:	add    BYTE PTR [edx+edx*4-0x3862dfe],0xa7
  434dad:	pop    es
  434dae:	(bad)  
  434daf:	adc    dl,BYTE PTR [esi-0x1f]
  434db2:	jnp    0x434d38
  434db4:	push   edi
  434db5:	xor    DWORD PTR [ebp-0x4aa737cd],esi
  434dbb:	sub    ecx,eax
  434dbd:	push   eax
  434dbe:	mov    ch,0xbc
  434dc0:	mov    BYTE PTR [eax-0x7c],ch
  434dc3:	cmp    edx,DWORD PTR [ecx+eiz*8]
  434dc6:	dec    esi
  434dc7:	call   0x505:0x1f7c4388
  434dce:	inc    eax
  434dcf:	add    bl,ch
  434dd1:	inc    esp
  434dd2:	mov    dh,0xc1
  434dd4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  434dd5:	out    dx,eax
  434dd6:	test   eax,0x7fe126f9
  434ddb:	inc    ebx
  434ddc:	sbb    DWORD PTR [ebx],ebx
  434dde:	aas    
  434ddf:	add    DWORD PTR [esi+eiz*2-0x4],esp
  434de3:	sub    BYTE PTR [ecx],0xc3
  434de6:	clc    
  434de7:	mov    dh,0x73
  434de9:	nop
  434dea:	add    BYTE PTR [eax],al
  434dec:	ins    BYTE PTR es:[edi],dx
  434ded:	enter  0xb1a5,0xf6
  434df1:	add    BYTE PTR [eax+0x1],al
  434df4:	add    BYTE PTR [edi-0x1066c2e2],al
  434dfa:	push   0xffffffcd
  434dfc:	or     DWORD PTR [ecx+0x7],esi
  434dff:	add    DWORD PTR [eax],eax
  434e01:	jmp    0x2a46101a
  434e06:	pop    ds
  434e07:	sub    al,0xfc
  434e09:	jb     0x434d8d
  434e0b:	clc    
  434e0c:	xchg   BYTE PTR [esp+eax*1],bl
  434e0f:	jle    0x434e6c
  434e11:	mov    ecx,0xc85660c
  434e16:	in     al,dx
  434e17:	stc    
  434e18:	mov    al,0x2
  434e1a:	push   esi
  434e1b:	in     eax,dx
  434e1c:	into   
  434e1d:	sbb    al,0x94
  434e1f:	in     eax,dx
  434e20:	mov    esp,0xd1ed7a1d
  434e25:	or     al,0x9e
  434e27:	and    bh,bh
  434e29:	pop    esp
  434e2a:	or     BYTE PTR ds:0x9d97e906,ah
  434e30:	sub    DWORD PTR [edi+edx*2+0x2c],ebp
  434e34:	adc    dh,BYTE PTR [edx-0xe8b574e]
  434e3a:	mov    DWORD PTR [ecx-0x154997c],ebp
  434e40:	(bad)  
  434e41:	call   0x8dc4f7bf
  434e46:	popf   
  434e47:	add    BYTE PTR [eax],al
  434e49:	add    dh,ah
  434e4b:	idiv   BYTE PTR [edx-0x6]
  434e4e:	inc    edi
  434e4f:	in     al,dx
  434e50:	add    BYTE PTR [esi-0x7e],ah
  434e53:	and    al,0xc0
  434e55:	or     al,BYTE PTR [eax]
  434e57:	cmp    eax,0x1b07e303
  434e5c:	ins    BYTE PTR es:[edi],dx
  434e5d:	jg     0x434e23
  434e5f:	daa    
  434e60:	add    eax,DWORD PTR [eax]
  434e62:	xor    ebx,DWORD PTR [edi+0x7a]
  434e65:	cmp    eax,0x6dc878f8
  434e6a:	or     dl,BYTE PTR [ecx+edi*2+0x0]
  434e6e:	add    ch,ch
  434e70:	jge    0x434edc
  434e72:	add    edx,DWORD PTR [esi+0x68c332f5]
  434e78:	stc    
  434e79:	mov    al,0x6
  434e7b:	std    
  434e7c:	add    al,BYTE PTR [eax]
  434e7e:	lea    edi,[ecx+esi*2]
  434e81:	jecxz  0x434e8b
  434e83:	add    al,0xfb
  434e85:	(bad)  
  434e86:	(bad)  
  434e87:	mov    ebp,0x3efd697f
  434e8c:	cmp    esp,edi
  434e8e:	add    al,0x2
  434e90:	inc    ecx
  434e91:	hlt    
  434e92:	jne    0x434ec1
  434e94:	push   ebx
  434e95:	push   esi
  434e96:	pop    ebx
  434e97:	ss pop ecx
  434e99:	push   ebp
  434e9a:	ret    
  434e9b:	loope  0x434e5c
  434e9d:	int3   
  434e9e:	int3   
  434e9f:	icebp  
  434ea0:	mov    edi,0x2758cccc
  434ea5:	in     al,dx
  434ea6:	adc    DWORD PTR [ecx],0x11
  434ea9:	dec    ebx
  434eaa:	push   esi
  434eab:	push   es
  434eac:	outs   dx,DWORD PTR ds:[esi]
  434ead:	pop    es
  434eae:	mov    bh,0xa3
  434eb0:	(bad)  
  434eb1:	sub    dl,dl
  434eb3:	call   0xf760:0xb8c7f125
  434eba:	inc    DWORD PTR [eax]
  434ebc:	bnd jno 0x434e40
  434ebf:	pop    ebp
  434ec0:	leave  
  434ec1:	jg     0x434f05
  434ec3:	pop    es
  434ec4:	xchg   esp,eax
  434ec5:	(bad)  
  434ec6:	inc    esi
  434ec7:	clc    
  434ec8:	cwde   
  434ec9:	xchg   edi,eax
  434eca:	std    
  434ecb:	call   DWORD PTR [ecx]
  434ecd:	jecxz  0x434f05
  434ecf:	or     al,0xfd
  434ed1:	xor    DWORD PTR [eax+eax*1],eax
  434ed4:	xchg   esp,eax
  434ed5:	(bad)  
  434ed6:	inc    esi
  434ed7:	clc    
  434ed8:	xchg   edi,eax
  434ed9:	xchg   edi,eax
  434eda:	std    
  434edb:	call   DWORD PTR [ecx]
  434edd:	(bad)  
  434edf:	xchg   DWORD PTR [ecx-0x64],ebp
  434ee2:	std    
  434ee3:	call   DWORD PTR [edi]
  434ee5:	(bad)  
  434ee6:	add    eax,0xad8d1d41
  434eeb:	xchg   DWORD PTR [ecx+0x3ff690f],ecx
  434ef1:	cwde   
  434ef2:	std    
  434ef3:	test   bl,bh
  434ef5:	and    ch,BYTE PTR [edi]
  434ef7:	lock mov ds:0x6184ecee,eax
  434efd:	ret    
  434efe:	add    cl,ch
  434f00:	or     eax,0x5987a84d
  434f05:	ret    
  434f06:	jl     0x434f5b
  434f08:	rcl    BYTE PTR [edx],1
  434f0a:	sar    DWORD PTR [ebx-0x64],cl
  434f0d:	add    dh,BYTE PTR [ebp+0x16f1809]
  434f13:	add    BYTE PTR [edx+esi*4+0x44a3f858],dl
  434f1a:	push   0x80979400
  434f1f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  434f20:	add    BYTE PTR [eax-0x69],bh
  434f23:	std    
  434f24:	call   DWORD PTR [esi+ebx*4-0xabb438a]
  434f2b:	stc    
  434f2c:	dec    DWORD PTR [ebx-0x55438ace]
  434f32:	xchg   edi,eax
  434f33:	std    
  434f34:	mov    ch,0xa4
  434f36:	xchg   edi,eax
  434f37:	std    
  434f38:	(bad)  
  434f39:	mov    edi,0xeac5ea8e
  434f3e:	add    ah,al
  434f40:	add    ah,BYTE PTR ds:0x922f976c
  434f46:	add    bh,ah
  434f48:	sub    DWORD PTR [ecx],ebx
  434f4a:	into   
  434f4b:	rcl    esi,0x6a
  434f4e:	jns    0x434eff
  434f50:	sti    
  434f51:	mov    ch,0xf7
  434f53:	push   esi
  434f54:	imul   esp,DWORD PTR [esi-0x19fd1900],0xffffff87
  434f5b:	outs   dx,DWORD PTR ds:[esi]
  434f5c:	sbb    DWORD PTR [eax+eax*1+0x7888536e],edx
  434f63:	sti    
  434f64:	adc    al,0x1d
  434f66:	inc    eax
  434f67:	sti    
  434f68:	add    al,BYTE PTR [esi-0x78]
  434f6b:	push   eax
  434f6c:	sbb    DWORD PTR [eax+eax*1+0x79a83b6e],edx
  434f73:	xchg   edi,eax
  434f74:	sti    
  434f75:	adc    eax,DWORD PTR [eax+ebx*8]
  434f78:	jle    0x434f7e
  434f7a:	rol    DWORD PTR fs:[ebx],1
  434f7d:	xchg   esp,eax
  434f7e:	outs   dx,DWORD PTR ds:[esi]
  434f7f:	imul   DWORD PTR [ebx+eiz*8-0x5c]
  434f83:	out    0x3,eax
  434f85:	add    bl,bl
  434f87:	dec    esp
  434f88:	sti    
  434f89:	fstp   st(1)
  434f8b:	sbb    eax,0x341fa2b6
  434f90:	std    
  434f91:	mov    bl,0x36
  434f93:	ja     0x43500c
  434f95:	ins    BYTE PTR es:[edi],dx
  434f96:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  434f97:	add    bh,ah
  434f99:	jl     0x434fc2
  434f9b:	pushf  
  434f9c:	mov    esi,0x7b793618
  434fa1:	je     0x434fc3
  434fa3:	cli    
  434fa4:	out    0x3,al
  434fa6:	rol    DWORD PTR ss:[ebp+0x4f909b2a],1
  434fad:	sbb    dl,BYTE PTR [eax+eax*1+0x45bbc0e6]
  434fb4:	jnp    0x435031
  434fb6:	or     al,0x65
  434fb8:	add    bh,bl
  434fba:	xchg   edi,eax
  434fbb:	add    BYTE PTR [ecx],cl
  434fbd:	fs mov ebp,0xff66f9a9
  434fc3:	repz add ebp,ecx
  434fc6:	xchg   edi,eax
  434fc7:	jg     0x434fbb
  434fc9:	out    0x1b,al
  434fcb:	mov    esi,0xed97e8ff
  434fd0:	jb     0x435027
  434fd2:	xchg   ebp,eax
  434fd3:	jl     0x434f7b
  434fd5:	jmp    0x7e4c5071
  434fda:	adc    al,0x71
  434fdc:	jp     0x434fc1
  434fde:	xchg   edi,eax
  434fdf:	add    BYTE PTR [ecx+0x97f9],bh
  434fe5:	shr    dh,cl
  434fe7:	jnp    0x435034
  434fe9:	adc    DWORD PTR [eax],eax
  434feb:	xchg   ecx,eax
  434fec:	js     0x434faa
  434fee:	not    DWORD PTR [edi-0x39c9cb00]
  434ff4:	sbb    BYTE PTR [ecx],cl
  434ff6:	ss sbb al,0x71
  434ff9:	jl     0x434fde
  434ffb:	xchg   edi,eax
  434ffc:	add    BYTE PTR [edi-0x32e0f46c],al
  435002:	retf   
  435003:	pusha  
  435004:	cmp    BYTE PTR [eax],cl
  435006:	jo     0x43505a
  435008:	pushf  
  435009:	(bad)  
  43500a:	loopne 0x435033
  43500c:	imul   edx,DWORD PTR [edx],0x507d97e9
  435012:	fld    QWORD PTR [ecx-0x80]
  435015:	mov    eax,0x880097d7
  43501a:	in     eax,dx
  43501b:	xchg   BYTE PTR [ebp+0x43],bh
  43501e:	lds    edx,FWORD PTR [esi+0x6f721448]
  435024:	or     al,0x85
  435026:	xor    DWORD PTR [eax-0x52af6f83],ebx
  43502c:	add    BYTE PTR [eax],al
  43502e:	popa   
  43502f:	mov    ds:0xdd0084f9,eax
  435034:	adc    ecx,DWORD PTR [esi]
  435036:	add    BYTE PTR [ebp+0x24],ch
  435039:	jne    0x435027
  43503b:	jl     0x435074
  43503d:	adc    al,0xb1
  43503f:	dec    ebp
  435040:	(bad)
  435043:	sahf   
  435044:	pusha  
  435045:	or     DWORD PTR [ebp-0xb],0x22
  435049:	push   esp
  43504a:	or     ch,ch
  43504c:	es nop
  43504e:	mov    esp,0xffff4300
  435053:	mov    ah,BYTE PTR [eax]
  435055:	push   ebx
  435056:	pop    esi
  435057:	mov    DWORD PTR ds:0x3d000e17,edx
  43505d:	test   BYTE PTR [ecx],bl
  43505f:	data16 mov dh,0x13
  435062:	mov    al,0x7c
  435064:	daa    
  435065:	(bad)  
  435066:	jmp    DWORD PTR [ebp+0x5e]
  435069:	pop    eax
  43506a:	or     DWORD PTR [eax+0x969],0x13
  435071:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  435072:	mov    cl,0xb8
  435074:	jecxz  0x435074
  435076:	inc    DWORD PTR [edx]
  435078:	sub    BYTE PTR [edi-0x7f],dl
  43507b:	mov    BYTE PTR [ecx-0x29fffff7],ch
  435081:	retf   
  435082:	adc    DWORD PTR [ebp-0x7],0xfb88b0a2
  435089:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43508a:	stc    
  43508b:	jmp    FWORD PTR [edx]
  43508d:	or     al,0x0
  43508f:	add    BYTE PTR [ebp-0x77760d3b],bh
  435095:	push   esp
  435096:	or     DWORD PTR [eax+0xa39],0xffffffa6
  43509d:	popa   
  43509e:	jbe    0x435107
  4350a0:	retf   0x9029
  4350a3:	mov    esp,0x88fffea7
  4350a8:	pusha  
  4350a9:	pusha  
  4350aa:	pop    esi
  4350ab:	rcl    DWORD PTR [ebp+esi*2+0x209c4875],cl
  4350b2:	inc    edi
  4350b3:	in     al,0x0
  4350b5:	cli    
  4350b6:	mov    al,0x8d
  4350b8:	mov    eax,0x84fd97a2
  4350bd:	(bad)
  4350c1:	sub    al,0xca
  4350c3:	std    
  4350c4:	dec    DWORD PTR [esp+edx*4]
  4350c7:	adc    al,0x85
  4350c9:	sar    DWORD PTR [ebx],1
  4350cb:	add    ebx,DWORD PTR [eax-0x58]
  4350ce:	push   ds
  4350cf:	sub    al,0x14
  4350d1:	pop    ds
  4350d2:	pusha  
  4350d3:	cmc    
  4350d4:	test   DWORD PTR [ecx+eax*4],esp
  4350d7:	adc    al,BYTE PTR [eax]
  4350d9:	xchg   esp,eax
  4350da:	das    
  4350db:	sbb    BYTE PTR [ecx],cl
  4350dd:	pop    ds
  4350de:	dec    eax
  4350df:	jo     0x4350f3
  4350e1:	xchg   esp,eax
  4350e2:	xchg   edi,eax
  4350e3:	jbe    0x435160
  4350e5:	xor    BYTE PTR [ecx-0x581aebbb],bl
  4350eb:	xlat   BYTE PTR ds:[ebx]
  4350ec:	lds    edi,FWORD PTR [edx-0x1a]
  4350ef:	cwde   
  4350f0:	test   DWORD PTR [ecx+0xf],ebx
  4350f3:	jg     0x435149
  4350f5:	mov    fs,WORD PTR [edi-0x35c76f84]
  4350fb:	std    
  4350fc:	call   FWORD PTR [edi]
  4350fe:	test   DWORD PTR [ecx+0x6bf01d62],ebp
  435104:	adc    dl,BYTE PTR [edi+edx*4+0x2e721696]
  43510b:	gs mov esp,0x61fd979e
  435111:	out    0xba,eax
  435113:	and    eax,DWORD PTR [edi]
  435115:	cld    
  435116:	jg     0x43512b
  435118:	add    BYTE PTR [eax],al
  43511a:	xchg   esp,eax
  43511b:	xchg   esi,eax
  43511c:	inc    eax
  43511d:	clc    
  43511e:	sbb    eax,0x94126920
  435123:	xchg   edi,eax
  435124:	jbe    0x4350ae
  435126:	loopne 0x435128
  435128:	stc    
  435129:	add    edx,DWORD PTR [ebp+edi*2-0x57ee4f5b]
  435130:	loope  0x43515f
  435132:	call   0xf6e385ae
  435137:	int    0x85
  435139:	jp     0x435107
  43513b:	clc    
  43513c:	outs   dx,DWORD PTR ds:[esi]
  43513d:	dec    eax
  43513e:	js     0x43515a
  435140:	loopne 0x4350d5
  435142:	sub    al,0xa
  435144:	out    0x3,eax
  435146:	sbb    DWORD PTR [eax-0x5],edx
  435149:	jns    0x43515f
  43514b:	push   0x789403f1
  435150:	jmp    0x435166
  435152:	adc    DWORD PTR [ebx],edi
  435154:	inc    ebx
  435155:	add    al,0xdc
  435157:	or     al,0x6e
  435159:	sub    esp,DWORD PTR [eax-0x7993a88a]
  43515f:	add    bh,ah
  435161:	jp     0x43513f
  435163:	clc    
  435164:	pop    esi
  435165:	pop    ss
  435166:	lea    esi,[ebp+0x77]
  435169:	outs   dx,DWORD PTR ds:[esi]
  43516a:	xchg   BYTE PTR [eax],al
  43516c:	out    0x7a,eax
  43516e:	(bad)  
  43516f:	xchg   esp,eax
  435170:	call   0xf7b2f1c0
  435175:	(bad)  
  435177:	sbb    DWORD PTR [esi],edx
  435179:	sahf   
  43517a:	jns    0x43513a
  43517c:	cmc    
  43517d:	jnp    0x43517f
  43517f:	add    al,0x64
  435181:	fld    DWORD PTR [ebx]
  435183:	xchg   esp,eax
  435184:	sbb    ah,BYTE PTR [eax+0x6b]
  435187:	sbb    al,0xa
  435189:	out    0x3,eax
  43518b:	repz dec edi
  43518d:	in     eax,0x3
  43518f:	xchg   esp,eax
  435190:	sbb    dh,BYTE PTR [esi+0x76f736a2]
  435196:	ins    BYTE PTR es:[edi],dx
  435197:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  435198:	add    bh,ah
  43519a:	cmp    bl,0xfd
  43519d:	iret   
  43519e:	in     al,dx
  43519f:	mov    cl,0xa0
  4351a1:	add    cl,ch
  4351a3:	cmp    BYTE PTR [eax],dl
  4351a5:	add    cl,ch
  4351a7:	xchg   edi,eax
  4351a8:	and    esi,esi
  4351aa:	repz cwde 
  4351ac:	ja     0x4351c5
  4351ae:	call   0x5e4c524a
  4351b3:	or     BYTE PTR [edi+0x6],bl
  4351b6:	jmp    0x713a3752
  4351bb:	mov    ebx,0xe4718598
  4351c0:	repnz (bad) 
  4351c2:	call   0x6be1b43
  4351c7:	popa   
  4351c8:	push   ecx
  4351c9:	nop
  4351ca:	sub    DWORD PTR [esi-0x60],ebx
  4351cd:	stc    
  4351ce:	jo     0x4351bb
  4351d0:	lods   al,BYTE PTR ds:[esi]
  4351d1:	bound  edi,QWORD PTR [edx]
  4351d3:	test   BYTE PTR [ebp+0x43bee148],0xe4
  4351da:	iret   
  4351db:	ds nop
  4351dd:	mov    eax,0x850097d7
  4351e2:	cdq    
  4351e3:	add    BYTE PTR [ebx-0x758e7f7a],al
  4351e9:	add    BYTE PTR [eax],al
  4351eb:	jno    0x435179
  4351ed:	jne    0x51e38d97
  4351f3:	std    
  4351f4:	mov    WORD PTR [eax],ds
  4351f6:	adc    al,0x62
  4351f8:	ror    BYTE PTR [eax],0x86
  4351fb:	pop    ecx
  4351fc:	outs   dx,DWORD PTR ds:[esi]
  4351fd:	repnz (bad) 
  4351ff:	call   0x624c4673
  435204:	add    BYTE PTR [ebp+0x12],bl
  435207:	jmp    0xd5bed7a3
  43520c:	xchg   esi,eax
  43520d:	cmp    BYTE PTR [eax+ebx*4],dl
  435210:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  435211:	out    0xc5,al
  435213:	dec    edi
  435214:	in     eax,0xa9
  435216:	test   DWORD PTR [eax+esi*8],ebx
  435219:	mov    edx,DWORD PTR [eax+eax*1-0x39]
  43521d:	push   ebx
  43521e:	adc    DWORD PTR [eax-0xacf],0x66fc3636
  435228:	xor    al,0x2b
  43522a:	mov    eax,0xe303ad16
  43522f:	and    BYTE PTR [ebx+0x77c0b819],bl
  435235:	add    eax,DWORD PTR [eax]
  435237:	ds or  WORD PTR fs:[eax-0xa2f],0xff9b
  435241:	fwait
  435242:	mov    cl,0xb8
  435244:	dec    ebx
  435245:	add    eax,DWORD PTR [eax]
  435247:	add    eax,DWORD PTR [eax]
  435249:	sub    BYTE PTR [ecx+eax*4-0x78],0x31
  43524e:	cmc    
  43524f:	(bad)  
  435250:	inc    esi
  435252:	sbb    edi,DWORD PTR [esi+edx*1-0x3d84fcc3]
  435259:	rol    BYTE PTR [eax+0x4f530df1],1
  43525f:	adc    DWORD PTR [ebp-0x1f],0xb6e2cae5
  435266:	fild   DWORD PTR [edi]
  435268:	mov    eax,edi
  43526a:	pop    si
  43526c:	or     DWORD PTR [ebp-0x2fff1d5],ebx
  435272:	pop    ss
  435273:	push   eax
  435274:	adc    al,0x77
  435276:	cmp    DWORD PTR [eax-0x77fd12ea],0x4
  43527d:	fcom   QWORD PTR [edi]
  43527f:	cmp    eax,0x144afce4
  435284:	mov    esp,DWORD PTR [ebp-0x9]
  435287:	adc    DWORD PTR [eax-0xa5c],0x8807dc66
  435291:	leave  
  435292:	cdq    
  435293:	test   BYTE PTR [eax+0xe7594],dl
  435299:	xchg   esp,eax
  43529a:	and    ah,BYTE PTR [edi]
  43529c:	in     al,dx
  43529d:	xchg   ebp,eax
  43529e:	loope  0x4352af
  4352a0:	scas   eax,DWORD PTR es:[edi]
  4352a1:	test   bl,dh
  4352a3:	mov    ecx,0x81c5c762
  4352a8:	mov    esi,0xbc941fa7
  4352ad:	add    BYTE PTR [edx+0x1d61fda9],al
  4352b3:	and    BYTE PTR [edx+edx*1-0x6c],ch
  4352b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4352b8:	pushf  
  4352b9:	daa    
  4352ba:	xchg   ebp,eax
  4352bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4352bc:	std    
  4352bd:	popa   
  4352be:	mov    bl,BYTE PTR ds:0x407
  4352c3:	inc    eax
  4352c4:	push   cs
  4352c5:	add    BYTE PTR [edx+ebp*1-0x4693023d],dl
  4352cc:	add    al,0x0
  4352ce:	xchg   esp,eax
  4352cf:	xchg   esi,eax
  4352d0:	outs   dx,BYTE PTR ds:[esi]
  4352d1:	mov    BYTE PTR [edx-0x6e],bl
  4352d4:	std    
  4352d5:	(bad)  
  4352d6:	jg     0x435308
  4352d8:	jnp    0x435325
  4352da:	cmp    al,0x23
  4352dc:	jl     0x43529a
  4352de:	mov    ds:0x6334fda7,al
  4352e3:	pop    esi
  4352e4:	push   ds
  4352e5:	or     ebx,esp
  4352e7:	aaa    
  4352e8:	rol    BYTE PTR [esi],0x94
  4352eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4352ec:	jl     0x435341
  4352ee:	sub    BYTE PTR [esi+0x501fded2],cl
  4352f4:	cmc    
  4352f5:	xchg   BYTE PTR [ecx+0xb],dl
  4352f8:	push   ds
  4352f9:	pop    es
  4352fa:	and    al,0x30
  4352fc:	push   cs
  4352fd:	add    BYTE PTR [edx+edx*1+0x281e1454],dl
  435304:	ins    BYTE PTR es:[edi],dx
  435305:	adc    dl,BYTE PTR [edi+eiz*4+0x22850475]
  43530c:	aas    
  43530d:	in     al,0x95
  43530f:	add    BYTE PTR [edi],bh
  435311:	adc    BYTE PTR [eax],al
  435313:	sbb    DWORD PTR [ecx],ebx
  435315:	repz jle 0x435374
  435318:	or     BYTE PTR [ebp-0x6d],bl
  43531b:	or     esi,edi
  43531d:	out    0x3,al
  43531f:	or     al,0xf5
  435321:	icebp  
  435322:	jle    0x435328
  435324:	pop    ebp
  435325:	rol    DWORD PTR [ebx],1
  435327:	xchg   esp,eax
  435328:	mov    DWORD PTR [eax+ebx*4],esi
  43532b:	mov    ds:0x8474d335,eax
  435330:	jmp    0x386e:0xad6121ac
  435337:	mov    WORD PTR [ebx-0x788c01c5],cs
  43533d:	ja     0x4353a6
  43533f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  435340:	add    bh,ah
  435342:	jle    0x43530b
  435344:	pushf  
  435345:	add    DWORD PTR [ebp+0x2c],edi
  435348:	pop    eax
  435349:	fld    DWORD PTR [ebx]
  43534b:	xchg   esp,eax
  43534c:	test   eax,0x581121c7
  435351:	sub    edi,ebp
  435353:	push   ebx
  435354:	popf   
  435355:	rcl    esi,0x35
  435358:	mov    DWORD PTR [edi+0x67],ebx
  43535b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43535c:	add    bh,ah
  43535e:	and    DWORD PTR [ebx-0x6bee80a8],edx
  435364:	add    dh,ah
  435366:	cmp    BYTE PTR [edi+eax*4],ch
  435369:	pop    edi
  43536a:	xchg   BYTE PTR [bx+si],al
  43536d:	out    0x7e,eax
  43536f:	or     al,0x5c
  435371:	stc    
  435372:	add    edx,DWORD PTR [ecx+eax*4-0x76ff4fdb]
  435379:	xchg   edi,eax
  43537a:	loopne 0x4353a5
  43537c:	imul   eax,DWORD PTR [edi-0x4e89684c],0x5
  435383:	jle    0x4353e1
  435385:	or     BYTE PTR [eax+0x40],dh
  435388:	lock and eax,0x5807e000
  43538e:	adc    ch,cl
  435390:	xchg   edi,eax
  435391:	adc    DWORD PTR [eax-0x3],0x51
  435395:	cmp    BYTE PTR [eax-0x77ff6809],0xed
  43539c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43539d:	add    DWORD PTR [ebx-0x3b],0xffffff97
  4353a1:	cmp    BYTE PTR [edx+esi*2],dl
  4353a4:	xor    ah,0x85
  4353a7:	pop    ecx
  4353a8:	aas    
  4353a9:	repnz (bad) 
  4353ab:	call   0x614b9bd0
  4353b0:	test   BYTE PTR [edi],al
  4353b2:	test   DWORD PTR [ecx-0x4],edi
  4353b5:	out    dx,al
  4353b6:	(bad)  
  4353b7:	call   0xe92f6bc4
  4353bc:	iret   
  4353bd:	hlt    
  4353be:	scas   al,BYTE PTR es:[edi]
  4353bf:	stc    
  4353c0:	pop    ecx
  4353c1:	(bad)  
  4353c2:	bound  ebx,QWORD PTR [edx+0x76be1e0d]
  4353c8:	out    dx,eax
  4353c9:	jo     0x435387
  4353cb:	fist   WORD PTR [edi-0x179f9e00]
  4353d1:	pop    eax
  4353d2:	adc    ch,cl
  4353d4:	xchg   edi,eax
  4353d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4353d6:	or     eax,0x62bb60c7
  4353db:	loopne 0x4353dd
  4353dd:	daa    
  4353de:	pop    ecx
  4353df:	adc    ch,cl
  4353e1:	xchg   edi,eax
  4353e2:	sbb    eax,0x88aeeebf
  4353e7:	mov    esp,0x850097d7
  4353ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4353ed:	repz in eax,dx
  4353ef:	int    0x60
  4353f1:	imul   ebp,DWORD PTR [ebx+eax*4-0x48f93cd0],0x73
  4353f9:	nop
  4353fa:	add    BYTE PTR [eax],al
  4353fc:	cs ret 
  4353fe:	cwde   
  4353ff:	std    
  435400:	call   0x128549c
  435405:	sti    
  435406:	lods   al,BYTE PTR ds:[esi]
  435407:	jmp    0xedff:0xfe26fb75
  43540e:	(bad)  
  43540f:	mov    esi,0x4e545
  435414:	add    BYTE PTR [ebp-0x4d46f384],bh
  43541a:	(bad)  
  43541b:	(bad)  
  43541c:	push   edx
  43541e:	(bad)  
  435420:	add    al,0xad
  435422:	(bad)  
  435423:	inc    DWORD PTR [edx+0x29045480]
  435429:	mov    BYTE PTR [edi+eax*1-0x7b],bh
  43542d:	or     DWORD PTR [esi-0x9],ebp
  435430:	dec    DWORD PTR [edx+0x208b5346]
  435436:	inc    edx
  435437:	mov    ebx,0xcc5339cc
  43543c:	int3   
  43543d:	rcr    BYTE PTR ds:0xf60051ec,0xda
  435444:	pop    es
  435445:	mov    ebp,ebx
  435447:	and    ecx,DWORD PTR [esi]
  435449:	add    BYTE PTR [ebp+0x34],bh
  43544c:	std    
  43544d:	(bad)  
  43544e:	jmp    0x4354b8
  435450:	not    DWORD PTR [edi-0x5a]
  435453:	(bad)  
  435454:	(bad)  
  435455:	(bad)  
  435456:	cmp    eax,0x6b0bf184
  43545b:	xor    DWORD PTR [esi-0x75],ebx
  43545e:	jge    0x435441
  435460:	retf   0xb6e2
  435463:	fst    DWORD PTR [ebx]
  435465:	mov    DWORD PTR [eax],eax
  435467:	arpl   WORD PTR [esi+0x9],bx
  43546a:	ret    
  43546b:	daa    
  43546c:	push   cs
  43546d:	add    BYTE PTR ds:0xb7084e1c,ch
  435473:	cmp    DWORD PTR [eax-0x780102ea],0x55fe0c04
  43547d:	adc    al,0x94
  43547f:	pop    ds
  435480:	(bad)  
  435481:	mov    bh,0xa2
  435483:	test   eax,0xbd7284fd
  435488:	jl     0x4354d4
  43548a:	pushf  
  43548b:	push   cs
  43548c:	cmp    bh,ah
  43548e:	or     al,0xbd
  435490:	clc    
  435491:	test   BYTE PTR [edx],al
  435493:	in     eax,dx
  435494:	push   cs
  435495:	add    BYTE PTR [eax+ebp*4-0x66faebbd],dl
  43549c:	xlat   BYTE PTR ds:[ebx]
  43549d:	lds    edi,FWORD PTR [edx]
  43549f:	push   esi
  4354a0:	pushf  
  4354a1:	jge    0x435479
  4354a3:	mov    bl,0x7b
  4354a5:	xchg   edx,eax
  4354a6:	add    al,dh
  4354a8:	mov    edx,0x1032fffd
  4354ad:	jp     0x435467
  4354af:	mov    ch,BYTE PTR [ecx+0x4387e4fd]
  4354b5:	int    0xe0
  4354b7:	cli    
  4354b8:	nop
  4354b9:	jnp    0x435473
  4354bb:	mov    ds:0x557cfda7,al
  4354c0:	lods   eax,DWORD PTR ds:[esi]
  4354c1:	jl     0x43544d
  4354c3:	cmp    BYTE PTR [edx-0x12e00003],dl
  4354c9:	test   DWORD PTR [edx+ebx*1-0x6bfff624],0x8ff77cdf
  4354d4:	test   eax,0xd81f624b
  4354d9:	sbb    ebp,ecx
  4354db:	ss rdmsr 
  4354de:	adc    al,0xd
  4354e0:	ins    DWORD PTR es:[edi],dx
  4354e1:	mov    eax,ds:0x6c118d62
  4354e6:	adc    dl,BYTE PTR [edi+eiz*4+0xd9c5276]
  4354ed:	jp     0x4354a7
  4354ef:	mov    ah,BYTE PTR [edi-0x476f7803]
  4354f5:	add    al,0x5a
  4354f7:	test   al,0x0
  4354f9:	ins    DWORD PTR es:[edi],dx
  4354fa:	mov    es,WORD PTR [ebx-0xd]
  4354fd:	out    0x3,al
  4354ff:	sbb    DWORD PTR [ebx],ebx
  435501:	sti    
  435502:	jp     0x435552
  435504:	or     BYTE PTR [esi+0x41],bl
  435507:	lock mov bl,bl
  43550a:	test   BYTE PTR [eax],0x10
  43550d:	jae    0x43554a
  43550f:	push   cs
  435510:	xchg   esp,eax
  435511:	add    al,ch
  435513:	inc    ebp
  435514:	or     BYTE PTR [edi-0x29],0xd9
  435518:	fldenv [edx]
  43551a:	mov    dh,0x9b
  43551c:	dec    ecx
  43551d:	mov    esi,0x5d267cd4
  435522:	stc    
  435523:	add    edx,DWORD PTR [edx+eiz*1-0xd1382a0]
  43552a:	out    0x3,al
  43552c:	mov    cl,0xed
  43552e:	inc    eax
  43552f:	shl    DWORD PTR [edx+eiz*1-0xd238220],cl
  435536:	out    0x3,al
  435538:	adc    eax,eax
  43553a:	in     al,dx
  43553b:	jl     0x43555b
  43553d:	pop    esp
  43553e:	icebp  
  43553f:	add    edx,DWORD PTR [ebp+eax*4-0x75eeebd4]
  435546:	dec    ebx
  435547:	or     eax,0xc3660094
  43554c:	push   0xddf7807d
  435551:	xor    cl,BYTE PTR [ecx]
  435553:	jnp    0x435599
  435555:	and    dl,BYTE PTR [esi-0x4b5e65f]
  43555b:	jl     0x435534
  43555d:	pushf  
  43555e:	sar    esp,0x25
  435561:	pop    eax
  435562:	stc    
  435563:	add    edx,DWORD PTR [ebp+eax*4-0x7de6044f]
  43556a:	jg     0x435579
  43556c:	xchg   esp,eax
  43556d:	add    BYTE PTR [edi-0x1],ch
  435570:	add    BYTE PTR [edx-0x74690001],dl
  435576:	adc    BYTE PTR [edx+0xa170],0x72
  43557d:	mov    cl,0xf4
  43557f:	test   BYTE PTR [edi+0x154383ff],ch
  435585:	jg     0x43557b
  435587:	or     BYTE PTR [edx+0x21],ah
  43558a:	pop    esp
  43558b:	adc    ch,cl
  43558d:	xchg   edi,eax
  43558e:	cdq    
  43558f:	pop    ebx
  435590:	aad    0x68
  435592:	lock and eax,0xe8cb7923
  435598:	push   0xffffffd5
  43559a:	xchg   ebx,eax
  43559b:	xchg   DWORD PTR [edi+0x3c],edi
  43559e:	out    dx,al
  43559f:	(bad)  
  4355a0:	call   0x91c5d746
  4355a5:	mov    al,BYTE PTR [eax]
  4355a7:	add    dl,al
  4355a9:	test   DWORD PTR [esi],ebx
  4355ab:	int    0xc9
  4355ad:	mov    al,BYTE PTR [ecx]
  4355af:	add    BYTE PTR [ecx+0x6a000092],0xd7
  4355b6:	add    eax,DWORD PTR [edi-0xd03a1]
  4355bc:	call   0x1c7aef45
  4355c1:	test   al,0x9
  4355c3:	mov    dh,BYTE PTR [edi-0x70]
  4355c6:	add    BYTE PTR [eax],al
  4355c8:	(bad)  
  4355c9:	jmp    0xf715:0x97e91254
  4355d0:	in     al,dx
  4355d1:	mov    ecx,0x3f0922
  4355d6:	or     DWORD PTR [ebp+0x3d],esp
  4355d9:	sub    DWORD PTR [eax+0x1a6db109],ebx
  4355df:	sbb    eax,DWORD PTR [esi]
  4355e1:	jmp    0x39c8787d
  4355e6:	call   0x61ec:0x6a62dec5
  4355ed:	add    BYTE PTR [esi+eax*4],ah
  4355f0:	mov    eax,0x7042d16
  4355f5:	mov    dh,0xc3
  4355f7:	and    al,0xe
  4355f9:	add    ch,bh
  4355fb:	sbb    BYTE PTR [esi+0x8],cl
  4355fe:	test   DWORD PTR [eax],ecx
  435600:	or     edi,edi
  435602:	cmp    ecx,DWORD PTR [eax]
  435604:	pop    es
  435605:	mov    dh,0x83
  435607:	sub    ecx,DWORD PTR [esi]
  435609:	add    ch,bh
  43560b:	sbb    BYTE PTR [esi+0x14],al
  43560e:	inc    si
  435610:	or     BYTE PTR [eax-0x697d0d3f],cl
  435616:	mov    eax,ds:0x8c000006
  43561b:	in     al,dx
  43561c:	and    edx,ecx
  43561e:	pop    ebx
  43561f:	mov    cl,0xe8
  435621:	mov    ebx,0x3ac
  435626:	lods   al,BYTE PTR ds:[esi]
  435627:	cmp    eax,0x50ff8314
  43562c:	pop    esi
  43562d:	mov    DWORD PTR [ebx],edi
  43562f:	sub    ecx,DWORD PTR [esi]
  435631:	add    BYTE PTR [ebp-0x444371e6],ch
  435637:	add    eax,DWORD PTR [eax]
  435639:	jmp    0x43563b
  43563b:	lahf   
  43563c:	lea    ebp,[edi+0x4040e187]
  435642:	add    BYTE PTR [ebx-0x5c796be7],bl
  435648:	call   0x66da:0xb19bfff9
  43564f:	test   DWORD PTR fs:[eax+0x7b036d16],edi
  435656:	shr    DWORD PTR [esi+0x1a],0x86
  43565a:	mov    esp,0x300036b
  43565f:	mov    dh,0xa8
  435661:	jbe    0x435673
  435663:	xor    cl,BYTE PTR [edi]
  435665:	pop    edx
  435666:	call   DWORD PTR [esi+ebp*1-0x5e1e7a5c]
  43566d:	mov    eax,DWORD PTR ss:[edx]
  435670:	xor    eax,0x1294fffd
  435675:	mov    ebx,0xa3d1c9e8
  43567a:	stc    
  43567b:	pop    ds
  43567c:	je     0x43566f
  43567e:	inc    esi
  43567f:	sbb    DWORD PTR [edi],edx
  435681:	jne    0x43568a
  435683:	xchg   esp,eax
  435684:	test   eax,0xacecc278
  435689:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43568a:	stc    
  43568b:	repz gs dec eax
  43568e:	test   ecx,esi
  435690:	pop    ebx
  435691:	ror    ah,0xd0
  435694:	in     al,0xb0
  435696:	int3   
  435697:	enter  0x7873,0xec
  43569b:	pop    ss
  43569c:	xchg   ebp,eax
  43569d:	push   cs
  43569e:	dec    ebp
  43569f:	add    BYTE PTR [edi],bl
  4356a1:	cmp    al,0xc
  4356a3:	sub    eax,0x3734cee6
  4356a8:	and    al,0x89
  4356aa:	idiv   bh
  4356ac:	mov    bl,0xb5
  4356ae:	xor    DWORD PTR [edi],0xe4fda997
  4356b4:	fwait
  4356b5:	and    al,0x28
  4356b7:	and    al,0x94
  4356b9:	and    dh,BYTE PTR [edi]
  4356bb:	hlt    
  4356bc:	pop    ds
  4356bd:	and    BYTE PTR [eax+0x12],ch
  4356c0:	xchg   esp,eax
  4356c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4356c2:	push   cs
  4356c3:	mov    cl,0x90
  4356c5:	fmul   DWORD PTR [eax-0x269e350]
  4356cb:	jmp    DWORD PTR [ebx-0x29d227d3]
  4356d1:	adc    BYTE PTR [edi-0x4],cl
  4356d4:	sbb    DWORD PTR [ecx-0x77],edx
  4356d7:	mov    BYTE PTR [eax],bl
  4356d9:	mov    dh,0xfd
  4356db:	call   FWORD PTR ds:0x110997ed
  4356e1:	add    DWORD PTR [eax+0x4],esi
  4356e4:	xchg   esp,eax
  4356e5:	add    dl,ch
  4356e7:	pop    edx
  4356e8:	loopne 0x43573b
  4356ea:	in     eax,0x62
  4356ec:	test   BYTE PTR [eax],al
  4356ee:	out    0x3,eax
  4356f0:	jno    0x43568c
  4356f2:	jo     0x43572d
  4356f4:	sbb    al,0xda
  4356f6:	sub    DWORD PTR [edx],esp
  4356f8:	mov    ebx,0x40d87a05
  4356fd:	pop    ds
  4356fe:	pop    esi
  4356ff:	mov    edx,0x8f05b176
  435704:	add    BYTE PTR [eax+ecx*1+0x70],cl
  435708:	inc    ecx
  435709:	clc    
  43570a:	push   ds
  43570b:	loopne 0x435780
  43570d:	sub    al,0xef
  43570f:	out    0x3,al
  435711:	adc    DWORD PTR [ecx],esi
  435713:	fisttp DWORD PTR [ebp+0x3d158fc]
  435719:	xchg   esp,eax
  43571a:	mov    bl,dl
  43571c:	hlt    
  43571d:	int3   
  43571e:	inc    eax
  43571f:	ror    DWORD PTR [esi+0x736d085c],cl
  435725:	or     ebp,edi
  435727:	out    0x3,al
  435729:	adc    DWORD PTR [ecx],ebx
  43572b:	sti    
  43572c:	mov    cs,WORD PTR [edi-0x6c]
  43572f:	pop    edi
  435730:	neg    DWORD PTR [ecx+ecx*4+0x865f57]
  435737:	out    0xa2,eax
  435739:	push   esp
  43573a:	in     al,dx
  43573b:	ja     0x435730
  43573d:	mov    ecx,0x7eb741ca
  435742:	mov    DWORD PTR [esp+ebx*4],esi
  435745:	cvttps2pi mm5,xmm5
  435748:	xchg   ebx,eax
  435749:	adc    esi,DWORD PTR [eax+0x53]
  43574c:	stc    
  43574d:	jae    0x4356e4
  43574f:	add    DWORD PTR [ebp+0x3d95824],ecx
  435755:	xchg   esp,eax
  435756:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  435757:	arpl   WORD PTR ds:0xf000094,ax
  43575d:	and    ecx,esp
  43575f:	lods   al,BYTE PTR ds:[esi]
  435760:	pop    es
  435761:	add    esp,DWORD PTR [edx+0x58e7f062]
  435767:	adc    ch,cl
  435769:	add    BYTE PTR [edi-0x7fbf386d],dl
  43576f:	xchg   esi,eax
  435770:	stc    
  435771:	jmp    0x69fda9fc
  435776:	rol    BYTE PTR [eax+0x0],cl
  435779:	out    dx,al
  43577a:	mov    esi,0x9befb56c
  43577f:	add    BYTE PTR [eax],al
  435781:	jb     0x43578a
  435783:	xchg   ebp,eax
  435784:	stc    
  435785:	jmp    0xb4cb027c
  43578a:	pop    ds
  43578b:	jnp    0x4357e0
  43578d:	loope  0x435761
  43578f:	mov    ebx,0x4f86887a
  435794:	xchg   esp,eax
  435795:	inc    ebx
  435796:	fwait
  435797:	cld    
  435798:	(bad)  
  435799:	call   0x903388a6
  43579e:	or     dh,BYTE PTR [esi+0x229fa185]
  4357a4:	pop    es
  4357a5:	jns    0x435807
  4357a7:	repnz (bad) 
  4357a9:	call   0x91dbaa52
  4357ae:	scas   al,BYTE PTR es:[edi]
  4357af:	xchg   esp,eax
  4357b0:	stc    
  4357b1:	bound  esp,QWORD PTR [eax-0x14]
  4357b4:	xchg   ebp,esp
  4357b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4357b7:	xchg   edi,eax
  4357b8:	inc    eax
  4357b9:	aad    0x84
  4357bb:	push   edx
  4357bc:	cwde   
  4357bd:	jo     0x43574d
  4357bf:	xchg   esp,eax
  4357c0:	stc    
  4357c1:	(bad)  
  4357c2:	fsubr  st,st(4)
  4357c4:	test   BYTE PTR [ecx],bh
  4357c6:	nop
  4357c7:	mov    BYTE PTR [eax+edi*8],bl
  4357ca:	or     BYTE PTR [ecx-0x44],dh
  4357cd:	inc    DWORD PTR [eax]
  4357cf:	xchg   edi,eax
  4357d0:	add    BYTE PTR [ebp+0x409a002c],al
  4357d6:	add    BYTE PTR [ecx+0x2f],al
  4357d9:	adc    BYTE PTR [edx],ch
  4357db:	daa    
  4357dc:	out    0xca,eax
  4357de:	jmp    0x435796
  4357e0:	inc    ebx
  4357e1:	clc    
  4357e2:	lea    esp,[ecx-0x42760ffe]
  4357e8:	and    BYTE PTR [esi],cl
  4357ea:	add    BYTE PTR ds:0x59880ea,ch
  4357f0:	xchg   edi,eax
  4357f1:	stc    
  4357f2:	call   esi
  4357f4:	xchg   ebp,eax
  4357f5:	pop    edi
  4357f6:	mov    eax,ecx
  4357f8:	xor    al,BYTE PTR [esp+eax*1]
  4357fb:	sub    eax,0x5fd35e00
  435800:	out    0x0,al
  435802:	nop
  435803:	test   DWORD PTR [esi+0x42eefff9],edx
  435809:	clc    
  43580a:	mov    DWORD PTR [ebp-0x2fff1e0],eax
  435810:	test   BYTE PTR [edi*4+0x403cc5],bl
  435817:	retfw  
  435819:	sti    
  43581a:	mov    eax,edi
  43581c:	outs   dx,DWORD PTR ds:[esi]
  43581d:	jge    0x4357fa
  43581f:	push   ecx
  435820:	cmc    
  435821:	and    dh,BYTE PTR [eax+edi*2]
  435824:	jl     0x435872
  435826:	inc    eax
  435827:	lods   eax,DWORD PTR ds:[esi]
  435828:	test   BYTE PTR [eax-0x3c44],cl
  43582e:	mov    esi,0xffffffad
  435833:	add    BYTE PTR [esi+0x5bcf3375],dl
  435839:	int3   
  43583a:	pop    ebp
  43583b:	mov    ebx,ebx
  43583d:	jmp    0x483a400c
  435842:	or     BYTE PTR [esi+0x74],ah
  435845:	aaa    
  435846:	mov    eax,0x6ff6d16
  43584b:	mov    dh,0x15
  43584d:	aaa    
  43584e:	push   cs
  43584f:	add    BYTE PTR [ecx+ebp*4+0x2180788c],dl
  435856:	stc    
  435857:	ss arpl cx,bp
  43585a:	test   DWORD PTR [eax],0x12562122
  435860:	xchg   esp,eax
  435861:	test   eax,0x1e9c488c
  435866:	adc    eax,0xefd0c14
  43586b:	test   DWORD PTR [esi*2+0x2a33fff7],ebx
  435872:	cmp    eax,0xeb98e514
  435877:	les    edi,FWORD PTR [edx-0x367a510a]
  43587d:	(bad)  [ecx+0x26d99f4c]
  435883:	xchg   DWORD PTR [ecx+edx*1-0x9],eax
  435887:	inc    DWORD PTR [ebx]
  435889:	out    dx,al
  43588a:	or     BYTE PTR [edx-0x19],ah
  43588d:	cli    
  43588e:	es pop es
  435890:	and    al,0x31
  435892:	idiv   edi
  435894:	jmp    0x43583b
  435896:	int3   
  435897:	xchg   DWORD PTR [eax],eax
  435899:	or     al,0x3d
  43589b:	idiv   edi
  43589d:	fisttp DWORD PTR [esi-0x7a]
  4358a0:	push   ebx
  4358a1:	shl    BYTE PTR [edi],1
  4358a3:	fwait
  4358a4:	add    BYTE PTR [ebp-0x72930257],dl
  4358aa:	mov    dl,BYTE PTR [ebx-0x52]
  4358ad:	adc    al,0xd0
  4358af:	inc    ebx
  4358b0:	add    BYTE PTR [edi-0x2a397964],bh
  4358b6:	mov    edi,0x17ea0901
  4358bb:	test   BYTE PTR [esi+0x54],al
  4358be:	test   eax,0x9aa04b86
  4358c3:	push   edx
  4358c4:	jl     0x43590b
  4358c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4358c7:	xchg   BYTE PTR [eax+0x3f90140],cl
  4358cd:	xchg   esp,eax
  4358ce:	push   ebp
  4358cf:	test   DWORD PTR [ebx],0xbebe0094
  4358d5:	adc    edx,DWORD PTR [edi+edx*4]
  4358d8:	fistp  DWORD PTR [eax+0x13]
  4358db:	pop    es
  4358dc:	mov    eax,edi
  4358de:	add    al,0xea
  4358e0:	push   esi
  4358e1:	nop
  4358e2:	dec    esi
  4358e3:	or     DWORD PTR [ebx-0x5d69e49b],ecx
  4358e9:	sbb    DWORD PTR [ecx-0x11],ecx
  4358ec:	and    eax,0xf69f7093
  4358f1:	xor    edx,DWORD PTR [edx+0x590c55e2]
  4358f7:	icebp  
  4358f8:	add    edx,DWORD PTR [ebp+eax*4+0x1300f797]
  4358ff:	cmc    
  435900:	xlat   BYTE PTR ds:[ebx]
  435901:	sahf   
  435902:	push   esp
  435903:	in     al,dx
  435904:	pop    ebp
  435905:	dec    esp
  435906:	mov    al,ds:0x4b7c7101
  43590b:	jmp    0x4358f3
  43590d:	add    edx,DWORD PTR [ecx]
  43590f:	xor    edi,ebp
  435911:	mov    edx,DWORD PTR [eax+0x28745def]
  435917:	jmp    0x4358ff
  435919:	add    ebx,ebp
  43591b:	inc    eax
  43591c:	fist   DWORD PTR [esp+eax*4-0x1a]
  435920:	sub    al,0x26
  435922:	loope  0x4358c5
  435924:	pop    esi
  435925:	push   ecx
  435926:	les    eax,FWORD PTR [ebx-0x783bf66d]
  43592c:	ja     0x43598d
  43592e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43592f:	add    bh,ah
  435931:	mov    al,BYTE PTR [edi-0x6c]
  435934:	dec    ecx
  435935:	(bad)  
  435936:	in     al,dx
  435937:	pop    eax
  435938:	icebp  
  435939:	add    edx,DWORD PTR [ebp+eiz*4+0x43f8ae0]
  435940:	inc    ecx
  435941:	mov    esi,DWORD PTR [eax+0x474f004d]
  435947:	mov    bl,0x62
  435949:	loopne 0x43594a
  43594b:	pop    eax
  43594c:	adc    ch,cl
  43594e:	xchg   edi,eax
  43594f:	xchg   ebx,eax
  435950:	retf   0x1f70
  435953:	push   esp
  435954:	adc    ch,cl
  435956:	xchg   edi,eax
  435957:	jnp    0x435995
  435959:	push   esp
  43595a:	push   edi
  43595b:	sar    DWORD PTR [edi],cl
  43595d:	jmp    0x644b8e70
  435962:	add    BYTE PTR [edx],dh
  435964:	pop    es
  435965:	test   BYTE PTR [ecx-0x69],ch
  435968:	add    BYTE PTR [eax],al
  43596a:	ret    0x4e4b
  43596d:	clc    
  43596e:	mov    ch,0xd7
  435970:	add    BYTE PTR [ebp-0x112c8f],al
  435976:	call   0xe9434a44
  43597b:	xchg   edi,eax
  43597c:	fcomi  st,st(0)
  43597e:	add    cl,BYTE PTR [edx+0x16]
  435981:	push   edx
  435982:	(bad)  
  435983:	push   ds
  435984:	mov    ds:0x7b311a62,al
  435989:	dec    eax
  43598a:	loope  0x435945
  43598c:	stc    
  43598d:	scas   eax,DWORD PTR es:[edi]
  43598e:	popa   
  43598f:	add    DWORD PTR [ecx+0x7849eef9],edx
  435995:	mov    eax,0x850097ff
  43599a:	cdq    
  43599b:	jmp    0x435a15
  43599d:	sbb    al,0xb8
  43599f:	cli    
  4359a0:	aas    
  4359a1:	adc    al,0xee
  4359a3:	imul   edi,DWORD PTR [eax-0x49],0x850097df
  4359aa:	jns    0x435977
  4359ac:	jnp    0x4359f6
  4359ae:	icebp  
  4359af:	pmuludq mm1,QWORD PTR [ecx]
  4359b2:	jb     0x4359e4
  4359b4:	push   esp
  4359b5:	adc    ch,cl
  4359b7:	xchg   edi,eax
  4359b8:	xchg   edi,eax
  4359b9:	inc    eax
  4359ba:	cmc    
  4359bb:	inc    esi
  4359bc:	lock and eax,0xcad9e600
  4359c2:	jmp    0x6b00:0xb8907bdb
  4359c9:	add    al,0x0
  4359cb:	lea    ebp,[ecx-0x2f741657]
  4359d1:	cld    
  4359d2:	adc    BYTE PTR [eax-0x6692f],0x16
  4359d9:	xchg   ebx,eax
  4359da:	pop    edi
  4359db:	ror    DWORD PTR [edi],cl
  4359dd:	out    0x0,eax
  4359df:	nop
  4359e0:	aad    0x96
  4359e2:	stc    
  4359e3:	(bad)  
  4359e4:	ds mov ebp,0x96818881
  4359ea:	stc    
  4359eb:	push   DWORD PTR [esi-0x3ac40bc1]
  4359f1:	and    al,0xe
  4359f3:	add    BYTE PTR ds:0xc1cd79fd,bh
  4359f9:	ins    DWORD PTR es:[edi],dx
  4359fa:	test   DWORD PTR [edi],0x3fa120a
  435a00:	sub    eax,0x91888304
  435a05:	xchg   esi,eax
  435a06:	stc    
  435a07:	inc    DWORD PTR [ebx-0x1200066c]
  435a0d:	cwde   
  435a0e:	jmp    0x435999
  435a10:	cmp    ah,bh
  435a12:	xor    cl,dh
  435a14:	adc    esi,ecx
  435a16:	push   es
  435a17:	mov    bh,0x4e
  435a19:	add    al,0x4
  435a1b:	add    ch,ch
  435a1d:	in     eax,0x82
  435a1f:	(bad)  
  435a20:	or     edx,DWORD PTR [ecx-0x26]
  435a23:	mov    eax,DWORD PTR ds:0xcd5d80fc
  435a29:	in     eax,0x0
  435a2b:	nop
  435a2c:	add    BYTE PTR [ebp+0x46fff996],al
  435a32:	rcl    DWORD PTR [ebx],cl
  435a34:	mov    dl,BYTE PTR ds:0x94000e2c
  435a3a:	cdq    
  435a3b:	test   DWORD PTR [eax*4+0xf143dbe],ebx
  435a42:	inc    edx
  435a43:	clc    
  435a44:	test   ah,bl
  435a46:	xchg   ecx,eax
  435a47:	xchg   DWORD PTR [eax-0x250b3],edx
  435a4d:	paddb  mm2,QWORD PTR [ebx-0x77695f78]
  435a54:	nop
  435a55:	xor    BYTE PTR [edi-0x26940003],dl
  435a5b:	imul   DWORD PTR [esi+0x62c7c384]
  435a61:	inc    edi
  435a62:	ja     0x4359ec
  435a64:	dec    ebx
  435a65:	pushf  
  435a66:	sbb    al,0x31
  435a68:	push   es
  435a69:	inc    esp
  435a6a:	and    BYTE PTR [ebp-0x44],ch
  435a6d:	stos   BYTE PTR es:[edi],al
  435a6e:	cdq    
  435a6f:	std    
  435a70:	popa   
  435a71:	or     eax,0x94125569
  435a76:	cdq    
  435a77:	or     al,0xb1
  435a79:	pop    ds
  435a7a:	fwait
  435a7b:	add    DWORD PTR [eax],eax
  435a7d:	xchg   esp,eax
  435a7e:	pop    esi
  435a7f:	cmp    eax,DWORD PTR [edi-0xcf2f4]
  435a85:	adc    esp,DWORD PTR [edx-0x78]
  435a88:	jecxz  0x435af3
  435a8a:	fisub  DWORD PTR [edx]
  435a8c:	test   DWORD PTR [edi-0x67],eax
  435a8f:	add    DWORD PTR [eax],eax
  435a91:	add    BYTE PTR [edi+edi*2-0x78ac1d50],dl
  435a98:	push   es
  435a99:	mov    al,0x2c
  435a9b:	(bad)  
  435a9c:	std    
  435a9d:	call   DWORD PTR [edi+0x188885e3]
  435aa3:	scas   eax,DWORD PTR es:[edi]
  435aa4:	std    
  435aa5:	jmp    DWORD PTR [ebx-0x6801902a]
  435aab:	cdq    
  435aac:	std    
  435aad:	pop    ecx
  435aae:	or     eax,0x94125129
  435ab3:	add    bh,ah
  435ab5:	sbb    DWORD PTR ds:[ebp-0x442738c4],esp
  435abc:	lea    ebx,[ebx]
  435abe:	aam    0x8e
  435ac0:	(bad)  
  435ac1:	xlat   BYTE PTR ds:[ebx]
  435ac2:	fstp   TBYTE PTR [ecx+esi*2+0x70]
  435ac6:	xchg   esp,eax
  435ac7:	add    bh,ah
  435ac9:	mov    bl,dl
  435acb:	add    BYTE PTR [ecx-0x1eed7c3a],bh
  435ad1:	and    ecx,edi
  435ad3:	(bad)  
  435ad4:	out    0x10,al
  435ad6:	(bad)  
  435ad7:	inc    eax
  435ad8:	lds    dx,DWORD PTR [eax+0x5c877daf]
  435adf:	out    dx,al
  435ae0:	or     BYTE PTR [esi+0x5c4181f6],ch
  435ae6:	xchg   esp,eax
  435ae7:	add    bh,ah
  435ae9:	add    eax,edi
  435aeb:	aam    0x8
  435aed:	xchg   esi,edi
  435aef:	dec    esp
  435af0:	out    0x3,eax
  435af2:	xchg   esp,eax
  435af3:	add    ah,bl
  435af5:	in     eax,dx
  435af6:	add    BYTE PTR [ebp-0x6b33667f],dh
  435afc:	add    bh,ah
  435afe:	add    esp,DWORD PTR [edi+0x1be48ee0]
  435b04:	mov    fs,edi
  435b06:	mov    BYTE PTR [esi],bl
  435b08:	cmc    
  435b09:	out    0x3,eax
  435b0b:	xchg   esp,eax
  435b0c:	jo     0x435ad7
  435b0e:	xchg   bl,cl
  435b10:	add    BYTE PTR [ecx+ecx*1+0x288154],dh
  435b17:	scas   eax,DWORD PTR es:[edi]
  435b18:	add    al,ch
  435b1a:	add    edx,DWORD PTR [esp+ecx*1-0x3ddc28fe]
  435b21:	dec    edi
  435b22:	add    eax,0xc6e70094
  435b27:	loopne 0x435ae5
  435b29:	sub    ecx,eax
  435b2b:	fdivr  DWORD PTR [eax+eax*1-0x7acd2846]
  435b32:	clc    
  435b33:	adc    ah,BYTE PTR [ebx+0x46d5f1ff]
  435b39:	iret   
  435b3a:	rcl    BYTE PTR [edx+0x7ebb83c0],1
  435b40:	nop
  435b41:	iret   
  435b42:	rcr    DWORD PTR [ebp+0x4b],0xcc
  435b46:	mov    ch,0x5b
  435b48:	mov    esp,0xbc53adcc
  435b4d:	int3   
  435b4e:	bound  ecx,QWORD PTR [edi]
  435b50:	dec    esp
  435b51:	adc    ch,cl
  435b53:	xchg   edi,eax
  435b54:	cmp    edi,DWORD PTR [ebp-0x60]
  435b57:	lahf   
  435b58:	or     bl,BYTE PTR [esi]
  435b5a:	out    dx,al
  435b5b:	add    ch,al
  435b5d:	push   0x97ffb8
  435b62:	test   DWORD PTR [ecx],edi
  435b64:	test   BYTE PTR fs:[eax-0xf],cl
  435b68:	pop    ds
  435b69:	in     al,dx
  435b6a:	push   cs
  435b6b:	jle    0x435b44
  435b6d:	hlt    
  435b6e:	test   BYTE PTR [ecx],ah
  435b70:	inc    esp
  435b71:	test   BYTE PTR [eax-0x1f],dl
  435b74:	mov    ss,WORD PTR [edx-0x68]
  435b77:	mov    al,ds:0x52f98d25
  435b7c:	daa    
  435b7d:	add    bh,0xd7
  435b80:	sub    DWORD PTR [eax+ecx*2+0x14300ae1],eax
  435b87:	jae    0x435b18
  435b89:	dec    eax
  435b8a:	adc    ch,cl
  435b8c:	xchg   edi,eax
  435b8d:	js     0x435bab
  435b8f:	fcomp  DWORD PTR [esi]
  435b91:	inc    eax
  435b92:	adc    al,0xfa
  435b94:	enter  0x8721,0x71
  435b98:	dec    edi
  435b99:	repnz (bad) 
  435b9b:	call   0xffffd3b8
  435ba0:	xchg   edi,eax
  435ba1:	add    BYTE PTR [ebp+0x2a],dl
  435ba4:	sar    DWORD PTR [ebx-0x3a76ff34],cl
  435baa:	int3   
  435bab:	int3   
  435bac:	jns    0x435b73
  435bae:	int3   
  435baf:	int3   
  435bb0:	and    BYTE PTR [esi-0x14],bh
  435bb3:	push   ebx
  435bb4:	and    edi,DWORD PTR [esi-0x2f]
  435bb7:	mov    ecx,edi
  435bb9:	pop    ebx
  435bba:	mov    bh,bh
  435bbc:	retf   0x7b66
  435bbf:	jge    0x435bc1
  435bc1:	mov    ch,0x0
  435bc3:	mov    edi,0xf9920180
  435bc8:	inc    DWORD PTR [ebp-0x3f000000]
  435bce:	inc    edx
  435bcf:	or     DWORD PTR [eax+0x61],0x7d
  435bd3:	push   eax
  435bd4:	or     ch,dh
  435bd6:	mov    BYTE PTR [edx],cl
  435bd8:	(bad)  
  435bd9:	mov    ebp,0x65508490
  435bde:	rol    DWORD PTR [edx-0x3c829e88],1
  435be4:	rcl    DWORD PTR [edi*8+0x69720c87],0x40
  435bec:	adc    al,0xc6
  435bee:	in     al,dx
  435bef:	adc    ecx,DWORD PTR [ebx-0x347e0363]
  435bf5:	ret    
  435bf6:	dec    edi
  435bf7:	mov    BYTE PTR [edx+esi*1],cl
  435bfa:	imul   eax,DWORD PTR [eax+0x14],0x8b13eca6
  435c01:	(bad)  
  435c03:	or     bl,0xc2
  435c06:	dec    edi
  435c07:	mov    ecx,0xc7805e9
  435c0c:	pop    ss
  435c0d:	retf   0x1444
  435c10:	pop    edi
  435c11:	jo     0x435c60
  435c13:	je     0x435c2f
  435c15:	jbe    0x435c53
  435c17:	adc    al,0x8b
  435c19:	sub    eax,0x288942f8
  435c1e:	clc    
  435c1f:	sbb    DWORD PTR [esi],0xef82194
  435c25:	add    BYTE PTR [edi],cl
  435c27:	pop    ebp
  435c28:	add    eax,0x3fad54f9
  435c2d:	sub    edi,0x14
  435c30:	lahf   
  435c31:	pop    edx
  435c32:	pop    edi
  435c33:	je     0x435bf9
  435c35:	int3   
  435c36:	enter  0xc7ed,0xcc
  435c3a:	loopne 0x435c91
  435c3c:	ror    esp,0xd8
  435c3f:	pop    ebp
  435c40:	ror    esp,0xd0
  435c43:	int3   
  435c44:	mov    ch,ah
  435c46:	pop    ss
  435c47:	dec    esi
  435c48:	fst    QWORD PTR [ecx+0x21]
  435c4b:	int3   
  435c4c:	mov    eax,ds:0xfe815d2d
  435c51:	call   DWORD PTR [ecx+ebx*4-0x6af62e14]
  435c58:	inc    ebx
  435c59:	bound  ebx,QWORD PTR [edi]
  435c5b:	in     eax,dx
  435c5c:	enter  0xf2df,0x96
  435c60:	mov    fs,WORD PTR [edx-0x69]
  435c63:	imul   ecx,DWORD PTR [eax],0xffffffb1
  435c66:	dec    edx
  435c67:	add    eax,DWORD PTR [ebp+0x3d79d94c]
  435c6d:	jge    0x435cbb
  435c6f:	call   0xd57a:0xb87e417
  435c76:	mov    esp,0xc8b108c5
  435c7b:	push   0x3
  435c7d:	add    DWORD PTR [esi-0x4b],0xffffffef
  435c81:	or     bl,ch
  435c83:	pop    esp
  435c84:	sub    ah,al
  435c86:	psraw  mm7,QWORD PTR [edx+eiz*2]
  435c8a:	add    BYTE PTR ds:0xfce02a5d,bl
  435c90:	js     0x435c29
  435c92:	stc    
  435c93:	add    edi,DWORD PTR [ebx+0x63430486]
  435c99:	fsub   st(4),st
  435c9b:	jb     0x435c9d
  435c9d:	inc    ebx
  435c9e:	cmp    DWORD PTR [ecx],edx
  435ca0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  435ca1:	mov    esp,0xbcbbd0c4
  435ca6:	mov    eax,gs
  435ca8:	jle    0x435ca5
  435caa:	or     bl,BYTE PTR [ecx]
  435cac:	inc    ebp
  435cad:	out    dx,eax
  435cae:	xor    al,0x65
  435cb0:	ja     0x435c71
  435cb2:	mov    WORD PTR [eax+edi*8+0x5d],ss
  435cb6:	xor    ecx,DWORD PTR [eax-0x247b3089]
  435cbc:	mov    dl,BYTE PTR [esi]
  435cbe:	les    edx,FWORD PTR [ebx]
  435cc0:	xor    eax,0x8c4f8ddf
  435cc5:	stos   BYTE PTR es:[edi],al
  435cc6:	jle    0x435d0c
  435cc8:	hlt    
  435cc9:	out    0x3,al
  435ccb:	xchg   esp,eax
  435ccc:	add    bh,ah
  435cce:	add    edx,DWORD PTR [ebp-0x7d]
  435cd1:	adc    esi,eax
  435cd3:	or     DWORD PTR [edx+0x9401f4],0x64
  435cda:	mov    dl,0xee
  435cdc:	ror    BYTE PTR [eax],cl
  435cde:	sub    DWORD PTR [eax-0x7df0187f],0xffffff89
  435ce5:	imul   esi,DWORD PTR [eax+eax*4],0x268ae700
  435cec:	xor    ebx,ebx
  435cee:	add    eax,DWORD PTR [eax]
  435cf0:	xchg   esp,eax
  435cf1:	ja     0x435d56
  435cf3:	outs   dx,BYTE PTR ds:[esi]
  435cf4:	loopne 0x435ceb
  435cf6:	out    0x3,al
  435cf8:	adc    eax,DWORD PTR [ebx+ebp*2-0x42]
  435cfc:	sbb    cl,dl
  435cfe:	mov    esi,0xe78a2bef
  435d03:	mov    cl,BYTE PTR [esi+edx*4-0x16]
  435d07:	ror    BYTE PTR [ecx+0x23],cl
  435d0a:	pusha  
  435d0b:	xor    BYTE PTR ds:0x56daa6ff,dl
  435d11:	mov    BYTE PTR [ebx+0x4a81c9],bh
  435d17:	cdq    
  435d18:	jmp    0x435ca3
  435d1a:	stc    
  435d1b:	jmp    0x435ca9
  435d1d:	cmp    DWORD PTR [ebp+0x20],edi
  435d20:	xchg   esi,eax
  435d21:	add    eax,0x4a0ea803
  435d26:	in     eax,0xeb
  435d28:	(bad)  
  435d29:	dec    ecx
  435d2a:	stc    
  435d2b:	addr16 mov ah,dh
  435d2e:	(bad)  
  435d2f:	call   0xd593cc52
  435d34:	xchg   edi,eax
  435d35:	add    BYTE PTR [edi+0x52c2a6d],al
  435d3b:	jmp    0xe942afd7
  435d40:	xchg   edi,eax
  435d41:	add    BYTE PTR [edx+0x70],ah
  435d44:	mov    bl,0x80
  435d46:	ret    0x996d
  435d49:	xor    DWORD PTR [ecx+ebp*8],edx
  435d4c:	xchg   edi,eax
  435d4d:	add    cl,bh
  435d4f:	ja     0x435d50
  435d51:	out    dx,al
  435d52:	(bad)  
  435d53:	call   0x74f67158
  435d58:	loop   0x435cec
  435d5a:	dec    edi
  435d5b:	inc    esp
  435d5c:	push   0xffffff95
  435d5e:	loope  0x435ce1
  435d60:	push   ebp
  435d61:	jns    0x435cec
  435d63:	stc    
  435d64:	push   0xffffffc9
  435d66:	xor    BYTE PTR [ecx+ebp*8],dl
  435d69:	xchg   edi,eax
  435d6a:	mov    dh,BYTE PTR [ebp+0x5b]
  435d6d:	and    BYTE PTR ds:0xf88472fc,dh
  435d73:	xchg   BYTE PTR [ebx],dh
  435d75:	xchg   esp,eax
  435d76:	add    DWORD PTR [edx-0x676bbe7],0x50
  435d7d:	ds dec ebx
  435d7f:	test   DWORD PTR [ecx-0x20],eax
  435d82:	xchg   edx,eax
  435d83:	jge    0x435de7
  435d85:	cwde   
  435d86:	or     al,0xf
  435d88:	mov    edx,0x71e8be0e
  435d8d:	cmp    al,0x87
  435d8f:	stc    
  435d90:	add    BYTE PTR [esi+0x7e],al
  435d93:	les    eax,FWORD PTR [esi+ebp*2]
  435d96:	data16 stc 
  435d98:	jl     0x435dec
  435d9a:	jbe    0x435dd9
  435d9c:	clc    
  435d9d:	je     0x435ddf
  435d9f:	clc    
  435da0:	jmp    0x435d9c
  435da2:	ja     0x435d48
  435da4:	and    al,0xed
  435da6:	cld    
  435da7:	(bad)  
  435da8:	push   DWORD PTR [esi+0xb]
  435dab:	push   eax
  435dac:	adc    al,0xbd
  435dae:	cld    
  435daf:	or     BYTE PTR [ebx+edi*1-0x52fffd2f],0x75
  435db7:	xchg   esi,eax
  435db8:	pusha  
  435db9:	add    BYTE PTR [esi+0x3447fffc],dh
  435dbf:	or     edx,DWORD PTR [eax+0x14]
  435dc2:	mov    ebp,0x260161fc
  435dc7:	dec    edx
  435dc8:	or     DWORD PTR [esi-0x8b3],0xffe4d655
  435dd2:	push   edx
  435dd3:	jp     0x435e53
  435dd5:	pusha  
  435dd6:	xchg   BYTE PTR [eax+eax*1],al
  435dd9:	xor    DWORD PTR [edi],0x6e
  435ddc:	stc    
  435ddd:	xchg   ebp,eax
  435dde:	mov    DWORD PTR [eax+0x7ee6fff9],edx
  435de4:	push   esp
  435de5:	adc    al,0x6d
  435de7:	add    al,0x81
  435de9:	pushf  
  435dea:	repz enter 0x2,0x3d
  435def:	add    ecx,DWORD PTR [esi+0x46954]
  435df5:	mov    esi,DWORD PTR [ebx+0x2d0013d0]
  435dfb:	jnp    0x435d81
  435dfd:	mov    fs,WORD PTR [ecx+0x5bfffff9]
  435e03:	jns    0x435e19
  435e05:	xchg   DWORD PTR [ebx+0x1],ebx
  435e08:	adc    al,0x9f
  435e0a:	xchg   esp,eax
  435e0b:	and    al,BYTE PTR [ecx-0x8]
  435e0e:	jp     0x435e30
  435e10:	lock mov BYTE PTR [esi],bl
  435e13:	es repnz push edi
  435e16:	test   al,0x99
  435e18:	std    
  435e19:	test   DWORD PTR [eax],ecx
  435e1b:	cwde   
  435e1c:	xor    eax,0x99940014
  435e21:	add    ah,0x90
  435e24:	mov    ds:0xcc2a09ae,eax
  435e29:	push   cs
  435e2a:	std    
  435e2b:	mov    ah,BYTE PTR [edi]
  435e2d:	lods   eax,DWORD PTR ds:[esi]
  435e2e:	test   DWORD PTR [ecx-0xf],esp
  435e31:	xchg   ecx,eax
  435e32:	mov    esi,0x5802261c
  435e37:	test   al,0x99
  435e39:	std    
  435e3a:	or     BYTE PTR [ebx],al
  435e3c:	jmp    0x1e8be55a
  435e41:	(bad)  
  435e42:	popa   
  435e43:	sbb    eax,0xcfe72c6
  435e48:	sbb    BYTE PTR ds:0x3e999405,bl
  435e4e:	xchg   bp,ax
  435e50:	and    bh,BYTE PTR [ebx-0x5a3e2679]
  435e56:	into   
  435e57:	jo     0x435e9f
  435e59:	xchg   esp,eax
  435e5a:	jge    0x435eac
  435e5c:	xchg   ebp,eax
  435e5d:	cmp    BYTE PTR [edx-0x2523c],0x96
  435e64:	mov    es,WORD PTR [edx-0x6b999cc2]
  435e6a:	stc    
  435e6b:	or     al,ch
  435e6d:	out    dx,eax
  435e6e:	call   DWORD PTR [ebx+0x22]
  435e71:	jnp    0x435ec7
  435e73:	mov    al,ds:0x2a84fd99
  435e78:	stc    
  435e79:	push   es
  435e7a:	add    BYTE PTR [edx+eiz*1+0x2d1d0842],dl
  435e81:	jnp    0x435edf
  435e83:	add    BYTE PTR [edi+0x1903e700],bl
  435e89:	mov    esi,0x872f144f
  435e8e:	push   edx
  435e8f:	mov    BYTE PTR [edi-0x7c],ch
  435e92:	pop    esp
  435e93:	ins    DWORD PTR es:[edi],dx
  435e94:	enter  0xe6fb,0x3
  435e98:	in     al,dx
  435e99:	push   eax
  435e9a:	cmp    al,0x94
  435e9c:	std    
  435e9d:	mov    cs,WORD PTR es:[eax-0x38d9db09]
  435ea4:	fdiv   DWORD PTR [ebx-0x4c2f38cd]
  435eaa:	sub    eax,edi
  435eac:	enter  0xb9b3,0x88
  435eb0:	les    edi,FWORD PTR [edx+0x61]
  435eb3:	not    DWORD PTR [eax+0xe86e700]
  435eb9:	ins    BYTE PTR es:[edi],dx
  435eba:	out    0x3,eax
  435ebc:	xchg   esp,eax
  435ebd:	inc    DWORD PTR cs:[edi-0x43]
  435ec1:	xchg   dl,ch
  435ec3:	xchg   DWORD PTR [esi],edx
  435ec5:	fsubr  st,st(5)
  435ec7:	add    edx,DWORD PTR [ebp+esi*2+0x937c69]
  435ece:	out    0x39,eax
  435ed0:	jl     0x435e9a
  435ed2:	mov    ecx,0x69748d93
  435ed7:	aam    0x98
  435ed9:	add    bh,ah
  435edb:	xor    ebp,DWORD PTR [esp+esi*4-0x4c]
  435edf:	xchg   ebx,eax
  435ee0:	ins    DWORD PTR es:[edi],dx
  435ee1:	and    BYTE PTR [ebx-0x190cd400],0x3
  435ee8:	add    BYTE PTR [ecx+ebx*4+0xd380e6],dl
  435eef:	loop   0x435f4a
  435ef1:	sbb    al,0x55
  435ef3:	es inc esp
  435ef5:	xchg   esp,eax
  435ef6:	push   ds
  435ef7:	push   ax
  435ef9:	push   cs
  435efa:	pop    es
  435efb:	in     eax,dx
  435efc:	add    edx,DWORD PTR [eax+eax*1-0x86f0400]
  435f03:	mov    cl,0x59
  435f05:	retf   
  435f06:	ret    
  435f07:	aas    
  435f08:	jmp    0x77ff627a
  435f0d:	xchg   dh,bh
  435f0f:	(bad)  
  435f10:	call   0xde7b70ac
  435f15:	ins    DWORD PTR es:[edi],dx
  435f16:	js     0x435ebe
  435f18:	stos   BYTE PTR es:[edi],al
  435f19:	push   edi
  435f1a:	add    BYTE PTR [edx+0x6a],ah
  435f1d:	fs jp  0x435f9a
  435f20:	jecxz  0x435eb9
  435f22:	add    BYTE PTR [eax],al
  435f24:	mov    ah,0xc2
  435f26:	clc    
  435f27:	mov    cl,0x79
  435f29:	inc    ecx
  435f2a:	ret    
  435f2b:	aas    
  435f2c:	jmp    0x7fff62de
  435f31:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  435f32:	(bad)  
  435f33:	(bad)  
  435f34:	call   0x6a7370d0
  435f39:	and    ch,bh
  435f3b:	jl     0x435f3e
  435f3d:	xchg   ebx,eax
  435f3e:	or     DWORD PTR [eax+0xf405464],esi
  435f44:	call   0xe955b85e
  435f49:	xchg   edi,eax
  435f4a:	sub    bh,BYTE PTR [ebp+0x35150031]
  435f50:	inc    eax
  435f51:	clc    
  435f52:	cwde   
  435f53:	jp     0x435efd
  435f55:	not    DWORD PTR [edi+0x1aaa5a00]
  435f5b:	cwde   
  435f5c:	(bad)  
  435f5d:	imul   edi,DWORD PTR [ebx+0x15e80f40],0x58
  435f64:	adc    ch,cl
  435f66:	xchg   edi,eax
  435f67:	sub    bh,BYTE PTR [ebp-0x737d0096]
  435f6d:	sub    eax,0x66fef5d0
  435f72:	out    dx,eax
  435f73:	repnz (bad) 
  435f75:	call   0x10fa2ff
  435f7a:	or     DWORD PTR [ebp-0x34],eax
  435f7d:	int3   
  435f7e:	jmp    0x91102bc7
  435f83:	add    eax,0x84708bec
  435f88:	test   BYTE PTR [eax-0x67907],cl
  435f8e:	scas   al,BYTE PTR es:[edi]
  435f8f:	je     0x435f96
  435f91:	jle    0x435f67
  435f93:	int    0x4d
  435f95:	mov    esp,eax
  435f97:	mov    WORD PTR [edi-0x75],ds
  435f9a:	mov    ds:0x86e2cad7,eax
  435f9f:	leave  
  435fa0:	pop    es
  435fa1:	data16 hlt 
  435fa3:	adc    BYTE PTR [eax+0x700fd16],bh
  435fa9:	mov    dh,0x15
  435fab:	cmp    DWORD PTR [esi],ecx
  435fad:	add    ch,ch
  435faf:	add    eax,0x35001450
  435fb4:	xchg   ebp,eax
  435fb5:	or     cl,BYTE PTR [edi]
  435fb7:	arpl   WORD PTR [ecx],bx
  435fb9:	mov    cl,0x16
  435fbb:	lods   eax,DWORD PTR ds:[esi]
  435fbc:	add    bh,dh
  435fbe:	inc    eax
  435fbf:	loope  0x435fc6
  435fc1:	dec    eax
  435fc2:	adc    al,0x36
  435fc4:	rol    DWORD PTR [edi],1
  435fc6:	mov    cl,bl
  435fc8:	mov    eax,DWORD PTR [eax+edx*4-0x67607]
  435fcf:	mov    edx,0x8db1143b
  435fd4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  435fd5:	ret    
  435fd6:	dec    si
  435fd8:	pop    edi
  435fd9:	or     DWORD PTR [ebp+0x5d],0x7d
  435fdd:	mov    edx,0xbc0d04f3
  435fe2:	push   ss
  435fe3:	jge    0x435fe5
  435fe5:	adc    DWORD PTR [ebp+0x49],0xffffffda
  435fe9:	xor    BYTE PTR [eax-0x6790b],0x9b
  435ff0:	aad    0x61
  435ff2:	add    DWORD PTR [ecx+eax*4+0x734bf5bb],edx
  435ff9:	add    esp,0xffffff98
  435ffc:	fadd   st(2),st
  435ffe:	bound  ecx,QWORD PTR [edi]
  436000:	in     eax,dx
  436001:	mul    DWORD PTR [ecx+0x47]
  436004:	js     0x435f89
  436006:	mov    edi,0xbc7c2097
  43600b:	mov    bl,BYTE PTR [ecx-0x76367b03]
  436011:	daa    
  436012:	pop    es
  436013:	and    al,0x72
  436015:	idiv   bh
  436017:	add    BYTE PTR [ebx],cl
  436019:	pop    ds
  43601a:	xor    DWORD PTR [esi+ebp*2],ecx
  43601d:	cwde   
  43601e:	xchg   ebp,eax
  43601f:	sahf   
  436020:	inc    edx
  436022:	mov    ?,WORD PTR [ebp-0x28]
  436025:	xchg   ebp,eax
  436026:	sub    bh,BYTE PTR [ebp-0x33401a28]
  43602c:	ror    ch,1
  43602e:	mov    edi,0xbfd5c8cc
  436033:	int3   
  436034:	loopne 0x43607a
  436036:	jl     0x436024
  436038:	gs inc esi
  43603a:	jl     0x436097
  43603c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43603d:	arpl   WORD PTR [ebx+esi*2-0x74],di
  436041:	push   ss
  436042:	dec    esi
  436043:	test   BYTE PTR [ecx+ebx*4-0x25bc0003],dl
  43604a:	inc    eax
  43604b:	cld    
  43604c:	xchg   esp,eax
  43604d:	cdq    
  43604e:	std    
  43604f:	call   FWORD PTR [edx]
  436051:	(bad)  
  436052:	jp     0x43608e
  436054:	pop    ss
  436055:	sub    ah,al
  436057:	std    
  436058:	add    BYTE PTR [edx-0x45818d6b],ah
  43605e:	nop
  43605f:	xchg   ebx,edx
  436061:	cmc    
  436062:	js     0x435fe6
  436064:	mov    WORD PTR [esi-0x3e3b0003],ds
  43606a:	dec    eax
  43606b:	cld    
  43606c:	arpl   WORD PTR [eax],ax
  43606e:	mov    ds:0xeddc0e7e,al
  436073:	add    edx,DWORD PTR [ecx+esi*1-0x7cb03381]
  43607a:	mov    al,BYTE PTR [eax+eax*1-0x369207a8]
  436081:	sub    al,0xd1
  436083:	js     0x436015
  436085:	sub    eax,0x865b5977
  43608a:	add    bh,ah
  43608c:	jl     0x43609c
  43608e:	push   esp
  43608f:	stc    
  436090:	add    edx,DWORD PTR [edi+edi*2-0x3e6f02db]
  436097:	ffree  st(2)
  436099:	repnz (bad) 
  43609b:	daa    
  43609c:	call   0xb6c1:0x8fac7801
  4360a3:	mov    dl,0x8
  4360a5:	stc    
  4360a6:	(bad)  
  4360a7:	arpl   WORD PTR [edi+edx*4],di
  4360aa:	ja     0x4360c4
  4360ac:	jle    0x43604f
  4360ae:	cld    
  4360af:	ffree  st(5)
  4360b1:	gs out 0x6d,eax
  4360b4:	inc    esi
  4360b5:	mov    al,ds:0xa017277d
  4360ba:	ja     0x436048
  4360bc:	mul    DWORD PTR [edi+ebp*1-0x69]
  4360c0:	cmp    DWORD PTR [eax+eax*8+0x7ead8ff9],ebp
  4360c7:	sub    esi,ebx
  4360c9:	mov    dl,0x33
  4360cb:	call   0xa1c2f4d3
  4360d0:	jl     0x436066
  4360d2:	add    bh,ah
  4360d4:	pop    es
  4360d5:	popf   
  4360d6:	jl     0x436074
  4360d8:	add    al,0x94
  4360da:	add    BYTE PTR [esi],cl
  4360dc:	mov    edx,0x4947c8d
  4360e1:	add    BYTE PTR [eax+eax*1-0x14cf8192],dl
  4360e8:	(bad)  
  4360e9:	call   0xd5bedc85
  4360ee:	adc    al,0x30
  4360f0:	add    al,0x6a
  4360f2:	or     esi,esi
  4360f4:	jns    0x436131
  4360f6:	jp     0x436173
  4360f8:	mov    esi,0x85a1070f
  4360fd:	pop    ds
  4360fe:	cmp    al,0x20
  436100:	pop    es
  436101:	outs   dx,DWORD PTR ds:[esi]
  436102:	enter  0xffee,0xe8
  436106:	xor    dl,BYTE PTR [eax-0x66]
  436109:	xor    DWORD PTR [edx],esp
  43610b:	cmp    cl,0x62
  43610e:	(bad)  
  436110:	xchg   DWORD PTR ds:0xf5428791,eax
  436116:	adc    dl,BYTE PTR [eax-0x66]
  436119:	nop
  43611a:	add    al,BYTE PTR [edx-0x13a59d07]
  436120:	test   BYTE PTR [edi-0xee38601],dh
  436126:	outs   dx,BYTE PTR ds:[esi]
  436127:	jle    0x4360e5
  436129:	fist   WORD PTR [edi-0x14580700]
  43612f:	push   edx
  436130:	adc    bl,dl
  436132:	pop    ds
  436133:	pop    ds
  436134:	int    0x13
  436136:	pop    ss
  436137:	shr    ebp,0x60
  43613a:	adc    al,BYTE PTR [ebp+0x12]
  43613d:	jmp    0x5fca7fd9
  436142:	dec    eax
  436143:	out    dx,al
  436144:	(bad)  
  436145:	call   0x62376f4a
  43614a:	sbb    dh,dh
  43614c:	push   ds
  43614d:	pop    es
  43614e:	push   edi
  43614f:	push   eax
  436150:	out    dx,al
  436151:	(bad)  
  436152:	call   0x7040a36d
  436157:	adc    DWORD PTR [ebp+0x12],eax
  43615a:	jmp    0xcd86dcf6
  43615f:	(bad)  
  436160:	jbe    0x43618a
  436162:	add    BYTE PTR [esi-0x34750003],al
  436168:	xchg   ecx,eax
  436169:	add    al,0x0
  43616b:	jge    0x4361aa
  43616d:	push   eax
  43616e:	inc    ecx
  43616f:	jl     0x4361af
  436171:	dec    edx
  436172:	call   0x3acfe0
  436177:	sar    BYTE PTR [ebx-0x78],0x9
  43617b:	cmp    eax,0xe38d4ffd
  436180:	or     DWORD PTR [eax],eax
  436182:	add    BYTE PTR ds:0x5c682cc,ch
  436188:	mov    dl,0xee
  43618a:	jmp    DWORD PTR [edx+0x1414c47e]
  436190:	pop    es
  436191:	add    BYTE PTR [eax],al
  436193:	sub    eax,0xbbc8606
  436198:	std    
  436199:	dec    DWORD PTR [edx+0x478688e0]
  43619f:	out    dx,eax
  4361a0:	jge    0x436193
  4361a2:	or     eax,0x8b5dced3
  4361a7:	(bad)  
  4361a8:	fcmovne st,st(2)
  4361aa:	loop   0x4361ac
  4361ac:	jbe    0x436171
  4361ae:	adc    esp,DWORD PTR [esi-0xc]
  4361b1:	or     bh,BYTE PTR [eax+0x6fced16]
  4361b7:	mov    dh,0x53
  4361b9:	xor    eax,0x5bd000e
  4361be:	dec    esi
  4361bf:	or     BYTE PTR ds:0xebff0a91,dh
  4361c5:	mov    BYTE PTR [eax],cl
  4361c7:	mov    dh,0x53
  4361c9:	xor    al,0xe
  4361cb:	add    BYTE PTR [ebp+0x36144605],bh
  4361d1:	retf   
  4361d2:	pop    es
  4361d3:	mov    BYTE PTR [ecx+0x3196848d],dl
  4361d9:	ja     0x4361d4
  4361db:	call   DWORD PTR [esi+edx*2+0x7a451442]
  4361e2:	xlat   BYTE PTR ds:[ebx]
  4361e3:	(bad)
  4361e6:	pushf  
  4361e7:	jge    0x43623f
  4361e9:	mov    ebx,0x60289275
  4361ee:	std    
  4361ef:	(bad)  
  4361f0:	cli    
  4361f1:	loopne 0x436174
  4361f3:	mov    eax,0xe4fd6982
  4361f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4361f9:	pop    es
  4361fa:	scas   eax,DWORD PTR es:[edi]
  4361fb:	loopne 0x4361af
  4361fd:	pusha  
  4361fe:	cmp    DWORD PTR [eax+0x7cfd69aa],0x55
  436205:	imul   esi,DWORD PTR [esi-0x76],0xfffffff0
  436209:	push   edi
  43620a:	std    
  43620b:	(bad)  
  43620c:	mov    esp,0x403661
  436211:	xchg   esp,eax
  436212:	add    DWORD PTR [esp+eax*2-0x2c],edi
  436216:	imul   edi,DWORD PTR [eax-0x3e],0xf99899fc
  43621d:	or     ebp,ebx
  43621f:	(bad)  
  436220:	or     BYTE PTR [edi],cl
  436222:	cmp    BYTE PTR [edx+edx*4-0x7c753914],bl
  436229:	repz mov ch,0x4
  43622c:	test   edx,edx
  43622e:	rol    esi,0xf6
  436231:	jecxz  0x436261
  436233:	sub    ebx,DWORD PTR [edx+0x3f]
  436236:	repnz mov al,ds:0xc02dd75b
  43623c:	int3   
  43623d:	fdivr  DWORD PTR [eax+edi*2-0x65af014]
  436244:	or     bl,ch
  436246:	lods   al,BYTE PTR ds:[esi]
  436247:	in     eax,dx
  436248:	dec    edi
  436249:	mov    esp,0xabf94b8b
  43624e:	jmp    0xccc0:0x2a4104c7
  436255:	enter  0xb300,0xbf
  436259:	pusha  
  43625a:	dec    esp
  43625b:	stos   DWORD PTR es:[edi],eax
  43625c:	mov    edi,0x793c4c58
  436261:	jo     0x4361ee
  436263:	and    al,0x0
  436265:	in     al,0x68
  436267:	imul   ecx,DWORD PTR [esi+0x6d],0x7f
  43626b:	data16 (bad) 
  43626d:	nop
  43626e:	frstor [ebp-0x64b3af41]
  436274:	mov    edi,0xb34c4800
  436279:	mov    edi,0xbfab4c60
  43627e:	pop    eax
  43627f:	dec    esp
  436280:	xor    BYTE PTR [esp+edx*4+0x0],0xe7
  436285:	jle    0x43625a
  436287:	add    bh,ah
  436289:	jle    0x436266
  43628b:	add    bh,ah
  43628d:	jle    0x436262
  43628f:	add    bh,ah
  436291:	jle    0x43626e
  436293:	add    bh,ah
  436295:	jle    0x43626a
  436297:	add    bh,ah
  436299:	add    edx,DWORD PTR [eax+eax*1+0x9403e8]
  4362a0:	out    0x3,al
  4362a2:	xchg   esp,eax
  4362a3:	add    dl,ah
  4362a5:	add    edx,DWORD PTR [eax+eax*1+0x9403f2]
  4362ac:	fiadd  DWORD PTR [ebx]
  4362ae:	xchg   esp,eax
  4362af:	add    dl,dh
  4362b1:	add    edx,DWORD PTR [eax+eax*1+0x9403aa]
  4362b8:	and    al,BYTE PTR [ebx]
  4362ba:	xchg   esp,eax
  4362bb:	add    BYTE PTR [edx],bl
  4362bd:	add    dl,BYTE PTR [eax+eax*1+0x940012]
  4362c4:	or     al,BYTE PTR [esp+edx*4]
  4362c7:	add    BYTE PTR [edx],al
  4362c9:	cld    
  4362ca:	mov    bl,0x7e
  4362cc:	cli    
  4362cd:	jmp    0x43627a
  4362cf:	jle    0x4362d1
  4362d1:	test   bh,0x7e
  4362d4:	stc    
  4362d5:	out    dx,al
  4362d6:	pop    DWORD PTR [eax]
  4362d8:	add    dh,ah
  4362da:	add    BYTE PTR [edi],bl
  4362dc:	add    DWORD PTR [eax],eax
  4362de:	ficomp WORD PTR [edi]
  4362e0:	jle    0x4362db
  4362e2:	(bad)  
  4362e3:	(bad)  
  4362e5:	stc    
  4362e6:	into   
  4362e7:	sldt   WORD PTR [eax]
  4362ea:	(bad)  
  4362eb:	pop    ds
  4362ec:	or     BYTE PTR [eax],al
  4362ee:	mov    esi,0xb600181f
  4362f3:	pshufb mm5,QWORD PTR [esi-0x5a0007f1]
  4362fb:	pop    ds
  4362fc:	js     0x4362fe
  4362fe:	sahf   
  4362ff:	pop    ds
  436300:	js     0x436301
  436302:	xchg   ebp,eax
  436303:	vmread ebp,edi
  436306:	lea    ecx,[edi]
  436308:	js     0x43630b
  43630a:	xchg   BYTE PTR [edi],bl
  43630c:	js     0x436317
  43630e:	jle    0x43632f
  436310:	js     0x43632b
  436312:	jbe    0x436323
  436314:	js     0x43634f
  436316:	outs   dx,BYTE PTR ds:[esi]
  436317:	vmread DWORD PTR [ecx+0x66],edi
  43631b:	pop    ds
  43631c:	js     0x436317
  43631e:	mov    dh,0xc5
  436320:	ror    DWORD PTR [ebp+esi*2+0x1b],1
  436324:	ins    DWORD PTR es:[edi],dx
  436325:	inc    eax
  436326:	dec    ebp
  436327:	jnp    0x43631d
  436329:	and    esp,DWORD PTR [ecx+0x721bfa72]
  43632f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  436330:	add    al,0x85
  436332:	out    dx,eax
  436333:	call   0x4486:0xdb437d50
  43633a:	int    0xeb
  43633c:	xchg   BYTE PTR [ebp+eax*8+0x0],dl
  436340:	mov    ebx,0x7bcd6c84
  436345:	or     DWORD PTR [edx-0x7],0x3a
  436349:	fimul  DWORD PTR [ebx]
  43634b:	add    dh,al
  43634d:	pushf  
  43634e:	out    dx,eax
  43634f:	fnstsw WORD PTR [esi-0x53168662]
  436355:	add    al,0x0
  436357:	add    BYTE PTR [esi-0x5ea37e42],ch
  43635d:	dec    eax
  43635e:	sub    BYTE PTR [ecx+edx*4+0x5c],0x82
  436363:	dec    esp
  436364:	xchg   ecx,eax
  436365:	je     0x4362eb
  436367:	inc    edi
  436368:	cdq    
  436369:	std    
  43636a:	inc    esi
  43636b:	push   eax
  43636c:	in     al,0x3d
  43636e:	and    al,0x8
  436370:	in     al,0x35
  436372:	and    al,0xc
  436374:	in     eax,0x4
  436376:	add    BYTE PTR [eax],al
  436378:	ins    DWORD PTR es:[edi],dx
  436379:	inc    BYTE PTR [esi+0x54]
  43637c:	push   cs
  43637d:	mov    eax,ds:0x5d318948
  436382:	mov    cl,0x1
  436384:	sub    eax,0x9a8b0001
  436389:	sub    al,0xcb
  43638b:	loopne 0x4363f2
  43638d:	sti    
  43638e:	inc    ebx
  43638f:	and    al,0x31
  436391:	(bad)  
  436392:	sub    BYTE PTR ds:[esi-0x7d74cfc6],dh
  436399:	push   eax
  43639a:	add    BYTE PTR [ecx+eiz*4+0x50],0x82
  43639f:	dec    esp
  4363a0:	xchg   ecx,eax
  4363a1:	push   esp
  4363a2:	adc    BYTE PTR [eax+eax*1-0x6f],0x4c
  4363a7:	test   BYTE PTR [edi-0x5b],ch
  4363aa:	std    
  4363ab:	push   esi
  4363ac:	cmp    al,0x66
  4363ae:	or     eax,0x35662c24
  4363b3:	and    al,0x14
  4363b5:	out    0xb6,al
  4363b7:	outs   dx,DWORD PTR ds:[esi]
  4363b8:	and    ch,BYTE PTR [esi+0x44]
  4363bb:	add    ebp,DWORD PTR [ebx]
  4363bd:	mov    ecx,ecx
  4363bf:	or     eax,DWORD PTR [eax]
  4363c1:	mov    ebp,0x94c12300
  4363c6:	in     al,0x0
  4363c8:	and    al,0x98
  4363ca:	sbb    bl,BYTE PTR [ecx-0x7b]
  4363cd:	fdivr  QWORD PTR [ecx-0x14011243]
  4363d3:	or     BYTE PTR [eax+eax*4],ah
  4363d6:	loopne 0x4363e0
  4363d8:	and    al,0x80
  4363da:	add    ah,ch
  4363dc:	lock pop edx
  4363de:	addr16 std 
  4363e0:	call   DWORD PTR [ebp+edx*8-0x1fabd30d]
  4363e7:	std    
  4363e8:	inc    ecx
  4363e9:	setg   BYTE PTR [ebx-0x5b696343]
  4363f0:	add    eax,0x859c4f7c
  4363f5:	loopne 0x436404
  4363f7:	enter  0x997c,0x19
  4363fb:	arpl   WORD PTR ds:0x83f86794,di
  436401:	sbb    eax,0xcbfffd68
  436406:	(bad)  
  436407:	xor    ecx,DWORD PTR [ebp+0x0]
  43640a:	in     eax,0x37
  43640c:	push   0x7e4d9885
  436411:	xor    al,0x70
  436413:	imul   edi,ebp,0x67d4941f
  436419:	push   esi
  43641a:	addr16 cdq 
  43641c:	adc    BYTE PTR [edi+eax*8+0x29],al
  436420:	neg    DWORD PTR [ebp+0x633edf15]
  436426:	jb     0x436484
  436428:	or     bh,BYTE PTR [eax]
  43642a:	adc    eax,0x797415d1
  43642f:	push   ebp
  436430:	or     dh,BYTE PTR [eax]
  436432:	adc    eax,0x796a14c0
  436437:	mov    al,ds:0x691c280a
  43643c:	std    
  43643d:	call   DWORD PTR [eax+eax*1+0x690b65f2]
  436444:	out    dx,eax
  436445:	test   BYTE PTR [ebx+ecx*1-0xa69739a],dh
  43644c:	lock nop
  43644e:	repnz add bh,ah
  436451:	adc    DWORD PTR [ebp+esi*8+0x43909ce4],0xffffffec
  436459:	xor    edi,ecx
  43645b:	mov    edi,0x9405e6
  436460:	out    0x9c,eax
  436462:	xchg   edx,eax
  436463:	inc    ebx
  436464:	in     al,0x33
  436466:	and    DWORD PTR [edi+0x9404e6],edi
  43646c:	out    0x2d,eax
  43646e:	add    bl,cl
  436470:	xlat   BYTE PTR ds:[ebx]
  436471:	push   ds
  436472:	popf   
  436473:	adc    eax,0x8d8c6790
  436478:	repz jecxz 0x43644f
  43647b:	sbb    esp,edx
  43647d:	jnp    0x4364fc
  43647f:	pop    ecx
  436480:	and    BYTE PTR [esi-0x119fa70d],0x9b
  436487:	sbb    DWORD PTR [ebx+ecx*8],edx
  43648a:	jl     0x436454
  43648c:	and    al,0xdf
  43648e:	in     al,0x46
  436490:	xchg   ebx,ebp
  436492:	jb     0x4364a6
  436494:	dec    esp
  436495:	int    0xa7
  436497:	push   ecx
  436498:	ins    DWORD PTR es:[edi],dx
  436499:	imul   eax,ebx,0xffffffa7
  43649c:	sbb    DWORD PTR [eax+0x20a6a49b],ebp
  4364a2:	or     BYTE PTR [eax+0x6281ea10],dh
  4364a8:	add    al,0xe7
  4364aa:	add    eax,ebx
  4364ac:	hlt    
  4364ad:	add    dh,al
  4364af:	fs inc esp
  4364b1:	push   eax
  4364b2:	xor    BYTE PTR [eax-0x3b831900],dl
  4364b8:	inc    eax
  4364b9:	add    BYTE PTR [ebx-0x19],al
  4364bc:	test   al,cl
  4364be:	add    edi,0x971d8407
  4364c4:	add    BYTE PTR [eax],al
  4364c6:	imul   esi,esi,0xc9cc7408
  4364cc:	push   ecx
  4364cd:	ins    DWORD PTR es:[edi],dx
  4364ce:	clc    
  4364cf:	xor    DWORD PTR [ebx+0x2d],esp
  4364d2:	sub    DWORD PTR [eax],eax
  4364d4:	jne    0x43647d
  4364d6:	xchg   BYTE PTR [edx],dh
  4364d8:	pop    ss
  4364d9:	mov    ebp,0x4f71a10
  4364de:	call   0xfffcaf46
  4364e3:	call   0xca10657f
  4364e8:	shl    BYTE PTR [edx],0xd7
  4364eb:	or     dl,BYTE PTR [ebp+0x4c]
  4364ee:	jmp    0x4364da
  4364f0:	daa    
  4364f1:	adc    BYTE PTR [ebp+ecx*1+0x78],0xfa
  4364f6:	hlt    
  4364f7:	out    dx,al
  4364f8:	xchg   edx,eax
  4364f9:	add    eax,0xa57aa92d
  4364fe:	xchg   BYTE PTR [edx-0x45ef43e8],ah
  436504:	lock add ebp,eax
  436507:	jb     0x43648d
  436509:	and    al,0x4
  43650b:	bound  edi,QWORD PTR [esp+0xc]
  43650f:	retf   0x83e4
  436512:	add    al,0x58
  436514:	scas   eax,DWORD PTR es:[edi]
  436515:	push   eax
  436516:	mov    edi,0xcc842893
  43651b:	ret    
  43651c:	repz dec ebx
  43651e:	jmp    0x436583
  436520:	push   eax
  436521:	test   eax,0xaa8bf610
  436526:	add    cl,ch
  436528:	xchg   edi,eax
  436529:	sbb    bh,0xe6
  43652c:	mov    ebx,ebp
  43652e:	xor    eax,0x86098730
  436533:	add    BYTE PTR [ebp+ecx*2-0x47],al
  436537:	data16 add BYTE PTR [eax],dl
  43653a:	test   edx,0xcc74ae80
  436540:	loopne 0x4364f8
  436542:	xchg   ebp,eax
  436543:	or     ch,0x35
  436546:	add    eax,DWORD PTR [eax]
  436548:	add    BYTE PTR [ebp-0x28b71f52],ch
  43654e:	lods   al,BYTE PTR ds:[esi]
  43654f:	sbb    eax,ebp
  436551:	outs   dx,BYTE PTR ds:[esi]
  436552:	xchg   edi,eax
  436553:	sti    
  436554:	iret   
  436555:	xchg   BYTE PTR [ecx+eax*4],al
  436558:	je     0x436533
  43655a:	push   ecx
  43655b:	test   bh,al
  43655d:	(bad)  
  43655e:	cmp    DWORD PTR [eax+ebp*1],esp
  436561:	inc    esi
  436562:	aas    
  436563:	pop    es
  436564:	or     BYTE PTR [ecx],0xfe
  436567:	(bad)  
  436568:	inc    DWORD PTR [esi]
  43656a:	xor    ah,BYTE PTR [eax+ebx*1]
  43656d:	test   BYTE PTR [edx-0x63010ddd],0xfb
  436574:	mov    DWORD PTR [ebx-0xb],edi
  436577:	dec    BYTE PTR [ecx+0x568203bb]
  43657d:	outs   dx,DWORD PTR ds:[esi]
  43657e:	jle    0x43653e
  436580:	add    esi,DWORD PTR [ebp-0x757806c6]
  436586:	(bad)  
  436587:	jp     0x436550
  436589:	mov    fs,WORD PTR cs:[ebx+ecx*4-0x16da9f67]
  436591:	sub    eax,0xbefff782
  436596:	xchg   ecx,edi
  436598:	je     0x4365fa
  43659a:	dec    esp
  43659b:	jne    0x4365c1
  43659d:	add    BYTE PTR [ebp+0x9],dl
  4365a0:	scas   eax,DWORD PTR es:[edi]
  4365a1:	dec    edi
  4365a2:	jbe    0x4365d5
  4365a4:	and    al,0x18
  4365a6:	xchg   DWORD PTR [edx+0x7c],edi
  4365a9:	jmp    0x1825a9c
  4365ae:	xchg   esp,eax
  4365af:	fistp  QWORD PTR [ecx]
  4365b1:	(bad)  
  4365b2:	sbb    esp,DWORD PTR [edx+0x6ad37cfe]
  4365b8:	mov    fs,WORD PTR [esi-0x67d3113]
  4365be:	fstp   TBYTE PTR [esi+0x3d]
  4365c1:	or     DWORD PTR [ecx],ebx
  4365c3:	pop    ecx
  4365c4:	(bad)  
  4365c5:	call   DWORD PTR [edi+ebx*8+0x67940003]
  4365cc:	scas   al,BYTE PTR es:[edi]
  4365cd:	loopne 0x43661b
  4365cf:	inc    esi
  4365d0:	sar    ch,0xd5
  4365d3:	(bad)  [eax]
  4365d5:	and    al,0x9c
  4365d7:	out    dx,al
  4365d8:	clc    
  4365d9:	jge    0x436588
  4365db:	mov    esp,0xbe9bf982
  4365e0:	cmp    al,0x9
  4365e2:	sbb    DWORD PTR [edi+edi*8],ecx
  4365e5:	call   DWORD PTR [ecx+eiz*4+0x6994fffd]
  4365ec:	mov    al,0xe0
  4365ee:	int3   
  4365ef:	or     bh,BYTE PTR [ecx+0x2fe355fd]
  4365f5:	and    al,0x98
  4365f7:	repnz (bad) 
  4365f9:	jge    0x436668
  4365fb:	popa   
  4365fc:	test   cl,bh
  4365fe:	pop    ebx
  4365ff:	jecxz  0x4365bc
  436601:	test   DWORD PTR [eax],eax
  436603:	fdivr  st,st(5)
  436605:	iret   
  436606:	lock ins DWORD PTR es:[edi],dx
  436608:	repz (bad) 
  43660b:	jl     0x43666f
  43660d:	mov    edi,0xfeb01609
  436612:	call   DWORD PTR [edx+ebp*2+0x45a87db7]
  436619:	int    0xff
  43661b:	test   al,0x3d
  43661d:	fdivr  DWORD PTR [esi+0x4476f997]
  436623:	mov    eax,0x82bec851
  436628:	add    bh,al
  43662a:	fadd   DWORD PTR [edx+0x74]
  43662d:	cmp    DWORD PTR [ecx+0x5],0x2c
  436631:	push   ebp
  436632:	cdq    
  436633:	inc    esi
  436634:	cmp    ebp,DWORD PTR [eax]
  436636:	push   cs
  436637:	pop    edx
  436638:	sub    ebp,DWORD PTR [eax]
  43663a:	xchg   ecx,eax
  43663b:	cmp    BYTE PTR [edx+esi*1-0x60941627],cl
  436642:	js     0x43669c
  436644:	sbb    al,0xf7
  436646:	enter  0xeed3,0xd2
  43664a:	add    BYTE PTR [eax+0x1c],cl
  43664d:	rol    DWORD PTR [eax],cl
  43664f:	les    ebp,FWORD PTR [ebx]
  436651:	sbb    cl,bl
  436653:	fisttp DWORD PTR [ebx+0x3b83dfa3]
  436659:	sub    BYTE PTR [esi],cl
  43665b:	outs   dx,BYTE PTR ds:[esi]
  43665c:	sub    ebp,DWORD PTR [eax]
  43665e:	xchg   ecx,eax
  43665f:	lock mov edi,DWORD PTR [ebx-0x21]
  436663:	retf   
  436664:	mov    ebx,DWORD PTR [ebx+0x3bbb00df]
  43666a:	test   al,0xd
  43666c:	sahf   
  43666d:	sub    ebp,DWORD PTR [eax-0x2574cf70]
  436673:	fadd   DWORD PTR [ecx+0x6400f36b]
  436679:	sub    edi,DWORD PTR [eax-0x20e32788]
  43667f:	enter  0xee1a,0xde
  436683:	fcom   DWORD PTR [edx]
  436685:	jae    0x43660a
  436687:	js     0x4366ce
  436689:	sub    edx,DWORD PTR [ebp+0x43734c78]
  43668f:	js     0x436651
  436691:	sbb    al,0xc3
  436693:	call   0x7711:0x848a76a2
  43669a:	repnz or al,0x8d
  43669d:	out    0xa3,al
  43669f:	js     0x4366d2
  4366a1:	pop    es
  4366a2:	add    BYTE PTR [edi],al
  4366a4:	hlt    
  4366a5:	and    cl,BYTE PTR [ecx]
  4366a7:	out    dx,al
  4366a8:	xor    al,0x9
  4366aa:	push   0xffffffd5
  4366ac:	jecxz  0x4366b0
  4366ae:	or     esi,ebx
  4366b0:	sbb    eax,0x6c20e909
  4366b5:	aam    0x23
  4366b7:	loope  0x4366c5
  4366b9:	ja     0x436644
  4366bb:	mul    BYTE PTR [edi+esi*4]
  4366be:	jge    0x4366fc
  4366c0:	imul   edi
  4366c2:	or     eax,0x973a9e6
  4366c7:	mov    edi,0xedc1f3d1
  4366cc:	add    al,cl
  4366ce:	arpl   dx,di
  4366d0:	push   0xfffffffa
  4366d2:	pop    ds
  4366d3:	or     DWORD PTR [edx],eax
  4366d5:	lock or ch,dl
  4366d8:	or     DWORD PTR [eax-0x67092008],esp
  4366de:	push   esp
  4366df:	test   ebp,esp
  4366e1:	adc    al,0x9
  4366e3:	mov    dl,0x25
  4366e5:	mov    al,ch
  4366e7:	mov    dl,0x2e
  4366ea:	jge    0x4366ac
  4366ec:	pop    esp
  4366ed:	mov    eax,ds:0x29f9e8b5
  4366f2:	cs jl  0x436702
  4366f5:	mov    BYTE PTR [edi],al
  4366f7:	sub    ch,0x91
  4366fa:	add    BYTE PTR [eax],al
  4366fc:	add    BYTE PTR [edx+eiz*1+0x14],bl
  436700:	sbb    bl,BYTE PTR ss:[esi+0xf]
  436704:	jmp    0x43669d
  436706:	add    BYTE PTR [ebp+0x105ed199],al
  43670c:	push   ecx
  43670d:	test   al,0x7
  43670f:	test   BYTE PTR [ecx+0x6a000090],cl
  436715:	mov    eax,0x86f57407
  43671a:	inc    ebx
  43671b:	mov    edi,0xc1702a00
  436720:	bndstx [ebp+0x5dee822],(bad)
  436727:	jge    0x436701
  436729:	mov    esi,0xbc02f93d
  43672e:	adc    ebx,ecx
  436730:	rol    DWORD PTR [eax],0x6e
  436733:	jg     0x436755
  436735:	ja     0x436726
  436737:	adc    ah,BYTE PTR [esi-0xb]
  43673a:	retf   0x376f
  43673d:	xor    DWORD PTR [ebx-0x640cf8f8],0x7d
  436744:	mov    ebp,0xbee6ba20
  436749:	mov    ebx,DWORD PTR [ecx]
  43674b:	push   ds
  43674c:	or     al,0xf
  43674e:	push   esi
  43674f:	in     al,0x6
  436751:	jle    0x4366f8
  436753:	adc    DWORD PTR [edi-0x2b],esi
  436756:	or     BYTE PTR ss:[ebx+0xf],bh
  43675a:	inc    ebx
  43675b:	rol    BYTE PTR [edx+0xfe56cd8],1
  436761:	sub    eax,DWORD PTR [ecx+edx*1+0xcd5c966]
  436768:	pop    es
  436769:	test   cl,cl
  43676b:	cld    
  43676c:	(bad)  
  43676d:	(bad)  
  43676e:	out    dx,al
  43676f:	loope  0x436777
  436771:	je     0x436735
  436773:	adc    ebx,ecx
  436775:	sar    DWORD PTR [edx+0x6f],0xc1
  436779:	pand   mm7,QWORD PTR [ebx+0x108ee822]
  436780:	jge    0x43675a
  436782:	scas   al,BYTE PTR es:[edi]
  436783:	cmp    eax,0x842402f9
  436788:	je     0x4367ae
  43678a:	dec    ecx
  43678b:	xchg   BYTE PTR [edi+0x2828712b],bh
  436791:	cmp    ebp,esi
  436793:	adc    DWORD PTR [edx-0x57],edi
  436796:	add    BYTE PTR [edi+eiz*2-0x5ee00003],dl
  43679d:	mov    dh,cl
  43679f:	outs   dx,DWORD PTR ds:[esi]
  4367a0:	cli    
  4367a1:	and    edi,0x8806f197
  4367a7:	fwait
  4367a8:	loope  0x436770
  4367aa:	(bad)  
  4367ab:	sbb    eax,0xda7d020d
  4367b0:	imul   eax,DWORD PTR [ebp-0x2a106abf],0x22616fd
  4367ba:	in     eax,dx
  4367bb:	xor    dl,ah
  4367bd:	lock and esi,DWORD PTR [eax-0x73dc270e]
  4367c4:	shr    BYTE PTR [edi],1
  4367c6:	stc    
  4367c7:	shr    DWORD PTR ds:0xea944790,cl
  4367cd:	jns    0x4367ce
  4367cf:	dec    eax
  4367d0:	fistp  QWORD PTR [ebx]
  4367d2:	jl     0x436844
  4367d4:	dec    edi
  4367d5:	icebp  
  4367d6:	lods   eax,DWORD PTR ds:[esi]
  4367d7:	arpl   dx,sp
  4367d9:	dec    edx
  4367da:	xchg   BYTE PTR [ebx+0x1bfd6bea],dl
  4367e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4367e1:	add    al,0x88
  4367e3:	push   ebx
  4367e4:	imul   eax,DWORD PTR [ebp+0x45e69741],0x89c08704
  4367ee:	pop    esp
  4367ef:	mov    eax,0x7b006671
  4367f4:	push   ebx
  4367f5:	jg     0x43677c
  4367f7:	jae    0x43677b
  4367f9:	les    ecx,FWORD PTR [eax]
  4367fb:	add    BYTE PTR [ecx],dl
  4367fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4367fe:	add    al,0x0
  436800:	xchg   esp,eax
  436801:	out    0x63,al
  436803:	or     DWORD PTR [ebx-0x2df6c26a],ecx
  436809:	test   al,0x23
  43680b:	or     al,0x11
  43680d:	xchg   edx,eax
  43680e:	ret    
  43680f:	cmp    al,0x94
  436811:	add    dh,ah
  436813:	dec    ebp
  436814:	adc    ebp,edi
  436816:	ins    DWORD PTR es:[edi],dx
  436817:	imul   esp,DWORD PTR [eax+0x73],0xffffff92
  43681b:	adc    DWORD PTR [ecx],0x8cc43f74
  436821:	jge    0x436874
  436823:	add    al,0x94
  436825:	add    BYTE PTR [esi+0x64],ah
  436828:	popf   
  436829:	add    edx,DWORD PTR [esi-0x580d62bd]
  43682f:	and    eax,0xc53f7d90
  436834:	mov    eax,0xb7c86e00
  436839:	add    al,0xe6
  43683b:	dec    esp
  43683c:	adc    ebp,edi
  43683e:	pop    esi
  43683f:	imul   ecx,DWORD PTR [ebx+0x11814273],0x74
  436846:	outs   dx,BYTE PTR ds:[esi]
  436847:	dec    esp
  436848:	sbb    DWORD PTR [ebp+0x59c5380a],edi
  43684e:	pop    esi
  43684f:	clc    
  436850:	ja     0x43688a
  436852:	fiadd  WORD PTR [ebp+ecx*4+0x7e]
  436856:	inc    ebp
  436857:	add    al,0x94
  436859:	add    dh,ah
  43685b:	dec    esp
  43685c:	sub    esp,esi
  43685e:	ret    0x33
  436861:	xchg   esp,eax
  436862:	in     eax,dx
  436863:	(bad)  
  436864:	sub    al,0xdb
  436866:	push   esi
  436868:	cmp    al,0x63
  43686a:	jmp    0x8d43:0x6f5b2c8e
  436871:	test   DWORD PTR [edi],esp
  436873:	(bad)  
  436874:	ins    BYTE PTR es:[edi],dx
  436875:	into   
  436876:	aaa    
  436877:	mov    eax,0xb827d9f9
  43687c:	je     0x4368ae
  43687e:	xchg   edx,edx
  436880:	sub    al,0x71
  436882:	addr16 daa 
  436884:	(bad)  
  436885:	rcr    BYTE PTR [edi+esi*8],1
  436888:	cmp    al,0x5c
  43688a:	jmp    0xf523:0xec9100ff
  436891:	cwde   
  436892:	jo     0x4368b9
  436894:	cwde   
  436895:	push   0x2db83548
  43689a:	sbb    eax,0x9ca0b825
  43689f:	test   DWORD PTR ds:0x3585386c,edx
  4368a5:	ins    BYTE PTR es:[edi],dx
  4368a6:	xor    BYTE PTR ds:0x250d0d98,dh
  4368ac:	cwde   
  4368ad:	sbb    BYTE PTR [ebp+eax*4-0x1a9a4f8a],0xf9
  4368b5:	nop
  4368b6:	jo     0x4368dd
  4368b8:	pop    eax
  4368b9:	mov    al,0x43
  4368bb:	jb     0x43689e
  4368bd:	mov    eax,0x1085ed43
  4368c2:	jno    0x4368e9
  4368c4:	cmp    al,BYTE PTR [eax]
  4368c6:	or     BYTE PTR [edx],bh
  4368c8:	in     eax,dx
  4368c9:	test   DWORD PTR [eax],esp
  4368cb:	in     al,dx
  4368cc:	and    eax,DWORD PTR ds:0xe123d419
  4368d2:	cs sbb al,0xfa
  4368d5:	es adc al,0xab
  4368d8:	shr    BYTE PTR [edx-0xc488d28],1
  4368de:	xchg   edi,eax
  4368df:	add    BYTE PTR [eax],al
  4368e1:	add    dh,BYTE PTR [ebx-0x58]
  4368e4:	and    BYTE PTR [ebp-0x75],bh
  4368e7:	stos   DWORD PTR es:[edi],eax
  4368e8:	add    cl,ch
  4368ea:	xchg   edi,eax
  4368eb:	add    BYTE PTR [esi+0x97e2],dh
  4368f1:	add    ah,BYTE PTR [ebx+0x572acca9]
  4368f7:	jb     0x4368b0
  4368f9:	add    ebx,DWORD PTR [eax-0x7f3e0000]
  4368ff:	jnp    0x436975
  436901:	add    eax,0xd4a9a4
  436906:	scas   al,BYTE PTR es:[edi]
  436907:	cmp    eax,0xfe37b9f9
  43690c:	(bad)  
  43690d:	call   DWORD PTR [esi-0x3]
  436910:	add    BYTE PTR [ecx+ebx*4+0x54],0x7e
  436915:	leave  
  436916:	cdq    
  436917:	std    
  436918:	or     BYTE PTR [eax-0x6b],0x85
  43691c:	inc    eax
  43691d:	sbb    al,0xb4
  43691f:	or     al,0xe3
  436921:	add    BYTE PTR [esi+0x6ea34fbf],ch
  436927:	cld    
  436928:	stc    
  436929:	je     0x43692b
  43692b:	inc    DWORD PTR [esi+0x28b98bd5]
  436931:	pop    eax
  436932:	mov    esi,DWORD PTR [esi]
  436934:	xchg   BYTE PTR [eax+0x1c],dl
  436937:	lods   al,BYTE PTR ds:[esi]
  436938:	jecxz  0x436934
  43693a:	sub    cl,BYTE PTR [ebx+edi*4-0x28]
  43693e:	add    edx,DWORD PTR [esi-0x3e877f2d]
  436944:	test   BYTE PTR [edx+0x3c],dl
  436947:	lds    ax,DWORD PTR [esp+ebx*2+0x5c312099]
  43694f:	cdq    
  436950:	sbb    BYTE PTR [ebp+0x14],ch
  436953:	xchg   esi,eax
  436954:	in     eax,dx
  436955:	sbb    BYTE PTR [eax],0x44
  436958:	pusha  
  436959:	sbb    eax,0x82eebe14
  43695e:	pop    eax
  43695f:	mov    ecx,0xac0be37e
  436964:	push   ecx
  436965:	sbb    eax,0xb32c2414
  43696a:	add    DWORD PTR [ebp-0x3],edi
  43696d:	call   edx
  43696f:	sahf   
  436970:	inc    ebp
  436971:	jl     0x4369b0
  436973:	sbb    eax,0x6f003b9e
  436978:	js     0x43697b
  43697a:	ucomiss xmm7,DWORD PTR [esi+eax*1+0xaa4947e]
  436982:	jno    0x43693b
  436984:	mov    WORD PTR ds:[esi-0x64],fs
  436988:	out    dx,al
  436989:	fsub   DWORD PTR [ebx]
  43698b:	test   al,0xfe
  43698d:	pop    ecx
  43698e:	jb     0x436990
  436990:	sahf   
  436991:	(bad)  
  436992:	pop    ecx
  436993:	jge    0x4369ec
  436995:	pop    esi
  436996:	mov    WORD PTR [eax-0x70],ds
  436999:	mov    es,WORD PTR [edi]
  43699b:	and    eax,0x7d5b8a27
  4369a0:	push   edx
  4369a1:	pop    esi
  4369a2:	mov    WORD PTR [eax-0x68],?
  4369a5:	(bad)  
  4369a7:	and    eax,DWORD PTR [esi+edi*1+0x4ea1725a]
  4369ae:	pop    edx
  4369af:	jg     0x436988
  4369b1:	addr16 add al,0x0
  4369b4:	xchg   esp,eax
  4369b5:	loopne 0x43698b
  4369b7:	pxor   mm5,QWORD PTR [ebx+0x26]
  4369bb:	cmc    
  4369bc:	jmp    0x4369ef
  4369be:	test   cl,al
  4369c0:	xchg   ebp,eax
  4369c1:	push   0x4f0dfffd
  4369c6:	or     eax,0xa0a6d07d
  4369cb:	push   ebp
  4369cc:	jno    0x43695f
  4369ce:	fidivr DWORD PTR [eax+ebx*8+0x17ec8693]
  4369d5:	xor    edi,ecx
  4369d7:	test   BYTE PTR [ecx+0x77],ah
  4369da:	shl    BYTE PTR cs:[ebx-0x2a7abb36],0x27
  4369e2:	adc    BYTE PTR fs:[edi+0x3984ce28],cl
  4369e9:	imul   ecx,DWORD PTR [ebx+eax*2-0x58380ec8],0x1d
  4369f1:	popf   
  4369f2:	test   eax,0x29d90087
  4369f7:	mov    WORD PTR [ebx+0x40],es
  4369fa:	add    DWORD PTR [eax-0x39],esi
  4369fd:	sub    edi,DWORD PTR [edx+0x24]
  436a00:	rcl    BYTE PTR [ebx],0xc6
  436a03:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  436a04:	xor    DWORD PTR [edi+edx*8+0x63],edx
  436a08:	push   edx
  436a09:	loopne 0x436a15
  436a0b:	into   
  436a0c:	push   es
  436a0d:	pop    ds
  436a0e:	mov    edi,fs
  436a10:	add    edx,DWORD PTR [eax+eax*1-0x3c6f4b1e]
  436a17:	inc    eax
  436a18:	jge    0x4369ea
  436a1a:	mov    ebp,0xbde08f4a
  436a1f:	inc    edx
  436a20:	les    esp,FWORD PTR [eax+0x42]
  436a23:	adc    eax,0xeef6196e
  436a28:	mov    BYTE PTR [esi+0x4c803479],cl
  436a2e:	add    bh,ah
  436a30:	add    edx,DWORD PTR [eax+edx*4-0x3a7f7ef7]
  436a37:	inc    edx
  436a38:	add    al,0x87
  436a3a:	push   es
  436a3b:	scas   eax,DWORD PTR es:[edi]
  436a3c:	sub    ah,0x1
  436a3f:	(bad)  
  436a40:	jno    0x436a55
  436a42:	(bad)  
  436a43:	pop    edx
  436a44:	cmp    esp,ecx
  436a46:	mul    bl
  436a48:	mov    dl,BYTE PTR [edi+0x6c]
  436a4b:	outs   dx,BYTE PTR ds:[esi]
  436a4c:	dec    esp
  436a4d:	pop    ss
  436a4e:	inc    ecx
  436a4f:	mov    ah,0x2a
  436a51:	adc    esi,eax
  436a53:	fimul  DWORD PTR [eax+0x13a447a4]
  436a59:	add    BYTE PTR [ecx+eax*1-0x19],dl
  436a5d:	add    ebx,DWORD PTR [ecx]
  436a5f:	mov    esi,0x83928af6
  436a64:	out    0x7,eax
  436a66:	sbb    DWORD PTR [ecx],edx
  436a68:	pusha  
  436a69:	or     bl,BYTE PTR [ecx]
  436a6b:	add    bl,ch
  436a6d:	inc    esp
  436a6e:	xchg   esi,eax
  436a6f:	add    edi,esp
  436a71:	add    edx,DWORD PTR [esi+ecx*8-0x2a284601]
  436a78:	test   BYTE PTR [ebx+ebx*2],al
  436a7b:	lods   al,BYTE PTR ds:[esi]
  436a7c:	push   ecx
  436a7d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  436a7e:	xchg   esi,eax
  436a7f:	add    BYTE PTR [eax],al
  436a81:	jmp    0xe4b5ac32
  436a86:	jns    0x436a74
  436a88:	jnp    0x436ad6
  436a8a:	sub    al,0x0
  436a8c:	jae    0x436a7a
  436a8e:	pop    eax
  436a8f:	xor    al,0xf8
  436a91:	cmp    eax,ebp
  436a93:	xor    eax,0x87953ac9
  436a98:	jnp    0x436a47
  436a9a:	stc    
  436a9b:	outs   dx,BYTE PTR ds:[esi]
  436a9c:	stc    
  436a9d:	jmp    0x6d15f039
  436aa2:	xor    esp,DWORD PTR [ebx]
  436aa4:	add    dh,ah
  436aa6:	call   0x9488bd66
  436aab:	jb     0x436ad2
  436aad:	js     0x436abe
  436aaf:	adc    DWORD PTR [esi],edi
  436ab1:	push   0xffffff8d
  436ab3:	stc    
  436ab4:	jno    0x436a3c
  436ab6:	or     al,0xd3
  436ab8:	pop    es
  436ab9:	fs sub edx,0x45006c0c
  436ac0:	hlt    
  436ac1:	add    ch,BYTE PTR [edx+0x6f]
  436ac4:	outs   dx,DWORD PTR ds:[esi]
  436ac5:	ins    DWORD PTR es:[edi],dx
  436ac6:	jecxz  0x436a88
  436ac8:	enter  0x217c,0x58
  436acc:	aad    0x84
  436ace:	dec    esp
  436acf:	repnz stos DWORD PTR es:[edi],eax
  436ad1:	sub    eax,0x4385b129
  436ad6:	outs   dx,DWORD PTR ds:[esi]
  436ad7:	jmp    FWORD PTR [ebp-0x7]
  436ada:	jmp    0x744bd076
  436adf:	sti    
  436ae0:	and    eax,DWORD PTR [eax]
  436ae2:	jmp    0x8fd36b7e
  436ae7:	or     al,0xbc
  436ae9:	add    ah,BYTE PTR [ebp-0x4f]
  436aec:	imul   eax,DWORD PTR [ebp+0x0],0xffffff80
  436af0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  436af1:	jnp    0x436ab3
  436af3:	jg     0x436b59
  436af5:	or     BYTE PTR [eax+esi*2-0x7a],0x7b
  436afa:	clc    
  436afb:	dec    ebx
  436afc:	jo     0x436ae0
  436afe:	mov    ebp,DWORD PTR [eax+0x69758314]
  436b04:	aaa    
  436b05:	rol    BYTE PTR [ebp+0x66227134],0xee
  436b0c:	sub    BYTE PTR [ebx],bh
  436b0e:	add    BYTE PTR [ecx+0x61b70707],dl
  436b14:	inc    edi
  436b15:	or     BYTE PTR [edi+0x667d4fa1],dh
  436b1b:	mov    ah,0x0
  436b1d:	dec    esi
  436b1e:	psrld  mm2,QWORD PTR [eax]
  436b21:	cmp    esp,DWORD PTR [esi+0x0]
  436b24:	or     al,BYTE PTR [ecx+0x4e]
  436b27:	test   BYTE PTR [eax-0x497bb1b0],bh
  436b2d:	dec    edi
  436b2e:	add    DWORD PTR [eax-0x2a],eax
  436b31:	les    ebp,FWORD PTR [ecx-0x29]
  436b34:	xchg   dh,al
  436b36:	jp     0x436b20
  436b38:	in     eax,dx
  436b39:	lods   al,BYTE PTR ds:[esi]
  436b3a:	idiv   edi
  436b3c:	push   0xffffffe9
  436b3e:	jae    0x436b79
  436b40:	and    eax,0x30c70c5e
  436b45:	(bad)  
  436b46:	pop    ss
  436b47:	dec    esi
  436b48:	sub    eax,0x4d45bf02
  436b4d:	dec    esp
  436b4e:	inc    edi
  436b4f:	inc    eax
  436b50:	mov    ebp,0x66e4457c
  436b55:	xor    al,0xb8
  436b57:	cwde   
  436b58:	clc    
  436b59:	inc    ecx
  436b5a:	stc    
  436b5b:	sub    al,0xaf
  436b5d:	add    eax,DWORD PTR [eax]
  436b5f:	add    BYTE PTR [edi+edi*1],ah
  436b62:	aad    0xb8
  436b64:	push   ebp
  436b65:	aaa    
  436b66:	cmp    DWORD PTR [eax],eax
  436b68:	xchg   esp,eax
  436b69:	inc    esp
  436b6a:	add    edi,esi
  436b6c:	fwait
  436b6d:	push   edi
  436b6e:	mov    WORD PTR [ebx+0x74],es
  436b71:	push   ds
  436b72:	mov    edi,0xfd5894e3
  436b77:	jmp    FWORD PTR [edi+0x64]
  436b7a:	mov    WORD PTR [ebx+0x74],?
  436b7d:	loopne 0x436b6d
  436b7f:	fistp  DWORD PTR [ebx+0x1c]
  436b82:	pusha  
  436b83:	or     eax,0x84fd5794
  436b88:	add    cl,bl
  436b8a:	imul   ecx,DWORD PTR [edx+0x74240d00],0xffffff87
  436b91:	loope  0x436b32
  436b93:	mov    cl,BYTE PTR [ebx+0x48]
  436b96:	jg     0x436b9c
  436b98:	add    BYTE PTR [edi+edx*2-0x6d781fae],dl
  436b9f:	mov    WORD PTR [ebx+0x2c],?
  436ba2:	lock xlat BYTE PTR ds:[ebx]
  436ba4:	jmp    0x436bc5
  436ba6:	lahf   
  436ba7:	mov    BYTE PTR [eax+0x23],cl
  436baa:	loopne 0x436ba3
  436bac:	iret   
  436bad:	or     eax,0x61875024
  436bb2:	mov    bl,0x82
  436bb4:	not    BYTE PTR [ebp+0x683afe74]
  436bba:	pop    edx
  436bbb:	std    
  436bbc:	(bad)  
  436bbd:	out    dx,eax
  436bbe:	pusha  
  436bbf:	xor    dh,0x96
  436bc2:	dec    esp
  436bc3:	or     bh,BYTE PTR [ebx]
  436bc5:	inc    esp
  436bc6:	pop    ecx
  436bc7:	std    
  436bc8:	call   DWORD PTR [ebx-0x2401e926]
  436bce:	push   esi
  436bcf:	mov    WORD PTR [ebx-0x44],?
  436bd2:	ror    DWORD PTR [ebx],1
  436bd4:	mov    ebp,DWORD PTR [edi]
  436bd6:	push   edi
  436bd7:	std    
  436bd8:	call   DWORD PTR [edx+eiz*8-0x6bf13009]
  436bdf:	jne    0x436b66
  436be1:	sub    DWORD PTR [eax],eax
  436be3:	or     ebp,DWORD PTR ds:0x14b477d9
  436be9:	sbb    ebx,edx
  436beb:	dec    BYTE PTR [ecx]
  436bed:	add    ch,ah
  436bef:	add    DWORD PTR [esi+0x4b],ebx
  436bf2:	leave  
  436bf3:	cmp    al,BYTE PTR [ecx+eax*1+0x3d6c656]
  436bfa:	jns    0x436c1c
  436bfc:	jno    0x436c1c
  436bfe:	lea    esi,[ebx+0x60df8ee5]
  436c04:	out    0x43,al
  436c06:	adc    dl,BYTE PTR ds:0x4ccf8cef
  436c0c:	pop    edi
  436c0d:	iret   
  436c0e:	mov    esp,edx
  436c10:	pop    ebp
  436c11:	adc    BYTE PTR [edx+eiz*8+0x5799cf6f],bl
  436c18:	in     eax,dx
  436c19:	inc    ecx
  436c1a:	xlat   BYTE PTR ds:[ebx]
  436c1b:	adc    BYTE PTR [edi+0x35],al
  436c1e:	push   esp
  436c1f:	jecxz  0x436c80
  436c21:	mov    edi,0x7c3477a1
  436c26:	jno    0x436c5f
  436c28:	outs   dx,BYTE PTR ds:[esi]
  436c29:	inc    ecx
  436c2a:	sbb    esi,ebp
  436c2c:	cmp    BYTE PTR [esi+0x3e76c1b],0xe1
  436c33:	pop    esi
  436c34:	outs   dx,BYTE PTR ds:[esi]
  436c35:	dec    ebp
  436c36:	fstp   DWORD PTR [ebx+0x6e]
  436c39:	(bad)  
  436c3a:	repz jns 0x436c69
  436c3d:	dec    esp
  436c3e:	sysexit 
  436c40:	push   esp
  436c41:	add    al,0x94
  436c43:	add    bh,ah
  436c45:	add    al,0xec
  436c47:	jge    0x436c34
  436c49:	mov    edx,0x2cf6ee19
  436c4e:	into   
  436c4f:	pop    ss
  436c50:	and    eax,0xf58b008b
  436c55:	lea    esp,ds:[edi+0x68]
  436c59:	ins    BYTE PTR es:[edi],dx
  436c5a:	into   
  436c5b:	mov    esp,0x97e800a8
  436c60:	add    BYTE PTR [eax],al
  436c62:	sbb    bh,BYTE PTR [eax]
  436c64:	test   DWORD PTR [ebx+0x15],ecx
  436c67:	sub    ebp,DWORD PTR [ebx-0x3be50f8c]
  436c6d:	push   DWORD PTR [edi]
  436c6f:	sub    BYTE PTR [edi-0x41],bh
  436c72:	xchg   esp,eax
  436c73:	adc    DWORD PTR [eax+0x779e7dc0],eax
  436c79:	js     0x436c79
  436c7b:	mov    eax,0xe8f0fd73
  436c80:	push   0x2e
  436c82:	out    dx,al
  436c83:	sbb    BYTE PTR [edi+0x692febe7],bh
  436c89:	stc    
  436c8a:	jmp    0x2d424b26
  436c8f:	dec    ebx
  436c90:	lahf   
  436c91:	xchg   DWORD PTR [esp+edi*4-0x11],ecx
  436c95:	adc    al,0x2
  436c97:	pop    ebx
  436c98:	outs   dx,DWORD PTR ds:[esi]
  436c99:	or     DWORD PTR [ebp-0x25],esp
  436c9c:	add    BYTE PTR [eax],al
  436c9e:	jmp    0xdf2b23ab
  436ca3:	in     al,0xfa
  436ca5:	test   BYTE PTR [esp+ebx*4],ch
  436ca8:	stc    
  436ca9:	mov    al,0xed
  436cab:	inc    edi
  436cac:	or     BYTE PTR [ebx-0x6f],0x8
  436cb0:	cmp    esi,DWORD PTR ds:0x81f98c34
  436cb6:	int    0x0
  436cb8:	mov    WORD PTR [ecx-0x7],gs
  436cbb:	jb     0x436caf
  436cbd:	ss sbb eax,0xc3ef0e7e
  436cc3:	mov    dl,0x2
  436cc5:	push   ebx
  436cc6:	or     DWORD PTR [ebp-0x80],ebp
  436cc9:	imul   edi,ecx,0x7355625e
  436ccf:	jmp    0x5ae2:0x62fbc708
  436cd6:	test   DWORD PTR [eax],eax
  436cd8:	clc    
  436cd9:	mov    dh,0x84
  436cdb:	or     al,0x2f
  436cdd:	jbe    0x436d24
  436cdf:	lock ss inc edx
  436ce2:	icebp  
  436ce3:	sub    esi,DWORD PTR [esi-0x59]
  436ce6:	stc    
  436ce7:	(bad)  
  436ce8:	mov    ebp,0xa61484fe
  436ced:	rcr    edi,cl
  436cef:	cmp    ebx,eax
  436cf1:	fisubr DWORD PTR [edx+0x1c]
  436cf4:	lock pop ecx
  436cf6:	dec    esi
  436cf7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  436cf8:	xor    BYTE PTR [ecx-0x1545d4ca],0xbf
  436cff:	jle    0x436d72
  436d01:	inc    esp
  436d02:	cmp    al,BYTE PTR [ebx-0x4004fc45]
  436d08:	mov    dh,0x4f
  436d0a:	in     eax,dx
  436d0b:	jb     0x436d53
  436d0d:	jbe    0x436d7c
  436d0f:	(bad)  
  436d10:	test   BYTE PTR [edi-0x33],0x8b
  436d14:	js     0x436d12
  436d16:	mov    dh,0x1
  436d18:	cmp    eax,0xd2fffe
  436d1d:	pop    edx
  436d1e:	dec    dh
  436d20:	mov    DWORD PTR [eax+0x95580d4],eax
  436d26:	jle    0x436d20
  436d28:	add    DWORD PTR [eax+0x69fa78fc],ecx
  436d2e:	std    
  436d2f:	(bad)  
  436d30:	call   DWORD PTR [esi]
  436d32:	idiv   BYTE PTR [edx-0x8]
  436d35:	push   DWORD PTR [eax+0x5]
  436d38:	adc    DWORD PTR [edi],0xedfffb55
  436d3e:	add    bh,BYTE PTR [ebx-0x50]
  436d41:	in     eax,dx
  436d42:	std    
  436d43:	dec    DWORD PTR [edx+0x146d763b]
  436d49:	data16 cli 
  436d4b:	xchg   DWORD PTR [edi+ebp*2],ecx
  436d4e:	jne    0x436d56
  436d50:	mov    dl,BYTE PTR [esp+ebp*4-0x2797778f]
  436d57:	add    al,BYTE PTR [ebp-0x1039117e]
  436d5d:	outs   dx,DWORD PTR ds:[esi]
  436d5e:	sbb    DWORD PTR [ebx-0x9],eax
  436d61:	xchg   esi,eax
  436d62:	loopne 0x436d22
  436d64:	xlat   BYTE PTR ds:[ebx]
  436d65:	cmp    ah,al
  436d67:	mov    DWORD PTR [ecx-0x615ef6a],0xbe860aa3
  436d71:	outs   dx,BYTE PTR ds:[esi]
  436d72:	push   ss
  436d73:	sub    eax,0xda45ac7
  436d78:	inc    eax
  436d79:	sbb    al,0x9c
  436d7b:	adc    al,0x62
  436d7d:	or     eax,0x830f9c
  436d82:	jnp    0x436d6f
  436d84:	rol    DWORD PTR [ecx+ebp*8-0x1f2a7f99],cl
  436d8b:	add    eax,DWORD PTR [ebp+0x38f65043]
  436d91:	xor    eax,0xde9afd1
  436d96:	pop    ds
  436d97:	and    al,0x78
  436d99:	test   ecx,ebx
  436d9b:	dec    ebx
  436d9c:	xchg   BYTE PTR [edi],ch
  436d9e:	xchg   DWORD PTR [esi-0x20c3bc74],ebx
  436da4:	mov    edi,0x86871f0e
  436da9:	lds    ebx,FWORD PTR [edi]
  436dab:	call   0x8714:0x1c0fe84e
  436db2:	mov    cl,bl
  436db4:	xchg   DWORD PTR [esi+0x13],eax
  436db7:	iret   
  436db8:	add    eax,DWORD PTR [eax]
  436dba:	xchg   esp,eax
  436dbb:	push   edi
  436dbc:	dec    esi
  436dbd:	loopne 0x436dd8
  436dbf:	mov    ds:0x882400e9,al
  436dc4:	gs sbb ebx,0x73
  436dc8:	ja     0x436d4d
  436dca:	aam    0xff
  436dcc:	fimul  DWORD PTR [edi+ecx*1]
  436dcf:	mov    eax,0xfce32259
  436dd4:	dec    esi
  436dd5:	lock add DWORD PTR [ebp-0x4c],esi
  436dd9:	dec    edi
  436dda:	adc    ebx,eax
  436ddc:	fimul  DWORD PTR [eax+0x3e79390]
  436de2:	xchg   esp,eax
  436de3:	add    al,ch
  436de5:	or     eax,DWORD PTR [eax]
  436de7:	sbb    ebx,eax
  436de9:	sub    cl,BYTE PTR [edx-0x2a3df7b9]
  436def:	sbb    bh,dh
  436df1:	aad    0x43
  436df3:	inc    ecx
  436df4:	jne    0x436e02
  436df6:	fcom   DWORD PTR [eax-0x38]
  436df9:	test   al,0xbb
  436dfb:	mov    ebp,DWORD PTR [eax-0x19]
  436dfe:	add    ebp,ecx
  436e00:	jnp    0x436e06
  436e02:	fdivr  DWORD PTR [eax]
  436e04:	xor    eax,0x129c1ff2
  436e09:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  436e0a:	add    ebx,DWORD PTR [eax+0x35]
  436e0d:	outs   dx,BYTE PTR ds:[esi]
  436e0e:	inc    edx
  436e0f:	and    DWORD PTR [ecx-0x3c3313b1],edx
  436e15:	out    0xdf,al
  436e17:	xor    al,BYTE PTR [ecx]
  436e19:	out    0x3,eax
  436e1b:	xchg   esp,eax
  436e1c:	shr    BYTE PTR [ebp-0x40],1
  436e1f:	ja     0x436e31
  436e21:	jo     0x436e0b
  436e23:	ja     0x436e35
  436e25:	fs call 0x64417ea2
  436e2b:	fxch   st(6)
  436e2d:	cmp    DWORD PTR [ecx-0x208f9729],ecx
  436e33:	xor    edx,ecx
  436e35:	pop    ebp
  436e36:	mov    edi,0x7824400f
  436e3b:	or     eax,0x1b758268
  436e40:	mov    esi,0x7057877e
  436e45:	add    BYTE PTR ds:0xe9000135,cl
  436e4b:	add    BYTE PTR [edi+0x67b485a5],dl
  436e51:	fadd   QWORD PTR [esi+0x97ec]
  436e57:	jmp    0xb29d374a
  436e5c:	pop    esi
  436e5d:	mov    bh,0xbc
  436e5f:	inc    esi
  436e60:	mov    ds:0x97a911d8,eax
  436e65:	xor    al,0xcc
  436e67:	call   0xfd88:0x5447ce1
  436e6e:	mov    edi,0x4c7d7f9c
  436e73:	lds    ecx,FWORD PTR [ebx-0x5832bb83]
  436e79:	adc    eax,0x7e0716ce
  436e7e:	fdiv   DWORD PTR [edx+0x54]
  436e81:	and    ecx,DWORD PTR [esi+esi*8]
  436e84:	push   es
  436e85:	jle    0x436e54
  436e87:	add    dl,BYTE PTR [edi+0x7c]
  436e8a:	enter  0x4c62,0x23
  436e8e:	adc    al,0x72
  436e90:	push   ebx
  436e91:	and    edx,DWORD PTR [eax]
  436e93:	jb     0x436eb0
  436e95:	and    ecx,DWORD PTR [eax+edi*4]
  436e98:	mov    esi,0xbdb8d537
  436e9d:	aaa    
  436e9e:	fdiv   st,st(2)
  436ea0:	into   
  436ea1:	repz repz mov dh,0xc4
  436ea5:	jge    0x436e97
  436ea7:	mov    esi,0x62182353
  436eac:	fistp  QWORD PTR [ebp+0x44]
  436eaf:	int    0x0
  436eb1:	xchg   ebx,eax
  436eb2:	jno    0x436e96
  436eb4:	jmp    0x22e3:0xd209d6c6
  436ebb:	adc    BYTE PTR [esi],dl
  436ebd:	cwde   
  436ebe:	(bad)  
  436ebf:	add    BYTE PTR [eax],al
  436ec1:	(bad)  
  436ec2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  436ec3:	sbb    eax,0x4602030c
  436ec8:	xor    ecx,DWORD PTR [edi]
  436eca:	js     0x436e8a
  436ecc:	pop    esi
  436ecd:	xchg   dl,al
  436ecf:	(bad)  
  436ed1:	jnp    0x436ebf
  436ed3:	idiv   bh
  436ed5:	in     eax,dx
  436ed6:	add    al,BYTE PTR [eax]
  436ed8:	add    BYTE PTR [ebp-0x42000914],al
  436ede:	add    al,BYTE PTR [eax]
  436ee0:	add    BYTE PTR [ebx-0x14],bl
  436ee3:	idiv   bh
  436ee5:	mov    DWORD PTR [ecx],0x1cb003b
  436eeb:	cmp    eax,DWORD PTR [eax]
  436eed:	mov    ebp,0x7a000002
  436ef2:	in     al,dx
  436ef3:	idiv   bh
  436ef5:	dec    eax
  436ef6:	mov    dh,0x39
  436ef8:	add    ah,ch
  436efa:	mov    dh,0x39
  436efc:	add    BYTE PTR [ebp+0x2],bh
  436eff:	add    BYTE PTR [eax],al
  436f01:	call   0x39b7:0x3cfff6ec
  436f08:	add    BYTE PTR [eax],dh
  436f0a:	mov    bh,0x39
  436f0c:	add    BYTE PTR [ebp+0x2],bh
  436f0f:	add    BYTE PTR [eax],al
  436f11:	jp     0x436f05
  436f13:	idiv   bh
  436f15:	add    BYTE PTR [ecx-0x32],dl
  436f18:	cmp    DWORD PTR [eax],eax
  436f1a:	push   ebp
  436f1b:	into   
  436f1c:	cmp    DWORD PTR [eax],eax
  436f1e:	cmp    eax,0x5a000002
  436f23:	repnz idiv bh
  436f26:	pop    esp
  436f27:	iret   
  436f28:	cmp    DWORD PTR [eax],eax
  436f2a:	push   eax
  436f2b:	iret   
  436f2c:	cmp    DWORD PTR [eax],eax
  436f2e:	cmp    eax,0xfa000002
  436f33:	icebp  
  436f34:	idiv   bh
  436f36:	mov    ebp,0x94003a41
  436f3b:	ret    
  436f3c:	mov    esp,0xfd57943e
  436f41:	call   DWORD PTR [esi+edi*2-0x3c040693]
  436f48:	dec    edx
  436f49:	inc    eax
  436f4a:	xchg   esp,eax
  436f4b:	mov    bh,0x4a
  436f4d:	inc    eax
  436f4e:	xchg   esp,eax
  436f4f:	push   edi
  436f50:	std    
  436f51:	call   DWORD PTR [esi+ebx*8+0x41dbf96c]
  436f58:	dec    esp
  436f59:	inc    eax
  436f5a:	xchg   esp,eax
  436f5b:	lods   eax,DWORD PTR ds:[esi]
  436f5c:	dec    esp
  436f5d:	inc    eax
  436f5e:	xchg   esp,eax
  436f5f:	push   edi
  436f60:	std    
  436f61:	call   DWORD PTR [esi+edi*4-0x7a440694]
  436f68:	scas   al,BYTE PTR es:[edi]
  436f69:	ds xchg esp,eax
  436f6b:	cmp    DWORD PTR [esi-0x2a86bc2],ebp
  436f71:	call   DWORD PTR [esi+ebx*1-0x15640693]
  436f78:	push   edi
  436f79:	add    BYTE PTR ds:[esi+eiz*8+0x57943e57],dl
  436f81:	std    
  436f82:	call   DWORD PTR [esi+edi*8+0x287bf96c]
  436f89:	xchg   ebx,eax
  436f8a:	ds xchg esp,eax
  436f8c:	and    al,0x93
  436f8e:	ds xchg esp,eax
  436f90:	push   edi
  436f91:	std    
  436f92:	call   DWORD PTR [esi+ebx*2-0x45a40692]
  436f99:	xchg   ebx,eax
  436f9a:	ds xchg esp,eax
  436f9c:	mov    dh,0x93
  436f9e:	ds xchg esp,eax
  436fa0:	push   edi
  436fa1:	std    
  436fa2:	call   DWORD PTR [edi+edx*2+0x5794fffd]
  436fa9:	std    
  436faa:	call   DWORD PTR [esp+eax*1-0x1f8c137f]
  436fb1:	addr16 dec edi
  436fb3:	mov    BYTE PTR [eax],0x39
  436fb6:	pop    esp
  436fb7:	adc    al,0x10
  436fb9:	out    0x3,eax
  436fbb:	je     0x436fcc
  436fbd:	out    0x3,eax
  436fbf:	push   0x5c03e70f
  436fc4:	movntq QWORD PTR [ebx],mm0
  436fc7:	pusha  
  436fc8:	movntq QWORD PTR [ebx],mm0
  436fcb:	js     0x436fdc
  436fcd:	out    0x3,eax
  436fcf:	or     BYTE PTR [edi],cl
  436fd1:	out    0x3,eax
  436fd3:	or     al,0xf
  436fd5:	out    0x3,eax
  436fd7:	adc    BYTE PTR [edi],cl
  436fd9:	out    0x3,eax
  436fdb:	push   esp
  436fdc:	movntq QWORD PTR [ebx],mm0
  436fdf:	add    BYTE PTR [eax+0x7c03e70f],cl
  436fe5:	movntq QWORD PTR [ebx],mm0
  436fe8:	or     BYTE PTR [edi],0xe7
  436feb:	add    ebx,DWORD PTR [eax+0xf]
  436fee:	out    0x3,eax
  436ff0:	sub    BYTE PTR [edi],cl
  436ff2:	out    0x3,eax
  436ff4:	sub    al,0xf
  436ff6:	out    0x3,eax
  436ff8:	arpl   WORD PTR [edx],cx
  436ffa:	out    0x3,eax
  436ffc:	mov    ah,0x11
  436ffe:	out    0x3,eax
  437000:	test   al,0x11
  437002:	out    0x3,eax
  437004:	pushf  
  437005:	adc    edi,esp
  437007:	add    esp,DWORD PTR [eax-0x47fc18ef]
  43700d:	adc    edi,esp
  43700f:	add    ecx,eax
  437011:	adc    edi,esp
  437013:	add    ecx,esp
  437015:	adc    edi,esp
  437017:	add    edx,eax
  437019:	adc    edi,esp
  43701b:	add    edx,DWORD PTR [ecx+edx*1+0x114803e7]
  437022:	out    0x3,eax
  437024:	cmp    al,0x11
  437026:	out    0x3,eax
  437028:	inc    eax
  437029:	adc    edi,esp
  43702b:	add    ebx,DWORD PTR [eax-0x6816ffef]
  437031:	and    al,0xf
  437033:	jmp    0xe95288cf
  437038:	xchg   edi,eax
  437039:	sbb    al,0xf
  43703b:	jmp    0xe953d0d7
  437040:	xchg   edi,eax
  437041:	inc    esp
  437042:	adc    cl,ch
  437044:	add    BYTE PTR [edi-0x6816efb8],dl
  43704a:	dec    esp
  43704b:	adc    cl,ch
  43704d:	xchg   edi,eax
  43704e:	pop    esp
  43704f:	adc    cl,ch
  437051:	xchg   edi,eax
  437052:	add    al,0xf
  437054:	jmp    0xe9530ef0
  437059:	xchg   edi,eax
  43705a:	cld    
  43705b:	push   cs
  43705c:	jmp    0xe953b0f8
  437061:	xchg   edi,eax
  437062:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  437063:	adc    cl,ch
  437065:	xchg   edi,eax
  437066:	test   al,0x10
  437068:	jmp    0xe9541d04
  43706d:	xchg   edi,eax
  43706e:	cmp    al,0x10
  437070:	jmp    0xe953d50c
  437075:	xchg   edi,eax
  437076:	jle    0x437087
  437078:	jmp    0xe953cd14
  43707d:	xchg   edi,eax
  43707e:	mov    al,ds:0x8497e910
  437083:	adc    cl,ch
  437085:	xchg   edi,eax
  437086:	mov    BYTE PTR [eax],dl
  437088:	jmp    0xe953fd24
  43708d:	xchg   edi,eax
  43708e:	pushf  
  43708f:	adc    cl,ch
  437091:	xchg   edi,eax
  437092:	inc    esp
  437093:	adc    cl,ch
  437095:	xchg   edi,eax
  437096:	fimul  WORD PTR [esi]
  437098:	jmp    0xe953ad34
  43709d:	xchg   edi,eax
  43709e:	adc    BYTE PTR [eax],0xe9
  4370a1:	xchg   edi,eax
  4370a2:	in     al,0xf
  4370a4:	jmp    0x535940
  4370a9:	add    BYTE PTR ds:0x3d1073ff,ch
  4370af:	inc    DWORD PTR [ebx-0x4400c2f0]
  4370b5:	adc    BYTE PTR ds:0x2d113dff,ch
  4370bb:	jmp    DWORD PTR [ebx+0xffefd10]
  4370c1:	adc    ebp,edi
  4370c3:	dec    BYTE PTR [ebx]
  4370c5:	adc    ebp,ebp
  4370c7:	inc    BYTE PTR [edi]
  4370c9:	adc    ebp,ebp
  4370cb:	inc    BYTE PTR [ebx]
  4370cd:	adc    ebp,edi
  4370cf:	(bad)  
  4370d0:	call   DWORD PTR [eax]
  4370d2:	std    
  4370d3:	(bad)  
  4370d4:	sti    
  4370d5:	adc    ch,ch
  4370d7:	(bad)  
  4370d8:	not    DWORD PTR [eax]
  4370da:	in     eax,dx
  4370db:	(bad)  
  4370dc:	repz adc BYTE PTR [ebp-0x42ef3c02],bh
  4370e3:	(bad)  
  4370e4:	mov    edi,0xbbfead10
  4370e9:	adc    BYTE PTR [ebp-0x42ef4802],ch
  4370ef:	(bad)  
  4370f0:	mov    bl,0x10
  4370f2:	mov    ebp,0xad10affe
  4370f7:	(bad)  
  4370f8:	stos   DWORD PTR es:[edi],eax
  4370f9:	adc    BYTE PTR [ebp+0x7d10a7fe],ch
  4370ff:	(bad)  
  437100:	das    
  437101:	adc    BYTE PTR [ebp-0x2],bh
  437104:	sub    edx,DWORD PTR [eax]
  437106:	ins    DWORD PTR es:[edi],dx
  437107:	(bad)  
  437108:	daa    
  437109:	adc    BYTE PTR [ebp-0x2],ch
  43710c:	and    edx,DWORD PTR [eax]
  43710e:	add    BYTE PTR [ebp-0x2],bh
  437111:	pop    ds
  437112:	adc    BYTE PTR [ebp-0x2],bh
  437115:	sbb    edx,DWORD PTR [eax]
  437117:	ins    DWORD PTR es:[edi],dx
  437118:	(bad)  
  437119:	pop    ss
  43711a:	adc    BYTE PTR [ebp-0x2],ch
  43711d:	adc    edx,DWORD PTR [eax]
  43711f:	cmp    eax,0x94100ffe
  437124:	push   edi
  437125:	std    
  437126:	or     esp,DWORD PTR [edi+edx*2+0x57a407fd]
  43712d:	std    
  43712e:	add    eax,DWORD PTR [edi+edx*2+0x5784fffd]
  437135:	std    
  437136:	sti    
  437137:	xchg   ebx,eax
  437138:	push   edi
  437139:	std    
  43713a:	test   DWORD PTR [ebx-0x5c0c02a9],0x9beffd57
  437144:	push   edi
  437145:	std    
  437146:	jmp    0x4370db
  437148:	push   edi
  437149:	std    
  43714a:	or     DWORD PTR [ebp-0x5c2c02a9],esp
  437150:	push   edi
  437151:	std    
  437152:	test   eax,0xa5fd5784
  437157:	test   BYTE PTR [edi-0x3],dl
  43715a:	mov    eax,0xebfd5783
  43715f:	stos   DWORD PTR es:[edi],eax
  437160:	push   edi
  437161:	std    
  437162:	(bad)  
  437163:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  437164:	push   edi
  437165:	std    
  437166:	mov    ds:0xcbfd57a5,eax
  43716b:	mov    edx,DWORD PTR [edi-0x3]
  43716e:	sub    BYTE PTR [edi+edx*2-0x64ff4003],al
  437175:	push   edi
  437176:	std    
  437177:	mov    ebx,0xb7fd5793
  43717c:	mov    edx,DWORD PTR [edi-0x3]
  43717f:	mov    bl,0xa3
  437181:	push   edi
  437182:	std    
  437183:	mov    bl,0x9b
  437185:	push   edi
  437186:	std    
  437187:	scas   eax,DWORD PTR es:[edi]
  437188:	xchg   ebx,eax
  437189:	push   edi
  43718a:	std    
  43718b:	stos   DWORD PTR es:[edi],eax
  43718c:	mov    edx,DWORD PTR [edi-0x3]
  43718f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  437190:	mov    ds:0x9ba3fd57,eax
  437195:	push   edi
  437196:	std    
  437197:	lahf   
  437198:	xchg   ebx,eax
  437199:	push   edi
  43719a:	std    
  43719b:	fwait
  43719c:	mov    eax,DWORD PTR [eax]
  43719e:	out    0x3,eax
  4371a0:	sub    al,0xf1
  4371a2:	out    0x3,al
  4371a4:	and    cl,dh
  4371a6:	out    0x3,al
  4371a8:	and    al,0xf1
  4371aa:	out    0x3,al
  4371ac:	or     cl,dh
  4371ae:	out    0x3,al
  4371b0:	sbb    al,0xf1
  4371b2:	out    0x3,al
  4371b4:	adc    cl,dh
  4371b6:	out    0x3,al
  4371b8:	adc    al,0xf1
  4371ba:	out    0x3,al
  4371bc:	cwde   
  4371bd:	icebp  
  4371be:	out    0x3,al
  4371c0:	mov    ecx,?
  4371c2:	out    0x3,al
  4371c4:	loope  0x4371b6
  4371c6:	out    0x3,al
  4371c8:	test   BYTE PTR [esi],0xe7
  4371cb:	add    ecx,eax
  4371cd:	push   cs
  4371ce:	out    0x3,eax
  4371d0:	(bad)  
  4371d2:	out    0x3,al
  4371d4:	inc    esp
  4371d5:	icebp  
  4371d6:	out    0x3,al
  4371d8:	add    BYTE PTR [eax-0xf],dl
  4371db:	out    0x3,al
  4371dd:	dec    esp
  4371de:	icebp  
  4371df:	out    0x3,al
  4371e1:	pop    eax
  4371e2:	icebp  
  4371e3:	out    0x3,al
  4371e5:	push   esp
  4371e6:	icebp  
  4371e7:	out    0x3,al
  4371e9:	xor    cl,0xe6
  4371ec:	add    edi,DWORD PTR [ecx+esi*8-0x1a]
  4371f0:	add    ebp,DWORD PTR [eax-0xf]
  4371f3:	out    0x3,al
  4371f5:	fs icebp 
  4371f7:	out    0x3,al
  4371f9:	jo     0x4371ec
  4371fb:	out    0x3,al
  4371fd:	ins    BYTE PTR es:[edi],dx
  4371fe:	icebp  
  4371ff:	out    0x3,al
  437201:	fdivrp st(1),st
  437203:	out    0x3,al
  437205:	les    ecx,FWORD PTR [edi]
  437207:	out    0x3,eax
  437209:	mov    al,0xf
  43720b:	out    0x3,eax
  43720d:	lods   al,BYTE PTR ds:[esi]
  43720e:	movntq QWORD PTR [ebx],mm0
  437211:	mov    eax,0xb403e70f
  437216:	verw   cx
  437219:	xchg   edi,eax
  43721a:	cld    
  43721b:	or     cl,ch
  43721d:	xchg   edi,eax
  43721e:	clc    
  43721f:	or     cl,ch
  437221:	xchg   edi,eax
  437222:	hlt    
  437223:	or     cl,ch
  437225:	xchg   edi,eax
  437226:	lock or cl,ch
  437229:	xchg   edi,eax
  43722a:	or     al,0x9
  43722c:	jmp    0xe9540fc8
  437231:	xchg   edi,eax
  437232:	add    al,0x9
  437234:	jmp    0xe94c72d0
  437239:	xchg   edi,eax
  43723a:	pop    esp
  43723b:	or     ch,cl
  43723d:	add    BYTE PTR [edi-0x6816f5a8],dl
  437243:	push   esp
  437244:	or     ch,cl
  437246:	xchg   edi,eax
  437247:	les    ecx,FWORD PTR [edi]
  437249:	jmp    0xe95322e5
  43724e:	xchg   edi,eax
  43724f:	sbb    al,0x10
  437251:	jmp    0xe9533aed
  437256:	xchg   edi,eax
  437257:	pusha  
  437258:	or     ch,cl
  43725a:	xchg   edi,eax
  43725b:	cmp    al,0xa
  43725d:	jmp    0xe94daaf9
  437262:	xchg   edi,eax
  437263:	xor    al,0xa
  437265:	jmp    0xe94da701
  43726a:	xchg   edi,eax
  43726b:	or     al,0x9
  43726d:	jmp    0xe94dbb09
  437272:	xchg   edi,eax
  437273:	inc    esp
  437274:	or     ch,cl
  437276:	xchg   edi,eax
  437277:	inc    eax
  437278:	or     ch,cl
  43727a:	xchg   edi,eax
  43727b:	pushf  
  43727c:	or     ch,cl
  43727e:	xchg   edi,eax
  43727f:	cwde   
  437280:	or     ch,cl
  437282:	xchg   edi,eax
  437283:	xchg   esp,eax
  437284:	or     ch,cl
  437286:	xchg   edi,eax
  437287:	xchg   esp,eax
  437288:	or     ch,cl
  43728a:	xchg   edi,eax
  43728b:	nop
  43728c:	or     ch,cl
  43728e:	xchg   edi,eax
  43728f:	lods   al,BYTE PTR ds:[esi]
  437290:	or     al,BYTE PTR [eax]
  437292:	jge    0x437297
  437294:	test   al,0xe
  437296:	jge    0x43729b
  437298:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  437299:	push   cs
  43729a:	ins    DWORD PTR es:[edi],dx
  43729b:	add    esp,DWORD PTR [eax-0x63fc92f2]
  4372a1:	push   cs
  4372a2:	add    BYTE PTR ds:0x3d0e9803,bh
  4372a8:	add    esp,eax
  4372aa:	push   cs
  4372ab:	sub    eax,0x2d0edc03
  4372b0:	add    ebx,eax
  4372b2:	push   cs
  4372b3:	cmp    eax,0x3d0ed403
  4372b8:	add    edx,eax
  4372ba:	push   cs
  4372bb:	sub    eax,0x2d0ecc03
  4372c0:	add    ecx,eax
  4372c2:	push   cs
  4372c3:	std    
  4372c4:	add    al,ah
  4372c6:	push   cs
  4372c7:	std    
  4372c8:	add    dl,bl
  4372ca:	push   cs
  4372cb:	in     eax,dx
  4372cc:	add    cl,bh
  4372ce:	push   cs
  4372cf:	in     eax,dx
  4372d0:	add    ch,BYTE PTR [edi+0x6402fd0f]
  4372d6:	push   cs
  4372d7:	std    
  4372d8:	add    bh,BYTE PTR [esi+0xf]
  4372db:	in     eax,dx
  4372dc:	add    bh,BYTE PTR [edx+0xf]
  4372df:	in     eax,dx
  4372e0:	add    bh,BYTE PTR [ebx+0x3d02bd0e]
  4372e6:	bsr    eax,DWORD PTR [edx]
  4372e9:	ins    BYTE PTR es:[edi],dx
  4372ea:	shrd   DWORD PTR [edx],eax,cl
  4372ed:	dec    esp
  4372ee:	push   cs
  4372ef:	lods   eax,DWORD PTR ds:[esi]
  4372f0:	add    cl,BYTE PTR [edi+0x4402bd0f]
  4372f6:	push   cs
  4372f7:	mov    ebp,0xad0e4002
  4372fc:	add    al,BYTE PTR [eax+0xe]
  4372ff:	lods   eax,DWORD PTR ds:[esi]
  437300:	add    ch,BYTE PTR [eax+0xe]
  437303:	jge    0x437307
  437305:	xor    al,0xe
  437307:	add    BYTE PTR [ebp+0x2],bh
  43730a:	and    BYTE PTR [esi],cl
  43730c:	xchg   esp,eax
  43730d:	addr16 std 
  43730f:	sbb    ecx,DWORD PTR [edx-0x5de80299]
  437315:	addr16 std 
  437317:	adc    ebx,DWORD PTR [edx-0x6cdb0299]
  43731d:	addr16 std 
  43731f:	and    BYTE PTR [ebx-0x5de80299],cl
  437325:	addr16 std 
  437327:	adc    ebx,DWORD PTR [edx-0x547a0299]
  43732d:	addr16 std 
  43732f:	mov    ebx,0x4efd67a3
  437334:	mov    WORD PTR [edi-0x3],fs
  437337:	test   al,0x8c
  437339:	addr16 std 
  43733b:	and    eax,0x77fd677d
  437340:	jge    0x4373a9
  437342:	std    
  437343:	fldcw  WORD PTR [ebp-0x51d10299]
  437349:	addr16 std 
  43734b:	repz xchg ecx,eax
  43734d:	addr16 std 
  43734f:	out    dx,eax
  437350:	mov    DWORD PTR [edi-0x3],esp
  437353:	jmp    0x4372f6
  437355:	addr16 std 
  437357:	out    0x99,eax
  437359:	addr16 std 
  43735b:	jecxz  0x4372ee
  43735d:	addr16 std 
  43735f:	fisttp WORD PTR [ecx-0x5e240299]
  437365:	addr16 std 
  437367:	xlat   BYTE PTR ds:[ebx]
  437368:	cdq    
  437369:	addr16 std 
  43736b:	lldt   WORD PTR [edx-0x75f40299]
  437372:	addr16 std 
  437374:	shl    DWORD PTR [ebx-0x66380299],0x67
  43737b:	std    
  43737c:	mov    edi,0xbbfd6791
  437381:	mov    DWORD PTR [edi-0x3],esp
  437384:	mov    bh,0xa1
  437386:	add    bh,ah
  437388:	add    eax,DWORD PTR [eax+0xb]
  43738b:	out    0x3,eax
  43738d:	dec    BYTE PTR [esi]
  43738f:	out    0x3,eax
  437391:	sub    BYTE PTR [ebx],cl
  437393:	out    0x3,eax
  437395:	xor    ebx,0xf6a603e6
  43739b:	out    0x3,al
  43739d:	xor    al,0xb
  43739f:	out    0x3,eax
  4373a1:	clc    
  4373a2:	or     ah,bh
  4373a4:	add    eax,DWORD PTR [eax-0x1dfc1910]
  4373aa:	lock out 0x3,al
  4373ad:	and    al,0xb
  4373af:	out    0x3,eax
  4373b1:	or     BYTE PTR [ebx],cl
  4373b3:	out    0x3,eax
  4373b5:	sbb    al,0xb
  4373b7:	out    0x3,eax
  4373b9:	adc    BYTE PTR [ebx],cl
  4373bb:	out    0x3,eax
  4373bd:	adc    al,0xb
  4373bf:	out    0x3,eax
  4373c1:	cwde   
  4373c2:	or     esp,edi
  4373c4:	add    edi,DWORD PTR [eax+esi*8]
  4373c7:	out    0x3,al
  4373c9:	xlat   BYTE PTR ds:[ebx]
  4373ca:	out    dx,eax
  4373cb:	out    0x3,al
  4373cd:	loop   0x4373be
  4373cf:	out    0x3,al
  4373d1:	add    ch,bh
  4373d3:	out    dx,eax
  4373d4:	out    0x3,al
  4373d6:	dec    esp
  4373d7:	or     esp,edi
  4373d9:	add    eax,DWORD PTR [eax+0xb]
  4373dc:	out    0x3,eax
  4373de:	push   ds
  4373df:	or     eax,0xb3803e7
  4373e4:	out    0x3,eax
  4373e6:	ins    BYTE PTR es:[edi],dx
  4373e7:	or     esp,edi
  4373e9:	add    esp,DWORD PTR [eax+0xb]
  4373ec:	out    0x3,eax
  4373ee:	fs or  esp,edi
  4373f1:	add    ecx,DWORD PTR [eax+0xb]
  4373f4:	out    0x3,eax
  4373f6:	test   BYTE PTR [edi+eiz*8],0x3
  4373fa:	push   eax
  4373fb:	or     esp,edi
  4373fd:	add    edi,esi
  4373ff:	or     al,0x0
  437401:	jmp    0xe94ea09d
  437406:	xchg   edi,eax
  437407:	sbb    BYTE PTR [ebx],cl
  437409:	jmp    0xe94cfea5
  43740e:	xchg   edi,eax
  43740f:	and    BYTE PTR [ebx],cl
  437411:	jmp    0xe94e70ad
  437416:	xchg   edi,eax
  437417:	clc    
  437418:	or     ch,cl
  43741a:	xchg   edi,eax
  43741b:	hlt    
  43741c:	or     ch,cl
  43741e:	xchg   edi,eax
  43741f:	lock or ch,cl
  437422:	xchg   edi,eax
  437423:	or     al,0xb
  437425:	jmp    0xe94e7cc1
  43742a:	xchg   edi,eax
  43742b:	add    al,0xb
  43742d:	jmp    0xe957f3c9
  437432:	xchg   edi,eax
  437433:	pop    esp
  437434:	or     al,0xe9
  437436:	add    BYTE PTR [edi-0x6816f3a8],dl
  43743c:	push   esp
  43743d:	or     al,0xe9
  43743f:	xchg   edi,eax
  437440:	push   eax
  437441:	or     al,0xe9
  437443:	xchg   edi,eax
  437444:	ins    BYTE PTR es:[edi],dx
  437445:	or     al,0xe9
  437447:	xchg   edi,eax
  437448:	push   0x6497e90c
  43744d:	or     al,0xe9
  43744f:	xchg   edi,eax
  437450:	sub    BYTE PTR [edx],cl
  437452:	jmp    0xe94d98ee
  437457:	xchg   edi,eax
  437458:	and    BYTE PTR [edx],cl
  43745a:	jmp    0xe94d70f6
  43745f:	xchg   edi,eax
  437460:	push   ss
  437461:	or     ecx,ebp
  437463:	xchg   edi,eax
  437464:	adc    cl,BYTE PTR [ecx]
  437466:	jmp    0xe94c8302
  43746b:	xchg   edi,eax
  43746c:	sub    cl,BYTE PTR [ecx]
  43746e:	jmp    0xe94fb50a
  437473:	xchg   edi,eax
  437474:	pushf  
  437475:	or     al,0xe9
  437477:	xchg   edi,eax
  437478:	cwde   
  437479:	or     al,0x0
  43747b:	mov    ebp,0xad0cb3ff
  437480:	jmp    FWORD PTR [edi-0x540052f4]
  437486:	or     al,0x7d
  437488:	jmp    DWORD PTR [edi-0x5c0082f4]
  43748e:	or     al,0x6d
  437490:	jmp    FWORD PTR [edi-0x540092f4]
  437496:	or     al,0x7d
  437498:	jmp    DWORD PTR [edi-0x82fff4]
  43749e:	mov    ds:0x9fff6d0c,eax
  4374a3:	or     al,0x6d
  4374a5:	call   FWORD PTR [ebx-0x1200c2f4]
  4374ab:	push   cs
  4374ac:	cmp    eax,0x2d0ee9ff
  4374b1:	(bad)  
  4374b2:	mov    ebx,0xe1ff2d15
  4374b7:	push   cs
  4374b8:	cmp    eax,0x3d15d2ff
  4374bd:	(bad)  
  4374be:	(bad)  [esi]
  4374c0:	sub    eax,0x2d0ed5ff
  4374c5:	call   ecx
  4374c7:	push   cs
  4374c8:	std    
  4374c9:	dec    ch
  4374cb:	push   cs
  4374cc:	std    
  4374cd:	dec    cl
  4374cf:	push   cs
  4374d0:	in     eax,dx
  4374d1:	(bad)  
  4374d2:	pop    edi
  4374d3:	or     al,0xed
  4374d5:	(bad)  
  4374d6:	pop    ebx
  4374d7:	or     al,0xfd
  4374d9:	(bad)  
  4374da:	push   edi
  4374db:	or     al,0xfd
  4374dd:	(bad)  
  4374de:	push   ebx
  4374df:	or     al,0xed
  4374e1:	dec    BYTE PTR [edi+0xc]
  4374e4:	in     eax,dx
  4374e5:	dec    BYTE PTR [ebx+0xc]
  4374e8:	mov    ebp,0xbd0c47fe
  4374ed:	inc    BYTE PTR [ebx+0xc]
  4374f0:	lods   eax,DWORD PTR ds:[esi]
  4374f1:	(bad)  
  4374f2:	aas    
  4374f3:	or     al,0x94
  4374f5:	imul   edi,ebp,0xfd69a03b
  4374fb:	aaa    
  4374fc:	cwde   
  4374fd:	imul   edi,ebp,0x69900033
  437503:	std    
  437504:	das    
  437505:	mov    BYTE PTR [ecx-0x3],ch
  437508:	sub    esp,DWORD PTR [eax-0x67d80299]
  43750e:	addr16 std 
  437510:	and    edx,DWORD PTR [eax-0x77e00299]
  437516:	addr16 std 
  437518:	sbb    esp,DWORD PTR [eax-0x67e80299]
  43751e:	addr16 std 
  437520:	adc    edx,DWORD PTR [eax-0x77f00299]
  437526:	addr16 std 
  437528:	or     esp,DWORD PTR [eax-0x67f80299]
  43752e:	addr16 std 
  437530:	add    edx,DWORD PTR [eax-0x77000299]
  437536:	addr16 std 
  437538:	sti    
  437539:	lahf   
  43753a:	addr16 std 
  43753c:	neg    DWORD PTR [edi-0x700c0299]
  437542:	addr16 std 
  437544:	out    dx,eax
  437545:	(bad)  
  437546:	addr16 std 
  437548:	jmp    0x4374e9
  43754a:	addr16 std 
  43754c:	out    0x9f,eax
  43754e:	addr16 std 
  437550:	jecxz  0x4374e1
  437552:	addr16 std 
  437554:	fisttp WORD PTR [edi-0x60240299]
  43755a:	addr16 std 
  43755c:	xlat   BYTE PTR ds:[ebx]
  43755d:	lahf   
  43755e:	addr16 std 
  437560:	ror    DWORD PTR [edi+0xcffd67],cl
  437566:	(bad)  
  437567:	addr16 std 
  437569:	retf   
  43756a:	lahf   
  43756b:	addr16 std 
  43756d:	(bad)  
  43756e:	lahf   
  43756f:	add    bh,ah
  437571:	add    ebx,eax
  437573:	add    eax,0x5d403e7
  437578:	out    0x3,eax
  43757a:	lock add eax,0x5ec03e7
  437580:	out    0x3,eax
  437582:	call   0xd3475c8c
  437587:	add    eax,0x55703e7
  43758c:	out    0x3,eax
  43758e:	cmp    al,0x5
  437590:	out    0x3,eax
  437592:	cmp    BYTE PTR ds:0x53403e7,al
  437598:	out    0x3,eax
  43759a:	push   ds
  43759b:	lock out 0x3,al
  43759e:	xchg   edi,ebp
  4375a0:	out    0x3,al
  4375a2:	add    bh,ch
  4375a4:	out    0x3,al
  4375a6:	add    al,0x5
  4375a8:	out    0x3,eax
  4375aa:	and    BYTE PTR ds:0x51c03e7,al
  4375b0:	out    0x3,eax
  4375b2:	sub    BYTE PTR ds:0x51403e7,al
  4375b8:	out    0x3,eax
  4375ba:	mov    al,0x5
  4375bc:	out    0x3,eax
  4375be:	ss or  esp,edi
  4375c1:	add    eax,DWORD PTR [edx+0xb]
  4375c4:	out    0x3,eax
  4375c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4375c7:	add    eax,0x800003e7
  4375cc:	add    eax,0x57c03e7
  4375d1:	out    0x3,eax
  4375d3:	js     0x4375da
  4375d5:	out    0x3,eax
  4375d7:	inc    esp
  4375d8:	add    eax,0x54003e7
  4375dd:	out    0x3,eax
  4375df:	adc    ecx,DWORD PTR [edi+eiz*8]
  4375e2:	add    edx,DWORD PTR [edi]
  4375e4:	or     al,0xe7
  4375e6:	add    ebx,DWORD PTR [ebx+0xc]
  4375e9:	add    cl,ch
  4375eb:	xchg   edi,eax
  4375ec:	aad    0xb
  4375ee:	jmp    0xe948ee8a
  4375f3:	xchg   edi,eax
  4375f4:	je     0x4375fb
  4375f6:	jmp    0xe948e692
  4375fb:	xchg   edi,eax
  4375fc:	mov    WORD PTR ds:0x58897e9,es
  437602:	jmp    0xe948fa9e
  437607:	xchg   edi,eax
  437608:	add    BYTE PTR ds:0x4d497e9,0xe9
  43760f:	xchg   edi,eax
  437610:	fadd   DWORD PTR [ecx+ebp*8]
  437613:	xchg   edi,eax
  437614:	int3   
  437615:	add    al,0xe9
  437617:	xchg   edi,eax
  437618:	and    BYTE PTR ds:0x4f497e9,al
  43761e:	jmp    0xe9486eba
  437623:	xchg   edi,eax
  437624:	in     al,dx
  437625:	add    al,0xe9
  437627:	xchg   edi,eax
  437628:	lock add al,0xe9
  43762b:	xchg   edi,eax
  43762c:	add    al,0x5
  43762e:	jmp    0x54c0d33
  437633:	jmp    0xe94872cf
  437638:	xchg   edi,eax
  437639:	add    BYTE PTR ds:0x65497e9,al
  43763f:	jmp    0xe949cedb
  437644:	xchg   edi,eax
  437645:	dec    esp
  437646:	push   es
  437647:	jmp    0xe949c6e3
  43764c:	xchg   edi,eax
  43764d:	fs push es
  43764f:	jmp    0xe949deeb
  437654:	xchg   edi,eax
  437655:	pop    esp
  437656:	push   es
  437657:	jmp    0xe949c6f3
  43765c:	xchg   edi,eax
  43765d:	fs push es
  43765f:	jmp    0x49defb
  437664:	in     eax,dx
  437665:	add    edx,esp
  437667:	or     ch,ch
  437669:	add    eax,DWORD PTR [ebx+0xb]
  43766c:	mov    ebp,0xbd0acc03
  437671:	add    ebp,DWORD PTR [esi]
  437673:	or     eax,0xd2a03ad
  437678:	lods   eax,DWORD PTR ds:[esi]
  437679:	add    edx,eax
  43767b:	or     bh,BYTE PTR [ebp-0x42f533fd]
  437681:	add    ecx,eax
  437683:	or     ch,BYTE PTR [ebp-0x52f54bfd]
  437689:	add    esp,DWORD PTR [ebx]
  43768b:	or     edi,DWORD PTR [ebp+0x3]
  43768e:	lods   al,BYTE PTR ds:[esi]
  43768f:	or     bh,BYTE PTR [ebp+0x3]
  437692:	push   0x36d0011
  437697:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  437698:	or     ch,BYTE PTR [ebp+0x3]
  43769b:	mov    al,ds:0x9c037d0a
  4376a0:	or     bh,BYTE PTR [ebp+0x3]
  4376a3:	cwde   
  4376a4:	or     ch,BYTE PTR [ebp+0x3]
  4376a7:	xchg   esp,eax
  4376a8:	or     ch,BYTE PTR [ebp+0x3]
  4376ab:	nop
  4376ac:	or     bh,BYTE PTR ds:0x3d0a8c03
  4376b2:	add    ecx,DWORD PTR [eax-0x7bfcd2f6]
  4376b8:	or     ch,BYTE PTR ds:0x3d0a8003
  4376be:	add    ecx,DWORD PTR [edx+ecx*1+0xeec033d]
  4376c5:	sub    eax,0x2d0a7403
  4376ca:	add    esi,DWORD PTR [eax+0xa]
  4376cd:	std    
  4376ce:	add    ch,BYTE PTR [edx+ecx*1-0x3]
  4376d2:	add    ch,BYTE PTR [eax+0xa]
  4376d5:	in     eax,dx
  4376d6:	add    ah,BYTE PTR [edx+ecx*1-0x13]
  4376da:	add    ah,BYTE PTR [eax+0xa]
  4376dd:	xchg   esp,eax
  4376de:	imul   edi,ebp,0xfd699e5b
  4376e4:	push   edi
  4376e5:	mov    gs,WORD PTR [ecx-0x3]
  4376e8:	push   ebx
  4376e9:	mov    gs,WORD PTR [ecx-0x3]
  4376ec:	dec    edi
  4376ed:	sahf   
  4376ee:	imul   edi,ebp,0xfd699e4b
  4376f4:	inc    edi
  4376f5:	mov    gs,WORD PTR [ecx-0x3]
  4376f8:	(bad)  
  4376f9:	add    BYTE PTR [edx-0x61b00297],cl
  4376ff:	imul   edi,ebp,0xfd699e4b
  437705:	inc    edi
  437706:	mov    gs,WORD PTR [ecx-0x3]
  437709:	inc    ebx
  43770a:	mov    gs,WORD PTR [ecx-0x3]
  43770d:	aas    
  43770e:	sahf   
  43770f:	addr16 std 
  437711:	cmp    ebx,DWORD PTR [esi-0x71c80299]
  437717:	addr16 std 
  437719:	xor    ecx,DWORD PTR [esi-0x61e00299]
  43771f:	addr16 std 
  437721:	sbb    ebx,DWORD PTR [esi-0x71e80299]
  437727:	addr16 std 
  437729:	adc    ecx,DWORD PTR [esi-0x61f00299]
  43772f:	addr16 std 
  437731:	or     ebx,DWORD PTR [esi-0x70590299]
  437737:	addr16 std 
  437739:	add    ecx,DWORD PTR [esi-0x61000299]
  43773f:	addr16 std 
  437741:	sti    
  437742:	popf   
  437743:	addr16 std 
  437745:	test   DWORD PTR [ebp-0x720c0299],0x9deffd67
  43774f:	addr16 std 
  437751:	jmp    0x4376f0
  437753:	addr16 std 
  437755:	out    0x8d,eax
  437757:	add    bh,ah
  437759:	add    esi,eax
  43775b:	pop    es
  43775c:	out    0x3,eax
  43775e:	add    ah,dh
  437760:	pop    es
  437761:	out    0x3,eax
  437763:	enter  0xe707,0x3
  437767:	mov    esp,0xc003e707
  43776c:	pop    es
  43776d:	out    0x3,eax
  43776f:	in     al,0x7
  437771:	out    0x3,eax
  437773:	fadd   DWORD PTR [edi]
  437775:	out    0x3,eax
  437777:	cmp    ecx,DWORD PTR [ecx]
  437779:	out    0x3,eax
  43777b:	rol    BYTE PTR [edi],1
  43777d:	out    0x3,eax
  43777f:	aam    0x7
  437781:	out    0x3,eax
  437783:	call   0xdc475e8f
  437788:	pop    es
  437789:	out    0x3,eax
  43778b:	loopne 0x437794
  43778d:	out    0x3,eax
  43778f:	inc    esp
  437790:	pop    es
  437791:	out    0x3,eax
  437793:	cmp    BYTE PTR [edi],al
  437795:	out    0x3,eax
  437797:	sub    al,0x7
  437799:	out    0x3,eax
  43779b:	xor    BYTE PTR [edi],al
  43779d:	out    0x3,eax
  43779f:	jo     0x4377aa
  4377a1:	out    0x3,eax
  4377a3:	or     BYTE PTR [edi],al
  4377a5:	out    0x3,eax
  4377a7:	cld    
  4377a8:	push   es
  4377a9:	out    0x3,eax
  4377ab:	add    BYTE PTR [edi],al
  4377ad:	out    0x3,eax
  4377af:	and    al,0x7
  4377b1:	out    0x3,eax
  4377b3:	sbb    BYTE PTR [edi],al
  4377b5:	out    0x3,eax
  4377b7:	or     al,0x7
  4377b9:	out    0x3,eax
  4377bb:	adc    BYTE PTR [edi],al
  4377bd:	out    0x3,eax
  4377bf:	adc    al,0x7
  4377c1:	out    0x3,eax
  4377c3:	add    BYTE PTR [eax-0x63fc18f9],ch
  4377c9:	pop    es
  4377ca:	out    0x3,eax
  4377cc:	mov    al,ds:0x8403e707
  4377d1:	pop    es
  4377d2:	add    cl,ch
  4377d4:	xchg   edi,eax
  4377d5:	in     al,0x6
  4377d7:	jmp    0xe94a6073
  4377dc:	xchg   edi,eax
  4377dd:	inc    esi
  4377de:	add    eax,0x6e097e9
  4377e3:	jmp    0xe94a2c7f
  4377e8:	xchg   edi,eax
  4377e9:	mov    eax,0xac97e906
  4377ee:	push   es
  4377ef:	jmp    0xe94a288b
  4377f4:	xchg   edi,eax
  4377f5:	les    eax,FWORD PTR [esi]
  4377f7:	jmp    0xe94a4093
  4377fc:	xchg   edi,eax
  4377fd:	mov    esp,0xc097e906
  437802:	push   es
  437803:	jmp    0xe94a8c9f
  437808:	xchg   edi,eax
  437809:	sbb    BYTE PTR [edi],al
  43780b:	jmp    0xe94a84a7
  437810:	xchg   edi,eax
  437811:	jbe    0x437818
  437813:	jmp    0xe948e2af
  437818:	xchg   edi,eax
  437819:	outs   dx,BYTE PTR ds:[esi]
  43781a:	add    eax,0x58297e9
  43781f:	jmp    0xe94a83bb
  437824:	xchg   edi,eax
  437825:	jp     0x43782c
  437827:	jmp    0x5c20f2c
  43782c:	jmp    0xe9484ac8
  437831:	xchg   edi,eax
  437832:	sbb    eax,DWORD PTR [edi]
  437834:	jmp    0xe94a97d0
  437839:	xchg   edi,eax
  43783a:	into   
  43783b:	add    al,0xe9
  43783d:	xchg   edi,eax
  43783e:	test   DWORD PTR [esi],0x4e697e9
  437844:	jmp    0xe94852e0
  437849:	xchg   edi,eax
  43784a:	fiadd  WORD PTR [eax+eax*1]
  43784d:	sub    eax,0xfd0b5a00
  437852:	(bad)  
  437853:	out    dx,eax
  437854:	or     ch,bh
  437856:	(bad)  
  437857:	jmp    0x437861
  437859:	in     eax,dx
  43785a:	jmp    edi
  43785c:	or     ch,ch
  43785e:	dec    DWORD PTR [ecx+0xb]
  437861:	std    
  437862:	push   eax
  437864:	or     ch,bh
  437866:	(bad)  
  437867:	in     al,dx
  437868:	or     ch,ch
  43786a:	(bad)  
  43786b:	call   0xe5436578
  437870:	or     BYTE PTR [ebp-0x42f71f01],bh
  437876:	(bad)  
  437877:	fmul   QWORD PTR [eax]
  437879:	lods   eax,DWORD PTR ds:[esi]
  43787a:	jmp    FWORD PTR ds:0x29ffad0b
  437880:	or     edi,DWORD PTR [ebp-0x42f72f01]
  437886:	dec    esp
  437888:	or     BYTE PTR [ebp+0x8c8ff],ch
  43788e:	lods   eax,DWORD PTR ds:[esi]
  43788f:	inc    esp
  437891:	or     BYTE PTR [ebp-0x1],bh
  437894:	adc    eax,0x11ff7d0b
  437899:	or     ebp,DWORD PTR [ebp-0x1]
  43789c:	or     eax,0x9ff6d0b
  4378a1:	or     edi,DWORD PTR [ebp-0x1]
  4378a4:	mov    al,0x8
  4378a6:	jge    0x4378a7
  4378a8:	lods   al,BYTE PTR ds:[esi]
  4378a9:	or     BYTE PTR [ebp-0x1],ch
  4378ac:	test   al,0x8
  4378ae:	ins    DWORD PTR es:[edi],dx
  4378af:	jmp    DWORD PTR [eax+ecx*1+0x8a0ff3d]
  4378b6:	cmp    eax,0x2d089cff
  4378bb:	(bad)  
  4378bc:	in     eax,dx
  4378bd:	or     ch,BYTE PTR ds:0x3d0894ff
  4378c3:	call   DWORD PTR [eax-0x2966bf8]
  4378c9:	xchg   edx,eax
  4378ca:	mov    WORD PTR [ecx-0x3],gs
  4378cd:	mov    cs,WORD PTR [ecx+ebp*2+0x699c8afd]
  4378d4:	std    
  4378d5:	xchg   BYTE PTR [ecx+ebp*2+0x698c82fd],bl
  4378dc:	std    
  4378dd:	jle    0x43786b
  4378df:	imul   edi,ebp,0xfd699c7a
  4378e5:	jbe    0x437883
  4378e7:	imul   edi,ebp,0xfd698c72
  4378ed:	ror    DWORD PTR [esi+0xbdfd69],0x9e
  4378f4:	imul   edi,ebp,0xfd699eb9
  4378fa:	mov    ch,0x8e
  4378fc:	imul   edi,ebp,0xfd698eb1
  437902:	lods   eax,DWORD PTR ds:[esi]
  437903:	sahf   
  437904:	imul   edi,ebp,0xfd699ea9
  43790a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43790b:	mov    gs,WORD PTR [ecx-0x3]
  43790e:	mov    eax,ds:0x9dfd698e
  437913:	sahf   
  437914:	addr16 std 
  437916:	cdq    
  437917:	sahf   
  437918:	addr16 std 
  43791a:	xchg   ebp,eax
  43791b:	mov    fs,WORD PTR [edi-0x3]
  43791e:	xchg   ecx,eax
  43791f:	mov    fs,WORD PTR [edi-0x3]
  437922:	lea    ebx,[esi-0x61760299]
  437928:	addr16 std 
  43792a:	test   DWORD PTR [esi-0x717e0299],ecx
  437930:	addr16 std 
  437932:	jge    0x4378d2
  437934:	addr16 std 
  437936:	jns    0x4378d6
  437938:	addr16 std 
  43793a:	jne    0x4378ca
  43793c:	addr16 std 
  43793e:	jno    0x4378ce
  437940:	add    bh,ah
  437942:	add    eax,edx
  437944:	push   es
  437945:	out    0x3,eax
  437947:	mov    esi,0xba03e706
  43794c:	push   es
  43794d:	out    0x3,eax
  43794f:	mov    dh,0x6
  437951:	out    0x3,eax
  437953:	jb     0x43795b
  437955:	out    0x3,eax
  437957:	add    BYTE PTR [esi+0x6],ch
  43795a:	out    0x3,eax
  43795c:	push   0x6
  43795e:	out    0x3,eax
  437960:	pushw  es
  437962:	out    0x3,eax
  437964:	bound  eax,QWORD PTR [esi]
  437966:	out    0x3,eax
  437968:	pop    esi
  437969:	push   es
  43796a:	out    0x3,eax
  43796c:	pop    edx
  43796d:	push   es
  43796e:	out    0x3,eax
  437970:	push   esi
  437971:	push   es
  437972:	out    0x3,eax
  437974:	xchg   edx,eax
  437975:	push   es
  437976:	out    0x3,eax
  437978:	mov    es,WORD PTR [esi]
  43797a:	out    0x3,eax
  43797c:	mov    al,BYTE PTR [esi]
  43797e:	out    0x3,eax
  437980:	xchg   BYTE PTR [esi],al
  437982:	out    0x3,eax
  437984:	add    BYTE PTR [esi],0xe7
  437987:	add    edi,DWORD PTR [esi+0x6]
  43798a:	out    0x3,eax
  43798c:	jp     0x437994
  43798e:	out    0x3,eax
  437990:	jbe    0x437998
  437992:	out    0x3,eax
  437994:	mov    dl,0x6
  437996:	out    0x3,eax
  437998:	scas   al,BYTE PTR es:[edi]
  437999:	push   es
  43799a:	out    0x3,eax
  43799c:	stos   BYTE PTR es:[edi],al
  43799d:	push   es
  43799e:	out    0x3,eax
  4379a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4379a1:	push   es
  4379a2:	out    0x3,eax
  4379a4:	mov    ds:0x9e03e706,al
  4379a9:	push   es
  4379aa:	out    0x3,eax
  4379ac:	call   0xe706:0x9603e706
  4379b3:	add    edx,DWORD PTR [edx+0x7]
  4379b6:	out    0x3,eax
  4379b8:	dec    esi
  4379b9:	pop    es
  4379ba:	add    cl,ch
  4379bc:	add    BYTE PTR [edi-0x6816f8b6],dl
  4379c2:	dec    esi
  4379c3:	pop    es
  4379c4:	jmp    0xe94adc60
  4379c9:	xchg   edi,eax
  4379ca:	popw   es
  4379cc:	jmp    0xe94ad468
  4379d1:	xchg   edi,eax
  4379d2:	pop    esi
  4379d3:	pop    es
  4379d4:	jmp    0xe94aac70
  4379d9:	xchg   edi,eax
  4379da:	ss pop es
  4379dc:	jmp    0xe94aa478
  4379e1:	xchg   edi,eax
  4379e2:	cs pop es
  4379e4:	jmp    0xe94abc80
  4379e9:	xchg   edi,eax
  4379ea:	inc    esi
  4379eb:	pop    es
  4379ec:	jmp    0xe94ab488
  4379f1:	xchg   edi,eax
  4379f2:	ds pop es
  4379f4:	jmp    0xe94b0c90
  4379f9:	xchg   edi,eax
  4379fa:	xchg   esi,eax
  4379fb:	pop    es
  4379fc:	jmp    0xe94b0498
  437a01:	xchg   edi,eax
  437a02:	mov    es,WORD PTR [edi]
  437a04:	jmp    0xe94b1ca0
  437a09:	xchg   edi,eax
  437a0a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  437a0b:	pop    es
  437a0c:	jmp    0xe94b14a8
  437a11:	xchg   edi,eax
  437a12:	sahf   
  437a13:	pop    es
  437a14:	jmp    0xe94ae8b0
  437a19:	xchg   edi,eax
  437a1a:	push   0x7
  437a1c:	jmp    0xe94af0b8
  437a21:	add    BYTE PTR [edi-0x6816f88e],dl
  437a27:	jle    0x437a30
  437a29:	jmp    0xe94af4c5
  437a2e:	xchg   edi,eax
  437a2f:	xchg   BYTE PTR [edi],al
  437a31:	jmp    0x4afccd
  437a36:	cmp    eax,0x3d097a04
  437a3b:	add    al,0x76
  437a3d:	or     DWORD PTR ds:0x2d097204,ebp
  437a43:	add    al,0x6e
  437a45:	or     DWORD PTR ds:0x3d096a04,edi
  437a4b:	add    al,0x66
  437a4d:	or     DWORD PTR ds:0x2d096204,ebp
  437a53:	add    al,0x5e
  437a55:	or     ebp,edi
  437a57:	add    ebx,DWORD PTR [edx+0x9]
  437a5a:	std    
  437a5b:	add    edx,DWORD PTR [esi+0x9]
  437a5e:	in     eax,dx
  437a5f:	add    edx,DWORD PTR [edx+0x9]
  437a62:	in     eax,dx
  437a63:	add    ecx,DWORD PTR [esi+0x9]
  437a66:	std    
  437a67:	add    ecx,DWORD PTR [edx+0x9]
  437a6a:	std    
  437a6b:	add    eax,DWORD PTR [esi+0x9]
  437a6e:	in     eax,dx
  437a6f:	add    eax,DWORD PTR [edx+0x9]
  437a72:	in     eax,dx
  437a73:	add    edi,DWORD PTR [esi]
  437a75:	or     DWORD PTR [ebp-0x42f6c5fd],edi
  437a7b:	add    esi,DWORD PTR [esi]
  437a7d:	or     DWORD PTR [ebp-0x52f6cdfd],ebp
  437a83:	add    ebp,DWORD PTR [esi]
  437a85:	or     DWORD PTR [eax],eax
  437a87:	mov    ebp,0xbd092a03
  437a8c:	add    esp,DWORD PTR [esi]
  437a8e:	or     DWORD PTR [ebp-0x52f6ddfd],ebp
  437a94:	add    ebx,DWORD PTR [esi]
  437a96:	or     DWORD PTR [ebp+0x3],edi
  437a99:	sbb    cl,BYTE PTR [ecx]
  437a9b:	jge    0x437aa0
  437a9d:	push   ss
  437a9e:	or     DWORD PTR [ebp+0x3],ebp
  437aa1:	adc    cl,BYTE PTR [ecx]
  437aa3:	ins    DWORD PTR es:[edi],dx
  437aa4:	add    ecx,DWORD PTR [esi]
  437aa6:	or     DWORD PTR [ebp+0x3],edi
  437aa9:	or     cl,BYTE PTR [ecx]
  437aab:	jge    0x437ab0
  437aad:	push   es
  437aae:	or     DWORD PTR [ecx+ebx*2+0x598d05fd],edx
  437ab5:	std    
  437ab6:	add    DWORD PTR [ebp-0x630202a7],ebx
  437abc:	pop    ecx
  437abd:	std    
  437abe:	stc    
  437abf:	mov    WORD PTR [ecx-0x3],ds
  437ac2:	cmc    
  437ac3:	mov    WORD PTR [ecx-0x3],ds
  437ac6:	icebp  
  437ac7:	pushf  
  437ac8:	pop    ecx
  437ac9:	std    
  437aca:	in     eax,dx
  437acb:	pushf  
  437acc:	pop    ecx
  437acd:	std    
  437ace:	jmp    0xe640d45f
  437ad3:	mov    WORD PTR [ecx-0x3],ds
  437ad6:	loope  0x437a74
  437ad8:	pop    ecx
  437ad9:	std    
  437ada:	fstp   QWORD PTR [ecx+ebx*2+0x598cd9fd]
  437ae1:	std    
  437ae2:	aad    0x8c
  437ae4:	pop    ecx
  437ae5:	std    
  437ae6:	rcr    DWORD PTR [ecx+ebx*2-0x63ff3203],1
  437aed:	pop    ecx
  437aee:	std    
  437aef:	leave  
  437af0:	mov    WORD PTR [ecx-0x3],ds
  437af3:	lds    ecx,FWORD PTR [ecx+ebx*2+0x599cc1fd]
  437afa:	std    
  437afb:	mov    ebp,0xb9fd599c
  437b00:	mov    WORD PTR [ecx-0x3],ds
  437b03:	mov    ch,0x8c
  437b05:	pop    ecx
  437b06:	std    
  437b07:	mov    cl,0x9c
  437b09:	pop    ecx
  437b0a:	std    
  437b0b:	lods   eax,DWORD PTR ds:[esi]
  437b0c:	pushf  
  437b0d:	pop    ecx
  437b0e:	std    
  437b0f:	test   eax,0xa5fd598c
  437b14:	mov    WORD PTR [ecx-0x3],ds
  437b17:	mov    eax,ds:0x9dfd579c
  437b1c:	pushf  
  437b1d:	push   edi
  437b1e:	std    
  437b1f:	cdq    
  437b20:	mov    WORD PTR [edi-0x3],ss
  437b23:	xchg   ebp,eax
  437b24:	mov    WORD PTR [edi-0x3],ss
  437b27:	xchg   ecx,eax
  437b28:	pushf  
  437b29:	add    bh,ah
  437b2b:	add    ebx,DWORD PTR [edx]
  437b2d:	stc    
  437b2e:	out    0x3,al
  437b30:	push   cs
  437b31:	stc    
  437b32:	out    0x3,al
  437b34:	adc    bh,cl
  437b36:	out    0x3,al
  437b38:	push   ss
  437b39:	stc    
  437b3a:	out    0x3,al
  437b3c:	retf   0xe6f8
  437b3f:	add    edi,DWORD PTR [esi-0x3dfc1908]
  437b45:	clc    
  437b46:	out    0x3,al
  437b48:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  437b49:	clc    
  437b4a:	out    0x3,al
  437b4c:	mov    edx,0x3e6f8
  437b51:	scas   al,BYTE PTR es:[edi]
  437b52:	clc    
  437b53:	out    0x3,al
  437b55:	mov    dl,0xf8
  437b57:	out    0x3,al
  437b59:	jbe    0x437b53
  437b5b:	out    0x3,al
  437b5d:	push   0xfffffff8
  437b5f:	out    0x3,al
  437b61:	pop    esi
  437b62:	clc    
  437b63:	out    0x3,al
  437b65:	(bad)  
  437b66:	clc    
  437b67:	out    0x3,al
  437b69:	inc    esi
  437b6a:	clc    
  437b6b:	out    0x3,al
  437b6d:	pop    edx
  437b6e:	clc    
  437b6f:	out    0x3,al
  437b71:	dec    esi
  437b72:	clc    
  437b73:	out    0x3,al
  437b75:	push   edx
  437b76:	clc    
  437b77:	out    0x3,al
  437b79:	push   esi
  437b7a:	clc    
  437b7b:	out    0x3,al
  437b7d:	mov    bh,al
  437b7f:	out    0x3,al
  437b81:	jle    0x437b7b
  437b83:	out    0x3,al
  437b85:	cmp    al,0xe6
  437b88:	add    esp,DWORD PTR [esi-0x8]
  437b8b:	out    0x3,al
  437b8d:	jp     0x437b87
  437b8f:	out    0x3,al
  437b91:	outs   dx,BYTE PTR ds:[esi]
  437b92:	clc    
  437b93:	out    0x3,al
  437b95:	jb     0x437b8f
  437b97:	out    0x3,al
  437b99:	mov    dh,0xf8
  437b9b:	out    0x3,al
  437b9d:	stos   BYTE PTR es:[edi],al
  437b9e:	clc    
  437b9f:	out    0x3,al
  437ba1:	sahf   
  437ba2:	clc    
  437ba3:	(bad)  
  437ba4:	call   0xe94b7240
  437ba9:	xchg   edi,eax
  437baa:	repnz pop es
  437bac:	jmp    0xe94b7a48
  437bb1:	xchg   edi,eax
  437bb2:	pop    ss
  437bb3:	add    ecx,ebp
  437bb5:	add    BYTE PTR [edi-0x6816fedd],dl
  437bbb:	add    cl,BYTE PTR [eax]
  437bbd:	jmp    0xe944ca59
  437bc2:	xchg   edi,eax
  437bc3:	dec    edx
  437bc4:	add    ecx,ebp
  437bc6:	xchg   edi,eax
  437bc7:	push   esi
  437bc8:	add    ecx,ebp
  437bca:	xchg   edi,eax
  437bcb:	push   edx
  437bcc:	add    ecx,ebp
  437bce:	xchg   edi,eax
  437bcf:	pop    esi
  437bd0:	add    ecx,ebp
  437bd2:	xchg   edi,eax
  437bd3:	pop    edx
  437bd4:	add    ecx,ebp
  437bd6:	xchg   edi,eax
  437bd7:	add    cx,bp
  437bda:	xchg   edi,eax
  437bdb:	bound  eax,QWORD PTR [ecx]
  437bdd:	jmp    0xe944aa79
  437be2:	xchg   edi,eax
  437be3:	sub    al,BYTE PTR [ecx]
  437be5:	jmp    0xe944b281
  437bea:	xchg   edi,eax
  437beb:	xor    al,BYTE PTR [ecx]
  437bed:	jmp    0xe944ba89
  437bf2:	xchg   edi,eax
  437bf3:	cmp    al,BYTE PTR [ecx]
  437bf5:	jmp    0xe944c291
  437bfa:	xchg   edi,eax
  437bfb:	inc    edx
  437bfc:	add    ecx,ebp
  437bfe:	xchg   edi,eax
  437bff:	mov    es,WORD PTR [ecx]
  437c01:	jmp    0xe945069d
  437c06:	xchg   edi,eax
  437c07:	xchg   esi,eax
  437c08:	add    ecx,ebp
  437c0a:	xchg   edi,eax
  437c0b:	xchg   edx,eax
  437c0c:	add    ecx,ebp
  437c0e:	xchg   edi,eax
  437c0f:	sahf   
  437c10:	add    ecx,ebp
  437c12:	xchg   edi,eax
  437c13:	jecxz  0x437c17
  437c15:	jmp    0xe9465bb1
  437c1a:	add    BYTE PTR [edi+0x7d0002ad],dl
  437c20:	add    BYTE PTR [edi+0x5],dl
  437c23:	ins    DWORD PTR es:[edi],dx
  437c24:	add    BYTE PTR [ebx+0x5],dl
  437c27:	ins    DWORD PTR es:[edi],dx
  437c28:	add    BYTE PTR [edi+0x5],cl
  437c2b:	jge    0x437c2d
  437c2d:	dec    ebx
  437c2e:	add    eax,0x524007d
  437c33:	ins    DWORD PTR es:[edi],dx
  437c34:	add    BYTE PTR [esi-0x7dff92f9],al
  437c3a:	pop    es
  437c3b:	cmp    eax,0x3d077e00
  437c40:	add    BYTE PTR [edx+0x7],bh
  437c43:	sub    eax,0x2d053300
  437c48:	add    BYTE PTR [edi],ch
  437c4a:	add    eax,0x52b003d
  437c4f:	cmp    eax,0x2d052700
  437c54:	add    BYTE PTR [esi+0x7],ah
  437c57:	sub    eax,0xfd076200
  437c5c:	call   FWORD PTR [ebp+0x7]
  437c5f:	std    
  437c60:	call   FWORD PTR [ecx+0x7]
  437c63:	in     eax,dx
  437c64:	call   DWORD PTR [ebp+0x7]
  437c67:	in     eax,dx
  437c68:	call   DWORD PTR [ecx+0x7]
  437c6b:	std    
  437c6c:	dec    DWORD PTR [ebp+0x7]
  437c6f:	std    
  437c70:	dec    DWORD PTR [ecx+0x7]
  437c73:	in     eax,dx
  437c74:	inc    DWORD PTR [edx]
  437c76:	add    eax,0x4feffed
  437c7b:	mov    ebp,0x4faff
  437c80:	mov    ebp,0xad0739ff
  437c85:	push   DWORD PTR ds:0x31ffad07
  437c8b:	pop    es
  437c8c:	mov    ebp,0xbd072dff
  437c91:	jmp    FWORD PTR [ecx]
  437c93:	pop    es
  437c94:	lods   eax,DWORD PTR ds:[esi]
  437c95:	jmp    DWORD PTR ds:0xfd599407
  437c9b:	and    eax,0x21fd599b
  437ca0:	xchg   ebx,eax
  437ca1:	pop    ecx
  437ca2:	std    
  437ca3:	sbb    eax,0x19fd599b
  437ca8:	xchg   ebx,eax
  437ca9:	pop    ecx
  437caa:	std    
  437cab:	adc    eax,0x11fd599b
  437cb0:	xchg   ebx,eax
  437cb1:	pop    ecx
  437cb2:	std    
  437cb3:	or     eax,0x9fd599b
  437cb8:	xchg   ebx,eax
  437cb9:	pop    ecx
  437cba:	std    
  437cbb:	add    eax,0x1fd599b
  437cc0:	xchg   ebx,eax
  437cc1:	pop    ecx
  437cc2:	std    
  437cc3:	std    
  437cc4:	call   0xfd59:0x92f9fd59
  437ccb:	cmc    
  437ccc:	call   0xfd59:0x92f1fd59
  437cd3:	in     eax,dx
  437cd4:	call   0xfd59:0x92e9fd59
  437cdb:	in     eax,0x9a
  437cdd:	pop    ecx
  437cde:	std    
  437cdf:	loope  0x437c73
  437ce1:	pop    ecx
  437ce2:	std    
  437ce3:	fld    QWORD PTR [eax]
  437ce5:	call   0xfd59:0x92d9fd59
  437cec:	aad    0x9a
  437cee:	pop    ecx
  437cef:	std    
  437cf0:	rcl    DWORD PTR [edx-0x653202a7],1
  437cf6:	pop    ecx
  437cf7:	std    
  437cf8:	test   BYTE PTR [eax-0x677f02a7],dl
  437cfe:	pop    ecx
  437cff:	std    
  437d00:	jl     0x437c92
  437d02:	pop    ecx
  437d03:	std    
  437d04:	mov    ebp,0xb9fd599a
  437d09:	xchg   edx,eax
  437d0a:	pop    ecx
  437d0b:	std    
  437d0c:	mov    ch,0x9a
  437d0e:	pop    ecx
  437d0f:	std    
  437d10:	mov    cl,0x92
  437d12:	add    bh,ah
  437d14:	add    esi,edx
  437d16:	add    edi,esp
  437d18:	add    ebp,esi
  437d1a:	add    edi,esp
  437d1c:	add    edi,DWORD PTR [edx]
  437d1e:	add    esp,edi
  437d20:	add    esi,DWORD PTR [esi]
  437d22:	add    esp,edi
  437d24:	add    esp,DWORD PTR [edx]
  437d26:	add    esp,edi
  437d28:	add    ebx,DWORD PTR [esi]
  437d2a:	add    esp,edi
  437d2c:	add    ecx,DWORD PTR [edx]
  437d2e:	add    esp,edi
  437d30:	add    eax,DWORD PTR [esi]
  437d32:	add    esp,edi
  437d34:	add    edx,DWORD PTR [edx]
  437d36:	add    esp,edi
  437d38:	add    ecx,DWORD PTR [esi]
  437d3a:	add    esp,edi
  437d3c:	add    ebx,DWORD PTR [edx]
  437d3e:	add    esp,edi
  437d40:	add    edx,DWORD PTR [esi]
  437d42:	add    esp,edi
  437d44:	add    eax,edx
  437d46:	add    ah,bh
  437d48:	add    eax,DWORD PTR [eax]
  437d4a:	mov    esi,0xaa03e702
  437d4f:	add    ah,bh
  437d51:	add    esp,DWORD PTR [esi-0x4dfc18fe]
  437d57:	add    ah,bh
  437d59:	add    ebp,DWORD PTR [esi+0x7a03e702]
  437d5f:	add    ah,bh
  437d61:	add    esi,DWORD PTR [esi+0x2]
  437d64:	out    0x3,eax
  437d66:	bound  eax,QWORD PTR [edx]
  437d68:	out    0x3,eax
  437d6a:	pop    esi
  437d6b:	add    ah,bh
  437d6d:	add    ecx,DWORD PTR [edx+0x2]
  437d70:	out    0x3,eax
  437d72:	inc    esi
  437d73:	add    ah,bh
  437d75:	add    edx,DWORD PTR [edx+0x2]
  437d78:	out    0x3,eax
  437d7a:	xchg   ecx,eax
  437d7b:	add    al,0xe7
  437d7d:	add    edx,DWORD PTR [ebp-0x36fc18fc]
  437d83:	std    
  437d84:	out    0x3,al
  437d86:	mov    ebp,0x7e03e6fd
  437d8b:	add    al,BYTE PTR [eax]
  437d8d:	jmp    0xe9459029
  437d92:	xchg   edi,eax
  437d93:	push   cs
  437d94:	add    ch,cl
  437d96:	xchg   edi,eax
  437d97:	sbb    al,BYTE PTR [edx]
  437d99:	jmp    0xe9459435
  437d9e:	xchg   edi,eax
  437d9f:	and    al,BYTE PTR [edx]
  437da1:	jmp    0xe9459c3d
  437da6:	xchg   edi,eax
  437da7:	jmp    0xe901:0xe697e901
  437dae:	add    BYTE PTR [edi-0x6816fe0e],dl
  437db4:	out    dx,al
  437db5:	add    ecx,ebp
  437db7:	xchg   edi,eax
  437db8:	cli    
  437db9:	add    ecx,ebp
  437dbb:	xchg   edi,eax
  437dbc:	test   BYTE PTR [ecx],0xe9
  437dbf:	xchg   edi,eax
  437dc0:	add    al,BYTE PTR [edx]
  437dc2:	jmp    0xe9457c5e
  437dc7:	xchg   edi,eax
  437dc8:	dec    edx
  437dc9:	add    ebp,ecx
  437dcb:	xchg   edi,eax
  437dcc:	inc    esi
  437dcd:	add    ebp,ecx
  437dcf:	xchg   edi,eax
  437dd0:	push   edx
  437dd1:	add    ebp,ecx
  437dd3:	xchg   edi,eax
  437dd4:	dec    esi
  437dd5:	add    ebp,ecx
  437dd7:	xchg   edi,eax
  437dd8:	pop    edx
  437dd9:	add    ebp,ecx
  437ddb:	xchg   edi,eax
  437ddc:	push   esi
  437ddd:	add    ebp,ecx
  437ddf:	xchg   edi,eax
  437de0:	bound  eax,QWORD PTR [ebx]
  437de2:	jmp    0xe946dc7e
  437de7:	xchg   edi,eax
  437de8:	sub    al,BYTE PTR [ebx]
  437dea:	jmp    0xe946a486
  437def:	xchg   edi,eax
  437df0:	xor    al,BYTE PTR [ebx]
  437df2:	jmp    0xe946ac8e
  437df7:	xchg   edi,eax
  437df8:	cmp    al,BYTE PTR [ebx]
  437dfa:	jmp    0xe946b496
  437dff:	xchg   edi,eax
  437e00:	inc    edx
  437e01:	add    ebp,ecx
  437e03:	xchg   edi,eax
  437e04:	add    eax,DWORD PTR ds:[eax]
  437e07:	lods   eax,DWORD PTR ds:[esi]
  437e08:	cld    
  437e09:	mov    ecx,0xb5fcad05
  437e0e:	add    eax,0x5b1fcbd
  437e13:	add    BYTE PTR [ebp-0x52fa5204],bh
  437e19:	cld    
  437e1a:	test   eax,0xa5fcad05
  437e1f:	add    eax,0x5a2047d
  437e24:	jge    0x437e2a
  437e26:	sahf   
  437e27:	add    eax,0x59a046d
  437e2c:	ins    DWORD PTR es:[edi],dx
  437e2d:	add    al,0x96
  437e2f:	add    eax,0x592047d
  437e34:	jge    0x437e3a
  437e36:	mov    es,WORD PTR ds:0x58a046d
  437e3c:	ins    DWORD PTR es:[edi],dx
  437e3d:	add    al,0x86
  437e3f:	add    eax,0x582043d
  437e44:	cmp    eax,0x2d057e04
  437e49:	add    al,0x7a
  437e4b:	add    eax,0x576042d
  437e50:	cmp    eax,0x3d057204
  437e55:	add    al,0x6e
  437e57:	add    eax,0x56a042d
  437e5c:	sub    eax,0xfd056604
  437e61:	add    esp,DWORD PTR [edx+0x5]
  437e64:	std    
  437e65:	add    ebx,DWORD PTR [esi+0x5]
  437e68:	in     eax,dx
  437e69:	add    ebx,DWORD PTR [edx+0x5]
  437e6c:	in     eax,dx
  437e6d:	add    edx,DWORD PTR [esi+0x5]
  437e70:	std    
  437e71:	add    edx,DWORD PTR [edx+0x5]
  437e74:	std    
  437e75:	add    ecx,DWORD PTR [esi+0x5]
  437e78:	add    ch,ch
  437e7a:	add    ecx,DWORD PTR [edx+0x5]
  437e7d:	in     eax,dx
  437e7e:	add    eax,DWORD PTR [esi+0x5]
  437e81:	xchg   esp,eax
  437e82:	pop    ecx
  437e83:	std    
  437e84:	inc    ebp
  437e85:	xchg   ecx,eax
  437e86:	pop    ecx
  437e87:	std    
  437e88:	inc    ecx
  437e89:	cdq    
  437e8a:	pop    ecx
  437e8b:	std    
  437e8c:	cmp    eax,0x39fd5991
  437e91:	cdq    
  437e92:	pop    ecx
  437e93:	std    
  437e94:	xor    eax,0x31fd5991
  437e99:	cdq    
  437e9a:	pop    ecx
  437e9b:	std    
  437e9c:	sub    eax,0x29fd5991
  437ea1:	cdq    
  437ea2:	pop    ecx
  437ea3:	std    
  437ea4:	and    eax,0x21fd5991
  437ea9:	cdq    
  437eaa:	pop    ecx
  437eab:	std    
  437eac:	sbb    eax,0x19fd5991
  437eb1:	cdq    
  437eb2:	pop    ecx
  437eb3:	std    
  437eb4:	adc    eax,0x11fd5991
  437eb9:	cdq    
  437eba:	pop    ecx
  437ebb:	std    
  437ebc:	or     eax,0x9fd5991
  437ec1:	cdq    
  437ec2:	pop    ecx
  437ec3:	std    
  437ec4:	add    eax,0x1fd5991
  437ec9:	cdq    
  437eca:	pop    ecx
  437ecb:	std    
  437ecc:	std    
  437ecd:	nop
  437ece:	pop    ecx
  437ecf:	std    
  437ed0:	stc    
  437ed1:	cwde   
  437ed2:	pop    ecx
  437ed3:	std    
  437ed4:	cmc    
  437ed5:	nop
  437ed6:	pop    ecx
  437ed7:	std    
  437ed8:	icebp  
  437ed9:	cwde   
  437eda:	pop    ecx
  437edb:	std    
  437edc:	in     eax,dx
  437edd:	add    BYTE PTR [eax-0x671602a7],dl
  437ee3:	pop    ecx
  437ee4:	std    
  437ee5:	in     eax,0x90
  437ee7:	pop    ecx
  437ee8:	std    
  437ee9:	loope  0x437e83
  437eeb:	pop    ecx
  437eec:	std    
  437eed:	fst    QWORD PTR [eax-0x672602a7]
  437ef3:	pop    ecx
  437ef4:	std    
  437ef5:	aad    0x90
  437ef7:	pop    ecx
  437ef8:	std    
  437ef9:	rcr    DWORD PTR [eax-0x35fc1900],1
  437eff:	sti    
  437f00:	out    0x3,al
  437f02:	fdivp  st(3),st
  437f04:	out    0x3,al
  437f06:	sar    bl,cl
  437f08:	out    0x3,al
  437f0a:	(bad)  
  437f0b:	sti    
  437f0c:	out    0x3,al
  437f0e:	cli    
  437f0f:	sti    
  437f10:	out    0x3,al
  437f12:	out    dx,al
  437f13:	sti    
  437f14:	out    0x3,al
  437f16:	loop   0x437f13
  437f18:	out    0x3,al
  437f1a:	out    0xfb,al
  437f1c:	out    0x3,al
  437f1e:	jmp    0xe6fd:0x3e03e6fb
  437f25:	add    esi,DWORD PTR [edx]
  437f27:	std    
  437f28:	out    0x3,al
  437f2a:	ss std 
  437f2c:	out    0x3,al
  437f2e:	sbb    bh,ch
  437f30:	out    0x3,al
  437f32:	push   cs
  437f33:	std    
  437f34:	out    0x3,al
  437f36:	add    bh,ch
  437f38:	out    0x3,al
  437f3a:	push   es
  437f3b:	std    
  437f3c:	out    0x3,al
  437f3e:	or     bh,ch
  437f40:	out    0x3,al
  437f42:	add    BYTE PTR [esi],bl
  437f44:	std    
  437f45:	out    0x3,al
  437f47:	adc    bh,ch
  437f49:	out    0x3,al
  437f4b:	push   ss
  437f4c:	std    
  437f4d:	out    0x3,al
  437f4f:	mov    edx,0xae03e6fc
  437f54:	cld    
  437f55:	out    0x3,al
  437f57:	mov    ds:0xa603e6fc,al
  437f5c:	cld    
  437f5d:	out    0x3,al
  437f5f:	stos   BYTE PTR es:[edi],al
  437f60:	cld    
  437f61:	out    0x3,al
  437f63:	jle    0x437f61
  437f65:	out    0x3,al
  437f67:	jb     0x437f65
  437f69:	out    0x3,al
  437f6b:	jbe    0x437f69
  437f6d:	out    0x3,al
  437f6f:	pop    edx
  437f70:	cld    
  437f71:	out    0x3,al
  437f73:	dec    esi
  437f74:	cld    
  437f75:	(bad)  
  437f76:	call   0xe9472e12
  437f7b:	xchg   edi,eax
  437f7c:	mov    dl,0x3
  437f7e:	jmp    0xe947361a
  437f83:	xchg   edi,eax
  437f84:	mov    edx,0xbe97e903
  437f89:	add    ebp,ecx
  437f8b:	xchg   edi,eax
  437f8c:	ret    0xe903
  437f8f:	xchg   edi,eax
  437f90:	push   es
  437f91:	add    al,0xe9
  437f93:	xchg   edi,eax
  437f94:	or     al,BYTE PTR [ecx+ebp*8]
  437f97:	xchg   edi,eax
  437f98:	push   cs
  437f99:	add    al,0xe9
  437f9b:	xchg   edi,eax
  437f9c:	adc    al,BYTE PTR [ecx+ebp*8]
  437f9f:	xchg   edi,eax
  437fa0:	push   ss
  437fa1:	add    al,0xe9
  437fa3:	xchg   edi,eax
  437fa4:	sbb    al,BYTE PTR [ecx+ebp*8]
  437fa7:	add    BYTE PTR [edi-0x6816fbe2],dl
  437fad:	and    al,BYTE PTR [ecx+ebp*8]
  437fb0:	xchg   edi,eax
  437fb1:	out    0x3,al
  437fb3:	jmp    0xe9476a4f
  437fb8:	xchg   edi,eax
  437fb9:	out    dx,al
  437fba:	add    ebp,ecx
  437fbc:	xchg   edi,eax
  437fbd:	repnz add ebp,ecx
  437fc0:	xchg   edi,eax
  437fc1:	test   BYTE PTR [ebx],0xe9
  437fc4:	xchg   edi,eax
  437fc5:	cli    
  437fc6:	add    ebp,ecx
  437fc8:	xchg   edi,eax
  437fc9:	inc    BYTE PTR [ebx]
  437fcb:	jmp    0xe9478267
  437fd0:	xchg   edi,eax
  437fd1:	inc    esi
  437fd2:	std    
  437fd3:	call   0xe940ca6f
  437fd8:	xchg   edi,eax
  437fd9:	dec    esi
  437fda:	std    
  437fdb:	call   0xe940d277
  437fe0:	xchg   edi,eax
  437fe1:	push   esi
  437fe2:	std    
  437fe3:	call   0xe940da7f
  437fe8:	xchg   edi,eax
  437fe9:	pop    esi
  437fea:	std    
  437feb:	call   0x40e287
  437ff0:	in     eax,dx
  437ff1:	add    dl,bl
  437ff3:	add    edi,ebp
  437ff5:	add    dh,dl
  437ff7:	add    edi,ebp
  437ff9:	add    dl,dl
  437ffb:	add    ebp,ebp
  437ffd:	add    dh,cl
  437fff:	add    ebp,ebp
  438001:	add    dl,cl
  438003:	add    edi,DWORD PTR [ebp-0x42fee700]
  438009:	add    BYTE PTR ds:0xad0001,dl
  43800f:	adc    DWORD PTR [ecx],eax
  438011:	lods   eax,DWORD PTR ds:[esi]
  438012:	add    BYTE PTR ds:0xa00bd01,cl
  438018:	add    DWORD PTR [ebp-0x52fed200],edi
  43801e:	add    BYTE PTR ds:0xfd00ad01,dh
  438024:	add    BYTE PTR [ebp+0x0],bh
  438027:	stc    
  438028:	add    BYTE PTR [ebp+0x0],bh
  43802b:	cmc    
  43802c:	add    BYTE PTR [ebp+0x0],ch
  43802f:	icebp  
  438030:	add    BYTE PTR [ebp+0x0],ch
  438033:	in     eax,dx
  438034:	add    BYTE PTR [ebp+0x0],bh
  438037:	jmp    0x6d00:0xe5007d00
  43803e:	add    cl,ah
  438040:	add    BYTE PTR [ebp+0x0],ch
  438043:	fld    QWORD PTR [eax]
  438045:	cmp    eax,0x3d00d900
  43804a:	add    ch,dl
  43804c:	add    BYTE PTR ds:0x2d00d100,ch
  438052:	add    ch,cl
  438054:	add    BYTE PTR ds:0x3d00ca00,bh
  43805a:	add    ch,al
  43805c:	add    BYTE PTR ds:0x2d00c100,ch
  438062:	add    BYTE PTR [ebp-0x47000300],bh
  438068:	add    BYTE PTR [ecx+ebx*2+0x5994bafd],dl
  43806f:	std    
  438070:	mov    dh,0x0
  438072:	xchg   esp,eax
  438073:	pop    ecx
  438074:	std    
  438075:	mov    dl,0x94
  438077:	pop    ecx
  438078:	std    
  438079:	scas   al,BYTE PTR es:[edi]
  43807a:	xchg   esp,eax
  43807b:	pop    ecx
  43807c:	std    
  43807d:	stos   BYTE PTR es:[edi],al
  43807e:	xchg   esp,eax
  43807f:	pop    ecx
  438080:	std    
  438081:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  438082:	xchg   esp,eax
  438083:	pop    ecx
  438084:	std    
  438085:	mov    ds:0x59fd5994,al
  43808a:	retf   
  43808b:	in     al,0x1e
  43808d:	mov    DWORD PTR [ecx+0x36],ebx
  438090:	inc    edi
  438091:	inc    ebx
  438092:	jbe    0x4380ed
  438094:	dec    eax
  438095:	inc    ebx
  438096:	xchg   esi,eax
  438097:	cmp    ebp,edi
  438099:	call   DWORD PTR [edx+edx*4+0x597401c1]
  4380a0:	std    
  4380a1:	call   DWORD PTR [edi]
  4380a3:	pop    ebp
  4380a4:	adc    al,0x40
  4380a6:	or     DWORD PTR [ebx+0x48],ebx
  4380a9:	inc    ebx
  4380aa:	xchg   edx,eax
  4380ab:	cdq    
  4380ac:	std    
  4380ad:	call   DWORD PTR [esi+ebx*8-0x3c74e340]
  4380b4:	sti    
  4380b5:	mov    bl,BYTE PTR [eax+0x170002d3]
  4380bb:	sbb    DWORD PTR [eax],ecx
  4380bd:	stc    
  4380be:	inc    esp
  4380bf:	(bad)  
  4380c0:	dec    ebx
  4380c1:	stc    
  4380c2:	loopne 0x438117
  4380c4:	jl     0x438109
  4380c6:	ja     0x4380f6
  4380c8:	ret    0xea28
  4380cb:	(bad)  
  4380cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4380cd:	jl     0x438127
  4380cf:	cmp    ch,BYTE PTR [edx+0x48598cbd]
  4380d5:	inc    ebx
  4380d6:	add    BYTE PTR [esi-0x6b0002a7],cl
  4380dc:	faddp  st(0),st
  4380de:	sbb    al,0x93
  4380e0:	or     eax,esp
  4380e2:	(bad)  
  4380e3:	jo     0x4380e5
  4380e5:	stos   BYTE PTR es:[edi],al
  4380e6:	add    edx,DWORD PTR [eax+eax*1+0x430bc3a0]
  4380ed:	out    0x12,eax
  4380ef:	ror    BYTE PTR [edx-0x28],cl
  4380f2:	jp     0x43814b
  4380f4:	mul    BYTE PTR [ebp+0x4b]
  4380f7:	repz retf 
  4380f9:	loop   0x43807f
  4380fb:	push   edi
  4380fc:	out    0xe7,al
  4380fe:	test   ah,bl
  438100:	std    
  438101:	xor    ecx,DWORD PTR [eax]
  438103:	pop    ecx
  438104:	mov    ebp,0xad1b07fc
  438109:	call   0xe8403550
  43810e:	push   ebx
  43810f:	xchg   edi,eax
  438110:	add    bh,dh
  438112:	add    edx,DWORD PTR [ebp+esi*2+0x42b173eb]
  438119:	inc    bx
  43811b:	nop
  43811c:	inc    ebx
  43811d:	xchg   edi,eax
  43811e:	inc    esp
  43811f:	sbb    DWORD PTR [ebp-0x4019ff3b],edi
  438125:	out    0x84,eax
  438127:	je     0x438132
  438129:	sub    BYTE PTR [ebx-0x77],bl
  43812c:	jns    0x4380da
  43812e:	stc    
  43812f:	inc    eax
  438130:	ds data16 into 
  438133:	xchg   ebp,eax
  438134:	and    bl,al
  438136:	and    dh,cl
  438138:	mov    ebx,0x110002dc
  43813d:	mov    esp,0xc1260105
  438142:	in     al,0x84
  438144:	je     0x438140
  438146:	outs   dx,DWORD PTR ds:[esi]
  438147:	(bad)  
  438148:	mov    eax,ds:0x96f59c7d
  43814d:	retf   
  43814e:	fadd   QWORD PTR [edi+edi*4-0x6829190a]
  438155:	jge    0x438103
  438157:	in     eax,dx
  438158:	xchg   edi,eax
  438159:	cmp    eax,0x2095ce66
  43815e:	add    BYTE PTR [ebp-0x65],dh
  438161:	ret    
  438162:	inc    edx
  438163:	rcl    DWORD PTR [ebx-0x659b827d],cl
  438169:	lock jb 0x438151
  43816c:	push   ss
  43816d:	mov    esi,0x5856eb15
  438172:	pop    esi
  438173:	into   
  438174:	dec    ebx
  438175:	inc    edi
  438176:	test   DWORD PTR [esi+edi*8],ebp
  438179:	inc    edx
  43817a:	inc    esp
  43817b:	or     dl,BYTE PTR [edi]
  43817d:	mov    esi,0x4756eb1c
  438182:	inc    ebx
  438183:	or     dl,BYTE PTR [edi-0x3d]
  438186:	inc    edx
  438187:	retf   0x8395
  43818a:	jge    0x4381a8
  43818c:	xchg   esi,eax
  43818d:	lock jb 0x43817f
  438190:	pop    edi
  438191:	and    al,0xf9
  438193:	mov    cs,WORD PTR [ebx-0x7d]
  438196:	call   0x4417c8
  43819b:	stos   BYTE PTR es:[edi],al
  43819c:	pop    ss
  43819d:	(bad)  
  43819e:	std    
  43819f:	fadd   DWORD PTR [eax]
  4381a1:	mov    esp,0x4ba3e7fa
  4381a6:	inc    edi
  4381a7:	stc    
  4381a8:	pop    bp
  4381aa:	in     al,0xbc
  4381ac:	push   ecx
  4381ad:	stos   DWORD PTR es:[edi],eax
  4381ae:	inc    edx
  4381af:	stc    
  4381b0:	jmp    0x1abe458b
  4381b5:	push   eax
  4381b6:	into   
  4381b7:	add    DWORD PTR [ecx-0x49],edx
  4381ba:	inc    edx
  4381bb:	stc    
  4381bc:	jmp    0xa86c997
  4381c1:	xlat   BYTE PTR ds:[ebx]
  4381c2:	ret    
  4381c3:	jp     0x4381b0
  4381c5:	mov    bh,0xc4
  4381c7:	add    ch,BYTE PTR [edx+0x5d]
  4381ca:	in     al,0x2
  4381cc:	sub    dl,BYTE PTR [edi]
  4381ce:	mov    ebp,0xc3d6ea1c
  4381d3:	jp     0x4381c0
  4381d5:	push   edi
  4381d6:	into   
  4381d7:	add    al,BYTE PTR [eax]
  4381d9:	mov    esi,0x7e091c37
  4381de:	jge    0x438255
  4381e0:	add    cl,BYTE PTR [ebp+0x28]
  4381e3:	inc    BYTE PTR [edx-0x3d02e210]
  4381e9:	jle    0x438223
  4381eb:	sbb    al,0x3
  4381ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4381ef:	jg     0x4381f0
  4381f1:	jmp    0x7abd:0x8e45f6b1
  4381f8:	jge    0x4381e8
  4381fa:	cmp    al,0x6e
  4381fc:	and    dh,BYTE PTR [edx]
  4381fe:	cmp    bl,bh
  438200:	aas    
  438201:	in     eax,dx
  438202:	cld    
  438203:	(bad)  
  438204:	inc    BYTE PTR [eax]
  438206:	mov    al,0x1d
  438208:	add    DWORD PTR [ebp-0x22],0x41
  43820c:	scas   eax,DWORD PTR es:[edi]
  43820d:	or     BYTE PTR [eax],bh
  43820f:	stc    
  438210:	test   DWORD PTR [ebx],eax
  438212:	lods   eax,DWORD PTR ds:[esi]
  438213:	jge    0x4381d5
  438215:	add    al,0xa
  438217:	or     eax,0x1cbf45bf
  43821c:	add    BYTE PTR [eax],al
  43821e:	mov    ebp,0xce45f6bd
  438223:	mov    ebp,0x3cde7d7a
  438228:	outs   dx,BYTE PTR ds:[esi]
  438229:	and    edi,edx
  43822b:	dec    eax
  43822c:	sbb    al,0xfe
  43822e:	xor    dl,ah
  438230:	jg     0x4382af
  438232:	(bad)  
  438233:	aas    
  438234:	outs   dx,BYTE PTR ds:[esi]
  438235:	push   es
  438236:	aad    0x66
  438238:	stc    
  438239:	(bad)  
  43823a:	jge    0x4381ff
  43823c:	add    BYTE PTR [ebp-0x62],0x3f
  438240:	scas   eax,DWORD PTR es:[edi]
  438241:	or     al,bh
  438243:	pop    es
  438244:	xchg   BYTE PTR [ebx],al
  438246:	ins    DWORD PTR es:[edi],dx
  438247:	add    eax,0x4
  43824a:	jp     0x43823f
  43824c:	mov    edx,0xf8e2f083
  438251:	ret    0x1694
  438254:	enter  0x3a1c,0x65
  438258:	pop    ds
  438259:	xor    BYTE PTR [ecx-0x6d8d05b5],0x11
  438260:	retf   0x23fe
  438263:	sub    bh,BYTE PTR [esi]
  438265:	test   ecx,edx
  438267:	dec    edx
  438268:	cli    
  438269:	mov    cl,0x0
  43826b:	pushf  
  43826c:	mov    ah,0x7
  43826e:	mov    dl,BYTE PTR [edi-0x673f7fd7]
  438274:	push   esi
  438275:	xor    al,0xbd
  438277:	pop    ss
  438278:	int    0xfd
  43827a:	pop    ds
  43827b:	jo     0x4382b0
  43827d:	push   ebp
  43827e:	hlt    
  43827f:	jmp    0x80a:0x597d4b7e
  438286:	mov    ebp,0xf94a43ec
  43828b:	shr    DWORD PTR [edx+0x6a961cc0],cl
  438291:	jg     0x43830e
  438293:	xchg   ecx,ebp
  438295:	rol    BYTE PTR [ecx],1
  438297:	lods   al,BYTE PTR ds:[esi]
  438298:	loope  0x438296
  43829a:	call   DWORD PTR [edx+ebp*2+0x2b77437f]
  4382a1:	inc    eax
  4382a2:	jge    0x4382fd
  4382a4:	dec    edx
  4382a5:	add    DWORD PTR [ebp+0x31ee517],edi
  4382ab:	push   edi
  4382ac:	stos   BYTE PTR es:[edi],al
  4382ad:	enter  0xd42c,0x54
  4382b1:	add    ebp,eax
  4382b3:	mov    cl,0x28
  4382b5:	std    
  4382b6:	call   DWORD PTR [edi-0x3f]
  4382b9:	test   dl,bh
  4382bb:	jae    0x438283
  4382bd:	ds call 0xf98e8251
  4382c3:	pop    ss
  4382c4:	je     0x4382bd
  4382c6:	cld    
  4382c7:	loopne 0x4382f0
  4382c9:	push   ebp
  4382ca:	test   al,0x52
  4382cc:	add    BYTE PTR [edx],ah
  4382ce:	dec    ebp
  4382cf:	add    BYTE PTR [ecx],cl
  4382d1:	sub    bh,dh
  4382d3:	add    dl,BYTE PTR [eax+eax*1-0x1c287eda]
  4382da:	in     eax,0x40
  4382dc:	mov    cl,0xbd
  4382de:	call   0x664929a6
  4382e3:	mov    DWORD PTR [eax-0x287ed9f7],0x9140e3e3
  4382ed:	mov    ebp,0x586f3e8
  4382f2:	data16 (bad) 
  4382f4:	mov    al,ds:0x7f80a603
  4382f9:	push   es
  4382fa:	pop    es
  4382fb:	xlat   BYTE PTR ds:[ebx]
  4382fc:	xchg   esi,eax
  4382fd:	sub    DWORD PTR [ecx+eiz*1],0xffffff97
  438301:	inc    ebx
  438302:	data16 mov BYTE PTR [eax+0x5f83a609],0x0
  43830a:	call   0x96c18e5
  43830f:	dec    esi
  438310:	int    0x3e
  438312:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  438313:	pop    ebx
  438314:	into   
  438315:	jmp    esi
  438317:	add    edi,ecx
  438319:	jg     0x438327
  43831b:	add    al,0xb3
  43831d:	mov    bl,0xe8
  43831f:	pop    ebx
  438320:	inc    eax
  438321:	ds jp  0x438370
  438324:	loope  0x4383a5
  438326:	hlt    
  438327:	add    bl,BYTE PTR [ebx-0x23a41f4d]
  43832d:	bound  ecx,QWORD PTR ds:[ecx+ecx*2-0x7e]
  438332:	fadd   QWORD PTR [ecx]
  438334:	add    BYTE PTR [ebx+esi*4+0x3eb85be8],ah
  43833b:	dec    edx
  43833c:	dec    esp
  43833d:	xor    DWORD PTR [ecx],ebp
  43833f:	mov    eax,DWORD PTR [ebx]
  438341:	xchg   esp,eax
  438342:	add    BYTE PTR [esi],ah
  438344:	sbb    bh,0xf1
  438347:	jmp    FWORD PTR [eax+0x51e80042]
  43834d:	xchg   edi,eax
  43834e:	add    BYTE PTR [eax],al
  438350:	sub    dl,BYTE PTR [edx+edi*4]
  438353:	std    
  438354:	enter  0x36a,0x7d
  438358:	lods   al,BYTE PTR ds:[esi]
  438359:	je     0x43835a
  43835b:	mov    esp,0x31d5a6a
  438360:	sub    dl,ah
  438362:	mov    ebx,0xb227eb7a
  438367:	sgdtd  [ebx+0x3b]
  43836b:	stc    
  43836c:	out    dx,al
  43836d:	mov    eax,ecx
  43836f:	adc    eax,0x7d1cd4e8
  438374:	and    al,0xbb
  438376:	add    bh,BYTE PTR [ebp-0x6c50b3f]
  43837c:	into   
  43837d:	jae    0x438340
  43837f:	adc    eax,0x7d1cd4e8
  438384:	and    al,0xbb
  438386:	add    al,0xbd
  438388:	push   0xffffffcd
  43838a:	in     al,dx
  43838b:	aas    
  43838c:	xor    al,0x96
  43838e:	sub    BYTE PTR [ebx-0x17],dl
  438391:	xchg   edi,eax
  438392:	add    BYTE PTR [ebp+0x193bcd6a],bh
  438398:	sbb    al,0x0
  43839a:	xchg   ebp,eax
  43839b:	mov    ebx,0x7b96ca42
  4383a0:	jge    0x4383ce
  4383a2:	jae    0x4383a5
  4383a4:	mov    ebp,0xf93a1991
  4383a9:	jbe    0x4383be
  4383ab:	mov    edx,0xff64e911
  4383b0:	out    0x2f,eax
  4383b2:	fnsave [edi]
  4383b4:	stc    
  4383b5:	sub    ah,al
  4383b7:	jmp    0xcc7d:0x7b97e8ff
  4383be:	mov    al,al
  4383c0:	jb     0x4383c2
  4383c2:	js     0x43834a
  4383c4:	cmp    eax,0x7ac67823
  4383c9:	jge    0x43843a
  4383cb:	loope  0x438439
  4383cd:	add    eax,0x51c3fbe
  4383d2:	jle    0x438359
  4383d4:	cmp    eax,0x7fc62e23
  4383d9:	jge    0x438408
  4383db:	add    al,0x6d
  4383dd:	push   es
  4383de:	xchg   ebp,eax
  4383df:	stos   DWORD PTR es:[edi],eax
  4383e0:	hlt    
  4383e1:	call   DWORD PTR [edx+0x2d01e7c5]
  4383e7:	add    DWORD PTR [eax],eax
  4383e9:	ret    
  4383ea:	gs leave 
  4383ec:	idiv   bh
  4383ee:	add    al,dh
  4383f0:	jp     0x43846f
  4383f2:	scas   al,BYTE PTR es:[edi]
  4383f3:	inc    esp
  4383f4:	outs   dx,BYTE PTR ds:[esi]
  4383f5:	push   es
  4383f6:	in     eax,0xd9
  4383f8:	idiv   bh
  4383fa:	loop   0x4383c1
  4383fc:	out    0x7b,eax
  4383fe:	add    al,ah
  438400:	leave  
  438401:	test   BYTE PTR [ebx-0x3d071a48],0x6e
  438408:	dec    eax
  438409:	sti    
  43840a:	pop    ds
  43840b:	mov    eax,ds:0x6be13e
  438410:	retf   0x83f6
  438413:	js     0x4383fa
  438415:	add    eax,ebx
  438417:	and    eax,0x22fff624
  43841c:	xchg   BYTE PTR ds:0xe7c5bf23,bh
  438422:	mov    esi,0xe8f6ca11
  438427:	scas   eax,DWORD PTR es:[edi]
  438428:	(bad)  
  438429:	idiv   bh
  43842b:	cs dec eax
  43842d:	str    WORD PTR [eax-0x68ba7bc5]
  438434:	add    eax,0x40ee233d
  438439:	sbb    al,0x3
  43843b:	xchg   esp,eax
  43843c:	out    0x81,al
  43843e:	jnp    0x4383ca
  438440:	sub    al,dl
  438442:	add    DWORD PTR [esi+ecx*4+0x46],edi
  438446:	stc    
  438447:	arpl   di,sp
  438449:	jns    0x43848e
  43844b:	jle    0x438475
  43844d:	rcr    BYTE PTR [edi+edx*1],0x65
  438451:	and    bh,dh
  438453:	push   esi
  438454:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  438455:	(bad)  
  438456:	std    
  438457:	mov    ds:0x12e8139d,eax
  43845c:	push   ss
  43845d:	inc    esi
  43845e:	stc    
  43845f:	cmp    al,0xe0
  438461:	inc    eax
  438462:	stc    
  438463:	add    BYTE PTR [ebx],ch
  438465:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  438466:	(bad)  
  438467:	adc    DWORD PTR [esp+esi*4+0x4fd184f9],edx
  43846e:	add    al,0x43
  438470:	mov    bh,0xa6
  438472:	mov    edi,0x8366921c
  438477:	jnp    0x438423
  438479:	sub    dl,cl
  43847b:	add    esp,ebp
  43847d:	lds    eax,FWORD PTR [esi-0x7]
  438480:	repz data16 jnp 0x4384c7
  438484:	mov    gs,WORD PTR [eax]
  438486:	mov    edx,0x22e5171c
  43848b:	(bad)  
  43848c:	(bad)  
  43848d:	inc    ecx
  43848e:	mov    al,0xfb
  438490:	shr    DWORD PTR [edx+0x5c],cl
  438493:	cwde   
  438494:	enter  0x4762,0x7d
  438498:	inc    ecx
  438499:	xor    edi,ebp
  43849b:	jb     0x43842c
  43849d:	sahf   
  43849e:	mov    eax,0x22e49515
  4384a3:	jge    0x4384f6
  4384a5:	inc    esi
  4384a6:	stc    
  4384a7:	mov    esp,0xfeef3d17
  4384ac:	and    BYTE PTR [ebx],ch
  4384ae:	push   ebp
  4384af:	ss xchg ebx,eax
  4384b1:	stos   BYTE PTR es:[edi],al
  4384b2:	inc    esi
  4384b3:	mov    ebp,0xedac001f
  4384b8:	add    ah,0x5
  4384bb:	test   edi,edx
  4384bd:	(bad)  
  4384bf:	inc    esp
  4384c0:	jl     0x4384a0
  4384c2:	dec    edx
  4384c3:	dec    ecx
  4384c4:	ins    DWORD PTR es:[edi],dx
  4384c5:	sub    cl,cl
  4384c7:	inc    edi
  4384c8:	add    BYTE PTR [ebp+0x3b],bl
  4384cb:	mov    WORD PTR [ebp+0x3c01b101],0x2a19
  4384d4:	dec    ecx
  4384d5:	dec    ebp
  4384d6:	aas    
  4384d7:	outs   dx,BYTE PTR ds:[esi]
  4384d8:	mov    edi,0x24a401a9
  4384dd:	mov    ecx,0xf105c5c5
  4384e2:	daa    
  4384e3:	popf   
  4384e4:	inc    edi
  4384e5:	sub    eax,0x85c7663b
  4384ea:	add    bh,BYTE PTR [ecx+0x1]
  4384ed:	sub    al,0x3d
  4384ef:	icebp  
  4384f0:	dec    eax
  4384f1:	or     eax,0x153ff3f
  4384f6:	cmp    esp,edx
  4384f8:	jl     0x438551
  4384fa:	push   ss
  4384fb:	call   0x2cc31dbe
  438500:	and    eax,0x63bf3df2
  438505:	loope  0x438541
  438507:	ret    0xb85b
  43850a:	cmp    al,0xba
  43850c:	dec    eax
  43850d:	pop    ecx
  43850e:	mov    ebp,0x24dfed8
  438513:	mov    edi,0xa23ace30
  438518:	inc    esp
  438519:	sbb    ebp,eax
  43851b:	cld    
  43851c:	add    dl,BYTE PTR [edi-0x21]
  43851f:	gs mov esi,0x5ba5fe90
  438525:	in     eax,dx
  438526:	or     BYTE PTR ss:[eax-0x54],0xfe
  43852b:	jp     0x438575
  43852d:	add    BYTE PTR [ebp-0x7a0bff82],bl
  438533:	cmp    dh,BYTE PTR [ebx+edx*8+0x10]
  438537:	mov    dh,0x5
  438539:	jmp    0x97:0xe9ac7f7c
  438540:	jge    0x438516
  438542:	ins    DWORD PTR es:[edi],dx
  438543:	dec    BYTE PTR [eax]
  438545:	pop    edi
  438546:	xor    DWORD PTR [ecx],eax
  438548:	add    cl,ch
  43854a:	mov    edi,0xcc3efa9a
  43854f:	jnp    0x4385ce
  438551:	mov    ah,0x45
  438553:	cmp    esi,DWORD PTR [ebx+edx*8+0x10]
  438557:	mov    dh,0x5
  438559:	jmp    0x97:0xe98c7f3c
  438560:	jge    0x4384f6
  438562:	sub    eax,0x115f0a3b
  438567:	add    DWORD PTR [eax],eax
  438569:	jmp    0xff3d402d
  43856e:	sar    DWORD PTR [ebx+0x7d],cl
  438571:	je     0x438578
  438573:	cmp    al,0x74
  438575:	fst    DWORD PTR [eax]
  438577:	mov    dh,0x5
  438579:	jmp    0x97:0xe96c7f0a
  438580:	call   0xf97adfca
  438585:	stos   BYTE PTR es:[edi],al
  438586:	pop    ss
  438587:	mov    dh,0x11
  438589:	jmp    0x3cde:0x3c7d05c4
  438590:	je     0x4385a5
  438592:	add    BYTE PTR [eax-0x2e],dh
  438595:	stc    
  438596:	scas   al,BYTE PTR es:[edi]
  438597:	push   ebx
  438598:	jnp    0x438617
  43859a:	and    al,0xb2
  43859c:	std    
  43859d:	jb     0x43858c
  43859f:	push   ss
  4385a0:	mov    dh,0x5
  4385a2:	jmp    0x3752:0x21e7c1c4
  4385a9:	stc    
  4385aa:	add    dh,ch
  4385ac:	jge    0x438623
  4385ae:	push   ss
  4385af:	mov    al,0x50
  4385b1:	jmp    edi
  4385b3:	dec    ecx
  4385b4:	ret    
  4385b5:	idiv   bh
  4385b7:	ds jge 0x43862f
  4385ba:	push   ss
  4385bb:	jae    0x43860d
  4385bd:	add    eax,0xfc375883
  4385c2:	je     0x43855b
  4385c4:	fsub   QWORD PTR [ecx]
  4385c6:	(bad)  
  4385c7:	fcmovb st,st(1)
  4385c9:	mov    edx,0x2b5883
  4385ce:	jne    0x43860b
  4385d0:	jle    0x438647
  4385d2:	or     bh,BYTE PTR [esi]
  4385d4:	push   eax
  4385d5:	adc    DWORD PTR [ebx+0x75400df8],eax
  4385db:	dec    ecx
  4385dc:	jle    0x438653
  4385de:	push   cs
  4385df:	sub    eax,0x39e80549
  4385e4:	ret    
  4385e5:	idiv   bh
  4385e7:	jle    0x4385c5
  4385e9:	std    
  4385ea:	std    
  4385eb:	call   0xfa26:0xf08bbac1
  4385f2:	inc    esp
  4385f3:	fidivr WORD PTR [ebp+0x3d]
  4385f6:	and    eax,DWORD PTR [eax]
  4385f8:	(bad)  
  4385f9:	mov    ebp,0xc1f7eee7
  4385fe:	imul   al
  438600:	lahf   
  438601:	(bad)
  438604:	jle    0x43864e
  438606:	(bad)  
  438608:	pop    eax
  438609:	cmp    ah,cl
  43860b:	in     eax,0xd8
  43860d:	shl    esi,0xc3
  438610:	inc    ax
  438612:	adc    eax,DWORD PTR [ecx]
  438614:	sbb    ch,0x7a
  438617:	inc    ebp
  438618:	sahf   
  438619:	std    
  43861a:	mov    edx,0xf6c708e8
  43861f:	jmp    DWORD PTR ds:0x94fff434
  438625:	xchg   edx,eax
  438626:	jle    0x4386a3
  438628:	and    BYTE PTR [edi],0xd0
  43862b:	add    DWORD PTR [edx+ebp*2+0x659bf948],ebp
  438632:	jle    0x4386af
  438634:	stos   BYTE PTR es:[edi],al
  438635:	sub    edx,eax
  438637:	add    DWORD PTR [edx+esi*8+0x47],edi
  43863b:	stc    
  43863c:	sub    ebx,0x7d
  43863f:	jnp    0x4385e3
  438641:	sub    dl,al
  438643:	add    DWORD PTR [esi+edi*2+0x48],edi
  438647:	stc    
  438648:	imul   ebp,ebx,0x7d
  43864b:	jnp    0x4385d7
  43864d:	and    eax,0x8a6c01d0
  438652:	dec    eax
  438653:	stc    
  438654:	push   ebx
  438655:	jmp    0x4386d4
  438657:	jnp    0x4385fb
  438659:	sbb    al,0xd0
  43865b:	add    DWORD PTR [eax],eax
  43865d:	sub    al,0xb6
  43865f:	inc    edi
  438660:	stc    
  438661:	cmp    ebp,ebx
  438663:	jge    0x4386e0
  438665:	mov    ah,BYTE PTR [esi]
  438667:	ret    
  438668:	add    DWORD PTR [edx+eiz*4],edi
  43866b:	inc    edi
  43866c:	stc    
  43866d:	and    ebp,ebx
  43866f:	jne    0x4386b4
  438671:	jle    0x43869b
  438673:	rcr    BYTE PTR [edi+edx*1],0x65
  438677:	push   ds
  438678:	(bad)  
  438679:	(bad)  
  43867a:	add    DWORD PTR [esi+esi*8+0x7b7f1f03],ecx
  438681:	mov    ds:0xfc01ca29,al
  438686:	mov    ebp,0x6aebf940
  43868b:	jg     0x438708
  43868d:	mov    ch,BYTE PTR [eax]
  43868f:	retf   0xec01
  438692:	leave  
  438693:	inc    eax
  438694:	stc    
  438695:	shr    DWORD PTR [edx+0x7f],cl
  438698:	jnp    0x43863c
  43869a:	sub    ecx,edx
  43869c:	push   cs
  43869d:	lods   al,BYTE PTR ds:[esi]
  43869e:	add    BYTE PTR [edx+ecx*2],dh
  4386a1:	mov    ebp,0x99c76637
  4386a6:	add    ebx,DWORD PTR [ebx]
  4386a8:	mov    dl,0xb3
  4386aa:	leave  
  4386ab:	mov    eax,DWORD PTR [ebp-0x63]
  4386ae:	inc    ebx
  4386af:	mov    WORD PTR [ebp+0x7bfdf403],0x73f5
  4386b8:	inc    ebp
  4386b9:	lea    eax,[ebx+0x66]
  4386bc:	(bad)  
  4386bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4386be:	cld    
  4386bf:	fcomi  st,st(2)
  4386c1:	add    BYTE PTR [ebx-0x16],dh
  4386c4:	pop    esp
  4386c5:	inc    ebp
  4386c6:	ins    DWORD PTR es:[edi],dx
  4386c7:	adc    esp,0xfffffff9
  4386ca:	push   0xb65bf9b3
  4386cf:	xor    eax,0x83194542
  4386d4:	mov    esp,0xe8ad96ed
  4386d9:	pop    ebx
  4386da:	mov    ds:0x1452a35,al
  4386df:	and    DWORD PTR [ebp+ebp*8+0x5bf7ad95],0xffffff95
  4386e7:	cmp    dl,BYTE PTR [edx]
  4386e9:	inc    ebp
  4386ea:	test   eax,0xa800dcb5
  4386ef:	add    al,0xf
  4386f1:	add    DWORD PTR [edi],ebx
  4386f3:	aaa    
  4386f4:	cli    
  4386f5:	inc    eax
  4386f6:	cld    
  4386f7:	xor    al,0xf3
  4386f9:	inc    esp
  4386fa:	or     eax,0xa9bf5e43
  4386ff:	add    DWORD PTR [ecx+eiz*1],ebp
  438702:	jns    0x4386c1
  438704:	add    eax,0x1283101
  438709:	dec    edx
  43870a:	in     eax,dx
  43870b:	data16 mov BYTE PTR ss:[ebp-0xc01c400],0x20
  438714:	mov    ebx,0x42cd44
  438719:	push   0xffffffd2
  43871b:	adc    bh,bh
  43871d:	xor    eax,edx
  43871f:	push   ds
  438720:	shl    DWORD PTR [ebp+0x6abd3950],cl
  438726:	add    dl,bl
  438728:	adc    dh,bh
  43872a:	sbb    esp,DWORD PTR [edi+0x5890be1e]
  438730:	cmp    DWORD PTR [ebp+0x4],edi
  438733:	sahf   
  438734:	xor    ebp,DWORD PTR [ebp+0x1b]
  438737:	lock jp 0x438736
  43873a:	jbe    0x43870c
  43873c:	jae    0x4387bb
  43873e:	in     al,dx
  43873f:	jno    0x438776
  438741:	je     0x438732
  438743:	fbld   TBYTE PTR [esi-0x4]
  438746:	pop    esi
  438747:	fdiv   DWORD PTR [ebx+0x7d]
  43874a:	aam    0x79
  43874c:	add    dh,BYTE PTR [ebx-0x8]
  43874f:	mov    edi,0xd046f797
  438754:	mov    bl,0x7a
  438756:	repz xchg esp,eax
  438758:	lods   al,BYTE PTR ds:[esi]
  438759:	sub    BYTE PTR [ecx-0x44],al
  43875c:	xor    al,0xf9
  43875e:	cs aam 0xb3
  438761:	jp     0x438762
  438763:	cmp    dh,BYTE PTR [ebx+0x34a81101]
  438769:	stc    
  43876a:	push   ss
  43876b:	aam    0xb3
  43876d:	jp     0x438766
  43876f:	and    DWORD PTR [ebx+0x2f53110e],esi
  438775:	stc    
  438776:	(bad)  
  438777:	xchg   ebx,eax
  438778:	mov    ecx,0x9dbea05
  43877d:	call   0xf97ae2f3
  438782:	stos   BYTE PTR es:[edi],al
  438783:	test   al,0xa6
  438785:	sti    
  438786:	ficom  WORD PTR [edi+0x73]
  438789:	test   DWORD PTR [eax+eax*1],ebp
  43878c:	mov    dh,BYTE PTR ds:0xc21b0a44
  438792:	sbb    al,0x0
  438794:	out    dx,al
  438795:	mov    esi,0xc1d4a3e7
  43879a:	test   BYTE PTR [ebx+0x75001a80],0xbb
  4387a1:	jmp    0xc23683f3
  4387a6:	mov    edx,0xf91a9083
  4387ab:	je     0x438768
  4387ad:	jmp    0xc25683f3
  4387b2:	mov    edx,0xfa1a9083
  4387b7:	je     0x438821
  4387b9:	jmp    0xc24680ec
  4387be:	jp     0x43883d
  4387c0:	ja     0x4387c0
  4387c2:	push   es
  4387c3:	test   BYTE PTR [esi+0x1],dh
  4387c6:	add    BYTE PTR [eax],al
  4387c8:	lds    esi,FWORD PTR [ecx]
  4387ca:	cmc    
  4387cb:	inc    edx
  4387cd:	mov    ebp,0xfe6b7d7a
  4387d2:	ins    BYTE PTR es:[edi],dx
  4387d3:	sbb    eax,0xffb3fee
  4387d8:	or     BYTE PTR [eax+ebp*8],cl
  4387db:	push   ss
  4387dc:	test   cl,al
  4387de:	test   BYTE PTR [ebx+0x73fb02f0],0x53
  4387e5:	jmp    0xc1d683f3
  4387ea:	mov    edx,0xf6f531e8
  4387ef:	inc    DWORD PTR [eax]
  4387f1:	outs   dx,BYTE PTR ds:[esi]
  4387f2:	jge    0x438869
  4387f4:	push   ss
  4387f5:	sub    DWORD PTR [eax-0x1],edi
  4387f8:	out    0xfd,eax
  4387fa:	hlt    
  4387fb:	idiv   bh
  4387fd:	mov    esi,0xf816757d
  438802:	ja     0x438803
  438804:	out    0xd9,eax
  438806:	cmc    
  438807:	idiv   bh
  438809:	ds jle 0x438881
  43880c:	push   ss
  43880d:	xchg   esp,eax
  43880e:	and    eax,0x47ec0eb8
  438813:	xor    eax,0xbfa9dbf9
  438818:	add    eax,0xe7eaeb97
  43881d:	jmp    0xd83cc693
  438822:	test   eax,0x149311bf
  438827:	adc    eax,0xd29317d
  43882c:	jae    0x4387b3
  43882e:	jg     0x438871
  438830:	clc    
  438831:	mov    ds:0x8e7b8285,eax
  438836:	sub    dh,BYTE PTR [ecx+0x3a6a7c0b]
  43883c:	stc    
  43883d:	mov    esp,DWORD PTR [edi+0x25]
  438840:	mov    dh,0x7f
  438842:	mov    ds:0x650fbd3d,eax
  438847:	sbb    edi,edi
  438849:	fadd   DWORD PTR [esi]
  43884b:	add    DWORD PTR [ebx-0x49],0x6fe84226
  438852:	sar    BYTE PTR ds:0x3d1700f9,cl
  438858:	pop    ss
  438859:	add    cl,cl
  43885b:	dec    esp
  43885c:	and    eax,0x3deb4c91
  438861:	jge    0x438824
  438863:	pop    ds
  438864:	add    cl,BYTE PTR [ecx]
  438866:	adc    edx,ecx
  438868:	cld    
  438869:	call   DWORD PTR [ecx+edx*1+0xb2bf58e]
  438870:	inc    edx
  438871:	jge    0x438814
  438873:	sub    eax,DWORD PTR [ebx+esi*2]
  438876:	adc    DWORD PTR [ecx],0x3313f7b9
  43887c:	cmp    DWORD PTR [ebx-0x62],0x26
  438880:	push   cs
  438881:	sbb    DWORD PTR [ecx],0x2a
  438884:	std    
  438885:	(bad)  
  438886:	in     al,dx
  438887:	add    BYTE PTR [ebx+0x3d],bl
  43888a:	in     eax,dx
  43888b:	xor    esp,DWORD PTR [esi-0x1af5907b]
  438891:	mov    dh,0x86
  438893:	sub    BYTE PTR [eax+0x3c],cl
  438896:	fnsave [ebx]
  438898:	mov    di,0xff99
  43889c:	jmp    0xe743bb27
  4388a1:	add    ebp,DWORD PTR [ecx+ebx*8+0x3fbd41ad]
  4388a8:	mov    di,0xff85
  4388ac:	adc    edx,DWORD PTR [ebx]
  4388ae:	mov    esp,0x9d418eba
  4388b3:	jg     0x4388c1
  4388b5:	push   cs
  4388b6:	cdq    
  4388b7:	lods   al,BYTE PTR ds:[esi]
  4388b8:	adc    eax,0x37d2002c
  4388bd:	jp     0x438900
  4388bf:	dec    ecx
  4388c0:	jg     0x4388b6
  4388c2:	sbb    DWORD PTR [eax-0x39d41f53],ebx
  4388c8:	aaa    
  4388c9:	bound  eax,QWORD PTR [ecx+0x31]
  4388cc:	jg     0x4388aa
  4388ce:	sbb    DWORD PTR [edi-0x7ed40853],edx
  4388d4:	cmp    BYTE PTR [edx+0x41],cl
  4388d7:	fnstenv [ebp-0xf38fb14]
  4388dd:	dec    esi
  4388de:	and    DWORD PTR [ecx+0x33],eax
  4388e1:	xor    al,BYTE PTR [ebp-0x3f]
  4388e4:	mov    ch,0xd0
  4388e6:	or     edi,eax
  4388e8:	adc    DWORD PTR [edi],ecx
  4388ea:	adc    BYTE PTR [ebx+esi*1],ch
  4388ed:	sbb    al,BYTE PTR [ebp-0x4919f951]
  4388f3:	mov    ch,BYTE PTR [eax]
  4388f5:	fistp  QWORD PTR [ebx*1-0x707ad9cd]
  4388fc:	or     ah,dl
  4388fe:	rcl    BYTE PTR [eax+ebp*1+0x39bcfc00],0xf9
  438906:	add    cl,BYTE PTR [esi+0x54e3f328]
  43890c:	cmp    DWORD PTR [ebp-0xf32d8e],edi
  438912:	sub    edi,ecx
  438914:	mov    bl,0x42
  438916:	or     dl,BYTE PTR [edx-0x6ff0178b]
  43891c:	cmp    ecx,edi
  43891e:	push   0x0
  438920:	or     dl,BYTE PTR [ecx]
  438922:	add    BYTE PTR [edi+eiz*4],bh
  438925:	sub    dh,cl
  438927:	mov    dh,0x54
  438929:	cmp    DWORD PTR [ebp+0x24],edi
  43892c:	mov    ds:0x78387435,al
  438931:	inc    esi
  438932:	not    BYTE PTR [esi+0xc7d7554]
  438938:	jle    0x43896d
  43893a:	je     0x438914
  43893c:	mov    edi,0xd47ef16b
  438941:	mov    bl,0x7a
  438943:	jecxz  0x4388dd
  438945:	lods   eax,DWORD PTR ds:[esi]
  438946:	xor    eax,0xf92afc81
  43894b:	data16 fdiv DWORD PTR [ebx-0x526e0886]
  438952:	push   cs
  438953:	inc    ecx
  438954:	sti    
  438955:	das    
  438956:	stc    
  438957:	dec    esi
  438958:	adc    BYTE PTR [esi+0x150aea05],dh
  43895e:	call   0xf97b12ec
  438963:	sub    bl,BYTE PTR [eax]
  438965:	mov    dh,0x11
  438967:	jmp    0x376c:0x74e80302
  43896e:	stc    
  43896f:	push   0xffffffea
  438971:	sti    
  438972:	cld    
  438973:	fwait
  438974:	xchg   ebx,eax
  438975:	sub    BYTE PTR [edi-0x42c82bed],al
  43897b:	add    BYTE PTR [ebp+0xafff27c],ah
  438981:	mov    esi,0xe7004582
  438986:	(bad)  
  438987:	cmp    al,0x23
  438989:	outs   dx,BYTE PTR ds:[esi]
  43898a:	cmp    bl,BYTE PTR [edx+eax*1]
  43898d:	ds repnz cmp al,0x23
  438991:	xor    cl,BYTE PTR [eax-0x5]
  438994:	paddsw mm7,mm5
  438997:	(bad)  
  438998:	std    
  438999:	mov    al,0x1e
  43899b:	jns    0x438a1a
  43899d:	lahf   
  43899e:	add    DWORD PTR [ebp+0x6],ebp
  4389a1:	in     eax,0x51
  4389a3:	repz dec DWORD PTR [edx]
  4389a6:	mov    esi,0x18e4582
  4389ab:	scas   al,BYTE PTR es:[edi]
  4389ac:	or     BYTE PTR [eax],ch
  4389ae:	or     BYTE PTR [esi-0x3f8142fd],al
  4389b4:	add    al,0xa
  4389b6:	int    0xbe
  4389b8:	inc    ebp
  4389b9:	scas   eax,DWORD PTR es:[edi]
  4389ba:	sbb    eax,0xbe7dfff9
  4389bf:	test   BYTE PTR [ebp+0x5e],0xf3
  4389c3:	cmp    al,0x22
  4389c5:	in     eax,dx
  4389c6:	aas    
  4389c7:	sbb    ecx,DWORD PTR [edi]
  4389c9:	cmp    bl,0xe7
  4389cc:	xor    eax,0xc3f6f1f7
  4389d1:	out    0x4f,al
  4389d3:	call   eax
  4389d5:	aam    0x83
  4389d7:	push   ebp
  4389d8:	push   es
  4389d9:	test   BYTE PTR [edi+0x1c],0xf
  4389dd:	rol    DWORD PTR [eax*4-0x244fc],cl
  4389e4:	sub    BYTE PTR [ebp+0x8],0xf7
  4389e8:	rol    BYTE PTR [eax],1
  4389ea:	mov    dh,0x1f
  4389ec:	call   eax
  4389ee:	pushf  
  4389ef:	add    DWORD PTR [ebp+0x6],0x7e
  4389f3:	icebp  
  4389f4:	cmp    al,0x23
  4389f6:	xchg   esp,eax
  4389f7:	or     edi,eax
  4389f9:	sbb    eax,0x8df8414
  4389fe:	mov    DWORD PTR [ecx],esp
  438a00:	and    eax,0x3a320dfe
  438a05:	mov    ebp,0x8de640f
  438a0a:	inc    edx
  438a0b:	daa    
  438a0c:	stc    
  438a0d:	mov    ds:0xa0f93568,eax
  438a12:	pusha  
  438a13:	and    ecx,edi
  438a15:	test   eax,0xa8f91d68
  438a1a:	pusha  
  438a1b:	sbb    ecx,edi
  438a1d:	or     BYTE PTR [eax+0x25],cl
  438a20:	es add al,0xd2
  438a23:	fild   DWORD PTR [ebx]
  438a25:	dec    DWORD PTR [esi]
  438a27:	in     al,0xdc
  438a29:	or     BYTE PTR [edx],al
  438a2b:	pop    ds
  438a2c:	nop
  438a2d:	add    al,0x22
  438a2f:	es std 
  438a31:	jl     0x438a07
  438a33:	sbb    bh,BYTE PTR [edx]
  438a35:	rcr    dl,1
  438a37:	jecxz  0x438a3c
  438a39:	add    bh,dl
  438a3b:	or     eax,0xdddd921c
  438a41:	jg     0x438a4c
  438a43:	cmp    al,0xa
  438a45:	jae    0x4389e1
  438a47:	xor    DWORD PTR [esi-0x9],0x853d9f7b
  438a4e:	add    cl,bl
  438a50:	cli    
  438a51:	or     BYTE PTR [edx+0x74940d94],dh
  438a57:	mov    ds:0x9e746815,al
  438a5c:	std    
  438a5d:	data16 je 0x4389ea
  438a60:	add    eax,0x2d867462
  438a65:	bound  esi,QWORD PTR [edx+esi*2+0x35]
  438a69:	addr16 je 0x438ada
  438a6c:	sbb    eax,0x7a7466
  438a71:	jecxz  0x438ae2
  438a73:	mov    al,ds:0xa870dae2
  438a78:	push   cs
  438a79:	shr    DWORD PTR [ebp-0x60],cl
  438a7c:	or     cl,bl
  438a7e:	outs   dx,BYTE PTR ds:[esi]
  438a7f:	mov    BYTE PTR [esi],dl
  438a81:	ret    
  438a82:	scas   eax,DWORD PTR es:[edi]
  438a83:	xchg   DWORD PTR [edx],edx
  438a85:	mov    ebx,0xb2fe87b0
  438a8a:	lods   eax,DWORD PTR ds:[esi]
  438a8b:	xchg   edx,edi
  438a8d:	stos   BYTE PTR es:[edi],al
  438a8e:	scas   al,BYTE PTR es:[edi]
  438a8f:	addr16 push es
  438a91:	and    ecx,DWORD PTR ds:0x8ce0260
  438a97:	(bad)  
  438a98:	(bad)
  438a9b:	adc    esi,eax
  438a9d:	add    eax,0x73f9060d
  438aa2:	or     BYTE PTR [esi],bl
  438aa4:	add    al,0xe7
  438aa6:	adc    ah,0x4
  438aa9:	mov    dl,0x54
  438aab:	(bad)  
  438aac:	(bad)
  438aaf:	icebp  
  438ab0:	das    
  438ab1:	sub    al,0xe1
  438ab3:	add    BYTE PTR [ebp+0x1f83c4c5],ch
  438ab9:	loop   0x438a9c
  438abb:	mov    dh,0x95
  438abd:	sbb    BYTE PTR [edi],bl
  438abf:	cmp    ecx,DWORD PTR [ebp-0x287659d1]
  438ac5:	jecxz  0x438ab0
  438ac7:	jne    0x438a55
  438ac9:	jge    0x438b36
  438acb:	mov    ss,WORD PTR [esp+eax*1+0x2f7103e7]
  438ad2:	inc    sp
  438ad4:	nop
  438ad5:	das    
  438ad6:	aaa    
  438ad7:	inc    ecx
  438ad8:	pop    ebp
  438ad9:	lds    eax,FWORD PTR ds:0x66e2d73e
  438adf:	mov    edi,0x5bbffb1
  438ae4:	cmp    al,0xe1
  438ae6:	aas    
  438ae7:	cmp    eax,0x6200433d
  438aec:	push   ebx
  438aed:	or     al,0x9
  438aef:	ja     0x438a91
  438af1:	jnp    0x438a77
  438af3:	ja     0x438a85
  438af5:	clc    
  438af6:	(bad)  
  438af7:	call   0x29c08b90
  438afc:	mov    WORD PTR [ecx],gs
  438afe:	shr    BYTE PTR [edx],1
  438b00:	rol    ebx,1
  438b02:	sbb    al,0x7
  438b04:	ror    DWORD PTR [eax+eax*4],cl
  438b07:	jl     0x438afe
  438b09:	div    DWORD PTR [edx-0x11]
  438b0c:	scas   eax,DWORD PTR es:[edi]
  438b0d:	ss clc 
  438b0f:	out    dx,al
  438b10:	mov    al,0x6d
  438b12:	test   DWORD PTR [esi*8+0xf1b1f7],ebp
  438b19:	adc    al,BYTE PTR [edx+ecx*4+0x8be9]
  438b20:	jmp    0x5088:0xedbfad97
  438b27:	mov    ebp,0x14daa6
  438b2c:	jmp    0x24c88bc8
  438b31:	mov    ch,0xf7
  438b33:	mov    cl,0x29
  438b35:	xchg   edi,eax
  438b36:	jmp    0x438af0
  438b38:	jmp    0xf8bc8bd4
  438b3d:	outs   dx,DWORD PTR ds:[esi]
  438b3e:	cld    
  438b3f:	icebp  
  438b40:	mov    ss,eax
  438b42:	stos   DWORD PTR es:[edi],eax
  438b43:	jp     0x438b24
  438b45:	nop
  438b46:	stos   BYTE PTR es:[edi],al
  438b47:	add    DWORD PTR [ecx+0x76f92900],edx
  438b4d:	aam    0x18
  438b4f:	scas   al,BYTE PTR es:[edi]
  438b50:	je     0x438b02
  438b52:	daa    
  438b53:	test   DWORD PTR [ebp+ecx*4+0x150a442d],ebp
  438b5a:	ret    0xeb1c
  438b5d:	aam    0x3f
  438b5f:	inc    ebx
  438b60:	repz xchg edi,eax
  438b62:	add    BYTE PTR [eax],al
  438b64:	add    BYTE PTR ds:0x32233d79,bh
  438b6a:	mov    ah,0x3f
  438b6c:	add    DWORD PTR [eax-0x53],eax
  438b6f:	(bad)  
  438b70:	(bad)  
  438b71:	cmp    eax,0x6be8106d
  438b76:	div    dh
  438b78:	jmp    FWORD PTR [esi+0x10f6e]
  438b7e:	clc    
  438b7f:	pop    edx
  438b80:	jl     0x438bff
  438b82:	or     eax,DWORD PTR ds:0x80a56376
  438b88:	clc    
  438b89:	inc    DWORD PTR [edx]
  438b8b:	out    dx,al
  438b8c:	xor    al,0xc0
  438b8e:	in     eax,dx
  438b8f:	add    DWORD PTR [eax],eax
  438b91:	jl     0x438b9e
  438b93:	jnp    0x438b4f
  438b95:	rol    edi,0x0
  438b98:	add    ecx,0x8306e36e
  438b9e:	(bad)  
  438b9f:	imul   DWORD PTR [ebx+ecx*1+0x3e]
  438ba3:	jmp    0x438ba4
  438ba5:	jae    0x438c26
  438ba7:	fcomp  QWORD PTR [ecx-0x8]
  438baa:	add    ch,dl
  438bac:	mov    edx,0x6cfb0783
  438bb1:	aaa    
  438bb2:	ds jmp 0x438bae
  438bb5:	je     0x438b72
  438bb7:	(bad)  [ecx-0x8]
  438bba:	add    ch,dl
  438bbc:	mov    edx,0x6d060483
  438bc1:	push   es
  438bc2:	adc    eax,0x12fff141
  438bc7:	lds    edi,FWORD PTR [edx-0x7]
  438bca:	jnp    0x438c3c
  438bcc:	jmp    edi
  438bce:	inc    ecx
  438bcf:	jmp    0x85828bca
  438bd4:	icebp  
  438bd5:	pop    es
  438bd6:	dec    eax
  438bd7:	jmp    edi
  438bd9:	xor    ebp,esi
  438bdb:	jmp    0x9ad84fd6
  438be0:	cmp    cl,BYTE PTR [ecx]
  438be2:	add    cl,cl
  438be4:	and    eax,0xc64c2225
  438be9:	xor    al,0xbd
  438beb:	sub    al,0x20
  438bed:	xor    cl,bh
  438bef:	cmp    esp,DWORD PTR [edx+0x649515be]
  438bf5:	loop   0x438c73
  438bf7:	sar    DWORD PTR [edx],1
  438bf9:	add    edi,DWORD PTR [ebp+0x1b645b]
  438bff:	xchg   esp,eax
  438c00:	pop    ss
  438c01:	std    
  438c02:	test   BYTE PTR [ecx+0x3a],bl
  438c05:	push   es
  438c06:	mov    dl,0x54
  438c08:	sbb    al,bh
  438c0a:	mov    eax,0x78fd1794
  438c0f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  438c10:	push   esi
  438c12:	repnz repz sbb eax,0x1e827b82
  438c19:	mov    bh,0x2d
  438c1b:	in     al,dx
  438c1c:	inc    esi
  438c1d:	cs stc 
  438c1f:	fistp  DWORD PTR [ecx-0x8]
  438c22:	mov    edi,0x7bfd1794
  438c27:	jno    0x438bd9
  438c29:	inc    edx
  438c2a:	mov    edi,0xbf8c22ae
  438c2f:	pop    ss
  438c30:	cmp    BYTE PTR [esi],al
  438c32:	jge    0x438be2
  438c34:	dec    esp
  438c35:	mov    al,0x4
  438c37:	pop    ss
  438c38:	pusha  
  438c39:	or     al,0x74
  438c3b:	test   DWORD PTR [edi-0x6a640eba],ecx
  438c41:	inc    edx
  438c42:	jge    0x438bd2
  438c44:	dec    ebx
  438c45:	mov    al,0x1
  438c47:	add    BYTE PTR [esi+ebx*2+0x2e],bh
  438c4b:	stc    
  438c4c:	adc    DWORD PTR [edi+0x25],0xffffffb1
  438c50:	xor    BYTE PTR [ebx+0x4fd98535],0x4
  438c57:	inc    ebx
  438c58:	mov    bh,0x0
  438c5a:	data16 rol BYTE PTR [eax-0x28bdda02],0x6
  438c62:	out    0x3,eax
  438c64:	xchg   esp,eax
  438c65:	add    BYTE PTR [esi-0x40],bl
  438c68:	test   al,0xfb
  438c6a:	js     0x438c2f
  438c6c:	inc    edx
  438c6d:	in     eax,dx
  438c6e:	jns    0x438c73
  438c70:	xchg   esp,eax
  438c71:	add    BYTE PTR [edx+0x33483c1a],dh
  438c77:	cmp    ch,BYTE PTR ds:0x9811a480
  438c7d:	mov    ah,0xe8
  438c7f:	xchg   BYTE PTR [edi-0x645016ee],bl
  438c85:	jg     0x438c13
  438c87:	adc    DWORD PTR [ebp-0x3cd11b55],edx
  438c8d:	sbb    BYTE PTR [edi+0x32],ah
  438c90:	std    
  438c91:	sub    esp,DWORD PTR [esi]
  438c93:	clc    
  438c94:	xor    eax,DWORD PTR [ecx]
  438c96:	out    0x3,eax
  438c98:	push   0x23466ff4
  438c9d:	pop    ss
  438c9e:	jecxz  0x438c2a
  438ca0:	sbb    eax,DWORD PTR [eax+0x265109c8]
  438ca6:	fldcw  WORD PTR [esi+0xcc07fa6]
  438cac:	add    BYTE PTR [edi],bh
  438cae:	loopne 0x438d15
  438cb0:	cmp    edi,DWORD PTR [ecx-0x547b3251]
  438cb6:	(bad)  
  438cb7:	xor    dl,BYTE PTR [edx]
  438cb9:	mov    esp,0x9d3999d5
  438cbe:	aas    
  438cbf:	lea    si,ds:[ebp-0x7747b23]
  438cc7:	or     al,BYTE PTR [edx]
  438cc9:	jl     0x438c90
  438ccb:	jns    0x438d06
  438ccd:	jge    0x438d0e
  438ccf:	(bad)  
  438cd0:	cld    
  438cd1:	xchg   DWORD PTR [ebx],ebp
  438cd3:	add    BYTE PTR [esi+0x21],dh
  438cd6:	mov    edi,0xc2ae815
  438cdb:	jge    0x438c89
  438cdd:	js     0x438d0c
  438cdf:	mov    esi,0x151b26
  438ce4:	jmp    0xa4c88d80
  438ce9:	xor    al,bh
  438ceb:	mov    cl,0xa9
  438ced:	xchg   esi,eax
  438cee:	out    0xb8,eax
  438cf0:	jmp    0xd8bc8d8c
  438cf5:	jg     0x438cc3
  438cf7:	rep cs ins DWORD PTR es:[edi],dx
  438cfa:	lods   eax,DWORD PTR ds:[esi]
  438cfb:	jp     0x438cfc
  438cfd:	xchg   esp,eax
  438cfe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  438cff:	sbb    eax,0xf9318d11
  438d04:	push   ss
  438d05:	pop    ecx
  438d06:	out    0xbf,eax
  438d08:	jmp    0xdcbf8da4
  438d0d:	push   cs
  438d0e:	push   0xffffffbf
  438d10:	adc    eax,DWORD PTR [eax]
  438d12:	xchg   esp,eax
  438d13:	cmp    DWORD PTR [edi+0x7cf9b76a],0xfffffff3
  438d1a:	xchg   edx,eax
  438d1b:	scas   eax,DWORD PTR es:[edi]
  438d1c:	add    ecx,edx
  438d1e:	test   al,0x2e
  438d20:	stc    
  438d21:	ficom  WORD PTR [eax+0x18]
  438d24:	loop   0x438d00
  438d26:	mov    WORD PTR [ecx],gs
  438d28:	test   DWORD PTR [edx+ebp*4],esp
  438d2b:	sub    eax,DWORD PTR [edx+ecx*1+0x19]
  438d2f:	mov    edi,0x4150eb1c
  438d34:	inc    ebx
  438d35:	rcl    DWORD PTR [edi+0x18e90000],cl
  438d3b:	mov    edi,0xc025f61c
  438d40:	(bad)  
  438d41:	fistp  DWORD PTR [eax+eax*1]
  438d44:	add    cl,ch
  438d46:	dec    esp
  438d47:	adc    ebp,eax
  438d49:	jecxz  0x438d06
  438d4b:	daa    
  438d4c:	stc    
  438d4d:	add    dh,ch
  438d4f:	jb     0x438d60
  438d51:	add    eax,0x7d7af681
  438d56:	push   ebx
  438d57:	add    DWORD PTR [edi+0x2],esi
  438d5a:	push   ss
  438d5b:	xor    al,0xe1
  438d5d:	mov    ch,0xc3
  438d5f:	call   0xc4bc515a
  438d64:	(bad)  
  438d65:	(bad)  
  438d66:	cmp    eax,0x7f891e72
  438d6b:	mov    esi,0xbec404e1
  438d70:	jp     0x438d53
  438d72:	sub    al,BYTE PTR [ebp-0xffff30e]
  438d78:	cld    
  438d79:	jp     0x438d74
  438d7b:	xor    eax,0xa1e80a72
  438d80:	out    dx,eax
  438d81:	idiv   bh
  438d83:	outs   dx,BYTE PTR ds:[esi]
  438d84:	test   dl,dh
  438d86:	wrmsr  
  438d88:	add    al,ch
  438d8a:	mov    DWORD PTR [ebx-0x5a3c0918],esp
  438d90:	jno    0x438d7e
  438d92:	(bad)  
  438d93:	cli    
  438d94:	jne    0x438dd3
  438d96:	sbb    bh,ah
  438d98:	push   0x1c
  438d9a:	xor    DWORD PTR [eax],0x25
  438d9d:	sti    
  438d9e:	ret    0x4032
  438da1:	adc    eax,DWORD PTR [eax]
  438da3:	in     eax,dx
  438da4:	std    
  438da5:	dec    DWORD PTR [edx-0x49f7e280]
  438dab:	jge    0x438db0
  438dad:	xor    eax,0xfffdadbf
  438db2:	jle    0x438d90
  438db4:	aad    0x9f
  438db6:	repz jmp 0x772a:0xc37d7af1
  438dbe:	daa    
  438dbf:	add    eax,0xfaffef4e
  438dc4:	mov    ebp,0x1794c034
  438dc9:	std    
  438dca:	dec    DWORD PTR [eax]
  438dcc:	mov    WORD PTR cs:[esi-0x78ff72ab],?
  438dd3:	push   ebp
  438dd4:	xchg   esi,eax
  438dd5:	and    cl,BYTE PTR [ecx]
  438dd7:	pop    ss
  438dd8:	lods   eax,DWORD PTR ds:[esi]
  438dd9:	push   es
  438dda:	jae    0x438ddc
  438ddc:	lahf   
  438ddd:	xchg   esi,eax
  438dde:	cmp    al,BYTE PTR [edi]
  438de0:	call   0x6271b2fe
  438de5:	retf   0xbd30
  438de8:	cmp    al,0xfc
  438dea:	sub    al,0xf9
  438dec:	dec    ebx
  438ded:	sahf   
  438dee:	mov    esi,0xde5c9515
  438df3:	jl     0x438dc6
  438df5:	idiv   ch
  438df7:	mov    esp,0x175c5b
  438dfc:	xchg   esp,eax
  438dfd:	pop    ss
  438dfe:	std    
  438dff:	test   cl,bl
  438e01:	add    dh,BYTE PTR ss:[edx-0x4707e72c]
  438e08:	xchg   esp,eax
  438e09:	pop    ss
  438e0a:	std    
  438e0b:	js     0x438db2
  438e0d:	dec    edx
  438e0f:	in     al,dx
  438e10:	add    eax,DWORD PTR [edx]
  438e12:	jge    0x438e8f
  438e14:	mov    ds:0xfc4db322,al
  438e19:	xor    dh,BYTE PTR [eax]
  438e1b:	stc    
  438e1c:	jmp    0x438df3
  438e1e:	idiv   BYTE PTR [edi+0x7bfd1794]
  438e24:	push   ecx
  438e25:	mov    al,0x3e
  438e27:	mov    edi,0xbf8c1abe
  438e2c:	pop    ss
  438e2d:	cmp    BYTE PTR [edx],al
  438e2f:	jge    0x438def
  438e31:	xor    dh,BYTE PTR [eax+0x3036ac01]
  438e37:	stc    
  438e38:	mov    bl,0x55
  438e3a:	jle    0x438e32
  438e3c:	cdq    
  438e3d:	hlt    
  438e3e:	stc    
  438e3f:	out    0x0,eax
  438e41:	leave  
  438e42:	call   FWORD PTR [ebx+0x663c9d36]
  438e48:	cmp    DWORD PTR [esi-0x7c7d0953],ebx
  438e4e:	add    DWORD PTR [ebx],edx
  438e50:	sbb    eax,DWORD PTR [ecx]
  438e52:	sub    ch,bh
  438e54:	mov    eax,0x30a718a5
  438e59:	ins    DWORD PTR es:[edi],dx
  438e5a:	sub    BYTE PTR [esi-0xc079d7e],ah
  438e60:	or     ah,cl
  438e62:	sub    edi,ebp
  438e64:	mov    bh,0x95
  438e66:	sbb    BYTE PTR [edi+0x26284d30],dl
  438e6c:	sub    ebp,DWORD PTR [ecx]
  438e6e:	xor    ecx,DWORD PTR [edx+0x36]
  438e71:	sbb    DWORD PTR [esi-0x1c28fb24],edi
  438e77:	rcl    BYTE PTR gs:[eax+0x58472602],0x35
  438e7f:	push   DWORD PTR [eax+eiz*1-0x6bfc18d8]
  438e86:	add    bh,ah
  438e88:	add    edx,DWORD PTR [eax+eax*1+0x28098397]
  438e8f:	adc    edx,DWORD PTR [ebx]
  438e91:	xchg   esp,eax
  438e92:	add    bh,dh
  438e94:	mov    cl,0xf8
  438e96:	daa    
  438e97:	out    0x3,eax
  438e99:	xchg   esp,eax
  438e9a:	add    bh,ah
  438e9c:	add    edx,DWORD PTR [eax+eax*1+0x27e17eb1]
  438ea3:	mov    ds:0x940011,eax
  438ea8:	adc    esi,DWORD PTR [eax+edx*8-0x6bfc18d9]
  438eaf:	add    bh,ah
  438eb1:	add    edx,DWORD PTR [eax+eax*1+0x27b98a0b]
  438eb8:	out    0x13,eax
  438eba:	xchg   esp,eax
  438ebb:	add    BYTE PTR [eax],al
  438ebd:	gs in  eax,0x24
  438ec0:	stc    
  438ec1:	jmp    0xe9438f5d
  438ec6:	xchg   edi,eax
  438ec7:	add    BYTE PTR [eax],al
  438ec9:	jg     0x438ee8
  438ecb:	and    eax,0xa531f9
  438ed0:	add    BYTE PTR ds:0xe9f92445,cl
  438ed6:	xchg   edi,eax
  438ed7:	add    BYTE PTR [eax],al
  438ed9:	jmp    0x8d438f75
  438ede:	sbb    eax,0x8521f925
  438ee3:	add    BYTE PTR [eax],al
  438ee5:	push   ecx
  438ee6:	and    eax,0x97e9f924
  438eeb:	add    BYTE PTR [eax],al
  438eed:	jmp    0xeb438f89
  438ef2:	sbb    esp,DWORD PTR ds:0xa57df9
  438ef8:	add    BYTE PTR [ecx-0x1606dbfe],dl
  438efe:	xchg   edi,eax
  438eff:	add    BYTE PTR [eax],al
  438f01:	jmp    0x67438f9d
  438f06:	or     al,0x25
  438f08:	stc    
  438f09:	xchg   ebp,eax
  438f0a:	add    BYTE PTR [ecx+0x40090000],ah
  438f10:	and    al,0xf9
  438f12:	jmp    0xe9438fae
  438f17:	xchg   edi,eax
  438f18:	add    BYTE PTR [eax],al
  438f1a:	dec    edi
  438f1b:	sbb    esp,DWORD PTR ds:0x8045f9
  438f21:	add    BYTE PTR ds:0xe9f92433,al
  438f27:	xchg   edi,eax
  438f28:	add    BYTE PTR [eax],al
  438f2a:	jmp    0x31438fc6
  438f2f:	adc    ah,BYTE PTR ds:0x9299f9
  438f35:	add    BYTE PTR [eax],al
  438f37:	adc    DWORD PTR [ebx-0x4],esi
  438f3a:	(bad)  
  438f3b:	mov    ebp,0xbd000002
  438f40:	add    al,BYTE PTR [eax]
  438f42:	add    BYTE PTR [ecx+0x25fffb7b],ch
  438f48:	adc    eax,DWORD PTR [eax]
  438f4a:	add    BYTE PTR ds:0x7dfffc57,al
  438f50:	add    al,BYTE PTR [eax]
  438f52:	add    BYTE PTR [ebp+0x2],ch
  438f55:	add    BYTE PTR [eax],al
  438f57:	cmp    DWORD PTR [ebx-0xa760005],edx
  438f5d:	(bad)  
  438f5e:	call   DWORD PTR [ebp+0x6dfffc6f]
  438f64:	add    al,BYTE PTR [eax]
  438f66:	add    BYTE PTR [ebp+0x2],ch
  438f69:	add    BYTE PTR [eax],al
  438f6b:	std    
  438f6c:	xchg   edx,eax
  438f6d:	sti    
  438f6e:	inc    DWORD PTR [eax]
  438f70:	test   eax,0x500000f
  438f75:	jno    0x438f73
  438f77:	jmp    FWORD PTR ds:0x3d000002
  438f7d:	add    al,BYTE PTR [eax]
  438f7f:	add    BYTE PTR [edi-0x6600046e],bh
  438f85:	sldt   WORD PTR [eax]
  438f88:	dec    ebp
  438f89:	jae    0x438f87
  438f8b:	(bad)  
  438f8c:	std    
  438f8d:	add    DWORD PTR [eax],eax
  438f8f:	add    ch,bh
  438f91:	add    DWORD PTR [eax],eax
  438f93:	add    BYTE PTR [ebp-0x6e],dl
  438f96:	sti    
  438f97:	jmp    DWORD PTR [ecx+0x1d000011]
  438f9d:	push   esp
  438f9e:	cld    
  438f9f:	(bad)  
  438fa0:	std    
  438fa1:	add    DWORD PTR [eax],eax
  438fa3:	add    ch,ch
  438fa5:	add    DWORD PTR [eax],eax
  438fa7:	add    BYTE PTR [ebx-0x5e000472],ch
  438fad:	or     al,BYTE PTR [eax]
  438faf:	add    BYTE PTR [edi+edx*1+0x1794fffd],dl
  438fb6:	std    
  438fb7:	call   DWORD PTR [edi+edx*1+0x1794fffd]
  438fbe:	std    
  438fbf:	call   DWORD PTR [edi+edx*1-0x266b0003]
  438fc6:	test   ch,bh
  438fc8:	fwait
  438fc9:	repz test ch,bh
  438fcc:	xchg   ebx,eax
  438fcd:	add    eax,0xa98bfd85
  438fd2:	test   ch,bh
  438fd4:	add    BYTE PTR [ebx+0x7bfd84c1],al
  438fda:	push   edi
  438fdb:	test   ebp,edi
  438fdd:	jae    0x438f68
  438fdf:	test   ebp,edi
  438fe1:	imul   esi,DWORD PTR [ebp-0x7b],0xfffffffd
  438fe5:	arpl   WORD PTR [ebp+0x315bfd84],bp
  438feb:	jne    0x438fea
  438fed:	push   ebx
  438fee:	idiv   DWORD PTR [ebx-0x3]
  438ff1:	dec    ebx
  438ff2:	or     DWORD PTR [ebp+edi*8+0x43],edi
  438ff6:	xor    DWORD PTR [ebp-0x3],0x3b
  438ffa:	cmp    DWORD PTR [ebp-0x3],esi
  438ffd:	xor    eax,DWORD PTR [ecx+0x75]
  439000:	std    
  439001:	sub    ecx,ecx
  439003:	jnp    0x439002
  439005:	and    eax,DWORD PTR [ecx-0x26e40284]
  43900b:	jnp    0x43900a
  43900d:	adc    ebp,ebp
  43900f:	jnp    0x43900e
  439011:	or     edi,edi
  439013:	jnp    0x439012
  439015:	add    edx,DWORD PTR [ecx]
  439017:	jl     0x439016
  439019:	sti    
  43901a:	inc    esp
  43901b:	jl     0x43901a
  43901d:	rep ins BYTE PTR es:[edi],dx
  43901f:	jl     0x43901e
  439021:	jmp    0x438fab
  439023:	jl     0x439022
  439025:	jecxz  0x438fc7
  439027:	jp     0x439026
  439029:	(bad)  
  43902b:	mov    BYTE PTR [ecx+edx*8+0x24],bh
  43902f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  439030:	jl     0x438ffb
  439032:	and    al,0xbb
  439034:	jl     0x438ff7
  439036:	and    al,0xbf
  439038:	jl     0x43903a
  43903a:	mov    ecx,0xb17cbf24
  43903f:	and    al,0xe1
  439041:	jge    0x438fec
  439043:	and    al,0xcf
  439045:	jge    0x438fe8
  439047:	and    al,0x13
  439049:	mov    ebx,DWORD PTR [ecx-0x6bfc18dc]
  43904f:	add    BYTE PTR [ebp-0x4cdb767f],bl
  439055:	add    DWORD PTR [ecx+0x79819d24],0x71813524
  43905f:	and    al,0x57
  439061:	sub    DWORD PTR [ecx+0x24],0x246181ed
  439068:	add    eax,DWORD PTR [edx-0x7cfcdba7]
  43906e:	push   ecx
  43906f:	and    al,0xe7
  439071:	add    edx,DWORD PTR [eax+eax*1+0x24418061]
  439078:	cmc    
  439079:	cmp    BYTE PTR [ecx],0x24
  43907c:	aas    
  43907d:	jg     0x4390b0
  43907f:	and    al,0x63
  439081:	sub    BYTE PTR [ecx],0x24
  439084:	scas   eax,DWORD PTR es:[edi]
  439085:	and    BYTE PTR [ecx],0x24
  439088:	ret    
  439089:	sbb    BYTE PTR [ecx],0x24
  43908c:	mov    edi,0xad241180
  439091:	or     BYTE PTR [ecx],0x24
  439094:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  439095:	add    BYTE PTR [ecx],0x24
  439098:	rol    DWORD PTR [eax-0x7f30dc07],cl
  43909e:	add    cl,dh
  4390a0:	and    ecx,DWORD PTR [edi]
  4390a2:	jg     0x43908d
  4390a4:	and    eax,DWORD PTR [eax]
  4390a6:	push   ebx
  4390a7:	adc    al,0x26
  4390a9:	stc    
  4390aa:	and    DWORD PTR [ebx+0x25],ebx
  4390ad:	stc    
  4390ae:	rcl    DWORD PTR [esi+eiz*1],0xf9
  4390b2:	jmp    0x7943914e
  4390b7:	daa    
  4390b8:	es stc 
  4390ba:	jmp    0x47439156
  4390bf:	add    DWORD PTR ds:0x24f959f9,esp
  4390c5:	stc    
  4390c6:	(bad)  
  4390c7:	icebp  
  4390c8:	and    al,0xf9
  4390ca:	jae    0x4390b5
  4390cc:	and    al,0xf9
  4390ce:	mov    bh,0x41
  4390d0:	and    al,0xf9
  4390d2:	xchg   DWORD PTR [ecx],edi
  4390d4:	and    al,0xf9
  4390d6:	fwait
  4390d7:	xor    DWORD PTR [ecx+edi*8],esp
  4390da:	(bad)
  4390de:	repz inc ebx
  4390e0:	and    al,0xf9
  4390e2:	xlat   BYTE PTR ds:[ebx]
  4390e3:	cmp    esp,DWORD PTR [ecx+edi*8]
  4390e6:	iret   
  4390e7:	xor    esp,DWORD PTR [ecx+edi*8]
  4390ea:	mov    bh,0x2b
  4390ec:	and    al,0xf9
  4390ee:	mov    bl,0x3
  4390f0:	and    al,0xf9
  4390f2:	(bad)  
  4390f5:	stc    
  4390f6:	fcomip st,st(3)
  4390f8:	and    edi,ecx
  4390fa:	gs add al,0x24
  4390fd:	stc    
  4390fe:	pop    ebp
  4390ff:	in     al,0x23
  439101:	stc    
  439102:	test   DWORD PTR [eax],eax
  439104:	in     al,0x23
  439106:	stc    
  439107:	sub    esp,esp
  439109:	and    edi,ecx
  43910b:	or     eax,0x1df923e4
  439110:	inc    esp
  439111:	and    al,0xf9
  439113:	stc    
  439114:	cmp    ah,BYTE PTR [ecx+edi*8]
  439117:	ret    
  439118:	xor    ah,BYTE PTR [ecx+edi*8]
  43911b:	iret   
  43911c:	sub    ah,BYTE PTR [ecx+edi*8]
  43911f:	add    BYTE PTR [edi],cl
  439121:	push   edx
  439122:	cld    
  439123:	call   FWORD PTR [edi]
  439125:	push   edx
  439126:	cld    
  439127:	call   FWORD PTR [edi+0x52]
  43912a:	cld    
  43912b:	push   DWORD PTR [ebp+0x53]
  43912e:	cld    
  43912f:	call   DWORD PTR [ecx+0x52]
  439132:	cld    
  439133:	dec    DWORD PTR [ebx+0x52]
  439136:	cld    
  439137:	call   FWORD PTR [ecx]
  439139:	push   edx
  43913a:	cld    
  43913b:	jmp    DWORD PTR [edi]
  43913d:	push   edx
  43913e:	cld    
  43913f:	(bad)  
  439140:	jmp    0x439193
  439142:	cld    
  439143:	dec    DWORD PTR [ecx]
  439145:	push   edx
  439146:	cld    
  439147:	jmp    ecx
  439149:	push   ecx
  43914a:	cld    
  43914b:	call   FWORD PTR [ebx+0x55]
  43914e:	cld    
  43914f:	call   DWORD PTR [ebp+0x6ffffc6e]
  439155:	jo     0x439153
  439157:	push   DWORD PTR [ecx-0x42000392]
  43915d:	outs   dx,BYTE PTR ds:[esi]
  43915e:	cld    
  43915f:	call   FWORD PTR [ebp-0x68000392]
  439165:	outs   dx,BYTE PTR ds:[esi]
  439166:	cld    
  439167:	inc    DWORD PTR [eax]
  439169:	cmc    
  43916a:	outs   dx,DWORD PTR ds:[esi]
  43916b:	cld    
  43916c:	dec    ebx
  43916e:	outs   dx,DWORD PTR ds:[esi]
  43916f:	cld    
  439170:	jmp    FWORD PTR [ebx]
  439172:	jo     0x439170
  439174:	(bad)  
  439175:	jns    0x4391e6
  439177:	cld    
  439178:	dec    ebp
  43917a:	outs   dx,DWORD PTR ds:[esi]
  43917b:	cld    
  43917c:	(bad)  
  43917d:	fild   QWORD PTR [edi-0x4]
  439180:	(bad)  
  439181:	fld    TBYTE PTR [edi-0x4]
  439184:	inc    DWORD PTR [ebx+0x71]
  439187:	cld    
  439188:	call   FWORD PTR [edi]
  43918a:	jno    0x439188
  43918c:	push   ebp
  43918e:	jo     0x43918c
  439190:	call   FWORD PTR ds:0x23fffc71
  439196:	jno    0x439194
  439198:	call   DWORD PTR [edi+ebx*4-0x52040351]
  43919f:	scas   eax,DWORD PTR es:[edi]
  4391a0:	cld    
  4391a1:	repz iret 
  4391a3:	scas   eax,DWORD PTR es:[edi]
  4391a4:	cld    
  4391a5:	jmp    0x439166
  4391a7:	scas   eax,DWORD PTR es:[edi]
  4391a8:	cld    
  4391a9:	jecxz  0x43918a
  4391ab:	scas   eax,DWORD PTR es:[edi]
  4391ac:	cld    
  4391ad:	fcomi  st,st(3)
  4391af:	scas   eax,DWORD PTR es:[edi]
  4391b0:	cld    
  4391b1:	ror    DWORD PTR [ebp-0x57],cl
  4391b4:	cld    
  4391b5:	retf   
  4391b6:	sbb    eax,0x19c3fca9
  4391bb:	jge    0x4391ba
  4391bd:	mov    ebx,0xb3fd7d13
  4391c2:	xlat   BYTE PTR ds:[ebx]
  4391c3:	cmp    ebp,0xffffffab
  4391c6:	pop    es
  4391c7:	test   ch,bh
  4391c9:	mov    ds:0xfd8da1,eax
  4391ce:	fwait
  4391cf:	int    0x8d
  4391d1:	std    
  4391d2:	xchg   ebx,eax
  4391d3:	xchg   ecx,eax
  4391d4:	(bad)  
  4391d5:	std    
  4391d6:	mov    ebx,ebp
  4391d8:	(bad)  
  4391d9:	std    
  4391da:	xor    ebx,0xffffff8d
  4391dd:	std    
  4391de:	jnp    0x4391bf
  4391e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4391e1:	cld    
  4391e2:	jae    0x4391bd
  4391e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4391e5:	cld    
  4391e6:	imul   ecx,DWORD PTR [ebp-0x5a],0xfffffffc
  4391ea:	arpl   WORD PTR [ebx-0x5a],cx
  4391ed:	cld    
  4391ee:	pop    ebx
  4391ef:	inc    ecx
  4391f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4391f1:	cld    
  4391f2:	push   ebx
  4391f3:	cdq    
  4391f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4391f5:	cld    
  4391f6:	dec    ebx
  4391f7:	mov    cl,0xa5
  4391f9:	cld    
  4391fa:	inc    ebx
  4391fb:	in     eax,dx
  4391fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4391fd:	cld    
  4391fe:	cmp    eax,DWORD PTR [ebx]
  439200:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  439201:	cld    
  439202:	xor    edx,edi
  439204:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  439205:	cld    
  439206:	sub    ecx,DWORD PTR [ebp-0x36dc035a]
  43920c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43920d:	cld    
  43920e:	sbb    eax,edi
  439210:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  439211:	cld    
  439212:	adc    eax,DWORD PTR [eax]
  439214:	mov    ds:0x8b2108a9,eax
  439219:	test   eax,0xa9ad2100
  43921e:	clc    
  43921f:	and    BYTE PTR [ebp-0x40df0f57],bl
  439225:	test   eax,0xa9cf20e8
  43922a:	loopne 0x43924c
  43922c:	int    0xa9
  43922e:	fsub   DWORD PTR [eax]
  439230:	fild   QWORD PTR [ecx-0x24df3000]
  439236:	lods   al,BYTE PTR ds:[esi]
  439237:	enter  0xc720,0xac
  43923b:	shl    BYTE PTR [eax],0xa1
  43923e:	lods   al,BYTE PTR ds:[esi]
  43923f:	mov    eax,0xb0ac8f20
  439244:	and    BYTE PTR [ebp+0x5120a8ac],al
  43924a:	lods   al,BYTE PTR ds:[esi]
  43924b:	mov    al,ds:0x98ac5d20
  439250:	and    BYTE PTR [ecx],ch
  439252:	lods   eax,DWORD PTR ds:[esi]
  439253:	nop
  439254:	and    BYTE PTR [ecx],dl
  439256:	lods   eax,DWORD PTR ds:[esi]
  439257:	mov    BYTE PTR [eax],ah
  439259:	cmp    DWORD PTR [ebp-0x533cdf80],ebp
  43925f:	js     0x439281
  439261:	and    ebp,DWORD PTR [ebp-0x5326df90]
  439267:	push   0x60aced20
  43926c:	and    BYTE PTR [ebx-0x55],bh
  43926f:	pop    eax
  439270:	and    BYTE PTR [ecx+0x3b2050ab],al
  439276:	stos   DWORD PTR es:[edi],eax
  439277:	dec    eax
  439278:	and    BYTE PTR [ecx],ah
  43927a:	stos   DWORD PTR es:[edi],eax
  43927b:	inc    eax
  43927c:	and    BYTE PTR [ebp+0x792038ab],cl
  439282:	stos   DWORD PTR es:[edi],eax
  439283:	xor    BYTE PTR [eax],ah
  439285:	pop    ebx
  439286:	stos   DWORD PTR es:[edi],eax
  439287:	sub    BYTE PTR [eax],ah
  439289:	arpl   WORD PTR [ebx-0x44ffdfe0],bp
  43928f:	out    dx,eax
  439290:	sbb    al,0xf9
  439292:	lea    edi,[edi]
  439294:	sbb    eax,0x3f00b5f9
  439299:	sbb    eax,0x1d2fa5f9
  43929e:	stc    
  43929f:	(bad)  [edi]
  4392a1:	sbb    eax,0x1d3fc9f9
  4392a6:	stc    
  4392a7:	fnstsw WORD PTR [edi]
  4392a9:	sbb    eax,0x1d2fe9f9
  4392ae:	stc    
  4392af:	stc    
  4392b0:	and    DWORD PTR ds:0x1d0a0ff9,ebx
  4392b6:	stc    
  4392b7:	mov    ecx,0xa1f91d01
  4392bc:	or     DWORD PTR ds:0x1d0189f9,ebx
  4392c2:	stc    
  4392c3:	popa   
  4392c4:	jmp    0xe1998be5
  4392c9:	sbb    al,0xf9
  4392cb:	pop    ds
  4392cc:	jmp    0xe1698bed
  4392d1:	sbb    al,0xf9
  4392d3:	sub    DWORD PTR [ecx+0x1c],ecx
  4392d6:	stc    
  4392d7:	fld    QWORD PTR [eax+0x1c]
  4392da:	stc    
  4392db:	(bad)  
  4392dc:	dec    eax
  4392dd:	sbb    al,0xf9
  4392df:	inc    DWORD PTR [eax+0x1c]
  4392e2:	stc    
  4392e3:	jmp    0x923caf10
  4392e8:	and    bl,BYTE PTR [ecx+edi*8]
  4392eb:	icebp  
  4392ec:	xor    DWORD PTR [ecx+edi*8],ebx
  4392ef:	cdq    
  4392f0:	and    bl,BYTE PTR [ecx+edi*8]
  4392f3:	jmp    0xdd43938f
  4392f8:	es sbb eax,0x2600c9f9
  4392fe:	sbb    eax,0x1d26a7f9
  439303:	stc    
  439304:	jmp    0x4393a0
  439309:	and    eax,0x24800003
  43930e:	add    eax,DWORD PTR [eax]
  439310:	sub    BYTE PTR [edi],0x3
  439313:	add    BYTE PTR [eax-0x7ffffd05],al
  439319:	std    
  43931a:	add    al,BYTE PTR [eax]
  43931c:	add    cl,cl
  43931e:	cdq    
  43931f:	cli    
  439320:	jmp    DWORD PTR [ebx-0x67]
  439323:	cli    
  439324:	call   DWORD PTR [edi-0x67]
  439327:	cli    
  439328:	(bad)  
  439329:	std    
  43932a:	add    al,BYTE PTR [eax]
  43932c:	add    BYTE PTR [edi],bh
  43932e:	cdq    
  43932f:	cli    
  439330:	jmp    DWORD PTR [ebx-0x68]
  439333:	cli    
  439334:	call   DWORD PTR [edi]
  439336:	cwde   
  439337:	cli    
  439338:	dec    DWORD PTR [ecx+0x79fffa99]
  43933e:	cdq    
  43933f:	cli    
  439340:	call   FWORD PTR [edi-0x64000567]
  439346:	cdq    
  439347:	cli    
  439348:	dec    ebx
  43934a:	xchg   edi,eax
  43934b:	cli    
  43934c:	(bad)  
  43934d:	mov    ecx,0xd1fffa97
  439352:	cwde   
  439353:	cli    
  439354:	jmp    FWORD PTR [ebx]
  439356:	cwde   
  439357:	cli    
  439358:	(bad)  
  439359:	aas    
  43935a:	cwde   
  43935b:	cli    
  43935c:	call   ebx
  43935e:	xchg   edi,eax
  43935f:	cli    
  439360:	inc    DWORD PTR [eax]
  439362:	iret   
  439363:	xchg   edi,eax
  439364:	cli    
  439365:	call   ecx
  439367:	xchg   edi,eax
  439368:	cli    
  439369:	call   DWORD PTR [ebp-0x78000566]
  43936f:	call   0xfffa:0x9a83fffa
  439376:	mov    bl,0x9a
  439378:	cli    
  439379:	inc    DWORD PTR [ebx+0x2]
  43937c:	add    BYTE PTR [eax-0x56813],al
  439382:	xchg   esp,eax
  439383:	stc    
  439384:	jne    0x439383
  439386:	xor    ebp,DWORD PTR [eax]
  439388:	std    
  439389:	call   DWORD PTR [edi+edx*8+0x2823fd77]
  439390:	std    
  439391:	call   DWORD PTR [edi+esi*2+0x1013fd81]
  439398:	cmp    ebp,0xfd81300b
  43939e:	add    eax,DWORD PTR [eax]
  4393a0:	mov    ch,bh
  4393a2:	sti    
  4393a3:	sub    eax,DWORD PTR [ecx+0x791df3fd]
  4393a9:	std    
  4393aa:	jmp    0x43938f
  4393ac:	jg     0x4393ab
  4393ae:	jecxz  0x439397
  4393b0:	jg     0x4393af
  4393b2:	fcmovnbe st,st(7)
  4393b4:	jg     0x4393b3
  4393b6:	rol    ebp,cl
  4393b8:	jg     0x4393b7
  4393ba:	retf   
  4393bb:	xchg   ecx,eax
  4393bc:	cmp    ch,0xc3
  4393bf:	lahf   
  4393c0:	cmp    ch,0xbb
  4393c3:	rol    DWORD PTR [eax-0x2e4cff03],0x80
  4393ca:	std    
  4393cb:	stos   DWORD PTR es:[edi],eax
  4393cc:	rol    DWORD PTR [eax-0x7efe5c03],cl
  4393d2:	std    
  4393d3:	fwait
  4393d4:	inc    DWORD PTR [eax-0x7dca6c03]
  4393da:	std    
  4393db:	mov    esp,DWORD PTR [edi]
  4393dd:	cmp    ch,0x83
  4393e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4393e1:	jg     0x4393e0
  4393e3:	jnp    0x439380
  4393e5:	jg     0x4393e4
  4393e7:	jae    0x4393ac
  4393e9:	jg     0x4393e8
  4393eb:	imul   ecx,DWORD PTR [ebx],0xffffff80
  4393ee:	std    
  4393ef:	arpl   WORD PTR [ebp-0x80],sp
  4393f2:	std    
  4393f3:	pop    ebx
  4393f4:	jge    0x439376
  4393f6:	std    
  4393f7:	push   ebx
  4393f8:	add    DWORD PTR [eax-0x14ffb403],0xf51d4180
  439402:	cmp    BYTE PTR [ecx],0x1d
  439405:	pop    es
  439406:	xor    DWORD PTR [ecx],0x2980fb1d
  43940c:	sbb    eax,0x1d218103
  439411:	scas   eax,DWORD PTR es:[edi]
  439412:	sbb    BYTE PTR [ecx],0x1d
  439415:	pop    DWORD PTR [eax-0x7f40e2ef]
  43941b:	or     DWORD PTR ds:0x1d01809b,ebx
  439421:	ret    
  439422:	cmp    cl,0x1c
  439425:	fild   WORD PTR [edx-0x7dece30f]
  43942b:	add    cl,ch
  43942d:	sbb    al,0xb
  43942f:	and    cl,0x1c
  439432:	pop    ds
  439433:	sbb    cl,0x1c
  439436:	pop    ds
  439437:	adc    cl,0x1c
  43943a:	sub    eax,0x8d1cc982
  43943f:	add    ecx,0xb981791c
  439445:	sbb    al,0x63
  439447:	xor    DWORD PTR [ecx-0x567db0e4],0xa17f751c
  439451:	sbb    al,0x31
  439453:	sbb    BYTE PTR [ecx-0x6e7dbce4],0x1c
  43945a:	inc    edi
  43945b:	or     BYTE PTR [ecx-0x7e7dcae4],0x1c
  439462:	and    eax,DWORD PTR [edx-0x7beee387]
  439468:	jno    0x439486
  43946a:	pop    ecx
  43946b:	sub    DWORD PTR [ecx+0x1c],0x63
  43946f:	and    DWORD PTR [ecx+0x1c],0x37
  439473:	sbb    DWORD PTR [ecx+0x1c],0x0
  439477:	stos   DWORD PTR es:[edi],eax
  439478:	pop    ss
  439479:	push   ds
  43947a:	stc    
  43947b:	fwait
  43947c:	pop    ss
  43947d:	push   ds
  43947e:	stc    
  43947f:	dec    ebx
  439480:	pop    ss
  439481:	push   ds
  439482:	stc    
  439483:	push   ebp
  439484:	pop    ss
  439485:	push   ds
  439486:	stc    
  439487:	out    dx,eax
  439488:	sbb    BYTE PTR [esi],bl
  43948a:	stc    
  43948b:	icebp  
  43948c:	adc    BYTE PTR [esi],bl
  43948e:	stc    
  43948f:	cmp    eax,0xf91e1900
  439494:	push   ecx
  439495:	adc    DWORD PTR [esi],ebx
  439497:	stc    
  439498:	adc    ebx,DWORD PTR [ecx]
  43949a:	push   ds
  43949b:	stc    
  43949c:	and    edx,DWORD PTR [ecx]
  43949e:	push   ds
  43949f:	stc    
  4394a0:	sbb    DWORD PTR gs:[esi],ebx
  4394a3:	stc    
  4394a4:	push   ecx
  4394a5:	adc    DWORD PTR [esi],ebx
  4394a7:	stc    
  4394a8:	jae    0x4394c3
  4394aa:	push   ds
  4394ab:	stc    
  4394ac:	pop    ebp
  4394ad:	adc    DWORD PTR [esi],ebx
  4394af:	stc    
  4394b0:	xchg   DWORD PTR [ecx],ebx
  4394b2:	push   ds
  4394b3:	stc    
  4394b4:	(bad)  
  4394b5:	adc    DWORD PTR [esi],ebx
  4394b7:	stc    
  4394b8:	xchg   ebx,eax
  4394b9:	sbb    DWORD PTR [esi],ebx
  4394bb:	stc    
  4394bc:	popf   
  4394bd:	adc    DWORD PTR [esi],ebx
  4394bf:	stc    
  4394c0:	and    eax,0x15f91e1a
  4394c5:	adc    bl,BYTE PTR [esi]
  4394c7:	stc    
  4394c8:	bndldx bnd3,[esi]
  4394cb:	stc    
  4394cc:	sti    
  4394cd:	adc    DWORD PTR [esi],ebx
  4394cf:	stc    
  4394d0:	(bad)  
  4394d1:	pop    ss
  4394d2:	push   ds
  4394d3:	stc    
  4394d4:	iret   
  4394d5:	pop    ss
  4394d6:	push   ds
  4394d7:	stc    
  4394d8:	xchg   ebx,eax
  4394d9:	pop    ss
  4394da:	sbb    eax,0x1d17a3f9
  4394df:	stc    
  4394e0:	fst    DWORD PTR ds:0x15cbf91d
  4394e6:	sbb    eax,0x1d15f9f9
  4394eb:	stc    
  4394ec:	xchg   edi,eax
  4394ed:	jmp    0x43950c
  4394ef:	stc    
  4394f0:	add    BYTE PTR ds:0xfffa9b,cl
  4394f6:	and    eax,0xdbfffa9b
  4394fb:	fwait
  4394fc:	cli    
  4394fd:	(bad)  
  4394fe:	fistp  DWORD PTR [ebx-0x64380006]
  439504:	cli    
  439505:	call   FWORD PTR [ecx-0x12000481]
  43950b:	jge    0x439508
  43950d:	(bad)  
  43950e:	sti    
  43950f:	jge    0x43950c
  439511:	dec    DWORD PTR [ebx+0x7e]
  439514:	sti    
  439515:	jmp    FWORD PTR [edi+0x6ffffb7f]
  43951b:	jg     0x439518
  43951d:	call   DWORD PTR [ecx]
  43951f:	jg     0x43951c
  439521:	call   FWORD PTR [ebp+0x7f]
  439524:	sti    
  439525:	jmp    FWORD PTR [ebp-0x28000481]
  43952b:	jge    0x439528
  43952d:	(bad)  
  43952e:	std    
  43952f:	(bad)  
  439530:	(bad)  
  439531:	push   edi
  439533:	ins    DWORD PTR es:[edi],dx
  439534:	sti    
  439535:	(bad)  
  439536:	out    dx,eax
  439537:	ins    DWORD PTR es:[edi],dx
  439538:	sti    
  439539:	call   FWORD PTR [ecx-0x5a00048c]
  43953f:	je     0x43953c
  439541:	(bad)  
  439542:	in     eax,dx
  439543:	outs   dx,BYTE PTR ds:[esi]
  439544:	sti    
  439545:	call   FWORD PTR ds:0x33fffb6f
  43954b:	outs   dx,DWORD PTR ds:[esi]
  43954c:	sti    
  43954d:	(bad)  
  43954e:	aas    
  43954f:	outs   dx,DWORD PTR ds:[esi]
  439550:	sti    
  439551:	inc    DWORD PTR [edi+0x74]
  439554:	sti    
  439555:	inc    DWORD PTR [ebx+0xfffb74]
  43955b:	mov    ebp,0x89fffb74
  439560:	outs   dx,BYTE PTR ds:[esi]
  439561:	sti    
  439562:	dec    DWORD PTR [ebx+0x37fffb6e]
  439568:	cdq    
  439569:	cli    
  43956a:	call   DWORD PTR [ebx+ecx*4+0x586bfd78]
  439571:	js     0x439570
  439573:	arpl   WORD PTR [esi-0x43a40289],di
  439579:	ja     0x439578
  43957b:	push   ebx
  43957c:	adc    bh,BYTE PTR [eax-0x3]
  43957f:	dec    ebx
  439580:	add    BYTE PTR [edi-0x3],dh
  439583:	inc    ebx
  439584:	pop    edx
  439585:	js     0x439584
  439587:	cmp    ebp,DWORD PTR [eax+0x78]
  43958a:	std    
  43958b:	xor    ebp,DWORD PTR [eax]
  43958d:	std    
  43958e:	call   DWORD PTR [ebp+edx*1-0x1beb0003]
  439595:	jno    0x439594
  439597:	sbb    edi,DWORD PTR [ecx]
  439599:	std    
  43959a:	call   DWORD PTR [ebp*1+0x2914fffd]
  4395a1:	std    
  4395a2:	call   DWORD PTR [esi+ebp*8]
  4395a5:	jno    0x4395a4
  4395a7:	sti    
  4395a8:	sub    al,0xfd
  4395aa:	call   DWORD PTR [ebx+ebp*1]
  4395ad:	std    
  4395ae:	call   DWORD PTR [eax+eiz*2]
  4395b1:	ja     0x4395b0
  4395b3:	jecxz  0x4395f8
  4395b5:	ja     0x4395b4
  4395b7:	(bad)  [ebx]
  4395b9:	std    
  4395ba:	call   DWORD PTR [edi+edx*4]
  4395bd:	cld    
  4395be:	inc    DWORD PTR [eax]
  4395c0:	adc    al,0x44
  4395c2:	ja     0x4395c1
  4395c4:	ret    
  4395c5:	adc    eax,0x11bbfd73
  4395ca:	std    
  4395cb:	call   DWORD PTR [ebx*1-0x4beb0003]
  4395d2:	add    eax,DWORD PTR [eax]
  4395d4:	adc    al,0x26
  4395d6:	std    
  4395d7:	call   DWORD PTR [ebx+esi*1]
  4395da:	std    
  4395db:	call   DWORD PTR [edi+eiz*1]
  4395de:	jae    0x4395dd
  4395e0:	mov    esp,DWORD PTR [ecx]
  4395e2:	std    
  4395e3:	call   DWORD PTR [eax+eax*1]
  4395e6:	sti    
  4395e7:	add    edx,DWORD PTR [eax+eax*4+0x197179ab]
  4395ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4395ef:	jns    0x43965a
  4395f1:	sbb    DWORD PTR [edi+0x79],ecx
  4395f4:	popa   
  4395f5:	sbb    DWORD PTR [edx],edx
  4395f7:	add    al,0x94
  4395f9:	adc    bh,0x3
  4395fc:	xchg   esp,eax
  4395fd:	and    dh,0x3
  439600:	xchg   esp,eax
  439601:	adc    dh,0x3
  439604:	xchg   esp,eax
  439605:	adc    bh,0x3
  439608:	xchg   esp,eax
  439609:	and    bh,0x3
  43960c:	xchg   esp,eax
  43960d:	add    BYTE PTR [ecx+0x27192995],bl
  439613:	xchg   ebp,eax
  439614:	and    DWORD PTR [ecx],ebx
  439616:	sub    eax,0x13191995
  43961b:	xchg   ebp,eax
  43961c:	adc    DWORD PTR [ecx],ebx
  43961e:	adc    DWORD PTR [ebp-0x6ac0e6f7],edx
  439624:	add    BYTE PTR [ecx],al
  439626:	sbb    DWORD PTR [edi],edx
  439628:	xchg   ebp,eax
  439629:	stc    
  43962a:	sbb    BYTE PTR [ecx],bl
  43962c:	xchg   ebp,eax
  43962d:	icebp  
  43962e:	sbb    bl,ah
  439630:	xchg   ecx,eax
  439631:	jmp    0xe1d5874e
  439636:	sbb    bh,al
  439638:	xchg   ecx,eax
  439639:	fstp   DWORD PTR [eax]
  43963b:	int    0x91
  43963d:	rcr    DWORD PTR [eax],1
  43963f:	mov    ebx,0xa718c991
  439644:	xchg   ecx,eax
  439645:	rcr    DWORD PTR [eax],0x35
  439648:	xchg   edx,eax
  439649:	mov    ecx,0xb191b318
  43964e:	sbb    BYTE PTR ds:0xe718a992,ch
  439654:	add    edx,DWORD PTR [eax+eax*1+0x1899776d]
  43965b:	pop    ebp
  43965c:	ja     0x4395ef
  43965e:	sbb    BYTE PTR [eax],al
  439660:	test   DWORD PTR [ebx],eax
  439662:	push   ss
  439663:	stc    
  439664:	cmp    edi,esp
  439666:	adc    eax,0x15fc47f9
  43966b:	stc    
  43966c:	sub    eax,0xddf915ec
  439671:	jecxz  0x439688
  439673:	stc    
  439674:	retf   
  439675:	jmp    0x43968c
  439677:	stc    
  439678:	mul    ebx
  43967a:	adc    eax,0x97e9f9
  43967f:	add    BYTE PTR [esi-0xa96406b],al
  439685:	hlt    
  439686:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  439687:	imul   edx,esi,0x0
  43968a:	neg    BYTE PTR [edx+eiz*2+0x5ca9f0c5]
  439691:	fcomi  st,st(4)
  439693:	stos   BYTE PTR es:[edi],al
  439694:	bound  edi,QWORD PTR [edi+0x52f917f3]
  43969a:	xchg   ebp,eax
  43969b:	mov    edi,0xa634b569
  4396a0:	imul   eax,esi,0x36
  4396a3:	popf   
  4396a4:	(bad)  
  4396a5:	lds    eax,FWORD PTR [ebx-0x5d]
  4396a8:	pop    esp
  4396a9:	fwait
  4396aa:	xor    al,0xab
  4396ac:	bound  ecx,QWORD PTR [edi+0x10f91843]
  4396b2:	jmp    0x439664
  4396b4:	pop    esi
  4396b5:	xor    BYTE PTR [ebx],0xc2
  4396b8:	push   0x699ec67b
  4396bd:	xchg   BYTE PTR [ebx],ch
  4396bf:	mov    ds:0xa32d8b48,eax
  4396c4:	pop    esp
  4396c5:	jne    0x43965e
  4396c7:	test   esi,edi
  4396c9:	sub    eax,0x5053941b
  4396ce:	cmc    
  4396cf:	pushf  
  4396d0:	cmp    al,0x46
  4396d2:	sti    
  4396d3:	test   eax,0x4697e973
  4396d8:	(bad)  
  4396d9:	jmp    DWORD PTR [ebp+0x77]
  4396dc:	pop    edx
  4396dd:	jo     0x43968e
  4396df:	ja     0x43971b
  4396e1:	ins    BYTE PTR es:[edi],dx
  4396e2:	shr    DWORD PTR [ebp+0x5c],1
  4396e5:	add    BYTE PTR [esi],dh
  4396e7:	add    cl,BYTE PTR [eax+0x65]
  4396ea:	mov    WORD PTR [edx+edi*1+0x6c],cs
  4396ee:	add    BYTE PTR [ecx+0x32005c6d],ah
  4396f4:	add    cl,BYTE PTR [eax+0x65]
  4396f7:	mov    WORD PTR [edi+edi*1+0x72],cs
  4396fb:	mov    BYTE PTR [edi-0x7],dh
  4396fe:	inc    DWORD PTR [edi+0x49653f02]
  439704:	xor    ebp,DWORD PTR [ebx+0x6f]
  439707:	mov    ?,WORD PTR [edi+0x6c]
  43970a:	jae    0x439711
  43970c:	jbe    0x439768
  43970e:	jo     0x43974d
  439710:	add    eax,ebp
  439712:	add    dh,ch
  439714:	jne    0x439770
  439716:	jo     0x439706
  439718:	push   eax
  439719:	pop    esi
  43971a:	popa   
  43971b:	fnstenv [ebp-0x7]
  43971e:	call   FWORD PTR [edi+0x2]
  439721:	inc    ecx
  439722:	outs   dx,BYTE PTR ds:[esi]
  439723:	aam    0x66
  439725:	bound  esp,QWORD PTR [ecx+0x41]
  439728:	jp     0x43979d
  43972a:	gs cs push ecx
  43972d:	bound  esi,QWORD PTR [esp+eax*1+0x60]
  439731:	pop    edx
  439732:	ins    BYTE PTR es:[edi],dx
  439733:	cs jbe 0x439792
  439736:	je     0x43974c
  439738:	ins    BYTE PTR es:[edi],dx
  439739:	addr16 add ah,dl
  43973c:	dec    DWORD PTR [ebx+0x65]
  43973f:	sbb    al,0x65
  439741:	pop    esi
  439742:	inc    ebx
  439743:	dec    edi
  439744:	jp     0x4397b3
  439746:	imul   ecx,DWORD PTR [esi],0x48536562
  43974c:	popa   
  43974d:	ins    DWORD PTR es:[edi],dx
  43974e:	imul   esp,DWORD PTR [edx+0x6e],0x9400fff9
  439755:	aas    
  439756:	std    
  439757:	inc    edx
  439758:	xor    ch,BYTE PTR [ebp-0x24a89268]
  43975e:	xchg   esp,eax
  43975f:	jae    0x43975e
  439761:	retf   0x6b9c
  439764:	out    0xc4,eax
  439766:	sahf   
  439767:	jae    0x439756
  439769:	(bad)  
  43976a:	xchg   ecx,eax
  43976b:	(bad)  
  43976c:	jnp    0x4397c7
  43976e:	std    
  43976f:	inc    ebx
  439770:	stc    
  439771:	add    ebx,DWORD PTR [ecx-0x52150e8d]
  439777:	callw  0x367b
  43977b:	pop    esi
  43977c:	call   0xc8a0307b
  439781:	lock xchg edx,eax
  439783:	imul   edx,DWORD PTR [eax+esi*1+0xbc42fe],0x2ec64fb0
  43978e:	mov    al,ds:0xfd3aa762
  439793:	adc    BYTE PTR [ebp-0x288c659a],0x56
  43979a:	xchg   edx,eax
  43979b:	push   0xffffffb5
  43979d:	sub    eax,0x457d4b99
  4397a2:	call   0x794c:0xf96f9450
  4397a9:	dec    ebx
  4397aa:	mov    edx,0xaf6e866d
  4397af:	dec    edx
  4397b0:	cmp    DWORD PTR [ebx-0x66],0xffffffff
  4397b4:	jmp    0x439754
  4397b6:	std    
  4397b7:	inc    eax
  4397b8:	add    BYTE PTR [ecx+0x6b],bh
  4397bb:	shr    BYTE PTR [eax+0x69],0x97
  4397bf:	test   eax,0xb2993973
  4397c4:	pop    esi
  4397c5:	cmp    DWORD PTR [esp+ecx*8-0x68f3c01],eax
  4397cc:	dec    esp
  4397cd:	xor    DWORD PTR [eax],eax
  4397cf:	pop    ebx
  4397d0:	leave  
  4397d1:	and    eax,0xab98489b
  4397d6:	adc    eax,0x9b5505ef
  4397db:	push   edx
  4397dc:	shr    DWORD PTR [esp+ebx*4],1
  4397df:	cmp    esi,DWORD PTR [eax-0x4db8370a]
  4397e5:	mul    DWORD PTR [ebx+ecx*2-0x43ea7c45]
  4397ec:	or     dh,ah
  4397ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4397ef:	adc    al,0x98
  4397f1:	out    0x9f,al
  4397f3:	or     cl,dl
  4397f5:	stc    
  4397f6:	fwait
  4397f7:	or     ecx,ecx
  4397f9:	jmp    0x4397fb
  4397fb:	push   ebp
  4397fc:	or     cl,cl
  4397fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4397ff:	or     ebp,DWORD PTR [ecx+0x64300c3]
  439805:	aad    0x9b
  439807:	cli    
  439808:	mov    ecx,0xacf592b6
  43980d:	lods   al,BYTE PTR ds:[esi]
  43980e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43980f:	stos   DWORD PTR es:[edi],eax
  439810:	fwait
  439811:	les    eax,FWORD PTR [eax]
  439813:	repz add eax,0xd0da9bd5
  439819:	lods   al,BYTE PTR ds:[esi]
  43981a:	pushf  
  43981b:	shr    DWORD PTR [edi-0x30414a00],cl
  439821:	scas   eax,DWORD PTR es:[edi]
  439822:	jbe    0x4397ea
  439824:	(bad)  
  439825:	mov    al,0x76
  439827:	lods   eax,DWORD PTR ds:[esi]
  439828:	out    0x3,al
  43982a:	push   edi
  43982b:	add    ah,BYTE PTR [edx-0x6b4f7858]
  439831:	mov    dl,0x50
  439833:	mov    edi,0x9b79a782
  439838:	xchg   ebp,eax
  439839:	xchg   esi,eax
  43983a:	jecxz  0x439850
  43983c:	fs add al,0x99
  43983f:	xchg   edx,eax
  439840:	mov    esp,DWORD PTR [edi+eax*2+0x3699a39b]
  439847:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  439848:	(bad)  
  439849:	jl     0x439849
  43984b:	adc    al,0xf9
  43984d:	not    BYTE PTR [ebx+0xc505eaf]
  439853:	mov    edi,0x91c55b68
  439858:	imul   ebx,DWORD PTR [ebp-0xf],0xffffffa4
  43985c:	imul   eax,DWORD PTR [edi+eax*8-0x4e],0x65
  439861:	dec    esp
  439862:	cmp    edx,DWORD PTR [eax-0x40681694]
  439868:	add    al,BYTE PTR [ebp+0x2b]
  43986b:	nop
  43986c:	ins    DWORD PTR es:[edi],dx
  43986d:	dec    edx
  43986e:	inc    ebp
  43986f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  439870:	ds cbw 
  439873:	fld    DWORD PTR [edx]
  439875:	or     eax,0xa6d9003
  43987a:	cmp    DWORD PTR [eax-0x706816b0],edx
  439880:	cld    
  439881:	xor    eax,0x699f2800
  439886:	and    al,0x2e
  439888:	lahf   
  439889:	imul   edi,ebp,0x81f913fe
  43988f:	xchg   edi,eax
  439890:	mov    esp,0x9b03d972
  439895:	pop    esp
  439896:	enter  0x9f03,0x47
  43989a:	enter  0x9fe5,0x6b
  43989e:	les    edx,FWORD PTR [edi+0x43a9ffc2]
  4398a4:	test   eax,0xb2dfc46c
  4398a9:	imul   ecx,ebp,0x27ff9f33
  4398af:	nop
  4398b0:	shl    DWORD PTR [edx-0x63],0xda
  4398b4:	mov    gs,WORD PTR [ebp-0x65]
  4398b7:	cmp    al,0xaa
  4398b9:	jae    0x439874
  4398bb:	or     DWORD PTR [ecx-0x5afd7ba4],ebp
  4398c1:	inc    esi
  4398c2:	add    BYTE PTR [ecx],ah
  4398c4:	add    BYTE PTR [eax+0x3],cl
  4398c7:	stc    
  4398c8:	dec    esi
  4398c9:	pop    esp
  4398ca:	popa   
  4398cb:	sbb    DWORD PTR [edx+0x6b],ecx
  4398ce:	adc    BYTE PTR gs:[eax],al
  4398d1:	es add eax,0x74626a72
  4398d7:	push   eax
  4398d8:	dec    esp
  4398d9:	imul   ebp,DWORD PTR [edi+0x4e],0x5b
  4398dd:	ins    BYTE PTR es:[edi],dx
  4398de:	jae    0x439958
  4398e0:	pop    ebx
  4398e1:	outs   dx,WORD PTR ds:[esi]
  4398e3:	iret   
  4398e4:	ja     0x4398df
  4398e6:	inc    DWORD PTR [eax]
  4398e8:	or     BYTE PTR [ecx],cl
  4398ea:	dec    ebx
  4398eb:	jns    0x4398ab
  4398ed:	js     0x43994d
  4398ef:	ins    DWORD PTR es:[edi],dx
  4398f0:	mov    eax,ds:0xb1656667
  4398f5:	push   ecx
  4398f6:	aas    
  4398f7:	imul   ebx,DWORD PTR [ecx-0x6796b2a5],0xe5fff95b
  439901:	cli    
  439902:	ds gs push ecx
  439905:	dec    ebx
  439906:	bound  ebp,QWORD PTR [ebp-0x70]
  439909:	push   edx
  43990a:	push   0x6747906e
  43990f:	data16 cmp ch,BYTE PTR [ebp+0x66]
  439913:	popa   
  439914:	push   ecx
  439915:	pushw  0x3d6e
  439919:	(bad)  
  43991a:	cli    
  43991b:	add    edx,esi
  43991d:	pop    ecx
  43991e:	ins    DWORD PTR es:[edi],dx
  43991f:	dec    esp
  439920:	ficomp DWORD PTR [ebx+0x5a]
  439923:	ins    BYTE PTR es:[edi],dx
  439924:	xor    DWORD PTR [esi+0x66],esp
  439927:	gs std 
  439929:	(bad)  
  43992a:	outs   dx,BYTE PTR ds:[esi]
  43992b:	add    dh,BYTE PTR [edx]
  43992d:	pop    edx
  43992e:	ins    DWORD PTR es:[edi],dx
  43992f:	push   ebx
  439930:	inc    esp
  439931:	ins    BYTE PTR es:[edi],dx
  439932:	ins    DWORD PTR es:[edi],dx
  439933:	or     BYTE PTR gs:[ebx+0x62],cl
  439937:	ins    DWORD PTR es:[edi],dx
  439938:	adc    bh,bh
  43993a:	inc    ebp
  43993b:	add    eax,0x73947d94
  439940:	xchg   bp,ax
  439942:	mov    eax,ds:0xfd296b69
  439947:	inc    ebx
  439948:	xchg   ecx,eax
  439949:	test   DWORD PTR [ebx+esi*2-0x5579ba00],edx
  439950:	outs   dx,DWORD PTR ds:[esi]
  439951:	sub    eax,0x994afd68
  439956:	lods   eax,DWORD PTR ds:[esi]
  439957:	xchg   edx,eax
  439958:	jae    0x439980
  43995a:	lds    esp,FWORD PTR [eax-0x2d6aa97]
  439960:	pusha  
  439961:	xchg   edi,eax
  439962:	hlt    
  439963:	nop
  439964:	imul   ecx,DWORD PTR [eax],0xffffffb1
  439967:	shl    DWORD PTR [esi+0x0],0xbd
  43996b:	mov    bh,0x68
  43996d:	jmp    0x43992f
  43996f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  439970:	(bad)  
  439971:	xlat   BYTE PTR ds:[ebx]
  439972:	mov    edi,0x18946d9c
  439977:	add    dl,BYTE PTR [ecx-0x3]
  43997a:	sti    
  43997b:	mov    al,ds:0x9208ec3c
  439980:	push   ebx
  439981:	jmp    0x439977
  439983:	nop
  439984:	imul   ecx,eax,0xfffffff0
  439987:	shl    DWORD PTR [esi-0x40],0xfc
  43998b:	add    ebp,esi
  43998d:	cwde   
  43998e:	icebp  
  43998f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  439990:	ins    DWORD PTR es:[edi],dx
  439991:	ror    BYTE PTR [esi+ebx*4],0x6b
  439995:	lds    esi,FWORD PTR [edx+eiz*4]
  439998:	ins    DWORD PTR es:[edi],dx
  439999:	lods   eax,DWORD PTR ds:[esi]
  43999a:	pop    esp
  43999b:	xchg   ebp,eax
  43999c:	jmp    DWORD PTR [ebx]
  43999e:	out    0x3,eax
  4399a0:	dec    esi
  4399a1:	mov    cl,0x48
  4399a3:	mov    eax,ds:0xa42a864f
  4399a8:	bound  eax,QWORD PTR [edi+0x7162ca56]
  4399ae:	cmp    dl,BYTE PTR [ebx-0x286bff8a]
  4399b4:	add    BYTE PTR [edx+0x7d],dl
  4399b7:	add    BYTE PTR [ebp-0x75609969],dl
  4399bd:	mov    bl,0x71
  4399bf:	mov    eax,ds:0x8c38a69a
  4399c4:	mov    ds:0xd11d39b,eax
  4399c9:	pop    es
  4399ca:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  4399cc:	je     0x439965
  4399ce:	inc    esi
  4399cf:	lahf   
  4399d0:	add    dl,0x2f
  4399d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4399d4:	jns    0x43997a
  4399d6:	push   esi
  4399d7:	cwde   
  4399d8:	out    0x3,al
  4399da:	dec    edx
  4399db:	jmp    DWORD PTR [eax]
  4399dd:	xchg   edx,eax
  4399de:	ss fwait
  4399e0:	and    ch,BYTE PTR [ebp-0x6db871c7]
  4399e6:	or     al,BYTE PTR [ecx]
  4399e8:	add    al,BYTE PTR [ebx]
  4399ea:	fsub   DWORD PTR [ecx-0x583057b9]
  4399f0:	inc    esp
  4399f1:	xchg   edx,eax
  4399f2:	fimul  DWORD PTR [esi+0x1173b72f]
  4399f8:	test   al,0x8
  4399fa:	rcr    BYTE PTR [ebx-0x5d054eec],0x7
  439a01:	cwde   
  439a02:	imul   BYTE PTR [esi+edi*8+0xa9fb691]
  439a09:	add    al,0x7
  439a0b:	add    BYTE PTR [esi],ah
  439a0d:	xchg   edx,eax
  439a0e:	mov    dh,0x9f
  439a10:	cli    
  439a11:	test   al,0xe7
  439a13:	test   al,0xf4
  439a15:	test   al,0x0
  439a17:	rcr    BYTE PTR [esi+eiz*8-0x4f03c2fd],cl
  439a1e:	lods   al,BYTE PTR ds:[esi]
  439a1f:	mov    cl,0x8c
  439a21:	(bad)  [edi+ebp*4-0x78512b50]
  439a28:	fwait
  439a29:	lds    edx,FWORD PTR [edi+0x796110b]
  439a2f:	push   ecx
  439a30:	fwait
  439a31:	(bad)  
  439a32:	mov    esp,0x9e63a6cc
  439a37:	cmp    DWORD PTR [edi+0x113c9566],edi
  439a3d:	stc    
  439a3e:	xchg   BYTE PTR [ebx-0x2e629d3d],bl
  439a44:	cdq    
  439a45:	imul   eax,DWORD PTR [edi+eax*1+0x239766a8],0xffffff9e
  439a4d:	ins    DWORD PTR es:[edi],dx
  439a4e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  439a4f:	pop    ds
  439a50:	adc    ecx,edi
  439a52:	adc    DWORD PTR [ebx-0x268a9d3d],0xffffff99
  439a59:	imul   ecx,DWORD PTR [esp+ebp*8-0x67],0x6a
  439a5e:	inc    esp
  439a5f:	cwde   
  439a60:	fld    QWORD PTR [edx]
  439a62:	ds push es
  439a64:	call   0x4c6b:0xa75a4473
  439a6b:	nop
  439a6c:	jmp    DWORD PTR es:0x4041942d
  439a73:	inc    esp
  439a74:	mov    ds:0x9e0c353e,eax
  439a79:	or     ax,WORD PTR [eax]
  439a7c:	or     eax,0x2b1a6294
  439a81:	adc    cl,bh
  439a83:	test   eax,0x862be96
  439a88:	cld    
  439a89:	shl    DWORD PTR [esi+0x15],0xfd
  439a8d:	psubw  mm5,QWORD PTR [esi-0x69]
  439a91:	int    0x6d
  439a93:	or     al,0xf1
  439a95:	xchg   ebx,eax
  439a96:	bound  esp,QWORD PTR [edi]
  439a98:	add    DWORD PTR [edx+eiz*2-0x14e6842],ebx
  439a9f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  439aa0:	repz xchg edx,eax
  439aa2:	ins    BYTE PTR es:[edi],dx
  439aa3:	rcl    DWORD PTR [ecx-0x59],0x6b
  439aa7:	(bad)  
  439aa8:	aad    0x92
  439aaa:	popa   
  439aab:	add    bl,bl
  439aad:	pop    eax
  439aae:	imul   esi,DWORD PTR [ebx-0x13],0x3
  439ab2:	jmp    0x6d9cc4b8
  439ab7:	inc    esi
  439ab8:	aam    0x5f
  439aba:	pop    esi
  439abb:	push   ebx
  439abc:	add    al,0x6a
  439abe:	pop    esi
  439abf:	inc    ebp
  439ac0:	xor    eax,0x1e046b04
  439ac5:	pop    ecx
  439ac6:	ins    DWORD PTR es:[edi],dx
  439ac7:	dec    esp
  439ac8:	sbb    al,0x73
  439aca:	ins    DWORD PTR es:[edi],dx
  439acb:	inc    ebp
  439acc:	dec    edi
  439acd:	jno    0x439b37
  439acf:	jb     0x439a7e
  439ad1:	add    ebp,edx
  439ad3:	add    edx,ebp
  439ad5:	pop    eax
  439ad6:	ins    DWORD PTR es:[edi],dx
  439ad7:	inc    esi
  439ad8:	adc    al,0x60
  439ada:	pop    esi
  439adb:	push   esp
  439adc:	inc    esp
  439add:	pop    edi
  439ade:	pop    esi
  439adf:	add    BYTE PTR [eax],al
  439ae1:	jmp    0x439ae7
  439ae3:	inc    esp
  439ae4:	gs push ecx
  439ae6:	ins    DWORD PTR es:[di],dx
  439ae8:	gs mov ebx,0xaa65655b
  439aee:	add    al,0xec
  439af0:	add    DWORD PTR [edx-0x2bb99299],edi
  439af6:	push   eax
  439af7:	pop    esi
  439af8:	dec    ecx
  439af9:	mov    bl,0x66
  439afb:	push   0x6d638072
  439b00:	imul   edx,DWORD PTR [edx-0x4a86c4a2],0x51646763
  439b0a:	data16 stc 
  439b0c:	call   FWORD PTR [eax+edi*8+0x4549654a]
  439b13:	bound  ebp,QWORD PTR [eax+ecx*4+0x43]
  439b17:	ins    DWORD PTR es:[edi],dx
  439b18:	je     0x439b49
  439b1a:	pop    edx
  439b1b:	pop    ebx
  439b1c:	jne    0x439b67
  439b1e:	data16 ins BYTE PTR es:[edi],dx
  439b20:	push   edi
  439b21:	sub    eax,0x9403f203
  439b26:	dec    ebx
  439b27:	mov    ds:0x9038796b,al
  439b2c:	bound  ebx,QWORD PTR [ecx+0x4c]
  439b2f:	xchg   ecx,eax
  439b30:	bound  edi,QWORD PTR [ecx+ebx*1-0x3]
  439b34:	push   eax
  439b35:	xchg   edi,eax
  439b36:	fs sahf 
  439b38:	outs   dx,DWORD PTR ds:[esi]
  439b39:	dec    edx
  439b3a:	inc    eax
  439b3b:	mov    ds:0xc37f5b70,al
  439b40:	data16 jo 0x439ac7
  439b43:	std    
  439b44:	rol    DWORD PTR [eax],1
  439b46:	nop
  439b47:	dec    esp
  439b48:	stos   DWORD PTR es:[edi],eax
  439b49:	push   0x35
  439b4b:	imul   esi,DWORD PTR [ebx-0x3471ce9a],0xa9705a61
  439b55:	bound  edx,QWORD PTR [ebp+eiz*4-0x7bd9c2fd]
  439b5c:	sahf   
  439b5d:	jae    0x439b90
  439b5f:	fbld   TBYTE PTR [ebx+ebp*2+0x6f9cdc39]
  439b66:	and    al,0xc0
  439b68:	test   eax,0xfd17eb60
  439b6d:	ret    
  439b6e:	xchg   ebp,eax
  439b6f:	fisub  WORD PTR [eax-0x722b288d]
  439b75:	ins    DWORD PTR es:[edi],dx
  439b76:	icebp  
  439b77:	lds    edx,FWORD PTR [edi-0x5f3603ad]
  439b7d:	pop    esi
  439b7e:	lock pop ss
  439b80:	std    
  439b81:	xchg   esi,eax
  439b82:	cwde   
  439b83:	retf   0x73a0
  439b86:	sar    bh,0x8d
  439b89:	bound  esi,QWORD PTR [ebp-0x42924bfd]
  439b8f:	test   BYTE PTR [ebp+0x400c866],0xf9
  439b96:	xchg   ebp,eax
  439b97:	fisub  WORD PTR [eax-0x5607238d]
  439b9d:	arpl   WORD PTR [eax-0x52353400],di
  439ba3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  439ba4:	leave  
  439ba5:	xchg   ecx,eax
  439ba6:	scas   al,BYTE PTR es:[edi]
  439ba7:	lahf   
  439ba8:	fisubr DWORD PTR [edx-0x19618400]
  439bae:	add    ebx,DWORD PTR [ebx+eax*1-0x2d]
  439bb2:	nop
  439bb3:	xchg   DWORD PTR [edx-0x4a7d6c3b],edx
  439bb9:	out    0x3,al
  439bbb:	push   ebp
  439bbc:	add    edi,DWORD PTR [ebx-0x7a6d9870]
  439bc2:	xchg   ebx,eax
  439bc3:	push   0xffffffbf
  439bc5:	out    0x3,al
  439bc7:	fwait
  439bc8:	add    eax,DWORD PTR [ebx-0x7a6db870]
  439bce:	scas   al,BYTE PTR es:[edi]
  439bcf:	cmp    edi,DWORD PTR [edi+0x35a03e6]
  439bd5:	mov    edx,DWORD PTR [eax-0x6c7a6db9]
  439bdb:	sub    bl,BYTE PTR [esi-0x55fc59]
  439be1:	sub    DWORD PTR [ecx-0x68b843d9],esp
  439be7:	daa    
  439be8:	ret    
  439be9:	push   esp
  439bea:	xchg   esi,eax
  439beb:	cld    
  439bec:	xchg   edx,eax
  439bed:	out    0x3,al
  439bef:	enter  0x3301,0xab
  439bf3:	loop   0x439b99
  439bf5:	sub    ch,BYTE PTR [ebp-0x69b86d27]
  439bfb:	jmp    0x29ff:0x7403e6bf
  439c02:	mov    eax,ds:0xad1ec3e7
  439c07:	out    0xc1,eax
  439c09:	add    DWORD PTR [eax-0x6a014b4a],esp
  439c0f:	add    BYTE PTR [esi+0x60040a9f],dh
  439c15:	jmp    DWORD PTR [ecx]
  439c17:	mov    eax,ds:0x6ffc3c7
  439c1c:	push   es
  439c1d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  439c1e:	ins    DWORD PTR es:[edi],dx
  439c1f:	(bad)  
  439c20:	std    
  439c21:	cdq    
  439c22:	(bad)  
  439c23:	xlat   BYTE PTR ds:[ebx]
  439c24:	adc    ebp,DWORD PTR [edi-0x521724a2]
  439c2a:	pop    ebp
  439c2b:	lds    esi,FWORD PTR [eax+esi*4]
  439c2e:	inc    DWORD PTR [eax-0x33923470]
  439c34:	cmp    BYTE PTR [ecx-0x67de669e],dl
  439c3a:	pop    esp
  439c3b:	int3   
  439c3c:	or     bl,BYTE PTR [eax+edx*2-0x27f6817]
  439c43:	mov    ch,0x7
  439c45:	mov    ds:0x9801b969,al
  439c4a:	pop    esp
  439c4b:	mov    WORD PTR [edx],gs
  439c4d:	pushf  
  439c4e:	jmp    FWORD PTR [ecx]
  439c50:	xchg   esp,eax
  439c51:	mov    ah,0x67
  439c53:	jnp    0x439c49
  439c55:	lods   eax,DWORD PTR ds:[esi]
  439c56:	arpl   WORD PTR [edx+0x7b66bee1],di
  439c5c:	or     dl,BYTE PTR [ecx-0x4b6bdb01]
  439c62:	addr16 pop ebx
  439c64:	cmc    
  439c65:	lods   eax,DWORD PTR ds:[esi]
  439c66:	arpl   WORD PTR [edx],bx
  439c68:	ret    0x62b6
  439c6b:	push   ecx
  439c6c:	and    al,0xc
  439c6e:	stc    
  439c6f:	(bad)  
  439c70:	xchg   edi,eax
  439c71:	int    0x6d
  439c73:	dec    esp
  439c74:	add    BYTE PTR [ecx],bh
  439c76:	nop
  439c77:	bound  edx,QWORD PTR ds:0x416b992f
  439c7d:	xor    eax,0x41fa6f98
  439c82:	mov    ebp,0x9d080869
  439c87:	addr16 push cs
  439c89:	add    al,0xc
  439c8b:	stc    
  439c8c:	sub    ebx,DWORD PTR [edx+0x1562c1]
  439c92:	sahf   
  439c93:	data16 add BYTE PTR [ebx+0x65],al
  439c97:	ins    DWORD PTR es:[edi],dx
  439c98:	gs popf 
  439c9a:	jb     0x439d04
  439c9c:	xchg   sp,ax
  439c9e:	pop    eax
  439c9f:	pop    esi
  439ca0:	push   ebx
  439ca1:	and    DWORD PTR [esi+0x62],esi
  439ca4:	outs   dx,BYTE PTR ds:[esi]
  439ca5:	push   edx
  439ca6:	dec    edi
  439ca7:	stc    
  439ca8:	(bad)  
  439ca9:	jns    0x439cad
  439cab:	aas    
  439cac:	gs icebp 
  439cae:	dec    edi
  439caf:	imul   ebp,DWORD PTR [ecx-0x1d],0x64
  439cb3:	ins    DWORD PTR es:[edi],dx
  439cb4:	gs sbb eax,0xe4666876
  439cba:	arpl   WORD PTR [esi+0x49],bx
  439cbd:	fstp   TBYTE PTR [ebx+0x50]
  439cc0:	add    al,bl
  439cc2:	add    al,0x3d
  439cc4:	js     0x439cc3
  439cc6:	fs xor BYTE PTR fs:[bp+si+0x6f],bl
  439ccc:	imul   ebp,DWORD PTR [edi],0x106d6757
  439cd2:	pop    edx
  439cd3:	ins    DWORD PTR es:[edi],dx
  439cd4:	push   ebx
  439cd5:	inc    ecx
  439cd6:	jne    0x439d3a
  439cd8:	outs   dx,BYTE PTR ds:[esi]
  439cd9:	add    BYTE PTR [edx],dl
  439cdb:	jae    0x439d2d
  439cdd:	add    BYTE PTR [ebx+0xb],bh
  439ce0:	dec    ebp
  439ce1:	jb     0x439d07
  439ce3:	inc    eax
  439ce4:	addr16 je 0x439d37
  439ce7:	jb     0x439d25
  439ce9:	jb     0x439d2f
  439ceb:	jo     0x439d4f
  439ced:	arpl   sp,bx
  439cef:	pop    eax
  439cf0:	dec    esp
  439cf1:	fidiv  WORD PTR gs:[eax+0x62]
  439cf5:	outs   dx,DWORD PTR ds:[esi]
  439cf6:	jmp    0x439cfc
  439cf8:	jle    0x439cfc
  439cfa:	mov    dl,0x6b
  439cfc:	ins    DWORD PTR es:[edi],dx
  439cfd:	push   esp
  439cfe:	aad    0x72
  439d00:	pop    esi
  439d01:	popa   
  439d02:	rol    DWORD PTR [ebp+0x68],1
  439d05:	outs   dx,BYTE PTR ds:[esi]
  439d06:	sub    DWORD PTR [ebx+0x71],0x88ff6d74
  439d0d:	add    al,0x94
  439d0f:	(bad)  
  439d10:	cwde   
  439d11:	jae    0x439cf3
  439d13:	add    DWORD PTR [edx-0x3d024a9e],edx
  439d19:	push   0x779a15aa
  439d1e:	test   al,0x19
  439d20:	std    
  439d21:	dec    ebx
  439d22:	xchg   esi,eax
  439d23:	loop   0x439cbd
  439d25:	jae    0x439ceb
  439d27:	daa    
  439d28:	test   al,0x5c
  439d2a:	mov    cl,0x26
  439d2c:	xchg   esp,eax
  439d2d:	inc    esi
  439d2e:	js     0x439d49
  439d30:	std    
  439d31:	cdq    
  439d32:	xchg   esp,eax
  439d33:	push   esi
  439d34:	xchg   ebx,eax
  439d35:	bound  esi,QWORD PTR [ebp+0x4d]
  439d38:	call   0x77:0x9a55814a
  439d3f:	dec    ebx
  439d40:	sbb    ebp,edi
  439d42:	ret    0x6295
  439d45:	call   0x716d:0x936c5773
  439d4c:	jnp    0x439cd7
  439d4e:	push   ebx
  439d4f:	cmp    al,0x67
  439d51:	call   0xc3ff:0x9960305e
  439d58:	(bad)  
  439d5a:	push   ebx
  439d5b:	sub    BYTE PTR [esi-0x7dbf9443],al
  439d61:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  439d62:	jmp    FWORD PTR [ebx+0x3053ffe2]
  439d68:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  439d69:	mov    ebp,0x3c4316d
  439d6e:	rcr    DWORD PTR [eax-0x2c935835],0xc4
  439d75:	(bad)  
  439d76:	push   ecx
  439d77:	cmc    
  439d78:	mov    bl,0x88
  439d7a:	bound  edx,QWORD PTR [edi+ecx*2-0x38ffac07]
  439d81:	mov    dl,0x62
  439d83:	loopne 0x439d76
  439d85:	pushf  
  439d86:	imul   ebp,ecx,0x0
  439d89:	or     al,0x4
  439d8b:	push   esp
  439d8c:	add    eax,0x9bc19f33
  439d91:	jmp    FWORD PTR [ecx-0x4bfc6b16]
  439d97:	mov    cl,0x99
  439d99:	add    eax,0xe68da89f
  439d9e:	add    ebx,DWORD PTR [ebp+0x9f1504]
  439da4:	mov    eax,0xa5bef2a3
  439da9:	mov    ds:0xa1b8fd0,eax
  439dae:	push   es
  439daf:	add    edx,DWORD PTR [esi-0x69]
  439db2:	ret    0x679e
  439db5:	xchg   edi,eax
  439db6:	mov    ebx,0xaa99679e
  439dbb:	test   al,0x68
  439dbd:	(bad)  
  439dbe:	(bad)  
  439dbf:	(bad)  
  439dc0:	jbe    0x439d76
  439dc2:	mov    edi,0x660076a6
  439dc7:	add    eax,0xaf9aa355
  439dcc:	jbe    0x439d69
  439dce:	xchg   esi,eax
  439dcf:	sar    DWORD PTR [edx],0x9c
  439dd2:	mov    ecx,ecx
  439dd4:	push   0xffffff9b
  439dd6:	xor    DWORD PTR [eax+0x56c09c3],0x55
  439ddd:	mov    ds:0x9b36af72,eax
  439de2:	jbe    0x439d97
  439de4:	dec    edx
  439de5:	xchg   esp,eax
  439de6:	jle    0x439d98
  439de8:	mov    ds:0x56050b09,eax
  439ded:	xchg   edi,eax
  439dee:	dec    edx
  439def:	mov    eax,ds:0xa14397e7
  439df4:	out    0x99,eax
  439df6:	sbb    ah,BYTE PTR [edi-0x41ad6020]
  439dfc:	repnz pushf 
  439dfe:	inc    ebx
  439dff:	mov    al,0xfa
  439e01:	fwait
  439e02:	dec    DWORD PTR [ebx-0x70]
  439e05:	sar    esi,1
  439e07:	add    BYTE PTR es:[ecx],dh
  439e0a:	xchg   edi,eax
  439e0b:	arpl   WORD PTR [edi],bp
  439e0d:	sub    DWORD PTR [ebx-0x5dedea94],ebx
  439e13:	imul   ecx,DWORD PTR [ebx+edi*8],0x8
  439e17:	stc    
  439e18:	mov    edi,0x1766be98
  439e1d:	hlt    
  439e1e:	retf   
  439e1f:	imul   ecx,DWORD PTR [esi],0x7
  439e22:	sahf   
  439e23:	jmp    FWORD PTR [ebx]
  439e25:	xchg   ecx,eax
  439e26:	mov    esi,0xb703ff66
  439e2b:	(bad)  
  439e2d:	or     edi,DWORD PTR [edi-0x4fcb329a]
  439e33:	dec    DWORD PTR [ebp-0x3b8d4669]
  439e39:	and    eax,0x25cc4f92
  439e3e:	lahf   
  439e3f:	push   0x69aa3cbb
  439e44:	retf   0xcc34
  439e47:	push   0x628d39b4
  439e4c:	fwait
  439e4d:	xchg   edi,eax
  439e4e:	mov    al,ds:0x8efaabfc
  439e53:	bound  ebp,QWORD PTR [edi-0x5b9d6b08]
  439e59:	pop    ds
  439e5a:	mov    al,0xff
  439e5c:	retf   
  439e5d:	xchg   ebp,eax
  439e5e:	mov    edi,0xa9d97562
  439e63:	jae    0x439de5
  439e65:	sbb    DWORD PTR [esi-0x72f98fb4],ebx
  439e6b:	bound  edx,QWORD PTR [eax+eax*1-0x37]
  439e6f:	xchg   esi,eax
  439e70:	popa   
  439e71:	dec    esi
  439e72:	cwde   
  439e73:	xor    eax,0x94352dff
  439e78:	inc    ebx
  439e79:	pop    ebx
  439e7a:	xor    DWORD PTR [edx+0x65990062],edx
  439e80:	imul   esp,DWORD PTR [ebp-0x76],0xba0265fc
  439e87:	popa   
  439e88:	ins    DWORD PTR es:[edi],dx
  439e89:	push   ebx
  439e8a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  439e8b:	jae    0x439efa
  439e8d:	add    BYTE PTR gs:[eax+0x5e],0x66
  439e92:	pushf  
  439e93:	jno    0x439efa
  439e95:	je     0x439e1f
  439e97:	xor    eax,0x67436145
  439e9c:	outs   dx,BYTE PTR ds:[esi]
  439e9d:	popa   
  439e9e:	mov    ah,BYTE PTR [ecx-0x7]
  439ea1:	jmp    DWORD PTR [edx+eax*1]
  439ea4:	aas    
  439ea5:	sub    DWORD PTR gs:[eax+0x68],eax
  439ea9:	addr16 xchg esp,eax
  439eab:	arpl   WORD PTR [edx+0x6c],bx
  439eae:	jmp    0xd8ba0124
  439eb3:	jb     0x439eae
  439eb5:	dec    DWORD PTR [edi+0x2]
  439eb8:	aas    
  439eb9:	gs jmp 0xceb30a12
  439ebf:	pusha  
  439ec0:	ins    BYTE PTR es:[edi],dx
  439ec1:	jae    0x439ecc
  439ec3:	push   ebp
  439ec4:	data16 gs cs add al,0x3a
  439ec9:	add    eax,0x726d7321
  439ece:	push   cs
  439ecf:	pop    ecx
  439ed0:	imul   edx,DWORD PTR [edi+0x0],0x2c003bd
  439ed7:	cli    
  439ed8:	pop    edi
  439ed9:	push   0x46600c62
  439ede:	and    BYTE PTR gs:[edi+0x6b],bl
  439ee2:	jns    0x439ef2
  439ee4:	js     0x439f40
  439ee6:	je     0x439f10
  439ee8:	jb     0x439f28
  439eea:	js     0x439e99
  439eec:	add    edx,DWORD PTR [esi+0x6d676a02]
  439ef2:	push   ebp
  439ef3:	out    dx,al
  439ef4:	imul   eax,DWORD PTR [si-0x6c],0xffffffb4
  439ef9:	cdq    
  439efa:	pop    esi
  439efb:	or     esi,eax
  439efd:	(bad)  
  439efe:	push   edx
  439eff:	int    0xcd
  439f01:	pushf  
  439f02:	imul   edi,ebx,0xf1609ccc
  439f08:	sbb    ebp,edi
  439f0a:	leave  
  439f0b:	xchg   ebp,eax
  439f0c:	ficomp WORD PTR [eax-0x710f2f8d]
  439f12:	fs (bad) 
  439f15:	cwde   
  439f16:	(bad)  
  439f17:	out    0xe9,eax
  439f19:	pushf  
  439f1a:	pop    esp
  439f1b:	mov    ecx,0x94509bdc
  439f20:	mov    dh,0xfd
  439f22:	inc    eax
  439f23:	mov    ecx,0xb868ab0d
  439f28:	add    al,0xa2
  439f2a:	(bad)  
  439f2b:	int    0x7
  439f2d:	fwait
  439f2e:	push   0x739e2ca6
  439f33:	jge    0x439f6b
  439f35:	mov    ds:0x80940050,eax
  439f3a:	add    al,0x3d
  439f3c:	xchg   BYTE PTR [esi+ebx*4],bh
  439f3f:	jae    0x439fb2
  439f41:	imul   ebx,DWORD PTR [edx-0x65b27c96],0x53
  439f48:	jl     0x439f95
  439f4a:	call   0x9791:0xfd19785e
  439f51:	dec    ecx
  439f52:	(bad)
  439f56:	nop
  439f57:	ins    BYTE PTR es:[edi],dx
  439f58:	xchg   DWORD PTR [ebx],ebp
  439f5a:	mov    ebx,0x896a4666
  439f5f:	push   eax
  439f60:	xchg   esp,eax
  439f61:	mov    eax,ds:0x76264ffe
  439f66:	mov    al,ds:0xcf8a2762
  439f6b:	sub    eax,0x73957c52
  439f70:	inc    ebx
  439f71:	add    bh,ah
  439f73:	add    ecx,DWORD PTR [esi+0x3]
  439f76:	and    ch,BYTE PTR [eax-0x57b85d04]
  439f7c:	iret   
  439f7d:	xchg   ebp,eax
  439f7e:	inc    ebp
  439f7f:	test   eax,0x1ac067b
  439f84:	aad    0x94
  439f86:	dec    ecx
  439f87:	mov    ds:0xa61b94ca,al
  439f8c:	out    dx,eax
  439f8d:	xchg   ebp,eax
  439f8e:	inc    ebp
  439f8f:	test   eax,0xfff6065b
  439f94:	loope  0x439f31
  439f96:	adc    eax,0x3a9bbe8f
  439f9b:	lods   al,BYTE PTR ds:[esi]
  439f9c:	add    BYTE PTR [ecx+0x3ba0079b],dh
  439fa2:	push   es
  439fa3:	push   0x3927103
  439fa8:	mov    ds:0xab2a9ba7,eax
  439fad:	mov    cl,0x9b
  439faf:	add    eax,0xdf92ac90
  439fb4:	lods   al,BYTE PTR ds:[esi]
  439fb5:	adc    eax,DWORD PTR [esi]
  439fb7:	dec    ebx
  439fb8:	jmp    DWORD PTR [ebp-0x69]
  439fbb:	aam    0x8f
  439fbd:	xchg   BYTE PTR [edi-0x64964246],bl
  439fc3:	retf   
  439fc4:	add    edi,ebx
  439fc6:	cld    
  439fc7:	nop
  439fc8:	stos   BYTE PTR es:[edi],al
  439fc9:	jns    0x439f57
  439fcb:	mov    ebx,0xbabf6fa2
  439fd0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  439fd1:	ins    BYTE PTR es:[edi],dx
  439fd2:	mov    eax,ds:0x1d103e6
  439fd7:	mov    ch,0x9e
  439fd9:	ds xchg ebp,eax
  439fdb:	cwde   
  439fdc:	sahf   
  439fdd:	push   edi
  439fde:	xchg   edi,eax
  439fdf:	xchg   esp,eax
  439fe0:	sahf   
  439fe1:	pop    eax
  439fe2:	mov    WORD PTR [ecx-0x1952d56f],ss
  439fe8:	add    ebp,DWORD PTR [edi]
  439fea:	add    DWORD PTR [eax],eax
  439fec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  439fed:	pop    es
  439fee:	mov    ds:0x920a9c69,eax
  439ff3:	bound  esp,QWORD PTR [ecx+0x4f]
  439ff6:	add    eax,0xbf9290f9
  439ffb:	bound  ebx,QWORD PTR [ebp+0x3e]
  439ffe:	cwde   
  439fff:	imul   edx,DWORD PTR [eax+eax*1+0x35],0xffffffa2
  43a004:	dec    ecx
  43a005:	dec    eax
  43a006:	xor    eax,0x24e41a2
  43a00b:	scas   eax,DWORD PTR es:[edi]
  43a00c:	push   0x6299fd45
  43a011:	sbb    al,0x37
  43a013:	xchg   edx,eax
  43a014:	imul   ebx,DWORD PTR ds:0xf669808,0x9dffb02c
  43a01e:	call   0x4da0:0xf12b6cbd
  43a025:	or     al,0xf9
  43a027:	mov    al,ds:0x501f54f
  43a02c:	stc    
  43a02d:	jge    0x439fbb
  43a02f:	scas   eax,DWORD PTR es:[edi]
  43a030:	push   ebx
  43a031:	sbb    cl,BYTE PTR [edi-0x5e]
  43a034:	jae    0x439fde
  43a036:	cmp    dl,BYTE PTR [ecx-0x3bc3289a]
  43a03c:	push   0x6b982ac7
  43a041:	les    eax,FWORD PTR [edx-0x5e]
  43a044:	ins    BYTE PTR es:[edi],dx
  43a045:	mov    edx,0xb0699810
  43a04a:	xor    eax,DWORD PTR ds:0xb2cca2f9
  43a050:	dec    ecx
  43a051:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43a052:	sbb    edx,esp
  43a054:	sub    eax,0x6b98fbd7
  43a059:	jmp    0xac43b1f5
  43a05e:	setle  BYTE PTR [ebx-0x4a]
  43a062:	sbb    BYTE PTR [edi+0xa000063],dl
  43a068:	push   0x6c
  43a06a:	inc    ebp
  43a06b:	adc    eax,0xee002301
  43a070:	push   0x61f9725a
  43a075:	jo     0x43a0dc
  43a077:	out    dx,eax
  43a078:	cmp    eax,0xfdebfff9
  43a07d:	ds gs loope 0x43a0cc
  43a081:	jb     0x43a0f6
  43a083:	loope  0x43a0de
  43a085:	dec    bp
  43a087:	loopne 0x43a0f1
  43a089:	imul   ebp,DWORD PTR [ecx-0x22],0x6b
  43a08d:	stc    
  43a08e:	push   DWORD PTR [esi-0x2d9ab606]
  43a094:	gs ins BYTE PTR es:[edi],dx
  43a096:	je     0x43a038
  43a098:	push   0x3c
  43a09a:	ins    BYTE PTR es:[edi],dx
  43a09b:	pushf  
  43a09c:	imul   ebp,DWORD PTR [ecx+eax*2+0x2d],0x0
  43a0a1:	pop    DWORD PTR [eax]
  43a0a3:	jno    0x43a0fe
  43a0a5:	pop    edi
  43a0a6:	inc    esi
  43a0a7:	das    
  43a0a8:	pop    ebp
  43a0a9:	lea    bp,gs:[edx+0x68]
  43a0ae:	arpl   WORD PTR [edx+0x720152fc],ax
  43a0b4:	pop    ecx
  43a0b5:	ins    DWORD PTR es:[edi],dx
  43a0b6:	dec    ebp
  43a0b7:	loopne 0x43a123
  43a0b9:	ins    BYTE PTR es:[edi],dx
  43a0ba:	popa   
  43a0bb:	rcr    BYTE PTR [eax+0x49],cl
  43a0be:	outs   dx,DWORD PTR ds:[esi]
  43a0bf:	fdivp  st(7),st
  43a0c1:	fwait
  43a0c2:	add    BYTE PTR [ecx],dh
  43a0c4:	pop    ecx
  43a0c5:	pop    edi
  43a0c6:	push   edi
  43a0c7:	les    esp,FWORD PTR [ecx+0x5d]
  43a0ca:	outs   dx,DWORD PTR ds:[esi]
  43a0cb:	add    BYTE PTR [edx],ah
  43a0cd:	push   eax
  43a0ce:	imul   ebp,DWORD PTR [edi-0x32],0x46
  43a0d2:	stc    
  43a0d3:	dec    ebx
  43a0d5:	(bad)  
  43a0d6:	cmp    ah,BYTE PTR [ecx+0x29]
  43a0d9:	fs push eax
  43a0db:	imul   ebx,DWORD PTR [ebx],0x9477685c
  43a0e1:	dec    ecx
  43a0e2:	xchg   ebx,eax
  43a0e3:	push   0x1afd4a37
  43a0e8:	xchg   esp,eax
  43a0e9:	push   esi
  43a0ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43a0eb:	imul   edi,DWORD PTR [eax],0x6a
  43a0ee:	pushf  
  43a0ef:	imul   edi,DWORD PTR [eax],0x264f967a
  43a0f5:	and    BYTE PTR [ecx+0x1cb943e],0x4e
  43a0fc:	icebp  
  43a0fd:	mov    edx,0xb5086c94
  43a102:	xchg   ecx,eax
  43a103:	cmp    al,0xe8
  43a105:	mov    eax,0x19cb6c92
  43a10a:	std    
  43a10b:	arpl   WORD PTR [esi-0x6945f19],dx
  43a111:	mov    eax,0xb8d76292
  43a116:	xchg   ebx,eax
  43a117:	jae    0x43a0e2
  43a119:	out    0xa0,eax
  43a11b:	dec    DWORD PTR [ebx-0x7f]
  43a11e:	add    al,0x44
  43a120:	mov    ecx,0xcd43b8f3
  43a125:	(bad)  
  43a126:	fwait
  43a127:	data16 shl ch,0xb3
  43a12b:	ins    DWORD PTR es:[edi],dx
  43a12c:	mov    ebx,0xffbcf6
  43a131:	and    esp,DWORD PTR [ebp-0x44ebbfd]
  43a137:	(bad)  
  43a138:	imul   edi,DWORD PTR [ebx+0x49],0xffffff93
  43a13c:	push   0xe7fd5877
  43a141:	xchg   esi,eax
  43a142:	inc    esi
  43a143:	cwde   
  43a144:	data16 xor BYTE PTR [esi],0x95
  43a148:	inc    ebx
  43a149:	jns    0x43a191
  43a14b:	pushf  
  43a14c:	jae    0x43a1c9
  43a14e:	dec    ecx
  43a14f:	std    
  43a150:	xchg   esi,eax
  43a151:	xchg   esp,eax
  43a152:	push   ebp
  43a153:	mov    ds:0xb65d4961,al
  43a158:	cmp    al,0x3c
  43a15a:	add    BYTE PTR [eax-0x6b4fc861],dl
  43a160:	mov    al,ds:0x3e6ab60
  43a165:	je     0x43a168
  43a167:	mov    ds:0x7bbf27a6,al
  43a16c:	xchg   ebp,eax
  43a16d:	cmp    BYTE PTR [ebx-0x70d34c8c],dl
  43a173:	out    0x3,al
  43a175:	add    DWORD PTR [eax],eax
  43a177:	mov    ds:0x4fa9f5a6,eax
  43a17c:	mov    ds:0xb45191f7,al
  43a181:	icebp  
  43a182:	xchg   ecx,eax
  43a183:	inc    ebp
  43a184:	ret    
  43a185:	jnp    0x43a189
  43a187:	inc    esp
  43a188:	push   es
  43a189:	loop   0x43a126
  43a18b:	push   edx
  43a18c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43a18d:	retf   0x438d
  43a190:	enter  0xa0,0xf5
  43a194:	add    eax,0x439bc400
  43a199:	popf   
  43a19a:	ficomp WORD PTR [ebx-0x66156aeb]
  43a1a0:	add    eax,ebx
  43a1a2:	inc    ebx
  43a1a3:	add    al,ch
  43a1a5:	add    dl,ch
  43a1a7:	fwait
  43a1a8:	adc    cl,al
  43a1aa:	jo     0x43a167
  43a1ac:	inc    BYTE PTR [ebx]
  43a1ae:	jns    0x43a1ae
  43a1b0:	push   ss
  43a1b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43a1b2:	mov    dh,0x95
  43a1b4:	and    esp,DWORD PTR [edi-0x56f87258]
  43a1ba:	jbe    0x43a165
  43a1bc:	out    0x3,al
  43a1be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43a1bf:	jmp    DWORD PTR [ecx-0x3d42785a]
  43a1c5:	call   0x9c81:0xa2b99e6b
  43a1cc:	stos   BYTE PTR es:[edi],al
  43a1cd:	mov    ds:0x3e69f67,al
  43a1d2:	sbb    bh,bh
  43a1d4:	call   FWORD PTR [ecx-0x4bc371ce]
  43a1da:	sub    DWORD PTR [ebp-0x66f86498],edx
  43a1e0:	ins    BYTE PTR es:[edi],dx
  43a1e1:	jmp    0xbb41577d
  43a1e6:	repnz mov al,ds:0x9f0b9a66
  43a1ec:	ins    DWORD PTR es:[edi],dx
  43a1ed:	stos   BYTE PTR es:[edi],al
  43a1ee:	or     esp,DWORD PTR [ebx-0x76258594]
  43a1f4:	push   eax
  43a1f5:	jmp    0x9541a691
  43a1fa:	add    BYTE PTR [ecx],ch
  43a1fc:	mov    ds:0xa2345a69,al
  43a201:	jae    0x43a247
  43a203:	push   ebp
  43a204:	sahf   
  43a205:	ins    BYTE PTR es:[edi],dx
  43a206:	pop    edx
  43a207:	xor    DWORD PTR [eax-0x768169e],esp
  43a20d:	(bad)  
  43a20e:	sub    eax,0x483c8d3d
  43a213:	or     BYTE PTR [ebp+0x12d3b72],cl
  43a219:	stc    
  43a21a:	or     BYTE PTR [ecx+0x5c1d62bf],bl
  43a220:	(bad)  
  43a221:	jmp    DWORD PTR [ebp-0x67]
  43a224:	mov    edi,0x90fd1d62
  43a229:	arpl   WORD PTR [eax],cx
  43a22b:	or     al,0x9e
  43a22d:	dec    ebp
  43a22e:	or     al,0xf7
  43a230:	mov    edi,?
  43a232:	out    dx,al
  43a233:	xchg   edi,eax
  43a234:	ret    0xe62
  43a237:	stc    
  43a238:	xchg   esi,eax
  43a239:	dec    edi
  43a23a:	or     BYTE PTR [ecx],dh
  43a23c:	xchg   edi,eax
  43a23d:	jae    0x43a228
  43a23f:	xchg   edi,eax
  43a240:	(bad)  
  43a242:	lods   eax,DWORD PTR ds:[esi]
  43a243:	daa    
  43a244:	sahf   
  43a245:	imul   esp,DWORD PTR [eax-0x2a8d6ee7],0x6c9ddb
  43a24f:	(bad)  
  43a250:	push   0xfced7068
  43a255:	lea    eax,[eax]
  43a257:	sub    DWORD PTR [eax+0x5f],ebx
  43a25a:	inc    esi
  43a25b:	subps  xmm4,XMMWORD PTR [esi+0x65]
  43a25f:	add    BYTE PTR ds:0xec63686f,cl
  43a265:	cld    
  43a266:	mov    WORD PTR [eax],es
  43a268:	jmp    0x318801c4
  43a26d:	pop    edx
  43a26e:	dec    ecx
  43a26f:	jb     0x43a273
  43a271:	pop    esi
  43a272:	push   eax
  43a273:	add    BYTE PTR ds:0x19654afe,ch
  43a279:	ds pop edx
  43a27b:	jo     0x43a286
  43a27d:	cdq    
  43a27e:	push   0x65
  43a280:	jge    0x43a286
  43a282:	mov    al,BYTE PTR [ecx]
  43a284:	mov    edx,0xd4576ca9
  43a289:	sahf   
  43a28a:	pop    esp
  43a28b:	outs   dx,DWORD PTR ds:[esi]
  43a28c:	retf   0x3bc8
  43a28f:	add    BYTE PTR [ecx-0x259ab5fe],ah
  43a295:	popf   
  43a296:	imul   esi,DWORD PTR [eax+ecx*8-0x6e],0x3b
  43a29b:	ins    BYTE PTR es:[edi],dx
  43a29c:	fcom   QWORD PTR [ebx-0x3a8aba95]
  43a2a2:	clc    
  43a2a3:	inc    DWORD PTR [eax-0x669ac0fb]
  43a2a9:	rcr    DWORD PTR [ebp+0x73],0x8e
  43a2ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43a2ae:	pop    edi
  43a2af:	mov    al,BYTE PTR gs:[eax+ecx*4]
  43a2b3:	add    DWORD PTR [edx-0x57],edi
  43a2b6:	ins    BYTE PTR es:[edi],dx
  43a2b7:	push   ebp
  43a2b8:	sbb    eax,0x987459a8
  43a2bd:	mov    dl,0x5f
  43a2bf:	outs   dx,BYTE PTR ds:[esi]
  43a2c0:	std    
  43a2c1:	add    edx,DWORD PTR [ecx+0x1]
  43a2c4:	add    BYTE PTR [edx],bh
  43a2c6:	test   eax,0xcc944d6c
  43a2cb:	lea    ebp,[ebp+esi*2-0x3a]
  43a2cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43a2d0:	ds xchg esp,eax
  43a2d2:	and    eax,0xc57242fd
  43a2d7:	lods   al,BYTE PTR ds:[esi]
  43a2d8:	pop    esi
  43a2d9:	ins    DWORD PTR es:[edi],dx
  43a2da:	(bad)  
  43a2db:	nop
  43a2dc:	call   ebx
  43a2de:	pop    edi
  43a2df:	add    al,0x41
  43a2e1:	xor    DWORD PTR [ebp-0x7acd994f],ebx
  43a2e7:	cdq    
  43a2e8:	jo     0x43a27e
  43a2ea:	xchg   edx,eax
  43a2eb:	dec    BYTE PTR [ecx+edi*1+0x7f]
  43a2ef:	mov    eax,ds:0x8e7a314a
  43a2f4:	pop    esi
  43a2f5:	cmp    eax,DWORD PTR [eax+esi*4-0x6673d69a]
  43a2fc:	jb     0x43a306
  43a2fe:	xchg   edi,eax
  43a2ff:	cld    
  43a300:	ret    
  43a301:	xchg   esi,eax
  43a302:	cmp    ah,BYTE PTR [ecx-0x65af148d]
  43a308:	arpl   bx,bp
  43a30a:	pop    esi
  43a30b:	shr    BYTE PTR [eax+0x2],0x47
  43a30f:	mov    bl,0xff
  43a311:	imul   ebx,DWORD PTR [edi-0x3],0x40
  43a315:	stc    
  43a316:	xor    eax,0x4dea66b3
  43a31b:	fwait
  43a31c:	jo     0x43a2fe
  43a31e:	ds call 0x972b:0xfce9e360
  43a326:	ss xchg ebp,eax
  43a328:	imul   eax,DWORD PTR [eax],0x419306b0
  43a32e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43a32f:	(bad)  
  43a330:	cdq    
  43a331:	dec    edi
  43a332:	mov    ebx,0x94739a10
  43a337:	mov    ?,esp
  43a339:	dec    ebx
  43a33a:	stos   DWORD PTR es:[edi],eax
  43a33b:	or     BYTE PTR [eax-0x5cf77eba],ch
  43a341:	bound  esp,QWORD PTR [ebx+0x0]
  43a344:	out    0x3,eax
  43a346:	pop    ss
  43a347:	add    DWORD PTR [edx-0x3dab785a],esp
  43a34d:	xchg   ebx,eax
  43a34e:	inc    esp
  43a34f:	imul   edi,DWORD PTR [ecx-0x18888359],0xa6009c03
  43a359:	fwait
  43a35a:	cmp    dh,BYTE PTR [edx-0x65]
  43a35d:	pushf  
  43a35e:	pop    esp
  43a35f:	gs mov esp,0x9ffecbb4
  43a365:	add    dl,BYTE PTR [ebp+0x65]
  43a368:	xchg   ebx,eax
  43a369:	mov    al,0x33
  43a36b:	sbb    DWORD PTR gs:[edi-0x588696bc],0x3c
  43a373:	ja     0x43a35c
  43a375:	add    edi,eax
  43a377:	add    BYTE PTR [edx-0x7fa8d85a],ah
  43a37d:	popf   
  43a37e:	imul   DWORD PTR [ebp+0x72]
  43a381:	mov    bh,0xf3
  43a383:	jb     0x43a3d1
  43a385:	mov    ds:0x9d5550f7,eax
  43a38a:	fsub   DWORD PTR [ebx+0x56]
  43a38d:	xchg   ecx,eax
  43a38e:	add    dl,bl
  43a390:	fs out 0x3,eax
  43a393:	inc    ecx
  43a394:	add    DWORD PTR [esi+ebx*4],ebp
  43a397:	test   DWORD PTR [ebx+0x44],0x3300e69e
  43a39e:	add    ah,cl
  43a3a0:	arpl   WORD PTR [ecx],di
  43a3a2:	test   al,0xde
  43a3a4:	arpl   WORD PTR [esi],dx
  43a3a6:	xchg   ecx,eax
  43a3a7:	loop   0x43a40e
  43a3a9:	add    al,0xb5
  43a3ab:	cmp    edi,esi
  43a3ad:	pop    ebp
  43a3ae:	add    dl,ch
  43a3b0:	arpl   WORD PTR [ebx],dx
  43a3b2:	mov    bh,0xb8
  43a3b4:	arpl   bp,si
  43a3b6:	mov    esp,0xa1046ac1
  43a3bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43a3bc:	inc    edi
  43a3bd:	add    BYTE PTR [edi],al
  43a3bf:	cmp    ch,BYTE PTR [ecx+0x6e]
  43a3c2:	cld    
  43a3c3:	ss jb  0x43a42d
  43a3c6:	(bad)  
  43a3c7:	and    DWORD PTR [ecx+0x0],edx
  43a3ca:	xchg   ebx,eax
  43a3cb:	xchg   esi,eax
  43a3cc:	dec    eax
  43a3cd:	lds    ecx,FWORD PTR ds:0x6372
  43a3d2:	pushf  
  43a3d3:	xor    ch,BYTE PTR [eax+0x73]
  43a3d6:	mov    al,0xb
  43a3d8:	arpl   WORD PTR [ebx-0x17],bp
  43a3db:	xchg   edi,eax
  43a3dc:	xor    eax,0x6d3098fe
  43a3e1:	je     0x43a378
  43a3e3:	das    
  43a3e4:	ins    BYTE PTR es:[edi],dx
  43a3e5:	arpl   WORD PTR [eax-0x659cb505],cx
  43a3eb:	and    al,0x5f
  43a3ed:	popa   
  43a3ee:	mov    eax,gs
  43a3f0:	std    
  43a3f1:	clc    
  43a3f2:	mov    eax,0x633f9600
  43a3f7:	jge    0x43a3db
  43a3f9:	bound  ebp,QWORD PTR [edx+0x74]
  43a3fc:	fidiv  WORD PTR [ecx+0x63]
  43a3ff:	test   BYTE PTR [eax+ebp*2+0x73],dl
  43a403:	jg     0x43a428
  43a405:	std    
  43a406:	clc    
  43a407:	aas    
  43a408:	cdq    
  43a409:	aas    
  43a40a:	arpl   WORD PTR [ebp+0x3d],dx
  43a40d:	bound  ebp,QWORD PTR [edx+0x5c]
  43a410:	sub    esi,DWORD PTR [ecx+0x5f]
  43a413:	push   ebp
  43a414:	xor    eax,0x98dbf8fd
  43a419:	aas    
  43a41a:	arpl   WORD PTR ds:0x3a5f6953,si
  43a420:	sub    eax,DWORD PTR [edi+0x5f]
  43a423:	cmp    al,0xf5
  43a425:	dec    edi
  43a426:	add    BYTE PTR [ebp+0x1a774b9a],dl
  43a42c:	and    al,0x62
  43a42e:	imul   edi,DWORD PTR [ecx],0xfffffff9
  43a431:	push   0x5f
  43a433:	cld    
  43a434:	hlt    
  43a435:	jo     0x43a49a
  43a437:	add    BYTE PTR [edi],bl
  43a439:	xchg   esi,eax
  43a43a:	inc    ecx
  43a43b:	outs   dx,BYTE PTR ds:[esi]
  43a43c:	xchg   ebx,eax
  43a43d:	cdq    
  43a43e:	dec    edi
  43a43f:	add    BYTE PTR [edx-0x638dabfa],dl
  43a445:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43a446:	arpl   WORD PTR [eax-0x16],dx
  43a449:	nop
  43a44a:	ins    DWORD PTR es:[edi],dx
  43a44b:	jo     0x43a475
  43a44d:	mov    al,ds:0x89407566
  43a452:	clc    
  43a453:	jmp    DWORD PTR [eax]
  43a455:	add    al,0x3f
  43a457:	add    BYTE PTR gs:[ecx],ah
  43a45a:	mov    eax,0xbc206e5d
  43a45f:	ins    BYTE PTR es:[edi],dx
  43a460:	fdiv   DWORD PTR gs:[edx+0x101635d]
  43a467:	inc    ebx
  43a468:	add    edx,esi
  43a46a:	lahf   
  43a46b:	ins    BYTE PTR es:[edi],dx
  43a46c:	dec    ebp
  43a46d:	adc    BYTE PTR [edi+0x2b7006d],dl
  43a473:	inc    ebp
  43a474:	sub    edx,DWORD PTR gs:[eax-0x67ef8bbf]
  43a47b:	ds jb  0x43a488
  43a47e:	cwde   
  43a47f:	dec    eax
  43a480:	outs   dx,DWORD PTR ds:[esi]
  43a481:	adc    al,0x9a
  43a483:	ins    BYTE PTR es:[edi],dx
  43a484:	add    BYTE PTR [ebp+0x6],dl
  43a487:	inc    edi
  43a488:	jo     0x43a45a
  43a48a:	xchg   esi,eax
  43a48b:	cmp    al,0x65
  43a48d:	ficomp WORD PTR [ebx-0x50329094]
  43a493:	clc    
  43a494:	inc    edi
  43a496:	add    eax,0xb3a1653f
  43a49b:	ins    DWORD PTR es:[edi],dx
  43a49c:	bound  ebp,QWORD PTR [eax+0x3d7566a1]
  43a4a2:	add    BYTE PTR [esi+0x6ca1ae02],cl
  43a4a8:	dec    ebx
  43a4a9:	nop
  43a4aa:	lea    ebx,[edx+0x6f]
  43a4ad:	mov    WORD PTR [edx+0x1d94535c],ss
  43a4b3:	mov    ds:0xfce9b173,eax
  43a4b8:	dec    ebp
  43a4b9:	xchg   ebp,eax
  43a4ba:	sub    bl,BYTE PTR [edi+0x4c90073]
  43a4c0:	xchg   esi,eax
  43a4c1:	jb     0x43a520
  43a4c3:	std    
  43a4c4:	lahf   
  43a4c5:	push   0x5d
  43a4c7:	and    eax,0xaa957e04
  43a4cc:	lahf   
  43a4cd:	jae    0x43a52f
  43a4cf:	rcl    DWORD PTR [edx-0x47328a9e],1
  43a4d5:	bound  esp,QWORD PTR [edi-0x42]
  43a4d8:	mov    BYTE PTR [eax+0x64],ch
  43a4db:	jmp    0x97da01dc
  43a4e0:	lahf   
  43a4e1:	pusha  
  43a4e2:	cmp    eax,0x466288b6
  43a4e7:	xchg   edx,eax
  43a4e8:	fwait
  43a4e9:	imul   edi,DWORD PTR [eax],0x314a8d92
  43a4ef:	xchg   esi,eax
  43a4f0:	xchg   ecx,eax
  43a4f1:	pop    esi
  43a4f2:	cmp    ecx,DWORD PTR [ebp+ebp*4+0x435abff]
  43a4f9:	inc    edi
  43a4fa:	daa    
  43a4fb:	xchg   edi,eax
  43a4fc:	lahf   
  43a4fd:	pop    esp
  43a4fe:	and    BYTE PTR [edi+edx*4-0x28ef791],ah
  43a505:	xor    eax,0x66929996
  43a50a:	repnz pop ebp
  43a50c:	scas   eax,DWORD PTR es:[edi]
  43a50d:	jmp    0x9470:0x9745
  43a513:	(bad)  
  43a514:	add    eax,DWORD PTR [ebx-0x1b]
  43a517:	push   esp
  43a518:	popf   
  43a519:	imul   eax,esi,0x4c
  43a51c:	mov    ds:0xfd7c9473,eax
  43a521:	inc    esi
  43a522:	add    dl,al
  43a524:	cmp    eax,0x44c76d99
  43a529:	mov    ds:0xc00e673,eax
  43a52e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43a52f:	mov    DWORD PTR [eax],0x6ed804a6
  43a535:	or     BYTE PTR [ecx-0x60fd9b2a],dl
  43a53b:	and    edi,ebx
  43a53d:	pop    edx
  43a53e:	add    edx,ebp
  43a540:	gs repz mov al,0x7a
  43a544:	push   0xb
  43a546:	cdq    
  43a547:	test   BYTE PTR [ecx-0x7],cl
  43a54a:	mov    eax,ds:0x619006c
  43a54f:	fs imul edx,esi,0xffffff8f
  43a553:	pop    esi
  43a554:	gs (bad) 
  43a556:	xchg   esp,eax
  43a557:	dec    edx
  43a558:	arpl   sp,ax
  43a55a:	mov    al,0xe3
  43a55c:	cli    
  43a55d:	cmp    BYTE PTR [esi+edx*2],al
  43a560:	imul   ecx,ebx,0xc6656197
  43a566:	(bad)  
  43a567:	retf   
  43a568:	cli    
  43a569:	sti    
  43a56a:	add    eax,0x998c704d
  43a56f:	imul   ecx,DWORD PTR fs:[ecx-0x498cc361],0x80744a8f
  43a57a:	cwde   
  43a57b:	sub    eax,0xe203e753
  43a580:	std    
  43a581:	xchg   ebp,eax
  43a582:	sahf   
  43a583:	pop    es
  43a584:	push   ebp
  43a585:	jg     0x43a51c
  43a587:	add    dh,dh
  43a589:	pop    edi
  43a58a:	cmp    DWORD PTR [edi-0x6fb1920a],0xffffffec
  43a591:	jo     0x43a57a
  43a593:	add    ebx,edx
  43a595:	add    BYTE PTR [esi],ah
  43a597:	cwde   
  43a598:	cld    
  43a599:	ins    DWORD PTR es:[edi],dx
  43a59a:	inc    esp
  43a59b:	shl    dh,0x6d
  43a59e:	dec    esi
  43a59f:	nop
  43a5a0:	in     al,dx
  43a5a1:	jo     0x43a58a
  43a5a3:	add    edi,DWORD PTR [edi+edi*8+0x6e2b2dff]
  43a5aa:	push   eax
  43a5ab:	cmp    ebx,DWORD PTR ds:0x211a635d
  43a5b1:	push   ecx
  43a5b2:	pmuludq mm5,QWORD PTR [bx+si+0x71]
  43a5b7:	cmp    al,BYTE PTR [ebx+ebx*2]
  43a5ba:	je     0x43a5bc
  43a5bc:	std    
  43a5bd:	addr16 add cl,bh
  43a5c0:	xchg   edi,eax
  43a5c1:	cmp    ebp,DWORD PTR [esi+0x4]
  43a5c4:	aaa    
  43a5c5:	outs   dx,BYTE PTR ds:[esi]
  43a5c6:	arpl   WORD PTR [esi],bx
  43a5c8:	das    
  43a5c9:	push   0x4d24fe64
  43a5ce:	je     0x43a598
  43a5d0:	or     esp,DWORD PTR [ebx+0x69]
  43a5d3:	iret   
  43a5d4:	and    al,0xfa
  43a5d6:	clc    
  43a5d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43a5d8:	xchg   edi,eax
  43a5d9:	cmp    ebp,DWORD PTR [esi+edi*4+0x8]
  43a5dd:	pop    edi
  43a5de:	push   ecx
  43a5df:	sar    ch,1
  43a5e1:	pop    ebp
  43a5e2:	imul   esi,DWORD PTR [esi-0x42a091f8],0xe96a692e
  43a5ec:	add    BYTE PTR [edi+0x1ab9fda2],dl
  43a5f2:	outs   dx,BYTE PTR ds:[esi]
  43a5f3:	push   eax
  43a5f4:	fwait
  43a5f5:	or     al,0x5d
  43a5f7:	arpl   WORD PTR [edx+0x7f675100],bx
  43a5fd:	add    ebp,DWORD PTR [ecx+0x71]
  43a600:	call   0x672c:0x90745b0b
  43a607:	add    BYTE PTR [edi-0x7b91c469],dl
  43a60d:	ss ins DWORD PTR es:[edi],dx
  43a60f:	arpl   WORD PTR ds:0x55656c35,bp
  43a615:	or     ebp,DWORD PTR [ecx+0x51]
  43a618:	jmp    0x2a43ccb4
  43a61d:	add    BYTE PTR [edx+0x6e],bl
  43a620:	add    BYTE PTR [ecx-0x709a906f],ah
  43a626:	test   eax,0x378fff8
  43a62b:	aas    
  43a62c:	mov    DWORD PTR gs:[eax-0x44668ca7],edi
  43a633:	data16 jo 0x43a5be
  43a636:	nop
  43a637:	inc    ecx
  43a638:	outs   dx,BYTE PTR ds:[esi]
  43a639:	fwait
  43a63a:	xchg   ecx,eax
  43a63b:	clc    
  43a63c:	call   DWORD PTR [ecx-0x3]
  43a63f:	cmp    ch,BYTE PTR [eax-0x74]
  43a642:	mov    cs,WORD PTR [ebp+0x70]
  43a645:	or     eax,0xfd576aa0
  43a64a:	cld    
  43a64b:	sub    al,BYTE PTR [ecx]
  43a64d:	mov    edx,0x496c9f
  43a652:	into   
  43a653:	xchg   ecx,eax
  43a654:	dec    cx
  43a656:	jecxz  0x43a5f2
  43a658:	add    BYTE PTR [bp+si+0x4404],bh
  43a65d:	jb     0x43a62b
  43a65f:	mov    DWORD PTR [ecx+0x63],eax
  43a662:	ret    0xf892
  43a665:	dec    DWORD PTR [esi+0x286f53fe]
  43a66b:	xchg   ebx,eax
  43a66c:	popa   
  43a66d:	arpl   WORD PTR [edx],ax
  43a66f:	cdq    
  43a670:	pop    ebp
  43a671:	add    bh,ch
  43a673:	add    edi,DWORD PTR [edi]
  43a675:	or     DWORD PTR gs:[esi-0x6de086a3],esi
  43a67c:	pop    ecx
  43a67d:	jb     0x43a698
  43a67f:	scas   al,BYTE PTR es:[edi]
  43a680:	ins    BYTE PTR es:[edi],dx
  43a681:	popa   
  43a682:	sbb    DWORD PTR [eax+0x284fff8],esp
  43a688:	inc    ebp
  43a689:	popa   
  43a68a:	or     eax,0x196e61a7
  43a68f:	(bad)  
  43a690:	outs   dx,DWORD PTR ds:[esi]
  43a691:	push   eax
  43a692:	loop   0x43a629
  43a694:	data16 je 0x43a665
  43a697:	cld    
  43a698:	rol    BYTE PTR [ecx],cl
  43a69a:	xchg   esp,eax
  43a69b:	and    BYTE PTR [ebp-0x5fc812b0],cl
  43a6a1:	push   0xc1fce9e3
  43a6a6:	xchg   esi,eax
  43a6a7:	sbb    bl,BYTE PTR [edi-0x6dbf1c8d]
  43a6ad:	arpl   WORD PTR [ebx-0x38974bd2],si
  43a6b3:	jmp    0x9543aab4
  43a6b8:	push   ds
  43a6b9:	lahf   
  43a6ba:	jae    0x43a691
  43a6bc:	call   FWORD PTR [edx+eiz*2+0x6d910da7]
  43a6c3:	xchg   esp,eax
  43a6c4:	fld    DWORD PTR [ebx]
  43a6c6:	inc    ecx
  43a6c7:	jns    0x43a6b6
  43a6c9:	mov    ebp,0x8dfa756b
  43a6ce:	dec    ebx
  43a6cf:	jae    0x43a6c8
  43a6d1:	cdq    
  43a6d2:	push   eax
  43a6d3:	xchg   esp,eax
  43a6d4:	lds    eax,FWORD PTR [ebx]
  43a6d6:	inc    ecx
  43a6d7:	jns    0x43a6a6
  43a6d9:	lods   al,BYTE PTR ds:[esi]
  43a6da:	pop    esi
  43a6db:	les    dx,DWORD PTR [edx+0x4659473]
  43a6e2:	inc    ecx
  43a6e3:	jno    0x43a69a
  43a6e5:	test   eax,0x91bd4266
  43a6ea:	jo     0x43a752
  43a6ec:	les    ebx,FWORD PTR [ebp-0x2896b8d]
  43a6f2:	inc    ebx
  43a6f3:	sub    eax,0x285e8c9a
  43a6f8:	mov    dl,BYTE PTR [edx+ecx*2+0x5e8d9a31]
  43a6ff:	cmp    edi,DWORD PTR [ecx+ebp*4-0x1]
  43a703:	(bad)  
  43a706:	dec    edx
  43a707:	pop    es
  43a708:	jg     0x43a6b3
  43a70a:	pop    esi
  43a70b:	std    
  43a70c:	jne    0x43a6c9
  43a70e:	push   0x6b8f9506
  43a713:	add    BYTE PTR [ecx],al
  43a715:	push   eax
  43a716:	xchg   esp,eax
  43a717:	call   FWORD PTR [ebp+0x2a]
  43a71a:	mov    ds:0x465df100,al
  43a71f:	nop
  43a720:	lock add bh,bl
  43a723:	add    edi,ecx
  43a725:	popa   
  43a726:	aaa    
  43a727:	scas   al,BYTE PTR es:[edi]
  43a728:	mov    edx,0xea8f3372
  43a72d:	fs push ds
  43a72f:	lahf   
  43a730:	retf   0xe74f
  43a733:	add    esp,edi
  43a735:	push   ebx
  43a736:	sub    al,0xb2
  43a738:	xor    BYTE PTR [edx],0xc9
  43a73b:	lahf   
  43a73c:	mov    edi,0x1503e764
  43a741:	add    DWORD PTR [eax],esp
  43a743:	xchg   ecx,eax
  43a744:	les    ebx,FWORD PTR [ebp+0x13]
  43a747:	cwde   
  43a748:	pop    eax
  43a749:	data16 or cl,BYTE PTR [ebp-0x5fffac83]
  43a750:	add    esi,edi
  43a752:	mov    al,0x2
  43a754:	push   ebp
  43a755:	pop    ebp
  43a756:	(bad)  [edi-0x703d998a]
  43a75c:	jae    0x43a7b1
  43a75e:	rcr    BYTE PTR [edi+0x3baf6e3],0x99
  43a765:	ror    DWORD PTR [di+0x7236],1
  43a76a:	mov    bl,0xb0
  43a76c:	xor    bl,BYTE PTR [ebx+ebx*4-0x6c]
  43a770:	push   eax
  43a771:	ins    BYTE PTR es:[edi],dx
  43a772:	mov    ch,0x9a
  43a774:	sub    eax,0x379ab65f
  43a779:	dec    edi
  43a77a:	out    0x3,eax
  43a77c:	sar    bh,1
  43a77e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43a77f:	xchg   ecx,eax
  43a780:	add    BYTE PTR [edx],ch
  43a782:	jo     0x43a717
  43a784:	mov    esp,0xa2af6c36
  43a789:	add    BYTE PTR [ecx-0x69],ch
  43a78c:	mov    ds:0x84005ff9,al
  43a791:	xchg   edi,eax
  43a792:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43a793:	jmp    FWORD PTR [ecx+0x5d706f25]
  43a799:	push   edi
  43a79a:	push   ebp
  43a79b:	outs   dx,DWORD PTR ds:[esi]
  43a79c:	push   esp
  43a79d:	pcmpgtb mm4,QWORD PTR [ebx+0x2a]
  43a7a1:	or     DWORD PTR [eax+0x74],ebp
  43a7a4:	inc    esp
  43a7a5:	or     BYTE PTR [edx+0x51],dh
  43a7a8:	jmp    0x2a436344
  43a7ad:	outs   dx,DWORD PTR es:[esi]
  43a7af:	jo     0x43a7ee
  43a7b1:	push   es
  43a7b2:	arpl   WORD PTR [esp+eax*2-0x9],bp
  43a7b6:	arpl   WORD PTR fs:[edx],bp
  43a7b9:	or     DWORD PTR [eax+0x74],ebp
  43a7bc:	add    al,0x18
  43a7be:	jb     0x43a7c0
  43a7c0:	pop    edx
  43a7c1:	xchg   edi,eax
  43a7c2:	xor    ebp,DWORD PTR [esi+0x10]
  43a7c5:	add    BYTE PTR [edx+0x3d],dh
  43a7c8:	sti    
  43a7c9:	xor    dl,BYTE PTR [edi+0x74]
  43a7cc:	add    al,0x48
  43a7ce:	push   edi
  43a7cf:	ins    DWORD PTR es:[edi],dx
  43a7d0:	add    DWORD PTR [eax+0x2629ffb2],ebx
  43a7d6:	outs   dx,DWORD PTR ds:[esi]
  43a7d7:	jo     0x43a7b6
  43a7d9:	xor    esp,DWORD PTR [ebx+0x6d]
  43a7dc:	aad    0x5
  43a7de:	imul   esi,DWORD PTR [edi-0x5f],0xe9686536
  43a7e5:	add    BYTE PTR [edi+0x25a9ffc8],dl
  43a7eb:	outs   dx,DWORD PTR ds:[esi]
  43a7ec:	jo     0x43a7a3
  43a7ee:	xorps  xmm5,XMMWORD PTR [ebp-0x3f]
  43a7f2:	add    edx,DWORD PTR [edi+0x74]
  43a7f5:	enter  0xef97,0xfe
  43a7f9:	mov    ch,0x7
  43a7fb:	arpl   WORD PTR [edx-0x47],bp
  43a7fe:	add    eax,0x48c5d69
  43a803:	gs push esp
  43a805:	jle    0x43a803
  43a807:	bound  ebp,QWORD PTR [edx+0x0]
  43a80a:	jge    0x43a80d
  43a80c:	dec    edi
  43a80d:	add    DWORD PTR [edx],esi
  43a80f:	xchg   esi,eax
  43a810:	ins    BYTE PTR es:[edi],dx
  43a811:	push   ebx
  43a812:	adc    al,0x95
  43a814:	dec    ebx
  43a815:	jne    0x43a826
  43a817:	ret    0x746d
  43a81a:	lds    esi,FWORD PTR [ecx+0x6a]
  43a81d:	imul   eax,ecx,0x49000073
  43a823:	sti    
  43a824:	inc    esi
  43a825:	jo     0x43a7f7
  43a827:	jb     0x43a87d
  43a829:	push   0x6459678f
  43a82e:	mov    eax,ds:0xdb656371
  43a833:	cld    
  43a834:	push   edi
  43a835:	add    DWORD PTR [edx+0x67],esi
  43a838:	je     0x43a88d
  43a83a:	test   BYTE PTR [eax+0x4b],ch
  43a83d:	jne    0x43a7de
  43a83f:	cmp    ebp,DWORD PTR [ebp+0x74]
  43a842:	xchg   ebp,eax
  43a843:	jno    0x43a8af
  43a845:	imul   eax,DWORD PTR [ecx+0x6f3b73],0x746f10
  43a84f:	mov    bh,0xfb
  43a851:	ds add DWORD PTR gs:[ebp+0x67],ecx
  43a856:	imul   edx,DWORD PTR [eax-0x1c91be8e],0x71
  43a85d:	push   0x6d
  43a85f:	fsubr  QWORD PTR [ecx+eiz*2+0x6f]
  43a863:	fild   DWORD PTR [eax]
  43a865:	jl     0x43a867
  43a867:	imul   ebx,DWORD PTR cs:[ebp+0x61],0x11
  43a86c:	push   0x5dda7250
  43a871:	pop    ebp
  43a872:	jae    0x43a872
  43a874:	cmp    ebp,DWORD PTR [ebx+0x55]
  43a877:	(bad)  
  43a878:	addr16 push 0x57
  43a87b:	mov    ebp,0xf9018f00
  43a880:	jno    0x43a8e9
  43a882:	imul   edx,DWORD PTR [esp+edx*4-0x7fd9af94],0x76
  43a88a:	add    BYTE PTR [di+0x6365],al
  43a88f:	loop   0x43a819
  43a891:	push   0xfc92f973
  43a896:	sbb    BYTE PTR [eax+ebp*4+0x56e96660],dl
  43a89d:	js     0x43a8f3
  43a89f:	sti    
  43a8a0:	dec    esi
  43a8a1:	addr16 push 0xffffffc4
  43a8a4:	push   edi
  43a8a5:	imul   esi,DWORD PTR [edx-0x13],0x35
  43a8a9:	addr16 popa 
  43a8ab:	mov    ecx,0xd20436
  43a8b0:	xchg   esp,eax
  43a8b1:	es jb  0x43a92b
  43a8b4:	les    esi,FWORD PTR ds:0x40c66356
  43a8ba:	data16 ja 0x43a884
  43a8bd:	adc    BYTE PTR [ebp+0x6a],ah
  43a8c0:	mov    ch,0xd
  43a8c2:	ja     0x43a932
  43a8c4:	mov    ecx,0x94c30432
  43a8c9:	es jb  0x43a943
  43a8cc:	test   ch,dh
  43a8ce:	inc    ebp
  43a8cf:	arpl   WORD PTR [eax+0x6477672e],ax
  43a8d5:	or     BYTE PTR [edx+0x5f],dh
  43a8d8:	imul   ebp,ecx,0xa694c5fc
  43a8de:	jb     0x43a957
  43a8e0:	fs int 0x4b
  43a8e3:	imul   esp,DWORD PTR [edx+edi*4+0x72],0x74
  43a8e8:	dec    edi
  43a8e9:	mov    esp,0x7294007b
  43a8ee:	std    
  43a8ef:	cmp    al,0x46
  43a8f1:	shr    BYTE PTR [esp+esi*2+0x58],0xc4
  43a8f6:	jno    0x43a96c
  43a8f8:	inc    esi
  43a8f9:	mov    dl,0x7b
  43a8fb:	inc    ebp
  43a8fc:	cmp    DWORD PTR [eax],eax
  43a8fe:	mov    al,ds:0xb0012f03
  43a903:	jno    0x43a940
  43a905:	ins    BYTE PTR es:[edi],dx
  43a906:	and    BYTE PTR [eax+eiz*1+0x5d],0xb6
  43a90b:	jl     0x43a90e
  43a90d:	ins    DWORD PTR es:[edi],dx
  43a90e:	mov    WORD PTR [eax-0x27],?
  43a911:	push   0xf8007774
  43a916:	arpl   WORD PTR [edx+0x71],di
  43a919:	xlat   BYTE PTR ds:[ebx]
  43a91a:	js     0x43a8ae
  43a91c:	add    esp,ebp
  43a91e:	add    DWORD PTR [eax],esi
  43a920:	jb     0x43a915
  43a922:	ins    BYTE PTR es:[edi],dx
  43a923:	push   eax
  43a924:	arpl   ax,si
  43a926:	imul   ecx,DWORD PTR [ebp+0x67],0x77465dc9
  43a92d:	ret    0x3b69
  43a930:	jnp    0x43a902
  43a932:	pop    ebp
  43a933:	ss gs mov dl,0x69
  43a937:	aaa    
  43a938:	js     0x43a8e7
  43a93a:	outs   dx,BYTE PTR ds:[esi]
  43a93b:	out    0x3,eax
  43a93d:	out    0xfd,al
  43a93f:	xor    eax,0x44fa067
  43a944:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  43a946:	outs   dx,BYTE PTR ds:[esi]
  43a947:	add    BYTE PTR [eax-0x5d],bh
  43a94a:	cmp    al,0x4
  43a94c:	jne    0x43a9bf
  43a94e:	outs   dx,BYTE PTR ds:[esi]
  43a94f:	adc    BYTE PTR [eax+eax*4+0x63],dh
  43a953:	cmc    
  43a954:	inc    edi
  43a955:	arpl   WORD PTR [edi+0x3],bx
  43a958:	add    al,0x6a
  43a95a:	add    BYTE PTR [esi],ah
  43a95c:	jno    0x43a9dc
  43a95e:	push   0xffffffcc
  43a960:	jne    0x43a9c2
  43a962:	dec    edi
  43a963:	shl    DWORD PTR [ebp+0x7b],cl
  43a966:	(bad)  
  43a967:	retf   0x7754
  43a96a:	pop    edi
  43a96b:	aam    0x75
  43a96d:	cmp    ebp,DWORD PTR [eax+eax*8+0x47]
  43a971:	aaa    
  43a972:	outs   dx,DWORD PTR ds:[esi]
  43a973:	(bad)  
  43a974:	jne    0x43a9b1
  43a976:	jo     0x43a978
  43a978:	mov    ebp,0x54624400
  43a97d:	mov    esi,0x9c5d5f48
  43a982:	and    DWORD PTR [ebx+0x74],ebx
  43a985:	mov    al,ds:0x8a6d5f5b
  43a98a:	and    DWORD PTR [ebx+0x70],ebx
  43a98d:	xchg   ebp,eax
  43a98e:	add    al,0x63
  43a990:	push   ecx
  43a991:	jmp    0xa642ef2d
  43a996:	cli    
  43a997:	ins    BYTE PTR es:[edi],dx
  43a998:	dec    ebp
  43a999:	mov    eax,?
  43a99b:	ins    DWORD PTR es:[edi],dx
  43a99c:	outs   dx,BYTE PTR ds:[esi]
  43a99d:	sub    bl,0x69
  43a9a0:	inc    esp
  43a9a1:	dec    esp
  43a9a2:	loope  0x43a9f7
  43a9a4:	outs   dx,BYTE PTR ds:[esi]
  43a9a5:	push   eax
  43a9a6:	call   0xc19f1317
  43a9ab:	push   ecx
  43a9ac:	pop    ebp
  43a9ad:	cmp    eax,0x19fdaa98
  43a9b2:	mov    bl,0x6c
  43a9b4:	dec    ebp
  43a9b5:	inc    esp
  43a9b6:	mov    ecx,0xbc406e6d
  43a9bb:	imul   eax,DWORD PTR [esp+eax*2-0x57],0xa0106e53
  43a9c3:	ins    BYTE PTR es:[edi],dx
  43a9c4:	imul   ebx,DWORD PTR [ebx],0x55d51c9
  43a9ca:	nop
  43a9cb:	sub    esi,edi
  43a9cd:	cmp    bh,BYTE PTR [ebx+0x5f]
  43a9d0:	cmp    eax,0x745172fb
  43a9d5:	add    al,0x51
  43a9d7:	pop    ebp
  43a9d8:	ja     0x43aa06
  43a9da:	js     0x43aa2b
  43a9dc:	add    bh,bh
  43a9de:	add    BYTE PTR [ecx+0x46ce6342],bl
  43a9e4:	ins    DWORD PTR es:[edi],dx
  43a9e5:	arpl   bx,bx
  43a9e7:	pop    esi
  43a9e8:	dec    esi
  43a9e9:	pop    edi
  43a9ea:	lds    esp,FWORD PTR [edx+0x5d]
  43a9ed:	inc    ebx
  43a9ee:	shr    DWORD PTR [eax+eax*1+0x0],1
  43a9f2:	add    ah,bl
  43a9f4:	sti    
  43a9f5:	dec    ecx
  43a9f6:	ficom  DWORD PTR gs:[eax+0x70]
  43a9fa:	rol    DWORD PTR gs:[ebp+ebx*2+0x79],cl
  43a9ff:	clc    
  43aa00:	jne    0x43aa51
  43aa02:	add    ch,cl
  43aa04:	sti    
  43aa05:	dec    ecx
  43aa06:	sbb    bh,BYTE PTR gs:0x5afe6f6c
  43aa0d:	inc    ebx
  43aa0e:	gs and al,0xfd
  43aa11:	jne    0x43aa15
  43aa13:	das    
  43aa14:	pop    edx
  43aa15:	pop    edi
  43aa16:	push   ebx
  43aa17:	sbb    BYTE PTR [ecx+0x4e],ch
  43aa1a:	popa   
  43aa1b:	adc    DWORD PTR [edx+0x5d],ebp
  43aa1e:	inc    ebp
  43aa1f:	in     eax,0x58
  43aa21:	add    BYTE PTR [eax],al
  43aa23:	jp     0x43aa21
  43aa25:	cmp    al,0x71
  43aa27:	enter  0x6c5b,0x53
  43aa2b:	aam    0x68
  43aa2d:	add    BYTE PTR [eax],al
  43aa2f:	jl     0x43aa79
  43aa31:	dec    esi
  43aa32:	inc    ecx
  43aa33:	lods   eax,DWORD PTR ds:[esi]
  43aa34:	inc    ebx
  43aa35:	sub    esi,DWORD PTR [edx]
  43aa37:	xchg   ebx,eax
  43aa38:	push   0xfd2d6c6c
  43aa3d:	outs   dx,DWORD PTR ds:[esi]
  43aa3e:	add    DWORD PTR [edx+0x6a],ebp
  43aa41:	data16 jae 0x43aa44
  43aa44:	lea    ebp,[esi+0x61]
  43aa47:	outs   dx,BYTE PTR ds:[esi]
  43aa48:	mov    DWORD PTR [edx+0x4f],ebx
  43aa4b:	add    BYTE PTR [edx+0x13766efb],dl
  43aa51:	outs   dx,BYTE PTR ds:[esi]
  43aa52:	jo     0x43aac6
  43aa54:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43aa55:	bound  esi,QWORD PTR [esi+eiz*2-0x54]
  43aa59:	cld    
  43aa5a:	popa   
  43aa5b:	add    DWORD PTR [eax-0xcaa9392],ebx
  43aa61:	imul   esp,DWORD PTR [bp+di-0x24],0x6c
  43aa66:	pop    ebp
  43aa67:	inc    ecx
  43aa68:	in     eax,dx
  43aa69:	cld    
  43aa6a:	adc    eax,0x70b69401
  43aa6f:	outs   dx,BYTE PTR ds:[esi]
  43aa70:	push   edi
  43aa71:	mov    ah,0x6c
  43aa73:	dec    edx
  43aa74:	pop    ebp
  43aa75:	test   al,0xfc
  43aa77:	ins    BYTE PTR es:[edi],dx
  43aa78:	xchg   esp,eax
  43aa79:	xchg   edi,eax
  43aa7a:	arpl   WORD PTR [esp+ebp*1-0x60],si
  43aa7e:	ins    DWORD PTR es:[edi],dx
  43aa7f:	push   ebx
  43aa80:	inc    esi
  43aa81:	xchg   ebx,eax
  43aa82:	push   ecx
  43aa83:	add    BYTE PTR [eax+esi*4-0x74cab004],dl
  43aa8a:	fs inc edx
  43aa8c:	sub    eax,0xfd426079
  43aa91:	ins    DWORD PTR es:[edi],dx
  43aa92:	push   0x6794f54a
  43aa97:	push   ecx
  43aa98:	xchg   esp,eax
  43aa99:	jb     0x43aa9f
  43aa9b:	push   eax
  43aa9c:	cmc    
  43aa9d:	ins    DWORD PTR es:[edi],dx
  43aa9e:	gs dec esi
  43aaa0:	stc    
  43aaa1:	ins    BYTE PTR es:[edi],dx
  43aaa2:	push   0x72
  43aaa4:	icebp  
  43aaa5:	pop    ds
  43aaa6:	imul   ebp,DWORD PTR [eax+eax*1-0x7],0x2a
  43aaab:	je     0x43ab10
  43aaad:	imul   DWORD PTR [esi]
  43aaaf:	add    al,0x15
  43aab1:	xchg   ebp,eax
  43aab2:	sub    bh,BYTE PTR [eax+0x6e]
  43aab5:	xlat   BYTE PTR ds:[ebx]
  43aab6:	push   esp
  43aab7:	je     0x43ab03
  43aab9:	aad    0xd9
  43aabb:	cld    
  43aabc:	push   esp
  43aabd:	xchg   esp,eax
  43aabe:	or     DWORD PTR [ebx+0x74],esp
  43aac1:	mov    esp,0xbd446d20
  43aac6:	or     esp,DWORD PTR [edi+0x5d]
  43aac9:	test   al,0xfe
  43aacb:	ins    DWORD PTR es:[edi],dx
  43aacc:	ja     0x43aa91
  43aace:	frndint 
  43aad0:	sub    eax,0x74632994
  43aad5:	jl     0x43aaef
  43aad7:	push   0x78015964
  43aadc:	arpl   WORD PTR [edx-0x16],bp
  43aadf:	imul   ebp,DWORD PTR [ecx-0x7e],0x16
  43aae3:	add    al,0x53
  43aae5:	xchg   esp,eax
  43aae6:	add    BYTE PTR [edi-0x5da7979c],dh
  43aaec:	push   0x6cd54460
  43aaf1:	inc    esi
  43aaf2:	gs cdq 
  43aaf4:	js     0x43ab35
  43aaf6:	(bad)  
  43aaf7:	int3   
  43aaf8:	jno    0x43ab5f
  43aafa:	add    BYTE PTR [ebx+eax*1+0x64],ah
  43aafe:	popa   
  43aaff:	mov    ebx,0xbc65626b
  43ab04:	outs   dx,BYTE PTR ds:[esi]
  43ab05:	es movs DWORD PTR es:[edi],DWORD PTR gs:[esi]
  43ab08:	fs inc ecx
  43ab0a:	pop    ebx
  43ab0b:	xchg   esi,eax
  43ab0c:	outs   dx,DWORD PTR ds:[esi]
  43ab0d:	add    BYTE PTR [ebx],bh
  43ab0f:	jae    0x43ab90
  43ab11:	push   esi
  43ab12:	xchg   esp,eax
  43ab13:	add    BYTE PTR [edx+0x3],dl
  43ab16:	fnstcw WORD PTR [eax]
  43ab18:	stos   DWORD PTR es:[edi],eax
  43ab19:	push   0x687365f0
  43ab1e:	out    0x61,al
  43ab20:	cmp    DWORD PTR [eax-0x9],0x57
  43ab24:	out    0x3,eax
  43ab26:	cmp    DWORD PTR [eax],eax
  43ab28:	ss dec esp
  43ab2a:	fsub   DWORD PTR [ebp+0x4b]
  43ab2d:	addr16 loopne 0x43ab95
  43ab30:	push   ds
  43ab31:	addr16 retf 
  43ab33:	push   edi
  43ab34:	out    0x3,eax
  43ab36:	stos   BYTE PTR es:[edi],al
  43ab37:	add    DWORD PTR [esi],edx
  43ab39:	js     0x43aaed
  43ab3b:	inc    ebx
  43ab3c:	dec    esp
  43ab3d:	je     0x43ab0d
  43ab3f:	push   edi
  43ab40:	out    0x3,eax
  43ab42:	test   eax,0xa0631700
  43ab47:	pop    eax
  43ab48:	xor    al,0x63
  43ab4a:	test   al,0x63
  43ab4c:	sqrtps xmm4,XMMWORD PTR [ebp+eiz*2+0x945506]
  43ab54:	jbe    0x43ab5a
  43ab56:	fs popa 
  43ab58:	sti    
  43ab59:	imul   edx,DWORD PTR [ecx+0x5b],0x10
  43ab5d:	je     0x43aba9
  43ab5f:	pop    edi
  43ab60:	add    BYTE PTR [esi],al
  43ab62:	ins    BYTE PTR es:[edi],dx
  43ab63:	push   ecx
  43ab64:	add    BYTE PTR [esi-0x70],cl
  43ab67:	push   eax
  43ab68:	pop    edi
  43ab69:	(bad)  [edi+0x53]
  43ab6c:	push   0xffffffd8
  43ab6e:	bound  ebx,QWORD PTR [ecx+0x74]
  43ab71:	int3   
  43ab72:	add    BYTE PTR [eax+esi*2+0x5f],ah
  43ab76:	retf   0x5d32
  43ab79:	push   ecx
  43ab7a:	jmp    0x99441516
  43ab7f:	ss je  0x43abea
  43ab82:	cwde   
  43ab83:	sub    bl,BYTE PTR [ecx+0x74]
  43ab86:	les    eax,FWORD PTR [eax+esi*2+0x5f]
  43ab8a:	mov    bh,BYTE PTR [edx]
  43ab8c:	pop    ebp
  43ab8d:	push   ecx
  43ab8e:	jmp    0xb943dc2a
  43ab93:	div    BYTE PTR [eax+ebp*2-0x58]
  43ab97:	repz fs ds mov ah,dh
  43ab9c:	arpl   WORD PTR [ebp-0x73],bp
  43ab9f:	neg    BYTE PTR [ebx+0x68]
  43aba2:	sahf   
  43aba3:	xchg   edi,eax
  43aba4:	or     eax,0x5ee399ff
  43aba9:	cmp    eax,0x473ae854
  43abae:	ss nop
  43abb0:	cmp    ecx,DWORD PTR [eax+0x25]
  43abb3:	jmp    0x7a63fbe5
  43abb8:	fs ins BYTE PTR es:[edi],dx
  43abba:	push   ebp
  43abbb:	cwde   
  43abbc:	stos   DWORD PTR es:[edi],eax
  43abbd:	call   FWORD PTR [ecx]
  43abbf:	enter  0x633f,0x3d
  43abc3:	ficom  DWORD PTR [edi+0x6c]
  43abc6:	inc    ebp
  43abc7:	mov    bl,0x5e
  43abc9:	push   eax
  43abca:	or     BYTE PTR [eax+ebx*2+0x297e951],bl
  43abd1:	add    BYTE PTR [edx],ch
  43abd3:	sbb    DWORD PTR [ecx+0x6b],0x647a0008
  43abda:	dec    esp
  43abdb:	add    BYTE PTR [esi+ebx*2+0x418a545d],ah
  43abe2:	push   0x67
  43abe4:	repz push esp
  43abe6:	add    BYTE PTR [eax],al
  43abe8:	fild   WORD PTR [edx]
  43abea:	dec    ebx
  43abeb:	push   0x456c5dd0
  43abf0:	cmc    
  43abf1:	pop    bx
  43abf3:	jne    0x43abe6
  43abf5:	dec    di
  43abf7:	add    BYTE PTR [esi],cl
  43abf9:	cmp    bh,BYTE PTR ds:0x2a31094c
  43abff:	rcr    DWORD PTR cs:[ebp+0x6c],1
  43ac03:	add    bl,cl
  43ac05:	add    DWORD PTR [edi],edi
  43ac07:	gs loope 0x43ac60
  43ac0a:	imul   esp,DWORD PTR [ebp-0x1],0x3b
  43ac0e:	pop    ecx
  43ac0f:	ins    DWORD PTR es:[edi],dx
  43ac10:	adc    BYTE PTR [edi+0x78],al
  43ac13:	push   edi
  43ac14:	jge    0x43ac17
  43ac16:	dec    ebx
  43ac17:	gs push ds
  43ac19:	jbe    0x43ac85
  43ac1b:	xor    edi,DWORD PTR [edi]
  43ac1d:	sbb    esp,DWORD PTR [esp+ebp*2+0x9]
  43ac21:	add    DWORD PTR [eax],edx
  43ac23:	add    BYTE PTR [esi],bh
  43ac25:	pop    esp
  43ac26:	cmp    esi,DWORD PTR [edx+0x10]
  43ac29:	bound  esi,QWORD PTR [ebp+eiz*2-0x5c]
  43ac2d:	pop    edx
  43ac2e:	imul   esi,DWORD PTR [esp+ecx*8+0x5a],0x5b
  43ac33:	gs cmp eax,0x7e006c01
  43ac39:	pop    ecx
  43ac3a:	dec    ebp
  43ac3b:	outs   dx,BYTE PTR ds:[esi]
  43ac3c:	add    ah,ah
  43ac3e:	pop    edx
  43ac3f:	popa   
  43ac40:	je     0x43ac26
  43ac42:	arpl   WORD PTR [ecx+ebp*2+0x67],bp
  43ac46:	pop    edi
  43ac47:	add    BYTE PTR [eax],al
  43ac49:	jge    0x43ac4f
  43ac4b:	cmp    ebp,DWORD PTR [edi+0x64]
  43ac4e:	pop    edx
  43ac4f:	popa   
  43ac50:	je     0x43abd6
  43ac52:	arpl   WORD PTR [ecx+ebp*2-0x6c],bp
  43ac56:	adc    DWORD PTR [edi+0x4d],ebx
  43ac59:	jno    0x43ac55
  43ac5b:	outs   dx,BYTE PTR ds:[esi]
  43ac5c:	outs   dx,BYTE PTR ds:[esi]
  43ac5d:	ins    DWORD PTR es:[edi],dx
  43ac5e:	jmp    0x43acdb
  43ac60:	add    BYTE PTR [esi+ebp*4+0x20833cfc],dl
  43ac67:	addr16 pushaw 
  43ac6a:	add    BYTE PTR [ebx+0x6c],ah
  43ac6d:	ins    DWORD PTR es:[edi],dx
  43ac6e:	loope  0x43accf
  43ac70:	inc    ebx
  43ac71:	pop    esp
  43ac72:	xlat   BYTE PTR ds:[ebx]
  43ac73:	cld    
  43ac74:	pop    esp
  43ac75:	xchg   esp,eax
  43ac76:	call   0x6e4c:0xd3314d65
  43ac7d:	xor    edi,DWORD PTR [edi-0x47d7c185]
  43ac83:	cmp    WORD PTR gs:[ebx-0x656b7e04],bp
  43ac8b:	jb     0x43acf0
  43ac8d:	xor    eax,0x204d5f8b
  43ac92:	mov    DWORD PTR [edi+0x5f],ebx
  43ac95:	add    DWORD PTR [ebx+0x6dd34866],esp
  43ac9b:	pop    si
  43ac9d:	cmc    
  43ac9e:	xchg   ebp,eax
  43ac9f:	cld    
  43aca0:	add    BYTE PTR [si+0x6596],dl
  43aca5:	push   esp
  43aca6:	cmc    
  43aca7:	pushw  0x4b
  43acaa:	icebp  
  43acab:	ins    BYTE PTR es:[edi],dx
  43acac:	aas    
  43acad:	outs   dx,BYTE PTR ds:[esi]
  43acae:	stc    
  43acaf:	cmp    al,0x4
  43acb1:	or     BYTE PTR [esi+edx*1+0x1ddd4d48],dl
  43acb8:	outs   dx,BYTE PTR ds:[esi]
  43acba:	mov    ebx,0xc674512c
  43acbf:	push   eax
  43acc0:	popaw  
  43acc2:	xchg   esp,eax
  43acc3:	inc    eax
  43acc4:	add    ecx,DWORD PTR [ebp-0x58]
  43acc7:	daa    
  43acc8:	imul   ebp,DWORD PTR [edx-0x4d],0x23
  43accc:	jb     0x43ad37
  43acce:	mov    cl,0x0
  43acd0:	sub    dl,BYTE PTR [ecx-0x2d]
  43acd3:	inc    esp
  43acd4:	aad    0x3
  43acd6:	jge    0x43ad34
  43acd8:	or     al,0x37
  43acda:	mov    edx,0x7068031a
  43acdf:	add    dl,bh
  43ace1:	add    eax,0x610b6549
  43ace6:	push   ecx
  43ace7:	je     0x43ad0b
  43ace9:	data16 jb 0x43ad51
  43acec:	push   es
  43aced:	jo     0x43ac83
  43acef:	add    BYTE PTR [ecx+0x3],cl
  43acf2:	push   eax
  43acf3:	gs retf 
  43acf5:	pusha  
  43acf6:	dec    eax
  43acf7:	mov    gs:0xc6653265,al
  43acfd:	outs   dx,DWORD PTR ds:[esi]
  43acfe:	xchg   esp,eax
  43acff:	add    BYTE PTR [esi],ch
  43ad01:	add    al,0x55
  43ad03:	gs mov bl,0x3f
  43ad06:	add    BYTE PTR [edi],dh
  43ad08:	jb     0x43acca
  43ad0a:	data16 aaa 
  43ad0c:	aas    
  43ad0d:	enter  0x3173,0x0
  43ad11:	rol    BYTE PTR [ebx],cl
  43ad13:	pop    ecx
  43ad14:	outs   dx,BYTE PTR ds:[esi]
  43ad15:	test   BYTE PTR [eax+ecx*1+0x66],ah
  43ad19:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43ad1a:	push   0xffffffff
  43ad1c:	jo     0x43aca6
  43ad1e:	outs   dx,DWORD PTR ds:[esi]
  43ad1f:	sti    
  43ad20:	pop    esi
  43ad21:	xchg   ebx,eax
  43ad22:	pusha  
  43ad23:	mov    edx,0xd3687359
  43ad28:	jo     0x43ad11
  43ad2a:	add    esp,DWORD PTR [eax+eax*1+0x61f775a6]
  43ad31:	pop    ebx
  43ad32:	pop    edi
  43ad33:	cdq    
  43ad34:	pop    ebx
  43ad35:	dec    esp
  43ad36:	je     0x43ad2b
  43ad38:	je     0x43ad7a
  43ad3a:	mov    ax,0x2365
  43ad3e:	inc    ebp
  43ad3f:	xchg   esp,eax
  43ad40:	add    dh,al
  43ad42:	add    al,0xd0
  43ad44:	gs dec ebx
  43ad46:	pop    edi
  43ad47:	test   al,0x65
  43ad49:	add    BYTE PTR ds:0x400000d1,ch
  43ad4f:	call   0x6e59:0xa41a633a
  43ad56:	add    al,0x54
  43ad58:	sub    eax,0x3d921900
  43ad5d:	pop    edi
  43ad5e:	pop    ss
  43ad5f:	arpl   WORD PTR [ebp+edi*1-0x17],ax
  43ad63:	xchg   edi,eax
  43ad64:	mov    al,ds:0x745319fd
  43ad69:	dec    esi
  43ad6a:	or     al,0x0
  43ad6c:	jno    0x43ade2
  43ad6e:	dec    esi
  43ad6f:	push   es
  43ad70:	outs   dx,BYTE PTR ds:[esi]
  43ad71:	add    BYTE PTR [eax],al
  43ad73:	fcom   QWORD PTR [esi+0x55d06441]
  43ad79:	pop    esp
  43ad7a:	jae    0x43ad56
  43ad7c:	aas    
  43ad7d:	add    BYTE PTR [eax],al
  43ad7f:	sbb    BYTE PTR [edx+0x65bd633d],0x63
  43ad86:	arpl   WORD PTR [esi-0x4291a6d9],si
  43ad8c:	pop    esp
  43ad8d:	pop    edx
  43ad8e:	popa   
  43ad8f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43ad90:	pop    ds
  43ad91:	add    BYTE PTR [eax],al
  43ad93:	fist   DWORD PTR [edi-0x97b91d3]
  43ad99:	je     0x43adfe
  43ad9b:	lods   eax,DWORD PTR ds:[esi]
  43ad9c:	ror    BYTE PTR [edi+0x0],1
  43ad9f:	cli    
  43ada0:	xchg   edi,eax
  43ada1:	sub    ah,BYTE PTR [edi+0x7d]
  43ada4:	rcr    DWORD PTR [esp+esi*2-0x17],1
  43ada8:	xchg   edi,eax
  43ada9:	ret    0xadfe
  43adac:	retf   0x4474
  43adaf:	mov    al,ds:0x5a7461d9
  43adb4:	nop
  43adb5:	sub    eax,0x5dca2a00
  43adba:	pop    edi
  43adbb:	pop    ebp
  43adbc:	jmp    0x43ae02
  43adbe:	inc    edi
  43adbf:	sub    ebp,ecx
  43adc1:	pop    ebp
  43adc2:	pop    ebp
  43adc3:	add    BYTE PTR [ecx+0x55],bh
  43adc6:	outs   dx,BYTE PTR ds:[si]
  43adc8:	cmp    eax,0x74443efe
  43adcd:	xor    ebp,DWORD PTR [edx]
  43adcf:	cs add cl,bl
  43add2:	pop    eax
  43add3:	ins    BYTE PTR es:[edi],dx
  43add4:	add    BYTE PTR [esp+eax*1+0x4f],ah
  43add8:	push   ebx
  43add9:	mov    esp,0x996e5d53
  43adde:	add    al,0x44
  43ade0:	add    dl,cl
  43ade2:	push   ebx
  43ade3:	cmp    DWORD PTR [edx-0x78],edx
  43ade6:	arpl   WORD PTR [esi+0x0],bp
  43ade9:	gs std 
  43adeb:	pop    ebp
  43adec:	jb     0x43ad86
  43adee:	dec    ecx
  43adef:	pop    ecx
  43adf0:	fs cdq 
  43adf2:	jb     0x43ae55
  43adf4:	outs   dx,BYTE PTR ds:[esi]
  43adf5:	retf   
  43adf6:	pop    eax
  43adf7:	add    BYTE PTR [eax],al
  43adf9:	inc    esp
  43adfa:	std    
  43adfb:	pop    esi
  43adfc:	gs jmp 0xdfa81260
  43ae02:	push   esi
  43ae03:	data16 data16 loop 0x43ae04
  43ae07:	add    eax,0x39550a00
  43ae0c:	inc    ecx
  43ae0d:	(bad)  [ecx+0x6a]
  43ae10:	fidiv  WORD PTR gs:[esp+edx*2+0x6f]
  43ae15:	ficomp WORD PTR [ecx+0x6a]
  43ae18:	imul   esp,DWORD PTR [ebx],0x5d003960
  43ae1e:	std    
  43ae1f:	dec    esi
  43ae20:	push   ebx
  43ae21:	sub    al,0x44
  43ae23:	push   0x65
  43ae25:	or     al,0x59
  43ae27:	pop    ebp
  43ae28:	inc    ebp
  43ae29:	jmp    0x43ae75
  43ae2b:	data16 je 0x43aeab
  43ae2e:	std    
  43ae2f:	and    DWORD PTR [eax],eax
  43ae31:	or     dl,BYTE PTR [ecx+edi*1+0x45]
  43ae35:	add    BYTE PTR [ebx-0x718b99a1],bh
  43ae3b:	pop    edi
  43ae3c:	ins    BYTE PTR es:[edi],dx
  43ae3d:	gs xchg esp,eax
  43ae3f:	ss jo  0x43ae42
  43ae42:	xchg   esp,eax
  43ae43:	add    al,BYTE PTR [ecx+edx*2]
  43ae46:	out    0x18,eax
  43ae48:	aas    
  43ae49:	push   0xffffffa9
  43ae4b:	cmp    al,0x42
  43ae4d:	arpl   WORD PTR [eax-0x50919ed6],sp
  43ae53:	and    al,0x6a
  43ae55:	arpl   WORD PTR [edx-0x6bff92f5],bp
  43ae5b:	sar    esp,1
  43ae5d:	push   eax
  43ae5e:	sbb    BYTE PTR [bp+di+0x69],cl
  43ae62:	ja     0x43ae77
  43ae64:	push   0xfcde9400
  43ae69:	push   eax
  43ae6a:	inc    edi
  43ae6b:	sbb    BYTE PTR ds:0x5fe67b6c,bh
  43ae71:	inc    ebx
  43ae72:	push   0x4
  43ae74:	bound  esi,QWORD PTR [esp+edx*4-0x56]
  43ae78:	dec    ebp
  43ae79:	cs jae 0x43ae82
  43ae7c:	sub    dh,BYTE PTR cs:[eax]
  43ae7f:	ret    
  43ae80:	pusha  
  43ae81:	add    BYTE PTR [esi+ebp*1-0x3fb9c2fc],dl
  43ae88:	ins    BYTE PTR es:[edi],dx
  43ae89:	je     0x43aed4
  43ae8b:	mov    ecx,0xab3b6e6c
  43ae90:	pop    edi
  43ae91:	pop    ebp
  43ae92:	sub    BYTE PTR [ebx-0x28ca8b9d],ah
  43ae98:	cld    
  43ae99:	adc    BYTE PTR [eax],al
  43ae9b:	xchg   ebp,eax
  43ae9c:	test   eax,0x7cdd583a
  43aea1:	ins    BYTE PTR es:[edi],dx
  43aea2:	imul   eax,DWORD PTR [esi],0x6633d8e
  43aea8:	dec    si
  43aeaa:	je     0x43aeaf
  43aeac:	ins    BYTE PTR es:[edi],dx
  43aead:	pusha  
  43aeae:	add    BYTE PTR [eax+edi*4+0x6bf93cfc],dl
  43aeb5:	imul   eax,DWORD PTR [ecx+esi*8+0x0],0x5dc86153
  43aebd:	es popa 
  43aebf:	mov    edx,0xbb5e406c
  43aec4:	arpl   WORD PTR [eax+0x70],cx
  43aec7:	mov    bh,0x3e
  43aec9:	xor    eax,0x3353bf67
  43aece:	addr16 mov edx,0xcb03e75d
  43aed4:	add    BYTE PTR [esi],ah
  43aed6:	popa   
  43aed7:	stos   BYTE PTR es:[edi],al
  43aed8:	ins    BYTE PTR es:[edi],dx
  43aed9:	xor    dh,BYTE PTR [edi+esi*2+0x56]
  43aedd:	ss jge 0x43af59
  43aee0:	ins    BYTE PTR es:[edi],dx
  43aee1:	or     al,0x69
  43aee3:	push   ecx
  43aee4:	ins    BYTE PTR es:[edi],dx
  43aee5:	cli    
  43aee6:	jno    0x43af5f
  43aee8:	dec    edi
  43aee9:	out    0x3,eax
  43aeeb:	mov    ds:0x7a612600,al
  43aef0:	ins    BYTE PTR es:[edi],dx
  43aef1:	es push 0x5304736d
  43aef7:	pusha  
  43aef8:	push   edi
  43aef9:	aad    0x60
  43aefb:	xchg   esp,eax
  43aefc:	add    BYTE PTR [ebx],cl
  43aefe:	add    al,0x0
  43af00:	mov    DWORD PTR [ebp-0x2b],ebx
  43af03:	outs   dx,DWORD PTR ds:[esi]
  43af04:	push   edi
  43af05:	push   esi
  43af06:	aam    0x68
  43af08:	jns    0x43af67
  43af0a:	mov    ch,0x6f
  43af0c:	cmp    ebx,DWORD PTR [esi-0x30]
  43af0f:	bound  ecx,QWORD PTR [ebx+0x6c]
  43af12:	int3   
  43af13:	jb     0x43af70
  43af15:	push   esi
  43af16:	xchg   esi,eax
  43af17:	outs   dx,DWORD PTR ds:[esi]
  43af18:	sub    eax,0xb7038c72
  43af1d:	add    BYTE PTR [esi-0x549305a0],ah
  43af23:	jo     0x43af29
  43af25:	push   ebp
  43af26:	and    BYTE PTR [edx-0x25],0x6c
  43af2a:	mov    WORD PTR [edx-0x9],es
  43af2d:	jb     0x43afa2
  43af2f:	ins    BYTE PTR es:[edi],dx
  43af30:	neg    BYTE PTR [ecx+0x0]
  43af33:	mov    bh,al
  43af35:	ins    BYTE PTR es:[edi],dx
  43af36:	arpl   WORD PTR [edx+0x4c745af2],bp
  43af3c:	shr    BYTE PTR [eax+eax*1-0x9],1
  43af40:	xchg   esi,eax
  43af41:	push   eax
  43af42:	inc    edx
  43af43:	xor    DWORD PTR [ebx-0x39c18f98],eax
  43af49:	ins    BYTE PTR es:[edi],dx
  43af4a:	cmp    eax,0x4d6ca64c
  43af4f:	xor    eax,0x2c6356b1
  43af54:	mov    al,ds:0xc62a0000
  43af59:	dec    edi
  43af5a:	push   eax
  43af5b:	cmp    eax,0x52a16c5
  43af60:	jl     0x43afb6
  43af62:	add    BYTE PTR ds:0x74389800,dh
  43af68:	adc    eax,0x17633580
  43af6d:	je     0x43afa5
  43af6f:	arpl   ax,di
  43af71:	jp     0x43afd6
  43af73:	ins    DWORD PTR es:[edi],dx
  43af74:	std    
  43af75:	mov    ds:0x97e93f68,al
  43af7a:	dec    edi
  43af7b:	add    BYTE PTR [ecx-0x478f93bd],dh
  43af81:	cmp    ah,BYTE PTR [ebx+0x6e]
  43af84:	ror    BYTE PTR [esi+0x5a],1
  43af87:	bound  edi,QWORD PTR [esi-0x5bffffaa]
  43af8d:	xchg   edi,eax
  43af8e:	cmp    BYTE PTR [ebp+esi*4+0x27],dh
  43af92:	xor    eax,0x3643c763
  43af97:	arpl   WORD PTR [eax-0x62929cd6],di
  43af9d:	shr    BYTE PTR [eax+0x51],cl
  43afa0:	jmp    0xa043433c
  43afa5:	stc    
  43afa6:	ins    BYTE PTR es:[edi],dx
  43afa7:	arpl   WORD PTR [ebx+0x7461f1],bx
  43afad:	push   cs
  43afae:	inc    edi
  43afaf:	je     0x43b004
  43afb1:	loope  0x43b015
  43afb3:	je     0x43b02a
  43afb5:	fiadd  WORD PTR [eax+0x59]
  43afb8:	ins    BYTE PTR es:[edi],dx
  43afb9:	fstp   DWORD PTR [edi+0x59]
  43afbc:	arpl   si,sp
  43afbe:	inc    ecx
  43afbf:	add    BYTE PTR [eax],al
  43afc1:	push   ss
  43afc2:	add    al,BYTE PTR [ecx+0x6e]
  43afc5:	loope  0x43b00c
  43afc7:	push   0x6e
  43afc9:	add    al,dl
  43afcb:	jo     0x43b016
  43afcd:	jne    0x43afaf
  43afcf:	jb     0x43b042
  43afd1:	inc    esp
  43afd2:	fdiv   QWORD PTR [eax+0x59]
  43afd5:	inc    ecx
  43afd6:	arpl   WORD PTR [ecx+0x61],sp
  43afd9:	ins    BYTE PTR es:[edi],dx
  43afda:	int3   
  43afdb:	bound  ebp,QWORD PTR [ebp+eiz*2-0x3]
  43afdf:	add    DWORD PTR [eax+0x745ec400],esp
  43afe5:	gs lahf 
  43afe7:	pop    esi
  43afe8:	pop    ebp
  43afe9:	je     0x43afaa
  43afeb:	inc    ebp
  43afec:	pop    ecx
  43afed:	fs ret 
  43afef:	pop    ecx
  43aff0:	ins    BYTE PTR es:[edi],dx
  43aff1:	gs mov al,0x64
  43aff4:	cmp    DWORD PTR [eax],eax
  43aff6:	dec    edx
  43aff7:	add    DWORD PTR [ecx+0x6e],eax
  43affa:	loope  0x43b042
  43affc:	push   0x6e
  43affe:	loopne 0x43b055
  43b000:	dec    edx
  43b001:	fadd   QWORD PTR gs:[ebp+0x3e]
  43b005:	imul   ebx,ecx,0x39000046
  43b00b:	add    DWORD PTR [ecx+0x6e],eax
  43b00e:	icebp  
  43b00f:	inc    esi
  43b010:	push   0x6e
  43b012:	rcl    BYTE PTR [ebp+0x4b],1
  43b015:	gs loope 0x43b054
  43b018:	jo     0x43b08e
  43b01a:	aam    0x5c
  43b01c:	inc    cx
  43b01e:	jge    0x43b021
  43b020:	push   esi
  43b021:	add    BYTE PTR [ebp+0x55],al
  43b024:	je     0x43b096
  43b026:	xchg   esp,eax
  43b027:	stos   BYTE PTR es:[edi],al
  43b028:	pop    ecx
  43b029:	push   0xfffffff0
  43b02b:	test   eax,0xe9006f59
  43b030:	je     0x43b0a1
  43b032:	je     0x43aff7
  43b034:	xlat   BYTE PTR ds:[ebx]
  43b035:	cld    
  43b036:	mov    bl,0x94
  43b038:	mov    al,ds:0x69f17462
  43b03d:	arpl   WORD PTR [ebx-0x38],sp
  43b040:	sub    ah,BYTE PTR [edi+0x74]
  43b043:	out    0x4b,eax
  43b045:	arpl   WORD PTR [ecx+ecx*8+0x4a],si
  43b049:	inc    ecx
  43b04a:	pop    edi
  43b04b:	test   al,0x23
  43b04d:	bound  ebx,QWORD PTR [edi-0x49]
  43b050:	push   edx
  43b051:	push   ebp
  43b052:	add    BYTE PTR [edx+eiz*1+0x23a84804],dl
  43b059:	je     0x43b0a8
  43b05b:	mov    cl,0x25
  43b05d:	push   0x7708794e
  43b062:	arpl   WORD PTR [edi-0x6bffbcf5],ax
  43b068:	add    al,BYTE PTR [edi+eax*2]
  43b06b:	push   0xb
  43b06d:	outs   dx,BYTE PTR ds:[si]
  43b06f:	xor    ah,0x77
  43b072:	cmp    eax,0x6370f678
  43b077:	dec    esp
  43b078:	clc    
  43b079:	pop    ebp
  43b07a:	fs push 0x946f03fc
  43b080:	mov    al,0x5e
  43b082:	je     0x43b0b5
  43b084:	leave  
  43b085:	pop    esi
  43b086:	arpl   WORD PTR [eax-0x66],cx
  43b089:	pop    ebp
  43b08a:	push   0x2a
  43b08c:	mov    esp,0xd7557461
  43b091:	cld    
  43b092:	cdq    
  43b093:	add    BYTE PTR [eax+esi*4-0x56c68ba2],dl
  43b09a:	pop    esi
  43b09b:	arpl   WORD PTR [eax],sp
  43b09d:	mov    BYTE PTR [edi+0x63],dh
  43b0a0:	push   es
  43b0a1:	add    DWORD PTR [eax-0x6f92fbbe],esp
  43b0a7:	(bad)  
  43b0a8:	out    dx,al
  43b0a9:	dec    ebx
  43b0aa:	out    0x3,eax
  43b0ac:	in     eax,0x0
  43b0ae:	lahf   
  43b0af:	ja     0x43b099
  43b0b1:	jo     0x43b065
  43b0b3:	jae    0x43b0ac
  43b0b5:	push   edx
  43b0b6:	xchg   ebp,eax
  43b0b7:	push   0x768c6df3
  43b0bc:	loopne 0x43b0ff
  43b0be:	out    0x3,eax
  43b0c0:	loop   0x43b0c2
  43b0c2:	das    
  43b0c3:	js     0x43b085
  43b0c5:	jo     0x43b0ef
  43b0c7:	push   0x754c4eb8
  43b0cc:	(bad)  
  43b0cd:	pop    ebp
  43b0ce:	push   esi
  43b0cf:	js     0x43b0ad
  43b0d1:	pop    ebp
  43b0d2:	dec    eax
  43b0d3:	push   0x45366eb7
  43b0d8:	xchg   esp,eax
  43b0d9:	add    BYTE PTR [edx+0x3],bl
  43b0dc:	rcl    DWORD PTR [edx+0x33],cl
  43b0df:	imul   eax,DWORD PTR [edx+0x5d780c52],0xc3620470
  43b0e9:	add    BYTE PTR [ebx+eax*1+0x53],dh
  43b0ed:	push   edx
  43b0ee:	adc    ebp,DWORD PTR [ecx-0x7e]
  43b0f1:	push   edx
  43b0f2:	or     al,0x78
  43b0f4:	pop    ebx
  43b0f5:	ins    DWORD PTR es:[edi],dx
  43b0f6:	add    al,0x76
  43b0f8:	add    BYTE PTR [ebx+0x33],ch
  43b0fb:	div    DWORD PTR [edi+0x73]
  43b0fe:	push   ebx
  43b0ff:	stc    
  43b100:	inc    esp
  43b101:	xchg   esp,eax
  43b102:	add    dh,dl
  43b104:	add    edx,DWORD PTR [ebx+0x52]
  43b107:	shr    DWORD PTR [eax+0x32],cl
  43b10a:	push   edx
  43b10b:	int3   
  43b10c:	ja     0x43b187
  43b10e:	outs   dx,BYTE PTR ds:[esi]
  43b10f:	enter  0x3966,0x4d
  43b113:	mov    ch,0x5f
  43b115:	imul   eax,DWORD PTR [eax],0xffffff83
  43b118:	add    ebx,DWORD PTR [ebx+0x52]
  43b11b:	add    BYTE PTR [ebp-0x3b95add4],bh
  43b121:	or     esi,DWORD PTR [esi]
  43b123:	arpl   WORD PTR [ebp-0x6d96a62e],bx
  43b129:	loopne 0x43b18a
  43b12b:	aas    
  43b12c:	jmp    0xa643edc8
  43b131:	cld    
  43b132:	ins    BYTE PTR es:[edi],dx
  43b133:	push   ebx
  43b134:	jnp    0x43b101
  43b136:	and    eax,0x5fbf8a5f
  43b13b:	inc    ebx
  43b13c:	xchg   ebx,esp
  43b13e:	push   edx
  43b13f:	ja     0x43b0e1
  43b141:	mov    ch,0x5e
  43b143:	imul   edi,DWORD PTR [esi],0x31003590
  43b149:	mov    esp,0xac28706c
  43b14e:	pop    esp
  43b14f:	dec    esi
  43b150:	inc    esp
  43b151:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43b152:	outs   dx,DWORD PTR ds:[esi]
  43b153:	arpl   WORD PTR [edx],di
  43b155:	lods   al,BYTE PTR ds:[esi]
  43b156:	cmp    BYTE PTR [ebx+0x48],ah
  43b159:	lods   al,BYTE PTR ds:[esi]
  43b15a:	pop    edi
  43b15b:	outs   dx,BYTE PTR ds:[esi]
  43b15c:	cmp    al,BYTE PTR [eax]
  43b15e:	mov    ebp,0xcf160000
  43b163:	ss inc edi
  43b165:	aaa    
  43b166:	push   ebx
  43b167:	dec    esp
  43b168:	sub    al,BYTE PTR ds:0x26005474
  43b16e:	push   esp
  43b16f:	aas    
  43b170:	aas    
  43b171:	xor    al,0x4c
  43b173:	adc    eax,0x5473d72e
  43b178:	ins    BYTE PTR es:[edi],dx
  43b179:	jmp    0x27439b15
  43b17e:	jae    0x43b1ec
  43b180:	push   ebx
  43b181:	cli    
  43b182:	cmp    dl,BYTE PTR [edx+0x41]
  43b185:	int3   
  43b186:	inc    ebx
  43b187:	cmp    ebp,DWORD PTR [edx-0x39]
  43b18a:	xor    al,0x0
  43b18c:	add    ah,cl
  43b18e:	xchg   edi,eax
  43b18f:	ss arpl bp,dx
  43b192:	push   esi
  43b193:	jo     0x43b1fc
  43b195:	add    bh,bh
  43b197:	imul   ebx,DWORD PTR [esi+0x66],0x723e6cd8
  43b19e:	enter  0x59,0x0
  43b1a2:	sar    ah,0x45
  43b1a5:	sub    DWORD PTR gs:[ebx+0x6b],ecx
  43b1a9:	gs pop ds
  43b1ab:	cmp    esp,DWORD PTR [esi+0x75]
  43b1ae:	adc    dh,bh
  43b1b0:	inc    ebp
  43b1b1:	inc    ebp
  43b1b2:	sub    DWORD PTR [edi],edi
  43b1b4:	push   eax
  43b1b5:	dec    ecx
  43b1b6:	cs sub al,0x26
  43b1b9:	adc    DWORD PTR fs:[edx+0x0],eax
  43b1bd:	add    BYTE PTR [ebx],ah
  43b1bf:	(bad)  
  43b1c0:	ds gs add cl,cl
  43b1c4:	ds fs popa 
  43b1c7:	in     eax,dx
  43b1c8:	push   0x3dde725d
  43b1cd:	fs fistp WORD PTR fs:[ecx+0x6b]
  43b1d2:	jae    0x43b1ac
  43b1d4:	imul   eax,DWORD PTR [eax],0x0
  43b1d7:	fs dec esp
  43b1d9:	dec    eax
  43b1da:	dec    esp
  43b1db:	jge    0x43b21a
  43b1dd:	push   eax
  43b1de:	dec    ecx
  43b1df:	xchg   ebx,eax
  43b1e0:	cmp    BYTE PTR [esp+ecx*2-0x3],cl
  43b1e4:	std    
  43b1e5:	dec    ebp
  43b1e6:	add    DWORD PTR [edx+0x59],edx
  43b1e9:	push   0x72
  43b1eb:	xchg   ebx,eax
  43b1ec:	pop    edi
  43b1ed:	add    BYTE PTR [eax],al
  43b1ef:	pop    ss
  43b1f0:	cli    
  43b1f1:	fs gs lock pop esp
  43b1f5:	jo     0x43b270
  43b1f7:	std    
  43b1f8:	std    
  43b1f9:	in     eax,0x4
  43b1fb:	nop
  43b1fc:	pop    ecx
  43b1fd:	gs jae 0x43b188
  43b200:	push   0xfae90000
  43b205:	push   0x74
  43b207:	out    dx,eax
  43b208:	pop    esp
  43b209:	gs jo  0x43b1b9
  43b20c:	std    
  43b20d:	loopne 0x43b213
  43b20f:	xchg   esp,eax
  43b210:	mov    esp,0xa4376b61
  43b215:	ins    BYTE PTR es:[edi],dx
  43b216:	add    BYTE PTR [eax+edx*8-0x54d4a700],dl
  43b21d:	pop    edi
  43b21e:	addr16 xchg esp,eax
  43b220:	sbb    DWORD PTR [ecx+ebx*2],eax
  43b223:	or     ah,BYTE PTR [edi+0x400715e]
  43b229:	xchg   BYTE PTR [ebp+0x6a],dl
  43b22c:	or     BYTE PTR [edx-0x4],bh
  43b22f:	(bad)  
  43b230:	xchg   edi,eax
  43b231:	stos   BYTE PTR es:[edi],al
  43b232:	jbe    0x43b2a1
  43b234:	add    cl,BYTE PTR [eax+0x63fa6772]
  43b23a:	add    BYTE PTR [si+0x441],dl
  43b23f:	pop    ecx
  43b240:	loope  0x43b2bd
  43b242:	jo     0x43b2ad
  43b244:	retf   
  43b245:	xlat   BYTE PTR ds:[ebx]
  43b246:	cld    
  43b247:	jmp    0x43b1d9
  43b249:	dec    esp
  43b24a:	imul   esi,DWORD PTR [bx+di+0x7232],0x63
  43b250:	xchg   esp,eax
  43b251:	mov    edi,0x24b96b07
  43b256:	pop    ebp
  43b257:	push   0x9bfcd7a6
  43b25c:	xchg   edi,eax
  43b25d:	add    dh,BYTE PTR [edi+0x6c]
  43b260:	mov    al,ds:0x9400633a
  43b265:	xchg   ebx,eax
  43b266:	std    
  43b267:	pop    eax
  43b268:	test   BYTE PTR [esi+ebp*2],al
  43b26b:	arpl   WORD PTR [edi-0x8],si
  43b26e:	pop    edi
  43b26f:	ins    BYTE PTR es:[edi],dx
  43b270:	xchg   esp,eax
  43b271:	add    cl,BYTE PTR [eax]
  43b273:	pop    edi
  43b274:	jbe    0x43b27c
  43b276:	add    al,0x6b
  43b278:	addr16 loope 0x43b2d8
  43b27b:	outs   dx,BYTE PTR ds:[esi]
  43b27c:	push   0x686c60b1
  43b281:	xlat   BYTE PTR ds:[ebx]
  43b282:	cld    
  43b283:	mov    eax,ds:0x636df998
  43b288:	xor    DWORD PTR [eax],eax
  43b28a:	out    0x3,eax
  43b28c:	add    dh,bl
  43b28e:	sti    
  43b28f:	retf   
  43b290:	sub    BYTE PTR fs:[edx+eax*8+0x62],dl
  43b295:	xchg   esp,eax
  43b296:	add    BYTE PTR [eax+0x3],ah
  43b299:	pop    ebp
  43b29a:	imul   edi,DWORD PTR [ebx-0x5c93d88d],0x68
  43b2a1:	cmp    ch,BYTE PTR [ebx-0x36]
  43b2a4:	push   edx
  43b2a5:	or     BYTE PTR [ebx-0x40],dl
  43b2a8:	pop    ebp
  43b2a9:	cmc    
  43b2aa:	inc    ecx
  43b2ab:	out    0x3,eax
  43b2ad:	pushf  
  43b2ae:	add    al,0xb5
  43b2b0:	ja     0x43b29a
  43b2b2:	xor    eax,0x6efb7681
  43b2b7:	add    DWORD PTR [ebx],0x54
  43b2ba:	add    ch,BYTE PTR [edx+0x7443e868]
  43b2c0:	jno    0x43b2ac
  43b2c2:	xor    DWORD PTR gs:[edi-0x1c],0xb7627a52
  43b2ca:	push   ebx
  43b2cb:	push   esi
  43b2cc:	add    al,0x51
  43b2ce:	add    eax,0x61ac5e34
  43b2d3:	inc    ecx
  43b2d4:	push   0x494365c0
  43b2d9:	lods   al,BYTE PTR ds:[esi]
  43b2da:	arpl   WORD PTR [esp+esi*2-0x58],cx
  43b2de:	imul   ecx,DWORD PTR [edx+0x5e],0x784369d6
  43b2e5:	ja     0x43b339
  43b2e7:	out    0x3,eax
  43b2e9:	aaa    
  43b2ea:	add    eax,0x35886936
  43b2ef:	or     DWORD PTR [eax+eax*1+0x5b],ebx
  43b2f3:	outs   dx,BYTE PTR ds:[esi]
  43b2f4:	or     esp,DWORD PTR [eax+0x77]
  43b2f7:	fs and al,0x6c
  43b2fa:	dec    ecx
  43b2fb:	div    DWORD PTR gs:[edi+0x7b]
  43b2ff:	outs   dx,DWORD PTR ds:[esi]
  43b300:	or     DWORD PTR [esi+0x73],eax
  43b303:	ins    BYTE PTR es:[edi],dx
  43b304:	add    ch,bh
  43b306:	cmp    al,0x6e
  43b308:	add    BYTE PTR [ecx],dl
  43b30a:	xchg   ecx,eax
  43b30b:	cmp    DWORD PTR [ebx-0x1f],esp
  43b30e:	arpl   WORD PTR ss:[eax-0x2b],si
  43b312:	dec    edx
  43b313:	push   0x6c3bc75f
  43b318:	arpl   bx,bx
  43b31a:	data16 add BYTE PTR [eax],al
  43b31d:	jmp    0xe943b3b9
  43b322:	xchg   edi,eax
  43b323:	add    BYTE PTR [eax],al
  43b325:	jmp    0xe943b3c1
  43b32a:	xchg   edi,eax
  43b32b:	add    BYTE PTR [eax],al
  43b32d:	jmp    0xe943b3c9
  43b332:	xchg   edi,eax
  43b333:	add    BYTE PTR [eax],al
  43b335:	jmp    0xe943b3d1
  43b33a:	xchg   edi,eax
  43b33b:	add    BYTE PTR [eax],al
  43b33d:	jmp    0xe943b3d9
  43b342:	xchg   edi,eax
  43b343:	add    BYTE PTR [eax],al
  43b345:	jmp    0xe943b3e1
  43b34a:	xchg   edi,eax
  43b34b:	add    BYTE PTR [eax],al
  43b34d:	jmp    0xe943b3e9
  43b352:	xchg   edi,eax
  43b353:	add    BYTE PTR [eax],al
  43b355:	jmp    0x444a5a
  43b35a:	jmp    0xe943b3f6
  43b35f:	xchg   edi,eax
  43b360:	add    BYTE PTR [eax],al
  43b362:	jmp    0xe943b3fe
  43b367:	xchg   edi,eax
  43b368:	add    BYTE PTR [eax],al
  43b36a:	jmp    0xe943b406
  43b36f:	xchg   edi,eax
  43b370:	add    BYTE PTR [eax],al
  43b372:	jmp    0xe943b40e
  43b377:	xchg   edi,eax
  43b378:	add    BYTE PTR [eax],al
  43b37a:	jmp    0x43b416
  43b37f:	in     eax,dx
  43b380:	add    al,BYTE PTR [eax]
  43b382:	add    ch,ch
  43b384:	add    al,BYTE PTR [eax]
  43b386:	add    BYTE PTR [ebp-0x42fffffe],bh
  43b38c:	add    al,BYTE PTR [eax]
  43b38e:	add    BYTE PTR [ebp-0x52fffffe],ch
  43b394:	add    al,BYTE PTR [eax]
  43b396:	add    BYTE PTR [ebp-0x42fffffe],bh
  43b39c:	add    al,BYTE PTR [eax]
  43b39e:	add    BYTE PTR [ebp-0x52fffffe],ch
  43b3a4:	add    al,BYTE PTR [eax]
  43b3a6:	add    BYTE PTR [ebp+0x2],bh
  43b3a9:	add    BYTE PTR [eax],al
  43b3ab:	jge    0x43b3af
  43b3ad:	add    BYTE PTR [eax],al
  43b3af:	ins    DWORD PTR es:[edi],dx
  43b3b0:	add    al,BYTE PTR [eax]
  43b3b2:	add    BYTE PTR [ebp+0x2],ch
  43b3b5:	add    BYTE PTR [eax],al
  43b3b7:	jge    0x43b3bb
  43b3b9:	add    BYTE PTR [eax],al
  43b3bb:	add    BYTE PTR [ebp+0x2],bh
  43b3be:	add    BYTE PTR [eax],al
  43b3c0:	ins    DWORD PTR es:[edi],dx
  43b3c1:	add    al,BYTE PTR [eax]
  43b3c3:	add    BYTE PTR [ebp+0x2],ch
  43b3c6:	add    BYTE PTR [eax],al
  43b3c8:	cmp    eax,0x3d000002
  43b3cd:	add    al,BYTE PTR [eax]
  43b3cf:	add    BYTE PTR ds:0x2d000002,ch
  43b3d5:	add    al,BYTE PTR [eax]
  43b3d7:	add    BYTE PTR ds:0x3d000002,bh
  43b3dd:	add    al,BYTE PTR [eax]
  43b3df:	add    BYTE PTR ds:0x2d000002,ch
  43b3e5:	add    al,BYTE PTR [eax]
  43b3e7:	add    ch,bh
  43b3e9:	add    DWORD PTR [eax],eax
  43b3eb:	add    ch,bh
  43b3ed:	add    DWORD PTR [eax],eax
  43b3ef:	add    ch,ch
  43b3f1:	add    DWORD PTR [eax],eax
  43b3f3:	add    ch,ch
  43b3f5:	add    DWORD PTR [eax],eax
  43b3f7:	add    BYTE PTR [edi+eiz*8-0x186b0004],dl
  43b3fe:	cld    
  43b3ff:	call   DWORD PTR [edi+eiz*8-0x186b0004]
  43b406:	cld    
  43b407:	call   DWORD PTR [edi+eiz*8-0x186b0004]
  43b40e:	cld    
  43b40f:	call   DWORD PTR [edi+eiz*8-0x186b0004]
  43b416:	cld    
  43b417:	call   DWORD PTR [edi+eiz*8-0x186b0004]
  43b41e:	cld    
  43b41f:	inc    DWORD PTR [eax]
  43b421:	xchg   esp,eax
  43b422:	out    0xfc,eax
  43b424:	call   DWORD PTR [edi+eiz*8-0x186b0004]
  43b42b:	cld    
  43b42c:	call   DWORD PTR [edi+eiz*8-0x186b0004]
  43b433:	cld    
  43b434:	call   DWORD PTR [edi+eiz*8-0x5a6b0004]
  43b43b:	loop   0x43b47c
  43b43d:	das    
  43b43e:	cmp    BYTE PTR [esi],al
  43b440:	mov    ecx,0xfffce7d8
  43b445:	xchg   esp,eax
  43b446:	out    0xfc,eax
  43b448:	call   DWORD PTR [edi+eax*8-0x185272ff]
  43b44f:	cld    
  43b450:	call   DWORD PTR [edi+eiz*8-0x186b0004]
  43b457:	cld    
  43b458:	call   DWORD PTR [edi+eiz*8-0x17d40008]
  43b45f:	loopne 0x43b459
  43b461:	and    ebx,esp
  43b463:	cld    
  43b464:	call   DWORD PTR [edx+edx*8+0x2794fffc]
  43b46b:	add    al,0x0
  43b46d:	xchg   esp,eax
  43b46e:	scas   al,BYTE PTR es:[edi]
  43b46f:	add    BYTE PTR [eax],al
  43b471:	xchg   esp,eax
  43b472:	add    BYTE PTR [edi+0x4],ah
  43b475:	xchg   esp,eax
  43b476:	add    BYTE PTR [eax-0x15],ch
  43b479:	in     al,dx
  43b47a:	fsub   st(6),st
  43b47c:	add    edx,DWORD PTR [eax+eax*1+0x9403df]
  43b483:	mov    DWORD PTR [ebx],0xfa009400
  43b489:	add    edx,DWORD PTR [eax+eax*1+0x9403e7]
  43b490:	out    0x3,eax
  43b492:	xchg   esp,eax
  43b493:	add    bh,ah
  43b495:	mov    ds:0x3e71cb9,eax
  43b49a:	xchg   esp,eax
  43b49b:	add    bh,ah
  43b49d:	add    edx,DWORD PTR [eax+eax*1+0x4096bbe7]
  43b4a4:	out    0x3,eax
  43b4a6:	xchg   esp,eax
  43b4a7:	add    bh,ah
  43b4a9:	add    edx,DWORD PTR [eax+eax*1+0x4093ede7]
  43b4b0:	out    0x3,eax
  43b4b2:	xchg   esp,eax
  43b4b3:	add    bh,ah
  43b4b5:	add    edx,DWORD PTR [eax+eax*1+0x409f87a7]
  43b4bc:	out    0x3,eax
  43b4be:	xchg   esp,eax
  43b4bf:	add    bh,ah
  43b4c1:	add    edx,DWORD PTR [eax+eax*1+0x408cc697]
  43b4c8:	out    0x3,eax
  43b4ca:	xchg   esp,eax
  43b4cb:	add    bh,ah
  43b4cd:	add    edx,DWORD PTR [eax+eax*1+0x4091efc3]
  43b4d4:	out    0x3,eax
  43b4d6:	xchg   esp,eax
  43b4d7:	add    bh,ah
  43b4d9:	add    edx,DWORD PTR [eax+eax*4+0x40858b78]
  43b4e0:	out    0x3,eax
  43b4e2:	xchg   esp,eax
  43b4e3:	add    bh,ah
  43b4e5:	add    edx,DWORD PTR [eax+eiz*1-0x55ff5685]
  43b4ec:	inc    eax
  43b4ed:	add    cl,ch
  43b4ef:	xchg   edi,eax
  43b4f0:	add    BYTE PTR [eax],al
  43b4f2:	jmp    0x30a4dfa
  43b4f7:	jle    0x43b508
  43b4f9:	inc    eax
  43b4fa:	jmp    0x84e2b596
  43b4ff:	and    ecx,edx
  43b501:	adc    al,0xab
  43b503:	retf   0x4049
  43b506:	leave  
  43b507:	out    0x79,eax
  43b509:	mov    dl,0xf9
  43b50b:	mov    dl,0xa8
  43b50d:	stos   BYTE PTR es:[edi],al
  43b50e:	lods   al,BYTE PTR ds:[esi]
  43b50f:	sbb    al,0x63
  43b511:	inc    eax
  43b512:	cdq    
  43b513:	dec    esp
  43b514:	xlat   BYTE PTR ds:[ebx]
  43b515:	and    cl,BYTE PTR [ecx+ecx*4-0x7a]
  43b519:	dec    eax
  43b51a:	add    bl,dl
  43b51c:	pop    esp
  43b51d:	inc    eax
  43b51e:	fadd   DWORD PTR ds:0x9daa92b1
  43b524:	dec    BYTE PTR [edx+0x3f79ff10]
  43b52a:	inc    eax
  43b52b:	ds jnp 0x43b571
  43b52e:	inc    esp
  43b52f:	adc    BYTE PTR ds:0x92196889,cl
  43b535:	aas    
  43b536:	data16 mov bl,0xaf
  43b539:	mov    eax,ds:0x19427e2e
  43b53e:	xchg   ecx,eax
  43b53f:	push   ecx
  43b540:	int3   
  43b541:	aas    
  43b542:	jle    0x43b599
  43b544:	mov    ebx,0xc217108b
  43b549:	inc    eax
  43b54a:	inc    ebx
  43b54b:	sub    ah,BYTE PTR [ebx+0x1400353e]
  43b551:	fs push ebx
  43b553:	(bad)  
  43b554:	jo     0x43b4dd
  43b556:	lock pop ecx
  43b558:	xor    BYTE PTR [edi+0x3e],dl
  43b55b:	popf   
  43b55c:	pop    ebx
  43b55d:	mov    ecx,ebx
  43b55f:	rcl    BYTE PTR [ebx],1
  43b561:	aam    0xe4
  43b563:	dec    edi
  43b564:	add    cl,BYTE PTR [edx+0x3d]
  43b567:	add    BYTE PTR [esi+ebx*8],cl
  43b56a:	outs   dx,BYTE PTR ds:[esi]
  43b56b:	jecxz  0x43b5ae
  43b56d:	shl    BYTE PTR [ecx],cl
  43b56f:	das    
  43b570:	jns    0x43b5f1
  43b572:	push   ds
  43b573:	inc    esp
  43b574:	xchg   ebp,eax
  43b575:	hlt    
  43b576:	push   cs
  43b577:	stos   BYTE PTR es:[edi],al
  43b578:	xor    eax,0x38e30876
  43b57d:	shl    dl,0x44
  43b580:	push   ss
  43b581:	mov    eax,ds:0xbd0af3cc
  43b586:	(bad)  [edx-0x69]
  43b589:	mov    eax,edi
  43b58b:	inc    ebp
  43b58c:	cwde   
  43b58d:	cwde   
  43b58e:	mov    edi,0xa6a0b391
  43b593:	mov    al,ds:0x469be3e4
  43b598:	sar    BYTE PTR [ecx],0xf
  43b59b:	or     al,0xc8
  43b59d:	jge    0x43b61d
  43b59f:	jne    0x43b56c
  43b5a1:	xchg   ebp,eax
  43b5a2:	inc    eax
  43b5a3:	dec    ebp
  43b5a4:	in     eax,0x44
  43b5a6:	in     al,0xa7
  43b5a8:	ds daa 
  43b5aa:	xor    esi,DWORD PTR ds:0x53e59315
  43b5b0:	xor    BYTE PTR [ecx+0x70005ddd],ah
  43b5b6:	fwait
  43b5b7:	push   ebp
  43b5b8:	cmp    eax,DWORD PTR [esi]
  43b5ba:	xchg   DWORD PTR [edx-0x61be6da6],ecx
  43b5c0:	lock fsub QWORD PTR [eax+eax*8]
  43b5c4:	push   esp
  43b5c5:	fcomp  DWORD PTR [eax+0x30]
  43b5c8:	popa   
  43b5c9:	jl     0x43b5ac
  43b5cb:	sbb    DWORD PTR [edx-0x3a],0xffffffcc
  43b5cf:	sbb    eax,0xd3e5b45d
  43b5d4:	xlat   BYTE PTR ds:[bx]
  43b5d6:	mov    eax,esi
  43b5d8:	repz mov ah,BYTE PTR [edi-0x3e8f3766]
  43b5df:	js     0x43b64f
  43b5e1:	xchg   esp,eax
  43b5e2:	and    esi,DWORD PTR [ebp+0x7a080b94]
  43b5e8:	std    
  43b5e9:	lds    eax,FWORD PTR [edi-0x40]
  43b5ec:	and    cl,BYTE PTR [ecx-0x6b000319]
  43b5f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43b5f3:	mov    al,0xca
  43b5f5:	sar    BYTE PTR [ebx-0x50],1
  43b5f8:	retf   
  43b5f9:	enter  0xb093,0xf4
  43b5fd:	mov    bl,0xf8
  43b5ff:	and    BYTE PTR [esi],al
  43b601:	ret    
  43b602:	inc    esi
  43b603:	ins    DWORD PTR es:[edi],dx
  43b604:	cmp    ecx,DWORD PTR [esi-0x64085c6e]
  43b60a:	sbb    eax,0x2af33560
  43b60f:	jno    0x43b5a1
  43b611:	cmp    dh,BYTE PTR [ebp-0x597c0d7d]
  43b617:	shr    DWORD PTR [ebx],cl
  43b619:	add    BYTE PTR [ecx],dh
  43b61b:	add    dl,ah
  43b61d:	push   edi
  43b61e:	mov    esi,DWORD PTR [edx-0x33]
  43b621:	out    dx,al
  43b622:	imul   edx,DWORD PTR [edi],0xfffffff8
  43b625:	sbb    al,0x18
  43b627:	mov    ds:0x2ce8410b,eax
  43b62c:	mov    al,ds:0x9ea7d3e9
  43b631:	mov    cl,0xfd
  43b633:	ret    
  43b634:	xchg   edi,eax
  43b635:	add    al,BYTE PTR [ecx-0x2e]
  43b638:	jle    0x43b61e
  43b63a:	mov    ebx,0xd6bc21b6
  43b63f:	popf   
  43b640:	(bad)  
  43b642:	add    BYTE PTR [edx],dh
  43b644:	iret   
  43b645:	loopne 0x43b5ea
  43b647:	and    eax,0x884afae2
  43b64c:	js     0x43b65c
  43b64e:	retf   
  43b64f:	sub    ebx,DWORD PTR [ebx+eiz*8+0x5530c28b]
  43b656:	xor    eax,0x20b9b87c
  43b65b:	add    BYTE PTR [esi+ebx*8+0x5a],bh
  43b65f:	sbb    DWORD PTR [ebp-0x40],esi
  43b662:	fcom   DWORD PTR ds:0xf44f405c
  43b668:	mov    BYTE PTR [edx+0x5fa118ec],cl
  43b66e:	dec    edx
  43b66f:	je     0x43b670
  43b671:	inc    eax
  43b672:	aas    
  43b673:	cli    
  43b674:	ja     0x43b62d
  43b676:	daa    
  43b677:	sbb    DWORD PTR [ebx],eax
  43b679:	and    edx,esi
  43b67b:	frstor [edx-0x56]
  43b67e:	add    BYTE PTR [eax+0x617b080f],ch
  43b684:	sbb    DWORD PTR [eax],ecx
  43b686:	push   ecx
  43b687:	dec    ebx
  43b688:	mov    edi,0x5c48b508
  43b68d:	aad    0xaa
  43b68f:	ins    BYTE PTR es:[edi],dx
  43b690:	sbb    DWORD PTR [edx-0x1774832a],edx
  43b696:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43b697:	adc    DWORD PTR [ebx+0x1957ead3],eax
  43b69d:	or     esp,DWORD PTR [edi]
  43b69f:	mul    esi
  43b6a1:	pop    ds
  43b6a2:	mov    eax,ds:0x9bd1e674
  43b6a7:	jns    0x43b6c2
  43b6a9:	int3   
  43b6aa:	xchg   edi,eax
  43b6ab:	cli    
  43b6ac:	jecxz  0x43b630
  43b6ae:	pusha  
  43b6af:	adc    BYTE PTR [edi],bh
  43b6b1:	pop    ss
  43b6b2:	leave  
  43b6b3:	out    0x16,al
  43b6b5:	(bad)  
  43b6b6:	push   0xffffff96
  43b6b8:	les    eax,FWORD PTR ds:0x21840550
  43b6be:	xchg   ebp,eax
  43b6bf:	repnz adc eax,0xf9a1ea78
  43b6c5:	mov    WORD PTR [edx-0x49],fs
  43b6c8:	inc    ebx
  43b6c9:	fadd   st,st(3)
  43b6cb:	das    
  43b6cc:	adc    eax,0x19627cc8
  43b6d1:	gs aas 
  43b6d3:	and    eax,0x2ce8ff99
  43b6d8:	mov    cl,0x34
  43b6da:	or     eax,0x2082fb8
  43b6df:	jmp    0xab93c3
  43b6e4:	or     ebp,edx
  43b6e6:	xor    eax,0x3e42a3af
  43b6eb:	out    0xe9,al
  43b6ed:	outs   dx,BYTE PTR ds:[esi]
  43b6ee:	jb     0x43b6ee
  43b6f0:	fisubr WORD PTR [ecx]
  43b6f2:	ss cli 
  43b6f4:	xor    ah,0xcd
  43b6f7:	or     cl,bh
  43b6f9:	and    eax,0x2e2020ea
  43b6fe:	aaa    
  43b6ff:	dec    edi
  43b700:	jb     0x43b69b
  43b702:	mov    edi,0x7da2de36
  43b707:	dec    edi
  43b708:	xor    eax,0x3f8b2d93
  43b70d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43b70e:	push   cs
  43b70f:	dec    esi
  43b710:	gs jns 0x43b756
  43b713:	and    bl,bh
  43b715:	pop    es
  43b716:	sub    al,0xcc
  43b718:	sbb    ah,0x2a
  43b71b:	mov    bh,0x6b
  43b71d:	dec    ecx
  43b71e:	dec    ebp
  43b71f:	xchg   edi,eax
  43b720:	jmp    0x58b1da81
  43b725:	cld    
  43b726:	mov    ds:0x7a95d929,eax
  43b72b:	push   edx
  43b72c:	mov    edi,0x726719c1
  43b731:	jg     0x43b788
  43b733:	xchg   esi,eax
  43b734:	and    BYTE PTR [ebx],bl
  43b736:	mov    ecx,0x17f51699
  43b73b:	lahf   
  43b73c:	mov    esi,0x16245e63
  43b741:	mov    BYTE PTR [eax+0xf5a1be7],ch
  43b747:	or     eax,0x98ba7c00
  43b74c:	pop    ds
  43b74d:	inc    ebp
  43b74e:	mov    edi,0x75780003
  43b753:	ror    BYTE PTR [edx],1
  43b755:	cmp    eax,0xb5000003
  43b75a:	pop    ss
  43b75b:	inc    eax
  43b75c:	add    BYTE PTR ds:0x3c004042,al
  43b762:	add    al,BYTE PTR [eax]
  43b764:	add    BYTE PTR [ebx],ch
  43b766:	add    al,BYTE PTR [eax]
  43b768:	add    BYTE PTR [edx],bh
  43b76a:	add    eax,DWORD PTR [eax]
  43b76c:	add    BYTE PTR ds:0x3d00401a,dh
  43b772:	inc    ecx
  43b773:	inc    eax
  43b774:	add    ch,bh
  43b776:	add    al,BYTE PTR [eax]
  43b778:	add    bl,ch
  43b77a:	add    al,BYTE PTR [eax]
  43b77c:	add    dl,bl
  43b77e:	add    al,BYTE PTR [eax]
  43b780:	add    ch,bh
  43b782:	add    al,BYTE PTR [eax]
  43b784:	add    ch,dh
  43b786:	push   ss
  43b787:	inc    eax
  43b788:	add    ch,ch
  43b78a:	add    al,BYTE PTR [eax]
  43b78c:	add    dh,bl
  43b78e:	add    al,BYTE PTR [eax]
  43b790:	add    dl,al
  43b792:	add    al,BYTE PTR [eax]
  43b794:	add    BYTE PTR [ebp-0x53fffffe],bh
  43b79a:	add    al,BYTE PTR [eax]
  43b79c:	add    BYTE PTR [ebp-0x56fffffe],ch
  43b7a2:	xchg   BYTE PTR [eax],bh
  43b7a4:	add    BYTE PTR [ecx+0x66],bh
  43b7a7:	inc    eax
  43b7a8:	add    BYTE PTR [ecx+0x3886],dh
  43b7ae:	jno    0x43b816
  43b7b0:	inc    eax
  43b7b1:	add    BYTE PTR [ebp-0x7a],bh
  43b7b4:	cmp    BYTE PTR [eax],al
  43b7b6:	aad    0x6f
  43b7b8:	cmp    BYTE PTR [eax],al
  43b7ba:	mov    ebp,0xd500386f
  43b7bf:	outs   dx,DWORD PTR ds:[esi]
  43b7c0:	cmp    BYTE PTR [eax],al
  43b7c2:	popf   
  43b7c3:	outs   dx,DWORD PTR ds:[esi]
  43b7c4:	cmp    BYTE PTR [eax],al
  43b7c6:	aad    0x6f
  43b7c8:	cmp    BYTE PTR [eax],al
  43b7ca:	xchg   esp,eax
  43b7cb:	pop    ss
  43b7cc:	(bad)  
  43b7cd:	aas    
  43b7ce:	xchg   esp,eax
  43b7cf:	pop    ds
  43b7d0:	(bad)  
  43b7d1:	aas    
  43b7d2:	xchg   esp,eax
  43b7d3:	cmp    ecx,DWORD PTR [edi-0x70e86bc1]
  43b7d9:	aas    
  43b7da:	xchg   esp,eax
  43b7db:	aas    
  43b7dc:	(bad)  
  43b7dd:	aas    
  43b7de:	xchg   esp,eax
  43b7df:	inc    edi
  43b7e0:	(bad)  
  43b7e1:	aas    
  43b7e2:	xchg   esp,eax
  43b7e3:	push   ebx
  43b7e4:	nop
  43b7e5:	aas    
  43b7e6:	xchg   esp,eax
  43b7e7:	dec    edi
  43b7e8:	nop
  43b7e9:	aas    
  43b7ea:	xchg   esp,eax
  43b7eb:	addr16 nop
  43b7ed:	aas    
  43b7ee:	xchg   esp,eax
  43b7ef:	sub    ecx,DWORD PTR [edi-0x70d46bc1]
  43b7f5:	aas    
  43b7f6:	xchg   esp,eax
  43b7f7:	inc    edi
  43b7f8:	(bad)  
  43b7f9:	aas    
  43b7fa:	xchg   esp,eax
  43b7fb:	repz mov ?,WORD PTR [edi]
  43b7fe:	xchg   esp,eax
  43b7ff:	repz mov ?,WORD PTR [edi]
  43b802:	xchg   esp,eax
  43b803:	and    ecx,DWORD PTR [edi-0x704c6bc1]
  43b809:	aas    
  43b80a:	xchg   esp,eax
  43b80b:	ret    
  43b80c:	(bad)  
  43b80d:	aas    
  43b80e:	xchg   esp,eax
  43b80f:	or     DWORD PTR [esi+0x5794003f],0xffffff8f
  43b816:	aas    
  43b817:	xchg   esp,eax
  43b818:	imul   ecx,DWORD PTR [esi-0x71586bc1],0x3f
  43b81f:	xchg   esp,eax
  43b820:	inc    ebx
  43b821:	(bad)  
  43b822:	aas    
  43b823:	xchg   esp,eax
  43b824:	dec    edi
  43b825:	(bad)  
  43b826:	aas    
  43b827:	xchg   esp,eax
  43b828:	mov    ebx,0x9b943f8e
  43b82d:	mov    ?,WORD PTR [edi]
  43b82f:	xchg   esp,eax
  43b830:	sti    
  43b831:	lea    edi,[edi]
  43b833:	xchg   esp,eax
  43b834:	fisttp WORD PTR [esi-0x71ec6bc1]
  43b83a:	aas    
  43b83b:	xchg   esp,eax
  43b83c:	inc    ebx
  43b83d:	mov    ?,WORD PTR [edi]
  43b83f:	xchg   esp,eax
  43b840:	arpl   WORD PTR [esi+0x4b00943f],cx
  43b846:	xchg   edx,eax
  43b847:	stos   DWORD PTR es:[edi],eax
  43b848:	add    BYTE PTR [edi-0x6e],ah
  43b84b:	mov    ds:0x9b928300,eax
  43b850:	add    bl,cl
  43b852:	xchg   edx,eax
  43b853:	xchg   ebx,eax
  43b854:	add    bl,cl
  43b856:	xchg   edx,eax
  43b857:	mov    eax,DWORD PTR [eax]
  43b859:	or     edx,DWORD PTR [ebx-0x6cf0ff7d]
  43b85f:	jnp    0x43b861
  43b861:	daa    
  43b862:	xchg   ebx,eax
  43b863:	jae    0x43b865
  43b865:	xchg   ebx,eax
  43b866:	je     0x43b8d3
  43b868:	add    BYTE PTR [edi+0x74],dh
  43b86b:	arpl   WORD PTR [eax],ax
  43b86d:	push   ebx
  43b86e:	je     0x43b8cb
  43b870:	add    BYTE PTR [edi],bh
  43b872:	je     0x43b847
  43b874:	add    BYTE PTR [edi],bl
  43b876:	je     0x43b878
  43b878:	retf   
  43b879:	add    BYTE PTR [ebx],ch
  43b87b:	je     0x43b840
  43b87d:	add    bh,ch
  43b87f:	jae    0x43b83c
  43b881:	add    bh,bh
  43b883:	jae    0x43b838
  43b885:	add    bl,bh
  43b887:	jae    0x43b834
  43b889:	add    bl,ah
  43b88b:	jae    0x43b830
  43b88d:	add    BYTE PTR [edi-0x78ff646d],dl
  43b893:	xchg   ebx,eax
  43b894:	xchg   ebx,eax
  43b895:	add    BYTE PTR [ebx+0x4b008b93],ch
  43b89b:	xchg   ebx,eax
  43b89c:	add    DWORD PTR [eax],0x5b
  43b89f:	xchg   ebx,eax
  43b8a0:	jnp    0x43b8a2
  43b8a2:	addr16 xchg ebx,eax
  43b8a4:	jae    0x43b8a6
  43b8a6:	xlat   BYTE PTR ds:[ebx]
  43b8a7:	xchg   edx,eax
  43b8a8:	imul   eax,DWORD PTR [eax],0xffffffbf
  43b8ab:	xchg   edx,eax
  43b8ac:	arpl   WORD PTR [eax],ax
  43b8ae:	adc    edx,DWORD PTR [ebx-0x6cf8ffa5]
  43b8b4:	rol    DWORD PTR [eax],cl
  43b8b6:	jmp    0x43b84a
  43b8b8:	retf   
  43b8b9:	add    BYTE PTR [edi],bl
  43b8bb:	xchg   edx,eax
  43b8bc:	ret    
  43b8bd:	add    BYTE PTR [eax],al
  43b8bf:	sub    DWORD PTR [esi],esp
  43b8c1:	adc    al,0x0
  43b8c3:	push   ecx
  43b8c4:	push   es
  43b8c5:	adc    al,0x0
  43b8c7:	imul   eax,DWORD PTR [esi],0x5910014
  43b8cd:	adc    al,0x0
  43b8cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43b8d0:	add    eax,0x25c50014
  43b8d5:	adc    al,0x0
  43b8d7:	loope  0x43b8fe
  43b8d9:	adc    al,0x0
  43b8db:	add    DWORD PTR [eax],eax
  43b8dd:	and    eax,0x25050014
  43b8e2:	adc    al,0x0
  43b8e4:	adc    DWORD PTR ds:0x4b50014,eax
  43b8ea:	adc    al,0x0
  43b8ec:	cdq    
  43b8ed:	add    al,0x14
  43b8ef:	add    cl,ch
  43b8f1:	xchg   edi,eax
  43b8f2:	add    BYTE PTR [eax],al
  43b8f4:	jmp    0xe943b990
  43b8f9:	xchg   edi,eax
  43b8fa:	add    BYTE PTR [eax],al
  43b8fc:	jmp    0xe943b998
  43b901:	xchg   edi,eax
  43b902:	add    BYTE PTR [eax],al
  43b904:	push   esi
  43b905:	sti    
  43b906:	adc    al,BYTE PTR [eax]
  43b908:	jmp    0xe943b9a4
  43b90d:	xchg   edi,eax
  43b90e:	add    BYTE PTR [eax],al
  43b910:	jmp    0x1e43b9ac
  43b915:	xchg   edx,eax
  43b916:	adc    al,BYTE PTR [eax]
  43b918:	jmp    0xe943b9b4
  43b91d:	xchg   edi,eax
  43b91e:	add    BYTE PTR [eax],al
  43b920:	jmp    0x4743b9bc
  43b925:	jno    0x43b939
  43b927:	add    cl,ch
  43b929:	xchg   edi,eax
  43b92a:	add    BYTE PTR [eax],al
  43b92c:	jmp    0xe943b9c8
  43b931:	xchg   edi,eax
  43b932:	add    BYTE PTR [eax],al
  43b934:	dec    esp
  43b935:	rcl    DWORD PTR [edx],1
  43b937:	add    BYTE PTR [eax],al
  43b939:	jge    0x43b93a
  43b93b:	(bad)  
  43b93c:	jmp    FWORD PTR [ebp-0x1]
  43b93f:	(bad)  
  43b940:	inc    DWORD PTR [eax]
  43b942:	ins    DWORD PTR es:[edi],dx
  43b943:	(bad)  
  43b944:	(bad)  
  43b945:	call   FWORD PTR [edi]
  43b947:	adc    bh,BYTE PTR [edx]
  43b949:	add    BYTE PTR [ebp-0x1],bh
  43b94c:	(bad)  
  43b94d:	jmp    FWORD PTR [ebp-0x1]
  43b950:	(bad)  
  43b951:	jmp    FWORD PTR [ebp-0x1]
  43b954:	(bad)  
  43b955:	(bad)  
  43b956:	cli    
  43b957:	adc    bh,BYTE PTR [edx]
  43b959:	add    BYTE PTR ds:0x2dffffff,bh
  43b95f:	(bad)  
  43b960:	(bad)  
  43b961:	jmp    FWORD PTR ds:0xb7ffffff
  43b967:	adc    edi,DWORD PTR [edx]
  43b969:	add    BYTE PTR ds:0x2dffffff,bh
  43b96f:	(bad)  
  43b970:	(bad)  
  43b971:	jmp    FWORD PTR ds:0x37ffffff
  43b977:	inc    eax
  43b978:	cmp    al,BYTE PTR [eax]
  43b97a:	std    
  43b97b:	(bad)  
  43b97c:	(bad)  
  43b97d:	(bad)  
  43b97e:	in     eax,dx
  43b97f:	(bad)  
  43b980:	(bad)  
  43b981:	(bad)  
  43b982:	in     eax,dx
  43b983:	(bad)  
  43b984:	(bad)  
  43b985:	inc    ebp
  43b987:	adc    DWORD PTR [edx],edi
  43b989:	add    ch,bh
  43b98b:	(bad)  
  43b98c:	(bad)  
  43b98d:	(bad)  
  43b98e:	in     eax,dx
  43b98f:	(bad)  
  43b990:	(bad)  
  43b991:	(bad)  
  43b992:	in     eax,dx
  43b993:	(bad)  
  43b994:	(bad)  
  43b995:	push   DWORD PTR [ebp+0x13]
  43b998:	cmp    al,BYTE PTR [eax]
  43b99a:	mov    ebp,0xadfffffe
  43b99f:	(bad)  
  43b9a0:	(bad)  
  43b9a1:	jmp    FWORD PTR [ebp+0xfffffe]
  43b9a7:	pusha  
  43b9a8:	adc    edi,DWORD PTR [edx]
  43b9aa:	add    BYTE PTR [ebp-0x52000002],bh
  43b9b0:	(bad)  
  43b9b1:	(bad)  
  43b9b2:	call   DWORD PTR [ecx+ebp*8+0x6c94fffc]
  43b9b9:	cmp    BYTE PTR [esi],bh
  43b9bb:	xchg   esp,eax
  43b9bc:	out    0xfc,eax
  43b9be:	call   DWORD PTR [edi+eiz*8-0x186b0004]
  43b9c5:	cld    
  43b9c6:	call   DWORD PTR [esp+esi*8-0x186bc1c8]
  43b9cd:	cld    
  43b9ce:	call   DWORD PTR [edi+eiz*8-0x186b0004]
  43b9d5:	cld    
  43b9d6:	call   DWORD PTR [ecx+ebp*4-0x186bc05d]
  43b9dd:	cld    
  43b9de:	call   DWORD PTR [edi+eiz*8-0x186b0004]
  43b9e5:	cld    
  43b9e6:	call   DWORD PTR [edi+ebx*2-0x186bc05d]
  43b9ed:	cld    
  43b9ee:	call   DWORD PTR [edi+eiz*8-0x186b0004]
  43b9f5:	cld    
  43b9f6:	call   DWORD PTR [ebp+eiz*4-0x186bc05d]
  43b9fd:	cld    
  43b9fe:	call   DWORD PTR [edi+eiz*8-0x186b0004]
  43ba05:	cld    
  43ba06:	call   DWORD PTR [ebx+ecx*8-0x6bffc060]
  43ba0d:	out    0xfc,eax
  43ba0f:	call   DWORD PTR [edi+eiz*8-0x186b0004]
  43ba16:	cld    
  43ba17:	call   DWORD PTR [ebx+eax*1-0x186bc058]
  43ba1e:	cld    
  43ba1f:	call   DWORD PTR [edi+eiz*8-0x186b0004]
  43ba26:	cld    
  43ba27:	call   DWORD PTR [esp+ebx*4+0x943ecc]
  43ba2e:	out    0x3,eax
  43ba30:	xchg   esp,eax
  43ba31:	add    bh,ah
  43ba33:	add    edx,DWORD PTR [eax+eax*1+0x9403e7]
  43ba3a:	hlt    
  43ba3b:	ror    dl,cl
  43ba3d:	add    bh,ah
  43ba3f:	add    edx,DWORD PTR [eax+eax*1+0x9403e7]
  43ba46:	out    0x3,eax
  43ba48:	xchg   esp,eax
  43ba49:	add    dh,dh
  43ba4b:	shr    BYTE PTR [edx-0x6bfc1900],cl
  43ba51:	add    bh,ah
  43ba53:	add    edx,DWORD PTR [eax+eax*1+0x9403e7]
  43ba5a:	nop
  43ba5b:	ror    BYTE PTR [edx-0x6bfc1900],cl
  43ba61:	add    bh,ah
  43ba63:	add    edx,DWORD PTR [eax+eax*1+0x9403e7]
  43ba6a:	sub    dl,dl
  43ba6c:	push   0x0
  43ba6e:	out    0x3,eax
  43ba70:	add    BYTE PTR [eax+eax*1+0x9403e7],dl
  43ba77:	out    0x3,eax
  43ba79:	xchg   esp,eax
  43ba7a:	add    ah,ah
  43ba7c:	ror    edx,1
  43ba7e:	add    bh,ah
  43ba80:	add    edx,DWORD PTR [eax+eax*1+0x9403e7]
  43ba87:	out    0x3,eax
  43ba89:	xchg   esp,eax
  43ba8a:	add    BYTE PTR [esi],bl
  43ba8c:	shr    BYTE PTR [edx-0x6bfc1900],cl
  43ba92:	add    bh,ah
  43ba94:	add    edx,DWORD PTR [eax+eax*1+0x9403e7]
  43ba9b:	jae    0x43ba6f
  43ba9d:	mov    al,BYTE PTR [eax]
  43ba9f:	out    0x3,eax
  43baa1:	xchg   esp,eax
  43baa2:	add    bh,ah
  43baa4:	add    edx,DWORD PTR [eax+eax*1+0x97e900]
  43baab:	add    BYTE PTR [esi+eax*8-0x6816ffef],cl
  43bab2:	add    BYTE PTR [eax],al
  43bab4:	jmp    0xe943bb50
  43bab9:	xchg   edi,eax
  43baba:	add    BYTE PTR [eax],al
  43babc:	or     ah,BYTE PTR [edi+0xf]
  43babf:	add    cl,ch
  43bac1:	xchg   edi,eax
  43bac2:	add    BYTE PTR [eax],al
  43bac4:	jmp    0xe943bb60
  43bac9:	xchg   edi,eax
  43baca:	add    BYTE PTR [eax],al
  43bacc:	rol    BYTE PTR [esi+0xf],0x0
  43bad0:	jmp    0xe943bb6c
  43bad5:	add    BYTE PTR [edi-0x68170000],dl
  43badb:	add    BYTE PTR [eax],al
  43badd:	pop    ebx
  43bade:	addr16 verw cx
  43bae2:	xchg   edi,eax
  43bae3:	add    BYTE PTR [eax],al
  43bae5:	jmp    0xe943bb81
  43baea:	xchg   edi,eax
  43baeb:	add    BYTE PTR [eax],al
  43baed:	mov    dh,0x43
  43baef:	verw   cx
  43baf2:	xchg   edi,eax
  43baf3:	add    BYTE PTR [eax],al
  43baf5:	jmp    0xe943bb91
  43bafa:	xchg   edi,eax
  43bafb:	add    BYTE PTR [eax],al
  43bafd:	gs jecxz 0x43bb0e
  43bb00:	add    cl,ch
  43bb02:	xchg   edi,eax
  43bb03:	add    BYTE PTR [eax],al
  43bb05:	jmp    0xe943bba1
  43bb0a:	xchg   edi,eax
  43bb0b:	add    BYTE PTR [eax],al
  43bb0d:	cwde   
  43bb0e:	ret    
  43bb0f:	push   cs
  43bb10:	add    cl,ch
  43bb12:	xchg   edi,eax
  43bb13:	add    BYTE PTR [eax],al
  43bb15:	jmp    0xe943bbb1
  43bb1a:	xchg   edi,eax
  43bb1b:	add    BYTE PTR [eax],al
  43bb1d:	retf   0xeec
  43bb20:	add    BYTE PTR [eax],al
  43bb22:	lods   eax,DWORD PTR ds:[esi]
  43bb23:	add    eax,DWORD PTR [eax]
  43bb25:	add    BYTE PTR [ebp-0x42fffffd],ch
  43bb2b:	add    eax,DWORD PTR [eax]
  43bb2d:	add    BYTE PTR [eax+0x1b],ah
  43bb30:	cmp    al,BYTE PTR [eax]
  43bb32:	lods   eax,DWORD PTR ds:[esi]
  43bb33:	add    eax,DWORD PTR [eax]
  43bb35:	add    BYTE PTR [ebp+0x3],ch
  43bb3b:	jge    0x43bb40
  43bb3d:	add    BYTE PTR [eax],al
  43bb3f:	nop
  43bb40:	sbb    eax,0x36d003a
  43bb45:	add    BYTE PTR [eax],al
  43bb47:	ins    DWORD PTR es:[edi],dx
  43bb48:	add    eax,DWORD PTR [eax]
  43bb4a:	add    BYTE PTR [ebp+0x3],bh
  43bb4d:	add    BYTE PTR [eax],al
  43bb4f:	push   eax
  43bb50:	sbb    al,0x3a
  43bb52:	add    BYTE PTR [ebp+0x3],ch
  43bb55:	add    BYTE PTR [eax],al
  43bb57:	ins    DWORD PTR es:[edi],dx
  43bb58:	add    eax,DWORD PTR [eax]
  43bb5a:	add    BYTE PTR ds:0x7d000003,bh
  43bb60:	sbb    al,0x3a
  43bb62:	add    BYTE PTR ds:0x2d000003,ch
  43bb68:	add    eax,DWORD PTR [eax]
  43bb6a:	add    BYTE PTR ds:0x3a000003,bh
  43bb70:	sbb    edi,DWORD PTR [edx]
  43bb72:	add    BYTE PTR ds:0x2d000003,ch
  43bb78:	add    eax,DWORD PTR [eax]
  43bb7a:	add    ch,bh
  43bb7c:	add    al,BYTE PTR [eax]
  43bb7e:	add    BYTE PTR [ebx-0x12ffc5e6],bl
  43bb84:	add    al,BYTE PTR [eax]
  43bb86:	add    ch,ch
  43bb88:	add    al,BYTE PTR [eax]
  43bb8a:	add    ch,bh
  43bb8c:	add    al,BYTE PTR [eax]
  43bb8e:	add    BYTE PTR [ebx-0x12ffc5e6],bh
  43bb94:	add    al,BYTE PTR [eax]
  43bb96:	add    ch,ch
  43bb98:	add    al,BYTE PTR [eax]
  43bb9a:	add    BYTE PTR [ecx+ebx*8-0x6bff0004],dl
  43bba1:	enter  0x3e27,0x94
  43bba5:	frndint 
  43bba7:	call   DWORD PTR [ecx+ebx*8-0x266b0004]
  43bbae:	cld    
  43bbaf:	call   DWORD PTR [edi+edi*1-0x266bc237]
  43bbb6:	cld    
  43bbb7:	call   DWORD PTR [ecx+ebx*8-0x286b0004]
  43bbbe:	cld    
  43bbbf:	call   DWORD PTR [edi+eax*1-0x286bc237]
  43bbc6:	cld    
  43bbc7:	call   DWORD PTR [edi+edx*8-0x286b0004]
  43bbce:	cld    
  43bbcf:	call   DWORD PTR [esi+esi*4-0x286bc236]
  43bbd6:	cld    
  43bbd7:	call   DWORD PTR [edi+edx*8-0x286b0004]
  43bbde:	cld    
  43bbdf:	call   DWORD PTR [ebx+edx*4-0x286bc236]
  43bbe6:	cld    
  43bbe7:	call   DWORD PTR [edi+edx*8-0x286b0004]
  43bbee:	cld    
  43bbef:	call   DWORD PTR [ebp+ecx*1-0x286bc236]
  43bbf6:	cld    
  43bbf7:	call   DWORD PTR [edi+edx*8-0x286b0004]
  43bbfe:	cld    
  43bbff:	call   DWORD PTR [ebp+edi*4-0x6bffc236]
  43bc06:	xlat   BYTE PTR ds:[ebx]
  43bc07:	cld    
  43bc08:	call   DWORD PTR [edi+edx*8-0x286b0004]
  43bc0f:	cld    
  43bc10:	call   DWORD PTR [esp+edi*1+0x943dcc]
  43bc17:	out    0x3,eax
  43bc19:	xchg   esp,eax
  43bc1a:	add    bh,ah
  43bc1c:	add    edx,DWORD PTR [eax+eax*1+0x9403e7]
  43bc23:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43bc24:	int3   
  43bc25:	add    DWORD PTR [eax],0x9403e7
  43bc2b:	out    0x3,eax
  43bc2d:	xchg   esp,eax
  43bc2e:	add    bh,ah
  43bc30:	add    edx,DWORD PTR [eax+eax*1+0x61cc7c]
  43bc37:	out    0x3,eax
  43bc39:	xchg   esp,eax
  43bc3a:	add    bh,ah
  43bc3c:	add    edx,DWORD PTR [eax+eax*1+0x9403e7]
  43bc43:	out    dx,eax
  43bc44:	mov    bl,0xc1
  43bc46:	add    bh,ah
  43bc48:	add    edx,DWORD PTR [eax+eax*1+0x9403e7]
  43bc4f:	out    0x3,eax
  43bc51:	xchg   esp,eax
  43bc52:	add    bl,dl
  43bc54:	mov    fs,WORD PTR [ecx-0x6bfc1900]
  43bc5a:	add    bh,ah
  43bc5c:	add    edx,DWORD PTR [eax+eax*1+0x9403e7]
  43bc63:	mov    WORD PTR [ebp+0x3e70081],cs
  43bc69:	add    BYTE PTR [eax+eax*1+0x9403e7],dl
  43bc70:	out    0x3,eax
  43bc72:	xchg   esp,eax
  43bc73:	add    BYTE PTR [edi],dl
  43bc75:	bound  ax,DWORD PTR [eax]
  43bc78:	out    0x3,eax
  43bc7a:	xchg   esp,eax
  43bc7b:	add    bh,ah
  43bc7d:	add    edx,DWORD PTR [eax+eax*1+0x9403e7]
  43bc84:	xchg   edx,eax
  43bc85:	xchg   esp,eax
  43bc86:	ret    0xe700
  43bc89:	add    edx,DWORD PTR [eax+eax*1+0x9403e7]
  43bc90:	add    cl,ch
  43bc92:	xchg   edi,eax
  43bc93:	add    BYTE PTR [eax],al
  43bc95:	mov    bl,0x8
  43bc97:	push   cs
  43bc98:	add    cl,ch
  43bc9a:	xchg   edi,eax
  43bc9b:	add    BYTE PTR [eax],al
  43bc9d:	jmp    0xe943bd39
  43bca2:	xchg   edi,eax
  43bca3:	add    BYTE PTR [eax],al
  43bca5:	and    ebx,DWORD PTR [edi]
  43bca7:	push   cs
  43bca8:	add    cl,ch
  43bcaa:	xchg   edi,eax
  43bcab:	add    BYTE PTR [eax],al
  43bcad:	jmp    0xe943bd49
  43bcb2:	xchg   edi,eax
  43bcb3:	add    BYTE PTR [eax],al
  43bcb5:	fadd   QWORD PTR [esi]
  43bcb7:	push   cs
  43bcb8:	add    cl,ch
  43bcba:	xchg   edi,eax
  43bcbb:	add    BYTE PTR [eax],al
  43bcbd:	jmp    0xe943bd59
  43bcc2:	xchg   edi,eax
  43bcc3:	add    BYTE PTR [eax],al
  43bcc5:	pop    edx
  43bcc6:	and    ecx,DWORD PTR [ebx]
  43bcc8:	add    cl,ch
  43bcca:	xchg   edi,eax
  43bccb:	add    BYTE PTR [eax],al
  43bccd:	jmp    0x4453d2
  43bcd2:	cmp    DWORD PTR ds:0xfd36000c,ecx
  43bcd8:	or     eax,DWORD PTR [eax]
  43bcda:	sub    esi,eax
  43bcdc:	inc    eax
  43bcdd:	add    cl,ch
  43bcdf:	xchg   edi,eax
  43bce0:	add    BYTE PTR [eax],al
  43bce2:	(bad)  
  43bce3:	out    0x40,al
  43bce5:	add    BYTE PTR [ecx-0x5affbf1a],cl
  43bceb:	out    0x40,al
  43bced:	add    BYTE PTR [ecx-0x62ffbf3a],ah
  43bcf3:	mov    BYTE PTR [eax+0x0],0x99
  43bcf7:	mov    BYTE PTR [eax+0x0],0x35
  43bcfb:	mov    DWORD PTR [eax+0x0],0x406731
  43bd02:	sub    eax,0x29004067
  43bd07:	addr16 inc eax
  43bd09:	add    BYTE PTR [eax],al
  43bd0b:	xchg   ecx,eax
  43bd0c:	das    
  43bd0d:	inc    eax
  43bd0e:	add    BYTE PTR [ebp-0x2ffbfd1],dl
  43bd14:	(bad)  
  43bd15:	(bad)  
  43bd16:	call   DWORD PTR [edx]
  43bd18:	jo     0x43bd1a
  43bd1a:	cdq    
  43bd1b:	in     eax,dx
  43bd1c:	(bad)  
  43bd1d:	(bad)  
  43bd1e:	(bad)  
  43bd1f:	mov    ebp,0xbdffffff
  43bd24:	(bad)  
  43bd25:	(bad)  
  43bd26:	jmp    FWORD PTR [ebp-0x52000001]
  43bd2c:	(bad)  
  43bd2d:	(bad)  
  43bd2e:	(bad)  
  43bd2f:	mov    ebp,0xffffff
  43bd34:	mov    ebp,0xadffffff
  43bd39:	(bad)  
  43bd3a:	(bad)  
  43bd3b:	jmp    FWORD PTR [ebp+0x7dffffff]
  43bd41:	(bad)  
  43bd42:	(bad)  
  43bd43:	(bad)  
  43bd44:	jge    0x43bd45
  43bd46:	(bad)  
  43bd47:	jmp    FWORD PTR [ebp-0x1]
  43bd4a:	(bad)  
  43bd4b:	jmp    FWORD PTR [ebp-0x1]
  43bd4e:	(bad)  
  43bd4f:	(bad)  
  43bd50:	jge    0x43bd51
  43bd52:	(bad)  
  43bd53:	(bad)  
  43bd54:	jge    0x43bd55
  43bd56:	(bad)  
  43bd57:	jmp    FWORD PTR [ebp-0x1]
  43bd5a:	(bad)  
  43bd5b:	jmp    FWORD PTR [ebp-0x1]
  43bd5e:	(bad)  
  43bd5f:	(bad)  
  43bd60:	cmp    eax,0x3dffffff
  43bd65:	(bad)  
  43bd66:	(bad)  
  43bd67:	jmp    FWORD PTR ds:0x2dffffff
  43bd6d:	(bad)  
  43bd6e:	(bad)  
  43bd6f:	(bad)  
  43bd70:	cmp    eax,0x3dffffff
  43bd75:	(bad)  
  43bd76:	(bad)  
  43bd77:	jmp    FWORD PTR ds:0x2dffffff
  43bd7d:	(bad)  
  43bd7e:	(bad)  
  43bd7f:	(bad)  
  43bd80:	std    
  43bd81:	(bad)  
  43bd82:	(bad)  
  43bd83:	call   DWORD PTR [ecx+ebx*8-0x266b0004]
  43bd8a:	cld    
  43bd8b:	call   DWORD PTR [ecx+ebx*8-0x266b0004]
  43bd92:	cld    
  43bd93:	call   DWORD PTR [ecx+ebx*8-0x6bff0004]
  43bd9a:	frndint 
  43bd9c:	call   DWORD PTR [ecx+ebx*8-0x266b0004]
  43bda3:	cld    
  43bda4:	call   DWORD PTR [ecx+ebx*8-0x266b0004]
  43bdab:	cld    
  43bdac:	call   DWORD PTR [ecx+ebx*8-0x266b0004]
  43bdb3:	cld    
  43bdb4:	call   DWORD PTR [ecx+ebx*8-0x266b0004]
  43bdbb:	cld    
  43bdbc:	call   DWORD PTR [ecx+ebx*8-0x286b0004]
  43bdc3:	cld    
  43bdc4:	call   DWORD PTR [edi+edx*8-0x286b0004]
  43bdcb:	cld    
  43bdcc:	call   DWORD PTR [edi+edx*8-0x286b0004]
  43bdd3:	cld    
  43bdd4:	call   DWORD PTR [edi+edx*8-0x286b0004]
  43bddb:	cld    
  43bddc:	call   DWORD PTR [edi+edx*8-0x286b0004]
  43bde3:	cld    
  43bde4:	call   DWORD PTR [edi+edx*8-0x286b0004]
  43bdeb:	cld    
  43bdec:	call   DWORD PTR [edi+edx*8-0x286b0004]
  43bdf3:	cld    
  43bdf4:	call   DWORD PTR [edi+edx*8-0x286b0004]
  43bdfb:	cld    
  43bdfc:	inc    DWORD PTR [eax]
  43bdfe:	xchg   esp,eax
  43bdff:	add    bh,ah
  43be01:	add    edx,DWORD PTR [eax+eax*1+0x9403e7]
  43be08:	out    0x3,eax
  43be0a:	xchg   esp,eax
  43be0b:	add    bh,ah
  43be0d:	add    edx,DWORD PTR [eax+eax*1+0x9403e7]
  43be14:	out    0x3,eax
  43be16:	xchg   esp,eax
  43be17:	add    bh,ah
  43be19:	add    edx,DWORD PTR [eax+eax*1+0x9403e7]
  43be20:	out    0x3,eax
  43be22:	xchg   esp,eax
  43be23:	add    bh,ah
  43be25:	add    edx,DWORD PTR [eax+eax*1+0x9403e7]
  43be2c:	out    0x3,eax
  43be2e:	xchg   esp,eax
  43be2f:	add    bh,ah
  43be31:	add    edx,DWORD PTR [eax+eax*1+0x9403e7]
  43be38:	out    0x3,eax
  43be3a:	xchg   esp,eax
  43be3b:	add    bh,ah
  43be3d:	add    edx,DWORD PTR [eax+eax*1+0x9403e7]
  43be44:	out    0x3,eax
  43be46:	xchg   esp,eax
  43be47:	add    bh,ah
  43be49:	add    edx,DWORD PTR [eax+eax*1+0x9403e7]
  43be50:	out    0x3,eax
  43be52:	xchg   esp,eax
  43be53:	add    bh,ah
  43be55:	add    edx,DWORD PTR [eax+eax*1+0x9403e7]
  43be5c:	out    0x3,eax
  43be5e:	xchg   esp,eax
  43be5f:	add    bh,ah
  43be61:	add    eax,DWORD PTR [eax]
  43be63:	xchg   esp,eax
  43be64:	add    bh,ah
  43be66:	add    edx,DWORD PTR [eax+eax*1-0x36bc0c19]
  43be6d:	mov    BYTE PTR [ebx],0x94
  43be70:	add    BYTE PTR [ebx+0x1a],cl
  43be73:	cld    
  43be74:	push   es
  43be75:	fistp  WORD PTR ds:0xb9000670
  43be7b:	or     DWORD PTR [esi+esi*1],0x363479a1
  43be82:	dec    ecx
  43be83:	scas   al,BYTE PTR es:[edi]
  43be84:	pop    esp
  43be85:	ss popa 
  43be87:	scas   al,BYTE PTR es:[edi]
  43be88:	test   BYTE PTR ds:0x57e9,dh
  43be8e:	add    DWORD PTR [eax-0x72c70000],edx
  43be94:	push   esp
  43be95:	cmp    eax,DWORD PTR [ecx-0x73]
  43be98:	dec    esp
  43be99:	cmp    ebp,DWORD PTR [ecx+0x7d]
  43be9c:	test   BYTE PTR [edx],bh
  43be9e:	popa   
  43be9f:	jge    0x43bf1d
  43bea1:	cmp    bh,BYTE PTR [ecx-0x53]
  43bea4:	je     0x43bee0
  43bea6:	and    DWORD PTR [edx-0x55b6c694],0xa24139a4
  43beb0:	add    BYTE PTR [eax],al
  43beb2:	jmp    0x9943beee
  43beb7:	xchg   ecx,eax
  43beb8:	add    BYTE PTR [eax],al
  43beba:	pop    ecx
  43bebb:	xchg   edx,eax
  43bebc:	ins    BYTE PTR es:[edi],dx
  43bebd:	xor    DWORD PTR [ecx-0x76],ecx
  43bec0:	cwde   
  43bec1:	xor    DWORD PTR [ebp-0x62ce735e],edx
  43bec7:	add    BYTE PTR [edx-0x6ddace44],bl
  43becd:	lods   al,BYTE PTR ds:[esi]
  43bece:	xor    DWORD PTR ds:0x5531dc8a,ebp
  43bed4:	mov    ds:0x9a3d31cc,al
  43bed9:	cld    
  43beda:	xor    ch,ah
  43bedc:	xchg   edx,eax
  43bedd:	in     al,dx
  43bede:	xor    ch,cl
  43bee0:	mov    bl,BYTE PTR [ecx+esi*1]
  43bee3:	aad    0xa2
  43bee5:	or     al,0x31
  43bee7:	fstp   QWORD PTR [edx-0x6d5acec4]
  43beed:	sub    al,0x31
  43beef:	lods   eax,DWORD PTR ds:[esi]
  43bef0:	mov    bl,BYTE PTR [ecx+esi*1+0x0]
  43bef4:	or     edi,esi
  43bef6:	jae    0x43bf2f
  43bef8:	test   eax,0xb93783f6
  43befd:	not    DWORD PTR [ebx-0x5c0836c9]
  43bf03:	aaa    
  43bf04:	sub    edi,esi
  43bf06:	mov    bl,0x37
  43bf08:	sub    edi,esi
  43bf0a:	ret    
  43bf0b:	aaa    
  43bf0c:	cmp    edi,esi
  43bf0e:	shl    DWORD PTR [edi],cl
  43bf10:	sub    edi,esi
  43bf12:	jecxz  0x43bf4b
  43bf14:	leave  
  43bf15:	div    bl
  43bf17:	aaa    
  43bf18:	sub    edi,esi
  43bf1a:	add    edi,DWORD PTR [eax]
  43bf1c:	stc    
  43bf1d:	jmp    0x43bf32
  43bf1f:	cmp    cl,cl
  43bf21:	jmp    0x43bf46
  43bf23:	cmp    cl,ch
  43bf25:	jmp    0x43bf5a
  43bf27:	cmp    cl,ch
  43bf29:	jmp    0x43bf6e
  43bf2b:	cmp    BYTE PTR [eax],al
  43bf2d:	jns    0x43bf13
  43bf2f:	push   ebx
  43bf30:	cmp    BYTE PTR [ecx-0x1c],ch
  43bf33:	arpl   WORD PTR [eax],di
  43bf35:	mov    esp,esp
  43bf37:	jae    0x43bf71
  43bf39:	test   eax,0x393883eb
  43bf3e:	jmp    0x43bed3
  43bf40:	cmp    BYTE PTR [ecx-0x15],cl
  43bf43:	mov    ds:0xb3eb2938,eax
  43bf48:	cmp    BYTE PTR [ecx],ch
  43bf4a:	jmp    0x43bf0f
  43bf4c:	cmp    BYTE PTR [ecx-0x56c72c15],bh
  43bf52:	jmp    0x43bf37
  43bf54:	cmp    cl,cl
  43bf56:	jmp    0x43bf4b
  43bf58:	cmp    BYTE PTR [ecx+0x793903eb],ch
  43bf5e:	in     al,0x13
  43bf60:	cmp    DWORD PTR [ecx-0x1c],ecx
  43bf63:	and    edi,DWORD PTR [ecx]
  43bf65:	imul   esp,esp,0xe4693933
  43bf6b:	inc    ebx
  43bf6c:	cmp    DWORD PTR [ebp+ebx*4-0x6a82abe5],edx
  43bf73:	sbb    esp,DWORD PTR [ebp+ebp*2+0x6d]
  43bf77:	sbb    esi,DWORD PTR [ebp+ebp*2+0x45]
  43bf7b:	sbb    al,0x84
  43bf7d:	pop    ebp
  43bf7e:	pop    ebp
  43bf7f:	sbb    al,0x94
  43bf81:	pop    ebp
  43bf82:	xor    eax,0x6dcda41c
  43bf87:	adc    al,0xb4
  43bf89:	int    0x65
  43bf8b:	adc    al,0xc4
  43bf8d:	mov    ebp,0xd4149d
  43bf92:	mov    ebp,0xade41495
  43bf97:	lods   eax,DWORD PTR ds:[esi]
  43bf98:	adc    al,0xf4
  43bf9a:	lods   eax,DWORD PTR ds:[esi]
  43bf9b:	test   DWORD PTR [esp+eax*1],edx
  43bf9e:	sahf   
  43bf9f:	fst    QWORD PTR [esi]
  43bfa1:	adc    al,0x9e
  43bfa3:	mov    ch,0x16
  43bfa5:	and    al,0x8e
  43bfa7:	lods   eax,DWORD PTR ds:[esi]
  43bfa8:	push   ss
  43bfa9:	xor    al,0x8e
  43bfab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43bfac:	push   ss
  43bfad:	inc    esp
  43bfae:	jle    0x43bfcd
  43bfb0:	push   ss
  43bfb1:	push   esp
  43bfb2:	jle    0x43bfc9
  43bfb4:	push   ss
  43bfb5:	outs   dx,BYTE PTR fs:[esi]
  43bfb7:	in     eax,dx
  43bfb8:	adc    eax,0x16c56e74
  43bfbd:	test   BYTE PTR [esi+0x5d],bl
  43bfc0:	push   ss
  43bfc1:	xchg   esp,eax
  43bfc2:	pop    esi
  43bfc3:	xor    eax,0x6bcea416
  43bfc8:	adc    eax,0x1563ceb4
  43bfcd:	les    edi,FWORD PTR [esi-0x412be9e5]
  43bfd3:	adc    edx,DWORD PTR [esi]
  43bfd5:	in     al,0xae
  43bfd7:	sub    edx,DWORD PTR [esi]
  43bfd9:	hlt    
  43bfda:	scas   al,BYTE PTR es:[edi]
  43bfdb:	add    edx,DWORD PTR [esi]
  43bfdd:	add    al,0x9f
  43bfdf:	fist   DWORD PTR [edi]
  43bfe1:	adc    al,0x9f
  43bfe3:	mov    bl,0x17
  43bfe5:	and    al,0x8f
  43bfe7:	add    bl,dl
  43bfe9:	sbb    BYTE PTR [eax-0x27e724f7],al
  43bfef:	or     DWORD PTR [ebx-0x54f61fe8],esp
  43bff5:	sbb    BYTE PTR [eax],al
  43bff7:	mov    eax,0xa0189309
  43bffc:	or     DWORD PTR [ebx+0x18],edi
  43bfff:	sbb    BYTE PTR [edx],cl
  43c001:	arpl   WORD PTR [ecx],bx
  43c003:	add    BYTE PTR [edx],cl
  43c005:	dec    ebx
  43c006:	sbb    DWORD PTR [eax],edi
  43c008:	or     dl,BYTE PTR [ebx-0x64f5bfe8]
  43c00e:	sbb    al,bl
  43c010:	or     DWORD PTR [ebx-0x54f61fe8],esp
  43c016:	sbb    al,bh
  43c018:	or     ebx,edx
  43c01a:	sbb    al,ah
  43c01c:	or     DWORD PTR [ebx-0x1cfb67e8],edi
  43c022:	pop    ss
  43c023:	add    BYTE PTR [ebx+ecx*8],0x17
  43c027:	js     0x43c02d
  43c029:	rcl    DWORD PTR [edi],cl
  43c02b:	add    BYTE PTR [ebx+ebx*8],0x17
  43c02f:	pop    eax
  43c030:	add    al,0x23
  43c032:	sbb    BYTE PTR [eax+0x4],ah
  43c035:	sub    ebx,DWORD PTR [eax]
  43c037:	cmp    BYTE PTR [ebx+edx*1],al
  43c03a:	sbb    BYTE PTR [eax],ah
  43c03c:	add    al,0xfb
  43c03e:	pop    ss
  43c03f:	sbb    BYTE PTR ds:0x5001763,al
  43c045:	dec    ebx
  43c046:	pop    ss
  43c047:	cmp    BYTE PTR [ebx+edx*4],al
  43c04a:	pop    ss
  43c04b:	inc    eax
  43c04c:	add    al,0x27
  43c04e:	pop    ss
  43c04f:	push   eax
  43c050:	add    al,0x2f
  43c052:	pop    ss
  43c053:	jo     0x43c059
  43c055:	push   edi
  43c056:	pop    ss
  43c057:	jo     0x43c05d
  43c059:	adc    edx,DWORD PTR [edi]
  43c05b:	add    BYTE PTR [eax-0x27e904fd],ah
  43c061:	add    eax,DWORD PTR [eax]
  43c063:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43c064:	sub    BYTE PTR [ebx+edi*1],0x8d
  43c068:	stos   BYTE PTR es:[edi],al
  43c069:	pop    esp
  43c06a:	cmp    edx,DWORD PTR [ebp-0x62c4b35e]
  43c070:	stos   BYTE PTR es:[edi],al
  43c071:	jl     0x43c0ad
  43c073:	mov    gs:0x8a6d3a6c,al
  43c079:	pushf  
  43c07a:	cmp    dl,BYTE PTR [ebp-0x7e]
  43c07d:	mov    WORD PTR [edx],?
  43c07f:	cmp    eax,0x253abc8a
  43c084:	sub    BYTE PTR [edx+edi*1+0x3adcaa0d],0xe9
  43c08c:	add    BYTE PTR [bx+si],al
  43c08f:	and    DWORD PTR [eax-0x630b0000],ebx
  43c095:	and    BYTE PTR [ebx],dh
  43c097:	add    eax,0x1533188d
  43c09c:	lea    edx,[eax]
  43c09e:	xor    esi,ebp
  43c0a0:	jl     0x43c0aa
  43c0a2:	xor    esi,ebp
  43c0a4:	jl     0x43c0e6
  43c0a6:	xor    ebx,DWORD PTR ds:0xb132bcad
  43c0ac:	lods   eax,DWORD PTR ds:[esi]
  43c0ad:	mov    ah,0x32
  43c0af:	inc    ebp
  43c0b0:	sahf   
  43c0b1:	cwde   
  43c0b2:	xor    DWORD PTR [ebp-0x62],eax
  43c0b5:	nop
  43c0b6:	xor    DWORD PTR [ebp-0x72],edx
  43c0b9:	mov    esp,0xcc98b137
  43c0be:	aaa    
  43c0bf:	add    DWORD PTR [eax],0xe937c490
  43c0c5:	pop    ss
  43c0c6:	(bad)  
  43c0c9:	xchg   edi,eax
  43c0ca:	add    BYTE PTR [eax],al
  43c0cc:	push   ebp
  43c0cd:	cdq    
  43c0ce:	shl    BYTE PTR [esi],1
  43c0d0:	push   ebp
  43c0d1:	xchg   ecx,eax
  43c0d2:	enter  0x5536,0x89
  43c0d6:	add    BYTE PTR [esi],dh
  43c0d8:	in     eax,0xa1
  43c0da:	clc    
  43c0db:	xor    eax,0xd3f66100
  43c0e0:	cmp    dh,BYTE PTR [ebp-0x32c5240e]
  43c0e6:	repnz jecxz 0x43c123
  43c0e9:	(bad)  
  43c0ea:	repnz repz cmp dh,BYTE PTR [ebp-0xe]
  43c0ef:	sti    
  43c0f0:	cmp    ch,BYTE PTR ds:0x353b03f3
  43c0f6:	repz arpl WORD PTR [ebx],di
  43c0f9:	adc    eax,0xad3b6bf3
  43c0fe:	bnd jae 0x43c13c
  43c101:	adc    eax,0xad3b7bf3
  43c106:	repz cmp DWORD PTR [ebx],0x75
  43c10a:	repz mov edi,DWORD PTR [ebx]
  43c10d:	(bad)  
  43c10e:	repnz xchg ebx,eax
  43c110:	cmp    edx,DWORD PTR ds:0x213bb7f3
  43c116:	repz mov edi,0xe3f3253b
  43c11c:	cmp    ebx,DWORD PTR [ebp-0x2ac30c10]
  43c122:	repz sti 
  43c124:	cmp    al,0x0
  43c126:	in     eax,dx
  43c127:	lock add edi,DWORD PTR ds:0x3d0bf0b5
  43c12e:	int    0xf0
  43c130:	adc    edi,DWORD PTR ds:0x3d1bf195
  43c136:	int    0xf0
  43c138:	and    edi,DWORD PTR ds:0xfff94fbd
  43c13e:	cmp    esp,0xeba1ffff
  43c144:	jg     0x43c17a
  43c146:	sub    ebx,ebp
  43c148:	xchg   DWORD PTR [ecx+esi*8],esi
  43c14b:	jmp    0x43c0dc
  43c14d:	xor    al,0xd9
  43c14f:	jmp    0x43c138
  43c151:	xor    al,0x95
  43c153:	jmp    0x18d7f674
  43c158:	sbb    al,bh
  43c15a:	test   eax,0xa24b16a4
  43c15f:	dec    edx
  43c160:	pop    ss
  43c161:	stc    
  43c162:	stos   BYTE PTR es:[edi],al
  43c163:	call   DWORD PTR [ecx*2-0x18f4315d]
  43c16a:	(bad)  
  43c16b:	ror    DWORD PTR [edx],1
  43c16d:	mov    bl,0x8e
  43c16f:	sbb    ecx,DWORD PTR [edx]
  43c171:	and    BYTE PTR fs:[eax+0x1978b208],0x9
  43c179:	pop    ecx
  43c17a:	jno    0x43c16e
  43c17c:	rdpmc  
  43c17e:	push   0x64
  43c180:	push   cs
  43c181:	bound  bx,DWORD PTR [ecx+0xf]
  43c185:	xchg   edx,eax
  43c186:	pop    edx
  43c187:	adc    ecx,DWORD PTR [edi]
  43c189:	int3   
  43c18a:	add    dl,dl
  43c18c:	jmp    0xd0f:0xcccadb0e
  43c193:	ret    
  43c194:	ret    
  43c195:	(bad)  
  43c197:	mov    ebx,0xb3430eea
  43c19c:	adc    al,0xf
  43c19e:	pop    ebp
  43c19f:	stos   DWORD PTR es:[edi],eax
  43c1a0:	inc    eax
  43c1a1:	vmwrite esp,DWORD PTR [ebx-0x6bfff17a]
  43c1a8:	fstp   DWORD PTR [edi+edi*8-0x2bf2d]
  43c1af:	xchg   esp,eax
  43c1b0:	std    
  43c1b1:	adc    esp,DWORD PTR [ebp-0x7c]
  43c1b4:	push   esp
  43c1b5:	adc    al,0xbf
  43c1b7:	test   BYTE PTR [esi-0x389b20ed],al
  43c1bd:	or     eax,0xd0b651e
  43c1c2:	pop    ebx
  43c1c3:	gs lock or al,0x69
  43c1c7:	gs push esi
  43c1c9:	or     eax,0xd12c590
  43c1ce:	mov    ch,0x0
  43c1d1:	cmp    DWORD PTR [ebx],edx
  43c1d3:	pop    edi
  43c1d4:	adc    BYTE PTR [esi+0x2c0f4216],dl
  43c1da:	push   ss
  43c1db:	jno    0x43c1ec
  43c1dd:	fst    QWORD PTR [esi+edi*4]
  43c1e0:	or     eax,0xddb14a5
  43c1e5:	mov    ebx,0x4d0e1014
  43c1ea:	adc    eax,0x17a10e34
  43c1ef:	add    BYTE PTR [ecx],ah
  43c1f1:	or     eax,0xbb01814
  43c1f6:	xchg   ebx,eax
  43c1f7:	push   ss
  43c1f8:	sbb    DWORD PTR [ebx+eiz*8],ecx
  43c1fb:	sbb    DWORD PTR [edx+0x6519b90a],edx
  43c201:	or     ch,BYTE PTR [ebx-0x6bf525e7]
  43c207:	sbb    DWORD PTR [ebx+ecx*1],edx
  43c20a:	popa   
  43c20b:	sbb    ah,BYTE PTR [ecx]
  43c20d:	or     ecx,DWORD PTR [esi+0x1a]
  43c210:	sub    ecx,DWORD PTR [ebx]
  43c212:	mov    DWORD PTR [ecx],ebx
  43c214:	das    
  43c215:	or     edx,DWORD PTR [esi-0x6df4c3e7]
  43c21b:	sbb    edi,edx
  43c21d:	or     bl,BYTE PTR [ebp-0x65f524e7]
  43c223:	sbb    eax,eax
  43c225:	or     al,dh
  43c227:	sbb    ebx,esi
  43c229:	or     al,cl
  43c22b:	sbb    edi,eax
  43c22d:	or     ch,BYTE PTR [esi-0x11f536e7]
  43c233:	sbb    BYTE PTR [ecx+0x5718dc09],dl
  43c239:	or     DWORD PTR ds:0x2094719,ebx
  43c23f:	sbb    DWORD PTR ds:0xf8185609,ebp
  43c245:	or     DWORD PTR [edi],esi
  43c247:	sbb    bh,bl
  43c249:	or     DWORD PTR [eax],eax
  43c24b:	stos   BYTE PTR es:[edi],al
  43c24c:	lods   al,BYTE PTR ds:[esi]
  43c24d:	mov    eax,0xd2ac9e30
  43c252:	xor    bh,ch
  43c254:	add    BYTE PTR [edi-0x77dec7e3],cl
  43c25a:	sub    edi,DWORD PTR [eax]
  43c25c:	les    ebx,FWORD PTR [edi-0x6086c887]
  43c262:	xchg   esi,eax
  43c263:	aaa    
  43c264:	or     BYTE PTR [edi-0x70dfc84d],0xa1
  43c26b:	aaa    
  43c26c:	inc    ebx
  43c26d:	lahf   
  43c26e:	stc    
  43c26f:	fistp  WORD PTR ss:[esi-0x7135c91c]
  43c276:	sbb    DWORD PTR [edi],esi
  43c278:	into   
  43c279:	mov    cs,WORD PTR ds:0x2c9ed237
  43c27f:	aaa    
  43c280:	pop    ebp
  43c281:	sahf   
  43c282:	shl    BYTE PTR [esi],0x34
  43c285:	mov    ss,ecx
  43c287:	ss out dx,eax
  43c289:	mov    edi,esp
  43c28b:	xor    eax,0x362aa19d
  43c290:	mov    DWORD PTR [ecx-0x71a4c9ac],ebx
  43c296:	jnp    0x43c2cd
  43c298:	xchg   esp,eax
  43c299:	mov    es,WORD PTR [ebp-0x5d614bcb]
  43c29f:	xor    eax,0x35d19ebd
  43c2a4:	mov    esi,0xe635c78e
  43c2a9:	mov    gs,esi
  43c2ab:	xor    al,0xd2
  43c2ad:	sahf   
  43c2ae:	loop   0x43c2e4
  43c2b0:	cmc    
  43c2b1:	sahf   
  43c2b2:	or     dh,BYTE PTR ds:0x35298f3a
  43c2b8:	add    BYTE PTR ds:[edi-0x6086caa3],cl
  43c2bf:	ins    DWORD PTR es:[edi],dx
  43c2c0:	xor    al,0x6e
  43c2c2:	lahf   
  43c2c3:	xchg   edx,eax
  43c2c4:	xor    al,0x0
  43c2c6:	(bad)  
  43c2c7:	cmc    
  43c2c8:	int    0x3b
  43c2ca:	div    ah
  43c2cc:	fistp  QWORD PTR [ebx]
  43c2ce:	mov    bl,0x10
  43c2d0:	ins    DWORD PTR es:[edi],dx
  43c2d1:	cmp    al,0x86
  43c2d3:	adc    BYTE PTR [edi+0x3c],bh
  43c2d6:	add    BYTE PTR [ecx],dl
  43c2d8:	ret    
  43c2d9:	cmp    al,0xbe
  43c2db:	adc    BYTE PTR [eax],al
  43c2dd:	cmp    eax,0x3d0d1183
  43c2e2:	xchg   edx,eax
  43c2e3:	adc    DWORD PTR ds:0x7811463d,esi
  43c2e9:	cmp    eax,0x3d8311f0
  43c2ee:	in     al,dx
  43c2ef:	adc    DWORD PTR [ebx-0x33ee33c3],esp
  43c2f5:	cmp    eax,0x3ddf117c
  43c2fa:	mov    DWORD PTR [ecx],edx
  43c2fc:	or     DWORD PTR [esi],edi
  43c2fe:	arpl   WORD PTR [esi],cx
  43c300:	sub    al,0x3e
  43c302:	loope  0x43c311
  43c304:	arpl   WORD PTR [esi],di
  43c306:	ror    BYTE PTR [esi],0x6
  43c309:	aas    
  43c30a:	jno    0x43c31b
  43c30c:	ret    
  43c30d:	aas    
  43c30e:	lods   al,BYTE PTR ds:[esi]
  43c30f:	bswap  edi
  43c311:	aas    
  43c312:	clc    
  43c313:	push   cs
  43c314:	add    BYTE PTR [eax],al
  43c316:	in     eax,dx
  43c317:	xchg   ebx,eax
  43c318:	clc    
  43c319:	jmp    FWORD PTR ds:0x4
  43c31f:	pop    esp
  43c320:	adc    al,0x7
  43c322:	xor    DWORD PTR [ecx-0x5dceb6eb],esi
  43c328:	adc    eax,0x14413181
  43c32d:	test   al,0x31
  43c32f:	push   ecx
  43c330:	adc    al,0xb3
  43c332:	xor    edx,esi
  43c334:	adc    al,0xce
  43c336:	xor    DWORD PTR [eax],ebp
  43c338:	adc    eax,0x11b93209
  43c33d:	sbb    eax,0xedc9432
  43c342:	cmp    DWORD PTR [esi+0x18],esp
  43c345:	push   cs
  43c346:	test   BYTE PTR [esi+0x23],ah
  43c349:	movzx  esp,WORD PTR [esi+0x67]
  43c34d:	push   cs
  43c34e:	fadd   st(6),st
  43c350:	aam    0xd
  43c352:	pop    esi
  43c353:	(bad)  
  43c354:	cmc    
  43c355:	or     eax,0x181ec82f
  43c35a:	inc    ecx
  43c35b:	shr    BYTE PTR [eax+edx*1+0x70],0xa8
  43c360:	lahf   
  43c361:	adc    bl,dl
  43c363:	mov    al,ds:0xa9031144
  43c368:	fist   DWORD PTR [edi]
  43c36a:	mov    ax,ds:0x89931775
  43c370:	push   ebp
  43c371:	sbb    cl,cl
  43c373:	adc    DWORD PTR [esi],0xa389ff18
  43c379:	adc    al,BYTE PTR [eax-0x7e]
  43c37c:	rcl    BYTE PTR [edx],0x67
  43c37f:	push   0xffffff86
  43c381:	adc    bl,BYTE PTR [ebx+0x12f06200]
  43c387:	jecxz  0x43c3f3
  43c389:	adc    eax,0x74632913
  43c38e:	adc    DWORD PTR [ebx+ecx*8-0x75],ecx
  43c392:	adc    DWORD PTR [edx-0x3d],ebp
  43c395:	dec    esp
  43c396:	adc    ch,BYTE PTR [eax-0x7ced9c35]
  43c39c:	mov    esp,0xad490b86
  43c3a1:	and    al,0x5
  43c3a3:	out    dx,eax
  43c3a4:	lods   eax,DWORD PTR ds:[esi]
  43c3a5:	adc    eax,0xf29e4306
  43c3aa:	add    eax,0x5719ebf
  43c3af:	fmul   QWORD PTR [esi-0x7066f8ff]
  43c3b5:	sub    eax,0x7ff907
  43c3ba:	lds    ecx,FWORD PTR [edi]
  43c3bc:	push   ebp
  43c3bd:	cld    
  43c3be:	adc    BYTE PTR ss:[ebp-0x4],al
  43c3c2:	xor    edx,DWORD PTR [eax]
  43c3c4:	cmp    eax,0x1e1010fc
  43c3c9:	cld    
  43c3ca:	pop    esp
  43c3cb:	adc    bl,dh
  43c3cd:	sti    
  43c3ce:	jg     0x43c3e0
  43c3d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43c3d1:	sti    
  43c3d2:	mov    dl,0xe
  43c3d4:	pop    ds
  43c3d5:	cld    
  43c3d6:	push   ecx
  43c3d7:	push   cs
  43c3d8:	cmp    edi,edi
  43c3da:	out    0xc3,al
  43c3dc:	jnp    0x43c39c
  43c3de:	mov    dh,0x3
  43c3e0:	xchg   esp,eax
  43c3e1:	add    dh,cl
  43c3e3:	adc    edi,DWORD PTR [ecx]
  43c3e5:	icebp  
  43c3e6:	pop    ss
  43c3e7:	adc    eax,DWORD PTR [eax]
  43c3e9:	out    dx,al
  43c3ea:	out    dx,eax
  43c3eb:	jne    0x43c400
  43c3ed:	into   
  43c3ee:	repnz into 
  43c3f0:	adc    DWORD PTR [ebx],eax
  43c3f2:	repz jns 0x43c407
  43c3f5:	jns    0x43c3e8
  43c3f7:	mov    ch,0x10
  43c3f9:	ins    DWORD PTR es:[edi],dx
  43c3fa:	hlt    
  43c3fb:	sbb    BYTE PTR cs:[ebp-0xd],ch
  43c3ff:	outs   dx,BYTE PTR ds:[esi]
  43c400:	pop    ss
  43c401:	sub    esi,esp
  43c403:	rcl    DWORD PTR ds:0x14e6f6ed,1
  43c409:	sbb    edi,ecx
  43c40b:	pop    esi
  43c40c:	or     al,0xf6
  43c40e:	neg    DWORD PTR [ecx]
  43c410:	or     ecx,DWORD PTR ds:0xfb0945f8
  43c416:	cld    
  43c417:	scas   eax,DWORD PTR es:[edi]
  43c418:	push   cs
  43c419:	cmp    ah,bh
  43c41b:	sbb    cl,BYTE PTR [esi]
  43c41d:	outs   dx,BYTE PTR ds:[esi]
  43c41e:	(bad)  
  43c41f:	ror    BYTE PTR ds:0xd4ffd56,cl
  43c425:	cmp    al,0xfe
  43c427:	test   al,0xc
  43c429:	xchg   esp,eax
  43c42a:	add    bh,ah
  43c42c:	mov    bl,0xdb
  43c42e:	mov    ebp,0x94044a
  43c433:	add    ah,ah
  43c435:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43c436:	data16 das 
  43c438:	les    esp,FWORD PTR [edi-0x59a6d0cd]
  43c43e:	ret    0xf82e
  43c441:	test   DWORD PTR ds:0x4b86232e,ebx
  43c447:	xor    eax,DWORD PTR cs:[esi+0xfb2e20]
  43c44e:	test   DWORD PTR ds:0x7fa5682e,esi
  43c454:	sub    eax,0x2d6ca553
  43c459:	jge    0x43c400
  43c45b:	in     al,0x2c
  43c45d:	and    DWORD PTR [ebp-0x7b5cd2b7],esp
  43c463:	jnp    0x43c491
  43c465:	mov    edx,0x30343b83
  43c46a:	mov    edi,edi
  43c46c:	xor    bh,BYTE PTR [ecx]
  43c46e:	or     BYTE PTR [ebx],0x31
  43c471:	std    
  43c472:	sahf   
  43c473:	dec    ebp
  43c474:	aaa    
  43c475:	mov    bl,0x9e
  43c477:	xchg   DWORD PTR [esi],esi
  43c479:	outs   dx,DWORD PTR ds:[esi]
  43c47a:	mov    cs,ebp
  43c47c:	ss daa 
  43c47e:	mov    ss,WORD PTR [ebp+0x36]
  43c481:	sbb    BYTE PTR [ebp-0x62e1ca3a],0x56
  43c488:	xor    eax,0x34638c8e
  43c48d:	adc    cl,BYTE PTR [ecx+ebx*1+0x71a37a3c]
  43c494:	cmp    edi,DWORD PTR [ecx-0x16c6d767]
  43c49a:	idiv   DWORD PTR [eax+edi*8+0x9039]
  43c4a1:	push   esp
  43c4a2:	mov    BYTE PTR [edi+ebp*1],dl
  43c4a5:	mov    ds:0x592d8881,eax
  43c4aa:	mov    eax,DWORD PTR [esp+ebp*1-0x45eaa400]
  43c4b1:	xor    eax,DWORD PTR [eax]
  43c4b3:	adc    BYTE PTR ss:[edx+0x2f129734],bh
  43c4ba:	ss push esi
  43c4bc:	adc    DWORD PTR [ebx],ebx
  43c4be:	cmp    BYTE PTR [ebx+0x2d38530c],al
  43c4c4:	or     al,0xd2
  43c4c6:	cmp    BYTE PTR [ebp-0x15c665f5],al
  43c4cc:	or     bh,BYTE PTR [ebx+0x3b]
  43c4cf:	xor    ecx,DWORD PTR ds:0x8fd3bbd
  43c4d5:	inc    ebp
  43c4d6:	cmp    eax,0x3e820a67
  43c4db:	in     al,0x6
  43c4dd:	mov    ds:0x7193e,al
  43c4e2:	aas    
  43c4e3:	cmp    al,BYTE PTR [edi]
  43c4e5:	push   edx
  43c4e6:	aas    
  43c4e7:	pop    ecx
  43c4e8:	pop    es
  43c4e9:	add    BYTE PTR [eax],al
  43c4eb:	ins    DWORD PTR es:[edi],dx
  43c4ec:	sar    al,1
  43c4ee:	(bad)  
  43c4ef:	stc    
  43c4f0:	(bad)  
  43c4f1:	(bad)  
  43c4f2:	(bad)  
  43c4f3:	stc    
  43c4f4:	(bad)  
  43c4f6:	xor    DWORD PTR [edx],ebx
  43c4f8:	push   ss
  43c4f9:	mov    ch,0x31
  43c4fb:	popf   
  43c4fc:	adc    eax,0x12c13240
  43c501:	(bad)  
  43c502:	xor    esi,DWORD PTR [ebx+0x13]
  43c505:	fidiv  WORD PTR [ebx]
  43c507:	test   DWORD PTR [ebx],edx
  43c509:	add    al,0x34
  43c50b:	ss or  al,0x1f
  43c50e:	xor    eax,0x367c11b6
  43c513:	jl     0x43c523
  43c515:	scas   eax,DWORD PTR es:[edi]
  43c516:	ss add cl,al
  43c519:	push   cs
  43c51a:	(bad)  
  43c51b:	aaa    
  43c51c:	xor    ecx,DWORD PTR [eax]
  43c51e:	js     0x43c558
  43c520:	jo     0x43c52e
  43c522:	dec    ebx
  43c523:	cmp    DWORD PTR [ecx+0xd],ecx
  43c526:	jp     0x43c561
  43c528:	xchg   esp,eax
  43c529:	xchg   DWORD PTR [ecx],ecx
  43c52b:	cld    
  43c52c:	lahf   
  43c52d:	mov    cl,0x0
  43c52f:	inc    edx
  43c530:	cwde   
  43c531:	xor    eax,0x61914001
  43c536:	pop    es
  43c537:	icebp  
  43c538:	mov    ebx,eax
  43c53a:	push   es
  43c53b:	push   edi
  43c53c:	and    DWORD PTR [eax],0x6
  43c53f:	add    BYTE PTR [ecx+ebp*4-0x1e4c0104],dl
  43c546:	add    eax,DWORD PTR [eax]
  43c548:	xchg   esp,eax
  43c549:	fimul  DWORD PTR [edi+edx*2]
  43c54c:	fs inc edi
  43c54e:	adc    al,0x2f
  43c550:	jmp    0x60c6:0x4c11
  43c556:	adc    bh,BYTE PTR [edi-0x39]
  43c559:	test   eax,0xfecb3e0d
  43c55e:	or     al,0x91
  43c560:	ret    
  43c561:	dec    ecx
  43c562:	push   cs
  43c563:	pop    ds
  43c564:	lods   al,BYTE PTR ds:[esi]
  43c565:	js     0x43c56b
  43c567:	je     0x43c515
  43c569:	and    al,0x5
  43c56b:	xchg   ebx,eax
  43c56c:	pushf  
  43c56d:	sub    eax,0x8f9c9e05
  43c572:	add    al,0xb0
  43c574:	mov    WORD PTR [ebx],?
  43c576:	add    eax,0x4ed8cbc
  43c57b:	mov    BYTE PTR [eax],0x7c
  43c57e:	push   ss
  43c57f:	add    eax,0x5077cd7
  43c584:	out    0x6c,eax
  43c586:	or     eax,DWORD PTR ds:0xbc96d18
  43c58c:	and    DWORD PTR [ebp+0x7c],ebx
  43c58f:	or     esi,DWORD PTR [ebx]
  43c591:	pop    ebp
  43c592:	mov    esi,0x62cd3f0b
  43c597:	or     ecx,DWORD PTR [ecx-0x33]
  43c59a:	pushf  
  43c59b:	or     ebx,DWORD PTR [edx-0x43]
  43c59e:	test   DWORD PTR [ebx],ecx
  43c5a0:	imul   edi,DWORD PTR [ebp+0x6b0b5b00],0xfffffff9
  43c5a7:	mov    dh,0xb
  43c5a9:	mov    dh,0xf6
  43c5ab:	adc    cl,BYTE PTR [esi]
  43c5ad:	inc    edi
  43c5ae:	imul   BYTE PTR [ebp+0x1ef79e0e]
  43c5b4:	or     eax,0xd9bf772
  43c5b9:	xchg   esp,eax
  43c5ba:	add    bh,ah
  43c5bc:	repz ret 0x6ba
  43c5c0:	add    al,0x94
  43c5c2:	add    BYTE PTR [esi+0xb],cl
  43c5c5:	sti    
  43c5c6:	test   ah,0x6
  43c5c9:	pusha  
  43c5ca:	std    
  43c5cb:	cld    
  43c5cc:	push   es
  43c5cd:	adc    al,0xfa
  43c5cf:	inc    esi
  43c5d0:	or     bl,al
  43c5d2:	stc    
  43c5d3:	stos   DWORD PTR es:[edi],eax
  43c5d4:	or     al,BYTE PTR [edx+0x250902fb]
  43c5da:	cli    
  43c5db:	out    0x23,al
  43c5dd:	cmp    DWORD PTR [edx-0x6bfffcf6],0x0
  43c5e4:	pushf  
  43c5e5:	adc    al,0xe1
  43c5e7:	out    dx,eax
  43c5e8:	sahf   
  43c5e9:	adc    eax,DWORD PTR [eax-0x10]
  43c5ec:	mov    ebp,0x5bee1015
  43c5f1:	adc    cl,BYTE PTR [ecx]
  43c5f3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43c5f5:	adc    BYTE PTR [eax-0xe],al
  43c5f8:	mov    ds:0xbbf8e10b,eax
  43c5fd:	or     ebp,DWORD PTR [ecx]
  43c5ff:	stc    
  43c600:	jl     0x43c60e
  43c602:	jmp    0x86f7:0x8c0c23f8
  43c609:	or     dh,BYTE PTR [edx-0x58f57f09]
  43c60f:	test   DWORD PTR [ebp+0x6af79d0a],0x68f81b0b
  43c619:	or     ebx,DWORD PTR [ecx]
  43c61b:	clc    
  43c61c:	call   DWORD PTR [eax-0x71]
  43c61f:	xchg   ebp,eax
  43c620:	ss dec ebx
  43c622:	(bad)  
  43c623:	pop    edi
  43c624:	ss xchg ebp,eax
  43c626:	sahf   
  43c627:	imul   esi,DWORD PTR [esi],0x36739e97
  43c62d:	test   eax,0xa336bd8e
  43c632:	mov    es,edi
  43c634:	ss popf 
  43c636:	sahf   
  43c637:	shl    DWORD PTR [esi],1
  43c639:	lahf   
  43c63a:	sahf   
  43c63b:	(bad)  [esi]
  43c63d:	ror    DWORD PTR [esi-0x7144c95b],0xaf
  43c644:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  43c646:	add    BYTE PTR [esi-0x6618c947],bl
  43c64c:	add    esi,DWORD PTR [esi]
  43c64e:	stc    
  43c64f:	xchg   ecx,eax
  43c650:	or     eax,0x1789f336
  43c655:	ss int 0xa1
  43c658:	loope  0x43c68f
  43c65a:	iret   
  43c65b:	cdq    
  43c65c:	jmp    0x43c693
  43c65e:	mov    cl,0x91
  43c660:	cmc    
  43c661:	xor    eax,0x363f8a2b
  43c666:	mov    ch,0xa1
  43c668:	dec    ecx
  43c669:	ss mov bh,0x99
  43c66c:	push   ebx
  43c66d:	ss leave 
  43c66f:	xchg   ecx,eax
  43c670:	sbb    eax,0x2789c336
  43c675:	ss mov ebp,0xbf3631a1
  43c67b:	cdq    
  43c67c:	cmp    esi,DWORD PTR [esi]
  43c67e:	popa   
  43c67f:	xchg   ecx,eax
  43c680:	test   DWORD PTR ds:0x358f895b,esi
  43c686:	test   DWORD PTR [ecx-0x66b8ca67],esp
  43c68c:	arpl   WORD PTR ds:0x356d9159,si
  43c692:	push   ebx
  43c693:	mov    DWORD PTR [edi+0x35],esi
  43c696:	add    cl,al
  43c698:	or     eax,ecx
  43c69a:	cmp    bh,BYTE PTR [ebx-0x5ac534f5]
  43c6a0:	or     edx,ebp
  43c6a2:	cmp    cl,BYTE PTR [edi-0x36c520f5]
  43c6a8:	add    eax,0xc3003ae9
  43c6ad:	add    eax,0x5ed3af3
  43c6b2:	std    
  43c6b3:	cmp    dh,bh
  43c6b5:	add    eax,0x5f13b07
  43c6ba:	adc    DWORD PTR [ebx],edi
  43c6bc:	jmp    0x43c6c3
  43c6be:	sbb    edi,DWORD PTR [ebx]
  43c6c0:	xchg   ebp,eax
  43c6c1:	add    eax,0x5bf3b25
  43c6c6:	das    
  43c6c7:	cmp    edi,DWORD PTR [ecx+0x733b3905]
  43c6cd:	add    eax,0x55d3b43
  43c6d2:	dec    ebp
  43c6d3:	cmp    esp,DWORD PTR [edi+0x5]
  43c6d6:	push   edi
  43c6d7:	cmp    esp,DWORD PTR [ecx-0x64c49ef5]
  43c6dd:	or     ebp,DWORD PTR [ebx+0x3b]
  43c6e0:	test   DWORD PTR [ebx],ecx
  43c6e2:	jne    0x43c71f
  43c6e4:	out    dx,eax
  43c6e5:	or     edi,DWORD PTR [edi+0x3b]
  43c6e8:	jmp    0xe37f4ff8
  43c6ed:	or     edx,DWORD PTR [ebx-0x62f3f2c5]
  43c6f3:	cmp    ebx,ecx
  43c6f5:	or     ebp,DWORD PTR [ecx-0x3bf3e5c5]
  43c6fb:	cmp    edi,DWORD PTR [ecx+0xb]
  43c6fe:	retf   0xa43b
  43c701:	or     edx,edi
  43c703:	cmp    edx,ebx
  43c705:	or     ebp,esp
  43c707:	cmp    ecx,DWORD PTR [esi+0x3f3bf10b]
  43c70d:	add    bh,bh
  43c70f:	cmp    eax,DWORD PTR [eax]
  43c711:	xchg   esp,eax
  43c712:	mov    cl,0x0
  43c714:	and    BYTE PTR [eax-0x41],bl
  43c717:	add    BYTE PTR [eax+edx*8],ch
  43c71a:	jnp    0x43c71c
  43c71c:	xchg   edi,eax
  43c71d:	enter  0x846,0x59
  43c721:	ret    0x287
  43c724:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43c725:	mov    edx,0xb34001ab
  43c72a:	repz add BYTE PTR [ebx-0x55],ah
  43c72e:	das    
  43c72f:	add    bl,BYTE PTR [edx-0x55fe785d]
  43c735:	fwait
  43c736:	pop    DWORD PTR [ecx]
  43c738:	mov    edx,0x16793
  43c73d:	xchg   esp,eax
  43c73e:	test   eax,0x8dc3ff0c
  43c743:	cld    
  43c744:	call   DWORD PTR [esp+ecx*1-0x59baaec]
  43c74b:	adc    dl,BYTE PTR [edi+0x65]
  43c74e:	pop    es
  43c74f:	adc    edx,DWORD PTR [esi+eiz*2]
  43c752:	in     al,dx
  43c753:	or     eax,0xe0d665d
  43c758:	test   dh,al
  43c75a:	and    DWORD PTR [edi],ecx
  43c75c:	call   0xe9c6:0xe70f53c6
  43c763:	or     al,0x41
  43c765:	mov    DWORD PTR [ebp+0xe],0x932a861
  43c76c:	(bad)  
  43c76d:	mov    al,ds:0xaaac0b34
  43c772:	fwait
  43c773:	or     bh,BYTE PTR [eax+0xae8a200]
  43c779:	enter  0xef8a,0xa
  43c77d:	loopne 0x43c701
  43c77f:	cmp    eax,0xfb8ae60b
  43c784:	or     bh,BYTE PTR [eax]
  43c786:	and    DWORD PTR [edi+0x6b4109],0xffffffb1
  43c78d:	push   cs
  43c78e:	shr    bh,0x80
  43c791:	push   cs
  43c792:	mov    edx,0x9c0e96ef
  43c797:	out    dx,eax
  43c798:	push   0x3ef420e
  43c79d:	push   cs
  43c79e:	int3   
  43c79f:	clc    
  43c7a0:	xchg   ecx,eax
  43c7a1:	or     edi,DWORD PTR [ebx-0x8]
  43c7a4:	jb     0x43c7b1
  43c7a6:	and    al,bh
  43c7a8:	dec    ebx
  43c7a9:	or     edi,DWORD PTR ds:0x770cc4f8
  43c7af:	stc    
  43c7b0:	pop    esi
  43c7b1:	or     ecx,DWORD PTR [ecx]
  43c7b3:	stc    
  43c7b4:	or     BYTE PTR [ebx],0xd5
  43c7b7:	clc    
  43c7b8:	icebp  
  43c7b9:	or     DWORD PTR [ebx+0x470a03fa],esi
  43c7bf:	cli    
  43c7c0:	stos   BYTE PTR es:[edi],al
  43c7c1:	or     ah,bl
  43c7c3:	stc    
  43c7c4:	ror    DWORD PTR [edx],0xbf
  43c7c7:	stc    
  43c7c8:	cmp    BYTE PTR [ecx],cl
  43c7ca:	lock cli 
  43c7cc:	mov    dl,0x9
  43c7ce:	xchg   edx,eax
  43c7cf:	hlt    
  43c7d0:	test   DWORD PTR [edi],0x7bcf48b
  43c7d6:	push   eax
  43c7d7:	hlt    
  43c7d8:	adc    eax,0xf5540008
  43c7dd:	or     DWORD PTR [eax],0xffffffa0
  43c7e0:	repz sub eax,DWORD PTR [edi]
  43c7e3:	push   cs
  43c7e4:	hlt    
  43c7e5:	inc    ecx
  43c7e6:	pop    es
  43c7e7:	dec    ebp
  43c7e8:	hlt    
  43c7e9:	fadd   DWORD PTR ds:0x691f6fe
  43c7ef:	inc    eax
  43c7f0:	test   DWORD PTR [edi+0x6],0x64ff772
  43c7f7:	pop    ebp
  43c7f8:	div    edi
  43c7fa:	add    al,0xa7
  43c7fc:	cmc    
  43c7fd:	fld    QWORD PTR [edx+ebp*4]
  43c800:	cmc    
  43c801:	test   DWORD PTR [esi+eiz*8],0x90bbfff5
  43c808:	xor    al,0x39
  43c80a:	push   0xffffff99
  43c80c:	jge    0x43c846
  43c80e:	adc    DWORD PTR [ecx-0x66bac766],0x64
  43c815:	cmp    BYTE PTR [edi-0x6f],dl
  43c818:	sar    BYTE PTR [eax],1
  43c81a:	adc    DWORD PTR [ecx+0x57e90000],ebx
  43c820:	mov    ch,0xf8
  43c822:	gs cwde 
  43c824:	add    BYTE PTR [eax],al
  43c826:	mov    bh,0xa7
  43c828:	jnp    0x43c859
  43c82a:	cmp    cl,BYTE PTR [eax-0x784bd044]
  43c830:	int3   
  43c831:	das    
  43c832:	ret    
  43c833:	xchg   DWORD PTR [edi+ebp*1+0x2fb287d9],esp
  43c83a:	iret   
  43c83b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43c83c:	adc    eax,0xa700132f
  43c841:	jecxz  0x43c871
  43c843:	sbb    eax,0x272ed8a7
  43c848:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43c849:	and    eax,0xd785572e
  43c84e:	sub    eax,0x2cef8594
  43c853:	adc    DWORD PTR [ebp-0x7b98d2c9],eax
  43c859:	sub    eax,0xcfa2b933
  43c85e:	xor    cl,BYTE PTR [eax+0x1131ee9a]
  43c864:	xchg   edx,eax
  43c865:	and    eax,0x3a89f132
  43c86a:	xor    bl,BYTE PTR [ecx-0x5f]
  43c86d:	(bad)  
  43c86e:	xor    DWORD PTR [esi-0x6dcea367],eax
  43c874:	xchg   ecx,eax
  43c875:	xor    DWORD PTR gs:[ecx],ebp
  43c878:	mov    esi,eax
  43c87a:	xor    DWORD PTR [ecx-0x5f],edx
  43c87d:	mov    dh,0x31
  43c87f:	add    BYTE PTR [esp+eax*1+0x7],al
  43c883:	aaa    
  43c884:	mov    WORD PTR [ebx],es
  43c886:	sub    BYTE PTR [edi],dh
  43c888:	cmp    eax,0xc9376d04
  43c88d:	add    al,0xc2
  43c88f:	aaa    
  43c890:	push   0x9f383904
  43c895:	or     esi,esi
  43c897:	cmp    BYTE PTR [eax],dh
  43c899:	or     bl,BYTE PTR [ebx+0x5007953a]
  43c89f:	cmp    al,0xbe
  43c8a1:	std    
  43c8a2:	push   0xf0ed003f
  43c8a7:	clc    
  43c8a8:	call   DWORD PTR [ecx+0x1]
  43c8ab:	add    BYTE PTR [eax],al
  43c8ad:	cmp    dl,BYTE PTR [ecx]
  43c8af:	ins    DWORD PTR es:[edi],dx
  43c8b0:	xor    BYTE PTR [eax],bl
  43c8b2:	lods   al,BYTE PTR ds:[esi]
  43c8b3:	out    dx,al
  43c8b4:	xor    ah,bl
  43c8b6:	stos   DWORD PTR es:[edi],eax
  43c8b7:	push   ebp
  43c8b8:	xor    DWORD PTR [edi],edi
  43c8ba:	stos   DWORD PTR es:[edi],eax
  43c8bb:	xor    DWORD PTR [ecx],0x31c7ab18
  43c8c1:	or     ch,BYTE PTR [ebx-0x5537cddc]
  43c8c7:	cmp    dh,BYTE PTR [edx]
  43c8c9:	je     0x43c879
  43c8cb:	dec    esi
  43c8cc:	xor    ch,BYTE PTR [edx-0x52]
  43c8cf:	jp     0x43c903
  43c8d1:	dec    ebp
  43c8d2:	scas   al,BYTE PTR es:[edi]
  43c8d3:	int    0x32
  43c8d5:	add    al,0xae
  43c8d7:	call   0x1f1cf0e
  43c8dc:	xor    edx,DWORD PTR [esi-0x55]
  43c8df:	cmp    al,0x33
  43c8e1:	mov    DWORD PTR [ebx-0x543fcc67],ebp
  43c8e7:	out    dx,al
  43c8e8:	xor    esi,DWORD PTR [esi-0x34cb8c48]
  43c8ee:	mov    eax,0xb8af34b5
  43c8f3:	fnsave [edx+edx*2]
  43c8f6:	mov    ecx,0x2494356d
  43c8fb:	test   DWORD PTR [ecx-0x5f097777],0xf1f74881
  43c905:	mov    esi,edx
  43c907:	mul    BYTE PTR [eax+0x0]
  43c90a:	and    BYTE PTR [esi+esi*8],0xd1
  43c90e:	push   0x2
  43c910:	idiv   dl
  43c912:	(bad)  
  43c913:	(bad)  
  43c914:	cmc    
  43c915:	imul   ebx,DWORD PTR gs:[ebx],0xfffffff5
  43c919:	shl    BYTE PTR [ebx+0x18],cl
  43c91c:	cmc    
  43c91d:	cmp    ecx,ebp
  43c91f:	xchg   edi,eax
  43c920:	sti    
  43c921:	jl     0x43c8f0
  43c923:	inc    ebp
  43c924:	sti    
  43c925:	mov    bh,0xbd
  43c927:	in     al,0xfa
  43c929:	fidivr DWORD PTR [ebp-0x5199058c]
  43c92f:	dec    ecx
  43c930:	cli    
  43c931:	stos   DWORD PTR es:[edi],eax
  43c932:	scas   al,BYTE PTR es:[edi]
  43c933:	xchg   edx,eax
  43c934:	cli    
  43c935:	into   
  43c936:	sahf   
  43c937:	leave  
  43c938:	cli    
  43c939:	push   es
  43c93a:	lahf   
  43c93b:	push   edi
  43c93c:	stc    
  43c93d:	stos   DWORD PTR es:[edi],eax
  43c93e:	(bad)  
  43c93f:	ja     0x43c93a
  43c941:	or     ecx,DWORD PTR [eax-0x7f55000d]
  43c947:	(bad)  
  43c948:	push   DWORD PTR [eax]
  43c94a:	jns    0x43c8d2
  43c94c:	push   DWORD PTR [esi+0x72]
  43c94f:	dec    ebx
  43c950:	dec    ebp
  43c952:	imul   ebp,DWORD PTR [ecx-0x425c00e4],0xfffffffc
  43c959:	call   DWORD PTR [esp+edi*4+0xbc48bec]
  43c960:	repz jp 0x43c928
  43c963:	sbb    al,0xf4
  43c965:	adc    al,0xc6
  43c967:	je     0x43c95a
  43c969:	cwde   
  43c96a:	(bad)  
  43c96b:	pop    edi
  43c96c:	lock and al,0x0
  43c96f:	test   eax,0xa378f6d3
  43c974:	add    ch,dh
  43c976:	sti    
  43c977:	sub    esi,esi
  43c979:	out    0x33,al
  43c97b:	pop    ebx
  43c97c:	mov    bl,0xa
  43c97e:	add    al,0x94
  43c980:	add    dh,bl
  43c982:	hlt    
  43c983:	cdq    
  43c984:	icebp  
  43c985:	icebp  
  43c986:	cmc    
  43c987:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43c988:	out    dx,al
  43c989:	scas   eax,DWORD PTR es:[edi]
  43c98a:	test   bl,0xef
  43c98d:	inc    esi
  43c98e:	clc    
  43c98f:	xor    al,0xed
  43c991:	xchg   esi,eax
  43c992:	sti    
  43c993:	(bad)  
  43c994:	clc    
  43c995:	jb     0x43c992
  43c997:	cwde   
  43c998:	hlt    
  43c999:	inc    eax
  43c99a:	add    dl,BYTE PTR [eax+eax*1-0x4ced7c19]
  43c9a1:	mov    esi,0xe8009404
  43c9a6:	repz sbb al,0xf0
  43c9a9:	daa    
  43c9aa:	repz sti 
  43c9ac:	out    dx,eax
  43c9ad:	mov    bl,0xf4
  43c9af:	ins    DWORD PTR es:[edi],dx
  43c9b0:	icebp  
  43c9b1:	and    ah,dh
  43c9b3:	xchg   ecx,eax
  43c9b4:	out    dx,al
  43c9b5:	xor    esi,esi
  43c9b7:	adc    ebp,esi
  43c9b9:	(bad)  
  43c9ba:	hlt    
  43c9bb:	sub    eax,0xfff85def
  43c9c0:	jmp    0x43c970
  43c9c2:	clc    
  43c9c3:	jp     0x43c9b2
  43c9c5:	xor    eax,0x89ed18f7
  43c9ca:	test   DWORD PTR [edx+0x7cfcfdf6],0xfcf5f7
  43c9d4:	fs neg ebp
  43c9d7:	cld    
  43c9d8:	pop    esp
  43c9d9:	mul    DWORD PTR ds:0x1df754fd
  43c9df:	std    
  43c9e0:	fdivr  st(5),st
  43c9e2:	xor    eax,0x1df5e4fd
  43c9e7:	std    
  43c9e8:	fdivr  st(5),st
  43c9ea:	add    eax,0xfff5f4fd
  43c9ef:	add    DWORD PTR [ecx+0x29],esi
  43c9f2:	xor    eax,0x353168fa
  43c9f7:	loop   0x43ca59
  43c9f9:	cmp    DWORD PTR ds:0x3481596a,esi
  43c9ff:	bound  edx,QWORD PTR [ecx-0x77]
  43ca02:	xor    al,0x7a
  43ca04:	dec    ecx
  43ca05:	xchg   ecx,eax
  43ca06:	xor    al,0x62
  43ca08:	inc    ecx
  43ca09:	cdq    
  43ca0a:	xor    al,0x8a
  43ca0c:	cmp    DWORD PTR [ecx+0x34],esp
  43ca0f:	xor    BYTE PTR [ecx],0x69
  43ca12:	xor    al,0x7a
  43ca14:	sub    DWORD PTR [ecx+0x34],esi
  43ca17:	bound  esp,QWORD PTR [ecx]
  43ca19:	jns    0x43ca4f
  43ca1b:	sub    bl,BYTE PTR [ecx]
  43ca1d:	shl    DWORD PTR [edx+eiz*1],0x11
  43ca21:	leave  
  43ca22:	xor    al,0x3a
  43ca24:	or     ecx,edx
  43ca26:	xor    al,0x22
  43ca28:	add    ecx,ebx
  43ca2a:	xor    al,0xa
  43ca2c:	stc    
  43ca2d:	mov    al,ds:0xa8f10234
  43ca32:	xor    al,0xfa
  43ca34:	call   0x125fee9
  43ca39:	loopne 0x43c9f3
  43ca3b:	xor    al,0xea
  43ca3d:	fild   DWORD PTR [eax]
  43ca3f:	cmp    al,0xe2
  43ca41:	ror    DWORD PTR [eax],cl
  43ca43:	cmp    al,0xfa
  43ca45:	retf   
  43ca46:	adc    BYTE PTR [edx+eiz*8],bh
  43ca49:	ret    
  43ca4a:	sbb    BYTE PTR [edx+ecx*1],bh
  43ca4d:	xchg   esp,eax
  43ca4e:	fistp  QWORD PTR [ebx]
  43ca50:	add    dl,BYTE PTR [edi+eiz*8-0xf5405c5]
  43ca57:	cmp    esp,edx
  43ca59:	mov    ds:0x942a3bf8,eax
  43ca5e:	aas    
  43ca5f:	cmp    al,0x22
  43ca61:	xchg   esp,eax
  43ca62:	inc    edi
  43ca63:	cmp    al,0xa2
  43ca65:	mov    ecx,eax
  43ca67:	cmp    eax,DWORD PTR [eax]
  43ca69:	push   ds
  43ca6a:	mov    cl,0xcf
  43ca6c:	cmp    al,0x36
  43ca6e:	mov    cl,0xd7
  43ca70:	cmp    al,0x1e
  43ca72:	mov    cl,0xdf
  43ca74:	cmp    al,0x16
  43ca76:	mov    cl,0xe7
  43ca78:	cmp    al,0xbe
  43ca7a:	mov    cl,0xef
  43ca7c:	cmp    al,0xf6
  43ca7e:	mov    cl,0xf7
  43ca80:	cmp    al,0x3e
  43ca82:	mov    dl,0xff
  43ca84:	cmp    al,0x36
  43ca86:	mov    dl,0x7
  43ca88:	cmp    eax,0x3d0fb25e
  43ca8d:	ss mov dl,0x17
  43ca90:	cmp    eax,0x3d1fb19e
  43ca95:	xchg   esi,eax
  43ca96:	mov    cl,0x27
  43ca98:	cmp    eax,0x3d2fb23e
  43ca9d:	add    BYTE PTR [esi],dh
  43ca9f:	mov    dl,0x37
  43caa1:	cmp    eax,0x3d3fb23e
  43caa6:	ss mov dl,0x47
  43caa9:	cmp    eax,0x3d4fb21e
  43caae:	ss mov dl,0x57
  43cab1:	cmp    eax,0x3d5fb21e
  43cab6:	push   ss
  43cab7:	mov    dl,0x67
  43cab9:	cmp    eax,0x3d6eff3e
  43cabe:	jbe    0x43cabf
  43cac0:	jbe    0x43caff
  43cac2:	ds (bad) 
  43cac4:	jle    0x43cb03
  43cac6:	leave  
  43cac7:	mov    dl,0xf0
  43cac9:	aas    
  43caca:	lods   eax,DWORD PTR ds:[esi]
  43cacb:	mov    ecx,?
  43cacd:	(bad)  
  43cace:	jge    0x43cacc
  43cad0:	(bad)  
  43cad1:	jmp    FWORD PTR [eax+ebp*4-0x47dfcb6d]
  43cad8:	sti    
  43cad9:	xor    al,0x7e
  43cadb:	mov    bh,0x99
  43cadd:	xor    eax,0x36e5b6ef
  43cae2:	xchg   esp,eax
  43cae3:	shl    ecx,cl
  43cae5:	fcmovnb st,st(3)
  43cae7:	fwait
  43cae8:	hlt    
  43cae9:	sbb    al,0xbc
  43caeb:	xlat   BYTE PTR ds:[ebx]
  43caec:	hlt    
  43caed:	dec    esp
  43caee:	mov    esp,0xac8bfc18
  43caf3:	inc    ebx
  43caf4:	sti    
  43caf5:	add    BYTE PTR [esi-0x611e0a9a],ch
  43cafb:	(bad)  
  43cafc:	hlt    
  43cafd:	ss lahf 
  43caff:	shl    ch,1
  43cb01:	lods   al,BYTE PTR ds:[esi]
  43cb02:	add    BYTE PTR [edi-0x771807a3],cl
  43cb08:	js     0x43cb08
  43cb0a:	hlt    
  43cb0b:	cmp    esi,0x977a3bf9
  43cb11:	cli    
  43cb12:	outs   dx,BYTE PTR ds:[esi]
  43cb13:	jb     0x43cb33
  43cb15:	cli    
  43cb16:	lea    ebp,[edx+0x29]
  43cb19:	cli    
  43cb1a:	mov    al,0x62
  43cb1c:	lock stc 
  43cb1e:	jmp    0xb2d3:0xbf99b5a
  43cb25:	stc    
  43cb26:	aaa    
  43cb27:	retf   
  43cb28:	data16 stc 
  43cb2a:	pop    ecx
  43cb2b:	ret    
  43cb2c:	dec    eax
  43cb2d:	stc    
  43cb2e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43cb2f:	mov    ebx,0xb3e1f90a
  43cb34:	add    eax,0x9dabf2f9
  43cb39:	stc    
  43cb3a:	jmp    ebx
  43cb3c:	cdq    
  43cb3d:	pop    esp
  43cb3e:	(bad)  
  43cb3f:	fisttp DWORD PTR [ecx+0x1094fffc]
  43cb45:	hlt    
  43cb46:	test   BYTE PTR gs:[ebp-0x13],cl
  43cb4a:	mov    dl,0x84
  43cb4c:	jb     0x43cb3a
  43cb4e:	pop    es
  43cb4f:	test   eax,ecx
  43cb51:	repz and esp,DWORD PTR [ebp+0x0]
  43cb55:	repz cs gs cmc 
  43cb59:	repnz scas al,BYTE PTR es:[edi]
  43cb5b:	add    BYTE PTR gs:[ecx-0xc],ah
  43cb5f:	mov    esp,0xb4f495f1
  43cb64:	repnz aam 0xf1
  43cb67:	add    bl,ah
  43cb69:	repnz add esi,edx
  43cb6c:	sub    al,0xf2
  43cb6e:	xchg   esi,eax
  43cb6f:	icebp  
  43cb70:	pop    ecx
  43cb71:	repnz (bad) 
  43cb73:	repnz fpatan 
  43cb76:	push   ss
  43cb77:	repz hlt 
  43cb79:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43cb7b:	bnd jbe 0x43cb71
  43cb7e:	in     al,0xf7
  43cb80:	mov    ds:0x8af796f4,al
  43cb85:	cmc    
  43cb86:	leave  
  43cb87:	clc    
  43cb88:	jae    0x43cb80
  43cb8a:	adc    dh,dh
  43cb8c:	into   
  43cb8d:	test   bl,0xf5
  43cb90:	or     al,0xf6
  43cb92:	pop    eax
  43cb93:	cmc    
  43cb94:	div    ebp
  43cb96:	je     0x43cb8d
  43cb98:	pop    ebx
  43cb99:	not    eax
  43cb9b:	sti    
  43cb9c:	sub    eax,0xe8b9fbb5
  43cba2:	mov    edi,ebx
  43cba4:	std    
  43cba5:	out    0xb5,eax
  43cba7:	cld    
  43cba8:	mov    ecx,ebp
  43cbaa:	call   0xd4f9:0x60ea73f9
  43cbb1:	jmp    0xea44c4cc
  43cbb6:	jmp    0x33fa:0xc5eb91fa
  43cbbd:	jmp    0x43cb5d
  43cbbf:	stc    
  43cbc0:	sbb    eax,0xdff9a2eb
  43cbc5:	jmp    0xf9c2:0xeaeff9ba
  43cbcc:	add    BYTE PTR [ebp-0x6b064116],ch
  43cbd2:	in     al,dx
  43cbd3:	(bad)  
  43cbd4:	call   DWORD PTR [ecx-0x6bfe0014]
  43cbda:	jmp    0x43cc17
  43cbdc:	daa    
  43cbdd:	xchg   esp,eax
  43cbde:	dec    eax
  43cbdf:	cmp    al,0x46
  43cbe1:	xchg   esp,eax
  43cbe2:	and    edi,DWORD PTR [esp+ecx*1]
  43cbe5:	xchg   esp,eax
  43cbe6:	xor    DWORD PTR [esp+edx*1],edi
  43cbe9:	xchg   esp,eax
  43cbea:	js     0x43cc27
  43cbec:	xchg   esi,eax
  43cbed:	sub    DWORD PTR [esi-0x50f81608],0xfffffff8
  43cbf4:	push   ecx
  43cbf5:	cwde   
  43cbf6:	add    BYTE PTR [eax],al
  43cbf8:	jecxz  0x43cc61
  43cbfa:	adc    DWORD PTR [eax],esi
  43cbfc:	dec    eax
  43cbfd:	push   0x60322f68
  43cc02:	retf   
  43cc03:	das    
  43cc04:	inc    ebp
  43cc05:	dec    eax
  43cc06:	lahf   
  43cc07:	das    
  43cc08:	jmp    0xda47:0x42f1246
  43cc0f:	cs stos DWORD PTR es:[edi],eax
  43cc11:	inc    esi
  43cc12:	das    
  43cc13:	das    
  43cc14:	data16 daa 
  43cc16:	je     0x43cc46
  43cc18:	sub    DWORD PTR [edi],esp
  43cc1a:	add    eax,0xcb267f2e
  43cc1f:	sub    eax,0x3379249c
  43cc24:	push   ss
  43cc25:	or     al,0xf9
  43cc27:	xor    al,dh
  43cc29:	add    ah,ah
  43cc2b:	xor    DWORD PTR [ebp-0x61ceecf7],ecx
  43cc31:	add    BYTE PTR [eax],al
  43cc33:	dec    edx
  43cc34:	xor    DWORD PTR [ebp-0x18],edi
  43cc37:	out    dx,al
  43cc38:	aaa    
  43cc39:	mov    eax,ds:0x663850ef
  43cc3e:	loopne 0x43cca7
  43cc40:	aaa    
  43cc41:	add    esi,ebx
  43cc43:	sbb    esi,DWORD PTR [esi]
  43cc45:	popa   
  43cc46:	into   
  43cc47:	cs outs dx,BYTE PTR ss:[esi]
  43cc4a:	int    0x91
  43cc4c:	xor    eax,0x355ebd8b
  43cc51:	add    BYTE PTR [esi],al
  43cc53:	test   al,0xce
  43cc55:	cmp    bl,dh
  43cc57:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43cc58:	in     al,dx
  43cc59:	cmp    dh,BYTE PTR [eax+0x753b15a8]
  43cc5f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43cc60:	outs   dx,BYTE PTR ds:[esi]
  43cc61:	cmp    esi,DWORD PTR [ecx-0x59]
  43cc64:	jl     0x43cca1
  43cc66:	push   es
  43cc67:	test   eax,0xa8e93b9b
  43cc6c:	lds    edi,FWORD PTR [ebx]
  43cc6e:	xor    BYTE PTR [eax-0x5294c421],ch
  43cc74:	cmp    DWORD PTR [eiz*4-0x5cc39c00],edi
  43cc7b:	lods   eax,DWORD PTR ds:[esi]
  43cc7c:	lds    edi,FWORD PTR [esi*2-0x24c2f352]
  43cc83:	scas   al,BYTE PTR es:[edi]
  43cc84:	mov    eax,ds:0x69ac023d
  43cc89:	aas    
  43cc8a:	push   0xffffffac
  43cc8c:	xchg   esp,eax
  43cc8d:	aas    
  43cc8e:	outs   dx,BYTE PTR ds:[esi]
  43cc8f:	lods   al,BYTE PTR ds:[esi]
  43cc90:	sar    DWORD PTR [edi],0x9b
  43cc93:	lods   al,BYTE PTR ds:[esi]
  43cc94:	fstp   TBYTE PTR [edi]
  43cc96:	add    ah,al
  43cc98:	lods   al,BYTE PTR ds:[esi]
  43cc99:	clc    
  43cc9a:	(bad)  
  43cc9b:	cmp    eax,0xe9fff9c1
  43cca0:	add    BYTE PTR [eax],al
  43cca2:	add    BYTE PTR [ecx+esi*4-0x4d52ce1f],ah
  43cca9:	repnz xor DWORD PTR [esi],ecx
  43ccac:	mov    al,0x1e
  43ccae:	xor    ecx,DWORD PTR [edi-0x4b]
  43ccb1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43ccb2:	xor    al,0x8f
  43ccb4:	mov    ch,0xe2
  43ccb6:	xor    al,0xfa
  43ccb8:	mov    ch,0x28
  43ccba:	xor    eax,0x3591b662
  43ccbf:	dec    esi
  43ccc0:	mov    dh,0xd1
  43ccc2:	xor    eax,0x3680b2a5
  43ccc7:	add    esi,DWORD PTR [edx+0x494371b]
  43cccd:	in     eax,dx
  43ccce:	xor    eax,0x4eece58b
  43ccd3:	cmp    DWORD PTR [ebp*8-0x138b9441],0xfffffffd
  43ccdb:	arpl   di,cx
  43ccdd:	hlt    
  43ccde:	sbb    BYTE PTR [ebp+0x46],bl
  43cce1:	sti    
  43cce2:	mov    bh,0x5d
  43cce4:	cmp    bh,dl
  43cce6:	loopne 0x43ccb6
  43cce8:	cmp    edi,ecx
  43ccea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43cceb:	enter  0xf766,0xeb
  43ccef:	rcl    BYTE PTR [esi+0x57b9a1f7],0xf6
  43ccf6:	lds    esi,FWORD PTR [ecx+0xadf6a6]
  43ccfc:	stos   BYTE PTR es:[edi],al
  43ccfd:	daa    
  43ccfe:	test   BYTE PTR [ebx],0xa3
  43cd01:	mov    esp,0x99b21f5
  43cd06:	cmc    
  43cd07:	inc    ecx
  43cd08:	xchg   ebx,eax
  43cd09:	shl    ch,0x68
  43cd0c:	mov    ecx,esp
  43cd0e:	cmc    
  43cd0f:	fld    DWORD PTR [ebx+0x3bfecc99]
  43cd15:	ret    0xfffc
  43cd18:	xchg   esp,eax
  43cd19:	(bad)  
  43cd1a:	in     al,dx
  43cd1b:	and    esp,DWORD PTR [ebp+ebp*4-0x14]
  43cd1f:	xor    eax,0x65ec9364
  43cd24:	fs mov ch,ah
  43cd27:	lahf   
  43cd28:	les    ebx,FWORD PTR [edi]
  43cd2a:	hlt    
  43cd2b:	dec    edi
  43cd2c:	lds    eax,FWORD PTR [edi-0x273a500d]
  43cd32:	repnz dec eax
  43cd34:	rcr    BYTE PTR [edx],0xf0
  43cd37:	int3   
  43cd38:	test   al,0xaf
  43cd3a:	out    dx,eax
  43cd3b:	and    DWORD PTR [ecx-0x55b61126],0x29
  43cd42:	out    dx,eax
  43cd43:	scas   eax,DWORD PTR es:[edi]
  43cd44:	mov    ds:0x9ef1c700,al
  43cd49:	repz sub al,0xf3
  43cd4c:	inc    ebx
  43cd4d:	repz out 0xfb,al
  43cd50:	xchg   ebx,eax
  43cd51:	call   0xe926c987
  43cd56:	loopne 0x43cd54
  43cd58:	jo     0x43cd43
  43cd5a:	inc    ecx
  43cd5b:	std    
  43cd5c:	sub    ecx,ebp
  43cd5e:	jae    0x43cd5c
  43cd60:	add    cl,cl
  43cd62:	jmp    0xe6c4ca25
  43cd67:	cmp    edi,esi
  43cd69:	sub    al,0xe6
  43cd6b:	(bad)  
  43cd6c:	(bad)  
  43cd6d:	out    0xec,al
  43cd6f:	out    0xf8,al
  43cd71:	mov    ah,0xed
  43cd73:	jne    0x43cd6d
  43cd75:	inc    edx
  43cd76:	in     eax,dx
  43cd77:	icebp  
  43cd78:	stc    
  43cd79:	ret    
  43cd7a:	jmp    0xf96f:0xea47fa02
  43cd81:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43cd82:	jmp    0x43cdd5
  43cd84:	cli    
  43cd85:	sbb    ebx,ebp
  43cd87:	aaa    
  43cd88:	cli    
  43cd89:	push   ebx
  43cd8a:	stos   DWORD PTR es:[edi],eax
  43cd8b:	out    0xa3,al
  43cd8d:	dec    edx
  43cd8e:	stos   DWORD PTR es:[edi],eax
  43cd8f:	add    edx,DWORD PTR es:[eax+eax*1-0x100b0bec]
  43cd97:	inc    ebp
  43cd98:	repz mov al,0xf1
  43cd9b:	popf   
  43cd9c:	cmc    
  43cd9d:	mov    al,0xee
  43cd9f:	or     eax,0x6ef88f5
  43cda4:	div    DWORD PTR [ebp-0x11]
  43cda7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43cda8:	imul   BYTE PTR [ebp-0x11]
  43cdab:	jle    0x43cda3
  43cdad:	out    0xee,eax
  43cdaf:	fsubp  st(7),st
  43cdb1:	test   eax,0xc1efbcf4
  43cdb6:	hlt    
  43cdb7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43cdb8:	out    dx,eax
  43cdb9:	jns    0x43cdaf
  43cdbb:	out    dx,ax
  43cdbd:	adc    dh,ah
  43cdbf:	dec    DWORD PTR [esi-0xd]
  43cdc2:	jae    0x43cdf7
  43cdc4:	sbb    al,0x0
  43cdc6:	jmp    0x43cd6b
  43cdc8:	xor    ebx,ebx
  43cdca:	les    esi,FWORD PTR [edx+0xbae933]
  43cdd0:	xor    esi,esi
  43cdd2:	mov    dl,0xdf
  43cdd4:	xor    dl,BYTE PTR [ebx]
  43cdd6:	stos   DWORD PTR es:[edi],eax
  43cdd7:	jmp    0x2071b0e
  43cddc:	xor    dl,BYTE PTR [edx]
  43cdde:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43cddf:	mov    dl,0x31
  43cde1:	xor    al,0xa0
  43cde3:	mov    esi,DWORD PTR [edi]
  43cde5:	les    ebx,FWORD PTR [eax-0x70cbc8fd]
  43cdeb:	jbe    0x43ce23
  43cded:	jge    0x43cd7e
  43cdef:	mov    WORD PTR [esi],?
  43cdf1:	mov    ecx,0xf136987f
  43cdf6:	jns    0x43cded
  43cdf8:	xor    eax,0x361f722b
  43cdfd:	pop    ecx
  43cdfe:	push   0x60
  43ce00:	xor    eax,0x35cf62ad
  43ce05:	jb     0x43ce61
  43ce07:	or     eax,0xd150e235
  43ce0c:	xor    al,0x3c
  43ce0e:	dec    ecx
  43ce0f:	pushf  
  43ce10:	xor    al,0x56
  43ce12:	inc    ecx
  43ce13:	push   cs
  43ce14:	cmp    al,0x2
  43ce16:	cmp    al,0xeb
  43ce18:	cmp    ebx,DWORD PTR [eax-0x40c3ddd5]
  43ce1e:	and    edx,DWORD PTR [eax-0x2ae38bc5]
  43ce24:	cmp    esi,DWORD PTR [edx]
  43ce26:	sbb    al,0xe
  43ce28:	cmp    ecx,DWORD PTR ds:0x3aa50b00
  43ce2e:	in     eax,0xd
  43ce30:	repz cmp DWORD PTR [ecx+0x3d3a4cfd],esp
  43ce37:	(bad)  
  43ce38:	ins    DWORD PTR es:[edi],dx
  43ce39:	cmp    DWORD PTR [eax],eax
  43ce3b:	ds test eax,0xa86c3f51
  43ce41:	jns    0x43ce82
  43ce43:	cmp    al,0xa7
  43ce45:	lahf   
  43ce46:	aas    
  43ce47:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43ce48:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43ce49:	ret    
  43ce4a:	aas    
  43ce4b:	(bad)  
  43ce4c:	test   al,0xf7
  43ce4e:	aas    
  43ce4f:	mov    ebp,0x41fff96d
  43ce54:	std    
  43ce55:	(bad)  
  43ce56:	inc    esp
  43ce58:	lods   eax,DWORD PTR ds:[esi]
  43ce59:	xor    dh,BYTE PTR [eax]
  43ce5b:	(bad)  
  43ce5c:	mov    ah,0x63
  43ce5e:	xor    BYTE PTR [esi],ah
  43ce60:	lods   eax,DWORD PTR ds:[esi]
  43ce61:	pushf  
  43ce62:	xor    BYTE PTR [edi],dl
  43ce64:	scas   al,BYTE PTR es:[edi]
  43ce65:	test   al,0x30
  43ce67:	and    ebp,DWORD PTR [ebp-0x52c6cf3b]
  43ce6d:	add    eax,0x27ae8231
  43ce72:	xor    DWORD PTR [ebp-0x52],esp
  43ce75:	inc    esi
  43ce76:	xor    DWORD PTR [ebp-0x2ece8953],ebx
  43ce7c:	scas   al,BYTE PTR es:[edi]
  43ce7d:	scas   al,BYTE PTR es:[edi]
  43ce7e:	xor    DWORD PTR [ecx],esi
  43ce80:	scas   al,BYTE PTR es:[edi]
  43ce81:	shl    BYTE PTR [ecx],cl
  43ce83:	jmp    0x4d75d136
  43ce88:	mov    bl,0x3a
  43ce8a:	xor    cl,BYTE PTR ds:0x325eb3
  43ce90:	(bad)  
  43ce91:	mov    bl,0x91
  43ce93:	xor    bl,BYTE PTR [edx]
  43ce95:	mov    bl,0xcc
  43ce97:	xor    cl,bh
  43ce99:	mov    bl,0xf0
  43ce9b:	xor    dh,BYTE PTR [edi]
  43ce9d:	mov    ah,0x20
  43ce9f:	xor    ebp,DWORD PTR [ebx]
  43cea1:	mov    ah,0x58
  43cea3:	xor    ebx,DWORD PTR [ebx-0x4c]
  43cea6:	jl     0x43cedb
  43cea8:	adc    al,0xb4
  43ceaa:	scas   eax,DWORD PTR es:[edi]
  43ceab:	xor    ecx,eax
  43cead:	mov    ah,0xea
  43ceaf:	xor    ebp,DWORD PTR [eax-0x6bcc034c]
  43ceb5:	sahf   
  43ceb6:	call   0xe8f48ec8
  43cebb:	pop    ds
  43cebc:	test   al,0xba
  43cebe:	call   0xe8ae6ef0
  43cec3:	je     0x43ce6d
  43cec5:	and    ebp,ecx
  43cec7:	(bad)  
  43cec8:	mov    al,ds:0x8915e910
  43cecd:	push   cs
  43cece:	out    dx,eax
  43cecf:	imul   eax,DWORD PTR [ecx-0x755a15ad],0x14
  43ced6:	jmp    0xfb385248
  43cedb:	xchg   ecx,eax
  43cedc:	outs   dx,BYTE PTR ds:[esi]
  43cedd:	push   edi
  43cede:	hlt    
  43cedf:	out    0x68,al
  43cee1:	(bad)  
  43cee2:	idiv   bh
  43cee4:	mov    ds:0x9bfdfc96,eax
  43cee9:	call   0x55ec:0xd294fffc
  43cef0:	(bad)  
  43cef1:	imul   ch
  43cef3:	jnp    0x43cef5
  43cef5:	(bad)  
  43cef6:	enter  0x58ed,0xc7
  43cefa:	or     eax,0x4da884f0
  43ceff:	lock mov esp,0x1aeee2a0
  43cf05:	stos   BYTE PTR es:[edi],al
  43cf06:	inc    eax
  43cf07:	jmp    0x8cd6:0xfb84a2bd
  43cf0e:	aas    
  43cf0f:	cld    
  43cf10:	fmul   QWORD PTR [edi+edx*8-0x4080b706]
  43cf17:	lock pop eax
  43cf19:	jns    0x43cecf
  43cf1b:	test   DWORD PTR [ebx-0xedb8f],0xfe0c9a2b
  43cf25:	and    esi,DWORD PTR [edx-0x4]
  43cf28:	call   DWORD PTR [ebp+eiz*1+0xc4e8f4]
  43cf2f:	jae    0x43cf26
  43cf31:	and    eax,0x22f57df2
  43cf36:	repnz std 
  43cf38:	hlt    
  43cf39:	jmp    0xaff4:0xf363f1
  43cf40:	out    dx,eax
  43cf41:	outs   dx,BYTE PTR ds:[esi]
  43cf42:	in     al,dx
  43cf43:	ds lock xor eax,0x5af131ee
  43cf4a:	out    dx,al
  43cf4b:	pop    esi
  43cf4c:	out    dx,al
  43cf4d:	sbb    eax,0xfaed7fef
  43cf52:	out    dx,al
  43cf53:	test   eax,0xebeee8ed
  43cf58:	out    dx,al
  43cf59:	add    BYTE PTR [eax+0x34ef35ef],bl
  43cf5f:	out    dx,eax
  43cf60:	stc    
  43cf61:	cld    
  43cf62:	sbb    eax,0x87f9e3ea
  43cf67:	jmp    0xfb3c:0xeb83f9fd
  43cf6e:	or     al,0xec
  43cf70:	inc    esp
  43cf71:	cli    
  43cf72:	xchg   ecx,eax
  43cf73:	in     al,0x1d
  43cf75:	stc    
  43cf76:	add    ah,dh
  43cf78:	dec    ebp
  43cf79:	clc    
  43cf7a:	cmp    ebp,esp
  43cf7c:	mov    ch,0xf8
  43cf7e:	dec    edx
  43cf7f:	in     eax,0x87
  43cf81:	clc    
  43cf82:	jg     0x43cf69
  43cf84:	out    0xf5,eax
  43cf86:	xchg   esp,eax
  43cf87:	out    0x6d,al
  43cf89:	cmc    
  43cf8a:	mov    ah,0xe7
  43cf8c:	daa    
  43cf8d:	neg    ebx
  43cf8f:	out    0xcc,eax
  43cf91:	test   dl,0xe7
  43cf94:	xchg   dh,dh
  43cf96:	(bad)  
  43cf97:	out    0x4d,eax
  43cf99:	idiv   BYTE PTR [ebx]
  43cf9b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43cf9c:	out    0xe3,al
  43cf9e:	xor    DWORD PTR [edi+0x94034e],esp
  43cfa4:	push   es
  43cfa5:	hlt    
  43cfa6:	push   0xfffffff0
  43cfa8:	jmp    FWORD PTR [ecx+0xe303a27]
  43cfae:	pop    es
  43cfaf:	in     al,0x2e
  43cfb1:	lea    eax,[eax]
  43cfb3:	sbb    ebp,DWORD PTR [edi]
  43cfb5:	dec    ebp
  43cfb6:	or     BYTE PTR [ebx-0x75fa18d2],bh
  43cfbc:	xor    esi,DWORD PTR [ebp+0x0]
  43cfbf:	in     al,0x61
  43cfc1:	xor    bl,BYTE PTR [eax-0x72cdbb07]
  43cfc7:	icebp  
  43cfc8:	and    eax,0xb8e96632
  43cfcd:	xor    DWORD PTR [ebx],edx
  43cfcf:	shl    DWORD PTR [edx-0x584522cf],0x31
  43cfd6:	add    esi,DWORD PTR [ecx-0x56b5cec6]
  43cfdc:	xor    DWORD PTR [eax],0x3064c172
  43cfe2:	pushf  
  43cfe3:	mov    ecx,0x9ff230af
  43cfe8:	cmc    
  43cfe9:	aaa    
  43cfea:	clc    
  43cfeb:	lahf   
  43cfec:	cmp    DWORD PTR [eax],edi
  43cfee:	dec    edx
  43cfef:	nop
  43cff0:	sbb    al,0x38
  43cff2:	jnp    0x43cf7c
  43cff4:	pop    esi
  43cff5:	aaa    
  43cff6:	push   esi
  43cff7:	or     dh,0x37
  43cffa:	mov    bh,0x78
  43cffc:	or     eax,0xe86ec637
  43d001:	ss sub eax,0x13374b6f
  43d007:	pop    edi
  43d008:	daa    
  43d009:	aaa    
  43d00a:	outs   dx,BYTE PTR ds:[esi]
  43d00b:	pop    edi
  43d00c:	xchg   DWORD PTR [esi],esi
  43d00e:	aaa    
  43d00f:	dec    edi
  43d010:	fs ss inc eax
  43d013:	dec    edi
  43d014:	leave  
  43d015:	ss push esi
  43d017:	aas    
  43d018:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43d019:	ss icebp 
  43d01b:	cmp    eax,0x2e173608
  43d020:	out    0x35,al
  43d022:	add    BYTE PTR [eax],al
  43d024:	or     ch,BYTE PTR [eax-0x5814c5ab]
  43d02a:	jnp    0x43d066
  43d02c:	(bad)  
  43d02d:	stos   BYTE PTR es:[edi],al
  43d02e:	cwde   
  43d02f:	cmp    ch,BYTE PTR [ebp-0x50c52756]
  43d035:	stos   BYTE PTR es:[edi],al
  43d036:	(bad)  
  43d037:	cmp    cl,BYTE PTR [ebx]
  43d039:	test   eax,0xa8de3b25
  43d03e:	dec    ebx
  43d03f:	cmp    ebx,DWORD PTR [esi]
  43d041:	test   eax,0xa7783b6b
  43d046:	xchg   ebx,eax
  43d047:	cmp    esp,DWORD PTR [edx-0x7c40459]
  43d04d:	lods   eax,DWORD PTR ds:[esi]
  43d04e:	gs cmp al,0x41
  43d051:	lods   eax,DWORD PTR ds:[esi]
  43d052:	mov    ds:0xd2adf53c,al
  43d057:	cmp    al,0xcc
  43d059:	lods   eax,DWORD PTR ds:[esi]
  43d05a:	fistp  QWORD PTR [eax+edx*8]
  43d05d:	lods   eax,DWORD PTR ds:[esi]
  43d05e:	in     eax,dx
  43d05f:	cmp    al,0xb8
  43d061:	scas   al,BYTE PTR es:[edi]
  43d062:	or     edi,DWORD PTR ds:0x3d26ad9e
  43d068:	xchg   edi,eax
  43d069:	lods   eax,DWORD PTR ds:[esi]
  43d06a:	cmp    DWORD PTR ds:0x3df5aef4,0x71
  43d071:	stos   DWORD PTR es:[edi],eax
  43d072:	aas    
  43d073:	ds aam 0xae
  43d076:	jbe    0x43d0b6
  43d078:	add    ebp,DWORD PTR [eax+ebp*4-0x1654d6c2]
  43d07f:	sub    BYTE PTR ds:[ecx+edi*1-0x7531ac1],0xff
  43d088:	add    BYTE PTR [ebp-0x4f],ch
  43d08b:	cli    
  43d08c:	jmp    DWORD PTR [ecx-0x6fffffff]
  43d092:	mov    dl,0xb0
  43d094:	xor    DWORD PTR [eax+0x3e31efb2],eax
  43d09a:	scas   eax,DWORD PTR es:[edi]
  43d09b:	xor    dl,BYTE PTR es:[edx+edx*1+0x566656ee]
  43d0a3:	out    dx,al
  43d0a4:	jb     0x43d10c
  43d0a6:	inc    ebx
  43d0a7:	out    dx,eax
  43d0a8:	or     ah,BYTE PTR [edi-0x58]
  43d0ab:	out    dx,eax
  43d0ac:	inc    edx
  43d0ad:	addr16 jno 0x43d09f
  43d0b0:	mov    al,bh
  43d0b2:	xor    eax,0xcc7d6f0
  43d0b7:	lock test bh,0x97
  43d0bb:	call   0xe8f790cd
  43d0c0:	cmp    BYTE PTR [eax-0x5e551682],ch
  43d0c6:	bnd jmp 0xeafa7ae2
  43d0cc:	mov    ds:0x33f4baa2,eax
  43d0d1:	mov    WORD PTR [eax+0x2e8c81f4],es
  43d0d7:	in     al,dx
  43d0d8:	(bad)  
  43d0d9:	jl     0x43d07a
  43d0db:	jmp    0x43d0e8
  43d0dd:	jge    0x43d0c0
  43d0df:	jmp    0x6d6c:0xeb416d4e
  43d0e6:	xor    bl,ch
  43d0e8:	(bad)  
  43d0e9:	pop    ebp
  43d0ea:	mov    eax,0x5d00e0ea
  43d0ef:	ins    DWORD PTR es:[edi],dx
  43d0f0:	jmp    0xce10:0xeac7ce03
  43d0f7:	mov    dh,0xea
  43d0f9:	sub    eax,0x78e9d8be
  43d0fe:	mov    esi,0xaf22ea2e
  43d103:	enter  0x34e9,0xaf
  43d107:	shr    al,cl
  43d109:	push   eax
  43d10a:	lahf   
  43d10b:	add    eax,0xf39f5ee9
  43d110:	call   0xe9ed6079
  43d115:	jb     0x43d0a6
  43d117:	add    ch,bl
  43d119:	out    dx,al
  43d11a:	mov    esp,0x4aef61e7
  43d11f:	call   0xe523c0cd
  43d124:	mov    bh,0xef
  43d126:	ret    
  43d127:	in     al,0x42
  43d129:	lock jae 0x43d111
  43d12c:	cli    
  43d12d:	lock mov al,0xe5
  43d130:	mov    dh,0xf0
  43d132:	cmp    dh,ah
  43d134:	adc    ecx,esi
  43d136:	pop    edi
  43d137:	loop   0x43d0f9
  43d139:	icebp  
  43d13a:	loope  0x43d11e
  43d13c:	jmp    0x43d130
  43d13e:	and    esp,esp
  43d140:	dec    ecx
  43d141:	repz fsubrp st(3),st
  43d144:	add    dh,bl
  43d146:	lock jecxz 0x43d12f
  43d149:	inc    ebx
  43d14a:	loop   0x43d0ef
  43d14c:	cli    
  43d14d:	add    edx,DWORD PTR [eax+eax*1+0x1500f38e]
  43d154:	icebp  
  43d155:	add    ah,dh
  43d157:	adc    dl,dh
  43d159:	mov    eax,ds:0xf2f1b2f4
  43d15e:	cmc    
  43d15f:	es out dx,eax
  43d161:	mov    ebp,?
  43d163:	dec    esi
  43d164:	in     al,dx
  43d165:	mov    edi,esi
  43d167:	sub    ebp,0xfffffff9
  43d16a:	clc    
  43d16b:	pusha  
  43d16c:	in     eax,dx
  43d16d:	(bad)  
  43d16f:	jo     0x43d15b
  43d171:	hlt    
  43d172:	stc    
  43d173:	retf   0x26ea
  43d176:	cli    
  43d177:	aam    0xea
  43d179:	xor    dl,bh
  43d17b:	out    0xea,al
  43d17d:	add    edx,edi
  43d17f:	pop    ss
  43d180:	jmp    0xf956:0xea3bf95c
  43d187:	and    al,0xea
  43d189:	call   0x69f9:0x82ea48f9
  43d190:	jmp    0xd131:0xa24d6fff
  43d197:	dec    esi
  43d198:	(bad)  
  43d199:	xor    BYTE PTR [ebx-0x51cec2c2],ch
  43d19f:	ds inc esp
  43d1a1:	xor    ebx,eax
  43d1a3:	adc    esi,DWORD PTR cs:[ecx]
  43d1a6:	shr    BYTE PTR [esi],1
  43d1a8:	sub    BYTE PTR [ecx],dh
  43d1aa:	jns    0x43d1ca
  43d1ac:	jno    0x43d1de
  43d1ae:	sub    DWORD PTR [esi],ebx
  43d1b0:	mov    ebp,0xc40e1430
  43d1b5:	xor    BYTE PTR [ebx+0x0],al
  43d1b8:	push   cs
  43d1b9:	xchg   ebp,eax
  43d1ba:	xor    BYTE PTR [ebx],ah
  43d1bc:	(bad)  
  43d1bd:	mov    eax,ds:0x6eff330
  43d1c2:	cmp    cl,cl
  43d1c4:	jmp    eax
  43d1c6:	aaa    
  43d1c7:	mov    esi,0x2d3765ff
  43d1cc:	out    dx,eax
  43d1cd:	mov    ch,0x37
  43d1cf:	adc    eax,0xe636faef
  43d1d4:	ror    BYTE PTR [edx],0x37
  43d1d7:	into   
  43d1d8:	mov    eax,0xb23a365d
  43d1dd:	inc    edi
  43d1de:	ss jb  0x43d18b
  43d1e1:	mov    dh,BYTE PTR ds:0x35bbc295
  43d1e7:	mov    eax,0xd435c6ba
  43d1ec:	mov    dl,0xb
  43d1ee:	xor    eax,0x354da911
  43d1f3:	dec    eax
  43d1f4:	cmp    DWORD PTR [ebx+0x34],0x34827954
  43d1fb:	push   edi
  43d1fc:	jno    0x43d1f9
  43d1fe:	cmp    edi,ecx
  43d200:	imul   eax,DWORD PTR [esp+edi*1],0xffffffdc
  43d204:	sub    eax,0x3b
  43d207:	pop    ss
  43d208:	fs es cmp al,0x0
  43d20c:	repnz mov al,0x8e
  43d20f:	cmp    al,0xf6
  43d211:	mov    al,0xa1
  43d213:	cmp    al,0x90
  43d215:	mov    al,0xc8
  43d217:	cmp    al,0x1f
  43d219:	mov    cl,0xe0
  43d21b:	cmp    al,0x0
  43d21d:	jmp    0x43d1cf
  43d21f:	repnz cmp al,0x2c
  43d222:	xchg   ebx,eax
  43d223:	or     bh,BYTE PTR ds:0x3d2d932b
  43d229:	in     al,0x92
  43d22b:	pop    esp
  43d22c:	cmp    eax,0x3d6b9349
  43d231:	push   esp
  43d232:	xchg   ebx,eax
  43d233:	xchg   DWORD PTR ds:0x3df691d3,edi
  43d239:	repz scas eax,DWORD PTR es:[edi]
  43d23b:	add    al,0x3e
  43d23d:	add    esi,DWORD PTR [eax-0x501bc1eb]
  43d243:	dec    edi
  43d244:	ds (bad) 
  43d246:	mov    al,0xf8
  43d248:	(bad)  
  43d249:	std    
  43d24a:	dec    ebp
  43d24b:	cli    
  43d24c:	inc    DWORD PTR [ecx-0x4]
  43d24f:	(bad)  
  43d250:	push   DWORD PTR [ebp-0x53]
  43d253:	mov    bl,0x31
  43d255:	repnz stos DWORD PTR es:[edi],eax
  43d257:	and    DWORD PTR [edx],esi
  43d259:	add    eax,0x823336ad
  43d25e:	stos   DWORD PTR es:[edi],eax
  43d25f:	arpl   WORD PTR [ebx],si
  43d261:	cmp    eax,0xc339fac
  43d266:	lods   eax,DWORD PTR ds:[esi]
  43d267:	or     al,0x34
  43d269:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43d26a:	test   eax,0xa858342d
  43d26f:	xor    BYTE PTR [edx+ebp*8],0xa9
  43d273:	xor    BYTE PTR ds:0x3632a791,0xdc
  43d27a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43d27b:	jno    0x43d2b3
  43d27d:	fwait
  43d27e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43d27f:	cmp    BYTE PTR ss:[eax],al
  43d282:	push   ss
  43d283:	xchg   ebp,eax
  43d284:	lds    edi,FWORD PTR [eax]
  43d286:	xchg   esp,eax
  43d287:	mov    eax,ds:0xdcad1ae5
  43d28c:	in     al,0x55
  43d28e:	popf   
  43d28f:	pmulhw mm5,QWORD PTR [ebp-0x63]
  43d293:	mov    ds:0x458d82e5,eax
  43d298:	out    0x98,al
  43d29a:	lea    eax,[edi+0x427dd0e5]
  43d2a0:	out    0x13,al
  43d2a2:	jle    0x43d2b1
  43d2a4:	jmp    0x6e99:0xeacf6e32
  43d2ab:	add    ch,bl
  43d2ad:	repnz pop esi
  43d2af:	clc    
  43d2b0:	jmp    0xcfc1:0xec4a5f56
  43d2b7:	jmp    0x880c0ea7
  43d2bc:	call   0xe8d3931f
  43d2c1:	jns    0x43d27b
  43d2c3:	aad    0xe8
  43d2c5:	or     BYTE PTR [ecx-0x56af16a9],dh
  43d2cb:	push   ecx
  43d2cc:	jmp    0xea8b7444
  43d2d1:	xchg   esi,eax
  43d2d2:	cdq    
  43d2d3:	call   0xa7d599c1
  43d2d8:	jmp    0x8310:0xeef58a07
  43d2df:	xchg   edi,eax
  43d2e0:	sbb    al,0xfe
  43d2e2:	mov    ebx,0x356
  43d2e7:	xchg   esp,eax
  43d2e8:	inc    edx
  43d2e9:	hlt    
  43d2ea:	in     eax,0x64
  43d2ec:	retf   0x66f3
  43d2ef:	gs loop 0x43d2e4
  43d2f2:	retf   0xcc65
  43d2f5:	out    dx,al
  43d2f6:	xor    al,dh
  43d2f8:	adc    ebp,esi
  43d2fa:	fld    st(6)
  43d2fc:	pop    eax
  43d2fd:	in     eax,dx
  43d2fe:	or     eax,0xf30100c7
  43d303:	(bad)  
  43d304:	sar    DWORD PTR ds:0xb4d440f3,cl
  43d30a:	repz fwait
  43d30c:	aam    0x1
  43d30e:	clc    
  43d30f:	icebp  
  43d310:	aam    0x6a
  43d312:	clc    
  43d313:	push   esp
  43d314:	aad    0xde
  43d316:	clc    
  43d317:	jle    0x43d2ee
  43d319:	scas   al,BYTE PTR es:[edi]
  43d31a:	clc    
  43d31b:	and    dh,dl
  43d31d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43d31e:	stc    
  43d31f:	cmp    dh,dl
  43d321:	sbb    esi,esi
  43d323:	push   ebp
  43d324:	xlat   BYTE PTR ds:[ebx]
  43d325:	sub    esi,esi
  43d327:	mov    edi,ss
  43d329:	or     esi,edi
  43d32b:	(bad)  
  43d32d:	(bad)  
  43d32e:	test   BYTE PTR [ebx],0xd8
  43d331:	sbb    esi,edi
  43d333:	das    
  43d334:	fsubr  st,st(5)
  43d336:	jmp    0x43d2eb
  43d338:	fmul   DWORD PTR [ebx]
  43d33a:	in     al,dx
  43d33b:	int    0xd8
  43d33d:	mov    ah,0xeb
  43d33f:	or     al,0xd9
  43d341:	(bad)  
  43d342:	in     al,dx
  43d343:	add    al,0xd9
  43d345:	sti    
  43d346:	in     al,dx
  43d347:	ret    0x84d9
  43d34a:	in     al,dx
  43d34b:	add    BYTE PTR [edx+ebx*8],dl
  43d34e:	add    eax,0x1fdad5ed
  43d353:	jmp    0xdb54:0xead4dae2
  43d35a:	fucomi st,st(7)
  43d35c:	mov    al,ds:0x52ef9edc
  43d361:	fsubr  QWORD PTR [edi+ebp*8-0x2e]
  43d365:	fadd   QWORD PTR [ecx+esi*8]
  43d368:	jns    0x43d347
  43d36a:	sbb    cl,dh
  43d36c:	push   esp
  43d36d:	fstp   QWORD PTR [ebp-0x62223910]
  43d373:	lock mov ch,0xdd
  43d376:	mov    cl,0xf0
  43d378:	mov    ds,ebp
  43d37a:	(bad)  
  43d37b:	jmp    0x43d3f6
  43d37d:	add    al,0x3a
  43d37f:	int3   
  43d380:	jno    0x43d369
  43d382:	cmp    eax,esp
  43d384:	imul   ebx,eax,0x4a822639
  43d38a:	cmp    dh,BYTE PTR [esi]
  43d38c:	jp     0x43d3a9
  43d38e:	cmp    dh,BYTE PTR [ebx+0x71]
  43d391:	cmp    DWORD PTR [bp+si-0x4597],esi
  43d396:	cmp    DWORD PTR [edi+0xb39ae41],eax
  43d39c:	cmp    edx,DWORD PTR [eax+0x38]
  43d39f:	xchg   esi,eax
  43d3a0:	xor    dl,BYTE PTR [esi-0x617816c8]
  43d3a6:	clc    
  43d3a7:	inc    ebp
  43d3a8:	xchg   edi,eax
  43d3a9:	add    BYTE PTR [eax],al
  43d3ab:	leave  
  43d3ac:	daa    
  43d3ad:	dec    ebx
  43d3ae:	das    
  43d3af:	mov    ah,0x0
  43d3b1:	sub    ebp,DWORD PTR es:0x2cbe2664
  43d3b8:	ror    DWORD PTR [ebx],cl
  43d3ba:	push   esi
  43d3bb:	xor    ecx,DWORD PTR [eax+0x3]
  43d3be:	add    BYTE PTR [ebx],dh
  43d3c0:	sahf   
  43d3c1:	cld    
  43d3c2:	jb     0x43d3f6
  43d3c4:	xor    bh,ah
  43d3c6:	or     esi,DWORD PTR [edx]
  43d3c8:	gs jmp 0xe2f804fe
  43d3ce:	pop    ds
  43d3cf:	xor    DWORD PTR [ecx+0x77311bea],edx
  43d3d5:	loop   0x43d44d
  43d3d7:	xor    BYTE PTR [ebx-0x36],cl
  43d3da:	push   edx
  43d3db:	xor    BYTE PTR [ecx],ch
  43d3dd:	ret    0x30c4
  43d3e0:	adc    edx,ecx
  43d3e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43d3e3:	xor    dl,bl
  43d3e5:	rcl    DWORD PTR [ebx+0xcbff130],0x38
  43d3ec:	or     DWORD PTR [eax-0x4ff1c820],edi
  43d3f2:	inc    eax
  43d3f3:	cmp    BYTE PTR [eax],al
  43d3f5:	bound  ebp,QWORD PTR [esi+ecx*2+0x5bacb638]
  43d3fc:	cmp    al,dl
  43d3fe:	lods   al,BYTE PTR ds:[esi]
  43d3ff:	outs   dx,DWORD PTR ds:[esi]
  43d400:	cmp    bh,dh
  43d402:	lods   al,BYTE PTR ds:[esi]
  43d403:	(bad)  
  43d404:	cmp    BYTE PTR [eax],dl
  43d406:	lods   eax,DWORD PTR ds:[esi]
  43d407:	fwait
  43d408:	cmp    ah,al
  43d40a:	lods   al,BYTE PTR ds:[esi]
  43d40b:	scas   eax,DWORD PTR es:[edi]
  43d40c:	cmp    BYTE PTR ds:0x38bfad,bh
  43d412:	lods   eax,DWORD PTR ds:[esi]
  43d413:	xlat   BYTE PTR ds:[ebx]
  43d414:	cmp    BYTE PTR [eax],al
  43d416:	or     ebp,DWORD PTR [ebp-0x5336c71a]
  43d41c:	repz cmp BYTE PTR [ecx],bh
  43d41f:	stos   DWORD PTR es:[edi],eax
  43d420:	add    edi,DWORD PTR [ecx]
  43d422:	pop    esp
  43d423:	stos   DWORD PTR es:[edi],eax
  43d424:	sbb    edi,DWORD PTR [ecx]
  43d426:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43d427:	test   eax,0xa975392a
  43d42c:	ds cmp ebx,esi
  43d42f:	stos   BYTE PTR es:[edi],al
  43d430:	dec    ebp
  43d431:	cmp    esi,esp
  43d433:	stos   BYTE PTR es:[edi],al
  43d434:	fs cmp edi,ebx
  43d437:	stos   BYTE PTR es:[edi],al
  43d438:	jb     0x43d473
  43d43a:	jge    0x43d3e5
  43d43c:	cmp    DWORD PTR [ecx],0x3991a96f
  43d442:	adc    eax,0x5a39a8aa
  43d447:	test   eax,0xa98d39b5
  43d44c:	push   ss
  43d44d:	cmp    bl,dh
  43d44f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43d450:	cdq    
  43d451:	cmp    bl,BYTE PTR [ebx-0x56]
  43d454:	mov    ah,0x3a
  43d456:	jmp    0x43d400
  43d458:	mov    ebx,0x1a7853b
  43d45d:	cmp    al,0xe7
  43d45f:	lods   eax,DWORD PTR ds:[esi]
  43d460:	xor    al,0x3c
  43d462:	dec    ebx
  43d463:	lods   eax,DWORD PTR ds:[esi]
  43d464:	jle    0x43d4a2
  43d466:	repnz lods eax,DWORD PTR ds:[esi]
  43d468:	jo     0x43d4a7
  43d46a:	es scas al,BYTE PTR es:[edi]
  43d46c:	out    0x3d,eax
  43d46e:	xchg   esp,eax
  43d46f:	lahf   
  43d470:	jmp    0x5a58:0xe9fa6227
  43d477:	jae    0x43d463
  43d479:	add    al,BYTE PTR [eax]
  43d47b:	rol    DWORD PTR [ebx+ebp*8],cl
  43d47e:	sub    eax,0x42eb93cb
  43d483:	ret    
  43d484:	sti    
  43d485:	jmp    0xb3ba:0xec4abb60
  43d48c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43d48d:	jl     0x43d48c
  43d48f:	imul   ebx,DWORD PTR [ebx+0x3c94fffd],0xffffffed
  43d496:	fwait
  43d497:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43d498:	push   ds
  43d499:	in     eax,dx
  43d49a:	push   es
  43d49b:	test   DWORD PTR [edi-0x187ae013],esi
  43d4a1:	in     al,dx
  43d4a2:	inc    esp
  43d4a3:	test   DWORD PTR [esi],ecx
  43d4a5:	in     eax,dx
  43d4a6:	arpl   WORD PTR [ebp+0x65bbedb4],ax
  43d4ac:	jecxz  0x43d49b
  43d4ae:	shl    DWORD PTR [ebp-0x2a],cl
  43d4b1:	in     eax,dx
  43d4b2:	pop    esp
  43d4b3:	data16 xchg dh,ch
  43d4b6:	mov    eax,0xa3f02566
  43d4bb:	mov    DWORD PTR [ebp-0x10],0xf09dc7f9
  43d4c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43d4c3:	enter  0xf116,0xb9
  43d4c7:	shr    BYTE PTR [ecx-0x3a56e80f],0xf1
  43d4ce:	cld    
  43d4cf:	mov    eax,ds:0xaa20f296
  43d4d4:	mov    eax,0x54a243f2
  43d4d9:	repnz pop esi
  43d4db:	mov    ch,BYTE PTR [edi-0xe]
  43d4de:	jge    0x43d4e0
  43d4e0:	xor    BYTE PTR [eax],0xf3
  43d4e3:	mov    ebp,0x1af2f28a
  43d4e8:	add    DWORD PTR [eax],0x26
  43d4eb:	repz pop esi
  43d4ed:	aad    0x35
  43d4ef:	repz dec esi
  43d4f1:	aad    0xa8
  43d4f3:	repz xchg esp,eax
  43d4f5:	fcomp  DWORD PTR [ebp-0x14]
  43d4f8:	fcom   st(7)
  43d4fa:	fsubr  st,st(4)
  43d4fc:	mov    bh,0xd9
  43d4fe:	sub    ebp,ebp
  43d500:	repnz fldcw WORD PTR [esi]
  43d503:	in     eax,dx
  43d504:	adc    bl,dl
  43d506:	stos   DWORD PTR es:[edi],eax
  43d507:	in     eax,dx
  43d508:	mov    ds:0xacedcfd6,al
  43d50d:	(bad)  
  43d50e:	cs out dx,al
  43d510:	ret    
  43d511:	(bad)  
  43d512:	xor    esi,ebp
  43d514:	adc    edi,edx
  43d516:	outs   dx,BYTE PTR ds:[esi]
  43d517:	out    dx,al
  43d518:	das    
  43d519:	xlat   BYTE PTR ds:[ebx]
  43d51a:	mov    dl,0xee
  43d51c:	ins    DWORD PTR es:[edi],dx
  43d51d:	xlat   BYTE PTR ds:[ebx]
  43d51e:	mov    ch,dh
  43d520:	inc    edx
  43d521:	xlat   BYTE PTR ds:[ebx]
  43d522:	(bad)  
  43d524:	mov    ds:0xabef21d7,al
  43d529:	xlat   BYTE PTR ds:[ebx]
  43d52a:	jnp    0x43d51b
  43d52c:	or     eax,0xfcef83d8
  43d531:	xlat   BYTE PTR ds:[ebx]
  43d532:	mov    gs,edi
  43d534:	pop    ecx
  43d535:	fadd   DWORD PTR [edi-0x11]
  43d538:	sub    bl,al
  43d53a:	ds out dx,eax
  43d53c:	or     eax,0x98e7efd8
  43d541:	fmul   st(7),st
  43d543:	out    0x0,eax
  43d545:	mov    bh,0xdc
  43d547:	cld    
  43d548:	out    0xaa,eax
  43d54a:	(bad)  
  43d54c:	out    0x62,eax
  43d54e:	fdivr  QWORD PTR [ecx+0x6bdc7be7]
  43d554:	call   0xe886b263
  43d559:	and    ebx,ebp
  43d55b:	inc    ebx
  43d55c:	call   0xe85ab271
  43d561:	in     al,0xdc
  43d563:	dec    DWORD PTR [eax]
  43d565:	lods   al,BYTE PTR ds:[esi]
  43d566:	mov    eax,ds:0x7ace73b
  43d56b:	cmp    esi,DWORD PTR [ebx]
  43d56d:	mov    ebp,0xbd363b4b
  43d572:	and    eax,0x4eac803b
  43d577:	cmp    cl,BYTE PTR [ebp-0x40c55454]
  43d57d:	jl     0x43d58a
  43d57f:	cmp    al,BYTE PTR [ecx]
  43d581:	jle    0x43d5ca
  43d583:	cmp    bh,BYTE PTR [ecx]
  43d585:	outs   dx,BYTE PTR ds:[esi]
  43d586:	cmp    DWORD PTR [ecx],0x6d
  43d589:	ins    DWORD PTR es:[edi],dx
  43d58a:	mov    ?,WORD PTR [ecx]
  43d58c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43d58d:	jge    0x43d529
  43d58f:	cmp    edx,edi
  43d591:	jle    0x43d574
  43d593:	cmp    bh,dl
  43d595:	outs   dx,BYTE PTR ds:[esi]
  43d596:	dec    eax
  43d597:	cmp    DWORD PTR [edi+ebp*2],ebp
  43d59a:	adc    al,0x39
  43d59c:	push   0x3e
  43d59e:	jp     0x43d5d8
  43d5a0:	aaa    
  43d5a1:	ds push edi
  43d5a3:	cmp    cl,ch
  43d5a5:	daa    
  43d5a6:	popf   
  43d5a7:	clc    
  43d5a8:	jge    0x43d5aa
  43d5aa:	xchg   edi,eax
  43d5ab:	add    BYTE PTR [eax],al
  43d5ad:	mov    cl,0x27
  43d5af:	xor    DWORD PTR [eax],esi
  43d5b1:	(bad)  
  43d5b2:	daa    
  43d5b3:	(bad)  
  43d5b4:	das    
  43d5b5:	dec    ecx
  43d5b6:	daa    
  43d5b7:	mov    al,ds:0x820e12f
  43d5bc:	das    
  43d5bd:	add    al,0x9
  43d5bf:	adc    al,0x2f
  43d5c1:	outs   dx,BYTE PTR ds:[esi]
  43d5c2:	add    BYTE PTR [edi-0x66f7b0d2],bh
  43d5c8:	cs call 0xf1e9:0x782e2301
  43d5d0:	sub    al,0xfe
  43d5d2:	loop   0x43d619
  43d5d4:	sub    eax,0x2d17ea88
  43d5d9:	jne    0x43d5bd
  43d5db:	push   ecx
  43d5dc:	sub    al,0x0
  43d5de:	jle    0x43d572
  43d5e0:	ret    0xdf33
  43d5e3:	stos   BYTE PTR es:[edi],al
  43d5e4:	inc    esi
  43d5e5:	xor    al,0x2b
  43d5e7:	stos   DWORD PTR es:[edi],eax
  43d5e8:	shl    DWORD PTR [edi+eiz*1],1
  43d5eb:	nop
  43d5ec:	cwde   
  43d5ed:	xor    eax,0x36ba8e49
  43d5f2:	in     al,0x8d
  43d5f4:	enter  0xe336,0x8d
  43d5f8:	(bad)  
  43d5f9:	ror    DWORD PTR ss:[ebp-0x70b0c91e],1
  43d600:	pop    es
  43d601:	aaa    
  43d602:	jne    0x43d595
  43d604:	sbb    DWORD PTR [edi],esi
  43d606:	xchg   edi,eax
  43d607:	(bad)  
  43d608:	sub    esi,DWORD PTR [edi]
  43d60a:	xchg   DWORD PTR [ecx-0x58ffc8c4],edx
  43d610:	(bad)  
  43d611:	dec    ebx
  43d612:	aaa    
  43d613:	xlat   BYTE PTR ds:[ebx]
  43d614:	(bad)  
  43d615:	push   edi
  43d616:	aaa    
  43d617:	xchg   esi,eax
  43d618:	(bad)
  43d61c:	(bad)  
  43d61d:	lods   al,BYTE PTR ds:[esi]
  43d61e:	aaa    
  43d61f:	push   es
  43d620:	nop
  43d621:	push   ebp
  43d622:	cmp    BYTE PTR [edx+0x2338a0ac],dl
  43d628:	lods   eax,DWORD PTR ds:[esi]
  43d629:	fdivr  DWORD PTR [eax]
  43d62b:	ret    0x12ac
  43d62e:	cmp    DWORD PTR [ebp+eiz*4-0x58a6c6c1],ecx
  43d635:	je     0x43d670
  43d637:	sbb    DWORD PTR [esi-0x53d1c644],esp
  43d63d:	sbb    BYTE PTR [edx],bh
  43d63f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43d640:	stos   BYTE PTR es:[edi],al
  43d641:	sub    bh,BYTE PTR [edx]
  43d643:	xchg   esp,eax
  43d644:	stos   BYTE PTR es:[edi],al
  43d645:	push   ebx
  43d646:	cmp    dl,bl
  43d648:	stos   DWORD PTR es:[edi],eax
  43d649:	outs   dx,BYTE PTR ds:[esi]
  43d64a:	cmp    dh,BYTE PTR [ebp-0x56]
  43d64d:	test   eax,0xe5aaad3a
  43d652:	cmp    ch,cl
  43d654:	lods   al,BYTE PTR ds:[esi]
  43d655:	sbb    DWORD PTR [esp+edx*4],edi
  43d658:	mov    bl,0xe0
  43d65a:	dec    esp
  43d65b:	cwde   
  43d65c:	dec    ebp
  43d65d:	loopne 0x43d5ec
  43d65f:	nop
  43d660:	fsub   st,st(7)
  43d662:	out    0x88,al
  43d664:	stos   DWORD PTR es:[edi],eax
  43d665:	loope  0x43d67d
  43d667:	sbb    DWORD PTR [esi-0x1f],0xe1237959
  43d66e:	fwait
  43d66f:	jno    0x43d6ce
  43d671:	loope  0x43d62f
  43d673:	add    BYTE PTR [ecx-0x38],ch
  43d676:	loope  0x43d660
  43d678:	popa   
  43d679:	mov    ds:0x9b5a20e6,al
  43d67e:	out    0x72,al
  43d680:	shl    BYTE PTR [esi],cl
  43d682:	out    0xb2,eax
  43d684:	retf   0xe64d
  43d687:	enter  0x9fc2,0xe7
  43d68b:	push   ecx
  43d68c:	mov    ebx,0xb38be6e9
  43d691:	and    ch,al
  43d693:	fsubr  QWORD PTR [ebx+0x63fd5ca7]
  43d699:	iret   
  43d69a:	add    eax,DWORD PTR [eax]
  43d69c:	xchg   esp,eax
  43d69d:	retf   0x45ec
  43d6a0:	test   cl,bh
  43d6a2:	repz pop edx
  43d6a4:	test   BYTE PTR [ebx],ch
  43d6a6:	in     eax,dx
  43d6a7:	lea    eax,[esp+esi*1+0x2b84a3ed]
  43d6ae:	in     eax,dx
  43d6af:	and    BYTE PTR [esi+0x43],ah
  43d6b2:	repz and al,0x67
  43d6b5:	ins    BYTE PTR es:[edi],dx
  43d6b6:	repz adc eax,0xa2ea1768
  43d6bc:	popa   
  43d6bd:	out    0xe9,eax
  43d6bf:	xlat   BYTE PTR ds:[ebx]
  43d6c0:	retf   0xef34
  43d6c3:	add    al,0xc3
  43d6c5:	mov    al,ds:0x6ccb32ef
  43d6ca:	out    dx,eax
  43d6cb:	inc    esi
  43d6cc:	ret    
  43d6cd:	jl     0x43d6be
  43d6cf:	dec    esi
  43d6d0:	stos   DWORD PTR es:[edi],eax
  43d6d1:	add    BYTE PTR [eax+esi*8-0xf442ebe],bh
  43d6d8:	add    BYTE PTR [edx-0x2f],al
  43d6db:	mov    esi,eax
  43d6dd:	jb     0x43d6b0
  43d6df:	jnp    0x43d6d1
  43d6e1:	inc    edx
  43d6e2:	sar    DWORD PTR [ebx-0x10],1
  43d6e5:	inc    edx
  43d6e6:	sar    DWORD PTR [ebx-0x10],1
  43d6e9:	inc    edx
  43d6ea:	sar    DWORD PTR [esi-0x15],1
  43d6ed:	inc    esi
  43d6ee:	(bad)  
  43d6f0:	jae    0x43d6a3
  43d6f2:	cwde   
  43d6f3:	mov    BYTE PTR [esp+edx*4],0x0
  43d6f7:	aaa    
  43d6f8:	hlt    
  43d6f9:	out    0xcf,al
  43d6fb:	mov    ah,0xf4
  43d6fd:	jno    0x43d6ce
  43d6ff:	sub    al,0xf5
  43d701:	or     dl,dl
  43d703:	xchg   ebp,esi
  43d705:	push   edx
  43d706:	rcr    dh,cl
  43d708:	out    dx,eax
  43d709:	cli    
  43d70a:	int3   
  43d70b:	dec    edi
  43d70c:	lock push 0xffffffce
  43d70f:	add    eax,0xffd986ee
  43d714:	in     al,dx
  43d715:	mov    ds,ecx
  43d717:	(bad)  
  43d718:	in     al,dx
  43d719:	mov    dh,0xd9
  43d71b:	mov    edi,0xd7d9aeec
  43d720:	in     al,dx
  43d721:	xchg   cl,bl
  43d723:	mov    edi,0x27d98eec
  43d728:	in     eax,dx
  43d729:	(bad)  
  43d72a:	fstp   DWORD PTR [edi]
  43d72c:	in     eax,dx
  43d72d:	into   
  43d72e:	fst    DWORD PTR [edi]
  43d730:	in     eax,dx
  43d731:	(bad)  
  43d732:	fnstcw WORD PTR [edi-0x38263114]
  43d738:	in     al,dx
  43d739:	mov    dh,0xd9
  43d73b:	mov    edi,0xd9ae00ec
  43d740:	xlat   BYTE PTR ds:[ebx]
  43d741:	in     al,dx
  43d742:	xchg   cl,bl
  43d744:	mov    edi,0x67d98eec
  43d749:	in     eax,dx
  43d74a:	push   ss
  43d74b:	(bad)  
  43d74d:	pop    edi
  43d74e:	jmp    0x19c0ddd
  43d753:	jae    0x43d78b
  43d755:	cmp    cl,0x7a
  43d758:	ss dec eax
  43d75a:	icebp  
  43d75b:	bound  esi,QWORD PTR [esi]
  43d75d:	inc    eax
  43d75e:	jmp    0xc19c0dcd
  43d763:	push   edx
  43d764:	ss inc eax
  43d766:	mov    ecx,0xb128365a
  43d76b:	ret    0x2036
  43d76e:	test   eax,0xc11836ca
  43d773:	mov    dl,0x36
  43d775:	sar    BYTE PTR [eax-0x4f37c946],0xa2
  43d77c:	shr    BYTE PTR ss:[eax-0x7f27c956],0x92
  43d784:	sar    BYTE PTR ss:[eax-0x66],0x36
  43d789:	call   0xe079d9fb
  43d78e:	ins    DWORD PTR es:[edi],dx
  43d78f:	or     dh,BYTE PTR [esi]
  43d791:	fdivr  DWORD PTR [ebp-0xe]
  43d794:	xor    eax,0x35fa7e00
  43d799:	enter  0xe26d,0x35
  43d79d:	shr    BYTE PTR [ebp-0x16],0x35
  43d7a1:	fadd   DWORD PTR [eax]
  43d7a3:	cmp    eax,0x3dc035d2
  43d7a8:	push   esi
  43d7a9:	xor    eax,0x353d2f29
  43d7ae:	std    
  43d7af:	sbb    BYTE PTR cs:0x34753e5c,dh
  43d7b6:	push   edx
  43d7b7:	ds (bad) 
  43d7b9:	xor    al,0xb3
  43d7bb:	cmp    ebp,DWORD PTR ds:0x6633713c
  43d7c1:	cmp    ch,BYTE PTR [eax]
  43d7c3:	cld    
  43d7c4:	sar    BYTE PTR [edx],0x0
  43d7c7:	pop    ebp
  43d7c8:	test   al,0xa6
  43d7ca:	mov    ds:0x663f719d,al
  43d7d0:	sahf   
  43d7d1:	clc    
  43d7d2:	(bad)  
  43d7d3:	std    
  43d7d4:	ret    0xfffa
  43d7d7:	dec    ecx
  43d7d8:	add    eax,DWORD PTR [eax]
  43d7da:	add    BYTE PTR [eax-0x6d],bh
  43d7dd:	mov    ds:0xc6934230,eax
  43d7e2:	xor    BYTE PTR [edx+0x6311393],bl
  43d7e8:	mov    WORD PTR [edx+0x31],ds
  43d7eb:	xchg   esp,eax
  43d7ec:	mov    eax,?
  43d7ee:	xor    DWORD PTR [ebx-0x25cdf570],ebp
  43d7f4:	nop
  43d7f5:	dec    esp
  43d7f6:	xor    dl,BYTE PTR [esi-0x6e]
  43d7f9:	test   eax,0xf291d032
  43d7fe:	xor    ah,BYTE PTR [edi-0x3bcce171]
  43d804:	(bad)  
  43d805:	jp     0x43d83a
  43d807:	add    ah,ch
  43d809:	(bad)  
  43d80a:	jmp    0x43d83f
  43d80c:	outs   dx,DWORD PTR ds:[esi]
  43d80d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43d80e:	adc    BYTE PTR [esp+eiz*8],dh
  43d811:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43d812:	lds    esi,FWORD PTR ds:0x35e6a609
  43d818:	or     esp,DWORD PTR [esi-0x5bb7c9f2]
  43d81e:	cmp    dh,BYTE PTR [esi]
  43d820:	sub    esp,DWORD PTR [edi-0x58e9c933]
  43d826:	in     al,dx
  43d827:	ss xor eax,0x833781a5
  43d82d:	mov    ds:0xa49b3823,eax
  43d832:	jns    0x43d86c
  43d834:	rep stos BYTE PTR es:[edi],al
  43d836:	mov    eax,0xb6a81139
  43d83b:	cmp    ecx,esi
  43d83d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43d83e:	(bad)  
  43d83f:	cmp    edx,DWORD PTR [ebp+edx*2-0x782e7320]
  43d846:	loopne 0x43d7f5
  43d848:	leave  
  43d849:	retf   
  43d84a:	loopne 0x43d819
  43d84c:	rol    DWORD PTR [ebx-0x1f],0xf5
  43d850:	mov    ecx,0xb216e2ba
  43d855:	add    edx,esp
  43d857:	cmp    DWORD PTR [edx-0x5dae1da9],ebp
  43d85d:	pusha  
  43d85e:	loop   0x43d7e5
  43d860:	call   0xe237:0x92a5e213
  43d867:	mov    ebp,0xd9e1cf8a
  43d86c:	add    BYTE PTR [edx+0x7af5e298],al
  43d872:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43d873:	jecxz  0x43d881
  43d875:	jae    0x43d827
  43d877:	jecxz  0x43d8a6
  43d879:	imul   ebp,eax,0xffffffe2
  43d87c:	push   ecx
  43d87d:	arpl   WORD PTR [ebp-0x1d],ax
  43d880:	js     0x43d8dd
  43d882:	sbb    al,0xe4
  43d884:	lods   eax,DWORD PTR ds:[esi]
  43d885:	rcl    DWORD PTR [ecx-0x1d],cl
  43d888:	dec    DWORD PTR [ebx-0x7c023359]
  43d88e:	xor    edi,ebp
  43d890:	call   DWORD PTR [ebx+eiz*4-0xb5bd714]
  43d897:	repz pop ebp
  43d899:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43d89a:	sub    ch,ch
  43d89c:	mov    ah,BYTE PTR [edi+ebp*1+0x2ea4a9ed]
  43d8a3:	in     eax,dx
  43d8a4:	lds    eax,FWORD PTR [eax+ecx*4-0x17afe14]
  43d8ab:	in     al,dx
  43d8ac:	xchg   BYTE PTR [ebp-0x7a5f11e1],al
  43d8b2:	shr    ebp,cl
  43d8b4:	jmp    0x91330e1e
  43d8b9:	data16 add BYTE PTR [ebx+0x5ad1e1f1],bl
  43d8c0:	icebp  
  43d8c1:	je     0x43d894
  43d8c3:	push   edx
  43d8c4:	lock mov bh,0xcc
  43d8c7:	lods   eax,DWORD PTR ds:[esi]
  43d8c8:	out    dx,eax
  43d8c9:	mov    ah,cl
  43d8cb:	(bad)  
  43d8cc:	out    dx,eax
  43d8cd:	pop    edx
  43d8ce:	retf   
  43d8cf:	fucomi st,st(4)
  43d8d1:	add    al,al
  43d8d3:	int    0xa8
  43d8d5:	in     al,dx
  43d8d6:	cmp    ch,cl
  43d8d8:	jo     0x43d8c6
  43d8da:	aad    0xcc
  43d8dc:	out    0xeb,eax
  43d8de:	cdq    
  43d8df:	fcom   DWORD PTR [edx+0x71d808eb]
  43d8e5:	call   0xe803b1e0
  43d8ea:	(bad)  
  43d8eb:	sar    esp,cl
  43d8ed:	out    0xdd,al
  43d8ef:	rol    ch,cl
  43d8f1:	in     eax,0x71
  43d8f3:	(bad)  
  43d8f4:	mov    bh,0xe5
  43d8f6:	fs (bad) 
  43d8f8:	test   eax,0x2cd655e5
  43d8fd:	loop   0x43d952
  43d8ff:	(bad)  
  43d900:	xor    dl,ah
  43d902:	cmp    eax,0x43e25ad6
  43d907:	rcl    DWORD PTR [ecx-0x552cb21e],cl
  43d90d:	loop   0x43d95e
  43d90f:	rcl    DWORD PTR [ebp-0x6c2c9b1e],cl
  43d915:	loop   0x43d967
  43d917:	sar    DWORD PTR [ebp-0x2f2c681e],cl
  43d91d:	loop   0x43d8f3
  43d91f:	shl    DWORD PTR [ebx+eiz*8+0x2e],cl
  43d923:	aam    0x7f
  43d925:	jecxz  0x43d976
  43d927:	aam    0xe6
  43d929:	mov    ds:0x3fa9449,eax
  43d92e:	xchg   esp,eax
  43d92f:	add    ch,cl
  43d931:	ror    edi,cl
  43d933:	sar    bh,1
  43d935:	add    al,0x0
  43d937:	dec    eax
  43d938:	dec    ebx
  43d939:	das    
  43d93a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43d93b:	inc    eax
  43d93c:	in     al,0x2e
  43d93e:	out    0x48,eax
  43d940:	push   eax
  43d941:	cs pop ds
  43d943:	inc    edx
  43d944:	inc    eax
  43d945:	cs mov al,0xe9
  43d948:	xchg   BYTE PTR ds:0x2d69e27a,ch
  43d94e:	dec    edi
  43d94f:	jmp    0x2d33:0xe2d62cfd
  43d956:	ins    DWORD PTR es:[edi],dx
  43d957:	retf   
  43d958:	dec    esi
  43d959:	sub    al,0x27
  43d95b:	ret    
  43d95c:	mov    ecx,0xf8cbf12c
  43d961:	xor    ebx,edi
  43d963:	ret    
  43d964:	adc    BYTE PTR [edi*8-0x5dcd1f14],dh
  43d96b:	in     al,dx
  43d96c:	mov    edx,0xf0dd1432
  43d971:	xor    DWORD PTR [ebp-0x67cdc223],esp
  43d977:	int    0x31
  43d979:	xor    cl,BYTE PTR [ebx-0x36ce5233]
  43d97f:	mov    ebp,0xbf3f312f
  43d984:	enter  0xcc30,0x6e
  43d988:	sub    esi,DWORD PTR [esi]
  43d98a:	scas   al,BYTE PTR es:[edi]
  43d98b:	push   0xffffff9a
  43d98d:	xor    al,0xc4
  43d98f:	bound  edi,QWORD PTR [edx]
  43d991:	cmp    al,0x3a
  43d993:	je     0x43d95e
  43d995:	cmp    ebx,DWORD PTR [edi]
  43d997:	jbe    0x43d9a8
  43d999:	cmp    cl,BYTE PTR [ecx-0x76c8b00]
  43d99f:	jmp    0x4a3c6eab
  43d9a4:	xchg   edi,eax
  43d9a5:	add    BYTE PTR [eax],al
  43d9a7:	leave  
  43d9a8:	or     ebp,DWORD PTR ds:0x618a
  43d9ad:	out    dx,eax
  43d9ae:	sub    al,0x0
  43d9b0:	xor    eax,0x4d3314aa
  43d9b5:	stos   BYTE PTR es:[edi],al
  43d9b6:	sbb    al,0x33
  43d9b8:	push   ebp
  43d9b9:	stos   BYTE PTR es:[edi],al
  43d9ba:	and    al,0x33
  43d9bc:	in     eax,dx
  43d9bd:	test   eax,0xab75332c
  43d9c2:	xor    al,0x33
  43d9c4:	in     eax,dx
  43d9c5:	test   eax,0xaa35333c
  43d9ca:	inc    esp
  43d9cb:	xor    ecx,DWORD PTR [ebp-0x56]
  43d9ce:	xchg   DWORD PTR [ebx],esi
  43d9d0:	sub    BYTE PTR [edx-0x5545cc34],ch
  43d9d6:	and    dh,BYTE PTR [edi+ebp*8]
  43d9d9:	stos   BYTE PTR es:[edi],al
  43d9da:	addr16 xor al,0x67
  43d9dd:	stos   DWORD PTR es:[edi],eax
  43d9de:	adc    esi,DWORD PTR ds:0x3579b81c
  43d9e4:	lock mov eax,0xb988362e
  43d9ea:	mov    esi,DWORD PTR [edi]
  43d9ec:	int3   
  43d9ed:	mov    dh,0x15
  43d9ef:	cmp    bh,ch
  43d9f1:	mov    dh,0x25
  43d9f3:	cmp    DWORD PTR [edx],ebx
  43d9f5:	mov    ah,0xa1
  43d9f7:	cmp    esi,DWORD PTR [eax-0x4e]
  43d9fa:	mov    ecx,0xd8a0853c
  43d9ff:	cmp    eax,0x6cb2b500
  43da04:	ds aaa 
  43da06:	sahf   
  43da07:	js     0x43da47
  43da09:	or     eax,0xf93e8e9f
  43da0e:	sahf   
  43da0f:	call   0x3e:0xa69f253e
  43da16:	lahf   
  43da17:	mov    ah,0x3e
  43da19:	ds lahf 
  43da1b:	ret    0xc3e
  43da1e:	lahf   
  43da1f:	sar    BYTE PTR [esi],1
  43da21:	pop    edx
  43da22:	lahf   
  43da23:	fistp  QWORD PTR [esi]
  43da25:	or     bl,BYTE PTR [edi-0x596bc111]
  43da2b:	fisttp WORD PTR [ebx]
  43da2d:	mov    ebx,DWORD PTR [eax-0x377cef21]
  43da33:	fbld   TBYTE PTR ds:0x3cdf4c7b
  43da39:	jae    0x43da1a
  43da3b:	fimul  WORD PTR [ecx+0x6b]
  43da3e:	lock ficomp WORD PTR [edi+0x63]
  43da42:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43da43:	cld    
  43da44:	cld    
  43da45:	sbb    edi,eax
  43da47:	add    eax,DWORD PTR [eax]
  43da49:	xchg   esp,eax
  43da4a:	sahf   
  43da4b:	int3   
  43da4c:	adc    eax,esp
  43da4e:	fcmovbe st,st(3)
  43da50:	rol    ah,cl
  43da52:	xchg   ebp,eax
  43da53:	int    0x72
  43da55:	lds    esi,FWORD PTR ds:0x43a5d8cd
  43da5b:	int    0xf3
  43da5d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43da5e:	add    eax,0xbdab44d7
  43da63:	xlat   BYTE PTR ds:[ebx]
  43da64:	pop    esi
  43da65:	add    BYTE PTR [esi-0x716925f3],bl
  43da6b:	(bad)  
  43da6c:	fisubr WORD PTR [eax]
  43da6e:	mov    al,BYTE PTR [esi-0x22]
  43da71:	scas   al,BYTE PTR es:[edi]
  43da72:	and    BYTE PTR [edi-0x4c440314],0xfc
  43da79:	call   DWORD PTR [esi+ecx*2+0x156507cc]
  43da80:	into   
  43da81:	mov    eax,0x3cd6a065
  43da86:	arpl   WORD PTR [ecx-0x2c],sp
  43da89:	add    ch,cl
  43da8b:	icebp  
  43da8c:	fucom  st(1)
  43da8e:	retf   
  43da8f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43da90:	fdiv   st(4),st
  43da92:	add    DWORD PTR [edi-0x3b6b0004],0xffffffcd
  43da99:	cmp    al,0xa6
  43da9b:	jae    0x43da70
  43da9d:	xlat   BYTE PTR ds:[ebx]
  43da9e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43da9f:	adc    ebx,0xffffffdf
  43daa2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43daa3:	add    BYTE PTR [ebx-0x75328c2c],cl
  43daa9:	aam    0x43
  43daab:	int    0x9a
  43daad:	aam    0x43
  43daaf:	int    0x8a
  43dab1:	aam    0x43
  43dab3:	int    0xea
  43dab5:	xlat   BYTE PTR ds:[ebx]
  43dab6:	xchg   ebx,eax
  43dab7:	int3   
  43dab8:	jmp    0x83d7:0xdacca3d7
  43dabf:	int3   
  43dac0:	retf   0x83d7
  43dac3:	int3   
  43dac4:	or     bl,al
  43dac6:	jae    0x43da94
  43dac8:	or     bl,al
  43daca:	add    bl,al
  43dacc:	int3   
  43dacd:	sbb    bl,al
  43dacf:	ret    
  43dad0:	int3   
  43dad1:	or     bl,al
  43dad3:	ret    
  43dad4:	int3   
  43dad5:	stos   BYTE PTR es:[edi],al
  43dad6:	xlat   BYTE PTR ds:[ebx]
  43dad7:	push   ebx
  43dad8:	int3   
  43dad9:	stos   BYTE PTR es:[edi],al
  43dada:	xlat   BYTE PTR ds:[ebx]
  43dadb:	arpl   sp,cx
  43dadd:	call   0x45d7:0x8acc43d7
  43dae4:	leave  
  43dae5:	ins    DWORD PTR es:[edi],dx
  43dae6:	fmul   DWORD PTR [ecx]
  43dae8:	leave  
  43dae9:	js     0x43dac3
  43daeb:	stc    
  43daec:	enter  0xd850,0xdb
  43daf0:	enter  0xd82a,0xba
  43daf4:	enter  0xdbef,0x8b
  43daf8:	fcomp  st(2)
  43dafa:	fstp   TBYTE PTR [ebx-0x28]
  43dafd:	mov    dl,0xdb
  43daff:	pop    ebp
  43db00:	fmul   DWORD PTR [ebx+ebx*8-0x239827cc]
  43db07:	or     eax,0x35dc7cd8
  43db0c:	leave  
  43db0d:	mov    esp,ds
  43db0f:	pop    edi
  43db10:	leave  
  43db11:	scas   al,BYTE PTR es:[edi]
  43db12:	fdiv   QWORD PTR [esi-0x37]
  43db15:	jmp    0x43daf3
  43db17:	mov    ecx,ecx
  43db19:	fcomp  st(4)
  43db1b:	mov    ecx,0x48f6ffc9
  43db20:	inc    eax
  43db21:	aaa    
  43db22:	or     eax,0x7a372741
  43db27:	cmp    DWORD PTR [ebx+0x36],esp
  43db2a:	pop    eax
  43db2b:	jno    0x43db78
  43db2d:	mov    BYTE PTR ss:[eax],al
  43db30:	imul   edx,DWORD PTR [eax-0x72981608],0x97e5f8
  43db3a:	add    BYTE PTR [ebx],bl
  43db3c:	dec    ebx
  43db3d:	pop    eax
  43db3e:	xor    BYTE PTR [ecx+0x54368448],al
  43db44:	inc    ecx
  43db45:	cmc    
  43db46:	xor    eax,0x35c33e10
  43db4b:	ss out dx,al
  43db4d:	(bad)  
  43db4e:	clc    
  43db4f:	jmp    0xaa3c68ab
  43db54:	xchg   edi,eax
  43db55:	add    BYTE PTR [eax],al
  43db57:	stos   BYTE PTR es:[edi],al
  43db58:	out    0x32,eax
  43db5a:	xor    dh,al
  43db5c:	(bad)  
  43db5d:	push   ss
  43db5e:	xor    BYTE PTR [ecx-0xad2cd3a],bl
  43db64:	mov    esp,0xbd84327e
  43db69:	cmp    al,0x38
  43db6b:	push   edx
  43db6c:	lock shl DWORD PTR [esi],cl
  43db6f:	mov    cl,0xe8
  43db71:	xchg   esp,eax
  43db72:	ss neg ch
  43db75:	loopne 0x43dbac
  43db77:	scas   eax,DWORD PTR es:[edi]
  43db78:	fnsave [ebx+0x35]
  43db7b:	lahf   
  43db7c:	shl    DWORD PTR [edx],cl
  43db7e:	cmp    al,0x86
  43db80:	retf   
  43db81:	or     edi,DWORD PTR [ebx+ebx*8]
  43db84:	ret    0x38ea
  43db87:	push   ebx
  43db88:	mov    ebx,0x72d9389b
  43db8d:	mov    edi,DWORD PTR [eax]
  43db8f:	jmp    0x163c695b
  43db94:	add    BYTE PTR [eax+0x6d000000],bl
  43db9a:	mov    bl,0x4
  43db9c:	xor    BYTE PTR [ebp-0x4d],cl
  43db9f:	adc    al,0x30
  43dba1:	popf   
  43dba2:	mov    ah,0x24
  43dba4:	xor    BYTE PTR [ebp-0x4d],bl
  43dba7:	xor    al,0x30
  43dba9:	lods   eax,DWORD PTR ds:[esi]
  43dbaa:	mov    ah,0x44
  43dbac:	xor    BYTE PTR [ebp-0x62cfab4c],cl
  43dbb2:	mov    ah,0x64
  43dbb4:	xor    BYTE PTR [ebp-0x52cf8b4c],bl
  43dbba:	mov    bl,0x84
  43dbbc:	xor    ch,cl
  43dbbe:	mov    bl,0x94
  43dbc0:	xor    ch,bl
  43dbc2:	mov    bl,0xf8
  43dbc4:	jmp    FWORD PTR ds:0xe1fffc23
  43dbca:	add    eax,DWORD PTR [eax]
  43dbcc:	add    BYTE PTR ds:0x99330cb2,cl
  43dbd2:	mov    bl,0x20
  43dbd4:	xor    edx,DWORD PTR [ecx+0x313350b3]
  43dbda:	mov    dl,0x58
  43dbdc:	xor    ebx,ecx
  43dbde:	mov    cl,0x60
  43dbe0:	xor    edx,ecx
  43dbe2:	mov    cl,0x68
  43dbe4:	xor    ebp,DWORD PTR [ecx]
  43dbe6:	mov    dl,0x70
  43dbe8:	xor    esi,DWORD PTR [ecx]
  43dbea:	mov    dl,0x78
  43dbec:	xor    edi,DWORD PTR [ecx]
  43dbee:	mov    dl,0x80
  43dbf0:	xor    esi,DWORD PTR [ecx]
  43dbf2:	mov    dl,0x88
  43dbf4:	xor    ecx,DWORD PTR [ecx-0x4e]
  43dbf7:	nop
  43dbf8:	xor    eax,DWORD PTR [eax]
  43dbfa:	xor    DWORD PTR [edx-0x4da6cc68],esi
  43dc00:	mov    al,ds:0xa8b25133
  43dc05:	xor    ebp,DWORD PTR [ecx-0x4e]
  43dc08:	mov    al,0x33
  43dc0a:	icebp  
  43dc0b:	mov    al,0xb8
  43dc0d:	xor    edi,DWORD PTR [ecx]
  43dc0f:	mov    al,0xc0
  43dc11:	xor    edx,DWORD PTR [ebx+eiz*2+0x53c7cfce]
  43dc18:	into   
  43dc19:	xlat   BYTE PTR ds:[ebx]
  43dc1a:	(bad)  
  43dc1b:	arpl   si,cx
  43dc1d:	fbld   TBYTE PTR [edi-0x5818313d]
  43dc23:	ret    
  43dc24:	into   
  43dc25:	out    dx,eax
  43dc26:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43dc27:	push   ebx
  43dc28:	into   
  43dc29:	mul    DWORD PTR [edi-0x7800319d]
  43dc2f:	mov    ds:0xa38007d0,eax
  43dc34:	ror    BYTE PTR [edi],1
  43dc36:	mov    BYTE PTR [ebx-0x5c7fe830],dl
  43dc3c:	rcr    BYTE PTR [edi],1
  43dc3e:	push   0x6027d0c3
  43dc43:	ret    
  43dc44:	shr    BYTE PTR [edi],1
  43dc46:	push   0x6037d053
  43dc4b:	jecxz  0x43dc24
  43dc4d:	aas    
  43dc4e:	enter  0xd063,0x47
  43dc52:	shl    BYTE PTR [ebx-0x30],0x4f
  43dc56:	enter  0xd053,0x57
  43dc5a:	shl    BYTE PTR [ebx-0x30],0x5f
  43dc5e:	add    BYTE PTR [eax-0x5f982f3d],ch
  43dc64:	ret    
  43dc65:	shr    BYTE PTR [edi-0x58],1
  43dc68:	push   ebx
  43dc69:	shl    BYTE PTR [edi-0x60],1
  43dc6c:	arpl   ax,dx
  43dc6e:	jg     0x43dbf8
  43dc70:	and    ebx,eax
  43dc72:	xchg   DWORD PTR [eax-0x777027dd],eax
  43dc78:	adc    ebx,eax
  43dc7a:	xchg   edi,eax
  43dc7b:	and    BYTE PTR [ebx],0xd8
  43dc7e:	mov    bl,0x68
  43dc80:	jecxz  0x43dc59
  43dc82:	shl    DWORD PTR [eax-0x5],cl
  43dc85:	xlat   BYTE PTR ds:[ebx]
  43dc86:	repz push 0x6113d1a3
  43dc8c:	add    BYTE PTR [ebx],cl
  43dc8e:	xlat   BYTE PTR ds:[ebx]
  43dc8f:	(bad)  
  43dc90:	shl    DWORD PTR [edx],cl
  43dc92:	xlat   BYTE PTR ds:[ebx]
  43dc93:	out    0xd3,eax
  43dc95:	dec    edx
  43dc96:	xlat   BYTE PTR ds:[ebx]
  43dc97:	pop    es
  43dc98:	aam    0x62
  43dc9a:	(bad)  
  43dc9b:	daa    
  43dc9c:	ror    DWORD PTR [edx-0x5d2cd82a],cl
  43dca2:	(bad)  
  43dca3:	inc    edi
  43dca4:	ror    edx,cl
  43dca6:	(bad)  
  43dca7:	addr16 shl edx,cl
  43dcaa:	aad    0x87
  43dcac:	(bad)  
  43dcad:	retf   0x87d5
  43dcb0:	(bad)  
  43dcb1:	and    dl,dh
  43dcb3:	out    0xd6,eax
  43dcb5:	or     dl,dh
  43dcb7:	(bad)  
  43dcb8:	(bad)  
  43dcb9:	(bad)  
  43dcba:	aad    0x27
  43dcbc:	(bad)  
  43dcbd:	dec    edx
  43dcbe:	aad    0xe7
  43dcc0:	aad    0xa2
  43dcc2:	aad    0x0
  43dcc4:	inc    edi
  43dcc5:	(bad)  
  43dcc6:	mov    dl,ch
  43dcc8:	daa    
  43dcc9:	(bad)  
  43dcca:	loop   0x43dca0
  43dccc:	xchg   ebp,edx
  43dcce:	or     dl,ch
  43dcd0:	(bad)  
  43dcd1:	aad    0xa2
  43dcd3:	aam    0x67
  43dcd5:	aad    0xca
  43dcd7:	aam    0x87
  43dcd9:	aad    0x62
  43dcdb:	aam    0x27
  43dcdd:	aad    0x8a
  43dcdf:	aam    0x27
  43dce1:	aad    0x22
  43dce3:	aam    0xc7
  43dce5:	aam    0x4a
  43dce7:	aam    0xe7
  43dce9:	aam    0xe2
  43dceb:	fild   DWORD PTR [edi-0x78243538]
  43dcf1:	enter  0xdba2,0x67
  43dcf5:	enter  0xdb8a,0x33
  43dcf9:	enter  0xdb92,0x43
  43dcfd:	enter  0xdb66,0x17
  43dd01:	enter  0xdb6e,0x1f
  43dd05:	enter  0x58ff,0xbf
  43dd09:	jo     0x43dd42
  43dd0b:	push   ecx
  43dd0c:	mov    edi,0x70893768
  43dd11:	pusha  
  43dd12:	aaa    
  43dd13:	xchg   ecx,eax
  43dd14:	push   0x97e93758
  43dd19:	add    BYTE PTR [eax],al
  43dd1b:	jmp    0xe943ddb7
  43dd20:	xchg   edi,eax
  43dd21:	add    BYTE PTR [eax],al
  43dd23:	jmp    0xe943ddbf
  43dd28:	add    BYTE PTR [edi-0x68170000],dl
  43dd2e:	add    BYTE PTR [eax],al
  43dd30:	jmp    0xe943ddcc
  43dd35:	xchg   edi,eax
  43dd36:	add    BYTE PTR [eax],al
  43dd38:	jmp    0xe943ddd4
  43dd3d:	xchg   edi,eax
  43dd3e:	add    BYTE PTR [eax],al
  43dd40:	jmp    0xe943dddc
  43dd45:	xchg   edi,eax
  43dd46:	add    BYTE PTR [eax],al
  43dd48:	jmp    0xe943dde4
  43dd4d:	xchg   edi,eax
  43dd4e:	add    BYTE PTR [eax],al
  43dd50:	jmp    0xe943ddec
  43dd55:	xchg   edi,eax
  43dd56:	add    BYTE PTR [eax],al
  43dd58:	jmp    0xe943ddf4
  43dd5d:	xchg   edi,eax
  43dd5e:	add    BYTE PTR [eax],al
  43dd60:	jmp    0xe943ddfc
  43dd65:	xchg   edi,eax
  43dd66:	add    BYTE PTR [eax],al
  43dd68:	jmp    0xe943de04
  43dd6d:	xchg   edi,eax
  43dd6e:	add    BYTE PTR [eax],al
  43dd70:	jmp    0xe943de0c
  43dd75:	xchg   edi,eax
  43dd76:	add    BYTE PTR [eax],al
  43dd78:	jmp    0xe943de14
  43dd7d:	xchg   edi,eax
  43dd7e:	add    BYTE PTR [eax],al
  43dd80:	add    BYTE PTR [ebp-0x42000001],bh
  43dd86:	(bad)  
  43dd87:	(bad)  
  43dd88:	jmp    FWORD PTR [ebp+0xffffff]
  43dd8e:	lods   eax,DWORD PTR ds:[esi]
  43dd8f:	(bad)  
  43dd90:	(bad)  
  43dd91:	(bad)  
  43dd92:	jge    0x43dd93
  43dd94:	(bad)  
  43dd95:	(bad)  
  43dd96:	jge    0x43dd97
  43dd98:	(bad)  
  43dd99:	jmp    FWORD PTR [ebp-0x1]
  43dd9c:	(bad)  
  43dd9d:	jmp    FWORD PTR [ebp-0x1]
  43dda0:	(bad)  
  43dda1:	(bad)  
  43dda2:	jge    0x43dda3
  43dda4:	(bad)  
  43dda5:	(bad)  
  43dda6:	jge    0x43dda7
  43dda8:	(bad)  
  43dda9:	jmp    FWORD PTR [ebp-0x1]
  43ddac:	(bad)  
  43ddad:	jmp    FWORD PTR [ebp-0x1]
  43ddb0:	(bad)  
  43ddb1:	(bad)  
  43ddb2:	cmp    eax,0x3dffffff
  43ddb7:	(bad)  
  43ddb8:	(bad)  
  43ddb9:	jmp    FWORD PTR ds:0x2dffffff
  43ddbf:	(bad)  
  43ddc0:	(bad)  
  43ddc1:	(bad)  
  43ddc2:	cmp    eax,0x3dffffff
  43ddc7:	(bad)  
  43ddc8:	(bad)  
  43ddc9:	jmp    FWORD PTR ds:0x2dffffff
  43ddcf:	(bad)  
  43ddd0:	(bad)  
  43ddd1:	(bad)  
  43ddd2:	std    
  43ddd3:	(bad)  
  43ddd4:	(bad)  
  43ddd5:	(bad)  
  43ddd6:	std    
  43ddd7:	(bad)  
  43ddd8:	(bad)  
  43ddd9:	(bad)  
  43ddda:	in     eax,dx
  43dddb:	(bad)  
  43dddc:	(bad)  
  43dddd:	(bad)  
  43ddde:	in     eax,dx
  43dddf:	(bad)  
  43dde0:	(bad)  
  43dde1:	(bad)  
  43dde2:	std    
  43dde3:	(bad)  
  43dde4:	(bad)  
  43dde5:	(bad)  
  43dde6:	std    
  43dde7:	(bad)  
  43dde8:	(bad)  
  43dde9:	(bad)  
  43ddea:	in     eax,dx
  43ddeb:	(bad)  
  43ddec:	(bad)  
  43dded:	(bad)  
  43ddee:	in     eax,dx
  43ddef:	(bad)  
  43ddf0:	(bad)  
  43ddf1:	inc    DWORD PTR [eax]
  43ddf3:	mov    ebp,0xbdfffffe
  43ddf8:	(bad)  
  43ddf9:	(bad)  
  43ddfa:	call   DWORD PTR [ecx+ebx*4-0x666b0004]
  43de01:	cld    
  43de02:	call   DWORD PTR [ecx+ebx*4-0x666b0004]
  43de09:	cld    
  43de0a:	call   DWORD PTR [ecx+ebx*4-0x666b0004]
  43de11:	cld    
  43de12:	call   DWORD PTR [edi+edx*4-0x686b0004]
  43de19:	cld    
  43de1a:	call   DWORD PTR [edi+edx*4-0x686b0004]
  43de21:	cld    
  43de22:	call   DWORD PTR [edi+edx*4-0x686b0004]
  43de29:	cld    
  43de2a:	call   DWORD PTR [edi+edx*4-0x686b0004]
  43de31:	cld    
  43de32:	call   DWORD PTR [edi+edx*4-0x686b0004]
  43de39:	cld    
  43de3a:	call   DWORD PTR [edi+edx*4-0x686b0004]
  43de41:	cld    
  43de42:	call   DWORD PTR [edi+edx*4-0x686b0004]
  43de49:	cld    
  43de4a:	call   DWORD PTR [edi+edx*4-0x686b0004]
  43de51:	cld    
  43de52:	call   DWORD PTR [edi+edx*4-0x6bff0004]
  43de59:	xchg   edi,eax
  43de5a:	cld    
  43de5b:	call   DWORD PTR [edi+edx*4-0x686b0004]
  43de62:	cld    
  43de63:	call   DWORD PTR [edi+edx*4-0x686b0004]
  43de6a:	cld    
  43de6b:	call   DWORD PTR [edi+edx*4-0x686b0004]
  43de72:	cld    
  43de73:	call   DWORD PTR [eax+eax*1+0x9403e7]
  43de7a:	out    0x3,eax
  43de7c:	xchg   esp,eax
  43de7d:	add    bh,ah
  43de7f:	add    edx,DWORD PTR [eax+eax*1+0x9403e7]
  43de86:	out    0x3,eax
  43de88:	xchg   esp,eax
  43de89:	add    bh,ah
  43de8b:	add    edx,DWORD PTR [eax+eax*1+0x9403e7]
  43de92:	out    0x3,eax
  43de94:	xchg   esp,eax
  43de95:	add    bh,ah
  43de97:	add    edx,DWORD PTR [eax+eax*1+0x9403e7]
  43de9e:	out    0x3,eax
  43dea0:	xchg   esp,eax
  43dea1:	add    bh,ah
  43dea3:	add    edx,DWORD PTR [eax+eax*1+0x9403e7]
  43deaa:	out    0x3,eax
  43deac:	xchg   esp,eax
  43dead:	add    bh,ah
  43deaf:	add    edx,DWORD PTR [eax+eax*1+0x9403e7]
  43deb6:	out    0x3,eax
  43deb8:	xchg   esp,eax
  43deb9:	add    bh,ah
  43debb:	add    eax,DWORD PTR [eax]
  43debd:	xchg   esp,eax
  43debe:	add    bh,ah
  43dec0:	add    edx,DWORD PTR [eax+eax*1+0x9403e7]
  43dec7:	out    0x3,eax
  43dec9:	xchg   esp,eax
  43deca:	add    bh,ah
  43decc:	add    edx,DWORD PTR [eax+eax*1+0x9403e7]
  43ded3:	out    0x3,eax
  43ded5:	xchg   esp,eax
  43ded6:	add    bh,ah
  43ded8:	add    edx,DWORD PTR [eax+eax*1+0x9403e7]
  43dedf:	out    0x3,eax
  43dee1:	xchg   esp,eax
  43dee2:	add    bh,ah
  43dee4:	add    edx,DWORD PTR [eax+eax*1+0x9403e7]
  43deeb:	out    0x3,eax
  43deed:	xchg   esp,eax
  43deee:	add    BYTE PTR [eax],al
  43def0:	jmp    0xe943df8c
  43def5:	xchg   edi,eax
  43def6:	add    BYTE PTR [eax],al
  43def8:	jmp    0xe943df94
  43defd:	xchg   edi,eax
  43defe:	add    BYTE PTR [eax],al
  43df00:	jmp    0xe943df9c
  43df05:	xchg   edi,eax
  43df06:	add    BYTE PTR [eax],al
  43df08:	jmp    0xe943dfa4
  43df0d:	xchg   edi,eax
  43df0e:	add    BYTE PTR [eax],al
  43df10:	jmp    0xe943dfac
  43df15:	xchg   edi,eax
  43df16:	add    BYTE PTR [eax],al
  43df18:	jmp    0xe943dfb4
  43df1d:	xchg   edi,eax
  43df1e:	add    BYTE PTR [eax],al
  43df20:	jmp    0x447625
  43df25:	jmp    0xe943dfc1
  43df2a:	xchg   edi,eax
  43df2b:	add    BYTE PTR [eax],al
  43df2d:	jmp    0xe943dfc9
  43df32:	xchg   edi,eax
  43df33:	add    BYTE PTR [eax],al
  43df35:	jmp    0xe943dfd1
  43df3a:	xchg   edi,eax
  43df3b:	add    BYTE PTR [eax],al
  43df3d:	jmp    0xe943dfd9
  43df42:	xchg   edi,eax
  43df43:	add    BYTE PTR [eax],al
  43df45:	jmp    0xe943dfe1
  43df4a:	xchg   edi,eax
  43df4b:	add    BYTE PTR [eax],al
  43df4d:	jmp    0xe943dfe9
  43df52:	xchg   edi,eax
  43df53:	add    BYTE PTR [eax],al
  43df55:	jmp    0xe943dff1
  43df5a:	xchg   edi,eax
  43df5b:	add    BYTE PTR [eax],al
  43df5d:	jmp    0xe943dff9
  43df62:	xchg   edi,eax
  43df63:	add    BYTE PTR [eax],al
  43df65:	jmp    0x43e001
  43df6a:	std    
  43df6b:	add    eax,DWORD PTR [eax]
  43df6d:	add    ch,ch
  43df6f:	add    eax,DWORD PTR [eax]
  43df71:	add    ch,ch
  43df73:	add    eax,DWORD PTR [eax]
  43df75:	add    BYTE PTR [ebp-0x42fffffd],bh
  43df7b:	add    eax,DWORD PTR [eax]
  43df7d:	add    BYTE PTR [ebp-0x52fffffd],ch
  43df83:	add    eax,DWORD PTR [eax]
  43df85:	add    BYTE PTR [eax],al
  43df87:	mov    ebp,0xbd000003
  43df8c:	add    eax,DWORD PTR [eax]
  43df8e:	add    BYTE PTR [ebp-0x52fffffd],ch
  43df94:	add    eax,DWORD PTR [eax]
  43df96:	add    BYTE PTR [ebp+0x3],bh
  43df99:	add    BYTE PTR [eax],al
  43df9b:	jge    0x43dfa0
  43df9d:	add    BYTE PTR [eax],al
  43df9f:	ins    DWORD PTR es:[edi],dx
  43dfa0:	add    eax,DWORD PTR [eax]
  43dfa2:	add    BYTE PTR [ebp+0x3],ch
  43dfa5:	add    BYTE PTR [eax],al
  43dfa7:	jge    0x43dfac
  43dfa9:	add    BYTE PTR [eax],al
  43dfab:	jge    0x43dfb0
  43dfad:	add    BYTE PTR [eax],al
  43dfaf:	ins    DWORD PTR es:[edi],dx
  43dfb0:	add    eax,DWORD PTR [eax]
  43dfb2:	add    BYTE PTR [ebp+0x3],ch
  43dfb5:	add    BYTE PTR [eax],al
  43dfb7:	cmp    eax,0x3d000003
  43dfbc:	add    eax,DWORD PTR [eax]
  43dfbe:	add    BYTE PTR ds:0x2d000003,ch
  43dfc4:	add    eax,DWORD PTR [eax]
  43dfc6:	add    BYTE PTR ds:0x3d000003,bh
  43dfcc:	add    eax,DWORD PTR [eax]
  43dfce:	add    BYTE PTR ds:0x2d000003,ch
  43dfd4:	add    eax,DWORD PTR [eax]
  43dfd6:	add    ch,bh
  43dfd8:	add    al,BYTE PTR [eax]
  43dfda:	add    ch,bh
  43dfdc:	add    al,BYTE PTR [eax]
  43dfde:	add    ch,ch
  43dfe0:	add    al,BYTE PTR [eax]
  43dfe2:	add    BYTE PTR [ecx+ebx*4-0x666b0004],dl
  43dfe9:	cld    
  43dfea:	inc    DWORD PTR [eax]
  43dfec:	xchg   esp,eax
  43dfed:	cdq    
  43dfee:	cld    
  43dfef:	call   DWORD PTR [ecx+ebx*4-0x666b0004]
  43dff6:	cld    
  43dff7:	call   DWORD PTR [ecx+ebx*4-0x666b0004]
  43dffe:	cld    
  43dfff:	call   DWORD PTR [ecx+ebx*4-0x666b0004]
  43e006:	cld    
  43e007:	call   DWORD PTR [ecx+ebx*4-0x666b0004]
  43e00e:	cld    
  43e00f:	call   DWORD PTR [ecx+ebx*4-0x666b0004]
  43e016:	cld    
  43e017:	call   DWORD PTR [edi+edx*4-0x686b0004]
  43e01e:	cld    
  43e01f:	call   DWORD PTR [edi+edx*4-0x686b0004]
  43e026:	cld    
  43e027:	call   DWORD PTR [edi+edx*4-0x686b0004]
  43e02e:	cld    
  43e02f:	call   DWORD PTR [edi+edx*4-0x686b0004]
  43e036:	cld    
  43e037:	call   DWORD PTR [edi+edx*4-0x686b0004]
  43e03e:	cld    
  43e03f:	call   DWORD PTR [edi+edx*4-0x686b0004]
  43e046:	cld    
  43e047:	call   DWORD PTR [edi+edx*4-0x686b0004]
  43e04e:	cld    
  43e04f:	inc    DWORD PTR [eax]
  43e051:	xchg   esp,eax
  43e052:	xchg   edi,eax
  43e053:	cld    
  43e054:	call   DWORD PTR [edi+edx*4-0x686b0004]
  43e05b:	cld    
  43e05c:	call   DWORD PTR [eax+eax*1+0x9403e7]
  43e063:	out    0x3,eax
  43e065:	xchg   esp,eax
  43e066:	add    bh,ah
  43e068:	add    edx,DWORD PTR [eax+eax*1+0x9403e7]
  43e06f:	out    0x3,eax
  43e071:	xchg   esp,eax
  43e072:	add    bh,ah
  43e074:	add    edx,DWORD PTR [eax+eax*1+0x9403e7]
  43e07b:	out    0x3,eax
  43e07d:	xchg   esp,eax
  43e07e:	add    bh,ah
  43e080:	add    edx,DWORD PTR [eax+eax*1+0x9403e7]
  43e087:	out    0x3,eax
  43e089:	xchg   esp,eax
  43e08a:	add    bh,ah
  43e08c:	add    edx,DWORD PTR [eax+eax*1+0x9403e7]
  43e093:	out    0x3,eax
  43e095:	xchg   esp,eax
  43e096:	add    bh,ah
  43e098:	add    edx,DWORD PTR [eax+eax*1+0x9403e7]
  43e09f:	out    0x3,eax
  43e0a1:	xchg   esp,eax
  43e0a2:	add    bh,ah
  43e0a4:	add    edx,DWORD PTR [eax+eax*1+0x9403e7]
  43e0ab:	out    0x3,eax
  43e0ad:	xchg   esp,eax
  43e0ae:	add    bh,ah
  43e0b0:	add    edx,DWORD PTR [eax+eax*1-0x6bfffc19]
  43e0b7:	add    bh,ah
  43e0b9:	add    edx,DWORD PTR [eax+eax*1+0x9403e7]
  43e0c0:	out    0x3,eax
  43e0c2:	xchg   esp,eax
  43e0c3:	add    bh,ah
  43e0c5:	add    edx,DWORD PTR [eax+eax*1+0x9403e7]
  43e0cc:	out    0x3,eax
  43e0ce:	xchg   esp,eax
  43e0cf:	add    bh,ah
  43e0d1:	add    edx,DWORD PTR [eax+eax*1+0x9403e7]
  43e0d8:	add    cl,ch
  43e0da:	xchg   edi,eax
  43e0db:	add    BYTE PTR [eax],al
  43e0dd:	jmp    0xe943e179
  43e0e2:	xchg   edi,eax
  43e0e3:	add    BYTE PTR [eax],al
  43e0e5:	jmp    0xe943e181
  43e0ea:	xchg   edi,eax
  43e0eb:	add    BYTE PTR [eax],al
  43e0ed:	jmp    0xe943e189
  43e0f2:	xchg   edi,eax
  43e0f3:	add    BYTE PTR [eax],al
  43e0f5:	jmp    0xe943e191
  43e0fa:	xchg   edi,eax
  43e0fb:	add    BYTE PTR [eax],al
  43e0fd:	jmp    0xe943e199
  43e102:	xchg   edi,eax
  43e103:	add    BYTE PTR [eax],al
  43e105:	jmp    0xe943e1a1
  43e10a:	xchg   edi,eax
  43e10b:	add    BYTE PTR [eax],al
  43e10d:	jmp    0xe943e1a9
  43e112:	xchg   edi,eax
  43e113:	add    BYTE PTR [eax],al
  43e115:	jmp    0xe943e1b1
  43e11a:	add    BYTE PTR [edi-0x68170000],dl
  43e120:	add    BYTE PTR [eax],al
  43e122:	jmp    0xe943e1be
  43e127:	xchg   edi,eax
  43e128:	add    BYTE PTR [eax],al
  43e12a:	jmp    0xe943e1c6
  43e12f:	xchg   edi,eax
  43e130:	add    BYTE PTR [eax],al
  43e132:	jmp    0xe943e1ce
  43e137:	xchg   edi,eax
  43e138:	add    BYTE PTR [eax],al
  43e13a:	jmp    0xe943e1d6
  43e13f:	xchg   edi,eax
  43e140:	add    BYTE PTR [eax],al
  43e142:	jmp    0xe943e1de
  43e147:	xchg   edi,eax
  43e148:	add    BYTE PTR [eax],al
  43e14a:	jmp    0xe943e1e6
  43e14f:	xchg   edi,eax
  43e150:	add    BYTE PTR [eax],al
  43e152:	add    BYTE PTR ds:0x2d000000,ch
  43e158:	add    BYTE PTR [eax],al
  43e15a:	add    ch,bh
  43e15c:	(bad)  
  43e15d:	(bad)  
  43e15e:	(bad)  
  43e15f:	std    
  43e160:	(bad)  
  43e161:	(bad)  
  43e162:	(bad)  
  43e163:	in     eax,dx
  43e164:	(bad)  
  43e165:	(bad)  
  43e166:	(bad)  
  43e167:	in     eax,dx
  43e168:	(bad)  
  43e169:	(bad)  
  43e16a:	(bad)  
  43e16b:	std    
  43e16c:	(bad)  
  43e16d:	(bad)  
  43e16e:	(bad)  
  43e16f:	std    
  43e170:	(bad)  
  43e171:	(bad)  
  43e172:	(bad)  
  43e173:	in     eax,dx
  43e174:	(bad)  
  43e175:	(bad)  
  43e176:	(bad)  
  43e177:	in     eax,dx
  43e178:	(bad)  
  43e179:	(bad)  
  43e17a:	(bad)  
  43e17b:	mov    ebp,0xffffff
  43e180:	mov    ebp,0xadffffff
  43e185:	(bad)  
  43e186:	(bad)  
  43e187:	jmp    FWORD PTR [ebp-0x42000001]
  43e18d:	(bad)  
  43e18e:	(bad)  
  43e18f:	(bad)  
  43e190:	mov    ebp,0xadffffff
  43e195:	(bad)  
  43e196:	(bad)  
  43e197:	jmp    FWORD PTR [ebp+0x7dffffff]
  43e19d:	(bad)  
  43e19e:	(bad)  
  43e19f:	(bad)  
  43e1a0:	jge    0x43e1a1
  43e1a2:	(bad)  
  43e1a3:	jmp    FWORD PTR [ebp-0x1]
  43e1a6:	(bad)  
  43e1a7:	jmp    FWORD PTR [ebp-0x1]
  43e1aa:	(bad)  
  43e1ab:	(bad)  
  43e1ac:	jge    0x43e1ad
  43e1ae:	(bad)  
  43e1af:	(bad)  
  43e1b0:	jge    0x43e1b1
  43e1b2:	(bad)  
  43e1b3:	jmp    FWORD PTR [ebp-0x1]
  43e1b6:	(bad)  
  43e1b7:	jmp    FWORD PTR [ebp-0x1]
  43e1ba:	(bad)  
  43e1bb:	(bad)  
  43e1bc:	cmp    eax,0x3dffffff
  43e1c1:	(bad)  
  43e1c2:	(bad)  
  43e1c3:	jmp    FWORD PTR ds:0x2dffffff
  43e1c9:	(bad)  
  43e1ca:	(bad)  
  43e1cb:	call   DWORD PTR [ecx+ebx*4-0x666b0004]
  43e1d2:	cld    
  43e1d3:	call   DWORD PTR [ecx+ebx*4-0x666b0004]
  43e1da:	cld    
  43e1db:	call   DWORD PTR [ecx+ebx*4-0x666b0004]
  43e1e2:	cld    
  43e1e3:	inc    DWORD PTR [eax]
  43e1e5:	xchg   esp,eax
  43e1e6:	cdq    
  43e1e7:	cld    
  43e1e8:	call   DWORD PTR [ecx+ebx*4-0x666b0004]
  43e1ef:	cld    
  43e1f0:	call   DWORD PTR [ecx+ebx*4-0x666b0004]
  43e1f7:	cld    
  43e1f8:	call   DWORD PTR [ecx+ebx*4-0x666b0004]
  43e1ff:	cld    
  43e200:	call   DWORD PTR [ecx+ebx*4-0x666b0004]
  43e207:	cld    
  43e208:	call   DWORD PTR [ecx+ebx*4-0x666b0004]
  43e20f:	cld    
  43e210:	call   DWORD PTR [ecx+ebx*4-0x666b0004]
  43e217:	cld    
  43e218:	call   DWORD PTR [ecx+ebx*4-0x686b0004]
  43e21f:	cld    
  43e220:	call   DWORD PTR [edi+edx*4-0x686b0004]
  43e227:	cld    
  43e228:	call   DWORD PTR [edi+edx*4-0x686b0004]
  43e22f:	cld    
  43e230:	call   DWORD PTR [edi+edx*4-0x686b0004]
  43e237:	cld    
  43e238:	call   DWORD PTR [edi+edx*4-0x686b0004]
  43e23f:	cld    
  43e240:	call   DWORD PTR [edi+edx*4+0x94fffc]
  43e247:	out    0x3,eax
  43e249:	add    BYTE PTR [eax+eax*1+0x9403e7],dl
  43e250:	out    0x3,eax
  43e252:	xchg   esp,eax
  43e253:	add    bh,ah
  43e255:	add    edx,DWORD PTR [eax+eax*1+0x9403e7]
  43e25c:	out    0x3,eax
  43e25e:	xchg   esp,eax
  43e25f:	add    bh,ah
  43e261:	add    edx,DWORD PTR [eax+eax*1+0x9403e7]
  43e268:	out    0x3,eax
  43e26a:	xchg   esp,eax
  43e26b:	add    bh,ah
  43e26d:	add    edx,DWORD PTR [eax+eax*1+0x9403e7]
  43e274:	out    0x3,eax
  43e276:	xchg   esp,eax
  43e277:	add    bh,ah
  43e279:	add    edx,DWORD PTR [eax+eax*1+0x9403e7]
  43e280:	out    0x3,eax
  43e282:	xchg   esp,eax
  43e283:	add    bh,ah
  43e285:	add    edx,DWORD PTR [eax+eax*1+0x9403e7]
  43e28c:	out    0x3,eax
  43e28e:	xchg   esp,eax
  43e28f:	add    bh,ah
  43e291:	add    edx,DWORD PTR [eax+eax*1+0x9403e7]
  43e298:	out    0x3,eax
  43e29a:	xchg   esp,eax
  43e29b:	add    bh,ah
  43e29d:	add    edx,DWORD PTR [eax+eax*1+0x9403e7]
  43e2a4:	out    0x3,eax
  43e2a6:	xchg   esp,eax
  43e2a7:	add    bh,ah
  43e2a9:	add    edx,DWORD PTR [eax+eax*1-0x6bfffc19]
  43e2b0:	add    bh,ah
  43e2b2:	add    edx,DWORD PTR [eax+eax*1+0x9403e7]
  43e2b9:	out    0x3,eax
  43e2bb:	xchg   esp,eax
  43e2bc:	add    bh,ah
  43e2be:	add    edx,DWORD PTR [eax+eax*1+0x97e900]
  43e2c5:	add    cl,ch
  43e2c7:	xchg   edi,eax
  43e2c8:	add    BYTE PTR [eax],al
  43e2ca:	jmp    0xe943e366
  43e2cf:	xchg   edi,eax
  43e2d0:	add    BYTE PTR [eax],al
  43e2d2:	jmp    0xe943e36e
  43e2d7:	xchg   edi,eax
  43e2d8:	add    BYTE PTR [eax],al
  43e2da:	jmp    0xe943e376
  43e2df:	xchg   edi,eax
  43e2e0:	add    BYTE PTR [eax],al
  43e2e2:	jmp    0xe943e37e
  43e2e7:	xchg   edi,eax
  43e2e8:	add    BYTE PTR [eax],al
  43e2ea:	jmp    0xe943e386
  43e2ef:	xchg   edi,eax
  43e2f0:	add    BYTE PTR [eax],al
  43e2f2:	jmp    0xe943e38e
  43e2f7:	xchg   edi,eax
  43e2f8:	add    BYTE PTR [eax],al
  43e2fa:	jmp    0xe943e396
  43e2ff:	xchg   edi,eax
  43e300:	add    BYTE PTR [eax],al
  43e302:	jmp    0xe943e39e
  43e307:	xchg   edi,eax
  43e308:	add    BYTE PTR [eax],al
  43e30a:	jmp    0xe943e3a6
  43e30f:	xchg   edi,eax
  43e310:	add    BYTE PTR [eax],al
  43e312:	jmp    0x447a17
  43e317:	jmp    0xe943e3b3
  43e31c:	xchg   edi,eax
  43e31d:	add    BYTE PTR [eax],al
  43e31f:	jmp    0xe943e3bb
  43e324:	xchg   edi,eax
  43e325:	add    BYTE PTR [eax],al
  43e327:	jmp    0xe943e3c3
  43e32c:	xchg   edi,eax
  43e32d:	add    BYTE PTR [eax],al
  43e32f:	jmp    0xe943e3cb
  43e334:	xchg   edi,eax
  43e335:	add    BYTE PTR [eax],al
  43e337:	jmp    0x43e3d3
  43e33c:	ins    DWORD PTR es:[edi],dx
  43e33d:	add    al,0x0
  43e33f:	add    BYTE PTR ds:0x3d000004,bh
  43e345:	add    al,0x0
  43e347:	add    BYTE PTR ds:0x2d000004,ch
  43e34d:	add    al,0x0
  43e34f:	add    BYTE PTR ds:0x3d000004,bh
  43e355:	add    al,0x0
  43e357:	add    BYTE PTR ds:0x2d000004,ch
  43e35d:	add    al,0x0
  43e35f:	add    ch,bh
  43e361:	add    eax,DWORD PTR [eax]
  43e363:	add    ch,bh
  43e365:	add    eax,DWORD PTR [eax]
  43e367:	add    ch,ch
  43e369:	add    eax,DWORD PTR [eax]
  43e36b:	add    ch,ch
  43e36d:	add    eax,DWORD PTR [eax]
  43e36f:	add    ch,bh
  43e371:	add    eax,DWORD PTR [eax]
  43e373:	add    ch,bh
  43e375:	add    eax,DWORD PTR [eax]
  43e377:	add    BYTE PTR [eax],al
  43e379:	in     eax,dx
  43e37a:	add    eax,DWORD PTR [eax]
  43e37c:	add    ch,ch
  43e37e:	add    eax,DWORD PTR [eax]
  43e380:	add    BYTE PTR [ebp-0x42fffffd],bh
  43e386:	add    eax,DWORD PTR [eax]
  43e388:	add    BYTE PTR [ebp-0x52fffffd],ch
  43e38e:	add    eax,DWORD PTR [eax]
  43e390:	add    BYTE PTR [ebp-0x42fffffd],bh
  43e396:	add    eax,DWORD PTR [eax]
  43e398:	add    BYTE PTR [ebp-0x52fffffd],ch
  43e39e:	add    eax,DWORD PTR [eax]
  43e3a0:	add    BYTE PTR [ebp+0x3],bh
  43e3a3:	add    BYTE PTR [eax],al
  43e3a5:	jge    0x43e3aa
  43e3a7:	add    BYTE PTR [eax],al
  43e3a9:	ins    DWORD PTR es:[edi],dx
  43e3aa:	add    eax,DWORD PTR [eax]
  43e3ac:	add    BYTE PTR [ebp+0x3],ch
  43e3af:	add    BYTE PTR [eax],al
  43e3b1:	jge    0x43e3b6
  43e3b3:	add    BYTE PTR [eax],al
  43e3b5:	xchg   esp,eax
  43e3b6:	imul   edi,esp,0xfc6994ff
  43e3bc:	call   DWORD PTR [ecx+ebp*2+0x6994fffc]
  43e3c3:	cld    
  43e3c4:	call   DWORD PTR [ecx+ebp*2+0x6994fffc]
  43e3cb:	cld    
  43e3cc:	call   DWORD PTR [ecx+ebp*2+0x6994fffc]
  43e3d3:	cld    
  43e3d4:	call   DWORD PTR [ecx+ebp*2+0x6994fffc]
  43e3db:	cld    
  43e3dc:	inc    DWORD PTR [eax]
  43e3de:	xchg   esp,eax
  43e3df:	imul   edi,esp,0xfc6994ff
  43e3e5:	call   DWORD PTR [ecx+ebp*2+0x6994fffc]
  43e3ec:	cld    
  43e3ed:	call   DWORD PTR [ecx+ebp*2+0x6994fffc]
  43e3f4:	cld    
  43e3f5:	call   DWORD PTR [ecx+ebp*2+0x6994fffc]
  43e3fc:	cld    
  43e3fd:	call   DWORD PTR [ecx+ebp*2+0x6994fffc]
  43e404:	cld    
  43e405:	call   DWORD PTR [ecx+ebp*2+0x6994fffc]
  43e40c:	cld    
  43e40d:	call   DWORD PTR [ecx+ebp*2+0x6994fffc]
  43e414:	cld    
  43e415:	call   DWORD PTR [ecx+ebp*2+0x6994fffc]
  43e41c:	cld    
  43e41d:	call   DWORD PTR [ecx+ebp*2+0x6794fffc]
  43e424:	cld    
  43e425:	call   DWORD PTR [edi+eiz*2+0x6794fffc]
  43e42c:	cld    
  43e42d:	call   DWORD PTR [eax+eax*1+0x9403e7]
  43e434:	out    0x3,eax
  43e436:	xchg   esp,eax
  43e437:	add    bh,ah
  43e439:	add    edx,DWORD PTR [eax+eax*1+0x9403e7]
  43e440:	out    0x3,eax
  43e442:	add    BYTE PTR [eax+eax*1+0x9403e7],dl
  43e449:	out    0x3,eax
  43e44b:	xchg   esp,eax
  43e44c:	add    bh,ah
  43e44e:	add    edx,DWORD PTR [eax+eax*1+0x9403e7]
  43e455:	out    0x3,eax
  43e457:	xchg   esp,eax
  43e458:	add    bh,ah
  43e45a:	add    edx,DWORD PTR [eax+eax*1+0x9403e7]
  43e461:	out    0x3,eax
  43e463:	xchg   esp,eax
  43e464:	add    bh,ah
  43e466:	add    edx,DWORD PTR [eax+eax*1+0x9403e7]
  43e46d:	out    0x3,eax
  43e46f:	xchg   esp,eax
  43e470:	add    bh,ah
  43e472:	add    edx,DWORD PTR [eax+eax*1+0x9403e7]
  43e479:	out    0x3,eax
  43e47b:	xchg   esp,eax
  43e47c:	add    bh,ah
  43e47e:	add    edx,DWORD PTR [eax+eax*1+0x9403e7]
  43e485:	out    0x3,eax
  43e487:	xchg   esp,eax
  43e488:	add    bh,ah
  43e48a:	add    edx,DWORD PTR [eax+eax*1+0x9403e7]
  43e491:	out    0x3,eax
  43e493:	xchg   esp,eax
  43e494:	add    bh,ah
  43e496:	add    edx,DWORD PTR [eax+eax*1+0x9403e7]
  43e49d:	out    0x3,eax
  43e49f:	xchg   esp,eax
  43e4a0:	add    bh,ah
  43e4a2:	add    edx,DWORD PTR [eax+eax*1-0x6bfffc19]
  43e4a9:	add    BYTE PTR [eax],al
  43e4ab:	jmp    0xe943e547
  43e4b0:	xchg   edi,eax
  43e4b1:	add    BYTE PTR [eax],al
  43e4b3:	jmp    0xe943e54f
  43e4b8:	xchg   edi,eax
  43e4b9:	add    BYTE PTR [eax],al
  43e4bb:	jmp    0xe943e557
  43e4c0:	xchg   edi,eax
  43e4c1:	add    BYTE PTR [eax],al
  43e4c3:	jmp    0xe943e55f
  43e4c8:	xchg   edi,eax
  43e4c9:	add    BYTE PTR [eax],al
  43e4cb:	jmp    0xe943e567
  43e4d0:	xchg   edi,eax
  43e4d1:	add    BYTE PTR [eax],al
  43e4d3:	jmp    0xe943e56f
  43e4d8:	xchg   edi,eax
  43e4d9:	add    BYTE PTR [eax],al
  43e4db:	jmp    0xe943e577
  43e4e0:	xchg   edi,eax
  43e4e1:	add    BYTE PTR [eax],al
  43e4e3:	jmp    0xe943e57f
  43e4e8:	xchg   edi,eax
  43e4e9:	add    BYTE PTR [eax],al
  43e4eb:	jmp    0xe943e587
  43e4f0:	xchg   edi,eax
  43e4f1:	add    BYTE PTR [eax],al
  43e4f3:	jmp    0xe943e58f
  43e4f8:	xchg   edi,eax
  43e4f9:	add    BYTE PTR [eax],al
  43e4fb:	jmp    0xe943e597
  43e500:	xchg   edi,eax
  43e501:	add    BYTE PTR [eax],al
  43e503:	jmp    0xe943e59f
  43e508:	xchg   edi,eax
  43e509:	add    BYTE PTR [eax],al
  43e50b:	jmp    0x447c10
  43e510:	jmp    0xe943e5ac
  43e515:	xchg   edi,eax
  43e516:	add    BYTE PTR [eax],al
  43e518:	jmp    0xe943e5b4
  43e51d:	xchg   edi,eax
  43e51e:	add    BYTE PTR [eax],al
  43e520:	jmp    0x43e5bc
  43e525:	jge    0x43e527
  43e527:	add    BYTE PTR [eax],al
  43e529:	jge    0x43e52b
  43e52b:	add    BYTE PTR [eax],al
  43e52d:	ins    DWORD PTR es:[edi],dx
  43e52e:	add    BYTE PTR [eax],al
  43e530:	add    BYTE PTR [ebp+0x0],ch
  43e533:	add    BYTE PTR [eax],al
  43e535:	jge    0x43e537
  43e537:	add    BYTE PTR [eax],al
  43e539:	jge    0x43e53b
  43e53b:	add    BYTE PTR [eax],al
  43e53d:	ins    DWORD PTR es:[edi],dx
  43e53e:	add    BYTE PTR [eax],al
  43e540:	add    BYTE PTR [ebp+0x0],ch
  43e543:	add    BYTE PTR [eax],al
  43e545:	cmp    eax,0x3d000000
  43e54a:	add    BYTE PTR [eax],al
  43e54c:	add    BYTE PTR ds:0x2d000000,ch
  43e552:	add    BYTE PTR [eax],al
  43e554:	add    BYTE PTR ds:0x3d000000,bh
  43e55a:	add    BYTE PTR [eax],al
  43e55c:	add    BYTE PTR ds:0x2d000000,ch
  43e562:	add    BYTE PTR [eax],al
  43e564:	add    ch,bh
  43e566:	(bad)  
  43e567:	(bad)  
  43e568:	(bad)  
  43e569:	std    
  43e56a:	(bad)  
  43e56b:	(bad)  
  43e56c:	(bad)  
  43e56d:	in     eax,dx
  43e56e:	(bad)  
  43e56f:	(bad)  
  43e570:	inc    DWORD PTR [eax]
  43e572:	in     eax,dx
  43e573:	(bad)  
  43e574:	(bad)  
  43e575:	(bad)  
  43e576:	std    
  43e577:	(bad)  
  43e578:	(bad)  
  43e579:	(bad)  
  43e57a:	std    
  43e57b:	(bad)  
  43e57c:	(bad)  
  43e57d:	(bad)  
  43e57e:	in     eax,dx
  43e57f:	(bad)  
  43e580:	(bad)  
  43e581:	(bad)  
  43e582:	in     eax,dx
  43e583:	(bad)  
  43e584:	(bad)  
  43e585:	(bad)  
  43e586:	mov    ebp,0xbdffffff
  43e58b:	(bad)  
  43e58c:	(bad)  
  43e58d:	jmp    FWORD PTR [ebp-0x52000001]
  43e593:	(bad)  
  43e594:	(bad)  
  43e595:	(bad)  
  43e596:	mov    ebp,0xbdffffff
  43e59b:	(bad)  
  43e59c:	(bad)  
  43e59d:	call   DWORD PTR [ecx+ebp*2+0x6994fffc]
  43e5a4:	cld    
  43e5a5:	call   DWORD PTR [ecx+ebp*2+0x6994fffc]
  43e5ac:	cld    
  43e5ad:	call   DWORD PTR [ecx+ebp*2+0x6994fffc]
  43e5b4:	cld    
  43e5b5:	call   DWORD PTR [ecx+ebp*2+0x6994fffc]
  43e5bc:	cld    
  43e5bd:	call   DWORD PTR [ecx+ebp*2+0x6994fffc]
  43e5c4:	cld    
  43e5c5:	call   DWORD PTR [ecx+ebp*2+0x6994fffc]
  43e5cc:	cld    
  43e5cd:	call   DWORD PTR [ecx+ebp*2+0x6994fffc]
  43e5d4:	cld    
  43e5d5:	inc    DWORD PTR [eax]
  43e5d7:	xchg   esp,eax
  43e5d8:	imul   edi,esp,0xfc6994ff
  43e5de:	call   DWORD PTR [ecx+ebp*2+0x6994fffc]
  43e5e5:	cld    
  43e5e6:	call   DWORD PTR [ecx+ebp*2+0x6994fffc]
  43e5ed:	cld    
  43e5ee:	call   DWORD PTR [ecx+ebp*2+0x6994fffc]
  43e5f5:	cld    
  43e5f6:	call   DWORD PTR [ecx+ebp*2+0x6994fffc]
  43e5fd:	cld    
  43e5fe:	call   DWORD PTR [ecx+ebp*2+0x6994fffc]
  43e605:	cld    
  43e606:	call   DWORD PTR [ecx+ebp*2+0x6994fffc]
  43e60d:	cld    
  43e60e:	call   DWORD PTR [ecx+ebp*2+0x6994fffc]
  43e615:	cld    
  43e616:	call   DWORD PTR [eax+eax*1+0x9403e7]
  43e61d:	out    0x3,eax
  43e61f:	xchg   esp,eax
  43e620:	add    bh,ah
  43e622:	add    edx,DWORD PTR [eax+eax*1+0x9403e7]
  43e629:	out    0x3,eax
  43e62b:	xchg   esp,eax
  43e62c:	add    bh,ah
  43e62e:	add    edx,DWORD PTR [eax+eax*1+0x9403e7]
  43e635:	out    0x3,eax
  43e637:	xchg   esp,eax
  43e638:	add    bh,ah
  43e63a:	add    eax,DWORD PTR [eax]
  43e63c:	xchg   esp,eax
  43e63d:	add    bh,ah
  43e63f:	add    edx,DWORD PTR [eax+eax*1+0x9403e7]
  43e646:	out    0x3,eax
  43e648:	xchg   esp,eax
  43e649:	add    bh,ah
  43e64b:	add    edx,DWORD PTR [eax+eax*1+0x9403e7]
  43e652:	out    0x3,eax
  43e654:	xchg   esp,eax
  43e655:	add    bh,ah
  43e657:	add    edx,DWORD PTR [eax+eax*1+0x9403e7]
  43e65e:	out    0x3,eax
  43e660:	xchg   esp,eax
  43e661:	add    bh,ah
  43e663:	add    edx,DWORD PTR [eax+eax*1+0x9403e7]
  43e66a:	out    0x3,eax
  43e66c:	xchg   esp,eax
  43e66d:	add    bh,ah
  43e66f:	add    edx,DWORD PTR [eax+eax*1+0x9403e7]
  43e676:	out    0x3,eax
  43e678:	xchg   esp,eax
  43e679:	add    bh,ah
  43e67b:	add    edx,DWORD PTR [eax+eax*1+0x9403e7]
  43e682:	out    0x3,eax
  43e684:	xchg   esp,eax
  43e685:	add    bh,ah
  43e687:	add    edx,DWORD PTR [eax+eax*1+0x9403e7]
  43e68e:	out    0x3,eax
  43e690:	xchg   esp,eax
  43e691:	add    BYTE PTR [eax],al
  43e693:	jmp    0xe943e72f
  43e698:	xchg   edi,eax
  43e699:	add    BYTE PTR [eax],al
  43e69b:	jmp    0xe943e737
  43e6a0:	add    BYTE PTR [edi-0x68170000],dl
  43e6a6:	add    BYTE PTR [eax],al
  43e6a8:	jmp    0xe943e744
  43e6ad:	xchg   edi,eax
  43e6ae:	add    BYTE PTR [eax],al
  43e6b0:	jmp    0xe943e74c
  43e6b5:	xchg   edi,eax
  43e6b6:	add    BYTE PTR [eax],al
  43e6b8:	jmp    0xe943e754
  43e6bd:	xchg   edi,eax
  43e6be:	add    BYTE PTR [eax],al
  43e6c0:	jmp    0xe943e75c
  43e6c5:	xchg   edi,eax
  43e6c6:	add    BYTE PTR [eax],al
  43e6c8:	jmp    0xe943e764
  43e6cd:	xchg   edi,eax
  43e6ce:	add    BYTE PTR [eax],al
  43e6d0:	jmp    0xe943e76c
  43e6d5:	xchg   edi,eax
  43e6d6:	add    BYTE PTR [eax],al
  43e6d8:	jmp    0xe943e774
  43e6dd:	xchg   edi,eax
  43e6de:	add    BYTE PTR [eax],al
  43e6e0:	jmp    0xe943e77c
  43e6e5:	xchg   edi,eax
  43e6e6:	add    BYTE PTR [eax],al
  43e6e8:	jmp    0xe943e784
  43e6ed:	xchg   edi,eax
  43e6ee:	add    BYTE PTR [eax],al
  43e6f0:	jmp    0xe943e78c
  43e6f5:	xchg   edi,eax
  43e6f6:	add    BYTE PTR [eax],al
  43e6f8:	jmp    0xe943e794
  43e6fd:	xchg   edi,eax
  43e6fe:	add    BYTE PTR [eax],al
  43e700:	jmp    0xe943e79c
  43e705:	add    BYTE PTR [edi-0x68170000],dl
  43e70b:	add    BYTE PTR [eax],al
  43e70d:	add    BYTE PTR [ebp-0x52000004],bh
  43e713:	cld    
  43e714:	(bad)  
  43e715:	jmp    FWORD PTR [ebp-0x42000004]
  43e71b:	cld    
  43e71c:	(bad)  
  43e71d:	(bad)  
  43e71e:	mov    ebp,0xadfffffc
  43e723:	cld    
  43e724:	(bad)  
  43e725:	jmp    FWORD PTR [esp+ecx*2+0x25d70202]
  43e72c:	jg     0x43e77c
  43e72e:	cmp    eax,0x92325ead
  43e733:	and    dh,BYTE PTR [ecx-0x8]
  43e736:	push   cs
  43e737:	dec    edi
  43e738:	fiadd  DWORD PTR [ebx-0x20]
  43e73b:	sti    
  43e73c:	inc    ebp
  43e73d:	cld    
  43e73e:	add    bl,cl
  43e740:	mov    edx,0xcbf2977
  43e745:	jmp    0x43e75e
  43e747:	mov    esp,DWORD PTR [edx-0x55be9eda]
  43e74d:	imul   ebx,eax,0x1c
  43e750:	or     eax,0x702c61d8
  43e755:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43e756:	retf   0x239c
  43e759:	push   ss
  43e75a:	jns    0x43e756
  43e75c:	push   cs
  43e75d:	inc    eax
  43e75e:	jns    0x43e73e
  43e760:	mov    cl,0x2c
  43e762:	or     ah,BYTE PTR [edi-0xa7dd24d]
  43e768:	push   ds
  43e769:	jmp    0xbba4:0x6eff2e00
  43e770:	inc    esp
  43e771:	and    al,0xeb
  43e773:	mov    DWORD PTR [ebx+0x63],ebp
  43e776:	not    BYTE PTR [edx-0x4ed6b990]
  43e77c:	pop    ebx
  43e77d:	mov    edx,0xff3fd59e
  43e782:	lds    ecx,FWORD PTR [esi+0x1]
  43e785:	in     al,0xfc
  43e787:	xchg   esp,eax
  43e788:	dec    edx
  43e789:	dec    edx
  43e78a:	and    ebx,eax
  43e78c:	iret   
  43e78d:	xchg   edi,eax
  43e78e:	mov    ah,0xbd
  43e790:	mov    esi,0x55dd76c9
  43e795:	adc    al,BYTE PTR [ebp-0x7b]
  43e798:	hlt    
  43e799:	pop    edx
  43e79a:	sbb    cl,bl
  43e79c:	xchg   esi,eax
  43e79d:	sub    al,0xcb
  43e79f:	dec    eax
  43e7a0:	add    ch,cl
  43e7a2:	xchg   ebx,eax
  43e7a3:	and    DWORD PTR [ecx],ebx
  43e7a5:	jmp    0x43e7c9
  43e7a7:	sbb    al,0x7a
  43e7a9:	push   edx
  43e7aa:	sbb    al,0xab
  43e7ac:	ds mov esp,edx
  43e7af:	(bad)  
  43e7b3:	pop    esp
  43e7b4:	fs cld 
  43e7b6:	mov    ds:0xfb627c8c,eax
  43e7bb:	sbb    bl,BYTE PTR [ebp+0x59]
  43e7be:	int    0x27
  43e7c0:	into   
  43e7c1:	cdq    
  43e7c2:	mov    ebp,0x54d1aed9
  43e7c7:	sub    ah,BYTE PTR ds:0xdf16426d
  43e7cd:	(bad)  
  43e7ce:	aad    0x0
  43e7d0:	pop    es
  43e7d1:	imul   edi,DWORD PTR [ecx+0x71],0x44163f6
  43e7d8:	jp     0x43e787
  43e7da:	jecxz  0x43e819
  43e7dc:	enter  0xceda,0xd7
  43e7e0:	add    DWORD PTR [ebx-0x46],esp
  43e7e3:	xchg   ebp,eax
  43e7e4:	cli    
  43e7e5:	xor    BYTE PTR [edi-0x76bbeeb3],0x79
  43e7ec:	pop    esp
  43e7ed:	(bad)  
  43e7ef:	out    dx,al
  43e7f0:	ss cli 
  43e7f2:	pop    edi
  43e7f3:	(bad)  
  43e7f4:	pop    esp
  43e7f5:	out    dx,al
  43e7f6:	int    0xa6
  43e7f8:	cmp    cl,al
  43e7fa:	out    0x21,eax
  43e7fc:	and    ecx,DWORD PTR [edi+0x2d]
  43e7ff:	xor    ebp,DWORD PTR [ebx+0x6c8fe00]
  43e805:	ret    
  43e806:	das    
  43e807:	inc    esp
  43e808:	loopne 0x43e7d7
  43e80a:	aaa    
  43e80b:	test   DWORD PTR cs:[ebx+0x784e707f],edx
  43e812:	out    0x22,al
  43e814:	dec    ecx
  43e815:	mov    ch,BYTE PTR [ecx+0x54]
  43e818:	mov    WORD PTR [edi+0x376df46f],?
  43e81e:	mov    ds:0x47b2877a,eax
  43e823:	xor    DWORD PTR [ebx],eax
  43e825:	cwde   
  43e826:	je     0x43e879
  43e828:	adc    DWORD PTR [eax],esi
  43e82a:	push   ds
  43e82b:	sbb    BYTE PTR [edx],cl
  43e82d:	fdiv   st,st(5)
  43e82f:	shl    DWORD PTR [edi+ebx*8+0xb],cl
  43e833:	xor    eax,DWORD PTR [eax]
  43e835:	test   BYTE PTR [eax+esi*8-0x1b],al
  43e839:	(bad)
  43e83c:	fiadd  DWORD PTR [edx+esi*2-0x21]
  43e840:	and    BYTE PTR [edx],dl
  43e842:	xor    ch,BYTE PTR [ecx+ecx*2+0x32]
  43e846:	aas    
  43e847:	ror    ch,cl
  43e849:	jmp    0x9d2e060f
  43e84e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43e84f:	dec    ebp
  43e850:	ja     0x43e7ef
  43e852:	fidiv  WORD PTR [ecx+0x2c420a30]
  43e858:	les    edi,FWORD PTR [edi]
  43e85a:	repnz pop ss
  43e85c:	icebp  
  43e85d:	stos   BYTE PTR es:[edi],al
  43e85e:	adc    al,0x9d
  43e860:	les    eax,FWORD PTR [edx]
  43e862:	and    esi,edx
  43e864:	mov    edi,0x3185748e
  43e869:	sti    
  43e86a:	loop   0x43e836
  43e86c:	adc    DWORD PTR [eax+esi*2-0x3435bb18],edi
  43e873:	aad    0x83
  43e875:	ss push esi
  43e877:	jb     0x43e8bd
  43e879:	js     0x43e800
  43e87b:	jmp    FWORD PTR [esi+esi*8+0x6d]
  43e87f:	addr16 nop
  43e881:	adc    bl,BYTE PTR [ebp-0x29]
  43e884:	scas   eax,DWORD PTR es:[edi]
  43e885:	xor    al,0x4e
  43e887:	sbb    eax,0xb26dc184
  43e88c:	popf   
  43e88d:	dec    ebp
  43e88e:	sti    
  43e88f:	fisub  DWORD PTR [ebx-0x655aad57]
  43e895:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43e896:	stos   DWORD PTR es:[edi],eax
  43e897:	popf   
  43e898:	inc    esp
  43e899:	add    BYTE PTR [ebp-0x3de1005b],ah
  43e89f:	(bad)  
  43e8a1:	mov    ah,0x94
  43e8a3:	test   al,0xf2
  43e8a5:	push   0x7b4525
  43e8aa:	fnstsw WORD PTR [ecx+0x1c90ca6d]
  43e8b0:	adc    BYTE PTR [edx],bh
  43e8b2:	push   cs
  43e8b3:	mov    cl,0x1b
  43e8b5:	aad    0x8e
  43e8b7:	add    al,0x19
  43e8b9:	mov    DWORD PTR [ebp-0x14],esp
  43e8bc:	in     eax,0x3e
  43e8be:	rcl    BYTE PTR [ebx+0x25],0xbb
  43e8c2:	clc    
  43e8c3:	jg     0x43e897
  43e8c5:	ret    
  43e8c6:	jne    0x43e8f4
  43e8c8:	jnp    0x43e8e3
  43e8ca:	lods   eax,DWORD PTR ds:[esi]
  43e8cb:	ret    0x1803
  43e8ce:	das    
  43e8cf:	or     BYTE PTR [esi-0xe869258],dl
  43e8d5:	xor    al,0x3a
  43e8d7:	sub    eax,0x97249861
  43e8dc:	push   ds
  43e8dd:	mov    ebp,0xf27e06d8
  43e8e2:	aas    
  43e8e3:	sbb    eax,0xdbb3f72
  43e8e8:	add    BYTE PTR [edx],0x7f
  43e8eb:	push   esi
  43e8ec:	test   eax,0xfdd68258
  43e8f1:	xor    eax,0x309770
  43e8f6:	iret   
  43e8f7:	bnd jbe 0x43e881
  43e8fa:	loope  0x43e8a9
  43e8fc:	and    eax,0x73ee0048
  43e901:	popf   
  43e902:	(bad)
  43e905:	dec    esp
  43e906:	mov    ds:0x4305f978,al
  43e90b:	movups xmm3,xmm3
  43e90e:	xchg   esp,eax
  43e90f:	loopne 0x43e903
  43e911:	sub    al,0xd7
  43e913:	outs   dx,BYTE PTR ds:[esi]
  43e914:	cdq    
  43e915:	dec    edx
  43e916:	adc    bl,BYTE PTR [eax-0x68]
  43e919:	pop    ecx
  43e91a:	and    DWORD PTR [edi+0x2ab9f66e],ebp
  43e920:	loop   0x43e919
  43e922:	ss (bad) 
  43e924:	inc    esi
  43e925:	and    dl,BYTE PTR [ebx+0x65fdd763]
  43e92b:	ins    BYTE PTR es:[edi],dx
  43e92c:	mov    bl,ah
  43e92e:	daa    
  43e92f:	pusha  
  43e930:	inc    ebp
  43e931:	retf   
  43e932:	int3   
  43e933:	loope  0x43e8bc
  43e935:	jmp    0x43e988
  43e937:	movsx  eax,BYTE PTR [edi]
  43e93a:	mov    cl,BYTE PTR [eax+ecx*4+0x5e1fff4a]
  43e941:	pop    edx
  43e942:	ret    
  43e943:	rol    DWORD PTR [edi-0x3435ae15],0x2c
  43e94a:	leave  
  43e94b:	lock xchg DWORD PTR [esi+0x30],ebp
  43e94f:	pop    ds
  43e950:	jmp    0x43e95d
  43e952:	mov    eax,edx
  43e954:	adc    al,0x85
  43e956:	inc    esi
  43e957:	mov    WORD PTR [ecx-0xcf003be],cs
  43e95d:	pop    ds
  43e95e:	mov    ebp,DWORD PTR [edx-0x80]
  43e961:	cmp    BYTE PTR [ebx+0x0],ch
  43e964:	mov    al,ds:0xcf3f7ffb
  43e969:	in     al,dx
  43e96a:	std    
  43e96b:	jmp    0xd5f9:0x8b59d42d
  43e972:	mov    esp,0xeb8761cc
  43e977:	xor    eax,0x1c
  43e97a:	test   DWORD PTR [ebp-0x74],eax
  43e97d:	mov    DWORD PTR [edx-0x20],eax
  43e980:	pop    ds
  43e981:	(bad)  
  43e982:	fisttp WORD PTR [ebx+0x50fc6041]
  43e988:	mov    al,ds:0xfe45289
  43e98d:	mov    esi,0xf85c8be3
  43e992:	cld    
  43e993:	dec    esp
  43e994:	pushf  
  43e995:	mov    DWORD PTR [edx-0x8],ecx
  43e998:	bswap  esi
  43e99a:	test   DWORD PTR [ebx+0x44fd1c56],0xe842899c
  43e9a4:	pop    ds
  43e9a5:	(bad)  
  43e9a6:	test   DWORD PTR [ebx+0x54fd2045],0xf052898c
  43e9b0:	pop    ds
  43e9b1:	mov    ebp,0x14dc8bf7
  43e9b6:	std    
  43e9b7:	dec    esp
  43e9b8:	mov    WORD PTR [ecx-0x42ac03b6],cs
  43e9be:	repz add BYTE PTR [eax+eax*1-0x78621500],dl
  43e9c6:	push   edx
  43e9c7:	hlt    
  43e9c8:	add    BYTE PTR [edi],dl
  43e9ca:	dec    BYTE PTR ds:[eax+0x45846cc1]
  43e9d1:	dec    esp
  43e9d2:	xchg   DWORD PTR [edx-0xc],ecx
  43e9d5:	(bad)
  43e9d9:	int3   
  43e9da:	xchg   DWORD PTR [edx-0x10],edx
  43e9dd:	paddd  mm7,mm4
  43e9e0:	inc    esp
  43e9e1:	pushf  
  43e9e2:	mov    DWORD PTR [edx-0x24],eax
  43e9e5:	mov    esi,0x97ac6802
  43e9ea:	sar    bh,0x8a
  43e9ed:	leave  
  43e9ee:	push   esp
  43e9ef:	dec    esi
  43e9f0:	call   0x43eb59
  43e9f5:	pop    ss
  43e9f6:	cmp    al,0xb
  43e9f8:	test   esp,edx
  43e9fa:	in     al,dx
  43e9fb:	adc    al,0x8b
  43e9fd:	popa   
  43e9fe:	ins    BYTE PTR es:[edi],dx
  43e9ff:	test   BYTE PTR [ebp-0x4],al
  43ea02:	add    dh,BYTE PTR [ecx+0x4a89440c]
  43ea08:	in     al,dx
  43ea09:	bswap  ebp
  43ea0b:	jmp    0x43e998
  43ea0d:	push   ecx
  43ea0e:	je     0x43e994
  43ea10:	add    al,0x24
  43ea12:	inc    DWORD PTR [edx+0x8]
  43ea15:	mov    edi,0xc44d8504
  43ea1a:	jle    0x43e9da
  43ea1c:	add    al,0xd
  43ea1e:	(bad)
  43ea21:	clc    
  43ea22:	ror    BYTE PTR cs:[ebx-0x33432b4f],0xd0
  43ea2a:	inc    ebx
  43ea2b:	retf   
  43ea2c:	int3   
  43ea2d:	add    al,cl
  43ea2f:	inc    ebx
  43ea30:	retf   
  43ea31:	int3   
  43ea32:	pusha  
  43ea33:	inc    ebp
  43ea34:	retf   
  43ea35:	int3   
  43ea36:	loope  0x43e9bd
  43ea38:	jmp    0x43e9bd
  43ea3a:	jo     0x43ea55
  43ea3c:	call   0xf8b66546
  43ea41:	mov    ecx,ebx
  43ea43:	push   0xd17c4584
  43ea48:	out    0x29,eax
  43ea4a:	arpl   WORD PTR [edx-0x8],si
  43ea4d:	adc    DWORD PTR [eax-0x3],0xffffff9c
  43ea51:	hlt    
  43ea52:	addr16 mov esi,0xfe0867ff
  43ea58:	aas    
  43ea59:	add    BYTE PTR [edi],cl
  43ea5b:	(bad)  
  43ea5c:	out    0x51,eax
  43ea5e:	cmp    ecx,DWORD PTR [esp+esi*8]
  43ea61:	rcl    edi,cl
  43ea63:	add    BYTE PTR [ebp-0x41b808],bl
  43ea69:	imul   edx,DWORD PTR [esi+eiz*8-0x1b79801],0xc13003f
  43ea74:	clc    
  43ea75:	rcl    DWORD PTR [edi+0x0],cl
  43ea78:	xchg   DWORD PTR [ebp-0x14],eax
  43ea7b:	cmp    DWORD PTR [edx-0x4],eax
  43ea7e:	xchg   esp,eax
  43ea7f:	add    BYTE PTR [eax],al
  43ea81:	add    bh,bh
  43ea83:	pop    es
  43ea84:	test   DWORD PTR [ebp-0x18],edx
  43ea87:	jge    0x43ea46
  43ea89:	add    DWORD PTR ds:0x5983fbcc,ecx
  43ea8f:	je     0x43ea98
  43ea91:	jae    0x43ea93
  43ea93:	jne    0x43ea1a
  43ea95:	inc    edx
  43ea96:	cld    
  43ea97:	pop    ds
  43ea98:	add    eax,0xc0978c83
  43ea9d:	call   DWORD PTR [eax+0xf]
  43eaa0:	int3   
  43eaa1:	out    0x52,eax
  43eaa3:	mov    bl,0xb
  43eaa5:	hlt    
  43eaa6:	rcl    DWORD PTR [edi+0x0],cl
  43eaa9:	test   DWORD PTR [ebp-0x60],ecx
  43eaac:	xchg   DWORD PTR [ebx],eax
  43eaae:	lea    esp,[eax+0x7f003c4d]
  43eab4:	push   eax
  43eab5:	test   ch,ah
  43eab7:	jmp    0x5110b5f9
  43eabc:	inc    esp
  43eabd:	retf   
  43eabe:	int3   
  43eabf:	dec    eax
  43eac0:	inc    esp
  43eac1:	retf   
  43eac2:	int3   
  43eac3:	pusha  
  43eac4:	inc    esp
  43eac5:	retf   
  43eac6:	int3   
  43eac7:	rol    DWORD PTR [ebp+0x4cc4a1eb],0x3c
  43eace:	add    BYTE PTR [edx+0x1f303f85],bl
  43ead4:	ret    
  43ead5:	pop    es
  43ead6:	ds sbb eax,0x575d07c8
  43eadc:	inc    esp
  43eadd:	retf   
  43eade:	int3   
  43eadf:	dec    eax
  43eae0:	inc    esp
  43eae1:	retf   
  43eae2:	int3   
  43eae3:	pusha  
  43eae4:	inc    esp
  43eae5:	retf   
  43eae6:	int3   
  43eae7:	rol    DWORD PTR [ebp+0x4d98beb],0x50
  43eaee:	mov    ecx,ecx
  43eaf0:	or     BYTE PTR [edi-0x1],cl
  43eaf3:	test   eax,0x43cc6c
  43eaf8:	xchg   esp,eax
  43eaf9:	sar    DWORD PTR [esp+ecx*8-0x3334bc30],cl
  43eb00:	enter  0xcb43,0xcc
  43eb04:	loopne 0x43eb49
  43eb06:	retf   
  43eb07:	int3   
  43eb08:	inc    ecx
  43eb09:	test   ebx,ebp
  43eb0b:	xor    eax,0x7
  43eb0e:	data16 add BYTE PTR [esi+0x0],ch
  43eb12:	push   0xffc097dc
  43eb17:	(bad)  
  43eb18:	mov    eax,ds:0x9443cc78
  43eb1d:	xchg   DWORD PTR [edx-0x8],eax
  43eb20:	sub    al,0x68
  43eb22:	cld    
  43eb23:	aas    
  43eb24:	xchg   esp,eax
  43eb25:	test   DWORD PTR [edx-0x8],eax
  43eb28:	inc    esp
  43eb29:	push   0x70a3ffb5
  43eb2e:	jl     0x43eaf4
  43eb30:	mov    WORD PTR [edi-0x41e003be],es
  43eb36:	sqrtps xmm3,XMMWORD PTR [edi]
  43eb39:	(bad)  
  43eb3a:	or     edx,DWORD PTR [edx+0xf]
  43eb3d:	mov    BYTE PTR [edi],0x50
  43eb40:	jnp    0x43eb18
  43eb42:	sti    
  43eb43:	mov    edi,DWORD PTR [ecx-0x32]
  43eb46:	mov    esp,0xeb7bc1cc
  43eb4b:	push   ecx
  43eb4c:	pop    ebx
  43eb4d:	(bad)  
  43eb4e:	sti    
  43eb4f:	add    BYTE PTR [eax+eax*1+0x7b9deb00],dl
  43eb56:	inc    edx
  43eb57:	cld    
  43eb58:	pop    ss
  43eb59:	inc    ecx
  43eb5a:	dec    BYTE PTR [eax-0x7b932700]
  43eb60:	dec    ebp
  43eb61:	cmp    BYTE PTR [ebx+ecx*2],ch
  43eb64:	adc    BYTE PTR [edi-0x63aa7af1],ah
  43eb6a:	add    edx,DWORD PTR [ebx-0x4]
  43eb6d:	xchg   ebx,eax
  43eb6e:	mov    dh,0xfd
  43eb70:	mov    cl,cl
  43eb72:	cld    
  43eb73:	cld    
  43eb74:	dec    esp
  43eb75:	adc    BYTE PTR [eax],al
  43eb77:	mov    dl,0x11
  43eb79:	iret   
  43eb7a:	inc    edx
  43eb7b:	jae    0x43eb84
  43eb7d:	cmp    al,0x2
  43eb7f:	add    BYTE PTR [eax],al
  43eb81:	xchg   esp,eax
  43eb82:	pop    ebx
  43eb83:	add    ebp,ebx
  43eb85:	les    esi,FWORD PTR [ebx]
  43eb87:	ror    BYTE PTR [ebx-0x3343320f],0xd0
  43eb8e:	cmp    al,0xcb
  43eb90:	int3   
  43eb91:	enter  0xcb3c,0xcc
  43eb95:	loopne 0x43ebd3
  43eb97:	retf   
  43eb98:	int3   
  43eb99:	popa   
  43eb9a:	jnp    0x43eb87
  43eb9c:	mov    ecx,0x9c
  43eba1:	xor    BYTE PTR [ebx+0x6],bh
  43eba4:	mov    DWORD PTR [ecx-0x6bbc2c30],esp
  43ebaa:	int    0xbc
  43ebac:	int3   
  43ebad:	sar    BYTE PTR [ebx+ecx*8],1
  43ebb0:	int3   
  43ebb1:	enter  0xcb3c,0xcc
  43ebb5:	pusha  
  43ebb6:	cmp    al,0xcb
  43ebb8:	int3   
  43ebb9:	loope  0x43ec36
  43ebbb:	jmp    0x43eb40
  43ebbd:	jo     0x43ebcf
  43ebbf:	test   DWORD PTR [ebp+0x0],eax
  43ebc2:	mov    WORD PTR [ebx-0x6bfb89],es
  43ebc8:	or     DWORD PTR [eax-0x74ffff6c],0xffffffd1
  43ebcf:	clc    
  43ebd0:	test   BYTE PTR [ecx-0x70],dl
  43ebd3:	and    ebp,0x8
  43ebd6:	gs pop edx
  43ebd8:	xchg   BYTE PTR [ebp+0x40],dl
  43ebdb:	jnp    0x43ec1f
  43ebdd:	or     BYTE PTR [edi],dl
  43ebdf:	inc    eax
  43ebe0:	pop    es
  43ebe1:	mov    ecx,edx
  43ebe3:	jo     0x43eba5
  43ebe5:	inc    ebp
  43ebe6:	xor    BYTE PTR [eax],al
  43ebe8:	add    BYTE PTR [eax],al
  43ebea:	xchg   esp,eax
  43ebeb:	pop    ebx
  43ebec:	push   es
  43ebed:	mov    edx,ecx
  43ebef:	ins    BYTE PTR es:[edi],dx
  43ebf0:	jl     0x43ebb3
  43ebf2:	xchg   ebp,eax
  43ebf3:	jns    0x43ec3f
  43ebf5:	cld    
  43ebf6:	pop    ds
  43ebf7:	aad    0xfb
  43ebf9:	cmp    esp,DWORD PTR [ecx+0x74]
  43ebfc:	ins    BYTE PTR es:[edi],dx
  43ebfd:	inc    esi
  43ebfe:	pextrw edi,mm3,0x8b
  43ec02:	dec    ecx
  43ec03:	jo     0x43ec0d
  43ec05:	mov    bh,0x88
  43ec07:	sar    DWORD PTR [esi-0xa7c6706],0x3
  43ec0e:	imul   esi,DWORD PTR [edx],0x7ad84585
  43ec14:	dec    edx
  43ec15:	lock mov ds:0x154113b7,eax
  43ec1b:	(bad)  
  43ec1c:	clc    
  43ec1d:	sete   BYTE PTR [eax]
  43ec20:	xchg   DWORD PTR [ebp-0x44],edx
  43ec23:	jp     0x43ec67
  43ec25:	or     BYTE PTR [eax],al
  43ec27:	pop    ds
  43ec28:	mov    ebp,0x7b9c030b
  43ec2d:	push   edx
  43ec2e:	clc    
  43ec2f:	(bad)  
  43ec31:	lsl    edx,WORD PTR [ecx+0x10]
  43ec35:	test   DWORD PTR [ebp-0x64],ecx
  43ec38:	jns    0x43ec8c
  43ec3a:	or     al,0x97
  43ec3c:	jne    0x3bc688f
  43ec42:	or     ch,BYTE PTR [edi-0x68]
  43ec45:	test   BYTE PTR [ebp-0x64],dl
  43ec48:	jns    0x43ec8c
  43ec4a:	or     BYTE PTR [edi-0x2676fc3e],dl
  43ec50:	clc    
  43ec51:	out    0x6b,al
  43ec53:	pop    ebx
  43ec54:	outs   dx,BYTE PTR ds:[esi]
  43ec55:	clc    
  43ec56:	mov    edi,DWORD PTR [ecx]
  43ec58:	int3   
  43ec59:	mov    esp,0xeb79e1cc
  43ec5e:	xor    DWORD PTR [eax],0x25
  43ec61:	test   DWORD PTR [ebp-0x74],eax
  43ec64:	ja     0x43eca8
  43ec66:	in     al,0x1f
  43ec68:	mov    esp,0x64c18be3
  43ec6d:	cld    
  43ec6e:	push   eax
  43ec6f:	pusha  
  43ec70:	ja     0x43ecc4
  43ec72:	call   0x8c2bb086
  43ec77:	sbb    al,0x81
  43ec79:	(bad)  
  43ec7a:	call   DWORD PTR [edi+esi*2-0x13e80fb6]
  43ec81:	out    dx,eax
  43ec82:	add    BYTE PTR [ebx-0x6bff0b7c],cl
  43ec88:	add    BYTE PTR [ebp+0x19c0055],al
  43ec8e:	push   ebx
  43ec8f:	lock or eax,0x518bdfd4
  43ec95:	pusha  
  43ec96:	jl     0x43ed10
  43ec98:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43ec99:	add    BYTE PTR [ecx],cl
  43ec9b:	test   BYTE PTR [ecx+0x2e000000],dh
  43eca1:	add    BYTE PTR [esi+0x0],ah
  43eca4:	bsf    ebx,edi
  43eca7:	mov    ecx,DWORD PTR [ecx-0x8]
  43ecaa:	cld    
  43ecab:	push   eax
  43ecac:	cwde   
  43ecad:	sar    al,cl
  43ecaf:	adc    eax,0x3c519c
  43ecb4:	or     eax,0xd98bfbc4
  43ecb9:	pusha  
  43ecba:	jl     0x43ecf4
  43ecbc:	xchg   esp,eax
  43ecbd:	hlt    
  43ecbe:	push   ss
  43ecbf:	mov    edx,ecx
  43ecc1:	pusha  
  43ecc2:	test   BYTE PTR [ebp-0x74],dl
  43ecc5:	add    DWORD PTR [edi],ecx
  43ecc7:	mov    ecx,ecx
  43ecc9:	je     0x43ec4f
  43eccb:	inc    ebp
  43eccc:	je     0x43ed47
  43ecce:	dec    edx
  43eccf:	or     BYTE PTR [edi-0x3676f048],dl
  43ecd5:	pop    esp
  43ecd6:	in     al,0x17
  43ecd8:	pop    ds
  43ecd9:	rcr    edi,cl
  43ecdb:	mov    edx,ecx
  43ecdd:	clc    
  43ecde:	cld    
  43ecdf:	inc    ecx
  43ece0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43ece1:	ja     0x43ed25
  43ece3:	hlt    
  43ece4:	btc    edi,ebx
  43ece7:	mov    ecx,ecx
  43ece9:	clc    
  43ecea:	cld    
  43eceb:	adc    BYTE PTR ds:0xc7ebd3,bl
  43ecf1:	fldcw  WORD PTR [eax-0x1]
  43ecf4:	call   DWORD PTR [eax+eax*1-0x7f0bba7b]
  43ecfb:	ja     0x43ed0d
  43ecfd:	xchg   esp,eax
  43ecfe:	hlt    
  43ecff:	or     BYTE PTR [ebx+0x397c6051],cl
  43ed05:	xchg   esp,eax
  43ed06:	hlt    
  43ed07:	add    bh,al
  43ed09:	pop    ecx
  43ed0a:	push   0x94fffe
  43ed0f:	test   DWORD PTR [ebp-0x18],edx
  43ed12:	xor    BYTE PTR ds:0x84df6000,0x45
  43ed19:	enter  0x778,0x81
  43ed1d:	mov    ch,0xff
  43ed1f:	(bad)  
  43ed20:	call   DWORD PTR [esp+esi*8]
  43ed23:	sbb    ecx,DWORD PTR [ebx+0x2847461]
  43ed29:	jns    0x43ed98
  43ed2b:	clc    
  43ed2c:	jmp    FWORD PTR [ebx]
  43ed2e:	rol    BYTE PTR [ebp+ecx*2-0x4a183160],1
  43ed35:	cdq    
  43ed36:	ins    BYTE PTR es:[edi],dx
  43ed37:	clc    
  43ed38:	sbb    DWORD PTR [eax-0x7],0xffffff86
  43ed3c:	inc    ebp
  43ed3d:	push   0xe98b1b58
  43ed42:	je     0x43ecc8
  43ed44:	add    cl,BYTE PTR [edi]
  43ed46:	mov    esi,0xf8c88d07
  43ed4b:	std    
  43ed4c:	push   ecx
  43ed4d:	pop    ds
  43ed4e:	(bad)  
  43ed4f:	sti    
  43ed50:	push   eax
  43ed51:	ins    BYTE PTR es:[edi],dx
  43ed52:	xchg   esp,eax
  43ed53:	cli    
  43ed54:	inc    DWORD PTR [eax]
  43ed56:	pop    ebx
  43ed57:	add    bl,0x8
  43ed5a:	sbb    eax,0xd98bdbc6
  43ed5f:	pop    esp
  43ed60:	test   BYTE PTR [ebp+0x60],dl
  43ed63:	jp     0x43ed73
  43ed65:	mov    edx,ecx
  43ed67:	je     0x43ede5
  43ed69:	rcr    BYTE PTR [eax+0x1ff44279],0xbe
  43ed70:	jmp    0x43ecf5
  43ed72:	push   ebp
  43ed73:	add    eax,0x58284d87
  43ed78:	nop
  43ed79:	mov    ebp,DWORD PTR [ecx+0x60]
  43ed7c:	jl     0x43ed40
  43ed7e:	mov    al,ds:0xede05279
  43ed83:	cli    
  43ed84:	clc    
  43ed85:	(bad)  
  43ed86:	sti    
  43ed87:	ja     0x43ed6b
  43ed89:	pop    ebp
  43ed8a:	xlat   BYTE PTR ds:[ebx]
  43ed8b:	cmp    al,0xcb
  43ed8d:	int3   
  43ed8e:	inc    ecx
  43ed8f:	ja     0x43ed7c
  43ed91:	xor    eax,0xfffffff8
  43ed94:	addr16 lock xchg edi,eax
  43ed97:	sar    bh,0xfe
  43ed9a:	test   eax,0x9443d400
  43ed9f:	jns    0x43ede3
  43eda1:	clc    
  43eda2:	sub    al,0x6c
  43eda4:	cld    
  43eda5:	aas    
  43eda6:	xchg   esp,eax
  43eda7:	ja     0x43edeb
  43eda9:	clc    
  43edaa:	inc    esp
  43edab:	pop    eax
  43edac:	cmp    ebp,edi
  43edae:	stos   DWORD PTR es:[edi],eax
  43edaf:	imul   edi,DWORD PTR [esp+eax*8-0x74],0x79
  43edb4:	inc    edx
  43edb5:	cld    
  43edb6:	movsx  ecx,BYTE PTR [edi]
  43edb9:	push   ecx
  43edba:	add    BYTE PTR [edi],bl
  43edbc:	aad    0xb
  43edbe:	push   edx
  43edbf:	pop    ds
  43edc0:	lds    eax,FWORD PTR [edi]
  43edc2:	push   eax
  43edc3:	adc    ebp,0xfffffffb
  43edc6:	mov    esi,DWORD PTR [ecx-0x33]
  43edc9:	mov    esp,0xcb3c60cc
  43edce:	int3   
  43edcf:	shl    DWORD PTR [edi-0x15],0xa1
  43edd3:	rcl    BYTE PTR [esp+edi*1+0x0],0x52
  43edd8:	add    BYTE PTR [eax-0x75],ch
  43eddb:	test   eax,0x9443d3d4
  43ede0:	jns    0x43ee31
  43ede2:	add    DWORD PTR [esi],eax
  43ede4:	aas    
  43ede5:	xchg   DWORD PTR [eax-0x6f],edx
  43ede8:	int    0xbc
  43edea:	int3   
  43edeb:	pusha  
  43edec:	cmp    al,0xcb
  43edee:	int3   
  43edef:	shl    DWORD PTR [edi-0x15],0x83
  43edf3:	xor    ah,bh
  43edf5:	sahf   
  43edf6:	push   eax
  43edf7:	inc    eax
  43edf8:	mov    edi,0x2ee68aff
  43edfd:	(bad)  
  43edfe:	ds pop ds
  43ee00:	shr    BYTE PTR [edi],0x8b
  43ee03:	out    0x76,al
  43ee05:	int    0x3e
  43ee07:	(bad)  
  43ee09:	or     ecx,DWORD PTR [ebx-0xbb5873a]
  43ee0f:	pop    ds
  43ee10:	(bad)
  43ee13:	dec    esp
  43ee14:	cld    
  43ee15:	xchg   BYTE PTR [ebp-0x24],cl
  43ee18:	jbe    0x43ee6c
  43ee1a:	clc    
  43ee1b:	sbb    eax,0xb8fbd5
  43ee20:	xchg   ebp,eax
  43ee21:	add    BYTE PTR [eax],al
  43ee23:	add    BYTE PTR [ecx],bl
  43ee25:	inc    eax
  43ee26:	jae    0x43ee6c
  43ee28:	pop    ss
  43ee29:	in     eax,dx
  43ee2a:	test   DWORD PTR [eax],0xc02d0429
  43ee30:	mov    edi,0x9c4d852b
  43ee35:	jbe    0x43ee85
  43ee37:	sbb    BYTE PTR [edi-0x2b],bl
  43ee3a:	pop    es
  43ee3b:	jne    0x43edea
  43ee3d:	jne    0x43ee81
  43ee3f:	clc    
  43ee40:	pop    ds
  43ee41:	mov    esp,0xccc890b
  43ee46:	test   DWORD PTR [ebp+0x7c],edx
  43ee49:	jbe    0x43ee8d
  43ee4b:	adc    BYTE PTR ds:0x95b817bf,bl
  43ee51:	add    BYTE PTR [eax],al
  43ee53:	add    BYTE PTR [edi+0x9],ch
  43ee56:	test   DWORD PTR [ebp+0x5c],ecx
  43ee59:	jbe    0x43ee69
  43ee5b:	mov    ecx,ebp
  43ee5d:	push   0x264c4584
  43ee62:	inc    ebx
  43ee63:	cld    
  43ee64:	leave  
  43ee65:	add    al,0x2d
  43ee67:	shr    BYTE PTR [edi],0x5
  43ee6a:	in     eax,0xb3
  43ee6c:	addr16 inc eax
  43ee6e:	test   ch,ah
  43ee70:	leave  
  43ee71:	cmp    eax,0x3d50cccb
  43ee76:	retf   
  43ee77:	int3   
  43ee78:	dec    eax
  43ee79:	cmp    eax,0x3ce0cccb
  43ee7e:	retf   
  43ee7f:	int3   
  43ee80:	popa   
  43ee81:	jne    0x43ee6e
  43ee83:	add    DWORD PTR [eax],0xfffffff0
  43ee86:	or     cl,al
  43ee88:	inc    ebp
  43ee89:	cld    
  43ee8a:	add    BYTE PTR [eax],dh
  43ee8c:	add    BYTE PTR [eax+ebx*8+0x540403],dl
  43ee93:	lahf   
  43ee94:	cmp    al,0xc8
  43ee96:	mov    ebp,0xcdec4fff
  43ee9b:	sti    
  43ee9c:	call   ebx
  43ee9e:	jge    0x43ee63
  43eea0:	or     BYTE PTR ds:0x546af3c4,bl
  43eea6:	jne    0x43eef2
  43eea8:	clc    
  43eea9:	gs jne 0x43eebe
  43eeac:	sbb    al,0xc8
  43eeae:	mov    ebp,0xd0568aff
  43eeb3:	dec    edi
  43eeb4:	push   0xffffff94
  43eeb6:	imul   edx,DWORD PTR [edx-0xc],0x43d414f7
  43eebd:	xchg   esp,eax
  43eebe:	jge    0x43eefa
  43eec0:	adc    al,0x60
  43eec2:	mov    ebp,0x209ffff
  43eec7:	mov    eax,0x9402
  43eecc:	jmp    0x43eecc
  43eece:	jne    0x43eeda
  43eed0:	add    BYTE PTR [edi-0x2e770040],dl
  43eed6:	jo     0x43ef3f
  43eed8:	add    BYTE PTR [esi-0x3],al
  43eedb:	jmp    DWORD PTR [edi-0x6c]
  43eede:	std    
  43eedf:	aas    
  43eee0:	add    BYTE PTR [edi],bl
  43eee2:	adc    edx,DWORD PTR [esp+edx*8]
  43eee5:	xlat   BYTE PTR ds:[ebx]
  43eee6:	add    BYTE PTR [edi-0x3e],bh
  43eee9:	add    BYTE PTR [ebp+edi*8+0x58c6ffff],dl
  43eef0:	cdq    
  43eef1:	(bad)  
  43eef2:	sub    ebp,DWORD PTR [ecx+0x7c]
  43eef5:	les    edx,FWORD PTR [eax-0x2bfd0058]
  43eefb:	add    BYTE PTR [ebx],ch
  43eefd:	add    BYTE PTR [edi-0x66750000],dl
  43ef03:	adc    al,0xd4
  43ef05:	inc    ebx
  43ef06:	xchg   esp,eax
  43ef07:	adc    eax,0xc48989c8
  43ef0c:	rol    DWORD PTR [ebx-0x6c],cl
  43ef0f:	jne    0x43ef23
  43ef11:	inc    esp
  43ef12:	sar    BYTE PTR [edi+edi*8-0x2bebcaaf],0x43
  43ef1a:	xchg   esp,eax
  43ef1b:	rol    BYTE PTR [ebp+ecx*2-0x6218313c],1
  43ef22:	enter  0xf868,0x83
  43ef26:	fdivr  st,st(3)
  43ef28:	test   BYTE PTR ds:0x3c54a0,dl
  43ef2e:	xchg   edi,eax
  43ef2f:	rol    DWORD PTR [edi],cl
  43ef31:	mov    DWORD PTR [ecx+0x58],eax
  43ef34:	test   BYTE PTR [ebp-0x54],dl
  43ef37:	push   0xcab18bdd
  43ef3c:	mov    esp,0xcb3560cc
  43ef41:	int3   
  43ef42:	loope  0x43efbf
  43ef44:	jmp    0x43eed1
  43ef46:	fprem  
  43ef48:	xor    al,0x45
  43ef4a:	mov    bl,dh
  43ef4c:	add    BYTE PTR [ebx-0x1b072700],cl
  43ef52:	add    eax,0x4585047f
  43ef57:	nop
  43ef58:	lds    edi,FWORD PTR [esp+ecx*8-0x3334cab8]
  43ef5f:	pusha  
  43ef60:	xor    eax,0x7be1cccb
  43ef65:	jmp    0x43eeea
  43ef67:	xor    BYTE PTR ds:0x13845c1,dl
  43ef6d:	add    BYTE PTR [esp+edx*4],al
  43ef70:	jnp    0x43efb4
  43ef72:	or     BYTE PTR ds:0xd18bd7be,bl
  43ef78:	dec    eax
  43ef79:	test   BYTE PTR [ebp-0x74],dl
  43ef7c:	add    ecx,DWORD PTR [edi+0x3c]
  43ef7f:	sbb    eax,0x518bdfce
  43ef84:	pusha  
  43ef85:	or     BYTE PTR [edi+0x55850c4c],dh
  43ef8b:	hlt    
  43ef8c:	jne    0x43efd1
  43ef8e:	or     cl,BYTE PTR [ecx+edi*2+0xc7ce842]
  43ef95:	add    al,0x40
  43ef97:	xchg   esp,eax
  43ef98:	jnp    0x43efa4
  43ef9a:	cmp    al,0xc0
  43ef9c:	ret    
  43ef9d:	call   DWORD PTR [eax-0x44]
  43efa0:	mov    bh,0xf4
  43efa2:	dec    ebx
  43efa4:	add    ebx,0x8
  43efa7:	or     eax,0x546aefbe
  43efac:	fdivr  st,st(7)
  43efae:	das    
  43efaf:	xchg   esp,eax
  43efb0:	add    BYTE PTR [eax+0x0],ch
  43efb3:	add    BYTE PTR [esp+edi*8+0x679469ff],dl
  43efba:	push   edx
  43efbb:	lock or eax,0xe98be3be
  43efc1:	pusha  
  43efc2:	test   BYTE PTR [edx-0x20],al
  43efc5:	rol    BYTE PTR [ebp+ecx*2+0x5584d18c],1
  43efcc:	jo     0x43efa0
  43efce:	out    0xc1,eax
  43efd0:	jno    0x43f039
  43efd2:	clc    
  43efd3:	adc    DWORD PTR [eax-0xc],0xffffffc0
  43efd7:	inc    ebp
  43efd8:	push   0x94000000
  43efdd:	pop    ebx
  43efde:	push   es
  43efdf:	mov    ebx,ecx
  43efe1:	ins    BYTE PTR es:[edi],dx
  43efe2:	jl     0x43efa4
  43efe4:	xchg   ebp,eax
  43efe5:	jns    0x43f029
  43efe7:	hlt    
  43efe8:	(bad)  
  43efea:	fisttp WORD PTR [edi]
  43efec:	add    edx,ecx
  43efee:	add    DWORD PTR [ecx],edi
  43eff0:	leave  
  43eff1:	ins    BYTE PTR es:[edi],dx
  43eff2:	ins    BYTE PTR es:[edi],dx
  43eff3:	pop    ecx
  43eff4:	pop    ds
  43eff5:	mov    ebp,0xc9c83e7
  43effa:	add    BYTE PTR [ecx+edx*8+0x7b],dh
  43effe:	dec    edx
  43efff:	call   0x53d91b
  43f004:	and    BYTE PTR [eax*4+0x3d7aec55],0x10
  43f00c:	(bad)  
  43f00e:	fisttp WORD PTR [ebx+0x448b2445]
  43f014:	test   BYTE PTR [edi-0x7c],ah
  43f017:	dec    ebp
  43f018:	add    ah,dh
  43f01a:	xor    cl,dh
  43f01c:	mul    DWORD PTR [ebp+0x24]
  43f01f:	test   DWORD PTR [ebp-0x4c],edx
  43f022:	imul   BYTE PTR [eax-0x7b2f77be]
  43f028:	inc    ebp
  43f029:	lods   al,BYTE PTR ds:[esi]
  43f02a:	jp     0x43f076
  43f02c:	or     BYTE PTR [edi+0x1f5113b8],dl
  43f032:	int    0xe7
  43f034:	mov    edx,DWORD PTR [ecx+0x5c]
  43f037:	cld    
  43f038:	inc    ecx
  43f039:	nop
  43f03a:	shl    bh,1
  43f03c:	push   ebp
  43f03d:	cdq    
  43f03e:	data16 clc 
  43f040:	sbb    DWORD PTR [eax-0xb],0xffffff84
  43f044:	dec    ebp
  43f045:	jl     0x43efc9
  43f047:	mov    esi,0xe7b40d28
  43f04c:	jmp    0x43f074
  43f04e:	jp     0x43f0a2
  43f050:	in     al,0xc6
  43f052:	pop    eax
  43f053:	or     esp,edi
  43f055:	imul   esp,DWORD PTR [esi+0x7c],0xffffffc4
  43f059:	cwde   
  43f05a:	fsub   DWORD PTR [ebx]
  43f05c:	add    al,0xd4
  43f05e:	add    BYTE PTR [edi-0x3d97c4],bl
  43f064:	dec    edi
  43f065:	cmp    al,0x7a
  43f067:	cmc    
  43f068:	inc    DWORD PTR [ebx-0x7e]
  43f06b:	ret    
  43f06c:	or     BYTE PTR ds:0x7183dbbc,cl
  43f072:	sub    ah,dl
  43f074:	inc    ebx
  43f075:	xchg   esp,eax
  43f076:	add    BYTE PTR [ebx+0xa],dh
  43f079:	pmuludq mm5,QWORD PTR [edi]
  43f07c:	aam    0x0
  43f07e:	xlat   BYTE PTR ds:[ebx]
  43f07f:	add    BYTE PTR [edi-0x1],cl
  43f082:	imul   eax,DWORD PTR [esp+edi*2+0x3d],0x3c4ccc
  43f08a:	xchg   esp,eax
  43f08b:	jmp    0x43f0a8
  43f08d:	push   0x54
  43f08f:	fdivr  st,st(7)
  43f091:	das    
  43f092:	xchg   esp,eax
  43f093:	add    BYTE PTR [ebp-0x7b2d17ab],al
  43f099:	inc    ebp
  43f09a:	hlt    
  43f09b:	jns    0x43f0e4
  43f09d:	xor    al,0x45
  43f09f:	gs push edx
  43f0a1:	lock test DWORD PTR [esp+edx*8],0x12599443
  43f0a9:	push   0x54
  43f0ab:	fdivr  st,st(7)
  43f0ad:	das    
  43f0ae:	xchg   esp,eax
  43f0af:	add    BYTE PTR [ebp+0x65d2b055],al
  43f0b5:	add    BYTE PTR [ebx-0x775c1035],ch
  43f0bb:	dec    esp
  43f0bc:	cmp    al,0x0
  43f0be:	pop    ss
  43f0bf:	and    al,0x14
  43f0c1:	aam    0xd7
  43f0c3:	add    BYTE PTR [eax],al
  43f0c5:	jne    0x43f068
  43f0c7:	fidivr DWORD PTR [edi]
  43f0c9:	push   0x3094
  43f0ce:	btc    ebx,edi
  43f0d1:	push   eax
  43f0d2:	inc    BYTE PTR [eax]
  43f0d4:	stc    
  43f0d5:	push   ebp
  43f0d6:	mov    eax,fs:0xd7d413
  43f0dc:	test   DWORD PTR [ebp+0x70],ecx
  43f0df:	ja     0x43f12b
  43f0e1:	fadd   DWORD PTR [eax]
  43f0e3:	pop    ds
  43f0e4:	retf   
  43f0e5:	xlat   BYTE PTR ds:[ebx]
  43f0e6:	mov    edx,ecx
  43f0e8:	dec    eax
  43f0e9:	cld    
  43f0ea:	inc    ecx
  43f0eb:	xor    BYTE PTR [edi+0x42],0xe0
  43f0ef:	btr    edi,ebx
  43f0f2:	mov    eax,ebp
  43f0f4:	ror    BYTE PTR [ebp-0x75],1
  43f0f7:	rcr    DWORD PTR [edi+ecx*2-0x75],1
  43f0fb:	xchg   ecx,eax
  43f0fc:	or     al,0xd4
  43f0fe:	inc    ebx
  43f0ff:	xchg   esp,eax
  43f100:	iret   
  43f101:	out    0x91,eax
  43f103:	adc    BYTE PTR [ebp-0x8],ah
  43f106:	adc    eax,0xfffffff3
  43f109:	test   BYTE PTR [ebp-0xc],dl
  43f10c:	xor    BYTE PTR [ebp+0x94a4],0x0
  43f113:	push   0xf4458527
  43f118:	js     0x43f164
  43f11a:	fcom   DWORD PTR [edi-0x6bff6088]
  43f120:	add    BYTE PTR [edi+0x5278c04d],al
  43f126:	loopne 0x43f11d
  43f128:	or     edx,esp
  43f12a:	inc    ebx
  43f12b:	xchg   esp,eax
  43f12c:	sbb    DWORD PTR [esi],edi
  43f12e:	xor    al,0xf7
  43f130:	mov    ebx,0x799443d3
  43f135:	or     al,BYTE PTR [eax+eax*8-0x40]
  43f139:	call   DWORD PTR [eax+0xf]
  43f13c:	or     edx,DWORD PTR [esp+edx*8]
  43f13f:	push   edi
  43f140:	add    BYTE PTR [esi-0x75],cl
  43f143:	fst    DWORD PTR [edi+ecx*2-0x18]
  43f147:	add    BYTE PTR [eax],cl
  43f149:	addr16 clc 
  43f14b:	call   DWORD PTR [edi]
  43f14d:	cmp    eax,0x60c98b0b
  43f152:	test   BYTE PTR ds:0x3c4c88,dl
  43f158:	xchg   edi,eax
  43f159:	shl    DWORD PTR [edi],1
  43f15b:	mov    DWORD PTR [ecx-0x6bbc2c34],ecx
  43f161:	jg     0x43f19d
  43f163:	cmp    BYTE PTR [eax-0x40],ch
  43f166:	(bad)  
  43f167:	inc    ecx
  43f169:	adc    al,0x9f
  43f16b:	adc    al,0x68
  43f16d:	sar    bh,0x4f
  43f170:	psadbw mm2,QWORD PTR [ebx-0x2c]
  43f174:	xlat   BYTE PTR ds:[ebx]
  43f175:	add    BYTE PTR [edi-0x75],cl
  43f178:	xor    DWORD PTR [eax],0xce9443d4
  43f17e:	out    0x75,eax
  43f180:	sbb    BYTE PTR [eax+edi*8-0x7d],ah
  43f184:	fdiv   st,st(4)
  43f186:	sahf   
  43f187:	adc    al,0xe0
  43f189:	mov    edi,0xbbec4fff
  43f18e:	idiv   bh
  43f190:	sti    
  43f191:	jg     0x43f156
  43f193:	add    al,0xff
  43f195:	loopne 0x43f1fe
  43f197:	xor    al,0x90
  43f199:	sar    bh,0x8a
  43f19c:	xchg   ecx,eax
  43f19d:	and    al,0xd4
  43f19f:	inc    ebx
  43f1a0:	xchg   esp,eax
  43f1a1:	shl    edi,1
  43f1a3:	push   ecx
  43f1a4:	int    0x63
  43f1a6:	clc    
  43f1a7:	adc    eax,0xfffffff8
  43f1aa:	xchg   BYTE PTR [ebp+0x0],al
  43f1ad:	call   0xe0580429
  43f1b2:	mov    edi,0xbe1f51ff
  43f1b7:	fisttp WORD PTR [ebx+0x43d40c99]
  43f1bd:	xchg   esp,eax
  43f1be:	inc    DWORD PTR [edi+0x28]
  43f1c1:	inc    ebp
  43f1c2:	ja     0x43f1d6
  43f1c4:	xor    BYTE PTR [eax-0x41],ch
  43f1c7:	call   DWORD PTR [ecx+0x7c]
  43f1ca:	pop    ss
  43f1cb:	cld    
  43f1cc:	inc    DWORD PTR [ebx+0x350cc37f]
  43f1d2:	xor    ah,dl
  43f1d4:	inc    ebx
  43f1d5:	xchg   esp,eax
  43f1d6:	std    
  43f1d7:	(bad)  
  43f1d8:	rcl    DWORD PTR [edi+0x485c9d00],1
  43f1de:	mov    edi,0x68c98cff
  43f1e3:	dec    esi
  43f1e4:	push   0xffffffd4
  43f1e6:	(bad)  
  43f1e7:	add    DWORD PTR [ebx+0x43d3c4a1],ecx
  43f1ed:	xchg   esp,eax
  43f1ee:	into   
  43f1ef:	clc    
  43f1f0:	push   ebp
  43f1f1:	pusha  
  43f1f2:	pop    eax
  43f1f3:	(bad)  
  43f1f5:	xor    esp,DWORD PTR [ebx-0x49]
  43f1f8:	add    DWORD PTR [eax+eax*1-0x3ac67500],edx
  43f1ff:	mov    ebp,0xcb349404
  43f204:	int3   
  43f205:	loopne 0x43f23a
  43f207:	retf   
  43f208:	int3   
  43f209:	popa   
  43f20a:	ja     0x43f1f7
  43f20c:	mov    ebx,DWORD PTR [ecx-0x8]
  43f20f:	test   BYTE PTR [eax+0x0],al
  43f212:	clc    
  43f213:	les    edi,FWORD PTR [esp+ecx*8-0x3334cc20]
  43f21a:	inc    ecx
  43f21b:	ja     0x43f208
  43f21d:	push   ebx
  43f21e:	dec    edx
  43f21f:	retf   
  43f220:	test   BYTE PTR ds:0x3c4cb4,bh
  43f226:	pop    ds
  43f227:	add    eax,0x57d42c
  43f22c:	test   DWORD PTR ds:0x3c4c9c,esi
  43f232:	pop    ebx
  43f233:	ret    0x5d54
  43f236:	xlat   BYTE PTR ds:[ebx]
  43f237:	xor    ecx,ebx
  43f239:	int3   
  43f23a:	inc    ecx
  43f23b:	ja     0x43f228
  43f23d:	push   ecx
  43f23e:	sub    al,0xbc
  43f240:	add    eax,DWORD PTR [eax-0x6c]
  43f243:	mov    eax,ds:0xd7d43b
  43f248:	push   eax
  43f249:	call   0x3c5b86
  43f24e:	pop    ss
  43f24f:	cmp    eax,0x64d18907
  43f254:	test   BYTE PTR [ebp-0x64],cl
  43f257:	iret   
  43f258:	add    BYTE PTR gs:[edi],bl
  43f25b:	or     al,0x58
  43f25d:	aam    0xd7
  43f25f:	add    BYTE PTR [esi-0x1],cl
  43f262:	shl    DWORD PTR [esp+eax*4-0x1b],0xf1
  43f267:	cmp    eax,0x75e1cccb
  43f26c:	jmp    0x43f1f1
  43f26e:	xor    BYTE PTR ds:0x13c45c1,bl
  43f274:	add    BYTE PTR [eax],al
  43f276:	add    BYTE PTR [ecx+edi*1+0xacdc42],dl
  43f27d:	add    BYTE PTR [eax],al
  43f27f:	pop    ebx
  43f280:	mov    esp,0x9401f3
  43f285:	add    bh,al
  43f287:	pop    ecx
  43f288:	fs (bad) 
  43f28a:	call   DWORD PTR [eax+eax*1+0xf845c1]
  43f291:	add    BYTE PTR [eax],al
  43f293:	xchg   esp,eax
  43f294:	jne    0x43f2e0
  43f296:	or     BYTE PTR ds:0x57d42ff4,bl
  43f29c:	add    al,ch
  43f29e:	test   eax,0xa1f861eb
  43f2a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43f2a4:	dec    esp
  43f2a5:	cmp    al,0x0
  43f2a7:	jns    0x43f30a
  43f2a9:	clc    
  43f2aa:	add    BYTE PTR [esp+ebp*8+0x2899c70b],dl
  43f2b1:	aam    0x43
  43f2b3:	xchg   esp,eax
  43f2b4:	add    BYTE PTR [eax],al
  43f2b6:	add    BYTE PTR [ebp+edx*2+0x2891c705],dl
  43f2bd:	aam    0x43
  43f2bf:	xchg   esp,eax
  43f2c0:	(bad)  
  43f2c1:	(bad)  
  43f2c2:	call   DWORD PTR [ebp+edi*2-0x4297cfc6]
  43f2c9:	(bad)  
  43f2ca:	inc    DWORD PTR [ecx]
  43f2cc:	test   eax,0x3c4cbc05
  43f2d2:	add    BYTE PTR [eax+eax*1+0x23170000],dl
  43f2d9:	cmp    ah,dl
  43f2db:	add    bh,dl
  43f2dd:	add    BYTE PTR [eax],al
  43f2df:	jne    0x43f272
  43f2e1:	(bad)  
  43f2e2:	(bad)  
  43f2e3:	inc    BYTE PTR [ecx-0x6bbc2c00]
  43f2e9:	popf   
  43f2ea:	das    
  43f2eb:	aam    0xd7
  43f2ed:	add    BYTE PTR [ebp+0x3c4c840d],al
  43f2f3:	add    BYTE PTR ds:0x898be7b3,cl
  43f2f9:	xor    ah,dl
  43f2fb:	inc    ebx
  43f2fc:	xchg   esp,eax
  43f2fd:	jne    0x43f341
  43f2ff:	call   0x897fb19b
  43f304:	rcr    DWORD PTR [eax-0x7c],1
  43f307:	dec    ebp
  43f308:	cld    
  43f309:	jbe    0x43f315
  43f30b:	sbb    al,0xe0
  43f30d:	mov    esp,0xfc6467ff
  43f312:	aas    
  43f313:	add    bl,bh
  43f315:	or     al,BYTE PTR [eax]
  43f317:	aam    0x57
  43f319:	add    BYTE PTR [ebp-0x433fc4],bl
  43f31f:	(bad)  
  43f320:	cdq    
  43f321:	mov    ah,0xd3
  43f323:	inc    ebx
  43f324:	xchg   esp,eax
  43f325:	jmp    0x43f32a
  43f327:	inc    eax
  43f328:	xchg   esp,eax
  43f329:	fcomp  DWORD PTR [edi+0x4]
  43f32c:	push   esp
  43f32d:	add    BYTE PTR [ebp+0x3c4c8015],al
  43f333:	add    BYTE PTR [esi+0x58],ah
  43f336:	mov    ebp,0x7c60b3f7
  43f33b:	les    ebx,FWORD PTR [ebp+ebx*4+0x5700d447]
  43f342:	add    cl,bh
  43f344:	adc    eax,0x3c4c4c
  43f349:	aaa    
  43f34a:	mov    ecx,0xa19443d3
  43f34f:	dec    ebx
  43f350:	aam    0xd7
  43f352:	add    BYTE PTR [eax-0x18],dl
  43f355:	inc    eax
  43f356:	pop    edi
  43f357:	clc    
  43f358:	call   DWORD PTR [edi]
  43f35a:	inc    ebp
  43f35b:	add    ecx,DWORD PTR [ecx+0x4d8450d1]
  43f361:	fs mov dl,0xe7
  43f364:	aad    0x5a
  43f366:	pusha  
  43f367:	clc    
  43f368:	sbb    DWORD PTR [eax+0x5],0xffffff9d
  43f36c:	xor    al,0x60
  43f36e:	(bad)  
  43f36f:	dec    DWORD PTR [edx+0x6a4d50e9]
  43f375:	xchg   esp,eax
  43f376:	mov    eax,ds:0xd7d433
  43f37b:	push   eax
  43f37c:	call   0x3c4b89
  43f381:	pop    ss
  43f382:	inc    ebp
  43f383:	or     ecx,DWORD PTR [ebx+0x4d8650c9]
  43f389:	hlt    
  43f38a:	mov    edx,DWORD PTR [edx-0x4]
  43f38d:	iret   
  43f38e:	mov    ch,0xef
  43f390:	jae    0x43f3f0
  43f392:	mov    eax,DWORD PTR [edx-0x20]
  43f395:	mov    ecx,DWORD PTR fs:[edx-0x24]
  43f399:	inc    ebp
  43f39a:	push   0x5febfba9
  43f39f:	jl     0x43f365
  43f3a1:	mov    WORD PTR [ebx+0x5700d43f],fs
  43f3a7:	add    BYTE PTR [ebp+0x3c345415],al
  43f3ad:	add    BYTE PTR [esi-0x5f],ah
  43f3b0:	dec    ebx
  43f3b1:	aam    0x57
  43f3b3:	add    ch,bh
  43f3b5:	inc    esp
  43f3b6:	mov    al,0xb0
  43f3b8:	test   BYTE PTR ds:0x3c3468,cl
  43f3be:	xchg   edi,eax
  43f3bf:	int    0xfb
  43f3c1:	push   ecx
  43f3c2:	lods   al,BYTE PTR ds:[esi]
  43f3c3:	aaa    
  43f3c4:	idiv   bh
  43f3c6:	fwait
  43f3c7:	add    ebx,0xc
  43f3ca:	pop    ds
  43f3cb:	mov    ch,0xf3
  43f3cd:	add    esp,ecx
  43f3cf:	cmp    al,0xfc
  43f3d1:	push   esp
  43f3d2:	js     0x43f35d
  43f3d4:	push   edx
  43f3d5:	in     al,0xf
  43f3d7:	(bad)  
  43f3da:	fnstcw WORD PTR [esi+eax*4]
  43f3dd:	inc    ebp
  43f3de:	push   0xafe04a8b
  43f3e3:	or     eax,0xd7d440
  43f3e8:	xchg   DWORD PTR [ebp+0x34],ecx
  43f3eb:	imul   ebx,DWORD PTR [ecx-0xa72e39],0xffffffff
  43f3f2:	xchg   esp,eax
  43f3f3:	add    ch,ah
  43f3f5:	or     DWORD PTR [edi],ecx
  43f3f7:	mov    ch,0xf7
  43f3f9:	adc    DWORD PTR [esi+0x4],0xffffff87
  43f3fd:	push   ebp
  43f3fe:	sub    al,0x8b
  43f400:	inc    edx
  43f401:	clc    
  43f402:	pop    edi
  43f403:	(bad)
  43f406:	pop    esp
  43f407:	mov    ecx,DWORD PTR [edx]
  43f409:	xor    al,0x0
  43f40b:	call   0x5946f3d2
  43f410:	pop    eax
  43f411:	test   BYTE PTR [ecx],dl
  43f413:	xchg   edi,eax
  43f414:	mov    ch,0xf7
  43f416:	mov    eax,ds:0x3c34c0
  43f41b:	xchg   edi,eax
  43f41c:	(bad)
  43f41f:	test   BYTE PTR [ebx+0x4115f84a],cl
  43f425:	out    0x3,al
  43f427:	xchg   esp,eax
  43f428:	add    BYTE PTR [ebp+0x3c348815],al
  43f42e:	add    BYTE PTR [edi-0x71cc084b],dl
  43f434:	mov    eax,ds:0x57d433
  43f439:	std    
  43f43a:	inc    esp
  43f43b:	lods   al,BYTE PTR ds:[esi]
  43f43c:	mov    BYTE PTR [edi],al
  43f43e:	jmp    0x43f423
  43f440:	mov    BYTE PTR [edx],ch
  43f442:	and    al,0xc8
  43f444:	ret    0x88ff
  43f447:	pop    ecx
  43f448:	and    ah,dl
  43f44a:	inc    ebx
  43f44b:	xchg   esp,eax
  43f44c:	adc    edi,eax
  43f44e:	mov    ecx,eax
  43f450:	clc    
  43f451:	rol    DWORD PTR [ebx-0x6c],cl
  43f454:	adc    edi,eax
  43f456:	mov    DWORD PTR [ecx-0x6bbc2bd4],ebx
  43f45c:	push   0x5e6bf749
  43f461:	mov    cl,BYTE PTR ds:0x3c3233
  43f467:	or     eax,0x94b9f7cc
  43f46c:	add    DWORD PTR [eax+0x0],eax
  43f46f:	add    BYTE PTR ds:0x9402ff68,dl
  43f475:	add    BYTE PTR [ebp-0x30d5c3ab],al
  43f47b:	mov    DWORD PTR [ecx-0x6bbc2bd8],ecx
  43f481:	lahf   
  43f482:	daa    
  43f483:	aam    0xd7
  43f485:	add    BYTE PTR [eax-0x18],dl
  43f488:	nop
  43f489:	pop    edx
  43f48a:	clc    
  43f48b:	call   DWORD PTR [edi]
  43f48d:	inc    ebp
  43f48e:	add    ecx,DWORD PTR [ebx+0x43d41499]
  43f494:	xchg   esp,eax
  43f495:	scas   eax,DWORD PTR es:[edi]
  43f496:	out    0xd5,eax
  43f498:	(bad)  
  43f499:	pop    ebp
  43f49a:	clc    
  43f49b:	test   esp,edx
  43f49d:	rol    DWORD PTR [ebx],cl
  43f49f:	xor    edx,esp
  43f4a1:	imul   esp,DWORD PTR ds:0xd424b98b,0xc3819443
  43f4ab:	add    al,0x17
  43f4ad:	sbb    al,0x38
  43f4af:	aam    0x57
  43f4b1:	add    BYTE PTR [eax],al
  43f4b3:	je     0x43f442
  43f4b5:	lahf   
  43f4b6:	adc    edx,esp
  43f4b8:	push   edi
  43f4b9:	add    BYTE PTR [edi-0x17fb87bc],al
  43f4bf:	pop    ebp
  43f4c0:	test   eax,0x898bf85d
  43f4c5:	mov    ah,0xd3
  43f4c7:	inc    ebx
  43f4c8:	xchg   esp,eax
  43f4c9:	mov    dl,0xbc
  43f4cb:	xor    edx,DWORD PTR [ecx+ecx*4-0x1e]
  43f4cf:	pop    ebp
  43f4d0:	push   edi
  43f4d1:	dec    esp
  43f4d2:	retf   
  43f4d3:	int3   
  43f4d4:	add    BYTE PTR [eax+eax*1+0x940000],dl
  43f4db:	add    BYTE PTR [eax],al
  43f4dd:	xchg   esp,eax
  43f4de:	add    BYTE PTR [eax],al
  43f4e0:	add    BYTE PTR [eax+eax*1+0x940000],dl
  43f4e7:	add    BYTE PTR [eax],al
  43f4e9:	xchg   esp,eax
  43f4ea:	add    BYTE PTR [eax],al
  43f4ec:	add    BYTE PTR [eax+eax*1+0x940000],dl
  43f4f3:	add    BYTE PTR [eax],al
  43f4f5:	xchg   esp,eax
  43f4f6:	add    BYTE PTR [eax],al
  43f4f8:	add    BYTE PTR [eax+eax*1+0x940000],dl
  43f4ff:	add    BYTE PTR [eax],al
  43f501:	xchg   esp,eax
  43f502:	add    BYTE PTR [eax],al
  43f504:	add    BYTE PTR [eax+eax*1+0x940000],dl
  43f50b:	add    BYTE PTR [eax],al
  43f50d:	xchg   esp,eax
  43f50e:	add    BYTE PTR [eax],al
  43f510:	add    BYTE PTR [eax+eax*1+0x940000],dl
  43f517:	add    BYTE PTR [eax],al
  43f519:	xchg   esp,eax
  43f51a:	add    BYTE PTR [eax],al
  43f51c:	add    BYTE PTR [eax+eax*1+0x940000],dl
  43f523:	add    BYTE PTR [eax],al
  43f525:	xchg   esp,eax
  43f526:	add    BYTE PTR [eax],al
  43f528:	add    BYTE PTR [eax+eax*1+0x940000],dl
  43f52f:	add    BYTE PTR [eax],al
  43f531:	xchg   esp,eax
  43f532:	add    BYTE PTR [eax],al
  43f534:	add    BYTE PTR [eax+eax*1-0x6c000000],dl
  43f53b:	add    BYTE PTR [eax],al
  43f53d:	add    BYTE PTR [eax+eax*1+0x940000],dl
  43f544:	add    BYTE PTR [eax],al
  43f546:	xchg   esp,eax
  43f547:	add    BYTE PTR [eax],al
  43f549:	add    BYTE PTR [eax+eax*1+0x940000],dl
  43f550:	add    BYTE PTR [eax],al
  43f552:	xchg   esp,eax
  43f553:	add    BYTE PTR [eax],al
  43f555:	add    BYTE PTR [eax+eax*1+0x940000],dl
  43f55c:	add    BYTE PTR [eax],al
  43f55e:	xchg   esp,eax
  43f55f:	add    BYTE PTR [eax],al
  43f561:	add    BYTE PTR [eax+eax*1+0x940000],dl
  43f568:	add    BYTE PTR [eax],al
  43f56a:	xchg   esp,eax
  43f56b:	add    BYTE PTR [eax],al
  43f56d:	add    BYTE PTR [eax+eax*1+0x940000],dl
  43f574:	add    BYTE PTR [eax],al
  43f576:	xchg   esp,eax
  43f577:	add    BYTE PTR [eax],al
  43f579:	add    BYTE PTR [eax+eax*1+0x940000],dl
  43f580:	add    BYTE PTR [eax],al
  43f582:	xchg   esp,eax
  43f583:	add    BYTE PTR [eax],al
  43f585:	add    BYTE PTR [eax+eax*1+0x940000],dl
  43f58c:	add    BYTE PTR [eax],al
  43f58e:	xchg   esp,eax
  43f58f:	add    BYTE PTR [eax],al
  43f591:	add    BYTE PTR [eax+eax*1+0x940000],dl
  43f598:	add    BYTE PTR [eax],al
  43f59a:	xchg   esp,eax
  43f59b:	add    BYTE PTR [eax],al
  43f59d:	add    BYTE PTR [eax],al
  43f59f:	xchg   esp,eax
  43f5a0:	add    BYTE PTR [eax],al
  43f5a2:	add    BYTE PTR [eax+eax*1+0x940000],dl
  43f5a9:	add    BYTE PTR [eax],al
  43f5ab:	xchg   esp,eax
  43f5ac:	add    BYTE PTR [eax],al
  43f5ae:	add    BYTE PTR [eax+eax*1+0x940000],dl
  43f5b5:	add    BYTE PTR [eax],al
  43f5b7:	xchg   esp,eax
  43f5b8:	add    BYTE PTR [eax],al
  43f5ba:	add    BYTE PTR [eax+eax*1+0x940000],dl
  43f5c1:	add    BYTE PTR [eax],al
  43f5c3:	xchg   esp,eax
  43f5c4:	add    BYTE PTR [eax],al
  43f5c6:	add    BYTE PTR [eax+eax*1+0x940000],dl
  43f5cd:	add    BYTE PTR [eax],al
  43f5cf:	xchg   esp,eax
  43f5d0:	add    BYTE PTR [eax],al
  43f5d2:	add    BYTE PTR [eax+eax*1+0x940000],dl
  43f5d9:	add    BYTE PTR [eax],al
  43f5db:	xchg   esp,eax
  43f5dc:	add    BYTE PTR [eax],al
  43f5de:	add    BYTE PTR [eax+eax*1+0x4000000],dl
  43f5e5:	add    BYTE PTR [eax],al
  43f5e7:	xchg   esp,eax
  43f5e8:	add    BYTE PTR [eax],al
  43f5ea:	add    BYTE PTR [eax+eax*1+0x0],bh
  43f5ee:	add    BYTE PTR [eax],cl
  43f5f0:	xor    edx,DWORD PTR [eax-0x67ccd7cd]
  43f5f6:	xor    ebp,DWORD PTR [eax]
  43f5f8:	xor    esp,DWORD PTR [eax-0x57cd07cd]
  43f5fe:	xor    edx,DWORD PTR [eax+eax*8+0xbc0003]
  43f605:	add    BYTE PTR [eax],al
  43f607:	ja     0x43f642
  43f609:	mov    edi,DWORD PTR [ecx]
  43f60b:	add    al,0x39
  43f60d:	call   0x4239:0xa838fb39
  43f614:	cmp    ebx,edx
  43f616:	cmp    edx,ebp
  43f618:	cmp    al,ch
  43f61a:	cmp    DWORD PTR [eax+0x4f3a2d3a],ebx
  43f620:	cmp    dl,BYTE PTR [ecx+0x3a]
  43f623:	dec    ebp
  43f624:	cmp    bl,ch
  43f626:	cmp    dh,al
  43f628:	cmp    al,bh
  43f62a:	cmp    al,0xd1
  43f62c:	cmp    edx,ebp
  43f62e:	cmp    al,0x90
  43f630:	cmp    eax,0x3d7b3d0d
  43f635:	mov    esi,0xdb3cd73d
  43f63a:	cmp    eax,0x3def3cad
  43f63f:	mov    ebx,0x863e0c3c
  43f644:	ds es ds gs cmp DWORD PTR ds:[esi],edi
  43f64b:	add    BYTE PTR [ebx+0x3e],ah
  43f64e:	inc    ebp
  43f64f:	ds cmp al,0x3e
  43f652:	sar    DWORD PTR [esi],0x5b
  43f655:	aas    
  43f656:	xchg   BYTE PTR [edi],bh
  43f658:	pop    ds
  43f659:	ds popf 
  43f65b:	aas    
  43f65c:	cmp    bh,BYTE PTR [esi]
  43f65e:	mov    al,0x3f
  43f660:	dec    ecx
  43f661:	ds in  al,0x3f
  43f664:	jle    0x43f6a4
  43f666:	add    BYTE PTR [eax],al
  43f668:	xchg   esp,eax
  43f669:	rol    BYTE PTR [ebx],1
  43f66b:	add    BYTE PTR [eax],al
  43f66d:	add    DWORD PTR [eax],eax
  43f66f:	add    BYTE PTR [esi-0x1acfdad0],dl
  43f675:	xor    BYTE PTR [ecx+0x30],bl
  43f678:	jmp    0x43f6aa
  43f67a:	data16 xor al,al
  43f67d:	xor    BYTE PTR [ebp-0x6ccef0d0],al
  43f683:	xor    BYTE PTR [esi],cl
  43f685:	xor    DWORD PTR [ecx-0x40cf04d0],esp
  43f68b:	xor    BYTE PTR [ecx+0x31],bl
  43f68e:	xlat   BYTE PTR ds:[ebx]
  43f68f:	xor    BYTE PTR ds:0xd30eb31,dh
  43f695:	xor    DWORD PTR [ebx],eax
  43f697:	xor    DWORD PTR [ebp+0x5231482f],esp
  43f69d:	das    
  43f69e:	push   esp
  43f69f:	xor    DWORD PTR [ecx+0x2f],esi
  43f6a2:	push   0x31
  43f6a4:	push   ss
  43f6a5:	xor    BYTE PTR [esi-0x2ad023cf],bh
  43f6ab:	xor    ebp,esi
  43f6ad:	das    
  43f6ae:	jmp    0x43f6e1
  43f6b0:	add    al,ah
  43f6b2:	das    
  43f6b3:	(bad)  
  43f6b4:	xor    DWORD PTR [ebp-0x5fcdf1ce],ebx
  43f6ba:	xor    bl,BYTE PTR ds:0x34327332
  43f6c0:	xor    bh,BYTE PTR [esi+0x32]
  43f6c3:	aas    
  43f6c4:	xor    bl,BYTE PTR [ecx+0x32]
  43f6c7:	dec    ecx
  43f6c8:	xor    bl,BYTE PTR [edx+0x32]
  43f6cb:	push   esp
  43f6cc:	xor    dh,BYTE PTR [esi]
  43f6ce:	xor    ch,BYTE PTR [eax+0x32]
  43f6d1:	sub    DWORD PTR [edx],esi
  43f6d3:	jb     0x43f707
  43f6d5:	and    esi,DWORD PTR [edx]
  43f6d7:	call   0x6632:0xcc325232
  43f6de:	xor    bl,ah
  43f6e0:	xor    dl,BYTE PTR [edx-0x53ccd4cf]
  43f6e6:	xor    DWORD PTR [ebx+esi*1-0x3e],ecx
  43f6ea:	xor    DWORD PTR [ebx+0x33],esp
  43f6ed:	in     eax,dx
  43f6ee:	xor    DWORD PTR [ecx+0x33],esi
  43f6f1:	fnsave [ecx]
  43f6f3:	test   BYTE PTR [ebx],dh
  43f6f5:	and    BYTE PTR [ecx],dh
  43f6f7:	popf   
  43f6f8:	xor    esi,esi
  43f6fa:	xor    BYTE PTR [ecx-0x31cea6cd],dh
  43f700:	xor    esp,DWORD PTR [edx+0x31]
  43f703:	in     eax,0x33
  43f705:	xchg   esp,eax
  43f706:	add    BYTE PTR [eax],al
  43f708:	add    BYTE PTR [eax+eax*1+0x940000],dl
  43f70f:	add    BYTE PTR [eax],al
  43f711:	xchg   esp,eax
  43f712:	add    BYTE PTR [eax],al
  43f714:	add    BYTE PTR [eax],al
  43f716:	xchg   esp,eax
  43f717:	add    BYTE PTR [eax],al
  43f719:	add    BYTE PTR [eax+eax*1+0x940000],dl
  43f720:	add    BYTE PTR [eax],al
  43f722:	xchg   esp,eax
  43f723:	add    BYTE PTR [eax],al
  43f725:	add    BYTE PTR [eax+eax*1+0x940000],dl
  43f72c:	add    BYTE PTR [eax],al
  43f72e:	xchg   esp,eax
  43f72f:	add    BYTE PTR [eax],al
  43f731:	add    BYTE PTR [eax+eax*1+0x940000],dl
  43f738:	add    BYTE PTR [eax],al
  43f73a:	xchg   esp,eax
  43f73b:	add    BYTE PTR [eax],al
  43f73d:	add    BYTE PTR [eax+eax*1+0x940000],dl
  43f744:	add    BYTE PTR [eax],al
  43f746:	xchg   esp,eax
  43f747:	add    BYTE PTR [eax],al
  43f749:	add    BYTE PTR [eax+eax*1+0x940000],dl
  43f750:	add    BYTE PTR [eax],al
  43f752:	xchg   esp,eax
  43f753:	add    BYTE PTR [eax],al
  43f755:	add    BYTE PTR [eax+eax*1+0x940000],dl
  43f75c:	add    BYTE PTR [eax],al
  43f75e:	xchg   esp,eax
  43f75f:	add    BYTE PTR [eax],al
  43f761:	add    BYTE PTR [eax+eax*1+0x940000],dl
  43f768:	add    BYTE PTR [eax],al
  43f76a:	xchg   esp,eax
  43f76b:	add    BYTE PTR [eax],al
  43f76d:	add    BYTE PTR [eax+eax*1+0x940000],dl
  43f774:	add    BYTE PTR [eax],al
  43f776:	xchg   esp,eax
  43f777:	add    BYTE PTR [eax],al
  43f779:	add    BYTE PTR [eax],al
  43f77b:	xchg   esp,eax
  43f77c:	add    BYTE PTR [eax],al
  43f77e:	add    BYTE PTR [eax+eax*1+0x940000],dl
  43f785:	add    BYTE PTR [eax],al
  43f787:	xchg   esp,eax
  43f788:	add    BYTE PTR [eax],al
  43f78a:	add    BYTE PTR [eax+eax*1+0x940000],dl
  43f791:	add    BYTE PTR [eax],al
  43f793:	xchg   esp,eax
  43f794:	add    BYTE PTR [eax],al
  43f796:	add    BYTE PTR [eax+eax*1+0x940000],dl
  43f79d:	add    BYTE PTR [eax],al
  43f79f:	xchg   esp,eax
  43f7a0:	add    BYTE PTR [eax],al
  43f7a2:	add    BYTE PTR [eax+eax*1+0x940000],dl
  43f7a9:	add    BYTE PTR [eax],al
  43f7ab:	xchg   esp,eax
  43f7ac:	add    BYTE PTR [eax],al
  43f7ae:	add    BYTE PTR [eax+eax*1+0x940000],dl
  43f7b5:	add    BYTE PTR [eax],al
  43f7b7:	xchg   esp,eax
  43f7b8:	add    BYTE PTR [eax],al
  43f7ba:	add    BYTE PTR [eax+eax*1+0x940000],dl
  43f7c1:	add    BYTE PTR [eax],al
  43f7c3:	xchg   esp,eax
  43f7c4:	add    BYTE PTR [eax],al
  43f7c6:	add    BYTE PTR [eax+eax*1+0x940000],dl
  43f7cd:	add    BYTE PTR [eax],al
  43f7cf:	xchg   esp,eax
  43f7d0:	add    BYTE PTR [eax],al
  43f7d2:	add    BYTE PTR [eax+eax*1+0x940000],dl
  43f7d9:	add    BYTE PTR [eax],al
  43f7db:	xchg   esp,eax
  43f7dc:	add    BYTE PTR [eax],al
  43f7de:	add    BYTE PTR [eax],al
  43f7e0:	xchg   esp,eax
  43f7e1:	add    BYTE PTR [eax],al
  43f7e3:	add    BYTE PTR [eax+eax*1+0x940000],dl
  43f7ea:	add    BYTE PTR [eax],al
  43f7ec:	xchg   esp,eax
  43f7ed:	add    BYTE PTR [eax],al
  43f7ef:	add    BYTE PTR [eax+eax*1+0x940000],dl
  43f7f6:	add    BYTE PTR [eax],al
  43f7f8:	xchg   esp,eax
  43f7f9:	add    BYTE PTR [eax],al
  43f7fb:	add    BYTE PTR [eax+eax*1+0x940000],dl
  43f802:	add    BYTE PTR [eax],al
  43f804:	xchg   esp,eax
  43f805:	add    BYTE PTR [eax],al
  43f807:	add    BYTE PTR [eax+eax*1+0x940000],dl
  43f80e:	add    BYTE PTR [eax],al
  43f810:	xchg   esp,eax
  43f811:	add    BYTE PTR [eax],al
  43f813:	add    BYTE PTR [eax+eax*1+0x940000],dl
  43f81a:	add    BYTE PTR [eax],al
  43f81c:	xchg   esp,eax
  43f81d:	add    BYTE PTR [eax],al
  43f81f:	add    BYTE PTR [eax+eax*1+0x940000],dl
  43f826:	add    BYTE PTR [eax],al
  43f828:	xchg   esp,eax
  43f829:	add    BYTE PTR [eax],al
  43f82b:	add    BYTE PTR [eax+eax*1+0x940000],dl
  43f832:	add    BYTE PTR [eax],al
  43f834:	xchg   esp,eax
  43f835:	add    BYTE PTR [eax],al
  43f837:	add    BYTE PTR [eax+eax*1+0x940000],dl
  43f83e:	add    BYTE PTR [eax],al
  43f840:	xchg   esp,eax
  43f841:	add    BYTE PTR [eax],al
  43f843:	add    BYTE PTR [eax],al
  43f845:	xchg   esp,eax
  43f846:	add    BYTE PTR [eax],al
  43f848:	add    BYTE PTR [eax+eax*1+0x940000],dl
  43f84f:	add    BYTE PTR [eax],al
  43f851:	xchg   esp,eax
  43f852:	add    BYTE PTR [eax],al
  43f854:	add    BYTE PTR [eax+eax*1+0x940000],dl
  43f85b:	add    BYTE PTR [eax],al
  43f85d:	xchg   esp,eax
  43f85e:	add    BYTE PTR [eax],al
  43f860:	add    BYTE PTR [eax+eax*1+0x940000],dl
  43f867:	add    BYTE PTR [eax],al
  43f869:	xchg   esp,eax
  43f86a:	add    BYTE PTR [eax],al
  43f86c:	add    BYTE PTR [eax+eax*1+0x940000],dl
  43f873:	add    BYTE PTR [eax],al
  43f875:	xchg   esp,eax
  43f876:	add    BYTE PTR [eax],al
  43f878:	add    BYTE PTR [eax+eax*1+0x940000],dl
  43f87f:	add    BYTE PTR [eax],al
  43f881:	xchg   esp,eax
  43f882:	add    BYTE PTR [eax],al
  43f884:	add    BYTE PTR [eax+eax*1+0x940000],dl
  43f88b:	add    BYTE PTR [eax],al
  43f88d:	xchg   esp,eax
  43f88e:	add    BYTE PTR [eax],al
  43f890:	add    BYTE PTR [eax+eax*1+0x940000],dl
  43f897:	add    BYTE PTR [eax],al
  43f899:	xchg   esp,eax
  43f89a:	add    BYTE PTR [eax],al
  43f89c:	add    BYTE PTR [eax+eax*1+0x940000],dl
  43f8a3:	add    BYTE PTR [eax],al
  43f8a5:	xchg   esp,eax
  43f8a6:	add    BYTE PTR [eax],al
  43f8a8:	add    BYTE PTR [eax],al
  43f8aa:	xchg   esp,eax
  43f8ab:	add    BYTE PTR [eax],al
  43f8ad:	add    BYTE PTR [eax+eax*1+0x940000],dl
  43f8b4:	add    BYTE PTR [eax],al
  43f8b6:	xchg   esp,eax
  43f8b7:	add    BYTE PTR [eax],al
  43f8b9:	add    BYTE PTR [eax+eax*1+0x940000],dl
  43f8c0:	add    BYTE PTR [eax],al
  43f8c2:	xchg   esp,eax
  43f8c3:	add    BYTE PTR [eax],al
  43f8c5:	add    BYTE PTR [eax+eax*1+0x940000],dl
  43f8cc:	add    BYTE PTR [eax],al
  43f8ce:	xchg   esp,eax
  43f8cf:	add    BYTE PTR [eax],al
  43f8d1:	add    BYTE PTR [eax+eax*1+0x940000],dl
  43f8d8:	add    BYTE PTR [eax],al
  43f8da:	xchg   esp,eax
  43f8db:	add    BYTE PTR [eax],al
  43f8dd:	add    BYTE PTR [eax+eax*1+0x940000],dl
  43f8e4:	add    BYTE PTR [eax],al
  43f8e6:	xchg   esp,eax
  43f8e7:	add    BYTE PTR [eax],al
  43f8e9:	add    BYTE PTR [eax+eax*1+0x940000],dl
  43f8f0:	add    BYTE PTR [eax],al
  43f8f2:	xchg   esp,eax
  43f8f3:	add    BYTE PTR [eax],al
  43f8f5:	add    BYTE PTR [eax+eax*1+0x940000],dl
  43f8fc:	add    BYTE PTR [eax],al
  43f8fe:	xchg   esp,eax
  43f8ff:	add    BYTE PTR [eax],al
  43f901:	add    BYTE PTR [eax+eax*1+0x940000],dl
  43f908:	add    BYTE PTR [eax],al
  43f90a:	xchg   esp,eax
  43f90b:	add    BYTE PTR [eax],al
  43f90d:	add    BYTE PTR [eax],al
  43f90f:	xchg   esp,eax
  43f910:	add    BYTE PTR [eax],al
  43f912:	add    BYTE PTR [eax+eax*1+0x940000],dl
  43f919:	add    BYTE PTR [eax],al
  43f91b:	xchg   esp,eax
  43f91c:	add    BYTE PTR [eax],al
  43f91e:	add    BYTE PTR [eax+eax*1+0x940000],dl
  43f925:	add    BYTE PTR [eax],al
  43f927:	xchg   esp,eax
  43f928:	add    BYTE PTR [eax],al
  43f92a:	add    BYTE PTR [eax+eax*1+0x940000],dl
  43f931:	add    BYTE PTR [eax],al
  43f933:	xchg   esp,eax
  43f934:	add    BYTE PTR [eax],al
  43f936:	add    BYTE PTR [eax+eax*1+0x940000],dl
  43f93d:	add    BYTE PTR [eax],al
  43f93f:	xchg   esp,eax
  43f940:	add    BYTE PTR [eax],al
  43f942:	add    BYTE PTR [eax+eax*1+0x940000],dl
  43f949:	add    BYTE PTR [eax],al
  43f94b:	xchg   esp,eax
  43f94c:	add    BYTE PTR [eax],al
  43f94e:	add    BYTE PTR [eax+eax*1+0x940000],dl
  43f955:	add    BYTE PTR [eax],al
  43f957:	xchg   esp,eax
  43f958:	add    BYTE PTR [eax],al
  43f95a:	add    BYTE PTR [eax+eax*1+0x940000],dl
  43f961:	add    BYTE PTR [eax],al
  43f963:	xchg   esp,eax
  43f964:	add    BYTE PTR [eax],al
  43f966:	add    BYTE PTR [eax+eax*1+0x940000],dl
  43f96d:	add    BYTE PTR [eax],al
  43f96f:	xchg   esp,eax
  43f970:	add    BYTE PTR [eax],al
  43f972:	add    BYTE PTR [eax],al
  43f974:	xchg   esp,eax
  43f975:	add    BYTE PTR [eax],al
  43f977:	add    BYTE PTR [eax+eax*1+0x940000],dl
  43f97e:	add    BYTE PTR [eax],al
  43f980:	xchg   esp,eax
  43f981:	add    BYTE PTR [eax],al
  43f983:	add    BYTE PTR [eax+eax*1+0x940000],dl
  43f98a:	add    BYTE PTR [eax],al
  43f98c:	xchg   esp,eax
  43f98d:	add    BYTE PTR [eax],al
  43f98f:	add    BYTE PTR [eax+eax*1+0x940000],dl
  43f996:	add    BYTE PTR [eax],al
  43f998:	xchg   esp,eax
  43f999:	add    BYTE PTR [eax],al
  43f99b:	add    BYTE PTR [eax+eax*1+0x940000],dl
  43f9a2:	add    BYTE PTR [eax],al
  43f9a4:	xchg   esp,eax
  43f9a5:	add    BYTE PTR [eax],al
  43f9a7:	add    BYTE PTR [eax+eax*1+0x940000],dl
  43f9ae:	add    BYTE PTR [eax],al
  43f9b0:	xchg   esp,eax
  43f9b1:	add    BYTE PTR [eax],al
  43f9b3:	add    BYTE PTR [eax+eax*1+0x940000],dl
  43f9ba:	add    BYTE PTR [eax],al
  43f9bc:	xchg   esp,eax
  43f9bd:	add    BYTE PTR [eax],al
  43f9bf:	add    BYTE PTR [eax+eax*1+0x940000],dl
  43f9c6:	add    BYTE PTR [eax],al
  43f9c8:	xchg   esp,eax
  43f9c9:	add    BYTE PTR [eax],al
  43f9cb:	add    BYTE PTR [eax+eax*1+0x940000],dl
  43f9d2:	add    BYTE PTR [eax],al
  43f9d4:	xchg   esp,eax
  43f9d5:	add    BYTE PTR [eax],al
  43f9d7:	add    BYTE PTR [eax],al
  43f9d9:	xchg   esp,eax
  43f9da:	add    BYTE PTR [eax],al
  43f9dc:	add    BYTE PTR [eax+eax*1+0x940000],dl
  43f9e3:	add    BYTE PTR [eax],al
  43f9e5:	xchg   esp,eax
  43f9e6:	add    BYTE PTR [eax],al
  43f9e8:	add    BYTE PTR [eax+eax*1+0x940000],dl
  43f9ef:	add    BYTE PTR [eax],al
  43f9f1:	fsubr  DWORD PTR ds:0x2ddc0044
  43f9f7:	inc    esp
  43f9f8:	add    al,ah
  43f9fa:	sub    eax,0x2de40044
  43f9ff:	inc    esp
  43fa00:	add    al,ch
  43fa02:	sub    eax,0x2dec0044
  43fa07:	inc    esp
  43fa08:	add    al,dh
  43fa0a:	sub    eax,0x2df40044
  43fa0f:	inc    esp
  43fa10:	add    al,bh
  43fa12:	sub    eax,0x2dfc0044
  43fa17:	inc    esp
  43fa18:	add    BYTE PTR [eax],al
  43fa1a:	cs inc esp
  43fa1c:	add    BYTE PTR [esi+ebp*1],al
  43fa1f:	inc    esp
  43fa20:	add    BYTE PTR [eax],cl
  43fa22:	cs inc esp
  43fa24:	add    al,cl
  43fa26:	sub    eax,0x2e0c0044
  43fa2b:	inc    esp
  43fa2c:	add    BYTE PTR [eax],dl
  43fa2e:	cs inc esp
  43fa30:	add    BYTE PTR [esi+ebp*1],dl
  43fa33:	inc    esp
  43fa34:	add    BYTE PTR [eax],bl
  43fa36:	cs inc esp
  43fa38:	add    BYTE PTR [esi+ebp*1],bl
  43fa3b:	inc    esp
  43fa3c:	add    BYTE PTR [eax],ah
  43fa3e:	cs inc esp
  43fa40:	add    BYTE PTR [esi+ebp*1],ah
  43fa43:	inc    esp
  43fa44:	add    BYTE PTR [eax],ch
  43fa46:	cs inc esp
  43fa48:	add    BYTE PTR [esi+ebp*1],ch
  43fa4b:	inc    esp
  43fa4c:	add    BYTE PTR [eax],dh
  43fa4e:	cs inc esp
  43fa50:	add    BYTE PTR [esi+ebp*1],dh
  43fa53:	inc    esp
  43fa54:	add    BYTE PTR [eax],bh
  43fa56:	cs inc esp
  43fa58:	add    BYTE PTR [esi+ebp*1],bh
  43fa5b:	inc    esp
  43fa5c:	add    BYTE PTR [eax+0x2e],al
  43fa5f:	inc    esp
  43fa60:	add    BYTE PTR [esi+ebp*1+0x44],al
  43fa64:	add    BYTE PTR [eax+0x2e],cl
  43fa67:	inc    esp
  43fa68:	add    BYTE PTR [esi+ebp*1+0x44],cl
  43fa6c:	add    BYTE PTR [eax+0x2e],dl
  43fa6f:	inc    esp
  43fa70:	add    BYTE PTR [esi+ebp*1+0x44],dl
  43fa74:	add    BYTE PTR [eax+0x2e],bl
  43fa77:	inc    esp
  43fa78:	add    BYTE PTR [esi+ebp*1+0x44],bl
  43fa7c:	add    BYTE PTR [eax+0x2e],ah
  43fa7f:	inc    esp
  43fa80:	add    BYTE PTR [esi+ebp*1+0x44],ah
  43fa84:	add    BYTE PTR [eax+0x2e],ch
  43fa87:	inc    esp
  43fa88:	add    BYTE PTR [esi+ebp*1+0x44],ch
  43fa8c:	add    ah,bh
  43fa8e:	sub    eax,0x2e700044
  43fa93:	inc    esp
  43fa94:	add    BYTE PTR [esi+ebp*1+0x44],dh
  43fa98:	add    BYTE PTR [eax+0x2e],bh
  43fa9b:	inc    esp
  43fa9c:	add    BYTE PTR [esi+ebp*1+0x44],bh
  43faa0:	add    BYTE PTR [eax-0x7bffbbd2],al
  43faa6:	cs inc esp
  43faa8:	add    BYTE PTR [eax-0x73ffbbd2],cl
  43faae:	cs inc esp
  43fab0:	add    BYTE PTR [eax-0x6bffbbd2],dl
  43fab6:	cs inc esp
  43fab8:	add    BYTE PTR [eax-0x63ffbbd2],bl
  43fabe:	cs inc esp
  43fac0:	add    BYTE PTR [eax-0x5bffbbd2],ah
  43fac6:	cs inc esp
  43fac8:	add    BYTE PTR [eax-0x53ffbbd2],ch
  43face:	cs inc esp
  43fad0:	add    BYTE PTR [eax-0x4bffbbd2],dh
  43fad6:	cs inc esp
  43fad8:	add    BYTE PTR [eax-0x43ffbbd2],bh
  43fade:	cs inc esp
  43fae0:	add    al,al
  43fae2:	cs inc esp
  43fae4:	add    ah,al
  43fae6:	cs inc esp
  43fae8:	add    al,cl
  43faea:	cs inc esp
  43faec:	add    ah,cl
  43faee:	cs inc esp
  43faf0:	add    al,dl
  43faf2:	cs inc esp
  43faf4:	add    ah,dl
  43faf6:	cs inc esp
  43faf8:	add    al,bl
  43fafa:	cs inc esp
  43fafc:	add    ah,bl
  43fafe:	cs inc esp
  43fb00:	add    al,ah
  43fb02:	cs inc esp
  43fb04:	add    ah,ah
  43fb06:	cs inc esp
  43fb08:	add    al,ch
  43fb0a:	cs inc esp
  43fb0c:	add    ah,ch
  43fb0e:	cs inc esp
  43fb10:	add    al,dh
  43fb12:	cs inc esp
  43fb14:	add    ah,dh
  43fb16:	cs inc esp
  43fb18:	add    al,bh
  43fb1a:	cs inc esp
  43fb1c:	add    ah,bh
  43fb1e:	cs inc esp
  43fb20:	add    BYTE PTR [eax],al
  43fb22:	das    
  43fb23:	inc    esp
  43fb24:	add    BYTE PTR [edi+ebp*1],al
  43fb27:	inc    esp
  43fb28:	add    BYTE PTR [eax],cl
  43fb2a:	das    
  43fb2b:	inc    esp
  43fb2c:	add    BYTE PTR [edi+ebp*1],cl
  43fb2f:	inc    esp
  43fb30:	add    al,ah
  43fb32:	cs inc esp
  43fb34:	add    BYTE PTR [eax],dl
  43fb36:	das    
  43fb37:	inc    esp
  43fb38:	add    BYTE PTR [edi+ebp*1],dl
  43fb3b:	inc    esp
  43fb3c:	add    BYTE PTR [eax],bl
  43fb3e:	das    
  43fb3f:	inc    esp
  43fb40:	add    BYTE PTR [edi+ebp*1],bl
  43fb43:	inc    esp
  43fb44:	add    ah,cl
  43fb46:	sub    eax,0x2f200044
  43fb4b:	inc    esp
  43fb4c:	add    BYTE PTR [edi+ebp*1],ah
  43fb4f:	inc    esp
  43fb50:	add    BYTE PTR [eax],ch
  43fb52:	das    
  43fb53:	inc    esp
  43fb54:	add    BYTE PTR [edi+ebp*1],ch
  43fb57:	inc    esp
  43fb58:	add    BYTE PTR [eax],dh
  43fb5a:	das    
  43fb5b:	inc    esp
  43fb5c:	add    BYTE PTR [edi+ebp*1],dh
  43fb5f:	inc    esp
  43fb60:	add    BYTE PTR [eax+0x3800442e],ch
  43fb66:	das    
  43fb67:	inc    esp
  43fb68:	add    BYTE PTR [edi+ebp*1],bh
  43fb6b:	inc    esp
  43fb6c:	add    BYTE PTR [eax+0x2f],al
  43fb6f:	inc    esp
  43fb70:	add    BYTE PTR [edi+ebp*1+0x44],al
  43fb74:	add    BYTE PTR [eax+0x2f],cl
  43fb77:	inc    esp
  43fb78:	add    BYTE PTR [edi+ebp*1+0x44],cl
  43fb7c:	add    BYTE PTR [eax+0x2f],dl
  43fb7f:	inc    esp
  43fb80:	add    ah,cl
  43fb82:	cs inc esp
  43fb84:	add    BYTE PTR [esi+ebp*1+0x44],bl
  43fb88:	add    BYTE PTR [edi+ebp*1+0x44],dl
  43fb8c:	add    BYTE PTR [eax+0x2f],bl
  43fb8f:	inc    esp
  43fb90:	add    BYTE PTR [edi+ebp*1+0x44],bl
  43fb94:	add    BYTE PTR [eax+0x2f],ah
  43fb97:	inc    esp
  43fb98:	add    BYTE PTR [edi+ebp*1+0x44],ah
  43fb9c:	add    BYTE PTR [eax+0x2f],ch
  43fb9f:	inc    esp
  43fba0:	add    BYTE PTR [edi+ebp*1+0x44],ch
  43fba4:	add    BYTE PTR [eax+0x2f],dh
  43fba7:	inc    esp
  43fba8:	add    BYTE PTR [edi+ebp*1+0x44],dh
  43fbac:	add    BYTE PTR [eax+0x2f],bh
  43fbaf:	inc    esp
  43fbb0:	add    BYTE PTR [edi+ebp*1+0x44],bh
  43fbb4:	add    BYTE PTR [eax],cl
  43fbb6:	das    
  43fbb7:	inc    esp
  43fbb8:	add    BYTE PTR [eax-0x7bffbbd1],al
  43fbbe:	das    
  43fbbf:	inc    esp
  43fbc0:	add    BYTE PTR [eax-0x73ffbbd1],cl
  43fbc6:	das    
  43fbc7:	inc    esp
  43fbc8:	add    BYTE PTR [eax+0x1c00442f],dl
  43fbce:	das    
  43fbcf:	inc    esp
  43fbd0:	add    BYTE PTR [edi+ebp*1+0x2f980044],dl
  43fbd7:	inc    esp
  43fbd8:	add    BYTE PTR [edi+ebp*1+0x2e9c0044],bl
  43fbdf:	inc    esp
  43fbe0:	add    BYTE PTR [eax-0x5bffbbd1],ah
  43fbe6:	das    
  43fbe7:	inc    esp
  43fbe8:	add    BYTE PTR [eax],al
  43fbea:	das    
  43fbeb:	inc    esp
  43fbec:	add    BYTE PTR [eax-0x53ffbbd1],ch
  43fbf2:	das    
  43fbf3:	inc    esp
  43fbf4:	add    BYTE PTR [edi+ebp*1+0x44],cl
  43fbf8:	add    BYTE PTR [eax-0x4bffbbd1],dh
  43fbfe:	das    
  43fbff:	inc    esp
  43fc00:	add    BYTE PTR [eax-0x43ffbbd1],bh
  43fc06:	das    
  43fc07:	inc    esp
  43fc08:	add    al,al
  43fc0a:	das    
  43fc0b:	inc    esp
  43fc0c:	add    ah,al
  43fc0e:	das    
  43fc0f:	inc    esp
  43fc10:	add    al,cl
  43fc12:	das    
  43fc13:	inc    esp
  43fc14:	add    ah,cl
  43fc16:	das    
  43fc17:	inc    esp
  43fc18:	add    al,dl
  43fc1a:	das    
  43fc1b:	inc    esp
  43fc1c:	add    ah,dl
  43fc1e:	das    
  43fc1f:	inc    esp
  43fc20:	add    al,bl
  43fc22:	das    
  43fc23:	inc    esp
  43fc24:	add    ah,bl
  43fc26:	das    
  43fc27:	inc    esp
  43fc28:	add    ah,al
  43fc2a:	das    
  43fc2b:	inc    esp
  43fc2c:	add    al,ah
  43fc2e:	das    
  43fc2f:	inc    esp
  43fc30:	add    ah,ah
  43fc32:	das    
  43fc33:	inc    esp
  43fc34:	add    al,ch
  43fc36:	das    
  43fc37:	inc    esp
  43fc38:	add    ah,ch
  43fc3a:	das    
  43fc3b:	inc    esp
  43fc3c:	add    al,dh
  43fc3e:	das    
  43fc3f:	inc    esp
  43fc40:	add    al,ah
  43fc42:	sub    eax,0x2ff40044
  43fc47:	inc    esp
  43fc48:	add    BYTE PTR [eax-0x7ffbbd2],ah
  43fc4e:	das    
  43fc4f:	inc    esp
  43fc50:	add    ah,bh
  43fc52:	das    
  43fc53:	inc    esp
  43fc54:	add    BYTE PTR [eax],al
  43fc56:	xor    BYTE PTR [eax+eax*1+0x4],al
  43fc5a:	xor    BYTE PTR [eax+eax*1+0x8],al
  43fc5e:	xor    BYTE PTR [eax+eax*1-0x14],al
  43fc62:	das    
  43fc63:	inc    esp
  43fc64:	add    BYTE PTR [eax+esi*1],cl
  43fc67:	inc    esp
  43fc68:	add    BYTE PTR [eax],dl
  43fc6a:	xor    BYTE PTR [eax+eax*1+0x14],al
  43fc6e:	xor    BYTE PTR [eax+eax*1+0x18],al
  43fc72:	xor    BYTE PTR [eax+eax*1+0x1c],al
  43fc76:	xor    BYTE PTR [eax+eax*1+0x20],al
  43fc7a:	xor    BYTE PTR [eax+eax*1+0x24],al
  43fc7e:	xor    BYTE PTR [eax+eax*1-0x74],al
  43fc82:	cs inc esp
  43fc84:	add    BYTE PTR [eax+0x2f],bl
  43fc87:	inc    esp
  43fc88:	add    BYTE PTR [eax],ch
  43fc8a:	xor    BYTE PTR [eax+eax*1+0x2c],al
  43fc8e:	xor    BYTE PTR [eax+eax*1+0x30],al
  43fc92:	xor    BYTE PTR [eax+eax*1+0x34],al
  43fc96:	xor    BYTE PTR [eax+eax*1-0x3c],al
  43fc9a:	sub    eax,0x30380044
  43fc9f:	inc    esp
  43fca0:	add    BYTE PTR [eax+esi*1],bh
  43fca3:	inc    esp
  43fca4:	add    BYTE PTR [eax+0x30],al
  43fca7:	inc    esp
  43fca8:	add    ah,dl
  43fcaa:	sub    eax,0x30440044
  43fcaf:	inc    esp
  43fcb0:	add    BYTE PTR [eax+0x30],cl
  43fcb3:	inc    esp
  43fcb4:	add    BYTE PTR [esi+ebp*1+0x304c0044],al
  43fcbb:	inc    esp
  43fcbc:	add    BYTE PTR [eax+0x30],dl
  43fcbf:	inc    esp
  43fcc0:	add    ah,al
  43fcc2:	cs inc esp
  43fcc4:	add    BYTE PTR [eax+esi*1+0x44],dl
  43fcc8:	add    BYTE PTR [eax+0x30],bl
  43fccb:	inc    esp
  43fccc:	add    BYTE PTR [eax+esi*1+0x44],bl
  43fcd0:	add    al,al
  43fcd2:	cs inc esp
  43fcd4:	add    ah,al
  43fcd6:	sub    eax,0x2f300044
  43fcdb:	inc    esp
  43fcdc:	add    BYTE PTR [eax+0x30],ah
  43fcdf:	inc    esp
  43fce0:	add    ah,dh
  43fce2:	das    
  43fce3:	inc    esp
  43fce4:	add    al,ah
  43fce6:	das    
  43fce7:	inc    esp
  43fce8:	add    BYTE PTR [eax+esi*1+0x44],ah
  43fcec:	add    BYTE PTR [eax+0x30],ch
  43fcef:	inc    esp
  43fcf0:	add    BYTE PTR [eax+esi*1+0x44],ch
  43fcf4:	add    BYTE PTR [esi+ebp*1+0x44],ch
  43fcf8:	add    BYTE PTR [eax+0x30],dh
  43fcfb:	inc    esp
  43fcfc:	add    BYTE PTR [eax+esi*1+0x44],dh
  43fd00:	add    BYTE PTR [eax+0x30],bh
  43fd03:	inc    esp
  43fd04:	add    BYTE PTR [eax+esi*1+0x44],bh
  43fd08:	add    BYTE PTR [eax+esi*1],bl
  43fd0b:	inc    esp
  43fd0c:	add    BYTE PTR [eax-0x67ffbbd0],al
  43fd12:	xor    BYTE PTR [eax+eax*1-0x64],al
  43fd16:	xor    BYTE PTR [eax+eax*1-0x60],al
  43fd1a:	xor    BYTE PTR [eax+eax*1-0x5c],al
  43fd1e:	xor    BYTE PTR [eax+eax*1-0x68],al
  43fd22:	xor    BYTE PTR [eax+eax*1-0x58],al
  43fd26:	xor    BYTE PTR [eax+eax*1-0x54],al
  43fd2a:	xor    BYTE PTR [eax+eax*1-0x50],al
  43fd2e:	xor    BYTE PTR [eax+eax*1-0x4c],al
  43fd32:	xor    BYTE PTR [eax+eax*1-0x48],al
  43fd36:	xor    BYTE PTR [eax+eax*1-0x44],al
  43fd3a:	xor    BYTE PTR [eax+eax*1-0x40],al
  43fd3e:	xor    BYTE PTR [eax+eax*1-0x3c],al
  43fd42:	xor    BYTE PTR [eax+eax*1-0x38],al
  43fd46:	xor    BYTE PTR [eax+eax*1-0x34],al
  43fd4a:	xor    BYTE PTR [eax+eax*1-0x30],al
  43fd4e:	xor    BYTE PTR [eax+eax*1-0x2c],al
  43fd52:	xor    BYTE PTR [eax+eax*1-0x28],al
  43fd56:	xor    BYTE PTR [eax+eax*1-0x24],al
  43fd5a:	xor    BYTE PTR [eax+eax*1-0x20],al
  43fd5e:	xor    BYTE PTR [eax+eax*1-0x1c],al
  43fd62:	xor    BYTE PTR [eax+eax*1-0x18],al
  43fd66:	xor    BYTE PTR [eax+eax*1-0x14],al
  43fd6a:	xor    BYTE PTR [eax+eax*1-0x10],al
  43fd6e:	xor    BYTE PTR [eax+eax*1-0xc],al
  43fd72:	xor    BYTE PTR [eax+eax*1-0x8],al
  43fd76:	xor    BYTE PTR [eax+eax*1-0x4],al
  43fd7a:	xor    BYTE PTR [eax+eax*1+0x0],al
  43fd7e:	xor    DWORD PTR [eax+eax*1+0x4],eax
  43fd82:	xor    DWORD PTR [eax+eax*1+0x8],eax
  43fd86:	xor    DWORD PTR [eax+eax*1+0xc],eax
  43fd8a:	xor    DWORD PTR [eax+eax*1+0x10],eax
  43fd8e:	xor    DWORD PTR [eax+eax*1+0x14],eax
  43fd92:	xor    DWORD PTR [eax+eax*1+0x18],eax
  43fd96:	xor    DWORD PTR [eax+eax*1+0x1c],eax
  43fd9a:	xor    DWORD PTR [eax+eax*1-0x4c],eax
  43fd9e:	xor    BYTE PTR [eax+eax*1+0x20],al
  43fda2:	xor    DWORD PTR [eax+eax*1+0x24],eax
  43fda6:	xor    DWORD PTR [eax+eax*1-0x3c],eax
  43fdaa:	xor    BYTE PTR [eax+eax*1+0x28],al
  43fdae:	xor    DWORD PTR [eax+eax*1+0x2c],eax
  43fdb2:	xor    DWORD PTR [eax+eax*1+0x30],eax
  43fdb6:	xor    DWORD PTR [eax+eax*1+0x34],eax
  43fdba:	xor    DWORD PTR [eax+eax*1+0x38],eax
  43fdbe:	xor    DWORD PTR [eax+eax*1+0x3c],eax
  43fdc2:	xor    DWORD PTR [eax+eax*1+0x40],eax
  43fdc6:	xor    DWORD PTR [eax+eax*1+0x44],eax
  43fdca:	xor    DWORD PTR [eax+eax*1+0x48],eax
  43fdce:	xor    DWORD PTR [eax+eax*1+0x4c],eax
  43fdd2:	xor    DWORD PTR [eax+eax*1+0x50],eax
  43fdd6:	xor    DWORD PTR [eax+eax*1+0x54],eax
  43fdda:	xor    DWORD PTR [eax+eax*1+0x58],eax
  43fdde:	xor    DWORD PTR [eax+eax*1+0x5c],eax
  43fde2:	xor    DWORD PTR [eax+eax*1-0x34],eax
  43fde6:	xor    BYTE PTR [eax+eax*1+0x60],al
  43fdea:	xor    DWORD PTR [eax+eax*1+0x64],eax
  43fdee:	xor    DWORD PTR [eax+eax*1+0x68],eax
  43fdf2:	xor    DWORD PTR [eax+eax*1+0x6c],eax
  43fdf6:	xor    DWORD PTR [eax+eax*1+0x18],eax
  43fdfa:	xor    DWORD PTR [eax+eax*1+0x70],eax
  43fdfe:	xor    DWORD PTR [eax+eax*1+0x74],eax
  43fe02:	xor    DWORD PTR [eax+eax*1+0x78],eax
  43fe06:	xor    DWORD PTR [eax+eax*1+0x7c],eax
  43fe0a:	xor    DWORD PTR [eax+eax*1-0x48],eax
  43fe0e:	xor    BYTE PTR [eax+eax*1-0x80],al
  43fe12:	xor    DWORD PTR [eax+eax*1-0x7c],eax
  43fe16:	xor    DWORD PTR [eax+eax*1-0x78],eax
  43fe1a:	xor    DWORD PTR [eax+eax*1-0x74],eax
  43fe1e:	xor    DWORD PTR [eax+eax*1-0x70],eax
  43fe22:	xor    DWORD PTR [eax+eax*1-0x68],eax
  43fe26:	xor    BYTE PTR [eax+eax*1-0x6c],al
  43fe2a:	xor    DWORD PTR [eax+eax*1+0x20],eax
  43fe2e:	xor    DWORD PTR [eax+eax*1+0x8],eax
  43fe32:	xor    DWORD PTR [eax+eax*1+0x3c],eax
  43fe36:	xor    DWORD PTR [eax+eax*1-0x68],eax
  43fe3a:	xor    DWORD PTR [eax+eax*1-0x3c],eax
  43fe3e:	xor    BYTE PTR [eax+eax*1-0x64],al
  43fe42:	xor    DWORD PTR [eax+eax*1+0x58],eax
  43fe46:	xor    DWORD PTR [eax+eax*1-0x60],eax
  43fe4a:	xor    DWORD PTR [eax+eax*1-0x5c],eax
  43fe4e:	xor    DWORD PTR [eax+eax*1-0x58],eax
  43fe52:	xor    DWORD PTR [eax+eax*1+0x58],eax
  43fe56:	xor    DWORD PTR [eax+eax*1+0x20],eax
  43fe5a:	xor    DWORD PTR [eax+eax*1-0x54],eax
  43fe5e:	xor    DWORD PTR [eax+eax*1-0x50],eax
  43fe62:	xor    DWORD PTR [eax+eax*1-0x4c],eax
  43fe66:	xor    DWORD PTR [eax+eax*1-0x48],eax
  43fe6a:	xor    DWORD PTR [eax+eax*1-0x44],eax
  43fe6e:	xor    DWORD PTR [eax+eax*1-0x40],eax
  43fe72:	xor    DWORD PTR [eax+eax*1-0x3c],eax
  43fe76:	xor    DWORD PTR [eax+eax*1-0x38],eax
  43fe7a:	xor    DWORD PTR [eax+eax*1+0x50],eax
  43fe7e:	xor    DWORD PTR [eax+eax*1-0x34],eax
  43fe82:	xor    DWORD PTR [eax+eax*1-0x30],eax
  43fe86:	xor    DWORD PTR [eax+eax*1-0x2c],eax
  43fe8a:	xor    DWORD PTR [eax+eax*1-0x28],eax
  43fe8e:	xor    DWORD PTR [eax+eax*1-0x24],eax
  43fe92:	xor    DWORD PTR [eax+eax*1-0x20],eax
  43fe96:	xor    DWORD PTR [eax+eax*1-0x1c],eax
  43fe9a:	xor    DWORD PTR [eax+eax*1-0x50],eax
  43fe9e:	xor    DWORD PTR [eax+eax*1-0x18],eax
  43fea2:	xor    DWORD PTR [eax+eax*1-0x14],eax
  43fea6:	xor    DWORD PTR [eax+eax*1-0x10],eax
  43feaa:	xor    DWORD PTR [eax+eax*1-0xc],eax
  43feae:	xor    DWORD PTR [eax+eax*1-0x8],eax
  43feb2:	xor    DWORD PTR [eax+eax*1-0x4],eax
  43feb6:	xor    DWORD PTR [eax+eax*1+0x0],eax
  43feba:	xor    al,BYTE PTR [eax+eax*1+0x4]
  43febe:	xor    al,BYTE PTR [eax+eax*1+0x40]
  43fec2:	xor    DWORD PTR [eax+eax*1+0x8],eax
  43fec6:	xor    al,BYTE PTR [eax+eax*1+0xc]
  43feca:	xor    al,BYTE PTR [eax+eax*1+0x10]
  43fece:	xor    al,BYTE PTR [eax+eax*1+0x14]
  43fed2:	xor    al,BYTE PTR [eax+eax*1+0x2c]
  43fed6:	xor    DWORD PTR [eax+eax*1+0x18],eax
  43feda:	xor    al,BYTE PTR [eax+eax*1+0x1c]
  43fede:	xor    al,BYTE PTR [eax+eax*1+0x20]
  43fee2:	xor    al,BYTE PTR [eax+eax*1+0x5c]
  43fee6:	xor    DWORD PTR [eax+eax*1-0x18],eax
  43feea:	xor    BYTE PTR [eax+eax*1+0x8],al
  43feee:	xor    al,BYTE PTR [eax+eax*1+0x24]
  43fef2:	xor    al,BYTE PTR [eax+eax*1+0x28]
  43fef6:	xor    al,BYTE PTR [eax+eax*1+0x2c]
  43fefa:	xor    al,BYTE PTR [eax+eax*1+0x30]
  43fefe:	xor    al,BYTE PTR [eax+eax*1+0x34]
  43ff02:	xor    al,BYTE PTR [eax+eax*1+0x38]
  43ff06:	xor    al,BYTE PTR [eax+eax*1-0x20]
  43ff0a:	xor    DWORD PTR [eax+eax*1+0x3c],eax
  43ff0e:	xor    al,BYTE PTR [eax+eax*1+0x40]
  43ff12:	xor    al,BYTE PTR [eax+eax*1+0x44]
  43ff16:	xor    al,BYTE PTR [eax+eax*1+0x48]
  43ff1a:	xor    al,BYTE PTR [eax+eax*1+0x4c]
  43ff1e:	xor    al,BYTE PTR [eax+eax*1+0x50]
  43ff22:	xor    al,BYTE PTR [eax+eax*1+0x54]
  43ff26:	xor    al,BYTE PTR [eax+eax*1+0x58]
  43ff2a:	xor    al,BYTE PTR [eax+eax*1+0x5c]
  43ff2e:	xor    al,BYTE PTR [eax+eax*1+0x60]
  43ff32:	xor    al,BYTE PTR [eax+eax*1+0x64]
  43ff36:	xor    al,BYTE PTR [eax+eax*1+0x68]
  43ff3a:	xor    al,BYTE PTR [eax+eax*1+0x6c]
  43ff3e:	xor    al,BYTE PTR [eax+eax*1-0x18]
  43ff42:	xor    BYTE PTR [eax+eax*1+0x48],al
  43ff46:	xor    al,BYTE PTR [eax+eax*1+0x70]
  43ff4a:	xor    al,BYTE PTR [eax+eax*1+0x74]
  43ff4e:	xor    al,BYTE PTR [eax+eax*1+0x78]
  43ff52:	xor    al,BYTE PTR [eax+eax*1+0x7c]
  43ff56:	xor    al,BYTE PTR [eax+eax*1-0x80]
  43ff5a:	xor    al,BYTE PTR [eax+eax*1-0x10]
  43ff5e:	xor    BYTE PTR [eax+eax*1-0x7c],al
  43ff62:	xor    al,BYTE PTR [eax+eax*1-0x78]
  43ff66:	xor    al,BYTE PTR [eax+eax*1-0x74]
  43ff6a:	xor    al,BYTE PTR [eax+eax*1-0x70]
  43ff6e:	xor    al,BYTE PTR [eax+eax*1-0x6c]
  43ff72:	xor    al,BYTE PTR [eax+eax*1-0x68]
  43ff76:	xor    al,BYTE PTR [eax+eax*1-0x64]
  43ff7a:	xor    al,BYTE PTR [eax+eax*1-0x60]
  43ff7e:	xor    al,BYTE PTR [eax+eax*1-0x5c]
  43ff82:	xor    al,BYTE PTR [eax+eax*1+0x28]
  43ff86:	xor    al,BYTE PTR [eax+eax*1-0x58]
  43ff8a:	xor    al,BYTE PTR [eax+eax*1+0x3c]
  43ff8e:	xor    al,BYTE PTR [eax+eax*1-0x54]
  43ff92:	xor    al,BYTE PTR [eax+eax*1-0x50]
  43ff96:	xor    al,BYTE PTR [eax+eax*1-0x4c]
  43ff9a:	xor    al,BYTE PTR [eax+eax*1-0x48]
  43ff9e:	xor    al,BYTE PTR [eax+eax*1-0x44]
  43ffa2:	xor    al,BYTE PTR [eax+eax*1-0x14]
  43ffa6:	xor    DWORD PTR [eax+eax*1-0x58],eax
  43ffaa:	xor    BYTE PTR [eax+eax*1+0x0],al
  43ffae:	xor    al,BYTE PTR [eax+eax*1-0x40]
  43ffb2:	xor    al,BYTE PTR [eax+eax*1-0x3c]
  43ffb6:	xor    al,BYTE PTR [eax+eax*1-0x38]
  43ffba:	xor    al,BYTE PTR [eax+eax*1-0x4]
  43ffbe:	xor    DWORD PTR [eax+eax*1-0x34],eax
  43ffc2:	xor    al,BYTE PTR [eax+eax*1+0x20]
  43ffc6:	xor    al,BYTE PTR [eax+eax*1-0x30]
  43ffca:	xor    al,BYTE PTR [eax+eax*1-0x2c]
  43ffce:	xor    al,BYTE PTR [eax+eax*1-0x28]
  43ffd2:	xor    al,BYTE PTR [eax+eax*1-0x24]
  43ffd6:	xor    al,BYTE PTR [eax+eax*1-0x20]
  43ffda:	xor    al,BYTE PTR [eax+eax*1-0x1c]
  43ffde:	xor    al,BYTE PTR [eax+eax*1-0x18]
  43ffe2:	xor    al,BYTE PTR [eax+eax*1-0x14]
  43ffe6:	xor    al,BYTE PTR [eax+eax*1-0x10]
  43ffea:	xor    al,BYTE PTR [eax+eax*1-0xc]
  43ffee:	xor    al,BYTE PTR [eax+eax*1-0x8]
  43fff2:	xor    al,BYTE PTR [eax+eax*1-0x4]
  43fff6:	xor    al,BYTE PTR [eax+eax*1+0x0]
  43fffa:	xor    eax,DWORD PTR [eax+eax*1+0x4]
  43fffe:	xor    eax,DWORD PTR [eax+eax*1-0x30]
  440002:	xor    BYTE PTR [eax+eax*1+0x8],al
  440006:	xor    eax,DWORD PTR [eax+eax*1+0xc]
  44000a:	xor    eax,DWORD PTR [eax+eax*1+0x10]
  44000e:	xor    eax,DWORD PTR [eax+eax*1+0x14]
  440012:	xor    eax,DWORD PTR [eax+eax*1+0x18]
  440016:	xor    eax,DWORD PTR [eax+eax*1+0x1c]
  44001a:	xor    eax,DWORD PTR [eax+eax*1+0x64]
  44001e:	xor    DWORD PTR [eax+eax*1-0x7c],eax
  440022:	xor    DWORD PTR [eax+eax*1+0x20],eax
  440026:	xor    eax,DWORD PTR [eax+eax*1+0x24]
  44002a:	xor    eax,DWORD PTR [eax+eax*1+0x28]
  44002e:	xor    eax,DWORD PTR [eax+eax*1-0x60]
  440032:	xor    eax,DWORD PTR [eax+eax*1-0x5c]
  440036:	xor    eax,DWORD PTR [eax+eax*1-0x58]
  44003a:	xor    eax,DWORD PTR [eax+eax*1-0x54]
  44003e:	xor    eax,DWORD PTR [eax+eax*1-0x50]
  440042:	xor    eax,DWORD PTR [eax+eax*1-0x4c]
  440046:	xor    eax,DWORD PTR [eax+eax*1-0x48]
  44004a:	xor    eax,DWORD PTR [eax+eax*1-0x44]
  44004e:	xor    eax,DWORD PTR [eax+eax*1-0x40]
  440052:	xor    eax,DWORD PTR [eax+eax*1-0x3c]
  440056:	xor    eax,DWORD PTR [eax+eax*1-0x38]
  44005a:	xor    eax,DWORD PTR [eax+eax*1-0x34]
  44005e:	xor    eax,DWORD PTR [eax+eax*1-0x30]
  440062:	xor    eax,DWORD PTR [eax+eax*1-0x2c]
  440066:	xor    eax,DWORD PTR [eax+eax*1-0x28]
  44006a:	xor    eax,DWORD PTR [eax+eax*1-0x24]
  44006e:	xor    eax,DWORD PTR [eax+eax*1-0x20]
  440072:	xor    eax,DWORD PTR [eax+eax*1-0x1c]
  440076:	xor    eax,DWORD PTR [eax+eax*1-0x18]
  44007a:	xor    eax,DWORD PTR [eax+eax*1-0x14]
  44007e:	xor    eax,DWORD PTR [eax+eax*1-0x10]
  440082:	xor    eax,DWORD PTR [eax+eax*1-0xc]
  440086:	xor    eax,DWORD PTR [eax+eax*1-0x8]
  44008a:	xor    eax,DWORD PTR [eax+eax*1-0x4]
  44008e:	xor    eax,DWORD PTR [eax+eax*1+0x0]
  440092:	xor    al,0x44
  440094:	add    BYTE PTR [esp+esi*1],al
  440097:	inc    esp
  440098:	add    ah,cl
  44009a:	xor    eax,DWORD PTR [eax+eax*1+0x8]
  44009e:	xor    al,0x44
  4400a0:	add    BYTE PTR [esp+esi*1],cl
  4400a3:	inc    esp
  4400a4:	add    BYTE PTR [eax],dl
  4400a6:	xor    al,0x44
  4400a8:	add    BYTE PTR [esp+esi*1],dl
  4400ab:	inc    esp
  4400ac:	add    BYTE PTR [eax],bl
  4400ae:	xor    al,0x44
  4400b0:	add    BYTE PTR [esp+esi*1],bl
  4400b3:	inc    esp
  4400b4:	add    BYTE PTR [ebx+esi*1+0x34200044],ch
  4400bb:	inc    esp
  4400bc:	add    BYTE PTR [esp+esi*1],ah
  4400bf:	inc    esp
  4400c0:	add    BYTE PTR [eax],ah
  4400c2:	xor    al,0x44
  4400c4:	add    BYTE PTR [eax],ch
  4400c6:	xor    al,0x44
  4400c8:	add    BYTE PTR [esp+esi*1],ch
  4400cb:	inc    esp
  4400cc:	add    BYTE PTR [eax],dh
  4400ce:	xor    al,0x44
  4400d0:	add    BYTE PTR [esp+esi*1],dh
  4400d3:	inc    esp
  4400d4:	add    BYTE PTR [eax],bh
  4400d6:	xor    al,0x44
  4400d8:	add    BYTE PTR [esp+esi*1],bh
  4400db:	inc    esp
  4400dc:	add    BYTE PTR [eax+0x34],al
  4400df:	inc    esp
  4400e0:	add    BYTE PTR [esp+esi*1+0x44],al
  4400e4:	add    BYTE PTR [esp+esi*1],bl
  4400e7:	inc    esp
  4400e8:	add    BYTE PTR [eax+0x34],cl
  4400eb:	inc    esp
  4400ec:	add    ah,ch
  4400ee:	xor    eax,DWORD PTR [eax+eax*1+0x4c]
  4400f2:	xor    al,0x44
  4400f4:	add    BYTE PTR [eax+0x34],dl
  4400f7:	inc    esp
  4400f8:	add    BYTE PTR [esp+esi*1+0x44],dl
  4400fc:	add    BYTE PTR [eax+0x34],bl
  4400ff:	inc    esp
  440100:	add    BYTE PTR [esp+esi*1+0x44],bl
  440104:	add    BYTE PTR [eax+0x34],ah
  440107:	inc    esp
  440108:	add    BYTE PTR [esp+esi*1+0x44],ah
  44010c:	add    BYTE PTR [eax+0x34],ch
  44010f:	inc    esp
  440110:	add    BYTE PTR [esp+esi*1+0x44],ch
  440114:	add    BYTE PTR [eax+0x34],dh
  440117:	inc    esp
  440118:	add    BYTE PTR [esp+esi*1+0x44],dh
  44011c:	add    BYTE PTR [eax+0x34],bh
  44011f:	inc    esp
  440120:	add    ah,bh
  440122:	xor    eax,DWORD PTR [eax+eax*1+0x7c]
  440126:	xor    al,0x44
  440128:	add    BYTE PTR [eax-0x7bffbbcc],al
  44012e:	xor    al,0x44
  440130:	add    BYTE PTR [eax-0x73ffbbcc],cl
  440136:	xor    al,0x44
  440138:	add    BYTE PTR [eax+0x20004434],dl
  44013e:	xor    al,0x44
  440140:	add    BYTE PTR [esp+esi*1+0x34980044],dl
  440147:	inc    esp
  440148:	add    BYTE PTR [eax],al
  44014a:	xor    al,0x44
  44014c:	add    ah,ch
  44014e:	xor    eax,DWORD PTR [eax+eax*1-0x2c]
  440152:	xor    eax,DWORD PTR [eax+eax*1-0x64]
  440156:	xor    al,0x44
  440158:	add    BYTE PTR [esp+esi*1],al
  44015b:	inc    esp
  44015c:	add    BYTE PTR [eax+0x14004434],ah
  440162:	xor    al,0x44
  440164:	add    BYTE PTR [esp+esi*1+0x34a80044],ah
  44016b:	inc    esp
  44016c:	add    BYTE PTR [esp+esi*1+0x34b00044],ch
  440173:	inc    esp
  440174:	add    BYTE PTR [esp+esi*1+0x34b80044],dh
  44017b:	inc    esp
  44017c:	add    BYTE PTR [esp+esi*1+0x34bc0044],cl
  440183:	inc    esp
  440184:	add    ah,al
  440186:	xor    eax,DWORD PTR [eax+eax*1-0x4c]
  44018a:	xor    al,0x44
  44018c:	add    al,al
  44018e:	xor    al,0x44
  440190:	add    ah,al
  440192:	xor    al,0x44
  440194:	add    BYTE PTR [eax-0x37ffbbcd],bh
  44019a:	xor    al,0x44
  44019c:	add    ah,cl
  44019e:	xor    al,0x44
  4401a0:	add    al,dl
  4401a2:	xor    al,0x44
  4401a4:	add    ah,cl
  4401a6:	xor    eax,DWORD PTR [eax+eax*1-0x2c]
  4401aa:	xor    al,0x44
  4401ac:	add    al,bl
  4401ae:	xor    al,0x44
  4401b0:	add    BYTE PTR [eax+0x40004434],dl
  4401b6:	xor    al,0x44
  4401b8:	add    BYTE PTR [esp+esi*1],bh
  4401bb:	inc    esp
  4401bc:	add    ah,bl
  4401be:	xor    al,0x44
  4401c0:	add    al,ah
  4401c2:	xor    al,0x44
  4401c4:	add    ah,ah
  4401c6:	xor    al,0x44
  4401c8:	add    BYTE PTR [eax-0x5bffbbcc],ch
  4401ce:	xor    al,0x44
  4401d0:	add    al,ch
  4401d2:	xor    al,0x44
  4401d4:	add    ah,ch
  4401d6:	xor    al,0x44
  4401d8:	add    al,dh
  4401da:	xor    al,0x44
  4401dc:	add    BYTE PTR [esp+esi*1],dh
  4401df:	inc    esp
  4401e0:	add    ah,dh
  4401e2:	xor    al,0x44
  4401e4:	add    ah,ah
  4401e6:	xor    al,0x44
  4401e8:	add    al,bh
  4401ea:	xor    al,0x44
  4401ec:	add    ah,ch
  4401ee:	xor    eax,DWORD PTR [eax+eax*1-0x2c]
  4401f2:	xor    eax,DWORD PTR [eax+eax*1-0x4]
  4401f6:	xor    al,0x44
  4401f8:	add    al,al
  4401fa:	xor    al,0x44
  4401fc:	add    BYTE PTR [esp+esi*1],cl
  4401ff:	inc    esp
  440200:	add    BYTE PTR [eax],al
  440202:	xor    eax,0x33f00044
  440207:	inc    esp
  440208:	add    BYTE PTR [esi*1+0x35080044],al
  44020f:	inc    esp
  440210:	add    BYTE PTR [esi*1+0x35100044],cl
  440217:	inc    esp
  440218:	add    BYTE PTR [esi*1+0x35180044],dl
  44021f:	inc    esp
  440220:	add    BYTE PTR [esi*1+0x35200044],bl
  440227:	inc    esp
  440228:	add    BYTE PTR [esi*1+0x35280044],ah
  44022f:	inc    esp
  440230:	add    BYTE PTR [esi*1+0x33f80044],ch
  440237:	inc    esp
  440238:	add    BYTE PTR [eax],dh
  44023a:	xor    eax,0x35340044
  44023f:	inc    esp
  440240:	add    BYTE PTR [eax],dh
  440242:	xor    al,0x44
  440244:	add    BYTE PTR [eax],bh
  440246:	xor    eax,0x353c0044
  44024b:	inc    esp
  44024c:	add    BYTE PTR [eax+0x35],al
  44024f:	inc    esp
  440250:	add    BYTE PTR [ebp+esi*1+0x44],al
  440254:	add    BYTE PTR [eax+0x35],cl
  440257:	inc    esp
  440258:	add    BYTE PTR [ebp+esi*1+0x44],cl
  44025c:	add    BYTE PTR [eax+0x35],dl
  44025f:	inc    esp
  440260:	add    BYTE PTR [eax-0x7ffbbcc],ch
  440266:	xor    al,0x44
  440268:	add    BYTE PTR [ebp+esi*1+0x44],dl
  44026c:	add    BYTE PTR [eax+0x35],bl
  44026f:	inc    esp
  440270:	add    ah,cl
  440272:	xor    eax,DWORD PTR [eax+eax*1-0x8]
  440276:	xor    al,0x44
  440278:	add    BYTE PTR [esi*1+0x33fc0044],bl
  44027f:	inc    esp
  440280:	add    BYTE PTR [ebp+esi*1+0x44],bl
  440284:	add    BYTE PTR [eax],al
  440286:	xor    al,0x44
  440288:	add    BYTE PTR [eax+0x35],ah
  44028b:	inc    esp
  44028c:	add    BYTE PTR [ebp+esi*1+0x44],ah
  440290:	add    BYTE PTR [eax+0x35],ch
  440293:	inc    esp
  440294:	add    BYTE PTR [ebp+esi*1+0x44],ch
  440298:	add    BYTE PTR [esi*1+0x35700044],cl
  44029f:	inc    esp
  4402a0:	add    BYTE PTR [ebp+esi*1+0x44],dh
  4402a4:	add    BYTE PTR [esp+esi*1+0x35080044],bh
  4402ab:	inc    esp
  4402ac:	add    BYTE PTR [eax+0x35],bh
  4402af:	inc    esp
  4402b0:	add    BYTE PTR [esi*1+0x34fc0044],bh
  4402b7:	inc    esp
  4402b8:	add    BYTE PTR [eax+0x35],bl
  4402bb:	inc    esp
  4402bc:	add    BYTE PTR [eax],bh
  4402be:	xor    al,0x44
  4402c0:	add    BYTE PTR [ebp+esi*1+0x44],bh
  4402c4:	add    BYTE PTR [eax+0x35],cl
  4402c7:	inc    esp
  4402c8:	add    BYTE PTR [eax-0x7bffbbcb],al
  4402ce:	xor    eax,0x35880044
  4402d3:	inc    esp
  4402d4:	add    BYTE PTR [ebp+esi*1+0x34fc0044],cl
  4402db:	inc    esp
  4402dc:	add    al,cl
  4402de:	xor    eax,DWORD PTR [eax+eax*1+0x4c]
  4402e2:	xor    al,0x44
  4402e4:	add    BYTE PTR [eax-0xbffbbcb],dl
  4402ea:	xor    eax,DWORD PTR [eax+eax*1+0x0]
  4402ee:	xor    al,0x44
  4402f0:	add    BYTE PTR [ebp+esi*1+0x44],bh
  4402f4:	add    BYTE PTR [eax+0x34],dl
  4402f7:	inc    esp
  4402f8:	add    BYTE PTR [ebp+esi*1+0x33fc0044],dl
  4402ff:	inc    esp
  440300:	add    BYTE PTR [eax-0x63ffbbcb],bl
  440306:	xor    eax,0x35500044
  44030b:	inc    esp
  44030c:	add    ah,dh
  44030e:	xor    al,0x44
  440310:	add    BYTE PTR [eax-0x6bffbbcb],ah
  440316:	xor    eax,0x34c00044
  44031b:	inc    esp
  44031c:	add    BYTE PTR [ebp+esi*1+0x34880044],ah
  440323:	inc    esp
  440324:	add    BYTE PTR [eax-0x53ffbbcb],ch
  44032a:	xor    eax,0x33e00044
  44032f:	inc    esp
  440330:	add    BYTE PTR [esp+esi*1+0x44],bh
  440334:	add    BYTE PTR [eax-0x4bffbbcb],dh
  44033a:	xor    eax,0x34cc0044
  44033f:	inc    esp
  440340:	add    BYTE PTR [eax-0x43ffbbcb],bh
  440346:	xor    eax,0x35a80044
  44034b:	inc    esp
  44034c:	add    al,al
  44034e:	xor    eax,0x35c80044
  440353:	inc    esp
  440354:	add    ah,cl
  440356:	xor    eax,0x35d00044
  44035b:	inc    esp
  44035c:	add    ah,dl
  44035e:	xor    eax,0x35d80044
  440363:	inc    esp
  440364:	add    ah,bl
  440366:	xor    eax,0x35d00044
  44036b:	inc    esp
  44036c:	add    al,ah
  44036e:	xor    eax,0x35e40044
  440373:	inc    esp
  440374:	add    al,ch
  440376:	xor    eax,0x35ec0044
  44037b:	inc    esp
  44037c:	add    al,dh
  44037e:	xor    eax,0x35f40044
  440383:	inc    esp
  440384:	add    al,bh
  440386:	xor    eax,0x35fc0044
  44038b:	inc    esp
  44038c:	add    BYTE PTR [eax],al
  44038e:	ss inc esp
  440390:	add    BYTE PTR [esi+esi*1],al
  440393:	inc    esp
  440394:	add    BYTE PTR [eax],cl
  440396:	ss inc esp
  440398:	add    BYTE PTR [esi+esi*1],cl
  44039b:	inc    esp
  44039c:	add    BYTE PTR [eax],dl
  44039e:	ss inc esp
  4403a0:	add    BYTE PTR [esi+esi*1],dl
  4403a3:	inc    esp
  4403a4:	add    BYTE PTR [eax],bl
  4403a6:	ss inc esp
  4403a8:	add    BYTE PTR [esi+esi*1],bl
  4403ab:	inc    esp
  4403ac:	add    BYTE PTR [eax],ah
  4403ae:	ss inc esp
  4403b0:	add    BYTE PTR [esi+esi*1],ah
  4403b3:	inc    esp
  4403b4:	add    BYTE PTR [eax],ch
  4403b6:	ss inc esp
  4403b8:	add    BYTE PTR [esi+esi*1],ch
  4403bb:	inc    esp
  4403bc:	add    BYTE PTR [eax],dh
  4403be:	ss inc esp
  4403c0:	add    BYTE PTR [esi+esi*1],dh
  4403c3:	inc    esp
  4403c4:	add    BYTE PTR [eax],bh
  4403c6:	ss inc esp
  4403c8:	add    BYTE PTR [esi+esi*1],bh
  4403cb:	inc    esp
  4403cc:	add    BYTE PTR [eax+0x36],al
  4403cf:	inc    esp
  4403d0:	add    ah,dh
  4403d2:	xor    eax,0x36440044
  4403d7:	inc    esp
  4403d8:	add    BYTE PTR [eax+0x36],cl
  4403db:	inc    esp
  4403dc:	add    BYTE PTR [esi+esi*1+0x44],cl
  4403e0:	add    BYTE PTR [eax+0x36],dl
  4403e3:	inc    esp
  4403e4:	add    BYTE PTR [esi+esi*1+0x44],dl
  4403e8:	add    BYTE PTR [eax+0x36],bl
  4403eb:	inc    esp
  4403ec:	add    BYTE PTR [esi+esi*1+0x44],bl
  4403f0:	add    BYTE PTR [eax+0x36],ah
  4403f3:	inc    esp
  4403f4:	add    BYTE PTR [esi+esi*1+0x44],ah
  4403f8:	add    BYTE PTR [eax+0x36],ch
  4403fb:	inc    esp
  4403fc:	add    BYTE PTR [esi+esi*1+0x44],ch
  440400:	add    BYTE PTR [esi+esi*1+0x44],ah
  440404:	add    BYTE PTR [eax+0x36],dh
  440407:	inc    esp
  440408:	add    BYTE PTR [esi+esi*1+0x44],dh
  44040c:	add    BYTE PTR [eax+0x36],bh
  44040f:	inc    esp
  440410:	add    BYTE PTR [esi+esi*1+0x44],bh
  440414:	add    BYTE PTR [eax-0x7bffbbca],al
  44041a:	ss inc esp
  44041c:	add    ah,cl
  44041e:	xor    eax,0x36880044
  440423:	inc    esp
  440424:	add    BYTE PTR [esi+esi*1+0x36900044],cl
  44042b:	inc    esp
  44042c:	add    BYTE PTR [esi+esi*1+0x36980044],dl
  440433:	inc    esp
  440434:	add    BYTE PTR [esi+esi*1+0x36a00044],bl
  44043b:	inc    esp
  44043c:	add    BYTE PTR [esi+esi*1+0x35f00044],ah
  440443:	inc    esp
  440444:	add    BYTE PTR [eax-0x53ffbbca],ch
  44044a:	ss inc esp
  44044c:	add    BYTE PTR [eax-0x4bffbbca],dh
  440452:	ss inc esp
  440454:	add    BYTE PTR [eax-0x43ffbbca],bh
  44045a:	ss inc esp
  44045c:	add    al,al
  44045e:	ss inc esp
  440460:	add    ah,al
  440462:	ss inc esp
  440464:	add    al,cl
  440466:	ss inc esp
  440468:	add    ah,cl
  44046a:	ss inc esp
  44046c:	add    al,dl
  44046e:	ss inc esp
  440470:	add    ah,dl
  440472:	ss inc esp
  440474:	add    al,bl
  440476:	ss inc esp
  440478:	add    ah,bl
  44047a:	ss inc esp
  44047c:	add    BYTE PTR [esi+esi*1+0x35f80044],bh
  440483:	inc    esp
  440484:	add    al,ah
  440486:	ss inc esp
  440488:	add    ah,ah
  44048a:	ss inc esp
  44048c:	add    al,ch
  44048e:	ss inc esp
  440490:	add    ah,ch
  440492:	ss inc esp
  440494:	add    BYTE PTR [eax+0x36],al
  440497:	inc    esp
  440498:	add    al,dh
  44049a:	ss inc esp
  44049c:	add    ah,bh
  44049e:	xor    eax,0x36f40044
  4404a3:	inc    esp
  4404a4:	add    al,bh
  4404a6:	ss inc esp
  4404a8:	add    ah,bh
  4404aa:	ss inc esp
  4404ac:	add    BYTE PTR [eax],al
  4404ae:	aaa    
  4404af:	inc    esp
  4404b0:	add    BYTE PTR [edi+esi*1],al
  4404b3:	inc    esp
  4404b4:	add    BYTE PTR [eax],cl
  4404b6:	aaa    
  4404b7:	inc    esp
  4404b8:	add    BYTE PTR [edi+esi*1],cl
  4404bb:	inc    esp
  4404bc:	add    BYTE PTR [eax],dl
  4404be:	aaa    
  4404bf:	inc    esp
  4404c0:	add    BYTE PTR [esi+esi*1],dl
  4404c3:	inc    esp
  4404c4:	add    BYTE PTR [edi+esi*1],dl
  4404c7:	inc    esp
  4404c8:	add    BYTE PTR [eax+0x18004436],ch
  4404ce:	aaa    
  4404cf:	inc    esp
  4404d0:	add    BYTE PTR [edi+esi*1],bl
  4404d3:	inc    esp
  4404d4:	add    BYTE PTR [eax],ah
  4404d6:	aaa    
  4404d7:	inc    esp
  4404d8:	add    BYTE PTR [eax],cl
  4404da:	ss inc esp
  4404dc:	add    BYTE PTR [edi+esi*1],ah
  4404df:	inc    esp
  4404e0:	add    BYTE PTR [eax],ah
  4404e2:	ss inc esp
  4404e4:	add    BYTE PTR [esi+esi*1],dl
  4404e7:	inc    esp
  4404e8:	add    ah,bh
  4404ea:	ss inc esp
  4404ec:	add    BYTE PTR [eax],ch
  4404ee:	aaa    
  4404ef:	inc    esp
  4404f0:	add    BYTE PTR [edi+esi*1],ch
  4404f3:	inc    esp
  4404f4:	add    BYTE PTR [esi+esi*1],bh
  4404f7:	inc    esp
  4404f8:	add    BYTE PTR [eax],dh
  4404fa:	aaa    
  4404fb:	inc    esp
  4404fc:	add    BYTE PTR [edi+esi*1],dh
  4404ff:	inc    esp
  440500:	add    BYTE PTR [eax],bh
  440502:	aaa    
  440503:	inc    esp
  440504:	add    BYTE PTR [edi+esi*1],bh
  440507:	inc    esp
  440508:	add    BYTE PTR [eax+0x37],al
  44050b:	inc    esp
  44050c:	add    BYTE PTR [edi+esi*1+0x44],al
  440510:	add    BYTE PTR [esi+esi*1+0x44],ch
  440514:	add    ah,al
  440516:	ss inc esp
  440518:	add    BYTE PTR [eax+0x37],cl
  44051b:	inc    esp
  44051c:	add    BYTE PTR [esi+esi*1],bl
  44051f:	inc    esp
  440520:	add    BYTE PTR [esi+esi*1+0x373c0044],dl
  440527:	inc    esp
  440528:	add    BYTE PTR [edi+esi*1+0x44],cl
  44052c:	add    BYTE PTR [eax+0x37],dl
  44052f:	inc    esp
  440530:	add    BYTE PTR [edi+esi*1+0x44],dl
  440534:	add    BYTE PTR [eax+0x37],bl
  440537:	inc    esp
  440538:	add    BYTE PTR [edi+esi*1+0x44],bl
  44053c:	add    BYTE PTR [eax+0x37],ah
  44053f:	inc    esp
  440540:	add    BYTE PTR [edi+esi*1+0x44],ah
  440544:	add    BYTE PTR [eax+0x37],ch
  440547:	inc    esp
  440548:	add    BYTE PTR [edi+esi*1+0x44],ch
  44054c:	add    BYTE PTR [eax+0x37],dh
  44054f:	inc    esp
  440550:	add    BYTE PTR [edi+esi*1+0x44],dh
  440554:	add    BYTE PTR [edi+esi*1+0x44],dl
  440558:	add    BYTE PTR [eax+0x37],bh
  44055b:	inc    esp
  44055c:	add    BYTE PTR [edi+esi*1+0x44],bh
  440560:	add    BYTE PTR [esi+esi*1+0x37480044],bh
  440567:	inc    esp
  440568:	add    BYTE PTR [eax-0x73ffbbc9],al
  44056e:	ss inc esp
  440570:	add    BYTE PTR [edi+esi*1+0x372c0044],al
  440577:	inc    esp
  440578:	add    BYTE PTR [eax-0x73ffbbc9],cl
  44057e:	aaa    
  44057f:	inc    esp
  440580:	add    BYTE PTR [eax-0x6bffbbc9],dl
  440586:	aaa    
  440587:	inc    esp
  440588:	add    BYTE PTR [eax+0x24004437],bl
  44058e:	aaa    
  44058f:	inc    esp
  440590:	add    al,dl
  440592:	xor    eax,0x364c0044
  440597:	inc    esp
  440598:	add    al,bh
  44059a:	xor    eax,0x379c0044
  44059f:	inc    esp
  4405a0:	add    BYTE PTR [eax-0x67ffbbc9],ah
  4405a6:	ss inc esp
  4405a8:	add    BYTE PTR [edi+esi*1+0x37a80044],ah
  4405af:	inc    esp
  4405b0:	add    BYTE PTR [edi+esi*1+0x37b00044],ch
  4405b7:	inc    esp
  4405b8:	add    BYTE PTR [edi+esi*1+0x36040044],dh
  4405bf:	inc    esp
  4405c0:	add    BYTE PTR [esi+esi*1+0x37b80044],dl
  4405c7:	inc    esp
  4405c8:	add    BYTE PTR [eax+0x37],ah
  4405cb:	inc    esp
  4405cc:	add    BYTE PTR [edi+esi*1+0x37c00044],bh
  4405d3:	inc    esp
  4405d4:	add    ah,al
  4405d6:	aaa    
  4405d7:	inc    esp
  4405d8:	add    al,dl
  4405da:	ss inc esp
  4405dc:	add    BYTE PTR [eax],ah
  4405de:	ss inc esp
  4405e0:	add    BYTE PTR [eax],ah
  4405e2:	aaa    
  4405e3:	inc    esp
  4405e4:	add    al,cl
  4405e6:	aaa    
  4405e7:	inc    esp
  4405e8:	add    ah,cl
  4405ea:	aaa    
  4405eb:	inc    esp
  4405ec:	add    al,dl
  4405ee:	aaa    
  4405ef:	inc    esp
  4405f0:	add    BYTE PTR [eax-0x2bffbbca],ah
  4405f6:	aaa    
  4405f7:	inc    esp
  4405f8:	add    BYTE PTR [eax+0x36],dh
  4405fb:	inc    esp
  4405fc:	add    al,bl
  4405fe:	aaa    
  4405ff:	inc    esp
  440600:	add    BYTE PTR [eax+0x37],dh
  440603:	inc    esp
  440604:	add    ah,bl
  440606:	aaa    
  440607:	inc    esp
  440608:	add    al,ah
  44060a:	aaa    
  44060b:	inc    esp
  44060c:	add    BYTE PTR [edi+esi*1],dl
  44060f:	inc    esp
  440610:	add    BYTE PTR [edi+esi*1+0x37e40044],dh
  440617:	inc    esp
  440618:	add    al,ch
  44061a:	aaa    
  44061b:	inc    esp
  44061c:	add    ah,ch
  44061e:	aaa    
  44061f:	inc    esp
  440620:	add    al,dh
  440622:	aaa    
  440623:	inc    esp
  440624:	add    ah,dh
  440626:	aaa    
  440627:	inc    esp
  440628:	add    al,bh
  44062a:	aaa    
  44062b:	inc    esp
  44062c:	add    ah,bh
  44062e:	aaa    
  44062f:	inc    esp
  440630:	add    BYTE PTR [eax],al
  440632:	cmp    BYTE PTR [eax+eax*1-0x3c],al
  440636:	ss inc esp
  440638:	add    BYTE PTR [eax+edi*1],al
  44063b:	inc    esp
  44063c:	add    BYTE PTR [eax+0x8004437],dh
  440642:	cmp    BYTE PTR [eax+eax*1-0x38],al
  440646:	xor    eax,0x380c0044
  44064b:	inc    esp
  44064c:	add    BYTE PTR [eax],dl
  44064e:	cmp    BYTE PTR [eax+eax*1+0x14],al
  440652:	cmp    BYTE PTR [eax+eax*1+0x18],al
  440656:	cmp    BYTE PTR [eax+eax*1-0x8],al
  44065a:	ss inc esp
  44065c:	add    BYTE PTR [eax+0x37],ah
  44065f:	inc    esp
  440660:	add    BYTE PTR [esi+esi*1+0x44],bl
  440664:	add    BYTE PTR [eax+edi*1],bl
  440667:	inc    esp
  440668:	add    BYTE PTR [eax],ah
  44066a:	cmp    BYTE PTR [eax+eax*1+0x24],al
  44066e:	cmp    BYTE PTR [eax+eax*1+0x40],al
  440672:	xor    eax,DWORD PTR [eax+eax*1+0x44]
  440676:	xor    eax,DWORD PTR [eax+eax*1+0x48]
  44067a:	xor    eax,DWORD PTR [eax+eax*1+0x4c]
  44067e:	xor    eax,DWORD PTR [eax+eax*1+0x50]
  440682:	xor    eax,DWORD PTR [eax+eax*1+0x54]
  440686:	xor    eax,DWORD PTR [eax+eax*1+0x58]
  44068a:	xor    eax,DWORD PTR [eax+eax*1+0x58]
  44068e:	xor    eax,DWORD PTR [eax+eax*1+0x44]
  440692:	xor    eax,DWORD PTR [eax+eax*1+0x5c]
  440696:	xor    eax,DWORD PTR [eax+eax*1+0x58]
  44069a:	xor    eax,DWORD PTR [eax+eax*1+0x60]
  44069e:	xor    eax,DWORD PTR [eax+eax*1+0x64]
  4406a2:	xor    eax,DWORD PTR [eax+eax*1+0x68]
  4406a6:	xor    eax,DWORD PTR [eax+eax*1+0x4c]
  4406aa:	xor    eax,DWORD PTR [eax+eax*1+0x6c]
  4406ae:	xor    eax,DWORD PTR [eax+eax*1+0x68]
  4406b2:	xor    eax,DWORD PTR [eax+eax*1+0x70]
  4406b6:	xor    eax,DWORD PTR [eax+eax*1+0x64]
  4406ba:	xor    eax,DWORD PTR [eax+eax*1+0x40]
  4406be:	xor    eax,DWORD PTR [eax+eax*1+0x74]
  4406c2:	xor    eax,DWORD PTR [eax+eax*1+0x78]
  4406c6:	xor    eax,DWORD PTR [eax+eax*1+0x48]
  4406ca:	xor    eax,DWORD PTR [eax+eax*1+0x4c]
  4406ce:	xor    eax,DWORD PTR [eax+eax*1+0x6c]
  4406d2:	xor    eax,DWORD PTR [eax+eax*1+0x40]
  4406d6:	xor    eax,DWORD PTR [eax+eax*1+0x78]
  4406da:	xor    eax,DWORD PTR [eax+eax*1+0x50]
  4406de:	xor    eax,DWORD PTR [eax+eax*1+0x6c]
  4406e2:	xor    eax,DWORD PTR [eax+eax*1+0x7c]
  4406e6:	xor    eax,DWORD PTR [eax+eax*1+0x4c]
  4406ea:	xor    eax,DWORD PTR [eax+eax*1+0x60]
  4406ee:	xor    eax,DWORD PTR [eax+eax*1-0x80]
  4406f2:	xor    eax,DWORD PTR [eax+eax*1+0x7c]
  4406f6:	xor    eax,DWORD PTR [eax+eax*1+0x54]
  4406fa:	xor    eax,DWORD PTR [eax+eax*1-0x7c]
  4406fe:	xor    eax,DWORD PTR [eax+eax*1+0x70]
  440702:	xor    eax,DWORD PTR [eax+eax*1-0x7c]
  440706:	xor    eax,DWORD PTR [eax+eax*1+0x48]
  44070a:	xor    eax,DWORD PTR [eax+eax*1+0x60]
  44070e:	xor    eax,DWORD PTR [eax+eax*1+0x68]
  440712:	xor    eax,DWORD PTR [eax+eax*1+0x40]
  440716:	xor    eax,DWORD PTR [eax+eax*1+0x4c]
  44071a:	xor    eax,DWORD PTR [eax+eax*1+0x4c]
  44071e:	xor    eax,DWORD PTR [eax+eax*1+0x68]
  440722:	xor    eax,DWORD PTR [eax+eax*1+0x48]
  440726:	xor    eax,DWORD PTR [eax+eax*1+0x74]
  44072a:	xor    eax,DWORD PTR [eax+eax*1+0x4c]
  44072e:	xor    eax,DWORD PTR [eax+eax*1+0x78]
  440732:	xor    eax,DWORD PTR [eax+eax*1+0x74]
  440736:	xor    eax,DWORD PTR [eax+eax*1+0x6c]
  44073a:	xor    eax,DWORD PTR [eax+eax*1-0x7c]
  44073e:	xor    eax,DWORD PTR [eax+eax*1+0x5c]
  440742:	xor    eax,DWORD PTR [eax+eax*1+0x6c]
  440746:	xor    eax,DWORD PTR [eax+eax*1-0x78]
  44074a:	xor    eax,DWORD PTR [eax+eax*1+0x7c]
  44074e:	xor    eax,DWORD PTR [eax+eax*1+0x5c]
  440752:	xor    eax,DWORD PTR [eax+eax*1+0x7c]
  440756:	xor    eax,DWORD PTR [eax+eax*1+0x68]
  44075a:	xor    eax,DWORD PTR [eax+eax*1+0x64]
  44075e:	xor    eax,DWORD PTR [eax+eax*1-0x74]
  440762:	xor    eax,DWORD PTR [eax+eax*1+0x50]
  440766:	xor    eax,DWORD PTR [eax+eax*1+0x5c]
  44076a:	xor    eax,DWORD PTR [eax+eax*1+0x4c]
  44076e:	xor    eax,DWORD PTR [eax+eax*1+0x70]
  440772:	xor    eax,DWORD PTR [eax+eax*1+0x74]
  440776:	xor    eax,DWORD PTR [eax+eax*1+0x44]
  44077a:	xor    eax,DWORD PTR [eax+eax*1+0x40]
  44077e:	xor    eax,DWORD PTR [eax+eax*1-0x80]
  440782:	xor    eax,DWORD PTR [eax+eax*1-0x78]
  440786:	xor    eax,DWORD PTR [eax+eax*1+0x40]
  44078a:	xor    eax,DWORD PTR [eax+eax*1+0x7c]
  44078e:	xor    eax,DWORD PTR [eax+eax*1+0x54]
  440792:	xor    eax,DWORD PTR [eax+eax*1+0x68]
  440796:	xor    eax,DWORD PTR [eax+eax*1-0x70]
  44079a:	xor    eax,DWORD PTR [eax+eax*1-0x78]
  44079e:	xor    eax,DWORD PTR [eax+eax*1+0x60]
  4407a2:	xor    eax,DWORD PTR [eax+eax*1+0x54]
  4407a6:	xor    eax,DWORD PTR [eax+eax*1+0x7c]
  4407aa:	xor    eax,DWORD PTR [eax+eax*1+0x58]
  4407ae:	xor    eax,DWORD PTR [eax+eax*1+0x48]
  4407b2:	xor    eax,DWORD PTR [eax+eax*1+0x74]
  4407b6:	xor    eax,DWORD PTR [eax+eax*1+0x70]
  4407ba:	xor    eax,DWORD PTR [eax+eax*1+0x44]
  4407be:	xor    eax,DWORD PTR [eax+eax*1+0x54]
  4407c2:	xor    eax,DWORD PTR [eax+eax*1+0x40]
  4407c6:	xor    eax,DWORD PTR [eax+eax*1-0x70]
  4407ca:	xor    eax,DWORD PTR [eax+eax*1+0x70]
  4407ce:	xor    eax,DWORD PTR [eax+eax*1+0x48]
  4407d2:	xor    eax,DWORD PTR [eax+eax*1+0x58]
  4407d6:	xor    eax,DWORD PTR [eax+eax*1+0x54]
  4407da:	xor    eax,DWORD PTR [eax+eax*1+0x70]
  4407de:	xor    eax,DWORD PTR [eax+eax*1+0x70]
  4407e2:	xor    eax,DWORD PTR [eax+eax*1+0x78]
  4407e6:	xor    eax,DWORD PTR [eax+eax*1-0x78]
  4407ea:	xor    eax,DWORD PTR [eax+eax*1-0x70]
  4407ee:	xor    eax,DWORD PTR [eax+eax*1+0x40]
  4407f2:	xor    eax,DWORD PTR [eax+eax*1+0x5c]
  4407f6:	xor    eax,DWORD PTR [eax+eax*1-0x74]
  4407fa:	xor    eax,DWORD PTR [eax+eax*1+0x50]
  4407fe:	xor    eax,DWORD PTR [eax+eax*1+0x48]
  440802:	xor    eax,DWORD PTR [eax+eax*1+0x54]
  440806:	xor    eax,DWORD PTR [eax+eax*1-0x74]
  44080a:	xor    eax,DWORD PTR [eax+eax*1+0x78]
  44080e:	xor    eax,DWORD PTR [eax+eax*1+0x44]
  440812:	xor    eax,DWORD PTR [eax+eax*1+0x50]
  440816:	xor    eax,DWORD PTR [eax+eax*1-0x78]
  44081a:	xor    eax,DWORD PTR [eax+eax*1+0x4c]
  44081e:	xor    eax,DWORD PTR [eax+eax*1+0x54]
  440822:	xor    eax,DWORD PTR [eax+eax*1+0x50]
  440826:	xor    eax,DWORD PTR [eax+eax*1-0x74]
  44082a:	xor    eax,DWORD PTR [eax+eax*1+0x44]
  44082e:	xor    eax,DWORD PTR [eax+eax*1+0x58]
  440832:	xor    eax,DWORD PTR [eax+eax*1+0x54]
  440836:	xor    eax,DWORD PTR [eax+eax*1+0x44]
  44083a:	xor    eax,DWORD PTR [eax+eax*1+0x68]
  44083e:	xor    eax,DWORD PTR [eax+eax*1+0x5c]
  440842:	xor    eax,DWORD PTR [eax+eax*1-0x70]
  440846:	xor    eax,DWORD PTR [eax+eax*1+0x7c]
  44084a:	xor    eax,DWORD PTR [eax+eax*1-0x7c]
  44084e:	xor    eax,DWORD PTR [eax+eax*1-0x74]
  440852:	xor    eax,DWORD PTR [eax+eax*1+0x70]
  440856:	xor    eax,DWORD PTR [eax+eax*1+0x7c]
  44085a:	xor    eax,DWORD PTR [eax+eax*1+0x48]
  44085e:	xor    eax,DWORD PTR [eax+eax*1+0x7c]
  440862:	xor    eax,DWORD PTR [eax+eax*1+0x64]
  440866:	xor    eax,DWORD PTR [eax+eax*1+0x6c]
  44086a:	xor    eax,DWORD PTR [eax+eax*1-0x70]
  44086e:	xor    eax,DWORD PTR [eax+eax*1+0x70]
  440872:	xor    eax,DWORD PTR [eax+eax*1-0x78]
  440876:	xor    eax,DWORD PTR [eax+eax*1-0x74]
  44087a:	xor    eax,DWORD PTR [eax+eax*1+0x4c]
  44087e:	xor    eax,DWORD PTR [eax+eax*1-0x80]
  440882:	xor    eax,DWORD PTR [eax+eax*1+0x54]
  440886:	xor    eax,DWORD PTR [eax+eax*1+0x50]
  44088a:	xor    eax,DWORD PTR [eax+eax*1-0x74]
  44088e:	xor    eax,DWORD PTR [eax+eax*1+0x4c]
  440892:	xor    eax,DWORD PTR [eax+eax*1+0x60]
  440896:	xor    eax,DWORD PTR [eax+eax*1+0x4c]
  44089a:	xor    eax,DWORD PTR [eax+eax*1+0x50]
  44089e:	xor    eax,DWORD PTR [eax+eax*1+0x48]
  4408a2:	xor    eax,DWORD PTR [eax+eax*1+0x74]
  4408a6:	xor    eax,DWORD PTR [eax+eax*1-0x7c]
  4408aa:	xor    eax,DWORD PTR [eax+eax*1+0x48]
  4408ae:	xor    eax,DWORD PTR [eax+eax*1+0x54]
  4408b2:	xor    eax,DWORD PTR [eax+eax*1+0x68]
  4408b6:	xor    eax,DWORD PTR [eax+eax*1+0x40]
  4408ba:	xor    eax,DWORD PTR [eax+eax*1+0x78]
  4408be:	xor    eax,DWORD PTR [eax+eax*1+0x7c]
  4408c2:	xor    eax,DWORD PTR [eax+eax*1-0x74]
  4408c6:	xor    eax,DWORD PTR [eax+eax*1-0x70]
  4408ca:	xor    eax,DWORD PTR [eax+eax*1+0x54]
  4408ce:	xor    eax,DWORD PTR [eax+eax*1-0x78]
  4408d2:	xor    eax,DWORD PTR [eax+eax*1+0x74]
  4408d6:	xor    eax,DWORD PTR [eax+eax*1+0x48]
  4408da:	xor    eax,DWORD PTR [eax+eax*1+0x74]
  4408de:	xor    eax,DWORD PTR [eax+eax*1+0x7c]
  4408e2:	xor    eax,DWORD PTR [eax+eax*1+0x70]
  4408e6:	xor    eax,DWORD PTR [eax+eax*1+0x7c]
  4408ea:	xor    eax,DWORD PTR [eax+eax*1-0x70]
  4408ee:	xor    eax,DWORD PTR [eax+eax*1+0x6c]
  4408f2:	xor    eax,DWORD PTR [eax+eax*1+0x58]
  4408f6:	xor    eax,DWORD PTR [eax+eax*1+0x7c]
  4408fa:	xor    eax,DWORD PTR [eax+eax*1-0x70]
  4408fe:	xor    eax,DWORD PTR [eax+eax*1-0x74]
  440902:	xor    eax,DWORD PTR [eax+eax*1-0x80]
  440906:	xor    eax,DWORD PTR [eax+eax*1+0x5c]
  44090a:	xor    eax,DWORD PTR [eax+eax*1+0x48]
  44090e:	xor    eax,DWORD PTR [eax+eax*1+0x4c]
  440912:	xor    eax,DWORD PTR [eax+eax*1+0x54]
  440916:	xor    eax,DWORD PTR [eax+eax*1-0x7c]
  44091a:	xor    eax,DWORD PTR [eax+eax*1+0x5c]
  44091e:	xor    eax,DWORD PTR [eax+eax*1-0x80]
  440922:	xor    eax,DWORD PTR [eax+eax*1+0x68]
  440926:	xor    eax,DWORD PTR [eax+eax*1+0x7c]
  44092a:	xor    eax,DWORD PTR [eax+eax*1+0x50]
  44092e:	xor    eax,DWORD PTR [eax+eax*1+0x64]
  440932:	xor    eax,DWORD PTR [eax+eax*1+0x50]
  440936:	xor    eax,DWORD PTR [eax+eax*1+0x74]
  44093a:	xor    eax,DWORD PTR [eax+eax*1+0x50]
  44093e:	xor    eax,DWORD PTR [eax+eax*1+0x44]
  440942:	xor    eax,DWORD PTR [eax+eax*1-0x74]
  440946:	xor    eax,DWORD PTR [eax+eax*1+0x64]
  44094a:	xor    eax,DWORD PTR [eax+eax*1+0x40]
  44094e:	xor    eax,DWORD PTR [eax+eax*1+0x70]
  440952:	xor    eax,DWORD PTR [eax+eax*1+0x60]
  440956:	xor    eax,DWORD PTR [eax+eax*1+0x6c]
  44095a:	xor    eax,DWORD PTR [eax+eax*1+0x58]
  44095e:	xor    eax,DWORD PTR [eax+eax*1-0x7c]
  440962:	xor    eax,DWORD PTR [eax+eax*1+0x7c]
  440966:	xor    eax,DWORD PTR [eax+eax*1-0x70]
  44096a:	xor    eax,DWORD PTR [eax+eax*1-0x70]
  44096e:	xor    eax,DWORD PTR [eax+eax*1+0x70]
  440972:	xor    eax,DWORD PTR [eax+eax*1+0x7c]
  440976:	xor    eax,DWORD PTR [eax+eax*1+0x48]
  44097a:	xor    eax,DWORD PTR [eax+eax*1+0x6c]
  44097e:	xor    eax,DWORD PTR [eax+eax*1+0x50]
  440982:	xor    eax,DWORD PTR [eax+eax*1+0x40]
  440986:	xor    eax,DWORD PTR [eax+eax*1-0x70]
  44098a:	xor    eax,DWORD PTR [eax+eax*1-0x70]
  44098e:	xor    eax,DWORD PTR [eax+eax*1+0x2c]
  440992:	cmp    BYTE PTR [eax+eax*1+0x30],al
  440996:	cmp    BYTE PTR [eax+eax*1+0x34],al
  44099a:	cmp    BYTE PTR [eax+eax*1+0x38],al
  44099e:	cmp    BYTE PTR [eax+eax*1+0x3c],al
  4409a2:	cmp    BYTE PTR [eax+eax*1+0x40],al
  4409a6:	cmp    BYTE PTR [eax+eax*1+0x44],al
  4409aa:	cmp    BYTE PTR [eax+eax*1+0x48],al
  4409ae:	cmp    BYTE PTR [eax+eax*1+0x4c],al
  4409b2:	cmp    BYTE PTR [eax+eax*1+0x50],al
  4409b6:	cmp    BYTE PTR [eax+eax*1+0x50],al
  4409ba:	cmp    BYTE PTR [eax+eax*1+0x54],al
  4409be:	cmp    BYTE PTR [eax+eax*1+0x54],al
  4409c2:	cmp    BYTE PTR [eax+eax*1+0x58],al
  4409c6:	cmp    BYTE PTR [eax+eax*1+0x5c],al
  4409ca:	cmp    BYTE PTR [eax+eax*1+0x60],al
  4409ce:	cmp    BYTE PTR [eax+eax*1+0x64],al
  4409d2:	cmp    BYTE PTR [eax+eax*1+0x68],al
  4409d6:	cmp    BYTE PTR [eax+eax*1+0x6c],al
  4409da:	cmp    BYTE PTR [eax+eax*1+0x70],al
  4409de:	cmp    BYTE PTR [eax+eax*1+0x74],al
  4409e2:	cmp    BYTE PTR [eax+eax*1+0x78],al
  4409e6:	cmp    BYTE PTR [eax+eax*1+0x7c],al
  4409ea:	cmp    BYTE PTR [eax+eax*1+0x64],al
  4409ee:	cmp    BYTE PTR [eax+eax*1-0x80],al
  4409f2:	cmp    BYTE PTR [eax+eax*1-0x7c],al
  4409f6:	cmp    BYTE PTR [eax+eax*1-0x78],al
  4409fa:	cmp    BYTE PTR [eax+eax*1-0x74],al
  4409fe:	cmp    BYTE PTR [eax+eax*1-0x70],al
  440a02:	cmp    BYTE PTR [eax+eax*1-0x6c],al
  440a06:	cmp    BYTE PTR [eax+eax*1-0x68],al
  440a0a:	cmp    BYTE PTR [eax+eax*1-0x64],al
  440a0e:	cmp    BYTE PTR [eax+eax*1-0x60],al
  440a12:	cmp    BYTE PTR [eax+eax*1-0x5c],al
  440a16:	cmp    BYTE PTR [eax+eax*1-0x58],al
  440a1a:	cmp    BYTE PTR [eax+eax*1+0x78],al
  440a1e:	cmp    BYTE PTR [eax+eax*1+0x38],al
  440a22:	cmp    BYTE PTR [eax+eax*1-0x54],al
  440a26:	cmp    BYTE PTR [eax+eax*1-0x78],al
  440a2a:	cmp    BYTE PTR [eax+eax*1-0x80],al
  440a2e:	cmp    BYTE PTR [eax+eax*1-0x50],al
  440a32:	cmp    BYTE PTR [eax+eax*1-0x4c],al
  440a36:	cmp    BYTE PTR [eax+eax*1-0x48],al
  440a3a:	cmp    BYTE PTR [eax+eax*1-0x44],al
  440a3e:	cmp    BYTE PTR [eax+eax*1-0x40],al
  440a42:	cmp    BYTE PTR [eax+eax*1-0x3c],al
  440a46:	cmp    BYTE PTR [eax+eax*1-0x60],al
  440a4a:	cmp    BYTE PTR [eax+eax*1-0x38],al
  440a4e:	cmp    BYTE PTR [eax+eax*1+0x30],al
  440a52:	cmp    BYTE PTR [eax+eax*1+0x48],al
  440a56:	cmp    BYTE PTR [eax+eax*1+0x3c],al
  440a5a:	cmp    BYTE PTR [eax+eax*1-0x5c],al
  440a5e:	cmp    BYTE PTR [eax+eax*1+0x5c],al
  440a62:	cmp    BYTE PTR [eax+eax*1-0x34],al
  440a66:	cmp    BYTE PTR [eax+eax*1-0x50],al
  440a6a:	cmp    BYTE PTR [eax+eax*1-0x30],al
  440a6e:	cmp    BYTE PTR [eax+eax*1+0x64],al
  440a72:	cmp    BYTE PTR [eax+eax*1-0x80],al
  440a76:	cmp    BYTE PTR [eax+eax*1-0x2c],al
  440a7a:	cmp    BYTE PTR [eax+eax*1+0x30],al
  440a7e:	cmp    BYTE PTR [eax+eax*1-0x28],al
  440a82:	cmp    BYTE PTR [eax+eax*1-0x24],al
  440a86:	cmp    BYTE PTR [eax+eax*1-0x20],al
  440a8a:	cmp    BYTE PTR [eax+eax*1-0x1c],al
  440a8e:	cmp    BYTE PTR [eax+eax*1-0x28],al
  440a92:	cmp    BYTE PTR [eax+eax*1-0x5c],al
  440a96:	cmp    BYTE PTR [eax+eax*1-0x18],al
  440a9a:	cmp    BYTE PTR [eax+eax*1-0x44],al
  440a9e:	cmp    BYTE PTR [eax+eax*1+0x34],al
  440aa2:	cmp    BYTE PTR [eax+eax*1+0x74],al
  440aa6:	cmp    BYTE PTR [eax+eax*1-0x14],al
  440aaa:	cmp    BYTE PTR [eax+eax*1-0x10],al
  440aae:	cmp    BYTE PTR [eax+eax*1-0x14],al
  440ab2:	cmp    BYTE PTR [eax+eax*1-0x2c],al
  440ab6:	cmp    BYTE PTR [eax+eax*1-0xc],al
  440aba:	cmp    BYTE PTR [eax+eax*1-0x14],al
  440abe:	cmp    BYTE PTR [eax+eax*1+0x6c],al
  440ac2:	cmp    BYTE PTR [eax+eax*1+0x34],al
  440ac6:	cmp    BYTE PTR [eax+eax*1+0x74],al
  440aca:	cmp    BYTE PTR [eax+eax*1-0x8],al
  440ace:	cmp    BYTE PTR [eax+eax*1-0x28],al
  440ad2:	cmp    BYTE PTR [eax+eax*1-0x40],al
  440ad6:	cmp    BYTE PTR [eax+eax*1+0x60],al
  440ada:	cmp    BYTE PTR [eax+eax*1+0x6c],al
  440ade:	cmp    BYTE PTR [eax+eax*1-0x4],al
  440ae2:	cmp    BYTE PTR [eax+eax*1-0x78],al
  440ae6:	cmp    BYTE PTR [eax+eax*1+0x6c],al
  440aea:	cmp    BYTE PTR [eax+eax*1-0x4c],al
  440aee:	cmp    BYTE PTR [eax+eax*1-0x54],al
  440af2:	cmp    BYTE PTR [eax+eax*1-0x14],al
  440af6:	cmp    BYTE PTR [eax+eax*1+0x0],al
  440afa:	cmp    DWORD PTR [eax+eax*1+0x4],eax
  440afe:	cmp    DWORD PTR [eax+eax*1+0x8],eax
  440b02:	cmp    DWORD PTR [eax+eax*1+0xc],eax
  440b06:	cmp    DWORD PTR [eax+eax*1-0x20],eax
  440b0a:	cmp    BYTE PTR [eax+eax*1+0x64],al
  440b0e:	cmp    BYTE PTR [eax+eax*1+0x6c],al
  440b12:	cmp    BYTE PTR [eax+eax*1-0x68],al
  440b16:	cmp    BYTE PTR [eax+eax*1+0x10],al
  440b1a:	cmp    DWORD PTR [eax+eax*1+0x14],eax
  440b1e:	cmp    DWORD PTR [eax+eax*1-0x38],eax
  440b22:	cmp    BYTE PTR [eax+eax*1+0x78],al
  440b26:	cmp    BYTE PTR [eax+eax*1+0x3c],al
  440b2a:	cmp    BYTE PTR [eax+eax*1-0x48],al
  440b2e:	cmp    BYTE PTR [eax+eax*1-0x20],al
  440b32:	cmp    BYTE PTR [eax+eax*1-0x78],al
  440b36:	cmp    BYTE PTR [eax+eax*1-0x3c],al
  440b3a:	cmp    BYTE PTR [eax+eax*1+0x64],al
  440b3e:	cmp    BYTE PTR [eax+eax*1-0x34],al
  440b42:	cmp    BYTE PTR [eax+eax*1+0x6c],al
  440b46:	cmp    BYTE PTR [eax+eax*1+0x54],al
  440b4a:	cmp    BYTE PTR [eax+eax*1+0x14],al
  440b4e:	cmp    DWORD PTR [eax+eax*1-0x38],eax
  440b52:	cmp    BYTE PTR [eax+eax*1-0x7c],al
  440b56:	cmp    BYTE PTR [eax+eax*1-0x7c],al
  440b5a:	cmp    BYTE PTR [eax+eax*1-0x4c],al
  440b5e:	cmp    BYTE PTR [eax+eax*1-0x80],al
  440b62:	cmp    BYTE PTR [eax+eax*1+0x30],al
  440b66:	cmp    BYTE PTR [eax+eax*1+0x64],al
  440b6a:	cmp    BYTE PTR [eax+eax*1+0x34],al
  440b6e:	cmp    BYTE PTR [eax+eax*1+0x14],al
  440b72:	cmp    DWORD PTR [eax+eax*1+0x18],eax
  440b76:	cmp    DWORD PTR [eax+eax*1+0x30],eax
  440b7a:	cmp    BYTE PTR [eax+eax*1+0x6c],al
  440b7e:	cmp    BYTE PTR [eax+eax*1+0x70],al
  440b82:	cmp    BYTE PTR [eax+eax*1+0x54],al
  440b86:	cmp    BYTE PTR [eax+eax*1+0x8],al
  440b8a:	cmp    DWORD PTR [eax+eax*1+0x2c],eax
  440b8e:	cmp    BYTE PTR [eax+eax*1+0x1c],al
  440b92:	cmp    DWORD PTR [eax+eax*1+0x20],eax
  440b96:	cmp    DWORD PTR [eax+eax*1+0x48],eax
  440b9a:	cmp    BYTE PTR [eax+eax*1-0x1c],al
  440b9e:	cmp    BYTE PTR [eax+eax*1-0x5c],al
  440ba2:	cmp    BYTE PTR [eax+eax*1+0x5c],al
  440ba6:	cmp    BYTE PTR [eax+eax*1+0x24],al
  440baa:	cmp    DWORD PTR [eax+eax*1+0x34],eax
  440bae:	cmp    BYTE PTR [eax+eax*1+0x48],al
  440bb2:	cmp    BYTE PTR [eax+eax*1+0x34],al
  440bb6:	cmp    BYTE PTR [eax+eax*1+0x44],al
  440bba:	cmp    BYTE PTR [eax+eax*1-0x44],al
  440bbe:	cmp    BYTE PTR [eax+eax*1+0xc],al
  440bc2:	cmp    DWORD PTR [eax+eax*1-0x78],eax
  440bc6:	cmp    BYTE PTR [eax+eax*1-0x80],al
  440bca:	cmp    BYTE PTR [eax+eax*1-0x68],al
  440bce:	cmp    BYTE PTR [eax+eax*1-0x4],al
  440bd2:	cmp    BYTE PTR [eax+eax*1+0x6c],al
  440bd6:	cmp    BYTE PTR [eax+eax*1+0x60],al
  440bda:	cmp    BYTE PTR [eax+eax*1+0x48],al
  440bde:	cmp    BYTE PTR [eax+eax*1+0x28],al
  440be2:	cmp    DWORD PTR [eax+eax*1-0x48],eax
  440be6:	cmp    BYTE PTR [eax+eax*1-0x44],al
  440bea:	cmp    BYTE PTR [eax+eax*1+0x7c],al
  440bee:	cmp    BYTE PTR [eax+eax*1+0x70],al
  440bf2:	cmp    BYTE PTR [eax+eax*1-0x5c],al
  440bf6:	cmp    BYTE PTR [eax+eax*1-0x10],al
  440bfa:	cmp    BYTE PTR [eax+eax*1+0x40],al
  440bfe:	cmp    BYTE PTR [eax+eax*1+0x2c],al
  440c02:	cmp    DWORD PTR [eax+eax*1-0x3c],eax
  440c06:	cmp    BYTE PTR [eax+eax*1+0x30],al
  440c0a:	cmp    DWORD PTR [eax+eax*1-0x5c],eax
  440c0e:	cmp    BYTE PTR [eax+eax*1-0x8],al
  440c12:	cmp    BYTE PTR [eax+eax*1+0x54],al
  440c16:	cmp    BYTE PTR [eax+eax*1-0x44],al
  440c1a:	cmp    BYTE PTR [eax+eax*1-0x44],al
  440c1e:	cmp    BYTE PTR [eax+eax*1+0x40],al
  440c22:	cmp    BYTE PTR [eax+eax*1+0x7c],al
  440c26:	cmp    BYTE PTR [eax+eax*1+0x34],al
  440c2a:	cmp    DWORD PTR [eax+eax*1+0x2c],eax
  440c2e:	cmp    BYTE PTR [eax+eax*1+0x38],al
  440c32:	cmp    DWORD PTR [eax+eax*1-0x24],eax
  440c36:	cmp    BYTE PTR [eax+eax*1-0x54],al
  440c3a:	cmp    BYTE PTR [eax+eax*1+0x8],al
  440c3e:	cmp    DWORD PTR [eax+eax*1+0x4],eax
  440c42:	cmp    DWORD PTR [eax+eax*1+0x14],eax
  440c46:	cmp    DWORD PTR [eax+eax*1+0xc],eax
  440c4a:	cmp    DWORD PTR [eax+eax*1-0xc],eax
  440c4e:	cmp    BYTE PTR [eax+eax*1-0x60],al
  440c52:	cmp    BYTE PTR [eax+eax*1+0x18],al
  440c56:	cmp    DWORD PTR [eax+eax*1+0x68],eax
  440c5a:	cmp    BYTE PTR [eax+eax*1-0x44],al
  440c5e:	cmp    BYTE PTR [eax+eax*1+0x3c],al
  440c62:	cmp    DWORD PTR [eax+eax*1+0x58],eax
  440c66:	cmp    BYTE PTR [eax+eax*1-0x7c],al
  440c6a:	cmp    BYTE PTR [eax+eax*1+0x58],al
  440c6e:	cmp    BYTE PTR [eax+eax*1-0x2c],al
  440c72:	cmp    BYTE PTR [eax+eax*1+0x3c],al
  440c76:	cmp    BYTE PTR [eax+eax*1+0x0],al
  440c7a:	cmp    DWORD PTR [eax+eax*1-0x58],eax
  440c7e:	cmp    BYTE PTR [eax+eax*1+0x30],al
  440c82:	cmp    BYTE PTR [eax+eax*1+0x40],al
  440c86:	cmp    DWORD PTR [eax+eax*1+0xc],eax
  440c8a:	cmp    DWORD PTR [eax+eax*1-0x7c],eax
  440c8e:	cmp    BYTE PTR [eax+eax*1+0x24],al
  440c92:	cmp    DWORD PTR [eax+eax*1-0x4],eax
  440c96:	cmp    BYTE PTR [eax+eax*1-0x34],al
  440c9a:	cmp    BYTE PTR [eax+eax*1+0x48],al
  440c9e:	cmp    BYTE PTR [eax+eax*1+0x6c],al
  440ca2:	cmp    BYTE PTR [eax+eax*1-0x4c],al
  440ca6:	cmp    BYTE PTR [eax+eax*1-0x54],al
  440caa:	cmp    BYTE PTR [eax+eax*1+0x20],al
  440cae:	cmp    DWORD PTR [eax+eax*1+0x1],eax
  440cb2:	xor    BYTE PTR [edx],cl
  440cb4:	add    ch,BYTE PTR [edx+0x404e875a]
  440cba:	shl    DWORD PTR [esi+0x32],cl
  440cbd:	out    dx,eax
  440cbe:	popa   
  440cbf:	jns    0x440cb9
  440cc1:	arpl   WORD PTR ds:0x889d43e2,bp
  440cc7:	dec    ebp
  440cc8:	cld    
  440cc9:	scas   eax,DWORD PTR es:[edi]
  440cca:	lods   al,BYTE PTR ds:[esi]
  440ccb:	ret    0xd477
  440cce:	mov    esi,0xfaaaeb14
  440cd3:	stos   BYTE PTR es:[edi],al
  440cd4:	es cld 
  440cd6:	les    esi,FWORD PTR [edx+0x1560656b]
  440cdc:	fcomp  DWORD PTR [eax+ebx*2]
  440cdf:	jo     0x440c85
  440ce1:	addr16 loopne 0x440d0f
  440ce4:	push   ss
  440ce5:	inc    esp
  440ce6:	mov    dl,BYTE PTR [esi]
  440ce8:	inc    eax
  440ce9:	inc    esp
  440cea:	sahf   
  440ceb:	mov    ecx,0xbbd6f72c
  440cf0:	sub    eax,0xea26897f
  440cf5:	repz jle 0x440d6f
  440cf8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  440cf9:	inc    esi
  440cfa:	cmp    BYTE PTR [ebx+ebp*8],ch
  440cfd:	hlt    
  440cfe:	sbb    ebp,DWORD PTR [ebx-0xa]
  440d01:	outs   dx,DWORD PTR ds:[esi]
  440d02:	adc    al,0x4e
  440d04:	sub    DWORD PTR [ebx+ebp*1+0x3c589ec2],ebp
  440d0b:	pop    es
  440d0c:	(bad)  
  440d0d:	jecxz  0x440d14
  440d0f:	in     al,0xfc
  440d11:	arpl   WORD PTR [esi-0x13093bdc],si
  440d17:	mov    ebx,0x7936ffe9
  440d1c:	fstp   DWORD PTR [esi+ebp*2]
  440d1f:	dec    ebx
  440d20:	xor    DWORD PTR [ebp+0x4fd71da9],esi
  440d26:	push   eax
  440d27:	int    0x5c
  440d29:	sbb    DWORD PTR [ebx],esi
  440d2b:	xchg   esp,eax
  440d2c:	jge    0x440d1e
  440d2e:	sbb    DWORD PTR ds:0x23ae1378,esp
  440d34:	pop    ss
  440d35:	daa    
  440d36:	neg    ebx
  440d38:	sti    
  440d39:	loopne 0x440d41
  440d3b:	or     eax,ebx
  440d3d:	or     eax,0x6d08a400
  440d42:	sahf   
  440d43:	cld    
  440d44:	xchg   BYTE PTR [edi+eiz*4],al
  440d47:	shl    BYTE PTR [ebx+0x45c2e66f],cl
  440d4d:	xlat   BYTE PTR ds:[ebx]
  440d4e:	das    
  440d4f:	pop    ebx
  440d50:	scas   al,BYTE PTR es:[edi]
  440d51:	inc    esp
  440d52:	xchg   ebx,eax
  440d53:	inc    ebp
  440d54:	add    BYTE PTR [esi+0xb3daf3],0x87
  440d5b:	jbe    0x440cff
  440d5d:	or     eax,0xfc3e0bbf
  440d62:	and    DWORD PTR [edx+0x54],eax
  440d65:	xchg   ebx,eax
  440d66:	xor    bl,al
  440d68:	xchg   ebp,eax
  440d69:	cmp    al,dh
  440d6b:	call   0x2585:0x52cd9aa6
  440d72:	idiv   DWORD PTR [esi+0x48]
  440d75:	mov    bl,0xa
  440d77:	icebp  
  440d78:	mov    ds:0x58c9a5f3,al
  440d7d:	div    DWORD PTR [ebx]
  440d7f:	test   eax,0x261da1be
  440d84:	(bad)  
  440d85:	push   ss
  440d86:	push   ebx
  440d87:	xor    eax,0x953d1b3f
  440d8c:	inc    ebx
  440d8d:	leave  
  440d8e:	inc    ecx
  440d8f:	hlt    
  440d90:	push   esi
  440d91:	rcl    DWORD PTR [edi+0x37],1
  440d94:	xchg   ebx,eax
  440d95:	test   eax,0xf87d95
  440d9a:	arpl   WORD PTR [ebx-0x76],di
  440d9d:	(bad)  
  440d9e:	mov    cl,0xf
  440da0:	inc    edi
  440da1:	mov    ecx,0x443f3e11
  440da6:	mov    edx,DWORD PTR [edx+esi*4]
  440da9:	mov    eax,ds:0x9298a152
  440dae:	mov    dl,0x8a
  440db0:	xor    bl,cl
  440db2:	ins    DWORD PTR es:[edi],dx
  440db3:	jp     0x440e0e
  440db5:	adc    esi,DWORD PTR [eax]
  440db7:	out    0x66,eax
  440db9:	in     eax,0x50
  440dbb:	lock int 0xf6
  440dbe:	pop    ds
  440dbf:	ss jb  0x440d82
  440dc2:	sub    edx,edi
  440dc4:	repz or DWORD PTR [ebp-0x76],esp
  440dc8:	xor    eax,DWORD PTR [ebp-0xb394e45]
  440dce:	aaa    
  440dcf:	jb     0x440e14
  440dd1:	dec    ebx
  440dd2:	sbb    cl,BYTE PTR [edi]
  440dd4:	scas   eax,DWORD PTR es:[edi]
  440dd5:	jnp    0x440d64
  440dd7:	push   cs
  440dd8:	iretw  
  440dda:	push   esp
  440ddb:	mov    edx,0xfcc04ac3
  440de0:	jae    0x440e33
  440de2:	adc    edi,DWORD PTR [ecx+0x1c]
  440de5:	retf   0x99c0
  440de8:	and    BYTE PTR [ebx],dh
  440dea:	les    ecx,FWORD PTR ds:0xa153e3fc
  440df0:	bound  esp,QWORD PTR [edx+esi*2]
  440df3:	sub    al,dh
  440df5:	push   ds
  440df6:	mov    edi,0x80135541
  440dfb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  440dfc:	fcomip st,st(4)
  440dfe:	inc    eax
  440dff:	jl     0x440d90
  440e01:	test   BYTE PTR [edx],ah
  440e03:	clc    
  440e04:	push   0xd8ebfed9
  440e09:	inc    esi
  440e0a:	jecxz  0x440de4
  440e0c:	and    ah,BYTE PTR [ebp-0x4b4a07d1]
  440e12:	mov    ecx,DWORD PTR [edx]
  440e14:	fisttp QWORD PTR [edx+0x66]
  440e17:	(bad)  
  440e18:	stos   BYTE PTR es:[edi],al
  440e19:	push   ebx
  440e1a:	jo     0x440dd7
  440e1c:	mov    ds:0xb173e5,al
  440e21:	(bad)  
  440e22:	push   ss
  440e23:	pop    ebp
  440e24:	lock jne 0x440e2a
  440e27:	test   al,0xf5
  440e29:	adc    DWORD PTR [ebx-0x34e68330],0x72372bc
  440e33:	sub    edx,DWORD PTR [eax]
  440e35:	ror    DWORD PTR [edx+0x792c1cb7],cl
  440e3b:	or     al,0x1f
  440e3d:	pusha  
  440e3e:	xor    bh,BYTE PTR [ebx-0x16]
  440e41:	mov    bh,0x58
  440e43:	jecxz  0x440e6f
  440e45:	xor    dl,BYTE PTR [edi+0x22dad586]
  440e4b:	cmp    edi,DWORD PTR [ebp+0x30]
  440e4e:	pop    ebx
  440e4f:	inc    esi
  440e50:	add    al,0x31
  440e52:	jmp    0x2b05a866
  440e57:	cld    
  440e58:	test   BYTE PTR [ebp+0x1e],0x38
  440e5c:	addr16 shl ebx,1
  440e5f:	sahf   
  440e60:	and    esp,esi
  440e62:	mov    edi,0x183b8211
  440e67:	sub    BYTE PTR [esi+0x56],dh
  440e6a:	popf   
  440e6b:	sbb    BYTE PTR [eax-0x511d96e5],al
  440e71:	mov    cl,0x95
  440e73:	popa   
  440e74:	add    dl,BYTE PTR [edi-0x60]
  440e77:	sahf   
  440e78:	aaa    
  440e79:	and    al,BYTE PTR [esi-0x32eb7882]
  440e7f:	sub    eax,0xa5077348
  440e84:	lds    edx,FWORD PTR [edx]
  440e86:	push   0x88fda24c
  440e8b:	or     eax,0xe370a243
  440e90:	xchg   esp,eax
  440e91:	xchg   BYTE PTR gs:[edi+edx*8],dh
  440e95:	repz call 0xec4120ed
  440e9b:	popa   
  440e9c:	and    DWORD PTR [edx],eax
  440e9e:	adc    bh,dh
  440ea0:	mov    ecx,0x36ffa1bf
  440ea5:	imul   edi,DWORD PTR [edx],0x2a
  440ea8:	xchg   ebx,eax
  440ea9:	(bad)  
  440eaa:	stos   BYTE PTR es:[edi],al
  440eab:	add    eax,0xe4f9c166
  440eb0:	daa    
  440eb1:	jmp    DWORD PTR ds:0x442dc0
  440eb7:	jmp    DWORD PTR ds:0x442dc4
  440ebd:	jmp    DWORD PTR ds:0x442dc8
  440ec3:	jmp    DWORD PTR ds:0x442dcc
  440ec9:	jmp    DWORD PTR ds:0x442dd0
  440ecf:	jmp    DWORD PTR ds:0x442dd4
  440ed5:	jmp    DWORD PTR ds:0x442dd8
  440edb:	jmp    DWORD PTR ds:0x442ddc
  440ee1:	jmp    DWORD PTR ds:0x442de0
  440ee7:	jmp    DWORD PTR ds:0x442de4
  440eed:	jmp    DWORD PTR ds:0x442de8
  440ef3:	jmp    DWORD PTR ds:0x442dec
  440ef9:	jmp    DWORD PTR ds:0x442df0
  440eff:	jmp    DWORD PTR ds:0x442df4
  440f05:	jmp    DWORD PTR ds:0x442df8
  440f0b:	jmp    DWORD PTR ds:0x442dfc
  440f11:	jmp    DWORD PTR ds:0x442e00
  440f17:	jmp    DWORD PTR ds:0x442e04
  440f1d:	jmp    DWORD PTR ds:0x442e08
  440f23:	jmp    DWORD PTR ds:0x442e0c
  440f29:	jmp    DWORD PTR ds:0x442e10
  440f2f:	jmp    DWORD PTR ds:0x442e14
  440f35:	jmp    DWORD PTR ds:0x442e18
  440f3b:	jmp    DWORD PTR ds:0x442e1c
  440f41:	jmp    DWORD PTR ds:0x442e20
  440f47:	jmp    DWORD PTR ds:0x442e24
  440f4d:	jmp    DWORD PTR ds:0x442e28
  440f53:	jmp    DWORD PTR ds:0x442e2c
  440f59:	jmp    DWORD PTR ds:0x442e30
  440f5f:	jmp    DWORD PTR ds:0x442e34
  440f65:	jmp    DWORD PTR ds:0x442e38
  440f6b:	jmp    DWORD PTR ds:0x442e3c
  440f71:	jmp    DWORD PTR ds:0x442e40
  440f77:	jmp    DWORD PTR ds:0x442e44
  440f7d:	jmp    DWORD PTR ds:0x442e48
  440f83:	jmp    DWORD PTR ds:0x442e4c
  440f89:	jmp    DWORD PTR ds:0x442e50
  440f8f:	jmp    DWORD PTR ds:0x442e54
  440f95:	jmp    DWORD PTR ds:0x442e58
  440f9b:	jmp    DWORD PTR ds:0x442e5c
  440fa1:	jmp    DWORD PTR ds:0x442e60
  440fa7:	jmp    DWORD PTR ds:0x442e64
  440fad:	jmp    DWORD PTR ds:0x442e68
  440fb3:	jmp    DWORD PTR ds:0x442e6c
  440fb9:	jmp    DWORD PTR ds:0x442e70
  440fbf:	jmp    DWORD PTR ds:0x442e74
  440fc5:	jmp    DWORD PTR ds:0x442e78
  440fcb:	jmp    DWORD PTR ds:0x442e7c
  440fd1:	jmp    DWORD PTR ds:0x442e80
  440fd7:	jmp    DWORD PTR ds:0x442e84
  440fdd:	jmp    DWORD PTR ds:0x442e88
  440fe3:	jmp    DWORD PTR ds:0x442e8c
  440fe9:	jmp    DWORD PTR ds:0x442e90
  440fef:	jmp    DWORD PTR ds:0x442e94
  440ff5:	jmp    DWORD PTR ds:0x442e98
  440ffb:	jmp    DWORD PTR ds:0x442e9c
  441001:	jmp    DWORD PTR ds:0x442ea0
  441007:	jmp    DWORD PTR ds:0x442ea4
  44100d:	jmp    DWORD PTR ds:0x442ea8
  441013:	jmp    DWORD PTR ds:0x442eac
  441019:	jmp    DWORD PTR ds:0x442eb0
  44101f:	jmp    DWORD PTR ds:0x442eb4
  441025:	jmp    DWORD PTR ds:0x442eb8
  44102b:	jmp    DWORD PTR ds:0x442ebc
  441031:	jmp    DWORD PTR ds:0x442ec0
  441037:	jmp    DWORD PTR ds:0x442ec4
  44103d:	jmp    DWORD PTR ds:0x442ec8
  441043:	jmp    DWORD PTR ds:0x442ecc
  441049:	jmp    DWORD PTR ds:0x442ed0
  44104f:	jmp    DWORD PTR ds:0x442ed4
  441055:	jmp    DWORD PTR ds:0x442ed8
  44105b:	jmp    DWORD PTR ds:0x442edc
  441061:	jmp    DWORD PTR ds:0x442ee0
  441067:	jmp    DWORD PTR ds:0x442ee4
  44106d:	jmp    DWORD PTR ds:0x442ee8
  441073:	jmp    DWORD PTR ds:0x442eec
  441079:	jmp    DWORD PTR ds:0x442ef0
  44107f:	jmp    DWORD PTR ds:0x442ef4
  441085:	jmp    DWORD PTR ds:0x442ef8
  44108b:	jmp    DWORD PTR ds:0x442efc
  441091:	jmp    DWORD PTR ds:0x442f00
  441097:	jmp    DWORD PTR ds:0x442f04
  44109d:	jmp    DWORD PTR ds:0x442f08
  4410a3:	jmp    DWORD PTR ds:0x442f0c
  4410a9:	jmp    DWORD PTR ds:0x442f10
  4410af:	jmp    DWORD PTR ds:0x442f14
  4410b5:	jmp    DWORD PTR ds:0x442f18
  4410bb:	jmp    DWORD PTR ds:0x442f1c
  4410c1:	jmp    DWORD PTR ds:0x442f20
  4410c7:	jmp    DWORD PTR ds:0x442f24
  4410cd:	jmp    DWORD PTR ds:0x442f28
  4410d3:	jmp    DWORD PTR ds:0x442f2c
  4410d9:	jmp    DWORD PTR ds:0x442f30
  4410df:	jmp    DWORD PTR ds:0x442f34
  4410e5:	jmp    DWORD PTR ds:0x442f38
  4410eb:	jmp    DWORD PTR ds:0x442f3c
  4410f1:	jmp    DWORD PTR ds:0x442f40
  4410f7:	jmp    DWORD PTR ds:0x442f44
  4410fd:	jmp    DWORD PTR ds:0x442f48
  441103:	jmp    DWORD PTR ds:0x442f4c
  441109:	jmp    DWORD PTR ds:0x442f50
  44110f:	jmp    DWORD PTR ds:0x442f54
  441115:	jmp    DWORD PTR ds:0x442f58
  44111b:	jmp    DWORD PTR ds:0x442f5c
  441121:	jmp    DWORD PTR ds:0x442f60
  441127:	jmp    DWORD PTR ds:0x442f64
  44112d:	jmp    DWORD PTR ds:0x442f68
  441133:	jmp    DWORD PTR ds:0x442f6c
  441139:	jmp    DWORD PTR ds:0x442f70
  44113f:	jmp    DWORD PTR ds:0x442f74
  441145:	jmp    DWORD PTR ds:0x442f78
  44114b:	jmp    DWORD PTR ds:0x442f7c
  441151:	jmp    DWORD PTR ds:0x442f80
  441157:	jmp    DWORD PTR ds:0x442f84
  44115d:	jmp    DWORD PTR ds:0x442f88
  441163:	jmp    DWORD PTR ds:0x442f8c
  441169:	jmp    DWORD PTR ds:0x442f90
  44116f:	jmp    DWORD PTR ds:0x442f94
  441175:	jmp    DWORD PTR ds:0x442f98
  44117b:	jmp    DWORD PTR ds:0x442f9c
  441181:	jmp    DWORD PTR ds:0x442fa0
  441187:	jmp    DWORD PTR ds:0x442fa4
  44118d:	jmp    DWORD PTR ds:0x442fa8
  441193:	jmp    DWORD PTR ds:0x442fac
  441199:	jmp    DWORD PTR ds:0x442fb0
  44119f:	jmp    DWORD PTR ds:0x442fb4
  4411a5:	jmp    DWORD PTR ds:0x442fb8
  4411ab:	jmp    DWORD PTR ds:0x442fbc
  4411b1:	jmp    DWORD PTR ds:0x442fc0
  4411b7:	jmp    DWORD PTR ds:0x442fc4
  4411bd:	jmp    DWORD PTR ds:0x442fc8
  4411c3:	jmp    DWORD PTR ds:0x442fcc
  4411c9:	jmp    DWORD PTR ds:0x442fd0
  4411cf:	jmp    DWORD PTR ds:0x442fd4
  4411d5:	jmp    DWORD PTR ds:0x442fd8
  4411db:	jmp    DWORD PTR ds:0x442fdc
  4411e1:	jmp    DWORD PTR ds:0x442fe0
  4411e7:	jmp    DWORD PTR ds:0x442fe4
  4411ed:	jmp    DWORD PTR ds:0x442fe8
  4411f3:	jmp    DWORD PTR ds:0x442fec
  4411f9:	jmp    DWORD PTR ds:0x442ff0
  4411ff:	jmp    DWORD PTR ds:0x442ff4
  441205:	jmp    DWORD PTR ds:0x442ff8
  44120b:	jmp    DWORD PTR ds:0x442ffc
  441211:	jmp    DWORD PTR ds:0x443000
  441217:	jmp    DWORD PTR ds:0x443004
  44121d:	jmp    DWORD PTR ds:0x443008
  441223:	jmp    DWORD PTR ds:0x44300c
  441229:	jmp    DWORD PTR ds:0x443010
  44122f:	jmp    DWORD PTR ds:0x443014
  441235:	jmp    DWORD PTR ds:0x443018
  44123b:	jmp    DWORD PTR ds:0x44301c
  441241:	jmp    DWORD PTR ds:0x443020
  441247:	jmp    DWORD PTR ds:0x443024
  44124d:	jmp    DWORD PTR ds:0x443028
  441253:	jmp    DWORD PTR ds:0x44302c
  441259:	jmp    DWORD PTR ds:0x443030
  44125f:	jmp    DWORD PTR ds:0x443034
  441265:	jmp    DWORD PTR ds:0x443038
  44126b:	jmp    DWORD PTR ds:0x44303c
  441271:	jmp    DWORD PTR ds:0x443040
  441277:	jmp    DWORD PTR ds:0x443044
  44127d:	jmp    DWORD PTR ds:0x443048
  441283:	jmp    DWORD PTR ds:0x44304c
  441289:	jmp    DWORD PTR ds:0x443050
  44128f:	jmp    DWORD PTR ds:0x443054
  441295:	jmp    DWORD PTR ds:0x443058
  44129b:	jmp    DWORD PTR ds:0x44305c
  4412a1:	jmp    DWORD PTR ds:0x443060
  4412a7:	jmp    DWORD PTR ds:0x443064
  4412ad:	jmp    DWORD PTR ds:0x443068
  4412b3:	jmp    DWORD PTR ds:0x44306c
  4412b9:	jmp    DWORD PTR ds:0x443070
  4412bf:	jmp    DWORD PTR ds:0x443074
  4412c5:	jmp    DWORD PTR ds:0x443078
  4412cb:	jmp    DWORD PTR ds:0x44307c
  4412d1:	jmp    DWORD PTR ds:0x443080
  4412d7:	jmp    DWORD PTR ds:0x443088
  4412dd:	jmp    DWORD PTR ds:0x44308c
  4412e3:	jmp    DWORD PTR ds:0x443090
  4412e9:	jmp    DWORD PTR ds:0x443094
  4412ef:	jmp    DWORD PTR ds:0x443098
  4412f5:	jmp    DWORD PTR ds:0x44309c
  4412fb:	jmp    DWORD PTR ds:0x4430a0
  441301:	jmp    DWORD PTR ds:0x4430a4
  441307:	jmp    DWORD PTR ds:0x4430a8
  44130d:	jmp    DWORD PTR ds:0x4430ac
  441313:	jmp    DWORD PTR ds:0x4430b0
  441319:	jmp    DWORD PTR ds:0x4430b4
  44131f:	jmp    DWORD PTR ds:0x4430b8
  441325:	jmp    DWORD PTR ds:0x4430bc
  44132b:	jmp    DWORD PTR ds:0x4430c0
  441331:	jmp    DWORD PTR ds:0x4430c4
  441337:	jmp    DWORD PTR ds:0x4430c8
  44133d:	jmp    DWORD PTR ds:0x4430cc
  441343:	jmp    DWORD PTR ds:0x4430d0
  441349:	jmp    DWORD PTR ds:0x4430d4
  44134f:	jmp    DWORD PTR ds:0x4430d8
  441355:	jmp    DWORD PTR ds:0x4430dc
  44135b:	jmp    DWORD PTR ds:0x4430e0
  441361:	jmp    DWORD PTR ds:0x4430e4
  441367:	jmp    DWORD PTR ds:0x4430e8
  44136d:	jmp    DWORD PTR ds:0x4430ec
  441373:	jmp    DWORD PTR ds:0x4430f0
  441379:	jmp    DWORD PTR ds:0x4430f4
  44137f:	jmp    DWORD PTR ds:0x4430f8
  441385:	jmp    DWORD PTR ds:0x4430fc
  44138b:	jmp    DWORD PTR ds:0x443100
  441391:	jmp    DWORD PTR ds:0x443104
  441397:	jmp    DWORD PTR ds:0x443108
  44139d:	jmp    DWORD PTR ds:0x44310c
  4413a3:	jmp    DWORD PTR ds:0x443110
  4413a9:	jmp    DWORD PTR ds:0x443114
  4413af:	jmp    DWORD PTR ds:0x443118
  4413b5:	jmp    DWORD PTR ds:0x44311c
  4413bb:	jmp    DWORD PTR ds:0x443120
  4413c1:	jmp    DWORD PTR ds:0x443124
  4413c7:	jmp    DWORD PTR ds:0x443128
  4413cd:	jmp    DWORD PTR ds:0x44312c
  4413d3:	jmp    DWORD PTR ds:0x443130
  4413d9:	jmp    DWORD PTR ds:0x443134
  4413df:	jmp    DWORD PTR ds:0x443138
  4413e5:	jmp    DWORD PTR ds:0x44313c
  4413eb:	jmp    DWORD PTR ds:0x443140
  4413f1:	jmp    DWORD PTR ds:0x443144
  4413f7:	jmp    DWORD PTR ds:0x443148
  4413fd:	jmp    DWORD PTR ds:0x44314c
  441403:	jmp    DWORD PTR ds:0x443150
  441409:	jmp    DWORD PTR ds:0x443154
  44140f:	jmp    DWORD PTR ds:0x443158
  441415:	jmp    DWORD PTR ds:0x44315c
  44141b:	jmp    DWORD PTR ds:0x443160
  441421:	jmp    DWORD PTR ds:0x443164
  441427:	jmp    DWORD PTR ds:0x443168
  44142d:	jmp    DWORD PTR ds:0x44316c
  441433:	jmp    DWORD PTR ds:0x443170
  441439:	jmp    DWORD PTR ds:0x443174
  44143f:	jmp    DWORD PTR ds:0x443178
  441445:	jmp    DWORD PTR ds:0x44317c
  44144b:	jmp    DWORD PTR ds:0x443180
  441451:	jmp    DWORD PTR ds:0x443184
  441457:	jmp    DWORD PTR ds:0x443188
  44145d:	jmp    DWORD PTR ds:0x44318c
  441463:	jmp    DWORD PTR ds:0x443190
  441469:	jmp    DWORD PTR ds:0x443194
  44146f:	jmp    DWORD PTR ds:0x443198
  441475:	jmp    DWORD PTR ds:0x44319c
  44147b:	jmp    DWORD PTR ds:0x4431a0
  441481:	jmp    DWORD PTR ds:0x4431a4
  441487:	jmp    DWORD PTR ds:0x4431a8
  44148d:	jmp    DWORD PTR ds:0x4431ac
  441493:	jmp    DWORD PTR ds:0x4431b0
  441499:	jmp    DWORD PTR ds:0x4431b4
  44149f:	jmp    DWORD PTR ds:0x4431b8
  4414a5:	jmp    DWORD PTR ds:0x4431bc
  4414ab:	jmp    DWORD PTR ds:0x4431c0
  4414b1:	jmp    DWORD PTR ds:0x4431c4
  4414b7:	jmp    DWORD PTR ds:0x4431c8
  4414bd:	jmp    DWORD PTR ds:0x4431cc
  4414c3:	jmp    DWORD PTR ds:0x4431d0
  4414c9:	jmp    DWORD PTR ds:0x4431d4
  4414cf:	jmp    DWORD PTR ds:0x4431d8
  4414d5:	jmp    DWORD PTR ds:0x4431dc
  4414db:	jmp    DWORD PTR ds:0x4431e0
  4414e1:	jmp    DWORD PTR ds:0x4431e4
  4414e7:	jmp    DWORD PTR ds:0x4431e8
  4414ed:	jmp    DWORD PTR ds:0x4431ec
  4414f3:	jmp    DWORD PTR ds:0x4431f0
  4414f9:	jmp    DWORD PTR ds:0x4431f4
  4414ff:	jmp    DWORD PTR ds:0x4431f8
  441505:	jmp    DWORD PTR ds:0x4431fc
  44150b:	jmp    DWORD PTR ds:0x443200
  441511:	jmp    DWORD PTR ds:0x443204
  441517:	jmp    DWORD PTR ds:0x443208
  44151d:	jmp    DWORD PTR ds:0x44320c
  441523:	jmp    DWORD PTR ds:0x443210
  441529:	jmp    DWORD PTR ds:0x443214
  44152f:	jmp    DWORD PTR ds:0x443218
  441535:	jmp    DWORD PTR ds:0x44321c
  44153b:	jmp    DWORD PTR ds:0x443220
  441541:	jmp    DWORD PTR ds:0x443224
  441547:	jmp    DWORD PTR ds:0x443228
  44154d:	jmp    DWORD PTR ds:0x44322c
  441553:	jmp    DWORD PTR ds:0x443230
  441559:	jmp    DWORD PTR ds:0x443234
  44155f:	jmp    DWORD PTR ds:0x443238
  441565:	jmp    DWORD PTR ds:0x44323c
  44156b:	jmp    DWORD PTR ds:0x443240
  441571:	jmp    DWORD PTR ds:0x443244
  441577:	jmp    DWORD PTR ds:0x443248
  44157d:	jmp    DWORD PTR ds:0x44324c
  441583:	jmp    DWORD PTR ds:0x443250
  441589:	jmp    DWORD PTR ds:0x443254
  44158f:	jmp    DWORD PTR ds:0x443258
  441595:	jmp    DWORD PTR ds:0x44325c
  44159b:	jmp    DWORD PTR ds:0x443260
  4415a1:	jmp    DWORD PTR ds:0x443264
  4415a7:	jmp    DWORD PTR ds:0x443268
  4415ad:	jmp    DWORD PTR ds:0x44326c
  4415b3:	jmp    DWORD PTR ds:0x443270
  4415b9:	jmp    DWORD PTR ds:0x443274
  4415bf:	jmp    DWORD PTR ds:0x443278
  4415c5:	jmp    DWORD PTR ds:0x44327c
  4415cb:	jmp    DWORD PTR ds:0x443280
  4415d1:	jmp    DWORD PTR ds:0x443284
  4415d7:	jmp    DWORD PTR ds:0x443288
  4415dd:	jmp    DWORD PTR ds:0x44328c
  4415e3:	jmp    DWORD PTR ds:0x443290
  4415e9:	jmp    DWORD PTR ds:0x443294
  4415ef:	jmp    DWORD PTR ds:0x443298
  4415f5:	jmp    DWORD PTR ds:0x44329c
  4415fb:	jmp    DWORD PTR ds:0x4432a0
  441601:	jmp    DWORD PTR ds:0x4432a4
  441607:	jmp    DWORD PTR ds:0x4432a8
  44160d:	jmp    DWORD PTR ds:0x4432ac
  441613:	jmp    DWORD PTR ds:0x4432b0
  441619:	jmp    DWORD PTR ds:0x4432b4
  44161f:	jmp    DWORD PTR ds:0x4432b8
  441625:	jmp    DWORD PTR ds:0x4432bc
  44162b:	jmp    DWORD PTR ds:0x4432c0
  441631:	jmp    DWORD PTR ds:0x4432c4
  441637:	jmp    DWORD PTR ds:0x4432c8
  44163d:	jmp    DWORD PTR ds:0x4432cc
  441643:	jmp    DWORD PTR ds:0x4432d0
  441649:	jmp    DWORD PTR ds:0x4432d4
  44164f:	jmp    DWORD PTR ds:0x4432d8
  441655:	jmp    DWORD PTR ds:0x4432dc
  44165b:	jmp    DWORD PTR ds:0x4432e0
  441661:	jmp    DWORD PTR ds:0x4432e4
  441667:	jmp    DWORD PTR ds:0x4432e8
  44166d:	jmp    DWORD PTR ds:0x4432ec
  441673:	jmp    DWORD PTR ds:0x4432f0
  441679:	jmp    DWORD PTR ds:0x4432f4
  44167f:	jmp    DWORD PTR ds:0x4432f8
  441685:	jmp    DWORD PTR ds:0x4432fc
  44168b:	jmp    DWORD PTR ds:0x443300
  441691:	jmp    DWORD PTR ds:0x443304
  441697:	jmp    DWORD PTR ds:0x443308
  44169d:	jmp    DWORD PTR ds:0x44330c
  4416a3:	jmp    DWORD PTR ds:0x443310
  4416a9:	jmp    DWORD PTR ds:0x443314
  4416af:	jmp    DWORD PTR ds:0x443318
  4416b5:	jmp    DWORD PTR ds:0x44331c
  4416bb:	jmp    DWORD PTR ds:0x443320
  4416c1:	jmp    DWORD PTR ds:0x443324
  4416c7:	jmp    DWORD PTR ds:0x443328
  4416cd:	jmp    DWORD PTR ds:0x443330
  4416d3:	int3   
  4416d4:	jmp    DWORD PTR ds:0x443338
  4416da:	jmp    DWORD PTR ds:0x443340
  4416e0:	jmp    DWORD PTR ds:0x443344
  4416e6:	jmp    DWORD PTR ds:0x443348
  4416ec:	jmp    DWORD PTR ds:0x44334c
  4416f2:	jmp    DWORD PTR ds:0x443350
  4416f8:	jmp    DWORD PTR ds:0x443354
  4416fe:	jmp    DWORD PTR ds:0x443358
  441704:	jmp    DWORD PTR ds:0x44335c
  44170a:	jmp    DWORD PTR ds:0x443360
  441710:	jmp    DWORD PTR ds:0x443364
  441716:	jmp    DWORD PTR ds:0x443368
  44171c:	jmp    DWORD PTR ds:0x44336c
  441722:	jmp    DWORD PTR ds:0x443370
  441728:	jmp    DWORD PTR ds:0x443374
  44172e:	jmp    DWORD PTR ds:0x443378
  441734:	jmp    DWORD PTR ds:0x44337c
  44173a:	jmp    DWORD PTR ds:0x443380
  441740:	jmp    DWORD PTR ds:0x443384
  441746:	jmp    DWORD PTR ds:0x443388
  44174c:	jmp    DWORD PTR ds:0x44338c
  441752:	jmp    DWORD PTR ds:0x443390
  441758:	jmp    DWORD PTR ds:0x443398
  44175e:	jmp    DWORD PTR ds:0x4433a0
  441764:	jmp    DWORD PTR ds:0x4433a4
  44176a:	jmp    DWORD PTR ds:0x4433a8
  441770:	jmp    DWORD PTR ds:0x4433ac
  441776:	jmp    DWORD PTR ds:0x4433b0
  44177c:	jmp    DWORD PTR ds:0x4433b4
  441782:	jmp    DWORD PTR ds:0x4433b8
  441788:	jmp    DWORD PTR ds:0x4433bc
  44178e:	jmp    DWORD PTR ds:0x4433c0
  441794:	jmp    DWORD PTR ds:0x4433c4
  44179a:	jmp    DWORD PTR ds:0x4433c8
  4417a0:	jmp    DWORD PTR ds:0x4433cc
  4417a6:	jmp    DWORD PTR ds:0x4433d0
  4417ac:	jmp    DWORD PTR ds:0x4433d4
  4417b2:	jmp    DWORD PTR ds:0x4433d8
  4417b8:	jmp    DWORD PTR ds:0x4433dc
  4417be:	jmp    DWORD PTR ds:0x4433e0
  4417c4:	jmp    DWORD PTR ds:0x4433e4
  4417ca:	jmp    DWORD PTR ds:0x4433e8
  4417d0:	jmp    DWORD PTR ds:0x4433ec
  4417d6:	jmp    DWORD PTR ds:0x4433f0
  4417dc:	jmp    DWORD PTR ds:0x4433f4
  4417e2:	jmp    DWORD PTR ds:0x4433f8
  4417e8:	jmp    DWORD PTR ds:0x4433fc
  4417ee:	jmp    DWORD PTR ds:0x443400
  4417f4:	jmp    DWORD PTR ds:0x443404
  4417fa:	jmp    DWORD PTR ds:0x443408
  441800:	jmp    DWORD PTR ds:0x44340c
  441806:	jmp    DWORD PTR ds:0x443410
  44180c:	jmp    DWORD PTR ds:0x443414
  441812:	jmp    DWORD PTR ds:0x443418
  441818:	jmp    DWORD PTR ds:0x44341c
  44181e:	jmp    DWORD PTR ds:0x443420
  441824:	jmp    DWORD PTR ds:0x443424
  44182a:	jmp    DWORD PTR ds:0x443428
  441830:	jmp    DWORD PTR ds:0x44342c
  441836:	jmp    DWORD PTR ds:0x443430
  44183c:	jmp    DWORD PTR ds:0x443434
  441842:	jmp    DWORD PTR ds:0x443438
  441848:	jmp    DWORD PTR ds:0x44343c
  44184e:	jmp    DWORD PTR ds:0x443440
  441854:	jmp    DWORD PTR ds:0x443444
  44185a:	jmp    DWORD PTR ds:0x443448
  441860:	jmp    DWORD PTR ds:0x44344c
  441866:	jmp    DWORD PTR ds:0x443450
  44186c:	jmp    DWORD PTR ds:0x443454
  441872:	jmp    DWORD PTR ds:0x443458
  441878:	jmp    DWORD PTR ds:0x44345c
  44187e:	jmp    DWORD PTR ds:0x443460
  441884:	jmp    DWORD PTR ds:0x443464
  44188a:	jmp    DWORD PTR ds:0x443468
  441890:	jmp    DWORD PTR ds:0x44346c
  441896:	jmp    DWORD PTR ds:0x443470
  44189c:	jmp    DWORD PTR ds:0x443474
  4418a2:	jmp    DWORD PTR ds:0x443478
  4418a8:	jmp    DWORD PTR ds:0x44347c
  4418ae:	jmp    DWORD PTR ds:0x443480
  4418b4:	jmp    DWORD PTR ds:0x443484
  4418ba:	jmp    DWORD PTR ds:0x443488
  4418c0:	jmp    DWORD PTR ds:0x44348c
  4418c6:	jmp    DWORD PTR ds:0x443490
  4418cc:	jmp    DWORD PTR ds:0x443494
  4418d2:	jmp    DWORD PTR ds:0x443498
  4418d8:	jmp    DWORD PTR ds:0x44349c
  4418de:	jmp    DWORD PTR ds:0x4434a0
  4418e4:	jmp    DWORD PTR ds:0x4434a4
  4418ea:	jmp    DWORD PTR ds:0x4434a8
  4418f0:	jmp    DWORD PTR ds:0x4434ac
  4418f6:	jmp    DWORD PTR ds:0x4434b0
  4418fc:	jmp    DWORD PTR ds:0x4434b4
  441902:	jmp    DWORD PTR ds:0x4434b8
  441908:	jmp    DWORD PTR ds:0x4434bc
  44190e:	jmp    DWORD PTR ds:0x4434c0
  441914:	jmp    DWORD PTR ds:0x4434c4
  44191a:	jmp    DWORD PTR ds:0x4434c8
  441920:	jmp    DWORD PTR ds:0x4434cc
  441926:	jmp    DWORD PTR ds:0x4434d0
  44192c:	jmp    DWORD PTR ds:0x4434d4
  441932:	jmp    DWORD PTR ds:0x4434d8
  441938:	jmp    DWORD PTR ds:0x4434dc
  44193e:	jmp    DWORD PTR ds:0x4434e0
  441944:	jmp    DWORD PTR ds:0x4434e4
  44194a:	jmp    DWORD PTR ds:0x4434e8
  441950:	jmp    DWORD PTR ds:0x4434ec
  441956:	jmp    DWORD PTR ds:0x4434f0
  44195c:	jmp    DWORD PTR ds:0x4434f4
  441962:	jmp    DWORD PTR ds:0x4434f8
  441968:	jmp    DWORD PTR ds:0x4434fc
  44196e:	jmp    DWORD PTR ds:0x443500
  441974:	jmp    DWORD PTR ds:0x443504
  44197a:	jmp    DWORD PTR ds:0x443508
  441980:	jmp    DWORD PTR ds:0x44350c
  441986:	jmp    DWORD PTR ds:0x443510
  44198c:	jmp    DWORD PTR ds:0x443514
  441992:	jmp    DWORD PTR ds:0x443518
  441998:	jmp    DWORD PTR ds:0x44351c
  44199e:	jmp    DWORD PTR ds:0x443520
  4419a4:	jmp    DWORD PTR ds:0x443524
  4419aa:	jmp    DWORD PTR ds:0x443528
  4419b0:	jmp    DWORD PTR ds:0x44352c
  4419b6:	jmp    DWORD PTR ds:0x443530
  4419bc:	jmp    DWORD PTR ds:0x443534
  4419c2:	jmp    DWORD PTR ds:0x443538
  4419c8:	jmp    DWORD PTR ds:0x44353c
  4419ce:	jmp    DWORD PTR ds:0x443540
  4419d4:	jmp    DWORD PTR ds:0x443544
  4419da:	jmp    DWORD PTR ds:0x443548
  4419e0:	jmp    DWORD PTR ds:0x44354c
  4419e6:	jmp    DWORD PTR ds:0x443550
  4419ec:	jmp    DWORD PTR ds:0x443554
  4419f2:	jmp    DWORD PTR ds:0x443558
  4419f8:	jmp    DWORD PTR ds:0x44355c
  4419fe:	jmp    DWORD PTR ds:0x443560
  441a04:	jmp    DWORD PTR ds:0x443564
  441a0a:	jmp    DWORD PTR ds:0x443568
  441a10:	jmp    DWORD PTR ds:0x44356c
  441a16:	jmp    DWORD PTR ds:0x443570
  441a1c:	jmp    DWORD PTR ds:0x443574
  441a22:	jmp    DWORD PTR ds:0x443578
  441a28:	jmp    DWORD PTR ds:0x44357c
  441a2e:	jmp    DWORD PTR ds:0x443580
  441a34:	jmp    DWORD PTR ds:0x443584
  441a3a:	jmp    DWORD PTR ds:0x443588
  441a40:	jmp    DWORD PTR ds:0x44358c
  441a46:	jmp    DWORD PTR ds:0x443590
  441a4c:	jmp    DWORD PTR ds:0x443594
  441a52:	jmp    DWORD PTR ds:0x443598
  441a58:	jmp    DWORD PTR ds:0x44359c
  441a5e:	jmp    DWORD PTR ds:0x4435a0
  441a64:	jmp    DWORD PTR ds:0x4435a4
  441a6a:	jmp    DWORD PTR ds:0x4435a8
  441a70:	jmp    DWORD PTR ds:0x4435ac
  441a76:	jmp    DWORD PTR ds:0x4435b0
  441a7c:	jmp    DWORD PTR ds:0x4435b4
  441a82:	jmp    DWORD PTR ds:0x4435b8
  441a88:	jmp    DWORD PTR ds:0x4435bc
  441a8e:	jmp    DWORD PTR ds:0x4435c0
  441a94:	jmp    DWORD PTR ds:0x4435c8
  441a9a:	jmp    DWORD PTR ds:0x4435cc
  441aa0:	jmp    DWORD PTR ds:0x4435d0
  441aa6:	jmp    DWORD PTR ds:0x4435d4
  441aac:	jmp    DWORD PTR ds:0x4435d8
  441ab2:	jmp    DWORD PTR ds:0x4435dc
  441ab8:	jmp    DWORD PTR ds:0x4435e0
  441abe:	jmp    DWORD PTR ds:0x4435e4
  441ac4:	jmp    DWORD PTR ds:0x4435e8
  441aca:	jmp    DWORD PTR ds:0x4435ec
  441ad0:	jmp    DWORD PTR ds:0x4435f0
  441ad6:	jmp    DWORD PTR ds:0x4435f4
  441adc:	jmp    DWORD PTR ds:0x4435f8
  441ae2:	jmp    DWORD PTR ds:0x4435fc
  441ae8:	jmp    DWORD PTR ds:0x443600
  441aee:	jmp    DWORD PTR ds:0x443604
  441af4:	jmp    DWORD PTR ds:0x443608
  441afa:	jmp    DWORD PTR ds:0x44360c
  441b00:	jmp    DWORD PTR ds:0x443610
  441b06:	jmp    DWORD PTR ds:0x443614
  441b0c:	jmp    DWORD PTR ds:0x443618
  441b12:	jmp    DWORD PTR ds:0x44361c
  441b18:	jmp    DWORD PTR ds:0x443620
  441b1e:	jmp    DWORD PTR ds:0x443624
  441b24:	jmp    DWORD PTR ds:0x443628
  441b2a:	jmp    DWORD PTR ds:0x44362c
  441b30:	jmp    DWORD PTR ds:0x443630
  441b36:	jmp    DWORD PTR ds:0x443634
  441b3c:	jmp    DWORD PTR ds:0x443638
  441b42:	jmp    DWORD PTR ds:0x44363c
  441b48:	jmp    DWORD PTR ds:0x443640
  441b4e:	jmp    DWORD PTR ds:0x443644
  441b54:	jmp    DWORD PTR ds:0x443648
  441b5a:	jmp    DWORD PTR ds:0x44364c
  441b60:	jmp    DWORD PTR ds:0x443650
  441b66:	jmp    DWORD PTR ds:0x443654
  441b6c:	jmp    DWORD PTR ds:0x443658
  441b72:	jmp    DWORD PTR ds:0x44365c
  441b78:	jmp    DWORD PTR ds:0x443660
  441b7e:	jmp    DWORD PTR ds:0x443664
  441b84:	jmp    DWORD PTR ds:0x443668
  441b8a:	jmp    DWORD PTR ds:0x44366c
  441b90:	jmp    DWORD PTR ds:0x443670
  441b96:	jmp    DWORD PTR ds:0x443674
  441b9c:	jmp    DWORD PTR ds:0x443678
  441ba2:	jmp    DWORD PTR ds:0x44367c
  441ba8:	jmp    DWORD PTR ds:0x443680
  441bae:	jmp    DWORD PTR ds:0x443684
  441bb4:	jmp    DWORD PTR ds:0x443688
  441bba:	jmp    DWORD PTR ds:0x44368c
  441bc0:	jmp    DWORD PTR ds:0x443690
  441bc6:	jmp    DWORD PTR ds:0x443694
  441bcc:	jmp    DWORD PTR ds:0x443698
  441bd2:	jmp    DWORD PTR ds:0x44369c
  441bd8:	jmp    DWORD PTR ds:0x4436a0
  441bde:	jmp    DWORD PTR ds:0x4436a4
  441be4:	jmp    DWORD PTR ds:0x4436a8
  441bea:	jmp    DWORD PTR ds:0x4436ac
  441bf0:	jmp    DWORD PTR ds:0x4436b0
  441bf6:	jmp    DWORD PTR ds:0x4436b4
  441bfc:	jmp    DWORD PTR ds:0x4436b8
  441c02:	jmp    DWORD PTR ds:0x4436bc
  441c08:	jmp    DWORD PTR ds:0x4436c0
  441c0e:	jmp    DWORD PTR ds:0x4436c4
  441c14:	jmp    DWORD PTR ds:0x4436c8
  441c1a:	jmp    DWORD PTR ds:0x4436cc
  441c20:	jmp    DWORD PTR ds:0x4436d0
  441c26:	jmp    DWORD PTR ds:0x4436d4
  441c2c:	jmp    DWORD PTR ds:0x4436d8
  441c32:	jmp    DWORD PTR ds:0x4436dc
  441c38:	jmp    DWORD PTR ds:0x4436e0
  441c3e:	jmp    DWORD PTR ds:0x4436e4
  441c44:	jmp    DWORD PTR ds:0x4436e8
  441c4a:	jmp    DWORD PTR ds:0x4436ec
  441c50:	jmp    DWORD PTR ds:0x4436f0
  441c56:	jmp    DWORD PTR ds:0x4436f4
  441c5c:	jmp    DWORD PTR ds:0x4436f8
  441c62:	jmp    DWORD PTR ds:0x4436fc
  441c68:	jmp    DWORD PTR ds:0x443700
  441c6e:	jmp    DWORD PTR ds:0x443704
  441c74:	jmp    DWORD PTR ds:0x443708
  441c7a:	jmp    DWORD PTR ds:0x44370c
  441c80:	jmp    DWORD PTR ds:0x443710
  441c86:	jmp    DWORD PTR ds:0x443714
  441c8c:	jmp    DWORD PTR ds:0x443718
  441c92:	jmp    DWORD PTR ds:0x44371c
  441c98:	jmp    DWORD PTR ds:0x443720
  441c9e:	jmp    DWORD PTR ds:0x443724
  441ca4:	jmp    DWORD PTR ds:0x443728
  441caa:	jmp    DWORD PTR ds:0x44372c
  441cb0:	jmp    DWORD PTR ds:0x443730
  441cb6:	jmp    DWORD PTR ds:0x443734
  441cbc:	jmp    DWORD PTR ds:0x443738
  441cc2:	jmp    DWORD PTR ds:0x44373c
  441cc8:	jmp    DWORD PTR ds:0x443740
  441cce:	jmp    DWORD PTR ds:0x443744
  441cd4:	jmp    DWORD PTR ds:0x443748
  441cda:	jmp    DWORD PTR ds:0x44374c
  441ce0:	jmp    DWORD PTR ds:0x443750
  441ce6:	jmp    DWORD PTR ds:0x443754
  441cec:	jmp    DWORD PTR ds:0x443758
  441cf2:	jmp    DWORD PTR ds:0x44375c
  441cf8:	jmp    DWORD PTR ds:0x443760
  441cfe:	jmp    DWORD PTR ds:0x443764
  441d04:	jmp    DWORD PTR ds:0x443768
  441d0a:	jmp    DWORD PTR ds:0x44376c
  441d10:	jmp    DWORD PTR ds:0x443770
  441d16:	jmp    DWORD PTR ds:0x443774
  441d1c:	jmp    DWORD PTR ds:0x443778
  441d22:	jmp    DWORD PTR ds:0x44377c
  441d28:	jmp    DWORD PTR ds:0x443780
  441d2e:	jmp    DWORD PTR ds:0x443784
  441d34:	jmp    DWORD PTR ds:0x443788
  441d3a:	jmp    DWORD PTR ds:0x44378c
  441d40:	jmp    DWORD PTR ds:0x443790
  441d46:	jmp    DWORD PTR ds:0x443794
  441d4c:	jmp    DWORD PTR ds:0x443798
  441d52:	jmp    DWORD PTR ds:0x44379c
  441d58:	jmp    DWORD PTR ds:0x4437a0
  441d5e:	jmp    DWORD PTR ds:0x4437a4
  441d64:	jmp    DWORD PTR ds:0x4437a8
  441d6a:	jmp    DWORD PTR ds:0x4437ac
  441d70:	jmp    DWORD PTR ds:0x4437b0
  441d76:	jmp    DWORD PTR ds:0x4437b4
  441d7c:	jmp    DWORD PTR ds:0x4437b8
  441d82:	jmp    DWORD PTR ds:0x4437bc
  441d88:	jmp    DWORD PTR ds:0x4437c0
  441d8e:	jmp    DWORD PTR ds:0x4437c4
  441d94:	jmp    DWORD PTR ds:0x4437c8
  441d9a:	jmp    DWORD PTR ds:0x4437cc
  441da0:	jmp    DWORD PTR ds:0x4437d0
  441da6:	jmp    DWORD PTR ds:0x4437d4
  441dac:	jmp    DWORD PTR ds:0x4437d8
  441db2:	jmp    DWORD PTR ds:0x4437dc
  441db8:	jmp    DWORD PTR ds:0x4437e0
  441dbe:	jmp    DWORD PTR ds:0x4437e4
  441dc4:	jmp    DWORD PTR ds:0x4437e8
  441dca:	jmp    DWORD PTR ds:0x4437ec
  441dd0:	jmp    DWORD PTR ds:0x4437f0
  441dd6:	jmp    DWORD PTR ds:0x4437f4
  441ddc:	jmp    DWORD PTR ds:0x4437f8
  441de2:	jmp    DWORD PTR ds:0x4437fc
  441de8:	jmp    DWORD PTR ds:0x443800
  441dee:	jmp    DWORD PTR ds:0x443804
  441df4:	jmp    DWORD PTR ds:0x443808
  441dfa:	jmp    DWORD PTR ds:0x44380c
  441e00:	jmp    DWORD PTR ds:0x443810
  441e06:	jmp    DWORD PTR ds:0x443814
  441e0c:	jmp    DWORD PTR ds:0x443818
  441e12:	jmp    DWORD PTR ds:0x44381c
  441e18:	jmp    DWORD PTR ds:0x443820
  441e1e:	jmp    DWORD PTR ds:0x443824
  441e24:	jmp    DWORD PTR ds:0x44382c
  441e2a:	jmp    DWORD PTR ds:0x443830
  441e30:	jmp    DWORD PTR ds:0x443834
  441e36:	jmp    DWORD PTR ds:0x443838
  441e3c:	jmp    DWORD PTR ds:0x44383c
  441e42:	jmp    DWORD PTR ds:0x443840
  441e48:	jmp    DWORD PTR ds:0x443844
  441e4e:	jmp    DWORD PTR ds:0x443848
  441e54:	jmp    DWORD PTR ds:0x44384c
  441e5a:	jmp    DWORD PTR ds:0x443850
  441e60:	jmp    DWORD PTR ds:0x443854
  441e66:	jmp    DWORD PTR ds:0x443858
  441e6c:	jmp    DWORD PTR ds:0x44385c
  441e72:	jmp    DWORD PTR ds:0x443860
  441e78:	jmp    DWORD PTR ds:0x443864
  441e7e:	jmp    DWORD PTR ds:0x443868
  441e84:	jmp    DWORD PTR ds:0x44386c
  441e8a:	jmp    DWORD PTR ds:0x443870
  441e90:	jmp    DWORD PTR ds:0x443874
  441e96:	jmp    DWORD PTR ds:0x443878
  441e9c:	jmp    DWORD PTR ds:0x44387c
  441ea2:	jmp    DWORD PTR ds:0x443880
  441ea8:	jmp    DWORD PTR ds:0x443884
  441eae:	jmp    DWORD PTR ds:0x443888
  441eb4:	jmp    DWORD PTR ds:0x44388c
  441eba:	jmp    DWORD PTR ds:0x443890
  441ec0:	jmp    DWORD PTR ds:0x443894
  441ec6:	jmp    DWORD PTR ds:0x443898
  441ecc:	jmp    DWORD PTR ds:0x44389c
  441ed2:	jmp    DWORD PTR ds:0x4438a0
  441ed8:	jmp    DWORD PTR ds:0x4438a4
  441ede:	jmp    DWORD PTR ds:0x4438a8
  441ee4:	jmp    DWORD PTR ds:0x4438ac
  441eea:	jmp    DWORD PTR ds:0x4438b0
  441ef0:	jmp    DWORD PTR ds:0x4438b4
  441ef6:	jmp    DWORD PTR ds:0x4438b8
  441efc:	jmp    DWORD PTR ds:0x4438bc
  441f02:	jmp    DWORD PTR ds:0x4438c0
  441f08:	jmp    DWORD PTR ds:0x4438c4
  441f0e:	jmp    DWORD PTR ds:0x4438c8
  441f14:	jmp    DWORD PTR ds:0x4438cc
  441f1a:	jmp    DWORD PTR ds:0x4438d0
  441f20:	jmp    DWORD PTR ds:0x4438d4
  441f26:	jmp    DWORD PTR ds:0x4438d8
  441f2c:	jmp    DWORD PTR ds:0x4438dc
  441f32:	jmp    DWORD PTR ds:0x4438e0
  441f38:	jmp    DWORD PTR ds:0x4438e4
  441f3e:	jmp    DWORD PTR ds:0x4438e8
  441f44:	jmp    DWORD PTR ds:0x4438ec
  441f4a:	jmp    DWORD PTR ds:0x4438f0
  441f50:	jmp    DWORD PTR ds:0x4438f4
  441f56:	jmp    DWORD PTR ds:0x4438f8
  441f5c:	jmp    DWORD PTR ds:0x4438fc
  441f62:	jmp    DWORD PTR ds:0x443900
  441f68:	jmp    DWORD PTR ds:0x443904
  441f6e:	jmp    DWORD PTR ds:0x443908
  441f74:	jmp    DWORD PTR ds:0x44390c
  441f7a:	jmp    DWORD PTR ds:0x443910
  441f80:	jmp    DWORD PTR ds:0x443914
  441f86:	jmp    DWORD PTR ds:0x443918
  441f8c:	jmp    DWORD PTR ds:0x44391c
  441f92:	jmp    DWORD PTR ds:0x443920
  441f98:	jmp    DWORD PTR ds:0x443924
  441f9e:	jmp    DWORD PTR ds:0x443928
  441fa4:	jmp    DWORD PTR ds:0x44392c
  441faa:	jmp    DWORD PTR ds:0x443930
  441fb0:	jmp    DWORD PTR ds:0x443934
  441fb6:	jmp    DWORD PTR ds:0x443938
  441fbc:	jmp    DWORD PTR ds:0x44393c
  441fc2:	jmp    DWORD PTR ds:0x443940
