
e3cc172baa1bc75ee5797906bff0b27248134e4b92cd9ecab1fdc22ef4587ebe.exe:     file format pei-i386


Disassembly of section .text:

00411000 <.text>:
  411000:	dec    ebp
  411001:	cmp    dl,BYTE PTR [esi]
  411003:	mov    bl,0x62
  411005:	dec    ebp
  411006:	dec    esi
  411007:	fdiv   QWORD PTR [ebp-0x17619bec]
  41100d:	int    0x42
  41100f:	dec    eax
  411010:	mov    edi,ds
  411012:	or     ah,bh
  411014:	xchg   BYTE PTR [edi-0x24d8caba],al
  41101a:	mov    edx,0xa450602
  41101f:	mov    eax,0xea56ca01
  411024:	xchg   DWORD PTR [edi],edx
  411026:	push   eax
  411027:	repz rcl BYTE PTR [esi-0x38],0xbb
  41102c:	fisub  WORD PTR [esi-0x5]
  41102f:	xchg   ecx,eax
  411030:	mov    bl,0x8a
  411032:	pusha  
  411033:	sbb    al,0x40
  411035:	cmp    edi,DWORD PTR [esi]
  411037:	push   ss
  411038:	push   edx
  411039:	lods   al,BYTE PTR ds:[esi]
  41103a:	xlat   BYTE PTR ds:[ebx]
  41103b:	ja     0x411009
  41103d:	inc    edx
  41103e:	and    eax,0x5773254d
  411043:	and    dl,cl
  411045:	mov    ds:0x7425ff30,eax
  41104a:	retf   0xb9ff
  41104d:	jge    0x410fe3
  41104f:	retf   
  411050:	retf   
  411051:	pop    ds
  411052:	stos   BYTE PTR es:[edi],al
  411053:	aad    0x9c
  411055:	ds loope 0x411058
  411058:	scas   al,BYTE PTR es:[edi]
  411059:	mov    ds:0xc138be12,al
  41105e:	test   DWORD PTR [edx-0x7ca80a19],ebx
  411064:	and    al,0x20
  411066:	and    edi,edi
  411068:	aaa    
  411069:	xor    DWORD PTR [esp+ecx*4-0x34],ecx
  41106d:	mov    edx,0x8614ee0a
  411072:	lds    esp,FWORD PTR [eax]
  411074:	sbb    BYTE PTR [esi+0x11c89f64],ch
  41107a:	xchg   ebp,eax
  41107b:	call   0xec82:0xffca5c95
  411082:	popa   
  411083:	xchg   ebp,eax
  411084:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411086:	mov    ds:0xfc88bd93,al
  41108b:	push   0xfffffff7
  41108d:	ins    DWORD PTR es:[edi],dx
  41108e:	mov    ecx,0xd7324c78
  411093:	int    0xca
  411095:	pop    esi
  411096:	xchg   esi,eax
  411097:	je     0x41102f
  411099:	mov    ebx,0xb01b466d
  41109e:	lahf   
  41109f:	adc    al,0x1
  4110a1:	dec    ebp
  4110a2:	push   edx
  4110a3:	inc    edi
  4110a4:	bound  ecx,QWORD PTR [edx+0x318b7cce]
  4110aa:	std    
  4110ab:	sub    BYTE PTR [ebp+0x1a3e0ebb],dl
  4110b1:	sbb    eax,edx
  4110b3:	inc    edx
  4110b4:	aaa    
  4110b5:	fist   DWORD PTR [ecx-0x47374de6]
  4110bb:	xor    BYTE PTR [edi],0x72
  4110be:	add    eax,0x26c8d776
  4110c3:	fcomip st,st(3)
  4110c5:	clc    
  4110c6:	imul   esp,esi,0x27
  4110c9:	pop    ebp
  4110ca:	sub    DWORD PTR [ecx-0x50],eax
  4110cd:	pop    ecx
  4110ce:	push   0x4d
  4110d0:	je     0x4110d2
  4110d2:	cmp    dh,BYTE PTR [ecx-0x622702db]
  4110d8:	and    eax,0x789e6979
  4110dd:	and    al,BYTE PTR [eax-0x4b1a407a]
  4110e3:	ja     0x4110f0
  4110e5:	dec    eax
  4110e6:	cwde   
  4110e7:	int    0x10
  4110e9:	pop    ds
  4110ea:	popf   
  4110eb:	mov    eax,ds:0x5c47df00
  4110f0:	xor    dl,ch
  4110f2:	mov    ecx,0x1e5ad8af
  4110f7:	mov    ebp,0x11a9b9ed
  4110fc:	out    0x29,al
  4110fe:	stos   DWORD PTR es:[edi],eax
  4110ff:	jl     0x41112e
  411101:	inc    BYTE PTR ds:[esi]
  411104:	jae    0x411155
  411106:	mov    al,ds:0x4a0b0b58
  41110b:	adc    ch,BYTE PTR [ecx-0x80]
  41110e:	mov    dh,0x9b
  411110:	mov    cl,0x49
  411112:	mov    ds:0x2be8fb70,al
  411117:	ror    ecx,0x2c
  41111a:	out    dx,eax
  41111b:	ret    
  41111c:	in     al,0x7e
  41111e:	sbb    al,0x3d
  411120:	or     BYTE PTR ds:0xbcba80a,0xe9
  411127:	push   esp
  411128:	inc    ebp
  411129:	outs   dx,BYTE PTR ds:[esi]
  41112a:	pusha  
  41112b:	jge    0x411176
  41112d:	popf   
  41112e:	push   es
  41112f:	cdq    
  411130:	call   0x33b744e3
  411135:	test   BYTE PTR [esi+edx*8-0x34],al
  411139:	mov    ebx,0x71b3ddf2
  41113e:	push   0xa7856c0a
  411143:	test   ch,0x76
  411146:	es test DWORD PTR cs:[ebx+0x58a8074f],esp
  41114e:	in     al,dx
  41114f:	adc    al,bl
  411151:	sbb    dl,BYTE PTR [ebx-0x4d94680]
  411157:	imul   edx,edx,0xad128044
  41115d:	push   0xce4d2824
  411162:	imul   edi,DWORD PTR [edi],0x7d
  411165:	add    eax,0x94954240
  41116a:	xor    eax,0x8344b8df
  41116f:	sub    eax,0xff40aafc
  411174:	(bad)  
  411175:	sbb    ebx,DWORD PTR [edx]
  411177:	xchg   esi,eax
  411178:	loop   0x41118b
  41117a:	in     eax,dx
  41117b:	adc    BYTE PTR [edx+0x4ecf6075],bl
  411181:	inc    ecx
  411182:	push   edx
  411183:	cs push esp
  411185:	ins    DWORD PTR es:[edi],dx
  411186:	dec    edi
  411187:	dec    ecx
  411188:	bound  edx,QWORD PTR [ebp+0x6b48abb0]
  41118e:	or     bh,dl
  411190:	mov    eax,ebx
  411192:	imul   ebp,DWORD PTR [edi+0x5d],0x2daa2cca
  411199:	inc    ecx
  41119a:	mov    bl,0xf4
  41119c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41119d:	dec    edx
  41119e:	sub    bl,BYTE PTR [ecx]
  4111a0:	and    edi,edx
  4111a2:	and    esp,eax
  4111a4:	sub    al,BYTE PTR [eax-0x2bf5c6bd]
  4111aa:	test   al,0x91
  4111ac:	ds push 0xffffffaa
  4111af:	cmp    al,0x20
  4111b1:	sbb    edi,DWORD PTR [ecx+0x24]
  4111b4:	jno    0x411161
  4111b6:	jge    0x411188
  4111b8:	jge    0x411149
  4111ba:	scas   eax,DWORD PTR es:[edi]
  4111bb:	(bad)  
  4111bc:	adc    al,0x5f
  4111be:	pop    edx
  4111bf:	xchg   ebx,eax
  4111c0:	inc    eax
  4111c1:	push   ss
  4111c2:	xchg   esi,eax
  4111c3:	call   0x11ec50fb
  4111c8:	ret    0x385b
  4111cb:	daa    
  4111cc:	scas   al,BYTE PTR es:[edi]
  4111cd:	mov    DWORD PTR [esi-0x515b977e],0x15064ae4
  4111d7:	sbb    edi,DWORD PTR [edx-0x59]
  4111da:	mov    ds:0x98863921,eax
  4111df:	xchg   DWORD PTR [edi],ebp
  4111e1:	mov    ebp,0x96579e0c
  4111e6:	loope  0x4111d2
  4111e8:	imul   ebx,DWORD PTR ds:0xfe55667,0xb4d9d085
  4111f2:	mov    eax,ds:0x46109029
  4111f7:	into   
  4111f8:	lahf   
  4111f9:	or     dl,BYTE PTR [esi-0x5136c906]
  4111ff:	stos   BYTE PTR es:[edi],al
  411200:	int    0x2b
  411202:	sbb    edx,DWORD PTR [edx+0x2ea7282f]
  411208:	xchg   ebp,eax
  411209:	push   ebp
  41120a:	sbb    al,0xeb
  41120c:	inc    edx
  41120d:	pop    ebx
  41120e:	jb     0x411191
  411210:	sbb    ebp,esi
  411212:	inc    ebx
  411213:	leave  
  411214:	fistp  DWORD PTR [ecx-0x17]
  411217:	mov    ebx,0x624aef4a
  41121c:	jbe    0x41128f
  41121e:	sub    ecx,eax
  411220:	xchg   al,bh
  411222:	pop    esi
  411223:	xchg   ebp,eax
  411224:	jecxz  0x4111d9
  411226:	xor    cl,BYTE PTR [edx+edx*8]
  411229:	jp     0x411261
  41122b:	mov    dh,bl
  41122d:	inc    ebp
  41122e:	repz in eax,0xd4
  411231:	jg     0x411208
  411233:	jns    0x41124e
  411235:	retf   0x83d
  411238:	cmp    al,0xa4
  41123a:	repnz push 0xcf7b8f26
  411240:	or     esp,DWORD PTR [edx]
  411242:	mov    ah,ah
  411244:	jno    0x41129f
  411246:	rcl    DWORD PTR [eax-0x276d6dcc],1
  41124c:	jp     0x4112bf
  41124e:	test   DWORD PTR [edx+0x600efa77],edi
  411254:	jb     0x411226
  411256:	call   0x2d32:0x13db32a2
  41125d:	fdivrp st(0),st
  41125f:	stos   BYTE PTR es:[edi],al
  411260:	rol    BYTE PTR [eax],cl
  411262:	dec    edx
  411263:	add    bl,BYTE PTR ds:0xd83a4a1c
  411269:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41126a:	sub    BYTE PTR [ebp-0x57f4e095],dh
  411270:	xor    BYTE PTR [eax+0x2c3fe6d0],dl
  411276:	in     eax,0x46
  411278:	shr    DWORD PTR [ebx-0x14],1
  41127b:	mov    al,ds:0x2d37f649
  411280:	ins    BYTE PTR es:[edi],dx
  411281:	inc    edi
  411282:	popa   
  411283:	inc    esp
  411284:	leave  
  411285:	sbb    al,BYTE PTR [ebx-0x69]
  411288:	cmp    eax,0xd51a26e3
  41128d:	idiv   DWORD PTR [ebx-0x3e]
  411290:	out    0x7c,al
  411292:	imul   edx,DWORD PTR [edi+0x77749fcb],0x14be4080
  41129c:	les    edx,FWORD PTR [ebx-0x7e]
  41129f:	into   
  4112a0:	in     al,0xa8
  4112a2:	dec    edi
  4112a3:	jmp    0x95e97f37
  4112a8:	test   DWORD PTR [ebx-0x23946219],edi
  4112ae:	(bad)  
  4112b0:	test   eax,0x6d73506f
  4112b5:	ret    0x1a62
  4112b8:	jmp    0x41131e
  4112ba:	xor    al,0x53
  4112bc:	imul   eax,DWORD PTR [edx+0x4c],0xe3f03c97
  4112c3:	mov    esi,0x7ca8ed98
  4112c8:	cmc    
  4112c9:	test   DWORD PTR [ecx],0x3c8f487b
  4112cf:	adc    BYTE PTR [esi],dh
  4112d1:	gs cs dec ecx
  4112d4:	inc    ecx
  4112d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4112d6:	or     edx,DWORD PTR [ecx]
  4112d8:	sahf   
  4112d9:	js     0x4112dd
  4112db:	pusha  
  4112dc:	sub    esi,DWORD PTR [edx]
  4112de:	imul   ebp,DWORD PTR [edx-0x7f],0x874134b3
  4112e5:	dec    ecx
  4112e6:	sub    BYTE PTR [edi],dl
  4112e8:	pop    esi
  4112e9:	push   edx
  4112ea:	mov    ah,0x93
  4112ec:	mov    es,ebx
  4112ee:	mov    ecx,0x5b7ba8d5
  4112f3:	xchg   ebx,eax
  4112f4:	push   ebx
  4112f5:	and    ecx,DWORD PTR [edx+eiz*4]
  4112f8:	aas    
  4112f9:	lods   eax,DWORD PTR ds:[esi]
  4112fa:	jle    0x4112b5
  4112fc:	outs   dx,BYTE PTR ds:[esi]
  4112fd:	jmp    0x5a4e:0xccf12371
  411304:	pop    es
  411305:	dec    edx
  411306:	or     eax,esi
  411308:	and    eax,0x56e840a2
  41130d:	and    ebx,DWORD PTR [eax]
  41130f:	ror    DWORD PTR [esi],0xe7
  411312:	mov    ds,WORD PTR [edi+edi*8]
  411315:	push   edx
  411316:	cmc    
  411317:	or     dl,ah
  411319:	add    cl,BYTE PTR [ecx-0x4b]
  41131c:	cmc    
  41131d:	ja     0x411384
  41131f:	daa    
  411320:	mov    ebp,0x8648386a
  411325:	fisttp DWORD PTR [edi-0x76]
  411328:	jp     0x411390
  41132a:	jp     0x41130a
  41132c:	push   eax
  41132d:	inc    esi
  41132e:	popf   
  41132f:	or     al,0x30
  411331:	mov    ds:0xddbdee25,al
  411336:	or     DWORD PTR [ecx-0x5acd901e],eax
  41133c:	ror    BYTE PTR [edx+0x21d5034a],cl
  411342:	rol    ch,1
  411344:	jmp    0x522f:0x2b4bea77
  41134b:	je     0x411335
  41134d:	mov    ds:0xfd1389e2,eax
  411352:	(bad)  
  411353:	mov    cs,WORD PTR [ecx-0x21]
  411356:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411357:	sub    al,0x46
  411359:	cli    
  41135a:	fwait
  41135b:	js     0x4112f0
  41135d:	jb     0x41136a
  41135f:	stos   DWORD PTR es:[edi],eax
  411360:	cmp    bl,ah
  411362:	jp     0x4112e6
  411364:	cmp    BYTE PTR [ecx-0x278f5941],0x88
  41136b:	xchg   edi,eax
  41136c:	js     0x4112f2
  41136e:	mov    cl,0x36
  411370:	mov    ecx,0x7e9a01bc
  411375:	cmp    al,0x12
  411377:	xlat   BYTE PTR ds:[ebx]
  411378:	jge    0x411305
  41137a:	push   cs
  41137b:	xchg   ecx,eax
  41137c:	fadd   QWORD PTR [edx-0x6e]
  41137f:	xchg   DWORD PTR [edx+0x7e],eax
  411382:	std    
  411383:	mov    BYTE PTR [edx],bh
  411385:	jno    0x4113ed
  411387:	sbb    DWORD PTR [ecx],esp
  411389:	je     0x411380
  41138b:	stos   DWORD PTR es:[edi],eax
  41138c:	xor    edi,DWORD PTR [ebp-0x39]
  41138f:	push   0x6883e93e
  411394:	sahf   
  411395:	or     DWORD PTR [esi+0x462f6033],ecx
  41139b:	sbb    bh,ch
  41139d:	xor    dh,BYTE PTR [ebx+0x1625835c]
  4113a3:	cs std 
  4113a5:	aam    0x33
  4113a7:	mov    al,0xb
  4113a9:	in     eax,0xc9
  4113ab:	xor    BYTE PTR [ebp+edi*4-0x39],al
  4113af:	fdivrp st(1),st
  4113b1:	or     edi,DWORD PTR [edi-0xf389ff9]
  4113b7:	adc    DWORD PTR [ecx-0x7a40292c],0xbeb8eb58
  4113c1:	inc    dh
  4113c3:	add    al,0x23
  4113c5:	aaa    
  4113c6:	repz xlat BYTE PTR ds:[ebx]
  4113c8:	or     DWORD PTR [eax*4+0x1ef4bb55],ecx
  4113cf:	jmp    0x66f630e8
  4113d4:	mov    bl,0xe
  4113d6:	pop    ds
  4113d7:	das    
  4113d8:	xchg   DWORD PTR [ebx+0x79],ebx
  4113db:	loope  0x41140a
  4113dd:	jl     0x411403
  4113df:	jecxz  0x411448
  4113e1:	ins    DWORD PTR es:[edi],dx
  4113e2:	enter  0x83ad,0x21
  4113e6:	mov    al,ds:0x1005014a
  4113eb:	xlat   BYTE PTR ds:[ebx]
  4113ec:	std    
  4113ed:	rcl    BYTE PTR [edi+ebx*4-0x4a],0x99
  4113f2:	pop    es
  4113f3:	jle    0x41145c
  4113f5:	(bad)  
  4113f7:	aad    0xa5
  4113f9:	jbe    0x4113bd
  4113fb:	dec    esi
  4113fc:	jno    0x4113cf
  4113fe:	mov    ds:0x1e21e22e,eax
  411403:	(bad)  
  411405:	mov    edx,0xec06c0b6
  41140a:	ss pop edx
  41140c:	cli    
  41140d:	mov    esi,0x3f6093d8
  411412:	sti    
  411413:	jb     0x411472
  411415:	xchg   BYTE PTR [edx],ah
  411417:	dec    edx
  411418:	xchg   bl,bh
  41141a:	(bad)
  41141e:	adc    al,BYTE PTR [ecx-0x51d9e827]
  411424:	(bad)
  411428:	hlt    
  411429:	inc    edi
  41142a:	pop    ebp
  41142b:	fisubr DWORD PTR [ecx-0x4b9529ba]
  411431:	sub    DWORD PTR [esi+0x12209257],esi
  411437:	fs jmp 0x4113dc
  41143a:	mov    bl,0x8e
  41143c:	sub    ecx,DWORD PTR [edi+0x2a63531f]
  411442:	loope  0x411496
  411444:	pop    es
  411445:	adc    ah,bh
  411447:	jg     0x4113e7
  411449:	xor    edx,esi
  41144b:	pop    ds
  41144c:	pop    edx
  41144d:	adc    al,0x1d
  41144f:	in     al,0x5e
  411451:	ror    dh,0xd2
  411454:	stos   BYTE PTR es:[edi],al
  411455:	ins    BYTE PTR es:[edi],dx
  411456:	xchg   edx,eax
  411457:	push   cs
  411458:	loop   0x4114a9
  41145a:	push   ss
  41145b:	inc    ebp
  41145c:	add    BYTE PTR [eax+0x73612ec],dl
  411462:	shl    DWORD PTR [edx],cl
  411464:	mov    al,0xfa
  411466:	xchg   edx,eax
  411467:	dec    BYTE PTR ds:0xbcc77ba0
  41146d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41146e:	ins    DWORD PTR es:[edi],dx
  41146f:	addr16 test eax,0xacd0be71
  411475:	mov    eax,DWORD PTR [esi-0x75bd77d4]
  41147b:	cs aaa 
  41147d:	or     edx,DWORD PTR [ebx-0x2619acca]
  411483:	mov    gs,esp
  411485:	iret   
  411486:	loopne 0x411425
  411488:	ja     0x41142f
  41148a:	dec    esi
  41148b:	ins    BYTE PTR es:[edi],dx
  41148c:	push   es
  41148d:	jnp    0x4114be
  41148f:	cmp    ebp,eax
  411491:	es sbb eax,0xc3290d89
  411497:	jne    0x4114c3
  411499:	adc    al,0x8b
  41149b:	cmp    ebx,DWORD PTR [edx]
  41149d:	(bad)  
  41149e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41149f:	aaa    
  4114a0:	(bad)  
  4114a2:	or     cl,BYTE PTR [esi+0x4ce6deef]
  4114a8:	(bad)  
  4114a9:	cmp    ebp,DWORD PTR [esi-0x42]
  4114ac:	lahf   
  4114ad:	shl    DWORD PTR [edx],cl
  4114af:	scas   eax,DWORD PTR es:[edi]
  4114b0:	in     al,0x1
  4114b2:	push   esi
  4114b3:	fst    QWORD PTR [ecx+0x16]
  4114b6:	jns    0x411522
  4114b8:	rol    dh,1
  4114ba:	ret    0xda1c
  4114bd:	into   
  4114be:	js     0x4114bc
  4114c0:	test   DWORD PTR [edi-0x6b630a9f],esp
  4114c6:	inc    eax
  4114c7:	(bad)  
  4114c8:	aas    
  4114c9:	das    
  4114ca:	int3   
  4114cb:	stos   DWORD PTR es:[edi],eax
  4114cc:	and    dl,BYTE PTR [esi]
  4114ce:	xor    al,0x83
  4114d0:	mov    cl,BYTE PTR [ebx+0x13c7192a]
  4114d6:	xchg   esp,eax
  4114d7:	cmc    
  4114d8:	clc    
  4114d9:	popa   
  4114da:	lahf   
  4114db:	dec    dh
  4114dd:	test   eax,0x2443ff0
  4114e2:	repnz mov al,0xd9
  4114e5:	fs jle 0x411561
  4114e8:	jmp    0x411539
  4114ea:	dec    edi
  4114eb:	dec    eax
  4114ec:	icebp  
  4114ed:	mov    ebp,0x190edc4a
  4114f2:	arpl   WORD PTR [esi+0x110f37db],di
  4114f8:	retf   
  4114f9:	fs sub edx,ebx
  4114fc:	lods   eax,DWORD PTR ds:[esi]
  4114fd:	ja     0x4114f5
  4114ff:	push   edi
  411500:	jg     0x4114f6
  411502:	push   edi
  411503:	enter  0x3370,0xd6
  411507:	inc    esi
  411508:	call   0x33f0102f
  41150d:	imul   eax,DWORD PTR [ebx+ebx*4-0x54],0x56
  411512:	jmp    0x4114b6
  411514:	ins    BYTE PTR es:[edi],dx
  411515:	das    
  411516:	mov    cl,0x2
  411518:	dec    ebx
  411519:	cmp    bl,al
  41151b:	into   
  41151c:	and    DWORD PTR ds:0xe9867327,eax
  411522:	jmp    0x79fe:0x34338667
  411529:	loop   0x4114f8
  41152b:	fcom   st(6)
  41152d:	sub    esi,edi
  41152f:	std    
  411530:	int    0x4f
  411532:	add    eax,0xbff1d798
  411537:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411538:	inc    edi
  411539:	lds    esi,FWORD PTR [esi-0x5]
  41153c:	hlt    
  41153d:	add    eax,edx
  41153f:	adc    eax,0xcf2a58c3
  411544:	push   0xd40e9de
  411549:	nop
  41154a:	sar    DWORD PTR [eax+eax*2+0x57],0x47
  41154f:	push   esp
  411550:	mov    al,ds:0x380ce196
  411555:	sub    dh,dl
  411557:	(bad)  
  411558:	(bad)  
  411559:	cmp    cl,cl
  41155b:	aaa    
  41155c:	es xor al,0xc9
  41155f:	or     al,dl
  411561:	mov    bh,ah
  411563:	lods   eax,DWORD PTR gs:[esi]
  411565:	repnz xchg edx,eax
  411567:	sbb    bh,BYTE PTR [edi-0x4f]
  41156a:	(bad)
  41156d:	sahf   
  41156e:	mov    ?,edi
  411570:	mov    BYTE PTR [eax],0xea
  411573:	cmp    esi,ebx
  411575:	mov    bh,0xac
  411577:	adc    al,0xc8
  411579:	ja     0x411503
  41157b:	push   cs
  41157c:	mov    esp,0x4d6c9165
  411581:	scas   al,BYTE PTR es:[edi]
  411582:	mov    gs,WORD PTR [esi]
  411584:	(bad)  
  411585:	(bad)  
  411586:	addr16 aam 0x2d
  411589:	into   
  41158a:	cdq    
  41158b:	inc    ebx
  41158c:	repz and al,0x3
  41158f:	jno    0x411537
  411591:	jmp    0x7f5e:0x114db00d
  411598:	ins    DWORD PTR es:[edi],dx
  411599:	inc    edi
  41159a:	and    eax,0xc46ce493
  41159f:	adc    DWORD PTR [edi+edi*4],ebx
  4115a2:	push   eax
  4115a3:	aaa    
  4115a4:	vunpcklps ymm7,ymm5,YMMWORD PTR [ebx]
  4115a8:	push   eax
  4115a9:	(bad)  
  4115aa:	lea    esi,[edx+0x609cb378]
  4115b0:	loopne 0x411587
  4115b2:	or     DWORD PTR [edi-0x3da20a9],edx
  4115b8:	dec    DWORD PTR [edi-0x17]
  4115bb:	add    BYTE PTR [esp+ebp*4+0x78],dh
  4115bf:	sub    eax,0xf3701531
  4115c4:	mov    edi,edx
  4115c6:	js     0x41161a
  4115c8:	mov    al,0x7d
  4115ca:	pop    eax
  4115cb:	fld    DWORD PTR [ecx]
  4115cd:	fld    st(7)
  4115cf:	sti    
  4115d0:	or     bl,dh
  4115d2:	add    dh,BYTE PTR [edi+0x6d]
  4115d5:	jbe    0x411567
  4115d7:	aad    0xe4
  4115d9:	xchg   ebx,eax
  4115da:	mov    bl,0x78
  4115dc:	in     al,0x8f
  4115de:	div    BYTE PTR [edi+edi*2-0x64]
  4115e2:	mov    edx,0x13cfcd59
  4115e7:	push   edi
  4115e8:	mov    dh,0xf6
  4115ea:	test   al,0x3d
  4115ec:	mov    ?,WORD PTR [esi+0x68]
  4115ef:	les    eax,FWORD PTR [ebx-0x2717228e]
  4115f5:	xor    DWORD PTR [edx-0x461768b3],ebp
  4115fb:	retf   0x6d49
  4115fe:	push   ds
  4115ff:	cwde   
  411600:	add    al,0x94
  411602:	daa    
  411603:	mov    ebp,DWORD PTR [eax+esi*1]
  411606:	lods   eax,DWORD PTR ds:[esi]
  411607:	xchg   ecx,eax
  411608:	int3   
  411609:	shl    BYTE PTR [edx+0x7106e050],0x8c
  411610:	dec    esi
  411611:	out    dx,eax
  411612:	jbe    0x41167b
  411614:	cs aas 
  411616:	test   al,0xc2
  411618:	inc    edx
  411619:	inc    edx
  41161a:	retf   0xb074
  41161d:	cmc    
  41161e:	(bad)  
  41161f:	or     eax,0xc439688f
  411624:	cmp    BYTE PTR [ecx],dh
  411626:	xchg   ecx,eax
  411627:	pop    esp
  411628:	pusha  
  411629:	(bad)  
  41162b:	sub    esp,DWORD PTR [edx+0x7a95bac3]
  411631:	push   ebx
  411632:	jns    0x41160a
  411634:	mov    eax,ds:0x363a3313
  411639:	xchg   BYTE PTR [esi+0x29],al
  41163c:	fwait
  41163d:	xor    eax,0x17f20832
  411642:	fdiv   QWORD PTR [ebx]
  411644:	jp     0x4115e8
  411646:	cmc    
  411647:	inc    esi
  411648:	mov    BYTE PTR ds:0xec44cef2,al
  41164e:	push   0x3e7a5974
  411653:	fcom   DWORD PTR [ebp+0x6b]
  411656:	gs daa 
  411658:	cmp    al,0x47
  41165a:	rol    al,cl
  41165c:	repnz xchg edi,eax
  41165e:	sub    al,BYTE PTR [eax-0x1f2c38f6]
  411664:	sub    cl,BYTE PTR [ecx+0x5ae23e51]
  41166a:	dec    ebx
  41166b:	das    
  41166c:	add    eax,0x1110c73b
  411671:	in     eax,dx
  411672:	es fwait
  411674:	in     eax,0x47
  411676:	das    
  411677:	cmp    esi,DWORD PTR [edx+edx*2]
  41167a:	mov    ds:0x40203b64,eax
  41167f:	(bad)  
  411680:	jmp    0x44d:0x90ea0fa7
  411687:	fadd   st,st(2)
  411689:	fcmovnb st,st(4)
  41168b:	sbb    dh,BYTE PTR [esi]
  41168d:	mov    ah,0x3e
  41168f:	popf   
  411690:	mov    esp,0xb3b09a24
  411695:	jbe    0x41163c
  411697:	out    0x20,eax
  411699:	pop    ebp
  41169a:	repnz shl BYTE PTR [esi],0xc
  41169e:	jb     0x41166b
  4116a0:	pusha  
  4116a1:	mov    ds:0x23067f61,al
  4116a6:	sti    
  4116a7:	jmp    0x26bca066
  4116ac:	test   DWORD PTR es:[edi-0x1d],esp
  4116b0:	inc    ebp
  4116b1:	push   ds
  4116b2:	push   ecx
  4116b3:	shl    BYTE PTR [edi+ecx*4+0x4f],cl
  4116b7:	or     cl,BYTE PTR [eax]
  4116b9:	or     bh,ch
  4116bb:	xchg   esp,eax
  4116bc:	(bad)  
  4116bd:	push   ebx
  4116be:	mov    dl,BYTE PTR [ecx+0x52]
  4116c1:	mov    al,ds:0xc94fadd4
  4116c6:	cli    
  4116c7:	xor    DWORD PTR [ecx+0x32],esi
  4116ca:	pop    ebp
  4116cb:	inc    esi
  4116cc:	sbb    al,BYTE PTR [eax+0x16]
  4116cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4116d0:	mov    es,WORD PTR ss:[esi]
  4116d3:	mov    ch,0x12
  4116d5:	(bad)  
  4116d6:	fstp   TBYTE PTR [ebp+edx*2+0x6f]
  4116da:	loope  0x411740
  4116dc:	xchg   esi,eax
  4116dd:	push   ebx
  4116de:	fistp  WORD PTR [edx+0x1af0e2cc]
  4116e4:	popf   
  4116e5:	loope  0x411757
  4116e7:	icebp  
  4116e8:	mov    ah,0xd0
  4116ea:	inc    ebx
  4116eb:	cmp    bh,BYTE PTR [ecx-0x6c]
  4116ee:	and    esp,DWORD PTR [edx]
  4116f0:	fimul  WORD PTR [ecx+eax*8-0xd077cfa]
  4116f7:	dec    ebx
  4116f8:	dec    ebx
  4116f9:	in     al,0xd9
  4116fb:	out    0x78,eax
  4116fd:	dec    ebp
  4116fe:	xchg   ebx,eax
  4116ff:	arpl   WORD PTR [ebx],dx
  411701:	cmc    
  411702:	jl     0x41176a
  411704:	test   edx,0xf5d08b03
  41170a:	jmp    0x411700
  41170c:	iret   
  41170d:	ins    DWORD PTR es:[edi],dx
  41170e:	xchg   esp,eax
  41170f:	(bad)  
  411710:	pop    ebp
  411711:	or     DWORD PTR [edi+0x15],0x12
  411715:	push   ebx
  411716:	cmp    al,0x30
  411718:	mov    bh,dl
  41171a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41171b:	add    DWORD PTR ds:0x31a0b3b7,esi
  411721:	imul   ecx,DWORD PTR [ebx-0x4cdcbf00],0xf4086cdc
  41172b:	or     al,0x56
  41172d:	pop    esp
  41172e:	mov    WORD PTR [ebp+0x3d78892d],ds
  411734:	dec    ebx
  411735:	push   ebp
  411736:	aas    
  411737:	jecxz  0x411791
  411739:	add    al,0xfb
  41173b:	in     al,0x69
  41173d:	mov    ch,0x14
  41173f:	aaa    
  411740:	not    BYTE PTR [esi+0x49]
  411743:	ins    BYTE PTR es:[edi],dx
  411744:	push   ecx
  411745:	cdq    
  411746:	jl     0x4116f5
  411748:	push   cs
  411749:	mov    ah,ch
  41174b:	js     0x411721
  41174d:	push   esp
  41174e:	(bad)  
  41174f:	mov    ecx,0x5e25eebb
  411754:	les    esi,FWORD PTR [edx+0x5a5d6f57]
  41175a:	adc    al,0x83
  41175c:	(bad)  
  41175d:	push   ebp
  41175e:	test   al,0x11
  411760:	gs retf 
  411762:	mov    edx,ds
  411764:	mov    ch,BYTE PTR [eax+0x6b72c38a]
  41176a:	xlat   BYTE PTR ds:[ebx]
  41176b:	cmp    al,0x38
  41176d:	loope  0x4117e1
  41176f:	fild   DWORD PTR [ebp-0x1247f156]
  411775:	add    BYTE PTR [edi],cl
  411777:	lods   eax,DWORD PTR ds:[esi]
  411778:	sahf   
  411779:	shl    DWORD PTR ds:0x511663f1,cl
  41177f:	inc    eax
  411780:	dec    ebx
  411781:	addr16 aad 0x8f
  411784:	add    al,0xb8
  411786:	scas   eax,DWORD PTR es:[edi]
  411787:	push   esi
  411788:	xchg   edi,eax
  411789:	nop
  41178a:	mov    ebx,0x4f5f8f8
  41178f:	(bad)  
  411790:	cwde   
  411791:	ins    BYTE PTR es:[edi],dx
  411792:	xchg   ebp,eax
  411793:	or     eax,0x75cea3c1
  411798:	mov    al,cl
  41179a:	dec    edi
  41179b:	push   ecx
  41179c:	outs   dx,BYTE PTR ds:[esi]
  41179d:	push   esp
  41179e:	and    BYTE PTR [edi+0x51],0x18
  4117a2:	mov    ebx,0xc9ada882
  4117a7:	push   ss
  4117a8:	jno    0x4117ac
  4117aa:	jne    0x41173f
  4117ac:	out    0x34,al
  4117ae:	hlt    
  4117af:	inc    eax
  4117b0:	sub    DWORD PTR [ebp-0x70],0x2c
  4117b4:	sbb    ebp,DWORD PTR [esi]
  4117b6:	pop    esp
  4117b7:	icebp  
  4117b8:	hlt    
  4117b9:	mov    WORD PTR [esi+0x4a],ss
  4117bc:	ins    BYTE PTR es:[edi],dx
  4117bd:	mov    al,ds:0x1a1814a2
  4117c2:	mov    dh,0xc0
  4117c4:	cdq    
  4117c5:	sar    BYTE PTR [ebx+0xa],0x70
  4117c9:	sahf   
  4117ca:	and    BYTE PTR [ebx+0x50],cl
  4117cd:	mov    bh,0x15
  4117cf:	loope  0x411827
  4117d1:	pushf  
  4117d2:	repnz sub eax,0x20c68f31
  4117d8:	inc    ebp
  4117d9:	and    BYTE PTR ds:0x4c6aa197,dl
  4117df:	mov    bl,0x9f
  4117e1:	xchg   esp,eax
  4117e2:	cs (bad) 
  4117e4:	fst    DWORD PTR [edx+0x1c]
  4117e7:	inc    eax
  4117e8:	adc    al,0x2f
  4117ea:	std    
  4117eb:	cwde   
  4117ec:	stos   BYTE PTR es:[edi],al
  4117ed:	xchg   ebp,eax
  4117ee:	neg    BYTE PTR [edi]
  4117f0:	jmp    0xa438797f
  4117f5:	cdq    
  4117f6:	mov    eax,0xedb4d55
  4117fb:	sub    eax,DWORD PTR [edi-0x2269c36c]
  411801:	rcl    ebp,0xd8
  411804:	adc    eax,0x9a0f56de
  411809:	ja     0x41183c
  41180b:	lea    esp,[ecx]
  41180d:	pop    ss
  41180e:	stos   BYTE PTR es:[edi],al
  41180f:	hlt    
  411810:	fisubr WORD PTR [eax+eax*1-0x68bb335d]
  411817:	(bad)  
  411818:	pop    ebx
  411819:	jecxz  0x4117b3
  41181b:	mov    esi,DWORD PTR [ecx-0x50]
  41181e:	ss mov ah,bl
  411821:	ins    BYTE PTR es:[edi],dx
  411822:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411823:	sbb    esi,DWORD PTR [ecx-0x5dddb2a4]
  411829:	push   cs
  41182a:	inc    ebx
  41182b:	pop    ss
  41182c:	aam    0x1e
  41182e:	popa   
  41182f:	loop   0x4117bb
  411831:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411832:	mov    ebx,DWORD PTR [edx-0x3b3a2fba]
  411838:	jb     0x41189f
  41183a:	sub    BYTE PTR [eax],bh
  41183c:	push   ebx
  41183d:	pop    ebx
  41183e:	cs cmp al,bh
  411841:	and    edx,DWORD PTR [eax+0x4f]
  411844:	sbb    al,0x22
  411846:	adc    DWORD PTR [ebp-0x43631852],ebp
  41184c:	enter  0x5988,0x7c
  411850:	mov    cl,0x40
  411852:	out    dx,eax
  411853:	scas   eax,DWORD PTR es:[edi]
  411854:	sub    DWORD PTR [ebp-0x7494fcff],esi
  41185a:	hlt    
  41185b:	in     al,0xab
  41185d:	xchg   DWORD PTR ds:0x7817eb02,eax
  411863:	scas   al,BYTE PTR es:[edi]
  411864:	popa   
  411865:	out    dx,al
  411866:	mov    cl,0xe1
  411868:	stc    
  411869:	cld    
  41186a:	inc    eax
  41186b:	xchg   edi,eax
  41186c:	ffree  st(1)
  41186e:	and    DWORD PTR [esi-0x7a],eax
  411871:	adc    al,cl
  411873:	push   cs
  411874:	jne    0x4118c6
  411876:	cmp    eax,DWORD PTR [edx]
  411878:	loop   0x411831
  41187a:	add    eax,0x4b4c02e4
  41187f:	jb     0x411823
  411881:	ja     0x4118f3
  411883:	ja     0x4118d8
  411885:	imul   esi,DWORD PTR [edi+0x382e19c1],0xcd4b4a90
  41188f:	(bad)  
  411890:	pusha  
  411891:	das    
  411892:	xor    eax,0x63678053
  411897:	push   0x37f240f6
  41189c:	inc    esi
  41189d:	sbb    bl,BYTE PTR [edi]
  41189f:	mov    esi,0x17cba741
  4118a4:	xor    al,0x5
  4118a6:	adc    BYTE PTR [edi-0x5528889b],0x2f
  4118ad:	push   ds
  4118ae:	mov    cl,0x45
  4118b0:	imul   esp,edx,0x90fc4e5d
  4118b6:	mov    dh,0x34
  4118b8:	stc    
  4118b9:	shr    bl,1
  4118bb:	cmp    eax,0x1cb3c376
  4118c0:	ja     0x411917
  4118c2:	out    dx,eax
  4118c3:	jns    0x411871
  4118c5:	mov    cl,0xe1
  4118c7:	pop    esp
  4118c8:	add    DWORD PTR [edi+0x22],esp
  4118cb:	retf   
  4118cc:	les    ecx,FWORD PTR [ebx+0x45]
  4118cf:	sbb    al,0xbf
  4118d1:	ror    DWORD PTR [esi+0x39734483],1
  4118d7:	push   eax
  4118d8:	test   al,dh
  4118da:	je     0x411898
  4118dc:	leave  
  4118dd:	call   0x12277740
  4118e2:	push   esi
  4118e3:	or     DWORD PTR [ebp+0x71],edi
  4118e6:	aad    0x53
  4118e8:	mov    edi,0x735ace0c
  4118ed:	and    eax,0xf1608776
  4118f2:	mov    edi,0xdd8becaf
  4118f7:	push   es
  4118f8:	cmp    dh,BYTE PTR [esi]
  4118fa:	inc    eax
  4118fb:	mov    BYTE PTR [edi+esi*8-0x6c7168d7],dh
  411902:	sbb    al,0xc2
  411904:	mov    ch,0xa1
  411906:	popa   
  411907:	fiadd  WORD PTR [eax]
  411909:	jbe    0x411922
  41190b:	add    al,0x98
  41190d:	popf   
  41190e:	int3   
  41190f:	push   0xffffffaa
  411911:	enter  0x7313,0xcb
  411915:	or     ebx,DWORD PTR [edx-0x2f]
  411918:	sbb    BYTE PTR [esi],cl
  41191a:	outs   dx,DWORD PTR ds:[esi]
  41191b:	icebp  
  41191c:	and    al,0x45
  41191e:	cmp    al,0x5a
  411920:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411921:	jnp    0x41190e
  411923:	shl    cl,0x8b
  411926:	(bad)  
  411927:	mov    al,0xcb
  411929:	ficom  WORD PTR [ebx+0x6e481825]
  41192f:	adc    BYTE PTR [edi],0xc0
  411932:	out    0xba,al
  411934:	pop    edi
  411935:	(bad)  
  411936:	pusha  
  411937:	call   DWORD PTR [esi]
  411939:	pop    es
  41193a:	stc    
  41193b:	xor    bh,ah
  41193d:	retf   
  41193e:	jge    0x411947
  411940:	cmc    
  411941:	xor    ecx,DWORD PTR [ecx-0x3fc5aef0]
  411947:	jg     0x4119ae
  411949:	cmp    edx,DWORD PTR [eax+0x40]
  41194c:	xor    al,0x4b
  41194e:	push   ebx
  41194f:	retf   
  411950:	or     ah,BYTE PTR [esi+0x342a2dac]
  411956:	and    bh,BYTE PTR [ebp+0x6eadda89]
  41195c:	jno    0x411905
  41195e:	daa    
  41195f:	pop    ds
  411960:	ds dec eax
  411962:	and    eax,0xc7ad7fc
  411967:	int3   
  411968:	dec    esi
  411969:	push   ds
  41196a:	call   0xfbae:0xc65d04c4
  411971:	sti    
  411972:	sti    
  411973:	test   DWORD PTR [edx-0x74],0xd7a8894c
  41197a:	aaa    
  41197b:	jmp    0xec41:0x62366b07
  411982:	call   DWORD PTR [ecx-0x49e6143d]
  411988:	imul   ebp,ebp,0xf954227f
  41198e:	mov    al,0xcf
  411990:	in     eax,0xe2
  411992:	xlat   BYTE PTR ds:[ebx]
  411993:	jmp    0x41f1d746
  411998:	mov    fs,edx
  41199a:	jo     0x41198c
  41199c:	xchg   ah,ah
  41199e:	ror    ebx,cl
  4119a0:	xor    BYTE PTR [esi+eax*8-0x3a],ch
  4119a4:	or     al,0x2f
  4119a6:	jno    0x4119ef
  4119a8:	mov    al,ds:0xf996014e
  4119ad:	xchg   ebx,eax
  4119ae:	addr16 inc eax
  4119b0:	lahf   
  4119b1:	jecxz  0x411a15
  4119b3:	data16 aam 0xa4
  4119b6:	das    
  4119b7:	lahf   
  4119b8:	mov    ah,0x3e
  4119ba:	xchg   BYTE PTR [edi+0x15d72d12],ch
  4119c0:	cmp    BYTE PTR ds:0x76c84b06,dl
  4119c6:	pop    ds
  4119c7:	fild   DWORD PTR [edi+0x589254a6]
  4119cd:	rcr    DWORD PTR [eax+0x77515040],cl
  4119d3:	mov    ebx,0x7bf6e72e
  4119d8:	jb     0x411a02
  4119da:	scas   al,BYTE PTR es:[edi]
  4119db:	out    0xd7,al
  4119dd:	cmp    DWORD PTR [esi],esp
  4119df:	push   esp
  4119e0:	push   eax
  4119e1:	nop    ecx
  4119e4:	lods   eax,DWORD PTR ds:[esi]
  4119e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4119e6:	mov    edi,0xceb6a964
  4119eb:	mov    eax,ds:0xaf12a3dc
  4119f0:	mov    al,0x2f
  4119f2:	daa    
  4119f3:	and    eax,0xcf7361ee
  4119f8:	push   edi
  4119f9:	imul   esi,DWORD PTR [ecx],0xffffff89
  4119fc:	xchg   esp,eax
  4119fd:	mov    eax,DWORD PTR [eax]
  4119ff:	sbb    ebx,DWORD PTR ds:0x94b5b30d
  411a05:	test   eax,0x8e34e004
  411a0a:	outs   dx,DWORD PTR ds:[esi]
  411a0b:	and    BYTE PTR ds:0x41b176e8,0x47
  411a12:	pop    esi
  411a13:	mov    edi,0x28107108
  411a18:	cs out dx,al
  411a1a:	mov    edi,0x4ae36571
  411a1f:	push   ebp
  411a20:	nop
  411a21:	push   es
  411a22:	mov    edi,0x47a0bf07
  411a27:	dec    ebx
  411a28:	mov    ecx,0xe7b55ee4
  411a2d:	adc    eax,0x6ea8ed05
  411a32:	sti    
  411a33:	(bad)  
  411a34:	and    DWORD PTR [edi+ebx*8+0x17],0x2b
  411a39:	sbb    DWORD PTR [eax-0x1f],eax
  411a3c:	adc    edx,DWORD PTR [edx-0x6a]
  411a3f:	jo     0x411a58
  411a41:	cs call 0x4182:0x717da089
  411a49:	dec    esi
  411a4a:	aas    
  411a4b:	je     0x411a12
  411a4d:	mov    BYTE PTR ds:0xf67a710d,0x6c
  411a54:	fcom   QWORD PTR [edx]
  411a56:	out    dx,eax
  411a57:	and    ch,BYTE PTR [ecx]
  411a59:	jge    0x411a0d
  411a5b:	inc    esi
  411a5c:	ret    
  411a5d:	mov    ch,0xa1
  411a5f:	fwait
  411a60:	sbb    eax,0xc9056e4c
  411a65:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411a66:	lods   eax,DWORD PTR ds:[esi]
  411a67:	imul   ebx,DWORD PTR [edx],0xffffff9e
  411a6a:	add    eax,0xd892bebf
  411a6f:	psubusw mm3,QWORD PTR [esi+0x7]
  411a73:	xor    BYTE PTR [ecx],cl
  411a75:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411a76:	pop    ebx
  411a77:	xchg   edi,eax
  411a78:	add    eax,0xe62ec02d
  411a7d:	xchg   esi,eax
  411a7e:	jb     0x411a51
  411a80:	mov    BYTE PTR [esi-0x3370d20f],dl
  411a86:	pusha  
  411a87:	sub    bh,BYTE PTR [ebx]
  411a89:	not    DWORD PTR [esi-0x37]
  411a8c:	nop
  411a8d:	or     BYTE PTR [ecx],cl
  411a8f:	mov    DWORD PTR [edx],edx
  411a91:	lahf   
  411a92:	push   cs
  411a93:	jp     0x411aa3
  411a95:	push   eax
  411a96:	loope  0x411a5d
  411a98:	fmul   QWORD PTR [ecx-0x1f8dc60e]
  411a9e:	lea    ebp,[edi+0x34571c67]
  411aa4:	popa   
  411aa5:	sub    BYTE PTR [esi+0x48],ah
  411aa8:	inc    esp
  411aa9:	shr    ebp,1
  411aab:	dec    edi
  411aac:	jbe    0x411a97
  411aae:	pop    ds
  411aaf:	dec    DWORD PTR [ecx+ebp*4]
  411ab2:	gs mov dl,0x49
  411ab5:	mov    WORD PTR [eax],?
  411ab7:	adc    DWORD PTR ds:0xf2600b9b,ebp
  411abd:	mov    al,ds:0xa54142b3
  411ac2:	lea    eax,ds:0x940801e1
  411ac8:	xchg   edi,eax
  411ac9:	xchg   ecx,eax
  411aca:	sbb    al,0x19
  411acc:	(bad)  
  411acd:	test   al,0xe3
  411acf:	cmp    ecx,0xffffffe7
  411ad2:	cli    
  411ad3:	popf   
  411ad4:	(bad)  
  411ad6:	leave  
  411ad7:	shr    dh,cl
  411ad9:	or     eax,0xb28f54cb
  411ade:	retf   0x4945
  411ae1:	shr    DWORD PTR [eax],1
  411ae3:	push   ecx
  411ae4:	push   ds
  411ae5:	add    eax,0x2f58932b
  411aea:	mov    ?,edi
  411aec:	dec    esp
  411aed:	les    esp,FWORD PTR [edi]
  411aef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411af0:	cwde   
  411af1:	mov    ch,0xee
  411af3:	push   esp
  411af4:	fld    TBYTE PTR ds:0x39d534bc
  411afa:	mov    ds:0xe4d83b99,al
  411aff:	push   ebp
  411b00:	jecxz  0x411b01
  411b02:	out    0x68,eax
  411b04:	mov    al,0x33
  411b06:	popf   
  411b07:	loope  0x411aee
  411b09:	ins    DWORD PTR es:[edi],dx
  411b0a:	lock mov ebp,DWORD PTR es:[edi-0x63f32e11]
  411b12:	xor    eax,0xec10268e
  411b17:	ja     0x411b09
  411b19:	int    0xaa
  411b1b:	jp     0x411ae8
  411b1d:	popa   
  411b1e:	lock or al,0xb4
  411b22:	inc    ebp
  411b23:	sub    DWORD PTR [ecx-0x4b118be],eax
  411b29:	xchg   ecx,eax
  411b2a:	sub    ecx,esp
  411b2c:	ret    0x9265
  411b2f:	fisttp QWORD PTR [eax-0x2b]
  411b32:	loop   0x411b8c
  411b34:	mov    ch,bl
  411b36:	inc    edi
  411b37:	or     DWORD PTR [ebx],0x3a
  411b3a:	mov    ch,BYTE PTR [esi]
  411b3c:	cdq    
  411b3d:	lahf   
  411b3e:	in     eax,0xbd
  411b40:	mov    ds:0x2e252f7b,al
  411b45:	retf   
  411b46:	fnstcw WORD PTR [edi+0x44bc3282]
  411b4c:	std    
  411b4d:	out    0x9b,al
  411b4f:	or     al,0x16
  411b51:	stos   DWORD PTR es:[edi],eax
  411b52:	and    esi,DWORD PTR [ecx]
  411b54:	push   es
  411b55:	mov    al,0x89
  411b57:	aaa    
  411b58:	dec    edx
  411b59:	mov    bh,0xe
  411b5b:	add    BYTE PTR es:[esi-0x21ddce4],dl
  411b62:	or     esp,DWORD PTR [edi-0x3a]
  411b65:	sbb    DWORD PTR [eax-0x33],edi
  411b68:	pop    ebp
  411b69:	mov    ds,WORD PTR ds:0xfa2fc99
  411b6f:	jnp    0x411b33
  411b71:	push   ecx
  411b72:	retf   
  411b73:	add    BYTE PTR [eax+esi*2+0x31078e90],bh
  411b7a:	push   edx
  411b7b:	mov    al,0xe8
  411b7d:	mov    gs,ebp
  411b7f:	adc    DWORD PTR ds:[eax+0x39],edx
  411b83:	jns    0x411b4e
  411b85:	jne    0x411ba7
  411b87:	lds    ecx,FWORD PTR [ecx+0x44]
  411b8a:	add    ch,BYTE PTR [ecx]
  411b8c:	(bad)
  411b8f:	push   0xffffffad
  411b91:	shr    cl,0xe9
  411b94:	shl    DWORD PTR [edx-0x23],1
  411b97:	test   cl,ch
  411b99:	pop    esi
  411b9a:	push   0x2a
  411b9c:	sub    al,0x5
  411b9e:	xchg   edx,eax
  411b9f:	outs   dx,DWORD PTR ds:[esi]
  411ba0:	ds jne 0x411c1a
  411ba3:	xchg   ebx,eax
  411ba4:	inc    ecx
  411ba5:	jns    0x411b32
  411ba7:	in     eax,dx
  411ba8:	fdiv   st,st(3)
  411baa:	out    dx,al
  411bab:	or     DWORD PTR [esi-0x22500b5e],0x3977f191
  411bb5:	sbb    edx,DWORD PTR [esi+0x30]
  411bb8:	cdq    
  411bb9:	gs adc ebp,esi
  411bbc:	xlat   BYTE PTR ds:[ebx]
  411bbd:	push   ecx
  411bbe:	in     eax,dx
  411bbf:	mov    cl,0x69
  411bc1:	cli    
  411bc2:	mov    ah,0x32
  411bc4:	fcom   DWORD PTR [eax]
  411bc6:	(bad)  [ebp-0x3e]
  411bc9:	push   ss
  411bca:	adc    edi,DWORD PTR [ecx-0x69bad4e4]
  411bd0:	outs   dx,DWORD PTR ds:[esi]
  411bd1:	je     0x411b6e
  411bd3:	jge    0x411b64
  411bd5:	push   ebx
  411bd6:	mov    ch,0x2
  411bd8:	les    ebx,FWORD PTR [eax+0x5ec147fb]
  411bde:	adc    al,cl
  411be0:	jmp    0x2da590fd
  411be5:	push   edx
  411be6:	jbe    0x411c48
  411be8:	fld    DWORD PTR [esi+0x552525f9]
  411bee:	jnp    0x411bab
  411bf0:	push   ecx
  411bf1:	out    dx,al
  411bf2:	div    bh
  411bf4:	scas   al,BYTE PTR es:[edi]
  411bf5:	and    al,0x84
  411bf7:	mov    ds:0x90aefa91,eax
  411bfc:	dec    eax
  411bfd:	scas   al,BYTE PTR es:[di]
  411bff:	popf   
  411c00:	mov    esi,0xf5d3a979
  411c05:	(bad)  
  411c06:	xchg   edi,eax
  411c07:	mov    ebx,0x9c16aad0
  411c0c:	cwde   
  411c0d:	ficom  WORD PTR [ebp+ebx*8-0x11]
  411c11:	mov    bh,0xed
  411c13:	loop   0x411bd6
  411c15:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411c16:	jbe    0x411bc7
  411c18:	sbb    DWORD PTR [edx],0xfffffff2
  411c1b:	jl     0x411c30
  411c1d:	sbb    esi,eax
  411c1f:	imul   edx,DWORD PTR [ecx-0x67],0x2b9f944e
  411c26:	ja     0x411c20
  411c28:	adc    eax,ecx
  411c2a:	jmp    0x411c58
  411c2c:	(bad)  
  411c2e:	frstor [eax+ecx*1]
  411c31:	and    esp,eax
  411c33:	cmp    dh,BYTE PTR [eax]
  411c35:	(bad)  
  411c36:	and    eax,0xc4b2674d
  411c3b:	rol    DWORD PTR [edi+ecx*1],1
  411c3e:	jnp    0x411c28
  411c40:	or     esp,DWORD PTR [edx+0x3ecd53e2]
  411c46:	xchg   DWORD PTR [eiz*8-0x27e4159],esp
  411c4d:	mov    ah,0x7c
  411c4f:	mov    edi,0x8ef508bd
  411c54:	in     eax,dx
  411c55:	(bad)  
  411c56:	fisubr WORD PTR [edx+0x20]
  411c59:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411c5a:	shl    DWORD PTR fs:[esi-0x187303bb],1
  411c61:	pop    eax
  411c62:	int3   
  411c63:	sub    al,BYTE PTR es:[edx]
  411c66:	ins    BYTE PTR es:[edi],dx
  411c67:	loope  0x411c13
  411c69:	popa   
  411c6a:	cmp    eax,0x88677e27
  411c6f:	push   edi
  411c70:	mov    eax,0xfc7d7f00
  411c75:	pop    edx
  411c76:	xchg   ebp,eax
  411c77:	(bad)  
  411c78:	and    ebx,DWORD PTR [ecx]
  411c7a:	test   BYTE PTR [ebx+0x3cd5c1b4],ch
  411c80:	xor    cl,BYTE PTR ds:0x7ab31770
  411c86:	sti    
  411c87:	dec    BYTE PTR [ebp+ecx*2+0x6f]
  411c8b:	test   DWORD PTR [esi+0x3d],0x5d1e4c5e
  411c92:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411c93:	cmp    BYTE PTR [esi-0x72],0x20
  411c97:	call   0x896c7f33
  411c9c:	test   DWORD PTR [esi+ebp*4-0x5caf542b],esp
  411ca3:	push   ebp
  411ca4:	inc    edx
  411ca5:	push   cs
  411ca6:	popa   
  411ca7:	test   al,0x60
  411ca9:	jg     0x411cde
  411cab:	dec    esi
  411cac:	cs jmp 0x11f7:0x7ee42e94
  411cb4:	lods   al,BYTE PTR ds:[esi]
  411cb5:	out    0x45,al
  411cb7:	push   es
  411cb8:	sub    al,0x5a
  411cba:	jg     0x411caa
  411cbc:	add    ch,BYTE PTR [ebp+eiz*1+0x76]
  411cc0:	and    al,0x48
  411cc2:	adc    BYTE PTR [ebx],al
  411cc4:	(bad)  
  411cc5:	cmp    BYTE PTR [ecx],al
  411cc7:	sub    al,0xdf
  411cc9:	iret   
  411cca:	aas    
  411ccb:	sub    eax,0xc45e1a64
  411cd0:	dec    esi
  411cd1:	mov    edx,0x6c4b5821
  411cd6:	mov    es,WORD PTR es:0x8da7fad4
  411cdd:	pusha  
  411cde:	std    
  411cdf:	jle    0x411d17
  411ce1:	or     ecx,DWORD PTR [ebp-0x1588f81e]
  411ce7:	fs mov edi,0x9eea2dda
  411ced:	les    ebp,FWORD PTR [eax+0x4ef7928b]
  411cf3:	mov    dh,ah
  411cf5:	push   ebx
  411cf6:	dec    eax
  411cf7:	lods   al,BYTE PTR ds:[esi]
  411cf8:	shr    BYTE PTR [edx],cl
  411cfa:	jae    0x411d61
  411cfc:	add    al,0xf
  411cfe:	fisubr WORD PTR [eax+0x15]
  411d01:	loope  0x411c9b
  411d03:	fucomi st,st(7)
  411d05:	mov    ecx,0x8194d846
  411d0a:	lea    edx,[ebx-0xa]
  411d0d:	ins    DWORD PTR es:[edi],dx
  411d0e:	retf   0x8f49
  411d11:	jp     0x411c9b
  411d13:	xor    al,0x6f
  411d15:	xchg   ecx,eax
  411d16:	dec    esp
  411d17:	inc    eax
  411d18:	sbb    ch,BYTE PTR [edx+edi*4]
  411d1b:	or     BYTE PTR [esi+0x583c33bd],dl
  411d21:	out    0xd,eax
  411d23:	adc    ebp,edx
  411d25:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411d26:	push   esp
  411d27:	xchg   ebp,eax
  411d28:	sbb    al,0x88
  411d2a:	std    
  411d2b:	ffreep st(7)
  411d2d:	pop    ecx
  411d2e:	mov    DWORD PTR ds:0x1513ce54,ebp
  411d34:	push   edx
  411d35:	jmp    0xb2e9:0x18181981
  411d3c:	repnz inc ebp
  411d3e:	in     al,0x3e
  411d40:	add    DWORD PTR [eax-0x2b3d3c5c],esi
  411d46:	daa    
  411d47:	sbb    DWORD PTR [ecx+esi*4-0x7c],0xfffffffb
  411d4c:	sar    DWORD PTR [ebp-0x6f],0x8b
  411d50:	ins    BYTE PTR es:[edi],dx
  411d51:	ret    
  411d52:	div    BYTE PTR [ebx+0x501d76bb]
  411d58:	not    DWORD PTR [esi]
  411d5a:	mov    ?,ecx
  411d5c:	mov    edi,0xf9959956
  411d61:	shr    BYTE PTR [si+0x48],cl
  411d65:	aaa    
  411d66:	push   es
  411d67:	pop    ds
  411d68:	(bad)  
  411d69:	ss or  DWORD PTR ds:[eax],edi
  411d6d:	in     eax,dx
  411d6e:	aad    0x3b
  411d70:	sub    dl,BYTE PTR [ecx+0x5ce7c3b3]
  411d76:	inc    ecx
  411d77:	retf   
  411d78:	mov    cl,0x9
  411d7a:	jo     0x411df5
  411d7c:	mov    eax,DWORD PTR [eax]
  411d7e:	sub    ah,BYTE PTR [ecx+ebp*1]
  411d81:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411d82:	imul   esi,DWORD PTR [edi-0xa],0x2f
  411d86:	sti    
  411d87:	outs   dx,DWORD PTR ds:[esi]
  411d88:	or     DWORD PTR [eax+eiz*8+0x1d],esp
  411d8c:	fdiv   QWORD PTR [edi]
  411d8e:	cmp    DWORD PTR [ebp-0x13102a1c],esp
  411d94:	jmp    0x3426:0x995ea957
  411d9b:	cli    
  411d9c:	adc    BYTE PTR [esi-0x14b105ed],ch
  411da2:	sbb    al,0x23
  411da4:	xor    esp,esp
  411da6:	test   DWORD PTR [edx-0x28a130b7],edx
  411dac:	push   edi
  411dad:	ja     0x411d9b
  411daf:	test   DWORD PTR [eax-0x561b4650],edx
  411db5:	xchg   ebx,eax
  411db6:	and    BYTE PTR [eax+0x74],cl
  411db9:	jmp    0x411d59
  411dbb:	cwde   
  411dbc:	jp     0x411d78
  411dbe:	dec    esi
  411dbf:	ret    0xa0f
  411dc2:	dec    edi
  411dc3:	mov    edx,0xbfb2fe7f
  411dc8:	mov    eax,0x55361b1b
  411dcd:	outs   dx,BYTE PTR ds:[esi]
  411dce:	(bad)  
  411dcf:	jmp    0x411df3
  411dd1:	pop    esp
  411dd2:	int3   
  411dd3:	mov    edi,0xbdf33664
  411dd8:	pusha  
  411dd9:	dec    ebp
  411dda:	cmp    BYTE PTR [edi+0x55],dh
  411ddd:	outs   dx,DWORD PTR ds:[esi]
  411dde:	pop    eax
  411ddf:	jne    0x411dca
  411de1:	stos   BYTE PTR es:[edi],al
  411de2:	sbb    DWORD PTR [edx-0x4d],edx
  411de5:	repnz stc 
  411de7:	imul   ebx,DWORD PTR [edi+0x4e],0x73
  411deb:	cmc    
  411dec:	lahf   
  411ded:	bound  eax,QWORD PTR [ebx+0x61986709]
  411df3:	repz jg 0x411e6b
  411df6:	pop    ecx
  411df7:	jb     0x411e46
  411df9:	into   
  411dfa:	int3   
  411dfb:	xlat   BYTE PTR ds:[ebx]
  411dfc:	leave  
  411dfd:	dec    edi
  411dfe:	jmp    0x411de7
  411e00:	and    ecx,ecx
  411e02:	xchg   edx,eax
  411e03:	inc    esp
  411e04:	mov    edx,0x5f4dd198
  411e09:	neg    DWORD PTR [eax+0x1b9d6ecf]
  411e0f:	out    dx,eax
  411e10:	rcl    DWORD PTR [ebp-0x9a67f4e],1
  411e16:	jmp    0x411e02
  411e18:	push   es
  411e19:	fiadd  DWORD PTR [edi+0x37]
  411e1c:	int3   
  411e1d:	mov    WORD PTR [eax+0x774b425b],fs
  411e23:	setno  ah
  411e26:	imul   esp,DWORD PTR [ebx-0x3e1847b4],0x1a1f1fd6
  411e30:	mov    cl,BYTE PTR [eax-0x4f860e02]
  411e36:	pushf  
  411e37:	mov    al,0xfa
  411e39:	and    al,al
  411e3b:	xchg   DWORD PTR [ebx+0x3d],esi
  411e3e:	test   bl,cl
  411e40:	or     BYTE PTR [ebx],0x79
  411e43:	and    eax,0xe92ac0e9
  411e48:	retf   0x50b9
  411e4b:	shr    DWORD PTR [eax+ebp*4-0x7e],0xa6
  411e50:	dec    ebp
  411e51:	dec    edx
  411e52:	push   esi
  411e53:	pop    esp
  411e54:	jmp    0x73be1098
  411e59:	lock inc ecx
  411e5b:	popf   
  411e5c:	fpatan 
  411e5e:	xor    eax,0x96b7b834
  411e63:	push   edi
  411e64:	shl    dh,cl
  411e66:	pop    ebp
  411e67:	pop    edx
  411e68:	add    al,0xd7
  411e6a:	cmp    ebp,esi
  411e6c:	dec    ecx
  411e6d:	ret    
  411e6e:	push   DWORD PTR [ebp-0x2c]
  411e71:	xor    eax,DWORD PTR [edi]
  411e73:	add    esi,DWORD PTR [ebx]
  411e75:	aas    
  411e76:	jb     0x411e1f
  411e78:	std    
  411e79:	pop    ss
  411e7a:	bound  ebx,QWORD PTR [ebx-0x1289a1b0]
  411e80:	sub    al,0x4
  411e82:	daa    
  411e83:	cmp    DWORD PTR [edi-0x4cc4e7e9],ebx
  411e89:	aad    0xe8
  411e8b:	popf   
  411e8c:	jns    0x411ea9
  411e8e:	(bad)  
  411e8f:	cmp    DWORD PTR ss:[edi-0x6e86a39],esp
  411e96:	push   ebx
  411e97:	sbb    edi,0xffffff90
  411e9a:	test   DWORD PTR [ecx],esi
  411e9c:	leave  
  411e9d:	retf   0x4578
  411ea0:	fdiv   DWORD PTR [esi-0x35e29fa9]
  411ea6:	xchg   esi,eax
  411ea7:	xchg   ecx,eax
  411ea8:	mov    dh,dh
  411eaa:	push   edx
  411eab:	inc    ecx
  411eac:	daa    
  411ead:	aad    0x58
  411eaf:	in     al,0x1d
  411eb1:	stc    
  411eb2:	scas   al,BYTE PTR es:[edi]
  411eb3:	into   
  411eb4:	or     DWORD PTR [edi],edi
  411eb6:	xchg   esi,eax
  411eb7:	enter  0x26ad,0xfd
  411ebb:	(bad)  
  411ebd:	loope  0x411f1b
  411ebf:	sub    cl,BYTE PTR [ebx-0x44]
  411ec2:	dec    ebx
  411ec3:	test   BYTE PTR [esi+ebx*2+0x54c4051f],bl
  411eca:	sub    eax,0x14065fe2
  411ecf:	xchg   esi,eax
  411ed0:	jo     0x411ec3
  411ed2:	adc    esi,DWORD PTR [ecx]
  411ed4:	inc    edx
  411ed5:	imul   ecx,DWORD PTR [esi-0x1e5c915e],0x50ac5e64
  411edf:	mov    BYTE PTR [eax],bl
  411ee1:	jb     0x411e68
  411ee3:	mov    ch,BYTE PTR [ecx-0x73ceaa37]
  411ee9:	fiadd  WORD PTR [edi-0x2b961bb3]
  411eef:	sbb    ch,bl
  411ef1:	call   0x3ff557c3
  411ef6:	popf   
  411ef7:	pushf  
  411ef8:	adc    al,0xa8
  411efa:	sbb    al,BYTE PTR [ebp-0x3f2798e]
  411f00:	mov    bh,0x6b
  411f02:	jmp    0x411ea5
  411f04:	xchg   DWORD PTR [ebp+0x8b069b0],ecx
  411f0a:	dec    ecx
  411f0b:	lods   eax,DWORD PTR ds:[esi]
  411f0c:	out    0xe,eax
  411f0e:	xor    eax,0x52113492
  411f13:	xchg   ecx,eax
  411f14:	xor    BYTE PTR [edx+edi*4],cl
  411f17:	mov    edi,0x1ac6615e
  411f1c:	pusha  
  411f1d:	not    cl
  411f1f:	adc    eax,0x98fd3a22
  411f24:	clc    
  411f25:	cdq    
  411f26:	cmp    ecx,DWORD PTR [edx+0x427213a7]
  411f2c:	sbb    edi,DWORD PTR [esi]
  411f2e:	jmp    0x7feabf48
  411f33:	iret   
  411f34:	add    eax,0x673c549c
  411f39:	xchg   ebp,eax
  411f3a:	into   
  411f3b:	mov    BYTE PTR [edi-0x3d],dl
  411f3e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411f3f:	jge    0x411f26
  411f41:	add    DWORD PTR ds:0xa7db2c62,edx
  411f47:	fwait
  411f48:	dec    ebp
  411f49:	and    eax,0xc5661060
  411f4e:	mov    ds:0xea08c23c,eax
  411f53:	not    BYTE PTR [ebp+0x11355c69]
  411f59:	xchg   esi,eax
  411f5a:	sbb    dl,BYTE PTR [ebx]
  411f5c:	mov    DWORD PTR [edx+0x2d9c0fa0],ecx
  411f62:	push   ebx
  411f63:	cmp    eax,0xc026d3ea
  411f68:	xchg   BYTE PTR [eax],ah
  411f6a:	sub    ah,BYTE PTR ds:0x3e564b79
  411f70:	repz mov bl,0x7c
  411f73:	xchg   esp,eax
  411f74:	fwait
  411f75:	in     eax,0xae
  411f77:	sub    edx,DWORD PTR [edi]
  411f79:	shl    BYTE PTR [ecx+0xa],cl
  411f7c:	rcl    BYTE PTR [esi+0x11fdff9a],0x4f
  411f83:	mov    ds:0x6dbd8b65,eax
  411f88:	or     al,0xab
  411f8a:	mov    DWORD PTR [ecx+ebx*8+0x1e],ebp
  411f8e:	dec    eax
  411f8f:	push   edi
  411f90:	popa   
  411f91:	(bad)  
  411f92:	cmp    DWORD PTR [ebx-0x7f],esp
  411f95:	js     0x411f34
  411f97:	imul   eax,DWORD PTR [eax-0x40],0xd8ad4a10
  411f9e:	mov    ah,0xf0
  411fa0:	dec    edx
  411fa1:	xchg   edi,eax
  411fa2:	in     eax,0xb2
  411fa4:	arpl   WORD PTR [eax],bp
  411fa6:	loopne 0x411fb4
  411fa8:	sub    al,0x11
  411faa:	xchg   DWORD PTR [ecx],edx
  411fac:	mov    eax,es:0xbfa0bde1
  411fb2:	sbb    eax,0xa38e99a4
  411fb7:	push   edi
  411fb8:	and    edi,esi
  411fba:	scas   al,BYTE PTR es:[edi]
  411fbb:	fcomp  DWORD PTR [ebp+eax*4-0x1b]
  411fbf:	dec    eax
  411fc0:	iret   
  411fc1:	mov    al,0xed
  411fc3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411fc4:	pusha  
  411fc5:	mov    edi,0x44de9791
  411fca:	ds in  eax,0x83
  411fcd:	push   edx
  411fce:	dec    eax
  411fcf:	cwde   
  411fd0:	loope  0x412032
  411fd2:	jne    0x412040
  411fd4:	repnz mov ch,0x69
  411fd7:	sar    DWORD PTR [ebp+0x788f6b1a],1
  411fdd:	cli    
  411fde:	rol    BYTE PTR [ecx],cl
  411fe0:	dec    al
  411fe2:	mov    ebp,0x3e2d2b25
  411fe7:	sub    eax,0xdb48e3e0
  411fec:	sbb    eax,0xdf7fc9ee
  411ff1:	add    DWORD PTR [edx+0xd551019],esp
  411ff7:	sbb    ecx,edi
  411ff9:	or     DWORD PTR [edx],0xdc57136f
  411fff:	div    BYTE PTR [ebx]
  412001:	add    ah,BYTE PTR [esi+0x284d6950]
  412007:	xchg   ebx,ebp
  412009:	outs   dx,DWORD PTR ds:[esi]
  41200a:	xchg   esp,eax
  41200b:	pop    ds
  41200c:	sub    al,ch
  41200e:	sub    al,0x9
  412010:	iret   
  412011:	jmp    0x41207a
  412013:	mov    ds:0xe1ca3354,eax
  412018:	add    BYTE PTR [esi+0xd],cl
  41201b:	ins    DWORD PTR es:[edi],dx
  41201c:	lock je 0x41205e
  41201f:	add    DWORD PTR [edx+esi*4-0x5a3b0c9],ebp
  412026:	mov    cs,WORD PTR [esp+esi*8+0x75]
  41202a:	(bad)  
  41202b:	fisubr DWORD PTR [eax-0x13]
  41202e:	pop    ebp
  41202f:	dec    esp
  412030:	repnz (bad) 
  412032:	hlt    
  412033:	cmp    al,0xab
  412035:	stos   BYTE PTR es:[edi],al
  412036:	inc    ecx
  412037:	fstp   TBYTE PTR [eax-0x52]
  41203a:	mov    eax,ds:0x685947e5
  41203f:	and    bl,BYTE PTR [eax+0x37]
  412042:	adc    eax,0x4a940c15
  412047:	mov    esp,0xb2158a79
  41204c:	dec    esp
  41204d:	mov    ebx,0x5677b808
  412052:	gs mov ah,0x1a
  412055:	or     eax,0x96d1e445
  41205a:	jmp    0x6a70:0xc11d4d43
  412061:	mov    DWORD PTR [edx],0x5733b1bd
  412067:	pop    ecx
  412068:	push   edi
  412069:	push   cs
  41206a:	mov    ch,BYTE PTR [ebx-0x112b5110]
  412070:	nop
  412071:	push   edi
  412072:	lock add DWORD PTR [esi],esi
  412075:	cmp    eax,0xd3de490d
  41207a:	jmp    0x9b04:0x247822cb
  412081:	in     al,dx
  412082:	test   al,0xb9
  412084:	dec    ecx
  412085:	mov    ebp,0xb55cf162
  41208a:	dec    esp
  41208b:	push   cs
  41208c:	in     al,dx
  41208d:	and    bl,BYTE PTR [ecx-0x73]
  412090:	les    ebx,FWORD PTR [esi-0x5]
  412093:	fcmove st,st(4)
  412095:	cwde   
  412096:	sub    ch,bl
  412098:	sbb    al,0xfb
  41209a:	mov    ch,0xf1
  41209c:	fld    st(7)
  41209e:	dec    edx
  41209f:	fldenv [esp+edx*1-0x32e8fd98]
  4120a6:	ins    BYTE PTR es:[edi],dx
  4120a7:	mov    ecx,esi
  4120a9:	push   edi
  4120aa:	xor    edi,DWORD PTR [edi-0x2ad6a8ce]
  4120b0:	or     al,0xa0
  4120b2:	clc    
  4120b3:	shl    eax,0xa3
  4120b6:	push   ebp
  4120b7:	ds pop edi
  4120b9:	js     0x4120f7
  4120bb:	or     ch,bl
  4120bd:	inc    edx
  4120be:	pop    eax
  4120bf:	push   edx
  4120c0:	loopne 0x4120e1
  4120c2:	scas   eax,DWORD PTR es:[edi]
  4120c3:	je     0x4120c1
  4120c5:	inc    eax
  4120c6:	mov    al,ds:0xa414cca4
  4120cb:	out    dx,eax
  4120cc:	pop    esp
  4120cd:	xchg   esi,eax
  4120ce:	shl    DWORD PTR [edi],1
  4120d0:	inc    esp
  4120d1:	test   ebx,esi
  4120d3:	inc    esp
  4120d4:	mov    ch,0x78
  4120d6:	adc    al,0x8d
  4120d8:	popf   
  4120d9:	pop    ecx
  4120da:	in     al,0x8c
  4120dc:	sub    al,0xb5
  4120de:	push   0xfe9ee4f9
  4120e3:	adc    dh,BYTE PTR [ebp-0x6a89b021]
  4120e9:	jne    0x41215b
  4120eb:	fiadd  DWORD PTR [ebx+0xb]
  4120ee:	push   ds
  4120ef:	mov    dl,0xe0
  4120f1:	and    BYTE PTR [ecx+0xc],al
  4120f4:	jne    0x412087
  4120f6:	outs   dx,BYTE PTR ds:[esi]
  4120f7:	or     DWORD PTR [ecx],0x1334033d
  4120fd:	pop    ebp
  4120fe:	jne    0x412170
  412100:	fiadd  WORD PTR [ecx+0x5bfaa2a4]
  412106:	cmp    WORD PTR gs:[ebp+0x6d718888],sp
  41210e:	xor    eax,0x2a95707c
  412113:	or     esi,DWORD PTR ds:0x8dda1977
  412119:	jle    0x41211c
  41211b:	out    dx,eax
  41211c:	pop    edi
  41211d:	lock nop
  41211f:	retf   
  412120:	mov    al,ds:0x3fa7dd7b
  412125:	fnsave [edx-0x18]
  412128:	aas    
  412129:	mov    DWORD PTR [ecx+0x44],esi
  41212c:	out    0x44,eax
  41212e:	push   edi
  41212f:	sub    DWORD PTR [edi+0x47a45a86],edi
  412135:	loope  0x4121a0
  412137:	sub    eax,0x7492b8bd
  41213c:	je     0x41217e
  41213e:	mov    al,0x2c
  412140:	paddsb mm2,QWORD PTR [ebp+esi*8+0x43]
  412145:	hlt    
  412146:	mov    bl,0xff
  412148:	sub    eax,0x1f3a6e8d
  41214d:	gs ret 
  41214f:	xchg   ecx,eax
  412150:	and    DWORD PTR [esi-0x380e84c2],esi
  412156:	push   edi
  412157:	cdq    
  412158:	adc    eax,0x1b98cf73
  41215d:	mov    bl,0x49
  41215f:	imul   edx,DWORD PTR [edx+0x3fed8892],0x4
  412166:	sub    al,0x33
  412168:	das    
  412169:	outs   dx,BYTE PTR ds:[esi]
  41216a:	jne    0x4120f8
  41216c:	dec    ebp
  41216d:	push   0xffffff92
  41216f:	mov    edx,edi
  412171:	pushf  
  412172:	test   eax,0xc1a79f3b
  412177:	gs retf 
  412179:	data16 rcr BYTE PTR [esi+esi*4],1
  41217d:	fisttp DWORD PTR [esi]
  41217f:	jbe    0x4121d5
  412181:	call   0xfc6ecaa5
  412186:	shl    ch,cl
  412188:	(bad)  
  412189:	adc    BYTE PTR ss:[edi+0x47],0x82
  41218e:	and    ax,0xbc72
  412192:	mov    al,ds:0x1ce8f304
  412197:	hlt    
  412198:	imul   ebx,DWORD PTR [edx],0x30
  41219b:	arpl   si,ax
  41219d:	xor    eax,DWORD PTR [esi+0x1b]
  4121a0:	daa    
  4121a1:	inc    esp
  4121a2:	adc    dh,BYTE PTR [edi+eax*8]
  4121a5:	pop    esp
  4121a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4121a7:	loopne 0x4121de
  4121a9:	in     eax,dx
  4121aa:	mov    WORD PTR [eax-0x2e6e5244],cs
  4121b0:	push   0x77af9401
  4121b5:	or     dl,BYTE PTR [ebx]
  4121b7:	aam    0x32
  4121b9:	or     dl,BYTE PTR fs:[ebx+edi*8-0x62]
  4121be:	arpl   WORD PTR [ecx-0x3be66000],bx
  4121c4:	pop    ebp
  4121c5:	push   ds
  4121c6:	xchg   esi,eax
  4121c7:	aad    0x9b
  4121c9:	sbb    BYTE PTR [eax+esi*2-0x21],0xcb
  4121ce:	or     ebp,esi
  4121d0:	shr    DWORD PTR [esi-0x74],cl
  4121d3:	loope  0x4121cc
  4121d5:	out    dx,eax
  4121d6:	jno    0x41223e
  4121d8:	inc    eax
  4121d9:	xor    esp,ecx
  4121db:	xchg   DWORD PTR [edx+edx*8+0x32612b84],eax
  4121e2:	lods   eax,DWORD PTR ds:[esi]
  4121e3:	in     eax,dx
  4121e4:	dec    edi
  4121e5:	test   bl,al
  4121e7:	jns    0x412223
  4121e9:	cld    
  4121ea:	add    eax,ebp
  4121ec:	lock js 0x412191
  4121ef:	xchg   DWORD PTR [edx+eax*8],ebp
  4121f2:	jmp    0x412202
  4121f4:	aas    
  4121f5:	ror    DWORD PTR [ebp-0x6e30020b],0xc6
  4121fc:	pop    eax
  4121fd:	ins    DWORD PTR es:[edi],dx
  4121fe:	cmp    DWORD PTR ds:0x6e9f2c96,edi
  412204:	adc    al,0xe0
  412206:	(bad)  
  412207:	sbb    al,0xfd
  412209:	jge    0x41225a
  41220b:	xor    cl,BYTE PTR [esi-0x15]
  41220e:	push   es
  41220f:	mov    cl,0x35
  412211:	sub    ebp,DWORD PTR [ebx+esi*8-0x1a8128d2]
  412218:	iret   
  412219:	mov    cl,0xc1
  41221b:	pop    ss
  41221c:	gs out 0x61,al
  41221f:	inc    ecx
  412220:	dec    eax
  412221:	out    0xa9,eax
  412223:	cmp    BYTE PTR [ebp+0x60],dl
  412226:	sbb    DWORD PTR [ecx],ebx
  412228:	mov    bh,0x58
  41222a:	xchg   edi,eax
  41222b:	jnp    0x4122a2
  41222d:	pop    es
  41222e:	sbb    eax,0x49f03c55
  412233:	jge    0x41228a
  412235:	push   ecx
  412236:	in     al,dx
  412237:	(bad)
  41223a:	and    al,0x9b
  41223c:	lods   eax,DWORD PTR ds:[esi]
  41223d:	pop    DWORD PTR [edx+0x5c4ec0fe]
  412243:	inc    edi
  412244:	sub    eax,0xbc14d7c7
  412249:	xor    al,0x16
  41224b:	dec    edx
  41224c:	enter  0x69b7,0xfd
  412250:	icebp  
  412251:	cmp    ch,al
  412253:	mov    WORD PTR [ecx+0x3],cs
  412256:	and    ah,BYTE PTR [esi]
  412258:	xchg   ebx,eax
  412259:	rol    DWORD PTR [eax-0x42d5d9d3],1
  41225f:	jns    0x4121f1
  412261:	and    eax,0xce5112e8
  412266:	xor    ebp,ecx
  412268:	cmp    al,0xb0
  41226a:	out    0x63,al
  41226c:	xchg   DWORD PTR [ebx+ecx*8],eax
  41226f:	ds inc eax
  412271:	adc    DWORD PTR [eax+0x2838a873],esp
  412277:	mov    bh,0x98
  412279:	popa   
  41227a:	dec    edx
  41227b:	out    0x8e,eax
  41227d:	ret    0xa011
  412280:	xor    esp,DWORD PTR [ebx]
  412282:	imul   ecx,DWORD PTR ds:0x700ba6d0,0x32
  412289:	add    esi,ebx
  41228b:	or     eax,0xa7181a01
  412290:	(bad)  
  412291:	cdq    
  412292:	gs xor al,0xd4
  412295:	sti    
  412296:	(bad)  
  412297:	add    ebx,ecx
  412299:	in     al,dx
  41229a:	push   ebp
  41229b:	pusha  
  41229c:	out    0xf1,al
  41229e:	mov    ecx,0x644554af
  4122a3:	clc    
  4122a4:	mov    ds,ebp
  4122a6:	mov    ss,WORD PTR [edx+0x1e]
  4122a9:	push   ecx
  4122aa:	and    eax,ebp
  4122ac:	(bad)  
  4122ad:	sar    edx,0x23
  4122b0:	xchg   ebx,eax
  4122b1:	ds mov dh,0x37
  4122b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4122b5:	popa   
  4122b6:	jl     0x4122d1
  4122b8:	rcl    BYTE PTR ds:0x61392540,1
  4122be:	mov    eax,0xe9ac539
  4122c3:	dec    ecx
  4122c4:	sbb    DWORD PTR [esi],esp
  4122c6:	fld    DWORD PTR [ebp+ecx*1+0x1c]
  4122ca:	div    BYTE PTR [edi-0x6d]
  4122cd:	mov    ds:0x8b6758a,eax
  4122d2:	lds    ebp,FWORD PTR [edx]
  4122d4:	pop    esp
  4122d5:	or     ah,bl
  4122d7:	push   cs
  4122d8:	fwait
  4122d9:	popf   
  4122da:	jnp    0x4122ca
  4122dc:	mov    edx,0x1983bcb6
  4122e1:	lock xchg dl,bl
  4122e4:	push   esi
  4122e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4122e6:	sub    BYTE PTR [ecx-0x243ee431],bl
  4122ec:	jge    0x412367
  4122ee:	mov    ebx,0xfcfe9db0
  4122f3:	inc    ecx
  4122f4:	repz mov ds:0xb0806388,al
  4122fa:	retf   
  4122fb:	cmp    BYTE PTR [edx],ch
  4122fd:	(bad)  
  4122fe:	sti    
  4122ff:	mov    WORD PTR [eax+0x19],gs
  412302:	sbb    DWORD PTR [ebx+edi*2],0x96baf987
  412309:	out    dx,al
  41230a:	es push ss
  41230c:	aad    0x37
  41230e:	daa    
  41230f:	xchg   esp,eax
  412310:	add    dh,BYTE PTR [esi-0x10]
  412313:	jl     0x412301
  412315:	sbb    DWORD PTR [ebp+0x68a9dad7],esi
  41231b:	imul   BYTE PTR [eax+0x579c2e1b]
  412321:	xor    esi,DWORD PTR [ecx+0x4a]
  412324:	mov    dh,0xb2
  412326:	and    dh,BYTE PTR [ebx+eax*8-0x74]
  41232a:	stc    
  41232b:	data16 xor al,0x51
  41232e:	adc    al,0x6d
  412330:	or     eax,0xdc5bb5b5
  412335:	fld    st(3)
  412337:	hlt    
  412338:	jle    0x412327
  41233a:	inc    esi
  41233b:	repnz test al,0x95
  41233e:	test   BYTE PTR [edi-0x51],bl
  412341:	push   edi
  412342:	pop    ebx
  412343:	repnz xchg edx,eax
  412345:	xchg   ebx,eax
  412346:	int3   
  412347:	mov    ecx,0xf0b85b57
  41234c:	sbb    BYTE PTR [edx+0x61],ch
  41234f:	mov    ebx,DWORD PTR [eax]
  412351:	inc    edx
  412352:	add    bl,BYTE PTR [esi-0x42]
  412355:	test   DWORD PTR [edi+0x5a],ecx
  412358:	push   ebp
  412359:	dec    DWORD PTR [esp+ebx*4]
  41235c:	shl    cl,1
  41235e:	and    al,0x1c
  412360:	push   es
  412361:	mov    bl,0x97
  412363:	adc    dh,BYTE PTR [edx+0x312b059f]
  412369:	push   es
  41236a:	int    0x89
  41236c:	not    DWORD PTR [esi-0x27115ba2]
  412372:	jae    0x412368
  412374:	pop    ebp
  412375:	push   edi
  412376:	or     DWORD PTR [edx],ebp
  412378:	cmp    DWORD PTR [edx+ebx*4+0x7e25f38a],ecx
  41237f:	inc    ebx
  412380:	pushf  
  412381:	sbb    esp,DWORD PTR [eax]
  412383:	test   edx,edx
  412385:	loopne 0x412364
  412387:	dec    ecx
  412388:	(bad)  
  412389:	and    eax,0xa5146592
  41238e:	push   eax
  41238f:	iret   
  412390:	jbe    0x412339
  412392:	dec    ebp
  412393:	repnz shl DWORD PTR [esi],0xf5
  412397:	inc    esp
  412398:	or     al,0xd5
  41239a:	jge    0x4123c6
  41239c:	fnsave [ebx]
  41239e:	jl     0x412335
  4123a0:	xchg   esp,eax
  4123a1:	xchg   ebp,eax
  4123a2:	push   esp
  4123a3:	out    0xf7,eax
  4123a5:	mov    edx,0xec55ed3
  4123aa:	dec    ebx
  4123ab:	cs dec edi
  4123ad:	cmp    BYTE PTR [ebp+0x7e],cl
  4123b0:	adc    eax,DWORD PTR [ebx]
  4123b2:	in     al,0x88
  4123b4:	pop    esp
  4123b5:	pop    ebx
  4123b6:	jge    0x412380
  4123b8:	ja     0x4123c8
  4123ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4123bb:	xchg   ebp,eax
  4123bc:	sub    eax,0x67ac4be6
  4123c1:	mov    cl,0x10
  4123c3:	push   ds
  4123c4:	sti    
  4123c5:	nop
  4123c6:	jmp    0xd28b:0x84fe5dbf
  4123cd:	sti    
  4123ce:	add    ecx,DWORD PTR ds:0xd2fa85db
  4123d4:	mov    dh,0x27
  4123d6:	cwde   
  4123d7:	jg     0x4123bc
  4123d9:	dec    edx
  4123da:	inc    ebx
  4123db:	ffreep st(1)
  4123dd:	sub    edi,DWORD PTR [ebx+0x41]
  4123e0:	cmc    
  4123e1:	pusha  
  4123e2:	jno    0x412422
  4123e4:	or     BYTE PTR [edx+edi*4-0x8e8b40a],0x47
  4123ec:	sub    BYTE PTR [ecx+edx*4],dl
  4123ef:	in     eax,dx
  4123f0:	xchg   esi,eax
  4123f1:	or     DWORD PTR ds:0xb7367896,esp
  4123f7:	add    eax,0x4132d18e
  4123fc:	and    eax,0xbf6eba61
  412401:	or     eax,0x42871d8d
  412406:	cwde   
  412407:	mov    eax,0xa5819795
  41240c:	ret    
  41240d:	xchg   esi,eax
  41240e:	xor    BYTE PTR [edx+eax*4-0x18],bh
  412412:	dec    eax
  412413:	pop    edx
  412414:	mov    ecx,0x72c86ab0
  412419:	xchg   DWORD PTR [eax],edx
  41241b:	call   0x79d6:0xd4ccca68
  412422:	xor    DWORD PTR [edi+0x17],edx
  412425:	push   ss
  412426:	imul   ebp,DWORD PTR [eax+0x5c],0x94b42a30
  41242d:	pop    eax
  41242e:	(bad)  
  41242f:	mov    WORD PTR [edi],ss
  412431:	rol    BYTE PTR [esp+eiz*4+0x44],1
  412435:	push   ss
  412436:	dec    ebx
  412437:	hlt    
  412438:	stc    
  412439:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41243a:	fcmovnbe st,st(4)
  41243c:	jge    0x412498
  41243e:	sbb    BYTE PTR [ecx-0x7c175067],dh
  412444:	jno    0x412495
  412446:	daa    
  412447:	push   ds
  412448:	nop
  412449:	mov    al,ds:0x5f8b4be
  41244e:	xor    al,0x5e
  412450:	imul   esi,DWORD PTR [edi-0x26],0x3bb5fbd5
  412457:	or     ebx,DWORD PTR [edx+0x2a28d3c0]
  41245d:	cmp    BYTE PTR [ecx-0x3a],bl
  412460:	jl     0x412400
  412462:	pop    esi
  412463:	out    dx,al
  412464:	inc    esp
  412465:	ficomp DWORD PTR [edi-0x212d4c19]
  41246b:	mov    al,0xc1
  41246d:	mov    ds:0xecb71ffc,al
  412472:	inc    edi
  412473:	jl     0x4124db
  412475:	fnstcw WORD PTR [eax+0xf]
  412478:	pop    es
  412479:	scas   eax,DWORD PTR es:[edi]
  41247a:	cmp    eax,0xe45df217
  41247f:	bound  ecx,QWORD PTR ds:0x4c6424b7
  412485:	imul   edi,DWORD PTR [edi],0x360961e4
  41248b:	jp     0x412475
  41248d:	rcr    BYTE PTR [edx],cl
  41248f:	retf   
  412490:	xor    DWORD PTR [eax+0x7b],esi
  412493:	es adc DWORD PTR es:[ecx],ebp
  412497:	call   0x1077:0x768f4f99
  41249e:	out    dx,al
  41249f:	inc    ecx
  4124a0:	idiv   ecx
  4124a2:	icebp  
  4124a3:	jmp    0x412502
  4124a5:	aas    
  4124a6:	cmp    al,0x1a
  4124a8:	out    0x2b,al
  4124aa:	test   eax,0x722bdfb7
  4124af:	ret    
  4124b0:	icebp  
  4124b1:	sbb    BYTE PTR [ebp-0x6b5461b8],dl
  4124b7:	xchg   esp,eax
  4124b8:	dec    eax
  4124b9:	clc    
  4124ba:	inc    eax
  4124bb:	xor    DWORD PTR ds:0x88edb1e5,0x24
  4124c2:	push   esp
  4124c3:	xchg   edi,eax
  4124c4:	dec    esp
  4124c5:	cmp    ebp,DWORD PTR ds:0xbdfd6f1e
  4124cb:	cli    
  4124cc:	inc    edi
  4124cd:	test   eax,edx
  4124cf:	or     eax,0x9a78b5ac
  4124d4:	lahf   
  4124d5:	add    DWORD PTR [edi-0x1853a9ce],ecx
  4124db:	scas   al,BYTE PTR es:[edi]
  4124dc:	mov    WORD PTR [ebp+0x5a],ds
  4124df:	int    0x20
  4124e1:	mov    eax,ds:0x56458787
  4124e6:	int    0x47
  4124e8:	imul   esp,DWORD PTR [edi],0xa
  4124eb:	jo     0x4124d8
  4124ed:	xor    DWORD PTR [ebp+0x6e],esi
  4124f0:	ins    DWORD PTR es:[edi],dx
  4124f1:	xchg   esp,eax
  4124f2:	mov    ebx,0x7dc138e4
  4124f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4124f8:	push   es
  4124f9:	push   0xf23f4311
  4124fe:	mov    esp,0xdaa2464a
  412503:	inc    BYTE PTR [edi+0x2e]
  412506:	hlt    
  412507:	and    edi,DWORD PTR [ebx+0x232ae1d6]
  41250d:	xchg   edi,eax
  41250e:	inc    esi
  41250f:	jb     0x41249d
  412511:	gs jge 0x4124f0
  412514:	xlat   BYTE PTR ds:[ebx]
  412515:	mov    dl,0x75
  412517:	cmp    eax,0xee0bd262
  41251c:	adc    al,0xa
  41251e:	popa   
  41251f:	and    eax,0x46fe3aeb
  412524:	jne    0x4124d3
  412526:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412527:	leave  
  412528:	mov    esi,0xf7b73d2d
  41252d:	lds    esp,FWORD PTR [esi]
  41252f:	scas   al,BYTE PTR es:[edi]
  412530:	repnz push ecx
  412532:	pop    esi
  412533:	cmp    al,0xb7
  412535:	repnz add DWORD PTR [ebp+0xb],esi
  412539:	lock fstp TBYTE PTR [eax+0x29]
  41253d:	pushf  
  41253e:	jecxz  0x4124cf
  412540:	retf   
  412541:	pop    esi
  412542:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412543:	iret   
  412544:	adc    al,BYTE PTR [esi+0x66677d8e]
  41254a:	add    esp,ebx
  41254c:	push   es
  41254d:	ins    BYTE PTR es:[edi],dx
  41254e:	pop    esi
  41254f:	int    0xe5
  412551:	push   edx
  412552:	(bad)  
  412553:	sbb    ebp,DWORD PTR [ecx+ecx*2+0x735a1818]
  41255a:	dec    edx
  41255b:	ud1    edx,DWORD PTR [edi]
  41255e:	mov    esi,0x6ada6fac
  412563:	or     BYTE PTR [edi],bl
  412565:	gs ret 
  412567:	xor    DWORD PTR [edx],ebx
  412569:	xchg   DWORD PTR [ecx-0x2228792a],esi
  41256f:	sbb    ah,cl
  412571:	mov    edi,0xbcd0f6e2
  412576:	jmp    0x432f:0x8fbd2e8b
  41257d:	popa   
  41257e:	pop    ecx
  41257f:	jg     0x4125fb
  412581:	shr    BYTE PTR [edi+0x4b],1
  412584:	cmp    ebp,DWORD PTR [ebx-0x35]
  412587:	pop    ecx
  412588:	pop    edi
  412589:	popf   
  41258a:	cld    
  41258b:	pop    eax
  41258c:	call   0x1623:0xa33c393
  412593:	xchg   ecx,eax
  412594:	imul   edx,DWORD PTR [ecx+ecx*2+0x353230e3],0x39
  41259c:	lods   al,BYTE PTR ds:[esi]
  41259d:	cmp    edx,DWORD PTR [eax-0x2a]
  4125a0:	imul   ebp,DWORD PTR [ebx+0x74],0xffffffda
  4125a4:	sbb    eax,0xa08b6eab
  4125a9:	icebp  
  4125aa:	xor    al,0x3f
  4125ac:	(bad)  
  4125ae:	dec    ecx
  4125af:	in     eax,0x1d
  4125b1:	mov    ch,ah
  4125b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4125b4:	mov    ecx,0xe83c6743
  4125b9:	mov    dl,0xf4
  4125bb:	loopne 0x4125ef
  4125bd:	push   es
  4125be:	push   esp
  4125bf:	fucomp st(6)
  4125c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4125c2:	stos   DWORD PTR es:[edi],eax
  4125c3:	neg    BYTE PTR [ebp+0x65]
  4125c6:	enter  0x8a8d,0x4c
  4125ca:	jmp    0x4881:0xda192a72
  4125d1:	outs   dx,DWORD PTR ds:[esi]
  4125d2:	pusha  
  4125d3:	in     eax,dx
  4125d4:	or     BYTE PTR gs:[edx-0x11b73510],dh
  4125db:	jmp    0x29fa:0xbbbe332
  4125e2:	and    dl,BYTE PTR [esi+0x7fe61be1]
  4125e8:	jle    0x4125c9
  4125ea:	push   ebp
  4125eb:	out    dx,eax
  4125ec:	(bad)  
  4125ed:	retf   0xad59
  4125f0:	adc    eax,0x24b4b554
  4125f5:	and    edx,ecx
  4125f7:	imul   eax,DWORD PTR [edi-0x4c],0xffffffbe
  4125fb:	mov    edx,0x47af8168
  412600:	fsubr  QWORD PTR [edx]
  412602:	cmp    ebp,DWORD PTR [eax-0x1dfa86d3]
  412608:	jp     0x412618
  41260a:	int3   
  41260b:	and    edi,ebx
  41260d:	imul   edi,DWORD PTR [eax*8-0x69e31c04],0x64
  412615:	sbb    dh,dh
  412617:	cmp    bh,BYTE PTR [esi+ebx*4]
  41261a:	(bad)  
  41261b:	iret   
  41261c:	out    0x3d,al
  41261e:	mov    bl,0x45
  412620:	mov    esi,0x87748ea7
  412625:	(bad)  
  412626:	pop    ds
  412627:	sbb    ah,BYTE PTR [ebx-0x2c0f5071]
  41262d:	pushf  
  41262e:	mov    esp,0x299c3673
  412633:	aam    0xbe
  412635:	les    esi,FWORD PTR [edx]
  412637:	or     BYTE PTR [ebp+0x1d6772e8],0xae
  41263e:	sbb    al,bl
  412640:	jmp    0xe42f4329
  412645:	xor    bl,BYTE PTR [ecx+0x40]
  412648:	gs sub eax,0xa0b45be9
  41264e:	arpl   WORD PTR [edi+0x3a4b04df],sp
  412654:	test   DWORD PTR [esi-0x22a15775],edx
  41265a:	sbb    BYTE PTR [edi-0x5a],dh
  41265d:	nop
  41265e:	vpcomud xmm14,xmm7,XMMWORD PTR [ebx-0x249d570e],0x42
  412668:	popf   
  412669:	in     eax,0x99
  41266b:	xchg   esp,eax
  41266c:	inc    ebp
  41266d:	push   edx
  41266e:	lahf   
  41266f:	iret   
  412670:	repz aam 0xa
  412673:	and    ebp,ebp
  412675:	pop    edi
  412676:	dec    esi
  412677:	push   ebp
  412678:	es sahf 
  41267a:	shl    BYTE PTR [eax+edi*2],cl
  41267d:	js     0x412604
  41267f:	addr16 jp 0x4126df
  412682:	jae    0x41260f
  412684:	mov    al,ds:0x3d57bebc
  412689:	mov    dl,0x1c
  41268b:	es xor eax,0x360c1436
  412691:	sbb    BYTE PTR [eax-0x3e],bl
  412694:	pushf  
  412695:	xor    DWORD PTR [eax],ebp
  412697:	arpl   WORD PTR [edi+0x5b67a5f],cx
  41269d:	adc    al,BYTE PTR [edi+edx*2+0x2af40e34]
  4126a4:	rol    BYTE PTR [esp+eiz*2],1
  4126a7:	fs mov edi,0xf048cc1f
  4126ad:	fs jg  0x412709
  4126b0:	and    ebx,esp
  4126b2:	adc    esp,eax
  4126b4:	inc    ecx
  4126b5:	push   cs
  4126b6:	das    
  4126b7:	shl    DWORD PTR [ecx+ecx*8+0x4b],0xaa
  4126bc:	mov    edi,0xe477a3a7
  4126c1:	pop    ebp
  4126c2:	or     BYTE PTR [eax-0x32],dh
  4126c5:	jecxz  0x412660
  4126c7:	mov    ecx,0x5ace2cde
  4126cc:	mov    al,BYTE PTR [esi]
  4126ce:	into   
  4126cf:	jmp    0x37ac7515
  4126d4:	or     dl,BYTE PTR [esi-0x4f65f0fc]
  4126da:	lea    edi,[edx+0x1409329d]
  4126e0:	stos   BYTE PTR es:[edi],al
  4126e1:	es dec esi
  4126e3:	lods   eax,DWORD PTR ds:[esi]
  4126e4:	mov    ch,0xaf
  4126e6:	fwait
  4126e7:	aaa    
  4126e8:	cmp    BYTE PTR [edx],0xf1
  4126eb:	mov    edi,0xfbc689b5
  4126f0:	push   edi
  4126f1:	es xlat BYTE PTR ss:[ebx]
  4126f4:	test   BYTE PTR [ebx-0x53],0xeb
  4126f8:	pop    eax
  4126f9:	xor    eax,0xa263a376
  4126fe:	cmp    al,0x69
  412700:	inc    esi
  412701:	jmp    0x31d84001
  412706:	in     al,0x4
  412708:	xchg   esi,eax
  412709:	lods   eax,DWORD PTR ds:[esi]
  41270a:	int3   
  41270b:	stc    
  41270c:	fsubp  st(3),st
  41270e:	idiv   DWORD PTR [edx-0x7f]
  412711:	or     eax,0x1d3498b7
  412716:	sbb    ebp,DWORD PTR [ecx-0x707f15a2]
  41271c:	pop    esp
  41271d:	push   ss
  41271e:	mov    al,ds:0xd15e0a5e
  412723:	sub    eax,0x716963f1
  412728:	push   0xffffff97
  41272a:	popa   
  41272b:	ins    BYTE PTR es:[edi],dx
  41272c:	cdq    
  41272d:	jns    0x4126ee
  41272f:	out    dx,al
  412730:	arpl   WORD PTR [ebx+edx*8+0x6a7cd050],sp
  412737:	cli    
  412738:	xchg   esp,eax
  412739:	pop    esi
  41273a:	xchg   edx,eax
  41273b:	test   eax,0xc808e1fa
  412740:	jb     0x412717
  412742:	dec    esp
  412743:	sbb    edi,edx
  412745:	push   ecx
  412746:	mov    DWORD PTR [ecx],0xa65ea059
  41274c:	dec    eax
  41274d:	add    bh,BYTE PTR [edi-0x4ff0b234]
  412753:	retf   0xb560
  412756:	gs add edi,0x6d
  41275a:	and    eax,0xa8308582
  41275f:	adc    bh,BYTE PTR [edi-0x650a3]
  412765:	jp     0x412790
  412767:	inc    eax
  412768:	add    DWORD PTR [edi+0x5a6fb6b3],edx
  41276e:	repnz sar DWORD PTR [ecx],1
  412771:	mov    al,0xd
  412773:	js     0x4127cf
  412775:	dec    eax
  412776:	adc    al,0x44
  412778:	sub    dl,dh
  41277a:	pop    edi
  41277b:	cld    
  41277c:	cmc    
  41277d:	add    DWORD PTR [ebx+0x58],ecx
  412780:	push   ds
  412781:	cwde   
  412782:	mov    bl,BYTE PTR [ecx-0x7b]
  412785:	or     al,0x94
  412787:	mov    ebx,0x75af4e71
  41278c:	pop    DWORD PTR [esi]
  41278e:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  412790:	popa   
  412791:	pop    ebx
  412792:	sbb    ecx,ebp
  412794:	int3   
  412795:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412796:	popa   
  412797:	or     eax,DWORD PTR [edx-0x5f]
  41279a:	pushf  
  41279b:	div    ebp
  41279d:	out    0x49,eax
  41279f:	je     0x4127fe
  4127a1:	or     eax,0x92c4961c
  4127a6:	mul    DWORD PTR [ecx+0x3a]
  4127a9:	push   ss
  4127aa:	js     0x41275a
  4127ac:	rcr    BYTE PTR [ebx-0x10cc3450],cl
  4127b2:	cmp    BYTE PTR [ebx],dh
  4127b4:	dec    esi
  4127b5:	mov    ecx,0xc77d0045
  4127ba:	cmp    DWORD PTR [edx],ecx
  4127bc:	jge    0x412777
  4127be:	mov    ebp,0x1db8037a
  4127c3:	pop    edi
  4127c4:	lods   al,BYTE PTR ds:[esi]
  4127c5:	in     al,dx
  4127c6:	iret   
  4127c7:	je     0x412761
  4127c9:	lea    ebx,[esi+eax*4-0x1d]
  4127cd:	icebp  
  4127ce:	xchg   esi,eax
  4127cf:	mov    bh,0x31
  4127d1:	jo     0x4127d4
  4127d3:	dec    edx
  4127d4:	popa   
  4127d5:	fld    QWORD PTR [eax+0x201f212]
  4127db:	sbb    BYTE PTR [eax],ah
  4127dd:	rol    BYTE PTR [esi-0x2e],1
  4127e0:	sbb    al,0x6c
  4127e2:	push   es
  4127e3:	and    ecx,esi
  4127e5:	jnp    0x4127c4
  4127e7:	int    0x5e
  4127e9:	test   DWORD PTR [esi],eax
  4127eb:	repnz bnd jo 0x41280a
  4127ef:	or     ebx,DWORD PTR [edi-0x17]
  4127f2:	and    BYTE PTR [esi+ebp*8-0x1a],cl
  4127f6:	cmp    bh,bh
  4127f8:	push   edx
  4127f9:	scas   eax,DWORD PTR es:[edi]
  4127fa:	cmp    eax,0xedd9c46
  4127ff:	dec    edx
  412800:	and    DWORD PTR [eax+0x602b06b1],eax
  412806:	stc    
  412807:	push   edx
  412808:	xor    DWORD PTR [edx-0x725ed750],esi
  41280e:	sub    DWORD PTR [eax],ebp
  412810:	jl     0x4127c2
  412812:	(bad)  
  412813:	out    dx,eax
  412814:	or     ebp,DWORD PTR [esi+0x2f]
  412817:	test   DWORD PTR [ecx],esi
  412819:	xchg   ecx,eax
  41281a:	push   ds
  41281b:	jns    0x41289c
  41281d:	cmp    DWORD PTR [ebx],edi
  41281f:	int    0xa
  412821:	(bad)  
  412822:	sub    ebp,DWORD PTR [ebp-0x3c]
  412825:	mov    cl,0x22
  412827:	push   eax
  412828:	lahf   
  412829:	xchg   ebp,eax
  41282a:	sub    BYTE PTR [esi-0x73fcd629],dh
  412830:	or     BYTE PTR [ebx+ebp*1-0x36826f59],dh
  412837:	lds    esi,FWORD PTR [ebx-0x67]
  41283a:	int3   
  41283b:	cdq    
  41283c:	sahf   
  41283d:	xchg   edx,eax
  41283e:	dec    eax
  41283f:	add    bh,BYTE PTR [edx+0x149b5916]
  412845:	retf   
  412846:	mov    dh,0xd9
  412848:	ror    BYTE PTR [ebx+0x40ab1cf5],1
  41284e:	cs jno 0x41282c
  412851:	daa    
  412852:	pop    eax
  412853:	xchg   ebp,eax
  412854:	mov    ch,0x99
  412856:	inc    eax
  412857:	push   0x62
  412859:	js     0x41286b
  41285b:	jle    0x412887
  41285d:	jo     0x412804
  41285f:	mov    dl,0x8a
  412861:	ror    ecx,0xb
  412864:	mov    ds:0xeb533bbe,al
  41286a:	dec    ebp
  41286b:	js     0x4128b1
  41286d:	fsubr  QWORD PTR [edi-0x17]
  412870:	ins    DWORD PTR es:[edi],dx
  412871:	add    ebx,DWORD PTR [edi]
  412873:	mov    esi,ebp
  412875:	sub    eax,ebx
  412877:	je     0x4128ef
  412879:	add    ebp,edx
  41287b:	and    eax,0xe0c76207
  412880:	test   BYTE PTR [ecx-0x6c9b0f5d],0xa8
  412887:	mov    ss,edi
  412889:	xchg   ebp,eax
  41288a:	jmp    0x5c95:0x47e64f5f
  412891:	pop    ebx
  412892:	stos   BYTE PTR es:[edi],al
  412893:	jecxz  0x41287d
  412895:	jae    0x41285f
  412897:	lahf   
  412898:	pusha  
  412899:	jg     0x412916
  41289b:	adc    eax,0xc855e70e
  4128a0:	fild   WORD PTR ds:0xc283d3c8
  4128a6:	push   ebp
  4128a7:	push   esi
  4128a8:	xor    BYTE PTR [edx+0x4f84b1ff],ah
  4128ae:	iret   
  4128af:	les    edx,FWORD PTR [edx-0x2fa54822]
  4128b5:	jno    0x4128bb
  4128b7:	adc    DWORD PTR [esi],ebp
  4128b9:	fidivr WORD PTR [ebp-0x6d]
  4128bc:	(bad)  
  4128bd:	mov    cl,0x7b
  4128bf:	repz push ebp
  4128c1:	push   cs
  4128c2:	pop    ds
  4128c3:	adc    BYTE PTR [edx+0xeb6fda6],bl
  4128c9:	sbb    ch,BYTE PTR [edi]
  4128cb:	sbb    al,0xd2
  4128cd:	into   
  4128ce:	push   ebx
  4128cf:	sbb    eax,0xcbb43e56
  4128d4:	and    ecx,esp
  4128d6:	push   ebp
  4128d7:	cmc    
  4128d8:	pop    eax
  4128d9:	mov    eax,ds:0xa1c3a0b1
  4128de:	dec    eax
  4128df:	lea    esi,[eax+edx*2-0xbe555e7]
  4128e6:	test   DWORD PTR [ebp-0x7363964a],ecx
  4128ec:	loop   0x412903
  4128ee:	push   0xffffffc9
  4128f0:	add    BYTE PTR [ebx],bl
  4128f2:	jp     0x41293d
  4128f4:	jo     0x412919
  4128f6:	xor    BYTE PTR [ebp+eax*2-0x36],bl
  4128fa:	sbb    BYTE PTR [esp+eiz*8],bl
  4128fd:	push   edx
  4128fe:	xlat   BYTE PTR ds:[ebx]
  4128ff:	sti    
  412900:	mov    al,0x45
  412902:	push   ds
  412903:	inc    ebp
  412904:	in     eax,0xa4
  412906:	xchg   edx,eax
  412907:	enter  0x3128,0x1e
  41290b:	enter  0x2411,0x92
  41290f:	mov    bh,0x31
  412911:	adc    DWORD PTR fs:[esp+eax*1+0x38d191b2],ecx
  412919:	mov    al,0x1e
  41291b:	je     0x4128b8
  41291d:	inc    esi
  41291e:	hlt    
  41291f:	xchg   ebx,eax
  412920:	imul   esi,esp,0x3a
  412923:	inc    edx
  412924:	jmp    0x412923
  412926:	ins    DWORD PTR es:[edi],dx
  412927:	ds mov ebp,0x3e987bdd
  41292d:	xchg   DWORD PTR ds:[ecx-0x35],esi
  412931:	stc    
  412932:	push   es
  412933:	jb     0x412955
  412935:	cli    
  412936:	scas   al,BYTE PTR es:[edi]
  412937:	std    
  412938:	xchg   ebx,eax
  412939:	jmp    0x4128d0
  41293b:	adc    BYTE PTR [ebp-0x19],al
  41293e:	sub    ch,bh
  412940:	sub    ebx,DWORD PTR [ecx-0x7]
  412943:	lahf   
  412944:	inc    edx
  412945:	sub    al,BYTE PTR [edi+0x129d02c6]
  41294b:	push   es
  41294c:	(bad)  
  41294e:	popf   
  41294f:	xchg   ebx,eax
  412950:	pop    ebx
  412951:	out    0x94,eax
  412953:	jns    0x412981
  412955:	fwait
  412956:	add    eax,0x272ea7b
  41295b:	sub    cl,dh
  41295d:	mov    ah,0xc
  41295f:	out    0x92,al
  412961:	sub    BYTE PTR [ebp+0x19],ch
  412964:	mov    bh,0x4d
  412966:	into   
  412967:	xchg   edi,eax
  412968:	adc    edx,edx
  41296a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41296b:	icebp  
  41296c:	dec    esp
  41296d:	dec    ecx
  41296e:	dec    ebp
  41296f:	mov    dl,0x3
  412971:	out    0x43,al
  412973:	mov    ch,0xaf
  412975:	ja     0x41299f
  412977:	neg    DWORD PTR ds:0x1c37a189
  41297d:	pop    DWORD PTR [eax+0x1677f89]
  412983:	data16 jle 0x4129b6
  412986:	shl    DWORD PTR ds:0xe1293e2e,cl
  41298c:	or     BYTE PTR [ecx-0x235e10ca],al
  412992:	xchg   esp,eax
  412993:	loopne 0x4129d0
  412995:	adc    DWORD PTR [ecx-0x7],eax
  412998:	sbb    ecx,ebx
  41299a:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  41299c:	loopne 0x41296c
  41299e:	(bad)
  4129a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4129a2:	add    BYTE PTR [edi+0x39],bl
  4129a5:	lods   eax,DWORD PTR ds:[esi]
  4129a6:	pop    edx
  4129a7:	retf   
  4129a8:	mov    bl,0xf7
  4129aa:	loop   0x412938
  4129ac:	xor    BYTE PTR [edi-0x28777394],ch
  4129b2:	mov    BYTE PTR [ebp-0x50],dl
  4129b5:	pop    edx
  4129b6:	adc    cl,BYTE PTR [ebx+esi*1]
  4129b9:	fiadd  DWORD PTR [esi]
  4129bb:	in     eax,0xf1
  4129bd:	push   0x367a1e96
  4129c2:	cwde   
  4129c3:	test   DWORD PTR [ebx-0x65],0xb0463128
  4129ca:	fdivr  DWORD PTR [edx-0x34efc185]
  4129d0:	in     al,0xd3
  4129d2:	mov    BYTE PTR [ebp-0x658028db],al
  4129d8:	cmp    dh,dh
  4129da:	(bad)  
  4129db:	adc    DWORD PTR [ebx],edi
  4129dd:	test   al,0x8e
  4129df:	and    esp,DWORD PTR [edx]
  4129e1:	jbe    0x412a2c
  4129e3:	adc    ebp,DWORD PTR [edi-0x2f]
  4129e6:	mov    dl,0x51
  4129e8:	push   edi
  4129e9:	leave  
  4129ea:	jg     0x4129af
  4129ec:	push   cs
  4129ed:	in     eax,0xec
  4129ef:	push   eax
  4129f0:	ins    DWORD PTR es:[edi],dx
  4129f1:	stos   BYTE PTR es:[edi],al
  4129f2:	pop    ebp
  4129f3:	dec    eax
  4129f4:	and    BYTE PTR ds:0xe4462227,bl
  4129fa:	adc    ecx,edx
  4129fc:	jmp    0x412a32
  4129fe:	push   edx
  4129ff:	jnp    0x4129be
  412a01:	aam    0xeb
  412a03:	nop
  412a04:	mov    esp,0x1e100ea4
  412a09:	adc    eax,0x7a9dbd9a
  412a0e:	aas    
  412a0f:	adc    dh,bl
  412a11:	push   ebx
  412a12:	mov    WORD PTR [edi+0x36],ss
  412a15:	test   eax,0x706547f5
  412a1a:	(bad)  
  412a1b:	ffreep st(7)
  412a1d:	push   0xd4ba709
  412a22:	iret   
  412a23:	sbb    edx,DWORD PTR [ecx-0x13]
  412a26:	repnz mov ds:0x941ab2f9,al
  412a2c:	push   edi
  412a2d:	mov    ch,0x23
  412a2f:	pushf  
  412a30:	push   edi
  412a31:	loope  0x4129e4
  412a33:	scas   al,BYTE PTR es:[edi]
  412a34:	div    edi
  412a36:	test   al,0x8a
  412a38:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412a39:	jb     0x4129bd
  412a3b:	mul    esi
  412a3d:	fnsave [ebx]
  412a3f:	jmp    0x392b:0xca8f3a1d
  412a46:	mov    ch,0x13
  412a48:	div    BYTE PTR [eax+ecx*2]
  412a4b:	ins    BYTE PTR es:[edi],dx
  412a4c:	fild   QWORD PTR [ecx]
  412a4e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412a4f:	and    dh,bl
  412a51:	lds    esp,FWORD PTR [ebx]
  412a53:	mov    esp,0x412b644c
  412a58:	and    eax,0x6f142381
  412a5d:	outs   dx,DWORD PTR ds:[esi]
  412a5e:	imul   ebx,DWORD PTR [ecx+0xc367714],0xffffff81
  412a65:	mov    eax,ds:0x3e2b9590
  412a6a:	add    ch,BYTE PTR [edi-0x73]
  412a6d:	dec    edx
  412a6e:	lock mov ss:0xbe3e50dc,eax
  412a75:	popf   
  412a76:	clc    
  412a77:	mov    cl,0x73
  412a79:	mov    ds:0x733ec0fe,al
  412a7e:	in     al,dx
  412a7f:	not    DWORD PTR cs:[esi+0xb]
  412a83:	pop    es
  412a84:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412a85:	jae    0x412a8a
  412a87:	jecxz  0x412a9a
  412a89:	or     esp,edx
  412a8b:	push   edi
  412a8c:	cmp    eax,0x7f81a307
  412a91:	mov    al,ds:0xf866bb59
  412a96:	and    dh,dl
  412a98:	add    eax,0x83e31964
  412a9d:	(bad)  
  412aa0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412aa1:	out    0x19,eax
  412aa3:	das    
  412aa4:	add    edx,DWORD PTR ds:0xc624e49c
  412aaa:	jne    0x412a39
  412aac:	dec    edx
  412aad:	sbb    eax,0x878988be
  412ab2:	mov    eax,ds:0x6dfc12d2
  412ab7:	(bad)  
  412ab8:	ucomiss xmm4,DWORD PTR [ebx]
  412abb:	clc    
  412abc:	push   esp
  412abd:	and    ch,BYTE PTR [ebx]
  412abf:	ret    
  412ac0:	test   al,0xec
  412ac2:	adc    BYTE PTR [edi],ch
  412ac4:	xchg   edx,eax
  412ac5:	sbb    cl,BYTE PTR [edx-0x17]
  412ac8:	mov    ds:0xfa48dc0d,eax
  412acd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412ace:	xchg   esp,eax
  412acf:	mov    ebx,0xf38a663b
  412ad4:	nop
  412ad5:	lea    esp,[esi+ebx*4-0x49e2beff]
  412adc:	push   ds
  412add:	(bad)  
  412ade:	ror    BYTE PTR [ecx],cl
  412ae0:	add    BYTE PTR [ecx+0x46022f7f],0x19
  412ae7:	sub    ch,BYTE PTR [edx-0x6932c9d]
  412aed:	mov    edi,0xa1c1c490
  412af2:	lahf   
  412af3:	gs adc bl,cl
  412af6:	sbb    eax,0x6e99ca37
  412afb:	or     esi,DWORD PTR [esi]
  412afd:	fld    TBYTE PTR [ebx]
  412aff:	mov    ds:0xc50d5c7,al
  412b04:	cmc    
  412b05:	sub    eax,0x4f5ee390
  412b0a:	push   ebp
  412b0b:	xor    al,0x1b
  412b0d:	fcmovnu st,st(0)
  412b0f:	aad    0x9f
  412b11:	xor    DWORD PTR [edi+0x5a],edx
  412b14:	(bad)
  412b18:	aam    0xa6
  412b1a:	jns    0x412b6c
  412b1c:	mov    esp,DWORD PTR [eax+0x18b7d3df]
  412b22:	mov    al,ds:0x2be31333
  412b27:	and    esi,ebp
  412b29:	data16 sti 
  412b2b:	leave  
  412b2c:	pop    edx
  412b2d:	iret   
  412b2e:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  412b30:	inc    ebx
  412b31:	pop    edi
  412b32:	xchg   ebp,eax
  412b33:	retf   0x1c8e
  412b36:	bound  esi,QWORD PTR [eax+0x28]
  412b39:	or     BYTE PTR [esi],al
  412b3b:	pop    ds
  412b3c:	retf   0xb4
  412b3f:	xor    DWORD PTR [ecx+eiz*2+0x4bc53b62],ebx
  412b46:	push   eax
  412b47:	ja     0x412ad0
  412b49:	fwait
  412b4a:	cmc    
  412b4b:	jmp    0xd09e:0x1f8f4546
  412b52:	dec    esi
  412b53:	add    al,0x6f
  412b55:	js     0x412b0b
  412b57:	iret   
  412b58:	add    al,0x3f
  412b5a:	mov    BYTE PTR [esi-0x53ffb426],cl
  412b60:	push   edx
  412b61:	mov    edx,0x85acf5b3
  412b66:	xchg   edi,eax
  412b67:	or     DWORD PTR [ebx+0x37],0x35fff3a9
  412b6e:	fisubr WORD PTR [edi+0x20a4d3bb]
  412b74:	push   cs
  412b75:	cmp    ecx,DWORD PTR [edi+0x23]
  412b78:	jecxz  0x412b2d
  412b7a:	fucomip st,st(6)
  412b7c:	mov    WORD PTR [edx-0x651b0163],es
  412b82:	mov    ?,ebp
  412b84:	mov    WORD PTR [edx+eiz*4+0x1c5efcc2],?
  412b8b:	pop    edx
  412b8c:	add    al,0xcf
  412b8e:	cmp    BYTE PTR ds:0xc2c0018f,dh
  412b94:	sbb    DWORD PTR [ebx+eiz*4+0x74],edx
  412b98:	dec    ebx
  412b99:	push   edi
  412b9a:	out    0xeb,al
  412b9c:	shl    DWORD PTR [eax-0x49],1
  412b9f:	jnp    0x412c1c
  412ba1:	je     0x412c05
  412ba3:	pop    eax
  412ba4:	jns    0x412bef
  412ba6:	arpl   sp,dx
  412ba8:	add    BYTE PTR ss:[esp+ebp*2],bl
  412bac:	cmp    al,BYTE PTR [edx-0x1ebabee1]
  412bb2:	jp     0x412b8b
  412bb4:	add    BYTE PTR [eax-0x2992dfcb],ah
  412bba:	push   cs
  412bbb:	jbe    0x412b92
  412bbd:	sub    eax,0x44a6a863
  412bc2:	iret   
  412bc3:	hlt    
  412bc4:	sbb    DWORD PTR [edi+0x6d],esi
  412bc7:	shl    BYTE PTR [ebx],1
  412bc9:	xor    ecx,ecx
  412bcb:	jo     0x412c44
  412bcd:	cwde   
  412bce:	fistp  DWORD PTR [esi+0x6e94ebeb]
  412bd4:	dec    ebp
  412bd5:	lods   al,BYTE PTR ds:[esi]
  412bd6:	jmp    0xcec5ff1a
  412bdb:	outs   dx,BYTE PTR ds:[esi]
  412bdc:	enter  0x9ed2,0x11
  412be0:	aad    0x46
  412be2:	imul   edx,ecx,0x5
  412be5:	mov    ebp,0x405a5dbe
  412bea:	aad    0xf7
  412bec:	inc    DWORD PTR [ebp-0x77]
  412bef:	pop    ecx
  412bf0:	sbb    al,0xd8
  412bf2:	test   BYTE PTR [esp+edx*8],bl
  412bf5:	pop    ebp
  412bf6:	in     eax,0x30
  412bf8:	mov    bl,al
  412bfa:	push   esi
  412bfb:	mov    ds:0xb1f80aba,eax
  412c00:	imul   ecx,esp,0x6c29c260
  412c06:	call   0x3892:0x52991f49
  412c0d:	test   BYTE PTR [edx+0x1fc2870b],ch
  412c13:	cmp    edi,DWORD PTR [edx+0x34a89986]
  412c19:	loop   0x412c76
  412c1b:	push   edx
  412c1c:	pop    esp
  412c1d:	inc    esp
  412c1e:	xchg   DWORD PTR [ebx-0x2a],edx
  412c21:	lds    eax,FWORD PTR [ecx+0x6742bd64]
  412c27:	push   esp
  412c28:	cmp    WORD PTR [eax-0x4b],cx
  412c2c:	xchg   DWORD PTR ds:0xada25508,esi
  412c32:	pop    ss
  412c33:	pop    ebx
  412c34:	xchg   edx,eax
  412c35:	xchg   ecx,eax
  412c36:	adc    BYTE PTR [esi],0xc2
  412c39:	inc    ebp
  412c3a:	rol    esi,1
  412c3c:	xor    edi,esp
  412c3e:	jecxz  0x412bfd
  412c40:	test   dl,0x65
  412c43:	inc    eax
  412c44:	xor    BYTE PTR [edx],bl
  412c46:	or     dh,BYTE PTR [bx+si+0x3902]
  412c4b:	mov    cl,0x36
  412c4d:	aad    0x0
  412c4f:	xchg   esi,eax
  412c50:	sbb    al,0xb5
  412c52:	or     cl,dl
  412c54:	or     BYTE PTR [ebp+ebx*1-0x33e646dc],dh
  412c5b:	inc    ecx
  412c5c:	js     0x412cbe
  412c5e:	mov    BYTE PTR [edi-0x658645f7],bh
  412c64:	call   0xe618:0x21d3940d
  412c6b:	dec    edx
  412c6c:	js     0x412c98
  412c6e:	icebp  
  412c6f:	inc    eax
  412c70:	inc    edx
  412c71:	ja     0x412c3f
  412c73:	adc    al,0xea
  412c75:	ror    BYTE PTR [ecx+0x5f3c26a2],1
  412c7b:	inc    esp
  412c7c:	cwde   
  412c7d:	sti    
  412c7e:	xchg   esi,eax
  412c7f:	aad    0xc8
  412c81:	dec    edi
  412c82:	mov    edx,0xdd1a9413
  412c87:	push   0xd42f3489
  412c8c:	test   al,0x36
  412c8e:	sbb    al,bh
  412c90:	mov    DWORD PTR [esi+esi*2-0x3a],0x75d496e9
  412c98:	add    DWORD PTR [ecx-0x2fef25dc],edx
  412c9e:	addr16 mov cl,0x72
  412ca1:	loop   0x412cb5
  412ca3:	pop    esp
  412ca4:	mov    al,ds:0x4a6ca1de
  412ca9:	jne    0x412ceb
  412cab:	push   edi
  412cac:	ficomp WORD PTR [eax+0x5a]
  412caf:	pop    es
  412cb0:	retf   0x75b
  412cb3:	push   esi
  412cb4:	mov    esi,0xab34b046
  412cb9:	xlat   BYTE PTR ds:[ebx]
  412cba:	cwde   
  412cbb:	(bad)  
  412cbc:	stc    
  412cbd:	cmp    bh,BYTE PTR [ebp+0x58921727]
  412cc3:	pop    eax
  412cc4:	sub    dh,BYTE PTR [ebx]
  412cc6:	cld    
  412cc7:	dec    eax
  412cc8:	nop
  412cc9:	addr16 mov ah,0x6b
  412ccc:	mov    ds:0x130a2045,eax
  412cd1:	adc    eax,0x9bd0fcac
  412cd6:	sti    
  412cd7:	sti    
  412cd8:	shr    DWORD PTR [ebp-0x5db7892d],1
  412cde:	jmp    0x4309f2d0
  412ce3:	dec    ebp
  412ce4:	sub    eax,0xc1a35878
  412ce9:	inc    BYTE PTR [ecx]
  412ceb:	adc    bh,al
  412ced:	in     al,0x58
  412cef:	xchg   BYTE PTR [ecx],bh
  412cf1:	sub    eax,0xa1eb57a4
  412cf6:	pop    edi
  412cf7:	mov    dl,0x18
  412cf9:	sub    DWORD PTR [ebx],0x6f5e4261
  412cff:	dec    ebp
  412d00:	cdq    
  412d01:	push   0xd38a59f3
  412d06:	cmp    dh,BYTE PTR [ebp-0x320c2bdd]
  412d0c:	and    eax,0x81f95c9b
  412d11:	push   ecx
  412d12:	jnp    0x412d61
  412d14:	retf   
  412d15:	xchg   ebp,eax
  412d16:	fisttp DWORD PTR [esi]
  412d18:	(bad)  
  412d19:	in     al,0x48
  412d1b:	add    eax,0x65fa90f1
  412d20:	fwait
  412d21:	xchg   DWORD PTR [eax-0x19],ebp
  412d24:	adc    edi,eax
  412d26:	cmc    
  412d27:	xor    al,0xf
  412d29:	mov    bl,0xcd
  412d2b:	jecxz  0x412d57
  412d2d:	hlt    
  412d2e:	jle    0x412cc6
  412d30:	fld    QWORD PTR [esi]
  412d32:	jno    0x412cfe
  412d34:	or     ecx,DWORD PTR [edx]
  412d36:	lea    eax,[ebp+0x15]
  412d39:	adc    ah,BYTE PTR [ecx]
  412d3b:	retf   0xfd4d
  412d3e:	icebp  
  412d3f:	and    eax,0xb1f4502c
  412d44:	sub    dh,0x46
  412d47:	fimul  WORD PTR [edx+ebx*8]
  412d4a:	ja     0x412d75
  412d4c:	addr16 cmc 
  412d4e:	add    cl,al
  412d50:	mov    bl,0x61
  412d52:	dec    eax
  412d53:	sbb    DWORD PTR [edx],0xffffffbc
  412d56:	pop    esp
  412d57:	imul   ebx,DWORD PTR [eax+eax*4-0x5a99059e],0xd
  412d5f:	push   esp
  412d60:	sub    esi,DWORD PTR [ebx-0x37a3f2ff]
  412d66:	or     eax,0x74d2f8f9
  412d6b:	xchg   ebp,eax
  412d6c:	inc    edi
  412d6d:	idiv   BYTE PTR [esi+0x51]
  412d70:	push   esi
  412d71:	popa   
  412d72:	imul   DWORD PTR ds:0x53a1d722
  412d78:	mov    BYTE PTR [ebx+edi*2],dh
  412d7b:	ret    
  412d7c:	outs   dx,BYTE PTR ds:[esi]
  412d7d:	add    DWORD PTR [edx-0x298a69b9],eax
  412d83:	stos   BYTE PTR es:[edi],al
  412d84:	adc    DWORD PTR [ebp+0x76],eax
  412d87:	jne    0x412d4a
  412d89:	add    esp,DWORD PTR [ebx-0xd]
  412d8c:	xor    DWORD PTR [edx-0x56df2644],ebp
  412d92:	repnz mov eax,ds:0x7a3ea23d
  412d98:	dec    ecx
  412d99:	out    dx,eax
  412d9a:	mov    dh,0xe1
  412d9c:	inc    ebx
  412d9d:	jne    0x412da5
  412d9f:	mov    esp,0x185bb9df
  412da4:	sub    eax,DWORD PTR [ebx+0x3254ec6d]
  412daa:	shl    ch,1
  412dac:	sbb    eax,0x261e9a8a
  412db1:	int3   
  412db2:	pop    edx
  412db3:	aaa    
  412db4:	in     al,0x86
  412db6:	rcl    DWORD PTR [edi-0x75735aa2],0x33
  412dbd:	mov    eax,0xb9920b02
  412dc2:	test   eax,0x97123769
  412dc7:	test   BYTE PTR [esi+eiz*2+0x40],bl
  412dcb:	cli    
  412dcc:	scas   eax,DWORD PTR es:[edi]
  412dcd:	rcr    BYTE PTR [ebp-0x47],1
  412dd0:	sbb    DWORD PTR [ebx-0x71],eax
  412dd3:	ret    
  412dd4:	push   esp
  412dd5:	or     DWORD PTR [edi],ebx
  412dd7:	iret   
  412dd8:	int    0xe0
  412dda:	xchg   esp,eax
  412ddb:	mov    bl,0x3a
  412ddd:	enter  0x919,0x9b
  412de1:	addr16 push es
  412de3:	mov    cs,eax
  412de5:	in     al,dx
  412de6:	frstor [esi]
  412de8:	pop    ebp
  412de9:	fstp   DWORD PTR [esi]
  412deb:	jmp    0x412e1f
  412ded:	ret    
  412dee:	push   esp
  412def:	test   eax,0x13080dae
  412df4:	cli    
  412df5:	fcomp  QWORD PTR [eax]
  412df7:	imul   ebx,DWORD PTR [ebx-0x70e2b7d5],0x7ebce80d
  412e01:	push   edi
  412e02:	jbe    0x412e6b
  412e04:	cmp    ah,BYTE PTR [edi]
  412e06:	dec    eax
  412e07:	js     0x412e4b
  412e09:	ins    BYTE PTR es:[edi],dx
  412e0a:	dec    esi
  412e0b:	adc    ah,BYTE PTR [ebx-0x4055b051]
  412e11:	add    al,0x83
  412e13:	retf   
  412e14:	ds pop eax
  412e16:	pushf  
  412e17:	xchg   ebp,eax
  412e18:	and    edx,esp
  412e1a:	shl    DWORD PTR [eax-0x4c],cl
  412e1d:	scas   eax,DWORD PTR es:[edi]
  412e1e:	bound  edx,QWORD PTR [esi]
  412e20:	cli    
  412e21:	mov    al,ds:0x7ec0bfc6
  412e26:	xchg   bh,bl
  412e28:	fidivr DWORD PTR [ecx]
  412e2a:	push   edx
  412e2b:	jge    0x412e62
  412e2d:	rol    BYTE PTR [ecx+0x19c57007],cl
  412e33:	ret    0x3c24
  412e36:	dec    ecx
  412e37:	adc    eax,0x8cc3f19
  412e3c:	jnp    0x412e09
  412e3e:	sub    DWORD PTR [esi+edi*4-0x3261a7d6],ebx
  412e45:	sbb    al,0x1b
  412e47:	xchg   ebp,eax
  412e48:	add    eax,0xcceb2c0c
  412e4d:	pop    edx
  412e4e:	inc    esi
  412e4f:	adc    esi,DWORD PTR fs:[eax+0x3f74f995]
  412e56:	sbb    al,0xe2
  412e58:	xchg   DWORD PTR [ebx+0x7f],ebx
  412e5b:	arpl   ax,bp
  412e5d:	sub    al,0x0
  412e5f:	in     eax,dx
  412e60:	call   0x7744e826
  412e65:	xchg   ebp,eax
  412e66:	fnstcw WORD PTR [esi-0x3c]
  412e69:	enter  0x580a,0x9
  412e6d:	rol    DWORD PTR [eax-0x3d],cl
  412e70:	lds    edx,FWORD PTR [ecx-0x7a]
  412e73:	scas   eax,DWORD PTR es:[edi]
  412e74:	add    DWORD PTR [edx],ecx
  412e76:	sbb    DWORD PTR [ebx+edx*1],ebx
  412e79:	out    dx,eax
  412e7a:	push   esi
  412e7b:	bnd jo 0x412ec1
  412e7e:	jp     0x412e4e
  412e80:	cmp    eax,0x9f15264a
  412e85:	add    edi,ebp
  412e87:	pop    esp
  412e88:	adc    al,0x4d
  412e8a:	hlt    
  412e8b:	dec    BYTE PTR fs:[edi+0x41]
  412e8f:	(bad)  
  412e90:	out    0x7c,al
  412e92:	dec    esi
  412e93:	in     eax,dx
  412e94:	adc    eax,DWORD PTR [edi-0x5e1daae]
  412e9a:	addr16 into 
  412e9c:	mov    cl,0xa2
  412e9e:	mov    eax,ds:0xfb57d75e
  412ea3:	fisttp WORD PTR [ecx]
  412ea5:	sti    
  412ea6:	ins    DWORD PTR es:[edi],dx
  412ea7:	pushf  
  412ea8:	cmp    bl,BYTE PTR [edx]
  412eaa:	jp     0x412e8c
  412eac:	ja     0x412ed7
  412eae:	js     0x412eff
  412eb0:	inc    edx
  412eb1:	xor    al,0xa0
  412eb3:	sub    eax,0x24e6768a
  412eb8:	inc    esi
  412eb9:	add    al,0xcb
  412ebb:	xchg   DWORD PTR [eax],edi
  412ebd:	mov    edi,0x5cf9f68a
  412ec2:	push   ebp
  412ec3:	cmp    BYTE PTR [edi+0x22bf2485],dl
  412ec9:	pop    ebx
  412eca:	pop    ds
  412ecb:	fld    DWORD PTR [ebp+0xfe10097]
  412ed1:	jnp    0x412ef8
  412ed3:	(bad)  
  412ed4:	outs   dx,BYTE PTR ds:[esi]
  412ed5:	push   ds
  412ed6:	add    BYTE PTR [ebx+eax*4],ah
  412ed9:	mov    es,WORD PTR [eax+0x6d7631ca]
  412edf:	jae    0x412f28
  412ee1:	(bad)
  412ee5:	jge    0x412e8d
  412ee7:	rcr    bh,0xa1
  412eea:	div    BYTE PTR [ecx+0x47]
  412eed:	jmp    0xf96d:0x7ee1661e
  412ef4:	ins    DWORD PTR es:[edi],dx
  412ef5:	les    eax,FWORD PTR [eax]
  412ef7:	in     al,0x82
  412ef9:	(bad)  
  412efa:	(bad)
  412efe:	sbb    eax,0x3714ff47
  412f03:	pop    ebp
  412f04:	stos   DWORD PTR es:[edi],eax
  412f05:	push   eax
  412f06:	add    ch,bh
  412f08:	lea    ecx,[ecx]
  412f0a:	jmp    0x412eec
  412f0c:	clc    
  412f0d:	not    BYTE PTR ds:0xf3245dfc
  412f13:	push   0x56
  412f15:	(bad)  
  412f16:	ficomp DWORD PTR [edi+0x49]
  412f19:	pop    edx
  412f1a:	in     al,0xea
  412f1c:	lds    esp,FWORD PTR [ebp-0x7a5b4486]
  412f22:	repnz fiadd WORD PTR [edx+0x3929411]
  412f29:	xchg   edi,eax
  412f2a:	jmp    0xfe130d15
  412f2f:	pop    es
  412f30:	pop    ds
  412f31:	push   DWORD PTR [edx+ebx*1]
  412f34:	and    edi,DWORD PTR [ebx]
  412f36:	xchg   ebx,eax
  412f37:	cdq    
  412f38:	jbe    0x412ec0
  412f3a:	cmp    al,0x52
  412f3c:	inc    edi
  412f3d:	xor    dl,0x2a
  412f40:	in     al,0x2c
  412f42:	add    al,0x14
  412f44:	jle    0x412ed1
  412f46:	out    0x7,al
  412f48:	test   eax,esp
  412f4a:	lock sar BYTE PTR ds:0x9220cf65,cl
  412f51:	mov    al,0xb2
  412f53:	lea    edi,[edi]
  412f55:	icebp  
  412f56:	pop    esi
  412f57:	sub    DWORD PTR [di-0xc],ebp
  412f5b:	cmp    eax,0x5636c948
  412f60:	mov    ah,0xa5
  412f62:	outs   dx,DWORD PTR ds:[esi]
  412f63:	xlat   BYTE PTR ds:[ebx]
  412f64:	mov    bh,0x11
  412f66:	test   BYTE PTR [edx],ch
  412f68:	add    al,0x30
  412f6a:	int    0x58
  412f6c:	(bad)  
  412f6e:	repnz shl DWORD PTR [ebp+0x2e],1
  412f72:	xchg   esp,eax
  412f73:	push   0xffffffca
  412f75:	or     al,0x42
  412f77:	mov    bl,0xcf
  412f79:	aam    0x9c
  412f7b:	fidiv  WORD PTR [esp+ebx*4]
  412f7e:	sub    eax,0x8c422462
  412f83:	fsub   DWORD PTR [ebx-0x47]
  412f86:	fdivr  st(1),st
  412f88:	in     eax,0x33
  412f8a:	mov    BYTE PTR [esi+0x5f],al
  412f8d:	stc    
  412f8e:	pop    ebx
  412f8f:	xchg   edi,eax
  412f90:	(bad)  
  412f91:	push   ebx
  412f92:	into   
  412f93:	cmp    eax,0x379e0523
  412f98:	cwde   
  412f99:	xchg   ecx,eax
  412f9a:	mov    ah,0x55
  412f9c:	hlt    
  412f9d:	adc    ecx,DWORD PTR [edi-0x5e]
  412fa0:	sbb    eax,0xc1924f29
  412fa5:	xchg   ebx,eax
  412fa6:	mov    edi,0x732b2290
  412fab:	into   
  412fac:	fwait
  412fad:	mov    ebp,0xd73c63c6
  412fb2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412fb3:	sbb    al,BYTE PTR [eax+0x40373ac1]
  412fb9:	lods   eax,DWORD PTR ds:[esi]
  412fba:	repnz sbb eax,DWORD PTR [ecx]
  412fbd:	pop    ss
  412fbe:	call   0xc89df1e6
  412fc3:	inc    ebx
  412fc4:	sub    al,dl
  412fc6:	sbb    eax,DWORD PTR [edx+0x778a96a5]
  412fcc:	xor    al,0x1c
  412fce:	mov    eax,0x49d7d194
  412fd3:	pop    es
  412fd4:	xchg   ecx,eax
  412fd5:	scas   eax,DWORD PTR es:[edi]
  412fd6:	push   edi
  412fd7:	pusha  
  412fd8:	into   
  412fd9:	test   DWORD PTR [ecx+0x4f37fc62],esi
  412fdf:	lock mov dl,ch
  412fe2:	mov    bh,BYTE PTR [edi]
  412fe4:	(bad)  
  412fe5:	(bad)  
  412fe6:	popa   
  412fe7:	pop    ecx
  412fe8:	popf   
  412fe9:	gs jb  0x412fbe
  412fec:	jl     0x412faa
  412fee:	push   eax
  412fef:	xchg   ecx,eax
  412ff0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412ff1:	sahf   
  412ff2:	xor    dh,BYTE PTR [eax]
  412ff4:	xor    BYTE PTR [esi],cl
  412ff6:	pop    ds
  412ff7:	stos   DWORD PTR es:[edi],eax
  412ff8:	cmp    ch,BYTE PTR [edx-0x33]
  412ffb:	pop    edx
  412ffc:	adc    BYTE PTR [edx],bh
  412ffe:	mov    ebx,0x17cc5d3
  413003:	sub    DWORD PTR [edi],0x8c7a3177
  413009:	xor    bh,BYTE PTR [eax+0x55]
  41300c:	xor    eax,0xdba3dbf
  413011:	cli    
  413012:	mov    al,ds:0xa02db61d
  413017:	in     eax,0x1f
  413019:	sar    DWORD PTR [esi+0x7],0x8d
  41301d:	stc    
  41301e:	mov    dl,0x3b
  413020:	pop    esi
  413021:	lea    edx,[edx*8+0x26813308]
  413028:	nop
  413029:	cmp    al,0x6e
  41302b:	xlat   BYTE PTR ds:[ebx]
  41302c:	or     DWORD PTR [eax-0x41b264e0],ebx
  413032:	cs cwde 
  413034:	mov    DWORD PTR [eax+0x6d],edx
  413037:	jae    0x4130b6
  413039:	jle    0x4130b8
  41303b:	cmp    BYTE PTR [edi],dl
  41303d:	push   ecx
  41303e:	cld    
  41303f:	xchg   esi,edi
  413041:	ret    
  413042:	in     eax,0x47
  413044:	repnz aaa 
  413046:	rol    DWORD PTR ds:0xb4a81ede,1
  41304c:	jmp    0x413068
  41304e:	mov    eax,0x1d00da2c
  413053:	jmp    0x413064
  413055:	int    0x7a
  413057:	fxch   st(7)
  413059:	in     eax,dx
  41305a:	mov    ds:0x3bb2f0b3,eax
  41305f:	repz inc ebx
  413061:	cmp    esp,ecx
  413063:	test   eax,0xd1b79d83
  413068:	adc    cl,BYTE PTR [ebx-0x10]
  41306b:	cmp    BYTE PTR [edi],0xe6
  41306e:	es (bad) 
  413070:	scas   eax,DWORD PTR es:[edi]
  413071:	and    ecx,esp
  413073:	sar    DWORD PTR [ebp-0x36],cl
  413076:	ja     0x41300c
  413078:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413079:	ret    
  41307a:	(bad)  
  41307b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41307c:	jle    0x4130f1
  41307e:	cli    
  41307f:	fiadd  DWORD PTR [ebx-0x1d]
  413082:	lods   eax,DWORD PTR fs:[esi]
  413084:	push   esp
  413085:	stc    
  413086:	pop    eax
  413087:	jne    0x41307e
  413089:	test   eax,0x8d1772f6
  41308e:	retf   
  41308f:	dec    edx
  413090:	add    cl,BYTE PTR [esi+0x5f1a121]
  413096:	and    al,0x7a
  413098:	mov    ebp,0xee0fb4e3
  41309d:	clc    
  41309e:	mov    eax,ds:0xdf121bc9
  4130a3:	mov    ?,WORD PTR [edi]
  4130a5:	or     BYTE PTR [edi],0xbd
  4130a8:	adc    BYTE PTR [edx],dl
  4130aa:	je     0x413073
  4130ac:	jns    0x4130d5
  4130ae:	sub    BYTE PTR [ecx+0x269e1199],ah
  4130b4:	xchg   esp,eax
  4130b5:	push   ebx
  4130b6:	mov    esp,0xc3a94aa4
  4130bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4130bc:	or     edx,DWORD PTR [esi+0x3b52ebe3]
  4130c2:	(bad)  
  4130c3:	(bad)  
  4130c4:	xor    BYTE PTR [ecx-0x9],bh
  4130c7:	iret   
  4130c8:	sub    al,0x49
  4130ca:	adc    eax,0xcd2b980b
  4130cf:	push   cs
  4130d0:	xor    al,0x9f
  4130d2:	xor    al,0xd2
  4130d4:	mov    ah,0x43
  4130d6:	dec    esp
  4130d7:	or     eax,0xa50c316f
  4130dc:	adc    DWORD PTR [eax+0x2e],edx
  4130df:	dec    edi
  4130e0:	jge    0x41310b
  4130e2:	mov    esp,0xb78a11f3
  4130e7:	aad    0x8e
  4130e9:	fwait
  4130ea:	(bad)  
  4130eb:	push   ss
  4130ec:	pop    ss
  4130ed:	pop    esi
  4130ee:	es out 0xa7,eax
  4130f1:	mov    eax,ds:0x41e891c9
  4130f6:	and    eax,0x713ed1a8
  4130fb:	xchg   ebp,eax
  4130fc:	mov    ecx,0xb363d70e
  413101:	inc    ebx
  413102:	and    DWORD PTR [edx+0x27b15b9],edx
  413108:	sub    bl,BYTE PTR [ebx]
  41310a:	dec    edi
  41310b:	rol    DWORD PTR [esi+edx*2],1
  41310e:	loop   0x41314d
  413110:	hlt    
  413111:	or     al,0xd0
  413113:	mov    edx,0x7cf06bc2
  413118:	iret   
  413119:	shr    esp,0x26
  41311c:	scas   al,BYTE PTR es:[edi]
  41311d:	pop    ebx
  41311e:	mov    eax,ds:0x93f48d55
  413123:	inc    ebx
  413124:	and    al,0x8a
  413126:	fist   DWORD PTR [eax]
  413128:	mov    cl,0x20
  41312a:	and    al,0x8e
  41312c:	fdiv   DWORD PTR [edx+0x7ceb73d3]
  413132:	pop    ss
  413133:	dec    ebx
  413134:	leave  
  413135:	push   0xffffff9c
  413137:	rcl    esi,1
  413139:	xchg   esp,eax
  41313a:	fistp  WORD PTR [edx+0x793670e4]
  413140:	mov    dh,0xfb
  413142:	call   0xb233:0x2c16ae2f
  413149:	sbb    DWORD PTR [esi],edx
  41314b:	scas   al,BYTE PTR es:[edi]
  41314c:	imul   eax,DWORD PTR [edi],0x74707093
  413152:	iret   
  413153:	inc    edi
  413154:	add    ebx,ebp
  413156:	retf   
  413157:	xor    dh,BYTE PTR [esi+0x1b]
  41315a:	pop    es
  41315b:	sub    DWORD PTR gs:[esi-0x1e36ade8],ecx
  413162:	into   
  413163:	rcl    BYTE PTR [esi],0x32
  413166:	add    dl,BYTE PTR [edx+0x73]
  413169:	test   edi,edi
  41316b:	jg     0x4131ab
  41316d:	mov    esp,0x8b5ad286
  413172:	enter  0xc43e,0x8d
  413176:	adc    dh,al
  413178:	pop    es
  413179:	push   ecx
  41317a:	jae    0x413166
  41317c:	adc    bl,al
  41317e:	cmp    BYTE PTR [eax+edi*8],ah
  413181:	xlat   BYTE PTR ds:[ebx]
  413182:	xor    bl,BYTE PTR [eax-0x69]
  413185:	push   0xa51e76c6
  41318a:	scas   al,BYTE PTR es:[edi]
  41318b:	dec    esp
  41318c:	or     eax,0x8aa958c3
  413191:	dec    ebp
  413192:	test   eax,0x870f594a
  413197:	lods   eax,DWORD PTR ds:[esi]
  413198:	dec    ebp
  413199:	sub    BYTE PTR [eax+0x59662f6d],cl
  41319f:	xor    al,0xa1
  4131a1:	cmp    ah,bl
  4131a3:	aas    
  4131a4:	daa    
  4131a5:	sbb    al,bh
  4131a7:	loope  0x4131fd
  4131a9:	aaa    
  4131aa:	cdq    
  4131ab:	imul   edi,DWORD PTR ss:[eax],0xffffffdd
  4131af:	pushf  
  4131b0:	dec    edi
  4131b1:	cmp    DWORD PTR [edx-0x36f5f3],ebp
  4131b7:	mov    bh,0x54
  4131b9:	inc    ebx
  4131ba:	ret    0xd9ef
  4131bd:	adc    BYTE PTR [esi-0x35b7b7d9],0x3a
  4131c4:	lods   eax,DWORD PTR ds:[esi]
  4131c5:	dec    ebp
  4131c6:	out    0xf6,eax
  4131c8:	cld    
  4131c9:	adc    bl,BYTE PTR [edx+0x18]
  4131cc:	sahf   
  4131cd:	cmp    al,0x6a
  4131cf:	ins    BYTE PTR es:[edi],dx
  4131d0:	(bad)  
  4131d1:	sbb    eax,0xaa3d8f69
  4131d6:	test   eax,0x3aa42589
  4131db:	ss ins DWORD PTR es:[edi],dx
  4131dd:	mov    esp,0xd64fbffa
  4131e2:	call   0x61e736ee
  4131e7:	push   ebp
  4131e8:	mov    esi,0xd2e6aec
  4131ed:	arpl   WORD PTR [esi],bx
  4131ef:	out    dx,al
  4131f0:	or     dh,BYTE PTR [ecx]
  4131f2:	add    BYTE PTR [edx-0x540c5471],0xf2
  4131f9:	adc    bh,BYTE PTR [ecx-0x441305e6]
  4131ff:	xchg   ebp,eax
  413200:	push   ebx
  413201:	ss in  al,0x99
  413204:	lahf   
  413205:	mov    esi,0xe4ff6c1c
  41320a:	adc    al,BYTE PTR [ebx-0x58]
  41320d:	dec    esp
  41320e:	xor    DWORD PTR [edx+esi*2+0x60d51417],eax
  413215:	adc    BYTE PTR [ecx+0x8],al
  413218:	rcr    DWORD PTR [edi-0x5857f282],cl
  41321e:	add    BYTE PTR [esi+0x4b106dc2],cl
  413224:	adc    DWORD PTR [ebx-0x11bf4027],edx
  41322a:	sbb    DWORD PTR [ecx],0xa7fada9e
  413230:	jl     0x4132a3
  413232:	clc    
  413233:	mov    ah,0xcd
  413235:	ds adc ecx,esp
  413238:	pop    esp
  413239:	or     esp,DWORD PTR [edi]
  41323b:	or     esi,DWORD PTR [ebp+0x2c0a0ae]
  413241:	inc    esi
  413242:	sub    al,0xbf
  413244:	pop    ds
  413245:	push   ds
  413246:	pop    esp
  413247:	cmc    
  413248:	dec    edi
  413249:	hlt    
  41324a:	jp     0x413211
  41324c:	iret   
  41324d:	fcmovnbe st,st(4)
  41324f:	jne    0x4132cb
  413251:	pop    es
  413252:	(bad)  
  413253:	adc    al,0x28
  413255:	mov    cl,0xeb
  413257:	xchg   edi,eax
  413258:	xchg   ecx,eax
  413259:	push   edx
  41325a:	push   ds
  41325b:	sub    cl,BYTE PTR [ebx]
  41325d:	and    DWORD PTR [eax],ebp
  41325f:	dec    ecx
  413260:	in     eax,0xae
  413262:	dec    edx
  413263:	std    
  413264:	ret    
  413265:	pushf  
  413266:	push   eax
  413267:	in     eax,dx
  413268:	aam    0xcf
  41326a:	repnz push 0xfffffff6
  41326d:	hlt    
  41326e:	push   ecx
  41326f:	repnz push ebp
  413271:	pop    es
  413272:	repnz adc DWORD PTR es:[edx+ebp*2+0x69840e3],ecx
  41327b:	jg     0x41320c
  41327d:	push   eax
  41327e:	jae    0x41329c
  413280:	add    BYTE PTR [edi+0x42],0x24
  413284:	inc    ecx
  413286:	out    0xed,al
  413288:	cmp    eax,0xa0a7270b
  41328d:	imul   ecx,esi,0xaf615c13
  413293:	add    DWORD PTR [ebx],esi
  413295:	fcom   QWORD PTR [eax+0x20]
  413298:	add    BYTE PTR [ebp+0x31],0xc0
  41329c:	loopne 0x4132eb
  41329e:	xchg   ecx,eax
  41329f:	in     al,dx
  4132a0:	mov    ds:0xdf5f9f4b,eax
  4132a5:	in     eax,dx
  4132a6:	retf   
  4132a7:	in     eax,dx
  4132a8:	stc    
  4132a9:	mov    esi,0x5cbe37b9
  4132ae:	(bad)  
  4132af:	gs mov al,0xc0
  4132b2:	mov    ecx,0x83194868
  4132b7:	ret    
  4132b8:	xchg   ecx,eax
  4132b9:	cmpxchg BYTE PTR [edx+0x5f],ch
  4132bd:	lea    ecx,[edx]
  4132bf:	cmp    eax,0x596d1559
  4132c4:	shl    BYTE PTR [ebx-0x4f],cl
  4132c7:	xchg   ebx,eax
  4132c8:	call   0xf4e7ea26
  4132cd:	ja     0x4132e1
  4132cf:	adc    al,0xf4
  4132d1:	jge    0x41330f
  4132d3:	dec    edx
  4132d4:	punpckldq mm0,DWORD PTR [eax]
  4132d7:	sti    
  4132d8:	mov    ds:0xe63effec,eax
  4132dd:	mov    cl,0x3c
  4132df:	sbb    eax,0xa5d7d78a
  4132e4:	or     DWORD PTR [eax+0x2f765c40],0x5e1df92e
  4132ee:	cmp    eax,0xe3261e34
  4132f3:	push   esp
  4132f4:	adc    eax,0xeca7934b
  4132f9:	(bad)  
  4132fa:	mov    ebx,0xc16c4812
  4132ff:	data16 repz mov al,0xa2
  413303:	mov    dl,0xea
  413305:	fs enter 0x3c52,0x8d
  41330a:	cmc    
  41330b:	fwait
  41330c:	sub    eax,0x508f4977
  413311:	and    al,0xac
  413313:	mov    eax,ds:0x24cb89a6
  413318:	iret   
  413319:	clc    
  41331a:	cmc    
  41331b:	(bad)  
  41331c:	pop    eax
  41331d:	and    al,0xfa
  41331f:	ror    BYTE PTR [eax],1
  413321:	pop    es
  413322:	sub    esi,DWORD PTR [edi+0x29]
  413325:	repnz push 0x27
  413328:	mov    bh,0x87
  41332a:	cs mov esi,0xcdeaaeab
  413330:	adc    al,0xb5
  413332:	enter  0xf97f,0x6f
  413336:	call   0x1a73:0x14e28503
  41333d:	add    DWORD PTR [ecx+0x4a],esp
  413340:	test   DWORD PTR [ebx],eax
  413342:	fcmovnb st,st(0)
  413344:	mov    ch,cl
  413346:	inc    edx
  413347:	mov    bh,0x88
  413349:	(bad)  
  41334a:	fwait
  41334b:	mov    ch,0xdc
  41334d:	jp     0x413309
  41334f:	pop    ecx
  413350:	inc    eax
  413351:	in     eax,0x67
  413353:	je     0x41333f
  413355:	int    0x16
  413357:	cmp    BYTE PTR [esi+0x79359500],dl
  41335d:	sub    bh,ch
  41335f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413360:	stos   DWORD PTR es:[edi],eax
  413361:	retf   0x8f96
  413364:	in     al,0x18
  413366:	sbb    dh,bl
  413368:	(bad)  
  413369:	dec    ebx
  41336a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41336b:	fiadd  WORD PTR [esi-0x62c983f6]
  413371:	sahf   
  413372:	jae    0x413335
  413374:	mov    es,ebx
  413376:	sbb    al,0xaa
  413378:	xchg   edi,eax
  413379:	mul    edi
  41337b:	scas   al,BYTE PTR es:[edi]
  41337c:	or     eax,0xb89b3496
  413381:	xlat   BYTE PTR ds:[ebx]
  413382:	jbe    0x413346
  413384:	xor    ebp,DWORD PTR [ebx]
  413386:	leave  
  413387:	sub    eax,0xebf171e5
  41338c:	mov    eax,0xe1beb978
  413391:	inc    esp
  413392:	pop    esi
  413393:	es mov bl,0xb1
  413396:	sub    ebp,DWORD PTR [edi*2-0x6a7146c7]
  41339d:	aad    0x64
  41339f:	mov    cl,0x3b
  4133a1:	retf   0x82c9
  4133a4:	in     al,0x82
  4133a6:	mov    DWORD PTR [ecx],esp
  4133a8:	(bad)  
  4133a9:	in     al,dx
  4133aa:	xchg   ecx,eax
  4133ab:	lods   eax,DWORD PTR ds:[esi]
  4133ac:	adc    DWORD PTR [edi+edi*1],edi
  4133af:	add    dl,BYTE PTR es:[ebp-0x5f2c44d5]
  4133b6:	adc    eax,0x562bfa12
  4133bb:	pushf  
  4133bc:	mov    esi,0x82403eae
  4133c1:	(bad)  
  4133c2:	stos   DWORD PTR es:[edi],eax
  4133c3:	add    eax,0x1671fa0f
  4133c8:	in     eax,0x58
  4133ca:	(bad)  
  4133cb:	add    ebx,DWORD PTR [eax+0x4f14ecc2]
  4133d1:	jns    0x413363
  4133d3:	xchg   ecx,eax
  4133d4:	fmul   QWORD PTR [eax+esi*2+0x79b4d44c]
  4133db:	mov    al,ds:0x890ea6b5
  4133e0:	(bad)  
  4133e1:	shl    cl,cl
  4133e3:	loope  0x4133c1
  4133e5:	xor    DWORD PTR [edi+ecx*2+0x79],eax
  4133e9:	push   eax
  4133ea:	(bad)  
  4133eb:	cli    
  4133ec:	sbb    BYTE PTR [edi+0x1a41cf57],dl
  4133f2:	lock ret 
  4133f4:	cmp    BYTE PTR ds:[ebx-0x1897ebd9],bh
  4133fb:	ret    0x35cf
  4133fe:	pop    es
  4133ff:	loop   0x4133a8
  413401:	das    
  413402:	loopne 0x41346c
  413404:	fadd   DWORD PTR [esi+0x25]
  413407:	dec    esi
  413408:	inc    ebp
  413409:	xor    eax,0x7f4328a4
  41340e:	mov    ebx,0x8af79277
  413413:	out    0x6,eax
  413415:	pop    esp
  413416:	aas    
  413417:	ds scas eax,DWORD PTR es:[edi]
  413419:	into   
  41341a:	callw  0x7f8f
  41341e:	jmp    0x4133e3
  413420:	jnp    0x41342d
  413422:	scas   al,BYTE PTR es:[edi]
  413423:	nop
  413424:	adc    DWORD PTR [ebx-0x552b6852],ecx
  41342a:	lods   al,BYTE PTR ds:[esi]
  41342b:	jecxz  0x41345f
  41342d:	out    0x43,eax
  41342f:	call   0x90c8f7ca
  413434:	pusha  
  413435:	dec    ecx
  413436:	pop    edi
  413438:	scas   eax,DWORD PTR es:[edi]
  413439:	push   0x38
  41343b:	loop   0x413438
  41343d:	mov    DWORD PTR [edx+0x431eb7e7],esp
  413443:	adc    ebp,DWORD PTR [ecx-0x67fed104]
  413449:	adc    dl,bl
  41344b:	nop
  41344c:	mov    ah,0x88
  41344e:	mov    ebp,0x1c5387a9
  413453:	xor    edx,DWORD PTR [ebp+0x7f]
  413456:	or     bl,BYTE PTR [ebx]
  413458:	mov    bh,0x83
  41345a:	jmp    0xe6e3:0xbf10b835
  413461:	xchg   ecx,eax
  413462:	xor    al,0x4f
  413464:	call   0xea9784aa
  413469:	mov    eax,0xf357e5de
  41346e:	mov    cl,0x27
  413470:	out    dx,eax
  413471:	pop    es
  413472:	lar    edi,WORD PTR [esi+eiz*4+0x73337660]
  41347a:	movups xmm7,XMMWORD PTR [edx]
  41347d:	xor    DWORD PTR [eax-0x4c130e51],ebx
  413483:	inc    edx
  413484:	loope  0x41346f
  413486:	adc    al,0x68
  413488:	push   0xffffffaf
  41348a:	pop    DWORD PTR [edx-0x1a]
  41348d:	call   0xfa21c59
  413492:	out    dx,eax
  413493:	cmp    al,bh
  413495:	dec    ebp
  413496:	sbb    ecx,DWORD PTR [ebp-0x46]
  413499:	mov    BYTE PTR [edx+0x31],bl
  41349c:	or     eax,0x1030cce0
  4134a1:	add    esp,DWORD PTR [edi+0x29]
  4134a4:	loopne 0x4134e9
  4134a6:	push   edx
  4134a7:	ficom  DWORD PTR [ecx-0x46]
  4134aa:	push   edx
  4134ab:	or     DWORD PTR [ecx],edi
  4134ad:	popf   
  4134ae:	adc    eax,0x5ae317aa
  4134b3:	fidivr DWORD PTR [esi-0x1c]
  4134b6:	jmp    0x4134e4
  4134b8:	mov    ebp,0x9894eeff
  4134bd:	es in  eax,dx
  4134bf:	gs test al,0x56
  4134c2:	outs   dx,DWORD PTR ds:[esi]
  4134c3:	fild   QWORD PTR [esi+0x618fb61c]
  4134c9:	xchg   ebp,eax
  4134ca:	out    0x40,al
  4134cc:	pop    ebx
  4134cd:	and    cl,BYTE PTR [esi+0x45c03c6c]
  4134d3:	add    ah,0x72
  4134d6:	jb     0x4134c4
  4134d8:	(bad)  
  4134d9:	sub    eax,0x662ec604
  4134de:	mov    eax,0x538edb26
  4134e3:	mov    es,edx
  4134e5:	and    esi,DWORD PTR [edx-0x36]
  4134e8:	push   ds
  4134e9:	jo     0x41347e
  4134eb:	lock stos DWORD PTR es:[edi],eax
  4134ed:	enter  0x3830,0x15
  4134f1:	jle    0x413552
  4134f3:	in     eax,dx
  4134f4:	(bad)  
  4134f5:	leave  
  4134f6:	clc    
  4134f7:	jo     0x413496
  4134f9:	xor    BYTE PTR [edi+0x7db9cffc],al
  4134ff:	sar    esi,0xf9
  413502:	pop    ecx
  413503:	iret   
  413504:	ins    DWORD PTR es:[edi],dx
  413505:	add    dl,bh
  413507:	stos   DWORD PTR es:[edi],eax
  413508:	adc    ch,bh
  41350a:	push   ds
  41350b:	sbb    DWORD PTR [ebx+0x22],esp
  41350e:	inc    ebx
  41350f:	xchg   esp,eax
  413510:	push   eax
  413511:	inc    ecx
  413512:	jne    0x4134e1
  413514:	lea    ecx,[ebp+ebp*2+0x25]
  413518:	mov    dl,0xc3
  41351a:	sub    bl,BYTE PTR [esi]
  41351c:	xlat   BYTE PTR ds:[ebx]
  41351d:	aaa    
  41351e:	pusha  
  41351f:	cs addr16 out dx,eax
  413522:	mov    ch,0xb2
  413524:	fimul  WORD PTR [ebp+0x3bfcc05]
  41352a:	imul   ebp,DWORD PTR [ebx-0x17f51d6b],0x9f9d2e18
  413534:	ficom  WORD PTR [edi]
  413536:	in     al,0x5e
  413538:	fidivr DWORD PTR [ebx+0x56ea5a0]
  41353e:	push   esi
  41353f:	xchg   ecx,eax
  413540:	scas   al,BYTE PTR es:[edi]
  413541:	mov    ds:0xef92f8cc,eax
  413546:	out    0xe2,al
  413548:	loope  0x41354a
  41354a:	sbb    DWORD PTR [edi+0x1e65cad3],0x1661c434
  413554:	push   ds
  413555:	ss lock retfw 0xdd52
  41355b:	pop    ebp
  41355c:	out    dx,eax
  41355d:	sbb    dh,BYTE PTR [eax-0x1f75e395]
  413563:	cmp    ah,BYTE PTR [eax-0x20]
  413566:	mov    al,0xbd
  413568:	xchg   DWORD PTR [edi-0x7256513a],esi
  41356e:	popf   
  41356f:	and    cl,bl
  413571:	int    0x83
  413573:	(bad)  
  413574:	mov    edx,0x1454bd98
  413579:	add    al,0xc4
  41357b:	and    eax,0x92342719
  413580:	rcr    DWORD PTR [ebx+0xe44912c],1
  413586:	fwait
  413587:	and    ebp,esi
  413589:	sbb    esi,edx
  41358b:	fmul   DWORD PTR [edx+0x2c]
  41358e:	or     eax,0x7ac2f580
  413593:	jbe    0x4135e7
  413595:	pop    es
  413596:	pop    eax
  413597:	shl    BYTE PTR [ebp-0x59bf1f74],1
  41359d:	push   es
  41359e:	and    eax,DWORD PTR [eax+0x4f3e292f]
  4135a4:	jmp    0xa181:0xb25e1b3d
  4135ab:	mov    ds:0x301f59e,al
  4135b0:	pop    edx
  4135b1:	xchg   edx,eax
  4135b2:	mov    BYTE PTR [ebx],bl
  4135b4:	inc    esi
  4135b5:	add    DWORD PTR [edi-0x1ba43d0e],ebx
  4135bb:	imul   BYTE PTR [edx+0x2bd4ea06]
  4135c1:	call   0x3e04f7f9
  4135c6:	cwde   
  4135c7:	jne    0x4135cb
  4135c9:	int3   
  4135ca:	pop    ebp
  4135cb:	int3   
  4135cc:	pop    ss
  4135cd:	repz pop ds
  4135cf:	out    0xb5,eax
  4135d1:	sbb    BYTE PTR [edx+0x3f],0x2d
  4135d5:	ret    
  4135d6:	or     al,0x1e
  4135d8:	and    DWORD PTR [edx-0x621496dd],eax
  4135de:	mov    ebp,0x713208e0
  4135e3:	or     eax,0x25ff7e99
  4135e8:	das    
  4135e9:	mov    esp,0xbad2a0b0
  4135ee:	dec    ebx
  4135ef:	xor    DWORD PTR [ecx+0xa514cb7],ebx
  4135f5:	dec    esi
  4135f6:	cmp    eax,0x6bdb5f49
  4135fb:	and    al,0x1b
  4135fd:	icebp  
  4135fe:	test   dh,dl
  413600:	inc    edx
  413601:	out    dx,eax
  413602:	lahf   
  413603:	adc    edx,DWORD PTR [edi+0x1bc0e13c]
  413609:	inc    ecx
  41360a:	ins    BYTE PTR es:[edi],dx
  41360b:	and    eax,0x4b23edf3
  413610:	push   esi
  413611:	push   ss
  413612:	sub    al,0xf8
  413614:	test   BYTE PTR [eax-0x69],cl
  413617:	std    
  413618:	dec    esi
  413619:	inc    eax
  41361a:	fimul  WORD PTR [eax-0x63691dbb]
  413620:	pushf  
  413621:	cli    
  413622:	push   ss
  413623:	(bad)  
  413624:	pop    esp
  413625:	out    0xf6,eax
  413627:	push   esi
  413628:	push   ebx
  413629:	dec    esp
  41362a:	mov    ah,0x44
  41362c:	and    eax,0xee97d824
  413631:	in     eax,0x78
  413633:	lock and DWORD PTR [esi+0x35ccc566],edi
  41363a:	rcl    BYTE PTR [ebp-0x2b],1
  41363d:	push   es
  41363e:	out    dx,al
  41363f:	shr    BYTE PTR [eax],cl
  413641:	aad    0x9
  413643:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413644:	mov    ds:0x448388a5,eax
  413649:	or     eax,0x23329b5f
  41364e:	test   DWORD PTR [eax-0x72c28c97],edi
  413654:	cdq    
  413655:	adc    dl,ch
  413657:	mov    dh,0x20
  413659:	xchg   esp,eax
  41365a:	sub    ebx,DWORD PTR [ebx]
  41365c:	leave  
  41365d:	xor    ah,al
  41365f:	mov    ch,0x10
  413661:	popf   
  413662:	lock mov cl,0xfa
  413665:	push   cs
  413666:	mov    eax,0x163da0d7
  41366b:	xchg   ebp,eax
  41366c:	xor    dl,BYTE PTR ds:0x27dc686f
  413672:	(bad)  
  413673:	adc    al,0x50
  413675:	(bad)  
  413676:	in     eax,dx
  413677:	pop    eax
  413678:	repnz mov bh,0x7c
  41367b:	jnp    0x4136df
  41367d:	outs   dx,BYTE PTR ds:[esi]
  41367e:	jno    0x4136ad
  413680:	fidivr DWORD PTR [ebx-0x28]
  413683:	mov    ds:0xc7e8043,al
  413688:	jl     0x41369c
  41368a:	mov    edi,0x38937385
  41368f:	mov    ds:0xa64b47e1,eax
  413694:	mov    ch,dl
  413696:	aad    0x19
  413698:	mov    BYTE PTR [esi-0x1e],bl
  41369b:	les    esi,FWORD PTR [ebx]
  41369d:	jnp    0x413694
  41369f:	nop
  4136a0:	jl     0x413700
  4136a2:	pop    ebp
  4136a3:	push   0x1a621bba
  4136a8:	pop    esi
  4136a9:	push   0x3f4c25bc
  4136ae:	jge    0x4136fd
  4136b0:	inc    esp
  4136b1:	pop    edx
  4136b2:	add    eax,0x4b750044
  4136b7:	adc    bl,BYTE PTR [esi]
  4136b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4136ba:	push   esp
  4136bb:	retf   0xfd1e
  4136be:	call   0xb23d50c3
  4136c3:	aam    0xda
  4136c5:	retf   0xc330
  4136c8:	es jge 0x4136d5
  4136cb:	outs   dx,DWORD PTR ds:[esi]
  4136cc:	sub    DWORD PTR [edi-0x6e],edi
  4136cf:	push   cs
  4136d0:	mov    ?,esi
  4136d2:	sbb    eax,ecx
  4136d4:	pushf  
  4136d5:	popa   
  4136d6:	or     al,0x74
  4136d8:	dec    ecx
  4136d9:	ins    BYTE PTR es:[edi],dx
  4136da:	sbb    eax,0xe15fe97e
  4136df:	ret    
  4136e0:	or     eax,DWORD PTR [ebp-0x4a]
  4136e3:	pop    ds
  4136e4:	in     eax,dx
  4136e5:	and    eax,0x264b7929
  4136ea:	cmp    eax,0x667419dc
  4136ef:	test   ch,ah
  4136f1:	xor    edi,esi
  4136f3:	pop    esp
  4136f4:	rol    ebp,0xf5
  4136f7:	stos   DWORD PTR es:[edi],eax
  4136f8:	loope  0x413761
  4136fa:	dec    esp
  4136fb:	mov    al,ds:0x3df559e4
  413700:	mov    BYTE PTR [edi+0x24cfc617],dh
  413706:	jo     0x4136f3
  413708:	sub    edi,DWORD PTR [eax-0x51c0cb3a]
  41370e:	xchg   ebp,eax
  41370f:	je     0x4136d6
  413711:	push   esp
  413712:	mov    BYTE PTR [eax],bh
  413714:	in     al,0x6e
  413716:	and    bl,BYTE PTR [ebp+0x7f6f87f8]
  41371c:	imul   ebx,DWORD PTR [ebx],0x7b0eb4c3
  413722:	cmp    ebp,DWORD PTR [edx-0x369010ee]
  413728:	mov    dl,0x2c
  41372a:	add    eax,0x65bf455a
  41372f:	lea    esp,[edi+0x21]
  413732:	popa   
  413733:	test   BYTE PTR [edi-0x7e],bl
  413736:	out    0x11,eax
  413738:	jp     0x4137b6
  41373a:	imul   esi,DWORD PTR cs:[esi],0x72
  41373e:	das    
  41373f:	das    
  413740:	mov    bh,0x89
  413742:	pushf  
  413743:	adc    BYTE PTR [ebp-0x1cbe3a00],dh
  413749:	repnz sbb DWORD PTR ds:0xc3d775a4,edx
  413750:	(bad)  
  413751:	in     al,dx
  413752:	xchg   ebp,eax
  413753:	addr16 hlt 
  413755:	xchg   ebp,eax
  413756:	add    dl,BYTE PTR [eax]
  413758:	xor    BYTE PTR [edi-0x35f55f4a],bh
  41375e:	repz scas al,BYTE PTR es:[edi]
  413760:	in     eax,dx
  413761:	sbb    BYTE PTR [ebx-0x2a709aa],0xa5
  413768:	sbb    DWORD PTR [eax],ecx
  41376a:	aam    0x3
  41376c:	cmp    al,0xdb
  41376e:	sub    cl,BYTE PTR [ecx-0x30]
  413771:	loopne 0x413706
  413773:	shl    BYTE PTR [edx],1
  413775:	fstp   TBYTE PTR [edi-0x6d0c60af]
  41377b:	sbb    eax,0xcab53f77
  413780:	xchg   edi,eax
  413781:	and    ebx,DWORD PTR ss:[eax+0x73726952]
  413788:	out    dx,eax
  413789:	jne    0x41371b
  41378b:	lods   al,BYTE PTR ds:[esi]
  41378c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41378d:	popa   
  41378e:	sub    ah,bh
  413790:	jno    0x4137a8
  413792:	aas    
  413793:	(bad)  
  413794:	xchg   ebx,eax
  413795:	push   edx
  413796:	pushf  
  413797:	pusha  
  413798:	shl    DWORD PTR [ebp+0x6c1c9d29],0xa1
  41379f:	dec    ebp
  4137a0:	bound  ebp,QWORD PTR [ebx]
  4137a2:	ret    
  4137a3:	(bad)  
  4137a4:	addr16 cmp al,0xb
  4137a7:	sbb    BYTE PTR [esi+ebp*2],ah
  4137aa:	pop    ds
  4137ab:	lds    ebx,FWORD PTR [ebp-0xe944021]
  4137b1:	jae    0x413738
  4137b3:	mov    cl,0x99
  4137b5:	popa   
  4137b6:	(bad)  
  4137b8:	aaa    
  4137b9:	(bad)  
  4137ba:	pop    edx
  4137bb:	push   ebx
  4137bc:	add    al,0x5c
  4137be:	mov    bl,0x80
  4137c0:	(bad)  
  4137c1:	aam    0xaa
  4137c3:	out    dx,al
  4137c4:	dec    ebx
  4137c5:	stos   BYTE PTR es:[edi],al
  4137c6:	daa    
  4137c7:	outs   dx,BYTE PTR ds:[esi]
  4137c8:	cmp    BYTE PTR [edx+edx*8+0x39b9eaf4],ah
  4137cf:	inc    ecx
  4137d0:	mov    ebp,0x9c13451e
  4137d5:	mov    edi,0x2960d17
  4137da:	pop    ds
  4137db:	fmul   st,st(6)
  4137dd:	in     al,0xff
  4137df:	leave  
  4137e0:	div    BYTE PTR [ebx+0x32]
  4137e3:	dec    ecx
  4137e4:	mov    BYTE PTR [edi+0x386b14f5],bl
  4137ea:	(bad)  
  4137eb:	jo     0x413794
  4137ed:	rcl    DWORD PTR [ecx+ecx*4+0x778f89cc],1
  4137f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4137f5:	bound  eax,QWORD PTR [ecx+0xe]
  4137f8:	dec    esp
  4137f9:	mov    bl,0xbd
  4137fb:	in     eax,0x39
  4137fd:	cmp    BYTE PTR [esi+edx*2],bh
  413800:	jmp    0xd4a5:0xaa30ee8c
  413807:	es cmc 
  413809:	leave  
  41380a:	mov    dh,0x34
  41380c:	and    BYTE PTR ds:0xdf0c6764,cl
  413812:	into   
  413813:	pop    ebx
  413814:	lods   eax,DWORD PTR ds:[esi]
  413815:	jmp    0xde6f013a
  41381a:	jns    0x41385c
  41381c:	xor    cl,BYTE PTR [ebx]
  41381e:	add    eax,0x1aa48808
  413823:	mov    DWORD PTR [ebx+0x30],edx
  413826:	pop    edx
  413827:	mov    ds:0x4622ee04,eax
  41382c:	int    0xb2
  41382e:	stc    
  41382f:	jnp    0x4137d3
  413831:	xchg   esp,eax
  413832:	fwait
  413833:	mov    al,0x91
  413835:	fld    DWORD PTR [eax]
  413837:	sub    BYTE PTR [eax-0x1cfdbc22],ch
  41383d:	add    ecx,DWORD PTR [ebp+ebp*1-0x4ba8d448]
  413844:	jp     0x413848
  413846:	pop    ds
  413847:	test   DWORD PTR [eax],ecx
  413849:	jb     0x413828
  41384b:	repz mov al,ds:0xa8c59dfd
  413851:	sbb    ebx,ebx
  413853:	pop    es
  413854:	pusha  
  413855:	imul   ebx,DWORD PTR [ecx-0x41],0x7a563a94
  41385c:	and    eax,0xb656a3b0
  413861:	mov    dh,0x9e
  413863:	push   ebx
  413864:	cmp    BYTE PTR [ebp-0x2e2bfa06],dh
  41386a:	xor    al,0x5a
  41386c:	aas    
  41386d:	xchg   esi,eax
  41386e:	daa    
  41386f:	loop   0x41382a
  413871:	fnstenv [esi+0x817cedc]
  413877:	cmp    edi,DWORD PTR [edx]
  413879:	mov    ch,0x63
  41387b:	in     al,dx
  41387c:	xor    eax,0x31813366
  413881:	cmc    
  413882:	mov    ebx,0x98071d96
  413887:	or     al,0x24
  413889:	mov    eax,ds:0x8a3af3f7
  41388e:	sbb    ebp,0xd442413c
  413894:	mov    DWORD PTR [edx+0x53],0x28e052db
  41389b:	sbb    DWORD PTR [eax+0x5b921fe7],ebx
  4138a1:	adc    bh,BYTE PTR [eax-0x2006614b]
  4138a7:	mov    edx,ebx
  4138a9:	push   0xc2220efc
  4138ae:	inc    esp
  4138af:	jmp    0xf301:0x21789dc3
  4138b6:	xor    edx,DWORD PTR ds:0x77c90373
  4138bc:	rol    BYTE PTR [edi],0xd9
  4138bf:	push   ss
  4138c0:	add    dl,BYTE PTR [ecx]
  4138c2:	test   al,0x9e
  4138c4:	into   
  4138c5:	outs   dx,DWORD PTR ds:[esi]
  4138c6:	push   es
  4138c7:	lea    ebx,[ecx]
  4138c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4138ca:	xchg   ecx,eax
  4138cb:	cmp    DWORD PTR [edx+0x4d2dcdde],esi
  4138d1:	mov    ch,0xde
  4138d3:	xchg   esp,eax
  4138d4:	or     al,0x80
  4138d6:	(bad)  
  4138d7:	pop    ss
  4138d8:	adc    al,0xd2
  4138da:	fst    DWORD PTR [ecx+esi*2+0x13]
  4138de:	push   ebx
  4138df:	sub    cl,dh
  4138e1:	pop    ecx
  4138e2:	loope  0x41389e
  4138e4:	pop    edx
  4138e5:	mov    bl,0x36
  4138e7:	in     eax,dx
  4138e8:	(bad)
  4138eb:	cmp    DWORD PTR [edx+ebp*8+0x1b],edi
  4138ef:	push   ecx
  4138f0:	pop    eax
  4138f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4138f2:	xchg   esp,eax
  4138f3:	jge    0x4138f2
  4138f5:	push   eax
  4138f6:	xor    al,0xa8
  4138f8:	cmpxchg BYTE PTR [edx-0x4b75f8b8],ah
  4138ff:	loope  0x4138b8
  413901:	adc    al,0x5c
  413903:	cmp    esi,edx
  413905:	sub    eax,0x469e0cb
  41390a:	test   al,0xf7
  41390c:	std    
  41390d:	dec    ebx
  41390e:	(bad)
  413911:	sahf   
  413912:	aam    0x24
  413914:	sbb    DWORD PTR [edi-0x14],eax
  413917:	cmp    DWORD PTR [edi+0x76],ebx
  41391a:	xor    dl,BYTE PTR [edi-0x9]
  41391d:	sahf   
  41391e:	pop    eax
  41391f:	pushf  
  413920:	mov    eax,0x6c5598f1
  413925:	add    al,0xee
  413927:	push   ss
  413928:	and    al,0x4f
  41392a:	je     0x413930
  41392c:	add    cl,cl
  41392e:	shl    DWORD PTR [edi],0xd8
  413931:	ficom  DWORD PTR [ecx-0x4cb52f62]
  413937:	retf   0x3e4f
  41393a:	pop    es
  41393b:	adc    DWORD PTR [edx+0x142e0bea],ebx
  413941:	add    DWORD PTR [esi+0x50],0xffffffd6
  413945:	inc    ecx
  413946:	int    0xdc
  413948:	stc    
  413949:	stos   BYTE PTR es:[edi],al
  41394a:	push   eax
  41394b:	dec    ebp
  41394c:	imul   ebp,DWORD PTR [esi],0xffffffd1
  41394f:	dec    ebx
  413950:	xlat   BYTE PTR ds:[ebx]
  413951:	call   0xc183:0xefb5e9a0
  413958:	lock icebp 
  41395a:	dec    esi
  41395b:	loop   0x413994
  41395d:	ins    BYTE PTR es:[edi],dx
  41395e:	adc    al,0x5b
  413960:	cmp    al,0x77
  413962:	outs   dx,DWORD PTR ds:[esi]
  413963:	les    esi,FWORD PTR [ebx-0x5120fc0c]
  413969:	sahf   
  41396a:	push   ebx
  41396b:	sbb    esp,DWORD PTR [esi]
  41396d:	call   0x2251dc49
  413972:	test   dl,0xb3
  413975:	aas    
  413976:	data16 jne 0x4139d3
  413979:	gs push edx
  41397b:	add    BYTE PTR [esi],cl
  41397d:	aaa    
  41397e:	arpl   WORD PTR [ecx],bx
  413980:	sub    BYTE PTR ds:0x4ecc8555,bh
  413986:	inc    BYTE PTR gs:[edi-0x51]
  41398a:	shl    esp,1
  41398c:	jmp    0x413960
  41398e:	add    al,0xb7
  413990:	push   edi
  413991:	sbb    eax,edi
  413993:	ret    
  413994:	nop    ebp
  413997:	jle    0x413926
  413999:	dec    ebp
  41399a:	jle    0x41396d
  41399c:	cmp    al,0x5e
  41399e:	sbb    al,0x1a
  4139a0:	sub    edx,ebp
  4139a2:	push   edi
  4139a3:	jle    0x4139ec
  4139a5:	ret    
  4139a6:	push   0x5d
  4139a8:	bound  edi,QWORD PTR [ecx]
  4139aa:	jle    0x41393c
  4139ac:	outs   dx,DWORD PTR ds:[esi]
  4139ad:	outs   dx,BYTE PTR ds:[esi]
  4139ae:	add    dl,BYTE PTR [eax+0x35d44901]
  4139b4:	out    0xb2,eax
  4139b6:	and    al,0xa5
  4139b8:	fisub  DWORD PTR [ebx+edi*2+0x7235f6]
  4139bf:	lods   al,BYTE PTR ds:[esi]
  4139c0:	xchg   BYTE PTR [ebp+0x55],bl
  4139c3:	mov    bl,0x9f
  4139c5:	add    DWORD PTR [ebx+0x1e],eax
  4139c8:	sub    DWORD PTR ds:0x64ddec05,ecx
  4139ce:	and    al,0xeb
  4139d0:	fisttp WORD PTR [ebp-0x73]
  4139d3:	mov    ebx,0x3e800ece
  4139d8:	in     eax,dx
  4139d9:	inc    ebx
  4139da:	jo     0x41396b
  4139dc:	mov    edi,0x25769a4b
  4139e1:	sahf   
  4139e2:	jmp    0x5b9b:0xce3bb1e
  4139e9:	ins    BYTE PTR es:[edi],dx
  4139ea:	pop    ebx
  4139eb:	or     BYTE PTR [eax+0x13dbf66],ah
  4139f1:	mov    bl,0x15
  4139f3:	nop
  4139f4:	add    edi,ecx
  4139f6:	or     eax,0xbb40a390
  4139fb:	push   0xffffffe5
  4139fd:	out    dx,al
  4139fe:	and    DWORD PTR [edi],edx
  413a00:	(bad)  
  413a01:	int    0x6
  413a03:	in     al,0x25
  413a05:	cmp    BYTE PTR [esp+ebx*4],al
  413a08:	(bad)  
  413a0a:	mov    ebx,0x117429d8
  413a0f:	mov    ebp,DWORD PTR [edx+0x13]
  413a12:	adc    BYTE PTR [edi],al
  413a14:	xor    BYTE PTR [eax+0x5314227d],al
  413a1a:	sbb    al,0xb0
  413a1c:	rcl    BYTE PTR ds:0x8438adbc,1
  413a22:	inc    esi
  413a23:	sahf   
  413a24:	les    esi,FWORD PTR [esp+edi*1+0x3f]
  413a28:	lea    esp,[edx-0x2276ebf5]
  413a2e:	dec    esi
  413a2f:	ja     0x413a1b
  413a31:	test   DWORD PTR [edx-0x5d],ecx
  413a34:	adc    eax,0x81f2cde6
  413a39:	cli    
  413a3a:	je     0x4139c1
  413a3c:	in     al,dx
  413a3d:	(bad)  
  413a3e:	jg     0x413a1d
  413a40:	jl     0x413abc
  413a42:	mov    ch,0x8
  413a44:	mov    ds:0x3376c4cb,eax
  413a49:	push   ebp
  413a4a:	sbb    al,0xbe
  413a4c:	sub    esi,DWORD PTR [ecx]
  413a4e:	and    al,0xc0
  413a50:	(bad)  
  413a51:	scas   eax,DWORD PTR es:[edi]
  413a52:	jmp    0xedb1:0x77d35929
  413a59:	inc    esp
  413a5a:	lds    esi,FWORD PTR [eax+0x2d8e9c6d]
  413a60:	or     eax,DWORD PTR [ebx+ebp*1]
  413a63:	cmp    eax,0x55c31cda
  413a68:	mov    al,ds:0x838bb1e
  413a6d:	enter  0x27c4,0xaa
  413a71:	call   0x662b7c0c
  413a76:	or     BYTE PTR [edi+0x45],ch
  413a79:	push   ecx
  413a7a:	xor    DWORD PTR [edi+0x36223151],ebx
  413a80:	cmc    
  413a81:	and    al,0x8e
  413a83:	in     al,dx
  413a84:	xchg   esi,eax
  413a85:	out    0xe6,eax
  413a87:	sub    dh,bh
  413a89:	sahf   
  413a8a:	stos   DWORD PTR es:[edi],eax
  413a8b:	(bad)  
  413a8d:	in     al,0xe2
  413a8f:	push   0x3c958075
  413a94:	xor    DWORD PTR [esi],edi
  413a96:	sar    DWORD PTR [edx],1
  413a98:	cmp    BYTE PTR [edx+0xa63dba5],0xad
  413a9f:	aas    
  413aa0:	sbb    bh,dh
  413aa2:	repnz lods al,BYTE PTR ds:[esi]
  413aa4:	push   0x41813e93
  413aa9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413aaa:	(bad)  
  413aab:	pushf  
  413aac:	mov    dh,0xe0
  413aae:	cmp    ebx,ecx
  413ab0:	cmp    BYTE PTR [ecx],dh
  413ab2:	adc    al,0x29
  413ab4:	cld    
  413ab5:	push   ss
  413ab6:	int    0x2
  413ab8:	add    al,al
  413aba:	jns    0x413af8
  413abc:	and    ch,bh
  413abe:	das    
  413abf:	and    eax,0x41474e84
  413ac4:	(bad)  
  413ac5:	je     0x413ae6
  413ac7:	push   cs
  413ac8:	sbb    eax,0x765fe70
  413acd:	or     DWORD PTR [ebx+0x2b],eax
  413ad0:	mov    eax,DWORD PTR [edi+0x797c8fc5]
  413ad6:	pop    ds
  413ad7:	lods   al,BYTE PTR ds:[esi]
  413ad8:	sbb    eax,0xc92b3c71
  413add:	enter  0x678a,0xd6
  413ae1:	sahf   
  413ae2:	jo     0x413ab4
  413ae4:	and    DWORD PTR [esi],ebx
  413ae6:	loope  0x413b34
  413ae8:	ins    DWORD PTR es:[edi],dx
  413ae9:	mov    ah,0xe6
  413aeb:	loopne 0x413b18
  413aed:	pop    edx
  413aee:	test   al,0x3b
  413af0:	cmp    edx,DWORD PTR [edi+0x7de17b5]
  413af6:	sbb    cl,BYTE PTR [ecx+0x1b82e0b6]
  413afc:	pop    edi
  413afd:	mov    ds,ebx
  413aff:	mov    al,ds:0xddda35b6
  413b04:	int3   
  413b05:	push   ebp
  413b06:	cmp    DWORD PTR [ecx+0x73120312],ebp
  413b0c:	xchg   BYTE PTR [ebx-0x17],bh
  413b0f:	mov    DWORD PTR [edi-0x2fdd1da8],edx
  413b15:	mov    cl,0x11
  413b17:	lahf   
  413b18:	stc    
  413b19:	sbb    esi,DWORD PTR [eax-0x379d4675]
  413b1f:	xchg   ebx,eax
  413b20:	add    eax,0x5717a89b
  413b25:	out    0x84,al
  413b27:	ret    
  413b28:	cli    
  413b29:	mov    ebp,0xc68fe095
  413b2e:	enter  0x5ca0,0xa6
  413b32:	sahf   
  413b33:	mov    dl,0x84
  413b35:	xchg   ebx,eax
  413b36:	mov    eax,cs
  413b38:	sbb    eax,0x6dc04c3a
  413b3d:	add    ch,BYTE PTR [edi+eiz*2+0x5adadd78]
  413b44:	imul   ebp,DWORD PTR ds:0xfb551cd9,0xbf16d257
  413b4e:	arpl   WORD PTR [esi],ax
  413b50:	or     cl,BYTE PTR [eax+0x4c192020]
  413b56:	sar    BYTE PTR cs:[ecx+0x67],0x9c
  413b5b:	leave  
  413b5c:	lods   al,BYTE PTR ds:[esi]
  413b5d:	cmp    ah,BYTE PTR [ecx]
  413b5f:	jae    0x413b36
  413b61:	fnstcw WORD PTR [ecx]
  413b63:	fwait
  413b64:	push   cs
  413b65:	out    dx,eax
  413b66:	dec    edx
  413b67:	add    eax,0x2321b809
  413b6c:	dec    ebx
  413b6d:	xchg   edi,eax
  413b6e:	cmp    al,BYTE PTR [ecx+0x7c]
  413b71:	stos   DWORD PTR es:[edi],eax
  413b72:	fisubr WORD PTR [esi-0x1be90fdf]
  413b78:	nop
  413b79:	fsub   QWORD PTR [eax-0x56]
  413b7c:	cli    
  413b7d:	mov    bh,0xd
  413b7f:	imul   eax,esi,0x44dc1ca7
  413b85:	pop    esp
  413b86:	scas   eax,DWORD PTR es:[edi]
  413b87:	call   0xa30867ce
  413b8c:	int    0x88
  413b8e:	dec    edi
  413b8f:	xchg   edi,eax
  413b90:	pushf  
  413b91:	push   ecx
  413b92:	aad    0xc6
  413b94:	push   ebx
  413b95:	mov    bh,0xab
  413b97:	sub    BYTE PTR ds:0x5f640711,bh
  413b9d:	push   eax
  413b9e:	mov    edx,0x3e30a0c9
  413ba3:	or     bl,BYTE PTR [eax-0x1bbcd542]
  413ba9:	sbb    ecx,DWORD PTR [eax+0x62b3771e]
  413baf:	xchg   esp,eax
  413bb0:	ins    BYTE PTR es:[edi],dx
  413bb1:	lahf   
  413bb2:	mov    dh,BYTE PTR [ebx-0x34bd92e1]
  413bb8:	call   DWORD PTR [eax+0x2f0b82f3]
  413bbe:	cdq    
  413bbf:	pop    ebp
  413bc0:	pop    ebp
  413bc1:	add    DWORD PTR [edx],0xb94df5d7
  413bc7:	popf   
  413bc8:	dec    ebp
  413bc9:	cmp    dl,BYTE PTR [ecx+0x1d8125a]
  413bcf:	lock dec ecx
  413bd1:	mov    edi,0xdf94dfce
  413bd6:	push   0x44
  413bd8:	cmp    al,BYTE PTR [ebx]
  413bda:	jecxz  0x413b67
  413bdc:	jne    0x413b9a
  413bde:	test   eax,0xa01236c0
  413be3:	or     DWORD PTR [eax],edi
  413be5:	or     cl,BYTE PTR [eax-0x49]
  413be8:	xchg   ebp,eax
  413be9:	xchg   edi,eax
  413bea:	pop    ss
  413beb:	mov    ah,0x72
  413bed:	mov    eax,ds:0x9fb95f87
  413bf2:	jmp    0x413bdb
  413bf4:	mov    bh,0xf9
  413bf6:	pop    ebx
  413bf7:	cmp    bl,bh
  413bf9:	xchg   BYTE PTR ds:0x6be542c7,bl
  413bff:	rcl    DWORD PTR [ecx-0x4b],0xf5
  413c03:	pop    ebp
  413c04:	repnz cld 
  413c06:	dec    edi
  413c07:	lods   eax,DWORD PTR ds:[esi]
  413c08:	lods   al,BYTE PTR ds:[esi]
  413c09:	or     ebp,0xc52706de
  413c0f:	(bad)  
  413c10:	aam    0x37
  413c12:	in     eax,dx
  413c13:	ins    BYTE PTR es:[edi],dx
  413c14:	jno    0x413c0c
  413c16:	enter  0x7ad7,0xb3
  413c1a:	xchg   edi,eax
  413c1b:	fistp  QWORD PTR [eax-0x62]
  413c1e:	dec    eax
  413c1f:	xor    eax,0x4d9d2d11
  413c24:	(bad)  
  413c25:	in     al,dx
  413c26:	push   0xfffffffb
  413c28:	psubusw mm7,QWORD PTR [ecx-0x4bcad0a3]
  413c2f:	popf   
  413c30:	jle    0x413c0f
  413c32:	rcl    DWORD PTR [eax+ecx*8-0x39f74418],0x7c
  413c3a:	shr    ah,0xef
  413c3d:	sbb    bl,BYTE PTR [ecx+0x77]
  413c40:	inc    BYTE PTR [ebx-0x28]
  413c43:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413c44:	push   esp
  413c45:	repz fisubr WORD PTR [ebx-0xb2fa3c9]
  413c4c:	mov    cl,0xd
  413c4e:	lods   eax,DWORD PTR ds:[esi]
  413c4f:	test   al,0x6
  413c51:	jae    0x413ccc
  413c53:	test   dh,ch
  413c55:	repz push cs
  413c57:	inc    ebp
  413c58:	mov    ecx,0xe6f52c5c
  413c5d:	jo     0x413c04
  413c5f:	arpl   WORD PTR [esi-0x5d],bx
  413c62:	inc    edx
  413c63:	sub    BYTE PTR [ebx+0x21],ch
  413c66:	rol    BYTE PTR [esi-0x7eaafe85],0x68
  413c6d:	imul   ecx,DWORD PTR [esi],0x6a
  413c70:	fdiv   st(5),st
  413c72:	mov    al,ds:0xd88ccab6
  413c77:	icebp  
  413c78:	arpl   WORD PTR [edx],di
  413c7a:	adc    ecx,DWORD PTR [ecx]
  413c7c:	fwait
  413c7d:	cld    
  413c7e:	adc    ecx,edi
  413c80:	cmc    
  413c81:	cmp    al,0x65
  413c83:	xchg   edx,eax
  413c84:	xchg   dl,ah
  413c86:	in     eax,0xc3
  413c88:	loop   0x413cd6
  413c8a:	std    
  413c8b:	add    al,0xba
  413c8d:	gs pop ebx
  413c8f:	push   0xffffffd2
  413c91:	mul    BYTE PTR [edi-0x36]
  413c94:	sbb    DWORD PTR [ebx+0x3273d9a7],esp
  413c9a:	ds dec ecx
  413c9c:	lods   eax,DWORD PTR ds:[esi]
  413c9d:	pop    esp
  413c9e:	sbb    ebx,DWORD PTR [ebp+ebp*4-0x27367781]
  413ca5:	xor    ch,BYTE PTR ds:0xdc7ee8d5
  413cab:	inc    eax
  413cac:	cmp    DWORD PTR [edx-0x76dfd2fe],edi
  413cb2:	out    dx,eax
  413cb3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413cb4:	out    0x29,al
  413cb6:	fsub   QWORD PTR ds:0xfa74d153
  413cbc:	xchg   edx,eax
  413cbd:	jmp    0x973:0xcbfad875
  413cc4:	sub    dh,BYTE PTR [edx]
  413cc6:	adc    eax,0xf9aed6b
  413ccb:	sub    al,0x19
  413ccd:	push   esp
  413cce:	sbb    eax,0x5c77ada9
  413cd3:	inc    esp
  413cd4:	and    eax,0xba33d711
  413cd9:	inc    eax
  413cda:	or     cl,dh
  413cdc:	mov    ds:0x6dc5ff91,eax
  413ce1:	imul   ebx,DWORD PTR [edi],0xde3f5269
  413ce7:	pop    ecx
  413ce8:	lea    ebp,[edi+0x7a]
  413ceb:	mov    ebx,0x12beb78d
  413cf0:	xor    al,0xc0
  413cf2:	es dec edi
  413cf4:	mov    esi,0x4623d9e8
  413cf9:	xor    DWORD PTR [eax+eax*4-0xbf40b00],esp
  413d00:	loopne 0x413cc3
  413d02:	jmp    0x3e3b:0x1e51a9d2
  413d09:	jo     0x413d35
  413d0b:	int    0xfe
  413d0d:	pop    es
  413d0e:	sbb    ebx,esi
  413d10:	(bad)  
  413d11:	bnd jb 0x413cc4
  413d14:	in     al,dx
  413d15:	fld    DWORD PTR [esi]
  413d17:	fcomp  DWORD PTR [eax]
  413d19:	shl    eax,0x58
  413d1c:	stc    
  413d1d:	cmc    
  413d1e:	push   0xffffffd5
  413d20:	or     al,0xd5
  413d22:	mov    ecx,DWORD PTR [ecx]
  413d24:	pusha  
  413d25:	mov    ah,0xc3
  413d27:	xchg   ebx,eax
  413d28:	adc    DWORD PTR [esp+eax*1+0x4817e8d5],edx
  413d2f:	mov    ecx,0x8128a040
  413d34:	enter  0xf413,0x75
  413d38:	mov    esi,0xfcbc8624
  413d3d:	or     ah,BYTE PTR [edx-0x76]
  413d40:	stos   BYTE PTR es:[edi],al
  413d41:	mov    cl,0xed
  413d43:	jno    0x413d47
  413d45:	sar    ch,cl
  413d47:	cdq    
  413d48:	push   0x4e676e49
  413d4d:	hlt    
  413d4e:	cmp    BYTE PTR [edx-0x7aae1c9f],dh
  413d54:	repnz pop ds
  413d56:	xchg   esp,eax
  413d57:	xchg   BYTE PTR [ebx+0x43710cbf],ah
  413d5d:	or     DWORD PTR [edx],0x89041669
  413d63:	jecxz  0x413d45
  413d65:	inc    esp
  413d66:	fbstp  TBYTE PTR [edx+0x192d18b0]
  413d6c:	mov    dl,0x9f
  413d6e:	jge    0x413d2f
  413d70:	sbb    ecx,DWORD PTR [edi-0x1f59b34a]
  413d76:	out    0x47,al
  413d78:	sbb    eax,0x4e649c57
  413d7d:	ins    BYTE PTR es:[edi],dx
  413d7e:	out    dx,eax
  413d7f:	fs dec edx
  413d81:	mov    cs,WORD PTR [edx-0x36]
  413d84:	mov    cl,0x2b
  413d86:	popa   
  413d87:	das    
  413d88:	xor    eax,0xc2c9a4a5
  413d8d:	jmp    0xe197fe09
  413d92:	adc    dl,BYTE PTR [ebp+0x18309ee8]
  413d98:	jmp    0x25ce37d9
  413d9d:	jg     0x413e02
  413d9f:	leave  
  413da0:	arpl   WORD PTR [ecx-0x1c882a24],sp
  413da6:	mov    dl,0xa
  413da8:	imul   ecx,DWORD PTR [esi],0xf9b41985
  413dae:	dec    eax
  413daf:	inc    edx
  413db0:	fwait
  413db1:	ror    DWORD PTR [ecx+0x2f],cl
  413db4:	mov    al,ds:0xd84f4325
  413db9:	jbe    0x413dcd
  413dbb:	adc    edx,DWORD PTR [ebx+ebp*2]
  413dbe:	bound  edi,QWORD PTR [esp+esi*1+0x219d8ffa]
  413dc5:	dec    edx
  413dc6:	iret   
  413dc7:	sub    bh,dl
  413dc9:	pop    esp
  413dca:	imul   esp,DWORD PTR [ebx-0x7c],0xca61e6c4
  413dd1:	loopne 0x413d79
  413dd3:	mov    ebp,0xa7ea4ead
  413dd8:	dec    DWORD PTR [esi+edi*2-0x3cd42c2e]
  413ddf:	arpl   WORD PTR ds:0x885f85fa,cx
  413de5:	inc    eax
  413de6:	not    DWORD PTR [edx+0x30998e83]
  413dec:	fild   DWORD PTR [edi]
  413def:	and    al,0x22
  413df1:	retf   
  413df2:	or     DWORD PTR [edi],ebx
  413df4:	cmp    eax,0xf0a3f7d9
  413df9:	sub    eax,0x829ed56f
  413dfe:	sub    al,0x5a
  413e00:	xor    ebp,DWORD PTR [esi+ecx*8-0x33]
  413e04:	ret    0x5174
  413e07:	call   0xbf191635
  413e0c:	loop   0x413e0e
  413e0e:	cld    
  413e0f:	push   0xfffffffa
  413e11:	imul   esp,DWORD PTR [eax-0xd],0xa1260774
  413e18:	sbb    BYTE PTR [ebx],ch
  413e1a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413e1b:	jne    0x413e4c
  413e1d:	cvtdq2ps xmm6,XMMWORD PTR [ebx-0xd]
  413e21:	cmp    ecx,ecx
  413e23:	pop    ss
  413e24:	mov    edx,0x13609b17
  413e29:	clc    
  413e2a:	adc    esp,DWORD PTR [ebp+0x6bcc2f1b]
  413e30:	int    0x3b
  413e32:	dec    ebx
  413e33:	dec    ebx
  413e34:	outs   dx,DWORD PTR ds:[esi]
  413e35:	add    eax,0x23caf805
  413e3a:	aas    
  413e3b:	cmp    ebx,edx
  413e3d:	sahf   
  413e3e:	retf   0x5be2
  413e41:	mov    dh,0x66
  413e43:	dec    esp
  413e44:	mov    eax,0xe324c8f1
  413e49:	xchg   ecx,eax
  413e4a:	pop    eax
  413e4b:	cmp    cl,BYTE PTR [ebp-0xe]
  413e4e:	fnsave [esi+0x32]
  413e51:	jmp    0x366e:0xb42ea5b3
  413e58:	call   0x48350054
  413e5d:	or     al,0xde
  413e5f:	cmp    eax,0xa6945393
  413e64:	jmp    0xb1ae90db
  413e69:	ins    DWORD PTR es:[edi],dx
  413e6a:	pop    ebx
  413e6b:	cmp    al,0xf6
  413e6d:	cld    
  413e6e:	lds    edi,FWORD PTR [esi]
  413e70:	(bad)
  413e74:	repz sbb ch,BYTE PTR [eax-0x390280a0]
  413e7b:	loopne 0x413edc
  413e7d:	(bad)  
  413e7e:	jle    0x413e3d
  413e80:	lds    eax,FWORD PTR [eax+0x26]
  413e83:	jno    0x413ec3
  413e85:	jmp    0x329a:0xe4422e7c
  413e8c:	lock inc ebp
  413e8e:	int3   
  413e8f:	or     DWORD PTR ds:0xbec9aa53,0xc2e92c8f
  413e99:	mov    WORD PTR ss:[di],?
  413e9d:	jnp    0x413e27
  413e9f:	idiv   DWORD PTR [edi+0x4e]
  413ea2:	sub    eax,0x7c5a4f47
  413ea7:	call   0x3998:0xa055f580
  413eae:	push   ebp
  413eaf:	iret   
  413eb0:	ds fs dec ecx
  413eb3:	fild   QWORD PTR [ebx+0x5a]
  413eb6:	dec    ebp
  413eb7:	or     ecx,DWORD PTR [esi-0x61]
  413eba:	shl    DWORD PTR [edx-0x309248ab],cl
  413ec0:	dec    esp
  413ec1:	cmp    BYTE PTR [edx-0x11],al
  413ec4:	jle    0x413f33
  413ec6:	out    dx,al
  413ec7:	adc    eax,0x434c1b79
  413ecc:	sub    edx,DWORD PTR [ebp+ebp*8-0x77]
  413ed0:	cs xor ebx,0x60424999
  413ed7:	(bad)  
  413ed8:	rcr    DWORD PTR [eax],cl
  413eda:	inc    ebp
  413edb:	mov    eax,0xa2d22d14
  413ee0:	pop    esp
  413ee1:	inc    esp
  413ee2:	test   DWORD PTR [ecx],edi
  413ee4:	(bad)  
  413ee6:	imul   edx,edi,0x44975129
  413eec:	jae    0x413f42
  413eee:	mov    ecx,0xd5194ffe
  413ef3:	aas    
  413ef4:	shl    DWORD PTR [edx-0xb63fe19],1
  413efa:	gs mov bh,0xad
  413efd:	dec    ecx
  413efe:	sbb    cl,BYTE PTR [ecx*2+0x56f7d60f]
  413f05:	pop    esi
  413f06:	pop    esp
  413f07:	dec    ebp
  413f08:	mov    bl,0x43
  413f0a:	inc    esi
  413f0b:	into   
  413f0c:	push   0x726b2ce2
  413f11:	imul   esp,DWORD PTR [edi-0x62e1c371],0xffffffdf
  413f18:	push   edi
  413f19:	loop   0x413f26
  413f1b:	inc    ebp
  413f1c:	dec    edx
  413f1d:	je     0x413ece
  413f1f:	pop    ds
  413f20:	adc    edi,DWORD PTR [edi]
  413f22:	push   cs
  413f23:	inc    edx
  413f24:	sbb    BYTE PTR [edi],dh
  413f26:	das    
  413f27:	ins    DWORD PTR es:[edi],dx
  413f28:	pop    ecx
  413f29:	mov    bh,BYTE PTR [esi-0x409f94ed]
  413f2f:	xchg   ebx,eax
  413f30:	jne    0x413eff
  413f32:	adc    ch,BYTE PTR [edi-0x432b6ae9]
  413f38:	or     cl,al
  413f3a:	add    al,0xc
  413f3c:	enter  0x961c,0x3e
  413f40:	mov    esi,0xf8f19ce4
  413f45:	xchg   esp,eax
  413f46:	add    eax,0xf5f832ac
  413f4b:	sub    ecx,DWORD PTR [edi]
  413f4d:	jno    0x413fac
  413f4f:	into   
  413f50:	jp     0x413f91
  413f52:	jecxz  0x413f43
  413f54:	sbb    BYTE PTR [ebx+0x63],cl
  413f57:	(bad)  
  413f58:	sbb    DWORD PTR [esi-0x35ccb13e],ecx
  413f5e:	mov    eax,0x8e589a3c
  413f63:	scas   al,BYTE PTR es:[edi]
  413f64:	ret    
  413f65:	pop    ebp
  413f66:	fbld   TBYTE PTR [edi]
  413f68:	das    
  413f69:	push   es
  413f6a:	inc    edi
  413f6b:	push   esi
  413f6c:	mov    esi,0x9bbea64f
  413f71:	xchg   ebx,eax
  413f72:	repnz mov bl,0x32
  413f75:	mov    ebx,0x4ccfb623
  413f7a:	scas   eax,DWORD PTR es:[edi]
  413f7b:	in     eax,0x3f
  413f7d:	sar    ebx,1
  413f7f:	scas   eax,DWORD PTR es:[edi]
  413f80:	mov    dh,0x0
  413f82:	mov    al,0x25
  413f84:	(bad)  
  413f85:	pop    ecx
  413f86:	mov    ?,WORD PTR [ebp-0x6f]
  413f89:	mov    eax,0x4eba6acd
  413f8e:	mov    edx,0x761f6794
  413f93:	fsub   DWORD PTR [eax+0x62]
  413f96:	(bad)  
  413f97:	es pop ss
  413f99:	push   esp
  413f9a:	mov    edx,0x797a33a7
  413f9f:	je     0x413f57
  413fa1:	xchg   edx,eax
  413fa2:	bound  esi,QWORD PTR [edi]
  413fa4:	jge    0x413fef
  413fa6:	or     dl,BYTE PTR [edi-0x4d34cbc9]
  413fac:	sahf   
  413fad:	add    eax,0x88710142
  413fb2:	daa    
  413fb3:	cmp    eax,0xe87dec89
  413fb8:	lea    edi,[esi+ebx*2+0x12df0284]
  413fbf:	xchg   esp,eax
  413fc0:	fild   WORD PTR [ebx]
  413fc2:	loop   0x414024
  413fc4:	rol    DWORD PTR ds:0xc9007c0,1
  413fca:	adc    BYTE PTR [esp-0x5b],dl
  413fce:	call   0xca46:0xad117278
  413fd5:	cmp    ebx,DWORD PTR [edx+0x5d9c644f]
  413fdb:	push   edx
  413fdc:	sahf   
  413fdd:	mov    edi,0xf8b14a58
  413fe2:	pop    ebp
  413fe3:	dec    esp
  413fe4:	leave  
  413fe5:	push   ss
  413fe6:	ror    DWORD PTR [ecx-0x80],cl
  413fe9:	fsub   QWORD PTR [esi+0x43]
  413fec:	cmp    bl,al
  413fee:	add    BYTE PTR [ebx+edx*2],0xfb
  413ff2:	shl    ebp,cl
  413ff4:	mov    eax,0xbe785d55
  413ff9:	sub    al,BYTE PTR [edx-0x65065d9]
  413fff:	dec    edi
  414000:	fst    QWORD PTR [ecx]
  414002:	test   eax,0x46f86ef4
  414007:	aas    
  414008:	test   al,0xd4
  41400a:	xor    ecx,DWORD PTR [ecx-0x79]
  41400d:	add    ebx,DWORD PTR [eax-0x42]
  414010:	push   edi
  414011:	lock cmc 
  414013:	dec    esp
  414014:	iret   
  414015:	std    
  414016:	loop   0x413fc2
  414018:	pusha  
  414019:	(bad)  
  41401a:	mov    ebx,0xfdc650f8
  41401f:	or     DWORD PTR [esi-0x4bfc6311],edx
  414025:	sbb    ah,BYTE PTR [eax]
  414027:	add    ch,BYTE PTR [esi+0x49]
  41402a:	dec    edi
  41402b:	ins    BYTE PTR es:[edi],dx
  41402c:	xchg   edi,eax
  41402d:	fldcw  WORD PTR [ecx-0x23]
  414030:	push   cs
  414031:	and    eax,DWORD PTR [edi]
  414033:	call   0xc554d69e
  414038:	iret   
  414039:	js     0x414088
  41403b:	mov    ds:0xe3c6095e,eax
  414040:	jae    0x414079
  414042:	push   fs
  414044:	jo     0x41401c
  414046:	xor    BYTE PTR [edi+0x11],bh
  414049:	jl     0x41403f
  41404b:	sahf   
  41404c:	cmp    BYTE PTR [edx+0x5a],dh
  41404f:	not    DWORD PTR [eax]
  414051:	(bad)  [ebp-0x65]
  414054:	sub    al,0xf8
  414056:	mov    ds:0x48d2f33e,eax
  41405b:	out    dx,eax
  41405c:	mov    ch,0x64
  41405e:	cmp    ecx,DWORD PTR [eax-0x57]
  414061:	and    bh,BYTE PTR [ecx+eiz*8]
  414064:	rcl    BYTE PTR [esi-0x27],1
  414067:	mov    ebx,0xaf3fe428
  41406c:	popf   
  41406d:	pop    ecx
  41406e:	pop    es
  41406f:	hlt    
  414070:	cmp    esp,DWORD PTR [esi+ecx*4]
  414073:	loopne 0x413ffc
  414075:	jmp    DWORD PTR [edi+0x6]
  414078:	outs   dx,BYTE PTR ds:[esi]
  414079:	sbb    al,0x5b
  41407b:	lock pop es
  41407d:	rcl    DWORD PTR [edx],0xc7
  414080:	push   eax
  414081:	add    edi,ebx
  414083:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414084:	out    dx,eax
  414085:	lods   al,BYTE PTR ds:[esi]
  414086:	pop    es
  414087:	jne    0x41401c
  414089:	xlat   BYTE PTR ds:[ebx]
  41408a:	cli    
  41408b:	and    BYTE PTR [ebp+0x3046348d],0xe4
  414092:	xchg   esi,eax
  414093:	mov    ebp,0x9b3049
  414098:	mov    ds:0x9dda9c36,al
  41409d:	imul   ecx,DWORD PTR [ebx-0x3f],0xb0a6079f
  4140a4:	pop    eax
  4140a5:	jecxz  0x4140a5
  4140a7:	cmp    DWORD PTR [ebx],edi
  4140a9:	daa    
  4140aa:	xor    eax,0xb3d9a655
  4140af:	inc    ebx
  4140b0:	ins    BYTE PTR es:[edi],dx
  4140b1:	imul   esi,DWORD PTR [esi-0x7d44986f],0x9ed49ae5
  4140bb:	loope  0x4140da
  4140bd:	pop    esp
  4140be:	push   esp
  4140bf:	dec    edi
  4140c0:	ss push 0x188c7b44
  4140c6:	aad    0x8d
  4140c8:	fsubr  st,st(2)
  4140ca:	add    BYTE PTR [edx-0x3b261356],bl
  4140d0:	and    eax,esp
  4140d2:	cdq    
  4140d3:	xor    eax,0xf29930a9
  4140d8:	jg     0x41414a
  4140da:	retf   
  4140db:	leave  
  4140dc:	push   ebp
  4140dd:	dec    ebp
  4140de:	dec    ecx
  4140df:	mov    ds:0xf009968e,al
  4140e4:	out    dx,al
  4140e5:	ss retf 
  4140e7:	push   ebx
  4140e8:	push   0x6b
  4140ea:	xchg   edi,ebp
  4140ec:	mov    dl,0x50
  4140ee:	mov    bl,BYTE PTR [ebx-0x75]
  4140f1:	dec    edi
  4140f2:	and    al,0xce
  4140f4:	dec    BYTE PTR [esi]
  4140f6:	add    BYTE PTR [esi],cl
  4140f8:	inc    esp
  4140f9:	push   ebx
  4140fa:	and    BYTE PTR [eax+0x19],bl
  4140fd:	mov    edx,0x59555a67
  414102:	in     eax,dx
  414103:	(bad)  
  414104:	push   esi
  414105:	xchg   esi,eax
  414106:	dec    ecx
  414107:	sar    cl,cl
  414109:	enter  0xa26f,0x76
  41410d:	into   
  41410e:	jmp    edi
  414110:	call   0x75f6:0x4deaa005
  414117:	or     DWORD PTR [ecx],ebp
  414119:	jmp    0x4140c1
  41411b:	pop    esi
  41411c:	push   es
  41411d:	or     BYTE PTR [ebx],0x48
  414120:	dec    ecx
  414121:	fbstp  TBYTE PTR [edx]
  414123:	push   es
  414124:	loop   0x4140f1
  414126:	push   edx
  414127:	popf   
  414128:	push   ebx
  414129:	(bad)  
  41412a:	bound  ecx,QWORD PTR [ecx]
  41412c:	test   DWORD PTR [edi-0x62],edi
  41412f:	std    
  414130:	push   ecx
  414131:	(bad)  
  414133:	retf   0xd30e
  414136:	cmp    BYTE PTR [eax],0xd
  414139:	jecxz  0x41419b
  41413b:	jno    0x4140d1
  41413d:	icebp  
  41413e:	aad    0xcf
  414140:	(bad)  
  414141:	repz clc 
  414143:	dec    edx
  414144:	test   DWORD PTR [ecx],0x9623ea05
  41414a:	adc    eax,0x96ac1e1
  41414f:	inc    ecx
  414150:	jl     0x414122
  414152:	xchg   edi,eax
  414153:	ret    
  414154:	adc    bl,al
  414156:	sub    cl,BYTE PTR [eax+0x6f8f1c1]
  41415c:	or     al,0xda
  41415e:	push   0x5d1f6ab0
  414163:	out    0x81,al
  414165:	inc    esi
  414166:	sbb    dh,BYTE PTR [ecx+0x4b]
  414169:	iret   
  41416a:	repnz and DWORD PTR [edx],ebp
  41416d:	xor    DWORD PTR [eax],0xffffff85
  414170:	pop    edi
  414171:	dec    esp
  414172:	out    dx,eax
  414173:	retf   
  414174:	je     0x4141da
  414176:	push   cs
  414177:	sub    BYTE PTR [esi-0x5e],dh
  41417a:	jecxz  0x4141cc
  41417c:	pop    es
  41417d:	in     al,0xab
  41417f:	jmp    0x414104
  414181:	rcr    BYTE PTR [edi],0xd0
  414184:	xor    edi,eax
  414186:	cmp    edx,DWORD PTR [edi+0x401f1add]
  41418c:	nop
  41418d:	es dec esi
  41418f:	push   edx
  414190:	repz xchg esp,eax
  414192:	fidivr DWORD PTR [eax+ebp*8-0x9765f42]
  414199:	fbld   TBYTE PTR [eax+0x6a]
  41419c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41419d:	test   eax,0x8f7eae2e
  4141a2:	rcr    ah,1
  4141a4:	int    0xb3
  4141a6:	ins    BYTE PTR es:[edi],dx
  4141a7:	(bad)  
  4141a8:	mov    esi,0x48d603cd
  4141ad:	add    eax,0x788a4e29
  4141b2:	mov    BYTE PTR [esp+eiz*4],bh
  4141b5:	popf   
  4141b6:	pushf  
  4141b7:	dec    esp
  4141b8:	dec    ecx
  4141b9:	lock xchg esi,eax
  4141bb:	pop    esp
  4141bc:	shr    BYTE PTR [eax+eax*2+0x61],cl
  4141c0:	xchg   esp,eax
  4141c1:	adc    ch,BYTE PTR [eax+0x23]
  4141c4:	xor    al,0x39
  4141c6:	or     al,0x6e
  4141c8:	xchg   ebp,eax
  4141c9:	retf   
  4141ca:	push   edi
  4141cb:	fwait
  4141cc:	pop    edi
  4141cd:	inc    ecx
  4141ce:	jmpw   0xf830
  4141d2:	ret    
  4141d3:	cmp    al,0x95
  4141d5:	add    eax,0x4257858a
  4141da:	add    al,0xa7
  4141dc:	shl    BYTE PTR [esi],cl
  4141de:	ds out dx,al
  4141e0:	push   esp
  4141e1:	pop    edi
  4141e2:	push   0xffffffcd
  4141e4:	(bad)  
  4141e5:	hlt    
  4141e6:	iret   
  4141e7:	cmp    ch,BYTE PTR [esi-0x58f332df]
  4141ed:	pusha  
  4141ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4141ef:	test   ecx,ebp
  4141f1:	aam    0xb1
  4141f3:	add    al,0x7d
  4141f5:	outs   dx,DWORD PTR ds:[esi]
  4141f6:	mov    BYTE PTR [ebp-0x6bfaf59a],cl
  4141fc:	scas   al,BYTE PTR es:[edi]
  4141fd:	out    0x8b,al
  4141ff:	mov    esp,0xf11cb278
  414204:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414205:	outs   dx,BYTE PTR ds:[esi]
  414206:	pop    ds
  414207:	and    eax,0xe3b02afa
  41420c:	mul    BYTE PTR [esi]
  41420e:	add    dh,al
  414210:	into   
  414211:	fist   WORD PTR [bx-0x6b]
  414215:	adc    ah,dl
  414217:	mov    ecx,0x366bcc86
  41421c:	lahf   
  41421d:	mov    bh,BYTE PTR [edx-0x4aa184de]
  414223:	icebp  
  414224:	int    0xcf
  414226:	mov    bh,0x61
  414228:	bswap  edx
  41422a:	into   
  41422b:	dec    ecx
  41422c:	jg     0x414221
  41422e:	lahf   
  41422f:	sbb    cl,ah
  414231:	lock mov ch,0x8
  414234:	in     eax,0x9e
  414236:	mov    esi,0xca22d10e
  41423b:	inc    eax
  41423c:	push   ebx
  41423d:	pop    fs
  41423f:	in     al,dx
  414240:	cmp    DWORD PTR [ecx+0x4724b771],eax
  414246:	not    DWORD PTR [eax+0x1ff0fb9c]
  41424c:	xchg   ebp,eax
  41424d:	push   0x961dc9f6
  414252:	jnp    0x4141dd
  414254:	inc    al
  414256:	addr16 out dx,eax
  414258:	xor    edx,DWORD PTR [edx+ebx*8-0x3d]
  41425c:	ss loopne 0x4141eb
  41425f:	clc    
  414260:	je     0x414250
  414262:	fld    DWORD PTR [ebx+eiz*8]
  414265:	fwait
  414266:	push   0xffffffe7
  414268:	xchg   edx,eax
  414269:	add    al,0xc9
  41426b:	call   0xeb96e999
  414270:	dec    edi
  414271:	add    DWORD PTR [esi+eiz*4],eax
  414274:	xchg   ebp,eax
  414275:	inc    eax
  414276:	cmp    ecx,DWORD PTR [esi]
  414278:	dec    ebp
  414279:	sbb    ebp,DWORD PTR [eax]
  41427b:	arpl   bx,di
  41427d:	(bad)  
  41427e:	fst    DWORD PTR [edi+0x6e]
  414281:	mov    ah,0x19
  414283:	push   esp
  414284:	sbb    al,0x7c
  414286:	arpl   WORD PTR [esi],dx
  414288:	aas    
  414289:	sub    al,ah
  41428b:	into   
  41428c:	cmp    ah,BYTE PTR [edi]
  41428e:	inc    ecx
  41428f:	aad    0xf8
  414291:	mov    al,0xc1
  414293:	mov    es,ebx
  414295:	enter  0xd714,0xa6
  414299:	leave  
  41429a:	outs   dx,BYTE PTR ds:[esi]
  41429b:	mov    ch,0x73
  41429d:	test   al,0xb0
  41429f:	add    eax,0xab6132e7
  4142a4:	or     dh,BYTE PTR [ecx-0x6447c1b4]
  4142aa:	sti    
  4142ab:	adc    eax,0xd2b5f2a2
  4142b0:	mov    eax,0xeec82e68
  4142b5:	mov    edi,0x97a0b8b8
  4142ba:	xchg   ecx,eax
  4142bb:	jmp    0x78c9:0xb2bc14fc
  4142c2:	fdiv   st(1),st
  4142c4:	push   esp
  4142c5:	lods   al,BYTE PTR ds:[esi]
  4142c6:	mov    ebx,0x2dd529bf
  4142cb:	pop    esp
  4142cc:	push   eax
  4142cd:	scas   al,BYTE PTR es:[edi]
  4142ce:	out    0x63,eax
  4142d0:	adc    BYTE PTR [edi],bl
  4142d2:	pop    eax
  4142d3:	cdq    
  4142d4:	and    DWORD PTR [ecx+0xb],esp
  4142d7:	shr    DWORD PTR fs:[eax-0x2c],1
  4142db:	pop    esp
  4142dc:	mov    BYTE PTR ds:0xb44035df,bl
  4142e2:	jmp    0x6e0d:0x70abfd1b
  4142e9:	sar    al,0x1e
  4142ec:	sub    ah,bh
  4142ee:	sbb    eax,0xcea66f7e
  4142f3:	loopne 0x41435a
  4142f5:	iret   
  4142f6:	icebp  
  4142f7:	inc    ebx
  4142f8:	mov    cs,WORD PTR [ecx+0x6a]
  4142fb:	jmp    0x27db:0x5da3433f
  414302:	push   0x70
  414304:	add    eax,0x868c5da7
  414309:	ret    
  41430a:	fs dec bx
  41430d:	mov    DWORD PTR [esp+edi*1],esp
  414310:	cld    
  414311:	test   dl,ah
  414313:	mov    ds:0x52b21f7b,eax
  414318:	retf   0x958c
  41431b:	and    eax,0x6cf1b783
  414320:	jbe    0x414301
  414322:	adc    bl,BYTE PTR ds:0xe5ba0388
  414328:	push   ss
  414329:	lods   al,BYTE PTR ds:[esi]
  41432a:	into   
  41432b:	into   
  41432c:	inc    ecx
  41432d:	jno    0x41439f
  41432f:	inc    edx
  414330:	dec    edi
  414331:	and    al,0x24
  414333:	push   es
  414334:	mov    ebp,0xfdfe52a9
  414339:	(bad)  [edx]
  41433b:	adc    eax,0x87abf062
  414340:	push   ss
  414341:	(bad)  
  414342:	xor    bl,BYTE PTR [eax-0x31]
  414345:	xchg   esp,eax
  414346:	lahf   
  414347:	jb     0x4143bb
  414349:	jle    0x414303
  41434b:	retw   
  41434d:	pop    ebx
  41434e:	cs jae 0x4143c2
  414351:	aas    
  414352:	(bad)  
  414353:	xor    eax,0x242e7590
  414358:	(bad)  
  414359:	mov    eax,0xfc266a4
  41435e:	jl     0x41431c
  414360:	mov    cl,0xde
  414362:	adc    ecx,esi
  414364:	in     eax,dx
  414365:	fdiv   st,st(6)
  414367:	out    0x2a,eax
  414369:	popf   
  41436a:	retf   
  41436b:	lea    ebp,[eax+0x7f62902e]
  414371:	xor    dl,dh
  414373:	xor    DWORD PTR [ecx+0x6b],esi
  414376:	pop    es
  414377:	dec    eax
  414378:	pop    edx
  414379:	add    ch,ah
  41437b:	sbb    eax,0xb03a5cbf
  414380:	fs add al,0x97
  414383:	out    dx,eax
  414384:	shr    DWORD PTR [ebx+0x58],0xa6
  414388:	pop    ss
  414389:	sar    BYTE PTR [eax+0x31cc6c90],0x51
  414390:	push   0xffffffe5
  414392:	test   BYTE PTR gs:[edx-0x452cafe8],dl
  414399:	ret    0x1fc2
  41439c:	jmp    0x4143ce
  41439e:	mov    ebx,DWORD PTR [eiz*8+0x67027698]
  4143a5:	rcr    DWORD PTR [ecx+0x33bd070e],cl
  4143ab:	cmp    al,BYTE PTR [ecx+eax*8-0x5d]
  4143af:	jb     0x4143a3
  4143b1:	cs repnz sbb cl,al
  4143b5:	xor    eax,0xbc319cee
  4143ba:	sti    
  4143bb:	push   ds
  4143bc:	daa    
  4143bd:	in     eax,dx
  4143be:	aad    0x97
  4143c0:	push   esp
  4143c1:	adc    eax,0x9d552e1a
  4143c6:	jmp    0x414428
  4143c8:	sbb    BYTE PTR [ecx],bl
  4143ca:	mov    edx,ss
  4143cc:	loopne 0x414389
  4143ce:	mov    ebp,DWORD PTR [ebp-0x11]
  4143d1:	jae    0x4143a6
  4143d3:	jae    0x4143dc
  4143d5:	push   esp
  4143d6:	sub    al,0xff
  4143d8:	mov    esp,0x840b5e18
  4143dd:	push   edi
  4143de:	les    esi,FWORD PTR [ebp-0x15]
  4143e1:	fsubr  st,st(3)
  4143e3:	adc    al,0xc8
  4143e5:	aad    0x7f
  4143e7:	sbb    al,0x4a
  4143e9:	fcom   DWORD PTR [edi-0x53]
  4143ec:	mov    esp,0xb6ca77be
  4143f1:	mov    WORD PTR [esi],ds
  4143f3:	jge    0x4143aa
  4143f5:	push   es
  4143f6:	or     dh,ch
  4143f8:	fs loopne 0x4143c3
  4143fb:	pop    esp
  4143fc:	fs and eax,0xdb19a7b7
  414402:	(bad)  
  414403:	and    BYTE PTR [eax],ch
  414405:	psrlw  mm7,mm2
  414408:	pushf  
  414409:	mov    BYTE PTR [esp+eiz*4+0x61],dl
  41440d:	std    
  41440e:	jecxz  0x414435
  414410:	mov    ebx,0x95dc5372
  414415:	shl    esp,cl
  414417:	in     al,0xa1
  414419:	sbb    al,0x59
  41441b:	xor    eax,DWORD PTR ds:0xbb13d394
  414421:	pop    eax
  414422:	retf   0xc0e8
  414425:	xor    DWORD PTR [edi+0x5c],ebx
  414428:	ins    DWORD PTR es:[edi],dx
  414429:	cs jg  0x414479
  41442c:	and    DWORD PTR [edi+0xbf39f48],0x4b
  414433:	pusha  
  414434:	xchg   BYTE PTR [edx-0x21f56d76],dh
  41443a:	leave  
  41443b:	cli    
  41443c:	mov    ds:0xb7fc58cb,al
  414441:	addr16 dec esp
  414443:	mov    eax,0x9d304710
  414448:	push   edi
  414449:	test   eax,0xde5bf323
  41444e:	jmp    0x2b1fb286
  414453:	push   ecx
  414454:	or     al,0x6f
  414456:	push   ecx
  414457:	xor    edi,ebx
  414459:	loopne 0x4143fe
  41445b:	xchg   ebx,eax
  41445c:	push   ebx
  41445d:	sub    ebx,DWORD PTR [esi-0x2849c120]
  414463:	cmp    DWORD PTR [edx+0x30745016],ebp
  414469:	scas   eax,DWORD PTR es:[edi]
  41446a:	jecxz  0x41441f
  41446c:	cmp    DWORD PTR [ebx-0x4b88776b],eax
  414472:	xor    al,BYTE PTR [eax-0x1a]
  414475:	test   DWORD PTR ds:[edx],ebp
  414478:	inc    esi
  414479:	ins    DWORD PTR es:[edi],dx
  41447a:	fimul  DWORD PTR ds:0x513328c4
  414480:	add    edx,DWORD PTR [edx]
  414482:	jecxz  0x414449
  414484:	test   DWORD PTR [ebx+ebx*1-0x5a14ad9c],edi
  41448b:	pop    esp
  41448c:	xchg   ecx,eax
  41448d:	add    BYTE PTR [esi+0x6a],dl
  414490:	sbb    cl,0xee
  414493:	hlt    
  414494:	sti    
  414495:	pop    esp
  414496:	aas    
  414497:	xor    BYTE PTR [ebx-0x42],dh
  41449a:	iret   
  41449b:	dec    ebp
  41449c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41449d:	push   ebp
  41449e:	push   ebp
  41449f:	mov    DWORD PTR cs:[ebx+eiz*2],esi
  4144a3:	aam    0x14
  4144a5:	jl     0x41450c
  4144a7:	scas   eax,DWORD PTR es:[edi]
  4144a8:	adc    al,0xc5
  4144aa:	mul    BYTE PTR [edx+0x3]
  4144ad:	les    eax,FWORD PTR [edx]
  4144af:	jg     0x414470
  4144b1:	call   0x9644:0xca9ecc50
  4144b8:	in     eax,dx
  4144b9:	and    DWORD PTR [edx+0x5f],ebx
  4144bc:	ss dec ecx
  4144be:	in     al,0x54
  4144c0:	out    dx,al
  4144c1:	jne    0x414489
  4144c3:	stc    
  4144c4:	outs   dx,BYTE PTR ds:[esi]
  4144c5:	icebp  
  4144c6:	or     eax,0xf19d7864
  4144cb:	pop    edi
  4144cc:	mov    dl,0xe9
  4144ce:	sub    cl,BYTE PTR [esi]
  4144d0:	ret    
  4144d1:	js     0x4144c1
  4144d3:	and    DWORD PTR ds:0x5cffd373,ebp
  4144d9:	sub    DWORD PTR [ecx+0x72],ebx
  4144dc:	xlat   BYTE PTR ds:[ebx]
  4144dd:	dec    esi
  4144de:	aad    0x62
  4144e0:	call   0x252c0d17
  4144e5:	sub    eax,0x6ca58a75
  4144ea:	sahf   
  4144eb:	mov    dl,0x1b
  4144ed:	inc    ecx
  4144ee:	(bad)  
  4144ef:	jae    0x414511
  4144f1:	lahf   
  4144f2:	call   0x97e3:0x95b5bb38
  4144f9:	and    eax,0x74c3c1ad
  4144fe:	mov    bh,cl
  414500:	jg     0x41448b
  414502:	sub    esp,DWORD PTR [bp+di+0x1bce]
  414507:	inc    ebx
  414508:	mov    edx,0x497a3489
  41450d:	lahf   
  41450e:	xchg   edx,eax
  41450f:	adc    BYTE PTR [edi+0x28809eac],dh
  414515:	mov    edi,0x73264940
  41451a:	push   eax
  41451b:	and    DWORD PTR [ebp+0x366a7a34],eax
  414521:	ror    ebp,1
  414523:	xchg   ecx,eax
  414524:	jge    0x414570
  414526:	in     eax,dx
  414527:	xchg   ah,ch
  414529:	and    al,0xb9
  41452b:	(bad)
  41452f:	mov    esi,esi
  414531:	jno    0x4144c2
  414533:	xchg   DWORD PTR [esi+eax*8-0x63],esi
  414537:	in     al,0xe9
  414539:	shr    BYTE PTR [bx+di-0x49f9],1
  41453e:	in     eax,0x7c
  414540:	psllw  mm0,mm3
  414543:	sub    al,0x32
  414545:	popa   
  414546:	rol    DWORD PTR [edi],1
  414548:	out    dx,eax
  414549:	jmp    0xf9e61ac0
  41454e:	shl    BYTE PTR [ebx+0x2e],0xd7
  414552:	(bad)  
  414553:	cmp    eax,0x34211408
  414558:	hlt    
  414559:	or     ebp,ebx
  41455b:	fiadd  WORD PTR [eax-0xcedfb0a]
  414561:	pop    esi
  414562:	mov    DWORD PTR [eax+0x6a37c9fe],esp
  414568:	push   ss
  414569:	fsubr  DWORD PTR [ebx]
  41456b:	dec    ebx
  41456c:	les    ebp,FWORD PTR [eax+0x42]
  41456f:	dec    edx
  414570:	sub    BYTE PTR [ebx-0x632a8355],ah
  414576:	rcl    BYTE PTR [esi],cl
  414578:	(bad)  
  414579:	rol    BYTE PTR [edi+edx*4+0x7],0xde
  41457e:	cld    
  41457f:	inc    esp
  414580:	inc    BYTE PTR [edi]
  414582:	jmp    0xdb4eea66
  414587:	sbb    bh,BYTE PTR [ecx+0x73]
  41458a:	and    esi,ebp
  41458c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41458d:	out    dx,al
  41458e:	and    esp,ebx
  414590:	pop    edi
  414591:	iret   
  414592:	ficom  WORD PTR es:[edx+edi*4-0x11]
  414597:	xor    DWORD PTR [ebx+0x11d96182],ecx
  41459d:	mov    esi,0xbfd8f4bb
  4145a2:	ds adc cl,bl
  4145a5:	sbb    eax,0xbdbd595f
  4145aa:	(bad)  
  4145ab:	jnp    0x4145e8
  4145ad:	test   BYTE PTR [edi-0x68],cl
  4145b0:	adc    ebx,DWORD PTR [esi+0x4168519]
  4145b6:	and    eax,0x79b1a98f
  4145bb:	dec    eax
  4145bc:	add    BYTE PTR ds:0x11ef0675,dh
  4145c2:	xor    eax,DWORD PTR [esi]
  4145c4:	int    0x8b
  4145c6:	add    eax,0xddd55175
  4145cb:	add    DWORD PTR [eax+0x5e369202],esp
  4145d1:	push   ebx
  4145d2:	aaa    
  4145d3:	mov    al,ds:0xc255f5c8
  4145d8:	fs adc eax,0x2598fa0b
  4145de:	scas   al,BYTE PTR es:[edi]
  4145df:	mov    ecx,DWORD PTR [eax+0x22a34e8b]
  4145e5:	mov    ecx,0x3fe4033d
  4145ea:	mov    eax,ds:0x3966da0d
  4145ef:	fwait
  4145f0:	sub    eax,0x8997c441
  4145f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4145f6:	add    ecx,0x28
  4145f9:	into   
  4145fa:	cmc    
  4145fb:	or     DWORD PTR ss:[esp+ebp*8],0xbdbe50c5
  414603:	aaa    
  414604:	test   DWORD PTR [eax-0x7d17479a],esp
  41460a:	mov    bl,0xf5
  41460c:	cdq    
  41460d:	cld    
  41460e:	stos   DWORD PTR es:[edi],eax
  41460f:	je     0x4145a8
  414611:	mov    bh,0x3e
  414613:	imul   esi,DWORD PTR [esi-0x3],0x2b
  414617:	mov    al,ds:0xfdbc33d4
  41461c:	or     edi,DWORD PTR [edi+0x1f]
  41461f:	pusha  
  414620:	pusha  
  414621:	hlt    
  414622:	lock clc 
  414624:	mov    esi,0x427ec29e
  414629:	cmp    al,0x49
  41462b:	and    ch,BYTE PTR [edi+0x3e]
  41462e:	cmp    al,0xb4
  414630:	cmp    ebp,DWORD PTR [edi+ebp*1]
  414633:	mov    edx,0x879379a7
  414638:	outs   dx,DWORD PTR ds:[esi]
  414639:	sub    BYTE PTR [edi-0x36adff86],cl
  41463f:	or     dl,BYTE PTR [ecx-0x23]
  414642:	outs   dx,BYTE PTR ds:[esi]
  414643:	fisttp WORD PTR [edi+0x59417a1]
  414649:	adc    al,bh
  41464b:	adc    esp,DWORD PTR [ecx]
  41464d:	add    edx,DWORD PTR [esi]
  41464f:	sub    BYTE PTR [ecx-0x40],0xec
  414653:	cld    
  414654:	adc    ebx,DWORD PTR [eax]
  414656:	retf   0xdd0b
  414659:	cmp    dl,BYTE PTR [ebx+0x34470482]
  41465f:	icebp  
  414660:	js     0x41465e
  414662:	jb     0x41469a
  414664:	and    eax,0xbcaf51a9
  414669:	jmp    esi
  41466b:	(bad)  [eax+0x7c]
  41466e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41466f:	xor    eax,0xb8a794aa
  414674:	mov    dl,cl
  414676:	adc    al,0x70
  414678:	add    al,0x69
  41467a:	mov    cl,0x3
  41467c:	sub    al,0xfa
  41467e:	and    dh,BYTE PTR [ebx+0x1f7ed284]
  414684:	add    dl,BYTE PTR [edi-0x4382ce7b]
  41468a:	retf   0x5c4a
  41468d:	mov    ds:0xf1cc809,al
  414692:	neg    DWORD PTR [edx+0x17]
  414695:	push   eax
  414696:	xor    DWORD PTR [edx+ebx*8+0x75],ecx
  41469a:	std    
  41469b:	(bad)  
  41469c:	jl     0x41470f
  41469e:	cwde   
  41469f:	stos   DWORD PTR es:[edi],eax
  4146a0:	push   esi
  4146a1:	jne    0x4146f5
  4146a3:	aas    
  4146a4:	inc    ecx
  4146a5:	inc    ecx
  4146a6:	retf   0xd842
  4146a9:	mov    DWORD PTR [esi+ebx*2-0x2bab579d],ebx
  4146b0:	not    DWORD PTR [ecx+0x2d4f0277]
  4146b6:	mov    ebp,es
  4146b8:	or     bh,bh
  4146ba:	std    
  4146bb:	push   esi
  4146bc:	stos   BYTE PTR es:[edi],al
  4146bd:	imul   edx,DWORD PTR [eax+ebp*2],0xb8770928
  4146c4:	cmp    al,0x62
  4146c6:	and    eax,0x3ecfbdba
  4146cb:	jo     0x414730
  4146cd:	adc    DWORD PTR [eax-0x30],esi
  4146d0:	mov    eax,0xa558e8fa
  4146d5:	in     eax,dx
  4146d6:	mov    WORD PTR [eax+0x75],fs
  4146d9:	mov    esi,0xf8c73470
  4146de:	jecxz  0x414745
  4146e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4146e1:	jp     0x414701
  4146e3:	cmp    DWORD PTR [edi-0x2893194e],0x83841a24
  4146ed:	test   DWORD PTR [edx-0x2cb5a27b],0x8a4e0c42
  4146f7:	lock add bh,BYTE PTR [esp+esi*1-0x70]
  4146fc:	xor    dh,BYTE PTR [si-0x4a7a]
  414701:	dec    edx
  414702:	jmp    FWORD PTR [ebp-0xb]
  414705:	jge    0x41476c
  414707:	test   ebx,ebp
  414709:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41470a:	jge    0x414702
  41470c:	mov    ebp,0x4ca19bf9
  414711:	mov    bh,0x1b
  414713:	inc    edx
  414714:	stos   BYTE PTR es:[edi],al
  414715:	dec    esp
  414716:	test   BYTE PTR [ebx+0x7e],dl
  414719:	and    BYTE PTR [edi+0x2c],0x73
  41471d:	push   edi
  41471e:	fprem  
  414720:	xchg   esp,eax
  414721:	xchg   esi,eax
  414722:	push   0x49d115f5
  414727:	mov    ah,0x70
  414729:	push   ebp
  41472a:	bound  esp,QWORD PTR [edx-0x71]
  41472d:	inc    ebp
  41472e:	rol    BYTE PTR [ecx-0x20],cl
  414731:	ds stos BYTE PTR es:[edi],al
  414733:	out    dx,al
  414734:	(bad)  
  414735:	push   ds
  414736:	ds pop ebp
  414738:	repnz mov edx,?
  41473b:	retf   0x4641
  41473e:	adc    DWORD PTR [edi-0x10],ebx
  414741:	jnp    0x414713
  414743:	ror    BYTE PTR [edi+0x36ae9e1e],cl
  414749:	adc    ebp,ebp
  41474b:	ficomp WORD PTR [ebx]
  41474d:	dec    esp
  41474e:	js     0x4146db
  414750:	push   ebp
  414751:	rol    BYTE PTR [edx-0x241681b7],1
  414757:	stos   DWORD PTR es:[edi],eax
  414758:	lock out 0xee,eax
  41475b:	dec    ecx
  41475c:	pop    esi
  41475d:	cmp    BYTE PTR [ecx-0xb6dc140],cl
  414763:	mov    ebp,gs
  414765:	mov    edi,DWORD PTR [ecx+eiz*2]
  414768:	(bad)  
  414769:	(bad)  
  41476a:	out    dx,eax
  41476b:	mov    dl,0x65
  41476d:	loope  0x414762
  41476f:	inc    edx
  414770:	repnz and DWORD PTR [edi-0x45],0x62
  414775:	daa    
  414776:	sub    DWORD PTR [eax-0x39],ebx
  414779:	nop
  41477a:	repnz test DWORD PTR [ebx+0x7fe73d22],esp
  414781:	mov    eax,0x771b7758
  414786:	push   edx
  414787:	push   ebp
  414788:	push   0x8872ee66
  41478d:	jne    0x414767
  41478f:	retf   0x9a5d
  414792:	jae    0x414732
  414794:	cli    
  414795:	cdq    
  414796:	lock dec edi
  414798:	lahf   
  414799:	stos   DWORD PTR es:[edi],eax
  41479a:	pop    esi
  41479b:	daa    
  41479c:	les    cx,DWORD PTR [ebx+0x653c5b89]
  4147a3:	xchg   ebx,eax
  4147a4:	iret   
  4147a5:	inc    edx
  4147a6:	and    bh,BYTE PTR [esi-0x3cce4864]
  4147ac:	sbb    bh,ch
  4147ae:	ins    BYTE PTR es:[edi],dx
  4147af:	test   al,0x6
  4147b1:	or     BYTE PTR [edi+ebp*4],0xbe
  4147b5:	aaa    
  4147b6:	ret    
  4147b7:	lahf   
  4147b8:	in     al,dx
  4147b9:	mov    cl,0x7c
  4147bb:	(bad)  [edi-0x45]
  4147be:	sbb    BYTE PTR [ecx+0x5e2f2b87],0x56
  4147c5:	mov    dh,0xaa
  4147c7:	inc    ecx
  4147c8:	ficom  WORD PTR [edx+0x128db325]
  4147ce:	and    dl,BYTE PTR [esp+ebx*1-0x1978de6d]
  4147d5:	fcmovbe st,st(6)
  4147d7:	out    dx,al
  4147d8:	dec    esi
  4147d9:	adc    al,cl
  4147db:	pop    ebx
  4147dc:	(bad)  
  4147dd:	out    dx,al
  4147de:	sub    ebx,ebp
  4147e0:	sbb    DWORD PTR [ebx-0x11a3b0dc],esi
  4147e6:	jno    0x414815
  4147e8:	inc    esp
  4147e9:	adc    BYTE PTR [ecx],cl
  4147eb:	xor    bh,BYTE PTR [ecx-0x5d]
  4147ee:	call   0xfffb0b0f
  4147f3:	jmp    0x6dc6:0xc6dea776
  4147fa:	pop    eax
  4147fb:	mov    ch,0x4f
  4147fd:	xor    dl,BYTE PTR [ebp-0x6b805c8f]
  414803:	(bad)  
  414805:	sbb    DWORD PTR [ecx-0x2d66ffd1],ecx
  41480b:	fsubr  DWORD PTR [ecx+edx*1-0x3b]
  41480f:	repz out 0xe6,al
  414812:	std    
  414813:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414814:	ja     0x414849
  414816:	fstp   DWORD PTR [ecx-0x31]
  414819:	pop    edx
  41481a:	enter  0xbf25,0x3e
  41481e:	sti    
  41481f:	mov    ds:0x1c171083,eax
  414824:	xchg   edi,eax
  414825:	mov    ds:0x4994c693,al
  41482a:	pop    es
  41482b:	jne    0x41489a
  41482d:	repz jne 0x414804
  414830:	repz sbb al,0x91
  414833:	scas   al,BYTE PTR es:[edi]
  414834:	addr16 push edx
  414836:	dec    esi
  414837:	fisub  WORD PTR [eax-0x4a540dbf]
  41483d:	int3   
  41483e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41483f:	xor    edi,DWORD PTR [esi+0x2d03e534]
  414845:	adc    ebp,ecx
  414847:	arpl   WORD PTR [ecx+0xd08bc72],cx
  41484d:	(bad)  
  41484e:	ds dec edi
  414850:	aas    
  414851:	sbb    DWORD PTR [eax-0x443a362b],edi
  414857:	cmp    DWORD PTR [ecx],ebx
  414859:	mov    al,ds:0xd1ec1343
  41485e:	(bad)  
  41485f:	hlt    
  414860:	add    DWORD PTR [ebx],esi
  414862:	push   ss
  414863:	rol    esp,1
  414865:	stc    
  414866:	push   ebp
  414867:	jp     0x4148a2
  414869:	cld    
  41486a:	cmp    ah,BYTE PTR ds:0x336e530b
  414870:	and    eax,0x42329479
  414875:	add    esi,ebp
  414877:	xchg   edx,eax
  414878:	in     al,dx
  414879:	jbe    0x414860
  41487b:	pop    eax
  41487c:	xor    dh,BYTE PTR [ebp-0x4d]
  41487f:	test   BYTE PTR [esi+0x56f9e97],al
  414885:	xchg   esi,eax
  414886:	les    ebx,FWORD PTR [esi-0x39eb84da]
  41488c:	cmp    BYTE PTR [eax+0x48],al
  41488f:	cmp    BYTE PTR [ebx-0x5a],dh
  414892:	popf   
  414893:	popf   
  414894:	mov    cl,0x99
  414896:	mov    edi,eax
  414898:	mov    eax,ds:0xf95aff54
  41489d:	retf   
  41489e:	jmp    0x3afa:0xcac63d9a
  4148a5:	shl    bl,0x88
  4148a8:	add    eax,0xb820a9af
  4148ad:	or     ch,bh
  4148af:	cmc    
  4148b0:	(bad)  
  4148b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4148b2:	mov    WORD PTR [eax],cs
  4148b4:	cmp    eax,0xf045128e
  4148b9:	xchg   ecx,eax
  4148ba:	add    DWORD PTR [edx+0x35],esp
  4148bd:	sti    
  4148be:	jg     0x41484f
  4148c0:	aas    
  4148c1:	and    BYTE PTR [eax+0x6a],0x54
  4148c5:	sbb    al,ah
  4148c7:	sub    al,0x3c
  4148c9:	mov    cl,0xf9
  4148cb:	cmp    al,0x0
  4148cd:	cs ins BYTE PTR es:[edi],dx
  4148cf:	ds mov cl,0x90
  4148d2:	push   edi
  4148d3:	ret    
  4148d4:	(bad)  [ebp+esi*8-0x3f]
  4148d8:	xlat   BYTE PTR ds:[ebx]
  4148d9:	mov    ds:0x1dd2de32,eax
  4148de:	xchg   edi,eax
  4148df:	outs   dx,BYTE PTR ss:[esi]
  4148e1:	adc    eax,DWORD PTR [ebx-0x71]
  4148e4:	loop   0x414904
  4148e6:	adc    cl,BYTE PTR [edx-0x63462298]
  4148ec:	inc    ebp
  4148ed:	clc    
  4148ee:	inc    esi
  4148ef:	arpl   WORD PTR [ecx+0x16],dx
  4148f2:	fist   WORD PTR es:[eax]
  4148f5:	cmp    DWORD PTR [edx-0x80],eax
  4148f8:	aam    0x7e
  4148fa:	mov    ebx,edi
  4148fc:	jns    0x414905
  4148fe:	dec    esi
  4148ff:	sbb    eax,0x82a549a7
  414904:	fs jbe 0x414926
  414907:	out    dx,al
  414908:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414909:	mov    BYTE PTR [ecx],ch
  41490b:	lock cmp DWORD PTR [ecx+ecx*1+0x5f],ebx
  414910:	inc    esi
  414911:	or     BYTE PTR ds:0x283f4a43,ah
  414917:	mov    ecx,0x24611afd
  41491c:	or     BYTE PTR [esi-0x5f],al
  41491f:	mov    cl,0x89
  414921:	dec    esp
  414922:	inc    eax
  414923:	push   esi
  414924:	mov    esp,0x3cb70cc4
  414929:	call   0x3f941923
  41492e:	push   edx
  41492f:	hlt    
  414930:	stc    
  414931:	mov    al,ds:0x909cb372
  414936:	or     BYTE PTR ds:0xe08593bd,cl
  41493c:	mov    eax,ds:0x423d263c
  414941:	jp     0x414960
  414943:	mov    al,0xa6
  414945:	(bad)  
  414946:	call   0x709d:0x50af58a8
  41494d:	push   edx
  41494e:	sbb    eax,0x328ee5f1
  414953:	or     esp,eax
  414955:	test   ch,cl
  414957:	addr16 dec edi
  414959:	xchg   edi,eax
  41495a:	hlt    
  41495b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41495c:	jmp    0x4148f4
  41495e:	(bad)  [ecx+0xe619f65]
  414964:	inc    ebp
  414965:	test   BYTE PTR [ebp-0x29],cl
  414968:	cli    
  414969:	js     0x4149d3
  41496b:	or     dl,BYTE PTR [ebx+0x1c06419e]
  414971:	adc    al,0x27
  414973:	cwde   
  414974:	jmp    0xff9b97a4
  414979:	xchg   esi,eax
  41497a:	xchg   esp,eax
  41497b:	div    DWORD PTR [ecx+0x5cbde097]
  414981:	inc    esp
  414982:	xlat   BYTE PTR ds:[ebx]
  414983:	hlt    
  414984:	mov    esp,0x2ea97758
  414989:	lock or al,0xd8
  41498c:	push   esp
  41498d:	push   ss
  41498e:	mov    bh,BYTE PTR [edx-0x50]
  414991:	inc    edx
  414992:	sar    DWORD PTR [eax+0x16f53d8],cl
  414998:	lea    ecx,[eax-0x690e062e]
  41499e:	inc    esp
  41499f:	mov    edi,0x69cf7b75
  4149a4:	adc    DWORD PTR [esi+0x74],edi
  4149a7:	xor    BYTE PTR [eax],bh
  4149a9:	mov    ds:0x358397a,al
  4149ae:	enter  0x1503,0x1a
  4149b2:	mov    ah,0x55
  4149b4:	xlat   BYTE PTR ds:[ebx]
  4149b5:	dec    ecx
  4149b6:	les    ebp,FWORD PTR [edx*8+0x12bed1b0]
  4149bd:	push   cs
  4149be:	and    BYTE PTR [ebx-0x7],bh
  4149c1:	or     DWORD PTR [esi-0x1],ebp
  4149c4:	xchg   ebx,eax
  4149c5:	cmp    esi,DWORD PTR [ebx]
  4149c7:	movzx  esi,WORD PTR [ecx-0x2e]
  4149cb:	mov    edx,0xa3739f0c
  4149d0:	imul   esi,eax,0xf6343a31
  4149d6:	fidiv  WORD PTR [edx]
  4149d8:	mov    al,BYTE PTR [eax-0x1c]
  4149db:	ret    
  4149dc:	loope  0x4149df
  4149de:	imul   esi,edx,0xa1d5bcde
  4149e4:	sbb    bl,BYTE PTR [esi+0x61]
  4149e7:	or     dl,BYTE PTR [ecx]
  4149e9:	aas    
  4149ea:	add    DWORD PTR [ecx+0x77],0xffffffa2
  4149ee:	shl    ah,1
  4149f0:	adc    al,0xc6
  4149f2:	bound  edi,QWORD PTR [edx+0x55]
  4149f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4149f6:	idiv   DWORD PTR [esi+edx*2-0x2accf0da]
  4149fd:	test   BYTE PTR [edi+ebx*8-0x74],dl
  414a01:	xchg   bl,ch
  414a03:	mov    al,0x8a
  414a05:	mov    bl,0x31
  414a07:	and    ah,BYTE PTR [eax-0x1f]
  414a0a:	dec    esi
  414a0b:	jmp    0x3e61:0xcb09663b
  414a12:	and    ebp,DWORD PTR [ebp-0x3f28c6d3]
  414a18:	sub    al,0x22
  414a1a:	xchg   edx,eax
  414a1b:	daa    
  414a1c:	cmp    cl,ch
  414a1e:	mov    DWORD PTR [ebp+0x55],ecx
  414a21:	in     al,0x56
  414a23:	push   ds
  414a24:	sub    ah,0xed
  414a27:	popf   
  414a28:	aas    
  414a29:	mov    ah,0xa1
  414a2b:	adc    al,al
  414a2d:	xchg   BYTE PTR [eax+edi*8-0x10],bl
  414a31:	imul   edx,DWORD PTR [eax+0x4bf6081c],0xee300ee8
  414a3b:	data16 xor dl,BYTE PTR [edi+edx*1]
  414a3f:	popa   
  414a40:	jle    0x414aa6
  414a42:	or     eax,0x20f20dff
  414a47:	xor    eax,0x214c658c
  414a4c:	test   BYTE PTR [edi],0x37
  414a4f:	inc    edx
  414a50:	pop    es
  414a51:	cmp    al,0x3a
  414a53:	sub    DWORD PTR [edi+eiz*4],ecx
  414a56:	not    DWORD PTR [eax+ebp*8-0x3d28dc54]
  414a5d:	pushf  
  414a5e:	(bad)  
  414a61:	call   0xc897:0x131a1421
  414a68:	ins    DWORD PTR es:[edi],dx
  414a69:	jno    0x414a0d
  414a6b:	into   
  414a6c:	(bad)  
  414a6d:	aas    
  414a6e:	adc    ebp,DWORD PTR [edx+eax*2]
  414a71:	repnz and ax,0x1768
  414a76:	in     al,0xae
  414a78:	jge    0x414aea
  414a7a:	cs and al,0xeb
  414a7d:	sub    DWORD PTR [edi],eax
  414a7f:	clc    
  414a80:	push   edx
  414a81:	retf   
  414a82:	in     al,0x2e
  414a84:	sbb    eax,DWORD PTR [si+0x40]
  414a88:	and    al,0x34
  414a8a:	jnp    0x414b01
  414a8c:	(bad)  
  414a8d:	or     al,0x16
  414a8f:	sahf   
  414a90:	add    DWORD PTR [edi-0x58],ecx
  414a93:	push   esi
  414a94:	out    dx,eax
  414a95:	lock dec ebp
  414a97:	mov    esi,0xfc99dd75
  414a9c:	push   0xffffffc9
  414a9e:	mov    ebp,0x664399
  414aa3:	cmp    DWORD PTR [ebx+0x1efbee2e],esp
  414aa9:	lea    edi,[ecx]
  414aab:	pop    eax
  414aac:	pcmpeqd mm1,QWORD PTR [ebx+0x3b]
  414ab0:	jne    0x414acd
  414ab2:	and    DWORD PTR [edx],ebp
  414ab4:	jbe    0x414a5c
  414ab6:	push   ecx
  414ab7:	pop    eax
  414ab8:	add    ah,ch
  414aba:	mov    fs:0x13ed3367,al
  414ac0:	inc    ebp
  414ac1:	call   0x5dfa:0x516e1113
  414ac8:	stc    
  414ac9:	loope  0x414aa7
  414acb:	mov    edx,0xb5ba932e
  414ad0:	cdq    
  414ad1:	bswap  edi
  414ad3:	imul   esp,DWORD PTR [ecx+0x3ef26847],0xffffffcf
  414ada:	mov    esi,0xa3f54235
  414adf:	popa   
  414ae0:	repz std 
  414ae2:	stc    
  414ae3:	dec    ecx
  414ae4:	fistp  WORD PTR [ebx-0x45360841]
  414aea:	fild   QWORD PTR [eax-0x6ae84ae8]
  414af0:	xchg   ebp,eax
  414af1:	jmp    0x414aa2
  414af3:	adc    DWORD PTR [ebp-0x62b953ff],ebp
  414af9:	lock in al,dx
  414afb:	lods   eax,DWORD PTR ds:[esi]
  414afc:	out    0xcf,al
  414afe:	add    BYTE PTR [esi],ah
  414b00:	fadd   DWORD PTR [esi-0x45]
  414b03:	mov    esp,eax
  414b05:	rcl    DWORD PTR [eax+0x22],1
  414b08:	sbb    BYTE PTR [ecx+0x3d],ah
  414b0b:	cmp    ebx,edi
  414b0d:	xor    DWORD PTR [eax],eax
  414b0f:	into   
  414b10:	mov    ebp,0x2fb34920
  414b15:	inc    ebx
  414b16:	xor    BYTE PTR [ecx-0x69bad9c0],dh
  414b1c:	mov    esi,0xf44c9da3
  414b21:	mov    dh,0xa4
  414b23:	or     ch,BYTE PTR [ebx+0x48]
  414b26:	and    eax,0x79fb6968
  414b2b:	xchg   ecx,eax
  414b2c:	test   BYTE PTR ds:0xcafb5076,al
  414b32:	mov    ds:0x779a6049,al
  414b37:	push   ebx
  414b38:	xchg   BYTE PTR [edx+0x33],bl
  414b3b:	pop    eax
  414b3c:	cdq    
  414b3d:	sbb    DWORD PTR [esi-0x8be4dde],eax
  414b43:	repnz ficomp WORD PTR [ebx]
  414b46:	push   edi
  414b47:	dec    esi
  414b48:	dec    ebx
  414b49:	or     al,0x98
  414b4b:	and    eax,0xa93e1063
  414b50:	nop
  414b51:	out    0x8a,al
  414b53:	jns    0x414b80
  414b55:	arpl   WORD PTR [ebp+0x2a7b85b3],di
  414b5b:	xor    BYTE PTR [edx+0x56],ch
  414b5e:	aad    0x96
  414b60:	mov    ebp,DWORD PTR [ecx-0x61]
  414b63:	retf   0xaf8d
  414b66:	push   esi
  414b67:	or     esp,ebp
  414b69:	jp     0x414b64
  414b6b:	mov    dl,ch
  414b6d:	mov    dl,0xf8
  414b6f:	mov    ebp,0x596804b7
  414b74:	or     BYTE PTR [edi+ecx*1+0x79],ch
  414b78:	in     al,dx
  414b79:	add    DWORD PTR [edx],esp
  414b7b:	out    dx,al
  414b7c:	stc    
  414b7d:	rcr    BYTE PTR [ebx-0x629ef620],1
  414b83:	test   al,0x9f
  414b85:	dec    eax
  414b86:	int    0x99
  414b88:	mov    ecx,0x47513101
  414b8d:	add    al,al
  414b8f:	outs   dx,BYTE PTR ds:[esi]
  414b90:	(bad)  
  414b91:	imul   ecx,DWORD PTR [edi-0x9165758],0x2a6b37d6
  414b9b:	or     al,0xcd
  414b9d:	adc    bl,bh
  414b9f:	add    esi,DWORD PTR [ebp+esi*8-0x63b4c131]
  414ba6:	sub    eax,0xa9bd8b91
  414bab:	push   ds
  414bac:	push   es
  414bad:	or     ah,ch
  414baf:	sub    al,0x24
  414bb1:	push   ss
  414bb2:	jo     0x414be0
  414bb4:	sbb    al,0xdf
  414bb6:	imul   edx,DWORD PTR [edx+ecx*4-0x1d485a66],0x27
  414bbe:	xchg   esp,eax
  414bbf:	mov    DWORD PTR [ebp-0x2898c371],esi
  414bc5:	ret    0xafd9
  414bc8:	mov    bh,dl
  414bca:	les    eax,FWORD PTR [edi+0x5bad631c]
  414bd0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414bd1:	mov    bh,0x63
  414bd3:	addr16 clc 
  414bd5:	lock pusha 
  414bd7:	mov    edx,0xb9088a5a
  414bdc:	mov    dl,0x1d
  414bde:	mov    eax,0x2c576518
  414be3:	or     DWORD PTR [ebx],eax
  414be5:	leave  
  414be6:	add    DWORD PTR [eax-0x73],0x48
  414bea:	adc    DWORD PTR [ebp+edi*4-0x48],esi
  414bee:	sar    DWORD PTR [ebp+0x4c],0x4a
  414bf2:	mov    eax,0x399d0117
  414bf7:	iret   
  414bf8:	jecxz  0x414c38
  414bfa:	fcom   DWORD PTR [esi-0x7ce2bc40]
  414c00:	add    eax,0xc55c704
  414c05:	mov    bl,0xf1
  414c07:	loopne 0x414c6b
  414c09:	scas   al,BYTE PTR es:[edi]
  414c0a:	or     edi,esi
  414c0c:	cmp    al,0xf6
  414c0e:	xlat   BYTE PTR ds:[ebx]
  414c0f:	push   esp
  414c10:	cli    
  414c11:	and    esi,DWORD PTR [edi+0x57625fa]
  414c17:	add    bh,cl
  414c19:	mov    BYTE PTR [edx+0x10264f49],ah
  414c1f:	arpl   WORD PTR [eax],bx
  414c21:	int3   
  414c22:	jo     0x414c80
  414c24:	mov    bh,0x6
  414c26:	jbe    0x414c32
  414c28:	int    0x4e
  414c2a:	nop
  414c2b:	out    dx,eax
  414c2c:	ficom  DWORD PTR [ebx]
  414c2e:	xchg   esp,eax
  414c2f:	jb     0x414bd0
  414c31:	sar    BYTE PTR [ebp+0x2b53b311],cl
  414c37:	out    dx,eax
  414c38:	jnp    0x414c7b
  414c3a:	fstp   DWORD PTR ds:0x2f08aec8
  414c40:	jne    0x414c0e
  414c42:	inc    ebx
  414c43:	aaa    
  414c44:	aas    
  414c45:	loope  0x414c19
  414c47:	mov    dl,0xfa
  414c49:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414c4b:	lock sub al,0xbe
  414c4e:	and    BYTE PTR [eax],bl
  414c50:	jbe    0x414c55
  414c52:	jge    0x414c08
  414c54:	add    DWORD PTR [ebp+0x70],0xe63f437e
  414c5b:	lock push esi
  414c5d:	(bad)  
  414c5e:	fild   WORD PTR [esi+0x12]
  414c61:	jo     0x414cca
  414c63:	dec    ebx
  414c64:	imul   esp,DWORD PTR ds:[ebx-0x46],0x6f6a7f6
  414c6c:	pop    esi
  414c6d:	cmp    eax,0x1ace0ad5
  414c72:	mov    bh,0xc1
  414c74:	or     DWORD PTR [edx+0x66],0xffffffb0
  414c78:	adc    dh,BYTE PTR [eax]
  414c7a:	mov    ebp,0x82c4f6ec
  414c7f:	mov    DWORD PTR [edx],esi
  414c81:	ins    DWORD PTR es:[edi],dx
  414c82:	inc    eax
  414c83:	aas    
  414c84:	jnp    0x414ce6
  414c86:	mov    ch,0xc
  414c88:	lods   al,BYTE PTR fs:[esi]
  414c8a:	fcmovu st,st(2)
  414c8c:	xchg   ebx,eax
  414c8d:	adc    eax,0x86260233
  414c92:	cmp    ch,BYTE PTR [ecx+0x7c]
  414c95:	jge    0x414c39
  414c97:	cmp    edx,DWORD PTR [eax-0x22314090]
  414c9d:	mov    bl,BYTE PTR ds:0x3a342233
  414ca3:	inc    eax
  414ca4:	jbe    0x414c51
  414ca6:	or     eax,0x6ff1b9eb
  414cab:	xor    cl,dl
  414cad:	mov    ah,0x89
  414caf:	dec    eax
  414cb0:	cld    
  414cb1:	loope  0x414d04
  414cb3:	and    DWORD PTR [edx+0x461fdb54],0xea91b85
  414cbd:	stos   BYTE PTR es:[edi],al
  414cbe:	out    0x5f,al
  414cc0:	arpl   WORD PTR [edx],dx
  414cc2:	jecxz  0x414cae
  414cc4:	jno    0x414cd1
  414cc6:	fcomp  QWORD PTR ds:0xdef0ade5
  414ccc:	ins    DWORD PTR es:[edi],dx
  414ccd:	lods   eax,DWORD PTR ds:[esi]
  414cce:	or     edi,esp
  414cd0:	js     0x414cdb
  414cd2:	jne    0x414c8a
  414cd4:	out    dx,eax
  414cd5:	add    ecx,DWORD PTR [ecx]
  414cd7:	scas   al,BYTE PTR es:[edi]
  414cd8:	clc    
  414cd9:	mov    WORD PTR [ebx],es
  414cdb:	(bad)  
  414cdc:	adc    DWORD PTR [eax],ebx
  414cde:	ffree  st(0)
  414ce0:	inc    ebx
  414ce1:	imul   BYTE PTR [ebx]
  414ce3:	out    0x31,al
  414ce5:	test   BYTE PTR [ecx+0x30],ah
  414ce8:	push   eax
  414ce9:	(bad)  
  414ceb:	neg    DWORD PTR ds:[ebp-0x4fbe8239]
  414cf2:	cmp    BYTE PTR [esp+ebp*2+0x69d9cd6e],ch
  414cf9:	adc    esp,esp
  414cfb:	adc    DWORD PTR [ecx-0x6e],esp
  414cfe:	in     al,dx
  414cff:	(bad)  
  414d01:	jmp    0x78f8:0x2e3f3549
  414d08:	add    ah,BYTE PTR [edx-0x5]
  414d0b:	mov    ecx,0x4a2aa299
  414d10:	xor    al,0x60
  414d12:	test   BYTE PTR [eax+0x23a3be60],bl
  414d18:	add    ebp,ebp
  414d1a:	sbb    eax,DWORD PTR [edx+0x2b]
  414d1d:	sub    al,al
  414d1f:	daa    
  414d20:	push   DWORD PTR ds:0x9cf315ec
  414d26:	sub    BYTE PTR [eax-0x1a],0x40
  414d2a:	(bad)  
  414d2b:	retf   0x59c2
  414d2e:	ret    0x6597
  414d31:	push   cs
  414d32:	arpl   WORD PTR [ebx],sp
  414d34:	or     eax,0xc7083dd3
  414d39:	dec    ebx
  414d3a:	sti    
  414d3b:	shr    BYTE PTR [edx+ebx*4-0x7d],0x60
  414d40:	or     DWORD PTR [edx+0x26fdad7d],ebx
  414d46:	int    0x94
  414d48:	push   esi
  414d49:	adc    DWORD PTR [ebx],0xffffffeb
  414d4c:	in     al,0xb
  414d4e:	cdq    
  414d4f:	in     eax,dx
  414d50:	call   FWORD PTR [edi+esi*2]
  414d53:	push   cs
  414d54:	dec    esp
  414d55:	dec    esi
  414d56:	sahf   
  414d57:	adc    al,0xdb
  414d59:	ret    
  414d5a:	dec    esi
  414d5b:	lds    eax,FWORD PTR [ecx]
  414d5d:	xor    bh,dh
  414d5f:	daa    
  414d60:	push   es
  414d61:	xchg   DWORD PTR [ebx+eax*1+0x515f4bed],edx
  414d68:	push   esi
  414d69:	mov    ch,0xd
  414d6b:	ins    DWORD PTR es:[edi],dx
  414d6c:	clc    
  414d6d:	imul   esi,DWORD PTR [esi+0x4afb2789],0x6
  414d74:	adc    al,0x83
  414d76:	mov    ebp,0xb24c63c
  414d7b:	or     al,0x4a
  414d7d:	adc    BYTE PTR [ecx],dl
  414d7f:	int    0x6b
  414d81:	test   eax,0x561e7b42
  414d86:	nop
  414d87:	xchg   DWORD PTR [ecx],esp
  414d89:	and    DWORD PTR [esi],eax
  414d8b:	cmp    BYTE PTR [eax],bl
  414d8d:	aas    
  414d8e:	adc    ebx,DWORD PTR [ecx]
  414d90:	sub    dl,ch
  414d92:	mov    ds:0xd327f1b,al
  414d97:	ror    BYTE PTR [esi],0x5
  414d9a:	push   ecx
  414d9b:	repz jl 0x414e18
  414d9e:	arpl   WORD PTR [esi],di
  414da0:	xor    al,0xf
  414da2:	sub    eax,0xb9c1b56
  414da7:	jne    0x414d83
  414da9:	jmp    0x414d52
  414dab:	mov    ah,0x2f
  414dad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414dae:	push   edx
  414daf:	sahf   
  414db0:	cmp    al,0x58
  414db2:	mov    bh,0x7
  414db4:	sbb    al,0x7c
  414db6:	repz fs dec ebx
  414db9:	push   ebx
  414dba:	(bad)  
  414dbb:	mov    BYTE PTR [edx+ebp*1+0x44],0x22
  414dc0:	mov    bl,ah
  414dc2:	outs   dx,DWORD PTR ds:[esi]
  414dc3:	outs   dx,DWORD PTR ds:[esi]
  414dc4:	xchg   esp,eax
  414dc5:	out    0x5,eax
  414dc7:	sbb    eax,0x23129e1c
  414dcc:	sti    
  414dcd:	push   0x298619a5
  414dd2:	xchg   esp,eax
  414dd3:	jb     0x414e4c
  414dd5:	popa   
  414dd6:	sar    bh,cl
  414dd8:	fsubr  QWORD PTR [ebx]
  414dda:	mov    ?,eax
  414ddc:	or     dh,BYTE PTR [ecx+0x30]
  414ddf:	out    0xd6,eax
  414de1:	cmp    ecx,edx
  414de3:	(bad)  
  414de5:	lods   al,BYTE PTR ds:[esi]
  414de6:	in     eax,0x8e
  414de8:	loop   0x414e14
  414dea:	iret   
  414deb:	stos   DWORD PTR es:[edi],eax
  414dec:	mov    edx,0x604c5415
  414df1:	popf   
  414df2:	scas   eax,DWORD PTR es:[edi]
  414df3:	ficom  DWORD PTR [eax+0x4bb636b6]
  414df9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414dfa:	xchg   esi,eax
  414dfb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414dfc:	mov    ebx,0xe5e2ab62
  414e01:	retf   0x1b46
  414e04:	retf   0x62b6
  414e07:	xchg   edi,eax
  414e08:	clc    
  414e09:	jg     0x414da9
  414e0b:	cmp    DWORD PTR ds:0xfa1d74a9,edi
  414e11:	inc    ecx
  414e12:	outs   dx,BYTE PTR ds:[esi]
  414e13:	mov    esp,0x38439e07
  414e18:	leave  
  414e19:	xchg   ebp,eax
  414e1a:	sahf   
  414e1b:	pop    ecx
  414e1c:	sub    eax,0x5efb1e51
  414e21:	sbb    eax,0xf380c7a1
  414e26:	dec    edx
  414e27:	jo     0x414e72
  414e29:	je     0x414dd2
  414e2b:	setbe  dh
  414e2e:	addr16 loop 0x414e24
  414e31:	sbb    edi,ecx
  414e33:	scas   al,BYTE PTR es:[edi]
  414e34:	inc    ebp
  414e35:	xchg   DWORD PTR [edx+0x52],ecx
  414e38:	xor    eax,0x1058435b
  414e3d:	xchg   ebx,eax
  414e3e:	call   0xb04c7e1f
  414e43:	shr    DWORD PTR [eax+0x66129638],cl
  414e49:	add    al,0xd6
  414e4b:	fidiv  DWORD PTR [ebx+0x2e36fb7f]
  414e51:	aaa    
  414e52:	xchg   ebx,eax
  414e53:	mov    ds:0x2de426f6,al
  414e58:	rcr    bl,cl
  414e5a:	leave  
  414e5b:	mov    ds:0x8682e816,eax
  414e60:	dec    eax
  414e61:	or     DWORD PTR [eax+0x660df4bf],edi
  414e67:	stos   DWORD PTR es:[edi],eax
  414e68:	int3   
  414e69:	or     BYTE PTR [ebp+0x7d],dh
  414e6c:	add    ch,BYTE PTR [esi*1-0x2db36550]
  414e73:	inc    edi
  414e74:	sbb    dl,bh
  414e76:	or     dl,cl
  414e78:	inc    esp
  414e7a:	clc    
  414e7b:	enter  0xdd03,0xe
  414e7f:	xchg   ebp,eax
  414e80:	xchg   DWORD PTR [esi],esp
  414e82:	and    eax,0xc3a1e136
  414e87:	in     eax,dx
  414e88:	adc    DWORD PTR [eax*8+0x4780337d],ebp
  414e8f:	pop    edi
  414e90:	icebp  
  414e91:	cmp    edx,ebp
  414e93:	add    BYTE PTR [edi],ah
  414e95:	push   ecx
  414e96:	ins    DWORD PTR es:[edi],dx
  414e97:	shl    DWORD PTR ds:0x22a04044,cl
  414e9d:	fucomi st,st(1)
  414e9f:	neg    BYTE PTR [ebx-0x362ab063]
  414ea5:	cmp    BYTE PTR [ebp-0x112b8387],al
  414eab:	xor    al,0x7e
  414ead:	pop    esp
  414eae:	mov    BYTE PTR [ebx+edx*4],dh
  414eb1:	inc    ecx
  414eb2:	or     eax,0x264d5e62
  414eb7:	lods   al,BYTE PTR ds:[esi]
  414eb8:	std    
  414eb9:	sbb    al,0x88
  414ebb:	cmp    BYTE PTR [edi+0x30e8342b],0x9a
  414ec2:	inc    ebx
  414ec3:	lods   al,BYTE PTR ds:[esi]
  414ec4:	and    ebp,DWORD PTR [ebx]
  414ec6:	push   ebx
  414ec7:	out    dx,al
  414ec8:	fsub   QWORD PTR ss:0x55a82da3
  414ecf:	jae    0x414ec8
  414ed1:	push   ebx
  414ed2:	popa   
  414ed3:	mov    eax,ds:0xdfa6e95c
  414ed8:	test   eax,0xb192b0e5
  414edd:	cmc    
  414ede:	call   0x8df6:0xd06f952d
  414ee5:	scas   al,BYTE PTR es:[edi]
  414ee6:	lahf   
  414ee7:	out    0x8b,al
  414ee9:	int    0x67
  414eeb:	pushf  
  414eec:	js     0x414ea8
  414eee:	jnp    0x414ec0
  414ef0:	jl     0x414f5a
  414ef2:	loopne 0x414e90
  414ef4:	and    al,BYTE PTR [ecx]
  414ef6:	adc    eax,0x21d68e2
  414efb:	dec    ecx
  414efc:	sahf   
  414efd:	loop   0x414edd
  414eff:	inc    edx
  414f00:	jno    0x414edb
  414f02:	fbstp  TBYTE PTR [edx]
  414f04:	jp     0x414ef9
  414f06:	test   DWORD PTR [ecx],ebp
  414f08:	xchg   edi,eax
  414f09:	lock ret 0xaaa8
  414f0d:	ficom  WORD PTR [esi+0x4e]
  414f10:	aad    0xa4
  414f12:	iret   
  414f13:	aad    0xa
  414f15:	out    dx,al
  414f16:	repz popa 
  414f18:	data16 jecxz 0x414ecc
  414f1b:	sub    al,bl
  414f1d:	es or  eax,0x4d988d1d
  414f23:	push   esp
  414f24:	sbb    eax,0x89df1ca3
  414f29:	ins    DWORD PTR es:[edi],dx
  414f2a:	mov    edx,0x25df4d97
  414f2f:	pop    ebx
  414f30:	rcr    bh,cl
  414f32:	leave  
  414f33:	jecxz  0x414ecc
  414f35:	and    BYTE PTR [ecx+0x67277a9b],al
  414f3b:	pop    ebp
  414f3c:	sbb    DWORD PTR [ebp-0x67],ebp
  414f3f:	or     edx,DWORD PTR [ebx*2+0x2b21f61b]
  414f46:	xor    DWORD PTR [esi-0x6f],edx
  414f49:	aaa    
  414f4a:	xchg   ebx,eax
  414f4b:	jg     0x414f25
  414f4d:	xor    eax,DWORD PTR [eax-0x68fc2c2b]
  414f53:	mov    dh,0xca
  414f55:	cld    
  414f56:	inc    ebx
  414f57:	je     0x414f3f
  414f59:	jno    0x414f4b
  414f5b:	fisubr WORD PTR [eax]
  414f5d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414f5e:	sahf   
  414f5f:	lock xchg ebx,eax
  414f61:	aaa    
  414f62:	int3   
  414f63:	out    0x2b,eax
  414f65:	inc    edi
  414f66:	popa   
  414f67:	ret    
  414f68:	stc    
  414f69:	xchg   esp,eax
  414f6a:	push   0xffffffdc
  414f6c:	cli    
  414f6d:	jb     0x414f62
  414f6f:	push   eax
  414f70:	shr    esi,cl
  414f72:	sub    bl,BYTE PTR [ebp-0x7fbf13a8]
  414f78:	push   ebx
  414f79:	add    al,ch
  414f7b:	or     ch,BYTE PTR [ebp+0xf]
  414f7e:	push   ss
  414f7f:	popa   
  414f80:	cmp    eax,0xf41a5fe8
  414f85:	sbb    ebx,edi
  414f87:	mov    WORD PTR [ebx+0x48],?
  414f8a:	je     0x414f7a
  414f8c:	sbb    edx,DWORD PTR [edx]
  414f8e:	pop    es
  414f8f:	cmp    DWORD PTR [ecx],0xffffffd4
  414f92:	(bad)  
  414f93:	stos   BYTE PTR es:[edi],al
  414f94:	in     al,dx
  414f95:	cmp    al,0xce
  414f97:	ret    
  414f98:	xchg   esi,eax
  414f99:	in     al,dx
  414f9a:	cmp    ebx,0x43
  414f9d:	push   ds
  414f9e:	lds    edx,FWORD PTR [ebx-0x23df067]
  414fa4:	loopne 0x414f7f
  414fa6:	and    eax,ecx
  414fa8:	dec    eax
  414fa9:	dec    ecx
  414faa:	jecxz  0x414f51
  414fac:	(bad)  
  414fad:	cli    
  414fae:	inc    edx
  414faf:	mov    ecx,0x64706c4a
  414fb4:	and    eax,0x1555c1a9
  414fb9:	add    al,0x4d
  414fbb:	imul   ebp,DWORD PTR [ebx-0x4cff1e3],0xe4ee5d06
  414fc5:	outs   dx,DWORD PTR ds:[esi]
  414fc6:	shr    BYTE PTR [ebx+0x24],0x43
  414fca:	mov    ds,WORD PTR [esp+edi*8]
  414fcd:	sbb    esi,edx
  414fcf:	sub    bl,BYTE PTR [esi+ecx*8]
  414fd2:	jno    0x414ff0
  414fd4:	ins    BYTE PTR es:[edi],dx
  414fd5:	xor    eax,0xe722a3aa
  414fda:	sahf   
  414fdb:	or     al,0x87
  414fdd:	cmp    ah,bh
  414fdf:	hlt    
  414fe0:	mov    edx,0x32472b88
  414fe5:	and    dl,0xeb
  414fe8:	imul   esi,eax,0x68
  414feb:	add    ch,BYTE PTR [ebx-0x7a]
  414fee:	stos   DWORD PTR es:[edi],eax
  414fef:	shl    BYTE PTR [edi+0x23fa8b56],cl
  414ff5:	pusha  
  414ff6:	push   ss
  414ff7:	mov    ebp,0x176bb344
  414ffc:	jp     0x414f80
  414ffe:	xchg   edx,eax
  414fff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415000:	test   eax,0xa36dd5a6
  415005:	repnz popa 
  415007:	loope  0x41505d
  415009:	retf   
  41500a:	inc    ecx
  41500b:	jmp    0x41506c
  41500d:	ret    0x5cd4
  415010:	push   ds
  415011:	(bad)  
  415012:	cmp    ecx,0xffffffae
  415015:	popa   
  415016:	mov    ds:0x592265be,al
  41501b:	mov    ds:0x9b3f7f5b,eax
  415020:	fwait
  415021:	or     eax,0x1f89d33c
  415026:	mov    dl,0x1a
  415028:	dec    eax
  415029:	sbb    DWORD PTR [edi],eax
  41502b:	and    esp,edi
  41502d:	fimul  DWORD PTR [esi+0x0]
  415030:	rcl    BYTE PTR [edi-0x7f],0xd9
  415034:	and    ah,bh
  415036:	(bad)  
  415037:	mov    dh,0x21
  415039:	popa   
  41503a:	test   BYTE PTR [eax],bh
  41503c:	sbb    BYTE PTR [eax+esi*1+0x7fa913ad],0xb4
  415044:	js     0x414ffe
  415046:	test   DWORD PTR [edx],esp
  415048:	ror    ch,0xa6
  41504b:	jg     0x4150a4
  41504d:	push   ecx
  41504e:	dec    esp
  41504f:	adc    DWORD PTR [ebx+ebx*4-0x35],ebx
  415053:	int3   
  415054:	retf   
  415055:	jmp    0x71869481
  41505a:	mov    esp,0xf68565fa
  41505f:	xchg   ebx,eax
  415060:	xchg   BYTE PTR [esp+ebx*4-0x1b1fa948],ch
  415067:	cmp    DWORD PTR [edx+0x367c693f],ecx
  41506d:	and    eax,0x196998d9
  415072:	fisub  WORD PTR [esi]
  415074:	dec    ecx
  415075:	dec    ecx
  415076:	jae    0x415005
  415078:	cmp    DWORD PTR [esi-0x36],ecx
  41507b:	mov    ah,0x51
  41507d:	or     al,0xfa
  41507f:	or     BYTE PTR [ebp-0x56694bda],dh
  415085:	stc    
  415086:	hlt    
  415087:	inc    esi
  415088:	(bad)  
  415089:	lahf   
  41508a:	jle    0x41503e
  41508c:	jns    0x4150b1
  41508e:	sub    al,0xff
  415090:	inc    esi
  415091:	cmp    DWORD PTR [eax+0x4d],ebx
  415094:	fdivr  QWORD PTR [esi]
  415096:	mov    dh,0xd0
  415098:	inc    esp
  415099:	cmc    
  41509a:	add    al,0x8a
  41509c:	fiadd  WORD PTR [esi+0x28]
  41509f:	mov    ah,0x5b
  4150a1:	imul   ebp,DWORD PTR [ebx+0x37],0xb21e25fa
  4150a8:	fistp  QWORD PTR [ecx]
  4150aa:	add    DWORD PTR [esi],eax
  4150ac:	jle    0x41507b
  4150ae:	adc    al,0x66
  4150b0:	jnp    0x4150f6
  4150b2:	aad    0x62
  4150b4:	leave  
  4150b5:	retf   0x1894
  4150b8:	aad    0x53
  4150ba:	retf   0xbb42
  4150bd:	(bad)
  4150c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4150c1:	in     al,0x11
  4150c3:	mov    eax,0xe7b9a8ad
  4150c8:	xchg   dl,ah
  4150ca:	sbb    esp,esp
  4150cc:	pop    esp
  4150cd:	lods   eax,DWORD PTR ds:[esi]
  4150ce:	mov    esi,0x1ff3f168
  4150d3:	add    eax,0x8a2bd311
  4150d8:	inc    ebx
  4150d9:	and    BYTE PTR [ecx],ch
  4150db:	nop
  4150dc:	jo     0x415080
  4150de:	cdq    
  4150df:	pop    es
  4150e0:	outs   dx,BYTE PTR ds:[esi]
  4150e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4150e2:	sbb    al,0xe2
  4150e4:	jmp    0x415134
  4150e6:	push   es
  4150e7:	in     al,dx
  4150e8:	iret   
  4150e9:	aad    0xe7
  4150eb:	in     al,dx
  4150ec:	or     al,0x28
  4150ee:	test   al,0xec
  4150f0:	in     eax,0x1f
  4150f2:	leave  
  4150f3:	and    edi,DWORD PTR [edi]
  4150f5:	mov    ch,BYTE PTR [ecx-0x56]
  4150f8:	xchg   ebp,eax
  4150f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4150fa:	mov    ebp,0xe862d923
  4150ff:	stos   BYTE PTR es:[edi],al
  415100:	iret   
  415101:	out    0xbf,al
  415103:	jp     0x4150b0
  415105:	jno    0x41514b
  415107:	test   BYTE PTR [edi-0x5c2aa18e],bl
  41510d:	scas   al,BYTE PTR es:[edi]
  41510e:	leave  
  41510f:	loopne 0x4150ca
  415111:	adc    eax,DWORD PTR [ebx]
  415113:	imul   esp,DWORD PTR [ebx-0x45],0x4
  415117:	test   DWORD PTR [ecx+ebp*4-0x945acaa],0x6a230165
  415122:	je     0x415173
  415124:	cmp    al,0x51
  415126:	adc    DWORD PTR [ecx+0x5c],edi
  415129:	ins    DWORD PTR es:[edi],dx
  41512a:	push   es
  41512b:	ins    DWORD PTR es:[edi],dx
  41512c:	mov    ebx,0x41114f98
  415131:	repz dec ecx
  415133:	xor    BYTE PTR [esi+0x5983576a],cl
  415139:	test   al,0x82
  41513b:	scas   eax,DWORD PTR es:[edi]
  41513c:	cli    
  41513d:	ins    DWORD PTR es:[edi],dx
  41513e:	jae    0x4150f2
  415140:	mov    edx,DWORD PTR ds:0x5050fce7
  415146:	cmp    ch,BYTE PTR [esi]
  415148:	xor    BYTE PTR gs:[esi+0x33],bh
  41514c:	mov    esi,DWORD PTR [ecx]
  41514e:	fnstenv [eax+0xc]
  415151:	call   0x8770:0xc9a056c5
  415158:	inc    ecx
  415159:	data16 (bad) 
  41515b:	add    esp,edx
  41515d:	ss push ebx
  41515f:	inc    ebp
  415160:	sub    dh,BYTE PTR ds:0x23f82ec2
  415166:	popf   
  415167:	mov    ebx,0x5864f903
  41516c:	dec    ebp
  41516d:	ins    DWORD PTR es:[edi],dx
  41516e:	sbb    DWORD PTR [edi+0x435f97a2],edx
  415174:	in     eax,0xb7
  415176:	pop    edi
  415177:	jns    0x4151ad
  415179:	dec    esi
  41517a:	or     DWORD PTR [ecx-0x1b],eax
  41517d:	sub    al,0xa4
  41517f:	add    al,0xe0
  415181:	jbe    0x41513a
  415183:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415184:	in     eax,0xc9
  415186:	cld    
  415187:	mov    al,0xc0
  415189:	jmp    0xefcf:0x33b5cdad
  415190:	push   eax
  415191:	(bad)  
  415193:	pop    esi
  415194:	daa    
  415195:	nop
  415196:	retf   
  415197:	add    BYTE PTR [eax+0x7bb218d3],ch
  41519d:	leave  
  41519e:	xchg   esp,eax
  41519f:	adc    eax,0x6907d8b9
  4151a4:	int    0x97
  4151a6:	sbb    al,0xfd
  4151a8:	aam    0xc2
  4151aa:	in     eax,dx
  4151ab:	repz push ds
  4151ad:	retf   
  4151ae:	mov    WORD PTR [edx-0x77],ds
  4151b1:	jns    0x41514f
  4151b3:	xor    esi,DWORD PTR [edi]
  4151b5:	cmp    BYTE PTR [esi-0x2f5a071c],dl
  4151bb:	sub    eax,0xe77f6a03
  4151c0:	xlat   BYTE PTR ds:[ebx]
  4151c1:	and    al,0x75
  4151c3:	mov    bh,0x63
  4151c5:	add    bl,BYTE PTR [edi-0x11]
  4151c8:	mov    ah,0xcf
  4151ca:	add    ebx,DWORD PTR [ecx+0x73]
  4151cd:	cmc    
  4151ce:	mov    ds:0xf73b9de9,eax
  4151d3:	mov    al,ds:0xfde2c463
  4151d8:	(bad)  
  4151d9:	pop    edi
  4151da:	and    al,0xe1
  4151dc:	jnp    0x415162
  4151de:	pop    ebx
  4151df:	test   DWORD PTR [edx+0x3161b741],edx
  4151e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4151e6:	repz in al,0x98
  4151e9:	inc    ebx
  4151ea:	and    eax,0xeaf8d3a2
  4151ef:	lea    edx,[edx+0x2daea454]
  4151f5:	adc    DWORD PTR [ebx],ebx
  4151f7:	dec    edx
  4151f8:	lods   al,BYTE PTR ds:[esi]
  4151f9:	jl     0x41524f
  4151fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4151fc:	jae    0x41524f
  4151fe:	mov    bl,0xb2
  415200:	cli    
  415201:	jle    0x415192
  415203:	outs   dx,DWORD PTR ds:[esi]
  415204:	ror    BYTE PTR [esp+eiz*2],cl
  415207:	or     dl,bh
  415209:	xchg   ecx,eax
  41520a:	fnstcw WORD PTR [edx+0x46]
  41520d:	into   
  41520e:	repnz sub BYTE PTR [edi-0x2e99066a],cl
  415215:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415216:	les    ebx,FWORD PTR ss:[eax]
  415219:	(bad)  
  41521a:	pop    ebp
  41521b:	xchg   edx,eax
  41521c:	test   BYTE PTR [eax],dh
  41521e:	test   BYTE PTR ds:0xc952426d,bl
  415224:	push   eax
  415225:	out    0xcc,al
  415227:	mov    WORD PTR [ecx],ss
  415229:	xchg   ecx,eax
  41522a:	shl    BYTE PTR [eax-0x38],1
  41522d:	pop    ebp
  41522e:	inc    ecx
  41522f:	pusha  
  415230:	xchg   ch,ah
  415232:	or     eax,0xdf2c5891
  415237:	repnz loop 0x4151ca
  41523a:	jbe    0x415200
  41523c:	ins    DWORD PTR es:[edi],dx
  41523d:	dec    ebx
  41523e:	push   0xd1f1e17c
  415243:	xlat   BYTE PTR ds:[ebx]
  415244:	ret    
  415245:	inc    ecx
  415246:	clc    
  415247:	xchg   ebx,eax
  415248:	ds pop ss
  41524a:	mov    ebx,DWORD PTR [edi+esi*2]
  41524d:	cmc    
  41524e:	mov    esp,ds
  415250:	icebp  
  415251:	mov    ebx,0x9ea3d49c
  415256:	mov    dl,0x7e
  415258:	cmp    al,0x5e
  41525a:	call   0x6a1e:0xb8cbab96
  415261:	and    ecx,DWORD PTR [eax+edx*2]
  415264:	xor    ecx,DWORD PTR [esi-0x2db51591]
  41526a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41526b:	in     al,dx
  41526c:	cmp    BYTE PTR [ecx-0x48c98cb0],ch
  415272:	pop    edx
  415273:	dec    ecx
  415274:	je     0x41525c
  415276:	std    
  415277:	push   ebx
  415278:	xchg   esi,eax
  415279:	jp     0x4152da
  41527b:	xor    BYTE PTR [edi],bh
  41527d:	jae    0x41521f
  41527f:	mov    esi,DWORD PTR [edi+0x53]
  415282:	mov    eax,0xbd9ab94f
  415287:	scas   al,BYTE PTR es:[edi]
  415288:	lds    edi,FWORD PTR [edi]
  41528a:	xchg   BYTE PTR [esi+0x71],ah
  41528d:	int    0x3a
  41528f:	outs   dx,BYTE PTR ds:[esi]
  415290:	pushf  
  415291:	clc    
  415292:	imul   BYTE PTR [edi+eiz*1]
  415295:	in     eax,0xad
  415297:	xchg   BYTE PTR [ebx+0x200d1a6e],ah
  41529d:	sub    al,0xfe
  41529f:	mov    bh,0xf2
  4152a1:	or     edx,DWORD PTR [ecx-0x2552cca5]
  4152a7:	jmp    0x5427:0x587323c
  4152ae:	mov    bl,0xfb
  4152b0:	xchg   esp,eax
  4152b1:	arpl   WORD PTR [esi],di
  4152b3:	out    0xff,eax
  4152b5:	push   0x4c925783
  4152ba:	cmp    edx,DWORD PTR [eax]
  4152bc:	call   0x39cd88dc
  4152c1:	hlt    
  4152c2:	out    0xe7,eax
  4152c4:	cmp    edi,DWORD PTR [esi-0x36d5b3f]
  4152ca:	popa   
  4152cb:	aas    
  4152cc:	ins    DWORD PTR es:[edi],dx
  4152cd:	push   0xfffffff7
  4152cf:	icebp  
  4152d0:	call   0xe461:0x33742739
  4152d7:	push   ss
  4152d8:	and    al,0x7b
  4152da:	inc    esp
  4152db:	adc    eax,0xb4e80e81
  4152e0:	movd   mm6,eax
  4152e3:	pusha  
  4152e4:	lea    esp,[esi+0x11]
  4152e7:	(bad)  
  4152e8:	cdq    
  4152e9:	test   DWORD PTR [esi],ecx
  4152eb:	les    ebx,FWORD PTR ds:0x101986df
  4152f1:	sbb    BYTE PTR [esi+0x1ca42c7],0xa1
  4152f8:	add    ecx,ebx
  4152fa:	push   ebx
  4152fb:	out    0xe8,eax
  4152fd:	je     0x415317
  4152ff:	cmp    esi,ebx
  415301:	into   
  415302:	jno    0x41531a
  415304:	mov    ds:0xe9c8a9f0,al
  415309:	ins    DWORD PTR es:[edi],dx
  41530a:	retf   
  41530b:	push   es
  41530c:	xor    edi,DWORD PTR [edi+ebx*1]
  41530f:	ja     0x4152fb
  415311:	xor    cl,bh
  415313:	cdq    
  415314:	mov    dh,0x5a
  415316:	div    BYTE PTR [edx-0x60]
  415319:	mov    ch,0x83
  41531b:	sar    BYTE PTR [edx+0x17],1
  41531e:	scas   al,BYTE PTR es:[edi]
  41531f:	idiv   dl
  415321:	nop
  415322:	add    ebx,DWORD PTR [edi+0x62]
  415325:	adc    esp,esi
  415327:	dec    ebp
  415328:	adc    eax,edi
  41532a:	xor    DWORD PTR [ecx+0x12],edi
  41532d:	add    BYTE PTR [ebp+edi*1+0x66],0xca
  415332:	mov    dh,0x85
  415334:	mov    es:0x136bb9f0,eax
  41533a:	sbb    DWORD PTR cs:[ecx],esi
  41533d:	int    0x43
  41533f:	sbb    ebp,ebp
  415341:	call   0x2978:0x57369c5b
  415348:	mov    edx,0xaf9259dc
  41534d:	aam    0x5d
  41534f:	int3   
  415350:	jmp    0x6d81:0x53118e72
  415357:	mov    ah,0x9
  415359:	dec    eax
  41535a:	mov    esi,0xfe5c12ed
  41535f:	fwait
  415360:	sbb    DWORD PTR [edx],ecx
  415362:	sbb    BYTE PTR [ebx],bl
  415364:	sbb    ecx,DWORD PTR [esi]
  415366:	arpl   WORD PTR [esi],cx
  415368:	push   ebx
  415369:	add    ebx,ebp
  41536b:	ss stos DWORD PTR es:[edi],eax
  41536d:	addr16 mov esp,0x664b2c7c
  415373:	adc    BYTE PTR [edi-0x5a07499b],0xb6
  41537a:	ret    
  41537b:	push   edi
  41537c:	addr16 push edi
  41537e:	dec    ebx
  41537f:	push   esp
  415380:	loopne 0x4153da
  415382:	popa   
  415383:	retf   
  415384:	cmp    BYTE PTR es:[edi+0x438de066],cl
  41538b:	mov    DWORD PTR [eax],ebp
  41538d:	xchg   edi,eax
  41538e:	popa   
  41538f:	mov    ?,WORD PTR [esi]
  415391:	bound  edi,QWORD PTR [edi+0x6159dc2e]
  415397:	inc    edx
  415398:	iret   
  415399:	or     DWORD PTR [ecx-0x2f],ebx
  41539c:	jecxz  0x4153ca
  41539e:	add    edi,DWORD PTR [esi+0x18]
  4153a1:	inc    edx
  4153a2:	pusha  
  4153a3:	add    esp,DWORD PTR [ebp-0x41]
  4153a6:	sbb    dh,BYTE PTR [eax]
  4153a8:	enter  0x7537,0x8f
  4153ac:	jmp    0x41539d
  4153ae:	popa   
  4153af:	inc    ecx
  4153b0:	mov    DWORD PTR [ebp-0x2c3a7019],esi
  4153b6:	mov    ds:0xa04cf4be,al
  4153bb:	or     ebx,ecx
  4153bd:	push   ss
  4153be:	inc    ecx
  4153bf:	(bad)  
  4153c0:	adc    DWORD PTR [eax+0x5bf13b2f],esi
  4153c6:	jno    0x41540e
  4153c8:	xchg   edi,eax
  4153c9:	daa    
  4153ca:	or     BYTE PTR [edi+0x33d5ef84],ch
  4153d0:	call   0x1ae3:0x6d1b385b
  4153d7:	jb     0x41541d
  4153d9:	(bad)  
  4153da:	sbb    eax,0x13fe9427
  4153df:	inc    edi
  4153e0:	inc    edi
  4153e1:	cmp    BYTE PTR [ebp+0x6979c11c],bl
  4153e7:	out    dx,eax
  4153e8:	imul   esi,DWORD PTR [esi-0x584dddfa],0xfffffffa
  4153ef:	jns    0x415462
  4153f1:	or     eax,0x4c497e0c
  4153f6:	mov    edx,0x91682a47
  4153fb:	test   bh,0x1c
  4153fe:	in     eax,0x30
  415400:	je     0x4153b5
  415402:	pop    edx
  415403:	loop   0x4153dc
  415405:	sbb    cl,bl
  415407:	and    dl,al
  415409:	mov    esp,0xe42e9232
  41540e:	inc    eax
  41540f:	mov    DWORD PTR [ecx+0x70],esp
  415412:	popa   
  415413:	(bad)  
  415414:	cli    
  415415:	push   cs
  415416:	cmp    BYTE PTR [ecx+0x47],ah
  415419:	xor    ah,cl
  41541b:	inc    ebx
  41541c:	jge    0x415428
  41541e:	inc    esi
  41541f:	jno    0x41544e
  415421:	xchg   BYTE PTR [esi+0x5172956f],dl
  415427:	jns    0x41543b
  415429:	daa    
  41542a:	clc    
  41542b:	inc    edi
  41542c:	jne    0x41545e
  41542e:	mov    ?,WORD PTR [ebp-0x4912b6c8]
  415434:	dec    ebp
  415435:	stc    
  415436:	or     BYTE PTR [ebx-0x4f],dh
  415439:	bound  ebx,QWORD PTR [ecx-0x5f8a3a92]
  41543f:	ret    
  415440:	inc    eax
  415441:	mov    edx,0xff2eca72
  415446:	fld    TBYTE PTR [esi-0x45]
  415449:	outs   dx,BYTE PTR ds:[esi]
  41544a:	outs   dx,DWORD PTR ds:[esi]
  41544b:	sbb    BYTE PTR [ebp-0x4e9481df],al
  415451:	inc    edi
  415452:	dec    ebp
  415453:	loopne 0x415433
  415455:	push   es
  415456:	rcr    dl,1
  415458:	or     DWORD PTR [eax],edi
  41545a:	scas   eax,DWORD PTR es:[edi]
  41545b:	imul   dh
  41545d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41545e:	push   0xa6d6c8f2
  415463:	push   esp
  415464:	add    eax,0x46745cc8
  415469:	sbb    edi,ecx
  41546b:	xchg   ecx,eax
  41546c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41546d:	ror    BYTE PTR [edi-0x1306a480],0x7a
  415474:	loop   0x41545c
  415476:	fidiv  DWORD PTR gs:[ecx+0x35]
  41547a:	push   ss
  41547b:	retf   
  41547c:	xor    DWORD PTR [edx],eax
  41547e:	mov    esi,0xc805e3ea
  415483:	ja     0x415437
  415485:	or     DWORD PTR [ebp+0x2ff581e3],esi
  41548b:	xlat   BYTE PTR ds:[ebx]
  41548c:	dec    ebp
  41548d:	add    BYTE PTR ds:0xa549bd74,dh
  415493:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415494:	pop    ss
  415495:	xchg   edi,eax
  415496:	push   esi
  415497:	add    BYTE PTR [edx],bh
  415499:	fistp  DWORD PTR [ecx+0x309199f6]
  41549f:	popa   
  4154a0:	lods   al,BYTE PTR ds:[esi]
  4154a1:	mov    ebx,0xbbf9c7bb
  4154a6:	lahf   
  4154a7:	shr    BYTE PTR [ebx-0x58],0xb5
  4154ab:	xchg   edi,eax
  4154ac:	rcr    DWORD PTR [ebp+ebx*4+0x5b],cl
  4154b0:	ss out 0x82,eax
  4154b3:	int    0x4b
  4154b5:	xchg   ebx,eax
  4154b6:	xchg   edx,eax
  4154b7:	sub    esp,edx
  4154b9:	icebp  
  4154ba:	test   al,0xa6
  4154bc:	ret    
  4154bd:	push   eax
  4154be:	lods   eax,DWORD PTR ds:[esi]
  4154bf:	cmp    DWORD PTR [edi-0xd],ebp
  4154c2:	popa   
  4154c3:	in     al,dx
  4154c4:	retf   
  4154c5:	gs dec eax
  4154c7:	pop    ecx
  4154c8:	rol    DWORD PTR [edx+eiz*1-0x6d],1
  4154cc:	jne    0x4154fe
  4154ce:	and    DWORD PTR [esi+eax*1],ecx
  4154d1:	and    bh,dh
  4154d3:	nop
  4154d4:	mov    edi,0x8cb851e3
  4154d9:	and    BYTE PTR [esi+0x5d074bd5],ah
  4154df:	(bad)
  4154e2:	cmp    DWORD PTR [edx+eiz*8],esp
  4154e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4154e6:	std    
  4154e7:	imul   esi,esi,0x27
  4154ea:	(bad)  
  4154eb:	rcl    dh,cl
  4154ed:	adc    DWORD PTR [edi+ecx*2-0x65],eax
  4154f1:	test   BYTE PTR [eax+ecx*1],0x3a
  4154f5:	int    0xe7
  4154f7:	out    0xf0,eax
  4154f9:	jb     0x415556
  4154fb:	sbb    ebx,DWORD PTR [eax+0x61b0207]
  415501:	inc    ebx
  415502:	int3   
  415503:	push   esp
  415504:	hlt    
  415505:	gs cmc 
  415507:	mov    ah,BYTE PTR [ebx+edx*2]
  41550a:	pop    ebx
  41550b:	sbb    al,ch
  41550d:	gs mov ebx,0x4544621b
  415513:	adc    al,0x25
  415515:	inc    esp
  415516:	xor    DWORD PTR [esi],0xfffffff6
  415519:	jle    0x4154c0
  41551b:	mov    al,ds:0x15b06c74
  415520:	mov    ?,WORD PTR [edi]
  415522:	and    DWORD PTR [ebx+0x59018003],ebx
  415528:	das    
  415529:	je     0x415508
  41552b:	aaa    
  41552c:	cmp    al,0x35
  41552e:	shl    BYTE PTR [eax+ecx*8-0x4af3edd9],cl
  415535:	or     al,0xe3
  415537:	jecxz  0x41558a
  415539:	jb     0x415553
  41553b:	pop    ebx
  41553c:	sbb    al,0xd6
  41553e:	jge    0x4155ad
  415540:	mov    edx,0xe3de7258
  415545:	cmp    al,0x36
  415547:	adc    bh,bh
  415549:	dec    esi
  41554a:	xor    BYTE PTR ds:[ebx+0x5a],dh
  41554e:	pushf  
  41554f:	(bad)  
  415550:	(bad)  
  415552:	jno    0x4155c4
  415554:	into   
  415555:	jo     0x415505
  415557:	sub    BYTE PTR [edi-0x3f],bl
  41555a:	ret    0xd065
  41555d:	xchg   ebp,eax
  41555e:	inc    eax
  41555f:	mov    ch,0xb6
  415561:	nop
  415562:	imul   edx,DWORD PTR [edi],0x70
  415565:	call   0x658264e9
  41556a:	loope  0x4155b4
  41556c:	and    al,dh
  41556e:	jmp    0x3295d44f
  415573:	cmp    cl,BYTE PTR [eax+0x56]
  415576:	repnz enter 0x3831,0xa6
  41557b:	pusha  
  41557c:	push   cs
  41557d:	rcl    DWORD PTR [eax-0x4],1
  415580:	mov    al,ds:0xe6a0ccc1
  415585:	jmp    0xf4c6:0x9703f1fa
  41558c:	add    al,0xb3
  41558e:	mov    al,ds:0x88ea4c6d
  415593:	mov    bh,0xd4
  415595:	ins    BYTE PTR es:[edi],dx
  415596:	cli    
  415597:	cmc    
  415598:	daa    
  415599:	hlt    
  41559a:	sub    BYTE PTR [ebx],al
  41559c:	xor    BYTE PTR [esi+0x5b],ah
  41559f:	push   0x511ebdd
  4155a4:	(bad)  
  4155a5:	mov    edx,0x4f310c71
  4155aa:	ret    
  4155ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4155ac:	scas   eax,DWORD PTR es:[di]
  4155ae:	rcr    BYTE PTR [eax],0xa4
  4155b1:	pop    edi
  4155b2:	rcl    edi,0x58
  4155b5:	inc    ebx
  4155b6:	das    
  4155b7:	(bad)  
  4155b8:	(bad)  
  4155b9:	mov    ah,BYTE PTR [edx+0x39370ade]
  4155bf:	add    DWORD PTR [esi],ebx
  4155c1:	mov    ch,bh
  4155c3:	mov    ebx,0xc2651a1e
  4155c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4155c9:	fcom   DWORD PTR [ecx+0x3d]
  4155cc:	std    
  4155cd:	mov    ds:0x654565c6,eax
  4155d2:	cwde   
  4155d3:	add    bh,BYTE PTR [eax+0x5d7a8401]
  4155d9:	popf   
  4155da:	aaa    
  4155db:	out    dx,eax
  4155dc:	int3   
  4155dd:	icebp  
  4155de:	and    al,0xcf
  4155e0:	imul   eax,DWORD PTR [esi],0xffffffa2
  4155e3:	or     al,0x94
  4155e5:	rol    BYTE PTR [ebx],0x62
  4155e8:	xor    BYTE PTR [ebx-0x1bc718fa],ah
  4155ee:	(bad)  
  4155ef:	scas   al,BYTE PTR es:[edi]
  4155f0:	push   edx
  4155f1:	aaa    
  4155f2:	jecxz  0x4155a2
  4155f4:	jne    0x415589
  4155f6:	je     0x4155c0
  4155f8:	jp     0x4155fa
  4155fa:	not    DWORD PTR [esi]
  4155fc:	pop    ds
  4155fd:	mov    esp,0x23f40d17
  415602:	sbb    ebp,DWORD PTR [eax-0x69]
  415605:	adc    eax,0xca288e79
  41560a:	sbb    DWORD PTR [ebx-0x39d5fe05],esp
  415610:	mov    bh,0xdb
  415612:	add    al,BYTE PTR [ebp+0x16]
  415615:	fwait
  415616:	adc    al,0xf3
  415618:	sahf   
  415619:	cmp    al,0x63
  41561b:	mov    dh,0x4b
  41561d:	jge    0x4155b9
  41561f:	jne    0x415638
  415621:	sbb    dl,BYTE PTR [eax]
  415623:	mov    al,ds:0x600a4e0e
  415628:	aad    0x3c
  41562a:	push   edi
  41562b:	fsubr  DWORD PTR [eax+0x36]
  41562e:	aam    0x82
  415630:	outs   dx,BYTE PTR ds:[esi]
  415631:	pop    ss
  415632:	cmp    esi,eax
  415634:	mov    ch,0x92
  415636:	push   ds
  415637:	push   0xe2a055b4
  41563c:	das    
  41563d:	es push ebx
  41563f:	jecxz  0x415641
  415641:	repz (bad) 
  415643:	fisubr DWORD PTR ds:0x1836188e
  415649:	push   eax
  41564a:	retf   0xc71
  41564d:	hlt    
  41564e:	mov    ds:0x1f31d660,eax
  415653:	retf   
  415654:	rcr    DWORD PTR [eax-0x52],1
  415657:	hlt    
  415658:	enter  0x4fc7,0x61
  41565c:	mov    ebp,0xe7f49bad
  415661:	adc    DWORD PTR [edx-0x60],eax
  415664:	aaa    
  415665:	xor    DWORD PTR [edi+0x7300910e],esp
  41566b:	inc    edx
  41566c:	stos   BYTE PTR es:[edi],al
  41566d:	and    BYTE PTR [eax+edi*4-0x7],bh
  415671:	cmp    eax,0x2acf1271
  415676:	pop    esi
  415677:	dec    eax
  415678:	jbe    0x4156e3
  41567a:	push   ebp
  41567b:	sub    edx,edx
  41567d:	loope  0x4156fc
  41567f:	divps  xmm0,XMMWORD PTR [esp+eax*2-0x44]
  415684:	lods   al,BYTE PTR ds:[esi]
  415685:	xchg   edi,eax
  415686:	pop    ecx
  415687:	mov    ecx,0x4d32e116
  41568c:	mov    BYTE PTR [ecx+0x5076e472],0x2
  415693:	xchg   cl,al
  415695:	out    0xa4,al
  415697:	or     eax,0xd5574a8e
  41569c:	cmp    ecx,0xe3f28122
  4156a2:	sbb    DWORD PTR [ebp-0x5be86d76],edi
  4156a8:	mov    ds:0x1beddc13,al
  4156ad:	mov    esp,0xcf4816f2
  4156b2:	pop    edx
  4156b3:	(bad)  
  4156b4:	pop    ebp
  4156b5:	js     0x41563a
  4156b7:	dec    edi
  4156b8:	lahf   
  4156b9:	fcomp  QWORD PTR [ecx+0x39459086]
  4156bf:	je     0x4156a1
  4156c1:	mov    DWORD PTR [ebx],esi
  4156c3:	jecxz  0x415707
  4156c5:	adc    BYTE PTR [eax],0xb9
  4156c8:	cdq    
  4156c9:	adc    eax,0xec1fb4f1
  4156ce:	mov    eax,ds:0xf50ec4d3
  4156d3:	pop    ds
  4156d4:	vpsubsw ymm0,ymm1,YMMWORD PTR gs:[ecx-0x7f1f549f]
  4156de:	mov    bh,0xae
  4156e0:	push   ebx
  4156e1:	fidivr WORD PTR [ebp-0x510a8ee7]
  4156e7:	call   0x928a34fb
  4156ec:	(bad)  
  4156ed:	mov    ecx,0x44c7d3d1
  4156f2:	sahf   
  4156f3:	fwait
  4156f4:	iret   
  4156f5:	push   edi
  4156f6:	mov    ebp,0xe9b2c18
  4156fb:	(bad)  
  4156fc:	pop    edx
  4156fd:	add    eax,0x6e7c149a
  415702:	mov    al,ds:0xc03635b5
  415707:	rcl    eax,1
  415709:	mul    DWORD PTR [edx-0x78]
  41570c:	mov    ds:0x18ed2b9c,eax
  415711:	scas   eax,DWORD PTR es:[edi]
  415712:	dec    esi
  415713:	add    eax,0x23637b1
  415718:	pop    esp
  415719:	outs   dx,BYTE PTR ds:[esi]
  41571a:	retf   0xb32b
  41571d:	xor    DWORD PTR [eax-0xd],0xb590022
  415724:	nop
  415725:	mov    ds:0xc2ac4630,eax
  41572a:	iret   
  41572b:	sbb    eax,0xe5e659a8
  415730:	imul   ebx,ecx,0xffffffd2
  415733:	scas   al,BYTE PTR es:[edi]
  415734:	out    0xb9,al
  415736:	pop    es
  415737:	jecxz  0x4157b6
  415739:	or     cl,dl
  41573b:	jecxz  0x415737
  41573d:	lock repnz jmp FWORD PTR [esp+ebx*1]
  415742:	cmp    al,0x9
  415744:	es sti 
  415746:	popf   
  415747:	imul   esp,DWORD PTR [edx],0xffffffda
  41574a:	cmp    BYTE PTR [eax+0x4],bh
  41574d:	rol    DWORD PTR [ecx*4-0x6a74aeca],0x15
  415755:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415756:	repz pop ds
  415758:	ds cdq 
  41575a:	sbb    ecx,edx
  41575c:	push   edx
  41575d:	mov    dh,0xa4
  41575f:	add    cl,dl
  415761:	adc    al,0x32
  415763:	imul   esi,ebp,0x74
  415766:	inc    eax
  415767:	in     eax,0xb3
  415769:	push   eax
  41576a:	push   esp
  41576b:	push   ebx
  41576c:	(bad)  
  41576d:	fstp   QWORD PTR fs:0xce0eb921
  415774:	cmp    ah,BYTE PTR [edx+0x607da158]
  41577a:	add    eax,0x524f5062
  41577f:	pop    eax
  415780:	xchg   BYTE PTR [ebp-0x60],dl
  415783:	or     eax,0x653f3879
  415788:	xlat   BYTE PTR ds:[ebx]
  415789:	cmp    esp,DWORD PTR [edx-0x7e]
  41578c:	push   ebp
  41578d:	mov    eax,0x725e48dc
  415792:	adc    BYTE PTR [edi+0x50],0xc2
  415796:	dec    edi
  415797:	fsubr  QWORD PTR [ebx+edx*4]
  41579a:	jle    0x415771
  41579c:	mov    dl,0x96
  41579e:	and    BYTE PTR [edi],ch
  4157a0:	jne    0x4157f4
  4157a2:	mov    al,0x78
  4157a4:	push   ebx
  4157a5:	mov    edx,0x3787f0b
  4157aa:	jmp    0x4157f7
  4157ac:	sbb    esi,ecx
  4157ae:	das    
  4157af:	test   DWORD PTR [ebx-0x4cba00e],ebp
  4157b5:	enter  0xb517,0xe3
  4157b9:	dec    ebx
  4157ba:	les    eax,FWORD PTR [esi+0x1e]
  4157bd:	sub    al,0xb1
  4157bf:	mov    ch,0x22
  4157c1:	shr    BYTE PTR [esi+0x7cc678c3],cl
  4157c7:	gs loop 0x415833
  4157ca:	out    dx,eax
  4157cb:	into   
  4157cc:	xor    al,0xbb
  4157ce:	sub    edi,DWORD PTR [ebx]
  4157d0:	sbb    DWORD PTR ds:0xe62aaa00,edi
  4157d6:	push   ebx
  4157d7:	stos   BYTE PTR es:[edi],al
  4157d8:	repz xchg ebx,eax
  4157da:	out    0x9b,al
  4157dc:	out    0x9e,eax
  4157de:	ss add al,0xd1
  4157e1:	cli    
  4157e2:	inc    edx
  4157e3:	or     al,0xee
  4157e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4157e6:	cmp    BYTE PTR [edx-0x5b],al
  4157e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4157ea:	xchg   esp,eax
  4157eb:	cmp    BYTE PTR [edi+0x3d],cl
  4157ee:	jno    0x415846
  4157f0:	mov    gs,WORD PTR [esi]
  4157f2:	adc    al,BYTE PTR [eax+0x60]
  4157f5:	lea    ebp,[ebx]
  4157f7:	ins    DWORD PTR es:[edi],dx
  4157f8:	shr    BYTE PTR [edi+0x218d02fa],cl
  4157fe:	daa    
  4157ff:	fwait
  415800:	out    0xd7,al
  415802:	mov    esp,0x42897a2f
  415807:	out    dx,al
  415808:	push   0xffffffa8
  41580a:	jne    0x415873
  41580c:	(bad)  
  41580d:	outs   dx,DWORD PTR ds:[esi]
  41580e:	jp     0x41581e
  415810:	cwde   
  415811:	cmp    BYTE PTR [ebx+0x5e],0xea
  415815:	push   cs
  415816:	fs (bad) 
  415818:	loop   0x415878
  41581a:	stc    
  41581b:	pop    ds
  41581c:	cli    
  41581d:	mov    esp,0x2d9d78e1
  415822:	dec    esi
  415823:	bound  ebp,QWORD PTR [esi+ecx*2-0x1d70b75b]
  41582a:	cmp    ah,BYTE PTR [esi]
  41582c:	std    
  41582d:	sub    BYTE PTR [ebx],dh
  41582f:	push   0xffffff80
  415831:	mov    cs,eax
  415833:	ds xor ecx,0x9881bf5f
  41583a:	es pause 
  41583d:	enter  0x4bf1,0xd8
  415841:	in     al,dx
  415842:	jb     0x41582c
  415844:	cmp    ecx,edi
  415846:	(bad)  
  415847:	arpl   WORD PTR [edx],ax
  415849:	or     BYTE PTR [edi+0x45e767d1],dl
  41584f:	cmp    eax,0x426fe997
  415854:	inc    ebp
  415855:	add    eax,0x642a56df
  41585a:	out    dx,eax
  41585b:	sbb    eax,0x7c49f7ae
  415860:	mov    cl,0xf0
  415862:	jb     0x415826
  415864:	ret    
  415865:	jp     0x4157eb
  415867:	imul   esp,DWORD PTR [eax+eiz*1+0x11],0xd2879f99
  41586f:	xchg   ebx,eax
  415870:	(bad)  
  415871:	std    
  415872:	iret   
  415873:	les    ebx,FWORD PTR [ebx-0x3d9e1d7e]
  415879:	sar    al,cl
  41587b:	mov    dl,0x38
  41587d:	and    cl,BYTE PTR [eax-0x60]
  415880:	jo     0x4158df
  415882:	inc    esp
  415883:	out    dx,al
  415884:	retf   
  415885:	loope  0x4158a2
  415887:	adc    bh,BYTE PTR [ebx-0xf]
  41588a:	loop   0x415852
  41588c:	das    
  41588d:	aam    0x90
  41588f:	jb     0x41585a
  415891:	xor    DWORD PTR [ecx+ecx*4-0x9f276eb],0xffffffc2
  415899:	test   BYTE PTR [edx-0x4e],0x3b
  41589d:	ret    
  41589e:	cmp    eax,DWORD PTR [ebp+0x42]
  4158a1:	push   ebp
  4158a2:	mov    esp,0x49567af6
  4158a7:	add    esp,eax
  4158a9:	cmp    DWORD PTR [edi-0xe],0x64
  4158ad:	stos   BYTE PTR es:[edi],al
  4158ae:	shl    DWORD PTR [edx-0x75a5b719],1
  4158b4:	into   
  4158b5:	mov    esp,0x972dcd7f
  4158ba:	scas   eax,DWORD PTR es:[edi]
  4158bb:	shl    BYTE PTR [ebx-0x56],1
  4158be:	dec    edx
  4158bf:	retf   
  4158c0:	(bad)  
  4158c1:	es inc esi
  4158c3:	retf   0x7c18
  4158c6:	jp     0x415932
  4158c8:	mov    cs,WORD PTR [eax]
  4158ca:	adc    al,0x3a
  4158cc:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  4158ce:	or     BYTE PTR [esp+edx*8-0x644fbad6],0x5b
  4158d6:	xchg   esp,eax
  4158d7:	lods   al,BYTE PTR ds:[esi]
  4158d8:	outs   dx,BYTE PTR ds:[esi]
  4158d9:	cmc    
  4158da:	mov    al,0xb0
  4158dc:	mov    ds:0x4a4fc4f1,eax
  4158e1:	stos   BYTE PTR es:[edi],al
  4158e2:	jecxz  0x415902
  4158e4:	in     eax,0x4e
  4158e6:	push   ebp
  4158e7:	mov    ds:0x858476af,al
  4158ec:	retw   
  4158ee:	adc    al,0x5e
  4158f0:	mov    ecx,0x1d0f526e
  4158f5:	push   ss
  4158f6:	in     al,dx
  4158f7:	imul   esp,DWORD PTR [ebx-0x6d],0xeacfa82e
  4158fe:	mov    dl,bl
  415900:	mov    al,0x3c
  415902:	sbb    esi,edx
  415904:	mov    ecx,0x82d3365c
  415909:	push   eax
  41590a:	test   DWORD PTR [eax+0x3d],ebp
  41590d:	daa    
  41590e:	pop    esp
  41590f:	sbb    al,BYTE PTR [ecx+0x8]
  415912:	fisttp QWORD PTR [esi+ebx*4+0x3de0ef68]
  415919:	mov    ebp,0x4b598677
  41591e:	push   ebp
  41591f:	js     0x41595b
  415921:	sub    eax,0xf98d2f1e
  415926:	outs   dx,BYTE PTR ds:[esi]
  415927:	add    al,0xe1
  415929:	stos   DWORD PTR es:[edi],eax
  41592a:	jo     0x415985
  41592c:	out    0x25,al
  41592e:	cmp    eax,DWORD PTR [ebx-0x3b]
  415931:	aas    
  415932:	div    DWORD PTR [ecx]
  415934:	js     0x41591a
  415936:	cs hlt 
  415938:	mov    ebp,DWORD PTR [edx-0x51]
  41593b:	repnz cmp DWORD PTR [ecx-0x3f],ebp
  41593f:	enter  0x63c7,0x84
  415943:	dec    ebx
  415944:	inc    edx
  415945:	or     DWORD PTR [ebp+0x86ce0cf],0x38
  41594c:	dec    DWORD PTR [ebx+0x3e]
  41594f:	fwait
  415950:	cmp    BYTE PTR [eax+0x4510787e],ah
  415956:	ss ja  0x41595c
  415959:	outs   dx,BYTE PTR ds:[esi]
  41595a:	fst    QWORD PTR [eax+0x335b4e5e]
  415960:	ss xor ebx,ebp
  415963:	sbb    dh,bh
  415965:	dec    ebp
  415966:	fidivr WORD PTR [ebp-0x78]
  415969:	cmp    ch,bh
  41596b:	sub    eax,0x28bc72ae
  415970:	dec    esi
  415971:	stc    
  415972:	pop    ecx
  415973:	std    
  415974:	jne    0x41595e
  415976:	xor    BYTE PTR [ecx+esi*4-0x11],cl
  41597a:	sub    DWORD PTR [edi],ebp
  41597c:	sbb    eax,0x7b47ee01
  415981:	in     eax,dx
  415982:	and    DWORD PTR [ecx-0x8],ebx
  415985:	or     esp,ecx
  415987:	xchg   ecx,eax
  415988:	push   edx
  415989:	adc    ch,dl
  41598b:	into   
  41598c:	push   cs
  41598d:	pop    esi
  41598e:	test   al,0xaf
  415990:	rol    BYTE PTR [ebp-0x47],cl
  415993:	enter  0xb68c,0x15
  415997:	mov    ecx,0x32ba4e2d
  41599c:	loope  0x4159c0
  41599e:	dec    ebx
  41599f:	out    0x72,al
  4159a1:	mov    ah,0xce
  4159a3:	jnp    0x4159a1
  4159a5:	clc    
  4159a6:	mov    ah,0x90
  4159a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4159a9:	push   eax
  4159aa:	cmp    ebp,0x7
  4159ad:	sbb    al,0x75
  4159af:	and    eax,0x74ef198a
  4159b4:	jns    0x4159b9
  4159b6:	sbb    al,0x23
  4159b8:	jae    0x4159f0
  4159ba:	adc    ah,BYTE PTR [eax-0x588fad9c]
  4159c0:	jmp    0x2748:0x33cf28b5
  4159c7:	and    eax,0xa99b4a01
  4159cc:	adc    eax,0xf5512e63
  4159d1:	int3   
  4159d2:	mov    eax,0xdc2a6c97
  4159d7:	cs inc esp
  4159d9:	pop    edx
  4159da:	push   ds
  4159db:	xor    DWORD PTR [ebp+edi*1-0x41266d34],eax
  4159e2:	sar    BYTE PTR [edi],0xd1
  4159e5:	cli    
  4159e6:	sub    BYTE PTR [ebp-0x2db88932],ah
  4159ec:	pop    ecx
  4159ed:	icebp  
  4159ee:	test   edx,esp
  4159f0:	xchg   ebp,eax
  4159f1:	push   ebx
  4159f2:	xor    al,0x94
  4159f4:	dec    esi
  4159f5:	jge    0x4159be
  4159f7:	sbb    edi,ebx
  4159f9:	xlat   BYTE PTR ds:[ebx]
  4159fa:	jmp    0xa9e2:0x5231496
  415a01:	sub    DWORD PTR [ecx-0x7],ecx
  415a04:	pop    edi
  415a05:	je     0x4159fc
  415a07:	rcl    ebx,cl
  415a09:	test   al,0xf6
  415a0b:	xchg   esi,eax
  415a0c:	cdq    
  415a0d:	add    eax,0xc90fb588
  415a12:	jg     0x415a67
  415a14:	mov    WORD PTR [ebp+0x50fb439d],es
  415a1a:	dec    ebx
  415a1b:	sbb    dh,BYTE PTR [esi-0xe]
  415a1e:	imul   edx,DWORD PTR [edx],0xffffffc3
  415a21:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415a22:	sbb    dl,BYTE PTR [edx-0x40]
  415a25:	rol    DWORD PTR [eax+0x7d],1
  415a28:	add    al,0xd9
  415a2a:	repnz repnz int3 
  415a2d:	setne  BYTE PTR [esi]
  415a30:	inc    eax
  415a31:	and    BYTE PTR [ecx+0x4ba40aa2],ch
  415a37:	jno    0x415a6e
  415a39:	fmul   st(5),st
  415a3b:	outs   dx,BYTE PTR ds:[esi]
  415a3c:	rcr    DWORD PTR [ecx-0x54],1
  415a3f:	(bad)  
  415a40:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415a41:	mov    esp,0x34bc9a14
  415a46:	xchg   ecx,eax
  415a47:	lds    esi,FWORD PTR [esi]
  415a49:	and    eax,0xf476c540
  415a4e:	repnz pushf 
  415a50:	jl     0x415a62
  415a52:	jns    0x415a27
  415a54:	ror    DWORD PTR [eax-0x3f],0x68
  415a58:	and    edx,DWORD PTR [edx]
  415a5a:	xchg   ebx,eax
  415a5b:	jmp    0x5a4302b9
  415a60:	ret    0xd537
  415a63:	mov    edi,0x885e7feb
  415a68:	aaa    
  415a69:	inc    edi
  415a6a:	jbe    0x415ad6
  415a6c:	or     BYTE PTR [esi],dh
  415a6e:	cdq    
  415a6f:	xlat   BYTE PTR gs:[ebx]
  415a71:	lds    esi,FWORD PTR [edx]
  415a73:	cmp    BYTE PTR [edx-0x7c],0x8d
  415a77:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415a78:	add    eax,0xd23df4a3
  415a7d:	shr    DWORD PTR [ecx+0x42],cl
  415a80:	outs   dx,DWORD PTR ds:[esi]
  415a81:	pop    ds
  415a82:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415a84:	mov    ebp,0x3d476c5d
  415a89:	xor    ah,BYTE PTR [edx-0x5fcd4b3a]
  415a8f:	add    al,0x31
  415a91:	and    al,0x1a
  415a93:	jg     0x415a2d
  415a95:	push   edx
  415a96:	das    
  415a97:	add    bh,bh
  415a99:	aas    
  415a9a:	out    dx,al
  415a9b:	mov    edi,0xd9972fa6
  415aa0:	sar    ch,cl
  415aa2:	pop    edx
  415aa3:	enter  0x9be1,0x5
  415aa7:	stos   DWORD PTR es:[edi],eax
  415aa8:	nop
  415aa9:	add    al,0x3f
  415aab:	std    
  415aac:	cmp    DWORD PTR [edx-0x249722d9],edx
  415ab2:	outs   dx,DWORD PTR ds:[esi]
  415ab3:	aas    
  415ab4:	call   0x445d325b
  415ab9:	enter  0xcf8,0x5c
  415abd:	daa    
  415abe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415abf:	add    dh,BYTE PTR [esi]
  415ac1:	pusha  
  415ac2:	popa   
  415ac3:	inc    ebx
  415ac4:	add    eax,0x726b70cf
  415ac9:	das    
  415aca:	retf   
  415acb:	mov    ecx,0xc85d1b8c
  415ad0:	loop   0x415aa9
  415ad2:	outs   dx,BYTE PTR ds:[esi]
  415ad3:	cld    
  415ad4:	in     al,dx
  415ad5:	sbb    bl,bh
  415ad7:	lahf   
  415ad8:	adc    eax,0x591fec6f
  415add:	pop    edx
  415ade:	fwait
  415adf:	inc    DWORD PTR [eax-0x66f325a7]
  415ae5:	nop
  415ae6:	out    dx,eax
  415ae7:	xchg   DWORD PTR [edi+edi*4+0x68],eax
  415aeb:	push   ebx
  415aec:	pop    esp
  415aed:	ret    0xadd1
  415af0:	xchg   edi,eax
  415af1:	cmp    ebx,DWORD PTR [eax+eax*1+0x656c39cb]
  415af8:	lea    esi,[ebx+eiz*8-0x2447ebc7]
  415aff:	mov    WORD PTR [esi],es
  415b01:	dec    ebp
  415b02:	rcr    esi,0x96
  415b05:	imul   DWORD PTR [ebx+esi*2]
  415b08:	in     al,0x29
  415b0a:	inc    ebx
  415b0b:	dec    esi
  415b0c:	nop
  415b0d:	dec    eax
  415b0e:	popa   
  415b0f:	pop    eax
  415b10:	cmp    dl,BYTE PTR [edi+edi*8]
  415b13:	sbb    ch,al
  415b15:	fisub  WORD PTR [ebx]
  415b17:	sti    
  415b18:	mov    dl,0xc8
  415b1a:	loope  0x415aec
  415b1c:	iret   
  415b1d:	stos   BYTE PTR es:[edi],al
  415b1e:	retf   0x5de6
  415b21:	test   BYTE PTR [esi+0x17b6c41a],0xfa
  415b28:	bound  edi,QWORD PTR [ebp-0x26]
  415b2b:	out    0xea,al
  415b2d:	iret   
  415b2e:	cld    
  415b2f:	call   0xdc43:0x91f81fd0
  415b36:	sub    BYTE PTR [ebp-0x32],bh
  415b39:	nop
  415b3a:	cmp    al,0x2f
  415b3c:	jmp    0x4c6:0x9e9160a
  415b43:	push   edx
  415b44:	sar    DWORD PTR ds:0x927a3c9d,cl
  415b4a:	ror    BYTE PTR [esi+ebx*2+0x2b795d40],1
  415b51:	xor    al,0x6b
  415b53:	or     esp,DWORD PTR [edx-0x6f67ba1c]
  415b59:	inc    esi
  415b5a:	(bad)
  415b5e:	jecxz  0x415b7b
  415b60:	jp     0x415b8f
  415b62:	adc    ah,BYTE PTR [ecx]
  415b64:	js     0x415b71
  415b66:	(bad)  
  415b67:	cwde   
  415b68:	dec    ebx
  415b69:	cmp    DWORD PTR [edx],esi
  415b6b:	push   ecx
  415b6c:	stc    
  415b6d:	jb     0x415bb5
  415b6f:	ins    BYTE PTR es:[edi],dx
  415b70:	(bad)  
  415b71:	jle    0x415bdf
  415b73:	retf   
  415b74:	adc    al,0x2b
  415b76:	xchg   ebx,eax
  415b77:	cmp    eax,0x27649553
  415b7c:	mov    bh,0x5d
  415b7e:	cmc    
  415b7f:	adc    eax,0x3a5adc46
  415b84:	push   ecx
  415b85:	jb     0x415c05
  415b87:	sbb    ecx,DWORD PTR [edx]
  415b89:	jb     0x415b9b
  415b8b:	scas   eax,DWORD PTR es:[edi]
  415b8c:	imul   ecx,DWORD PTR [ebx+0x6a81d9d2],0x615a835c
  415b96:	out    0x74,al
  415b98:	ror    DWORD PTR [ecx],1
  415b9a:	pop    ss
  415b9b:	add    al,0x2a
  415b9d:	adc    edi,DWORD PTR [esi+ebp*2-0x3999bc00]
  415ba4:	add    eax,0x73b2bc42
  415ba9:	fbld   TBYTE PTR [ecx+edi*1]
  415bac:	jnp    0x415c0c
  415bae:	mov    al,ds:0xbbe96856
  415bb3:	jge    0x415b96
  415bb5:	sbb    al,0x2e
  415bb7:	call   0xd4f126d6
  415bbc:	leave  
  415bbd:	dec    edi
  415bbe:	pop    esp
  415bbf:	inc    edx
  415bc0:	push   0xffffffc9
  415bc2:	push   edi
  415bc3:	push   ebx
  415bc4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415bc5:	into   
  415bc6:	push   esp
  415bc7:	pop    es
  415bc8:	jle    0x415bc5
  415bca:	push   ecx
  415bcb:	or     edx,DWORD PTR [ebp+0xe448fd4]
  415bd1:	lds    esp,FWORD PTR [edx-0x4b]
  415bd4:	jb     0x415c11
  415bd6:	push   ebp
  415bd7:	fcmovne st,st(4)
  415bd9:	mov    gs,WORD PTR [ebp+ebx*1+0x66098572]
  415be0:	sub    cl,BYTE PTR [ebx-0x5b039dc1]
  415be6:	mov    bl,0xb2
  415be8:	mov    ecx,0xd9b7e3fd
  415bed:	jo     0x415c44
  415bef:	xor    eax,0xf0714739
  415bf4:	pushf  
  415bf5:	push   cs
  415bf6:	add    bx,dx
  415bf9:	or     DWORD PTR [esi+0xd3c490c],ebp
  415bff:	int3   
  415c00:	xchg   BYTE PTR [ecx],dh
  415c02:	daa    
  415c03:	addr16 daa 
  415c05:	jmp    0x415bfd
  415c07:	pushf  
  415c08:	aas    
  415c09:	dec    edx
  415c0a:	int3   
  415c0b:	mov    ebx,ecx
  415c0d:	ret    
  415c0e:	xor    dh,bh
  415c10:	repz xchg ebx,eax
  415c12:	dec    esi
  415c13:	jp     0x415c59
  415c15:	aam    0xed
  415c17:	add    al,0x4d
  415c19:	mov    BYTE PTR [esi-0x655450cf],cl
  415c1f:	mov    ds:0xe4cdeea5,al
  415c24:	pop    es
  415c25:	imul   ebp,DWORD PTR [ecx+0x75097aae],0x8cf65bae
  415c2f:	cld    
  415c30:	sub    bl,0x86
  415c33:	daa    
  415c34:	jae    0x415be9
  415c36:	outs   dx,BYTE PTR ds:[esi]
  415c37:	dec    ecx
  415c38:	cdq    
  415c39:	dec    ecx
  415c3a:	mov    edi,cs
  415c3c:	jne    0x415c37
  415c3e:	leave  
  415c3f:	or     eax,0x22a7f7fe
  415c44:	imul   eax,DWORD PTR [ecx],0x65
  415c47:	mov    ebx,0xa77ab7e3
  415c4c:	cmp    ebp,DWORD PTR [esi-0x7ae21c6a]
  415c52:	mov    eax,ds:0x6139ea49
  415c57:	ins    BYTE PTR es:[edi],dx
  415c58:	sub    BYTE PTR [esi],al
  415c5a:	mov    ecx,0xdc605c40
  415c5f:	cld    
  415c60:	stos   DWORD PTR es:[edi],eax
  415c61:	cmp    ebx,esp
  415c63:	inc    esi
  415c64:	jg     0x415c27
  415c66:	popa   
  415c67:	inc    esp
  415c68:	inc    eax
  415c69:	ds pop ds
  415c6b:	test   al,0x58
  415c6d:	inc    edx
  415c6e:	shl    BYTE PTR [ecx+0x2a],cl
  415c71:	mov    eax,0x89c9b5f4
  415c76:	in     eax,dx
  415c77:	fcomp  DWORD PTR [ebx+0x4c]
  415c7a:	xchg   edx,eax
  415c7b:	aad    0x0
  415c7d:	popa   
  415c7e:	cmp    DWORD PTR [eax-0x59],edi
  415c81:	jp     0x415ced
  415c83:	jg     0x415c19
  415c85:	lods   eax,DWORD PTR ds:[esi]
  415c86:	cli    
  415c87:	and    edx,ebx
  415c89:	or     bl,BYTE PTR [edi+0x36ab7e0a]
  415c8f:	test   eax,0x17c8057b
  415c94:	fld1   
  415c96:	lock mov ah,0x60
  415c99:	pop    edx
  415c9a:	sti    
  415c9b:	(bad)  
  415c9c:	lds    edi,FWORD PTR [edx+0x60]
  415c9f:	xchg   ebx,eax
  415ca0:	mov    ds:0x5aa82584,al
  415ca5:	and    eax,0xd13cf2ee
  415caa:	mov    dh,0xfc
  415cac:	pop    eax
  415cad:	out    0xb0,eax
  415caf:	sbb    eax,0xafe46783
  415cb4:	pop    ebp
  415cb5:	mov    ds:0x87e51659,al
  415cba:	pop    ds
  415cbb:	pop    ebx
  415cbc:	dec    ecx
  415cbd:	je     0x415c47
  415cbf:	jae    0x415c81
  415cc1:	enter  0xc8e1,0xd6
  415cc5:	jb     0x415c77
  415cc7:	jo     0x415ce6
  415cc9:	int    0xd7
  415ccb:	out    dx,eax
  415ccc:	popa   
  415ccd:	add    DWORD PTR [ebx-0x60b2d9d9],ebx
  415cd3:	mov    ebx,ebx
  415cd5:	gs test eax,0xbef88078
  415cdb:	fst    DWORD PTR [edx]
  415cdd:	jb     0x415d44
  415cdf:	mov    bl,0xa4
  415ce1:	mov    bh,0x5b
  415ce3:	jns    0x415ceb
  415ce5:	popa   
  415ce6:	jmp    0xf6986ec4
  415ceb:	fsqrt  
  415ced:	jae    0x415d60
  415cef:	sub    ah,cl
  415cf1:	jg     0x415d4b
  415cf3:	jne    0x415d5e
  415cf5:	stos   DWORD PTR es:[edi],eax
  415cf6:	sahf   
  415cf7:	inc    ebx
  415cf8:	push   eax
  415cf9:	pop    ebx
  415cfa:	jno    0x415c87
  415cfc:	sbb    eax,0x8d729e6b
  415d01:	ds leave 
  415d03:	cmp    bh,al
  415d05:	rcl    esp,cl
  415d07:	xor    eax,0x193f663c
  415d0c:	xor    DWORD PTR [ebp-0x181eff6e],0xffffffe7
  415d13:	jge    0x415cee
  415d15:	fstp   DWORD PTR [ebx]
  415d17:	cmp    ebp,ebx
  415d19:	ins    BYTE PTR es:[edi],dx
  415d1a:	das    
  415d1b:	push   es
  415d1c:	cmc    
  415d1d:	lea    eax,[edx]
  415d1f:	jne    0x415cc3
  415d21:	inc    BYTE PTR [eax+eiz*2+0x6056e0c3]
  415d28:	jmp    0x415d30
  415d2a:	imul   eax,DWORD PTR [ebp+ebx*1+0x69],0xffffffa4
  415d2f:	dec    ecx
  415d30:	cmp    DWORD PTR [eax+0x5b],edi
  415d33:	bound  ebp,QWORD PTR [edi+0x36926533]
  415d39:	add    al,0xb0
  415d3b:	jecxz  0x415d3b
  415d3d:	popf   
  415d3e:	call   0x79e3c239
  415d43:	ins    BYTE PTR es:[edi],dx
  415d44:	mov    esp,DWORD PTR [eax+0x35659760]
  415d4a:	(bad)  
  415d4b:	mov    eax,0x7faae689
  415d50:	or     bl,BYTE PTR [ecx+0x14]
  415d53:	adc    al,0xaa
  415d55:	dec    eax
  415d56:	xchg   esi,eax
  415d57:	gs xchg edi,eax
  415d59:	xor    DWORD PTR [esi],0xb349cfe2
  415d5f:	jbe    0x415dcd
  415d61:	lds    edi,FWORD PTR [eax+0x317fb05c]
  415d67:	jecxz  0x415dd4
  415d69:	pop    es
  415d6a:	into   
  415d6b:	mov    WORD PTR [eax],?
  415d6d:	xchg   DWORD PTR [edi+0x4c],edx
  415d70:	enter  0xcf3c,0xd8
  415d74:	aas    
  415d75:	popa   
  415d76:	loop   0x415daa
  415d78:	push   cs
  415d79:	jp     0x415d2e
  415d7b:	(bad)
  415d80:	call   0x3bda:0xd3c58615
  415d87:	mov    ch,0xf8
  415d89:	jbe    0x415df0
  415d8b:	leave  
  415d8c:	lods   eax,DWORD PTR ds:[esi]
  415d8d:	jne    0x415e0d
  415d8f:	inc    edx
  415d90:	cmp    cl,BYTE PTR [edx+0x78656bde]
  415d96:	inc    ecx
  415d97:	fisttp WORD PTR [ecx-0x5a]
  415d9a:	sbb    al,0xaa
  415d9c:	es aas 
  415d9e:	sbb    ecx,edi
  415da0:	pop    ds
  415da1:	cmp    bl,0x8
  415da4:	int3   
  415da5:	adc    DWORD PTR [ecx+0x6c],0xa56caff0
  415dac:	inc    eax
  415dad:	jmp    0xe1dc14be
  415db2:	xchg   ebp,eax
  415db3:	fbstp  TBYTE PTR [esi+0x1f]
  415db6:	test   eax,0x25d2991b
  415dbb:	fneni(8087 only) 
  415dbd:	pusha  
  415dbe:	jbe    0x415d71
  415dc0:	in     eax,0x34
  415dc2:	mov    bl,0xc8
  415dc4:	dec    ebx
  415dc5:	retf   
  415dc6:	shl    DWORD PTR [edx],cl
  415dc8:	jno    0x415e3b
  415dca:	arpl   cx,bp
  415dcc:	xchg   DWORD PTR [ecx-0x1c78523c],edi
  415dd2:	cmp    dh,BYTE PTR [edx-0x53]
  415dd5:	xchg   esi,eax
  415dd6:	mov    edx,0x6fcd9701
  415ddb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415ddc:	mov    dl,0x80
  415dde:	push   cs
  415ddf:	and    al,0x11
  415de1:	bound  edi,QWORD PTR [eax+ebx*1]
  415de4:	add    edx,DWORD PTR cs:[edx]
  415de7:	push   0x38655064
  415dec:	ds scas al,BYTE PTR es:[edi]
  415dee:	xor    ah,BYTE PTR [ebx+0xa]
  415df1:	add    esi,edx
  415df3:	and    DWORD PTR [ebx-0x7263f30a],0x21
  415dfa:	stos   DWORD PTR es:[edi],eax
  415dfb:	scas   al,BYTE PTR es:[edi]
  415dfc:	arpl   si,bp
  415dfe:	test   eax,0x8db6ecc4
  415e03:	pop    ds
  415e04:	cli    
  415e05:	jnp    0x415e47
  415e07:	popf   
  415e08:	mov    ebp,0x78014b73
  415e0d:	cmp    eax,0xbed74205
  415e12:	and    BYTE PTR [eax-0x1c],al
  415e15:	or     esp,ebp
  415e17:	sub    eax,0x1fa23472
  415e1c:	dec    esp
  415e1d:	test   al,0xf5
  415e1f:	arpl   si,bx
  415e21:	cmp    ecx,DWORD PTR [edi-0x89bd774]
  415e27:	rcr    DWORD PTR [ebp-0x15],cl
  415e2a:	xor    DWORD PTR [esi+0x38a1b889],edx
  415e30:	scas   al,BYTE PTR es:[edi]
  415e31:	xchg   ecx,eax
  415e32:	cmp    ebp,DWORD PTR [edi*8+0x5e4f7dbe]
  415e39:	loopne 0x415dbd
  415e3b:	xor    BYTE PTR [ecx+ecx*2+0x78485d1f],bh
  415e42:	jl     0x415e06
  415e44:	pop    esi
  415e45:	fbld   TBYTE PTR [ecx+0x38e31d7b]
  415e4b:	inc    esp
  415e4c:	in     eax,0x9f
  415e4e:	pop    edi
  415e4f:	dec    ebp
  415e50:	pop    ss
  415e51:	test   al,0xd9
  415e53:	mov    cl,0x57
  415e55:	into   
  415e56:	mov    ebp,0xdc4d05a2
  415e5b:	mov    edi,0xb9f94530
  415e60:	inc    ebx
  415e61:	mov    dh,0xe4
  415e63:	sbb    edx,eax
  415e65:	cwde   
  415e66:	in     eax,0xc
  415e68:	xor    al,0x3d
  415e6a:	loope  0x415e29
  415e6c:	xlat   BYTE PTR ds:[ebx]
  415e6d:	ins    BYTE PTR es:[edi],dx
  415e6e:	mov    bl,BYTE PTR [bp+di]
  415e71:	int3   
  415e72:	cmp    eax,0xdc132c46
  415e77:	ds xchg edx,eax
  415e79:	into   
  415e7a:	or     BYTE PTR [edi+0x54],dl
  415e7d:	fistp  DWORD PTR [esi]
  415e7f:	in     al,0xc
  415e81:	pop    edx
  415e82:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415e83:	ror    BYTE PTR [ecx-0x4f],0x99
  415e87:	or     DWORD PTR [ebp+0x26dd8b69],ebx
  415e8d:	jle    0x415e91
  415e8f:	iret   
  415e90:	es mov dh,cl
  415e93:	in     eax,dx
  415e94:	bound  edx,QWORD PTR [edi+0x763985ef]
  415e9a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415e9b:	inc    eax
  415e9c:	iret   
  415e9d:	aad    0xd8
  415e9f:	ret    
  415ea0:	inc    eax
  415ea1:	jl     0x415ebe
  415ea3:	ja     0x415f24
  415ea5:	bound  esp,QWORD PTR [esi]
  415ea7:	inc    ebp
  415ea8:	sub    eax,0x4540dbee
  415ead:	sbb    DWORD PTR ds:0x8fa20d82,edi
  415eb3:	jne    0x415efa
  415eb5:	cs pushf 
  415eb7:	les    esi,FWORD PTR [edx-0x29756273]
  415ebd:	(bad)  
  415ebe:	mov    dh,0x8f
  415ec0:	xchg   BYTE PTR [ebx],dl
  415ec2:	adc    al,0xc5
  415ec4:	lds    ebp,FWORD PTR ds:0x6fef93e8
  415eca:	push   es
  415ecb:	jmp    0x3a9f:0xa2d69e2d
  415ed2:	aad    0xfb
  415ed4:	test   eax,0x2d8d306f
  415ed9:	jmp    0x415f24
  415edb:	mov    WORD PTR [edx+0x12fa2759],?
  415ee1:	dec    esi
  415ee2:	jecxz  0x415f2a
  415ee4:	adc    bl,BYTE PTR [ebx+0x2c18a7f4]
  415eea:	mov    al,BYTE PTR [ebx+eax*1-0x5e]
  415eee:	pop    edx
  415eef:	add    ecx,DWORD PTR [ecx+eax*8]
  415ef2:	sar    DWORD PTR [eax+0x50c367d3],cl
  415ef8:	pop    ebp
  415ef9:	pop    ebx
  415efa:	jae    0x415f77
  415efc:	setg   BYTE PTR [edi-0x29]
  415f00:	addr16 push cs
  415f02:	fnsave [eax+0x10]
  415f05:	and    dh,BYTE PTR [eax+eax*8-0x71]
  415f09:	sar    DWORD PTR [edx-0x72],cl
  415f0c:	and    BYTE PTR [ebp-0x3c01981b],bh
  415f12:	xor    dl,ch
  415f14:	xchg   edi,eax
  415f15:	cmp    DWORD PTR [ecx],esi
  415f17:	pusha  
  415f18:	jbe    0x415ec2
  415f1a:	and    dh,BYTE PTR [esi-0x64]
  415f1d:	retf   0x5b9f
  415f20:	mov    dl,0x7a
  415f22:	imul   edx,DWORD PTR [ebp+0x782bfdf8],0xfc21cc1b
  415f2c:	jl     0x415f58
  415f2e:	mov    al,ds:0x9f96cb97
  415f33:	arpl   di,si
  415f35:	mov    al,0x2a
  415f37:	sub    eax,0xad3a38bf
  415f3c:	push   ecx
  415f3d:	pop    ds
  415f3e:	aas    
  415f3f:	int    0x53
  415f41:	xor    eax,0x7e82e9d0
  415f46:	ins    BYTE PTR es:[edi],dx
  415f47:	je     0x415f9f
  415f49:	push   esi
  415f4a:	popa   
  415f4b:	div    edi
  415f4d:	mov    al,0xa6
  415f4f:	in     eax,dx
  415f50:	je     0x415f31
  415f52:	cdq    
  415f53:	jbe    0x415f95
  415f55:	iret   
  415f56:	loop   0x415f84
  415f58:	aad    0x22
  415f5a:	loopne 0x415efb
  415f5c:	jge    0x415f52
  415f5e:	jne    0x415fd7
  415f60:	in     eax,0x5
  415f62:	ss xchg ecx,eax
  415f64:	aas    
  415f65:	mov    ebp,0x6cd17965
  415f6a:	das    
  415f6b:	das    
  415f6c:	add    dh,BYTE PTR [esp+eax*4+0x1f63896b]
  415f73:	dec    ecx
  415f74:	gs loopne 0x415fa4
  415f77:	aad    0x49
  415f79:	xchg   DWORD PTR [ebx+0x1a],ebx
  415f7c:	xchg   DWORD PTR [ecx+0x12],esi
  415f7f:	add    bl,BYTE PTR [esi]
  415f81:	adc    dh,ah
  415f83:	sbb    bl,BYTE PTR cs:[esi+esi*8]
  415f87:	lock mov esp,0x32df017a
  415f8d:	adc    BYTE PTR [ecx+esi*8+0xae26b7e],bh
  415f94:	pop    ebp
  415f95:	sbb    eax,0xfad9f4e4
  415f9a:	fisub  DWORD PTR ds:0x57e0b3ba
  415fa0:	test   ah,ch
  415fa2:	fcom   DWORD PTR [ecx-0x376237ef]
  415fa8:	adc    eax,0x8eaf43a0
  415fad:	imul   ecx,DWORD PTR [esp+esi*1+0xfee0bf1],0x4b3ef819
  415fb8:	inc    esp
  415fb9:	xchg   ebx,eax
  415fba:	push   edx
  415fbb:	adc    BYTE PTR [ecx-0x73],ah
  415fbe:	xor    ecx,ebp
  415fc0:	add    esp,DWORD PTR [ecx+0x4b]
  415fc3:	push   ebx
  415fc4:	stc    
  415fc5:	sub    al,ah
  415fc7:	xlat   BYTE PTR ds:[ebx]
  415fc8:	cmp    eax,0xf70b751
  415fcd:	call   FWORD PTR [ebx-0x10]
  415fd0:	inc    esp
  415fd1:	cmp    dl,bh
  415fd3:	xchg   esi,eax
  415fd4:	xlat   BYTE PTR ds:[ebx]
  415fd5:	xchg   ebx,eax
  415fd6:	inc    eax
  415fd7:	pop    esi
  415fd8:	cmp    DWORD PTR [eax+eax*4-0x4e15b614],esp
  415fdf:	stos   BYTE PTR es:[edi],al
  415fe0:	out    0xc2,al
  415fe2:	test   al,0x8b
  415fe4:	xor    ebx,DWORD PTR [edx]
  415fe6:	in     eax,0xb7
  415fe8:	xchg   esp,eax
  415fe9:	push   edi
  415fea:	(bad)  [edx-0x7658d831]
  415ff0:	aaa    
  415ff1:	fs adc al,0x49
  415ff4:	sbb    edx,esi
  415ff6:	(bad)  
  415ff9:	rcl    DWORD PTR [ecx],1
  415ffb:	xchg   ax,ax
  415ffd:	fs jnp 0x416036
  416000:	mov    edi,0xa7fbe754
  416005:	add    cl,BYTE PTR [ebp-0x1f]
  416008:	lds    esp,FWORD PTR [eax]
  41600a:	cmp    ebx,DWORD PTR [eax-0xd27e41]
  416010:	gs jecxz 0x415ffc
  416013:	jge    0x416023
  416015:	jbe    0x41600d
  416017:	sub    esi,ebx
  416019:	adc    al,0x99
  41601b:	lods   al,BYTE PTR ds:[esi]
  41601c:	in     al,0x8b
  41601e:	pushw  es
  416020:	sbb    esp,DWORD PTR [ebp-0x62672ab7]
  416026:	xchg   DWORD PTR [ebx+0x41],ebp
  416029:	push   cs
  41602a:	push   edx
  41602b:	out    dx,al
  41602c:	push   ebx
  41602d:	sub    eax,0x967e5c33
  416032:	add    ch,BYTE PTR [eax]
  416034:	xchg   esi,eax
  416035:	pop    edi
  416036:	lock loop 0x416049
  416039:	lods   eax,DWORD PTR ds:[si]
  41603b:	adc    eax,0x5d8396b6
  416040:	sbb    eax,0x86da31b7
  416045:	xchg   edi,esp
  416047:	fld    TBYTE PTR [ecx]
  416049:	add    DWORD PTR [esi],esi
  41604b:	out    0xc0,eax
  41604d:	cmc    
  41604e:	mov    bh,0xbd
  416050:	imul   DWORD PTR [edx+0x1]
  416053:	pop    edx
  416054:	xchg   edx,eax
  416055:	sbb    ch,0x81
  416058:	xor    DWORD PTR [eax-0x68],0x13
  41605c:	stos   BYTE PTR es:[edi],al
  41605d:	or     al,0x7a
  416060:	pop    ebx
  416061:	inc    esi
  416062:	cdq    
  416063:	xchg   edi,eax
  416064:	pop    edx
  416065:	loop   0x4160b0
  416067:	pop    edi
  416068:	sub    BYTE PTR [eax],bl
  41606a:	push   edx
  41606b:	push   eax
  41606c:	lahf   
  41606d:	repz adc al,0x4
  416070:	lods   al,BYTE PTR ds:[esi]
  416071:	ret    
  416072:	push   ecx
  416073:	lods   al,BYTE PTR ds:[esi]
  416074:	scas   eax,DWORD PTR es:[edi]
  416075:	or     al,0x88
  416077:	mov    esi,0x39d60696
  41607c:	mov    al,BYTE PTR [ecx+edi*2-0x6e06e501]
  416083:	mov    edi,0x5ff53e2c
  416088:	(bad)  
  416089:	pop    ebx
  41608a:	push   es
  41608b:	test   eax,0xa3957235
  416090:	mov    ebp,edi
  416092:	retf   
  416093:	mov    ebx,DWORD PTR [edi+0x0]
  416096:	sub    DWORD PTR [ecx-0x66],edi
  416099:	fstp   TBYTE PTR [ebx+edi*8]
  41609c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41609d:	lea    ebp,[edx+0x351dda7]
  4160a3:	push   esp
  4160a4:	and    ebp,DWORD PTR [ebp+0x3fad2d4c]
  4160aa:	lods   al,BYTE PTR ds:[esi]
  4160ab:	leave  
  4160ac:	mov    ds:0x1107a187,al
  4160b1:	in     eax,0xd9
  4160b3:	lods   eax,DWORD PTR ds:[esi]
  4160b4:	jle    0x416123
  4160b6:	cmp    al,0xe6
  4160b8:	dec    esp
  4160b9:	ins    BYTE PTR es:[edi],dx
  4160ba:	mov    al,0x4d
  4160bc:	xor    eax,0x8763a920
  4160c1:	pop    ecx
  4160c2:	daa    
  4160c3:	inc    edx
  4160c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4160c5:	fcomp  DWORD PTR [ecx-0x5]
  4160c8:	jno    0x416109
  4160ca:	add    al,0x94
  4160cc:	add    DWORD PTR [eax+0x533d635d],edi
  4160d2:	icebp  
  4160d3:	lods   eax,DWORD PTR ds:[esi]
  4160d4:	sbb    DWORD PTR [eax],edx
  4160d6:	stos   BYTE PTR es:[edi],al
  4160d7:	ins    BYTE PTR es:[edi],dx
  4160d8:	xchg   ecx,eax
  4160d9:	lods   al,BYTE PTR ds:[esi]
  4160da:	pop    edx
  4160db:	jno    0x416071
  4160dd:	leave  
  4160de:	or     bh,bh
  4160e0:	std    
  4160e1:	dec    ecx
  4160e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4160e3:	cwde   
  4160e4:	cmc    
  4160e5:	cwde   
  4160e6:	mov    ecx,0x16942bb3
  4160eb:	ret    0x5179
  4160ee:	xor    al,BYTE PTR [esi]
  4160f0:	loopne 0x4160be
  4160f2:	sub    al,0xfb
  4160f4:	leave  
  4160f5:	pop    ebx
  4160f6:	stos   BYTE PTR es:[edi],al
  4160f7:	cmp    bh,ah
  4160f9:	mov    ds:0x7d5dc5ee,al
  4160fe:	pop    esi
  4160ff:	jo     0x416087
  416101:	adc    DWORD PTR [edi+edi*8],0xe44933d4
  416108:	call   0xd3bb:0x85460795
  41610f:	imul   esp,DWORD PTR ds:0xe5f5b0a7,0x35
  416116:	stc    
  416117:	(bad)
  41611b:	jmp    0xb7deb66a
  416120:	mov    edi,0x81351156
  416125:	fld    TBYTE PTR [esi-0x26]
  416128:	mov    esi,ebp
  41612a:	or     DWORD PTR [ecx],esp
  41612c:	leave  
  41612d:	sub    al,0xc2
  41612f:	pop    ebx
  416130:	pusha  
  416131:	mov    ah,0xb6
  416133:	jno    0x416105
  416135:	xor    BYTE PTR [esi+0x2c],bl
  416138:	shr    DWORD PTR [eax+edi*2+0x5a],0xc
  41613d:	add    al,0x46
  41613f:	pop    ebx
  416140:	(bad)  
  416141:	div    BYTE PTR [eax+0x58a9b8b9]
  416147:	out    dx,al
  416148:	mov    ds:0xd2d2ed98,al
  41614d:	mov    al,0x26
  41614f:	fst    DWORD PTR [edx]
  416151:	mov    BYTE PTR [edx],bl
  416153:	pop    es
  416154:	ja     0x41614a
  416156:	add    al,0x15
  416158:	push   ebp
  416159:	or     al,BYTE PTR [ebp+0x3a]
  41615c:	imul   eax,DWORD PTR [eax],0xc4bd0be5
  416162:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416163:	dec    edx
  416164:	ins    BYTE PTR es:[edi],dx
  416165:	pop    esi
  416166:	inc    edi
  416167:	aad    0x56
  416169:	sahf   
  41616a:	(bad)  
  41616b:	fnstsw WORD PTR [eax+0x4207b1ac]
  416171:	cwde   
  416172:	js     0x4161e6
  416174:	mov    edi,0x4b67d619
  416179:	mov    es,WORD PTR [edx-0x608153e9]
  41617f:	into   
  416180:	jae    0x416150
  416182:	adc    BYTE PTR [ebp-0x2f],cl
  416185:	and    BYTE PTR [ebp+0x19],cl
  416188:	add    eax,0xc2193d22
  41618d:	or     ah,BYTE PTR [ebp-0x21bdd6d4]
  416193:	pop    ss
  416194:	jnp    0x4161d5
  416196:	mov    esp,0x431e0ab5
  41619b:	adc    esi,ebp
  41619d:	das    
  41619e:	jp     0x4161d5
  4161a0:	mov    dh,0x90
  4161a2:	ja     0x416211
  4161a4:	repz push esp
  4161a6:	mov    ds:0x8230ac93,al
  4161ab:	stc    
  4161ac:	js     0x416167
  4161ae:	push   esi
  4161af:	push   0x7
  4161b1:	(bad)  
  4161b3:	call   0x4166:0x462884cf
  4161ba:	dec    esi
  4161bb:	loopne 0x4161b4
  4161bd:	cld    
  4161be:	fdivr  DWORD PTR [ebp-0x45]
  4161c1:	inc    esi
  4161c2:	cmp    esp,esi
  4161c4:	enter  0xc6e9,0xd6
  4161c8:	and    ecx,ebp
  4161ca:	leave  
  4161cb:	jmp    0x5838:0x8a4cd4a7
  4161d2:	jg     0x416198
  4161d4:	mov    edi,ss
  4161d6:	sub    edi,edi
  4161d8:	out    dx,al
  4161d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4161da:	ficomp WORD PTR [eax+0x617e03f]
  4161e0:	out    dx,al
  4161e1:	scas   eax,DWORD PTR es:[edi]
  4161e2:	push   ebp
  4161e3:	out    dx,al
  4161e4:	push   ecx
  4161e5:	pop    edi
  4161e6:	xchg   ecx,eax
  4161e7:	in     eax,dx
  4161e8:	cld    
  4161e9:	call   0xa61e:0xbb85fdbe
  4161f0:	pop    ecx
  4161f1:	dec    edx
  4161f2:	clc    
  4161f3:	push   esp
  4161f4:	(bad)  
  4161f5:	div    BYTE PTR [ebp-0x8]
  4161f8:	daa    
  4161f9:	out    0x6b,al
  4161fb:	out    dx,al
  4161fc:	mov    al,ds:0xc3ac3ee6
  416201:	mov    esi,?
  416203:	out    0xa5,eax
  416205:	jle    0x41621f
  416207:	xor    al,BYTE PTR [esi-0xf417635]
  41620d:	mov    WORD PTR [ebp+eiz*2-0x6],ds
  416211:	bound  eax,QWORD PTR [ebx+0x2ae4bc42]
  416217:	xor    cl,bl
  416219:	push   esp
  41621a:	xor    esi,DWORD PTR ds:0x725baa90
  416220:	jp     0x4161d6
  416222:	jg     0x41622f
  416224:	(bad)  
  416225:	int    0x70
  416227:	mov    edx,0xdc928c58
  41622c:	cdq    
  41622d:	cld    
  41622e:	or     dl,BYTE PTR [ecx+0x5d79c04a]
  416234:	scas   eax,DWORD PTR es:[edi]
  416235:	inc    edi
  416236:	shr    DWORD PTR [ebx],cl
  416238:	add    eax,0xec036c56
  41623d:	xchg   edi,eax
  41623e:	push   ecx
  41623f:	jne    0x41629c
  416241:	add    DWORD PTR [edx],0x48
  416244:	ins    DWORD PTR es:[edi],dx
  416245:	pop    esi
  416246:	xchg   DWORD PTR [ebx-0x72],ebp
  416249:	popa   
  41624a:	stos   WORD PTR es:[edi],ax
  41624c:	mov    ah,0x81
  41624e:	jo     0x41625f
  416250:	imul   esi,DWORD PTR [ebx-0x7],0x7c0654e6
  416257:	dec    esi
  416258:	iret   
  416259:	loop   0x4162a3
  41625b:	xchg   DWORD PTR [esi],ebx
  41625d:	push   esp
  41625e:	ja     0x416220
  416260:	mov    al,0x9f
  416262:	mov    al,0x93
  416264:	lea    edi,[edx]
  416266:	xchg   ecx,eax
  416267:	push   es
  416268:	test   ebx,esp
  41626a:	and    eax,0x5d4edda4
  41626f:	mov    ds:0xef668e06,eax
  416274:	mov    ecx,0x28d85963
  416279:	in     al,dx
  41627a:	ror    esp,cl
  41627c:	inc    ebp
  41627d:	sar    BYTE PTR [edi],1
  41627f:	sbb    dh,BYTE PTR [ecx+ebx*8]
  416282:	sbb    BYTE PTR [edi+0x4c],ah
  416285:	cld    
  416286:	lds    ebx,FWORD PTR [ebp-0x47]
  416289:	retf   
  41628a:	ret    0x5668
  41628d:	xor    cl,BYTE PTR [esi-0xf]
  416290:	push   ecx
  416291:	lock cli 
  416293:	stos   DWORD PTR es:[edi],eax
  416294:	mov    ds,WORD PTR [eax]
  416296:	mov    bh,0x64
  416298:	xor    esi,edx
  41629a:	loopne 0x416250
  41629c:	test   al,0xb3
  41629e:	cmp    bh,BYTE PTR [esi]
  4162a0:	dec    eax
  4162a1:	sbb    edx,esp
  4162a3:	pushf  
  4162a4:	adc    al,0xc7
  4162a6:	xchg   esi,eax
  4162a7:	rcr    dl,1
  4162a9:	sti    
  4162aa:	retf   
  4162ab:	or     ah,BYTE PTR [esi-0x73f3beab]
  4162b1:	adc    ah,0x9f
  4162b4:	cmp    BYTE PTR [eax],bl
  4162b6:	push   ebp
  4162b7:	dec    edi
  4162b8:	dec    esp
  4162b9:	mov    ecx,0xbe26786e
  4162be:	retf   0x3376
  4162c1:	mov    edi,0xdfedefc5
  4162c6:	mov    fs,WORD PTR [ebp-0x57204b37]
  4162cc:	inc    esi
  4162cd:	std    
  4162ce:	or     al,0x8f
  4162d0:	lea    edi,[edi+ebx*8]
  4162d3:	popa   
  4162d4:	add    al,0x12
  4162d6:	das    
  4162d7:	or     dl,BYTE PTR [edx-0x70]
  4162da:	dec    edx
  4162db:	add    al,0x62
  4162dd:	mov    DWORD PTR [edi+ecx*4],edi
  4162e0:	fld    st(7)
  4162e2:	inc    ebx
  4162e3:	leave  
  4162e4:	or     eax,0x239b77c
  4162e9:	cdq    
  4162ea:	ins    DWORD PTR es:[edi],dx
  4162eb:	add    eax,0x7e490933
  4162f0:	adc    al,0xc1
  4162f2:	inc    eax
  4162f3:	pop    ebp
  4162f4:	mov    al,ds:0x29c475
  4162f9:	outs   dx,DWORD PTR ds:[esi]
  4162fa:	iret   
  4162fb:	fcmovne st,st(7)
  4162fd:	push   esi
  4162fe:	cmp    edi,DWORD PTR [edi]
  416300:	or     bh,BYTE PTR [esi+0x34]
  416303:	jecxz  0x416376
  416305:	daa    
  416306:	outs   dx,DWORD PTR ds:[esi]
  416307:	pop    ss
  416308:	push   0xaa6596e0
  41630d:	int    0x6c
  41630f:	imul   ecx,DWORD PTR [edx+0x3c],0x3b5ba1c7
  416316:	ja     0x416346
  416318:	inc    ecx
  416319:	push   es
  41631a:	xchg   dh,bh
  41631c:	fs or  al,0xdf
  41631f:	xchg   edi,eax
  416320:	(bad)  
  416321:	lods   al,BYTE PTR ds:[esi]
  416322:	inc    ebx
  416323:	in     al,dx
  416324:	imul   eax,DWORD PTR [edx-0x3d],0xb8b314f
  41632b:	ja     0x416339
  41632d:	das    
  41632e:	mov    dl,ah
  416330:	push   ecx
  416331:	mov    WORD PTR [ecx-0x38],?
  416334:	adc    DWORD PTR [esi-0x11eec01d],edx
  41633a:	adc    dh,BYTE PTR [eax]
  41633c:	mov    ebx,0xdbc13def
  416341:	xchg   ebx,eax
  416342:	sub    ecx,esp
  416344:	enter  0xebbb,0xe1
  416348:	retf   0x82f6
  41634b:	xchg   edx,eax
  41634c:	add    ch,BYTE PTR [edx+0x2e]
  41634f:	(bad)  
  416350:	jmp    0x41630a
  416352:	xchg   DWORD PTR [ebp-0x44],ebx
  416355:	sub    al,0x52
  416357:	test   al,0xee
  416359:	daa    
  41635a:	xchg   bl,dh
  41635c:	inc    edi
  41635d:	ds inc eax
  41635f:	xchg   edi,eax
  416360:	fisttp DWORD PTR [ebx]
  416362:	sub    bl,BYTE PTR [esi]
  416364:	(bad)  
  416365:	sub    eax,0x996f8897
  41636a:	adc    al,0x64
  41636c:	cmp    eax,0x1f8b4468
  416371:	out    dx,eax
  416372:	stos   DWORD PTR es:[edi],eax
  416373:	shl    DWORD PTR [ebx],0x47
  416376:	cwde   
  416377:	fcmovne st,st(4)
  416379:	inc    ebp
  41637a:	fsub   QWORD PTR [ebx-0x45]
  41637d:	aas    
  41637e:	fist   DWORD PTR [ebx-0x6e]
  416381:	popf   
  416382:	inc    edx
  416383:	jmp    0x416382
  416385:	cwde   
  416386:	sub    DWORD PTR [esi],ebp
  416388:	jge    0x416360
  41638a:	inc    ebx
  41638b:	and    eax,0x9725fa12
  416390:	cdq    
  416391:	xor    BYTE PTR [ebp+0xa52737a],ah
  416397:	pop    eax
  416398:	ja     0x41639a
  41639a:	push   ecx
  41639b:	mov    BYTE PTR [eax],ah
  41639d:	in     al,dx
  41639e:	mov    edx,es
  4163a0:	jmp    0x4163a8
  4163a2:	(bad)
  4163a5:	sub    BYTE PTR [edx+0x6a84a756],bh
  4163ab:	ins    DWORD PTR es:[edi],dx
  4163ac:	div    DWORD PTR [edx+ecx*1-0x40]
  4163b0:	xor    edi,DWORD PTR [esi]
  4163b2:	aaa    
  4163b3:	push   es
  4163b4:	cwde   
  4163b5:	mov    ds:0x67882e86,eax
  4163ba:	je     0x41643b
  4163bc:	pop    eax
  4163bd:	imul   eax,DWORD PTR [edx],0xf28e94c7
  4163c3:	push   eax
  4163c4:	pop    ecx
  4163c5:	xchg   ecx,eax
  4163c6:	addr16 sahf 
  4163c8:	dec    ebx
  4163c9:	inc    ebp
  4163ca:	jnp    0x41641c
  4163cc:	mov    BYTE PTR [ecx+edi*2],bh
  4163cf:	sub    ecx,0xffffffa8
  4163d2:	(bad)  
  4163d3:	mov    eax,ds:0xaa91c4fd
  4163d8:	mov    eax,ds:0xcd2d00b4
  4163dd:	daa    
  4163de:	fsubrp st(0),st
  4163e0:	aad    0x96
  4163e2:	fs pusha 
  4163e4:	rol    ecx,cl
  4163e6:	(bad)  
  4163e8:	mov    ebx,DWORD PTR [esi-0x7c]
  4163eb:	mov    BYTE PTR [edi+0x0],al
  4163ee:	push   es
  4163ef:	mov    ebp,0xa07e8b9a
  4163f4:	pop    esi
  4163f5:	or     dh,bh
  4163f7:	mov    ds:0xb4294708,al
  4163fc:	in     eax,0x39
  4163fe:	add    eax,0x21c0006e
  416403:	ja     0x416393
  416405:	jge    0x416428
  416407:	call   0x35be551a
  41640c:	push   ss
  41640d:	cmc    
  41640e:	(bad)  
  41640f:	xor    BYTE PTR [ebp+0x76564687],dh
  416415:	popf   
  416416:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416417:	mov    eax,ds:0x47d81842
  41641c:	mov    esp,0x53b914e5
  416421:	inc    esi
  416422:	retf   0xb68c
  416425:	lods   al,BYTE PTR ds:[esi]
  416426:	cmp    BYTE PTR [esi-0x20fc5779],bh
  41642c:	mov    ch,0x92
  41642e:	aaa    
  41642f:	out    0x32,al
  416431:	cmp    dl,BYTE PTR [esi-0x42eb4d39]
  416437:	cmp    eax,0xa0e6e97
  41643c:	mov    edi,0xf10470f1
  416441:	shl    ecx,cl
  416443:	gs out 0xa0,eax
  416446:	inc    ecx
  416447:	push   eax
  416448:	xchg   edi,eax
  416449:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41644a:	xor    al,ch
  41644c:	mov    WORD PTR [eax+0x3f],?
  41644f:	sbb    esp,ecx
  416451:	add    al,0x90
  416453:	cmc    
  416454:	fmul   QWORD PTR [ecx-0x1f]
  416457:	mov    DWORD PTR [ebp-0x71],esp
  41645a:	push   ebx
  41645b:	or     DWORD PTR ds:0x4c257c8a,esp
  416461:	xor    eax,DWORD PTR [edi+0x13]
  416464:	fs push esi
  416466:	loope  0x416480
  416468:	test   al,0xcb
  41646a:	xor    eax,0x4b17db49
  41646f:	push   edi
  416470:	mov    ecx,DWORD PTR [ebx]
  416472:	push   edi
  416473:	or     esi,DWORD PTR [edx]
  416475:	sub    BYTE PTR [edx],ah
  416477:	loop   0x41643a
  416479:	rcr    BYTE PTR [ebx],cl
  41647b:	outs   dx,DWORD PTR ds:[esi]
  41647c:	mov    ch,0xe0
  41647e:	mov    ebx,0x8fed02c5
  416483:	outs   dx,BYTE PTR ds:[esi]
  416484:	mov    ch,0x55
  416486:	cmc    
  416487:	jle    0x416417
  416489:	lahf   
  41648a:	jae    0x41641a
  41648c:	daa    
  41648d:	out    0xfc,eax
  41648f:	popa   
  416490:	in     eax,dx
  416491:	std    
  416492:	jae    0x416467
  416494:	pusha  
  416495:	xchg   DWORD PTR [ebx-0x6e],ecx
  416498:	in     al,0xae
  41649a:	cmp    al,0x86
  41649c:	fdivr  st(6),st
  41649e:	and    eax,0xdafcd738
  4164a3:	add    ch,BYTE PTR [ebx+0x668031d6]
  4164a9:	ins    BYTE PTR es:[edi],dx
  4164aa:	shr    BYTE PTR [ebx],0x7d
  4164ad:	imul   ebp,ecx,0x363887fe
  4164b3:	mov    ah,0xc8
  4164b5:	add    al,0x84
  4164b7:	mov    al,ds:0xc339b575
  4164bc:	dec    ebx
  4164bd:	and    DWORD PTR [edi+0x59],edi
  4164c0:	xchg   ebx,eax
  4164c1:	xor    eax,0x880dac00
  4164c6:	xchg   esi,eax
  4164c7:	mov    bh,0xb
  4164c9:	xlat   BYTE PTR ds:[ebx]
  4164ca:	adc    DWORD PTR [edx],0x5b74e4e1
  4164d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4164d1:	femms  
  4164d3:	jno    0x41653e
  4164d5:	jl     0x4164aa
  4164d7:	cdq    
  4164d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4164d9:	cwde   
  4164da:	and    DWORD PTR [esi-0x46],eax
  4164dd:	das    
  4164de:	sbb    al,0x81
  4164e0:	call   0x50b9:0xb5aaed0b
  4164e7:	or     al,0xb5
  4164e9:	stc    
  4164ea:	push   0xffffff83
  4164ec:	mov    edi,0x6fe9d7c8
  4164f1:	xlat   BYTE PTR ds:[ebx]
  4164f2:	xor    eax,0x9b200b1a
  4164f7:	sbb    al,0x8d
  4164f9:	jmp    0x912d:0x7ff59b09
  416500:	mov    dh,BYTE PTR [ebx]
  416502:	fdivr  st(0),st
  416504:	out    dx,al
  416505:	in     al,dx
  416506:	mov    dh,0x6a
  416508:	adc    dl,BYTE PTR [edi+0x7d65372a]
  41650e:	and    al,0xf0
  416510:	stos   BYTE PTR es:[edi],al
  416511:	mov    cl,0xf0
  416513:	inc    esi
  416514:	out    dx,eax
  416515:	mov    eax,ds:0xa14e8276
  41651a:	jns    0x4164e4
  41651c:	retf   0xf4b9
  41651f:	add    eax,0xc12b9bcf
  416524:	dec    edx
  416525:	jmp    0xa268:0xcbacfcdf
  41652c:	mov    ah,0xd5
  41652e:	push   eax
  41652f:	jnp    0x416567
  416531:	bound  ebp,QWORD PTR [ecx+0x6d6f7c15]
  416537:	(bad)  
  416538:	push   edi
  416539:	add    eax,0x7c000d05
  41653e:	xchg   edi,eax
  41653f:	xor    BYTE PTR ds:0x60b7a3eb,bh
  416545:	in     eax,0xff
  416547:	in     al,0xab
  416549:	fnstenv [ebx]
  41654b:	retf   
  41654c:	repnz iret 
  41654e:	(bad)  
  41654f:	idiv   edi
  416551:	jns    0x4164ef
  416553:	add    cl,dh
  416555:	je     0x41656e
  416557:	ins    BYTE PTR es:[edi],dx
  416558:	mov    ds:0xf20faa11,eax
  41655d:	les    eax,FWORD PTR [esi-0x1917994c]
  416563:	sahf   
  416564:	imul   eax,DWORD PTR [edx],0xfa2f41cb
  41656a:	push   edi
  41656b:	(bad)  
  41656c:	out    0xcb,al
  41656e:	xlat   BYTE PTR ds:[ebx]
  41656f:	and    eax,0x641e76cc
  416574:	imul   esi,DWORD PTR [eax-0x77],0x759a3d65
  41657b:	test   BYTE PTR [esi+0x74f52f5c],ah
  416581:	lods   al,BYTE PTR ds:[esi]
  416582:	or     dh,bl
  416584:	adc    dh,al
  416586:	fcomp  DWORD PTR [edx+ebp*8-0x6f87041d]
  41658d:	push   esi
  41658e:	add    BYTE PTR [ecx-0x19],0x5
  416592:	sub    al,0xa9
  416594:	xchg   edx,eax
  416595:	dec    edi
  416596:	add    BYTE PTR ds:0x5f44b20f,bh
  41659c:	xchg   ecx,eax
  41659d:	(bad)
  4165a0:	dec    edi
  4165a1:	jns    0x416543
  4165a3:	ins    BYTE PTR es:[edi],dx
  4165a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4165a5:	pop    ecx
  4165a6:	jmp    0x4165fa
  4165a8:	pushf  
  4165a9:	inc    eax
  4165aa:	leave  
  4165ab:	add    ah,0x17
  4165ae:	jb     0x41657c
  4165b0:	pop    es
  4165b1:	xor    eax,0x24cef9c4
  4165b6:	icebp  
  4165b7:	and    al,0x2d
  4165b9:	jge    0x41657d
  4165bb:	ja     0x4165e5
  4165bd:	rol    DWORD PTR [ebp+0x288e0a79],1
  4165c3:	adc    dh,BYTE PTR [edi+0x31b700c0]
  4165c9:	and    DWORD PTR [ebx+0x62],esi
  4165cc:	fisttp DWORD PTR [eax+0x2d]
  4165cf:	dec    DWORD PTR [esi]
  4165d1:	les    ebx,FWORD PTR fs:[edx-0x41]
  4165d5:	jnp    0x4165cd
  4165d7:	cdq    
  4165d8:	pop    ebx
  4165d9:	xor    BYTE PTR [ebp+0x2915b02d],0x57
  4165e0:	dec    esi
  4165e1:	popa   
  4165e2:	sbb    eax,0xbd083377
  4165e7:	cmp    al,0x14
  4165e9:	xor    DWORD PTR [esi-0x76],esp
  4165ec:	sti    
  4165ed:	mov    edx,DWORD PTR [eax]
  4165ef:	scas   al,BYTE PTR es:[edi]
  4165f0:	mov    al,0x2
  4165f2:	sbb    DWORD PTR ds:0xe35b7544,ecx
  4165f8:	adc    DWORD PTR ds:0x27be740e,ecx
  4165fe:	arpl   si,cx
  416600:	data16 jecxz 0x4165c0
  416603:	or     al,0x6a
  416605:	jg     0x4165eb
  416607:	shl    BYTE PTR [edx],cl
  416609:	call   0xc3f0c97b
  41660e:	mov    ecx,0x187d0d71
  416613:	mov    al,cl
  416615:	xor    esp,DWORD PTR [edx+eiz*2+0x7b]
  416619:	jnp    0x416675
  41661b:	test   eax,0xcc8edfd1
  416620:	push   cs
  416621:	pop    ebx
  416622:	rcl    BYTE PTR [ebp+0x24],1
  416625:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416626:	fsubr  DWORD PTR [edx+ecx*1]
  416629:	dec    ebx
  41662a:	dec    ecx
  41662b:	int3   
  41662c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41662d:	scas   eax,DWORD PTR es:[edi]
  41662e:	or     dl,BYTE PTR [ebp+0x23c9f06f]
  416634:	in     al,0xd6
  416636:	scas   eax,DWORD PTR es:[edi]
  416637:	(bad)  
  416638:	aam    0x19
  41663a:	jle    0x4165e7
  41663c:	hlt    
  41663d:	das    
  41663e:	mov    dh,0xde
  416640:	or     BYTE PTR [ebp-0x1f5d0eee],ah
  416646:	retf   
  416647:	push   esp
  416648:	inc    eax
  416649:	push   ebx
  41664a:	iret   
  41664b:	inc    esp
  41664c:	mov    ds:0xc7d2fe92,al
  416651:	mov    dh,0xb9
  416653:	push   eax
  416654:	imul   esi,DWORD PTR [edi+0x4c],0xffffffb1
  416658:	inc    ecx
  416659:	outs   dx,BYTE PTR ds:[esi]
  41665a:	inc    esi
  41665b:	xlat   BYTE PTR ds:[ebx]
  41665c:	jle    0x41660e
  41665e:	xchg   esi,esi
  416660:	add    BYTE PTR [ebx],0xa8
  416663:	enter  0xeddd,0x75
  416667:	and    al,0xe2
  416669:	lods   eax,DWORD PTR ds:[esi]
  41666a:	pop    ebx
  41666b:	mul    ebx
  41666d:	popf   
  41666e:	mov    ah,0xa1
  416670:	xchg   edx,eax
  416671:	push   esp
  416672:	loopne 0x41664b
  416674:	arpl   WORD PTR [eax-0x245096f0],bx
  41667a:	lahf   
  41667b:	call   FWORD PTR [ebp+0x23]
  41667e:	jbe    0x4166f9
  416680:	imul   eax,edx,0x72
  416683:	lea    esp,[esi-0xa]
  416686:	pop    eax
  416687:	scas   eax,DWORD PTR es:[di]
  416689:	fwait
  41668a:	xor    edi,DWORD PTR [ecx]
  41668c:	pop    edi
  41668d:	imul   edi,DWORD PTR [ecx+0xf],0xffffffbe
  416691:	xchg   edi,eax
  416692:	sbb    al,0x70
  416694:	shl    DWORD PTR [edx],cl
  416696:	into   
  416697:	cdq    
  416698:	mov    ah,0x3b
  41669a:	scas   al,BYTE PTR es:[edi]
  41669b:	arpl   WORD PTR [ecx+0x5b],si
  41669e:	mov    esp,0x555efd59
  4166a3:	dec    esi
  4166a4:	push   es
  4166a5:	sti    
  4166a6:	lea    ebx,[edx+0x16]
  4166a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4166aa:	xor    BYTE PTR [edx],al
  4166ac:	es or  dh,al
  4166af:	sar    ecx,1
  4166b1:	xchg   edi,eax
  4166b2:	test   al,bh
  4166b4:	push   cs
  4166b5:	dec    eax
  4166b6:	fidiv  DWORD PTR [ebx-0x7f98e1a6]
  4166bc:	stos   BYTE PTR es:[edi],al
  4166bd:	into   
  4166be:	mov    dh,0x44
  4166c0:	xchg   ebx,eax
  4166c1:	or     dh,BYTE PTR [ecx]
  4166c3:	and    DWORD PTR [esi],edi
  4166c5:	(bad)  
  4166c6:	mov    eax,ds:0x1eaa4693
  4166cb:	jne    0x416727
  4166cd:	mov    ds:0x8abc526,eax
  4166d2:	das    
  4166d3:	test   eax,esp
  4166d5:	test   BYTE PTR [esi],bh
  4166d7:	fwait
  4166d8:	out    0xad,al
  4166da:	mov    ebp,0xd8a452fc
  4166df:	fidiv  WORD PTR [ebx+0x65ab3322]
  4166e5:	dec    edx
  4166e6:	dec    DWORD PTR [eax+edi*8-0x7d]
  4166ea:	inc    edi
  4166eb:	pop    es
  4166ec:	icebp  
  4166ed:	nop
  4166ee:	cmp    DWORD PTR [ecx],0xfff22d26
  4166f4:	loope  0x41673e
  4166f6:	mov    ch,0x31
  4166f8:	std    
  4166f9:	leave  
  4166fa:	sbb    al,ch
  4166fc:	xor    ch,ah
  4166fe:	icebp  
  4166ff:	mov    al,0xf3
  416701:	xor    eax,0x1af8894a
  416706:	ret    
  416707:	mov    al,ds:0xb107e91b
  41670c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41670d:	or     BYTE PTR [edi+0x29],ah
  416710:	pop    ds
  416711:	(bad)  
  416712:	je     0x416753
  416714:	dec    eax
  416715:	aaa    
  416716:	inc    eax
  416717:	imul   eax,edi,0x31
  41671a:	gs pop ecx
  41671c:	enter  0xc33d,0xd7
  416720:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416721:	(bad)  
  416722:	shr    DWORD PTR ds:0xb81b7a37,0x38
  416729:	xchg   DWORD PTR [ecx+0x1f],esi
  41672c:	inc    esp
  41672d:	sbb    dl,BYTE PTR [esi+0x6c]
  416730:	scas   al,BYTE PTR es:[edi]
  416731:	add    ah,BYTE PTR [ebx+0x78a91efa]
  416737:	(bad)  
  416738:	rep outs dx,BYTE PTR ds:[esi]
  41673a:	or     dh,BYTE PTR [esi+0x7b]
  41673d:	aaa    
  41673e:	dec    esi
  41673f:	into   
  416740:	out    0x33,al
  416742:	and    BYTE PTR [esi],ah
  416744:	and    DWORD PTR [ebx],esp
  416746:	data16 cs jnp 0x416715
  41674a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41674b:	enter  0x3060,0xf0
  41674f:	xchg   esi,eax
  416750:	jmp    0xb108:0xb014531f
  416757:	int    0x8b
  416759:	pusha  
  41675a:	enter  0xf55b,0x2d
  41675e:	adc    dh,BYTE PTR [edx-0x6c0a1899]
  416764:	pop    esp
  416765:	xor    eax,0x714103b8
  41676a:	or     dl,ch
  41676c:	retf   
  41676d:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41676f:	and    eax,0xb371314a
  416774:	adc    dh,0x5
  416777:	pop    ss
  416778:	mov    ds:0xb4f84a5c,eax
  41677d:	lock push ecx
  41677f:	bound  eax,QWORD PTR [eax-0x2512450e]
  416785:	into   
  416786:	pop    ebp
  416787:	pusha  
  416788:	pop    esi
  416789:	inc    ebx
  41678a:	adc    DWORD PTR [ebx-0x71],ecx
  41678d:	cmc    
  41678e:	dec    esi
  41678f:	ins    BYTE PTR es:[edi],dx
  416790:	pop    ecx
  416792:	sbb    BYTE PTR [edx+0x5709ee10],dh
  416798:	sub    al,0xf6
  41679a:	xlat   BYTE PTR ds:[bx]
  41679c:	xor    DWORD PTR [eax+ecx*1],ecx
  41679f:	jl     0x4167b1
  4167a1:	inc    edi
  4167a2:	mov    dh,0xe7
  4167a4:	xchg   ebx,eax
  4167a5:	jae    0x4167dc
  4167a7:	sub    ah,BYTE PTR [ebx+0x2c]
  4167aa:	clc    
  4167ab:	xchg   esp,eax
  4167ac:	add    al,0xae
  4167ae:	xchg   edi,eax
  4167af:	and    eax,0x1d1b68a9
  4167b4:	mov    ebx,0x13da18c6
  4167b9:	mov    BYTE PTR [ebp-0x14],bh
  4167bc:	adc    ebp,edx
  4167be:	or     al,BYTE PTR [esi+0x5546b118]
  4167c4:	jae    0x41677e
  4167c6:	retf   
  4167c7:	lods   al,BYTE PTR ds:[esi]
  4167c8:	pop    eax
  4167c9:	push   ebx
  4167ca:	aas    
  4167cb:	inc    ebp
  4167cc:	lods   eax,DWORD PTR ds:[esi]
  4167cd:	gs and al,0x3
  4167d0:	jns    0x41679c
  4167d2:	push   esp
  4167d3:	xchg   edi,eax
  4167d4:	mov    bl,0xba
  4167d6:	lods   al,BYTE PTR ds:[esi]
  4167d7:	sub    BYTE PTR [ebx+0x14fdfdc4],0x57
  4167de:	sub    eax,0xeb9e0425
  4167e3:	adc    DWORD PTR [edx+0x3fed137a],edi
  4167e9:	sub    eax,0xbad82eb7
  4167ee:	pop    ebp
  4167ef:	les    esi,FWORD PTR [ebp+0x31fa6526]
  4167f5:	pop    eax
  4167f6:	(bad)  
  4167f7:	fdiv   DWORD PTR [ebp+esi*2-0x39]
  4167fb:	inc    ecx
  4167fc:	aas    
  4167fd:	inc    esp
  4167fe:	mov    al,ds:0x9282c216
  416803:	or     BYTE PTR [edi+eiz*4+0x6a],ch
  416807:	into   
  416808:	data16 in al,0x15
  41680b:	ins    BYTE PTR es:[edi],dx
  41680c:	jno    0x416820
  41680e:	inc    esi
  41680f:	hlt    
  416810:	xsavec [edi+0x11]
  416814:	sub    esi,DWORD PTR [ebx-0x1ee324ef]
  41681a:	jo     0x416846
  41681c:	in     eax,0xc8
  41681e:	out    dx,eax
  41681f:	or     BYTE PTR [ebx+ebx*1-0x576b58cc],bh
  416826:	xchg   ebx,eax
  416827:	xor    edi,eax
  416829:	sti    
  41682a:	and    dl,ah
  41682c:	das    
  41682d:	gs jmp 0x4167c6
  416830:	lock popa 
  416832:	arpl   WORD PTR [eax+0x427f8788],cx
  416838:	ds push es
  41683a:	push   0x9b6bdcd5
  41683f:	adc    edx,DWORD PTR [esi+0x45258a7a]
  416845:	adc    eax,0x4ccac911
  41684a:	rcr    BYTE PTR [edi+0x1],1
  41684d:	test   BYTE PTR ds:0x44faca6a,bl
  416853:	aas    
  416854:	push   esi
  416855:	daa    
  416856:	mov    ecx,?
  416858:	mov    edi,DWORD PTR ds:0x85f61997
  41685e:	sbb    edx,DWORD PTR ds:[ebx+0x6c]
  416862:	popa   
  416863:	mov    ebx,0xb5056637
  416868:	out    dx,al
  416869:	sahf   
  41686a:	xchg   esp,eax
  41686b:	push   ecx
  41686c:	(bad)  
  41686d:	lods   eax,DWORD PTR ds:[esi]
  41686e:	jg     0x4167f0
  416870:	sub    BYTE PTR [esi+esi*8],cl
  416873:	fisub  WORD PTR [edx+0x2]
  416876:	add    eax,DWORD PTR [esi+0x3503882b]
  41687c:	bound  eax,QWORD PTR [eax+esi*8+0xd]
  416880:	in     eax,dx
  416881:	xchg   edx,eax
  416882:	loope  0x41685e
  416884:	fdiv   QWORD PTR [esi+0x55]
  416887:	sub    esi,DWORD PTR [edi+ebp*4-0x6db7e659]
  41688e:	mov    ah,0xbe
  416890:	xchg   ecx,eax
  416891:	xchg   edx,eax
  416892:	pop    edx
  416893:	lahf   
  416894:	mov    eax,esp
  416896:	and    al,0x96
  416898:	shr    BYTE PTR [esi+0x4a],0xcf
  41689c:	dec    eax
  41689d:	icebp  
  41689e:	and    DWORD PTR [esi-0x2fc9adbc],esi
  4168a4:	fidiv  WORD PTR [eax-0x188960a7]
  4168aa:	jmp    0x41688f
  4168ac:	lea    ebp,[eax+edx*1-0x6dbca447]
  4168b3:	mov    bh,0xa3
  4168b5:	sub    al,0x22
  4168b7:	out    dx,eax
  4168b8:	pop    ds
  4168b9:	and    ch,BYTE PTR [eax-0x71]
  4168bc:	jnp    0x4168c7
  4168be:	inc    ebp
  4168bf:	cwde   
  4168c0:	iret   
  4168c1:	adc    DWORD PTR [ebx+0x59],0xa406ebb7
  4168c8:	mov    ds:0xf06e5879,eax
  4168cd:	pushf  
  4168ce:	popa   
  4168cf:	fldcw  WORD PTR [ecx]
  4168d1:	lods   eax,DWORD PTR ds:[esi]
  4168d2:	cmp    eax,0xb7b46d66
  4168d7:	xor    eax,0x9be7d574
  4168dc:	cwde   
  4168dd:	add    BYTE PTR [esi-0x14],dl
  4168e0:	in     al,dx
  4168e1:	in     al,0x33
  4168e3:	outs   dx,DWORD PTR ds:[esi]
  4168e4:	xchg   edx,eax
  4168e5:	cwde   
  4168e6:	scas   eax,DWORD PTR es:[edi]
  4168e7:	inc    ebp
  4168e8:	jmp    0x416896
  4168ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4168eb:	imul   eax,DWORD PTR [ecx+0xe80792e],0xffffffcb
  4168f2:	sti    
  4168f3:	popf   
  4168f4:	aam    0x29
  4168f6:	sbb    bl,BYTE PTR cs:[edx+edx*4-0xe8767d5]
  4168fe:	cdq    
  4168ff:	sbb    ch,ah
  416901:	dec    ebp
  416902:	pop    ds
  416903:	xor    esp,eax
  416905:	xchg   ecx,eax
  416906:	jge    0x41691f
  416908:	cmp    dl,BYTE PTR gs:[ebx+0x4d]
  41690c:	clc    
  41690d:	out    dx,eax
  41690e:	push   es
  41690f:	pop    eax
  416910:	push   ebp
  416911:	xor    DWORD PTR [ecx+0x75],ebp
  416914:	es push eax
  416916:	mov    ebp,0x10c66abe
  41691b:	(bad)  [ebx-0x681097c5]
  416921:	das    
  416922:	jnp    0x41694f
  416924:	xchg   BYTE PTR [edi-0x534e02f1],bh
  41692a:	pop    edi
  41692b:	ds loope 0x41699f
  41692e:	mov    eax,ds:0xa8a99b3f
  416933:	shr    ah,cl
  416935:	and    cl,BYTE PTR [ebx]
  416937:	pop    ss
  416938:	or     DWORD PTR [ebx],0x28babd0
  41693e:	out    dx,al
  41693f:	scas   eax,DWORD PTR es:[edi]
  416940:	sti    
  416941:	enter  0x497c,0x94
  416945:	call   0x1da3102a
  41694a:	and    eax,0xfa967821
  41694f:	dec    ebp
  416950:	fild   DWORD PTR [ebx+0x64a665c9]
  416956:	(bad)  
  416957:	int    0x3b
  416959:	push   cs
  41695a:	call   0x87f4:0x6db5f709
  416961:	cmp    ch,BYTE PTR [edx-0x658200c1]
  416967:	mov    ds:0x18c0ac7b,eax
  41696c:	jmp    0x9e6d:0x56d66557
  416973:	fimul  DWORD PTR [edi+0x4c]
  416976:	ins    BYTE PTR es:[edi],dx
  416977:	and    al,0xe8
  416979:	and    al,0x6d
  41697b:	stc    
  41697c:	nop
  41697d:	pop    ebx
  41697e:	iret   
  41697f:	dec    esp
  416980:	out    0x10,al
  416982:	inc    esp
  416983:	sub    ebx,esp
  416985:	stos   DWORD PTR es:[edi],eax
  416986:	(bad)  
  416987:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416988:	jl     0x41691a
  41698a:	mov    edi,ecx
  41698c:	push   ds
  41698d:	push   ebx
  41698e:	ficomp DWORD PTR [ebx-0x1a]
  416991:	int3   
  416992:	sbb    BYTE PTR [ebx-0x4ff1aed8],al
  416998:	mov    esi,0x2efb4cdf
  41699d:	mov    esp,0x8cb7502a
  4169a2:	pop    ebx
  4169a3:	pop    edi
  4169a4:	cmp    esp,DWORD PTR [eax+0xd]
  4169a7:	xlat   BYTE PTR ds:[ebx]
  4169a8:	data16 rol BYTE PTR [edx],cl
  4169ab:	popa   
  4169ac:	hlt    
  4169ad:	dec    ecx
  4169ae:	pop    esi
  4169af:	adc    ebx,DWORD PTR [esi]
  4169b1:	push   es
  4169b2:	(bad)  
  4169b4:	rol    BYTE PTR [ebp+0x61da6bcd],0xdc
  4169bb:	fild   WORD PTR [edx+ebp*8-0x75271824]
  4169c2:	test   BYTE PTR [esi],bl
  4169c4:	sub    al,0xb3
  4169c6:	sub    DWORD PTR [esi-0x1c],0x18
  4169ca:	sbb    al,ah
  4169cc:	mov    esi,0x3b9688d7
  4169d1:	xrelease xchg DWORD PTR [esi-0x33453539],ecx
  4169d8:	jp     0x416a1b
  4169da:	adc    al,0x61
  4169dc:	(bad)  
  4169dd:	fsubp  st(4),st
  4169df:	leave  
  4169e0:	(bad)  
  4169e1:	xor    eax,edx
  4169e3:	mov    bh,0xd3
  4169e5:	push   eax
  4169e6:	pop    esi
  4169e7:	mov    WORD PTR [ebx+0x5cb665b6],?
  4169ed:	scas   eax,DWORD PTR es:[edi]
  4169ee:	in     eax,dx
  4169ef:	scas   eax,DWORD PTR es:[edi]
  4169f0:	mov    WORD PTR [edx-0xa],es
  4169f3:	lahf   
  4169f4:	xor    ch,BYTE PTR [ecx+eiz*1+0x66859abd]
  4169fb:	push   0xc599170a
  416a00:	arpl   WORD PTR [eax-0x5f],si
  416a03:	dec    esp
  416a04:	add    al,0xf6
  416a06:	mov    ah,ah
  416a08:	les    edi,FWORD PTR [edx]
  416a0a:	fmul   QWORD PTR [esi+0x52]
  416a0d:	test   DWORD PTR ds:[ebp-0x1b],ebx
  416a11:	mov    al,ds:0x1582f799
  416a16:	sbb    ah,0xb5
  416a19:	mov    ah,0xb2
  416a1b:	dec    ebp
  416a1c:	sbb    BYTE PTR [ebx],bl
  416a1e:	cli    
  416a1f:	mov    edx,0x3013e238
  416a24:	cmp    al,0xd5
  416a26:	cld    
  416a27:	xor    bl,al
  416a29:	sub    bl,BYTE PTR [edi-0x79efe1c]
  416a2f:	xchg   edx,eax
  416a30:	push   ds
  416a31:	pop    edx
  416a32:	int    0x2f
  416a34:	jmp    FWORD PTR [eax]
  416a36:	push   ss
  416a37:	imul   eax,DWORD PTR [esi+0x779b7eb1],0xe
  416a3e:	ja     0x4169d0
  416a40:	push   edx
  416a41:	fsubr  DWORD PTR [edx+0x34]
  416a44:	imul   eax,ebp,0x425e8116
  416a4a:	imul   ecx,DWORD PTR [ebp-0x2f],0xc
  416a4e:	adc    DWORD PTR [edi],eax
  416a50:	xchg   ebx,eax
  416a51:	cwde   
  416a52:	aas    
  416a53:	dec    esi
  416a55:	push   ebx
  416a56:	jo     0x4169ef
  416a58:	call   0xac05:0x2ee00468
  416a5f:	or     BYTE PTR [edx+0x40],dl
  416a62:	or     edi,edi
  416a64:	ficom  WORD PTR [edi-0x5bf1c135]
  416a6a:	jb     0x416a04
  416a6c:	dec    ecx
  416a6d:	(bad)
  416a71:	pop    ebp
  416a72:	sahf   
  416a73:	jo     0x416aed
  416a75:	fsubr  DWORD PTR [edi-0x1715744e]
  416a7b:	jmp    0x416ab9
  416a7d:	mov    BYTE PTR [ebx+0x610dd7bf],bh
  416a83:	sub    eax,0xbeb71d9d
  416a88:	sub    BYTE PTR [ecx],ch
  416a8a:	dec    esi
  416a8b:	jecxz  0x416a31
  416a8d:	and    BYTE PTR [edx],al
  416a8f:	dec    esi
  416a90:	mov    esp,0xf4a1a7ca
  416a95:	fisttp DWORD PTR [ecx-0x42]
  416a98:	inc    ebp
  416a99:	push   ss
  416a9a:	hlt    
  416a9b:	push   ebp
  416a9c:	dec    edx
  416a9d:	leave  
  416a9e:	mov    esp,0x56f48926
  416aa3:	dec    ebp
  416aa4:	int3   
  416aa5:	lea    ebp,[edi]
  416aa7:	mov    BYTE PTR [ebx-0x3b],ch
  416aaa:	jno    0x416a85
  416aac:	pop    ecx
  416aad:	push   cs
  416aae:	and    al,BYTE PTR [ecx-0x39]
  416ab1:	or     eax,esi
  416ab3:	aam    0x88
  416ab5:	cmp    DWORD PTR [eax+0x2e],edi
  416ab8:	xchg   bp,ax
  416aba:	sub    al,0x6f
  416abc:	mov    ds:0x193d9f76,al
  416ac1:	mov    esi,0xfed9db3b
  416ac6:	pushf  
  416ac7:	and    BYTE PTR ds:0x11cae663,bh
  416acd:	sar    DWORD PTR [eax-0x54fbce9a],0x9a
  416ad4:	in     al,dx
  416ad5:	les    esi,FWORD PTR gs:0x22ae6a06
  416adc:	shl    BYTE PTR [edi],1
  416ade:	in     al,0x89
  416ae0:	jp     0x416aa0
  416ae2:	ffree  st(2)
  416ae4:	int3   
  416ae5:	addr16 pop es
  416ae7:	adc    BYTE PTR [edi],bh
  416ae9:	stc    
  416aea:	xor    ebx,DWORD PTR [eax-0x1b205d74]
  416af0:	cld    
  416af1:	inc    edx
  416af2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416af3:	xchg   edx,eax
  416af4:	xchg   esi,eax
  416af5:	sub    al,0x4b
  416af7:	pop    esi
  416af8:	sti    
  416af9:	jbe    0x416adf
  416afb:	push   ebx
  416afc:	repnz (bad) 
  416afe:	jmp    0x278:0x314aee74
  416b05:	lahf   
  416b06:	repnz push esp
  416b08:	pop    ss
  416b09:	fadd   QWORD PTR [eax]
  416b0b:	mov    edi,0x25c839f2
  416b10:	shr    BYTE PTR [ebx+0x722aa570],0x14
  416b17:	or     edi,ecx
  416b19:	(bad)  
  416b1b:	xchg   ecx,eax
  416b1c:	aad    0x6
  416b1e:	xchg   edx,eax
  416b1f:	icebp  
  416b20:	inc    esp
  416b21:	scas   al,BYTE PTR es:[edi]
  416b22:	xor    al,0x4f
  416b24:	xor    eax,0x4dbb3508
  416b29:	push   0x1d
  416b2b:	stc    
  416b2c:	rol    BYTE PTR [ecx],cl
  416b2e:	popf   
  416b2f:	adc    eax,0xfa0c8c74
  416b34:	mov    esi,0xdfe93913
  416b39:	xchg   esi,eax
  416b3a:	ror    DWORD PTR [ebx+0x794cd869],1
  416b40:	add    edi,0xc0bfec47
  416b46:	lods   al,BYTE PTR ds:[esi]
  416b47:	push   cs
  416b48:	adc    eax,0x9d45e2f5
  416b4d:	(bad)
  416b50:	mov    ds:0xa65a4dd7,eax
  416b55:	mov    al,0x4c
  416b57:	loopne 0x416ba4
  416b59:	and    ecx,0xffffffab
  416b5c:	call   0xe947dc8d
  416b61:	xlat   BYTE PTR ds:[ebx]
  416b62:	dec    ecx
  416b63:	push   0xffffffdd
  416b65:	add    ebx,DWORD PTR [ebx-0x307ed6b5]
  416b6b:	or     edx,DWORD PTR [edi-0x1436c0f]
  416b71:	dec    esp
  416b72:	cmp    BYTE PTR [ecx-0x42],cl
  416b75:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416b76:	jnp    0x416b0d
  416b78:	sbb    BYTE PTR ds:0xc25bb420,bl
  416b7e:	jle    0x416b82
  416b80:	cs shr ecx,cl
  416b83:	gs mov esp,0x8c833676
  416b89:	or     BYTE PTR [ecx+0xd],ah
  416b8c:	jl     0x416b84
  416b8e:	shl    DWORD PTR ds:0xe08a393d,0xac
  416b95:	jae    0x416c0d
  416b97:	dec    esp
  416b98:	inc    edi
  416b99:	jmp    0x2cba:0x898251be
  416ba0:	pop    esi
  416ba1:	call   0x8c95:0xc5ab18bc
  416ba8:	in     eax,dx
  416ba9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416baa:	jb     0x416bf3
  416bac:	mov    esp,0x55e12730
  416bb1:	sar    DWORD PTR [edi+0x3391189f],0x26
  416bb8:	jl     0x416bdb
  416bba:	cmp    edi,ebx
  416bbc:	push   edi
  416bbd:	in     eax,dx
  416bbe:	jp     0x416bcd
  416bc0:	(bad)  [ebp-0x1948a18c]
  416bc6:	mov    edi,0xc8f4c36c
  416bcb:	dec    ebp
  416bcc:	adc    edi,esp
  416bce:	shl    DWORD PTR [eax+0x2a],cl
  416bd1:	mov    dl,ch
  416bd3:	jle    0x416bd6
  416bd5:	in     eax,dx
  416bd6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416bd7:	jle    0x416b60
  416bd9:	cdq    
  416bda:	add    DWORD PTR [edi],edx
  416bdc:	mov    ebx,0xa0a3197d
  416be1:	aas    
  416be2:	in     al,dx
  416be3:	mov    ax,0x8ead
  416be7:	pop    ebx
  416be8:	jns    0x416c1f
  416bea:	icebp  
  416beb:	rol    BYTE PTR [ebx+0x111604e7],cl
  416bf1:	cs xor ebp,ebx
  416bf4:	xor    DWORD PTR [eax+0x57150347],ebx
  416bfa:	dec    ecx
  416bfb:	jecxz  0x416c5e
  416bfd:	xlat   BYTE PTR ds:[ebx]
  416bfe:	or     al,0xcb
  416c00:	loopne 0x416c6b
  416c02:	mov    ah,0xc7
  416c04:	xchg   BYTE PTR [edx-0x24c22c43],ch
  416c0a:	jmp    0x416c5b
  416c0c:	pop    eax
  416c0d:	mov    ch,0x2b
  416c0f:	dec    ebx
  416c10:	les    ecx,FWORD PTR [edx+0x9512575]
  416c16:	mov    edi,0x4f20560b
  416c1b:	jbe    0x416c27
  416c1d:	cmp    al,0x55
  416c1f:	jp     0x416bc5
  416c21:	cmp    edx,DWORD PTR [edx-0x4e]
  416c24:	xor    eax,0x94119e4f
  416c29:	mov    bl,BYTE PTR [edi+0x7bd6adf3]
  416c2f:	xchg   ebx,eax
  416c30:	daa    
  416c31:	imul   esi,DWORD PTR [esi+0xb],0xffffffe1
  416c35:	in     eax,0xef
  416c37:	adc    al,dh
  416c39:	leave  
  416c3a:	idiv   BYTE PTR [eax-0x65a4e4ff]
  416c40:	cmp    eax,0xe364133
  416c45:	popa   
  416c46:	xchg   ebx,eax
  416c47:	sbb    esi,DWORD PTR [edx+0x77cbbd4b]
  416c4d:	xchg   ebx,eax
  416c4e:	cmp    al,ch
  416c50:	xchg   DWORD PTR [esi+0x7d],ebp
  416c53:	jg     0x416bf3
  416c55:	and    dh,bl
  416c57:	clc    
  416c58:	mov    edx,0xed4e2bf4
  416c5d:	fs stos BYTE PTR es:[edi],al
  416c5f:	pop    ebx
  416c60:	add    eax,0x56600094
  416c65:	neg    BYTE PTR [eax]
  416c67:	or     ecx,DWORD PTR [ebx*2-0x4b6ff988]
  416c6e:	push   ebp
  416c6f:	pop    DWORD PTR [edi-0x32ba7a8]
  416c75:	jns    0x416c7b
  416c77:	fs inc eax
  416c79:	add    eax,0x4e619d44
  416c7e:	lea    esp,[edx]
  416c80:	lds    edx,FWORD PTR [edx-0x56]
  416c83:	je     0x416cbe
  416c85:	mov    edx,0x32e9d4c4
  416c8a:	ficom  DWORD PTR [ebp+0x4caaaec0]
  416c90:	add    ebp,eax
  416c92:	push   esp
  416c93:	jmp    0x416c95
  416c95:	add    dl,BYTE PTR [edx]
  416c97:	xchg   ecx,eax
  416c98:	push   esp
  416c99:	rcl    DWORD PTR [esi],1
  416c9b:	xor    dh,al
  416c9d:	mov    eax,ds:0xd7b19c11
  416ca2:	sbb    eax,0x787c759f
  416ca7:	into   
  416ca8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416ca9:	push   0x6b
  416cab:	or     eax,0x15f6722d
  416cb0:	ror    ebp,0xb6
  416cb3:	fdivr  QWORD PTR [edi]
  416cb5:	cld    
  416cb6:	(bad)  
  416cb7:	push   eax
  416cb8:	mov    ebx,0x6ffb1cf0
  416cbd:	cmp    edi,DWORD PTR [eax-0x48]
  416cc0:	in     al,dx
  416cc1:	int    0xee
  416cc3:	outs   dx,DWORD PTR ds:[esi]
  416cc4:	pop    edi
  416cc5:	(bad)  
  416cc6:	(bad)  
  416cc7:	push   esp
  416cc8:	icebp  
  416cc9:	mov    ebp,0xdba1e807
  416cce:	(bad)  
  416ccf:	dec    edx
  416cd0:	mov    dl,0x96
  416cd2:	sti    
  416cd3:	jge    0x416cea
  416cd5:	jne    0x416cc3
  416cd7:	dec    eax
  416cd8:	call   0x24cd:0xb0ca0017
  416cdf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416ce0:	sbb    bh,dl
  416ce2:	push   esp
  416ce3:	mov    esi,0x65f521e7
  416ce8:	mov    al,0x6b
  416cea:	std    
  416ceb:	daa    
  416cec:	jmp    0x749e3fe1
  416cf1:	mov    ebp,0xb5dd045e
  416cf6:	or     cl,BYTE PTR [ecx-0x15]
  416cf9:	mov    ds:0x77144f37,al
  416cfe:	or     DWORD PTR [eax+0x7d],edx
  416d01:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416d02:	jl     0x416cf2
  416d04:	pop    edx
  416d05:	in     eax,0x12
  416d07:	pop    esp
  416d08:	xchg   edx,eax
  416d09:	xchg   esp,eax
  416d0a:	mov    ch,0x45
  416d0c:	jecxz  0x416cc7
  416d0e:	icebp  
  416d0f:	aam    0xb7
  416d11:	hlt    
  416d12:	mov    al,ds:0xfb3086f7
  416d17:	push   ebx
  416d18:	mul    BYTE PTR ds:0xc7d1d553
  416d1e:	hlt    
  416d1f:	ins    DWORD PTR es:[edi],dx
  416d20:	shl    edx,0xa2
  416d23:	std    
  416d24:	adc    al,BYTE PTR [ebx+0x3b258a8f]
  416d2a:	mov    dh,0x47
  416d2c:	sti    
  416d2d:	jmp    0x416cd4
  416d2f:	mov    es,WORD PTR [ebx]
  416d31:	sub    BYTE PTR [edx],0x75
  416d34:	std    
  416d35:	neg    BYTE PTR [ecx]
  416d37:	loope  0x416cff
  416d39:	inc    esp
  416d3a:	mov    ds,WORD PTR [edx]
  416d3c:	jl     0x416d83
  416d3e:	ds push esp
  416d40:	cdq    
  416d41:	sbb    DWORD PTR [eax],ebx
  416d43:	hlt    
  416d44:	and    DWORD PTR [edx+0x53],esi
  416d47:	int3   
  416d48:	leave  
  416d49:	mov    ebp,ecx
  416d4b:	cmc    
  416d4c:	cdq    
  416d4d:	sub    al,0x7c
  416d4f:	imul   edi,DWORD PTR [ebp+0x6a],0x3b
  416d53:	inc    ebp
  416d54:	scas   al,BYTE PTR es:[edi]
  416d55:	mov    edi,ecx
  416d57:	sar    DWORD PTR [ecx+0x2b],0x71
  416d5b:	mov    bl,0x6d
  416d5d:	sub    BYTE PTR fs:[eax-0x23],0x99
  416d62:	inc    eax
  416d63:	mov    ds:0xb27c4cc0,al
  416d68:	push   ecx
  416d69:	pop    ebx
  416d6a:	pop    edi
  416d6b:	cs sub eax,0x9e3353ef
  416d71:	fwait
  416d72:	cmp    ah,BYTE PTR ds:[edx+0x29d9748]
  416d79:	cli    
  416d7a:	ret    0xdfbc
  416d7d:	add    bl,BYTE PTR [ebp-0x69b6b85e]
  416d83:	pusha  
  416d84:	mov    eax,gs
  416d86:	xor    DWORD PTR [edi-0x58db393b],edx
  416d8c:	jl     0x416d38
  416d8e:	cmc    
  416d8f:	sub    eax,0x98dc4f8e
  416d94:	push   esp
  416d95:	push   ebp
  416d96:	sahf   
  416d97:	sub    BYTE PTR [eax],dh
  416d99:	sti    
  416d9a:	mov    eax,0xcab27dd1
  416d9f:	fwait
  416da0:	pusha  
  416da1:	sub    DWORD PTR [ebp+0x144bf4ec],esp
  416da7:	lods   al,BYTE PTR ds:[esi]
  416da8:	mov    ch,0x2e
  416daa:	sbb    ebp,ebp
  416dac:	jmp    0xf8a12c79
  416db1:	mov    eax,0xbb25d1cd
  416db6:	sub    al,0x3e
  416db8:	push   ebp
  416db9:	mov    ebx,0xe655e73f
  416dbe:	sbb    al,0xcc
  416dc0:	cmp    BYTE PTR [ebp-0x40a35f91],bh
  416dc6:	les    esp,FWORD PTR [ecx]
  416dc8:	xchg   esi,eax
  416dc9:	add    ah,BYTE PTR [edi]
  416dcb:	je     0x416d55
  416dcd:	xor    ecx,DWORD PTR [ecx]
  416dcf:	(bad)  
  416dd0:	inc    esp
  416dd1:	in     al,0xe4
  416dd3:	add    eax,0xbb2edacc
  416dd8:	push   ecx
  416dd9:	sti    
  416dda:	jecxz  0x416e1f
  416ddc:	mov    ds:0x1909a811,eax
  416de1:	sbb    BYTE PTR [ecx],bl
  416de3:	rcr    DWORD PTR [edi-0x7f6fa46],0x98
  416dea:	ins    BYTE PTR es:[edi],dx
  416deb:	sbb    al,dh
  416ded:	cdq    
  416dee:	scas   eax,DWORD PTR es:[edi]
  416def:	xor    bh,al
  416df1:	sbb    DWORD PTR [edx+0x12aabd90],eax
  416df7:	sub    eax,0x85dabf98
  416dfc:	dec    ebx
  416dfd:	pop    ebx
  416dfe:	jl     0x416def
  416e00:	sub    dl,dh
  416e02:	sbb    esp,DWORD PTR [eax+0x40]
  416e05:	gs jecxz 0x416e42
  416e08:	iret   
  416e09:	mov    BYTE PTR [eax+ecx*8+0x13],dh
  416e0d:	sbb    edi,DWORD PTR [edi]
  416e0f:	js     0x416e40
  416e11:	jbe    0x416e42
  416e13:	enter  0x9251,0x93
  416e17:	fwait
  416e18:	mov    BYTE PTR [esi],dh
  416e1a:	scas   al,BYTE PTR es:[edi]
  416e1b:	push   es
  416e1c:	mov    edx,0xa25c20ee
  416e21:	mov    edi,0xfe5f3ee5
  416e26:	imul   ebp,DWORD PTR [esi-0x724d1787],0xca61063c
  416e30:	ror    ebp,cl
  416e32:	ret    
  416e33:	push   esp
  416e34:	in     eax,dx
  416e35:	add    BYTE PTR [esi+eax*1+0x4875c574],0xb5
  416e3d:	jmp    0x416ebb
  416e3f:	pop    es
  416e40:	xchg   esp,eax
  416e41:	sub    cl,BYTE PTR [ebx-0x739481a9]
  416e47:	dec    ebp
  416e48:	sub    esi,0xb094fa0
  416e4e:	rol    DWORD PTR [edx+ebx*1-0x4a90c26d],cl
  416e55:	rol    BYTE PTR [edx+0x36128b93],1
  416e5b:	mov    eax,0x9b8a5128
  416e60:	jmp    0xcef2:0x86bc1aa
  416e67:	mov    ebp,0x8a3e39e5
  416e6c:	inc    esi
  416e6d:	xchg   ebx,eax
  416e6e:	cmp    eax,0x309a27c
  416e73:	and    ch,BYTE PTR [eax-0x79]
  416e76:	xchg   esi,eax
  416e77:	sub    esp,DWORD PTR [eax]
  416e79:	cs mov ah,0x99
  416e7c:	call   0x5a936c7b
  416e81:	call   0x8bc5:0x649c0e2a
  416e88:	fs jo  0x416e86
  416e8b:	xchg   esp,eax
  416e8c:	sti    
  416e8d:	imul   esp,DWORD PTR [ecx+0x54],0x9f0ad186
  416e94:	jne    0x416ea0
  416e96:	cmp    BYTE PTR [esi+0x5],dl
  416e99:	fwait
  416e9a:	inc    edx
  416e9b:	push   ss
  416e9c:	data16 fwait
  416e9e:	test   BYTE PTR [ebx+edi*8-0x1ed0f7f],dl
  416ea5:	lock push esp
  416ea7:	jecxz  0x416f11
  416ea9:	or     DWORD PTR [ecx-0x544c114d],esp
  416eaf:	loopne 0x416ef9
  416eb1:	lods   al,BYTE PTR ds:[esi]
  416eb2:	dec    esi
  416eb3:	jp     0x416e9a
  416eb5:	mov    ?,WORD PTR es:[ecx]
  416eb8:	mov    ch,0x76
  416eba:	es push ebx
  416ebc:	and    BYTE PTR [ebx+0x0],ah
  416ebf:	jmp    0x6a51a5bc
  416ec4:	adc    eax,0xf244c94a
  416ec9:	loop   0x416f0a
  416ecb:	arpl   WORD PTR [eax-0x4875b239],bx
  416ed1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416ed2:	inc    eax
  416ed3:	and    bh,BYTE PTR [ebp+0x65]
  416ed6:	jno    0x416f40
  416ed8:	cdq    
  416ed9:	xchg   ah,ah
  416edb:	and    BYTE PTR [ebp-0x4c],cl
  416ede:	xchg   esi,eax
  416edf:	xchg   esp,eax
  416ee0:	cs push edx
  416ee2:	push   ds
  416ee3:	rcl    bl,0xde
  416ee6:	jae    0x416eca
  416ee8:	lds    eax,FWORD PTR [ebp+0x1d59fc05]
  416eee:	adc    eax,eax
  416ef0:	cli    
  416ef1:	and    eax,0xc537cb66
  416ef6:	cmc    
  416ef7:	lidtd  [ebx]
  416efa:	ret    0x4d40
  416efd:	shl    BYTE PTR [esi],0x53
  416f00:	mov    al,0xa7
  416f02:	push   0x79f456fa
  416f07:	lock test BYTE PTR [ebx-0x47],ch
  416f0b:	pop    ebp
  416f0c:	inc    ecx
  416f0d:	mov    ch,0x5
  416f0f:	pusha  
  416f10:	pop    ss
  416f11:	xchg   esi,eax
  416f12:	sahf   
  416f13:	loope  0x416f32
  416f15:	sti    
  416f16:	push   0xffffff89
  416f18:	inc    ebx
  416f19:	sub    eax,0x11e7db8f
  416f1e:	outs   dx,BYTE PTR gs:[esi]
  416f20:	outs   dx,BYTE PTR ds:[esi]
  416f21:	adc    al,0xe2
  416f23:	ret    
  416f24:	or     al,0xd9
  416f26:	pop    ss
  416f27:	lods   eax,DWORD PTR ds:[esi]
  416f28:	loopne 0x416eb4
  416f2a:	popa   
  416f2b:	push   esi
  416f2c:	xchg   ecx,eax
  416f2d:	jns    0x416eeb
  416f2f:	fisttp DWORD PTR [edi+0x198f4035]
  416f35:	add    eax,0x4cb4e800
  416f3a:	in     eax,dx
  416f3b:	into   
  416f3c:	retf   0x8f3c
  416f3f:	push   ds
  416f40:	mov    ah,BYTE PTR [ecx]
  416f42:	setno  dl
  416f45:	cmp    al,0xc3
  416f47:	fmul   QWORD PTR [eax+0x6cc48422]
  416f4d:	fcomp  QWORD PTR [edx]
  416f4f:	pop    edx
  416f50:	push   ecx
  416f51:	inc    ebp
  416f52:	push   eax
  416f53:	mov    al,ds:0xc3c4f655
  416f58:	add    ebx,edi
  416f5a:	adc    eax,0xf3849ebb
  416f5f:	fisttp QWORD PTR [ebx+0x7f]
  416f62:	add    DWORD PTR [ecx],esp
  416f64:	out    0x60,eax
  416f66:	jb     0x416f08
  416f68:	inc    esp
  416f69:	retf   0xc13d
  416f6c:	je     0x416fc7
  416f6e:	add    DWORD PTR [ebx],edx
  416f70:	mov    esp,0xa3de6bc7
  416f75:	test   cl,0x83
  416f78:	dec    eax
  416f79:	icebp  
  416f7a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416f7b:	das    
  416f7c:	call   0xc0d0d756
  416f81:	inc    ebp
  416f83:	push   ss
  416f84:	and    dl,bl
  416f86:	cmp    edx,edx
  416f88:	(bad)  fs:[esi+0x3]
  416f8c:	or     dh,BYTE PTR [ebx]
  416f8e:	dec    ebp
  416f8f:	retf   
  416f90:	pusha  
  416f91:	pop    ebp
  416f92:	cmp    BYTE PTR [edi+edx*2-0x4fb1f535],0xfe
  416f9a:	xor    DWORD PTR [eax+0x65bb8fc],esp
  416fa0:	add    BYTE PTR [ecx+edi*8],ah
  416fa3:	jl     0x416fbe
  416fa5:	nop
  416fa6:	jne    0x417023
  416fa8:	jmp    0xf5bafd9e
  416fad:	mov    ebx,0x81397520
  416fb2:	outs   dx,DWORD PTR ds:[esi]
  416fb3:	fucomip st,st(4)
  416fb5:	repnz xchg ebp,eax
  416fb7:	inc    edi
  416fb8:	fst    QWORD PTR [edi-0x54]
  416fbb:	inc    ecx
  416fbc:	or     cl,BYTE PTR [esi+eiz*1]
  416fbf:	pop    esi
  416fc0:	and    al,0x3f
  416fc2:	test   al,0xe6
  416fc4:	aaa    
  416fc5:	mov    DWORD PTR [esi-0x70],edi
  416fc8:	sub    eax,DWORD PTR [ebp-0x2975c0ff]
  416fce:	push   es
  416fcf:	mov    ebx,0x79ea8a3f
  416fd4:	jne    0x416f83
  416fd6:	sahf   
  416fd7:	retf   
  416fd8:	inc    ebx
  416fd9:	pop    ebx
  416fda:	fiadd  DWORD PTR [edx-0xaab53f7]
  416fe0:	call   0x869e:0x7571c60
  416fe7:	dec    eax
  416fe8:	inc    esp
  416fe9:	push   ss
  416fea:	push   es
  416feb:	lock neg BYTE PTR ds:0xbc75
  416ff1:	aaa    
  416ff2:	and    DWORD PTR [eax-0x5d7a083e],edx
  416ff8:	sbb    eax,0xc200e969
  416ffd:	push   edx
  416ffe:	pushf  
  416fff:	ss inc ecx
  417001:	mov    edi,0x1a2e9b35
  417006:	mov    ebx,0xeabfb83
  41700b:	icebp  
  41700c:	cmp    DWORD PTR [ecx],ecx
  41700e:	xor    DWORD PTR [eax+0x43078885],ebx
  417014:	popa   
  417015:	lds    ecx,FWORD PTR [ebp-0x7755ad32]
  41701b:	aaa    
  41701c:	pop    edx
  41701d:	mov    ebp,0xab7d9d19
  417022:	sub    eax,0x81ced39f
  417027:	lahf   
  417028:	clc    
  417029:	lods   eax,DWORD PTR ds:[esi]
  41702a:	add    ah,BYTE PTR [ebx-0x20]
  41702d:	jb     0x417035
  41702f:	rol    BYTE PTR [edi+0x423b9ce5],0xb2
  417036:	sti    
  417037:	out    dx,eax
  417038:	ins    BYTE PTR es:[edi],dx
  417039:	sub    BYTE PTR [esi-0x3a2b68d8],cl
  41703f:	shl    BYTE PTR [ecx],cl
  417041:	inc    edi
  417042:	cdq    
  417043:	loopne 0x41708a
  417045:	sub    BYTE PTR [esi+0x6bd107f1],dl
  41704b:	mov    bl,0xb7
  41704d:	imul   esi,DWORD PTR [edx],0x4165fef8
  417053:	das    
  417054:	bound  esp,QWORD PTR [eax+0x714452f7]
  41705a:	adc    eax,0x138200ad
  41705f:	mov    edx,0x7651df81
  417064:	dec    ebp
  417065:	add    esi,DWORD PTR [eax]
  417067:	mov    esp,ss
  417069:	cli    
  41706a:	adc    ah,al
  41706c:	dec    edi
  41706d:	shl    edx,cl
  41706f:	mov    eax,ds:0xc8e570c2
  417074:	xchg   esp,eax
  417075:	and    al,0x12
  417077:	sub    eax,0x567f6eaf
  41707c:	lds    eax,FWORD PTR [ebx+0x4c]
  41707f:	jne    0x417020
  417081:	(bad)  
  417082:	aaa    
  417083:	into   
  417084:	dec    ecx
  417085:	dec    edi
  417086:	sub    edx,DWORD PTR [edi-0x13352c8d]
  41708c:	iret   
  41708d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41708e:	adc    ebp,0xffffffcb
  417091:	cmp    ebx,DWORD PTR [edi+0x7c]
  417094:	pusha  
  417095:	mov    edi,edi
  417097:	in     al,0x48
  417099:	in     al,dx
  41709a:	imul   esi,DWORD PTR [edx+0x7e99b922],0x21
  4170a1:	xlat   BYTE PTR ds:[ebx]
  4170a2:	mov    dh,0x5e
  4170a4:	jp     0x417099
  4170a6:	mov    al,0x3f
  4170a8:	sub    eax,0x14c4767e
  4170ad:	sbb    ecx,esp
  4170af:	jb     0x417129
  4170b1:	out    0x96,eax
  4170b3:	and    DWORD PTR [ecx-0x60],ecx
  4170b6:	jmp    0xb920:0xa7c1153c
  4170bd:	or     eax,DWORD PTR [edi+0x6429aa7b]
  4170c3:	clc    
  4170c4:	in     al,0xa0
  4170c6:	mov    ah,0xa1
  4170c8:	dec    edi
  4170c9:	adc    esp,ecx
  4170cb:	dec    BYTE PTR [ebx]
  4170cd:	retf   
  4170ce:	fmul   st(6),st
  4170d0:	xchg   dl,ch
  4170d2:	pop    eax
  4170d3:	in     al,dx
  4170d4:	lods   eax,DWORD PTR ds:[esi]
  4170d5:	mov    ebx,0x6a4f8bdb
  4170da:	push   ss
  4170db:	aam    0x6d
  4170dd:	fimul  WORD PTR ds:0x80087148
  4170e3:	cmp    DWORD PTR [ebx-0x317315ae],ebp
  4170e9:	dec    ecx
  4170ea:	(bad)  
  4170ec:	lds    ecx,FWORD PTR ds:[ecx]
  4170ef:	clc    
  4170f0:	(bad)  
  4170f1:	(bad)  
  4170f2:	push   eax
  4170f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4170f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4170f5:	cmp    ebx,DWORD PTR [edx-0x2f16cd3f]
  4170fb:	mov    esi,0x24a666b4
  417100:	xor    BYTE PTR [ebx+0x5b8ef2bd],bh
  417106:	jbe    0x4170d0
  417108:	inc    eax
  417109:	test   DWORD PTR [ebx],esp
  41710b:	mov    eax,0xe904a65b
  417110:	dec    esi
  417111:	xchg   eax,eax
  417113:	call   0x2ac3:0xce5754e8
  41711a:	push   edi
  41711b:	mov    edi,0x4ca5c87d
  417120:	in     eax,0x77
  417122:	push   esi
  417123:	pushf  
  417124:	test   DWORD PTR [eax],esi
  417126:	in     al,0xb0
  417128:	inc    eax
  417129:	hlt    
  41712a:	mov    bh,0x80
  41712c:	mov    ebp,0xe04753aa
  417131:	jns    0x417149
  417133:	mov    cs,WORD PTR es:[esp+ebx*2+0x4c]
  417138:	or     DWORD PTR [eax-0x5f],esp
  41713b:	pop    ecx
  41713c:	xchg   ecx,eax
  41713d:	jo     0x4171b7
  41713f:	add    ebp,DWORD PTR [esi+ebp*2-0x52145dfa]
  417146:	or     edi,eax
  417148:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417149:	jecxz  0x4170ef
  41714b:	outs   dx,DWORD PTR ds:[esi]
  41714c:	mov    DWORD PTR [esi+0x18457516],0x25a46bc
  417156:	int3   
  417157:	xchg   edx,eax
  417158:	in     eax,dx
  417159:	xor    edi,DWORD PTR [edx-0x4fc89a45]
  41715f:	xchg   esi,eax
  417160:	mov    cl,ah
  417162:	ja     0x41718b
  417164:	add    DWORD PTR [ecx-0x45],edi
  417167:	add    ebx,edx
  417169:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41716a:	push   edi
  41716b:	dec    edi
  41716c:	xchg   dh,bl
  41716e:	stos   BYTE PTR es:[edi],al
  41716f:	jmp    0xef11:0xb101fcc0
  417176:	or     edx,esi
  417178:	enter  0xa04,0x51
  41717c:	jmp    0x4171ec
  41717e:	add    eax,0xcd720bf4
  417183:	mov    ds:0x59a685a5,al
  417188:	data16 aam 0x44
  41718b:	inc    edi
  41718c:	gs xchg esi,eax
  41718e:	dec    ebp
  41718f:	adc    BYTE PTR [edi+eax*2-0xf],ah
  417193:	inc    ebx
  417194:	lods   al,BYTE PTR ds:[esi]
  417195:	or     bl,BYTE PTR ds:0xccd0f74e
  41719b:	add    bl,dl
  41719d:	sbb    esi,DWORD PTR [edi]
  41719f:	jl     0x41721b
  4171a1:	jb     0x41718c
  4171a3:	call   0xf4c7fa3d
  4171a8:	add    al,BYTE PTR ds:0x849c5793
  4171ae:	sar    edx,0x30
  4171b1:	push   ebp
  4171b2:	push   esi
  4171b3:	clc    
  4171b4:	outs   dx,DWORD PTR ds:[esi]
  4171b5:	hlt    
  4171b6:	cmp    DWORD PTR [ebx],ecx
  4171b8:	sbb    al,0x2
  4171ba:	jmp    0x4171e0
  4171bc:	out    0xa8,al
  4171be:	js     0x41721a
  4171c0:	pushf  
  4171c1:	mov    cl,0x58
  4171c3:	dec    ebp
  4171c4:	mov    dh,0x6c
  4171c6:	out    0x53,eax
  4171c8:	adc    al,dh
  4171ca:	jnp    0x41717c
  4171cc:	neg    ebp
  4171ce:	btr    DWORD PTR [ecx+0x16],ebp
  4171d2:	dec    eax
  4171d3:	test   BYTE PTR [edx],cl
  4171d5:	ret    0x4daf
  4171d8:	sub    BYTE PTR ds:0x4d5ea2dc,ah
  4171de:	sbb    eax,0x5236a447
  4171e3:	mov    ebp,0xb78f3c6d
  4171e8:	jge    0x41717c
  4171ea:	pop    ebx
  4171eb:	add    dh,cl
  4171ed:	adc    eax,0x9f729862
  4171f2:	jb     0x4171a4
  4171f4:	out    dx,eax
  4171f5:	popa   
  4171f6:	dec    edi
  4171f7:	push   esp
  4171f8:	add    DWORD PTR [ecx+esi*8+0x35bee649],edx
  4171ff:	int3   
  417200:	mov    eax,edx
  417202:	or     ax,0xe5c9
  417206:	cwde   
  417207:	jecxz  0x417234
  417209:	ins    DWORD PTR es:[edi],dx
  41720a:	stos   BYTE PTR es:[edi],al
  41720b:	leave  
  41720c:	sub    al,0xc8
  41720e:	adc    eax,0x82f8baad
  417213:	aam    0xda
  417215:	and    BYTE PTR [ebx-0x4a],bl
  417218:	(bad)  
  417219:	popa   
  41721a:	(bad)  
  41721b:	cli    
  41721c:	mov    edi,0xadb60efe
  417221:	cmp    ch,BYTE PTR [ecx-0x24]
  417224:	aad    0xa
  417226:	inc    edi
  417227:	out    dx,al
  417228:	or     eax,0xe215d158
  41722d:	(bad)  
  41722e:	arpl   WORD PTR [ebx-0x29],cx
  417231:	imul   si,WORD PTR fs:[eax],0x53
  417236:	ins    DWORD PTR es:[edi],dx
  417237:	mov    ds:0x3b6c529b,al
  41723c:	and    ah,BYTE PTR [ecx-0x55]
  41723f:	dec    edx
  417240:	pop    eax
  417241:	ret    
  417242:	dec    edi
  417243:	cli    
  417244:	int3   
  417245:	cmp    BYTE PTR [ebp+0x5c518c0f],al
  41724b:	mov    fs,WORD PTR [ecx]
  41724d:	xchg   ebx,eax
  41724e:	pushf  
  41724f:	or     al,0xc7
  417251:	mov    bl,0x61
  417253:	add    ah,ch
  417255:	fnsave [ebx]
  417257:	lock adc al,0xaa
  41725a:	mov    edx,0x3d5e8896
  41725f:	aam    0xa6
  417261:	push   esp
  417262:	sbb    eax,0xca2bab67
  417267:	das    
  417268:	js     0x417283
  41726a:	sbb    DWORD PTR [eax+0x376c5b1d],0x45
  417271:	(bad)  
  417272:	mov    BYTE PTR [ebx],0x9a
  417275:	pop    ebp
  417276:	repnz mov al,0xc1
  417279:	mov    bh,BYTE PTR [ebp+0x33cbfb2]
  41727f:	fisubr DWORD PTR [eax-0x63]
  417282:	fst    QWORD PTR ds:0xc96df669
  417288:	pop    eax
  417289:	out    0xf3,al
  41728b:	push   ebx
  41728c:	pop    ebx
  41728d:	sub    eax,0xea3e7364
  417292:	xchg   BYTE PTR [ebx+0x44cda371],cl
  417298:	jp     0x4172a2
  41729a:	mov    edx,0xc6c0c910
  41729f:	push   edx
  4172a0:	fst    st(5)
  4172a2:	xor    eax,0xb8e48281
  4172a7:	jo     0x4172dd
  4172a9:	fsub   QWORD PTR [ebp-0x69]
  4172ac:	inc    ebx
  4172ad:	mov    al,ds:0xdbfa38
  4172b2:	adc    al,0xa3
  4172b4:	push   0xf9e9f685
  4172b9:	std    
  4172ba:	mov    ds,WORD PTR [esi+0x1b46c04e]
  4172c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4172c1:	imul   esi,esp,0x2b
  4172c4:	cmp    DWORD PTR [ebx+0x4a0048dc],ecx
  4172ca:	(bad)  
  4172cb:	rcr    BYTE PTR [edi+0x280c6870],1
  4172d1:	and    esp,ecx
  4172d3:	out    dx,eax
  4172d4:	pop    esi
  4172d5:	lods   al,BYTE PTR ds:[esi]
  4172d6:	xor    eax,0x7291f9c9
  4172db:	popf   
  4172dc:	mov    edi,0x9388cd5d
  4172e1:	dec    ebp
  4172e2:	add    eax,0x50f87fd7
  4172e7:	mov    dh,0xea
  4172e9:	ins    BYTE PTR es:[edi],dx
  4172ea:	(bad)  
  4172eb:	cli    
  4172ec:	stos   BYTE PTR es:[edi],al
  4172ed:	rcr    DWORD PTR [edx-0x4c],0x8d
  4172f1:	jecxz  0x41727b
  4172f3:	ds dec ebx
  4172f5:	or     ecx,DWORD PTR [ebx]
  4172f7:	lock xor dl,BYTE PTR [edi+0x27]
  4172fb:	hlt    
  4172fc:	mov    esp,ebp
  4172fe:	nop
  4172ff:	sbb    BYTE PTR [ecx-0x65],bl
  417302:	pop    ebx
  417303:	mov    eax,ds:0xe5d2fcd2
  417308:	and    esi,DWORD PTR [esi]
  41730a:	xor    BYTE PTR [ecx],0x41
  41730d:	fidiv  WORD PTR [ecx-0x5c]
  417310:	and    esi,DWORD PTR [ebx+0x1f25848d]
  417316:	and    BYTE PTR [eiz*4-0x22337726],0xdb
  41731e:	push   edx
  41731f:	mov    ds:0xba0229ca,eax
  417324:	pop    ebp
  417325:	cmp    BYTE PTR [esi],dl
  417327:	(bad)  
  417328:	cwde   
  417329:	push   esi
  41732a:	es xchg ecx,eax
  41732c:	mov    edi,0x9218915a
  417331:	pop    es
  417332:	fwait
  417333:	bsf    eax,DWORD PTR [ecx+0x3ab32883]
  41733a:	mov    ebp,0xe38375cc
  41733f:	outs   dx,BYTE PTR ds:[esi]
  417340:	jno    0x417373
  417342:	mov    bh,dl
  417344:	(bad)  
  417345:	jo     0x4172fc
  417347:	aam    0x33
  417349:	lods   al,BYTE PTR ds:[esi]
  41734a:	adc    cl,BYTE PTR [edi]
  41734c:	cwde   
  41734d:	clc    
  41734e:	pop    edx
  41734f:	ds mov cl,0xc
  417352:	push   edx
  417353:	rcr    dh,0x9c
  417356:	pop    eax
  417357:	icebp  
  417358:	push   esi
  417359:	and    esp,DWORD PTR [esi]
  41735b:	(bad)  
  41735c:	mov    ds:0xb9fc6a6e,al
  417361:	add    al,0x2f
  417363:	and    cl,BYTE PTR [edi]
  417365:	(bad)  
  417366:	mov    edx,0xb64fa34a
  41736b:	add    BYTE PTR [edi+0x21],al
  41736e:	test   al,0x3
  417370:	xor    eax,0x1829e8db
  417375:	ret    0x9444
  417378:	hlt    
  417379:	das    
  41737a:	add    edi,DWORD PTR [edi]
  41737c:	dec    esp
  41737d:	adc    BYTE PTR [edi],ch
  41737f:	cld    
  417380:	mov    al,ds:0x3a807203
  417385:	mov    cl,0x3c
  417387:	sbb    DWORD PTR [edi-0x7c],eax
  41738a:	(bad)  
  41738c:	pop    ebx
  41738d:	mov    al,ss:0xa5a516ee
  417393:	and    al,0xbd
  417395:	inc    edi
  417396:	xchg   esi,eax
  417397:	xchg   ebp,eax
  417398:	pushf  
  417399:	(bad)  
  41739b:	dec    ebp
  41739c:	sets   dl
  41739f:	cmp    DWORD PTR [edi+0x5c5fe572],eax
  4173a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4173a6:	inc    esp
  4173a7:	pusha  
  4173a8:	jae    0x4173b5
  4173aa:	pop    edi
  4173ab:	repz mov ebx,0x46ef995c
  4173b1:	mov    BYTE PTR [edi-0x158700a4],bh
  4173b7:	stos   DWORD PTR es:[edi],eax
  4173b8:	inc    esi
  4173b9:	cli    
  4173ba:	sar    BYTE PTR cs:[esi-0x31],1
  4173be:	(bad)  
  4173bf:	jae    0x4173e6
  4173c1:	cwde   
  4173c2:	cmp    al,BYTE PTR [edx-0xa]
  4173c5:	cmc    
  4173c6:	jmp    0x41742a
  4173c8:	jmp    0x41734e
  4173ca:	enter  0xc82d,0x7f
  4173ce:	test   al,0xef
  4173d0:	sbb    ebx,DWORD PTR [eax]
  4173d2:	fild   QWORD PTR [edi+0x4903de3e]
  4173d8:	mov    edi,0x53deb83b
  4173dd:	mov    eax,ds:0x84f984d7
  4173e2:	mov    ds:0xd0756c6a,al
  4173e7:	adc    al,dl
  4173e9:	stos   DWORD PTR es:[edi],eax
  4173ea:	shl    dh,cl
  4173ec:	pop    ss
  4173ed:	imul   esi,DWORD PTR [eax+0x1935032f],0x52
  4173f4:	fidiv  DWORD PTR [ebp+0x228b351a]
  4173fa:	stc    
  4173fb:	addr16 sub eax,0xb544c3bd
  417401:	xor    BYTE PTR [ebx+0x7],ch
  417404:	xchg   edi,ebx
  417406:	sub    bl,BYTE PTR [esi-0x44]
  417409:	sbb    BYTE PTR ds:0x2eb69197,0xec
  417410:	in     al,dx
  417411:	add    dh,ch
  417413:	test   DWORD PTR [ebx+ebp*4],0xc9c7bdde
  41741a:	dec    eax
  41741b:	xchg   esi,eax
  41741c:	cmp    esp,DWORD PTR [esi+0x26e2aa36]
  417422:	dec    edx
  417423:	adc    esi,esp
  417425:	mov    ebx,0xa75a375a
  41742a:	fld    DWORD PTR [esi]
  41742c:	data16 (bad) 
  41742e:	out    0xfa,eax
  417430:	enter  0x343c,0x4c
  417434:	(bad)  
  417435:	jae    0x4173d8
  417437:	pop    es
  417438:	jo     0x417445
  41743a:	add    BYTE PTR [ecx+0x16],ch
  41743d:	(bad)  
  41743e:	sub    al,0x73
  417440:	aam    0xf3
  417442:	mov    eax,ds:0x3ee2927b
  417447:	(bad)  
  417448:	mov    edx,0x2b1aa915
  41744d:	jg     0x4173d8
  41744f:	pop    edx
  417450:	jbe    0x4173d4
  417452:	cdq    
  417453:	fcmovne st,st(3)
  417455:	jbe    0x417442
  417457:	jb     0x4174ca
  417459:	sub    dh,dh
  41745b:	sar    DWORD PTR [esi+0x40],1
  41745e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41745f:	add    al,0xe2
  417461:	in     eax,0x64
  417463:	es ret 
  417465:	jmp    0x775:0x41d39df9
  41746c:	add    al,0x29
  41746e:	(bad)  
  417470:	dec    esp
  417471:	adc    DWORD PTR ds:[esi-0x7b45b4c2],eax
  417478:	idiv   ebp
  41747a:	(bad)  
  41747c:	jae    0x4174f2
  41747e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41747f:	add    edi,DWORD PTR [esi+ebp*2]
  417482:	cld    
  417483:	add    BYTE PTR [ebx],dh
  417485:	ins    DWORD PTR es:[edi],dx
  417486:	adc    BYTE PTR [eax-0x48],al
  417489:	aad    0x7c
  41748b:	add    ebp,edx
  41748d:	jo     0x41741b
  41748f:	sar    BYTE PTR [eax-0x99437e4],1
  417495:	inc    esi
  417496:	adc    BYTE PTR [ecx-0x53],cl
  417499:	call   0x880dec46
  41749e:	xlat   BYTE PTR ds:[ebx]
  41749f:	add    ebx,DWORD PTR [ebx]
  4174a1:	push   edi
  4174a2:	adc    eax,0x6cbecc4e
  4174a7:	out    0x33,eax
  4174a9:	sbb    DWORD PTR [eax+edi*4],ebp
  4174ac:	adc    ch,BYTE PTR [eax]
  4174ae:	push   edi
  4174af:	pop    edx
  4174b0:	or     cl,BYTE PTR [edi-0x24]
  4174b3:	test   DWORD PTR [edx],0x83a9da72
  4174b9:	rol    DWORD PTR [ecx-0x2a],1
  4174bc:	and    esi,ecx
  4174be:	loop   0x4174e2
  4174c0:	pop    esi
  4174c1:	dec    ebp
  4174c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4174c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4174c4:	test   eax,0xf3fb9ad
  4174c9:	mov    ecx,0xdbe26709
  4174ce:	aad    0x74
  4174d0:	inc    ebx
  4174d1:	add    DWORD PTR [edi-0x361f5741],edx
  4174d7:	dec    ebx
  4174d8:	in     eax,dx
  4174d9:	aad    0xd3
  4174db:	loope  0x417505
  4174dd:	xlat   BYTE PTR ds:[ebx]
  4174de:	retf   0xbc0e
  4174e1:	cdq    
  4174e2:	and    eax,0x6896ecf0
  4174e7:	enter  0x11bc,0xcc
  4174eb:	sub    edi,DWORD PTR ds:0xcd7ef095
  4174f1:	in     al,0xeb
  4174f3:	aam    0x4b
  4174f5:	clc    
  4174f6:	ret    
  4174f7:	imul   ecx,ebp,0x38a656d6
  4174fd:	push   edx
  4174fe:	mov    WORD PTR [ebp-0x133d7915],cs
  417504:	les    esi,FWORD PTR [eax-0x33cf91db]
  41750a:	and    eax,0x347f5a02
  41750f:	ret    
  417510:	push   ebp
  417511:	mov    edi,0xf3c0d987
  417516:	pop    ds
  417517:	push   ds
  417518:	xor    dh,BYTE PTR [edx-0x22]
  41751b:	popf   
  41751c:	xchg   edx,eax
  41751d:	enter  0x670a,0xe9
  417521:	cld    
  417522:	adc    al,0xa0
  417524:	or     edi,esp
  417526:	xor    ecx,DWORD PTR ds:0xdf9b24ef
  41752c:	lahf   
  41752d:	ret    
  41752e:	stc    
  41752f:	pop    ecx
  417530:	retf   
  417531:	push   ecx
  417532:	xor    bh,BYTE PTR [ebx+0x6e755371]
  417538:	inc    esi
  417539:	mov    gs,ecx
  41753b:	dec    esi
  41753c:	jmp    0x4174db
  41753e:	jo     0x4175a7
  417540:	icebp  
  417541:	sbb    eax,0x589c0c9
  417546:	pop    edi
  417547:	xor    esp,DWORD PTR [esi+0x22]
  41754a:	jb     0x4175b7
  41754c:	mov    WORD PTR [esi+esi*4-0xeaa794e],ds
  417553:	jb     0x417582
  417555:	push   eax
  417556:	pop    eax
  417557:	mov    al,ds:0x75536c3c
  41755c:	bound  ebp,QWORD PTR [edx-0x7116ea2c]
  417562:	inc    ebp
  417563:	sbb    al,0xbe
  417565:	pop    ds
  417566:	outs   dx,BYTE PTR ds:[esi]
  417567:	mov    cl,0xbe
  417569:	std    
  41756a:	adc    DWORD PTR [ecx+ebx*8],eax
  41756d:	les    edx,FWORD PTR [ebx]
  41756f:	nop
  417570:	xor    ebx,DWORD PTR [ecx-0x610170f8]
  417576:	push   ebp
  417577:	adc    esi,ecx
  417579:	fiadd  WORD PTR [edi+0x797b6cc0]
  41757f:	jmp    0xffe42dbd
  417584:	mov    eax,0xc8c71faa
  417589:	imul   ecx,DWORD PTR [ebp+ecx*8+0x9b3bd53],0x189961a6
  417594:	xor    al,0xa7
  417596:	das    
  417597:	mov    bl,0x39
  417599:	sbb    ch,BYTE PTR ds:[ebx+0x62]
  41759d:	clc    
  41759e:	jmp    0x417564
  4175a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4175a1:	test   al,0x92
  4175a3:	and    esi,esp
  4175a5:	mov    BYTE PTR [eax+esi*1+0x32874cf6],bh
  4175ac:	push   0xd4ed6d5c
  4175b1:	mov    al,ds:0x20394d2
  4175b6:	out    dx,eax
  4175b7:	(bad)  
  4175b8:	cmp    DWORD PTR [ecx-0x71],esp
  4175bb:	fstp   DWORD PTR [ebx+0x19d4e1ee]
  4175c1:	retf   0xc207
  4175c4:	sbb    bl,BYTE PTR [edi-0x78]
  4175c7:	stos   BYTE PTR es:[edi],al
  4175c8:	imul   edx,DWORD PTR [esi+edx*2],0x970c5aa9
  4175cf:	mov    esi,0x3c6534cd
  4175d4:	mov    edi,0x8162701c
  4175d9:	std    
  4175da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4175db:	inc    edi
  4175dc:	mov    cl,0x91
  4175de:	into   
  4175df:	fsubr  st,st(6)
  4175e1:	add    eax,0x2b9fc958
  4175e6:	mov    BYTE PTR [edi+ecx*4],ah
  4175e9:	test   eax,0x20f01363
  4175ee:	leave  
  4175ef:	clc    
  4175f0:	fcmovne st,st(1)
  4175f2:	mov    ds:0xfb1b7af7,al
  4175f7:	addr16 loop 0x417629
  4175fa:	pcmpgtw mm6,QWORD PTR [eax-0x2f]
  4175fe:	mov    edi,0xf38453fb
  417603:	pop    es
  417604:	jno    0x4175b0
  417606:	xchg   ecx,eax
  417607:	inc    edi
  417608:	mov    ds:0x80c8c4fa,al
  41760d:	call   FWORD PTR [ebp-0x46]
  417610:	bound  ebx,QWORD PTR [edx]
  417612:	cmp    al,0x68
  417614:	cmp    BYTE PTR [eax+0xd],al
  417617:	jp     0x417669
  417619:	adc    BYTE PTR [eax-0x1e],ch
  41761c:	cmp    eax,0xcc7e401
  417621:	mov    al,ds:0x9a55d970
  417626:	hlt    
  417627:	ficomp WORD PTR [edx+0x464f45b5]
  41762d:	sub    DWORD PTR [ecx],esp
  41762f:	mov    dh,0x1f
  417631:	clc    
  417632:	push   DWORD PTR ds:0xbc4d6461
  417638:	push   ds
  417639:	ins    DWORD PTR es:[edi],dx
  41763a:	lods   al,BYTE PTR ds:[esi]
  41763b:	cmp    eax,0xe6266c94
  417640:	sbb    ebx,DWORD PTR [eax+0x65]
  417643:	enter  0x721e,0x8d
  417647:	push   ebp
  417648:	adc    al,BYTE PTR [edi-0xb1dda27]
  41764e:	pushf  
  41764f:	mov    cl,0xca
  417651:	lahf   
  417652:	cs ror cl,0x26
  417656:	data16 sbb ch,BYTE PTR [edx+ebp*4+0x4d84034e]
  41765e:	dec    edi
  41765f:	xor    DWORD PTR [ecx],ebx
  417661:	sub    bh,BYTE PTR [ebx]
  417663:	ins    DWORD PTR es:[edi],dx
  417664:	dec    edi
  417665:	sub    eax,0x2f08e433
  41766a:	push   es
  41766b:	and    al,0xf2
  41766d:	cdq    
  41766e:	mov    al,0x8
  417670:	jnp    0x4176de
  417672:	fcmovnbe st,st(6)
  417674:	aam    0x67
  417676:	(bad)  
  417677:	in     al,0xa3
  417679:	and    edi,ebx
  41767b:	rcr    DWORD PTR [edi-0x7a616c93],0x90
  417682:	adc    BYTE PTR [ebx],ch
  417684:	sti    
  417685:	add    al,0x30
  417687:	lock lahf 
  417689:	test   al,0x1d
  41768b:	mov    ds:0x80d6a2d9,al
  417690:	sub    eax,0x21d56683
  417695:	xor    bl,BYTE PTR [ecx+ecx*4]
  417698:	scas   eax,DWORD PTR es:[edi]
  417699:	jnp    0x41767c
  41769b:	jecxz  0x4176c8
  41769d:	movzx  eax,ah
  4176a0:	lds    edi,FWORD PTR [edi-0x61441aa7]
  4176a6:	das    
  4176a7:	inc    esi
  4176a8:	jae    0x417637
  4176aa:	cwde   
  4176ab:	sti    
  4176ac:	mov    edx,0xd920a9b9
  4176b1:	xor    DWORD PTR ds:0xe4111812,ecx
  4176b7:	in     al,dx
  4176b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4176b9:	mov    esp,0xcab726c1
  4176be:	in     al,dx
  4176bf:	test   BYTE PTR [edx-0x2dacf869],0x89
  4176c6:	sub    al,0x43
  4176c8:	mov    ebp,DWORD PTR [eax+0x7082bf23]
  4176ce:	xchg   ebx,eax
  4176cf:	adc    DWORD PTR [ebx-0x1f],edi
  4176d2:	cmp    ah,BYTE PTR [ecx+0x5782355f]
  4176d8:	pop    ss
  4176d9:	pop    eax
  4176da:	adc    BYTE PTR [ecx+0x1f],dh
  4176dd:	fmul   QWORD PTR [edx+0x600a1fb6]
  4176e3:	in     al,dx
  4176e4:	out    0x29,eax
  4176e6:	add    DWORD PTR [edx],0xc7f91a1c
  4176ec:	xchg   DWORD PTR [ebx],edx
  4176ee:	or     al,0x90
  4176f0:	mov    bh,0x8f
  4176f2:	test   DWORD PTR [edi],esi
  4176f4:	in     eax,0x8a
  4176f6:	fst    QWORD PTR [esi-0x3a8cadae]
  4176fc:	neg    ebx
  4176fe:	call   DWORD PTR [ebp-0x76beb886]
  417704:	or     al,0x94
  417706:	out    dx,eax
  417707:	sub    DWORD PTR [edi-0x1c],ecx
  41770a:	pop    edx
  41770b:	jg     0x417746
  41770d:	cmp    ch,BYTE PTR [esp+esi*8-0x708fb23f]
  417714:	cmp    edx,esp
  417716:	inc    edx
  417717:	adc    eax,0xc9913348
  41771c:	xchg   ecx,eax
  41771d:	mov    esi,0x6759ce82
  417722:	xchg   edi,eax
  417723:	ins    BYTE PTR es:[edi],dx
  417724:	sbb    BYTE PTR [esi-0x1d],dl
  417727:	pop    ebp
  417728:	push   edi
  417729:	call   0x23995909
  41772e:	and    DWORD PTR ds:0x12fbcf64,esp
  417734:	jmp    0xfc1c9ce5
  417739:	out    0x8e,eax
  41773b:	je     0x417718
  41773d:	or     eax,0x4470a730
  417742:	mov    edx,0x8720e789
  417747:	mov    edx,0xeb34405
  41774c:	mov    al,BYTE PTR [ebp-0x13]
  41774f:	and    BYTE PTR [esi+0x44055e37],cl
  417755:	dec    esp
  417756:	sub    BYTE PTR [esi-0x47e68bb],dl
  41775c:	cmp    al,0x81
  41775e:	jmp    0xcb68:0xeb3d38f4
  417765:	pop    edx
  417766:	jecxz  0x4177e0
  417768:	loop   0x417762
  41776a:	mov    esp,0x4de1149
  41776f:	pop    esp
  417770:	lock stos BYTE PTR es:[edi],al
  417772:	jp     0x417768
  417774:	fsubr  DWORD PTR [edi-0x11]
  417777:	push   es
  417778:	sbb    bh,BYTE PTR [edx+0x6f]
  41777b:	test   DWORD PTR [ebx+0x1f1adc06],esp
  417781:	imul   esi,esi,0xc
  417784:	out    dx,eax
  417785:	xchg   ebx,eax
  417786:	mov    ebp,0xca699dff
  41778b:	pop    ebp
  41778c:	jmp    0xa660:0xb73bc75b
  417793:	xor    ecx,DWORD PTR [esi-0x31]
  417796:	sub    ah,BYTE PTR [edi+0x328cd910]
  41779c:	jp     0x41772d
  41779e:	add    DWORD PTR [edx+0x16],edi
  4177a1:	pop    ss
  4177a2:	dec    edi
  4177a3:	fcomp  DWORD PTR [ebx+ebp*8]
  4177a6:	push   0x67
  4177a8:	clc    
  4177a9:	mov    al,ds:0xa22aac53
  4177ae:	push   ss
  4177af:	call   0xb61e:0x748c5f29
  4177b6:	sub    DWORD PTR [ecx-0x29],edi
  4177b9:	arpl   WORD PTR [ebp-0x6e],dx
  4177bc:	xchg   ebx,eax
  4177bd:	inc    eax
  4177be:	push   ecx
  4177bf:	mov    ebp,DWORD PTR [ecx-0xf250e7d]
  4177c5:	pop    DWORD PTR [eax+0x79017686]
  4177cb:	lds    ebp,FWORD PTR [ebx]
  4177cd:	xor    DWORD PTR [eax-0x52d52ba5],edx
  4177d3:	cmp    eax,0x7fbfd4ee
  4177d8:	pop    ecx
  4177d9:	or     dl,BYTE PTR [ecx-0x2f]
  4177dc:	mov    ebp,DWORD PTR ds:0xb9c5059b
  4177e2:	dec    eax
  4177e3:	fadd   QWORD PTR [ebx-0x19]
  4177e6:	lods   eax,DWORD PTR ds:[esi]
  4177e7:	mov    BYTE PTR [esi+0x3bb2323a],dh
  4177ed:	(bad)  
  4177ee:	xor    al,0x60
  4177f0:	xor    BYTE PTR [ebx-0x30],ah
  4177f3:	retf   
  4177f4:	adc    al,0x4
  4177f6:	dec    esp
  4177f7:	outs   dx,BYTE PTR ds:[esi]
  4177f8:	mov    ds:0x63424d4a,eax
  4177fd:	xor    DWORD PTR [esi],esi
  4177ff:	mov    edx,DWORD PTR [esi]
  417801:	and    ebp,DWORD PTR [ecx+edx*2]
  417804:	mov    dl,0x44
  417806:	pop    edx
  417807:	clc    
  417808:	sbb    eax,0x6c10e6b5
  41780d:	repz hlt 
  41780f:	mov    ah,0x38
  417811:	ins    BYTE PTR es:[edi],dx
  417812:	in     eax,dx
  417813:	aaa    
  417814:	test   al,0x2b
  417816:	aam    0x9d
  417818:	iret   
  417819:	sbb    DWORD PTR [esi+ecx*4],ebx
  41781c:	cmp    BYTE PTR [ebp+0x28c33096],0xee
  417823:	retf   0xc5cd
  417826:	cwde   
  417827:	test   BYTE PTR [eax-0x3b],dh
  41782a:	mov    cl,0x1d
  41782c:	and    al,0x5d
  41782e:	add    DWORD PTR [ecx+0x6c80635a],ebx
  417834:	and    cl,BYTE PTR [edi-0x206b25a8]
  41783a:	add    edi,0xffffffd5
  41783d:	jle    0x41788e
  41783f:	pminub mm7,QWORD PTR [ecx+ebp*2-0x732564ee]
  417847:	dec    edi
  417848:	mov    eax,ds:0x967c04ba
  41784d:	or     ecx,DWORD PTR [esi]
  41784f:	popa   
  417850:	imul   ebx,DWORD PTR [eax-0x7d],0xbf9b0fcb
  417857:	dec    esi
  417858:	(bad)  
  417859:	jae    0x4178c7
  41785b:	lea    esi,[esi+eiz*1]
  41785e:	pop    esi
  41785f:	mov    esp,0xc4a9927e
  417864:	mov    eax,ds:0x98e0e358
  417869:	push   esi
  41786a:	mov    BYTE PTR [esi-0x143ea116],cl
  417870:	pop    edx
  417871:	aam    0xff
  417873:	js     0x4178dc
  417875:	rcr    BYTE PTR [eax+eax*1+0x26933cc2],0x1f
  41787d:	repnz not esp
  417880:	sbb    BYTE PTR ds:0x9b7221d,ch
  417886:	(bad)  
  417887:	call   0x905089e8
  41788c:	push   ds
  41788d:	das    
  41788e:	out    0xb4,eax
  417890:	cwde   
  417891:	iret   
  417892:	and    al,0x28
  417894:	ret    0xa0e8
  417897:	aas    
  417898:	xor    ebx,DWORD PTR [edx+edx*2-0x1a]
  41789c:	into   
  41789d:	or     esi,edi
  41789f:	push   0xffffffd3
  4178a1:	sub    DWORD PTR [esi+0x61430865],esp
  4178a7:	outs   dx,BYTE PTR ds:[esi]
  4178a8:	es or  bl,BYTE PTR ds:[esi]
  4178ac:	inc    ecx
  4178ad:	icebp  
  4178ae:	jno    0x4178b2
  4178b0:	sti    
  4178b1:	jbe    0x41792b
  4178b3:	xor    esi,DWORD PTR [ecx]
  4178b5:	push   es
  4178b6:	ror    DWORD PTR [ebx+eiz*1],1
  4178b9:	mov    eax,0x385e457
  4178be:	xchg   edi,eax
  4178bf:	mov    esp,0x9614e2c
  4178c4:	fdiv   st(2),st
  4178c6:	and    DWORD PTR [edi-0x38eaaf17],ebx
  4178cc:	clc    
  4178cd:	push   0xae2b00ed
  4178d2:	cdq    
  4178d3:	arpl   WORD PTR [ecx-0x1a],bp
  4178d6:	xchg   BYTE PTR [ecx-0x40],dl
  4178d9:	pop    esp
  4178da:	jno    0x4178a2
  4178dc:	ror    DWORD PTR [edi-0x44b8ffbc],0x9c
  4178e3:	psubusw mm7,mm4
  4178e6:	ins    DWORD PTR es:[edi],dx
  4178e7:	dec    ecx
  4178e8:	outs   dx,DWORD PTR ds:[esi]
  4178e9:	iret   
  4178ea:	push   cs
  4178eb:	xlat   BYTE PTR ds:[ebx]
  4178ec:	aas    
  4178ed:	in     eax,0x41
  4178ef:	and    al,0xd3
  4178f1:	inc    ebp
  4178f2:	or     esp,DWORD PTR [ecx+0x38c8aa61]
  4178f8:	cld    
  4178f9:	lods   al,BYTE PTR ds:[esi]
  4178fa:	call   0x814e:0x4a16264b
  417901:	mov    al,ds:0x757365cf
  417906:	jg     0x4178c5
  417908:	in     eax,dx
  417909:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41790a:	aad    0x69
  41790c:	int3   
  41790d:	fs es pushf 
  417910:	jg     0x41796b
  417912:	inc    edx
  417913:	and    al,0xf2
  417915:	and    DWORD PTR [edi+0x57],edi
  417918:	pop    ecx
  417919:	push   ebp
  41791a:	inc    ebp
  41791b:	add    al,0xaf
  41791d:	jle    0x4178da
  41791f:	push   edi
  417920:	scas   al,BYTE PTR es:[edi]
  417921:	add    esp,ecx
  417923:	arpl   WORD PTR [eax-0x5f7f66d5],sp
  417929:	push   ss
  41792a:	inc    ebx
  41792b:	shr    BYTE PTR [ecx+0x309ed2fb],1
  417931:	outs   dx,DWORD PTR ds:[esi]
  417932:	pop    ebx
  417933:	mov    edx,0x9cf09705
  417938:	xor    ch,0xcb
  41793b:	mov    edi,0x31c3830e
  417940:	xor    edx,DWORD PTR [esi-0x21c4b854]
  417946:	mov    bl,0xb0
  417948:	push   esp
  417949:	mov    bh,0x67
  41794b:	daa    
  41794c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41794d:	aas    
  41794e:	inc    esi
  41794f:	push   0xf6f70140
  417954:	jge    0x4178f6
  417956:	ficomp WORD PTR [edi+0x33]
  417959:	pop    ecx
  41795a:	call   0x691a6ae8
  41795f:	aaa    
  417960:	xlat   BYTE PTR ds:[ebx]
  417961:	test   eax,0x7c7a9eb0
  417966:	ror    ch,cl
  417968:	cld    
  417969:	js     0x4179b2
  41796b:	mov    esp,0x732bfff8
  417970:	loope  0x41793d
  417972:	cmp    DWORD PTR [eax-0x41],eax
  417975:	lods   eax,DWORD PTR ds:[esi]
  417977:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417978:	sahf   
  417979:	mov    eax,ds:0x721b8056
  41797e:	fs mov ebx,ebp
  417981:	add    cl,BYTE PTR [esi+edi*8]
  417984:	mov    ah,0x61
  417986:	je     0x417924
  417988:	repnz lea edx,[esi]
  41798b:	cmp    al,BYTE PTR [edx+0x6d]
  41798e:	jl     0x41798e
  417990:	repz inc ecx
  417992:	xchg   esi,eax
  417993:	mov    bh,0xae
  417995:	repnz push ebp
  417997:	fadd   QWORD PTR [ecx+0x20972b6e]
  41799d:	in     al,0xb5
  41799f:	sub    eax,0xcebe48c0
  4179a4:	dec    ecx
  4179a5:	ret    
  4179a6:	jl     0x417a16
  4179a8:	dec    eax
  4179a9:	mov    fs:0x42f5a96,al
  4179af:	add    edx,DWORD PTR [ecx-0x636414cf]
  4179b5:	int    0x7b
  4179b7:	and    DWORD PTR [edi-0x5e180024],esi
  4179bd:	jae    0x41798c
  4179bf:	cmc    
  4179c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4179c1:	xchg   ebx,eax
  4179c2:	dec    esi
  4179c3:	ds cmc 
  4179c5:	int3   
  4179c6:	mov    ss,WORD PTR [eax]
  4179c8:	popa   
  4179c9:	dec    edx
  4179ca:	push   cs
  4179cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4179cc:	adc    eax,0x25637c8f
  4179d1:	add    ebp,DWORD PTR [ebx]
  4179d3:	mov    eax,ds:0xf28ab473
  4179d8:	call   0xf499:0x88c522ea
  4179df:	fucomp st(3)
  4179e1:	stos   DWORD PTR es:[edi],eax
  4179e2:	in     al,0x6a
  4179e4:	test   DWORD PTR [ebx+0xd09d75a],eax
  4179ea:	outs   dx,DWORD PTR ds:[esi]
  4179eb:	or     eax,0xffc2219d
  4179f0:	fidiv  DWORD PTR [edx]
  4179f2:	cmp    dh,BYTE PTR [ebx]
  4179f4:	cmp    eax,0x165a0ce7
  4179f9:	mov    esp,0x6ade473d
  4179fe:	fwait
  4179ff:	dec    edi
  417a00:	fwait
  417a01:	mov    edx,ebx
  417a03:	sub    dh,dl
  417a05:	push   0xffffffe6
  417a07:	aad    0x35
  417a09:	and    DWORD PTR [ebx-0x74],ebp
  417a0c:	and    DWORD PTR [ebx-0xb],edx
  417a0f:	dec    ebx
  417a10:	pop    ebx
  417a11:	mov    bh,0x91
  417a13:	cwde   
  417a14:	mov    ds:0xcaff820d,al
  417a19:	mov    ebx,0x16edd68
  417a1e:	leave  
  417a1f:	xchg   BYTE PTR [ebx-0x30c7820a],ch
  417a25:	and    al,0x8f
  417a28:	and    sp,si
  417a2b:	pop    ds
  417a2c:	add    eax,0x199df3b5
  417a31:	jle    0x4179da
  417a33:	sar    DWORD PTR [ebp-0x173e1e41],0x28
  417a3a:	rcl    BYTE PTR [ecx+0x8],1
  417a3d:	aaa    
  417a3e:	xor    al,0x96
  417a40:	sidtd  [esi-0x3721c92e]
  417a47:	or     DWORD PTR [ecx+0x2d0cc079],ebx
  417a4d:	and    ecx,esi
  417a4f:	call   0x86a3209a
  417a54:	add    cl,al
  417a56:	test   DWORD PTR [edx-0x7b17103c],0xa5559252
  417a60:	fistp  QWORD PTR [esi+0x5cd622dd]
  417a66:	dec    eax
  417a67:	repnz test BYTE PTR [esi],0x70
  417a6b:	pop    ebp
  417a6c:	jno    0x417a19
  417a6e:	int3   
  417a6f:	inc    ebx
  417a70:	outs   dx,DWORD PTR ds:[esi]
  417a71:	sahf   
  417a72:	pushf  
  417a73:	test   esp,ebp
  417a75:	or     ebp,DWORD PTR [esi+esi*1+0x33]
  417a79:	scas   al,BYTE PTR es:[edi]
  417a7a:	popa   
  417a7b:	je     0x417a8a
  417a7d:	nop
  417a7e:	pop    esp
  417a7f:	jae    0x417ac6
  417a81:	mov    cl,BYTE PTR [ebx+ebx*2]
  417a84:	jp     0x417a96
  417a86:	addr16 cli 
  417a88:	lods   eax,DWORD PTR ds:[esi]
  417a89:	retf   0xf1be
  417a8c:	push   esi
  417a8d:	or     al,0xa8
  417a8f:	mov    esi,0x90aa430b
  417a94:	inc    esi
  417a95:	mov    edx,0xd5cb595b
  417a9a:	fs xchg edi,eax
  417a9c:	pop    edi
  417a9d:	push   ds
  417a9e:	push   ecx
  417a9f:	(bad)  
  417aa0:	cs inc esi
  417aa2:	inc    edx
  417aa3:	pusha  
  417aa4:	add    BYTE PTR ds:0x36580450,ah
  417aaa:	xchg   ebx,eax
  417aab:	stos   DWORD PTR es:[edi],eax
  417aac:	pop    es
  417aad:	fld    QWORD PTR [ebx+ebx*4-0xc]
  417ab1:	fild   QWORD PTR [edx]
  417ab3:	jge    0x417a67
  417ab5:	jnp    0x417adf
  417ab7:	ds push ecx
  417ab9:	sti    
  417aba:	mov    gs,WORD PTR [edx]
  417abc:	dec    esi
  417abd:	pop    edx
  417abe:	push   ecx
  417abf:	mov    ebp,0x4490b8e9
  417ac4:	jge    0x417b17
  417ac6:	ror    DWORD PTR [esi-0x39],cl
  417ac9:	dec    esp
  417aca:	pop    edi
  417acb:	mov    BYTE PTR [ebp-0x4a175e48],bh
  417ad1:	fnsave [ebx+0x4f773754]
  417ad7:	adc    eax,0x3d562e70
  417adc:	push   ebp
  417add:	js     0x417a8d
  417adf:	fsubrp st(1),st
  417ae1:	and    DWORD PTR [ebp-0x60],esp
  417ae4:	fimul  DWORD PTR [ecx+0x5e]
  417ae7:	mov    DWORD PTR [ebp+0x68],0x80950dd6
  417aee:	dec    ebp
  417aef:	(bad)  
  417af0:	pushf  
  417af1:	stos   BYTE PTR es:[edi],al
  417af2:	pop    ecx
  417af3:	dec    eax
  417af4:	sahf   
  417af5:	imul   ebx,esp,0x8c4a3d71
  417afb:	sbb    BYTE PTR [eax],ah
  417afd:	outs   dx,DWORD PTR ds:[esi]
  417afe:	retf   0xa334
  417b01:	sub    al,0xb1
  417b03:	pop    ebp
  417b04:	mov    esp,DWORD PTR [edi+0x57c444d7]
  417b0a:	gs clc 
  417b0c:	retf   0xe7a7
  417b0f:	mov    al,0xdd
  417b11:	cs ret 
  417b13:	adc    ch,BYTE PTR [eax+0xc]
  417b16:	loop   0x417ab3
  417b18:	fldln2 
  417b1a:	imul   BYTE PTR [eax]
  417b1c:	mov    bh,0x17
  417b1e:	popf   
  417b1f:	sar    BYTE PTR [eax+0x77],0x6f
  417b23:	sub    bl,BYTE PTR [esi+0x3b]
  417b26:	inc    edi
  417b27:	sahf   
  417b28:	sub    al,0xf
  417b2a:	fld1   
  417b2c:	pop    ebx
  417b2d:	popa   
  417b2e:	fdiv   st,st(1)
  417b30:	(bad)  
  417b31:	nop
  417b32:	ret    0xd3cb
  417b35:	retf   0x4475
  417b38:	pop    es
  417b39:	(bad)
  417b3c:	out    0x28,eax
  417b3e:	cmp    al,0xf5
  417b40:	loop   0x417b7f
  417b42:	cmc    
  417b43:	rol    DWORD PTR [eax+0x39],1
  417b46:	stos   DWORD PTR es:[edi],eax
  417b47:	out    dx,eax
  417b48:	ror    BYTE PTR [ebp+ecx*2+0x2b],cl
  417b4c:	add    bh,BYTE PTR [ebx-0x10c48c0b]
  417b52:	repnz and DWORD PTR [eax-0x78],edx
  417b56:	adc    DWORD PTR [esi-0x6e],eax
  417b59:	stc    
  417b5a:	push   ebp
  417b5b:	clc    
  417b5c:	in     eax,dx
  417b5d:	loope  0x417af1
  417b5f:	pop    esi
  417b61:	leave  
  417b62:	fistp  QWORD PTR [ebx+ebx*1]
  417b65:	es mov cl,0xe0
  417b68:	mov    ecx,0xe6c2b45
  417b6d:	aad    0xd6
  417b6f:	data16 fisubr DWORD PTR [ebp+0x1e]
  417b73:	mov    bh,0x7d
  417b75:	mov    edx,0x79d113e4
  417b7a:	in     al,dx
  417b7b:	call   0x6c47:0xa61e2508
  417b82:	(bad)  
  417b83:	int3   
  417b84:	sbb    BYTE PTR [esi],al
  417b86:	jb     0x417bb7
  417b88:	retf   
  417b89:	mov    al,0xb4
  417b8b:	rcr    BYTE PTR [ebx],cl
  417b8d:	daa    
  417b8e:	pop    edx
  417b8f:	loopne 0x417ba3
  417b91:	es or  eax,0x46a798b0
  417b97:	ret    0x1032
  417b9a:	adc    al,0x3a
  417b9c:	in     al,0x4
  417b9e:	pop    es
  417b9f:	aaa    
  417ba0:	or     BYTE PTR [eax-0x21],dh
  417ba3:	xchg   edx,eax
  417ba4:	adc    BYTE PTR [eax+0x44d12b88],bh
  417baa:	dec    esi
  417bab:	sub    eax,0xee2316cd
  417bb0:	(bad)  
  417bb2:	in     al,0x1
  417bb4:	xor    DWORD PTR [eax+0x1dd984be],ebp
  417bba:	retf   
  417bbb:	pop    ss
  417bbc:	cdq    
  417bbd:	sbb    BYTE PTR [eax-0x76],dl
  417bc0:	mov    ah,0x89
  417bc2:	jb     0x417c41
  417bc4:	mov    dl,0xae
  417bc6:	mov    esi,0x17981ca3
  417bcb:	xchg   ebx,eax
  417bcc:	sbb    eax,ebp
  417bce:	dec    edx
  417bcf:	sbb    eax,0xd9e2d42f
  417bd4:	outs   dx,DWORD PTR ds:[esi]
  417bd5:	jnp    0x417ba1
  417bd7:	cmc    
  417bd8:	inc    ebx
  417bd9:	mov    cl,0x1f
  417bdb:	shl    DWORD PTR [eax-0x6155340b],cl
  417be1:	ror    dl,0xa7
  417be4:	inc    edx
  417be5:	xlat   BYTE PTR ds:[ebx]
  417be6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417be7:	or     al,0x36
  417be9:	cli    
  417bea:	(bad)  
  417beb:	mov    al,0x38
  417bed:	stos   DWORD PTR es:[edi],eax
  417bee:	mov    WORD PTR [eax+ecx*4],ds
  417bf1:	and    ebx,DWORD PTR [ebx]
  417bf3:	cmp    BYTE PTR [ecx],dl
  417bf5:	stos   BYTE PTR es:[edi],al
  417bf6:	int    0x37
  417bf8:	pop    es
  417bf9:	adc    ch,al
  417bfb:	dec    edi
  417bfc:	repz repz sar ebp,1
  417c00:	and    dh,bl
  417c02:	and    al,dh
  417c04:	repnz ficom DWORD PTR [eax+0x3a3fd37f]
  417c0b:	xor    ah,BYTE PTR [eax+eiz*8-0x5b]
  417c0f:	rol    DWORD PTR [eax+0x1],1
  417c12:	lods   eax,DWORD PTR ds:[esi]
  417c13:	adc    bh,ah
  417c15:	enter  0x822b,0xd2
  417c19:	cmc    
  417c1a:	or     al,0x85
  417c1c:	fsubr  DWORD PTR [eax-0x60]
  417c1f:	add    dh,BYTE PTR [edi+0x76ab26ea]
  417c25:	clc    
  417c26:	(bad)  
  417c27:	mov    bh,0x1d
  417c29:	out    dx,al
  417c2a:	das    
  417c2b:	dec    esi
  417c2c:	and    DWORD PTR [edi],0xfffffff5
  417c2f:	(bad)
  417c33:	cwde   
  417c34:	sbb    bl,0x56
  417c37:	stos   DWORD PTR es:[edi],eax
  417c38:	mov    dh,BYTE PTR [ebx]
  417c3a:	push   es
  417c3b:	in     al,0x1c
  417c3d:	stos   DWORD PTR es:[edi],eax
  417c3e:	push   edx
  417c3f:	push   eax
  417c40:	pusha  
  417c41:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417c42:	ret    0xbc2b
  417c45:	xlat   BYTE PTR ds:[ebx]
  417c46:	enter  0x847d,0xe4
  417c4a:	adc    ah,BYTE PTR [eax]
  417c4c:	lahf   
  417c4d:	pop    es
  417c4e:	retf   0x1bac
  417c51:	xchg   esi,eax
  417c52:	jp     0x417c3d
  417c54:	mov    ds:0x58673b2a,al
  417c59:	ins    DWORD PTR es:[edi],dx
  417c5a:	push   ebx
  417c5b:	mov    al,0x46
  417c5d:	out    dx,al
  417c5e:	push   0xffffffc6
  417c60:	and    dl,BYTE PTR [edi+0x78de3853]
  417c66:	into   
  417c67:	outs   dx,DWORD PTR ds:[esi]
  417c68:	mov    ds:0x36c9c0b8,eax
  417c6d:	arpl   WORD PTR [edx+0x46],si
  417c70:	push   cs
  417c71:	cs (bad) 
  417c73:	hlt    
  417c74:	sub    ebx,DWORD PTR [esp+ebx*1]
  417c77:	cmc    
  417c78:	rcr    esp,cl
  417c7a:	ja     0x417c41
  417c7c:	mov    ?,WORD PTR [esi+0x481e0e1e]
  417c82:	adc    bh,al
  417c84:	inc    edi
  417c85:	and    edi,0xe8373fd2
  417c8b:	int    0xc2
  417c8d:	mov    dh,0xed
  417c8f:	mov    edi,ebp
  417c91:	imul   edi,DWORD PTR ds:0x4301fc0d,0x33d226de
  417c9b:	loopne 0x417c96
  417c9d:	repz mov eax,0xf96900
  417ca3:	ret    0xc630
  417ca6:	repz mov WORD PTR [edi],?
  417ca9:	sti    
  417caa:	adc    eax,0x4f140d15
  417caf:	shr    DWORD PTR [esi],0x52
  417cb2:	jle    0x417ced
  417cb4:	lea    edx,[eax+0x45c1d63e]
  417cba:	pop    ecx
  417cbb:	(bad)  
  417cbd:	cli    
  417cbe:	fcomp  QWORD PTR [ebx+0x1d]
  417cc1:	in     eax,dx
  417cc2:	sbb    eax,0x639373c2
  417cc7:	xor    bh,BYTE PTR [ebx+0x54e81726]
  417ccd:	sub    dl,BYTE PTR [edx+0x76]
  417cd0:	mov    ch,0xff
  417cd2:	mov    cl,0x35
  417cd4:	sub    BYTE PTR [eax+0x4d],cl
  417cd7:	jmp    0x417cc4
  417cd9:	popa   
  417cda:	dec    edi
  417cdb:	pusha  
  417cdc:	and    eax,0xd820b934
  417ce1:	mov    esi,0xebf75a88
  417ce6:	in     al,dx
  417ce7:	dec    eax
  417ce8:	or     eax,0xe7fc895a
  417ced:	fmul   DWORD PTR [ebx]
  417cef:	repnz loope 0x417d2b
  417cf2:	lea    esi,[esi+0x61]
  417cf5:	arpl   WORD PTR [edx+0x33],cx
  417cf8:	sbb    DWORD PTR [eax-0x19],esi
  417cfb:	cdq    
  417cfc:	cli    
  417cfd:	imul   edi,DWORD PTR [esi+0x7dd14666],0x73
  417d04:	push   ebp
  417d05:	dec    ecx
  417d06:	mov    bl,0x84
  417d08:	adc    edi,DWORD PTR [eax-0x27]
  417d0b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417d0c:	sbb    ebx,DWORD PTR [esi+eax*1-0xf984305]
  417d13:	add    ch,BYTE PTR [ecx*2-0x41869c46]
  417d1a:	out    dx,al
  417d1b:	xlat   BYTE PTR ds:[ebx]
  417d1c:	rol    DWORD PTR [esi-0x49d35d5],0x97
  417d23:	pushf  
  417d24:	jp     0x417cd4
  417d26:	inc    ecx
  417d27:	push   esp
  417d28:	pop    edx
  417d29:	enter  0x3668,0x22
  417d2d:	cli    
  417d2e:	call   0x1977652d
  417d33:	jmp    0x417d56
  417d35:	sti    
  417d36:	es popf 
  417d38:	jg     0x417d73
  417d3a:	daa    
  417d3b:	shl    esi,1
  417d3d:	fld    QWORD PTR [ebx+edi*4]
  417d40:	mov    esp,0x45c2660e
  417d45:	jge    0x417dc2
  417d47:	dec    DWORD PTR [esi+0x135e0767]
  417d4d:	sub    esp,eax
  417d4f:	scas   eax,DWORD PTR es:[edi]
  417d50:	je     0x417d34
  417d52:	test   al,0xe8
  417d54:	call   0x277ff825
  417d59:	cmp    eax,0xb9c80802
  417d5e:	pop    ecx
  417d5f:	leave  
  417d60:	test   al,0x43
  417d62:	and    al,0x6d
  417d64:	js     0x417d7b
  417d66:	push   eax
  417d67:	cmp    esi,DWORD PTR [ebp-0x67270f36]
  417d6d:	js     0x417d15
  417d6f:	outs   dx,DWORD PTR ds:[esi]
  417d70:	push   0x2d
  417d72:	pop    edx
  417d73:	into   
  417d74:	inc    eax
  417d75:	add    dl,BYTE PTR [ecx-0x56]
  417d78:	sbb    DWORD PTR [eax-0x37ccb52f],ebp
  417d7e:	mov    ch,0x41
  417d80:	sub    esp,esp
  417d82:	pushf  
  417d83:	mov    al,ds:0xdd762c5b
  417d88:	mov    al,0xe3
  417d8a:	adc    eax,0x714f9e93
  417d8f:	lods   al,BYTE PTR ds:[esi]
  417d90:	mov    ah,0x66
  417d92:	scas   eax,DWORD PTR es:[edi]
  417d93:	sub    eax,0xa87ee8f2
  417d98:	jmp    0x2be2:0xcdd3b61a
  417d9f:	int    0x7d
  417da1:	test   al,0xe4
  417da3:	out    0x73,eax
  417da5:	mul    ch
  417da7:	pop    ebp
  417da8:	sub    bl,BYTE PTR [esi]
  417daa:	add    dh,dl
  417dac:	cmp    ah,BYTE PTR [edi-0x27e5a12a]
  417db2:	and    BYTE PTR [esp+esi*1-0x19],0x7c
  417db7:	bound  esp,QWORD PTR [ebp+0x1357638d]
  417dbd:	sbb    eax,0x18742f86
  417dc2:	outs   dx,BYTE PTR ds:[esi]
  417dc3:	jae    0x417dac
  417dc5:	jmp    0x417e2a
  417dc7:	pop    ds
  417dc8:	loop   0x417e01
  417dca:	jge    0x417dbe
  417dcc:	add    eax,esp
  417dce:	gs jae 0x417dad
  417dd1:	xor    BYTE PTR [edx],al
  417dd3:	dec    ebx
  417dd4:	loope  0x417e14
  417dd6:	jle    0x417dc7
  417dd8:	fs and al,0x7c
  417ddb:	mov    ds:0x943ecb74,al
  417de0:	psrad  mm1,QWORD PTR [esi-0x71811485]
  417de7:	mov    ebx,0x3b701298
  417dec:	adc    ah,dl
  417dee:	xchg   esp,eax
  417def:	or     ebx,DWORD PTR [ebp+0x79b4cce2]
  417df5:	jo     0x417e70
  417df7:	mov    esp,0xcafe25bc
  417dfc:	fmul   DWORD PTR [ebx+0x5d]
  417dff:	xor    al,0xf9
  417e01:	jb     0x417e00
  417e03:	sub    BYTE PTR [eax+0x1caf5b93],0x6e
  417e0a:	jb     0x417e0a
  417e0c:	jp     0x417e32
  417e0e:	adc    esp,DWORD PTR [ebp-0xf99e50c]
  417e14:	getsec 
  417e16:	add    bl,bh
  417e18:	out    0xfd,eax
  417e1a:	call   0xa1a4:0x2109ead2
  417e21:	mov    edx,0xd6a5db8e
  417e26:	adc    DWORD PTR [esp+ecx*4-0x34],eax
  417e2a:	test   BYTE PTR [esp+eax*1-0x716ac183],al
  417e31:	shr    BYTE PTR [edx+ecx*4-0x6d],cl
  417e35:	fild   WORD PTR [edi]
  417e37:	cdq    
  417e38:	(bad)
  417e3d:	jp     0x417e3b
  417e3f:	xchg   ecx,eax
  417e40:	mov    ds:0x86164625,al
  417e45:	jmp    0xa221:0x3b5f9231
  417e4c:	mov    esp,0xf76d3f83
  417e51:	imul   edx,DWORD PTR [ebx+0x66],0x4e
  417e55:	imul   eax,DWORD PTR [edi+0x2d],0x65f61cc1
  417e5c:	stos   DWORD PTR es:[edi],eax
  417e5d:	mov    eax,0x7c51d2e1
  417e62:	mov    esp,0xb7166557
  417e67:	adc    BYTE PTR [edx],bh
  417e69:	pop    ds
  417e6a:	xor    bl,BYTE PTR [esi+ebp*8-0x76dc60d]
  417e71:	fs loopne 0x417df9
  417e74:	lods   al,BYTE PTR ds:[esi]
  417e75:	xor    edi,DWORD PTR [ecx+edx*4]
  417e78:	push   cs
  417e79:	out    0x57,al
  417e7b:	add    DWORD PTR [edi],edx
  417e7d:	mov    esi,0xe26f0e2a
  417e82:	aas    
  417e83:	fwait
  417e84:	adc    BYTE PTR [eax+0x15b1456b],al
  417e8a:	rcr    BYTE PTR [ecx+0x50],0xef
  417e8e:	icebp  
  417e8f:	mov    cl,0x53
  417e91:	jl     0x417e71
  417e93:	jae    0x417ef6
  417e95:	js     0x417e37
  417e97:	sbb    edi,DWORD PTR [esi+0x7e9dba99]
  417e9d:	dec    DWORD PTR [ebp+0x6526652c]
  417ea3:	mov    ah,0x6
  417ea5:	jae    0x417f04
  417ea7:	push   ebp
  417ea8:	inc    ebp
  417ea9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417eaa:	mov    ah,0xa0
  417eac:	in     al,dx
  417ead:	js     0x417f01
  417eaf:	mov    dl,0xb
  417eb1:	mov    dl,0x53
  417eb3:	ficomp DWORD PTR [esi+0x26]
  417eb6:	push   ds
  417eb7:	fldcw  WORD PTR [ebx-0x662db6a5]
  417ebd:	inc    edi
  417ebe:	lea    ebx,[ebx-0x6d0d161e]
  417ec4:	aas    
  417ec5:	or     BYTE PTR [edx+edi*2],dh
  417ec8:	inc    esi
  417ec9:	ss mov ebp,0xb36037d1
  417ecf:	push   0xc
  417ed1:	call   0xcfd34bbc
  417ed6:	or     DWORD PTR [esi-0x31],esi
  417ed9:	dec    ecx
  417eda:	(bad)  
  417edb:	jmp    0xf2f95e7
  417ee0:	inc    esp
  417ee1:	sub    ah,BYTE PTR [eax+0x192dabc9]
  417ee7:	sub    eax,0x5871e8d4
  417eec:	dec    esi
  417eed:	adc    DWORD PTR [edx-0x160ef885],esi
  417ef3:	pop    ebx
  417ef4:	xchg   ebx,eax
  417ef5:	repz inc ecx
  417ef7:	mov    dl,0xfa
  417ef9:	js     0x417f31
  417efb:	sub    ch,ch
  417efd:	out    dx,eax
  417efe:	xchg   ecx,eax
  417eff:	test   DWORD PTR [edi-0x76],ebx
  417f02:	xchg   DWORD PTR [esi+0x5],eax
  417f05:	cmp    BYTE PTR [esi+0x72],ch
  417f08:	and    DWORD PTR [edx+0x2d8c3f20],eax
  417f0e:	call   0x431528cb
  417f13:	jno    0x417f34
  417f15:	cmp    DWORD PTR [esi+0x17],ecx
  417f18:	loop   0x417f64
  417f1a:	add    BYTE PTR ds:0xc74ca7b5,cl
  417f20:	imul   ebx,DWORD PTR [esi+0x2d],0x66
  417f24:	push   eax
  417f25:	push   cs
  417f26:	mov    ah,0x3b
  417f28:	fwait
  417f29:	ss (bad) 
  417f2b:	cld    
  417f2c:	mov    ebp,0x3d77a604
  417f31:	sti    
  417f32:	or     al,0x7
  417f34:	stc    
  417f35:	arpl   bp,di
  417f37:	rcr    DWORD PTR [edx+0x75af1c03],0xad
  417f3e:	xchg   ebp,eax
  417f3f:	cli    
  417f40:	fs xchg edx,eax
  417f42:	jns    0x417f45
  417f44:	shl    ecx,cl
  417f46:	sub    al,0x7f
  417f48:	inc    esi
  417f49:	sbb    esi,ebx
  417f4b:	or     DWORD PTR [eax+0x45],edi
  417f4e:	adc    eax,0x40f6af39
  417f53:	lods   eax,DWORD PTR ds:[esi]
  417f54:	enter  0xfefb,0xec
  417f58:	ret    
  417f59:	std    
  417f5a:	add    ch,BYTE PTR es:[edx-0x438630f9]
  417f61:	inc    esi
  417f62:	inc    edx
  417f63:	jecxz  0x417fa2
  417f65:	ja     0x417f1b
  417f67:	cmp    DWORD PTR [eax],0xffffffa0
  417f6a:	enter  0x749d,0x9e
  417f6e:	jge    0x417f4a
  417f70:	lahf   
  417f71:	js     0x417fed
  417f73:	(bad)  
  417f74:	scas   al,BYTE PTR es:[edi]
  417f75:	or     ebx,ecx
  417f77:	fmul   DWORD PTR [edi]
  417f79:	bound  esp,QWORD PTR [ebx]
  417f7b:	cdq    
  417f7c:	aas    
  417f7d:	imul   DWORD PTR [ebx-0x40]
  417f80:	jno    0x417fff
  417f82:	pop    ebp
  417f83:	xor    DWORD PTR [ebp+0xd],ebp
  417f86:	loop   0x417f97
  417f88:	outs   dx,DWORD PTR ds:[esi]
  417f89:	adc    eax,0x74c439ff
  417f8e:	xchg   ecx,eax
  417f8f:	clc    
  417f90:	mov    ebp,0x832e7479
  417f95:	outs   dx,DWORD PTR ds:[esi]
  417f96:	int    0xaa
  417f98:	xor    BYTE PTR [ebp+0xab73175],ah
  417f9e:	lods   al,BYTE PTR ds:[esi]
  417f9f:	push   ebp
  417fa0:	lahf   
  417fa1:	pop    ebx
  417fa2:	outs   dx,DWORD PTR ds:[esi]
  417fa3:	shl    bh,1
  417fa5:	sub    BYTE PTR [esi],bh
  417fa7:	lods   eax,DWORD PTR ds:[esi]
  417fa8:	and    ah,dh
  417faa:	pusha  
  417fab:	fdiv   DWORD PTR [edx]
  417fad:	into   
  417fae:	push   esp
  417faf:	fld    TBYTE PTR [esi-0x22]
  417fb2:	pop    ss
  417fb3:	mov    ebp,0x1b5f0f3b
  417fb8:	push   cs
  417fb9:	xchg   esp,eax
  417fba:	add    DWORD PTR [eax+0x20],eax
  417fbd:	aad    0xe0
  417fbf:	mov    edx,0x42c4c1a6
  417fc4:	or     ch,BYTE PTR [edx]
  417fc6:	mov    ss,WORD PTR [edi+0x56]
  417fc9:	xchg   BYTE PTR [esi],ch
  417fcb:	(bad)  
  417fcc:	inc    eax
  417fcd:	or     esi,0x74bc9eb6
  417fd3:	out    dx,al
  417fd4:	bound  edx,QWORD PTR [edx+0x5d03785]
  417fda:	sbb    al,0xed
  417fdc:	mov    BYTE PTR [esi],bh
  417fde:	dec    edx
  417fdf:	mov    esp,0x293d7bfd
  417fe4:	mov    ah,0xbf
  417fe6:	out    0x68,eax
  417fe8:	xor    al,0x7e
  417fea:	dec    ebp
  417feb:	jp     0x41806c
  417fed:	mov    eax,0xe2827a07
  417ff2:	mov    esp,0x7474aa65
  417ff8:	fild   WORD PTR [eax+0x30bbcaeb]
  417ffe:	bound  edx,QWORD PTR [ecx+0x34]
  418001:	enter  0x6982,0x3b
  418005:	repz scas al,BYTE PTR es:[edi]
  418007:	xor    bl,BYTE PTR [esi]
  418009:	pop    ebp
  41800a:	adc    ebx,DWORD PTR [ebp-0x55]
  41800d:	push   ebx
  41800e:	xchg   esi,eax
  41800f:	add    bh,BYTE PTR ds:0x45be3a82
  418015:	adc    ebx,DWORD PTR [esi+0x18274adb]
  41801b:	adc    eax,0xfa5cbb99
  418020:	test   al,0xf5
  418022:	(bad)  
  418023:	mov    ds:0x5ae802d0,eax
  418028:	mov    DWORD PTR [ecx-0x44],ebp
  41802b:	ror    DWORD PTR [esi+0x7a282add],cl
  418031:	pop    ss
  418032:	cld    
  418033:	neg    DWORD PTR [esi+0x6852e7ad]
  418039:	test   al,0xc6
  41803b:	sar    DWORD PTR [ebx-0x59b8841e],0x72
  418042:	mov    BYTE PTR [edx+0x75ab87dd],0xcf
  418049:	xor    dl,BYTE PTR [edi-0x1b]
  41804c:	add    al,0xb6
  41804e:	inc    esi
  41804f:	xchg   DWORD PTR [esi+0x1959fc4b],ebx
  418055:	rol    DWORD PTR [ebx+0x5c4a38c8],cl
  41805b:	mov    ebx,0xece6fba0
  418060:	inc    ebp
  418061:	xor    eax,0x65982524
  418066:	adc    BYTE PTR [eax-0x5c612753],dh
  41806c:	inc    bp
  41806e:	nop
  41806f:	ret    
  418070:	rcr    DWORD PTR ds:0xfcdfbd7e,0x49
  418077:	lock sub eax,0xfc941160
  41807d:	lock push eax
  41807f:	xor    bh,BYTE PTR [ebx+0x3b]
  418082:	xchg   eax,eax
  418084:	inc    esi
  418085:	mov    al,0xdf
  418087:	retf   
  418088:	mov    eax,ds:0x8f654aa7
  41808d:	scas   al,BYTE PTR es:[edi]
  41808e:	mov    ch,0xf3
  418090:	cmp    al,BYTE PTR [esi-0x6d]
  418093:	cld    
  418094:	dec    edx
  418095:	mov    WORD PTR [esi-0x60],ss
  418098:	inc    edx
  418099:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41809a:	push   ebx
  41809b:	xchg   edx,eax
  41809c:	sub    ecx,DWORD PTR [edx-0x2]
  41809f:	sbb    eax,0x44307356
  4180a4:	scas   al,BYTE PTR es:[edi]
  4180a5:	shl    ah,0x80
  4180a8:	out    dx,eax
  4180a9:	and    DWORD PTR [esi],esi
  4180ab:	xchg   ebx,eax
  4180ac:	xlat   BYTE PTR ds:[ebx]
  4180ad:	dec    ebp
  4180ae:	(bad)  
  4180af:	cmc    
  4180b0:	push   edi
  4180b1:	call   0xdaedb874
  4180b6:	pusha  
  4180b7:	sub    cl,BYTE PTR [eax]
  4180b9:	loope  0x4180ff
  4180bb:	addr16 in al,0xa5
  4180be:	ja     0x4180c9
  4180c0:	xchg   edx,eax
  4180c1:	inc    eax
  4180c2:	test   eax,0x9ab87990
  4180c7:	xor    DWORD PTR [eax-0x6e],edx
  4180ca:	push   cs
  4180cb:	cmp    esi,DWORD PTR [ecx]
  4180cd:	pop    ebp
  4180ce:	in     eax,dx
  4180cf:	jg     0x41811a
  4180d1:	jmp    0x643d:0x3ffeedc6
  4180d8:	test   BYTE PTR ds:0xfbda49f0,cl
  4180de:	jo     0x4180b0
  4180e0:	xor    dh,BYTE PTR [esi]
  4180e2:	in     al,0xf
  4180e4:	call   0xe2b2d807
  4180e9:	dec    ebx
  4180ea:	pusha  
  4180eb:	hlt    
  4180ec:	cli    
  4180ed:	lock cmc 
  4180ef:	and    ebx,DWORD PTR [edi]
  4180f1:	dec    ecx
  4180f2:	or     eax,0x9b27678f
  4180f7:	cmp    al,0x77
  4180f9:	imul   ebp,DWORD PTR [edi-0x62],0xffffffd4
  4180fd:	add    eax,0x53e9020d
  418102:	(bad)  
  418103:	mov    dl,0xf5
  418105:	int3   
  418106:	ins    BYTE PTR es:[edi],dx
  418107:	scas   eax,DWORD PTR es:[edi]
  418108:	pop    eax
  418109:	mov    WORD PTR [edx+esi*4+0x4013b750],ds
  418110:	call   0x33f3:0xd1e6a6c
  418117:	fild   WORD PTR [ecx+0x70]
  41811a:	inc    eax
  41811b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41811c:	cmp    eax,0x516bf5e6
  418121:	test   eax,0x6cca8727
  418126:	xchg   ebp,eax
  418127:	mov    edx,0xeb16be02
  41812c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41812d:	in     al,0xf4
  41812f:	or     eax,0x54fcf48c
  418134:	inc    ebp
  418135:	xchg   DWORD PTR [ebp+0x187e10a7],edx
  41813b:	dec    edx
  41813c:	mov    ds:0xecbfdd81,eax
  418141:	mov    bl,BYTE PTR [edx-0x46]
  418144:	pop    ebp
  418145:	xor    al,0xf3
  418147:	sbb    DWORD PTR [edx],0xfffffffb
  41814a:	repz enter 0x53c3,0xac
  41814f:	and    eax,0x437aa6f0
  418154:	popa   
  418155:	sub    ebp,eax
  418157:	pusha  
  418158:	(bad)  
  418159:	mov    esp,esi
  41815b:	jmp    0x4180ef
  41815d:	out    0xa2,al
  41815f:	shr    BYTE PTR [esi+0x7667c337],cl
  418165:	sti    
  418166:	into   
  418167:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418168:	icebp  
  418169:	cdq    
  41816a:	xchg   ecx,eax
  41816b:	mov    edx,DWORD PTR [ebx-0x6f]
  41816e:	ss and eax,0x954f6b47
  418174:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418175:	xchg   esi,eax
  418176:	retf   
  418177:	pop    edi
  418178:	inc    ebp
  418179:	fsubr  QWORD PTR [ecx]
  41817b:	jl     0x4181a1
  41817d:	call   0x73c2:0xf73f0dbe
  418184:	jmp    0x4710467c
  418189:	cmp    ebp,DWORD PTR [ecx]
  41818b:	addr16 cmp al,0x24
  41818e:	jnp    0x4181d2
  418190:	cmp    al,0xef
  418192:	enter  0xbc51,0x7f
  418196:	icebp  
  418197:	out    0x7b,eax
  418199:	cmp    edi,esp
  41819b:	jnp    0x418157
  41819d:	cmp    ebp,DWORD PTR [ecx+0x201e7dc5]
  4181a3:	leave  
  4181a4:	iret   
  4181a5:	lahf   
  4181a6:	cmc    
  4181a7:	inc    ebp
  4181a8:	pop    ss
  4181a9:	xlat   BYTE PTR ds:[ebx]
  4181aa:	xor    al,0x50
  4181ac:	mov    eax,0x853ca359
  4181b1:	(bad)  
  4181b3:	xor    BYTE PTR [eax],ah
  4181b5:	(bad)  
  4181b6:	mov    ch,0xf2
  4181b8:	js     0x418153
  4181ba:	popa   
  4181bb:	test   BYTE PTR [edi-0x1de3bebe],al
  4181c1:	loopne 0x41815d
  4181c3:	aad    0x63
  4181c5:	push   0x13
  4181c7:	adc    eax,0xc3ca0e69
  4181cc:	xor    eax,0x92ff701d
  4181d1:	sbb    cl,al
  4181d3:	std    
  4181d4:	mov    ds:0x960b24f0,al
  4181d9:	dec    ecx
  4181da:	or     edi,DWORD PTR [ebp+0x78eee214]
  4181e0:	and    eax,0x94d4edc6
  4181e5:	and    BYTE PTR [edx+ebx*8-0x3b0eb562],bl
  4181ec:	xchg   ebp,eax
  4181ed:	je     0x418247
  4181ef:	jo     0x4181b2
  4181f1:	xlat   BYTE PTR ds:[ebx]
  4181f2:	push   ebx
  4181f3:	pop    esi
  4181f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4181f5:	fcomip st,st(7)
  4181f7:	int3   
  4181f8:	adc    al,BYTE PTR [edx]
  4181fa:	iret   
  4181fb:	sub    DWORD PTR [esi],0x1d
  4181fe:	les    di,DWORD PTR [esi-0x6]
  418202:	mov    ah,bh
  418204:	pop    eax
  418205:	pusha  
  418206:	mov    bh,0x8d
  418208:	stos   DWORD PTR es:[edi],eax
  418209:	test   edi,ecx
  41820b:	and    DWORD PTR [edi+0x616f574e],ebx
  418211:	in     al,dx
  418212:	push   esi
  418213:	pop    esp
  418214:	and    eax,DWORD PTR [ebx-0x10]
  418217:	repz bound edi,QWORD PTR [ebx+0x75]
  41821b:	jmp    0x4181d2
  41821d:	cmp    al,0x2b
  41821f:	cwde   
  418220:	ja     0x4181c0
  418222:	jmp    0xe9a:0x618098f7
  418229:	ds push 0xa58520b9
  41822f:	push   0xecb38d43
  418234:	or     eax,DWORD PTR [edi]
  418236:	jne    0x4182a7
  418238:	sbb    eax,ecx
  41823a:	jns    0x418205
  41823c:	adc    BYTE PTR [ebx],ah
  41823e:	mov    dh,0x46
  418240:	jb     0x41824a
  418242:	xor    eax,0xcffd2638
  418247:	jns    0x418224
  418249:	inc    ah
  41824b:	pop    ecx
  41824c:	(bad)  
  41824d:	sbb    BYTE PTR [edx+0x32d9bae8],ah
  418253:	push   es
  418254:	dec    ebp
  418255:	dec    esi
  418256:	inc    eax
  418257:	pop    es
  418258:	mov    WORD PTR [edx],cs
  41825a:	popf   
  41825b:	loope  0x4182c1
  41825d:	aam    0x43
  41825f:	popa   
  418260:	mov    bh,0x74
  418262:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418263:	push   ebp
  418264:	loopne 0x418279
  418266:	mov    ecx,0x79a9ccb0
  41826b:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  41826d:	lock mov al,0xe4
  418270:	mov    bh,0x42
  418272:	fadd   QWORD PTR [eax+ebx*1-0x68]
  418276:	mul    BYTE PTR [ebx]
  418278:	cmp    esp,DWORD PTR [esi-0x5e976ab9]
  41827e:	push   es
  41827f:	out    0x5,eax
  418281:	dec    eax
  418282:	or     DWORD PTR [eax],0x17
  418285:	out    dx,eax
  418286:	into   
  418287:	les    ecx,FWORD PTR [ebx-0x57]
  41828a:	push   esp
  41828b:	adc    eax,ecx
  41828d:	sbb    dl,0x82
  418290:	pop    ss
  418291:	cdq    
  418292:	or     al,0xa4
  418294:	arpl   si,di
  418296:	sub    al,0x3d
  418298:	scas   eax,DWORD PTR es:[edi]
  418299:	pop    eax
  41829a:	xchg   esi,eax
  41829b:	mov    edi,DWORD PTR [esi]
  41829d:	stos   DWORD PTR es:[edi],eax
  41829e:	pop    esi
  41829f:	cwde   
  4182a0:	shl    BYTE PTR [ecx+0x1f],cl
  4182a3:	das    
  4182a4:	mov    ebp,0xacafdc43
  4182a9:	call   0x7f1f:0x1e1cbc8b
  4182b0:	std    
  4182b1:	outs   dx,BYTE PTR ds:[esi]
  4182b2:	ret    0xfa4e
  4182b5:	mov    WORD PTR [ebp+ecx*2-0x65350788],ds
  4182bc:	or     eax,0xa42c876
  4182c1:	mov    bh,0x67
  4182c3:	add    al,0xb3
  4182c5:	mov    dh,BYTE PTR [ecx+0x60c9eec6]
  4182cb:	rcr    DWORD PTR [ebx+0x38],1
  4182ce:	cmc    
  4182cf:	ins    DWORD PTR es:[edi],dx
  4182d0:	and    al,BYTE PTR [ebp-0x44]
  4182d3:	aad    0xc2
  4182d5:	jno    0x418259
  4182d7:	cmp    BYTE PTR [edx+0x1cfa1557],bh
  4182dd:	ds push edi
  4182df:	(bad)  
  4182e0:	in     eax,dx
  4182e1:	test   al,0xaa
  4182e3:	aaa    
  4182e4:	(bad)  
  4182e5:	into   
  4182e6:	dec    esp
  4182e7:	ret    0xcc0
  4182ea:	mov    eax,ds:0x34a77927
  4182ef:	push   edx
  4182f0:	sbb    DWORD PTR es:[ecx],edi
  4182f3:	ret    
  4182f4:	or     dl,BYTE PTR [eax-0x6b]
  4182f7:	adc    al,0xe4
  4182f9:	sbb    DWORD PTR [edx-0x41],ebp
  4182fc:	(bad)  
  4182fd:	rol    DWORD PTR [ebx+0x4d862d36],cl
  418303:	and    al,dl
  418305:	push   es
  418306:	mov    dh,BYTE PTR [edx+0x72]
  418309:	xchg   esi,eax
  41830a:	stc    
  41830b:	mov    al,0xb6
  41830d:	out    dx,al
  41830e:	inc    edi
  41830f:	arpl   WORD PTR [eax-0x636ff3c2],ax
  418315:	pushf  
  418316:	ss fs cs cmc 
  41831a:	mov    bh,0xd
  41831c:	xor    DWORD PTR [edi+0x53],esp
  41831f:	mov    BYTE PTR [eax+0x5d8f429f],cl
  418325:	sub    edx,0x2c
  418328:	rcr    BYTE PTR [edx],1
  41832a:	arpl   dx,cx
  41832c:	and    eax,0x2e366f73
  418331:	mov    esi,0x56a3b1a2
  418336:	xor    dh,bl
  418338:	xchg   edx,eax
  418339:	jle    0x418386
  41833b:	and    BYTE PTR [ebp+0x4f56183b],0x3a
  418342:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418343:	popa   
  418344:	and    al,0x48
  418346:	aas    
  418347:	mov    esi,0xde180ab2
  41834c:	cs xor eax,0xeb5bc414
  418352:	adc    BYTE PTR [edi+ebp*8+0x15],0x43
  418357:	in     al,0x0
  418359:	call   0x4a07:0x5764dbbd
  418360:	jne    0x418345
  418362:	aad    0x3f
  418364:	and    bh,BYTE PTR [ecx]
  418366:	sbb    esp,ecx
  418368:	fisttp QWORD PTR [esi-0x2f6ffccf]
  41836e:	and    ebp,0x1e
  418371:	cld    
  418372:	into   
  418373:	jmp    0x8b51:0xccb3d30d
  41837a:	aad    0xf9
  41837c:	adc    DWORD PTR [edi-0x6c],ecx
  41837f:	scas   eax,DWORD PTR es:[edi]
  418380:	loopne 0x418336
  418382:	push   ebp
  418383:	jb     0x41837f
  418385:	jmp    0xa041:0x25500e4
  41838c:	mov    esp,0xc0ca7d9b
  418391:	loope  0x418313
  418393:	add    dl,ah
  418395:	sahf   
  418396:	and    eax,0xec3868ab
  41839b:	ins    BYTE PTR es:[edi],dx
  41839c:	sub    eax,0xdb686dbb
  4183a1:	push   0xa78613a9
  4183a6:	mov    BYTE PTR [ecx],bl
  4183a8:	cmp    BYTE PTR [edx-0x47],0x92
  4183ac:	mov    ebp,0x2388a24c
  4183b1:	jo     0x4183e9
  4183b3:	scas   eax,DWORD PTR es:[edi]
  4183b4:	mov    dl,0x30
  4183b6:	push   ebx
  4183b7:	sahf   
  4183b8:	inc    esp
  4183b9:	sbb    esp,DWORD PTR [ecx]
  4183bb:	xchg   esp,eax
  4183bc:	jns    0x4183c1
  4183be:	imul   eax,DWORD PTR [eax-0x57],0x47
  4183c2:	push   ss
  4183c3:	loop   0x418359
  4183c5:	jne    0x4183af
  4183c7:	sub    eax,0x43ffe547
  4183cc:	or     ebx,ebp
  4183ce:	loop   0x4183f3
  4183d0:	int    0xb1
  4183d2:	nop
  4183d3:	or     eax,0x8e30ec1
  4183d8:	mov    ch,0xff
  4183da:	cmp    ebx,DWORD PTR [eax]
  4183dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4183dd:	push   ebx
  4183de:	stos   DWORD PTR es:[edi],eax
  4183df:	xchg   esp,eax
  4183e0:	jge    0x4183af
  4183e2:	mov    cl,0x3b
  4183e4:	gs (bad) 
  4183e6:	icebp  
  4183e7:	dec    eax
  4183e8:	xor    al,0x79
  4183ea:	xor    esi,DWORD PTR [ecx]
  4183ec:	out    dx,eax
  4183ed:	jg     0x418450
  4183ef:	daa    
  4183f0:	sub    eax,0xc682d666
  4183f5:	mov    edi,0x179264ad
  4183fa:	mov    al,ds:0x5755890c
  4183ff:	mov    ecx,0xb6640292
  418404:	out    0xdb,eax
  418406:	retf   0xfb8d
  418409:	repz leave 
  41840b:	xchg   ecx,eax
  41840c:	xchg   ecx,eax
  41840d:	xor    WORD PTR [esi+0x7c],cx
  418411:	jne    0x418468
  418413:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418414:	pop    ecx
  418415:	cli    
  418416:	add    ebx,DWORD PTR [edx]
  418418:	(bad)  
  418419:	aaa    
  41841a:	dec    esi
  41841b:	loop   0x4183a1
  41841d:	mul    BYTE PTR [ebp+0x1f]
  418420:	shr    ecx,0x75
  418423:	das    
  418424:	cmp    DWORD PTR [edi],ecx
  418426:	(bad)  
  418427:	sar    DWORD PTR [ecx-0x480bcb28],cl
  41842d:	(bad)
  418432:	mov    ch,al
  418434:	push   esi
  418435:	pop    esi
  418436:	xor    eax,0x66e537ab
  41843b:	data16 js 0x418420
  41843e:	jl     0x418445
  418440:	pop    esi
  418441:	pop    eax
  418442:	(bad)  
  418443:	xchg   ebp,eax
  418444:	jne    0x41844e
  418446:	cmp    DWORD PTR [ebp+0x56938834],ecx
  41844c:	adc    eax,ebp
  41844e:	rep outs dx,DWORD PTR ds:[esi]
  418450:	ror    edx,cl
  418452:	push   ecx
  418453:	pop    es
  418454:	lds    ebx,FWORD PTR [ebx+0x32]
  418457:	push   0xffffff94
  418459:	test   bl,ch
  41845b:	lods   al,BYTE PTR ds:[esi]
  41845c:	add    BYTE PTR ds:[ebx],dh
  41845f:	bound  eax,QWORD PTR [ebx+0x68]
  418462:	out    0x38,al
  418464:	imul   esi,DWORD PTR [edi],0xffffffcb
  418467:	(bad)  
  418468:	stos   DWORD PTR es:[edi],eax
  418469:	imul   ecx,DWORD PTR [ecx],0x6d
  41846c:	loope  0x418445
  41846e:	outs   dx,DWORD PTR ds:[esi]
  41846f:	out    0x95,eax
  418471:	sub    ah,bl
  418473:	dec    eax
  418474:	scas   eax,DWORD PTR es:[edi]
  418475:	fisttp QWORD PTR [edx-0x3c]
  418478:	cwde   
  418479:	cli    
  41847a:	mov    ds:0x788287c0,al
  41847f:	sbb    al,0xe6
  418481:	mov    ebp,0xee692e7e
  418486:	ds je  0x418499
  418489:	nop
  41848a:	cs stos DWORD PTR es:[edi],eax
  41848c:	mov    edx,0x53ea15b5
  418491:	mov    ecx,0xef0f474e
  418496:	aaa    
  418497:	add    BYTE PTR [eax+0x526af270],dl
  41849d:	xchg   esp,eax
  41849e:	pop    ebx
  41849f:	push   es
  4184a0:	and    ecx,ebx
  4184a2:	ins    DWORD PTR es:[edi],dx
  4184a3:	mov    ebp,0x5d4df5a0
  4184a8:	vmwrite esi,DWORD PTR [ebp+0x4293b901]
  4184af:	mov    BYTE PTR [eax+ecx*2],dh
  4184b2:	cdq    
  4184b3:	not    DWORD PTR [esi]
  4184b5:	icebp  
  4184b6:	stos   BYTE PTR es:[edi],al
  4184b7:	lea    edi,[eax+0x2c]
  4184ba:	ret    0x9dcb
  4184bd:	sub    ecx,DWORD PTR [edi+0x54f69d53]
  4184c3:	mov    esp,0x51b8fc15
  4184c8:	int    0xfd
  4184ca:	jns    0x418461
  4184cc:	or     eax,0x510b3d3
  4184d1:	push   es
  4184d2:	lods   eax,DWORD PTR ds:[esi]
  4184d3:	or     edx,DWORD PTR [edx-0x4a]
  4184d6:	pop    edx
  4184d7:	hlt    
  4184d8:	pop    dx
  4184da:	loope  0x418544
  4184dc:	mov    ds:0x519b7937,eax
  4184e1:	std    
  4184e2:	loopne 0x418540
  4184e4:	pop    edx
  4184e5:	inc    esp
  4184e6:	push   ds
  4184e7:	xor    dl,BYTE PTR [edx-0x9]
  4184ea:	or     dh,BYTE PTR [edx+ebp*4+0x15eb17ea]
  4184f1:	int    0x30
  4184f3:	in     eax,dx
  4184f4:	mov    eax,0x7613f75a
  4184f9:	outs   dx,BYTE PTR ds:[esi]
  4184fa:	jmp    DWORD PTR [edi-0x3c94dd47]
  418500:	and    ebp,edi
  418502:	popf   
  418503:	mov    ah,0x61
  418505:	and    ecx,DWORD PTR [edx]
  418507:	js     0x418540
  418509:	loope  0x418493
  41850b:	jl     0x4184de
  41850d:	mov    dl,BYTE PTR [edi]
  41850f:	push   esp
  418510:	push   0x47
  418512:	out    dx,al
  418513:	add    al,BYTE PTR gs:[ebx-0x411a11c]
  41851a:	aaa    
  41851b:	fisttp DWORD PTR [esi-0x59]
  41851e:	ja     0x418591
  418520:	pop    es
  418521:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418522:	repz cwde 
  418524:	xor    DWORD PTR [esi],ecx
  418526:	and    ecx,DWORD PTR [edx-0x61]
  418529:	lds    esp,FWORD PTR ss:[edi+0x3d1cfd37]
  418530:	cmp    al,0x53
  418532:	shl    ebp,0xc0
  418535:	lahf   
  418536:	pusha  
  418537:	mov    ecx,0x6553a867
  41853c:	sub    edi,DWORD PTR [esi]
  41853e:	add    al,bl
  418540:	add    al,0x22
  418542:	push   edx
  418543:	adc    esp,ecx
  418545:	sbb    al,0xe5
  418547:	sbb    DWORD PTR [ebx-0x7f],0xffffff94
  41854b:	and    esi,DWORD PTR [esi+0x1a3d05e]
  418551:	je     0x418576
  418553:	jne    0x4184e2
  418555:	mov    dl,0x4f
  418557:	mov    eax,0x2d326356
  41855c:	shl    ecx,1
  41855e:	rcl    BYTE PTR [ecx+0x4e9ac8b6],0x66
  418565:	push   edi
  418566:	mov    al,ds:0xad7d57e8
  41856b:	pop    esi
  41856c:	or     edx,DWORD PTR [esi+0x3226cfc0]
  418572:	aad    0x3d
  418574:	jmp    0x4185a6
  418576:	repnz pop ecx
  418578:	xchg   esp,ebx
  41857a:	ins    BYTE PTR es:[edi],dx
  41857b:	or     edx,ebx
  41857d:	mov    eax,0xb003fe3a
  418582:	and    bl,BYTE PTR [edx-0x69]
  418585:	inc    ebp
  418586:	and    DWORD PTR [ebx],ecx
  418588:	push   ebx
  418589:	pop    es
  41858a:	mov    ebp,0x1b83035f
  41858f:	and    BYTE PTR [esi-0x67],ch
  418592:	xor    eax,0xb98dc3ef
  418597:	jns    0x4185af
  418599:	lock lods eax,DWORD PTR ds:[esi]
  41859b:	push   ss
  41859c:	cdq    
  41859d:	jbe    0x418522
  41859f:	rcl    BYTE PTR [ecx+0x62],cl
  4185a2:	shl    ah,0x33
  4185a5:	mov    esp,0x9d19f8b3
  4185aa:	les    esp,FWORD PTR [esi]
  4185ac:	dec    esp
  4185ad:	add    DWORD PTR [esi],ecx
  4185af:	push   ebp
  4185b0:	fild   DWORD PTR [edx+0x11]
  4185b3:	aam    0xbd
  4185b5:	cmc    
  4185b6:	aaa    
  4185b7:	pop    ebx
  4185b8:	or     ebx,esp
  4185ba:	test   DWORD PTR [ebx],eax
  4185bc:	lea    eax,[ecx-0x7620cd8e]
  4185c2:	add    ah,BYTE PTR [ecx+esi*1]
  4185c5:	std    
  4185c6:	lea    edi,[ecx+0x4e0767e4]
  4185cc:	jmp    0xdcaf:0xbe7f1036
  4185d3:	cmp    bl,BYTE PTR [edx*1-0x407f04d3]
  4185da:	outs   dx,DWORD PTR ds:[esi]
  4185db:	cmp    bh,0xb2
  4185de:	sbb    cl,ah
  4185e0:	ds jbe 0x418629
  4185e3:	sahf   
  4185e4:	xor    BYTE PTR [eax-0x5d],al
  4185e7:	iret   
  4185e8:	pop    ds
  4185e9:	es xchg al,al
  4185ec:	in     al,0x9a
  4185ee:	cmove  edi,esp
  4185f1:	addr16 push edx
  4185f3:	scas   al,BYTE PTR es:[edi]
  4185f4:	inc    esi
  4185f5:	cld    
  4185f6:	push   esp
  4185f7:	xor    eax,0xa3d1d74f
  4185fc:	fistp  QWORD PTR [eax-0x6c]
  4185ff:	jge    0x41861c
  418601:	mov    eax,ds:0xbb3904f0
  418606:	mov    bh,0x66
  418608:	inc    esi
  418609:	and    DWORD PTR [ebp+0x441585ef],ebx
  41860f:	test   DWORD PTR [eax],edx
  418611:	sub    ebx,ecx
  418613:	neg    BYTE PTR [ecx+ebp*4]
  418616:	push   edx
  418617:	xor    BYTE PTR [eax-0x5a],cl
  41861a:	pop    edi
  41861b:	gs xchg esp,eax
  41861d:	iret   
  41861e:	xchg   edx,eax
  41861f:	popa   
  418620:	add    cl,BYTE PTR [ecx-0x642cbc84]
  418626:	(bad)  
  418627:	jae    0x418684
  418629:	inc    edi
  41862a:	jmp    0x4185c9
  41862c:	scas   eax,DWORD PTR es:[edi]
  41862d:	ja     0x418692
  41862f:	jl     0x4185c3
  418631:	pushf  
  418632:	fmul   QWORD PTR [ecx+ecx*1+0x43143bb5]
  418639:	jns    0x418632
  41863b:	not    BYTE PTR [edi+eiz*4]
  41863e:	cmp    al,0x45
  418640:	cs retf 
  418642:	rcr    DWORD PTR [ecx+0x1d],cl
  418645:	adc    edx,DWORD PTR [edx+0x49]
  418648:	add    BYTE PTR [esi],0xbd
  41864b:	push   0x7c
  41864d:	jno    0x418616
  41864f:	adc    ch,dh
  418651:	stos   DWORD PTR es:[edi],eax
  418652:	retw   
  418654:	scas   eax,DWORD PTR es:[edi]
  418655:	jle    0x41860a
  418657:	scas   al,BYTE PTR es:[edi]
  418658:	add    al,0x20
  41865a:	dec    ecx
  41865b:	ss inc eax
  41865d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41865e:	ss test bh,dh
  418661:	repnz in eax,0xec
  418664:	mov    ebx,0xd3a03c15
  418669:	mov    esp,ds
  41866b:	out    0x83,al
  41866d:	sub    DWORD PTR [eax],0xfffffffd
  418670:	(bad)  
  418671:	stc    
  418672:	adc    al,BYTE PTR [ecx-0x38f4128]
  418678:	loope  0x41865f
  41867a:	inc    BYTE PTR [edx+0x2a]
  41867d:	data16 cld 
  41867f:	jns    0x418620
  418681:	or     esp,DWORD PTR [esi]
  418683:	ins    DWORD PTR es:[edi],dx
  418684:	fisubr WORD PTR [eax]
  418686:	adc    BYTE PTR [ecx-0x14],dl
  418689:	fdivr  DWORD PTR [edx+0x27]
  41868c:	xlat   BYTE PTR ds:[ebx]
  41868d:	cmp    dh,BYTE PTR [esi+0x15]
  418690:	inc    edx
  418691:	jae    0x4186a9
  418693:	iret   
  418694:	jb     0x418653
  418696:	pushf  
  418697:	xor    ecx,DWORD PTR [ebx]
  418699:	cdq    
  41869a:	in     al,0xdd
  41869c:	push   cs
  41869d:	adc    BYTE PTR [ebp+0x2cbf8953],bh
  4186a3:	push   es
  4186a4:	sbb    eax,0x17f0461d
  4186a9:	ret    
  4186aa:	adc    edx,esi
  4186ac:	mov    dl,0x96
  4186ae:	rol    bh,0x67
  4186b1:	pusha  
  4186b2:	ja     0x418717
  4186b4:	add    bh,BYTE PTR [eax+0xe1a7336]
  4186ba:	scas   eax,DWORD PTR es:[edi]
  4186bb:	mov    eax,ds:0x181948a5
  4186c0:	test   DWORD PTR [edi-0x5fd3c9c3],eax
  4186c6:	dec    ebp
  4186c7:	pop    ebp
  4186c8:	cwde   
  4186c9:	push   ss
  4186ca:	dec    ecx
  4186cb:	fsubr  QWORD PTR [ebp-0x28]
  4186ce:	outs   dx,DWORD PTR ds:[esi]
  4186cf:	push   edx
  4186d0:	scas   eax,DWORD PTR es:[edi]
  4186d1:	inc    eax
  4186d2:	enter  0xd88,0x14
  4186d6:	stos   BYTE PTR es:[edi],al
  4186d7:	gs iret 
  4186d9:	aam    0x5f
  4186db:	inc    esp
  4186dc:	loopne 0x418735
  4186de:	es cmp al,bl
  4186e1:	cdq    
  4186e2:	mov    bh,BYTE PTR [ecx]
  4186e4:	es stc 
  4186e6:	xchg   DWORD PTR [ecx+0x24adffc3],edi
  4186ec:	fwait
  4186ed:	xchg   ebp,eax
  4186ee:	hlt    
  4186ef:	jecxz  0x418748
  4186f1:	jno    0x4186bd
  4186f3:	fadd   DWORD PTR [esi+ebx*4-0x278d9d9b]
  4186fa:	push   ds
  4186fb:	mov    edi,0x8b7e1531
  418700:	mov    al,0xae
  418702:	ret    0x1239
  418705:	repz adc ah,al
  418708:	cmp    eax,0x2e414afa
  41870d:	shr    BYTE PTR [edi-0x5],1
  418710:	aaa    
  418711:	xchg   ebx,eax
  418712:	jmp    0x41873a
  418714:	jmp    0x1824:0x7dbde711
  41871b:	aad    0x4b
  41871d:	out    0x82,eax
  41871f:	cmc    
  418720:	sbb    al,BYTE PTR [ebp+0x42]
  418723:	adc    BYTE PTR [ecx],dl
  418725:	jno    0x4186e3
  418727:	push   ss
  418728:	int3   
  418729:	rcl    DWORD PTR [esi+0x51],cl
  41872c:	pop    eax
  41872d:	aas    
  41872e:	mov    ds:0xd3e6e383,al
  418733:	clc    
  418734:	icebp  
  418735:	add    al,0x63
  418737:	pinsrw mm6,WORD PTR [ecx],0x51
  41873b:	pop    ss
  41873c:	cmp    dl,BYTE PTR [edi+0x51a316fa]
  418742:	cmp    al,0x1e
  418744:	jo     0x4187bb
  418746:	jns    0x41872f
  418748:	add    DWORD PTR [ebp+0x615da26b],ebx
  41874e:	mov    dl,0xa4
  418750:	inc    DWORD PTR [edx+0x12]
  418753:	bound  edi,QWORD PTR [esi-0x630337d3]
  418759:	icebp  
  41875a:	sub    cl,ch
  41875c:	add    edi,DWORD PTR [esi+0x4efc3aee]
  418762:	jl     0x418718
  418764:	inc    edx
  418765:	shl    DWORD PTR [esi-0x77],cl
  418768:	jnp    0x4187a9
  41876a:	and    al,0x4c
  41876c:	cld    
  41876d:	pop    esp
  41876e:	inc    ecx
  41876f:	cmp    dl,BYTE PTR [esi-0xf5c9dde]
  418775:	mov    BYTE PTR [ecx+0x3110f19f],dl
  41877b:	aas    
  41877c:	push   ss
  41877d:	mov    esp,0x3ba2a02f
  418782:	dec    ebx
  418783:	and    al,BYTE PTR [ebp+0x7c]
  418786:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418787:	jg     0x418731
  418789:	mov    al,0xdb
  41878b:	xchg   ebx,eax
  41878c:	mov    al,0x92
  41878e:	cmp    edi,DWORD PTR [ebx]
  418790:	and    DWORD PTR [eax+0x56338c98],0xc64b401
  41879a:	mov    al,0xe4
  41879c:	int    0xd3
  41879e:	and    ch,dh
  4187a0:	cmp    cl,BYTE PTR [edx-0xc51e80f]
  4187a6:	retf   
  4187a7:	fnstcw WORD PTR [edi]
  4187a9:	stos   DWORD PTR es:[edi],eax
  4187aa:	in     al,dx
  4187ab:	pop    es
  4187ac:	arpl   WORD PTR [edx],cx
  4187ae:	out    0xa0,al
  4187b0:	test   BYTE PTR [edx+0x7aa672a3],ch
  4187b6:	pusha  
  4187b7:	xor    DWORD PTR [edx+0x77],ebx
  4187ba:	adc    eax,DWORD PTR [ebx+0x64]
  4187bd:	jno    0x418816
  4187bf:	inc    edi
  4187c0:	fwait
  4187c1:	into   
  4187c2:	outs   dx,DWORD PTR ds:[esi]
  4187c3:	and    al,BYTE PTR [esi]
  4187c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4187c6:	mov    dl,0xe4
  4187c8:	pop    ebx
  4187c9:	jnp    0x418760
  4187cb:	adc    ebp,DWORD PTR [esi-0x3bc3c4fa]
  4187d1:	(bad)  
  4187d2:	icebp  
  4187d3:	jge    0x41876d
  4187d5:	cld    
  4187d6:	cli    
  4187d7:	inc    edi
  4187d8:	sub    DWORD PTR [esi],ecx
  4187da:	jle    0x4187ae
  4187dc:	adc    edx,DWORD PTR [ecx]
  4187de:	mov    bl,0x6
  4187e0:	mov    esi,esi
  4187e2:	fwait
  4187e3:	sub    dh,al
  4187e5:	or     dh,ah
  4187e7:	shr    DWORD PTR ds:0xc6609845,0x5b
  4187ee:	add    bl,BYTE PTR [edx]
  4187f0:	jge    0x4187c7
  4187f2:	jmp    0xb8f:0xec590f91
  4187f9:	jmp    0xe644:0xfa62a230
  418800:	(bad)  
  418801:	xchg   esp,eax
  418802:	adc    esi,DWORD PTR [eax]
  418804:	push   edi
  418805:	mov    al,ds:0xbdd8b96f
  41880a:	inc    eax
  41880b:	push   esi
  41880c:	mov    ds:0x668785b4,eax
  418811:	sub    BYTE PTR [ebp-0x35fb17f],ah
  418817:	mov    ah,0x78
  418819:	and    edi,DWORD PTR [ecx+esi*4+0x3e7f8d94]
  418820:	iret   
  418821:	(bad)  
  418822:	mov    edi,0x57b747dc
  418827:	pop    es
  418828:	sbb    BYTE PTR [esi],bh
  41882a:	loop   0x418817
  41882c:	sub    eax,0x62d909fb
  418831:	sbb    eax,0xf52bf987
  418836:	add    esi,eax
  418838:	mov    eax,0x1a7e841e
  41883d:	cwde   
  41883e:	lea    ecx,[ebp+0x722c3b71]
  418844:	sub    BYTE PTR [eax-0x28],bl
  418847:	int    0x17
  418849:	ret    0x2a29
  41884c:	(bad)  
  41884d:	jmp    0x5a7b5a7e
  418852:	rcr    BYTE PTR ds:0x7a3234d8,1
  418858:	mov    DWORD PTR [ebp+eax*2+0x6e],edx
  41885c:	push   ebx
  41885d:	mov    al,0xc9
  41885f:	push   ebx
  418860:	out    0x67,eax
  418862:	es in  eax,0x2
  418865:	test   eax,0xdff154c7
  41886a:	in     al,dx
  41886b:	lds    esp,FWORD PTR [edi+edx*1]
  41886e:	cmp    esi,esp
  418870:	stos   DWORD PTR es:[edi],eax
  418871:	clc    
  418872:	test   eax,0xd6742f5f
  418877:	mov    ecx,0xc1e95bda
  41887c:	stc    
  41887d:	and    ecx,DWORD PTR es:[eax]
  418880:	ins    BYTE PTR es:[edi],dx
  418881:	dec    ebx
  418882:	or     eax,DWORD PTR [edi-0x38]
  418885:	push   es
  418886:	pop    ebx
  418887:	in     al,0x21
  418889:	mov    esi,0x3056ee39
  41888e:	jb     0x4188c6
  418890:	adc    ch,BYTE PTR [ecx-0x24]
  418893:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418894:	pusha  
  418895:	outs   dx,DWORD PTR ds:[esi]
  418896:	push   ds
  418897:	push   ecx
  418898:	sbb    DWORD PTR [ebx],esi
  41889a:	popa   
  41889b:	bound  eax,QWORD PTR [eax]
  41889d:	inc    ecx
  41889e:	call   0x3fa8:0x68903cc6
  4188a5:	add    BYTE PTR [eax-0x47ac6bab],cl
  4188ab:	std    
  4188ac:	jo     0x418922
  4188ae:	fisttp DWORD PTR [edx+ecx*1+0x71]
  4188b2:	in     al,0xf2
  4188b4:	pop    ds
  4188b5:	rcr    BYTE PTR [ebx-0x274a63b5],cl
  4188bb:	xor    ebx,edx
  4188bd:	push   esi
  4188be:	mov    esi,0x95765cf1
  4188c3:	jle    0x418943
  4188c5:	xor    edi,ebp
  4188c7:	ficomp DWORD PTR ss:[ebp+0x26ad3e6d]
  4188ce:	inc    edx
  4188cf:	mov    ebx,DWORD PTR [edx]
  4188d1:	and    BYTE PTR [ebx+ebp*8+0x16784bc8],cl
  4188d8:	xchg   esp,eax
  4188d9:	cld    
  4188da:	inc    edi
  4188db:	aaa    
  4188dc:	enter  0xfd3,0x32
  4188e0:	retfw  0x4f96
  4188e4:	xor    al,0xaa
  4188e6:	xchg   esp,eax
  4188e7:	pop    esp
  4188e8:	xor    DWORD PTR [edx-0x22b5dd46],esp
  4188ee:	sar    DWORD PTR [ebx-0x21],cl
  4188f1:	and    DWORD PTR [ebp-0x77357f10],esp
  4188f7:	call   0x53db:0x4aac8bfa
  4188fe:	sahf   
  4188ff:	hlt    
  418900:	adc    al,0xa1
  418902:	daa    
  418903:	in     al,dx
  418904:	sahf   
  418905:	loop   0x4188bb
  418907:	imul   edx,DWORD PTR [eax+0x287383f2],0xffffff98
  41890e:	int3   
  41890f:	and    ah,BYTE PTR [esi-0x6d49de9b]
  418915:	sub    eax,0xc0390c5
  41891a:	sub    ebx,DWORD PTR [eax+ecx*4+0x7c4ce864]
  418921:	inc    ecx
  418922:	out    dx,al
  418923:	mov    edi,0x64e265f8
  418928:	sub    DWORD PTR [esi+esi*8],0x9c98381a
  41892f:	dec    esi
  418930:	push   ss
  418931:	aaa    
  418932:	mov    ecx,0x72cfed33
  418937:	les    esp,FWORD PTR [ecx-0x31]
  41893a:	push   ds
  41893b:	push   eax
  41893c:	(bad)  
  41893d:	lea    ecx,[edx+0xbe3bdfc]
  418943:	popa   
  418944:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418945:	gs jne 0x4188d8
  418948:	pop    edi
  418949:	and    bl,ah
  41894b:	push   ss
  41894c:	mov    esi,0x61dd955f
  418951:	push   edi
  418952:	imul   esi,DWORD PTR [eax],0x5c
  418955:	sub    eax,0xae3f2eb7
  41895a:	jmp    0xeedb:0xd5c2f924
  418961:	pop    eax
  418962:	pushf  
  418963:	pop    ebx
  418964:	(bad)  
  418965:	je     0x418981
  418967:	mov    BYTE PTR ds:0x946e76b9,0x6d
  41896e:	gs cli 
  418970:	dec    ecx
  418971:	sbb    cl,BYTE PTR ds:0x83216720
  418977:	jns    0x41898c
  418979:	ins    DWORD PTR es:[edi],dx
  41897a:	xchg   edi,eax
  41897b:	dec    eax
  41897c:	sub    cl,dh
  41897e:	push   0xe0e5d552
  418983:	ins    DWORD PTR es:[edi],dx
  418984:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418985:	les    eax,FWORD PTR [ebx-0x4c]
  418988:	fldenv [eax-0x5af1cb05]
  41898e:	das    
  41898f:	sbb    eax,0xac852ec7
  418994:	mov    dl,0x77
  418996:	cmp    al,0xa0
  418998:	retf   0xe5ba
  41899b:	rcr    DWORD PTR [edx+0x2c905246],cl
  4189a1:	jecxz  0x4189d0
  4189a3:	push   ss
  4189a4:	or     edi,DWORD PTR [ecx]
  4189a6:	or     edx,ebx
  4189a8:	push   es
  4189a9:	rol    BYTE PTR [esp+edi*4+0x494c215],1
  4189b0:	call   0xceacb69a
  4189b5:	push   ebp
  4189b6:	aad    0x53
  4189b8:	dec    eax
  4189b9:	stc    
  4189ba:	jbe    0x418994
  4189bc:	sbb    dh,BYTE PTR [eax+edx*8]
  4189bf:	(bad)  
  4189c0:	popa   
  4189c1:	fwait
  4189c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4189c3:	push   edx
  4189c4:	(bad)  
  4189c5:	jnp    0x418a2f
  4189c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4189c8:	outs   dx,DWORD PTR ds:[esi]
  4189c9:	xchg   esp,eax
  4189ca:	(bad)  
  4189cb:	push   ebx
  4189cc:	cmp    DWORD PTR [ebx+0xb424189],edi
  4189d2:	push   0x5afaa669
  4189d7:	mov    edx,edi
  4189d9:	popf   
  4189da:	repz test DWORD PTR [ecx],esi
  4189dd:	mov    WORD PTR [edi],ss
  4189df:	push   ecx
  4189e0:	lea    esp,[eax+ebx*4]
  4189e3:	dec    esi
  4189e4:	jae    0x418a1e
  4189e6:	push   cs
  4189e7:	enter  0x2cd5,0x73
  4189eb:	xor    esp,DWORD PTR [esi+0x76561543]
  4189f1:	popa   
  4189f2:	outs   dx,DWORD PTR ds:[esi]
  4189f3:	ja     0x418993
  4189f5:	adc    eax,0x8d8c621b
  4189fa:	int    0x18
  4189fc:	add    al,0x21
  4189fe:	mov    bl,0x27
  418a00:	out    0xd7,al
  418a02:	mov    eax,0xf6bba9f3
  418a07:	push   0x223dd0df
  418a0c:	repnz ins DWORD PTR es:[edi],dx
  418a0e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418a0f:	(bad)  
  418a10:	push   edx
  418a11:	jl     0x4189e6
  418a13:	xor    al,ah
  418a15:	sub    eax,0xad043e85
  418a1a:	dec    eax
  418a1b:	(bad)  [ebx]
  418a1d:	sar    bl,cl
  418a1f:	pop    eax
  418a20:	in     eax,0x5a
  418a22:	mul    DWORD PTR [esi-0x1e441ca1]
  418a28:	idiv   DWORD PTR [ecx]
  418a2a:	pop    ds
  418a2b:	jae    0x4189e2
  418a2d:	pop    edi
  418a2e:	dec    esi
  418a2f:	sbb    eax,0xd024e575
  418a34:	xor    DWORD PTR [esi-0x54],0x610eeb1a
  418a3b:	or     al,BYTE PTR [ebx]
  418a3d:	fdiv   DWORD PTR [esi-0x29]
  418a40:	scas   eax,DWORD PTR es:[edi]
  418a41:	repz dec ebx
  418a43:	stos   BYTE PTR es:[edi],al
  418a44:	inc    eax
  418a45:	mov    dh,0x62
  418a47:	sub    ebx,DWORD PTR [esi-0x3]
  418a4a:	icebp  
  418a4b:	stc    
  418a4c:	sub    DWORD PTR [ebp+0x2bfe1a1e],0x1b63f26a
  418a56:	mov    ebx,0xb094d0cc
  418a5b:	nop
  418a5c:	adc    BYTE PTR [ecx+0x75],dl
  418a5f:	aad    0xf4
  418a61:	dec    esi
  418a62:	aad    0x7b
  418a64:	ss push ebp
  418a66:	je     0x418a03
  418a68:	pop    es
  418a69:	jp     0x418add
  418a6b:	and    eax,DWORD PTR [ecx+0x6f]
  418a6e:	jge    0x418a9c
  418a70:	je     0x418a62
  418a72:	push   ds
  418a73:	fistp  WORD PTR [ecx+esi*4-0x28]
  418a77:	mov    ch,0x33
  418a79:	arpl   WORD PTR [ebp+0x7b15fdaf],sp
  418a7f:	(bad)  
  418a80:	fmul   DWORD PTR [ecx-0x61a51074]
  418a86:	fisub  DWORD PTR [ecx-0x5a061117]
  418a8c:	or     bl,bl
  418a8e:	in     eax,dx
  418a8f:	xor    eax,DWORD PTR [edx]
  418a91:	xchg   BYTE PTR [ebx],dh
  418a93:	sbb    cl,BYTE PTR ds:0x66e2f3c8
  418a99:	imul   esp,DWORD PTR [ebx+0x7fa1d34e],0x97aec92
  418aa3:	mov    edi,0x264b09aa
  418aa8:	call   0x1109:0xb2b59d8b
  418aaf:	cs push ecx
  418ab1:	dec    eax
  418ab2:	sbb    esp,esp
  418ab4:	sbb    bl,ch
  418ab6:	daa    
  418ab7:	fmul   st,st(3)
  418ab9:	xchg   DWORD PTR [edi-0x7e],edx
  418abc:	les    ebp,FWORD PTR [esi]
  418abe:	add    edx,edx
  418ac0:	sbb    eax,0xed458da1
  418ac5:	and    ebx,DWORD PTR [esi-0x1a]
  418ac8:	sar    BYTE PTR [edx-0x32],cl
  418acb:	pop    esi
  418acc:	test   BYTE PTR [esp+eiz*2+0x63],ah
  418ad0:	(bad)  
  418ad1:	jnp    0x418b03
  418ad3:	clc    
  418ad4:	mov    ebx,DWORD PTR [ebx+0x49]
  418ad7:	mov    eax,ds:0x39a5fc15
  418adc:	jle    0x418b52
  418ade:	jae    0x418af4
  418ae0:	mov    ecx,esi
  418ae2:	add    ebx,ecx
  418ae4:	mov    WORD PTR [esi+0x19e01502],fs
  418aea:	jmp    0xe00fa2fa
  418aef:	add    esp,DWORD PTR [ebx+0x51559f54]
  418af5:	jbe    0x418b6f
  418af7:	ja     0x418b71
  418af9:	cmp    edi,ebp
  418afb:	cmp    eax,0xcab5da77
  418b00:	add    ecx,DWORD PTR [eax]
  418b02:	repnz mov bl,bl
  418b05:	pop    ss
  418b06:	inc    ecx
  418b07:	jno    0x418b76
  418b09:	or     eax,0x40bd96bb
  418b0e:	ds dec ebx
  418b10:	(bad)  
  418b11:	ja     0x418b18
  418b13:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418b14:	lock int 0x1b
  418b17:	imul   eax,ecx,0x79ee54b1
  418b1d:	stos   BYTE PTR es:[edi],al
  418b1e:	push   cs
  418b1f:	out    0xff,eax
  418b21:	dec    edi
  418b22:	das    
  418b23:	daa    
  418b24:	pop    ds
  418b25:	sar    DWORD PTR [ecx+0x58b9de39],1
  418b2b:	fs sbb eax,0xfcfdbc64
  418b31:	in     al,0x6b
  418b33:	adc    al,BYTE PTR [ecx-0x6ab56a42]
  418b39:	xchg   ebp,eax
  418b3a:	add    ah,BYTE PTR [ecx+0x675ed76b]
  418b40:	aad    0xd9
  418b42:	push   cs
  418b43:	lock jns 0x418bc5
  418b46:	retf   0x4146
  418b49:	cmp    ah,BYTE PTR [ecx]
  418b4b:	jl     0x418b48
  418b4d:	pop    ss
  418b4e:	sbb    BYTE PTR fs:[ebp-0x3abba10e],al
  418b55:	loopne 0x418b0f
  418b57:	in     eax,0xb7
  418b59:	push   edx
  418b5a:	scas   eax,DWORD PTR es:[edi]
  418b5b:	mov    ecx,0xf9594e94
  418b60:	jl     0x418b8e
  418b62:	xchg   esp,eax
  418b63:	jg     0x418aec
  418b65:	in     al,dx
  418b66:	inc    edx
  418b67:	sbb    eax,0x2e3c9887
  418b6c:	setne  BYTE PTR [edx+ebp*1+0x31]
  418b71:	aam    0x55
  418b73:	retf   
  418b74:	jmp    0x418b43
  418b76:	arpl   WORD PTR [edi+0x2c],bx
  418b79:	ret    
  418b7a:	test   DWORD PTR gs:[eax+0x347d5aa2],edi
  418b81:	repz shr BYTE PTR [ecx+ecx*2+0x7b5589d2],1
  418b89:	fsubr  QWORD PTR [edi-0x3b072423]
  418b8f:	sbb    ch,dh
  418b91:	mov    ds:0x3a6c35d9,al
  418b96:	inc    ebp
  418b97:	inc    esp
  418b98:	cdq    
  418b99:	xor    dl,ah
  418b9b:	jnp    0x418bb6
  418b9d:	test   DWORD PTR [eax+0x7b],edi
  418ba0:	mov    ?,WORD PTR [esi+0x16]
  418ba3:	lock mov ebx,DWORD PTR [eax-0x11]
  418ba7:	mov    ss,WORD PTR [ecx+eax*4+0x601ecf4e]
  418bae:	arpl   WORD PTR [edx-0x7db88f53],cx
  418bb4:	int3   
  418bb5:	jnp    0x418bc7
  418bb7:	dec    eax
  418bb8:	jmp    0x418ba5
  418bba:	(bad)  
  418bbc:	outs   dx,DWORD PTR ds:[esi]
  418bbd:	push   0x50edc505
  418bc2:	ins    DWORD PTR es:[edi],dx
  418bc3:	(bad)  
  418bc4:	ficomp DWORD PTR [ebp+0x21]
  418bc7:	pextrw edx,(bad),0xc5
  418bc9:	adc    al,0xaf
  418bcb:	fs sub al,0xb1
  418bce:	dec    ebx
  418bcf:	mov    DWORD PTR ds:0x6c1d12b3,edx
  418bd5:	imul   edx,esp,0x6a
  418bd8:	sub    ecx,ebp
  418bda:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418bdb:	jmp    0x91c5:0x93f4286a
  418be2:	and    al,0xeb
  418be4:	mov    al,ds:0x7b2803a8
  418be9:	mov    ds:0x5892d439,eax
  418bee:	bound  esi,QWORD PTR [ecx]
  418bf0:	test   al,0x75
  418bf2:	sti    
  418bf3:	(bad)  
  418bf4:	in     al,dx
  418bf5:	push   0x3413fcbc
  418bfa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418bfb:	aad    0xf6
  418bfd:	arpl   WORD PTR [eax],bp
  418bff:	xor    al,0x9e
  418c01:	xchg   ecx,eax
  418c02:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418c03:	ds mov esi,0x7fc2efbc
  418c09:	mov    fs,eax
  418c0b:	or     esi,DWORD PTR [ebp-0x22]
  418c0e:	retf   
  418c0f:	jo     0x418c7b
  418c11:	pop    ss
  418c12:	dec    ebx
  418c13:	(bad)  
  418c14:	loope  0x418bb9
  418c16:	mov    al,ds:0xb4d354ea
  418c1b:	xor    eax,0x3e2cbb94
  418c20:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418c21:	shr    DWORD PTR [edi],cl
  418c23:	sub    al,0x0
  418c25:	leave  
  418c26:	xchg   ecx,eax
  418c27:	repnz in al,0x5f
  418c2a:	out    0x88,al
  418c2c:	(bad)  
  418c2d:	jo     0x418bd0
  418c2f:	in     al,dx
  418c30:	cs stos DWORD PTR es:[edi],eax
  418c32:	mov    ebx,0x10b00627
  418c37:	jmp    0x418c29
  418c39:	and    bh,BYTE PTR [esi]
  418c3b:	xchg   ebx,eax
  418c3c:	inc    edi
  418c3d:	jo     0x418c51
  418c3f:	inc    esp
  418c40:	sub    edx,DWORD PTR [ebp-0x40]
  418c43:	nop
  418c44:	loopne 0x418c7b
  418c46:	shl    ch,cl
  418c48:	lahf   
  418c49:	mov    esp,0x480c2fd9
  418c4e:	(bad)  
  418c4f:	(bad)  [edi-0x7b]
  418c52:	arpl   WORD PTR [eax+0x47],ax
  418c55:	cmp    edx,ebx
  418c57:	in     eax,dx
  418c58:	push   eax
  418c59:	int3   
  418c5a:	cmc    
  418c5b:	nop
  418c5c:	cmp    al,0xd6
  418c5e:	out    0xd2,eax
  418c60:	dec    eax
  418c61:	sbb    al,dh
  418c63:	gs jae 0x418c22
  418c66:	cwde   
  418c67:	aas    
  418c68:	retf   0x8e2b
  418c6b:	jl     0x418c23
  418c6d:	xor    ch,ch
  418c6f:	lds    ebx,FWORD PTR [esi]
  418c71:	inc    esi
  418c72:	test   BYTE PTR [edi-0x74],dl
  418c75:	loopne 0x418cf2
  418c77:	out    0x78,eax
  418c79:	clc    
  418c7a:	mov    DWORD PTR [ecx],esp
  418c7c:	add    BYTE PTR [eax-0x2c],bh
  418c7f:	jne    0x418ce6
  418c81:	out    0xe6,eax
  418c83:	leave  
  418c84:	ins    DWORD PTR es:[edi],dx
  418c85:	sbb    al,0xe8
  418c87:	stos   DWORD PTR es:[edi],eax
  418c88:	enter  0x4982,0x13
  418c8c:	test   eax,0x639d8aa
  418c91:	jns    0x418c2f
  418c93:	fcom   st(5)
  418c95:	jl     0x418ce0
  418c97:	retf   
  418c98:	ret    0xed72
  418c9b:	fidivr DWORD PTR [ecx+edx*8+0x18]
  418c9f:	iret   
  418ca0:	sub    eax,DWORD PTR [esi+edi*1-0x77]
  418ca4:	jne    0x418ce7
  418ca6:	ror    BYTE PTR [ecx],0x30
  418ca9:	sbb    DWORD PTR [ebx],edi
  418cab:	push   0xffffffa7
  418cad:	xchg   esp,eax
  418cae:	jns    0x418cea
  418cb0:	es in  al,dx
  418cb2:	or     eax,0xd2459f10
  418cb7:	inc    eax
  418cb8:	inc    ebp
  418cb9:	pop    ebx
  418cba:	xchg   ecx,eax
  418cbb:	lods   eax,DWORD PTR ds:[esi]
  418cbc:	push   0xffffffa8
  418cbe:	jae    0x418ccc
  418cc0:	lock jp 0x418c79
  418cc3:	aaa    
  418cc4:	sub    ah,BYTE PTR [edx+0x2b]
  418cc7:	pop    ebx
  418cc8:	aas    
  418cc9:	daa    
  418cca:	xor    ecx,esi
  418ccc:	push   0xf16a9fba
  418cd1:	sub    BYTE PTR [edx-0x4b],al
  418cd4:	stos   DWORD PTR es:[edi],eax
  418cd5:	(bad)  
  418cd7:	in     eax,dx
  418cd8:	jg     0x418d04
  418cda:	mov    ds:0xcd8795d8,eax
  418cdf:	or     edi,DWORD PTR [eax+0x4e245f48]
  418ce5:	sub    esp,DWORD PTR [ebp+ebp*4+0x10a79d5c]
  418cec:	fs dec ebx
  418cee:	in     al,0xb2
  418cf0:	test   cl,ch
  418cf2:	bnd jb 0x418c7f
  418cf5:	lods   eax,DWORD PTR ds:[esi]
  418cf6:	add    eax,0x1bc5e754
  418cfb:	jge    0x418d09
  418cfd:	inc    ecx
  418cfe:	add    eax,0x79cfa339
  418d03:	mov    ah,0x60
  418d05:	pop    ebp
  418d07:	push   ecx
  418d08:	push   ebp
  418d09:	or     cl,ah
  418d0b:	out    dx,eax
  418d0c:	xor    cl,BYTE PTR [eax-0x5adc63ce]
  418d12:	add    eax,0xdfc8b8ae
  418d17:	into   
  418d18:	mov    WORD PTR [eax+0xf],ss
  418d1b:	xchg   DWORD PTR ds:0x3453996c,ebx
  418d21:	mov    al,ds:0xee015c8b
  418d26:	xor    ebx,DWORD PTR [edx]
  418d28:	xchg   esp,eax
  418d29:	dec    esp
  418d2a:	sub    DWORD PTR [ecx+0x50],esi
  418d2d:	data16 mov cl,0x47
  418d30:	push   es
  418d31:	sub    ch,BYTE PTR [eax]
  418d33:	xchg   edi,eax
  418d34:	aas    
  418d35:	push   ebx
  418d36:	mov    cl,0x76
  418d38:	mov    bl,0x1e
  418d3a:	lea    ebp,[esi-0x5b9ce32c]
  418d40:	jnp    0x418cd2
  418d42:	cli    
  418d43:	fistp  DWORD PTR [ebx+0x67]
  418d46:	shrd   eax,ebx,0x9b
  418d4a:	pusha  
  418d4b:	mov    esp,0x42e9b486
  418d50:	sbb    ebp,DWORD PTR [edx+0xb4e1593]
  418d56:	in     al,0xdc
  418d58:	retf   
  418d59:	adc    ah,cl
  418d5b:	cmp    edx,DWORD PTR [eax+0x29]
  418d5e:	cmc    
  418d5f:	out    0xbe,eax
  418d61:	add    eax,0x553630e1
  418d66:	cli    
  418d67:	jo     0x418dd7
  418d69:	add    bl,bl
  418d6b:	std    
  418d6c:	scas   eax,DWORD PTR es:[edi]
  418d6d:	sbb    dl,BYTE PTR [edx-0x1b]
  418d70:	or     ah,BYTE PTR [edx-0x6]
  418d73:	jno    0x418d42
  418d75:	test   DWORD PTR [edi+0x55],0xa9a774d3
  418d7c:	bound  eax,QWORD PTR [ecx]
  418d7e:	xor    dl,0x6d
  418d81:	xor    eax,0x508a75fb
  418d86:	sbb    dh,ch
  418d88:	fstp   QWORD PTR [edx]
  418d8a:	mov    al,ds:0x6d60f6cd
  418d8f:	mov    cl,0x4f
  418d91:	xchg   esp,eax
  418d92:	mov    WORD PTR [ebx-0x2],gs
  418d95:	jg     0x418da1
  418d97:	mov    ?,WORD PTR [edi-0x594227a9]
  418d9d:	sahf   
  418d9e:	in     al,0xab
  418da0:	test   eax,0xd152e51c
  418da5:	sub    al,0xf8
  418da7:	shl    DWORD PTR ds:0x66aadfcd,0xf6
  418dae:	(bad)  
  418daf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418db0:	xor    al,0xe
  418db2:	fdivrp st(6),st
  418db4:	mov    DWORD PTR [ebp+0x1a8cb76c],eax
  418dba:	fisttp WORD PTR [esi+0x374552f7]
  418dc0:	sahf   
  418dc1:	test   eax,0xe1f61fbd
  418dc6:	mov    cs,WORD PTR [bx+si-0x73]
  418dca:	dec    edx
  418dcb:	jb     0x418d8c
  418dcd:	enter  0x6cea,0x96
  418dd1:	xlat   BYTE PTR ds:[ebx]
  418dd2:	pop    ss
  418dd3:	mov    al,0x89
  418dd5:	mov    al,ds:0xfb84175a
  418dda:	loope  0x418dbf
  418ddc:	mov    dl,ch
  418dde:	dec    esi
  418ddf:	sahf   
  418de0:	jmp    0x66ee945e
  418de5:	fwait
  418de6:	ss stc 
  418de8:	mov    bl,0x75
  418dea:	sub    eax,DWORD PTR [esp+esi*4]
  418ded:	lods   eax,DWORD PTR ds:[esi]
  418dee:	jp     0x418e08
  418df0:	aam    0x8d
  418df2:	repz aad 0xfd
  418df5:	repz mov cl,0x6c
  418df8:	jae    0x418e34
  418dfa:	push   ss
  418dfb:	pop    esi
  418dfc:	retf   0xed28
  418dff:	xor    al,BYTE PTR [edi+0x777cadfa]
  418e05:	mov    ecx,DWORD PTR [esi+0x65]
  418e08:	and    ebp,0xd85b9752
  418e0e:	out    dx,eax
  418e0f:	xchg   ebp,eax
  418e10:	daa    
  418e11:	cmp    DWORD PTR [ecx-0x64],ebp
  418e14:	sbb    edx,ebx
  418e16:	imul   eax,DWORD PTR [esi],0x57
  418e19:	mov    BYTE PTR [edx],al
  418e1b:	mov    ah,BYTE PTR [ecx+0x2c]
  418e1e:	sub    eax,0x1fdc03df
  418e23:	mov    bx,0xe1e2
  418e27:	push   ebx
  418e28:	xor    ebx,0x78
  418e2b:	mov    esp,0x2004fe45
  418e30:	pop    eax
  418e31:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418e32:	aam    0xa5
  418e34:	xor    eax,0xd835933
  418e39:	push   ecx
  418e3a:	ja     0x418e96
  418e3c:	mov    ah,0xdd
  418e3e:	fwait
  418e3f:	mov    dh,0xb2
  418e41:	sub    DWORD PTR [edx],0x50
  418e44:	iret   
  418e45:	xlat   BYTE PTR ds:[ebx]
  418e46:	jae    0x418e0f
  418e48:	jmp    0xfa21:0x5e85283e
  418e4f:	push   ss
  418e50:	jo     0x418e12
  418e52:	jp     0x418e5d
  418e54:	js     0x418de2
  418e56:	xchg   ecx,eax
  418e57:	fwait
  418e58:	ds push es
  418e5a:	fcom   DWORD PTR [ebp-0x28]
  418e5d:	ds sub al,0xd3
  418e60:	(bad)  
  418e61:	cmc    
  418e62:	sti    
  418e63:	popf   
  418e64:	jmp    0xaf22819c
  418e69:	cli    
  418e6a:	cmp    bl,BYTE PTR [eax+0x106e05e1]
  418e70:	icebp  
  418e71:	add    eax,0x4ffa30f8
  418e76:	imul   ebp,DWORD PTR [bp-0x2079],0x7f59ceaa
  418e7f:	mov    edi,0x1adb9ec0
  418e84:	or     al,0xcf
  418e86:	pop    ecx
  418e87:	stos   BYTE PTR es:[edi],al
  418e88:	xor    BYTE PTR [edi-0x320a2cb8],0x84
  418e8f:	hlt    
  418e90:	mov    ah,0x98
  418e92:	stc    
  418e93:	ds sbb ecx,ebp
  418e96:	or     esp,DWORD PTR [ebp-0x69]
  418e99:	or     esi,DWORD PTR [ecx+0x48]
  418e9c:	loope  0x418e8b
  418e9e:	neg    ebp
  418ea0:	sbb    dh,BYTE PTR [edi+0x639fb0bf]
  418ea6:	sbb    eax,0xeb1f5899
  418eab:	fs or  dh,bl
  418eae:	scas   al,BYTE PTR es:[edi]
  418eaf:	adc    BYTE PTR [edx-0x4],ch
  418eb2:	sub    al,0xed
  418eb4:	xchg   edx,eax
  418eb5:	cmp    bl,ah
  418eb7:	daa    
  418eb8:	inc    ebx
  418eb9:	add    eax,0xf376cf6e
  418ebe:	dec    esi
  418ebf:	inc    esi
  418ec0:	pop    edx
  418ec1:	lahf   
  418ec2:	mov    ebx,0xe927c81c
  418ec7:	jmp    0x7ff:0xfd6beafb
  418ece:	hlt    
  418ecf:	cs push ss
  418ed1:	sbb    eax,0xa1002baf
  418ed6:	fwait
  418ed7:	ror    BYTE PTR [ecx],cl
  418ed9:	jmp    0xf3889211
  418ede:	xor    esp,esp
  418ee0:	add    al,0x50
  418ee2:	cs fwait
  418ee4:	jecxz  0x418f0a
  418ee6:	scas   al,BYTE PTR es:[edi]
  418ee7:	xchg   BYTE PTR [edx],dl
  418ee9:	pop    edi
  418eea:	xchg   ecx,eax
  418eeb:	lds    edx,FWORD PTR [di-0x64]
  418eef:	inc    ebp
  418ef0:	cwde   
  418ef1:	sbb    al,0x19
  418ef3:	into   
  418ef4:	inc    ebx
  418ef5:	mov    ds,ebx
  418ef7:	lahf   
  418ef8:	mov    BYTE PTR [ebx],cl
  418efa:	sub    al,0x6a
  418efc:	push   esp
  418efd:	dec    BYTE PTR [ebx-0x4c]
  418f00:	sbb    DWORD PTR [esi-0x63a228fc],eax
  418f06:	sbb    esi,esi
  418f08:	sub    eax,0xc1cb768a
  418f0d:	fisttp WORD PTR [edx-0x2b]
  418f10:	add    eax,0xbdd3fda3
  418f15:	loopne 0x418f85
  418f17:	pop    esp
  418f18:	xor    BYTE PTR [esi],cl
  418f1a:	dec    ecx
  418f1b:	lahf   
  418f1c:	inc    ebx
  418f1d:	pop    es
  418f1e:	inc    esi
  418f1f:	imul   esp,DWORD PTR [edx],0xe31f1a6b
  418f25:	(bad)  
  418f26:	iret   
  418f27:	pop    ds
  418f28:	mov    bh,0x15
  418f2a:	cmp    bh,BYTE PTR ds:0xbe740ce0
  418f30:	popa   
  418f31:	mov    edx,0x91beae7e
  418f36:	sbb    al,BYTE PTR [ebx]
  418f38:	push   ds
  418f39:	lea    edi,[ebx+0x1546c5dc]
  418f3f:	daa    
  418f40:	shl    BYTE PTR [edx-0x50ab11d7],1
  418f46:	jbe    0x418f51
  418f48:	and    BYTE PTR [ecx-0x56a23374],bl
  418f4e:	enter  0x18b,0x17
  418f52:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418f53:	add    BYTE PTR [edx+0x46],al
  418f56:	ror    BYTE PTR [esp+ecx*1+0x47],0x8e
  418f5b:	cmp    cl,0x9b
  418f5e:	mov    dh,0xce
  418f60:	cs mov dh,0x45
  418f63:	outs   dx,BYTE PTR ds:[esi]
  418f64:	adc    dl,BYTE PTR [edx]
  418f66:	or     ebx,DWORD PTR [eax-0x280563ef]
  418f6c:	(bad)  
  418f6d:	fabs   
  418f6f:	inc    edx
  418f70:	pop    esi
  418f71:	push   ebp
  418f72:	sbb    al,0xa2
  418f74:	repnz xchg edi,eax
  418f76:	jbe    0x418fac
  418f78:	bound  ebp,QWORD PTR [edi-0xd429f94]
  418f7e:	mov    ds:0xaaa4a003,al
  418f83:	jg     0x418fcb
  418f85:	sti    
  418f86:	mov    edx,DWORD PTR ds:0xd4049b8e
  418f8c:	out    0xa7,eax
  418f8e:	in     eax,dx
  418f8f:	(bad)  
  418f90:	shl    DWORD PTR [edi+edi*1-0x16],1
  418f94:	data16 jne 0x418fb0
  418f97:	xchg   ebp,eax
  418f98:	fld    TBYTE PTR [edx+0x7c]
  418f9b:	or     eax,0x59f5fc5
  418fa0:	out    dx,eax
  418fa1:	mov    esp,0x3fe0db33
  418fa6:	ret    
  418fa7:	mov    ds:0x7c2a8322,al
  418fac:	jb     0x418fc1
  418fae:	push   0x8489beb4
  418fb3:	jmp    0x572c:0x18910e24
  418fba:	pop    esi
  418fbb:	push   eax
  418fbc:	pushf  
  418fbd:	pop    ss
  418fbe:	push   eax
  418fbf:	jmp    0x418fab
  418fc1:	sbb    DWORD PTR [edi-0x7d],esi
  418fc4:	mov    eax,0x190c301a
  418fc9:	sbb    cl,ah
  418fcb:	mov    ch,0xbd
  418fcd:	sub    eax,0xea6eaaec
  418fd2:	je     0x419038
  418fd4:	das    
  418fd5:	mov    eax,ds:0xf9a3e540
  418fda:	push   es
  418fdb:	gs ds mov al,0x1e
  418fdf:	mov    ebx,0x2824a129
  418fe4:	dec    ebx
  418fe5:	out    dx,al
  418fe6:	add    ebx,edi
  418fe8:	xor    edi,DWORD PTR [ebx]
  418fea:	inc    ebp
  418feb:	push   esp
  418fec:	into   
  418fed:	inc    esi
  418fee:	add    esp,ebp
  418ff0:	(bad)  
  418ff1:	fisttp QWORD PTR [ecx]
  418ff3:	test   eax,0x2545add0
  418ff8:	mov    ah,BYTE PTR [esi+edx*8+0x4165e1ec]
  418fff:	pop    ss
  419000:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419001:	jp     0x419050
  419003:	inc    esi
  419005:	push   ebx
  419006:	or     al,0xe2
  419008:	mov    ?,WORD PTR [esi-0x5c]
  41900b:	retf   
  41900c:	ja     0x418fff
  41900e:	adc    al,bl
  419010:	push   esp
  419011:	mov    al,0x36
  419013:	jg     0x419007
  419015:	inc    ecx
  419016:	or     dh,ah
  419018:	out    0xea,al
  41901a:	aam    0xb
  41901c:	mov    bh,0x72
  41901e:	mov    bh,0xaa
  419020:	mov    ebx,0x81db0d6
  419025:	loopne 0x418ff9
  419027:	test   BYTE PTR [ecx+0x53],ch
  41902a:	xchg   ebx,eax
  41902b:	push   ss
  41902c:	push   ss
  41902d:	xchg   ebp,eax
  41902e:	setns  BYTE PTR [edi+eiz*4-0x56]
  419033:	sbb    al,0x99
  419035:	push   esi
  419036:	jns    0x419043
  419038:	mov    ebp,DWORD PTR [esi+0x371e7a0]
  41903e:	jns    0x418fed
  419040:	or     DWORD PTR [ebx+0x7c757efd],edx
  419046:	jge    0x419057
  419048:	mov    esp,0x228ef402
  41904d:	xlat   BYTE PTR ds:[ebx]
  41904e:	pop    ebp
  41904f:	aas    
  419050:	jg     0x41900c
  419052:	and    eax,0xbe74a9c0
  419057:	or     edi,eax
  419059:	retf   
  41905a:	or     BYTE PTR [ecx+0x6b],ah
  41905d:	xor    bh,bh
  41905f:	push   ss
  419060:	js     0x419054
  419062:	jge    0x419051
  419064:	jbe    0x41900f
  419066:	mov    al,0xea
  419068:	xor    eax,0x7a4d2a9e
  41906d:	adc    edx,DWORD PTR [esi+eax*8-0x57df2ed9]
  419074:	jge    0x4190ef
  419076:	sahf   
  419077:	xchg   esi,eax
  419078:	push   0x7a
  41907a:	mov    ah,0x3b
  41907c:	ins    BYTE PTR es:[edi],dx
  41907d:	and    dh,BYTE PTR [edx-0x3075dacd]
  419083:	cs call 0x6f35:0xbf2a24a5
  41908b:	fs cmp esi,edx
  41908e:	mov    esi,0xd2950cde
  419093:	inc    eax
  419094:	add    esi,ecx
  419096:	ins    DWORD PTR es:[edi],dx
  419097:	sbb    edx,ecx
  419099:	cmp    al,0xdb
  41909b:	push   0x6630fbc7
  4190a0:	jb     0x4190e1
  4190a2:	xlat   BYTE PTR ds:[ebx]
  4190a3:	iret   
  4190a4:	jp     0x419069
  4190a6:	mov    al,ds:0xaf944dfc
  4190ab:	popa   
  4190ac:	test   dh,cl
  4190ae:	aaa    
  4190af:	iret   
  4190b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4190b1:	jno    0x41910e
  4190b3:	out    0x3d,eax
  4190b5:	sbb    dl,BYTE PTR [edx+0x38d0dfae]
  4190bb:	push   edx
  4190bc:	lea    ebx,[ebp-0x5419ffea]
  4190c2:	xchg   esi,eax
  4190c3:	jp     0x4190a6
  4190c5:	push   ebp
  4190c6:	ins    BYTE PTR es:[edi],dx
  4190c7:	repnz nop
  4190c9:	pop    esp
  4190ca:	inc    eax
  4190cb:	std    
  4190cc:	aad    0x63
  4190ce:	xchg   DWORD PTR [edx-0x8],edx
  4190d1:	cmp    dl,dl
  4190d3:	daa    
  4190d4:	cld    
  4190d5:	jno    0x4190a2
  4190d7:	or     DWORD PTR [ebp+0x1ae0fe15],esp
  4190dd:	je     0x41910e
  4190df:	jb     0x419140
  4190e1:	imul   edx,DWORD PTR [ebp+ecx*2+0xe2598d8],0xffffffcb
  4190e9:	push   edx
  4190ea:	mov    DWORD PTR ds:0xeae46ab4,0xe6c89783
  4190f4:	outs   dx,DWORD PTR ds:[esi]
  4190f5:	jmp    0xf1f2:0x2e6a2943
  4190fc:	dec    esp
  4190fd:	imul   ecx,edi,0xeb8a2144
  419103:	stos   BYTE PTR es:[edi],al
  419104:	dec    ebp
  419105:	mov    dl,0x61
  419107:	sub    al,BYTE PTR [ebx+0x33717f55]
  41910d:	pop    ebx
  41910e:	retf   
  41910f:	in     eax,0x3e
  419111:	push   eax
  419112:	mov    al,ds:0x24af6449
  419117:	ret    
  419118:	sub    BYTE PTR [eax-0x5],dl
  41911b:	push   ebx
  41911c:	jmp    0x419142
  41911e:	xor    BYTE PTR [ebp+0x28],cl
  419121:	iret   
  419122:	fiadd  WORD PTR [eax]
  419124:	add    BYTE PTR [edi-0x23],bh
  419127:	add    BYTE PTR [esi-0x46eb9020],cl
  41912d:	or     edi,DWORD PTR ds:0xfc5dc02e
  419133:	cmp    ch,BYTE PTR [eax]
  419135:	pop    edi
  419136:	jo     0x419122
  419138:	push   edi
  419139:	adc    bl,bh
  41913b:	inc    ebp
  41913c:	sub    eax,0x9be03ada
  419141:	fiadd  DWORD PTR [ebp+0x31]
  419144:	cmp    eax,0xb18c66b6
  419149:	and    eax,0xa7b1bec5
  41914e:	aam    0x68
  419150:	jl     0x4190e1
  419152:	(bad)  
  419153:	sar    DWORD PTR ds:0x8ce03d87,cl
  419159:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41915a:	push   esi
  41915b:	jb     0x4190fc
  41915d:	push   edx
  41915e:	and    al,0x65
  419160:	mov    al,0xdc
  419162:	leave  
  419163:	scas   eax,DWORD PTR es:[edi]
  419164:	ror    ecx,1
  419166:	cdq    
  419167:	jae    0x4191d3
  419169:	hlt    
  41916a:	imul   ebx,eax,0x78
  41916d:	cwde   
  41916e:	cs jno 0x419154
  419171:	jb     0x419153
  419173:	jns    0x4190ff
  419175:	not    esi
  419177:	dec    eax
  419178:	gs dec eax
  41917a:	rcl    BYTE PTR [edi],cl
  41917c:	(bad)  
  41917d:	jmp    0x420704e6
  419182:	jnp    0x4191d4
  419184:	(bad)  
  419185:	jbe    0x4191cb
  419187:	inc    ebx
  419188:	lods   al,BYTE PTR ds:[esi]
  419189:	div    BYTE PTR [edx-0x30dfb5fe]
  41918f:	jae    0x4191b9
  419191:	add    al,0x21
  419193:	mov    DWORD PTR [edx-0x3c],ebx
  419196:	(bad)  
  419197:	nop
  419198:	cdq    
  419199:	jne    0x41921a
  41919b:	mov    ds:0xaf36e7a5,eax
  4191a0:	pop    esi
  4191a1:	mov    edi,0xb646d5f7
  4191a6:	outs   dx,BYTE PTR ds:[esi]
  4191a7:	lock adc esi,ecx
  4191aa:	inc    edx
  4191ab:	pop    ds
  4191ac:	sub    al,0x87
  4191ae:	test   ah,al
  4191b0:	and    eax,0x92978a49
  4191b5:	mov    BYTE PTR [ecx+ebp*2],bh
  4191b8:	shr    BYTE PTR [edi-0x3f],cl
  4191bb:	popa   
  4191bc:	push   ss
  4191bd:	call   0x8dc957df
  4191c2:	cmp    al,0x8e
  4191c4:	jmp    0x64afe2e6
  4191c9:	into   
  4191ca:	add    BYTE PTR [esi-0x52],al
  4191cd:	leave  
  4191ce:	xor    al,0xf1
  4191d0:	jl     0x41924a
  4191d2:	and    ebp,DWORD PTR [eax]
  4191d4:	stc    
  4191d5:	ins    BYTE PTR es:[edi],dx
  4191d6:	sti    
  4191d7:	cmp    eax,edi
  4191d9:	xor    BYTE PTR [ecx],cl
  4191db:	inc    esp
  4191dc:	sbb    al,0x91
  4191de:	mov    ebx,0xd2ac71a2
  4191e3:	and    DWORD PTR [esi+0x29ad7700],ecx
  4191e9:	sub    eax,0x98e5d532
  4191ee:	mov    ah,0x73
  4191f0:	fst    QWORD PTR [edx+0x342626fa]
  4191f6:	fldenv [ecx-0x1c7ffc55]
  4191fc:	in     eax,0x3a
  4191fe:	cmp    ah,BYTE PTR [edx-0x30]
  419201:	push   es
  419202:	mov    al,ds:0xeedd3b8b
  419207:	lahf   
  419208:	dec    ebp
  419209:	ret    0x5ce2
  41920c:	stos   DWORD PTR es:[edi],eax
  41920d:	ret    0x1185
  419210:	jmp    0x58ce9ac3
  419215:	adc    DWORD PTR [ebx+ebx*8+0x23ef568b],eax
  41921c:	cli    
  41921d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41921e:	(bad)  [edi]
  419220:	je     0x419233
  419222:	mov    al,0x69
  419224:	fistp  WORD PTR [edi-0x1d]
  419227:	push   0x5a
  419229:	ds or  ch,al
  41922c:	sub    BYTE PTR [edx+0x5],dh
  41922f:	jne    0x419263
  419231:	push   edi
  419232:	pusha  
  419233:	lea    eax,[esi]
  419235:	(bad)  
  419236:	lock push ebp
  419238:	xor    BYTE PTR [ebp+0x7b1ac89],ch
  41923e:	cli    
  41923f:	mov    edi,ss
  419241:	jle    0x4191ee
  419243:	lock mov ebx,0xc4002d9b
  419249:	adc    BYTE PTR [ecx+eax*2],0xbd
  41924d:	(bad)  
  41924e:	adc    eax,0x95b1914e
  419253:	push   ebp
  419254:	js     0x4191e0
  419256:	loopne 0x41921b
  419258:	xchg   ebp,eax
  419259:	scas   al,BYTE PTR es:[edi]
  41925a:	(bad)  
  41925c:	mov    edx,DWORD PTR [edx+0x710c4517]
  419262:	lock dec edx
  419264:	pop    esi
  419265:	cmp    bh,BYTE PTR [esi]
  419267:	jl     0x4192e0
  419269:	sbb    DWORD PTR [edx+0x77fa12c5],ebp
  41926f:	daa    
  419270:	push   edx
  419271:	or     esi,DWORD PTR ds:0xf95cbcfc
  419277:	in     al,0x19
  419279:	ret    
  41927a:	xor    al,0x20
  41927c:	ja     0x419218
  41927e:	sahf   
  41927f:	mov    al,0xff
  419281:	fcomp  QWORD PTR [esi]
  419283:	adc    dh,BYTE PTR [esi]
  419285:	adc    al,0x52
  419287:	push   ebx
  419288:	dec    ecx
  419289:	mov    bh,0x87
  41928b:	add    esi,DWORD PTR [edi+ecx*8+0x77bf43]
  419292:	int    0x50
  419294:	leave  
  419295:	mov    dl,0x66
  419297:	adc    bl,bh
  419299:	into   
  41929a:	fcomp  QWORD PTR [ebx+0x7b8798fb]
  4192a0:	out    0xef,al
  4192a2:	add    DWORD PTR [edi+0x1b],edx
  4192a5:	test   eax,0x19aa60b5
  4192aa:	in     eax,dx
  4192ab:	cmp    BYTE PTR [edx+0x2e],ch
  4192ae:	retf   0x6411
  4192b1:	outs   dx,BYTE PTR ds:[esi]
  4192b2:	mov    ss,WORD PTR ds:0xc68cae04
  4192b8:	js     0x4192db
  4192ba:	in     eax,dx
  4192bb:	dec    ebp
  4192bc:	mov    bh,0xbe
  4192be:	call   FWORD PTR [ebp+0x7e]
  4192c1:	push   es
  4192c2:	or     ebx,ebp
  4192c4:	add    ecx,edx
  4192c6:	dec    eax
  4192c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4192c8:	sub    bl,BYTE PTR [ecx+edx*1]
  4192cb:	fdivr  DWORD PTR [eax]
  4192cd:	mov    eax,0x8a4cee7
  4192d2:	pop    edx
  4192d3:	out    dx,al
  4192d4:	test   BYTE PTR [edx],cl
  4192d6:	call   0xbec0:0x3c6331e
  4192dd:	jnp    0x419278
  4192df:	dec    DWORD PTR [edi-0x2c]
  4192e2:	aas    
  4192e3:	and    eax,0xe26b440e
  4192e8:	dec    esi
  4192e9:	sub    DWORD PTR ds:0x8164f317,ebp
  4192ef:	adc    DWORD PTR [edi],esi
  4192f1:	xor    al,0xf
  4192f3:	lea    ebp,[edx+0x29]
  4192f6:	outs   dx,BYTE PTR ds:[esi]
  4192f7:	sbb    dl,BYTE PTR [edi+eax*4+0x2e]
  4192fb:	mov    al,ds:0xca584a19
  419300:	int3   
  419301:	lock push ss
  419303:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419304:	sub    al,0x5f
  419306:	test   DWORD PTR [eax],ebx
  419308:	dec    ebx
  419309:	sub    al,0xc
  41930b:	pop    esp
  41930c:	sub    bh,BYTE PTR [ebp-0x6]
  41930f:	daa    
  419310:	test   eax,0x692127ea
  419315:	mov    ecx,0x3b5b0f8
  41931a:	add    DWORD PTR [ecx+0x104075b8],ebx
  419320:	inc    edx
  419321:	cli    
  419322:	xchg   ecx,eax
  419323:	mov    WORD PTR [eax-0x54757e3f],cs
  419329:	inc    esi
  41932a:	cmp    DWORD PTR [edx+0x63],0xffffffbf
  41932e:	fs cs stos DWORD PTR es:[edi],eax
  419331:	(bad)
  419336:	mov    edi,0x530c8e2d
  41933b:	hlt    
  41933c:	fs js  0x4192e0
  41933f:	int    0x7e
  419341:	stos   DWORD PTR es:[edi],eax
  419342:	xchg   ebp,eax
  419343:	pop    ebx
  419344:	cdq    
  419345:	in     al,dx
  419346:	sbb    dh,BYTE PTR [edi-0x75]
  419349:	sbb    BYTE PTR [ecx+eiz*8-0x23cdd263],bl
  419350:	shl    DWORD PTR [ebx-0x77],cl
  419353:	sub    BYTE PTR [ecx],ah
  419355:	loope  0x419315
  419357:	ss jns 0x4193cf
  41935a:	xchg   edi,eax
  41935b:	cmc    
  41935c:	dec    ecx
  41935d:	sub    esi,DWORD PTR [esi+edi*8-0x37]
  419361:	xchg   esp,eax
  419362:	adc    DWORD PTR [edx],ebx
  419364:	es cwde 
  419366:	cmp    BYTE PTR [eax+0x16],ah
  419369:	dec    eax
  41936a:	enter  0xb127,0x1b
  41936e:	lods   al,BYTE PTR fs:[esi]
  419370:	mov    bp,0x4485
  419374:	scas   eax,DWORD PTR es:[edi]
  419375:	sbb    al,0x92
  419377:	xchg   ecx,eax
  419378:	or     edi,DWORD PTR [eax+eiz*8+0x24793921]
  41937f:	pop    esi
  419380:	jle    0x4193af
  419382:	mov    DWORD PTR [edx+eiz*2+0x0],esp
  419386:	xchg   BYTE PTR [edx+0x725352db],cl
  41938c:	mov    ebp,0x4a4cbed1
  419391:	cmp    ebx,DWORD PTR [ebx-0x67f4a4a2]
  419397:	loope  0x419361
  419399:	les    edx,FWORD PTR [esi-0x5a]
  41939c:	cmp    al,BYTE PTR [edx]
  41939e:	xchg   esp,eax
  41939f:	std    
  4193a0:	add    esi,DWORD PTR [ecx-0x1b83efa3]
  4193a6:	xchg   ecx,eax
  4193a7:	in     al,0x57
  4193a9:	push   eax
  4193aa:	lds    esp,FWORD PTR [ecx+0xb72e472]
  4193b0:	je     0x419402
  4193b2:	(bad)  
  4193b3:	push   edi
  4193b4:	jnp    0x41942e
  4193b6:	shl    BYTE PTR [edx+0x6f],1
  4193b9:	loop   0x4193d2
  4193bb:	mov    fs,WORD PTR [eax-0x44]
  4193be:	int3   
  4193bf:	push   ss
  4193c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4193c1:	dec    edi
  4193c2:	inc    edi
  4193c3:	and    ebx,DWORD PTR [eax]
  4193c5:	pop    esi
  4193c6:	scas   eax,DWORD PTR es:[edi]
  4193c7:	jp     0x4193e8
  4193c9:	or     DWORD PTR [edi+0x20],esi
  4193cc:	xor    bl,BYTE PTR [edx+ecx*4]
  4193cf:	fdivr  DWORD PTR [edi-0x46]
  4193d2:	cmp    al,0xd0
  4193d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4193d5:	sub    al,0x6e
  4193d7:	int    0xc6
  4193d9:	fimul  DWORD PTR [edx]
  4193db:	adc    eax,0x724c17b4
  4193e0:	lahf   
  4193e1:	jns    0x419403
  4193e3:	or     edi,DWORD PTR [ecx]
  4193e5:	(bad)  
  4193e7:	jp     0x419459
  4193e9:	mov    eax,0x19f91eb
  4193ee:	mov    ebp,0xf0f82eac
  4193f3:	push   0xf344cc2a
  4193f8:	mov    dh,0xd1
  4193fa:	aaa    
  4193fb:	sub    ebp,DWORD PTR [ebx-0x1b]
  4193fe:	test   BYTE PTR ds:0xc8ae58db,al
  419404:	xor    BYTE PTR [ebp+0x6663f470],bl
  41940a:	stos   DWORD PTR es:[edi],eax
  41940b:	leave  
  41940c:	fistp  QWORD PTR [esi+0x0]
  41940f:	cmp    BYTE PTR [eax],0x24
  419412:	mov    ebx,DWORD PTR [ebp-0x5de5d961]
  419418:	xlat   BYTE PTR ds:[ebx]
  419419:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41941a:	add    al,0xb1
  41941c:	mov    cl,0x90
  41941f:	imul   esi,esi,0x9f0b3ace
  419425:	loopne 0x41942e
  419427:	daa    
  419428:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419429:	dec    ecx
  41942a:	adc    DWORD PTR [esi],0xe5242b26
  419430:	xor    ecx,esp
  419432:	dec    eax
  419433:	mov    edi,DWORD PTR [eax-0x1181e6]
  419439:	das    
  41943a:	cmp    DWORD PTR [edx+eax*8],edi
  41943d:	mov    ds:0x2bc80911,eax
  419442:	popf   
  419443:	pushf  
  419444:	push   cs
  419445:	loope  0x41941d
  419447:	mov    al,0x65
  419449:	cmc    
  41944a:	out    0xc,eax
  41944c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41944d:	mov    ds:0x23a4a467,al
  419452:	jne    0x4194b9
  419454:	dec    ebx
  419455:	sbb    al,0x4d
  419457:	repnz xchg edx,eax
  419459:	push   ecx
  41945a:	hlt    
  41945b:	fisttp QWORD PTR [eax+0x0]
  41945e:	sbb    ah,cl
  419460:	lods   eax,DWORD PTR ds:[esi]
  419461:	or     eax,0x38121c6c
  419466:	cmp    al,0xdd
  419468:	(bad)
  41946b:	(bad)  
  41946c:	cld    
  41946d:	adc    bx,WORD PTR [edx]
  419470:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419471:	mov    ds:0x2c940912,eax
  419476:	mov    bl,0xe2
  419478:	shr    DWORD PTR [ebx-0x80],cl
  41947b:	fwait
  41947c:	ret    
  41947d:	hlt    
  41947e:	jecxz  0x419413
  419480:	dec    ebp
  419481:	cdq    
  419482:	sbb    BYTE PTR [ebx],0x77
  419485:	mov    eax,0x4136f056
  41948a:	popa   
  41948b:	push   esp
  41948c:	xor    esp,edx
  41948e:	ss repnz rcl edx,0x97
  419493:	mov    cl,0xc4
  419495:	mov    cl,0x1a
  419497:	sub    DWORD PTR [esi],edx
  419499:	ret    0xf49e
  41949c:	(bad)  
  41949d:	mov    ebp,0xc867783e
  4194a2:	push   ebp
  4194a3:	cmp    BYTE PTR [edx],cl
  4194a5:	out    0xc0,al
  4194a7:	(bad)  
  4194a8:	mov    edx,0x565c2d7e
  4194ad:	lahf   
  4194ae:	bound  esp,QWORD PTR [edx*8+0x680673d4]
  4194b5:	sbb    DWORD PTR [esi+0x11],0xe98e9315
  4194bc:	jmp    0x41944f
  4194be:	stc    
  4194bf:	shl    DWORD PTR ds:0xf9137d2b,1
  4194c5:	fist   WORD PTR [ecx+eax*2]
  4194c8:	bound  edi,QWORD PTR [esp+0x2e7f875b]
  4194cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4194d0:	or     al,0xdf
  4194d2:	or     BYTE PTR [ecx],dl
  4194d4:	sub    eax,0x4506ec59
  4194d9:	sbb    esi,edx
  4194db:	or     al,0xef
  4194dd:	xor    ch,cl
  4194df:	adc    esi,ecx
  4194e1:	pop    ds
  4194e2:	push   eax
  4194e3:	sub    esi,edx
  4194e5:	rcr    DWORD PTR [ecx],cl
  4194e7:	and    eax,0x667f20dc
  4194ec:	pop    edi
  4194ed:	mov    eax,0x9ad15704
  4194f2:	lods   al,BYTE PTR ds:[esi]
  4194f3:	push   ds
  4194f4:	push   eax
  4194f5:	mul    DWORD PTR [eax]
  4194f7:	hlt    
  4194f8:	aam    0x6f
  4194fa:	mov    esi,0x33d21427
  4194ff:	stc    
  419500:	push   es
  419501:	cwde   
  419502:	or     eax,0xc1773eac
  419507:	cwde   
  419508:	xchg   ecx,eax
  419509:	mov    al,ds:0xfeba450d
  41950e:	xchg   ebp,eax
  41950f:	jmp    0x41956b
  419511:	xor    eax,0x705c59b
  419516:	test   DWORD PTR [esi+esi*2+0x47468502],esi
  41951d:	shl    cl,cl
  41951f:	daa    
  419520:	out    dx,al
  419521:	into   
  419522:	mov    dh,0x6d
  419524:	and    al,BYTE PTR [esi+ecx*4-0x3735deeb]
  41952b:	neg    ah
  41952d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41952e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41952f:	jecxz  0x4195ae
  419531:	jmp    0x4194db
  419533:	cdq    
  419534:	dec    edx
  419535:	jb     0x419533
  419537:	mov    WORD PTR [edi],?
  419539:	(bad)  
  41953a:	cwde   
  41953b:	pop    ebp
  41953c:	aad    0x29
  41953e:	dec    ecx
  41953f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419540:	adc    ebp,DWORD PTR [edi-0x38aa26ac]
  419546:	cpuid  
  419548:	push   0x14534fce
  41954d:	hlt    
  41954e:	loope  0x419588
  419550:	xor    edx,DWORD PTR [eax+0x7e]
  419553:	std    
  419554:	daa    
  419555:	push   es
  419556:	lock sbb eax,0x825fa38c
  41955c:	inc    edx
  41955d:	mov    edx,0x181b833d
  419562:	sub    eax,DWORD PTR [ebx]
  419564:	pop    esp
  419565:	xchg   esi,eax
  419566:	retf   
  419567:	and    BYTE PTR [esi+0x4],al
  41956a:	and    edi,eax
  41956c:	stc    
  41956d:	cli    
  41956e:	xchg   esp,eax
  41956f:	mov    gs,esp
  419571:	lock xor al,0xc0
  419574:	test   BYTE PTR [esi],bh
  419576:	dec    esi
  419577:	loopne 0x419510
  419579:	jo     0x4195bd
  41957b:	add    eax,0x5c8cbfb7
  419580:	mov    bl,BYTE PTR ds:0xb07a67ff
  419586:	test   al,0x1f
  419588:	repnz sbb BYTE PTR [edi*2-0x92c07c],0xda
  419591:	jo     0x4195c5
  419593:	adc    eax,0xb1a82032
  419598:	daa    
  419599:	dec    ebp
  41959a:	jmp    0x6652c513
  41959f:	fsub   QWORD PTR [eax]
  4195a1:	leave  
  4195a2:	enter  0x1683,0x28
  4195a6:	mov    ds:0xa4ae9cdf,al
  4195ab:	xor    BYTE PTR [esi+eiz*4],ah
  4195ae:	repnz sub DWORD PTR [ecx+0x1b],esi
  4195b2:	imul   DWORD PTR [edi]
  4195b4:	adc    eax,DWORD PTR [ebx-0x4882a4b2]
  4195ba:	mov    ebx,0x924b0bfb
  4195bf:	(bad)  
  4195c0:	mov    bh,0x93
  4195c2:	pop    ds
  4195c3:	dec    esp
  4195c4:	scas   eax,DWORD PTR es:[edi]
  4195c5:	inc    eax
  4195c6:	or     esp,eax
  4195c8:	inc    esp
  4195c9:	adc    dl,dl
  4195cb:	mov    al,0x5c
  4195cd:	jno    0x41957d
  4195cf:	jmp    0x6fd9:0xcfb05a43
  4195d6:	loopne 0x419657
  4195d8:	mov    ecx,0x5f4738d8
  4195dd:	cmp    esi,edx
  4195df:	sbb    dl,BYTE PTR [esi+eiz*4+0x24]
  4195e3:	jg     0x419600
  4195e5:	jl     0x4195c5
  4195e7:	jg     0x41957c
  4195e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4195ea:	mov    edi,0x79902c6a
  4195ef:	jo     0x419626
  4195f1:	pop    DWORD PTR [edi]
  4195f3:	hlt    
  4195f4:	imul   edi,DWORD PTR [edx-0x4d],0xad4cc3f0
  4195fb:	xchg   BYTE PTR [ebp-0x52],cl
  4195fe:	pusha  
  4195ff:	mov    edx,0x5d6bd121
  419604:	xor    DWORD PTR [eax+0x3d],ebx
  419607:	sub    eax,0x40ac4393
  41960c:	add    BYTE PTR [edx+0x57],bh
  41960f:	je     0x41965c
  419611:	jmp    0x41961f
  419613:	fs or  al,0xe
  419616:	mov    edi,0x6c1085b8
  41961b:	cmp    eax,0x45a8ecb3
  419620:	popa   
  419621:	inc    esp
  419622:	xchg   DWORD PTR [ebp+0x44],esp
  419625:	pop    ebx
  419626:	inc    eax
  419627:	xor    al,0x24
  419629:	rcl    cl,1
  41962b:	int    0xbc
  41962d:	pop    esi
  41962e:	fs mov bl,0xe2
  419631:	int3   
  419632:	ins    BYTE PTR es:[edi],dx
  419633:	or     esi,DWORD PTR [ecx-0x79]
  419636:	mov    edi,0xfd243dad
  41963b:	sub    cl,BYTE PTR [edx+0x5f]
  41963e:	lods   al,BYTE PTR ds:[esi]
  41963f:	adc    al,0x45
  419641:	pop    ebp
  419642:	add    eax,0xc285e84c
  419647:	imul   edx,DWORD PTR [ecx+0x24fb7fe4],0xffffff87
  41964e:	icebp  
  41964f:	sub    BYTE PTR [esi],bh
  419651:	push   ds
  419652:	mov    edx,gs
  419654:	mov    ch,dh
  419656:	frstor [ecx+0x61]
  419659:	mov    cl,0x66
  41965b:	pop    edi
  41965c:	sbb    cl,dl
  41965e:	loopne 0x419686
  419660:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419661:	cli    
  419662:	and    BYTE PTR [edx],0xa2
  419665:	cli    
  419666:	mov    ebx,0xfe5cf704
  41966b:	loope  0x4196e7
  41966d:	mov    bh,0x6e
  41966f:	out    0x5e,al
  419671:	adc    BYTE PTR [ecx-0x394a1edb],0x15
  419678:	mov    ss,WORD PTR ds:0x4a08f62f
  41967e:	push   eax
  41967f:	ja     0x41965f
  419681:	sbb    cl,BYTE PTR [ebx-0x2eb545db]
  419687:	mov    esp,DWORD PTR [ebx]
  419689:	pop    ds
  41968a:	push   0x3563e321
  41968f:	jno    0x41968f
  419691:	cmc    
  419692:	retf   0xaf41
  419695:	dec    esi
  419696:	mov    ecx,0x87ef9b98
  41969b:	and    DWORD PTR [edi-0x44268682],esi
  4196a1:	mov    dh,0x9e
  4196a3:	push   ecx
  4196a4:	(bad)  
  4196a5:	xchg   edx,eax
  4196a6:	jne    0x4196d2
  4196a8:	aam    0x54
  4196aa:	arpl   WORD PTR es:[esi],bx
  4196ad:	and    eax,0x36c54aa6
  4196b2:	fist   WORD PTR [eax]
  4196b4:	nop
  4196b5:	adc    DWORD PTR [esi+0x33],eax
  4196b8:	push   edx
  4196b9:	dec    ebp
  4196ba:	(bad)  
  4196bb:	mul    BYTE PTR [eax]
  4196bd:	xchg   ebp,eax
  4196be:	rcr    BYTE PTR [edi],0x5a
  4196c1:	adc    DWORD PTR [esi+0x57],esp
  4196c4:	pop    eax
  4196c5:	aaa    
  4196c6:	outs   dx,BYTE PTR ds:[esi]
  4196c7:	mov    cl,0x19
  4196c9:	adc    ch,BYTE PTR [edx]
  4196cb:	jmp    0x41973d
  4196cd:	sbb    cl,bh
  4196cf:	mov    esp,0x84369599
  4196d4:	pusha  
  4196d5:	inc    eax
  4196d6:	icebp  
  4196d7:	lods   eax,DWORD PTR ds:[esi]
  4196d8:	dec    eax
  4196d9:	nop
  4196da:	cli    
  4196db:	inc    DWORD PTR [ebp+0x10]
  4196de:	mov    bh,BYTE PTR [edx]
  4196e0:	stc    
  4196e1:	xor    edx,DWORD PTR [edx-0x12]
  4196e4:	jbe    0x419741
  4196e6:	fdiv   DWORD PTR [ecx-0x9bae477]
  4196ec:	int    0x2f
  4196ee:	jae    0x4196b2
  4196f0:	cmp    eax,DWORD PTR [eax+0x7e]
  4196f3:	push   0xffffff97
  4196f5:	ficom  WORD PTR [ebp+0x5536c875]
  4196fb:	call   0xd2d2:0xe4e8a761
  419702:	pushf  
  419703:	pop    ebx
  419704:	pop    ds
  419705:	loopne 0x419754
  419707:	imul   edx,DWORD PTR [esi],0x71
  41970a:	(bad)  
  41970b:	std    
  41970c:	lahf   
  41970d:	es std 
  41970f:	or     DWORD PTR [edx-0x1216f84f],0x12
  419716:	mov    cl,BYTE PTR ds:0x193e2019
  41971c:	mov    al,ds:0x5f9bcabe
  419721:	and    DWORD PTR [eax+0x2fc9b66],edi
  419727:	cs out 0x2b,al
  41972a:	push   esi
  41972b:	or     eax,0xfa68d8b6
  419730:	pop    esi
  419731:	lahf   
  419732:	push   0x7818315b
  419737:	in     al,dx
  419738:	adc    eax,0xdef55dbd
  41973d:	xchg   ebx,eax
  41973e:	iret   
  41973f:	dec    ebx
  419740:	sbb    bl,bh
  419742:	test   al,0xc5
  419744:	or     eax,0xd883ddff
  419749:	bound  edi,QWORD PTR [ebx]
  41974b:	popf   
  41974c:	out    dx,eax
  41974d:	cld    
  41974e:	or     DWORD PTR [ecx-0x16],0xcb4cd85
  419755:	push   ebx
  419756:	push   esp
  419757:	xor    esp,ecx
  419759:	mov    dh,0x1c
  41975b:	pusha  
  41975c:	add    al,0x8
  41975e:	pop    eax
  41975f:	rcr    BYTE PTR [esi+0x13],0x91
  419763:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419764:	sbb    DWORD PTR es:[ebp+0x73b7bc55],esp
  41976b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41976c:	mov    eax,0x506db656
  419771:	push   esi
  419772:	mov    esi,0x95b1bff6
  419777:	sbb    BYTE PTR [edx-0x49],ah
  41977a:	pop    esp
  41977b:	pop    edx
  41977c:	pop    ecx
  41977d:	jp     0x419791
  41977f:	mov    al,0xe4
  419781:	imul   esp,DWORD PTR [ebx+0x6c],0x3d
  419785:	gs pop esp
  419787:	jmp    0x41972a
  419789:	(bad)  
  41978b:	arpl   sp,di
  41978d:	cmp    BYTE PTR [ecx+0x2cd0db79],dh
  419793:	or     bl,BYTE PTR [esp+eax*2]
  419796:	mov    edi,0x354405ca
  41979b:	nop
  41979c:	pushf  
  41979d:	icebp  
  41979e:	pop    esp
  41979f:	xor    BYTE PTR [eax],bl
  4197a1:	nop
  4197a2:	scas   al,BYTE PTR es:[edi]
  4197a3:	ds cmp eax,0xedbaab0c
  4197a9:	xchg   ah,bh
  4197ab:	inc    edx
  4197ac:	aaa    
  4197ad:	xchg   ebp,eax
  4197ae:	mov    esi,0xc3c5bab1
  4197b3:	or     eax,0x65c1ae48
  4197b8:	(bad)  
  4197b9:	ja     0x419753
  4197bb:	lahf   
  4197bc:	stc    
  4197bd:	out    dx,eax
  4197be:	adc    DWORD PTR [ebx+0x39a8554c],edx
  4197c4:	jmp    0xcfe3dbeb
  4197c9:	fstp   st(7)
  4197cb:	nop
  4197cc:	pinsrw mm5,WORD PTR [ebx+0x60452cf9],0x53
  4197d4:	data16 mov dl,0x7a
  4197d7:	mov    WORD PTR [ebp+0x49],es
  4197da:	or     esi,DWORD PTR [esi+0x5a]
  4197dd:	mov    edi,eax
  4197df:	(bad)  
  4197e0:	cmp    esp,DWORD PTR [eax+0x40]
  4197e3:	stc    
  4197e4:	cmc    
  4197e5:	xchg   ebx,eax
  4197e6:	push   ebp
  4197e7:	lock and al,0xb4
  4197ea:	outs   dx,DWORD PTR ds:[esi]
  4197eb:	mov    eax,0xcdb75fc2
  4197f0:	push   ebp
  4197f1:	fwait
  4197f2:	stc    
  4197f3:	mov    esi,0x2e2a9eaf
  4197f8:	inc    edx
  4197f9:	sbb    BYTE PTR [edx],bh
  4197fb:	jmp    0x63f6e905
  419800:	idiv   DWORD PTR [eax+0x31]
  419803:	mov    dl,0x27
  419805:	pop    ds
  419806:	cwde   
  419807:	and    ch,al
  419809:	dec    edi
  41980a:	dec    ebp
  41980b:	mov    eax,ds:0x429ab615
  419810:	inc    edx
  419811:	jbe    0x419829
  419813:	fisttp DWORD PTR [edx+0x43]
  419816:	(bad)  [ebp+0x31f638bb]
  41981c:	imul   eax,esp,0x45
  41981f:	mul    DWORD PTR [edx+ebp*1+0x44e6b7d9]
  419826:	jmp    0x41985c
  419828:	or     eax,0x1c2c9e47
  41982d:	jl     0x4197bb
  41982f:	popa   
  419830:	mov    es,WORD PTR [edx+0x2a]
  419833:	sbb    al,0x4a
  419835:	add    esi,0xffffffa5
  419838:	mov    ebx,0x92105733
  41983d:	je     0x419866
  41983f:	mov    esp,0x9d9761a1
  419844:	xchg   esp,eax
  419845:	ret    0x9995
  419848:	lea    ebx,[edx-0x5c45fcf2]
  41984e:	lds    esi,FWORD PTR [esi-0x43]
  419851:	push   ebp
  419852:	push   esi
  419853:	(bad)  
  419855:	jle    0x4197e1
  419857:	push   ecx
  419858:	xor    al,0xc2
  41985a:	cli    
  41985b:	int3   
  41985c:	pop    esi
  41985d:	(bad)  
  41985e:	aad    0x51
  419860:	cli    
  419861:	pop    eax
  419862:	inc    edx
  419863:	popa   
  419864:	fst    st(4)
  419866:	(bad)  
  419867:	mov    dl,0x26
  419869:	mov    dl,0x21
  41986b:	pop    esi
  41986c:	xchg   esi,eax
  41986d:	jb     0x41980e
  41986f:	(bad)  
  419870:	(bad)  
  419871:	scas   eax,DWORD PTR es:[edi]
  419872:	xor    edi,DWORD PTR [eax+eiz*2-0x591030d2]
  419879:	push   ecx
  41987a:	fstp   DWORD PTR [ebx]
  41987c:	cmp    eax,0xe13142f2
  419881:	test   ch,0x4
  419884:	mov    edi,0xb2c7488f
  419889:	jp     0x4198fa
  41988b:	mov    gs,WORD PTR [ecx+edx*4+0x31bf1504]
  419892:	mov    al,0xdd
  419894:	popa   
  419895:	ins    DWORD PTR es:[edi],dx
  419896:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419897:	xchg   esi,eax
  419898:	pop    edx
  419899:	sub    al,0x8
  41989b:	mov    DWORD PTR [edx],esp
  41989d:	dec    eax
  41989e:	push   edx
  41989f:	in     eax,dx
  4198a0:	dec    esp
  4198a1:	adc    dl,0x8e
  4198a4:	pop    es
  4198a5:	jbe    0x41983c
  4198a7:	mov    edx,0x3c51d074
  4198ac:	scas   al,BYTE PTR es:[edi]
  4198ad:	pop    ebp
  4198ae:	dec    eax
  4198af:	shr    DWORD PTR [esi-0x3df8e65],0xa0
  4198b6:	push   ds
  4198b7:	dec    esp
  4198b8:	call   0x72d2:0xf6e91d8c
  4198bf:	fmul   QWORD PTR [eax+0x9]
  4198c2:	frstor gs:[edx]
  4198c5:	fmul   st(6),st
  4198c7:	int    0x2a
  4198c9:	or     ch,BYTE PTR [edi-0x77]
  4198cc:	lock add al,0xef
  4198cf:	xchg   BYTE PTR [esp+eax*4+0x2],ch
  4198d3:	or     al,0x1d
  4198d5:	js     0x419917
  4198d7:	push   eax
  4198d8:	outs   dx,BYTE PTR ds:[esi]
  4198d9:	push   ebx
  4198da:	sbb    DWORD PTR [esp+ecx*8],ecx
  4198dd:	mov    eax,ds:0x4b83da8
  4198e2:	loopne 0x4198cd
  4198e4:	add    cl,dl
  4198e6:	cld    
  4198e7:	and    eax,0x9d555229
  4198ec:	stc    
  4198ed:	xor    ah,bl
  4198ef:	xchg   ebx,eax
  4198f0:	in     al,0x55
  4198f2:	add    esp,DWORD PTR [ecx]
  4198f4:	add    eax,0x8478e658
  4198f9:	call   0xa9ae:0x20e24354
  419900:	push   0xffffffdb
  419902:	lea    esi,[ecx]
  419904:	enter  0xf5ed,0x71
  419908:	and    DWORD PTR [eax-0x2],esi
  41990b:	xchg   esp,eax
  41990c:	xlat   BYTE PTR ds:[ebx]
  41990d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41990e:	fisub  WORD PTR [ecx+0x8ad08ca]
  419914:	push   edx
  419915:	int3   
  419916:	xor    DWORD PTR [ebx],0xfffffff2
  419919:	mov    dl,0xf0
  41991b:	xchg   esi,eax
  41991c:	add    eax,0x3ffa5971
  419921:	rol    DWORD PTR [eax-0x752d29b],cl
  419927:	lock push 0x40
  41992a:	mov    eax,ds:0x24d5e6d9
  41992f:	or     ah,BYTE PTR fs:[edi+ecx*4+0x6da7cf33]
  419937:	xor    esi,DWORD PTR [ebx-0x62]
  41993a:	mov    ebp,0x299823d0
  41993f:	into   
  419940:	sub    dh,ch
  419942:	lds    edx,FWORD PTR [eax+0x10]
  419945:	sub    BYTE PTR [eax-0x4f],0x41
  419949:	mov    ah,0x35
  41994b:	mov    al,ds:0x3571ee6c
  419950:	in     eax,dx
  419951:	push   ecx
  419952:	sbb    BYTE PTR [esi+esi*8+0x173aefb4],0x94
  41995a:	cmp    DWORD PTR [ecx],esp
  41995c:	mov    BYTE PTR [esi],dh
  41995e:	dec    ebx
  41995f:	mov    WORD PTR [ebx],es
  419961:	sub    eax,0x9bbdd288
  419966:	mov    ah,0xd1
  419968:	mov    ebx,0xec780931
  41996d:	sti    
  41996e:	jmp    0x2d9b:0xfe207ad1
  419975:	fild   DWORD PTR [ebx-0x50395e15]
  41997b:	outs   dx,DWORD PTR ds:[esi]
  41997c:	mov    esp,0xa8cbfdd2
  419981:	cwde   
  419982:	rol    DWORD PTR [edx],1
  419984:	call   0x1319:0xd3f2713f
  41998b:	jo     0x4199ca
  41998d:	pop    eax
  41998e:	mov    dh,0xbc
  419990:	pop    ebx
  419991:	popf   
  419992:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419993:	jmp    0x3679:0xa9077dd
  41999a:	fucomip st,st(4)
  41999c:	jg     0x419990
  41999e:	sahf   
  41999f:	xor    cl,BYTE PTR [edx-0xef95f1a]
  4199a5:	sbb    esp,esi
  4199a7:	adc    ecx,ecx
  4199a9:	jb     0x4199cd
  4199ab:	push   0x58e6d22e
  4199b0:	mov    edx,0x51b9ad27
  4199b5:	out    0x10,eax
  4199b7:	(bad)  
  4199b8:	mov    al,ds:0xb6fa9c14
  4199bd:	xchg   esp,eax
  4199be:	mov    ch,al
  4199c0:	pop    ds
  4199c1:	cld    
  4199c2:	pop    edx
  4199c3:	imul   eax,DWORD PTR [ecx-0x10bb009],0x53
  4199ca:	enter  0x198e,0xa2
  4199ce:	lods   al,BYTE PTR ds:[esi]
  4199cf:	adc    ebx,DWORD PTR [ebx]
  4199d1:	mov    cs,WORD PTR [edx+0x16e4c87d]
  4199d7:	(bad)  
  4199d8:	mov    al,ds:0x9eea5dc5
  4199dd:	and    esp,DWORD PTR [ebx-0x34]
  4199e0:	rol    BYTE PTR [edi-0x1b1250e],cl
  4199e6:	(bad)  
  4199e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4199e8:	loopne 0x41996c
  4199ea:	mov    bh,0xa
  4199ec:	loope  0x419a00
  4199ee:	shl    ch,0x32
  4199f1:	lea    ebp,[ecx+0x6f]
  4199f4:	lods   al,BYTE PTR ds:[esi]
  4199f5:	(bad)  
  4199f6:	or     BYTE PTR [edi-0x1],cl
  4199f9:	popf   
  4199fa:	pusha  
  4199fb:	dec    esp
  4199fc:	add    bh,BYTE PTR [eax-0x74972bca]
  419a02:	es mov edi,0xfbb97271
  419a08:	sti    
  419a09:	(bad)  
  419a0a:	mov    eax,ds:0x920a1233
  419a0f:	pop    eax
  419a10:	loop   0x4199fe
  419a12:	call   0x8bcd59fc
  419a17:	push   edi
  419a18:	jb     0x4199af
  419a1a:	leave  
  419a1b:	fldenv [edi-0x323fef11]
  419a21:	mov    al,ds:0x369d193d
  419a26:	mov    ds:0xb1d8393,al
  419a2b:	sbb    BYTE PTR [edx+0x424ec1d1],al
  419a31:	test   ebx,ebp
  419a33:	(bad)  
  419a34:	out    dx,al
  419a35:	aas    
  419a36:	mov    eax,DWORD PTR [esi]
  419a38:	pop    ebx
  419a39:	loopne 0x419a28
  419a3b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419a3c:	sahf   
  419a3d:	and    bl,BYTE PTR [esi+edx*1+0x284ae6fd]
  419a44:	std    
  419a45:	je     0x419a48
  419a47:	mov    DWORD PTR [esi],ebp
  419a49:	add    al,0x1
  419a4b:	inc    ebp
  419a4c:	push   esp
  419a4d:	ss ja  0x419a6c
  419a50:	jae    0x4199df
  419a52:	push   edi
  419a53:	or     edx,DWORD PTR cs:[eax+0x47]
  419a57:	xchg   ecx,eax
  419a58:	mov    ebx,0x3b6c920f
  419a5d:	push   ebx
  419a5e:	pop    edx
  419a5f:	(bad)  
  419a60:	mov    ecx,edx
  419a62:	js     0x419a7f
  419a64:	fwait
  419a65:	pop    ss
  419a66:	bound  esp,QWORD PTR [ecx-0x7c]
  419a69:	stc    
  419a6a:	dec    ebp
  419a6b:	outs   dx,DWORD PTR ds:[esi]
  419a6c:	aam    0x15
  419a6e:	test   BYTE PTR [ebp+0x51],bh
  419a71:	(bad)  [eax]
  419a73:	outs   dx,DWORD PTR ds:[esi]
  419a74:	fwait
  419a75:	mov    dh,BYTE PTR [ebx]
  419a77:	cmp    dh,BYTE PTR [eax+ebx*2]
  419a7a:	inc    ecx
  419a7b:	inc    ebx
  419a7c:	imul   ebp,DWORD PTR [esi*1+0x5c98a03c],0xd5d309bd
  419a87:	fisttp WORD PTR [edx+edi*1-0x4b0899d0]
  419a8e:	jmp    0x5ad2:0xb3a0aab9
  419a95:	into   
  419a96:	mov    eax,ds:0xbf2befed
  419a9b:	mov    WORD PTR [edi+ebp*4-0x3a54247e],fs
  419aa2:	fs and esi,edx
  419aa5:	popa   
  419aa6:	mov    ah,ch
  419aa8:	adc    al,0x1a
  419aaa:	imul   ecx,ebp,0xffffff9d
  419aad:	shr    BYTE PTR [ebx],1
  419aaf:	out    0x81,eax
  419ab1:	mov    al,0x9a
  419ab3:	cs jge 0x419b12
  419ab6:	pop    edi
  419ab7:	and    al,al
  419ab9:	(bad)  
  419abb:	and    eax,0x27f53e1f
  419ac0:	in     al,0xfe
  419ac2:	stos   BYTE PTR es:[edi],al
  419ac3:	arpl   WORD PTR [edx],dx
  419ac5:	mov    ds:0xddfbdac4,eax
  419aca:	adc    DWORD PTR [edx],edx
  419acc:	mov    dh,0x71
  419ace:	fisubr WORD PTR [ecx]
  419ad0:	xchg   DWORD PTR [ebx+0x57],ebp
  419ad3:	imul   DWORD PTR gs:[edi+ebp*2+0x703fc47c]
  419adb:	lock add bh,BYTE PTR [ecx-0xb]
  419adf:	pusha  
  419ae0:	xor    BYTE PTR [eax-0x9],ah
  419ae3:	cmp    dh,bl
  419ae5:	mov    ds:0xe87ee095,al
  419aea:	and    al,0x42
  419aec:	stc    
  419aed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419aee:	jae    0x419b02
  419af0:	nop
  419af1:	push   ebx
  419af2:	shl    ebp,1
  419af4:	test   DWORD PTR [eax+0x167e21a8],edi
  419afa:	or     al,0x0
  419afc:	out    dx,eax
  419afd:	scas   eax,DWORD PTR es:[edi]
  419afe:	lahf   
  419aff:	fsubr  QWORD PTR [esi-0x19]
  419b02:	push   0xffffff84
  419b04:	or     cl,bl
  419b06:	retf   0xa2f8
  419b09:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419b0a:	sbb    esp,DWORD PTR [ecx+0x69dcd878]
  419b10:	imul   esi,DWORD PTR [ebp-0x4e65b573],0x50985817
  419b1a:	in     eax,0x15
  419b1c:	jmp    DWORD PTR [edi+edi*2]
  419b1f:	jle    0x419ab8
  419b21:	shl    BYTE PTR [eax],1
  419b23:	mov    esp,0x5ff5aa9f
  419b28:	outs   dx,BYTE PTR ds:[esi]
  419b29:	jmp    0x2049:0xd2eb22d1
  419b30:	inc    edx
  419b31:	push   cs
  419b32:	fs ret 0x781a
  419b36:	xor    DWORD PTR [ecx],ebx
  419b38:	cmc    
  419b39:	fsubr  DWORD PTR [ebp+0x1559315b]
  419b3f:	adc    edi,DWORD PTR [edi+0x39e1e301]
  419b45:	sbb    eax,0xea67c3b1
  419b4a:	mov    DWORD PTR [ebx],esi
  419b4c:	or     al,0xe6
  419b4e:	sbb    BYTE PTR [esp+eax*4+0x6d],dh
  419b52:	mov    ds:0x102b3a1,al
  419b57:	(bad)  
  419b58:	jmp    0x9cac:0xe705e1d2
  419b5f:	mov    eax,0xecd0258
  419b64:	fadd   st(1),st
  419b66:	sti    
  419b67:	fmulp  st(0),st
  419b69:	outs   dx,BYTE PTR ds:[esi]
  419b6a:	daa    
  419b6b:	mov    ebp,0x36491eec
  419b70:	xor    BYTE PTR [edx],dl
  419b72:	enter  0x7322,0xa7
  419b76:	sets   bl
  419b79:	pusha  
  419b7a:	xor    eax,0xcfe3f5a1
  419b7f:	sub    al,0x2d
  419b81:	sti    
  419b82:	push   0xb957095b
  419b87:	mov    edi,cs
  419b89:	cmp    eax,DWORD PTR ds:0xf77be70
  419b8f:	int3   
  419b90:	mov    WORD PTR [edx-0x5e9af7ac],gs
  419b96:	outs   dx,WORD PTR ds:[esi]
  419b98:	inc    ebp
  419b99:	xor    DWORD PTR [ebp+0x4e75bf0c],esi
  419b9f:	ss push 0xaac72f14
  419ba5:	jmp    0x419c25
  419ba7:	mov    ds:0x159926c2,eax
  419bac:	daa    
  419bad:	mov    edx,0xe21fd3a8
  419bb2:	cmp    esp,DWORD PTR ds:0x1279f0e8
  419bb8:	adc    BYTE PTR [esi],0x22
  419bbb:	inc    esp
  419bbc:	mov    edx,0x3604f482
  419bc1:	xchg   ecx,eax
  419bc2:	out    0x2b,eax
  419bc4:	(bad)
  419bc8:	pushf  
  419bc9:	in     al,dx
  419bca:	push   eax
  419bcb:	fbstp  TBYTE PTR ds:[edi]
  419bce:	retf   
  419bcf:	xor    BYTE PTR [eax-0x2b],cl
  419bd2:	push   ebp
  419bd3:	call   0x4499:0x1a159705
  419bda:	stc    
  419bdb:	mov    BYTE PTR [ebx],bl
  419bdd:	hlt    
  419bde:	into   
  419bdf:	or     al,0x99
  419be1:	out    dx,eax
  419be2:	js     0x419bdb
  419be4:	xor    ah,BYTE PTR [eax+ebp*4+0x26]
  419be8:	or     eax,0xbb367bb8
  419bed:	jns    0x419c14
  419bef:	mov    dl,bl
  419bf1:	sbb    bl,BYTE PTR [esi+0x73]
  419bf4:	jmp    0xbb7030ee
  419bf9:	push   ds
  419bfa:	retf   
  419bfb:	loope  0x419b85
  419bfd:	xchg   edx,eax
  419bfe:	gs mov ebx,0x758be181
  419c04:	jecxz  0x419c71
  419c06:	ds cwde 
  419c08:	xchg   BYTE PTR [esi+0x63],dh
  419c0b:	retf   
  419c0c:	fwait
  419c0d:	jmp    0x8975:0xc37d5fbc
  419c14:	cld    
  419c15:	retf   
  419c16:	enter  0x60ed,0xaa
  419c1a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419c1b:	test   al,0x75
  419c1d:	jle    0x419c02
  419c1f:	xor    ecx,DWORD PTR [esi+0x7d]
  419c22:	cmp    al,0xc7
  419c24:	push   ebx
  419c25:	cmp    BYTE PTR [edi],ch
  419c27:	leave  
  419c28:	sub    DWORD PTR [esi+edx*2+0x27148940],esp
  419c2f:	fst    DWORD PTR [ecx-0x67]
  419c32:	or     esp,DWORD PTR [ecx-0x50f53608]
  419c38:	mov    cs,WORD PTR [edx+0x1ca9d501]
  419c3e:	popa   
  419c3f:	mov    cl,0xef
  419c41:	hlt    
  419c42:	scas   eax,DWORD PTR es:[edi]
  419c43:	retf   
  419c44:	enter  0xeaba,0x97
  419c48:	xchg   esi,eax
  419c49:	jnp    0x419c9c
  419c4b:	rol    ch,0x44
  419c4e:	test   eax,0xc7359b9c
  419c53:	mov    ebx,0xbe249de
  419c58:	ror    al,cl
  419c5a:	add    eax,0x6ba0a611
  419c5f:	mov    ds,WORD PTR [edx]
  419c61:	stos   BYTE PTR es:[edi],al
  419c62:	push   ds
  419c63:	in     eax,0x60
  419c65:	add    ebp,0xffffffbe
  419c68:	pusha  
  419c69:	mov    dh,cl
  419c6b:	mov    esi,DWORD PTR [edx-0x42]
  419c6e:	pop    edi
  419c6f:	les    eax,FWORD PTR [esi]
  419c71:	(bad)  
  419c73:	pop    edx
  419c74:	cmp    al,0xfd
  419c76:	adc    eax,0xe12e9a5
  419c7b:	hlt    
  419c7c:	jge    0x419c14
  419c7e:	mov    eax,ds:0xc19b6386
  419c83:	push   ds
  419c84:	repz mov ch,0x94
  419c87:	push   edi
  419c88:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419c89:	and    BYTE PTR [esi+0x751c471],0xf1
  419c90:	push   ecx
  419c91:	and    eax,0xd692acca
  419c96:	adc    DWORD PTR [edx+esi*4],0xffffff89
  419c9a:	into   
  419c9b:	(bad)  
  419c9c:	xchg   ebp,eax
  419c9d:	sbb    bh,BYTE PTR [edx]
  419c9f:	pop    ecx
  419ca0:	push   ebx
  419ca1:	in     al,0x17
  419ca3:	mov    bl,0x5c
  419ca5:	retf   0x1987
  419ca8:	enter  0xe882,0x50
  419cac:	jne    0x419c69
  419cae:	pop    ss
  419caf:	mov    eax,ds:0xfa5d3e51
  419cb4:	and    ebp,0xd72e1caf
  419cba:	mov    cl,0x21
  419cbc:	data16 jle 0x419cc7
  419cbf:	cmp    al,0xc3
  419cc1:	cwde   
  419cc2:	imul   esi,DWORD PTR [edi-0x1278e89f],0x40
  419cc9:	push   esi
  419cca:	shr    BYTE PTR [ebx],cl
  419ccc:	adc    DWORD PTR [edx+edi*8-0x58],edi
  419cd0:	xor    eax,0xbdb8f4b0
  419cd5:	scas   eax,DWORD PTR es:[edi]
  419cd6:	fsub   QWORD PTR [esi+edi*8+0x50cbc636]
  419cdd:	fwait
  419cde:	sbb    ebx,DWORD PTR [ecx-0x31]
  419ce1:	iret   
  419ce2:	dec    esi
  419ce3:	pop    ss
  419ce4:	push   esi
  419ce5:	outs   dx,DWORD PTR ds:[esi]
  419ce6:	call   0xe677e6a
  419ceb:	fwait
  419cec:	out    dx,al
  419ced:	loop   0x419c95
  419cef:	popf   
  419cf0:	jnp    0x419d58
  419cf2:	mov    al,0x4b
  419cf4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419cf5:	jp     0x419d5d
  419cf7:	call   edi
  419cf9:	shr    BYTE PTR [ebp+ebp*2-0x29f26bba],cl
  419d00:	ss xor cl,dh
  419d03:	jmp    FWORD PTR [edi-0x59]
  419d06:	push   edx
  419d07:	mov    al,0xc5
  419d09:	inc    edx
  419d0a:	test   eax,0x920771de
  419d0f:	aad    0x77
  419d11:	mov    ah,0xd3
  419d13:	lea    ebx,[ecx]
  419d15:	push   edi
  419d16:	dec    esp
  419d17:	mov    esi,0xb73fff13
  419d1c:	addr16 push edi
  419d1e:	int3   
  419d1f:	sbb    bh,bl
  419d21:	and    edi,DWORD PTR [eax+0x71]
  419d24:	jl     0x419da5
  419d26:	(bad)  
  419d27:	scas   al,BYTE PTR es:[edi]
  419d28:	out    0x1a,al
  419d2a:	cmp    al,0x1e
  419d2c:	adc    edx,ebp
  419d2e:	pushf  
  419d2f:	ret    
  419d30:	add    edi,DWORD PTR [ecx+0x2f]
  419d33:	xor    ebp,DWORD PTR [edi+0x3ab37c8d]
  419d39:	pop    ebp
  419d3a:	inc    eax
  419d3b:	es adc eax,0x870fe657
  419d41:	lock and al,0x7b
  419d44:	pop    esi
  419d45:	sub    al,0x6
  419d47:	test   eax,0x22b30ad5
  419d4c:	add    eax,0xb2aea76d
  419d51:	sub    DWORD PTR [esi-0x479ac2f4],esp
  419d57:	xchg   esp,eax
  419d58:	icebp  
  419d59:	sub    DWORD PTR [eax],0xe30db3c7
  419d5f:	dec    ecx
  419d60:	in     al,dx
  419d61:	xchg   BYTE PTR [ebp-0x55],bl
  419d64:	int    0x0
  419d66:	ror    DWORD PTR [ecx-0x27],1
  419d69:	cmp    esi,esi
  419d6b:	jae    0x419d81
  419d6d:	std    
  419d6e:	(bad)  
  419d6f:	pop    ecx
  419d70:	ror    BYTE PTR [ebx],1
  419d72:	inc    esp
  419d73:	xor    al,0xe5
  419d75:	xor    BYTE PTR [esi+0xc3bbfdc],dl
  419d7b:	retf   
  419d7c:	push   eax
  419d7d:	add    dh,BYTE PTR [esi+0x5a254220]
  419d83:	div    ch
  419d85:	inc    edi
  419d86:	jl     0x419d28
  419d88:	ja     0x419dca
  419d8a:	rcl    DWORD PTR [ecx+0x3c0f3204],1
  419d90:	(bad)  
  419d91:	mov    eax,ds:0xade05dd2
  419d96:	xchg   ebx,eax
  419d97:	(bad)  
  419d98:	aaa    
  419d99:	xchg   BYTE PTR [eax],al
  419d9b:	mov    cl,0xfe
  419d9d:	stos   DWORD PTR es:[edi],eax
  419d9e:	xor    BYTE PTR [edx-0x1d],dh
  419da1:	jg     0x419dc5
  419da3:	adc    DWORD PTR [edi+0x1e],esi
  419da6:	mov    DWORD PTR [esi-0xa0140a8],ecx
  419dac:	push   esi
  419dad:	repz out 0xc2,al
  419db0:	or     dl,BYTE PTR [eax]
  419db2:	imul   eax,DWORD PTR [ecx],0x26494192
  419db8:	cmp    DWORD PTR [ecx+0x51344184],esp
  419dbe:	sbb    esp,ecx
  419dc0:	aad    0x98
  419dc2:	aam    0x2a
  419dc4:	retf   
  419dc5:	sub    bl,ch
  419dc7:	pop    ds
  419dc8:	or     DWORD PTR [ebp+0x54],edi
  419dcb:	mov    bh,0x5a
  419dcd:	inc    edx
  419dce:	fstp   QWORD PTR [esi]
  419dd0:	daa    
  419dd1:	lahf   
  419dd2:	push   esp
  419dd3:	inc    esi
  419dd4:	retf   
  419dd5:	imul   esi,DWORD PTR [edx],0xcf93fb55
  419ddb:	push   ebx
  419ddc:	out    dx,al
  419ddd:	sti    
  419dde:	inc    esi
  419ddf:	cmp    al,0x74
  419de1:	and    BYTE PTR [edi],0x8f
  419de4:	sahf   
  419de5:	shr    cl,cl
  419de7:	hlt    
  419de8:	mov    ds,WORD PTR [edx+0x1ab0e26a]
  419dee:	fild   DWORD PTR [edi+0x24]
  419df1:	dec    edx
  419df2:	or     esi,ecx
  419df4:	pop    ebx
  419df5:	retf   0xa2b
  419df8:	(bad)  
  419dfa:	retf   
  419dfb:	fisubr DWORD PTR [edi+0x6c8f6337]
  419e01:	and    DWORD PTR [edx],ebp
  419e03:	icebp  
  419e04:	popf   
  419e05:	sbb    DWORD PTR [ebx+0x39d590a2],edx
  419e0b:	fisttp QWORD PTR [edx-0x185d29b3]
  419e11:	lock into 
  419e13:	mov    DWORD PTR [ebp+0x4cd9dcbf],ebx
  419e19:	adc    al,0x5e
  419e1b:	add    BYTE PTR [edi+0xaed2076],bh
  419e21:	jae    0x419e2c
  419e23:	fld    DWORD PTR [edx-0x58]
  419e26:	mov    eax,0xa6924ac8
  419e2b:	mov    ds:0xd5b4bdc6,eax
  419e30:	lea    ecx,[edi]
  419e32:	repz mov ecx,0x9f6d0889
  419e38:	jne    0x419e8f
  419e3a:	clc    
  419e3b:	and    bl,ch
  419e3d:	dec    ecx
  419e3e:	sbb    DWORD PTR [ecx],ebx
  419e40:	sar    DWORD PTR [esi+0x4f],cl
  419e43:	in     al,dx
  419e44:	push   edx
  419e45:	lahf   
  419e46:	dec    eax
  419e47:	inc    ebx
  419e48:	cdq    
  419e49:	mov    cl,0x40
  419e4b:	lock xor BYTE PTR [ebx-0x68],al
  419e4f:	fs dec edi
  419e51:	pop    edx
  419e52:	inc    edi
  419e53:	mov    ds:0xc4eeab7,al
  419e58:	adc    esp,DWORD PTR [esi-0x30659956]
  419e5e:	les    ebx,FWORD PTR [ebx+edx*1]
  419e61:	retf   
  419e62:	jmp    0x4d20371c
  419e67:	test   eax,0x57d57819
  419e6c:	fsub   DWORD PTR ds:0x3d959773
  419e72:	(bad)  
  419e73:	adc    eax,0x37c010de
  419e78:	iret   
  419e79:	scas   al,BYTE PTR es:[edi]
  419e7a:	inc    ebp
  419e7b:	icebp  
  419e7c:	or     al,0x4f
  419e7e:	ins    DWORD PTR es:[edi],dx
  419e7f:	jg     0x419e7d
  419e81:	imul   ecx,DWORD PTR [ebp+0x2b],0xffffff9a
  419e85:	jo     0x419eaf
  419e87:	inc    edx
  419e88:	arpl   WORD PTR gs:[eax],dx
  419e8b:	adc    edx,esi
  419e8d:	fcom   QWORD PTR [eax+0x42]
  419e90:	pop    edx
  419e91:	mov    eax,ds:0x86105fb1
  419e96:	mov    eax,ds:0x78365a4
  419e9b:	pop    edi
  419e9c:	sahf   
  419e9d:	arpl   WORD PTR [ecx+0x18cacd97],cx
  419ea3:	jno    0x419ef3
  419ea5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419ea6:	sub    DWORD PTR [ebx+0x51],esi
  419ea9:	fbstp  TBYTE PTR [ebp+edx*8-0x13c72986]
  419eb0:	jl     0x419ed1
  419eb2:	add    ah,BYTE PTR [edi-0x43]
  419eb5:	repz jae 0x419f05
  419eb8:	lahf   
  419eb9:	imul   esp,DWORD PTR [edx+eiz*4+0x31],0xc
  419ebe:	dec    ebx
  419ebf:	iret   
  419ec0:	sbb    eax,0xf140e10f
  419ec5:	jo     0x419f2a
  419ec7:	xchg   edx,eax
  419ec8:	das    
  419ec9:	(bad)  
  419eca:	and    BYTE PTR [ecx],bl
  419ecc:	jo     0x419f34
  419ece:	ins    DWORD PTR es:[edi],dx
  419ecf:	pop    ebp
  419ed0:	mov    ds:0xd156d756,eax
  419ed5:	add    al,0xa8
  419ed7:	inc    edx
  419ed8:	add    DWORD PTR [edi+0x296c30e7],edx
  419ede:	push   ebp
  419edf:	push   es
  419ee0:	into   
  419ee1:	(bad)  
  419ee2:	mov    al,ds:0x35f2a36a
  419ee7:	fistp  QWORD PTR [esi]
  419ee9:	lods   eax,DWORD PTR es:[esi]
  419eeb:	fdiv   QWORD PTR [eax-0x5b7f5529]
  419ef1:	mov    ds:0xfcc9dae9,al
  419ef6:	ret    
  419ef7:	nop
  419ef8:	ficom  DWORD PTR [ecx+0x31]
  419efc:	adc    BYTE PTR [ebp+0x7ef81a3d],0x12
  419f03:	xlat   BYTE PTR ds:[ebx]
  419f04:	add    bl,BYTE PTR [esi+0x5a]
  419f07:	outs   dx,DWORD PTR ds:[esi]
  419f08:	cld    
  419f09:	mov    BYTE PTR cs:[ebx-0xe],al
  419f0d:	rol    DWORD PTR [eax],1
  419f0f:	inc    edx
  419f10:	xchg   ecx,eax
  419f11:	test   al,0x1c
  419f13:	xchg   ecx,eax
  419f14:	or     cl,BYTE PTR [eax-0x56]
  419f17:	loopne 0x419f82
  419f19:	push   edi
  419f1a:	dec    edx
  419f1b:	and    DWORD PTR [edx-0x68],edx
  419f1e:	sbb    dl,BYTE PTR ds:0xecdfe7a5
  419f24:	pop    esi
  419f25:	pop    esi
  419f26:	jl     0x419f55
  419f28:	mov    al,ds:0x98e3a49
  419f2d:	call   0xf828:0x95375185
  419f34:	retf   
  419f35:	inc    edi
  419f36:	in     eax,dx
  419f37:	ins    BYTE PTR es:[edi],dx
  419f38:	xchg   edx,eax
  419f39:	daa    
  419f3a:	jnp    0x419f43
  419f3c:	test   al,0xd1
  419f3e:	or     DWORD PTR [eax],ecx
  419f40:	jno    0x419ef8
  419f42:	fild   QWORD PTR [edx+0x7cf22989]
  419f48:	dec    ebp
  419f49:	jp     0x419f32
  419f4b:	inc    ebx
  419f4c:	jns    0x419f52
  419f4e:	xchg   edi,eax
  419f50:	popf   
  419f51:	out    0xa5,eax
  419f53:	xchg   edi,eax
  419f54:	fmul   QWORD PTR [eax]
  419f56:	cli    
  419f57:	jb     0x419edf
  419f59:	test   eax,0x62caab51
  419f5e:	sub    DWORD PTR [esp+esi*2-0x2c],edi
  419f62:	retf   0x3ba6
  419f65:	hlt    
  419f66:	ror    DWORD PTR [esi+eax*4+0x12],cl
  419f6a:	push   cs
  419f6b:	xor    al,0x31
  419f6d:	ror    DWORD PTR [edx-0x3b],cl
  419f70:	call   0x1418:0x174145f
  419f77:	fmul   DWORD PTR [ebx+0x142a0015]
  419f7d:	leave  
  419f7e:	adc    al,0x6c
  419f80:	in     eax,0x32
  419f82:	dec    eax
  419f83:	push   es
  419f84:	pop    edi
  419f85:	jns    0x419f3b
  419f87:	and    DWORD PTR [esi-0x42],ecx
  419f8a:	adc    bl,BYTE PTR [ecx+0x4b1407a2]
  419f90:	pop    esi
  419f91:	jecxz  0x41a003
  419f93:	rcl    BYTE PTR [ecx-0x2d150911],1
  419f99:	(bad)  
  419f9a:	pop    edx
  419f9b:	xor    eax,0x37039a3a
  419fa0:	nop
  419fa1:	les    esp,FWORD PTR [ecx+0x319ac93]
  419fa7:	mov    ds:0xc5268671,al
  419fac:	fdivp  st(1),st
  419fae:	jo     0x41a013
  419fb0:	mov    esi,0xf0019f3d
  419fb5:	mov    ds:0x700096db,al
  419fba:	pop    ebp
  419fbb:	outs   dx,BYTE PTR ds:[esi]
  419fbc:	lock xchg edi,eax
  419fbe:	adc    eax,0xb8e8766e
  419fc3:	in     al,dx
  419fc4:	pop    esp
  419fc5:	and    eax,0xfdf52036
  419fca:	out    dx,al
  419fcb:	pop    eax
  419fcc:	and    ch,BYTE PTR [ebx]
  419fce:	je     0x419f94
  419fd0:	nop
  419fd1:	pop    edi
  419fd2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419fd3:	adc    al,0x1b
  419fd5:	adc    ebx,eax
  419fd7:	mov    dh,0x41
  419fd9:	push   ds
  419fda:	fs into 
  419fdc:	sahf   
  419fdd:	imul   esi,DWORD PTR [edi-0x6bdbd09f],0xffffffb1
  419fe4:	push   ecx
  419fe5:	popa   
  419fe6:	shr    BYTE PTR [edi-0x70f8c258],0x48
  419fed:	sbb    DWORD PTR [edi+0x6c],edx
  419ff0:	ds xchg ecx,eax
  419ff2:	je     0x419f7d
  419ff4:	push   edx
  419ff5:	add    BYTE PTR [ebx+ebp*8],0x9d
  419ff9:	out    0xd0,eax
  419ffb:	into   
  419ffc:	xchg   esp,eax
  419ffd:	(bad)  
  419ffe:	fcom   st(7)
  41a000:	adc    ebp,DWORD PTR [ecx]
  41a002:	jno    0x419fab
  41a004:	in     eax,dx
  41a005:	mov    ebx,0xcd0e7ca4
  41a00a:	mov    eax,DWORD PTR gs:[edi+0x58dad1bc]
  41a011:	les    edi,FWORD PTR [esi+0x4a]
  41a014:	jg     0x41a00c
  41a016:	push   0xffffffbb
  41a018:	sahf   
  41a019:	aad    0x74
  41a01b:	sbb    eax,0x17c01888
  41a020:	sti    
  41a021:	xchg   esp,eax
  41a022:	cli    
  41a023:	or     dl,BYTE PTR [eax+0x77]
  41a026:	fiadd  DWORD PTR [eax+0x2ddc3672]
  41a02c:	xchg   esp,eax
  41a02d:	cmp    eax,DWORD PTR [ebx]
  41a02f:	jne    0x41a00a
  41a031:	out    0x10,eax
  41a033:	cmp    ch,BYTE PTR [ebx]
  41a035:	stos   BYTE PTR es:[edi],al
  41a036:	loopne 0x41a0b7
  41a038:	aas    
  41a039:	fadd   QWORD PTR [ebp-0x75]
  41a03c:	push   eax
  41a03d:	xor    al,0xc7
  41a03f:	sub    al,0xe7
  41a041:	mov    WORD PTR [ecx],?
  41a043:	sbb    eax,0x14b351ce
  41a048:	sbb    BYTE PTR [esi],cl
  41a04a:	cmp    al,0x5b
  41a04c:	cwde   
  41a04d:	js     0x419fd3
  41a04f:	fmul   DWORD PTR ds:[ecx]
  41a052:	pop    ecx
  41a053:	retf   
  41a054:	int3   
  41a055:	jmp    0x419fe3
  41a057:	popf   
  41a058:	es jne 0x41a01a
  41a05b:	push   eax
  41a05c:	inc    esi
  41a05d:	call   0xf17d:0x1acc7f80
  41a064:	xlat   BYTE PTR ds:[ebx]
  41a065:	mov    bh,0x49
  41a067:	sbb    eax,0xccb5145f
  41a06c:	loop   0x41a0d4
  41a06e:	cs jbe 0x41a078
  41a071:	mov    al,ds:0x9892ae88
  41a076:	xchg   ebx,eax
  41a077:	mov    BYTE PTR [ecx-0x16],cl
  41a07a:	les    esp,FWORD PTR [edi]
  41a07c:	pop    ds
  41a07d:	popa   
  41a07e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a07f:	jo     0x41a006
  41a081:	lds    edi,FWORD PTR [ebp-0x1208784]
  41a087:	sub    edi,DWORD PTR [esi+ebp*1-0x32]
  41a08b:	aaa    
  41a08c:	out    0xf2,al
  41a08e:	dec    ebp
  41a08f:	fld    DWORD PTR [eax]
  41a091:	jb     0x41a04d
  41a093:	add    DWORD PTR [ebx+0x6f],ebx
  41a096:	ret    0xaf69
  41a099:	sbb    eax,0xcd908f00
  41a09e:	push   ds
  41a09f:	and    eax,DWORD PTR [esi+0x7c63c3cd]
  41a0a5:	pop    es
  41a0a6:	or     ebp,DWORD PTR [ebx+0x68]
  41a0a9:	adc    DWORD PTR [ebx],ecx
  41a0ab:	xchg   edi,eax
  41a0ac:	out    dx,al
  41a0ad:	jbe    0x41a113
  41a0af:	in     al,0xc2
  41a0b1:	or     BYTE PTR [ebx+0xa641e87],cl
  41a0b7:	ins    BYTE PTR es:[edi],dx
  41a0b8:	sbb    al,BYTE PTR [eax+0x5a5b3d73]
  41a0be:	sar    esi,cl
  41a0c0:	loope  0x41a10d
  41a0c2:	aas    
  41a0c3:	ret    0x50c4
  41a0c6:	jmp    0xc4943bea
  41a0cb:	aam    0x6
  41a0cd:	jecxz  0x41a112
  41a0cf:	imul   eax,DWORD PTR [ecx],0x30
  41a0d2:	fcmovu st,st(0)
  41a0d4:	mov    bh,0xfe
  41a0d6:	cs das 
  41a0d8:	cs sbb eax,0x648c071a
  41a0de:	ret    0x4465
  41a0e1:	lahf   
  41a0e2:	or     edi,DWORD PTR [ecx]
  41a0e4:	dec    edx
  41a0e5:	lock push ecx
  41a0e7:	aas    
  41a0e8:	adc    edx,DWORD PTR [esi]
  41a0ea:	loopne 0x41a157
  41a0ec:	fld    DWORD PTR [ebx]
  41a0ee:	xor    al,0xd2
  41a0f0:	mov    bl,0x22
  41a0f2:	fisttp DWORD PTR [esi-0xa]
  41a0f5:	ja     0x41a0ca
  41a0f7:	ss xchg ebx,eax
  41a0f9:	ficomp DWORD PTR [ebp+0x27]
  41a0fc:	(bad)  
  41a0fd:	shl    DWORD PTR [ebx-0x75c5f54],1
  41a103:	loopne 0x41a0c1
  41a105:	jmp    0x41a09f
  41a107:	dec    esi
  41a108:	fwait
  41a109:	jmp    0xfe3b:0x8e71e80e
  41a110:	xor    BYTE PTR [ebx],bh
  41a112:	es push 0xffffff9b
  41a115:	(bad)  
  41a116:	fidiv  WORD PTR [edx]
  41a118:	test   eax,0x31ff80b6
  41a11d:	retf   0x4f3
  41a120:	sar    dl,cl
  41a122:	cmp    BYTE PTR [esi],dl
  41a124:	mov    ch,0x1b
  41a126:	xor    ebp,DWORD PTR [ebx+0x14cebe66]
  41a12c:	cmp    BYTE PTR [eax],dl
  41a12e:	jns    0x41a1ac
  41a130:	mov    dh,0x3b
  41a132:	sbb    dh,bl
  41a134:	jge    0x41a136
  41a136:	les    ebx,FWORD PTR [ecx+0x76]
  41a139:	mov    esp,0x9a654476
  41a13e:	mov    dh,BYTE PTR [bx+di-0x6369]
  41a143:	icebp  
  41a144:	mov    ecx,0xa4e0b8f
  41a149:	arpl   WORD PTR [ecx],di
  41a14b:	ficomp DWORD PTR [edi+0x33870e1]
  41a151:	mov    ah,0xc1
  41a153:	out    0xd,al
  41a155:	inc    esi
  41a156:	inc    di
  41a158:	add    dl,BYTE PTR [ebx-0x19]
  41a15b:	xchg   ebx,eax
  41a15c:	or     DWORD PTR [edi],ebp
  41a15e:	mov    ds:0x8810cd61,al
  41a163:	icebp  
  41a164:	mov    ecx,0x18c9acc2
  41a169:	fidivr DWORD PTR [ecx]
  41a16b:	sahf   
  41a16c:	scas   eax,DWORD PTR es:[edi]
  41a16d:	lock out 0xa9,al
  41a170:	ret    0xa369
  41a173:	cmp    al,0x3b
  41a175:	xor    dh,BYTE PTR [eax-0x5a]
  41a178:	fwait
  41a179:	push   es
  41a17a:	pushf  
  41a17b:	mov    edx,0xd3ed9f9b
  41a180:	cmp    esp,eax
  41a182:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a183:	mov    edx,0xc5820a59
  41a188:	xchg   ecx,eax
  41a189:	enter  0xa2ee,0xe
  41a18d:	call   0x94d1:0x36ff750b
  41a194:	xchg   ebp,eax
  41a195:	pop    esp
  41a196:	imul   eax,DWORD PTR [edx],0x10
  41a199:	xor    al,0xe
  41a19b:	pop    eax
  41a19c:	pop    edx
  41a19d:	pushf  
  41a19e:	test   bl,0x31
  41a1a1:	pusha  
  41a1a2:	je     0x41a1fa
  41a1a4:	test   eax,0x3bdc2fab
  41a1a9:	fild   DWORD PTR [eax+0x54]
  41a1ac:	outs   dx,BYTE PTR ds:[esi]
  41a1ad:	ror    DWORD PTR [eax],1
  41a1af:	jne    0x41a1dc
  41a1b1:	mov    WORD PTR [ecx+0x59],ss
  41a1b4:	repnz outs dx,BYTE PTR ds:[esi]
  41a1b6:	sub    al,0x52
  41a1b8:	push   cs
  41a1b9:	(bad)
  41a1bc:	daa    
  41a1bd:	test   al,0xd
  41a1bf:	xchg   esp,eax
  41a1c0:	or     BYTE PTR [ebx+eiz*8+0x21640543],dh
  41a1c7:	xchg   esi,eax
  41a1c8:	mov    DWORD PTR [edx-0x25],eax
  41a1cb:	sbb    DWORD PTR [eax+ebx*8],0x74
  41a1cf:	xor    BYTE PTR [eax+0x65],al
  41a1d2:	dec    edi
  41a1d3:	loop   0x41a210
  41a1d5:	add    eax,0xd7e92d4a
  41a1da:	inc    ebp
  41a1db:	cdq    
  41a1dc:	push   0x74041d0b
  41a1e1:	mov    dl,0xb0
  41a1e3:	add    ecx,esp
  41a1e5:	mov    bl,0xad
  41a1e7:	xchg   ecx,eax
  41a1e8:	pop    esp
  41a1e9:	adc    eax,DWORD PTR [ecx+0x29]
  41a1ec:	mov    bl,0x5b
  41a1ee:	mov    ds:0x8d361288,al
  41a1f3:	popa   
  41a1f4:	ins    DWORD PTR es:[edi],dx
  41a1f5:	dec    esp
  41a1f7:	int3   
  41a1f8:	cmp    bl,BYTE PTR ds:0x752a9083
  41a1fe:	push   ss
  41a1ff:	push   edi
  41a200:	daa    
  41a201:	jnp    0x41a27d
  41a203:	xor    al,dh
  41a205:	mov    ds:0xfd908372,eax
  41a20a:	ds inc ebx
  41a20c:	jle    0x41a1f0
  41a20e:	pop    ss
  41a20f:	lods   eax,DWORD PTR ds:[esi]
  41a210:	outs   dx,BYTE PTR ds:[esi]
  41a211:	ror    ecx,cl
  41a213:	add    al,0x98
  41a215:	inc    edi
  41a216:	loop   0x41a246
  41a218:	mov    eax,0x8ff34664
  41a21d:	stc    
  41a21e:	pop    esp
  41a21f:	cmp    DWORD PTR [ebx+0xbb6e108],esi
  41a225:	mov    bh,0x45
  41a227:	iret   
  41a228:	sbb    BYTE PTR [edi+0x53032238],0x8d
  41a22f:	frstor [esi]
  41a231:	xor    ah,0x54
  41a234:	mov    bh,BYTE PTR [ecx]
  41a236:	push   es
  41a237:	(bad)  
  41a238:	test   eax,0xcead1f4
  41a23d:	fsub   DWORD PTR [ebx]
  41a23f:	xor    BYTE PTR [edi],cl
  41a241:	mov    eax,0x13e12a01
  41a246:	inc    edx
  41a247:	(bad)  
  41a248:	fst    DWORD PTR [ebx]
  41a24a:	dec    ecx
  41a24b:	mov    ah,0xde
  41a24d:	dec    edi
  41a24e:	adc    esp,ebx
  41a250:	or     bh,BYTE PTR [edi+ebx*4+0x773abf6]
  41a257:	outs   dx,BYTE PTR ds:[esi]
  41a258:	aam    0xe9
  41a25a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a25b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a25c:	(bad)  
  41a25d:	aad    0x9b
  41a25f:	pop    ss
  41a260:	mov    edi,0x32bb09e0
  41a265:	bswap  edi
  41a267:	cmp    DWORD PTR [eax+0x17],esp
  41a26a:	pushf  
  41a26b:	ret    0x85d
  41a26e:	mov    edi,0x47e44c17
  41a273:	cs enter 0xde36,0xb9
  41a278:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a279:	push   es
  41a27a:	inc    ecx
  41a27b:	lahf   
  41a27c:	fcomi  st,st(2)
  41a27e:	and    bl,ah
  41a280:	mov    esp,0x8fa817b1
  41a285:	sar    DWORD PTR [edi],0xc4
  41a288:	cmp    ebx,ebp
  41a28a:	xchg   esp,eax
  41a28b:	in     eax,0x30
  41a28d:	outs   dx,BYTE PTR ds:[esi]
  41a28e:	adc    eax,0xdacdfef8
  41a293:	xlat   BYTE PTR ds:[ebx]
  41a294:	ret    
  41a295:	jnp    0x41a2b5
  41a297:	adc    al,0xe9
  41a299:	cwde   
  41a29a:	inc    ebp
  41a29b:	and    al,0x35
  41a29d:	(bad)  
  41a29e:	lods   al,BYTE PTR ds:[esi]
  41a29f:	dec    ebp
  41a2a0:	imul   esp,edx,0xffffffb2
  41a2a3:	inc    edi
  41a2a4:	mov    DWORD PTR [eax],eax
  41a2a6:	xor    ah,al
  41a2a8:	jno    0x41a315
  41a2aa:	adc    eax,0xb28a41e3
  41a2af:	or     edx,DWORD PTR [esi]
  41a2b1:	dec    esp
  41a2b2:	xchg   esp,eax
  41a2b3:	sub    BYTE PTR [edx+0x51],0xa3
  41a2b7:	mov    ebx,0xf8b44d04
  41a2bc:	loopne 0x41a2ac
  41a2be:	std    
  41a2bf:	push   ss
  41a2c0:	shr    ebp,0x47
  41a2c3:	(bad)  
  41a2c7:	xlat   BYTE PTR ds:[ebx]
  41a2c8:	outs   dx,DWORD PTR ds:[esi]
  41a2c9:	stc    
  41a2ca:	mov    bl,0xf9
  41a2cc:	adc    BYTE PTR [ecx],ah
  41a2ce:	mov    ebx,0x41239aff
  41a2d3:	jbe    0x41a322
  41a2d5:	mov    ebx,0x80680038
  41a2da:	mov    ah,cl
  41a2dc:	sti    
  41a2dd:	push   es
  41a2de:	mov    bl,ch
  41a2e0:	xlat   BYTE PTR ds:[ebx]
  41a2e1:	jnp    0x41a2f7
  41a2e3:	aas    
  41a2e4:	out    dx,eax
  41a2e5:	inc    esi
  41a2e6:	cmp    ch,ch
  41a2e8:	and    esi,DWORD PTR [edx-0x2d]
  41a2eb:	jno    0x41a341
  41a2ed:	call   0x10f2:0x2df45613
  41a2f4:	(bad)  
  41a2f5:	daa    
  41a2f6:	dec    edi
  41a2f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a2f8:	mov    ch,0x3d
  41a2fa:	jge    0x41a379
  41a2fc:	and    ebp,DWORD PTR [edi+0x2c61da6b]
  41a302:	inc    ebp
  41a303:	retf   0xadc3
  41a306:	or     al,0x1f
  41a308:	pop    ebx
  41a309:	xor    edx,eax
  41a30b:	push   ebx
  41a30c:	icebp  
  41a30d:	daa    
  41a30e:	std    
  41a30f:	clc    
  41a310:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a311:	sub    eax,0xd4108cc5
  41a316:	loope  0x41a2a0
  41a318:	sbb    ecx,DWORD PTR [ebx]
  41a31a:	push   cs
  41a31b:	mov    bl,0x39
  41a31d:	inc    ecx
  41a31e:	push   ss
  41a31f:	stos   DWORD PTR es:[edi],eax
  41a320:	inc    edx
  41a321:	mov    ecx,0x76ebe259
  41a326:	nop
  41a327:	lock push 0x31bb38d8
  41a32d:	xchg   esp,eax
  41a32e:	outs   dx,DWORD PTR ds:[esi]
  41a32f:	(bad)  
  41a330:	in     al,dx
  41a331:	push   ds
  41a332:	lea    edi,[ebp+0x4b]
  41a335:	cmp    edx,esi
  41a337:	adc    al,bl
  41a339:	sbb    eax,esp
  41a33b:	dec    edi
  41a33c:	cdq    
  41a33d:	and    eax,0xaaf33ed5
  41a342:	dec    ecx
  41a343:	jmp    0x41a30b
  41a345:	sbb    ah,BYTE PTR [esi-0x1018d467]
  41a34b:	push   cs
  41a34c:	or     ebx,DWORD PTR [eax+eax*2+0x540ce43c]
  41a353:	(bad)
  41a357:	mov    ah,0xf6
  41a359:	jnp    0x41a2e2
  41a35b:	mov    es,WORD PTR [ecx]
  41a35d:	adc    eax,0x81210af1
  41a362:	mov    DWORD PTR [ebp+0x2b],0xe25c4498
  41a369:	icebp  
  41a36a:	jno    0x41a392
  41a36c:	int3   
  41a36d:	sahf   
  41a36e:	jge    0x41a344
  41a370:	and    al,0x4b
  41a372:	or     eax,0x262488bc
  41a377:	jge    0x41a2f9
  41a379:	sbb    eax,0xaa1dcc77
  41a37e:	mov    al,0x49
  41a380:	(bad)  
  41a381:	les    esi,FWORD PTR [ebp+0x2abf6de6]
  41a387:	repz inc ebx
  41a389:	mov    DWORD PTR [ecx],esp
  41a38b:	addr16 mov ds:0x1d98,al
  41a38f:	push   edi
  41a390:	cmp    BYTE PTR [esi+0x18],cl
  41a393:	ds mov bh,0x7
  41a396:	push   edx
  41a397:	jno    0x41a3ad
  41a399:	jg     0x41a348
  41a39b:	inc    ebx
  41a39c:	pop    ecx
  41a39d:	imul   ecx,DWORD PTR [esi-0x39],0x13
  41a3a1:	cmp    bl,BYTE PTR [esi+0x43]
  41a3a4:	mov    ch,0x1e
  41a3a6:	cs xor dl,cl
  41a3a9:	adc    BYTE PTR ds:0xff8b13c8,al
  41a3af:	sbb    BYTE PTR ss:0xabd387ee,dh
  41a3b6:	inc    ebx
  41a3b7:	jnp    0x41a34d
  41a3b9:	in     al,0x7a
  41a3bb:	rcr    BYTE PTR [edx],cl
  41a3bd:	sahf   
  41a3be:	fnsave [ecx+0x78]
  41a3c1:	loopne 0x41a34c
  41a3c3:	jbe    0x41a43d
  41a3c5:	cs inc esp
  41a3c7:	push   cs
  41a3c8:	push   ss
  41a3c9:	scas   al,BYTE PTR es:[edi]
  41a3ca:	test   BYTE PTR [ecx+0x3679f45],0x14
  41a3d1:	jmp    0x41a449
  41a3d3:	jge    0x41a365
  41a3d5:	mov    dh,0x8a
  41a3d7:	imul   esp,DWORD PTR [ebx-0x6947647b],0xbd6a5fc4
  41a3e1:	push   cs
  41a3e2:	jne    0x41a445
  41a3e4:	rol    DWORD PTR gs:[eax+0x2fd3b6a7],cl
  41a3eb:	dec    esp
  41a3ec:	pop    ds
  41a3ed:	cwde   
  41a3ee:	pop    ds
  41a3ef:	lahf   
  41a3f0:	mov    bh,0x5e
  41a3f2:	shl    DWORD PTR [esi],1
  41a3f4:	mov    al,0x73
  41a3f6:	xchg   ecx,eax
  41a3f7:	not    BYTE PTR [edi+eiz*2-0x35dc8683]
  41a3fe:	and    BYTE PTR [eax],ch
  41a400:	xor    eax,0x7d1f080e
  41a405:	lock mov edi,0x7a0feba1
  41a40b:	push   ds
  41a40c:	aam    0x3
  41a40e:	pop    esi
  41a40f:	int3   
  41a410:	jne    0x41a398
  41a412:	call   0x625a:0x251b87ab
  41a419:	popa   
  41a41a:	jmp    0x7aed:0x71970d6c
  41a421:	add    al,0xae
  41a423:	mov    bl,al
  41a425:	mov    BYTE PTR [eax],al
  41a427:	mov    ebx,0x9e37eab5
  41a42c:	dec    ebp
  41a42d:	shl    DWORD PTR [ecx],cl
  41a42f:	mov    dh,BYTE PTR [ecx-0x56]
  41a432:	mov    edi,esp
  41a434:	dec    esp
  41a435:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a436:	mov    ss,WORD PTR [ebx]
  41a438:	push   edi
  41a439:	retf   
  41a43a:	imul   eax,esp,0x9e9c3bcd
  41a440:	sbb    al,0x99
  41a442:	xchg   DWORD PTR [ecx-0x542a4919],ecx
  41a448:	mov    bh,BYTE PTR [ecx]
  41a44a:	out    0xe7,eax
  41a44c:	inc    esi
  41a44d:	xchg   ebp,eax
  41a44e:	mov    edx,0x803fe15a
  41a453:	mov    WORD PTR [esi],fs
  41a455:	mov    esi,0xb0d4f110
  41a45a:	ror    BYTE PTR [eax-0x47],1
  41a45d:	or     dh,bl
  41a45f:	cdq    
  41a460:	sahf   
  41a461:	adc    al,0x98
  41a463:	pop    esp
  41a464:	xchg   BYTE PTR [ecx+0x492c1ea8],al
  41a46a:	mov    edx,DWORD PTR [esi+0x70]
  41a46d:	lea    ebp,[edx+0x2616ae5b]
  41a473:	fcmovnbe st,st(0)
  41a475:	sub    al,0x2a
  41a477:	sbb    edi,DWORD PTR [ebp+0x5]
  41a47a:	push   ds
  41a47b:	enter  0x6dd9,0x2e
  41a47f:	test   DWORD PTR [edx],esp
  41a481:	or     BYTE PTR [ecx],cl
  41a483:	and    DWORD PTR [eax],ebp
  41a485:	sti    
  41a486:	in     eax,0xbe
  41a488:	loop   0x41a475
  41a48a:	inc    esp
  41a48b:	ret    0xbd34
  41a48e:	arpl   di,sp
  41a490:	stos   BYTE PTR es:[edi],al
  41a491:	sbb    dl,al
  41a493:	adc    dl,BYTE PTR [ecx+eiz*8]
  41a496:	cwde   
  41a497:	loop   0x41a4b6
  41a499:	sahf   
  41a49a:	or     eax,0x1b171543
  41a49f:	inc    DWORD PTR [esi]
  41a4a1:	lods   eax,DWORD PTR ds:[esi]
  41a4a2:	adc    dl,BYTE PTR [ebx]
  41a4a4:	sbb    DWORD PTR [ebx+0x2bf47531],0x5fe9f240
  41a4ae:	sub    DWORD PTR [si+0x5970],eax
  41a4b3:	aaa    
  41a4b4:	(bad)  
  41a4b5:	sub    al,0x1e
  41a4b7:	lahf   
  41a4b8:	lock jg 0x41a539
  41a4bb:	addr16 or al,0x1e
  41a4be:	fstp   TBYTE PTR ds:0xc88bd9a
  41a4c4:	addr16 inc esi
  41a4c6:	jo     0x41a4de
  41a4c8:	call   0x1cddbd6e
  41a4cd:	sub    ch,dl
  41a4cf:	call   0xa0a0:0x2df0ff23
  41a4d6:	push   edx
  41a4d7:	dec    esi
  41a4d8:	pushf  
  41a4d9:	or     esp,DWORD PTR [ebx]
  41a4db:	or     eax,0x5e0ab023
  41a4e0:	dec    ebx
  41a4e1:	inc    edx
  41a4e2:	add    al,0x4d
  41a4e4:	pop    eax
  41a4e5:	in     al,0x1f
  41a4e7:	push   eax
  41a4e8:	ds icebp 
  41a4ea:	stc    
  41a4eb:	call   0x362f2727
  41a4f0:	je     0x41a4f3
  41a4f2:	mov    eax,ds:0x7b2df60d
  41a4f7:	fild   QWORD PTR ds:0x78fc53d1
  41a4fd:	ins    DWORD PTR es:[edi],dx
  41a4fe:	jmp    0x41a500
  41a500:	cmp    eax,0xb643a0f4
  41a505:	pop    esi
  41a506:	dec    ebp
  41a507:	int3   
  41a508:	mov    eax,0x3865d784
  41a50d:	xor    ah,BYTE PTR [esi]
  41a50f:	(bad)  
  41a510:	ja     0x41a54c
  41a512:	ins    BYTE PTR es:[edi],dx
  41a513:	aad    0x5
  41a515:	shl    DWORD PTR [eax-0x71],1
  41a518:	pop    esi
  41a519:	xor    ah,BYTE PTR [ecx]
  41a51b:	outs   dx,BYTE PTR ds:[esi]
  41a51c:	push   es
  41a51d:	xor    BYTE PTR [edx-0x33503524],0xff
  41a524:	push   ecx
  41a525:	fisttp QWORD PTR [ebx-0x6e2edd69]
  41a52b:	das    
  41a52c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a52d:	jle    0x41a4e6
  41a52f:	push   eax
  41a530:	loope  0x41a550
  41a532:	les    ebp,FWORD PTR [esi+0x416f1a72]
  41a538:	jbe    0x41a4fd
  41a53a:	xchg   ecx,eax
  41a53b:	push   es
  41a53c:	adc    eax,0xbe6c160b
  41a541:	imul   esp,DWORD PTR [ecx],0x5b31b315
  41a547:	ret    0x6cbd
  41a54a:	jae    0x41a504
  41a54c:	in     eax,dx
  41a54d:	fcomp  QWORD PTR [ebp+eiz*4-0x62]
  41a551:	dec    esi
  41a552:	jb     0x41a51d
  41a554:	or     eax,ecx
  41a556:	stc    
  41a557:	xor    al,0xbc
  41a559:	dec    edx
  41a55a:	sti    
  41a55b:	in     al,0x57
  41a55d:	nop
  41a55e:	mov    ?,WORD PTR [esi]
  41a560:	sbb    eax,0x58621cd
  41a565:	movmskps ecx,xmm4
  41a568:	mov    dh,0x75
  41a56a:	sbb    bl,dh
  41a56c:	jp     0x41a57a
  41a56e:	jle    0x41a565
  41a570:	or     DWORD PTR [esi-0x74],0xfc9831e3
  41a577:	(bad)  
  41a578:	mov    edx,0x5cc10853
  41a57d:	mov    ah,BYTE PTR [ecx+0x63f2e2c1]
  41a583:	xchg   edi,eax
  41a584:	retf   
  41a585:	loop   0x41a5ba
  41a587:	jecxz  0x41a593
  41a589:	push   edx
  41a58a:	cmp    eax,0x39a65a79
  41a58f:	xor    BYTE PTR ds:0x50783998,0xaf
  41a596:	stc    
  41a597:	push   esp
  41a598:	cmp    DWORD PTR [esi],esp
  41a59a:	sub    eax,edx
  41a59c:	adc    al,0x5e
  41a59e:	frstor [esi-0x98d706]
  41a5a4:	ucomiss xmm5,DWORD PTR [edx+ecx*2]
  41a5a8:	mov    cl,BYTE PTR [edx+0x4525bc7b]
  41a5ae:	push   0x52
  41a5b0:	rol    BYTE PTR [ecx+0x5d],cl
  41a5b3:	or     BYTE PTR [ebx-0xf609c8d],bh
  41a5b9:	xchg   eax,esp
  41a5bb:	xor    dl,BYTE PTR [ebx]
  41a5bd:	repz retf 0x5a91
  41a5c1:	int3   
  41a5c2:	jnp    0x41a60c
  41a5c4:	aaa    
  41a5c5:	cdq    
  41a5c6:	dec    ebp
  41a5c7:	xchg   ebx,eax
  41a5c8:	pop    ebp
  41a5c9:	mov    ds:0x29b6a16e,al
  41a5ce:	arpl   cx,sp
  41a5d0:	mov    bh,0xa0
  41a5d2:	loope  0x41a575
  41a5d4:	js     0x41a59a
  41a5d6:	std    
  41a5d7:	test   DWORD PTR [ebx],esi
  41a5d9:	mov    eax,ds:0x6f0b0064
  41a5de:	sbb    al,0x90
  41a5e0:	icebp  
  41a5e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a5e2:	pop    ebx
  41a5e3:	jge    0x41a617
  41a5e5:	mov    ecx,0xa5d3735e
  41a5ea:	sub    DWORD PTR [edx],esp
  41a5ec:	int    0x8b
  41a5ee:	arpl   si,si
  41a5f0:	ja     0x41a591
  41a5f2:	not    BYTE PTR [ebp-0x8]
  41a5f5:	jns    0x41a660
  41a5f7:	mov    ds:0x76c0bd26,al
  41a5fc:	(bad)  
  41a5fd:	adc    esi,DWORD PTR [eax-0x5c314efc]
  41a603:	imul   edx,esp,0x77e78509
  41a609:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a60a:	xchg   ebp,eax
  41a60b:	ja     0x41a5ca
  41a60d:	cmp    DWORD PTR [esp+ecx*2-0x72],ecx
  41a611:	jo     0x41a633
  41a613:	std    
  41a614:	stc    
  41a615:	js     0x41a64d
  41a617:	ins    DWORD PTR es:[edi],dx
  41a618:	mov    ecx,0x7b68594f
  41a61d:	inc    eax
  41a61e:	add    BYTE PTR [ebp+edi*2-0x5b],ah
  41a622:	push   0xc320e3a4
  41a627:	mov    ebp,0x1a28b63d
  41a62c:	int    0xf
  41a62e:	es push ebx
  41a630:	cmp    DWORD PTR [ecx-0x4be8354a],esi
  41a636:	in     eax,dx
  41a637:	dec    ecx
  41a638:	hlt    
  41a639:	fwait
  41a63a:	add    eax,0x2d79d3cb
  41a63f:	scas   al,BYTE PTR es:[edi]
  41a640:	cmp    ecx,DWORD PTR [edi]
  41a642:	xor    al,0x70
  41a644:	push   esp
  41a645:	inc    ebp
  41a646:	push   esi
  41a647:	add    ebx,DWORD PTR [esi]
  41a649:	push   ds
  41a64a:	add    bl,ah
  41a64c:	imul   edi,DWORD PTR [edx+0x6c4f4574],0x3f
  41a653:	or     edx,DWORD PTR [ecx]
  41a655:	jge    0x41a687
  41a657:	jmp    0x5c8b8a54
  41a65c:	add    ecx,edi
  41a65e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a65f:	or     esp,DWORD PTR [ebx-0x2d9b8e7]
  41a665:	inc    ecx
  41a666:	adc    BYTE PTR [ebx],al
  41a668:	in     eax,dx
  41a669:	ja     0x41a6cc
  41a66b:	mov    edi,0x609a0775
  41a670:	push   ebp
  41a671:	les    ebp,FWORD PTR [ebx+0x10]
  41a674:	out    dx,al
  41a675:	adc    BYTE PTR [ebx],ch
  41a677:	inc    ebp
  41a678:	cmp    BYTE PTR [ebp+edx*4+0x5c],ah
  41a67c:	das    
  41a67d:	inc    esp
  41a67e:	inc    ebx
  41a67f:	xchg   edi,eax
  41a680:	xchg   ebp,eax
  41a681:	mov    esi,0x8067b57
  41a686:	ins    DWORD PTR es:[edi],dx
  41a687:	pop    eax
  41a688:	jp     0x41a6f2
  41a68a:	sub    esp,ebp
  41a68c:	ror    BYTE PTR [ebx+edx*8],cl
  41a68f:	fsubr  QWORD PTR [eax+0x11]
  41a692:	xor    edi,esi
  41a694:	sub    ecx,DWORD PTR [ecx+0x4e54d35e]
  41a69a:	fwait
  41a69b:	mov    cl,0xa9
  41a69d:	inc    edx
  41a69e:	adc    eax,0x8fd8ee38
  41a6a3:	fcmovne st,st(4)
  41a6a5:	rcr    DWORD PTR ss:[edx+0x72b4056b],cl
  41a6ac:	add    al,0xd2
  41a6ae:	sub    BYTE PTR [edx+0x677c1f9b],cl
  41a6b4:	fimul  DWORD PTR [eax+edx*4]
  41a6b7:	pop    es
  41a6b8:	mov    esi,0x4069c6aa
  41a6bd:	pop    eax
  41a6be:	nop
  41a6bf:	and    esp,DWORD PTR [ecx]
  41a6c1:	popf   
  41a6c2:	(bad)  
  41a6c3:	ret    0xaeb9
  41a6c6:	push   ss
  41a6c7:	loope  0x41a72e
  41a6c9:	iret   
  41a6ca:	in     al,0xf0
  41a6cc:	in     eax,dx
  41a6cd:	xlat   BYTE PTR ds:[ebx]
  41a6ce:	aaa    
  41a6cf:	imul   ecx,eax,0xffffffa5
  41a6d2:	mov    edi,0xb13ae77e
  41a6d7:	leave  
  41a6d8:	fxch   st(2)
  41a6da:	adc    DWORD PTR [ecx],ecx
  41a6dc:	mov    ebx,0x10a8342
  41a6e1:	addr16 jae 0x41a6dd
  41a6e4:	and    BYTE PTR [edx+0x1c],bh
  41a6e7:	adc    eax,0xcb773ae9
  41a6ec:	mov    bl,0xd6
  41a6ee:	aam    0x4d
  41a6f0:	and    dl,BYTE PTR [ebx]
  41a6f2:	shl    DWORD PTR [edx+0x589deea1],cl
  41a6f8:	cs dec esi
  41a6fa:	aas    
  41a6fb:	adc    eax,0x4579aed1
  41a700:	pop    ebx
  41a701:	(bad)  
  41a702:	fisttp WORD PTR [edi]
  41a704:	sbb    BYTE PTR [ebx],bh
  41a706:	pushf  
  41a707:	std    
  41a708:	pop    ebx
  41a709:	fimul  WORD PTR [bp+di+0x304]
  41a70e:	sbb    DWORD PTR [edi-0x4141f879],0x4b
  41a715:	gs inc esi
  41a717:	push   ecx
  41a718:	(bad)
  41a71b:	xchg   esp,eax
  41a71c:	jns    0x41a766
  41a71e:	fwait
  41a71f:	push   cs
  41a720:	or     ah,dl
  41a722:	and    cl,BYTE PTR [esi-0x75c3bf24]
  41a728:	cmp    eax,0xe9472cdd
  41a72d:	push   ss
  41a72e:	dec    ebp
  41a72f:	ret    
  41a730:	mov    al,fs:0xa0cb8bc3
  41a736:	add    al,0xb3
  41a738:	inc    eax
  41a739:	xchg   esp,eax
  41a73a:	push   edx
  41a73b:	dec    ebp
  41a73c:	frstor [ecx-0x7da59d7e]
  41a742:	adc    cl,BYTE PTR [ebx]
  41a744:	aas    
  41a745:	sbb    eax,0xd5e30e8d
  41a74a:	push   eax
  41a74b:	out    dx,al
  41a74c:	div    DWORD PTR [ebx]
  41a74e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a74f:	sub    BYTE PTR [edi-0x5a],bh
  41a752:	cmp    al,BYTE PTR [eax+eax*4-0x7f3d84ce]
  41a759:	cmp    dh,ah
  41a75b:	pusha  
  41a75c:	xor    ebp,DWORD PTR [edi+0x391c4c74]
  41a762:	xchg   esp,eax
  41a763:	jmp    0x14ea4567
  41a768:	(bad)  
  41a769:	mov    bl,0xf9
  41a76b:	fs aas 
  41a76d:	imul   esi,DWORD PTR ds:0xc4bb6d13,0xf
  41a774:	hlt    
  41a775:	ror    BYTE PTR ds:0xc5e63ec5,1
  41a77b:	xchg   esi,eax
  41a77c:	lahf   
  41a77d:	push   ecx
  41a77e:	loopne 0x41a770
  41a780:	sub    eax,0x46d944ea
  41a785:	inc    esi
  41a786:	add    eax,DWORD PTR [ecx+0x514736e]
  41a78c:	int3   
  41a78d:	out    0x30,al
  41a78f:	enter  0xbe8,0x7c
  41a793:	and    eax,0x538f7ad5
  41a798:	xlat   BYTE PTR ds:[ebx]
  41a799:	addr16 jo 0x41a7d4
  41a79c:	(bad)  
  41a79e:	les    esi,FWORD PTR [edi+ecx*2]
  41a7a1:	dec    ebp
  41a7a2:	ds dec eax
  41a7a4:	sar    DWORD PTR [edx+0x1432f24e],0x8e
  41a7ab:	stos   DWORD PTR es:[edi],eax
  41a7ac:	add    DWORD PTR [edi],edi
  41a7ae:	cdq    
  41a7af:	add    dh,0xc9
  41a7b2:	mov    WORD PTR [bx+0x61],fs
  41a7b6:	popf   
  41a7b7:	dec    esi
  41a7b8:	jae    0x41a776
  41a7ba:	ret    
  41a7bb:	and    ah,ah
  41a7bd:	add    ebx,DWORD PTR [edi+0x35]
  41a7c0:	sahf   
  41a7c1:	cmp    DWORD PTR [esi+0x25],edi
  41a7c4:	or     DWORD PTR [eax-0x2e],ebp
  41a7c7:	imul   edi,DWORD PTR [edx+0x78],0xf63d963d
  41a7ce:	das    
  41a7cf:	bswap  ecx
  41a7d1:	dec    edi
  41a7d2:	pop    DWORD PTR [edi]
  41a7d4:	scas   al,BYTE PTR es:[edi]
  41a7d5:	add    al,0x8b
  41a7d7:	inc    esi
  41a7d8:	push   ebx
  41a7d9:	and    ch,BYTE PTR [ebx]
  41a7db:	rol    DWORD PTR [edi+ecx*4+0x33],1
  41a7df:	or     al,BYTE PTR [ecx+0x1a]
  41a7e2:	(bad)  
  41a7e3:	fldenv [eax]
  41a7e5:	mov    esp,0x8c06be42
  41a7ea:	add    edi,esp
  41a7ec:	add    DWORD PTR fs:[edi],edi
  41a7ef:	leave  
  41a7f0:	mov    bh,0x55
  41a7f2:	mov    ebx,0xc8e96223
  41a7f7:	jmp    0x4096:0x3589dfdd
  41a7fe:	pop    es
  41a7ff:	inc    esi
  41a800:	arpl   WORD PTR [ebx-0x2e],bp
  41a803:	inc    edx
  41a804:	(bad)  
  41a805:	stc    
  41a806:	retf   
  41a807:	mov    eax,ds:0x7c50034b
  41a80c:	stos   DWORD PTR es:[edi],eax
  41a80d:	sbb    DWORD PTR [ebx+0x7b],edi
  41a810:	lods   eax,DWORD PTR ds:[esi]
  41a811:	(bad)  
  41a812:	outs   dx,DWORD PTR ds:[esi]
  41a813:	xchg   edx,eax
  41a814:	jge    0x41a831
  41a816:	mov    edx,DWORD PTR [edx+0x22]
  41a819:	imul   esp,esi,0x20
  41a81c:	adc    eax,0x8099b835
  41a821:	xlat   BYTE PTR ds:[ebx]
  41a822:	inc    edx
  41a823:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a824:	cmp    al,0xd
  41a826:	and    al,BYTE PTR ss:[ebx-0x4a]
  41a82a:	adc    eax,0x5b5a6b48
  41a82f:	ins    BYTE PTR es:[edi],dx
  41a830:	push   edx
  41a831:	data16 mov dl,bl
  41a834:	scas   al,BYTE PTR es:[edi]
  41a835:	stc    
  41a836:	cmp    ebx,eax
  41a838:	adc    esp,esp
  41a83a:	jl     0x41a7e1
  41a83c:	fwait
  41a83d:	loop   0x41a869
  41a83f:	pop    ecx
  41a840:	out    dx,eax
  41a841:	push   ebx
  41a842:	es pop ebx
  41a844:	in     al,dx
  41a845:	rcr    DWORD PTR [ebx-0x14378467],1
  41a84b:	icebp  
  41a84c:	ins    DWORD PTR es:[edi],dx
  41a84d:	cs in  eax,dx
  41a84f:	jle    0x41a853
  41a851:	inc    BYTE PTR [edx]
  41a853:	adc    edx,DWORD PTR [edx+0x65]
  41a856:	xor    ebp,DWORD PTR [ebx]
  41a858:	mov    ss,edx
  41a85a:	xchg   edi,eax
  41a85b:	call   0x74c61ff2
  41a860:	xor    BYTE PTR [esi],ch
  41a862:	adc    eax,0x9fdb1a3c
  41a867:	jae    0x41a8b5
  41a869:	fadd   QWORD PTR [eax]
  41a86b:	mov    dl,0xac
  41a86d:	dec    ebx
  41a86e:	push   ss
  41a86f:	cli    
  41a870:	pop    eax
  41a871:	adc    ch,bh
  41a873:	dec    ebp
  41a874:	inc    ecx
  41a875:	or     bh,ah
  41a877:	ret    0x55ef
  41a87a:	(bad)  
  41a87c:	call   FWORD PTR [esi]
  41a87e:	cmp    edx,0xffffffef
  41a881:	outs   dx,DWORD PTR ds:[esi]
  41a882:	xchg   ecx,eax
  41a883:	aas    
  41a884:	adc    al,0x91
  41a886:	mov    al,ds:0xa930f2ba
  41a88b:	sbb    al,0xc7
  41a88d:	jns    0x41a851
  41a88f:	mov    esp,0xd4755d92
  41a894:	mov    edx,DWORD PTR [eax]
  41a896:	xor    bl,BYTE PTR [ebx]
  41a898:	inc    eax
  41a899:	arpl   WORD PTR [ebx+0x74],bx
  41a89c:	mov    ds,WORD PTR [edi-0x42]
  41a89f:	xchg   ebp,eax
  41a8a0:	sbb    BYTE PTR gs:[eax+0x16c62c1a],0x7a
  41a8a8:	pop    es
  41a8a9:	loop   0x41a8f0
  41a8ab:	push   ebx
  41a8ac:	sbb    eax,0xd3f52f4e
  41a8b1:	stc    
  41a8b2:	and    cl,dl
  41a8b4:	out    dx,eax
  41a8b5:	(bad)  
  41a8b7:	gs js  0x41a8d6
  41a8ba:	mov    BYTE PTR [edx+0x7c82c679],bl
  41a8c0:	xchg   ebx,eax
  41a8c1:	(bad)  
  41a8c3:	cmp    al,0x14
  41a8c5:	jecxz  0x41a8aa
  41a8c7:	sbb    eax,0x7c9dad92
  41a8cc:	sbb    eax,0xc96b9ead
  41a8d1:	retf   0xdf88
  41a8d4:	pop    edi
  41a8d5:	addr16 cs test al,0x62
  41a8d9:	test   BYTE PTR [eax],0x81
  41a8dc:	and    DWORD PTR [edi-0x5ea47ae4],edx
  41a8e2:	idiv   ecx
  41a8e4:	push   DWORD PTR [esi+0x1fad6022]
  41a8ea:	sbb    BYTE PTR [ecx-0xb02258],cl
  41a8f0:	rcr    BYTE PTR ds:0x99d90071,0x8a
  41a8f7:	add    BYTE PTR [ebp+edi*4+0x5cd2ca13],ah
  41a8fe:	nop
  41a8ff:	jp     0x41a969
  41a901:	pop    ecx
  41a902:	pop    esi
  41a903:	ds xchg esi,eax
  41a905:	fist   DWORD PTR [ebp+0x6fe70d73]
  41a90b:	ret    0x3fe
  41a90e:	aam    0x2b
  41a910:	pop    esi
  41a911:	cld    
  41a912:	mov    ebp,edx
  41a914:	repz push ss
  41a916:	or     DWORD PTR [eax],esi
  41a918:	mov    al,ah
  41a91a:	adc    BYTE PTR [eax+0x7062fd49],dh
  41a920:	sub    DWORD PTR [ebp+0xbea967a],0xfffffff0
  41a927:	test   BYTE PTR [esi-0x22d7cf5f],bl
  41a92d:	mov    eax,0x8b49a046
  41a932:	out    dx,al
  41a933:	pop    es
  41a934:	rcr    DWORD PTR [ebp-0x1e406d96],cl
  41a93a:	adc    eax,0xa1c7c7c4
  41a93f:	test   al,0x3d
  41a941:	js     0x41a8de
  41a943:	punpcklbw mm0,mm4
  41a946:	add    eax,0x125d667
  41a94b:	pop    esp
  41a94c:	ja     0x41a96c
  41a94e:	fidiv  WORD PTR [eax-0xeb28dc8]
  41a954:	sbb    DWORD PTR [ebx-0x6cb785c5],esp
  41a95a:	mov    dl,0x9c
  41a95c:	mov    dh,0xc
  41a95e:	(bad)  
  41a95f:	es cmc 
  41a961:	jp     0x41a96a
  41a963:	pop    edi
  41a964:	adc    BYTE PTR [eax-0xe],ah
  41a967:	xchg   esp,eax
  41a968:	or     eax,0x2699b082
  41a96d:	das    
  41a96e:	dec    edx
  41a96f:	int3   
  41a970:	repz push es
  41a972:	mov    DWORD PTR [edx-0x43d0d39e],0xca401a8e
  41a97c:	jno    0x41a971
  41a97e:	rcl    BYTE PTR [ebx+0x7c83e7e8],0x3a
  41a985:	repnz cmp ebx,DWORD PTR [eax+0x69]
  41a989:	fist   DWORD PTR [esi]
  41a98b:	pop    ebp
  41a98c:	js     0x41a9e5
  41a98e:	js     0x41a9ef
  41a990:	push   ebp
  41a991:	jle    0x41a91e
  41a993:	test   DWORD PTR [esi],ebx
  41a995:	inc    edi
  41a996:	mov    edx,0xfdd7d6be
  41a99b:	dec    edi
  41a99c:	repnz xchg edi,eax
  41a99e:	dec    esp
  41a99f:	inc    ebx
  41a9a0:	pop    ebp
  41a9a1:	(bad)  
  41a9a2:	arpl   WORD PTR [eax],sp
  41a9a4:	dec    esp
  41a9a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a9a6:	int    0xfb
  41a9a8:	rcl    BYTE PTR [esi+0x3e42919],0xdf
  41a9af:	je     0x41a9ff
  41a9b1:	xor    eax,0x6548ed15
  41a9b6:	jg     0x41aa17
  41a9b8:	and    bl,ah
  41a9ba:	push   ss
  41a9bb:	int    0x1d
  41a9bd:	xor    cl,ah
  41a9bf:	aaa    
  41a9c0:	or     eax,0xb74b4cb7
  41a9c5:	xchg   BYTE PTR [ebx],ah
  41a9c7:	out    dx,eax
  41a9c8:	mov    ds:0x92020d76,al
  41a9cd:	mov    edi,0x7be03397
  41a9d2:	mov    eax,0x8a9929b8
  41a9d7:	cwde   
  41a9d8:	push   ss
  41a9d9:	pop    esp
  41a9da:	daa    
  41a9db:	dec    eax
  41a9dc:	ret    
  41a9dd:	test   al,0xa2
  41a9df:	ret    
  41a9e0:	shl    DWORD PTR [edi-0x50],1
  41a9e3:	lds    ebp,FWORD PTR [edx]
  41a9e5:	rol    ebx,cl
  41a9e7:	xchg   ecx,eax
  41a9e8:	push   edi
  41a9e9:	fisub  WORD PTR [ecx]
  41a9eb:	sub    dh,BYTE PTR [edi-0x27]
  41a9ee:	repnz and DWORD PTR [esi],esi
  41a9f1:	cwde   
  41a9f2:	stos   DWORD PTR es:[edi],eax
  41a9f3:	add    bl,0x74
  41a9f6:	push   ds
  41a9f7:	add    ah,BYTE PTR [ebp+0x51]
  41a9fa:	mov    cl,0x2f
  41a9fc:	mov    esp,0x92b32821
  41aa01:	addr16 dec ebp
  41aa03:	stos   BYTE PTR es:[edi],al
  41aa04:	(bad)  
  41aa05:	adc    DWORD PTR [edx+0x73],ebx
  41aa08:	fld    TBYTE PTR [esi+ebx*8+0x5dc4d1d5]
  41aa0f:	sub    BYTE PTR [ebx-0x5d96d414],al
  41aa15:	mov    BYTE PTR [edi-0xb],bh
  41aa18:	inc    ebp
  41aa19:	mov    bl,0x4d
  41aa1b:	jbe    0x41aa6b
  41aa1d:	das    
  41aa1e:	outs   dx,BYTE PTR ds:[esi]
  41aa1f:	jmp    0x8210e44e
  41aa24:	adc    al,0x6c
  41aa26:	push   esi
  41aa27:	jmp    0x3376:0x31d69746
  41aa2e:	(bad)
  41aa31:	dec    ebp
  41aa32:	in     eax,dx
  41aa33:	je     0x41a9d9
  41aa35:	aam    0x6f
  41aa37:	adc    edi,edi
  41aa39:	(bad)  
  41aa3a:	leave  
  41aa3b:	dec    esp
  41aa3c:	(bad)  
  41aa3d:	cdq    
  41aa3e:	or     edx,DWORD PTR [ebx+esi*8+0x46ee5635]
  41aa45:	jl     0x41a9dc
  41aa47:	call   0xea2088e9
  41aa4c:	sbb    ebp,DWORD PTR [edi]
  41aa4e:	push   eax
  41aa4f:	mov    ch,0xe6
  41aa51:	fs sbb al,0x75
  41aa54:	sbb    cl,dh
  41aa56:	cmp    BYTE PTR ds:0xa29e6299,0x5b
  41aa5d:	xor    ch,BYTE PTR [ebx]
  41aa5f:	push   ds
  41aa60:	arpl   bx,bx
  41aa62:	cmp    eax,0xe78744e8
  41aa67:	stos   DWORD PTR es:[edi],eax
  41aa68:	ins    DWORD PTR es:[edi],dx
  41aa69:	test   eax,0x339b65f0
  41aa6e:	les    eax,FWORD PTR [esi-0x3b4c6069]
  41aa74:	stos   DWORD PTR es:[edi],eax
  41aa75:	mov    DWORD PTR [ebp+0x1fbeb7aa],edi
  41aa7b:	jne    0x41aaa2
  41aa7d:	lods   al,BYTE PTR ds:[esi]
  41aa7e:	xchg   edi,eax
  41aa7f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aa80:	dec    edi
  41aa81:	inc    edi
  41aa82:	mov    DWORD PTR [esi+edx*1-0x2659bb79],0xca42245f
  41aa8d:	add    DWORD PTR [edx+0x1],eax
  41aa90:	cmp    esp,edi
  41aa92:	sub    al,0x46
  41aa94:	test   dl,0xbb
  41aa97:	push   ebp
  41aa98:	je     0x41aa67
  41aa9a:	pminsw mm3,QWORD PTR [ebp-0x6dac7fc1]
  41aaa1:	(bad)  
  41aaa2:	xor    bl,al
  41aaa4:	cld    
  41aaa5:	xor    al,0xa9
  41aaa8:	mov    WORD PTR [esi],gs
  41aaaa:	or     al,0x21
  41aaac:	jno    0x41aacc
  41aaae:	mov    bl,0x4e
  41aab0:	rcl    cl,cl
  41aab2:	mov    ds:0x14c0d27e,eax
  41aab7:	add    al,BYTE PTR [ebp+0xc]
  41aaba:	idiv   eax
  41aabc:	imul   ebp,ebx,0x866ecdb8
  41aac2:	aad    0x8f
  41aac4:	gs ja  0x41aac6
  41aac7:	add    DWORD PTR [eax-0x31f9996f],0x9248f327
  41aad1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aad2:	repz xchg ah,ch
  41aad5:	jecxz  0x41aa6c
  41aad7:	(bad)  
  41aad8:	bound  edi,QWORD PTR [edi+0x7708e075]
  41aade:	mov    al,0xc8
  41aae0:	or     al,0xc1
  41aae2:	dec    edi
  41aae3:	(bad)  
  41aae4:	mov    bl,0x17
  41aae6:	and    ax,0x8368
  41aaea:	sbb    edi,DWORD PTR [edi+ecx*2-0x4116aeef]
  41aaf1:	and    BYTE PTR [edx-0x13304a84],bl
  41aaf7:	sub    bl,dh
  41aaf9:	mov    ecx,DWORD PTR [ecx+0x899936f]
  41aaff:	hlt    
  41ab00:	les    edx,FWORD PTR [esi]
  41ab02:	xchg   ebp,eax
  41ab03:	jg     0x41ab02
  41ab05:	adc    al,0x28
  41ab07:	and    BYTE PTR [eax-0x5d],ah
  41ab0a:	ret    0x9d50
  41ab0d:	daa    
  41ab0e:	pushf  
  41ab0f:	inc    edx
  41ab10:	lods   al,BYTE PTR ds:[esi]
  41ab11:	cdq    
  41ab12:	sbb    bh,BYTE PTR [edx]
  41ab14:	and    bl,BYTE PTR [edi]
  41ab16:	lea    eax,[ebp+eiz*4-0x35]
  41ab1a:	xor    ebp,esi
  41ab1c:	sbb    al,0x9d
  41ab1e:	(bad)  
  41ab1f:	rcr    BYTE PTR [ecx+0x40de2a7d],cl
  41ab25:	mov    ebp,0xd4ee4e84
  41ab2a:	fiadd  WORD PTR [ebx]
  41ab2c:	dec    ecx
  41ab2d:	(bad)  
  41ab2e:	fidivr DWORD PTR [esi+0x5c]
  41ab31:	icebp  
  41ab32:	inc    eax
  41ab33:	out    dx,al
  41ab34:	out    0xe2,eax
  41ab36:	aaa    
  41ab37:	adc    eax,edx
  41ab39:	sub    eax,0x64b9495c
  41ab3e:	mov    al,ds:0xa5d0dd13
  41ab43:	outs   dx,DWORD PTR ds:[esi]
  41ab44:	sub    al,0xb4
  41ab46:	add    al,0x65
  41ab48:	xlat   BYTE PTR ds:[ebx]
  41ab49:	sub    bh,bh
  41ab4b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ab4c:	jbe    0x41ab14
  41ab4e:	adc    al,BYTE PTR [ecx+0x2b]
  41ab51:	pop    es
  41ab52:	repnz (bad) 
  41ab54:	adc    edi,DWORD PTR [ecx+0xa95cd23]
  41ab5a:	cli    
  41ab5b:	inc    ebp
  41ab5c:	jge    0x41ab5e
  41ab5e:	addr16 rol ah,0xfd
  41ab62:	or     al,0x6
  41ab64:	cmp    bl,BYTE PTR [edi]
  41ab66:	fdiv   QWORD PTR [edi]
  41ab68:	or     eax,0xae4a202e
  41ab6d:	dec    eax
  41ab6e:	test   eax,0x65de4414
  41ab73:	out    dx,al
  41ab74:	inc    esi
  41ab75:	xor    eax,0x34c323e0
  41ab7a:	xchg   dh,ch
  41ab7c:	adc    esp,DWORD PTR [ebp-0xc]
  41ab7f:	stos   BYTE PTR es:[edi],al
  41ab80:	out    dx,al
  41ab81:	fs mov ebp,0xec472997
  41ab87:	clc    
  41ab88:	add    DWORD PTR [edx-0x3085c86b],ecx
  41ab8e:	imul   esp,DWORD PTR [edx],0xce7d9311
  41ab94:	int3   
  41ab95:	cmc    
  41ab96:	inc    ecx
  41ab97:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ab98:	in     al,dx
  41ab99:	jns    0x41aba2
  41ab9b:	pop    edi
  41ab9c:	dec    ecx
  41ab9d:	pop    es
  41ab9e:	adc    cl,BYTE PTR [ebx+0x60715734]
  41aba4:	jp     0x41abfa
  41aba6:	inc    BYTE PTR [edx]
  41aba8:	add    bl,bl
  41abaa:	mov    esi,0xb361c28d
  41abaf:	mov    fs:0x616932c9,al
  41abb5:	push   es
  41abb6:	iret   
  41abb7:	push   edi
  41abb8:	adc    edx,ebp
  41abba:	repnz ficomp DWORD PTR [eax-0x5b92d895]
  41abc1:	sub    ch,BYTE PTR [esp+ebp*1-0x52b7bbe4]
  41abc8:	dec    ecx
  41abc9:	das    
  41abca:	call   DWORD PTR [ebx-0x5]
  41abcd:	sbb    BYTE PTR [edx+ebx*8-0x1ee478d6],bh
  41abd4:	mov    eax,ds:0xcf65c266
  41abd9:	shr    DWORD PTR [ecx+0x1b],1
  41abdc:	(bad)  
  41abdd:	mov    ecx,0xa9ea0d45
  41abe2:	mov    esi,0x129a18e6
  41abe7:	xlat   BYTE PTR ds:[ebx]
  41abe8:	shr    BYTE PTR [edx+0x9],1
  41abeb:	mov    esi,DWORD PTR [esi+0x22]
  41abee:	dec    esi
  41abef:	xchg   ebx,eax
  41abf0:	out    0x21,al
  41abf2:	add    al,0xb4
  41abf4:	div    ecx
  41abf6:	pushf  
  41abf7:	fst    QWORD PTR [ecx+eiz*1]
  41abfa:	lods   al,BYTE PTR ds:[esi]
  41abfb:	or     BYTE PTR [esi+edi*1+0x4afd5728],al
  41ac02:	mov    dl,0x6e
  41ac04:	fisttp DWORD PTR [esp+ecx*8-0x6011fcdc]
  41ac0b:	(bad)  
  41ac0c:	int    0x39
  41ac0e:	(bad)  
  41ac0f:	pop    ebx
  41ac10:	pop    esi
  41ac11:	ror    edx,cl
  41ac13:	clc    
  41ac14:	and    bh,BYTE PTR [eax-0x7ff68586]
  41ac1a:	jg     0x41abef
  41ac1c:	mov    al,0xff
  41ac1e:	mov    ebp,esi
  41ac20:	push   ds
  41ac21:	jl     0x41ac3b
  41ac23:	pushw  cs
  41ac25:	mov    cl,0x37
  41ac27:	imul   edi,DWORD PTR [ebx-0x355d2291],0x76
  41ac2e:	lods   eax,DWORD PTR ds:[esi]
  41ac2f:	call   0xad5:0x92d697b0
  41ac36:	imul   edi,DWORD PTR [ecx],0xffffffe9
  41ac39:	outs   dx,BYTE PTR ds:[esi]
  41ac3a:	addr16 pushf 
  41ac3c:	lods   al,BYTE PTR ds:[esi]
  41ac3d:	fistp  DWORD PTR [ebx]
  41ac3f:	xchg   ebx,eax
  41ac40:	fisttp WORD PTR [ebx-0x922400c]
  41ac46:	ins    DWORD PTR es:[edi],dx
  41ac47:	adc    esi,DWORD PTR [edx-0xa]
  41ac4a:	rcl    DWORD PTR ds:0x2cd59be2,cl
  41ac50:	repz (bad) 
  41ac52:	and    DWORD PTR [ebx+0x5a89a120],ebx
  41ac58:	jge    0x41ac0d
  41ac5a:	nop
  41ac5b:	scas   al,BYTE PTR es:[edi]
  41ac5c:	scas   al,BYTE PTR es:[edi]
  41ac5d:	enter  0xa401,0x57
  41ac61:	xchg   edi,eax
  41ac62:	push   ebx
  41ac63:	mov    bh,0x91
  41ac65:	cdq    
  41ac66:	or     ebp,DWORD PTR [edx]
  41ac68:	adc    eax,0xdcafe3ee
  41ac6d:	or     bl,BYTE PTR [edi-0x5b954914]
  41ac73:	mov    edx,0x8d105420
  41ac78:	ins    DWORD PTR es:[edi],dx
  41ac79:	jno    0x41ac1d
  41ac7b:	int3   
  41ac7c:	and    DWORD PTR [edx+0x48],ebx
  41ac7f:	jno    0x41ac67
  41ac81:	sbb    bh,bh
  41ac83:	ss mov al,0x19
  41ac86:	mov    ecx,0xf6ef34a1
  41ac8b:	out    0x67,eax
  41ac8d:	lods   al,BYTE PTR ds:[esi]
  41ac8e:	push   ss
  41ac8f:	mov    eax,ds:0xe9cb99c2
  41ac94:	and    ah,BYTE PTR [ebp+ebp*8-0x54411a7e]
  41ac9b:	pop    ebp
  41ac9c:	lahf   
  41ac9d:	add    DWORD PTR [edx+ecx*1-0x253123d9],ebx
  41aca4:	jmp    0x40ef:0xa642e9a0
  41acab:	daa    
  41acac:	push   cs
  41acad:	fiadd  DWORD PTR [eax]
  41acaf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41acb0:	mov    es,WORD PTR [ebx-0x1d802ec2]
  41acb6:	sbb    DWORD PTR [ebx],ebp
  41acb8:	in     al,0xa3
  41acba:	push   esp
  41acbb:	mov    edx,0x319195e7
  41acc0:	hlt    
  41acc1:	inc    eax
  41acc2:	sbb    eax,ecx
  41acc4:	jg     0x41ac72
  41acc6:	mov    fs,ecx
  41acc8:	xor    ecx,DWORD PTR [ecx-0x57ad2cc4]
  41acce:	les    eax,FWORD PTR [eax]
  41acd0:	rcl    DWORD PTR [edx],0x68
  41acd3:	mov    WORD PTR [ebx],es
  41acd5:	pop    ds
  41acd6:	sub    esp,DWORD PTR [ecx+0xf]
  41acd9:	sbb    al,0xbd
  41acdb:	add    BYTE PTR [eax],0x64
  41acde:	test   eax,0x1cf62ba2
  41ace3:	fcmovnu st,st(1)
  41ace5:	jns    0x41acce
  41ace7:	push   ds
  41ace8:	sub    ch,BYTE PTR [edx*4+0x64a690f7]
  41acef:	xchg   ebx,eax
  41acf0:	pop    ebx
  41acf1:	sbb    BYTE PTR [eax+0x18c24669],bh
  41acf7:	xchg   dh,al
  41acf9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41acfa:	inc    esi
  41acfb:	xchg   edx,eax
  41acfc:	push   ecx
  41acfd:	out    0x5,eax
  41acff:	or     al,0xda
  41ad01:	sub    BYTE PTR [edx],cl
  41ad03:	bound  esi,QWORD PTR [eax-0x46]
  41ad06:	pop    eax
  41ad07:	arpl   WORD PTR [edx+ecx*4-0x2b],bp
  41ad0b:	sbb    eax,0xc38498a6
  41ad10:	sub    eax,0xe72f7cd1
  41ad15:	imul   ecx,eax,0x36
  41ad18:	dec    ebx
  41ad19:	jnp    0x41ad37
  41ad1b:	xor    edx,ecx
  41ad1d:	xlat   BYTE PTR ds:[ebx]
  41ad1e:	xor    al,0xeb
  41ad20:	mov    bl,0xed
  41ad22:	loop   0x41ad37
  41ad24:	popf   
  41ad25:	inc    esi
  41ad26:	(bad)  
  41ad27:	mov    ch,0x8c
  41ad29:	sbb    dl,BYTE PTR [eax]
  41ad2b:	jns    0x41ad00
  41ad2d:	popa   
  41ad2e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ad2f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ad30:	pop    esp
  41ad31:	hlt    
  41ad32:	and    DWORD PTR [edi+edi*2],0xd10a4cb1
  41ad39:	or     edx,0xe676b8a5
  41ad3f:	lahf   
  41ad40:	sahf   
  41ad41:	jb     0x41ad49
  41ad43:	pushf  
  41ad44:	in     al,0x3a
  41ad46:	in     al,dx
  41ad47:	xlat   BYTE PTR ds:[ebx]
  41ad48:	pusha  
  41ad49:	mov    dl,0xf6
  41ad4b:	mov    DWORD PTR [edi+eax*4+0x31],esi
  41ad4f:	bndstx [ebx+0x1],(bad)
  41ad53:	out    0xf6,eax
  41ad55:	lods   al,BYTE PTR ds:[esi]
  41ad56:	aad    0x2e
  41ad58:	stc    
  41ad59:	sbb    esi,DWORD PTR [esi]
  41ad5b:	mov    DWORD PTR [eax],ecx
  41ad5d:	loop   0x41ad07
  41ad5f:	cli    
  41ad60:	dec    ebx
  41ad61:	add    dh,cl
  41ad63:	loop   0x41ad9e
  41ad65:	repnz and bl,BYTE PTR cs:[ebx+0x2821d774]
  41ad6d:	sub    BYTE PTR [esi+0x7e],dl
  41ad70:	push   esi
  41ad71:	adc    eax,0xd0818ed2
  41ad76:	cmp    al,BYTE PTR [ebp+0x29362477]
  41ad7c:	mov    ecx,0x12c256a1
  41ad81:	aas    
  41ad82:	pop    eax
  41ad83:	in     eax,0xb2
  41ad85:	jp     0x41ad0a
  41ad87:	test   al,0x6c
  41ad89:	int3   
  41ad8a:	cdq    
  41ad8b:	and    eax,0xc97d939c
  41ad90:	pop    esp
  41ad91:	adc    esi,esi
  41ad93:	int3   
  41ad94:	mov    ch,0x6e
  41ad96:	lahf   
  41ad97:	xchg   esi,eax
  41ad98:	mov    ds:0x1160bf,eax
  41ad9d:	inc    esi
  41ad9e:	xchg   ecx,eax
  41ad9f:	test   al,bh
  41ada1:	(bad)  
  41ada2:	xor    dl,BYTE PTR [esi+0x2e]
  41ada5:	(bad)  
  41ada6:	mov    ecx,0x4cf7e0d7
  41adab:	ficomp DWORD PTR [ebx+0x61]
  41adae:	push   ss
  41adaf:	push   esi
  41adb0:	aad    0x4f
  41adb2:	push   0xffffffec
  41adb4:	cdq    
  41adb5:	dec    edi
  41adb6:	paddsb mm2,mm5
  41adb9:	popf   
  41adba:	(bad)  
  41adbb:	xchg   BYTE PTR [edi],dl
  41adbd:	retf   
  41adbe:	shl    dh,0x91
  41adc1:	rcr    eax,cl
  41adc3:	adc    ebp,DWORD PTR [eax+0x6330e381]
  41adc9:	cmp    bh,BYTE PTR [ebx-0x69]
  41adcc:	adc    eax,0x7df1ed27
  41add1:	in     eax,dx
  41add2:	and    eax,0x6de0e931
  41add7:	inc    ebx
  41add8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41add9:	int    0xf0
  41addb:	mov    ds:0x4e4e5713,al
  41ade0:	dec    ebp
  41ade1:	sbb    al,BYTE PTR [ebp+0x603faf58]
  41ade7:	adc    DWORD PTR [ebx+0x22],ecx
  41adea:	in     al,0x54
  41adec:	mov    bl,0x33
  41adee:	pop    ebp
  41adef:	(bad)  
  41adf0:	call   DWORD PTR [esi+0x4383e3c5]
  41adf6:	push   edx
  41adf7:	icebp  
  41adf8:	mov    edi,0x99cfa2cb
  41adfd:	jae    0x41ae48
  41adff:	pushf  
  41ae00:	ja     0x41ae23
  41ae02:	loopne 0x41ada8
  41ae04:	(bad)  
  41ae05:	pusha  
  41ae06:	mov    edi,0x97906bd8
  41ae0b:	cmp    eax,0x356e67c5
  41ae10:	mov    al,ds:0x2286adba
  41ae15:	jle    0x41ae28
  41ae17:	ror    ch,1
  41ae19:	test   al,0x23
  41ae1b:	jg     0x41ae25
  41ae1d:	es leave 
  41ae1f:	outs   dx,BYTE PTR ds:[esi]
  41ae20:	sub    ah,dl
  41ae22:	das    
  41ae23:	bound  ebp,QWORD PTR [ebx]
  41ae25:	fnstcw WORD PTR [ecx]
  41ae27:	jnp    0x41adf4
  41ae29:	cmp    al,BYTE PTR [esi+0x75]
  41ae2c:	or     eax,0xb418a067
  41ae31:	pop    ecx
  41ae32:	(bad)  
  41ae33:	xchg   edx,eax
  41ae34:	test   eax,0x271a6f13
  41ae39:	dec    edx
  41ae3a:	sahf   
  41ae3b:	adc    dh,BYTE PTR [edx]
  41ae3d:	aam    0x20
  41ae3f:	cwde   
  41ae40:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ae41:	fistp  QWORD PTR [ebx]
  41ae43:	mov    ds:0xf2b9a766,eax
  41ae48:	popf   
  41ae49:	add    edx,DWORD PTR [ebp-0x2539ef76]
  41ae4f:	(bad)  
  41ae50:	jl     0x41adfc
  41ae52:	repnz in eax,dx
  41ae54:	scas   al,BYTE PTR es:[edi]
  41ae55:	pushf  
  41ae56:	cmc    
  41ae57:	loopne 0x41ae7c
  41ae59:	sub    eax,0xc583c3e
  41ae5e:	inc    ebx
  41ae5f:	cmp    al,0x50
  41ae61:	retf   
  41ae62:	cmp    DWORD PTR [ebp-0x76],ecx
  41ae65:	call   0xfb00:0xf1a7d703
  41ae6c:	adc    bh,BYTE PTR [esi-0x223d1c02]
  41ae72:	pop    edx
  41ae73:	rcr    al,0x25
  41ae76:	push   cs
  41ae77:	iret   
  41ae78:	test   al,0xa9
  41ae7a:	aaa    
  41ae7b:	sub    al,0x4c
  41ae7d:	test   al,0x10
  41ae7f:	pop    DWORD PTR [esi]
  41ae81:	xchg   dh,dh
  41ae83:	out    dx,al
  41ae84:	jno    0x41aede
  41ae86:	mov    edi,0xe83242a5
  41ae8b:	lods   al,BYTE PTR ds:[esi]
  41ae8c:	inc    edx
  41ae8d:	pop    ds
  41ae8e:	shr    BYTE PTR [edi-0x3546b726],0xdf
  41ae95:	sub    BYTE PTR [edi-0x35],bh
  41ae98:	(bad)  
  41ae99:	inc    esi
  41ae9a:	push   eax
  41ae9b:	adc    DWORD PTR [esp+eax*4-0x5],esp
  41ae9f:	pop    edx
  41aea0:	cs aad 0x48
  41aea3:	mov    ebp,0x88b1d448
  41aea8:	mov    edx,0xdc0a8a1b
  41aead:	das    
  41aeae:	fwait
  41aeaf:	js     0x41aec1
  41aeb1:	pop    ebp
  41aeb2:	mov    ebp,0xa3c78ab3
  41aeb7:	mov    ebp,0x415e6e26
  41aebc:	push   edx
  41aebd:	add    al,0x7d
  41aebf:	dec    esp
  41aec0:	mov    edx,0x90dc6c30
  41aec5:	into   
  41aec6:	mov    dl,bl
  41aec8:	shl    BYTE PTR [ecx+ebx*8-0xd],1
  41aecc:	adc    al,BYTE PTR [edx+0x4]
  41aecf:	push   0xffffffc1
  41aed1:	push   ebx
  41aed2:	and    DWORD PTR [esi-0x13],esi
  41aed5:	xor    al,BYTE PTR [edi+0x2a95dae6]
  41aedb:	sub    al,0x66
  41aedd:	iret   
  41aede:	mov    ds,WORD PTR [si]
  41aee1:	lods   eax,DWORD PTR ds:[esi]
  41aee2:	or     DWORD PTR ss:[ebx],0x8297ece0
  41aee9:	xor    BYTE PTR [edx+ebp*8],dl
  41aeec:	mov    eax,ds:0x39d648c2
  41aef1:	mov    cl,0x4b
  41aef3:	xor    esi,DWORD PTR [ebp+0x7a5f0b1c]
  41aef9:	ins    DWORD PTR es:[edi],dx
  41aefa:	out    0x3f,eax
  41aefc:	xlat   BYTE PTR ds:[ebx]
  41aefd:	mov    eax,0xeda28b88
  41af02:	push   0x3639d879
  41af07:	xchg   ebx,eax
  41af08:	adc    bh,cl
  41af0a:	lea    ebp,[ebx-0x18]
  41af0d:	pusha  
  41af0e:	inc    ebp
  41af0f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41af10:	sub    al,0x31
  41af12:	div    DWORD PTR [esi-0x36206126]
  41af18:	into   
  41af19:	xlat   BYTE PTR ds:[ebx]
  41af1a:	mov    eax,0x38c39048
  41af1f:	fsub   QWORD PTR [ebx-0x1342d771]
  41af25:	pop    esp
  41af26:	xchg   ebp,eax
  41af27:	pop    ss
  41af28:	xchg   DWORD PTR ds:0xe09dcbf8,edx
  41af2e:	and    ecx,DWORD PTR [ebp-0x2e]
  41af31:	fbld   TBYTE PTR [ebx-0x49]
  41af34:	ret    
  41af35:	ins    BYTE PTR es:[edi],dx
  41af36:	mov    ecx,0xcfc16029
  41af3b:	mov    dh,BYTE PTR [ebp+0x79]
  41af3e:	(bad)  
  41af3f:	fiadd  WORD PTR cs:[ebx]
  41af42:	xchg   edi,eax
  41af44:	(bad)  
  41af46:	loope  0x41af9c
  41af48:	jp     0x41aed4
  41af4a:	adc    dh,ch
  41af4c:	and    al,0x2f
  41af4e:	cmp    DWORD PTR [ecx-0x58fa3bd6],ecx
  41af54:	jecxz  0x41af6d
  41af56:	inc    ebp
  41af57:	jbe    0x41af16
  41af59:	or     eax,0x451cfe80
  41af5e:	je     0x41af4a
  41af60:	mov    ch,0xd8
  41af62:	dec    eax
  41af63:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41af64:	xchg   edx,eax
  41af65:	cmp    DWORD PTR [ecx+0x4c],0x995d6140
  41af6c:	out    dx,eax
  41af6d:	lds    ecx,FWORD PTR [esi]
  41af6f:	clc    
  41af70:	xchg   esi,eax
  41af71:	out    0xd1,eax
  41af73:	xor    eax,0x912703bb
  41af78:	jb     0x41aefe
  41af7a:	rol    BYTE PTR [edx+0x2ba588d1],cl
  41af80:	fild   WORD PTR [edx]
  41af82:	push   es
  41af83:	mul    WORD PTR [edx+0x1ce6b6c0]
  41af8a:	inc    ebx
  41af8b:	pop    esi
  41af8c:	adc    edi,DWORD PTR [esi]
  41af8e:	inc    ebp
  41af8f:	cmp    ecx,DWORD PTR [eax]
  41af91:	cmp    cl,BYTE PTR [ebp+0x19015c5e]
  41af97:	mov    al,ds:0x8b1a99a
  41af9c:	adc    BYTE PTR [ebx+0x33],0x9b
  41afa0:	ret    
  41afa1:	call   0xc1117604
  41afa6:	push   0x66
  41afa8:	stos   BYTE PTR es:[edi],al
  41afa9:	cmp    BYTE PTR [esi-0x75],al
  41afac:	(bad)  
  41afad:	popf   
  41afae:	inc    ebx
  41afaf:	mov    ds,WORD PTR [edi]
  41afb1:	frstor [ebp-0x6b]
  41afb4:	ret    
  41afb5:	dec    esp
  41afb6:	pop    es
  41afb7:	ins    BYTE PTR es:[edi],dx
  41afb8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41afb9:	pop    es
  41afba:	jp     0x41afeb
  41afbc:	in     eax,0x8f
  41afbe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41afbf:	push   ebx
  41afc0:	inc    edx
  41afc1:	scas   eax,DWORD PTR es:[edi]
  41afc2:	add    DWORD PTR [eax+edi*2+0x5170eea7],esi
  41afc9:	xchg   ebx,eax
  41afca:	add    al,0x66
  41afcc:	push   edi
  41afcd:	jae    0x41afc5
  41afcf:	dec    ebp
  41afd0:	xchg   eax,ebp
  41afd2:	xchg   edx,eax
  41afd3:	test   ebx,0x2cb57ad1
  41afd9:	cmp    bl,dl
  41afdb:	ss sub al,0x2d
  41afde:	out    dx,al
  41afdf:	cmc    
  41afe0:	in     al,dx
  41afe1:	dec    edx
  41afe2:	adc    al,0x88
  41afe4:	add    eax,0x8f94c6e8
  41afe9:	loop   0x41b01b
  41afeb:	dec    edi
  41afec:	popa   
  41afed:	add    al,0x25
  41afef:	sbb    eax,0x73341187
  41aff4:	clc    
  41aff5:	ret    0x60e2
  41aff8:	sub    ebp,DWORD PTR [ebp-0x28ea530f]
  41affe:	push   esp
  41afff:	adc    edx,DWORD PTR [ebp+0x383b2b0]
  41b005:	pop    edi
  41b006:	lods   al,BYTE PTR ds:[esi]
  41b007:	xor    ecx,eax
  41b009:	xor    DWORD PTR [edx+0x4f],ecx
  41b00c:	loopne 0x41afdb
  41b00e:	jno    0x41b07f
  41b010:	fmul   DWORD PTR [edx-0x70c07061]
  41b016:	fstp   QWORD PTR [eax-0x295125ab]
  41b01c:	adc    bl,BYTE PTR [eax+0x5]
  41b01f:	pop    edx
  41b020:	adc    cl,BYTE PTR [ebp+0x6904961c]
  41b026:	(bad)  
  41b027:	push   cs
  41b028:	xlat   BYTE PTR ds:[ebx]
  41b029:	popa   
  41b02a:	addr16 or al,0xeb
  41b02d:	pop    edx
  41b02e:	jnp    0x41b023
  41b030:	push   0xc372b536
  41b035:	sar    BYTE PTR [ebx],cl
  41b037:	adc    eax,0xaacc90f0
  41b03c:	ss sbb eax,0xdd3b3c40
  41b042:	push   edx
  41b043:	pop    eax
  41b044:	sbb    eax,0x48f40040
  41b049:	out    0xd9,al
  41b04b:	outs   dx,DWORD PTR ds:[esi]
  41b04c:	or     BYTE PTR [eax+ebp*1+0x3b9dc67a],ch
  41b053:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b054:	fidivr WORD PTR [ebx+0x2d9e34a8]
  41b05a:	fsub   QWORD PTR [edi-0x764e5e75]
  41b060:	pop    ecx
  41b061:	cli    
  41b062:	jbe    0x41b023
  41b064:	or     ebp,ecx
  41b066:	sti    
  41b067:	mov    es,WORD PTR [esi+0x73]
  41b06a:	mov    WORD PTR [ebp+esi*2+0x2b],?
  41b06e:	dec    esi
  41b06f:	mov    esp,0x1beaf933
  41b074:	mov    bh,BYTE PTR [esi]
  41b076:	ret    0xe7b6
  41b079:	ret    
  41b07a:	cmp    BYTE PTR [edi+eax*1],dh
  41b07d:	les    esp,FWORD PTR [edx+0x1d]
  41b080:	push   ecx
  41b081:	mov    ch,0xfb
  41b083:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b084:	ret    
  41b085:	shl    bh,1
  41b087:	fist   WORD PTR [edi-0x1950890c]
  41b08d:	mov    cl,0x92
  41b08f:	xchg   ebp,eax
  41b090:	add    eax,DWORD PTR [edi]
  41b092:	add    BYTE PTR [ebp+esi*2-0x269130c],ch
  41b099:	pusha  
  41b09a:	es jo  0x41b041
  41b09d:	jle    0x41b028
  41b09f:	addr16 and al,0xd4
  41b0a2:	inc    esp
  41b0a3:	retf   0x56b6
  41b0a6:	sahf   
  41b0a7:	dec    esi
  41b0a8:	mov    esp,0x93a2ded8
  41b0ad:	icebp  
  41b0ae:	call   0xe505023e
  41b0b3:	int3   
  41b0b4:	into   
  41b0b5:	mov    bl,bh
  41b0b7:	jp     0x41b09f
  41b0b9:	jb     0x41b13a
  41b0bb:	sar    BYTE PTR [ecx-0x50],1
  41b0be:	or     al,0xa3
  41b0c0:	neg    bl
  41b0c2:	xchg   DWORD PTR [ebp-0x2e253e0b],ebp
  41b0c8:	mov    esi,0x1286d1c8
  41b0cd:	mov    ss,WORD PTR [edi+0x77]
  41b0d0:	lahf   
  41b0d1:	leave  
  41b0d2:	inc    ebp
  41b0d3:	cmp    bl,0x14
  41b0d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b0d7:	gs or  eax,0xe0e99f78
  41b0dd:	in     al,dx
  41b0de:	xor    DWORD PTR [esi+ecx*8+0x6f6738e0],esi
  41b0e5:	aas    
  41b0e6:	and    al,0x13
  41b0e8:	neg    BYTE PTR [edi+0x3d9483f7]
  41b0ee:	inc    esi
  41b0ef:	fs jae 0x41b14d
  41b0f2:	fwait
  41b0f3:	mov    dh,ch
  41b0f5:	fistp  QWORD PTR [esi+eiz*2-0x39b72230]
  41b0fc:	mov    bh,0x33
  41b0fe:	(bad)  
  41b0ff:	jb     0x41b12d
  41b101:	mov    eax,ds:0xbf82202
  41b106:	push   0x15
  41b108:	adc    cl,al
  41b10a:	mov    esi,DWORD PTR [edi+ebp*2+0x55a1b425]
  41b111:	xchg   dh,bl
  41b113:	inc    ebx
  41b114:	in     eax,dx
  41b115:	iret   
  41b116:	mov    ch,0xbf
  41b118:	ins    BYTE PTR es:[edi],dx
  41b119:	es int 0xf2
  41b11c:	jb     0x41b127
  41b11e:	sbb    al,0xba
  41b120:	idiv   bl
  41b122:	push   edi
  41b123:	outs   dx,BYTE PTR ds:[esi]
  41b124:	test   al,0x57
  41b126:	rcr    al,cl
  41b128:	ss call 0xd152de00
  41b12e:	pop    ebp
  41b12f:	fidivr WORD PTR [edx+0x66296980]
  41b135:	outs   dx,BYTE PTR ds:[esi]
  41b136:	jp     0x41b0ce
  41b138:	and    al,0xd6
  41b13a:	adc    cl,BYTE PTR [eax]
  41b13c:	(bad)  
  41b13d:	pop    eax
  41b13e:	add    eax,edx
  41b140:	jnp    0x41b197
  41b142:	test   al,0xf
  41b144:	mov    al,ds:0xe45756ee
  41b149:	js     0x41b15d
  41b14b:	dec    esp
  41b14c:	arpl   WORD PTR [edi-0x9],bx
  41b14f:	cmp    bl,BYTE PTR [ebx-0x220e4c69]
  41b155:	cmp    BYTE PTR [eax],bh
  41b157:	and    al,0x9c
  41b159:	test   al,0xc7
  41b15b:	xlat   BYTE PTR ds:[ebx]
  41b15c:	clc    
  41b15d:	sbb    al,al
  41b15f:	out    0x6b,al
  41b161:	xor    al,0xed
  41b163:	xchg   DWORD PTR [esi],ecx
  41b165:	pop    ds
  41b166:	dec    ebx
  41b167:	arpl   WORD PTR [esi+0x51],ax
  41b16a:	std    
  41b16b:	push   esp
  41b16c:	xor    bh,BYTE PTR [edi+0x7]
  41b16f:	cmp    BYTE PTR [esi-0x1e19004f],0x76
  41b176:	sbb    eax,0x29fa8c46
  41b17b:	adc    DWORD PTR [esi],ebx
  41b17d:	xchg   edx,eax
  41b17e:	xchg   ebx,eax
  41b17f:	inc    esp
  41b180:	mov    edx,0x88ef3e3
  41b185:	retf   
  41b186:	mov    dl,0xa6
  41b188:	mov    ecx,0xe3ea6f37
  41b18d:	and    ebp,DWORD PTR [edi]
  41b18f:	lds    esi,FWORD PTR [ecx]
  41b191:	or     al,BYTE PTR [ecx-0x6c]
  41b194:	jmp    0xdd38ac1
  41b199:	out    0x1f,al
  41b19b:	imul   ebp,edi,0x4a4660c
  41b1a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b1a2:	sbb    al,BYTE PTR [edi]
  41b1a4:	dec    esp
  41b1a5:	sub    bh,BYTE PTR fs:0x4b417249
  41b1ac:	mov    eax,ds:0x13b57d66
  41b1b1:	enter  0x75c1,0xc6
  41b1b5:	fldenv [esi-0x62ed7b38]
  41b1bb:	sahf   
  41b1bc:	in     al,0x6e
  41b1be:	xchg   edx,eax
  41b1bf:	push   ebx
  41b1c0:	mov    eax,ds:0xee3b6098
  41b1c5:	fdivr  DWORD PTR [edi+eax*1-0x3a33a89c]
  41b1cc:	push   esp
  41b1cd:	sub    ebp,DWORD PTR [ebp-0x76]
  41b1d0:	pop    edi
  41b1d1:	nop
  41b1d2:	pop    es
  41b1d3:	retf   0x3883
  41b1d6:	js     0x41b235
  41b1d8:	lods   eax,DWORD PTR ds:[esi]
  41b1d9:	or     cl,bl
  41b1db:	pop    edx
  41b1dc:	xchg   ebx,eax
  41b1dd:	and    DWORD PTR [esi+0x1e],eax
  41b1e0:	cmp    eax,0x824e7c92
  41b1e5:	ss or  eax,0x2b3e70c
  41b1eb:	inc    esp
  41b1ec:	mov    DWORD PTR [edi+0x92268dc],ebp
  41b1f2:	aas    
  41b1f3:	jnp    0x41b1ce
  41b1f5:	push   ebx
  41b1f6:	pop    esp
  41b1f7:	xchg   ebp,eax
  41b1f8:	inc    ebp
  41b1f9:	shr    BYTE PTR [ebx+0x4b52d2c],1
  41b1ff:	out    0xd0,eax
  41b201:	jl     0x41b1b5
  41b203:	push   ds
  41b204:	call   0xa844d76b
  41b209:	inc    ecx
  41b20a:	mov    al,ds:0x4672e5d2
  41b20f:	je     0x41b239
  41b211:	pop    es
  41b212:	sub    esp,DWORD PTR [edi+0x5d]
  41b215:	jmp    DWORD PTR ds:0x449b3757
  41b21b:	sbb    esp,ecx
  41b21d:	pop    ecx
  41b21e:	imul   ebp,DWORD PTR [ebp-0x7a],0xffffff9c
  41b222:	push   0xca29f948
  41b227:	ja     0x41b1f2
  41b229:	pop    ebx
  41b22a:	shl    BYTE PTR ss:[edi+0x19],1
  41b22e:	daa    
  41b22f:	xor    BYTE PTR [eax+0x2e],dl
  41b232:	push   ecx
  41b233:	aad    0x5e
  41b235:	cmp    dh,bh
  41b237:	mov    dh,0x38
  41b239:	lods   eax,DWORD PTR ds:[esi]
  41b23a:	jne    0x41b251
  41b23c:	test   DWORD PTR [edx-0x64],edx
  41b23f:	rol    BYTE PTR [edi-0x7f],cl
  41b242:	adc    DWORD PTR [edi],esi
  41b244:	sbb    edi,DWORD PTR [edx-0x64]
  41b247:	sbb    BYTE PTR [eax-0x3653d1a3],ch
  41b24d:	mov    ecx,0xe5d36be6
  41b252:	xchg   esi,eax
  41b253:	push   ss
  41b254:	icebp  
  41b255:	repz (bad) 
  41b257:	loopne 0x41b219
  41b259:	dec    esp
  41b25a:	into   
  41b25b:	xor    bh,cl
  41b25d:	fld    DWORD PTR [eax]
  41b25f:	int    0x5
  41b261:	aam    0xcf
  41b263:	test   DWORD PTR [esi-0x5ccae3f9],esi
  41b269:	fidiv  WORD PTR [eax+0x2ace61db]
  41b26f:	mov    edi,DWORD PTR [ecx]
  41b271:	ss xchg edx,eax
  41b273:	sub    ebx,ebp
  41b275:	fcom   QWORD PTR [ecx]
  41b277:	cmp    al,0x90
  41b279:	adc    al,BYTE PTR [edx]
  41b27b:	std    
  41b27c:	pushf  
  41b27d:	test   DWORD PTR [ecx+0x5],edi
  41b280:	fisub  DWORD PTR [ebx+0x15]
  41b283:	mov    al,ds:0x79971057
  41b288:	fnsave [ecx]
  41b28a:	in     al,0x5e
  41b28c:	imul   DWORD PTR [ebx]
  41b28e:	xchg   ebx,eax
  41b28f:	add    ebx,ebx
  41b291:	dec    ecx
  41b292:	push   cs
  41b293:	add    eax,DWORD PTR [edi+0x2693bbfc]
  41b299:	jnp    0x41b248
  41b29b:	pop    edx
  41b29c:	sub    ah,BYTE PTR ds:0x9434e514
  41b2a2:	dec    esi
  41b2a3:	pop    ebp
  41b2a4:	arpl   WORD PTR [eax+esi*4],bp
  41b2a7:	add    ah,BYTE PTR ds:0xc52fdc0a
  41b2ad:	in     al,dx
  41b2ae:	jp     0x41b2f3
  41b2b0:	jmp    0x1519:0x4751ee42
  41b2b7:	inc    edi
  41b2b8:	sbb    ch,ch
  41b2ba:	test   BYTE PTR [eax-0x105b6ed7],dh
  41b2c0:	mov    DWORD PTR [ecx-0x23],ecx
  41b2c3:	pop    ebx
  41b2c4:	clc    
  41b2c5:	mov    DWORD PTR [ebx+0x27],esi
  41b2c8:	jmp    0x77ff9133
  41b2cd:	dec    esp
  41b2ce:	mov    ecx,0xc75a8d30
  41b2d3:	dec    ecx
  41b2d4:	stos   BYTE PTR es:[edi],al
  41b2d5:	neg    BYTE PTR [esp+ecx*8]
  41b2d8:	outs   dx,DWORD PTR ds:[esi]
  41b2d9:	rol    DWORD PTR [eax+0x5bbf5af3],1
  41b2df:	cwde   
  41b2e0:	and    eax,0x4066a13b
  41b2e5:	(bad)  
  41b2e6:	pop    eax
  41b2e7:	or     al,0xd1
  41b2e9:	adc    bh,BYTE PTR [ebp+edx*4+0x69]
  41b2ed:	adc    al,0x40
  41b2ef:	cmp    DWORD PTR [esi-0x77],esi
  41b2f2:	loop   0x41b2e0
  41b2f4:	lods   eax,DWORD PTR ds:[esi]
  41b2f5:	jns    0x41b373
  41b2f7:	psubd  mm0,QWORD PTR [edx+0x23285b7c]
  41b2fe:	sub    bl,BYTE PTR [edx-0x3d]
  41b301:	mov    ch,0x11
  41b303:	ret    
  41b304:	(bad)  
  41b306:	pop    esp
  41b307:	pop    ds
  41b308:	lds    edi,FWORD PTR [edx]
  41b30a:	(bad)  
  41b30b:	xlat   BYTE PTR ds:[ebx]
  41b30c:	cmp    bh,BYTE PTR [eax]
  41b30e:	push   ds
  41b30f:	inc    BYTE PTR [ebp-0x47bafeb3]
  41b315:	cli    
  41b316:	mov    ah,0x80
  41b318:	jae    0x41b345
  41b31a:	pusha  
  41b31b:	jp     0x41b33c
  41b31d:	retf   
  41b31e:	xchg   esi,eax
  41b31f:	add    al,0x83
  41b321:	dec    edi
  41b322:	test   eax,0xc48bf4b3
  41b327:	out    0xe5,eax
  41b329:	jne    0x41b39f
  41b32b:	sbb    DWORD PTR [edx+0x19],eax
  41b32e:	popa   
  41b32f:	mov    esi,0x6ae001c2
  41b334:	dec    ecx
  41b335:	aad    0x5d
  41b337:	scas   eax,DWORD PTR es:[edi]
  41b338:	bound  ebp,QWORD PTR [ebp+0x9]
  41b33b:	jl     0x41b2eb
  41b33d:	adc    BYTE PTR [edx-0x5d821ec2],cl
  41b343:	mov    eax,ds:0xb244aab7
  41b348:	cdq    
  41b349:	shl    bh,cl
  41b34b:	(bad)  
  41b34c:	shl    BYTE PTR [eax-0x15375094],1
  41b352:	jl     0x41b38f
  41b354:	pop    edi
  41b355:	aas    
  41b356:	push   ds
  41b357:	xchg   esp,eax
  41b358:	outs   dx,DWORD PTR ds:[esi]
  41b359:	and    dh,BYTE PTR ds:0xaa8f939
  41b35f:	push   eax
  41b360:	data16 fimul WORD PTR [ecx+0x24331eb1]
  41b367:	lods   eax,DWORD PTR ds:[esi]
  41b368:	pushf  
  41b369:	add    DWORD PTR [esi+0x14],ebp
  41b36c:	xor    esi,DWORD PTR [eax]
  41b36e:	gs (bad) 
  41b371:	inc    ebp
  41b372:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b373:	pop    ecx
  41b374:	xlat   BYTE PTR ds:[ebx]
  41b375:	and    cl,BYTE PTR [ebx-0x36]
  41b378:	sti    
  41b379:	push   ss
  41b37a:	push   ds
  41b37b:	adc    eax,0x5b6ce492
  41b380:	pop    esi
  41b381:	mov    al,ds:0xfe8cd533
  41b386:	mov    edx,cs
  41b388:	addr16 pop ss
  41b38a:	stos   DWORD PTR es:[edi],eax
  41b38b:	cmp    bl,BYTE PTR [eax]
  41b38d:	and    DWORD PTR [edi+esi*1+0x18ee792e],edi
  41b394:	mov    dh,0xf0
  41b396:	cmovge ebp,esi
  41b399:	pmullw mm5,QWORD PTR [edi-0x7c57be7]
  41b3a0:	or     al,0xec
  41b3a2:	pop    ecx
  41b3a3:	aaa    
  41b3a4:	push   eax
  41b3a5:	xchg   edi,eax
  41b3a6:	sub    cl,ch
  41b3a8:	mov    al,0x5
  41b3aa:	ror    DWORD PTR [edi+ebx*4-0x74bee395],0x27
  41b3b2:	push   ds
  41b3b3:	lods   eax,DWORD PTR ds:[esi]
  41b3b4:	out    0xb7,al
  41b3b6:	and    esi,DWORD PTR [edx]
  41b3b8:	not    DWORD PTR [esi-0x69ef69a4]
  41b3be:	shr    dl,1
  41b3c0:	or     ecx,DWORD PTR [edi-0x39d942ef]
  41b3c6:	jmp    0x41b3a0
  41b3c8:	xchg   ecx,eax
  41b3c9:	daa    
  41b3ca:	arpl   WORD PTR [ebp+0xecc864e],si
  41b3d0:	dec    esp
  41b3d1:	xor    ah,dl
  41b3d3:	cmp    eax,0x79d8731e
  41b3d8:	xchg   edx,eax
  41b3d9:	mov    ebx,0x8f510bf8
  41b3de:	add    al,0x8b
  41b3e0:	dec    ecx
  41b3e1:	jmp    0xdb47:0x7f2a87ab
  41b3e8:	imul   BYTE PTR [ebx+0x4]
  41b3eb:	lods   al,BYTE PTR ds:[esi]
  41b3ec:	pop    ebp
  41b3ed:	fs das 
  41b3ef:	cli    
  41b3f0:	loop   0x41b416
  41b3f2:	imul   eax,DWORD PTR [ecx],0xffffff97
  41b3f5:	jp     0x41b40b
  41b3f7:	sub    bh,BYTE PTR [ebx+0x66e066a3]
  41b3fd:	mov    ds:0x2597272c,al
  41b402:	not    DWORD PTR ds:0xdfc67113
  41b408:	jnp    0x41b486
  41b40a:	mov    bl,0xe3
  41b40c:	xchg   esp,eax
  41b40d:	outs   dx,DWORD PTR ds:[esi]
  41b40e:	imul   edx,DWORD PTR [esi+0x336aeaa6],0x510ae9e3
  41b418:	bound  edi,QWORD PTR [edi+0x46ab9d65]
  41b41e:	mov    cl,0xaa
  41b420:	sub    al,0xd
  41b422:	xchg   ecx,eax
  41b423:	lahf   
  41b424:	pusha  
  41b425:	inc    ebx
  41b426:	es fwait
  41b428:	adc    eax,DWORD PTR [edi-0x2a]
  41b42b:	sbb    DWORD PTR [edx],ebp
  41b42d:	test   eax,0xe0891594
  41b432:	cmp    al,0xfd
  41b434:	mov    edi,0xd4596167
  41b439:	pop    edi
  41b43a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b43b:	mov    edi,0x19afad16
  41b440:	push   esp
  41b441:	icebp  
  41b442:	and    ecx,DWORD PTR [eax+0x9]
  41b445:	push   ss
  41b446:	cwde   
  41b447:	mov    ecx,0x7bfd6813
  41b44c:	xchg   BYTE PTR [ecx-0x5755bb0f],bh
  41b452:	stc    
  41b453:	push   0xfffffff8
  41b455:	inc    eax
  41b456:	cmp    eax,0x168a1621
  41b45b:	mov    BYTE PTR gs:[edx+0x2b6ef99d],bh
  41b462:	sar    BYTE PTR [ecx-0x7bddc6bd],1
  41b468:	out    dx,eax
  41b469:	ja     0x41b41c
  41b46b:	fdivr  DWORD PTR [ebx+0x13]
  41b46e:	mov    ebp,0x23a894f1
  41b473:	add    ebp,esi
  41b475:	stos   DWORD PTR es:[edi],eax
  41b476:	push   esp
  41b477:	in     eax,dx
  41b478:	iret   
  41b479:	std    
  41b47a:	ins    DWORD PTR es:[edi],dx
  41b47b:	sub    ch,dl
  41b47d:	call   0x2597:0x40c11a64
  41b484:	push   edx
  41b485:	jmp    DWORD PTR ds:0x9a6a82e9
  41b48b:	xlat   BYTE PTR ds:[ebx]
  41b48c:	div    BYTE PTR [edi+0x317a1d55]
  41b492:	xchg   ebx,eax
  41b493:	pop    es
  41b494:	add    al,0xe7
  41b496:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b497:	push   ebx
  41b498:	fst    QWORD PTR [esi]
  41b49a:	mov    ss,WORD PTR [edx+0x12]
  41b49d:	stc    
  41b49e:	test   al,0xff
  41b4a0:	lahf   
  41b4a1:	xlat   BYTE PTR ds:[ebx]
  41b4a2:	or     eax,0x344fe47f
  41b4a7:	dec    ebx
  41b4a8:	data16 ins BYTE PTR es:[edi],dx
  41b4aa:	push   edi
  41b4ab:	iret   
  41b4ac:	xor    eax,0x31700798
  41b4b1:	pop    esp
  41b4b2:	out    dx,al
  41b4b3:	aas    
  41b4b4:	mov    BYTE PTR [ecx+0x754c13c8],ah
  41b4ba:	cld    
  41b4bb:	std    
  41b4bc:	xchg   edi,eax
  41b4bd:	(bad)  
  41b4be:	jbe    0x41b485
  41b4c0:	daa    
  41b4c1:	cmp    al,BYTE PTR [edi-0x5a]
  41b4c4:	pop    edi
  41b4c5:	rol    DWORD PTR [edi],cl
  41b4c7:	inc    DWORD PTR [ebp+0x479b79a8]
  41b4cd:	fsub   st,st(1)
  41b4cf:	or     eax,0x6fbbd1b
  41b4d4:	mov    eax,ds:0xe2d0ee22
  41b4d9:	mov    eax,ds:0xab6ec5c4
  41b4de:	test   al,0x5c
  41b4e0:	and    eax,0x13105399
  41b4e5:	cmp    DWORD PTR [ebp-0x1940840b],ebx
  41b4eb:	in     al,0x4c
  41b4ed:	mov    cl,0x64
  41b4ef:	aas    
  41b4f0:	loope  0x41b4ee
  41b4f2:	enter  0x81c9,0xb8
  41b4f6:	mov    DWORD PTR [edx],eax
  41b4f8:	add    BYTE PTR ds:0x67fe720f,ch
  41b4fe:	pop    edi
  41b4ff:	xor    al,0x45
  41b501:	loope  0x41b4c1
  41b503:	addr16 pop esp
  41b505:	push   ecx
  41b506:	loope  0x41b4f0
  41b508:	scas   eax,DWORD PTR es:[edi]
  41b509:	scas   eax,DWORD PTR es:[edi]
  41b50a:	mov    cl,0x30
  41b50c:	(bad)  
  41b50d:	leave  
  41b50e:	daa    
  41b50f:	rcr    esp,cl
  41b511:	(bad)  
  41b512:	adc    ebp,DWORD PTR [ecx-0x32ab0717]
  41b518:	jp     0x41b4f5
  41b51a:	xchg   DWORD PTR [esp+edi*1],edx
  41b51d:	add    DWORD PTR [edx-0x51fe3efd],edi
  41b523:	mov    ecx,0x64fa1c06
  41b528:	aas    
  41b529:	mov    dh,0xe8
  41b52b:	fucom  st(5)
  41b52d:	cmp    eax,0x23a08fb4
  41b532:	jge    0x41b4b7
  41b534:	add    BYTE PTR ds:0xc83a6251,cl
  41b53a:	stos   BYTE PTR es:[edi],al
  41b53b:	push   ecx
  41b53c:	dec    ebx
  41b53d:	retf   
  41b53e:	pushf  
  41b53f:	cmc    
  41b540:	dec    edi
  41b541:	mov    edi,DWORD PTR [eax+0x10bca275]
  41b547:	fnstenv [ecx-0x7e]
  41b54a:	out    0x7b,al
  41b54c:	mov    dl,0x4c
  41b54e:	mov    eax,esi
  41b550:	xlat   BYTE PTR ds:[ebx]
  41b551:	stc    
  41b552:	call   0xb45a51d2
  41b557:	gs (bad) 
  41b559:	adc    al,0xc1
  41b55b:	aad    0xed
  41b55d:	dec    esp
  41b55e:	jle    0x41b5a2
  41b560:	dec    esi
  41b561:	inc    BYTE PTR [edx]
  41b563:	and    al,0x34
  41b565:	and    al,0x35
  41b567:	les    esi,FWORD PTR [edx+0x20]
  41b56a:	pop    ebp
  41b56c:	inc    ebp
  41b56d:	ss push ds
  41b56f:	imul   edi,DWORD PTR [ebp+0x4d],0xc90f033b
  41b576:	sti    
  41b577:	fcmovb st,st(1)
  41b579:	pop    esi
  41b57a:	sbb    DWORD PTR [esi+0x12],esp
  41b57d:	pop    esi
  41b57e:	jo     0x41b51f
  41b580:	icebp  
  41b581:	aam    0x37
  41b583:	cmp    eax,0x95f4cc4b
  41b588:	cmp    dh,bh
  41b58a:	pop    ecx
  41b58b:	(bad)  
  41b58c:	loope  0x41b5aa
  41b58e:	lock add BYTE PTR [edx],dh
  41b591:	cmp    edi,DWORD PTR [ebx-0x52e825c8]
  41b597:	sub    al,0xcc
  41b599:	mov    edx,0x82cc9352
  41b59e:	jmp    0x62ca4f6c
  41b5a3:	inc    esp
  41b5a4:	inc    edi
  41b5a5:	pop    eax
  41b5a6:	outs   dx,DWORD PTR ds:[esi]
  41b5a7:	push   ebx
  41b5a8:	jle    0x41b5ed
  41b5aa:	ins    BYTE PTR es:[edi],dx
  41b5ab:	add    al,BYTE PTR [edi-0x2f]
  41b5ae:	sbb    ah,BYTE PTR [ecx-0x46]
  41b5b1:	jge    0x41b5e2
  41b5b3:	ror    dl,cl
  41b5b5:	and    eax,0xcb94cba8
  41b5ba:	mov    ecx,0xe2963ecb
  41b5bf:	lods   eax,DWORD PTR ds:[esi]
  41b5c0:	xchg   ebx,eax
  41b5c1:	iret   
  41b5c2:	repz imul esp,DWORD PTR ds:0x30dee82b,0xbb46567e
  41b5cd:	loop   0x41b5fb
  41b5cf:	xchg   ebx,eax
  41b5d0:	test   al,0x47
  41b5d2:	in     eax,dx
  41b5d3:	push   edx
  41b5d4:	or     al,0x51
  41b5d6:	xor    ecx,DWORD PTR [ecx+0x6e]
  41b5d9:	add    BYTE PTR [edi+eax*4+0x45],0x84
  41b5de:	jb     0x41b5e2
  41b5e0:	imul   esp,esi,0xdd3c1f70
  41b5e6:	and    bl,BYTE PTR [ecx+0x4a]
  41b5e9:	inc    edi
  41b5ea:	mov    BYTE PTR [ebp+0x104b65f8],dl
  41b5f0:	daa    
  41b5f1:	or     al,0xae
  41b5f3:	int3   
  41b5f4:	popa   
  41b5f5:	shl    DWORD PTR [ebp-0x25e05313],0x7b
  41b5fc:	mov    BYTE PTR [esi],cl
  41b5fe:	sub    eax,0xba2485c4
  41b603:	and    eax,0x4cc76429
  41b608:	ss xchg esp,eax
  41b60a:	adc    ebx,DWORD PTR ds:0xa6ab78c1
  41b610:	add    eax,0x83d723a4
  41b615:	jnp    0x41b67f
  41b617:	dec    edi
  41b618:	pushf  
  41b619:	jg     0x41b644
  41b61b:	and    ecx,edi
  41b61d:	sub    al,BYTE PTR [esi]
  41b61f:	jp     0x41b651
  41b621:	cmp    ebp,DWORD PTR [edx-0x689b4f47]
  41b627:	enter  0x142d,0xd2
  41b62b:	imul   edi,DWORD PTR [ebp+0x36],0xffffffb2
  41b62f:	pop    es
  41b630:	dec    DWORD PTR [edi+0x39]
  41b633:	pop    edi
  41b634:	daa    
  41b635:	in     eax,0x7a
  41b637:	jne    0x41b66b
  41b639:	mov    BYTE PTR [edi],al
  41b63b:	pushw  ss
  41b63d:	stos   DWORD PTR es:[edi],eax
  41b63e:	inc    ebx
  41b63f:	in     eax,dx
  41b640:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b641:	arpl   WORD PTR [eax+0x38685943],dx
  41b647:	aam    0xb0
  41b649:	xor    esi,ecx
  41b64b:	sub    BYTE PTR [esi-0x7e533731],cl
  41b651:	outs   dx,BYTE PTR ds:[esi]
  41b652:	lds    edi,FWORD PTR [esi+0x49]
  41b655:	add    ebp,DWORD PTR [eax-0x6a]
  41b658:	inc    ebx
  41b659:	or     DWORD PTR [edi],eax
  41b65b:	mov    dl,0x24
  41b65d:	adc    dh,bh
  41b65f:	out    dx,eax
  41b660:	mov    esi,0xe690746a
  41b665:	jns    0x41b6a7
  41b667:	mov    bl,0x92
  41b669:	and    edx,DWORD PTR [eax]
  41b66b:	cdq    
  41b66c:	inc    ebx
  41b66d:	das    
  41b66e:	push   ds
  41b66f:	or     ch,BYTE PTR [eax]
  41b671:	sub    dl,cl
  41b673:	lahf   
  41b674:	pop    ecx
  41b675:	stos   DWORD PTR es:[edi],eax
  41b676:	fdiv   QWORD PTR [edi]
  41b678:	int3   
  41b679:	nop
  41b67a:	or     DWORD PTR [esi],edx
  41b67c:	out    dx,al
  41b67d:	lods   al,BYTE PTR ds:[esi]
  41b67e:	out    dx,eax
  41b67f:	call   0x7c2ce819
  41b684:	sub    al,0x20
  41b686:	outs   dx,BYTE PTR ds:[esi]
  41b687:	cld    
  41b688:	jl     0x41b650
  41b68a:	cmp    BYTE PTR [eax-0x51310a76],dh
  41b690:	push   edi
  41b691:	mov    esi,0xf80ee932
  41b696:	mov    al,0x7d
  41b698:	cwde   
  41b699:	(bad)  
  41b69a:	ja     0x41b69b
  41b69c:	(bad)  
  41b69e:	imul   edi,DWORD PTR [eax-0x5a],0x9651217d
  41b6a5:	sbb    BYTE PTR [edi],ah
  41b6a7:	in     al,0xe
  41b6a9:	arpl   WORD PTR [ecx+ebx*8],sp
  41b6ac:	shl    BYTE PTR [edx+0x11117bda],0xce
  41b6b3:	iret   
  41b6b4:	mov    WORD PTR [ecx],es
  41b6b6:	mov    al,ds:0x38e2c41e
  41b6bb:	loope  0x41b69b
  41b6bd:	in     al,0x2b
  41b6bf:	enter  0xb643,0xbb
  41b6c3:	xor    dh,BYTE PTR [edx]
  41b6c5:	popf   
  41b6c6:	jecxz  0x41b744
  41b6c8:	lahf   
  41b6c9:	mov    bh,0xee
  41b6cb:	xchg   ebx,eax
  41b6cc:	adc    edi,DWORD PTR [ecx]
  41b6ce:	xchg   esi,eax
  41b6cf:	xor    esp,ebp
  41b6d1:	or     al,0xa0
  41b6d3:	xchg   edx,eax
  41b6d4:	aad    0xc0
  41b6d6:	scas   al,BYTE PTR es:[edi]
  41b6d7:	leave  
  41b6d8:	pop    ds
  41b6d9:	in     al,dx
  41b6da:	inc    ecx
  41b6db:	dec    ebx
  41b6dc:	iret   
  41b6dd:	lods   al,BYTE PTR ds:[esi]
  41b6de:	stos   DWORD PTR es:[edi],eax
  41b6df:	enter  0x263c,0x21
  41b6e3:	out    0x14,eax
  41b6e5:	aaa    
  41b6e6:	xor    al,0xbb
  41b6e8:	and    eax,0x6b7b0182
  41b6ed:	xchg   ebp,eax
  41b6ee:	cmp    al,0x95
  41b6f0:	cmp    dh,bl
  41b6f2:	rcl    BYTE PTR [ebp+0x25],1
  41b6f5:	sbb    al,0xd
  41b6f7:	pop    eax
  41b6f8:	jmp    DWORD PTR [ebx]
  41b6fa:	out    dx,al
  41b6fb:	cdq    
  41b6fc:	dec    edx
  41b6fd:	push   esi
  41b6fe:	adc    eax,0xfd61f11a
  41b703:	pop    ss
  41b704:	fdivrp st(0),st
  41b706:	mov    ah,0x64
  41b708:	shl    BYTE PTR [edx-0x4a88b284],1
  41b70e:	daa    
  41b70f:	adc    ebx,eax
  41b711:	out    0xf,al
  41b713:	xchg   esi,eax
  41b714:	mov    ebp,0x7841429b
  41b719:	call   0x97f2:0xe96b
  41b71f:	mov    eax,ds:0x460cc835
  41b724:	arpl   bp,bx
  41b726:	(bad)  
  41b727:	fldcw  WORD PTR [ebx+eiz*1+0x3ac4437b]
  41b72e:	aam    0x37
  41b730:	mov    ch,0xb4
  41b732:	xchg   edi,eax
  41b733:	repnz rcr DWORD PTR [edx-0x7d],cl
  41b737:	icebp  
  41b738:	jo     0x41b6df
  41b73a:	jno    0x41b78d
  41b73c:	push   esi
  41b73d:	sbb    BYTE PTR [edi-0x52],cl
  41b740:	mov    eax,0x252a269f
  41b745:	ja     0x41b7bc
  41b747:	loopne 0x41b719
  41b749:	pop    ds
  41b74a:	data16 (bad) 
  41b74c:	mov    al,0xc4
  41b74e:	pop    es
  41b74f:	mov    eax,ds:0x798f71dd
  41b754:	dec    esi
  41b755:	(bad)  
  41b756:	mov    bl,0xd3
  41b758:	sbb    BYTE PTR [edx],0xa2
  41b75b:	jne    0x41b762
  41b75d:	adc    esp,ecx
  41b75f:	les    edx,FWORD PTR [eax+0x3d]
  41b762:	lods   eax,DWORD PTR ds:[esi]
  41b763:	jle    0x41b7d4
  41b765:	mov    eax,0xd864339b
  41b76a:	scas   al,BYTE PTR es:[edi]
  41b76b:	in     al,0x3f
  41b76d:	aas    
  41b76e:	add    BYTE PTR [esi],al
  41b770:	mov    DWORD PTR [ebx-0x2a12b986],eax
  41b776:	iret   
  41b777:	fdiv   QWORD PTR [edi+0x38b2f63b]
  41b77d:	and    eax,0xea8b0143
  41b782:	xor    ah,al
  41b784:	pop    esi
  41b785:	cli    
  41b786:	mov    ds:0xc534e158,al
  41b78b:	fucom  st(3)
  41b78d:	push   ss
  41b78e:	xor    eax,0x6970d99f
  41b793:	and    DWORD PTR [edx+0x33ed1aa7],0x3e19d754
  41b79d:	mov    edx,0x66d0f95f
  41b7a2:	test   DWORD PTR [esi+edi*1+0x3e],esp
  41b7a6:	push   edx
  41b7a7:	fwait
  41b7a8:	mov    bh,ch
  41b7aa:	sbb    al,0xb5
  41b7ac:	mov    bh,0xdc
  41b7ae:	ins    DWORD PTR es:[edi],dx
  41b7af:	ret    
  41b7b0:	and    ecx,esp
  41b7b2:	xor    DWORD PTR [edi+0x621ed21e],edi
  41b7b8:	out    dx,al
  41b7b9:	icebp  
  41b7ba:	loopne 0x41b78f
  41b7bc:	adc    eax,DWORD PTR [ebp-0x48]
  41b7bf:	test   cl,ah
  41b7c1:	jb     0x41b746
  41b7c3:	out    0x20,al
  41b7c5:	jge    0x41b783
  41b7c7:	mov    edx,0x758328ca
  41b7cc:	fadd   DWORD PTR [ebx+0x55a45f8f]
  41b7d2:	adc    ah,BYTE PTR [ebx-0x60]
  41b7d5:	pusha  
  41b7d6:	jb     0x41b84d
  41b7d8:	das    
  41b7d9:	or     DWORD PTR [esi+0x38a90df4],0x2a644467
  41b7e3:	dec    edx
  41b7e4:	call   0x93c:0x2de30beb
  41b7eb:	fdiv   DWORD PTR [ebx+0x6a]
  41b7ee:	sar    DWORD PTR [edi+0x3e],1
  41b7f1:	mov    BYTE PTR [esp+ebp*4],dh
  41b7f4:	ret    
  41b7f5:	xchg   BYTE PTR [edx+esi*1-0x2e],dh
  41b7f9:	and    dh,BYTE PTR [edi+eiz*8]
  41b7fc:	pop    eax
  41b7fd:	or     ebp,DWORD PTR [ecx]
  41b7ff:	mov    gs,WORD PTR [edi]
  41b801:	fwait
  41b802:	jo     0x41b7d1
  41b804:	and    edi,0x9a4cde98
  41b80a:	inc    DWORD PTR [ebp-0x37]
  41b80d:	call   0x8685b201
  41b812:	push   esp
  41b813:	fbld   TBYTE PTR [ebx+ebp*2-0x6664a12b]
  41b81a:	adc    al,0x7e
  41b81c:	fidivr WORD PTR [esi+0x50]
  41b81f:	cmp    ch,bl
  41b821:	push   edi
  41b822:	jp     0x41b7b0
  41b824:	push   ds
  41b825:	in     eax,0xc7
  41b827:	popa   
  41b828:	jle    0x41b7fe
  41b82a:	int    0x8f
  41b82c:	outs   dx,BYTE PTR ds:[esi]
  41b82d:	in     eax,0x60
  41b82f:	lods   al,BYTE PTR es:[esi]
  41b831:	adc    DWORD PTR [edx+0x13],0x740efed3
  41b838:	cs cmp al,0xd2
  41b83b:	mov    dl,0x37
  41b83d:	(bad)  
  41b83e:	cld    
  41b83f:	cmp    DWORD PTR ds:0xa3652dcc,ebx
  41b845:	push   es
  41b846:	mov    ah,0xd5
  41b848:	or     cl,BYTE PTR [ebx]
  41b84a:	pop    es
  41b84b:	retf   
  41b84c:	jl     0x41b7cf
  41b84e:	in     eax,dx
  41b84f:	mov    edi,0x9e577e27
  41b854:	inc    edi
  41b855:	js     0x41b8cc
  41b857:	xchg   edx,eax
  41b858:	call   0xae4540e7
  41b85d:	xor    ah,BYTE PTR gs:[eax]
  41b860:	leave  
  41b861:	inc    ebx
  41b862:	jle    0x41b88b
  41b864:	dec    edx
  41b865:	mov    bl,BYTE PTR [ebp+ebp*8-0x6c]
  41b869:	push   ebp
  41b86a:	cld    
  41b86b:	test   eax,0xe15b9838
  41b870:	jnp    0x41b828
  41b872:	fild   WORD PTR [ebx+0x42]
  41b875:	cs clc 
  41b877:	ins    DWORD PTR es:[edi],dx
  41b878:	mov    WORD PTR [ebx+ebp*8],cs
  41b87b:	es retf 0xf1d3
  41b87f:	push   esp
  41b880:	jmp    0x42a0246f
  41b885:	xchg   esi,eax
  41b886:	sub    edx,DWORD PTR [ecx]
  41b888:	shl    eax,cl
  41b88a:	daa    
  41b88b:	enter  0xcc7a,0x73
  41b88f:	ds (bad) 
  41b891:	les    esp,FWORD PTR [edi+0x61ac41c6]
  41b897:	imul   ebp,DWORD PTR [eax],0x668443ad
  41b89d:	adc    BYTE PTR [ecx+0x46e4ceee],0x92
  41b8a4:	xchg   ebp,eax
  41b8a5:	ret    
  41b8a6:	sbb    DWORD PTR [esi+0x18],ecx
  41b8a9:	das    
  41b8aa:	mov    fs:0x25344412,eax
  41b8b0:	xlat   BYTE PTR ds:[ebx]
  41b8b1:	retf   
  41b8b2:	ds std 
  41b8b4:	xor    BYTE PTR [edx+0x2f49ff43],0x5d
  41b8bb:	fcompp 
  41b8bd:	lea    esi,[ecx-0x55]
  41b8c0:	adc    al,0x54
  41b8c2:	leave  
  41b8c3:	and    DWORD PTR [esi],0x47
  41b8c6:	dec    edi
  41b8c7:	jb     0x41b8db
  41b8c9:	add    eax,0x5442dbc6
  41b8ce:	add    BYTE PTR ds:0x3cfeec70,0x22
  41b8d5:	dec    edi
  41b8d6:	or     DWORD PTR [eax-0x2fe50924],ebx
  41b8dc:	and    dh,BYTE PTR [eax+ebx*2-0x2f326f66]
  41b8e3:	sub    BYTE PTR [esi-0x11],dh
  41b8e6:	jecxz  0x41b928
  41b8e8:	push   ss
  41b8e9:	stos   DWORD PTR es:[edi],eax
  41b8ea:	add    BYTE PTR [eax-0x38],0x54
  41b8ee:	ins    BYTE PTR es:[edi],dx
  41b8ef:	mov    BYTE PTR [edi+eiz*4-0x7b],al
  41b8f3:	loop   0x41b922
  41b8f5:	add    BYTE PTR [ebp+0x1],al
  41b8f8:	sbb    esp,DWORD PTR [edi]
  41b8fa:	ds mov ah,0x59
  41b8fd:	jmp    0x41b8b4
  41b8ff:	dec    ebx
  41b900:	cmp    ebp,DWORD PTR [esp+edi*4-0x19]
  41b904:	fbstp  TBYTE PTR [eax]
  41b906:	and    ch,ch
  41b908:	cdq    
  41b909:	add    al,BYTE PTR [eax+0x2f]
  41b90c:	mov    bh,0x65
  41b90e:	mov    edi,0xd4a3876a
  41b913:	lds    ebp,FWORD PTR gs:[edx]
  41b916:	jmp    0x41b8e0
  41b918:	loope  0x41b981
  41b91a:	add    eax,0xd90dcb5a
  41b91f:	rol    edx,0x2a
  41b922:	pop    edi
  41b923:	ins    BYTE PTR es:[edi],dx
  41b924:	mov    bh,0x53
  41b926:	ret    
  41b927:	jns    0x41b8be
  41b929:	adc    dh,0x5b
  41b92c:	jae    0x41b971
  41b92e:	inc    ecx
  41b92f:	mov    esp,DWORD PTR [esi+0x673c0074]
  41b935:	xchg   edx,eax
  41b936:	mov    DWORD PTR [eax],ecx
  41b938:	dec    edx
  41b939:	fimul  WORD PTR [ebx-0x66]
  41b93c:	and    dh,BYTE PTR [edi+ebx*1]
  41b93f:	(bad)  
  41b940:	push   edi
  41b941:	cmc    
  41b942:	lds    edx,FWORD PTR [ecx+0x1369c6cb]
  41b948:	fbstp  TBYTE PTR [eax-0x75]
  41b94b:	pop    ecx
  41b94c:	inc    esi
  41b94d:	pop    ecx
  41b94e:	cmp    ah,dl
  41b950:	dec    ebx
  41b951:	cdq    
  41b952:	int    0xae
  41b954:	xchg   ecx,eax
  41b955:	in     eax,0x3f
  41b957:	sbb    BYTE PTR [eax],bh
  41b959:	cmp    DWORD PTR [edx+0xa2f8818],edx
  41b95f:	fdiv   DWORD PTR [edi]
  41b961:	call   FWORD PTR [ebx]
  41b963:	sub    al,ch
  41b965:	fisub  DWORD PTR [esi-0x1b]
  41b968:	or     eax,0x1aff9b61
  41b96d:	lock xor dl,bh
  41b970:	scas   eax,DWORD PTR es:[edi]
  41b971:	xor    eax,0x865c2b14
  41b976:	mov    ds:0xf2da2f0f,eax
  41b97b:	sub    edi,DWORD PTR [ebp+0x2b43e6da]
  41b981:	jo     0x41b969
  41b983:	(bad)  
  41b985:	jp     0x41b933
  41b987:	ret    0x395f
  41b98a:	scas   al,BYTE PTR es:[edi]
  41b98b:	rol    BYTE PTR [edi],cl
  41b98d:	cwde   
  41b98e:	das    
  41b98f:	jmp    0x41b92d
  41b991:	outs   dx,DWORD PTR ds:[esi]
  41b992:	(bad)  
  41b993:	dec    esp
  41b994:	xor    eax,0x325bba70
  41b999:	popf   
  41b99a:	inc    eax
  41b99b:	push   ds
  41b99c:	add    BYTE PTR [eax],cl
  41b99e:	mov    dh,0x5f
  41b9a0:	push   edi
  41b9a1:	sbb    al,0x99
  41b9a3:	inc    esp
  41b9a4:	lock jmp 0x41ba07
  41b9a7:	ja     0x41b9db
  41b9a9:	add    BYTE PTR [ebp-0xe1bc65b],dl
  41b9af:	mov    dl,0xa0
  41b9b1:	mov    bh,0xb
  41b9b3:	call   0x62c4:0xb101baad
  41b9ba:	sbb    bh,BYTE PTR [ebx+0x1e4f65fd]
  41b9c0:	mov    dh,0x9c
  41b9c2:	or     eax,0xb16f1c82
  41b9c7:	jb     0x41b9fa
  41b9c9:	xchg   edx,eax
  41b9ca:	andps  xmm6,xmm0
  41b9cd:	sahf   
  41b9ce:	les    ebx,FWORD PTR [edx]
  41b9d0:	aad    0x85
  41b9d2:	call   0x36b7721
  41b9d7:	fxch   st(0)
  41b9d9:	dec    edx
  41b9da:	popf   
  41b9db:	call   0xa1a36466
  41b9e0:	adc    edi,ebx
  41b9e2:	add    BYTE PTR ds:0xf4c757c6,bl
  41b9e8:	js     0x41ba30
  41b9ea:	(bad)  
  41b9eb:	and    ecx,DWORD PTR ds:0xef75bb67
  41b9f1:	sub    ecx,0x155b1e9
  41b9f7:	xor    ebx,DWORD PTR [eax-0x35e2bb43]
  41b9fd:	call   0x36a0e79e
  41ba02:	cwde   
  41ba03:	add    al,0x25
  41ba05:	shl    esp,cl
  41ba07:	xchg   ebx,eax
  41ba08:	and    eax,0x8ca7607b
  41ba0d:	loopne 0x41b9a2
  41ba0f:	ret    
  41ba10:	pop    ebx
  41ba11:	sahf   
  41ba12:	aas    
  41ba13:	fld    TBYTE PTR [eax+eax*8]
  41ba16:	add    dh,BYTE PTR [edi]
  41ba18:	jnp    0x41b9cf
  41ba1a:	sbb    BYTE PTR [eax],bl
  41ba1c:	and    DWORD PTR ds:0xc9dda3cb,0x55fe0f96
  41ba26:	adc    bh,BYTE PTR [edx+0x52e12706]
  41ba2c:	sbb    DWORD PTR [ecx-0x6f],edi
  41ba2f:	pop    edx
  41ba30:	loope  0x41b9d7
  41ba32:	xor    BYTE PTR [edx-0x75],bl
  41ba35:	rcl    DWORD PTR [edx],1
  41ba37:	ins    BYTE PTR es:[edi],dx
  41ba38:	sub    bl,BYTE PTR [edi+0x3b17b726]
  41ba3e:	inc    ebp
  41ba3f:	mov    DWORD PTR [esi-0xf],edx
  41ba42:	adc    DWORD PTR [ebp+0x10ba7aa3],ecx
  41ba48:	sar    BYTE PTR [ebp-0x63d110dd],cl
  41ba4e:	and    eax,0x1ff4f9de
  41ba53:	inc    eax
  41ba54:	out    dx,al
  41ba55:	ret    
  41ba56:	pop    es
  41ba57:	fcmovne st,st(1)
  41ba59:	in     al,dx
  41ba5a:	ror    DWORD PTR ds:0x19e55022,1
  41ba60:	lea    ecx,[edx+0x3d]
  41ba63:	add    al,0xad
  41ba65:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ba66:	cmp    esp,ebp
  41ba68:	ja     0x41ba14
  41ba6a:	mov    es,WORD PTR [edx+0x6f]
  41ba6d:	fstp   TBYTE PTR [edx-0x4e]
  41ba70:	outs   dx,BYTE PTR ds:[esi]
  41ba71:	out    0xff,eax
  41ba73:	cmp    edi,edx
  41ba75:	fsub   st,st(6)
  41ba77:	xchg   edx,eax
  41ba78:	retf   0x2e14
  41ba7b:	or     al,0x29
  41ba7d:	daa    
  41ba7e:	jg     0x41baf5
  41ba80:	cmp    eax,0x70203c5d
  41ba85:	and    eax,0xf3079fd7
  41ba8a:	nop
  41ba8b:	mov    esi,0x922d035e
  41ba90:	gs mov dl,0xe9
  41ba93:	jecxz  0x41baab
  41ba95:	mov    al,0x9
  41ba97:	pushf  
  41ba98:	shl    DWORD PTR [eax],0x60
  41ba9b:	rol    cl,cl
  41ba9d:	adc    DWORD PTR [ecx],edx
  41ba9f:	sti    
  41baa0:	stos   DWORD PTR es:[edi],eax
  41baa1:	xchg   BYTE PTR [edx-0x201c0fc1],dl
  41baa7:	or     BYTE PTR [ebx],cl
  41baa9:	test   BYTE PTR [ecx+0x29459914],ch
  41baaf:	sub    ebx,DWORD PTR [esi-0x63]
  41bab2:	push   ds
  41bab3:	xor    eax,0x12016713
  41bab8:	rcl    BYTE PTR [edi+0x11a8a1fd],0x93
  41babf:	jmp    0x6cfad4a5
  41bac4:	inc    esp
  41bac5:	xchg   esi,eax
  41bac6:	ror    DWORD PTR [ecx-0x43],cl
  41bac9:	or     BYTE PTR [ebx+0x45],cl
  41bacc:	int3   
  41bacd:	(bad)  
  41bace:	mov    cs,WORD PTR [edx+0x7f8dadb8]
  41bad4:	or     eax,0xfecfa66e
  41bad9:	lock mov ebp,0x6c1c878c
  41badf:	mov    ebp,0xebf5f709
  41bae4:	call   0xb2f5702
  41bae9:	sub    al,0xc
  41baeb:	out    0xf0,eax
  41baed:	inc    ebx
  41baee:	jne    0x41baca
  41baf0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41baf1:	sub    eax,0xa226b46f
  41baf6:	lahf   
  41baf7:	popf   
  41baf8:	dec    ebx
  41baf9:	xor    DWORD PTR [ecx-0x57],ecx
  41bafc:	sbb    bh,bh
  41bafe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41baff:	les    esp,FWORD PTR [edx-0x6fdea378]
  41bb05:	sar    DWORD PTR [ecx],0xdd
  41bb08:	push   ebp
  41bb09:	das    
  41bb0a:	mov    al,0x52
  41bb0c:	and    esi,esi
  41bb0e:	test   BYTE PTR ds:0x6249118,0x76
  41bb15:	mov    bh,0xa3
  41bb17:	xor    ecx,DWORD PTR [ebx+eax*4-0x345a8ab9]
  41bb1e:	mov    esp,0xd545d952
  41bb23:	dec    edx
  41bb24:	xor    dh,bh
  41bb26:	sbb    edi,DWORD PTR [edx+0x2a694daf]
  41bb2c:	(bad)  
  41bb2d:	fld    st(5)
  41bb2f:	ja     0x41bb93
  41bb31:	fisub  WORD PTR [ebp-0x2a]
  41bb34:	ja     0x41bb90
  41bb36:	mov    bh,0xb2
  41bb38:	lea    esp,[esi+0x3f03f07a]
  41bb3e:	and    BYTE PTR [esi-0xdccb412],ch
  41bb44:	mov    esp,0x60321976
  41bb49:	pop    ebx
  41bb4a:	stc    
  41bb4b:	test   eax,0xf85bef9a
  41bb50:	adc    cl,BYTE PTR [edi+0x5e08142d]
  41bb56:	test   BYTE PTR [ecx-0x69],dl
  41bb59:	cmc    
  41bb5a:	jmp    0xcf93:0xb16c8ed9
  41bb61:	xchg   edi,eax
  41bb62:	mov    BYTE PTR [esi-0x446a043f],dl
  41bb68:	ins    DWORD PTR es:[edi],dx
  41bb69:	fwait
  41bb6a:	cmp    DWORD PTR [edx+0xe],esp
  41bb6d:	popa   
  41bb6e:	sbb    BYTE PTR [eax],ah
  41bb70:	mov    esp,edi
  41bb72:	adc    ebx,DWORD PTR [edi]
  41bb74:	dec    esp
  41bb75:	fld    QWORD PTR [edx]
  41bb77:	cdq    
  41bb78:	jecxz  0x41bb9a
  41bb7a:	adc    DWORD PTR [eax+0xbd6a1df],ecx
  41bb80:	mov    dh,0x35
  41bb82:	cmp    bh,BYTE PTR [eax]
  41bb84:	push   ss
  41bb85:	cmc    
  41bb86:	mov    ds:0xd8f8e043,al
  41bb8b:	rol    BYTE PTR [ebx+0x3e],0x30
  41bb8f:	hlt    
  41bb90:	lock jl 0x41bb1b
  41bb93:	je     0x41bbb1
  41bb95:	inc    esi
  41bb96:	outs   dx,BYTE PTR ds:[esi]
  41bb97:	xlat   BYTE PTR ds:[ebx]
  41bb98:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bb99:	jns    0x41bba6
  41bb9b:	jge    0x41bc11
  41bb9d:	push   ecx
  41bb9e:	and    eax,0x2bcd2e01
  41bba3:	xchg   ebx,eax
  41bba4:	call   0x981d:0x5cc781dc
  41bbab:	in     eax,dx
  41bbac:	and    al,0xc4
  41bbae:	std    
  41bbaf:	pushf  
  41bbb0:	add    DWORD PTR [esi],ecx
  41bbb2:	test   DWORD PTR ds:0xf8cafae7,esp
  41bbb9:	in     eax,0xd6
  41bbbb:	pop    ebp
  41bbbc:	fimul  DWORD PTR [esi+edi*1-0x9]
  41bbc0:	in     al,dx
  41bbc1:	cmp    BYTE PTR [edi+0x5ccf67e5],cl
  41bbc7:	and    al,0xf7
  41bbc9:	sub    DWORD PTR [ebx],ebx
  41bbcb:	inc    esi
  41bbcc:	mov    ds:0xec38ba6,al
  41bbd1:	pushf  
  41bbd2:	shr    BYTE PTR [edx+0x73af47cc],1
  41bbd8:	sub    eax,0xf9053634
  41bbdd:	pop    ebx
  41bbde:	mov    bl,0xc3
  41bbe0:	adc    DWORD PTR [edi-0x70],edx
  41bbe3:	add    al,0x22
  41bbe5:	jns    0x41bbfc
  41bbe7:	mov    WORD PTR [esi+0x1b],fs
  41bbea:	lods   al,BYTE PTR ds:[esi]
  41bbeb:	pop    ebx
  41bbec:	and    BYTE PTR [esi+0x7d],bl
  41bbef:	shl    BYTE PTR [ebx+0xbd4e75],1
  41bbf5:	and    BYTE PTR [edi],dh
  41bbf7:	(bad)  
  41bbf8:	sahf   
  41bbf9:	fisubr WORD PTR [edi+0x13541ed5]
  41bbff:	jl     0x41bc64
  41bc01:	out    0x8d,eax
  41bc03:	or     BYTE PTR [ebp+eax*2+0x24],ch
  41bc07:	add    DWORD PTR [edi+0x283febaf],ebx
  41bc0d:	sub    cl,ah
  41bc0f:	adc    eax,ecx
  41bc11:	mov    si,0x4e9d
  41bc15:	retf   
  41bc16:	call   0xd5e78242
  41bc1b:	and    BYTE PTR ds:0xf2739a26,cl
  41bc21:	mov    bl,0xa2
  41bc23:	xor    bl,ch
  41bc25:	mov    edx,DWORD PTR [esi-0xcdc35e6]
  41bc2b:	int    0x2a
  41bc2d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bc2e:	(bad)  
  41bc2f:	ror    edx,cl
  41bc31:	add    cl,dl
  41bc33:	cmc    
  41bc34:	ret    0x4437
  41bc37:	jp     0x41bc52
  41bc39:	shr    BYTE PTR [ebp-0x4],1
  41bc3c:	or     al,0x24
  41bc3e:	retf   0xb6e8
  41bc41:	bound  edi,QWORD PTR [edi-0x24]
  41bc44:	(bad)  
  41bc45:	pop    ds
  41bc46:	add    eax,0x3f8b15c8
  41bc4b:	sbb    DWORD PTR [esi-0x74208b3c],eax
  41bc51:	xchg   ebp,eax
  41bc52:	mov    ebx,0x1738074b
  41bc57:	pop    dx
  41bc59:	dec    edi
  41bc5a:	jno    0x41bc0b
  41bc5c:	repnz mov esp,0x9e861d2
  41bc62:	cdq    
  41bc63:	shl    BYTE PTR [ecx-0x60],1
  41bc66:	add    esp,edx
  41bc68:	add    esp,DWORD PTR ds:0x71eb74c9
  41bc6e:	aam    0x5b
  41bc70:	adc    eax,0x963d6167
  41bc75:	not    BYTE PTR [edi]
  41bc77:	and    dl,BYTE PTR [ecx+0x67]
  41bc7a:	rcl    BYTE PTR [ecx-0x1f],1
  41bc7d:	call   0x8e3e26dc
  41bc82:	dec    esp
  41bc83:	mov    edi,0xfaf6b4f4
  41bc88:	dec    ebp
  41bc89:	ds call 0x74ae:0xf76c3f68
  41bc91:	xor    BYTE PTR ds:0x878a3e93,ch
  41bc97:	loop   0x41bcde
  41bc99:	(bad)  
  41bc9a:	fdivr  QWORD PTR [eax]
  41bc9c:	mov    al,ds:0xc11d89ca
  41bca1:	sbb    esp,DWORD PTR [eax]
  41bca3:	out    dx,al
  41bca4:	mov    ecx,0x31118531
  41bca9:	test   BYTE PTR [ebx+0x76],bh
  41bcac:	into   
  41bcad:	sti    
  41bcae:	ret    0x2eaf
  41bcb1:	mov    ds:0x83cb0f,al
  41bcb6:	cli    
  41bcb7:	pusha  
  41bcb8:	retf   
  41bcb9:	jo     0x41bc46
  41bcbb:	ins    DWORD PTR es:[edi],dx
  41bcbc:	sub    DWORD PTR [ebx-0x1f],edi
  41bcbf:	leave  
  41bcc0:	(bad)  
  41bcc1:	mov    edx,0x54415fa4
  41bcc6:	test   al,0x55
  41bcc8:	xchg   ebx,eax
  41bcc9:	(bad)  
  41bccb:	sub    DWORD PTR [eax-0x583db158],ebp
  41bcd1:	add    ebx,esi
  41bcd3:	ds jbe 0x41bd47
  41bcd6:	or     al,0x7a
  41bcd8:	jae    0x41bc69
  41bcda:	cmp    ah,BYTE PTR [edi+ecx*8]
  41bcdd:	pop    esp
  41bcde:	lahf   
  41bcdf:	push   ebp
  41bce0:	xor    al,0x3e
  41bce2:	int3   
  41bce3:	nop
  41bce4:	(bad)  
  41bce5:	pop    ecx
  41bce6:	jge    0x41bcc2
  41bce8:	push   es
  41bce9:	int3   
  41bcea:	es jne 0x41bcfd
  41bced:	mov    al,0x76
  41bcef:	mov    ebx,0x63a9f8a2
  41bcf4:	popa   
  41bcf5:	jg     0x41bd02
  41bcf7:	and    BYTE PTR [ebx+0x7631d8db],0x67
  41bcfe:	fld    TBYTE PTR [edi]
  41bd00:	mov    dl,0x9a
  41bd02:	add    eax,0x6bedaa1b
  41bd07:	xlat   BYTE PTR ds:[ebx]
  41bd08:	(bad)  
  41bd09:	add    BYTE PTR [ecx+esi*2+0x22],dh
  41bd0d:	mov    ch,BYTE PTR [edi-0x3eebb375]
  41bd13:	call   0x9c6b876b
  41bd18:	xchg   esi,eax
  41bd19:	xchg   esp,eax
  41bd1a:	call   ecx
  41bd1c:	dec    edx
  41bd1d:	lods   eax,DWORD PTR ds:[esi]
  41bd1e:	add    BYTE PTR [ebp+0x71],dh
  41bd21:	and    BYTE PTR [esi-0x31],cl
  41bd24:	jbe    0x41bced
  41bd26:	and    dl,BYTE PTR [esi]
  41bd28:	adc    eax,0x83465949
  41bd2d:	ja     0x41bd6c
  41bd2f:	mov    esp,0x8d4bce82
  41bd34:	jb     0x41bcf0
  41bd36:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bd37:	sub    edx,DWORD PTR [eax+edx*4]
  41bd3a:	fcomp  DWORD PTR [edx-0x2f]
  41bd3d:	inc    ecx
  41bd3e:	push   ecx
  41bd3f:	sbb    eax,0x7f2270fa
  41bd44:	sar    edi,cl
  41bd46:	or     BYTE PTR [edx],dh
  41bd48:	popf   
  41bd49:	ror    BYTE PTR [edi-0x6aa999e6],cl
  41bd4f:	mov    al,0xdb
  41bd51:	and    BYTE PTR [ecx+0x444a58cf],0x31
  41bd58:	sub    DWORD PTR [edi-0x2b],0x793a5a4b
  41bd5f:	and    edx,edi
  41bd61:	mov    dh,0x3b
  41bd63:	popa   
  41bd64:	jmp    0x361306f6
  41bd69:	dec    eax
  41bd6a:	icebp  
  41bd6b:	and    ah,al
  41bd6d:	sti    
  41bd6e:	push   ds
  41bd6f:	xor    eax,0x7f607a72
  41bd74:	loop   0x41bd5e
  41bd76:	xor    edi,DWORD PTR [eax-0x3b952a80]
  41bd7c:	sbb    eax,0xe18b2ee
  41bd81:	shl    bh,0xc5
  41bd84:	xor    eax,0xa18e32ad
  41bd89:	inc    edx
  41bd8a:	(bad)  [edi-0x5e]
  41bd8d:	data16 mov ah,0xc1
  41bd90:	cdq    
  41bd91:	sub    BYTE PTR [esp+esi*8+0x6a],0xec
  41bd96:	xlat   BYTE PTR ds:[ebx]
  41bd97:	mov    DWORD PTR [ebp+0x38],esi
  41bd9a:	fldln2 
  41bd9c:	loope  0x41bdaa
  41bd9e:	jno    0x41bd5e
  41bda0:	sub    ecx,esi
  41bda2:	add    al,al
  41bda4:	ins    DWORD PTR es:[edi],dx
  41bda5:	test   DWORD PTR cs:[ecx+0x66],edx
  41bda9:	test   al,0x64
  41bdab:	adc    al,0xbc
  41bdad:	je     0x41bdd1
  41bdaf:	arpl   bx,dx
  41bdb1:	jns    0x41bd34
  41bdb3:	out    dx,eax
  41bdb4:	add    ah,dl
  41bdb6:	scas   eax,DWORD PTR es:[edi]
  41bdb7:	sbb    al,0xc6
  41bdb9:	mov    ebp,0x72465289
  41bdbe:	(bad)  
  41bdbf:	mov    eax,ds:0xd3819f1f
  41bdc4:	out    0x98,eax
  41bdc6:	xor    BYTE PTR [ecx-0x2b],bh
  41bdc9:	ins    DWORD PTR es:[edi],dx
  41bdca:	clc    
  41bdcb:	add    DWORD PTR [edx-0x55],ebp
  41bdce:	mov    dl,0xf5
  41bdd0:	add    DWORD PTR [eax+eax*1],edi
  41bdd3:	push   edx
  41bdd4:	mov    esp,0xaf9a0bd9
  41bdd9:	call   0x4dfd0385
  41bdde:	push   esp
  41bddf:	dec    esi
  41bde0:	out    0xa8,al
  41bde2:	mov    ds:0xe5ec7dc3,al
  41bde7:	jmp    0xf936b09
  41bdec:	mov    al,0x1d
  41bdee:	jmp    0xf8f7ee0e
  41bdf3:	pop    eax
  41bdf4:	fbld   TBYTE PTR [edx+0x3f02aa59]
  41bdfa:	aam    0xc6
  41bdfc:	dec    eax
  41bdfd:	mov    ch,0x1c
  41bdff:	cwde   
  41be00:	xor    DWORD PTR [ebx+0x2f],0xffffffd8
  41be04:	prefetcht2 BYTE PTR [edx]
  41be07:	mov    ecx,0x667318a8
  41be0c:	hlt    
  41be0d:	adc    eax,0xfb967537
  41be12:	ds cmc 
  41be14:	test   BYTE PTR [edx+0x2b],ah
  41be17:	btc    DWORD PTR [edx],eax
  41be1a:	fcomp  DWORD PTR [ebx]
  41be1c:	pop    ss
  41be1d:	xchg   esi,eax
  41be1e:	inc    ecx
  41be1f:	and    BYTE PTR [edx+0x15130868],al
  41be25:	into   
  41be26:	leave  
  41be27:	jge    0x41bdba
  41be29:	cld    
  41be2a:	ror    bh,cl
  41be2c:	je     0x41be15
  41be2e:	pop    ds
  41be2f:	push   eax
  41be30:	js     0x41bdc8
  41be32:	mov    dh,BYTE PTR [esp+ebp*8]
  41be35:	or     DWORD PTR [ecx+0x78b34fb2],edi
  41be3b:	loopne 0x41be9a
  41be3d:	push   ebp
  41be3e:	fwait
  41be3f:	xor    ch,BYTE PTR [esi+0x66]
  41be42:	sub    eax,0xa500d4f
  41be47:	mov    ecx,0x95c6a9c
  41be4c:	mov    ch,BYTE PTR [ebx+ebp*4+0x78]
  41be50:	mov    edx,0x78910e77
  41be55:	in     eax,0x61
  41be57:	aam    0x1d
  41be59:	fiadd  DWORD PTR [edx-0x650f6fea]
  41be5f:	jbe    0x41be63
  41be61:	jge    0x41be2c
  41be63:	sub    edi,DWORD PTR [ebx]
  41be65:	cdq    
  41be66:	mov    esp,0x36bd38af
  41be6b:	sti    
  41be6c:	mov    eax,0x192ca25d
  41be71:	jp     0x41bdf7
  41be73:	shl    BYTE PTR [edx+0x59],0x76
  41be77:	mov    al,BYTE PTR [ecx+0x22]
  41be7a:	addr16 loope 0x41bee5
  41be7d:	fimul  WORD PTR ds:[ebx+0x1e]
  41be81:	dec    edi
  41be82:	or     al,ah
  41be84:	pop    esp
  41be85:	inc    edx
  41be86:	push   edi
  41be87:	push   ebx
  41be88:	call   0x31fd:0xf5b7c7b
  41be8f:	push   esp
  41be90:	enter  0xedf9,0xd6
  41be94:	cs pop eax
  41be96:	idiv   BYTE PTR [ebx+0x73134d5a]
  41be9c:	sub    eax,0xdb1bf33e
  41bea1:	(bad)  
  41bea2:	xor    edx,esi
  41bea4:	daa    
  41bea5:	xchg   ebp,eax
  41bea6:	push   ds
  41bea7:	mov    ecx,gs
  41bea9:	outs   dx,DWORD PTR ds:[esi]
  41beaa:	xchg   ebp,eax
  41beab:	push   ds
  41beac:	(bad)  
  41bead:	ins    DWORD PTR es:[edi],dx
  41beae:	clc    
  41beaf:	push   esp
  41beb0:	addr16 std 
  41beb2:	cli    
  41beb3:	aas    
  41beb4:	mov    edi,0x778ade0b
  41beb9:	push   es
  41beba:	retf   
  41bebb:	call   0x2785:0x6b383826
  41bec2:	sub    DWORD PTR [esi+0x35],edx
  41bec5:	pop    ebx
  41bec6:	jmp    0x1a42b868
  41becb:	aad    0xfe
  41becd:	mov    cs,WORD PTR [edx*4-0x132436be]
  41bed4:	mov    ch,0xeb
  41bed6:	mov    ah,0x7f
  41bed8:	fdivr  DWORD PTR [eax+0x16]
  41bedb:	fisubr DWORD PTR [ecx-0x76b8f285]
  41bee1:	xor    eax,0x39c76e88
  41bee6:	adc    BYTE PTR [ecx],al
  41bee8:	bound  ebp,QWORD PTR [ebp+0x48ad0c5f]
  41beee:	pop    es
  41beef:	fnsave [esi-0x79]
  41bef2:	dec    esi
  41bef3:	add    al,BYTE PTR [edi]
  41bef5:	daa    
  41bef6:	jmp    0x1881af82
  41befb:	push   ebx
  41befc:	in     eax,dx
  41befd:	mov    dh,0x64
  41beff:	jle    0x41bf34
  41bf01:	dec    esi
  41bf02:	loope  0x41bee3
  41bf04:	gs adc esi,ebp
  41bf07:	(bad)  
  41bf08:	xor    BYTE PTR [ebx],bh
  41bf0a:	and    BYTE PTR [edx],ah
  41bf0c:	pop    ds
  41bf0d:	bswap  eax
  41bf0f:	pop    es
  41bf10:	retf   
  41bf11:	jp     0x41bebe
  41bf13:	xchg   ecx,eax
  41bf14:	leave  
  41bf15:	adc    DWORD PTR [eax+0x2c],esp
  41bf18:	inc    ecx
  41bf19:	out    dx,eax
  41bf1a:	add    DWORD PTR [ecx+eax*1],eax
  41bf1d:	scas   al,BYTE PTR es:[edi]
  41bf1e:	xchg   esp,eax
  41bf1f:	hlt    
  41bf20:	lods   eax,DWORD PTR ds:[esi]
  41bf21:	sbb    cl,BYTE PTR [ecx]
  41bf23:	imul   DWORD PTR [edx+esi*1+0x50]
  41bf27:	adc    BYTE PTR [ebp+0x70a4edf0],bl
  41bf2d:	add    al,0x5d
  41bf2f:	mov    ch,0x49
  41bf31:	lds    ebp,FWORD PTR [esi+ebx*4+0x4aa2955]
  41bf38:	add    eax,0x44fd807
  41bf3d:	pop    esp
  41bf3e:	out    dx,al
  41bf3f:	scas   al,BYTE PTR es:[edi]
  41bf40:	mov    al,ds:0xdb142ae2
  41bf46:	lahf   
  41bf47:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bf48:	push   ebp
  41bf49:	retf   0xf53b
  41bf4c:	loop   0x41bf1a
  41bf4e:	(bad)  [eax+0x4eb831e]
  41bf54:	sbb    DWORD PTR [ebx-0x609c69df],eax
  41bf5a:	outs   dx,DWORD PTR ds:[esi]
  41bf5b:	dec    ecx
  41bf5c:	push   esi
  41bf5d:	mov    esp,esp
  41bf5f:	ret    0x7357
  41bf62:	and    BYTE PTR [ebp+0x61],dh
  41bf65:	xchg   esi,eax
  41bf66:	add    bp,sp
  41bf69:	(bad)  
  41bf6a:	jge    0x41bf3e
  41bf6c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bf6d:	je     0x41bf41
  41bf6f:	out    0x42,al
  41bf71:	jecxz  0x41bf36
  41bf73:	mov    bl,0x7c
  41bf75:	imul   ebx,DWORD PTR [ebp+0x227040cf],0x59
  41bf7c:	daa    
  41bf7d:	(bad)  
  41bf7e:	ret    0xc69b
  41bf81:	out    0x10,al
  41bf83:	push   ss
  41bf84:	add    edx,DWORD PTR [edi-0x1015fa86]
  41bf8a:	adc    dh,BYTE PTR [esi]
  41bf8c:	sar    ebp,0x2b
  41bf8f:	pop    esp
  41bf90:	lock fiadd WORD PTR [ebx-0xc]
  41bf94:	inc    DWORD PTR [esi-0x72]
  41bf97:	inc    esp
  41bf98:	adc    esi,ebx
  41bf9a:	and    ebp,edx
  41bf9c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bf9d:	inc    esp
  41bf9e:	adc    eax,ecx
  41bfa0:	nop
  41bfa1:	pop    edi
  41bfa2:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bfa4:	ja     0x41bfff
  41bfa6:	aaa    
  41bfa7:	xchg   esi,eax
  41bfa8:	into   
  41bfa9:	loop   0x41c00f
  41bfab:	inc    ebp
  41bfac:	in     al,dx
  41bfad:	sbb    edi,eax
  41bfaf:	cmp    al,0xd1
  41bfb1:	inc    edi
  41bfb2:	push   cs
  41bfb3:	xlat   BYTE PTR ds:[ebx]
  41bfb4:	fsub   QWORD PTR [esi]
  41bfb6:	(bad)  
  41bfb7:	neg    DWORD PTR [esi]
  41bfb9:	mov    cl,0x14
  41bfbb:	xor    dh,BYTE PTR [eax-0x42]
  41bfbe:	shl    BYTE PTR [ecx-0x37efea78],0x2e
  41bfc5:	gs sbb al,0x2e
  41bfc8:	inc    eax
  41bfc9:	xchg   ebp,eax
  41bfca:	jge    0x41bfee
  41bfcc:	es sub eax,0xcb5acacc
  41bfd2:	xchg   DWORD PTR [ecx+0x466c5d57],ecx
  41bfd8:	mov    eax,ds:0x2f37ab9
  41bfdd:	fdiv   st(3),st
  41bfdf:	test   eax,0xe84e2199
  41bfe4:	(bad)  
  41bfe5:	dec    esi
  41bfe6:	in     eax,dx
  41bfe7:	ret    0xc216
  41bfea:	push   0xffffff9f
  41bfec:	push   es
  41bfed:	or     eax,0x53c1de9c
  41bff2:	call   0x6914:0x9110d624
  41bff9:	dec    ebx
  41bffa:	outs   dx,DWORD PTR ds:[esi]
  41bffb:	mov    ecx,0x8801e552
  41c000:	jp     0x41bf9c
  41c002:	imul   edi,DWORD PTR [eax-0x686b2650],0xffffffa5
  41c009:	test   al,0xda
  41c00b:	and    al,0xa
  41c00d:	cmp    ah,BYTE PTR [esi]
  41c00f:	das    
  41c010:	les    edx,FWORD PTR [ebp+0x85ca688]
  41c016:	pop    ecx
  41c017:	scas   al,BYTE PTR es:[edi]
  41c018:	push   ss
  41c019:	sub    DWORD PTR ss:0x9ab0305e,ebp
  41c020:	sti    
  41c021:	push   ebp
  41c022:	push   edx
  41c023:	xchg   esi,eax
  41c024:	sbb    esp,DWORD PTR ds:0xc9f357cf
  41c02a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c02b:	fcomp  DWORD PTR [ebx]
  41c02d:	xlat   BYTE PTR ds:[ebx]
  41c02e:	and    ebx,ecx
  41c030:	jae    0x41c09b
  41c032:	push   ebx
  41c033:	test   al,0xd4
  41c035:	imul   ebx,DWORD PTR [ecx-0x52],0x11d55a9a
  41c03c:	jb     0x41c084
  41c03e:	adc    ah,BYTE PTR [ebx-0xd]
  41c041:	gs cmp al,0xf4
  41c044:	cmp    eax,0xc8b5cefa
  41c049:	loope  0x41c02a
  41c04b:	pop    esi
  41c04c:	addr16 xchg edx,eax
  41c04e:	fs and ebx,ebp
  41c051:	mov    eax,0xf073eff1
  41c056:	jae    0x41c061
  41c058:	idiv   bh
  41c05a:	and    ebp,edx
  41c05c:	lock outs dx,BYTE PTR ds:[esi]
  41c05e:	rcl    DWORD PTR [edx],cl
  41c060:	mov    dl,0x76
  41c062:	sub    BYTE PTR cs:[ebp-0x54],ch
  41c066:	adc    eax,0x86d0565f
  41c06b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c06c:	(bad)
  41c06f:	stos   DWORD PTR es:[edi],eax
  41c070:	fimul  WORD PTR gs:[edi+0x1874b2cd]
  41c077:	jmp    0x8df4:0x4cb4fd73
  41c07e:	hlt    
  41c07f:	or     BYTE PTR [edi],0xea
  41c082:	aam    0xab
  41c084:	add    ah,BYTE PTR [esi]
  41c086:	or     DWORD PTR [esi+0x7db4dffd],edi
  41c08c:	pusha  
  41c08d:	ss cli 
  41c08f:	xlat   BYTE PTR ds:[ebx]
  41c090:	nop
  41c091:	les    edx,FWORD PTR [edx+0x1e]
  41c094:	xor    eax,0x59849ee6
  41c099:	jmp    0x7d3d35fd
  41c09e:	enter  0xdac7,0x39
  41c0a2:	dec    eax
  41c0a3:	jecxz  0x41c048
  41c0a5:	cmp    eax,0x1938e69d
  41c0aa:	call   DWORD PTR [edi+0xceb4149]
  41c0b0:	scas   eax,DWORD PTR es:[edi]
  41c0b1:	fcmovbe st,st(5)
  41c0b3:	int    0xf1
  41c0b5:	mov    ch,0xa1
  41c0b7:	pop    esp
  41c0b8:	cmp    eax,0xd687ceee
  41c0bd:	lock push cs
  41c0bf:	mov    dh,BYTE PTR [esi-0x37886155]
  41c0c5:	stos   DWORD PTR es:[edi],eax
  41c0c6:	dec    esi
  41c0c7:	aas    
  41c0c8:	nop
  41c0c9:	out    0xd,al
  41c0cb:	sbb    BYTE PTR [ebp+0x24135c5e],0x9d
  41c0d2:	add    WORD PTR ds:0xf8e70565,0x6f14
  41c0db:	push   ss
  41c0dc:	cdq    
  41c0dd:	mov    fs,ebx
  41c0df:	mov    ebx,0x5ef2361c
  41c0e4:	dec    esp
  41c0e5:	push   0xffffffae
  41c0e7:	and    eax,DWORD PTR [eax+0x7c]
  41c0ea:	adc    DWORD PTR [ebp+ebx*2+0x17],ebp
  41c0ee:	ss mov ebx,0xf975663a
  41c0f4:	or     BYTE PTR [edi+0x7f],ah
  41c0f7:	loop   0x41c178
  41c0f9:	mov    esi,0xcf55a062
  41c0fe:	mov    esi,0xcdf975e7
  41c103:	xchg   ebx,eax
  41c104:	popa   
  41c105:	inc    ecx
  41c106:	push   0x1
  41c108:	dec    eax
  41c109:	sub    BYTE PTR [esi-0x29d3aaf0],dl
  41c10f:	pop    es
  41c110:	mov    edi,0xc67a8527
  41c115:	and    eax,0xde9bc230
  41c11a:	mov    ds:0xd50dea76,eax
  41c11f:	push   esi
  41c120:	fcomp  QWORD PTR [esi]
  41c122:	pop    ss
  41c123:	inc    ecx
  41c124:	stos   BYTE PTR es:[edi],al
  41c125:	sub    al,0x64
  41c127:	xor    edx,ecx
  41c129:	jo     0x41c18b
  41c12b:	iret   
  41c12c:	(bad)  [edx]
  41c12e:	lahf   
  41c12f:	push   edi
  41c130:	jnp    0x41c141
  41c132:	dec    esi
  41c133:	cmp    bh,bl
  41c135:	jecxz  0x41c0d8
  41c137:	or     BYTE PTR [edx+eiz*8-0x17],ah
  41c13b:	jp     0x41c197
  41c13d:	rcl    BYTE PTR [ecx+0x4e45101],1
  41c143:	fcmovnb st,st(0)
  41c145:	cmp    al,0x41
  41c147:	pop    edx
  41c148:	sub    al,0x62
  41c14a:	inc    ebp
  41c14b:	arpl   WORD PTR [edi-0x6c],di
  41c14e:	ja     0x41c199
  41c150:	gs retf 0xa15
  41c154:	sbb    eax,0x7099bb99
  41c159:	pop    ds
  41c15a:	jecxz  0x41c18f
  41c15c:	call   0xf50c854a
  41c161:	pop    ecx
  41c162:	pop    edx
  41c163:	retf   0x9a0
  41c166:	das    
  41c167:	ss jo  0x41c101
  41c16a:	loope  0x41c16d
  41c16c:	add    eax,0x89901e8f
  41c171:	add    BYTE PTR [eax],bh
  41c173:	push   es
  41c174:	in     eax,0xa6
  41c176:	ja     0x41c179
  41c178:	addr16 ret 
  41c17a:	dec    esi
  41c17b:	and    ch,BYTE PTR [esi+edi*2-0x15]
  41c17f:	mov    ebp,0xa981367b
  41c184:	sub    BYTE PTR [ebx],bl
  41c186:	in     al,0x46
  41c188:	(bad)  
  41c189:	xor    eax,DWORD PTR [edx]
  41c18b:	jno    0x41c158
  41c18d:	jne    0x41c140
  41c18f:	mov    al,ds:0xd5ea3d85
  41c194:	and    bl,BYTE PTR [edi+0x76a73284]
  41c19a:	aaa    
  41c19b:	and    ah,BYTE PTR [ecx+0x78]
  41c19e:	dec    ebp
  41c19f:	adc    dh,dl
  41c1a1:	ins    DWORD PTR es:[edi],dx
  41c1a2:	push   0xffffffd3
  41c1a4:	lods   eax,DWORD PTR ds:[esi]
  41c1a5:	pusha  
  41c1a6:	jge    0x41c1ec
  41c1a8:	jg     0x41c221
  41c1aa:	lods   eax,DWORD PTR ds:[esi]
  41c1ab:	mov    bl,0x4a
  41c1ad:	inc    eax
  41c1ae:	nop
  41c1af:	(bad)  
  41c1b1:	push   ds
  41c1b2:	add    eax,0xbca0eb6c
  41c1b7:	jmp    0x1d486630
  41c1bc:	pop    ebp
  41c1bd:	mov    ebp,0x7badd7cb
  41c1c2:	jl     0x41c1b7
  41c1c4:	xor    al,0x46
  41c1c6:	dec    ebp
  41c1c7:	jns    0x41c239
  41c1c9:	cs scas eax,DWORD PTR es:[edi]
  41c1cb:	gs out 0xe,eax
  41c1ce:	inc    ebx
  41c1cf:	mov    esp,0x1112809b
  41c1d4:	cmp    eax,0x3e354598
  41c1d9:	mov    cl,0x2a
  41c1db:	jae    0x41c1ab
  41c1dd:	out    0x80,al
  41c1df:	lods   eax,DWORD PTR ds:[esi]
  41c1e0:	sbb    al,0xbb
  41c1e2:	dec    ebp
  41c1e3:	test   al,0x19
  41c1e5:	jmp    0x350c15ce
  41c1ea:	(bad)  
  41c1eb:	cmc    
  41c1ec:	fsub   st,st(3)
  41c1ee:	pop    ebx
  41c1ef:	and    dh,BYTE PTR [ebx+0x3883b9a7]
  41c1f5:	sub    al,0x51
  41c1f7:	mov    gs,eax
  41c1f9:	ss xor esp,edi
  41c1fc:	or     al,0x74
  41c1fe:	nop
  41c1ff:	dec    ebp
  41c200:	mov    edx,DWORD PTR [esp+edx*1]
  41c203:	sbb    BYTE PTR [esi+edi*2],ch
  41c206:	mov    ds:0xf5e67e55,eax
  41c20b:	add    edi,esp
  41c20d:	inc    esp
  41c20e:	pop    esp
  41c20f:	cmp    al,0x30
  41c211:	(bad)  
  41c212:	dec    esi
  41c213:	rcl    bh,cl
  41c215:	nop
  41c216:	push   esi
  41c217:	pop    ss
  41c218:	(bad)  
  41c219:	popa   
  41c21a:	mov    edi,0xf7e0775a
  41c21f:	sbb    BYTE PTR [ebx+0x16],bh
  41c222:	shr    BYTE PTR [ecx-0x41954b69],1
  41c228:	fdivr  DWORD PTR [edx]
  41c22a:	jns    0x41c1da
  41c22c:	adc    ecx,ebp
  41c22e:	push   ecx
  41c22f:	pop    esi
  41c230:	adc    BYTE PTR [eax],al
  41c232:	mov    bl,0xbf
  41c234:	add    al,0x53
  41c236:	dec    eax
  41c237:	mov    gs,WORD PTR [ebx*4+0x69e78925]
  41c23e:	dec    esi
  41c23f:	inc    eax
  41c240:	add    DWORD PTR [esi+edx*2],ebx
  41c243:	ror    BYTE PTR es:[eax+eax*8],cl
  41c247:	ret    0xd7c5
  41c24a:	pop    es
  41c24b:	jmp    0x336a:0x6ab7960b
  41c252:	push   ds
  41c253:	xchg   ebp,eax
  41c254:	enter  0x4a11,0x79
  41c258:	inc    ecx
  41c259:	jnp    0x41c26d
  41c25b:	(bad)  
  41c25c:	xchg   ebp,eax
  41c25d:	pop    edx
  41c25e:	enter  0x8c04,0xf5
  41c262:	sub    eax,0xffffffea
  41c265:	sbb    ah,bl
  41c267:	outs   dx,BYTE PTR ds:[esi]
  41c268:	lahf   
  41c269:	xor    DWORD PTR [ebx],ebx
  41c26b:	mov    al,0xd0
  41c26d:	inc    eax
  41c26e:	pop    ebp
  41c26f:	es cdq 
  41c271:	std    
  41c272:	mov    al,dh
  41c274:	mov    ebp,0x4c0de6f4
  41c279:	adc    edi,DWORD PTR [edi]
  41c27b:	add    dl,BYTE PTR [eax+0xa]
  41c27e:	cmp    DWORD PTR [ebx],esp
  41c280:	jns    0x41c258
  41c282:	sbb    eax,0xaef38c3c
  41c287:	sub    ch,BYTE PTR [esi+0x4b635392]
  41c28d:	ret    
  41c28e:	iret   
  41c28f:	pop    esi
  41c290:	pop    es
  41c291:	lods   eax,DWORD PTR ds:[esi]
  41c292:	sub    DWORD PTR [esi-0x7d3a17ff],ecx
  41c298:	call   0xb188:0x29ebe7db
  41c29f:	div    ecx
  41c2a1:	faddp  st(2),st
  41c2a3:	ins    BYTE PTR es:[edi],dx
  41c2a4:	xchg   ebp,eax
  41c2a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c2a6:	outs   dx,DWORD PTR ds:[esi]
  41c2a7:	pusha  
  41c2a8:	das    
  41c2a9:	out    dx,eax
  41c2aa:	int3   
  41c2ab:	out    dx,al
  41c2ac:	int3   
  41c2ad:	and    eax,0xc2f3828
  41c2b2:	out    0x96,al
  41c2b4:	sub    esi,ecx
  41c2b6:	and    BYTE PTR [ebp+0x5145c201],bh
  41c2bc:	repnz mov ds:0xfb6b64b8,eax
  41c2c2:	cs test ch,dl
  41c2c5:	ins    DWORD PTR es:[edi],dx
  41c2c6:	enter  0x701,0x27
  41c2ca:	add    dl,cl
  41c2cc:	push   ebx
  41c2cd:	push   cs
  41c2ce:	inc    ebx
  41c2cf:	cld    
  41c2d0:	pop    esi
  41c2d1:	lock cld 
  41c2d3:	scas   eax,DWORD PTR es:[edi]
  41c2d4:	jae    0x41c353
  41c2d6:	ins    DWORD PTR es:[edi],dx
  41c2d7:	jg     0x41c2d5
  41c2d9:	or     al,0x98
  41c2db:	out    0xcb,al
  41c2dd:	mov    al,ds:0x1907340b
  41c2e2:	mov    ch,0xb7
  41c2e4:	pop    ebp
  41c2e5:	out    dx,al
  41c2e6:	data16 jno 0x41c326
  41c2e9:	out    0xdc,al
  41c2eb:	jl     0x41c2f3
  41c2ed:	(bad)  
  41c2ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c2ef:	cwde   
  41c2f0:	fmul   DWORD PTR [esi+0x66]
  41c2f3:	lahf   
  41c2f4:	data16 mov bl,0x45
  41c2f7:	xchg   ebx,eax
  41c2f8:	into   
  41c2f9:	dec    esi
  41c2fa:	fidiv  WORD PTR ds:0x99320c22
  41c300:	adc    dh,BYTE PTR [ecx-0x24]
  41c303:	out    dx,eax
  41c304:	adc    BYTE PTR [edi-0x506375fb],0xc4
  41c30b:	adc    BYTE PTR ds:0x5d2bdeb1,ah
  41c311:	test   BYTE PTR [eax-0x1f],al
  41c314:	mov    ebx,0xb0861dd6
  41c319:	jnp    0x41c2f2
  41c31b:	jp     0x41c2bd
  41c31d:	pop    edi
  41c31e:	dec    esp
  41c31f:	mov    al,0x4d
  41c321:	mov    ds:0xc438e717,al
  41c326:	push   ecx
  41c327:	mov    al,0xd7
  41c329:	push   edx
  41c32a:	adc    BYTE PTR [ebp-0xa],bl
  41c32d:	mov    cl,0xdc
  41c32f:	mov    ebp,0x9ac1db90
  41c334:	je     0x41c300
  41c336:	push   edx
  41c337:	mov    ebx,0x92519cf3
  41c33c:	adc    BYTE PTR [ebp+0x22e84df4],ch
  41c342:	add    BYTE PTR [esi],0xec
  41c345:	(bad)  
  41c346:	push   edx
  41c347:	pusha  
  41c348:	fwait
  41c349:	pushf  
  41c34a:	xchg   edx,eax
  41c34b:	cvttps2pi mm5,QWORD PTR [ecx]
  41c34e:	pop    edi
  41c34f:	(bad)  
  41c350:	(bad)  
  41c351:	push   cs
  41c352:	mov    ds:0x12153fbe,eax
  41c357:	jge    0x41c3d1
  41c359:	ins    DWORD PTR es:[edi],dx
  41c35a:	jnp    0x41c39b
  41c35c:	retf   
  41c35d:	enter  0x1eb2,0x3
  41c361:	test   al,0x6
  41c363:	aas    
  41c364:	je     0x41c381
  41c366:	cs popf 
  41c368:	dec    edx
  41c369:	xor    eax,0xef3f794b
  41c36e:	mov    fs,WORD PTR [edx+ebx*2+0x6cfdabe5]
  41c375:	aad    0x81
  41c377:	mov    edi,0x322339f0
  41c37c:	lahf   
  41c37d:	outs   dx,DWORD PTR ds:[esi]
  41c37e:	loope  0x41c3e7
  41c380:	pop    esi
  41c381:	inc    edi
  41c382:	xchg   edx,eax
  41c383:	lahf   
  41c384:	sar    BYTE PTR [eax],0xab
  41c387:	or     eax,0x449f6dca
  41c38c:	xchg   BYTE PTR [edx+ecx*4+0x3f],dh
  41c390:	push   ecx
  41c391:	(bad)  [edx-0x37d8f4ce]
  41c397:	(bad)  
  41c399:	sbb    dh,BYTE PTR [esi]
  41c39b:	pop    ds
  41c39c:	bound  edx,QWORD PTR [ecx+0x9e597cc]
  41c3a2:	popa   
  41c3a3:	jl     0x41c331
  41c3a5:	inc    BYTE PTR [edi-0x5e2a1e71]
  41c3ab:	pusha  
  41c3ac:	pop    ebx
  41c3ad:	std    
  41c3ae:	pop    es
  41c3af:	pop    ecx
  41c3b0:	or     al,0x7a
  41c3b2:	(bad)  
  41c3b3:	cmp    eax,0x58a308c0
  41c3b8:	jg     0x41c398
  41c3ba:	mov    esi,0x1d07172d
  41c3bf:	arpl   WORD PTR [esi+0x5],ax
  41c3c2:	mov    edx,0xb4a5157a
  41c3c7:	jecxz  0x41c360
  41c3c9:	mov    esp,0xc211c6f
  41c3ce:	xor    ebp,esi
  41c3d0:	fisttp WORD PTR [ecx-0x258662d]
  41c3d6:	add    ecx,DWORD PTR [ebp+ecx*1+0xfbbaa21]
  41c3dd:	jge    0x41c3c8
  41c3df:	jne    0x41c3b7
  41c3e1:	nop
  41c3e2:	ret    
  41c3e3:	xor    eax,0xc3233be9
  41c3e8:	xchg   ecx,eax
  41c3e9:	xchg   esi,eax
  41c3ea:	test   DWORD PTR [esi-0x80],ebp
  41c3ed:	xor    edi,DWORD PTR [ebp+0x696cce0b]
  41c3f3:	adc    al,0x54
  41c3f5:	mov    edx,0xa038461f
  41c3fa:	mov    ah,0x39
  41c3fc:	mov    bh,0x89
  41c3fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c3ff:	push   cs
  41c400:	icebp  
  41c401:	push   edi
  41c402:	mov    ds:0xc83fc42,al
  41c407:	scas   al,BYTE PTR es:[edi]
  41c408:	lock repnz iret 
  41c40b:	cmp    ebx,0xffffffbf
  41c40e:	sbb    DWORD PTR [edx-0x38],ebp
  41c411:	sub    al,0x73
  41c413:	xlat   BYTE PTR ds:[ebx]
  41c414:	xor    esp,ebx
  41c416:	ret    0xc779
  41c419:	scas   al,BYTE PTR es:[edi]
  41c41a:	xlat   BYTE PTR ds:[ebx]
  41c41b:	inc    eax
  41c41c:	mov    ds:0xa401d6ea,al
  41c421:	add    DWORD PTR [ebp+0x390f956b],0x11
  41c428:	inc    esi
  41c429:	test   BYTE PTR [ebx],dh
  41c42b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c42c:	jmp    0x60ab:0x96fa3f6
  41c433:	(bad)  
  41c434:	jl     0x41c414
  41c436:	into   
  41c437:	xor    eax,0x7583205f
  41c43c:	mov    esp,0xe3c68634
  41c441:	fild   WORD PTR [edi+0x17e70e59]
  41c447:	(bad)  
  41c448:	dec    esp
  41c449:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c44a:	add    DWORD PTR [esi+ecx*1+0x11b1cea0],ecx
  41c451:	mov    esi,0x5fdc7b90
  41c456:	sub    al,0x86
  41c458:	repnz lock clc 
  41c45b:	in     eax,0xfa
  41c45d:	rcl    edi,0xfd
  41c460:	retf   
  41c461:	push   es
  41c462:	cld    
  41c463:	sbb    al,0xf7
  41c465:	add    BYTE PTR [ecx+0x59c00726],bh
  41c46b:	iret   
  41c46c:	clc    
  41c46d:	adc    BYTE PTR [ebp+ecx*1-0x37],al
  41c471:	cmp    cl,cl
  41c473:	sbb    esp,DWORD PTR [edx]
  41c475:	rcr    ecx,cl
  41c477:	shl    DWORD PTR [edi-0x78871161],cl
  41c47d:	cli    
  41c47e:	sbb    BYTE PTR [ebx+edi*4+0x356dba3e],dh
  41c485:	(bad)  
  41c486:	sbb    eax,DWORD PTR [edx+0x69]
  41c489:	inc    eax
  41c48a:	jb     0x41c4e9
  41c48c:	in     eax,dx
  41c48d:	xor    cl,BYTE PTR [edx+eax*2-0x4de2a13b]
  41c494:	aas    
  41c495:	fcom   DWORD PTR [edx-0x73]
  41c498:	xor    DWORD PTR [ecx+ebx*2-0x52],0xffffffec
  41c49d:	icebp  
  41c49e:	and    DWORD PTR [eax-0x2d],0xb6f465ac
  41c4a5:	mov    ds:0x4aeb2b34,al
  41c4aa:	jp     0x41c4e0
  41c4ac:	sub    edi,ecx
  41c4ae:	fs cld 
  41c4b0:	lods   al,BYTE PTR ds:[esi]
  41c4b1:	fnstcw WORD PTR [ecx-0x2e]
  41c4b4:	jmp    0x6171f9b
  41c4b9:	inc    eax
  41c4ba:	mov    bl,0xab
  41c4bc:	pop    ss
  41c4bd:	sti    
  41c4be:	adc    al,BYTE PTR [esi-0x5a]
  41c4c1:	lods   eax,DWORD PTR ds:[esi]
  41c4c2:	jg     0x41c487
  41c4c4:	mov    edi,0x2e402d04
  41c4c9:	fs scas eax,DWORD PTR es:[edi]
  41c4cb:	push   esi
  41c4cc:	cli    
  41c4cd:	add    ebx,DWORD PTR [ecx+0x8]
  41c4d0:	loope  0x41c512
  41c4d2:	mov    al,ds:0x536f5ab9
  41c4d7:	jge    0x41c51c
  41c4d9:	(bad)  
  41c4da:	lods   eax,DWORD PTR ds:[esi]
  41c4db:	mov    ch,0xf5
  41c4dd:	push   edx
  41c4de:	push   es
  41c4df:	frstor [edi]
  41c4e1:	adc    DWORD PTR [ecx-0x48],eax
  41c4e4:	xchg   edx,eax
  41c4e5:	(bad)  
  41c4e7:	ficom  WORD PTR [edx+0x6c]
  41c4ea:	sub    al,0x85
  41c4ec:	arpl   dx,bx
  41c4ee:	mov    ds:0x87455259,al
  41c4f3:	sbb    bl,BYTE PTR [ecx+0x39]
  41c4f6:	loopne 0x41c572
  41c4f8:	das    
  41c4f9:	stos   DWORD PTR es:[edi],eax
  41c4fa:	fild   DWORD PTR [ebx+0x4f]
  41c4fd:	push   ecx
  41c4fe:	mov    BYTE PTR ds:0x10edd39c,ah
  41c504:	popf   
  41c505:	sahf   
  41c506:	inc    edi
  41c507:	sub    BYTE PTR [esi],cl
  41c509:	repz dec esp
  41c50b:	dec    ebx
  41c50c:	jbe    0x41c56b
  41c50e:	add    edi,edi
  41c510:	xchg   ecx,eax
  41c511:	push   ebx
  41c512:	imul   ebx,DWORD PTR [esi+0x3110ba50],0xffffffd7
  41c519:	clc    
  41c51a:	xchg   ch,dh
  41c51c:	cmp    BYTE PTR [esi],ah
  41c51e:	push   es
  41c51f:	je     0x41c53f
  41c521:	call   0x7e7050f0
  41c526:	cmp    ch,BYTE PTR [ebx]
  41c528:	jp     0x41c539
  41c52a:	push   0xffffffc7
  41c52c:	into   
  41c52d:	or     al,0x56
  41c52f:	sbb    BYTE PTR [eax-0x3ba8ff05],0xb0
  41c536:	iret   
  41c537:	(bad)  
  41c538:	leave  
  41c539:	sub    BYTE PTR [esi],dl
  41c53b:	jbe    0x41c540
  41c53d:	stos   BYTE PTR es:[edi],al
  41c53e:	pop    edx
  41c53f:	push   ebx
  41c540:	ret    
  41c541:	mov    eax,ds:0x4f66b265
  41c546:	test   DWORD PTR [edx+0x18],esi
  41c549:	cmc    
  41c54a:	mov    dl,0x88
  41c54c:	nop
  41c54d:	frstor [esp+edx*8-0x2e]
  41c551:	push   esi
  41c552:	sbb    eax,0xc77a4cb8
  41c557:	xor    BYTE PTR [edi-0x5ec61939],bh
  41c55d:	fucomp st(6)
  41c55f:	aam    0xce
  41c561:	ins    BYTE PTR es:[edi],dx
  41c562:	out    dx,eax
  41c563:	jle    0x41c54e
  41c565:	popa   
  41c566:	loope  0x41c5b6
  41c568:	dec    edx
  41c569:	xor    DWORD PTR [eax-0x3315d2f9],0xce4d864e
  41c573:	or     DWORD PTR [edx-0x5823fcf4],0x26
  41c57a:	mov    ebx,0x717a11d3
  41c57f:	dec    dl
  41c581:	sub    eax,0xf81d7987
  41c586:	xor    BYTE PTR [ebp+0x76],bh
  41c589:	outs   dx,BYTE PTR ds:[esi]
  41c58a:	pop    eax
  41c58b:	pop    eax
  41c58c:	sbb    dh,BYTE PTR ds:0xb1f77521
  41c592:	lds    ebp,FWORD PTR [ebx-0x5e]
  41c595:	popf   
  41c596:	mov    ecx,0x5781a3ad
  41c59b:	loop   0x41c602
  41c59d:	adc    esi,DWORD PTR ds:0xe1572
  41c5a3:	pop    eax
  41c5a4:	xor    eax,0x43192ba9
  41c5a9:	adc    eax,DWORD PTR ds:0x2568eddc
  41c5af:	xor    BYTE PTR [eax],0xa5
  41c5b2:	pusha  
  41c5b3:	inc    eax
  41c5b4:	mov    al,ds:0x9941eee8
  41c5b9:	jbe    0x41c62a
  41c5bb:	pop    eax
  41c5bc:	pusha  
  41c5bd:	or     eax,0xa39f62b9
  41c5c2:	mov    bl,0xda
  41c5c4:	fwait
  41c5c5:	sbb    bl,bl
  41c5c7:	repz push esi
  41c5c9:	push   si
  41c5cb:	(bad)  
  41c5cc:	mov    al,ds:0x668dd8b7
  41c5d1:	and    DWORD PTR ds:0xcc39f1be,edx
  41c5d7:	dec    ebx
  41c5d8:	mov    esp,0xa8139061
  41c5dd:	inc    eax
  41c5de:	icebp  
  41c5df:	loop   0x41c5c8
  41c5e1:	dec    ebx
  41c5e2:	aam    0x5f
  41c5e4:	test   eax,0x19673d6c
  41c5e9:	call   0x8e16:0x52b83688
  41c5f0:	cmp    esi,DWORD PTR [edx-0x1e95e740]
  41c5f6:	dec    eax
  41c5f7:	mov    al,0xeb
  41c5f9:	jnp    0x41c582
  41c5fb:	add    al,BYTE PTR [eax+0x41e60563]
  41c601:	nop
  41c602:	stos   DWORD PTR es:[edi],eax
  41c603:	fisubr WORD PTR [esi-0x18]
  41c606:	push   edi
  41c607:	in     al,dx
  41c608:	mov    edi,0x618d1db6
  41c60d:	add    esp,edx
  41c60f:	mov    al,BYTE PTR [edx-0x46306d90]
  41c615:	cmp    eax,0xfff61588
  41c61a:	sub    ch,dh
  41c61c:	out    dx,al
  41c61d:	std    
  41c61e:	dec    esi
  41c61f:	xor    al,0x68
  41c621:	lahf   
  41c622:	jg     0x41c622
  41c624:	jnp    0x41c68f
  41c626:	add    BYTE PTR [eax+ecx*4],ch
  41c629:	ins    DWORD PTR es:[edi],dx
  41c62a:	test   bh,cl
  41c62c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c62d:	xor    edx,ebx
  41c62f:	xor    eax,0x51958c69
  41c634:	mov    esp,0x9c441db8
  41c639:	aam    0xbf
  41c63b:	push   edx
  41c63c:	ins    BYTE PTR es:[edi],dx
  41c63d:	rcr    DWORD PTR [ebp-0x4fefef15],1
  41c643:	xor    BYTE PTR [ebp+ebp*8+0x2],dl
  41c647:	jmp    0x5f462ce8
  41c64c:	lods   al,BYTE PTR ds:[esi]
  41c64d:	pop    ecx
  41c64e:	jge    0x41c610
  41c650:	hlt    
  41c651:	fsub   st,st(4)
  41c653:	stos   BYTE PTR es:[edi],al
  41c654:	xchg   edi,eax
  41c655:	sbb    BYTE PTR ds:0x51011ef2,bl
  41c65b:	fcom   DWORD PTR [ecx+0x25]
  41c65e:	dec    ebx
  41c65f:	data16 or al,0xae
  41c662:	xchg   ebp,eax
  41c663:	iret   
  41c664:	mov    al,0x81
  41c666:	sbb    esi,DWORD PTR [ebx]
  41c668:	jg     0x41c6e6
  41c66a:	sbb    ebx,DWORD PTR [ecx-0x70]
  41c66d:	enter  0x5562,0xbd
  41c671:	fidivr WORD PTR [eax-0x3910ad1b]
  41c677:	push   eax
  41c678:	add    dh,cl
  41c67a:	jg     0x41c6c5
  41c67c:	push   0x7a
  41c67e:	or     BYTE PTR [esi+eax*2+0x48431062],bl
  41c685:	inc    esi
  41c686:	popf   
  41c687:	mov    dh,0x5
  41c689:	stos   DWORD PTR es:[edi],eax
  41c68a:	neg    BYTE PTR [edx+ecx*1-0x59b90763]
  41c691:	aam    0xfd
  41c693:	jl     0x41c690
  41c695:	adc    al,0x92
  41c697:	inc    ebx
  41c698:	and    dl,ch
  41c69a:	mov    ah,0xb7
  41c69c:	mov    bl,0x80
  41c69e:	xchg   BYTE PTR ds:0xbf1c08c6,bl
  41c6a4:	fs pop edi
  41c6a6:	repz adc ebp,esp
  41c6a9:	or     edx,ecx
  41c6ab:	js     0x41c64c
  41c6ad:	data16 in al,0xf1
  41c6b0:	push   edx
  41c6b1:	jmp    0x726a:0x7d4c87fc
  41c6b8:	mov    BYTE PTR [edx-0x5f],dl
  41c6bb:	into   
  41c6bc:	icebp  
  41c6bd:	push   di
  41c6bf:	cs jle 0x41c6be
  41c6c2:	mov    edi,0x2e5ab669
  41c6c7:	invlpg BYTE PTR [ebx]
  41c6ca:	sbb    ecx,ebp
  41c6cc:	cmp    BYTE PTR [eax],cl
  41c6ce:	mov    bl,0x1b
  41c6d0:	jecxz  0x41c694
  41c6d2:	adc    BYTE PTR [ebx-0x32],ch
  41c6d5:	repnz xchg esp,eax
  41c6d7:	call   0xe0420abc
  41c6dc:	pop    ebx
  41c6dd:	shr    ch,cl
  41c6df:	test   BYTE PTR [ebp+0x70],dl
  41c6e2:	jl     0x41c666
  41c6e4:	fisttp WORD PTR [eax+0x5]
  41c6e7:	inc    ecx
  41c6e8:	cli    
  41c6e9:	jne    0x41c6e0
  41c6eb:	pushf  
  41c6ec:	cs test eax,0x7afb6d44
  41c6f2:	and    DWORD PTR [ecx+edi*1-0x1c],eax
  41c6f6:	push   edx
  41c6f7:	pusha  
  41c6f8:	adc    al,0x3f
  41c6fa:	push   ss
  41c6fb:	push   edx
  41c6fc:	sahf   
  41c6fd:	in     al,0xb9
  41c6ff:	mov    esi,0x2cf91328
  41c704:	xchg   ebx,eax
  41c705:	iret   
  41c706:	aas    
  41c707:	ror    BYTE PTR [eax],cl
  41c709:	xor    eax,0xe4c9aef7
  41c70e:	bound  ebx,QWORD PTR [esi+0x45c61ec]
  41c714:	push   0xffffffed
  41c716:	in     al,0x1a
  41c718:	add    ebx,DWORD PTR [eax]
  41c71a:	imul   edi,ecx,0x3d8e32f6
  41c720:	dec    ebx
  41c721:	dec    ecx
  41c722:	inc    edx
  41c723:	clc    
  41c724:	stos   DWORD PTR es:[edi],eax
  41c725:	in     eax,0xf
  41c727:	dec    edx
  41c728:	loop   0x41c739
  41c72a:	stos   BYTE PTR es:[edi],al
  41c72b:	mov    dl,0xc6
  41c72d:	mov    al,ds:0xf199bba0
  41c732:	jae    0x41c708
  41c734:	xchg   ecx,eax
  41c735:	mov    al,ds:0xae4696a5
  41c73a:	jbe    0x41c7a9
  41c73c:	ror    al,0xc1
  41c73f:	lds    ebp,FWORD PTR [edx]
  41c741:	(bad)  
  41c742:	push   0x2511ac1b
  41c747:	jb     0x41c7c2
  41c749:	popf   
  41c74a:	popf   
  41c74b:	enter  0x1dd0,0x94
  41c74f:	outs   dx,BYTE PTR ds:[esi]
  41c750:	outs   dx,DWORD PTR ds:[esi]
  41c751:	mov    ds:0xc6b61055,eax
  41c756:	in     eax,dx
  41c757:	shl    BYTE PTR [esi],cl
  41c759:	outs   dx,BYTE PTR ds:[esi]
  41c75a:	pop    ds
  41c75b:	adc    al,BYTE PTR [eax-0x69]
  41c75e:	dec    ebx
  41c75f:	scas   eax,DWORD PTR es:[edi]
  41c760:	dec    esi
  41c761:	pop    ebx
  41c762:	xchg   ebp,eax
  41c763:	cwde   
  41c764:	daa    
  41c765:	add    al,0xeb
  41c767:	jne    0x41c7b4
  41c769:	mov    edx,0x33fb631b
  41c76e:	fidiv  DWORD PTR [eax+0x56]
  41c771:	in     al,dx
  41c772:	mov    ah,0x20
  41c774:	jnp    0x41c759
  41c776:	sub    bl,BYTE PTR [si+0x4c85]
  41c77b:	mov    DWORD PTR gs:[ebx-0x59],ebx
  41c77f:	dec    edx
  41c780:	outs   dx,DWORD PTR ds:[esi]
  41c781:	out    dx,eax
  41c782:	mov    bh,ah
  41c784:	fisub  WORD PTR [edx-0x262429b]
  41c78a:	in     al,dx
  41c78b:	push   ds
  41c78c:	jle    0x41c7f9
  41c78e:	and    al,0x93
  41c790:	in     eax,dx
  41c791:	pop    ss
  41c792:	xor    DWORD PTR [edx+0x2bf4e761],ebx
  41c798:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c799:	and    dl,BYTE PTR [ecx]
  41c79b:	add    bl,BYTE PTR [edx+edx*8]
  41c79e:	sbb    al,0x94
  41c7a0:	ror    BYTE PTR [ebx+0x41],cl
  41c7a3:	psllw  mm1,QWORD PTR [ebp+0x60]
  41c7a7:	add    al,0x71
  41c7a9:	faddp  st(2),st
  41c7ab:	stos   BYTE PTR es:[edi],al
  41c7ac:	daa    
  41c7ad:	xchg   BYTE PTR [eax+0x3aa85067],al
  41c7b3:	pushf  
  41c7b4:	sub    DWORD PTR [eax],ebp
  41c7b6:	bound  esi,QWORD PTR [ecx-0x11]
  41c7b9:	cmp    ch,BYTE PTR [edi-0x2643b968]
  41c7bf:	push   ds
  41c7c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c7c1:	jnp    0x41c74a
  41c7c3:	sub    BYTE PTR [edi-0x2c953d5c],0xf5
  41c7ca:	jns    0x41c807
  41c7cc:	xor    eax,0xa5103da0
  41c7d1:	xchg   edx,eax
  41c7d2:	rcr    DWORD PTR [esi],1
  41c7d4:	outs   dx,BYTE PTR ds:[esi]
  41c7d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c7d6:	inc    ebx
  41c7d7:	clc    
  41c7d8:	out    0x13,eax
  41c7da:	push   esi
  41c7db:	cli    
  41c7dc:	popf   
  41c7dd:	test   eax,ecx
  41c7df:	cmp    DWORD PTR [edx-0x5f],ebx
  41c7e2:	fld    st(6)
  41c7e4:	jmp    0x41c7d6
  41c7e6:	into   
  41c7e7:	mov    cl,0x3d
  41c7e9:	imul   eax,DWORD PTR [ebp+0x515d7895],0x2d74262d
  41c7f3:	ret    0xa84c
  41c7f6:	sub    al,0x6f
  41c7f8:	iret   
  41c7f9:	sbb    edi,DWORD PTR [ebx-0x5b]
  41c7fc:	push   ss
  41c7fd:	jae    0x41c86b
  41c7ff:	imul   esi,DWORD PTR [eax],0x65
  41c802:	sub    BYTE PTR [ebp+0x46f1e7e0],ch
  41c808:	mov    esp,0x2883d2af
  41c80d:	imul   BYTE PTR [ecx]
  41c80f:	lds    esp,FWORD PTR [edx]
  41c811:	je     0x41c873
  41c813:	out    dx,al
  41c814:	je     0x41c834
  41c816:	(bad)  
  41c817:	fadd   st(4),st
  41c819:	inc    ebx
  41c81a:	dec    edi
  41c81b:	ins    DWORD PTR es:[edi],dx
  41c81c:	add    eax,0xa00d2058
  41c821:	and    DWORD PTR [ecx+eax*8+0x16df9708],esi
  41c828:	sbb    BYTE PTR [eax+0x1e],cl
  41c82b:	popf   
  41c82c:	push   ds
  41c82d:	adc    al,0x92
  41c82f:	retf   0xe5d3
  41c832:	scas   eax,DWORD PTR es:[edi]
  41c833:	mov    cs,edi
  41c835:	xchg   esi,eax
  41c836:	pop    ebx
  41c837:	jne    0x41c87f
  41c839:	mov    BYTE PTR [ecx+0x310bd0fb],cl
  41c83f:	call   0x134963c3
  41c844:	dec    edx
  41c845:	pop    ss
  41c846:	fisubr DWORD PTR [edi+0x3a16a70]
  41c84c:	add    esi,DWORD PTR [ebp+ecx*4+0x58756195]
  41c853:	(bad)  
  41c854:	mov    edi,gs
  41c856:	mov    gs,WORD PTR [ecx-0x27]
  41c859:	and    BYTE PTR [edx+0x20],0xf
  41c85d:	addr16 jmp 0x2bd397b0
  41c863:	xlat   BYTE PTR ds:[ebx]
  41c864:	inc    esp
  41c865:	inc    esi
  41c866:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c867:	je     0x41c8e0
  41c869:	jns    0x41c88f
  41c86b:	pop    ebx
  41c86c:	push   0x7e8af33
  41c871:	pop    ss
  41c872:	stos   DWORD PTR es:[edi],eax
  41c873:	mov    ecx,0x166098ee
  41c878:	in     al,0x13
  41c87a:	push   edx
  41c87b:	in     eax,dx
  41c87c:	out    dx,eax
  41c87d:	and    esp,DWORD PTR [edi]
  41c87f:	xor    bh,bh
  41c881:	ins    DWORD PTR es:[edi],dx
  41c882:	add    esp,DWORD PTR [ebx+0xf]
  41c885:	outs   dx,BYTE PTR ds:[esi]
  41c886:	fs jmp 0x41c84c
  41c889:	cmp    eax,DWORD PTR [ebp+0x79]
  41c88c:	and    BYTE PTR [edx+0x71065f02],ah
  41c892:	mov    ebx,0x3594dc14
  41c897:	fstp   DWORD PTR [eax+0x1f08c8da]
  41c89d:	jmp    0x1b36:0x3ba69598
  41c8a4:	iret   
  41c8a5:	push   ebx
  41c8a6:	addr16 aas 
  41c8a8:	retf   0xafdf
  41c8ab:	inc    ebx
  41c8ac:	(bad)  
  41c8ad:	out    0x7a,al
  41c8af:	inc    ecx
  41c8b0:	fstp   DWORD PTR [edx+0x200d62fc]
  41c8b6:	sub    eax,0xf9fa42ea
  41c8bb:	mov    bl,0xcd
  41c8bd:	inc    esp
  41c8be:	imul   esi,DWORD PTR [esi+0x9961426],0x69
  41c8c5:	jb     0x41c863
  41c8c7:	popa   
  41c8c8:	inc    ecx
  41c8c9:	int    0xbe
  41c8cb:	push   cs
  41c8cc:	push   esi
  41c8cd:	pop    ss
  41c8ce:	mov    esp,0x5dbc809b
  41c8d3:	xchg   ecx,eax
  41c8d4:	shl    dl,cl
  41c8d6:	outs   dx,DWORD PTR ds:[esi]
  41c8d7:	(bad)  
  41c8d8:	fcom   QWORD PTR [ecx-0x41b27de]
  41c8de:	daa    
  41c8df:	maxps  xmm6,xmm7
  41c8e2:	or     eax,0xd5bb7ecf
  41c8e7:	leave  
  41c8e8:	rcr    eax,cl
  41c8ea:	sbb    ah,BYTE PTR [eax]
  41c8ec:	mov    bl,0x2d
  41c8ee:	pop    ebx
  41c8ef:	bound  esi,QWORD PTR [ebx]
  41c8f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c8f2:	nop
  41c8f3:	mov    dh,BYTE PTR ds:0x945f7050
  41c8f9:	or     BYTE PTR [eax+0x5c],cl
  41c8fc:	aad    0xde
  41c8fe:	adc    eax,0xc8325eb3
  41c903:	sahf   
  41c904:	dec    edx
  41c905:	inc    edx
  41c906:	and    dh,BYTE PTR [edx+0x17]
  41c909:	(bad)  
  41c90a:	pushf  
  41c90b:	add    dh,BYTE PTR [edx-0x31]
  41c90e:	sub    al,0x71
  41c910:	sbb    al,0xa5
  41c912:	sti    
  41c913:	mov    eax,ds:0xd7c12e63
  41c918:	xchg   ebx,eax
  41c919:	div    ebp
  41c91b:	loope  0x41c8c9
  41c91d:	imul   ebx,DWORD PTR [eax],0x9315e91d
  41c923:	cmp    DWORD PTR [edx-0x49],eax
  41c926:	(bad)  
  41c927:	jb     0x41c8b2
  41c929:	cs out 0xf8,al
  41c92c:	(bad)  [ecx]
  41c92e:	add    bh,BYTE PTR [ecx+0x1bd834b9]
  41c934:	std    
  41c935:	ret    
  41c936:	mov    ebp,0x9fcdb9cf
  41c93b:	mov    bh,0x37
  41c93d:	aas    
  41c93e:	jge    0x41c8ec
  41c940:	jo     0x41c945
  41c942:	inc    edx
  41c943:	push   ebp
  41c944:	in     al,dx
  41c945:	outs   dx,DWORD PTR ds:[esi]
  41c946:	nop
  41c947:	inc    edi
  41c948:	cmp    edi,DWORD PTR [ebx-0x774aa198]
  41c94e:	xchg   edi,eax
  41c94f:	test   eax,0x9731a3e0
  41c954:	not    DWORD PTR [edi]
  41c956:	cmp    al,0x28
  41c958:	jge    0x41c932
  41c95a:	mov    ss,WORD PTR [ecx+0x69c5a55b]
  41c960:	xchg   ecx,eax
  41c961:	mov    ah,bh
  41c963:	test   al,0x94
  41c965:	sbb    BYTE PTR [esi+0x35],cl
  41c968:	rcl    DWORD PTR [ecx],cl
  41c96a:	ds ds js 0x41c991
  41c96e:	xor    eax,0xab8bd22b
  41c973:	adc    bl,0xae
  41c976:	std    
  41c977:	xor    eax,0x659a929e
  41c97c:	(bad)  
  41c97d:	js     0x41c963
  41c97f:	hlt    
  41c980:	mov    edi,0x1d63f614
  41c985:	lahf   
  41c986:	inc    ebx
  41c987:	dec    edi
  41c988:	cmp    eax,0x521ed57f
  41c98d:	inc    esi
  41c98e:	and    bl,ch
  41c990:	fs or  dl,bh
  41c993:	arpl   WORD PTR [ebp+0x27],sp
  41c996:	ficomp DWORD PTR [ebx+0x6e8e312c]
  41c99c:	cmp    DWORD PTR [ecx+ebx*4],edi
  41c99f:	jmp    0x18e7e0ec
  41c9a4:	leave  
  41c9a5:	or     DWORD PTR [ebp+0x5152acd9],ebx
  41c9ab:	cmp    BYTE PTR [edi+0x7fe8b58f],bl
  41c9b1:	retf   
  41c9b2:	lock adc BYTE PTR [eax-0xf],dh
  41c9b6:	jo     0x41c985
  41c9b8:	xchg   ecx,eax
  41c9b9:	nop
  41c9ba:	mov    edi,0x73209e52
  41c9bf:	retf   
  41c9c0:	repz cmp ebp,0xe
  41c9c4:	xchg   ebx,eax
  41c9c5:	jmp    0xccb7:0x4a29
  41c9cb:	int3   
  41c9cc:	bound  edx,QWORD PTR [ecx-0x3e]
  41c9cf:	pop    ecx
  41c9d0:	xchg   ebp,eax
  41c9d1:	xchg   ebx,eax
  41c9d2:	inc    esi
  41c9d3:	sub    eax,0x35ebd6dc
  41c9d8:	outs   dx,BYTE PTR ds:[esi]
  41c9d9:	shr    BYTE PTR [ebp+0x6],0x2c
  41c9dd:	jl     0x8a581de2
  41c9e3:	cmp    edx,esi
  41c9e5:	test   BYTE PTR [ecx+0xbd31671],dl
  41c9eb:	into   
  41c9ec:	cmc    
  41c9ed:	adc    al,0x22
  41c9ef:	paddsw mm6,QWORD PTR [esi-0xa3d0cc3]
  41c9f6:	ss popa 
  41c9f8:	rcl    DWORD PTR [edi],cl
  41c9fa:	push   ebx
  41c9fb:	adc    edi,DWORD PTR [edx-0x1f]
  41c9fe:	sub    BYTE PTR [ebx-0x43],dl
  41ca01:	(bad)  [eax-0x66404421]
  41ca07:	loope  0x41c9d7
  41ca09:	sub    al,0xbc
  41ca0b:	stos   DWORD PTR es:[edi],eax
  41ca0c:	(bad)  
  41ca0d:	jae    0x41ca31
  41ca0f:	push   0x4e8e173
  41ca14:	or     ch,BYTE PTR [ecx-0x223c37c4]
  41ca1a:	inc    esp
  41ca1b:	or     al,0xd3
  41ca1d:	push   es
  41ca1e:	mov    cl,0x19
  41ca20:	jl     0x41ca1a
  41ca22:	ja     0x41ca33
  41ca24:	fbld   TBYTE PTR [ebx+0x74a542a3]
  41ca2a:	push   es
  41ca2b:	jnp    0x41c9cb
  41ca2d:	ror    esi,cl
  41ca2f:	nop
  41ca30:	lea    edi,[esi+0x72bc2a32]
  41ca36:	inc    esp
  41ca37:	sub    BYTE PTR [esi+0x17615118],bh
  41ca3d:	xchg   esp,eax
  41ca3e:	jecxz  0x41ca66
  41ca40:	inc    ebx
  41ca41:	in     eax,dx
  41ca42:	icebp  
  41ca43:	or     BYTE PTR [ecx-0x41],al
  41ca46:	aas    
  41ca47:	and    edx,esp
  41ca49:	clc    
  41ca4a:	jnp    0x41cac4
  41ca4c:	pushf  
  41ca4d:	stos   BYTE PTR es:[edi],al
  41ca4e:	jle    0x41c9f7
  41ca50:	pushf  
  41ca51:	outs   dx,DWORD PTR ds:[esi]
  41ca52:	cmp    BYTE PTR [edi+ebp*1],0x8a
  41ca56:	ja     0x41ca08
  41ca58:	out    dx,eax
  41ca59:	shl    DWORD PTR [ebp+esi*8+0x4a],0x1f
  41ca5e:	push   eax
  41ca5f:	mov    bl,0xe5
  41ca61:	lods   al,BYTE PTR ds:[esi]
  41ca62:	cmp    ebp,DWORD PTR [eax+0xd]
  41ca65:	push   es
  41ca66:	and    eax,0xac66feaa
  41ca6b:	cwde   
  41ca6c:	fbstp  TBYTE PTR [edx+0x6e]
  41ca6f:	or     DWORD PTR ds:0x21cf2317,ebx
  41ca75:	or     DWORD PTR [edx+0x70310e92],ebx
  41ca7b:	xchg   edx,eax
  41ca7c:	inc    eax
  41ca7d:	inc    ecx
  41ca7e:	cmc    
  41ca7f:	jl     0x41ca12
  41ca81:	jp     0x41ca61
  41ca83:	sub    ah,BYTE PTR [ebp-0x74]
  41ca86:	dec    ecx
  41ca87:	and    esi,DWORD PTR [edx]
  41ca89:	sub    ebp,esi
  41ca8b:	pop    edi
  41ca8c:	scas   eax,DWORD PTR es:[edi]
  41ca8d:	inc    edi
  41ca8e:	out    0x5b,al
  41ca90:	cmp    eax,esi
  41ca92:	sar    DWORD PTR [ebx-0x7f8ca142],0x17
  41ca99:	aam    0x9e
  41ca9b:	call   0x10c468fd
  41caa0:	call   0xa6b2:0xfd13e65
  41caa7:	gs ds jl 0x41ca9f
  41caab:	pushf  
  41caac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41caad:	jbe    0x41cab3
  41caaf:	cmp    ah,bl
  41cab1:	xchg   BYTE PTR [edi+0x45e61eb5],ch
  41cab7:	fstp   st(7)
  41cab9:	in     al,dx
  41caba:	push   esp
  41cabb:	sub    dl,al
  41cabd:	xchg   ecx,eax
  41cabe:	repz mov eax,0x64bcf76f
  41cac4:	sub    al,0xa5
  41cac6:	pop    esp
  41cac7:	jmp    0x4b1aa2be
  41cacc:	xor    eax,0x21936b65
  41cad1:	not    BYTE PTR [edx]
  41cad3:	stos   BYTE PTR es:[edi],al
  41cad4:	cmp    BYTE PTR [eax+0x4f],dl
  41cad7:	bound  esp,QWORD PTR ds:0xacc8
  41cadc:	leave  
  41cadd:	repz mov dl,0x68
  41cae0:	fbld   TBYTE PTR [edx]
  41cae2:	je     0x41cac1
  41cae4:	dec    ebp
  41cae5:	lahf   
  41cae6:	adc    edi,0x2d8115d1
  41caec:	sub    BYTE PTR [ecx+edx*8-0xf],dh
  41caf0:	mov    edi,0x784ff6df
  41caf5:	lea    edi,ss:[edx+0x7d85afa7]
  41cafc:	xchg   edx,ebx
  41cafe:	add    al,BYTE PTR [ebx-0x8]
  41cb01:	mov    al,ds:0xfabb3403
  41cb06:	loope  0x41cb03
  41cb08:	mov    eax,0x42f8ed80
  41cb0d:	push   es
  41cb0e:	inc    edi
  41cb0f:	inc    ebx
  41cb10:	data16 jbe 0x41cadd
  41cb13:	fwait
  41cb14:	out    dx,eax
  41cb15:	xor    eax,0x31b3078b
  41cb1a:	test   BYTE PTR [ecx-0x45],cl
  41cb1d:	hlt    
  41cb1e:	outs   dx,DWORD PTR ds:[esi]
  41cb1f:	mov    dh,0xbe
  41cb21:	loop   0x41cb93
  41cb23:	retf   0xa566
  41cb26:	js     0x41cb8a
  41cb28:	pop    es
  41cb29:	mov    ah,0x83
  41cb2b:	mov    BYTE PTR [ecx-0x55],cl
  41cb2e:	das    
  41cb2f:	ss pop eax
  41cb31:	adc    BYTE PTR [edi-0x6f],0xba
  41cb35:	retf   0xdd4a
  41cb38:	outs   dx,BYTE PTR ds:[esi]
  41cb39:	rcl    DWORD PTR [edx],cl
  41cb3b:	fwait
  41cb3c:	push   ecx
  41cb3d:	imul   esp,esp,0x27
  41cb40:	mov    ds:0x19bcb4fe,al
  41cb45:	dec    esi
  41cb46:	lods   al,BYTE PTR ds:[esi]
  41cb47:	pushf  
  41cb48:	nop
  41cb49:	fscale 
  41cb4b:	fnstenv [ebp+0x3bca552d]
  41cb51:	dec    ecx
  41cb52:	retf   
  41cb53:	shl    DWORD PTR [edx+0x492067fe],1
  41cb59:	push   edi
  41cb5a:	xchg   BYTE PTR [edi],al
  41cb5c:	adc    DWORD PTR es:[edi-0x3c85f06d],esp
  41cb63:	mov    dl,0x53
  41cb65:	push   0xfffffffe
  41cb67:	mov    esp,0x2a69d9b8
  41cb6c:	sar    DWORD PTR [esi],cl
  41cb6e:	(bad)  
  41cb6f:	out    0x88,al
  41cb71:	jle    0x41cb67
  41cb73:	pop    eax
  41cb74:	push   edi
  41cb75:	inc    esp
  41cb76:	adc    ah,BYTE PTR [ebx]
  41cb78:	bound  eax,QWORD PTR [ebx-0x74]
  41cb7b:	test   BYTE PTR [edi],ch
  41cb7d:	pop    esi
  41cb7f:	in     al,dx
  41cb80:	imul   ecx,esi,0xffffff88
  41cb83:	sbb    eax,0x43f1c4b1
  41cb88:	or     ecx,0x1b
  41cb8b:	and    BYTE PTR [ebp-0x2989f54a],0x5d
  41cb92:	push   eax
  41cb93:	jecxz  0x41cb20
  41cb95:	inc    ebx
  41cb96:	clc    
  41cb97:	sbb    DWORD PTR [edi],ebx
  41cb99:	xor    BYTE PTR [ecx],dh
  41cb9b:	dec    eax
  41cb9c:	sbb    ah,BYTE PTR [edi-0x1fd22bc7]
  41cba2:	dec    eax
  41cba3:	mov    cl,0x9f
  41cba5:	fisttp DWORD PTR [eax+0x478e075f]
  41cbab:	mov    ebp,0xea573987
  41cbb0:	sbb    al,0xd9
  41cbb2:	enter  0x2de6,0x7e
  41cbb6:	xor    al,0x59
  41cbb8:	cld    
  41cbb9:	mov    eax,ds:0x1aa47b0e
  41cbbe:	push   edx
  41cbbf:	cmp    DWORD PTR [esi-0x6725d6d3],edi
  41cbc5:	mov    dl,0x54
  41cbc7:	xchg   ebp,eax
  41cbc8:	adc    ecx,DWORD PTR [edx+0x677b33dd]
  41cbce:	ret    
  41cbcf:	pop    eax
  41cbd0:	rcl    BYTE PTR [ecx+eax*1+0xdfd4840],cl
  41cbd7:	rol    DWORD PTR [eax+0x58],1
  41cbda:	pop    ebp
  41cbdb:	pop    edx
  41cbdc:	inc    edi
  41cbdd:	mov    ch,BYTE PTR [esp+esi*2+0x5ced6cef]
  41cbe4:	or     ebx,edx
  41cbe6:	lods   al,BYTE PTR ds:[esi]
  41cbe7:	sbb    al,0x1d
  41cbe9:	push   0x41
  41cbeb:	out    0x60,eax
  41cbed:	sub    ebp,DWORD PTR [eax-0x693f181d]
  41cbf3:	out    0x78,eax
  41cbf5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cbf6:	ss adc ah,al
  41cbf9:	push   eax
  41cbfa:	(bad)  
  41cbfb:	scas   eax,DWORD PTR es:[edi]
  41cbfc:	gs dec ebp
  41cbfe:	shl    DWORD PTR [ebp+0x6309475],1
  41cc04:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cc05:	push   edx
  41cc06:	xchg   edi,eax
  41cc07:	mov    fs,WORD PTR [ecx]
  41cc09:	js     0x41cbac
  41cc0b:	das    
  41cc0c:	sub    edx,DWORD PTR [eax+eiz*1+0x14621bac]
  41cc13:	sub    edx,DWORD PTR [edi-0x26]
  41cc16:	repz or al,0xce
  41cc19:	fcomi  st,st(6)
  41cc1b:	add    DWORD PTR [ebx+0x380b730c],edx
  41cc21:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cc22:	neg    ebp
  41cc24:	rcr    DWORD PTR ds:0x6843e916,1
  41cc2a:	xchg   BYTE PTR [esi-0x8],dh
  41cc2d:	xchg   ebx,eax
  41cc2e:	stos   DWORD PTR es:[edi],eax
  41cc2f:	and    al,0xb4
  41cc31:	push   esi
  41cc32:	idiv   BYTE PTR [edx+0x1f]
  41cc35:	std    
  41cc36:	sub    al,0x79
  41cc38:	aad    0xb9
  41cc3a:	mov    cl,0xe2
  41cc3c:	nop
  41cc3d:	rcr    DWORD PTR [eax+0x60fcaff9],1
  41cc43:	xor    BYTE PTR [esi+eax*4],dh
  41cc46:	inc    edx
  41cc47:	ret    0x7013
  41cc4a:	scas   al,BYTE PTR es:[edi]
  41cc4b:	xor    edi,DWORD PTR [edx]
  41cc4d:	aam    0xa6
  41cc4f:	push   eax
  41cc50:	out    0xda,eax
  41cc52:	aam    0x2b
  41cc54:	repz mov eax,0x3cca7168
  41cc5a:	out    0x3b,eax
  41cc5c:	data16 icebp 
  41cc5e:	cmp    al,0xc2
  41cc60:	jmp    0x572:0x5751babd
  41cc67:	or     al,0x77
  41cc69:	mov    ah,0xaa
  41cc6b:	mov    edi,0x582872e4
  41cc70:	and    DWORD PTR [esi-0x3d5dca28],ecx
  41cc76:	pop    ds
  41cc77:	xchg   esi,eax
  41cc78:	jl     0x41cc93
  41cc7a:	add    BYTE PTR [esi-0x11],cl
  41cc7d:	fcom   DWORD PTR [edi+ebp*2-0x61]
  41cc81:	lods   al,BYTE PTR ds:[esi]
  41cc82:	scas   al,BYTE PTR es:[edi]
  41cc83:	fidiv  DWORD PTR [eax+0x35]
  41cc86:	test   BYTE PTR [edi],dh
  41cc88:	cmp    eax,ebx
  41cc8a:	mov    bl,0x71
  41cc8c:	sbb    al,BYTE PTR [esp+edx*1]
  41cc8f:	dec    eax
  41cc90:	fdivr  QWORD PTR [ebx+0x57722b1d]
  41cc96:	popa   
  41cc97:	dec    edi
  41cc98:	cdq    
  41cc99:	fcom   DWORD PTR [ecx-0x2b]
  41cc9c:	outs   dx,BYTE PTR ds:[esi]
  41cc9d:	mov    al,BYTE PTR [esi-0x12e2802a]
  41cca3:	xchg   ecx,eax
  41cca4:	inc    esi
  41cca5:	into   
  41cca6:	xchg   esp,eax
  41cca7:	add    ch,dl
  41cca9:	shl    BYTE PTR [ecx-0x2a],0xc6
  41ccad:	imul   ebx,DWORD PTR ds:0x7c01080f,0xfffffffd
  41ccb4:	aas    
  41ccb5:	inc    ebx
  41ccb6:	and    eax,0x6d0e577f
  41ccbb:	(bad)  
  41ccbc:	mov    esp,0xf1f3e1a7
  41ccc1:	add    BYTE PTR [edx],0xaf
  41ccc4:	push   esi
  41ccc5:	add    ebx,DWORD PTR [ecx-0x103d41bc]
  41cccb:	xor    eax,0xef66a625
  41ccd0:	aaa    
  41ccd1:	sbb    al,0x84
  41ccd3:	hlt    
  41ccd4:	stos   BYTE PTR es:[edi],al
  41ccd5:	push   ebx
  41ccd6:	inc    eax
  41ccd7:	outs   dx,DWORD PTR ds:[esi]
  41ccd8:	inc    esp
  41ccd9:	shl    DWORD PTR [eax+0x6bd8e15c],cl
  41ccdf:	int3   
  41cce0:	sub    DWORD PTR [ebp-0x4eb09e3f],ecx
  41cce6:	daa    
  41cce7:	repnz stos DWORD PTR es:[edi],eax
  41cce9:	xchg   edx,eax
  41ccea:	lods   al,BYTE PTR ds:[esi]
  41cceb:	repz push edx
  41cced:	(bad)  
  41ccee:	xor    eax,0xf0998d47
  41ccf3:	cmp    al,0x33
  41ccf5:	int    0xde
  41ccf7:	lea    eax,[esi]
  41ccf9:	pop    ebx
  41ccfa:	push   ds
  41ccfb:	cld    
  41ccfc:	adc    cl,0xfa
  41ccff:	mov    esp,0x38221029
  41cd04:	ret    0xeed9
  41cd07:	dec    esp
  41cd08:	cmp    BYTE PTR [esi-0xa],bh
  41cd0b:	fucomp st(4)
  41cd0d:	pop    ss
  41cd0e:	mov    bl,0x73
  41cd10:	jb     0x41cd17
  41cd12:	xchg   ebp,eax
  41cd13:	loope  0x41cd3d
  41cd15:	sbb    BYTE PTR ds:0xa9ef6bec,dh
  41cd1b:	mov    bh,0xc4
  41cd1d:	loope  0x41ccf3
  41cd1f:	xchg   DWORD PTR [ebx+0xb],ecx
  41cd22:	mov    edx,0xd78803
  41cd27:	daa    
  41cd28:	test   al,0x3b
  41cd2a:	inc    eax
  41cd2b:	ins    DWORD PTR es:[edi],dx
  41cd2c:	cld    
  41cd2d:	jns    0x41cce8
  41cd2f:	cs out dx,al
  41cd31:	mov    edx,0x4beb3c8c
  41cd36:	mov    ch,0x0
  41cd38:	inc    ebp
  41cd39:	fsub   QWORD PTR [eax-0x26]
  41cd3c:	test   al,0xdf
  41cd3e:	test   BYTE PTR [esi+0x1f],al
  41cd41:	jle    0x41cdb4
  41cd43:	mov    ebx,ecx
  41cd45:	pop    edx
  41cd46:	les    ebx,FWORD PTR [edi+0x190f3f23]
  41cd4c:	mov    bl,0xf0
  41cd4e:	jmp    0xaefd:0x47b8df54
  41cd55:	or     BYTE PTR [eax-0xe5a37fb],bl
  41cd5b:	push   edx
  41cd5c:	rol    DWORD PTR [esi],1
  41cd5e:	xor    esi,DWORD PTR [edi-0x54]
  41cd61:	xchg   ebp,eax
  41cd62:	dec    edi
  41cd63:	and    eax,0x5ef20089
  41cd68:	jge    0x41cdd6
  41cd6a:	xor    al,0x5c
  41cd6c:	xor    DWORD PTR [esi+0xbf79f91],0x75f1be57
  41cd76:	rcl    DWORD PTR [esi+0xd],cl
  41cd79:	fsubr  QWORD PTR [eax+0x60]
  41cd7c:	dec    edi
  41cd7d:	push   0x6b0f814e
  41cd82:	push   ds
  41cd83:	icebp  
  41cd84:	stos   BYTE PTR es:[edi],al
  41cd85:	xchg   edi,eax
  41cd86:	pusha  
  41cd87:	call   0xacc0:0xb94cb944
  41cd8e:	or     edx,DWORD PTR [edx+0x41c64590]
  41cd94:	jl     0x41cde1
  41cd96:	clc    
  41cd97:	call   0x1b8b:0xcb162f9d
  41cd9e:	adc    bl,al
  41cda0:	in     eax,dx
  41cda1:	and    eax,0x414abe31
  41cda6:	mov    al,BYTE PTR [ebp+0x5d]
  41cda9:	loope  0x41ce28
  41cdab:	sbb    dh,cl
  41cdad:	mov    al,ds:0x6b066fdd
  41cdb2:	and    esi,edx
  41cdb4:	jp     0x41cd72
  41cdb6:	sbb    al,0x75
  41cdb8:	fcomp  st(6)
  41cdba:	mov    eax,0x454b942d
  41cdbf:	fnstcw WORD PTR [ebx]
  41cdc1:	stc    
  41cdc2:	pop    es
  41cdc3:	jge    0x41cdc7
  41cdc5:	or     eax,0xe7de226c
  41cdca:	dec    esp
  41cdcb:	and    al,0x6d
  41cdcd:	retf   0xe5c8
  41cdd0:	ds and cl,ch
  41cdd3:	mov    esp,0xff3f1804
  41cdd8:	jb     0x41cd99
  41cdda:	enter  0xf866,0x6e
  41cdde:	jns    0x41cd7a
  41cde0:	dec    ecx
  41cde1:	dec    ecx
  41cde2:	xchg   edi,eax
  41cde3:	call   0x30d81296
  41cde8:	mov    edi,0x4664a20a
  41cded:	stos   DWORD PTR es:[edi],eax
  41cdee:	test   BYTE PTR [ecx],ah
  41cdf0:	adc    BYTE PTR gs:[edx+0x9],ah
  41cdf4:	xor    al,0x6a
  41cdf6:	(bad)  
  41cdf7:	lods   al,BYTE PTR ds:[esi]
  41cdf8:	ficom  DWORD PTR ds:0x421fbf49
  41cdfe:	out    0x1,al
  41ce00:	jo     0x41cde5
  41ce02:	fwait
  41ce03:	pop    esp
  41ce04:	pop    ebp
  41ce05:	adc    bh,BYTE PTR [edx]
  41ce07:	jb     0x41ce2a
  41ce09:	in     al,dx
  41ce0a:	mov    ds,WORD PTR [edx+esi*4]
  41ce0d:	and    al,0xe2
  41ce0f:	test   DWORD PTR [edx],0x66a36361
  41ce15:	aas    
  41ce16:	loopne 0x41ce6f
  41ce18:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ce19:	add    DWORD PTR [ecx-0x2c],esi
  41ce1c:	mov    ah,0xb1
  41ce1e:	in     al,dx
  41ce1f:	mov    ds:0xe1b00cce,al
  41ce24:	imul   edx,DWORD PTR [esi+0x70],0xb2d6e791
  41ce2b:	enter  0x5813,0xa9
  41ce2f:	gs add al,0x6a
  41ce32:	test   eax,0x2cfffb35
  41ce37:	xor    dl,BYTE PTR [esp+eax*2]
  41ce3a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ce3b:	cli    
  41ce3c:	or     bh,BYTE PTR [eax+0x4db2ffad]
  41ce42:	rcr    DWORD PTR [edi+0x322779cc],0xf0
  41ce49:	sbb    dl,dl
  41ce4b:	push   esp
  41ce4c:	mov    DWORD PTR [edx-0x17],ebx
  41ce4f:	push   esi
  41ce50:	push   ds
  41ce51:	retf   0x9642
  41ce54:	out    0x55,eax
  41ce56:	rol    BYTE PTR [ebx+0x348c3a66],1
  41ce5c:	int3   
  41ce5d:	pop    ds
  41ce5e:	add    BYTE PTR [edi-0x56],bl
  41ce61:	dec    ebx
  41ce62:	sub    edi,edi
  41ce64:	(bad)  
  41ce65:	jae    0x41ce68
  41ce67:	or     dl,dh
  41ce69:	setns  BYTE PTR [ecx+0x65]
  41ce6d:	retf   0x97d7
  41ce70:	cmp    al,0xc6
  41ce72:	stc    
  41ce73:	dec    sp
  41ce75:	test   al,0x47
  41ce77:	dec    esi
  41ce78:	jmp    0x41ce71
  41ce7a:	adc    BYTE PTR [ecx],dl
  41ce7c:	mov    ecx,0x6790f9b7
  41ce81:	inc    eax
  41ce82:	ja     0x41cef5
  41ce84:	adc    cl,BYTE PTR [edi-0x5e80e7b5]
  41ce8a:	pop    esp
  41ce8b:	pop    es
  41ce8c:	fdivr  DWORD PTR [ecx]
  41ce8e:	dec    esi
  41ce8f:	call   0x48c6:0xe37ca650
  41ce96:	inc    edx
  41ce97:	lahf   
  41ce98:	sbb    al,BYTE PTR [edi-0x41]
  41ce9b:	xchg   edi,eax
  41ce9c:	adc    al,0xa1
  41ce9e:	and    BYTE PTR [eax],bh
  41cea0:	push   ebx
  41cea1:	mov    ecx,0x1e18008d
  41cea6:	(bad)  
  41cea7:	fs adc bh,dh
  41ceaa:	aad    0x18
  41ceac:	mov    bh,0x99
  41ceae:	inc    eax
  41ceaf:	fldlg2 
  41ceb1:	dec    ebx
  41ceb2:	xchg   BYTE PTR [ecx+0x9322e48],ah
  41ceb8:	stc    
  41ceb9:	mov    ds:0xbd9c5d19,eax
  41cebe:	shl    BYTE PTR [ecx+ecx*2+0x2153056a],0x23
  41cec6:	jo     0x41ce95
  41cec8:	(bad)  
  41cec9:	ror    ebp,1
  41cecb:	mov    dh,0x82
  41cecd:	imul   ebx,DWORD PTR [ebx+0x8],0x23
  41ced1:	test   DWORD PTR [eax+0x2c2b85bf],edi
  41ced7:	in     eax,0x39
  41ced9:	aaa    
  41ceda:	mov    ecx,0x1c5a6c45
  41cedf:	push   edi
  41cee0:	out    0x8c,eax
  41cee2:	inc    edx
  41cee3:	enter  0xe18e,0x7e
  41cee7:	mov    eax,ds:0xd14d429
  41ceec:	fnstcw WORD PTR [edx+0x11]
  41ceef:	mov    al,ds:0xf0608f31
  41cef4:	xor    esp,ecx
  41cef6:	js     0x41cec6
  41cef8:	add    edi,DWORD PTR [ebp-0x7812ee49]
  41cefe:	or     bl,0x45
  41cf01:	dec    ebx
  41cf02:	(bad)  
  41cf03:	in     al,0x39
  41cf05:	push   esi
  41cf06:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cf07:	jp     0x41cecd
  41cf09:	in     eax,0xf4
  41cf0b:	ret    0x1671
  41cf0e:	rcr    BYTE PTR [ecx+edi*8+0x3a],0x7c
  41cf13:	adc    BYTE PTR [eax+eax*4],cl
  41cf16:	test   DWORD PTR [eax+0x24],eax
  41cf19:	xchg   ebp,eax
  41cf1a:	imul   ecx,DWORD PTR [ebp+0x22947d3b],0x20
  41cf21:	aaa    
  41cf22:	mov    al,ds:0x9942b226
  41cf27:	(bad)  
  41cf28:	mov    ebp,0x24ad79
  41cf2d:	xchg   edi,eax
  41cf2e:	pop    eax
  41cf2f:	loope  0x41ced4
  41cf31:	and    DWORD PTR [ecx+0x525cad14],0xd0ffd5df
  41cf3b:	xor    ch,BYTE PTR [ebx+0x62]
  41cf3e:	inc    eax
  41cf3f:	fld    QWORD PTR [ebp+ebx*4+0x75]
  41cf43:	ficom  WORD PTR [edx]
  41cf45:	es push ebp
  41cf47:	dec    ebx
  41cf48:	ret    
  41cf49:	stos   DWORD PTR es:[edi],eax
  41cf4a:	adc    al,0x7d
  41cf4c:	pop    esi
  41cf4d:	jmp    0x5abb1d8
  41cf52:	sub    esp,DWORD PTR ds:0x2e6529c7
  41cf58:	pop    es
  41cf59:	loop   0x41cee3
  41cf5b:	jbe    0x41cef7
  41cf5d:	enter  0x1d54,0x1
  41cf61:	add    dl,BYTE PTR cs:[ebx]
  41cf64:	cs pop esi
  41cf66:	push   DWORD PTR [ebx]
  41cf68:	stos   DWORD PTR es:[edi],eax
  41cf69:	pop    ebx
  41cf6a:	aas    
  41cf6b:	scas   eax,DWORD PTR es:[edi]
  41cf6c:	jmp    DWORD PTR [ebp+0x7c8cc978]
  41cf72:	or     eax,0x95e4965b
  41cf77:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cf78:	jo     0x41cfa7
  41cf7a:	xor    al,0xa1
  41cf7c:	xchg   BYTE PTR [edi+0x74],dl
  41cf7f:	cmp    al,BYTE PTR [edi-0x59e0d14e]
  41cf85:	int    0x14
  41cf87:	add    eax,0xf12866a0
  41cf8c:	imul   esi,edx,0xfffffff8
  41cf8f:	cmp    eax,eax
  41cf91:	stc    
  41cf92:	mov    ecx,0xb7e0caf3
  41cf97:	jbe    0x41cffb
  41cf99:	mov    ebx,0xb1ba01ea
  41cf9e:	clc    
  41cf9f:	js     0x41cfd1
  41cfa1:	adc    al,0x94
  41cfa3:	jnp    0x41cf79
  41cfa5:	pop    es
  41cfa6:	(bad)  
  41cfa7:	arpl   WORD PTR [ebx+0x20],dx
  41cfaa:	pop    ss
  41cfab:	push   0x5a
  41cfad:	jl     0x41cf4a
  41cfaf:	aad    0x87
  41cfb1:	pop    ecx
  41cfb2:	sub    ch,ah
  41cfb4:	(bad)  
  41cfb5:	or     DWORD PTR [edi+eiz*2],ecx
  41cfb8:	loopne 0x41cf6c
  41cfba:	aad    0x84
  41cfbc:	mov    bh,0x10
  41cfbe:	xor    al,0xe4
  41cfc0:	call   0xca:0xae3dbd4
  41cfc7:	rcl    BYTE PTR [ebp+0x6cd8b0fe],cl
  41cfcd:	shl    DWORD PTR [ecx],1
  41cfcf:	inc    ebx
  41cfd0:	pop    edi
  41cfd1:	mov    eax,ds:0xe5440825
  41cfd6:	xchg   esi,eax
  41cfd7:	int3   
  41cfd8:	aas    
  41cfd9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cfda:	addr16 push eax
  41cfdc:	push   ss
  41cfdd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cfde:	jno    0x41cfb5
  41cfe0:	jae    0x41cf98
  41cfe2:	and    bh,BYTE PTR [edi]
  41cfe4:	dec    ebx
  41cfe5:	pop    ds
  41cfe6:	xchg   ecx,eax
  41cfe7:	(bad)  
  41cfe8:	cmp    ebx,DWORD PTR [edi-0x65f845bb]
  41cfee:	jl     0x41cfa8
  41cff0:	mov    ecx,0x5b6b72f4
  41cff5:	push   ss
  41cff6:	jmp    FWORD PTR [esi-0x2cb4987c]
  41cffc:	enter  0xb75e,0x7c
  41d000:	mov    dh,0xa6
  41d002:	or     al,0x61
  41d004:	sub    DWORD PTR [edx+edx*1],0x55
  41d008:	mov    bl,0xe1
  41d00a:	icebp  
  41d00b:	das    
  41d00c:	sub    BYTE PTR [edi+0x64],bh
  41d00f:	stc    
  41d010:	es pop esp
  41d012:	sbb    edi,DWORD PTR [edx-0x1]
  41d015:	inc    esi
  41d016:	icebp  
  41d017:	ins    BYTE PTR es:[edi],dx
  41d018:	adc    eax,0xf781424
  41d01d:	inc    esp
  41d01e:	jp     0x41d04a
  41d020:	xchg   ebp,eax
  41d021:	inc    ebp
  41d022:	mov    BYTE PTR [esi+0x776084d9],ah
  41d028:	push   edx
  41d029:	mov    WORD PTR [edx*8-0x789359f9],gs
  41d030:	cmp    dl,BYTE PTR ds:0xc3dfa2e8
  41d036:	lods   eax,DWORD PTR es:[esi]
  41d038:	add    eax,eax
  41d03a:	jne    0x41cfe3
  41d03c:	imul   edx,DWORD PTR [ebp-0x4d],0x24
  41d040:	pop    es
  41d041:	shr    bh,cl
  41d043:	ret    
  41d044:	sbb    ch,BYTE PTR [edx]
  41d046:	icebp  
  41d047:	push   cs
  41d048:	pop    ds
  41d049:	cwde   
  41d04a:	push   es
  41d04b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d04c:	or     DWORD PTR [esi],esi
  41d04e:	aaa    
  41d04f:	xchg   edi,eax
  41d050:	mov    edx,0xe9e55f86
  41d055:	inc    ecx
  41d056:	add    BYTE PTR [edi-0x70],al
  41d059:	mov    bh,0x88
  41d05b:	in     eax,dx
  41d05c:	or     DWORD PTR [eax+0x54164ba0],ebx
  41d062:	in     eax,dx
  41d063:	ret    0x737c
  41d066:	test   BYTE PTR [edi-0x3e8f63b7],cl
  41d06c:	loopne 0x41d014
  41d06e:	mov    ds:0x7923f466,al
  41d073:	inc    eax
  41d074:	cmp    BYTE PTR [eax+eiz*8-0x1feb4d23],bl
  41d07b:	fs inc esi
  41d07d:	je     0x41d01a
  41d07f:	dec    eax
  41d080:	or     eax,0xf9e30313
  41d085:	sub    eax,0xbe6ae4bb
  41d08a:	jmp    0x4763:0x3bff125c
  41d091:	mov    cl,0x3d
  41d093:	mov    cl,0xc5
  41d095:	or     DWORD PTR [ecx],0x44b8d5bd
  41d09b:	sbb    bh,BYTE PTR [ebx+0x79]
  41d09e:	add    DWORD PTR [edx+0x6c9ed05d],esp
  41d0a4:	arpl   cx,di
  41d0a6:	fnstsw WORD PTR [eax+esi*4]
  41d0a9:	pop    ds
  41d0aa:	mov    ?,WORD PTR [esi-0x16]
  41d0ad:	xchg   ebp,eax
  41d0ae:	ins    DWORD PTR es:[edi],dx
  41d0af:	sar    edx,0x56
  41d0b2:	sbb    al,0xc5
  41d0b4:	jbe    0x41d06c
  41d0b6:	fwait
  41d0b7:	ss dec edi
  41d0b9:	out    dx,al
  41d0ba:	mov    DWORD PTR [ebp+0x4a],esp
  41d0bd:	jne    0x41d08c
  41d0bf:	test   eax,0xb48cf017
  41d0c4:	or     al,0xce
  41d0c6:	scas   eax,DWORD PTR es:[edi]
  41d0c7:	repz mov WORD PTR [ecx],gs
  41d0ca:	gs pop ebx
  41d0cc:	pop    edx
  41d0cd:	call   0xaced0117
  41d0d2:	dec    ebx
  41d0d4:	sub    esi,ebx
  41d0d6:	adc    al,0xcf
  41d0d8:	xor    al,0xc7
  41d0da:	xor    ebx,ecx
  41d0dc:	js     0x41d11a
  41d0de:	adc    DWORD PTR [ebx],0x93372ae8
  41d0e4:	sub    ecx,esp
  41d0e6:	add    bh,BYTE PTR [ebp+0x1f2d9ebe]
  41d0ec:	and    ebx,DWORD PTR [esi]
  41d0ee:	jp     0x41d12a
  41d0f0:	gs js  0x41d11c
  41d0f3:	cmp    BYTE PTR [ecx+0x44],dh
  41d0f6:	bndstx [ebx+0x4d02dca5],(bad)
  41d0fd:	ins    DWORD PTR es:[edi],dx
  41d0fe:	pop    ds
  41d0ff:	lods   al,BYTE PTR ds:[esi]
  41d100:	push   ebx
  41d101:	mov    ah,0xd8
  41d103:	ror    DWORD PTR [ecx+0x6d],0x40
  41d107:	addr16 in eax,0x11
  41d10a:	or     BYTE PTR [edx],cl
  41d10c:	dec    esi
  41d10d:	loope  0x41d145
  41d10f:	loop   0x41d096
  41d111:	hlt    
  41d112:	lods   eax,DWORD PTR ds:[esi]
  41d113:	dec    esp
  41d114:	xor    DWORD PTR [edx-0x65f958ed],edx
  41d11a:	jmp    0x5303:0xd70339c4
  41d121:	jnp    0x41d0ef
  41d123:	imul   esp,DWORD PTR [edx+0x69],0xc73d6015
  41d12a:	jb     0x41d123
  41d12c:	mov    al,0x38
  41d12e:	sbb    esi,ecx
  41d130:	cmp    esi,DWORD PTR [eax+0x3acebd4d]
  41d136:	sub    esp,DWORD PTR [edi-0x28418e21]
  41d13c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d13d:	les    edx,FWORD PTR [ebp+0x4877b56e]
  41d143:	call   0xcac3ecdc
  41d148:	cld    
  41d149:	sbb    al,0x2
  41d14b:	mov    eax,0x77b074a1
  41d150:	neg    DWORD PTR [eax+0xa]
  41d153:	in     eax,dx
  41d154:	pushf  
  41d155:	mov    eax,DWORD PTR [eax+0x49eca46f]
  41d15b:	jmp    0x41d165
  41d15d:	xchg   di,ax
  41d15f:	fisttp QWORD PTR [ecx+0x17]
  41d162:	jnp    0x41d182
  41d164:	jmp    0x7519:0x173cb613
  41d16b:	jl     0x41d162
  41d16d:	and    edi,esi
  41d16f:	in     al,0x4b
  41d171:	je     0x41d17d
  41d173:	retf   
  41d174:	adc    eax,edi
  41d176:	ds jmp 0x41d139
  41d179:	daa    
  41d17a:	mov    al,gs:0x80a0357f
  41d180:	sub    dh,BYTE PTR [ebx]
  41d182:	cmp    ch,BYTE PTR [edx+0x76]
  41d185:	(bad)  
  41d186:	(bad)  
  41d187:	ins    DWORD PTR es:[edi],dx
  41d188:	div    DWORD PTR [edi-0x26188369]
  41d18e:	mov    di,0xf04a
  41d192:	push   cs
  41d193:	fisttp WORD PTR [eax-0x41]
  41d196:	mul    DWORD PTR [edi+ebx*4]
  41d199:	fwait
  41d19a:	das    
  41d19b:	jns    0x41d129
  41d19d:	stc    
  41d19e:	fsub   DWORD PTR [edx+edi*2+0x755d4983]
  41d1a5:	dec    eax
  41d1a6:	mov    ebx,0x7c4a85c9
  41d1ab:	(bad)  
  41d1ad:	les    eax,FWORD PTR [esi+ecx*1+0x39049d35]
  41d1b4:	push   ss
  41d1b5:	fwait
  41d1b6:	(bad)  
  41d1b7:	daa    
  41d1b8:	cwde   
  41d1b9:	or     eax,0x222b89e8
  41d1be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d1bf:	fistp  DWORD PTR [edx+0x7d6d0de6]
  41d1c5:	push   cs
  41d1c6:	sahf   
  41d1c7:	ja     0x41d1b4
  41d1c9:	push   0xe55d6de7
  41d1ce:	pop    edx
  41d1cf:	repz fwait
  41d1d1:	aam    0xd4
  41d1d3:	jl     0x41d155
  41d1d5:	enter  0x688c,0x6e
  41d1d9:	jno    0x41d229
  41d1db:	shl    DWORD PTR [ebx],0x1f
  41d1de:	xor    dh,BYTE PTR [edi-0x44]
  41d1e1:	je     0x41d212
  41d1e3:	mov    ecx,DWORD PTR [edx]
  41d1e5:	cdq    
  41d1e6:	clc    
  41d1e7:	mov    bl,0x82
  41d1e9:	xor    eax,DWORD PTR [edi]
  41d1eb:	mov    al,ds:0xaa1ad04c
  41d1f0:	retf   0x594
  41d1f3:	xor    BYTE PTR [ebp-0x325f36f6],ch
  41d1f9:	int3   
  41d1fa:	jl     0x41d1dc
  41d1fc:	mov    eax,ds:0x77592a55
  41d201:	jg     0x41d21c
  41d203:	or     BYTE PTR [ebx+0x3f],al
  41d206:	mov    edx,0xe6e337c8
  41d20b:	test   ch,ch
  41d20d:	dec    dx
  41d20f:	jl     0x41d1a9
  41d211:	popf   
  41d212:	push   ebp
  41d213:	out    dx,al
  41d214:	cld    
  41d215:	shl    DWORD PTR [ebx],0x7c
  41d218:	jge    0x41d1fe
  41d21a:	ret    0xc751
  41d21d:	in     al,dx
  41d21e:	xor    BYTE PTR [ebp+0x34],0x28
  41d222:	ret    
  41d223:	pop    ecx
  41d224:	mov    dh,BYTE PTR [edi+eiz*2]
  41d227:	repnz mov al,ds:0xb1a74e9b
  41d22d:	pop    edi
  41d22e:	(bad)  
  41d22f:	sbb    cl,ah
  41d231:	cdq    
  41d232:	pop    ecx
  41d233:	fwait
  41d234:	out    dx,al
  41d235:	popa   
  41d236:	ss pop ss
  41d238:	mov    BYTE PTR [edx-0x6c6bf88],dh
  41d23e:	or     al,0xa6
  41d240:	sahf   
  41d241:	jmp    0xd583274f
  41d246:	mov    ch,BYTE PTR [eax-0x1]
  41d249:	push   ecx
  41d24a:	xlat   BYTE PTR gs:[ebx]
  41d24c:	(bad)  
  41d24d:	out    0x14,al
  41d24f:	(bad)  
  41d250:	inc    esp
  41d251:	fnstcw WORD PTR [esi-0x72a7f687]
  41d257:	adc    BYTE PTR [ebx+0x6ddf2222],cl
  41d25d:	in     al,dx
  41d25e:	popf   
  41d25f:	dec    esi
  41d260:	gs addr16 sbb bl,bh
  41d264:	inc    edx
  41d265:	push   edx
  41d266:	mov    esp,DWORD PTR [eax]
  41d268:	push   0x6f6b1891
  41d26d:	mov    eax,ds:0x90b387c0
  41d272:	cs repnz (bad) 
  41d275:	(bad)  
  41d277:	xor    BYTE PTR [eax-0x4516b3cc],ah
  41d27d:	(bad)
  41d280:	fistp  WORD PTR [esi-0x15f0d797]
  41d286:	push   0x65
  41d288:	loopne 0x41d2f0
  41d28a:	pushf  
  41d28b:	dec    eax
  41d28c:	pusha  
  41d28d:	mov    ebx,0xb889dff3
  41d292:	fnstcw WORD PTR [edi]
  41d294:	stos   DWORD PTR es:[edi],eax
  41d295:	sub    ebp,DWORD PTR [ebx]
  41d297:	jae    0x41d246
  41d299:	xor    ecx,DWORD PTR [ebp+0x504f1930]
  41d29f:	mov    esi,edi
  41d2a1:	lock inc ebx
  41d2a3:	out    dx,eax
  41d2a4:	aad    0x53
  41d2a6:	sbb    ebx,esp
  41d2a8:	ins    BYTE PTR es:[edi],dx
  41d2a9:	cmp    edi,DWORD PTR [edi+0xdac2c83]
  41d2af:	mov    esi,0x829bc7a2
  41d2b4:	ret    0x284
  41d2b7:	xor    ebp,edi
  41d2b9:	(bad)  
  41d2ba:	mov    esp,0x3e8fda17
  41d2bf:	pop    ecx
  41d2c0:	addr16 xor eax,0xdba8c1
  41d2c6:	into   
  41d2c7:	retf   0x75ef
  41d2ca:	cmp    dl,BYTE PTR [esi+0x1a]
  41d2cd:	stos   BYTE PTR es:[edi],al
  41d2ce:	std    
  41d2cf:	fdiv   DWORD PTR [eax-0x25a9ce2a]
  41d2d5:	mov    BYTE PTR [ebx-0x1989bf01],dh
  41d2db:	xor    eax,0x4e59901a
  41d2e0:	mov    esp,ebx
  41d2e2:	fdivr  DWORD PTR [ecx-0x48a7c204]
  41d2e8:	mov    ds:0x794c1113,al
  41d2ed:	mov    edx,0xea224516
  41d2f2:	sub    ebp,eax
  41d2f4:	cli    
  41d2f5:	hlt    
  41d2f6:	inc    ecx
  41d2f7:	pop    ebp
  41d2f8:	xor    eax,0x2a02e3a8
  41d2fd:	add    cl,BYTE PTR [esi+eax*2-0x80]
  41d301:	inc    ecx
  41d302:	shl    DWORD PTR [esi+0x27],1
  41d305:	pop    edi
  41d306:	cld    
  41d307:	ja     0x41d2b9
  41d309:	stc    
  41d30a:	xlat   BYTE PTR ds:[ebx]
  41d30b:	das    
  41d30c:	sbb    BYTE PTR [ebp+edx*8-0x4005c85],0x61
  41d314:	dec    ebx
  41d315:	adc    al,0xd4
  41d317:	xchg   ebx,eax
  41d318:	and    ebp,eax
  41d31a:	and    al,0xdb
  41d31c:	cmp    al,0x91
  41d31e:	mov    edi,DWORD PTR [ecx+0x4c]
  41d321:	loopne 0x41d357
  41d323:	jno    0x41d2fb
  41d325:	push   eax
  41d326:	cmc    
  41d327:	and    al,0x9f
  41d329:	dec    edi
  41d32a:	mov    dl,BYTE PTR [ebx-0x1baa95b]
  41d330:	mov    eax,ds:0xef91d3d
  41d335:	mov    edi,0xd63d02b7
  41d33a:	jg     0x41d310
  41d33c:	cmp    BYTE PTR [ebx],bl
  41d33e:	jno    0x41d31b
  41d340:	cmpxchg BYTE PTR [eax-0x43],bh
  41d344:	jmp    0x9019e129
  41d349:	cli    
  41d34a:	sar    edi,cl
  41d34c:	(bad)
  41d350:	lods   eax,DWORD PTR ds:[esi]
  41d351:	fs mov eax,0x4aad21ce
  41d357:	pop    ebx
  41d358:	inc    edi
  41d359:	cdq    
  41d35a:	in     al,0xd
  41d35c:	call   0x8e60:0xe3c3765
  41d363:	xlat   BYTE PTR ds:[ebx]
  41d364:	xchg   edi,eax
  41d365:	push   ds
  41d366:	xchg   edx,eax
  41d367:	or     al,0xf8
  41d369:	xchg   ebx,eax
  41d36a:	push   0xffffffb9
  41d36c:	xchg   ebx,eax
  41d36d:	in     al,0x9a
  41d36f:	enter  0x105b,0x26
  41d373:	add    BYTE PTR [ebx],dh
  41d375:	imul   bx,WORD PTR [esi+0xf],0xff9c
  41d37a:	xchg   edx,eax
  41d37b:	dec    ebp
  41d37c:	fcom   QWORD PTR [ebx+0x29]
  41d37f:	call   0xf991:0x6fffa604
  41d386:	rcr    BYTE PTR [edi+ebp*8-0xb100e1d],0xf2
  41d38e:	scas   eax,DWORD PTR es:[edi]
  41d38f:	mov    al,ds:0xa91f2388
  41d394:	daa    
  41d395:	ror    ebx,cl
  41d397:	mov    bh,0x2d
  41d399:	jle    0x41d3ea
  41d39b:	inc    BYTE PTR [edx]
  41d39d:	shl    BYTE PTR [edx],cl
  41d39f:	pop    eax
  41d3a0:	add    edx,ebp
  41d3a2:	ins    DWORD PTR es:[edi],dx
  41d3a3:	cmp    DWORD PTR [ebx],eax
  41d3a5:	xlat   BYTE PTR ds:[ebx]
  41d3a6:	xlat   BYTE PTR ds:[ebx]
  41d3a7:	xchg   edi,eax
  41d3a8:	pop    edx
  41d3a9:	jp     0x41d3dd
  41d3ab:	out    0x1,al
  41d3ad:	xor    bh,BYTE PTR [ecx]
  41d3af:	test   edx,eax
  41d3b1:	pop    ebp
  41d3b2:	mov    dh,0x31
  41d3b4:	xchg   esp,eax
  41d3b5:	mov    esi,0xd0b2e68f
  41d3ba:	cwde   
  41d3bb:	(bad)  
  41d3bc:	pop    ss
  41d3bd:	mov    es,WORD PTR [ebx+edx*2+0x43]
  41d3c1:	out    dx,al
  41d3c2:	pop    esp
  41d3c3:	stc    
  41d3c4:	inc    ecx
  41d3c5:	arpl   WORD PTR [edx],dx
  41d3c7:	xchg   esp,eax
  41d3c8:	retf   
  41d3c9:	xor    edx,edi
  41d3cb:	mov    bh,cl
  41d3cd:	mov    ebx,edx
  41d3cf:	jbe    0x41d42b
  41d3d1:	jbe    0x41d377
  41d3d3:	adc    DWORD PTR [ebx],0xe
  41d3d6:	or     BYTE PTR [ebx-0x26074bdc],0x86
  41d3dd:	mov    al,0x1d
  41d3df:	mov    esp,0xbeb2c84f
  41d3e4:	mov    esp,0x78a01b72
  41d3e9:	adc    al,0x68
  41d3eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d3ec:	sub    al,0x16
  41d3ee:	adc    eax,0x4c05c35
  41d3f3:	mov    al,ds:0x96465320
  41d3f8:	jae    0x41d3bb
  41d3fa:	lds    esp,FWORD PTR cs:[edi+0x79]
  41d3fe:	mov    cl,0x56
  41d400:	icebp  
  41d401:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d402:	icebp  
  41d403:	out    dx,eax
  41d404:	jmp    0xfa2f:0x1efdcf70
  41d40b:	leave  
  41d40c:	rcr    DWORD PTR [esp+ebx*4-0x46dfd027],cl
  41d413:	retf   
  41d414:	pop    ds
  41d415:	fldz   
  41d417:	lock cwde 
  41d419:	aaa    
  41d41a:	sub    al,al
  41d41c:	jle    0x41d3b0
  41d41e:	sbb    ebp,ebp
  41d420:	push   0x25
  41d422:	sbb    DWORD PTR [eax],esi
  41d424:	fwait
  41d425:	in     al,0xc6
  41d427:	xor    al,0x19
  41d429:	sub    eax,0xa8f867cf
  41d42e:	ficom  WORD PTR [edi]
  41d430:	xor    dh,BYTE PTR [edi-0x1e3a5f6]
  41d436:	inc    esi
  41d437:	in     eax,dx
  41d438:	inc    ecx
  41d439:	scas   eax,DWORD PTR es:[edi]
  41d43a:	or     bl,0x14
  41d43d:	data16 lods al,BYTE PTR ds:[esi]
  41d43f:	scas   eax,DWORD PTR es:[edi]
  41d440:	(bad)  
  41d441:	mov    edi,0x6ab5de84
  41d446:	jp     0x41d3ea
  41d448:	daa    
  41d449:	push   esi
  41d44a:	es into 
  41d44c:	push   0xffffffcb
  41d44e:	shr    DWORD PTR [edi+0x19],1
  41d451:	adc    eax,0x724feae5
  41d456:	(bad)  
  41d457:	rcl    DWORD PTR [edx-0x32b23744],0x33
  41d45e:	int    0x4
  41d460:	mov    esp,0xd140837f
  41d465:	inc    edx
  41d466:	(bad)  
  41d468:	xchg   ebp,eax
  41d469:	out    dx,eax
  41d46a:	mov    ds:0xd13dc9e0,al
  41d46f:	mov    ?,WORD PTR [ebx]
  41d471:	mov    dh,0xa8
  41d473:	sub    dl,bh
  41d475:	xor    al,0x44
  41d477:	jne    0x41d442
  41d479:	inc    esi
  41d47a:	int3   
  41d47b:	jmp    0xd36bbf5f
  41d480:	retf   0x238c
  41d483:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d484:	push   ecx
  41d485:	mov    ecx,0xf0c17ee0
  41d48a:	pop    es
  41d48b:	or     BYTE PTR ds:0x35980d7d,dh
  41d491:	gs mov esp,0xc9c1014c
  41d497:	add    al,0x70
  41d499:	repz das 
  41d49b:	jecxz  0x41d4a7
  41d49d:	or     eax,0xeb4230a2
  41d4a2:	pop    ecx
  41d4a3:	mov    edx,DWORD PTR [edx-0x6b]
  41d4a6:	arpl   WORD PTR [esi+0x45a3bbfe],sp
  41d4ac:	pop    eax
  41d4ad:	lds    ecx,FWORD PTR [edx]
  41d4af:	(bad)  
  41d4b0:	dec    eax
  41d4b1:	mov    bl,0xfc
  41d4b3:	test   al,0xe7
  41d4b5:	sbb    BYTE PTR [edx],dl
  41d4b7:	popa   
  41d4b8:	fwait
  41d4b9:	std    
  41d4ba:	not    ch
  41d4bc:	loop   0x41d501
  41d4be:	in     al,0xa6
  41d4c0:	push   es
  41d4c1:	pusha  
  41d4c2:	scas   al,BYTE PTR es:[edi]
  41d4c3:	sahf   
  41d4c4:	mov    cl,0xb1
  41d4c6:	(bad)  
  41d4c7:	push   ebx
  41d4c8:	shl    DWORD PTR [edi-0x4f],1
  41d4cb:	mov    ah,0x16
  41d4cd:	sar    BYTE PTR [ebx+0x175a9dfd],0xb7
  41d4d4:	jne    0x41d519
  41d4d6:	sub    BYTE PTR [ebx],bh
  41d4d8:	dec    edx
  41d4d9:	cmc    
  41d4da:	hlt    
  41d4db:	cwde   
  41d4dc:	mov    eax,0x8fceeda9
  41d4e1:	sub    bl,BYTE PTR [eax+0x62]
  41d4e4:	inc    esp
  41d4e5:	cwde   
  41d4e6:	iret   
  41d4e7:	adc    DWORD PTR [ebp-0x2f],0xffffff84
  41d4eb:	pop    edi
  41d4ec:	pop    edi
  41d4ed:	pusha  
  41d4ee:	mov    ss,WORD PTR [edi-0x621591c4]
  41d4f4:	sar    ecx,cl
  41d4f6:	int3   
  41d4f7:	jecxz  0x41d50a
  41d4f9:	scas   al,BYTE PTR es:[edi]
  41d4fa:	push   0x6761e2e2
  41d4ff:	adc    eax,0xbabc4ba3
  41d504:	std    
  41d505:	(bad)  
  41d506:	push   edx
  41d507:	mov    ah,bl
  41d509:	aas    
  41d50a:	push   ds
  41d50b:	add    eax,0xa16be07a
  41d510:	imul   ebx,DWORD PTR [ecx+0x254fb7a1],0x14
  41d517:	cmp    BYTE PTR [edi+eiz*4-0x13978b7d],ch
  41d51e:	aam    0x6e
  41d520:	test   al,0x68
  41d522:	xchg   edx,eax
  41d523:	fbld   TBYTE PTR [edi]
  41d525:	clc    
  41d526:	fwait
  41d527:	mov    ds:0x520af2e7,al
  41d52c:	xor    al,0x7f
  41d52e:	retf   
  41d52f:	bound  edx,QWORD PTR [ecx+0x3154fd0a]
  41d535:	add    al,0x99
  41d537:	push   ss
  41d538:	xchg   BYTE PTR [edx],dh
  41d53a:	xor    al,0xf
  41d53c:	xor    ch,bh
  41d53e:	mov    cl,bl
  41d540:	fcom   QWORD PTR [edx+edx*1+0x2c9e9db0]
  41d547:	xlat   BYTE PTR ds:[ebx]
  41d548:	frstor [ebx+0x56b09ff0]
  41d54e:	jp     0x41d544
  41d550:	mov    esp,0x3799c1d8
  41d555:	fnsave [edx-0x73]
  41d558:	inc    edx
  41d559:	das    
  41d55a:	pop    ds
  41d55b:	sub    eax,0x8c15295e
  41d560:	push   ebp
  41d561:	(bad)  
  41d562:	into   
  41d563:	mov    ecx,0xefb9ddb2
  41d568:	cld    
  41d569:	pop    esi
  41d56a:	push   0x5104b1d9
  41d56f:	mov    esp,DWORD PTR [edx]
  41d571:	push   edi
  41d572:	fdiv   QWORD PTR [ebx+ebp*4+0x79f76f36]
  41d579:	xlat   BYTE PTR ds:[ebx]
  41d57a:	call   0xb058ccd8
  41d57f:	or     DWORD PTR [eax-0x5b4038b5],eax
  41d585:	out    0xab,eax
  41d587:	jae    0x41d526
  41d589:	pop    ebp
  41d58a:	mov    al,BYTE PTR [edx+0x0]
  41d58d:	and    bh,cl
  41d58f:	mov    bh,BYTE PTR [esp+esi*4-0x23c594e5]
  41d596:	loope  0x41d549
  41d598:	cwde   
  41d599:	into   
  41d59a:	cmp    eax,0x4455b6cc
  41d59f:	ins    DWORD PTR es:[edi],dx
  41d5a0:	(bad)  
  41d5a1:	fistp  WORD PTR [esi+0x145013a1]
  41d5a7:	xchg   ebx,eax
  41d5a8:	sbb    dl,BYTE PTR ds:0xdc277510
  41d5ae:	push   0x2c6cb46d
  41d5b3:	lods   eax,DWORD PTR ds:[esi]
  41d5b4:	ret    
  41d5b5:	jmp    0x8cd0:0x86679585
  41d5bc:	lods   al,BYTE PTR ds:[esi]
  41d5bd:	bound  esi,QWORD PTR [esi]
  41d5bf:	stos   DWORD PTR es:[edi],eax
  41d5c0:	test   al,0x3f
  41d5c2:	inc    ecx
  41d5c3:	pop    ebx
  41d5c4:	push   esp
  41d5c5:	ins    BYTE PTR es:[edi],dx
  41d5c6:	scas   al,BYTE PTR es:[edi]
  41d5c7:	cmp    eax,0xa1f7c01
  41d5cc:	lahf   
  41d5cd:	sub    DWORD PTR [edx+0xcc59a04],ebp
  41d5d3:	mov    bh,BYTE PTR [edx-0x29c6b44d]
  41d5d9:	jo     0x41d628
  41d5db:	sbb    eax,ebp
  41d5dd:	je     0x41d60f
  41d5df:	mov    ah,0x50
  41d5e1:	cli    
  41d5e2:	arpl   WORD PTR [ebx],dx
  41d5e4:	xchg   ebx,eax
  41d5e5:	adc    ebx,DWORD PTR [ecx-0x42d0e9e7]
  41d5eb:	stc    
  41d5ec:	retf   
  41d5ed:	sti    
  41d5ee:	in     al,dx
  41d5ef:	fstp   TBYTE PTR [ecx]
  41d5f1:	test   DWORD PTR [ecx-0x3e],0x8fda472c
  41d5f8:	std    
  41d5f9:	out    dx,al
  41d5fa:	hlt    
  41d5fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d5fc:	cmp    al,0x12
  41d5fe:	dec    ecx
  41d5ff:	fimul  WORD PTR [esi+0x42b12c3c]
  41d605:	stc    
  41d606:	mov    edx,DWORD PTR [ebx-0x6f410ce8]
  41d60c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d60d:	cdq    
  41d60e:	or     esi,DWORD PTR [edx]
  41d610:	jb     0x41d642
  41d612:	mov    ah,0xd6
  41d614:	push   esp
  41d615:	(bad)  
  41d616:	pushf  
  41d617:	dec    edx
  41d618:	shl    DWORD PTR [ebx+eiz*2-0x2c394980],0xb3
  41d620:	rol    dl,1
  41d622:	inc    ebx
  41d623:	xor    DWORD PTR [ebx-0x20],0x2f
  41d627:	and    al,0x15
  41d629:	xchg   ebx,eax
  41d62a:	jbe    0x41d6ab
  41d62c:	jecxz  0x41d61f
  41d62e:	fwait
  41d62f:	mov    edi,0xb55ef34b
  41d634:	ja     0x41d63b
  41d636:	jmp    0x8fca:0x8824a6cf
  41d63d:	push   0x45d64218
  41d642:	fcomp  QWORD PTR [ecx-0x467e41b9]
  41d648:	mov    bh,0x75
  41d64a:	jge    0x41d618
  41d64c:	(bad)  
  41d64e:	adc    bh,BYTE PTR es:[ecx]
  41d651:	mov    esp,0xc5d00fdd
  41d656:	add    DWORD PTR [esi+0x4a],eax
  41d659:	gs lahf 
  41d65b:	in     eax,0x84
  41d65d:	dec    esp
  41d65e:	mov    ds:0x2f331c60,eax
  41d663:	push   ds
  41d664:	mov    ebp,0xa5f7c293
  41d669:	gs je  0x41d608
  41d66c:	mov    dl,0x1c
  41d66e:	stc    
  41d66f:	outs   dx,DWORD PTR ds:[esi]
  41d670:	dec    esi
  41d671:	lds    esi,FWORD PTR [edi+0x28df172f]
  41d677:	rol    DWORD PTR [esi-0x28683d41],0x3a
  41d67e:	add    bl,BYTE PTR [esp+eax*1-0x6b]
  41d682:	sbb    BYTE PTR [ebx],cl
  41d684:	fidiv  WORD PTR [edx-0x54]
  41d687:	scas   eax,DWORD PTR es:[edi]
  41d688:	or     al,0x98
  41d68a:	push   ebx
  41d68b:	(bad)  
  41d68c:	dec    esi
  41d68d:	icebp  
  41d68e:	fidiv  WORD PTR [edx+eax*2+0x4]
  41d692:	ror    DWORD PTR [edx+0x11],cl
  41d695:	xor    al,0x8f
  41d697:	sbb    edx,edi
  41d699:	sub    eax,0xc4ed7678
  41d69e:	mov    edx,0xf630605a
  41d6a3:	xchg   DWORD PTR [edx+0x2e],edx
  41d6a6:	stos   BYTE PTR es:[edi],al
  41d6a7:	cmp    eax,0x1cac9285
  41d6ac:	push   ds
  41d6ad:	push   cs
  41d6ae:	mov    esi,0x63e2bd40
  41d6b3:	inc    ebp
  41d6b4:	add    bh,BYTE PTR [edi+0x79]
  41d6b7:	clc    
  41d6b8:	mov    ds:0x99caf7a4,al
  41d6bd:	jmp    0x66c5:0xbedac582
  41d6c4:	sub    ah,ch
  41d6c6:	pop    esp
  41d6c7:	mov    eax,DWORD PTR [edi-0x26]
  41d6ca:	adc    cl,bh
  41d6cc:	sbb    eax,0xf4bed3b8
  41d6d1:	retf   
  41d6d2:	stos   DWORD PTR es:[edi],eax
  41d6d3:	push   esp
  41d6d4:	das    
  41d6d5:	xchg   edi,eax
  41d6d6:	in     eax,0x64
  41d6d8:	(bad)  
  41d6da:	add    al,0x21
  41d6dc:	das    
  41d6dd:	jae    0x41d691
  41d6df:	xchg   ecx,eax
  41d6e0:	sub    al,0xe1
  41d6e2:	mov    ah,0xfe
  41d6e4:	pushw  cs
  41d6e6:	and    BYTE PTR [ebx],al
  41d6e8:	lock in eax,dx
  41d6ea:	sub    DWORD PTR [edx-0x7db831ea],edx
  41d6f0:	retf   
  41d6f1:	push   edx
  41d6f2:	mov    ebp,0x5e54c070
  41d6f7:	rcr    ch,cl
  41d6f9:	lods   al,BYTE PTR ds:[esi]
  41d6fa:	xchg   ebp,eax
  41d6fb:	mov    eax,ds:0xf971fda4
  41d700:	pusha  
  41d701:	dec    ebp
  41d702:	mov    edi,0x19e796c4
  41d707:	xchg   edx,eax
  41d708:	and    cl,BYTE PTR [ebx]
  41d70a:	mov    ds:0xddf568fb,al
  41d70f:	adc    al,BYTE PTR [ecx+0x76]
  41d712:	xor    edi,DWORD PTR [ebp+0x62d6fc93]
  41d718:	test   al,0x4
  41d71a:	mov    bl,0x77
  41d71c:	cwde   
  41d71d:	aad    0xce
  41d71f:	xchg   ebp,eax
  41d720:	dec    eax
  41d721:	adc    eax,0x33427fcb
  41d726:	dec    edi
  41d727:	aas    
  41d728:	addr16 mov al,0xa5
  41d72b:	add    dl,dl
  41d72d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d72e:	sub    al,0x64
  41d730:	cmp    DWORD PTR [edx-0x1a],eax
  41d733:	dec    ecx
  41d734:	or     eax,0xec6d5173
  41d739:	in     eax,dx
  41d73a:	std    
  41d73b:	fldenv [eax]
  41d73d:	lock mov edi,DWORD PTR [esi]
  41d740:	cdq    
  41d741:	fcom   QWORD PTR [ebp+0xd]
  41d744:	ror    DWORD PTR [edx],0x7f
  41d747:	sub    edi,DWORD PTR [eax-0x729aede6]
  41d74d:	stos   BYTE PTR es:[edi],al
  41d74e:	add    esp,esp
  41d750:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d751:	je     0x41d7c5
  41d753:	ret    
  41d754:	aaa    
  41d755:	push   es
  41d756:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d757:	rcl    DWORD PTR ds:0x899d2f00,1
  41d75d:	scas   eax,DWORD PTR es:[edi]
  41d75e:	jecxz  0x41d75e
  41d760:	scas   al,BYTE PTR es:[edi]
  41d761:	sar    DWORD PTR [eax-0x237fc8fc],0x76
  41d768:	ret    0xcd05
  41d76b:	jg     0x41d7c8
  41d76d:	int3   
  41d76e:	and    bl,0x76
  41d771:	mov    ch,0x52
  41d773:	ret    0x6655
  41d776:	dec    edx
  41d777:	ret    0x8c90
  41d77a:	enter  0x876b,0xc
  41d77e:	adc    DWORD PTR [edx-0x45],esi
  41d781:	dec    esi
  41d782:	and    edi,DWORD PTR [eax+0x659fcaa3]
  41d788:	dec    edi
  41d789:	mov    WORD PTR [ecx],es
  41d78b:	imul   esp,DWORD PTR [esi-0x362ba531],0xa7997c2a
  41d795:	aad    0x35
  41d797:	dec    edx
  41d798:	dec    ecx
  41d799:	loop   0x41d732
  41d79b:	sbb    eax,0x14f8c197
  41d7a0:	add    DWORD PTR [ecx+esi*2+0x19],ecx
  41d7a4:	push   edi
  41d7a5:	jmp    0xb8a4677b
  41d7aa:	xor    edi,DWORD PTR [ebx+0x486c00a5]
  41d7b0:	pop    es
  41d7b1:	push   cs
  41d7b2:	jecxz  0x41d7f9
  41d7b4:	pop    esi
  41d7b5:	inc    edx
  41d7b6:	call   0x82e3:0x51e3f809
  41d7bd:	mov    edx,0xfd7ee838
  41d7c2:	pop    edx
  41d7c3:	and    edx,DWORD PTR ds:0x5247cec5
  41d7c9:	mov    ebp,0xdf01ccd7
  41d7ce:	jmp    0x683046cd
  41d7d3:	out    dx,eax
  41d7d4:	loopne 0x41d792
  41d7d6:	pop    ebp
  41d7d7:	rcr    BYTE PTR [ebx+esi*2],1
  41d7da:	aas    
  41d7db:	cld    
  41d7dc:	jbe    0x41d793
  41d7de:	sti    
  41d7df:	fs sub ch,dh
  41d7e2:	in     al,0x2b
  41d7e4:	mov    al,ds:0x8a24b3ed
  41d7e9:	stos   DWORD PTR es:[edi],eax
  41d7ea:	jb     0x41d77d
  41d7ec:	fstp   st(4)
  41d7ee:	mov    dl,0x28
  41d7f0:	and    DWORD PTR [edx+0x422374ed],esp
  41d7f6:	pop    esp
  41d7f7:	sbb    al,0x2f
  41d7f9:	and    DWORD PTR [ecx],0x7b67867b
  41d7ff:	rcl    BYTE PTR [ecx-0x36],cl
  41d802:	jecxz  0x41d7e6
  41d804:	retf   
  41d805:	repnz das 
  41d807:	call   0x3868ab49
  41d80c:	aam    0x72
  41d80e:	mov    ebp,edi
  41d810:	or     dh,BYTE PTR [ebx+eax*4]
  41d813:	test   eax,0xc6c2bbaa
  41d818:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d819:	mov    ch,0x2a
  41d81b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d81c:	adc    BYTE PTR [ecx+0x7e3943fb],dh
  41d822:	fisub  WORD PTR [edx+0x1d]
  41d825:	into   
  41d826:	je     0x41d7bf
  41d828:	mov    edi,0x3d95a9d5
  41d82d:	les    ebx,FWORD PTR [edi-0x4790580a]
  41d833:	jnp    0x41d824
  41d835:	xlat   BYTE PTR ds:[ebx]
  41d836:	pushf  
  41d837:	xchg   ebp,eax
  41d838:	jne    0x41d80e
  41d83a:	sbb    dl,cl
  41d83c:	std    
  41d83d:	cmc    
  41d83e:	stos   DWORD PTR es:[edi],eax
  41d83f:	push   edx
  41d840:	jmp    0x802d:0xa25b3bb6
  41d847:	scas   al,BYTE PTR es:[edi]
  41d848:	(bad)  [ecx-0x7c591528]
  41d84e:	popf   
  41d84f:	jecxz  0x41d8a8
  41d851:	hlt    
  41d852:	xchg   ebp,eax
  41d853:	test   BYTE PTR [ecx+edi*1-0x3a],0x1
  41d858:	iret   
  41d859:	fstp   QWORD PTR [ebp-0x4e]
  41d85c:	inc    esp
  41d85d:	push   ebx
  41d85e:	imul   esi,DWORD PTR [esi],0x34
  41d861:	push   cs
  41d862:	xor    al,0x47
  41d864:	push   ecx
  41d865:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d866:	(bad)  
  41d867:	ret    0xe404
  41d86a:	pop    ds
  41d86b:	packuswb mm5,mm7
  41d86e:	mov    eax,ds:0xcbe60333
  41d873:	ror    DWORD PTR [edx-0x7939cf8e],cl
  41d879:	mov    edx,0xd99a32df
  41d87e:	neg    esi
  41d880:	xlat   BYTE PTR ds:[ebx]
  41d881:	mov    eax,0xdf4a9018
  41d886:	bound  ecx,QWORD PTR [ecx+0x42]
  41d889:	jo     0x41d82d
  41d88b:	sub    eax,0xfb81f1e5
  41d890:	fnstsw WORD PTR [edx+ecx*4+0x78a87140]
  41d897:	add    dh,BYTE PTR [eax]
  41d899:	cmp    eax,0xbad6ff45
  41d89e:	stc    
  41d89f:	or     al,bl
  41d8a1:	adc    cl,BYTE PTR [eax]
  41d8a3:	mov    dl,0xac
  41d8a5:	stos   DWORD PTR es:[edi],eax
  41d8a6:	fidiv  DWORD PTR [edx+0x2f]
  41d8a9:	sar    BYTE PTR [ebx+ebp*8],cl
  41d8ac:	es push 0xdb146c08
  41d8b2:	outs   dx,DWORD PTR ds:[esi]
  41d8b3:	cdq    
  41d8b4:	ja     0x41d88e
  41d8b6:	ja     0x41d933
  41d8b8:	je     0x41d911
  41d8ba:	outs   dx,DWORD PTR ds:[esi]
  41d8bb:	push   0x5ad777c0
  41d8c0:	cmp    al,0xd0
  41d8c2:	dec    eax
  41d8c3:	addr16 test eax,0xc5c1534b
  41d8c9:	push   esi
  41d8ca:	cmp    eax,0xa35214d8
  41d8cf:	int    0x2a
  41d8d1:	daa    
  41d8d2:	add    esp,ebx
  41d8d4:	fucom  st(0)
  41d8d6:	xor    eax,0x467ac705
  41d8db:	rol    ecx,0x51
  41d8de:	(bad)  
  41d8df:	std    
  41d8e0:	lea    edi,[edi+0x3b0be5eb]
  41d8e6:	mov    ebx,0x7b3b9367
  41d8eb:	cdq    
  41d8ec:	xchg   ebp,eax
  41d8ed:	mov    esp,0x56cba972
  41d8f2:	jmp    0x5fd2bb95
  41d8f7:	stos   BYTE PTR es:[edi],al
  41d8f8:	push   ecx
  41d8f9:	fwait
  41d8fa:	xor    eax,0x3c25723c
  41d8ff:	cmc    
  41d900:	or     BYTE PTR [eax+0x17b93ce3],dl
  41d906:	out    0x3b,eax
  41d908:	sub    DWORD PTR [ecx-0x37],0x5cdbcb62
  41d90f:	xlat   BYTE PTR ds:[ebx]
  41d910:	or     DWORD PTR [ebx+0x18],esi
  41d913:	mov    bl,0x26
  41d915:	push   0xfffffff5
  41d917:	sbb    eax,0xb704065a
  41d91c:	push   ebp
  41d91d:	mov    ds:0x25360bc9,al
  41d922:	stos   DWORD PTR es:[edi],eax
  41d923:	and    edx,esi
  41d925:	dec    edx
  41d926:	cmp    ebx,DWORD PTR [ecx+0x6]
  41d929:	sbb    al,0xfc
  41d92b:	jns    0x41d92c
  41d92d:	add    BYTE PTR [edx+0x3f5fcc05],dl
  41d933:	and    DWORD PTR [ecx],esi
  41d935:	pop    esi
  41d936:	push   ds
  41d937:	adc    eax,DWORD PTR [ecx+0x1bf94727]
  41d93d:	dec    eax
  41d93e:	or     eax,0x75df03dc
  41d943:	outs   dx,DWORD PTR ds:[esi]
  41d944:	ror    eax,1
  41d946:	xchg   DWORD PTR [ebp+0x44],ebx
  41d949:	fsubr  DWORD PTR [eax-0x115e513]
  41d94f:	xchg   ecx,eax
  41d950:	outs   dx,DWORD PTR ds:[esi]
  41d951:	stos   DWORD PTR es:[edi],eax
  41d952:	and    DWORD PTR [ebx+eiz*2-0x2bdbb92e],ebp
  41d959:	(bad)  
  41d95a:	xor    dl,BYTE PTR [ebx]
  41d95c:	arpl   WORD PTR [esi],sp
  41d95e:	or     al,0x40
  41d960:	repz sub BYTE PTR [edi-0x26fb4a74],al
  41d967:	call   0x3ea0:0x3216ddc8
  41d96e:	mov    edi,0x5832fd74
  41d973:	gs adc al,0x62
  41d976:	outs   dx,DWORD PTR ds:[esi]
  41d977:	xor    esp,esp
  41d979:	mov    cl,0xf9
  41d97b:	sbb    al,0xc6
  41d97d:	(bad)  [ecx]
  41d97f:	(bad)  
  41d980:	in     eax,dx
  41d981:	jae    0x41d984
  41d983:	or     al,0x60
  41d985:	nop
  41d986:	or     BYTE PTR [ebx-0xcebad49],al
  41d98c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d98d:	pop    edx
  41d98e:	add    ch,0x82
  41d991:	fistp  QWORD PTR [ecx+eiz*4-0x752f9738]
  41d999:	xchg   BYTE PTR [esi+ebx*2+0x73fa4e1a],bh
  41d9a0:	jo     0x41d93c
  41d9a2:	inc    esp
  41d9a4:	sbb    eax,0xe7970911
  41d9a9:	inc    DWORD PTR [edx+0xe95113b]
  41d9af:	leave  
  41d9b0:	mov    al,0xb7
  41d9b2:	or     BYTE PTR [esp+edx*4+0x79daf032],bl
  41d9b9:	mov    al,ds:0x3781b964
  41d9be:	pusha  
  41d9bf:	inc    esp
  41d9c0:	imul   eax,DWORD PTR [edi],0x6d9fe53a
  41d9c6:	jae    0x41da0a
  41d9c8:	retf   
  41d9c9:	icebp  
  41d9ca:	xor    BYTE PTR [esi+edi*1+0x43f5eaf3],0xab
  41d9d2:	das    
  41d9d3:	jle    0x41da09
  41d9d5:	jmp    0x3ae9:0xaee3db82
  41d9dc:	lock retf 
  41d9de:	jmp    0x41d9ba
  41d9e0:	fiadd  DWORD PTR [ecx]
  41d9e2:	push   es
  41d9e3:	push   ecx
  41d9e4:	lods   al,BYTE PTR ds:[esi]
  41d9e5:	aas    
  41d9e6:	repnz mov al,ds:0x2668575a
  41d9ec:	(bad)  
  41d9ed:	mov    eax,0xd0a7f16c
  41d9f2:	jl     0x41d9f4
  41d9f4:	sub    eax,0x531d9ca8
  41d9f9:	call   0xea5c:0xed26d94c
  41da00:	(bad)
  41da04:	add    al,0x1a
  41da06:	cmp    ecx,esp
  41da08:	rcl    cl,1
  41da0a:	mov    cl,BYTE PTR [ebx]
  41da0c:	cs fwait
  41da0e:	aam    0x57
  41da10:	hlt    
  41da11:	xchg   esp,eax
  41da12:	xchg   edx,eax
  41da13:	mov    al,dl
  41da15:	jmp    0x66343ab9
  41da1a:	or     eax,0xb986b355
  41da1f:	into   
  41da20:	sub    edi,DWORD PTR [edx]
  41da22:	pop    DWORD PTR [edi]
  41da24:	cli    
  41da25:	test   ah,dh
  41da27:	xchg   edi,eax
  41da28:	push   esi
  41da29:	or     cl,dh
  41da2b:	test   eax,0xac3d3cc2
  41da30:	cmp    bl,al
  41da32:	xor    DWORD PTR [ebx],eax
  41da34:	call   0xa8355a8b
  41da39:	cwde   
  41da3a:	(bad)  
  41da3b:	fisttp QWORD PTR [ebx+ecx*8+0x2b]
  41da3f:	ss xor eax,0xbd457279
  41da45:	faddp  st(0),st
  41da47:	xchg   esi,eax
  41da48:	push   edx
  41da49:	mov    ah,BYTE PTR [ebx+0x57a3892d]
  41da4f:	jle    0x41d9ff
  41da51:	dec    edx
  41da52:	sti    
  41da53:	mov    ecx,0xeecceeb8
  41da58:	add    edx,DWORD PTR [esi-0x27687ec7]
  41da5e:	xor    BYTE PTR [ebp+0x65],ah
  41da61:	fist   DWORD PTR [ecx-0x3259e95d]
  41da67:	fadd   DWORD PTR [edi+0x5deed246]
  41da6d:	fcmovb st,st(1)
  41da6f:	jne    0x41dac4
  41da71:	jle    0x41daee
  41da73:	sbb    eax,0x4c50c25c
  41da78:	mov    BYTE PTR [ebx],bh
  41da7a:	push   esi
  41da7b:	push   esi
  41da7c:	sub    BYTE PTR [ebx+0x2493406a],dh
  41da82:	mov    edx,0x413b6f13
  41da87:	cmp    DWORD PTR ss:[edi+0x3e],0xfffffffc
  41da8c:	sbb    DWORD PTR [ecx+esi*4],0xe0fcbc35
  41da93:	jecxz  0x41dab8
  41da95:	ja     0x41da7b
  41da97:	add    edx,DWORD PTR [ecx+0x681f8df]
  41da9d:	test   eax,0xa1c3c6c3
  41daa2:	out    0x57,eax
  41daa4:	loop   0x41da9d
  41daa6:	bsr    edi,ebx
  41daa9:	(bad)  
  41daaa:	in     al,dx
  41daab:	jmp    0x5805beb1
  41dab0:	add    al,al
  41dab2:	add    dh,BYTE PTR [eax+0x21]
  41dab5:	add    eax,0x6be49211
  41daba:	jb     0x41da72
  41dabc:	inc    edx
  41dabd:	aad    0xc7
  41dabf:	cvtps2pd xmm5,QWORD PTR [ebx]
  41dac2:	and    esi,DWORD PTR [eax]
  41dac4:	jnp    0x41da63
  41dac6:	pop    esi
  41dac7:	loopne 0x41db30
  41dac9:	pop    esp
  41daca:	dec    ebp
  41dacb:	mov    ch,BYTE PTR [ecx+0x77522376]
  41dad1:	pop    ss
  41dad2:	rcr    bl,cl
  41dad4:	or     DWORD PTR [edx-0x14],ebx
  41dad7:	(bad)  
  41dad8:	dec    ebp
  41dad9:	aaa    
  41dada:	ror    DWORD PTR [ecx],cl
  41dadc:	or     dl,BYTE PTR [ebx+0x4748ffc0]
  41dae2:	call   0x315d:0x9cb7542f
  41dae9:	add    BYTE PTR [edi],ah
  41daeb:	nop
  41daec:	push   eax
  41daed:	xchg   ebp,eax
  41daee:	and    al,BYTE PTR [ecx]
  41daf0:	dec    ebp
  41daf1:	sbb    eax,DWORD PTR [esp+eiz*2-0x1b]
  41daf5:	leave  
  41daf6:	hlt    
  41daf7:	movnti DWORD PTR [eax+0x39],eax
  41dafb:	jo     0x41daef
  41dafd:	popf   
  41dafe:	outs   dx,BYTE PTR ds:[esi]
  41daff:	jecxz  0x41db47
  41db01:	ins    DWORD PTR es:[edi],dx
  41db02:	jbe    0x41db61
  41db04:	ret    
  41db05:	mov    eax,0x42674541
  41db0a:	cmp    al,BYTE PTR [eax]
  41db0c:	cmp    edx,esi
  41db0e:	imul   ebp,DWORD PTR [eax+0x5b775e72],0x57
  41db15:	sbb    al,0x3c
  41db17:	push   ss
  41db18:	mov    dl,0x21
  41db1a:	or     cl,BYTE PTR [esi]
  41db1c:	sti    
  41db1d:	mov    ch,0x4c
  41db1f:	(bad)  
  41db20:	fadd   QWORD PTR [esp+edi*4]
  41db23:	mov    DWORD PTR [edi-0x2491814a],ebp
  41db29:	or     ah,BYTE PTR [eax+0x1f3d954c]
  41db2f:	cdq    
  41db30:	push   0x7a327a86
  41db35:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41db36:	adc    al,0xd8
  41db38:	add    ch,ch
  41db3a:	test   ecx,edi
  41db3c:	enter  0xc72d,0x48
  41db40:	inc    ebx
  41db41:	lods   eax,DWORD PTR ds:[esi]
  41db42:	xor    ebp,DWORD PTR [edi+0x7d]
  41db45:	dec    edx
  41db46:	push   0x9e4933b
  41db4b:	pop    es
  41db4c:	nop
  41db4d:	sahf   
  41db4e:	les    eax,FWORD PTR [edx]
  41db50:	std    
  41db51:	js     0x41dba6
  41db53:	icebp  
  41db54:	adc    BYTE PTR [edi+0x12],dl
  41db57:	jmp    0x8074:0xd14fd67d
  41db5e:	pusha  
  41db5f:	xor    eax,0xab78fa97
  41db64:	loope  0x41db10
  41db66:	pushf  
  41db67:	mov    bh,BYTE PTR [edx+0x16]
  41db6a:	cld    
  41db6b:	or     al,0xa4
  41db6d:	in     al,dx
  41db6e:	iret   
  41db6f:	ins    BYTE PTR es:[edi],dx
  41db70:	frstor [ecx-0x6cf9e63c]
  41db76:	fiadd  DWORD PTR ds:[edi-0x11]
  41db7a:	(bad)  
  41db7b:	jmp    0x41db54
  41db7d:	stos   DWORD PTR es:[edi],eax
  41db7e:	mov    ebp,0x866c34ce
  41db83:	jmp    0xabbe:0xad035b61
  41db8a:	pop    es
  41db8b:	or     eax,0x7e3a5c34
  41db90:	data16 loope 0x41dc01
  41db93:	pop    ebx
  41db94:	xchg   ebx,eax
  41db95:	push   es
  41db96:	in     eax,dx
  41db97:	sar    BYTE PTR [ebp*4+0x6972e328],0x53
  41db9f:	gs loopne 0x41dbbb
  41dba2:	push   ebx
  41dba3:	shl    DWORD PTR [esi+ebx*4],0x79
  41dba7:	test   al,0x72
  41dba9:	push   es
  41dbaa:	ret    
  41dbab:	div    BYTE PTR [edx]
  41dbad:	add    bl,BYTE PTR [edx]
  41dbaf:	mov    esi,0xddda3d37
  41dbb4:	and    BYTE PTR [ecx+0x5a],al
  41dbb7:	mov    bl,0xf3
  41dbb9:	and    bh,BYTE PTR [edx+eiz*2]
  41dbbc:	adc    ah,BYTE PTR ds:0xc9a59b14
  41dbc2:	cs (bad) 
  41dbc4:	jp     0x41dbfa
  41dbc6:	das    
  41dbc7:	xlat   BYTE PTR ds:[ebx]
  41dbc8:	ror    ecx,0x96
  41dbcb:	push   0xbe6a7ff5
  41dbd0:	xchg   ah,bl
  41dbd2:	sub    ch,BYTE PTR [eax]
  41dbd4:	repnz (bad) 
  41dbd7:	in     eax,dx
  41dbd8:	(bad)  
  41dbd9:	cmc    
  41dbda:	push   eax
  41dbdb:	nop
  41dbdc:	cdq    
  41dbdd:	jbe    0x41dba5
  41dbdf:	sbb    cl,ch
  41dbe1:	adc    DWORD PTR [eax],edx
  41dbe3:	shr    BYTE PTR [eax+0x25549d15],0x49
  41dbea:	adc    eax,DWORD PTR [ebx]
  41dbec:	add    al,BYTE PTR [edi+0x65]
  41dbef:	xchg   edi,eax
  41dbf0:	sbb    esi,DWORD PTR ds:0xc53d8b21
  41dbf6:	adc    eax,0xbcb6f259
  41dbfb:	mov    ecx,DWORD PTR [ebp+0x641bb9e0]
  41dc01:	mov    eax,ds:0x2b9ed996
  41dc06:	into   
  41dc07:	xchg   edx,edx
  41dc09:	push   0x62f54b9d
  41dc0e:	lods   al,BYTE PTR ds:[esi]
  41dc0f:	test   BYTE PTR [esi+0x1c],bh
  41dc12:	mov    ebp,0x2c0b36f2
  41dc17:	mov    esp,0x1486dfa0
  41dc1c:	push   ebp
  41dc1d:	idiv   BYTE PTR [ecx+0x69e23d2b]
  41dc23:	push   cs
  41dc24:	mov    ch,0xca
  41dc26:	cli    
  41dc27:	stos   BYTE PTR es:[edi],al
  41dc28:	cmp    bh,cl
  41dc2a:	jecxz  0x41dbdb
  41dc2c:	aad    0x72
  41dc2e:	mov    bh,0x63
  41dc30:	push   ecx
  41dc31:	fadd   QWORD PTR [ebx-0x4e]
  41dc34:	jl     0x41dbcd
  41dc36:	sti    
  41dc37:	adc    DWORD PTR [esi+esi*4],edi
  41dc3a:	in     al,0x9e
  41dc3c:	pop    esp
  41dc3d:	jmp    eax
  41dc3f:	jg     0x41dc00
  41dc41:	fild   WORD PTR [esp+0x461ac842]
  41dc48:	hlt    
  41dc49:	xchg   ecx,eax
  41dc4a:	pop    ebp
  41dc4b:	xor    edi,DWORD PTR [esi]
  41dc4d:	jmp    0x41dc1d
  41dc4f:	push   ss
  41dc50:	imul   ebx,ebx,0x20
  41dc53:	cmp    BYTE PTR [esi],ch
  41dc55:	test   eax,0x81716d5
  41dc5a:	mov    ch,0xda
  41dc5c:	pushf  
  41dc5d:	inc    edx
  41dc5e:	and    BYTE PTR [ecx],dl
  41dc60:	fmul   st(4),st
  41dc62:	call   0x2d2c0b68
  41dc67:	jmp    eax
  41dc69:	sbb    edi,esp
  41dc6b:	and    DWORD PTR [ebp-0x18],0xffffff9c
  41dc6f:	ins    DWORD PTR es:[edi],dx
  41dc70:	mov    edx,esp
  41dc72:	in     al,dx
  41dc73:	inc    ebx
  41dc74:	lahf   
  41dc75:	and    ebx,DWORD PTR [ebx+0xf]
  41dc78:	xor    DWORD PTR [ebx-0x32],0xfb22d4d4
  41dc7f:	(bad)  
  41dc80:	mov    al,ds:0x377b3318
  41dc85:	jne    0x41dc32
  41dc87:	jno    0x41dcaa
  41dc89:	xor    DWORD PTR [edx+0x4],esp
  41dc8c:	fist   WORD PTR [ecx+0x6a]
  41dc8f:	call   0xe55:0x5cd6f33b
  41dc96:	outs   dx,BYTE PTR ds:[esi]
  41dc97:	sub    al,0x35
  41dc99:	add    esp,DWORD PTR [ecx]
  41dc9b:	sub    BYTE PTR [edi+0x5f],dl
  41dc9e:	or     al,0xcd
  41dca0:	inc    esp
  41dca1:	fdivr  st(3),st
  41dca3:	jne    0x41dc68
  41dca5:	mov    esi,0x1e0f1044
  41dcaa:	clc    
  41dcab:	mov    bh,0x11
  41dcad:	cmp    eax,0xe4de1a60
  41dcb2:	(bad)
  41dcb5:	sbb    ch,BYTE PTR [esi-0x7059cabc]
  41dcbb:	xchg   ecx,eax
  41dcbc:	jns    0x41dc46
  41dcbe:	sbb    al,0x9c
  41dcc0:	out    0x13,al
  41dcc2:	jne    0x41dc50
  41dcc4:	repz dec ebx
  41dcc6:	dec    esi
  41dcc7:	push   ds
  41dcc8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dcc9:	scas   eax,DWORD PTR es:[edi]
  41dcca:	test   ah,al
  41dccc:	stc    
  41dccd:	add    edx,edi
  41dccf:	push   eax
  41dcd0:	(bad)  
  41dcd1:	in     eax,dx
  41dcd2:	xlat   BYTE PTR ds:[ebx]
  41dcd3:	pop    ebx
  41dcd4:	mov    bh,BYTE PTR [ecx]
  41dcd6:	pop    ds
  41dcd7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dcd8:	push   es
  41dcd9:	and    bl,BYTE PTR [ebx-0x1d]
  41dcdc:	jmp    0x41dcd2
  41dcde:	mov    bh,0x1a
  41dce0:	push   ebx
  41dce1:	or     cl,BYTE PTR [edx+edi*8+0x58]
  41dce5:	ficomp WORD PTR [ebx+edi*2+0x37]
  41dce9:	retf   0xb4a2
  41dcec:	dec    edi
  41dced:	ja     0x41dc94
  41dcef:	cmp    eax,0xfc695fa9
  41dcf4:	adc    BYTE PTR [ebp+esi*1+0x11f5e2e0],0x21
  41dcfc:	cmp    al,0x2f
  41dcfe:	test   al,0xf5
  41dd00:	das    
  41dd01:	cli    
  41dd02:	in     eax,dx
  41dd03:	cmp    BYTE PTR [ebx-0x2f],bl
  41dd06:	inc    esp
  41dd07:	pushf  
  41dd08:	fwait
  41dd09:	ins    BYTE PTR es:[edi],dx
  41dd0a:	dec    ebx
  41dd0b:	xchg   esp,eax
  41dd0c:	jno    0x41dd4a
  41dd0e:	mov    al,ds:0x1a611a43
  41dd13:	fmulp  st(3),st
  41dd15:	rsqrtps xmm2,XMMWORD PTR [edi]
  41dd18:	xor    eax,0x4694e1cb
  41dd1d:	int3   
  41dd1e:	mov    eax,0xae0a27b2
  41dd23:	jae    0x41dd4e
  41dd25:	bswap  ebp
  41dd27:	mov    al,ds:0x73d03ecd
  41dd2c:	mov    ?,WORD PTR [edi]
  41dd2e:	cli    
  41dd2f:	arpl   WORD PTR [ebp-0x42d3f477],bp
  41dd35:	repnz repnz mov al,ds:0xd2e4449d
  41dd3c:	js     0x41dd78
  41dd3e:	or     esp,DWORD PTR [edx-0x22]
  41dd41:	mov    BYTE PTR [ebx-0x4a],bh
  41dd44:	mov    bl,ah
  41dd46:	pop    ds
  41dd47:	pop    ebx
  41dd48:	cmp    ah,ah
  41dd4a:	cdq    
  41dd4b:	dec    edi
  41dd4c:	sahf   
  41dd4d:	(bad)  
  41dd4f:	sbb    eax,0xf386c886
  41dd54:	xchg   edi,eax
  41dd55:	outs   dx,BYTE PTR ds:[esi]
  41dd56:	adc    edx,DWORD PTR [edx-0x3839db30]
  41dd5c:	mov    edx,0x553c8331
  41dd61:	sbb    esp,edx
  41dd63:	dec    edx
  41dd64:	sub    ah,BYTE PTR ds:0xfdd7ec19
  41dd6a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dd6b:	sub    BYTE PTR [esi+0x4d],ah
  41dd6e:	or     ebp,DWORD PTR [eax-0x4fde52e0]
  41dd74:	dec    esp
  41dd75:	aam    0x82
  41dd77:	retf   
  41dd78:	mov    al,ds:0x978276b0
  41dd7d:	mov    dh,0x5c
  41dd7f:	xchg   ecx,eax
  41dd80:	sbb    DWORD PTR [eax-0x7b85793c],edx
  41dd86:	inc    edi
  41dd87:	and    BYTE PTR [esp+esi*2],bl
  41dd8a:	jbe    0x41dd92
  41dd8c:	jmp    0x41dd37
  41dd8e:	cmp    DWORD PTR [edi],0x51045c5b
  41dd94:	das    
  41dd95:	lods   eax,DWORD PTR ds:[esi]
  41dd96:	or     BYTE PTR [edi+0x23],ah
  41dd99:	mov    es:0xc944d326,al
  41dd9f:	lods   eax,DWORD PTR ds:[esi]
  41dda0:	cmp    ah,dl
  41dda2:	push   ds
  41dda3:	stos   DWORD PTR es:[edi],eax
  41dda4:	outs   dx,BYTE PTR ds:[esi]
  41dda5:	cdq    
  41dda6:	iret   
  41dda7:	imul   edi,DWORD PTR [ecx-0x45],0xf3d4f274
  41ddae:	push   ebp
  41ddaf:	jmp    0x1b30:0x15d1f43d
  41ddb6:	or     al,0x9
  41ddb8:	ss pop ss
  41ddba:	sar    ch,1
  41ddbc:	or     al,0x7
  41ddbe:	jo     0x41dd40
  41ddc0:	and    eax,0x101761ad
  41ddc5:	push   0x63c6404a
  41ddca:	mov    ebx,0xbfd16130
  41ddcf:	outs   dx,BYTE PTR ds:[esi]
  41ddd0:	hlt    
  41ddd1:	mov    dl,0xd8
  41ddd3:	jae    0x41ddce
  41ddd5:	sub    BYTE PTR [ebx],ch
  41ddd7:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ddd9:	adc    BYTE PTR [esi-0xa],ah
  41dddc:	data16 and dh,BYTE PTR [ebp-0x3b]
  41dde0:	dec    esp
  41dde1:	add    DWORD PTR [ebx+0x78],0x61324830
  41dde8:	(bad)  
  41dde9:	ja     0x41de22
  41ddeb:	push   ds
  41ddec:	scas   eax,DWORD PTR es:[edi]
  41dded:	sbb    al,0x7a
  41ddef:	retf   0x15c3
  41ddf2:	stc    
  41ddf3:	mov    eax,0x8d714e23
  41ddf8:	mov    WORD PTR [esi+0x114a82a3],?
  41ddfe:	sub    DWORD PTR [edi+0x4a8e93dd],edi
  41de04:	ret    
  41de05:	jno    0x41de6b
  41de07:	mov    dh,bh
  41de09:	pop    ebx
  41de0a:	cmp    al,0x24
  41de0c:	loopne 0x41de04
  41de0e:	(bad)  
  41de0f:	sar    BYTE PTR [edi-0x14ab21ce],1
  41de15:	add    DWORD PTR [edx-0x41ff56a],ecx
  41de1b:	fld    st(7)
  41de1d:	hlt    
  41de1e:	dec    esi
  41de1f:	fbld   TBYTE PTR [eax+0x68]
  41de22:	inc    edx
  41de23:	inc    edx
  41de24:	sahf   
  41de25:	(bad)  [esi+ebp*4+0x11]
  41de29:	repz ds sar esi,1
  41de2d:	cmp    al,dl
  41de2f:	add    dl,bh
  41de31:	push   ds
  41de32:	and    al,0x39
  41de34:	mov    esi,fs
  41de36:	mov    ecx,0xca96ed96
  41de3b:	or     eax,0xc3af770f
  41de40:	seta   cl
  41de43:	or     ecx,esi
  41de45:	fdiv   DWORD PTR [esi+0x1bb93f1b]
  41de4b:	hlt    
  41de4c:	in     eax,0x8
  41de4e:	aaa    
  41de4f:	in     al,0x45
  41de51:	bound  edi,QWORD PTR ds:0xc08f566d
  41de57:	xchg   edi,eax
  41de58:	sar    DWORD PTR [ecx-0x59],cl
  41de5b:	mov    si,WORD PTR [ebp+0x38]
  41de5f:	dec    edi
  41de60:	retf   
  41de61:	cdq    
  41de62:	loop   0x41de2b
  41de64:	add    al,BYTE PTR [edi*2-0x297d1884]
  41de6b:	jae    0x41ded4
  41de6d:	rol    BYTE PTR [edi],cl
  41de6f:	bound  edx,QWORD PTR [ebx+0x357b1d75]
  41de75:	push   ss
  41de76:	fwait
  41de77:	add    BYTE PTR [ecx+0x18],bl
  41de7a:	test   BYTE PTR [ebx],bl
  41de7c:	pop    ebx
  41de7d:	jl     0x41de1f
  41de7f:	jae    0x41dec1
  41de81:	dec    eax
  41de82:	xchg   edx,eax
  41de83:	add    DWORD PTR [ecx+0x53],ebx
  41de86:	pop    es
  41de87:	sbb    BYTE PTR [ecx],0x7b
  41de8a:	hlt    
  41de8b:	push   edi
  41de8c:	sub    eax,0xffe4843d
  41de91:	sbb    BYTE PTR [eax-0x47300ec8],cl
  41de97:	mov    edi,0x546dc69f
  41de9c:	xor    DWORD PTR [edx],ebx
  41de9e:	or     DWORD PTR [edi+0x13],edi
  41dea1:	jae    0x41de9a
  41dea3:	fdivr  st(6),st
  41dea5:	inc    ecx
  41dea6:	popa   
  41dea7:	mov    edi,0x497423f7
  41deac:	mov    bl,0x9b
  41deae:	push   eax
  41deaf:	rcr    BYTE PTR [eax+0x4bdf1566],cl
  41deb5:	pop    esi
  41deb6:	jle    0x41de9b
  41deb8:	out    dx,eax
  41deb9:	imul   edx,DWORD PTR [edi-0x24c9204a],0x25e745c6
  41dec3:	or     dh,ch
  41dec5:	xchg   esp,eax
  41dec6:	aaa    
  41dec7:	mov    dl,0x83
  41dec9:	fidiv  WORD PTR [esi+edi*2+0x46]
  41decd:	dec    ebx
  41dece:	icebp  
  41decf:	(bad)  ds:0xbf327345
  41ded5:	xchg   ebx,eax
  41ded6:	lods   al,BYTE PTR ds:[esi]
  41ded7:	pop    esp
  41ded8:	sti    
  41ded9:	call   0x7b6a52d4
  41dede:	sbb    BYTE PTR [edx+0x40c5f774],ah
  41dee4:	sbb    BYTE PTR [edx],cl
  41dee6:	mov    ebx,DWORD PTR ds:0x3e43c3d
  41deec:	mov    eax,0x91220ebd
  41def1:	push   es
  41def2:	hlt    
  41def3:	scas   al,BYTE PTR es:[edi]
  41def4:	jle    0x41de96
  41def6:	in     al,dx
  41def7:	push   0x60
  41def9:	repz sub esi,DWORD PTR [esi]
  41defc:	call   0xea21c156
  41df01:	sbb    esp,DWORD PTR [ebx]
  41df03:	and    BYTE PTR fs:[edi-0x314af17c],0xa1
  41df0b:	jo     0x41de98
  41df0d:	sub    DWORD PTR [ebx-0x27e2d693],0x77
  41df14:	out    0xb4,eax
  41df16:	adc    BYTE PTR [eax],0xae
  41df19:	jo     0x41df95
  41df1b:	adc    DWORD PTR [ebx-0x4e7e415c],0x4d
  41df22:	int    0x1b
  41df24:	(bad)  
  41df25:	xchg   edi,eax
  41df26:	nop
  41df27:	add    DWORD PTR [edx-0x5b],ebp
  41df2a:	fcmovnb st,st(0)
  41df2c:	mov    ds:0x98552fc6,eax
  41df31:	mov    esi,0xdd8db167
  41df36:	imul   edx,edx,0x87ebbd67
  41df3c:	loopne 0x41df6c
  41df3e:	fwait
  41df3f:	cs cmp edx,ebx
  41df42:	sbb    DWORD PTR [eax],ecx
  41df44:	adc    edi,ebp
  41df46:	adc    bh,ah
  41df48:	fwait
  41df49:	dec    edi
  41df4a:	nop
  41df4b:	rcr    BYTE PTR [esi-0x77],cl
  41df4e:	(bad)  
  41df50:	inc    edi
  41df51:	lds    ecx,FWORD PTR [eax]
  41df53:	loope  0x41df6f
  41df55:	(bad)  
  41df56:	imul   eax
  41df58:	ret    
  41df59:	ss xchg eax,eax
  41df5c:	lds    esi,FWORD PTR ds:[esi+0x7d874356]
  41df63:	fild   WORD PTR [eax]
  41df65:	adc    al,0x9
  41df67:	ficom  WORD PTR [ecx+ecx*1]
  41df6a:	sub    al,0x41
  41df6c:	cmp    eax,0xb04f40f3
  41df71:	test   BYTE PTR [esp+ebx*4-0x79],al
  41df75:	pop    edx
  41df76:	sbb    al,0x80
  41df78:	hlt    
  41df79:	stos   DWORD PTR es:[edi],eax
  41df7a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41df7b:	pop    ss
  41df7c:	in     eax,0x13
  41df7e:	popf   
  41df7f:	out    dx,al
  41df80:	xor    al,0xb5
  41df82:	sti    
  41df83:	and    cl,BYTE PTR [ecx*4+0x78fd3435]
  41df8a:	sub    al,0x90
  41df8c:	data16 arpl WORD PTR [ebx-0x1c7b11fd],si
  41df93:	xchg   DWORD PTR [ecx-0x2407f395],eax
  41df99:	dec    ebx
  41df9a:	inc    esi
  41df9b:	sahf   
  41df9c:	(bad)  
  41df9d:	sbb    DWORD PTR [eax+ebx*2-0xa592336],esi
  41dfa4:	mov    cl,0xb0
  41dfa6:	fmulp  st(1),st
  41dfa8:	in     al,0xac
  41dfaa:	mov    ds:0xa150e8df,eax
  41dfaf:	mov    DWORD PTR [edi+0x40],ebp
  41dfb2:	in     al,dx
  41dfb3:	clc    
  41dfb4:	sub    ch,cl
  41dfb6:	push   edx
  41dfb7:	sbb    eax,0x934c2c15
  41dfbc:	ja     0x41dfb6
  41dfbe:	jbe    0x41dfe1
  41dfc0:	inc    ebx
  41dfc1:	je     0x41dff9
  41dfc3:	fwait
  41dfc4:	add    al,0xbb
  41dfc6:	loopne 0x41df75
  41dfc8:	xor    esi,edx
  41dfca:	cmp    eax,0x230e0463
  41dfcf:	mov    al,0x70
  41dfd1:	dec    eax
  41dfd2:	adc    ebp,DWORD PTR [edi+0x35]
  41dfd5:	ret    0xd470
  41dfd8:	mov    ds:0x82378490,eax
  41dfdd:	mov    dh,0x73
  41dfdf:	xor    cl,BYTE PTR [ebx]
  41dfe1:	call   0xa9a:0x507dc4d4
  41dfe8:	aaa    
  41dfe9:	pop    ds
  41dfea:	jne    0x41df7f
  41dfec:	mov    al,0x74
  41dfee:	inc    eax
  41dfef:	and    esp,0xffffffb5
  41dff2:	add    BYTE PTR [esi],0xc2
  41dff5:	sbb    eax,0x9edfedf9
  41dffa:	jg     0x41dff1
  41dffc:	lock xchg ecx,eax
  41dffe:	pop    ebp
  41dfff:	rcl    DWORD PTR [ebx],cl
  41e001:	xor    BYTE PTR [esi+0x15],dl
  41e004:	xchg   esi,ebp
  41e006:	sub    BYTE PTR [eax-0xe],dl
  41e009:	stos   BYTE PTR es:[edi],al
  41e00a:	cli    
  41e00b:	jb     0x41dfe7
  41e00d:	adc    dl,dl
  41e00f:	loope  0x41e02d
  41e011:	add    ah,BYTE PTR [ebx+ebx*8+0x3f9b0488]
  41e018:	mov    eax,DWORD PTR [eax]
  41e01a:	ja     0x41e091
  41e01c:	push   0x4d
  41e01e:	adc    al,0xd8
  41e020:	loopne 0x41e03e
  41e022:	push   0x2a
  41e024:	idiv   ebx
  41e026:	inc    ebx
  41e027:	xchg   esp,eax
  41e028:	add    BYTE PTR [esi+eax*1-0x2e],dh
  41e02c:	sbb    al,0xd4
  41e02e:	loop   0x41e042
  41e030:	fld    QWORD PTR [edx+0x50]
  41e033:	and    BYTE PTR [edi-0x62],ch
  41e036:	and    eax,DWORD PTR ds:0x9bb93dd4
  41e03c:	xor    edx,ebx
  41e03e:	jp     0x41dfe9
  41e040:	popa   
  41e041:	cld    
  41e042:	(bad)  
  41e043:	sub    al,0x3c
  41e045:	repz mov al,BYTE PTR [ecx+ecx*1-0x47]
  41e04a:	outs   dx,BYTE PTR ds:[esi]
  41e04b:	lock jnp 0x41e03d
  41e04e:	mov    esp,ecx
  41e050:	or     ecx,esi
  41e052:	popa   
  41e053:	push   ebp
  41e054:	fld    QWORD PTR [eax]
  41e056:	xor    BYTE PTR [edi-0x111521c5],bl
  41e05c:	xor    eax,0xde8f353a
  41e061:	mov    WORD PTR [edi+0x5691a5b6],gs
  41e067:	jns    0x41dffc
  41e069:	inc    edi
  41e06a:	add    eax,0x68dd6926
  41e06f:	sub    DWORD PTR [ecx-0x7ded3b29],ebp
  41e075:	mov    al,ds:0x34124c00
  41e07a:	sub    bh,BYTE PTR [edi]
  41e07c:	jle    0x41e036
  41e07e:	pop    ebx
  41e07f:	lock mov WORD PTR [edx],ss
  41e082:	adc    eax,0xbfc50aa1
  41e087:	jle    0x41e071
  41e089:	dec    edi
  41e08a:	sbb    eax,0xde5321c3
  41e08f:	ror    BYTE PTR [ecx],cl
  41e091:	out    dx,al
  41e092:	jmp    0xc981207c
  41e097:	xchg   edx,eax
  41e098:	xor    eax,0x3bf2b9e3
  41e09d:	or     DWORD PTR [edi-0x41],eax
  41e0a0:	dec    esi
  41e0a1:	mov    ds:0xaded7849,eax
  41e0a6:	sub    DWORD PTR [ecx],ebp
  41e0a8:	sbb    DWORD PTR [edx],edi
  41e0aa:	jbe    0x41e0a7
  41e0ac:	les    edi,FWORD PTR ds:0xb0d36940
  41e0b2:	lods   eax,DWORD PTR ds:[esi]
  41e0b3:	inc    edi
  41e0b4:	or     esi,DWORD PTR [ebx+0x2b]
  41e0b7:	test   eax,0xe1d12b44
  41e0bc:	bound  edx,QWORD PTR [eax+0x2c3eb16]
  41e0c2:	scas   eax,DWORD PTR es:[edi]
  41e0c3:	les    eax,FWORD PTR [edi-0x17e966a9]
  41e0c9:	jbe    0x41e0c9
  41e0cb:	mov    DWORD PTR [edx],ebx
  41e0cd:	and    BYTE PTR [ebx-0x2d],cl
  41e0d0:	inc    ebp
  41e0d1:	fs cdq 
  41e0d3:	mov    cl,0x6a
  41e0d5:	std    
  41e0d6:	dec    edx
  41e0d7:	inc    edx
  41e0d8:	dec    ebx
  41e0d9:	xchg   ecx,eax
  41e0da:	add    edi,DWORD PTR [edi-0x3d]
  41e0dd:	inc    edx
  41e0de:	mov    bh,0x9
  41e0e0:	scas   eax,DWORD PTR es:[edi]
  41e0e1:	lods   al,BYTE PTR ds:[esi]
  41e0e2:	or     ebp,DWORD PTR [eax+0x1e]
  41e0e5:	stos   BYTE PTR es:[edi],al
  41e0e6:	mov    ch,0x23
  41e0e8:	add    BYTE PTR [esi-0x648872e7],dh
  41e0ee:	cmp    eax,0x6ea57901
  41e0f3:	push   ecx
  41e0f4:	ret    
  41e0f5:	cld    
  41e0f6:	pop    esp
  41e0f7:	jb     0x41e0cf
  41e0f9:	mov    ecx,0x13c26b47
  41e0fe:	(bad)  
  41e100:	cmp    al,0xfe
  41e102:	dec    ecx
  41e103:	int3   
  41e104:	(bad)  
  41e105:	pushf  
  41e106:	int    0x43
  41e108:	sahf   
  41e109:	sub    bl,BYTE PTR [edx+0x64]
  41e10c:	cld    
  41e10d:	(bad)  
  41e10e:	xor    al,0x1
  41e110:	stos   BYTE PTR es:[edi],al
  41e111:	pop    es
  41e112:	dec    eax
  41e113:	push   esi
  41e114:	outs   dx,BYTE PTR ds:[esi]
  41e115:	dec    esi
  41e116:	retf   0xf3fb
  41e119:	jb     0x41e17c
  41e11b:	add    DWORD PTR [edx],edx
  41e11d:	loope  0x41e175
  41e11f:	push   edi
  41e120:	mov    ah,0x87
  41e122:	dec    ebp
  41e123:	or     DWORD PTR [eax-0x7f],0x10
  41e127:	pop    ebp
  41e128:	pop    es
  41e129:	sahf   
  41e12a:	push   edx
  41e12b:	(bad)  
  41e12c:	retf   
  41e12d:	jle    0x41e119
  41e12f:	and    ch,bh
  41e131:	inc    esi
  41e132:	jecxz  0x41e0bb
  41e134:	jg     0x41e12d
  41e136:	stos   DWORD PTR es:[edi],eax
  41e137:	sub    al,0xa8
  41e139:	clc    
  41e13a:	jl     0x41e0ce
  41e13c:	and    DWORD PTR [ebx+eax*4-0xdc80dce],edx
  41e143:	xchg   ecx,ecx
  41e145:	pop    ebp
  41e146:	imul   edx,DWORD PTR [ecx-0x29],0x7dafae9e
  41e14d:	rol    BYTE PTR [ebp-0x7c],1
  41e150:	retf   0x8af1
  41e153:	dec    ecx
  41e154:	xor    ecx,DWORD PTR [ebp+0xc11cc18]
  41e15a:	test   eax,0x444ad380
  41e15f:	sti    
  41e160:	inc    esp
  41e161:	sub    BYTE PTR [edi],dl
  41e163:	xchg   ebx,eax
  41e164:	neg    DWORD PTR [edi+0x62024aba]
  41e16a:	mov    al,ds:0xcbca5136
  41e16f:	jmp    0xbe2f21aa
  41e174:	call   FWORD PTR [edi+0x7b37bdde]
  41e17a:	mov    cs,WORD PTR [ebx-0x3eb9f2b5]
  41e180:	sar    DWORD PTR [esp+edi*1-0x55],cl
  41e184:	push   ds
  41e185:	cmc    
  41e186:	inc    ecx
  41e187:	xchg   edi,eax
  41e188:	mov    esi,0x87ff42da
  41e18d:	test   al,0xab
  41e18f:	mov    eax,ds:0x28517bf8
  41e194:	push   esi
  41e195:	jmp    0x41e1fe
  41e197:	mov    bh,0x69
  41e199:	mov    bh,0x74
  41e19b:	or     esi,DWORD PTR [eax+ebx*4-0x3e4bd006]
  41e1a2:	inc    edi
  41e1a3:	aam    0x6c
  41e1a5:	(bad)  
  41e1a6:	mov    ebx,0x11bf3065
  41e1ab:	sbb    cl,BYTE PTR [esi]
  41e1ad:	and    BYTE PTR ds:[ecx+0x37],cl
  41e1b1:	call   0x2d608fea
  41e1b6:	sub    al,0x35
  41e1b8:	mov    dh,0x12
  41e1ba:	es pop ebx
  41e1bc:	xchg   BYTE PTR [eax+0x2acd2b4b],bh
  41e1c2:	mov    al,ds:0x26f0757f
  41e1c7:	dec    esi
  41e1c8:	popa   
  41e1c9:	ror    BYTE PTR [ebx-0x62],0x6c
  41e1cd:	test   al,0xaa
  41e1cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e1d0:	and    al,0x59
  41e1d2:	and    eax,0x76800e98
  41e1d7:	push   ds
  41e1d8:	sahf   
  41e1d9:	adc    bl,BYTE PTR [esi]
  41e1db:	enter  0xa2cd,0x88
  41e1df:	scas   al,BYTE PTR es:[edi]
  41e1e0:	test   eax,0xd077e1f8
  41e1e5:	adc    eax,0xff6e6595
  41e1ea:	push   ds
  41e1eb:	sahf   
  41e1ec:	dec    ebp
  41e1ed:	jo     0x41e239
  41e1ef:	sbb    DWORD PTR [esi+0x22],esp
  41e1f2:	ja     0x41e245
  41e1f4:	shl    DWORD PTR [eax-0x5d],0xc8
  41e1f8:	xchg   esi,eax
  41e1f9:	ret    
  41e1fa:	xchg   esi,eax
  41e1fb:	pop    ebp
  41e1fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e1fd:	mov    eax,edx
  41e1ff:	xor    eax,0xb192ff6f
  41e204:	mov    esp,0xa8870a7a
  41e209:	sbb    al,0xb7
  41e20b:	adc    esi,DWORD PTR [eax-0xcfc28a]
  41e211:	or     cl,BYTE PTR [edx+0x5f]
  41e214:	sbb    dh,cl
  41e216:	or     eax,0xa1d66d1
  41e21b:	sub    DWORD PTR [ecx-0x37639391],0xffffff86
  41e222:	xor    ebx,ecx
  41e224:	sbb    BYTE PTR [ecx],bh
  41e226:	mov    esp,0x95c7fef3
  41e22b:	xchg   BYTE PTR [ecx],bh
  41e22d:	push   ebp
  41e22e:	xor    BYTE PTR [ecx],0x67
  41e231:	ret    
  41e232:	(bad)  
  41e233:	mov    bl,0x1e
  41e235:	in     al,dx
  41e236:	sub    ch,BYTE PTR [ecx+0x7a]
  41e239:	out    0x9f,eax
  41e23b:	cdq    
  41e23c:	cwde   
  41e23d:	pop    ebp
  41e23e:	(bad)  
  41e240:	out    dx,al
  41e241:	jno    0x41e1d7
  41e243:	lods   al,BYTE PTR ds:[esi]
  41e244:	loopne 0x41e201
  41e246:	push   cs
  41e247:	adc    al,0x7
  41e249:	iret   
  41e24a:	fs in  al,0xa6
  41e24d:	popf   
  41e24e:	ret    
  41e24f:	lds    ecx,FWORD PTR [ebp+0x10]
  41e252:	jecxz  0x41e242
  41e254:	or     BYTE PTR [esi-0x4b],cl
  41e257:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e259:	xchg   ebp,eax
  41e25a:	je     0x41e22a
  41e25c:	lock jb 0x41e221
  41e25f:	push   0xffffffce
  41e261:	cld    
  41e262:	mov    gs,ebp
  41e264:	aaa    
  41e265:	dec    ebx
  41e266:	clc    
  41e267:	sar    DWORD PTR [esi],cl
  41e269:	lods   al,BYTE PTR ds:[esi]
  41e26a:	fninit 
  41e26c:	pop    ebp
  41e26d:	je     0x41e25e
  41e26f:	sbb    al,0x30
  41e271:	push   ds
  41e272:	lods   eax,DWORD PTR ds:[esi]
  41e273:	adc    ecx,DWORD PTR [ecx-0x77]
  41e276:	mov    cl,0x26
  41e278:	(bad)  
  41e279:	test   al,0x59
  41e27b:	cwde   
  41e27c:	jae    0x41e230
  41e27e:	cmp    ebp,edi
  41e280:	push   edi
  41e281:	or     dh,0xbb
  41e284:	sbb    esi,DWORD PTR [edi]
  41e286:	jmp    0x337d:0xec3d2c39
  41e28d:	lahf   
  41e28e:	push   ecx
  41e28f:	loopne 0x41e218
  41e291:	in     eax,dx
  41e292:	call   DWORD PTR [edx]
  41e294:	pop    ss
  41e295:	xor    ah,BYTE PTR [eax-0xe]
  41e298:	adc    BYTE PTR [ebx+0x287890aa],bh
  41e29e:	mul    BYTE PTR [ebp+0x45]
  41e2a1:	xchg   ecx,eax
  41e2a2:	pop    es
  41e2a3:	jmp    DWORD PTR [eax-0x3e]
  41e2a6:	mov    eax,ds:0x5197330d
  41e2ab:	dec    esi
  41e2ac:	pop    edi
  41e2ad:	ffree  st(3)
  41e2af:	inc    ebx
  41e2b0:	imul   BYTE PTR [edi+0x7a]
  41e2b3:	or     edx,ebp
  41e2b5:	test   eax,0x25029221
  41e2ba:	call   0x6185:0x7fc2506e
  41e2c1:	lods   eax,DWORD PTR ds:[esi]
  41e2c2:	(bad)  
  41e2c3:	(bad)  
  41e2c4:	cmp    ebx,DWORD PTR [esi+esi*1+0x5d]
  41e2c8:	(bad)  
  41e2c9:	pop    ss
  41e2ca:	xchg   edi,eax
  41e2cb:	sbb    BYTE PTR [ebp-0x2a758255],al
  41e2d1:	repz mov edx,0x7c07e08f
  41e2d7:	clc    
  41e2d8:	jmp    0xe6b78a24
  41e2dd:	dec    esp
  41e2de:	rol    bl,0xde
  41e2e1:	lods   al,BYTE PTR ds:[esi]
  41e2e2:	jbe    0x41e342
  41e2e4:	jb     0x41e2b0
  41e2e6:	mov    ebp,DWORD PTR [edx-0x34]
  41e2e9:	cld    
  41e2ea:	call   FWORD PTR [ebx]
  41e2ec:	lea    ebp,[eax]
  41e2ee:	push   ds
  41e2ef:	cmp    al,0xc2
  41e2f1:	cmp    cl,ch
  41e2f3:	inc    ecx
  41e2f4:	sbb    edi,edi
  41e2f6:	mov    ch,0x2f
  41e2f8:	mov    esp,DWORD PTR [edx+0x3]
  41e2fb:	push   cs
  41e2fc:	xor    eax,0x8795415d
  41e301:	push   ebx
  41e302:	jae    0x41e2eb
  41e304:	aaa    
  41e305:	adc    cl,BYTE PTR [ebp+0x9]
  41e308:	xchg   ecx,eax
  41e309:	sub    BYTE PTR [ebp-0x1e],dh
  41e30c:	iret   
  41e30d:	xchg   esi,eax
  41e30e:	nop
  41e30f:	outs   dx,BYTE PTR ds:[esi]
  41e310:	sar    DWORD PTR [ebx+0x72],1
  41e313:	add    ah,cl
  41e315:	xchg   DWORD PTR [esi+0x431f758],edx
  41e31b:	aaa    
  41e31c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e31d:	fstp   TBYTE PTR [edx]
  41e31f:	dec    edi
  41e320:	ins    BYTE PTR es:[edi],dx
  41e321:	push   0xffffffba
  41e323:	mov    ?,WORD PTR [eax-0x3f507f33]
  41e329:	enter  0xf836,0x5b
  41e32d:	hlt    
  41e32e:	add    edi,ebp
  41e330:	bound  ebp,QWORD PTR [esi+0xf]
  41e333:	(bad)  
  41e334:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e335:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e336:	xor    dl,BYTE PTR [ebx]
  41e338:	cli    
  41e339:	cmp    al,0xc4
  41e33b:	sbb    eax,0x1936db8
  41e340:	int    0x54
  41e342:	in     eax,dx
  41e343:	add    dh,ah
  41e345:	fsubr  st,st(1)
  41e347:	repnz adc DWORD PTR ds:0x90afd53c,0xffffffd7
  41e34f:	mov    esp,0xeed58063
  41e354:	(bad)  
  41e355:	pop    ebx
  41e356:	mov    DWORD PTR [ebx],esp
  41e358:	rcl    DWORD PTR [ecx+0x45298a24],0x60
  41e35f:	in     al,dx
  41e360:	and    DWORD PTR [eax-0x484e2252],edx
  41e366:	shr    BYTE PTR [esi],cl
  41e368:	mov    ds:0x89691373,eax
  41e36d:	shr    BYTE PTR [edx+edi*4],cl
  41e370:	test   al,0x30
  41e372:	ds test al,0x92
  41e375:	clc    
  41e376:	xor    BYTE PTR [eax+0x6d4dad6e],bl
  41e37c:	sbb    eax,0x7bb98162
  41e381:	js     0x41e339
  41e383:	mov    edi,DWORD PTR [edi]
  41e385:	push   ecx
  41e386:	mov    al,ds:0xf3e903c
  41e38b:	cdq    
  41e38c:	push   esi
  41e38d:	test   DWORD PTR [ecx-0x4a488aad],0x3f5c3292
  41e397:	mov    ecx,0x380d7782
  41e39c:	ret    
  41e39d:	and    ch,al
  41e39f:	sbb    al,0x1c
  41e3a1:	es stos BYTE PTR es:[edi],al
  41e3a3:	sbb    ebx,DWORD PTR [ebx]
  41e3a5:	int    0xfb
  41e3a7:	cs cmp al,0x14
  41e3aa:	shl    BYTE PTR [eax],0x8
  41e3ad:	fcomp  QWORD PTR [ecx]
  41e3af:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  41e3b1:	(bad)
  41e3b5:	and    al,0x43
  41e3b7:	and    ebp,DWORD PTR [eax+0x75bfbd7d]
  41e3bd:	aaa    
  41e3be:	dec    esp
  41e3bf:	ret    0x6576
  41e3c2:	mov    cl,dl
  41e3c4:	xchg   ebx,eax
  41e3c5:	cmp    eax,0x3b73a22d
  41e3ca:	repz fs pop es
  41e3cd:	dec    eax
  41e3ce:	fwait
  41e3cf:	adc    al,0x50
  41e3d1:	pop    ecx
  41e3d2:	inc    edi
  41e3d3:	xor    edx,edx
  41e3d5:	stos   BYTE PTR es:[edi],al
  41e3d6:	sbb    al,0x47
  41e3d8:	push   0xfffffffa
  41e3da:	add    DWORD PTR [esi+edx*8+0x6b],edi
  41e3de:	lods   eax,DWORD PTR ds:[esi]
  41e3df:	retf   0xf656
  41e3e2:	mov    DWORD PTR [edi+0x6aed1871],edx
  41e3e8:	bnd jge 0x41e36f
  41e3eb:	in     al,dx
  41e3ec:	mov    esp,0x21bb9912
  41e3f1:	ins    DWORD PTR es:[edi],dx
  41e3f2:	daa    
  41e3f3:	mov    dl,0x41
  41e3f5:	lds    ecx,FWORD PTR [ebp-0x26]
  41e3f8:	ja     0x41e405
  41e3fa:	push   0x3e5c4d47
  41e3ff:	test   eax,0xa9f33796
  41e404:	enter  0xc40b,0xac
  41e408:	pusha  
  41e409:	pop    edx
  41e40a:	push   0xf
  41e40c:	xor    eax,0x8eada229
  41e411:	ret    
  41e412:	pop    edi
  41e413:	ret    0xbbf6
  41e416:	test   eax,0x983ae50d
  41e41b:	xchg   ebx,eax
  41e41c:	popf   
  41e41d:	rol    BYTE PTR [ecx],1
  41e41f:	mov    bl,0x54
  41e421:	dec    ebx
  41e422:	cld    
  41e423:	test   al,0xc2
  41e425:	jg     0x41e48e
  41e427:	pop    edi
  41e428:	xlat   BYTE PTR ds:[ebx]
  41e429:	les    ecx,FWORD PTR [ecx+0x3a]
  41e42c:	push   cs
  41e42d:	lds    eax,FWORD PTR [ebp+0x20]
  41e430:	sbb    eax,DWORD PTR [ebx+0x3]
  41e433:	enter  0xc64e,0xa2
  41e437:	call   0xd4fc:0xf243321e
  41e43e:	jge    0x41e4b3
  41e440:	loope  0x41e482
  41e442:	cmp    DWORD PTR [edx+0x42],ecx
  41e445:	push   es
  41e446:	adc    ah,BYTE PTR [ecx+0x689203c7]
  41e44c:	cmp    al,0x18
  41e44e:	mov    al,ds:0xd32d3554
  41e453:	mov    cl,BYTE PTR [ebp-0xc]
  41e456:	sbb    al,0xdb
  41e458:	(bad)
  41e45c:	pusha  
  41e45d:	sbb    ah,BYTE PTR [esi-0x65]
  41e460:	mov    ecx,0x5474e629
  41e465:	dec    esp
  41e466:	pop    eax
  41e467:	pop    eax
  41e468:	mov    eax,ds:0xf3fbf56e
  41e46d:	xchg   esi,eax
  41e46e:	and    cl,BYTE PTR [ecx-0x73dea42d]
  41e474:	sub    esi,esp
  41e476:	inc    esi
  41e477:	sbb    BYTE PTR [ebx-0x539015bf],cl
  41e47d:	dec    edx
  41e47e:	(bad)  
  41e47f:	sub    eax,edi
  41e481:	xor    cl,bl
  41e483:	popa   
  41e484:	retf   
  41e485:	daa    
  41e486:	test   eax,0xc7b4c18a
  41e48b:	int3   
  41e48c:	pop    edx
  41e48d:	cmp    bl,ch
  41e48f:	pop    esp
  41e490:	fs and al,0xfa
  41e493:	cmp    ebp,edi
  41e495:	xor    al,0x27
  41e497:	scas   eax,DWORD PTR es:[edi]
  41e498:	pop    eax
  41e499:	push   es
  41e49a:	test   eax,0xb46d3d23
  41e49f:	(bad)  
  41e4a0:	repz xchg ebp,eax
  41e4a2:	les    ebp,FWORD PTR [eax]
  41e4a4:	and    ebp,ebx
  41e4a6:	mov    esp,0xd76724ed
  41e4ab:	mov    eax,0x52cab1e0
  41e4b0:	or     BYTE PTR [ebp-0x2e],ah
  41e4b3:	dec    esi
  41e4b4:	adc    DWORD PTR [edi-0x580095c7],0xbe8c06b0
  41e4be:	shl    BYTE PTR [esp+eax*1+0x7c],cl
  41e4c2:	mov    esi,0x78781736
  41e4c7:	xchg   ecx,eax
  41e4c8:	mov    bl,0x76
  41e4ca:	add    ecx,edi
  41e4cc:	adc    dh,BYTE PTR [esi-0x43]
  41e4cf:	inc    eax
  41e4d0:	stos   DWORD PTR es:[edi],eax
  41e4d1:	addr16 pusha 
  41e4d3:	cmp    BYTE PTR [ebx],al
  41e4d5:	push   cs
  41e4d6:	shl    dh,cl
  41e4d8:	push   ds
  41e4d9:	and    bl,bh
  41e4db:	rol    BYTE PTR [edx+ebp*4],1
  41e4de:	or     BYTE PTR [edx],0xa4
  41e4e1:	std    
  41e4e2:	outs   dx,BYTE PTR ds:[esi]
  41e4e3:	adc    BYTE PTR [esi+0x1f],dl
  41e4e6:	fs clc 
  41e4e8:	shl    DWORD PTR [ecx],0x39
  41e4eb:	xchg   esp,eax
  41e4ec:	iret   
  41e4ed:	repnz hlt 
  41e4ef:	or     esi,ebp
  41e4f1:	cdq    
  41e4f2:	ss sub bl,ah
  41e4f5:	xor    BYTE PTR [ebx+0x282ca8a7],ah
  41e4fb:	fwait
  41e4fc:	ret    0x57f0
  41e4ff:	sbb    dl,BYTE PTR [ebx+0x76]
  41e502:	sbb    DWORD PTR [edi+0x77],edx
  41e505:	addr16 mov ah,0x1f
  41e508:	sar    DWORD PTR [eax+0x45],0xed
  41e50c:	xchg   DWORD PTR [edx+0xb],esi
  41e50f:	iret   
  41e510:	xchg   edx,eax
  41e511:	jno    0x41e4c4
  41e513:	and    BYTE PTR [ecx],0xc3
  41e516:	mov    al,ds:0x69bc0c5
  41e51b:	sti    
  41e51c:	int3   
  41e51d:	aad    0x88
  41e51f:	fs into 
  41e521:	jne    0x41e597
  41e523:	jp     0x41e575
  41e525:	xchg   ecx,eax
  41e526:	jl     0x41e4c1
  41e528:	outs   dx,BYTE PTR ds:[esi]
  41e529:	js     0x41e566
  41e52b:	add    eax,edx
  41e52d:	repnz sub BYTE PTR [ecx+0x5],cl
  41e531:	push   0xb
  41e533:	jne    0x41e4d2
  41e535:	not    BYTE PTR [esi]
  41e537:	std    
  41e538:	cdq    
  41e539:	inc    DWORD PTR [edi+esi*8]
  41e53c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e53d:	les    eax,FWORD PTR [ebx-0x4d]
  41e540:	inc    esp
  41e541:	ror    BYTE PTR [ebx+0x2da72ebc],0x53
  41e548:	pop    edx
  41e549:	es adc eax,0x9841a72a
  41e54f:	cmp    bl,BYTE PTR [esi+0x32]
  41e552:	in     eax,dx
  41e553:	sbb    DWORD PTR [esi+0x1f],edx
  41e556:	iret   
  41e557:	dec    eax
  41e558:	adc    DWORD PTR [esp+ecx*2+0x3d],eax
  41e55c:	daa    
  41e55d:	jae    0x41e4f8
  41e55f:	(bad)  
  41e560:	adc    eax,ebp
  41e562:	shl    cl,0xc8
  41e565:	xor    eax,0xd6f98324
  41e56a:	cs push esi
  41e56c:	scas   eax,DWORD PTR es:[edi]
  41e56d:	sbb    al,0xc6
  41e56f:	xchg   DWORD PTR [eax-0x13],edi
  41e572:	mov    ecx,0x9a78158c
  41e577:	adc    ebx,ebx
  41e579:	dec    ebp
  41e57a:	cmp    esp,DWORD PTR [ebp-0x1d8814e6]
  41e580:	not    DWORD PTR [ebx-0x35]
  41e583:	in     al,dx
  41e584:	mov    bl,0xf
  41e586:	das    
  41e587:	jecxz  0x41e606
  41e589:	js     0x41e5e6
  41e58b:	ins    DWORD PTR es:[edi],dx
  41e58c:	(bad)  
  41e58d:	jecxz  0x41e605
  41e58f:	pusha  
  41e590:	nop
  41e591:	dec    ecx
  41e592:	aaa    
  41e593:	push   ebx
  41e594:	dec    edx
  41e595:	pop    esp
  41e596:	fild   QWORD PTR [ebx-0x66a4faa2]
  41e59c:	push   ss
  41e59d:	and    DWORD PTR [esi],eax
  41e59f:	cmp    al,0xba
  41e5a1:	adc    DWORD PTR [edx-0x3d],edi
  41e5a4:	pop    ebx
  41e5a5:	loop   0x41e560
  41e5a7:	fisubr DWORD PTR [edi]
  41e5a9:	mov    ebx,0x93442c9f
  41e5ae:	inc    ebp
  41e5af:	stos   BYTE PTR es:[edi],al
  41e5b0:	mov    bh,0x27
  41e5b2:	add    ah,BYTE PTR [ecx+0x1446b35b]
  41e5b8:	mov    edx,0xcc03cc1c
  41e5bd:	pop    edi
  41e5be:	jb     0x41e5b6
  41e5c0:	or     al,0x4d
  41e5c2:	arpl   WORD PTR [ecx-0x444568a],dx
  41e5c8:	and    eax,edi
  41e5ca:	mov    ch,0x18
  41e5cc:	daa    
  41e5cd:	mov    esp,0xa0201563
  41e5d2:	(bad)  
  41e5d3:	xchg   esp,eax
  41e5d4:	test   al,0x5
  41e5d6:	cmp    DWORD PTR [esi-0x60d03ace],eax
  41e5dc:	jmp    0xdbe1:0x9ae65c9e
  41e5e3:	jae    0x41e57b
  41e5e5:	mov    edx,?
  41e5e7:	(bad)  
  41e5e8:	sbb    eax,0x8dc61964
  41e5ed:	dec    esp
  41e5ee:	inc    ecx
  41e5ef:	mov    esi,0x2a339ec2
  41e5f4:	mov    dl,0x5d
  41e5f6:	jmp    0x10fd876e
  41e5fb:	shr    al,cl
  41e5fd:	shl    DWORD PTR [esi],cl
  41e5ff:	cmp    esi,esp
  41e601:	dec    edi
  41e602:	xchg   DWORD PTR [edi+0x57417e10],eax
  41e608:	fwait
  41e609:	icebp  
  41e60a:	mov    ecx,eax
  41e60c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e60d:	jno    0x41e5f1
  41e60f:	jae    0x41e60f
  41e611:	push   es
  41e612:	dec    ebp
  41e613:	jno    0x41e67d
  41e615:	push   ss
  41e616:	(bad)  
  41e617:	lods   al,BYTE PTR ds:[esi]
  41e618:	idiv   BYTE PTR [ebp+0x1f917386]
  41e61e:	sub    ebx,0xffffffc7
  41e621:	pop    edx
  41e622:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e623:	pop    edi
  41e624:	mov    eax,ds:0xa991bac9
  41e629:	push   ebp
  41e62a:	fisubr WORD PTR [ebp+0x46]
  41e62d:	aas    
  41e62e:	arpl   WORD PTR [eax+ebp*4],bx
  41e631:	call   0x4999c0c
  41e636:	dec    eax
  41e637:	xchg   esp,eax
  41e638:	jecxz  0x41e637
  41e63a:	stos   DWORD PTR es:[edi],eax
  41e63b:	mov    bl,0xce
  41e63d:	emms   
  41e63f:	or     bh,BYTE PTR [esi]
  41e641:	adc    ebp,ebx
  41e643:	test   ebx,eax
  41e645:	stc    
  41e646:	mov    bl,0x67
  41e648:	mov    dl,0xe0
  41e64a:	dec    edx
  41e64b:	and    cl,BYTE PTR [edx-0x13269a07]
  41e651:	cmp    esi,edi
  41e653:	pusha  
  41e654:	xchg   ebx,eax
  41e655:	mov    esp,0xd38c43d7
  41e65a:	mov    eax,ds:0x13f5af9b
  41e65f:	sbb    BYTE PTR [ebx-0x2d00da0c],dl
  41e665:	xor    eax,0x6a647fcc
  41e66a:	add    eax,0x619aa0b4
  41e66f:	retf   
  41e670:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  41e672:	mov    ch,0xc1
  41e674:	pop    ds
  41e675:	ja     0x41e602
  41e677:	pop    esi
  41e678:	hlt    
  41e679:	mov    eax,ds:0xfabed7b0
  41e67e:	add    DWORD PTR [ecx-0x11ce2e55],esp
  41e684:	daa    
  41e685:	loop   0x41e63a
  41e687:	add    DWORD PTR [ebx+0x77],0xbf19c12b
  41e68e:	mov    ch,BYTE PTR [ebx+0x45]
  41e691:	mov    dl,BYTE PTR [edi]
  41e693:	mov    ecx,0xcfae6bba
  41e698:	inc    edi
  41e699:	pop    ss
  41e69a:	mov    esp,0xc059aeff
  41e69f:	sahf   
  41e6a0:	pop    edi
  41e6a1:	out    0x40,al
  41e6a3:	out    dx,eax
  41e6a4:	mov    cl,BYTE PTR [ecx]
  41e6a6:	mov    gs,WORD PTR [eax]
  41e6a8:	cdq    
  41e6a9:	ja     0x41e697
  41e6ab:	pushf  
  41e6ac:	mov    cl,0x98
  41e6ae:	sbb    al,0x1a
  41e6b0:	adc    ch,cl
  41e6b2:	lods   eax,DWORD PTR ds:[esi]
  41e6b3:	jae    0x41e6bd
  41e6b5:	fisttp DWORD PTR ds:0x9935e4fc
  41e6bb:	in     eax,dx
  41e6bc:	push   es
  41e6bd:	enter  0x858a,0xff
  41e6c1:	add    BYTE PTR [eax-0x3322ff27],cl
  41e6c7:	mov    ds:0x7c43a06d,al
  41e6cc:	daa    
  41e6cd:	xor    eax,DWORD PTR [ebp-0x45586c4c]
  41e6d3:	adc    al,BYTE PTR [esi+0x79]
  41e6d6:	push   ss
  41e6d7:	sub    bh,BYTE PTR [edx-0x43]
  41e6da:	imul   ecx,DWORD PTR [ebx],0xf75751bc
  41e6e0:	xchg   esi,eax
  41e6e1:	cmp    eax,DWORD PTR ds:[ebx-0x7]
  41e6e5:	sbb    al,0xc7
  41e6e7:	jmp    0xde6d6e48
  41e6ec:	nop
  41e6ed:	test   al,0x83
  41e6ef:	pop    ebx
  41e6f0:	hlt    
  41e6f1:	(bad)  
  41e6f2:	sti    
  41e6f3:	loopne 0x41e6bb
  41e6f5:	and    al,BYTE PTR [edx]
  41e6f7:	into   
  41e6f8:	add    al,0xc4
  41e6fa:	and    al,0x8b
  41e6fc:	sub    eax,0xd5570cb
  41e701:	dec    edi
  41e702:	mov    cl,0x4
  41e704:	mov    ebx,0x740bfe55
  41e709:	stos   DWORD PTR es:[edi],eax
  41e70a:	adc    DWORD PTR [ecx+0x70],esp
  41e70d:	rcl    DWORD PTR [esi],0x2d
  41e710:	fstp   TBYTE PTR [ecx]
  41e712:	idiv   BYTE PTR [ecx-0x2ca0cb44]
  41e718:	sbb    DWORD PTR [ebp+0x2d03859a],eax
  41e71e:	xor    ebp,eax
  41e720:	xchg   DWORD PTR [ecx-0x3c123a73],esp
  41e726:	and    DWORD PTR [eax+0x11],0x77751ae
  41e72d:	xor    eax,0xb6cd32b2
  41e732:	xor    al,0xcb
  41e734:	retf   
  41e735:	mov    eax,0xfb39685a
  41e73a:	sbb    BYTE PTR [ebx+ecx*1+0x3729d385],bl
  41e741:	xor    esp,ebx
  41e743:	bound  edx,QWORD PTR [ebx]
  41e745:	pusha  
  41e746:	jmp    0xe7d2:0xd73bfc8c
  41e74d:	jbe    0x2e69afd
  41e753:	clc    
  41e754:	call   0x7270:0x84ff26f9
  41e75b:	push   ecx
  41e75c:	and    DWORD PTR [eax-0x2465b207],ebx
  41e762:	or     edx,DWORD PTR [ebx+0x7b]
  41e765:	dec    edx
  41e766:	add    esi,DWORD PTR [ecx+0x7c]
  41e769:	jae    0x41e760
  41e76b:	enter  0x9a33,0x8b
  41e76f:	inc    ebp
  41e770:	and    BYTE PTR [edi+0x7df8b827],0xcc
  41e777:	(bad)  
  41e778:	xchg   ebp,eax
  41e779:	pushf  
  41e77a:	inc    ebp
  41e77b:	inc    ebp
  41e77c:	fild   DWORD PTR [eax]
  41e77e:	scas   al,BYTE PTR es:[edi]
  41e77f:	(bad)  
  41e781:	push   ebp
  41e782:	and    BYTE PTR [edi+0x59],al
  41e785:	sub    eax,0xeb6032eb
  41e78a:	inc    eax
  41e78b:	fcom   st(6)
  41e78d:	test   eax,0xea4c7044
  41e792:	mov    dl,0x32
  41e794:	inc    eax
  41e795:	add    eax,0xea6be510
  41e79a:	jp     0x41e762
  41e79c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e79d:	test   eax,0x7652e55c
  41e7a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e7a3:	push   eax
  41e7a4:	icebp  
  41e7a5:	or     eax,0x3aeda0bb
  41e7aa:	xchg   ebp,eax
  41e7ab:	in     eax,dx
  41e7ac:	arpl   WORD PTR [esi-0x7d654ff6],cx
  41e7b2:	jno    0x41e78a
  41e7b4:	and    bl,BYTE PTR [ebx-0x2d]
  41e7b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e7b8:	push   ss
  41e7b9:	pushf  
  41e7ba:	ror    BYTE PTR [esi+0x20],0xe0
  41e7be:	mov    edx,0x9ed0bec2
  41e7c3:	jnp    0x41e78b
  41e7c5:	xchg   edx,eax
  41e7c6:	cmp    al,BYTE PTR [eax]
  41e7c8:	jl     0x41e81f
  41e7ca:	dec    esi
  41e7cb:	rcl    DWORD PTR [edx+0x4c81ba5d],1
  41e7d1:	pop    es
  41e7d2:	punpckhbw mm0,QWORD PTR [edi+0x48]
  41e7d6:	cmp    DWORD PTR [ecx+0x657db9bf],eax
  41e7dc:	ss nop
  41e7de:	adc    DWORD PTR [edi-0x28e53523],0x3f
  41e7e5:	jecxz  0x41e85b
  41e7e7:	mov    eax,ds:0x22c49b1c
  41e7ec:	imul   eax,DWORD PTR [esi-0x32e0391e],0xffffffa3
  41e7f3:	ret    
  41e7f4:	cmp    DWORD PTR [edi],ecx
  41e7f6:	xchg   edi,eax
  41e7f7:	pop    es
  41e7f8:	jl     0x41e795
  41e7fa:	pop    ss
  41e7fb:	neg    DWORD PTR [edi+edi*8+0x41c2e672]
  41e802:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e803:	call   0xe36f:0xf38c263c
  41e80a:	mov    cl,0x90
  41e80c:	push   0xa867eac2
  41e811:	sbb    ebx,esp
  41e813:	outs   dx,BYTE PTR ds:[esi]
  41e814:	ins    BYTE PTR es:[edi],dx
  41e815:	push   cs
  41e816:	push   ss
  41e817:	cmp    eax,0x2faeca5f
  41e81c:	add    DWORD PTR [eax-0xee75e09],esi
  41e822:	rcr    edi,cl
  41e824:	imul   DWORD PTR [esi+0x3c1aaab9]
  41e82a:	ins    DWORD PTR es:[edi],dx
  41e82b:	lock adc eax,0x6e1f75be
  41e831:	xor    DWORD PTR [esi],ebp
  41e833:	adc    BYTE PTR [ebx],0x6f
  41e836:	adc    dh,ah
  41e838:	ret    
  41e839:	adc    cl,BYTE PTR [esi-0x6c]
  41e83c:	fisubr DWORD PTR [esp+ebx*2+0x353dee3e]
  41e843:	and    al,0x56
  41e845:	push   esi
  41e846:	cmp    al,0x8f
  41e848:	cli    
  41e849:	sbb    eax,0x1913b686
  41e84e:	and    esp,ecx
  41e850:	repnz pop es
  41e852:	in     eax,0xa5
  41e854:	lods   al,BYTE PTR ds:[esi]
  41e855:	in     eax,dx
  41e856:	mov    ch,0x66
  41e858:	lods   eax,DWORD PTR ds:[esi]
  41e859:	popa   
  41e85a:	mov    bl,0xf5
  41e85c:	aad    0xcb
  41e85e:	out    0xec,eax
  41e860:	xchg   ecx,eax
  41e861:	inc    ebx
  41e862:	xchg   edx,eax
  41e863:	sub    eax,0x956845a
  41e868:	mov    eax,ds:0xbad5b82e
  41e86d:	iret   
  41e86e:	retf   0x111b
  41e871:	(bad)  
  41e872:	std    
  41e873:	dec    esi
  41e874:	test   DWORD PTR [edx],edi
  41e876:	gs sbb bl,bl
  41e879:	and    edi,eax
  41e87b:	int3   
  41e87c:	movq   mm0,mm1
  41e87f:	adc    eax,0x5b808f3
  41e884:	sub    dh,BYTE PTR [ecx]
  41e886:	mov    ebp,0x113b477f
  41e88b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e88c:	jp     0x41e8c1
  41e88e:	xor    edi,eax
  41e890:	pop    esi
  41e891:	sbb    eax,0xf1a022a5
  41e896:	and    BYTE PTR [edi+0x53],al
  41e899:	pop    edi
  41e89a:	push   es
  41e89b:	add    ecx,DWORD PTR [esi+0x5f6d41f9]
  41e8a1:	adc    cl,BYTE PTR [ebp-0x25da2193]
  41e8a7:	in     al,0xa4
  41e8a9:	icebp  
  41e8aa:	(bad)  
  41e8ab:	jmp    0x2402:0xb22dd878
  41e8b2:	scas   eax,DWORD PTR es:[edi]
  41e8b3:	jle    0x41e846
  41e8b5:	sar    DWORD PTR [edx+0x5a],cl
  41e8b8:	mov    dh,0xb7
  41e8ba:	pop    esp
  41e8bb:	rcl    DWORD PTR [esi+0x12],0xce
  41e8bf:	sub    al,0x49
  41e8c1:	cmc    
  41e8c2:	ins    BYTE PTR es:[edi],dx
  41e8c3:	dec    eax
  41e8c4:	dec    esi
  41e8c5:	mov    al,ds:0x566bfdeb
  41e8cb:	test   DWORD PTR [edi],esi
  41e8cd:	mov    ebp,0x44460a62
  41e8d2:	mov    dl,0xb1
  41e8d4:	push   edi
  41e8d5:	jg     0x41e888
  41e8d7:	inc    esi
  41e8d8:	pop    ss
  41e8d9:	push   esp
  41e8da:	(bad)  
  41e8db:	jge    0x41e86d
  41e8dd:	adc    eax,0xb69ed2a0
  41e8e2:	rol    DWORD PTR [ebx],cl
  41e8e4:	pop    eax
  41e8e5:	and    BYTE PTR [ebx],al
  41e8e7:	xchg   esi,eax
  41e8e8:	ja     0x41e8a6
  41e8ea:	jg     0x41e919
  41e8ec:	push   eax
  41e8ed:	loop   0x41e91f
  41e8ef:	mov    ebp,0x3da6fc93
  41e8f4:	das    
  41e8f5:	xor    BYTE PTR ds:0xe369a2c7,bl
  41e8fb:	xchg   ebp,eax
  41e8fc:	neg    BYTE PTR [ecx]
  41e8fe:	stos   DWORD PTR es:[edi],eax
  41e8ff:	xor    BYTE PTR [esi],ah
  41e901:	out    dx,eax
  41e902:	aas    
  41e903:	mov    bl,0x57
  41e905:	or     cl,ch
  41e907:	(bad)  
  41e908:	jmp    0x41e8a9
  41e90a:	iret   
  41e90b:	push   ds
  41e90c:	int3   
  41e90d:	sub    BYTE PTR [eax+eax*8],al
  41e910:	(bad)  
  41e911:	int3   
  41e912:	push   ebx
  41e913:	inc    esi
  41e914:	vminss xmm0,xmm6,DWORD PTR [edi]
  41e918:	test   BYTE PTR [edx-0x57],dh
  41e91b:	popa   
  41e91c:	jns    0x41e926
  41e91e:	sub    eax,edx
  41e920:	add    DWORD PTR [esi-0x6],0x41
  41e924:	(bad)  
  41e925:	mov    ecx,0x454c2fee
  41e92a:	mov    ah,0xd5
  41e92c:	repz icebp 
  41e92e:	mov    ah,BYTE PTR [ebp+0x2f879156]
  41e934:	(bad)  
  41e935:	clc    
  41e936:	add    dl,bl
  41e938:	mov    ebp,0x697dc877
  41e93d:	or     ebp,DWORD PTR [ebx+0x19]
  41e940:	retf   
  41e941:	fs xchg edx,eax
  41e943:	xor    al,0x86
  41e945:	rcl    BYTE PTR [eax+0x5b],1
  41e948:	or     ah,BYTE PTR [ebx+0x64a5833b]
  41e94e:	out    0xdb,eax
  41e950:	scas   al,BYTE PTR es:[edi]
  41e951:	jne    0x41e983
  41e953:	outs   dx,BYTE PTR ds:[esi]
  41e954:	dec    ecx
  41e955:	aaa    
  41e956:	sub    ch,BYTE PTR [eax]
  41e958:	popa   
  41e959:	push   ebx
  41e95a:	loope  0x41e9bf
  41e95c:	jg     0x41e98c
  41e95e:	lods   al,BYTE PTR ds:[esi]
  41e95f:	sahf   
  41e960:	test   al,0x26
  41e962:	push   esi
  41e963:	xlat   BYTE PTR ds:[ebx]
  41e964:	(bad)  
  41e966:	addr16 addr16 cld 
  41e969:	or     BYTE PTR [edx+0x1d6e355f],ah
  41e96f:	and    DWORD PTR [edx+0xd8e2f8],edi
  41e975:	neg    esi
  41e977:	aam    0x66
  41e979:	add    eax,0x852ea0f3
  41e97e:	fld    QWORD PTR [ebx]
  41e980:	cmp    esi,DWORD PTR [ecx]
  41e982:	mov    ebp,0x3a7359d2
  41e987:	cli    
  41e988:	push   eax
  41e989:	inc    ecx
  41e98a:	hlt    
  41e98b:	cli    
  41e98c:	push   cs
  41e98d:	daa    
  41e98e:	stos   DWORD PTR es:[edi],eax
  41e98f:	push   esp
  41e990:	mov    ds:0x3ff67228,al
  41e995:	fld    DWORD PTR [ebp+esi*4+0x59]
  41e999:	loopne 0x41e936
  41e99b:	jp     0x41e9df
  41e99d:	ss sub al,0x34
  41e9a0:	dec    edi
  41e9a1:	inc    esi
  41e9a2:	retf   
  41e9a3:	in     al,dx
  41e9a4:	sar    DWORD PTR [esi],1
  41e9a6:	mov    ecx,0x64193e02
  41e9ab:	pop    ebx
  41e9ac:	clc    
  41e9ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e9ae:	xchg   ebx,eax
  41e9af:	dec    esi
  41e9b0:	xor    BYTE PTR [ebx+0x5a266381],bh
  41e9b6:	mov    ebp,0x46a346e8
  41e9bb:	mov    esp,0xc43d30e8
  41e9c0:	fnstsw WORD PTR [ebp-0x7e]
  41e9c3:	dec    edx
  41e9c4:	test   al,0x3f
  41e9c6:	dec    eax
  41e9c7:	into   
  41e9c8:	add    esi,DWORD PTR [ecx+0x2bc371b4]
  41e9ce:	dec    ebp
  41e9cf:	leave  
  41e9d0:	push   0xffffffb6
  41e9d2:	aad    0xdb
  41e9d4:	xchg   edi,eax
  41e9d5:	pop    es
  41e9d6:	gs add al,0x58
  41e9d9:	loope  0x41e9bf
  41e9db:	xlat   BYTE PTR ds:[ebx]
  41e9dc:	lock lgs ebx,FWORD PTR [edx+ebp*1-0x17080b40]
  41e9e5:	(bad)  
  41e9e7:	sahf   
  41e9e8:	jl     0x41ea3e
  41e9ea:	int    0x5d
  41e9ec:	mov    ds:0xd0b1913,al
  41e9f1:	inc    ebp
  41e9f2:	cmp    DWORD PTR [esi-0x3467cc46],esp
  41e9f8:	mov    esi,0x521bc824
  41e9fd:	pushf  
  41e9fe:	mov    ecx,0xf4c76f96
  41ea03:	or     BYTE PTR [ebp+0x225c8342],0x75
  41ea0a:	jnp    0x41e9dc
  41ea0c:	cmc    
  41ea0d:	retf   0xc623
  41ea10:	rcr    BYTE PTR [edx],cl
  41ea12:	lds    eax,FWORD PTR [ecx]
  41ea14:	iret   
  41ea15:	das    
  41ea16:	(bad)  
  41ea17:	and    DWORD PTR [ecx-0x7c],edi
  41ea1a:	iret   
  41ea1b:	dec    eax
  41ea1c:	test   BYTE PTR [edx+edx*2],cl
  41ea1f:	ins    DWORD PTR es:[edi],dx
  41ea20:	clc    
  41ea21:	push   0xd4c8f6d3
  41ea26:	mov    bl,0xf6
  41ea28:	pop    edi
  41ea29:	adc    edx,edx
  41ea2b:	pop    ebx
  41ea2c:	stc    
  41ea2d:	or     cl,bl
  41ea2f:	cs pop ebp
  41ea31:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ea32:	push   edi
  41ea33:	cmp    eax,0x263c3e27
  41ea38:	into   
  41ea39:	inc    edx
  41ea3a:	shl    DWORD PTR [edi+0x52bc0aef],1
  41ea40:	mov    edx,0x727aa7a7
  41ea45:	es sahf 
  41ea47:	imul   eax,DWORD PTR [esi-0x30],0x78
  41ea4b:	jg     0x41ea85
  41ea4d:	or     DWORD PTR [ebx+eiz*4-0x2e],ebx
  41ea51:	fnstsw WORD PTR [esi+0x52c8d983]
  41ea57:	popf   
  41ea58:	lds    esi,FWORD PTR [ebx+edx*4+0x4d]
  41ea5c:	inc    ecx
  41ea5d:	mov    al,0x58
  41ea5f:	pop    eax
  41ea60:	adc    BYTE PTR [edx-0xa413c57],dl
  41ea66:	xchg   al,al
  41ea68:	(bad)  
  41ea69:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ea6a:	mov    BYTE PTR [eax+0x6ea97e78],bl
  41ea70:	pop    ds
  41ea71:	pop    esi
  41ea72:	scas   al,BYTE PTR es:[edi]
  41ea73:	and    al,0xa
  41ea75:	loopne 0x41eae5
  41ea77:	sahf   
  41ea78:	das    
  41ea79:	jecxz  0x41ea02
  41ea7b:	ja     0x41ea93
  41ea7d:	mov    bl,0xdc
  41ea7f:	clc    
  41ea80:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ea81:	std    
  41ea82:	out    0x2e,eax
  41ea84:	and    BYTE PTR [esi+eax*1],cl
  41ea87:	mov    ds:0x70660a60,al
  41ea8c:	fild   QWORD PTR [esi]
  41ea8e:	jbe    0x41ea33
  41ea90:	nop
  41ea91:	jecxz  0x41ea70
  41ea93:	lahf   
  41ea94:	sub    BYTE PTR [edi+0x1d031e44],0x2a
  41ea9b:	in     eax,0xe4
  41ea9d:	dec    esp
  41ea9e:	jmp    FWORD PTR [esi]
  41eaa0:	fwait
  41eaa1:	call   0x3e4:0xeab162b2
  41eaa8:	out    0x92,al
  41eaaa:	jle    0x41ea95
  41eaac:	adc    DWORD PTR [ebx],esp
  41eaae:	inc    esi
  41eaaf:	add    BYTE PTR [ecx],0xb3
  41eab2:	in     al,dx
  41eab3:	nop
  41eab4:	es xchg edi,eax
  41eab6:	inc    ebp
  41eab7:	cmp    BYTE PTR ds:0x8ccdc203,0xd6
  41eabe:	xchg   ebx,eax
  41eabf:	mov    eax,ds:0xcc07a227
  41eac4:	adc    eax,0x6a2b209c
  41eac9:	aad    0xed
  41eacb:	daa    
  41eacc:	adc    DWORD PTR [ebp-0x5e],eax
  41eacf:	iret   
  41ead0:	cmp    BYTE PTR [ebp+ecx*1-0x5afec26d],dl
  41ead7:	cwde   
  41ead8:	sub    eax,0x5f324e38
  41eadd:	jp     0x41eb1b
  41eadf:	imul   ebp,DWORD PTR [eax+0x40805a29],0xb11edcdc
  41eae9:	or     eax,0x12c691f3
  41eaee:	(bad)  
  41eaef:	mov    ds:0x574b891b,al
  41eaf4:	xor    ecx,edi
  41eaf6:	xor    al,0x2b
  41eaf8:	das    
  41eaf9:	daa    
  41eafa:	out    0xec,al
  41eafc:	and    DWORD PTR [edi+ebp*1+0x15],0xffffffd3
  41eb01:	pop    edx
  41eb02:	das    
  41eb03:	hlt    
  41eb04:	das    
  41eb05:	add    DWORD PTR [edx-0x50c6a171],ebx
  41eb0b:	cmp    esi,DWORD PTR [esi]
  41eb0d:	sbb    ecx,DWORD PTR es:[edx]
  41eb10:	xlat   BYTE PTR ds:[ebx]
  41eb11:	xor    BYTE PTR [edi+0x5323f6a2],bl
  41eb17:	xor    edx,DWORD PTR [edx+0x4]
  41eb1a:	add    DWORD PTR [esi+0x1c],ecx
  41eb1d:	lock imul ebx,DWORD PTR [edi+esi*2],0x8322676
  41eb25:	aam    0xf3
  41eb27:	or     ch,BYTE PTR [eax]
  41eb29:	les    ecx,FWORD PTR [edx]
  41eb2b:	retf   
  41eb2c:	fnsave [esi+0x565edbd5]
  41eb32:	add    DWORD PTR [eax],ecx
  41eb34:	(bad)  
  41eb35:	int3   
  41eb36:	ret    0xe67
  41eb39:	cmp    BYTE PTR ds:0x27a7fa62,cl
  41eb3f:	xor    eax,0x3d17cfd1
  41eb44:	dec    edx
  41eb45:	lock jmp 0x41eb59
  41eb48:	jns    0x41eb6b
  41eb4a:	fnstcw WORD PTR [edx+0x4]
  41eb4d:	pop    eax
  41eb4e:	inc    edi
  41eb4f:	xchg   ebx,eax
  41eb50:	loop   0x41eb3b
  41eb52:	retf   
  41eb53:	pop    eax
  41eb54:	ror    edx,cl
  41eb56:	inc    ebx
  41eb57:	mov    esp,0xb5cb77a9
  41eb5c:	fs (bad) 
  41eb5e:	mov    cl,0x1f
  41eb60:	imul   al
  41eb62:	sahf   
  41eb63:	scas   al,BYTE PTR es:[edi]
  41eb64:	call   0x5adf:0x7d0848c5
  41eb6b:	addr16 pop esi
  41eb6d:	push   edi
  41eb6e:	push   0xaaffff35
  41eb73:	inc    esp
  41eb74:	clc    
  41eb75:	sbb    BYTE PTR [edx],0x63
  41eb78:	inc    ebx
  41eb79:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eb7a:	xchg   edi,eax
  41eb7b:	addr16 pusha 
  41eb7d:	(bad)  
  41eb7e:	jmp    0x41eb4b
  41eb80:	push   edi
  41eb81:	mov    esp,0x8acf98f6
  41eb86:	mov    ecx,eax
  41eb88:	sbb    DWORD PTR [ebx],edi
  41eb8a:	ret    
  41eb8b:	frstor [edi+0x68e407b6]
  41eb91:	jge    0x41eb4a
  41eb93:	sbb    eax,0x7288d8b4
  41eb98:	(bad)  
  41eb99:	out    dx,al
  41eb9a:	xchg   esi,eax
  41eb9b:	sub    BYTE PTR [edx],bh
  41eb9d:	pop    ss
  41eb9e:	cmc    
  41eb9f:	inc    ebp
  41eba0:	sbb    DWORD PTR [edi+0x50f8a921],0xffffffa8
  41eba7:	dec    edx
  41eba8:	pop    es
  41eba9:	xchg   ecx,eax
  41ebaa:	jl     0x41ec0b
  41ebac:	add    ebx,DWORD PTR [esi+0x120721a8]
  41ebb2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ebb3:	jmp    0xfe78:0x4844e533
  41ebba:	mov    edi,0x6437b43b
  41ebbf:	scas   al,BYTE PTR es:[di]
  41ebc1:	jmp    0xcc5c:0x94672f17
  41ebc8:	outs   dx,BYTE PTR ds:[esi]
  41ebc9:	ffree  st(7)
  41ebcb:	imul   esp,DWORD PTR [eax],0x5d
  41ebce:	push   ebx
  41ebcf:	mov    cl,bh
  41ebd1:	sahf   
  41ebd2:	adc    ebp,esi
  41ebd4:	in     al,dx
  41ebd5:	jecxz  0x41ebf4
  41ebd7:	dec    ecx
  41ebd8:	loope  0x41eb78
  41ebda:	stos   BYTE PTR es:[edi],al
  41ebdb:	mov    cs,ebp
  41ebdd:	xor    eax,0xf145cee3
  41ebe2:	outs   dx,DWORD PTR ds:[esi]
  41ebe3:	cld    
  41ebe4:	push   edi
  41ebe5:	mov    dl,0x29
  41ebe7:	cmc    
  41ebe8:	inc    eax
  41ebe9:	push   0xcfb83c5a
  41ebee:	cmp    DWORD PTR ds:0xac509491,ebp
  41ebf4:	pop    esi
  41ebf5:	sahf   
  41ebf6:	xchg   ebp,eax
  41ebf7:	mov    dh,0xce
  41ebf9:	pop    edi
  41ebfa:	jo     0x41ec27
  41ebfc:	push   cs
  41ebfd:	and    bl,BYTE PTR [esi-0x72]
  41ec00:	call   0x55d9:0x6b5d821b
  41ec07:	mov    eax,ebp
  41ec09:	add    DWORD PTR [esi+eax*4+0x64],eax
  41ec0d:	xchg   DWORD PTR [ebx+0x12b63103],ebp
  41ec13:	push   edx
  41ec14:	push   ebp
  41ec15:	inc    eax
  41ec16:	push   ebx
  41ec17:	into   
  41ec18:	inc    esp
  41ec19:	dec    ebx
  41ec1a:	mov    ebp,0x61ff5f6c
  41ec1f:	outs   dx,DWORD PTR ds:[esi]
  41ec20:	xor    BYTE PTR [edi+0x15],ah
  41ec23:	dec    bx
  41ec25:	lods   eax,DWORD PTR ds:[esi]
  41ec26:	sub    bl,0xfc
  41ec29:	retf   0x3214
  41ec2c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ec2d:	dec    ecx
  41ec2e:	mov    al,0xed
  41ec30:	or     al,0x9c
  41ec32:	cld    
  41ec33:	and    DWORD PTR [ebx+0xe],0x7cbb1f4a
  41ec3a:	and    BYTE PTR [ecx-0x1e404518],0x87
  41ec41:	loop   0x41eca2
  41ec43:	nop
  41ec44:	popf   
  41ec45:	clc    
  41ec46:	popf   
  41ec47:	mov    ds:0x5cedc245,eax
  41ec4c:	lds    ecx,FWORD PTR [edx+ebp*4-0x61]
  41ec50:	pop    ds
  41ec51:	neg    BYTE PTR [esi+0x3b7d66b4]
  41ec57:	jp     0x41ec11
  41ec59:	rcl    BYTE PTR [eax-0x1d],0x1b
  41ec5d:	jmp    0x41ec75
  41ec5f:	cmc    
  41ec60:	inc    ebx
  41ec61:	mov    eax,0xa097e258
  41ec66:	xchg   edi,eax
  41ec67:	sbb    DWORD PTR [edx-0xb],esp
  41ec6a:	xchg   esp,eax
  41ec6b:	jb     0x41ecb4
  41ec6d:	icebp  
  41ec6e:	add    ecx,ecx
  41ec70:	fisttp QWORD PTR [ebx+edx*1-0x77fcb311]
  41ec77:	mov    ch,0x66
  41ec79:	out    dx,eax
  41ec7a:	in     al,dx
  41ec7b:	imul   ecx,DWORD PTR [ebx-0x5867509d],0x20
  41ec82:	push   0x4d7d16d
  41ec87:	in     eax,dx
  41ec88:	sti    
  41ec89:	xor    bl,0x47
  41ec8c:	jmp    FWORD PTR [eax]
  41ec8e:	cs xchg esi,eax
  41ec90:	adc    ecx,DWORD PTR [eax]
  41ec92:	add    edi,DWORD PTR [edi+0x5a]
  41ec95:	xlat   BYTE PTR ds:[ebx]
  41ec96:	retf   
  41ec97:	mov    cl,BYTE PTR [esi]
  41ec99:	sub    al,0x63
  41ec9b:	dec    edx
  41ec9c:	cmp    al,0x65
  41ec9e:	cmc    
  41ec9f:	sub    al,0x49
  41eca1:	mov    esi,0x16590848
  41eca6:	in     al,0xd5
  41eca8:	mov    edx,0x9c65a2a8
  41ecad:	data16 mov dl,bl
  41ecb0:	mov    edi,0xf529ee00
  41ecb5:	inc    ebp
  41ecb6:	aam    0xe2
  41ecb8:	mov    al,0x83
  41ecba:	pop    esi
  41ecbb:	call   FWORD PTR ds:0xcac81770
  41ecc1:	add    DWORD PTR [ebx-0x3a3477c1],0x65
  41ecc8:	(bad)  
  41ecc9:	fisttp DWORD PTR [edi-0x26]
  41eccc:	dec    edi
  41eccd:	dec    esi
  41ecce:	cmp    BYTE PTR [esi-0xf],al
  41ecd1:	rdpmc  
  41ecd3:	inc    edi
  41ecd4:	jl     0x41ed18
  41ecd6:	pop    esi
  41ecd7:	mov    dh,0x99
  41ecd9:	mov    edi,0x8204953
  41ecde:	mov    bl,0x80
  41ece0:	sbb    BYTE PTR [ecx+0x62cf75dd],0x79
  41ece7:	(bad)  
  41ece8:	loope  0x41ed03
  41ecea:	adc    esi,DWORD PTR [eax-0x24]
  41eced:	rol    BYTE PTR [ecx],cl
  41ecef:	std    
  41ecf0:	pop    es
  41ecf1:	xor    DWORD PTR [eax+0x6c],0xffffffcc
  41ecf5:	out    0x39,al
  41ecf7:	xchg   edi,eax
  41ecf8:	call   0x8b3c366
  41ecfd:	cli    
  41ecfe:	sbb    BYTE PTR [edx-0x348d52ff],cl
  41ed04:	mov    bl,0x45
  41ed06:	in     eax,0x9
  41ed08:	fistp  QWORD PTR [ecx*2-0xbb77a91]
  41ed0f:	push   eax
  41ed10:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ed11:	mov    ecx,0x1cf99c92
  41ed16:	mov    eax,0xbaac51c3
  41ed1b:	in     al,dx
  41ed1c:	stc    
  41ed1d:	mov    bh,0x5d
  41ed1f:	sbb    eax,DWORD PTR ds:0xe0575639
  41ed25:	mov    edx,?
  41ed27:	adc    BYTE PTR [esp+edi*8-0x66e690a9],ch
  41ed2e:	cmp    esi,edx
  41ed30:	dec    ebx
  41ed31:	sbb    al,0x76
  41ed33:	push   eax
  41ed34:	add    DWORD PTR ds:0xd6c33f6a,eax
  41ed3a:	or     eax,0x5e72a3d1
  41ed3f:	sbb    DWORD PTR [edx+0x41],edx
  41ed42:	mov    al,0x4
  41ed44:	or     ch,BYTE PTR [edi+0x6d25086a]
  41ed4a:	ins    BYTE PTR es:[edi],dx
  41ed4b:	cmp    BYTE PTR [ecx],dl
  41ed4d:	call   DWORD PTR [ecx+eiz*1+0x275c69be]
  41ed54:	jno    0x41ed46
  41ed56:	cmc    
  41ed57:	mov    eax,ds:0x1dcdfa37
  41ed5c:	push   0xfffffff0
  41ed5e:	and    ah,BYTE PTR [esi]
  41ed60:	push   ebx
  41ed61:	mov    gs,WORD PTR [ecx-0x55]
  41ed64:	pop    esi
  41ed65:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ed66:	dec    esp
  41ed67:	push   edi
  41ed68:	push   ebp
  41ed69:	int    0xc3
  41ed6b:	enter  0xb21d,0x1c
  41ed6f:	dec    ecx
  41ed70:	push   ebx
  41ed71:	int    0xfe
  41ed73:	jmp    0x41eddc
  41ed75:	xchg   ebx,eax
  41ed76:	dec    edi
  41ed77:	fld    TBYTE PTR [esp+ebx*8+0x5e]
  41ed7b:	mov    cl,0x62
  41ed7d:	adc    ch,BYTE PTR [esp+ebx*4]
  41ed80:	leave  
  41ed81:	hlt    
  41ed82:	sub    BYTE PTR [esi+edx*4],al
  41ed85:	mov    al,ds:0x82064150
  41ed8a:	xchg   esi,eax
  41ed8b:	ins    DWORD PTR es:[edi],dx
  41ed8c:	ds in  al,dx
  41ed8e:	or     ebp,eax
  41ed90:	pusha  
  41ed91:	in     al,0xb9
  41ed93:	mov    DWORD PTR [esi+0x34],esi
  41ed96:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ed97:	int3   
  41ed98:	stos   BYTE PTR es:[edi],al
  41ed99:	xchg   esp,eax
  41ed9a:	cmp    esp,DWORD PTR [edx]
  41ed9c:	mov    WORD PTR [ebx],fs
  41ed9e:	fiadd  WORD PTR [ebx+0x43]
  41eda1:	cmp    BYTE PTR [edx-0x59],dh
  41eda4:	das    
  41eda5:	lahf   
  41eda6:	test   eax,esp
  41eda8:	cmp    BYTE PTR [edx],bl
  41edaa:	adc    DWORD PTR [ebp+eax*2+0x6dfeb642],edx
  41edb1:	(bad)  
  41edb2:	(bad)  
  41edb3:	ss jmp ebx
  41edb6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41edb7:	xchg   esp,eax
  41edb8:	push   ecx
  41edb9:	xor    ebp,esp
  41edbb:	cmc    
  41edbc:	jns    0x41edd8
  41edbe:	js     0x41ed94
  41edc0:	daa    
  41edc1:	jmp    0xa43b:0x11654b01
  41edc8:	int    0x66
  41edca:	cdq    
  41edcb:	dec    eax
  41edcc:	mov    edx,0xfe2b2f8
  41edd1:	sbb    eax,DWORD PTR [eax]
  41edd3:	nop
  41edd4:	jg     0x41ed66
  41edd6:	test   cl,dl
  41edd8:	cmp    al,0xe3
  41edda:	mov    dh,0x7f
  41eddc:	ficomp DWORD PTR [ecx-0x4a]
  41eddf:	xor    edx,esi
  41ede1:	xor    al,0xc0
  41ede3:	jmp    0x52c99fa6
  41ede8:	mov    bl,0x4f
  41edea:	push   ebp
  41edeb:	outs   dx,DWORD PTR ds:[esi]
  41edec:	pusha  
  41eded:	(bad)  
  41edee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41edef:	clc    
  41edf0:	mov    esi,0x7766d796
  41edf5:	jno    0x41ed84
  41edf7:	inc    esp
  41edf8:	test   bl,cl
  41edfa:	dec    BYTE PTR [ecx-0x617c03ab]
  41ee00:	daa    
  41ee01:	jnp    0x41edde
  41ee03:	cwde   
  41ee04:	movlps QWORD PTR [esi+0x489b2714],xmm2
  41ee0b:	out    0x85,al
  41ee0d:	std    
  41ee0e:	lods   al,BYTE PTR ds:[esi]
  41ee0f:	inc    eax
  41ee10:	jle    0x41edba
  41ee12:	pop    ebx
  41ee13:	mov    al,0x60
  41ee15:	int3   
  41ee16:	adc    al,0x17
  41ee18:	push   ebp
  41ee19:	lods   al,BYTE PTR ds:[esi]
  41ee1a:	loopne 0x41ee5e
  41ee1c:	pop    edi
  41ee1d:	pop    ss
  41ee1e:	push   ebp
  41ee1f:	xchg   esp,eax
  41ee20:	ror    BYTE PTR ds:0x3ba7bca3,0xf4
  41ee27:	iret   
  41ee28:	daa    
  41ee29:	push   ds
  41ee2a:	xchg   BYTE PTR [esi-0x76c000e4],bh
  41ee30:	ret    
  41ee31:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ee32:	mov    BYTE PTR [ecx-0x206b5560],ah
  41ee38:	xor    al,0x2c
  41ee3a:	scas   eax,DWORD PTR es:[edi]
  41ee3b:	ret    0xce66
  41ee3e:	adc    bh,cl
  41ee40:	mov    al,ds:0x2b26c9e5
  41ee45:	inc    eax
  41ee46:	xor    BYTE PTR [edi],ah
  41ee48:	mov    al,ds:0xa94e5527
  41ee4d:	or     DWORD PTR [ebx-0x2],ebp
  41ee50:	or     BYTE PTR [edx+eax*1],ch
  41ee53:	jmp    0x99312c96
  41ee58:	jnp    0x41eed2
  41ee5a:	sub    al,0x2a
  41ee5c:	out    dx,al
  41ee5d:	sub    esi,DWORD PTR ds:0xbc4832ff
  41ee63:	and    al,0x14
  41ee65:	stos   BYTE PTR es:[edi],al
  41ee66:	and    BYTE PTR [esp+edx*4-0x6c],bl
  41ee6a:	sbb    eax,0xa79ce510
  41ee6f:	cmp    eax,0xa684790b
  41ee74:	scas   eax,DWORD PTR es:[edi]
  41ee75:	loop   0x41ee95
  41ee77:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ee78:	ds ja  0x41ee77
  41ee7b:	out    dx,al
  41ee7c:	cmp    eax,DWORD PTR [eax+0x538aed71]
  41ee82:	mov    esi,0x299d187e
  41ee87:	jb     0x41eec1
  41ee89:	les    ebx,FWORD PTR [ebp+0x44d28750]
  41ee8f:	jg     0x41eec8
  41ee91:	in     al,0x67
  41ee93:	addr16 out 0x1e,al
  41ee96:	jae    0x41eeee
  41ee98:	add    al,0x95
  41ee9a:	add    eax,0xdadd402e
  41ee9f:	(bad)  
  41eea0:	int3   
  41eea1:	mov    WORD PTR ds:0xa0979ea4,ds
  41eea7:	ins    BYTE PTR es:[edi],dx
  41eea8:	cld    
  41eea9:	repnz xor BYTE PTR [esi-0x2f8422f1],dl
  41eeb0:	rcr    ebp,0x38
  41eeb3:	jg     0x41eef3
  41eeb5:	cmp    al,0xf9
  41eeb7:	outs   dx,BYTE PTR ds:[esi]
  41eeb8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eeb9:	jo     0x41ee85
  41eebb:	push   ebp
  41eebc:	xchg   ecx,eax
  41eebd:	adc    DWORD PTR [ebx+0x3fa5c638],esi
  41eec3:	sub    DWORD PTR [edi],0xb464f670
  41eec9:	adc    ch,ch
  41eecb:	icebp  
  41eecc:	pop    es
  41eecd:	test   al,0x32
  41eecf:	mov    ecx,0x631cb7e9
  41eed4:	jb     0x41eee9
  41eed6:	pop    eax
  41eed7:	mov    esi,0x602994ea
  41eedc:	test   al,0x1e
  41eede:	sbb    bl,BYTE PTR [ecx+0x4e]
  41eee1:	pop    edi
  41eee2:	sbb    eax,0x88048eb0
  41eee7:	cmp    BYTE PTR [ecx],ch
  41eee9:	sub    DWORD PTR [ecx+0x77bffd4e],esp
  41eeef:	xchg   ebx,eax
  41eef0:	jne    0x41eeca
  41eef2:	shr    esi,1
  41eef4:	or     dh,BYTE PTR [esi+0x650e4faa]
  41eefa:	mov    ch,0x6
  41eefc:	mov    WORD PTR [eax+eax*4],gs
  41eeff:	stc    
  41ef00:	xor    edx,ebp
  41ef02:	add    ch,BYTE PTR [eax-0x6a939d9]
  41ef08:	mov    al,0x8e
  41ef0a:	xor    eax,0x3503ae0d
  41ef0f:	das    
  41ef10:	fcmovnb st,st(6)
  41ef12:	fsub   st,st(6)
  41ef14:	sbb    DWORD PTR [ecx+0x2],edi
  41ef17:	ds jp  0x41eec4
  41ef1a:	cli    
  41ef1b:	jno    0x41eeb6
  41ef1d:	inc    ebp
  41ef1e:	inc    eax
  41ef1f:	mov    cs,WORD PTR [esi+0x35]
  41ef22:	outs   dx,BYTE PTR ds:[esi]
  41ef23:	cwde   
  41ef24:	sbb    edx,DWORD PTR [ebp-0x2]
  41ef27:	dec    esp
  41ef28:	test   BYTE PTR [esi],ch
  41ef2a:	jmp    0x41eed9
  41ef2c:	fld    QWORD PTR [edi-0x4f]
  41ef2f:	lahf   
  41ef30:	retf   
  41ef31:	and    al,ch
  41ef33:	scas   eax,DWORD PTR es:[edi]
  41ef34:	xchg   ebp,eax
  41ef35:	push   esi
  41ef36:	adc    DWORD PTR [eax+eax*4],eax
  41ef39:	nop
  41ef3a:	ins    BYTE PTR es:[edi],dx
  41ef3b:	sbb    eax,0xe02da493
  41ef40:	pop    ebp
  41ef41:	cmp    eax,0xe28dcb2d
  41ef46:	push   esi
  41ef47:	or     al,0x95
  41ef49:	mov    ds:0x200d4de6,eax
  41ef4e:	jge    0x41ef87
  41ef50:	lds    eax,FWORD PTR [ebx+esi*8+0x5a]
  41ef54:	pop    ecx
  41ef55:	xchg   edi,eax
  41ef56:	pushf  
  41ef57:	or     al,0xab
  41ef59:	in     al,dx
  41ef5a:	or     dl,BYTE PTR [edi+eiz*2-0x2c78850e]
  41ef61:	xchg   ebp,eax
  41ef62:	je     0x41ef3d
  41ef64:	add    DWORD PTR [edx],ebx
  41ef66:	jae    0x41ef3d
  41ef68:	(bad)  
  41ef69:	loop   0x41ef55
  41ef6b:	mov    ecx,0x22a9bfb7
  41ef70:	xor    eax,0xdf311073
  41ef75:	ss pop ecx
  41ef77:	ret    
  41ef78:	add    DWORD PTR [ebp-0x21],eax
  41ef7b:	and    DWORD PTR [ecx+0x535ac4b8],ebp
  41ef81:	jg     0x41ef8c
  41ef83:	mov    ebx,0x1996c40f
  41ef88:	or     ch,bl
  41ef8a:	push   edx
  41ef8b:	je     0x41ef6d
  41ef8d:	jmp    0xc3e9:0xd70aa19e
  41ef94:	out    0x87,al
  41ef96:	(bad)  
  41ef97:	xor    eax,0x9d25ebfb
  41ef9c:	mov    dl,0xd1
  41ef9e:	popa   
  41ef9f:	lock rol BYTE PTR [edi+0x68],0x82
  41efa4:	daa    
  41efa5:	(bad)  
  41efa6:	in     al,dx
  41efa7:	push   edi
  41efa8:	push   es
  41efa9:	cmp    DWORD PTR [esp+edi*8+0x26],ecx
  41efad:	xchg   ecx,eax
  41efae:	push   esi
  41efaf:	clc    
  41efb0:	enter  0x4e85,0x9e
  41efb4:	test   BYTE PTR [esi+0x3551c331],ah
  41efba:	cmp    ebp,DWORD PTR [ecx+0x4]
  41efbd:	out    dx,eax
  41efbe:	cdq    
  41efbf:	jge    0x41ef65
  41efc1:	jmp    0xa84d0c90
  41efc6:	and    al,0x5
  41efc8:	loop   0x41efc9
  41efca:	add    DWORD PTR [esi+0x3542cde7],esi
  41efd0:	test   eax,0x9c0fbb3e
  41efd5:	aas    
  41efd6:	repnz mov cl,0x74
  41efd9:	sbb    eax,0x6ac9e965
  41efde:	out    dx,eax
  41efdf:	gs cmp al,0xff
  41efe2:	sahf   
  41efe3:	es dec ecx
  41efe5:	fistp  QWORD PTR [esi+0x56]
  41efe8:	neg    BYTE PTR [edx+0x7c]
  41efeb:	sbb    ebx,DWORD PTR [esi]
  41efed:	pop    edi
  41efee:	pop    ds
  41efef:	mov    al,0x1a
  41eff1:	dec    esi
  41eff2:	xchg   BYTE PTR [edx],dl
  41eff4:	bound  esp,QWORD PTR [esi+0x2c]
  41eff7:	push   es
  41eff8:	int    0x56
  41effa:	loopne 0x41ef88
  41effc:	int    0x9a
  41effe:	cmp    DWORD PTR [esi],ebp
  41f000:	push   0x2de3968f
  41f005:	out    dx,eax
  41f006:	js     0x41f038
  41f008:	or     esi,DWORD PTR [esi+0x26]
  41f00b:	(bad)  
  41f00c:	dec    eax
  41f00d:	fs add bl,bl
  41f010:	les    ecx,FWORD PTR [edi]
  41f012:	or     esp,DWORD PTR [edi]
  41f014:	add    ecx,DWORD PTR [ecx]
  41f016:	sub    eax,DWORD PTR [ebx]
  41f018:	fdiv   QWORD PTR ds:0x99cb7a4
  41f01e:	dec    BYTE PTR [edi]
  41f020:	cmc    
  41f021:	sahf   
  41f022:	mov    ah,0x1b
  41f024:	aam    0xf9
  41f026:	jmp    0x5716be79
  41f02b:	adc    ebp,DWORD PTR [edx+0x659ca667]
  41f031:	jne    0x41f05b
  41f033:	inc    ebp
  41f034:	das    
  41f035:	push   0xffffff94
  41f037:	popf   
  41f038:	mul    BYTE PTR [esi-0x2e]
  41f03b:	fsub   QWORD PTR [ecx]
  41f03d:	test   dl,dh
  41f03f:	or     eax,0xe8da7065
  41f044:	psadbw mm5,QWORD PTR [edi-0x42]
  41f048:	adc    eax,0x2d7a6496
  41f04d:	imul   ebp,DWORD PTR [edi-0x75f641fc],0x527dc221
  41f057:	lods   al,BYTE PTR ds:[esi]
  41f058:	js     0x41f015
  41f05a:	fild   DWORD PTR [esi-0x359e93f5]
  41f060:	pop    es
  41f061:	adc    ch,dl
  41f063:	ror    DWORD PTR [ecx-0x73f7180c],cl
  41f069:	rcr    DWORD PTR [ebx+0x2d],1
  41f06c:	add    DWORD PTR [eax+0x61432012],edi
  41f072:	xchg   edi,eax
  41f073:	adc    eax,0x7c341d72
  41f078:	mov    ah,0x9d
  41f07a:	fidiv  WORD PTR [esi-0x6bf0a9a6]
  41f080:	fdivr  QWORD PTR [ebp-0x5bc78e5]
  41f086:	stos   BYTE PTR es:[edi],al
  41f087:	inc    edi
  41f088:	ins    BYTE PTR es:[edi],dx
  41f089:	dec    edx
  41f08a:	cmp    al,BYTE PTR [edx-0x71]
  41f08d:	inc    esi
  41f08e:	or     al,0x4b
  41f090:	into   
  41f091:	xchg   ebp,eax
  41f092:	push   eax
  41f093:	push   edx
  41f094:	cs cmc 
  41f096:	mov    esi,0xfb287a5d
  41f09b:	or     al,dh
  41f09d:	jmp    0x233d:0x22455782
  41f0a4:	(bad)  
  41f0a5:	lock inc edi
  41f0a7:	imul   ebx,DWORD PTR [ebp+0x6c560f21],0xdc658fd9
  41f0b1:	cld    
  41f0b2:	jns    0x41f097
  41f0b4:	shr    BYTE PTR [ecx-0x7c],0x17
  41f0b8:	mov    dl,0xec
  41f0ba:	mov    ecx,0xaecf2b6a
  41f0bf:	xor    dh,BYTE PTR [edi]
  41f0c1:	adc    al,ah
  41f0c3:	push   edi
  41f0c4:	jg     0x41f091
  41f0c6:	call   0x61df:0x8c7c6c60
  41f0cd:	daa    
  41f0ce:	dec    ebp
  41f0cf:	repnz cmc 
  41f0d1:	enter  0x4636,0x90
  41f0d5:	aad    0xac
  41f0d7:	dec    ebx
  41f0d8:	mov    bh,0x3
  41f0da:	pop    eax
  41f0db:	push   ebp
  41f0dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f0dd:	icebp  
  41f0de:	lock mov dl,0x77
  41f0e1:	add    BYTE PTR [edi],bh
  41f0e3:	and    al,0x91
  41f0e5:	call   0x8005:0x706c6422
  41f0ec:	fisttp WORD PTR [ebx]
  41f0ee:	loop   0x41f0f7
  41f0f0:	push   ss
  41f0f1:	std    
  41f0f2:	and    al,0x36
  41f0f4:	add    bl,0x1e
  41f0f7:	mov    ebx,0xd4708e07
  41f0fc:	push   ss
  41f0fd:	pop    ds
  41f0fe:	xor    eax,0x35c553d
  41f103:	call   0xb975cc40
  41f108:	dec    esi
  41f109:	fdivr  DWORD PTR [eax+0x707eb022]
  41f10f:	adc    bh,bh
  41f111:	pop    esi
  41f112:	jno    0x41f190
  41f114:	das    
  41f115:	pop    edi
  41f116:	shl    DWORD PTR ds:0xb04e4b7d,cl
  41f11c:	xor    esp,eax
  41f11e:	fild   WORD PTR [eax-0x69afa0d2]
  41f124:	xor    ebx,0xffffffda
  41f127:	add    eax,0xfcae18c4
  41f12c:	push   ebp
  41f12d:	and    al,0x36
  41f12f:	xor    bl,ah
  41f131:	fst    QWORD PTR [eax+edi*2-0x4f]
  41f135:	or     ecx,DWORD PTR [ebp+eax*1+0x6adce72e]
  41f13c:	(bad)  
  41f13e:	arpl   WORD PTR [ecx+ebx*4+0x175538f4],bp
  41f145:	xchg   ebp,eax
  41f146:	mov    DWORD PTR ds:0xca865a1,esp
  41f14c:	jmp    0x3df1ef13
  41f151:	cmp    ebx,ecx
  41f153:	leave  
  41f154:	or     dl,ah
  41f156:	pop    edx
  41f157:	call   0xc933c41e
  41f15c:	push   esp
  41f15d:	xor    al,0xa7
  41f15f:	lods   al,BYTE PTR ds:[esi]
  41f160:	loopne 0x41f1c7
  41f162:	jmp    0x7d6:0x49be2a5b
  41f169:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f16a:	ficomp WORD PTR [eax-0x43d3b2cd]
  41f170:	cwde   
  41f171:	cs daa 
  41f173:	add    dl,BYTE PTR [ebx+0x3fb401a7]
  41f179:	lods   al,BYTE PTR ds:[esi]
  41f17a:	test   DWORD PTR [ebx+edi*8+0x24],edx
  41f17e:	sbb    DWORD PTR ds:0xf7fcc6d7,ebx
  41f184:	dec    eax
  41f185:	int    0x90
  41f187:	outs   dx,BYTE PTR ds:[esi]
  41f188:	test   eax,0xfceaa5d4
  41f18d:	mov    ecx,0x4853e41b
  41f192:	ja     0x41f1b3
  41f194:	inc    ebp
  41f195:	ins    DWORD PTR es:[edi],dx
  41f196:	or     al,0xda
  41f198:	rol    BYTE PTR [esp+ebx*1-0x53],0x47
  41f19d:	jge    0x41f186
  41f19f:	test   DWORD PTR [ebx+ebp*2-0x21],edi
  41f1a3:	call   0x64aeb597
  41f1a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f1a9:	mov    ch,0x6a
  41f1ab:	mov    ecx,0x811b8dfb
  41f1b0:	(bad)  
  41f1b2:	into   
  41f1b3:	xchg   esp,eax
  41f1b4:	mov    cl,0xe9
  41f1b6:	fcom   DWORD PTR [edx-0x42]
  41f1b9:	sbb    eax,DWORD PTR fs:[eax-0x5ebf9e35]
  41f1c0:	mov    eax,0x4ba78c
  41f1c5:	ins    BYTE PTR es:[edi],dx
  41f1c6:	or     ah,dh
  41f1c8:	or     ebp,edx
  41f1ca:	in     eax,dx
  41f1cb:	sub    BYTE PTR [esi-0x1391e885],cl
  41f1d1:	loopne 0x41f1f6
  41f1d3:	dec    edi
  41f1d4:	fs jmp 0xa0bd:0x5f003eb9
  41f1dc:	mov    edx,0x2dfc4774
  41f1e1:	or     BYTE PTR [edx+0x64e9034d],ch
  41f1e7:	dec    esp
  41f1e8:	xor    bl,BYTE PTR [esi+0x6b1341db]
  41f1ee:	inc    ebp
  41f1ef:	or     al,0x86
  41f1f1:	add    edi,DWORD PTR [ebp+0x26e3029f]
  41f1f7:	and    DWORD PTR [ecx-0x5795bf15],esp
  41f1fd:	mov    bl,0xc
  41f1ff:	iret   
  41f200:	sbb    eax,0x7ae0df61
  41f205:	fs pop es
  41f207:	push   esp
  41f208:	ret    0x7ec5
  41f20b:	in     al,dx
  41f20c:	jbe    0x41f1fc
  41f20e:	jp     0x41f192
  41f210:	enter  0x6007,0x3e
  41f214:	clc    
  41f215:	inc    ebp
  41f216:	loop   0x41f1a3
  41f218:	pushf  
  41f219:	xor    edx,DWORD PTR [ebx]
  41f21b:	hlt    
  41f21c:	cli    
  41f21d:	jge    0x41f24d
  41f21f:	out    dx,eax
  41f220:	sbb    DWORD PTR ds:0xc7640585,ebp
  41f226:	cld    
  41f227:	or     BYTE PTR [ecx],0x40
  41f22a:	mov    bl,al
  41f22c:	bound  ebp,QWORD PTR [ebp-0x27]
  41f22f:	out    0x4d,eax
  41f231:	enter  0xd4e2,0x46
  41f235:	daa    
  41f236:	(bad)  
  41f237:	mov    ch,bh
  41f239:	jno    0x41f2a1
  41f23b:	call   0x89bd0cf4
  41f240:	and    DWORD PTR [ebx+0x44],ebx
  41f243:	jecxz  0x41f293
  41f245:	ja     0x41f231
  41f247:	add    eax,0x714c7c46
  41f24c:	jnp    0x41f27c
  41f24e:	je     0x41f239
  41f250:	cld    
  41f251:	sub    BYTE PTR [eax+eax*2+0x5e8405f3],dl
  41f258:	enter  0x927d,0x4a
  41f25c:	cli    
  41f25d:	imul   eax,ecx,0x57
  41f260:	mov    edi,0xece61000
  41f265:	stos   DWORD PTR es:[edi],eax
  41f266:	pop    esp
  41f267:	dec    esi
  41f268:	(bad)  
  41f269:	sub    al,ah
  41f26b:	pop    eax
  41f26c:	xor    DWORD PTR [ebx+0x7e0ffa],ebx
  41f272:	push   ecx
  41f273:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f274:	test   BYTE PTR [ecx],ah
  41f276:	lods   eax,DWORD PTR fs:[esi]
  41f278:	pop    esp
  41f279:	lea    edx,[ebp-0x71]
  41f27c:	popf   
  41f27d:	and    BYTE PTR [esi],bh
  41f27f:	les    esi,FWORD PTR [edi+0x74]
  41f282:	xlat   BYTE PTR ds:[ebx]
  41f283:	icebp  
  41f284:	inc    esi
  41f285:	pop    edi
  41f286:	scas   al,BYTE PTR es:[edi]
  41f287:	mov    eax,ds:0xee6c0e1e
  41f28c:	sbb    BYTE PTR [esi-0x7849b1c5],ch
  41f292:	push   ebp
  41f293:	fnstcw WORD PTR ds:0xf2fe9d9b
  41f299:	aad    0xf2
  41f29b:	or     ebp,DWORD PTR [ebx-0x1f]
  41f29e:	aas    
  41f29f:	and    BYTE PTR [edi*1-0x1f3b07d0],0xfa
  41f2a7:	add    al,0xaf
  41f2a9:	mov    ebx,ebx
  41f2ab:	mov    WORD PTR [eax],ds
  41f2ad:	pop    ebx
  41f2ae:	in     eax,0xf2
  41f2b0:	mov    bl,0x7c
  41f2b2:	and    ch,BYTE PTR [eax]
  41f2b4:	ins    BYTE PTR es:[edi],dx
  41f2b5:	sbb    ecx,0x5cc0f9c6
  41f2bb:	xchg   DWORD PTR [edx+0x27],eax
  41f2be:	rol    BYTE PTR [edx-0xcc0732a],cl
  41f2c4:	cmp    eax,0x18b0a29c
  41f2c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f2ca:	jae    0x41f349
  41f2cc:	mov    dl,0x8d
  41f2ce:	or     BYTE PTR [esi-0x7139181d],al
  41f2d4:	dec    ebp
  41f2d5:	repnz add bh,BYTE PTR [ebp+0x6b]
  41f2d9:	int    0x18
  41f2db:	(bad)  
  41f2dc:	(bad)  
  41f2dd:	int3   
  41f2de:	mov    bh,0x98
  41f2e0:	data16 es hlt 
  41f2e3:	stos   BYTE PTR es:[edi],al
  41f2e4:	call   0x6361:0xee5d523b
  41f2eb:	xor    BYTE PTR [edx+0x59],bl
  41f2ee:	dec    esp
  41f2ef:	sahf   
  41f2f0:	cld    
  41f2f1:	enter  0x9959,0xa
  41f2f5:	pop    ds
  41f2f6:	inc    esi
  41f2f7:	mul    BYTE PTR [eax]
  41f2f9:	mov    bh,0xc4
  41f2fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f2fc:	push   eax
  41f2fd:	push   ds
  41f2fe:	xchg   ebp,eax
  41f2ff:	leave  
  41f300:	stc    
  41f301:	fcmovbe st,st(4)
  41f303:	in     al,dx
  41f304:	cmp    DWORD PTR [ebx+esi*8],edi
  41f307:	add    eax,0xc25695ed
  41f30c:	enter  0xe90a,0x70
  41f310:	cmp    edi,DWORD PTR [edx+0x4cfcdef6]
  41f316:	and    BYTE PTR [bp+di-0x5c09],cl
  41f31b:	sbb    ecx,DWORD PTR [edi+0x73]
  41f31e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f31f:	test   BYTE PTR [ebx],al
  41f321:	push   ecx
  41f322:	rcl    BYTE PTR [edx+ecx*2],cl
  41f325:	sbb    bh,BYTE PTR [edx-0x31]
  41f328:	ds (bad) 
  41f32a:	rcl    cl,1
  41f32c:	mov    eax,ds:0x1dd47cec
  41f331:	adc    cl,BYTE PTR [edi+0x3fad04a]
  41f337:	and    bh,cl
  41f339:	stos   BYTE PTR es:[edi],al
  41f33a:	lock mov ecx,DWORD PTR [ecx+0x267785f3]
  41f341:	pop    ss
  41f342:	jnp    0x41f399
  41f344:	mov    dh,0x44
  41f346:	int    0xf5
  41f348:	push   0xffffffc9
  41f34a:	fisubr WORD PTR [ebp-0x22cd082b]
  41f350:	and    DWORD PTR [ecx+edi*4-0x4bde920e],edx
  41f357:	int3   
  41f358:	or     ecx,DWORD PTR [edx-0x526a1c12]
  41f35e:	add    al,0x33
  41f360:	add    bh,dl
  41f362:	sti    
  41f363:	cmp    eax,DWORD PTR [edi]
  41f365:	jnp    0x41f3a1
  41f367:	or     DWORD PTR [ebx-0x2d675ebb],edx
  41f36d:	mov    al,0x1f
  41f36f:	sub    DWORD PTR [ecx+edx*1-0x5af84c9b],edx
  41f376:	mov    al,ds:0xbbf2817b
  41f37b:	int    0xc5
  41f37d:	adc    DWORD PTR [eax],ebp
  41f37f:	cwde   
  41f380:	in     eax,dx
  41f381:	ror    BYTE PTR [eax],1
  41f383:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f384:	fwait
  41f385:	test   ebx,esp
  41f387:	pop    ebx
  41f388:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f389:	mov    dl,0x9c
  41f38b:	mov    ds:0x73157b8d,eax
  41f390:	xchg   esp,eax
  41f391:	dec    ecx
  41f392:	jp     0x41f33c
  41f394:	pop    esp
  41f395:	xor    BYTE PTR [ebx+ebx*8+0x41c08fd3],dh
  41f39c:	aas    
  41f39d:	ss fld st(4)
  41f3a0:	mov    ch,0xdc
  41f3a2:	rcr    ebp,0xa4
  41f3a5:	shr    esp,cl
  41f3a7:	je     0x41f416
  41f3a9:	mov    ecx,0xb18ac427
  41f3ae:	out    dx,eax
  41f3af:	cdq    
  41f3b0:	icebp  
  41f3b1:	jle    0x41f358
  41f3b3:	call   0xdeead956
  41f3b8:	sbb    BYTE PTR ds:0xb571ba8f,al
  41f3be:	fbld   TBYTE PTR [ecx+0x28a7d1be]
  41f3c4:	xor    eax,0x8777a5f6
  41f3c9:	cmp    BYTE PTR [ecx+0xd3762d0],cl
  41f3cf:	push   ebp
  41f3d0:	sub    BYTE PTR [eax-0x133b705],cl
  41f3d6:	test   al,0x91
  41f3d8:	mov    DWORD PTR [ebx],ecx
  41f3da:	pop    ecx
  41f3db:	mov    eax,0xa326da72
  41f3e0:	push   ebx
  41f3e1:	xor    DWORD PTR [ebx-0x7fb3b9d5],esi
  41f3e7:	repnz pop ebp
  41f3e9:	je     0x41f3cd
  41f3eb:	gs push ds
  41f3ed:	mov    ds:0x18cfdb26,eax
  41f3f2:	adc    BYTE PTR [eax-0x2a],0x7f
  41f3f6:	dec    esp
  41f3f7:	cmp    ebp,DWORD PTR [ebp-0x78746609]
  41f3fd:	push   esp
  41f3fe:	or     BYTE PTR gs:[eax-0x763afa13],0xf0
  41f406:	ret    0xba83
  41f409:	sub    dh,BYTE PTR [ebx]
  41f40b:	rol    BYTE PTR [edi-0x78],0xee
  41f40f:	retf   
  41f410:	inc    edi
  41f411:	fwait
  41f412:	inc    eax
  41f413:	mov    ds:0xba18a21c,al
  41f418:	scas   al,BYTE PTR es:[edi]
  41f419:	pop    eax
  41f41a:	stos   DWORD PTR es:[edi],eax
  41f41b:	mov    ah,0xe
  41f41d:	jnp    0x41f48e
  41f41f:	sbb    BYTE PTR [ecx],0xe9
  41f422:	push   esp
  41f423:	pop    eax
  41f424:	shr    BYTE PTR [eax],1
  41f426:	cmp    al,0xb0
  41f428:	aam    0x7a
  41f42a:	pop    es
  41f42b:	mov    eax,0xbfd5f8f1
  41f430:	jge    0x41f46b
  41f432:	in     eax,dx
  41f433:	sbb    DWORD PTR [edx+0x51f43b12],esi
  41f439:	lods   al,BYTE PTR ds:[esi]
  41f43a:	movups xmm0,xmm5
  41f43d:	push   ebx
  41f43e:	fnstsw WORD PTR [edx+0xf]
  41f441:	cld    
  41f442:	and    ah,al
  41f444:	outs   dx,BYTE PTR ds:[esi]
  41f445:	inc    ebp
  41f446:	xor    DWORD PTR [edx+ebx*8-0x623987fb],0xffffffbc
  41f44e:	push   edi
  41f44f:	fs pop edi
  41f451:	in     eax,dx
  41f452:	scas   al,BYTE PTR es:[edi]
  41f453:	fdivrp st(0),st
  41f455:	jbe    0x41f430
  41f457:	mov    bl,0x19
  41f459:	xlat   BYTE PTR ds:[ebx]
  41f45a:	mov    esp,0x138166a8
  41f45f:	int    0xd6
  41f461:	dec    esp
  41f462:	sbb    dl,cl
  41f464:	xlat   BYTE PTR ds:[ebx]
  41f465:	pop    es
  41f466:	ja     0x41f4dd
  41f468:	in     eax,dx
  41f469:	addr16 jl 0x41f440
  41f46c:	test   eax,0x78a6fb4e
  41f471:	ret    
  41f472:	push   ds
  41f473:	xor    ebx,DWORD PTR [eax+0x5bfc0f1f]
  41f479:	lods   eax,DWORD PTR ds:[esi]
  41f47a:	mov    eax,0xfc8742e0
  41f47f:	dec    eax
  41f480:	pop    esi
  41f481:	outs   dx,DWORD PTR ds:[esi]
  41f482:	and    BYTE PTR ds:0xa53ff0b,dh
  41f488:	cld    
  41f489:	and    al,0xd9
  41f48b:	mov    edx,0x94b744ea
  41f490:	loopne 0x41f458
  41f492:	push   es
  41f493:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f494:	or     ecx,DWORD PTR [edi]
  41f496:	push   0xffffffc3
  41f498:	mov    ecx,0xe276ace
  41f49d:	mov    WORD PTR [edx],ds
  41f49f:	jmp    0x1bf25aae
  41f4a4:	push   edx
  41f4a5:	dec    esp
  41f4a6:	sbb    DWORD PTR [esi-0x1a7b95e2],esi
  41f4ac:	pop    esp
  41f4ad:	(bad)  
  41f4ae:	sub    ecx,ebp
  41f4b0:	mov    dh,0x1e
  41f4b2:	call   0x322b:0xd1ab5e33
  41f4b9:	xchg   ebp,eax
  41f4ba:	pop    esi
  41f4bb:	inc    ecx
  41f4bc:	addr16 push ebx
  41f4be:	jp     0x41f502
  41f4c0:	ins    DWORD PTR es:[edi],dx
  41f4c1:	rcr    ecx,1
  41f4c3:	mov    edi,0xc2032f4b
  41f4c8:	add    esi,DWORD PTR [ebx+esi*1]
  41f4cb:	mov    ecx,0xfe9c604c
  41f4d0:	pusha  
  41f4d1:	mov    gs,WORD PTR [esi-0xdd6010d]
  41f4d7:	lods   al,BYTE PTR ds:[esi]
  41f4d8:	xor    ebx,DWORD PTR [edx+0x47d374a1]
  41f4de:	out    0x72,eax
  41f4e0:	adc    eax,0x1539be2b
  41f4e5:	fcomp  DWORD PTR [edi-0x41e42d1]
  41f4eb:	mov    dl,0xd3
  41f4ed:	fst    QWORD PTR [eax]
  41f4ef:	into   
  41f4f0:	inc    eax
  41f4f1:	(bad)  
  41f4f2:	jle    0x41f47c
  41f4f4:	mov    dl,BYTE PTR [ebx]
  41f4f6:	pop    ebp
  41f4f7:	or     DWORD PTR [ecx],edx
  41f4f9:	jae    0x41f51a
  41f4fb:	popa   
  41f4fc:	je     0x41f55d
  41f4fe:	lahf   
  41f4ff:	sub    eax,0xb7ed7469
  41f504:	loopne 0x41f51f
  41f506:	pop    ss
  41f507:	ja     0x41f584
  41f509:	jbe    0x41f53d
  41f50b:	int3   
  41f50c:	in     al,dx
  41f50d:	mov    eax,0xa6ff18b3
  41f513:	test   eax,0x1f95e5b2
  41f518:	mov    ds:0x1d3d58e1,al
  41f51d:	cmp    bl,BYTE PTR gs:[ebp+edi*4+0x35]
  41f522:	dec    eax
  41f523:	addr16 sti 
  41f525:	fwait
  41f526:	test   al,0x60
  41f528:	lahf   
  41f529:	add    eax,0x96a1e5d9
  41f52e:	or     eax,0x92f9c257
  41f533:	jp     0x41f566
  41f535:	stos   BYTE PTR es:[edi],al
  41f536:	retf   
  41f537:	push   0xffffff8b
  41f539:	sub    DWORD PTR [edi+0x11223ad6],ebp
  41f53f:	and    al,0xe3
  41f541:	xchg   BYTE PTR ds:[eax-0x34b3a343],al
  41f548:	aad    0x39
  41f54a:	clc    
  41f54b:	cmc    
  41f54c:	xchg   edx,eax
  41f54d:	stc    
  41f54e:	jmp    0x740e22e2
  41f553:	inc    ebx
  41f554:	out    0x7f,al
  41f556:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f557:	jnp    0x41f543
  41f559:	sbb    DWORD PTR [ebx+0x2d],ebx
  41f55c:	sub    eax,0xe42e8802
  41f561:	aas    
  41f562:	out    0xf3,eax
  41f564:	sbb    DWORD PTR [esp+eax*2-0x60],esi
  41f568:	(bad)  
  41f569:	mov    cl,0xc7
  41f56b:	mov    ah,0x32
  41f56d:	mov    al,ds:0x4be87d7b
  41f572:	sub    BYTE PTR [esi-0x2a],cl
  41f575:	mov    WORD PTR [ebx-0x51],es
  41f578:	and    al,0xc2
  41f57a:	gs icebp 
  41f57c:	inc    ebp
  41f57d:	push   esp
  41f57e:	shl    DWORD PTR [esi],cl
  41f580:	fdiv   DWORD PTR [edx+eiz*8+0x13]
  41f584:	aad    0x5e
  41f586:	and    BYTE PTR [ebx+esi*8],bh
  41f589:	lea    ecx,[esi]
  41f58b:	add    esi,edx
  41f58d:	cmp    ah,BYTE PTR [edi-0x5a53c066]
  41f593:	add    dl,BYTE PTR [ebx+0x62b34c24]
  41f599:	adc    ecx,esp
  41f59b:	test   eax,0xb04e3ee2
  41f5a0:	lahf   
  41f5a1:	stos   DWORD PTR es:[edi],eax
  41f5a2:	scas   al,BYTE PTR es:[edi]
  41f5a3:	add    BYTE PTR [ebx*1-0x5fbd4289],0x4d
  41f5ab:	out    dx,eax
  41f5ac:	inc    edx
  41f5ad:	dec    edx
  41f5ae:	lods   al,BYTE PTR ds:[esi]
  41f5af:	push   ebp
  41f5b0:	je     0x41f5be
  41f5b2:	outs   dx,DWORD PTR ds:[esi]
  41f5b3:	sti    
  41f5b4:	pop    es
  41f5b5:	mov    ebx,0xd70cfb93
  41f5ba:	out    0x87,eax
  41f5bc:	and    BYTE PTR [esi],al
  41f5be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f5bf:	mov    eax,0x8fdc6757
  41f5c4:	in     al,dx
  41f5c5:	mov    bh,0x4b
  41f5c7:	mov    dl,0x51
  41f5c9:	dec    eax
  41f5ca:	pop    edi
  41f5cb:	jb     0x41f5a6
  41f5cd:	loopne 0x41f604
  41f5cf:	xchg   al,bh
  41f5d1:	jo     0x41f55f
  41f5d3:	gs jb  0x41f56b
  41f5d6:	jecxz  0x41f600
  41f5d8:	imul   ebx,DWORD PTR [edi+0x3fd311e],0x58
  41f5df:	cld    
  41f5e0:	fst    QWORD PTR [esi+ecx*8-0x7e4bb7a]
  41f5e7:	jp     0x41f57b
  41f5e9:	aas    
  41f5ea:	sbb    esi,ebp
  41f5ec:	aas    
  41f5ed:	fcmovnb st,st(5)
  41f5ef:	jmp    0x4c44091a
  41f5f4:	push   ds
  41f5f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f5f6:	and    dl,BYTE PTR ds:0xdf232a15
  41f5fc:	arpl   WORD PTR [ebx-0x39],cx
  41f5ff:	lahf   
  41f600:	pop    edx
  41f601:	pop    edx
  41f602:	shr    dh,0xc4
  41f605:	inc    ecx
  41f606:	retf   
  41f607:	push   esi
  41f608:	add    DWORD PTR [ebx+0x70],ebp
  41f60b:	retf   0xdcf1
  41f60e:	pusha  
  41f60f:	adc    al,0xba
  41f611:	mov    esi,DWORD PTR [edx+0x6e]
  41f614:	(bad)  
  41f615:	imul   ebp,DWORD PTR [edi-0x32],0xfa651929
  41f61c:	fs fxam 
  41f61f:	nop
  41f620:	inc    ecx
  41f621:	lods   al,BYTE PTR es:[esi]
  41f623:	(bad)  
  41f624:	pop    esp
  41f625:	mov    esp,0xf865cbbf
  41f62a:	enter  0xe4bc,0x8f
  41f62e:	inc    ebp
  41f62f:	je     0x41f5dd
  41f631:	mov    BYTE PTR [edi+0x7a],0x8b
  41f635:	jbe    0x41f659
  41f637:	and    edi,esp
  41f639:	shl    esi,0x5d
  41f63c:	pushf  
  41f63d:	xor    BYTE PTR [edx-0x53],0x3
  41f641:	push   0x4
  41f643:	ret    
  41f644:	mov    DWORD PTR [ebx+0x66],ebp
  41f647:	xchg   ebx,eax
  41f648:	lahf   
  41f649:	cmc    
  41f64a:	js     0x41f6b6
  41f64c:	cmp    DWORD PTR [eax+eax*4-0x23],eax
  41f650:	xchg   ecx,eax
  41f651:	mov    DWORD PTR [edx],esp
  41f653:	jnp    0x41f6c4
  41f655:	adc    eax,0x1f9fb303
  41f65a:	xor    eax,0xeef0fa64
  41f65f:	adc    ch,BYTE PTR [esi+0x37]
  41f662:	or     eax,0x28495be6
  41f667:	ds loop 0x41f5f6
  41f66a:	pop    ds
  41f66b:	nop
  41f66c:	pop    esi
  41f66d:	pop    esi
  41f66e:	bound  eax,QWORD PTR [ecx]
  41f670:	jmp    0x6f0236c5
  41f675:	js     0x41f67d
  41f677:	adc    ebx,edx
  41f679:	hlt    
  41f67a:	xor    DWORD PTR [esi-0x45],0x42
  41f67e:	mov    dl,0xac
  41f680:	cmp    cl,0x97
  41f683:	scas   eax,DWORD PTR es:[edi]
  41f684:	inc    ecx
  41f685:	push   0xffffff95
  41f687:	or     ebp,0x4d
  41f68a:	shl    BYTE PTR [eax],cl
  41f68c:	xchg   DWORD PTR [ecx+esi*1],ebx
  41f68f:	xchg   esi,eax
  41f690:	mov    ah,BYTE PTR [edi-0x56]
  41f693:	add    al,0x7
  41f695:	cmp    BYTE PTR [ebx-0x4e],0xfe
  41f699:	xchg   esi,eax
  41f69a:	jmp    0x41f67d
  41f69c:	gs mov al,0xc3
  41f69f:	out    dx,al
  41f6a0:	and    eax,0xf127574a
  41f6a5:	push   0xffffffa2
  41f6a7:	js     0x41f6ca
  41f6a9:	dec    esi
  41f6aa:	and    DWORD PTR [eax-0x554134a9],ebx
  41f6b0:	jle    0x41f70a
  41f6b2:	jp     0x41f69f
  41f6b4:	mov    dl,0x53
  41f6b6:	mov    dh,0x5b
  41f6b8:	mov    al,ds:0xb724585d
  41f6bd:	leave  
  41f6be:	adc    DWORD PTR [edx+0x78],0x2570f425
  41f6c5:	jp     0x41f729
  41f6c7:	mov    esi,DWORD PTR [edx+esi*4-0x4b]
  41f6cb:	adc    DWORD PTR [ebx],esp
  41f6cd:	mov    BYTE PTR [edx+0x57],cl
  41f6d0:	ins    BYTE PTR es:[edi],dx
  41f6d1:	loopne 0x41f6d5
  41f6d3:	mov    esi,0xd1953dcd
  41f6d8:	(bad)  
  41f6d9:	iret   
  41f6da:	loop   0x41f6ce
  41f6dc:	and    BYTE PTR gs:[ecx-0x32],cl
  41f6e0:	sub    ecx,esi
  41f6e2:	dec    eax
  41f6e3:	iret   
  41f6e4:	popf   
  41f6e5:	mov    esi,0xbebed28a
  41f6ea:	imul   edx,esi,0xb
  41f6ed:	stos   BYTE PTR es:[edi],al
  41f6ee:	and    DWORD PTR [eax-0x3f],edi
  41f6f1:	sti    
  41f6f2:	adc    DWORD PTR [ebp-0x39660965],edx
  41f6f8:	pop    es
  41f6f9:	sub    eax,0x9862c067
  41f6fe:	pop    esi
  41f6ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f700:	push   ebp
  41f701:	ins    DWORD PTR es:[edi],dx
  41f702:	xchg   ebp,eax
  41f703:	mov    ds:0xa9c4cf53,eax
  41f708:	cmp    DWORD PTR ds:0x3e19ec5b,ebx
  41f70e:	add    ecx,eax
  41f710:	mov    esp,0x499e7ace
  41f715:	mov    ds:0x25149bc5,eax
  41f71a:	ret    0xe2f2
  41f71d:	cdq    
  41f71e:	push   esi
  41f71f:	push   0x4702ace2
  41f724:	fidivr WORD PTR [ebx]
  41f726:	xchg   ebp,eax
  41f727:	mov    ch,0x66
  41f729:	(bad)  
  41f72a:	push   cs
  41f72b:	bound  edx,QWORD PTR cs:[ebp-0x7feaa749]
  41f732:	jge    0x41f746
  41f734:	push   0x9327ba3e
  41f739:	jecxz  0x41f74b
  41f73b:	adc    al,0xa5
  41f73d:	out    dx,eax
  41f73e:	(bad)  
  41f73f:	es ja  0x41f6d2
  41f742:	mov    ebx,0x6967100a
  41f747:	(bad)  
  41f748:	cmc    
  41f749:	bound  esi,QWORD PTR [ecx+0x70]
  41f74c:	mov    dh,0x9a
  41f74e:	call   0xdcc1673f
  41f753:	(bad)  
  41f754:	cmp    al,0xf
  41f756:	mov    ebx,0xee21b393
  41f75b:	repnz push ebp
  41f75d:	push   edi
  41f75e:	in     eax,0x69
  41f760:	data16 and al,0xcf
  41f763:	and    al,0x71
  41f765:	scas   eax,DWORD PTR es:[edi]
  41f766:	mov    cl,0x76
  41f768:	or     edx,DWORD PTR [ebp-0x36696ae4]
  41f76e:	sti    
  41f76f:	int3   
  41f770:	call   0xbb3f6c58
  41f775:	pop    esp
  41f776:	outs   dx,BYTE PTR ds:[esi]
  41f777:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f778:	push   edx
  41f779:	jp     0x41f7f2
  41f77b:	out    dx,al
  41f77c:	stos   DWORD PTR es:[edi],eax
  41f77d:	mov    ss,edx
  41f77f:	mov    bh,BYTE PTR [ebx+ebp*8]
  41f782:	cmc    
  41f783:	sub    ecx,eax
  41f785:	fmul   DWORD PTR [ebp+0x7b]
  41f788:	sub    DWORD PTR [ebp-0x1e],ebp
  41f78b:	adc    eax,eax
  41f78d:	fcmovnu st,st(3)
  41f78f:	push   ebx
  41f790:	xor    DWORD PTR [edi],ebx
  41f792:	lds    ecx,FWORD PTR [esi+eax*4]
  41f795:	add    al,0xe
  41f797:	cmp    al,0x3e
  41f799:	adc    eax,0xdee8b677
  41f79e:	and    DWORD PTR [eax+0x1c],0xc
  41f7a2:	mov    edx,ebx
  41f7a4:	push   eax
  41f7a5:	dec    eax
  41f7a6:	push   ebx
  41f7a7:	repz or edi,DWORD PTR ds:0x6cc400cb
  41f7ae:	repnz sbb DWORD PTR [edi+eiz*8-0x2e],edx
  41f7b3:	dec    ebp
  41f7b4:	push   edx
  41f7b5:	das    
  41f7b6:	mov    esi,0x2ce85112
  41f7bb:	(bad)  
  41f7bd:	retfw  0xce12
  41f7c1:	imul   esi,DWORD PTR [edx+0x57],0xbdafb5a1
  41f7c8:	arpl   si,dx
  41f7ca:	inc    ecx
  41f7cb:	je     0x41f847
  41f7cd:	ins    DWORD PTR es:[edi],dx
  41f7ce:	std    
  41f7cf:	inc    esi
  41f7d0:	pop    es
  41f7d1:	or     al,0x5d
  41f7d3:	test   eax,0xd47a802a
  41f7d8:	and    eax,0xd9c2c71d
  41f7dd:	cmc    
  41f7de:	je     0x41f83b
  41f7e0:	adc    dh,BYTE PTR [eax-0x38497f3a]
  41f7e6:	sub    eax,0x7a3a8ce1
  41f7eb:	dec    edx
  41f7ec:	adc    al,0x56
  41f7ee:	stos   DWORD PTR es:[edi],eax
  41f7ef:	dec    ebp
  41f7f0:	sahf   
  41f7f1:	test   al,0xdf
  41f7f3:	cmp    eax,0x7dcf2fc4
  41f7f8:	sub    BYTE PTR ds:0x1f16b2db,0xc1
  41f7ff:	mov    edx,0xf8d0631e
  41f804:	xchg   edi,eax
  41f805:	sub    al,BYTE PTR [esi+0x11]
  41f808:	iret   
  41f809:	jmp    0x4b0080d5
  41f80e:	xor    ebp,eax
  41f810:	push   es
  41f811:	mov    BYTE PTR [esi],dh
  41f813:	inc    edi
  41f814:	push   cs
  41f815:	idiv   DWORD PTR [eax+0x33]
  41f818:	mov    esp,0x7fdc28f6
  41f81d:	js     0x41f85a
  41f81f:	enter  0xf6fc,0x25
  41f823:	nop
  41f824:	mov    ebp,DWORD PTR [ebp+0xf]
  41f827:	add    DWORD PTR [ebx+0x23fecc35],esp
  41f82d:	stos   BYTE PTR es:[edi],al
  41f82e:	dec    esi
  41f82f:	xor    ah,BYTE PTR [eax-0x69]
  41f832:	data16 clc 
  41f834:	push   ds
  41f835:	fst    st(4)
  41f837:	jl     0x41f8b7
  41f839:	(bad)  
  41f83a:	mov    al,0x6c
  41f83c:	or     DWORD PTR [esi-0x29a7e92b],esi
  41f842:	hlt    
  41f843:	cmp    BYTE PTR [edx+0x13058d46],cl
  41f849:	xchg   esi,eax
  41f84a:	jae    0x41f891
  41f84c:	scas   al,BYTE PTR es:[edi]
  41f84d:	mov    bh,0xae
  41f84f:	std    
  41f850:	jmp    0x41f85b
  41f852:	je     0x41f8a5
  41f854:	adc    DWORD PTR [esi],0x4a
  41f857:	outs   dx,BYTE PTR ds:[esi]
  41f858:	fs xchg esi,eax
  41f85a:	mov    ds:0x1e5e944f,al
  41f85f:	mov    cl,0x84
  41f861:	out    dx,eax
  41f862:	push   ebp
  41f863:	imul   edi,DWORD PTR [edi+0x1],0x3a454022
  41f86a:	add    DWORD PTR [ebx],eax
  41f86c:	mov    al,BYTE PTR [ecx-0x7cb16dd7]
  41f872:	call   0x7aa1dd4
  41f877:	setnp  BYTE PTR ds:0xe47c5450
  41f87e:	sub    DWORD PTR [edi],esp
  41f880:	cmp    dh,BYTE PTR [ebp-0x5b]
  41f883:	pushf  
  41f884:	jbe    0x41f900
  41f886:	xchg   edx,eax
  41f887:	cmp    BYTE PTR [ecx-0x7f93739],dh
  41f88d:	daa    
  41f88e:	jbe    0x41f86a
  41f890:	and    edx,DWORD PTR [esi]
  41f892:	dec    ecx
  41f893:	stos   BYTE PTR es:[edi],al
  41f894:	sbb    al,0x2d
  41f896:	outs   dx,DWORD PTR ds:[esi]
  41f897:	ret    
  41f898:	pop    ebx
  41f899:	dec    eax
  41f89a:	xor    al,0x97
  41f89c:	dec    edx
  41f89d:	lea    ebp,[edx-0x73587ac3]
  41f8a3:	(bad)  
  41f8a4:	and    eax,DWORD PTR [edi]
  41f8a6:	pop    esi
  41f8a7:	repz or BYTE PTR [edx+0x6f],cl
  41f8ab:	inc    edi
  41f8ac:	imul   DWORD PTR ds:0xfb2f5d4f
  41f8b2:	push   ds
  41f8b3:	push   ebx
  41f8b4:	sbb    DWORD PTR [edi],0xffffffde
  41f8b7:	pop    eax
  41f8b8:	daa    
  41f8b9:	lods   al,BYTE PTR ds:[esi]
  41f8ba:	gs repz in eax,dx
  41f8bd:	jns    0x41f8f0
  41f8bf:	jecxz  0x41f85c
  41f8c1:	pop    esi
  41f8c2:	lahf   
  41f8c3:	inc    esp
  41f8c4:	into   
  41f8c5:	jge    0x41f884
  41f8c7:	jl     0x41f922
  41f8c9:	sahf   
  41f8ca:	mov    ds:0xd153d1b1,al
  41f8cf:	ss sub al,0x70
  41f8d2:	in     eax,dx
  41f8d3:	cmp    cl,al
  41f8d5:	mov    fs,WORD PTR [eax+edi*8]
  41f8d8:	fsubr  DWORD PTR [edi+0x2ab8e25c]
  41f8de:	push   0x72
  41f8e0:	aaa    
  41f8e1:	sub    DWORD PTR ds:0x73403fe5,edx
  41f8e7:	jp     0x41f876
  41f8e9:	push   esp
  41f8ea:	lods   eax,DWORD PTR ds:[esi]
  41f8eb:	cmp    eax,0x385f65f3
  41f8f0:	push   edx
  41f8f1:	jmp    0x5a2cbe45
  41f8f6:	and    bl,BYTE PTR [ebp-0xded5f4d]
  41f8fc:	push   es
  41f8fd:	and    eax,0x9756b91b
  41f902:	aam    0xc6
  41f904:	test   al,0x2f
  41f906:	jge    0x41f916
  41f908:	dec    edx
  41f909:	or     al,0xaa
  41f90b:	jmp    0x1e2ae31a
  41f910:	jo     0x41f96e
  41f912:	sbb    eax,0xe5d6b19d
  41f917:	add    BYTE PTR [esi],0xee
  41f91a:	mov    bl,BYTE PTR ds:0x505ad760
  41f920:	or     eax,0xaf49aed2
  41f925:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f926:	dec    edx
  41f927:	or     DWORD PTR [edi+0x5db91b4d],esp
  41f92d:	stc    
  41f92e:	scas   eax,DWORD PTR es:[edi]
  41f92f:	jnp    0x41f947
  41f931:	das    
  41f932:	in     eax,dx
  41f933:	ds push ds
  41f935:	jae    0x41f912
  41f937:	iret   
  41f938:	nop
  41f939:	call   0xec:0x9edbaf63
  41f940:	repnz clc 
  41f942:	lods   al,BYTE PTR ds:[esi]
  41f943:	test   ebp,edi
  41f945:	push   cs
  41f946:	mov    DWORD PTR [esi+ebp*1],eax
  41f949:	rcl    DWORD PTR [esi],0xe0
  41f94c:	lds    edx,FWORD PTR [edi-0x32]
  41f94f:	jg     0x41f999
  41f951:	add    edi,DWORD PTR [esi+0x2d]
  41f954:	stos   DWORD PTR es:[edi],eax
  41f955:	pusha  
  41f956:	pop    es
  41f957:	cmp    BYTE PTR [ebp-0x614223ac],cl
  41f95d:	mov    bl,0x4b
  41f95f:	mov    cl,0xaf
  41f961:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f962:	push   eax
  41f963:	xor    DWORD PTR [ebp+0x657cabaf],edi
  41f969:	mov    bh,0xa0
  41f96b:	and    BYTE PTR [eax+0x3b],ch
  41f96e:	push   ebx
  41f96f:	push   edi
  41f970:	pop    eax
  41f971:	add    esi,DWORD PTR [edi]
  41f973:	jbe    0x41f913
  41f975:	jbe    0x41f934
  41f977:	push   eax
  41f978:	call   0x82be7a5
  41f97d:	mov    dl,0x7f
  41f97f:	fst    DWORD PTR [eax+0x7a]
  41f982:	adc    eax,0x47249c2a
  41f987:	mov    ch,0x98
  41f989:	inc    di
  41f98b:	xor    edx,0x437a29c
  41f991:	inc    esi
  41f992:	jae    0x41f979
  41f994:	add    edx,DWORD PTR [ecx-0x100f89e]
  41f99a:	fisubr DWORD PTR [ecx]
  41f99c:	xchg   BYTE PTR [edi-0x59],al
  41f99f:	dec    edi
  41f9a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f9a1:	popf   
  41f9a2:	out    dx,al
  41f9a3:	inc    ebp
  41f9a4:	ja     0x41f987
  41f9a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f9a7:	or     al,0xbc
  41f9a9:	or     eax,ebp
  41f9ab:	shr    BYTE PTR [esp+edi*4-0x5f],0xf4
  41f9b0:	add    BYTE PTR [ebp+0x6e],dl
  41f9b3:	jecxz  0x41fa32
  41f9b5:	ror    ah,cl
  41f9b7:	div    BYTE PTR [edi-0x42]
  41f9ba:	pop    edx
  41f9bb:	int    0xe6
  41f9bd:	fwait
  41f9be:	pop    ecx
  41f9bf:	dec    ebp
  41f9c0:	push   edx
  41f9c1:	push   es
  41f9c2:	lea    esp,[eax+0x5c]
  41f9c5:	pop    esi
  41f9c6:	outs   dx,DWORD PTR ds:[esi]
  41f9c7:	icebp  
  41f9c8:	push   esi
  41f9c9:	fsub   QWORD PTR [edx+ebp*2-0x43]
  41f9cd:	dec    esi
  41f9ce:	jo     0x41f967
  41f9d0:	jb     0x41f9a6
  41f9d2:	arpl   cx,bx
  41f9d4:	cmp    al,0xcd
  41f9d6:	xchg   esi,eax
  41f9d7:	(bad)  
  41f9d9:	clc    
  41f9da:	std    
  41f9db:	test   BYTE PTR [esi-0x23],cl
  41f9de:	repz clc 
  41f9e0:	arpl   bx,ax
  41f9e2:	sbb    al,0xe1
  41f9e4:	xchg   edi,eax
  41f9e5:	jecxz  0x41fa19
  41f9e7:	mov    ch,ah
  41f9e9:	mov    eax,0x4b229823
  41f9ee:	je     0x41f9a3
  41f9f0:	fcomp  DWORD PTR [eax+0xc]
  41f9f3:	xchg   edx,eax
  41f9f4:	pusha  
  41f9f5:	cmp    cl,BYTE PTR ds:0x804604dd
  41f9fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f9fc:	jl     0x41fa6f
  41f9fe:	xchg   ecx,eax
  41f9ff:	push   ebp
  41fa00:	mov    bh,0x8f
  41fa02:	es loopne 0x41f9c3
  41fa05:	or     DWORD PTR [edx-0x39],ebp
  41fa08:	push   eax
  41fa09:	xchg   eax,edx
  41fa0b:	iret   
  41fa0c:	xchg   esp,eax
  41fa0d:	mov    eax,0x2b760ebb
  41fa12:	add    BYTE PTR [eax+0x56],ah
  41fa15:	lods   al,BYTE PTR ds:[esi]
  41fa16:	pop    ecx
  41fa17:	sub    dh,BYTE PTR [eax-0x7a591ea1]
  41fa1d:	jg     0x41fa53
  41fa1f:	xchg   ch,dh
  41fa21:	cmp    eax,0x47b4a63a
  41fa26:	mov    ebp,DWORD PTR [esi+0x78]
  41fa29:	push   eax
  41fa2a:	xor    BYTE PTR [eax],bl
  41fa2c:	mov    ecx,0xa74b929b
  41fa31:	mov    ecx,0x143f1ecf
  41fa36:	sbb    eax,0xdab6ee
  41fa3b:	xchg   edi,eax
  41fa3c:	jle    0x41faa9
  41fa3e:	aam    0x51
  41fa40:	fstp   DWORD PTR [eax-0x52]
  41fa43:	pop    esi
  41fa44:	mov    ch,0xed
  41fa46:	in     eax,dx
  41fa47:	sbb    dh,BYTE PTR [eax]
  41fa49:	push   ecx
  41fa4a:	fcomip st,st(3)
  41fa4c:	xor    edx,DWORD PTR [eax-0x70]
  41fa4f:	pusha  
  41fa50:	mov    ecx,0xefc6ef18
  41fa55:	adc    esi,edi
  41fa57:	mov    ds:0x217f7925,eax
  41fa5c:	xchg   edi,eax
  41fa5d:	test   eax,0x8eadbc2d
  41fa62:	lods   eax,DWORD PTR ds:[esi]
  41fa63:	ss add al,0xe3
  41fa66:	stc    
  41fa67:	cmovns ecx,DWORD PTR [esi-0x6afd70b]
  41fa6e:	and    bh,BYTE PTR [ecx+0x60c57fa]
  41fa74:	pop    edx
  41fa75:	scas   al,BYTE PTR es:[edi]
  41fa76:	and    DWORD PTR [edi+0x1a],edx
  41fa79:	add    al,0x6c
  41fa7b:	xor    edx,edx
  41fa7d:	fwait
  41fa7e:	dec    ebp
  41fa7f:	xor    edx,0xffffffe1
  41fa82:	adc    edi,DWORD PTR [ebx]
  41fa84:	fcomp  QWORD PTR [eax+0x44]
  41fa87:	imul   edi,DWORD PTR [edi],0xe7c6459e
  41fa8d:	cmp    esi,DWORD PTR [ebp-0x4009f3bd]
  41fa93:	adc    eax,0xf9b4b28c
  41fa98:	arpl   WORD PTR [eax],si
  41fa9a:	je     0x41faf6
  41fa9c:	push   es
  41fa9d:	inc    ecx
  41fa9e:	pop    eax
  41fa9f:	cwde   
  41faa0:	out    dx,eax
  41faa1:	jmp    0x6b31:0x1b3f9aeb
  41faa8:	sti    
  41faa9:	xchg   ecx,eax
  41faaa:	fldenv [edi]
  41faac:	loope  0x41fa6c
  41faae:	push   ss
  41faaf:	dec    edi
  41fab0:	ds add al,0x4
  41fab3:	pop    esi
  41fab4:	sub    DWORD PTR [edx+0xc],esp
  41fab7:	adc    dl,BYTE PTR ds:[eax-0x16]
  41fabb:	jmp    0x7537:0xd199dec6
  41fac2:	mov    bh,0xab
  41fac4:	pusha  
  41fac5:	fdiv   QWORD PTR [edi+0x68e51f8d]
  41facb:	addr16 add esp,edx
  41face:	idiv   DWORD PTR [edx+0x5d]
  41fad1:	rcr    BYTE PTR [ebp-0x361ab183],0xb8
  41fad8:	jge    0x41fad8
  41fada:	lods   al,BYTE PTR ds:[esi]
  41fadb:	push   ebp
  41fadc:	ret    
  41fadd:	pop    ebx
  41fade:	aad    0x6
  41fae0:	clc    
  41fae1:	cmp    esi,DWORD PTR [ecx-0x3c8b0a27]
  41fae7:	mov    ebx,0xb2fe251b
  41faec:	(bad)  
  41faed:	pop    ss
  41faee:	jmp    0xd470:0x9704b76a
  41faf5:	add    al,0x32
  41faf7:	fldz   
  41faf9:	imul   edx,edi,0xffffffa9
  41fafc:	cmp    cl,BYTE PTR ds:0x90bee2bd
  41fb02:	inc    DWORD PTR [eax+eax*8]
  41fb05:	test   BYTE PTR [edi-0x78],0xd0
  41fb09:	iret   
  41fb0a:	gs nop
  41fb0c:	dec    edx
  41fb0d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fb0f:	ss pusha 
  41fb11:	movups XMMWORD PTR [ecx+0x73dd3cc7],xmm3
  41fb18:	call   0x2b6d2008
  41fb1d:	rcr    ch,cl
  41fb1f:	cwde   
  41fb20:	mov    al,0x59
  41fb22:	aad    0x8e
  41fb24:	sub    ebp,DWORD PTR [eax-0x73]
  41fb27:	cmc    
  41fb28:	push   ebp
  41fb29:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fb2a:	popa   
  41fb2b:	std    
  41fb2c:	cdq    
  41fb2d:	jno    0x41fb85
  41fb2f:	cli    
  41fb30:	mov    eax,edi
  41fb32:	push   eax
  41fb33:	cmp    DWORD PTR [ebx],esp
  41fb35:	jb     0x41fb17
  41fb37:	add    al,0xa3
  41fb39:	loop   0x41fb9d
  41fb3b:	push   ecx
  41fb3c:	inc    ecx
  41fb3d:	mov    cs,edx
  41fb3f:	js     0x41fae7
  41fb41:	push   0xfffffff3
  41fb43:	jno    0x41fb80
  41fb45:	mov    ebx,0x21ac77f4
  41fb4a:	mov    ch,0x2
  41fb4c:	inc    esp
  41fb4d:	jae    0x41fba8
  41fb4f:	scas   eax,DWORD PTR es:[edi]
  41fb50:	fcomp  QWORD PTR [edi]
  41fb52:	gs scas al,BYTE PTR es:[edi]
  41fb54:	icebp  
  41fb55:	pop    es
  41fb56:	test   DWORD PTR [edx+0x14034c1],ebp
  41fb5c:	mov    ds,WORD PTR ds:0x79162039
  41fb62:	pop    eax
  41fb63:	push   ss
  41fb64:	mov    cl,0xbe
  41fb66:	pop    ebx
  41fb67:	lea    ebx,ds:0xfb64d229
  41fb6d:	aad    0xe1
  41fb6f:	cwde   
  41fb70:	repz leave 
  41fb72:	mov    ecx,fs
  41fb74:	out    0x94,al
  41fb76:	mov    ebp,0xc9a72dbb
  41fb7b:	jns    0x41fb18
  41fb7d:	fimul  DWORD PTR [ecx-0x5b]
  41fb80:	jge    0x41fbd2
  41fb82:	cld    
  41fb83:	cdq    
  41fb84:	jecxz  0x41fb51
  41fb86:	cmp    DWORD PTR [esi-0x359d4334],ecx
  41fb8c:	dec    edx
  41fb8d:	shl    BYTE PTR [eax-0xf31367b],0x71
  41fb94:	loope  0x41fb3b
  41fb96:	push   esp
  41fb97:	je     0x41fbf6
  41fb99:	cmp    edx,DWORD PTR [esi]
  41fb9b:	cmp    al,0x4e
  41fb9d:	ja     0x41fbc4
  41fb9f:	adc    eax,0x616092fd
  41fba4:	and    DWORD PTR ds:0xe01c9a75,ebx
  41fbaa:	sbb    eax,0xee884e61
  41fbaf:	push   ds
  41fbb0:	adc    DWORD PTR [eax+edx*2-0x1b],esi
  41fbb4:	ds ret 
  41fbb6:	jecxz  0x41fbfd
  41fbb8:	pop    ecx
  41fbb9:	mov    bl,0xdd
  41fbbb:	cmp    eax,0x5bdc41b1
  41fbc0:	ds lock push esi
  41fbc3:	inc    eax
  41fbc4:	and    al,0x0
  41fbc6:	dec    esi
  41fbc7:	adc    ebx,0x29
  41fbca:	(bad)  [esi-0x20]
  41fbcd:	and    eax,DWORD PTR [edx+0x23855624]
  41fbd3:	clc    
  41fbd4:	call   0x589:0xbc34393a
  41fbdb:	mov    esi,0x79b69b30
  41fbe0:	nop
  41fbe1:	test   BYTE PTR [edi+eiz*1],bl
  41fbe4:	push   ebp
  41fbe5:	jbe    0x41fbe8
  41fbe7:	push   eax
  41fbe8:	jl     0x41fc2f
  41fbea:	jg     0x41fc5e
  41fbec:	xor    DWORD PTR [ecx],edi
  41fbee:	jmp    0xd531082f
  41fbf3:	arpl   sp,bp
  41fbf5:	jp     0x41fc2c
  41fbf7:	xchg   esi,eax
  41fbf8:	and    eax,0xa254fa9c
  41fbfd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fbfe:	mov    DWORD PTR gs:[edi+0x50],0x33ab8e65
  41fc06:	loop   0x41fbfc
  41fc08:	addr16 fwait
  41fc0a:	inc    edx
  41fc0b:	shl    ah,0xbb
  41fc0e:	mov    WORD PTR [ebp-0x2f],es
  41fc11:	jo     0x41fc1b
  41fc13:	ficom  DWORD PTR [edi-0x7ec58481]
  41fc19:	(bad)  
  41fc1a:	jmp    0x3ea8:0x6a374c9a
  41fc21:	pop    eax
  41fc22:	mov    esp,0x1cb2ce09
  41fc27:	push   edx
  41fc28:	jno    0x41fc69
  41fc2a:	imul   esi,DWORD PTR [ebx+0x67],0x75
  41fc2e:	xchg   ecx,eax
  41fc2f:	and    DWORD PTR [esi+ebx*2],esp
  41fc32:	xlat   BYTE PTR ds:[ebx]
  41fc33:	int    0xb8
  41fc35:	xor    DWORD PTR [ecx],esi
  41fc37:	pop    eax
  41fc38:	mov    esp,0xfc8c9f6c
  41fc3d:	or     ah,BYTE PTR ds:0xdfacade1
  41fc43:	add    esp,DWORD PTR [ecx+0x5a]
  41fc46:	push   ds
  41fc47:	out    0xe3,al
  41fc49:	jmp    0x41fc77
  41fc4b:	popf   
  41fc4c:	cmc    
  41fc4d:	mov    ecx,0x96ca0b82
  41fc52:	push   ecx
  41fc53:	or     bh,BYTE PTR [ebp-0x55]
  41fc56:	fidiv  DWORD PTR [ebx+0x58edf536]
  41fc5c:	or     eax,edx
  41fc5e:	retf   
  41fc5f:	jno    0x41fc93
  41fc61:	jnp    0x41fc0a
  41fc63:	ret    
  41fc64:	(bad)  
  41fc65:	jp     0x41fcd4
  41fc67:	push   ecx
  41fc68:	jmp    0x41fcbb
  41fc6a:	mov    eax,ds:0x30476cd4
  41fc6f:	xor    DWORD PTR [ebp+0x699359a6],0x3f
  41fc76:	jmp    0x41fcca
  41fc78:	sub    al,BYTE PTR [ebp-0x354f693]
  41fc7e:	iret   
  41fc7f:	les    ebx,FWORD PTR [edi]
  41fc81:	sahf   
  41fc82:	aad    0xd6
  41fc84:	adc    DWORD PTR [eax-0x1e],0x27dee011
  41fc8b:	ss dec ecx
  41fc8d:	jns    0x2eb942e4
  41fc93:	cmp    DWORD PTR [edi+eiz*8],0x1a
  41fc97:	pop    esi
  41fc98:	or     al,0x6
  41fc9a:	popa   
  41fc9b:	push   ds
  41fc9c:	dec    ebx
  41fc9d:	or     eax,0xdceb7972
  41fca2:	test   al,0xac
  41fca4:	loope  0x41fcf1
  41fca6:	pop    ebx
  41fca7:	call   0x9e4ad62d
  41fcac:	sbb    DWORD PTR [ebp+eax*1-0x3570a991],esp
  41fcb3:	adc    BYTE PTR [eax-0x30b1f256],dh
  41fcb9:	xchg   BYTE PTR [esp+eax*4],dl
  41fcbc:	test   DWORD PTR [edi+0x2c],edx
  41fcbf:	or     BYTE PTR [edi+eiz*2-0x78],al
  41fcc3:	pop    ebp
  41fcc4:	inc    ebx
  41fcc5:	cmp    ebx,DWORD PTR [ebx]
  41fcc7:	mov    ah,0x6f
  41fcc9:	es loop 0x41fca2
  41fccc:	and    ebp,DWORD PTR [ebp-0x2c60b658]
  41fcd2:	dec    ebx
  41fcd3:	jp     0x41fd16
  41fcd5:	fdivr  st,st(4)
  41fcd7:	test   al,0x2c
  41fcd9:	sbb    al,0xb7
  41fcdb:	sbb    BYTE PTR ds:0x36f64640,0x56
  41fce2:	int    0xce
  41fce4:	mov    bl,0x90
  41fce6:	mov    al,0x5
  41fce8:	xor    bh,ch
  41fcea:	push   esi
  41fceb:	mov    ah,0x55
  41fced:	push   cs
  41fcee:	jmp    0x41fd18
  41fcf0:	mov    esi,0x8a040e2e
  41fcf5:	aam    0x78
  41fcf7:	into   
  41fcf8:	aas    
  41fcf9:	cs inc eax
  41fcfb:	xlat   BYTE PTR ds:[ebx]
  41fcfc:	js     0x41fcd5
  41fcfe:	inc    ecx
  41fcff:	hlt    
  41fd00:	call   0xd81c:0x87513c4a
  41fd07:	fdivr  st(0),st
  41fd09:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fd0a:	and    ebp,edi
  41fd0c:	hlt    
  41fd0d:	mov    ch,0x58
  41fd0f:	dec    ebx
  41fd10:	dec    eax
  41fd11:	push   ebx
  41fd12:	rcl    BYTE PTR [edi+edx*1-0x65272d2b],1
  41fd19:	sub    esi,DWORD PTR [ecx+0x4586583e]
  41fd1f:	pusha  
  41fd20:	xor    al,0x14
  41fd22:	mov    dl,0xdb
  41fd24:	sti    
  41fd25:	xor    DWORD PTR [ecx],0x2c
  41fd28:	inc    ecx
  41fd29:	(bad)  
  41fd2a:	retf   
  41fd2b:	aad    0x63
  41fd2d:	sub    BYTE PTR [esi+eiz*8-0x4ee6709b],cl
  41fd34:	push   eax
  41fd35:	fsubr  st,st(7)
  41fd37:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fd38:	lds    esi,FWORD PTR ds:0x17abde90
  41fd3e:	jle    0x41fccd
  41fd40:	mov    ebx,0x46a7a424
  41fd45:	pop    esi
  41fd46:	jmp    DWORD PTR ds:0xd0001382
  41fd4c:	mov    ecx,db1
  41fd4f:	inc    esi
  41fd50:	pop    ebp
  41fd51:	in     eax,dx
  41fd52:	adc    al,0x21
  41fd54:	mov    ch,0x21
  41fd56:	sbb    eax,0x9eab5637
  41fd5b:	xor    eax,0x4e644e0e
  41fd60:	popa   
  41fd61:	pop    ebx
  41fd62:	jb     0x41fdbb
  41fd64:	or     al,0x2b
  41fd66:	les    edx,FWORD PTR [eax+0x278484fd]
  41fd6c:	daa    
  41fd6d:	xor    eax,0x15700913
  41fd72:	push   ebp
  41fd73:	(bad)  
  41fd74:	pushf  
  41fd75:	leave  
  41fd76:	cmp    al,0x83
  41fd78:	ret    0x1df7
  41fd7b:	inc    ebp
  41fd7c:	ins    DWORD PTR es:[edi],dx
  41fd7d:	mov    ah,0x24
  41fd7f:	add    eax,0x67797cd4
  41fd84:	jecxz  0x41fdbd
  41fd86:	pop    edi
  41fd87:	je     0x41fd3c
  41fd89:	out    0x39,al
  41fd8b:	std    
  41fd8c:	into   
  41fd8d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fd8e:	dec    eax
  41fd8f:	int3   
  41fd90:	cmp    al,0xf5
  41fd92:	aad    0x20
  41fd94:	int3   
  41fd95:	cdq    
  41fd96:	pusha  
  41fd97:	sbb    DWORD PTR [ebx-0x438d6889],ecx
  41fd9d:	push   ebp
  41fd9e:	xor    DWORD PTR [eax+0x2],ebp
  41fda1:	jmp    0x1b76421c
  41fda6:	inc    esp
  41fda7:	inc    esi
  41fda8:	xor    DWORD PTR [edx],esi
  41fdaa:	xor    al,0x40
  41fdac:	cmp    bl,BYTE PTR [ebx]
  41fdae:	cmp    bh,dl
  41fdb0:	in     al,0x12
  41fdb2:	scas   eax,DWORD PTR es:[edi]
  41fdb3:	les    edi,FWORD PTR [ebp+0x3e9d53e2]
  41fdb9:	mov    eax,ds:0x1621d053
  41fdbe:	call   0xc346:0x52c7ef26
  41fdc5:	xlat   BYTE PTR ds:[ebx]
  41fdc6:	aad    0xcb
  41fdc8:	cld    
  41fdc9:	cmp    bl,BYTE PTR [edi+0xd2f57c0]
  41fdcf:	outs   dx,DWORD PTR ds:[esi]
  41fdd0:	mov    ah,al
  41fdd2:	xchg   edi,eax
  41fdd3:	retf   
  41fdd4:	pop    eax
  41fdd5:	xchg   edi,eax
  41fdd6:	push   esp
  41fdd7:	lods   eax,DWORD PTR ds:[esi]
  41fdd8:	ret    0xa162
  41fddb:	xchg   ebp,eax
  41fddc:	mov    bl,0x36
  41fdde:	les    edx,FWORD PTR ds:0x414dec4a
  41fde4:	out    0x83,al
  41fde6:	sub    eax,0x6638efa4
  41fdeb:	fistp  WORD PTR [eax-0x69]
  41fdee:	and    al,0x3f
  41fdf0:	scas   al,BYTE PTR es:[edi]
  41fdf1:	popf   
  41fdf2:	(bad)  
  41fdf3:	xor    eax,0xb9441c89
  41fdf8:	push   edi
  41fdf9:	out    0x85,al
  41fdfb:	js     0x41fe17
  41fdfd:	mov    ebp,0x6748da4b
  41fe02:	sbb    ebp,edx
  41fe04:	push   ds
  41fe05:	adc    eax,0x7e2310d5
  41fe0a:	je     0x41fdd3
  41fe0c:	jmp    0x63d9:0x943aa05f
  41fe13:	pop    edi
  41fe14:	and    al,0x1
  41fe16:	lahf   
  41fe17:	push   esi
  41fe18:	mov    ch,0x39
  41fe1a:	inc    esp
  41fe1b:	shr    BYTE PTR [eax],0x1a
  41fe1e:	sbb    esi,DWORD PTR [eax+0x66bccb69]
  41fe24:	call   FWORD PTR ds:0x1cde5c5c
  41fe2a:	rcr    BYTE PTR ss:[esi+0x25],0xf
  41fe2f:	pop    edx
  41fe30:	or     edx,ecx
  41fe32:	enter  0x2c24,0x61
  41fe36:	pushf  
  41fe37:	leave  
  41fe38:	dec    DWORD PTR [ebx]
  41fe3a:	fsubr  st(7),st
  41fe3c:	xor    eax,0x2fe951a8
  41fe41:	retf   0xfa7e
  41fe44:	cs jne 0x41fe2e
  41fe47:	(bad)  
  41fe48:	push   esi
  41fe49:	pop    ss
  41fe4a:	xchg   ebp,eax
  41fe4b:	and    DWORD PTR [ebx],esi
  41fe4d:	sbb    ch,ah
  41fe4f:	push   ds
  41fe50:	jb     0x41fe14
  41fe52:	bound  eax,QWORD PTR [ecx]
  41fe54:	or     dl,BYTE PTR [si-0x6a3]
  41fe59:	mov    esi,DWORD PTR [edx]
  41fe5b:	(bad)  
  41fe5c:	push   ecx
  41fe5d:	mov    esp,0xe999baf5
  41fe62:	stc    
  41fe63:	xor    DWORD PTR [eax-0x4229395b],edi
  41fe69:	(bad)  
  41fe6a:	pop    esi
  41fe6b:	xor    al,0xd9
  41fe6d:	sbb    BYTE PTR [ebp+0xccc79ee],bh
  41fe73:	lods   eax,DWORD PTR ds:[esi]
  41fe74:	mov    al,0xd0
  41fe76:	imul   BYTE PTR [edi-0x68]
  41fe79:	push   ecx
  41fe7a:	mov    edx,0xd908fb61
  41fe7f:	int3   
  41fe80:	or     eax,0xf60f5406
  41fe85:	cmp    ecx,DWORD PTR [ecx]
  41fe87:	clc    
  41fe88:	jge    0x41fe5b
  41fe8a:	out    0xdf,eax
  41fe8c:	or     BYTE PTR [esi-0x9],cl
  41fe8f:	and    cl,cl
  41fe91:	fcomp  st(1)
  41fe93:	and    BYTE PTR [ebx],0x78
  41fe96:	cdq    
  41fe97:	aaa    
  41fe98:	mov    ebx,0xc0fb1e91
  41fe9d:	jl     0x41fe3d
  41fe9f:	cmc    
  41fea0:	sti    
  41fea1:	retf   0xa07b
  41fea4:	std    
  41fea5:	mov    ch,0x1
  41fea7:	jne    0x41fe48
  41fea9:	out    dx,al
  41feaa:	or     eax,0x7710257
  41feaf:	and    DWORD PTR [ecx+0x2d10caee],0x6d878e6b
  41feb9:	das    
  41feba:	stc    
  41febb:	mov    edi,eax
  41febd:	jbe    0x41ff2e
  41febf:	mov    DWORD PTR [edx+0x705b1587],0xbff6eaea
  41fec9:	xchg   BYTE PTR [edx-0x4e],dl
  41fecc:	fdiv   DWORD PTR [ebx+edx*4+0x138474e6]
  41fed3:	sbb    esi,DWORD PTR [esi+0x145da003]
  41fed9:	inc    ebx
  41feda:	and    eax,0xd549408
  41fedf:	jmp    0xc132:0x4048de6a
  41fee6:	push   esi
  41fee7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fee8:	je     0x41feba
  41feea:	jmp    DWORD PTR [ecx]
  41feec:	xchg   esi,eax
  41feed:	mov    dh,0x19
  41feef:	stos   DWORD PTR es:[edi],eax
  41fef0:	test   eax,0xe6373cf2
  41fef5:	sti    
  41fef6:	mov    ds:0xb042218f,al
  41fefb:	sbb    al,BYTE PTR ds:0x143909fc
  41ff01:	xor    eax,0x7a7e2d84
  41ff06:	mov    al,0xf6
  41ff08:	and    BYTE PTR [edx-0x5dcb2932],bh
  41ff0e:	call   0x54dd2491
  41ff13:	sub    edx,ebp
  41ff15:	int    0xc5
  41ff17:	pop    ebp
  41ff18:	adc    eax,0x293d2a76
  41ff1d:	jno    0x41ff2e
  41ff1f:	xor    eax,edx
  41ff21:	mov    al,ds:0x5761ffae
  41ff26:	mov    BYTE PTR [esi],ah
  41ff28:	aas    
  41ff29:	dec    BYTE PTR [eax-0x1b486fe4]
  41ff2f:	mov    cl,0x9d
  41ff31:	xchg   BYTE PTR [esi+0x33],bh
  41ff34:	ins    DWORD PTR es:[edi],dx
  41ff35:	sub    eax,0x4e8fc168
  41ff3a:	loope  0x41ff7c
  41ff3c:	push   0xd01ba21d
  41ff41:	mov    bl,0x12
  41ff43:	jno    0x41ff45
  41ff45:	test   DWORD PTR [ebp-0x2de69318],ebp
  41ff4b:	add    BYTE PTR [edi+0x79],bh
  41ff4e:	sbb    al,0xc6
  41ff50:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ff51:	xor    al,0xd3
  41ff53:	xchg   ecx,eax
  41ff54:	fwait
  41ff55:	inc    eax
  41ff56:	inc    esp
  41ff57:	repz mov bl,0xee
  41ff5a:	lea    esp,[ecx+0x10]
  41ff5d:	imul   ebp,DWORD PTR [esi],0x66d4e424
  41ff63:	mov    eax,0xdbf5ca02
  41ff68:	push   ecx
  41ff69:	es pushf 
  41ff6b:	cmp    BYTE PTR [edx],0xe8
  41ff6e:	mov    bl,0x43
  41ff70:	shl    DWORD PTR [ebx],1
  41ff72:	cmp    BYTE PTR [esi+0x79],cl
  41ff75:	push   ebx
  41ff76:	les    ebx,FWORD PTR [eax+0x1111afa2]
  41ff7c:	or     eax,0x7a5c6612
  41ff81:	aaa    
  41ff82:	push   edx
  41ff83:	ret    0xdce5
  41ff86:	pop    es
  41ff87:	test   ah,dl
  41ff89:	call   0xe82967ba
  41ff8e:	pusha  
  41ff8f:	rol    BYTE PTR fs:[esi+esi*2],cl
  41ff93:	lahf   
  41ff94:	sbb    al,0xb3
  41ff96:	rcr    ah,0xc7
  41ff99:	ja     0x41ff69
  41ff9b:	lods   eax,DWORD PTR ds:[esi]
  41ff9c:	cmp    esp,DWORD PTR es:[ecx]
  41ff9f:	adc    bl,BYTE PTR [ebx+edx*2]
  41ffa2:	xchg   esp,eax
  41ffa3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ffa4:	jle    0x420013
  41ffa6:	shr    BYTE PTR [edx+0x7f],cl
  41ffa9:	push   ebx
  41ffaa:	push   esi
  41ffab:	and    dh,BYTE PTR [ebx-0x7]
  41ffae:	dec    edx
  41ffaf:	ds cmp eax,0x683495eb
  41ffb5:	jno    0x420018
  41ffb7:	scas   al,BYTE PTR es:[edi]
  41ffb8:	(bad)  
  41ffb9:	mov    esp,DWORD PTR ds:0x8cc51e16
  41ffbf:	pop    eax
  41ffc0:	push   eax
  41ffc1:	mov    bl,0x6a
  41ffc3:	cmp    BYTE PTR [ecx-0x252e52de],bh
  41ffc9:	repz push ss
  41ffcb:	cs into 
  41ffcd:	in     al,0x46
  41ffcf:	stos   DWORD PTR es:[edi],eax
  41ffd0:	add    eax,0xe2c690ce
  41ffd5:	lahf   
  41ffd6:	xor    al,0x6
  41ffd8:	fisttp QWORD PTR [eax]
  41ffda:	cmc    
  41ffdb:	mov    ?,esp
  41ffdd:	outs   dx,DWORD PTR ds:[esi]
  41ffde:	icebp  
  41ffdf:	adc    al,cl
  41ffe1:	lods   eax,DWORD PTR ds:[esi]
  41ffe2:	sbb    BYTE PTR [ecx],cl
  41ffe4:	xchg   esi,eax
  41ffe5:	call   0x68cc:0x3f5d8265
  41ffec:	in     eax,dx
  41ffed:	cmp    eax,0x7a0a234d
  41fff2:	mov    ebp,0xf4ad6f4b
  41fff7:	push   esi
  41fff8:	push   ebp
  41fff9:	push   0xffffffd0
  41fffb:	fmul   QWORD PTR [edi]
  41fffd:	dec    esi
  41fffe:	idiv   BYTE PTR [ebp+0x59]
  420001:	aaa    
  420002:	out    0xa2,eax
  420004:	nop
  420005:	adc    al,0x22
  420007:	fstp   st(0)
  420009:	and    BYTE PTR [esi+0x7e],al
  42000c:	dec    eax
  42000d:	mov    esi,0xa6927d0d
  420012:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420013:	int3   
  420014:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  420016:	sbb    DWORD PTR [eax],0x9d1780f2
  42001c:	jecxz  0x41fffc
  42001e:	and    BYTE PTR [ecx],bl
  420020:	xor    edx,DWORD PTR [ebp+0x45a3532d]
  420026:	mov    DWORD PTR [ebx-0x2c6e1dc5],0xdc69999b
  420030:	or     edx,edx
  420032:	jmp    0xded6f804
  420037:	fdivr  DWORD PTR [eax+0x4656b5d1]
  42003d:	jns    0x42005d
  42003f:	add    ebp,esp
  420041:	adc    bh,BYTE PTR [ecx-0x2dfb0c26]
  420047:	aas    
  420048:	adc    ebx,DWORD PTR [edx]
  42004a:	pop    ds
  42004b:	sub    eax,0x719606e1
  420050:	clc    
  420051:	pop    ebp
  420052:	test   eax,0x2374fc3b
  420057:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420058:	data16 jecxz 0x4200b0
  42005b:	dec    eax
  42005c:	fstp   DWORD PTR [esi]
  42005e:	pop    eax
  42005f:	add    DWORD PTR [edx-0x647c55c7],ecx
  420065:	loop   0x420005
  420067:	mov    cl,0x19
  420069:	mov    edx,0x1ca12e40
  42006e:	inc    esi
  42006f:	test   eax,0x947cb08c
  420074:	fcmovnbe st,st(0)
  420076:	mov    ebx,0x51359b0c
  42007b:	mov    edx,0xfb3d54
  420080:	and    DWORD PTR es:[edi+0x32146e5],edi
  420087:	loope  0x4200dd
  420089:	pop    esi
  42008a:	lds    ebp,FWORD PTR [ecx-0x63fb2ec2]
  420090:	ds ins BYTE PTR es:[edi],dx
  420092:	mov    WORD PTR [esi+0x63],fs
  420095:	fidiv  DWORD PTR [edi-0x4db4691d]
  42009b:	xor    al,0xcb
  42009d:	cli    
  42009e:	push   es
  42009f:	retf   0x9ddd
  4200a2:	lock data16 jns 0x42011d
  4200a6:	adc    BYTE PTR [edi+0x6a],ah
  4200a9:	jnp    0x420097
  4200ab:	addr16 jmp 0x4200b9
  4200ae:	or     DWORD PTR ds:0x343f9b10,0x3e73d3b8
  4200b8:	sbb    edi,DWORD PTR [ecx+ebp*8]
  4200bb:	inc    edi
  4200bc:	sbb    DWORD PTR [edx+0x44],ebx
  4200bf:	adc    al,0x33
  4200c1:	and    ebp,DWORD PTR [esp+ebx*8-0x6d5cc63]
  4200c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4200c9:	aad    0xd
  4200cb:	cmp    DWORD PTR [eax+0x6f],eax
  4200ce:	inc    edx
  4200cf:	scas   eax,DWORD PTR es:[edi]
  4200d0:	sub    eax,0xcccbcd5f
  4200d5:	scas   eax,DWORD PTR es:[edi]
  4200d6:	jle    0x420124
  4200d8:	jo     0x420090
  4200da:	xor    BYTE PTR [ecx-0x61],0xd5
  4200de:	mov    esi,0xe45dadfa
  4200e3:	lar    ecx,sp
  4200e6:	cdq    
  4200e7:	out    dx,eax
  4200e8:	jecxz  0x4200b4
  4200ea:	ja     0x4200ee
  4200ec:	inc    ecx
  4200ed:	cdq    
  4200ee:	xchg   ebx,eax
  4200ef:	mov    al,ds:0x78cea81d
  4200f4:	daa    
  4200f5:	add    BYTE PTR [edx+ebx*8-0x199b6201],0xcc
  4200fd:	mov    dh,0x99
  4200ff:	inc    edi
  420100:	sti    
  420101:	xlat   BYTE PTR ds:[ebx]
  420102:	or     esp,DWORD PTR [ebp+0x12]
  420105:	xor    DWORD PTR [edx-0x1a4a3598],ebp
  42010b:	pop    eax
  42010c:	hlt    
  42010d:	test   DWORD PTR [eax+0x33],ebp
  420110:	or     BYTE PTR [edx+0x18e5ac70],cl
  420116:	xor    esi,DWORD PTR [eax+0x3ae02693]
  42011c:	mov    esi,0x3eca3884
  420121:	adc    eax,0xa3156994
  420126:	or     BYTE PTR [eax-0x4efed318],cl
  42012c:	push   esi
  42012d:	or     DWORD PTR [ebp+0xa],0x72
  420131:	hlt    
  420132:	add    BYTE PTR [edi],0xfd
  420135:	js     0x42014b
  420137:	scas   al,BYTE PTR es:[edi]
  420138:	pop    edi
  420139:	and    esi,DWORD PTR [ecx]
  42013b:	push   es
  42013c:	jbe    0x42010f
  42013e:	or     eax,DWORD PTR [ecx+eiz*2-0x16]
  420142:	test   bh,ch
  420144:	repz (bad) 
  420146:	out    dx,eax
  420147:	xchg   ecx,eax
  420148:	fs ret 
  42014a:	sub    al,0xe7
  42014c:	aas    
  42014d:	jecxz  0x4200d3
  42014f:	fsubr  QWORD PTR [eax]
  420151:	mov    al,0xc8
  420153:	outs   dx,DWORD PTR ds:[esi]
  420154:	mov    eax,DWORD PTR [eax+0x4238cf0b]
  42015a:	mov    eax,0xe425934a
  42015f:	push   ss
  420160:	adc    al,0x3d
  420162:	mov    eax,ds:0xa5f7a234
  420167:	and    BYTE PTR [ecx+0x69],ah
  42016a:	push   cs
  42016b:	in     al,dx
  42016c:	hlt    
  42016d:	cmp    edx,edi
  42016f:	cmp    DWORD PTR ds:0xa039f8e0,0x5d
  420176:	xor    esp,DWORD PTR [esp+edi*8+0x5a]
  42017a:	push   ds
  42017b:	jns    0x4201e9
  42017d:	xlat   BYTE PTR ds:[ebx]
  42017e:	add    ecx,0xffffffb0
  420181:	mov    al,0xb2
  420183:	rol    BYTE PTR [ecx-0x34],0xa0
  420187:	test   BYTE PTR [ebx+0x670670bc],ch
  42018d:	shr    BYTE PTR [edx+0x692ac29b],cl
  420193:	test   al,0x8d
  420195:	mov    fs,WORD PTR [ecx+0x52]
  420198:	xor    BYTE PTR [eax+0x7423e1f5],dl
  42019e:	xor    ecx,eax
  4201a0:	sbb    DWORD PTR [edx+esi*1],ecx
  4201a3:	mov    esi,0x821b1c09
  4201a8:	fimul  WORD PTR [esi]
  4201aa:	shl    DWORD PTR [ebx-0x47],cl
  4201ad:	cwde   
  4201ae:	xor    DWORD PTR [esi],0x196f7916
  4201b4:	sahf   
  4201b5:	shl    BYTE PTR [ecx+0x6b],0xa8
  4201b9:	mov    esp,0x14d4e5e
  4201be:	add    ebp,DWORD PTR [ecx+0x5e]
  4201c1:	mov    ebp,0x700b185
  4201c6:	xor    ah,BYTE PTR [ecx-0x79]
  4201c9:	mov    ebp,0xf631602d
  4201ce:	fwait
  4201cf:	mov    al,ds:0x3c386013
  4201d4:	lahf   
  4201d5:	ins    DWORD PTR es:[edi],dx
  4201d6:	fnsave [ecx]
  4201d8:	scas   al,BYTE PTR es:[edi]
  4201d9:	outs   dx,DWORD PTR ds:[esi]
  4201da:	fimul  WORD PTR [esi+0x22]
  4201dd:	mov    dh,0xb6
  4201df:	inc    edi
  4201e0:	sub    al,0xcc
  4201e2:	dec    edx
  4201e3:	inc    ecx
  4201e4:	add    eax,0x231f8dda
  4201e9:	add    ebp,DWORD PTR [eax-0x3bd756ad]
  4201ef:	push   eax
  4201f0:	xchg   esp,eax
  4201f1:	bound  edi,QWORD PTR [edx+0x5f]
  4201f4:	outs   dx,BYTE PTR ds:[esi]
  4201f5:	mov    eax,ds:0x10cfc7a3
  4201fa:	jae    0x42023b
  4201fc:	out    dx,ax
  4201fe:	and    ebx,DWORD PTR [ebp-0x3c]
  420201:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420202:	test   al,0x47
  420204:	in     al,0xab
  420206:	sti    
  420207:	xchg   BYTE PTR [edi],dh
  420209:	and    ecx,DWORD PTR [ebp+0x57]
  42020c:	outs   dx,BYTE PTR ds:[esi]
  42020d:	cmp    BYTE PTR [ebp+ebx*8-0x4],bl
  420211:	mov    ch,0xe0
  420213:	pcmpgtw mm7,mm1
  420216:	mov    ebp,0x425f4c4f
  42021b:	loop   0x420210
  42021d:	cmp    esp,DWORD PTR [edx+0x3b]
  420220:	rcr    BYTE PTR [edi],cl
  420222:	xor    DWORD PTR gs:[esp+esi*1+0x6c],0x254cc507
  42022b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42022c:	sbb    ecx,ebx
  42022e:	js     0x420243
  420230:	add    edx,edi
  420232:	das    
  420233:	mov    al,0xea
  420235:	jne    0x420238
  420237:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420238:	push   ds
  420239:	pop    edi
  42023a:	fs mov al,ds:0x16526f59
  420241:	cmp    edx,DWORD PTR [esi]
  420243:	call   0xb740:0x6383e992
  42024a:	inc    esi
  42024b:	in     al,dx
  42024c:	pop    eax
  42024d:	pop    eax
  42024e:	iret   
  42024f:	cmp    bh,ah
  420251:	clc    
  420252:	or     dl,BYTE PTR ds:0xcc67525e
  420258:	mov    esi,0xf26a741
  42025d:	mov    bh,cl
  42025f:	push   edx
  420260:	ss push ds
  420262:	(bad)  
  420264:	dec    ebp
  420265:	sub    BYTE PTR [eax],cl
  420267:	add    al,0x5
  420269:	adc    ah,BYTE PTR [ebx]
  42026b:	pop    esi
  42026c:	and    DWORD PTR [esi-0x664bb9fc],edx
  420272:	fucomp st(2)
  420274:	xchg   edx,eax
  420275:	push   eax
  420276:	test   DWORD PTR [ebx+edx*4+0x26],edx
  42027a:	jmp    0x420229
  42027c:	fwait
  42027d:	in     al,0x30
  42027f:	and    al,0xf8
  420281:	mov    ebp,0xca69d806
  420286:	xor    dh,ch
  420288:	jbe    0x4202bb
  42028a:	push   cs
  42028b:	mov    WORD PTR [edx],ds
  42028d:	push   esp
  42028e:	add    cl,BYTE PTR [ecx+0x6b]
  420291:	ja     0x4202f7
  420293:	mov    ds:0xcddbf9ce,al
  420298:	popf   
  420299:	repnz adc BYTE PTR ds:0xce571786,al
  4202a0:	out    0xbc,al
  4202a2:	sbb    BYTE PTR [ebx+0x7d],0xeb
  4202a6:	clc    
  4202a7:	xchg   ebx,eax
  4202a8:	xor    eax,DWORD PTR [edi-0x4af3d7ef]
  4202ae:	mov    fs,WORD PTR [ebx+0x7]
  4202b1:	icebp  
  4202b2:	dec    esp
  4202b3:	mov    WORD PTR [edi-0x6f],ss
  4202b6:	ror    DWORD PTR [edi+0x78],1
  4202b9:	sub    eax,0x7dc10ea3
  4202be:	fiadd  DWORD PTR [edi]
  4202c0:	(bad)  
  4202c1:	push   cs
  4202c2:	mov    edx,DWORD PTR [ebx]
  4202c4:	pushf  
  4202c5:	aam    0x72
  4202c7:	sub    dl,BYTE PTR [ebx+0x1a226df3]
  4202cd:	mov    BYTE PTR [ebx+0x5c],ah
  4202d0:	push   ds
  4202d1:	mov    al,ds:0xee80a0e4
  4202d6:	xor    DWORD PTR [ecx],edi
  4202d8:	adc    DWORD PTR [ecx+0x30],esp
  4202db:	loopne 0x4202a1
  4202dd:	pop    ebp
  4202de:	loope  0x42028b
  4202e0:	mov    dl,0xeb
  4202e2:	mov    ah,0x33
  4202e4:	call   0xef72:0x1fb29c83
  4202eb:	and    DWORD PTR [ebp+0x4],edi
  4202ee:	xlat   BYTE PTR ds:[ebx]
  4202ef:	mov    ch,0x78
  4202f1:	cmp    al,0xec
  4202f3:	sbb    DWORD PTR [esi],0x7
  4202f6:	rcl    ah,1
  4202f8:	arpl   WORD PTR [ebp+0x3b1eb0d6],si
  4202fe:	sub    al,0x44
  420300:	aas    
  420301:	or     al,al
  420303:	aad    0x8d
  420305:	clc    
  420306:	adc    BYTE PTR [edi-0x1a],bl
  420309:	jne    0x42031a
  42030b:	addr16 addr16 jp 0x420354
  42030f:	mov    al,ds:0x3637d46a
  420314:	std    
  420315:	push   ss
  420316:	mov    ebx,0x37d307c9
  42031b:	(bad)  [ebp-0x62]
  42031e:	in     al,0xc6
  420320:	jp     0x4202f2
  420322:	repz mov ch,0x99
  420325:	sbb    BYTE PTR [edi-0x75],al
  420328:	aaa    
  420329:	(bad)  
  42032a:	gs inc edx
  42032c:	icebp  
  42032d:	adc    eax,0x3553a1
  420332:	stos   BYTE PTR es:[edi],al
  420333:	add    DWORD PTR [edx-0x3f],0x5ab8fe4a
  42033a:	push   0x5d
  42033c:	add    BYTE PTR [ebp-0x177a78c1],bh
  420342:	shr    BYTE PTR [edx+eiz*4-0x7],0x7a
  420347:	gs inc edx
  420349:	inc    eax
  42034a:	es add eax,0x2ed1961f
  420350:	shl    DWORD PTR [ebx+0x4abd2b26],1
  420356:	dec    edi
  420357:	sub    BYTE PTR [eax+0x7bdbb2ab],0x6
  42035e:	mov    cl,0x8d
  420360:	(bad)  [ebx]
  420362:	call   0xd5f:0x32954512
  420369:	xor    BYTE PTR [esi+0x68],dh
  42036c:	pop    edi
  42036d:	push   0x37
  42036f:	mov    al,ds:0x66da59eb
  420374:	push   ebx
  420375:	gs popa 
  420377:	ja     0x420373
  420379:	lds    edx,FWORD PTR [ecx+0x5d]
  42037c:	stos   DWORD PTR es:[edi],eax
  42037d:	aaa    
  42037e:	jo     0x4203ee
  420380:	out    dx,al
  420381:	dec    ecx
  420382:	sbb    dl,BYTE PTR [edx]
  420384:	nop
  420385:	mov    al,0x74
  420387:	jp     0x4203e5
  420389:	jns    0x420388
  42038b:	inc    BYTE PTR [ebx+0x1ddceefd]
  420391:	cmp    edi,ebp
  420393:	cs pop eax
  420395:	sbb    eax,0x2cebf531
  42039a:	adc    cl,BYTE PTR [edx]
  42039c:	lock not BYTE PTR [edi]
  42039f:	call   0x26d7:0xbdc64bd3
  4203a6:	xchg   BYTE PTR [ebp+0x689d549f],bh
  4203ac:	leave  
  4203ad:	sti    
  4203ae:	fcomp  QWORD PTR [edx]
  4203b0:	pusha  
  4203b1:	xchg   DWORD PTR [esi-0x46],edi
  4203b4:	jae    0x4203da
  4203b6:	pop    edx
  4203b7:	push   es
  4203b8:	retf   
  4203b9:	outs   dx,BYTE PTR ds:[esi]
  4203ba:	into   
  4203bb:	out    dx,al
  4203bc:	xchg   BYTE PTR [edx+0x53],dl
  4203bf:	inc    edi
  4203c0:	sub    ah,BYTE PTR [ebp-0x38d1a3ab]
  4203c6:	sub    eax,0x9560962d
  4203cb:	or     cl,BYTE PTR [edx-0x3a]
  4203ce:	push   eax
  4203cf:	mov    ch,0x64
  4203d1:	jg     0x420382
  4203d3:	shl    eax,0x66
  4203d6:	lock lods eax,DWORD PTR ds:[esi]
  4203d8:	add    DWORD PTR [ecx*1-0x397ea3fa],ecx
  4203df:	dec    esp
  4203e0:	add    bh,BYTE PTR [ecx+0xa]
  4203e3:	outs   dx,DWORD PTR ds:[esi]
  4203e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4203e5:	mov    edx,0xa307e89e
  4203ea:	aaa    
  4203eb:	xlat   BYTE PTR ds:[ebx]
  4203ec:	shl    BYTE PTR [esi-0x54],0x80
  4203f0:	nop
  4203f1:	lea    esp,[ecx-0x6d]
  4203f4:	es out 0x89,al
  4203f7:	test   BYTE PTR [esp-0x74],ch
  4203fb:	inc    esp
  4203fc:	xchg   edi,eax
  4203fd:	mov    esp,0x62273d56
  420402:	sbb    ebx,DWORD PTR [eax+0x70]
  420405:	ds xor eax,0x7077ee7f
  42040b:	mov    ebp,0x92d0e9d8
  420410:	(bad)  
  420411:	(bad)  
  420412:	(bad)  
  420414:	inc    esp
  420415:	inc    edi
  420416:	jbe    0x420402
  420418:	and    ecx,DWORD PTR [edx-0x476d3fba]
  42041e:	xchg   edi,eax
  42041f:	xchg   ch,dh
  420421:	add    BYTE PTR [ebx+0x6c],bh
  420424:	mov    esp,0x80a78ecf
  420429:	adc    dl,0x69
  42042c:	and    edi,ecx
  42042e:	mov    WORD PTR ds:0xa507efa4,?
  420434:	jns    0x42041f
  420436:	aaa    
  420437:	ret    0x3d8b
  42043a:	jne    0x420446
  42043c:	fimul  WORD PTR [esi+0x5a79c2e]
  420442:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420443:	sub    BYTE PTR cs:[esi],0x7e
  420447:	or     ebp,ebp
  420449:	mov    edi,0x59b74c4f
  42044e:	enter  0x474c,0xbf
  420452:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420453:	nop
  420454:	sub    edx,DWORD PTR [ebx+0x4b70834]
  42045a:	pop    ebp
  42045b:	xchg   esi,eax
  42045c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42045d:	jno    0x420499
  42045f:	jns    0x420429
  420461:	jnp    0x4204bc
  420463:	fldenv [ebx-0x19]
  420466:	xor    al,0xa8
  420468:	sub    ecx,DWORD PTR [ebx]
  42046a:	inc    esi
  42046b:	into   
  42046c:	fcomp  QWORD PTR [esi+0x8]
  42046f:	xor    al,0xb9
  420471:	mov    cs,WORD PTR [edi]
  420473:	std    
  420474:	out    0x46,eax
  420476:	cmp    bl,bl
  420478:	shl    BYTE PTR [edx-0x28],cl
  42047b:	dec    eax
  42047c:	mov    eax,ds:0x3280df05
  420481:	out    0xc3,al
  420483:	and    al,0xef
  420485:	adc    ch,bl
  420487:	in     al,0xd1
  420489:	arpl   cx,sp
  42048b:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  42048d:	clc    
  42048e:	pop    esp
  42048f:	xchg   edx,eax
  420490:	cmp    esp,DWORD PTR [edi+ebx*8]
  420493:	pop    edi
  420494:	inc    edi
  420495:	or     bh,bl
  420497:	mov    BYTE PTR [edx-0x3c],0x25
  42049b:	popa   
  42049c:	popf   
  42049d:	sbb    eax,0x5d678191
  4204a2:	popf   
  4204a3:	nop
  4204a4:	dec    esp
  4204a5:	and    bh,ch
  4204a7:	pop    ebx
  4204a8:	pop    esi
  4204a9:	push   edx
  4204aa:	outs   dx,BYTE PTR ds:[esi]
  4204ab:	add    ch,BYTE PTR ds:0x271d943b
  4204b1:	sbb    esp,eax
  4204b3:	xchg   ecx,edx
  4204b5:	push   ds
  4204b6:	sbb    al,0x70
  4204b8:	xchg   esi,esp
  4204ba:	retf   0xd6c8
  4204bd:	hlt    
  4204be:	jns    0x420538
  4204c0:	in     al,dx
  4204c1:	jns    0x4204ef
  4204c3:	and    ebx,ebx
  4204c5:	mov    edi,0x167f2bf6
  4204ca:	je     0x42046c
  4204cc:	adc    BYTE PTR [ecx-0x29],0xc5
  4204d0:	sar    eax,1
  4204d2:	call   0x6c12:0xa0588520
  4204d9:	ins    DWORD PTR es:[edi],dx
  4204da:	ja     0x4204b3
  4204dc:	jp     0x4204a9
  4204de:	test   BYTE PTR [eax-0x5],0x57
  4204e2:	jbe    0x4204d3
  4204e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4204e5:	rol    BYTE PTR [edx+0x464c9e52],1
  4204eb:	adc    BYTE PTR [eax+edx*8+0x2f],al
  4204ef:	inc    ebp
  4204f0:	gs jecxz 0x4204d5
  4204f3:	adc    BYTE PTR [ecx-0x2e5680b8],bh
  4204f9:	jno    0x420572
  4204fb:	adc    ebx,DWORD PTR ds:0xf27c842d
  420501:	stos   DWORD PTR es:[edi],eax
  420502:	jno    0x4204f1
  420504:	loop   0x42048e
  420506:	ins    BYTE PTR es:[edi],dx
  420507:	add    ah,ah
  420509:	ss dec eax
  42050b:	bound  edx,QWORD PTR [edi-0x1b9e70f6]
  420511:	jmp    0xfc37c220
  420516:	mov    bl,0xc9
  420518:	popf   
  420519:	ins    BYTE PTR es:[edi],dx
  42051a:	mov    eax,ds:0x30f21ec8
  42051f:	jge    0x420561
  420521:	mov    cl,0xcd
  420523:	popa   
  420524:	mov    WORD PTR [ecx+0x25],?
  420527:	push   esp
  420528:	daa    
  420529:	jp     0x420557
  42052b:	or     DWORD PTR [ebp+ebp*8+0x54],0x439ebf8b
  420533:	shr    dh,1
  420535:	pushf  
  420536:	les    esi,FWORD PTR [ecx+0x643ff71b]
  42053c:	mov    ds:0xe1835aa,eax
  420541:	cmc    
  420542:	and    al,BYTE PTR [ecx]
  420544:	xchg   esp,eax
  420545:	jae    0x4204db
  420547:	outs   dx,BYTE PTR ds:[esi]
  420548:	pop    ss
  420549:	retf   0x9f43
  42054c:	clc    
  42054d:	daa    
  42054e:	or     edx,DWORD PTR [ebx-0x710edfcd]
  420554:	dec    eax
  420555:	xchg   ecx,eax
  420556:	out    0x86,eax
  420558:	imul   esp,esi,0xffffffc1
  42055b:	inc    ecx
  42055c:	mov    WORD PTR [eax],?
  42055e:	ja     0x4204e9
  420560:	push   ebx
  420561:	lock (bad) 
  420564:	ficom  WORD PTR [ebp-0x131a7af]
  42056a:	lods   eax,DWORD PTR ds:[esi]
  42056b:	jae    0x4205cb
  42056d:	jne    0x420530
  42056f:	cld    
  420570:	xchg   ch,cl
  420572:	ins    BYTE PTR es:[edi],dx
  420573:	or     eax,0x5892563f
  420578:	jnp    0x420526
  42057a:	retf   
  42057b:	sbb    eax,0xac4136db
  420580:	inc    ebx
  420581:	retf   
  420582:	pop    edx
  420583:	nop
  420584:	add    eax,0x9c6da4cb
  420589:	pop    edi
  42058a:	adc    esi,ebx
  42058c:	sub    eax,edi
  42058e:	sbb    DWORD PTR [esi+0x79700d27],ebx
  420594:	xor    ebp,ebx
  420596:	iret   
  420597:	dec    ebx
  420598:	(bad)  
  42059a:	mov    al,bl
  42059c:	cmc    
  42059d:	or     al,0x9
  42059f:	pusha  
  4205a0:	(bad)  
  4205a2:	mov    ebx,0xe6e6912e
  4205a7:	pop    ebp
  4205a8:	pushf  
  4205a9:	sub    cl,bh
  4205ab:	cmp    DWORD PTR [edi+0x17ad22cf],ebp
  4205b1:	add    edi,DWORD PTR [ecx+0x8]
  4205b4:	mov    BYTE PTR [esi+0x2a],cl
  4205b7:	mov    ds:0xb5bc72a,eax
  4205bc:	sbb    ch,BYTE PTR [esi+0x7b]
  4205bf:	dec    ebx
  4205c0:	fidiv  WORD PTR [edi-0x64]
  4205c3:	and    ch,BYTE PTR ds:0x83ea6ee
  4205c9:	cmp    eax,0xb90859b2
  4205ce:	aaa    
  4205cf:	xor    eax,0x73a8e0a8
  4205d4:	ins    DWORD PTR es:[edi],dx
  4205d5:	mov    ds:0xdcd385d3,eax
  4205da:	push   ebx
  4205db:	je     0x4205fb
  4205dd:	sub    bh,BYTE PTR [ecx+0x74011150]
  4205e3:	xor    al,0xd1
  4205e5:	das    
  4205e6:	retf   0xbe8c
  4205e9:	ret    0x5e2c
  4205ec:	(bad)  
  4205ed:	jns    0x420636
  4205ef:	je     0x4205cb
  4205f1:	or     al,BYTE PTR [ecx+0x532b5ad8]
  4205f7:	push   0xcd4687e8
  4205fc:	fisubr DWORD PTR [ebx]
  4205fe:	sub    edi,ebp
  420600:	jecxz  0x4205a3
  420602:	clc    
  420603:	mov    bl,0x78
  420605:	sbb    ebp,DWORD PTR [ecx+ebx*8]
  420608:	call   0x60005993
  42060d:	mov    edi,0xccd4d0c4
  420612:	jnp    0x4205f6
  420614:	add    esp,DWORD PTR [edi-0x114d0aaf]
  42061a:	test   al,0x65
  42061c:	repnz cmc 
  42061e:	adc    eax,0x2e6d4c23
  420623:	cmp    bh,BYTE PTR [ebx-0x466fa636]
  420629:	cbw    
  42062b:	or     DWORD PTR [edx+0x293a7288],edi
  420631:	push   ebx
  420632:	enter  0xe3e,0x69
  420636:	es aaa 
  420638:	xchg   edx,eax
  420639:	xchg   BYTE PTR [esi],ah
  42063b:	gs lock jle 0x420651
  42063f:	xor    esi,DWORD PTR [edi]
  420641:	xor    esi,DWORD PTR [edi+0x77d7c950]
  420647:	outs   dx,DWORD PTR ds:[esi]
  420648:	stos   DWORD PTR es:[edi],eax
  420649:	fld    QWORD PTR [ebp+edi*8-0x541e3f59]
  420650:	jle    0x4205e6
  420652:	push   esp
  420653:	cwde   
  420654:	push   ebp
  420655:	mov    esp,DWORD PTR [eax+0x7a44cf8d]
  42065b:	fmul   QWORD PTR [ebx+ebp*1]
  42065e:	inc    eax
  42065f:	test   al,0x33
  420661:	pop    ebp
  420662:	sbb    ecx,DWORD PTR [eax+0x4aea2222]
  420668:	repnz cld 
  42066a:	mov    cl,ah
  42066c:	xor    esp,DWORD PTR [ebx+0x61]
  42066f:	fcmovu st,st(6)
  420671:	pop    ss
  420672:	popa   
  420673:	push   edx
  420674:	add    eax,0x69fd1c3b
  420679:	mov    al,ds:0x6bdbb8f5
  42067e:	inc    ebx
  42067f:	mov    ebx,0x846b542e
  420684:	js     0x4206e9
  420686:	and    eax,0xed3f467b
  42068b:	or     DWORD PTR [eax+0x14],ebp
  42068e:	add    ecx,DWORD PTR [eax+0x8bae4fa]
  420694:	repnz and al,0x27
  420697:	mov    edi,0x68817b9b
  42069c:	hlt    
  42069d:	shl    bh,1
  42069f:	add    eax,0xfaf035c6
  4206a4:	and    eax,0x206dbcfb
  4206a9:	mov    al,BYTE PTR ds:0xe2a369fd
  4206af:	mov    dh,0x49
  4206b1:	xchg   BYTE PTR [esi],cl
  4206b3:	xchg   ecx,eax
  4206b4:	add    eax,0xdb53c66
  4206b9:	mov    al,BYTE PTR [esi]
  4206bb:	bound  eax,QWORD PTR ds:0x508c7bb5
  4206c1:	sub    cl,BYTE PTR [edi+0x74]
  4206c4:	aad    0xee
  4206c6:	jae    0x420716
  4206c8:	bound  esi,QWORD PTR [eax-0x52]
  4206cb:	jp     0x4206f6
  4206cd:	retf   0xc85a
  4206d0:	outs   dx,DWORD PTR ds:[esi]
  4206d1:	mov    DWORD PTR [ecx+0x744aa4ec],0xad32e1b6
  4206db:	loope  0x4206c7
  4206dd:	push   0x2a
  4206df:	es data16 icebp 
  4206e2:	adc    ebp,DWORD PTR [eax+0x2fa83726]
  4206e8:	sbb    bh,BYTE PTR [ecx-0x48]
  4206eb:	mov    ah,0xe7
  4206ed:	mov    ebx,0x6db2574f
  4206f2:	pop    ecx
  4206f3:	scas   al,BYTE PTR es:[edi]
  4206f4:	(bad)  
  4206f5:	sub    ebx,DWORD PTR [edi+0x40]
  4206f8:	cmp    DWORD PTR [esi-0x56afaf3b],edi
  4206fe:	mov    ds:0x2c8bb905,eax
  420703:	es xchg esp,eax
  420705:	test   BYTE PTR [edx],al
  420707:	fs call 0x2186:0xe2bfe9dc
  42070f:	outs   dx,DWORD PTR ds:[esi]
  420710:	lea    esi,[edi-0x8]
  420713:	in     al,dx
  420714:	pop    edi
  420715:	aaa    
  420716:	xor    DWORD PTR [edx-0x5],0x29
  42071a:	mov    al,0xc1
  42071c:	sahf   
  42071d:	js     0x4206f5
  42071f:	mov    al,ds:0xd97b26b5
  420724:	inc    esp
  420725:	je     0x420736
  420727:	out    0x63,eax
  420729:	ins    DWORD PTR es:[edi],dx
  42072a:	(bad)  
  42072b:	(bad)  
  42072c:	leave  
  42072d:	mov    cl,0x7d
  42072f:	into   
  420730:	or     BYTE PTR [ecx+0x20],dh
  420733:	pop    eax
  420734:	imul   esi,DWORD PTR [edi],0x2
  420737:	repz ret 
  420739:	add    dl,BYTE PTR [esi+0x6935c1f3]
  42073f:	test   al,0x9e
  420741:	sub    al,0xa2
  420743:	test   DWORD PTR ss:[ebp+0x24],ebp
  420747:	shl    BYTE PTR ds:0x7a03c2dd,0x7e
  42074e:	xchg   esp,eax
  42074f:	lea    ebx,[ebp+0x59]
  420752:	cli    
  420753:	jle    0x4206f4
  420755:	imul   ecx,esi,0xa3a57fac
  42075b:	xchg   ecx,eax
  42075c:	add    BYTE PTR [eax+0x60],bl
  42075f:	popa   
  420760:	sub    eax,0x1b97d750
  420765:	cdq    
  420766:	popa   
  420767:	and    BYTE PTR [edi-0x16],al
  42076a:	or     eax,0x1be7be5d
  42076f:	jmp    ebx
  420771:	mov    edx,esi
  420773:	enter  0xbf69,0xd7
  420777:	stos   DWORD PTR es:[edi],eax
  420778:	(bad)  
  420779:	out    dx,eax
  42077a:	jge    0x4207c1
  42077c:	or     eax,0x5387a674
  420781:	ss loope 0x420789
  420784:	sbb    ecx,DWORD PTR [ebx]
  420786:	(bad)  
  420787:	dec    DWORD PTR [ebx]
  420789:	xchg   ebx,eax
  42078a:	cmp    al,0x9a
  42078c:	dec    ecx
  42078e:	adc    BYTE PTR [esi-0x25b4eaa3],dl
  420794:	mov    edi,0x566bad37
  420799:	and    dh,BYTE PTR [ebx+0x279a682a]
  42079f:	mov    edx,0x23b4b20
  4207a4:	add    DWORD PTR [esi],edx
  4207a6:	sbb    ah,dh
  4207a8:	xchg   edi,eax
  4207a9:	(bad)  
  4207aa:	mov    es,WORD PTR [esi]
  4207ac:	xlat   BYTE PTR ds:[ebx]
  4207ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4207ae:	mov    ds:0x67e89e4e,eax
  4207b3:	jle    0x420824
  4207b5:	shr    BYTE PTR [eax-0x33db843],1
  4207bb:	jb     0x420815
  4207bd:	add    ebp,esp
  4207bf:	aad    0xb7
  4207c1:	jg     0x42080f
  4207c3:	and    DWORD PTR [edx+0x3b],eax
  4207c6:	dec    esp
  4207c7:	aaa    
  4207c8:	pop    ebx
  4207c9:	jp     0x42074b
  4207cb:	sbb    al,0x3d
  4207cd:	add    BYTE PTR [eax],cl
  4207cf:	jns    0x4207ee
  4207d1:	add    ch,BYTE PTR [edx]
  4207d3:	mov    edi,0xe438414b
  4207d8:	inc    edx
  4207d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4207da:	pop    ecx
  4207db:	mov    dh,bh
  4207dd:	xor    dl,dl
  4207df:	mov    esi,0xa2c09796
  4207e4:	ret    0x3cc4
  4207e7:	mov    edi,0x671331aa
  4207ec:	iret   
  4207ed:	loope  0x42079e
  4207ef:	mov    ds:0x63e8a457,eax
  4207f4:	nop
  4207f5:	out    0xf5,al
  4207f7:	and    al,0x69
  4207f9:	(bad)  
  4207fa:	pusha  
  4207fb:	mov    esp,0xb74fa548
  420800:	push   ebx
  420801:	pop    ebx
  420802:	inc    edi
  420803:	push   ebp
  420804:	mov    esp,0x565201ed
  420809:	test   eax,0x54ed4cc8
  42080e:	inc    ebx
  42080f:	ret    
  420810:	jns    0x42085c
  420812:	lods   eax,DWORD PTR ds:[esi]
  420813:	fmul   QWORD PTR [ebx+0x2e]
  420816:	xchg   BYTE PTR [ebx+esi*2-0x4c],bl
  42081a:	ins    DWORD PTR es:[edi],dx
  42081b:	call   0xcb11924b
  420820:	pop    ecx
  420821:	rcl    BYTE PTR [ebp+edx*8-0x45],0x82
  420826:	jecxz  0x420897
  420828:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420829:	fist   DWORD PTR [eax-0x2e]
  42082c:	inc    ecx
  42082d:	pop    eax
  42082e:	(bad)  
  420830:	xchg   ebp,eax
  420831:	sbb    al,BYTE PTR [esi+0x67]
  420834:	leave  
  420835:	das    
  420836:	jl     0x420809
  420838:	call   0xa42c:0xcdf2fc41
  42083f:	(bad)  
  420840:	sti    
  420841:	retf   
  420842:	push   cx
  420844:	pop    esp
  420845:	mov    bh,0x7
  420847:	bound  edi,QWORD PTR [edx+0x58]
  42084a:	jl     0x42087e
  42084c:	push   cs
  42084d:	fmul   st,st(1)
  42084f:	nop
  420850:	stos   DWORD PTR es:[edi],eax
  420851:	sub    eax,0x58dba59b
  420856:	or     BYTE PTR [ecx],ch
  420858:	ss imul edi
  42085b:	cdq    
  42085c:	and    al,0xf8
  42085e:	xor    BYTE PTR [edi+ebx*2-0x5c],0x28
  420863:	(bad)  
  420864:	lea    ecx,[esi+0x79]
  420867:	sti    
  420868:	das    
  420869:	nop
  42086a:	ss xor eax,0x39079fee
  420870:	xchg   ecx,eax
  420871:	mov    edi,0x34353d32
  420876:	mov    ds:0x5c616421,al
  42087b:	jmp    0xe016df28
  420880:	ds icebp 
  420882:	stos   BYTE PTR es:[edi],al
  420883:	xor    BYTE PTR [edi],bl
  420885:	cmp    ah,dl
  420887:	jns    0x4208dc
  420889:	je     0x4208ad
  42088b:	pusha  
  42088c:	aas    
  42088d:	dec    esp
  42088e:	or     DWORD PTR [ebx+0x78],esp
  420891:	mov    al,0x7a
  420893:	xor    DWORD PTR [ebx],esp
  420895:	sbb    BYTE PTR ds:[ebp+0x75f8ee07],0xc3
  42089d:	test   dh,dh
  42089f:	not    DWORD PTR [edi*8-0x46aa9baf]
  4208a6:	pop    ecx
  4208a7:	ins    BYTE PTR es:[edi],dx
  4208a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4208a9:	test   eax,0xf903515d
  4208ae:	aad    0x6f
  4208b0:	lahf   
  4208b1:	ins    BYTE PTR es:[edi],dx
  4208b2:	fld    QWORD PTR [ebx]
  4208b4:	ret    
  4208b5:	adc    dh,BYTE PTR [ecx+edx*2]
  4208b8:	push   ebp
  4208b9:	push   esp
  4208ba:	mov    ss,eax
  4208bc:	cdq    
  4208bd:	mov    ch,0x3e
  4208bf:	jge    0x420924
  4208c1:	sub    BYTE PTR [ebp+0x14],0x61
  4208c5:	shl    BYTE PTR [eax],0xa
  4208c8:	push   ebp
  4208c9:	arpl   WORD PTR [ecx],ax
  4208cb:	or     eax,0x4996a0a8
  4208d0:	cs mov bh,0x97
  4208d3:	(bad)  
  4208d5:	fld    DWORD PTR [ebp-0x34]
  4208d8:	and    al,0x5a
  4208da:	push   ss
  4208db:	lock inc eax
  4208dd:	scas   al,BYTE PTR es:[edi]
  4208de:	dec    ebx
  4208df:	jmp    0xb4e94d95
  4208e4:	ret    
  4208e5:	dec    ecx
  4208e6:	jo     0x42087e
  4208e8:	or     al,0xe5
  4208ea:	test   eax,0x26fecbe3
  4208ef:	push   esp
  4208f0:	fwait
  4208f1:	int    0xb6
  4208f3:	(bad)  
  4208f4:	retf   
  4208f5:	(bad)  
  4208f6:	jns    0x420910
  4208f8:	push   0x3ed83c46
  4208fd:	jo     0x4208be
  4208ff:	inc    esp
  420900:	jns    0x420910
  420902:	(bad)  
  420903:	dec    edi
  420904:	xchg   edx,esi
  420906:	rcl    BYTE PTR [edi-0x53f69331],1
  42090c:	lods   al,BYTE PTR ds:[esi]
  42090d:	(bad)  
  42090f:	mov    BYTE PTR [ecx],0x39
  420912:	aaa    
  420913:	xchg   esi,eax
  420914:	mov    eax,0x807cc75e
  420919:	mov    ebp,DWORD PTR [edi+0x4]
  42091c:	das    
  42091d:	retf   0xa95f
  420920:	pop    ebp
  420921:	test   BYTE PTR [edi-0x58608f4f],dh
  420927:	mov    cl,0xdc
  420929:	add    al,0x8c
  42092b:	adc    eax,0x24917496
  420930:	jmp    0x64f47dda
  420935:	push   ebx
  420936:	lea    eax,[esi-0x66]
  420939:	jae    0x4209a8
  42093b:	loop   0x420947
  42093d:	(bad)  [edi+eiz*4-0x2a]
  420941:	pop    edx
  420942:	inc    eax
  420943:	sahf   
  420944:	mov    ds:0x9da2c7e5,al
  420949:	jno    0x42099f
  42094b:	xor    edx,ebp
  42094d:	mov    ds:0x32b9f0de,al
  420952:	or     eax,DWORD PTR [esi-0x71]
  420955:	sahf   
  420956:	push   cs
  420957:	into   
  420958:	adc    dh,dl
  42095a:	shr    cl,cl
  42095c:	sbb    eax,DWORD PTR [eax]
  42095e:	pop    edi
  42095f:	cld    
  420960:	nop
  420961:	stos   BYTE PTR es:[edi],al
  420962:	test   eax,0xc5ea844d
  420967:	add    edi,edx
  420969:	ds sar esi,0xb8
  42096d:	lock mov bh,0x4a
  420970:	sahf   
  420971:	pop    eax
  420972:	fs mov edx,0x8f4dac1d
  420978:	xor    bl,BYTE PTR [edi]
  42097a:	sbb    eax,0xfb21ae5c
  42097f:	and    al,0x39
  420981:	xchg   ebx,eax
  420982:	(bad)
  420985:	push   esi
  420986:	jno    0x420947
  420988:	outs   dx,BYTE PTR ds:[esi]
  420989:	push   0xffffffb2
  42098b:	push   esi
  42098c:	imul   edi,DWORD PTR [ebx],0xd939f053
  420992:	pmulhw mm5,QWORD PTR [ebx-0x48]
  420996:	mov    BYTE PTR [eax+0x48a01510],bh
  42099c:	xlat   BYTE PTR ds:[ebx]
  42099d:	aaa    
  42099e:	mov    gs,WORD PTR [edx+0x49]
  4209a1:	and    al,0xe8
  4209a3:	adc    al,BYTE PTR [ebx+0x4004e8d8]
  4209a9:	aam    0x16
  4209ab:	pop    es
  4209ac:	fisub  WORD PTR [ecx+0x1907c6ba]
  4209b2:	call   0xcfcfefb9
  4209b7:	mov    eax,ds:0x72e0cb8f
  4209bc:	aas    
  4209bd:	inc    ebx
  4209be:	mov    eax,0x3f63f251
  4209c3:	ins    BYTE PTR es:[edi],dx
  4209c4:	jl     0x420a3d
  4209c6:	jno    0x420a39
  4209c8:	jns    0x420a20
  4209ca:	pushf  
  4209cb:	and    BYTE PTR [eax],ch
  4209cd:	call   0xfda:0x671085b9
  4209d4:	lds    ecx,FWORD PTR [edx]
  4209d6:	pop    eax
  4209d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4209d8:	xchg   esp,eax
  4209d9:	nop
  4209da:	mov    dh,0xa1
  4209dc:	shl    ah,cl
  4209de:	iret   
  4209df:	in     eax,dx
  4209e0:	enter  0x9d2a,0xcc
  4209e4:	and    DWORD PTR [ecx+0x5452531],esp
  4209ea:	pop    esp
  4209eb:	push   0xb0503256
  4209f0:	cmp    DWORD PTR [esp+ebp*4-0x57f99bb3],ecx
  4209f7:	rol    DWORD PTR [ebx],1
  4209f9:	dec    eax
  4209fa:	pop    esi
  4209fb:	loop   0x420993
  4209fd:	adc    bh,BYTE PTR [edx]
  4209ff:	sub    cl,bh
  420a01:	push   es
  420a02:	mov    eax,ds:0x74a5a6bf
  420a07:	test   BYTE PTR [ecx],al
  420a09:	scas   eax,DWORD PTR es:[edi]
  420a0a:	dec    ebp
  420a0b:	call   0xfda74265
  420a10:	mov    ch,0xf7
  420a12:	cmp    DWORD PTR [ecx],ebp
  420a14:	xchg   esp,eax
  420a15:	mov    ds:0x8ca95c9a,al
  420a1a:	jns    0x420a8b
  420a1c:	pop    esp
  420a1d:	mov    al,ds:0xf56803bf
  420a22:	stos   DWORD PTR es:[edi],eax
  420a23:	mov    ebx,DWORD PTR [ecx+edx*2]
  420a26:	not    edx
  420a28:	inc    esp
  420a29:	pop    esi
  420a2a:	loopne 0x420a45
  420a2c:	std    
  420a2d:	jmp    0x4cd0:0x9fd15396
  420a34:	lods   al,BYTE PTR ds:[esi]
  420a35:	daa    
  420a36:	stc    
  420a37:	sahf   
  420a38:	and    al,0x51
  420a3a:	push   cs
  420a3b:	xchg   esp,eax
  420a3c:	jne    0x420a3b
  420a3e:	adc    BYTE PTR [ebx-0x65688f30],al
  420a44:	(bad)  
  420a45:	(bad)  
  420a46:	push   cs
  420a47:	mov    ecx,0xa9aef46f
  420a4c:	and    DWORD PTR ds:0x90cc9f26,0xfffffff8
  420a53:	into   
  420a54:	popa   
  420a55:	inc    ecx
  420a56:	popf   
  420a57:	sub    esp,DWORD PTR [esi+0x42]
  420a5a:	mov    bl,0x2f
  420a5c:	popa   
  420a5d:	int    0xda
  420a5f:	add    esp,DWORD PTR [ecx-0x276a26cb]
  420a65:	push   es
  420a66:	imul   eax,DWORD PTR ds:0xa4007c1b,0xc8003dc1
  420a70:	(bad)  
  420a71:	sbb    DWORD PTR [edi-0x4a765abf],ebx
  420a77:	jle    0x420ace
  420a79:	jl     0x5da44fd8
  420a7f:	sub    ebp,DWORD PTR [edx-0x65]
  420a82:	daa    
  420a83:	aas    
  420a84:	pop    es
  420a85:	xchg   ebx,eax
  420a86:	out    0x9b,al
  420a88:	adc    ebp,DWORD PTR [ecx-0x1febd47f]
  420a8e:	mov    edx,0x23e3c854
  420a93:	call   0x168a:0x8eb77219
  420a9a:	mov    edi,0xe457b195
  420a9f:	jl     0x420a84
  420aa1:	inc    edx
  420aa2:	inc    edi
  420aa3:	ja     0x420a97
  420aa5:	daa    
  420aa6:	push   esp
  420aa7:	rol    BYTE PTR [ebx+0x5d],cl
  420aaa:	mov    eax,0x2f5e972f
  420aaf:	jno    0x420a5d
  420ab1:	pop    eax
  420ab2:	xor    eax,0xf0699737
  420ab7:	in     eax,dx
  420ab8:	pop    edi
  420ab9:	and    eax,DWORD PTR [ebx+0x45]
  420abc:	cmp    al,0x7c
  420abe:	xchg   edx,eax
  420abf:	cmc    
  420ac0:	bound  eax,QWORD PTR [ebp-0x4b]
  420ac3:	cmp    esp,esi
  420ac5:	shr    BYTE PTR [ecx+0x27],1
  420ac8:	pusha  
  420ac9:	out    dx,al
  420aca:	add    ebx,ebp
  420acc:	mov    dl,0x4e
  420ace:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420acf:	or     DWORD PTR [ebp+0x637b4a19],esi
  420ad5:	sub    al,0xe4
  420ad7:	cdq    
  420ad8:	imul   edi,esp,0xc2aeab98
  420ade:	outs   dx,BYTE PTR ds:[esi]
  420adf:	clc    
  420ae0:	pusha  
  420ae1:	retf   0xedb1
  420ae4:	sahf   
  420ae5:	retf   0xaeb8
  420ae8:	sbb    eax,0x4f62ca59
  420aed:	cmp    BYTE PTR ss:[edi],cl
  420af0:	out    dx,al
  420af1:	mul    BYTE PTR [esi+0x681557ae]
  420af7:	pop    edx
  420af8:	cmp    esi,eax
  420afa:	and    ebx,DWORD PTR [edx+0x138d2941]
  420b00:	cmp    ebx,ecx
  420b02:	out    dx,eax
  420b03:	push   edx
  420b04:	lahf   
  420b05:	mov    ah,0xf4
  420b07:	push   0x67984b0b
  420b0c:	or     bh,ah
  420b0e:	(bad)  
  420b0f:	mov    edi,0xb22e4a6
  420b14:	pop    es
  420b15:	neg    DWORD PTR [ebx]
  420b17:	fcom   st(3)
  420b19:	mov    esp,0x3b2d936f
  420b1e:	add    ebp,DWORD PTR [eax+0x40cf8bfe]
  420b24:	xchg   edx,eax
  420b25:	xor    eax,0x2494d782
  420b2a:	mov    bh,bl
  420b2c:	push   eax
  420b2d:	sub    eax,0x60f65fc6
  420b32:	outs   dx,BYTE PTR ds:[esi]
  420b33:	xchg   edi,eax
  420b34:	cmp    BYTE PTR [eax+0xc7b3a97],ah
  420b3a:	mov    al,0x37
  420b3c:	aad    0x6b
  420b3e:	and    DWORD PTR [edi-0x541fa2ba],esp
  420b44:	mov    ebx,0xd7bb3354
  420b49:	dec    edx
  420b4a:	shl    BYTE PTR [eax+0x4d],1
  420b4d:	fsubrp st(0),st
  420b4f:	jae    0x420b81
  420b51:	mov    ah,cl
  420b53:	add    ah,BYTE PTR [edx-0x7083268a]
  420b59:	cmc    
  420b5a:	dec    ecx
  420b5b:	in     eax,dx
  420b5c:	jge    0x420bd2
  420b5e:	jmp    0x8218:0x66418c91
  420b65:	shl    ch,0x91
  420b68:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420b69:	cmp    eax,0x66bfb6ca
  420b6e:	sub    DWORD PTR [edx-0x595d98be],eax
  420b74:	idiv   BYTE PTR [ecx+0x45d06849]
  420b7a:	popf   
  420b7b:	inc    ecx
  420b7c:	call   0x2e7e1e55
  420b81:	retf   0x4d59
  420b84:	add    BYTE PTR [ecx-0x49f857d],ah
  420b8a:	rol    BYTE PTR [edi+0x1d],1
  420b8d:	repnz adc DWORD PTR [esi-0x54],edi
  420b91:	push   edi
  420b92:	lods   al,BYTE PTR ds:[esi]
  420b93:	retf   0xec27
  420b96:	xchg   ebx,eax
  420b97:	fcmovbe st,st(2)
  420b99:	mov    al,0x9f
  420b9b:	jg     0x420bb7
  420b9d:	lea    edx,[esi+0x31]
  420ba0:	popf   
  420ba1:	jmp    0x420bf3
  420ba3:	loopne 0x420b46
  420ba5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420ba6:	fimul  DWORD PTR [ebp+0x71e1d232]
  420bac:	and    esi,DWORD PTR [esi-0x67]
  420baf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420bb0:	out    0x84,eax
  420bb2:	ins    BYTE PTR es:[edi],dx
  420bb3:	xchg   esi,eax
  420bb4:	jp     0x420bbc
  420bb6:	push   ecx
  420bb7:	mov    edx,DWORD PTR [edi+0x1b]
  420bba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420bbb:	and    al,0x0
  420bbd:	xor    cl,ah
  420bbf:	call   0x48a2:0x98ee9b60
  420bc6:	adc    DWORD PTR [edx-0x1203e89e],ebx
  420bcc:	push   ds
  420bcd:	pop    ecx
  420bce:	in     al,dx
  420bcf:	adc    eax,edx
  420bd1:	pop    edx
  420bd2:	test   eax,0xda7ad45e
  420bd7:	xchg   ecx,eax
  420bd9:	mov    ch,0x34
  420bdb:	sub    DWORD PTR ds:0x7a26e1bd,0x6decab97
  420be5:	loopne 0x420c25
  420be7:	mov    dl,0x8a
  420be9:	or     DWORD PTR [esi],0xb
  420bec:	stc    
  420bed:	dec    ebp
  420bee:	fadd   DWORD PTR [ecx]
  420bf0:	inc    ebx
  420bf1:	outs   dx,BYTE PTR ds:[esi]
  420bf2:	(bad)  
  420bf4:	push   es
  420bf5:	jmp    DWORD PTR [esi]
  420bf7:	enter  0x505a,0x5d
  420bfb:	mov    WORD PTR [esi+0x43],ds
  420bfe:	mov    es,WORD PTR [ecx-0x7b]
  420c01:	das    
  420c02:	aad    0x66
  420c04:	stos   DWORD PTR es:[edi],eax
  420c05:	or     ebp,DWORD PTR [esi+0x69fa826]
  420c0b:	test   DWORD PTR [ecx+0x2c],eax
  420c0e:	pop    es
  420c0f:	pop    ebp
  420c10:	pop    ebp
  420c11:	xlat   BYTE PTR ds:[ebx]
  420c12:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420c13:	cmp    esp,DWORD PTR [ebp+0x1b]
  420c16:	ret    0x5d92
  420c19:	push   es
  420c1a:	inc    edi
  420c1b:	mov    ebp,0xccef404c
  420c20:	sahf   
  420c21:	call   0x9285d0e8
  420c26:	pop    esi
  420c27:	or     al,0x6c
  420c29:	inc    edi
  420c2a:	out    0x8b,al
  420c2c:	or     DWORD PTR [eax+eax*8],ebx
  420c2f:	xchg   ecx,eax
  420c30:	leave  
  420c31:	dec    eax
  420c32:	ficom  DWORD PTR cs:[esi*2-0xd077b87]
  420c3a:	loope  0x420bf6
  420c3c:	dec    eax
  420c3d:	test   DWORD PTR [edx-0x15f4c9e6],ebp
  420c43:	inc    ebp
  420c44:	lods   al,BYTE PTR ds:[esi]
  420c45:	(bad)  
  420c47:	nop
  420c48:	pop    edx
  420c49:	jg     0x420c60
  420c4b:	je     0x420c25
  420c4d:	mov    ebp,0x43a62d25
  420c52:	sub    al,0xfc
  420c54:	inc    edi
  420c55:	push   ebp
  420c56:	adc    eax,DWORD PTR [ebx+eiz*1-0x1e]
  420c5a:	test   BYTE PTR [ecx-0x46],cl
  420c5d:	or     esi,DWORD PTR [ecx]
  420c5f:	jne    0x420c31
  420c61:	mov    esi,fs
  420c63:	dec    ebx
  420c64:	lahf   
  420c65:	out    dx,eax
  420c66:	sbb    DWORD PTR [edx-0x25],esp
  420c69:	aas    
  420c6a:	ss bswap eax
  420c6d:	arpl   WORD PTR [edi-0x1bdd299b],ax
  420c73:	or     ah,dh
  420c75:	cmp    ch,BYTE PTR [esi-0x32]
  420c78:	bound  edi,QWORD PTR [esi]
  420c7a:	jbe    0x420ccd
  420c7c:	push   edi
  420c7d:	ins    DWORD PTR es:[edi],dx
  420c7e:	gs mov ebp,0xa4bdc594
  420c84:	dec    esp
  420c85:	mov    bl,BYTE PTR [eax]
  420c87:	cmp    DWORD PTR [edx],0x7f74fca6
  420c8d:	nop
  420c8e:	gs pop edx
  420c90:	fwait
  420c91:	mov    bl,0x22
  420c93:	leave  
  420c94:	in     al,0x37
  420c96:	mul    BYTE PTR [ecx+eax*1-0x48]
  420c9a:	jmp    0xf236:0xc3b78961
  420ca1:	mov    BYTE PTR [edi+0x2f],bl
  420ca4:	test   BYTE PTR [edx+ebp*4+0x11],0xf3
  420ca9:	int3   
  420caa:	cmp    al,0x6d
  420cac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420cad:	xchg   ecx,eax
  420cae:	jmp    0x8040:0xf508e41a
  420cb5:	adc    al,0xbf
  420cb7:	cmp    BYTE PTR [ecx-0x63e6639e],bl
  420cbd:	pop    ds
  420cbe:	nop
  420cbf:	mov    eax,0xdc2cde6c
  420cc4:	or     BYTE PTR ss:[eax+0x23],dh
  420cc8:	mov    ds:0xdf150f5d,eax
  420ccd:	jge    0x420cd8
  420ccf:	mov    DWORD PTR [esi+0x20],edi
  420cd2:	push   0x48
  420cd4:	ret    
  420cd5:	xor    al,0x88
  420cd7:	imul   ebp,DWORD PTR [eax],0x41
  420cda:	das    
  420cdb:	dec    eax
  420cdc:	push   ds
  420cdd:	or     ebx,DWORD PTR [esi+0x48b58290]
  420ce3:	ins    DWORD PTR es:[edi],dx
  420ce4:	xchg   ecx,eax
  420ce5:	fadd   st,st(3)
  420ce7:	aas    
  420ce8:	stos   BYTE PTR es:[edi],al
  420ce9:	out    dx,eax
  420cea:	icebp  
  420ceb:	adc    DWORD PTR [ecx+0x43],eax
  420cee:	or     DWORD PTR [esi],edi
  420cf0:	test   BYTE PTR [ecx],cl
  420cf2:	pop    es
  420cf3:	cmp    eax,0x96260982
  420cf8:	push   ds
  420cf9:	jecxz  0x420cd2
  420cfb:	les    esp,FWORD PTR [esi]
  420cfd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420cfe:	ins    BYTE PTR es:[edi],dx
  420cff:	pusha  
  420d00:	mov    dh,0x10
  420d02:	addr16 iret 
  420d04:	cdq    
  420d05:	adc    bh,BYTE PTR [eax]
  420d07:	mov    ah,0x9
  420d09:	dec    edi
  420d0a:	mov    al,ds:0x33712347
  420d0f:	into   
  420d10:	and    edx,DWORD PTR [edi-0x7c02ce7e]
  420d16:	jmp    0x420ca0
  420d18:	out    0x29,eax
  420d1a:	adc    ebx,DWORD PTR cs:[edx]
  420d1d:	into   
  420d1e:	push   esi
  420d1f:	jecxz  0x420d65
  420d21:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420d22:	cmp    al,ah
  420d24:	mov    esi,0xf10319d1
  420d29:	jl     0x420d92
  420d2b:	mov    eax,ds:0xdbfa3b74
  420d30:	stos   DWORD PTR es:[edi],eax
  420d31:	test   al,0x5e
  420d33:	mov    bh,0xe3
  420d35:	scas   eax,DWORD PTR es:[edi]
  420d36:	jo     0x420da1
  420d38:	xor    eax,0x6390f733
  420d3d:	dec    ebp
  420d3e:	jecxz  0x420d0c
  420d40:	push   0xffffffbc
  420d42:	sbb    ecx,DWORD PTR [ecx+0x6e]
  420d45:	(bad)  
  420d46:	scas   eax,DWORD PTR es:[edi]
  420d47:	ret    
  420d48:	scas   al,BYTE PTR es:[edi]
  420d49:	jl     0x420d9c
  420d4b:	and    BYTE PTR [edi+0x37],ch
  420d4e:	repnz mov edx,0xefd5e4fe
  420d54:	jno    0xa822e1f6
  420d5a:	mov    edi,0x102e495a
  420d5f:	not    DWORD PTR [eax+ebx*2-0x734c8893]
  420d66:	test   al,al
  420d68:	stos   BYTE PTR es:[edi],al
  420d69:	call   0xd6ff4c0b
  420d6e:	loopne 0x420ddc
  420d70:	xchg   edx,eax
  420d71:	out    0xf6,al
  420d73:	lods   al,BYTE PTR ds:[esi]
  420d74:	mov    edi,0x9f303cf5
  420d79:	jb     0x420def
  420d7b:	shl    BYTE PTR [ebp+esi*1-0x39e2ea0],cl
  420d82:	cmp    DWORD PTR [ebx-0x234e2a9c],esp
  420d88:	enter  0x89d7,0x32
  420d8c:	xchg   ebx,eax
  420d8d:	pusha  
  420d8e:	and    al,0x84
  420d90:	and    al,0xa9
  420d92:	dec    esp
  420d93:	pop    edi
  420d94:	pop    ds
  420d95:	xor    eax,DWORD PTR [edx-0x65]
  420d98:	loope  0x420dcd
  420d9a:	(bad)  
  420d9c:	push   ds
  420d9d:	ds ja  0x420dfd
  420da0:	test   al,0xdd
  420da2:	mov    esi,0x287efa8
  420da7:	fsub   QWORD PTR [esi-0x3898a4b1]
  420dad:	clc    
  420dae:	jmp    0x9dbdc53c
  420db3:	sub    DWORD PTR [edx],0x18
  420db6:	adc    ebx,DWORD PTR [ecx]
  420db8:	test   al,0xf7
  420dba:	mov    cl,0x61
  420dbc:	sbb    bl,BYTE PTR [ebp+0x262076fe]
  420dc2:	repz test al,0xb2
  420dc5:	sub    ah,ch
  420dc7:	and    eax,0x4594da1c
  420dcc:	jns    0x420db5
  420dce:	pop    esi
  420dcf:	add    ebx,DWORD PTR [edi-0x49]
  420dd2:	cmc    
  420dd3:	inc    edi
  420dd4:	inc    ebp
  420dd5:	pop    ebx
  420dd6:	xor    BYTE PTR [eax],0xce
  420dd9:	in     al,dx
  420dda:	sub    DWORD PTR [edx-0x1d],0x7e
  420dde:	pop    ecx
  420ddf:	ja     0x420d73
  420de1:	cwde   
  420de2:	xor    BYTE PTR [edi],al
  420de4:	mov    bh,0x8b
  420de6:	imul   esi,DWORD PTR [esi+ebp*8],0xb4a9aa54
  420ded:	pop    ebp
  420dee:	mov    eax,0x7eff2414
  420df3:	ja     0x420dfa
  420df5:	repnz adc eax,0xae8c76e
  420dfb:	repz mov esi,fs
  420dfe:	jno    0x420e35
  420e00:	inc    edi
  420e01:	cmp    edi,eax
  420e03:	mov    ds,ecx
  420e05:	mov    ds:0xf7587e71,al
  420e0a:	mov    ah,0x4f
  420e0c:	in     al,0x48
  420e0e:	add    BYTE PTR [eax-0x18950c3b],dl
  420e14:	xor    BYTE PTR [ecx-0x2a38e4f6],bh
  420e1a:	push   edi
  420e1b:	loope  0x420e59
  420e1d:	jns    0x420e4c
  420e1f:	fild   WORD PTR [esi-0x3a]
  420e22:	scas   al,BYTE PTR es:[edi]
  420e23:	dec    edx
  420e24:	mov    eax,DWORD PTR [ecx-0x53]
  420e27:	inc    BYTE PTR [eax]
  420e29:	mov    ecx,0xd123f18b
  420e2e:	into   
  420e2f:	xor    ah,BYTE PTR [edi+0x72c7ba6d]
  420e35:	jae    0x420eb3
  420e37:	push   0x7041e275
  420e3c:	cmp    dl,dh
  420e3e:	mov    ah,0x8d
  420e40:	pop    ebx
  420e41:	cmp    BYTE PTR [ebp+0x751b38b1],0x55
  420e48:	jne    0x420de1
  420e4a:	adc    ch,BYTE PTR [edx+0x6cb4d131]
  420e50:	lea    ebp,[ebx+eax*1+0x300e9898]
  420e57:	adc    al,0x1
  420e59:	aas    
  420e5a:	js     0x420ea5
  420e5c:	icebp  
  420e5d:	jno    0x420e58
  420e5f:	pop    ds
  420e60:	iret   
  420e61:	lds    eax,FWORD PTR [esi]
  420e63:	dec    esi
  420e64:	mov    ch,0x11
  420e66:	push   esp
  420e67:	add    dh,BYTE PTR [esi-0x9]
  420e6a:	pop    eax
  420e6b:	ret    
  420e6c:	sbb    BYTE PTR [edi],0xed
  420e6f:	inc    edi
  420e70:	outs   dx,DWORD PTR ds:[esi]
  420e71:	mov    dl,0xdf
  420e73:	mov    cl,0x2e
  420e75:	pushf  
  420e76:	jne    0x420eab
  420e78:	das    
  420e79:	push   esp
  420e7a:	push   eax
  420e7b:	test   DWORD PTR [ebx-0x4ce2414e],0x7b6af07
  420e85:	xchg   ebx,eax
  420e86:	xor    BYTE PTR ds:0x9fc5a2bd,ch
  420e8c:	mov    BYTE PTR [ecx],ah
  420e8e:	(bad)  
  420e8f:	sbb    BYTE PTR [edi],bl
  420e91:	dec    edi
  420e92:	inc    edi
  420e93:	xchg   edi,eax
  420e94:	ins    BYTE PTR es:[edi],dx
  420e95:	repz push edx
  420e97:	retf   0x2649
  420e9a:	mov    dl,0xeb
  420e9c:	pop    edi
  420e9d:	fldenv [ebp+0x1a0bccf1]
  420ea3:	retw   
  420ea5:	pop    esp
  420ea6:	xchg   esp,eax
  420ea7:	jge    0x420e9b
  420ea9:	sbb    BYTE PTR [edi+ecx*1],0xdc
  420ead:	(bad)  
  420eae:	pop    DWORD PTR [edi+0x6201319d]
  420eb4:	jno    0x420e70
  420eb6:	or     BYTE PTR [ebp-0x27e3eae1],0x92
  420ebd:	mov    eax,gs:0x23b92b50
  420ec3:	inc    eax
  420ec4:	ret    0x9b53
  420ec7:	mov    ch,0x8a
  420ec9:	xor    ebx,edx
  420ecb:	lods   eax,DWORD PTR ds:[esi]
  420ecc:	xchg   ecx,eax
  420ecd:	scas   eax,DWORD PTR es:[edi]
  420ece:	mov    al,0xad
  420ed0:	ret    0x863
  420ed3:	gs pop eax
  420ed5:	cmp    al,0x39
  420ed7:	mov    dl,0x8f
  420ed9:	jge    0x420f16
  420edb:	mov    ds:0xc8ecc421,al
  420ee0:	xchg   ecx,eax
  420ee1:	test   dl,0x73
  420ee4:	aam    0x73
  420ee6:	mov    dl,0x1a
  420ee8:	test   BYTE PTR [edi+eiz*2],al
  420eeb:	xor    al,bh
  420eed:	pop    esi
  420eee:	and    bl,0x8e
  420ef1:	test   eax,0xe938023b
  420ef6:	and    ecx,esp
  420ef8:	lea    edi,[ebp+0x4f]
  420efb:	stc    
  420efc:	ror    edx,0xbc
  420eff:	pop    ebx
  420f00:	and    bl,BYTE PTR [edx]
  420f02:	mov    esp,0xf7003d26
  420f07:	out    dx,al
  420f08:	cmp    DWORD PTR [ebx-0x3f],edi
  420f0b:	in     eax,0x4c
  420f0d:	mov    cl,0x1f
  420f0f:	ins    DWORD PTR es:[edi],dx
  420f10:	fldcw  WORD PTR [edx+ecx*2-0x50203474]
  420f17:	or     eax,0x324d3c0c
  420f1c:	std    
  420f1d:	shl    BYTE PTR [eax],1
  420f1f:	fwait
  420f20:	into   
  420f21:	jecxz  0x420f56
  420f23:	and    ecx,ebx
  420f25:	aad    0xf5
  420f27:	pop    ebx
  420f28:	add    eax,DWORD PTR [eax+edx*4]
  420f2b:	adc    BYTE PTR [edx],bh
  420f2d:	(bad)  
  420f2f:	pop    esp
  420f30:	xchg   ecx,eax
  420f31:	call   0xda34:0xb4c2e90f
  420f38:	mov    ebx,?
  420f3a:	rcr    BYTE PTR [ecx-0xb153526],0xe3
  420f41:	add    eax,0x38b64567
  420f46:	jp     0x420f84
  420f48:	jb     0x420f20
  420f4a:	jl     0x420fa4
  420f4c:	inc    eax
  420f4d:	or     eax,0x6824db2e
  420f52:	int3   
  420f53:	mov    cl,0x74
  420f55:	pusha  
  420f56:	jl     0x420f5d
  420f58:	xchg   ecx,eax
  420f59:	cmp    ecx,DWORD PTR [edx+ecx*1+0x53]
  420f5d:	push   cs
  420f5e:	add    ah,BYTE PTR [ebx+0x0]
  420f61:	push   0xffffffd5
  420f63:	pop    ss
  420f64:	int    0xbf
  420f66:	mov    al,ds:0x8db77ad9
  420f6b:	cmp    cl,BYTE PTR [esp+esi*2]
  420f6e:	mov    DWORD PTR [ecx-0x42b7fc64],eax
  420f74:	jecxz  0x420f9f
  420f76:	aad    0xa5
  420f78:	jmp    0xcb5912b0
  420f7d:	shl    DWORD PTR [edx+0x4783a96],1
  420f83:	imul   edi,DWORD PTR [ecx],0x5a
  420f86:	pop    eax
  420f87:	mov    ds,WORD PTR [edi-0x386a24cd]
  420f8d:	jne    0x420fee
  420f8f:	enter  0x3f49,0x93
  420f93:	jbe    0x420f78
  420f95:	jae    0x420f7c
  420f97:	or     BYTE PTR [ebp+0x63fbea76],0x39
  420f9e:	adc    BYTE PTR [ecx+eax*4+0xf245597],bl
  420fa5:	test   al,0x86
  420fa7:	add    eax,0x22f706d5
  420fac:	imul   esi,DWORD PTR [ebx+0x55b306a8],0x20aadc6
  420fb6:	fisub  WORD PTR [eax]
  420fb8:	bswap  edi
  420fba:	and    eax,0xbf0468f3
  420fbf:	dec    esp
  420fc0:	fbstp  TBYTE PTR fs:[edi]
  420fc3:	aam    0xb
  420fc5:	aaa    
  420fc6:	retf   
  420fc7:	and    ebp,DWORD PTR [edx+0xbc1fbb2]
  420fcd:	test   al,0x8
  420fcf:	scas   eax,DWORD PTR es:[edi]
  420fd0:	add    ebp,DWORD PTR [edi+0x42]
  420fd3:	leave  
  420fd4:	dec    ebx
  420fd5:	fistp  WORD PTR [esi]
  420fd7:	retf   0xbc3f
  420fda:	mov    dh,dh
  420fdc:	jmp    0x2994:0xf81e6604
  420fe3:	imul   ebx,edx,0x9f9e2d56
  420fe9:	xchg   esi,eax
  420fea:	add    al,0x87
  420fec:	fidivr DWORD PTR [ebx+0x7379af61]
  420ff2:	inc    edi
  420ff3:	lea    edx,[eax*4+0x781e4cbc]
  420ffa:	mov    DWORD PTR [edx+0x7],edx
  420ffd:	pushf  
  420ffe:	(bad)  
  420fff:	and    BYTE PTR [edx+0x1ab5c09e],bh
  421005:	or     dl,BYTE PTR [eax+0x0]
  421008:	xchg   al,al
  42100a:	jae    0x421033
  42100c:	cdq    
  42100d:	(bad)  
  42100e:	jmp    0x5ee4:0x3480a48e
  421015:	mov    BYTE PTR [ebp-0x1f],ah
  421018:	sbb    al,0xfe
  42101a:	push   ebp
  42101b:	pop    es
  42101c:	mov    eax,0x9e6f46b3
  421021:	inc    ebx
  421022:	jmp    0x2eeb:0x836ec0f4
  421029:	leave  
  42102a:	push   esi
  42102b:	mov    dl,0x95
  42102d:	fsub   DWORD PTR [ecx+0x43]
  421030:	div    bh
  421032:	jne    0x421093
  421034:	ret    
  421035:	test   BYTE PTR [eax+0x7d546d7c],bh
  42103b:	push   eax
  42103c:	mov    ebx,0xbd2f7f4d
  421041:	lods   al,BYTE PTR ds:[esi]
  421042:	test   BYTE PTR [ebx],0x58
  421045:	xchg   DWORD PTR gs:[esi+0x4ea442ff],esp
  42104c:	dec    eax
  42104d:	aaa    
  42104e:	mov    ebp,0x510e5fcc
  421053:	adc    ah,al
  421055:	arpl   si,dx
  421057:	inc    ebp
  421058:	hlt    
  421059:	out    0x4e,eax
  42105b:	pop    eax
  42105c:	mov    cl,0xca
  42105e:	imul   eax,DWORD PTR [edx+0x6],0xeeb4946a
  421065:	jmp    0x421058
  421067:	mov    dh,0x88
  421069:	sub    BYTE PTR ds:0x1b2108a7,al
  42106f:	mov    ds:0x770db4f9,eax
  421074:	inc    ebp
  421075:	dec    ebx
  421076:	or     dh,bl
  421078:	mov    cl,BYTE PTR [edi+0x17]
  42107b:	test   eax,0xec03c9e0
  421080:	pop    ds
  421081:	stos   BYTE PTR es:[edi],al
  421082:	scas   eax,DWORD PTR es:[edi]
  421083:	xor    BYTE PTR [edx-0x4ac8f360],ah
  421089:	pusha  
  42108a:	sub    al,0xdd
  42108c:	cmp    edx,eax
  42108e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42108f:	fsub   DWORD PTR [edi-0x67]
  421092:	adc    al,0x34
  421094:	fist   WORD PTR [eax+0xe3fe0cb]
  42109a:	dec    eax
  42109b:	sub    dl,0xe8
  42109e:	pushf  
  42109f:	jg     0x42107d
  4210a1:	pop    edi
  4210a2:	repz jmp 0x6697:0xd6f98a1b
  4210aa:	shl    esp,cl
  4210ac:	ret    0x64c8
  4210af:	nop
  4210b0:	ins    BYTE PTR es:[edi],dx
  4210b1:	ss xor al,0xc
  4210b4:	out    dx,al
  4210b5:	push   ebp
  4210b6:	jne    0x4210b6
  4210b8:	push   ds
  4210b9:	push   cs
  4210ba:	jl     0x4210ac
  4210bc:	mov    al,0xe6
  4210be:	push   0x37bb37cd
  4210c3:	push   es
  4210c4:	stos   DWORD PTR es:[edi],eax
  4210c5:	mov    ecx,0xc5b407aa
  4210ca:	out    dx,eax
  4210cb:	xchg   ebx,eax
  4210cc:	sbb    al,0x87
  4210ce:	add    eax,0xb570b422
  4210d3:	push   edi
  4210d4:	bnd jne 0x421155
  4210d7:	cmp    al,0x39
  4210d9:	add    al,0x91
  4210db:	inc    edx
  4210dc:	rcr    BYTE PTR [ecx-0x4b],cl
  4210df:	adc    BYTE PTR [ebp-0x3c49cc3f],dh
  4210e5:	lock mov edi,0xcf13e26f
  4210eb:	push   ss
  4210ec:	jbe    0x421075
  4210ee:	pop    ds
  4210ef:	cmp    eax,0xe2031737
  4210f4:	int3   
  4210f5:	js     0x421116
  4210f7:	sbb    ecx,edi
  4210f9:	inc    ebx
  4210fa:	lahf   
  4210fb:	dec    ecx
  4210fc:	push   0x1f
  4210fe:	sbb    ebx,DWORD PTR [edi+0x42]
  421101:	pop    ss
  421102:	ja     0x42112c
  421104:	xor    DWORD PTR [ebx],edx
  421106:	or     bl,BYTE PTR [edx+0x27]
  421109:	add    eax,0xbf2a1cc1
  42110e:	cli    
  42110f:	shl    BYTE PTR [eax],cl
  421111:	sub    al,0x8c
  421113:	stos   DWORD PTR es:[edi],eax
  421114:	and    al,0x88
  421116:	fadd   DWORD PTR [ebp+esi*4+0xf]
  42111a:	xor    BYTE PTR ds:0x377dc27a,bh
  421120:	icebp  
  421121:	pop    es
  421122:	(bad)  
  421123:	ret    0x8169
  421126:	ror    BYTE PTR [ebx-0x5c],1
  421129:	mov    ds:0xaf103cf7,al
  42112e:	jmp    0x3445:0x7fd09e11
  421135:	pushf  
  421136:	fbstp  TBYTE PTR [ebp-0x12]
  421139:	sub    ah,BYTE PTR [ebp-0x5108d642]
  42113f:	sub    DWORD PTR [ebp-0x78],ebp
  421142:	jg     0x421124
  421144:	dec    ebx
  421145:	jge    0x421192
  421147:	xchg   esi,eax
  421148:	and    BYTE PTR [esi],bl
  42114a:	push   ebx
  42114b:	xor    dl,al
  42114d:	pop    esp
  42114e:	xchg   BYTE PTR [edx-0x59e9ab40],dl
  421154:	mov    dl,BYTE PTR [ebp+0x6a]
  421157:	sar    ebx,cl
  421159:	js     0x42111e
  42115b:	pop    ebx
  42115c:	es mov ebp,0x54bc9a8b
  421162:	test   al,0x3b
  421164:	xor    bl,BYTE PTR ds:0xa6bab3b4
  42116a:	mov    eax,0x41172d02
  42116f:	test   al,0x7e
  421171:	outs   dx,DWORD PTR ds:[esi]
  421172:	mov    ebx,0xb7b0d038
  421177:	mov    al,0x56
  421179:	xchg   edi,eax
  42117a:	sahf   
  42117b:	hlt    
  42117c:	(bad)  
  42117d:	jne    0x421154
  42117f:	mov    esi,0xc425e55c
  421184:	mov    ebx,0x9507c86a
  421189:	adc    edi,DWORD PTR [edi+0x6f]
  42118c:	jnp    0x421136
  42118e:	lds    ebp,FWORD PTR [esi-0x2a655509]
  421194:	mov    bl,0xda
  421196:	fwait
  421197:	push   esi
  421198:	jle    0x421211
  42119a:	push   0xa7c4f75e
  42119f:	jb     0x4211dc
  4211a1:	push   ds
  4211a2:	(bad)  
  4211a3:	mov    ecx,0x4cd681cb
  4211a8:	mov    dh,0xde
  4211aa:	xchg   BYTE PTR [edi],ch
  4211ac:	stc    
  4211ad:	cmc    
  4211ae:	adc    eax,0x72c748be
  4211b3:	push   gs
  4211b5:	pop    edi
  4211b6:	xchg   esp,eax
  4211b7:	adc    DWORD PTR [ecx+edi*4-0x4b],0xd056d77b
  4211bf:	sbb    eax,0x78c3f324
  4211c4:	cwde   
  4211c5:	shl    DWORD PTR [ebx],cl
  4211c7:	ins    BYTE PTR es:[edi],dx
  4211c8:	pop    eax
  4211c9:	jle    0x421197
  4211cb:	mov    BYTE PTR [edi+0x4201fce7],0x7d
  4211d2:	and    DWORD PTR [ecx+0x35e9a77],edi
  4211d8:	inc    edi
  4211d9:	cwde   
  4211da:	mov    edi,0x9273cdc6
  4211df:	gs mov esp,0x59c05c82
  4211e5:	adc    al,0x8a
  4211e7:	imul   esp,DWORD PTR [edi],0xbbdc466
  4211ed:	fisub  WORD PTR [eax+0x53]
  4211f0:	gs jo  0x4211c0
  4211f3:	mov    esi,0xe04dd325
  4211f8:	dec    ebx
  4211f9:	dec    esi
  4211fa:	addr16 push edx
  4211fc:	sub    eax,0x5e8744b8
  421201:	sub    ch,ch
  421203:	mov    ecx,0xd5aabed4
  421208:	aad    0x31
  42120a:	cmp    BYTE PTR [edi],cl
  42120c:	ror    BYTE PTR [ebx-0x44616303],cl
  421212:	lahf   
  421213:	enter  0x7236,0x95
  421217:	mov    ch,0x24
  421219:	xor    DWORD PTR [esi],0x4
  42121c:	mov    ds:0xb3caaa06,al
  421221:	jmp    0x42129e
  421223:	mov    ebp,0xe0eeadc1
  421228:	adc    ah,BYTE PTR [edx]
  42122a:	sub    DWORD PTR [eax-0x28c8365a],ecx
  421230:	sub    al,BYTE PTR [edx-0x418a7bab]
  421236:	add    edx,ecx
  421238:	sar    DWORD PTR [edi+0x577d8a5f],cl
  42123e:	out    0x28,al
  421240:	(bad)  
  421241:	gs inc eax
  421243:	jne    0x42123a
  421245:	nop
  421246:	and    DWORD PTR ds:0xb11e0536,edi
  42124c:	or     esp,DWORD PTR [eax+ecx*1+0x517385f]
  421253:	xchg   DWORD PTR [ebp-0x1b1ec537],esi
  421259:	ins    DWORD PTR es:[edi],dx
  42125a:	mov    dh,0xb2
  42125c:	ror    BYTE PTR [ecx+0x54],cl
  42125f:	aas    
  421260:	js     0x4212b5
  421262:	pop    ebp
  421263:	jno    0x421278
  421265:	mov    esi,0x5318412d
  42126a:	inc    esp
  42126b:	push   es
  42126c:	lahf   
  42126d:	xchg   ebp,eax
  42126e:	fisubr DWORD PTR [edx]
  421270:	push   esp
  421271:	push   0xffffffb9
  421273:	adc    edi,DWORD PTR [esi+0x7027dcd8]
  421279:	xchg   ecx,eax
  42127a:	and    DWORD PTR [edi+edx*2+0x50],ebx
  42127e:	in     eax,dx
  42127f:	pop    ecx
  421280:	retf   0x4612
  421283:	ins    BYTE PTR es:[edi],dx
  421284:	jecxz  0x421254
  421286:	mov    ss,WORD PTR [ebp-0x6cef660f]
  42128c:	or     al,0xca
  42128e:	mov    ds:0x80a47d3b,eax
  421293:	std    
  421294:	(bad)
  421297:	int3   
  421298:	sub    eax,0xd4701cd0
  42129d:	fisubr WORD PTR fs:[esi+0x2aacc3c9]
  4212a4:	mov    eax,ds:0x4ca9b4bb
  4212a9:	jnp    0x4212b3
  4212ab:	mov    ds:0xf99971ab,eax
  4212b0:	cmp    eax,DWORD PTR [ebx]
  4212b2:	xchg   ecx,eax
  4212b3:	jne    0x421276
  4212b5:	push   ss
  4212b6:	and    al,0x18
  4212b8:	pop    esp
  4212b9:	in     eax,0x2e
  4212bb:	ja     0x4212ed
  4212bd:	and    DWORD PTR [ecx+0x24],0x77348f42
  4212c4:	xlat   BYTE PTR ds:[ebx]
  4212c5:	cdq    
  4212c6:	sub    DWORD PTR [eax],esp
  4212c8:	cdq    
  4212c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4212ca:	in     al,0x11
  4212cc:	pop    ss
  4212cd:	aad    0x24
  4212cf:	cmp    dh,BYTE PTR [edx]
  4212d1:	(bad)
  4212d4:	dec    ecx
  4212d6:	(bad)  
  4212d7:	adc    eax,0xc395ff0f
  4212dc:	fld    DWORD PTR [esi+0x76]
  4212df:	push   edx
  4212e0:	cdq    
  4212e1:	clc    
  4212e2:	add    al,0xd9
  4212e4:	or     DWORD PTR [esi+0x3f246817],ebx
  4212ea:	pop    ebx
  4212eb:	retf   
  4212ec:	xchg   esp,eax
  4212ed:	mov    esi,0xfdbfd448
  4212f2:	pop    ebx
  4212f3:	jno    0x4212f6
  4212f5:	push   esi
  4212f6:	sbb    DWORD PTR [eax-0x3b],ecx
  4212f9:	int3   
  4212fa:	inc    esi
  4212fb:	pop    esp
  4212fc:	xchg   edx,eax
  4212fd:	pop    edx
  4212fe:	mov    dl,BYTE PTR [ecx+0x1dec45d]
  421304:	adc    DWORD PTR [esi-0x2e],edi
  421307:	test   eax,0x428ab9f8
  42130c:	or     BYTE PTR [edi+0x1e8e08f3],0xab
  421313:	pop    eax
  421314:	in     al,0xdb
  421316:	jmp    0x421315
  421318:	mov    bl,0xa8
  42131a:	shr    BYTE PTR ds:[edx+edx*1],1
  42131e:	push   ebx
  42131f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421320:	inc    eax
  421321:	(bad)  
  421323:	xchg   DWORD PTR [edi-0x70720c77],ebx
  421329:	or     DWORD PTR [ecx-0x64],edx
  42132c:	mov    edi,0x3f03aed4
  421331:	das    
  421332:	push   es
  421333:	and    eax,0xe5309fe5
  421338:	xchg   ebx,eax
  421339:	clc    
  42133a:	cmp    BYTE PTR [edx-0x46],dh
  42133d:	in     eax,dx
  42133e:	mov    dh,0x80
  421340:	aas    
  421341:	in     eax,dx
  421342:	shl    BYTE PTR [esi+edi*4-0x27c6725b],0x74
  42134a:	jle    0x42132a
  42134c:	sbb    dh,cl
  42134e:	or     eax,0x6163fcb7
  421353:	lods   al,BYTE PTR ds:[esi]
  421354:	dec    edi
  421355:	repnz daa 
  421357:	sbb    eax,DWORD PTR [ebx]
  421359:	push   esi
  42135a:	cmp    edx,DWORD PTR [ebx*2-0x31263959]
  421361:	adc    al,0xa
  421363:	fisubr WORD PTR [esi-0x38603001]
  421369:	call   0x26e3:0x6d24ee61
  421370:	test   BYTE PTR [edi-0x1],cl
  421373:	stos   DWORD PTR es:[edi],eax
  421374:	mov    bh,0x1f
  421376:	xor    al,0x1b
  421378:	adc    DWORD PTR [edx],edx
  42137a:	fstp   TBYTE PTR [edx+0x42]
  42137d:	push   ecx
  42137e:	outs   dx,BYTE PTR ds:[esi]
  42137f:	pop    esp
  421380:	mov    esp,0x2a9c2f6d
  421385:	fnstenv [edx+0x28]
  421388:	dec    edi
  421389:	or     ch,BYTE PTR [ebx]
  42138b:	repnz add bh,BYTE PTR [ebx+0x58e809ae]
  421392:	sub    ebx,DWORD PTR [ebx+0x3e]
  421395:	xor    eax,0x4179593e
  42139a:	and    DWORD PTR [edx-0x1e],eax
  42139d:	mov    al,0xb
  42139f:	sahf   
  4213a0:	sar    DWORD PTR ds:0x8d62a9c0,cl
  4213a6:	loope  0x42141d
  4213a8:	dec    ecx
  4213a9:	and    BYTE PTR [ebx],al
  4213ab:	xor    al,0x72
  4213ad:	mov    al,ds:0x9ad39482
  4213b2:	cmp    ch,bh
  4213b4:	dec    ecx
  4213b5:	mov    BYTE PTR [ebx+edi*1],bl
  4213b8:	sub    edi,DWORD PTR [ebp-0x48]
  4213bb:	pop    ds
  4213bc:	int    0x17
  4213be:	and    BYTE PTR [ecx],bl
  4213c0:	ret    
  4213c1:	mov    esi,esp
  4213c3:	push   ss
  4213c4:	(bad)  
  4213c5:	inc    esi
  4213c6:	pop    ss
  4213c7:	cs jo  0x421358
  4213ca:	out    0x52,al
  4213cc:	xchg   ebx,eax
  4213cd:	cld    
  4213ce:	dec    ebp
  4213cf:	jmp    0x864306c1
  4213d4:	cwde   
  4213d5:	call   0x69ec:0x610a6d7a
  4213dc:	shl    ebx,1
  4213de:	ins    DWORD PTR es:[edi],dx
  4213df:	pop    ebx
  4213e0:	imul   eax,DWORD PTR [esi+0x664ef451],0x3b5d15c3
  4213ea:	hlt    
  4213eb:	retf   0x1209
  4213ee:	(bad)  
  4213ef:	enter  0x40f,0xde
  4213f3:	int3   
  4213f4:	cmp    eax,ebx
  4213f6:	mov    ss,WORD PTR [ecx-0x12]
  4213f9:	mov    ch,0x37
  4213fb:	pop    dx
  4213fd:	fiadd  WORD PTR [ebx-0x5]
  421400:	aam    0x3f
  421402:	popf   
  421403:	push   es
  421404:	je     0x4213e8
  421406:	push   cs
  421407:	xor    ebp,DWORD PTR [esi-0x2]
  42140a:	jp     0x4213d5
  42140c:	jmp    0x548b:0x5b3bb5a6
  421413:	and    esi,DWORD PTR [ecx+0x3b]
  421416:	iret   
  421417:	shl    BYTE PTR [edx+esi*4],0x91
  42141b:	push   esi
  42141c:	iret   
  42141d:	push   ebx
  42141e:	ret    
  42141f:	cmp    esp,DWORD PTR ds:0x3eb37af0
  421425:	adc    al,0x66
  421427:	and    al,0xaf
  421429:	mov    eax,ds:0x1f3209b8
  42142e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42142f:	loop   0x42147e
  421431:	xchg   esp,eax
  421432:	pusha  
  421433:	sub    al,BYTE PTR [edx+eiz*2]
  421436:	push   0x10b4c960
  42143b:	and    eax,0x990c643d
  421440:	fldenv [eax]
  421442:	sti    
  421443:	push   ebx
  421444:	scas   eax,DWORD PTR es:[edi]
  421445:	xor    ah,BYTE PTR [eax-0x4a5d683f]
  42144b:	ds dec ebx
  42144d:	addr16 pop ebp
  42144f:	pop    ss
  421450:	rol    ch,1
  421452:	loope  0x421419
  421454:	rcr    BYTE PTR ds:0x49d1ac83,0x55
  42145b:	aaa    
  42145c:	les    edx,FWORD PTR [esp+ebp*1]
  42145f:	cmp    BYTE PTR [edx],dl
  421461:	stc    
  421462:	nop
  421463:	and    edx,ecx
  421465:	dec    esp
  421466:	cmp    ecx,esp
  421468:	sub    al,0xdc
  42146a:	push   esi
  42146b:	push   ss
  42146c:	add    eax,0xc0f8c723
  421471:	dec    esi
  421472:	cdq    
  421473:	or     al,0x44
  421475:	inc    eax
  421476:	aas    
  421477:	pop    ss
  421478:	mov    ds:0xf9eb1658,eax
  42147d:	outs   dx,DWORD PTR ds:[esi]
  42147e:	xor    dh,cl
  421480:	fidiv  WORD PTR [edi-0x3f6e7ba1]
  421486:	mov    ch,0x53
  421488:	dec    esp
  421489:	stos   DWORD PTR es:[edi],eax
  42148a:	add    BYTE PTR [ecx+0x3a64e2bc],bl
  421490:	mov    ss,esp
  421492:	outs   dx,DWORD PTR ds:[esi]
  421493:	leave  
  421494:	test   al,0xb3
  421496:	xchg   esp,eax
  421497:	cmp    eax,0x1a4bb786
  42149c:	pop    es
  42149d:	or     DWORD PTR [esi],eax
  42149f:	iret   
  4214a0:	data16 loope 0x421521
  4214a3:	or     al,0xa3
  4214a5:	test   DWORD PTR [ebx-0x3b36272b],ecx
  4214ab:	pop    esp
  4214ac:	xchg   ebx,eax
  4214ad:	xor    eax,DWORD PTR [ebp+0x636d698d]
  4214b3:	out    0xae,al
  4214b5:	cwde   
  4214b6:	dec    esi
  4214b7:	mov    dh,0x15
  4214b9:	in     al,dx
  4214ba:	and    BYTE PTR [ebx],ah
  4214bc:	(bad)  
  4214be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4214bf:	push   ebx
  4214c0:	pop    ecx
  4214c1:	icebp  
  4214c2:	mov    WORD PTR [ebx+0x3c],es
  4214c5:	data16 cli 
  4214c7:	stc    
  4214c8:	mov    al,ds:0x90c3c033
  4214cd:	nop
  4214ce:	nop
  4214cf:	nop
  4214d0:	push   ecx
  4214d1:	push   ebp
  4214d2:	mov    ebp,DWORD PTR [esp+0x10]
  4214d6:	xor    eax,eax
  4214d8:	test   ebp,ebp
  4214da:	push   esi
  4214db:	mov    DWORD PTR [esp+0x8],eax
  4214df:	mov    esi,0xfffffffd
  4214e4:	je     0x421546
  4214e6:	push   ebx
  4214e7:	push   edi
  4214e8:	mov    edi,DWORD PTR [esp+0x18]
  4214ec:	mov    DWORD PTR [esp+0x1c],0x1
  4214f4:	mov    cl,BYTE PTR [esi+ebp*1+0x3]
  4214f8:	add    esi,0x2
  4214fb:	inc    esi
  4214fc:	mov    BYTE PTR [esi+edi*1],cl
  4214ff:	mov    ecx,DWORD PTR [esp+0x24]
  421503:	movzx  ecx,BYTE PTR [eax+ecx*1]
  421507:	mov    edx,DWORD PTR [esp+0x10]
  42150b:	mov    eax,DWORD PTR [esp+0x1c]
  42150f:	add    edx,eax
  421511:	mov    DWORD PTR [esp+0x10],edx
  421515:	ror    eax,cl
  421517:	mov    eax,DWORD PTR [esp+0x10]
  42151b:	mov    edx,eax
  42151d:	shr    edx,0x3
  421520:	mov    ebx,0x1
  421525:	sub    ebx,edx
  421527:	imul   eax,ebx
  42152a:	mov    DWORD PTR [esp+0x10],eax
  42152e:	shl    ebx,0x3
  421531:	mov    bl,BYTE PTR [esi+edi*1]
  421534:	add    bl,cl
  421536:	mov    ecx,DWORD PTR [esp+0x20]
  42153a:	mov    BYTE PTR [esi+edi*1],bl
  42153d:	sub    esi,0x2
  421540:	cmp    esi,ecx
  421542:	jl     0x4214f4
  421544:	pop    edi
  421545:	pop    ebx
  421546:	pop    esi
  421547:	pop    ebp
  421548:	pop    ecx
  421549:	ret    
  42154a:	nop
  42154b:	nop
  42154c:	nop
  42154d:	nop
  42154e:	nop
  42154f:	nop
  421550:	push   ebp
  421551:	mov    ebp,esp
  421553:	sub    esp,0x78
  421556:	push   esi
  421557:	mov    DWORD PTR [ebp-0x50],0x0
  42155e:	mov    DWORD PTR [ebp-0x18],0x0
  421565:	mov    DWORD PTR [ebp-0x78],0x0
  42156c:	mov    DWORD PTR [ebp-0x68],0x0
  421573:	mov    DWORD PTR [ebp-0x8],0x0
  42157a:	mov    DWORD PTR [ebp-0x74],0x0
  421581:	mov    DWORD PTR [ebp-0x70],0x0
  421588:	mov    DWORD PTR [ebp-0x14],0x0
  42158f:	mov    DWORD PTR [ebp-0x54],0x0
  421596:	mov    DWORD PTR [ebp-0x10],0x0
  42159d:	mov    DWORD PTR [ebp-0x60],0x0
  4215a4:	mov    DWORD PTR [ebp-0x4],0x0
  4215ab:	mov    DWORD PTR [ebp-0x64],0x0
  4215b2:	mov    DWORD PTR [ebp-0x30],0x0
  4215b9:	mov    DWORD PTR [ebp-0x5c],0x0
  4215c0:	mov    DWORD PTR [ebp-0x2c],0x0
  4215c7:	mov    DWORD PTR [ebp-0x58],0x0
  4215ce:	mov    DWORD PTR [ebp-0xc],0x0
  4215d5:	mov    eax,ds:0x428100
  4215da:	mov    DWORD PTR [ebp-0x28],eax
  4215dd:	mov    ecx,DWORD PTR ds:0x428104
  4215e3:	mov    DWORD PTR [ebp-0x24],ecx
  4215e6:	mov    edx,DWORD PTR ds:0x428108
  4215ec:	mov    DWORD PTR [ebp-0x20],edx
  4215ef:	mov    al,ds:0x42810c
  4215f4:	mov    BYTE PTR [ebp-0x1c],al
  4215f7:	mov    ecx,DWORD PTR ds:0x4280f0
  4215fd:	mov    DWORD PTR [ebp-0x40],ecx
  421600:	mov    edx,DWORD PTR ds:0x4280f4
  421606:	mov    DWORD PTR [ebp-0x3c],edx
  421609:	mov    eax,ds:0x4280f8
  42160e:	mov    DWORD PTR [ebp-0x38],eax
  421611:	mov    cx,WORD PTR ds:0x4280fc
  421618:	mov    WORD PTR [ebp-0x34],cx
  42161c:	mov    dl,BYTE PTR ds:0x4280fe
  421622:	mov    BYTE PTR [ebp-0x32],dl
  421625:	mov    DWORD PTR [ebp-0x30],0x40
  42162c:	cmp    DWORD PTR [ebp+0x8],0x0
  421630:	jne    0x42163b
  421632:	mov    eax,DWORD PTR [ebp-0x10]
  421635:	add    eax,0x1
  421638:	mov    DWORD PTR [ebp-0x10],eax
  42163b:	mov    DWORD PTR [ebp-0x48],0x0
  421642:	mov    DWORD PTR [ebp-0x4c],0x0
  421649:	push   0x1
  42164b:	lea    ecx,[ebp-0x14]
  42164e:	push   ecx
  42164f:	call   DWORD PTR ds:0x428000
  421655:	mov    BYTE PTR [ebp-0x40],0x56
  421659:	call   DWORD PTR ds:0x428010
  42165f:	mov    DWORD PTR [ebp-0x2c],eax
  421662:	mov    BYTE PTR [ebp-0x3e],0x72
  421666:	movzx  edx,WORD PTR [ebp-0x2c]
  42166a:	test   edx,edx
  42166c:	jne    0x4216ae
  42166e:	mov    BYTE PTR [ebp-0x34],0x0
  421672:	mov    DWORD PTR [ebp-0x14],0xe0d
  421679:	lea    eax,[ebp-0x28]
  42167c:	push   eax
  42167d:	call   DWORD PTR ds:0x428014
  421683:	mov    DWORD PTR [ebp-0x68],eax
  421686:	mov    DWORD PTR [ebp-0x5c],0x3a
  42168d:	lea    ecx,[ebp-0x40]
  421690:	push   ecx
  421691:	mov    edx,DWORD PTR [ebp-0x68]
  421694:	push   edx
  421695:	call   DWORD PTR ds:0x428018
  42169b:	mov    DWORD PTR [ebp-0x44],eax
  42169e:	mov    DWORD PTR [ebp-0x8],0x3adcb986
  4216a5:	mov    DWORD PTR [ebp-0x70],0x10c93f
  4216ac:	jmp    0x4216c3
  4216ae:	mov    BYTE PTR ds:0x443a58,0x0
  4216b5:	mov    BYTE PTR ds:0x42bb88,0x0
  4216bc:	mov    BYTE PTR ds:0x441b18,0x0
  4216c3:	mov    DWORD PTR [ebp-0x2c],0x410000
  4216ca:	push   DWORD PTR ds:0x428014
  4216d0:	pop    edx
  4216d1:	mov    DWORD PTR [ebp-0x74],edx
  4216d4:	push   DWORD PTR [ebp-0x30]
  4216d7:	push   0x1000
  4216dc:	mov    eax,DWORD PTR [ebp-0x14]
  4216df:	add    eax,0x23
  4216e2:	add    eax,0x23
  4216e5:	push   eax
  4216e6:	xor    eax,eax
  4216e8:	push   eax
  4216e9:	mov    ecx,DWORD PTR [ebp-0x44]
  4216ec:	call   ecx
  4216ee:	mov    edx,eax
  4216f0:	mov    DWORD PTR [ebp-0x4],edx
  4216f3:	mov    eax,DWORD PTR [ebp-0x70]
  4216f6:	sub    eax,0xdae0b
  4216fb:	mov    DWORD PTR [ebp-0x70],eax
  4216fe:	cmp    DWORD PTR [ebp-0x4],0x0
  421702:	jne    0x42170b
  421704:	mov    BYTE PTR ds:0x441b18,0x0
  42170b:	mov    ecx,DWORD PTR [ebp-0x4]
  42170e:	add    ecx,DWORD PTR [ebp-0x14]
  421711:	mov    edx,DWORD PTR [ebp-0x8]
  421714:	mov    DWORD PTR [ecx],edx
  421716:	mov    eax,DWORD PTR [ebp-0x4]
  421719:	add    eax,DWORD PTR [ebp-0x5c]
  42171c:	mov    DWORD PTR [ebp-0x64],eax
  42171f:	mov    ecx,DWORD PTR ds:0x428018
  421725:	mov    DWORD PTR [ebp-0x54],ecx
  421728:	mov    edx,DWORD PTR [ebp-0x4]
  42172b:	add    edx,DWORD PTR [ebp-0x14]
  42172e:	mov    eax,DWORD PTR [ebp+0x8]
  421731:	mov    DWORD PTR [edx+0x4],eax
  421734:	mov    ecx,DWORD PTR [ebp-0x4]
  421737:	add    ecx,DWORD PTR [ebp-0x14]
  42173a:	mov    DWORD PTR [ebp-0xc],ecx
  42173d:	cmp    DWORD PTR [ebp-0x70],0x0
  421741:	jbe    0x42175e
  421743:	mov    edx,DWORD PTR [ebp-0xc]
  421746:	push   edx
  421747:	mov    eax,DWORD PTR [ebp-0x14]
  42174a:	push   eax
  42174b:	mov    ecx,DWORD PTR [ebp-0x2c]
  42174e:	add    ecx,DWORD PTR [ebp-0x70]
  421751:	push   ecx
  421752:	mov    edx,DWORD PTR [ebp-0x4]
  421755:	push   edx
  421756:	call   0x4214d0
  42175b:	add    esp,0x10
  42175e:	cmp    DWORD PTR [ebp-0x64],0x0
  421762:	je     0x421776
  421764:	mov    ecx,DWORD PTR [ebp-0x54]
  421767:	push   ecx
  421768:	push   DWORD PTR [ebp-0x74]
  42176b:	mov    esi,DWORD PTR [ebp-0x64]
  42176e:	push   edx
  42176f:	pop    eax
  421770:	push   ecx
  421771:	nop
  421772:	jmp    esi
  421774:	jmp    0x42177c
  421776:	mov    eax,DWORD PTR [ebp+0x8]
  421779:	mov    DWORD PTR [ebp-0x18],eax
  42177c:	mov    eax,0x1
  421781:	pop    esi
  421782:	mov    esp,ebp
  421784:	pop    ebp
  421785:	ret    
  421786:	int3   
  421787:	int3   
  421788:	int3   
  421789:	int3   
  42178a:	int3   
  42178b:	int3   
  42178c:	int3   
  42178d:	int3   
  42178e:	int3   
  42178f:	int3   
  421790:	push   ebp
  421791:	mov    ebp,esp
  421793:	sub    esp,0x18
  421796:	lea    eax,[ebp-0x18]
  421799:	push   eax
  42179a:	call   DWORD PTR ds:0x42800c
  4217a0:	cmp    WORD PTR [ebp-0x18],0x0
  4217a5:	je     0x4217e8
  4217a7:	mov    ecx,DWORD PTR ds:0x428010
  4217ad:	push   0x0
  4217af:	push   0xb2
  4217b4:	push   0x82
  4217b9:	push   0x0
  4217bb:	mov    DWORD PTR [ebp-0x4],ecx
  4217be:	call   DWORD PTR ds:0x428008
  4217c4:	push   DWORD PTR [ebp-0x4]
  4217c7:	pop    edx
  4217c8:	call   edx
  4217ca:	push   eax
  4217cb:	pop    DWORD PTR [ebp-0x8]
  4217ce:	push   0x165e972a
  4217d3:	call   0x421550
  4217d8:	add    esp,0x4
  4217db:	call   0x411000
  4217e0:	xor    eax,eax
  4217e2:	mov    esp,ebp
  4217e4:	pop    ebp
  4217e5:	ret    0x10
  4217e8:	call   DWORD PTR [eax+0x28607298]
  4217ee:	sahf   
  4217ef:	xor    DWORD PTR ds:0x50118719,esp
  4217f5:	add    eax,0xd8e2c222
  4217fa:	sub    ebx,DWORD PTR [esi-0x78e2dacf]
  421800:	adc    DWORD PTR [eax],edx
  421802:	cli    
  421803:	ffree  st(2)
  421805:	loop   0x421867
  421807:	sub    ebx,DWORD PTR [esi-0x78e2dacf]
  42180d:	adc    DWORD PTR [eax-0x6],edx
  421810:	ffree  st(2)
  421812:	loop   0x421874
  421814:	sub    ebx,DWORD PTR [esi-0x78e2dacf]
  42181a:	adc    DWORD PTR [eax-0x6],edx
  42181d:	ffree  st(2)
  42181f:	loop   0x421881
  421821:	sub    ebx,DWORD PTR [esi-0x781adacf]
  421827:	adc    DWORD PTR [eax-0xc],edx
  42182a:	ret    0xec78
  42182d:	pusha  
  42182e:	lahf   
  42182f:	xchg   edi,eax
  421830:	cld    
  421831:	add    al,0xa5
  421833:	xchg   BYTE PTR [ebp-0x63],bl
  421836:	fisttp DWORD PTR [ecx+0xb138baa]
  42183c:	out    dx,al
  42183d:	inc    ebx
  42183e:	dec    edx
  42183f:	jp     0x421836
  421841:	jo     0x421880
  421843:	fidivr DWORD PTR [esi+0x440e8ca3]
  421849:	jmp    0x2563:0xa7784711
  421850:	xchg   esp,eax
  421851:	std    
  421852:	stos   DWORD PTR es:[edi],eax
  421853:	mov    WORD PTR [eax+0x6f],es
  421856:	shl    DWORD PTR [edx+0x5],1
  421859:	jo     0x421843
  42185b:	jne    0x421892
  42185d:	aam    0xd0
  42185f:	iret   
  421860:	call   0x31e043a9
  421865:	and    eax,0x5711871d
  42186a:	arpl   WORD PTR [ecx],sp
  42186c:	fwait
  42186d:	mov    eax,ds:0x7294b998
  421872:	fisttp QWORD PTR [edi+0x68a8528d]
  421878:	xlat   BYTE PTR ds:[ebx]
  421879:	call   0xb7c9:0xc1216c87
  421880:	pop    ss
  421881:	fbstp  TBYTE PTR [eax+ebp*2-0x10]
  421885:	pop    ds
  421886:	cmp    dh,BYTE PTR [eax+0x6a]
  421889:	jae    0x421886
  42188b:	or     BYTE PTR [edi],ch
  42188d:	jne    0x42190e
  42188f:	sbb    DWORD PTR [edx-0x2a],0x53
  421893:	sti    
  421894:	call   0x3b4eebbf
  421899:	outs   dx,DWORD PTR ds:[esi]
  42189a:	popf   
  42189b:	xchg   esi,eax
  42189c:	sbb    ebx,DWORD PTR [edx]
  42189e:	add    cl,BYTE PTR [edi-0x38]
  4218a1:	test   al,0xe0
  4218a3:	sub    dl,BYTE PTR [ecx+ebp*2+0x528d8fdd]
  4218aa:	test   al,0x69
  4218ac:	xlat   BYTE PTR ds:[ebx]
  4218ad:	jmp    0xa5e9:0x2121f21b
  4218b4:	pop    ss
  4218b5:	retf   0xc2e9
  4218b8:	lock test DWORD PTR [edi+0x66236adf],esp
  4218bf:	mov    ds:0x19e2452f,eax
  4218c4:	pop    edx
  4218c5:	mov    eax,0x38e85025
  4218ca:	dec    esi
  4218cb:	xchg   ecx,eax
  4218cc:	cmp    esp,DWORD PTR [edi-0x1b]
  4218cf:	adc    eax,0xbe93021b
  4218d4:	stos   BYTE PTR es:[edi],al
  4218d5:	mov    eax,ds:0x3194b998
  4218da:	and    eax,0x5011871d
  4218df:	cli    
  4218e0:	fst    QWORD PTR [edx-0x2dd49f59]
  4218e6:	xor    BYTE PTR [edi],ah
  4218e8:	sbb    eax,0xb53bc127
  4218ed:	ffree  st(2)
  4218ef:	loop   0x421951
  4218f1:	sub    ebx,DWORD PTR [esi-0x7802dacf]
  4218f7:	adc    dl,BYTE PTR [ecx-0xf]
  4218fa:	fmul   st(0),st
  4218fc:	loop   0x42195e
  4218fe:	lds    ebx,FWORD PTR [edx-0x7e5edacf]
  421904:	adc    DWORD PTR [eax-0x6],edx
  421907:	ffree  st(2)
  421909:	repz (bad) [ebx]
  42190c:	sahf   
  42190d:	xor    DWORD PTR ds:0x5011871d,esi
  421913:	(bad)  
  421914:	ffree  st(2)
  421916:	loop   0x421939
  421918:	sub    ebx,DWORD PTR [esi-0x78e2dadf]
  42191e:	adc    edx,DWORD PTR [eax-0x6]
  421921:	fadd   st,st(2)
  421923:	jecxz  0x421985
  421925:	sub    ebx,DWORD PTR [esi-0x78e7dacf]
  42192b:	adc    BYTE PTR [eax-0x6],dl
  42192e:	ffree  st(2)
  421930:	loop   0x421992
  421932:	jnp    0x4218c6
  421934:	xor    DWORD PTR ds:0x51118719,esp
  42193a:	push   ds
  42193b:	fadd   st,st(2)
  42193d:	loopne 0x42199f
  42193f:	sub    ebx,DWORD PTR [esi]
  421941:	xor    DWORD PTR ds:0x4011870d,esp
  421947:	cli    
  421948:	ffree  st(2)
  42194a:	loop   0x4219bc
  42194c:	sub    ebx,DWORD PTR [esi-0x78e2dadf]
  421952:	adc    DWORD PTR [eax-0x6],edx
  421955:	int    0xc2
  421957:	loop   0x4219b9
  421959:	sub    ebx,DWORD PTR [esi-0x78e2dacf]
  42195f:	adc    DWORD PTR [eax+0xe],edx
  421962:	in     al,0xce
  421964:	loop   0x42196f
  421966:	sub    BYTE PTR [esi-0x7312dacf],bl
  42196c:	adc    DWORD PTR [edi],ebx
  42196e:	mov    bl,0xdd
  421970:	ret    0x60e2
  421973:	sub    ebx,DWORD PTR [esi-0x78e2dacf]
  421979:	adc    DWORD PTR [eax-0x6],edx
  42197c:	ffree  st(2)
  42197e:	loop   0x4219e0
  421980:	sub    ebx,DWORD PTR [esi-0x78e2dacf]
  421986:	adc    DWORD PTR [eax-0x6],edx
  421989:	ffree  st(2)
  42198b:	loop   0x4219ed
  42198d:	sub    ebx,DWORD PTR [esi-0x78e2dacf]
  421993:	adc    DWORD PTR [eax-0x6],edx
  421996:	ffree  st(2)
  421998:	loop   0x4219fa
  42199a:	sub    ebx,DWORD PTR [esi-0x78e2dacf]
  4219a0:	adc    DWORD PTR [eax-0x6],edx
  4219a3:	ffree  st(2)
  4219a5:	loop   0x421a07
  4219a7:	sub    ebx,DWORD PTR [esi-0x78e2dacf]
  4219ad:	adc    DWORD PTR [eax-0x6],edx
  4219b0:	ffree  st(2)
  4219b2:	loop   0x421a14
  4219b4:	sub    ebx,DWORD PTR [esi-0x78e2dacf]
  4219ba:	adc    DWORD PTR [eax-0x6],edx
  4219bd:	ffree  st(2)
  4219bf:	loop   0x421a21
  4219c1:	sub    ebx,DWORD PTR [esi-0x78e2dacf]
  4219c7:	adc    DWORD PTR [eax-0x6],edx
  4219ca:	ffree  st(2)
  4219cc:	loop   0x421a2e
  4219ce:	sub    ebx,DWORD PTR [esi-0x78e2dacf]
  4219d4:	adc    DWORD PTR [eax-0x6],edx
  4219d7:	ffree  st(2)
  4219d9:	int3   
  4219da:	adc    al,0x4e
  4219dc:	out    0x45,al
  4219de:	and    eax,0xb011871d
  4219e3:	icebp  
  4219e4:	ffree  st(2)
  4219e6:	repnz pusha 
  4219e8:	sub    ebx,DWORD PTR [esi-0x78e2de1b]
  4219ee:	adc    eax,0x878dfa50
  4219f3:	mov    eax,ds:0x31d17f52
  4219f8:	and    eax,0x5011871d
  4219fd:	fcmovu st,st(5)
  4219ff:	ret    0x4e02
  421a02:	pop    ecx
  421a03:	in     eax,dx
  421a04:	inc    ebx
  421a05:	inc    esi
  421a06:	sbb    eax,0x9a501187
  421a0b:	ffree  st(2)
  421a0d:	loop   0x42199f
  421a0f:	and    BYTE PTR [esi-0x78e280cf],bl
  421a15:	adc    DWORD PTR [eax-0x1d3d2202],ecx
  421a1b:	pusha  
  421a1c:	sub    ebx,DWORD PTR [esi-0x78e2dacf]
  421a22:	adc    DWORD PTR [eax-0x6],edx
  421a25:	std    
  421a26:	ret    0x80e2
  421a29:	sub    ebx,DWORD PTR [esi-0x78e2dacf]
  421a2f:	adc    DWORD PTR [eax-0x6],edx
  421a32:	ffree  st(2)
  421a34:	loop   0x421a96
  421a36:	sub    ebx,DWORD PTR [esi-0x78e2dacf]
  421a3c:	adc    DWORD PTR [eax-0x6],edx
  421a3f:	ffree  st(2)
  421a41:	loop   0x421aa3
  421a43:	sub    ebx,DWORD PTR [esi-0x78e2dacf]
  421a49:	adc    DWORD PTR [eax-0x6],edx
  421a4c:	ffree  st(2)
  421a4e:	loop   0x421ab0
  421a50:	sub    ebx,DWORD PTR [esi-0x78e2dacf]
  421a56:	adc    DWORD PTR [eax-0x6],edx
  421a59:	ffree  st(2)
  421a5b:	loop   0x421abd
  421a5d:	sub    ebx,DWORD PTR [esi-0x78e2dacf]
  421a63:	adc    DWORD PTR [eax-0x6],edx
  421a66:	ffree  st(2)
  421a68:	loop   0x421aca
  421a6a:	sub    ebx,DWORD PTR [esi-0x78e2dacf]
  421a70:	adc    DWORD PTR [eax-0x6],edx
  421a73:	ffree  st(2)
  421a75:	loop   0x421ad7
  421a77:	sub    ebx,DWORD PTR [esi-0x78e2dacf]
  421a7d:	adc    DWORD PTR [eax-0x6],edx
  421a80:	ffree  st(2)
  421a82:	loop   0x421ae4
  421a84:	sub    ebx,DWORD PTR [esi-0x78e2dacf]
  421a8a:	adc    DWORD PTR [eax-0x6],edx
  421a8d:	ffree  st(2)
  421a8f:	loop   0x421af1
  421a91:	sub    ebx,DWORD PTR [esi-0x78e2dacf]
  421a97:	adc    DWORD PTR [eax-0x6],edx
  421a9a:	ffree  st(2)
  421a9c:	loop   0x421afe
  421a9e:	sub    ebx,DWORD PTR [esi-0x78e2dacf]
  421aa4:	adc    DWORD PTR [eax-0x6],edx
  421aa7:	ffree  st(2)
  421aa9:	loop   0x421b0b
  421aab:	sub    ebx,DWORD PTR [esi-0x78e2dacf]
  421ab1:	adc    DWORD PTR [eax-0x6],edx
  421ab4:	ffree  st(2)
  421ab6:	loop   0x421b18
  421ab8:	sub    ebx,DWORD PTR [esi-0x78e2dacf]
  421abe:	adc    DWORD PTR [eax-0x6],edx
  421ac1:	ffree  st(2)
  421ac3:	loop   0x421b25
  421ac5:	sub    ebx,DWORD PTR [esi-0x78e2dacf]
  421acb:	adc    DWORD PTR [eax-0x6],edx
  421ace:	ffree  st(2)
  421ad0:	loop   0x421b32
  421ad2:	sub    ebx,DWORD PTR [esi-0x78e2dacf]
  421ad8:	adc    DWORD PTR [eax-0x6],edx
  421adb:	ffree  st(2)
  421add:	loop   0x421b3f
  421adf:	sub    ebx,DWORD PTR [esi-0x78e2dacf]
  421ae5:	adc    DWORD PTR [eax-0x6],edx
  421ae8:	ffree  st(2)
  421aea:	loop   0x421b4c
  421aec:	sub    ebx,DWORD PTR [esi-0x78e2dacf]
  421af2:	adc    DWORD PTR [eax-0x6],edx
  421af5:	ffree  st(2)
  421af7:	loop   0x421b59
  421af9:	sub    ebx,DWORD PTR [esi-0x78e2dacf]
  421aff:	adc    DWORD PTR [eax-0x6],edx
  421b02:	ffree  st(2)
  421b04:	loop   0x421b66
  421b06:	sub    ebx,DWORD PTR [esi-0x78e2dacf]
  421b0c:	adc    DWORD PTR [eax-0x6],edx
  421b0f:	ffree  st(2)
  421b11:	loop   0x421b73
  421b13:	sub    ebx,DWORD PTR [esi-0x78e2dacf]
  421b19:	adc    DWORD PTR [eax-0x6],edx
  421b1c:	ffree  st(2)
  421b1e:	loop   0x421b80
  421b20:	sub    ebx,DWORD PTR [esi-0x78e2dacf]
  421b26:	adc    DWORD PTR [eax-0x6],edx
  421b29:	ffree  st(2)
  421b2b:	loop   0x421b8d
  421b2d:	sub    ebx,DWORD PTR [esi-0x78e2dacf]
  421b33:	adc    DWORD PTR [eax-0x6],edx
  421b36:	ffree  st(2)
  421b38:	loop   0x421b9a
  421b3a:	sub    ebx,DWORD PTR [esi-0x78e2dacf]
  421b40:	adc    DWORD PTR [eax-0x6],edx
  421b43:	ffree  st(2)
  421b45:	loop   0x421ba7
  421b47:	sub    ebx,DWORD PTR [esi-0x78e2dacf]
  421b4d:	adc    DWORD PTR [eax-0x6],edx
  421b50:	ffree  st(2)
  421b52:	loop   0x421bb4
  421b54:	sub    ebx,DWORD PTR [esi-0x78e2dacf]
  421b5a:	adc    DWORD PTR [eax-0x6],edx
  421b5d:	ffree  st(2)
  421b5f:	loop   0x421bc1
  421b61:	sub    ebx,DWORD PTR [esi-0x78e2dacf]
  421b67:	adc    DWORD PTR [eax-0x6],edx
  421b6a:	ffree  st(2)
  421b6c:	loop   0x421bce
  421b6e:	sub    ebx,DWORD PTR [esi-0x78e2dacf]
  421b74:	adc    DWORD PTR [eax-0x6],edx
  421b77:	ffree  st(2)
  421b79:	loop   0x421bdb
  421b7b:	sub    ebx,DWORD PTR [esi-0x78e2dacf]
  421b81:	adc    DWORD PTR [eax-0x6],edx
  421b84:	ffree  st(2)
  421b86:	loop   0x421be8
  421b88:	sub    ebx,DWORD PTR [esi-0x78e2dacf]
  421b8e:	adc    DWORD PTR [eax-0x6],edx
  421b91:	ffree  st(2)
  421b93:	loop   0x421bf5
  421b95:	sub    ebx,DWORD PTR [esi-0x78e2dacf]
  421b9b:	adc    DWORD PTR [eax-0x6],edx
  421b9e:	ffree  st(2)
  421ba0:	loop   0x421c02
  421ba2:	sub    ebx,DWORD PTR [esi-0x78e2dacf]
  421ba8:	adc    DWORD PTR [eax-0x6],edx
  421bab:	ffree  st(2)
  421bad:	loop   0x421c0f
  421baf:	sub    ebx,DWORD PTR [esi-0x78e2dacf]
  421bb5:	adc    DWORD PTR [eax-0x6],edx
  421bb8:	ffree  st(2)
  421bba:	loop   0x421c1c
  421bbc:	sub    ebx,DWORD PTR [esi-0x78e2dacf]
  421bc2:	adc    DWORD PTR [eax-0x6],edx
  421bc5:	ffree  st(2)
  421bc7:	loop   0x421c29
  421bc9:	sub    ebx,DWORD PTR [esi-0x78e2dacf]
  421bcf:	adc    DWORD PTR [eax-0x6],edx
  421bd2:	ffree  st(2)
  421bd4:	loop   0x421c36
  421bd6:	sub    ebx,DWORD PTR [esi-0x78e2dacf]
  421bdc:	adc    DWORD PTR [eax-0x6],edx
  421bdf:	ffree  st(2)
  421be1:	loop   0x421c43
  421be3:	sub    ebx,DWORD PTR [esi-0x78e2dacf]
  421be9:	jle    0x421be3
  421beb:	icebp  
  421bec:	fucomp st(5)
  421bee:	loop   0x421c50
  421bf0:	cmp    ebx,DWORD PTR [esi+0x5dbf0f31]
  421bf6:	pusha  
  421bf7:	ss add eax,0x30655cf0
  421bfd:	(bad)  
  421bfe:	test   al,0xd9
  421c00:	ss test eax,0x7e217712
  421c06:	xchg   ecx,edx
  421c08:	push   ebx
  421c09:	xlat   BYTE PTR ds:[ebx]
  421c0a:	cmp    eax,0x9cafd5f3
  421c0f:	inc    ecx
  421c10:	aas    
  421c11:	xor    ch,BYTE PTR [edx-0x1e]
  421c14:	sti    
  421c15:	shr    DWORD PTR [edi],1
  421c17:	call   0x9920:0x3a251389
  421c1e:	add    eax,0xd06bb0ab
  421c23:	pop    ebp
  421c24:	test   BYTE PTR [edx+0x59124580],0x35
  421c2b:	jmp    0x421be3
  421c2d:	push   cs
  421c2e:	pop    es
  421c2f:	int    0x98
  421c31:	mov    ch,0x94
  421c33:	fiadd  WORD PTR [ecx+0x3d]
  421c36:	and    al,0x1e
  421c38:	mov    eax,ds:0x9a87f050
  421c3d:	es jp  0x421c1d
  421c40:	call   DWORD PTR [ebx+ebx*2+0x7bcd6cae]
  421c47:	xchg   DWORD PTR [eax],esp
  421c49:	in     eax,0xd4
  421c4b:	test   eax,0x3cc15aad
  421c50:	ja     0x421cc2
  421c52:	fistp  DWORD PTR [edx-0x78312985]
  421c58:	xor    BYTE PTR [esi+0x2722c27a],0xa
  421c5f:	cmovs  esp,DWORD PTR [edi-0x7c]
  421c63:	pop    esi
  421c64:	sbb    eax,DWORD PTR [edx]
  421c66:	fcomp  QWORD PTR [edi]
  421c68:	fisubr DWORD PTR [esi+esi*4]
  421c6b:	fucom  st(7)
  421c6d:	cmc    
  421c6e:	mov    bl,0x60
  421c70:	mov    esp,0x749406dd
  421c75:	loope  0x421bff
  421c77:	into   
  421c78:	sahf   
  421c79:	arpl   WORD PTR [esi+0x4865b6ce],bx
  421c7f:	imul   eax,edx,0x753098b7
  421c85:	sbb    ebx,esp
  421c87:	stos   DWORD PTR es:[edi],eax
  421c88:	lds    esi,FWORD PTR [ecx-0x1c]
  421c8b:	iret   
  421c8c:	popa   
  421c8d:	outs   dx,BYTE PTR ds:[esi]
  421c8e:	sub    ebp,DWORD PTR [ebp+ebx*2+0x4c7c09c8]
  421c95:	aaa    
  421c96:	jp     0x421c30
  421c98:	dec    esp
  421c99:	mov    ebp,0x2d4fbe6f
  421c9e:	xchg   edx,eax
  421c9f:	cmp    edx,DWORD PTR [edi-0x71]
  421ca2:	mov    dh,0x30
  421ca4:	push   edx
  421ca5:	pop    esi
  421ca6:	mov    ecx,0x14d9fa5d
  421cab:	cdq    
  421cac:	xchg   ebx,eax
  421cad:	xchg   edx,eax
  421cae:	daa    
  421caf:	imul   esp,ecx,0x4ff4cf0d
  421cb5:	mov    esi,0xcd494b0d
  421cba:	(bad)  
  421cbb:	in     eax,dx
  421cbc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421cbd:	call   DWORD PTR [esi+ebp*2]
  421cc0:	ins    BYTE PTR es:[edi],dx
  421cc1:	push   0xffffff91
  421cc3:	ss xchg esi,eax
  421cc5:	sub    ch,BYTE PTR [edi+eax*8+0xa9fde72]
  421ccc:	xchg   edi,eax
  421ccd:	push   ebx
  421cce:	mov    WORD PTR [ebp+0x37],?
  421cd1:	sti    
  421cd2:	jns    0x421cd2
  421cd4:	add    BYTE PTR [edx],cl
  421cd6:	push   ebp
  421cd7:	mov    bl,0x9
  421cd9:	jno    0x421cba
  421cdb:	inc    edx
  421cdc:	rol    BYTE PTR ds:0x74085b7f,1
  421ce2:	xchg   DWORD PTR [edi-0xc1c21d5],edx
  421ce8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421ce9:	add    dh,BYTE PTR [esi-0x65]
  421cec:	jmp    0x421cb4
  421cee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421cef:	pop    esi
  421cf0:	imul   eax,DWORD PTR [eax+ecx*2+0x7e],0x64af5760
  421cf8:	frstor [ecx+0x7e4bf7df]
  421cfe:	mov    esp,0x62bb3a46
  421d03:	cmp    DWORD PTR ds:[esi-0x7936d27c],ebp
  421d0a:	nop
  421d0b:	idiv   DWORD PTR [ebx+0x60]
  421d0e:	call   FWORD PTR [edi+0x76ca7e58]
  421d14:	xchg   BYTE PTR [edi+0x7f],bl
  421d17:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421d18:	push   es
  421d19:	and    edx,DWORD PTR [ecx-0x30]
  421d1c:	adc    al,0xf7
  421d1e:	mov    al,ds:0x7ef6f65c
  421d23:	and    BYTE PTR [edx-0x7566accd],bl
  421d29:	(bad)  
  421d2a:	jmp    DWORD PTR [eax]
  421d2c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421d2d:	jae    0x421d93
  421d2f:	push   ds
  421d30:	ss jmp 0x55f2d24d
  421d36:	push   0x7d
  421d38:	(bad)  
  421d39:	sub    al,0xb
  421d3b:	js     0x421cdf
  421d3d:	ret    0xbff2
  421d40:	inc    ebp
  421d41:	sti    
  421d42:	and    eax,0x768d01b0
  421d47:	pop    edx
  421d48:	push   cs
  421d49:	inc    esp
  421d4a:	ds xchg ecx,eax
  421d4c:	out    0x7,al
  421d4e:	mov    ebx,0xb76e9143
  421d53:	pop    edx
  421d54:	sahf   
  421d55:	jmp    0x194195f
  421d5a:	retf   
  421d5b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421d5c:	inc    esi
  421d5d:	jmp    0x1be463e2
  421d62:	mov    ebx,0x89903ed6
  421d67:	fcom   QWORD PTR [esi]
  421d69:	mov    bl,BYTE PTR [edx+0x4f]
  421d6c:	jo     0x421da7
  421d6e:	rol    BYTE PTR [ebp+0x7d],1
  421d71:	hlt    
  421d72:	push   esp
  421d73:	bound  edi,QWORD PTR [edi+0x3c]
  421d76:	or     DWORD PTR [edi+0x38],0xaef43323
  421d7d:	scas   al,BYTE PTR es:[edi]
  421d7e:	mov    dl,BYTE PTR [ebp+0x65f154bd]
  421d84:	retf   0x2d86
  421d87:	ins    DWORD PTR es:[edi],dx
  421d88:	cmc    
  421d89:	(bad)  
  421d8a:	push   ss
  421d8b:	(bad)  
  421d8c:	(bad)  
  421d8d:	mov    ebx,0x87484249
  421d92:	sbb    ebx,DWORD PTR [eax]
  421d94:	repnz popa 
  421d96:	outs   dx,DWORD PTR ds:[esi]
  421d97:	jmp    0xa80b7d2f
  421d9c:	push   es
  421d9d:	pop    edx
  421d9e:	sbb    BYTE PTR [ebx+0x6b2674da],ah
  421da4:	mov    esp,0x9f89ff2c
  421da9:	repnz dec edx
  421dab:	xor    DWORD PTR [ebx+ebp*1-0x1f],0x70ceb98a
  421db3:	fild   WORD PTR [edi-0x34d4e78e]
  421db9:	pop    eax
  421dba:	mov    ds:0xce3051d9,al
  421dbf:	and    DWORD PTR [eax-0x3b],edx
  421dc2:	je     0x421d7e
  421dc4:	pushf  
  421dc5:	mov    BYTE PTR [ecx-0x42],ah
  421dc8:	mov    ds:0x94548c51,al
  421dcd:	mov    ch,0x78
  421dcf:	mov    BYTE PTR [eax+0x7fe9e271],cl
  421dd5:	pop    eax
  421dd6:	jb     0x421d68
  421dd8:	iret   
  421dd9:	test   eax,0xcb533bee
  421dde:	addr16 adc ah,ah
  421de1:	jmp    0xd018:0x7868456e
  421de8:	das    
  421de9:	jg     0x421dd7
  421deb:	in     eax,0x4f
  421ded:	dec    edx
  421dee:	push   edi
  421def:	xchg   ebp,eax
  421df0:	call   FWORD PTR [ecx+0xbe4019c]
  421df6:	bound  eax,QWORD PTR [ebp+0x69c5f428]
  421dfc:	rcr    BYTE PTR [eax-0x3b3c69de],1
  421e02:	push   0x54ada3fe
  421e07:	mov    esi,0x3ab1699
  421e0c:	inc    ecx
  421e0d:	push   ebp
  421e0e:	xchg   ebx,eax
  421e0f:	xchg   DWORD PTR [edx+0x4e],edi
  421e12:	jg     0x421e57
  421e14:	jl     0x421e27
  421e16:	outs   dx,BYTE PTR ds:[esi]
  421e17:	cdq    
  421e18:	lock adc esi,esi
  421e1b:	xchg   BYTE PTR [edx],ah
  421e1d:	(bad)  
  421e1e:	(bad)  
  421e1f:	or     DWORD PTR [ecx-0x396dc4f7],edi
  421e25:	scas   eax,DWORD PTR es:[edi]
  421e26:	xor    ecx,DWORD PTR [esi-0x4929b440]
  421e2c:	mov    esp,0xf366e41
  421e31:	rol    edi,0x4d
  421e34:	sub    ebx,DWORD PTR [ecx]
  421e36:	xchg   ebx,eax
  421e37:	or     eax,ecx
  421e39:	outs   dx,BYTE PTR ds:[esi]
  421e3a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421e3b:	aaa    
  421e3c:	sub    ah,BYTE PTR [esi+0x2c]
  421e3f:	push   ecx
  421e40:	jbe    0x421dd0
  421e42:	add    al,0x9a
  421e44:	inc    ecx
  421e45:	jnp    0x421eb0
  421e47:	lahf   
  421e48:	addr16 stc 
  421e4a:	adc    eax,ebx
  421e4c:	and    BYTE PTR [eax+0x50],0xb8
  421e50:	(bad)  
  421e52:	and    edx,ebx
  421e54:	pusha  
  421e55:	cmp    dl,BYTE PTR [ebx]
  421e57:	push   es
  421e58:	in     al,0x2e
  421e5a:	mov    bh,0x3
  421e5c:	jle    0x421e94
  421e5e:	popf   
  421e5f:	jne    0x421eb3
  421e61:	pusha  
  421e62:	popa   
  421e63:	and    al,BYTE PTR [ebp+0x21ff5948]
  421e69:	aaa    
  421e6a:	scas   al,BYTE PTR es:[edi]
  421e6b:	sahf   
  421e6c:	pushf  
  421e6d:	xchg   edi,eax
  421e6e:	fisub  WORD PTR [eax-0x5473d80f]
  421e74:	inc    esp
  421e75:	pop    eax
  421e76:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421e77:	push   cs
  421e78:	test   ah,dl
  421e7a:	pop    edi
  421e7b:	je     0x421e1e
  421e7d:	pop    edx
  421e7e:	push   esi
  421e7f:	push   edi
  421e80:	pop    ebx
  421e81:	sub    BYTE PTR [edx+0x59],al
  421e84:	xor    DWORD PTR [esi],ecx
  421e86:	or     dh,BYTE PTR [ecx+ebx*1]
  421e89:	jge    0x421e2e
  421e8b:	push   edx
  421e8c:	cwde   
  421e8d:	test   BYTE PTR [ecx],0x57
  421e90:	aad    0x54
  421e92:	loop   0x421e71
  421e94:	mov    dl,0x34
  421e96:	inc    esi
  421e97:	scas   eax,DWORD PTR es:[edi]
  421e98:	pop    es
  421e99:	movlps QWORD PTR [ecx-0x45],xmm3
  421e9d:	xor    eax,0x68942ae8
  421ea2:	xlat   BYTE PTR ds:[ebx]
  421ea3:	mov    dh,BYTE PTR [esi+0x49]
  421ea6:	sub    esp,DWORD PTR [ecx]
  421ea8:	sti    
  421ea9:	loope  0x421e58
  421eab:	daa    
  421eac:	cmc    
  421ead:	sbb    DWORD PTR [esi+0x50],ecx
  421eb0:	mov    esp,0xdfca0b48
  421eb5:	xlat   BYTE PTR ds:[ebx]
  421eb6:	adc    DWORD PTR [esi],ecx
  421eb8:	call   0x9d20:0x9c4f37f1
  421ebf:	pushw  es
  421ec1:	call   0xa578:0xe2ca00f4
  421ec8:	add    eax,DWORD PTR [esi-0x4b]
  421ecb:	pop    edi
  421ecc:	jmp    0x924e:0xf9ff7190
  421ed3:	xchg   DWORD PTR [ebx+0x2c],esi
  421ed6:	jbe    0x421ea6
  421ed8:	rol    edi,0x80
  421edb:	outs   dx,DWORD PTR ds:[esi]
  421edc:	repnz pushf 
  421ede:	iret   
  421edf:	mov    bh,0x96
  421ee1:	fbstp  TBYTE PTR [ebp+0x7a]
  421ee4:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  421ee6:	test   DWORD PTR [ebp-0x36],ebp
  421ee9:	pop    bx
  421eeb:	xor    eax,0xab08fc2a
  421ef0:	sub    DWORD PTR [esi],0x52
  421ef3:	jle    0x421f64
  421ef5:	sbb    DWORD PTR [edi+0x6a],esi
  421ef8:	sub    ebx,DWORD PTR [ebx+edx*2]
  421efb:	call   0x7b43c57
  421f00:	xor    al,0x5c
  421f02:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421f03:	pop    esi
  421f04:	int3   
  421f05:	(bad)  
  421f06:	dec    eax
  421f07:	hlt    
  421f08:	jne    0x421f43
  421f0a:	pop    eax
  421f0b:	mov    ah,0xd
  421f0d:	fimul  WORD PTR [ecx-0x77]
  421f10:	mov    edi,0xec4f09e
  421f15:	add    eax,0xf8b9e1db
  421f1a:	dec    esi
  421f1b:	sub    al,0x76
  421f1d:	push   0x3eefb330
  421f22:	inc    esi
  421f23:	and    eax,0x8062ed57
  421f28:	add    BYTE PTR [ebx-0x74],dl
  421f2b:	daa    
  421f2c:	xchg   ecx,eax
  421f2d:	test   BYTE PTR [ebp-0xfa34480],dh
  421f33:	shl    BYTE PTR [eax-0x1ceb5677],cl
  421f39:	das    
  421f3a:	sbb    eax,0xb3e4db7e
  421f3f:	xchg   esi,eax
  421f40:	push   edi
  421f41:	pop    ebp
  421f42:	sbb    edi,DWORD PTR [ecx]
  421f44:	xchg   esi,edx
  421f46:	push   ebx
  421f47:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421f48:	push   ds
  421f49:	int    0xd4
  421f4b:	xchg   bh,dh
  421f4d:	int    0xbc
  421f4f:	(bad)  
  421f50:	push   ds
  421f51:	out    0x8,al
  421f53:	sar    DWORD PTR [eax+0x179dbbea],cl
  421f59:	mov    esp,cs
  421f5b:	stos   DWORD PTR es:[edi],eax
  421f5c:	and    BYTE PTR [ecx-0x427a4ffc],0x8
  421f63:	pop    ss
  421f64:	and    BYTE PTR [ecx+0x562b1b80],dh
  421f6a:	ficomp DWORD PTR [ebp-0x5a]
  421f6d:	lea    eax,[eax+0xf]
  421f70:	mov    edi,0x86d5d390
  421f75:	jno    0x421fd7
  421f77:	call   0xe032:0x33cb77c7
  421f7e:	cmp    ah,dl
  421f80:	imul   edi,eax,0x1b
  421f83:	aad    0x70
  421f85:	or     eax,0x74638219
  421f8a:	mov    es,edx
  421f8c:	jecxz  0x421f18
  421f8e:	push   0x3d9b146b
  421f93:	pop    edx
  421f94:	out    0xac,al
  421f96:	or     DWORD PTR [esi-0x10],esi
  421f99:	std    
  421f9a:	fnsave [esi-0x7e369d95]
  421fa0:	sub    esp,ecx
  421fa2:	mov    cl,0x14
  421fa4:	cwde   
  421fa5:	cmp    BYTE PTR [ebp-0x45],cl
  421fa8:	lock inc ebp
  421faa:	or     eax,0xba405849
  421faf:	cmp    dh,BYTE PTR [esi-0x3fdb6f66]
  421fb5:	add    DWORD PTR [ebx+0xe],eax
  421fb8:	gs (bad) 
  421fba:	int3   
  421fbb:	fstp   st(7)
  421fbd:	sbb    dl,BYTE PTR [edx]
  421fbf:	fmul   QWORD PTR [ebx-0x39290c15]
  421fc5:	aas    
  421fc6:	lock adc al,0x7a
  421fc9:	fcom   QWORD PTR [esi]
  421fcb:	sub    edx,DWORD PTR ds:0xcc4c0bb9
  421fd1:	jmp    0x4d50:0x6423e302
  421fd8:	call   0x5d0d9197
  421fdd:	retf   
  421fde:	icebp  
  421fdf:	sbb    esp,DWORD PTR [ecx]
  421fe1:	sbb    DWORD PTR [ebx],eax
  421fe3:	jmp    0x422062
  421fe5:	js     0x421f9b
  421fe7:	pop    ecx
  421fe8:	jbe    0x422029
  421fea:	or     bl,BYTE PTR [esi-0x5ccbf0ca]
  421ff0:	repnz fdivr DWORD PTR [ecx]
  421ff3:	adc    BYTE PTR es:[ecx+0x72],ch
  421ff7:	add    al,0x46
  421ff9:	jnp    0x42201d
  421ffb:	sub    al,0x32
  421ffd:	aas    
  421ffe:	push   ecx
  421fff:	sti    
  422000:	xor    dh,BYTE PTR [edx+ecx*8+0x62]
  422004:	dec    edx
  422005:	mov    eax,ds:0xdb0ef675
  42200a:	pop    eax
  42200b:	cmp    al,0xa1
  42200d:	aam    0xcb
  42200f:	jmp    0x422041
  422011:	cmp    bl,ah
  422013:	mov    bh,BYTE PTR [esi]
  422015:	ja     0x421fdf
  422017:	sub    esi,DWORD PTR [edx]
  422019:	mov    eax,0x4cc4a83e
  42201e:	lock in al,0xbb
  422021:	or     esi,DWORD PTR [edi+0x70]
  422024:	imul   ebx,ecx,0xffffffff
  422027:	sbb    ecx,DWORD PTR ds:0x11146bb3
  42202d:	(bad)  
  42202e:	fs inc edx
  422030:	fcmovu st,st(0)
  422032:	mov    ecx,0xd3363464
  422037:	jg     0x421fe6
  422039:	sar    BYTE PTR [ebx+0x44],1
  42203c:	adc    ah,0xd4
  42203f:	ins    BYTE PTR es:[edi],dx
  422040:	mov    edi,fs
  422042:	scas   al,BYTE PTR es:[edi]
  422043:	mov    esi,0xbd3ca1f
  422048:	or     dl,ch
  42204a:	icebp  
  42204b:	xor    DWORD PTR [ebx-0x5a],esp
  42204e:	shl    BYTE PTR [edi],cl
  422050:	pop    ds
  422051:	mov    cs,WORD PTR [esi-0x6ea579a5]
  422057:	or     ch,BYTE PTR [eax-0x7a7bf7e4]
  42205d:	xor    dh,BYTE PTR [ecx-0x71]
  422060:	xchg   esp,eax
  422061:	dec    ebp
  422062:	cmp    al,0xd4
  422064:	gs pop gs
  422067:	xor    edi,DWORD PTR [edi]
  422069:	sbb    esp,eax
  42206b:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42206d:	imul   edi,DWORD PTR [edi-0x4d1b8e7f],0x413689d9
  422077:	inc    ecx
  422078:	mov    ds,esi
  42207a:	mov    dl,0xcb
  42207c:	test   DWORD PTR [ebx-0x5d822f65],0xa83dfd4e
  422086:	mov    ebp,0xe784f523
  42208b:	es mov dl,0x42
  42208e:	push   ds
  42208f:	jle    0x422098
  422091:	adc    DWORD PTR [esi+0x2feb6b12],esi
  422097:	sbb    al,0x13
  422099:	and    eax,0x959a4c97
  42209e:	fst    QWORD PTR [ebx-0xf]
  4220a1:	stos   DWORD PTR es:[edi],eax
  4220a2:	add    eax,0x5de25e1f
  4220a7:	adc    al,0x1
  4220a9:	push   edi
  4220aa:	xchg   edi,eax
  4220ab:	ficomp WORD PTR [ebp+0x36954922]
  4220b1:	out    0xe4,eax
  4220b3:	push   ss
  4220b4:	loope  0x42212e
  4220b6:	test   BYTE PTR [esi],0xf
  4220b9:	int3   
  4220ba:	push   cs
  4220bb:	es and eax,0xd4ef8cdd
  4220c1:	inc    ecx
  4220c2:	imul   edi,DWORD PTR [ebx-0xd],0x2bbb0724
  4220c9:	mov    esp,0x5225c44a
  4220ce:	popa   
  4220cf:	call   0x9c18:0x905262ff
  4220d6:	popf   
  4220d7:	pop    eax
  4220d8:	dec    eax
  4220d9:	jmp    0x6d57b3a9
  4220de:	enter  0xdcc6,0x1d
  4220e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4220e3:	fwait
  4220e4:	rcl    DWORD PTR [ebx-0x33ff10f4],0x66
  4220eb:	das    
  4220ec:	aaa    
  4220ed:	pop    es
  4220ee:	stc    
  4220ef:	or     dl,ah
  4220f1:	sbb    eax,0xabdfedfc
  4220f6:	xor    ebp,DWORD PTR [edi-0x7b2cdb06]
  4220fc:	xchg   edx,eax
  4220fd:	mov    ah,0x64
  4220ff:	jp     0x422083
  422101:	int    0x41
  422103:	fcomp  st(5)
  422105:	xchg   ebx,eax
  422106:	fstp   TBYTE PTR [edx-0x26]
  422109:	xchg   ebx,eax
  42210a:	fadd   DWORD PTR [esi]
  42210c:	and    dh,ah
  42210e:	outs   dx,DWORD PTR ds:[esi]
  42210f:	jae    0x42213e
  422111:	push   0xdc281c9d
  422116:	xor    BYTE PTR [eax-0x31b3e257],bh
  42211c:	scas   eax,DWORD PTR es:[edi]
  42211d:	adc    ah,BYTE PTR [esi-0x6a]
  422120:	cmp    BYTE PTR [edi-0x1f60cd34],ah
  422126:	sti    
  422127:	fimul  WORD PTR [eax+0x2b547f9f]
  42212d:	ds js  0x42211a
  422130:	jp     0x422121
  422132:	out    dx,eax
  422133:	ss cmc 
  422135:	pop    es
  422136:	or     BYTE PTR [edx],0xbd
  422139:	dec    ebp
  42213a:	fs popf 
  42213c:	mov    edx,eax
  42213e:	mov    esi,0xaf6d89e0
  422143:	rcl    DWORD PTR [esi-0x75046a],cl
  422149:	js     0x4221bd
  42214b:	mov    eax,es:0x153fbc11
  422151:	adc    BYTE PTR [esi],ah
  422153:	sub    eax,0xbe889e49
  422158:	push   0x42
  42215a:	mov    ecx,0x423ff1bb
  42215f:	xor    BYTE PTR [ecx+0x57f94d5a],dl
  422165:	jne    0x422133
  422167:	xchg   edi,eax
  422168:	fwait
  422169:	(bad)  
  42216a:	jmp    0xeb1:0xb247cd4d
  422171:	daa    
  422172:	rcr    DWORD PTR [ecx],0xef
  422175:	cmp    DWORD PTR gs:[edx+0x347dc66c],eax
  42217c:	mov    BYTE PTR [ecx-0x55],ah
  42217f:	aas    
  422180:	out    0x24,eax
  422182:	push   ecx
  422183:	aam    0x21
  422185:	mov    dh,0xad
  422187:	adc    eax,0x73e1798c
  42218c:	add    ebp,DWORD PTR [edx+0x1a]
  42218f:	mov    edx,0x377104a3
  422194:	in     al,0x81
  422196:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422197:	sahf   
  422198:	fisttp DWORD PTR [edi-0x3df04ed3]
  42219e:	cmp    eax,0x48d1191e
  4221a3:	aad    0xb5
  4221a5:	sub    ecx,DWORD PTR [esi-0x2ad97cbc]
  4221ab:	add    ah,BYTE PTR [ebp-0x22bda128]
  4221b1:	sub    al,0xc4
  4221b3:	pop    eax
  4221b4:	push   esi
  4221b5:	clc    
  4221b6:	mov    ds:0x4dbec3c9,al
  4221bb:	cmp    bh,dl
  4221bd:	jns    0x422142
  4221bf:	aaa    
  4221c0:	push   es
  4221c1:	bound  ebx,QWORD PTR [edx+edx*1-0x41084013]
  4221c8:	pop    ebp
  4221c9:	xchg   ebp,eax
  4221ca:	(bad)  
  4221cc:	xchg   esp,eax
  4221cd:	sti    
  4221ce:	(bad)
  4221d1:	or     BYTE PTR [ecx-0x30],bh
  4221d4:	inc    edi
  4221d5:	xlat   BYTE PTR ds:[ebx]
  4221d6:	fs push eax
  4221d8:	jno    0x4221eb
  4221da:	adc    eax,DWORD PTR [ebx-0x6491d27d]
  4221e0:	pop    edi
  4221e1:	cwde   
  4221e2:	and    DWORD PTR [eax-0x4b452caf],ecx
  4221e8:	mov    ds:0x163aef6b,eax
  4221ed:	pop    ebp
  4221ee:	in     eax,0x16
  4221f0:	daa    
  4221f1:	jae    0x4221e3
  4221f3:	fnstcw WORD PTR [esp+esi*1-0x61f653c2]
  4221fa:	sub    DWORD PTR [bp+si],esi
  4221fd:	push   ds
  4221fe:	mov    esi,?
  422200:	or     BYTE PTR [ebx],dh
  422202:	pop    esp
  422203:	pop    esp
  422204:	lahf   
  422205:	xchg   ebx,eax
  422206:	in     eax,0xed
  422208:	fwait
  422209:	mov    dh,0xca
  42220b:	mov    eax,ds:0xaa1619a6
  422210:	daa    
  422211:	jge    0x42220f
  422213:	arpl   WORD PTR [ebp-0x32b3eec2],di
  422219:	in     eax,dx
  42221a:	stos   DWORD PTR es:[edi],eax
  42221b:	in     al,dx
  42221c:	jl     0x4221c5
  42221e:	loop   0x4221d2
  422220:	or     eax,esp
  422222:	xor    DWORD PTR [edx],ecx
  422224:	aad    0x7c
  422226:	sub    eax,0xb8a3276a
  42222b:	mov    ah,BYTE PTR [eax+ebx*4+0x53]
  42222f:	ss (bad) 
  422231:	in     al,dx
  422232:	push   edi
  422233:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422234:	inc    esi
  422235:	mov    ecx,0xb0915330
  42223a:	xchg   ecx,eax
  42223b:	ror    BYTE PTR [edi+edi*8],0x23
  42223f:	outs   dx,BYTE PTR ds:[esi]
  422240:	cdq    
  422241:	push   ds
  422242:	mov    ch,0x65
  422244:	bound  edx,QWORD PTR [edi+0x3420c1c9]
  42224a:	sub    ch,cl
  42224c:	jno    0x422208
  42224e:	jb     0x42229d
  422250:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422251:	je     0x422218
  422253:	cmp    ecx,DWORD PTR [ebx]
  422255:	shl    BYTE PTR [edx],cl
  422257:	adc    al,0xd9
  422259:	icebp  
  42225a:	mov    cl,0x70
  42225c:	dec    edx
  42225d:	xchg   esi,eax
  42225e:	(bad)  
  42225f:	call   0x15bef507
  422264:	push   esi
  422265:	cmp    BYTE PTR [esi+edi*1],dl
  422268:	mov    edx,0xadabbd44
  42226d:	xchg   esi,eax
  42226e:	sar    BYTE PTR [ebp-0x14ca5778],0x1f
  422275:	arpl   WORD PTR ds:0x85ba4d0b,dx
  42227b:	cmp    al,ch
  42227d:	jge    0x422255
  42227f:	iret   
  422280:	fisttp DWORD PTR [eax]
  422282:	pusha  
  422283:	pushf  
  422284:	mov    bh,0x1a
  422286:	arpl   WORD PTR [ecx-0x32],bx
  422289:	xor    ecx,DWORD PTR [edx]
  42228b:	adc    eax,0xf759a9ec
  422290:	in     eax,0xca
  422292:	shr    BYTE PTR [ebx],cl
  422294:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422295:	sub    DWORD PTR [ebx],eax
  422297:	stos   DWORD PTR es:[edi],eax
  422298:	cmc    
  422299:	clc    
  42229a:	jg     0x42225e
  42229c:	mov    DWORD PTR [eax],eax
  42229e:	lahf   
  42229f:	popa   
  4222a0:	es ins BYTE PTR es:[edi],dx
  4222a2:	pop    eax
  4222a3:	adc    DWORD PTR [ebp+0x64],esi
  4222a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4222a7:	retf   0x3cb
  4222aa:	xchg   edi,eax
  4222ab:	adc    al,0xe6
  4222ad:	mov    eax,ebp
  4222af:	adc    ch,al
  4222b1:	hlt    
  4222b2:	pop    es
  4222b3:	xor    al,0x28
  4222b5:	and    ch,BYTE PTR [ecx]
  4222b7:	mov    fs,WORD PTR [esi-0x58957a04]
  4222bd:	dec    ebp
  4222be:	cmp    BYTE PTR [eax-0x5df4d872],ah
  4222c4:	outs   dx,DWORD PTR ds:[esi]
  4222c5:	sbb    esp,DWORD PTR [esi]
  4222c7:	pop    esp
  4222c8:	dec    esi
  4222c9:	fisub  DWORD PTR [edi+ebx*1+0x1]
  4222cd:	sti    
  4222ce:	mov    dl,0xa1
  4222d0:	push   edi
  4222d1:	nop    DWORD PTR [edi+edx*8]
  4222d5:	int3   
  4222d6:	fmul   DWORD PTR [edx-0x47]
  4222d9:	mov    ah,BYTE PTR [edx+0x2a96ec7a]
  4222df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4222e0:	cmp    eax,0x33bb5ebb
  4222e5:	mov    esp,0xd2b4b8b3
  4222ea:	pushf  
  4222eb:	mov    fs,ecx
  4222ed:	pop    ecx
  4222ee:	push   ebp
  4222ef:	(bad)  
  4222f0:	push   ebp
  4222f1:	leave  
  4222f2:	inc    ecx
  4222f3:	aad    0x45
  4222f5:	inc    edx
  4222f6:	jnp    0x4222d5
  4222f8:	push   es
  4222f9:	dec    eax
  4222fa:	adc    bh,ch
  4222fc:	loope  0x4222ee
  4222fe:	lock or DWORD PTR [edi],edx
  422301:	or     al,0xdc
  422303:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422304:	sbb    dl,bl
  422306:	push   ebx
  422307:	adc    dh,BYTE PTR [ebx+0x1555e73d]
  42230d:	cwde   
  42230e:	or     DWORD PTR [ebx-0x3d8660b3],edi
  422314:	cmp    BYTE PTR ds:0xd111c782,dl
  42231a:	cli    
  42231b:	fs sbb al,0x95
  42231e:	inc    ebx
  42231f:	cs pop esi
  422321:	ja     0x4222fc
  422323:	jl     0x4222e0
  422325:	jae    0x422326
  422327:	std    
  422328:	rol    bh,0x71
  42232b:	fistp  QWORD PTR gs:[edx]
  42232e:	adc    eax,0x5c591e96
  422333:	test   eax,0xb44c9cc2
  422338:	stc    
  422339:	dec    esp
  42233a:	jmp    0xb3a0:0x42c70883
  422341:	dec    esi
  422342:	rcl    BYTE PTR [esi+ebp*4],0xb4
  422346:	cmp    esi,esi
  422348:	mov    ebp,0xb14df700
  42234d:	lds    ebp,FWORD PTR [ebp-0x47]
  422350:	data16 mov al,0x6b
  422353:	adc    DWORD PTR [ebx+0x4ee45a9c],esp
  422359:	test   eax,0xc9bb3a75
  42235e:	xor    BYTE PTR [esi-0x39d2baed],bl
  422364:	jge    0x422360
  422366:	(bad)  [edx-0x6a]
  422369:	pop    esi
  42236a:	or     bl,BYTE PTR [edx-0x57]
  42236d:	add    eax,0xd8126fbc
  422372:	out    0x6e,al
  422374:	xlat   BYTE PTR ds:[ebx]
  422375:	jmp    0x9a44:0xcc21bb54
  42237c:	fcmovnbe st,st(0)
  42237e:	jb     0x422380
  422380:	mov    eax,ds:0x3f8ca6e2
  422385:	lea    ebx,ss:[eax-0x4e]
  422389:	(bad)  [esi+edx*1+0x4]
  42238d:	mov    dh,0x60
  42238f:	dec    edx
  422390:	test   BYTE PTR [edx-0x53558b4],ah
  422396:	add    ch,al
  422398:	push   esp
  422399:	xor    BYTE PTR [ecx+0x5c8c1cc8],ch
  42239f:	inc    edx
  4223a0:	shr    BYTE PTR gs:[ebp+ecx*4+0x48],1
  4223a5:	inc    eax
  4223a6:	push   ds
  4223a7:	jge    0x4223f0
  4223a9:	cmp    DWORD PTR [ecx-0x65],eax
  4223ac:	gs dec edi
  4223ae:	pop    ebp
  4223af:	mov    al,ds:0xddc7d2df
  4223b4:	sbb    ebx,edx
  4223b6:	loopne 0x422426
  4223b8:	inc    esi
  4223b9:	mov    BYTE PTR [esi-0x6e],al
  4223bc:	rcl    DWORD PTR [ecx-0x65ea42e5],0xaa
  4223c3:	jns    0x42243c
  4223c5:	lds    edi,FWORD PTR [esi+0x12]
  4223c8:	adc    al,0xb0
  4223ca:	(bad)  
  4223cb:	pop    ss
  4223cc:	push   ebx
  4223cd:	fwait
  4223ce:	cld    
  4223cf:	clc    
  4223d0:	das    
  4223d1:	adc    ecx,DWORD PTR [ecx-0x14]
  4223d4:	jg     0x42241a
  4223d6:	div    al
  4223d8:	stos   BYTE PTR es:[edi],al
  4223d9:	dec    edi
  4223da:	adc    eax,0x7b5c81c9
  4223df:	lods   eax,DWORD PTR ds:[esi]
  4223e0:	cli    
  4223e1:	stc    
  4223e2:	mov    ds,eax
  4223e4:	add    al,0xab
  4223e6:	test   DWORD PTR [edi+0x33141c6d],ebp
  4223ec:	mov    ds:0xba1cc727,eax
  4223f1:	xchg   ecx,eax
  4223f2:	mov    esp,0xab864a86
  4223f7:	sti    
  4223f8:	(bad)  
  4223f9:	cmp    al,0xcf
  4223fb:	mov    bh,0x56
  4223fd:	iret   
  4223fe:	gs out dx,al
  422400:	mov    edx,ecx
  422402:	mov    ebx,0x84a91a37
  422407:	inc    esi
  422408:	call   0x3048ce00
  42240d:	test   eax,0x17d45c7c
  422412:	or     eax,0xd04be353
  422417:	pop    edx
  422418:	das    
  422419:	aam    0x82
  42241b:	imul   edi,edx,0x6a0edc93
  422421:	pusha  
  422422:	in     al,0x8e
  422424:	mov    ah,0xa1
  422426:	adc    ch,bh
  422428:	nop
  422429:	dec    esp
  42242a:	imul   edx,DWORD PTR [ebp-0x79],0xffffffaa
  42242e:	push   ss
  42242f:	shl    DWORD PTR [edx+0x77f8bde5],1
  422435:	cmp    ah,BYTE PTR [eax]
  422437:	gs inc ebx
  422439:	fcmovu st,st(7)
  42243b:	mov    ss,WORD PTR [ebx-0xd2136b7]
  422441:	push   ebx
  422442:	adc    eax,0x29b7dcd9
  422447:	xchg   cl,bh
  422449:	dec    esp
  42244a:	push   esi
  42244b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42244c:	fmul   DWORD PTR [ecx]
  42244e:	ins    DWORD PTR es:[edi],dx
  42244f:	jne    0x422445
  422451:	inc    esi
  422452:	popa   
  422453:	in     al,0xe4
  422455:	sub    eax,0x7d371df7
  42245a:	mov    ch,0x0
  42245c:	daa    
  42245d:	stos   BYTE PTR es:[edi],al
  42245e:	jmp    0x422446
  422460:	rol    DWORD PTR [ecx],1
  422462:	add    ebx,DWORD PTR [edi-0xbf0b6b5]
  422468:	pushf  
  422469:	(bad)  
  42246a:	cwde   
  42246b:	adc    BYTE PTR [ebx-0x13],cl
  42246e:	cmp    dl,BYTE PTR [esi+edi*2-0x7da91c94]
  422475:	fld    QWORD PTR [edi-0x6385a9f9]
  42247b:	call   0xf501b1dd
  422480:	sbb    ecx,ebp
  422482:	adc    eax,0x86a0fa00
  422487:	rol    BYTE PTR [esi],1
  422489:	outs   dx,DWORD PTR ds:[esi]
  42248a:	es stc 
  42248c:	dec    ecx
  42248d:	pop    ebp
  42248e:	jno    0x4224d9
  422490:	cdq    
  422491:	or     eax,0xc46572e1
  422496:	data16 xor BYTE PTR [esi],0x36
  42249a:	cs mov esp,0xb9a5dd2d
  4224a0:	add    eax,ebx
  4224a2:	cmp    al,0x54
  4224a4:	mov    al,ds:0x353687ac
  4224a9:	pusha  
  4224aa:	adc    DWORD PTR [eax],ecx
  4224ac:	retf   0x4331
  4224af:	hlt    
  4224b0:	add    esp,edi
  4224b2:	sub    al,0x41
  4224b4:	clc    
  4224b5:	sbb    ah,dh
  4224b7:	sub    eax,0xa21d1aea
  4224bc:	lock xor eax,edx
  4224bf:	add    dh,BYTE PTR [edi+edi*8+0x162d9bde]
  4224c6:	adc    al,0xdd
  4224c8:	push   ds
  4224c9:	cmp    al,BYTE PTR [esi+esi*2+0x5a53f310]
  4224d0:	add    bl,dh
  4224d2:	(bad)  
  4224d3:	pop    esp
  4224d4:	sub    eax,0x768fc19d
  4224d9:	shr    DWORD PTR [ecx+0x6],0x89
  4224dd:	in     al,dx
  4224de:	rcl    ebx,1
  4224e0:	lahf   
  4224e1:	loopne 0x422527
  4224e3:	add    ah,bl
  4224e5:	mov    ch,BYTE PTR [esi-0x80]
  4224e8:	add    ebx,esp
  4224ea:	push   cs
  4224eb:	or     dh,al
  4224ed:	push   edi
  4224ee:	outs   dx,DWORD PTR ds:[esi]
  4224ef:	xor    esi,esi
  4224f1:	mov    ah,0x24
  4224f3:	xchg   ebp,eax
  4224f4:	adc    DWORD PTR [edx+0x1c2b9865],esi
  4224fa:	test   eax,0x874e0f68
  4224ff:	call   0xd015:0xde40164f
  422506:	not    BYTE PTR [eax+0x76afe95a]
  42250c:	jo     0x4224b0
  42250e:	push   edi
  42250f:	fwait
  422510:	retf   0x37df
  422513:	jg     0x422498
  422515:	inc    ebp
  422516:	mov    dl,0xb0
  422518:	pop    ds
  422519:	int3   
  42251a:	les    ebp,FWORD PTR [ebx+0x42480b76]
  422520:	daa    
  422521:	add    BYTE PTR [eax+0x1cd85f49],dh
  422527:	outs   dx,DWORD PTR ds:[esi]
  422528:	push   edi
  422529:	fwait
  42252a:	cld    
  42252b:	cs into 
  42252d:	lds    esp,FWORD PTR [esp+ebp*1]
  422530:	sbb    al,0xae
  422532:	dec    ebp
  422533:	jmp    0x422577
  422535:	mov    edi,0x53a6423d
  42253a:	mov    bl,ch
  42253c:	(bad)  
  42253d:	xchg   esp,eax
  42253e:	fldcw  WORD PTR [ebx-0x73]
  422541:	push   0x6c38ff54
  422546:	lods   eax,DWORD PTR ds:[esi]
  422547:	repz xchg esp,eax
  422549:	rol    DWORD PTR ds:0x939a2072,0x52
  422550:	push   ss
  422551:	(bad)  
  422552:	adc    ch,BYTE PTR [ebp+esi*8-0x35]
  422556:	and    eax,0xe50243db
  42255b:	std    
  42255c:	aas    
  42255d:	test   BYTE PTR es:[edi+0x4d106fdd],cl
  422564:	xchg   ebx,eax
  422565:	push   esi
  422566:	add    eax,0xa654e6f
  42256b:	xor    al,0xc1
  42256d:	pop    esp
  42256e:	inc    ebp
  42256f:	jne    0x422544
  422571:	cld    
  422572:	nop
  422573:	mov    eax,ds:0xba20639f
  422578:	and    DWORD PTR [ecx+0x25db1cd],ebp
  42257e:	into   
  42257f:	ficom  WORD PTR [ecx-0x15]
  422582:	or     ebx,eax
  422584:	dec    eax
  422585:	adc    eax,0xf0cfd6a1
  42258a:	sub    eax,0x1596c1be
  42258f:	out    0x9a,al
  422591:	jmp    0x45e0:0xe523636b
  422598:	stos   BYTE PTR es:[edi],al
  422599:	mov    cl,0xe6
  42259b:	sbb    eax,0x37486101
  4225a0:	mov    esp,0x7ee23ae3
  4225a5:	xor    DWORD PTR [ecx+0x257faabc],ebp
  4225ab:	les    eax,FWORD PTR [eax]
  4225ad:	and    dl,dl
  4225af:	xchg   ebx,eax
  4225b0:	mov    edx,0xca060e81
  4225b5:	mul    DWORD PTR [esi+0x2b3cc234]
  4225bb:	xlat   BYTE PTR ds:[ebx]
  4225bc:	sub    ecx,DWORD PTR ss:[ebx+ebp*2]
  4225c0:	xor    BYTE PTR [ebp+0x29],0xe2
  4225c4:	sahf   
  4225c5:	xor    eax,0xa50923ec
  4225ca:	pusha  
  4225cb:	test   al,0xbb
  4225cd:	mov    eax,cs
  4225cf:	xchg   ecx,eax
  4225d0:	jmp    0xab5f:0x306a0d07
  4225d7:	mov    ds:0xb9a8c04d,al
  4225dc:	aaa    
  4225dd:	shl    esp,0xb5
  4225e0:	pushf  
  4225e1:	push   0x3a
  4225e3:	fstp   QWORD PTR [ebx+esi*4-0x6c6c4a1f]
  4225ea:	bswap  edx
  4225ec:	jbe    0x422603
  4225ee:	or     al,0xd4
  4225f0:	int3   
  4225f1:	in     al,dx
  4225f2:	push   0xffffff8f
  4225f4:	sbb    eax,0xccc4fa4c
  4225f9:	inc    bx
  4225fb:	cmp    bl,BYTE PTR [ebx]
  4225fd:	daa    
  4225fe:	push   ebx
  4225ff:	mov    eax,0x3e83ada3
  422604:	jmp    0x4225b4
  422606:	xchg   ebx,eax
  422607:	lahf   
  422608:	(bad)  
  42260a:	or     eax,DWORD PTR [esp+eiz*8-0x7d208e92]
  422611:	mov    edi,0xe3a95426
  422616:	fadd   DWORD PTR [ebp+0x6d]
  422619:	cmp    DWORD PTR [edx+0x7],ebp
  42261c:	xchg   ebp,eax
  42261d:	mov    cl,0x51
  42261f:	add    ah,ch
  422621:	not    DWORD PTR [ebp-0x5c1dc918]
  422627:	out    dx,al
  422628:	lods   eax,DWORD PTR ds:[esi]
  422629:	and    ah,BYTE PTR [ebp-0x56]
  42262c:	cwde   
  42262d:	repnz cmp eax,0xf6315f90
  422633:	and    ch,dh
  422635:	clc    
  422636:	jmp    0x4225f5
  422638:	xor    DWORD PTR [ebp+0x9],0x2
  42263c:	vandpd xmm4,xmm0,XMMWORD PTR [esi+0x17]
  422641:	jne    0x42261e
  422643:	sub    eax,0xcf060b07
  422648:	xor    dl,BYTE PTR [edi-0x16]
  42264b:	sahf   
  42264c:	inc    ebx
  42264d:	cld    
  42264e:	(bad)  
  42264f:	jmp    0x4225f7
  422651:	jge    0x42261e
  422653:	add    eax,eax
  422655:	aad    0xe0
  422657:	ret    
  422658:	pop    ebx
  422659:	sub    ah,bh
  42265b:	ins    BYTE PTR es:[edi],dx
  42265c:	pop    esi
  42265d:	mov    al,ds:0x356833ca
  422662:	mov    ds:0xaac5e60d,eax
  422667:	mov    ecx,0xa48bbda0
  42266c:	and    dh,BYTE PTR [esp+edi*4+0x13]
  422670:	xchg   esi,eax
  422671:	and    eax,0xfeb1a1aa
  422676:	or     BYTE PTR [ecx+0x23],al
  422679:	mov    bh,0xe8
  42267b:	pop    edi
  42267c:	fstp   st(3)
  42267e:	in     eax,0x52
  422680:	cmp    al,0xd5
  422682:	popa   
  422683:	mov    ch,0x7f
  422685:	jge    0x422657
  422687:	ror    BYTE PTR [eax-0x13f7f8bb],1
  42268d:	jle    0x42265c
  42268f:	push   eax
  422690:	sbb    DWORD PTR ds:0x7e9394de,esp
  422696:	xchg   edi,eax
  422697:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422698:	adc    al,0x91
  42269a:	enter  0x3a57,0xfb
  42269e:	fdiv   st(3),st
  4226a0:	shl    ah,cl
  4226a2:	repnz add esp,DWORD PTR [ebx+0x39]
  4226a6:	mov    ebp,DWORD PTR ds:0xe6f86ab0
  4226ac:	inc    edx
  4226ad:	test   eax,0x460dcda4
  4226b2:	or     DWORD PTR [edx-0x26d982a2],edx
  4226b8:	dec    edi
  4226b9:	out    dx,eax
  4226ba:	ficom  WORD PTR [edi-0x3b1f8c62]
  4226c0:	int    0x2e
  4226c2:	sbb    ah,cl
  4226c4:	aas    
  4226c5:	test   esi,ebp
  4226c7:	mov    ebx,0xfa3a0ea1
  4226cc:	pop    edi
  4226cd:	pop    ecx
  4226ce:	dec    ebp
  4226cf:	or     dh,BYTE PTR [edx+0xbae2dd9]
  4226d5:	mov    esp,0x3e21ded3
  4226da:	in     al,0x2f
  4226dc:	inc    eax
  4226dd:	jge    0x42266a
  4226df:	and    eax,0xa8467a7d
  4226e4:	data16 jno 0x422757
  4226e7:	dec    edi
  4226e8:	and    dh,ch
  4226ea:	mov    ah,al
  4226ec:	out    dx,eax
  4226ed:	xchg   edi,eax
  4226ee:	fwait
  4226ef:	neg    DWORD PTR [edx-0x123a4343]
  4226f5:	mov    BYTE PTR [esi-0x6d],bh
  4226f8:	cdq    
  4226f9:	cmc    
  4226fa:	and    BYTE PTR ds:0x983a85c9,0xf0
  422701:	jmp    0xf887:0xbc2d001d
  422708:	in     eax,dx
  422709:	sbb    BYTE PTR [edi+0x5c],bl
  42270c:	adc    al,0xb0
  42270e:	cdq    
  42270f:	fwait
  422710:	jne    0x422763
  422712:	dec    esi
  422713:	dec    ebx
  422714:	bound  ecx,QWORD PTR [ecx+0x696649cf]
  42271a:	ret    
  42271b:	mov    esp,DWORD PTR [ebp+0x4c44239c]
  422721:	pushf  
  422722:	or     al,BYTE PTR [ebx-0x2e]
  422725:	mov    eax,0xd86472dd
  42272a:	inc    edi
  42272b:	int3   
  42272c:	mov    eax,ds:0x479e92bf
  422731:	(bad)  
  422732:	icebp  
  422733:	dec    ecx
  422734:	gs call 0xc832df3b
  42273a:	out    0x5a,al
  42273c:	ja     0x4226e3
  42273e:	push   edx
  42273f:	lock pop es
  422741:	mov    DWORD PTR [ecx+0x63],0xa51e3f9d
  422748:	mov    esp,0xe7d015bf
  42274d:	hlt    
  42274e:	or     BYTE PTR [eax],0xf
  422751:	push   ecx
  422752:	cdq    
  422753:	jne    0x4227a5
  422755:	add    dl,BYTE PTR [ecx+0x69990f0b]
  42275b:	mov    esi,0x770a8580
  422760:	call   0x3236:0x186cc3a5
  422767:	leave  
  422768:	or     BYTE PTR [ecx-0x7c],0xce
  42276c:	and    al,0x1d
  42276e:	jb     0x42278f
  422770:	cmc    
  422771:	popf   
  422772:	es jmp 0x354b6601
  422778:	mov    cl,0x93
  42277a:	sahf   
  42277b:	inc    eax
  42277c:	(bad)  
  42277d:	jmp    0x3fbe8759
  422782:	ds inc esp
  422784:	pop    edi
  422785:	stos   BYTE PTR es:[edi],al
  422786:	sahf   
  422787:	push   edx
  422788:	shl    BYTE PTR [eax-0xb],1
  42278b:	xlat   BYTE PTR ds:[ebx]
  42278c:	xor    al,0xba
  42278e:	ret    
  42278f:	test   BYTE PTR [edi+0x45],ch
  422792:	or     al,0xd3
  422794:	sbb    BYTE PTR [ecx+0x593ccc0a],cl
  42279a:	dec    esi
  42279b:	rcl    DWORD PTR [ecx+0x5958bc56],cl
  4227a1:	fisubr WORD PTR [eax+edi*1-0x6b]
  4227a5:	inc    edx
  4227a6:	mov    es,WORD PTR [eax]
  4227a8:	push   esi
  4227a9:	stos   BYTE PTR es:[edi],al
  4227aa:	dec    esi
  4227ab:	jne    0x4227c2
  4227ad:	add    eax,0x1f4809c8
  4227b2:	adc    eax,0xa1363967
  4227b7:	jge    0x422829
  4227b9:	sbb    DWORD PTR [edi],esi
  4227bb:	inc    edi
  4227bc:	imul   esi,DWORD PTR [ebp+0x5ca0e0d3],0x19
  4227c3:	cmp    ch,BYTE PTR ds:0xa29c7c13
  4227c9:	sub    al,0x6
  4227cb:	adc    eax,0xe8b5ed36
  4227d0:	test   BYTE PTR [esi],dl
  4227d2:	int3   
  4227d3:	or     esi,edx
  4227d5:	mov    al,0x67
  4227d7:	or     al,0x84
  4227d9:	sbb    al,0x5e
  4227db:	imul   esi,eax,0xffffff8e
  4227de:	ret    
  4227df:	lahf   
  4227e0:	ja     0x422781
  4227e2:	loop   0x422795
  4227e4:	xchg   ecx,eax
  4227e5:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  4227e7:	push   edx
  4227e8:	sbb    al,0xc1
  4227ea:	jbe    0x422785
  4227ec:	(bad)  
  4227ed:	mov    ch,0x24
  4227ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4227f0:	push   edx
  4227f1:	jl     0x4227c5
  4227f3:	mov    dh,0xfe
  4227f5:	cmp    BYTE PTR [eax-0xd94990e],dh
  4227fb:	repz cmp al,0xc7
  4227fe:	aad    0x95
  422800:	pushf  
  422801:	test   al,0x39
  422803:	inc    esp
  422804:	mov    dh,0x1f
  422806:	add    BYTE PTR [eax],0xce
  422809:	sub    eax,0x5a5f95b3
  42280e:	test   BYTE PTR [ecx+0x50933e6e],ch
  422814:	jmp    0xc4938235
  422819:	lods   eax,DWORD PTR ds:[esi]
  42281a:	mov    DWORD PTR [edi-0x5dc8be5e],ebp
  422820:	fadd   DWORD PTR [ecx]
  422822:	cdq    
  422823:	mov    fs,edi
  422825:	iret   
  422826:	xchg   edx,eax
  422827:	dec    ecx
  422828:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422829:	lods   al,BYTE PTR ds:[esi]
  42282a:	imul   esi,DWORD PTR [eax],0x61
  42282d:	xchg   esp,eax
  42282e:	(bad)  
  42282f:	push   cs
  422830:	jmp    0x2a0f:0x22e867c0
  422837:	push   esp
  422838:	dec    eax
  422839:	dec    eax
  42283a:	sbb    al,0xe9
  42283c:	cld    
  42283d:	push   ss
  42283e:	bound  esp,QWORD PTR ds:0xc9ffad88
  422844:	jbe    0x422831
  422846:	stos   DWORD PTR es:[edi],eax
  422847:	stos   DWORD PTR es:[edi],eax
  422848:	cmp    ebx,DWORD PTR [ebp+0x45]
  42284b:	(bad)
  42284f:	or     al,0x7a
  422851:	sar    BYTE PTR [ecx],0xc
  422854:	daa    
  422855:	(bad)  [edi+ebp*4-0x4a]
  422859:	adc    eax,DWORD PTR [ebp+0x5dede3a4]
  42285f:	leave  
  422860:	xor    al,0xc3
  422862:	jmp    0x8cba:0xe9633cdb
  422869:	outs   dx,BYTE PTR ds:[esi]
  42286a:	xchg   ebx,eax
  42286b:	xor    esi,eax
  42286d:	push   eax
  42286e:	repnz xor dh,dl
  422871:	mov    esp,0xbdeeff7b
  422876:	ret    
  422877:	mov    ds:0xa4e4ee7e,eax
  42287c:	shl    BYTE PTR [esp+edi*4+0x58],cl
  422880:	clc    
  422881:	inc    esi
  422882:	je     0x4228b1
  422884:	cwde   
  422885:	arpl   WORD PTR [edi+0x68],cx
  422888:	and    eax,0xa4538e4d
  42288d:	popa   
  42288e:	sar    BYTE PTR [ebx-0x2d],cl
  422891:	xchg   ebx,eax
  422892:	push   cs
  422893:	xchg   ecx,eax
  422894:	lods   al,BYTE PTR ds:[esi]
  422895:	mov    al,ds:0xdb31ec99
  42289a:	sti    
  42289b:	push   esp
  42289c:	push   edx
  42289d:	shl    BYTE PTR [ecx+esi*2+0x51],cl
  4228a1:	in     al,dx
  4228a2:	outs   dx,BYTE PTR ds:[esi]
  4228a3:	push   ebp
  4228a4:	xor    esp,ebx
  4228a6:	rol    BYTE PTR [edi-0x26],1
  4228a9:	xchg   DWORD PTR [eax+0x45be7869],esi
  4228af:	fldenvw [edx]
  4228b2:	pop    ebx
  4228b4:	sbb    al,al
  4228b6:	add    edi,ebp
  4228b8:	repnz ficomp DWORD PTR [eax-0x2e7545ad]
  4228bf:	fdivp  st(6),st
  4228c1:	lods   eax,DWORD PTR ds:[esi]
  4228c2:	dec    edx
  4228c3:	push   esp
  4228c4:	fsub   QWORD PTR [ecx+0x4e3c5c5a]
  4228ca:	jp     0x4228d2
  4228cc:	pop    es
  4228cd:	popa   
  4228ce:	jge    0x4228a9
  4228d0:	adc    DWORD PTR [ecx+eiz*1+0xd2dd9d4],esp
  4228d7:	repnz iret 
  4228d9:	jnp    0x422942
  4228db:	outs   dx,BYTE PTR ds:[esi]
  4228dc:	call   0xf9a7:0xa8b6f370
  4228e3:	int    0x13
  4228e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4228e6:	jne    0x4228df
  4228e8:	jle    0x42292c
  4228ea:	fst    QWORD PTR es:[ebx-0x15]
  4228ee:	add    esp,DWORD PTR [edx+0x78a988de]
  4228f4:	aam    0x5f
  4228f6:	xor    al,BYTE PTR [bx+si-0x3195]
  4228fb:	sub    BYTE PTR [ebx-0x1c56eff2],bh
  422901:	cmp    DWORD PTR [ebx],0xfffffff2
  422904:	push   ebp
  422905:	(bad)  
  422906:	retf   0xec87
  422909:	jmp    0xec3c:0x676a4615
  422910:	div    DWORD PTR ds:0x335c5b4d
  422916:	ror    BYTE PTR [ebx+0x10c25de5],0x0
  42291d:	nop
  42291e:	nop
  42291f:	nop
  422920:	cmp    DWORD PTR ds:0x45cabc,0x1
  422927:	jne    0x42292e
  422929:	call   0x422e6c
  42292e:	push   DWORD PTR [esp+0x4]
  422932:	call   0x422cf5
  422937:	push   0xff
  42293c:	call   DWORD PTR ds:0x45c1c0
  422942:	pop    ecx
  422943:	pop    ecx
  422944:	ret    
  422945:	cmp    DWORD PTR ds:0x45cabc,0x1
  42294c:	jne    0x422953
  42294e:	call   0x422e6c
  422953:	push   DWORD PTR [esp+0x4]
  422957:	call   0x422cf5
  42295c:	push   0xff
  422961:	call   0x422b3b
  422966:	pop    ecx
  422967:	pop    ecx
  422968:	ret    
  422969:	push   0x60
  42296b:	push   0x428110
  422970:	call   0x423858
  422975:	mov    edi,0x94
  42297a:	mov    eax,edi
  42297c:	call   0x4238b0
  422981:	mov    DWORD PTR [ebp-0x18],esp
  422984:	mov    esi,esp
  422986:	mov    DWORD PTR [esi],edi
  422988:	push   esi
  422989:	call   DWORD PTR ds:0x428024
  42298f:	mov    ecx,DWORD PTR [esi+0x10]
  422992:	mov    DWORD PTR ds:0x45cac4,ecx
  422998:	mov    eax,DWORD PTR [esi+0x4]
  42299b:	mov    ds:0x45cad0,eax
  4229a0:	mov    edx,DWORD PTR [esi+0x8]
  4229a3:	mov    DWORD PTR ds:0x45cad4,edx
  4229a9:	mov    esi,DWORD PTR [esi+0xc]
  4229ac:	and    esi,0x7fff
  4229b2:	mov    DWORD PTR ds:0x45cac8,esi
  4229b8:	cmp    ecx,0x2
  4229bb:	je     0x4229c9
  4229bd:	or     esi,0x8000
  4229c3:	mov    DWORD PTR ds:0x45cac8,esi
  4229c9:	shl    eax,0x8
  4229cc:	add    eax,edx
  4229ce:	mov    ds:0x45cacc,eax
  4229d3:	xor    esi,esi
  4229d5:	push   esi
  4229d6:	mov    edi,DWORD PTR ds:0x428014
  4229dc:	call   edi
  4229de:	cmp    WORD PTR [eax],0x5a4d
  4229e3:	jne    0x422a04
  4229e5:	mov    ecx,DWORD PTR [eax+0x3c]
  4229e8:	add    ecx,eax
  4229ea:	cmp    DWORD PTR [ecx],0x4550
  4229f0:	jne    0x422a04
  4229f2:	movzx  eax,WORD PTR [ecx+0x18]
  4229f6:	cmp    eax,0x10b
  4229fb:	je     0x422a1c
  4229fd:	cmp    eax,0x20b
  422a02:	je     0x422a09
  422a04:	mov    DWORD PTR [ebp-0x1c],esi
  422a07:	jmp    0x422a30
  422a09:	cmp    DWORD PTR [ecx+0x84],0xe
  422a10:	jbe    0x422a04
  422a12:	xor    eax,eax
  422a14:	cmp    DWORD PTR [ecx+0xf8],esi
  422a1a:	jmp    0x422a2a
  422a1c:	cmp    DWORD PTR [ecx+0x74],0xe
  422a20:	jbe    0x422a04
  422a22:	xor    eax,eax
  422a24:	cmp    DWORD PTR [ecx+0xe8],esi
  422a2a:	setne  al
  422a2d:	mov    DWORD PTR [ebp-0x1c],eax
  422a30:	push   0x1
  422a32:	call   0x423807
  422a37:	pop    ecx
  422a38:	test   eax,eax
  422a3a:	jne    0x422a44
  422a3c:	push   0x1c
  422a3e:	call   0x422945
  422a43:	pop    ecx
  422a44:	call   0x42377e
  422a49:	test   eax,eax
  422a4b:	jne    0x422a55
  422a4d:	push   0x10
  422a4f:	call   0x422945
  422a54:	pop    ecx
  422a55:	call   0x423667
  422a5a:	mov    DWORD PTR [ebp-0x4],esi
  422a5d:	call   0x423469
  422a62:	test   eax,eax
  422a64:	jge    0x422a6e
  422a66:	push   0x1b
  422a68:	call   0x422920
  422a6d:	pop    ecx
  422a6e:	call   DWORD PTR ds:0x428020
  422a74:	mov    ds:0x45d274,eax
  422a79:	call   0x423347
  422a7e:	mov    ds:0x45cab4,eax
  422a83:	call   0x4232a5
  422a88:	test   eax,eax
  422a8a:	jge    0x422a94
  422a8c:	push   0x8
  422a8e:	call   0x422920
  422a93:	pop    ecx
  422a94:	call   0x423072
  422a99:	test   eax,eax
  422a9b:	jge    0x422aa5
  422a9d:	push   0x9
  422a9f:	call   0x422920
  422aa4:	pop    ecx
  422aa5:	call   0x422b7d
  422aaa:	mov    DWORD PTR [ebp-0x20],eax
  422aad:	cmp    eax,esi
  422aaf:	je     0x422ab8
  422ab1:	push   eax
  422ab2:	call   0x422920
  422ab7:	pop    ecx
  422ab8:	mov    DWORD PTR [ebp-0x38],esi
  422abb:	lea    eax,[ebp-0x64]
  422abe:	push   eax
  422abf:	call   DWORD PTR ds:0x42801c
  422ac5:	call   0x423009
  422aca:	mov    DWORD PTR [ebp-0x68],eax
  422acd:	test   BYTE PTR [ebp-0x38],0x1
  422ad1:	je     0x422ad9
  422ad3:	movzx  eax,WORD PTR [ebp-0x34]
  422ad7:	jmp    0x422adc
  422ad9:	push   0xa
  422adb:	pop    eax
  422adc:	push   eax
  422add:	push   DWORD PTR [ebp-0x68]
  422ae0:	push   esi
  422ae1:	push   esi
  422ae2:	call   edi
  422ae4:	push   eax
  422ae5:	call   0x421790
  422aea:	mov    edi,eax
  422aec:	mov    DWORD PTR [ebp-0x6c],edi
  422aef:	cmp    DWORD PTR [ebp-0x1c],esi
  422af2:	jne    0x422afa
  422af4:	push   edi
  422af5:	call   0x422cb5
  422afa:	call   0x422cd7
  422aff:	jmp    0x422b2c
  422b01:	mov    eax,DWORD PTR [ebp-0x14]
  422b04:	mov    ecx,DWORD PTR [eax]
  422b06:	mov    ecx,DWORD PTR [ecx]
  422b08:	mov    DWORD PTR [ebp-0x70],ecx
  422b0b:	push   eax
  422b0c:	push   ecx
  422b0d:	call   0x422ea5
  422b12:	pop    ecx
  422b13:	pop    ecx
  422b14:	ret    
  422b15:	mov    esp,DWORD PTR [ebp-0x18]
  422b18:	mov    edi,DWORD PTR [ebp-0x70]
  422b1b:	cmp    DWORD PTR [ebp-0x1c],0x0
  422b1f:	jne    0x422b27
  422b21:	push   edi
  422b22:	call   0x422cc6
  422b27:	call   0x422ce6
  422b2c:	or     DWORD PTR [ebp-0x4],0xffffffff
  422b30:	mov    eax,edi
  422b32:	lea    esp,[ebp-0x7c]
  422b35:	call   0x423893
  422b3a:	ret    
  422b3b:	push   0x42812c
  422b40:	call   DWORD PTR ds:0x428014
  422b46:	test   eax,eax
  422b48:	je     0x422b60
  422b4a:	push   0x42811c
  422b4f:	push   eax
  422b50:	call   DWORD PTR ds:0x428018
  422b56:	test   eax,eax
  422b58:	je     0x422b60
  422b5a:	push   DWORD PTR [esp+0x4]
  422b5e:	call   eax
  422b60:	push   DWORD PTR [esp+0x4]
  422b64:	call   DWORD PTR ds:0x428028
  422b6a:	int3   
  422b6b:	push   0x8
  422b6d:	call   0x423a1f
  422b72:	pop    ecx
  422b73:	ret    
  422b74:	push   0x8
  422b76:	call   0x42398b
  422b7b:	pop    ecx
  422b7c:	ret    
  422b7d:	mov    eax,ds:0x45d270
  422b82:	test   eax,eax
  422b84:	je     0x422b88
  422b86:	call   eax
  422b88:	push   esi
  422b89:	push   edi
  422b8a:	mov    ecx,0x42a00c
  422b8f:	mov    edi,0x42a018
  422b94:	xor    eax,eax
  422b96:	cmp    ecx,edi
  422b98:	mov    esi,ecx
  422b9a:	jae    0x422bb3
  422b9c:	test   eax,eax
  422b9e:	jne    0x422bdf
  422ba0:	mov    ecx,DWORD PTR [esi]
  422ba2:	test   ecx,ecx
  422ba4:	je     0x422ba8
  422ba6:	call   ecx
  422ba8:	add    esi,0x4
  422bab:	cmp    esi,edi
  422bad:	jb     0x422b9c
  422baf:	test   eax,eax
  422bb1:	jne    0x422bdf
  422bb3:	push   0x4236ab
  422bb8:	call   0x423b30
  422bbd:	mov    esi,0x42a000
  422bc2:	mov    eax,esi
  422bc4:	mov    edi,0x42a008
  422bc9:	cmp    eax,edi
  422bcb:	pop    ecx
  422bcc:	jae    0x422bdd
  422bce:	mov    eax,DWORD PTR [esi]
  422bd0:	test   eax,eax
  422bd2:	je     0x422bd6
  422bd4:	call   eax
  422bd6:	add    esi,0x4
  422bd9:	cmp    esi,edi
  422bdb:	jb     0x422bce
  422bdd:	xor    eax,eax
  422bdf:	pop    edi
  422be0:	pop    esi
  422be1:	ret    
  422be2:	push   ebp
  422be3:	mov    ebp,esp
  422be5:	push   esi
  422be6:	push   edi
  422be7:	push   0x8
  422be9:	call   0x423a1f
  422bee:	xor    esi,esi
  422bf0:	inc    esi
  422bf1:	cmp    DWORD PTR ds:0x45cb04,esi
  422bf7:	pop    ecx
  422bf8:	jne    0x422c0a
  422bfa:	push   DWORD PTR [ebp+0x8]
  422bfd:	call   DWORD PTR ds:0x428030
  422c03:	push   eax
  422c04:	call   DWORD PTR ds:0x42802c
  422c0a:	cmp    DWORD PTR [ebp+0xc],0x0
  422c0e:	mov    al,BYTE PTR [ebp+0x10]
  422c11:	mov    DWORD PTR ds:0x45cb00,esi
  422c17:	mov    ds:0x45cafc,al
  422c1c:	jne    0x422c70
  422c1e:	mov    ecx,DWORD PTR ds:0x45d268
  422c24:	test   ecx,ecx
  422c26:	je     0x422c51
  422c28:	mov    eax,ds:0x45d264
  422c2d:	sub    eax,0x4
  422c30:	cmp    eax,ecx
  422c32:	jmp    0x422c4a
  422c34:	mov    eax,DWORD PTR [eax]
  422c36:	test   eax,eax
  422c38:	je     0x422c3c
  422c3a:	call   eax
  422c3c:	mov    eax,ds:0x45d264
  422c41:	sub    eax,0x4
  422c44:	cmp    eax,DWORD PTR ds:0x45d268
  422c4a:	mov    ds:0x45d264,eax
  422c4f:	jae    0x422c34
  422c51:	mov    eax,0x42a01c
  422c56:	mov    esi,0x42a020
  422c5b:	cmp    eax,esi
  422c5d:	mov    edi,eax
  422c5f:	jae    0x422c70
  422c61:	mov    eax,DWORD PTR [edi]
  422c63:	test   eax,eax
  422c65:	je     0x422c69
  422c67:	call   eax
  422c69:	add    edi,0x4
  422c6c:	cmp    edi,esi
  422c6e:	jb     0x422c61
  422c70:	mov    eax,0x42a024
  422c75:	mov    esi,0x42a028
  422c7a:	cmp    eax,esi
  422c7c:	mov    edi,eax
  422c7e:	jae    0x422c8f
  422c80:	mov    eax,DWORD PTR [edi]
  422c82:	test   eax,eax
  422c84:	je     0x422c88
  422c86:	call   eax
  422c88:	add    edi,0x4
  422c8b:	cmp    edi,esi
  422c8d:	jb     0x422c80
  422c8f:	cmp    DWORD PTR [ebp+0x10],0x0
  422c93:	pop    edi
  422c94:	pop    esi
  422c95:	je     0x422ca0
  422c97:	push   0x8
  422c99:	call   0x42398b
  422c9e:	jmp    0x422cb2
  422ca0:	push   DWORD PTR [ebp+0x8]
  422ca3:	mov    DWORD PTR ds:0x45cb04,0x1
  422cad:	call   0x422b3b
  422cb2:	pop    ecx
  422cb3:	pop    ebp
  422cb4:	ret    
  422cb5:	push   0x0
  422cb7:	push   0x0
  422cb9:	push   DWORD PTR [esp+0xc]
  422cbd:	call   0x422be2
  422cc2:	add    esp,0xc
  422cc5:	ret    
  422cc6:	push   0x0
  422cc8:	push   0x1
  422cca:	push   DWORD PTR [esp+0xc]
  422cce:	call   0x422be2
  422cd3:	add    esp,0xc
  422cd6:	ret    
  422cd7:	push   0x1
  422cd9:	push   0x0
  422cdb:	push   0x0
  422cdd:	call   0x422be2
  422ce2:	add    esp,0xc
  422ce5:	ret    
  422ce6:	push   0x1
  422ce8:	push   0x1
  422cea:	push   0x0
  422cec:	call   0x422be2
  422cf1:	add    esp,0xc
  422cf4:	ret    
  422cf5:	push   ebp
  422cf6:	mov    ebp,esp
  422cf8:	sub    esp,0x10c
  422cfe:	mov    eax,ds:0x45c430
  422d03:	xor    eax,DWORD PTR [ebp+0x4]
  422d06:	mov    ecx,DWORD PTR [ebp+0x8]
  422d09:	push   ebx
  422d0a:	push   esi
  422d0b:	mov    DWORD PTR [ebp-0x4],eax
  422d0e:	xor    edx,edx
  422d10:	push   edi
  422d11:	xor    eax,eax
  422d13:	cmp    ecx,DWORD PTR [eax*8+0x45c1c8]
  422d1a:	je     0x422d22
  422d1c:	inc    eax
  422d1d:	cmp    eax,0x12
  422d20:	jb     0x422d13
  422d22:	mov    esi,eax
  422d24:	shl    esi,0x3
  422d27:	cmp    ecx,DWORD PTR [esi+0x45c1c8]
  422d2d:	jne    0x422e56
  422d33:	mov    eax,ds:0x45cabc
  422d38:	cmp    eax,0x1
  422d3b:	je     0x422e31
  422d41:	cmp    eax,edx
  422d43:	jne    0x422d52
  422d45:	cmp    DWORD PTR ds:0x45c1c4,0x1
  422d4c:	je     0x422e31
  422d52:	cmp    ecx,0xfc
  422d58:	je     0x422e56
  422d5e:	push   0x104
  422d63:	lea    eax,[ebp-0x10c]
  422d69:	push   eax
  422d6a:	push   edx
  422d6b:	mov    BYTE PTR [ebp-0x8],dl
  422d6e:	call   DWORD PTR ds:0x42803c
  422d74:	test   eax,eax
  422d76:	jne    0x422d8b
  422d78:	lea    eax,[ebp-0x10c]
  422d7e:	push   0x428484
  422d83:	push   eax
  422d84:	call   0x423c40
  422d89:	pop    ecx
  422d8a:	pop    ecx
  422d8b:	lea    eax,[ebp-0x10c]
  422d91:	push   eax
  422d92:	lea    edi,[ebp-0x10c]
  422d98:	call   0x423e70
  422d9d:	inc    eax
  422d9e:	cmp    eax,0x3c
  422da1:	pop    ecx
  422da2:	jbe    0x422dcd
  422da4:	lea    eax,[ebp-0x10c]
  422daa:	push   eax
  422dab:	call   0x423e70
  422db0:	mov    edi,eax
  422db2:	lea    eax,[ebp-0x10c]
  422db8:	sub    eax,0x3b
  422dbb:	push   0x3
  422dbd:	add    edi,eax
  422dbf:	push   0x428480
  422dc4:	push   edi
  422dc5:	call   0x423d40
  422dca:	add    esp,0x10
  422dcd:	push   edi
  422dce:	call   0x423e70
  422dd3:	push   DWORD PTR [esi+0x45c1cc]
  422dd9:	mov    ebx,eax
  422ddb:	call   0x423e70
  422de0:	lea    eax,[ebx+eax*1+0x1c]
  422de4:	pop    ecx
  422de5:	add    eax,0x3
  422de8:	pop    ecx
  422de9:	and    eax,0xfffffffc
  422dec:	call   0x4238b0
  422df1:	mov    ebx,esp
  422df3:	push   0x428464
  422df8:	push   ebx
  422df9:	call   0x423c40
  422dfe:	push   edi
  422dff:	push   ebx
  422e00:	call   0x423c50
  422e05:	push   0x428460
  422e0a:	push   ebx
  422e0b:	call   0x423c50
  422e10:	push   DWORD PTR [esi+0x45c1cc]
  422e16:	push   ebx
  422e17:	call   0x423c50
  422e1c:	push   0x12010
  422e21:	push   0x428438
  422e26:	push   ebx
  422e27:	call   0x423b42
  422e2c:	add    esp,0x2c
  422e2f:	jmp    0x422e56
  422e31:	push   edx
  422e32:	lea    eax,[ebp+0x8]
  422e35:	push   eax
  422e36:	lea    esi,[esi+0x45c1cc]
  422e3c:	push   DWORD PTR [esi]
  422e3e:	call   0x423e70
  422e43:	pop    ecx
  422e44:	push   eax
  422e45:	push   DWORD PTR [esi]
  422e47:	push   0xfffffff4
  422e49:	call   DWORD PTR ds:0x428038
  422e4f:	push   eax
  422e50:	call   DWORD PTR ds:0x428034
  422e56:	lea    esp,[ebp-0x118]
  422e5c:	mov    ecx,DWORD PTR [ebp-0x4]
  422e5f:	xor    ecx,DWORD PTR [ebp+0x4]
  422e62:	call   0x423f2c
  422e67:	pop    edi
  422e68:	pop    esi
  422e69:	pop    ebx
  422e6a:	leave  
  422e6b:	ret    
  422e6c:	mov    eax,ds:0x45cabc
  422e71:	cmp    eax,0x1
  422e74:	je     0x422e83
  422e76:	test   eax,eax
  422e78:	jne    0x422ea4
  422e7a:	cmp    DWORD PTR ds:0x45c1c4,0x1
  422e81:	jne    0x422ea4
  422e83:	push   0xfc
  422e88:	call   0x422cf5
  422e8d:	mov    eax,ds:0x45cb08
  422e92:	test   eax,eax
  422e94:	pop    ecx
  422e95:	je     0x422e99
  422e97:	call   eax
  422e99:	push   0xff
  422e9e:	call   0x422cf5
  422ea3:	pop    ecx
  422ea4:	ret    
  422ea5:	push   ebp
  422ea6:	mov    ebp,esp
  422ea8:	push   ecx
  422ea9:	push   ebx
  422eaa:	push   esi
  422eab:	push   edi
  422eac:	call   0x42370d
  422eb1:	mov    edi,DWORD PTR [ebp+0x8]
  422eb4:	mov    esi,eax
  422eb6:	mov    edx,DWORD PTR [esi+0x54]
  422eb9:	mov    eax,ds:0x45c2dc
  422ebe:	mov    ecx,edx
  422ec0:	cmp    DWORD PTR [ecx],edi
  422ec2:	je     0x422ed1
  422ec4:	lea    ebx,[eax+eax*2]
  422ec7:	add    ecx,0xc
  422eca:	lea    ebx,[edx+ebx*4]
  422ecd:	cmp    ecx,ebx
  422ecf:	jb     0x422ec0
  422ed1:	lea    eax,[eax+eax*2]
  422ed4:	lea    eax,[edx+eax*4]
  422ed7:	cmp    ecx,eax
  422ed9:	jae    0x422edf
  422edb:	cmp    DWORD PTR [ecx],edi
  422edd:	je     0x422ee1
  422edf:	xor    ecx,ecx
  422ee1:	test   ecx,ecx
  422ee3:	je     0x422ffb
  422ee9:	mov    ebx,DWORD PTR [ecx+0x8]
  422eec:	test   ebx,ebx
  422eee:	mov    DWORD PTR [ebp+0x8],ebx
  422ef1:	je     0x422ffb
  422ef7:	cmp    ebx,0x5
  422efa:	jne    0x422f08
  422efc:	and    DWORD PTR [ecx+0x8],0x0
  422f00:	xor    eax,eax
  422f02:	inc    eax
  422f03:	jmp    0x423004
  422f08:	cmp    ebx,0x1
  422f0b:	je     0x422ff6
  422f11:	mov    eax,DWORD PTR [esi+0x58]
  422f14:	mov    DWORD PTR [ebp-0x4],eax
  422f17:	mov    eax,DWORD PTR [ebp+0xc]
  422f1a:	mov    DWORD PTR [esi+0x58],eax
  422f1d:	mov    eax,DWORD PTR [ecx+0x4]
  422f20:	cmp    eax,0x8
  422f23:	jne    0x422fe8
  422f29:	mov    edx,DWORD PTR ds:0x45c2d0
  422f2f:	mov    eax,ds:0x45c2d4
  422f34:	add    eax,edx
  422f36:	cmp    edx,eax
  422f38:	jge    0x422f61
  422f3a:	lea    eax,[edx+edx*2]
  422f3d:	shl    eax,0x2
  422f40:	mov    edi,DWORD PTR [esi+0x54]
  422f43:	and    DWORD PTR [eax+edi*1+0x8],0x0
  422f48:	mov    edi,DWORD PTR ds:0x45c2d0
  422f4e:	mov    ebx,DWORD PTR ds:0x45c2d4
  422f54:	inc    edx
  422f55:	add    ebx,edi
  422f57:	add    eax,0xc
  422f5a:	cmp    edx,ebx
  422f5c:	jl     0x422f40
  422f5e:	mov    ebx,DWORD PTR [ebp+0x8]
  422f61:	mov    ecx,DWORD PTR [ecx]
  422f63:	cmp    ecx,0xc000008e
  422f69:	mov    edi,DWORD PTR [esi+0x5c]
  422f6c:	jne    0x422f77
  422f6e:	mov    DWORD PTR [esi+0x5c],0x83
  422f75:	jmp    0x422fdb
  422f77:	cmp    ecx,0xc0000090
  422f7d:	jne    0x422f88
  422f7f:	mov    DWORD PTR [esi+0x5c],0x81
  422f86:	jmp    0x422fdb
  422f88:	cmp    ecx,0xc0000091
  422f8e:	jne    0x422f99
  422f90:	mov    DWORD PTR [esi+0x5c],0x84
  422f97:	jmp    0x422fdb
  422f99:	cmp    ecx,0xc0000093
  422f9f:	jne    0x422faa
  422fa1:	mov    DWORD PTR [esi+0x5c],0x85
  422fa8:	jmp    0x422fdb
  422faa:	cmp    ecx,0xc000008d
  422fb0:	jne    0x422fbb
  422fb2:	mov    DWORD PTR [esi+0x5c],0x82
  422fb9:	jmp    0x422fdb
  422fbb:	cmp    ecx,0xc000008f
  422fc1:	jne    0x422fcc
  422fc3:	mov    DWORD PTR [esi+0x5c],0x86
  422fca:	jmp    0x422fdb
  422fcc:	cmp    ecx,0xc0000092
  422fd2:	jne    0x422fdb
  422fd4:	mov    DWORD PTR [esi+0x5c],0x8a
  422fdb:	push   DWORD PTR [esi+0x5c]
  422fde:	push   0x8
  422fe0:	call   ebx
  422fe2:	pop    ecx
  422fe3:	mov    DWORD PTR [esi+0x5c],edi
  422fe6:	jmp    0x422fef
  422fe8:	and    DWORD PTR [ecx+0x8],0x0
  422fec:	push   eax
  422fed:	call   ebx
  422fef:	mov    eax,DWORD PTR [ebp-0x4]
  422ff2:	pop    ecx
  422ff3:	mov    DWORD PTR [esi+0x58],eax
  422ff6:	or     eax,0xffffffff
  422ff9:	jmp    0x423004
  422ffb:	push   DWORD PTR [ebp+0xc]
  422ffe:	call   DWORD PTR ds:0x428040
  423004:	pop    edi
  423005:	pop    esi
  423006:	pop    ebx
  423007:	leave  
  423008:	ret    
  423009:	cmp    DWORD PTR ds:0x45d26c,0x0
  423010:	jne    0x423017
  423012:	call   0x42444c
  423017:	push   esi
  423018:	mov    esi,DWORD PTR ds:0x45d274
  42301e:	test   esi,esi
  423020:	jne    0x423029
  423022:	mov    esi,0x42849b
  423027:	jmp    0x42306e
  423029:	mov    al,BYTE PTR [esi]
  42302b:	cmp    al,0x22
  42302d:	jne    0x423057
  42302f:	inc    esi
  423030:	mov    al,BYTE PTR [esi]
  423032:	cmp    al,0x22
  423034:	je     0x423067
  423036:	test   al,al
  423038:	je     0x423050
  42303a:	movzx  eax,al
  42303d:	push   eax
  42303e:	call   0x423f6b
  423043:	test   eax,eax
  423045:	pop    ecx
  423046:	je     0x423049
  423048:	inc    esi
  423049:	inc    esi
  42304a:	mov    al,BYTE PTR [esi]
  42304c:	cmp    al,0x22
  42304e:	jne    0x423036
  423050:	cmp    BYTE PTR [esi],0x22
  423053:	jne    0x423068
  423055:	jmp    0x423067
  423057:	cmp    al,0x20
  423059:	jbe    0x423068
  42305b:	inc    esi
  42305c:	cmp    BYTE PTR [esi],0x20
  42305f:	ja     0x42305b
  423061:	jmp    0x423068
  423063:	cmp    al,0x20
  423065:	ja     0x42306e
  423067:	inc    esi
  423068:	mov    al,BYTE PTR [esi]
  42306a:	test   al,al
  42306c:	jne    0x423063
  42306e:	mov    eax,esi
  423070:	pop    esi
  423071:	ret    
  423072:	push   ebx
  423073:	xor    ebx,ebx
  423075:	cmp    DWORD PTR ds:0x45d26c,ebx
  42307b:	push   esi
  42307c:	push   edi
  42307d:	jne    0x423084
  42307f:	call   0x42444c
  423084:	mov    esi,DWORD PTR ds:0x45cab4
  42308a:	xor    edi,edi
  42308c:	cmp    esi,ebx
  42308e:	jne    0x4230a2
  423090:	jmp    0x4230c2
  423092:	cmp    al,0x3d
  423094:	je     0x423097
  423096:	inc    edi
  423097:	push   esi
  423098:	call   0x423e70
  42309d:	pop    ecx
  42309e:	lea    esi,[esi+eax*1+0x1]
  4230a2:	mov    al,BYTE PTR [esi]
  4230a4:	cmp    al,bl
  4230a6:	jne    0x423092
  4230a8:	lea    eax,[edi*4+0x4]
  4230af:	push   eax
  4230b0:	call   0x424582
  4230b5:	mov    edi,eax
  4230b7:	cmp    edi,ebx
  4230b9:	pop    ecx
  4230ba:	mov    DWORD PTR ds:0x45cae4,edi
  4230c0:	jne    0x4230c7
  4230c2:	or     eax,0xffffffff
  4230c5:	jmp    0x42311f
  4230c7:	mov    esi,DWORD PTR ds:0x45cab4
  4230cd:	push   ebp
  4230ce:	jmp    0x4230fa
  4230d0:	push   esi
  4230d1:	call   0x423e70
  4230d6:	mov    ebp,eax
  4230d8:	inc    ebp
  4230d9:	cmp    BYTE PTR [esi],0x3d
  4230dc:	pop    ecx
  4230dd:	je     0x4230f8
  4230df:	push   ebp
  4230e0:	call   0x424582
  4230e5:	cmp    eax,ebx
  4230e7:	pop    ecx
  4230e8:	mov    DWORD PTR [edi],eax
  4230ea:	je     0x423123
  4230ec:	push   esi
  4230ed:	push   eax
  4230ee:	call   0x423c40
  4230f3:	pop    ecx
  4230f4:	pop    ecx
  4230f5:	add    edi,0x4
  4230f8:	add    esi,ebp
  4230fa:	cmp    BYTE PTR [esi],bl
  4230fc:	jne    0x4230d0
  4230fe:	push   DWORD PTR ds:0x45cab4
  423104:	call   0x42446a
  423109:	mov    DWORD PTR ds:0x45cab4,ebx
  42310f:	mov    DWORD PTR [edi],ebx
  423111:	mov    DWORD PTR ds:0x45d260,0x1
  42311b:	xor    eax,eax
  42311d:	pop    ecx
  42311e:	pop    ebp
  42311f:	pop    edi
  423120:	pop    esi
  423121:	pop    ebx
  423122:	ret    
  423123:	push   DWORD PTR ds:0x45cae4
  423129:	call   0x42446a
  42312e:	mov    DWORD PTR ds:0x45cae4,ebx
  423134:	or     eax,0xffffffff
  423137:	jmp    0x42311d
  423139:	push   ebp
  42313a:	mov    ebp,esp
  42313c:	push   ecx
  42313d:	push   ebx
  42313e:	mov    ebx,DWORD PTR [ebp+0xc]
  423141:	xor    edx,edx
  423143:	cmp    DWORD PTR [ebp+0x8],edx
  423146:	push   edi
  423147:	mov    DWORD PTR [esi],edx
  423149:	mov    edi,ecx
  42314b:	mov    DWORD PTR [ebx],0x1
  423151:	je     0x42315c
  423153:	mov    ecx,DWORD PTR [ebp+0x8]
  423156:	add    DWORD PTR [ebp+0x8],0x4
  42315a:	mov    DWORD PTR [ecx],edi
  42315c:	cmp    BYTE PTR [eax],0x22
  42315f:	jne    0x42316f
  423161:	xor    ecx,ecx
  423163:	test   edx,edx
  423165:	sete   cl
  423168:	inc    eax
  423169:	mov    edx,ecx
  42316b:	mov    cl,0x22
  42316d:	jmp    0x42319c
  42316f:	inc    DWORD PTR [esi]
  423171:	test   edi,edi
  423173:	je     0x42317a
  423175:	mov    cl,BYTE PTR [eax]
  423177:	mov    BYTE PTR [edi],cl
  423179:	inc    edi
  42317a:	mov    cl,BYTE PTR [eax]
  42317c:	movzx  ebx,cl
  42317f:	inc    eax
  423180:	test   BYTE PTR [ebx+0x45cf21],0x4
  423187:	je     0x423195
  423189:	inc    DWORD PTR [esi]
  42318b:	test   edi,edi
  42318d:	je     0x423194
  42318f:	mov    bl,BYTE PTR [eax]
  423191:	mov    BYTE PTR [edi],bl
  423193:	inc    edi
  423194:	inc    eax
  423195:	test   cl,cl
  423197:	mov    ebx,DWORD PTR [ebp+0xc]
  42319a:	je     0x4231ce
  42319c:	test   edx,edx
  42319e:	jne    0x42315c
  4231a0:	cmp    cl,0x20
  4231a3:	je     0x4231aa
  4231a5:	cmp    cl,0x9
  4231a8:	jne    0x42315c
  4231aa:	test   edi,edi
  4231ac:	je     0x4231b2
  4231ae:	and    BYTE PTR [edi-0x1],0x0
  4231b2:	and    DWORD PTR [ebp-0x4],0x0
  4231b6:	cmp    BYTE PTR [eax],0x0
  4231b9:	je     0x423295
  4231bf:	mov    cl,BYTE PTR [eax]
  4231c1:	cmp    cl,0x20
  4231c4:	je     0x4231cb
  4231c6:	cmp    cl,0x9
  4231c9:	jne    0x4231d1
  4231cb:	inc    eax
  4231cc:	jmp    0x4231bf
  4231ce:	dec    eax
  4231cf:	jmp    0x4231b2
  4231d1:	cmp    BYTE PTR [eax],0x0
  4231d4:	je     0x423295
  4231da:	cmp    DWORD PTR [ebp+0x8],0x0
  4231de:	je     0x4231e9
  4231e0:	mov    ecx,DWORD PTR [ebp+0x8]
  4231e3:	add    DWORD PTR [ebp+0x8],0x4
  4231e7:	mov    DWORD PTR [ecx],edi
  4231e9:	inc    DWORD PTR [ebx]
  4231eb:	xor    ebx,ebx
  4231ed:	inc    ebx
  4231ee:	xor    edx,edx
  4231f0:	jmp    0x4231f4
  4231f2:	inc    eax
  4231f3:	inc    edx
  4231f4:	cmp    BYTE PTR [eax],0x5c
  4231f7:	je     0x4231f2
  4231f9:	cmp    BYTE PTR [eax],0x22
  4231fc:	jne    0x423224
  4231fe:	test   dl,0x1
  423201:	jne    0x423222
  423203:	cmp    DWORD PTR [ebp-0x4],0x0
  423207:	je     0x423215
  423209:	lea    ecx,[eax+0x1]
  42320c:	cmp    BYTE PTR [ecx],0x22
  42320f:	jne    0x423215
  423211:	mov    eax,ecx
  423213:	jmp    0x423217
  423215:	xor    ebx,ebx
  423217:	xor    ecx,ecx
  423219:	cmp    DWORD PTR [ebp-0x4],ecx
  42321c:	sete   cl
  42321f:	mov    DWORD PTR [ebp-0x4],ecx
  423222:	shr    edx,1
  423224:	test   edx,edx
  423226:	je     0x423235
  423228:	test   edi,edi
  42322a:	je     0x423230
  42322c:	mov    BYTE PTR [edi],0x5c
  42322f:	inc    edi
  423230:	inc    DWORD PTR [esi]
  423232:	dec    edx
  423233:	jne    0x423228
  423235:	mov    cl,BYTE PTR [eax]
  423237:	test   cl,cl
  423239:	je     0x423283
  42323b:	cmp    DWORD PTR [ebp-0x4],0x0
  42323f:	jne    0x42324b
  423241:	cmp    cl,0x20
  423244:	je     0x423283
  423246:	cmp    cl,0x9
  423249:	je     0x423283
  42324b:	test   ebx,ebx
  42324d:	je     0x42327d
  42324f:	test   edi,edi
  423251:	je     0x42326c
  423253:	movzx  edx,cl
  423256:	test   BYTE PTR [edx+0x45cf21],0x4
  42325d:	je     0x423265
  42325f:	mov    BYTE PTR [edi],cl
  423261:	inc    edi
  423262:	inc    eax
  423263:	inc    DWORD PTR [esi]
  423265:	mov    cl,BYTE PTR [eax]
  423267:	mov    BYTE PTR [edi],cl
  423269:	inc    edi
  42326a:	jmp    0x42327b
  42326c:	movzx  ecx,cl
  42326f:	test   BYTE PTR [ecx+0x45cf21],0x4
  423276:	je     0x42327b
  423278:	inc    eax
  423279:	inc    DWORD PTR [esi]
  42327b:	inc    DWORD PTR [esi]
  42327d:	inc    eax
  42327e:	jmp    0x4231eb
  423283:	test   edi,edi
  423285:	je     0x42328b
  423287:	and    BYTE PTR [edi],0x0
  42328a:	inc    edi
  42328b:	inc    DWORD PTR [esi]
  42328d:	mov    ebx,DWORD PTR [ebp+0xc]
  423290:	jmp    0x4231b6
  423295:	mov    eax,DWORD PTR [ebp+0x8]
  423298:	test   eax,eax
  42329a:	je     0x42329f
  42329c:	and    DWORD PTR [eax],0x0
  42329f:	inc    DWORD PTR [ebx]
  4232a1:	pop    edi
  4232a2:	pop    ebx
  4232a3:	leave  
  4232a4:	ret    
  4232a5:	push   ebp
  4232a6:	mov    ebp,esp
  4232a8:	push   ecx
  4232a9:	push   ecx
  4232aa:	push   ebx
  4232ab:	push   esi
  4232ac:	push   edi
  4232ad:	xor    edi,edi
  4232af:	cmp    DWORD PTR ds:0x45d26c,edi
  4232b5:	jne    0x4232bc
  4232b7:	call   0x42444c
  4232bc:	and    BYTE PTR ds:0x45cc14,0x0
  4232c3:	push   0x104
  4232c8:	mov    esi,0x45cb10
  4232cd:	push   esi
  4232ce:	push   edi
  4232cf:	call   DWORD PTR ds:0x42803c
  4232d5:	mov    eax,ds:0x45d274
  4232da:	cmp    eax,edi
  4232dc:	mov    DWORD PTR ds:0x45caf4,esi
  4232e2:	je     0x4232eb
  4232e4:	cmp    BYTE PTR [eax],0x0
  4232e7:	mov    ebx,eax
  4232e9:	jne    0x4232ed
  4232eb:	mov    ebx,esi
  4232ed:	lea    eax,[ebp-0x4]
  4232f0:	push   eax
  4232f1:	push   edi
  4232f2:	lea    esi,[ebp-0x8]
  4232f5:	xor    ecx,ecx
  4232f7:	mov    eax,ebx
  4232f9:	call   0x423139
  4232fe:	mov    esi,DWORD PTR [ebp-0x4]
  423301:	mov    eax,DWORD PTR [ebp-0x8]
  423304:	shl    esi,0x2
  423307:	add    eax,esi
  423309:	push   eax
  42330a:	call   0x424582
  42330f:	mov    edi,eax
  423311:	add    esp,0xc
  423314:	test   edi,edi
  423316:	jne    0x42331d
  423318:	or     eax,0xffffffff
  42331b:	jmp    0x423342
  42331d:	lea    eax,[ebp-0x4]
  423320:	push   eax
  423321:	lea    ecx,[esi+edi*1]
  423324:	push   edi
  423325:	lea    esi,[ebp-0x8]
  423328:	mov    eax,ebx
  42332a:	call   0x423139
  42332f:	mov    eax,DWORD PTR [ebp-0x4]
  423332:	dec    eax
  423333:	pop    ecx
  423334:	mov    ds:0x45cad8,eax
  423339:	pop    ecx
  42333a:	mov    DWORD PTR ds:0x45cadc,edi
  423340:	xor    eax,eax
  423342:	pop    edi
  423343:	pop    esi
  423344:	pop    ebx
  423345:	leave  
  423346:	ret    
  423347:	push   ecx
  423348:	push   ecx
  423349:	mov    eax,ds:0x45cc18
  42334e:	push   ebx
  42334f:	push   ebp
  423350:	push   esi
  423351:	push   edi
  423352:	mov    edi,DWORD PTR ds:0x428054
  423358:	xor    ebx,ebx
  42335a:	xor    esi,esi
  42335c:	cmp    eax,ebx
  42335e:	push   0x2
  423360:	pop    ebp
  423361:	jne    0x423390
  423363:	call   edi
  423365:	mov    esi,eax
  423367:	cmp    esi,ebx
  423369:	je     0x423377
  42336b:	mov    DWORD PTR ds:0x45cc18,0x1
  423375:	jmp    0x423395
  423377:	call   DWORD PTR ds:0x428010
  42337d:	cmp    eax,0x78
  423380:	jne    0x42338b
  423382:	mov    eax,ebp
  423384:	mov    ds:0x45cc18,eax
  423389:	jmp    0x423390
  42338b:	mov    eax,ds:0x45cc18
  423390:	cmp    eax,0x1
  423393:	jne    0x423412
  423395:	cmp    esi,ebx
  423397:	jne    0x4233a1
  423399:	call   edi
  42339b:	mov    esi,eax
  42339d:	cmp    esi,ebx
  42339f:	je     0x42341a
  4233a1:	cmp    WORD PTR [esi],bx
  4233a4:	mov    eax,esi
  4233a6:	je     0x4233b6
  4233a8:	add    eax,ebp
  4233aa:	cmp    WORD PTR [eax],bx
  4233ad:	jne    0x4233a8
  4233af:	add    eax,ebp
  4233b1:	cmp    WORD PTR [eax],bx
  4233b4:	jne    0x4233a8
  4233b6:	mov    edi,DWORD PTR ds:0x428050
  4233bc:	push   ebx
  4233bd:	push   ebx
  4233be:	push   ebx
  4233bf:	sub    eax,esi
  4233c1:	push   ebx
  4233c2:	sar    eax,1
  4233c4:	inc    eax
  4233c5:	push   eax
  4233c6:	push   esi
  4233c7:	push   ebx
  4233c8:	push   ebx
  4233c9:	mov    DWORD PTR [esp+0x34],eax
  4233cd:	call   edi
  4233cf:	mov    ebp,eax
  4233d1:	cmp    ebp,ebx
  4233d3:	je     0x423407
  4233d5:	push   ebp
  4233d6:	call   0x424582
  4233db:	cmp    eax,ebx
  4233dd:	pop    ecx
  4233de:	mov    DWORD PTR [esp+0x10],eax
  4233e2:	je     0x423407
  4233e4:	push   ebx
  4233e5:	push   ebx
  4233e6:	push   ebp
  4233e7:	push   eax
  4233e8:	push   DWORD PTR [esp+0x24]
  4233ec:	push   esi
  4233ed:	push   ebx
  4233ee:	push   ebx
  4233ef:	call   edi
  4233f1:	test   eax,eax
  4233f3:	jne    0x423403
  4233f5:	push   DWORD PTR [esp+0x10]
  4233f9:	call   0x42446a
  4233fe:	pop    ecx
  4233ff:	mov    DWORD PTR [esp+0x10],ebx
  423403:	mov    ebx,DWORD PTR [esp+0x10]
  423407:	push   esi
  423408:	call   DWORD PTR ds:0x42804c
  42340e:	mov    eax,ebx
  423410:	jmp    0x423462
  423412:	cmp    eax,ebp
  423414:	je     0x42341e
  423416:	cmp    eax,ebx
  423418:	je     0x42341e
  42341a:	xor    eax,eax
  42341c:	jmp    0x423462
  42341e:	call   DWORD PTR ds:0x428048
  423424:	mov    esi,eax
  423426:	cmp    esi,ebx
  423428:	je     0x42341a
  42342a:	cmp    BYTE PTR [esi],bl
  42342c:	je     0x423438
  42342e:	inc    eax
  42342f:	cmp    BYTE PTR [eax],bl
  423431:	jne    0x42342e
  423433:	inc    eax
  423434:	cmp    BYTE PTR [eax],bl
  423436:	jne    0x42342e
  423438:	sub    eax,esi
  42343a:	inc    eax
  42343b:	mov    ebp,eax
  42343d:	push   ebp
  42343e:	call   0x424582
  423443:	mov    edi,eax
  423445:	cmp    edi,ebx
  423447:	pop    ecx
  423448:	jne    0x42344e
  42344a:	xor    edi,edi
  42344c:	jmp    0x423459
  42344e:	push   ebp
  42344f:	push   esi
  423450:	push   edi
  423451:	call   0x4245a0
  423456:	add    esp,0xc
  423459:	push   esi
  42345a:	call   DWORD PTR ds:0x428044
  423460:	mov    eax,edi
  423462:	pop    edi
  423463:	pop    esi
  423464:	pop    ebp
  423465:	pop    ebx
  423466:	pop    ecx
  423467:	pop    ecx
  423468:	ret    
  423469:	sub    esp,0x48
  42346c:	push   ebx
  42346d:	mov    ebx,0x480
  423472:	push   ebx
  423473:	call   0x424582
  423478:	test   eax,eax
  42347a:	pop    ecx
  42347b:	jne    0x423485
  42347d:	or     eax,0xffffffff
  423480:	jmp    0x423662
  423485:	mov    ds:0x45d160,eax
  42348a:	mov    DWORD PTR ds:0x45d148,0x20
  423494:	lea    ecx,[eax+0x480]
  42349a:	jmp    0x4234ba
  42349c:	and    BYTE PTR [eax+0x4],0x0
  4234a0:	or     DWORD PTR [eax],0xffffffff
  4234a3:	and    DWORD PTR [eax+0x8],0x0
  4234a7:	mov    BYTE PTR [eax+0x5],0xa
  4234ab:	mov    ecx,DWORD PTR ds:0x45d160
  4234b1:	add    eax,0x24
  4234b4:	add    ecx,0x480
  4234ba:	cmp    eax,ecx
  4234bc:	jb     0x42349c
  4234be:	push   ebp
  4234bf:	push   esi
  4234c0:	push   edi
  4234c1:	lea    eax,[esp+0x14]
  4234c5:	push   eax
  4234c6:	call   DWORD PTR ds:0x42801c
  4234cc:	cmp    WORD PTR [esp+0x46],0x0
  4234d2:	je     0x4235c1
  4234d8:	mov    eax,DWORD PTR [esp+0x48]
  4234dc:	test   eax,eax
  4234de:	je     0x4235c1
  4234e4:	mov    edi,DWORD PTR [eax]
  4234e6:	lea    ebp,[eax+0x4]
  4234e9:	lea    eax,[edi+ebp*1]
  4234ec:	mov    DWORD PTR [esp+0x10],eax
  4234f0:	mov    eax,0x800
  4234f5:	cmp    edi,eax
  4234f7:	jl     0x4234fb
  4234f9:	mov    edi,eax
  4234fb:	cmp    DWORD PTR ds:0x45d148,edi
  423501:	jge    0x423551
  423503:	mov    esi,0x45d164
  423508:	push   ebx
  423509:	call   0x424582
  42350e:	test   eax,eax
  423510:	pop    ecx
  423511:	je     0x42354b
  423513:	add    DWORD PTR ds:0x45d148,0x20
  42351a:	mov    DWORD PTR [esi],eax
  42351c:	lea    ecx,[eax+0x480]
  423522:	jmp    0x42353a
  423524:	and    BYTE PTR [eax+0x4],0x0
  423528:	or     DWORD PTR [eax],0xffffffff
  42352b:	and    DWORD PTR [eax+0x8],0x0
  42352f:	mov    BYTE PTR [eax+0x5],0xa
  423533:	mov    ecx,DWORD PTR [esi]
  423535:	add    eax,0x24
  423538:	add    ecx,ebx
  42353a:	cmp    eax,ecx
  42353c:	jb     0x423524
  42353e:	add    esi,0x4
  423541:	cmp    DWORD PTR ds:0x45d148,edi
  423547:	jl     0x423508
  423549:	jmp    0x423551
  42354b:	mov    edi,DWORD PTR ds:0x45d148
  423551:	xor    ebx,ebx
  423553:	test   edi,edi
  423555:	jle    0x4235c1
  423557:	mov    eax,DWORD PTR [esp+0x10]
  42355b:	mov    eax,DWORD PTR [eax]
  42355d:	cmp    eax,0xffffffff
  423560:	je     0x4235b6
  423562:	mov    cl,BYTE PTR [ebp+0x0]
  423565:	test   cl,0x1
  423568:	je     0x4235b6
  42356a:	test   cl,0x8
  42356d:	jne    0x42357a
  42356f:	push   eax
  423570:	call   DWORD PTR ds:0x42805c
  423576:	test   eax,eax
  423578:	je     0x4235b6
  42357a:	mov    ecx,ebx
  42357c:	mov    eax,ebx
  42357e:	and    eax,0x1f
  423581:	lea    eax,[eax+eax*8]
  423584:	sar    ecx,0x5
  423587:	mov    ecx,DWORD PTR [ecx*4+0x45d160]
  42358e:	lea    esi,[ecx+eax*4]
  423591:	mov    eax,DWORD PTR [esp+0x10]
  423595:	mov    eax,DWORD PTR [eax]
  423597:	mov    DWORD PTR [esi],eax
  423599:	mov    al,BYTE PTR [ebp+0x0]
  42359c:	mov    BYTE PTR [esi+0x4],al
  42359f:	lea    eax,[esi+0xc]
  4235a2:	push   0xfa0
  4235a7:	push   eax
  4235a8:	call   0x4248ed
  4235ad:	test   eax,eax
  4235af:	pop    ecx
  4235b0:	pop    ecx
  4235b1:	je     0x4235e1
  4235b3:	inc    DWORD PTR [esi+0x8]
  4235b6:	add    DWORD PTR [esp+0x10],0x4
  4235bb:	inc    ebx
  4235bc:	inc    ebp
  4235bd:	cmp    ebx,edi
  4235bf:	jl     0x423557
  4235c1:	xor    ebx,ebx
  4235c3:	mov    ecx,DWORD PTR ds:0x45d160
  4235c9:	lea    eax,[ebx+ebx*8]
  4235cc:	lea    esi,[ecx+eax*4]
  4235cf:	cmp    DWORD PTR [esi],0xffffffff
  4235d2:	jne    0x423643
  4235d4:	test   ebx,ebx
  4235d6:	mov    BYTE PTR [esi+0x4],0x81
  4235da:	jne    0x4235e6
  4235dc:	push   0xfffffff6
  4235de:	pop    eax
  4235df:	jmp    0x4235f0
  4235e1:	or     eax,0xffffffff
  4235e4:	jmp    0x42365f
  4235e6:	mov    eax,ebx
  4235e8:	dec    eax
  4235e9:	neg    eax
  4235eb:	sbb    eax,eax
  4235ed:	add    eax,0xfffffff5
  4235f0:	push   eax
  4235f1:	call   DWORD PTR ds:0x428038
  4235f7:	mov    edi,eax
  4235f9:	cmp    edi,0xffffffff
  4235fc:	je     0x42363d
  4235fe:	push   edi
  4235ff:	call   DWORD PTR ds:0x42805c
  423605:	test   eax,eax
  423607:	je     0x42363d
  423609:	and    eax,0xff
  42360e:	cmp    eax,0x2
  423611:	mov    DWORD PTR [esi],edi
  423613:	jne    0x42361b
  423615:	or     BYTE PTR [esi+0x4],0x40
  423619:	jmp    0x423624
  42361b:	cmp    eax,0x3
  42361e:	jne    0x423624
  423620:	or     BYTE PTR [esi+0x4],0x8
  423624:	lea    eax,[esi+0xc]
  423627:	push   0xfa0
  42362c:	push   eax
  42362d:	call   0x4248ed
  423632:	test   eax,eax
  423634:	pop    ecx
  423635:	pop    ecx
  423636:	je     0x4235e1
  423638:	inc    DWORD PTR [esi+0x8]
  42363b:	jmp    0x423647
  42363d:	or     BYTE PTR [esi+0x4],0x40
  423641:	jmp    0x423647
  423643:	or     BYTE PTR [esi+0x4],0x80
  423647:	inc    ebx
  423648:	cmp    ebx,0x3
  42364b:	jl     0x4235c3
  423651:	push   DWORD PTR ds:0x45d148
  423657:	call   DWORD PTR ds:0x428058
  42365d:	xor    eax,eax
  42365f:	pop    edi
  423660:	pop    esi
  423661:	pop    ebp
  423662:	pop    ebx
  423663:	add    esp,0x48
  423666:	ret    
  423667:	push   0xc
  423669:	push   0x4284a0
  42366e:	call   0x423858
  423673:	mov    DWORD PTR [ebp-0x1c],0x428ef8
  42367a:	cmp    DWORD PTR [ebp-0x1c],0x428ef8
  423681:	jae    0x4236a5
  423683:	and    DWORD PTR [ebp-0x4],0x0
  423687:	mov    eax,DWORD PTR [ebp-0x1c]
  42368a:	mov    eax,DWORD PTR [eax]
  42368c:	test   eax,eax
  42368e:	je     0x42369b
  423690:	call   eax
  423692:	jmp    0x42369b
  423694:	xor    eax,eax
  423696:	inc    eax
  423697:	ret    
  423698:	mov    esp,DWORD PTR [ebp-0x18]
  42369b:	or     DWORD PTR [ebp-0x4],0xffffffff
  42369f:	add    DWORD PTR [ebp-0x1c],0x4
  4236a3:	jmp    0x42367a
  4236a5:	call   0x423893
  4236aa:	ret    
  4236ab:	push   0xc
  4236ad:	push   0x4284b0
  4236b2:	call   0x423858
  4236b7:	mov    DWORD PTR [ebp-0x1c],0x428f00
  4236be:	cmp    DWORD PTR [ebp-0x1c],0x428f00
  4236c5:	jae    0x4236e9
  4236c7:	and    DWORD PTR [ebp-0x4],0x0
  4236cb:	mov    eax,DWORD PTR [ebp-0x1c]
  4236ce:	mov    eax,DWORD PTR [eax]
  4236d0:	test   eax,eax
  4236d2:	je     0x4236df
  4236d4:	call   eax
  4236d6:	jmp    0x4236df
  4236d8:	xor    eax,eax
  4236da:	inc    eax
  4236db:	ret    
  4236dc:	mov    esp,DWORD PTR [ebp-0x18]
  4236df:	or     DWORD PTR [ebp-0x4],0xffffffff
  4236e3:	add    DWORD PTR [ebp-0x1c],0x4
  4236e7:	jmp    0x4236be
  4236e9:	call   0x423893
  4236ee:	ret    
  4236ef:	call   0x423936
  4236f4:	mov    eax,ds:0x45c304
  4236f9:	cmp    eax,0xffffffff
  4236fc:	je     0x42370c
  4236fe:	push   eax
  4236ff:	call   DWORD PTR ds:0x428064
  423705:	or     DWORD PTR ds:0x45c304,0xffffffff
  42370c:	ret    
  42370d:	push   ebx
  42370e:	push   esi
  42370f:	call   DWORD PTR ds:0x428010
  423715:	push   DWORD PTR ds:0x45c304
  42371b:	mov    ebx,eax
  42371d:	call   DWORD PTR ds:0x428074
  423723:	mov    esi,eax
  423725:	test   esi,esi
  423727:	jne    0x423772
  423729:	push   0x88
  42372e:	push   0x1
  423730:	call   0x424978
  423735:	mov    esi,eax
  423737:	test   esi,esi
  423739:	pop    ecx
  42373a:	pop    ecx
  42373b:	je     0x42376a
  42373d:	push   esi
  42373e:	push   DWORD PTR ds:0x45c304
  423744:	call   DWORD PTR ds:0x428070
  42374a:	test   eax,eax
  42374c:	je     0x42376a
  42374e:	mov    DWORD PTR [esi+0x54],0x45c258
  423755:	mov    DWORD PTR [esi+0x14],0x1
  42375c:	call   DWORD PTR ds:0x42806c
  423762:	or     DWORD PTR [esi+0x4],0xffffffff
  423766:	mov    DWORD PTR [esi],eax
  423768:	jmp    0x423772
  42376a:	push   0x10
  42376c:	call   0x422920
  423771:	pop    ecx
  423772:	push   ebx
  423773:	call   DWORD PTR ds:0x428068
  423779:	mov    eax,esi
  42377b:	pop    esi
  42377c:	pop    ebx
  42377d:	ret    
  42377e:	call   0x4238ed
  423783:	test   eax,eax
  423785:	je     0x423797
  423787:	call   DWORD PTR ds:0x428078
  42378d:	cmp    eax,0xffffffff
  423790:	mov    ds:0x45c304,eax
  423795:	jne    0x42379f
  423797:	call   0x4236ef
  42379c:	xor    eax,eax
  42379e:	ret    
  42379f:	push   esi
  4237a0:	push   0x88
  4237a5:	push   0x1
  4237a7:	call   0x424978
  4237ac:	mov    esi,eax
  4237ae:	test   esi,esi
  4237b0:	pop    ecx
  4237b1:	pop    ecx
  4237b2:	je     0x4237e4
  4237b4:	push   esi
  4237b5:	push   DWORD PTR ds:0x45c304
  4237bb:	call   DWORD PTR ds:0x428070
  4237c1:	test   eax,eax
  4237c3:	je     0x4237e4
  4237c5:	mov    DWORD PTR [esi+0x54],0x45c258
  4237cc:	mov    DWORD PTR [esi+0x14],0x1
  4237d3:	call   DWORD PTR ds:0x42806c
  4237d9:	or     DWORD PTR [esi+0x4],0xffffffff
  4237dd:	mov    DWORD PTR [esi],eax
  4237df:	xor    eax,eax
  4237e1:	inc    eax
  4237e2:	pop    esi
  4237e3:	ret    
  4237e4:	call   0x4236ef
  4237e9:	xor    eax,eax
  4237eb:	pop    esi
  4237ec:	ret    
  4237ed:	cmp    DWORD PTR ds:0x45cac4,0x2
  4237f4:	jne    0x423803
  4237f6:	cmp    DWORD PTR ds:0x45cad0,0x5
  4237fd:	jb     0x423803
  4237ff:	xor    eax,eax
  423801:	inc    eax
  423802:	ret    
  423803:	push   0x3
  423805:	pop    eax
  423806:	ret    
  423807:	xor    eax,eax
  423809:	cmp    DWORD PTR [esp+0x4],eax
  42380d:	push   0x0
  42380f:	sete   al
  423812:	push   0x1000
  423817:	push   eax
  423818:	call   DWORD PTR ds:0x428080
  42381e:	test   eax,eax
  423820:	mov    ds:0x45d140,eax
  423825:	je     0x423851
  423827:	call   0x4237ed
  42382c:	cmp    eax,0x3
  42382f:	mov    ds:0x45d144,eax
  423834:	jne    0x423854
  423836:	push   0x3f8
  42383b:	call   0x424bfa
  423840:	test   eax,eax
  423842:	pop    ecx
  423843:	jne    0x423854
  423845:	push   DWORD PTR ds:0x45d140
  42384b:	call   DWORD PTR ds:0x42807c
  423851:	xor    eax,eax
  423853:	ret    
  423854:	xor    eax,eax
  423856:	inc    eax
  423857:	ret    
  423858:	push   0x425728
  42385d:	mov    eax,fs:0x0
  423863:	push   eax
  423864:	mov    eax,DWORD PTR [esp+0x10]
  423868:	mov    DWORD PTR [esp+0x10],ebp
  42386c:	lea    ebp,[esp+0x10]
  423870:	sub    esp,eax
  423872:	push   ebx
  423873:	push   esi
  423874:	push   edi
  423875:	mov    eax,DWORD PTR [ebp-0x8]
  423878:	mov    DWORD PTR [ebp-0x18],esp
  42387b:	push   eax
  42387c:	mov    eax,DWORD PTR [ebp-0x4]
  42387f:	mov    DWORD PTR [ebp-0x4],0xffffffff
  423886:	mov    DWORD PTR [ebp-0x8],eax
  423889:	lea    eax,[ebp-0x10]
  42388c:	mov    fs:0x0,eax
  423892:	ret    
  423893:	mov    ecx,DWORD PTR [ebp-0x10]
  423896:	mov    DWORD PTR fs:0x0,ecx
  42389d:	pop    ecx
  42389e:	pop    edi
  42389f:	pop    esi
  4238a0:	pop    ebx
  4238a1:	leave  
  4238a2:	push   ecx
  4238a3:	ret    
  4238a4:	int3   
  4238a5:	int3   
  4238a6:	int3   
  4238a7:	int3   
  4238a8:	int3   
  4238a9:	int3   
  4238aa:	int3   
  4238ab:	int3   
  4238ac:	int3   
  4238ad:	int3   
  4238ae:	int3   
  4238af:	int3   
  4238b0:	cmp    eax,0x1000
  4238b5:	jae    0x4238c5
  4238b7:	neg    eax
  4238b9:	add    eax,esp
  4238bb:	add    eax,0x4
  4238be:	test   DWORD PTR [eax],eax
  4238c0:	xchg   esp,eax
  4238c1:	mov    eax,DWORD PTR [eax]
  4238c3:	push   eax
  4238c4:	ret    
  4238c5:	push   ecx
  4238c6:	lea    ecx,[esp+0x8]
  4238ca:	sub    ecx,0x1000
  4238d0:	sub    eax,0x1000
  4238d5:	test   DWORD PTR [ecx],eax
  4238d7:	cmp    eax,0x1000
  4238dc:	jae    0x4238ca
  4238de:	sub    ecx,eax
  4238e0:	mov    eax,esp
  4238e2:	test   DWORD PTR [ecx],eax
  4238e4:	mov    esp,ecx
  4238e6:	mov    ecx,DWORD PTR [eax]
  4238e8:	mov    eax,DWORD PTR [eax+0x4]
  4238eb:	push   eax
  4238ec:	ret    
  4238ed:	push   esi
  4238ee:	push   edi
  4238ef:	xor    esi,esi
  4238f1:	mov    edi,0x45cc20
  4238f6:	cmp    DWORD PTR [esi*8+0x45c314],0x1
  4238fe:	jne    0x42391e
  423900:	lea    eax,[esi*8+0x45c310]
  423907:	mov    DWORD PTR [eax],edi
  423909:	push   0xfa0
  42390e:	push   DWORD PTR [eax]
  423910:	add    edi,0x18
  423913:	call   0x4248ed
  423918:	test   eax,eax
  42391a:	pop    ecx
  42391b:	pop    ecx
  42391c:	je     0x42392a
  42391e:	inc    esi
  42391f:	cmp    esi,0x24
  423922:	jl     0x4238f6
  423924:	xor    eax,eax
  423926:	inc    eax
  423927:	pop    edi
  423928:	pop    esi
  423929:	ret    
  42392a:	and    DWORD PTR [esi*8+0x45c310],0x0
  423932:	xor    eax,eax
  423934:	jmp    0x423927
  423936:	push   ebx
  423937:	mov    ebx,DWORD PTR ds:0x428060
  42393d:	push   esi
  42393e:	mov    esi,0x45c310
  423943:	push   edi
  423944:	mov    edi,DWORD PTR [esi]
  423946:	test   edi,edi
  423948:	je     0x42395d
  42394a:	cmp    DWORD PTR [esi+0x4],0x1
  42394e:	je     0x42395d
  423950:	push   edi
  423951:	call   ebx
  423953:	push   edi
  423954:	call   0x42446a
  423959:	and    DWORD PTR [esi],0x0
  42395c:	pop    ecx
  42395d:	add    esi,0x8
  423960:	cmp    esi,0x45c430
  423966:	jl     0x423944
  423968:	mov    esi,0x45c310
  42396d:	pop    edi
  42396e:	mov    eax,DWORD PTR [esi]
  423970:	test   eax,eax
  423972:	je     0x42397d
  423974:	cmp    DWORD PTR [esi+0x4],0x1
  423978:	jne    0x42397d
  42397a:	push   eax
  42397b:	call   ebx
  42397d:	add    esi,0x8
  423980:	cmp    esi,0x45c430
  423986:	jl     0x42396e
  423988:	pop    esi
  423989:	pop    ebx
  42398a:	ret    
  42398b:	push   ebp
  42398c:	mov    ebp,esp
  42398e:	mov    eax,DWORD PTR [ebp+0x8]
  423991:	push   DWORD PTR [eax*8+0x45c310]
  423998:	call   DWORD PTR ds:0x42808c
  42399e:	pop    ebp
  42399f:	ret    
  4239a0:	push   ebp
  4239a1:	mov    ebp,esp
  4239a3:	push   esi
  4239a4:	mov    esi,DWORD PTR [ebp+0x8]
  4239a7:	lea    esi,[esi*8+0x45c310]
  4239ae:	cmp    DWORD PTR [esi],0x0
  4239b1:	je     0x4239b8
  4239b3:	xor    eax,eax
  4239b5:	inc    eax
  4239b6:	jmp    0x423a1c
  4239b8:	push   edi
  4239b9:	push   0x18
  4239bb:	call   0x424582
  4239c0:	mov    edi,eax
  4239c2:	test   edi,edi
  4239c4:	pop    ecx
  4239c5:	jne    0x4239d6
  4239c7:	call   0x425800
  4239cc:	mov    DWORD PTR [eax],0xc
  4239d2:	xor    eax,eax
  4239d4:	jmp    0x423a1b
  4239d6:	push   0xa
  4239d8:	call   0x423a1f
  4239dd:	cmp    DWORD PTR [esi],0x0
  4239e0:	pop    ecx
  4239e1:	jne    0x423a09
  4239e3:	push   0xfa0
  4239e8:	push   edi
  4239e9:	call   0x4248ed
  4239ee:	test   eax,eax
  4239f0:	pop    ecx
  4239f1:	pop    ecx
  4239f2:	jne    0x423a05
  4239f4:	push   edi
  4239f5:	call   0x42446a
  4239fa:	push   0xa
  4239fc:	call   0x42398b
  423a01:	pop    ecx
  423a02:	pop    ecx
  423a03:	jmp    0x4239c7
  423a05:	mov    DWORD PTR [esi],edi
  423a07:	jmp    0x423a10
  423a09:	push   edi
  423a0a:	call   0x42446a
  423a0f:	pop    ecx
  423a10:	push   0xa
  423a12:	call   0x42398b
  423a17:	xor    eax,eax
  423a19:	pop    ecx
  423a1a:	inc    eax
  423a1b:	pop    edi
  423a1c:	pop    esi
  423a1d:	pop    ebp
  423a1e:	ret    
  423a1f:	push   ebp
  423a20:	mov    ebp,esp
  423a22:	mov    eax,DWORD PTR [ebp+0x8]
  423a25:	push   esi
  423a26:	lea    esi,[eax*8+0x45c310]
  423a2d:	cmp    DWORD PTR [esi],0x0
  423a30:	jne    0x423a45
  423a32:	push   eax
  423a33:	call   0x4239a0
  423a38:	test   eax,eax
  423a3a:	pop    ecx
  423a3b:	jne    0x423a45
  423a3d:	push   0x11
  423a3f:	call   0x422920
  423a44:	pop    ecx
  423a45:	push   DWORD PTR [esi]
  423a47:	call   DWORD PTR ds:0x428090
  423a4d:	pop    esi
  423a4e:	pop    ebp
  423a4f:	ret    
  423a50:	push   esi
  423a51:	push   DWORD PTR ds:0x45d268
  423a57:	call   0x4259b6
  423a5c:	pop    ecx
  423a5d:	mov    ecx,DWORD PTR ds:0x45d264
  423a63:	mov    esi,eax
  423a65:	mov    eax,ds:0x45d268
  423a6a:	mov    edx,ecx
  423a6c:	sub    edx,eax
  423a6e:	add    edx,0x4
  423a71:	cmp    esi,edx
  423a73:	jae    0x423ac3
  423a75:	mov    ecx,0x800
  423a7a:	cmp    esi,ecx
  423a7c:	jae    0x423a80
  423a7e:	mov    ecx,esi
  423a80:	add    ecx,esi
  423a82:	push   ecx
  423a83:	push   eax
  423a84:	call   0x425809
  423a89:	test   eax,eax
  423a8b:	pop    ecx
  423a8c:	pop    ecx
  423a8d:	jne    0x423aa6
  423a8f:	add    esi,0x10
  423a92:	push   esi
  423a93:	push   DWORD PTR ds:0x45d268
  423a99:	call   0x425809
  423a9e:	test   eax,eax
  423aa0:	pop    ecx
  423aa1:	pop    ecx
  423aa2:	jne    0x423aa6
  423aa4:	pop    esi
  423aa5:	ret    
  423aa6:	mov    ecx,DWORD PTR ds:0x45d264
  423aac:	sub    ecx,DWORD PTR ds:0x45d268
  423ab2:	mov    ds:0x45d268,eax
  423ab7:	sar    ecx,0x2
  423aba:	lea    ecx,[eax+ecx*4]
  423abd:	mov    DWORD PTR ds:0x45d264,ecx
  423ac3:	mov    DWORD PTR [ecx],edi
  423ac5:	add    DWORD PTR ds:0x45d264,0x4
  423acc:	mov    eax,edi
  423ace:	pop    esi
  423acf:	ret    
  423ad0:	push   0x80
  423ad5:	call   0x424582
  423ada:	test   eax,eax
  423adc:	pop    ecx
  423add:	mov    ds:0x45d268,eax
  423ae2:	jne    0x423ae8
  423ae4:	push   0x18
  423ae6:	pop    eax
  423ae7:	ret    
  423ae8:	and    DWORD PTR [eax],0x0
  423aeb:	mov    eax,ds:0x45d268
  423af0:	mov    ds:0x45d264,eax
  423af5:	xor    eax,eax
  423af7:	ret    
  423af8:	push   0xc
  423afa:	push   0x4284c0
  423aff:	call   0x423858
  423b04:	call   0x422b6b
  423b09:	and    DWORD PTR [ebp-0x4],0x0
  423b0d:	mov    edi,DWORD PTR [ebp+0x8]
  423b10:	call   0x423a50
  423b15:	mov    DWORD PTR [ebp-0x1c],eax
  423b18:	or     DWORD PTR [ebp-0x4],0xffffffff
  423b1c:	call   0x423b2a
  423b21:	mov    eax,DWORD PTR [ebp-0x1c]
  423b24:	call   0x423893
  423b29:	ret    
  423b2a:	call   0x422b74
  423b2f:	ret    
  423b30:	push   DWORD PTR [esp+0x4]
  423b34:	call   0x423af8
  423b39:	neg    eax
  423b3b:	sbb    eax,eax
  423b3d:	neg    eax
  423b3f:	pop    ecx
  423b40:	dec    eax
  423b41:	ret    
  423b42:	push   ebp
  423b43:	mov    ebp,esp
  423b45:	sub    esp,0x10
  423b48:	push   ebx
  423b49:	xor    ebx,ebx
  423b4b:	cmp    DWORD PTR ds:0x45cd70,ebx
  423b51:	push   esi
  423b52:	push   edi
  423b53:	jne    0x423bc2
  423b55:	push   0x428530
  423b5a:	call   DWORD PTR ds:0x428094
  423b60:	mov    edi,eax
  423b62:	cmp    edi,ebx
  423b64:	je     0x423bfd
  423b6a:	mov    esi,DWORD PTR ds:0x428018
  423b70:	push   0x428524
  423b75:	push   edi
  423b76:	call   esi
  423b78:	test   eax,eax
  423b7a:	mov    ds:0x45cd70,eax
  423b7f:	je     0x423bfd
  423b81:	push   0x428514
  423b86:	push   edi
  423b87:	call   esi
  423b89:	push   0x428500
  423b8e:	push   edi
  423b8f:	mov    ds:0x45cd74,eax
  423b94:	call   esi
  423b96:	cmp    DWORD PTR ds:0x45cac4,0x2
  423b9d:	mov    ds:0x45cd78,eax
  423ba2:	jne    0x423bc2
  423ba4:	push   0x4284e4
  423ba9:	push   edi
  423baa:	call   esi
  423bac:	test   eax,eax
  423bae:	mov    ds:0x45cd80,eax
  423bb3:	je     0x423bc2
  423bb5:	push   0x4284cc
  423bba:	push   edi
  423bbb:	call   esi
  423bbd:	mov    ds:0x45cd7c,eax
  423bc2:	mov    eax,ds:0x45cd7c
  423bc7:	test   eax,eax
  423bc9:	je     0x423c07
  423bcb:	call   eax
  423bcd:	test   eax,eax
  423bcf:	je     0x423bee
  423bd1:	lea    ecx,[ebp-0x4]
  423bd4:	push   ecx
  423bd5:	push   0xc
  423bd7:	lea    ecx,[ebp-0x10]
  423bda:	push   ecx
  423bdb:	push   0x1
  423bdd:	push   eax
  423bde:	call   DWORD PTR ds:0x45cd80
  423be4:	test   eax,eax
  423be6:	je     0x423bee
  423be8:	test   BYTE PTR [ebp-0x8],0x1
  423bec:	jne    0x423c07
  423bee:	cmp    DWORD PTR ds:0x45cad0,0x4
  423bf5:	jb     0x423c01
  423bf7:	or     BYTE PTR [ebp+0x12],0x20
  423bfb:	jmp    0x423c26
  423bfd:	xor    eax,eax
  423bff:	jmp    0x423c36
  423c01:	or     BYTE PTR [ebp+0x12],0x4
  423c05:	jmp    0x423c26
  423c07:	mov    eax,ds:0x45cd74
  423c0c:	test   eax,eax
  423c0e:	je     0x423c26
  423c10:	call   eax
  423c12:	mov    ebx,eax
  423c14:	test   ebx,ebx
  423c16:	je     0x423c26
  423c18:	mov    eax,ds:0x45cd78
  423c1d:	test   eax,eax
  423c1f:	je     0x423c26
  423c21:	push   ebx
  423c22:	call   eax
  423c24:	mov    ebx,eax
  423c26:	push   DWORD PTR [ebp+0x10]
  423c29:	push   DWORD PTR [ebp+0xc]
  423c2c:	push   DWORD PTR [ebp+0x8]
  423c2f:	push   ebx
  423c30:	call   DWORD PTR ds:0x45cd70
  423c36:	pop    edi
  423c37:	pop    esi
  423c38:	pop    ebx
  423c39:	leave  
  423c3a:	ret    
  423c3b:	int3   
  423c3c:	int3   
  423c3d:	int3   
  423c3e:	int3   
  423c3f:	int3   
  423c40:	push   edi
  423c41:	mov    edi,DWORD PTR [esp+0x8]
  423c45:	jmp    0x423cb5
  423c47:	lea    esp,[esp+0x0]
  423c4e:	mov    edi,edi
  423c50:	mov    ecx,DWORD PTR [esp+0x4]
  423c54:	push   edi
  423c55:	test   ecx,0x3
  423c5b:	je     0x423c70
  423c5d:	mov    al,BYTE PTR [ecx]
  423c5f:	add    ecx,0x1
  423c62:	test   al,al
  423c64:	je     0x423ca3
  423c66:	test   ecx,0x3
  423c6c:	jne    0x423c5d
  423c6e:	mov    edi,edi
  423c70:	mov    eax,DWORD PTR [ecx]
  423c72:	mov    edx,0x7efefeff
  423c77:	add    edx,eax
  423c79:	xor    eax,0xffffffff
  423c7c:	xor    eax,edx
  423c7e:	add    ecx,0x4
  423c81:	test   eax,0x81010100
  423c86:	je     0x423c70
  423c88:	mov    eax,DWORD PTR [ecx-0x4]
  423c8b:	test   al,al
  423c8d:	je     0x423cb2
  423c8f:	test   ah,ah
  423c91:	je     0x423cad
  423c93:	test   eax,0xff0000
  423c98:	je     0x423ca8
  423c9a:	test   eax,0xff000000
  423c9f:	je     0x423ca3
  423ca1:	jmp    0x423c70
  423ca3:	lea    edi,[ecx-0x1]
  423ca6:	jmp    0x423cb5
  423ca8:	lea    edi,[ecx-0x2]
  423cab:	jmp    0x423cb5
  423cad:	lea    edi,[ecx-0x3]
  423cb0:	jmp    0x423cb5
  423cb2:	lea    edi,[ecx-0x4]
  423cb5:	mov    ecx,DWORD PTR [esp+0xc]
  423cb9:	test   ecx,0x3
  423cbf:	je     0x423cde
  423cc1:	mov    dl,BYTE PTR [ecx]
  423cc3:	add    ecx,0x1
  423cc6:	test   dl,dl
  423cc8:	je     0x423d30
  423cca:	mov    BYTE PTR [edi],dl
  423ccc:	add    edi,0x1
  423ccf:	test   ecx,0x3
  423cd5:	jne    0x423cc1
  423cd7:	jmp    0x423cde
  423cd9:	mov    DWORD PTR [edi],edx
  423cdb:	add    edi,0x4
  423cde:	mov    edx,0x7efefeff
  423ce3:	mov    eax,DWORD PTR [ecx]
  423ce5:	add    edx,eax
  423ce7:	xor    eax,0xffffffff
  423cea:	xor    eax,edx
  423cec:	mov    edx,DWORD PTR [ecx]
  423cee:	add    ecx,0x4
  423cf1:	test   eax,0x81010100
  423cf6:	je     0x423cd9
  423cf8:	test   dl,dl
  423cfa:	je     0x423d30
  423cfc:	test   dh,dh
  423cfe:	je     0x423d27
  423d00:	test   edx,0xff0000
  423d06:	je     0x423d1a
  423d08:	test   edx,0xff000000
  423d0e:	je     0x423d12
  423d10:	jmp    0x423cd9
  423d12:	mov    DWORD PTR [edi],edx
  423d14:	mov    eax,DWORD PTR [esp+0x8]
  423d18:	pop    edi
  423d19:	ret    
  423d1a:	mov    WORD PTR [edi],dx
  423d1d:	mov    eax,DWORD PTR [esp+0x8]
  423d21:	mov    BYTE PTR [edi+0x2],0x0
  423d25:	pop    edi
  423d26:	ret    
  423d27:	mov    WORD PTR [edi],dx
  423d2a:	mov    eax,DWORD PTR [esp+0x8]
  423d2e:	pop    edi
  423d2f:	ret    
  423d30:	mov    BYTE PTR [edi],dl
  423d32:	mov    eax,DWORD PTR [esp+0x8]
  423d36:	pop    edi
  423d37:	ret    
  423d38:	int3   
  423d39:	int3   
  423d3a:	int3   
  423d3b:	int3   
  423d3c:	int3   
  423d3d:	int3   
  423d3e:	int3   
  423d3f:	int3   
  423d40:	mov    ecx,DWORD PTR [esp+0xc]
  423d44:	push   edi
  423d45:	test   ecx,ecx
  423d47:	je     0x423ddf
  423d4d:	push   esi
  423d4e:	push   ebx
  423d4f:	mov    ebx,ecx
  423d51:	mov    esi,DWORD PTR [esp+0x14]
  423d55:	test   esi,0x3
  423d5b:	mov    edi,DWORD PTR [esp+0x10]
  423d5f:	jne    0x423d6c
  423d61:	shr    ecx,0x2
  423d64:	jne    0x423def
  423d6a:	jmp    0x423d93
  423d6c:	mov    al,BYTE PTR [esi]
  423d6e:	add    esi,0x1
  423d71:	mov    BYTE PTR [edi],al
  423d73:	add    edi,0x1
  423d76:	sub    ecx,0x1
  423d79:	je     0x423da6
  423d7b:	test   al,al
  423d7d:	je     0x423dae
  423d7f:	test   esi,0x3
  423d85:	jne    0x423d6c
  423d87:	mov    ebx,ecx
  423d89:	shr    ecx,0x2
  423d8c:	jne    0x423def
  423d8e:	and    ebx,0x3
  423d91:	je     0x423da6
  423d93:	mov    al,BYTE PTR [esi]
  423d95:	add    esi,0x1
  423d98:	mov    BYTE PTR [edi],al
  423d9a:	add    edi,0x1
  423d9d:	test   al,al
  423d9f:	je     0x423dd8
  423da1:	sub    ebx,0x1
  423da4:	jne    0x423d93
  423da6:	mov    eax,DWORD PTR [esp+0x10]
  423daa:	pop    ebx
  423dab:	pop    esi
  423dac:	pop    edi
  423dad:	ret    
  423dae:	test   edi,0x3
  423db4:	je     0x423dcc
  423db6:	mov    BYTE PTR [edi],al
  423db8:	add    edi,0x1
  423dbb:	sub    ecx,0x1
  423dbe:	je     0x423e5c
  423dc4:	test   edi,0x3
  423dca:	jne    0x423db6
  423dcc:	mov    ebx,ecx
  423dce:	shr    ecx,0x2
  423dd1:	jne    0x423e47
  423dd3:	mov    BYTE PTR [edi],al
  423dd5:	add    edi,0x1
  423dd8:	sub    ebx,0x1
  423ddb:	jne    0x423dd3
  423ddd:	pop    ebx
  423dde:	pop    esi
  423ddf:	mov    eax,DWORD PTR [esp+0x8]
  423de3:	pop    edi
  423de4:	ret    
  423de5:	mov    DWORD PTR [edi],edx
  423de7:	add    edi,0x4
  423dea:	sub    ecx,0x1
  423ded:	je     0x423d8e
  423def:	mov    edx,0x7efefeff
  423df4:	mov    eax,DWORD PTR [esi]
  423df6:	add    edx,eax
  423df8:	xor    eax,0xffffffff
  423dfb:	xor    eax,edx
  423dfd:	mov    edx,DWORD PTR [esi]
  423dff:	add    esi,0x4
  423e02:	test   eax,0x81010100
  423e07:	je     0x423de5
  423e09:	test   dl,dl
  423e0b:	je     0x423e39
  423e0d:	test   dh,dh
  423e0f:	je     0x423e2f
  423e11:	test   edx,0xff0000
  423e17:	je     0x423e25
  423e19:	test   edx,0xff000000
  423e1f:	jne    0x423de5
  423e21:	mov    DWORD PTR [edi],edx
  423e23:	jmp    0x423e3d
  423e25:	and    edx,0xffff
  423e2b:	mov    DWORD PTR [edi],edx
  423e2d:	jmp    0x423e3d
  423e2f:	and    edx,0xff
  423e35:	mov    DWORD PTR [edi],edx
  423e37:	jmp    0x423e3d
  423e39:	xor    edx,edx
  423e3b:	mov    DWORD PTR [edi],edx
  423e3d:	add    edi,0x4
  423e40:	xor    eax,eax
  423e42:	sub    ecx,0x1
  423e45:	je     0x423e53
  423e47:	xor    eax,eax
  423e49:	mov    DWORD PTR [edi],eax
  423e4b:	add    edi,0x4
  423e4e:	sub    ecx,0x1
  423e51:	jne    0x423e49
  423e53:	and    ebx,0x3
  423e56:	jne    0x423dd3
  423e5c:	mov    eax,DWORD PTR [esp+0x10]
  423e60:	pop    ebx
  423e61:	pop    esi
  423e62:	pop    edi
  423e63:	ret    
  423e64:	int3   
  423e65:	int3   
  423e66:	int3   
  423e67:	int3   
  423e68:	int3   
  423e69:	int3   
  423e6a:	int3   
  423e6b:	int3   
  423e6c:	int3   
  423e6d:	int3   
  423e6e:	int3   
  423e6f:	int3   
  423e70:	mov    ecx,DWORD PTR [esp+0x4]
  423e74:	test   ecx,0x3
  423e7a:	je     0x423ea0
  423e7c:	mov    al,BYTE PTR [ecx]
  423e7e:	add    ecx,0x1
  423e81:	test   al,al
  423e83:	je     0x423ed3
  423e85:	test   ecx,0x3
  423e8b:	jne    0x423e7c
  423e8d:	add    eax,0x0
  423e92:	lea    esp,[esp+0x0]
  423e99:	lea    esp,[esp+0x0]
  423ea0:	mov    eax,DWORD PTR [ecx]
  423ea2:	mov    edx,0x7efefeff
  423ea7:	add    edx,eax
  423ea9:	xor    eax,0xffffffff
  423eac:	xor    eax,edx
  423eae:	add    ecx,0x4
  423eb1:	test   eax,0x81010100
  423eb6:	je     0x423ea0
  423eb8:	mov    eax,DWORD PTR [ecx-0x4]
  423ebb:	test   al,al
  423ebd:	je     0x423ef1
  423ebf:	test   ah,ah
  423ec1:	je     0x423ee7
  423ec3:	test   eax,0xff0000
  423ec8:	je     0x423edd
  423eca:	test   eax,0xff000000
  423ecf:	je     0x423ed3
  423ed1:	jmp    0x423ea0
  423ed3:	lea    eax,[ecx-0x1]
  423ed6:	mov    ecx,DWORD PTR [esp+0x4]
  423eda:	sub    eax,ecx
  423edc:	ret    
  423edd:	lea    eax,[ecx-0x2]
  423ee0:	mov    ecx,DWORD PTR [esp+0x4]
  423ee4:	sub    eax,ecx
  423ee6:	ret    
  423ee7:	lea    eax,[ecx-0x3]
  423eea:	mov    ecx,DWORD PTR [esp+0x4]
  423eee:	sub    eax,ecx
  423ef0:	ret    
  423ef1:	lea    eax,[ecx-0x4]
  423ef4:	mov    ecx,DWORD PTR [esp+0x4]
  423ef8:	sub    eax,ecx
  423efa:	ret    
  423efb:	push   0x8
  423efd:	push   0x428540
  423f02:	call   0x423858
  423f07:	and    DWORD PTR [ebp-0x4],0x0
  423f0b:	push   0x0
  423f0d:	push   0x1
  423f0f:	call   0x425a82
  423f14:	pop    ecx
  423f15:	pop    ecx
  423f16:	jmp    0x423f1f
  423f18:	xor    eax,eax
  423f1a:	inc    eax
  423f1b:	ret    
  423f1c:	mov    esp,DWORD PTR [ebp-0x18]
  423f1f:	or     DWORD PTR [ebp-0x4],0xffffffff
  423f23:	push   0x3
  423f25:	call   DWORD PTR ds:0x428028
  423f2b:	int3   
  423f2c:	cmp    ecx,DWORD PTR ds:0x45c430
  423f32:	jne    0x423f35
  423f34:	ret    
  423f35:	jmp    0x423efb
  423f3a:	movzx  eax,BYTE PTR [esp+0x4]
  423f3f:	mov    cl,BYTE PTR [esp+0xc]
  423f43:	test   BYTE PTR [eax+0x45cf21],cl
  423f49:	jne    0x423f67
  423f4b:	cmp    DWORD PTR [esp+0x8],0x0
  423f50:	je     0x423f60
  423f52:	movzx  eax,WORD PTR [eax*2+0x42893a]
  423f5a:	and    eax,DWORD PTR [esp+0x8]
  423f5e:	jmp    0x423f62
  423f60:	xor    eax,eax
  423f62:	test   eax,eax
  423f64:	jne    0x423f67
  423f66:	ret    
  423f67:	xor    eax,eax
  423f69:	inc    eax
  423f6a:	ret    
  423f6b:	push   0x4
  423f6d:	push   0x0
  423f6f:	push   DWORD PTR [esp+0xc]
  423f73:	call   0x423f3a
  423f78:	add    esp,0xc
  423f7b:	ret    
  423f7c:	sub    eax,0x3a4
  423f81:	je     0x423fa5
  423f83:	sub    eax,0x4
  423f86:	je     0x423f9f
  423f88:	sub    eax,0xd
  423f8b:	je     0x423f99
  423f8d:	dec    eax
  423f8e:	je     0x423f93
  423f90:	xor    eax,eax
  423f92:	ret    
  423f93:	mov    eax,0x404
  423f98:	ret    
  423f99:	mov    eax,0x412
  423f9e:	ret    
  423f9f:	mov    eax,0x804
  423fa4:	ret    
  423fa5:	mov    eax,0x411
  423faa:	ret    
  423fab:	push   edi
  423fac:	push   0x40
  423fae:	xor    eax,eax
  423fb0:	pop    ecx
  423fb1:	mov    edi,0x45cf20
  423fb6:	rep stos DWORD PTR es:[edi],eax
  423fb8:	stos   BYTE PTR es:[edi],al
  423fb9:	xor    eax,eax
  423fbb:	mov    ds:0x45d024,eax
  423fc0:	mov    ds:0x45cf1c,eax
  423fc5:	mov    ds:0x45cf14,eax
  423fca:	mov    edi,0x45d030
  423fcf:	stos   DWORD PTR es:[edi],eax
  423fd0:	stos   DWORD PTR es:[edi],eax
  423fd1:	stos   DWORD PTR es:[edi],eax
  423fd2:	pop    edi
  423fd3:	ret    
  423fd4:	push   ebp
  423fd5:	mov    ebp,esp
  423fd7:	sub    esp,0x518
  423fdd:	mov    eax,ds:0x45c430
  423fe2:	xor    eax,DWORD PTR [ebp+0x4]
  423fe5:	push   esi
  423fe6:	mov    DWORD PTR [ebp-0x4],eax
  423fe9:	lea    eax,[ebp-0x18]
  423fec:	push   eax
  423fed:	push   DWORD PTR ds:0x45d024
  423ff3:	call   DWORD PTR ds:0x4280a0
  423ff9:	cmp    eax,0x1
  423ffc:	mov    esi,0x100
  424001:	jne    0x424114
  424007:	xor    eax,eax
  424009:	mov    BYTE PTR [ebp+eax*1-0x118],al
  424010:	inc    eax
  424011:	cmp    eax,esi
  424013:	jb     0x424009
  424015:	mov    al,BYTE PTR [ebp-0x12]
  424018:	test   al,al
  42401a:	mov    BYTE PTR [ebp-0x118],0x20
  424021:	je     0x424059
  424023:	push   ebx
  424024:	lea    edx,[ebp-0x11]
  424027:	push   edi
  424028:	movzx  ecx,BYTE PTR [edx]
  42402b:	movzx  eax,al
  42402e:	cmp    eax,ecx
  424030:	ja     0x42404f
  424032:	sub    ecx,eax
  424034:	inc    ecx
  424035:	mov    ebx,ecx
  424037:	shr    ecx,0x2
  42403a:	lea    edi,[ebp+eax*1-0x118]
  424041:	mov    eax,0x20202020
  424046:	rep stos DWORD PTR es:[edi],eax
  424048:	mov    ecx,ebx
  42404a:	and    ecx,0x3
  42404d:	rep stos BYTE PTR es:[edi],al
  42404f:	inc    edx
  424050:	mov    al,BYTE PTR [edx]
  424052:	inc    edx
  424053:	test   al,al
  424055:	jne    0x424028
  424057:	pop    edi
  424058:	pop    ebx
  424059:	push   0x0
  42405b:	push   DWORD PTR ds:0x45cf14
  424061:	lea    eax,[ebp-0x518]
  424067:	push   DWORD PTR ds:0x45d024
  42406d:	push   eax
  42406e:	push   esi
  42406f:	lea    eax,[ebp-0x118]
  424075:	push   eax
  424076:	push   0x1
  424078:	call   0x425f88
  42407d:	push   0x0
  42407f:	push   DWORD PTR ds:0x45d024
  424085:	lea    eax,[ebp-0x218]
  42408b:	push   esi
  42408c:	push   eax
  42408d:	push   esi
  42408e:	lea    eax,[ebp-0x118]
  424094:	push   eax
  424095:	push   esi
  424096:	push   DWORD PTR ds:0x45cf14
  42409c:	call   0x425bcc
  4240a1:	push   0x0
  4240a3:	push   DWORD PTR ds:0x45d024
  4240a9:	lea    eax,[ebp-0x318]
  4240af:	push   esi
  4240b0:	push   eax
  4240b1:	push   esi
  4240b2:	lea    eax,[ebp-0x118]
  4240b8:	push   eax
  4240b9:	push   0x200
  4240be:	push   DWORD PTR ds:0x45cf14
  4240c4:	call   0x425bcc
  4240c9:	add    esp,0x5c
  4240cc:	xor    eax,eax
  4240ce:	mov    cx,WORD PTR [ebp+eax*2-0x518]
  4240d6:	test   cl,0x1
  4240d9:	je     0x4240f1
  4240db:	or     BYTE PTR [eax+0x45cf21],0x10
  4240e2:	mov    cl,BYTE PTR [ebp+eax*1-0x218]
  4240e9:	mov    BYTE PTR [eax+0x45d040],cl
  4240ef:	jmp    0x42410d
  4240f1:	test   cl,0x2
  4240f4:	je     0x424106
  4240f6:	or     BYTE PTR [eax+0x45cf21],0x20
  4240fd:	mov    cl,BYTE PTR [ebp+eax*1-0x318]
  424104:	jmp    0x4240e9
  424106:	and    BYTE PTR [eax+0x45d040],0x0
  42410d:	inc    eax
  42410e:	cmp    eax,esi
  424110:	jb     0x4240ce
  424112:	jmp    0x424158
  424114:	xor    eax,eax
  424116:	cmp    eax,0x41
  424119:	jb     0x424134
  42411b:	cmp    eax,0x5a
  42411e:	ja     0x424134
  424120:	or     BYTE PTR [eax+0x45cf21],0x10
  424127:	mov    cl,al
  424129:	add    cl,0x20
  42412c:	mov    BYTE PTR [eax+0x45d040],cl
  424132:	jmp    0x424153
  424134:	cmp    eax,0x61
  424137:	jb     0x42414c
  424139:	cmp    eax,0x7a
  42413c:	ja     0x42414c
  42413e:	or     BYTE PTR [eax+0x45cf21],0x20
  424145:	mov    cl,al
  424147:	sub    cl,0x20
  42414a:	jmp    0x42412c
  42414c:	and    BYTE PTR [eax+0x45d040],0x0
  424153:	inc    eax
  424154:	cmp    eax,esi
  424156:	jb     0x424116
  424158:	mov    ecx,DWORD PTR [ebp-0x4]
  42415b:	xor    ecx,DWORD PTR [ebp+0x4]
  42415e:	pop    esi
  42415f:	call   0x423f2c
  424164:	leave  
  424165:	ret    
  424166:	push   ebp
  424167:	mov    ebp,esp
  424169:	sub    esp,0x1c
  42416c:	mov    eax,ds:0x45c430
  424171:	xor    eax,DWORD PTR [ebp+0x4]
  424174:	push   ebx
  424175:	push   esi
  424176:	mov    esi,DWORD PTR [ebp+0x8]
  424179:	xor    ebx,ebx
  42417b:	cmp    esi,ebx
  42417d:	mov    DWORD PTR [ebp-0x4],eax
  424180:	push   edi
  424181:	je     0x4242db
  424187:	xor    edx,edx
  424189:	xor    eax,eax
  42418b:	cmp    DWORD PTR [eax+0x45c440],esi
  424191:	je     0x4241f8
  424193:	add    eax,0x30
  424196:	inc    edx
  424197:	cmp    eax,0xf0
  42419c:	jb     0x42418b
  42419e:	lea    eax,[ebp-0x1c]
  4241a1:	push   eax
  4241a2:	push   esi
  4241a3:	call   DWORD PTR ds:0x4280a0
  4241a9:	cmp    eax,0x1
  4241ac:	jne    0x4242d3
  4241b2:	push   0x40
  4241b4:	xor    eax,eax
  4241b6:	cmp    DWORD PTR [ebp-0x1c],0x1
  4241ba:	pop    ecx
  4241bb:	mov    edi,0x45cf20
  4241c0:	rep stos DWORD PTR es:[edi],eax
  4241c2:	stos   BYTE PTR es:[edi],al
  4241c3:	mov    DWORD PTR ds:0x45d024,esi
  4241c9:	mov    DWORD PTR ds:0x45cf14,ebx
  4241cf:	jbe    0x4242c1
  4241d5:	cmp    BYTE PTR [ebp-0x16],0x0
  4241d9:	je     0x424299
  4241df:	lea    ecx,[ebp-0x15]
  4241e2:	mov    dl,BYTE PTR [ecx]
  4241e4:	test   dl,dl
  4241e6:	je     0x424299
  4241ec:	movzx  eax,BYTE PTR [ecx-0x1]
  4241f0:	movzx  edx,dl
  4241f3:	jmp    0x424289
  4241f8:	push   0x40
  4241fa:	xor    eax,eax
  4241fc:	pop    ecx
  4241fd:	mov    edi,0x45cf20
  424202:	rep stos DWORD PTR es:[edi],eax
  424204:	lea    ecx,[edx+edx*2]
  424207:	shl    ecx,0x4
  42420a:	mov    DWORD PTR [ebp-0x8],ebx
  42420d:	stos   BYTE PTR es:[edi],al
  42420e:	lea    ebx,[ecx+0x45c450]
  424214:	mov    al,BYTE PTR [ebx]
  424216:	mov    esi,ebx
  424218:	jmp    0x424243
  42421a:	mov    dl,BYTE PTR [esi+0x1]
  42421d:	test   dl,dl
  42421f:	je     0x424247
  424221:	movzx  eax,al
  424224:	movzx  edi,dl
  424227:	cmp    eax,edi
  424229:	ja     0x42423f
  42422b:	mov    edx,DWORD PTR [ebp-0x8]
  42422e:	mov    dl,BYTE PTR [edx+0x45c438]
  424234:	or     BYTE PTR [eax+0x45cf21],dl
  42423a:	inc    eax
  42423b:	cmp    eax,edi
  42423d:	jbe    0x424234
  42423f:	inc    esi
  424240:	inc    esi
  424241:	mov    al,BYTE PTR [esi]
  424243:	test   al,al
  424245:	jne    0x42421a
  424247:	inc    DWORD PTR [ebp-0x8]
  42424a:	add    ebx,0x8
  42424d:	cmp    DWORD PTR [ebp-0x8],0x4
  424251:	jb     0x424214
  424253:	mov    eax,DWORD PTR [ebp+0x8]
  424256:	mov    ds:0x45d024,eax
  42425b:	mov    DWORD PTR ds:0x45cf1c,0x1
  424265:	call   0x423f7c
  42426a:	lea    ecx,[ecx+0x45c444]
  424270:	mov    esi,ecx
  424272:	mov    edi,0x45d030
  424277:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424278:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424279:	mov    ds:0x45cf14,eax
  42427e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42427f:	jmp    0x4242e0
  424281:	or     BYTE PTR [eax+0x45cf21],0x4
  424288:	inc    eax
  424289:	cmp    eax,edx
  42428b:	jbe    0x424281
  42428d:	inc    ecx
  42428e:	inc    ecx
  42428f:	cmp    BYTE PTR [ecx-0x1],0x0
  424293:	jne    0x4241e2
  424299:	xor    ecx,ecx
  42429b:	inc    ecx
  42429c:	mov    eax,ecx
  42429e:	or     BYTE PTR [eax+0x45cf21],0x8
  4242a5:	inc    eax
  4242a6:	cmp    eax,0xff
  4242ab:	jb     0x42429e
  4242ad:	mov    eax,esi
  4242af:	call   0x423f7c
  4242b4:	mov    ds:0x45cf14,eax
  4242b9:	mov    DWORD PTR ds:0x45cf1c,ecx
  4242bf:	jmp    0x4242c7
  4242c1:	mov    DWORD PTR ds:0x45cf1c,ebx
  4242c7:	xor    eax,eax
  4242c9:	mov    edi,0x45d030
  4242ce:	stos   DWORD PTR es:[edi],eax
  4242cf:	stos   DWORD PTR es:[edi],eax
  4242d0:	stos   DWORD PTR es:[edi],eax
  4242d1:	jmp    0x4242e0
  4242d3:	cmp    DWORD PTR ds:0x45cd84,ebx
  4242d9:	je     0x4242e9
  4242db:	call   0x423fab
  4242e0:	call   0x423fd4
  4242e5:	xor    eax,eax
  4242e7:	jmp    0x4242ec
  4242e9:	or     eax,0xffffffff
  4242ec:	mov    ecx,DWORD PTR [ebp-0x4]
  4242ef:	xor    ecx,DWORD PTR [ebp+0x4]
  4242f2:	pop    edi
  4242f3:	pop    esi
  4242f4:	pop    ebx
  4242f5:	call   0x423f2c
  4242fa:	leave  
  4242fb:	ret    
  4242fc:	push   0x14
  4242fe:	push   0x428550
  424303:	call   0x423858
  424308:	or     DWORD PTR [ebp-0x1c],0xffffffff
  42430c:	push   0xd
  42430e:	call   0x423a1f
  424313:	pop    ecx
  424314:	xor    edi,edi
  424316:	mov    DWORD PTR [ebp-0x4],edi
  424319:	mov    DWORD PTR ds:0x45cd84,edi
  42431f:	mov    eax,DWORD PTR [ebp+0x8]
  424322:	cmp    eax,0xfffffffe
  424325:	jne    0x424339
  424327:	mov    DWORD PTR ds:0x45cd84,0x1
  424331:	call   DWORD PTR ds:0x42809c
  424337:	jmp    0x424364
  424339:	cmp    eax,0xfffffffd
  42433c:	jne    0x424350
  42433e:	mov    DWORD PTR ds:0x45cd84,0x1
  424348:	call   DWORD PTR ds:0x428098
  42434e:	jmp    0x424364
  424350:	cmp    eax,0xfffffffc
  424353:	jne    0x424364
  424355:	mov    DWORD PTR ds:0x45cd84,0x1
  42435f:	mov    eax,ds:0x45cdb4
  424364:	mov    DWORD PTR [ebp+0x8],eax
  424367:	cmp    eax,DWORD PTR ds:0x45d024
  42436d:	je     0x42442e
  424373:	mov    esi,DWORD PTR ds:0x45cf18
  424379:	mov    DWORD PTR [ebp-0x20],esi
  42437c:	cmp    esi,edi
  42437e:	je     0x424384
  424380:	cmp    DWORD PTR [esi],edi
  424382:	je     0x424394
  424384:	push   0x220
  424389:	call   0x424582
  42438e:	pop    ecx
  42438f:	mov    esi,eax
  424391:	mov    DWORD PTR [ebp-0x20],esi
  424394:	cmp    esi,edi
  424396:	je     0x424417
  424398:	push   DWORD PTR [ebp+0x8]
  42439b:	call   0x424166
  4243a0:	pop    ecx
  4243a1:	mov    DWORD PTR [ebp-0x1c],eax
  4243a4:	cmp    eax,edi
  4243a6:	jne    0x424417
  4243a8:	mov    DWORD PTR [esi],edi
  4243aa:	mov    eax,ds:0x45d024
  4243af:	mov    DWORD PTR [esi+0x4],eax
  4243b2:	mov    eax,ds:0x45cf1c
  4243b7:	mov    DWORD PTR [esi+0x8],eax
  4243ba:	mov    eax,ds:0x45cf14
  4243bf:	mov    DWORD PTR [esi+0xc],eax
  4243c2:	xor    eax,eax
  4243c4:	mov    DWORD PTR [ebp-0x24],eax
  4243c7:	cmp    eax,0x5
  4243ca:	jge    0x4243dc
  4243cc:	mov    cx,WORD PTR [eax*2+0x45d030]
  4243d4:	mov    WORD PTR [esi+eax*2+0x10],cx
  4243d9:	inc    eax
  4243da:	jmp    0x4243c4
  4243dc:	xor    eax,eax
  4243de:	mov    DWORD PTR [ebp-0x24],eax
  4243e1:	cmp    eax,0x101
  4243e6:	jge    0x4243f5
  4243e8:	mov    cl,BYTE PTR [eax+0x45cf20]
  4243ee:	mov    BYTE PTR [eax+esi*1+0x1c],cl
  4243f2:	inc    eax
  4243f3:	jmp    0x4243de
  4243f5:	xor    eax,eax
  4243f7:	mov    DWORD PTR [ebp-0x24],eax
  4243fa:	cmp    eax,0x100
  4243ff:	jge    0x424411
  424401:	mov    cl,BYTE PTR [eax+0x45d040]
  424407:	mov    BYTE PTR [eax+esi*1+0x11d],cl
  42440e:	inc    eax
  42440f:	jmp    0x4243f7
  424411:	mov    DWORD PTR ds:0x45cf18,esi
  424417:	cmp    DWORD PTR [ebp-0x1c],0xffffffff
  42441b:	jne    0x424431
  42441d:	cmp    esi,DWORD PTR ds:0x45cf18
  424423:	je     0x424431
  424425:	push   esi
  424426:	call   0x42446a
  42442b:	pop    ecx
  42442c:	jmp    0x424431
  42442e:	mov    DWORD PTR [ebp-0x1c],edi
  424431:	or     DWORD PTR [ebp-0x4],0xffffffff
  424435:	call   0x424443
  42443a:	mov    eax,DWORD PTR [ebp-0x1c]
  42443d:	call   0x423893
  424442:	ret    
  424443:	push   0xd
  424445:	call   0x42398b
  42444a:	pop    ecx
  42444b:	ret    
  42444c:	cmp    DWORD PTR ds:0x45d26c,0x0
  424453:	jne    0x424467
  424455:	push   0xfffffffd
  424457:	call   0x4242fc
  42445c:	pop    ecx
  42445d:	mov    DWORD PTR ds:0x45d26c,0x1
  424467:	xor    eax,eax
  424469:	ret    
  42446a:	push   0xc
  42446c:	push   0x428560
  424471:	call   0x423858
  424476:	mov    esi,DWORD PTR [ebp+0x8]
  424479:	test   esi,esi
  42447b:	je     0x4244d5
  42447d:	cmp    DWORD PTR ds:0x45d144,0x3
  424484:	jne    0x4244c6
  424486:	push   0x4
  424488:	call   0x423a1f
  42448d:	pop    ecx
  42448e:	and    DWORD PTR [ebp-0x4],0x0
  424492:	push   esi
  424493:	call   0x424c42
  424498:	pop    ecx
  424499:	mov    DWORD PTR [ebp-0x1c],eax
  42449c:	test   eax,eax
  42449e:	je     0x4244a9
  4244a0:	push   esi
  4244a1:	push   eax
  4244a2:	call   0x424c6d
  4244a7:	pop    ecx
  4244a8:	pop    ecx
  4244a9:	or     DWORD PTR [ebp-0x4],0xffffffff
  4244ad:	call   0x4244bd
  4244b2:	cmp    DWORD PTR [ebp-0x1c],0x0
  4244b6:	jne    0x4244d5
  4244b8:	push   DWORD PTR [ebp+0x8]
  4244bb:	jmp    0x4244c7
  4244bd:	push   0x4
  4244bf:	call   0x42398b
  4244c4:	pop    ecx
  4244c5:	ret    
  4244c6:	push   esi
  4244c7:	push   0x0
  4244c9:	push   DWORD PTR ds:0x45d140
  4244cf:	call   DWORD PTR ds:0x428088
  4244d5:	call   0x423893
  4244da:	ret    
  4244db:	push   0xc
  4244dd:	push   0x428570
  4244e2:	call   0x423858
  4244e7:	mov    esi,DWORD PTR [ebp+0x8]
  4244ea:	cmp    DWORD PTR ds:0x45d144,0x3
  4244f1:	jne    0x424521
  4244f3:	cmp    esi,DWORD PTR ds:0x45cf04
  4244f9:	ja     0x424521
  4244fb:	push   0x4
  4244fd:	call   0x423a1f
  424502:	pop    ecx
  424503:	and    DWORD PTR [ebp-0x4],0x0
  424507:	push   esi
  424508:	call   0x425421
  42450d:	pop    ecx
  42450e:	mov    DWORD PTR [ebp-0x1c],eax
  424511:	or     DWORD PTR [ebp-0x4],0xffffffff
  424515:	call   0x42454d
  42451a:	mov    eax,DWORD PTR [ebp-0x1c]
  42451d:	test   eax,eax
  42451f:	jne    0x424544
  424521:	test   esi,esi
  424523:	jne    0x424526
  424525:	inc    esi
  424526:	cmp    DWORD PTR ds:0x45d144,0x1
  42452d:	je     0x424535
  42452f:	add    esi,0xf
  424532:	and    esi,0xfffffff0
  424535:	push   esi
  424536:	push   0x0
  424538:	push   DWORD PTR ds:0x45d140
  42453e:	call   DWORD PTR ds:0x4280a4
  424544:	call   0x423893
  424549:	ret    
  42454a:	mov    esi,DWORD PTR [ebp+0x8]
  42454d:	push   0x4
  42454f:	call   0x42398b
  424554:	pop    ecx
  424555:	ret    
  424556:	cmp    DWORD PTR [esp+0x4],0xffffffe0
  42455b:	ja     0x42457f
  42455d:	push   DWORD PTR [esp+0x4]
  424561:	call   0x4244db
  424566:	test   eax,eax
  424568:	pop    ecx
  424569:	jne    0x424581
  42456b:	cmp    DWORD PTR [esp+0x8],eax
  42456f:	je     0x424581
  424571:	push   DWORD PTR [esp+0x4]
  424575:	call   0x426142
  42457a:	test   eax,eax
  42457c:	pop    ecx
  42457d:	jne    0x42455d
  42457f:	xor    eax,eax
  424581:	ret    
  424582:	push   DWORD PTR ds:0x45cdc8
  424588:	push   DWORD PTR [esp+0x8]
  42458c:	call   0x424556
  424591:	pop    ecx
  424592:	pop    ecx
  424593:	ret    
  424594:	int3   
  424595:	int3   
  424596:	int3   
  424597:	int3   
  424598:	int3   
  424599:	int3   
  42459a:	int3   
  42459b:	int3   
  42459c:	int3   
  42459d:	int3   
  42459e:	int3   
  42459f:	int3   
  4245a0:	push   ebp
  4245a1:	mov    ebp,esp
  4245a3:	push   edi
  4245a4:	push   esi
  4245a5:	mov    esi,DWORD PTR [ebp+0xc]
  4245a8:	mov    ecx,DWORD PTR [ebp+0x10]
  4245ab:	mov    edi,DWORD PTR [ebp+0x8]
  4245ae:	mov    eax,ecx
  4245b0:	mov    edx,ecx
  4245b2:	add    eax,esi
  4245b4:	cmp    edi,esi
  4245b6:	jbe    0x4245c0
  4245b8:	cmp    edi,eax
  4245ba:	jb     0x42473c
  4245c0:	test   edi,0x3
  4245c6:	jne    0x4245dc
  4245c8:	shr    ecx,0x2
  4245cb:	and    edx,0x3
  4245ce:	cmp    ecx,0x8
  4245d1:	jb     0x4245fc
  4245d3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4245d5:	jmp    DWORD PTR [edx*4+0x4246ec]
  4245dc:	mov    eax,edi
  4245de:	mov    edx,0x3
  4245e3:	sub    ecx,0x4
  4245e6:	jb     0x4245f4
  4245e8:	and    eax,0x3
  4245eb:	add    ecx,eax
  4245ed:	jmp    DWORD PTR [eax*4+0x424600]
  4245f4:	jmp    DWORD PTR [ecx*4+0x4246fc]
  4245fb:	nop
  4245fc:	jmp    DWORD PTR [ecx*4+0x424680]
  424603:	nop
  424604:	adc    BYTE PTR [esi+0x42],al
  424607:	add    BYTE PTR [esi+eax*2],bh
  42460a:	inc    edx
  42460b:	add    BYTE PTR [eax+0x46],ah
  42460e:	inc    edx
  42460f:	add    BYTE PTR [ebx],ah
  424611:	ror    DWORD PTR [edx-0x75f877fa],1
  424617:	inc    esi
  424618:	add    DWORD PTR [eax+0x468a0147],ecx
  42461e:	add    al,cl
  424620:	jmp    0x289ce27
  424625:	add    esi,0x3
  424628:	add    edi,0x3
  42462b:	cmp    ecx,0x8
  42462e:	jb     0x4245fc
  424630:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424632:	jmp    DWORD PTR [edx*4+0x4246ec]
  424639:	lea    ecx,[ecx+0x0]
  42463c:	and    edx,ecx
  42463e:	mov    al,BYTE PTR [esi]
  424640:	mov    BYTE PTR [edi],al
  424642:	mov    al,BYTE PTR [esi+0x1]
  424645:	shr    ecx,0x2
  424648:	mov    BYTE PTR [edi+0x1],al
  42464b:	add    esi,0x2
  42464e:	add    edi,0x2
  424651:	cmp    ecx,0x8
  424654:	jb     0x4245fc
  424656:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424658:	jmp    DWORD PTR [edx*4+0x4246ec]
  42465f:	nop
  424660:	and    edx,ecx
  424662:	mov    al,BYTE PTR [esi]
  424664:	mov    BYTE PTR [edi],al
  424666:	add    esi,0x1
  424669:	shr    ecx,0x2
  42466c:	add    edi,0x1
  42466f:	cmp    ecx,0x8
  424672:	jb     0x4245fc
  424674:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424676:	jmp    DWORD PTR [edx*4+0x4246ec]
  42467d:	lea    ecx,[ecx+0x0]
  424680:	jecxz  0x4246c8
  424682:	inc    edx
  424683:	add    al,dl
  424685:	inc    esi
  424686:	inc    edx
  424687:	add    al,cl
  424689:	inc    esi
  42468a:	inc    edx
  42468b:	add    al,al
  42468d:	inc    esi
  42468e:	inc    edx
  42468f:	add    BYTE PTR [eax-0x4fffbdba],bh
  424695:	inc    esi
  424696:	inc    edx
  424697:	add    BYTE PTR [eax-0x5fffbdba],ch
  42469d:	inc    esi
  42469e:	inc    edx
  42469f:	add    BYTE PTR [ebx-0x761b71bc],cl
  4246a5:	inc    esp
  4246a6:	(bad)  
  4246a7:	in     al,0x8b
  4246a9:	inc    esp
  4246aa:	mov    gs,eax
  4246ac:	mov    DWORD PTR [edi+ecx*4-0x18],eax
  4246b0:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
  4246b4:	mov    DWORD PTR [edi+ecx*4-0x14],eax
  4246b8:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
  4246bc:	mov    DWORD PTR [edi+ecx*4-0x10],eax
  4246c0:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
  4246c4:	mov    DWORD PTR [edi+ecx*4-0xc],eax
  4246c8:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
  4246cc:	mov    DWORD PTR [edi+ecx*4-0x8],eax
  4246d0:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
  4246d4:	mov    DWORD PTR [edi+ecx*4-0x4],eax
  4246d8:	lea    eax,[ecx*4+0x0]
  4246df:	add    esi,eax
  4246e1:	add    edi,eax
  4246e3:	jmp    DWORD PTR [edx*4+0x4246ec]
  4246ea:	mov    edi,edi
  4246ec:	cld    
  4246ed:	inc    esi
  4246ee:	inc    edx
  4246ef:	add    BYTE PTR [edi+eax*2],al
  4246f2:	inc    edx
  4246f3:	add    BYTE PTR [eax],dl
  4246f5:	inc    edi
  4246f6:	inc    edx
  4246f7:	add    BYTE PTR [edi+eax*2],ah
  4246fa:	inc    edx
  4246fb:	add    BYTE PTR [ebx+0x5f5e0845],cl
  424701:	leave  
  424702:	ret    
  424703:	nop
  424704:	mov    al,BYTE PTR [esi]
  424706:	mov    BYTE PTR [edi],al
  424708:	mov    eax,DWORD PTR [ebp+0x8]
  42470b:	pop    esi
  42470c:	pop    edi
  42470d:	leave  
  42470e:	ret    
  42470f:	nop
  424710:	mov    al,BYTE PTR [esi]
  424712:	mov    BYTE PTR [edi],al
  424714:	mov    al,BYTE PTR [esi+0x1]
  424717:	mov    BYTE PTR [edi+0x1],al
  42471a:	mov    eax,DWORD PTR [ebp+0x8]
  42471d:	pop    esi
  42471e:	pop    edi
  42471f:	leave  
  424720:	ret    
  424721:	lea    ecx,[ecx+0x0]
  424724:	mov    al,BYTE PTR [esi]
  424726:	mov    BYTE PTR [edi],al
  424728:	mov    al,BYTE PTR [esi+0x1]
  42472b:	mov    BYTE PTR [edi+0x1],al
  42472e:	mov    al,BYTE PTR [esi+0x2]
  424731:	mov    BYTE PTR [edi+0x2],al
  424734:	mov    eax,DWORD PTR [ebp+0x8]
  424737:	pop    esi
  424738:	pop    edi
  424739:	leave  
  42473a:	ret    
  42473b:	nop
  42473c:	lea    esi,[ecx+esi*1-0x4]
  424740:	lea    edi,[ecx+edi*1-0x4]
  424744:	test   edi,0x3
  42474a:	jne    0x424770
  42474c:	shr    ecx,0x2
  42474f:	and    edx,0x3
  424752:	cmp    ecx,0x8
  424755:	jb     0x424764
  424757:	std    
  424758:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42475a:	cld    
  42475b:	jmp    DWORD PTR [edx*4+0x424888]
  424762:	mov    edi,edi
  424764:	neg    ecx
  424766:	jmp    DWORD PTR [ecx*4+0x424838]
  42476d:	lea    ecx,[ecx+0x0]
  424770:	mov    eax,edi
  424772:	mov    edx,0x3
  424777:	cmp    ecx,0x4
  42477a:	jb     0x424788
  42477c:	and    eax,0x3
  42477f:	sub    ecx,eax
  424781:	jmp    DWORD PTR [eax*4+0x42478c]
  424788:	jmp    DWORD PTR [ecx*4+0x424888]
  42478f:	nop
  424790:	pushf  
  424791:	inc    edi
  424792:	inc    edx
  424793:	add    al,al
  424795:	inc    edi
  424796:	inc    edx
  424797:	add    al,ch
  424799:	inc    edi
  42479a:	inc    edx
  42479b:	add    BYTE PTR [edx-0x2edcfcba],cl
  4247a1:	mov    BYTE PTR [edi+0x3],al
  4247a4:	sub    esi,0x1
  4247a7:	shr    ecx,0x2
  4247aa:	sub    edi,0x1
  4247ad:	cmp    ecx,0x8
  4247b0:	jb     0x424764
  4247b2:	std    
  4247b3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4247b5:	cld    
  4247b6:	jmp    DWORD PTR [edx*4+0x424888]
  4247bd:	lea    ecx,[ecx+0x0]
  4247c0:	mov    al,BYTE PTR [esi+0x3]
  4247c3:	and    edx,ecx
  4247c5:	mov    BYTE PTR [edi+0x3],al
  4247c8:	mov    al,BYTE PTR [esi+0x2]
  4247cb:	shr    ecx,0x2
  4247ce:	mov    BYTE PTR [edi+0x2],al
  4247d1:	sub    esi,0x2
  4247d4:	sub    edi,0x2
  4247d7:	cmp    ecx,0x8
  4247da:	jb     0x424764
  4247dc:	std    
  4247dd:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4247df:	cld    
  4247e0:	jmp    DWORD PTR [edx*4+0x424888]
  4247e7:	nop
  4247e8:	mov    al,BYTE PTR [esi+0x3]
  4247eb:	and    edx,ecx
  4247ed:	mov    BYTE PTR [edi+0x3],al
  4247f0:	mov    al,BYTE PTR [esi+0x2]
  4247f3:	mov    BYTE PTR [edi+0x2],al
  4247f6:	mov    al,BYTE PTR [esi+0x1]
  4247f9:	shr    ecx,0x2
  4247fc:	mov    BYTE PTR [edi+0x1],al
  4247ff:	sub    esi,0x3
  424802:	sub    edi,0x3
  424805:	cmp    ecx,0x8
  424808:	jb     0x424764
  42480e:	std    
  42480f:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424811:	cld    
  424812:	jmp    DWORD PTR [edx*4+0x424888]
  424819:	lea    ecx,[ecx+0x0]
  42481c:	cmp    al,0x48
  42481e:	inc    edx
  42481f:	add    BYTE PTR [eax+ecx*2+0x42],al
  424823:	add    BYTE PTR [eax+ecx*2+0x42],cl
  424827:	add    BYTE PTR [eax+ecx*2+0x42],dl
  42482b:	add    BYTE PTR [eax+ecx*2+0x42],bl
  42482f:	add    BYTE PTR [eax+ecx*2+0x42],ah
  424833:	add    BYTE PTR [eax+ecx*2+0x42],ch
  424837:	add    BYTE PTR [edi+0x48],bh
  42483a:	inc    edx
  42483b:	add    BYTE PTR [ebx-0x76e371bc],cl
  424841:	inc    esp
  424842:	(bad)  
  424843:	sbb    al,0x8b
  424845:	inc    esp
  424846:	mov    ds,WORD PTR [eax]
  424848:	mov    DWORD PTR [edi+ecx*4+0x18],eax
  42484c:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
  424850:	mov    DWORD PTR [edi+ecx*4+0x14],eax
  424854:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
  424858:	mov    DWORD PTR [edi+ecx*4+0x10],eax
  42485c:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
  424860:	mov    DWORD PTR [edi+ecx*4+0xc],eax
  424864:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
  424868:	mov    DWORD PTR [edi+ecx*4+0x8],eax
  42486c:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
  424870:	mov    DWORD PTR [edi+ecx*4+0x4],eax
  424874:	lea    eax,[ecx*4+0x0]
  42487b:	add    esi,eax
  42487d:	add    edi,eax
  42487f:	jmp    DWORD PTR [edx*4+0x424888]
  424886:	mov    edi,edi
  424888:	cwde   
  424889:	dec    eax
  42488a:	inc    edx
  42488b:	add    BYTE PTR [eax-0x4fffbdb8],ah
  424891:	dec    eax
  424892:	inc    edx
  424893:	add    ah,al
  424895:	dec    eax
  424896:	inc    edx
  424897:	add    BYTE PTR [ebx+0x5f5e0845],cl
  42489d:	leave  
  42489e:	ret    
  42489f:	nop
  4248a0:	mov    al,BYTE PTR [esi+0x3]
  4248a3:	mov    BYTE PTR [edi+0x3],al
  4248a6:	mov    eax,DWORD PTR [ebp+0x8]
  4248a9:	pop    esi
  4248aa:	pop    edi
  4248ab:	leave  
  4248ac:	ret    
  4248ad:	lea    ecx,[ecx+0x0]
  4248b0:	mov    al,BYTE PTR [esi+0x3]
  4248b3:	mov    BYTE PTR [edi+0x3],al
  4248b6:	mov    al,BYTE PTR [esi+0x2]
  4248b9:	mov    BYTE PTR [edi+0x2],al
  4248bc:	mov    eax,DWORD PTR [ebp+0x8]
  4248bf:	pop    esi
  4248c0:	pop    edi
  4248c1:	leave  
  4248c2:	ret    
  4248c3:	nop
  4248c4:	mov    al,BYTE PTR [esi+0x3]
  4248c7:	mov    BYTE PTR [edi+0x3],al
  4248ca:	mov    al,BYTE PTR [esi+0x2]
  4248cd:	mov    BYTE PTR [edi+0x2],al
  4248d0:	mov    al,BYTE PTR [esi+0x1]
  4248d3:	mov    BYTE PTR [edi+0x1],al
  4248d6:	mov    eax,DWORD PTR [ebp+0x8]
  4248d9:	pop    esi
  4248da:	pop    edi
  4248db:	leave  
  4248dc:	ret    
  4248dd:	push   DWORD PTR [esp+0x4]
  4248e1:	call   DWORD PTR ds:0x4280a8
  4248e7:	xor    eax,eax
  4248e9:	inc    eax
  4248ea:	ret    0x8
  4248ed:	push   0x10
  4248ef:	push   0x4285b8
  4248f4:	call   0x423858
  4248f9:	mov    eax,ds:0x45cd88
  4248fe:	test   eax,eax
  424900:	jne    0x424939
  424902:	cmp    DWORD PTR ds:0x45cac4,0x1
  424909:	je     0x42492f
  42490b:	push   0x4285a4
  424910:	call   DWORD PTR ds:0x428014
  424916:	test   eax,eax
  424918:	je     0x42492f
  42491a:	push   0x42857c
  42491f:	push   eax
  424920:	call   DWORD PTR ds:0x428018
  424926:	mov    ds:0x45cd88,eax
  42492b:	test   eax,eax
  42492d:	jne    0x424939
  42492f:	mov    eax,0x4248dd
  424934:	mov    ds:0x45cd88,eax
  424939:	and    DWORD PTR [ebp-0x4],0x0
  42493d:	push   DWORD PTR [ebp+0xc]
  424940:	push   DWORD PTR [ebp+0x8]
  424943:	call   eax
  424945:	mov    DWORD PTR [ebp-0x1c],eax
  424948:	jmp    0x42496e
  42494a:	mov    eax,DWORD PTR [ebp-0x14]
  42494d:	mov    eax,DWORD PTR [eax]
  42494f:	mov    eax,DWORD PTR [eax]
  424951:	mov    DWORD PTR [ebp-0x20],eax
  424954:	xor    eax,eax
  424956:	inc    eax
  424957:	ret    
  424958:	mov    esp,DWORD PTR [ebp-0x18]
  42495b:	cmp    DWORD PTR [ebp-0x20],0xc0000017
  424962:	jne    0x42496c
  424964:	push   0x8
  424966:	call   DWORD PTR ds:0x428068
  42496c:	xor    eax,eax
  42496e:	or     DWORD PTR [ebp-0x4],0xffffffff
  424972:	call   0x423893
  424977:	ret    
  424978:	push   0x10
  42497a:	push   0x4285c8
  42497f:	call   0x423858
  424984:	mov    esi,DWORD PTR [ebp+0x8]
  424987:	imul   esi,DWORD PTR [ebp+0xc]
  42498b:	mov    DWORD PTR [ebp-0x1c],esi
  42498e:	test   esi,esi
  424990:	jne    0x424993
  424992:	inc    esi
  424993:	xor    edi,edi
  424995:	mov    DWORD PTR [ebp-0x20],edi
  424998:	cmp    esi,0xffffffe0
  42499b:	ja     0x424a02
  42499d:	cmp    DWORD PTR ds:0x45d144,0x3
  4249a4:	jne    0x4249ed
  4249a6:	add    esi,0xf
  4249a9:	and    esi,0xfffffff0
  4249ac:	mov    DWORD PTR [ebp+0xc],esi
  4249af:	mov    ebx,DWORD PTR [ebp-0x1c]
  4249b2:	cmp    ebx,DWORD PTR ds:0x45cf04
  4249b8:	ja     0x4249ed
  4249ba:	push   0x4
  4249bc:	call   0x423a1f
  4249c1:	pop    ecx
  4249c2:	and    DWORD PTR [ebp-0x4],edi
  4249c5:	push   ebx
  4249c6:	call   0x425421
  4249cb:	pop    ecx
  4249cc:	mov    DWORD PTR [ebp-0x20],eax
  4249cf:	or     DWORD PTR [ebp-0x4],0xffffffff
  4249d3:	call   0x424a22
  4249d8:	mov    edi,DWORD PTR [ebp-0x20]
  4249db:	test   edi,edi
  4249dd:	je     0x4249f1
  4249df:	push   DWORD PTR [ebp-0x1c]
  4249e2:	push   0x0
  4249e4:	push   edi
  4249e5:	call   0x426160
  4249ea:	add    esp,0xc
  4249ed:	test   edi,edi
  4249ef:	jne    0x424a2b
  4249f1:	push   esi
  4249f2:	push   0x8
  4249f4:	push   DWORD PTR ds:0x45d140
  4249fa:	call   DWORD PTR ds:0x4280a4
  424a00:	mov    edi,eax
  424a02:	test   edi,edi
  424a04:	jne    0x424a2b
  424a06:	cmp    DWORD PTR ds:0x45cdc8,edi
  424a0c:	je     0x424a2b
  424a0e:	push   esi
  424a0f:	call   0x426142
  424a14:	pop    ecx
  424a15:	test   eax,eax
  424a17:	jne    0x424993
  424a1d:	jmp    0x424a2d
  424a1f:	mov    esi,DWORD PTR [ebp+0xc]
  424a22:	push   0x4
  424a24:	call   0x42398b
  424a29:	pop    ecx
  424a2a:	ret    
  424a2b:	mov    eax,edi
  424a2d:	call   0x423893
  424a32:	ret    
  424a33:	push   esi
  424a34:	mov    esi,DWORD PTR [esp+0x8]
  424a38:	mov    eax,DWORD PTR [esi+0x3c]
  424a3b:	push   edi
  424a3c:	xor    edi,edi
  424a3e:	cmp    eax,DWORD PTR ds:0x45cdd4
  424a44:	je     0x424aa9
  424a46:	cmp    eax,edi
  424a48:	je     0x424aa9
  424a4a:	mov    eax,DWORD PTR [esi+0x2c]
  424a4d:	cmp    DWORD PTR [eax],edi
  424a4f:	jne    0x424aa9
  424a51:	mov    eax,DWORD PTR [esi+0x34]
  424a54:	cmp    eax,edi
  424a56:	je     0x424a74
  424a58:	cmp    DWORD PTR [eax],edi
  424a5a:	jne    0x424a74
  424a5c:	cmp    eax,DWORD PTR ds:0x45cef0
  424a62:	je     0x424a74
  424a64:	push   eax
  424a65:	call   0x42446a
  424a6a:	push   DWORD PTR [esi+0x3c]
  424a6d:	call   0x4263af
  424a72:	pop    ecx
  424a73:	pop    ecx
  424a74:	mov    eax,DWORD PTR [esi+0x30]
  424a77:	cmp    eax,edi
  424a79:	je     0x424a97
  424a7b:	cmp    DWORD PTR [eax],edi
  424a7d:	jne    0x424a97
  424a7f:	cmp    eax,DWORD PTR ds:0x45cef4
  424a85:	je     0x424a97
  424a87:	push   eax
  424a88:	call   0x42446a
  424a8d:	push   DWORD PTR [esi+0x3c]
  424a90:	call   0x426350
  424a95:	pop    ecx
  424a96:	pop    ecx
  424a97:	push   DWORD PTR [esi+0x2c]
  424a9a:	call   0x42446a
  424a9f:	push   DWORD PTR [esi+0x3c]
  424aa2:	call   0x42446a
  424aa7:	pop    ecx
  424aa8:	pop    ecx
  424aa9:	mov    eax,DWORD PTR [esi+0x40]
  424aac:	cmp    eax,DWORD PTR ds:0x45ceec
  424ab2:	je     0x424acc
  424ab4:	cmp    eax,edi
  424ab6:	je     0x424acc
  424ab8:	cmp    DWORD PTR [eax],edi
  424aba:	jne    0x424acc
  424abc:	push   eax
  424abd:	call   0x42446a
  424ac2:	push   DWORD PTR [esi+0x44]
  424ac5:	call   0x42446a
  424aca:	pop    ecx
  424acb:	pop    ecx
  424acc:	mov    eax,DWORD PTR [esi+0x50]
  424acf:	cmp    eax,DWORD PTR ds:0x45cdd0
  424ad5:	je     0x424af3
  424ad7:	cmp    eax,edi
  424ad9:	je     0x424af3
  424adb:	cmp    DWORD PTR [eax+0xb4],edi
  424ae1:	jne    0x424af3
  424ae3:	push   eax
  424ae4:	call   0x4261c0
  424ae9:	push   DWORD PTR [esi+0x50]
  424aec:	call   0x42446a
  424af1:	pop    ecx
  424af2:	pop    ecx
  424af3:	push   esi
  424af4:	call   0x42446a
  424af9:	pop    ecx
  424afa:	pop    edi
  424afb:	pop    esi
  424afc:	ret    
  424afd:	push   esi
  424afe:	call   0x42370d
  424b03:	mov    esi,eax
  424b05:	mov    eax,DWORD PTR [esi+0x64]
  424b08:	cmp    eax,DWORD PTR ds:0x45c58c
  424b0e:	je     0x424bba
  424b14:	test   eax,eax
  424b16:	je     0x424b47
  424b18:	mov    ecx,DWORD PTR [eax+0x2c]
  424b1b:	dec    DWORD PTR [eax]
  424b1d:	test   ecx,ecx
  424b1f:	je     0x424b23
  424b21:	dec    DWORD PTR [ecx]
  424b23:	mov    ecx,DWORD PTR [eax+0x34]
  424b26:	test   ecx,ecx
  424b28:	je     0x424b2c
  424b2a:	dec    DWORD PTR [ecx]
  424b2c:	mov    ecx,DWORD PTR [eax+0x30]
  424b2f:	test   ecx,ecx
  424b31:	je     0x424b35
  424b33:	dec    DWORD PTR [ecx]
  424b35:	mov    ecx,DWORD PTR [eax+0x40]
  424b38:	test   ecx,ecx
  424b3a:	je     0x424b3e
  424b3c:	dec    DWORD PTR [ecx]
  424b3e:	mov    ecx,DWORD PTR [eax+0x4c]
  424b41:	dec    DWORD PTR [ecx+0xb4]
  424b47:	mov    ecx,DWORD PTR ds:0x45c58c
  424b4d:	mov    DWORD PTR [esi+0x64],ecx
  424b50:	mov    ecx,DWORD PTR ds:0x45c58c
  424b56:	inc    DWORD PTR [ecx]
  424b58:	mov    ecx,DWORD PTR ds:0x45c58c
  424b5e:	mov    ecx,DWORD PTR [ecx+0x2c]
  424b61:	test   ecx,ecx
  424b63:	je     0x424b67
  424b65:	inc    DWORD PTR [ecx]
  424b67:	mov    ecx,DWORD PTR ds:0x45c58c
  424b6d:	mov    ecx,DWORD PTR [ecx+0x34]
  424b70:	test   ecx,ecx
  424b72:	je     0x424b76
  424b74:	inc    DWORD PTR [ecx]
  424b76:	mov    ecx,DWORD PTR ds:0x45c58c
  424b7c:	mov    ecx,DWORD PTR [ecx+0x30]
  424b7f:	test   ecx,ecx
  424b81:	je     0x424b85
  424b83:	inc    DWORD PTR [ecx]
  424b85:	mov    ecx,DWORD PTR ds:0x45c58c
  424b8b:	mov    ecx,DWORD PTR [ecx+0x40]
  424b8e:	test   ecx,ecx
  424b90:	je     0x424b94
  424b92:	inc    DWORD PTR [ecx]
  424b94:	mov    ecx,DWORD PTR ds:0x45c58c
  424b9a:	mov    ecx,DWORD PTR [ecx+0x4c]
  424b9d:	inc    DWORD PTR [ecx+0xb4]
  424ba3:	test   eax,eax
  424ba5:	je     0x424bba
  424ba7:	cmp    DWORD PTR [eax],0x0
  424baa:	jne    0x424bba
  424bac:	cmp    eax,0x45c538
  424bb1:	je     0x424bba
  424bb3:	push   eax
  424bb4:	call   0x424a33
  424bb9:	pop    ecx
  424bba:	mov    eax,DWORD PTR [esi+0x64]
  424bbd:	pop    esi
  424bbe:	ret    
  424bbf:	push   0xc
  424bc1:	push   0x428758
  424bc6:	call   0x423858
  424bcb:	push   0xc
  424bcd:	call   0x423a1f
  424bd2:	pop    ecx
  424bd3:	and    DWORD PTR [ebp-0x4],0x0
  424bd7:	call   0x424afd
  424bdc:	mov    DWORD PTR [ebp-0x1c],eax
  424bdf:	or     DWORD PTR [ebp-0x4],0xffffffff
  424be3:	call   0x424bf1
  424be8:	mov    eax,DWORD PTR [ebp-0x1c]
  424beb:	call   0x423893
  424bf0:	ret    
  424bf1:	push   0xc
  424bf3:	call   0x42398b
  424bf8:	pop    ecx
  424bf9:	ret    
  424bfa:	push   0x140
  424bff:	push   0x0
  424c01:	push   DWORD PTR ds:0x45d140
  424c07:	call   DWORD PTR ds:0x4280a4
  424c0d:	test   eax,eax
  424c0f:	mov    ds:0x45cf00,eax
  424c14:	jne    0x424c17
  424c16:	ret    
  424c17:	mov    ecx,DWORD PTR [esp+0x4]
  424c1b:	and    DWORD PTR ds:0x45cef8,0x0
  424c22:	and    DWORD PTR ds:0x45cefc,0x0
  424c29:	mov    ds:0x45cf08,eax
  424c2e:	xor    eax,eax
  424c30:	mov    DWORD PTR ds:0x45cf04,ecx
  424c36:	mov    DWORD PTR ds:0x45cf0c,0x10
  424c40:	inc    eax
  424c41:	ret    
  424c42:	mov    eax,ds:0x45cefc
  424c47:	lea    ecx,[eax+eax*4]
  424c4a:	mov    eax,ds:0x45cf00
  424c4f:	lea    ecx,[eax+ecx*4]
  424c52:	jmp    0x424c66
  424c54:	mov    edx,DWORD PTR [esp+0x4]
  424c58:	sub    edx,DWORD PTR [eax+0xc]
  424c5b:	cmp    edx,0x100000
  424c61:	jb     0x424c6c
  424c63:	add    eax,0x14
  424c66:	cmp    eax,ecx
  424c68:	jb     0x424c54
  424c6a:	xor    eax,eax
  424c6c:	ret    
  424c6d:	push   ebp
  424c6e:	mov    ebp,esp
  424c70:	sub    esp,0x10
  424c73:	mov    ecx,DWORD PTR [ebp+0x8]
  424c76:	mov    eax,DWORD PTR [ecx+0x10]
  424c79:	push   esi
  424c7a:	mov    esi,DWORD PTR [ebp+0xc]
  424c7d:	push   edi
  424c7e:	mov    edi,esi
  424c80:	sub    edi,DWORD PTR [ecx+0xc]
  424c83:	add    esi,0xfffffffc
  424c86:	shr    edi,0xf
  424c89:	mov    ecx,edi
  424c8b:	imul   ecx,ecx,0x204
  424c91:	lea    ecx,[ecx+eax*1+0x144]
  424c98:	mov    DWORD PTR [ebp-0x10],ecx
  424c9b:	mov    ecx,DWORD PTR [esi]
  424c9d:	dec    ecx
  424c9e:	test   cl,0x1
  424ca1:	mov    DWORD PTR [ebp-0x4],ecx
  424ca4:	jne    0x424f81
  424caa:	push   ebx
  424cab:	lea    ebx,[ecx+esi*1]
  424cae:	mov    edx,DWORD PTR [ebx]
  424cb0:	mov    DWORD PTR [ebp-0xc],edx
  424cb3:	mov    edx,DWORD PTR [esi-0x4]
  424cb6:	mov    DWORD PTR [ebp-0x8],edx
  424cb9:	mov    edx,DWORD PTR [ebp-0xc]
  424cbc:	test   dl,0x1
  424cbf:	mov    DWORD PTR [ebp+0xc],ebx
  424cc2:	jne    0x424d38
  424cc4:	sar    edx,0x4
  424cc7:	dec    edx
  424cc8:	cmp    edx,0x3f
  424ccb:	jbe    0x424cd0
  424ccd:	push   0x3f
  424ccf:	pop    edx
  424cd0:	mov    ecx,DWORD PTR [ebx+0x4]
  424cd3:	cmp    ecx,DWORD PTR [ebx+0x8]
  424cd6:	jne    0x424d1a
  424cd8:	cmp    edx,0x20
  424cdb:	mov    ebx,0x80000000
  424ce0:	jae    0x424cfb
  424ce2:	mov    ecx,edx
  424ce4:	shr    ebx,cl
  424ce6:	lea    ecx,[edx+eax*1+0x4]
  424cea:	not    ebx
  424cec:	and    DWORD PTR [eax+edi*4+0x44],ebx
  424cf0:	dec    BYTE PTR [ecx]
  424cf2:	jne    0x424d17
  424cf4:	mov    ecx,DWORD PTR [ebp+0x8]
  424cf7:	and    DWORD PTR [ecx],ebx
  424cf9:	jmp    0x424d17
  424cfb:	lea    ecx,[edx-0x20]
  424cfe:	shr    ebx,cl
  424d00:	lea    ecx,[edx+eax*1+0x4]
  424d04:	not    ebx
  424d06:	and    DWORD PTR [eax+edi*4+0xc4],ebx
  424d0d:	dec    BYTE PTR [ecx]
  424d0f:	jne    0x424d17
  424d11:	mov    ecx,DWORD PTR [ebp+0x8]
  424d14:	and    DWORD PTR [ecx+0x4],ebx
  424d17:	mov    ebx,DWORD PTR [ebp+0xc]
  424d1a:	mov    edx,DWORD PTR [ebx+0x8]
  424d1d:	mov    ebx,DWORD PTR [ebx+0x4]
  424d20:	mov    ecx,DWORD PTR [ebp-0x4]
  424d23:	add    ecx,DWORD PTR [ebp-0xc]
  424d26:	mov    DWORD PTR [edx+0x4],ebx
  424d29:	mov    edx,DWORD PTR [ebp+0xc]
  424d2c:	mov    ebx,DWORD PTR [edx+0x4]
  424d2f:	mov    edx,DWORD PTR [edx+0x8]
  424d32:	mov    DWORD PTR [ebx+0x8],edx
  424d35:	mov    DWORD PTR [ebp-0x4],ecx
  424d38:	mov    edx,ecx
  424d3a:	sar    edx,0x4
  424d3d:	dec    edx
  424d3e:	cmp    edx,0x3f
  424d41:	jbe    0x424d46
  424d43:	push   0x3f
  424d45:	pop    edx
  424d46:	mov    ebx,DWORD PTR [ebp-0x8]
  424d49:	and    ebx,0x1
  424d4c:	mov    DWORD PTR [ebp-0xc],ebx
  424d4f:	jne    0x424de4
  424d55:	sub    esi,DWORD PTR [ebp-0x8]
  424d58:	mov    ebx,DWORD PTR [ebp-0x8]
  424d5b:	sar    ebx,0x4
  424d5e:	push   0x3f
  424d60:	mov    DWORD PTR [ebp+0xc],esi
  424d63:	dec    ebx
  424d64:	pop    esi
  424d65:	cmp    ebx,esi
  424d67:	jbe    0x424d6b
  424d69:	mov    ebx,esi
  424d6b:	add    ecx,DWORD PTR [ebp-0x8]
  424d6e:	mov    edx,ecx
  424d70:	sar    edx,0x4
  424d73:	dec    edx
  424d74:	cmp    edx,esi
  424d76:	mov    DWORD PTR [ebp-0x4],ecx
  424d79:	jbe    0x424d7d
  424d7b:	mov    edx,esi
  424d7d:	cmp    ebx,edx
  424d7f:	je     0x424ddf
  424d81:	mov    ecx,DWORD PTR [ebp+0xc]
  424d84:	mov    esi,DWORD PTR [ecx+0x4]
  424d87:	cmp    esi,DWORD PTR [ecx+0x8]
  424d8a:	jne    0x424dc7
  424d8c:	cmp    ebx,0x20
  424d8f:	mov    esi,0x80000000
  424d94:	jae    0x424dad
  424d96:	mov    ecx,ebx
  424d98:	shr    esi,cl
  424d9a:	not    esi
  424d9c:	and    DWORD PTR [eax+edi*4+0x44],esi
  424da0:	dec    BYTE PTR [ebx+eax*1+0x4]
  424da4:	jne    0x424dc7
  424da6:	mov    ecx,DWORD PTR [ebp+0x8]
  424da9:	and    DWORD PTR [ecx],esi
  424dab:	jmp    0x424dc7
  424dad:	lea    ecx,[ebx-0x20]
  424db0:	shr    esi,cl
  424db2:	not    esi
  424db4:	and    DWORD PTR [eax+edi*4+0xc4],esi
  424dbb:	dec    BYTE PTR [ebx+eax*1+0x4]
  424dbf:	jne    0x424dc7
  424dc1:	mov    ecx,DWORD PTR [ebp+0x8]
  424dc4:	and    DWORD PTR [ecx+0x4],esi
  424dc7:	mov    ecx,DWORD PTR [ebp+0xc]
  424dca:	mov    esi,DWORD PTR [ecx+0x8]
  424dcd:	mov    ecx,DWORD PTR [ecx+0x4]
  424dd0:	mov    DWORD PTR [esi+0x4],ecx
  424dd3:	mov    ecx,DWORD PTR [ebp+0xc]
  424dd6:	mov    esi,DWORD PTR [ecx+0x4]
  424dd9:	mov    ecx,DWORD PTR [ecx+0x8]
  424ddc:	mov    DWORD PTR [esi+0x8],ecx
  424ddf:	mov    esi,DWORD PTR [ebp+0xc]
  424de2:	jmp    0x424de7
  424de4:	mov    ebx,DWORD PTR [ebp+0x8]
  424de7:	cmp    DWORD PTR [ebp-0xc],0x0
  424deb:	jne    0x424df5
  424ded:	cmp    ebx,edx
  424def:	je     0x424e75
  424df5:	mov    ecx,DWORD PTR [ebp-0x10]
  424df8:	lea    ecx,[ecx+edx*8]
  424dfb:	mov    ebx,DWORD PTR [ecx+0x4]
  424dfe:	mov    DWORD PTR [esi+0x8],ecx
  424e01:	mov    DWORD PTR [esi+0x4],ebx
  424e04:	mov    DWORD PTR [ecx+0x4],esi
  424e07:	mov    ecx,DWORD PTR [esi+0x4]
  424e0a:	mov    DWORD PTR [ecx+0x8],esi
  424e0d:	mov    ecx,DWORD PTR [esi+0x4]
  424e10:	cmp    ecx,DWORD PTR [esi+0x8]
  424e13:	jne    0x424e75
  424e15:	mov    cl,BYTE PTR [edx+eax*1+0x4]
  424e19:	mov    BYTE PTR [ebp+0xf],cl
  424e1c:	inc    cl
  424e1e:	cmp    edx,0x20
  424e21:	mov    BYTE PTR [edx+eax*1+0x4],cl
  424e25:	jae    0x424e4c
  424e27:	cmp    BYTE PTR [ebp+0xf],0x0
  424e2b:	jne    0x424e3b
  424e2d:	mov    ecx,edx
  424e2f:	mov    ebx,0x80000000
  424e34:	shr    ebx,cl
  424e36:	mov    ecx,DWORD PTR [ebp+0x8]
  424e39:	or     DWORD PTR [ecx],ebx
  424e3b:	mov    ebx,0x80000000
  424e40:	mov    ecx,edx
  424e42:	shr    ebx,cl
  424e44:	lea    eax,[eax+edi*4+0x44]
  424e48:	or     DWORD PTR [eax],ebx
  424e4a:	jmp    0x424e75
  424e4c:	cmp    BYTE PTR [ebp+0xf],0x0
  424e50:	jne    0x424e62
  424e52:	lea    ecx,[edx-0x20]
  424e55:	mov    ebx,0x80000000
  424e5a:	shr    ebx,cl
  424e5c:	mov    ecx,DWORD PTR [ebp+0x8]
  424e5f:	or     DWORD PTR [ecx+0x4],ebx
  424e62:	lea    ecx,[edx-0x20]
  424e65:	mov    edx,0x80000000
  424e6a:	shr    edx,cl
  424e6c:	lea    eax,[eax+edi*4+0xc4]
  424e73:	or     DWORD PTR [eax],edx
  424e75:	mov    eax,DWORD PTR [ebp-0x4]
  424e78:	mov    DWORD PTR [esi],eax
  424e7a:	mov    DWORD PTR [eax+esi*1-0x4],eax
  424e7e:	mov    eax,DWORD PTR [ebp-0x10]
  424e81:	dec    DWORD PTR [eax]
  424e83:	jne    0x424f80
  424e89:	mov    eax,ds:0x45cef8
  424e8e:	test   eax,eax
  424e90:	je     0x424f72
  424e96:	mov    ecx,DWORD PTR ds:0x45cf10
  424e9c:	mov    esi,DWORD PTR ds:0x428084
  424ea2:	push   0x4000
  424ea7:	shl    ecx,0xf
  424eaa:	add    ecx,DWORD PTR [eax+0xc]
  424ead:	mov    ebx,0x8000
  424eb2:	push   ebx
  424eb3:	push   ecx
  424eb4:	call   esi
  424eb6:	mov    ecx,DWORD PTR ds:0x45cf10
  424ebc:	mov    eax,ds:0x45cef8
  424ec1:	mov    edx,0x80000000
  424ec6:	shr    edx,cl
  424ec8:	or     DWORD PTR [eax+0x8],edx
  424ecb:	mov    eax,ds:0x45cef8
  424ed0:	mov    eax,DWORD PTR [eax+0x10]
  424ed3:	mov    ecx,DWORD PTR ds:0x45cf10
  424ed9:	and    DWORD PTR [eax+ecx*4+0xc4],0x0
  424ee1:	mov    eax,ds:0x45cef8
  424ee6:	mov    eax,DWORD PTR [eax+0x10]
  424ee9:	dec    BYTE PTR [eax+0x43]
  424eec:	mov    eax,ds:0x45cef8
  424ef1:	mov    ecx,DWORD PTR [eax+0x10]
  424ef4:	cmp    BYTE PTR [ecx+0x43],0x0
  424ef8:	jne    0x424f03
  424efa:	and    DWORD PTR [eax+0x4],0xfffffffe
  424efe:	mov    eax,ds:0x45cef8
  424f03:	cmp    DWORD PTR [eax+0x8],0xffffffff
  424f07:	jne    0x424f72
  424f09:	push   ebx
  424f0a:	push   0x0
  424f0c:	push   DWORD PTR [eax+0xc]
  424f0f:	call   esi
  424f11:	mov    eax,ds:0x45cef8
  424f16:	push   DWORD PTR [eax+0x10]
  424f19:	push   0x0
  424f1b:	push   DWORD PTR ds:0x45d140
  424f21:	call   DWORD PTR ds:0x428088
  424f27:	mov    eax,ds:0x45cefc
  424f2c:	mov    edx,DWORD PTR ds:0x45cf00
  424f32:	lea    eax,[eax+eax*4]
  424f35:	shl    eax,0x2
  424f38:	mov    ecx,eax
  424f3a:	mov    eax,ds:0x45cef8
  424f3f:	sub    ecx,eax
  424f41:	lea    ecx,[ecx+edx*1-0x14]
  424f45:	push   ecx
  424f46:	lea    ecx,[eax+0x14]
  424f49:	push   ecx
  424f4a:	push   eax
  424f4b:	call   0x4267a0
  424f50:	mov    eax,DWORD PTR [ebp+0x8]
  424f53:	add    esp,0xc
  424f56:	dec    DWORD PTR ds:0x45cefc
  424f5c:	cmp    eax,DWORD PTR ds:0x45cef8
  424f62:	jbe    0x424f68
  424f64:	sub    DWORD PTR [ebp+0x8],0x14
  424f68:	mov    eax,ds:0x45cf00
  424f6d:	mov    ds:0x45cf08,eax
  424f72:	mov    eax,DWORD PTR [ebp+0x8]
  424f75:	mov    ds:0x45cef8,eax
  424f7a:	mov    DWORD PTR ds:0x45cf10,edi
  424f80:	pop    ebx
  424f81:	pop    edi
  424f82:	pop    esi
  424f83:	leave  
  424f84:	ret    
  424f85:	mov    eax,ds:0x45cefc
  424f8a:	mov    ecx,DWORD PTR ds:0x45cf0c
  424f90:	push   edi
  424f91:	xor    edi,edi
  424f93:	cmp    eax,ecx
  424f95:	jne    0x424fcb
  424f97:	lea    eax,[ecx+ecx*4+0x50]
  424f9b:	shl    eax,0x2
  424f9e:	push   eax
  424f9f:	push   DWORD PTR ds:0x45cf00
  424fa5:	push   edi
  424fa6:	push   DWORD PTR ds:0x45d140
  424fac:	call   DWORD PTR ds:0x4280b0
  424fb2:	cmp    eax,edi
  424fb4:	jne    0x424fba
  424fb6:	xor    eax,eax
  424fb8:	pop    edi
  424fb9:	ret    
  424fba:	add    DWORD PTR ds:0x45cf0c,0x10
  424fc1:	mov    ds:0x45cf00,eax
  424fc6:	mov    eax,ds:0x45cefc
  424fcb:	mov    ecx,DWORD PTR ds:0x45cf00
  424fd1:	push   esi
  424fd2:	push   0x41c4
  424fd7:	push   0x8
  424fd9:	push   DWORD PTR ds:0x45d140
  424fdf:	lea    eax,[eax+eax*4]
  424fe2:	lea    esi,[ecx+eax*4]
  424fe5:	call   DWORD PTR ds:0x4280a4
  424feb:	cmp    eax,edi
  424fed:	mov    DWORD PTR [esi+0x10],eax
  424ff0:	jne    0x424ff6
  424ff2:	xor    eax,eax
  424ff4:	jmp    0x425039
  424ff6:	push   0x4
  424ff8:	push   0x2000
  424ffd:	push   0x100000
  425002:	push   edi
  425003:	call   DWORD PTR ds:0x4280ac
  425009:	cmp    eax,edi
  42500b:	mov    DWORD PTR [esi+0xc],eax
  42500e:	jne    0x425022
  425010:	push   DWORD PTR [esi+0x10]
  425013:	push   edi
  425014:	push   DWORD PTR ds:0x45d140
  42501a:	call   DWORD PTR ds:0x428088
  425020:	jmp    0x424ff2
  425022:	or     DWORD PTR [esi+0x8],0xffffffff
  425026:	mov    DWORD PTR [esi],edi
  425028:	mov    DWORD PTR [esi+0x4],edi
  42502b:	inc    DWORD PTR ds:0x45cefc
  425031:	mov    eax,DWORD PTR [esi+0x10]
  425034:	or     DWORD PTR [eax],0xffffffff
  425037:	mov    eax,esi
  425039:	pop    esi
  42503a:	pop    edi
  42503b:	ret    
  42503c:	push   ebp
  42503d:	mov    ebp,esp
  42503f:	push   ecx
  425040:	push   ecx
  425041:	mov    ecx,DWORD PTR [ebp+0x8]
  425044:	mov    eax,DWORD PTR [ecx+0x8]
  425047:	push   ebx
  425048:	push   esi
  425049:	mov    esi,DWORD PTR [ecx+0x10]
  42504c:	push   edi
  42504d:	xor    ebx,ebx
  42504f:	jmp    0x425054
  425051:	shl    eax,1
  425053:	inc    ebx
  425054:	test   eax,eax
  425056:	jge    0x425051
  425058:	mov    eax,ebx
  42505a:	imul   eax,eax,0x204
  425060:	lea    eax,[eax+esi*1+0x144]
  425067:	push   0x3f
  425069:	mov    DWORD PTR [ebp-0x8],eax
  42506c:	pop    edx
  42506d:	mov    DWORD PTR [eax+0x8],eax
  425070:	mov    DWORD PTR [eax+0x4],eax
  425073:	add    eax,0x8
  425076:	dec    edx
  425077:	jne    0x42506d
  425079:	push   0x4
  42507b:	mov    edi,ebx
  42507d:	push   0x1000
  425082:	shl    edi,0xf
  425085:	add    edi,DWORD PTR [ecx+0xc]
  425088:	push   0x8000
  42508d:	push   edi
  42508e:	call   DWORD PTR ds:0x4280ac
  425094:	test   eax,eax
  425096:	jne    0x4250a0
  425098:	or     eax,0xffffffff
  42509b:	jmp    0x42513d
  4250a0:	lea    edx,[edi+0x7000]
  4250a6:	cmp    edi,edx
  4250a8:	mov    DWORD PTR [ebp-0x4],edx
  4250ab:	ja     0x4250f0
  4250ad:	mov    ecx,edx
  4250af:	sub    ecx,edi
  4250b1:	shr    ecx,0xc
  4250b4:	lea    eax,[edi+0x10]
  4250b7:	inc    ecx
  4250b8:	or     DWORD PTR [eax-0x8],0xffffffff
  4250bc:	or     DWORD PTR [eax+0xfec],0xffffffff
  4250c3:	lea    edx,[eax+0xffc]
  4250c9:	mov    DWORD PTR [eax],edx
  4250cb:	lea    edx,[eax-0x1004]
  4250d1:	mov    DWORD PTR [eax-0x4],0xff0
  4250d8:	mov    DWORD PTR [eax+0x4],edx
  4250db:	mov    DWORD PTR [eax+0xfe8],0xff0
  4250e5:	add    eax,0x1000
  4250ea:	dec    ecx
  4250eb:	jne    0x4250b8
  4250ed:	mov    edx,DWORD PTR [ebp-0x4]
  4250f0:	mov    eax,DWORD PTR [ebp-0x8]
  4250f3:	add    eax,0x1f8
  4250f8:	lea    ecx,[edi+0xc]
  4250fb:	mov    DWORD PTR [eax+0x4],ecx
  4250fe:	mov    DWORD PTR [ecx+0x8],eax
  425101:	lea    ecx,[edx+0xc]
  425104:	mov    DWORD PTR [eax+0x8],ecx
  425107:	mov    DWORD PTR [ecx+0x4],eax
  42510a:	and    DWORD PTR [esi+ebx*4+0x44],0x0
  42510f:	xor    edi,edi
  425111:	inc    edi
  425112:	mov    DWORD PTR [esi+ebx*4+0xc4],edi
  425119:	mov    al,BYTE PTR [esi+0x43]
  42511c:	mov    cl,al
  42511e:	inc    cl
  425120:	test   al,al
  425122:	mov    eax,DWORD PTR [ebp+0x8]
  425125:	mov    BYTE PTR [esi+0x43],cl
  425128:	jne    0x42512d
  42512a:	or     DWORD PTR [eax+0x4],edi
  42512d:	mov    edx,0x80000000
  425132:	mov    ecx,ebx
  425134:	shr    edx,cl
  425136:	not    edx
  425138:	and    DWORD PTR [eax+0x8],edx
  42513b:	mov    eax,ebx
  42513d:	pop    edi
  42513e:	pop    esi
  42513f:	pop    ebx
  425140:	leave  
  425141:	ret    
  425142:	push   ebp
  425143:	mov    ebp,esp
  425145:	sub    esp,0xc
  425148:	mov    ecx,DWORD PTR [ebp+0x8]
  42514b:	mov    eax,DWORD PTR [ecx+0x10]
  42514e:	push   ebx
  42514f:	push   esi
  425150:	mov    esi,DWORD PTR [ebp+0x10]
  425153:	push   edi
  425154:	mov    edi,DWORD PTR [ebp+0xc]
  425157:	mov    edx,edi
  425159:	sub    edx,DWORD PTR [ecx+0xc]
  42515c:	add    esi,0x17
  42515f:	shr    edx,0xf
  425162:	mov    ecx,edx
  425164:	imul   ecx,ecx,0x204
  42516a:	lea    ecx,[ecx+eax*1+0x144]
  425171:	mov    DWORD PTR [ebp-0xc],ecx
  425174:	mov    ecx,DWORD PTR [edi-0x4]
  425177:	and    esi,0xfffffff0
  42517a:	dec    ecx
  42517b:	cmp    esi,ecx
  42517d:	lea    edi,[ecx+edi*1-0x4]
  425181:	mov    ebx,DWORD PTR [edi]
  425183:	mov    DWORD PTR [ebp+0x10],ecx
  425186:	mov    DWORD PTR [ebp-0x4],ebx
  425189:	jle    0x4252e4
  42518f:	test   bl,0x1
  425192:	jne    0x4252dd
  425198:	add    ebx,ecx
  42519a:	cmp    esi,ebx
  42519c:	jg     0x4252dd
  4251a2:	mov    ecx,DWORD PTR [ebp-0x4]
  4251a5:	sar    ecx,0x4
  4251a8:	dec    ecx
  4251a9:	cmp    ecx,0x3f
  4251ac:	mov    DWORD PTR [ebp-0x8],ecx
  4251af:	jbe    0x4251b7
  4251b1:	push   0x3f
  4251b3:	pop    ecx
  4251b4:	mov    DWORD PTR [ebp-0x8],ecx
  4251b7:	mov    ebx,DWORD PTR [edi+0x4]
  4251ba:	cmp    ebx,DWORD PTR [edi+0x8]
  4251bd:	jne    0x425202
  4251bf:	cmp    ecx,0x20
  4251c2:	mov    ebx,0x80000000
  4251c7:	jae    0x4251e3
  4251c9:	shr    ebx,cl
  4251cb:	mov    ecx,DWORD PTR [ebp-0x8]
  4251ce:	lea    ecx,[ecx+eax*1+0x4]
  4251d2:	not    ebx
  4251d4:	and    DWORD PTR [eax+edx*4+0x44],ebx
  4251d8:	dec    BYTE PTR [ecx]
  4251da:	jne    0x425202
  4251dc:	mov    ecx,DWORD PTR [ebp+0x8]
  4251df:	and    DWORD PTR [ecx],ebx
  4251e1:	jmp    0x425202
  4251e3:	add    ecx,0xffffffe0
  4251e6:	shr    ebx,cl
  4251e8:	mov    ecx,DWORD PTR [ebp-0x8]
  4251eb:	lea    ecx,[ecx+eax*1+0x4]
  4251ef:	not    ebx
  4251f1:	and    DWORD PTR [eax+edx*4+0xc4],ebx
  4251f8:	dec    BYTE PTR [ecx]
  4251fa:	jne    0x425202
  4251fc:	mov    ecx,DWORD PTR [ebp+0x8]
  4251ff:	and    DWORD PTR [ecx+0x4],ebx
  425202:	mov    ecx,DWORD PTR [edi+0x8]
  425205:	mov    ebx,DWORD PTR [edi+0x4]
  425208:	mov    DWORD PTR [ecx+0x4],ebx
  42520b:	mov    ecx,DWORD PTR [edi+0x4]
  42520e:	mov    edi,DWORD PTR [edi+0x8]
  425211:	mov    DWORD PTR [ecx+0x8],edi
  425214:	mov    ecx,DWORD PTR [ebp+0x10]
  425217:	sub    ecx,esi
  425219:	add    DWORD PTR [ebp-0x4],ecx
  42521c:	cmp    DWORD PTR [ebp-0x4],0x0
  425220:	jle    0x4252cb
  425226:	mov    edi,DWORD PTR [ebp-0x4]
  425229:	mov    ecx,DWORD PTR [ebp+0xc]
  42522c:	sar    edi,0x4
  42522f:	dec    edi
  425230:	cmp    edi,0x3f
  425233:	lea    ecx,[ecx+esi*1-0x4]
  425237:	jbe    0x42523c
  425239:	push   0x3f
  42523b:	pop    edi
  42523c:	mov    ebx,DWORD PTR [ebp-0xc]
  42523f:	lea    ebx,[ebx+edi*8]
  425242:	mov    DWORD PTR [ebp+0x10],ebx
  425245:	mov    ebx,DWORD PTR [ebx+0x4]
  425248:	mov    DWORD PTR [ecx+0x4],ebx
  42524b:	mov    ebx,DWORD PTR [ebp+0x10]
  42524e:	mov    DWORD PTR [ecx+0x8],ebx
  425251:	mov    DWORD PTR [ebx+0x4],ecx
  425254:	mov    ebx,DWORD PTR [ecx+0x4]
  425257:	mov    DWORD PTR [ebx+0x8],ecx
  42525a:	mov    ebx,DWORD PTR [ecx+0x4]
  42525d:	cmp    ebx,DWORD PTR [ecx+0x8]
  425260:	jne    0x4252b9
  425262:	mov    cl,BYTE PTR [edi+eax*1+0x4]
  425266:	mov    BYTE PTR [ebp+0x13],cl
  425269:	inc    cl
  42526b:	cmp    edi,0x20
  42526e:	mov    BYTE PTR [edi+eax*1+0x4],cl
  425272:	jae    0x425290
  425274:	cmp    BYTE PTR [ebp+0x13],0x0
  425278:	jne    0x425288
  42527a:	mov    ecx,edi
  42527c:	mov    ebx,0x80000000
  425281:	shr    ebx,cl
  425283:	mov    ecx,DWORD PTR [ebp+0x8]
  425286:	or     DWORD PTR [ecx],ebx
  425288:	lea    eax,[eax+edx*4+0x44]
  42528c:	mov    ecx,edi
  42528e:	jmp    0x4252b0
  425290:	cmp    BYTE PTR [ebp+0x13],0x0
  425294:	jne    0x4252a6
  425296:	lea    ecx,[edi-0x20]
  425299:	mov    ebx,0x80000000
  42529e:	shr    ebx,cl
  4252a0:	mov    ecx,DWORD PTR [ebp+0x8]
  4252a3:	or     DWORD PTR [ecx+0x4],ebx
  4252a6:	lea    eax,[eax+edx*4+0xc4]
  4252ad:	lea    ecx,[edi-0x20]
  4252b0:	mov    edx,0x80000000
  4252b5:	shr    edx,cl
  4252b7:	or     DWORD PTR [eax],edx
  4252b9:	mov    edx,DWORD PTR [ebp+0xc]
  4252bc:	mov    ecx,DWORD PTR [ebp-0x4]
  4252bf:	lea    eax,[edx+esi*1-0x4]
  4252c3:	mov    DWORD PTR [eax],ecx
  4252c5:	mov    DWORD PTR [ecx+eax*1-0x4],ecx
  4252c9:	jmp    0x4252ce
  4252cb:	mov    edx,DWORD PTR [ebp+0xc]
  4252ce:	lea    eax,[esi+0x1]
  4252d1:	mov    DWORD PTR [edx-0x4],eax
  4252d4:	mov    DWORD PTR [edx+esi*1-0x8],eax
  4252d8:	jmp    0x425419
  4252dd:	xor    eax,eax
  4252df:	jmp    0x42541c
  4252e4:	jge    0x425419
  4252ea:	mov    ebx,DWORD PTR [ebp+0xc]
  4252ed:	sub    DWORD PTR [ebp+0x10],esi
  4252f0:	lea    ecx,[esi+0x1]
  4252f3:	mov    DWORD PTR [ebx-0x4],ecx
  4252f6:	lea    ebx,[ebx+esi*1-0x4]
  4252fa:	mov    esi,DWORD PTR [ebp+0x10]
  4252fd:	sar    esi,0x4
  425300:	dec    esi
  425301:	cmp    esi,0x3f
  425304:	mov    DWORD PTR [ebp+0xc],ebx
  425307:	mov    DWORD PTR [ebx-0x4],ecx
  42530a:	jbe    0x42530f
  42530c:	push   0x3f
  42530e:	pop    esi
  42530f:	test   BYTE PTR [ebp-0x4],0x1
  425313:	jne    0x425399
  425319:	mov    esi,DWORD PTR [ebp-0x4]
  42531c:	sar    esi,0x4
  42531f:	dec    esi
  425320:	cmp    esi,0x3f
  425323:	jbe    0x425328
  425325:	push   0x3f
  425327:	pop    esi
  425328:	mov    ecx,DWORD PTR [edi+0x4]
  42532b:	cmp    ecx,DWORD PTR [edi+0x8]
  42532e:	jne    0x425372
  425330:	cmp    esi,0x20
  425333:	mov    ebx,0x80000000
  425338:	jae    0x425353
  42533a:	mov    ecx,esi
  42533c:	shr    ebx,cl
  42533e:	lea    esi,[esi+eax*1+0x4]
  425342:	not    ebx
  425344:	and    DWORD PTR [eax+edx*4+0x44],ebx
  425348:	dec    BYTE PTR [esi]
  42534a:	jne    0x42536f
  42534c:	mov    ecx,DWORD PTR [ebp+0x8]
  42534f:	and    DWORD PTR [ecx],ebx
  425351:	jmp    0x42536f
  425353:	lea    ecx,[esi-0x20]
  425356:	shr    ebx,cl
  425358:	lea    ecx,[esi+eax*1+0x4]
  42535c:	not    ebx
  42535e:	and    DWORD PTR [eax+edx*4+0xc4],ebx
  425365:	dec    BYTE PTR [ecx]
  425367:	jne    0x42536f
  425369:	mov    ecx,DWORD PTR [ebp+0x8]
  42536c:	and    DWORD PTR [ecx+0x4],ebx
  42536f:	mov    ebx,DWORD PTR [ebp+0xc]
  425372:	mov    ecx,DWORD PTR [edi+0x8]
  425375:	mov    esi,DWORD PTR [edi+0x4]
  425378:	mov    DWORD PTR [ecx+0x4],esi
  42537b:	mov    esi,DWORD PTR [edi+0x8]
  42537e:	mov    ecx,DWORD PTR [edi+0x4]
  425381:	mov    DWORD PTR [ecx+0x8],esi
  425384:	mov    esi,DWORD PTR [ebp+0x10]
  425387:	add    esi,DWORD PTR [ebp-0x4]
  42538a:	mov    DWORD PTR [ebp+0x10],esi
  42538d:	sar    esi,0x4
  425390:	dec    esi
  425391:	cmp    esi,0x3f
  425394:	jbe    0x425399
  425396:	push   0x3f
  425398:	pop    esi
  425399:	mov    ecx,DWORD PTR [ebp-0xc]
  42539c:	lea    ecx,[ecx+esi*8]
  42539f:	mov    edi,DWORD PTR [ecx+0x4]
  4253a2:	mov    DWORD PTR [ebx+0x8],ecx
  4253a5:	mov    DWORD PTR [ebx+0x4],edi
  4253a8:	mov    DWORD PTR [ecx+0x4],ebx
  4253ab:	mov    ecx,DWORD PTR [ebx+0x4]
  4253ae:	mov    DWORD PTR [ecx+0x8],ebx
  4253b1:	mov    ecx,DWORD PTR [ebx+0x4]
  4253b4:	cmp    ecx,DWORD PTR [ebx+0x8]
  4253b7:	jne    0x425410
  4253b9:	mov    cl,BYTE PTR [esi+eax*1+0x4]
  4253bd:	mov    BYTE PTR [ebp+0xf],cl
  4253c0:	inc    cl
  4253c2:	cmp    esi,0x20
  4253c5:	mov    BYTE PTR [esi+eax*1+0x4],cl
  4253c9:	jae    0x4253e7
  4253cb:	cmp    BYTE PTR [ebp+0xf],0x0
  4253cf:	jne    0x4253df
  4253d1:	mov    ecx,esi
  4253d3:	mov    edi,0x80000000
  4253d8:	shr    edi,cl
  4253da:	mov    ecx,DWORD PTR [ebp+0x8]
  4253dd:	or     DWORD PTR [ecx],edi
  4253df:	lea    eax,[eax+edx*4+0x44]
  4253e3:	mov    ecx,esi
  4253e5:	jmp    0x425407
  4253e7:	cmp    BYTE PTR [ebp+0xf],0x0
  4253eb:	jne    0x4253fd
  4253ed:	lea    ecx,[esi-0x20]
  4253f0:	mov    edi,0x80000000
  4253f5:	shr    edi,cl
  4253f7:	mov    ecx,DWORD PTR [ebp+0x8]
  4253fa:	or     DWORD PTR [ecx+0x4],edi
  4253fd:	lea    eax,[eax+edx*4+0xc4]
  425404:	lea    ecx,[esi-0x20]
  425407:	mov    edx,0x80000000
  42540c:	shr    edx,cl
  42540e:	or     DWORD PTR [eax],edx
  425410:	mov    eax,DWORD PTR [ebp+0x10]
  425413:	mov    DWORD PTR [ebx],eax
  425415:	mov    DWORD PTR [eax+ebx*1-0x4],eax
  425419:	xor    eax,eax
  42541b:	inc    eax
  42541c:	pop    edi
  42541d:	pop    esi
  42541e:	pop    ebx
  42541f:	leave  
  425420:	ret    
  425421:	push   ebp
  425422:	mov    ebp,esp
  425424:	sub    esp,0x14
  425427:	mov    ecx,DWORD PTR [ebp+0x8]
  42542a:	mov    eax,ds:0x45cefc
  42542f:	mov    edx,DWORD PTR ds:0x45cf00
  425435:	add    ecx,0x17
  425438:	and    ecx,0xfffffff0
  42543b:	push   ebx
  42543c:	mov    DWORD PTR [ebp-0x10],ecx
  42543f:	sar    ecx,0x4
  425442:	push   esi
  425443:	lea    eax,[eax+eax*4]
  425446:	push   edi
  425447:	dec    ecx
  425448:	cmp    ecx,0x20
  42544b:	lea    edi,[edx+eax*4]
  42544e:	mov    DWORD PTR [ebp-0x4],edi
  425451:	jge    0x42545e
  425453:	or     esi,0xffffffff
  425456:	shr    esi,cl
  425458:	or     DWORD PTR [ebp-0x8],0xffffffff
  42545c:	jmp    0x42546b
  42545e:	add    ecx,0xffffffe0
  425461:	or     eax,0xffffffff
  425464:	xor    esi,esi
  425466:	shr    eax,cl
  425468:	mov    DWORD PTR [ebp-0x8],eax
  42546b:	mov    eax,ds:0x45cf08
  425470:	mov    ebx,eax
  425472:	mov    DWORD PTR [ebp-0xc],esi
  425475:	cmp    ebx,edi
  425477:	jmp    0x42548d
  425479:	mov    ecx,DWORD PTR [ebx+0x4]
  42547c:	mov    edi,DWORD PTR [ebx]
  42547e:	and    ecx,DWORD PTR [ebp-0x8]
  425481:	and    edi,esi
  425483:	or     ecx,edi
  425485:	jne    0x425492
  425487:	add    ebx,0x14
  42548a:	cmp    ebx,DWORD PTR [ebp-0x4]
  42548d:	mov    DWORD PTR [ebp+0x8],ebx
  425490:	jb     0x425479
  425492:	cmp    ebx,DWORD PTR [ebp-0x4]
  425495:	jne    0x4254bb
  425497:	mov    ebx,edx
  425499:	jmp    0x4254ac
  42549b:	mov    ecx,DWORD PTR [ebx+0x4]
  42549e:	mov    edi,DWORD PTR [ebx]
  4254a0:	and    ecx,DWORD PTR [ebp-0x8]
  4254a3:	and    edi,esi
  4254a5:	or     ecx,edi
  4254a7:	jne    0x4254b3
  4254a9:	add    ebx,0x14
  4254ac:	cmp    ebx,eax
  4254ae:	mov    DWORD PTR [ebp+0x8],ebx
  4254b1:	jb     0x42549b
  4254b3:	cmp    ebx,eax
  4254b5:	je     0x42554f
  4254bb:	mov    DWORD PTR ds:0x45cf08,ebx
  4254c1:	mov    eax,DWORD PTR [ebx+0x10]
  4254c4:	mov    edx,DWORD PTR [eax]
  4254c6:	cmp    edx,0xffffffff
  4254c9:	mov    DWORD PTR [ebp-0x4],edx
  4254cc:	je     0x4254e2
  4254ce:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
  4254d5:	mov    edi,DWORD PTR [eax+edx*4+0x44]
  4254d9:	and    ecx,DWORD PTR [ebp-0x8]
  4254dc:	and    edi,esi
  4254de:	or     ecx,edi
  4254e0:	jne    0x425518
  4254e2:	mov    edx,DWORD PTR [eax+0xc4]
  4254e8:	and    edx,DWORD PTR [ebp-0x8]
  4254eb:	and    DWORD PTR [ebp-0x4],0x0
  4254ef:	lea    ecx,[eax+0x44]
  4254f2:	mov    esi,DWORD PTR [ecx]
  4254f4:	and    esi,DWORD PTR [ebp-0xc]
  4254f7:	or     edx,esi
  4254f9:	mov    esi,DWORD PTR [ebp-0xc]
  4254fc:	jne    0x425515
  4254fe:	mov    edx,DWORD PTR [ecx+0x84]
  425504:	and    edx,DWORD PTR [ebp-0x8]
  425507:	inc    DWORD PTR [ebp-0x4]
  42550a:	add    ecx,0x4
  42550d:	mov    edi,DWORD PTR [ecx]
  42550f:	and    edi,esi
  425511:	or     edx,edi
  425513:	je     0x4254fe
  425515:	mov    edx,DWORD PTR [ebp-0x4]
  425518:	mov    ecx,edx
  42551a:	imul   ecx,ecx,0x204
  425520:	lea    ecx,[ecx+eax*1+0x144]
  425527:	mov    DWORD PTR [ebp-0xc],ecx
  42552a:	mov    ecx,DWORD PTR [eax+edx*4+0x44]
  42552e:	xor    edi,edi
  425530:	and    ecx,esi
  425532:	jne    0x4255a1
  425534:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
  42553b:	and    ecx,DWORD PTR [ebp-0x8]
  42553e:	push   0x20
  425540:	pop    edi
  425541:	jmp    0x4255a1
  425543:	cmp    DWORD PTR [ebx+0x8],0x0
  425547:	jne    0x425554
  425549:	add    ebx,0x14
  42554c:	mov    DWORD PTR [ebp+0x8],ebx
  42554f:	cmp    ebx,DWORD PTR [ebp-0x4]
  425552:	jb     0x425543
  425554:	cmp    ebx,DWORD PTR [ebp-0x4]
  425557:	jne    0x42557f
  425559:	mov    ebx,edx
  42555b:	jmp    0x425566
  42555d:	cmp    DWORD PTR [ebx+0x8],0x0
  425561:	jne    0x42556d
  425563:	add    ebx,0x14
  425566:	cmp    ebx,eax
  425568:	mov    DWORD PTR [ebp+0x8],ebx
  42556b:	jb     0x42555d
  42556d:	cmp    ebx,eax
  42556f:	jne    0x42557f
  425571:	call   0x424f85
  425576:	mov    ebx,eax
  425578:	test   ebx,ebx
  42557a:	mov    DWORD PTR [ebp+0x8],ebx
  42557d:	je     0x425597
  42557f:	push   ebx
  425580:	call   0x42503c
  425585:	pop    ecx
  425586:	mov    ecx,DWORD PTR [ebx+0x10]
  425589:	mov    DWORD PTR [ecx],eax
  42558b:	mov    eax,DWORD PTR [ebx+0x10]
  42558e:	cmp    DWORD PTR [eax],0xffffffff
  425591:	jne    0x4254bb
  425597:	xor    eax,eax
  425599:	jmp    0x425718
  42559e:	shl    ecx,1
  4255a0:	inc    edi
  4255a1:	test   ecx,ecx
  4255a3:	jge    0x42559e
  4255a5:	mov    ecx,DWORD PTR [ebp-0xc]
  4255a8:	mov    edx,DWORD PTR [ecx+edi*8+0x4]
  4255ac:	mov    ecx,DWORD PTR [edx]
  4255ae:	sub    ecx,DWORD PTR [ebp-0x10]
  4255b1:	mov    esi,ecx
  4255b3:	sar    esi,0x4
  4255b6:	dec    esi
  4255b7:	cmp    esi,0x3f
  4255ba:	mov    DWORD PTR [ebp-0x8],ecx
  4255bd:	jle    0x4255c2
  4255bf:	push   0x3f
  4255c1:	pop    esi
  4255c2:	cmp    esi,edi
  4255c4:	je     0x4256cb
  4255ca:	mov    ecx,DWORD PTR [edx+0x4]
  4255cd:	cmp    ecx,DWORD PTR [edx+0x8]
  4255d0:	jne    0x42562e
  4255d2:	cmp    edi,0x20
  4255d5:	mov    ebx,0x80000000
  4255da:	jge    0x425602
  4255dc:	mov    ecx,edi
  4255de:	shr    ebx,cl
  4255e0:	mov    ecx,DWORD PTR [ebp-0x4]
  4255e3:	lea    edi,[eax+edi*1+0x4]
  4255e7:	not    ebx
  4255e9:	mov    DWORD PTR [ebp-0x14],ebx
  4255ec:	and    ebx,DWORD PTR [eax+ecx*4+0x44]
  4255f0:	mov    DWORD PTR [eax+ecx*4+0x44],ebx
  4255f4:	dec    BYTE PTR [edi]
  4255f6:	jne    0x42562b
  4255f8:	mov    ecx,DWORD PTR [ebp-0x14]
  4255fb:	mov    ebx,DWORD PTR [ebp+0x8]
  4255fe:	and    DWORD PTR [ebx],ecx
  425600:	jmp    0x42562e
  425602:	lea    ecx,[edi-0x20]
  425605:	shr    ebx,cl
  425607:	mov    ecx,DWORD PTR [ebp-0x4]
  42560a:	lea    ecx,[eax+ecx*4+0xc4]
  425611:	lea    edi,[eax+edi*1+0x4]
  425615:	not    ebx
  425617:	and    DWORD PTR [ecx],ebx
  425619:	dec    BYTE PTR [edi]
  42561b:	mov    DWORD PTR [ebp-0x14],ebx
  42561e:	jne    0x42562b
  425620:	mov    ebx,DWORD PTR [ebp+0x8]
  425623:	mov    ecx,DWORD PTR [ebp-0x14]
  425626:	and    DWORD PTR [ebx+0x4],ecx
  425629:	jmp    0x42562e
  42562b:	mov    ebx,DWORD PTR [ebp+0x8]
  42562e:	cmp    DWORD PTR [ebp-0x8],0x0
  425632:	mov    ecx,DWORD PTR [edx+0x8]
  425635:	mov    edi,DWORD PTR [edx+0x4]
  425638:	mov    DWORD PTR [ecx+0x4],edi
  42563b:	mov    ecx,DWORD PTR [edx+0x4]
  42563e:	mov    edi,DWORD PTR [edx+0x8]
  425641:	mov    DWORD PTR [ecx+0x8],edi
  425644:	je     0x4256d7
  42564a:	mov    ecx,DWORD PTR [ebp-0xc]
  42564d:	lea    ecx,[ecx+esi*8]
  425650:	mov    edi,DWORD PTR [ecx+0x4]
  425653:	mov    DWORD PTR [edx+0x8],ecx
  425656:	mov    DWORD PTR [edx+0x4],edi
  425659:	mov    DWORD PTR [ecx+0x4],edx
  42565c:	mov    ecx,DWORD PTR [edx+0x4]
  42565f:	mov    DWORD PTR [ecx+0x8],edx
  425662:	mov    ecx,DWORD PTR [edx+0x4]
  425665:	cmp    ecx,DWORD PTR [edx+0x8]
  425668:	jne    0x4256c8
  42566a:	mov    cl,BYTE PTR [esi+eax*1+0x4]
  42566e:	mov    BYTE PTR [ebp+0xb],cl
  425671:	inc    cl
  425673:	cmp    esi,0x20
  425676:	mov    BYTE PTR [esi+eax*1+0x4],cl
  42567a:	jge    0x42569f
  42567c:	cmp    BYTE PTR [ebp+0xb],0x0
  425680:	jne    0x42568d
  425682:	mov    edi,0x80000000
  425687:	mov    ecx,esi
  425689:	shr    edi,cl
  42568b:	or     DWORD PTR [ebx],edi
  42568d:	mov    ecx,esi
  42568f:	mov    edi,0x80000000
  425694:	shr    edi,cl
  425696:	mov    ecx,DWORD PTR [ebp-0x4]
  425699:	or     DWORD PTR [eax+ecx*4+0x44],edi
  42569d:	jmp    0x4256c8
  42569f:	cmp    BYTE PTR [ebp+0xb],0x0
  4256a3:	jne    0x4256b2
  4256a5:	lea    ecx,[esi-0x20]
  4256a8:	mov    edi,0x80000000
  4256ad:	shr    edi,cl
  4256af:	or     DWORD PTR [ebx+0x4],edi
  4256b2:	mov    ecx,DWORD PTR [ebp-0x4]
  4256b5:	lea    edi,[eax+ecx*4+0xc4]
  4256bc:	lea    ecx,[esi-0x20]
  4256bf:	mov    esi,0x80000000
  4256c4:	shr    esi,cl
  4256c6:	or     DWORD PTR [edi],esi
  4256c8:	mov    ecx,DWORD PTR [ebp-0x8]
  4256cb:	test   ecx,ecx
  4256cd:	je     0x4256da
  4256cf:	mov    DWORD PTR [edx],ecx
  4256d1:	mov    DWORD PTR [ecx+edx*1-0x4],ecx
  4256d5:	jmp    0x4256da
  4256d7:	mov    ecx,DWORD PTR [ebp-0x8]
  4256da:	mov    esi,DWORD PTR [ebp-0x10]
  4256dd:	add    edx,ecx
  4256df:	lea    ecx,[esi+0x1]
  4256e2:	mov    DWORD PTR [edx],ecx
  4256e4:	mov    DWORD PTR [edx+esi*1-0x4],ecx
  4256e8:	mov    esi,DWORD PTR [ebp-0xc]
  4256eb:	mov    ecx,DWORD PTR [esi]
  4256ed:	test   ecx,ecx
  4256ef:	lea    edi,[ecx+0x1]
  4256f2:	mov    DWORD PTR [esi],edi
  4256f4:	jne    0x425710
  4256f6:	cmp    ebx,DWORD PTR ds:0x45cef8
  4256fc:	jne    0x425710
  4256fe:	mov    ecx,DWORD PTR [ebp-0x4]
  425701:	cmp    ecx,DWORD PTR ds:0x45cf10
  425707:	jne    0x425710
  425709:	and    DWORD PTR ds:0x45cef8,0x0
  425710:	mov    ecx,DWORD PTR [ebp-0x4]
  425713:	mov    DWORD PTR [eax],ecx
  425715:	lea    eax,[edx+0x4]
  425718:	pop    edi
  425719:	pop    esi
  42571a:	pop    ebx
  42571b:	leave  
  42571c:	ret    
  42571d:	int3   
  42571e:	int3   
  42571f:	int3   
  425720:	push   esi
  425721:	inc    ebx
  425722:	xor    dh,BYTE PTR [eax]
  425724:	pop    eax
  425725:	inc    ebx
  425726:	xor    BYTE PTR [eax],dh
  425728:	push   ebp
  425729:	mov    ebp,esp
  42572b:	sub    esp,0x8
  42572e:	push   ebx
  42572f:	push   esi
  425730:	push   edi
  425731:	push   ebp
  425732:	cld    
  425733:	mov    ebx,DWORD PTR [ebp+0xc]
  425736:	mov    eax,DWORD PTR [ebp+0x8]
  425739:	test   DWORD PTR [eax+0x4],0x6
  425740:	jne    0x4257c8
  425746:	mov    DWORD PTR [ebp-0x8],eax
  425749:	mov    eax,DWORD PTR [ebp+0x10]
  42574c:	mov    DWORD PTR [ebp-0x4],eax
  42574f:	lea    eax,[ebp-0x8]
  425752:	mov    DWORD PTR [ebx-0x4],eax
  425755:	mov    esi,DWORD PTR [ebx+0xc]
  425758:	mov    edi,DWORD PTR [ebx+0x8]
  42575b:	cmp    esi,0xffffffff
  42575e:	je     0x4257c1
  425760:	lea    ecx,[esi+esi*2]
  425763:	cmp    DWORD PTR [edi+ecx*4+0x4],0x0
  425768:	je     0x4257af
  42576a:	push   esi
  42576b:	push   ebp
  42576c:	lea    ebp,[ebx+0x10]
  42576f:	call   DWORD PTR [edi+ecx*4+0x4]
  425773:	pop    ebp
  425774:	pop    esi
  425775:	mov    ebx,DWORD PTR [ebp+0xc]
  425778:	or     eax,eax
  42577a:	je     0x4257af
  42577c:	js     0x4257ba
  42577e:	mov    edi,DWORD PTR [ebx+0x8]
  425781:	push   ebx
  425782:	call   0x4266b0
  425787:	add    esp,0x4
  42578a:	lea    ebp,[ebx+0x10]
  42578d:	push   esi
  42578e:	push   ebx
  42578f:	call   0x4266f2
  425794:	add    esp,0x8
  425797:	lea    ecx,[esi+esi*2]
  42579a:	push   0x1
  42579c:	mov    eax,DWORD PTR [edi+ecx*4+0x8]
  4257a0:	call   0x426786
  4257a5:	mov    eax,DWORD PTR [edi+ecx*4]
  4257a8:	mov    DWORD PTR [ebx+0xc],eax
  4257ab:	call   DWORD PTR [edi+ecx*4+0x8]
  4257af:	mov    edi,DWORD PTR [ebx+0x8]
  4257b2:	lea    ecx,[esi+esi*2]
  4257b5:	mov    esi,DWORD PTR [edi+ecx*4]
  4257b8:	jmp    0x42575b
  4257ba:	mov    eax,0x0
  4257bf:	jmp    0x4257dd
  4257c1:	mov    eax,0x1
  4257c6:	jmp    0x4257dd
  4257c8:	push   ebp
  4257c9:	lea    ebp,[ebx+0x10]
  4257cc:	push   0xffffffff
  4257ce:	push   ebx
  4257cf:	call   0x4266f2
  4257d4:	add    esp,0x8
  4257d7:	pop    ebp
  4257d8:	mov    eax,0x1
  4257dd:	pop    ebp
  4257de:	pop    edi
  4257df:	pop    esi
  4257e0:	pop    ebx
  4257e1:	mov    esp,ebp
  4257e3:	pop    ebp
  4257e4:	ret    
  4257e5:	push   ebp
  4257e6:	mov    ecx,DWORD PTR [esp+0x8]
  4257ea:	mov    ebp,DWORD PTR [ecx]
  4257ec:	mov    eax,DWORD PTR [ecx+0x1c]
  4257ef:	push   eax
  4257f0:	mov    eax,DWORD PTR [ecx+0x18]
  4257f3:	push   eax
  4257f4:	call   0x4266f2
  4257f9:	add    esp,0x8
  4257fc:	pop    ebp
  4257fd:	ret    0x4
  425800:	call   0x42370d
  425805:	add    eax,0x8
  425808:	ret    
  425809:	push   0x14
  42580b:	push   0x428768
  425810:	call   0x423858
  425815:	mov    edi,DWORD PTR [ebp+0x8]
  425818:	xor    ebx,ebx
  42581a:	cmp    edi,ebx
  42581c:	jne    0x42582c
  42581e:	push   DWORD PTR [ebp+0xc]
  425821:	call   0x424582
  425826:	pop    ecx
  425827:	jmp    0x4259b0
  42582c:	mov    esi,DWORD PTR [ebp+0xc]
  42582f:	cmp    esi,ebx
  425831:	jne    0x42583f
  425833:	push   edi
  425834:	call   0x42446a
  425839:	pop    ecx
  42583a:	jmp    0x4259ae
  42583f:	cmp    DWORD PTR ds:0x45d144,0x3
  425846:	jne    0x42597a
  42584c:	mov    DWORD PTR [ebp-0x1c],ebx
  42584f:	cmp    esi,0xffffffe0
  425852:	ja     0x425949
  425858:	push   0x4
  42585a:	call   0x423a1f
  42585f:	pop    ecx
  425860:	mov    DWORD PTR [ebp-0x4],ebx
  425863:	push   edi
  425864:	call   0x424c42
  425869:	pop    ecx
  42586a:	mov    DWORD PTR [ebp-0x20],eax
  42586d:	cmp    eax,ebx
  42586f:	je     0x425919
  425875:	cmp    esi,DWORD PTR ds:0x45cf04
  42587b:	ja     0x4258c9
  42587d:	push   esi
  42587e:	push   edi
  42587f:	push   eax
  425880:	call   0x425142
  425885:	add    esp,0xc
  425888:	test   eax,eax
  42588a:	je     0x425891
  42588c:	mov    DWORD PTR [ebp-0x1c],edi
  42588f:	jmp    0x4258c9
  425891:	push   esi
  425892:	call   0x425421
  425897:	pop    ecx
  425898:	mov    DWORD PTR [ebp-0x1c],eax
  42589b:	cmp    eax,ebx
  42589d:	je     0x4258c9
  42589f:	mov    eax,DWORD PTR [edi-0x4]
  4258a2:	dec    eax
  4258a3:	mov    DWORD PTR [ebp-0x24],eax
  4258a6:	cmp    eax,esi
  4258a8:	jb     0x4258ac
  4258aa:	mov    eax,esi
  4258ac:	push   eax
  4258ad:	push   edi
  4258ae:	push   DWORD PTR [ebp-0x1c]
  4258b1:	call   0x4245a0
  4258b6:	push   edi
  4258b7:	call   0x424c42
  4258bc:	mov    DWORD PTR [ebp-0x20],eax
  4258bf:	push   edi
  4258c0:	push   eax
  4258c1:	call   0x424c6d
  4258c6:	add    esp,0x18
  4258c9:	cmp    DWORD PTR [ebp-0x1c],ebx
  4258cc:	jne    0x425919
  4258ce:	cmp    esi,ebx
  4258d0:	jne    0x4258d8
  4258d2:	xor    esi,esi
  4258d4:	inc    esi
  4258d5:	mov    DWORD PTR [ebp+0xc],esi
  4258d8:	add    esi,0xf
  4258db:	and    esi,0xfffffff0
  4258de:	mov    DWORD PTR [ebp+0xc],esi
  4258e1:	push   esi
  4258e2:	push   ebx
  4258e3:	push   DWORD PTR ds:0x45d140
  4258e9:	call   DWORD PTR ds:0x4280a4
  4258ef:	mov    DWORD PTR [ebp-0x1c],eax
  4258f2:	cmp    eax,ebx
  4258f4:	je     0x425919
  4258f6:	mov    eax,DWORD PTR [edi-0x4]
  4258f9:	dec    eax
  4258fa:	mov    DWORD PTR [ebp-0x24],eax
  4258fd:	cmp    eax,esi
  4258ff:	jb     0x425903
  425901:	mov    eax,esi
  425903:	push   eax
  425904:	push   edi
  425905:	push   DWORD PTR [ebp-0x1c]
  425908:	call   0x4245a0
  42590d:	push   edi
  42590e:	push   DWORD PTR [ebp-0x20]
  425911:	call   0x424c6d
  425916:	add    esp,0x14
  425919:	or     DWORD PTR [ebp-0x4],0xffffffff
  42591d:	call   0x425971
  425922:	cmp    DWORD PTR [ebp-0x20],ebx
  425925:	jne    0x425949
  425927:	cmp    esi,ebx
  425929:	jne    0x42592e
  42592b:	xor    esi,esi
  42592d:	inc    esi
  42592e:	add    esi,0xf
  425931:	and    esi,0xfffffff0
  425934:	mov    DWORD PTR [ebp+0xc],esi
  425937:	push   esi
  425938:	push   edi
  425939:	push   ebx
  42593a:	push   DWORD PTR ds:0x45d140
  425940:	call   DWORD PTR ds:0x4280b0
  425946:	mov    DWORD PTR [ebp-0x1c],eax
  425949:	mov    eax,DWORD PTR [ebp-0x1c]
  42594c:	cmp    eax,ebx
  42594e:	jne    0x4259b0
  425950:	cmp    DWORD PTR ds:0x45cdc8,ebx
  425956:	je     0x4259b0
  425958:	push   esi
  425959:	call   0x426142
  42595e:	pop    ecx
  42595f:	test   eax,eax
  425961:	jne    0x42584c
  425967:	jmp    0x4259ae
  425969:	xor    ebx,ebx
  42596b:	mov    esi,DWORD PTR [ebp+0xc]
  42596e:	mov    edi,DWORD PTR [ebp+0x8]
  425971:	push   0x4
  425973:	call   0x42398b
  425978:	pop    ecx
  425979:	ret    
  42597a:	xor    eax,eax
  42597c:	cmp    esi,0xffffffe0
  42597f:	ja     0x425997
  425981:	cmp    esi,ebx
  425983:	jne    0x425988
  425985:	xor    esi,esi
  425987:	inc    esi
  425988:	push   esi
  425989:	push   edi
  42598a:	push   ebx
  42598b:	push   DWORD PTR ds:0x45d140
  425991:	call   DWORD PTR ds:0x4280b0
  425997:	cmp    eax,ebx
  425999:	jne    0x4259b0
  42599b:	cmp    DWORD PTR ds:0x45cdc8,ebx
  4259a1:	je     0x4259b0
  4259a3:	push   esi
  4259a4:	call   0x426142
  4259a9:	pop    ecx
  4259aa:	test   eax,eax
  4259ac:	jne    0x42597a
  4259ae:	xor    eax,eax
  4259b0:	call   0x423893
  4259b5:	ret    
  4259b6:	push   0x10
  4259b8:	push   0x428778
  4259bd:	call   0x423858
  4259c2:	cmp    DWORD PTR ds:0x45d144,0x3
  4259c9:	jne    0x425a05
  4259cb:	push   0x4
  4259cd:	call   0x423a1f
  4259d2:	pop    ecx
  4259d3:	and    DWORD PTR [ebp-0x4],0x0
  4259d7:	mov    esi,DWORD PTR [ebp+0x8]
  4259da:	push   esi
  4259db:	call   0x424c42
  4259e0:	pop    ecx
  4259e1:	mov    DWORD PTR [ebp-0x1c],eax
  4259e4:	test   eax,eax
  4259e6:	je     0x4259f3
  4259e8:	mov    esi,DWORD PTR [esi-0x4]
  4259eb:	sub    esi,0x9
  4259ee:	mov    DWORD PTR [ebp-0x20],esi
  4259f1:	jmp    0x4259f6
  4259f3:	mov    esi,DWORD PTR [ebp-0x20]
  4259f6:	or     DWORD PTR [ebp-0x4],0xffffffff
  4259fa:	call   0x425a23
  4259ff:	cmp    DWORD PTR [ebp-0x1c],0x0
  425a03:	jne    0x425a18
  425a05:	push   DWORD PTR [ebp+0x8]
  425a08:	push   0x0
  425a0a:	push   DWORD PTR ds:0x45d140
  425a10:	call   DWORD PTR ds:0x4280b4
  425a16:	mov    esi,eax
  425a18:	mov    eax,esi
  425a1a:	call   0x423893
  425a1f:	ret    
  425a20:	mov    esi,DWORD PTR [ebp-0x20]
  425a23:	push   0x4
  425a25:	call   0x42398b
  425a2a:	pop    ecx
  425a2b:	ret    
  425a2c:	push   ebp
  425a2d:	mov    ebp,esp
  425a2f:	sub    esp,0x10
  425a32:	push   esi
  425a33:	lea    eax,[ebp-0x8]
  425a36:	push   eax
  425a37:	call   DWORD PTR ds:0x4280c4
  425a3d:	mov    esi,DWORD PTR [ebp-0x4]
  425a40:	xor    esi,DWORD PTR [ebp-0x8]
  425a43:	call   DWORD PTR ds:0x4280c0
  425a49:	xor    esi,eax
  425a4b:	call   DWORD PTR ds:0x42806c
  425a51:	xor    esi,eax
  425a53:	call   DWORD PTR ds:0x4280bc
  425a59:	xor    esi,eax
  425a5b:	lea    eax,[ebp-0x10]
  425a5e:	push   eax
  425a5f:	call   DWORD PTR ds:0x4280b8
  425a65:	mov    eax,DWORD PTR [ebp-0xc]
  425a68:	xor    eax,DWORD PTR [ebp-0x10]
  425a6b:	xor    esi,eax
  425a6d:	mov    DWORD PTR ds:0x45c430,esi
  425a73:	jne    0x425a7f
  425a75:	mov    DWORD PTR ds:0x45c430,0xbb40e64e
  425a7f:	pop    esi
  425a80:	leave  
  425a81:	ret    
  425a82:	push   0x118
  425a87:	push   0x428928
  425a8c:	call   0x423858
  425a91:	mov    eax,ds:0x45c430
  425a96:	xor    eax,DWORD PTR [ebp+0x4]
  425a99:	mov    DWORD PTR [ebp-0x1c],eax
  425a9c:	mov    eax,ds:0x45cd98
  425aa1:	xor    ecx,ecx
  425aa3:	cmp    eax,ecx
  425aa5:	je     0x425ac6
  425aa7:	mov    DWORD PTR [ebp-0x4],ecx
  425aaa:	push   DWORD PTR [ebp+0xc]
  425aad:	push   DWORD PTR [ebp+0x8]
  425ab0:	call   eax
  425ab2:	pop    ecx
  425ab3:	pop    ecx
  425ab4:	or     DWORD PTR [ebp-0x4],0xffffffff
  425ab8:	jmp    0x425bc4
  425abd:	xor    eax,eax
  425abf:	inc    eax
  425ac0:	ret    
  425ac1:	mov    esp,DWORD PTR [ebp-0x18]
  425ac4:	jmp    0x425ab4
  425ac6:	mov    eax,DWORD PTR [ebp+0x8]
  425ac9:	dec    eax
  425aca:	je     0x425adf
  425acc:	mov    edi,0x428904
  425ad1:	mov    DWORD PTR [ebp-0x20],0x428850
  425ad8:	mov    esi,0xd4
  425add:	jmp    0x425af0
  425adf:	mov    edi,0x428830
  425ae4:	mov    DWORD PTR [ebp-0x20],0x428790
  425aeb:	mov    esi,0xb9
  425af0:	mov    BYTE PTR [ebp-0x24],cl
  425af3:	push   0x104
  425af8:	lea    eax,[ebp-0x128]
  425afe:	push   eax
  425aff:	push   ecx
  425b00:	call   DWORD PTR ds:0x42803c
  425b06:	test   eax,eax
  425b08:	jne    0x425b1d
  425b0a:	push   0x428484
  425b0f:	lea    eax,[ebp-0x128]
  425b15:	push   eax
  425b16:	call   0x423c40
  425b1b:	pop    ecx
  425b1c:	pop    ecx
  425b1d:	lea    ebx,[ebp-0x128]
  425b23:	lea    eax,[ebp-0x128]
  425b29:	push   eax
  425b2a:	call   0x423e70
  425b2f:	pop    ecx
  425b30:	add    eax,0xb
  425b33:	cmp    eax,0x3c
  425b36:	jbe    0x425b61
  425b38:	lea    eax,[ebp-0x128]
  425b3e:	push   eax
  425b3f:	call   0x423e70
  425b44:	mov    ebx,eax
  425b46:	lea    eax,[ebp-0x128]
  425b4c:	sub    eax,0x31
  425b4f:	add    ebx,eax
  425b51:	push   0x3
  425b53:	push   0x428480
  425b58:	push   ebx
  425b59:	call   0x423d40
  425b5e:	add    esp,0x10
  425b61:	push   ebx
  425b62:	call   0x423e70
  425b67:	pop    ecx
  425b68:	lea    eax,[eax+esi*1+0xc]
  425b6c:	add    eax,0x3
  425b6f:	and    eax,0xfffffffc
  425b72:	call   0x4238b0
  425b77:	mov    DWORD PTR [ebp-0x18],esp
  425b7a:	mov    esi,esp
  425b7c:	push   edi
  425b7d:	push   esi
  425b7e:	call   0x423c40
  425b83:	mov    edi,0x428460
  425b88:	push   edi
  425b89:	push   esi
  425b8a:	call   0x423c50
  425b8f:	push   0x428784
  425b94:	push   esi
  425b95:	call   0x423c50
  425b9a:	push   ebx
  425b9b:	push   esi
  425b9c:	call   0x423c50
  425ba1:	push   edi
  425ba2:	push   esi
  425ba3:	call   0x423c50
  425ba8:	push   DWORD PTR [ebp-0x20]
  425bab:	push   esi
  425bac:	call   0x423c50
  425bb1:	push   0x12010
  425bb6:	push   0x428438
  425bbb:	push   esi
  425bbc:	call   0x423b42
  425bc1:	add    esp,0x3c
  425bc4:	push   0x3
  425bc6:	call   0x422cc6
  425bcb:	int3   
  425bcc:	push   0x38
  425bce:	push   0x428d48
  425bd3:	call   0x423858
  425bd8:	xor    ebx,ebx
  425bda:	cmp    DWORD PTR ds:0x45cdbc,ebx
  425be0:	jne    0x425c1a
  425be2:	push   ebx
  425be3:	push   ebx
  425be4:	xor    esi,esi
  425be6:	inc    esi
  425be7:	push   esi
  425be8:	push   0x428d44
  425bed:	push   0x100
  425bf2:	push   ebx
  425bf3:	call   DWORD PTR ds:0x4280d0
  425bf9:	test   eax,eax
  425bfb:	je     0x425c05
  425bfd:	mov    DWORD PTR ds:0x45cdbc,esi
  425c03:	jmp    0x425c1a
  425c05:	call   DWORD PTR ds:0x428010
  425c0b:	cmp    eax,0x78
  425c0e:	jne    0x425c1a
  425c10:	mov    DWORD PTR ds:0x45cdbc,0x2
  425c1a:	cmp    DWORD PTR [ebp+0x14],ebx
  425c1d:	jle    0x425c3a
  425c1f:	mov    ecx,DWORD PTR [ebp+0x14]
  425c22:	mov    eax,DWORD PTR [ebp+0x10]
  425c25:	dec    ecx
  425c26:	cmp    BYTE PTR [eax],bl
  425c28:	je     0x425c32
  425c2a:	inc    eax
  425c2b:	cmp    ecx,ebx
  425c2d:	jne    0x425c25
  425c2f:	or     ecx,0xffffffff
  425c32:	or     eax,0xffffffff
  425c35:	sub    eax,ecx
  425c37:	add    DWORD PTR [ebp+0x14],eax
  425c3a:	mov    eax,ds:0x45cdbc
  425c3f:	cmp    eax,0x2
  425c42:	je     0x425e24
  425c48:	cmp    eax,ebx
  425c4a:	je     0x425e24
  425c50:	cmp    eax,0x1
  425c53:	jne    0x425e57
  425c59:	xor    edi,edi
  425c5b:	mov    DWORD PTR [ebp-0x1c],edi
  425c5e:	mov    DWORD PTR [ebp-0x20],ebx
  425c61:	mov    DWORD PTR [ebp-0x24],ebx
  425c64:	cmp    DWORD PTR [ebp+0x20],ebx
  425c67:	jne    0x425c71
  425c69:	mov    eax,ds:0x45cdb4
  425c6e:	mov    DWORD PTR [ebp+0x20],eax
  425c71:	push   ebx
  425c72:	push   ebx
  425c73:	push   DWORD PTR [ebp+0x14]
  425c76:	push   DWORD PTR [ebp+0x10]
  425c79:	xor    eax,eax
  425c7b:	cmp    DWORD PTR [ebp+0x24],ebx
  425c7e:	setne  al
  425c81:	lea    eax,[eax*8+0x1]
  425c88:	push   eax
  425c89:	push   DWORD PTR [ebp+0x20]
  425c8c:	call   DWORD PTR ds:0x4280cc
  425c92:	mov    esi,eax
  425c94:	mov    DWORD PTR [ebp-0x28],esi
  425c97:	cmp    esi,ebx
  425c99:	je     0x425e57
  425c9f:	mov    DWORD PTR [ebp-0x4],0x1
  425ca6:	lea    eax,[esi+esi*1]
  425ca9:	add    eax,0x3
  425cac:	and    eax,0xfffffffc
  425caf:	call   0x4238b0
  425cb4:	mov    DWORD PTR [ebp-0x18],esp
  425cb7:	mov    eax,esp
  425cb9:	mov    DWORD PTR [ebp-0x2c],eax
  425cbc:	or     DWORD PTR [ebp-0x4],0xffffffff
  425cc0:	jmp    0x425cdd
  425cc2:	xor    eax,eax
  425cc4:	inc    eax
  425cc5:	ret    
  425cc6:	mov    esp,DWORD PTR [ebp-0x18]
  425cc9:	call   0x426cf5
  425cce:	xor    ebx,ebx
  425cd0:	mov    DWORD PTR [ebp-0x2c],ebx
  425cd3:	or     DWORD PTR [ebp-0x4],0xffffffff
  425cd7:	mov    edi,DWORD PTR [ebp-0x1c]
  425cda:	mov    esi,DWORD PTR [ebp-0x28]
  425cdd:	cmp    DWORD PTR [ebp-0x2c],ebx
  425ce0:	jne    0x425cfe
  425ce2:	lea    eax,[esi+esi*1]
  425ce5:	push   eax
  425ce6:	call   0x424582
  425ceb:	pop    ecx
  425cec:	mov    DWORD PTR [ebp-0x2c],eax
  425cef:	cmp    eax,ebx
  425cf1:	je     0x425e57
  425cf7:	mov    DWORD PTR [ebp-0x20],0x1
  425cfe:	push   esi
  425cff:	push   DWORD PTR [ebp-0x2c]
  425d02:	push   DWORD PTR [ebp+0x14]
  425d05:	push   DWORD PTR [ebp+0x10]
  425d08:	push   0x1
  425d0a:	push   DWORD PTR [ebp+0x20]
  425d0d:	call   DWORD PTR ds:0x4280cc
  425d13:	test   eax,eax
  425d15:	je     0x425e01
  425d1b:	push   ebx
  425d1c:	push   ebx
  425d1d:	push   esi
  425d1e:	push   DWORD PTR [ebp-0x2c]
  425d21:	push   DWORD PTR [ebp+0xc]
  425d24:	push   DWORD PTR [ebp+0x8]
  425d27:	call   DWORD PTR ds:0x4280d0
  425d2d:	mov    edi,eax
  425d2f:	mov    DWORD PTR [ebp-0x1c],edi
  425d32:	cmp    edi,ebx
  425d34:	je     0x425e01
  425d3a:	test   BYTE PTR [ebp+0xd],0x4
  425d3e:	je     0x425d6d
  425d40:	cmp    DWORD PTR [ebp+0x1c],ebx
  425d43:	je     0x425e01
  425d49:	cmp    edi,DWORD PTR [ebp+0x1c]
  425d4c:	jg     0x425e01
  425d52:	push   DWORD PTR [ebp+0x1c]
  425d55:	push   DWORD PTR [ebp+0x18]
  425d58:	push   esi
  425d59:	push   DWORD PTR [ebp-0x2c]
  425d5c:	push   DWORD PTR [ebp+0xc]
  425d5f:	push   DWORD PTR [ebp+0x8]
  425d62:	call   DWORD PTR ds:0x4280d0
  425d68:	jmp    0x425e01
  425d6d:	mov    DWORD PTR [ebp-0x4],0x2
  425d74:	lea    eax,[edi+edi*1]
  425d77:	add    eax,0x3
  425d7a:	and    eax,0xfffffffc
  425d7d:	call   0x4238b0
  425d82:	mov    DWORD PTR [ebp-0x18],esp
  425d85:	mov    eax,esp
  425d87:	mov    DWORD PTR [ebp-0x30],eax
  425d8a:	or     DWORD PTR [ebp-0x4],0xffffffff
  425d8e:	jmp    0x425dab
  425d90:	xor    eax,eax
  425d92:	inc    eax
  425d93:	ret    
  425d94:	mov    esp,DWORD PTR [ebp-0x18]
  425d97:	call   0x426cf5
  425d9c:	xor    ebx,ebx
  425d9e:	mov    DWORD PTR [ebp-0x30],ebx
  425da1:	or     DWORD PTR [ebp-0x4],0xffffffff
  425da5:	mov    edi,DWORD PTR [ebp-0x1c]
  425da8:	mov    esi,DWORD PTR [ebp-0x28]
  425dab:	cmp    DWORD PTR [ebp-0x30],ebx
  425dae:	jne    0x425dc8
  425db0:	lea    eax,[edi+edi*1]
  425db3:	push   eax
  425db4:	call   0x424582
  425db9:	pop    ecx
  425dba:	mov    DWORD PTR [ebp-0x30],eax
  425dbd:	cmp    eax,ebx
  425dbf:	je     0x425e01
  425dc1:	mov    DWORD PTR [ebp-0x24],0x1
  425dc8:	push   edi
  425dc9:	push   DWORD PTR [ebp-0x30]
  425dcc:	push   esi
  425dcd:	push   DWORD PTR [ebp-0x2c]
  425dd0:	push   DWORD PTR [ebp+0xc]
  425dd3:	push   DWORD PTR [ebp+0x8]
  425dd6:	call   DWORD PTR ds:0x4280d0
  425ddc:	test   eax,eax
  425dde:	je     0x425e01
  425de0:	push   ebx
  425de1:	push   ebx
  425de2:	cmp    DWORD PTR [ebp+0x1c],ebx
  425de5:	jne    0x425deb
  425de7:	push   ebx
  425de8:	push   ebx
  425de9:	jmp    0x425df1
  425deb:	push   DWORD PTR [ebp+0x1c]
  425dee:	push   DWORD PTR [ebp+0x18]
  425df1:	push   edi
  425df2:	push   DWORD PTR [ebp-0x30]
  425df5:	push   ebx
  425df6:	push   DWORD PTR [ebp+0x20]
  425df9:	call   DWORD PTR ds:0x428050
  425dff:	mov    edi,eax
  425e01:	cmp    DWORD PTR [ebp-0x24],ebx
  425e04:	je     0x425e0f
  425e06:	push   DWORD PTR [ebp-0x30]
  425e09:	call   0x42446a
  425e0e:	pop    ecx
  425e0f:	cmp    DWORD PTR [ebp-0x20],ebx
  425e12:	je     0x425e1d
  425e14:	push   DWORD PTR [ebp-0x2c]
  425e17:	call   0x42446a
  425e1c:	pop    ecx
  425e1d:	mov    eax,edi
  425e1f:	jmp    0x425f7f
  425e24:	mov    DWORD PTR [ebp-0x34],ebx
  425e27:	xor    edi,edi
  425e29:	mov    DWORD PTR [ebp-0x38],ebx
  425e2c:	cmp    DWORD PTR [ebp+0x8],ebx
  425e2f:	jne    0x425e39
  425e31:	mov    eax,ds:0x45cda4
  425e36:	mov    DWORD PTR [ebp+0x8],eax
  425e39:	cmp    DWORD PTR [ebp+0x20],ebx
  425e3c:	jne    0x425e46
  425e3e:	mov    eax,ds:0x45cdb4
  425e43:	mov    DWORD PTR [ebp+0x20],eax
  425e46:	push   DWORD PTR [ebp+0x8]
  425e49:	call   0x426add
  425e4e:	pop    ecx
  425e4f:	mov    DWORD PTR [ebp-0x3c],eax
  425e52:	cmp    eax,0xffffffff
  425e55:	jne    0x425e5e
  425e57:	xor    eax,eax
  425e59:	jmp    0x425f7f
  425e5e:	cmp    eax,DWORD PTR [ebp+0x20]
  425e61:	je     0x425f55
  425e67:	push   ebx
  425e68:	push   ebx
  425e69:	lea    ecx,[ebp+0x14]
  425e6c:	push   ecx
  425e6d:	push   DWORD PTR [ebp+0x10]
  425e70:	push   eax
  425e71:	push   DWORD PTR [ebp+0x20]
  425e74:	call   0x426b26
  425e79:	add    esp,0x18
  425e7c:	mov    DWORD PTR [ebp-0x34],eax
  425e7f:	cmp    eax,ebx
  425e81:	je     0x425e57
  425e83:	push   ebx
  425e84:	push   ebx
  425e85:	push   DWORD PTR [ebp+0x14]
  425e88:	push   eax
  425e89:	push   DWORD PTR [ebp+0xc]
  425e8c:	push   DWORD PTR [ebp+0x8]
  425e8f:	call   DWORD PTR ds:0x4280c8
  425e95:	mov    esi,eax
  425e97:	mov    DWORD PTR [ebp-0x40],esi
  425e9a:	cmp    esi,ebx
  425e9c:	je     0x425f44
  425ea2:	mov    DWORD PTR [ebp-0x4],ebx
  425ea5:	add    eax,0x3
  425ea8:	and    eax,0xfffffffc
  425eab:	call   0x4238b0
  425eb0:	mov    DWORD PTR [ebp-0x18],esp
  425eb3:	mov    edi,esp
  425eb5:	mov    DWORD PTR [ebp-0x44],edi
  425eb8:	push   esi
  425eb9:	push   ebx
  425eba:	push   edi
  425ebb:	call   0x426160
  425ec0:	add    esp,0xc
  425ec3:	jmp    0x425ed5
  425ec5:	xor    eax,eax
  425ec7:	inc    eax
  425ec8:	ret    
  425ec9:	mov    esp,DWORD PTR [ebp-0x18]
  425ecc:	call   0x426cf5
  425ed1:	xor    ebx,ebx
  425ed3:	xor    edi,edi
  425ed5:	or     DWORD PTR [ebp-0x4],0xffffffff
  425ed9:	cmp    edi,ebx
  425edb:	jne    0x425f00
  425edd:	push   DWORD PTR [ebp-0x40]
  425ee0:	call   0x424582
  425ee5:	pop    ecx
  425ee6:	mov    edi,eax
  425ee8:	cmp    edi,ebx
  425eea:	je     0x425f1d
  425eec:	push   DWORD PTR [ebp-0x40]
  425eef:	push   ebx
  425ef0:	push   edi
  425ef1:	call   0x426160
  425ef6:	add    esp,0xc
  425ef9:	mov    DWORD PTR [ebp-0x38],0x1
  425f00:	push   DWORD PTR [ebp-0x40]
  425f03:	push   edi
  425f04:	push   DWORD PTR [ebp+0x14]
  425f07:	push   DWORD PTR [ebp-0x34]
  425f0a:	push   DWORD PTR [ebp+0xc]
  425f0d:	push   DWORD PTR [ebp+0x8]
  425f10:	call   DWORD PTR ds:0x4280c8
  425f16:	mov    DWORD PTR [ebp-0x40],eax
  425f19:	cmp    eax,ebx
  425f1b:	jne    0x425f21
  425f1d:	xor    esi,esi
  425f1f:	jmp    0x425f47
  425f21:	push   DWORD PTR [ebp+0x1c]
  425f24:	push   DWORD PTR [ebp+0x18]
  425f27:	lea    eax,[ebp-0x40]
  425f2a:	push   eax
  425f2b:	push   edi
  425f2c:	push   DWORD PTR [ebp+0x20]
  425f2f:	push   DWORD PTR [ebp-0x3c]
  425f32:	call   0x426b26
  425f37:	add    esp,0x18
  425f3a:	mov    esi,eax
  425f3c:	neg    esi
  425f3e:	sbb    esi,esi
  425f40:	neg    esi
  425f42:	jmp    0x425f47
  425f44:	mov    esi,DWORD PTR [ebp-0x48]
  425f47:	cmp    DWORD PTR [ebp-0x38],ebx
  425f4a:	je     0x425f6f
  425f4c:	push   edi
  425f4d:	call   0x42446a
  425f52:	pop    ecx
  425f53:	jmp    0x425f6f
  425f55:	push   DWORD PTR [ebp+0x1c]
  425f58:	push   DWORD PTR [ebp+0x18]
  425f5b:	push   DWORD PTR [ebp+0x14]
  425f5e:	push   DWORD PTR [ebp+0x10]
  425f61:	push   DWORD PTR [ebp+0xc]
  425f64:	push   DWORD PTR [ebp+0x8]
  425f67:	call   DWORD PTR ds:0x4280c8
  425f6d:	mov    esi,eax
  425f6f:	cmp    DWORD PTR [ebp-0x34],ebx
  425f72:	je     0x425f7d
  425f74:	push   DWORD PTR [ebp-0x34]
  425f77:	call   0x42446a
  425f7c:	pop    ecx
  425f7d:	mov    eax,esi
  425f7f:	lea    esp,[ebp-0x54]
  425f82:	call   0x423893
  425f87:	ret    
  425f88:	push   0x1c
  425f8a:	push   0x428d70
  425f8f:	call   0x423858
  425f94:	xor    esi,esi
  425f96:	cmp    DWORD PTR ds:0x45cdc0,esi
  425f9c:	jne    0x425fd3
  425f9e:	lea    eax,[ebp-0x1c]
  425fa1:	push   eax
  425fa2:	xor    edi,edi
  425fa4:	inc    edi
  425fa5:	push   edi
  425fa6:	push   0x428d44
  425fab:	push   edi
  425fac:	call   DWORD PTR ds:0x4280d8
  425fb2:	test   eax,eax
  425fb4:	je     0x425fbe
  425fb6:	mov    DWORD PTR ds:0x45cdc0,edi
  425fbc:	jmp    0x425fd3
  425fbe:	call   DWORD PTR ds:0x428010
  425fc4:	cmp    eax,0x78
  425fc7:	jne    0x425fd3
  425fc9:	mov    DWORD PTR ds:0x45cdc0,0x2
  425fd3:	mov    eax,ds:0x45cdc0
  425fd8:	cmp    eax,0x2
  425fdb:	je     0x4260cb
  425fe1:	cmp    eax,esi
  425fe3:	je     0x4260cb
  425fe9:	cmp    eax,0x1
  425fec:	jne    0x4260f1
  425ff2:	mov    DWORD PTR [ebp-0x20],esi
  425ff5:	mov    DWORD PTR [ebp-0x24],esi
  425ff8:	cmp    DWORD PTR [ebp+0x18],esi
  425ffb:	jne    0x426005
  425ffd:	mov    eax,ds:0x45cdb4
  426002:	mov    DWORD PTR [ebp+0x18],eax
  426005:	push   esi
  426006:	push   esi
  426007:	push   DWORD PTR [ebp+0x10]
  42600a:	push   DWORD PTR [ebp+0xc]
  42600d:	xor    eax,eax
  42600f:	cmp    DWORD PTR [ebp+0x20],esi
  426012:	setne  al
  426015:	lea    eax,[eax*8+0x1]
  42601c:	push   eax
  42601d:	push   DWORD PTR [ebp+0x18]
  426020:	call   DWORD PTR ds:0x4280cc
  426026:	mov    edi,eax
  426028:	mov    DWORD PTR [ebp-0x28],edi
  42602b:	test   edi,edi
  42602d:	je     0x4260f1
  426033:	and    DWORD PTR [ebp-0x4],0x0
  426037:	lea    ebx,[edi+edi*1]
  42603a:	mov    eax,ebx
  42603c:	add    eax,0x3
  42603f:	and    eax,0xfffffffc
  426042:	call   0x4238b0
  426047:	mov    DWORD PTR [ebp-0x18],esp
  42604a:	mov    esi,esp
  42604c:	mov    DWORD PTR [ebp-0x2c],esi
  42604f:	push   ebx
  426050:	push   0x0
  426052:	push   esi
  426053:	call   0x426160
  426058:	add    esp,0xc
  42605b:	or     DWORD PTR [ebp-0x4],0xffffffff
  42605f:	jmp    0x426076
  426061:	xor    eax,eax
  426063:	inc    eax
  426064:	ret    
  426065:	mov    esp,DWORD PTR [ebp-0x18]
  426068:	call   0x426cf5
  42606d:	xor    esi,esi
  42606f:	or     DWORD PTR [ebp-0x4],0xffffffff
  426073:	mov    edi,DWORD PTR [ebp-0x28]
  426076:	test   esi,esi
  426078:	jne    0x426091
  42607a:	push   edi
  42607b:	push   0x2
  42607d:	call   0x424978
  426082:	pop    ecx
  426083:	pop    ecx
  426084:	mov    esi,eax
  426086:	test   esi,esi
  426088:	je     0x4260f1
  42608a:	mov    DWORD PTR [ebp-0x24],0x1
  426091:	push   edi
  426092:	push   esi
  426093:	push   DWORD PTR [ebp+0x10]
  426096:	push   DWORD PTR [ebp+0xc]
  426099:	push   0x1
  42609b:	push   DWORD PTR [ebp+0x18]
  42609e:	call   DWORD PTR ds:0x4280cc
  4260a4:	test   eax,eax
  4260a6:	je     0x4260b9
  4260a8:	push   DWORD PTR [ebp+0x14]
  4260ab:	push   eax
  4260ac:	push   esi
  4260ad:	push   DWORD PTR [ebp+0x8]
  4260b0:	call   DWORD PTR ds:0x4280d8
  4260b6:	mov    DWORD PTR [ebp-0x20],eax
  4260b9:	cmp    DWORD PTR [ebp-0x24],0x0
  4260bd:	je     0x4260c6
  4260bf:	push   esi
  4260c0:	call   0x42446a
  4260c5:	pop    ecx
  4260c6:	mov    eax,DWORD PTR [ebp-0x20]
  4260c9:	jmp    0x426139
  4260cb:	mov    ebx,DWORD PTR [ebp+0x1c]
  4260ce:	cmp    ebx,esi
  4260d0:	jne    0x4260d8
  4260d2:	mov    ebx,DWORD PTR ds:0x45cda4
  4260d8:	mov    edi,DWORD PTR [ebp+0x18]
  4260db:	test   edi,edi
  4260dd:	jne    0x4260e5
  4260df:	mov    edi,DWORD PTR ds:0x45cdb4
  4260e5:	push   ebx
  4260e6:	call   0x426add
  4260eb:	pop    ecx
  4260ec:	cmp    eax,0xffffffff
  4260ef:	jne    0x4260f5
  4260f1:	xor    eax,eax
  4260f3:	jmp    0x426139
  4260f5:	cmp    eax,edi
  4260f7:	je     0x426117
  4260f9:	push   0x0
  4260fb:	push   0x0
  4260fd:	lea    ecx,[ebp+0x10]
  426100:	push   ecx
  426101:	push   DWORD PTR [ebp+0xc]
  426104:	push   eax
  426105:	push   edi
  426106:	call   0x426b26
  42610b:	add    esp,0x18
  42610e:	mov    esi,eax
  426110:	test   esi,esi
  426112:	je     0x4260f1
  426114:	mov    DWORD PTR [ebp+0xc],esi
  426117:	push   DWORD PTR [ebp+0x14]
  42611a:	push   DWORD PTR [ebp+0x10]
  42611d:	push   DWORD PTR [ebp+0xc]
  426120:	push   DWORD PTR [ebp+0x8]
  426123:	push   ebx
  426124:	call   DWORD PTR ds:0x4280d4
  42612a:	mov    edi,eax
  42612c:	test   esi,esi
  42612e:	je     0x426137
  426130:	push   esi
  426131:	call   0x42446a
  426136:	pop    ecx
  426137:	mov    eax,edi
  426139:	lea    esp,[ebp-0x38]
  42613c:	call   0x423893
  426141:	ret    
  426142:	mov    eax,ds:0x45cdc4
  426147:	test   eax,eax
  426149:	je     0x42615a
  42614b:	push   DWORD PTR [esp+0x4]
  42614f:	call   eax
  426151:	test   eax,eax
  426153:	pop    ecx
  426154:	je     0x42615a
  426156:	xor    eax,eax
  426158:	inc    eax
  426159:	ret    
  42615a:	xor    eax,eax
  42615c:	ret    
  42615d:	int3   
  42615e:	int3   
  42615f:	int3   
  426160:	mov    edx,DWORD PTR [esp+0xc]
  426164:	mov    ecx,DWORD PTR [esp+0x4]
  426168:	test   edx,edx
  42616a:	je     0x4261bb
  42616c:	xor    eax,eax
  42616e:	mov    al,BYTE PTR [esp+0x8]
  426172:	push   edi
  426173:	mov    edi,ecx
  426175:	cmp    edx,0x4
  426178:	jb     0x4261ab
  42617a:	neg    ecx
  42617c:	and    ecx,0x3
  42617f:	je     0x42618d
  426181:	sub    edx,ecx
  426183:	mov    BYTE PTR [edi],al
  426185:	add    edi,0x1
  426188:	sub    ecx,0x1
  42618b:	jne    0x426183
  42618d:	mov    ecx,eax
  42618f:	shl    eax,0x8
  426192:	add    eax,ecx
  426194:	mov    ecx,eax
  426196:	shl    eax,0x10
  426199:	add    eax,ecx
  42619b:	mov    ecx,edx
  42619d:	and    edx,0x3
  4261a0:	shr    ecx,0x2
  4261a3:	je     0x4261ab
  4261a5:	rep stos DWORD PTR es:[edi],eax
  4261a7:	test   edx,edx
  4261a9:	je     0x4261b5
  4261ab:	mov    BYTE PTR [edi],al
  4261ad:	add    edi,0x1
  4261b0:	sub    edx,0x1
  4261b3:	jne    0x4261ab
  4261b5:	mov    eax,DWORD PTR [esp+0x8]
  4261b9:	pop    edi
  4261ba:	ret    
  4261bb:	mov    eax,DWORD PTR [esp+0x4]
  4261bf:	ret    
  4261c0:	push   esi
  4261c1:	mov    esi,DWORD PTR [esp+0x8]
  4261c5:	test   esi,esi
  4261c7:	je     0x42634e
  4261cd:	push   DWORD PTR [esi+0x4]
  4261d0:	call   0x42446a
  4261d5:	push   DWORD PTR [esi+0x8]
  4261d8:	call   0x42446a
  4261dd:	push   DWORD PTR [esi+0xc]
  4261e0:	call   0x42446a
  4261e5:	push   DWORD PTR [esi+0x10]
  4261e8:	call   0x42446a
  4261ed:	push   DWORD PTR [esi+0x14]
  4261f0:	call   0x42446a
  4261f5:	push   DWORD PTR [esi+0x18]
  4261f8:	call   0x42446a
  4261fd:	push   DWORD PTR [esi]
  4261ff:	call   0x42446a
  426204:	push   DWORD PTR [esi+0x20]
  426207:	call   0x42446a
  42620c:	push   DWORD PTR [esi+0x24]
  42620f:	call   0x42446a
  426214:	push   DWORD PTR [esi+0x28]
  426217:	call   0x42446a
  42621c:	push   DWORD PTR [esi+0x2c]
  42621f:	call   0x42446a
  426224:	push   DWORD PTR [esi+0x30]
  426227:	call   0x42446a
  42622c:	push   DWORD PTR [esi+0x34]
  42622f:	call   0x42446a
  426234:	push   DWORD PTR [esi+0x1c]
  426237:	call   0x42446a
  42623c:	push   DWORD PTR [esi+0x38]
  42623f:	call   0x42446a
  426244:	push   DWORD PTR [esi+0x3c]
  426247:	call   0x42446a
  42624c:	add    esp,0x40
  42624f:	push   DWORD PTR [esi+0x40]
  426252:	call   0x42446a
  426257:	push   DWORD PTR [esi+0x44]
  42625a:	call   0x42446a
  42625f:	push   DWORD PTR [esi+0x48]
  426262:	call   0x42446a
  426267:	push   DWORD PTR [esi+0x4c]
  42626a:	call   0x42446a
  42626f:	push   DWORD PTR [esi+0x50]
  426272:	call   0x42446a
  426277:	push   DWORD PTR [esi+0x54]
  42627a:	call   0x42446a
  42627f:	push   DWORD PTR [esi+0x58]
  426282:	call   0x42446a
  426287:	push   DWORD PTR [esi+0x5c]
  42628a:	call   0x42446a
  42628f:	push   DWORD PTR [esi+0x60]
  426292:	call   0x42446a
  426297:	push   DWORD PTR [esi+0x64]
  42629a:	call   0x42446a
  42629f:	push   DWORD PTR [esi+0x68]
  4262a2:	call   0x42446a
  4262a7:	push   DWORD PTR [esi+0x6c]
  4262aa:	call   0x42446a
  4262af:	push   DWORD PTR [esi+0x70]
  4262b2:	call   0x42446a
  4262b7:	push   DWORD PTR [esi+0x74]
  4262ba:	call   0x42446a
  4262bf:	push   DWORD PTR [esi+0x78]
  4262c2:	call   0x42446a
  4262c7:	push   DWORD PTR [esi+0x7c]
  4262ca:	call   0x42446a
  4262cf:	add    esp,0x40
  4262d2:	push   DWORD PTR [esi+0x80]
  4262d8:	call   0x42446a
  4262dd:	push   DWORD PTR [esi+0x84]
  4262e3:	call   0x42446a
  4262e8:	push   DWORD PTR [esi+0x88]
  4262ee:	call   0x42446a
  4262f3:	push   DWORD PTR [esi+0x8c]
  4262f9:	call   0x42446a
  4262fe:	push   DWORD PTR [esi+0x90]
  426304:	call   0x42446a
  426309:	push   DWORD PTR [esi+0x94]
  42630f:	call   0x42446a
  426314:	push   DWORD PTR [esi+0x98]
  42631a:	call   0x42446a
  42631f:	push   DWORD PTR [esi+0x9c]
  426325:	call   0x42446a
  42632a:	push   DWORD PTR [esi+0xa0]
  426330:	call   0x42446a
  426335:	push   DWORD PTR [esi+0xa4]
  42633b:	call   0x42446a
  426340:	push   DWORD PTR [esi+0xa8]
  426346:	call   0x42446a
  42634b:	add    esp,0x2c
  42634e:	pop    esi
  42634f:	ret    
  426350:	push   esi
  426351:	mov    esi,DWORD PTR [esp+0x8]
  426355:	test   esi,esi
  426357:	je     0x4263ad
  426359:	mov    eax,DWORD PTR [esi]
  42635b:	mov    ecx,DWORD PTR ds:0x45c934
  426361:	cmp    eax,DWORD PTR [ecx]
  426363:	je     0x426374
  426365:	cmp    eax,DWORD PTR ds:0x45c904
  42636b:	je     0x426374
  42636d:	push   eax
  42636e:	call   0x42446a
  426373:	pop    ecx
  426374:	mov    eax,DWORD PTR [esi+0x4]
  426377:	mov    ecx,DWORD PTR ds:0x45c934
  42637d:	cmp    eax,DWORD PTR [ecx+0x4]
  426380:	je     0x426391
  426382:	cmp    eax,DWORD PTR ds:0x45c908
  426388:	je     0x426391
  42638a:	push   eax
  42638b:	call   0x42446a
  426390:	pop    ecx
  426391:	mov    esi,DWORD PTR [esi+0x8]
  426394:	mov    eax,ds:0x45c934
  426399:	cmp    esi,DWORD PTR [eax+0x8]
  42639c:	je     0x4263ad
  42639e:	cmp    esi,DWORD PTR ds:0x45c90c
  4263a4:	je     0x4263ad
  4263a6:	push   esi
  4263a7:	call   0x42446a
  4263ac:	pop    ecx
  4263ad:	pop    esi
  4263ae:	ret    
  4263af:	push   esi
  4263b0:	mov    esi,DWORD PTR [esp+0x8]
  4263b4:	test   esi,esi
  4263b6:	je     0x426486
  4263bc:	mov    eax,DWORD PTR [esi+0xc]
  4263bf:	mov    ecx,DWORD PTR ds:0x45c934
  4263c5:	cmp    eax,DWORD PTR [ecx+0xc]
  4263c8:	je     0x4263d9
  4263ca:	cmp    eax,DWORD PTR ds:0x45c910
  4263d0:	je     0x4263d9
  4263d2:	push   eax
  4263d3:	call   0x42446a
  4263d8:	pop    ecx
  4263d9:	mov    eax,DWORD PTR [esi+0x10]
  4263dc:	mov    ecx,DWORD PTR ds:0x45c934
  4263e2:	cmp    eax,DWORD PTR [ecx+0x10]
  4263e5:	je     0x4263f6
  4263e7:	cmp    eax,DWORD PTR ds:0x45c914
  4263ed:	je     0x4263f6
  4263ef:	push   eax
  4263f0:	call   0x42446a
  4263f5:	pop    ecx
  4263f6:	mov    eax,DWORD PTR [esi+0x14]
  4263f9:	mov    ecx,DWORD PTR ds:0x45c934
  4263ff:	cmp    eax,DWORD PTR [ecx+0x14]
  426402:	je     0x426413
  426404:	cmp    eax,DWORD PTR ds:0x45c918
  42640a:	je     0x426413
  42640c:	push   eax
  42640d:	call   0x42446a
  426412:	pop    ecx
  426413:	mov    eax,DWORD PTR [esi+0x18]
  426416:	mov    ecx,DWORD PTR ds:0x45c934
  42641c:	cmp    eax,DWORD PTR [ecx+0x18]
  42641f:	je     0x426430
  426421:	cmp    eax,DWORD PTR ds:0x45c91c
  426427:	je     0x426430
  426429:	push   eax
  42642a:	call   0x42446a
  42642f:	pop    ecx
  426430:	mov    eax,DWORD PTR [esi+0x1c]
  426433:	mov    ecx,DWORD PTR ds:0x45c934
  426439:	cmp    eax,DWORD PTR [ecx+0x1c]
  42643c:	je     0x42644d
  42643e:	cmp    eax,DWORD PTR ds:0x45c920
  426444:	je     0x42644d
  426446:	push   eax
  426447:	call   0x42446a
  42644c:	pop    ecx
  42644d:	mov    eax,DWORD PTR [esi+0x20]
  426450:	mov    ecx,DWORD PTR ds:0x45c934
  426456:	cmp    eax,DWORD PTR [ecx+0x20]
  426459:	je     0x42646a
  42645b:	cmp    eax,DWORD PTR ds:0x45c924
  426461:	je     0x42646a
  426463:	push   eax
  426464:	call   0x42446a
  426469:	pop    ecx
  42646a:	mov    esi,DWORD PTR [esi+0x24]
  42646d:	mov    eax,ds:0x45c934
  426472:	cmp    esi,DWORD PTR [eax+0x24]
  426475:	je     0x426486
  426477:	cmp    esi,DWORD PTR ds:0x45c928
  42647d:	je     0x426486
  42647f:	push   esi
  426480:	call   0x42446a
  426485:	pop    ecx
  426486:	pop    esi
  426487:	ret    
  426488:	int3   
  426489:	int3   
  42648a:	int3   
  42648b:	int3   
  42648c:	int3   
  42648d:	int3   
  42648e:	int3   
  42648f:	int3   
  426490:	push   ebp
  426491:	mov    ebp,esp
  426493:	push   esi
  426494:	xor    eax,eax
  426496:	push   eax
  426497:	push   eax
  426498:	push   eax
  426499:	push   eax
  42649a:	push   eax
  42649b:	push   eax
  42649c:	push   eax
  42649d:	push   eax
  42649e:	mov    edx,DWORD PTR [ebp+0xc]
  4264a1:	lea    ecx,[ecx+0x0]
  4264a4:	mov    al,BYTE PTR [edx]
  4264a6:	or     al,al
  4264a8:	je     0x4264b3
  4264aa:	add    edx,0x1
  4264ad:	bts    DWORD PTR [esp],eax
  4264b1:	jmp    0x4264a4
  4264b3:	mov    esi,DWORD PTR [ebp+0x8]
  4264b6:	or     ecx,0xffffffff
  4264b9:	lea    ecx,[ecx+0x0]
  4264bc:	add    ecx,0x1
  4264bf:	mov    al,BYTE PTR [esi]
  4264c1:	or     al,al
  4264c3:	je     0x4264ce
  4264c5:	add    esi,0x1
  4264c8:	bt     DWORD PTR [esp],eax
  4264cc:	jae    0x4264bc
  4264ce:	mov    eax,ecx
  4264d0:	add    esp,0x20
  4264d3:	pop    esi
  4264d4:	leave  
  4264d5:	ret    
  4264d6:	int3   
  4264d7:	int3   
  4264d8:	int3   
  4264d9:	int3   
  4264da:	int3   
  4264db:	int3   
  4264dc:	int3   
  4264dd:	int3   
  4264de:	int3   
  4264df:	int3   
  4264e0:	mov    edx,DWORD PTR [esp+0x4]
  4264e4:	mov    ecx,DWORD PTR [esp+0x8]
  4264e8:	test   edx,0x3
  4264ee:	jne    0x42652c
  4264f0:	mov    eax,DWORD PTR [edx]
  4264f2:	cmp    al,BYTE PTR [ecx]
  4264f4:	jne    0x426524
  4264f6:	or     al,al
  4264f8:	je     0x426520
  4264fa:	cmp    ah,BYTE PTR [ecx+0x1]
  4264fd:	jne    0x426524
  4264ff:	or     ah,ah
  426501:	je     0x426520
  426503:	shr    eax,0x10
  426506:	cmp    al,BYTE PTR [ecx+0x2]
  426509:	jne    0x426524
  42650b:	or     al,al
  42650d:	je     0x426520
  42650f:	cmp    ah,BYTE PTR [ecx+0x3]
  426512:	jne    0x426524
  426514:	add    ecx,0x4
  426517:	add    edx,0x4
  42651a:	or     ah,ah
  42651c:	jne    0x4264f0
  42651e:	mov    edi,edi
  426520:	xor    eax,eax
  426522:	ret    
  426523:	nop
  426524:	sbb    eax,eax
  426526:	shl    eax,1
  426528:	add    eax,0x1
  42652b:	ret    
  42652c:	test   edx,0x1
  426532:	je     0x42654c
  426534:	mov    al,BYTE PTR [edx]
  426536:	add    edx,0x1
  426539:	cmp    al,BYTE PTR [ecx]
  42653b:	jne    0x426524
  42653d:	add    ecx,0x1
  426540:	or     al,al
  426542:	je     0x426520
  426544:	test   edx,0x2
  42654a:	je     0x4264f0
  42654c:	mov    ax,WORD PTR [edx]
  42654f:	add    edx,0x2
  426552:	cmp    al,BYTE PTR [ecx]
  426554:	jne    0x426524
  426556:	or     al,al
  426558:	je     0x426520
  42655a:	cmp    ah,BYTE PTR [ecx+0x1]
  42655d:	jne    0x426524
  42655f:	or     ah,ah
  426561:	je     0x426520
  426563:	add    ecx,0x2
  426566:	jmp    0x4264f0
  426568:	int3   
  426569:	int3   
  42656a:	int3   
  42656b:	int3   
  42656c:	int3   
  42656d:	int3   
  42656e:	int3   
  42656f:	int3   
  426570:	mov    eax,DWORD PTR [esp+0xc]
  426574:	test   eax,eax
  426576:	je     0x4265c2
  426578:	mov    edx,DWORD PTR [esp+0x4]
  42657c:	push   esi
  42657d:	push   edi
  42657e:	mov    esi,edx
  426580:	mov    edi,DWORD PTR [esp+0x10]
  426584:	or     edx,edi
  426586:	and    edx,0x3
  426589:	je     0x4265c3
  42658b:	test   eax,0x1
  426590:	je     0x4265a3
  426592:	mov    cl,BYTE PTR [esi]
  426594:	cmp    cl,BYTE PTR [edi]
  426596:	jne    0x4265f0
  426598:	add    esi,0x1
  42659b:	add    edi,0x1
  42659e:	sub    eax,0x1
  4265a1:	je     0x4265c0
  4265a3:	mov    cl,BYTE PTR [esi]
  4265a5:	mov    dl,BYTE PTR [edi]
  4265a7:	cmp    cl,dl
  4265a9:	jne    0x4265f0
  4265ab:	mov    cl,BYTE PTR [esi+0x1]
  4265ae:	mov    dl,BYTE PTR [edi+0x1]
  4265b1:	cmp    cl,dl
  4265b3:	jne    0x4265f0
  4265b5:	add    edi,0x2
  4265b8:	add    esi,0x2
  4265bb:	sub    eax,0x2
  4265be:	jne    0x4265a3
  4265c0:	pop    edi
  4265c1:	pop    esi
  4265c2:	ret    
  4265c3:	mov    ecx,eax
  4265c5:	and    eax,0x3
  4265c8:	shr    ecx,0x2
  4265cb:	je     0x4265f8
  4265cd:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4265cf:	je     0x4265f8
  4265d1:	mov    ecx,DWORD PTR [esi-0x4]
  4265d4:	mov    edx,DWORD PTR [edi-0x4]
  4265d7:	cmp    cl,dl
  4265d9:	jne    0x4265eb
  4265db:	cmp    ch,dh
  4265dd:	jne    0x4265eb
  4265df:	shr    ecx,0x10
  4265e2:	shr    edx,0x10
  4265e5:	cmp    cl,dl
  4265e7:	jne    0x4265eb
  4265e9:	cmp    ch,dh
  4265eb:	mov    eax,0x0
  4265f0:	sbb    eax,eax
  4265f2:	pop    edi
  4265f3:	sbb    eax,0xffffffff
  4265f6:	pop    esi
  4265f7:	ret    
  4265f8:	test   eax,eax
  4265fa:	je     0x4265c0
  4265fc:	mov    edx,DWORD PTR [esi]
  4265fe:	mov    ecx,DWORD PTR [edi]
  426600:	cmp    dl,cl
  426602:	jne    0x4265eb
  426604:	sub    eax,0x1
  426607:	je     0x426625
  426609:	cmp    dh,ch
  42660b:	jne    0x4265eb
  42660d:	sub    eax,0x1
  426610:	je     0x426625
  426612:	and    ecx,0xff0000
  426618:	and    edx,0xff0000
  42661e:	cmp    edx,ecx
  426620:	jne    0x4265eb
  426622:	sub    eax,0x1
  426625:	pop    edi
  426626:	pop    esi
  426627:	ret    
  426628:	int3   
  426629:	int3   
  42662a:	int3   
  42662b:	int3   
  42662c:	int3   
  42662d:	int3   
  42662e:	int3   
  42662f:	int3   
  426630:	push   ebp
  426631:	mov    ebp,esp
  426633:	push   edi
  426634:	push   esi
  426635:	push   ebx
  426636:	mov    ecx,DWORD PTR [ebp+0x10]
  426639:	jecxz  0x426662
  42663b:	mov    ebx,ecx
  42663d:	mov    edi,DWORD PTR [ebp+0x8]
  426640:	mov    esi,edi
  426642:	xor    eax,eax
  426644:	repnz scas al,BYTE PTR es:[edi]
  426646:	neg    ecx
  426648:	add    ecx,ebx
  42664a:	mov    edi,esi
  42664c:	mov    esi,DWORD PTR [ebp+0xc]
  42664f:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426651:	mov    al,BYTE PTR [esi-0x1]
  426654:	xor    ecx,ecx
  426656:	cmp    al,BYTE PTR [edi-0x1]
  426659:	ja     0x426660
  42665b:	je     0x426662
  42665d:	sub    ecx,0x2
  426660:	not    ecx
  426662:	mov    eax,ecx
  426664:	pop    ebx
  426665:	pop    esi
  426666:	pop    edi
  426667:	leave  
  426668:	ret    
  426669:	int3   
  42666a:	int3   
  42666b:	int3   
  42666c:	int3   
  42666d:	int3   
  42666e:	int3   
  42666f:	int3   
  426670:	push   ebp
  426671:	mov    ebp,esp
  426673:	push   esi
  426674:	xor    eax,eax
  426676:	push   eax
  426677:	push   eax
  426678:	push   eax
  426679:	push   eax
  42667a:	push   eax
  42667b:	push   eax
  42667c:	push   eax
  42667d:	push   eax
  42667e:	mov    edx,DWORD PTR [ebp+0xc]
  426681:	lea    ecx,[ecx+0x0]
  426684:	mov    al,BYTE PTR [edx]
  426686:	or     al,al
  426688:	je     0x426693
  42668a:	add    edx,0x1
  42668d:	bts    DWORD PTR [esp],eax
  426691:	jmp    0x426684
  426693:	mov    esi,DWORD PTR [ebp+0x8]
  426696:	mov    edi,edi
  426698:	mov    al,BYTE PTR [esi]
  42669a:	or     al,al
  42669c:	je     0x4266aa
  42669e:	add    esi,0x1
  4266a1:	bt     DWORD PTR [esp],eax
  4266a5:	jae    0x426698
  4266a7:	lea    eax,[esi-0x1]
  4266aa:	add    esp,0x20
  4266ad:	pop    esi
  4266ae:	leave  
  4266af:	ret    
  4266b0:	push   ebp
  4266b1:	mov    ebp,esp
  4266b3:	push   ebx
  4266b4:	push   esi
  4266b5:	push   edi
  4266b6:	push   ebp
  4266b7:	push   0x0
  4266b9:	push   0x0
  4266bb:	push   0x4266c8
  4266c0:	push   DWORD PTR [ebp+0x8]
  4266c3:	call   0x42713e
  4266c8:	pop    ebp
  4266c9:	pop    edi
  4266ca:	pop    esi
  4266cb:	pop    ebx
  4266cc:	mov    esp,ebp
  4266ce:	pop    ebp
  4266cf:	ret    
  4266d0:	mov    ecx,DWORD PTR [esp+0x4]
  4266d4:	test   DWORD PTR [ecx+0x4],0x6
  4266db:	mov    eax,0x1
  4266e0:	je     0x4266f1
  4266e2:	mov    eax,DWORD PTR [esp+0x8]
  4266e6:	mov    edx,DWORD PTR [esp+0x10]
  4266ea:	mov    DWORD PTR [edx],eax
  4266ec:	mov    eax,0x3
  4266f1:	ret    
  4266f2:	push   ebx
  4266f3:	push   esi
  4266f4:	push   edi
  4266f5:	mov    eax,DWORD PTR [esp+0x10]
  4266f9:	push   eax
  4266fa:	push   0xfffffffe
  4266fc:	push   0x4266d0
  426701:	push   DWORD PTR fs:0x0
  426708:	mov    DWORD PTR fs:0x0,esp
  42670f:	mov    eax,DWORD PTR [esp+0x20]
  426713:	mov    ebx,DWORD PTR [eax+0x8]
  426716:	mov    esi,DWORD PTR [eax+0xc]
  426719:	cmp    esi,0xffffffff
  42671c:	je     0x42674c
  42671e:	cmp    esi,DWORD PTR [esp+0x24]
  426722:	je     0x42674c
  426724:	lea    esi,[esi+esi*2]
  426727:	mov    ecx,DWORD PTR [ebx+esi*4]
  42672a:	mov    DWORD PTR [esp+0x8],ecx
  42672e:	mov    DWORD PTR [eax+0xc],ecx
  426731:	cmp    DWORD PTR [ebx+esi*4+0x4],0x0
  426736:	jne    0x42674a
  426738:	push   0x101
  42673d:	mov    eax,DWORD PTR [ebx+esi*4+0x8]
  426741:	call   0x426786
  426746:	call   DWORD PTR [ebx+esi*4+0x8]
  42674a:	jmp    0x42670f
  42674c:	pop    DWORD PTR fs:0x0
  426753:	add    esp,0xc
  426756:	pop    edi
  426757:	pop    esi
  426758:	pop    ebx
  426759:	ret    
  42675a:	xor    eax,eax
  42675c:	mov    ecx,DWORD PTR fs:0x0
  426763:	cmp    DWORD PTR [ecx+0x4],0x4266d0
  42676a:	jne    0x42677c
  42676c:	mov    edx,DWORD PTR [ecx+0xc]
  42676f:	mov    edx,DWORD PTR [edx+0xc]
  426772:	cmp    DWORD PTR [ecx+0x8],edx
  426775:	jne    0x42677c
  426777:	mov    eax,0x1
  42677c:	ret    
  42677d:	push   ebx
  42677e:	push   ecx
  42677f:	mov    ebx,0x45c94c
  426784:	jmp    0x426790
  426786:	push   ebx
  426787:	push   ecx
  426788:	mov    ebx,0x45c94c
  42678d:	mov    ecx,DWORD PTR [ebp+0x8]
  426790:	mov    DWORD PTR [ebx+0x8],ecx
  426793:	mov    DWORD PTR [ebx+0x4],eax
  426796:	mov    DWORD PTR [ebx+0xc],ebp
  426799:	pop    ecx
  42679a:	pop    ebx
  42679b:	ret    0x4
  42679e:	int3   
  42679f:	int3   
  4267a0:	push   ebp
  4267a1:	mov    ebp,esp
  4267a3:	push   edi
  4267a4:	push   esi
  4267a5:	mov    esi,DWORD PTR [ebp+0xc]
  4267a8:	mov    ecx,DWORD PTR [ebp+0x10]
  4267ab:	mov    edi,DWORD PTR [ebp+0x8]
  4267ae:	mov    eax,ecx
  4267b0:	mov    edx,ecx
  4267b2:	add    eax,esi
  4267b4:	cmp    edi,esi
  4267b6:	jbe    0x4267c0
  4267b8:	cmp    edi,eax
  4267ba:	jb     0x42693c
  4267c0:	test   edi,0x3
  4267c6:	jne    0x4267dc
  4267c8:	shr    ecx,0x2
  4267cb:	and    edx,0x3
  4267ce:	cmp    ecx,0x8
  4267d1:	jb     0x4267fc
  4267d3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4267d5:	jmp    DWORD PTR [edx*4+0x4268ec]
  4267dc:	mov    eax,edi
  4267de:	mov    edx,0x3
  4267e3:	sub    ecx,0x4
  4267e6:	jb     0x4267f4
  4267e8:	and    eax,0x3
  4267eb:	add    ecx,eax
  4267ed:	jmp    DWORD PTR [eax*4+0x426800]
  4267f4:	jmp    DWORD PTR [ecx*4+0x4268fc]
  4267fb:	nop
  4267fc:	jmp    DWORD PTR [ecx*4+0x426880]
  426803:	nop
  426804:	adc    BYTE PTR [eax+0x42],ch
  426807:	add    BYTE PTR [eax+ebp*2],bh
  42680a:	inc    edx
  42680b:	add    BYTE PTR [eax+0x68],ah
  42680e:	inc    edx
  42680f:	add    BYTE PTR [ebx],ah
  426811:	ror    DWORD PTR [edx-0x75f877fa],1
  426817:	inc    esi
  426818:	add    DWORD PTR [eax+0x468a0147],ecx
  42681e:	add    al,cl
  426820:	jmp    0x289f027
  426825:	add    esi,0x3
  426828:	add    edi,0x3
  42682b:	cmp    ecx,0x8
  42682e:	jb     0x4267fc
  426830:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426832:	jmp    DWORD PTR [edx*4+0x4268ec]
  426839:	lea    ecx,[ecx+0x0]
  42683c:	and    edx,ecx
  42683e:	mov    al,BYTE PTR [esi]
  426840:	mov    BYTE PTR [edi],al
  426842:	mov    al,BYTE PTR [esi+0x1]
  426845:	shr    ecx,0x2
  426848:	mov    BYTE PTR [edi+0x1],al
  42684b:	add    esi,0x2
  42684e:	add    edi,0x2
  426851:	cmp    ecx,0x8
  426854:	jb     0x4267fc
  426856:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426858:	jmp    DWORD PTR [edx*4+0x4268ec]
  42685f:	nop
  426860:	and    edx,ecx
  426862:	mov    al,BYTE PTR [esi]
  426864:	mov    BYTE PTR [edi],al
  426866:	add    esi,0x1
  426869:	shr    ecx,0x2
  42686c:	add    edi,0x1
  42686f:	cmp    ecx,0x8
  426872:	jb     0x4267fc
  426874:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426876:	jmp    DWORD PTR [edx*4+0x4268ec]
  42687d:	lea    ecx,[ecx+0x0]
  426880:	jecxz  0x4268ea
  426882:	inc    edx
  426883:	add    al,dl
  426885:	push   0x68c80042
  42688a:	inc    edx
  42688b:	add    al,al
  42688d:	push   0x68b80042
  426892:	inc    edx
  426893:	add    BYTE PTR [eax-0x57ffbd98],dh
  426899:	push   0x68a00042
  42689e:	inc    edx
  42689f:	add    BYTE PTR [ebx-0x761b71bc],cl
  4268a5:	inc    esp
  4268a6:	(bad)  
  4268a7:	in     al,0x8b
  4268a9:	inc    esp
  4268aa:	mov    gs,eax
  4268ac:	mov    DWORD PTR [edi+ecx*4-0x18],eax
  4268b0:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
  4268b4:	mov    DWORD PTR [edi+ecx*4-0x14],eax
  4268b8:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
  4268bc:	mov    DWORD PTR [edi+ecx*4-0x10],eax
  4268c0:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
  4268c4:	mov    DWORD PTR [edi+ecx*4-0xc],eax
  4268c8:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
  4268cc:	mov    DWORD PTR [edi+ecx*4-0x8],eax
  4268d0:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
  4268d4:	mov    DWORD PTR [edi+ecx*4-0x4],eax
  4268d8:	lea    eax,[ecx*4+0x0]
  4268df:	add    esi,eax
  4268e1:	add    edi,eax
  4268e3:	jmp    DWORD PTR [edx*4+0x4268ec]
  4268ea:	mov    edi,edi
  4268ec:	cld    
  4268ed:	push   0x69040042
  4268f2:	inc    edx
  4268f3:	add    BYTE PTR [eax],dl
  4268f5:	imul   eax,DWORD PTR [edx+0x0],0x426924
  4268fc:	mov    eax,DWORD PTR [ebp+0x8]
  4268ff:	pop    esi
  426900:	pop    edi
  426901:	leave  
  426902:	ret    
  426903:	nop
  426904:	mov    al,BYTE PTR [esi]
  426906:	mov    BYTE PTR [edi],al
  426908:	mov    eax,DWORD PTR [ebp+0x8]
  42690b:	pop    esi
  42690c:	pop    edi
  42690d:	leave  
  42690e:	ret    
  42690f:	nop
  426910:	mov    al,BYTE PTR [esi]
  426912:	mov    BYTE PTR [edi],al
  426914:	mov    al,BYTE PTR [esi+0x1]
  426917:	mov    BYTE PTR [edi+0x1],al
  42691a:	mov    eax,DWORD PTR [ebp+0x8]
  42691d:	pop    esi
  42691e:	pop    edi
  42691f:	leave  
  426920:	ret    
  426921:	lea    ecx,[ecx+0x0]
  426924:	mov    al,BYTE PTR [esi]
  426926:	mov    BYTE PTR [edi],al
  426928:	mov    al,BYTE PTR [esi+0x1]
  42692b:	mov    BYTE PTR [edi+0x1],al
  42692e:	mov    al,BYTE PTR [esi+0x2]
  426931:	mov    BYTE PTR [edi+0x2],al
  426934:	mov    eax,DWORD PTR [ebp+0x8]
  426937:	pop    esi
  426938:	pop    edi
  426939:	leave  
  42693a:	ret    
  42693b:	nop
  42693c:	lea    esi,[ecx+esi*1-0x4]
  426940:	lea    edi,[ecx+edi*1-0x4]
  426944:	test   edi,0x3
  42694a:	jne    0x426970
  42694c:	shr    ecx,0x2
  42694f:	and    edx,0x3
  426952:	cmp    ecx,0x8
  426955:	jb     0x426964
  426957:	std    
  426958:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42695a:	cld    
  42695b:	jmp    DWORD PTR [edx*4+0x426a88]
  426962:	mov    edi,edi
  426964:	neg    ecx
  426966:	jmp    DWORD PTR [ecx*4+0x426a38]
  42696d:	lea    ecx,[ecx+0x0]
  426970:	mov    eax,edi
  426972:	mov    edx,0x3
  426977:	cmp    ecx,0x4
  42697a:	jb     0x426988
  42697c:	and    eax,0x3
  42697f:	sub    ecx,eax
  426981:	jmp    DWORD PTR [eax*4+0x42698c]
  426988:	jmp    DWORD PTR [ecx*4+0x426a88]
  42698f:	nop
  426990:	pushf  
  426991:	imul   eax,DWORD PTR [edx+0x0],0x4269c0
  426998:	call   0x8a42ac06
  42699d:	inc    esi
  42699e:	add    esp,DWORD PTR [ebx]
  4269a0:	ror    DWORD PTR [eax-0x117cfcb9],1
  4269a6:	add    ecx,eax
  4269a8:	jmp    0x231ecaf
  4269ad:	cmp    ecx,0x8
  4269b0:	jb     0x426964
  4269b2:	std    
  4269b3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4269b5:	cld    
  4269b6:	jmp    DWORD PTR [edx*4+0x426a88]
  4269bd:	lea    ecx,[ecx+0x0]
  4269c0:	mov    al,BYTE PTR [esi+0x3]
  4269c3:	and    edx,ecx
  4269c5:	mov    BYTE PTR [edi+0x3],al
  4269c8:	mov    al,BYTE PTR [esi+0x2]
  4269cb:	shr    ecx,0x2
  4269ce:	mov    BYTE PTR [edi+0x2],al
  4269d1:	sub    esi,0x2
  4269d4:	sub    edi,0x2
  4269d7:	cmp    ecx,0x8
  4269da:	jb     0x426964
  4269dc:	std    
  4269dd:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4269df:	cld    
  4269e0:	jmp    DWORD PTR [edx*4+0x426a88]
  4269e7:	nop
  4269e8:	mov    al,BYTE PTR [esi+0x3]
  4269eb:	and    edx,ecx
  4269ed:	mov    BYTE PTR [edi+0x3],al
  4269f0:	mov    al,BYTE PTR [esi+0x2]
  4269f3:	mov    BYTE PTR [edi+0x2],al
  4269f6:	mov    al,BYTE PTR [esi+0x1]
  4269f9:	shr    ecx,0x2
  4269fc:	mov    BYTE PTR [edi+0x1],al
  4269ff:	sub    esi,0x3
  426a02:	sub    edi,0x3
  426a05:	cmp    ecx,0x8
  426a08:	jb     0x426964
  426a0e:	std    
  426a0f:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426a11:	cld    
  426a12:	jmp    DWORD PTR [edx*4+0x426a88]
  426a19:	lea    ecx,[ecx+0x0]
  426a1c:	cmp    al,0x6a
  426a1e:	inc    edx
  426a1f:	add    BYTE PTR [edx+ebp*2+0x42],al
  426a23:	add    BYTE PTR [edx+ebp*2+0x42],cl
  426a27:	add    BYTE PTR [edx+ebp*2+0x42],dl
  426a2b:	add    BYTE PTR [edx+ebp*2+0x42],bl
  426a2f:	add    BYTE PTR [edx+ebp*2+0x42],ah
  426a33:	add    BYTE PTR [edx+ebp*2+0x42],ch
  426a37:	add    BYTE PTR [edi+0x6a],bh
  426a3a:	inc    edx
  426a3b:	add    BYTE PTR [ebx-0x76e371bc],cl
  426a41:	inc    esp
  426a42:	(bad)  
  426a43:	sbb    al,0x8b
  426a45:	inc    esp
  426a46:	mov    ds,WORD PTR [eax]
  426a48:	mov    DWORD PTR [edi+ecx*4+0x18],eax
  426a4c:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
  426a50:	mov    DWORD PTR [edi+ecx*4+0x14],eax
  426a54:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
  426a58:	mov    DWORD PTR [edi+ecx*4+0x10],eax
  426a5c:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
  426a60:	mov    DWORD PTR [edi+ecx*4+0xc],eax
  426a64:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
  426a68:	mov    DWORD PTR [edi+ecx*4+0x8],eax
  426a6c:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
  426a70:	mov    DWORD PTR [edi+ecx*4+0x4],eax
  426a74:	lea    eax,[ecx*4+0x0]
  426a7b:	add    esi,eax
  426a7d:	add    edi,eax
  426a7f:	jmp    DWORD PTR [edx*4+0x426a88]
  426a86:	mov    edi,edi
  426a88:	cwde   
  426a89:	push   0x42
  426a8b:	add    BYTE PTR [eax-0x4fffbd96],ah
  426a91:	push   0x42
  426a93:	add    ah,al
  426a95:	push   0x42
  426a97:	add    BYTE PTR [ebx+0x5f5e0845],cl
  426a9d:	leave  
  426a9e:	ret    
  426a9f:	nop
  426aa0:	mov    al,BYTE PTR [esi+0x3]
  426aa3:	mov    BYTE PTR [edi+0x3],al
  426aa6:	mov    eax,DWORD PTR [ebp+0x8]
  426aa9:	pop    esi
  426aaa:	pop    edi
  426aab:	leave  
  426aac:	ret    
  426aad:	lea    ecx,[ecx+0x0]
  426ab0:	mov    al,BYTE PTR [esi+0x3]
  426ab3:	mov    BYTE PTR [edi+0x3],al
  426ab6:	mov    al,BYTE PTR [esi+0x2]
  426ab9:	mov    BYTE PTR [edi+0x2],al
  426abc:	mov    eax,DWORD PTR [ebp+0x8]
  426abf:	pop    esi
  426ac0:	pop    edi
  426ac1:	leave  
  426ac2:	ret    
  426ac3:	nop
  426ac4:	mov    al,BYTE PTR [esi+0x3]
  426ac7:	mov    BYTE PTR [edi+0x3],al
  426aca:	mov    al,BYTE PTR [esi+0x2]
  426acd:	mov    BYTE PTR [edi+0x2],al
  426ad0:	mov    al,BYTE PTR [esi+0x1]
  426ad3:	mov    BYTE PTR [edi+0x1],al
  426ad6:	mov    eax,DWORD PTR [ebp+0x8]
  426ad9:	pop    esi
  426ada:	pop    edi
  426adb:	leave  
  426adc:	ret    
  426add:	push   ebp
  426ade:	mov    ebp,esp
  426ae0:	sub    esp,0xc
  426ae3:	mov    eax,ds:0x45c430
  426ae8:	xor    eax,DWORD PTR [ebp+0x4]
  426aeb:	and    BYTE PTR [ebp-0x6],0x0
  426aef:	push   0x6
  426af1:	mov    DWORD PTR [ebp-0x4],eax
  426af4:	lea    eax,[ebp-0xc]
  426af7:	push   eax
  426af8:	push   0x1004
  426afd:	push   DWORD PTR [ebp+0x8]
  426b00:	call   DWORD PTR ds:0x4280dc
  426b06:	test   eax,eax
  426b08:	jne    0x426b0f
  426b0a:	or     eax,0xffffffff
  426b0d:	jmp    0x426b19
  426b0f:	lea    eax,[ebp-0xc]
  426b12:	push   eax
  426b13:	call   0x426e1e
  426b18:	pop    ecx
  426b19:	mov    ecx,DWORD PTR [ebp-0x4]
  426b1c:	xor    ecx,DWORD PTR [ebp+0x4]
  426b1f:	call   0x423f2c
  426b24:	leave  
  426b25:	ret    
  426b26:	push   0x38
  426b28:	push   0x428ea8
  426b2d:	call   0x423858
  426b32:	mov    eax,ds:0x45c430
  426b37:	xor    eax,DWORD PTR [ebp+0x4]
  426b3a:	mov    DWORD PTR [ebp-0x1c],eax
  426b3d:	xor    edi,edi
  426b3f:	mov    DWORD PTR [ebp-0x20],edi
  426b42:	mov    DWORD PTR [ebp-0x24],edi
  426b45:	mov    eax,DWORD PTR [ebp+0x14]
  426b48:	mov    ebx,DWORD PTR [eax]
  426b4a:	mov    DWORD PTR [ebp-0x28],ebx
  426b4d:	mov    DWORD PTR [ebp-0x2c],edi
  426b50:	mov    eax,DWORD PTR [ebp+0x8]
  426b53:	cmp    eax,DWORD PTR [ebp+0xc]
  426b56:	je     0x426ccf
  426b5c:	lea    ecx,[ebp-0x40]
  426b5f:	push   ecx
  426b60:	push   eax
  426b61:	mov    esi,DWORD PTR ds:0x4280a0
  426b67:	call   esi
  426b69:	test   eax,eax
  426b6b:	je     0x426b8d
  426b6d:	cmp    DWORD PTR [ebp-0x40],0x1
  426b71:	jne    0x426b8d
  426b73:	lea    eax,[ebp-0x40]
  426b76:	push   eax
  426b77:	push   DWORD PTR [ebp+0xc]
  426b7a:	call   esi
  426b7c:	test   eax,eax
  426b7e:	je     0x426b8d
  426b80:	cmp    DWORD PTR [ebp-0x40],0x1
  426b84:	jne    0x426b8d
  426b86:	mov    DWORD PTR [ebp-0x2c],0x1
  426b8d:	cmp    DWORD PTR [ebp-0x2c],edi
  426b90:	je     0x426bac
  426b92:	cmp    ebx,0xffffffff
  426b95:	je     0x426b9b
  426b97:	mov    esi,ebx
  426b99:	jmp    0x426ba7
  426b9b:	push   DWORD PTR [ebp+0x10]
  426b9e:	call   0x423e70
  426ba3:	pop    ecx
  426ba4:	mov    esi,eax
  426ba6:	inc    esi
  426ba7:	mov    DWORD PTR [ebp-0x44],esi
  426baa:	jmp    0x426baf
  426bac:	mov    esi,DWORD PTR [ebp-0x44]
  426baf:	cmp    DWORD PTR [ebp-0x2c],edi
  426bb2:	jne    0x426bce
  426bb4:	push   edi
  426bb5:	push   edi
  426bb6:	push   ebx
  426bb7:	push   DWORD PTR [ebp+0x10]
  426bba:	push   0x1
  426bbc:	push   DWORD PTR [ebp+0x8]
  426bbf:	call   DWORD PTR ds:0x4280cc
  426bc5:	mov    esi,eax
  426bc7:	mov    DWORD PTR [ebp-0x44],esi
  426bca:	cmp    esi,edi
  426bcc:	je     0x426c26
  426bce:	mov    DWORD PTR [ebp-0x4],edi
  426bd1:	lea    eax,[esi+esi*1]
  426bd4:	add    eax,0x3
  426bd7:	and    eax,0xfffffffc
  426bda:	call   0x4238b0
  426bdf:	mov    DWORD PTR [ebp-0x18],esp
  426be2:	mov    ebx,esp
  426be4:	mov    DWORD PTR [ebp-0x48],ebx
  426be7:	lea    eax,[esi+esi*1]
  426bea:	push   eax
  426beb:	push   edi
  426bec:	push   ebx
  426bed:	call   0x426160
  426bf2:	add    esp,0xc
  426bf5:	or     DWORD PTR [ebp-0x4],0xffffffff
  426bf9:	jmp    0x426c12
  426bfb:	xor    eax,eax
  426bfd:	inc    eax
  426bfe:	ret    
  426bff:	mov    esp,DWORD PTR [ebp-0x18]
  426c02:	call   0x426cf5
  426c07:	xor    edi,edi
  426c09:	xor    ebx,ebx
  426c0b:	or     DWORD PTR [ebp-0x4],0xffffffff
  426c0f:	mov    esi,DWORD PTR [ebp-0x44]
  426c12:	cmp    ebx,edi
  426c14:	jne    0x426c34
  426c16:	push   esi
  426c17:	push   0x2
  426c19:	call   0x424978
  426c1e:	pop    ecx
  426c1f:	pop    ecx
  426c20:	mov    ebx,eax
  426c22:	cmp    ebx,edi
  426c24:	jne    0x426c2d
  426c26:	xor    eax,eax
  426c28:	jmp    0x426ce1
  426c2d:	mov    DWORD PTR [ebp-0x24],0x1
  426c34:	push   esi
  426c35:	push   ebx
  426c36:	push   DWORD PTR [ebp-0x28]
  426c39:	push   DWORD PTR [ebp+0x10]
  426c3c:	push   0x1
  426c3e:	push   DWORD PTR [ebp+0x8]
  426c41:	call   DWORD PTR ds:0x4280cc
  426c47:	test   eax,eax
  426c49:	je     0x426cd2
  426c4f:	cmp    DWORD PTR [ebp+0x18],edi
  426c52:	je     0x426c74
  426c54:	push   edi
  426c55:	push   edi
  426c56:	push   DWORD PTR [ebp+0x1c]
  426c59:	push   DWORD PTR [ebp+0x18]
  426c5c:	push   esi
  426c5d:	push   ebx
  426c5e:	push   edi
  426c5f:	push   DWORD PTR [ebp+0xc]
  426c62:	call   DWORD PTR ds:0x428050
  426c68:	test   eax,eax
  426c6a:	je     0x426cd2
  426c6c:	mov    eax,DWORD PTR [ebp+0x18]
  426c6f:	mov    DWORD PTR [ebp-0x20],eax
  426c72:	jmp    0x426cd2
  426c74:	cmp    DWORD PTR [ebp-0x2c],edi
  426c77:	jne    0x426c8f
  426c79:	push   edi
  426c7a:	push   edi
  426c7b:	push   edi
  426c7c:	push   edi
  426c7d:	push   esi
  426c7e:	push   ebx
  426c7f:	push   edi
  426c80:	push   DWORD PTR [ebp+0xc]
  426c83:	call   DWORD PTR ds:0x428050
  426c89:	mov    esi,eax
  426c8b:	cmp    esi,edi
  426c8d:	je     0x426cd2
  426c8f:	push   esi
  426c90:	push   0x1
  426c92:	call   0x424978
  426c97:	pop    ecx
  426c98:	pop    ecx
  426c99:	mov    DWORD PTR [ebp-0x20],eax
  426c9c:	cmp    eax,edi
  426c9e:	je     0x426cd2
  426ca0:	push   edi
  426ca1:	push   edi
  426ca2:	push   esi
  426ca3:	push   eax
  426ca4:	push   esi
  426ca5:	push   ebx
  426ca6:	push   edi
  426ca7:	push   DWORD PTR [ebp+0xc]
  426caa:	call   DWORD PTR ds:0x428050
  426cb0:	cmp    eax,edi
  426cb2:	jne    0x426cc2
  426cb4:	push   DWORD PTR [ebp-0x20]
  426cb7:	call   0x42446a
  426cbc:	pop    ecx
  426cbd:	mov    DWORD PTR [ebp-0x20],edi
  426cc0:	jmp    0x426cd2
  426cc2:	cmp    DWORD PTR [ebp-0x28],0xffffffff
  426cc6:	je     0x426cd2
  426cc8:	mov    ecx,DWORD PTR [ebp+0x14]
  426ccb:	mov    DWORD PTR [ecx],eax
  426ccd:	jmp    0x426cd2
  426ccf:	mov    ebx,DWORD PTR [ebp-0x48]
  426cd2:	cmp    DWORD PTR [ebp-0x24],edi
  426cd5:	je     0x426cde
  426cd7:	push   ebx
  426cd8:	call   0x42446a
  426cdd:	pop    ecx
  426cde:	mov    eax,DWORD PTR [ebp-0x20]
  426ce1:	lea    esp,[ebp-0x54]
  426ce4:	mov    ecx,DWORD PTR [ebp-0x1c]
  426ce7:	xor    ecx,DWORD PTR [ebp+0x4]
  426cea:	call   0x423f2c
  426cef:	call   0x423893
  426cf4:	ret    
  426cf5:	push   ebp
  426cf6:	mov    ebp,esp
  426cf8:	sub    esp,0x48
  426cfb:	push   ebx
  426cfc:	push   esi
  426cfd:	push   edi
  426cfe:	push   0x4
  426d00:	pop    eax
  426d01:	call   0x4238b0
  426d06:	mov    ebx,esp
  426d08:	push   0x1c
  426d0a:	lea    eax,[ebp-0x24]
  426d0d:	push   eax
  426d0e:	push   ebx
  426d0f:	call   DWORD PTR ds:0x4280e8
  426d15:	test   eax,eax
  426d17:	je     0x426d8a
  426d19:	mov    edi,DWORD PTR [ebp-0x20]
  426d1c:	lea    eax,[ebp-0x48]
  426d1f:	push   eax
  426d20:	call   DWORD PTR ds:0x4280e4
  426d26:	mov    eax,DWORD PTR [ebp-0x44]
  426d29:	lea    esi,[eax-0x1]
  426d2c:	not    esi
  426d2e:	and    esi,ebx
  426d30:	sub    esi,eax
  426d32:	mov    DWORD PTR [ebp-0x4],eax
  426d35:	mov    eax,ds:0x45cac4
  426d3a:	mov    ecx,eax
  426d3c:	dec    ecx
  426d3d:	neg    ecx
  426d3f:	sbb    ecx,ecx
  426d41:	and    ecx,0xffff1000
  426d47:	add    ecx,0x11000
  426d4d:	add    ecx,edi
  426d4f:	cmp    esi,ecx
  426d51:	jb     0x426d8a
  426d53:	cmp    eax,0x1
  426d56:	je     0x426da2
  426d58:	mov    ebx,edi
  426d5a:	mov    edi,0x1000
  426d5f:	push   0x1c
  426d61:	lea    eax,[ebp-0x24]
  426d64:	push   eax
  426d65:	push   ebx
  426d66:	call   DWORD PTR ds:0x4280e8
  426d6c:	test   eax,eax
  426d6e:	je     0x426d8a
  426d70:	add    ebx,DWORD PTR [ebp-0x18]
  426d73:	test   DWORD PTR [ebp-0x14],edi
  426d76:	je     0x426d5f
  426d78:	test   BYTE PTR [ebp-0xf],0x1
  426d7c:	mov    ebx,DWORD PTR [ebp-0x24]
  426d7f:	je     0x426d86
  426d81:	xor    eax,eax
  426d83:	inc    eax
  426d84:	jmp    0x426dbe
  426d86:	cmp    esi,ebx
  426d88:	jae    0x426d8e
  426d8a:	xor    eax,eax
  426d8c:	jmp    0x426dbe
  426d8e:	push   0x4
  426d90:	push   edi
  426d91:	push   DWORD PTR [ebp-0x4]
  426d94:	push   ebx
  426d95:	call   DWORD PTR ds:0x4280ac
  426d9b:	mov    eax,ds:0x45cac4
  426da0:	jmp    0x426da4
  426da2:	mov    ebx,esi
  426da4:	dec    eax
  426da5:	neg    eax
  426da7:	sbb    eax,eax
  426da9:	and    eax,0x103
  426dae:	lea    ecx,[ebp-0x8]
  426db1:	push   ecx
  426db2:	inc    eax
  426db3:	push   eax
  426db4:	push   DWORD PTR [ebp-0x4]
  426db7:	push   ebx
  426db8:	call   DWORD PTR ds:0x428008
  426dbe:	lea    esp,[ebp-0x54]
  426dc1:	pop    edi
  426dc2:	pop    esi
  426dc3:	pop    ebx
  426dc4:	leave  
  426dc5:	ret    
  426dc6:	int3   
  426dc7:	int3   
  426dc8:	int3   
  426dc9:	int3   
  426dca:	int3   
  426dcb:	int3   
  426dcc:	int3   
  426dcd:	int3   
  426dce:	int3   
  426dcf:	int3   
  426dd0:	push   ebp
  426dd1:	mov    ebp,esp
  426dd3:	push   edi
  426dd4:	push   esi
  426dd5:	push   ebx
  426dd6:	mov    esi,DWORD PTR [ebp+0xc]
  426dd9:	mov    edi,DWORD PTR [ebp+0x8]
  426ddc:	mov    al,0xff
  426dde:	mov    edi,edi
  426de0:	or     al,al
  426de2:	je     0x426e16
  426de4:	mov    al,BYTE PTR [esi]
  426de6:	add    esi,0x1
  426de9:	mov    ah,BYTE PTR [edi]
  426deb:	add    edi,0x1
  426dee:	cmp    ah,al
  426df0:	je     0x426de0
  426df2:	sub    al,0x41
  426df4:	cmp    al,0x1a
  426df6:	sbb    cl,cl
  426df8:	and    cl,0x20
  426dfb:	add    al,cl
  426dfd:	add    al,0x41
  426dff:	xchg   al,ah
  426e01:	sub    al,0x41
  426e03:	cmp    al,0x1a
  426e05:	sbb    cl,cl
  426e07:	and    cl,0x20
  426e0a:	add    al,cl
  426e0c:	add    al,0x41
  426e0e:	cmp    al,ah
  426e10:	je     0x426de0
  426e12:	sbb    al,al
  426e14:	sbb    al,0xff
  426e16:	movsx  eax,al
  426e19:	pop    ebx
  426e1a:	pop    esi
  426e1b:	pop    edi
  426e1c:	leave  
  426e1d:	ret    
  426e1e:	push   esi
  426e1f:	push   edi
  426e20:	call   0x42370d
  426e25:	mov    edi,DWORD PTR [eax+0x64]
  426e28:	cmp    edi,DWORD PTR ds:0x45c58c
  426e2e:	je     0x426e37
  426e30:	call   0x424bbf
  426e35:	mov    edi,eax
  426e37:	mov    esi,DWORD PTR [esp+0xc]
  426e3b:	cmp    DWORD PTR [edi+0x28],0x1
  426e3f:	movzx  eax,BYTE PTR [esi]
  426e42:	jle    0x426e52
  426e44:	push   0x8
  426e46:	push   eax
  426e47:	push   edi
  426e48:	call   0x426ea6
  426e4d:	add    esp,0xc
  426e50:	jmp    0x426e5c
  426e52:	mov    ecx,DWORD PTR [edi+0x48]
  426e55:	movzx  eax,BYTE PTR [ecx+eax*2]
  426e59:	and    eax,0x8
  426e5c:	test   eax,eax
  426e5e:	je     0x426e63
  426e60:	inc    esi
  426e61:	jmp    0x426e3b
  426e63:	movzx  ecx,BYTE PTR [esi]
  426e66:	inc    esi
  426e67:	cmp    ecx,0x2d
  426e6a:	mov    edx,ecx
  426e6c:	je     0x426e73
  426e6e:	cmp    ecx,0x2b
  426e71:	jne    0x426e77
  426e73:	movzx  ecx,BYTE PTR [esi]
  426e76:	inc    esi
  426e77:	xor    eax,eax
  426e79:	cmp    ecx,0x30
  426e7c:	jl     0x426e88
  426e7e:	cmp    ecx,0x39
  426e81:	jg     0x426e88
  426e83:	sub    ecx,0x30
  426e86:	jmp    0x426e8b
  426e88:	or     ecx,0xffffffff
  426e8b:	cmp    ecx,0xffffffff
  426e8e:	je     0x426e9c
  426e90:	lea    eax,[eax+eax*4]
  426e93:	lea    eax,[ecx+eax*2]
  426e96:	movzx  ecx,BYTE PTR [esi]
  426e99:	inc    esi
  426e9a:	jmp    0x426e79
  426e9c:	cmp    edx,0x2d
  426e9f:	pop    edi
  426ea0:	pop    esi
  426ea1:	jne    0x426ea5
  426ea3:	neg    eax
  426ea5:	ret    
  426ea6:	push   ebp
  426ea7:	mov    ebp,esp
  426ea9:	push   ecx
  426eaa:	mov    eax,DWORD PTR [ebp+0xc]
  426ead:	lea    ecx,[eax+0x1]
  426eb0:	cmp    ecx,0x100
  426eb6:	mov    ecx,DWORD PTR [ebp+0x8]
  426eb9:	ja     0x426ec4
  426ebb:	mov    ecx,DWORD PTR [ecx+0x48]
  426ebe:	movzx  eax,WORD PTR [ecx+eax*2]
  426ec2:	jmp    0x426f18
  426ec4:	push   esi
  426ec5:	mov    edx,eax
  426ec7:	sar    edx,0x8
  426eca:	push   edi
  426ecb:	mov    edi,DWORD PTR [ecx+0x48]
  426ece:	movzx  esi,dl
  426ed1:	test   BYTE PTR [edi+esi*2+0x1],0x80
  426ed6:	pop    edi
  426ed7:	pop    esi
  426ed8:	je     0x426ee9
  426eda:	and    BYTE PTR [ebp-0x2],0x0
  426ede:	push   0x2
  426ee0:	mov    BYTE PTR [ebp-0x3],al
  426ee3:	mov    BYTE PTR [ebp-0x4],dl
  426ee6:	pop    eax
  426ee7:	jmp    0x426ef3
  426ee9:	and    BYTE PTR [ebp-0x3],0x0
  426eed:	mov    BYTE PTR [ebp-0x4],al
  426ef0:	xor    eax,eax
  426ef2:	inc    eax
  426ef3:	push   0x1
  426ef5:	push   DWORD PTR [ecx+0x14]
  426ef8:	push   DWORD PTR [ecx+0x4]
  426efb:	lea    ecx,[ebp+0xe]
  426efe:	push   ecx
  426eff:	push   eax
  426f00:	lea    eax,[ebp-0x4]
  426f03:	push   eax
  426f04:	push   0x1
  426f06:	call   0x425f88
  426f0b:	add    esp,0x1c
  426f0e:	test   eax,eax
  426f10:	jne    0x426f14
  426f12:	leave  
  426f13:	ret    
  426f14:	movzx  eax,WORD PTR [ebp+0xe]
  426f18:	and    eax,DWORD PTR [ebp+0x10]
  426f1b:	leave  
  426f1c:	ret    
  426f1d:	int3   
  426f1e:	int3   
  426f1f:	int3   
  426f20:	mov    eax,DWORD PTR [esp+0x8]
  426f24:	mov    ecx,DWORD PTR [esp+0x10]
  426f28:	or     ecx,eax
  426f2a:	mov    ecx,DWORD PTR [esp+0xc]
  426f2e:	jne    0x426f39
  426f30:	mov    eax,DWORD PTR [esp+0x4]
  426f34:	mul    ecx
  426f36:	ret    0x10
  426f39:	push   ebx
  426f3a:	mul    ecx
  426f3c:	mov    ebx,eax
  426f3e:	mov    eax,DWORD PTR [esp+0x8]
  426f42:	mul    DWORD PTR [esp+0x14]
  426f46:	add    ebx,eax
  426f48:	mov    eax,DWORD PTR [esp+0x8]
  426f4c:	mul    ecx
  426f4e:	add    edx,ebx
  426f50:	pop    ebx
  426f51:	ret    0x10
  426f54:	int3   
  426f55:	int3   
  426f56:	int3   
  426f57:	int3   
  426f58:	int3   
  426f59:	int3   
  426f5a:	int3   
  426f5b:	int3   
  426f5c:	int3   
  426f5d:	int3   
  426f5e:	int3   
  426f5f:	int3   
  426f60:	push   ebp
  426f61:	mov    ebp,esp
  426f63:	push   edi
  426f64:	push   esi
  426f65:	push   ebx
  426f66:	mov    ecx,DWORD PTR [ebp+0x10]
  426f69:	or     ecx,ecx
  426f6b:	je     0x426fba
  426f6d:	mov    esi,DWORD PTR [ebp+0x8]
  426f70:	mov    edi,DWORD PTR [ebp+0xc]
  426f73:	mov    bh,0x41
  426f75:	mov    bl,0x5a
  426f77:	mov    dh,0x20
  426f79:	lea    ecx,[ecx+0x0]
  426f7c:	mov    ah,BYTE PTR [esi]
  426f7e:	or     ah,ah
  426f80:	mov    al,BYTE PTR [edi]
  426f82:	je     0x426fab
  426f84:	or     al,al
  426f86:	je     0x426fab
  426f88:	add    esi,0x1
  426f8b:	add    edi,0x1
  426f8e:	cmp    ah,bh
  426f90:	jb     0x426f98
  426f92:	cmp    ah,bl
  426f94:	ja     0x426f98
  426f96:	add    ah,dh
  426f98:	cmp    al,bh
  426f9a:	jb     0x426fa2
  426f9c:	cmp    al,bl
  426f9e:	ja     0x426fa2
  426fa0:	add    al,dh
  426fa2:	cmp    ah,al
  426fa4:	jne    0x426fb1
  426fa6:	sub    ecx,0x1
  426fa9:	jne    0x426f7c
  426fab:	xor    ecx,ecx
  426fad:	cmp    ah,al
  426faf:	je     0x426fba
  426fb1:	mov    ecx,0xffffffff
  426fb6:	jb     0x426fba
  426fb8:	neg    ecx
  426fba:	mov    eax,ecx
  426fbc:	pop    ebx
  426fbd:	pop    esi
  426fbe:	pop    edi
  426fbf:	leave  
  426fc0:	ret    
  426fc1:	int3   
  426fc2:	int3   
  426fc3:	int3   
  426fc4:	int3   
  426fc5:	int3   
  426fc6:	int3   
  426fc7:	int3   
  426fc8:	int3   
  426fc9:	int3   
  426fca:	int3   
  426fcb:	int3   
  426fcc:	int3   
  426fcd:	int3   
  426fce:	int3   
  426fcf:	int3   
  426fd0:	push   esi
  426fd1:	mov    eax,DWORD PTR [esp+0x14]
  426fd5:	or     eax,eax
  426fd7:	jne    0x427001
  426fd9:	mov    ecx,DWORD PTR [esp+0x10]
  426fdd:	mov    eax,DWORD PTR [esp+0xc]
  426fe1:	xor    edx,edx
  426fe3:	div    ecx
  426fe5:	mov    ebx,eax
  426fe7:	mov    eax,DWORD PTR [esp+0x8]
  426feb:	div    ecx
  426fed:	mov    esi,eax
  426fef:	mov    eax,ebx
  426ff1:	mul    DWORD PTR [esp+0x10]
  426ff5:	mov    ecx,eax
  426ff7:	mov    eax,esi
  426ff9:	mul    DWORD PTR [esp+0x10]
  426ffd:	add    edx,ecx
  426fff:	jmp    0x427048
  427001:	mov    ecx,eax
  427003:	mov    ebx,DWORD PTR [esp+0x10]
  427007:	mov    edx,DWORD PTR [esp+0xc]
  42700b:	mov    eax,DWORD PTR [esp+0x8]
  42700f:	shr    ecx,1
  427011:	rcr    ebx,1
  427013:	shr    edx,1
  427015:	rcr    eax,1
  427017:	or     ecx,ecx
  427019:	jne    0x42700f
  42701b:	div    ebx
  42701d:	mov    esi,eax
  42701f:	mul    DWORD PTR [esp+0x14]
  427023:	mov    ecx,eax
  427025:	mov    eax,DWORD PTR [esp+0x10]
  427029:	mul    esi
  42702b:	add    edx,ecx
  42702d:	jb     0x42703d
  42702f:	cmp    edx,DWORD PTR [esp+0xc]
  427033:	ja     0x42703d
  427035:	jb     0x427046
  427037:	cmp    eax,DWORD PTR [esp+0x8]
  42703b:	jbe    0x427046
  42703d:	dec    esi
  42703e:	sub    eax,DWORD PTR [esp+0x10]
  427042:	sbb    edx,DWORD PTR [esp+0x14]
  427046:	xor    ebx,ebx
  427048:	sub    eax,DWORD PTR [esp+0x8]
  42704c:	sbb    edx,DWORD PTR [esp+0xc]
  427050:	neg    edx
  427052:	neg    eax
  427054:	sbb    edx,0x0
  427057:	mov    ecx,edx
  427059:	mov    edx,ebx
  42705b:	mov    ebx,ecx
  42705d:	mov    ecx,eax
  42705f:	mov    eax,esi
  427061:	pop    esi
  427062:	ret    0x10
  427065:	int3   
  427066:	int3   
  427067:	int3   
  427068:	int3   
  427069:	int3   
  42706a:	int3   
  42706b:	int3   
  42706c:	int3   
  42706d:	int3   
  42706e:	int3   
  42706f:	int3   
  427070:	lea    eax,[edx-0x1]
  427073:	pop    ebx
  427074:	ret    
  427075:	lea    esp,[esp+0x0]
  42707c:	lea    esp,[esp+0x0]
  427080:	xor    eax,eax
  427082:	mov    al,BYTE PTR [esp+0x8]
  427086:	push   ebx
  427087:	mov    ebx,eax
  427089:	shl    eax,0x8
  42708c:	mov    edx,DWORD PTR [esp+0x8]
  427090:	test   edx,0x3
  427096:	je     0x4270ad
  427098:	mov    cl,BYTE PTR [edx]
  42709a:	add    edx,0x1
  42709d:	cmp    cl,bl
  42709f:	je     0x427070
  4270a1:	test   cl,cl
  4270a3:	je     0x4270f6
  4270a5:	test   edx,0x3
  4270ab:	jne    0x427098
  4270ad:	or     ebx,eax
  4270af:	push   edi
  4270b0:	mov    eax,ebx
  4270b2:	shl    ebx,0x10
  4270b5:	push   esi
  4270b6:	or     ebx,eax
  4270b8:	mov    ecx,DWORD PTR [edx]
  4270ba:	mov    edi,0x7efefeff
  4270bf:	mov    eax,ecx
  4270c1:	mov    esi,edi
  4270c3:	xor    ecx,ebx
  4270c5:	add    esi,eax
  4270c7:	add    edi,ecx
  4270c9:	xor    ecx,0xffffffff
  4270cc:	xor    eax,0xffffffff
  4270cf:	xor    ecx,edi
  4270d1:	xor    eax,esi
  4270d3:	add    edx,0x4
  4270d6:	and    ecx,0x81010100
  4270dc:	jne    0x4270fa
  4270de:	and    eax,0x81010100
  4270e3:	je     0x4270b8
  4270e5:	and    eax,0x1010100
  4270ea:	jne    0x4270f4
  4270ec:	and    esi,0x80000000
  4270f2:	jne    0x4270b8
  4270f4:	pop    esi
  4270f5:	pop    edi
  4270f6:	pop    ebx
  4270f7:	xor    eax,eax
  4270f9:	ret    
  4270fa:	mov    eax,DWORD PTR [edx-0x4]
  4270fd:	cmp    al,bl
  4270ff:	je     0x427137
  427101:	test   al,al
  427103:	je     0x4270f4
  427105:	cmp    ah,bl
  427107:	je     0x427130
  427109:	test   ah,ah
  42710b:	je     0x4270f4
  42710d:	shr    eax,0x10
  427110:	cmp    al,bl
  427112:	je     0x427129
  427114:	test   al,al
  427116:	je     0x4270f4
  427118:	cmp    ah,bl
  42711a:	je     0x427122
  42711c:	test   ah,ah
  42711e:	je     0x4270f4
  427120:	jmp    0x4270b8
  427122:	pop    esi
  427123:	pop    edi
  427124:	lea    eax,[edx-0x1]
  427127:	pop    ebx
  427128:	ret    
  427129:	lea    eax,[edx-0x2]
  42712c:	pop    esi
  42712d:	pop    edi
  42712e:	pop    ebx
  42712f:	ret    
  427130:	lea    eax,[edx-0x3]
  427133:	pop    esi
  427134:	pop    edi
  427135:	pop    ebx
  427136:	ret    
  427137:	lea    eax,[edx-0x4]
  42713a:	pop    esi
  42713b:	pop    edi
  42713c:	pop    ebx
  42713d:	ret    
  42713e:	jmp    DWORD PTR ds:0x4280e0
